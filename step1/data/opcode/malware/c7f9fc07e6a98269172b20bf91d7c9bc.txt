add
add
add
or
and
add
add
add
add
add
rol
add
add
add
add
and
add
nop
add
add
add
or
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
mov
add
mov
add
fadd
add
add
add
add
add
add
add
add
add
mov
add
or
add
in
add
add
add
add
add
add
add
enter
in
add
push
add
add
add
add
add
add
add
add
add
lock
add
dec
add
add
in
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
dec
add
add
in
add
add
add
add
add
add
add
jo
add
mov
dec
add
add
in
add
add
add
add
add
add
add
cwde
add
add
pop
dec
add
add
in
add
add
add
add
add
add
add
rol
add
or
mov
add
in
add
add
add
add
push
add
add
add
add
js
add
mov
add
add
add
xor
lock
xor
add
add
xor
add
add
push
add
add
add
add
add
loopne
add
or
adc
add
xor
adc
add
add
add
add
add
add
add
add
add
add
push
or
dec
add
add
add
add
add
add
add
add
add
nop
add
add
or
inc
add
add
add
add
add
add
add
add
add
mov
or
add
in
add
add
add
add
add
add
add
loopne
add
mov
dec
add
add
in
add
add
add
add
add
add
add
or
add
in
dec
add
add
in
add
add
add
add
add
add
add
xor
add
cmp
dec
add
add
in
add
add
add
add
add
add
add
pop
add
add
add
in
add
add
add
add
add
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
test
add
inc
adc
add
in
add
add
add
add
add
add
add
rol
add
pushf
push
dec
add
add
in
add
add
add
add
add
add
add
clc
add
add
pop
dec
add
add
add
add
add
add
add
add
add
and
add
sbb
add
in
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
jo
add
cld
pop
dec
add
add
add
add
add
add
add
add
add
test
add
rol
add
add
clc
add
add
add
add
add
add
add
add
add
add
add
rol
sar
inc
add
add
add
add
add
add
add
add
add
add
call
add
sub
add
in
add
add
add
add
add
add
add
adc
dec
add
inc
add
in
add
add
add
add
add
jg
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
pop
add
dec
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
add
add
add
add
sbb
add
inc
push
add
push
add
add
add
add
add
add
push
add
or
add
xor
add
pop
pop
add
add
add
add
add
add
add
add
add
or
add
shl
dec
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
add
add
pop
push
add
in
dec
add
add
add
add
add
add
add
add
add
add
add
add
es
add
add
add
add
add
add
add
add
add
add
test
add
int3
daa
dec
add
add
add
add
add
add
add
add
rol
add
jl
dec
add
add
add
add
add
add
add
add
clc
push
add
xor
dec
add
add
add
add
add
add
add
add
add
add
and
add
cld
xor
mov
add
in
add
add
add
add
add
add
add
dec
pop
add
mov
dec
add
add
add
add
add
add
add
add
add
add
jo
add
xchg
xor
mov
add
in
add
add
add
add
or
add
add
call
sldt
adc
add
cmp
add
pusha
or
adc
add
mov
add
mov
add
fmul
add
add
add
sub
add
push
or
sbb
add
add
add
add
add
add
add
add
add
add
add
and
add
in
add
add
add
add
add
add
add
sub
add
jo
dec
add
add
in
add
add
add
add
add
add
add
push
or
add
add
in
add
add
add
add
add
add
add
js
add
adc
dec
add
add
add
add
add
add
add
add
add
add
mov
aaa
dec
add
add
add
add
add
add
add
add
add
add
enter
add
dec
add
add
in
add
add
add
add
add
add
add
lock
add
add
add
in
add
add
add
add
add
add
add
sbb
add
mov
dec
add
add
add
add
add
add
add
add
add
inc
or
add
cmp
fadd
add
in
add
add
add
add
add
add
add
push
cmp
add
add
in
add
add
add
add
add
add
add
nop
or
add
cmp
add
in
add
add
add
add
add
or
add
or
or
add
lock
add
add
sbb
add
add
add
add
add
add
add
add
add
loopne
add
add
dec
add
add
in
add
add
add
add
add
add
add
or
add
adc
dec
add
add
in
add
add
add
add
add
add
add
xor
add
sub
dec
add
add
add
add
add
add
add
add
cmp
add
jg
add
nop
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
in
add
add
add
add
add
add
add
test
add
dec
ds
add
add
in
add
add
add
add
add
add
add
ror
add
pusha
ds
add
add
in
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
push
add
dec
add
dec
add
inc
add
or
inc
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
inc
inc
add
add
and
sub
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
ins
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
adc
mov
mov
jp
pop
add
sub
push
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
adc
mov
mov
jp
pop
add
xor
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
dec
add
addr16
bound
and
test
sub
imul
add
add
add
outs
add
ins
add
outs
add
add
add
or
pop
jg
sub
in
mov
mov
jg
push
sub
push
add
cmp
das
add
add
ja
ja
add
jns
jne
jns
popa
add
add
outs
add
sub
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
sub
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
or
adc
pop
pop
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
sbb
aaa
xchg
sub
lock
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
cmp
sbb
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
xor
(bad)
jmp
aas
jo
or
or
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
and
add
sub
add
add
add
add
add
arpl
add
pop
push
das
push
(bad)
and
jmp
cmp
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
and
jmp
movlps
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
sub
add
sub
add
add
add
pop
xor
and
jmp
or
add
add
add
and
pusha
ret
and
jmp
inc
jge
or
push
xor
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
cmp
pop
inc
cmp
inc
jle
or
sbb
add
add
or
push
and
(bad)
and
jmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
or
sub
push
inc
cmp
push
adc
add
or
nop
inc
jb
and
jmp
inc
cmp
cmp
push
pop
or
add
dec
add
add
add
add
add
and
add
and
add
push
add
add
add
add
add
and
add
and
add
sub
add
add
add
add
add
add
dec
add
add
and
call
inc
jnp
and
adc
add
add
unpckhps
inc
jbe
and
and
jmp
jae
or
add
add
add
add
add
add
add
push
add
add
add
add
add
add
and
into
and
call
aas
js
and
call
add
add
push
and
inc
jne
pop
inc
je
pop
inc
jbe
pop
aas
je
push
cs
test
pop
and
popa
pop
and
bound
and
bound
and
xor
bound
daa
ss
sbb
xor
pusha
sbb
xor
pop
sbb
xor
sbb
xor
sub
pop
cmp
jne
push
cmp
ja
sbb
add
add
sbb
pop
sbb
aas
jbe
push
ds
sbb
jae
push
cmp
ja
push
inc
jnp
sbb
dec
cmp
dec
xchg
and
pop
dec
xchg
push
dec
test
sbb
test
sbb
inc
cmp
and
jmp
inc
jl
pop
inc
jp
sbb
jbe
and
jmp
cmp
jbe
and
mov
add
add
sbb
push
and
call
cmp
movhps
adc
pop
call
push
imul
sbb
and
jne
and
je
and
sbb
cmp
push
test
sub
xchg
sub
mov
sub
mov
sub
cmp
sbb
cmp
sbb
and
jnp
and
ja
sbb
adc
call
sub
jae
push
sub
and
dec
test
inc
cmp
adc
call
or
push
or
push
cmps
push
test
xor
test
push
or
lods
push
push
scas
push
mov
xor
cmpxchg
xor
mov
xor
stos
call
or
jmp
aaa
push
es
mov
sbb
add
add
or
pop
and
jo
and
and
jg
adc
jns
sbb
(bad)
jmp
push
scas
push
mov
cmp
(bad)
cmp
(bad)
cmp
mov
push
adc
push
mov
xor
(bad)
push
adc
push
adc
mov
jmp
adc
call
cmp
dec
mov
and
or
and
add
add
and
jp
inc
jg
push
inc
jl
and
call
test
adc
sbb
(bad)
cmp
mov
(bad)
cmp
(bad)
(bad)
cmp
sar
sbb
inc
(bad)
inc
(bad)
cmp
(bad)
cmp
inc
(bad)
inc
ret
(bad)
cmp
pop
mov
xor
call
push
jbe
or
dec
call
cmp
and
dec
xchg
sbb
add
add
pop
and
inc
jno
and
call
inc
jge
and
call
adc
add
sbb
or
adc
mov
pop
adc
jmp
sets
sbb
and
inc
lods
jmp
adc
jmp
push
call
add
adc
popa
dec
add
je
and
inc
cmp
inc
jg
sbb
xor
add
inc
jbe
and
pop
inc
jp
pop
inc
jge
and
dec
add
push
add
sbb
jg
sbb
jle
adc
pop
xchg
push
fucomp
dec
cmp
mov
jecxz
dec
fcomip
call
call
add
sbb
outs
call
add
adc
pop
dec
add
or
call
cmp
and
inc
cmp
es
cmp
add
push
or
add
add
dec
cmp
and
call
inc
jnp
and
jmp
inc
cmp
adc
xor
adc
dec
call
add
adc
(bad)
call
dec
push
(bad)
js
jb
cmp
imul
sub
call
push
arpl
jge
dec
call
or
dec
call
add
push
add
dec
add
dec
pop
daa
call
cmp
and
jmp
cmp
inc
cmp
dec
test
and
cmp
add
or
add
add
add
and
fldenv
dec
test
pop
inc
jl
and
call
inc
jp
pop
inc
jge
and
dec
sbb
dec
add
call
sbb
push
and
(bad)
aas
sub
dec
xor
sub
xor
adc
xor
adc
dec
xor
call
sub
dec
aaa
and
call
sbb
or
sub
or
adc
push
push
sbb
jmp
dec
test
and
cmp
inc
cmp
inc
cmp
dec
xchg
sub
dec
add
add
add
add
xor
mov
sbb
js
and
jmp
inc
jp
pop
inc
jnp
and
adc
dec
add
dec
add
call
or
jmp
sub
inc
and
push
cmp
xor
xor
sub
dec
and
arpl
call
sub
aas
xor
inc
add
ud0
push
pop
call
xor
and
jmp
inc
jg
and
jmp
inc
jge
and
jmp
dec
jbe
or
push
sbb
add
add
push
pop
or
cmp
cs
xchg
jmp
inc
mov
and
jmp
inc
fwait
jmp
sub
ins
dec
add
dec
aaa
call
inc
jmp
sub
inc
push
call
and
arpl
push
sub
push
daa
sbb
dec
cmp
jmp
das
jmp
xor
dec
cmp
call
sbb
inc
add
dec
and
pop
or
call
sbb
and
jmp
dec
mov
and
jmp
dec
xchg
push
mov
adc
add
or
or
jecxz
cs
jmp
add
call
pop
push
dec
add
dec
dec
add
xor
cmp
inc
das
and
inc
xor
and
addr16
cmp
xor
pop
push
and
bound
imul
dec
add
and
push
pop
sub
or
sbb
or
add
sbb
daa
mov
dec
mov
push
xor
push
js
xor
mov
jmp
add
call
add
dec
add
or
dec
call
pop
push
push
ds
sbb
pop
inc
push
push
es
xor
adc
dec
cmp
ins
push
xor
jl
dec
call
inc
inc
jmp
and
or
xor
or
and
push
push
inc
call
add
and
cmps
inc
mov
dec
xor
xlat
or
or
or
push
adc
inc
sub
jmp
adc
call
add
jmp
emms
dec
sub
push
push
jle
dec
dec
pop
call
cmp
push
cmp
outs
arpl
inc
inc
push
inc
and
(bad)
jl
push
jmp
push
call
sbb
or
aaa
call
pop
push
call
add
and
nop
jmp
sbb
jmp
cmp
cmp
push
adc
push
sbb
call
add
and
add
imul
mov
test
dec
dec
dec
dec
cmp
popa
pop
inc
jmp
pop
call
jae
dec
pop
pop
call
pop
inc
stos
mov
mov
sar
shl
call
(bad)
cmp
cmp
adc
call
add
and
nop
(bad)
cmp
jl
add
add
add
add
or
adc
jns
cmp
call
or
and
push
mov
ret
movs
mov
scas
mov
lahf
jmp
cmp
or
jo
nop
call
aad
call
out
(bad)
dec
jecxz
dec
loopne
jmp
sbb
call
or
sbb
cmp
sbb
call
or
or
cmps
sbb
jle
sbb
outs
jmp
or
push
add
pop
push
mov
iret
aad
jmp
ror
mov
(bad)
jle
mov
inc
lahf
test
mov
into
fdivrp
scas
retf
fdivr
mov
aam
retf
fsubp
(bad)
jnp
ret
and
nop/reserved
adc
jecxz
sbb
prefetch
sub
add
add
sbb
pushw
sbb
pop
adc
sbb
add
adc
push
dec
(bad)
int3
jmp
int3
jecxz
test
sar
jae
xchg
inc
cmps
lods
jmp
aad
call
fcomp
(bad)
mov
inc
lods
dec
call
sbb
call
inc
scas
add
add
adc
cmp
sbb
pusha
call
jbe
adc
push
dec
dec
jmp
sbb
xchg
lahf
mov
mov
sar
rcl
inc
fcomip
push
call
mov
mov
jmp
jecxz
jmp
test
call
jmp
movs
dec
and
adc
pop
loopne
or
adc
add
add
push
adc
adc
clc
or
inc
jmp
adc
sbb
call
add
adc
push
dec
inc
(bad)
cmp
adc
call
test
cwde
inc
scas
mov
jmp
xor
ss
call
mov
call
sbb
call
sbb
pop
adc
cmp
movlps
and
jl
pop
add
adc
pop
call
add
adc
dec
dec
add
push
xor
pop
ins
mov
ins
mov
mov
(bad)
jmp
sar
cmps
mov
cmps
jmp
push
xchg
dec
mov
inc
cmps
jmp
daa
imul
daa
dec
mov
or
sbb
sbb
pop
sti
nop
push
adc
and
test
push
add
adc
pop
call
add
or
notrack
push
call
mov
xchg
mov
(bad)
jmp
(bad)
(bad)
mov
fucomip
dec
fucomi
dec
fldl2t
dec
(bad)
push
jne
dec
stos
push
sub
cmp
cmp
and
adc
adc
cmp
add
add
add
add
and
pop
call
sbb
call
pcmpeqb
push
add
call
call
add
dec
dec
outs
call
mov
jmp
stos
mov
call
shl
dec
loopne
inc
fdiv
dec
loope
dec
in
inc
fcomip
inc
jecxz
call
sub
push
sub
mov
or
and
add
sub
add
add
or
and
pop
repnz
pop
call
pop
jmp
or
call
divps
sbb
dec
jns
pushf
lods
(bad)
call
movs
mov
mov
stos
(bad)
jle
test
call
retf
jmp
shr
inc
(bad)
mov
(bad)
mov
pop
ins
jmp
and
je
adc
je
adc
sbb
xchg
add
add
sub
ss
outs
jmp
push
(bad)
call
add
sub
dec
jmp
sub
dec
lahf
mov
call
cmp
jne
jmp
cwde
jmp
sahf
push
stos
inc
mov
in
(bad)
jp
mov
inc
xchg
pushf
call
xchg
mov
(bad)
cmp
dec
jmp
sub
or
and
jmp
es
and
inc
cwde
pop
aaa
call
sub
(bad)
xor
jmp
and
push
mov
dec
jmp
jo
pop
gs
pop
jo
sbb
cmps
dec
loop
mov
(bad)
cdq
cmps
lods
push
jmp
imul
mov
movs
mov
jmp
sub
call
sbb
adc
sbb
sub
add
add
cmp
daa
ds
sbb
popa
jmp
cmps
dec
cmps
push
es
xor
inc
push
test
dec
push
pop
jmp
ins
inc
push
jne
addr16
jmp
xchg
inc
stos
mov
jmp
mov
inc
inc
dec
adc
call
pop
push
dec
mov
push
daa
and
sbb
call
adc
call
sbb
sub
add
add
sub
sub
ss
jmp
mov
cmp
dec
call
sbb
xor
cmp
jmp
jno
das
das
xor
or
pop
jmp
mov
inc
pop
fs
ds
inc
jmp
rcl
jae
xchg
cmp
inc
push
cmp
or
(bad)
cmp
inc
call
pop
sbb
call
adc
push
add
add
push
sbb
xor
and
pop
dec
mov
fs
popf
jmp
sub
pop
jmp
sub
push
mov
outs
jae
push
xor
call
cmp
adc
(bad)
cmp
and
inc
inc
inc
call
mov
ret
jb
(bad)
jle
mov
cmps
mov
call
inc
inc
call
sbb
jmp
and
jmp
and
push
xor
cmp
xor
add
add
and
jmp
sub
pop
jmp
es
sbb
sbb
and
and
xor
push
push
jmp
je
cmp
mov
jmp
sub
pop
jmp
sub
inc
push
call
(bad)
xchg
dec
dec
jmp
sub
cmps
jmp
nop
xchg
(bad)
cmp
notrack
and
jmp
das
cs
cmp
aaa
inc
cmp
fmul
push
push
inc
and
and
adc
xor
es
and
call
sbb
call
prefetch
or
(bad)
cmp
jmp
ins
jae
sub
sub
and
push
push
das
xor
push
sbb
call
arpl
imul
xor
xor
sbb
cmp
jo
jl
dec
dec
push
jmp
sub
push
aaa
aaa
(bad)
cmp
ds
cmp
cmp
jmp
and
xor
push
push
push
or
add
add
add
adc
adc
pop
sbb
call
sbb
call
sbb
call
adc
call
sbb
dec
or
pop
sbb
jmp
sub
jmp
and
jmp
sub
and
adc
adc
cmp
cmp
and
push
sbb
sbb
pop
jmp
pop
pop
jmp
and
es
and
xor
xor
cmp
inc
inc
cmp
push
das
push
cs
sub
sub
sub
sub
push
push
push
and
adc
jmp
adc
jmp
sub
sbb
and
adc
adc
adc
(bad)
movups
prefetchw
sub
and
es
jmp
pop
pop
dec
(bad)
ud0
push
push
call
sbb
call
sbb
call
sbb
call
pop
push
jmp
sub
xor
inc
inc
inc
inc
cmp
jmp
and
push
das
call
sbb
push
push
push
push
es
adc
sbb
push
push
sub
sbb
sbb
adc
call
pop
pop
dec
or
and
and
and
sbb
sbb
adc
adc
pop
push
push
call
sbb
call
sbb
call
sbb
jmp
and
jmp
sub
jmp
ss
inc
inc
inc
dec
dec
dec
inc
inc
push
sbb
sbb
sbb
xor
jmp
daa
and
je
or
sbb
add
add
push
push
es
sbb
jmp
sub
jmp
push
sbb
call
adc
call
sbb
and
sbb
sbb
sbb
sbb
adc
adc
adc
adc
call
sbb
jmp
and
jmp
sub
jmp
xor
push
cmp
inc
inc
dec
dec
dec
dec
dec
(bad)
cmp
cmp
push
pop
sbb
call
sbb
xor
cmp
inc
inc
inc
inc
repz
or
push
push
push
sbb
push
push
jecxz
sbb
push
sub
and
push
sbb
call
sbb
call
adc
jmp
daa
call
sbb
call
adc
call
adc
dec
(bad)
ud0
adc
sbb
sbb
and
and
and
xor
(bad)
cmp
cmp
dec
dec
dec
dec
dec
dec
(bad)
ds
sbb
jmp
sub
(bad)
aas
cmp
inc
inc
inc
inc
call
sbb
add
add
add
push
push
push
enter
push
xor
push
xor
sub
sub
sbb
sbb
es
and
sbb
sbb
push
pop
push
call
adc
dec
(bad)
ud0
adc
sbb
sbb
push
pop
push
jmp
sub
push
xor
aas
dec
dec
dec
dec
dec
dec
dec
dec
(bad)
cmp
jmp
pop
push
call
pop
sbb
dec
inc
dec
dec
inc
(bad)
cmp
push
sbb
inc
or
add
add
add
add
add
and
and
adc
xor
inc
push
xor
jmp
es
call
push
pop
call
sbb
call
adc
call
adc
call
pop
adc
jmp
and
jmp
sub
push
aaa
xor
cmp
inc
inc
inc
dec
inc
inc
inc
push
xor
call
sbb
sub
daa
inc
inc
dec
dec
dec
dec
inc
inc
push
cmp
push
cmp
dec
dec
dec
stc
cmp
aaa
lods
add
add
or
or
sub
pop
push
jmp
sub
call
inc
push
xor
daa
sub
jmp
and
call
sbb
call
sbb
call
and
jmp
xor
push
push
cmp
(bad)
cmp
cmp
xor
jmp
and
call
xor
dec
dec
dec
call
push
call
push
dec
dec
(bad)
cmp
push
aaa
xor
(bad)
cmp
aaa
inc
aas
out
adc
adc
pop
pop
pop
and
xor
call
sbb
call
push
call
dec
(bad)
ds
jmp
das
jmp
and
jmp
and
jmp
and
sub
daa
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
and
call
sbb
call
and
(bad)
aas
inc
aas
call
push
call
pop
call
call
push
inc
inc
(bad)
ds
cmp
jmp
sub
(bad)
ds
call
push
pop
add
add
add
add
daa
daa
and
call
push
adc
call
push
inc
cmp
jmp
sub
jmp
sub
sub
sub
daa
jmp
and
call
sbb
push
push
adc
call
adc
call
adc
call
sbb
push
xor
dec
dec
call
push
call
pop
jmp
call
pop
dec
dec
inc
(bad)
cmp
cmp
sub
cmp
push
xor
mov
pop
push
push
je
cmp
(bad)
cmp
aaa
jmp
es
inc
inc
(bad)
cmp
aaa
push
xor
jmp
sub
daa
daa
daa
call
pop
pop
call
push
adc
dec
(bad)
ud0
adc
call
sbb
jmp
sub
(bad)
cmp
cmp
dec
dec
dec
call
push
call
pop
jmp
call
pop
dec
dec
inc
inc
push
xor
jmp
xor
cmp
femms
push
sub
add
add
add
and
and
aas
cmp
push
xor
dec
dec
dec
(bad)
cmp
cmp
xor
xor
and
and
pop
pop
pop
call
adc
dec
adc
call
pop
sbb
(bad)
cmp
dec
inc
dec
dec
call
push
call
pop
jmp
(bad)
call
dec
dec
push
xor
pop
and
jmp
and
push
xor
xor
ss
es
sbb
add
add
or
sbb
and
xor
inc
ds
jmp
push
push
call
push
push
call
sbb
jmp
and
jmp
inc
inc
dec
dec
call
dec
call
push
call
jmp
pop
call
pop
call
push
(bad)
cmp
call
sbb
call
pop
push
jmp
sub
(bad)
cmp
xor
xor
das
sub
cmp
xor
(bad)
cmp
adc
cmp
and
das
cs
cmp
push
cs
(bad)
cmp
cmp
inc
inc
inc
dec
dec
dec
dec
call
push
call
push
call
push
call
pop
call
pop
call
push
call
push
dec
inc
jmp
sub
sbb
sbb
sub
and
(bad)
cmp
xor
xor
push
cs
cmp
xor
cmp
xor
sub
sub
or
or
and
pop
imul
sbb
xor
xor
push
dec
dec
(bad)
ds
inc
dec
dec
call
dec
call
push
call
push
call
pop
call
pop
call
push
call
push
call
dec
dec
inc
push
xor
push
xor
(bad)
cmp
aaa
xor
cmp
xor
cmp
xor
cmp
cmp
sub
daa
mov
pop
push
push
and
pop
jmp
pop
push
dec
dec
(bad)
ds
jmp
sub
jmp
xor
(bad)
ds
cmp
dec
dec
call
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
inc
ds
cmp
aaa
(bad)
aas
cmp
inc
cmp
(bad)
ds
std
and
pop
jae
add
add
and
sub
sub
push
sbb
push
xor
inc
cmp
aaa
xor
jmp
pop
push
jmp
das
push
ss
push
ss
xor
xor
push
xor
push
xor
(bad)
cmp
aaa
(bad)
cmp
cmp
cmp
inc
ds
cmc
sbb
sbb
add
add
sbb
inc
xor
xor
and
es
cmp
cmp
aas
ds
(bad)
aas
cmp
xor
xor
das
push
xor
push
xor
push
xor
push
xor
push
xor
cmp
xor
(bad)
aas
ds
inc
aas
cmp
inc
aas
cmp
inc
inc
inc
(bad)
cmp
rcl
add
add
or
adc
xor
and
sbb
aas
ds
inc
inc
inc
dec
inc
inc
inc
(bad)
ds
(bad)
cmp
aaa
(bad)
cmp
aaa
inc
cmp
inc
inc
inc
dec
inc
inc
inc
inc
aas
inc
aas
dec
inc
inc
jmp
cs
or
or
and
and
daa
daa
daa
lds
add
add
pop
push
jae
inc
inc
dec
dec
dec
dec
dec
inc
(bad)
cmp
xor
inc
cmp
inc
ds
inc
aas
cmp
inc
cmp
cmp
sub
mov
add
add
pop
pop
pop
pop
xor
xor
xor
das
fild
add
push
add
add
and
and
dec
inc
std
push
push
push
call
push
(bad)
cmp
aaa
in
sub
scas
xor
cs
cs
das
das
scas
sub
es
sbb
sbb
or
sub
add
add
(bad)
(bad)
xor
xor
or
or
add
add
sbb
sbb
inc
fst
push
inc
inc
fadd
add
add
add
add
or
pop
add
add
or
pop
pop
sub
sub
adc
add
add
push
push
adc
push
push
adc
add
add
add
(bad)
dec
add
add
(bad)
(bad)
cld
add
loopne
pop
(bad)
(bad)
std
add
lock
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
inc
inc
add
pop
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
cld
add
add
aas
(bad)
(bad)
clc
add
add
aas
(bad)
(bad)
clc
add
add
aas
(bad)
(bad)
cld
add
add
jg
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
jmp
add
pop
(bad)
(bad)
(bad)
inc
add
ud0
(bad)
inc
add
ud0
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
add
add
(bad)
inc
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
add
(bad)
(bad)
(bad)
clc
add
pop
(bad)
(bad)
(bad)
(bad)
clc
add
ud0
(bad)
(bad)
clc
add
pop
(bad)
(bad)
(bad)
(bad)
cld
inc
add
(bad)
(bad)
(bad)
(bad)
cld
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
xor
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
inc
add
add
add
add
dec
add
adc
add
daa
add
adc
add
add
add
das
mov
add
add
add
dec
add
add
add
jle
dec
add
xchg
dec
add
xchg
dec
add
xchg
dec
add
add
add
add
ficom
add
jmp
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
xchg
dec
add
add
add
add
add
add
add
add
dec
add
add
add
dec
add
xchg
dec
add
dec
add
xchg
dec
add
add
xchg
dec
add
add
xchg
dec
add
add
xchg
dec
add
add
sbb
dec
add
xchg
dec
add
add
xor
dec
add
add
inc
xchg
dec
add
add
dec
xchg
dec
add
add
push
xchg
dec
add
add
fs
dec
add
add
jno
dec
add
nop
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
xor
xor
fs
ins
add
dec
dec
dec
cs
ins
add
inc
push
xor
cs
ins
add
dec
xor
cs
ins
add
dec
dec
inc
xor
cs
ins
add
dec
push
push
dec
dec
dec
cs
push
push
add
push
inc
push
dec
xor
cs
ins
add
inc
dec
dec
xor
cs
ins
add
xor
cs
ins
add
inc
inc
push
push
xor
cs
ins
add
dec
inc
push
dec
xor
cs
ins
add
ins
fs
xor
cs
ins
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
ins
push
jb
je
arpl
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
push
imul
jb
add
add
imul
jae
add
ins
imul
ins
dec
jne
add
add
je
outs
jne
add
inc
js
push
gs
dec
jne
inc
add
add
popa
imul
ins
add
add
outs
push
jb
outs
je
jb
add
add
addr16
jo
outs
dec
gs
js
add
add
gs
ins
pop
dec
outs
je
data16
arpl
inc
add
add
push
dec
inc
inc
jb
ins
push
je
imul
push
jb
arpl
outs
jne
gs
jbe
outs
je
add
inc
push
inc
outs
ins
outs
jb
add
add
and
add
push
cdq
push
add
adc
add
add
add
mov
add
add
add
add
mov
add
retf
js
xchg
pushf
pusha
call
pop
mov
sub
sub
lea
mov
cmp
je
lea
mov
cmp
je
mov
mov
mov
sub
mov
add
lea
add
mov
mov
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
sub
add
push
push
call
popa
add
mov
cmp
jne
add
mov
jmp
mov
add
add
cmp
je
add
mov
add
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
push
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmp
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
mov
lea
mov
lea
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
mov
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
push
push
mov
add
push
call
pop
pop
pop
pop
add
loop
popa
popf
jmp
mov
or
je
mov
add
cmp
jne
cmp
jne
cmp
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmp
jne
inc
mov
and
mov
mov
push
push
push
call
pop
pop
pop
pop
cmp
je
mov
mov
push
pop
add
inc
jmp
clc
ret
jmp
push
mov
pusha
push
mov
mov
cld
mov
movs
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
sub
mov
popa
pop
ret
push
call
add
or
inc
and
push
mov
sbb
loope
jge
sbb
add
or
rcr
les
adc
push
mov
push
xor
add
ins
and
jb
mov
inc
adc
cmp
mul
retf
je
je
pusha
add
rcr
dec
jne
adc
or
mov
cmp
xchg
sar
jmp
lea
add
pop
push
push
or
cs
pop
mov
push
jo
dec
fcom
and
add
outs
push
sub
push
push
push
push
call
add
fwait
mov
or
pop
or
jbe
in
(bad)
movs
cmp
lock
dec
push
mov
push
cmp
push
or
mov
mov
enter
fcmovnbe
loop
xor
pop
cmp
test
adc
aam
xchg
ss
xor
inc
or
xchg
add
mov
push
ret
xchg
jbe
adc
inc
inc
enter
add
xor
stos
adc
call
pop
test
push
(bad)
fsubr
retf
call
ins
pop
mov
add
sub
mov
cmp
lds
push
pminub
scas
mov
add
xchg
adc
sbb
inc
pop
and
mov
push
ss
dec
jge
mov
and
retf
jno
adc
int
fstp
add
ret
inc
ror
cmp
test
jae
jge
out
jmp
and
in
xlat
ret
add
or
outs
arpl
cld
je
cmp
add
sub
mov
mov
es
mov
sub
adc
call
cmp
loope
or
jo
sub
adc
add
inc
or
pop
(bad)
loop
inc
cmp
pusha
bndldx
sub
nop
and
pop
add
push
mov
xor
call
mov
mov
cwde
dec
cmp
cmp
stos
add
cwde
lea
push
sub
(bad)
in
dec
setb
cwde
xchg
xchg
adc
xor
xchg
inc
in
je
sub
xchg
xchg
popf
ror
aad
(bad)
std
les
sub
rcr
or
or
push
call
push
adc
jmp
scas
movs
inc
enter
pop
lock
jmp
fdiv
bound
in
lock
mov
push
xchg
inc
add
or
rcl
dec
pushf
loop
sti
add
mov
jmp
dec
mov
pop
push
mov
lods
inc
push
es
inc
push
xchg
fs
es
iret
adc
call
sub
add
sbb
test
push
xor
push
add
jl
xor
out
je
sbb
sub
jge
xchg
mov
sub
push
dec
pop
add
pusha
add
jmp
out
ror
xchg
inc
test
xchg
xor
or
mov
or
xchg
adc
add
add
div
adc
ja
or
xchg
inc
es
dec
dec
arpl
jmp
out
out
mov
sbb
jmp
fist
pop
lods
movs
les
into
and
jns
inc
or
inc
push
cmp
jne
(bad)
fst
inc
and
ret
js
aas
inc
mov
leave
ror
and
leave
push
mov
push
add
call
or
mov
dec
push
call
or
sbb
or
or
dec
inc
jne
in
ret
push
inc
scas
adc
mov
and
daa
rcl
or
scas
pusha
ret
shl
int
or
xor
jo
icebp
je
loope
dec
push
add
pop
int3
cmp
and
dec
adc
loope
or
ins
ror
movs
inc
sub
in
pop
sbb
shl
shl
mov
stos
push
ror
fist
ss
in
jo
inc
mov
mov
shl
or
out
sbb
pop
add
loopne
dec
add
adc
or
or
mov
and
cmp
push
nop
leave
push
mov
fwait
adc
adc
clc
inc
icebp
dec
sbb
add
jecxz
and
lock
sub
mov
xor
sbb
leave
push
dec
add
enter
shl
call
sub
xlat
push
inc
mov
dec
lods
cmp
cmp
call
bound
mov
ret
shl
inc
mov
scas
sub
and
(bad)
mov
push
dec
cmc
test
or
test
es
sbb
xchg
fs
or
(bad)
std
and
sub
sub
push
mov
pusha
mov
jb
dec
add
pop
mov
pop
xlat
lods
mov
inc
mov
xchg
mov
push
lods
xor
adc
iret
icebp
loop
and
loop
sbb
dec
sbb
out
aam
cld
jnp
inc
sbb
mov
sahf
(bad)
mov
xchg
aaa
loop
jne
or
push
sub
pop
repnz
fsub
jb
or
test
(bad)
xchg
sub
mov
sub
popa
add
add
punpckhdq
or
adc
push
mov
je
dec
xor
jmp
xchg
pushf
sub
push
sub
jecxz
xchg
inc
sti
cmc
and
test
cdq
mov
mov
mov
push
or
dec
shl
pop
mov
or
call
push
and
cmp
mov
dec
stos
mov
adc
je
ret
adc
mov
dec
retf
xchg
fldl2e
cmp
jae
fsub
loopne
ret
shl
jmp
and
test
pop
adc
inc
fadd
test
or
arpl
outs
xchg
mov
rcr
push
icebp
adc
jmp
outs
adc
inc
inc
cmp
xchg
cwde
xor
bound
xor
sub
data16
jmp
ja
in
test
fiadd
sar
jno
shr
inc
pushf
cmp
jb
outs
call
mov
sub
jb
out
clc
push
pop
cmp
outs
cmp
mov
lds
ret
add
add
add
pop
add
add
mov
add
xor
add
mov
push
stc
aad
loop
xchg
fisttp
jle
push
xchg
xchg
mov
cld
sub
clc
xchg
and
fdiv
jg
icebp
add
repz
shl
idiv
pop
sub
stos
sti
push
mov
inc
neg
mov
and
xchg
jmp
imul
call
push
(bad)
or
mov
xor
sub
mov
and
loope
xchg
push
stos
xor
xchg
jge
mov
fldpi
jnp
lock
cli
or
xchg
sbb
add
pop
shl
adc
test
sbb
add
std
jle
(bad)
cmps
push
call
sbb
or
pop
xchg
not
int
pop
mov
(bad)
(bad)
mov
sub
std
es
mov
push
mov
push
lods
sub
jnp
mov
sbb
rcl
aaa
loop
test
into
les
cmps
rcl
inc
adc
dec
out
inc
and
sar
push
fisttp
neg
xchg
jne
fdiv
stos
nop
loope
mov
les
inc
mov
(bad)
fs
or
bound
nop
sub
xor
mov
retf
test
ins
dec
clc
out
sub
lods
mov
ins
sbb
mov
push
and
pop
pushf
sub
arpl
mov
(bad)
ficom
pusha
popa
xchg
iret
mov
sub
sbb
xor
mov
jecxz
dec
dec
mov
retf
call
cmps
and
daa
(bad)
call
sbb
dec
(bad)
lods
xor
iret
ds
push
jb
pop
sub
mov
icebp
inc
outs
cmps
push
sub
add
inc
retf
aam
cs
adc
xor
lea
ror
mov
sub
aaa
ss
jg
lds
mov
mov
xlat
jp
out
sub
in
push
dec
inc
sbb
sub
xchg
push
or
imul
dec
jecxz
(bad)
sti
mov
mov
or
xchg
fnstsw
iret
arpl
mov
adc
jle
leave
pop
add
pop
sbb
pop
lds
std
es
in
inc
add
fmul
add
cmc
aaa
arpl
inc
js
jge
retf
inc
jl
(bad)
push
mov
pop
push
adc
mov
clc
jp
xchg
(bad)
jmp
in
sbb
ja
out
loopne
sub
adc
cmps
and
mov
lods
dec
jmp
shl
pop
(bad)
rcr
repnz
out
std
in
push
in
jae
dec
push
call
mov
and
imul
psrlq
fidiv
ror
sub
xchg
jnp
repz
jb
mov
sub
add
cli
lock
jns
jnp
pop
shl
(bad)
addr16
stc
ins
or
push
pop
jns
loope
cwde
clc
jecxz
mov
bound
adc
sub
and
cs
sub
add
adc
js
mov
cmp
xchg
jnp
mov
dec
pop
sub
es
or
push
popf
(bad)
rcr
sbb
mov
inc
add
push
xlat
add
jmp
pop
movs
sbb
mov
pushf
retf
(bad)
inc
sub
leave
pusha
test
mov
(bad)
(bad)
jmp
dec
(bad)
mov
cmps
dec
cli
xor
push
dec
push
pop
sbb
mov
cmp
shl
loopne
iret
loope
and
adc
enter
outs
jns
xor
out
push
cld
inc
sbb
adc
bound
out
(bad)
jnp
sahf
add
mov
cmp
stos
mov
pop
xor
pusha
out
loopne
xor
cmps
movs
xchg
icebp
ret
mov
adc
mov
adc
stos
sub
aas
jmp
cmp
aaa
xchg
out
jmp
fadd
add
mov
repz
sahf
sub
mov
lds
push
xchg
hlt
out
jbe
sbb
sbb
repz
movs
cdq
add
sahf
push
push
xchg
lds
inc
xchg
lea
fwait
cs
iret
push
cmp
cwde
xchg
aaa
push
or
leave
retf
jno
jp
gs
sub
shr
dec
xor
sar
(bad)
fcomp
mov
push
movs
sub
fsubrp
test
rol
adc
cmp
xchg
lea
push
pop
test
xchg
sub
cwde
es
mov
stos
jecxz
nop
clc
cmps
adc
mov
stc
or
add
inc
std
leave
fs
imul
sbb
call
pushf
jecxz
es
inc
cmp
add
xchg
push
jno
mov
es
scas
xchg
dec
clc
xchg
shr
mov
push
pop
aas
imul
xchg
dec
cmp
mov
ret
mov
ror
inc
xchg
dec
adc
outs
sbb
jne
fucomp
rcl
jl
jne
dec
jle
or
ret
in
pop
jg
cmp
pop
sbb
stos
bts
lahf
xor
shl
sti
mov
dec
sub
test
push
mov
popf
pushf
fidiv
lods
or
scas
mov
jbe
inc
movs
idiv
imul
mov
loop
mov
gs
movs
push
fisub
test
cmp
or
or
repnz
mov
aam
outs
es
mov
dec
push
mov
sbb
mov
jnp
push
(bad)
xchg
dec
and
nop
dec
jecxz
(bad)
std
jae
ret
push
leave
xchg
xchg
push
leave
test
cmp
mov
push
add
add
add
loopne
in
dec
cmp
jecxz
push
in
xchg
cld
enter
inc
out
mov
les
retf
pushf
js
or
shr
adc
or
mov
ret
arpl
aam
sub
or
outs
mov
int3
in
fdiv
sbb
dec
test
jns
push
int3
das
mov
fld
or
fst
int3
je
add
mov
xor
test
jp
scas
adc
mov
pop
addr16
mov
ficom
inc
mov
mov
cmp
in
popf
mov
pop
cmp
jne
fst
or
leave
add
fcomp
stc
repz
shl
inc
push
aad
ins
dec
jns
sbb
jnp
sbb
dec
xor
(bad)
xlat
add
pop
push
fcomip
add
jl
outs
outs
loopne
imul
and
ins
js
je
fst
adc
loop
dec
cwde
(bad)
sbb
sub
pop
sti
cli
shr
jmp
add
dec
push
pop
cmp
test
adc
test
dec
push
fs
ficom
cmp
cvtps2pd
dec
mov
mov
pop
lds
inc
push
aaa
and
cmp
bound
fcomi
repnz
stos
test
mov
lahf
pop
lods
pop
mov
jmp
retf
push
inc
outs
test
scas
add
int
in
pop
mov
aam
add
mov
xchg
data16
data16
pop
adc
test
push
aad
add
outs
or
push
mov
jle
mov
aas
inc
nop
movs
jle
push
jae
leave
fimul
leave
inc
mov
loope
push
jp
lahf
inc
rcl
(bad)
xchg
(bad)
cli
aaa
and
clc
fidivr
call
adc
inc
jp
cmc
sub
mov
pusha
inc
test
xchg
repz
cli
lds
push
cmps
push
mov
or
jno
xchg
mov
fwait
popf
shl
mov
inc
push
or
out
stos
outs
cmp
daa
sub
dec
sbb
call
push
cmp
movs
jl
adc
shl
aaa
cmp
jp
lds
pop
push
es
lea
pop
push
jns
xchg
(bad)
pop
imul
xchg
mov
aam
push
rcr
jno
mov
xchg
xchg
sbb
aam
aam
(bad)
jmp
popf
fist
push
xchg
pop
jb
sub
call
sub
xchg
cld
add
shl
jmp
sbb
pmullw
or
aas
push
stos
pop
pop
lods
push
inc
jecxz
std
pop
mov
sahf
inc
dec
out
sbb
sbb
sbb
cdq
mov
lahf
mov
inc
or
in
aaa
retf
xchg
cmp
sbb
stos
cmp
cmp
in
mov
adc
pop
jmp
fwait
jmp
push
push
test
jmp
enter
mov
pop
cmc
scas
lods
outs
mov
xchg
push
mov
xor
retf
inc
cmp
leave
adc
iret
push
stos
mov
pop
sbb
jno
xchg
test
neg
aas
and
nop
stc
push
ret
not
xchg
out
frstor
fsubr
mov
push
repz
arpl
outs
inc
or
test
mov
movs
imul
xchg
jo
ds
shl
pop
cmp
(bad)
call
fsubr
or
jmp
pop
push
out
sub
repnz
inc
xchg
popf
inc
cld
and
jmp
sar
mov
leave
jb
(bad)
fisub
inc
jmp
push
inc
inc
xchg
repz
lods
in
out
(bad)
popf
mov
dec
push
data16
mov
fist
sbb
into
xchg
repnz
and
xchg
and
xchg
fs
push
sub
or
mov
xchg
push
mov
ins
xor
scas
fadd
inc
stos
inc
jmp
mov
mov
scas
mov
or
cmps
cwde
lahf
mov
call
retf
and
ja
sub
xor
loopne
stos
mov
in
xchg
push
pop
add
or
xchg
bnd
jl
js
cmp
and
jmp
out
hlt
add
(bad)
cmps
lea
jg
fs
mov
xor
es
stos
and
push
sub
dec
mov
test
fdivr
sub
dec
sahf
and
xor
pop
fidiv
cmp
test
fcomip
push
mov
lods
mov
fild
inc
es
dec
pop
sahf
sub
adc
cwde
or
leave
fdiv
jne
retf
popa
ds
icebp
mov
adc
les
call
or
xor
fisttp
(bad)
pop
sub
or
adc
dec
or
data16
inc
inc
sub
and
je
adc
daa
lea
push
out
jle
bound
mov
data16
stc
rol
inc
in
adc
mov
lods
cld
cmp
jae
adc
jo
rcl
mov
adc
aas
aad
and
and
iret
mov
and
stc
mov
or
push
xor
sbb
test
es
stc
jle
jae
retf
(bad)
call
dec
sbb
jmp
and
imul
out
mov
push
sahf
es
lods
adc
dec
xchg
cld
mov
pop
out
cli
movs
pusha
ror
outs
dec
pop
call
jmp
adc
xchg
push
test
pusha
mov
mov
gs
sub
xchg
hlt
mov
cld
mov
inc
fdivrp
push
push
mov
les
inc
lea
mov
test
bound
sbb
pop
lods
imul
dec
das
retf
and
aas
and
xchg
test
lds
or
les
xchg
fsub
imul
cli
cmps
pop
fstp
xor
dec
movs
(bad)
xor
int3
adc
rcl
jno
pop
popa
mov
xor
shr
xor
aas
cmp
(bad)
xchg
adc
mul
dec
adc
cmp
pushf
or
mov
xor
push
jbe
fimul
call
push
out
push
(bad)
out
ror
cmp
and
aam
jnp
xchg
fcomp
enter
(bad)
cli
imul
inc
cmp
mov
test
pusha
adc
je
dec
adc
push
inc
and
cdq
test
mov
out
ja
sbb
adc
sub
pop
das
das
and
je
mov
sub
out
ror
fdivrp
sbb
std
mov
pop
add
pop
and
add
lahf
idiv
jg
inc
xchg
std
sbb
mov
shl
pop
pop
and
dec
(bad)
jno
repnz
out
in
sahf
add
jle
xor
shl
daa
popf
push
mov
dec
xchg
mov
cli
mov
ror
out
sahf
mov
inc
mov
mov
jl
pop
pop
jg
adc
push
not
push
cmp
arpl
mov
push
sub
xlat
repz
aaa
mov
or
les
int
test
jns
dec
int
xchg
pop
stc
ret
adc
pop
push
dec
and
mov
push
enter
scas
out
lahf
mov
retf
xchg
pop
add
popf
int
inc
popf
or
push
(bad)
ds
call
adc
xor
lods
ds
ret
mov
ret
sub
mov
adc
data16
sbb
loope
push
mov
mov
mov
or
mov
cdq
shl
mov
lods
sub
in
shl
sbb
(bad)
call
mov
mov
jle
lods
push
add
push
push
push
jae
mov
sub
out
das
in
xchg
mov
pop
mov
add
sub
cld
mov
xchg
inc
add
clc
push
lea
cdq
mov
mov
xchg
dec
and
idiv
mov
dec
aam
mov
sub
int
pusha
push
cmp
sub
fild
icebp
xlat
fcmovnbe
sbb
jne
cmp
cs
mov
repz
xor
dec
or
mov
mov
fld
jo
out
jnp
imul
push
stc
fist
jbe
stc
sar
mov
dec
dec
cmps
shl
test
and
jmp
mov
mov
scas
pop
in
out
icebp
fcom
sbb
push
push
data16
pop
ds
fadd
xor
(bad)
in
sbb
scas
arpl
xor
int
cmp
push
shl
test
cmps
pop
mov
mov
popa
scas
aas
fldenv
dec
fstp
jge
sbb
jmp
xchg
icebp
aam
out
mov
mov
ret
ins
cmp
mov
sub
imul
jecxz
int3
push
pushf
rol
test
mov
xchg
inc
cld
jp
fcmove
ror
in
pop
jae
jecxz
mov
push
bound
xchg
mul
add
lds
test
into
nop
movs
lods
rcr
xchg
out
jns
mov
mov
inc
sub
fidiv
pop
sub
mov
mov
mov
adc
and
fwait
xchg
icebp
repz
enter
je
(bad)
push
adc
int
(bad)
loope
cwde
hlt
pop
mov
mov
(bad)
rcr
rol
bound
xchg
pop
or
xor
push
dec
daa
adc
mov
popa
mov
xor
in
mov
sbb
pop
xor
jl
pop
cmp
cmc
pusha
inc
test
push
xchg
js
mov
jge
dec
pop
and
inc
int3
fldcw
ret
mov
dec
test
adc
or
xor
jns
daa
or
int
sub
mov
leave
fmul
js
scas
lods
and
stc
sbb
lea
aam
sbb
mov
(bad)
jns
stos
adc
test
sub
push
inc
mov
mov
cmp
call
dec
fsub
in
dec
gs
dec
int3
inc
gs
add
add
xor
or
aaa
push
jbe
mov
xchg
in
sbb
and
xor
pop
xchg
lahf
lock
test
stos
pop
sub
or
scas
cs
(bad)
sub
inc
(bad)
pop
(bad)
jb
mov
inc
data16
fwait
scas
lods
shl
and
cld
stos
jge
int
mov
rdpmc
cmps
push
jns
rcl
jg
and
call
pop
add
add
into
mov
adc
(bad)
mov
mov
shr
pand
retf
ins
add
pop
ins
stc
xchg
sti
push
fld
mov
fisub
adc
mov
jg
jl
add
scas
sub
mov
ss
xchg
dec
mov
jo
dec
imul
inc
mov
fimul
fs
out
xchg
aam
dec
jg
xchg
push
ins
xchg
stos
inc
jnp
cmp
enter
jne
enter
sub
pop
pop
sub
mov
retf
call
add
test
jge
mov
aas
mov
lahf
inc
pop
mov
ret
xor
rol
(bad)
mov
hlt
jmp
mov
xor
call
int
loop
adc
jle
call
jo
cmp
imul
lea
add
mov
cwde
push
inc
test
mov
pop
pusha
(bad)
xor
xchg
icebp
mov
or
or
or
mov
mov
xchg
push
ja
pushf
lea
mov
outs
lds
inc
inc
pop
cmps
sar
pop
scas
into
popf
mov
in
test
adc
sub
add
pop
jo
loop
(bad)
call
rcl
mov
rol
ret
mov
push
mov
sub
pop
mov
sub
(bad)
aam
ret
out
and
mov
sbb
dec
xor
cld
push
loop
leave
push
inc
add
in
dec
jo
inc
test
xchg
rcr
scas
pop
cmc
xor
ins
or
jp
sbb
cmp
jns
cmps
std
sub
and
xchg
inc
pop
sub
xor
sub
out
addr16
test
imul
or
in
aas
stc
cmp
pop
int
std
and
lock
sar
push
sub
xchg
sbb
push
call
adc
iret
fs
cmc
xor
mov
cmps
and
pop
pop
mov
cmp
adc
xor
pop
jne
arpl
add
add
push
out
mov
ja
out
pushf
pop
sub
xchg
pop
cmps
test
ret
enter
cli
cli
sbb
jae
fmul
inc
mov
xchg
rcl
cwde
mov
iret
lahf
test
mov
sbb
stos
pop
scas
into
mul
pop
fucom
mov
adc
les
pushf
out
mov
hlt
sar
push
mov
rcr
in
xor
inc
inc
(bad)
cmp
pop
lock
scas
jo
dec
in
std
and
ror
jg
mov
ss
adc
xchg
sub
pop
lods
enter
lea
xchg
sbb
scas
add
push
push
retf
popa
ds
xor
enter
jnp
push
push
retf
into
sbb
jle
adc
sbb
mov
add
lods
pop
and
sbb
loope
inc
mov
ret
mov
cmps
cmp
retf
add
cmp
dec
mov
inc
jo
iret
push
inc
and
push
cmc
in
popa
push
jnp
in
dec
(bad)
jno
jno
iret
mov
(bad)
lods
loop
pop
xchg
or
mov
adc
test
cmovo
sti
hlt
test
ins
jo
sbb
adc
(bad)
add
inc
push
outs
hlt
push
sub
bound
lods
xchg
jae
test
gs
fisub
xor
sar
fstp
int3
fmul
aas
cld
sbb
inc
ds
or
nop
inc
xchg
(bad)
mov
mov
mov
sub
pop
std
dec
xlat
scas
push
nop
and
enter
mov
inc
pop
cmp
sahf
fidivr
push
xchg
xchg
push
push
pop
stos
mov
cmp
adc
(bad)
and
push
pop
xor
das
bound
cmps
cmc
sub
unpckhps
lods
adc
call
or
push
xchg
gs
sub
data16
dec
call
retf
mov
shl
adc
xlat
inc
movs
ds
inc
push
mov
mov
adc
mov
cmps
or
rcl
cmp
mov
pop
jmp
dec
repz
test
xor
repnz
cli
jbe
sbb
fsub
lahf
xor
(bad)
xor
xor
es
lods
and
inc
inc
in
(bad)
movs
push
lea
in
loope
mov
call
adc
fild
clc
push
pop
ret
mov
pop
sbb
lods
ins
lea
add
jmp
imul
sub
movs
sbb
push
nop
movs
int
in
retf
inc
jae
out
scas
repz
sbb
retf
int
inc
push
sub
cmp
rcr
add
mov
(bad)
mov
push
loop
sbb
and
sub
in
pop
mov
sub
add
fcomp
lods
ficomp
jge
shr
fild
iret
sti
push
mov
fild
mov
js
and
cld
leave
stos
pop
(bad)
iret
rcr
jp
sub
mov
loop
mov
pushf
cmp
in
jge
dec
inc
sbb
pop
daa
shl
in
xchg
out
sti
scas
sbb
rcr
sbb
or
xor
sbb
in
inc
ret
repnz
sti
jbe
icebp
inc
test
scas
dec
pop
lods
sti
add
popf
cdq
xchg
xlat
inc
call
jne
pop
jg
xchg
dec
int3
aam
mov
mov
mov
cmp
stc
stc
inc
test
or
jecxz
cld
stc
and
xchg
ret
or
or
cli
aaa
dec
repz
mov
sahf
pusha
cs
clc
mov
jmp
and
mov
call
mov
xor
btr
mov
jne
lock
int
cmc
jecxz
jge
mov
adc
shl
and
or
int3
or
scas
push
mov
cmps
test
(bad)
jge
mov
xchg
call
adc
or
and
mov
push
dec
ret
mov
(bad)
iret
xchg
stos
cmp
mov
push
test
lock
add
adc
in
sbb
cmp
mov
mov
adc
mov
(bad)
out
cmp
fwait
div
sub
jmp
iret
es
xchg
mov
das
inc
(bad)
mov
iret
aad
jge
and
sbb
mov
ret
jnp
into
hlt
dec
sub
icebp
iret
sar
jne
and
lods
addr16
mov
xchg
cmc
fld
adc
(bad)
iret
scas
jge
repnz
test
imul
xchg
(bad)
es
std
dec
fs
iret
inc
add
scas
std
dec
inc
pop
pushf
stos
pop
xchg
aam
fld
pushf
int
xchg
pop
ja
push
jl
neg
mov
and
cmc
sti
jecxz
sub
xchg
sub
dec
cmp
xchg
jbe
shr
cmp
iret
mov
jge
cld
aam
jne
es
push
es
cli
dec
jns
and
or
lods
pop
scas
in
mov
mov
pop
arpl
dec
rol
cmp
imul
mov
call
icebp
(bad)
xchg
and
imul
adc
add
and
xor
mov
cmc
dec
(bad)
push
pop
and
xchg
cs
gs
cmps
ins
xor
shl
shl
clc
loopne
fucomip
push
xor
aad
cmp
jae
(bad)
adc
jne
fidiv
xor
sub
stc
int
ds
(bad)
popa
addr16
mov
mov
ja
push
push
inc
(bad)
mov
in
cli
int3
js
pop
push
nop
and
mov
std
cmp
mov
and
das
(bad)
add
sahf
(bad)
xchg
lahf
clc
loopne
aad
dec
xor
dec
xchg
je
sub
repnz
add
and
mov
shl
dec
repz
cld
stc
gs
mov
je
iret
jecxz
push
mov
add
jae
and
pop
clc
inc
xor
cmps
xor
mov
push
lods
hlt
cs
sub
ror
sub
sub
push
rcl
add
push
mov
sbb
retf
enter
push
cmp
push
hlt
cmp
scas
push
or
push
ficom
pushf
sub
addr16
xchg
loop
sbb
xor
test
call
call
push
(bad)
addr16
retf
fiadd
jo
pop
xchg
mov
les
cmp
jne
lahf
push
out
and
ret
cmps
mov
jb
sub
retf
retf
cmp
mov
bound
mov
xchg
gs
aad
rcr
outs
pop
scas
mov
and
(bad)
out
add
ror
(bad)
push
dec
xchg
retf
out
cmp
ja
in
xrelease
pop
push
rol
dec
sbb
and
rcr
dec
(bad)
xchg
mov
imul
pop
xor
jmp
imul
lahf
mov
and
or
push
sbb
into
add
adc
into
ds
mov
popa
iret
ins
xor
and
xchg
cmp
lods
movlps
adc
dec
jb
pusha
jl
rol
add
call
pop
fcom
xchg
cmp
imul
push
push
shr
loopne
mov
mov
mov
and
cmps
sbb
std
adc
scas
adc
test
sbb
scas
jmp
or
mov
jg
aam
lahf
in
mov
sub
mov
adc
ja
dec
ffree
call
mov
xchg
push
ret
(bad)
int
inc
mov
mov
fbld
jmp
into
test
je
ins
in
xchg
rol
inc
lea
jno
pushf
mov
sbb
mov
mov
lds
loope
out
bound
lock
xor
stos
out
xchg
fwait
xor
jbe
sub
shl
inc
popa
jmp
jmp
pop
sbb
jne
and
aaa
inc
xchg
in
push
in
fs
dec
jp
cld
leave
cmps
arpl
inc
ins
sub
int3
mov
mov
mov
stos
jb
mov
pop
jne
call
push
or
mov
and
cmp
mov
std
adc
(bad)
in
and
pop
jmp
dec
retf
jle
dec
fisub
leave
mov
lock
pop
sbb
adc
adc
xor
fstp
jns
imul
mov
xor
(bad)
stc
and
sub
outs
adc
scas
or
sub
and
sub
xchg
out
or
inc
jno
test
retf
cmc
stos
mov
cmp
and
rcr
sti
(bad)
out
inc
ins
mov
xchg
sub
leave
scas
add
mov
and
(bad)
sub
xor
mov
mov
mov
sar
movs
fistp
imul
mov
xchg
xchg
pop
pop
js
jno
sub
and
call
ret
jp
jg
lea
dec
call
pop
js
fcom
pop
and
ins
cmps
sbb
test
inc
repz
call
ds
shl
(bad)
int
mov
jne
movs
hlt
retf
ins
or
jb
test
dec
xchg
dec
pop
push
or
ret
jl
dec
sti
pop
mov
mov
adc
cs
sahf
and
cmp
mov
cmc
push
push
jb
dec
xchg
mov
push
lahf
cmc
inc
rol
xor
popf
movs
or
mov
mov
lods
das
pop
cmp
pop
mov
push
idiv
pop
xchg
xor
nop
xor
cmp
cmp
test
int3
and
pop
ins
pop
jmp
mov
mov
jns
int3
xchg
add
xor
xor
push
mov
std
mov
jge
and
shl
(bad)
not
cld
pop
mov
sbb
dec
pop
call
jle
jne
sbb
pop
dec
in
adc
and
int
inc
ins
or
mov
push
aad
mov
xor
lea
mov
xchg
shr
sub
repz
js
addr16
mov
push
and
cmc
add
jb
xor
or
xor
pop
dec
push
add
sub
push
loop
jp
and
pop
xchg
push
inc
test
mov
sbb
sub
inc
jle
cdq
mov
jge
adc
out
cmc
jmp
pop
or
add
mov
xor
and
bound
fnstsw
and
cld
inc
or
ja
xchg
pushf
and
addr16
cs
xor
cmc
mov
add
sub
nop
and
adc
ror
xchg
and
pop
(bad)
jp
add
mov
inc
or
jne
icebp
imul
test
or
jmp
jle
mov
pushf
mov
mov
out
pop
mov
and
fs
push
ret
mov
add
sbb
jno
mov
jno
push
push
sahf
sub
jb
jl
push
mov
push
or
xor
cdq
inc
mov
and
jge
add
lea
pop
fisub
push
fisubr
das
ds
dec
stos
stos
mov
fadd
out
fld
rcr
xchg
sbb
shl
adc
shl
call
inc
jno
pop
stos
pop
sbb
int
mov
ret
jmp
inc
sub
ret
jnp
xchg
mov
push
icebp
(bad)
iret
(bad)
fbld
pop
adc
inc
sub
jno
pop
pop
push
hlt
xor
xor
out
cmps
or
cmp
out
test
aam
mov
cli
pop
pop
push
add
ja
movs
mov
bound
pusha
inc
fs
cmp
jbe
ss
dec
adc
out
xchg
xor
add
cld
(bad)
retf
mov
xchg
shr
dec
mov
stc
cwde
cmc
aaa
sub
call
int
hlt
or
(bad)
call
fisub
mov
or
pop
xchg
shr
xchg
cmp
mov
dec
inc
mov
adc
add
mov
add
fwait
sbb
iret
cwde
fld
jp
and
xchg
fnstcw
fld
add
packuswb
outs
shl
ins
pop
fisubr
cmp
and
adc
dec
or
pop
jbe
call
popf
adc
fimul
loopne
in
sbb
xor
mov
mov
fxch
and
mov
test
jecxz
or
jle
sbb
fiadd
(bad)
cmp
mov
mov
push
aam
rcl
jno
pusha
and
loop
mov
sbb
int3
dec
(bad)
xor
jo
(bad)
loopne
adc
bound
pop
das
xchg
pushf
out
dec
lahf
and
loop
mov
mov
icebp
(bad)
scas
or
jmp
jae
cmp
mov
dec
push
lods
mov
clc
stos
adc
inc
ficomp
ja
rcr
adc
ret
hlt
pop
fxtract
es
xlat
shr
adc
test
add
into
add
pop
pop
js
cli
jp
or
(bad)
sar
or
in
adc
jae
push
xor
outs
popa
ret
ins
dec
in
xchg
idiv
sti
lahf
outs
mov
in
fsubr
jmp
push
fbstp
xchg
push
out
or
imul
add
sar
pop
movs
mov
(bad)
sub
xor
test
jne
clc
xchg
inc
adc
or
jb
into
test
jge
or
in
cmp
and
mov
sub
mov
and
and
je
retf
into
repnz
scas
cs
lods
fcomp
mov
hlt
pop
stos
add
int3
mov
pusha
xor
pop
jle
out
pop
arpl
xchg
test
pop
setae
or
dec
jl
loop
test
xor
ds
fistp
push
sti
sbb
aaa
scas
fdivp
aaa
sahf
sbb
push
dec
aas
fsubp
addr16
jg
pop
sub
out
in
mov
push
test
out
sbb
mov
icebp
addr16
pop
add
adc
cmc
(bad)
idiv
loopne
and
mov
loope
or
icebp
push
sbb
or
repnz
xchg
jle
xchg
sbb
mov
jnp
pop
jo
es
lock
sbb
mov
out
stc
lahf
and
jb
mov
aam
clc
loope
shl
nop
or
jb
sub
mov
out
xor
aad
ins
dec
mov
dec
addr16
popf
pusha
push
mov
pop
or
and
clc
pop
es
xor
jmp
mov
mov
out
ins
das
lods
push
icebp
jmp
mov
xchg
mov
mov
ins
mov
fiadd
ficomp
pusha
jecxz
pop
das
fmul
retf
mov
add
call
jb
cmp
pop
adc
sub
pop
stc
sbb
dec
adc
in
lods
out
xor
repnz
adc
neg
stos
call
fdecstp
ss
in
and
movs
loop
iret
sbb
adc
popa
jne
xor
aaa
cmc
xor
cmc
ja
inc
dec
xor
mov
dec
inc
or
movs
mov
pop
xor
cmp
dec
jmp
movs
xor
aaa
shl
xchg
jns
ss
jbe
retf
or
fcmovnbe
adc
inc
mov
mov
xchg
xchg
mov
dec
out
scas
(bad)
enter
test
fwait
stc
imul
inc
cmp
pop
xchg
inc
xlat
push
mov
mov
aad
or
mov
(bad)
mov
inc
out
cwde
jne
jbe
adc
call
push
movs
lods
inc
rcr
shl
mov
imul
fstp
mov
cmc
add
lahf
push
es
pop
jne
sbb
das
iret
sbb
and
add
lahf
cmps
aam
out
icebp
into
jnp
dec
push
jp
(bad)
out
push
inc
and
ss
ret
ja
jg
pop
clc
sti
pop
pop
mov
mov
cmp
sbb
push
adc
jmp
into
das
sbb
mov
jle
pop
icebp
cwde
or
pop
pop
xor
pop
jmp
mov
dec
cs
and
mov
je
sahf
xor
clc
and
pop
or
mov
sbb
sbb
push
jmp
(bad)
enter
sbb
test
push
inc
xlat
fcmovnbe
fmul
imul
mov
sub
out
push
xor
pop
punpcklbw
jecxz
push
or
pop
adc
sub
popf
in
loope
inc
leave
mov
jl
jp
add
mov
sub
add
push
inc
cld
pop
nop
imul
and
test
cmp
pop
cmp
mov
dec
jecxz
call
and
xchg
vaddpd
cmps
mov
xchg
pop
sbb
xor
mov
dec
in
outs
dec
pushf
push
out
add
ins
and
xchg
fldln2
mov
pop
shl
pop
jo
daa
(bad)
test
(bad)
gs
cdq
outs
xchg
out
fwait
jl
cs
or
mov
sbb
add
out
into
fdivr
sub
les
cmc
dec
leave
adc
pop
loop
(bad)
jmp
push
add
pushf
and
adc
mov
dec
sbb
dec
nop
sub
(bad)
pop
jmp
dec
jl
dec
sbb
popa
dec
inc
mov
jmp
shl
scas
movs
pop
xchg
inc
inc
stc
inc
adc
adc
dec
xchg
jno
test
int3
push
fcmovnbe
enter
dec
xchg
xor
xor
mov
ins
xchg
test
std
cli
icebp
loopne
hlt
and
push
dec
retf
cmp
sbb
movs
jns
lock
lock
mul
in
push
and
sub
mov
das
aaa
dec
mov
leave
push
cmps
push
je
fdiv
outs
scas
hlt
aad
fiadd
pushaw
ins
cmp
jp
pop
outs
(bad)
mov
and
mov
or
mov
lahf
scas
jmp
mov
imul
loope
adc
xor
cmp
adc
les
xchg
sub
inc
sahf
out
cmp
push
mov
loop
arpl
add
dec
inc
xchg
in
ins
lods
es
mov
jmp
xchg
outs
lods
ja
outs
mov
pop
xchg
in
fdiv
stos
xchg
es
lea
fs
out
mov
push
push
ret
cwde
push
xchg
mov
push
mov
mov
(bad)
mov
sti
xor
jo
mov
cdq
and
aad
push
jl
mov
sbb
xchg
cmp
cmp
and
dec
cli
pop
push
imul
std
ret
out
cmp
xchg
dec
not
iret
stc
bound
pop
push
nop
or
pop
mov
scas
(bad)
or
int
and
test
pop
or
fwait
ret
ret
inc
push
jmp
cmp
mov
fxch
sub
cmp
mov
inc
fadd
dec
(bad)
xlat
retf
add
xor
sahf
(bad)
fidiv
mov
mov
lods
xor
jmp
out
(bad)
test
dec
mov
loopne
idiv
cmp
stc
ds
push
dec
mov
jns
sbb
sbb
sbb
or
mov
mov
jmp
inc
loop
pop
in
lahf
push
jae
sbb
adc
ss
call
dec
sub
stos
jae
cmp
pop
aas
and
stos
sbb
stc
pop
mov
pusha
adc
or
push
cmp
mov
add
jns
xchg
(bad)
mov
inc
scas
jae
mov
shl
mov
pop
loope
xor
cwde
arpl
cmp
hlt
leave
jge
cwde
and
pop
jmp
out
and
aam
push
add
test
mov
fstp
nop
jge
xor
dec
cmps
cmp
test
cdq
push
lea
retf
pop
cwde
pop
adc
push
sahf
xor
fwait
inc
aad
mov
inc
stc
fstp
icebp
xchg
lds
xor
cli
out
jmp
mov
test
daa
and
push
enter
scas
cdq
enter
add
retf
and
mov
mov
lods
jmp
cmp
adc
test
mov
and
inc
clc
jae
jp
adc
or
xor
arpl
test
rep
and
repz
movs
loopne
fs
faddp
and
(bad)
or
inc
sbb
pop
out
out
mov
nop
enter
cmp
mov
sbb
into
lds
arpl
into
(bad)
sub
sub
sbb
cdq
inc
inc
outs
call
push
outs
add
cli
es
mov
ret
out
(bad)
xchg
xor
jge
cli
aas
or
jmp
sbb
arpl
sub
mov
popf
out
inc
(bad)
(bad)
xchg
inc
push
pop
imul
cdq
or
loop
mov
ss
es
cmp
in
push
test
or
cmp
jg
test
cmp
sbb
and
(bad)
into
pop
or
jmp
xchg
scas
mov
or
sbb
push
dec
stc
mov
dec
dec
aas
in
add
push
mov
mov
dec
addr16
stos
inc
mov
in
imul
aas
int3
rol
ds
mov
mov
xchg
mov
mov
enter
(bad)
push
inc
loop
sub
push
sbb
ja
inc
(bad)
xchg
mov
dec
(bad)
mov
push
lahf
dec
mov
jecxz
out
adc
mov
fisttp
test
inc
mov
(bad)
cmps
adc
out
inc
mov
jle
mov
and
outs
stos
shr
cmp
pusha
sub
push
sbb
out
lock
or
xchg
fs
mov
cwde
mov
sahf
cmps
sub
add
cmps
sbb
sub
or
rol
jmp
cld
pop
and
hlt
or
cli
retf
inc
cwde
ss
dec
fcmovne
aad
jmp
lahf
or
daa
movs
xlat
inc
xlat
xor
shr
add
xchg
jl
loope
add
jo
add
or
adc
pop
adc
sub
test
aas
in
push
jmp
adc
xchg
je
push
test
mov
mov
mov
aaa
push
jge
cs
xor
dec
fsubr
jmp
stc
jb
add
inc
stos
push
mov
xchg
retf
ret
out
scas
(bad)
call
xchg
mov
test
retf
mov
mov
sub
sbb
add
scas
bound
mov
les
addps
or
lahf
inc
in
sub
sahf
cmc
(bad)
push
out
pop
int3
pop
cmps
in
and
inc
add
inc
hlt
shr
repz
ja
bound
sub
fmul
pop
push
inc
out
jno
dec
cmp
push
mov
jmp
xchg
ffreep
sub
push
pop
js
mov
call
sbb
add
inc
test
add
and
mov
sub
cmp
in
jge
loope
imul
fwait
in
lods
cli
adc
sub
sbb
or
enter
nop
mov
mov
jl
fld
jns
movs
shl
cmp
jb
(bad)
pushf
jmp
test
mov
sub
push
je
and
push
xchg
out
xor
out
push
push
inc
or
fnsave
adc
xchg
cwde
data16
xchg
add
cdq
push
gs
shr
test
out
enter
push
adc
jno
loope
movs
shr
scas
out
ins
dec
bound
data16
push
and
bound
fidiv
jle
nop
pop
mov
scas
inc
loopne
jp
repnz
sub
fistp
in
cmps
mov
jle
add
imul
cld
jg
jo
pop
nop
add
xor
mov
adc
in
jg
mov
shr
ds
je
(bad)
pop
dec
mov
push
(bad)
scas
jl
mov
cmp
jmp
sbb
fistp
cmp
aad
pop
(bad)
nop
sbb
adc
call
push
pusha
loope
xor
jl
jns
pop
jmp
pushf
in
js
stos
push
mov
push
imul
test
inc
pop
inc
pmullw
xor
in
out
mov
cli
xor
repz
ret
adc
out
loop
das
jecxz
push
les
push
pop
xor
sub
das
jmp
and
lock
mov
xchg
mov
aas
aad
or
jb
fimul
xchg
cwde
or
ja
aad
mov
pop
ror
aad
test
xchg
rol
mov
pushf
mov
out
test
mov
adc
and
cmc
clc
and
add
mov
cmp
outs
mov
fst
push
(bad)
pop
imul
bound
popf
dec
mov
outs
cli
fnstcw
mov
xchg
cmp
jge
xchg
and
xchg
jns
shl
leave
add
adc
add
(bad)
aad
out
ja
sbb
pop
sbb
fisttp
(bad)
ficom
int
inc
loopne
test
jne
mov
in
push
add
xchg
daa
jbe
mov
js
xor
push
cld
sahf
fdivr
or
mov
shr
and
(bad)
adc
pop
cmc
inc
cmp
stos
test
ror
mov
mov
push
jae
mov
iret
loopne
sbb
movs
adc
jmp
jecxz
das
jg
pushf
pop
or
or
mov
mov
stc
dec
xchg
fmul
push
dec
sub
scas
jl
cli
js
pop
dec
mov
inc
sub
bound
xor
mov
ret
call
call
inc
or
inc
stc
xchg
pop
push
xchg
(bad)
rcr
mov
cli
push
mov
push
dec
(bad)
in
xor
pop
es
add
add
add
mov
xchg
sub
sub
les
dec
das
jmp
call
mov
xor
xor
ja
cmp
aam
inc
loop
jmp
sbb
pop
jno
dec
dec
(bad)
xor
mov
inc
gs
sub
pop
dec
out
sbb
mov
mov
xchg
shl
lods
lea
enter
push
movs
mov
out
or
mov
or
mov
adc
push
mov
xchg
or
retf
rcr
mov
pop
dec
mov
jno
je
in
xor
mov
xchg
retf
lods
mov
fisubr
mov
(bad)
cld
xchg
xlat
test
ds
in
mov
idiv
xchg
call
dec
mov
in
adc
imul
mov
rcr
jmp
mov
cld
stos
pop
pop
or
jb
sahf
and
dec
(bad)
stos
or
out
mov
xor
adc
dec
jns
ret
mov
xor
jno
dec
dec
nop
iret
retf
jp
jle
popf
jbe
(bad)
mov
mov
mov
sbb
pop
add
inc
xchg
or
pop
or
xlat
jmp
les
mov
mov
sub
add
dec
adc
imul
jmp
fs
bound
mov
mov
dec
xor
or
stos
(bad)
js
add
xor
and
mov
push
cld
test
cmps
sbb
fs
movs
into
sti
mov
xor
sub
mov
jmp
jb
jnp
fdiv
(bad)
push
mov
jge
repz
imul
pusha
imul
jmp
push
mov
fist
gs
xor
out
(bad)
or
jg
lods
in
ja
out
mov
mov
call
adc
xchg
loopne
push
enter
(bad)
pop
jl
pop
and
sar
mov
fwait
lock
daa
cmps
int
mov
je
push
(bad)
xchg
adc
pop
int3
aad
dec
gs
out
jg
xor
retf
ss
mov
inc
push
ins
jns
mov
out
std
mov
jb
iret
scas
outs
xchg
imul
jno
inc
aas
(bad)
sbb
imul
jl
xchg
retf
dec
mov
das
adc
fdiv
xor
push
xchg
not
mov
imul
and
add
ins
or
lahf
js
test
sbb
mov
inc
out
mov
xor
pop
and
daa
out
push
push
cmp
and
stos
jbe
adc
repnz
imul
fdiv
cmp
jmp
popa
inc
jg
addr16
into
push
jp
xor
push
xchg
push
stos
cmps
in
cdq
inc
xchg
out
xchg
inc
nop
push
addr16
loop
and
jecxz
sub
push
imul
xchg
clc
ds
jl
loopne
jle
jmp
xor
mov
rcl
and
cmc
mov
xor
pushf
jmp
jle
int
ins
fwait
int3
addr16
push
ins
push
xchg
push
mov
add
mov
je
pop
das
aad
ins
leave
dec
ret
popf
fmul
fwait
lods
fwait
test
shl
jmp
mov
jbe
movs
sub
ret
(bad)
xor
outs
jl
aad
inc
clc
jne
fisttp
dec
and
sub
sbb
aaa
pushf
and
push
pop
xor
ss
mov
cmp
stc
nop
mov
inc
sbb
mov
repz
fadd
adc
std
aas
inc
pop
fcmovbe
in
(bad)
cmp
(bad)
mov
js
fistp
fstp
adc
sub
sbb
addr16
dec
push
sahf
into
fwait
call
in
cld
in
mov
(bad)
rcl
pusha
lods
mov
icebp
push
aam
icebp
push
popa
outs
bt
mov
cmp
mov
pop
or
lds
stos
pop
cwde
dec
rcl
stos
dec
mov
and
add
inc
push
inc
add
dec
mov
pop
ins
aaa
in
mov
xlat
jo
push
popf
(bad)
pop
arpl
icebp
cwde
mov
or
fs
jmp
sbb
cmp
pop
aas
movaps
cmp
in
icebp
xor
in
pop
in
cmp
pop
xchg
test
into
stos
xor
sbb
mov
or
aad
scas
or
mov
ror
mov
mov
add
inc
fistp
out
sar
push
pop
jnp
test
add
inc
cmps
loopne
std
cmp
jbe
pop
(bad)
ret
leave
bound
lds
pop
inc
icebp
outs
and
or
(bad)
gs
cmp
push
mov
xor
and
and
add
push
mov
int
adc
pop
dec
adc
adc
idiv
mov
ret
lods
mov
push
xor
xlat
test
jb
test
xor
cmp
cmp
cmp
or
dec
mov
scas
push
repnz
call
sahf
and
cdq
ror
in
stos
test
and
fstp
cmp
in
or
mov
fldcw
mov
lods
popf
mov
test
ins
xchg
(bad)
mov
fsubr
push
cld
fs
(bad)
repz
dec
shl
push
pop
mov
xchg
inc
pop
push
std
adc
idiv
imul
scas
pop
cdq
push
push
bswap
stc
mov
shr
pop
jno
ins
cdq
sbb
cdq
cmp
pop
leave
fild
lahf
ds
pop
mov
in
dec
ret
xchg
clc
or
das
ja
cmc
in
rol
cdq
mov
mov
adc
sar
aam
push
sti
out
fist
call
add
repnz
out
sti
cmps
pop
push
mov
jnp
dec
xor
add
jo
int3
and
(bad)
les
jp
jg
dec
dec
popf
sub
test
popf
inc
out
jb
adc
clc
xlat
or
inc
shr
aad
mov
in
stos
lods
xlat
xchg
sar
push
sub
jbe
ja
sbb
jecxz
ds
fcom
mov
jne
pop
xchg
adc
xor
inc
jp
cmp
adc
iret
mov
movs
mov
mov
or
in
call
jne
or
cwde
call
shl
cmp
es
scas
pop
xchg
mov
jle
fcmovb
push
ss
pop
xchg
jbe
jle
je
js
int3
push
fcom
data16
nop
add
loope
mov
add
push
fiadd
cmp
sub
ror
imul
mov
sar
int
call
and
shr
push
fiadd
mov
mov
loop
push
inc
cmps
shl
push
(bad)
or
arpl
je
fisub
fs
pop
icebp
adc
popf
sub
dec
call
repz
clc
pop
jecxz
out
int3
xor
push
xchg
dec
popf
push
inc
cmp
jbe
stos
les
or
push
mov
fmul
cmp
shl
mov
jle
and
adc
hlt
stos
pop
xor
add
fs
dec
jns
shl
into
adc
and
lahf
icebp
sub
mov
inc
test
loopne
nop
arpl
add
rcl
scas
mov
push
lahf
mov
scas
push
sub
lods
push
or
ds
inc
mov
icebp
pushf
sub
cs
fsub
add
jge
sub
push
or
retf
xchg
dec
sub
cmps
lahf
cmp
inc
cli
rcl
mov
dec
push
add
xor
xor
es
jl
push
repnz
xlat
fwait
out
sub
cmp
adc
cmp
imul
push
adc
pop
ins
(bad)
mov
sbb
enter
pop
out
jl
imul
pop
sbb
mov
shr
out
push
xchg
push
xlat
out
jae
scas
mov
ficom
mov
mov
or
out
arpl
adc
xchg
mov
mov
loop
daa
mov
pop
loop
in
popa
dec
and
sub
(bad)
std
rcr
iret
dec
mov
xor
xchg
or
movs
ins
syscall
pop
xor
rcr
inc
inc
fwait
cwde
jns
mov
ja
push
inc
scas
les
pushf
and
mov
scas
jle
iret
int3
mul
sub
movs
push
jg
pop
pop
mov
outs
sub
pop
mov
je
imul
mov
inc
xchg
nop
inc
xor
add
or
je
sbb
or
mov
jecxz
xlat
int3
push
movs
push
outs
int3
mov
jp
jmp
inc
jle
cs
cmp
imul
jbe
mov
ja
aad
pop
test
add
aam
mov
js
in
call
adc
inc
add
mov
sti
fdivp
mov
fimul
(bad)
sbb
sahf
sbb
push
add
pushf
imul
leave
lock
pop
and
jne
push
out
aas
mov
cmp
les
add
inc
test
iret
iret
in
cmp
pop
mov
mov
mov
(bad)
int
jnp
mov
mov
xchg
inc
inc
mov
sbb
or
pop
enter
mov
jae
leave
dec
fist
ja
icebp
add
hlt
test
dec
mov
ror
cmp
adc
xchg
out
add
inc
dec
js
aad
cdq
mov
pop
(bad)
inc
mov
nop
cmps
ins
into
loop
lods
call
inc
aad
and
out
and
and
test
mov
push
pop
hlt
popa
add
mov
mov
in
or
or
fist
cmp
cwde
xchg
or
sbb
mov
cmp
push
pop
inc
cmp
mov
pop
out
imul
mov
fst
sbb
lods
pop
cld
mov
fwait
popa
mov
or
pop
pop
inc
ja
jge
movs
push
scas
mov
xchg
ins
mov
loope
adc
out
(bad)
bound
adc
test
leave
inc
push
xor
mov
int3
sahf
fidiv
sub
cmp
fldenv
movs
sub
xlat
out
cs
jnp
jle
lock
xchg
fmul
xor
mov
ins
(bad)
enter
lds
sahf
xor
mov
mov
sti
scas
add
or
xchg
mov
pop
data16
pop
out
push
leave
jno
sbb
xor
sub
dec
sbb
fnstcw
pushf
or
ds
pop
popa
cmc
add
add
and
(bad)
or
(bad)
outs
or
dec
inc
test
mov
push
out
arpl
loopne
jns
dec
out
sbb
dec
clc
pop
ins
cmps
cmp
ins
bound
shl
mov
cwde
cmp
sbb
lods
push
js
sti
cmp
pop
stos
mov
(bad)
frstor
mov
add
retf
add
dec
and
mov
mov
lods
aad
ret
ja
shr
jo
cli
movs
add
xchg
std
into
(bad)
sahf
ficomp
pop
scas
mov
clc
ficom
sbb
xor
dec
and
mov
push
or
shr
jge
xchg
cmp
push
arpl
xchg
rcr
fisubr
cmps
sbb
in
out
sbb
push
jmp
adc
inc
mov
mov
mov
in
mov
sub
in
add
mov
pushf
jne
pushf
sbb
xor
in
dec
push
mov
lahf
in
jae
cmc
ds
mov
pop
scas
sub
lahf
(bad)
(bad)
mov
jle
sbb
aam
lock
mov
mov
aaa
adc
jp
xchg
xchg
jnp
cmp
retf
sbb
mov
pop
popf
jns
(bad)
cmp
and
pushaw
mov
mov
pop
add
cmp
adc
push
or
add
rcr
and
sbb
and
add
sub
dec
dec
sti
push
jmp
js
dec
inc
mov
rcl
sti
sbb
xchg
in
push
cmp
in
iret
adc
cmp
test
mov
mov
sub
fwait
ja
add
xchg
mov
pop
iret
xchg
pop
jmp
jns
push
aas
popa
mov
sbb
inc
mov
xor
sub
sub
dec
or
call
add
sub
jmp
(bad)
iret
pop
xor
xlat
ins
push
mov
add
call
push
xor
pop
add
int3
dec
add
sar
fld
scas
sti
sub
xor
cmp
push
std
mov
pop
sub
aaa
cmc
mov
jmp
inc
sub
jge
test
retf
retf
inc
dec
ror
jmp
dec
cmp
cli
imul
xchg
aaa
xchg
shrd
and
and
and
mov
mov
ret
jge
jbe
mov
push
aas
and
aam
pop
fsubp
scas
mov
into
xor
adc
sub
push
or
imul
jne
sbb
xchg
test
push
icebp
sub
in
dec
add
xor
jbe
lods
push
sbb
dec
sub
add
mov
lock
lahf
movs
jb
sahf
jb
jle
sub
fcom
xchg
mov
cmp
setle
aas
nop
in
push
xchg
dec
inc
and
loopne
or
sti
mov
sbb
mov
(bad)
push
pop
inc
fwait
iret
push
cmp
ffree
out
inc
fwait
pop
xchg
mov
sub
dec
push
lock
outs
and
mov
test
inc
or
xchg
fwait
pop
xor
aas
add
mov
icebp
jbe
ja
push
rcl
xor
pusha
popf
push
xchg
cwde
pop
adc
sahf
inc
xor
cmc
out
hlt
js
dec
scas
jecxz
inc
sbb
dec
pop
or
rol
and
add
adc
mov
not
movs
pop
pop
fcomp
sub
and
pop
or
inc
xor
mov
and
gs
lahf
sub
sub
add
ds
fadd
(bad)
repz
dec
mov
stos
fbstp
adc
dec
push
(bad)
loop
les
inc
pop
outs
jns
and
cmp
pusha
sub
aad
rcr
inc
mov
or
mov
or
test
sub
xchg
cmp
adc
lahf
aas
imul
xchg
stos
mov
mov
cli
inc
add
cmp
pop
add
xchg
retf
addr16
stos
jne
pop
pop
add
test
(bad)
jp
mov
xchg
ror
dec
outs
das
push
add
idiv
sahf
cmps
aam
pop
(bad)
push
xchg
cmp
mov
xor
push
ins
adc
mov
xor
cli
pop
cmp
addr16
loopne
jbe
push
test
jnp
mov
pop
xchg
scas
pusha
ret
call
popa
test
xchg
cwde
jns
loop
into
movs
cmp
xchg
jge
sub
repz
cld
pop
rcr
lahf
or
in
nop
fidivr
xchg
xor
cmp
push
loopne
cmc
xchg
pop
xchg
xchg
prefetcht0
(bad)
movs
repz
mov
xor
imul
not
pusha
ret
dec
icebp
imul
repnz
test
cmc
fldcw
int3
movs
cbw
aad
xchg
aas
pop
int
das
(bad)
mov
xchg
cmp
sti
repnz
cmp
lods
sub
pushf
aaa
add
push
adc
fistp
lods
jns
dec
ins
jb
cld
mov
sbb
mov
lea
pusha
out
xchg
aaa
xchg
test
jae
ss
fidiv
pop
cld
ins
mul
daa
cmp
jb
pop
mov
movs
sti
fwait
lods
or
into
jne
sbb
in
push
stos
inc
pop
outs
push
mov
cmp
fistp
or
jno
push
aad
adc
dec
mov
imul
bound
or
stos
outs
imul
push
(bad)
dec
mov
mov
adc
mov
sbb
jae
push
add
sbb
movs
js
fsub
lock
xchg
dec
jne
and
movaps
pop
lods
dec
arpl
lds
aaa
pop
and
mov
mov
inc
stos
xor
sbb
nop
loopne
clc
dec
pop
ss
cmp
xchg
cmps
and
mov
aam
jp
sbb
or
xor
xchg
and
cs
test
pop
xor
daa
or
int3
mov
push
jnp
loop
xor
and
add
fsubr
jo
add
in
div
scas
test
retf
jecxz
adc
or
mov
jnp
in
lahf
jbe
scas
icebp
aaa
fstp
(bad)
dec
push
retf
jecxz
adc
add
scas
pop
xchg
cmps
fimul
push
ins
les
jg
outs
mov
stos
ror
loopne
pop
cmps
(bad)
das
push
xor
mov
scas
inc
add
icebp
scas
lds
repz
retf
sub
inc
add
scas
xchg
sar
test
dec
and
sahf
sbb
mov
sbb
xlat
out
mov
xchg
xchg
mov
outs
imul
push
sub
pusha
add
lods
in
cmc
dec
es
mov
fst
mov
push
mov
push
xor
in
pop
xor
ins
push
loopne
push
sbb
dec
jl
mov
imul
pop
inc
jmp
aam
bound
shl
dec
dec
sub
push
sub
fidivr
pusha
test
inc
pop
(bad)
retf
mov
sbb
sub
lock
out
cmp
inc
pop
stos
and
and
pop
pop
test
add
pop
das
pop
sahf
cmps
(bad)
loopne
inc
xchg
push
stc
test
sbb
sbb
outs
jl
jnp
jmp
pop
push
lahf
cmp
cmps
fidiv
icebp
xor
std
mov
(bad)
or
sub
push
(bad)
hlt
out
mov
dec
sbb
sahf
imul
mov
mov
lahf
sbb
ja
mov
out
test
or
jge
repnz
pop
jp
fld
dec
mov
and
jl
jp
dec
pop
loop
fdivr
lods
push
(bad)
dec
jnp
lea
jge
arpl
cmp
mov
pop
stc
shl
dec
pusha
inc
push
and
cld
mov
pop
cmp
pop
ret
xor
sbb
jae
fstp
inc
movs
mov
add
(bad)
or
jmp
leave
imul
mov
jns
imul
cwde
push
cmp
inc
inc
hlt
xchg
push
push
jb
adc
cmp
and
out
sbb
fldcw
pop
xor
sbb
pop
cmps
lahf
sub
xchg
and
movs
scas
(bad)
or
pop
sbb
jge
int
test
mov
adc
fisub
or
adc
mov
sar
sub
jne
ins
adc
jns
add
pop
popf
dec
pop
lea
xchg
push
pushf
int
sbb
gs
cmc
adc
mov
cmp
push
mov
repz
inc
sub
xor
or
fisub
mov
retf
ret
cmp
mov
lahf
(bad)
jecxz
push
cmc
ins
sbb
lds
adc
lods
fisub
or
loop
in
push
mov
das
fs
sbb
clc
adc
jno
jnp
cmps
fcom
sti
dec
mov
jnp
mov
arpl
xchg
lea
mov
stc
sub
fcomp
les
jecxz
test
mov
les
xor
mov
loope
xchg
test
push
jmp
repz
aad
fwait
scas
push
fwait
data16
inc
(bad)
dec
pop
cli
pop
fcomp
sbb
xchg
push
test
repz
lods
dec
les
dec
(bad)
idiv
lods
(bad)
mov
(bad)
es
inc
mov
pop
xbegin
pop
push
pop
cs
pop
push
aam
leave
mov
add
ins
test
pop
inc
ret
out
pop
add
sub
stos
pop
pop
mov
cmps
inc
mov
mov
ret
dec
arpl
mov
cmp
std
aam
and
sbb
mov
mov
mov
shl
(bad)
out
inc
dec
arpl
in
movs
adc
(bad)
jae
jl
mov
jg
push
lock
inc
dec
inc
sbb
jg
aaa
pop
xchg
js
sub
jp
xchg
jle
pushf
cli
mov
cmps
out
adc
and
pusha
in
xchg
jmp
(bad)
test
sub
sbb
int
bound
sbb
sbb
lock
lea
in
aam
inc
add
lods
dec
aaa
dec
mov
dec
jae
sbb
fldenv
out
pop
or
dec
sbb
and
iret
adc
movs
jbe
cwde
mov
push
or
or
mov
xchg
aad
lahf
call
arpl
(bad)
call
mov
lahf
add
daa
hlt
icebp
nop
call
in
and
aas
jl
rol
mov
jmp
loop
addr16
dec
dec
and
or
adc
fisubr
icebp
push
mov
and
retf
mov
popf
add
dec
int3
ret
xor
pop
cli
iret
lods
loopne
sub
neg
test
mov
adc
es
push
adc
js
jnp
xchg
mov
jmp
scas
mov
mov
jl
cmc
mov
adc
and
fs
lock
stos
jle
(bad)
shl
ins
imul
push
mov
add
leave
lea
dec
inc
xchg
shr
popf
add
lea
push
dec
(bad)
test
mov
in
mov
xchg
sub
cmp
sub
shl
loope
dec
ds
popa
retf
pop
cmp
sub
shr
inc
or
arpl
dec
mov
cmps
repz
ins
imul
retf
pop
mov
mov
lods
adc
cs
xchg
loope
lods
push
aaa
xchg
push
jae
mov
mov
mov
daa
xchg
inc
in
imul
dec
mov
lock
pop
mov
ja
push
push
pop
dec
jns
cld
xchg
in
sub
mov
stos
(bad)
mov
loopne
ret
movhps
test
push
dec
xchg
pop
adc
or
stc
adc
push
(bad)
xor
loopne
loope
push
mov
pop
retf
fsubr
popa
aas
jg
lods
jae
sub
or
test
xchg
jl
jge
cmp
bound
stc
cmps
jp
mov
mov
cmp
dec
sub
jmp
rcr
mov
jg
and
add
bound
jno
aad
sbb
pop
cdq
adc
mov
or
rcr
adc
(bad)
test
pop
and
data16
aam
pop
mov
pusha
pop
das
test
or
mov
bound
mov
sbb
(bad)
ja
popf
pop
xlat
mov
xor
add
mov
cmc
loope
dec
dec
stc
ret
jno
hlt
fsubr
fwait
aad
cmps
iret
popa
dec
xchg
adc
ret
mov
pop
jmp
ret
dec
hlt
mov
sub
mov
fimul
pop
dec
ficom
ja
push
xor
mov
std
dec
xchg
test
fwait
sub
aas
push
jno
(bad)
enter
sub
adc
inc
push
add
lods
and
pop
push
pop
clc
mov
xchg
lds
xchg
or
ficom
fiadd
and
in
sub
out
jmp
js
lds
xchg
mov
mov
mov
data16
xchg
xor
add
sbb
pop
movs
in
push
test
fist
leave
lock
std
rcr
dec
rol
stos
or
test
and
mov
ror
loopne
icebp
enter
iret
imul
les
test
xchg
lock
ficom
ds
cld
mov
xor
mov
mov
retf
xchg
gs
xchg
es
mov
dec
cli
xchg
shl
xchg
dec
jmp
mov
dec
in
jne
les
data16
loop
loop
sub
inc
dec
pop
add
sbb
jbe
adc
cvtdq2ps
movs
push
cmp
out
push
sub
(bad)
mov
(bad)
fld
in
xor
inc
adc
inc
cmps
rol
pop
ret
xor
call
fst
cmc
ret
(bad)
cmp
xlat
xchg
push
add
dec
dec
adc
and
fisubr
xchg
bound
or
cmp
add
and
jae
jecxz
xchg
gs
fucomip
data16
jl
fs
push
mov
(bad)
mov
cld
pop
lods
mov
sbb
ins
leave
adc
dec
movs
cmp
mov
(bad)
cmc
mov
push
add
bound
fpatan
aad
mov
sbb
push
retf
jo
mov
push
pushw
loope
aaa
dec
sub
mov
repz
mov
fmul
in
fnstsw
sti
mov
jno
scas
out
cdq
bound
out
out
pop
cmps
test
sbb
aad
mov
sar
dec
xor
inc
fs
lods
inc
mov
arpl
mov
push
fs
cmp
xor
add
and
pop
(bad)
icebp
inc
in
sbb
repnz
cmps
adc
loop
push
mov
mov
xlat
inc
scas
js
jae
cld
push
pop
rol
sahf
outs
jg
mov
sbb
jecxz
and
xchg
shl
and
mov
cld
in
ror
add
mov
xor
nop
add
xor
push
cmp
je
mov
inc
xor
(bad)
(bad)
stc
aad
andnps
sbb
int3
jg
aam
sbb
inc
cmps
aaa
arpl
and
jo
mov
push
lock
fbstp
push
inc
(bad)
fld
(bad)
jmp
xchg
stos
pop
lea
adc
stos
mov
jbe
pop
pop
push
int3
pop
pop
cdq
sub
aam
cmp
cdq
(bad)
lods
and
outs
sub
mov
pusha
mov
lods
std
ja
pop
or
sbb
add
mov
je
std
jecxz
shl
in
outs
inc
adc
xchg
or
sub
test
pop
jge
add
jae
xchg
jle
inc
mov
cmp
xor
stos
dec
ret
clc
ror
pop
mov
add
into
aam
in
call
pop
das
dec
popa
fxch
sbb
lea
jne
je
scas
ret
sub
les
aaa
daa
mov
loop
sti
or
out
cmc
jnp
jecxz
sub
in
das
ss
xor
nop
outs
das
jmp
fld
popf
outs
sbb
dec
push
or
enter
sahf
xchg
cmp
mov
dec
adc
ror
add
in
fadd
jmp
loope
les
mov
adc
dec
mov
jo
mov
cmp
adc
fcmovbe
jmp
jae
stos
stos
movs
push
pop
lock
pop
pop
adc
cmp
sub
xchg
add
fcmovnbe
daa
pop
push
sbb
cs
or
aaa
iret
call
mov
xor
fwait
repnz
dec
loopne
ins
lods
(bad)
mov
jo
(bad)
popa
out
adc
xchg
or
shufps
mov
xchg
xchg
xlat
inc
inc
xor
fisttp
xchg
mov
es
push
jecxz
push
xor
fsubr
sti
repz
cmp
fwait
js
or
(bad)
xlat
dec
shr
push
cmp
scas
jge
fadd
das
(bad)
and
cmp
ds
sbb
lods
jle
xor
in
mov
sub
jno
or
enter
lea
add
lods
ds
fistp
(bad)
xlat
push
or
scas
pop
mov
fisttp
sub
fsubr
mov
adc
mov
test
adc
push
fisttp
je
pop
adc
xor
mov
push
stos
test
dec
jge
mov
(bad)
aam
and
sbb
not
xor
push
xor
imul
pop
inc
and
std
cs
mov
(bad)
clc
mov
pop
in
out
hlt
jmp
dec
jno
outs
pop
mov
test
(bad)
gs
sbb
iret
les
ja
int
mov
xchg
cli
adc
je
int3
cmp
aam
mov
pop
clc
aas
add
arpl
fwait
imul
jb
stos
clc
out
add
mov
push
arpl
(bad)
sub
mov
stc
or
outs
imul
call
inc
jge
xor
push
xchg
or
cmp
jecxz
mov
clc
shr
cmc
sub
mov
pop
mov
push
add
pop
ss
push
inc
loop
loop
(bad)
xor
(bad)
mov
add
sbb
aad
pusha
in
jmp
scas
pushf
jg
fistp
pop
test
cmp
aad
or
loope
dec
jns
and
imul
sub
das
fimul
pop
adc
out
add
stos
dec
fsub
outs
pop
jno
mov
clc
dec
repnz
jge
mov
mov
jno
push
adc
ja
add
cwde
fsubr
sbb
xor
pop
(bad)
push
repnz
xchg
inc
sub
jge
cmp
imul
mov
ins
dec
inc
vmovhps
in
and
sahf
rol
or
mov
pop
pop
(bad)
out
daa
cmp
aas
lock
jecxz
dec
arpl
into
int3
jo
jno
cli
pop
cmp
mov
adc
ss
adc
(bad)
les
es
mov
mov
push
fidiv
fnstenv
shl
cmp
lods
sbb
lods
adc
mov
pop
cs
ds
hlt
dec
mov
adc
iret
psllw
scas
cmp
sub
xchg
mov
dec
mov
cdq
cli
psubsb
ret
pop
mov
in
sub
jl
xchg
loop
(bad)
sbb
inc
xor
mov
mov
(bad)
dec
cmps
das
mov
xor
in
push
lds
test
push
xchg
sbb
dec
aaa
sbb
mov
xchg
stos
fiadd
dec
pop
inc
sbb
sub
sar
cmp
pop
sbb
arpl
dec
into
jmp
call
sub
imul
cmp
(bad)
mov
ror
jge
pusha
stos
popf
sub
push
dec
imul
inc
(bad)
dec
push
mov
jbe
mov
adc
add
jl
aam
call
fcom
jae
nop
inc
dec
xlat
mov
fdivr
enter
mov
xchg
mov
mov
jo
pop
and
sti
pusha
mov
push
aad
rdmsr
jbe
out
dec
cmp
mov
adc
push
cwde
cmp
or
sbb
movntps
push
sbb
sti
hlt
cmp
dec
fnstsw
pop
push
push
enter
jnp
dec
push
pop
jae
cmc
in
rol
pusha
inc
lds
ins
mov
(bad)
scas
push
lods
dec
pop
lods
sbb
cwde
push
lahf
es
loop
and
and
inc
fidiv
push
ins
cmp
jne
mov
shl
call
adc
mov
xlat
aaa
xor
and
lea
aam
xor
and
test
fst
xchg
dec
mov
xchg
sub
push
test
and
xchg
aam
push
test
mov
sub
js
mov
js
popa
inc
xor
(bad)
jne
into
popa
dec
jns
xor
scas
push
dec
add
xchg
call
mov
fnstsw
mov
fild
cmp
xchg
pushf
mov
fadd
push
mov
xor
push
push
test
scas
ret
ror
add
test
inc
mov
or
cwde
dec
jns
fs
cdq
pop
cmp
ss
lds
pmuludq
movs
out
mov
mov
add
fild
xchg
call
mov
and
and
pop
(bad)
sbb
je
leave
call
pop
icebp
repz
rcr
adc
mov
xchg
sub
pop
repz
lahf
in
adc
ror
fsubr
dec
sub
add
or
and
ss
jb
push
jne
stc
in
es
imul
cmp
xchg
fisubr
inc
ins
outs
sbb
xor
xor
dec
std
fisttp
xor
nop
in
leave
pop
or
jbe
sbb
inc
pop
xchg
add
bsr
cmp
ja
stc
jecxz
cmp
push
out
out
mov
sub
inc
(bad)
jbe
jmp
jo
retf
jle
retf
mov
cmp
mov
or
push
jle
mov
push
lods
fiadd
lahf
ss
push
dec
or
aad
fs
sub
retf
or
outs
mov
sbb
aas
ins
jno
(bad)
pop
fcomp
dec
lahf
sub
or
inc
mov
sbb
lock
mov
xor
fs
stos
xchg
gs
cli
(bad)
nop
test
ins
sub
pop
mov
xchg
repz
bound
test
cmc
mov
call
sbb
push
fist
ds
test
xchg
les
lock
bound
or
and
pop
pop
lahf
add
in
cdq
mov
sub
lds
push
pop
pusha
dec
xchg
jns
and
(bad)
loop
ja
test
shr
aas
sbb
(bad)
repz
popa
aas
nop
mov
clc
dec
add
xchg
push
out
sub
fidivr
ret
sbb
and
mov
mov
adc
in
mov
aad
pop
adc
add
or
dec
mov
and
xchg
inc
pop
popf
retf
adc
out
out
cmps
cmc
test
or
push
or
push
pop
adc
stc
mov
sub
dec
repnz
in
mov
mov
jl
jle
repnz
aam
and
jb
ror
in
sbb
in
aas
aaa
pop
lahf
int
dec
dec
aaa
movs
imul
ins
mov
jno
xacquire
sub
xor
xchg
gs
cmp
xor
rcl
adc
pop
jmp
into
loope
adc
ins
xor
repnz
lea
push
mov
pop
dec
stc
push
pusha
outs
xchg
mov
mov
clc
int3
fisubr
cmp
push
jbe
mov
sub
fld
jnp
adc
loopne
lea
test
mov
cmc
add
(bad)
cmp
movs
push
lods
test
xchg
or
jmp
sbb
mov
cld
data16
mov
out
jno
sub
push
jne
hlt
xor
add
dec
sub
aad
sar
retf
add
mov
mov
jb
cmp
push
sbb
popa
xchg
jne
add
movs
sub
clc
xchg
es
ret
enter
add
imul
aaa
in
dec
sub
dec
jecxz
cmp
dec
clc
push
jmp
imul
push
adc
adc
lods
ret
mov
push
mov
mov
shl
in
(bad)
fiadd
test
cmc
test
xor
std
dec
loope
test
jmp
mov
aaa
mov
or
xor
cli
ds
sub
sub
mov
jle
and
scas
push
ss
sub
or
add
sub
inc
jg
jne
cmp
fldcw
clc
cmp
jne
dec
pushf
lock
mov
fimul
sbb
ins
enter
xchg
mov
jp
call
iret
scas
(bad)
cli
cmps
std
fsubr
adc
xchg
lea
int3
jo
and
push
mov
repz
jo
mov
leave
stos
frstor
ja
out
mov
pop
addr16
sti
mov
xor
daa
not
fild
cmps
and
add
cmps
push
adc
out
add
mov
or
or
sti
sbb
xor
pushf
pop
and
mov
mov
(bad)
mov
test
mov
loope
(bad)
push
mov
or
or
data16
aad
js
xchg
daa
xor
xchg
fs
mov
sti
es
aas
pushf
mov
adc
addr16
aas
call
or
dec
(bad)
rcr
and
ret
int3
pop
popf
xor
stos
add
stc
sub
rcr
aam
add
dec
test
push
call
push
shl
jg
fidivr
sti
enter
sbb
popf
mov
clc
ins
push
imul
out
add
into
(bad)
sar
int
test
and
stc
xor
jmp
inc
lahf
jnp
jnp
mov
fsub
rcl
adc
inc
in
push
(bad)
les
in
retf
ret
inc
ja
cdq
(bad)
inc
or
xlat
mov
mov
hlt
cli
mov
lea
jae
int3
sub
mov
inc
xor
cmp
shl
repz
and
jno
ins
movs
mov
shl
outs
xchg
sub
mov
sbb
cmc
lock
add
inc
xchg
cmp
std
ins
pop
dec
jp
aas
test
nop
push
imul
pop
jg
sub
jae
jo
sahf
mov
cmp
loopne
test
mov
imul
loopne
je
stos
inc
mov
jo
inc
xor
fist
xor
pop
outs
test
mov
pop
iret
outs
fdiv
push
or
mov
add
std
adc
jl
mov
ja
cmp
ins
cmp
push
xchg
(bad)
mov
fidiv
cmp
xchg
nop
sbb
fstp
sbb
fs
or
icebp
mov
push
test
lods
lods
shl
pushf
pop
ins
mov
ret
enter
popa
pop
pop
scas
sbb
sahf
xor
outs
lods
sbb
mov
fucomp
(bad)
repnz
mov
jns
bound
movs
cmc
minps
adc
sar
fiadd
inc
mov
enter
cmps
or
loop
(bad)
cmp
imul
mov
pop
xor
mov
jbe
xchg
push
mov
xor
or
push
sbb
retf
dec
test
jmp
mov
push
add
adc
js
test
xor
cmp
in
dec
fidiv
(bad)
cmp
and
in
xchg
jnp
sub
add
xchg
or
enter
push
cmp
pop
fnsetpm(287
out
dec
lea
fdiv
and
mov
xchg
add
call
pop
sbb
ret
sti
push
das
dec
xor
cmp
retf
mov
gs
dec
inc
and
mov
xlat
xchg
(bad)
je
in
ret
cmps
jmp
out
cmp
push
jo
xor
mov
test
xchg
sub
je
stos
inc
in
mov
sti
mov
adc
(bad)
mov
leave
or
cmc
sbb
clc
jmp
es
data16
enter
rcl
fdivr
pop
retf
popa
std
adc
mov
push
loopne
sbb
xor
mov
xor
jmp
pop
outs
(bad)
lea
bound
cmp
mov
(bad)
fsub
aas
pop
push
mov
pusha
fld
adc
(bad)
gs
inc
jbe
stos
sbb
mov
(bad)
jmp
xchg
dec
add
fsubr
pop
pop
cmp
add
sbb
bound
jmp
enter
repnz
nop
mov
xor
mov
out
out
adc
mov
inc
test
jmp
lds
push
jmp
cmp
jbe
cld
mov
mov
dec
xor
jb
pop
inc
outs
aas
mov
dec
pop
js
aam
and
scas
fwait
and
in
out
add
popa
push
mov
sub
ja
cmps
test
ins
mov
xor
inc
ds
mov
out
jge
jo
push
hlt
jle
fnop
(bad)
adc
add
fisttp
add
add
outs
ret
adc
cmp
jle
add
pushf
inc
dec
sub
imul
mov
xchg
push
pop
inc
sub
stos
jb
jne
or
retf
xchg
clc
xor
xor
sub
popf
in
(bad)
push
lahf
push
sub
jle
cs
aas
and
into
or
jno
push
dec
push
or
and
lea
jmp
pop
pop
sbb
(bad)
jns
or
rep
pop
mov
mov
jb
mov
xor
dec
rol
dec
rcl
ds
movs
add
les
stc
lea
es
scas
pop
stc
lahf
push
cdq
mov
sub
inc
mov
sub
and
xor
enter
(bad)
cmp
mov
(bad)
arpl
sar
mov
xchg
inc
lahf
pop
popa
in
pushf
stos
movs
push
lock
mov
or
sub
retf
push
call
xor
jmp
ret
jle
mov
pop
and
mov
mov
fwait
dec
test
aam
pop
sbb
or
push
scas
pop
mov
adc
or
mov
mov
cmp
mov
push
or
jnp
scas
push
fdiv
frstor
js
fmul
inc
outs
mov
inc
cmps
std
mov
push
cmp
mov
xor
inc
jp
cli
sbb
mov
test
mov
mov
push
mov
dec
imul
enter
mov
fst
add
cmp
imul
add
fstp
jns
push
mul
fsub
or
jecxz
xor
cmps
and
push
dec
les
add
es
loopne
cmp
pop
mov
or
inc
or
mov
and
pop
mov
jnp
std
loopne
je
idiv
xchg
xor
add
jecxz
dec
call
ds
(bad)
ja
(bad)
xor
sbb
pop
jb
stos
lods
sti
xchg
and
pusha
pop
outs
mov
sbb
pop
imul
xor
(bad)
jno
sbb
cld
adc
fimul
dec
jb
add
add
scas
dec
rcl
and
das
jae
jge
mov
xchg
and
out
mov
xchg
nop
neg
leave
test
es
jmp
in
cmp
mov
inc
ja
push
xchg
inc
adc
jmp
cdq
sbb
push
fild
cmps
retf
sbb
dec
sub
call
xchg
in
mov
scas
or
les
movs
xor
add
fsubr
scas
cmp
add
cmp
adc
es
sahf
dec
jbe
xor
mov
fnstenv
inc
sub
cmp
push
shl
test
cs
aam
pop
sar
adc
repz
fnstsw
sbb
xor
repz
or
cld
or
imul
inc
dec
int3
fld
ret
push
outs
mov
int
fild
xchg
pop
sbb
test
xor
lods
fstp
cmps
sar
and
fbstp
cmp
sub
cli
(bad)
daa
jl
xchg
mov
add
mov
stos
stc
pop
repz
jle
jae
jmp
loop
pop
add
sar
icebp
mov
pusha
or
cs
fistp
push
xchg
inc
add
cmps
lahf
inc
sub
or
adc
jmp
or
shl
fdivr
sbb
ja
loopne
push
mov
xchg
(bad)
and
nop
mov
ja
and
test
cmp
push
scas
adc
pop
sub
loop
push
repz
ret
enter
push
cmp
add
pop
lock
je
aas
xchg
cmp
sub
or
mov
pop
in
stc
mov
pop
scas
test
push
in
pop
cs
pop
xchg
ret
hlt
sbb
xchg
xchg
adc
xchg
retf
add
xor
in
lahf
inc
stos
jb
sub
or
lods
fnstenv
xor
fcmovnu
repnz
cmp
dec
adc
xchg
inc
push
and
ror
adc
sub
sbb
or
push
in
shr
jge
lods
gs
xor
adc
push
scas
in
mov
sbb
call
xor
or
dec
pusha
jecxz
fsub
les
(bad)
dec
repz
lds
ja
adc
add
add
outs
add
cwde
mov
rcl
inc
fwait
(bad)
sahf
sbb
add
push
dec
xchg
test
(bad)
sbb
sahf
fldcw
jge
jmp
xor
mov
sahf
add
ror
or
mov
push
sbb
jmp
cs
sub
push
mov
imul
fild
sbb
inc
jmp
mov
repnz
into
sub
xor
push
(bad)
fldenv
out
and
sbb
xlat
jne
test
sub
push
sbb
or
cmps
or
pop
sbb
adc
sub
sahf
add
and
js
cmp
and
in
pop
call
jae
sub
fdiv
shl
and
xchg
or
test
rol
add
js
out
cmp
pavgb
jns
mov
lock
xchg
jmp
inc
and
xchg
call
mov
xchg
daa
add
pop
mov
gs
dec
jb
xchg
pop
aaa
loope
retf
pusha
mov
(bad)
jl
fadd
pop
mov
jmp
cmps
mov
stc
loopne
jno
cmp
int
xchg
pop
inc
jle
adc
dec
add
cmp
imul
dec
and
sqrtps
shl
xor
daa
or
(bad)
in
imul
out
jmp
inc
popa
dec
adc
adc
dec
or
pop
dec
xchg
mov
adc
sub
inc
xchg
push
push
jno
and
push
(bad)
ins
sub
mov
dec
sub
aas
mov
sbb
cmp
mov
cmp
inc
fild
xlat
mov
addr16
fs
in
sub
inc
cmp
rcr
lahf
or
mov
mov
xchg
pop
ja
dec
cmps
cmp
push
cs
repnz
pop
aad
rcr
aaa
xchg
mov
jp
jl
adc
and
or
mov
and
adc
addps
(bad)
xchg
adc
add
mov
ja
bnd
loope
adc
fucom
sub
scas
push
out
jmp
mov
out
add
aam
bound
movs
test
dec
cmc
movs
sub
push
xchg
(bad)
adc
hlt
pop
(bad)
xchg
aaa
je
mov
daa
xor
inc
jmp
call
and
jne
ror
mov
rol
pop
mov
mov
daa
mov
push
retf
hlt
dec
mov
daa
xchg
call
inc
pop
xor
inc
mov
loope
stos
shl
jae
sub
pop
das
jle
cmp
cmp
sar
popf
sbb
inc
dec
aas
xor
mov
mov
xor
mov
cwde
test
add
pop
add
psadbw
sub
sub
into
and
pop
mov
or
dec
loop
cmp
xor
ficomp
push
mov
jmp
std
aaa
or
(bad)
jg
mov
stos
mov
daa
mov
int
sub
addr16
sbb
sub
call
xor
hlt
push
cmc
jecxz
aas
cwde
in
and
sar
jns
out
add
push
pushf
mov
nop
stos
cmp
(bad)
outs
cmc
shl
sahf
mov
addr16
jg
aad
std
mov
xchg
push
or
(bad)
sbb
sar
aad
or
pop
fnstcw
jmp
xor
xor
inc
inc
add
xchg
mov
loop
or
dec
dec
stos
jl
xchg
jmp
icebp
stos
pop
jg
push
and
or
pop
pop
cmp
pop
cmps
pop
sbb
pop
enter
push
mov
jle
imul
sbb
int3
aad
push
or
cmp
data16
xchg
xchg
adc
push
pop
pop
and
cmp
(bad)
test
in
xor
call
or
sub
jecxz
add
shl
jl
jmp
jnp
les
imul
inc
xchg
int
jge
sbb
and
push
and
or
retf
mov
jge
pushf
or
mov
out
rcl
fist
pop
(bad)
sbb
aam
sub
mov
sahf
data16
cmps
or
jle
adc
sbb
dec
cwde
push
mov
mov
out
push
dec
fcom
js
xor
popf
jb
sbb
adc
and
sub
jg
test
scas
sub
cld
dec
mov
or
inc
mov
sub
pop
mov
jp
xchg
lds
ficom
jg
(bad)
cmovns
xor
lds
in
add
call
(bad)
sub
push
les
lods
pusha
rol
sar
leave
xor
fdivrp
rol
mov
add
pusha
pop
sbb
sub
sub
pop
call
fdivrp
scas
fucomp
jmp
stos
or
inc
lods
repnz
lea
mov
mov
ja
cmc
push
loope
outs
xchg
repz
push
dec
xor
popf
repnz
add
iret
loopne
cmp
add
push
ds
xchg
lock
push
add
pop
test
dec
test
jecxz
jl
stos
dec
test
push
dec
cwde
sbb
cmc
ins
jle
cmps
fisubr
jecxz
inc
xchg
push
or
and
test
leave
loope
xchg
sub
xor
xor
pop
sub
int3
add
mov
out
lods
mov
cmc
pusha
dec
pop
dec
outs
pop
ds
js
fisub
cmp
pop
test
rcl
xlat
mov
jle
or
pop
add
xor
test
inc
mov
jmp
mov
adc
iret
xor
or
jmp
jb
pop
into
pop
shl
les
loopne
adc
inc
xchg
mov
sbb
xchg
push
inc
out
call
(bad)
addr16
xor
test
outs
push
(bad)
cmc
sar
mov
repz
xchg
ret
mov
test
mov
add
in
aam
mov
lahf
fcomi
jb
jno
push
rcr
je
mov
popf
ds
inc
fisub
call
int3
push
mov
loop
mov
push
test
div
xchg
ins
ja
xor
lahf
dec
inc
dec
inc
mov
push
(bad)
pop
xchg
cs
cli
xchg
in
push
mov
xor
leave
retf
xor
stc
push
in
(bad)
aad
jecxz
aas
and
(bad)
dec
stos
imul
add
and
mov
out
int
loope
adc
ja
sar
enter
and
ja
pop
movs
cdq
cmc
adc
imul
inc
fcomp
jle
jmp
and
lock
xor
or
outs
xchg
xchg
movs
sti
jl
pop
pusha
in
(bad)
ins
xchg
(bad)
push
cmp
xor
ret
and
enter
pop
nop
mov
adc
or
pop
lods
inc
inc
data16
jg
cmc
ins
xchg
and
lock
int3
push
pop
mov
xchg
mov
and
ja
jae
pop
(bad)
fstp
mov
sub
add
jne
push
fsubp
xchg
or
jecxz
int
pop
and
mov
shl
sbb
fistp
adc
rcr
cs
adc
cdq
lods
xchg
fld
addr16
int3
push
xor
sbb
xor
aas
pop
cli
ror
cld
shl
xchg
jmp
in
rol
movs
out
inc
in
call
test
imul
and
jp
push
pop
movs
sub
ins
xor
xchg
fdiv
loop
jg
icebp
cmp
dec
ror
or
mov
cld
(bad)
out
adc
adc
mov
adc
fild
mov
repnz
loopne
stos
sbb
test
mov
pop
sub
push
sub
add
scas
cli
xchg
and
call
inc
pop
xor
push
adc
lods
jns
in
fs
add
sahf
iret
mov
cmp
push
cmps
outs
xor
mov
out
cmps
cmp
cld
jne
pop
inc
imul
or
xchg
inc
adc
or
jge
enter
adc
or
cdq
push
out
bound
int3
enter
out
xor
in
(bad)
imul
pop
into
mov
popa
xchg
pushf
addr16
(bad)
stos
enter
pand
push
jle
mov
or
mov
int
aas
mov
pop
lods
fldcw
cmps
data16
inc
xor
cwde
fwait
add
lods
sub
xchg
dec
cld
cmp
sub
pop
mov
mov
or
in
adc
retf
mov
add
out
sti
lahf
sub
dec
movs
lods
mov
jo
iret
(bad)
dec
sbb
andps
retf
lods
cwde
add
cmp
popf
mov
sti
enter
je
addr16
pop
push
mov
mov
xchg
dec
ficom
ret
ins
xlat
loopne
(bad)
mov
mov
cmp
lods
or
inc
arpl
adc
pop
inc
pop
rcr
dec
inc
ins
aad
ss
leave
dec
sbb
(bad)
jno
adc
out
sbb
pop
xchg
not
mov
repz
lahf
xchg
jns
call
loope
mov
ficom
jne
xor
push
clc
push
or
je
add
inc
mov
jmp
or
nop
push
scas
movs
lahf
xlat
cmps
and
out
sub
ss
(bad)
lods
fiadd
adc
push
mov
mov
mov
sahf
mov
mov
pop
sbb
mov
enter
pop
stc
daa
fucomi
jno
dec
push
repnz
js
repz
pop
xor
ret
cwde
ins
lods
mov
aad
repz
inc
push
test
call
(bad)
adc
test
mov
test
shl
mov
in
repnz
pop
repz
ins
jb
popa
or
sar
push
inc
stos
cwde
dec
or
xchg
xchg
ins
test
inc
add
iret
adc
ins
push
dec
cmp
pusha
fidiv
cmps
cmp
lds
jne
or
loope
adc
icebp
js
fisubr
jbe
mov
call
pop
je
pop
dec
int3
loop
adc
or
pop
or
call
xor
addr16
pop
mov
sub
mov
push
fist
scas
outs
ins
sar
jns
mov
neg
dec
add
push
dec
lock
adc
push
iret
call
fidiv
ficom
mov
fcomi
jecxz
fisttp
mov
xor
xchg
mov
xchg
jecxz
push
push
xor
adc
ds
xor
int
sub
and
test
push
das
iret
cli
sub
leave
and
imul
jg
ss
inc
sbb
ss
cmp
xchg
lea
xchg
(bad)
push
or
pop
nop
mov
mov
inc
add
adc
in
sub
in
pop
call
clc
dec
call
mov
adc
adc
cs
fist
mov
cwde
sub
fidiv
jl
lock
xor
and
push
inc
mov
ss
rcl
icebp
dec
sar
sbb
(bad)
pop
push
jns
addr16
(bad)
popf
adc
test
mov
xchg
movs
mov
lea
arpl
lea
or
or
outs
(bad)
mov
cmp
lock
sub
xchg
push
outs
(bad)
mov
into
outs
pop
mov
fld
push
call
inc
jmp
xlat
int
and
nop
pop
(bad)
iret
ja
lods
cdq
sbb
sbb
lock
sbb
retf
pop
jae
and
jp
mov
or
lods
xor
pop
xchg
repnz
sbb
xchg
pop
div
adc
jg
jp
cld
sar
scas
fldln2
das
out
into
inc
sbb
push
xchg
inc
mov
and
lea
mov
loope
popf
ja
retf
or
les
loope
or
mov
push
out
das
cmp
lahf
pop
mov
jmp
jae
movs
adc
fiadd
jb
shl
sub
idiv
push
pop
(bad)
fidiv
xchg
(bad)
cmp
pop
add
adc
mov
adc
loop
test
sub
push
mov
add
arpl
push
daa
cmp
out
into
push
add
call
aam
mov
or
call
fnstcw
jb
adc
cdq
test
retf
test
cs
xchg
inc
cmps
xor
sbb
cmp
mov
leave
and
mov
pop
adc
inc
ret
xchg
cmps
lock
js
pop
mov
adc
int
fst
mov
aam
pushf
sti
adc
add
stos
mov
ins
dec
retf
ja
cmp
mov
imul
out
(bad)
je
loope
sub
sub
push
mov
(bad)
sbb
cmp
mov
(bad)
ss
jl
out
sub
cld
dec
mov
and
lahf
pavgb
mov
inc
sahf
gs
push
repnz
mov
inc
pop
leave
mov
mov
dec
fsub
pop
pop
aam
and
jge
test
(bad)
pop
test
dec
aam
icebp
xchg
ss
and
dec
mov
adc
ss
jnp
inc
push
dec
push
iret
xchg
sti
inc
dec
mov
in
test
push
push
out
jp
in
ja
pop
ja
test
mov
aaa
mov
cmp
out
xor
dec
in
push
xchg
int3
adc
imul
cmp
add
jp
lock
fcmove
call
iret
mov
mov
cmps
sbb
xchg
or
dec
or
add
addr16
ins
(bad)
and
sbb
in
and
aas
and
iret
pop
jb
sub
retf
or
sbb
jecxz
mov
adc
xor
(bad)
xchg
or
cmps
and
out
inc
pop
fs
add
adc
fcmovb
rcr
push
push
pusha
mov
es
mov
push
inc
cmp
sbb
mov
jp
pop
sub
mov
pop
mov
js
mov
imul
dec
add
in
xchg
add
or
sub
out
xor
mov
and
push
leave
test
and
das
dec
mov
sbb
les
mov
scas
ret
aad
and
jl
sahf
scas
or
movs
fnstcw
push
addr16
push
cmps
mov
or
fisubr
dec
imul
das
push
mov
lock
sub
dec
adc
sbb
mov
push
imul
(bad)
in
sub
test
inc
cs
(bad)
cmps
in
hlt
(bad)
fwait
popa
cmps
(bad)
out
nop
cmps
loop
sbb
das
in
adc
xchg
(bad)
push
mov
jle
repnz
cwde
ss
push
je
hlt
fistp
fisubr
inc
sbb
mov
sbb
push
sahf
ror
stos
adc
mov
mov
(bad)
pushf
inc
inc
mov
outs
or
fisubr
pusha
inc
jb
jg
xor
jnp
add
dec
jmp
cmc
push
xor
leave
daa
cmp
outs
fs
mov
dec
sar
or
xchg
pop
(bad)
das
fwait
pop
outs
cmp
ja
addr16
xor
pushf
or
rol
or
jb
fisub
pop
mov
repz
sti
rol
enter
inc
cwde
call
add
mov
std
jmp
xor
out
pop
mov
sbb
mov
inc
xor
std
jae
mov
lds
ss
jmp
and
mov
inc
cmps
and
movs
fstp
push
rol
mov
loope
adc
pop
push
jl
or
jo
test
or
add
inc
clc
inc
push
jmp
add
loopne
or
sbb
rol
push
into
je
push
test
pop
fcom
xchg
pop
cdq
or
lahf
inc
dec
sbb
fwait
shr
and
xor
fistp
push
call
mov
jl
ins
dec
add
mov
sub
jmp
dec
je
lahf
adc
jnp
fistp
daa
mov
add
(bad)
call
jg
sbb
sbb
scas
xchg
fdiv
mov
outs
sahf
(bad)
in
inc
sub
mov
cmps
jmp
mov
push
lds
lods
rcl
add
inc
sub
mov
sub
xchg
stc
dec
lds
pop
cmp
push
mov
inc
cwde
cmc
into
or
adc
pop
mul
ret
stos
pushf
leave
repnz
in
popf
cs
sbb
stos
daa
add
mov
ja
int
stos
xor
out
pop
xchg
leave
xchg
inc
outs
lods
popf
mov
mov
jns
or
popf
call
lea
push
mov
sbb
repz
push
xor
push
mov
iret
jmp
dec
ins
mov
jge
add
shl
cld
retf
sub
add
(bad)
es
sbb
push
aaa
sahf
mov
clc
inc
rep
aas
adc
mov
cmps
and
mov
sbb
fimul
xor
fcmovne
sahf
mov
daa
mov
dec
out
aam
mov
dec
imul
out
xchg
ret
loop
xchg
fdiv
mov
pop
jge
push
jg
mov
lds
xchg
inc
nop
adc
aad
iret
mov
or
out
xchg
adc
(bad)
push
ins
push
int
jbe
or
adc
dec
adc
cmp
push
jo
mov
push
mov
jl
(bad)
jmp
sbb
sub
pop
dec
jne
push
imul
ret
data16
out
cli
or
xor
add
mov
out
movs
call
fist
(bad)
loop
int
retf
push
inc
xchg
das
jo
lods
jle
imul
pop
shl
mov
aaa
movs
aas
pop
ret
gs
lahf
mov
pop
je
jno
push
aaa
cs
fist
adc
(bad)
and
cs
xor
xchg
sahf
stos
icebp
mov
mov
stos
or
cmp
mov
mov
loope
cmc
fnstsw
enter
inc
das
pop
sbb
pop
add
out
push
fsubr
push
js
and
test
loope
(bad)
out
xor
mov
sub
sub
push
pusha
daa
test
mov
jp
adc
arpl
fcmovnbe
inc
(bad)
sub
icebp
ret
iret
test
add
test
mov
xchg
cmp
and
ffreep
leave
shl
push
pop
push
pop
out
sub
rol
inc
shl
sbb
fcomp
mov
mov
jne
xor
pop
or
test
cmc
inc
in
sub
lock
and
xchg
cli
loopne
pop
and
nop
xor
fst
(bad)
dec
lods
in
push
mov
jmp
scas
sub
inc
ss
jp
and
(bad)
fcom
pop
mov
sub
jb
into
div
mov
cmp
mov
and
addr16
add
imul
idiv
pushf
inc
fimul
mov
sbb
push
(bad)
icebp
xchg
adc
loope
iret
pusha
jmp
fsub
retf
imul
cmp
jbe
mov
popf
pop
ret
enter
cmp
mov
or
in
ror
cli
jnp
mov
lods
cli
pop
or
or
and
inc
(bad)
cli
cdq
cwde
mov
cmp
leave
scas
mov
jl
mov
xor
out
sub
into
mov
clc
dec
jge
outs
xchg
xchg
mov
mov
push
cdq
add
dec
fadd
fdivp
cdq
ja
jae
jmp
mov
mov
inc
lods
test
xchg
add
push
fisub
push
dec
es
aam
not
lock
(bad)
mov
xor
dec
(bad)
push
ja
push
fild
fcom
ss
sbb
fisttp
cli
call
mov
iret
mov
stos
aad
mov
leave
jp
cmps
cmp
into
mov
lds
mov
jecxz
sbb
xor
add
mov
xlat
shl
fcom
and
(bad)
cmp
pop
push
jno
mov
jno
mov
rcr
loope
inc
in
cdq
div
sbb
inc
pop
mov
mov
xchg
cmp
in
add
push
cs
jnp
dec
and
mov
gs
mov
out
fs
push
and
jp
pop
jmp
xchg
cwde
(bad)
stc
ss
inc
xchg
xor
add
and
adc
adc
mov
mov
mov
mov
test
popf
repz
or
loopne
cs
xchg
fnsave
lock
jmp
sub
std
adc
xchg
fstp
shl
xchg
call
xchg
push
sub
enter
xor
fmul
pop
imul
and
or
fld
add
rcr
fimul
inc
fbld
xchg
xchg
mov
inc
mov
imul
std
repnz
ds
inc
pop
arpl
ds
or
sti
adc
fnstsw
xor
int
clc
dec
retf
add
(bad)
fidivr
mov
inc
movs
and
pop
mov
fimul
push
lods
fistp
shl
xor
pop
pop
push
xchg
xchg
mov
lods
sbb
loope
xchg
mov
mov
aam
hlt
in
gs
ret
push
mov
clc
cmps
xor
xor
push
sbb
pop
sub
xchg
and
xor
aam
xchg
cmp
and
call
and
ficomp
push
je
leave
call
in
ins
pop
popa
sbb
enter
inc
enter
xchg
sti
or
imul
jle
jne
dec
fidivr
leave
and
add
mov
out
gs
mov
dec
fbstp
and
hlt
jl
retf
rcr
mov
inc
pusha
jp
lahf
jge
push
fbld
fadd
xchg
jns
ficom
loope
outs
push
jp
dec
cdq
aam
push
or
push
in
cmc
iret
loop
outs
mov
loope
pop
dec
add
ss
cli
(bad)
push
push
fcom
retf
push
cmc
(bad)
mov
pop
stc
pop
test
es
in
mov
inc
cmp
je
ret
std
shl
sub
cmp
jnp
add
sahf
adc
sahf
cli
dec
xchg
into
fstp
mov
jg
inc
push
dec
fwait
or
dec
dec
push
lahf
call
cmp
mov
cdq
scas
and
adc
sbb
test
mov
into
cmp
xchg
xchg
mov
inc
sti
ss
sbb
fmul
hlt
popf
adc
cmp
neg
jl
es
ja
sbb
repnz
jnp
js
push
das
enter
sub
or
iret
shl
movs
mov
adc
mov
lock
mov
sbb
mov
push
mov
(bad)
rol
jnp
adc
cmps
inc
jo
cmps
fisttp
mov
jg
dec
add
stc
xchg
push
aad
jmp
test
push
(bad)
and
jns
sub
fmul
ret
push
retf
xchg
add
adc
pop
mov
mov
or
test
add
sbb
outs
cmp
push
cs
cdq
data16
popf
idiv
in
fs
ja
inc
add
nop
dec
jne
inc
out
daa
movs
lods
rol
neg
jo
das
dec
sbb
idiv
loop
loope
retw
lods
imul
mov
pop
out
xchg
rol
shr
mov
mov
in
cmps
xor
iret
and
loop
ja
pop
outs
jnp
inc
sbb
adc
mov
and
add
mov
lds
nop
mov
repnz
add
ja
xor
adc
sbb
sbb
add
and
aam
mov
retf
add
leave
and
arpl
pop
stc
data16
aad
jb
aam
xor
mov
jl
mov
(bad)
popa
push
test
jb
add
es
sub
adc
push
test
mov
hlt
jg
add
out
push
jns
pop
fidiv
ficomp
cmp
int3
pop
push
mul
mov
push
and
and
sti
ins
pop
add
push
mov
fucomi
sub
sbb
out
addr16
jp
lea
jmp
xor
(bad)
aas
mov
jno
jo
fisttp
test
sub
ror
xchg
js
fsubr
xchg
popf
pop
xchg
jb
sbb
ffreep
pop
stc
add
pop
push
pop
je
sbb
pop
lods
jmp
dec
jle
pop
or
loopne
shl
ja
rcl
imul
aas
in
hlt
daa
adc
add
mov
in
pop
inc
outs
lods
bound
clc
push
or
adc
add
jle
stos
mov
in
ja
xchg
adc
imul
jmp
mov
fstp
push
sub
or
pop
rcl
lahf
int3
je
aas
jle
cmp
sub
enter
mov
imul
or
push
addr16
pop
aas
maxps
call
movs
ds
retf
cdq
pop
ret
push
mov
adc
xchg
push
adc
jae
sbb
int
sub
pop
fsub
mov
mov
(bad)
nop
mov
in
xchg
mov
lods
test
(bad)
mov
cmp
pop
test
mov
pop
call
cmps
loopne
jp
dec
cmp
sti
sub
adc
inc
stos
push
(bad)
or
movs
retf
popf
push
popw
leave
xor
std
push
in
cmp
jl
push
push
add
mov
dec
dec
clc
cmp
push
leave
fcomip
dec
movs
cmp
(bad)
int
adc
jle
mov
sti
outs
aaa
pop
push
dec
sbb
repz
repz
cmp
lahf
(bad)
cs
out
add
cmp
jl
fst
cmp
adc
shr
test
and
call
inc
pop
lods
sub
adc
jnp
pop
cmp
std
les
jnp
and
nop
inc
mov
aaa
pop
xor
pop
push
ror
cmp
aam
or
and
mov
ds
cmp
(bad)
mov
lods
int3
loope
mov
ror
arpl
into
xchg
xchg
arpl
mov
and
shl
jmp
addr16
outs
cs
sbb
xchg
ins
sub
retf
sub
add
js
aad
jp
retf
cmp
push
pop
icebp
jbe
add
ins
cmps
mov
cmp
out
xor
jne
in
(bad)
sbb
add
(bad)
cmp
call
push
idiv
pop
cmc
enter
inc
pushf
js
lods
in
iret
mov
mov
dec
(bad)
test
xchg
cs
fdiv
dec
dec
add
xor
movhps
inc
pusha
and
pop
mov
rcl
adc
vgetexpps
mov
xchg
jns
sub
outs
movs
imul
pop
jae
ins
jge
dec
push
mul
adc
cmp
adc
pop
push
and
add
int
and
std
cmc
xchg
mov
or
jnp
push
je
cmc
adc
or
lds
or
ret
inc
arpl
out
lods
(bad)
je
aad
js
sahf
out
jae
add
les
icebp
dec
cli
(bad)
popa
outs
(bad)
fisub
dec
or
adc
test
jp
jmp
fisttp
pop
jecxz
inc
dec
ins
xchg
mov
mov
out
js
test
jge
rol
mov
fnstenv
mov
jecxz
push
mov
cmps
mov
repz
xchg
adc
in
inc
pop
lods
enter
dec
jl
shr
lods
cmp
and
mov
xor
loopne
ja
outs
pusha
stos
pop
sahf
imul
out
cmp
jmp
(bad)
dec
je
cmp
outs
dec
pop
or
daa
push
cli
fdiv
push
add
sub
scas
call
mov
mov
dec
mov
or
les
gs
test
repnz
push
arpl
push
and
dec
sub
(bad)
lds
in
idiv
in
pop
sub
sti
xlat
shl
(bad)
bnd
fistp
mov
les
cmp
cmps
inc
push
mov
jno
in
std
dec
ja
jge
pop
ja
rcl
test
push
pop
es
fcom
dec
icebp
or
frstor
pop
cmp
adc
lea
aaa
xor
in
das
ret
and
jecxz
fs
dec
in
push
mov
aas
lahf
push
in
sti
or
hlt
(bad)
or
retf
adc
or
pushf
jmp
out
mov
aas
push
cmp
aam
enter
mov
mov
sub
(bad)
adc
adc
xchg
adc
pusha
push
mov
add
out
inc
xor
mov
xchg
sub
ins
repnz
jl
xor
adc
mov
aas
cmps
and
fwait
scas
adc
jbe
cs
jns
nop
sub
sbb
fucomip
jg
cmp
iret
mov
push
cmp
fwait
sub
inc
clc
mov
sub
jnp
fidivr
inc
aaa
cmc
pop
mov
pusha
ret
add
sbb
xchg
pop
lahf
ficomp
ret
rcr
jmp
movsx
sub
cmp
fmulp
push
sub
push
fs
fbld
push
xchg
outs
adc
jp
mov
push
jne
push
shr
adc
ss
lea
mov
push
xor
rcr
cli
xchg
sbb
xchg
xor
xchg
lock
outs
sbb
jno
inc
repnz
repnz
mov
jecxz
and
sahf
xor
cli
es
into
sub
xchg
rol
shl
inc
mov
add
inc
pop
adc
xchg
xor
cli
xchg
popw
mov
add
hlt
cmp
mov
push
sub
add
dec
and
pop
retf
aam
fwait
aas
xchg
push
scas
add
dec
push
push
in
mov
stc
lods
push
jg
in
ret
imul
cmp
jp
xchg
xchg
aad
push
push
ds
(bad)
push
dec
pop
scas
mov
rol
push
mov
popa
dec
pop
sar
fist
push
xor
push
les
pop
inc
mov
push
xchg
push
loope
jmp
mov
cmp
sbb
jmp
retf
mov
popa
rol
aad
lods
cld
es
push
leave
dec
mov
js
xor
jo
jbe
fisttp
mov
inc
mov
jl
sub
gs
ret
enter
pop
mov
add
dec
push
cli
out
imul
sub
xor
pop
dec
mov
mov
ret
imul
mov
into
ins
repnz
cli
sub
cmp
out
sti
ds
ins
fnstcw
cmc
test
jge
or
std
cli
mov
into
push
icebp
push
popa
adc
pop
sahf
push
cmp
mov
ret
leave
jp
out
call
or
enter
jno
or
cwde
mov
pop
jmp
cwde
mov
in
dec
inc
pop
mov
inc
push
vpsrlq
cmp
lock
popf
fldenv
cmp
test
icebp
xchg
fimul
fadd
dec
adc
dec
mov
ret
imul
cmps
and
xlat
xor
adc
add
(bad)
cld
sbb
pop
fsubp
pop
mov
cmps
outs
movs
push
cmc
cmp
pop
stos
iret
mov
in
sbb
std
lea
jecxz
push
cwde
or
repz
inc
daa
push
sbb
outs
jb
and
push
add
push
call
lds
xlat
les
cld
inc
aas
add
rcr
xchg
cmps
stc
test
nop
bound
mov
addr16
dec
ins
sbb
cs
fmul
or
mov
jmp
(bad)
pop
mov
mov
out
lock
out
jno
mov
sub
imul
pop
and
xlat
jecxz
popf
inc
xlat
les
or
push
or
pop
mov
xor
aam
mov
ret
mov
int3
jp
cli
push
push
stos
adc
mov
shl
pop
(bad)
fidivr
sub
pop
sbb
in
aad
dec
jl
movs
enter
sub
daa
(bad)
or
into
shl
xchg
add
sti
jo
mov
xchg
jae
lds
adc
out
pop
inc
in
push
fdiv
outs
mov
scas
scas
data16
or
rcr
mov
das
lods
add
fistp
or
aaa
jae
lock
repnz
xor
and
xchg
loop
pushf
pop
adc
push
dec
movs
mov
cmp
add
mov
je
imul
gs
fwait
repnz
cmps
add
pop
nop
xchg
mov
mov
popa
call
retf
and
pushw
mov
dec
mov
or
cmp
ja
pop
(bad)
and
cmp
push
addr16
ror
cmp
in
and
or
test
clc
(bad)
div
lds
sub
loopne
arpl
popf
jne
movs
fwait
mov
xor
fwait
xchg
out
push
pop
retf
inc
lods
test
xchg
and
into
(bad)
pop
jb
push
mov
cmps
lea
adc
repz
call
out
(bad)
in
xchg
imul
mov
cld
push
pop
pop
clc
loope
inc
and
addr16
dec
sbb
sbb
(bad)
jmp
jp
add
cwde
scas
enter
add
(bad)
outs
out
and
test
mov
mov
or
test
cli
rol
jb
nop
or
(bad)
jp
push
stos
mov
jmp
mov
dec
adc
loope
and
inc
movs
inc
sub
pop
cmps
popf
push
jmp
fisubr
cmp
mov
push
mov
inc
popa
movs
mov
xchg
mov
mov
push
sub
(bad)
fwait
cld
add
cmps
repz
shl
cmp
movs
xor
mov
rcl
std
das
xlat
popa
cmp
aam
mov
mov
movs
push
ret
inc
test
cld
outs
xor
push
jo
sub
add
stos
jmp
jnp
shl
mov
adc
imul
leave
or
sub
mov
pop
inc
mov
xlat
push
cmp
aas
inc
ret
ins
pop
ja
xor
outs
lea
out
ds
shl
outs
loopne
nop
xor
fs
or
retf
pop
add
cmp
pop
jmp
fidivr
jmp
enter
adc
in
fbld
popf
lea
mov
sub
pop
inc
jnp
mov
xchg
loop
push
jl
ins
and
or
jecxz
aas
add
scas
inc
in
xlat
stos
dec
jmp
xor
mov
xlat
jle
mov
sub
push
sub
repnz
or
push
loopne
(bad)
cld
dec
stos
ins
and
push
mov
jmp
pop
xchg
cmps
push
pop
sahf
retf
scas
shl
xchg
and
inc
fisttp
add
daa
sub
mov
dec
xor
nop
fcmove
or
aam
mov
scas
jmp
mov
xchg
cmp
retf
or
popa
movs
pop
ds
push
inc
jo
add
cmp
sub
lods
jns
jl
lea
setb
push
dec
add
fs
imul
inc
mov
add
inc
lock
cld
jmp
xchg
jne
outs
jne
shl
stos
cmp
shl
xchg
dec
pop
std
prefetch
nop
or
pop
adc
dec
dec
aad
popa
mov
imul
fsub
lds
pop
popf
mov
ins
dec
js
sub
mov
shl
dec
push
or
sbb
dec
test
push
cmp
imul
and
and
outs
icebp
or
cli
jns
jb
add
mov
xor
push
xchg
cmp
imul
sub
in
jns
dec
dec
lea
sub
in
xor
or
xchg
dec
dec
mov
popa
push
cld
outs
mov
or
sbb
jge
jg
es
inc
shl
lock
jl
mov
mov
test
imul
cwde
fsubrp
js
xor
or
inc
mov
mov
mov
mov
gs
sti
shl
mov
test
sub
adc
(bad)
scas
das
repz
mov
(bad)
sbb
mov
(bad)
and
mov
out
xor
cmps
stos
call
xchg
fwait
in
jg
fidiv
inc
mov
aaa
xor
fcmove
and
shl
(bad)
out
jae
das
mov
mov
mov
xchg
sub
mov
xchg
mov
ins
ror
and
(bad)
les
iret
pushf
call
sub
cwde
in
int3
dec
push
nop
or
mov
in
(bad)
movs
lock
stos
xchg
sub
adc
inc
repz
mov
fwait
mov
enter
pop
pop
int
stos
mov
cld
in
repz
es
movs
pop
aad
push
add
clc
or
mov
fisttp
dec
les
lods
jmp
xchg
ins
jle
inc
pop
mov
xchg
int3
xchg
(bad)
cdq
fimul
or
cwde
xor
cld
fisub
outs
call
je
out
xchg
sbb
cmps
mov
aas
gs
push
xor
out
sub
inc
mov
mov
js
mov
repnz
jge
xor
cmp
ret
and
pop
and
ins
call
inc
scas
jae
mov
and
out
leave
aad
cmp
scas
out
rep
cmps
fs
mov
and
xor
out
mov
ins
retf
test
and
enter
mov
or
sahf
cmp
or
cmp
mov
dec
cmp
and
xor
sti
inc
cdq
and
adc
mov
and
clc
les
or
jp
je
add
inc
mov
loope
mov
mov
or
and
imul
push
scas
fwait
lahf
add
push
jo
jo
movs
push
mov
pop
push
lea
fstp
cmp
stc
dec
pop
mov
pop
inc
jmp
es
mov
xor
test
add
out
jge
sub
(bad)
test
lock
and
mov
sar
add
inc
(bad)
iret
aad
sub
mov
mov
jmp
jbe
mov
stc
sub
xchg
jmp
lahf
or
pop
mov
sub
repz
icebp
sbb
or
mov
cmp
cmp
jne
inc
aas
jp
push
pop
xor
or
jmp
xor
gs
and
lds
and
jl
pop
jmp
and
or
popf
les
push
lea
data16
and
jo
and
enter
sbb
mov
cwde
arpl
mov
and
mov
aas
jmp
leave
retf
jns
imul
jecxz
adc
or
test
scas
movs
dec
data16
pusha
add
ds
ror
xchg
mov
shr
add
shr
aas
das
pop
adc
and
inc
not
sub
out
aad
sar
jnp
dec
mov
aad
sti
out
sub
popf
or
movs
xchg
dec
xor
ret
test
jno
xor
mov
cmp
xlat
out
and
sub
dec
dec
clc
jp
mov
idiv
mov
dec
sub
fmul
lock
inc
sbb
cmp
xor
pop
and
int
sbb
outs
pop
mov
jmp
leave
xchg
mov
sahf
aad
popf
mov
mov
cmp
jnp
hlt
inc
sub
add
movd
sbb
add
mov
repz
jg
mov
fldenv
test
dec
xor
lods
test
inc
aaa
aad
fwait
mov
ret
movs
ins
jns
cmps
sbb
loopne
jne
jae
out
push
and
jmp
xor
mov
pop
mov
sub
mov
or
xchg
dec
cmp
lock
inc
xor
sbb
adc
pop
mov
stos
gs
call
daa
xor
stos
mov
or
jmp
cmp
fcomp
test
xchg
das
cmp
in
mov
pop
push
nop
bound
dec
adc
mov
nop
arpl
inc
data16
popa
ret
or
xchg
dec
out
mov
out
dec
out
jb
cmp
mov
adc
push
repnz
jle
fwait
ror
popf
int3
fsub
ret
inc
lahf
dec
repnz
push
ss
mov
test
ret
mov
xchg
or
pop
jl
push
push
or
popa
pop
outs
pop
and
scas
pop
adc
idiv
jbe
or
jmp
mov
test
aas
addr16
jge
retf
push
enter
ins
xlat
sbb
int
mov
adc
push
ss
stos
xor
out
pop
popa
arpl
xchg
xor
hlt
cmps
pusha
test
push
xchg
das
mov
push
ins
sti
test
lds
push
mov
mov
adc
xor
adc
push
mov
rol
aaa
jbe
xchg
push
sbb
fstp
in
adc
addr16
mov
ja
mov
ret
add
add
fs
mov
sub
sbb
add
mov
arpl
loopne
loopne
mov
cmp
xchg
pop
popf
inc
add
push
loope
outs
sub
or
fistp
dec
sbb
xor
ret
dec
xor
lods
cmp
sbb
sbb
dec
or
pop
mov
leave
mov
xor
in
mov
inc
push
or
mov
dec
shr
sbb
mov
adc
mov
cld
test
retf
add
push
sahf
test
out
retf
adc
and
cld
fidiv
mov
or
xchg
aaa
mov
arpl
gs
mov
out
in
in
or
jmp
scas
(bad)
mov
push
ins
dec
adc
mov
mov
mov
fwait
cmp
cmp
mov
into
ret
cmp
les
xchg
pop
aam
sbb
cs
inc
xchg
ss
push
data16
jae
inc
and
xor
stos
push
fimul
(bad)
lahf
cmps
mov
mov
mov
mov
sbb
std
mov
xchg
test
xchg
mul
lea
inc
addr16
call
ffree
sub
mov
(bad)
dec
aaa
add
fnstsw
add
lea
jbe
mov
shr
retf
xor
es
jnp
or
and
mov
pop
fstp
stos
sbb
popa
mov
pusha
push
pop
leave
mov
push
jns
fstp
add
call
xor
cmp
push
inc
inc
xor
daa
aad
lods
das
enter
mov
aaa
push
ror
or
push
xor
retf
xor
inc
dec
addr16
push
inc
and
popa
mov
inc
dec
ja
mov
sar
daa
jle
mov
test
mov
jecxz
arpl
jb
aad
add
xor
cmps
lds
aaa
outs
add
jecxz
or
outs
xor
loop
mov
sub
sar
adc
(bad)
jae
push
cmp
dec
test
xor
test
xchg
lahf
xchg
add
pop
(bad)
lahf
xor
inc
add
sahf
es
xchg
js
inc
and
adc
test
fs
xor
mov
mov
fldenv
jb
pop
mov
ret
inc
sti
test
inc
mov
test
stos
inc
std
dec
pop
sbb
data16
dec
inc
push
mov
aaa
ss
mov
and
stc
dec
rol
dec
out
jne
(bad)
icebp
test
cmps
pop
out
fst
call
std
(bad)
pop
dec
test
xchg
out
cmc
inc
add
retf
jecxz
fld
data16
cs
dec
xor
push
clc
inc
cmp
jge
jb
ins
inc
add
in
mov
pop
jl
lahf
cmp
cmp
sub
mov
mov
(bad)
mov
sbb
xchg
loopne
xor
stos
not
ss
jle
iret
xchg
mov
outs
and
test
and
(bad)
je
fdivr
sbb
cs
cmp
mov
fldcw
cmp
push
jno
(bad)
in
(bad)
rol
inc
add
into
stos
jle
call
fst
repz
jle
mov
cs
imul
js
sub
js
daa
mov
inc
ins
dec
daa
push
repz
(bad)
mov
xchg
(bad)
adc
jmp
and
dec
fsubr
xor
jg
or
mov
xchg
pop
retf
dec
icebp
xlat
xor
sbb
or
into
xor
jecxz
(bad)
sub
and
shr
mov
inc
add
xor
mov
jae
fstp
and
mov
sub
div
test
sub
out
lock
xor
and
pop
pop
jne
inc
call
(bad)
jbe
leave
jnp
add
and
ins
mov
and
out
xchg
lock
inc
sahf
movs
(bad)
push
nop
dec
fild
adc
sbb
ds
inc
mov
test
pop
pusha
mov
nop
inc
(bad)
shl
mov
sbb
rol
jbe
xor
xor
xchg
loop
pusha
pop
inc
mov
jb
repz
and
rcr
cmp
scas
push
rcr
add
loope
add
push
push
dec
pop
sbb
mov
sbb
test
inc
mov
lods
imul
(bad)
stos
addr16
mov
pusha
push
jns
test
mov
call
cld
mov
push
fcmovnu
pop
add
ret
repz
mov
js
call
pop
mov
jp
lahf
pop
pcmpgtb
adc
imul
cmp
xor
adc
jmp
or
add
xor
dec
outs
loopne
movs
sub
jo
push
mov
xchg
pop
ror
and
adc
push
sti
adc
inc
cmp
test
inc
mov
adc
adc
mov
in
xor
adc
pop
repnz
or
or
push
jle
cli
xchg
clc
je
popa
cmp
call
mov
mov
icebp
sub
test
lods
es
ret
sahf
int3
mov
jmp
jg
fist
les
or
sar
addr16
jae
out
arpl
loope
xor
push
fild
sbb
push
fild
or
sub
scas
and
popa
pop
and
xchg
cwde
dec
or
icebp
mov
or
inc
je
test
add
retf
fsub
mov
fnstcw
cmp
in
sub
xor
into
mov
xchg
inc
cs
test
mov
cmc
gs
imul
fild
inc
inc
push
fild
adc
mov
js
pop
push
mov
pop
adc
ss
imul
call
and
pop
test
inc
pop
loopne
mov
pop
sbb
leave
es
mov
or
imul
sbb
cwde
mov
jmp
xor
jp
mov
call
je
and
cmp
pop
imul
jnp
and
imul
xlat
cmp
mov
xchg
jge
dec
cmp
sub
lea
in
addr16
and
dec
jmp
push
adc
pop
jecxz
les
sahf
jle
ja
jmp
ins
mov
jmp
ins
and
cmp
fldlg2
inc
jmp
add
mov
sub
imul
mov
inc
xor
mov
mov
cmps
sbb
fsub
dec
jno
mov
ja
out
mov
jmp
pusha
add
fxch
jns
scas
add
inc
test
adc
das
and
push
xor
(bad)
loope
mov
enter
add
js
test
out
xor
jb
(bad)
pop
sbb
jmp
or
retf
sbb
les
imul
push
jno
push
sti
push
call
dec
dec
mov
cmps
in
or
fwait
lea
test
int
xchg
psrlq
je
scas
out
push
mov
or
pop
xor
and
xchg
push
mov
mov
bound
mov
repnz
cli
out
cmp
(bad)
call
iret
mov
push
cmp
and
(bad)
cmp
stc
stos
sti
shl
fs
jno
xchg
jmp
lea
cmp
cdq
adc
and
imul
nop
inc
test
cmp
fnsave
aaa
xchg
push
push
mov
or
or
add
mov
mov
mov
jp
mov
fs
sbb
pop
call
xchg
jmp
stos
pop
test
jecxz
loope
sar
cmp
mov
pop
fdivrp
ja
jnp
fcomp
mov
push
mov
fst
and
ss
push
mov
lea
mov
loop
ins
sbb
lods
cmp
pop
fisub
fst
daa
cmp
cmp
inc
jae
pop
xchg
sub
xchg
mov
xor
mov
push
jo
add
ret
loopne
movq
dec
dec
push
nop
or
xor
iret
mov
mov
push
in
in
or
mov
cdq
imul
push
gs
mul
enter
lods
cld
mov
fsub
mov
and
dec
cmps
push
jbe
clc
imul
mov
cmp
cpuid
setne
sub
push
into
fstp
lds
lds
mov
ins
xor
fs
lods
sub
loop
push
cdq
dec
pop
jmp
loopne
lahf
test
cmp
sub
adc
rcr
mov
jmp
mov
jle
mov
dec
adc
dec
loope
(bad)
call
push
or
pop
jbe
in
bound
addr16
adc
es
cld
adc
fstp
push
xor
jecxz
cmp
out
pop
fucomp
inc
sbb
(bad)
mov
mov
sahf
xchg
(bad)
lods
push
nop
push
and
enter
adc
into
shl
jno
add
xchg
rcl
mov
pop
shr
retf
mov
or
test
and
push
mov
pop
out
xor
jbe
aaa
dec
jmp
into
lods
inc
ret
xor
mov
xchg
xor
mov
adc
mov
mov
stos
push
out
jle
je
add
jmp
fnstsw
pop
mov
dec
or
ficom
shl
xchg
adc
outs
fs
sbb
xor
loopne
and
mov
adc
mov
or
jo
sub
imul
push
sub
adc
dec
fucomi
mov
push
jo
mov
inc
push
sbb
mov
push
mov
lea
lods
push
cli
pop
lods
sbb
aam
adc
outs
mov
mov
in
lds
adc
(bad)
fnsave
cs
(bad)
in
inc
cdq
push
sub
and
leave
out
add
dec
mov
retf
scas
sar
out
outs
jnp
je
cdq
xchg
mov
outs
je
pusha
ds
data16
push
jae
push
sbb
out
xor
popa
xor
mov
mov
retf
mov
lods
dec
addr16
sub
cmp
ins
dec
mov
mov
ins
enter
test
and
jne
lea
pop
mov
xchg
test
adc
and
push
arpl
fld
stos
(bad)
mov
mov
dec
aad
jg
xor
test
fcomp
es
xlat
leave
scas
lods
pop
(bad)
dec
pop
ret
mov
ds
mov
scas
cmp
push
sbb
sbb
arpl
inc
mov
bnd
sti
popa
dec
xor
not
inc
outs
xor
mov
dec
shl
dec
bound
popf
fmul
cwde
cs
fsub
sti
retf
add
out
lods
add
int
data16
cmp
jmp
ss
rol
add
jle
imul
add
xor
movs
pop
lods
stos
sahf
lea
jg
pop
pop
jmp
sub
loope
in
addr16
inc
and
int
(bad)
adc
sbb
daa
pop
xor
jmp
push
or
loop
cmp
jae
aas
(bad)
or
cli
das
ss
les
mov
ins
shrd
scas
in
and
sbb
fnsave
repnz
mov
lea
jmp
stos
into
cmp
xchg
clc
ja
mov
shl
pop
clc
adc
or
push
out
sbb
test
add
clc
push
repz
fild
jmp
cmp
cdq
ins
addr16
or
pop
sahf
pop
(bad)
jmp
out
add
dec
or
jl
mov
cdq
and
fdiv
cmp
popa
(bad)
jge
pop
add
cmps
add
shr
cld
inc
stc
loopne
adc
fs
dec
(bad)
jno
sbb
adc
mov
pop
fstp
or
xchg
sbb
in
mov
jbe
scas
mov
test
mov
test
jl
out
bound
xor
scas
stos
dec
pop
ja
das
pop
sub
add
test
push
adc
nop
jecxz
mov
push
adc
lahf
ret
cmp
test
mov
lods
cld
enter
xchg
mov
leave
gs
leave
xor
imul
lods
(bad)
es
cwde
iret
push
and
ins
(bad)
mov
mov
loope
add
loop
or
jmp
sub
or
lock
fild
pop
jmp
dec
add
into
(bad)
adc
mov
fstp
(bad)
xor
bound
push
sbb
in
dec
jmp
retf
sub
pop
cmps
pop
inc
jne
(bad)
movs
dec
jmp
sbb
dec
sub
bound
sahf
test
pop
jo
adc
and
or
(bad)
xchg
ja
and
clc
cmps
adc
add
adc
adc
mov
stc
or
mov
or
lds
pop
out
add
adc
pop
sub
scas
or
mov
sbb
mov
outs
popa
mov
leave
sti
push
call
jecxz
jge
in
push
cmc
arpl
push
out
dec
xor
popa
ja
and
les
ss
jne
add
pop
int3
in
sbb
lock
test
cmp
xchg
leave
pushf
cmp
mov
add
in
pop
mov
jne
int3
arpl
xchg
pop
and
imul
inc
jp
inc
lods
xchg
ror
sub
push
mov
je
fistp
cmps
cmp
pusha
pop
jecxz
mov
xchg
dec
jmp
pop
fsub
test
mov
mov
fidiv
cs
mov
dec
fwait
and
jb
pop
jl
pop
(bad)
sbb
test
(bad)
les
or
xor
mov
mov
out
or
mov
jecxz
call
mov
or
mov
dec
je
fdiv
aad
jg
add
mov
mov
jg
(bad)
int3
hlt
cli
add
fwait
xor
ja
dec
into
sbb
mov
out
inc
(bad)
aad
(bad)
adc
imul
in
xchg
add
push
push
xchg
jno
or
push
jmp
inc
fiadd
ret
jl
mov
mov
inc
add
aas
in
mov
cld
cmp
inc
loop
dec
fcomp
lahf
cwde
js
fcomp
or
mov
movs
je
cs
mov
sbb
cmp
mov
mov
ret
fadd
rcl
(bad)
mov
ror
sbb
cmps
pop
and
or
sub
xor
adc
jno
mov
and
jae
(bad)
mov
repnz
xchg
leave
or
sub
cmp
jb
jbe
jecxz
test
xchg
pop
adc
outs
push
cmp
(bad)
cmp
adc
data16
cld
ret
inc
pop
retf
call
fsubp
pop
sbb
dec
cld
int
aam
add
mov
test
sub
mov
test
add
stc
(bad)
out
mov
ins
cld
sub
push
pop
push
mov
sti
dec
push
sbb
push
pop
fcomp
ds
cs
into
jno
pusha
push
stos
(bad)
or
int
das
add
or
push
mov
sub
mov
sti
imul
ja
xchg
xor
mov
arpl
xchg
mov
push
(bad)
mov
mul
loopne
sbb
and
cmp
mov
mov
ss
mov
and
add
xchg
fdivr
jbe
sub
cdq
adc
mov
push
movs
push
dec
mov
ror
inc
push
jbe
push
aas
jbe
test
adc
aad
push
ret
movntps
cmps
pop
test
adc
sar
sti
jmp
inc
popf
pop
mov
fimul
xor
pop
mov
call
fadd
dec
movs
in
jp
cmp
test
iret
or
cwde
ss
and
sub
add
ficom
test
loop
enter
cld
idiv
cmp
popf
gs
or
push
mov
popa
adc
fiadd
push
cmp
leave
imul
inc
enter
or
shld
stc
stos
mov
jl
adc
mov
loope
push
rcl
out
out
sbb
or
jne
stc
push
ins
pop
nop
pop
(bad)
lods
nop
mov
ins
adc
sub
sbb
mov
daa
push
cmp
dec
cwde
and
outs
popa
pop
ret
jmp
jg
inc
xchg
xchg
aam
in
data16
xor
call
loope
sub
addr16
clc
or
pop
div
movs
or
aad
jecxz
fwait
jae
and
(bad)
pop
js
push
xor
inc
xchg
pop
inc
push
push
jns
das
out
rcl
or
popa
ret
mov
adc
adc
outs
test
add
out
stc
mov
icebp
jb
jl
fisubr
xchg
push
or
push
and
test
add
shl
retf
(bad)
gs
addr16
lods
and
pop
add
pusha
sub
(bad)
mov
test
jmp
daa
cmp
les
xor
inc
pop
or
ins
call
push
push
xor
or
lods
sar
inc
cs
jbe
push
test
mov
adc
into
sbb
enter
call
in
pop
and
bnd
and
mov
mul
inc
jns
xchg
(bad)
mov
ss
jp
in
into
push
lahf
ja
lds
das
inc
mov
xor
lods
repnz
iret
mov
dec
mov
add
mov
repz
les
adc
pushf
cmps
sub
outs
jns
xor
jmp
dec
es
pop
mov
adc
jns
mov
mov
icebp
mov
xchg
xchg
push
cmp
pushf
and
or
ret
nop
and
or
mov
movs
inc
das
mov
jnp
popa
jmp
outs
pop
mov
sar
dec
jne
stc
sbb
jmp
repz
mov
mov
fwait
add
fistp
xchg
imul
mov
lea
int
out
pop
aad
rcl
hlt
loopne
retf
iret
adc
fisttp
xlat
imul
xor
ins
in
adc
ret
cwde
jo
jmp
aas
jne
lods
adc
fst
add
xor
test
pop
sub
jo
sub
fsubr
push
fs
sbb
shl
jns
cmp
push
stos
pop
sahf
mov
cmp
test
loopne
les
popf
cmps
dec
pushf
(bad)
xor
add
push
jbe
inc
sbb
sbb
sub
addr16
push
int3
imul
dec
es
fisttp
jae
daa
pop
push
cdq
adc
mov
mov
add
fstp
add
test
xor
lds
cmp
outs
repz
inc
daa
xor
lahf
pushf
or
loope
mov
sahf
mov
std
push
outs
sub
mov
fwait
clc
inc
jns
outs
xchg
je
outs
add
pushf
(bad)
mov
loopne
and
scas
test
nop
mov
jge
jae
test
xchg
xchg
lahf
ds
scas
call
push
xor
gs
sbb
jmp
pop
or
icebp
dec
fbld
scas
add
and
js
aam
aam
fdiv
push
das
movs
jle
mov
mov
cmps
bound
out
xor
add
les
outs
icebp
cld
movs
or
sub
cli
in
xor
loop
dec
mov
movs
push
jno
ror
jns
jl
bound
pushf
mov
jg
popf
test
movs
dec
fistp
movs
(bad)
jno
inc
xchg
cmp
imul
add
adc
lahf
xor
(bad)
(bad)
repz
test
out
call
lea
leave
sub
jne
out
loopne
xor
cmc
(bad)
repnz
cmp
fsubr
mov
hlt
out
mov
sbb
sub
loopne
xchg
test
aad
jnp
fs
hlt
aas
popa
fsubp
cmp
jp
jbe
jmp
push
and
push
rol
or
cmp
and
lods
add
sets
cmp
dec
shl
mov
sti
inc
ss
stos
add
(bad)
fld
out
adc
inc
inc
movs
jo
xor
sti
xchg
sbb
inc
(bad)
sbb
and
xchg
fs
movq
inc
cwde
lds
jecxz
xchg
ins
mov
and
and
cld
xor
out
jmp
shr
pop
nop
push
pop
mov
jp
and
jp
adc
mov
popf
and
outs
addr16
xchg
retf
mov
retf
int
data16
cdq
out
imul
lods
pop
sub
fbstp
mov
aam
and
cld
push
or
(bad)
(bad)
xchg
repnz
xchg
aam
loop
std
xor
jp
ret
and
or
fadd
fisttp
sti
or
stos
mov
data16
mov
cmp
pop
add
inc
aad
cmp
shr
push
pop
lock
mov
sub
cmp
popa
stc
xor
mov
sub
xchg
shl
gs
pusha
mov
sti
sti
clc
sub
inc
outs
dec
test
dec
inc
jnp
sbb
repz
push
pop
fst
mov
clc
mov
adc
inc
add
rol
in
adc
call
adc
cld
test
jnp
xchg
dec
out
out
push
(bad)
stc
adc
cmp
cmc
in
jmp
and
xlat
imul
xchg
pop
mov
mov
ret
rcl
hlt
xchg
sbb
les
push
push
inc
and
xor
sti
push
and
leave
out
clc
ins
xor
outs
pushf
das
imul
xor
pop
pop
pop
jnp
ret
push
jp
(bad)
inc
out
stos
push
cmp
stos
dec
fistp
inc
js
sub
pushf
jg
or
mov
mov
test
mov
arpl
dec
add
loopne
cmp
or
jbe
test
aam
mov
mov
add
inc
in
or
pop
jns
mov
jg
ja
jbe
or
fcmovu
and
push
mov
js
retf
pop
test
pop
cmp
and
or
mov
jmp
pop
sub
push
out
ja
sets
mov
fisub
pop
test
pop
cs
push
test
pop
dec
jb
rol
lock
pop
das
lods
fcom
push
sub
lods
aad
retf
seta
cmp
popa
cdq
xchg
sub
jmp
dec
cmp
retf
add
movs
test
sbb
cwde
mov
inc
mov
xchg
dec
jne
xor
and
mov
imul
outs
mov
sub
rcr
jb
retf
test
inc
jmp
lds
pop
std
mov
pop
hlt
retf
sar
pop
or
outs
mov
into
(bad)
bound
lods
pop
sbb
dec
ret
xor
cmp
test
xchg
pop
sub
(bad)
mov
repnz
test
cwde
xchg
push
mul
mov
sbb
sbb
sbb
sbb
add
mov
add
xchg
cwde
lock
lods
popf
dec
mov
sub
cmp
inc
xor
mov
das
bound
xor
mov
rcr
jge
bnd
sbb
mov
add
jnp
push
in
sbb
cli
add
cli
das
sbb
adc
(bad)
jp
and
or
pop
jmp
ins
pop
(bad)
cmp
gs
adc
lods
mov
out
mov
mov
sub
cmp
fsubrp
fnstsw
stc
fmul
in
dec
lods
cdq
sub
out
loope
outs
dec
aad
fsubr
fist
lods
shl
xor
das
fs
add
push
pop
sbb
jb
xchg
call
adc
inc
xchg
pop
or
enter
cmp
inc
jg
popa
pop
sbb
push
cmp
pop
fld
fwait
mov
dec
sahf
and
jbe
jl
mov
mov
and
dec
into
cdq
cmps
jge
std
and
addr16
sbb
sub
aam
jg
inc
rol
enter
fisub
mov
mov
js
and
sub
or
lods
dec
ds
sti
cmps
sar
or
and
sub
imul
jo
sub
mov
push
cli
pop
loopne
retf
mov
xchg
sbb
pop
add
ret
and
clc
or
dec
push
or
cmp
and
inc
(bad)
fbld
adc
out
sbb
loope
fdivr
(bad)
xor
push
lds
lahf
adc
movs
cwde
lea
jo
sub
sub
adc
out
aas
sbb
or
jmp
jno
stos
shl
adc
ror
pop
stos
aaa
retf
retf
add
out
call
dec
mov
loope
jecxz
sahf
xchg
add
xor
or
cmp
sub
dec
jle
or
push
not
ret
imul
stos
pop
test
loop
or
pop
lock
sti
pusha
fs
jo
adc
jge
div
jns
mov
add
and
ins
retf
lock
sahf
aas
pop
push
xor
shl
pop
add
int3
retf
pop
cwde
add
cmc
ret
movs
mov
adc
js
repz
std
sar
mov
jmp
leave
cmp
add
mov
scas
gs
js
sub
je
sbb
ja
sub
aaa
adc
push
pusha
jae
out
or
mov
loop
(bad)
cmp
pop
dec
mov
cmp
cmp
pushf
hlt
lock
cmp
push
jmp
pop
push
jmp
lss
gs
dec
pop
mov
adc
cmp
xchg
sbb
enter
mov
out
add
jmp
fsub
ror
dec
sar
fcom
fwait
and
dec
cmps
cmp
lods
jne
mov
fild
das
sysret
fsubr
adc
push
sub
pusha
sub
bound
in
xor
jne
call
mov
jl
adc
mov
add
xchg
or
jg
ins
or
cmps
cld
xor
mov
cwde
pop
ds
mov
in
add
jmp
cli
inc
ja
jae
cmp
mov
add
nop
mov
xchg
hlt
or
mov
and
push
mov
mov
push
xchg
cmp
or
rcl
cmp
dec
stos
inc
retf
mov
push
in
idiv
imul
or
cwde
push
xchg
add
lods
push
aaa
pop
pop
in
sub
jp
je
dec
cwde
hlt
sub
xlat
imul
sub
jne
mov
and
xchg
cs
pusha
xchg
sbb
sub
es
sbb
jno
push
ret
pop
xor
xchg
inc
jg
cmp
pusha
rcr
iret
mov
jae
pop
bound
inc
push
add
cmps
mov
repnz
test
in
sub
sahf
and
mov
gs
jl
pop
bound
sub
cmps
fs
ret
and
stos
dec
mov
mov
inc
ja
jle
mov
pop
test
mov
rcr
fs
or
jbe
aaa
test
aaa
push
or
(bad)
in
inc
cdq
adc
push
enter
mov
dec
pop
add
in
xor
addr16
outs
push
cld
imul
in
leave
xor
(bad)
test
call
xchg
lock
and
mov
shl
adc
sbb
leave
ja
adc
jns
cmp
hlt
jno
in
jp
sub
imul
sets
jns
outs
add
push
mov
aaa
push
das
pop
xchg
test
outs
std
cmc
inc
cmp
std
mov
dec
bound
xchg
push
pop
and
add
xor
xchg
jp
jp
adc
pop
push
pop
xchg
js
push
imul
stc
imul
dec
mov
mov
cwde
aaa
(bad)
jbe
and
cmp
push
push
fdivr
dec
movs
ffree
inc
jnp
sbb
in
cmp
jecxz
mov
mov
and
sbb
(bad)
mov
sbb
dec
ins
add
sub
xchg
xchg
and
inc
fisubr
push
mov
mov
test
cmc
xor
push
leave
mov
jl
cmp
push
add
data16
pop
add
lods
or
leave
push
sahf
sub
shl
sbb
cmp
jnp
pop
or
mov
mov
mov
in
ret
or
cmp
pusha
gs
push
loopne
mov
mov
jg
in
sti
shr
lock
and
pop
(bad)
ror
dec
xor
jnp
dec
mov
dec
out
je
std
xor
mov
sub
dec
jnp
mov
aaa
daa
retw
sbb
(bad)
retf
lods
pop
jnp
jp
adc
lock
dec
jge
add
dec
enter
cld
pop
and
in
loope
popa
out
adc
mov
jge
jns
xor
dec
or
mov
xor
mov
mov
pop
test
call
and
test
push
ins
pop
retf
or
mov
loopne
dec
out
inc
cs
nop
mov
add
mov
mov
dec
(bad)
mov
inc
fidivr
add
in
sub
sbb
(bad)
aaa
ds
fwait
rcr
test
jbe
les
ror
pop
mov
fadd
pop
mov
sar
mov
pop
popf
xor
ins
xor
scas
bound
js
xlat
arpl
ret
pop
stc
(bad)
mov
xor
or
or
imul
test
push
outs
ins
ds
ss
pop
jno
and
push
aaa
sbb
push
test
xor
jne
push
repz
inc
dec
repz
and
dec
and
jle
addr16
mov
mov
mov
inc
sub
shl
pop
cs
js
fbstp
jae
pop
adc
jo
mov
clc
pop
ret
push
repz
retf
data16
jo
pop
or
mov
cmp
in
(bad)
push
loop
fist
or
mov
adc
(bad)
ret
mov
ins
das
scas
mov
jecxz
retf
aaa
push
sub
outs
ret
icebp
retf
inc
inc
cmps
cli
or
and
test
mov
inc
sbb
lods
test
cmps
test
idiv
inc
and
pop
sbb
jae
adc
and
shr
int
fdivr
test
pop
push
mov
(bad)
pop
push
pop
out
adc
call
pushf
pop
push
sahf
mov
xchg
in
dec
and
pop
pop
cmc
cs
sbb
out
std
or
jecxz
loopne
push
pop
leave
scas
imul
sub
sub
jp
xchg
call
jne
pushf
add
or
jl
and
sbb
imul
outs
inc
(bad)
mov
jbe
sub
xchg
(bad)
in
aam
or
add
pop
cmps
dec
out
and
rol
mov
inc
ja
icebp
lea
test
std
pop
adc
out
and
sbb
fcom
push
fiadd
jbe
clc
retf
lods
out
add
xchg
and
sub
shl
sbb
bound
lock
inc
(bad)
stc
ror
arpl
mov
pop
xchg
sub
cmps
pop
ret
mov
xchg
fimul
cmps
test
push
sbb
std
not
inc
mov
pop
scas
out
jl
mov
xor
mov
pop
scas
into
rcr
fidiv
pop
push
adc
xchg
mov
loop
mov
sub
adc
nop
lods
push
leave
jle
ret
(bad)
mov
sub
out
mov
xor
mov
int
push
sbb
lds
mov
jne
jl
std
or
sub
fcmovb
push
(bad)
jmp
outs
and
sub
adc
popf
js
jp
add
push
sub
mov
or
jp
mov
push
pop
xchg
repz
cwde
inc
(bad)
pop
dec
jo
sbb
push
mov
mov
sub
pop
stos
aam
call
ds
cmps
jnp
xchg
into
push
sub
arpl
into
xchg
push
pop
enter
sub
cmps
mov
mov
dec
pop
inc
dec
and
pusha
outs
xor
std
and
fadd
in
out
out
add
jle
pop
and
ss
ret
mov
jne
inc
cmp
mov
cmc
lods
rcr
mov
sar
push
cmp
adc
inc
mov
fdivr
mov
stos
lock
dec
cmps
pop
cmps
aaa
stc
arpl
out
add
push
xchg
stc
scas
popf
xor
cmp
jno
pop
movs
push
sbb
add
sbb
test
xchg
ss
jno
inc
imul
mov
repnz
mov
dec
pop
xchg
jne
test
popa
leave
or
lods
in
sub
xor
push
push
movs
sti
in
mov
or
into
jp
fbld
xchg
aad
jmp
aam
js
inc
xchg
sbb
jp
mov
fmul
push
jg
in
fadd
or
ret
or
dec
xchg
mov
pushf
push
mov
mov
out
lods
ins
xchg
call
dec
push
mov
xlat
add
adc
in
cmp
lahf
pop
push
mov
xor
ins
lods
add
fimul
mov
dec
lahf
icebp
fidiv
xchg
lahf
xchg
mov
push
cmp
fsubr
jle
imul
sub
mov
xchg
jge
mov
das
sar
push
and
xchg
iret
xor
fiadd
les
pop
and
push
xor
mov
vmovaps
div
daa
xor
pop
dec
mov
mov
jl
(bad)
cs
cmp
jl
loopne
jo
daa
jmp
lea
jno
dec
dec
aas
xor
add
inc
and
retf
xor
mov
mov
dec
cdq
xor
mov
mov
imul
mov
(bad)
jle
scas
xchg
outs
hlt
cwde
inc
pop
push
outs
pop
mov
inc
push
std
fsubr
add
cmp
cmps
xor
or
movs
cmc
dec
jne
sub
mov
frstor
das
mov
or
shr
adc
xor
sbb
jnp
jge
addr16
stos
mov
shl
push
push
mov
(bad)
stos
out
dec
sub
leave
mov
inc
(bad)
sub
cmp
pop
int
pushf
or
call
mov
or
push
mov
mov
gs
or
out
sub
int3
aad
pop
push
mov
(bad)
and
xor
mov
dec
popa
sub
add
inc
popa
sub
sub
sbb
in
mov
pushf
repz
pop
pop
jno
shr
aam
scas
jl
sub
push
dec
movs
(bad)
sub
adc
(bad)
test
push
or
or
xor
mov
jg
pop
xchg
cmp
mov
jno
push
push
push
fsub
pop
jns
int
push
sub
jns
outs
xchg
pop
push
cmp
les
retf
fs
std
pop
mov
jecxz
jmp
enter
mov
(bad)
or
jns
mov
sar
and
inc
movs
mov
pop
lods
repnz
(bad)
out
ret
ja
adc
mov
rol
pop
dec
jge
pop
(bad)
int
add
add
js
xor
or
shl
xlat
xchg
sub
popf
shl
xor
add
pop
cmps
mov
ss
arpl
pop
outs
rcl
icebp
pop
xor
dec
int
popf
mov
inc
loope
jne
mov
ja
dec
ja
xchg
enter
adc
jno
(bad)
and
out
xchg
xor
(bad)
retf
stc
ds
in
sbb
(bad)
and
ja
loopne
iret
and
mov
test
in
int3
jmp
dec
xchg
sar
jb
in
inc
cmp
shr
and
cwde
in
mov
mov
sbb
inc
jge
fs
pop
sar
pop
or
mov
popa
add
mov
ss
xchg
jg
add
jno
ins
iret
jl
imul
sub
mov
dec
mov
xor
mov
jl
shr
add
push
inc
rcl
nop
dec
mov
les
xchg
scas
gs
hlt
pop
or
add
hlt
sbb
and
loope
aas
js
mov
idiv
mov
inc
outs
aaa
(bad)
dec
cmc
add
call
mov
inc
movs
ja
fild
and
fcomp
fwait
neg
retf
sub
dec
(bad)
add
aaa
fiadd
push
jbe
add
loope
sbb
sub
sub
rol
inc
pop
cmc
cmp
inc
mov
loopne
clc
cmc
push
mov
icebp
add
(bad)
test
repz
sub
xor
and
xchg
pop
mov
and
adc
movs
mov
into
add
pop
mov
adc
xor
push
add
push
sti
bound
shr
sbb
xor
xor
or
sub
inc
scas
xchg
mov
dec
shr
cmp
cmp
ds
in
loopne
sub
cld
(bad)
hlt
xchg
sti
sbb
jecxz
rol
pop
scas
mov
cmp
into
ja
in
and
in
lea
scas
sbb
pop
ins
mov
and
pop
push
sbb
sub
in
pusha
push
ins
sbb
outs
sub
iret
test
push
xchg
push
add
jo
jno
xor
mov
xchg
addr16
popf
push
retf
mov
cmp
std
loopne
and
mov
daa
sub
test
mov
cli
mov
sbb
xchg
jecxz
sbb
inc
icebp
cwde
or
imul
movs
cmp
aad
mov
pop
sahf
pop
sub
fs
mov
xchg
out
push
in
inc
sbb
aad
into
cdq
cmp
mov
sbb
add
mov
xchg
add
test
lods
(bad)
xchg
js
inc
sbb
adc
(bad)
jp
cmp
fcomp
mul
repz
lock
mov
push
pop
cdq
mov
aas
fdivr
xchg
es
(bad)
clc
xchg
movs
adc
fiadd
fistp
pop
adc
fwait
retf
mov
add
pop
dec
add
xlat
in
test
and
xchg
movs
and
out
mov
and
cmps
(bad)
out
out
push
les
shl
sub
fnstenv
dec
dec
xchg
shl
mov
test
loope
sub
adc
aad
xor
movs
out
cmps
stos
push
mov
cdq
fcomp
pusha
and
les
addr16
sub
out
cli
sbb
mov
in
push
jmp
mov
inc
jl
loopne
inc
adc
cli
inc
adc
aad
loope
jecxz
pop
fisttp
(bad)
outs
push
push
sub
xor
and
cld
je
loopne
and
popa
sbb
sub
(bad)
pop
or
mov
cmp
jne
out
jmp
inc
mov
pop
(bad)
cli
jne
int
in
push
push
cmc
ficomp
and
ins
mov
aas
mov
fsub
sbb
mov
inc
stc
adc
test
sub
and
xchg
pop
scas
pop
ret
pop
push
pop
and
push
fs
addr16
and
sub
xlat
fisubr
sbb
push
or
retf
ret
ss
outs
(bad)
popa
cmp
or
jle
scas
adc
mov
dec
mov
pop
arpl
mov
cld
sbb
mov
cmps
or
test
mov
ficom
movs
lods
xor
shr
and
in
pop
cmp
pop
iret
xchg
aam
fcomp
sbb
or
pop
clc
mov
sbb
dec
(bad)
sub
popa
mov
arpl
jno
sbb
push
mov
inc
and
push
push
mov
(bad)
popf
sub
pop
fcomp
inc
pop
jne
outs
push
or
jmp
in
std
outs
aas
add
push
lods
lods
shl
(bad)
pop
push
loope
lahf
daa
sub
test
adc
mov
mov
repz
fdivr
and
call
add
je
movhps
push
call
fwait
fwait
sub
les
hlt
fisttp
cmp
dec
pop
mov
sbb
cmp
mov
add
mov
pop
xor
xor
xchg
mov
inc
mov
aam
ins
bound
pusha
sahf
fstp
movs
shl
sbb
dec
inc
sub
sbb
xor
pop
jg
push
out
inc
movs
jmp
mov
add
sar
ds
jmp
iret
push
retw
or
out
cwde
sti
mov
loop
fcomp
jbe
rcr
push
cmp
test
out
stos
jle
pushf
das
es
push
push
or
jns
(bad)
sbb
push
fst
call
pop
sub
pop
mov
lds
cmps
fdiv
cwde
dec
in
and
jmp
push
jmp
push
add
push
scas
loop
out
add
push
adc
call
cld
sar
popa
jne
or
and
sbb
cmp
or
add
fist
mov
lods
pop
outs
mov
jg
xor
add
cmp
int3
repnz
push
cmp
mov
leave
in
fwait
mov
sahf
faddp
adc
(bad)
adc
mov
lahf
test
inc
cmp
mov
push
push
test
into
arpl
add
std
ret
cld
jns
test
jo
ds
xlat
nop
xchg
pushf
mov
sar
mov
jb
cmp
jmp
(bad)
mul
inc
dec
inc
(bad)
and
es
les
call
mov
ror
cmp
in
pop
jecxz
scas
arpl
mov
fnstsw
pop
fisubr
and
fwait
mov
iret
call
pop
aas
mov
pusha
into
dec
mov
xor
retf
or
and
lea
jmp
and
xor
xchg
mov
pop
dec
movs
cmps
(bad)
sbb
add
sbb
jae
bound
js
inc
cwde
or
and
test
pop
je
adc
scas
fstp
shl
push
repnz
fcom
xor
or
out
dec
cmps
add
and
push
pop
mov
gs
mov
pusha
mov
or
mov
shl
push
inc
jne
xor
and
or
push
adc
xchg
add
sbb
xchg
popf
push
outs
pusha
imul
pop
daa
leave
repz
lods
lahf
cwde
xor
dec
push
push
mov
ja
inc
pop
ret
fs
cmp
inc
sbb
inc
pop
(bad)
ret
push
scas
pop
test
jns
xor
mov
mov
dec
xor
or
out
dec
int3
dec
jp
adc
pop
jbe
mov
dec
movs
(bad)
js
dec
mov
call
fs
fisubr
pushf
cmp
mov
pop
shl
add
icebp
dec
addr16
add
imul
jb
mov
imul
jns
add
mov
daa
dec
sbb
lea
add
lahf
cmp
cmp
test
or
pusha
xchg
adc
aam
and
ja
repnz
add
sub
dec
inc
pop
fistp
test
sahf
je
lods
sub
jmp
arpl
mov
idiv
push
(bad)
ds
fs
cld
mov
(bad)
data16
in
je
stc
repz
sub
cwde
mov
int3
push
push
pop
push
(bad)
xor
repz
inc
es
leave
lods
cmps
aas
sub
std
jb
mov
xor
cmps
adc
or
loope
pusha
lods
mov
mov
lods
jns
add
(bad)
nop
test
xor
int3
in
jnp
(bad)
mov
arpl
dec
xchg
nop
imul
out
ret
jns
jae
mov
pop
adc
xlat
nop
sub
(bad)
jg
bnd
and
mov
aam
loopne
adc
push
in
or
das
and
fs
popa
pop
inc
sbb
dec
sub
imul
push
outs
sub
in
fstp
mov
xor
lods
pop
ror
cdq
jns
inc
cmps
mov
jl
scas
adc
mov
cwde
add
mov
or
cmc
(bad)
jmp
mov
test
and
and
out
frstor
mov
in
addr16
(bad)
nop
dec
sbb
xchg
xchg
lods
jp
sti
hlt
mov
jo
push
fwait
and
fwait
aad
in
inc
xchg
pop
es
pop
cli
ins
push
add
mov
push
adc
adc
xor
out
push
fst
adc
mov
repz
retf
dec
jb
into
inc
push
cmp
mov
dec
mov
out
push
scas
iret
push
xor
out
dec
outs
mov
aaa
jns
scas
retf
int3
fisttp
xor
in
dec
(bad)
or
ret
inc
div
pop
adc
dec
mov
xor
jns
xchg
fnstsw
test
lods
retf
push
sbb
leave
es
mov
jl
cmp
xlat
mov
mov
loop
lock
inc
adc
inc
clc
(bad)
adc
xchg
dec
push
push
repz
or
hlt
out
cmc
sbb
and
std
test
div
sub
daa
out
scas
mov
mov
or
sar
out
lahf
sti
div
cmp
and
fidiv
(bad)
jp
loope
fld
or
in
cli
call
retf
cmp
repz
push
dec
jb
test
and
dec
icebp
loop
sbb
mov
sub
sub
jae
pop
out
repnz
dec
fnstenv
pop
mov
push
inc
ror
mov
or
sub
pop
loop
std
out
ja
fs
push
cmp
sub
and
dec
fs
addr16
std
pop
adc
hlt
aaa
mov
mov
test
das
stos
mov
(bad)
movs
pop
call
stc
pushf
jmp
loop
push
dec
add
mov
mov
add
rol
cmp
pop
dec
leave
mov
ror
pop
test
mov
push
pop
dec
lahf
out
bound
mov
push
xlat
pushf
xlat
call
push
int
jg
imul
mov
xchg
push
por
(bad)
and
add
jb
ds
scas
sbb
xor
mov
cli
dec
xor
sbb
hlt
push
push
pop
int
test
fst
mov
sub
jl
movs
pop
jne
fdivr
jg
cmp
xchg
mov
gs
call
jae
xor
inc
test
add
push
push
sbb
dec
dec
xor
mov
int3
sbb
xlat
adc
add
mov
nop
pop
push
push
mov
int
stos
jle
sbb
mov
daa
sbb
mov
inc
out
and
imul
xchg
paddsw
xchg
sub
adc
cmp
les
jo
inc
add
ficom
not
(bad)
jge
or
dec
mov
retf
sahf
test
jl
adc
sbb
test
or
leave
retf
ret
out
es
pop
popa
xor
fs
imul
pop
jb
or
xchg
jns
(bad)
dec
jns
add
jbe
stos
arpl
sub
fucomip
dec
(bad)
(bad)
imul
in
or
dec
fld
ds
scas
push
and
cli
inc
xor
jg
outs
popa
mov
in
iret
sub
sbb
mov
xor
out
in
les
pop
pop
sub
stos
mov
add
jp
scas
rcr
pop
sbb
xchg
cmp
js
cmp
xor
(bad)
jb
ret
sub
adc
lods
call
and
fldenv
jg
pop
stos
imul
sbb
push
mov
xor
in
mov
gs
xor
sub
cwde
es
mov
aaa
test
mov
iret
pop
push
xlat
icebp
mov
les
xchg
adc
mov
inc
popf
cmp
hlt
xchg
in
push
cwde
pop
mov
imul
je
push
xchg
or
loop
inc
adc
int3
int3
cwde
out
mov
(bad)
into
rol
inc
fcomp
das
test
(bad)
sub
cmp
sub
pcmpeqd
and
mov
push
out
enter
mov
jecxz
jmp
test
adc
arpl
out
clc
jmp
jnp
mov
and
rep
push
imul
ins
mov
shl
fnsave
xchg
retf
pop
not
add
mov
ret
stos
and
enter
xchg
or
(bad)
retf
jecxz
retf
and
push
sub
mov
mov
lock
jmp
in
sbb
mov
mov
data16
lock
(bad)
xor
mov
jl
or
inc
cld
packuswb
dec
shl
add
rol
xchg
fst
jnp
sahf
inc
hlt
add
repnz
mov
fstp
sub
xchg
inc
push
loopne
fst
test
popa
push
outs
inc
cs
and
xchg
daa
pop
lods
inc
push
sbb
and
mov
mov
sti
hlt
jmp
mov
push
movs
xchg
cmc
pop
pop
sbb
ja
imul
inc
fsubr
jns
cmp
js
fimul
rcr
stc
jae
cmps
jns
add
inc
push
and
xchg
jo
jmp
pushf
pop
jmp
fdiv
xchg
cmc
xor
shl
cmp
adc
jg
jbe
adc
mov
cwde
jg
loope
push
xchg
xchg
test
mov
lock
das
lock
and
push
das
and
aas
dec
adc
dec
nop
out
add
push
add
inc
adc
frstor
outs
mov
int
in
sbb
mov
mov
sar
sub
inc
div
es
jg
mov
mov
shl
xor
es
into
in
sbb
hlt
aad
add
sub
pop
in
pop
and
pop
add
xor
retf
icebp
in
mov
cmps
test
add
popa
mov
out
push
pusha
in
mov
mov
xchg
iret
not
and
and
inc
sbb
sbb
xlat
xchg
and
inc
lea
popa
cmp
stc
movs
push
and
test
xchg
aad
inc
pop
xor
mov
mov
mov
adc
jnp
idiv
jnp
popf
ret
ror
ret
sbb
push
int
js
mov
iret
sub
adc
mov
lock
mov
stos
call
mov
sbb
ins
das
fwait
jno
ds
sahf
mov
and
jle
sbb
rcpps
not
stc
sub
int
sbb
imul
movs
pop
je
mov
cwde
std
in
loop
ret
lods
in
cmp
fisttp
ins
xor
jbe
mov
js
int3
dec
pop
and
data16
outs
mov
sbb
xor
inc
dec
lods
and
or
arpl
in
fstp
cwde
fistp
mov
mov
fwait
sbb
out
fadd
xor
mov
mov
push
stos
ja
cmps
in
or
mov
(bad)
jne
mov
popa
cdq
cmc
xchg
loop
jae
xchg
das
loope
ins
lock
xchg
shl
cmps
pop
mov
leave
loope
(bad)
hlt
sub
or
cmps
cwde
mov
cmp
pop
and
cmps
push
push
movs
mov
push
xor
mov
lods
xchg
mov
xor
jp
inc
inc
sub
add
xchg
xchg
ins
xchg
(bad)
call
jge
cmps
jmp
adc
and
loope
add
or
mov
aad
retf
sbb
aad
cld
sbb
leave
fldenv
push
add
adc
adc
add
add
imul
xchg
xor
push
pop
dec
imul
jecxz
call
test
leave
cmps
clc
xor
ds
aas
sub
jbe
and
xor
scas
and
rcr
pop
sub
(bad)
or
mov
sub
aas
push
ror
lahf
add
mov
(bad)
in
xchg
and
sub
les
jmp
xchg
scas
push
add
stc
add
stos
xchg
je
or
and
stos
int
and
retf
cmc
ins
sbb
adc
cmp
cmp
lea
sbb
mov
lahf
adc
mov
pop
mov
sbb
xor
popa
jle
xlat
jg
xor
jg
and
call
cmp
enter
and
cmp
adc
push
push
outs
mov
jge
xchg
nop
ror
sbb
mov
ret
and
aas
mov
xor
xchg
stos
pop
sbb
fst
shl
leave
sbb
jo
stos
test
mov
js
scas
mov
mov
scas
add
pop
sub
lods
(bad)
ds
xor
mov
(bad)
mov
dec
jns
xor
scas
les
ror
gs
mov
stos
test
out
cwde
pop
cmp
pop
xchg
or
imul
test
pushf
mov
mov
shl
gs
dec
les
cmps
data16
shl
push
xchg
sbb
push
aas
je
jno
pop
fistp
(bad)
rcr
cmp
push
ret
xchg
das
rcl
cmp
and
enter
pop
push
sbb
sbb
punpcklbw
sbb
pop
aaa
cli
in
mov
inc
adc
pop
ja
and
inc
jno
mov
(bad)
adc
push
ror
mov
mov
jnp
test
imul
test
add
fild
push
test
jle
pop
cmc
cmp
cmp
fsubr
leave
inc
aas
and
pop
adc
xor
mov
sub
mov
fprem
dec
or
jno
sar
sbb
mov
(bad)
jmp
arpl
sub
xchg
jecxz
fild
int
inc
call
inc
mov
ds
test
ja
mov
bound
out
mov
pop
add
mov
dec
int3
inc
call
mov
ins
adc
push
stc
sbb
pop
mov
or
ins
sub
mov
jbe
mov
pop
dec
arpl
jmp
jge
xor
xor
dec
dec
mov
inc
mov
(bad)
int
sti
out
add
push
cmps
pop
and
adc
xchg
les
ja
iret
addr16
dec
or
outs
xor
retf
nop
adc
mov
push
ds
inc
pop
lds
and
sub
inc
fisub
inc
in
xor
lock
pop
mov
adc
test
pop
test
and
fdiv
xchg
sbb
scas
push
mov
ja
mov
pop
push
mov
ret
enter
jge
dec
push
push
pop
out
es
outs
push
pusha
push
repnz
mov
add
cmp
jo
fadd
stos
add
add
mov
fiadd
test
les
inc
push
into
jne
into
jne
das
mov
pop
xchg
pop
or
rol
int3
dec
mov
add
xor
addr16
inc
add
inc
ret
adc
imul
xchg
xchg
add
sbb
mov
sub
mov
scas
js
movs
mov
push
pop
arpl
ret
dec
push
jp
dec
(bad)
ret
movs
(bad)
pop
fucomip
adc
mov
mov
lea
popf
xor
fs
hlt
popa
popf
es
mov
retf
sbb
jns
(bad)
pop
mov
or
ins
mov
jae
push
xor
dec
inc
push
adc
scas
shl
adc
repz
push
xchg
jge
dec
ud1
lods
fstp
ret
xchg
add
fcom
cli
fmul
ja
fist
ss
dec
jb
out
jno
adc
and
sahf
sub
mov
push
les
mov
retf
mov
mov
inc
outs
jo
call
retf
add
jo
ss
xchg
xor
pop
test
jmp
pop
xor
cmp
jae
mov
push
inc
and
inc
dec
sahf
fadd
cs
pop
es
std
cmps
and
jo
mov
ins
push
or
loop
imul
mov
sbb
dec
into
or
sub
cmp
inc
xor
ss
and
inc
mov
fwait
ret
inc
pop
test
cmp
mov
das
mov
shl
cli
clc
not
frndint
jmp
cwde
leave
aam
enter
cmp
retf
push
adc
mov
in
out
test
dec
js
out
mov
dec
rcr
jp
adc
and
jo
mov
add
mov
lods
imul
movs
mov
mov
lock
mov
push
ins
jmp
call
adc
movs
out
push
add
cmps
add
retf
mov
push
pop
mov
icebp
bnd
xchg
into
stos
sub
and
mov
cdq
call
sbb
ret
es
and
call
sub
mov
fs
shr
gs
je
sti
test
sub
cmp
pop
aam
inc
jg
(bad)
loopne
xchg
out
jbe
int3
mov
scas
cmp
out
cmp
and
pop
test
pop
inc
xchg
(bad)
repz
test
test
cs
repz
dec
lods
in
cli
xchg
mov
xchg
ins
ret
xlat
mov
in
mov
int3
push
test
mov
shr
stos
rol
adc
or
jg
(bad)
cwde
out
xchg
jbe
sub
ss
pusha
and
cld
ret
mov
mov
adc
out
fcomp
fst
test
stc
pop
xchg
pop
cmp
push
ret
ins
aam
pop
xlat
cmp
retf
jbe
test
sbb
jmp
adc
add
imul
cmp
mov
xchg
call
dec
mov
outs
dec
enter
mov
jo
or
xor
jmp
iret
and
xchg
(bad)
jl
and
fxrstor
mov
pop
out
adc
in
popa
jge
adc
popa
inc
out
mov
std
clc
and
pop
(bad)
fninit
ret
ins
mov
(bad)
cdq
pop
push
sbb
dec
jne
call
inc
mov
arpl
inc
loop
test
nop
pusha
repnz
cdq
lahf
xor
add
imul
add
pop
jmp
int
sbb
push
in
mov
movs
sub
mov
xor
nop
mov
xor
pusha
daa
mov
repz
ds
xchg
es
cmps
cmp
mov
push
add
dec
xor
mov
xor
jle
mov
mov
lds
(bad)
push
fmul
sahf
(bad)
jno
out
sub
mov
mov
hlt
xlat
stc
mov
lods
mov
adc
cmp
sti
call
icebp
dec
cmp
xchg
loop
in
jbe
pop
sub
imul
iret
mov
dec
xor
test
add
mov
add
cdq
mov
iret
dec
mov
call
add
push
sub
out
test
push
xlat
repz
popf
imul
stos
and
dec
dec
das
sbb
mov
jmp
repz
xlat
mov
or
in
ror
push
push
push
in
lods
fwait
xlat
outs
xchg
mov
sbb
push
dec
outs
in
fisttp
adc
xchg
jb
scas
mov
scas
mov
daa
outs
pop
ja
xchg
add
lahf
loopne
ins
lahf
sub
stos
pop
adc
int
dec
xchg
enter
enter
mov
test
hlt
ds
or
loop
cdq
fwait
stos
cmp
xchg
imul
loope
inc
enter
out
aam
aas
mov
fidiv
jmp
inc
sbb
pop
movs
adc
dec
jmp
outs
cli
lahf
pop
pop
pop
push
mov
cmp
sub
pop
sub
pop
or
xor
jnp
xchg
jge
fimul
pop
fwait
retf
xchg
pop
xchg
and
or
mov
mov
clc
inc
mov
add
jo
pop
mov
add
cld
add
add
dec
pop
int3
fcomp
popf
add
push
sahf
sbb
add
in
pop
cwde
repnz
in
adc
jl
repnz
repnz
std
int3
popf
adc
pop
sti
sbb
in
test
push
jb
fucom
pushf
pop
stos
jno
inc
mov
adc
fimul
loop
mov
mov
shr
cwde
jp
xchg
je
inc
xor
std
loope
inc
loopne
mov
pop
xchg
out
retf
mov
out
aaa
pop
xchg
mov
xchg
je
ss
(bad)
movs
(bad)
jg
push
add
adc
inc
cld
hlt
mov
pop
cmp
jecxz
sbb
inc
inc
js
jnp
loopne
xchg
push
scas
adc
fstp
stos
and
xchg
sub
and
push
mov
loopne
iret
cmp
adc
jne
and
pop
pop
(bad)
mov
and
stc
div
es
sbb
xchg
shl
jecxz
jmp
fdiv
push
das
jno
fcomip
cmp
fistp
into
hlt
push
inc
stos
repnz
xlat
outs
dec
rcr
ins
or
out
loopne
fdivr
jmp
mov
dec
sub
jmp
inc
push
add
xchg
add
mov
arpl
and
xchg
mov
jle
ss
adc
add
shl
mov
sbb
jmp
fst
icebp
sub
movs
pushf
ficomp
xor
or
ss
pop
ret
jno
ret
dec
fidivr
xor
xor
cmp
int3
popa
test
test
in
cmc
movs
xchg
outs
cmp
stc
pop
(bad)
cs
loop
js
test
nop
lock
out
hlt
jmp
rcr
rol
xchg
test
inc
jl
inc
pop
jge
cdq
stos
sbb
jl
fisubr
call
pusha
fs
sbb
neg
inc
inc
int
push
mov
mov
xchg
mov
loopne
(bad)
pusha
vpaddb
jbe
or
or
mov
sbb
push
jne
inc
int3
imul
data16
ret
idiv
adc
xchg
jns
adc
cld
mov
xlat
stos
in
cld
pop
cmp
in
sub
lods
in
jne
sbb
outs
sbb
jp
cmc
mov
push
adc
jnp
fild
jp
pop
clc
loop
shr
cs
sub
stos
lock
sahf
xor
sbb
je
ret
cs
push
jo
fimul
or
loopne
jbe
jmp
jns
jo
dec
or
ret
leave
(bad)
or
add
mov
adc
sbb
dec
into
pop
cmp
lds
mov
jns
sbb
(bad)
aad
ret
pop
or
fcom
mov
dec
and
test
lock
xor
or
stos
out
test
cmp
inc
retf
jle
jp
scas
into
mov
xchg
stc
lds
jmp
adc
mov
loopne
sub
mov
mov
mov
dec
adc
es
push
in
lds
sub
sbb
call
adc
and
dec
imul
jb
push
repz
sub
adc
push
rcr
arpl
fimul
movs
es
fs
xchg
cs
rcl
cmp
not
ins
xchg
mov
lds
sub
sub
outs
mov
je
int
cmps
push
gs
mov
bound
ret
iret
fidiv
or
push
outs
jne
(bad)
in
je
xor
cmp
pop
mov
mov
cmp
mov
mov
inc
ds
aas
sub
lods
xor
lock
jns
fist
xchg
das
mov
push
int3
adc
mov
lods
pop
leave
push
cs
fld
push
jecxz
rcl
inc
cmp
sbb
mov
sbb
add
push
addr16
hlt
dec
xchg
pusha
push
sbb
out
pop
fdivp
pop
cmp
push
sub
fdiv
inc
jg
pop
shr
pop
cmp
add
cdq
cmps
cld
push
or
ins
mov
call
sbb
mov
mov
call
iret
push
pop
adc
adc
xchg
or
ret
sahf
retf
add
cmp
shl
popa
inc
sub
pushf
mov
lock
shr
pop
aad
ds
add
jns
jno
ins
mov
xor
movs
xchg
push
push
or
clc
sti
repnz
jmp
sbb
mov
and
(bad)
cmp
outs
mov
cwde
outs
outs
retf
xor
ret
ror
int
inc
es
fwait
mov
inc
call
mov
dec
std
icebp
bound
lea
pop
ins
jmp
dec
jno
lock
nop
push
sbb
lods
enter
sub
push
cmp
inc
shl
cmp
loope
push
icebp
cmp
lock
push
cli
in
imul
pop
xchg
sbb
les
xchg
cmc
jl
push
and
arpl
sahf
std
xchg
fild
dec
adc
aas
xchg
(bad)
sbb
inc
cdq
test
(bad)
sub
fistp
sub
cmp
cs
mov
sub
xor
add
xor
push
sbb
push
or
out
ret
or
outs
mov
and
push
cmp
in
jp
cmp
xor
popa
stos
bound
mov
dec
xchg
(bad)
xchg
imul
mov
jp
add
or
xchg
mov
out
in
cli
into
pop
dec
call
jb
sbb
sub
lods
or
mov
mov
outs
sbb
std
loope
xchg
ins
cwde
mov
cmp
cli
push
xchg
add
pop
dec
and
mov
push
not
mov
adc
retf
dec
adc
movs
add
scas
push
cmps
cmp
sti
scas
mov
aas
sahf
lds
xor
fimul
fldenv
cmps
rcr
jo
mov
add
retf
dec
retf
sub
idiv
add
loopne
retf
daa
ins
aaa
imul
popf
sbb
xor
add
ja
scas
cmp
push
test
jl
cmp
popa
mov
xlat
mov
rcr
into
mov
push
sbb
cmp
jp
test
inc
push
dec
call
repz
popf
ja
sub
cli
shl
lea
jno
mov
pop
dec
rcl
dec
and
xor
push
xor
adc
ror
xchg
sahf
or
fsub
cli
jl
mov
inc
jae
(bad)
mov
dec
jmp
xchg
jo
std
into
jnp
mov
pushf
cmc
mul
push
push
jl
leave
pop
add
and
or
loop
or
in
mov
pop
push
test
sbb
push
sub
pop
ja
fild
test
add
movlps
out
jo
sbb
inc
mov
rol
jp
push
jb
xchg
add
dec
inc
cli
mov
adc
dec
mov
jl
pop
push
loopne
in
and
xchg
sub
push
cmp
xor
enter
aam
add
or
and
and
mov
rol
popa
dec
or
sbb
test
shr
outs
lods
xor
adc
outs
jmp
mov
add
cdq
leave
int3
imul
pushf
jb
outs
std
cmp
aam
mov
fstp
mov
jne
adc
jecxz
dec
les
movs
jmp
outs
in
out
mov
stos
icebp
outs
(bad)
push
mov
fadd
mov
sub
jb
sahf
cmp
xchg
mov
movs
popa
loope
xorps
shl
jl
add
sub
jns
scas
jg
imul
jns
jnp
hlt
add
ja
dec
pop
ja
add
sti
scas
rol
jns
dec
data16
shl
aad
lds
sub
es
sahf
inc
mov
ss
inc
jp
add
jg
sbb
aad
stos
jp
sbb
inc
mov
dec
retf
xor
xor
push
xor
jb
pusha
push
shl
xchg
repz
movs
sub
jg
sbb
test
dec
div
cmp
pop
adc
sub
fnstsw
loope
fisubr
dec
cmp
aaa
xchg
ror
mov
push
and
jmp
or
push
sbb
das
adc
loop
in
jnp
shl
xor
inc
pusha
test
jl
cmps
inc
fwait
fwait
lods
arpl
sti
arpl
sub
push
dec
in
ror
aad
xor
sub
sub
or
mov
push
sbb
jno
outs
fnstsw
ror
fdiv
mov
mov
jb
cmps
aaa
imul
pop
or
add
in
jg
popf
push
int
scas
inc
cmps
jb
dec
inc
in
pop
xchg
and
adc
bound
jae
mov
leave
sbb
push
inc
int3
push
jbe
imul
mov
dec
mov
int
push
ins
inc
adc
mov
mov
fldl2t
cmps
jge
sub
scas
rcl
xor
scas
les
jge
pusha
stos
fucomip
not
push
mov
repz
xchg
inc
cmps
outs
ret
pop
xlat
xchg
jmp
test
pop
add
mov
adc
pop
stc
push
repz
shr
or
pop
test
inc
js
retf
sbb
add
fldcw
lea
jns
icebp
mov
dec
jl
es
(bad)
aad
cmps
add
test
lds
daa
push
popa
pop
jmp
loop
icebp
lods
fwait
jl
data16
aas
mov
cdq
fldpi
hlt
es
es
dec
ds
daa
push
jg
aaa
mov
sub
dec
mov
xor
inc
inc
inc
outs
std
sbb
adc
inc
mov
push
and
fdiv
inc
dec
jae
xor
dec
mov
sbb
dec
jmp
jae
mov
push
dec
lahf
mov
add
out
cmp
ds
rcr
xor
xor
sbb
add
lahf
idiv
inc
scas
sar
imul
mov
ds
sahf
sbb
lods
mov
and
rcl
bound
movs
add
in
pop
push
add
lods
mov
(bad)
sti
cmc
sti
jmp
push
inc
leave
sub
push
push
movzx
xor
ins
or
out
leave
(bad)
or
fmul
pop
lahf
cld
test
cmp
mov
mov
stos
mov
add
dec
add
int
mov
mov
enter
sbb
popf
mov
scas
adc
movs
ins
ins
sahf
movs
dec
stos
and
jmp
cmp
fs
sbb
loopne
inc
loop
mov
jno
pop
dec
sbb
pop
(bad)
not
inc
bound
shl
imul
and
hlt
sub
(bad)
mov
or
adc
es
push
jb
out
lds
xchg
ror
sub
add
je
mov
pop
call
mov
jg
xchg
and
jl
mov
mov
leave
and
popf
xchg
jae
mov
push
mov
jns
dec
test
mov
retf
enter
dec
push
adc
std
jne
fst
pop
mov
mov
das
jmp
jge
sbb
push
jge
outs
cmps
(bad)
hlt
ins
lods
test
mov
bound
push
out
(bad)
jecxz
inc
ins
inc
mov
mov
call
inc
dec
mov
loope
ss
and
rcl
mov
xchg
cli
mov
jp
mov
out
mov
scas
jg
rol
(bad)
jmp
loope
inc
mov
dec
sub
mov
(bad)
ins
inc
aad
das
add
cs
repz
xchg
jp
mov
outs
xor
mov
inc
iret
fwait
in
pusha
sbb
fdiv
gs
jo
jmp
sbb
jl
test
add
sbb
and
test
mul
sahf
repz
jo
test
lods
and
dec
ret
aas
gs
mov
arpl
fcom
inc
lock
ss
aas
out
mov
add
adc
fisttp
ins
dec
push
xchg
and
loopne
xor
test
and
sar
inc
(bad)
mov
sub
into
mov
jmp
mov
gs
shl
cmp
mov
aam
test
cmp
data16
jl
out
mov
mov
cmp
ror
loope
div
js
bound
adc
jecxz
jns
div
mov
fwait
xchg
inc
(bad)
push
inc
add
pop
pop
mov
mov
jns
inc
lods
mov
xor
mov
jbe
ret
pop
enter
popa
mov
pop
push
inc
dec
gs
dec
mov
jle
inc
xchg
lods
mov
mov
test
icebp
jl
mov
jmp
stc
jno
cmp
inc
cmp
inc
std
push
mov
fwait
jb
leave
dec
dec
push
add
jl
and
push
mov
sbb
pop
rol
sbb
add
xor
leave
add
cmp
rcr
xchg
jb
in
bound
rol
sub
inc
sub
mov
jl
adc
xor
add
arpl
mov
mov
push
mov
outs
iret
aam
(bad)
out
loop
lahf
mov
test
sti
adc
mov
xor
out
push
dec
(bad)
in
pop
or
je
mov
adc
push
out
test
add
cli
jae
retf
ficom
xchg
pop
ror
xchg
dec
sbb
(bad)
loop
scas
sub
xchg
cmp
int3
or
push
cmp
push
fst
lahf
fs
or
xchg
jg
or
xchg
aaa
sbb
fidivr
and
repnz
jne
mov
mov
cmp
pop
and
lahf
daa
dec
mov
enter
and
cld
daa
pop
js
mov
fdivr
cmp
outs
ror
hlt
jmp
xor
vaddsubpd
xchg
mov
push
push
js
push
ror
pop
in
in
in
mov
mov
dec
pop
add
in
xchg
arpl
or
dec
(bad)
cmp
aas
dec
lea
test
mov
rcr
repz
mov
add
adc
mov
jnp
mov
fild
hlt
rcr
ror
adc
mov
lock
dec
sbb
pop
(bad)
mov
jp
mov
mov
fst
fs
add
and
lods
cdq
test
adc
fcomp
or
sbb
push
not
xchg
daa
mov
js
aaa
cwde
mov
xchg
out
das
inc
int3
dec
call
mov
fs
pop
test
sub
and
push
ret
mov
in
mov
cmp
jbe
call
loope
out
jne
sub
(bad)
std
or
mov
imul
jmp
leave
push
pop
aas
cwde
jnp
repz
and
and
into
popa
test
(bad)
je
std
mov
out
mov
xchg
sub
jmp
add
popa
mov
popf
sbb
mov
jg
popa
cmp
lahf
inc
push
fimul
scas
sbb
int3
pop
pop
or
pop
repnz
je
fisttp
xor
jle
push
dec
outs
cmp
dec
mov
inc
movs
cmp
lock
mov
test
xchg
cmp
sub
mov
inc
pop
cli
mov
fwait
push
dec
and
push
and
ja
mov
mov
aas
scas
dec
repz
bound
sbb
les
in
cwde
iret
sub
mov
mov
inc
mov
fdivr
jge
xchg
jp
jbe
and
rol
icebp
dec
out
dec
add
jl
xchg
jae
dec
test
out
dec
jno
and
out
cdq
sbb
jle
adc
fsubr
icebp
jmp
pop
(bad)
gs
sti
xchg
lods
mov
in
leave
xchg
inc
jnp
mov
and
or
sbb
sub
xchg
cmp
mov
out
ins
sbb
jmp
mov
xor
pop
mov
jae
adc
mov
xchg
pusha
xchg
ins
push
fild
pushf
pop
dec
and
mov
pop
cmp
xor
cli
scas
push
push
data16
add
shr
bound
sub
scas
not
leave
in
loop
ds
pop
loopne
(bad)
push
mov
sbb
sbb
jno
mov
icebp
in
fisub
fiadd
pop
stos
call
in
sar
xchg
cld
sti
pop
js
pop
aas
jle
cmps
push
pusha
shl
movs
and
movs
pusha
mov
mov
adc
pusha
loope
cli
and
push
jmp
xchg
mov
loope
add
jmp
out
add
jge
repnz
(bad)
pop
test
loop
(bad)
mov
or
push
cmp
mov
mov
js
jo
and
repnz
shr
push
mov
dec
mov
cdq
xchg
fs
jg
and
int3
push
sub
shl
ins
scas
inc
inc
jecxz
fldcw
ds
sub
data16
sub
sub
mov
fistp
push
ins
jbe
mov
ins
xchg
sbb
jbe
cwde
ss
iret
dec
rcr
push
jae
adc
mov
fild
push
jbe
xchg
and
adc
(bad)
cmp
jb
sub
mov
mov
shl
xchg
repz
cmove
mov
lahf
out
sub
adc
mov
or
adc
rcl
sbb
nop
loope
call
jg
adc
loopne
cmps
cld
pushf
xchg
inc
loopne
adc
(bad)
push
push
fistp
jmp
test
sub
push
xor
add
xor
add
cld
out
pop
(bad)
jecxz
sub
mov
js
sahf
push
push
cwde
mov
xchg
mov
cmp
push
aam
pop
xor
in
hlt
loop
push
jecxz
ins
jo
or
mov
jg
lahf
sub
pop
js
retf
pop
sub
adc
xchg
sub
aaa
xchg
fadd
int
fmul
dec
repz
retf
push
add
and
dec
mov
mov
loope
iret
(bad)
out
mov
(bad)
mov
test
mov
inc
ja
int3
sbb
pop
in
inc
xor
jb
jne
fiadd
movs
and
push
test
shl
retf
xchg
and
aas
pop
rol
xchg
jne
mov
push
add
dec
xor
aam
shl
sbb
(bad)
cmp
loope
dec
sub
add
fnsave
xchg
push
pop
pop
nop
xor
mov
lock
test
pop
or
and
mov
or
popa
rol
pop
or
pop
push
ss
xchg
sar
add
xor
jmp
jecxz
push
stc
and
lock
loope
out
in
mov
and
jbe
inc
jb
sub
cli
cdq
mov
out
sub
(bad)
jnp
xchg
es
add
cdq
aam
in
std
xor
inc
push
or
cmp
cdq
push
inc
mov
inc
mov
add
popf
xchg
arpl
lock
pop
xchg
xor
call
jl
inc
cwde
jb
movs
mov
jp
and
jae
(bad)
mov
or
pop
idiv
arpl
or
add
retf
test
scas
xchg
mov
adc
fs
loop
jno
repz
sbb
inc
in
jg
je
ret
ret
and
sti
push
shl
jge
cmp
jns
sub
es
cs
dec
iret
cdq
icebp
iret
sub
add
outs
or
out
add
icebp
inc
(bad)
sbb
sahf
jo
inc
sbb
test
xlat
adc
or
arpl
jge
cli
dec
pusha
imul
pop
sub
or
add
in
in
mov
ja
cwde
xchg
fidivr
xchg
inc
rcr
mov
xor
jg
aam
shl
fnop
push
mov
test
pop
je
xor
push
scas
arpl
xor
sub
pop
fisttp
scas
add
or
jbe
fstp
xchg
pop
test
cwde
mov
jmp
push
call
(bad)
adc
fbstp
sbb
fidiv
xchg
repnz
shl
sti
call
sub
repnz
inc
xchg
push
cld
push
sub
inc
outs
mov
push
addr16
push
fs
xor
fdivr
mov
ja
or
inc
cmc
inc
xchg
jo
sbb
push
out
aad
push
mov
test
imul
jne
mov
cmps
pop
fadd
mov
xor
inc
jg
rcl
cmp
sti
sti
sub
push
mov
mov
cmp
mov
sub
dec
jmp
jne
pushf
mov
inc
repnz
inc
movs
or
push
ds
test
sahf
shl
(bad)
test
jge
scas
pop
(bad)
popf
or
adc
cld
out
cmps
test
xchg
add
movs
aad
sub
jge
xchg
fwait
jle
xchg
cmc
jecxz
leave
pop
lahf
adc
inc
test
enter
mov
xchg
sti
out
add
fdiv
pop
adc
div
in
div
aaa
sub
inc
cmp
pop
jmp
psubq
fwait
push
cmc
(bad)
out
(bad)
daa
(bad)
fidiv
pop
jle
iret
mov
ds
dec
pusha
loop
inc
out
cmp
dec
sbb
fdivr
in
add
xor
dec
jbe
cld
and
mov
imul
pop
xchg
mov
add
fstp
mov
retf
cdq
aad
push
addr16
cld
mov
xchg
fld
stos
jg
jno
rcr
mov
jp
ins
stos
iret
jg
ret
mov
xor
pop
(bad)
leave
mov
sub
inc
mov
dec
dec
pop
push
int
shl
popf
xchg
sbb
aam
or
sub
and
jge
cld
adc
jecxz
mov
imul
(bad)
popf
mov
cld
lods
lods
or
dec
jmp
shl
retf
fwait
test
addr16
mov
shl
std
lods
add
add
bound
out
movs
aaa
enter
out
jo
lods
ror
lods
add
cmps
rcr
add
popa
ins
or
shr
outs
cmp
sahf
or
(bad)
mov
arpl
dec
mov
cmp
and
pop
push
sbb
push
xor
or
leave
sahf
inc
xchg
adc
sahf
ja
jmp
jae
mov
jnp
hlt
fwait
scas
out
lock
push
retf
pop
scas
enter
jno
jno
add
mov
inc
cmp
sahf
adc
aam
xor
sti
cmp
frstor
push
inc
das
hlt
hlt
dec
adc
loope
scas
(bad)
xchg
push
int
movs
cwde
or
push
jno
mov
icebp
shl
jle
mov
and
int3
push
jmp
dec
pop
xor
pushf
jl
mov
mov
cmp
mov
loopne
icebp
xchg
in
mov
imul
jecxz
xor
cli
rcr
and
cmp
pop
je
jmp
sub
mov
movs
sub
jo
inc
std
sub
aad
js
cmp
ja
int3
pop
in
mov
jp
(bad)
sahf
out
add
adc
and
adc
add
ins
push
test
cmp
xchg
sbb
dec
daa
outs
and
cs
mov
mov
test
dec
push
outs
push
cmp
jne
fsub
mov
jne
push
dec
fisubr
fstp
jnp
mov
ret
and
loope
(bad)
(bad)
push
add
popf
jge
out
sbb
aaa
rcl
jl
push
loopne
leave
or
loopne
mov
inc
push
or
pop
xor
adc
js
and
xchg
(bad)
jns
mov
repnz
sub
jg
outs
push
sub
loop
movs
xor
or
mov
or
ja
lds
scas
gs
iret
fstp
push
mov
loop
cmp
mov
lahf
into
shr
add
ss
in
push
retf
out
sub
push
jmp
xchg
scas
and
pop
jl
int
jmp
jl
xchg
xchg
ins
dec
adc
xchg
and
out
cs
repnz
clc
pop
jb
mov
nop
inc
sti
inc
jecxz
mov
add
mov
loope
jno
je
jge
std
mov
xchg
mov
setp
popf
ret
inc
leave
call
dec
(bad)
and
pop
iret
jnp
xor
shr
out
or
scas
xor
loopne
mov
loope
pushf
cli
cmp
sar
mov
or
mov
adc
mov
ror
cmp
mov
push
ret
setns
push
xor
test
sbb
(bad)
or
add
mov
rcr
call
lock
xchg
adc
dec
sub
xlat
mov
or
xor
shl
xchg
out
repnz
push
out
inc
push
jae
in
mov
(bad)
imul
(bad)
lahf
xor
movs
adc
or
icebp
or
mov
rcl
ins
mov
sbb
cmc
clc
stos
mov
cld
fdiv
js
mov
inc
mov
xchg
jge
dec
in
shr
in
ja
fidiv
cmps
int
lods
iret
sbb
ret
aaa
add
clc
rol
and
idiv
push
lea
fld
(bad)
push
ret
push
pop
in
or
lods
xchg
shl
xchg
push
adc
xlat
test
push
int3
xchg
jge
xchg
sbb
pop
in
push
and
repz
ret
int
cmp
cld
mov
aaa
push
dec
inc
mov
mov
rcr
ja
cmp
mov
shr
mov
mov
mov
into
and
pop
fwait
sbb
mov
mov
or
xchg
test
fadd
nop
arpl
mov
mov
mov
call
sbb
lock
pop
mov
mov
sbb
lock
mov
jo
movs
inc
and
cli
mov
cwde
push
and
jge
fwait
jecxz
sti
jp
mov
clc
mov
addr16
sbb
(bad)
fnsave
push
push
shr
pop
sbb
int
aam
inc
add
mov
pop
cld
add
jb
push
pop
or
push
mov
push
sub
retf
movs
mov
pop
mov
movs
sub
mov
ficom
cmp
or
(bad)
stc
dec
mov
loope
adc
xchg
fcomp
add
div
adc
mov
mov
mov
mov
out
xchg
adc
cld
mov
xor
arpl
gs
xchg
lods
jae
pop
sbb
daa
adc
add
shl
daa
repz
(bad)
stc
xor
cld
adc
adc
sbb
test
xor
sub
leave
das
dec
popa
or
imul
pop
push
jcxz
inc
sahf
popf
jg
pushf
stc
retf
jmp
jmp
mov
ins
scas
shl
loop
mov
dec
pop
jnp
test
retf
jmp
outs
lods
pop
sbb
xor
cmp
or
adc
cs
add
out
sti
cs
mov
xchg
nop
sbb
fld
mov
xchg
popa
movs
scas
sbb
xchg
leave
and
sbb
push
or
ss
pusha
movs
sub
xchg
jmp
add
mov
mov
ds
cmp
xor
ss
aam
mov
pop
lock
test
pusha
lea
push
jmp
retf
xchg
cld
fdivr
std
cld
pop
mov
imul
mov
aam
xchg
jne
push
sub
leave
pop
lahf
lea
enter
sbb
jo
ss
push
dec
pop
and
mov
out
cmc
fldcw
mov
es
sub
(bad)
fist
aas
add
xchg
or
lahf
scas
and
xchg
add
mov
das
mov
ja
fisub
repnz
sbb
dec
adc
les
sar
pop
mov
add
add
mov
mov
jmpw
push
call
xchg
dec
ds
in
leave
mov
aad
mov
daa
or
push
inc
mov
sub
cmc
ror
in
(bad)
jo
les
sbb
fimul
xchg
sub
and
jecxz
jbe
shl
sub
xchg
add
enter
jnp
arpl
mov
mov
inc
pop
mul
fisttp
add
mov
push
and
pusha
jg
pop
(bad)
add
mov
gs
and
leave
dec
or
cmp
stc
pop
scas
rcl
cmp
fs
stc
push
push
ja
lahf
inc
dec
pop
xchg
mov
push
or
jecxz
and
lds
push
xchg
outs
sbb
jne
fs
push
xor
outs
xor
mov
pushf
inc
popf
addr16
adc
and
imul
scas
pop
nop
icebp
das
sbb
ins
aas
xchg
in
xor
push
jmp
mov
iret
popf
test
rcl
outs
mov
outs
sahf
cwde
cmp
lock
mov
pop
inc
gs
dec
bound
cmp
mov
(bad)
int3
add
ficom
add
xchg
and
cmps
das
int3
mov
and
jecxz
cli
cmc
packuswb
mov
add
add
jl
jge
shl
test
loopne
lods
aaa
jns
jle
ficom
ins
fcomp
cmp
or
xchg
sub
jns
fcmovnb
fwait
in
pop
jno
into
test
pop
bound
fdivr
(bad)
sbb
sub
fdivr
leave
mov
movs
test
mov
jbe
xchg
xchg
lfs
(bad)
lods
push
mov
xchg
lods
lahf
jle
xor
cmp
add
mov
pop
mov
jl
adc
icebp
stc
loop
repz
(bad)
(bad)
into
pop
js
inc
mov
stos
(bad)
jle
sbb
cmps
xchg
jne
or
rcr
jns
adc
xchg
mov
push
in
xchg
cmp
add
add
mov
rol
mov
sbb
sbb
push
aaa
push
push
clc
mov
adc
call
and
jge
or
xchg
xor
xor
les
sub
enter
daa
mov
or
popa
(bad)
shl
dec
add
test
mov
mov
push
pop
stos
adc
sub
dec
push
sub
sub
sahf
outs
jg
ins
test
das
dec
test
sub
cli
iret
jno
mov
test
mov
out
jle
dec
jbe
jmp
loop
mov
jae
leave
and
loop
test
mov
push
or
sbb
xchg
je
cmp
jae
sbb
loopne
push
dec
ds
push
shl
sbb
cmp
mov
bound
push
jmp
(bad)
jl
das
lods
sub
imul
and
dec
scas
jmp
stos
mov
aas
call
cmc
xchg
mov
(bad)
jmp
(bad)
ffreep
mov
mov
jae
ret
cwde
push
cdq
cmps
test
pushaw
ins
ins
mov
ja
(bad)
les
(bad)
sbb
cld
lock
out
outs
dec
adc
and
mov
pop
jno
jg
dec
sbb
mov
lods
mov
test
scas
lahf
inc
mov
cmp
or
mov
xor
jmp
ret
cmp
cmps
push
shl
or
jmp
loopne
pop
mov
dec
aas
call
inc
mov
inc
dec
pop
and
fucom
and
hlt
stos
pop
push
xchg
test
dec
xchg
mov
cli
(bad)
std
daa
das
ficomp
dec
(bad)
daa
dec
(bad)
cli
inc
mov
jl
mov
jne
lods
stos
or
push
jb
call
add
pop
pusha
cdq
mov
adc
xlat
mov
sahf
stos
icebp
sub
add
movs
test
sub
call
test
inc
mov
mov
imul
sbb
push
push
mov
add
sar
mov
jae
sti
ins
adc
sbb
jae
adc
mov
adc
inc
cli
iret
cwde
leave
push
fcom
sbb
push
gs
shl
outs
add
mov
sub
movs
in
test
out
pop
int3
fimul
scas
mov
mov
cs
inc
addr16
sti
(bad)
adc
mov
cmp
test
ja
and
and
and
je
inc
sbb
mov
pop
dec
xchg
xchg
jp
jno
mov
pop
add
xlat
mov
jne
ins
sub
in
addr16
xchg
xchg
fiadd
loopne
xchg
les
cmps
loopne
xchg
sbb
outs
push
adc
add
mov
push
pop
xor
mov
scas
ins
adc
mov
gs
or
(bad)
dec
mov
fmul
in
xor
icebp
or
xchg
aam
inc
pushf
test
mov
shl
daa
pop
inc
cmp
inc
std
fdivr
adc
out
mov
je
or
push
add
push
or
imul
jbe
movs
popa
in
pop
(bad)
sbb
lods
dec
mov
pop
aad
jecxz
shl
xchg
loope
hlt
jg
inc
rcr
dec
mov
popa
cli
mov
jp
addr16
fidivr
cmps
int3
jmp
movs
and
(bad)
loope
enter
neg
iret
test
mov
outs
add
fcom
out
jnp
je
sub
add
(bad)
cdq
in
call
and
pop
test
adc
mov
pop
pop
jbe
adc
jmp
int
pusha
push
loope
scas
xor
mov
lahf
or
fild
bound
sub
out
xlat
mov
sbb
adc
inc
mov
nop
in
div
or
shr
rcr
sar
mov
loop
pop
in
lods
bound
xchg
mov
cmps
mov
gs
push
fild
das
pop
or
fsub
ror
jle
mov
pusha
movs
imul
ret
add
and
jmp
iret
cmp
cdq
dec
(bad)
je
add
xor
dec
fwait
ins
adc
cwde
mov
xchg
xchg
mov
daa
mov
mov
mov
lds
dec
(bad)
(bad)
idiv
ret
loope
icebp
mov
(bad)
cmp
mov
outs
fild
addr16
imul
pop
stos
or
mov
mov
popa
scas
lea
sbb
sahf
mov
jne
jae
mov
dec
(bad)
out
ins
jns
mov
cdq
ins
mov
lahf
jmp
sub
mov
pop
(bad)
cld
mov
dec
dec
iret
or
in
or
sbb
fwait
test
test
or
popf
push
inc
add
in
ins
ja
aas
xchg
xor
sbb
jbe
dec
outs
and
mov
test
in
repz
stos
xor
cmps
push
xchg
mov
push
mov
or
pop
jecxz
mov
mov
push
or
out
jle
push
in
push
lods
leave
push
cmp
(bad)
cmps
clc
adc
cmps
in
dec
call
fnstenv
and
js
repnz
fbstp
imul
ror
arpl
ins
(bad)
pop
fld
push
mov
scas
in
pop
adc
std
pop
xchg
int3
leave
mov
sub
popf
and
xor
cdq
xor
mov
xchg
std
xor
ret
push
pop
cmp
(bad)
ja
push
pop
xchg
aam
inc
aam
mov
mov
je
je
add
add
cs
cmp
imul
pop
add
adc
fwait
repz
aaa
loope
ror
mov
popf
aam
call
mov
sub
shl
stos
lahf
ror
xor
push
arpl
and
shl
imul
clc
enter
sar
and
inc
popa
pop
outs
xchg
je
(bad)
in
inc
mov
(bad)
jecxz
icebp
int
retf
movs
sahf
pop
pop
or
js
addr16
out
xchg
mov
lea
rcr
mov
push
lea
and
call
mov
xor
and
inc
movs
mov
add
shr
and
adc
mov
dec
shl
pop
jle
aad
xchg
inc
mov
les
sahf
mov
dec
jle
test
push
data16
nop
sub
out
jl
mov
outs
sahf
mov
ret
mul
fs
lock
ret
in
fidivr
shl
leave
mov
cmp
dec
dec
in
sub
jmp
cmps
push
addr16
push
push
out
pop
test
shl
mov
lea
in
inc
cwde
ficomp
and
and
or
jo
movs
dec
inc
(bad)
jmp
inc
arpl
add
and
pop
xor
outs
ret
mov
imul
hlt
js
sub
pop
dec
retf
or
mov
xor
stc
push
cwde
into
or
and
(bad)
jbe
or
cs
xor
aam
ds
xchg
and
cli
jle
push
push
or
inc
jp
mov
mov
jo
(bad)
push
push
jl
cmps
inc
sbb
jae
fimul
ins
mov
(bad)
div
pushf
xchg
jge
jle
jae
retf
mov
stos
cld
(bad)
fadd
shl
push
push
je
xor
aas
jle
(bad)
add
fwait
ins
fld
pop
lock
and
adc
ds
das
mov
inc
ror
test
inc
fdivr
cmps
xchg
ds
jo
rol
jg
imul
push
dec
mov
in
xchg
inc
cwde
pop
data16
lock
cmp
and
jmp
stos
movs
cmc
or
push
test
add
pusha
sub
cmp
int
pop
outs
(bad)
jno
sbb
ds
and
pushf
jne
add
and
repnz
out
ins
cwde
addr16
and
popa
adc
push
push
pusha
mov
test
div
test
mov
mov
aas
mov
loop
push
inc
push
jmp
movs
loop
pushf
loop
cmp
lods
xor
inc
fadd
lea
lods
mov
jl
push
xor
pushf
leave
out
push
cmp
add
sti
pop
movs
clc
jmp
inc
xor
pop
cdq
inc
dec
xor
mov
ret
dec
sub
add
in
mov
in
and
mov
sti
cdq
movs
arpl
rol
adc
mov
add
sbb
and
cmp
int
adc
movs
stc
(bad)
fdivr
sbb
in
mov
(bad)
scas
scas
xor
mov
mov
(bad)
mov
les
mov
pop
ins
and
fst
dec
stc
mov
pop
dec
cmp
xor
pop
imul
or
cdq
mov
mov
mov
mov
inc
jl
fiadd
data16
pop
lods
cmp
leave
xor
data16
pop
adc
mov
outs
cmp
jns
push
pop
inc
mov
lahf
aas
add
out
inc
jmp
xchg
ret
aad
lock
cwde
lods
leave
clc
sahf
or
lods
add
or
adc
jecxz
out
bound
inc
ins
pop
push
add
add
mov
jb
fsub
sub
mov
imul
popf
cmc
push
inc
adc
inc
test
mov
sar
cwde
scas
retf
or
and
(bad)
inc
icebp
aad
mov
aaa
movs
outs
out
fist
lahf
sbb
fcomp
dec
sub
and
adc
mov
sub
outs
ins
xchg
icebp
pop
rcl
lahf
test
not
inc
mov
or
scas
and
sub
mov
hlt
mov
dec
inc
pop
repnz
clc
sub
jl
cmp
fimul
pop
mov
or
rcr
jb
add
stos
loopne
sub
pushf
pushf
sbb
movs
push
jae
xchg
dec
jl
or
js
les
sbb
sub
fistp
sbb
lods
sub
mul
cld
(bad)
movs
jne
mov
mov
jl
push
gs
inc
fcomp
mov
jnp
jmp
ds
pop
adc
imul
jne
mov
adc
icebp
mov
ins
jecxz
xchg
push
shl
in
xor
xor
pusha
inc
add
les
adc
dec
jmp
out
sar
mov
pusha
xlat
shl
(bad)
or
rcr
dec
ficomp
mov
xor
mov
mov
adc
xor
aam
jp
das
mov
pop
lea
push
imul
cmp
lock
ins
jp
push
and
stos
cmc
rol
outs
inc
or
lock
jp
(bad)
cld
fs
xchg
push
hlt
fcmovnbe
loopne
push
push
inc
scas
mov
xlat
(bad)
xchg
ins
push
add
ins
fldcw
xchg
lds
push
(bad)
mov
jnp
aam
dec
fwait
cmp
cmp
mov
ficom
jb
sbb
pop
mul
cdq
data16
push
pushf
ins
mov
call
fucom
leave
fisubr
and
mov
inc
out
sahf
aas
(bad)
retf
stos
cdq
test
lds
and
mov
adc
mov
call
enter
dec
add
in
out
mov
pop
clc
add
fwait
movs
pop
lods
pop
mov
xchg
popa
pop
pop
icebp
movs
dec
add
xor
fldenv
fstp
lods
imul
xchg
stos
pusha
cmp
(bad)
icebp
or
adc
mov
scas
xchg
mov
pushf
sahf
jge
loopne
xchg
jmp
or
leave
clc
sbb
dec
jne
push
imul
push
repz
adc
fisttp
mov
or
das
gs
dec
in
(bad)
imul
sub
and
mov
movs
jnp
and
inc
add
xor
gs
lock
mov
jno
nop
lods
fcmovnu
aad
rep
and
popa
scas
(bad)
retf
mov
cmp
jmp
push
dec
daa
aaa
xor
daa
push
and
or
fsubr
dec
push
cmc
xor
in
icebp
mov
adc
mov
sbb
jmp
rcl
scas
sub
aaa
out
je
adc
and
pop
xor
stos
adc
dec
jno
test
mov
inc
jmp
sbb
mov
pop
fwait
das
pop
sbb
sbb
mov
test
sub
inc
stos
sub
enter
pop
and
maxps
add
jne
mov
jg
ss
jno
xchg
dec
mov
mov
inc
(bad)
sub
and
setge
jo
movs
xor
or
inc
out
rcl
ret
ret
fmul
cmc
mov
ss
adc
or
(bad)
inc
(bad)
jno
mov
movs
xchg
into
(bad)
push
xor
movs
test
inc
mov
fcmovu
or
test
or
ror
fs
in
pop
lds
push
mov
fimul
inc
or
fnsave
out
movs
cli
cmp
rol
push
cmps
sub
mov
int
ss
fst
ja
rol
in
push
cmps
cdq
aaa
push
call
idiv
mov
adc
aam
pushf
sub
jge
int3
xchg
mov
pop
push
cwde
or
xor
cmp
arpl
push
add
sub
sbb
xchg
mov
mov
movs
scas
add
stos
bt
sub
sub
dec
out
xchg
inc
add
push
fs
cli
pop
shl
add
cmp
mov
add
jb
push
pop
shl
push
pop
sbb
jl
je
mov
int
xchg
loop
inc
push
stos
in
jmp
mov
dec
xor
dec
pushf
test
cdq
int
fwait
jecxz
push
push
sub
mov
stos
les
ja
outs
dec
sbb
popf
out
iret
inc
lods
inc
call
fcomip
xchg
loope
out
pop
jl
sar
call
mov
test
and
push
push
sahf
imul
or
test
sub
bound
mov
out
je
es
mov
aad
ja
jb
ja
sub
add
mov
and
xor
dec
fild
inc
inc
lea
inc
ret
out
mov
and
icebp
mov
mov
icebp
test
mov
mov
adc
(bad)
mov
inc
in
and
std
gs
cld
(bad)
lock
jmp
and
loope
add
scas
push
jb
and
add
push
cmp
mov
std
mov
sbb
mov
inc
les
inc
inc
arpl
cmc
out
ret
cli
sub
pop
das
add
dec
(bad)
fld
push
test
push
xchg
mov
mov
cmc
ret
pop
jle
(bad)
lahf
push
xor
int
adc
push
mov
dec
inc
inc
std
sbb
adc
aaa
pop
mov
fcom
or
pop
inc
jno
imul
dec
leave
sub
inc
out
push
je
movs
cmp
(bad)
imul
mov
mov
hlt
jo
pop
addr16
icebp
fmulp
dec
pop
jae
sbb
int
rep
and
sysret
cdq
shr
jnp
xchg
push
aas
cmp
inc
ficom
popa
lods
aad
xchg
retf
push
sbb
mov
jle
shl
mov
leave
ins
jbe
xchg
xchg
not
adc
lock
sub
out
dec
test
ret
or
cmp
lock
dec
mov
test
adc
push
add
test
lahf
push
out
in
rcl
dec
push
mov
nop
fsubrp
rol
push
pop
push
push
cmp
jmp
call
push
std
mov
ret
lahf
push
rol
call
ds
hlt
repz
xchg
je
data16
mov
push
out
cdq
loopne
out
xor
inc
mov
cmp
xor
loop
push
adc
and
imul
mov
hlt
outs
push
dec
xlat
gs
mov
sub
jb
xchg
mov
jmp
daa
pop
mov
lahf
xchg
jle
(bad)
push
clc
inc
jmp
adc
inc
pop
adc
ins
sbb
add
pop
lahf
inc
sbb
mov
call
xchg
loope
xchg
jo
pop
pop
nop
inc
sub
jno
adc
nop
add
cmp
xlat
mov
or
pop
ror
mul
les
fadd
ret
fcom
rcl
xlat
hlt
sahf
call
xchg
shl
sub
sub
sbb
inc
bound
pop
add
cmp
lds
mov
ja
or
test
push
add
stc
mov
neg
dec
mov
mov
sete
add
pop
cmps
xchg
cmp
mov
sub
out
add
push
dec
cmp
adc
mov
sub
or
or
or
and
bound
jne
xlat
inc
(bad)
jno
push
xor
xor
movs
in
jp
jae
fst
inc
adc
xchg
cmp
lahf
push
sahf
jno
test
pusha
dec
xchg
es
jbe
push
fcom
out
inc
add
mov
pop
pop
cld
or
dec
cld
int3
div
gs
dec
xor
iret
loopne
pop
xchg
js
jne
cld
sti
add
scas
shl
inc
addr16
ja
test
dec
sub
jb
mov
mov
push
es
stos
ja
or
cmc
dec
inc
dec
jb
cmp
jno
inc
jg
test
out
into
mov
adc
add
rcr
inc
sub
iret
add
push
fnsave
pushf
(bad)
fs
pushf
sahf
mov
mov
mov
mov
cmp
add
inc
and
mov
jle
add
fisubr
or
movs
inc
jno
or
ror
mov
sub
int
aad
repnz
lahf
add
pop
adc
jge
in
fnsave
mov
fs
es
push
and
lds
lods
addr16
mov
bound
dec
jl
sar
pop
cli
inc
cld
les
cdq
cmp
repz
fld
cdq
pop
rol
adc
fwait
xor
sub
inc
sub
iret
add
ror
adc
rcr
mov
jae
add
xchg
cmps
mov
fild
in
push
pop
imul
sbb
inc
ror
out
les
mov
cmp
in
push
or
jle
cs
jnp
pop
or
xor
mov
loopne
fldcw
jb
add
jle
adc
xchg
adc
retf
in
sbb
xor
jo
mov
loope
jae
mov
(bad)
mov
mov
push
cmp
aaa
or
test
add
cmp
xchg
je
xchg
push
sub
pop
or
sbb
aaa
bound
dec
repz
inc
les
mov
push
into
inc
shr
inc
loop
jmp
aad
mov
iret
jle
movs
add
mov
pop
fwait
inc
push
or
cli
cmp
clc
sar
popf
int
loopne
xor
pop
fs
test
mov
xchg
sub
mov
loop
lea
pop
ret
inc
mov
add
push
pop
adc
xchg
mov
ins
les
xchg
mov
(bad)
(bad)
sbb
sbb
out
fisttp
aaa
mov
mov
out
stos
mov
ins
mov
hlt
ins
ror
pop
daa
adc
jmp
mov
add
dec
dec
adc
jecxz
pop
ins
hlt
loopne
add
jmp
aam
mov
out
cmps
mov
mov
rcr
dec
xchg
cmp
adc
adc
test
push
mov
cmp
or
clc
cs
(bad)
cmp
jo
jecxz
add
pop
rcr
call
test
or
call
and
add
pusha
add
je
int3
jecxz
dec
ret
jmp
jp
add
mov
and
test
inc
cmp
xchg
popa
push
clc
(bad)
push
or
sbb
scas
pop
ins
sbb
mov
movs
enter
pop
clc
xchg
cld
mov
or
xor
pop
lock
xchg
pop
ja
dec
inc
xchg
iret
mov
(bad)
into
add
mov
xor
int3
pop
and
int3
pop
out
xchg
sbb
iret
je
adc
les
cmp
scas
mov
(bad)
arpl
fs
cs
clc
es
fwait
or
push
cmc
xor
mov
lds
pop
outs
and
jns
xchg
sahf
xchg
aaa
iret
aaa
adc
test
cli
fistp
mov
mov
sbb
xor
retf
(bad)
jae
out
jge
pop
xchg
push
(bad)
cld
push
dec
mov
gs
cmp
mov
mov
adc
fcomp
inc
add
mov
fcomp
and
and
ficom
in
test
and
cmps
jnp
clc
xchg
jg
pop
push
or
fsub
mov
push
xchg
aaa
or
fsub
dec
and
mov
and
adc
cmp
loopne
cmp
das
adc
test
and
shr
adc
mov
pop
dec
addr16
cld
push
(bad)
fimul
push
test
(bad)
hlt
or
test
cmc
mov
iret
daa
jns
cmp
mov
mov
call
int
mov
popf
mov
in
lock
shr
add
in
ins
cmp
pop
mov
mov
popf
movs
sbb
je
fcomp
fidiv
jne
ret
stc
rol
(bad)
shl
iret
into
mov
xchg
pop
jg
xchg
xchg
repnz
adc
jp
jns
sub
mov
add
sub
or
jmp
pop
sub
pop
push
sub
lods
sub
add
dec
dec
push
push
arpl
cmp
shr
lods
test
sbb
fisttp
mov
sbb
mov
jp
pop
cs
loopne
ins
cmps
cld
cwde
adc
fstp
mov
test
pop
ss
(bad)
cld
and
add
pop
fcmovbe
pop
cwde
jge
jg
or
cmp
cwde
push
jp
inc
mov
inc
cmp
fwait
fwait
scas
pop
dec
cmp
fs
xchg
scas
dec
pusha
mov
mov
sub
ins
inc
gs
mov
sub
pop
hlt
and
call
mov
sub
mov
test
jl
test
cwde
push
jecxz
rcr
inc
mov
pop
add
out
repnz
mov
data16
xchg
sbb
sub
or
xchg
sbb
mov
pop
dec
ds
xchg
lahf
lock
data16
sub
stos
xor
in
imul
dec
pop
jmp
psrad
cmp
sbb
xor
imul
push
shl
mov
jle
mov
pop
(bad)
repnz
or
inc
sbb
fs
mov
test
loop
int
call
mov
cmp
dec
or
and
adc
and
fucomip
sbb
push
push
push
sbb
xor
test
inc
(bad)
mov
sub
lods
pushf
xchg
adc
sbb
adc
gs
adc
mov
test
or
pop
push
mov
add
cmps
call
push
or
push
xor
mov
addr16
loop
(bad)
pop
loopne
add
lea
mov
hlt
dec
dec
xor
push
xor
mov
xor
xor
pop
or
mov
stos
xchg
outs
fidivr
push
xchg
xchg
mov
rcl
(bad)
mov
inc
scas
outs
(bad)
sbb
pop
arpl
imul
xor
movs
sahf
mov
fwait
adc
adc
cmp
das
mov
or
xchg
inc
push
shl
inc
inc
inc
dec
leave
arpl
repz
mov
push
sbb
inc
rcl
pusha
outs
rol
jp
std
dec
fisubr
in
pop
sub
sub
pop
pop
mov
ret
or
add
ds
addr16
mov
mov
dec
inc
push
fwait
jmp
stc
mov
stc
mov
out
cmc
mov
sbb
pop
cmp
pop
inc
jge
mov
xchg
loopne
je
(bad)
movs
mov
and
xchg
rcr
je
xor
aaa
popa
or
jae
icebp
cmp
sbb
mov
into
dec
addr16
mov
inc
cld
shr
or
dec
jns
cs
mul
stc
fnsave
push
mov
dec
jo
leave
push
shr
inc
pop
inc
xchg
jmp
sub
test
aaa
jmp
call
mov
jnp
xor
inc
neg
dec
mov
mov
mov
cli
imul
movs
fldenv
scas
rol
add
mov
xor
loop
xchg
push
jle
je
aaa
dec
dec
repnz
xlat
and
sahf
cmc
cmp
addr16
sar
push
and
les
mov
lock
std
pop
pop
cdq
fucomp
repz
or
mov
jecxz
rol
dec
or
push
loop
mov
pusha
push
out
mov
and
mov
dec
xor
cmp
xlat
smsw
mov
xor
mov
and
mov
mul
inc
daa
adc
ret
iret
and
sbb
jmp
dec
popw
imul
xchg
add
xchg
jo
outs
movs
ins
mov
test
js
xor
out
sub
movs
pop
gs
mov
in
in
jp
mov
es
pushf
mov
ror
addr16
sub
aad
mov
pop
push
mov
test
mov
push
inc
cmp
xchg
leave
sub
jbe
(bad)
xor
and
rcl
imul
out
mov
xchg
xor
in
sti
jbe
std
data16
fucomi
and
scas
or
das
add
mul
jnp
sbb
push
jb
pop
jo
imul
xchg
inc
popa
je
hlt
mov
or
popf
ror
pushf
(bad)
sub
xor
xor
jne
pop
fisub
lods
fstp
lods
pop
test
pop
sar
retf
lods
loopne
add
adc
cmp
adc
js
test
mov
js
mov
adc
aam
es
mov
or
popa
mov
mov
mov
call
xlat
(bad)
rcr
popa
cmp
inc
ins
call
sbb
inc
inc
scas
or
loopne
shr
jecxz
or
leave
ins
pusha
fist
xchg
pop
bound
std
fs
hlt
mov
add
jge
fisttp
aaa
push
sbb
push
aad
jnp
(bad)
bound
mov
call
out
int
jmp
retf
sub
inc
xor
sub
imul
or
rep
loopne
push
out
cmps
inc
(bad)
call
jo
push
adc
push
mov
jmp
mov
or
sbb
mov
and
add
jne
xchg
add
sub
xchg
js
mov
lods
dec
sti
xor
jae
cli
lods
sub
(bad)
fdivrp
jo
in
adc
scas
lea
popa
ss
call
jnp
out
dec
sub
(bad)
std
xor
inc
mov
xor
push
sub
sub
outs
addr16
stos
and
xchg
out
push
jle
mov
add
(bad)
or
out
adc
aaa
ins
shl
push
imul
test
retf
mov
push
fbld
cli
movs
mov
loop
dec
imul
mov
ja
adc
jmp
adc
jbe
out
cmps
dec
add
(bad)
mov
enter
xchg
sbb
div
data16
sbb
adc
sub
pop
icebp
adc
add
loop
inc
fisubr
loop
mov
xor
inc
push
mov
push
inc
cmp
psubq
sbb
mov
loope
test
or
pop
inc
pop
test
and
add
(bad)
jns
adc
add
sbb
pushf
mov
mov
and
mov
stos
leave
mov
mov
mov
inc
dec
xor
movs
shl
inc
pop
arpl
mov
jne
imul
rol
fst
sub
clc
outs
pop
lahf
push
loop
repnz
inc
(bad)
leave
shl
mov
or
fwait
xor
cmp
(bad)
pop
les
adc
gs
ror
push
jge
popa
shr
xor
into
jno
ins
out
pop
cdq
ins
cmp
movs
lea
movs
mov
mov
(bad)
loop
sbb
clc
lods
xchg
or
jecxz
ins
cmp
mov
sar
sbb
mov
xor
rcl
push
outs
xchg
adc
mov
push
mov
in
ret
adc
popa
stc
add
sahf
mov
(bad)
ffreep
xchg
xor
pop
xchg
imul
mov
cwde
stos
js
les
xchg
mov
cmp
push
xlat
mov
shl
call
data16
or
add
inc
pop
or
lock
mov
aad
int
mov
outs
arpl
xor
ror
add
jno
int3
arpl
mov
das
pop
pusha
lea
repnz
push
adc
mov
adc
push
xor
mov
cld
pop
mov
xchg
mov
pushf
pushf
jle
cmp
inc
push
lds
fidivr
shl
rcl
call
es
(bad)
jmp
cwde
sub
push
rol
jns
stos
test
dec
sti
fsubrp
and
mov
dec
sub
pop
lea
push
adc
bound
cwde
popa
je
inc
dec
jp
out
mov
adc
adc
enter
push
das
movs
mov
mov
push
fwait
idiv
push
sbb
or
fucomip
js
or
sub
int
cs
mov
jp
dec
or
mov
(bad)
pop
mov
sub
sub
ja
and
ret
mov
and
xor
push
add
jnp
test
repz
ss
xchg
add
jmp
pop
inc
add
pop
jmp
mov
retf
aam
out
repnz
js
je
xor
sbb
xchg
mov
adc
sub
iret
lea
ja
xchg
jle
loope
lods
iret
outs
into
and
jl
and
fidiv
sbb
add
loope
pop
pop
scas
sub
mov
or
ret
xor
inc
out
jp
mov
cwde
mov
dec
test
cli
jb
jg
jnp
lods
imul
movs
cdq
cld
test
add
xchg
push
pop
xlat
ficom
jns
in
shr
in
sbb
mov
sub
js
outs
fdivr
mov
mov
push
add
xchg
sub
ja
rcl
or
jmp
mov
sub
lods
dec
outs
in
jbe
and
mov
lods
cmp
push
xor
repz
dec
fdivr
mov
sti
sub
pushf
in
cli
dec
push
das
cmp
adc
jbe
fst
shl
cmp
icebp
pop
jne
aas
sbb
(bad)
call
ds
adc
pop
(bad)
(bad)
sub
into
scas
mov
jg
retf
outs
mov
repz
mov
dec
mov
sub
ds
ja
pop
sub
popa
adc
je
push
dec
out
fmul
addr16
push
xor
pop
cmc
inc
movs
jl
enter
lahf
or
add
jl
xchg
cmp
retf
dec
add
lock
cdq
add
test
clc
xchg
(bad)
push
ret
loope
out
jmp
jo
sti
mov
push
ss
pop
fnstcw
leave
push
lods
retf
lock
xchg
fcom
cmovnp
sub
xchg
aaa
mov
ins
aaa
es
and
xchg
mov
xor
icebp
sub
push
sti
cmc
ins
loop
aas
mov
lods
jae
mov
aam
xchg
sbb
imul
cmps
jne
add
sahf
inc
sbb
add
mov
cs
loop
add
outs
push
fadd
adc
(bad)
mov
and
ins
sub
sub
pushf
lea
test
loopne
xchg
add
cmp
xchg
in
and
popa
movs
call
fisttp
(bad)
das
retf
sahf
mov
mov
adc
lods
cmp
sbb
std
or
movs
mov
cmc
loope
aas
imul
adc
cmp
retf
adc
(bad)
mov
dec
imul
xor
sub
mov
es
jecxz
sub
xor
sub
arpl
pop
loop
dec
cmp
dec
rol
mov
xchg
add
push
mov
xchg
push
or
sub
mov
or
sbb
lock
cs
shl
loop
xchg
ins
dec
xor
dec
stc
cmc
inc
push
lods
repz
loop
pop
mov
popa
not
ret
jne
into
test
mov
jmp
int
push
stc
lock
xchg
xor
ret
mov
aaa
arpl
mov
out
pop
add
fimul
and
push
dec
scas
rol
mov
pop
jne
gs
xor
scas
movs
repz
faddp
cld
into
sahf
push
(bad)
leave
jmp
imul
sbb
push
or
dec
dec
mov
mov
cdq
lea
add
pop
daa
or
scas
cmps
lock
sbb
xchg
(bad)
ins
mov
rcl
out
mov
pop
ret
mov
mov
pop
stc
fidivr
imul
sbb
test
cmp
mov
out
std
cmp
cmp
cwde
mov
imul
(bad)
jo
push
jne
aaa
add
add
mov
sub
dec
fs
jecxz
lods
repz
int
sub
fstp
push
int
fsubrp
and
mov
lods
daa
mov
mov
mov
and
fisubr
xor
xchg
(bad)
fisub
mov
mov
mov
push
in
mov
sbb
sbb
lds
enter
fistp
scas
lock
mov
mov
adc
imul
or
push
and
fwait
cld
and
and
and
repz
retf
mov
pop
in
xchg
xor
cmp
in
enter
xchg
inc
pop
call
lods
mov
sub
idiv
clc
pushf
fnstcw
std
mov
pop
out
ss
add
inc
stc
loope
xor
or
inc
sbb
out
dec
retf
retf
aad
push
xor
out
pop
ins
loop
leave
fadd
imul
je
(bad)
cmps
mov
jp
ret
cli
retf
test
or
pop
pusha
int3
pop
mov
sbb
ins
and
hlt
jns
out
in
shr
bound
es
pusha
adc
sahf
leave
or
aad
sar
pop
aas
das
cmps
out
aas
test
scas
push
sub
cmp
sahf
push
jmp
out
in
pop
dec
retf
mov
inc
pop
add
xchg
mov
jg
cmp
xchg
sbb
call
jb
pop
nop
scas
jne
pusha
idiv
xor
dec
push
je
pop
js
dec
call
std
div
xchg
cmp
mov
daa
outs
pushf
mov
and
inc
loopne
xlat
pop
mov
test
dec
cmp
lods
movs
out
aad
outs
pop
leave
int
xchg
inc
xor
mov
cmc
dec
mov
fnstsw
test
jl
pop
xchg
mov
int
popf
mul
cmp
(bad)
repz
movs
xchg
popf
mov
leave
mov
sub
mov
js
je
loop
out
fidiv
mov
jb
call
enter
ins
dec
xlat
adc
jge
add
pop
das
fidiv
ds
movs
xor
lahf
push
dec
repz
addr16
scas
jl
dec
pushf
or
js
adc
dec
mov
adc
pop
bound
jmp
xchg
inc
dec
cmc
cmp
scas
adc
lock
js
scas
add
lea
or
pop
jae
aad
mov
leave
mov
sti
xchg
retf
push
and
aam
cwde
out
inc
std
jb
aad
mov
sub
or
inc
sbb
sub
(bad)
in
in
fstp
imul
xchg
xchg
fstp
cmps
dec
out
ss
adc
shr
rcl
or
xor
enter
push
in
dec
pop
cmp
adc
mov
cli
ja
jns
xor
(bad)
xchg
out
scas
in
jae
pop
jp
xchg
stos
sbb
cmp
add
mov
fstp
inc
outs
jmp
inc
xchg
add
push
jno
sbb
dec
cmp
pushf
(bad)
pop
sbb
jl
mov
out
jmp
mov
jle
xchg
and
mov
call
mov
ja
add
pop
mov
xchg
inc
dec
lods
aas
dec
les
in
mov
push
fistp
into
ret
rcl
mov
mov
xchg
xchg
fcom
les
adc
fwait
pop
and
and
mov
popf
dec
jmp
fs
mov
add
out
jns
iret
cmps
mov
cmp
add
dec
adc
jbe
fst
jmp
outs
add
mov
add
sbb
mov
data16
cmps
and
or
cmps
lods
dec
sbb
test
ins
inc
xor
lods
dec
push
add
dec
loopne
mov
or
inc
or
clc
sub
sub
xchg
mov
addr16
out
jnp
cmp
rol
xchg
cmp
mov
aas
sar
bound
mov
jnp
cmp
jns
mov
push
xchg
push
test
(bad)
into
mov
out
out
adc
jno
mov
cmp
mov
sbb
imul
nop
xchg
mov
(bad)
mov
mov
xor
ins
pop
push
test
sub
mov
dec
push
lahf
xchg
or
hlt
cmp
retf
or
into
jbe
enter
push
mov
leave
dec
pop
push
cmp
inc
jmp
ins
xor
repnz
ins
mov
adc
jge
xchg
clc
rcr
fidiv
dec
adc
mov
lods
cld
and
jmp
sbb
add
daa
test
int3
add
adc
ins
jb
adc
push
arpl
mov
and
and
xchg
pop
(bad)
idiv
data16
cli
cmp
mov
push
imul
mov
aaa
pop
fild
push
mov
inc
add
inc
lods
adc
call
leave
jl
gs
call
mov
loope
sub
mov
ins
stc
out
fld
or
mov
or
popf
mov
dec
pop
add
lods
inc
dec
mov
out
scas
mov
iret
addr16
lahf
call
icebp
daa
ret
jmp
jae
cld
loope
inc
nop
inc
scas
arpl
jne
jp
sub
movs
das
mov
loop
bound
cmp
leave
(bad)
jl
pusha
fsubr
adc
cmps
icebp
jae
aaa
lods
sbb
(bad)
clc
fcomp
retf
and
cwde
jle
xor
je
push
dec
aad
jbe
xor
int3
xchg
loop
in
push
(bad)
stc
outs
pop
inc
jbe
out
inc
cmp
push
push
add
push
fisttp
cmp
mov
mov
data16
(bad)
fidivr
cmps
jbe
and
int
jge
sub
adc
shl
pop
jecxz
in
mov
call
jns
xchg
pop
les
test
mov
mov
and
sbb
jb
adc
aas
movs
ins
and
sub
shl
in
sar
repnz
or
inc
or
jmp
sti
ins
cmps
outs
aaa
mov
mov
xor
mov
fs
mov
xor
and
sub
test
fild
cwde
mov
add
jno
out
loop
int
inc
call
xlat
mov
stos
xor
pop
jmp
adc
sbb
jae
repz
push
out
jae
fisub
gs
aas
mov
xchg
lods
pop
fisubr
ja
jbe
out
dec
add
scas
leave
and
inc
ror
fild
stos
push
inc
popf
mov
pop
push
xor
mov
and
dec
cmp
and
nop
adc
xchg
xchg
mov
adc
jns
cmc
movs
pop
sub
fldcw
mov
jno
push
cmp
jle
sbb
cmp
fidivr
xlat
test
sub
clc
out
inc
sub
cmp
out
lea
aad
mov
test
cld
out
scas
xchg
pop
xchg
push
pushf
test
mov
or
ficom
and
scas
inc
xchg
test
imul
mov
pushf
mov
xchg
jno
ja
push
movs
push
mov
fwait
lods
test
mov
mov
adc
fwait
push
cmp
stos
adc
mov
iret
movs
or
outs
mov
mov
dec
xor
les
adc
jnp
sti
rcl
mov
mov
outs
icebp
or
and
adc
inc
iret
dec
or
xchg
xor
xchg
bound
jne
(bad)
or
xchg
sub
mov
pop
push
std
mov
push
fdiv
daa
and
repz
fsub
je
in
or
xchg
es
pop
addr16
push
or
xchg
movs
xlat
add
cmp
lds
(bad)
into
xor
xor
stc
lds
xor
or
sub
lods
arpl
in
add
lock
sub
cmps
xor
xor
lods
loop
jbe
xor
cwde
movs
xchg
push
scas
clc
add
mov
adc
xchg
push
(bad)
xchg
lea
je
stc
movs
loopne
lock
fs
add
mov
outs
jmp
inc
arpl
clc
loopne
jmp
pop
loop
movs
push
loop
inc
add
mov
retf
jne
jb
mov
pop
dec
sub
inc
aad
int3
xchg
jmp
push
pushf
pop
xchg
test
mov
adc
xor
push
sub
fwait
mov
es
dec
add
into
push
push
mov
push
and
lar
adc
jle
sahf
(bad)
hlt
jle
ret
bound
mov
cdq
mov
or
loope
in
adc
xor
sbb
pushf
iret
fnstcw
dec
pop
sahf
or
push
out
data16
(bad)
mov
pusha
add
cmp
or
ds
fdiv
fstp
(bad)
stos
sub
inc
(bad)
mov
dec
mov
outs
ds
test
adc
cmp
or
inc
div
and
pushf
mov
mov
ror
dec
popa
mov
or
and
pop
scas
add
mov
push
stc
mov
clc
bound
add
xchg
pop
cmp
sub
and
and
loopne
sub
shr
xor
call
and
pop
aad
xor
xchg
adc
and
lods
jns
mov
sub
pop
bound
jno
cmp
dec
mov
clc
shr
sub
mov
and
inc
sub
stc
sbb
xchg
fstp
(bad)
int3
(bad)
ficom
push
jnp
or
int3
les
movs
fdivr
loopne
xchg
popa
inc
data16
call
ret
mov
adc
or
cmc
xchg
sbb
sub
and
mov
xchg
jae
dec
cmp
in
dec
sbb
inc
nop
dec
je
xlat
fs
int
adc
jmp
pop
pop
xchg
xor
in
stc
mov
ja
pop
std
aad
adc
mov
sbb
sub
mov
cmp
xor
lods
adc
inc
mov
adc
inc
dec
pop
mov
adc
mov
pop
add
(bad)
dec
pop
aad
dec
sub
shl
xchg
repnz
call
mov
test
inc
xchg
inc
mov
xchg
cwde
inc
mov
mov
cmp
push
fst
jo
stos
ins
mov
add
jge
ret
fs
xor
(bad)
sub
into
psrad
clc
cmp
jnp
mov
jmp
mov
dec
add
jecxz
in
adc
ret
jecxz
pinsrw
mov
test
push
pop
jne
jae
iret
bound
push
mov
xchg
xor
adc
lods
inc
add
xor
in
dec
stc
inc
scas
jecxz
push
jnp
add
cwde
push
rol
data16
add
jb
cmp
lea
xchg
int3
cmp
out
mov
mov
outs
ret
repz
std
xchg
xchg
sbb
push
sub
int
outs
je
inc
fstp
stos
xor
adc
enter
push
repnz
cmc
sbb
ja
popa
scas
and
clc
js
push
sahf
and
mov
leave
outs
xor
and
dec
push
outs
xor
lods
dec
loope
dec
imul
xchg
call
icebp
pushf
sub
dec
lahf
aad
and
faddp
mov
mov
jg
sub
mov
xchg
push
push
rol
in
aaa
dec
mov
sub
enter
cmp
loop
lock
lock
stos
das
or
dec
xor
jl
ror
lods
ret
jo
mov
dec
or
aaa
jecxz
xor
movs
xchg
test
jp
jbe
addr16
dec
pop
push
mov
adc
das
(bad)
test
add
jbe
sub
and
dec
mov
pop
cld
subps
mov
frstor
std
jmp
adc
nop
js
push
mov
pop
scas
ret
jae
stc
sub
jle
(bad)
adc
sub
push
xchg
mov
xor
jg
pop
dec
cmp
xchg
leave
add
scas
jmp
sub
std
push
lods
outs
lahf
shl
jnp
mov
xchg
inc
and
push
aad
pusha
outs
add
or
sub
xchg
xchg
pusha
xchg
cmps
fwait
mov
(bad)
jmp
mov
fsubr
mov
and
sbb
mov
sub
pop
pop
iret
push
mov
data16
and
call
ficom
xchg
cmp
xor
fimul
(bad)
into
mov
push
add
mov
adc
int
sub
repnz
mov
jecxz
cmps
add
mov
cli
xchg
sbb
clc
movntq
imul
mov
es
jbe
xchg
movs
jb
mov
mov
xlat
ss
jg
lea
retf
jno
pop
adc
das
mov
cs
or
ror
adc
or
test
cmp
mov
mov
movs
mov
sub
jg
fidiv
movs
push
xor
daa
cmp
jbe
mov
in
das
add
cmp
pop
jmp
mov
mov
in
mov
(bad)
test
call
xchg
ficom
jecxz
retf
test
stos
mov
pushf
stos
add
(bad)
xor
pusha
xor
pop
retf
xchg
mov
push
das
or
(bad)
test
scas
inc
test
xor
mov
jecxz
(bad)
and
out
push
inc
lods
das
sbb
imul
out
out
sub
out
jno
arpl
fwait
pop
sbb
cmc
movs
push
xchg
setb
movs
xor
pop
shl
fild
or
jb
mov
xor
xor
cmp
and
push
mov
dec
push
neg
popa
cmp
add
popf
stos
xchg
cmp
inc
cmp
jge
cmp
ja
int
inc
sub
fsub
mov
pop
aaa
ins
(bad)
jae
push
push
cmp
xor
mov
jmp
mov
repz
hlt
jmp
imul
(bad)
dec
mov
es
and
(bad)
cld
jl
es
movs
outs
jge
popa
mov
sub
sub
in
cmps
mov
push
ret
aas
pop
sub
cmp
sti
and
inc
lea
cmp
or
lods
push
in
ret
jg
add
out
fistp
addr16
outs
sub
ror
cli
cmc
mov
and
(bad)
mov
add
movs
xchg
cs
push
push
in
pop
pop
inc
loop
mov
cmp
std
repnz
xchg
arpl
int
sbb
pop
mov
iret
xchg
cli
inc
bound
repz
sub
fst
or
mov
cmp
ret
xor
fwait
pop
jl
popf
jo
ret
out
shl
int3
jecxz
mov
shl
jb
push
mov
idiv
jmp
mov
mov
fdiv
aaa
inc
mov
in
sub
jne
push
and
inc
jge
dec
(bad)
cld
cmp
sbb
ror
push
cmps
ja
scas
das
dec
sbb
adc
jnp
push
or
sbb
sbb
aas
ret
jno
mov
jb
bound
mov
jbe
jp
mov
(bad)
mov
mov
test
scas
push
cmp
sahf
mov
lods
and
inc
sub
icebp
mov
retf
xchg
cmp
rcr
dec
push
arpl
pop
adc
cli
pop
ret
push
adc
dec
icebp
punpckhdq
(bad)
add
jecxz
out
sti
jp
cmp
push
xchg
call
or
sub
mov
adc
sub
gs
add
mov
popa
mov
cmp
mov
pop
in
arpl
dec
lahf
loope
pop
in
dec
les
push
mov
out
and
iret
push
xchg
xchg
inc
sbb
lds
sbb
stos
movhlps
dec
dec
mov
fdivr
xlat
jecxz
hlt
addr16
and
jne
xor
mov
adc
jp
mov
xchg
mov
mov
sbb
leave
jne
sbb
ror
mov
inc
shr
fdiv
and
push
test
cdq
xchg
loop
jl
mov
ja
jnp
adc
sub
callw
add
or
scas
xchg
loope
sbb
mov
add
cmps
cmp
cmp
jecxz
pop
js
cmps
sbb
dec
mov
addr16
xchg
mov
fistp
push
push
pop
pop
ins
sub
xchg
ds
inc
(bad)
cmp
sub
(bad)
sub
(bad)
lea
pop
or
add
jbe
or
cmc
push
jle
or
outs
add
pushf
mov
pop
dec
fstp
aas
stos
ds
jno
sbb
jp
and
pop
daa
ins
dec
mov
mov
push
xor
inc
or
(bad)
fwait
ja
xchg
inc
and
es
mov
add
ins
jecxz
(bad)
inc
popf
test
adc
adc
fld
in
sbb
pop
xchg
mov
or
xor
dec
jmp
mov
mov
fst
das
sar
mov
in
mov
cmc
aam
dec
gs
(bad)
sbb
pop
mov
shl
dec
(bad)
xchg
retf
leave
nop
cmp
adc
mov
fbstp
jne
test
sub
add
and
cli
loope
(bad)
pop
cmp
imul
pop
sub
dec
cmp
xlat
enter
ins
out
rcl
retf
xchg
mov
xlat
leave
push
inc
frstor
mov
jb
fsub
es
stos
and
out
xchg
das
jo
xor
pushf
cmp
cmp
push
mov
rcl
push
cmp
mov
cmp
push
pop
ins
test
sbb
aam
out
push
ja
cwde
or
hlt
fwait
out
jne
dec
push
subps
and
sbb
fwait
and
mov
mov
xchg
loop
(bad)
jmp
fcomp
dec
xchg
mov
sub
cs
in
mov
aas
pop
(bad)
shl
icebp
push
daa
sbb
pop
daa
sub
push
icebp
add
or
test
mov
retf
stos
jae
outs
aam
(bad)
fmul
push
cli
push
fwait
loope
test
(bad)
jnp
jno
bound
shl
cmps
jmp
sti
test
dec
stos
xchg
mov
pusha
sbb
aaa
pop
sub
jbe
mov
dec
adc
retf
jp
and
push
cld
dec
jne
icebp
sub
dec
dec
sub
sub
in
out
aad
sahf
dec
loope
cmp
mov
sub
dec
test
add
ds
cmc
imul
or
fnstenv
jb
(bad)
leave
push
xor
cmp
lods
daa
xlat
leave
repz
lock
daa
push
mul
pop
ins
(bad)
stos
pop
lock
int
popf
xchg
arpl
mov
stc
loope
jbe
std
or
outs
aam
stos
mov
cmc
mov
dec
inc
stos
imul
pop
and
into
into
lods
cdq
inc
and
xchg
jne
xchg
add
lea
mov
fsub
mov
xor
pop
add
dec
or
jl
and
retf
sbb
in
jnp
int
aas
lds
push
jo
pop
out
out
fwait
aaa
stc
ins
rcr
outs
cmc
(bad)
mov
data16
pushf
sar
dec
mov
xchg
jecxz
push
xor
icebp
xor
test
call
jbe
(bad)
cs
imul
outs
loope
jecxz
sub
add
pop
mov
jns
ss
sub
push
idiv
jns
lds
cwde
cli
mov
je
xor
push
cld
jl
stc
fistp
push
mov
dec
retf
lahf
cmp
add
pop
jae
and
lods
push
cmp
test
pop
add
add
jg
movs
out
loopne
add
addr16
sub
jl
sub
cmp
pushf
xor
xchg
dec
out
scas
popa
xchg
or
rol
sub
mov
or
fs
ds
sbb
dec
push
test
add
pop
xchg
shr
adc
or
push
andnps
jl
addr16
mov
in
cdq
mov
xchg
add
inc
and
or
loope
arpl
sub
bound
mov
or
mov
fcmovnbe
lahf
cli
sub
fwait
std
(bad)
jne
dec
movs
or
add
out
ret
outs
fiadd
xchg
aaa
scas
xchg
jns
jmp
sbb
gs
jo
push
stos
loopne
dec
int3
pushf
fcom
dec
push
mov
shl
hlt
mov
nop
arpl
push
push
loopne
(bad)
les
sub
mov
push
or
pop
xlat
ds
out
es
inc
push
loop
pop
xchg
mov
adc
mov
out
mov
mov
jae
inc
test
sub
or
ja
fcomp
push
test
scas
push
cdq
int3
fs
xor
adc
cmp
rcr
pop
stc
icebp
test
ins
pushf
sbb
shl
(bad)
xor
rol
xor
mov
pop
dec
add
fld
mov
xor
test
pop
test
xchg
pop
out
mov
arpl
mov
pop
mov
add
xchg
and
cmc
jle
or
jl
lea
mov
popf
cmp
push
pop
xchg
or
add
push
pop
dec
fsub
or
mov
mov
test
xchg
pop
push
out
outs
inc
push
fnstcw
dec
xor
cld
cmps
push
sub
es
pop
pop
jnp
fsub
add
inc
jmp
inc
or
push
add
popa
cmp
xchg
fsub
js
lock
mov
popfw
ins
neg
rcr
pop
adc
repnz
mov
hlt
bound
mov
cmp
call
pop
xchg
pushf
mov
fistp
cmp
push
mov
fild
inc
mov
das
add
inc
or
jge
(bad)
xchg
push
fs
inc
(bad)
(bad)
stos
daa
mov
sti
push
inc
test
popf
pushf
mov
rcr
jne
inc
push
enter
or
addr16
cmp
sbb
repnz
out
movhlps
(bad)
cmc
aam
push
sahf
adc
daa
mov
mov
xchg
pop
jb
and
jle
dec
or
adc
add
outs
bound
pop
xor
cmc
fwait
ret
xchg
hlt
fs
test
je
or
inc
neg
inc
mov
enter
jne
int3
xchg
jg
xchg
out
lods
jno
test
stc
enter
push
inc
fstp
in
retf
std
inc
cmp
jge
mov
cwde
stc
and
scas
les
(bad)
push
iret
iret
loop
add
pusha
add
sbb
xor
aam
popf
lods
jne
shr
sbb
push
(bad)
mov
and
arpl
loope
sbb
xor
mov
movsx
xor
cmp
imul
fiadd
hlt
cdq
aas
call
popf
mov
(bad)
push
(bad)
and
mov
lea
push
pop
jg
dec
jge
adc
mov
mov
add
pop
push
pop
std
fs
xchg
push
cmp
cdq
jno
nop
pop
inc
mov
pop
push
mov
or
add
xor
inc
inc
repz
loop
add
in
cmp
pop
xor
rcl
lahf
xchg
jl
lock
push
loop
dec
repnz
jle
lock
jecxz
push
imul
add
push
movs
test
(bad)
popf
bound
scas
(bad)
mov
cmps
jge
pop
les
xor
test
jmp
(bad)
ret
pop
xchg
out
ds
mov
mov
sbb
sub
pushf
mov
jge
stos
popf
sub
xchg
jns
mov
out
add
les
xchg
pusha
mov
aam
fld
sub
cmp
out
sahf
test
(bad)
or
dec
imul
daa
out
xchg
jno
(bad)
and
or
mov
xchg
jns
sbb
inc
aad
and
test
(bad)
lods
aad
mov
cmp
sbb
or
or
in
push
sub
mov
icebp
pop
sti
adc
fwait
arpl
push
shl
mov
mov
pop
inc
sub
gs
imul
dec
shl
std
movs
push
add
in
call
xor
iret
les
out
aad
fidivr
fdiv
jmp
sbb
clc
xor
(bad)
push
pop
xchg
cmp
dec
hlt
xchg
scas
(bad)
movs
ins
ret
sbb
pop
daa
repnz
push
dec
es
jl
mov
nop
aam
shl
cmp
fmul
cmp
inc
add
pop
lods
repnz
movs
jbe
pop
movs
fldcw
or
push
dec
add
int3
cmovbe
out
test
mov
dec
adc
addr16
fstp
aad
mov
mov
inc
sbb
mov
cmp
cmp
dec
pop
std
sub
(bad)
jg
xchg
(bad)
jmp
mov
inc
sbb
sahf
push
xchg
mov
xchg
jle
mov
sbb
loop
push
aad
out
(bad)
inc
and
ins
push
lock
jmp
sahf
push
jl
push
dec
enter
loopne
mov
loope
push
es
jp
add
lods
aad
sub
pop
lahf
pop
mov
cdq
adc
call
aas
inc
add
push
or
shl
pop
repz
es
mov
xchg
ja
dec
push
and
xchg
daa
cs
out
xor
jl
push
sub
dec
cli
nop
dec
clc
jne
clc
dec
cmp
push
dec
fiadd
das
dec
daa
mov
jg
mov
jae
push
add
ret
xchg
(bad)
inc
and
test
inc
into
xchg
test
dec
ins
fstp
dec
and
mov
push
dec
(bad)
cmp
xchg
xor
das
pop
aas
xor
mov
jne
pop
rol
fadd
stc
clc
xor
mov
call
pop
mov
mov
jo
inc
xor
loop
jo
int
xchg
sub
push
or
adc
jmp
jb
sub
dec
sub
or
and
inc
adc
(bad)
fs
out
outs
mov
mov
shl
fabs
dec
loop
icebp
sbb
mov
pop
push
lods
sbb
pop
inc
adc
cmp
div
adc
cwde
cmp
mov
and
mov
sar
sub
jge
cld
popa
stos
pop
push
jbe
pop
(bad)
push
inc
mov
pop
dec
ret
iret
into
(bad)
jp
cmp
rcr
stos
ret
call
and
mov
mov
ficomp
fisubr
iret
icebp
cmp
dec
xchg
fadd
add
xchg
(bad)
cmp
cld
and
jl
fimul
jbe
out
push
push
pop
cvtps2pd
push
mov
hlt
adc
add
daa
or
xchg
push
jnp
arpl
in
rcr
inc
xor
in
dec
clc
mov
jge
jae
pop
dec
dec
daa
dec
sbb
loop
dec
out
(bad)
into
mov
add
retf
into
idiv
stos
cmps
or
out
mov
pop
out
lds
vandnps
cmp
xlat
in
shl
cwde
add
jge
sub
pusha
cmc
mov
mov
dec
fdiv
dec
pop
pop
mov
enter
sar
mov
push
sti
xchg
mov
pop
pop
dec
inc
int3
fsub
cmc
sub
in
mov
sahf
in
mov
mov
ja
xchg
mov
jne
pusha
or
pop
arpl
mov
hlt
add
(bad)
in
jne
aad
and
xor
xchg
push
or
inc
imul
xor
mov
das
inc
lds
lea
cmc
aas
jg
jge
or
sbb
mov
cmps
fild
lock
(bad)
je
nop
shl
push
(bad)
pop
mov
inc
mov
loop
sub
mov
stos
mov
lods
repz
mov
xlat
pop
xor
ins
loope
fist
inc
or
bndstx
jbe
push
or
inc
out
retf
sub
cmps
or
sbb
mov
sbb
xchg
pushf
movs
test
aam
dec
xlat
lods
cmps
cld
jnp
rcl
ins
iret
sbb
pop
mov
mov
fdivr
cwde
je
ds
aaa
fist
sbb
push
mov
cmp
sub
outs
pop
jp
clc
xchg
mov
lods
xchg
retf
lahf
and
icebp
dec
inc
inc
push
cwde
cmp
and
sub
repnz
(bad)
mov
jecxz
xchg
dec
inc
hlt
mov
xor
cmc
push
or
jb
clc
push
bound
scas
push
cmps
dec
sbb
das
inc
stc
jae
fild
jmp
sar
inc
popf
jb
and
stos
clc
aaa
mov
inc
xor
mov
mov
fisubr
jae
dec
add
or
jno
test
repnz
push
cmp
pop
pop
outs
lods
sbb
fs
je
scas
rol
add
cld
and
jp
sub
xchg
xor
inc
xchg
jns
fisubr
daa
fwait
cmp
xor
jle
data16
push
(bad)
lea
inc
inc
retf
dec
loope
jmp
add
mov
rcr
or
pop
dec
dec
les
push
(bad)
jbe
mov
cld
jge
pop
or
imul
int3
sbb
push
sub
dec
lahf
jo
push
loope
sbb
sti
dec
xchg
hlt
loope
es
stc
test
pop
mov
xchg
inc
push
push
mov
mov
push
sti
test
retf
in
or
add
fisubr
les
shl
ins
pop
inc
sub
mov
jae
cmp
loope
mov
xchg
(bad)
sub
je
neg
xchg
and
fyl2xp1
cmp
dec
call
xchg
fmul
in
dec
mov
clc
nop
pop
lods
ja
inc
xchg
cmp
lock
imul
mov
dec
and
xchg
call
sub
ins
hlt
das
lahf
aad
pop
imul
ret
stos
add
push
pop
lods
and
mov
xor
xchg
add
add
or
pop
(bad)
movs
cmp
les
fwait
sub
jmp
mov
sahf
dec
mov
shl
fisubr
add
sbb
ins
cli
mov
sub
enter
adc
mov
cmc
or
dec
out
aas
jl
fwait
inc
imul
(bad)
ret
inc
mov
cmp
or
iret
dec
and
scas
mov
xlat
adc
fistp
lea
fadd
pop
idiv
add
setp
xchg
jbe
cld
xor
call
push
push
in
sub
xchg
fst
pop
mov
and
jbe
int
dec
ins
sub
shl
xor
es
sub
pop
dec
and
mov
cld
jnp
mov
jmp
cld
fisub
xor
add
mov
pop
add
dec
rol
sbb
xor
dec
aad
bound
out
test
jecxz
loop
clc
in
push
and
add
push
or
fucom
test
fsubr
stc
jmp
push
push
inc
fst
push
cmps
out
pop
jmp
mov
std
jecxz
hlt
pop
or
push
stos
xchg
inc
xchg
test
mov
scas
faddp
cmp
fisubr
push
imul
into
in
add
loop
cmp
pop
xor
or
add
and
cli
inc
aas
call
inc
adc
push
jo
push
imul
(bad)
in
fwait
repnz
dec
imul
fdivr
mov
or
push
dec
sbb
jo
fisubr
push
add
xor
push
xchg
push
jns
les
nop
mov
mov
nop
aad
data16
cmps
stos
push
push
rcl
push
loop
clc
xchg
jmp
loopne
movs
xchg
outs
sub
push
pop
mov
mov
es
xchg
dec
adc
mov
mov
or
cli
xor
inc
push
addr16
cmc
dec
push
fwait
xor
je
sub
outs
cmps
out
jmp
inc
xor
ins
les
pop
popa
rcr
rcr
shl
add
(bad)
out
jecxz
loop
idiv
xchg
dec
(bad)
xchg
(bad)
rcr
daa
arpl
lock
add
out
addr16
mov
sbb
push
push
out
push
ds
aas
std
push
xchg
dec
push
rol
xor
sub
xchg
sbb
fs
jo
int3
cmp
aad
add
test
mov
jns
mov
xchg
xlat
int3
(bad)
call
add
jmp
sub
jmp
cmp
xchg
lds
mov
xchg
inc
fnstcw
scas
sar
jl
sub
cmps
lock
cmp
adc
into
xor
rcl
iret
cdq
xchg
js
stos
xor
repnz
loop
cs
test
leave
sahf
pushf
out
or
icebp
ins
repz
jp
jecxz
fadd
push
(bad)
xchg
add
outs
adc
pop
mov
add
adc
dec
pop
or
push
out
out
mov
daa
cmp
test
movs
push
shr
jmp
inc
push
xor
mov
sub
jbe
(bad)
and
push
push
ss
mov
ds
or
enter
add
fwait
dec
fscale
sbb
ror
repz
mov
and
xor
stos
jp
fild
inc
xchg
fucomi
jb
shl
xor
nop
mov
ret
popa
dec
mov
mov
mov
sub
icebp
mov
add
adc
loopne
jne
mov
jb
add
push
xor
xchg
outs
in
xchg
dec
cmp
mov
cmp
in
rcr
cwde
push
lds
aad
and
out
xor
clc
and
add
in
add
sub
push
ins
or
in
shl
sbb
mov
data16
add
xor
test
push
into
retf
and
mov
xchg
std
mov
shr
xor
cs
adc
(bad)
cs
ja
repz
mov
sub
jnp
clc
inc
in
(bad)
stos
dec
and
push
retf
mov
sub
push
in
jne
in
or
iret
xchg
pop
stc
(bad)
pop
mov
mov
sub
jge
jne
adc
adc
in
outs
mov
mov
loop
icebp
cld
pop
dec
jmp
and
mov
pop
mov
(bad)
int3
repz
stos
imul
mov
add
iret
bound
call
inc
stos
jo
outs
push
mov
in
in
jmp
mov
xlat
enter
xchg
xchg
in
gs
and
(bad)
xchg
fwait
add
push
out
call
mov
sbb
popa
fstp
sub
cmp
mov
(bad)
jmp
pop
or
jne
pop
in
je
xlat
lods
fbld
ret
ins
out
inc
push
int
mov
add
ret
jmp
cdq
xchg
adc
loope
sbb
fld
(bad)
mov
fsub
jmp
xor
mov
das
add
push
dec
fcom
mov
xchg
es
cmps
(bad)
call
shr
jno
or
sti
push
xchg
shl
shr
push
(bad)
call
into
xchg
push
cmc
cmp
gs
inc
movs
pusha
test
dec
repnz
call
push
fidivr
mov
iret
int
jle
mov
ss
xchg
ss
adc
jne
sar
mov
xchg
dec
xchg
mov
popf
bound
xor
out
ret
test
daa
shl
(bad)
mov
mov
and
xor
xchg
or
add
fist
and
leave
push
inc
mov
push
add
fiadd
xchg
add
leave
xchg
adc
cmp
(bad)
ds
shr
mov
imul
xchg
fdivr
aaa
mov
jl
sub
aad
mov
mov
sub
loop
addr16
push
in
xchg
add
sti
cmp
push
fcmovnb
sub
mov
rcr
mov
add
add
shr
mov
(bad)
popa
stc
adc
adc
pop
push
jbe
cmp
jle
sbb
pop
int3
inc
mov
or
outs
add
cmp
sub
sub
xchg
cmp
jb
push
out
mov
dec
add
mov
mov
imul
xlat
ds
loopne
pop
sahf
sar
movs
hlt
mov
dec
pop
fcos
icebp
xlat
dec
xlat
add
fwait
imul
(bad)
data16
int
mov
inc
jnp
cmp
xor
in
push
jae
scas
dec
test
or
mov
sahf
pop
adc
scas
lea
les
sub
mov
jo
fcom
scas
cli
and
daa
std
jp
stc
or
and
mov
(bad)
adc
in
in
sahf
ror
aas
(bad)
fwait
pop
repnz
(bad)
and
xor
mov
ja
cli
jmp
sbb
test
(bad)
out
jne
lea
(bad)
cld
arpl
xchg
inc
mov
fstp
pop
mov
xchg
mov
retf
out
and
mov
test
in
jecxz
cld
movs
call
aad
movs
mov
sub
inc
dec
loope
add
outs
idiv
pop
push
cs
popf
inc
sbb
sub
adc
cmps
sub
dec
ins
add
push
mov
and
lds
fs
(bad)
(bad)
les
ss
clc
in
jecxz
lock
xchg
add
retf
add
mov
mov
test
pop
movs
pop
sub
imul
sbb
mov
clc
mov
adc
(bad)
call
pushf
mov
fucomip
xchg
mov
stos
cmp
jns
push
shr
rcl
in
test
cmp
(bad)
sbb
cmp
mov
ds
lea
push
adc
out
xor
and
dec
or
sbb
jnp
outs
add
bound
cmps
leave
lock
push
out
adc
mov
imul
imul
mov
mov
jmp
ins
push
stos
repnz
lea
or
sbb
fxam
call
adc
rcr
jmp
cmp
fmul
int3
add
cmc
and
dec
popa
mov
dec
jle
gs
out
push
xor
mov
or
inc
jmp
xchg
out
retf
cmps
idiv
xor
push
jecxz
jge
xchg
add
push
adc
ret
pop
inc
loopne
mov
shl
cmp
pop
add
jae
fs
mov
mov
push
fs
adc
in
aas
enter
jp
out
in
pop
sbb
xchg
rcl
sub
out
push
frstor
adc
fsin
mov
cmp
fnsetpm(287
scas
sub
xor
and
stc
imul
jmp
test
jg
(bad)
push
cwde
dec
hlt
aas
jecxz
and
(bad)
bnd
jb
mov
sub
outs
ds
movs
daa
shl
mov
xor
or
or
ss
in
and
out
je
xlat
pop
mov
nop
fcomp
fidivr
jmp
outs
jbe
pop
sub
std
xchg
jmp
fdiv
call
dec
jns
lahf
nop
dec
dec
adc
mov
or
inc
jecxz
inc
rcl
popf
sub
mov
inc
jne
pop
(bad)
inc
stos
in
push
repnz
xor
mov
adc
jmp
and
loope
jnp
jno
xchg
sti
pop
retf
into
push
mov
inc
sub
shr
dec
imul
ficom
jmp
pusha
or
sbb
dec
clc
push
lods
jecxz
aam
dec
popa
inc
sahf
shl
mov
xchg
jp
inc
test
sbb
es
nop
nop
push
loopne
call
jae
repnz
mul
and
mov
call
adc
test
ret
std
cmp
js
movs
xchg
lahf
bound
push
int
dec
sub
and
xor
or
les
es
xor
addr16
fnstsw
mov
sbb
pop
xor
outs
pop
or
cmp
sbb
les
and
adc
scas
(bad)
mov
or
into
add
adc
addr16
sbb
sar
mov
and
mov
pop
aaa
mov
leave
aam
bound
sub
or
mov
enter
mov
mov
mov
jecxz
sbb
and
daa
sti
mov
cwde
or
dec
sbb
cmps
jno
loopne
lods
mov
push
adc
shr
cmps
int
xor
fistp
sbb
stc
mov
mov
icebp
adc
into
mov
mov
pop
mov
retf
push
cmp
es
bound
out
and
mov
cmp
mov
repz
push
mov
mov
add
cwde
xor
adc
daa
and
cmp
push
or
std
mov
jne
fild
leave
lods
rol
ss
mov
jmp
mov
or
push
popf
sbb
sahf
xor
loop
mov
fiadd
ins
add
(bad)
jg
inc
inc
stos
aas
xchg
lds
leave
outs
fnsave
adc
(bad)
sub
out
dec
xchg
pusha
int3
fcom
hlt
movhps
or
and
aas
xor
(bad)
repz
test
add
scas
(bad)
push
ins
sub
jno
sbb
push
or
cmp
sbb
xor
(bad)
iret
cdq
sub
cmp
(bad)
fcmove
lahf
sub
popa
dec
fadd
push
xor
xor
jnp
(bad)
(bad)
shl
jbe
daa
mov
jne
daa
push
and
cmc
and
iret
pop
cld
cmps
fld
inc
cmps
jmp
xor
not
ja
pop
sub
fnsave
sar
xchg
cwde
push
mov
cli
xor
mov
xchg
ret
dec
and
(bad)
imul
shl
dec
movs
repz
mov
outs
dec
push
cli
out
pop
ror
scas
fwait
test
out
adc
xchg
sub
ror
test
repnz
fwait
(bad)
xor
pop
adc
mov
mov
pop
out
push
enter
cmp
mov
lahf
test
daa
popa
pusha
pop
cdq
sub
pop
xchg
jno
jae
mov
xchg
test
xchg
mov
push
push
jae
rcr
jg
pop
sbb
xor
test
sbb
shl
mov
loop
xchg
inc
xchg
out
sub
out
test
mov
adc
push
dec
mov
pop
addr16
mov
repnz
jg
es
femms
adc
sub
inc
push
adc
xor
or
cdq
jmp
mov
scas
cs
inc
jmp
lods
popf
pminsw
(bad)
sti
and
inc
pop
and
lahf
inc
push
rol
jge
mov
cmp
mov
stos
(bad)
into
or
mov
imul
inc
mov
xor
add
test
add
mov
rol
xor
sub
mov
int
je
xchg
sti
mov
jmp
comiss
test
mov
mov
inc
aam
jl
pop
daa
xchg
pop
jl
sub
xchg
pop
cmps
sti
push
pop
stc
sub
mov
sbb
ja
jl
inc
(bad)
imul
xor
outs
or
repz
ja
or
sahf
pop
xchg
mov
and
and
sub
cdq
push
pop
pop
enter
(bad)
icebp
repnz
adc
sub
pop
inc
rol
ins
xchg
sub
xor
xor
test
out
push
mov
shr
sbb
ds
jp
cmp
dec
pop
jg
test
scas
adc
push
mov
cmc
loop
jge
movs
jns
xchg
adc
or
mov
data16
add
call
pop
leave
inc
sub
mov
jbe
cmp
pop
sub
leave
or
pop
xor
or
loope
adc
push
imul
mov
cld
sar
push
test
xor
aad
(bad)
mov
push
and
jle
pop
sbb
push
jns
(bad)
outs
test
xor
dec
test
cmp
pop
push
adc
ins
movs
in
sub
xor
push
movs
inc
mov
mov
iret
mov
mov
(bad)
sub
pop
mov
add
bound
mov
iret
or
clc
cmps
cmp
in
shl
movs
pop
scas
mov
ja
fldcw
movs
clc
mov
jecxz
push
cld
arpl
(bad)
cmp
push
test
fisubr
pop
pop
mov
scas
mov
jmp
out
sbb
dec
xchg
cmp
stc
stos
aas
sahf
popa
fs
jbe
in
mov
call
jns
aaa
and
inc
pop
fwait
pop
enter
je
out
daa
adc
sahf
dec
fwait
adc
aad
sub
and
shl
pop
addr16
fsubr
movs
cdq
xchg
xor
imul
sbb
stos
and
std
fistp
mov
adc
mov
repnz
dec
mov
out
ret
xchg
(bad)
mov
and
(bad)
sbb
push
pusha
or
mov
cli
pop
outs
cmp
dec
and
mov
xor
or
fs
(bad)
cmp
pop
mov
popf
mov
pop
je
jmp
in
jmp
popf
pop
jae
mov
xchg
mov
std
retf
mov
adc
gs
sbb
push
fstp
mov
retf
sbb
mov
call
cmp
jmp
xchg
jns
cmc
fldcw
mov
cmp
jmp
and
pop
jnp
and
pop
cmp
push
push
inc
scas
sub
call
movs
jge
xor
mov
in
cmp
and
sub
popa
jge
cmp
test
pop
repz
pop
popf
cwde
(bad)
and
aad
aam
movs
cmc
mov
inc
stos
inc
stos
mov
leave
or
ret
adc
push
push
cmp
repz
push
lock
mov
mov
mov
sti
inc
push
ins
dec
pop
or
adc
cmps
cld
fadd
cmp
cwde
aas
dec
(bad)
mov
rol
mov
fdiv
xor
xchg
mov
xor
cmps
ins
xor
sub
test
mov
jle
push
push
dec
ret
adc
ret
adc
stc
in
test
out
sbb
xor
sbb
mov
jbe
or
push
adc
imul
add
cmp
push
fcmovne
jmp
pop
mov
enter
or
cwde
mov
mov
dec
push
pop
add
in
xchg
and
pop
xor
jae
inc
ins
cmp
xor
jecxz
cmp
mov
push
aam
or
xchg
sub
push
sbb
mov
ret
test
pushf
lock
mov
inc
jmp
pop
inc
pop
dec
mov
xor
nop
out
sbb
js
ins
pop
or
push
xchg
ins
fcom
paddusw
jge
sub
(bad)
icebp
lock
jecxz
pop
mov
fidiv
xor
pop
bound
pop
mov
jo
inc
and
fdiv
push
pusha
or
sbb
ins
les
mov
inc
daa
or
dec
xchg
(bad)
mov
and
stc
or
popa
les
and
ds
jne
loopne
xchg
mov
cmps
adc
jbe
ja
and
mov
sbb
sub
daa
adc
into
jmp
dec
pop
nop
in
push
push
mov
rol
push
pop
xchg
or
loop
cmps
(bad)
push
call
jb
mov
inc
sbb
mov
and
xchg
cmp
jg
loopne
inc
lods
aaa
(bad)
ret
xchg
push
cli
data16
into
lods
loop
sub
or
cmp
fist
pop
aas
je
mov
inc
je
cdq
scas
imul
fldenv
inc
ficom
mov
pushf
in
jmp
ds
daa
xchg
cdq
push
cmp
in
push
mov
icebp
and
dec
fiadd
xchg
jo
push
sbb
push
xchg
leave
push
push
sbb
mov
push
push
clc
sub
sub
mov
xor
dec
lods
lods
cwde
aaa
mov
mov
js
mov
jmp
xor
and
mov
sbb
push
push
inc
outs
in
cmp
xchg
cld
pop
mov
ja
bound
mov
outs
fcomp
lods
xor
lods
cmp
push
add
bsf
jp
push
out
out
sub
push
jp
mov
sbb
daa
stos
xchg
sub
je
or
add
pop
push
mov
push
int3
mov
or
mov
adc
and
sti
ja
outs
cmps
xlat
es
xor
pushf
ss
sbb
jmp
adc
xchg
jne
inc
pop
xlat
cmp
xlat
jmp
mov
cmp
jno
inc
call
add
mov
repnz
push
ret
and
push
loop
mov
rcl
cmp
push
lods
lods
aad
js
fimul
add
xchg
in
fistp
xor
push
in
push
sahf
xor
add
dec
fsubrp
daa
out
call
and
jmp
inc
mov
(bad)
sbb
mov
sbb
mov
jae
scas
iret
ins
test
or
mov
cmps
imul
jecxz
sbb
cmp
jg
xchg
adc
rcl
scas
add
pop
mov
aas
neg
push
dec
jmp
ror
xor
(bad)
fwait
xchg
mov
and
xchg
sbb
sub
std
sub
xchg
xor
push
mov
(bad)
mov
scas
mov
pop
dec
pusha
jmp
repnz
mov
stos
pop
mov
mov
popa
jg
imul
repz
mov
inc
call
dec
int
and
inc
adc
sbb
adc
pop
ret
mov
dec
add
push
cmps
or
dec
loop
sub
(bad)
cwde
repnz
out
mov
loop
pop
sahf
iret
dec
push
dec
in
in
int
and
pop
add
adc
and
outs
pushf
jbe
mov
mov
fldcw
into
lahf
push
add
cli
in
push
xor
in
(bad)
psrld
pop
xor
ficomp
jne
lods
jns
add
cmp
jo
add
es
mov
retf
adc
pop
cmp
imul
xchg
pusha
cdq
ss
xor
stos
nop
aaa
pop
push
daa
sub
repnz
jmp
das
mov
adc
pop
aam
inc
add
mov
pop
jecxz
into
mov
arpl
pop
adc
cmp
arpl
xchg
push
push
cwde
jmp
shl
push
daa
jmp
xor
js
push
add
stc
or
je
mov
inc
fist
fadd
and
push
bound
push
or
mov
in
outs
inc
mov
(bad)
sbb
xor
scas
pop
in
jae
jmp
sbb
in
pusha
scas
(bad)
fcomip
jecxz
fwait
and
inc
xchg
add
arpl
inc
sub
rol
mov
pop
xor
dec
sbb
inc
inc
push
aad
stos
pusha
push
dec
cmp
aas
mov
outs
mov
fstp
add
adc
push
add
mov
and
cdq
fmul
pop
fsin
scas
push
xchg
lods
loope
mov
xchg
jp
std
in
cld
mov
dec
lea
aad
jl
xchg
mov
pop
stos
(bad)
lock
inc
cwde
dec
call
pop
dec
add
cld
lock
dec
pop
cmp
call
cmps
test
aad
inc
add
sbb
xchg
dec
xchg
outs
xor
cli
inc
fadd
aam
jae
mov
jo
scas
retf
pop
sub
js
push
icebp
pop
push
pop
leave
cmp
push
xchg
cmps
std
jecxz
lds
pusha
mov
rcl
outs
mov
call
and
dec
call
jge
push
mov
in
into
mov
lahf
stos
xchg
mov
enter
fstp
ins
cld
stos
cwde
jle
push
mov
gs
jecxz
lock
mov
mov
scas
dec
cwde
jecxz
fidivr
sar
sbb
call
pop
mov
mov
push
push
dec
mov
ret
fucomi
and
pop
or
or
pop
dec
stos
or
jge
pusha
adc
(bad)
pusha
sub
pop
mov
mov
mov
jnp
xlat
repnz
cmc
pushf
ror
or
call
jecxz
out
pop
std
adc
jl
bound
ds
inc
xor
es
cmps
repnz
dec
dec
add
cld
mov
mov
fdiv
out
and
je
inc
popa
and
ret
popa
retf
and
mov
lods
or
sbb
daa
add
repz
adc
dec
jno
pop
or
(bad)
cld
in
and
mov
dec
rcr
cmps
add
out
pop
and
test
mov
js
fiadd
in
inc
mov
inc
sbb
test
xchg
jl
and
pushw
sub
sti
(bad)
movs
call
int3
dec
iret
imul
repz
sahf
and
mov
ss
adc
shr
pop
das
jle
out
mov
jle
je
mov
inc
push
test
popf
cmp
setnp
fmulp
jns
cli
jle
int3
mov
rol
inc
mov
jl
les
jb
aam
xchg
jb
jp
push
and
mov
fcomp
imul
xor
pop
mov
fld
cmps
mov
fdivr
jg
cs
ins
mov
outs
lds
fs
div
xchg
xchg
jge
pop
mov
aam
push
pop
iret
or
cmp
sbb
leave
inc
pop
retf
sahf
mul
mov
mov
or
jnp
jo
movs
repnz
jae
or
dec
push
mov
inc
xchg
push
mov
sub
mov
fild
in
adc
and
jp
mov
push
scas
adc
inc
pop
xchg
jp
mov
mov
daa
pop
ins
jb
pop
out
and
cmp
shl
inc
sub
mov
push
daa
and
fdiv
or
cmp
stos
imul
aas
xchg
xchg
aas
inc
cli
cmp
fdiv
ret
sti
xor
mov
repnz
xchg
pop
movs
iret
test
mov
dec
jg
mov
clc
or
push
mov
fs
out
int
push
(bad)
ss
inc
int
ja
mov
dec
push
call
or
push
je
mov
jmp
xor
ret
test
scas
ja
add
leave
adc
xor
js
and
std
sbb
rol
dec
adc
shl
mov
outs
aas
not
popf
jmp
mov
push
push
rcr
cmp
sbb
mov
pushf
in
pop
jmp
repnz
push
xchg
daa
inc
test
fsub
xor
fbld
pop
adc
cmp
sbb
push
int3
test
push
pop
jns
ret
or
aam
inc
je
ficomp
inc
inc
jmp
xor
pop
outs
out
mov
sbb
jp
dec
out
ins
mov
jge
cld
sub
add
retf
aam
popa
jmp
jmp
push
mov
aaa
sahf
in
sbb
adc
shl
ds
sub
es
cmps
outs
(bad)
jl
cmp
jmp
sub
dec
mov
inc
push
daa
test
pop
pop
xor
add
fldcw
sahf
jb
add
push
(bad)
cmp
xchg
add
cmp
lods
repnz
stc
mov
(bad)
in
mov
cmp
(bad)
aam
inc
frstor
adc
dec
xchg
mov
mov
add
push
clc
add
repz
xchg
push
sub
pop
int
sub
jo
sub
mov
es
das
cs
aas
pop
fwait
pop
sub
ret
inc
inc
cmp
pop
das
add
outs
mov
adc
sub
les
xchg
add
mov
test
ret
popa
test
pusha
imul
cld
loopne
shl
inc
test
xchg
mov
add
data16
push
in
shl
cmps
cmp
idiv
mov
dec
dec
pop
sub
mov
push
rol
pop
stc
ret
(bad)
fld
jnp
cmp
out
mov
fldenv
sbb
sar
mul
xor
test
pop
retf
fmul
pinsrw
and
(bad)
jbe
xchg
jp
pop
dec
jae
or
inc
push
jmp
iret
shl
retf
and
inc
cwde
jne
xchg
into
ds
adc
jbe
pop
ss
sub
sti
sbb
mov
pop
ja
jbe
xor
pop
cmps
mov
shl
inc
popf
add
add
sar
popf
push
movs
push
dec
stos
sbb
les
out
dec
xchg
mov
sub
push
jae
sar
cdq
ins
inc
les
aam
jns
and
mov
stos
leave
mov
leave
cmp
outs
pop
ret
loope
cmps
push
and
rol
adc
xor
aaa
fisub
outs
lods
jmp
repnz
inc
jmp
in
not
sahf
popa
das
nop
mov
adc
pop
mov
ds
test
sbb
(bad)
jl
mov
add
dec
mov
ret
les
inc
leave
fbld
and
sar
jle
jno
xchg
push
jmp
scas
jno
jno
mov
shl
inc
xchg
mov
cmp
ss
in
sahf
shl
movs
les
adc
push
(bad)
sbb
jae
(bad)
adc
in
fcmovne
or
out
mov
(bad)
in
lahf
(bad)
daa
jns
in
test
rol
loopne
ins
pop
ficom
inc
jno
pop
dec
clc
pop
and
cli
lock
cmp
sbb
std
sbb
arpl
dec
ss
mov
fisub
mov
ficomp
loop
push
(bad)
mov
jmp
gs
xchg
pusha
mov
pop
inc
add
cs
into
jo
lods
cli
sub
pop
test
adc
std
push
cwde
jp
push
xor
je
dec
ret
jae
jb
xchg
mov
daa
cmp
les
popf
dec
jle
adc
push
fldcw
cmp
retf
imul
pop
int3
push
fistp
and
ret
sbb
fld
jmp
pop
add
aaa
in
(bad)
js
ja
imul
dec
ins
int
sub
mov
cdq
not
ret
lods
push
mov
mov
add
hlt
pop
sbb
fcmove
jns
ins
add
xor
jbe
push
sti
mov
stos
sbb
adc
pop
cwde
pusha
call
xchg
adc
ins
jae
adc
xor
pop
push
dec
loopne
or
cdq
and
fcomp
adc
sbb
test
imul
cs
xor
ss
or
xchg
popa
popa
dec
ds
das
xchg
(bad)
ins
or
xchg
ffreep
add
clc
and
jp
lods
mov
push
inc
out
out
adc
repz
js
sub
inc
gs
test
mov
push
stc
scas
mov
jbe
xchg
inc
fisubr
stc
imul
push
xor
outs
pop
je
mov
fisttp
lds
mov
cdq
call
mov
in
sti
int3
sbb
arpl
pop
push
pushf
dec
xor
ins
out
pushf
rcl
xor
jno
mov
movs
pushf
cmp
ret
shl
jecxz
popf
adc
and
xchg
pop
(bad)
repz
call
retf
idiv
arpl
dec
xchg
jns
push
stos
scas
jns
jo
sbb
jp
jmp
xor
ret
or
pop
in
in
xor
ins
mov
pop
xchg
and
ds
mov
sbb
aam
mov
imul
in
jecxz
(bad)
scas
enter
sub
jno
pop
sbb
push
xor
std
xchg
xor
movs
jne
outs
test
std
test
jnp
lds
aaa
test
ds
lods
cmp
(bad)
pushf
daa
sbb
std
ins
and
out
jno
mov
bnd
push
mov
ret
mov
(bad)
aad
mov
loop
iret
mov
fs
leave
mov
push
jl
or
or
xor
ret
stos
in
mov
jmp
mov
push
js
lock
push
shl
je
mov
out
ret
outs
pushf
mulps
loopne
dec
fstp
call
into
mov
jne
inc
stc
loop
enter
pop
mov
xor
pop
imul
lds
jg
mov
scas
adc
sbb
pushf
sub
repnz
mov
lea
in
jb
out
mov
mov
xlat
test
loop
sbb
jl
sub
sbb
into
lock
and
aas
jmp
jb
dec
push
lds
sub
sub
and
lahf
push
add
xchg
(bad)
adc
jmp
(bad)
lds
movs
jge
test
scas
sbb
and
push
dec
mov
adc
adc
mov
xor
sub
mov
jmp
aaa
test
addr16
xchg
scas
or
cmp
cmp
(bad)
xchg
sbb
mov
addr16
xchg
call
push
mov
xor
mov
sbb
dec
pop
jmp
sbb
dec
jp
adc
pusha
shl
or
or
imul
inc
inc
out
pop
mov
cmps
add
lahf
loope
mov
adc
aam
sub
jge
ds
or
cdq
dec
or
fld
xor
mov
es
outs
add
sub
sbb
xor
or
les
fld
jmp
aam
dec
movs
not
cmp
mov
pop
push
ror
repnz
mov
mov
adc
pop
jecxz
jnp
inc
sbb
(bad)
jl
ss
push
mov
repnz
mov
in
lahf
ss
lahf
jo
call
into
aam
(bad)
add
xor
push
pop
dec
gs
and
and
cmc
fnstsw
pop
aam
pop
push
jl
dec
cmp
jnp
mov
and
fsubr
push
icebp
adc
mov
jnp
addr16
dec
xchg
mov
adc
pop
xlat
dec
or
in
stc
hlt
jo
loop
jae
pop
jp
adc
in
jno
pushf
xor
pop
enter
inc
fsubr
test
retf
jmp
jmp
sub
inc
inc
lods
jbe
sbb
and
and
inc
adc
sub
std
sub
loopne
sub
repnz
bound
xor
fisttp
clc
push
mov
in
test
mov
xchg
cmpxchg
ds
mov
or
or
sub
add
daa
jne
jae
mov
test
cmp
mov
push
int
sub
into
aad
ins
push
mov
fbld
dec
adc
(bad)
sbb
mov
mov
add
bound
and
jp
or
push
daa
pop
dec
gs
and
sbb
sti
sahf
sub
jecxz
push
mov
pop
sub
push
sub
jmp
movs
pop
dec
push
mov
cmp
adc
jmp
pop
inc
mov
std
pop
stos
mov
inc
xchg
adc
jmp
leave
add
das
dec
ror
xchg
shl
fmul
jae
in
enter
in
push
add
dec
iret
stos
imul
sub
xchg
and
jmp
loopne
xchg
xchg
fstp
hlt
pop
xchg
rol
add
mov
sub
lods
mov
and
aas
dec
mov
or
stos
pusha
repz
je
jb
pop
imul
call
sbb
inc
cmps
pop
inc
jmp
inc
(bad)
fs
xor
call
outs
mov
xor
adc
pop
inc
xchg
xlat
xor
daa
fbld
shr
push
mov
pop
loopne
add
and
repz
jecxz
xchg
ins
div
mov
rcr
iret
int
sbb
xchg
mov
push
mov
mov
dec
aas
psllq
arpl
push
or
out
push
xchg
ins
int3
dec
in
std
jbe
mov
pop
fs
push
popa
cmc
jo
in
xchg
cld
push
(bad)
shl
sbb
popa
fs
cmp
in
sub
fstp
jge
rcr
int3
test
inc
cmp
mov
sbb
and
mov
cs
fnstsw
fbstp
movs
adc
(bad)
in
push
(bad)
repz
mov
xor
mov
and
sti
outs
fldlg2
xchg
mov
aaa
mov
adc
nop
les
inc
(bad)
retf
add
push
fist
test
dec
pop
adc
mov
(bad)
movs
mov
dec
pop
lods
cwde
xor
popf
push
rep
std
stc
and
or
cmp
xor
daa
(bad)
and
not
(bad)
mov
pop
out
ror
cmc
popa
popa
pop
cld
ins
in
aaa
scas
jo
jmp
in
pop
lahf
ins
div
not
jo
(bad)
(bad)
adc
daa
or
push
xchg
pop
push
mov
xor
push
sti
xor
popw
push
jle
mov
pop
outs
in
std
iret
jns
cdq
add
pusha
jmp
in
mov
arpl
sbb
popf
sbb
pushf
push
inc
cmp
jmp
mov
aaa
mov
or
arpl
jne
mov
mov
pop
or
mov
std
jae
(bad)
repz
dec
loopne
aad
repz
dec
mov
fisttp
add
pusha
js
mov
repnz
add
xor
mov
ret
mov
jne
sahf
mov
add
fisttp
pusha
fstp
jmp
cmp
ror
dec
jecxz
sub
stos
adc
and
stos
out
neg
inc
cmp
movs
leave
mov
mov
movs
mov
out
push
cmp
and
repz
dec
hlt
or
jns
clc
fist
mov
imul
sub
jp
jmp
adc
adc
lea
add
lods
gs
icebp
ins
dec
out
or
add
and
sbb
std
ins
mov
in
push
out
mov
bound
push
mov
inc
scas
or
xor
cmc
add
in
cmp
mov
dec
js
retf
xchg
xor
loop
sbb
xchg
xor
(bad)
movs
ss
jnp
cdq
jno
inc
jp
jmp
sti
add
adc
addr16
mov
pop
jnp
inc
(bad)
jno
inc
repz
outs
bound
aad
pop
jmp
mov
pop
pop
mov
lods
push
dec
xlat
xchg
fwait
jg
or
mov
leave
xor
adc
imul
stos
inc
push
icebp
pop
pop
movs
add
sbb
sub
push
js
aas
gs
fimul
and
push
or
mov
sar
nop
fisttp
add
mov
stos
xchg
dec
test
icebp
lods
sub
jbe
bound
sgdtd
int3
mov
jge
pop
and
cmp
hlt
mov
nop
sub
mov
out
int3
cmovbe
jmp
jecxz
or
sub
sbb
jo
mov
aaa
jns
cmp
(bad)
push
cmc
mov
push
out
std
xor
test
add
push
adc
inc
and
fadd
adc
aam
imul
xor
or
mov
pop
div
or
mov
fstp
mov
popf
add
cmp
push
or
dec
mov
add
sbb
mov
sub
iret
jne
add
fwait
xor
jmp
add
inc
cmp
pop
push
scas
lods
push
adc
rcr
outs
mov
dec
lods
rol
xchg
pusha
dec
lods
push
fcom
gs
in
xlat
add
ds
sub
xor
dec
pop
outs
out
push
stc
mov
xchg
ret
icebp
das
lahf
xchg
retf
fs
(bad)
test
test
adc
mov
mov
mov
loopne
xor
cmp
sar
mov
cmps
lahf
movs
out
rol
je
xchg
aas
rol
test
call
inc
pop
movs
xchg
or
add
call
call
movs
pop
nop
sahf
clc
outs
fs
push
(bad)
retf
fld
stos
and
inc
inc
stos
and
enter
rcr
or
dec
je
bound
stos
mov
test
xor
dec
push
cdq
popf
jecxz
movs
nop
hlt
aam
jae
xchg
shl
sub
xor
sub
mov
xlat
add
push
repz
inc
fdivrp
cmps
jecxz
rcl
sahf
mov
imul
cmp
fcom
xchg
add
or
dec
or
test
cmp
fbld
xchg
sbb
mov
jb
js
fs
xchg
or
dec
cmc
jnp
xor
fs
rcl
sbb
jbe
rcr
call
xchg
sbb
and
and
hlt
fmulp
lock
clc
inc
push
ret
(bad)
hlt
dec
mov
icebp
jmp
jb
cmps
outs
push
mov
call
jae
xchg
xor
ins
mov
js
call
icebp
mov
xchg
mov
in
dec
call
daa
jmp
cli
sbb
jbe
and
call
(bad)
and
out
mov
or
jbe
mov
inc
or
cmp
jecxz
xor
pop
es
int3
adc
inc
nop
adc
adc
push
add
push
mov
les
sar
adc
adc
sub
xor
or
cwde
repz
push
cmc
sbb
mov
pop
mov
mov
shr
js
inc
fdivr
jb
cmc
and
(bad)
das
mov
cwde
cwde
hlt
aam
cmp
(bad)
retf
and
cmp
and
adc
xchg
sbb
sub
adc
adc
mov
sar
leave
arpl
jmp
(bad)
cmp
(bad)
sar
add
mov
jae
jno
out
fwait
jmp
movs
mov
adc
jle
jp
test
shl
js
mov
out
inc
(bad)
call
rep
and
cwde
or
push
add
push
sub
xchg
(bad)
mov
xor
loopne
mov
mov
jae
jnp
inc
(bad)
movs
cmp
imul
shl
shl
lock
call
cmp
or
mov
mul
pop
adc
and
mov
or
retf
in
dec
(bad)
repnz
mul
add
pop
cmp
cwde
ret
aaa
addr16
cmp
test
idiv
imul
or
push
pushf
fs
inc
sub
popa
aaa
out
dec
out
adc
push
stc
add
mov
dec
pusha
mov
pop
and
cmp
cdq
aam
mov
sub
mov
pop
and
stos
hlt
cdq
fiadd
movs
pop
pop
sbb
push
push
xor
push
mov
push
mov
fwait
push
mov
pop
mov
mul
sbb
adc
fild
popf
and
rcr
adc
movs
sub
dec
imul
js
loop
inc
jmp
jb
enter
xor
js
inc
dec
das
rcr
pop
das
cli
test
or
adc
sub
idiv
or
loop
xchg
cwde
in
pop
mov
mov
inc
into
mov
rcr
pop
ss
xor
test
add
inc
mov
ret
fs
out
jno
iret
outs
loopne
inc
js
test
jo
in
add
mov
mov
mov
sbb
sub
shl
adc
sbb
sub
int
ins
cwde
or
out
mov
sbb
inc
mov
data16
mov
popf
cmps
popa
popa
mov
inc
inc
xchg
pop
loop
sub
mov
mov
push
test
cs
dec
test
out
test
out
outs
(bad)
aas
movs
mov
aas
hlt
sub
sbb
dec
in
out
out
sub
sbb
ficomp
(bad)
jl
push
nop
dec
je
loope
pop
ret
shl
das
scas
jnp
int3
in
and
pop
in
fsubr
ret
sub
xchg
cmp
inc
mov
fld
sub
or
mov
out
(bad)
cwde
push
mov
test
xchg
pop
jg
push
cmps
jnp
dec
inc
cld
rcr
mov
scas
repz
xlat
out
sub
cli
es
dec
sahf
ds
push
out
into
cmc
push
mov
push
test
in
fnstcw
xchg
rol
jne
fdivr
lock
jmp
mov
pop
aas
jno
dec
leave
(bad)
(bad)
rcr
push
sub
pop
and
push
pop
mov
sub
bnd
iret
dec
cli
jb
sahf
xchg
imul
sahf
mov
fwait
sbb
sbb
and
add
gs
iret
add
pop
sbb
add
xchg
sub
push
sti
test
lods
mov
sbb
mov
ret
fucomi
mov
test
inc
xchg
lahf
test
ds
or
adc
jmp
fisubr
dec
clc
push
pop
dec
sub
rol
lock
into
js
cli
test
mov
popa
aad
sub
rcl
int
xchg
lock
popa
(bad)
push
loope
and
lds
cmp
xchg
dec
dec
mov
xchg
pop
cmp
pusha
aam
hlt
movs
jmp
xchg
and
add
or
hlt
mul
dec
popa
cmc
inc
loop
inc
add
aad
dec
out
outs
pop
xor
inc
adc
(bad)
xlat
sahf
jne
pop
xor
jno
(bad)
clc
shl
adc
cmp
cmps
xor
movs
push
jle
xor
sar
add
aam
out
inc
(bad)
jae
add
push
mov
inc
mov
mov
push
das
out
or
add
pop
push
mov
sbb
pop
inc
cs
arpl
loop
and
scas
and
or
push
xchg
jge
sbb
ins
and
inc
push
(bad)
fiadd
xchg
scas
mov
hlt
(bad)
loop
div
dec
sbb
jl
clc
sub
sahf
mov
jne
jle
sbb
and
das
mov
(bad)
xchg
push
ds
(bad)
fidivr
xchg
push
lock
(bad)
nop
int
popa
jbe
sti
or
inc
xchg
bound
adc
fmul
inc
xor
fs
shl
imul
inc
(bad)
jmp
fisubr
out
mov
pop
cld
dec
mov
in
dec
jo
jecxz
lahf
cmps
outs
scas
mov
push
mov
dec
pop
jae
sbb
lock
mov
stc
dec
mul
lods
push
xchg
mov
test
mov
scas
sti
adc
inc
inc
in
movs
test
leave
jle
or
mov
cld
out
mov
and
in
push
stos
xor
shl
mov
fadd
(bad)
in
jecxz
dec
cli
push
stos
sti
inc
mov
cmp
cmc
pop
lods
sub
rol
ret
xor
mov
add
jp
daa
push
xlat
push
stos
mov
mov
and
push
push
pushf
or
lds
loop
test
add
loope
pop
pushf
xlat
sbb
inc
imul
out
xchg
test
jnp
inc
cmps
jo
repz
push
fld
addr16
jecxz
retf
(bad)
lods
stc
push
dec
les
bound
or
loop
jmp
and
lea
mov
dec
inc
jmp
cdq
mov
cdq
rol
mov
dec
and
sub
adc
adc
jne
fdiv
hlt
mov
mov
aam
or
(bad)
pop
jle
and
push
arpl
loope
in
xlat
xchg
fist
ja
not
or
cld
pushf
aas
sbb
fidiv
adc
mov
movs
cmps
pusha
fadd
cmp
ret
or
movs
inc
mov
jge
jp
stos
movs
jge
push
(bad)
sahf
outs
addr16
adc
dec
fwait
xchg
xchg
bound
std
in
jmp
es
mov
es
(bad)
push
ds
(bad)
cwde
out
data16
jo
cwde
jae
gs
or
ja
dec
jp
dec
xchg
jo
inc
sub
out
stos
jne
ret
and
lea
hlt
add
cwde
xor
cmp
xchg
cs
cs
ins
pop
mov
mov
in
add
xor
adc
xchg
rcl
mov
adc
ret
popf
cmp
(bad)
ret
imul
lock
(bad)
lods
outs
call
push
dec
lods
fs
stos
mov
aas
xor
pop
push
pop
mov
stc
mov
sub
mov
lods
cld
inc
and
adc
(bad)
jge
in
in
fcomp
sub
inc
xor
push
icebp
adc
jge
sbb
repnz
inc
das
stos
sub
adc
inc
sbb
stc
stc
pop
dec
int3
addr16
jo
std
xchg
mov
pop
sti
(bad)
and
push
xchg
jnp
ss
sbb
ret
bound
adc
mov
inc
ja
fist
jge
nop
out
test
test
add
sbb
fwait
mov
shl
cwde
jg
push
push
dec
ss
arpl
into
in
pop
aad
iret
call
jnp
push
ins
add
add
jae
mov
repnz
(bad)
stc
ficomp
test
xchg
xor
cmp
mov
addr16
xchg
sar
scas
xchg
or
pusha
add
ret
mov
dec
pop
xor
pop
xor
cmp
stos
xor
xchg
jl
rcl
pop
rol
dec
cwde
in
lock
(bad)
mov
icebp
lahf
ins
lds
sahf
jns
out
sahf
dec
ss
add
retf
and
adc
xchg
sahf
adc
neg
cmps
ficomp
sbb
adc
sub
pop
ds
add
dec
das
add
and
jle
adc
or
jnp
mov
sbb
mov
shl
mov
dec
addr16
adc
sub
ret
mov
pop
je
push
mov
int
ret
pop
xchg
(bad)
and
xor
mov
jns
loopne
int3
lods
in
(bad)
pushf
sbb
test
sub
and
ss
and
and
xchg
cli
out
psubsw
gs
lock
cdq
xchg
cmp
(bad)
outs
adc
fist
cmp
scas
mov
test
out
out
ins
shl
clc
sub
jmp
mov
pop
jae
add
adc
or
sahf
sbb
xchg
push
xlat
sbb
pop
icebp
mov
ss
ins
xchg
arpl
mov
jg
and
mov
and
sub
inc
jle
cli
in
das
inc
jecxz
in
mov
loop
gs
or
out
mov
popf
out
rol
enter
mov
or
jns
push
clc
jnp
js
lock
pop
cld
mov
sbb
out
loop
pop
inc
gs
pop
dec
adc
out
repnz
repz
sub
enter
div
stos
not
mov
loopne
mov
popf
std
lds
push
in
aaa
add
fimul
mov
retf
jnp
push
fdivr
lods
bound
mov
lea
aad
stos
ds
loop
push
out
xchg
sbb
push
xor
push
xchg
test
mov
inc
jns
sti
fidivr
xor
(bad)
xor
out
rcr
push
je
pop
mov
in
lahf
jp
xchg
inc
(bad)
sub
rcr
pop
jle
mov
mov
mov
adc
fidiv
in
sub
aas
es
sbb
lea
idiv
jp
xchg
cdq
mov
add
in
lea
sub
mov
iret
dec
bound
add
add
xchg
lock
fwait
pop
dec
add
mov
jbe
jae
pop
xchg
dec
test
rol
scas
(bad)
push
mov
cmp
fmul
xlat
mov
jns
mov
inc
ds
mov
test
adc
and
xchg
cmps
test
jp
pop
jno
xchg
dec
ror
jno
pop
dec
loope
cmp
ret
scas
xchg
cs
mov
movs
xchg
(bad)
loopne
movs
jb
adc
mov
pop
test
mov
imul
jmp
inc
dec
cmp
pushf
dec
dec
push
mov
fcomp
pusha
mov
add
or
out
jg
add
mov
outs
ss
imul
cli
dec
push
mov
push
push
xchg
sbb
int
mov
adc
lods
ins
sar
hlt
pushf
dec
mov
loopne
inc
or
mov
test
dec
je
inc
retf
sub
js
sub
dec
mov
scas
loop
stos
pop
movs
xchg
movs
outs
scas
jp
pusha
scas
rcl
and
xchg
aam
je
mov
gs
imul
push
xor
sti
mov
les
or
into
test
stos
inc
shl
cmp
cli
rcl
adc
inc
sub
jl
push
arpl
stos
push
mov
pop
cmps
cs
xchg
jbe
sub
mov
(bad)
sub
jecxz
push
iret
add
fcmovnbe
push
cld
push
mov
hlt
imul
cmp
mov
lods
fcomi
push
xchg
inc
fild
shr
and
inc
and
adc
je
mov
enter
push
out
(bad)
fstp
and
fnsave
in
test
mov
rcr
lock
popa
and
pop
cmc
gs
rol
outs
inc
cmp
(bad)
stc
mov
dec
pop
outs
mov
lock
add
jo
pop
inc
pop
xchg
stc
jmp
dec
jp
sbb
adc
daa
pop
rcr
bound
jmp
hlt
pop
sub
stos
in
push
mov
sahf
inc
jle
aas
data16
push
mov
ja
mov
xor
pop
lods
sub
or
mov
iret
push
dec
outs
push
cwde
mov
and
push
fcmovnb
rcr
loope
xor
loopne
cmps
scas
pop
jmp
bound
push
cmp
lods
jecxz
pop
push
pop
mov
pop
mov
jg
(bad)
or
cmp
mov
or
gs
xchg
shr
test
jns
(bad)
js
push
sub
fs
jl
das
jo
loope
into
dec
ja
cmps
cmp
pop
jecxz
iret
cmps
jb
imul
sti
(bad)
leave
xor
repnz
daa
dec
xchg
xor
jg
int3
sbb
sbb
dec
lea
lahf
fwait
addr16
and
sbb
or
fmul
sbb
dec
adc
add
lea
pop
xchg
(bad)
test
push
or
hlt
cmp
push
push
adc
jnp
pop
test
or
jns
outs
adc
dec
and
xchg
xor
xchg
outs
push
jl
pop
push
xchg
es
inc
adc
fldenv
(bad)
or
test
cmp
push
xor
scas
push
arpl
loopne
add
xchg
sti
mov
cmp
cmp
enter
xchg
add
mov
and
retf
iret
test
xchg
mov
adc
jl
sbb
out
ss
and
jecxz
or
add
mov
leave
ds
outs
imul
jno
sub
and
repnz
pop
xor
mov
aad
cli
in
sbb
clc
out
aad
jg
xchg
bound
pop
aas
je
pushf
add
pop
pop
pop
dec
mov
fsub
and
scas
add
in
mov
sub
xor
cmp
in
and
addr16
pop
jg
stos
push
jae
mov
push
shl
out
ins
mov
pop
je
dec
std
sahf
xchg
sub
sti
sti
mov
inc
xchg
ret
(bad)
mov
leave
inc
call
cmp
ds
push
inc
lahf
ror
hlt
and
pop
stc
(bad)
mov
(bad)
xchg
xor
cmps
sti
xor
add
ins
cmp
dec
inc
scas
add
and
mov
addr16
(bad)
stos
lods
and
dec
mov
enter
test
ds
scas
in
mov
outs
jg
mov
sub
fs
inc
outs
std
std
sub
int3
loope
sar
adc
jmp
sahf
in
mov
adc
inc
movs
test
stos
jmp
les
lds
pop
ins
pop
xchg
int
inc
sbb
add
cli
dec
lds
(bad)
jge
inc
jl
hlt
jmp
push
aad
mov
inc
sahf
rol
loope
loop
xor
mov
jge
and
outs
stc
out
push
test
mov
daa
add
add
lock
inc
jmp
not
adc
dec
lock
das
sbb
mov
pop
add
ror
mov
pop
std
xchg
shl
in
pop
mov
(bad)
inc
out
adc
mov
cmps
xor
leave
pop
cdq
out
xchg
fnstcw
push
or
and
out
or
push
jns
jae
adc
push
mov
(bad)
sub
mov
push
or
xchg
adc
test
mov
sar
mov
and
(bad)
pop
jecxz
scas
push
cmp
xor
pop
imul
xor
mov
cmps
cmp
cmp
pop
jae
mov
add
push
hlt
or
or
sub
and
fidivr
into
aad
dec
test
dec
mov
mov
into
jno
xchg
das
adc
xor
xor
cwde
cmp
(bad)
(bad)
xchg
mov
(bad)
rcl
mov
add
retf
xor
clc
jp
ja
bound
inc
mov
aaa
and
dec
and
scas
stc
and
fist
add
sti
push
inc
or
xchg
mov
test
and
adc
out
fnstsw
xor
movs
out
inc
inc
mov
mov
mov
cli
cmp
ret
scas
shl
out
and
pop
in
add
jmp
cs
fiadd
test
in
sub
and
xchg
out
xchg
inc
and
ins
xchg
or
sbb
(bad)
loop
sbb
xchg
fcomp
repnz
std
xchg
mov
arpl
xor
lahf
ret
repnz
in
cmp
jle
data16
shl
std
mov
mov
mov
leave
pop
xlat
xchg
jnp
lods
cwde
add
pop
and
in
test
retf
arpl
xor
out
xchg
call
sahf
and
test
mov
dec
push
xchg
in
scas
scas
cmc
pop
mov
sar
xor
iret
ins
dec
int
in
mov
popf
sbb
jno
push
push
(bad)
mov
xor
xchg
mov
mov
add
xor
ret
inc
cmp
jg
pop
arpl
stos
mov
fmul
loop
inc
adc
jle
mov
outs
and
stos
pop
push
xor
xchg
aas
bound
jne
xor
mov
pop
jmp
push
loope
es
dec
mov
mov
sub
mov
inc
or
fnstenv
cmp
sbb
lods
xchg
cmps
fmul
mov
popf
rol
fbstp
or
xchg
mov
outs
mov
mov
inc
call
int3
and
and
xchg
call
mov
push
cmps
aam
and
mov
jle
push
mov
mov
dec
aaa
adc
pop
pslld
scas
cmp
sub
pop
sbb
mov
jnp
mov
loope
sub
mov
dec
add
lahf
hlt
cs
fistp
jecxz
jle
jge
adc
push
xor
ss
enter
movs
mov
test
push
mov
adc
fst
shr
xchg
inc
push
unpcklps
mov
cwde
xchg
xchg
in
ret
std
out
xchg
hlt
xchg
sbb
scas
fimul
iret
pop
jle
lods
xor
adc
push
bound
test
out
es
xchg
inc
repz
push
mov
hlt
inc
mov
mov
push
push
xchg
adc
jnp
test
out
loope
add
pop
loope
arpl
sbb
sub
mov
mov
jg
retf
ja
cmc
jg
push
and
dec
daa
gs
rol
lods
lea
mov
mov
int3
add
mov
enter
in
jo
fucomp
and
xor
test
clc
test
mov
mov
mov
mov
xor
sub
dec
sti
ja
push
push
pusha
adc
fwait
cdq
test
xor
push
rcr
pop
inc
test
mov
inc
aam
pop
xchg
sbb
mov
add
jg
gs
jmp
jno
push
adc
jmp
pop
outs
ret
pop
(bad)
sbb
sub
xor
test
fsubr
jb
jnp
add
mov
push
cmps
repz
ds
lods
daa
outs
das
xchg
sbb
inc
movs
xlat
mov
xor
push
mov
jo
sub
mov
lods
push
rcl
(bad)
in
mov
ss
aad
jl
sbb
test
xchg
or
jl
mov
mov
adc
adc
rcr
js
adc
jne
adc
push
sbb
sbb
mov
cmp
ret
push
test
pop
test
xchg
dec
cmp
mov
push
mov
cmp
mov
adc
push
aas
retf
or
fldl2e
imul
arpl
push
push
and
popa
jmp
ins
jmp
or
jecxz
add
adc
outs
shl
inc
fidiv
xchg
sub
sub
add
xor
jns
pop
int
push
jle
call
mov
call
adc
(bad)
dec
ins
pop
stos
cmc
push
mov
pop
jo
lds
lods
icebp
mov
mov
sti
mov
pop
pop
cmp
or
inc
test
dec
movs
ror
and
and
and
xchg
dec
out
ja
dec
dec
jl
inc
out
add
push
pop
pop
xor
in
mov
arpl
mov
mov
dec
xor
mov
ins
inc
lds
and
or
jl
xchg
mov
cmp
arpl
mov
or
jno
pop
inc
imul
cmps
ret
popa
(bad)
cmp
jnp
jl
inc
jge
dec
cs
mov
jbe
or
inc
ja
cld
sar
inc
xchg
or
mov
jo
cwde
sahf
rol
xchg
dec
sub
aam
call
fs
fimul
jle
setnp
mov
sbb
in
in
jmp
(bad)
sub
pop
push
push
mov
mov
cmp
out
mov
int3
dec
jno
icebp
loopne
pop
mov
out
xchg
fmul
fstp
jb
inc
idiv
xchg
xor
jge
lds
pusha
ins
pop
fidivr
ret
push
mov
push
imul
mov
pusha
loope
xchg
pop
or
test
add
adc
shr
and
push
lahf
jb
lods
xchg
mov
and
clc
pusha
pop
lea
shr
cdq
or
xor
xlat
arpl
pop
out
cmc
jmp
mov
jno
push
cmp
jge
push
out
movs
leave
mov
inc
es
fisubr
and
or
jns
sbb
out
pop
rcr
pop
inc
jge
loope
pop
jp
pusha
add
push
in
cmp
jb
(bad)
out
call
sbb
mov
popa
fwait
aaa
int
add
cmp
scas
adc
stos
jnp
and
jge
lods
inc
cdq
sbb
xor
sub
inc
mov
clc
add
and
mov
rcl
imul
mov
pop
(bad)
in
sbb
pop
ret
mov
mov
popf
xor
and
sbb
xor
mov
rcr
jno
adc
and
pop
or
xor
adc
lock
loop
xchg
shl
fsub
jbe
sbb
cmp
lods
mov
xlat
mov
ror
mov
jnp
dec
jmp
sbb
sahf
dec
js
mov
cmps
push
cmp
adc
fs
icebp
adc
cmp
mov
jecxz
mov
das
mov
pop
cli
fimul
retf
add
cmp
mov
leave
mov
fldenv
test
or
mov
iret
xchg
cmp
mov
jg
mov
jl
je
aas
pop
mov
je
nop
sbb
shl
scas
sub
out
adc
and
rcl
push
xchg
or
sbb
or
pop
cmc
add
aaa
mov
adc
rcr
retf
scas
cmp
inc
jle
mov
sbb
add
nop
shl
ss
ss
mov
in
mov
mov
(bad)
test
pop
xchg
pop
and
cmp
sti
mov
cmp
shl
mov
pop
add
mov
scas
out
add
push
adc
out
cwde
xchg
pop
mov
aaa
test
test
cs
loop
jb
push
into
popa
iret
mov
sbb
lock
les
push
int3
adc
popa
fst
outs
call
and
lea
iret
inc
adc
push
mov
xor
icebp
js
pop
ror
jne
lea
mov
es
push
pop
stos
cmovb
test
adc
fcomip
fdiv
pop
test
jl
jge
push
mov
out
push
pop
shl
ret
fwait
inc
inc
cld
mov
inc
mov
sti
xor
mov
ftst
scas
lahf
push
lock
mov
push
sti
mov
cs
add
xor
sub
pop
fucom
jae
std
cmp
mov
xor
xchg
lds
enter
mov
xchg
pop
push
rcl
inc
fisubr
cmp
inc
sbb
sub
xchg
jecxz
psubusw
pop
cmp
fcom
jmp
fimul
cmps
(bad)
mov
or
mov
aaa
inc
add
fwait
push
xchg
jge
ret
inc
(bad)
clc
and
cmps
cs
jns
sbb
cdq
sbb
(bad)
xchg
sbb
aad
das
test
push
leave
mov
sbb
adc
aas
jecxz
push
out
cs
in
push
imul
fcom
loopne
jle
dec
and
adc
mov
(bad)
je
and
xchg
sub
and
outs
cmps
xchg
pushf
(bad)
mov
sahf
into
cmp
cmp
jmp
pusha
(bad)
push
cvtps2pd
aas
xchg
mov
inc
not
push
xchg
or
imul
dec
rol
xchg
push
imul
cmc
adc
pushf
mov
iret
push
push
shl
pop
lods
jns
mov
fsub
loop
mov
iret
scas
inc
enter
dec
inc
(bad)
mov
cs
jg
add
retf
fidivr
and
fsubp
loop
add
push
ret
scas
out
stos
jle
int
inc
es
push
in
mov
inc
push
pop
jmp
inc
fidiv
inc
push
aas
sbb
out
test
or
lea
inc
add
push
mov
push
mov
imul
pop
xchg
outs
inc
sub
and
psubq
sub
outs
lock
out
arpl
or
push
xchg
js
loop
cs
adc
or
out
leave
mov
mov
movs
fimul
adc
lea
in
mov
sub
mov
fdivp
pop
fsubr
and
repnz
in
idiv
rcr
fldenv
pop
inc
xchg
xchg
daa
repz
fbstp
(bad)
pop
and
mov
fld
jns
movs
cmc
out
mov
mov
xchg
adc
mov
cli
outs
add
shr
mov
shl
iret
jp
idiv
mov
push
lds
mov
imul
mov
mov
ds
xor
xor
sub
iret
call
xlat
ret
pop
add
clc
test
cmp
lods
out
sub
shl
movs
inc
and
mov
mov
xor
pop
mov
rol
in
das
repz
les
ret
inc
imul
fmul
hlt
daa
in
repz
psubq
cli
push
cmc
or
jno
mul
iret
retf
mov
dec
sbb
cld
retw
push
ja
add
add
inc
into
mov
push
es
(bad)
nop
in
test
mov
aaa
inc
mov
bound
dec
mov
in
fwait
add
enter
and
mov
or
out
aad
or
inc
sbb
fsubr
xchg
pop
mov
mov
and
popf
hlt
pop
ja
inc
and
add
lds
dec
pop
popf
jp
xor
jo
and
sbb
pop
rcr
cmp
jbe
out
loop
mov
ret
adc
jl
ret
add
cmp
movs
psubb
in
sahf
imul
xor
mov
fst
adc
adc
loopne
xor
retf
pop
movs
je
in
ret
loopne
pushf
aaa
xchg
and
lods
loope
mov
mov
xor
shl
loope
add
mov
cmp
and
les
in
ins
nop
cmp
mov
arpl
fild
push
dec
fadd
and
push
push
xchg
dec
mov
(bad)
mov
pop
scas
retf
repnz
jmp
and
cli
shl
je
repnz
addr16
ret
ficom
std
aaa
inc
test
std
ror
mov
mov
push
ds
sbb
retf
dec
(bad)
test
cmp
xor
in
aam
mov
jnp
scas
and
ins
mov
out
mov
scas
inc
dec
mov
mov
inc
xchg
add
adc
popf
push
or
xor
test
sbb
jne
or
call
dec
cli
test
pop
xor
cmp
stos
mov
xor
scas
mov
or
fdiv
cmp
pop
movs
or
adc
dec
out
fs
fadd
mov
sub
lods
cmp
dec
loope
dec
lock
push
jmp
dec
mov
mul
mov
and
mov
mov
not
mov
pop
in
mov
push
mov
inc
xchg
and
inc
jmp
jmp
fld
dec
push
and
adc
mov
mov
jp
repz
je
fidivr
popf
int3
xchg
lahf
mov
xlat
aam
int
push
push
mov
into
adc
jle
bsf
sti
stos
add
call
mov
push
or
std
sbb
out
xchg
push
popa
cmps
cs
loopne
push
sbb
mov
enter
push
xchg
(bad)
retf
push
sbb
xor
push
cli
out
add
adc
cmps
scas
sbb
(bad)
stos
mov
mov
jnp
jp
mov
shl
mov
pop
jle
and
mov
stos
outs
retf
(bad)
daa
add
xchg
dec
jns
mov
mov
pushf
push
jmp
call
add
cmp
push
jge
pop
pushf
xor
stc
out
dec
adc
mov
mov
std
jl
int3
(bad)
or
and
into
cmc
cmps
pop
aam
pop
ss
jne
outs
push
call
adc
sbb
lock
push
push
sbb
fbld
jbe
loopne
and
addr16
dec
leave
cs
cmp
outs
mov
(bad)
sub
fs
pop
sbb
nop
mov
mov
mov
movs
sti
xchg
test
ins
xchg
mov
pop
sbb
and
jg
iret
sub
and
or
cmp
mov
fwait
dec
enter
mov
gs
xchg
mov
jge
jb
mov
cmp
call
xchg
jmp
push
call
js
rol
repnz
xchg
fcom
mov
xchg
loope
cld
test
bnd
jecxz
cmp
cmp
ss
add
(bad)
cmp
in
pop
mov
test
mov
stos
sbb
movs
dec
sub
(bad)
int3
ss
jmp
pop
or
or
xor
pushf
xor
movs
les
es
fldpi
xchg
mov
mov
sbb
lds
adc
inc
mov
xchg
retf
jmp
movs
fs
enter
cdq
xchg
inc
pop
aas
inc
int
(bad)
mov
fst
jne
rcr
das
int3
inc
jno
push
shr
dec
stc
loopne
call
aad
out
stos
addr16
cmps
pop
jnp
popf
aaa
test
xor
hlt
mov
arpl
xor
outs
inc
pop
sub
pop
and
test
jp
jmp
imul
ins
fidiv
clc
sbb
or
push
jmp
mov
fwait
call
in
and
cmp
stos
adc
dec
in
push
push
or
cmp
mov
mov
or
fwait
in
fwait
jns
div
cmc
scas
xchg
mov
leave
lods
rol
data16
(bad)
dec
mov
test
pop
test
(bad)
push
sub
jbe
fs
aas
shr
test
ror
call
inc
mov
(bad)
pop
(bad)
cdq
div
movzx
aam
ins
or
cmp
jg
js
cmc
out
xor
pop
or
hlt
leave
jns
(bad)
int3
xchg
jb
in
jns
mov
add
cmps
jmp
pop
je
int3
clc
push
adc
xchg
enter
mov
sahf
sub
and
adc
pusha
and
cmps
mov
data16
(bad)
int
das
pop
scas
cmp
cmp
ss
hlt
sbb
xor
inc
fdiv
data16
nop
xchg
push
cmc
cli
and
dec
and
ficomp
xchg
fidivr
mov
movs
das
or
nop
cmc
retf
daa
test
inc
imul
sti
cmc
or
data16
dec
mov
xor
(bad)
xor
sti
dec
mov
and
aad
in
or
sub
or
xor
cdq
(bad)
jmp
ds
jbe
loope
mov
call
mov
push
repnz
cmc
xor
mov
in
call
out
(bad)
cs
lods
or
repz
cmp
xchg
movs
mov
sbb
mov
icebp
fcomp
mov
pop
outs
push
fidivr
push
xchg
retf
xchg
lea
xor
hlt
xchg
mov
sub
fst
enter
push
adc
retf
cmp
add
push
ja
movs
mov
popa
fist
inc
dec
pusha
adc
fcom
sbb
jae
push
fcmovnu
dec
sub
fstp
xor
fsubr
loope
sahf
and
arpl
add
sub
aam
mov
ror
xchg
mov
pop
rcr
add
ds
dec
mov
sbb
cmp
inc
dec
dec
jmp
sti
jle
call
add
xchg
or
mov
xlat
xchg
pop
xlat
inc
test
push
mov
jle
add
and
xlat
(bad)
mov
iret
cmp
js
jmp
fild
push
push
into
out
pop
fidivr
ror
aam
popf
jmp
(bad)
call
add
test
mov
mov
cmp
pop
cmp
add
jge
and
lods
jle
pushf
push
cmp
push
mov
bnd
jae
xor
test
stos
in
xchg
sub
sbb
xchg
inc
cmp
(bad)
ja
push
scas
pushf
push
pop
not
imul
call
push
(bad)
dec
in
sub
test
movs
or
add
cmp
inc
shr
add
sbb
mov
ins
ds
push
movs
lock
sbb
inc
or
or
pop
mov
jp
enter
repz
mov
cdq
lods
scas
adc
adc
add
lahf
pop
dec
jb
mov
cmp
sar
mov
fstp
int
push
inc
cwde
ins
out
jo
pop
jmp
push
in
xchg
xchg
or
mov
inc
add
gs
fdiv
cmp
sti
adc
stc
fiadd
mov
fcomi
inc
in
or
cdq
add
pushf
cmp
inc
mov
cmp
dec
and
movs
mov
and
arpl
movs
mov
jl
jo
(bad)
fild
jg
cdq
loop
sub
fbstp
dec
dec
test
and
out
fs
leave
xchg
dec
sub
push
pop
aaa
xchg
xlat
dec
jne
(bad)
mov
leave
jbe
cmp
or
cmp
sar
or
and
jp
nop
test
scas
ficomp
dec
ret
fs
cs
retf
pop
pop
in
push
arpl
int3
cmps
mov
loopne
shl
retf
mov
xchg
test
leave
add
push
cmp
test
inc
pcmpeqd
pop
xchg
frstor
leave
gs
std
cmp
xor
mov
xchg
outs
sti
add
dec
outs
fiadd
add
std
adc
xor
cmp
sbb
inc
mov
mov
leave
dec
xor
call
cli
lods
repz
jg
jecxz
push
push
pusha
xchg
inc
sahf
(bad)
xchg
mov
mov
fild
(bad)
je
idiv
mov
mov
cmc
(bad)
sbb
xchg
rep
fdivp
dec
data16
(bad)
lock
jo
add
inc
jbe
aad
fs
sahf
and
stos
mov
int
mov
inc
retf
jmp
inc
stc
daa
enter
xchg
iret
inc
mov
cmps
rcl
mov
lock
(bad)
into
lods
stc
mov
xchg
push
xor
into
sar
xchg
cmps
jp
pop
(bad)
mov
ja
imul
add
neg
aam
aaa
pop
or
fadd
bound
in
(bad)
sub
je
scas
mov
adc
mov
fimul
dec
aad
ja
cmps
jp
outs
bound
sti
push
xchg
scas
push
outs
sub
jne
jno
imul
dec
dec
scas
in
xor
mov
loope
fcom
or
sub
mov
inc
ds
aam
cwde
clc
pop
xchg
sbb
dec
ror
bnd
fistp
outs
add
popa
cs
test
repz
sbb
or
pop
jmp
cmps
scas
add
sar
mov
vmovdqa
push
mov
add
retf
or
pop
pushf
test
sbb
jnp
push
clc
call
sbb
cmp
repnz
mov
jae
sbb
dec
pop
push
arpl
repz
mov
xchg
mov
xor
ins
cld
jbe
jne
inc
ficom
test
add
ds
or
jge
mov
add
inc
outs
jl
adc
jl
sahf
add
cmps
stos
iret
cmp
cmps
xor
inc
sub
movs
or
or
ss
leave
cwde
xchg
pop
pop
mov
sahf
sbb
mov
lock
push
and
sbb
xchg
push
jmp
dec
jle
inc
std
test
mov
ret
in
dec
pop
sub
adc
out
or
push
push
(bad)
int
mov
lods
cld
jmp
push
pop
or
sub
and
xchg
xchg
mov
dec
mov
nop
int3
(bad)
cmp
ds
push
push
idiv
dec
dec
mov
loopne
(bad)
sahf
or
and
rcr
sahf
jo
iret
clc
loop
call
mov
xchg
shl
retf
jno
rdmsr
jno
dec
pop
jno
imul
test
xor
repnz
jne
adc
movs
push
aaa
push
adc
jnp
int
push
and
(bad)
inc
or
ins
or
inc
inc
call
pop
pop
(bad)
sbb
xor
pop
push
loope
dec
(bad)
or
stos
sub
pop
inc
imul
sub
pop
je
in
aam
fmul
iret
add
inc
dec
in
cmc
int3
add
jge
adc
pop
movs
stos
add
adc
push
in
mov
stc
xor
(bad)
div
dec
stc
cmps
mov
cmp
xor
fcomip
call
clc
jl
stos
mov
or
mov
xchg
adc
mov
scas
mov
leave
xor
and
outs
in
sub
pop
in
xor
scas
outs
pop
rcl
sti
xor
test
mov
push
outs
push
(bad)
pop
sub
xchg
cmc
(bad)
lahf
adc
and
cmp
mov
mov
sub
inc
mov
jge
push
push
lods
iret
clc
cmp
xchg
mov
xor
neg
jno
inc
adc
dec
inc
push
pop
adc
pop
ret
push
dec
push
mov
mov
mov
jecxz
mov
push
push
jns
test
stc
sahf
dec
scas
pop
icebp
mov
and
iret
mov
test
and
cmp
ficom
jne
mov
out
cmp
ja
mov
xlat
gs
cmp
xchg
sbb
push
xchg
dec
inc
aad
test
push
pop
mov
sbb
aaa
cmp
push
movs
jae
cmc
adc
lods
mov
stos
js
jmp
sbb
adc
sub
mov
icebp
xchg
jae
sbb
mov
mov
cmc
cmps
mov
sbb
mov
aam
aam
aas
aas
enter
das
test
xor
stos
fstp
scas
enter
cmp
jbe
movs
ja
mov
jle
gs
and
imul
sub
push
sub
arpl
scas
icebp
adc
push
push
aaa
jmp
or
lock
mov
dec
dec
or
mov
push
jbe
push
mov
sub
mov
adc
pop
aas
inc
and
jae
xchg
jmp
mov
dec
pop
jns
lods
shl
fdivr
fst
mov
add
push
nop
xchg
or
fdiv
sbb
ds
mov
mov
fwait
inc
jl
sti
mov
fidiv
add
mov
dec
mov
jo
adc
jno
mov
sbb
test
cmc
sbb
mov
and
xchg
fsubrp
repnz
lea
cmp
inc
add
out
and
(bad)
test
test
movs
push
sbb
mov
lods
imul
jb
out
sbb
pushf
cs
sbb
mov
dec
(bad)
sub
sub
movs
lds
adc
gs
push
inc
jmp
sbb
cmp
jo
ins
mov
add
jns
push
into
and
push
push
mov
fnstsw
nop
adc
dec
scas
adc
cmp
imul
outs
jl
aas
xor
and
jge
cwde
jl
sbb
jb
jnp
xor
jo
xor
shl
in
dec
sub
ja
cmps
pop
cdq
cld
add
loopne
xchg
cli
dec
out
jmp
adc
shr
inc
pop
gs
ret
icebp
or
push
das
cwde
into
fimul
sbb
data16
mov
loopne
shl
fdiv
ret
push
inc
push
popf
lods
push
daa
xor
sahf
imul
mov
jle
aad
cmc
movs
sar
jae
shl
js
mov
push
aas
outs
ret
inc
push
jbe
rcl
push
les
in
clc
jl
cmp
xchg
mov
dec
std
pushf
sti
ds
mov
and
out
push
xor
retf
retf
lahf
mov
mov
lods
sbb
mov
mov
leave
push
(bad)
pop
inc
sub
push
sbb
sub
(bad)
ja
xchg
mov
in
movs
lea
xor
fnstcw
and
test
xor
xor
mov
pop
fmul
sbb
stc
sbb
jmp
mov
push
xlat
and
leave
test
(bad)
mov
adc
aas
jle
frstor
je
xchg
mov
or
or
sub
fs
sbb
fild
fild
pop
xchg
mov
mov
loope
mov
fmul
outs
setg
or
out
stos
call
dec
sub
addr16
dec
test
mov
nop
jo
retf
pop
out
sbb
lods
sub
jp
out
cmc
mov
mov
push
sti
cmps
std
pop
or
xor
in
or
add
or
xchg
sub
scas
add
rcr
out
(bad)
int
xlat
(bad)
sbb
push
dec
xor
out
fcomip
jmp
out
mov
movs
test
sahf
xchg
xchg
lds
icebp
bnd
push
cmc
cmp
test
std
dec
mov
in
pop
inc
repz
add
push
js
imul
xchg
(bad)
dec
mov
imul
and
repnz
outs
test
inc
push
mov
jb
(bad)
mov
dec
loop
mov
mov
adc
sbb
push
jnp
and
mov
loope
lods
mov
or
adc
cmps
outs
xor
jmp
adc
or
call
loopne
(bad)
push
aam
fwait
loopne
or
repnz
and
jae
mov
(bad)
mov
pop
pop
dec
cdq
pop
hlt
leave
adc
mov
jmp
aad
jge
and
test
imul
out
mov
cmp
xor
lock
popaw
pop
sar
les
mov
scas
xor
outs
ins
xchg
cmp
and
ficom
out
mov
repz
push
push
gs
sbb
sbb
jmp
retf
cmc
mov
lods
(bad)
out
bnd
es
stos
pushf
push
aaa
adc
xor
(bad)
mov
dec
dec
push
aad
(bad)
inc
outs
mov
lods
cdq
cli
hlt
in
add
call
pop
xor
cmp
test
loop
jl
hlt
pop
xchg
fstp
sub
sub
push
mov
xchg
ds
aaa
or
sbb
sti
xor
retf
mov
add
ja
in
pop
test
pop
mov
mov
mov
inc
pop
rol
loope
lods
jg
popa
mov
sub
add
hlt
in
xor
pop
sti
lds
(bad)
retf
lea
dec
retf
ret
call
lods
jecxz
push
adc
(bad)
clc
call
push
and
adc
push
xchg
xchg
jg
xchg
xor
cmp
test
daa
loope
push
nop
pop
xchg
(bad)
sub
(bad)
iret
je
call
xlat
pop
shl
jl
clc
cmps
clc
rcr
push
arpl
or
jne
nop
std
sub
test
lea
hlt
inc
sahf
fsubr
lahf
or
xchg
fst
int
test
sub
sub
cmp
pop
or
cdq
aad
add
int
lods
jno
mov
and
jmp
ret
inc
movs
out
jno
inc
popf
rcr
test
sbb
fbld
mov
push
sub
add
or
int
mov
mov
out
xor
xchg
int
test
adc
xchg
cmps
cmp
pop
dec
jmp
xchg
fld
fisttp
repz
mov
pop
shr
dec
jnp
push
lds
iret
fcomp
je
mov
jae
mov
push
sar
leave
ins
lahf
nop
div
shr
xchg
xchg
pop
fild
push
icebp
rdtsc
ins
cmp
mov
mov
xchg
fbld
or
xor
out
inc
mov
pop
call
ins
or
jo
mov
and
or
mov
jno
jne
pop
iret
sar
mov
and
(bad)
in
dec
inc
sbb
sub
push
stos
push
rcr
inc
pop
sbb
repnz
repnz
push
pop
clc
sbb
or
jmp
icebp
lods
xchg
sbb
adc
mov
lds
inc
pop
jp
sbb
out
int
sbb
ins
jnp
shr
clts
retf
cmp
lahf
inc
fst
mov
ss
jns
arpl
inc
mov
pop
retf
adc
dec
scas
out
xchg
and
movs
rcr
or
aas
aad
jmp
pop
sbb
fbld
arpl
pop
xor
mov
in
scas
retf
lahf
add
daa
repnz
pop
push
mov
adc
and
jl
jle
dec
inc
loope
fnsave
fs
ret
or
add
into
xchg
cmps
pop
xchg
fwait
xchg
jp
ins
dec
pop
xlat
and
js
enter
jp
mov
sbb
mov
adc
imul
sub
push
mov
ror
int
je
loope
mov
sti
inc
repnz
xchg
jp
loopne
inc
cmc
or
stos
push
mov
add
enter
sbb
dec
js
pop
mov
mov
fisttp
cmps
aas
mov
call
or
rcl
dec
cmc
mov
pop
lahf
call
jle
xor
pop
dec
in
mov
push
adc
push
(bad)
adc
out
push
mov
pop
bswap
adc
outs
lods
xchg
jns
fwait
lds
cwde
ins
aam
or
hlt
stc
in
lea
mov
idiv
stos
xchg
push
ins
mov
adc
clc
jnp
jp
add
popa
add
adc
test
int
fidiv
xor
mov
mov
pop
add
mov
popf
xchg
pop
int3
test
inc
pop
pop
xchg
adc
xchg
mov
dec
or
fist
cld
dec
iret
and
je
pop
ror
xor
mov
mov
add
xchg
out
lea
leave
pop
push
sbb
ret
sbb
scas
sbb
(bad)
ror
xchg
outs
xchg
cmp
push
stos
xor
add
pop
in
mov
outs
dec
push
es
cmp
mov
pop
inc
leave
adc
xlat
sbb
mov
xchg
mov
mov
in
lahf
mov
jae
(bad)
ins
and
pop
clc
rcpps
cmp
mov
dec
mov
aam
add
loope
jo
mov
jg
inc
sub
xchg
jb
push
and
ret
iret
jl
mov
xchg
fwait
push
inc
ds
jb
rcl
in
movs
call
push
jmp
fisub
repnz
cmp
cmp
js
mov
mov
(bad)
in
popa
or
dec
and
or
lsl
inc
inc
imul
pop
imul
mov
mov
fst
xor
fsubrp
push
mov
mov
jg
ja
mov
es
mov
xchg
inc
fdiv
pop
sbb
and
outs
into
adc
jecxz
xor
jne
xor
sbb
int3
inc
cld
nop
sbb
mov
push
das
adc
aas
add
(bad)
sar
cmp
scas
cmp
jl
adc
(bad)
icebp
cmp
xor
ret
sbb
pusha
fcom
nop
psraw
outs
add
test
dec
inc
sbb
icebp
pop
and
(bad)
dec
or
sti
sub
mov
xchg
xor
xor
lahf
shl
adc
sub
in
ss
test
jns
xchg
enter
push
aad
jmp
retf
div
dec
retf
push
into
jl
push
sahf
(bad)
mov
inc
add
loop
(bad)
xor
or
das
sub
push
adc
xor
mov
push
lahf
xor
inc
out
jbe
mov
and
xchg
or
jmp
ins
mov
xor
pop
sub
loopne
es
pop
xor
lahf
out
cmps
aad
test
pushf
test
call
aam
mov
mov
hlt
cmc
inc
fisubr
pop
stos
xchg
and
imul
and
xchg
sbb
mov
out
jnp
xor
outs
xchg
xchg
cs
jle
cs
fbstp
(bad)
jmp
sub
pop
movs
std
jmp
ret
hlt
(bad)
and
ret
fisub
pop
cmp
jo
mov
pop
inc
or
dec
inc
pop
inc
jp
inc
out
mov
mov
in
and
xchg
jno
cmps
cs
mov
push
cld
popa
icebp
es
stc
sbb
lds
je
xchg
push
iret
int3
out
add
sbb
hlt
movs
pushf
imul
fs
or
adc
jnp
icebp
scas
dec
push
fistp
ds
bound
es
test
dec
cmc
pop
daa
icebp
push
inc
mov
adc
jg
popf
add
add
add
test
mov
add
mov
xchg
mov
aam
mov
jne
cmps
pop
in
rcl
xchg
jbe
sbb
mov
aad
add
cmc
mov
inc
jl
or
jge
jns
cmps
sub
call
sti
(bad)
push
fdivr
jl
pop
jle
jb
cmc
es
inc
cmp
cmpps
push
cmps
daa
repz
sub
xchg
pop
fs
sub
hlt
sub
mov
rcl
push
cmc
xor
sbb
mov
push
int
jnp
sar
push
or
daa
cmp
mov
pop
(bad)
in
and
repz
mov
shr
mov
cld
shl
jmp
fiadd
inc
inc
clc
push
pusha
test
sbb
lods
stc
mov
jge
sub
cmp
inc
fisub
cmp
mov
clc
push
shl
inc
xchg
(bad)
(bad)
loope
iret
mov
push
emms
lods
sti
ds
loope
inc
in
xchg
lock
je
adc
push
retf
call
xor
xlat
das
int
inc
and
mov
add
cs
js
push
pop
cmps
xchg
popf
enter
shl
std
(bad)
dec
mov
test
ret
jno
push
mov
lds
dec
das
(bad)
shl
inc
mov
mov
and
sub
sbb
das
movs
test
ds
cs
cmc
xlat
adc
rol
out
push
cmp
xchg
cli
test
add
dec
cmps
in
jl
and
cmp
test
(bad)
test
cmps
sbb
cli
inc
int
ja
mov
or
xchg
loope
bound
sbb
jbe
sbb
pop
pop
push
xchg
test
cli
loope
mov
mov
js
pop
and
mov
add
cmps
dec
dec
inc
mov
jl
test
xor
sahf
out
ds
pop
add
xchg
pop
icebp
and
sbb
sbb
mov
test
or
into
push
xor
sub
or
mov
pop
pop
scas
mov
adc
lds
bound
inc
push
mov
aam
and
mov
repz
rcr
jae
(bad)
push
mov
lahf
push
data16
(bad)
mov
mov
rcl
dec
ins
add
push
mov
push
push
mov
pop
dec
rcr
mov
and
mov
mov
neg
fsubr
psubd
pushf
add
jbe
jns
mov
daa
bound
push
jmp
cmp
jp
iret
mov
call
or
cmp
daa
gs
cld
jp
loope
je
inc
push
fidiv
repnz
adc
cmp
inc
(bad)
ss
addr16
loop
imul
mov
dec
out
jp
cs
imul
test
int3
push
ret
and
out
cdq
out
mov
jbe
pop
sbb
adc
jb
jno
jae
aas
test
mov
push
pusha
fld
repz
mov
int
loop
out
push
jecxz
mov
icebp
xchg
in
add
mov
scas
shr
xchg
pop
lds
movs
push
aam
dec
xlat
sbb
mov
nop
or
or
pop
cs
or
xchg
repz
sbb
jl
jmp
pushf
inc
add
retf
push
out
loope
aam
dec
cmps
popa
cmp
addr16
sbb
pop
outs
adc
adc
add
addr16
out
xor
dec
jmp
sar
mov
push
out
xor
sar
sti
or
mov
stc
jmp
push
xor
and
jmp
dec
lock
sbb
(bad)
mov
xchg
inc
arpl
cld
adc
inc
cmps
ja
jnp
or
repz
int
sbb
and
add
push
xchg
loopne
mul
fmulp
nop
scas
cmp
mov
call
push
ret
std
iret
adc
mov
push
and
arpl
(bad)
test
adc
pop
adc
adc
mov
test
xchg
test
imul
in
fstp
out
mov
jns
and
aad
inc
cmp
sub
mov
ret
jno
shl
and
push
mov
cmp
add
mov
mov
add
ror
bnd
jbe
pusha
sub
out
or
cli
mov
jbe
sbb
outs
cmps
sahf
(bad)
pop
out
jg
push
add
push
mov
imul
xor
repz
and
cmp
mov
inc
inc
inc
ins
push
adc
in
iret
xchg
repnz
pusha
jnp
pop
sub
dec
adc
movs
call
jg
mov
ror
sub
push
or
sbb
cmp
xor
nop
enter
jmp
(bad)
mov
ret
xor
xchg
sub
cmp
ja
aad
cmps
push
inc
int3
push
sub
stos
xor
sbb
sbb
sbb
arpl
dec
fisubr
mov
in
movs
xchg
sbb
and
adc
test
test
cmc
mov
mov
outs
dec
cld
push
pop
jbe
arpl
adc
jb
add
jp
adc
mov
bound
in
aad
mov
mov
(bad)
hlt
pop
out
loope
sub
sub
(bad)
repz
add
pop
pop
ret
sbb
(bad)
movs
jb
adc
xchg
test
jae
xor
adc
dec
sub
add
mov
jecxz
fstp
xchg
mov
sub
mov
pop
lahf
lea
out
sbb
ss
bound
ja
test
pop
fs
jg
scas
xlat
lock
fwait
inc
push
sbb
mov
iret
(bad)
(bad)
jns
test
ins
fstp
jecxz
mov
adc
fcmovbe
(bad)
fwait
mov
and
cld
jp
mov
bound
mov
mov
xchg
adc
out
shr
jnp
jbe
test
clc
mov
out
and
fisub
rcr
cmp
dec
std
sub
fisubr
jge
pop
cmp
nop
pusha
mov
pop
push
inc
xchg
and
ja
jmp
ins
jns
call
inc
pop
out
imul
sbb
xor
jge
bound
mov
shl
cwde
icebp
sar
fild
mov
sbb
aas
sbb
push
(bad)
fist
inc
mov
pop
push
aaa
data16
rcr
mov
gs
pmuludq
or
out
inc
lods
js
inc
inc
(bad)
rcr
jb
add
call
aas
pop
repz
out
mov
movs
(bad)
cmp
push
je
ficom
jnp
cmp
xchg
popf
imul
test
lods
stc
jae
cmp
fmulp
aaa
in
sbb
ja
hlt
aas
adc
dec
adc
arpl
ret
pop
mov
xchg
popa
sahf
pop
mov
retf
lahf
jge
sub
cmp
adc
and
addr16
mov
pop
or
mov
pop
aaa
lods
add
je
push
imul
pushf
or
push
cmp
pop
cmp
inc
js
imul
loopne
xor
out
adc
out
adc
pop
push
int
push
adc
push
push
jb
ss
cmp
mov
cmc
rol
sub
test
pop
mov
fldenv
ss
fiadd
movs
aas
test
hlt
imul
inc
rol
dec
ficom
(bad)
pop
or
daa
jno
mov
xchg
inc
jmp
add
add
pop
rcr
lock
fadd
cmp
mov
pusha
mov
jnp
push
or
sbb
add
dec
retf
cmps
push
jl
(bad)
das
hlt
sub
mov
and
pop
xchg
inc
push
mov
mov
jg
sahf
mov
push
test
test
add
xor
loop
rcr
mov
adc
jge
jne
jle
sub
aaa
lods
adc
lahf
cwde
cmp
test
jmp
pusha
sub
shr
push
cmp
movs
sub
gs
xchg
mov
jmp
or
add
pop
rcr
lea
in
leave
imul
fcmovnb
inc
add
mov
jp
retf
add
inc
icebp
into
(bad)
and
fisubr
push
adc
leave
shl
fwait
mov
or
push
mov
fmul
fcom
pop
sahf
push
sbb
in
dec
mov
sbb
add
test
mov
(bad)
mov
fs
xor
sbb
test
jno
leave
retf
cmp
pop
test
jl
adc
mov
(bad)
cmp
das
les
cli
cmp
out
xchg
add
jo
cmp
lahf
ins
aaa
arpl
inc
cmc
sbb
jmp
cs
pop
out
rep
push
rcl
aaa
xlat
repnz
call
scas
fcmove
adc
inc
push
outs
inc
in
ret
(bad)
cmp
loopne
rol
repz
fwait
mov
mov
cld
push
mov
cmps
push
inc
jns
(bad)
es
mov
test
icebp
add
aaa
out
pop
or
mov
es
adc
pop
cld
mov
test
dec
push
outs
(bad)
sbb
xchg
sub
dec
test
mov
out
sti
adc
mov
outs
cmp
fmul
or
outs
sbb
scas
xchg
xchg
adc
je
test
mov
fadd
mov
adc
and
mov
lds
sub
test
icebp
repnz
out
mov
jo
or
jmp
sub
and
xlat
outs
aas
ss
ret
stos
mov
fsubr
sub
rcr
push
jmp
in
xchg
addr16
fwait
movs
and
(bad)
dec
mov
xchg
mov
mov
jge
fnstsw
or
pop
movs
sbb
ja
fisub
scas
mov
lea
sbb
inc
mov
movs
(bad)
jl
adc
iret
jb
xlat
mov
popa
lds
inc
push
sbb
jnp
shl
stos
xor
fcom
shl
sub
ins
jmp
in
cmps
jb
xchg
retf
push
pop
and
ds
xchg
push
mov
outs
push
arpl
pop
xlat
mov
pop
xor
sub
mov
popa
mov
in
mov
jle
rcl
ja
mov
or
mov
loop
sbb
popf
les
ret
inc
or
mov
outs
sti
cmp
mov
imul
out
fcomp
mov
mov
call
fistp
jl
nop
push
mov
movs
xchg
lea
mov
or
push
add
inc
push
xor
movs
les
pop
stos
sbb
ror
add
pop
arpl
jae
arpl
div
repnz
dec
cmp
ret
loop
inc
mov
fdiv
hlt
scas
add
mov
jmp
mov
rcr
nop
ins
xor
lods
mov
add
out
in
inc
adc
ror
out
popa
pop
or
xor
loope
pop
mov
dec
shl
loopne
out
sub
sub
pusha
cmovs
and
mov
push
lods
in
(bad)
push
xor
repz
mov
or
sub
cdq
or
inc
fstp
mul
xchg
arpl
out
cmc
adc
or
movs
push
or
and
jp
or
sti
lods
inc
gs
ret
and
xor
clc
xor
fyl2x
dec
push
icebp
imul
(bad)
in
or
fist
test
or
sbb
dec
movzx
cs
lea
add
ds
mov
mov
out
(bad)
xchg
dec
popf
addr16
(bad)
leave
sbb
mov
in
fs
add
daa
ja
push
clc
idiv
aam
pop
inc
dec
jmp
jl
cmp
fwait
sub
aad
dec
mov
aas
sub
xchg
sub
push
dec
repz
xor
cmp
sbb
xchg
xor
scas
mov
bound
fidiv
mov
ins
or
xor
std
xchg
cmp
icebp
jns
or
push
jb
pop
div
jmp
mov
sub
mov
out
shl
sbb
test
xchg
sar
test
adc
cs
mov
mov
jns
push
pop
and
ret
ret
or
and
mov
js
cmc
fistp
jl
xor
push
push
jno
add
pop
mov
mov
pop
mov
loop
push
mov
pop
fadd
loope
xchg
sub
pop
stos
(bad)
rcr
adc
xchg
mov
cmps
iret
cmp
mov
mov
add
inc
sbb
adc
daa
mov
cmp
or
fisttp
outs
dec
pushf
inc
shl
(bad)
les
xchg
rol
jp
jle
sbb
or
push
and
pusha
dec
xor
popa
repnz
loopne
pop
ja
xchg
in
out
xor
dec
pop
ja
push
daa
push
pop
ja
fs
hlt
ret
dec
xor
sub
jno
in
mov
sahf
push
xor
aas
xchg
and
mov
outs
jbe
test
sahf
(bad)
pop
inc
gs
sub
fst
dec
test
push
or
sahf
iret
inc
js
(bad)
mov
fist
ins
mov
(bad)
jp
mov
inc
repz
stos
cmp
ret
dec
xor
jle
xchg
sti
dec
cmp
xchg
cmp
xchg
aas
mov
cmp
inc
pop
jno
in
inc
xchg
xchg
loopne
(bad)
test
popf
repnz
cmp
sub
inc
hlt
aad
inc
ins
mov
adc
or
dec
push
(bad)
dec
push
mov
xor
mov
mov
jno
pushf
test
sbb
adc
loop
fisub
jbe
dec
inc
stos
ins
imul
jmp
jmp
repnz
xor
js
into
out
push
pop
xchg
xchg
and
outs
nop
dec
rcr
pop
les
cmc
lea
popf
ret
loop
mov
cmc
add
adc
inc
push
and
jmp
cmps
call
jg
int
cld
hlt
inc
rol
shl
or
imul
pop
rol
mov
mov
mov
xchg
pushf
or
mov
xor
ins
xor
fisttp
jns
mov
fiadd
mov
or
adc
mov
retf
xor
sbb
scas
xchg
inc
xchg
fs
xchg
sub
stos
lock
cmp
mov
mov
push
xor
cmp
or
xchg
mov
inc
sbb
mov
scas
(bad)
jl
sahf
ds
or
or
fist
dec
repnz
test
pop
jl
neg
jp
jge
fnstsw
jbe
sbb
ret
cs
cld
sub
jl
xlat
adc
shr
test
mov
mov
jno
aad
ror
xchg
adc
mov
je
imul
sbb
sbb
adc
dec
inc
jnp
jl
icebp
xchg
fucomp
cmp
sbb
(bad)
jl
in
outs
xchg
ss
push
jmp
bound
mov
jnp
(bad)
xor
fst
cmps
inc
jne
xchg
cmp
mov
jo
aad
outs
xchg
jns
jge
cwde
jecxz
or
movs
inc
add
int3
sbb
scas
inc
std
mov
inc
pop
jbe
push
pop
in
and
test
sbb
add
shr
xor
xor
nop
sub
test
scas
push
mov
outs
cmps
sub
loope
add
fwait
test
push
js
(bad)
mov
mov
jge
mov
xor
mov
mov
xchg
shl
add
sub
inc
mov
cmps
mov
cmps
(bad)
xchg
hlt
jl
stos
push
or
fild
jecxz
jmp
push
push
cmp
fist
or
jo
inc
adc
fsub
mov
das
gs
js
leave
pop
mov
cmps
sub
or
fisubr
out
xlat
mov
add
mov
xor
clc
or
mov
loop
scas
sub
xchg
sti
xor
(bad)
mov
fiadd
push
std
xchg
jb
mov
test
cwde
pushf
pushf
lahf
and
int
jp
ja
add
pop
mov
gs
jbe
xchg
inc
inc
mov
gs
sbb
mov
mov
retf
mov
(bad)
fsub
xor
inc
xchg
xchg
mov
cmps
ret
in
mov
(bad)
fcomp
pop
ret
or
es
in
inc
sbb
sub
shr
rol
popa
std
daa
arpl
mov
int3
aas
aaa
outs
jmp
in
sub
out
xchg
cmp
dec
mov
movs
jb
cmp
ins
inc
push
inc
inc
mov
ror
dec
xchg
ins
push
jp
shl
and
(bad)
mov
nop
push
out
ja
jnp
leave
ret
ret
mov
sbb
xor
ret
clc
xor
mov
fwait
push
cmps
pop
mov
and
lock
and
xchg
rcr
frstor
mov
xor
xor
gs
call
shl
test
and
iret
fisub
and
inc
inc
out
sbb
pushf
xchg
or
sbb
pusha
es
jno
stos
out
sbb
jbe
cmp
cdq
xor
xor
test
push
or
les
cli
dec
shl
pop
cdq
mov
aam
cmp
mov
mov
not
add
push
inc
push
cld
icebp
xchg
das
mov
(bad)
int
and
fwait
or
jge
xor
popa
imul
ret
push
ret
imul
push
icebp
push
movs
mov
mov
xchg
jge
add
and
(bad)
nop
sbb
or
mov
cmp
xlat
lods
mov
out
ret
sar
loop
les
rol
cmps
sbb
pop
cmp
mov
mov
loopne
xor
xor
mov
jge
cmps
out
jge
mov
cmp
dec
xor
ret
sub
das
or
xlat
pop
mov
retf
jmp
mov
push
cmp
sub
dec
adc
ins
and
mov
es
mov
int3
and
test
add
xchg
lea
sub
cs
ss
jg
push
inc
loop
add
lea
mov
inc
dec
outs
gs
mov
dec
mov
cmp
ds
fs
push
adc
loope
mov
ins
mov
jnp
je
cmps
jle
adc
jns
js
or
nop
imul
xlat
lods
rcr
xchg
sbb
push
and
add
and
push
dec
add
daa
ror
mov
mov
(bad)
imul
xor
(bad)
xchg
inc
int3
pop
cli
stc
mov
sbb
dec
rcr
xchg
push
paddq
ins
imul
aas
js
and
aas
inc
das
mov
movs
clc
call
(bad)
retf
pop
out
fmul
push
sbb
std
sbb
fld
gs
ret
pop
out
arpl
or
sbb
inc
add
inc
cdq
rol
pop
mov
push
repnz
dec
adc
js
jo
mov
retf
les
push
aam
dec
jmp
and
sti
dec
test
mov
(bad)
mov
sahf
pop
cmp
mov
inc
add
sbb
mov
sub
stc
sub
not
jge
cdq
mov
pop
cmc
ret
es
mov
xor
xor
jmp
mov
mov
dec
imul
div
mov
jno
int
mov
imul
dec
jae
inc
pop
repz
jmp
adc
sub
movs
pop
outs
add
stc
xchg
shr
jno
js
mov
jae
sbb
jne
sbb
fs
push
cld
fmul
sbb
cs
xchg
cmps
ret
adc
lods
fwait
inc
ins
les
pop
in
adc
ret
sub
dec
call
fdivr
and
xor
les
popf
lds
out
mov
sub
mov
pop
call
push
xchg
imul
mov
mov
aas
repnz
cmp
cmp
xor
test
mov
and
xchg
lods
pop
(bad)
sbb
(bad)
and
or
xchg
sbb
test
lock
adc
pusha
iret
jmp
pop
push
mov
test
in
lea
add
cld
arpl
loopne
xchg
xchg
push
pop
mov
jle
add
dec
dec
mov
movs
mov
push
sahf
pop
mov
mov
sub
inc
add
add
jmp
fld
call
cdq
push
sub
xchg
sbb
call
les
dec
adc
imul
mov
jae
sahf
pusha
cmp
jmp
aam
in
pop
xor
mov
test
pop
ss
aam
test
in
fwait
and
adc
jbe
adc
(bad)
shr
jno
xchg
push
aas
je
cwde
hlt
test
cdq
xchg
ds
inc
retf
push
inc
pop
mov
or
inc
packsswb
ficomp
adc
mov
pop
push
xchg
sub
pop
dec
push
cmp
xor
xlat
(bad)
fisub
sbb
sti
retf
repz
and
inc
daa
and
add
retf
loope
pop
dec
mov
(bad)
out
rol
fcomi
int3
mov
sar
cli
adc
int3
jo
pop
ret
mov
jb
xchg
call
sub
call
pop
lahf
xor
jnp
sub
push
pop
hlt
rcl
loop
sti
fsubr
xor
(bad)
movs
dec
bound
pop
push
fld
mul
mov
loopne
jae
mov
lock
mov
pop
push
xor
mov
inc
cmps
neg
pop
xlat
xor
cmp
repnz
cmps
adc
xchg
out
cli
sbb
pop
xchg
xchg
or
push
(bad)
cld
pop
int
xchg
and
mov
pushf
fwait
adc
xchg
loope
(bad)
(bad)
xchg
add
mov
xor
cld
lahf
sub
stc
out
into
mov
jmp
fidiv
cmp
pop
and
or
leave
pop
inc
sbb
pop
dec
dec
cld
xchg
aas
or
or
sub
(bad)
fadd
ins
push
imul
dec
in
and
inc
sub
icebp
xchg
xchg
mov
xor
arpl
outs
fdiv
jge
xchg
aas
push
mov
clc
push
mov
out
xor
dec
pop
ss
leave
inc
das
jg
xchg
and
mov
aad
(bad)
mov
cmp
cmps
rcr
ret
or
in
into
jne
es
stos
inc
imul
(bad)
jl
call
inc
mov
jp
and
daa
mov
mov
mov
sbb
scas
and
imul
hlt
dec
sahf
mov
fidiv
aas
add
popa
gs
repz
pop
retf
push
mov
out
retf
ffreep
outs
or
and
ret
jb
sub
xor
add
mov
adc
dec
and
add
xchg
je
pushf
mov
mov
sbb
data16
test
jecxz
scas
clc
mov
ins
push
cmc
leave
pop
sbb
shl
cmp
mov
hlt
jle
shl
into
or
test
and
test
xor
js
mov
je
cld
mov
mov
ret
mov
or
adc
push
icebp
pop
(bad)
pop
jae
ins
sbb
call
mov
dec
and
xchg
xor
je
cld
pop
(bad)
ja
mov
pop
and
es
cmc
scas
lds
mov
rol
cmps
cmc
cmp
cmps
sub
out
push
jp
dec
jns
or
pop
sbb
(bad)
(bad)
aaa
sub
sub
(bad)
inc
pop
out
fwait
mov
push
movs
jb
mov
jle
dec
push
mov
mov
imul
nop
sbb
fmul
lea
int
mov
aam
push
mov
enter
adc
inc
push
pop
add
imul
mov
stc
sub
cmps
cmp
pushf
sbb
xchg
cmp
xchg
shl
fild
scas
xchg
aas
xor
pop
sbb
push
fsub
inc
adc
xchg
jle
jmp
dec
(bad)
mov
mov
pop
mov
mov
(bad)
mov
das
xchg
push
mov
rcl
add
cs
imul
repnz
pop
xchg
lock
(bad)
or
mov
push
bound
mov
arpl
into
cmc
dec
mov
xor
cmp
inc
iret
loop
mov
pop
neg
add
mov
push
inc
stos
es
mov
(bad)
ins
mov
mov
add
cmp
fsubr
js
inc
outs
psubb
mov
sbb
and
jno
cmp
mov
scas
jg
scas
call
bts
push
xor
into
jp
stc
cmps
sbb
mov
sahf
xor
stc
arpl
and
data16
psrlw
data16
scas
lahf
add
xor
xor
jge
test
jmp
jmp
ror
dec
sahf
(bad)
aas
sbb
jae
xchg
mov
pop
lds
clc
pop
lea
mov
push
popa
push
test
sub
adc
inc
retf
(bad)
mov
mov
aaa
sub
movs
sub
das
(bad)
retf
lods
and
sbb
lods
ds
adc
js
xor
leave
sub
inc
nop
loop
lahf
(bad)
jl
sub
(bad)
mov
lahf
push
test
mov
xchg
je
lock
mov
jno
mov
xor
scas
cmc
lds
in
clc
test
add
dec
jo
js
(bad)
xor
lahf
es
xor
scas
push
fs
bound
in
xor
lea
xchg
mov
addr16
in
dec
test
pop
dec
movs
mov
pop
xchg
rcl
loop
pusha
sbb
xor
rcr
mov
mov
jae
mov
push
gs
daa
cdq
pop
jbe
(bad)
pop
gs
mov
dec
adc
loop
xchg
in
inc
jmp
dec
add
cmp
mov
(bad)
fistp
and
cmp
pushf
push
sar
lock
repz
out
add
loop
sti
xchg
neg
ret
jp
(bad)
sbb
ins
or
or
loope
ja
jbe
pop
call
test
ja
rcr
jbe
dec
stos
mov
dec
fidiv
fisubr
retf
(bad)
mov
push
add
mov
cwde
sub
mov
lock
ins
ds
dec
push
pop
test
div
xor
jp
push
inc
xor
call
movs
jno
in
xor
in
dec
mov
sti
imul
push
dec
inc
push
mov
int
stc
ret
push
mov
xor
xchg
test
ds
outs
sub
movs
xchg
push
xor
outs
cdq
sbb
mov
sahf
cmp
mov
int3
jp
adc
adc
mov
retf
ret
add
inc
sub
dec
(bad)
pop
pop
sar
test
push
mov
cmp
addr16
loopne
inc
mov
sub
sbb
outs
(bad)
call
loope
sbb
mov
(bad)
xchg
mov
aam
adc
ds
or
in
sbb
inc
(bad)
jae
add
cmp
retf
in
jecxz
xchg
sbb
aad
push
pop
es
icebp
cmps
pop
xchg
enter
push
aam
popa
mov
mov
inc
in
xor
adc
nop
out
jae
mov
mov
adc
outs
push
and
in
les
sbb
fistp
imul
cmp
dec
inc
ucomiss
in
out
fstp
enter
(bad)
retf
aaa
jb
fadd
xchg
das
aam
div
lea
sub
ror
pop
mov
xor
push
cdq
popf
popf
mov
xor
push
test
call
sub
sahf
outs
mov
repnz
adc
shl
inc
or
je
push
and
cli
repz
aad
adc
dec
retf
stos
sub
jl
out
push
or
rol
and
jbe
adc
or
cld
ss
jmp
add
dec
into
xlat
mov
xabort
mov
ds
mov
mov
in
popa
pusha
mov
jl
leave
and
dec
das
push
cmc
jae
loopne
cwde
push
cmc
fsubr
and
mov
or
lds
xor
lods
and
cmps
dec
push
fmul
pop
sbb
jo
sbb
pop
test
cmp
xchg
dec
and
mov
std
mov
jge
jl
mov
jns
or
adc
int
rcl
cmps
pop
dec
int
jle
das
mov
push
out
xchg
xor
sbb
xor
mov
xchg
mov
cmc
jns
inc
jne
aaa
rcl
sub
and
push
je
mov
repz
movs
xor
loopne
add
xor
inc
popa
pop
stos
xchg
dec
or
pop
push
inc
(bad)
mov
pusha
inc
sar
jmp
xchg
and
jo
jns
lods
mov
push
adc
xor
in
push
pop
add
out
mov
or
test
push
push
ins
inc
mov
cmp
dec
shr
(bad)
sub
push
sbb
lock
stos
inc
cmps
fidiv
adc
fcom
(bad)
fldenv
leave
sub
std
pop
loop
mov
jnp
and
push
dec
push
push
and
gs
or
scas
jp
dec
xchg
mov
mov
inc
arpl
push
(bad)
outs
arpl
(bad)
mov
sti
dec
fiadd
mov
fs
ds
cmp
mov
dec
arpl
inc
or
push
and
sub
rcl
inc
add
retf
int
pop
test
scas
push
xchg
and
not
mov
add
mov
bound
out
mov
nop
pop
imul
mov
loop
cmp
test
ins
pop
jo
add
add
sub
sub
inc
(bad)
pusha
cmp
out
sbb
in
dec
(bad)
fdivr
nop
inc
ins
mov
and
push
out
(bad)
mov
sbb
add
mov
mov
and
sar
add
retf
or
icebp
sub
es
icebp
pusha
stos
je
or
pop
fcomip
sbb
cmp
jmp
std
out
loope
mov
xchg
push
cmp
lock
mov
sbb
fisubr
cs
cmp
fwait
jecxz
jb
int3
pop
aaa
pop
mov
popf
fbld
dec
in
cmp
idiv
pop
add
pop
std
loop
xchg
jg
lahf
fnstsw
xchg
cli
xchg
gs
cmp
mov
lea
push
mov
in
adc
(bad)
mov
mov
mov
shl
sbb
pushf
cmps
sbb
lods
lock
adc
stos
icebp
call
cmp
jp
outs
xchg
sbb
in
push
aaa
(bad)
cld
inc
xchg
mov
sub
xlat
cs
(bad)
xchg
push
fistp
or
xchg
jno
pop
outs
fcomp
ror
(bad)
jmp
jmp
movs
pusha
sub
dec
push
cwde
ss
dec
ja
hlt
gs
push
pop
cwde
ret
loope
mov
dec
jg
pop
inc
mov
addr16
xor
push
test
xchg
stos
jno
fistp
pop
scas
jle
mul
(bad)
int3
aam
cdq
xchg
in
add
mov
hlt
mov
add
repz
jecxz
pop
leave
inc
cmp
loope
and
imul
imul
fwait
sbb
or
retf
jg
mul
fs
dec
int3
ret
in
in
mov
mov
or
mov
cmp
push
mov
fpatan
jge
cmc
cli
test
push
pop
inc
test
or
stc
adc
test
sbb
scas
jbe
outs
jmp
jle
push
test
(bad)
ins
push
retf
add
pop
or
cmps
dec
test
xchg
xor
mov
movs
in
sub
fidivr
test
movs
cmp
rcr
mov
mov
(bad)
push
mov
sbb
jno
(bad)
aam
add
test
adc
in
outs
in
push
fdiv
jmp
pop
ds
lea
(bad)
and
add
push
xchg
push
lods
jmp
jmp
pop
xor
add
daa
mov
jmp
mov
cmp
stc
xchg
iret
adc
repz
push
enter
cmp
cwde
test
arpl
int3
push
xor
out
fistp
xchg
mov
fmul
ret
add
dec
push
aam
inc
or
into
jmp
daa
cmp
dec
pop
stos
jp
imul
pop
inc
add
sbb
rcr
sbb
movs
test
inc
ret
es
push
clc
fadd
xor
pop
jmp
shl
aas
ins
inc
loopne
add
fsubrp
cmps
or
outs
icebp
add
pop
cmp
shl
inc
cmp
xor
inc
(bad)
sar
pop
push
arpl
mov
mov
push
imul
sar
outs
jle
ins
sub
in
push
xchg
xchg
xor
xchg
sbb
aad
xchg
pop
sbb
adc
and
dec
mov
js
sub
(bad)
dec
outs
arpl
and
enter
stc
xchg
add
popf
fwait
or
cs
push
ret
sub
xor
addr16
sub
xor
movs
inc
int
fld
test
inc
jno
pop
xor
sub
jg
lock
push
xor
or
out
out
stc
loope
cmp
push
add
mov
add
xchg
dec
and
pop
aad
mov
ins
cwde
ret
into
or
pushf
pop
inc
shl
or
adc
cmp
lahf
(bad)
mov
out
mov
pop
lods
lock
cmc
mov
fwait
mov
pop
loope
inc
add
scas
jl
clc
sub
xor
ret
push
and
push
or
jnp
into
call
sbb
ficom
cmp
push
mov
inc
push
(bad)
push
(bad)
dec
cmp
dec
mov
mov
stos
cmp
neg
not
movs
mov
out
and
xor
mov
mov
js
inc
adc
xor
adc
stos
mov
fdiv
cld
sub
lds
xor
ret
out
sub
sbb
adc
mov
nop
cld
dec
(bad)
push
retf
mov
(bad)
cmp
sti
mov
inc
mov
aaa
push
std
sub
mov
adc
ds
xchg
ss
rol
xor
mov
adc
jp
mov
or
cmps
std
and
mov
jns
jle
loope
retf
push
jp
rcl
dec
jmp
xchg
mov
fnstcw
int3
out
fwait
leave
pushf
popf
jp
fimul
jmp
push
nop
add
cdq
loopne
xor
gs
add
sti
dec
imul
jo
out
add
(bad)
cmp
jp
inc
or
retf
inc
mov
test
jg
pushf
ins
xchg
cmp
scas
xchg
(bad)
mov
adc
fsubr
daa
test
movs
sub
ret
ja
iret
das
or
sub
or
adc
sub
push
cmc
or
js
jmp
popa
xchg
mov
xor
addr16
cdq
adc
idiv
ins
xchg
test
gs
lods
cmps
pushf
loopne
mov
push
test
sti
push
scas
(bad)
addr16
ds
push
les
sub
mov
adc
imul
mov
leave
test
cmps
jnp
iret
jmp
adc
test
cmp
or
leave
std
dec
xor
aas
and
jbe
mov
fsub
mov
fsub
xchg
xor
(bad)
jmp
xor
sahf
les
add
mov
lods
jmp
or
lods
mov
repz
xchg
xchg
movs
std
cli
ficom
add
lea
push
in
mov
scas
out
jbe
dec
pop
pushf
inc
mov
inc
(bad)
(bad)
subps
ds
fs
pop
mov
inc
mov
xchg
les
(bad)
and
fiadd
rol
rcr
mov
sbb
xchg
aas
fistp
(bad)
aaa
jnp
mov
sbb
mov
rol
xchg
and
add
cmc
test
pop
in
jo
sbb
(bad)
clc
xchg
aad
and
inc
mov
cmps
scas
mov
cmp
and
fisttp
add
jg
out
inc
add
sbb
pop
(bad)
loopne
mov
mov
repnz
(bad)
fidiv
pop
push
add
sti
movs
mov
popa
mov
loop
cli
fcomp
push
in
and
(bad)
js
fiadd
or
imul
and
cmp
mov
sub
addr16
pop
xchg
xor
pop
rol
div
loope
cmp
push
sub
call
mov
dec
(bad)
rcr
dec
or
sub
jo
(bad)
jns
imul
or
push
fistp
push
push
mov
int3
cmp
sbb
inc
cld
aaa
iret
movs
dec
mov
xchg
adc
push
test
ret
addr16
cmc
ss
adc
jne
ret
fcmovbe
retf
dec
xchg
aad
ins
imul
xchg
aas
test
or
and
xchg
cmp
add
in
enter
inc
or
ds
test
jmp
shr
cmp
cmp
ret
or
mov
xchg
call
call
or
mov
adc
sbb
mov
cmp
or
jb
data16
loope
push
cmp
dec
into
shr
pop
outs
or
test
pop
and
verw
fs
push
loopne
test
pop
outs
clc
(bad)
sar
mov
jne
fnstcw
call
and
mov
sahf
xchg
sbb
push
cmps
movs
ret
(bad)
repz
adc
rcr
inc
jl
cmp
pushf
in
cmp
and
mov
pop
loope
and
push
mov
fwait
add
mov
cmps
lea
cmp
inc
mov
pop
nop
adc
and
shl
cmp
mov
shr
lods
icebp
rcl
mov
(bad)
fmul
fidiv
adc
daa
lods
mov
mov
cmp
outs
and
or
int3
jmp
(bad)
dec
daa
icebp
and
fistp
mov
inc
fadd
push
sbb
repnz
cmc
(bad)
repz
sbb
sbb
out
mov
and
pop
sub
push
lahf
add
sub
es
adc
dec
lods
push
inc
jge
push
mov
push
mov
je
pop
es
les
xchg
jbe
clc
loopne
add
call
inc
adc
jmp
mov
out
push
jge
mov
dec
scas
jno
mov
push
add
sbb
and
cmp
mov
mov
out
sub
(bad)
nop
(bad)
shl
cdq
mov
fidiv
popa
and
or
jo
retf
cmp
xor
sub
push
cwde
sti
dec
lods
jmp
mov
mov
movs
std
jmp
repnz
imul
test
call
mov
jge
dec
fucomp
add
pop
xchg
es
movs
pop
(bad)
movs
mov
retf
push
fwait
(bad)
retf
daa
push
mov
mov
int
repnz
fistp
mov
inc
mov
or
into
xor
ret
bound
clc
and
cmp
and
fist
xchg
sbb
sbb
push
xchg
cmp
mov
add
pop
sbb
scas
ja
(bad)
in
push
pop
(bad)
int
or
push
cmp
cmp
int3
(bad)
cmp
sbb
rol
(bad)
add
jmp
add
cli
cld
mov
or
mov
sbb
lds
shl
fcmovbe
and
dec
adc
jae
clc
dec
(bad)
pop
cmp
(bad)
mov
mov
std
dec
push
xor
xchg
call
cmp
icebp
cmp
and
dec
fidiv
shl
rcl
add
push
(bad)
punpckldq
ret
call
ds
movs
push
int3
rcl
jp
daa
test
push
xchg
fdivp
fs
outs
jge
jmp
fdivr
jmp
or
pop
imul
ror
adc
pop
sub
dec
mov
fstp
loope
mov
push
inc
jge
add
xor
ret
adc
in
mov
mov
lahf
lods
mov
sbb
aad
test
xchg
inc
repnz
movs
and
add
(bad)
(bad)
sar
push
pop
cs
sbb
popf
popa
mov
ss
outs
or
mov
or
dec
mov
into
aas
mov
repz
sbb
ins
mov
and
mov
xchg
mov
jge
sahf
(bad)
out
jmp
and
pop
xor
not
es
fs
mov
shl
mov
(bad)
jo
in
mov
movs
retf
sbb
add
xchg
or
fndisi(8087
les
jg
jle
gs
pop
push
aam
cmps
and
rep
out
push
movs
sbb
test
sub
pop
mov
lahf
mov
fstp
pop
push
loop
retf
pop
mov
pop
loop
inc
jge
ret
jbe
add
jmp
in
push
and
test
js
movs
xor
(bad)
fistp
mov
sti
in
sbb
mov
adc
push
ret
mov
(bad)
int
fst
inc
rcl
in
(bad)
jle
mov
push
dec
not
pop
mov
retf
push
mov
mov
dec
dec
jno
mov
jle
aaa
add
pop
push
cli
addr16
push
add
into
xor
adc
fistp
mov
nop
ins
sub
stos
sub
iret
xchg
and
cdq
fisub
pop
jo
xor
outs
lahf
sbb
adc
(bad)
push
cld
aaa
push
inc
ret
and
sar
mov
fld
mov
add
in
fwait
adc
fs
mov
enter
shl
fsub
jp
add
ins
lock
fs
gs
sbb
inc
leave
or
or
sar
enter
dec
mov
scas
and
adc
ss
pop
mov
iret
(bad)
push
mov
lods
cdq
xor
cmp
clc
sub
cmp
pop
mov
scas
test
xchg
(bad)
sub
cs
lods
pop
mov
mov
adc
pushf
mov
pop
jmp
or
test
jl
mov
dec
aad
lock
add
clc
jns
fcom
dec
cmp
in
cli
push
and
push
sahf
sub
fld
pushf
test
shl
inc
xchg
int
cdq
leave
adc
and
mov
adc
mov
pushf
(bad)
sbb
xchg
or
sbb
cli
dec
add
and
xor
test
pop
pop
fwait
push
sbb
sub
cmp
and
jb
push
jmp
sar
cwde
xchg
sbb
arpl
icebp
outs
retf
or
and
sbb
adc
jno
jbe
mov
mov
push
(bad)
cmc
push
dec
jp
xchg
test
mov
in
jmp
in
xchg
aam
ins
pop
ds
add
sub
cs
pop
xor
(bad)
out
jge
fsub
cmp
xchg
cld
mov
mov
jns
or
in
adc
js
mov
dec
test
int
pushf
ss
int
sub
lea
aas
(bad)
mov
test
jmp
pop
lea
ficom
push
mov
cmps
jle
movs
ss
into
dec
rol
jns
and
jno
jmp
into
(bad)
adc
or
cmps
ds
mov
push
xlat
fmul
lahf
jae
mov
mov
mov
cmc
sbb
jmp
in
outs
icebp
bound
jge
hlt
fild
loop
sbb
cdq
in
cmps
adc
fnstenv
lds
add
mov
mov
push
(bad)
xchg
jne
mov
xchg
nop
ins
jbe
xchg
adc
pop
push
push
and
loop
or
mov
aaa
rcl
jnp
push
js
je
push
or
add
aas
std
inc
inc
push
mov
inc
fs
sub
jns
addr16
inc
ret
ss
mov
pop
xor
mov
adc
fild
aaa
(bad)
jb
sti
jo
add
loop
jb
mov
(bad)
push
loop
pop
and
xor
mov
and
mov
pop
sbb
push
out
mov
test
cld
into
fs
fidivr
push
aam
jnp
mov
pop
jg
test
call
or
cdq
add
iret
adc
mov
pop
out
fwait
or
loope
popf
mov
fidivr
xor
adc
mov
inc
outs
ffree
xchg
call
adc
adc
xchg
mov
lock
or
sub
ret
jne
pop
repz
(bad)
cmc
movs
out
inc
add
int
xor
lods
jb
adc
xor
adc
cmp
push
and
xchg
out
inc
pop
pop
lods
dec
iret
mov
xchg
pop
inc
inc
(bad)
xchg
mov
je
loopne
sub
outs
repnz
arpl
cs
add
mov
aaa
and
ror
shr
shl
ret
pop
pop
mov
mov
pop
xor
pop
ins
or
mov
sbb
shl
dec
lds
pop
dec
dec
js
mov
push
push
push
xchg
lds
xor
(bad)
push
sub
xchg
cwde
xchg
clc
fld
popa
test
outs
movs
dec
test
dec
(bad)
xor
ds
push
fistp
inc
xchg
jmp
cmp
and
aad
jno
cmp
pop
es
mov
jae
(bad)
adc
xor
int3
mov
or
jnp
sbb
inc
inc
sub
div
fwait
scas
push
hlt
mov
not
loopne
call
loope
pop
jle
fld
test
pop
shl
ds
cmp
scas
jle
sbb
sahf
ret
pop
jo
xchg
sbb
mov
fldcw
push
addr16
mov
pop
cli
xchg
lock
mov
addr16
into
inc
ja
adc
jp
clc
jno
sbb
mov
add
cmps
in
xchg
int3
xor
iret
xchg
in
popf
test
popa
jg
cmp
test
lods
adc
mov
push
arpl
fistp
inc
sub
hlt
les
jle
dec
adc
arpl
ds
ds
(bad)
push
mov
sbb
jp
lahf
outs
aad
fiadd
add
pop
and
shl
outs
js
mov
retf
cmp
pop
inc
bnd
jnp
pop
cld
adc
fwait
mul
inc
jg
adc
jge
fstp
int
loopne
clc
popa
test
inc
shl
retf
dec
popa
adc
neg
in
pushf
cmp
dec
adc
mov
(bad)
fistp
idiv
pop
fst
int3
test
fcomi
les
inc
(bad)
test
mov
sar
in
or
cld
ins
aas
imul
or
into
loopne
push
leave
adc
push
or
(bad)
repz
out
rcr
mov
aad
xchg
dec
push
in
aad
shr
cmp
push
imul
sub
call
cmps
jno
out
test
mov
jg
inc
jp
and
sub
sub
retf
adc
repz
out
push
leave
fs
xchg
fild
int3
cld
mov
pusha
jmp
lds
xchg
mov
mov
or
movs
cmp
inc
out
mov
mov
push
std
sub
out
fld
stos
ins
cli
shl
lods
cmp
jo
stos
mov
xchg
idiv
outs
test
and
pop
inc
inc
dec
addr16
pushf
cmps
hlt
mov
adc
lods
xor
xchg
cmc
(bad)
jl
dec
pop
xor
imul
pusha
ds
and
rdmsr
aam
mov
(bad)
dec
push
add
and
es
(bad)
outs
ja
pushf
mov
inc
imul
enter
jecxz
push
imul
adc
jmp
dec
(bad)
inc
jmp
scas
cmp
push
mov
push
and
mov
cmp
xchg
jmp
leave
div
inc
push
inc
sti
aas
xchg
(bad)
push
pop
push
push
call
popf
fiadd
jp
sahf
mov
mov
ins
cmp
rcr
rol
leave
dec
xor
out
in
mov
shl
add
aaa
fsubr
mov
stc
ja
jo
ret
js
stos
add
jmp
int
jp
adc
pop
or
add
adc
outs
adc
push
xchg
mov
in
cwde
jg
and
cmp
adc
sub
out
jmp
adc
(bad)
(bad)
cs
lods
cmp
popa
scas
(bad)
icebp
outs
mov
shl
inc
push
out
ins
call
test
mov
push
inc
(bad)
mov
lahf
dec
xchg
inc
push
std
popf
out
adc
shrd
add
cmps
pop
ret
ins
pop
xor
pop
jmp
push
mov
test
pop
cmp
cli
pusha
call
(bad)
out
push
inc
js
popf
add
cmp
push
scas
retf
push
hlt
icebp
jo
sbb
sub
ins
push
fnstsw
xchg
xor
dec
int3
xchg
aam
jbe
pushf
out
lods
mov
out
pop
xor
pop
fwait
dec
gs
xlat
(bad)
das
push
and
call
inc
jnp
push
and
sub
mov
stos
movs
inc
clc
cs
sbb
aad
mov
jg
cmp
cmp
xchg
out
int
or
imul
sbb
out
fs
aad
inc
lock
(bad)
(bad)
jg
adc
in
scas
adc
aad
shr
pop
push
out
cmps
sub
jnp
cmp
push
test
jle
test
jae
leave
call
cmp
aad
push
loopne
adc
js
mov
and
sub
(bad)
mov
cmps
dec
sub
ds
cmp
nop
mov
(bad)
mov
xchg
adc
or
and
jae
cmp
mov
sub
in
jmp
mov
mov
sub
or
repnz
mov
sbb
rcr
xchg
jmp
xchg
ret
shr
leave
add
ins
sub
sbb
shl
sti
movs
jge
dec
push
jbe
or
or
dec
in
or
mov
pop
test
mov
xchg
mov
imul
sbb
pop
pop
scas
pop
xchg
popf
jns
sbb
icebp
pop
or
inc
sbb
mov
add
inc
cli
nop
frstor
sbb
mov
mov
or
jp
in
aas
cdq
jecxz
ins
pop
fnstcw
imul
fwait
popa
in
leave
add
fiadd
push
or
dec
outs
inc
xchg
add
xor
xor
pop
into
xor
pop
mov
fbstp
jae
adc
push
pop
mov
sub
mov
pop
sbb
cld
cmps
loop
sbb
repnz
inc
call
lds
cmp
nop
jae
mov
out
sub
fcomi
jp
fidiv
pop
cmp
loopne
adc
ret
xchg
(bad)
out
jnp
ins
stos
adc
(bad)
and
arpl
hlt
pop
out
sub
push
cmc
xor
mov
push
jo
cmp
ins
inc
clc
jmp
push
mov
push
data16
dec
shr
popf
sub
or
pop
call
jmp
icebp
or
nop
adc
repz
fs
dec
(bad)
jne
jp
movs
and
mov
jnp
mov
mov
add
dec
or
aaa
in
dec
lods
inc
test
adc
and
cmp
cmc
sbb
shr
lahf
mov
(bad)
(bad)
adc
fcom
jge
cmps
loopne
xchg
mov
sbb
push
mov
inc
movs
stos
out
les
movs
adc
cmps
jo
imul
sbb
cmps
movs
std
cs
sub
mov
add
icebp
jge
jmp
iret
push
xor
fsubr
and
xchg
int3
push
into
mov
stc
repnz
jb
or
leave
push
or
dec
pop
in
jecxz
push
mov
fcomp
loop
cwde
inc
cli
vpaddd
lea
pop
cmp
push
bound
adc
adc
fcomp
lock
add
xor
shr
mov
stos
mov
sub
mov
and
pop
sti
sub
adc
cmps
lock
out
adc
and
adc
dec
out
mov
hlt
out
push
repz
in
outs
or
mul
addr16
outs
xchg
pop
idiv
retf
push
cmp
mov
push
push
pop
test
aad
xchg
push
sub
or
or
hlt
bound
call
mov
mov
jge
sub
push
or
scas
cmp
sbb
mov
and
cdq
dec
jb
pop
leave
test
or
dec
idiv
ins
fnsave
out
mov
out
pop
push
aaa
pop
and
inc
push
jno
sub
mov
ja
cmp
inc
mov
pop
dec
icebp
or
dec
inc
push
jns
pop
sbb
stos
xchg
xchg
jae
and
xchg
inc
jmp
test
pop
or
jo
dec
loopne
mov
jge
movs
push
pop
jecxz
jmp
push
(bad)
not
scas
mov
sub
inc
push
mov
xchg
xchg
int
gs
in
pop
(bad)
addr16
iret
scas
xor
jmp
jnp
jp
mov
(bad)
popf
inc
repz
retf
sbb
adc
xchg
lods
add
sbb
xlat
bound
out
pop
imul
not
out
pop
in
(bad)
jp
lahf
pusha
xchg
popf
test
sbb
dec
xor
(bad)
loopne
xor
rcl
sub
mov
adc
inc
arpl
mov
lods
push
xchg
inc
call
jae
test
aam
pusha
aad
pusha
and
and
jge
add
loope
inc
lea
stc
(bad)
pop
sbb
xlat
call
pop
pop
inc
fdiv
xchg
sub
test
ins
fwait
jmp
push
add
ret
mov
dec
xor
adc
or
adc
xlat
mov
sar
daa
js
sub
xchg
movs
ror
popa
and
cmps
push
aaa
loopne
adc
inc
(bad)
call
cld
push
loopne
or
(bad)
out
add
and
or
sar
jb
dec
mov
and
sbb
outs
push
clc
jb
arpl
sar
pusha
sbb
mov
das
in
xor
jae
inc
aas
into
fcmovnb
xor
mov
cmp
add
mov
dec
mov
jp
out
jno
fsub
mov
in
in
inc
(bad)
mov
xor
mov
cmp
popf
sub
loop
cmp
add
scas
jne
aas
call
fcmovne
out
dec
and
clc
lods
call
repz
jns
sbb
fs
cmc
xor
jns
popf
(bad)
fsub
jg
jl
sti
jecxz
scas
gs
push
xchg
sahf
movs
rcr
sub
mov
clc
ffreep
xor
iret
or
sbb
cmp
test
inc
sub
push
sbb
mov
push
xor
add
xor
ds
dec
gs
cmp
sbb
inc
ret
arpl
mov
mov
fadd
fimul
into
cmp
in
ja
sub
sub
mov
ret
scas
add
ds
adc
jbe
pop
adc
shl
es
xlat
jle
iret
mov
or
aad
cmp
sbb
and
sbb
mov
and
push
mov
lahf
shl
dec
mov
ins
je
xchg
jno
pop
pusha
jne
ja
and
pop
add
cmps
aas
adc
call
jae
mov
dec
sbb
pop
adc
fist
out
pushf
mov
xchg
cmp
fs
adc
mov
jb
outs
cmp
inc
cwde
inc
dec
int3
xor
sub
je
jns
ins
fsub
retf
mov
cdq
xor
and
cli
mov
std
ret
rol
popf
inc
sbb
mov
jns
das
lods
jecxz
push
jle
call
mov
jle
and
mov
daa
in
cs
jp
jns
fwait
dec
xor
movs
out
mov
test
add
loopne
cmp
pop
loopne
cdq
pop
test
test
popf
or
pusha
add
add
es
pusha
repz
nop
nop
mov
repnz
dec
bound
jne
pop
jne
push
(bad)
pop
and
mov
dec
dec
xchg
pop
xchg
repz
mov
adc
loope
shrd
repnz
inc
mov
dec
xchg
loop
iret
leave
sub
aaa
cs
loop
pop
setg
or
ins
mov
(bad)
cmp
dec
addr16
fsub
pop
sbb
imul
pop
out
mov
rcl
pop
mov
(bad)
xchg
adc
sbb
sbb
pop
dec
(bad)
adc
loopne
jmp
jne
cli
push
out
push
mov
shr
je
imul
jbe
cli
add
fidiv
xor
leave
inc
mov
cdq
movs
das
test
stos
popa
jb
xchg
in
xor
pop
movs
cmc
and
into
cmps
inc
pushf
sti
leave
jl
icebp
jbe
shl
imul
xor
outs
ficomp
leave
or
add
push
lea
fidiv
movs
or
add
mov
and
xor
jo
sub
retf
mov
jge
add
popa
dec
or
mov
xor
mov
loop
ins
repnz
dec
push
mov
adc
mov
or
sub
cmp
sub
jo
popf
hlt
dec
or
loop
add
out
shl
mov
xor
test
mov
mov
and
or
xor
test
iret
int
jb
cmp
xlat
mov
and
jb
sbb
sbb
jmp
test
mov
mov
stos
mov
xor
popa
clc
pop
pop
das
imul
popf
mov
lahf
dec
mov
shr
push
pusha
std
or
inc
cwde
push
sbb
cmps
cmps
daa
jle
movs
(bad)
mov
and
mov
aas
neg
dec
mov
dec
inc
mov
dec
ds
and
stc
int
jmp
cmp
test
jle
xchg
enter
in
cmps
cmp
sub
push
int3
std
or
in
pop
imul
in
sbb
stc
je
out
lahf
inc
xchg
pop
rcr
jb
jle
pop
adc
pop
dec
(bad)
cmp
in
cmps
mov
ja
add
shl
sub
sub
inc
xor
fld
sbb
xchg
mov
clc
xchg
push
in
in
push
loope
adc
add
xlat
das
ror
ret
test
(bad)
inc
pop
or
xchg
pop
mov
fistp
outs
test
mov
fs
pop
jbe
frstor
adc
xchg
loop
test
push
jmp
xlat
adc
or
sub
and
std
(bad)
int3
loop
xchg
sub
xchg
icebp
rol
rcr
cmps
std
add
(bad)
aam
retf
inc
lods
jg
mov
popf
cmp
mov
iret
cmp
jne
add
xor
add
adc
xchg
inc
pop
mov
shr
pop
sub
jno
pop
inc
push
mov
div
rcl
shl
jecxz
outs
or
sbb
push
and
or
imul
mov
data16
icebp
mov
clc
or
mov
cmp
or
cmps
dec
std
jg
repnz
cmc
ds
dec
pop
jmp
je
(bad)
outs
pusha
mov
stos
ss
mov
sub
jmp
(bad)
cld
dec
sub
stos
jp
dec
retw
mov
sub
std
fstp
or
sbb
imul
cmp
sbb
jle
xchg
xor
sub
push
inc
fld
sub
xor
fucomp
fstp
int3
fild
push
pop
mov
lods
mov
dec
dec
leave
push
xor
jecxz
jae
xchg
xchg
cdq
add
outs
aad
jae
popf
mov
inc
jp
repnz
int3
jns
and
clc
cmp
inc
aam
pop
mov
jae
sbb
add
pop
or
icebp
pop
jns
sub
sub
mov
(bad)
fnstsw
jmp
jecxz
jne
xlat
cwde
mov
xchg
scas
shr
and
(bad)
mov
call
xchg
adc
dec
and
mov
add
les
daa
(bad)
mov
cli
mov
push
jl
inc
sub
push
sbb
hlt
test
gs
js
push
fnsave
mov
jp
popa
push
in
hlt
mov
lahf
xor
sub
fidivr
xchg
dec
cmp
xchg
sahf
(bad)
jecxz
fstp
jo
cmp
mov
out
aam
mov
xchg
out
pop
mov
neg
jmp
sbb
jle
mov
(bad)
and
xchg
aas
lea
mov
and
pop
aaa
xor
xchg
dec
jae
std
sbb
jno
add
jbe
loope
aas
mov
repnz
cs
jl
mov
inc
inc
xor
cmc
dec
push
pop
pop
jbe
shl
arpl
mov
out
rcl
dec
popa
gs
xchg
sub
out
test
int
add
(bad)
imul
mov
ins
xor
in
push
xlat
and
loope
sbb
stos
and
arpl
xchg
or
adc
into
test
mov
xor
sub
sahf
ss
push
(bad)
mul
test
dec
je
dec
mov
jge
xchg
fild
std
sbb
cwde
loopne
xor
or
xchg
push
jle
lods
mov
enter
cmp
enter
add
and
fcmovnu
mov
mov
or
pushf
aas
dec
sahf
add
frstor
jge
sbb
stc
stos
dec
push
outs
sbb
inc
js
pop
dec
jo
popf
xchg
das
sub
ret
sbb
fwait
iret
xor
pop
ret
or
push
sub
jl
jo
sbb
and
push
aam
push
jmp
sar
lods
bound
jecxz
mov
not
mov
pop
dec
loope
mov
jne
cmp
jg
shr
test
int3
fstp
test
lods
add
dec
movs
imul
lahf
mov
dec
fld
mov
cmp
test
into
rcl
and
mov
xor
inc
out
fadd
xchg
pop
pop
sti
inc
fcmovnb
mov
or
pop
mov
in
xor
mov
sub
leave
in
cs
jns
cmp
ds
cmps
(bad)
pop
mov
jg
mov
(bad)
cmc
dec
pop
mov
out
push
loope
cli
ret
shl
sahf
add
pop
pop
inc
sti
add
cmp
mov
test
mov
mov
pop
data16
jmp
lods
movs
(bad)
nop
push
clc
cdq
sub
inc
cwde
cmps
add
jb
arpl
js
adc
push
inc
pop
test
enter
lds
and
xchg
mov
fist
push
pop
pop
dec
movs
inc
xlat
lock
and
xchg
and
outs
out
mov
pop
in
mov
retf
int3
cmp
cmp
loopne
sti
pushf
xchg
jecxz
add
cs
shl
mov
les
mov
ret
pop
loopne
pop
sub
cmp
pop
pop
pop
adc
imul
out
adc
push
test
cld
sbb
in
pop
bndldx
gs
icebp
aas
call
and
dec
aam
dec
(bad)
mov
jae
sub
mov
ja
stos
mov
out
leave
push
ret
cld
mov
jecxz
inc
hlt
ds
out
or
retf
lahf
push
iret
push
push
stos
aad
repnz
imul
bswap
jg
repnz
lahf
adc
loopne
mov
loop
sti
sub
add
les
(bad)
mov
add
fs
test
dec
leave
retf
ret
cmp
add
pop
lea
nop
pop
and
mov
cmc
imul
packssdw
add
push
ds
loop
jns
dec
mov
push
cwde
loop
pop
(bad)
mov
arpl
xor
xor
std
stos
push
xor
xchg
pop
mov
jmp
cmps
add
xchg
mov
mov
sbb
cs
rcl
mov
or
hlt
bnd
mov
xchg
or
ja
dec
push
cmp
mov
mov
test
fidivr
out
mov
adc
push
in
in
scas
and
int
xor
adc
xor
nop
sub
jmp
cmp
test
mov
pop
xlat
or
push
dec
stc
adc
les
imul
in
lods
push
sub
shl
je
xchg
xor
sbb
jno
push
cmc
stos
push
lds
xchg
call
out
pop
inc
dec
neg
mov
adc
mov
mov
nop
push
mov
push
call
mov
add
call
jmp
(bad)
into
jecxz
cwde
aas
jp
lds
add
cmp
push
shl
or
dec
jl
mov
mov
push
movs
ds
push
lods
ret
data16
cmp
xor
and
out
stos
pop
add
or
xor
mov
leave
sbb
repz
inc
(bad)
mov
add
fstp
in
leave
test
fucomip
in
inc
cwde
push
push
pop
or
popf
arpl
mov
add
cwde
cmp
out
imul
jmp
imul
leave
inc
addr16
mov
and
outs
adc
movs
inc
imul
lods
lds
dec
in
loopne
or
in
sub
loop
push
xor
call
xchg
pop
sahf
xor
mov
int3
mov
jnp
mov
or
xor
xor
shl
adc
fwait
out
add
mov
sbb
pop
and
and
xor
bound
mov
adc
ror
inc
ficomp
or
gs
shl
fcomp
aas
or
fwait
jmp
daa
pop
jge
adc
test
sbb
std
fnstsw
test
jmp
xchg
mov
mov
cli
sub
mov
rol
mov
xchg
mov
fisub
cmp
test
out
mov
rol
adc
ds
cli
call
shl
sti
out
sub
jmp
stos
xchg
ds
or
jbe
inc
outs
hlt
das
mov
cmovbe
iret
adc
inc
sub
xchg
adc
cdq
xlat
xchg
jp
or
ins
mov
sbb
call
jmp
jne
mov
mov
in
add
mov
add
jmp
mov
jge
sbb
xor
add
sbb
ror
inc
cmp
mov
icebp
pop
cdq
add
add
jl
ins
out
xor
jno
sti
aaa
dec
mov
fistp
mov
test
mov
mov
jnp
or
dec
mov
push
jge
or
adc
or
aad
daa
jg
xchg
jmp
ror
test
cs
cmp
mov
xlat
arpl
pushf
fwait
ins
or
or
or
mov
jnp
jmp
or
xchg
cmps
add
xor
jb
fisttp
jo
sub
cmps
jae
and
jg
xchg
cwde
sub
scas
push
cmp
div
or
adc
movs
loopne
in
loope
push
pusha
(bad)
jl
pusha
out
jns
data16
aad
adc
fwait
push
dec
fcmovu
jge
mov
sub
mov
inc
pop
ret
mov
sbb
or
xor
mov
jb
rcl
pop
add
jbe
ds
retf
jle
lods
lahf
shr
inc
arpl
pop
xor
fwait
or
pop
loope
ss
lods
cmp
and
inc
xchg
jecxz
cs
jbe
jge
dec
pop
mov
gs
data16
fdiv
leave
sbb
clc
test
popf
adc
pushf
jle
ror
cld
lds
aam
into
into
leave
or
mov
popw
and
push
xlat
dec
inc
and
cs
jo
bound
mov
push
or
jbe
test
inc
pop
add
jp
jmp
add
dec
pusha
xchg
aaa
push
sbb
out
hlt
or
jnp
xchg
dec
adc
mov
inc
pop
(bad)
mov
xor
ja
sub
push
jns
adc
push
mov
popf
sbb
sti
imul
(bad)
mov
add
rcr
push
repz
fsub
jg
mov
sbb
movs
ins
xor
jns
dec
adc
outs
cmp
aas
and
mov
pop
or
xor
add
out
push
or
(bad)
add
or
and
sbb
mov
mov
addr16
pusha
mov
mov
pop
lea
pop
js
scas
jae
adc
adc
mov
add
ins
mov
into
out
or
xor
xchg
adc
ror
jg
das
sahf
dec
mov
ret
pop
mov
in
or
pop
sub
mov
loope
pop
jbe
mov
out
xchg
mov
cmp
sub
scas
adc
pop
dec
daa
mov
adc
imul
push
xor
test
adc
aaa
fsub
enter
pop
lods
sub
cmp
shl
add
push
pop
ins
jmp
adc
hlt
mov
int3
or
popa
or
pop
(bad)
mov
xlat
cmp
imul
mov
fwait
inc
pop
xchg
daa
and
adc
push
fisub
pop
data16
mov
inc
cli
sub
xor
repnz
mov
pop
fs
out
mov
retf
jno
pop
mov
pop
adc
leave
push
inc
fnstsw
and
add
fadd
sub
sbb
cmp
xchg
cld
(bad)
mov
or
lock
outs
pop
push
loop
inc
xor
xchg
cli
inc
(bad)
nop
jae
cmp
(bad)
push
and
fild
scas
sub
pop
xchg
call
fistp
scas
mov
adc
js
stc
ss
dec
iret
push
retf
mov
shl
popf
sbb
push
adc
push
das
not
(bad)
sbb
sub
xor
mov
sbb
xor
dec
in
xchg
mov
fcmovnu
push
int3
jne
cwde
retf
js
mov
scas
sar
rol
mov
cmc
mov
popf
mov
fbstp
dec
aaa
jae
mul
sbb
sar
and
mov
in
xchg
dec
jb
cmp
data16
sbb
or
dec
cmp
mov
stc
add
sub
test
inc
fsubr
and
data16
in
mov
push
je
imul
jg
or
jl
mov
das
and
push
repz
and
mov
adc
sbb
ja
mov
jnp
cmp
mov
cmp
xchg
xor
adc
and
sbb
xchg
repz
inc
cmp
stos
inc
cdq
int
test
add
inc
psubusw
jo
adc
nop
sub
inc
sti
sub
jge
outs
lock
mov
dec
and
movs
mov
out
les
jecxz
fwait
mov
cmp
test
xor
repz
rcr
xor
jg
test
not
sbb
loope
jle
add
sbb
mov
in
movs
inc
cmps
stos
lahf
mov
fwait
push
jmp
jbe
repnz
stos
rcr
push
jae
pop
sbb
sbb
xor
pop
pop
jbe
ins
(bad)
or
inc
xchg
lds
mov
jg
cmp
pop
or
icebp
ds
lahf
push
imul
pop
mov
xchg
int3
cmp
arpl
xchg
mov
std
push
adc
arpl
sub
sbb
push
imul
ret
dec
fld
jb
test
mov
jle
psubusw
cwde
sub
dec
rcl
jae
push
xlat
sbb
pop
sub
outs
mov
push
mov
mov
xor
test
push
inc
sub
dec
inc
std
xor
jmp
js
nop
cmc
aas
adc
mov
pop
jp
sbb
or
stos
sub
xchg
movs
jne
mov
cmps
arpl
addr16
sub
das
adc
in
lea
adc
lods
jnp
cld
adc
jb
push
mov
adc
dec
mov
leave
fst
ins
or
or
mov
jne
movs
push
fdivr
sbb
shr
sahf
mov
sbb
xchg
push
cmp
cmp
je
outs
mov
mov
inc
jp
sbb
fs
mov
adc
(bad)
jo
repnz
add
cwde
nop
(bad)
jge
mov
pop
jbe
sbb
enter
dec
xor
pushf
cmp
sbb
outs
cmps
sub
mov
sub
clc
fsub
retf
sub
fcom
push
dec
pop
inc
sub
inc
mov
xor
mov
(bad)
or
mov
mov
sar
lods
jge
test
and
xchg
push
jmp
mov
js
(bad)
jl
mov
adc
mov
jb
stos
sub
retf
dec
jl
inc
cmp
push
idiv
in
gs
(bad)
jl
les
cmps
rol
popa
inc
cmp
dec
xchg
test
sbb
ds
mov
xchg
cld
pop
loope
adc
or
jno
cmps
mov
xchg
dec
retf
xchg
pop
dec
pop
iret
dec
mov
xor
jmp
xor
out
and
mov
or
mov
adc
daa
mov
sbb
imul
iret
adc
add
repz
ror
aad
cdq
mov
xchg
shl
cld
movs
xchg
push
pop
(bad)
mov
pop
cmp
stos
daa
push
jle
xchg
jge
call
and
jo
imul
sbb
ja
leave
loope
cmps
outs
adc
jo
sbb
out
scas
scas
dec
call
jle
in
or
push
add
push
fwait
mov
xor
xchg
hlt
adc
mov
xor
and
and
inc
add
jge
cs
jno
ret
cmp
lods
mov
mov
dec
cmp
imul
stos
arpl
cmpps
aas
in
imul
pop
xor
shl
imul
mov
jmp
out
adc
in
add
sbb
xchg
and
mov
pop
leave
sbb
out
aad
aam
jno
xchg
ss
cdq
xchg
fnstenv
(bad)
out
mov
push
pop
cmps
outs
jbe
adc
test
iret
dec
xchg
loopne
jl
xor
imul
push
sub
retf
cmps
xchg
out
and
and
xor
push
pop
add
mov
push
mov
cmp
nop
icebp
mov
push
add
xchg
mov
sbb
xchg
inc
stos
cdq
loop
test
push
into
ret
sbb
jae
or
jmp
xor
mov
and
jo
adc
outs
test
pop
call
adc
jecxz
jle
out
adc
push
mov
shl
retf
adc
sbb
mov
cld
shr
data16
sbb
inc
pusha
push
lods
test
enter
jecxz
jl
inc
lahf
imul
mov
fisub
mov
sbb
lock
mov
imul
adc
xchg
or
or
fs
leave
sbb
inc
mov
or
sub
stos
stc
pop
mov
je
xor
cmps
cdq
leave
mov
or
les
mov
sub
mov
add
into
ret
add
adc
add
mov
inc
cwde
shl
jl
sbb
pop
fwait
inc
scas
mov
push
scas
loopne
mov
cmc
(bad)
xlat
add
in
cmp
sbb
adc
xor
dec
outs
push
inc
push
aas
fwait
(bad)
push
test
ins
jae
fild
fsubr
shl
adc
push
stos
dec
or
repz
or
adc
mov
movs
pop
add
(bad)
cmp
sbb
popf
shl
imul
jecxz
lods
scas
pop
mov
cld
gs
sub
aaa
cmps
aam
pusha
mov
mov
mov
lahf
mov
ja
jb
pop
push
jle
std
data16
mov
adc
xchg
mov
mov
imul
mov
scas
mov
std
push
mov
out
or
ret
and
push
scas
fild
scas
xor
push
mov
and
mov
xchg
shl
out
push
xchg
xchg
mov
mov
movs
mov
pop
je
mov
or
adc
jno
out
bound
pop
in
inc
mov
jno
jne
outs
retf
mov
xor
sbb
add
or
call
xchg
fmul
sbb
das
es
adc
adc
(bad)
mov
mov
mov
aas
or
bnd
fldcw
or
push
es
jno
add
outs
push
cmc
outs
fld
sbb
dec
inc
or
mov
cld
dec
ret
jo
scas
clc
inc
ja
ret
loope
js
nop
add
adc
or
mov
xchg
ffree
mov
push
and
xchg
outs
xchg
fisttp
je
sub
cmps
dec
ret
icebp
mov
adc
mov
stc
repz
call
add
popf
scas
fidivr
push
sbb
enter
lods
xor
add
sub
sub
stos
add
ds
pop
pop
test
xlat
rol
fst
punpckldq
cwde
bound
ins
aas
xor
ficomp
lea
scas
fwait
sub
xor
jl
retf
dec
inc
icebp
repnz
pop
jnp
loopne
add
xor
push
stos
cwde
sbb
in
add
push
lea
mov
xchg
mov
or
mov
je
pop
adc
mov
adc
push
lds
push
pusha
jecxz
mov
mov
pop
aad
(bad)
adc
sbb
dec
cmp
fs
neg
sub
mov
add
mov
clc
mov
(bad)
adc
xor
inc
retf
jmp
aas
adc
lds
jb
xor
pop
push
fwait
and
pop
pop
sti
fnstenv
mov
(bad)
mov
das
pop
pop
push
jmp
push
cmp
xor
sbb
cld
sbb
fisub
shl
jp
mov
push
rcl
jmp
inc
gs
mov
mov
adc
mov
pop
mov
or
inc
pop
stos
int
leave
adc
call
lds
movs
pop
xor
push
call
jnp
sbb
icebp
adc
add
cmp
test
jmp
(bad)
mov
shr
sub
repnz
dec
aas
pop
rcr
stos
cli
fiadd
outs
inc
dec
ror
jmp
push
shr
jae
inc
sbb
inc
(bad)
jo
jge
cmc
loope
mov
mov
mov
xor
popa
outs
rcr
sbb
xrelease
nop
wbinvd
stc
repnz
mov
dec
and
jl
dec
mov
dec
pop
lahf
inc
and
jmp
fdiv
adc
dec
pop
in
sbb
ror
jnp
inc
clc
addr16
add
mov
lock
(bad)
push
inc
ror
gs
rol
clc
out
js
add
adc
hlt
adc
or
inc
pusha
dec
retf
push
shl
push
xor
retf
and
imul
push
xor
aaa
xchg
outs
je
sbb
cli
adc
ins
mov
mov
add
push
in
jnp
mov
jae
aam
fild
inc
hlt
xchg
or
popa
imul
jg
cmp
xor
stc
pop
test
cld
nop
fs
into
and
stc
in
lahf
loop
inc
push
cmps
neg
sub
xchg
ret
ficom
aam
outs
das
fstp
inc
mov
sbb
inc
pop
and
popf
dec
cdq
xchg
call
jns
sub
sub
(bad)
loopne
clc
js
pop
adc
mov
add
xchg
fidiv
cdq
test
stc
pop
cmc
sbb
arpl
xchg
mov
mov
mov
mov
xchg
call
ucomiss
jmp
(bad)
push
ins
sub
sub
popa
pop
cmp
xchg
fld
or
mov
cmp
mov
sti
xchg
xor
clc
clc
inc
push
xchg
movs
cmp
gs
mov
js
jnp
ret
xor
inc
and
sub
push
scas
cmp
scas
mov
loopne
int
sbb
lock
push
ss
jo
mov
loop
sub
addr16
sub
inc
inc
mov
call
sbb
fsubp
jmp
jmp
or
adc
(bad)
pop
cmp
fmul
popf
jb
add
sub
xor
push
cmps
call
leave
ja
add
loop
or
jge
xor
sub
xchg
das
mov
repnz
mov
pop
pop
jmp
out
ja
sub
or
ins
mov
sub
sahf
add
outs
neg
nop
xchg
shl
xor
std
(bad)
fnstcw
pop
(bad)
fld
jb
loopne
popa
out
mov
xchg
ins
out
cmc
and
xchg
jb
in
in
sub
int3
arpl
cmp
xor
les
push
rcl
popa
cs
pushf
adc
push
and
test
dec
mov
into
mov
xchg
or
push
inc
dec
adc
arpl
mov
dec
repz
add
lds
outs
push
mov
push
ja
xor
pop
or
lods
ret
js
mov
push
pop
cmps
movs
push
xor
aas
mov
mov
jbe
out
shl
jno
jp
ins
outs
pop
rcl
jg
gs
cmps
bnd
mov
cvttps2pi
imul
shl
mov
xor
sbb
pusha
sub
pop
imul
or
das
jge
out
aam
sub
dec
(bad)
fsubp
xor
pop
adc
js
popa
inc
stc
fucomi
add
jge
mov
jne
adc
loope
dec
mov
loope
stc
dec
in
sub
mov
ins
push
lock
mov
test
xchg
sub
push
and
loop
adc
not
mov
popf
pushf
in
cmps
cmp
into
into
sbb
xchg
retf
aas
mov
jae
pushf
int3
adc
pusha
adc
mov
mov
mov
mov
lods
xchg
add
pop
and
jp
xor
or
fwait
jb
inc
ret
dec
cmp
xchg
mov
pop
push
popf
push
dec
and
cli
jg
dec
lods
out
mov
and
stc
sub
jmp
sbb
mov
lock
retf
js
retfw
push
or
adc
and
lods
pusha
pavgw
je
push
inc
out
or
enter
push
xor
dec
fs
mov
movs
sub
jno
mul
inc
sub
and
mov
push
nop
call
mov
mov
call
mov
pushf
cmc
out
in
push
fmul
dec
imul
push
push
bound
int3
pop
icebp
or
je
adc
mov
pop
sti
or
pop
adc
ficomp
scas
in
adc
jno
bound
mov
push
xor
aaa
(bad)
push
movs
fdivr
add
pop
pusha
outs
movs
ds
int3
sub
loopne
nop
or
sub
ror
cli
stos
mov
jmp
mov
sub
pop
bound
(bad)
(bad)
loop
aam
out
lock
mov
out
repz
cmp
cld
(bad)
dec
aas
add
cmps
out
inc
sbb
cmp
popa
call
push
mov
shl
retf
jb
mov
inc
cwde
mov
mov
or
sub
ret
add
call
mov
xchg
into
mov
mov
sub
rol
loop
or
ss
lea
dec
xchg
cli
(bad)
sti
inc
lods
push
sar
addr16
retf
xor
fwait
cmp
push
cmp
test
iret
dec
ret
jge
hlt
cwde
je
xchg
imul
mov
loopne
ds
shl
bound
cmp
ror
adc
mov
push
mov
mov
cmp
enter
mov
outs
mov
rol
cmp
mov
sbb
std
pop
jmp
push
stos
jmp
inc
(bad)
popa
mov
add
mov
in
cmp
pushf
push
add
push
retf
out
mov
pop
aam
fsub
mov
int3
jae
and
xchg
ret
sti
inc
out
cmp
(bad)
mov
pop
add
mov
inc
popa
loopne
jge
outs
aad
gs
stc
lea
ins
pusha
xor
jmp
push
jne
mov
dec
pop
pushf
inc
mov
xchg
dec
out
movs
stc
aad
icebp
sahf
es
arpl
push
fs
sub
and
push
test
cli
inc
pop
fwait
dec
pop
(bad)
arpl
push
sti
stc
push
lock
or
sbb
add
mov
stos
adc
cld
test
fadd
dec
push
outs
or
dec
inc
xor
jb
ret
lea
ss
ins
or
push
xor
push
jae
jle
cmps
jecxz
addr16
push
push
mov
push
(bad)
into
rcl
or
pop
dec
sub
or
cs
pusha
jecxz
mov
adc
lahf
arpl
hlt
mov
call
imul
(bad)
out
shl
add
(bad)
lds
and
pop
pop
adc
push
mov
jno
push
dec
xchg
adc
lea
push
(bad)
mov
in
add
cmp
push
int
dec
xor
retf
jge
adc
push
inc
fsubr
xor
push
adc
cwde
outs
mov
int3
sbb
and
popf
xchg
dec
ficom
inc
pop
push
or
sti
call
shl
pushf
enter
mov
mov
(bad)
push
adc
or
inc
inc
add
sub
ds
sahf
jne
adc
ins
xlat
mov
out
out
(bad)
imul
pusha
ret
mov
out
cmp
sub
mov
addr16
mov
movs
dec
jmp
mov
mov
sub
neg
mov
(bad)
loopne
xor
aad
fild
cld
push
bound
out
jmp
addr16
sub
fild
inc
push
popa
cmps
cmp
mov
out
inc
jne
dec
cdq
call
ds
sahf
mov
int
aam
jg
jle
mul
scas
stos
hlt
scas
push
add
xchg
pop
cdq
ror
clc
pop
out
scas
cmp
xchg
xor
daa
sahf
push
fisub
nop
out
ret
inc
adc
cmp
mov
cmp
pop
rcl
pop
adc
inc
mov
mov
xor
sbb
sub
in
inc
mov
ret
mov
int
jmp
pop
jb
jg
adc
fwait
xor
sub
push
enter
and
test
xlat
pushf
mov
mov
loop
jbe
mov
scas
or
add
jge
adc
adc
adc
pop
mov
aad
ds
pushf
xchg
mov
ds
int
test
es
les
inc
aas
inc
pop
call
(bad)
jnp
test
shr
xchg
stos
addr16
mov
retf
mov
rol
inc
xchg
aaa
vpaddd
cmps
cli
pop
or
add
sbb
and
inc
mov
js
push
(bad)
mov
aas
push
stc
dec
sub
daa
popf
push
and
addr16
adc
or
push
sahf
or
jp
in
jecxz
aad
call
outs
mov
in
cmps
pop
mov
fnsave
xchg
repnz
inc
adc
fs
push
dec
xor
cwde
cmp
inc
pop
aad
loopne
fisubr
les
xor
shl
outs
loope
sub
arpl
das
xor
add
mov
dec
inc
adc
rcr
jg
out
adc
cs
jmp
inc
rcl
je
mov
xchg
das
xchg
ret
or
in
pop
nop
repz
test
(bad)
imul
and
mov
(bad)
and
cmc
(bad)
nop
mov
and
push
cmps
test
dec
mov
(bad)
cld
or
lds
jmp
not
mov
push
sar
ror
mov
push
sub
scas
pop
neg
pop
mov
fwait
dec
mov
jb
jl
arpl
mov
mov
pop
mov
push
ss
(bad)
sub
sbb
inc
xlat
or
and
lods
cmp
(bad)
jge
cmc
(bad)
stc
xlat
repnz
dec
and
retf
call
xor
add
imul
sub
dec
out
ror
cmp
call
test
jmp
ret
push
dec
jge
outs
mov
push
pop
push
jbe
mov
and
cld
sbb
sti
je
inc
push
(bad)
push
jmp
inc
mov
sar
aaa
movs
pushf
cmp
adc
or
mov
cs
(bad)
and
mov
dec
loopne
in
iret
jo
adc
adc
nop
pop
pop
sub
out
push
aaa
sbb
loop
mov
push
retf
rcr
dec
aad
add
pop
push
(bad)
cwde
(bad)
out
test
ret
cmp
jl
xor
mov
sbb
xlat
xor
cld
push
es
dec
and
add
fwait
cmp
cdq
lods
sbb
int3
scas
(bad)
cs
dec
pop
pop
jae
cmp
mov
iret
jno
and
and
inc
fsubr
push
out
aad
mov
cld
popf
jnp
in
shl
xchg
or
shl
test
mov
div
sbb
stos
test
and
loop
mov
push
adc
mov
mov
adc
add
xchg
or
mov
or
fs
test
cmps
push
popa
jb
jb
div
fistp
push
mov
cmp
scas
loop
adc
fisttp
xlat
adc
jnp
mov
loop
outs
mov
sti
dec
pop
test
neg
xor
push
pop
nop
mov
dec
dec
push
cmps
rol
sub
push
jns
pop
push
shr
into
mov
mov
sbb
fwait
jg
dec
jae
push
push
xchg
sbb
cmps
(bad)
das
mov
jg
push
jmp
push
dec
(bad)
call
je
jne
out
adc
dec
jmp
inc
add
inc
hlt
or
test
push
imul
jmp
sahf
push
imul
test
xchg
push
cmp
cmc
lods
cwde
adc
sbb
test
gs
push
mov
or
jno
sub
push
and
mov
in
xchg
in
adc
xor
not
xor
scas
ins
and
add
cmp
adc
(bad)
and
xchg
xchg
iret
outs
pop
(bad)
mov
push
test
fsubp
sbb
sub
fld
push
push
dec
sti
out
xchg
aas
je
add
les
cs
aad
nop
scas
mov
or
jl
(bad)
lods
xlat
or
(bad)
ins
pop
sub
mov
mov
mov
fist
jne
jge
scas
loope
les
(bad)
mov
add
mov
mov
jle
imul
push
stos
xor
push
arpl
inc
jle
out
mov
(bad)
cld
mov
test
pop
outs
imul
cmps
lahf
pop
jg
das
jmp
jecxz
loope
loop
fld
push
mov
xor
adc
xchg
into
clc
push
cmp
xlat
repnz
mov
popa
mov
inc
adc
out
(bad)
pop
(bad)
loop
xchg
gs
daa
(bad)
lods
outs
je
clc
xor
xchg
dec
or
push
ss
repz
xor
in
pop
sbb
popa
xchg
mov
sbb
rol
retf
cwde
into
mov
vmaxps
aam
div
movs
mov
in
out
mov
pushf
cmp
xchg
sar
pop
loope
push
popf
pop
pop
stos
xchg
popa
popf
loope
jnp
iret
cli
sbb
sahf
neg
aad
shl
or
dec
mov
or
imul
inc
jno
mov
sbb
out
les
bound
mov
or
push
or
loopne
(bad)
icebp
mov
jo
pop
inc
sub
movs
mov
imul
xchg
add
call
jmp
sbb
inc
cwde
dec
enter
push
addr16
dec
mov
in
enter
sub
mov
sub
mov
adc
loope
jb
xchg
stos
shl
or
rcr
push
scas
mov
mov
in
cmp
arpl
jmp
das
mov
sbb
pop
mov
int3
test
pop
jno
(bad)
and
fld
mov
clc
pusha
inc
daa
push
retf
and
push
dec
mov
push
mov
and
cmp
ret
mov
test
push
or
scas
adc
rcr
cld
ds
dec
push
sub
ret
fnstcw
inc
int
daa
scas
lds
inc
inc
adc
loop
cmp
(bad)
xor
adc
sub
add
cmp
push
push
ret
jb
or
repnz
sahf
cmp
jno
add
ret
xor
lds
movs
adc
dec
stos
aas
push
pop
xchg
xor
cli
sub
(bad)
nop
dec
outs
push
test
(bad)
daa
cdq
xchg
push
pop
sbb
xchg
pop
adc
(bad)
push
getsec
adc
loope
inc
push
mov
fucomp
leave
inc
rcl
imul
shr
jle
cmc
mov
outs
test
cmp
ds
shr
mov
mov
push
push
fisubr
stos
mov
push
mov
mov
fisttp
xchg
call
mov
ret
jmp
(bad)
mov
sub
xchg
jge
test
push
retf
pop
(bad)
ds
pop
add
in
add
fdivr
inc
imul
inc
xchg
cmp
push
push
(bad)
jmp
mov
mov
loope
xor
rcl
mov
popa
test
lea
pushf
inc
mov
mov
jg
lea
jne
and
test
pushf
fst
xor
cmp
pop
push
sub
and
adc
popf
xchg
mov
dec
push
inc
cmps
and
inc
mov
mov
ins
sbb
push
je
xlat
inc
sahf
adc
mov
ret
sub
xor
and
movs
fs
mov
push
and
dec
sbb
in
call
mov
dec
imul
add
jnp
add
add
fild
pushf
mov
jecxz
(bad)
and
neg
loop
mov
mov
in
dec
ins
shl
dec
and
loope
push
jo
in
out
pop
data16
cwde
cld
(bad)
cmp
jmp
popa
neg
ret
jle
(bad)
js
xor
inc
pusha
scas
or
aaa
xor
cli
jge
out
push
cmp
xchg
clc
stos
pop
scas
dec
mov
fcom
add
jns
cmp
(bad)
xchg
inc
pop
inc
aas
mov
cld
dec
inc
sbb
sti
pop
mov
nop
push
inc
lea
xchg
jns
and
mov
jae
scas
test
outs
xor
es
sbb
loope
mov
scas
push
ret
and
mov
mov
call
mov
mov
and
sbb
aad
inc
ficom
popf
lock
aam
lahf
fbstp
je
lds
pop
pop
xchg
repz
inc
or
pushf
imul
mov
cmps
dec
jne
imul
xor
arpl
scas
adc
(bad)
or
pop
retf
std
jns
inc
mov
movs
jge
fisubr
xchg
add
xchg
enter
cmp
loop
push
not
shr
or
dec
das
out
lods
shr
in
cmp
fidivr
dec
imul
dec
adc
lods
mov
inc
mov
enter
sbb
clc
das
imul
push
pop
push
loope
push
fild
inc
xchg
loopne
mov
jo
popf
stos
adc
jl
in
clc
sub
scas
jno
or
retf
in
inc
jl
mov
fbld
imul
inc
adc
mov
add
hlt
scas
fadd
leave
inc
adc
aaa
fidivr
cmps
mov
xchg
inc
std
push
inc
call
sub
pusha
aad
jns
mov
inc
inc
in
and
xchg
bound
jmp
enter
add
outs
mov
rol
ja
adc
sbb
mov
jle
jmp
scas
les
xchg
lods
xchg
lods
xchg
out
push
iret
push
and
ja
mov
jl
dec
xor
out
mov
sub
xchg
fstp
pop
sub
xchg
fiadd
push
pop
(bad)
push
sub
out
rol
stc
movs
dec
pop
jmp
mov
adc
xchg
dec
aam
jmp
scas
(bad)
mov
stc
cwde
sbb
mov
push
fwait
add
pop
out
adc
adc
adc
mov
test
test
loope
mov
push
fmul
add
daa
jle
mov
test
or
cmc
outs
test
popa
xchg
dec
mov
or
nop
mov
dec
repz
mov
push
mov
and
cmps
jno
dec
mov
mov
cs
cs
outs
inc
sahf
cmp
popa
cmp
jns
rcr
mov
call
jb
stos
pop
push
pusha
stc
fbld
in
lods
cmp
xchg
add
push
and
imul
cmps
lods
(bad)
ds
mov
mov
adc
mov
dec
mov
xchg
cmp
dec
sbb
out
shr
fiadd
ins
rol
jo
adc
sbb
sbb
sti
adc
daa
jne
mov
jle
(bad)
cli
push
iret
repz
mov
sub
(bad)
test
ja
pop
cmp
jle
sbb
aam
fwait
push
lea
push
dec
push
jne
(bad)
repz
(bad)
inc
fdiv
pop
jge
sbb
sbb
lahf
jae
pop
pop
mov
sti
pop
movs
add
out
push
stc
jmp
inc
mov
jmp
dec
sbb
push
cmps
mov
push
xchg
jmp
rol
adc
in
xor
xchg
fwait
sub
fdivrp
fs
into
ret
js
mov
xlat
int3
arpl
xor
adc
stos
test
mov
stos
movs
push
push
das
mov
test
cmc
push
pop
cmc
mov
clc
fidiv
fwait
mov
imul
xchg
jg
leave
cmc
jns
aam
mov
addr16
mov
xlat
pop
je
rcl
sub
and
pop
dec
test
sti
jo
cmp
test
pop
jmp
inc
and
pop
add
add
mov
sbb
pushf
adc
mov
cmp
pusha
mov
scas
inc
adc
dec
fcomi
sbb
push
nop
popa
cmc
enter
scas
aad
xchg
ins
xchg
(bad)
retf
cmp
cmps
push
pop
aaa
bt
scas
std
push
js
dec
adc
call
psubsb
rcr
aaa
popf
pop
mov
or
cmps
scas
imul
cmc
test
inc
xchg
cmp
data16
and
imul
adc
mov
into
jle
or
push
xchg
mov
stos
movs
xchg
aaa
imul
mov
adc
dec
push
mov
inc
add
push
cli
scas
mov
(bad)
pop
fwait
inc
mov
es
mov
(bad)
pop
ficom
mov
mov
dec
adc
fimul
stc
leave
add
mov
push
fs
dec
cs
ret
data16
leave
dec
pushf
lods
and
ficom
ss
mov
dec
aad
retf
sbb
fidiv
shl
mov
mov
sub
std
add
xchg
jecxz
ins
mov
rcr
cmp
pop
je
mov
pop
push
cwde
inc
in
cdq
ja
inc
lds
inc
sbb
add
pop
retf
mov
pop
es
and
mov
fwait
pushf
jmp
push
dec
rcr
dec
pop
jecxz
(bad)
xor
add
xor
inc
xor
sbb
stc
les
les
adc
in
mov
pop
xchg
sahf
int
ficom
scas
int
cmp
push
cld
xor
retf
mov
leave
leave
out
mov
out
movs
addr16
outs
imul
mov
xchg
pop
popa
xor
gs
mov
push
out
mov
add
retf
pushf
pand
cdq
rcl
rcl
out
jmp
sbb
mov
out
stc
jle
fwait
data16
sbb
adc
xor
cmps
inc
leave
iret
mov
shr
rol
pop
js
rol
jb
pop
sub
jge
sbb
adc
ins
pushf
imul
(bad)
stos
js
test
ins
and
cmp
imul
xor
and
rcr
outs
daa
jno
rcr
ja
int3
mov
outs
retf
sbb
mov
push
push
(bad)
jbe
mov
and
les
leave
stc
xchg
cmp
dec
hlt
cmp
ss
js
push
bound
test
jmp
cmp
push
jp
pop
adc
pop
mov
mov
je
inc
movs
inc
jmp
inc
push
rcl
jle
imul
adc
dec
adc
in
fidiv
mov
and
repz
push
mov
movs
jecxz
mov
(bad)
cmps
je
push
cmp
test
inc
pop
in
psllq
mov
inc
jae
fsub
cld
xchg
xchg
pop
lods
cmp
ret
ror
jo
out
and
jno
imul
aad
add
divps
call
jae
arpl
xor
out
cmp
call
idiv
movs
adc
or
mov
cmp
mov
dec
pop
shl
jo
push
jne
sbb
dec
icebp
jae
push
out
dec
push
shl
stos
scas
add
pop
ret
out
mov
sub
mov
std
cmp
cmp
call
pop
es
jl
fistp
lock
retf
(bad)
and
fisttp
sub
dec
outs
mov
jmp
je
out
pop
ds
cmc
std
xor
cmp
adc
cwde
sub
in
pop
rcr
aas
pop
push
repnz
gs
cdq
jmp
xchg
mov
push
jmp
mov
push
std
xchg
xchg
rcr
mov
loop
sub
pushf
test
imul
mov
mov
mov
stos
xor
jmp
out
inc
mov
jge
add
icebp
push
xchg
in
fucom
fucom
jge
je
shl
pusha
xor
pop
mov
dec
jnp
cmp
mov
mov
sahf
cs
dec
aas
popa
cmps
inc
mov
dec
sub
shl
push
mov
icebp
mov
icebp
icebp
cmc
mov
call
call
les
aas
out
cmps
push
(bad)
ins
jne
xchg
call
fiadd
aam
pushf
mov
in
inc
and
enter
mov
retf
mov
mov
aas
jae
mov
push
xchg
mov
lods
repnz
jmp
jmp
sub
fs
out
ds
sbb
inc
fidiv
inc
lea
and
or
fisttp
les
push
mov
int
jbe
repnz
xchg
jno
xchg
jmp
xor
outs
inc
imul
es
sbb
sbb
dec
sbb
stos
sbb
mov
in
cwde
add
dec
adc
fsubr
fcom
jle
aaa
jb
mov
push
cli
retf
mov
pop
mov
adc
or
cmp
jecxz
cdq
dec
sbb
pop
cmp
frstor
adc
data16
cmp
fwait
arpl
call
ins
icebp
xchg
ja
xor
mov
push
call
sbb
xchg
mov
sahf
bound
in
in
inc
(bad)
aaa
mov
rcl
cdq
sub
dec
std
outs
jns
retf
shl
push
stos
pop
push
ins
retf
outs
into
mov
xchg
push
mov
cmp
xlat
mov
adc
pop
mov
ja
lahf
movs
call
jb
mov
xor
mov
jns
outs
repz
xor
jle
icebp
arpl
or
xchg
and
out
inc
lods
mov
(bad)
xor
mov
dec
adc
(bad)
arpl
mov
mov
mov
movs
jns
sbb
hlt
push
stos
jle
pop
(bad)
das
xor
popa
xchg
jmp
mov
adc
xchg
daa
mov
stc
jle
icebp
adc
adc
and
imul
xchg
fisttp
sbb
mov
shl
call
inc
loopne
sbb
or
or
jg
push
adc
push
(bad)
(bad)
xchg
xor
fbstp
(bad)
sar
jno
mov
dec
sbb
sub
inc
xchg
out
pop
(bad)
sub
inc
fimul
(bad)
jg
fdiv
sub
mov
jl
stos
hlt
clc
or
sbb
stos
mov
sub
jae
sahf
or
daa
pusha
mov
mov
push
not
pop
push
jl
(bad)
pop
push
or
enter
sub
jo
test
addr16
jle
adc
cwde
(bad)
cmp
jne
and
out
sbb
jmp
(bad)
push
jecxz
fmul
out
xchg
mov
mov
xchg
xor
and
outs
pop
jbe
(bad)
mov
xlat
sub
jg
cmp
out
jb
sub
iret
dec
adc
stos
or
jl
cli
inc
jo
mov
jmp
xchg
sub
jo
das
rol
inc
cld
push
sbb
jl
cmps
inc
(bad)
pop
sbb
mov
shl
jne
(bad)
(bad)
dec
add
push
mov
adc
mov
mov
pop
in
push
or
inc
ds
out
xlat
or
xchg
xchg
add
add
and
int
push
mov
jg
sub
mov
or
cmps
push
pop
ins
lahf
sub
shr
and
popf
outs
loope
xor
ins
mov
call
jmp
js
or
out
jns
aam
dec
mov
sub
inc
mov
cs
mov
jb
imul
xchg
push
aam
shl
sbb
or
loope
out
inc
aaa
add
jl
push
mov
sub
cmp
xchg
call
movs
mov
icebp
test
dec
adc
icebp
mov
lock
ja
mov
xor
popa
outs
mov
es
push
add
inc
sub
popf
or
lea
jnp
icebp
and
sub
dec
inc
mov
push
sar
ss
(bad)
push
cs
jnp
sub
sahf
popf
idiv
pop
sbb
dec
adc
iret
cmc
cmp
clc
mov
pop
jno
aam
jecxz
cmp
stos
mov
xor
adc
xor
cdq
add
dec
jp
adc
test
inc
(bad)
leave
or
add
adc
add
mov
repnz
jg
lds
jmp
push
loopne
les
jp
push
shl
in
and
sbb
ret
jb
test
mov
and
add
push
or
leave
test
inc
push
cmp
jo
lods
xchg
aaa
daa
jmp
(bad)
dec
cld
faddp
cmp
or
cs
adc
xchg
mov
fcmovnbe
xchg
mul
push
test
and
sbb
leave
lods
outs
adc
mov
dec
cwde
les
loope
movs
cs
xchg
mov
add
(bad)
pop
xchg
pop
jae
jge
sub
aaa
and
jb
xchg
mov
jae
das
cwde
icebp
clc
xchg
pop
and
pop
shl
inc
and
dec
pop
inc
dec
sbb
mov
dec
outs
in
fmul
jle
jb
xor
loopne
cmps
das
inc
mov
inc
fdiv
fadd
repnz
mov
sbb
outs
addr16
repnz
and
retf
pop
repnz
ins
inc
mov
nop
jbe
cmp
int
ds
or
daa
mov
outs
paddb
jnp
mov
pop
das
cmps
idiv
fisub
xchg
add
jo
ss
push
inc
retf
jae
xor
inc
mov
push
sub
pop
jb
xor
mov
add
jo
hlt
(bad)
xchg
adc
sbb
adc
inc
xchg
adc
adc
rcr
in
jns
dec
xchg
test
ss
sbb
cs
mov
sub
sbb
cmp
push
sbb
in
mov
shr
push
gs
pop
scas
mov
jmp
or
sbb
pop
shl
mov
retf
cwde
jmp
inc
dec
fdivr
dec
cmp
cmp
loop
jbe
mov
lds
inc
mov
and
pop
cmp
adc
jp
test
mov
stos
neg
cmps
and
je
cmp
push
out
arpl
movs
not
mov
outs
sbb
xlat
(bad)
push
aas
aas
mov
fdiv
sub
sbb
stos
es
int
daa
sahf
xor
mov
fbld
ret
and
mul
and
cmps
adc
lock
mov
jl
bound
lds
sbb
clc
sbb
cmp
mov
adc
ds
and
in
jno
fsub
popf
xadd
stos
test
shl
hlt
fst
stc
out
cmp
pop
xchg
mov
out
dec
xor
out
mov
and
aad
movs
loope
pushf
iret
mov
out
out
xor
cmp
sahf
movs
repnz
jbe
into
sbb
movs
(bad)
std
shl
xchg
cmps
xor
mov
adc
adc
leave
sar
add
xchg
dec
mul
jnp
mov
sbb
movs
jle
and
sub
(bad)
shl
jns
ja
repnz
sub
sar
mov
bound
push
movs
sbb
cld
mov
cdq
(bad)
mov
sti
mov
push
in
jg
shr
mov
stos
sbb
mov
jmp
out
inc
xor
add
push
lds
mov
aaa
repz
jp
adc
in
(bad)
pop
mov
movs
fidiv
mov
push
addr16
mov
pop
jp
or
push
xor
les
cmp
jae
mov
popa
loop
xor
cmp
pop
(bad)
jp
mov
pop
pop
ficom
push
xlat
push
clc
ss
mov
fldcw
mov
ins
lds
mov
mov
ja
mov
xchg
push
add
push
(bad)
sbb
cmps
das
(bad)
jmp
cmp
lock
xchg
leavew
leave
jno
dec
and
test
jmp
or
add
lods
mov
jnp
aam
inc
mov
pop
ja
sub
xor
sbb
add
js
cmps
rol
popf
sti
mov
lahf
(bad)
ja
jmp
int
enter
out
scas
out
mov
das
mul
cmp
xchg
xchg
fs
cmp
xor
neg
outs
fcomip
sub
or
pusha
xchg
scas
pop
and
add
or
ret
ins
mov
leave
ficomp
or
xchg
mov
cmp
in
inc
jle
push
mov
jo
dec
cmc
test
inc
loope
imul
iret
imul
imul
(bad)
fdiv
outs
pop
sbb
and
or
mov
push
mov
loop
dec
das
cwde
xor
call
into
in
xchg
inc
fistp
dec
sbb
scas
and
xor
popf
mov
out
aas
js
mov
mov
nop
(bad)
leave
push
and
imul
in
test
push
and
push
jmp
mov
mov
dec
adc
sar
nop
cli
pop
sahf
movs
mov
jge
fsubr
dec
push
cmp
popa
mov
jle
mov
pop
dec
add
movs
xchg
stc
push
aaa
sbb
sub
out
imul
fistp
jmp
sub
lds
fs
shr
xchg
mov
jns
clc
aaa
jno
jbe
pushf
sbb
mov
aas
adc
into
outs
xor
push
sbb
gs
in
mov
or
gs
add
mov
jl
and
fidivr
shl
dec
push
mov
and
xchg
xor
leave
push
mov
mov
sub
out
fidivr
jp
fst
sub
int3
dec
stos
jge
pop
ret
inc
out
add
(bad)
jne
jle
aaa
and
loope
fdivr
push
dec
jg
cmp
jl
push
dec
(bad)
mov
sub
into
xor
jle
adc
xor
aam
gs
adc
push
mov
mov
test
push
mov
push
mov
dec
jnp
cdq
test
loop
call
dec
mov
add
sub
loop
jmp
pop
inc
mov
jae
imul
cmp
cmps
or
cmp
jp
mov
push
cmps
daa
daa
outs
fisttp
jbe
and
stos
mov
rcl
fstp
inc
daa
dec
or
cmps
mov
pusha
jle
push
add
mov
popw
and
and
in
and
cmc
in
popa
jl
sti
in
jmp
(bad)
imul
jl
jg
les
cdq
push
mov
(bad)
pop
sti
sub
pop
stc
fs
jecxz
mov
in
retf
and
mov
fcom
and
lahf
jge
cdq
jl
shl
dec
shl
sbb
mov
cld
jg
jmp
int3
cmps
cld
loop
push
push
inc
xchg
and
idiv
and
jmp
sbb
rcr
pop
mov
dec
out
ja
out
fs
data16
dec
mov
jns
push
jge
loop
cmpxchg
inc
dec
dec
dec
test
jno
sbb
adc
and
adc
loopne
mov
mov
or
dec
pop
xor
jmp
lods
test
loop
mov
fbstp
jb
dec
movq
aam
les
xor
push
push
add
xor
test
pop
mov
and
and
push
xchg
jns
cmps
mov
icebp
push
inc
repz
mov
(bad)
push
out
add
inc
iret
mov
or
lahf
mov
daa
das
mul
cmp
inc
movs
cmp
sub
push
ret
lods
cmc
pop
sbb
sbb
mov
cmps
xor
gs
add
daa
and
stc
scas
(bad)
pusha
das
jecxz
ror
data16
dec
inc
fist
sub
call
(bad)
sbb
rcr
(bad)
bound
pop
js
dec
cmp
sbb
or
cmp
sbb
pop
mov
mov
or
outs
jne
push
fstp
retf
inc
add
or
inc
adc
dec
adc
lds
pushf
push
add
mov
pop
mov
jmp
and
bound
add
inc
cs
cs
ss
scas
loop
inc
out
mov
or
div
ret
ds
aad
cmps
out
addr16
xor
test
das
lahf
push
cmp
xchg
or
test
call
and
push
pusha
call
test
outs
dec
sub
inc
loope
dec
xor
ss
add
mov
ror
jmp
push
outs
imul
jge
lahf
xor
repnz
data16
jge
nop
les
cli
jns
jmp
test
stos
bound
hlt
mov
adc
jbe
mov
rol
mov
popa
adc
mov
sbb
xchg
cmp
mov
(bad)
or
pop
mov
cmp
mov
call
cli
and
cmp
inc
jne
xchg
and
xor
adc
mov
in
aaa
dec
jnp
lahf
cmp
data16
dec
repnz
je
xchg
dec
cmp
xor
aaa
add
sbb
mov
adc
push
and
xlat
jl
call
jle
aaa
and
jo
inc
pop
outs
popa
stos
jbe
je
stos
call
stc
cmp
mov
cld
sar
xchg
sub
pop
inc
pop
mov
popf
stos
and
adc
mov
bound
fadd
mov
ds
outs
cmps
cli
jmp
std
stc
sahf
adc
fnstenv
out
enter
and
push
jl
enter
sub
jae
nop
pop
mov
dec
xor
test
sub
cdq
dec
sub
mov
outs
add
cwde
cmps
stc
ret
adc
jo
ror
push
push
out
fmul
sub
mov
rcr
out
popw
sub
xchg
sub
adc
jle
loop
cli
mov
sbb
jne
dec
div
cwde
lods
cs
test
inc
iret
adc
fsub
les
cli
mov
enter
neg
into
icebp
out
push
push
scas
push
stc
xchg
adc
je
popf
jo
sub
cmp
mov
es
xor
ficom
fbstp
cmp
cwde
mov
addr16
push
test
in
jno
xchg
icebp
xchg
jl
cdq
lods
call
sub
lea
ret
xchg
test
jmp
mov
and
shl
int
push
ja
jmp
xor
sbb
jle
leave
ins
sahf
pop
fidiv
fidivr
add
or
(bad)
dec
cmp
jbe
xchg
imul
sub
pop
xor
int3
dec
dec
sub
dec
aam
and
les
call
div
daa
mov
inc
arpl
in
retf
daa
or
iret
movs
sub
leave
fs
test
sub
(bad)
pop
pop
xor
std
dec
leave
and
and
in
clc
jne
repnz
mul
call
dec
dec
inc
leave
jmp
jl
repz
push
out
mov
enter
mov
push
and
popa
pop
mov
imul
add
scas
xchg
dec
mov
out
div
enter
adc
cmps
lock
push
sub
dec
mov
imul
sub
shr
jbe
push
xor
lock
in
call
loopne
sub
rol
dec
jge
iret
jmp
fld1
stc
cmps
add
movs
sar
bound
lods
push
in
imul
pop
cmp
scas
enter
mov
cmp
repz
push
adc
adc
out
sub
or
in
add
push
add
ss
inc
inc
out
and
sub
ficom
cmc
in
test
std
fisttp
inc
pop
dec
jb
inc
(bad)
aas
add
test
lahf
cmc
sbb
push
xor
cs
add
lds
inc
push
lea
repnz
cld
cmp
pop
xlat
mov
imul
cli
stos
mov
mov
inc
push
cmp
loopne
ffree
mov
and
and
lds
push
sar
cmps
adc
out
shl
outs
mov
pushf
xchg
jl
js
adc
movs
std
and
sub
sbb
push
sub
test
aam
retf
fiadd
jnp
stos
fldl2t
jmp
xor
lock
pop
and
call
jnp
add
sub
sub
sbb
dec
hlt
sub
push
and
cs
es
pop
stos
xor
mov
xchg
fcom
mov
or
scas
mov
or
cmp
aad
mov
out
mov
xor
retf
mov
sbb
js
int3
pop
mov
fnstcw
push
(bad)
xor
ja
push
enter
test
pop
inc
add
test
icebp
mov
retf
out
test
(bad)
sbb
pop
inc
movs
jne
xchg
ins
int
mov
movs
mov
loope
push
xchg
movs
outs
cmp
ss
adc
sbb
ins
in
inc
pop
jns
adc
retf
adc
mov
inc
and
or
into
sub
(bad)
not
adc
stc
daa
cs
pop
jae
push
stos
xor
cs
inc
(bad)
repnz
sub
ret
mov
call
loope
add
ds
(bad)
lock
in
or
in
ds
rcr
out
cmp
lock
stc
push
clc
popa
ficomp
mov
ror
retf
and
and
xchg
inc
lahf
test
test
xor
jp
mov
jmp
jne
or
repz
jbe
in
mov
loop
mov
mov
cmp
sbb
dec
push
pop
adc
rcr
sahf
xor
mov
jbe
in
sar
mov
je
imul
mov
int
sub
and
push
fwait
hlt
jno
xor
cli
jmp
inc
mov
push
mov
retf
and
xchg
push
xlat
jmp
inc
rcr
xchg
adc
inc
fwait
lods
xchg
mov
nop
rcl
call
retf
and
cmp
inc
add
mov
sub
push
rol
(bad)
and
mov
dec
jb
pop
and
(bad)
sub
cdq
je
jo
aam
in
inc
dec
nop
jae
fisubr
mov
or
hlt
call
cmc
neg
pop
mov
inc
dec
cmp
(bad)
icebp
call
arpl
stos
and
push
and
mov
inc
fwait
out
jmp
inc
jae
icebp
and
cmp
cmps
(bad)
jle
adc
push
mov
repnz
stos
retf
not
sbb
and
out
xor
mov
mov
or
inc
jbe
cmp
inc
clc
jmp
cmp
mov
mov
(bad)
bound
push
gs
cmc
jecxz
jmp
cmp
push
xor
mov
pushf
cwde
scas
or
lods
or
pop
vmread
icebp
adc
loopne
imul
rol
out
mov
inc
inc
xor
cmps
push
pop
push
mov
push
enter
push
int3
and
push
xchg
dec
xchg
faddp
in
mov
adc
jmp
xlat
dec
aaa
int3
aas
sti
ret
mov
sbb
int
test
imul
fsub
clc
out
jae
pop
cmps
jmp
push
rcl
mov
push
lds
push
clc
fldenv
pop
cmp
imul
mov
test
sub
xor
push
stos
(bad)
adc
mov
mov
xor
push
xchg
lock
je
clc
(bad)
pop
jge
(bad)
sti
bound
jecxz
sar
push
enter
mov
sbb
and
push
aas
aad
fmul
imul
cwde
jecxz
jp
sub
pop
iret
dec
or
pop
push
icebp
inc
popf
adc
adc
push
cmps
mov
in
sti
loopne
das
mov
jae
push
xchg
in
inc
leave
push
mov
push
inc
sbb
(bad)
bnd
loope
scas
cdq
sub
retf
jmp
add
push
movd
mov
push
inc
loop
lds
mov
adc
xchg
fcomp
repnz
lods
retf
xor
jb
stc
cdq
push
mov
mov
out
in
mov
lds
outs
mov
stc
sar
(bad)
loope
inc
pop
dec
xchg
adc
xlat
call
aaa
cmp
xchg
xchg
outs
mov
out
jb
mov
shr
and
inc
ins
dec
fs
jo
xchg
ins
adc
xchg
repz
mov
mov
inc
pop
arpl
in
cmp
mov
idiv
icebp
out
jo
fild
pop
sub
fidiv
sbb
cmp
push
sub
sub
movs
jge
les
mov
inc
xchg
in
add
int3
les
lods
xchg
hlt
add
imul
stos
add
add
div
call
test
ret
nop
jge
jbe
daa
dec
rol
iret
cmp
dec
cdq
xor
cmps
pop
xlat
test
call
mov
retf
das
jb
jle
pop
xchg
cld
bound
mov
push
xchg
cmps
push
scas
test
add
cmc
daa
lods
sub
mov
cdq
loop
loop
inc
mov
jp
xor
daa
add
adc
adc
cmp
in
mov
mov
dec
mov
ds
ins
cmp
xor
movs
mov
movs
mov
ss
cli
out
push
sbb
dec
or
nop
xor
xchg
mov
push
xor
sbb
adc
ds
clc
cdq
push
push
hlt
fmulp
fild
jecxz
and
cmp
das
fldenv
test
inc
jmp
sbb
adc
pop
(bad)
icebp
jno
sub
xor
adc
xchg
in
outs
retf
push
inc
repz
outs
fst
rcl
or
jo
jnp
dec
bound
repnz
sbb
test
adc
dec
or
adc
sub
add
xchg
dec
jp
jmp
lock
jnp
xor
jmp
inc
sub
push
mov
ins
sub
fwait
stos
push
popa
cdq
stos
imul
vmovapd
aad
movs
ins
and
inc
mov
test
es
das
mov
stc
in
dec
js
dec
movs
xchg
xor
and
(bad)
outs
icebp
add
and
cmp
in
mov
and
mov
pushf
addr16
xchg
es
xchg
frndint
cli
jnp
push
mov
dec
repnz
shr
adc
shr
mov
jmp
or
stos
stos
and
sti
adc
or
mov
jle
sti
and
jle
fbld
mov
ins
mov
inc
lea
jmp
cmp
and
mov
mov
fiadd
jbe
sbb
mov
cmp
xor
rep
test
gs
mov
xchg
shr
retf
sub
shl
dec
xor
xor
clc
rcl
push
lods
sub
push
jns
cld
mov
jmp
aad
and
lods
adc
call
and
dec
pop
aad
mov
jge
or
push
ja
jbe
jp
test
(bad)
repz
pop
mov
and
push
xchg
sbb
sub
stos
aaa
popf
mov
adc
sbb
enter
sub
stc
push
bound
push
ret
cmp
enter
jl
push
push
retf
adc
mov
call
mov
xor
in
lea
add
fwait
sub
jae
inc
shl
mov
lods
inc
addr16
sbb
stos
aaa
out
fcmove
or
adc
inc
inc
xchg
inc
icebp
sub
push
pop
leave
jg
clc
stos
push
jmp
mov
pop
sbb
xlat
out
dec
pop
xchg
mov
rcl
xor
iret
mov
mov
(bad)
mov
adc
out
addr16
std
dec
jp
pop
add
cmp
sbb
sbb
jl
and
mov
test
and
mov
xor
shr
fisttp
int3
push
or
test
jmp
ss
add
ds
pop
xchg
ja
mov
scas
jns
or
or
and
in
int3
out
and
push
aaa
jecxz
jb
and
cmc
nop
mov
xor
gs
push
sti
fsubp
and
mov
jae
retf
fbld
popa
lods
push
aas
ficom
push
or
outs
cwde
push
sub
int3
xor
aaa
aam
ins
jnp
push
sahf
adc
test
add
cmc
test
push
test
pop
aam
mov
xor
les
out
mov
cld
xor
into
xchg
out
ds
pop
call
push
inc
adc
loope
cs
pop
imul
test
jmp
(bad)
sbb
fwait
mov
mov
ss
add
inc
jae
scas
xchg
inc
sub
xor
fwait
dec
(bad)
dec
pop
fst
and
adc
enter
idiv
dec
(bad)
mov
sub
pop
sahf
sbb
jl
jno
xor
mov
dec
xlat
sbb
mov
mov
out
xchg
push
mov
sub
push
add
fucomip
push
mov
push
stos
xchg
inc
out
mov
mov
rcl
adc
lods
adc
repnz
push
xchg
mov
sub
sbb
aas
jge
nop
lea
jg
retf
in
pop
shr
xchg
cld
push
mov
push
cmp
add
jecxz
push
pop
mov
and
jp
(bad)
ins
ret
fisttp
scas
push
sbb
inc
mov
xchg
jl
push
lods
mov
rcl
es
retf
js
sub
jmp
inc
mov
call
mov
jbe
sbb
mov
(bad)
xchg
scas
cmp
jecxz
add
sub
neg
push
repnz
cs
push
add
lock
std
imul
cmp
add
and
jg
icebp
enter
cmp
and
mov
inc
mov
or
jmp
push
scas
add
or
neg
xchg
popa
mov
rcl
out
cli
mov
mov
or
jno
add
jp
pop
cmc
or
mov
aad
cmp
push
ins
dec
mov
nop
xor
pop
pusha
fsub
mov
push
aaa
push
call
stc
adc
ret
lahf
adc
mov
mov
lods
pop
les
mov
xor
inc
test
dec
repz
ss
call
out
out
fistp
gs
in
stos
lock
icebp
sub
in
cmp
push
sbb
ins
jo
fidiv
ret
xchg
stc
out
test
dec
ja
daa
xor
outs
scas
test
into
or
fdivr
fmul
sbb
or
stos
shl
and
inc
cmp
rol
iret
shr
push
xor
jb
icebp
xor
pop
nop
pop
nop
and
es
push
cmp
push
add
sub
ins
es
inc
addr16
or
mov
sbb
stos
test
sub
xchg
lods
lock
leave
sbb
fcmovb
aas
cs
arpl
mov
imul
aas
mov
aam
push
call
repnz
rep
loopne
test
bnd
lods
call
pop
lods
jp
jecxz
mov
cld
xchg
sub
sub
aam
aad
xchg
mov
lods
push
or
push
jbe
loope
xchg
fsub
ins
sti
(bad)
stc
cmc
xchg
mov
mov
xchg
xlat
push
and
xchg
push
stos
cmp
mov
adc
pop
retf
adc
mov
out
adc
xchg
(bad)
test
and
xchg
xchg
jnp
call
mov
push
sti
add
adc
pop
into
pop
pop
int
(bad)
aam
mov
jl
cs
aad
adc
and
mov
or
jcxz
jo
out
jmp
push
cmp
scas
mov
les
lock
and
push
in
and
inc
pop
stos
dec
xor
lods
sub
push
int3
inc
push
ja
jmp
stc
xor
inc
mov
into
bound
pop
sub
dec
retf
mov
out
scas
jp
mov
push
xor
add
push
cwde
je
mov
psrlq
push
mov
std
in
leave
push
dec
dec
xor
jno
cmp
xchg
dec
cmp
cmp
dec
(bad)
jmp
pop
add
xor
rol
outs
or
shl
fs
adc
repnz
jns
adc
scas
outs
or
adc
out
xor
mov
into
xchg
adc
jno
lock
mov
push
mov
inc
cdq
push
or
pop
popf
push
and
popa
push
test
cmc
pop
cli
ret
pop
test
dec
inc
repz
aaa
push
scas
jge
popa
clc
add
cdq
mov
pop
mov
xor
data16
push
and
loopne
imul
lock
add
pop
imul
fild
mov
out
mov
inc
aaa
mov
dec
or
stos
dec
fs
or
std
es
adc
jbe
xchg
jge
mov
mov
addr16
sbb
dec
xor
cmc
jp
in
add
(bad)
loop
sub
or
or
xchg
adc
mov
lds
add
jbe
dec
rcr
mov
push
jge
loopne
out
lock
es
int3
fst
in
aas
aad
add
and
sub
mov
and
mov
or
push
(bad)
scas
lahf
pop
stos
sub
push
add
jb
int
imul
cmovb
cmp
imul
xchg
cld
mov
hlt
mov
or
jmp
test
nop
add
add
out
push
mov
mov
mov
xor
mov
mov
mov
add
scas
jb
ja
and
push
packssdw
shr
ins
xor
jbe
addr16
pop
fcmovu
cwde
les
cwde
cmp
push
sbb
cdq
xchg
mov
cvttps2pi
mov
sbb
xor
test
or
(bad)
jnp
in
and
mov
shl
stc
scas
movs
pop
lds
std
aaa
push
mov
add
sub
call
clc
fstp
mov
pushf
xor
xchg
sub
in
inc
dec
hlt
dec
stos
jmp
js
ins
es
or
not
sbb
xor
fdivp
je
aaa
je
push
push
mov
pop
icebp
aad
mov
stos
xor
jg
adc
add
add
retf
mov
add
rcl
xchg
xchg
xchg
and
jge
scas
fild
shl
iret
call
mov
xchg
push
aad
inc
adc
fcomp
jae
dec
and
xor
aas
pop
repz
adc
cmp
addr16
inc
push
pop
mov
adc
mov
hlt
push
cmps
outs
test
stos
jle
xor
xor
test
cmc
inc
and
jns
xor
js
and
cmp
adc
jnp
sub
scas
enter
sar
inc
add
stos
dec
test
dec
add
loopne
mov
into
dec
rcl
push
jbe
cdq
in
fsubr
cwde
adc
dec
inc
mov
das
(bad)
cli
movs
retf
neg
dec
test
xchg
xor
mov
fimul
mov
inc
loop
(bad)
cmps
fadd
lock
das
and
ins
out
cmc
jnp
je
mov
retf
pop
jb
test
aam
and
mov
icebp
xor
ret
nop
retf
pushf
xchg
iret
sub
stc
aad
jg
out
gs
addr16
cmp
jo
pop
mov
fndisi(8087
lea
fsin
lods
stc
cli
cmc
aam
(bad)
in
and
xor
(bad)
mov
jmp
xchg
jmp
sbb
jns
jmp
fistp
mov
pop
and
scas
inc
bound
dec
dec
cs
fdiv
jp
dec
dec
cmc
ss
retf
nop
stos
and
mov
sub
aaa
xchg
test
pop
cmc
dec
jae
push
mov
fwait
sti
mov
(bad)
(bad)
pop
push
jne
(bad)
mov
inc
lds
pop
and
pop
push
stc
retf
std
pop
sub
not
test
loope
fdivrp
(bad)
fxch
mov
cdq
xchg
cmp
adc
pop
sub
mov
pop
xchg
sub
jmp
scas
mov
das
dec
loopne
std
fldenv
or
loope
dec
push
int
mov
dec
movs
mov
push
ret
popf
pop
pop
(bad)
pop
mov
(bad)
int3
cdq
xchg
cmp
fisttp
jae
fldenv
xor
je
jno
loop
add
push
test
cmp
cmp
mov
jbe
dec
dec
sbb
and
movs
leave
imul
out
xchg
cmc
es
enter
cmps
retf
or
xor
mov
and
aad
push
jne
in
scas
pusha
xor
ret
push
iret
cld
mov
addr16
pushf
ins
jmp
gs
sub
out
in
sub
scas
or
int
rol
mov
adc
mov
xchg
jl
add
in
sub
leave
cmp
loopne
push
mov
das
cwde
arpl
retf
add
(bad)
in
and
xchg
push
xor
(bad)
jns
sub
xor
push
rol
xchg
cs
out
sub
imul
jp
add
or
jl
(bad)
frstor
cmc
sub
fmulp
and
mov
push
cdq
shl
mov
mov
mov
rol
mov
inc
sbb
lock
push
call
out
lahf
ret
jge
dec
pop
add
hlt
mov
ret
in
mov
(bad)
(bad)
nop
cld
test
pop
mov
pop
mov
jbe
fucom
inc
jmp
mov
or
sbb
out
into
rcr
outs
iret
lea
jmp
pop
cld
lods
xor
es
jne
movs
sahf
xchg
mov
mov
(bad)
pop
jmp
enter
dec
fwait
xor
jae
pop
sub
adc
cmp
jl
lods
add
xchg
mov
fdiv
xchg
movs
mov
sbb
inc
ins
(bad)
mov
push
push
lods
and
out
icebp
adc
(bad)
mov
sbb
in
and
js
cmp
mov
add
int3
es
gs
push
ins
mov
mov
stos
loop
mov
rcl
mov
jge
ins
addr16
cld
repz
push
jne
jbe
jne
adc
push
mov
cs
dec
push
imul
ss
mov
adc
dec
lods
xchg
lahf
sbb
mov
je
xadd
mov
fwait
add
out
gs
sbb
xor
shr
dec
repz
inc
sbb
daa
pushf
push
adc
les
xchg
xor
inc
stc
std
push
sbb
test
or
(bad)
std
jecxz
jecxz
(bad)
mov
sub
mov
mov
es
in
xor
jmp
inc
(bad)
std
xchg
test
movs
add
push
(bad)
shl
mov
mov
aad
sbb
stc
jg
imul
ins
test
test
imul
fcmove
nop
pop
cld
fwait
test
shr
adc
das
sahf
sbb
sbb
push
sub
cmp
push
push
movs
jb
mov
in
arpl
sub
(bad)
fwait
xor
sbb
inc
ss
mov
sbb
inc
push
stos
imul
outs
mov
push
jg
cli
pop
inc
test
jnp
dec
cmp
mov
xchg
xchg
outs
dec
cmps
inc
push
int3
in
add
and
jb
fcomip
mov
scas
push
lea
sbb
jge
cmp
fs
mov
cwde
in
sub
ds
jb
xchg
push
ds
jbe
lahf
ss
mov
jmp
jp
jg
xor
je
push
inc
aas
sar
sub
mov
push
push
icebp
cwde
clc
(bad)
mov
inc
xor
(bad)
mov
cmps
call
pushf
pop
cli
push
add
jmpw
cmps
iret
loop
xlat
mov
adc
cmc
aam
(bad)
push
scas
push
jmp
push
sub
or
jne
push
ds
adc
cmp
retf
cmp
jae
retf
cmps
cmc
in
pop
mov
iret
pop
lods
loopne
ffreep
jb
and
ds
ins
mov
jge
and
mov
das
mov
arpl
sti
sar
xlat
in
icebp
push
(bad)
push
dec
cmp
int
mov
inc
outs
mov
idiv
sub
std
mov
lock
jmp
add
int3
imul
pop
push
push
popf
inc
or
addr16
xchg
mov
imul
call
cld
push
adc
xlat
fistp
enter
std
jmp
jb
xor
mov
mul
std
imul
in
ins
or
and
stos
cmps
dec
inc
pop
aad
je
xchg
loopne
addr16
cld
test
icebp
movs
and
retf
xor
cmp
out
jmp
out
in
pop
push
popa
ja
loop
loope
(bad)
stos
call
dec
shl
mov
test
adc
push
adc
fidivr
lock
test
ins
or
jae
push
xor
sbb
xchg
jno
jle
shl
pop
xchg
test
pop
xlat
jge
and
sub
je
aaa
adc
clc
mov
scas
mov
inc
push
(bad)
mov
bound
or
mov
popf
and
ret
xor
std
scas
dec
shr
cmps
in
xor
push
cmp
xchg
mov
xor
(bad)
popf
fstp
addr16
out
pop
enter
sbb
inc
xor
jmp
inc
inc
ficomp
icebp
dec
shl
not
inc
and
xchg
mov
ins
movs
pop
inc
das
adc
mov
adc
mov
punpcklbw
sub
out
sbb
push
fimul
sbb
outs
in
aam
pop
xchg
add
xor
mov
pop
lahf
out
pop
add
fcomp
xchg
mov
jno
adc
scas
mov
or
and
mov
mov
ds
sbb
rol
movs
cmp
jle
mov
xchg
retf
dec
xchg
ins
dec
(bad)
rcr
leave
scas
in
mov
and
push
push
fadd
adc
cmp
into
fstp
icebp
ficomp
std
adc
daa
bound
sbb
mov
mov
loopne
or
mov
sar
ror
dec
iret
lahf
dec
jne
repnz
xchg
gs
ss
or
add
pop
and
loope
aam
inc
in
int
iret
arpl
sub
xchg
lods
pop
(bad)
sub
sub
cmp
jo
jg
fadd
cmps
mov
lods
push
repnz
cmp
in
or
add
push
adc
or
mov
retf
aaa
es
test
cmp
aad
inc
push
repnz
xchg
cmp
shl
jp
jo
imul
loopne
mov
enter
addr16
shl
adc
dec
push
fsubp
leave
mov
add
imul
stos
fmul
fiadd
inc
cmp
rcl
sbb
std
fst
pop
sub
jne
shl
fistp
cmp
jge
or
fistp
ret
cmp
and
jge
push
fcom
push
outs
pop
xchg
out
mov
jno
(bad)
pop
(bad)
outs
push
pop
xor
jbe
ins
mov
mov
icebp
ins
cdq
adc
adc
cmp
mov
add
stc
ficomp
stos
fsub
cmp
mov
jb
(bad)
ror
add
dec
nop
rcl
mov
mov
push
mov
sti
sbb
cmp
frstor
mov
xor
sbb
mov
loop
jecxz
retf
imul
and
pop
fild
jne
popf
jns
mov
push
out
sbb
xchg
add
sub
jecxz
and
cmp
enter
ss
xor
inc
ins
stos
data16
mov
mov
fisub
pop
imul
ss
cmp
les
clc
popa
or
nop
push
rcl
cli
jne
repnz
pusha
mov
fistp
loopne
xor
das
out
jmp
jecxz
ins
addr16
fnstcw
int3
aad
add
outs
cld
clc
sub
pop
adc
adc
daa
mov
sbb
call
pop
jmp
cmc
push
or
add
xlat
shl
ficomp
lds
out
and
pop
sub
jmp
mov
cmp
psubw
lock
push
adc
add
lea
bound
push
push
and
cld
jae
mov
scas
adc
push
les
mov
nop
push
pop
js
ror
in
ins
pushf
ins
popf
cwde
adc
pop
jne
daa
xchg
sub
test
push
mov
adc
in
shl
jae
push
mov
leave
sbb
fldenv
outs
dec
mov
xor
int
pop
cmp
mov
cs
sub
mov
nop
or
arpl
lock
jg
cmp
mov
or
in
cli
push
lea
ret
pop
sti
push
mov
mov
popf
push
leave
repz
adc
sub
xchg
cmp
test
adc
mov
loop
repnz
mov
outs
push
pop
mov
lods
dec
jecxz
jb
es
push
clc
lock
xchg
call
shl
in
xchg
mov
mov
mov
or
mov
sub
dec
call
push
das
dec
icebp
push
jae
xchg
pushf
call
mov
adc
pushf
and
aas
xor
xchg
icebp
jge
shr
xlat
cmp
scas
mov
ret
cdq
retf
xchg
cmp
pushf
sbb
fstp
sbb
cmp
fst
cmp
nop
sub
push
lods
xor
in
adc
mov
push
outs
(bad)
inc
pop
mov
cli
retf
cmovne
(bad)
in
pushf
mov
sahf
(bad)
jg
xor
dec
inc
mov
hlt
les
iret
sbb
dec
mul
add
pop
loopne
mov
push
stc
sub
test
dec
xchg
ins
fwait
sub
mov
sar
pop
push
mov
int
(bad)
dec
add
pop
jecxz
push
ffreep
and
in
test
mov
xchg
cmp
xor
xchg
mov
into
sub
enter
or
xchg
mov
or
mov
xchg
sub
sub
les
xlat
push
mov
or
xor
xor
lods
(bad)
clc
mov
adc
test
jl
xchg
jb
push
fdivr
mov
jb
jle
jmp
mov
cmp
pusha
pop
(bad)
push
mov
mov
mov
mov
aaa
adc
(bad)
popa
pop
std
iret
shl
or
push
sbb
mov
jns
ret
jb
dec
pusha
leave
stc
dec
std
mov
cmp
mov
adc
sbb
jecxz
test
fucompp
pop
out
dec
mov
add
repnz
xchg
int3
aam
daa
dec
(bad)
mov
dec
inc
mov
mov
popf
test
in
sub
pop
xor
jnp
pop
mov
shr
ja
mov
sub
mov
add
neg
mov
emms
jmp
sub
fdiv
fcomp
and
pop
shr
(bad)
in
pop
scas
dec
retf
inc
pop
adc
push
mov
movs
jecxz
pop
add
shr
cmps
jl
fs
sbb
push
jp
iret
sar
xchg
cld
lods
mov
sahf
jns
xor
in
sbb
sbb
(bad)
cld
jge
test
jecxz
xchg
fsubr
push
jp
inc
es
xchg
mov
psubsw
jnp
cmc
push
inc
rcr
movs
adc
adc
adc
shr
sub
imul
daa
pop
imul
push
or
and
fidivr
jecxz
mov
sahf
pop
out
cmps
pop
jb
repz
ret
cmp
stos
or
fs
loopne
repz
leave
addr16
call
mov
add
mov
pop
xor
stc
mov
je
retf
loope
cld
sub
or
and
push
push
inc
lds
ins
sbb
jne
bnd
movs
pop
or
sub
scas
in
(bad)
data16
xchg
xchg
rcl
jg
int3
jns
push
xchg
sti
icebp
add
add
mov
xchg
or
arpl
in
pop
xchg
ins
loopne
std
push
jmp
xchg
rcl
mov
mov
sar
push
pop
sub
pop
pop
pop
aas
xlat
in
xchg
sub
pop
jno
dec
push
call
shl
ins
adc
out
adc
xchg
sar
push
outs
imul
push
sbb
leave
(bad)
aaa
mov
xor
out
xchg
test
pusha
jnp
fucomi
mov
or
mov
rcr
push
out
xor
aad
(bad)
sahf
push
les
inc
repnz
clc
pop
jb
rcl
mov
dec
adc
mov
xabort
push
shr
jle
jne
popa
jno
mov
call
xchg
pop
sbb
(bad)
sar
push
aaa
sbb
jmp
call
xchg
int3
dec
hlt
cdq
scas
push
push
inc
mov
cmps
push
repnz
cmps
mov
add
adc
push
jnp
daa
push
outs
neg
cmp
jp
sub
jb
test
sbb
imul
imul
sub
loop
addr16
mov
push
clc
daa
stc
nop
dec
push
or
es
inc
xchg
sar
adc
in
mov
ror
retf
cmp
into
or
ficomp
xchg
and
loop
ret
push
jmp
inc
xchg
pop
fst
fwait
call
inc
and
pop
pop
inc
scas
popf
pop
ja
lahf
gs
mov
out
les
adc
icebp
mov
in
in
pop
repz
sbb
int3
push
jae
ins
inc
popa
mov
cmps
daa
packssdw
js
xchg
sub
push
and
jg
jae
mov
das
mov
inc
push
bound
repz
lock
push
sahf
mov
js
dec
mov
mov
push
xchg
and
mov
outs
popf
dec
adc
cs
icebp
in
dec
and
push
imul
ins
les
or
sbb
ret
nop
icebp
rcl
or
pop
jl
jno
lods
dec
aad
dec
shr
push
cmp
lahf
cmp
jl
jo
mov
mov
out
(bad)
ficomp
imul
out
sar
push
xor
repz
fsubr
mov
fidiv
adc
cmps
jbe
add
inc
pop
or
aas
ret
sbb
jae
stc
daa
jecxz
shl
dec
push
jg
sti
or
and
or
add
cmp
repz
popf
jae
test
mov
les
retf
dec
bound
push
pop
fwait
int
pop
or
or
jae
and
jae
or
pop
cdq
sub
movs
arpl
or
cmps
sbb
push
xor
sbb
and
ins
lea
jl
mov
sub
mov
jecxz
nop
push
jno
add
adc
popf
in
push
sub
es
out
inc
icebp
loope
push
and
mov
mov
rcr
inc
loopne
ret
mov
scas
mov
cmps
jl
push
in
pop
and
aaa
or
sahf
out
mov
mov
or
jmp
jns
pushf
sbb
mov
mov
nop
xchg
fdivr
or
arpl
scas
(bad)
jmp
mov
in
inc
sub
pop
xor
(bad)
cmc
fisttp
and
int
adc
test
inc
pop
cmc
jecxz
sbb
dec
(bad)
(bad)
mov
cmp
cmp
push
aad
cmp
(bad)
dec
jge
adc
imul
je
aam
outs
pop
mov
stos
xor
ins
push
mov
dec
ficom
pop
pop
call
cdq
lea
sar
mov
fidiv
out
mov
mov
es
int
cmp
mov
push
aaa
push
fisttp
cmp
inc
nop
fidivr
hlt
push
out
and
sahf
stos
sub
call
or
sub
or
ret
stos
(bad)
iret
and
popa
hlt
push
and
xchg
and
popf
mov
push
ror
scas
xchg
push
aas
je
lock
lss
mov
repnz
in
lds
jl
mov
es
bound
dec
(bad)
out
xchg
je
sahf
push
mov
sbb
jb
pushf
cmc
dec
bound
imul
and
ja
inc
test
sahf
test
pop
add
push
arpl
jp
mov
scas
out
test
pushw
in
mov
cdq
fnsave
leave
xor
lea
getsec
int3
ja
bound
mov
(bad)
mov
scas
inc
nop
(bad)
in
cli
sub
xchg
pop
cs
retf
mov
jbe
fstp
into
jns
mov
xchg
into
sub
out
fwait
stos
fild
inc
cwde
js
mov
data16
(bad)
repnz
fnsave
adc
pushf
out
xchg
not
inc
imul
inc
jmp
xchg
fiadd
adc
pop
test
lds
and
sub
cmp
mov
jp
xor
ficom
add
pop
ins
adc
inc
pop
pop
bound
xchg
xchg
mov
add
stos
imul
xor
dec
mov
xchg
push
sub
push
je
jl
gs
int
(bad)
pusha
mov
push
rcr
test
aam
inc
out
add
pop
clc
hlt
dec
fidiv
push
fist
sub
xchg
repz
xchg
fwait
(bad)
and
add
jg
jbe
dec
dec
pop
inc
sbb
pusha
mov
stos
pop
mov
fcmovne
das
sub
cmc
aaa
jle
jmp
adc
and
mov
addr16
les
sub
xor
or
xchg
movs
stos
enter
xchg
test
or
mov
cmps
dec
retf
nop
dec
stos
push
sbb
movs
inc
mov
mov
inc
sbb
sub
in
jmp
fistp
sub
aam
scas
xchg
arpl
iret
jmp
push
add
pop
sbb
push
stc
jns
or
xchg
jb
sbb
out
pusha
sub
test
jl
rcl
aam
pop
xor
loop
push
imul
push
ret
push
xor
mov
push
and
call
adc
out
out
pop
in
aad
hlt
or
mov
imul
sbb
lods
int3
cld
scas
call
stos
clc
xor
les
imul
sub
clc
push
(bad)
into
mov
scas
jno
jnp
mov
xor
cld
dec
or
jo
or
inc
mov
jl
jns
jb
test
mov
sti
int3
jl
sbb
xchg
or
bound
add
les
addr16
fwait
outs
or
out
addr16
popa
bound
sub
fwait
in
jns
sti
in
jbe
lahf
jbe
enter
add
sbb
cmp
ror
push
fisttp
js
jo
fmul
push
jmp
das
mov
rcr
jns
aad
jbe
shl
mov
adc
psubw
adc
pop
and
ins
loope
sub
scas
pop
adc
jge
pop
lds
enter
pop
clc
or
dec
iret
rcr
ficom
and
mov
sbb
adc
imul
call
adc
mov
and
pushf
push
icebp
jo
sbb
push
sub
push
(bad)
jle
adc
retf
mov
jmp
bound
mov
icebp
jp
inc
in
inc
setbe
xchg
icebp
(bad)
adc
push
push
jge
adc
xor
inc
loop
pop
mov
sahf
xor
test
mov
adc
ror
popf
adc
fsubr
sub
xor
test
psubw
dec
xor
add
aam
push
ret
mov
jmp
out
cmc
shl
cdq
mov
loope
xchg
aad
(bad)
jnp
dec
loop
cmp
dec
ret
call
adc
xor
pop
clc
xchg
nop
or
shl
push
or
jae
or
fs
std
ret
sahf
imul
cmp
mov
fidivr
and
(bad)
ins
lock
adc
mov
jg
scas
fcmovb
pop
xor
xchg
(bad)
gs
fwait
addr16
jnp
mov
fisttp
dec
push
and
outs
inc
mov
and
lea
xor
dec
xor
mov
sub
jbe
push
jae
sbb
int3
xchg
outs
hlt
ins
mov
mov
cld
and
xlat
std
xchg
jae
fadd
inc
mov
pop
pushf
add
sbb
sbb
out
iret
push
stc
in
enter
sbb
ss
int
jmp
lock
enter
adc
and
shl
adc
cli
sahf
and
sbb
or
fsub
cmp
daa
pop
cmc
add
popa
test
jb
mov
fmul
(bad)
cli
jmp
adc
movs
call
out
push
lods
push
ret
(bad)
fldenv
repz
mov
ret
cmp
out
mov
out
mov
and
in
inc
out
adc
gs
dec
lods
pop
movs
mov
retf
loopne
add
sbb
and
rcr
out
movs
or
in
gs
mov
jbe
daa
(bad)
cmp
pop
and
mov
imul
test
scas
fwait
shl
or
pop
(bad)
jg
cdq
mov
movs
jg
sub
dec
push
mov
xchg
loope
(bad)
cmp
inc
enter
rol
mov
movs
push
jnp
jb
dec
div
ret
mov
push
mov
(bad)
in
inc
xor
xor
mov
por
xchg
mov
pop
pushf
aaa
test
fadd
xchg
lods
inc
lods
and
fwait
add
dec
shl
inc
je
pop
and
pop
pop
je
inc
sbb
pop
cmp
pshufw
jp
dec
arpl
leave
push
movs
xor
ret
fidiv
jo
sbb
mov
jmp
push
loopne
mov
sub
(bad)
retf
daa
xchg
cmps
inc
in
and
mov
jge
cmp
shl
movs
mov
int3
movs
lods
mov
pop
fist
mov
cmp
push
dec
adc
xor
test
leave
out
inc
inc
dec
sti
repnz
cmc
test
shl
and
out
adc
or
mov
sbb
(bad)
aad
mov
int
xchg
clc
ins
cmp
cli
inc
loop
or
fs
push
fist
test
sbb
and
mov
cmp
sub
in
xchg
pop
dec
push
fnsave
adc
arpl
jb
xor
in
out
or
fisubr
and
ins
clc
std
inc
in
lahf
popf
clc
add
shl
cs
test
data16
mov
mov
adc
cmp
and
aam
xchg
imul
cmps
or
cmp
or
push
out
mov
mov
(bad)
adc
out
lods
xor
push
inc
mov
cdq
js
jl
iret
retf
xlat
popf
pop
in
hlt
out
aad
pop
retf
jb
adc
test
lds
mov
enter
add
jnp
inc
adc
sub
cmc
mov
das
add
jle
add
mov
shl
xchg
push
(bad)
pop
or
xor
push
outs
lds
test
and
sbb
loopne
inc
xor
sbb
outs
sbb
or
fcomp
into
pop
xor
sbb
dec
cmp
and
mov
jnp
push
retf
push
mov
sar
sub
stos
jb
mov
push
dec
lock
jne
lods
pop
add
cs
add
pop
stos
inc
and
aad
jmp
jmp
pop
xor
jns
leave
mov
shr
mov
jae
sar
hlt
cli
cmps
mov
cmp
outs
cmp
into
sahf
jmp
jne
jne
ds
push
iret
fwait
and
adc
loope
das
inc
scas
cmc
inc
xor
iret
popa
call
gs
lahf
jmp
jl
and
adc
xchg
push
mov
mov
jne
push
sub
imul
pop
mov
inc
in
and
sbb
jmp
jecxz
cli
jp
aas
das
add
inc
loopne
dec
adc
ss
pop
mov
daa
xor
pop
pusha
outs
dec
mov
dec
out
repz
mov
jae
jp
inc
lahf
loop
mov
repnz
lods
mov
lock
loope
mov
mov
imul
pop
pop
pop
mov
mov
cdq
pop
(bad)
mov
sub
jecxz
adc
idiv
inc
mov
pop
pop
bound
push
retf
jns
stos
pop
lds
add
sub
out
push
sbb
movs
add
sub
(bad)
dec
or
mov
xchg
inc
mov
sti
imul
cmp
inc
xchg
cdq
(bad)
aad
mov
sub
pop
je
ss
mov
dec
repz
adc
inc
sahf
mov
aad
imul
xor
repz
sub
or
mov
pusha
ins
dec
xchg
imul
lock
fdiv
jnp
imul
mov
push
fcom
jmp
push
pusha
inc
mov
cld
or
or
iret
(bad)
shl
push
(bad)
dec
and
or
sub
idiv
lahf
cmp
xchg
or
ja
inc
(bad)
push
mov
scas
call
outs
dec
cmp
adc
and
inc
popf
sbb
mov
(bad)
fsub
mov
addps
dec
adc
sbb
or
into
leave
ds
xchg
mov
dec
test
pushf
and
pushf
cmps
mov
push
mov
jecxz
popf
outs
aad
jmp
add
xor
popf
add
or
cdq
enter
addr16
pop
push
frstor
sub
inc
not
mov
push
sti
call
mov
add
arpl
sbb
push
pop
jmp
xor
mov
cmps
push
cmc
(bad)
into
shl
jle
dec
xor
popa
cdq
imul
dec
clc
push
push
lds
xchg
inc
mov
pop
adc
adc
adc
and
push
pop
and
cmp
dec
(bad)
sub
(bad)
mov
lahf
(bad)
cmpxchg
outs
inc
rol
xchg
cmp
inc
ret
mov
inc
cmp
icebp
pop
dec
push
jp
leave
(bad)
std
jmp
cwde
shl
icebp
sbb
shl
fisubr
in
out
push
mov
dec
jp
pop
inc
mov
outs
movs
test
or
retf
aam
sub
or
fsubr
arpl
shl
cli
push
mov
mov
(bad)
cld
mov
xor
xor
loop
dec
jb
pop
in
div
rol
mov
mov
out
lods
jno
in
imul
retf
int
stos
adc
sub
adc
cmp
bound
mov
xchg
js
jb
scas
cli
leave
mov
aam
xchg
into
and
and
arpl
adc
mov
xor
movs
retf
out
cmp
xor
pop
mov
xchg
jmp
enter
mov
adc
xchg
dec
lods
and
xor
addr16
pop
adc
mov
xchg
pusha
mov
rol
mov
lds
push
lods
call
aaa
jmp
(bad)
pop
jbe
jo
neg
mov
aaa
push
mov
push
cwde
lahf
lds
imul
dec
hlt
mov
push
mov
mov
sbb
int
clc
push
cdq
outs
inc
push
mov
push
gs
sbb
arpl
sbb
dec
cmp
inc
sbb
aam
ror
outs
scas
lock
cli
out
or
mul
mov
sub
push
jl
push
int3
jne
push
inc
daa
add
jb
mov
cmp
mov
inc
xchg
cmp
test
jnp
int3
mov
push
jns
scas
(bad)
div
xchg
dec
dec
mov
add
js
xchg
cwde
cwde
test
dec
mov
or
pop
jne
adc
xchg
jmp
fdivr
out
in
pop
sbb
xor
fdivr
cmp
xchg
(bad)
out
aad
dec
ret
out
mov
in
pushf
cmp
cmp
popa
int3
dec
lods
pop
int3
fsubr
sahf
jns
(bad)
popa
xor
es
enter
pop
ds
aas
fs
addr16
and
cmps
sar
xchg
rcl
xchg
xor
hlt
push
push
sub
bound
mov
cwde
bound
jp
dec
jae
ror
mov
imul
xchg
mov
sar
or
(bad)
mov
inc
imul
inc
adc
loope
inc
clc
cmp
xchg
cdq
push
ss
inc
movs
sub
mov
jns
cmp
loope
mov
loopne
cmp
push
stc
in
es
inc
loopne
xchg
sub
cmps
mov
sbb
jmp
outs
push
adc
fistp
pop
xchg
mov
push
push
add
xchg
cs
test
jmp
arpl
jp
lods
test
mov
xor
(bad)
adc
adc
push
ss
hlt
mov
mov
add
out
sub
pop
xchg
adc
and
mov
lock
mov
xor
sbb
xchg
shl
adc
ror
mov
cmp
add
pop
cmp
mov
pop
add
mov
test
mov
(bad)
lea
push
adc
sub
jno
fsubr
ror
inc
sar
ins
mov
fldenv
out
(bad)
(bad)
enter
div
push
cmps
scas
xor
out
xchg
push
mov
xor
xor
int
fcomp
add
movs
mov
pop
sub
adc
jecxz
clc
das
sbb
inc
lahf
xor
mov
out
push
lock
gs
int
cmp
mov
hlt
pop
cwde
jmp
jns
or
push
mov
jle
cwde
jno
sbb
aad
mov
adc
jmp
mov
cmps
mul
not
xor
inc
jb
pop
lods
hlt
xchg
cli
std
jns
pop
jle
dec
mov
mov
stos
sub
mov
stc
inc
mov
push
sub
shl
lods
inc
dec
ja
out
xchg
sub
cmp
jno
and
inc
mov
jp
lahf
mov
xor
add
mov
es
test
mov
sbb
sbb
and
sbb
dec
add
or
push
push
xlat
retf
inc
ficomp
dec
bound
call
inc
jae
imul
jae
hlt
retf
ins
sub
pop
fcmovb
inc
test
xchg
push
xchg
sub
in
shl
in
dec
dec
arpl
xchg
cdq
or
inc
mov
bound
cmp
push
repnz
pop
mov
aam
ret
cwde
sub
mov
pop
scas
jo
sub
std
mov
test
gs
lds
inc
lods
inc
mov
sub
xlat
jne
dec
mov
hlt
pusha
sar
xlat
stos
xchg
adc
fisub
and
ins
inc
jle
mov
pop
inc
or
xchg
imul
std
push
inc
out
in
and
jmp
rcr
fbstp
jmp
call
loope
movs
dec
sbb
lds
cmp
aaa
or
mov
test
ins
and
hlt
adc
add
int
push
aam
mov
mov
push
jns
sbb
pop
in
in
sub
out
dec
cmp
shr
pop
mov
jmp
ss
fcomp
pushf
cmp
enter
add
inc
inc
jle
xor
xor
jno
daa
pop
ins
in
fnstcw
cwde
and
iret
and
and
mov
cdq
rcl
jmp
cld
sbb
jnp
cmp
mov
rcr
pop
add
jecxz
mov
jl
mov
mov
aam
jg
inc
das
les
hlt
in
call
cs
fisubr
les
inc
cmp
ins
loope
sub
clc
jmp
es
mov
jp
out
or
add
(bad)
jmp
jne
sbb
adc
shl
add
mov
or
mov
aas
popf
add
arpl
jbe
xor
(bad)
movs
or
inc
dec
jge
shl
xchg
or
xchg
lahf
mov
mov
jns
jno
sbb
daa
adc
pop
bound
mov
repz
mov
dec
push
stc
sahf
xor
xchg
aaa
push
mov
xor
dec
mov
jb
mov
inc
std
cmp
pusha
push
cwde
cmp
mov
es
lods
and
xchg
adc
dec
xchg
dec
cmp
pop
push
dec
inc
clc
and
icebp
adc
xor
iret
or
into
dec
add
pop
xor
aam
mov
pop
cs
mov
add
outs
cmp
dec
mov
mov
sti
push
movs
mov
arpl
jmp
dec
mov
adc
xchg
cld
jno
fwait
mov
js
mov
jmp
mov
or
cmp
outs
ret
xor
mov
aas
scas
gs
fdivr
inc
push
cdq
mov
and
cwde
in
mov
cmp
ds
jecxz
sahf
test
and
call
sbb
cs
daa
jg
push
push
xchg
xchg
add
hlt
cmp
int
mov
xor
cmp
xor
(bad)
loopne
add
cs
push
push
stos
fild
stos
jbe
push
sub
mov
pop
and
scas
mov
mov
pushf
call
push
lods
repz
push
xchg
and
cmps
aaa
xchg
adc
iret
loope
jne
or
retf
icebp
mov
rol
push
mov
sbb
mov
mov
loope
(bad)
dec
mov
mov
adc
mov
addr16
sti
pop
adc
ja
loope
dec
xor
test
push
cmp
lea
mov
add
jge
int3
mov
cmp
and
not
inc
sub
jp
mov
das
jge
sbb
js
xchg
sub
jecxz
inc
jle
and
pop
fidivr
(bad)
lock
push
bound
stc
pop
cmp
rcr
(bad)
scas
es
call
pop
add
mov
sar
out
in
sub
or
mov
call
mov
pop
jmp
clc
mov
icebp
aam
adc
add
repnz
std
inc
imul
shl
test
call
fst
or
iret
dec
loopne
pop
into
repnz
stc
fldenv
push
lea
push
push
fsub
inc
call
stc
pop
add
in
test
xchg
pushf
mov
call
iret
bound
ds
add
hlt
lahf
leave
adc
pop
lahf
int
or
idiv
(bad)
sub
(bad)
jle
pop
fwait
imul
inc
sub
stos
mov
or
fwait
xchg
(bad)
int
nop
push
dec
jb
mov
loope
in
dec
jo
mov
adc
imul
mov
je
loope
jl
imul
sub
mov
es
mov
jbe
or
add
imul
loope
inc
cmp
mov
mov
inc
div
loopne
(bad)
call
cmp
xchg
outs
push
mov
mov
cdq
cwde
fadd
sahf
shr
adc
jb
outs
ret
cli
or
dec
fs
mov
dec
inc
enter
xchg
jne
add
out
ret
fsubr
mov
push
xchg
inc
iret
mov
stos
outs
or
das
mov
inc
push
dec
enter
jecxz
iret
adc
pop
xchg
pop
imul
push
dec
fsub
pop
hlt
test
ins
inc
mov
dec
mov
test
mov
xor
popf
inc
add
loop
fisttp
pop
sti
mov
dec
loop
rcr
pusha
dec
repz
xor
popa
or
pop
adc
cdq
leave
ja
mov
scas
fwait
imul
je
mov
fld
push
cmp
adc
cwde
ret
or
(bad)
outs
or
inc
test
inc
shl
add
jne
mov
pop
and
dec
adc
inc
mov
cmps
fwait
shl
inc
mov
mov
enter
push
movs
sub
jle
add
sar
cli
neg
and
xor
das
pop
cmps
xchg
xchg
ja
daa
out
adc
mov
leave
mov
(bad)
into
sub
pop
sbb
xor
call
mov
jb
out
movs
dec
add
push
inc
xor
xlat
jae
fadd
test
mov
es
adc
mov
jb
lahf
in
dec
test
jl
push
mov
jl
in
xchg
add
inc
push
push
int
sub
push
std
xor
sbb
fist
aas
jecxz
mov
lods
xchg
push
or
out
jne
sbb
mov
jbe
sub
test
mov
mov
xchg
aas
mov
pop
adc
sbb
mov
dec
sub
xchg
ins
xchg
cmps
jle
sbb
mov
lock
xchg
imul
adc
lds
dec
bound
es
pop
shr
xlat
xchg
mov
in
rol
add
dec
add
(bad)
mov
inc
lods
in
fstp
dec
imul
iret
cmp
(bad)
push
cmp
dec
shl
mov
outs
adc
add
xor
fcom
or
jmp
not
ins
jb
sbb
jl
mov
in
lock
call
jle
add
inc
inc
sub
mov
scas
sub
xlat
cdq
inc
out
dec
xchg
pop
sbb
pop
or
ss
or
cmp
jecxz
(bad)
sbb
jb
inc
pop
xchg
cs
aad
sbb
ja
pop
lock
fsubr
cwde
movs
(bad)
out
or
dec
lea
adc
daa
cmps
pop
and
call
mov
das
jecxz
sub
xchg
scas
xor
fs
adc
push
inc
cwde
jmp
shl
test
mov
call
inc
or
mov
mov
ins
add
inc
dec
popf
push
dec
in
repnz
enter
pop
jge
retf
cwde
pmulhw
out
push
hlt
mov
xchg
xchg
pop
les
repz
add
std
pop
push
mov
xchg
pushf
dec
je
mov
jnp
or
mov
js
jb
jb
jno
in
fs
add
outs
sbb
ja
ins
inc
mov
dec
xchg
mov
pusha
outs
or
shl
imul
push
into
push
fwait
iret
popa
inc
xor
popf
sbb
fs
mov
enter
dec
scas
(bad)
pop
fs
sbb
sbb
xlat
pusha
ficom
xchg
cwde
inc
xchg
inc
scas
or
mov
mov
jecxz
jns
pop
pushf
sbb
dec
pop
sahf
xchg
push
pop
jns
cmp
sbb
std
aas
cmp
sbb
sbb
add
out
cdq
pusha
xor
adc
neg
add
adc
bound
gs
iret
inc
adc
and
adc
xchg
mov
jne
push
stos
mov
mov
cmp
dec
xor
adc
call
aam
adc
or
into
sbb
stos
adc
rcl
jl
pop
aas
addr16
push
cld
test
retf
or
leave
dec
xor
icebp
sahf
out
lahf
pop
mov
stc
frstor
arpl
push
cmp
inc
lock
ins
add
(bad)
add
ins
jmp
jmp
(bad)
or
adc
ficomp
sbb
mov
adc
inc
test
sub
mov
jg
jns
das
or
jge
(bad)
call
push
mov
adc
shr
add
adc
sbb
sbb
int
cmc
test
imul
mov
cmp
out
loop
outs
pop
daa
xchg
in
mov
shl
mov
sahf
add
or
xchg
pop
add
sub
movs
cmp
add
and
push
mov
fxch
mov
mov
jmp
shr
xchg
jl
inc
sub
sar
out
imul
loopne
xchg
and
in
jns
add
xor
es
bts
js
pusha
fimul
aam
cmps
jnp
mov
std
retf
(bad)
push
in
ret
loope
dec
nop
and
daa
movs
leave
mov
adc
dec
sbb
mov
jbe
adc
nop
dec
icebp
jle
cmps
bound
jl
dec
hlt
inc
lahf
dec
stc
mov
xor
out
scas
dec
jbe
mov
cmp
lea
xchg
stos
xchg
mov
sbb
out
sub
fmul
test
adc
jecxz
sub
shl
mov
push
arpl
enter
pop
adc
cmp
cwde
push
(bad)
push
outs
jne
push
add
inc
(bad)
cmp
cdq
mov
jmp
cs
xor
sar
xor
or
push
sbb
adc
fs
cmps
leave
jbe
in
ins
and
dec
popf
sbb
xor
pop
and
dec
shr
rcr
sar
lods
jae
adc
aaa
adc
es
inc
push
loopne
lahf
mov
add
adc
iret
jno
jns
mov
mov
jb
dec
cmps
cmp
cmp
enter
xchg
dec
in
push
adc
stos
cmp
or
repz
lds
aad
lods
sbb
cmps
cmps
mov
cwde
(bad)
jae
pop
fcom
push
jmp
mov
(bad)
and
out
jmp
pop
rcr
or
mov
push
push
sti
mov
das
cld
ret
xor
and
push
int3
push
xor
in
daa
in
adc
stos
outs
sti
cwde
dec
inc
sub
mov
xlat
out
or
fcomp
sbb
xor
repz
mov
(bad)
cmp
data16
adc
fiadd
inc
dec
cmp
and
imul
lock
fmul
xchg
push
ds
iret
bswap
mov
nop
or
pop
pop
(bad)
mov
dec
scas
push
jmp
add
aam
stc
and
lea
sub
adc
mov
xchg
jl
sahf
sbb
enter
jnp
pop
inc
jbe
or
xchg
lahf
dec
xchg
lods
sbb
enter
xchg
ror
movs
sahf
push
sti
leave
pusha
fxch
xchg
mov
pop
(bad)
popf
and
mov
in
cmp
retf
inc
gs
and
lock
out
outs
mov
mov
addr16
xor
mov
rol
jae
in
(bad)
int
add
inc
(bad)
mov
cwde
daa
xchg
rcr
xor
adc
sub
outs
inc
dec
std
outs
mov
hlt
les
push
cld
jns
das
lock
cmp
adc
jge
ror
push
or
popa
add
ins
lock
xor
jno
pop
and
mov
(bad)
hlt
inc
add
repz
add
mov
out
mov
fisttp
sbb
xchg
push
es
pop
fldcw
jno
ret
and
enter
fiadd
sub
hlt
cmp
ret
mov
mov
stos
pop
or
inc
cmp
adc
lods
lock
mov
adc
add
add
push
inc
mov
neg
cmps
xor
in
pop
sub
cmp
dec
xchg
nop
add
or
and
inc
mov
mov
inc
loope
out
and
stc
adc
shr
mov
loop
imul
bound
dec
imul
jne
dec
jmp
adc
stos
push
aas
aad
inc
mov
xchg
mov
xlat
and
stos
icebp
gs
mov
fistp
in
inc
sbb
xor
mov
pop
fwait
bound
ins
dec
sbb
ins
dec
pop
mul
add
lods
jl
mov
int3
ror
push
dec
mov
mov
ds
std
push
jns
in
add
psubq
jp
or
pop
xchg
jecxz
and
pusha
fild
pusha
ss
push
sub
dec
fsubr
js
call
xor
pushf
popf
adc
hlt
clc
dec
push
and
add
stos
push
jle
aaa
outs
int
mul
and
cmp
inc
jo
fbstp
stos
call
outs
psadbw
(bad)
iret
mov
pop
inc
mov
into
loope
jno
cmp
dec
popa
mov
(bad)
call
or
inc
fistp
mov
ds
(bad)
stc
pop
or
jle
adc
data16
cmc
jl
xchg
jne
(bad)
mov
pushf
(bad)
push
jo
(bad)
imul
sbb
jmp
(bad)
in
(bad)
setno
pop
leave
mov
test
repz
ins
pop
mov
pop
jb
repz
mov
imul
dec
push
or
and
cmp
adc
mov
jg
dec
imul
ins
lds
lods
inc
jae
loopne
pop
inc
or
push
rol
sti
or
dec
inc
mov
sub
gs
cmp
push
mov
cmp
inc
call
dec
test
rcr
adc
push
xchg
pop
xchg
retf
mov
xchg
int
aam
push
sti
das
loopne
mov
cs
add
je
cmp
push
and
fs
xchg
pop
mov
mov
clc
out
inc
lock
mov
push
xchg
add
js
stos
sar
pop
test
jmp
mov
push
push
nop
mov
inc
sbb
inc
jmp
pushf
dec
(bad)
push
ret
daa
cwde
mov
push
jl
xchg
lods
push
mov
fidivr
cmp
or
test
sbb
mov
rol
cwde
sbb
inc
imul
and
into
mov
push
stc
push
cmc
cmp
int3
xchg
fnstsw
pusha
pushf
xor
jg
lods
jge
jp
inc
(bad)
stos
stc
cwde
int3
adc
or
mov
stos
cmp
xor
xchg
mov
xchg
nop
inc
mov
ss
pop
stos
pop
test
jbe
aas
xor
inc
ret
test
test
daa
pop
mov
xor
push
sub
jmp
aas
clc
mov
jne
and
shr
fs
mov
mov
hlt
xor
fist
shl
push
shl
xor
mov
shl
lds
dec
push
pusha
jl
dec
adc
(bad)
push
dec
push
push
aas
sub
sub
es
dec
das
pop
mov
es
or
xchg
lock
pop
call
(bad)
add
shl
sbb
pop
mov
sti
sub
mov
cmp
das
pop
scas
pop
mov
sub
jp
push
xor
sbb
stc
adc
and
and
dec
jmp
test
retf
xchg
inc
mov
xchg
gs
rol
mov
enter
mov
call
and
cmps
add
lds
repnz
data16
fisttp
cmp
and
shl
inc
cwde
sahf
fsubr
inc
neg
xor
movs
dec
xor
sub
inc
adc
mov
cmps
xor
xlat
sub
call
mov
mov
xor
push
mov
xchg
add
xor
xlat
pop
into
push
fnstenv
pusha
xchg
mov
icebp
outs
shl
dec
mov
(bad)
mov
jno
adc
add
jmp
push
imul
add
in
pop
out
add
imul
xor
icebp
pop
fld
aad
fiadd
xlat
mov
je
ins
add
jecxz
dec
lods
mov
pop
sub
xor
inc
and
cmc
sbb
mov
xor
sahf
add
xchg
and
jno
sbb
loope
in
jmp
jmp
dec
mov
ror
call
aad
pop
mov
push
or
(bad)
or
inc
push
ja
sbb
out
and
or
loope
les
repnz
adc
movs
leave
sub
cld
xor
or
pop
sahf
xor
int3
sti
mov
jle
add
push
arpl
stc
ja
sbb
fcom
pushf
mov
imul
and
adc
cli
inc
push
add
pop
stos
cmps
out
int3
sub
loope
adc
xor
inc
push
adc
fadd
cmp
cmps
fistp
es
test
loope
mov
dec
jne
mov
mov
mul
fsubr
push
cmp
sbb
sbb
mov
mov
cdq
js
xor
and
jg
test
cmc
out
and
mov
xor
cli
cld
inc
push
inc
mov
ret
fsubr
dec
addr16
les
add
jb
sub
minps
mov
jns
cmp
pop
ds
in
clc
pop
push
sahf
sbb
nop
push
cmp
and
sub
daa
fisub
mov
xchg
adc
cld
iret
and
enter
fs
cmc
inc
rol
les
xchg
arpl
cmc
aad
arpl
mov
lds
xor
lods
das
add
neg
sti
cmp
mov
xchg
mov
sbb
in
dec
push
pushf
imul
ss
repz
dec
outs
push
ret
inc
(bad)
pop
xor
xor
arpl
test
xchg
pop
and
adc
pop
data16
stos
jnp
xchg
xchg
xor
ds
in
inc
mov
stc
push
xchg
xlat
sub
mov
lock
cld
dec
dec
pop
mov
(bad)
retf
dec
outs
adc
push
out
sub
add
jp
imul
pop
xor
sub
jge
xchg
in
repz
into
ss
mov
sub
xchg
push
ja
inc
dec
mov
imul
(bad)
cmp
xor
mov
cmp
ret
mov
mov
push
pop
scas
mov
mov
data16
mov
sbb
idiv
push
into
arpl
ds
jmp
pop
jnp
xor
inc
cmp
inc
in
cmp
pop
xchg
(bad)
xlat
inc
scas
or
popf
pop
jmp
mov
movs
hlt
aas
scas
sbb
lea
inc
pop
ja
add
enter
es
push
add
jmp
cmp
stos
cli
nop
fsub
push
add
jae
add
sar
xlat
loopne
mov
daa
out
imul
xchg
sbb
push
xor
scas
or
fistp
dec
and
aam
imul
stc
(bad)
mov
jns
or
sbb
stc
add
in
adc
xor
mov
adc
outs
and
push
jl
add
repz
(bad)
cmp
add
push
pop
xor
or
mov
pop
pop
sub
pop
pop
xor
push
jae
adc
mov
pop
fld
pop
or
fsub
sub
dec
sar
pop
push
popa
xchg
adc
test
in
jnp
pop
mov
xchg
inc
(bad)
push
arpl
cmp
push
das
xor
(bad)
pop
and
adc
mov
stos
aad
cmp
aad
sahf
pop
inc
cdq
js
das
pop
dec
push
scas
rol
pop
jnp
popa
xor
jo
shl
and
test
popa
icebp
push
pop
data16
mov
jp
into
into
fs
xchg
push
dec
test
rcr
test
push
aad
sahf
pop
loope
fs
jo
ret
jmp
pop
addr16
and
xchg
jecxz
clc
sub
jmp
shr
pusha
data16
sbb
test
mov
inc
lock
jnp
adc
adc
jecxz
pop
pop
pop
and
repz
pop
test
cmc
les
pop
mov
(bad)
jl
pop
xor
stos
(bad)
sbb
jb
sub
into
xchg
dec
leave
adc
mov
js
xor
add
sub
xchg
scas
xchg
(bad)
sbb
mov
imul
or
and
(bad)
xchg
ja
cmp
call
aam
es
jmp
sti
imul
mov
cmc
fiadd
pop
movs
jae
ins
in
cmp
lahf
and
ja
out
out
xchg
lock
or
sbb
ret
mov
xchg
inc
mov
cmp
xor
mov
out
jmp
cs
pop
mov
je
adc
xchg
test
jl
mov
fbstp
stos
add
mov
push
jecxz
xor
sub
jl
test
aaa
lahf
add
into
adc
mov
mov
hlt
xchg
xor
and
or
cmc
sub
inc
imul
fnstenv
movs
or
jecxz
cmp
bound
xchg
por
cwde
sbb
xchg
imul
mov
cli
lods
jo
dec
rep
xchg
xchg
(bad)
fimul
(bad)
aad
jae
and
add
mov
sar
ins
jge
push
or
xchg
pop
aad
xchg
sbb
jle
lods
jl
or
jno
push
adc
clc
loope
sahf
push
or
pop
popf
bound
rcr
xor
mov
cmp
inc
xor
or
lock
fmul
loopne
inc
sbb
cmc
pop
test
sar
(bad)
fsub
sbb
test
js
sub
jnp
lods
sbb
mov
imul
(bad)
sbb
cmp
sub
and
inc
test
or
or
out
mov
ret
imul
mov
sbb
or
fcomp
pslld
push
xlat
iret
xchg
and
sbb
adc
cdq
cli
or
bound
jmp
mov
jbe
daa
adc
fwait
jl
addr16
xchg
gs
jecxz
(bad)
imul
js
inc
cmp
mov
inc
adc
push
add
(bad)
pusha
mov
sub
ret
fwait
dec
ins
lods
nop
inc
int3
jne
out
cmp
xor
cmp
mov
out
adc
pop
cmp
dec
adc
adc
jns
popw
or
mov
test
(bad)
icebp
cmp
fdiv
je
inc
cmp
js
xlat
ds
fld
loopne
add
mov
mov
retf
out
fndisi(8087
stc
sbb
dec
xchg
jmp
movs
ds
mov
push
jp
mov
xchg
pop
push
jns
inc
call
xor
mov
add
dec
retf
mov
pop
imul
sub
cdq
loopne
pop
out
or
loopne
push
push
cmp
ins
or
aam
xor
xchg
out
push
cmps
mov
scas
push
sbb
and
inc
add
pushf
xlat
pop
mov
fstp
mov
ins
cs
sub
call
xlat
call
cld
gs
push
sti
sbb
sbb
repnz
leave
mov
mov
fnstsw
xchg
xchg
arpl
xchg
or
dec
jb
jmp
pushf
sub
mov
ret
sub
mov
(bad)
daa
and
fist
push
cmps
mov
data16
js
aam
jp
(bad)
int3
shr
call
fldcw
bound
enter
mov
pop
(bad)
xor
es
popa
enter
cmp
stc
iret
xchg
mov
xchg
push
clc
or
mov
push
movs
push
js
adc
(bad)
jmp
push
adc
adc
hlt
jns
inc
test
cvtpi2ps
into
adc
and
not
mov
sbb
adc
push
adc
or
sbb
hlt
jne
lods
mov
mov
call
das
push
mov
out
dec
scas
ror
xlat
cmp
mov
xor
sbb
es
mov
aaa
sub
retf
push
push
cli
xchg
dec
sar
adc
(bad)
mov
cmps
stc
rcr
cmc
ins
loopne
jae
lds
xchg
out
mov
add
push
add
scas
jne
jae
push
jns
and
shl
xchg
dec
call
movs
shl
mov
jmp
push
sar
sub
sub
push
out
rcl
xchg
adc
push
stos
cld
inc
pushf
mov
call
push
adc
cmp
ret
and
stc
dec
add
mov
mov
xchg
add
cwde
add
lahf
dec
call
fist
or
dec
add
in
imul
mov
out
nop
in
or
sub
call
pop
add
mov
mov
pop
lods
or
inc
mov
push
xchg
leave
sbb
std
inc
xor
push
dec
pusha
mov
mov
addr16
ss
xor
or
out
ds
stos
dec
neg
cmp
cmp
mov
mov
and
aas
mov
mov
fdiv
pop
popa
idiv
pop
mov
cmc
inc
mov
in
dec
mov
div
sbb
ret
xchg
imul
xchg
ror
std
and
pop
inc
adc
fwait
mov
xchg
mov
in
mov
sti
repnz
int
sub
push
jno
rol
je
xor
adc
jb
mov
pop
or
and
mov
push
jne
test
cs
jne
jns
jbe
int
(bad)
ret
fdiv
xchg
arpl
iret
je
or
fmul
push
popf
imul
sbb
retf
mov
xor
dec
test
jb
inc
mov
pop
inc
aaa
push
cmp
mov
pushf
push
or
jmp
sti
ds
inc
mov
aad
adc
call
repnz
jmp
dec
fadd
imul
inc
dec
jp
push
int3
jle
jo
cmps
out
pusha
jmp
mov
inc
lock
jmp
jl
into
and
sbb
xchg
mov
(bad)
jmp
push
push
test
and
cli
dec
push
int
pop
in
dec
push
mov
push
xchg
enter
(bad)
jmp
out
cmp
bound
in
bound
cmp
data16
addr16
in
cmc
fdiv
and
jnp
jmp
sub
imul
sbb
movs
adc
jp
fisubr
cmp
jmp
fcmovnu
in
xchg
and
xor
lods
inc
idiv
icebp
adc
aam
or
pop
call
cmp
cmp
into
cmp
cmp
mov
push
and
pop
mov
sbb
inc
mov
jae
xor
jbe
push
adc
movs
dec
cmp
ficomp
aam
push
movs
test
fistp
rcl
inc
add
push
push
pop
lock
add
or
mov
pop
das
sbb
pop
fidiv
mov
mov
dec
adc
dec
pop
jmp
mov
imul
mov
cli
dec
push
pop
or
std
loopne
shl
js
mov
(bad)
mov
test
xor
push
and
inc
pop
retf
shl
(bad)
xor
pop
popf
jo
outs
pop
es
enter
push
dec
xchg
xor
test
push
sbb
sbb
(bad)
loopne
dec
jecxz
adc
call
aam
(bad)
sahf
js
inc
cs
xchg
(bad)
fist
movs
fidivr
jmp
(bad)
pop
addr16
ja
xor
or
sar
ja
jg
dec
add
push
xchg
ds
hlt
fimul
add
loope
in
push
neg
and
pop
cmp
daa
js
pop
jno
(bad)
out
sbb
sbb
mov
nop
lock
retf
leave
jb
cli
cs
sar
or
hlt
or
cmps
add
and
outs
sbb
lahf
lock
mov
cmps
cmp
cdq
adc
push
sbb
mov
and
mov
cld
loopne
inc
imul
outs
imul
add
and
or
div
mov
xchg
dec
pop
jg
call
call
jnp
imul
aad
dec
sub
retf
add
imul
adc
lods
popf
loop
add
rcl
call
add
cmp
inc
jns
out
sub
push
sub
add
and
shl
mov
inc
dec
add
call
mov
push
in
or
loope
mov
push
sar
inc
push
xor
mov
push
jne
pop
inc
inc
(bad)
aas
mov
push
das
jle
mov
sbb
push
lods
(bad)
xchg
mov
outs
mov
push
cmp
jbe
sbb
and
xor
mov
outs
(bad)
xchg
enter
aaa
mov
lahf
clc
nop
or
cld
push
or
inc
inc
sub
addr16
js
ror
lods
xchg
and
cmp
sbb
cmps
sub
pop
out
sbb
je
dec
addr16
imul
pop
jmp
(bad)
xchg
in
cwde
popa
jg
inc
jmp
ja
dec
retf
sub
xor
nop
int3
xor
in
loop
dec
inc
mov
xor
sub
(bad)
mov
imul
or
push
mov
sub
lahf
es
out
xor
mov
adc
pop
cdq
clc
push
push
adc
movs
hlt
call
(bad)
ds
xor
mov
fbld
(bad)
fs
pop
cmc
(bad)
dec
xor
add
mov
dec
pop
add
mov
ja
loope
xchg
scas
jnp
add
or
dec
mov
or
popa
and
or
add
scas
movs
mov
sub
popa
cwde
and
test
jno
xchg
stc
loopne
aas
sar
mov
mov
and
cli
fidivr
pop
push
lods
test
add
inc
and
inc
jp
push
int3
inc
and
test
and
ins
or
xor
stos
pop
sbb
mov
cdq
(bad)
cld
jmp
and
mov
shl
cmp
xchg
addr16
shr
adc
ja
pop
cli
sahf
mov
cmps
clc
test
jb
ror
stos
in
dec
jg
jno
sbb
jns
ins
mov
or
xchg
aad
es
jbe
mov
leave
xchg
cmps
loop
imul
xor
aaa
(bad)
mov
out
jp
(bad)
shl
ror
adc
loop
sub
push
xchg
and
lea
mov
addr16
sub
pusha
pushf
test
push
xchg
fwait
ins
sub
lahf
and
sub
int
push
sbb
inc
out
out
push
cmp
xchg
pop
shl
inc
retf
push
sub
in
fld
movs
mov
int
mov
and
int
(bad)
fbstp
rol
stc
add
in
fucom
xchg
mov
je
icebp
sbb
out
push
out
mov
sub
pop
cmc
sub
leave
shr
push
pop
cmp
lods
pop
sub
popf
repz
mov
or
xor
movs
push
je
idiv
sar
pop
cmc
push
mov
dec
rcr
dec
xor
ins
mov
movs
adc
mov
push
mov
loope
cdq
std
xchg
repnz
adc
push
dec
pop
ret
ins
inc
out
or
jg
jle
xor
lods
and
cs
push
stos
dec
dec
add
dec
loop
xor
mov
jo
movs
nop
fadd
pop
(bad)
(bad)
clc
es
cs
push
xchg
in
mov
push
cmc
les
push
push
stos
mov
push
sbb
call
mov
popa
shl
retf
cs
xchg
data16
cmp
bound
cs
jge
rol
push
inc
das
pop
test
(bad)
ds
fst
lods
enter
cmp
fist
or
pop
cmc
aad
arpl
mov
jns
(bad)
frstor
add
int3
or
xchg
test
jmp
(bad)
in
cmp
push
push
xchg
jp
add
fnstsw
mov
cmps
in
push
cmp
jo
sti
and
jg
ins
add
fwait
pop
cmp
fnstcw
(bad)
mov
dec
sbb
out
scas
add
retf
inc
inc
jg
int
mov
xor
retf
add
fstp
movs
cs
xor
mov
add
push
inc
mov
mov
add
sbb
ins
inc
push
mov
and
dec
ret
fsubp
(bad)
xor
jl
jne
popf
sub
int
movs
mov
loopne
jmp
or
xchg
hlt
int
or
test
cmp
pop
div
rol
xchg
pop
sub
sbb
dec
mov
push
inc
xor
ss
mov
test
pop
stc
dec
mov
mov
dec
adc
pusha
mov
cmps
inc
daa
enter
add
pop
xor
ins
and
popa
mov
aad
inc
push
sbb
jg
outs
ja
stos
cmp
nop
xor
arpl
adc
or
xchg
mov
and
cmp
add
aad
or
retf
aad
dec
out
push
push
add
(bad)
jg
sub
mov
js
test
scas
mov
not
mov
mov
add
adc
out
cld
jbe
or
push
adc
push
cmp
fnstsw
or
jge
imul
inc
cdq
jge
iret
test
(bad)
xor
sub
cmp
gs
mov
fdivr
ja
mov
test
aad
mov
pop
ret
push
mov
xchg
popf
cmps
jecxz
mov
outs
jecxz
xchg
je
xchg
sbb
mov
je
shl
mov
popf
gs
mov
out
sahf
mov
dec
ret
add
mov
pop
clc
(bad)
and
ret
jle
sub
call
fisubr
popf
or
sub
popa
mov
outs
sub
icebp
popf
sbb
add
push
xor
push
cld
xchg
jmp
sbb
outs
sbb
js
xor
mov
xor
daa
mov
push
mov
push
lea
push
out
or
xchg
add
shl
(bad)
ds
jp
pop
jae
push
mov
cwde
push
jbe
push
push
aaa
and
xlat
pushf
fisttp
sbb
push
inc
add
enter
lock
out
inc
int3
cmp
sbb
xor
xor
lds
push
mov
sub
adc
xchg
pop
inc
mov
adc
sub
jbe
outs
jns
lock
fwait
pop
jns
cmp
int3
or
dec
imul
sar
fild
out
push
aaa
div
xchg
or
adc
scas
xchg
int
pusha
adc
cmps
mov
in
popf
adc
popf
pop
cmp
cmps
add
hlt
(bad)
xor
bound
retf
inc
mov
shl
es
outs
es
shl
or
sub
jl
retf
adc
test
push
call
(bad)
test
stc
fistp
enter
pop
iret
mov
xchg
aas
pcmpgtw
cmps
push
dec
aas
popa
or
jns
loope
and
sar
mov
jle
jle
mov
adc
cmp
xor
test
int
lods
clc
ret
shl
ins
dec
jne
sbb
mov
adc
repz
pop
sbb
mov
inc
mov
xor
mov
inc
in
gs
jp
mov
adc
xchg
call
fmulp
adc
bound
lea
push
or
outs
lods
jecxz
and
cs
(bad)
xlat
lahf
cmp
popa
jo
pop
or
jecxz
add
ins
pop
mov
leave
sbb
dec
push
push
stos
mov
aad
mov
cmp
sahf
shl
test
or
push
aas
mov
in
dec
dec
push
rcl
mov
aaa
and
call
scas
jp
jl
xchg
fisttp
sub
movs
in
sub
mov
test
sbb
ret
inc
cwde
hlt
inc
fist
push
lock
xchg
or
arpl
xor
(bad)
pusha
push
pop
popa
sti
clc
ret
xchg
leave
mov
loop
fst
dec
scas
jno
mov
mov
inc
or
sbb
adc
enter
sub
les
xchg
sbb
scas
xor
test
rol
push
push
ficom
xchg
sub
jg
adc
dec
jo
inc
add
pop
sub
or
out
es
stos
movs
push
jp
pop
hlt
mov
inc
xor
mov
lds
mov
ins
sbb
lea
imul
cli
popw
loope
into
jb
xor
repz
and
mov
data16
ss
mov
xlat
pop
cmp
or
ficom
dec
inc
mov
ds
sbb
imul
mov
cwde
mov
sbb
clc
or
push
xor
and
push
call
jno
mov
into
cmp
and
cmp
push
cmp
fld
sub
out
mov
btr
(bad)
jge
imul
imul
jmp
mov
arpl
fsubrp
aad
push
adc
mov
adc
test
pop
xor
mov
fcmovbe
dec
test
repz
or
xchg
repz
ds
inc
pop
repz
push
xor
cld
adc
and
ret
cmp
pop
push
xlat
movs
and
mov
mov
pop
ins
fcomp
in
call
jns
jl
into
jb
cld
bound
movs
(bad)
sbb
mov
ja
outs
icebp
outs
out
sub
aaa
jne
pop
pop
sti
cmps
test
push
dec
sub
pop
xchg
mov
jp
lods
rcr
es
repz
test
inc
inc
push
sbb
pop
addr16
jmp
ins
data16
jb
adc
lods
inc
dec
outs
gs
pushw
jb
sar
lds
(bad)
push
je
push
push
inc
fiadd
dec
mov
or
sub
scas
aam
pop
jnp
push
xchg
in
sbb
stos
int
in
ret
in
jno
repz
pop
jbe
int3
and
mov
mov
xchg
push
popf
scas
pop
aam
js
sbb
pushf
iret
dec
int
out
pop
jo
fistp
push
or
push
repz
outs
and
je
mov
(bad)
lock
ret
jmp
pop
pop
inc
add
dec
xchg
mov
add
loopne
fisttp
push
xchg
add
in
popf
push
push
pop
sbb
push
or
push
fadd
add
out
cmps
lods
daa
rol
(bad)
jp
cmps
pushf
add
dec
es
cwde
sbb
sub
xchg
jp
and
push
(bad)
adc
out
mov
out
in
nop
sub
adc
jge
das
jge
je
pushf
and
inc
inc
mov
jns
test
mov
cld
dec
push
or
(bad)
nop
addr16
sub
and
sub
xor
inc
xchg
push
sbb
mov
ret
pop
outs
and
and
sub
scas
xlat
jo
pop
jno
xchg
mov
mov
hlt
shl
(bad)
xor
jno
dec
fdivr
add
rcl
sbb
repnz
xor
xor
enter
cmp
sbb
leave
dec
rcr
cmp
jecxz
xchg
sar
fistp
(bad)
icebp
push
mov
aaa
jge
sbb
inc
inc
mov
(bad)
(bad)
dec
pop
nop
repnz
cli
xlat
call
gs
in
and
(bad)
mov
arpl
sub
mov
fbld
cmp
jle
cmp
cmp
div
mov
sbb
adc
mov
test
in
pop
cld
ret
xor
test
or
jmp
div
cmps
adc
dec
mov
mov
mov
cmps
sub
cmc
mov
pop
push
dec
aad
fisubr
cwde
mov
es
lods
out
mov
or
(bad)
cli
or
push
hlt
cli
retf
mov
fsubr
outs
push
scas
in
xlat
xchg
call
mov
(bad)
mov
iret
imul
mov
mov
aaa
inc
mov
cmp
push
repz
test
push
mov
test
ds
shl
xlat
aaa
jge
cmp
inc
jnp
das
ins
in
gs
dec
cmp
mov
and
and
xor
enter
xchg
ins
imul
jmp
inc
call
cmps
push
mov
aaa
clc
test
std
push
repnz
add
addr16
dec
nop
(bad)
idiv
adc
loope
out
push
call
jle
cdq
jmp
ret
xchg
jnp
pop
inc
les
mov
(bad)
dec
scas
sbb
mov
leave
and
sub
xor
lea
cmc
cdq
sub
leave
outs
leave
jmp
cld
adc
mov
fsubr
lods
out
add
sub
fmul
imul
xor
jl
adc
stos
cld
out
aas
ja
fidiv
repnz
sbb
fst
call
xchg
cmp
mov
sahf
out
add
adc
inc
stc
lock
aam
dec
sar
arpl
cdq
addr16
xchg
cld
outs
cmp
jns
xlat
or
stos
pop
push
mov
jg
mov
mov
sbb
xor
lahf
cli
and
pusha
adc
xchg
js
fst
pop
jmp
fdiv
xor
and
fadd
ret
ror
stos
mov
hlt
std
jecxz
(bad)
pop
cmp
hlt
loopne
sub
lds
sub
addr16
imul
and
dec
or
js
cli
dec
mov
std
add
rcr
fisttp
jg
retf
mov
sub
jnp
rcr
adc
sub
xchg
and
gs
mov
cmp
scas
call
jecxz
jae
add
jnp
xor
stos
ss
pop
xor
sub
cmc
xor
cld
add
aaa
sub
cmp
retf
les
cli
dec
pop
(bad)
mov
mov
jmp
adc
shl
or
out
ins
lahf
jmp
or
mov
popa
and
test
mov
add
push
jp
daa
mov
cmp
jnp
adc
dec
xchg
xchg
pop
ret
ficomp
ret
jge
ror
imul
fst
(bad)
not
das
ja
cld
and
hlt
lahf
push
and
push
data16
and
dec
mov
fistp
inc
ja
lods
test
adc
push
cmp
aaa
and
cld
das
and
jae
mov
xlat
sub
arpl
mov
rcl
lds
pop
push
pop
test
jmp
jge
mov
mov
rcr
test
dec
add
push
jne
popa
mov
xchg
rcr
push
(bad)
(bad)
sbb
test
jno
cmp
mov
cmp
or
pop
xlat
das
add
scas
ficom
test
adc
(bad)
out
sbb
neg
jmp
jno
mov
cmp
call
aaa
add
jle
test
xchg
dec
jnp
jnp
jo
mov
dec
xor
push
pop
adc
sub
add
dec
jge
jnp
sbb
xchg
fldenv
fcmovbe
adc
mov
jp
jno
and
xlat
cdq
mov
adc
ror
jmp
xchg
mov
ja
cmps
shl
adc
stc
xchg
icebp
xchg
push
retf
cmp
sub
jmp
xchg
and
inc
shr
jns
xchg
lahf
rep
sub
inc
(bad)
mov
iret
jo
xor
sbb
jno
shl
fisubr
mov
push
mov
es
adc
dec
dec
xor
push
adc
adc
movs
ret
dec
mov
jmp
(bad)
popa
mov
test
scas
xchg
ret
push
test
lea
test
inc
sahf
adc
sar
mov
add
daa
popf
push
inc
ror
retf
jge
bound
cmp
xor
addr16
stos
adc
mov
sbb
(bad)
jo
mov
cmp
test
dec
test
iret
jne
out
aad
call
clc
jno
(bad)
mov
mov
rol
cmp
icebp
pop
jae
mov
scas
sbb
and
sbb
mov
push
hlt
lods
sahf
xlat
pop
jle
test
movs
add
or
cmp
in
movs
arpl
addr16
clc
data16
int3
push
aas
push
xchg
adc
xlat
call
pop
and
outs
dec
dec
sub
scas
scas
and
xor
call
xor
xchg
pushf
add
jne
fdiv
js
cmp
ror
ja
out
stc
dec
push
test
cmp
fisubr
das
push
and
(bad)
das
les
jl
pop
or
or
xor
add
push
adc
add
jmp
jl
sub
or
adc
cdq
in
bound
add
lahf
icebp
add
pusha
inc
mov
dec
rcl
sbb
movs
sub
cmp
rcl
push
add
scas
push
jb
retf
aad
mov
or
pop
mov
add
hlt
pop
stos
mov
outs
jae
call
les
jl
xor
leave
(bad)
jno
jmp
loop
adc
in
jbe
ss
pop
push
repz
aad
movs
push
clc
mov
jle
repnz
pop
push
ror
ret
not
out
popa
mov
icebp
pusha
push
jne
aam
pusha
jg
ins
mov
or
sbb
enter
pop
mov
cli
clc
sbb
inc
imul
inc
dec
or
xor
push
test
sbb
imul
ins
mov
mov
mov
mov
xor
cmp
and
cmp
aad
aas
lahf
out
adc
cmp
stc
(bad)
int3
dec
and
rol
sbb
pop
cmp
xor
lock
fldenv
xchg
dec
cmps
mov
(bad)
ror
adc
ror
retf
pop
mov
add
xchg
outs
int
or
mov
mov
popa
sub
xchg
inc
pusha
xchg
rcl
jecxz
das
add
imul
add
sub
fs
fs
cmps
ins
xchg
inc
dec
inc
movs
pop
pushf
xor
or
scas
push
jbe
push
pop
inc
jle
xor
xor
xor
popa
xor
push
addr16
jnp
jno
in
shr
dec
into
(bad)
iret
loop
mov
(bad)
or
or
mov
mov
std
aad
inc
enter
dec
dec
jo
adc
lea
fmul
call
push
shl
xchg
inc
bound
xor
mov
inc
add
pop
in
cld
xchg
inc
jnp
popa
adc
push
aam
mov
jl
nop
ficom
stc
imul
cwde
imul
cmp
mov
data16
mov
js
pushf
cmp
push
dec
mov
cmps
das
mov
xor
add
imul
sub
jae
push
outs
(bad)
test
adc
rcl
jae
mov
call
sub
loopne
xchg
or
stc
out
js
pop
sub
or
lahf
jmp
push
iret
sub
xchg
cwde
cmp
add
push
lahf
jno
mov
out
push
jnp
je
mov
mov
loopne
shr
push
lods
rcr
xchg
retf
xchg
(bad)
push
jp
and
ins
inc
sub
lods
ds
mov
sub
inc
lods
and
enter
fmul
xor
out
out
scas
inc
inc
push
and
xchg
xor
mov
xchg
pop
sub
xchg
and
adc
addr16
sbb
into
adc
pop
popa
push
or
or
jl
sbb
xchg
loop
adc
push
ret
call
jl
lods
cdq
sbb
call
outs
pop
aaa
dec
retf
mov
inc
mov
bound
cmps
xchg
xor
push
push
loope
mov
and
pushf
push
and
dec
lea
xor
xchg
push
int
dec
mov
mov
loop
jmp
repz
aas
aas
mov
(bad)
xor
pop
cld
adc
mov
sbb
jp
xchg
fs
(bad)
push
retf
push
mov
cmp
inc
mov
icebp
ror
inc
or
xchg
xor
aam
(bad)
loope
add
iret
pop
jb
dec
mov
fxch
bound
mov
sbb
mov
add
jmp
inc
ss
adc
dec
xor
inc
clc
xchg
out
test
pop
jmp
cmp
out
mov
pop
retf
add
pop
mov
iret
lock
mov
fnstsw
daa
xchg
jnp
pop
dec
(bad)
fwait
dec
push
leave
push
sbb
inc
dec
loopne
cmp
js
fwait
dec
sbb
pop
jns
jp
stc
mov
push
sbb
imul
jb
pop
xlat
js
cdq
mov
dec
or
mov
xchg
or
xor
xor
cmps
pop
std
pusha
aam
(bad)
int3
rol
adc
stos
sub
xor
inc
(bad)
cmp
aaa
mov
test
mov
mov
fs
ror
shl
sbb
aaa
xchg
inc
jnp
and
sbb
aas
dec
pop
mov
out
lahf
xchg
adc
jp
(bad)
cmp
mov
cdq
(bad)
lahf
arpl
cmp
iret
ins
or
ret
jbe
add
sbb
pop
push
repz
xchg
add
ffree
ins
in
(bad)
ins
test
gs
int3
jmp
xlat
sbb
imul
cmp
pop
iret
cmp
fcomp
push
in
mov
in
mov
or
cmp
out
add
xchg
ss
fwait
adc
js
cmp
pop
data16
test
call
sbb
mul
popf
pop
scas
pusha
stc
inc
xor
sahf
pop
mov
retf
or
ror
fldcw
lods
cwde
and
pop
sub
pop
or
scas
inc
cmp
test
cmp
cdq
push
dec
loop
inc
dec
xchg
neg
pop
jg
mov
je
sbb
fsubr
cs
sti
div
and
call
add
retf
mov
sub
inc
daa
xor
int
xor
push
mov
retf
push
lods
leave
mov
xor
scas
sub
xchg
lds
adc
xchg
ret
push
and
cmc
jo
mov
sub
stos
xor
jecxz
call
test
sti
xlat
or
xchg
mov
fsub
jo
aad
mul
cmp
cmp
adc
pop
(bad)
shl
das
mov
xchg
pop
ficomp
jbe
mov
sub
mov
lahf
jmp
aas
adc
or
les
test
xor
pop
or
ins
icebp
cmp
fbstp
and
out
pop
retf
push
outs
xchg
sub
mov
mov
mov
inc
ror
imul
pop
in
sub
bnd
cmp
and
out
jne
cld
or
cmp
mov
adc
popfw
and
mov
rcr
jecxz
(bad)
push
fadd
in
add
ret
(bad)
and
inc
sub
ja
push
jle
cmps
pusha
mov
inc
not
push
ins
fcomp
bound
stos
mov
push
jbe
dec
(bad)
daa
fwait
sbb
pop
jmp
dec
imul
adc
jns
cmp
push
cmps
and
scas
push
stos
jg
sahf
xchg
call
jmp
jp
hlt
mov
jmp
ror
dec
cdq
dec
retf
sbb
cmp
jne
imul
retf
push
dec
hlt
push
fidiv
sbb
outs
fsubr
pushf
xchg
push
int
sub
and
aas
inc
push
jmp
push
call
sahf
xlat
pop
sahf
ins
ret
ja
and
pop
mov
jnp
inc
and
xchg
mov
fisubr
lahf
sub
ffree
push
jecxz
je
xchg
cwde
int3
cmps
fwait
ss
fs
cmp
mov
add
fsubr
jmp
sbb
sub
mov
cli
jne
mov
push
jmp
fsubr
ror
xchg
and
js
lea
stos
mov
scas
mov
sbb
and
add
jns
les
mov
inc
into
dec
inc
push
dec
mov
pop
daa
pop
pop
daa
push
pop
push
mul
or
repnz
jmp
xor
jbe
inc
(bad)
movs
mov
push
out
and
push
sbb
fwait
je
dec
jle
hlt
cmps
jo
(bad)
aad
or
jno
mov
jne
leave
xor
call
jl
test
les
aad
dec
or
xor
mov
inc
sbb
or
in
popf
mov
out
sbb
cmps
imul
pop
add
test
loop
inc
sub
push
outs
fdivr
inc
jl
shl
or
or
mov
cli
pop
pop
push
or
mov
(bad)
jle
add
or
adc
and
stc
jl
aas
mov
push
lahf
mov
xor
jbe
popf
add
push
inc
movs
dec
jle
mov
add
add
dec
(bad)
mov
mov
and
es
push
jmp
repnz
xchg
mov
dec
test
stos
jecxz
dec
rol
dec
push
adc
mov
sahf
ret
pop
enter
jge
adc
sbb
sar
sbb
(bad)
or
adc
mov
sbb
mov
push
stos
ror
jns
adc
pop
cmc
ins
iret
cdq
and
pop
sti
sbb
sub
and
aas
arpl
pop
pop
cli
adc
push
int3
sub
or
xchg
in
jge
jb
leave
and
(bad)
mov
rcr
inc
ins
or
inc
push
push
jns
(bad)
mov
fidiv
mov
adc
fwait
jmp
cwde
xchg
dec
out
sub
leave
mov
push
add
adc
mov
and
mov
les
sub
mov
sar
fisttp
xchg
cwde
aas
jb
data16
nop
mov
jbe
int3
push
lock
pop
pop
sti
pop
xor
aas
mov
sub
cmp
mov
sub
aaa
dec
xchg
pop
addr16
dec
mov
pushf
pop
retf
and
leave
int
popf
js
das
div
inc
pop
aam
(bad)
add
dec
lahf
xchg
imul
mov
jmp
fisubr
out
xor
push
push
add
popf
lahf
push
lods
push
adc
and
mov
mov
sbb
lock
xchg
xor
or
out
addr16
cmp
push
mov
inc
xchg
popf
push
daa
movs
lods
stos
(bad)
in
in
adc
(bad)
scas
dec
adc
(bad)
push
fldenv
dec
mov
leave
or
fimul
cmp
push
or
mov
cmp
(bad)
sub
adc
push
xchg
cmp
dec
jg
aas
popw
pop
dec
pop
pop
arpl
fst
and
xchg
bound
pop
inc
inc
pop
retf
ret
and
dec
(bad)
movs
test
iret
ins
sbb
ss
bound
mov
jg
xor
sbb
mov
cwde
cwde
push
adc
push
inc
mov
sbb
and
mov
mov
pop
dec
(bad)
sbb
lea
shr
ja
fist
mov
add
inc
push
sbb
dec
in
retf
push
iret
leave
stc
iret
push
jge
xor
xor
cs
push
pop
inc
int
cmp
push
and
jl
cmps
push
idiv
xor
push
repz
jne
sub
xchg
inc
sbb
jge
iret
jo
lahf
pusha
das
mov
mov
cs
mov
popa
imul
cmp
cld
dec
lahf
or
inc
push
xchg
sbb
sbb
mov
ror
(bad)
sar
cs
gs
push
data16
mov
jmp
mov
cmp
push
sar
aam
(bad)
scas
shl
adc
cmp
sbb
pop
cld
push
aaa
test
or
mov
inc
das
rol
stos
sub
xor
jecxz
inc
ja
push
lods
xor
jl
mov
vpaddusb
ficom
mov
sub
sub
xchg
fist
jle
retf
xor
mov
push
fnsave
in
and
dec
mov
push
sub
mov
loopne
adc
retf
xchg
cwde
pop
mov
jmp
cmc
jecxz
dec
mov
cmp
nop
std
fld
lds
jmp
cli
hlt
jae
in
mov
inc
lds
cwde
test
xchg
cmps
(bad)
pushf
dec
(bad)
xchg
add
cmc
mov
cmc
leave
pop
clc
or
inc
xlat
loop
add
add
out
adc
mov
add
and
popa
sub
lods
aam
mov
mov
fld
outs
mov
sbb
and
shl
call
fcomp
jbe
outs
fisttp
movs
jmp
rol
push
push
outs
sar
scas
(bad)
enter
out
iret
sub
pop
daa
scas
in
sbb
sub
sbb
and
ins
pop
sub
adc
push
cmp
out
jl
rol
add
outs
push
repnz
test
arpl
fldcw
test
out
sub
and
cmc
and
xor
jnp
mov
xchg
lahf
jb
es
sbb
adc
sbb
or
xor
or
push
inc
push
movs
je
repz
jbe
mov
fcom
inc
cmps
push
xchg
push
mov
mov
add
clc
adc
sbb
lahf
test
hlt
jmp
div
sub
lea
pop
add
pop
dec
inc
add
aas
cmp
inc
dec
scas
arpl
enter
dec
(bad)
mov
pop
test
inc
aad
cmps
ss
sahf
arpl
jb
adc
mov
scas
lea
inc
inc
xor
mov
call
inc
push
cmc
bound
int
movs
stc
cmps
mov
push
xor
inc
dec
out
cmps
test
call
cmp
xor
push
inc
push
cs
fdivr
xchg
pop
shl
mov
push
mov
lea
jp
js
cmp
mov
pop
cmp
mov
jns
mov
sbb
retf
cmp
out
les
xchg
mov
inc
movs
ins
cmp
ins
inc
shr
sbb
mov
fdiv
sahf
lods
xchg
and
inc
sub
out
mov
(bad)
aam
scas
mov
jne
sub
aas
(bad)
rcr
mov
pop
cmps
or
popf
test
cld
ret
ja
fs
and
add
mov
fmul
and
pop
rcr
add
jbe
les
scas
sub
xor
sub
mov
(bad)
loopne
or
repnz
xchg
jns
(bad)
aaa
pop
push
enter
out
jne
jp
das
jle
out
adc
inc
cmp
mov
jb
sub
shl
(bad)
seta
movs
xor
mov
cmp
mov
fst
sbb
dec
mov
stc
imul
add
(bad)
pop
cdq
idiv
out
mov
fs
aaa
ror
pop
adc
out
div
mov
inc
sub
stos
or
and
call
cdq
mov
inc
jge
sbb
jecxz
dec
cwde
ins
rcl
push
pop
ins
jo
rol
sar
inc
xor
mov
add
loope
mov
push
out
out
push
out
les
mov
and
mov
aas
out
pop
inc
pop
stos
or
mov
das
and
xchg
arpl
pop
sub
pusha
adc
xlat
retf
adc
mov
inc
mov
shl
test
fsubr
adc
das
push
xchg
jmp
lock
cmp
and
mov
sti
ins
in
loope
jbe
enter
pop
cli
ins
mov
inc
movs
fwait
adc
shr
dec
xor
outs
or
stos
(bad)
test
adc
gs
and
out
mov
mov
fimul
test
daa
jae
push
icebp
jae
std
inc
and
in
jbe
sbb
push
js
and
cmps
push
dec
dec
es
pushf
enter
lahf
cmp
xor
adc
clc
pop
arpl
movs
xor
in
adc
sbb
xchg
je
jns
fiadd
push
push
cmc
leave
addr16
inc
call
jecxz
cmp
cmp
mov
movs
ret
or
pop
imul
jmp
and
inc
es
ins
jns
push
cld
sub
pop
shl
cmp
in
lahf
ss
test
cmp
or
clc
mov
jbe
dec
dec
pop
xchg
xlat
cmp
add
inc
push
lods
sbb
mov
ins
and
dec
cmp
ret
add
retf
xor
dec
sub
mov
fs
or
imul
jge
sti
cld
sub
shl
xor
xor
mov
in
outs
jnp
cli
retf
imul
mov
mov
or
lahf
out
mov
stos
cld
aaa
xchg
and
dec
in
inc
out
retf
lock
mov
jo
push
cwde
mov
int
add
cmp
fs
pop
cmps
and
fnstcw
mov
sti
add
int
adc
retf
out
and
xor
or
fmul
inc
fisttp
das
movs
test
aas
mov
mov
xor
daa
test
or
scas
mov
jge
jne
inc
inc
mov
das
dec
dec
clc
ins
scas
jl
push
ins
adc
cmps
cli
xor
xor
push
in
call
xchg
xor
fwait
int
shl
sub
fs
test
fsub
mov
push
and
loop
ret
pop
jo
ja
push
mov
enter
popa
push
cld
cli
ret
sahf
mov
mov
call
out
pop
imul
or
xchg
inc
push
sbb
rcl
dec
push
jmp
xor
sub
sub
add
movs
outs
out
push
(bad)
mov
jb
push
mov
push
cmp
pop
mov
push
hlt
pop
scas
mov
(bad)
cld
aaa
mov
xchg
ret
xor
or
jo
cmp
imul
lds
mov
inc
mov
repz
fidivr
nop
dec
or
xchg
shr
data16
or
std
fsubr
dec
inc
lods
dec
scas
mov
push
aad
pop
repz
mov
mov
ret
mov
or
sub
mov
inc
nop
adc
inc
mov
mov
xchg
mov
cmp
bnd
cs
rcl
mov
retf
mov
inc
out
push
mov
retf
mov
push
and
mov
inc
shr
out
(bad)
xor
pop
mov
add
movhlps
mov
mov
fwait
mov
mov
js
imul
inc
(bad)
movs
push
xlat
dec
adc
test
cmp
ins
rcl
sbb
stos
lods
mov
xchg
mul
mov
adc
loop
pop
popf
dec
adc
fs
sti
into
pusha
movs
movs
test
jo
mov
mov
pushf
test
dec
out
movs
mov
out
fld
cmp
arpl
pushf
add
pop
loope
adc
xor
xor
xchg
mov
and
mov
xlat
xchg
das
gs
cmp
rcr
dec
push
and
jmp
xor
out
lods
sub
pop
das
pop
clc
pop
jne
lahf
fist
(bad)
ins
fxch
push
bound
mov
fwait
xchg
inc
xchg
and
retf
adc
in
jmp
mov
int3
leave
aas
and
ds
aas
jbe
dec
std
scas
cli
cmp
jb
dec
jne
jmp
fild
pop
xor
bt
cmp
jl
pop
pop
cwde
retf
adc
call
pop
cmp
cmp
fidivr
mov
mov
fdivr
pop
je
movs
(bad)
loopne
push
jle
xchg
fdivr
ins
dec
stos
pop
jl
and
movs
shr
out
mov
sub
ror
jae
call
in
and
test
lea
out
and
aas
xor
pop
pop
jmp
pop
test
icebp
push
out
fadd
fsub
aad
nop
xchg
sbb
or
test
adc
test
push
push
mov
xchg
popa
jecxz
cmps
pop
in
fcomp
ret
mov
pushf
jecxz
jns
fcom
cmp
jge
or
ror
xor
sub
dec
cwde
mov
jecxz
xor
loop
xchg
push
pusha
aas
pusha
and
jg
cmp
pop
xor
jne
and
pushf
push
lfs
icebp
and
jle
out
cmp
adc
push
in
mov
push
call
push
xor
cld
adc
fcmovb
rol
or
jge
jmp
mov
adc
pop
scas
(bad)
ss
jno
lds
stos
xchg
iret
pop
xor
dec
xchg
mov
dec
xchg
add
mov
push
arpl
in
pop
add
call
jmp
rcl
xchg
hlt
and
pop
in
cdq
push
add
and
adc
jns
dec
add
inc
adc
fstp
cmp
xor
ins
dec
and
sti
out
std
scas
mov
(bad)
jg
(bad)
sbb
and
cmp
jns
out
test
lods
jl
xor
jge
mov
cmps
mov
dec
pop
dec
imul
loop
clc
pop
imul
adc
(bad)
xlat
mov
sub
push
stos
sub
xor
add
push
test
dec
cmp
aaa
or
adc
outs
pop
lock
fprem
and
push
inc
mov
push
pusha
mov
cmp
mov
movs
test
add
cdq
ret
or
inc
and
sti
and
add
jb
aad
xchg
(bad)
mov
lds
out
(bad)
nop
inc
add
mov
sub
test
outs
mov
repz
repnz
js
lock
ror
call
mov
xchg
pop
mov
or
iret
push
int
int3
in
sti
sub
jb
add
add
jl
mov
add
mov
int
jb
xchg
rcl
ds
pushf
push
inc
jne
mov
sbb
test
mov
sbb
lds
pop
bound
jmp
add
repz
out
inc
mov
ds
retf
ds
add
cmp
rcl
in
cmp
fistp
shr
loope
imul
imul
stos
call
mov
rcl
or
xchg
pop
xchg
or
ficomp
fnstsw
or
push
pop
aaa
cmp
push
dec
inc
dec
test
or
push
push
push
cmp
adc
imul
gs
enter
enter
add
in
or
inc
xor
aas
imul
gs
cld
outs
stos
dec
inc
mov
je
frstor
shr
test
sub
sti
sub
dec
xchg
pop
dec
push
jp
mov
icebp
dec
inc
xchg
and
mov
cmp
gs
out
add
adc
add
xchg
call
jle
adc
cli
andnps
in
retf
sti
(bad)
in
sub
push
xchg
in
cmp
sub
jnp
mov
mov
imul
or
fdiv
out
dec
sbb
sbb
int3
data16
pop
pop
jl
sbb
jns
movs
jbe
movs
pop
cwde
test
repz
dec
mov
cmc
push
sub
push
or
ja
pushf
add
test
mov
or
pop
mov
mov
add
lock
add
test
das
pop
or
dec
cmp
and
sbb
sbb
jp
test
in
mov
sub
mov
xchg
cmps
sub
icebp
fsub
shr
jecxz
out
mov
mov
sbb
ds
lods
pop
(bad)
xchg
mov
and
cld
mov
mov
out
mov
gs
or
aaa
dec
les
dec
int
out
xchg
push
enter
inc
repz
(bad)
out
push
inc
iret
sbb
jle
xor
loope
nop
pop
idiv
sbb
pop
fnsave
pop
in
icebp
pop
movs
mov
hlt
inc
imul
dec
mov
js
jo
dec
pop
sbb
clc
mov
or
sub
fstp
push
outs
xchg
call
daa
mov
lahf
outs
jge
mov
enter
jmp
push
cmps
sbb
das
adc
test
or
pop
js
dec
sub
inc
pop
dec
mov
xchg
mov
ds
mov
clc
es
lods
and
lds
daa
pop
bound
sahf
dec
in
test
jne
push
jne
push
movs
jge
xchg
lea
jo
mov
arpl
mul
out
xor
fcmovne
or
loope
jmp
lahf
out
jb
adc
(bad)
fnsave
push
mov
pop
inc
lahf
adc
mov
mov
dec
ficomp
cmp
push
adc
pop
sbb
mov
sub
push
and
jecxz
pop
fucomip
das
daa
inc
or
mov
add
xchg
xlat
pop
jle
mov
and
test
pop
jae
retf
fstp
cmp
icebp
sbb
jns
stc
cmps
adc
test
xchg
fdiv
(bad)
out
out
das
test
jg
push
cmc
cmp
mov
xor
scas
mov
sbb
das
add
(bad)
(bad)
sub
jg
xor
es
mov
(bad)
mov
cwde
add
mov
push
sub
push
push
mov
test
jnp
stos
dec
mov
into
sub
je
xor
or
push
aad
rcl
xchg
jmp
and
push
pop
mov
fild
mov
jo
lahf
mov
cmp
iret
mov
dec
push
outs
les
mov
lods
aam
hlt
push
into
push
bound
jnp
mov
pop
mov
in
pop
or
push
push
cld
and
xor
aas
xor
fs
(bad)
ds
sub
out
outs
inc
pop
pop
(bad)
(bad)
push
sbb
inc
cmps
mov
pop
mov
and
adc
pop
dec
add
scas
xlat
xor
xor
stc
outs
mov
push
pop
inc
pop
jae
inc
jmp
adc
test
mov
(bad)
xchg
pop
jo
sbb
pop
mov
ins
mov
fld
sub
dec
rol
ins
shl
adc
loopne
retf
mov
mov
dec
and
(bad)
cmp
jo
push
ds
cli
push
ror
outs
mov
jle
ficomp
or
mov
or
cmp
pop
sti
(bad)
(bad)
fst
rol
mov
fcom
cmp
add
retf
dec
bound
and
ret
inc
and
cmps
xchg
enter
mov
test
inc
shr
stc
cli
test
xor
push
xchg
in
(bad)
sbb
pop
pop
lods
sbb
mov
nop
pop
loope
jmp
addr16
scas
mov
mov
mov
push
or
pop
rcl
inc
push
or
xchg
mov
aas
sbb
and
rcr
movs
or
(bad)
jle
retf
sbb
icebp
add
or
fidiv
or
sub
popf
add
mov
scas
xchg
pushf
pop
sbb
jle
fs
pop
mov
mov
cmp
jnp
rol
dec
inc
pop
arpl
xor
mov
xchg
rcl
jb
popa
in
loope
leave
aam
adc
cwde
(bad)
inc
push
or
xor
sub
fdivr
push
pusha
repz
jmp
cmps
cmp
mov
sub
cmps
fisubr
add
in
cmc
js
or
mov
jmp
jle
xor
dec
(bad)
pop
clc
test
push
cs
repnz
dec
ja
mov
fnsave
push
pop
movaps
cdq
mov
or
retf
jae
cwde
cwde
sbb
pop
mov
push
retf
out
scas
sub
fld
inc
test
push
jns
(bad)
jmp
adc
sub
in
or
mov
dec
xchg
mov
push
and
jge
jle
mov
aaa
fs
les
bound
push
nop
jecxz
out
jo
pop
data16
cli
xchg
xor
lock
jnp
sub
fidivr
cmps
cmps
cdq
xchg
inc
sub
sub
push
call
cld
dec
les
jnp
add
add
popa
gs
addr16
loope
stc
(bad)
lock
addr16
scas
(bad)
repnz
jnp
xor
jp
rcl
cli
xchg
push
lods
and
or
cld
push
outs
sbb
add
xlat
and
in
out
mov
cmp
test
retf
fisub
pop
in
or
out
jge
and
dec
xchg
adc
pop
fnstcw
dec
xor
in
sub
scas
test
pop
adc
cld
cmps
push
push
pop
jne
test
inc
inc
cmp
mov
(bad)
pop
xchg
inc
dec
adc
aaa
cmp
mov
mov
lods
adc
adc
mov
daa
dec
inc
sar
mov
xchg
lds
push
int
jl
add
push
cmc
je
and
(bad)
call
sar
pop
push
(bad)
cmc
fisub
enter
xor
jbe
add
xor
xor
xchg
movs
inc
inc
jnp
xor
mov
pop
(bad)
icebp
add
dec
gs
stos
dec
mov
add
out
dec
ss
mov
pop
inc
(bad)
mov
repz
push
shl
pop
push
popf
adc
aas
lods
test
add
jb
jecxz
mov
sti
cld
cmps
xchg
dec
add
mov
loope
lds
inc
mov
test
jo
pushf
mov
xor
shl
popa
dec
cmp
jle
and
call
pop
mov
das
lahf
scas
mov
push
jecxz
(bad)
adc
aaa
sar
mov
push
std
mov
mov
fiadd
rol
imul
inc
sub
and
and
scas
fistp
imul
inc
stos
mov
and
inc
xor
add
push
cli
inc
cld
or
cmp
adc
std
stc
into
in
repz
and
xor
shr
int
mov
shl
inc
repz
push
jmp
dec
fwait
or
ds
or
sub
xchg
push
pop
sbb
inc
xor
push
adc
sub
pushf
rol
imul
sub
rcr
shr
pop
pop
cmp
adc
sub
inc
mov
jnp
into
jmp
push
scas
jb
push
xchg
xchg
stos
inc
fisttp
mov
rcl
enter
or
out
jle
or
gs
fstp
and
out
dec
jne
adc
retf
shr
les
xor
pop
push
cdq
rol
fisttp
xor
pushf
je
pop
xchg
jge
cmc
xchg
stc
std
or
jb
pop
in
fs
out
sbb
cmp
xchg
(bad)
cld
mul
leave
push
fwait
lea
add
shl
(bad)
add
(bad)
mov
cmp
mov
daa
out
lea
stc
push
xchg
adc
or
call
in
rol
int3
ds
jl
mov
stos
mov
sahf
mul
sti
add
(bad)
jle
pop
and
mov
lds
fsubp
rcl
mov
popf
sub
cmc
das
cld
jns
pop
mov
fnstenv
push
das
fwait
jp
mov
push
cmp
shr
push
and
xor
adc
je
mov
enter
push
test
popa
mov
mov
fisttp
ins
sbb
mov
in
lds
addr16
fdivr
pop
imul
(bad)
in
out
pushf
jmp
dec
push
dec
cmps
in
std
sbb
push
shl
adc
in
mov
push
cmp
push
cmps
and
addr16
pushf
cs
add
inc
scas
sbb
adc
dec
das
loope
ret
dec
cmp
cs
mov
adc
loope
sbb
or
jo
mov
icebp
jbe
inc
fld
out
(bad)
mov
ret
push
mov
dec
aad
adc
dec
or
inc
mov
sti
in
addr16
sbb
fdivr
shr
mov
push
test
push
int3
cmps
adc
push
iret
or
jmp
inc
sbb
(bad)
jge
icebp
je
mov
jecxz
loopne
pushf
mov
hlt
xchg
xchg
push
cmp
pop
and
call
repnz
les
push
inc
xchg
push
mov
pop
fidiv
jg
call
sar
icebp
in
push
ds
cmp
repnz
cdq
sub
pop
loopne
mov
pop
add
fnstenv
pop
cs
xlat
pushf
je
jle
lea
pop
mov
dec
mov
test
lds
sub
xchg
inc
sbb
rcl
(bad)
sub
pop
popf
add
pop
mov
jmp
mov
xor
shl
sbb
cdq
in
sub
xchg
aaa
cmp
jae
stc
add
in
pusha
in
pop
icebp
cdq
sbb
sahf
push
sar
mov
hlt
test
cli
call
sub
mov
add
pop
pop
and
mov
pop
rcr
aam
arpl
jnp
inc
push
enter
dec
loopne
or
cmp
add
and
mov
push
push
jno
or
js
pop
jle
cmp
inc
add
mov
jecxz
push
mov
lods
test
inc
out
leave
cmp
outs
cs
inc
push
mov
mov
cmp
fstp
push
(bad)
pop
outs
loop
xchg
jl
and
dec
aaa
jmp
xchg
pop
lahf
imul
or
stc
add
lahf
fist
push
inc
jno
fidiv
div
mov
jmp
daa
cwde
jae
dec
test
jmp
test
jmp
call
inc
cmp
mov
test
imul
jb
js
jno
xchg
dec
aam
call
jmp
ret
loop
(bad)
cmp
rcl
dec
pop
test
push
xor
xchg
cs
fnstenv
mov
int
(bad)
es
mov
mov
rcl
das
test
or
mov
pop
sub
sub
jge
mov
loop
pop
or
and
sbb
sub
pop
mov
bound
inc
and
mov
pusha
imul
repz
int
loop
pushf
jle
cmp
(bad)
inc
popa
in
cmp
jmp
(bad)
sbb
inc
scas
xchg
les
mov
mov
push
in
fisttp
js
xchg
cmp
out
cmp
pop
arpl
ja
or
je
sbb
inc
or
add
inc
and
retf
cs
pop
jne
call
inc
clc
loope
jno
push
rcr
inc
into
jns
xor
mov
and
pop
xor
dec
in
pop
retf
call
cdq
in
inc
add
repnz
xchg
xor
call
xor
nop
xor
ss
(bad)
mov
enter
mov
test
int
and
pop
mov
into
mov
imul
mov
aam
dec
xchg
cwde
mov
in
mov
and
xchg
add
mov
movs
mov
or
push
arpl
pop
mov
test
sar
ret
fwait
lods
int3
xor
sahf
pop
cmp
out
inc
pop
les
cld
into
shl
dec
test
sub
std
das
cdq
in
mov
cmp
add
aad
nop
sub
mov
sti
mov
iret
call
push
(bad)
loop
in
inc
xor
jg
dec
or
push
aad
push
test
add
retf
sub
fnstsw
arpl
mov
mov
daa
pop
retf
scas
mov
and
es
mov
sub
fstp
mov
xlat
mov
inc
dec
dec
pop
xor
aam
inc
inc
das
mov
xlat
outs
enter
test
ret
test
mov
test
daa
bound
dec
jecxz
aad
loop
not
or
cmp
jbe
idiv
fs
jmp
in
stos
push
stos
dec
push
push
scas
ins
sub
pop
and
sub
fucom
mov
and
adc
and
xor
or
push
or
inc
leave
test
mov
add
(bad)
sub
nop
imul
cmp
xchg
sbb
push
cmp
rcl
adc
ja
rcl
and
xor
retf
imul
adc
sti
repnz
(bad)
fsubr
cmp
aas
fidivr
(bad)
popf
and
int
(bad)
rcl
mov
cmp
mov
jle
cmp
push
popf
sbb
or
xor
pop
popa
test
push
sub
jb
enter
aad
jg
push
movs
push
mov
xor
stos
stos
clc
jge
adc
icebp
ins
mov
cmp
mov
movs
mul
dec
jno
push
fnstenv
xchg
or
sub
push
outs
xchg
shl
iret
stos
stos
cmc
push
push
or
mov
xchg
(bad)
push
stc
jne
push
aad
loopne
mov
xor
mov
je
shr
push
cmps
(bad)
push
mov
int
addr16
pop
fdivr
outs
jne
sub
fist
(bad)
outs
fs
and
loope
sti
xchg
ret
outs
fstp
add
cmp
sbb
ins
(bad)
je
cld
and
mov
mov
test
dec
adc
jmp
mov
mov
cmps
scas
and
mov
mov
(bad)
mov
add
mov
(bad)
ja
imul
pop
mov
jecxz
(bad)
cmp
nop
(bad)
lock
cli
adc
push
lahf
lods
ja
jns
xchg
add
sub
dec
inc
mov
rcr
loopne
cmp
cmp
inc
cmps
pop
inc
mov
(bad)
adc
mov
fsub
sub
cmp
xor
cld
pop
call
push
daa
cmp
das
fld
test
cmp
cs
loop
or
mov
fmul
mov
dec
pop
xchg
in
ja
xchg
xchg
jo
push
push
loop
dec
push
jmp
hlt
shl
pop
repnz
aam
mov
jp
cwde
inc
jae
jge
xchg
sbb
mov
push
mov
jnp
mov
push
xchg
sbb
sar
icebp
ja
shl
call
aaa
add
aas
sbb
sbb
pop
enter
sub
aaa
and
inc
mov
fs
(bad)
add
or
inc
fidiv
js
outs
sub
jge
xchg
dec
scas
cwde
and
call
shr
mov
fucom
cmc
push
repz
(bad)
icebp
fs
cmp
clc
cmp
pop
mov
sbb
add
out
movs
ss
cmp
jp
sub
gs
push
fisttp
adc
fcomip
mov
mov
mov
or
dec
inc
push
or
icebp
into
pop
in
into
aaa
push
popf
push
mov
sub
mov
push
or
popa
in
pop
sbb
lock
enter
sbb
aam
dec
jp
sub
out
mov
cmp
enter
pop
adc
lods
xchg
pop
addr16
inc
inc
dec
sbb
sub
fdivrp
ja
mov
pop
jl
(bad)
stos
test
retf
mov
enter
frstor
mov
mov
cmp
jne
ffreep
push
in
cdq
mov
cmp
out
je
aad
pop
lods
mov
sbb
clc
pop
push
xor
inc
adc
pavgb
scas
ret
bound
aaa
test
ret
test
add
imul
mov
ss
xchg
mov
in
push
or
adc
ins
add
leave
in
nop
les
inc
fwait
dec
push
imul
mov
mov
xor
(bad)
jecxz
sbb
dec
ss
idiv
sub
cmp
mov
cwde
inc
push
pusha
jmp
push
iret
cmps
in
jl
pushf
and
dec
into
or
les
(bad)
std
leave
loop
gs
fwait
je
sub
xor
and
in
sbb
adc
cmp
and
popf
add
mov
dec
enter
inc
fldenv
aam
leave
fwait
lds
gs
or
push
push
test
test
out
mov
cmps
push
and
lods
into
nop
gs
dec
push
push
sbb
sbb
and
aam
add
jbe
jmp
aaa
add
lea
clc
sub
add
mov
adc
stc
push
sub
fiadd
xor
push
sbb
lds
test
dec
sub
pop
ins
sub
adc
and
add
imul
es
push
hlt
inc
mov
jne
mov
pop
in
cmp
mov
ds
stc
adc
in
dec
pop
rcl
in
mov
mov
in
popf
xor
test
std
pop
int3
aam
xchg
or
mov
std
xchg
or
cmp
enter
loop
arpl
das
push
mov
sbb
jnp
cmp
mov
in
sbb
test
bnd
leave
sahf
dec
popa
push
pop
(bad)
retf
lds
in
stc
xor
in
inc
iret
das
adc
cmp
dec
sbb
adc
adc
frstor
cmp
jge
mov
(bad)
test
mov
movs
push
jbe
div
(bad)
xor
jecxz
(bad)
sti
daa
mov
or
ficom
xchg
jmp
push
push
or
fild
fwait
data16
add
jbe
fld
xor
cs
fild
shl
add
fwait
add
(bad)
hlt
inc
rol
(bad)
aam
dec
mov
sbb
bound
mov
daa
pop
vmovdqu
stos
cmp
jle
jmp
mov
or
clc
push
pop
mov
arpl
pop
fiadd
fcmovne
push
popa
sar
and
push
cld
pop
pop
ror
daa
jge
mov
ror
and
add
mov
int3
jp
out
ins
ins
jmp
add
push
aas
test
push
adc
shl
daa
push
xchg
mov
mov
loopne
int
jg
fidiv
mul
pop
sub
pop
out
and
mov
pop
add
or
inc
outs
or
sar
scas
inc
mov
and
sbb
out
sub
mov
icebp
mov
adc
dec
xchg
xor
mov
les
xchg
cmp
shl
and
arpl
cmp
out
pop
jbe
jge
push
fmulp
xor
out
out
lock
popa
shl
cdq
jmp
mov
into
jge
jne
stc
adc
ror
xchg
outs
push
jge
mov
lea
mov
mov
mov
pop
cmp
fbstp
fisttp
push
cmp
jo
inc
cmp
jle
xchg
push
jl
scas
sub
rcr
xor
rcr
pop
xor
outs
into
add
dec
cmovne
jle
and
inc
or
ins
pop
cmp
das
cld
call
cdq
(bad)
lea
adc
mov
sbb
fcomp
arpl
gs
and
cmps
iret
shl
add
or
int3
xchg
xchg
out
inc
mov
and
pop
shr
jmp
xor
ja
jns
lahf
test
or
lahf
xor
and
and
iret
push
mov
sub
push
and
ds
push
shl
aaa
push
mov
pop
scas
mov
xor
lahf
shr
cmpps
cmp
mov
(bad)
sti
ss
sub
jnp
hlt
cmps
dec
fcomp
mov
mov
mov
inc
pop
cli
les
ret
outs
daa
pop
adc
lds
data16
retf
rol
ja
mov
retf
mov
lahf
retf
test
(bad)
in
dec
ins
(bad)
push
test
inc
push
test
dec
push
scas
repz
ins
mov
adc
arpl
or
jno
cmp
sahf
call
push
call
out
cmc
scas
movs
xchg
push
mov
enter
ins
sub
ins
aam
mov
imul
mov
retf
xchg
addr16
pop
das
sub
leave
cmps
add
icebp
outs
cmp
adc
jns
pop
jne
or
xchg
std
jne
cmp
pop
sub
scas
mov
mov
shl
xchg
js
icebp
or
adc
mov
dec
lahf
dec
es
bound
add
adc
xchg
out
call
xor
scas
cdq
popf
js
fcom
(bad)
(bad)
push
retf
pop
out
aaa
ret
sbb
std
sti
xchg
out
and
lea
fsubr
mov
mov
jns
rol
pop
mov
adc
mov
lods
ss
adc
test
data16
cwde
and
dec
mov
push
xchg
push
je
cmp
not
popf
jmp
pop
mov
xor
fdivr
cmp
jmp
mov
push
scas
call
cmp
pop
cdq
ror
jbe
and
into
add
ret
mov
addr16
(bad)
dec
mov
std
nop
and
retf
pusha
test
lea
les
or
data16
jb
push
test
push
cmp
xor
mov
outs
test
jge
test
xchg
push
adc
sbb
mov
jo
pop
cmp
cmp
and
fbld
mov
dec
shr
pusha
adc
jge
out
sbb
mov
sahf
mov
psubsw
and
popa
retf
jnp
retf
fisub
mov
add
push
push
jl
xchg
xor
lds
nop
adc
popa
pop
mov
loope
mov
test
cdq
inc
xchg
(bad)
mov
nop
lods
jecxz
push
aaa
adc
pusha
add
(bad)
push
xor
push
add
inc
aaa
add
or
repnz
xor
sub
rcl
ins
add
ficomp
pop
pop
data16
and
and
xchg
and
fucom
enter
inc
enter
push
fst
add
mov
sub
cs
data16
inc
in
fstp
jmp
adc
inc
inc
cmpxchg
rol
lahf
inc
or
and
hlt
out
sub
mov
cmps
repnz
arpl
out
(bad)
jmp
pusha
imul
test
movs
or
dec
sti
mov
in
out
ja
pusha
cmp
test
cmp
(bad)
mov
loope
mov
pushf
push
jecxz
mov
(bad)
push
push
mov
cmp
xchg
xor
aad
and
dec
pop
aaa
add
push
mov
jp
mov
loopne
fadd
js
and
mov
jns
leave
mov
pusha
call
hlt
test
inc
jae
(bad)
or
cmps
mov
(bad)
nop
(bad)
data16
addr16
stc
out
push
mov
jge
xor
xlat
jnp
dec
fcom
add
mov
aad
outs
jmp
shr
inc
xor
cwde
pop
lea
stc
sub
popf
(bad)
(bad)
push
or
mov
idiv
retf
xchg
push
into
imul
pushf
pop
in
pop
shl
xchg
loopne
mov
adc
movs
mov
or
cli
fcom
mov
test
mov
je
push
or
adc
in
pop
cmp
or
in
sbb
jnp
jmp
xor
call
call
pop
xchg
(bad)
addr16
mov
xor
shl
das
push
cmc
dec
pop
inc
iret
mov
repnz
pop
jbe
dec
jmp
inc
mov
push
mov
jnp
or
xor
sub
int
push
test
push
pop
lods
push
add
xchg
or
pushf
adc
aad
cmp
fbld
fild
stc
dec
out
and
mov
jo
lahf
jmp
loope
or
retf
lds
sub
jmp
ret
mov
mov
cmp
fist
cld
cmp
jmp
jnp
pop
aaa
add
push
sub
adc
ins
pop
push
jmp
dec
xor
imul
adc
sti
rol
cwde
mov
ja
int
adc
or
jl
dec
jmp
sub
aas
rol
movs
sub
xlat
sub
mov
xchg
in
outs
sub
mov
shr
int
shl
and
dec
jecxz
nop
in
push
sub
sahf
inc
cmc
icebp
cmp
outs
jno
and
mov
cdq
ins
adc
xchg
fs
xor
dec
mov
add
sbb
mov
sbb
jne
(bad)
fldcw
(bad)
push
push
mov
mov
stc
stos
adc
arpl
mov
push
sbb
or
ja
xor
jmp
sub
dec
adc
mov
inc
ss
dec
fnstcw
aaa
test
jp
adc
sbb
ds
and
fadd
jns
(bad)
fcomp
inc
xchg
pushf
and
bound
xchg
out
jnp
sub
push
stos
mov
sar
arpl
(bad)
sar
dec
icebp
popf
fucomip
xchg
push
mov
xor
iret
or
xor
or
je
sbb
mov
dec
fbstp
sub
fisubr
ins
(bad)
xor
scas
push
lods
mov
jae
mov
mov
xchg
jb
ror
add
pop
push
sub
jle
popf
movs
mov
xchg
test
xchg
ror
cmp
mov
aam
out
in
mov
push
mov
movs
test
(bad)
leave
repnz
xchg
sub
or
mov
push
fisttp
jg
mov
pop
pop
dec
pop
icebp
mov
push
sub
xchg
xor
cmc
mov
imul
dec
(bad)
loope
mov
mov
push
jae
pop
bound
aas
cld
xor
ss
push
arpl
dec
stos
aam
mov
jae
(bad)
xchg
cdq
repnz
xchg
cwde
mov
xor
mov
mov
retf
lods
(bad)
cmc
lods
sub
fld
and
jmp
pop
and
jecxz
mov
and
leave
lods
jle
pushf
adc
mov
or
xchg
xor
pop
push
push
cmp
mov
xchg
add
shl
int
mov
fcom
cli
jmp
fcom
add
shl
int3
add
cdq
inc
xchg
or
leave
aas
push
icebp
push
mov
push
std
mov
stos
or
(bad)
repz
test
inc
bound
add
aas
adc
(bad)
or
jmp
inc
(bad)
stos
jnp
cmp
mov
xchg
push
(bad)
in
inc
loopne
cmps
or
ss
push
add
jecxz
adc
dec
push
cmc
daa
push
cmp
mov
xchg
imul
inc
adc
xchg
(bad)
ret
inc
and
pushf
xchg
pop
movs
fs
mov
or
cmc
in
mov
test
std
rol
mov
loope
xor
or
sbb
jns
ss
push
test
or
mov
pop
mov
mov
push
ss
xchg
mov
test
pop
je
ins
push
sub
xchg
mov
dec
jg
icebp
pop
rol
lea
es
xor
mov
js
dec
push
(bad)
in
cmp
add
xchg
sub
js
loope
push
movs
rcl
fwait
in
sbb
les
les
pop
xor
ret
sbb
aam
(bad)
ror
js
inc
jns
xor
cmp
pop
lods
out
movs
popf
fdiv
push
mov
jno
(bad)
mov
test
jnp
gs
xor
jecxz
into
sbb
xor
add
pop
iret
ret
jo
outs
add
cmc
imul
xchg
mov
pop
push
jnp
(bad)
or
push
sub
mov
loop
lahf
imul
shl
mov
mov
lods
movs
xor
sahf
pop
pop
sub
(bad)
stos
push
pop
pop
sahf
dec
rol
xchg
ja
mov
cmp
or
add
cmps
mov
in
ret
stc
je
lods
push
fnstsw
or
mov
or
in
add
ret
cdq
cmp
mov
mov
shl
xchg
jns
popf
push
cmp
dec
cmp
pop
lods
mov
mov
sub
or
push
jbe
pop
or
loopne
mov
inc
inc
adc
inc
cli
fwait
xlat
dec
cmp
pushf
fistp
jo
pop
fidiv
call
add
xchg
lods
push
push
sti
ds
sub
hlt
js
f2xm1
xor
xchg
mov
repz
push
test
(bad)
jge
in
ins
stc
loop
dec
cmp
ja
into
gs
jmp
mov
and
out
push
xor
jg
lahf
jo
mov
mov
leave
repz
int3
jno
jne
sbb
fmul
push
push
push
pop
int3
loop
imul
rol
cld
mov
mov
xchg
mov
xor
fld
es
jle
push
sar
fild
gs
int3
fbstp
sub
jo
rcl
or
test
sbb
(bad)
movs
in
mov
inc
jbe
sub
pop
mov
(bad)
sbb
fld
push
movs
iret
fistp
retf
and
shl
rcr
icebp
mov
outs
xchg
loopne
in
mov
xor
scas
cmp
(bad)
sbb
jge
repz
jl
push
lea
push
add
adc
inc
addr16
scas
loop
iret
mov
ficom
fbstp
mov
or
jecxz
jae
jge
(bad)
pop
out
popa
inc
xor
imul
jnp
add
push
call
jle
lods
jecxz
mov
jbe
jmp
bound
dec
add
push
cmp
test
inc
jecxz
rdpmc
aam
push
pop
adc
add
jl
mov
xchg
jecxz
mov
jne
lods
cli
jns
jge
xor
push
xor
pop
(bad)
xchg
mov
lds
jae
or
push
cs
loope
sbb
inc
mov
(bad)
(bad)
cmp
lahf
pop
retf
jl
(bad)
arpl
(bad)
mov
inc
call
(bad)
leave
xchg
je
jns
and
jl
popf
mov
repz
call
fsubr
aas
push
sub
fiadd
pop
call
in
pop
sbb
clc
mov
hlt
loop
shr
adc
mov
test
(bad)
cmc
loopne
fwait
std
scas
cs
xchg
pop
jmp
aad
(bad)
mov
dec
dec
repnz
in
int3
test
jmp
(bad)
int
das
lods
into
xor
or
xchg
sbb
jmp
fnstcw
and
retf
push
xchg
dec
adc
jg
push
std
push
jp
(bad)
repnz
stc
mov
(bad)
mov
leave
push
inc
dec
stc
leave
fnstsw
dec
movs
or
mov
xlat
adc
jmp
mov
or
or
fs
icebp
jp
mov
outs
lods
cmp
xchg
jmp
outs
outs
xchg
retf
xchg
or
sbb
sbb
mov
xchg
in
push
in
pop
(bad)
xor
outs
and
jmp
dec
or
xchg
retf
stos
push
push
mov
dec
pop
mov
jo
cs
dec
or
mov
mov
outs
pop
cmp
ins
add
wrmsr
push
inc
inc
mov
sti
dec
xor
jns
ds
das
mov
inc
aas
shr
xor
stos
mov
jmp
sbb
inc
lods
bound
xchg
cmp
mov
pop
lods
imul
stc
cmp
jmp
mov
sbb
push
xor
loopne
iret
add
(bad)
sbb
sub
pop
gs
or
jo
sub
sbb
clc
push
pop
mov
push
nop
retf
pop
pop
test
xlat
aad
xchg
div
xchg
leave
or
add
test
in
pop
ret
iret
fldcw
mov
jg
outs
add
int
loopne
mov
add
add
push
lds
shr
jmp
cmp
jnp
cmps
hlt
lahf
pop
inc
xchg
jp
add
jecxz
shr
push
es
xchg
imul
or
stc
or
mov
dec
pop
jne
inc
add
adc
mov
jns
js
popf
sub
movs
mov
sbb
pop
lods
ja
jle
jbe
mov
clc
lods
add
mov
pusha
mov
cld
hlt
xchg
test
loope
std
inc
ret
js
retf
jne
push
stc
xchg
das
fldenv
cmp
sub
xchg
stos
fmulp
xchg
ja
pop
cdq
ret
shl
and
sub
sahf
pop
jb
push
cmp
das
push
push
out
stc
push
pop
jecxz
push
add
adc
pop
sbb
test
dec
rcl
int3
sti
xor
icebp
es
pop
addr16
fld
mov
scas
sub
adc
pop
dec
jno
xchg
stos
std
pop
leave
dec
imul
adc
scas
add
pushf
cdq
aam
gs
jecxz
sub
sbb
inc
xchg
movs
or
retf
cld
sbb
cmp
xor
sub
and
xchg
and
fisttp
dec
pop
fxch
and
mov
loop
inc
(bad)
cld
push
cs
lods
push
js
jns
pop
jb
mov
dec
or
fsubr
jmp
jno
enter
mov
dec
(bad)
push
mov
outs
dec
pop
inc
fistp
pushf
mov
js
pop
push
test
mov
mov
test
shl
inc
in
jp
jmp
sbb
shl
mov
mov
and
(bad)
(bad)
and
sbb
pop
push
popf
scas
xchg
cld
stos
mov
mov
shl
lods
sbb
and
ins
mov
add
mov
xchg
es
cs
cmp
dec
jo
je
leave
xchg
jge
and
shl
in
ins
sbb
xor
jge
(bad)
jl
pushf
aam
icebp
(bad)
(bad)
idiv
xlat
cli
int
adc
cmp
test
xchg
jae
mov
int
cdq
ds
les
jno
add
lahf
cmp
loop
pop
pop
jmp
add
sbb
jbe
mov
mov
sbb
cld
cmp
mov
iret
out
xchg
ins
imul
push
xor
int3
xor
add
push
cmp
or
or
sbb
pop
dec
xlat
ins
jle
stc
hlt
mov
sbb
mov
sbb
jge
sar
xchg
jo
mov
cmp
dec
and
mul
les
mov
dec
add
mov
int3
popf
push
js
std
ror
repnz
dec
sbb
pop
mov
pop
mov
movs
inc
xor
push
shl
imul
pop
hlt
ret
out
mov
dec
gs
inc
aaa
and
ss
adc
inc
fwait
xchg
jbe
sti
fmulp
mov
arpl
jns
arpl
repz
and
cli
inc
push
and
aam
dec
test
jae
(bad)
out
xchg
out
cwde
dec
pop
and
rcl
lock
jmp
jne
icebp
mov
mov
sub
js
sub
or
std
aam
sar
add
cli
lea
cmp
jg
dec
daa
aaa
bound
jne
inc
es
fs
jns
or
out
ret
xadd
add
fild
and
pusha
xchg
movs
mov
push
ficomp
ficom
adc
xchg
js
mov
mov
cli
cmp
daa
xchg
into
aam
xor
pop
mov
xor
fld
xor
movs
mov
(bad)
call
dec
sbb
stos
jmp
les
dec
cs
les
(bad)
mov
xchg
stc
test
fwait
scas
add
cs
xchg
cmp
cmp
daa
or
cmp
ins
xchg
push
cmp
fadd
mov
out
sub
inc
and
sbb
leave
jmp
(bad)
fwait
sbb
(bad)
cmp
(bad)
es
movs
sub
pop
mov
mov
fimul
fnstsw
sub
ret
sub
retf
and
inc
jmp
sahf
push
je
cmp
jge
in
sub
nop
mov
outs
pushf
int
lahf
imul
int3
or
clc
xor
ror
dec
mov
dec
inc
gs
out
into
jle
mov
fwait
mov
sar
lahf
mov
dec
and
in
or
sbb
test
or
cwde
sbb
in
int3
xlat
and
sub
dec
int
dec
nop
sahf
and
adc
test
popf
or
retf
or
cdq
adc
retf
cmps
push
sbb
jl
sbb
sub
ss
ror
stos
enter
call
loop
sub
dec
sub
sbb
int3
out
adc
jae
adc
jno
cmp
pop
fdiv
fild
mov
sbb
pop
pop
cld
es
xor
imul
and
ja
mov
fbld
inc
mov
xor
and
sub
retf
mov
daa
sbb
scas
jmp
mov
fist
xchg
arpl
jo
pop
ds
shr
mov
xchg
mov
sbb
std
jmp
mov
inc
mov
cli
into
sar
or
outs
pop
jbe
mov
cld
sbb
pushf
fmul
(bad)
(bad)
dec
adc
xor
sub
mov
imul
sahf
and
test
lds
ins
ja
jnp
push
pop
inc
test
pop
pop
dec
ror
cmp
jmp
mov
mov
sub
pop
push
xlat
mov
(bad)
xlat
pushf
movs
xor
adc
xchg
cs
scas
add
cmp
push
jo
or
mov
arpl
repz
repz
jmp
push
mov
add
popa
dec
jo
scas
mov
loopne
fnop
arpl
ror
ror
sbb
push
cmp
push
(bad)
out
pop
jmp
sub
popa
int3
push
mov
xchg
push
add
in
loop
outs
jmp
inc
inc
push
adc
mov
push
ds
add
jmp
les
inc
push
ins
add
mov
mov
dec
jae
imul
jne
jno
lds
cmp
pop
(bad)
xchg
push
xchg
sahf
or
mov
sbb
push
loop
or
xor
out
cmc
sti
fsub
movs
lahf
add
inc
inc
inc
gs
mov
cmp
cmc
stos
scas
push
imul
mov
shr
sub
(bad)
test
out
aad
out
fiadd
aam
mov
inc
mov
dec
retf
or
jmp
shl
ja
or
mov
push
out
adc
adc
lods
add
xchg
fs
inc
int
pop
int
xchg
lock
mov
fadd
not
sub
xchg
pusha
test
cmovge
push
aam
cwde
loopne
mov
mov
sbb
sbb
jl
in
add
sbb
cmp
aad
jb
enter
jno
test
xor
outs
add
scas
fs
call
psubusb
mov
jb
stc
mov
outs
clc
cli
xchg
loop
test
inc
mov
cmps
push
jge
lds
sbb
xchg
sahf
xchg
add
div
pop
lods
inc
stos
inc
push
jg
int
imul
mov
in
sbb
push
sbb
or
adc
pop
popf
sbb
jnp
dec
lahf
inc
lds
mov
out
pop
push
scas
mov
xor
(bad)
mov
push
addr16
or
std
adc
aam
mov
bound
sbb
push
cwde
cmc
mov
pusha
sar
or
fld
inc
mov
(bad)
xchg
mov
(bad)
fistp
pop
hlt
lock
in
and
test
out
jo
mov
sbb
jge
test
fs
jmp
push
and
inc
ret
retf
mov
and
pop
pop
mov
dec
imul
ds
xchg
sahf
mov
sahf
pop
push
jg
adc
in
pop
fdiv
jne
jp
lock
mov
mov
div
pusha
jns
xor
int3
lahf
fist
idiv
iret
inc
daa
pop
add
lods
sub
arpl
out
fisubr
es
cmp
jae
fs
cmp
xchg
xchg
xchg
repnz
cmps
mov
aad
mov
add
pop
stos
popf
imul
arpl
add
scas
inc
or
and
test
push
test
clc
mov
pusha
mov
loop
test
mov
mov
or
push
add
fld
sbb
xchg
cmps
xchg
call
mov
enter
mov
ins
shr
pop
sub
test
jle
ins
cmp
pop
les
jno
out
sub
push
int
push
lahf
pushf
arpl
sbb
xchg
jp
movs
push
test
mov
and
jae
push
push
lods
sbb
imul
mov
and
inc
sub
jo
jo
loop
cmp
(bad)
loopne
cmp
push
cdq
sub
mov
iret
xlat
mov
lahf
xchg
adc
or
(bad)
xchg
mov
out
loopne
scas
cmp
adc
test
(bad)
out
xor
inc
or
call
out
retf
push
aad
mov
add
scas
je
push
add
test
sbb
push
int3
loopne
xchg
sub
cld
out
adc
lahf
stc
pusha
mov
sbb
jae
fidivr
and
sbb
nop
outs
sbb
mov
ins
mov
adc
or
sub
mov
mov
(bad)
push
mov
or
sub
push
js
xchg
retf
sbb
dec
aad
ret
inc
out
mov
sbb
xor
adc
xlat
addr16
int3
xlat
test
outs
sbb
pop
dec
mov
push
cmps
sub
retf
sbb
fs
inc
cmps
scas
gs
and
add
pop
dec
push
ret
jge
test
popf
sbb
mov
int
data16
dec
mov
fdivr
dec
fsubr
outs
add
jmp
fistp
inc
repz
aad
fimul
push
pop
mov
out
loope
push
call
test
jbe
test
retf
mov
std
jns
or
xchg
and
add
sub
sbb
icebp
jbe
add
xchg
cmp
icebp
test
pop
dec
mov
inc
sbb
test
xchg
repz
jmp
repz
aas
sbb
push
ins
push
xor
inc
or
xor
ret
cmc
mov
icebp
dec
dec
xor
cmps
loopne
dec
test
out
pop
idiv
or
xchg
and
daa
in
or
pop
pop
cmp
fisttp
stc
ret
mov
mov
repz
push
dec
pop
jno
inc
or
xor
into
sub
in
fisttp
xchg
(bad)
xor
push
jp
mov
jbe
mov
not
sbb
add
ins
sbb
scas
stos
stc
jmp
aad
adc
push
jmp
cld
mov
pop
(bad)
ficomp
push
or
mov
dec
and
pushf
xlat
pusha
addr16
mov
add
out
arpl
retf
sub
clc
xchg
mov
push
jp
add
adc
or
push
or
mov
xchg
cmp
pushf
dec
mov
xor
jge
mov
dec
cdq
dec
push
in
add
pop
(bad)
out
and
imul
iret
push
cmp
shr
fwait
and
sbb
nop
ja
sub
repnz
sbb
stos
call
fist
jmpw
int3
fisttp
and
loop
and
inc
cmp
popa
icebp
leave
sub
adc
jmp
stc
jle
retf
jg
mov
jns
gs
mov
mov
mov
outs
sahf
adc
repz
jp
mov
and
loop
adc
sub
aam
lds
int3
mov
jnp
cmp
int3
xor
pop
scas
jl
adc
and
iret
and
aaa
mov
cdq
mov
test
adc
mov
cli
pop
dec
cmp
jbe
add
sub
into
int
inc
fisub
fimul
cmp
stos
xor
(bad)
pusha
div
or
sub
mov
dec
bound
sar
fs
into
in
xor
aad
arpl
hlt
sub
sbb
inc
or
adc
addr16
inc
cli
movs
dec
xor
loopne
push
pop
fwait
cmp
lods
xchg
adc
xor
inc
jl
pop
mov
inc
fbld
std
mov
or
cmp
xchg
std
xor
jmp
mov
pop
fld
xor
std
mov
fist
or
and
test
inc
adc
fidivr
or
jp
pop
xor
movs
push
cld
lods
inc
sti
push
mov
xor
test
je
dec
pmaxub
movups
js
sbb
mov
lds
xchg
lods
ror
(bad)
aam
mov
int
sub
add
xchg
iret
pop
ss
push
cwde
call
dec
pop
xchg
fisubr
ret
fist
xchg
aaa
cli
adc
and
xchg
es
jmp
push
push
and
ficom
inc
sub
ficomp
clc
inc
and
pop
bnd
mov
popf
ins
mov
and
pop
xchg
dec
mov
cmps
push
stos
pop
popa
cld
div
xor
lods
jecxz
xor
hlt
mov
jbe
cmp
fwait
iret
mov
mov
sbb
push
in
test
and
adc
dec
inc
jecxz
cmc
push
fadd
mov
lock
loop
ficom
add
iret
mov
push
push
add
xchg
xchg
xor
repnz
es
pushf
ror
or
pop
arpl
xor
hlt
add
or
inc
or
lods
xlat
das
test
in
cli
cdq
test
xchg
outs
pop
int3
gs
aaa
aam
in
xchg
inc
ficom
mov
cmp
xchg
std
mov
xchg
add
cs
cmc
pop
das
mov
arpl
push
push
mov
sbb
repnz
or
cs
cdq
sub
adc
adc
pop
imul
jmp
fdivr
xor
mov
mov
pop
dec
movs
push
or
jo
and
xchg
in
shl
push
into
mov
mov
addr16
mov
jno
arpl
mov
or
ds
add
cld
xor
cdq
outs
jne
test
into
sub
sbb
cs
push
or
jl
inc
stos
lds
sub
int3
mov
sub
test
sahf
cmp
arpl
ins
cmp
and
jae
leave
fwait
adc
cmp
pop
call
lds
sub
push
int3
clc
xor
nop
pop
add
scas
add
jp
js
push
(bad)
xor
inc
and
test
cmp
push
fmul
and
imul
out
call
repz
mov
std
fsubr
aaa
mov
stos
ins
jp
ins
or
dec
fnstsw
aaa
sub
fstp
fsub
sbb
cdq
ins
mov
cmp
fcom
jo
pop
and
js
or
shl
lods
in
cmp
inc
mov
cmp
pop
push
push
or
pop
sbb
repz
or
(bad)
mov
shr
sbb
and
lock
das
mul
test
jp
arpl
pop
imul
out
shr
(bad)
int3
mov
add
jmp
push
(bad)
cmp
setge
outs
sahf
cdq
pusha
inc
(bad)
repnz
pop
add
jo
jb
ret
mov
pop
jmp
popf
push
or
cs
cmp
adc
pop
sub
sbb
gs
inc
dec
xchg
das
dec
retf
dec
xchg
push
pop
xchg
mov
dec
lahf
rcl
arpl
cmp
lock
push
cmps
movs
mov
lahf
dec
push
sbb
aas
fwait
icebp
scas
inc
popf
jp
mov
pop
adc
lea
xlat
outs
mov
or
adc
jp
enter
sub
jg
into
push
jbe
out
hlt
adc
mov
fisub
or
aam
mov
dec
and
push
dec
adc
out
jbe
fisttp
in
xor
or
sbb
push
call
mov
sar
xor
jp
or
outs
add
sbb
pop
jnp
loopne
sub
xchg
fistp
and
sub
(bad)
adc
pop
push
add
int
(bad)
ficom
shl
mov
test
mov
mov
dec
xor
fidiv
jnp
mov
push
add
fcmovnbe
mov
in
sbb
and
xor
jno
inc
mov
mov
cmc
ins
hlt
jo
out
xchg
repnz
or
and
add
sbb
in
add
pop
test
jmp
push
stos
push
popf
add
fsubr
stos
(bad)
adc
xchg
jne
cld
(bad)
fild
ja
sub
cmp
inc
or
mov
or
push
gs
jmp
shr
call
pop
sub
jle
mov
push
(bad)
stos
jne
mov
lods
and
xchg
je
jge
cmp
(bad)
fs
cs
leave
cmp
pop
je
adc
pop
push
xor
pop
pop
inc
cmp
fwait
adc
cmps
sbb
out
std
aaa
gs
pop
imul
fidivr
or
push
call
add
ins
jae
scas
mov
inc
ss
push
stc
(bad)
adc
out
leave
mov
loope
xor
movlps
fldcw
mov
sbb
rol
mov
out
icebp
imul
stc
int3
fistp
js
cmps
lods
iret
jp
sahf
gs
sub
sub
dec
and
pop
jecxz
mov
bound
or
mov
and
mov
xchg
cmp
mul
jmp
int3
fcmove
pop
mov
push
cmps
sub
loopne
mov
push
gs
div
cmp
push
inc
xchg
mov
sti
adc
sub
sub
cli
or
sub
shl
or
lahf
rcr
loope
adc
sub
lea
addr16
add
mov
mov
das
test
int3
mov
push
adc
ja
xchg
bound
xchg
xchg
sub
mov
aam
xor
xchg
adc
les
arpl
rcl
int
fist
loope
jmp
lods
dec
inc
xor
scas
cmp
fcom
dec
inc
xchg
popf
jo
lahf
mov
jecxz
std
sbb
adc
scas
or
and
mov
xor
not
adc
ds
hlt
imul
scas
shl
pop
outs
xor
add
push
ins
add
(bad)
dec
sbb
fsqrt
jle
dec
xchg
scas
stos
cmp
pop
jle
mov
shr
dec
cmp
jmp
aad
push
add
push
das
mov
inc
cmp
icebp
push
ss
mov
mov
cmp
inc
inc
cmp
jl
ins
lods
jne
out
add
jmp
mov
fsubr
dec
mov
lea
jns
mov
arpl
dec
jge
jne
and
scas
imul
push
xor
pop
sub
loop
or
ins
inc
xchg
sbb
pop
and
inc
adc
jb
xchg
aaa
push
push
movs
(bad)
scas
and
xchg
push
add
dec
ficomp
loope
call
sub
ja
sub
aaa
and
stos
mov
imul
push
ins
outs
retf
in
cmps
ds
stos
int3
outs
repz
mul
sbb
or
hlt
add
ss
sbb
fisttp
enter
jo
jge
enter
inc
pop
xchg
push
out
aas
sti
mov
sub
sub
fwait
fwait
pop
jmp
cmp
daa
clc
sbb
(bad)
lahf
cmp
jae
rcl
popa
jns
fdiv
popa
das
sbb
push
mov
loope
std
jg
popf
xchg
aad
pop
out
leave
retf
ror
cmp
or
out
(bad)
add
adc
adc
cwde
stos
js
out
sbb
sub
enter
mov
jb
dec
xor
daa
std
and
adc
inc
xchg
in
push
dec
pop
jmp
jns
xchg
xchg
sar
push
fidivr
mov
push
mov
mov
outs
xor
shl
pop
mov
lea
push
and
lahf
and
sub
inc
or
mov
and
lds
pop
and
mov
jnp
xchg
rsm
and
movs
cdq
mov
lea
pushf
pop
retf
add
mov
mov
xchg
out
call
mov
test
loope
mov
or
movs
cmc
movs
inc
daa
scas
in
(bad)
mov
mov
sahf
repnz
jmp
jne
adc
push
fwait
lahf
xor
popa
into
(bad)
into
add
stc
outs
imul
xchg
out
es
call
fs
hlt
pop
pop
mov
pop
scas
arpl
inc
inc
or
fisub
gs
mov
lea
rcl
pop
jne
outs
(bad)
and
popf
cmp
jnp
adc
mov
cs
and
inc
jne
out
bound
shl
sbb
sub
lock
popa
leave
shl
push
(bad)
and
fs
pop
out
cmps
push
mov
sar
fbld
shr
add
in
cmp
not
in
repnz
(bad)
sti
xchg
sbb
or
loope
jne
jp
jns
and
push
scas
mov
add
(bad)
or
adc
inc
movs
je
adc
(bad)
popf
retf
xchg
sti
xor
dec
cli
stos
cmp
cld
mov
xchg
cwde
xlat
add
and
sbb
pop
mov
xchg
push
ror
sub
(bad)
dec
push
inc
pop
mov
mov
push
jp
pop
ss
cmps
cmp
mov
jbe
adc
xor
or
jb
and
or
fs
leave
outs
sbb
call
lods
frstor
inc
test
jne
test
sar
leave
popa
(bad)
nop
adc
ja
xor
jb
call
jae
inc
retf
jle
jno
inc
nop
mov
repnz
shr
mov
jmp
in
mov
mov
push
nop
mov
hlt
scas
scas
xchg
dec
jg
int3
sar
mov
pusha
fwait
popa
daa
neg
sub
mov
out
das
es
jp
push
mov
mov
out
dec
shl
mov
pop
in
sub
inc
pop
into
mov
nop
pop
les
leave
jbe
int3
int3
inc
xchg
dec
mul
int
mov
or
pop
mov
fdiv
mov
push
fwait
adc
scas
das
neg
xchg
jb
pop
minps
xchg
into
das
push
and
mov
mov
sbb
sub
jge
(bad)
mov
mov
push
jg
in
inc
ja
pushf
imul
add
pop
pop
xchg
fst
mul
add
movs
cmp
ret
loop
sbb
fnstsw
popa
mov
fcom
scas
cwde
mov
cmp
test
adc
out
dec
not
pop
and
jnp
out
dec
jne
not
jmp
retf
jge
cmp
jo
push
push
inc
sar
mov
inc
imul
cld
push
mov
sbb
sub
dec
xlat
push
fcmove
xor
adc
out
bound
push
cmc
cmp
sub
jmp
scas
pop
aaa
mov
daa
adc
lods
dec
dec
mov
mov
fnstsw
xchg
stos
jp
fisub
xchg
std
sbb
sbb
or
adc
pusha
sbb
push
out
xor
enter
sbb
mov
add
push
(bad)
dec
mov
out
arpl
loop
leave
push
push
inc
fwait
xchg
adc
gs
push
fs
jg
xchg
adc
inc
movs
mov
pop
sub
pop
add
imul
repnz
retf
mov
stos
xchg
inc
mov
push
mov
inc
mov
je
pop
cmps
cmps
mov
add
lock
mov
pop
pop
imul
add
or
sub
mov
cmp
xlat
mov
sbb
adc
xchg
jmp
pop
mov
imul
push
jg
ja
ins
dec
xor
stos
push
xchg
xchg
lea
and
xor
ds
sbb
jl
movs
jns
pop
mov
sub
sar
not
mov
mov
mov
jb
cmp
in
jb
imul
jno
xchg
je
pop
(bad)
mov
loope
or
push
stos
(bad)
inc
add
add
dec
cs
mov
ds
cli
(bad)
fs
push
into
outs
xor
mov
ins
jno
icebp
retf
bound
jno
leave
xchg
jl
inc
into
out
cli
ret
repz
sbb
aad
fst
dec
(bad)
xor
pop
jbe
pop
mov
out
in
mov
xor
or
scas
jmp
xor
or
mov
gs
ins
push
jnp
fidivr
and
sub
mov
jne
(bad)
mov
xchg
pop
mov
mov
iret
arpl
lea
movs
jo
jb
xor
sub
dec
push
loope
xor
fwait
ror
shl
aam
mov
arpl
ret
sbb
stos
mov
outs
push
mov
mov
add
or
int
pop
mov
pusha
pop
dec
mov
mov
fsubp
gs
(bad)
push
outs
out
add
push
js
xchg
and
inc
and
mov
jmp
es
sub
call
iret
bound
inc
or
es
pop
sahf
(bad)
js
rcr
and
mov
add
iret
jl
jo
inc
bswap
sub
and
pop
pop
aas
daa
iret
adc
std
cld
(bad)
shl
(bad)
mov
popf
adc
ds
push
icebp
push
scas
fadd
pop
(bad)
stc
(bad)
adc
pop
les
mov
(bad)
adc
add
cvtps2pd
out
mov
dec
push
mov
mov
fimul
arpl
mov
sub
and
in
outs
mov
lahf
push
loopne
xchg
jl
test
aam
mov
xor
in
das
mov
fisttp
leave
das
enter
and
jg
fwait
mov
push
fcomp
xchg
jae
arpl
mov
in
adc
sahf
(bad)
xchg
jmp
jno
popf
shl
push
xor
push
(bad)
jae
xor
mov
xor
loopne
push
stos
inc
sub
pop
mov
aad
or
test
mov
push
shl
dec
mov
mov
aad
into
mov
js
ins
mov
push
jecxz
jne
pop
pop
add
and
mov
iret
lea
sbb
lods
cwde
pop
das
sbb
test
jb
xchg
jecxz
(bad)
out
xchg
addr16
xlat
adc
rol
(bad)
add
xchg
out
push
icebp
lods
push
retf
(bad)
cli
les
ret
xchg
ror
pop
pop
es
or
push
popf
lahf
cmp
fld
mov
jae
mov
ss
(bad)
int3
push
jns
sbb
mov
iret
cwde
or
mov
adc
cmp
or
rcl
sub
lods
movs
out
je
pop
inc
cmps
fdivr
mov
push
jle
sbb
push
pop
mov
cmp
retf
xchg
mov
jbe
sbb
add
lea
mov
imul
stos
fwait
cmps
mov
movs
push
add
fisubr
sbb
mov
out
mov
lods
dec
adc
repnz
push
sub
xchg
data16
push
mov
stos
data16
mov
and
imul
xchg
cdq
gs
sbb
push
mov
xchg
enter
pusha
push
(bad)
cmp
xchg
mov
sbb
inc
cmps
lods
jns
bound
in
inc
add
pop
popa
js
xchg
and
mov
mov
ja
in
xchg
(bad)
push
mov
inc
pushf
rol
mov
movs
les
imul
and
stos
dec
cmp
lods
lods
jb
mov
inc
push
call
adc
daa
inc
dec
jnp
and
or
repz
sar
or
out
test
dec
int3
or
loop
movs
ror
aas
cwde
jmp
jmp
js
(bad)
shl
and
inc
or
push
mov
lea
imul
or
je
push
mov
mov
xchg
movs
test
cli
mov
scas
fwait
leave
daa
dec
mov
cmp
test
pop
xor
fs
loopne
test
mul
hlt
imul
pop
jns
icebp
jns
test
mov
(bad)
inc
add
mov
js
cwde
cld
cmp
mov
gs
sub
js
lods
xor
and
imul
mov
js
add
leave
in
sub
inc
dec
jge
dec
movs
idiv
push
add
outs
adc
lods
mov
pop
pop
loop
dec
inc
mov
xor
sbb
jae
inc
ret
out
or
sbb
lods
pusha
outs
and
es
test
mov
mov
inc
cmp
outs
pop
stos
or
rcl
(bad)
aas
(bad)
xor
push
and
add
fild
pushf
jb
push
ret
outs
sbb
das
icebp
cdq
adc
adc
repz
ja
repz
stos
popf
sbb
mov
mov
fisubr
cmp
or
or
sub
adc
mov
out
add
int3
push
or
add
dec
(bad)
or
add
pop
ss
retf
stos
jbe
add
test
mov
inc
lds
pop
movs
xchg
test
daa
mov
das
cld
call
push
or
mov
dec
loopne
in
mov
sub
pop
fwait
retf
mov
pop
pop
and
icebp
stos
push
inc
retf
sbb
pop
loope
hlt
mov
(bad)
dec
pop
clc
sbb
jo
and
pop
xor
xor
xchg
imul
loopne
(bad)
fidivr
cmp
jnp
xchg
fndisi(8087
xchg
xor
push
jae
pop
inc
mov
into
jo
ffreep
ins
cwde
mov
pusha
aam
inc
mov
xor
sub
push
cmp
mov
pop
push
xor
sbb
xor
shl
xchg
cmp
aas
out
jge
pop
enter
pop
inc
and
repz
in
jnp
xchg
and
jg
dec
mov
dec
leave
movs
cmp
(bad)
mov
cli
lods
xor
jnp
(bad)
in
add
out
mov
pop
retf
mov
es
mov
aaa
and
mov
sbb
push
cmp
push
pop
pop
jae
pop
jnp
mov
inc
cld
dec
cmps
pshufw
call
mov
sbb
cdq
or
pusha
and
and
mov
(bad)
ins
in
ds
pop
les
jge
mov
or
(bad)
fidiv
ins
mov
jl
jge
stos
fwait
out
imul
cmp
out
mov
aam
jnp
dec
add
out
fdivr
push
mov
outs
mov
jp
stc
lds
arpl
pop
dec
adc
popa
sub
add
or
je
cmp
adc
mov
sbb
les
and
inc
inc
push
mov
shl
xlat
ja
cmc
dec
ja
push
jg
test
cli
add
mov
inc
and
xchg
cmp
mov
ds
cdq
sti
mov
push
loope
jae
(bad)
mov
push
adc
mov
and
shl
pop
scas
add
pop
clc
inc
sbb
xlat
inc
mov
test
cdq
icebp
out
outs
ret
jmp
test
cmp
add
jae
pop
inc
mov
cmp
mov
cmp
repnz
jo
pop
mov
xor
mov
jmp
mov
out
adc
leave
add
daa
aam
jns
jns
cdq
sub
jbe
clc
movs
pop
mov
push
and
and
xchg
inc
xor
add
in
aaa
bound
mov
xchg
repnz
xchg
popa
cmp
mov
shl
mov
cmp
pop
imul
pusha
push
shl
nop
lahf
sub
sub
inc
call
shl
fcom
retf
pop
scas
or
and
fucomp
pop
jl
call
and
sub
mov
shr
aaa
push
inc
jmp
push
fwait
dec
leave
es
mov
fwait
or
call
ret
push
inc
repz
sub
das
cmp
jl
jne
ror
push
mov
xchg
or
std
(bad)
inc
jecxz
repnz
mov
pop
dec
inc
iret
test
jp
aam
pop
xor
scas
std
push
jle
jmp
xchg
mov
icebp
push
(bad)
aas
pop
xchg
fist
cwde
cs
dec
push
cmp
cmp
sbb
in
aam
adc
push
mov
pop
jae
idiv
and
jns
mov
addr16
mov
fstp
arpl
mov
jecxz
outs
xchg
sahf
pop
cmp
aaa
or
cld
push
mov
sbb
into
mov
sub
xchg
retf
lahf
aam
cmp
and
jnp
mov
cmp
in
int
jmp
fs
dec
add
retf
cmp
aaa
pushf
rcr
sti
cmp
xchg
jle
jmp
cmp
jle
lds
bound
push
(bad)
in
sbb
test
or
popf
dec
adc
jecxz
push
repnz
sub
and
pop
mov
pop
xchg
jecxz
and
cld
fld
or
imul
je
xchg
jmp
retf
xor
mov
xchg
into
and
and
out
xor
push
push
scas
fild
je
lods
ds
mov
mov
(bad)
fsub
fadd
dec
stos
aas
pushf
loope
fnstcw
add
movs
pop
jg
aad
sbb
cmp
mov
enter
push
adc
movs
jnp
or
js
adc
pusha
iret
pop
push
cmps
sub
xchg
icebp
xchg
cmp
cmps
gs
sub
out
loope
fwait
repz
sbb
or
movs
mov
ins
ins
xor
xchg
retf
aaa
imul
xor
push
stc
add
hlt
mov
retf
jmp
rcr
push
push
test
std
mov
or
test
xchg
or
and
xchg
mov
loopne
adc
xchg
aaa
lods
idiv
sub
out
push
inc
push
ror
push
and
mov
(bad)
sti
iret
inc
sub
cwde
cmp
mov
jmp
mov
inc
loopne
sub
sub
cmps
sbb
jle
xchg
push
js
xor
loopne
xor
test
or
xor
sbb
sub
outs
jmp
pop
add
cmc
sar
jo
movs
xchg
jmp
in
mov
or
popa
xor
fisubr
mov
loope
rol
or
add
inc
mov
aas
out
ja
repnz
jmp
xor
les
mov
add
pushf
jbe
adc
mov
push
test
and
cli
(bad)
xlat
je
xor
ins
out
dec
adc
ret
sar
cld
dec
dec
jne
mov
push
inc
add
pop
mov
ret
jae
or
aad
movs
(bad)
cld
neg
inc
ret
cmps
pop
pop
sbb
dec
push
jg
fs
xor
(bad)
jnp
mov
leave
popf
ss
fmul
scas
lock
rol
inc
jbe
mov
mov
addr16
jbe
jbe
or
nop
or
outs
lods
sbb
fsub
aam
xchg
call
push
sub
push
sahf
adc
or
shl
clc
mov
inc
ret
dec
push
push
out
sahf
push
xchg
fs
add
out
test
and
xchg
mov
adc
retf
xchg
or
and
cmc
jmp
lock
xchg
shr
xchg
and
sbb
(bad)
mov
inc
movs
cmp
inc
mov
and
mov
icebp
sahf
cmovne
sbb
inc
ds
xchg
shl
das
es
xor
adc
mov
lods
jmp
mov
repz
fist
pop
hlt
mov
outs
into
jl
xor
xor
rcl
stos
add
scas
push
mov
push
push
popa
neg
pop
loop
and
pop
movs
adc
and
adc
xchg
jle
je
xor
daa
push
je
fcmovu
mov
fiadd
sbb
xchg
fldenv
sub
rcr
ins
bound
cmp
test
pop
xchg
cmps
inc
xor
not
repz
enter
cdq
iret
inc
adc
push
pushf
sahf
dec
sub
inc
add
adc
ds
sti
push
add
into
add
cmp
cmp
mov
mov
xchg
pop
pop
imul
sub
outs
jbe
mov
lods
aam
xlat
in
std
jb
sbb
stc
push
les
sub
pushw
cmp
cwde
dec
in
jns
mov
test
mov
pop
leave
sub
in
and
ror
iret
sahf
mov
repnz
daa
sbb
call
or
or
mov
inc
dec
add
ss
mov
aas
jbe
lds
int3
jg
pop
retf
gs
xchg
retf
push
pop
mov
dec
retf
out
pop
cmps
out
ret
sbb
and
test
push
push
in
movs
retf
or
jmp
or
bound
sbb
xchg
outs
and
addr16
jbe
jno
ds
push
push
mov
shr
call
adc
pop
sub
push
sti
loope
cmps
pop
fnstsw
inc
jne
mov
mov
push
and
xchg
daa
ror
mov
cmp
das
push
xor
cmps
in
cli
cs
movs
enter
sbb
dec
mov
pop
add
scas
out
pop
jg
(bad)
retf
mov
es
mov
aaa
(bad)
cld
das
mov
adc
and
sbb
(bad)
and
lods
sbb
mov
jne
xchg
or
cld
out
jne
mov
push
jecxz
in
or
aad
popa
hlt
out
inc
test
xchg
add
inc
js
dec
sub
(bad)
cld
das
mov
sbb
xchg
mov
shl
fistp
enter
rcr
jnp
mov
movs
mov
out
mov
sbb
jno
adc
dec
loope
or
jle
aam
(bad)
adc
and
jbe
hlt
inc
loope
inc
je
test
imul
jo
push
push
and
lds
adc
dec
call
ds
int3
mov
shl
sub
iret
jns
dec
mov
mov
push
stos
ins
cdq
iret
jmp
adc
mov
aaa
rcl
inc
loopne
mov
popf
inc
scas
cld
xchg
lock
push
addr16
cmp
leave
clc
out
dec
mov
add
sub
repnz
cmp
(bad)
(bad)
cdq
iret
cs
pop
jnp
aam
sbb
call
and
clc
stos
mov
sub
(bad)
xor
adc
je
test
mov
sbb
add
jne
sub
push
jnp
movs
sbb
add
mov
in
out
test
push
inc
fdiv
in
cdq
sbb
jo
xlat
es
xchg
jl
add
and
sbb
mov
xor
scas
adc
dec
inc
imul
adc
jg
mov
retf
movs
ret
pop
sti
es
out
xor
inc
iret
loop
inc
sbb
sub
sbb
jmp
sbb
cs
inc
bound
test
push
mov
xor
cmova
cmp
call
push
popa
push
dec
loopne
pop
push
xor
mov
into
mov
imul
push
into
lock
add
jae
adc
es
mov
outs
sar
jns
aaa
(bad)
cli
shl
xchg
enter
loop
pop
pop
xor
add
lahf
(bad)
mov
jecxz
(bad)
cmc
dec
mov
push
aas
or
iret
out
add
dec
or
cmp
mov
mov
arpl
into
mov
nop
mov
(bad)
out
push
xchg
repnz
adc
push
aad
fwait
pop
in
cmps
jns
inc
jno
mov
aad
adc
call
jp
shl
call
loopne
sub
clc
mov
mov
mov
sbb
aaa
movs
out
push
xor
(bad)
into
xchg
mov
pop
mov
and
in
bound
dec
jl
sub
cmp
push
hlt
daa
das
xchg
pop
or
pop
icebp
dec
push
int
cli
mov
mov
ins
mov
cmps
push
sbb
movs
jge
inc
pop
push
sub
mov
lods
pop
xor
sub
inc
sub
mov
jge
cwde
fwait
rcr
jmp
dec
jg
lock
ja
aad
push
aas
sbb
arpl
pop
repz
cmp
loop
or
xchg
adc
jno
js
pop
push
mov
dec
aas
mov
sub
inc
and
and
sbb
cmps
arpl
bswap
xlat
xor
je
push
enter
es
push
int
and
shl
scas
push
push
pushf
fistp
ja
pusha
push
fcomp
aaa
cmc
and
neg
add
in
sbb
or
sbb
js
jmp
xor
adc
test
inc
jae
sbb
popf
or
ret
aad
push
mov
adc
dec
and
sub
outs
push
and
jle
jno
les
arpl
addr16
jo
call
popf
and
nop
inc
pop
xor
pop
fwait
or
push
(bad)
cmp
inc
ror
cmps
sbb
push
xor
mov
(bad)
and
std
icebp
mov
pop
xchg
fs
mov
push
jno
sub
arpl
and
ins
sub
in
cmp
retf
cs
sub
dec
push
mov
or
push
push
inc
(bad)
frstor
inc
cmp
arpl
sub
cmps
ret
xlat
shl
adc
jnp
cs
retf
leave
sbb
call
inc
icebp
fcom
int
movs
jno
popf
add
sbb
xchg
pop
add
popa
or
mov
inc
scas
sbb
nop
dec
pop
add
fist
jmp
pop
mov
test
pop
jne
rcl
ret
fs
dec
aam
push
xchg
lea
xor
lods
repz
adc
movs
or
enter
jg
xor
cmc
jg
push
dec
mov
dec
pop
lods
mov
out
sbb
jp
pop
add
mov
int
and
or
push
pop
stos
sbb
sahf
fisubr
mov
into
repnz
and
xor
ficomp
push
jbe
(bad)
push
add
icebp
jecxz
xchg
xchg
and
xlat
dec
clc
retf
call
(bad)
add
les
dec
or
in
jg
ror
push
inc
cmp
repnz
or
inc
dec
loop
pop
icebp
stc
jbe
cs
aam
adc
jl
pop
pop
mov
repz
loopne
mov
pop
aad
mov
scas
rcl
cmp
daa
std
pop
sub
lahf
mov
inc
cmp
or
loop
pop
dec
add
jmp
pop
in
jge
sbb
loop
(bad)
sbb
js
sbb
push
hlt
xchg
xchg
add
addr16
iret
push
jne
fdiv
es
ja
(bad)
and
(bad)
and
mov
dec
and
in
adc
ds
mov
push
jae
xor
or
or
gs
ss
je
lock
push
push
stos
push
fs
shl
nop
add
fiadd
dec
mov
sbb
movs
test
outs
inc
xchg
sbb
pop
out
sub
and
dec
(bad)
sbb
jmp
mov
inc
jae
dec
fcom
mov
test
xchg
(bad)
fisubr
mov
fst
shr
das
cmp
jo
idiv
call
cli
sbb
cmc
push
repnz
iret
dec
(bad)
movs
pop
sahf
add
add
jp
adc
push
daa
xchg
sub
mov
das
dec
mov
mov
push
mov
mov
ret
add
int3
(bad)
pop
sbb
mov
scas
cdq
clc
aaa
movs
xchg
ret
call
aas
mov
cmp
inc
rol
das
fistp
fsub
lahf
outs
rol
pop
mov
inc
imul
pop
pop
sar
xor
div
mov
fimul
es
pop
mov
xor
fmul
push
push
jg
shl
cmp
sbb
cmp
dec
xor
jnp
fwait
rcr
les
sbb
or
repz
fiadd
pop
aaa
dec
scas
jbe
mov
mov
sbb
test
add
xchg
shl
adc
call
fwait
stos
fmul
lock
and
mov
icebp
and
mov
aad
ret
inc
sub
mov
mov
mov
jmp
cmc
loopne
inc
and
jge
jmp
pushf
fsubr
xor
int3
mov
ds
cmp
fwait
pop
popa
lock
ja
nop
jb
lds
fnsave
inc
mov
push
or
pop
jae
xor
(bad)
mov
mov
cld
or
mov
jb
enter
pop
mov
lahf
pop
adc
bound
mov
push
xchg
xchg
mov
push
shr
pop
dec
pop
out
movlps
pop
ret
xlat
cmps
cmps
jne
and
inc
add
(bad)
mov
daa
and
sbb
dec
pop
mov
jnp
jmp
sbb
outs
pop
scas
(bad)
movs
scas
in
retf
push
out
mov
retf
xor
cld
adc
out
sub
pushf
push
cmc
pushf
cmp
cwde
mov
leave
dec
and
(bad)
movs
in
dec
(bad)
ficom
cmp
imul
mov
ret
popa
mov
push
and
mov
xchg
push
les
loope
mov
pop
sub
imul
mov
pushf
inc
in
cdq
jle
pop
iret
test
dec
inc
std
repz
inc
in
jns
cmp
fbstp
cmp
mov
fistp
(bad)
sbb
adc
cwde
dec
mov
sti
mov
push
stc
dec
xor
pop
dec
jns
nop
rcr
enter
loopne
(bad)
aaa
mov
jae
(bad)
cli
dec
loope
outs
retf
adc
cmc
into
dec
push
hlt
fild
stos
js
cmp
sub
sti
xchg
pop
pop
bound
sbb
into
out
movs
add
movs
out
or
fld
mov
sti
int
test
sub
hlt
iret
xchg
dec
mov
fistp
mov
inc
add
ret
cdq
xlat
bound
test
xchg
out
dec
xchg
adc
jns
icebp
icebp
dec
je
dec
mov
stc
mov
in
xchg
inc
push
xor
or
sub
test
inc
gs
dec
cmp
shl
int
or
and
add
scas
sahf
call
cmp
cmp
pop
jl
jmp
int3
call
push
cmp
shl
jmp
inc
ret
(bad)
add
lods
xor
push
sbb
ins
sti
popf
and
popf
ds
fld
out
push
inc
pop
daa
sbb
rcr
cld
push
out
pop
not
xor
je
cmp
aad
and
jae
push
pop
fsqrt
sub
out
pop
mov
cmp
mov
lods
and
push
xchg
sbb
shl
pop
push
jae
dec
dec
cmp
aad
or
jnp
jnp
cmp
lock
pop
inc
mov
xchg
pop
iret
leave
and
outs
into
mov
push
out
add
cmp
add
js
cmp
sub
imul
jp
inc
mov
dec
(bad)
(bad)
loop
xchg
ret
and
data16
(bad)
inc
call
cmp
mov
dec
cmps
mov
push
xchg
dec
mov
and
sbb
jmp
inc
pop
in
(bad)
and
les
dec
pusha
push
icebp
les
adc
out
popf
les
or
mov
stc
in
cmp
or
arpl
mov
in
repnz
imul
mov
dec
les
mov
or
adc
test
pushf
push
dec
(bad)
cmc
cmp
dec
jmp
dec
mov
hlt
test
(bad)
shl
xchg
(bad)
lock
das
pop
adc
loopne
mov
lea
cmp
cmps
popa
xchg
sbb
int
fmul
aas
into
mov
inc
lods
les
xor
mov
xlat
pop
sbb
loope
xchg
pop
xchg
sbb
(bad)
fwait
in
addr16
rcr
fs
repnz
xor
repnz
xor
vminss
loopne
and
cli
cmps
dec
jp
stc
lea
fmul
test
test
lods
inc
push
push
lods
bound
dec
fistp
in
pop
mov
(bad)
mov
clc
cmc
ss
lds
aad
sbb
in
xor
xchg
sbb
iret
movs
mov
lods
push
adc
scas
cmps
push
ins
ror
xchg
push
inc
js
mov
jecxz
mov
jnp
push
or
test
inc
inc
or
(bad)
jmp
stc
lods
retf
cmp
push
pop
push
ins
ss
mov
hlt
dec
dec
add
test
fistp
je
and
adc
mov
ret
test
dec
in
mov
cmp
shl
pop
sbb
(bad)
imul
out
cli
ss
dec
and
xchg
stos
hlt
mov
fidivr
ret
sub
fsubr
cmp
sub
push
loopne
(bad)
jno
and
lock
lds
test
frstor
push
pop
and
mov
jno
cmp
xchg
fsubr
sahf
sub
cmp
mov
dec
xchg
je
mov
(bad)
aad
addr16
push
and
xchg
adc
scas
dec
mov
pop
mov
repnz
and
ret
shl
je
lock
adc
test
sub
pop
enter
out
mov
adc
xor
loope
popa
outs
mov
mov
push
inc
and
aad
adc
xchg
(bad)
mov
pop
cmps
xor
(bad)
adc
addr16
xor
ret
shl
movs
jg
popf
inc
cs
push
cmc
xor
fwait
out
retf
mov
jno
test
rol
mov
pop
sbb
and
and
mov
jno
pusha
fs
and
mov
and
pushf
test
fs
(bad)
call
mov
mov
pop
add
xchg
inc
mov
psubusb
lds
xchg
cmps
(bad)
mov
sub
pop
xor
and
(bad)
push
sbb
mov
mov
mov
call
les
inc
dec
std
popf
inc
inc
mov
jle
adc
rcl
mov
mov
data16
xchg
es
les
push
push
mov
call
adc
ins
stc
mov
push
dec
movs
je
rol
out
and
push
jo
mov
test
cmps
xor
mul
movs
out
bound
es
mov
xchg
js
loopne
jbe
inc
std
mov
bound
jmp
call
fimul
or
test
mov
lahf
add
inc
sub
call
rcl
jl
retf
cwde
mov
in
mov
fbstp
leave
pop
ror
dec
add
adc
sbb
push
jmp
pop
add
ret
push
dec
mov
mov
test
push
mov
enter
sub
xchg
not
sbb
mov
loop
pop
shl
mov
add
fiadd
pop
not
data16
fiadd
cmp
pop
loop
(bad)
cmp
pop
xchg
in
cmp
jbe
scas
addr16
sub
mov
pushf
loopne
inc
lods
test
sbb
jo
nop
loopne
movs
not
sbb
(bad)
mov
imul
test
dec
in
loope
sub
rol
rol
lods
sbb
inc
sbb
pushf
xchg
cmp
sub
(bad)
sbb
or
dec
xor
fld
stos
add
xchg
sbb
jl
repnz
fs
pop
rcr
retf
pop
pop
dec
adc
mul
add
out
cmp
arpl
inc
sub
add
jnp
retf
test
stos
adc
pusha
cmp
out
or
push
jmp
or
push
or
xchg
dec
xlat
jns
test
pop
fnstcw
mov
push
retf
shl
sbb
outs
jecxz
or
scas
stc
repz
cwde
xchg
mov
mov
mov
pop
aaa
jb
sub
sub
cmc
in
fadd
movzx
lock
dec
not
push
ds
aaa
cld
mov
pop
add
test
jl
stos
popf
inc
dec
add
mov
adc
jl
lock
fs
jns
inc
dec
(bad)
cli
pushf
push
xchg
cmp
jno
fcomip
add
sahf
aad
ds
mov
xor
rcl
fsub
cmp
add
jecxz
xchg
mov
stc
lahf
pop
call
xchg
call
cli
fucomi
jo
je
push
iret
retf
dec
jmp
popf
ins
imul
push
add
or
std
xchg
ja
or
rcr
adc
mov
mov
or
imul
mov
mov
inc
push
mov
sbb
xor
test
mov
fisub
sbb
leave
mov
cmps
fwait
dec
loope
mov
cs
pop
dec
sahf
daa
scas
sub
scas
jno
sub
inc
adc
jb
loope
xchg
mov
out
test
xor
pushf
retf
xor
in
(bad)
sub
push
mov
loopne
fild
jle
mov
jae
adc
push
jae
push
or
enter
adc
mov
dec
pop
inc
enter
aad
movs
and
mov
sbb
mov
jl
adc
int3
imul
jns
xor
mov
adc
daa
mov
shr
sub
sbb
dec
in
addr16
add
sub
repnz
aaa
adc
cmps
dec
rol
jmp
pop
mov
sbb
add
pusha
pop
lea
cmp
loopne
adc
addr16
call
sbb
push
xchg
pop
repnz
dec
pop
(bad)
jbe
xchg
cmp
inc
jmp
cwde
mov
or
fild
and
xlat
(bad)
in
and
dec
jl
imul
sbb
mov
dec
ret
test
fistp
jmp
les
fcom
sbb
push
adc
test
loope
mov
add
cmp
or
ins
leave
int
lods
lods
out
push
(bad)
cmpxchg
jg
ss
and
push
xor
int
xchg
in
jb
mov
add
loop
nop
popf
inc
test
in
dec
in
(bad)
sahf
add
jl
(bad)
adc
int3
xor
inc
lods
je
mov
cld
xlat
jmp
mov
xor
cdq
mov
jb
lock
inc
inc
cli
js
ds
je
out
pop
arpl
sbb
ins
push
and
push
pushf
cdq
hlt
xor
xchg
adc
dec
sub
push
icebp
lock
in
or
add
(bad)
xchg
imul
mov
imul
aad
int
mov
movs
ret
ins
cdq
cmp
and
pop
push
lock
test
add
cwde
arpl
xchg
inc
inc
outs
and
pop
sbb
sbb
pop
fstp
sbb
jae
rol
jae
into
sbb
xchg
add
ja
add
rol
je
in
mov
sub
arpl
jle
push
cwde
dec
jle
jge
pop
sub
fimul
call
jl
or
out
xchg
dec
je
popf
fadd
xor
popf
call
daa
mov
mov
pop
stc
lods
jecxz
rcl
push
es
jns
add
hlt
cmc
mov
sub
push
rcl
dec
out
nop
or
scas
xchg
xor
loop
adc
pop
jge
icebp
sub
sti
sbb
int3
inc
or
es
jne
pusha
sahf
sbb
ins
inc
and
imul
cdq
or
or
addr16
dec
adc
sti
in
rol
inc
and
sbb
push
popf
xchg
shl
gs
in
sbb
pop
add
mov
lea
jecxz
es
adc
jge
mov
mov
in
sub
je
and
test
and
pop
pop
jno
ss
sti
leave
clc
popa
sbb
push
sub
mov
inc
xor
into
xchg
inc
std
nop
loope
jl
pop
sbb
sti
mov
mov
xchg
ret
xchg
sbb
jle
ins
pop
icebp
jg
add
in
ror
mov
hlt
mov
arpl
sbb
(bad)
cmc
and
das
mov
in
mov
std
and
jne
pop
jns
data16
sub
mov
or
fwait
mov
inc
mov
or
push
out
fst
imul
out
out
mov
mov
popa
sub
lds
sbb
outs
popa
push
xchg
push
jns
add
retf
out
mov
mov
pop
push
jbe
mov
inc
cmp
rcl
sbb
push
inc
lods
push
jae
sbb
stos
sub
out
xchg
loope
adc
xchg
aas
fld
das
or
inc
mov
daa
mov
sbb
sbb
das
push
cmps
test
sub
dec
mov
pop
dec
in
mov
imul
sub
inc
shr
mov
push
mov
dec
mov
lods
or
popa
add
adc
push
inc
mov
aas
sbb
mov
in
mov
dec
cs
sbb
lock
enter
imul
ins
jb
cwde
xor
mov
or
mov
fld
adc
jbe
movs
mov
jns
mov
lock
add
push
sbb
dec
jmp
lock
pop
xchg
add
enter
aad
inc
ja
jnp
pop
mov
cmp
mov
add
xchg
sub
inc
push
push
mov
cmp
fist
pop
stc
inc
stos
push
repnz
call
xor
stos
pop
or
and
pop
stos
adc
or
lods
hlt
pop
sahf
cmp
aad
cmp
mov
and
test
fs
setne
pop
mov
pop
mov
inc
out
push
jne
test
call
std
ds
jns
push
mov
mov
hlt
stos
or
lods
xor
cmp
idiv
pop
or
and
nop
cmps
test
cmp
push
xor
mov
xlat
out
adc
adc
and
test
inc
ins
loopne
movs
cmc
ss
inc
loope
dec
movs
lods
xchg
(bad)
lahf
stos
repz
jne
inc
shr
in
into
aam
inc
mov
cld
loope
test
dec
mov
loopne
and
out
mov
xchg
sbb
push
(bad)
call
stos
mov
fist
sub
mov
mov
shl
imul
mov
sti
test
shl
paddq
jo
jge
out
xchg
pop
adc
les
fwait
and
sub
cmps
and
push
call
cdq
icebp
mov
enter
xchg
test
outs
cs
add
loopne
jmp
out
mov
dec
mul
pop
leave
and
clc
shl
out
xor
sub
dec
push
mov
mov
jecxz
adc
xchg
adc
adc
jecxz
or
into
mov
adc
add
mov
test
push
xchg
loopne
mov
inc
cmp
inc
cmp
out
ss
fist
ins
dec
hlt
dec
pop
gs
push
xlat
bound
shl
sub
minps
mov
repz
dec
scas
jle
xlat
xchg
inc
retf
and
nop
jmp
sahf
push
or
xchg
sub
jnp
jnp
popa
stos
ret
mov
ficom
lods
bound
mov
cmps
jle
mov
shl
outs
jmp
not
push
and
xor
sahf
jl
imul
jg
fs
or
sub
inc
inc
int
xchg
cli
(bad)
hlt
neg
mov
xor
and
add
das
sbb
aas
(bad)
out
dec
cmp
or
inc
scas
(bad)
jg
not
dec
or
aas
sub
pop
adc
xchg
jl
pushf
pop
cmp
mul
and
in
pop
cmp
mov
daa
out
(bad)
fwait
push
ins
pusha
mov
adc
mov
adc
inc
cs
sbb
or
jo
and
stc
test
addr16
adc
jmp
and
bswap
or
aas
pop
jecxz
jmp
xchg
mov
xchg
pop
pop
aas
add
iret
repnz
cli
addr16
mov
mov
movs
push
and
add
int
jecxz
pop
xchg
add
setnp
inc
push
mov
inc
ror
fwait
into
and
loopne
je
mov
push
adc
loopne
ins
lahf
cmp
imul
addr16
xchg
aam
packssdw
int
adc
inc
in
out
mov
add
push
rcr
(bad)
sbb
das
out
jae
or
(bad)
test
int3
jae
mov
xor
aad
cmp
push
(bad)
in
(bad)
push
or
jns
daa
add
jmp
nop
xchg
lds
leave
loopne
mov
sbb
out
jo
or
sar
inc
mov
popf
push
sub
int
or
dec
jp
xchg
and
jmp
out
pop
retf
xor
xor
addr16
fmul
fdiv
scas
shr
push
jle
push
or
mov
test
enter
jecxz
(bad)
cdq
loopne
jns
push
aas
loop
dec
xlat
push
mov
mov
lods
stos
or
clc
icebp
data16
stos
shl
xchg
test
shl
adc
stos
xchg
ins
(bad)
rcl
mov
sub
dec
in
test
repnz
dec
jmp
adc
mov
add
jmp
or
cmp
call
adc
mov
lock
or
ins
cmp
adc
sub
xchg
cmp
sub
dec
add
mov
push
test
daa
neg
fs
or
jmp
xchg
ins
inc
inc
call
pushf
outs
cmp
cmp
call
neg
ror
jns
xlat
xchg
push
xchg
cwde
xchg
aad
adc
xor
xor
inc
iret
push
cmp
inc
shr
xor
leave
push
dec
add
ret
sbb
(bad)
mov
popf
and
mov
inc
cwde
bnd
ret
fcmovnbe
mov
call
push
lea
adc
fadd
mov
cmp
xor
retf
out
mov
cmps
mov
out
add
pop
mov
mov
cmp
test
mov
and
mov
inc
pop
jne
(bad)
xchg
mov
adc
mov
es
into
mov
add
xchg
pop
pusha
xchg
jns
pushf
arpl
sti
mov
pop
dec
mov
jmp
movs
ret
rol
fwait
xor
jmp
ret
arpl
in
addr16
or
call
jae
scas
hlt
adc
paddsw
sbb
clc
sub
loopne
add
or
cmp
cmp
push
cmps
lods
mov
add
daa
into
adc
lahf
(bad)
lods
imul
add
jnp
and
jge
push
ficom
daa
push
int
mov
outs
mov
xchg
inc
jo
mov
and
je
loopne
nop
sub
sub
(bad)
pop
add
fadd
stos
rcr
sbb
jo
add
test
sbb
test
adc
loop
xor
cwde
jns
inc
fs
sbb
fst
(bad)
int3
dec
sub
mov
iret
dec
jp
mov
mov
add
lock
popa
into
lock
adc
xor
push
pop
jne
push
push
call
fldenv
add
inc
pop
xchg
add
and
add
lods
das
mov
xchg
push
enter
pop
sbb
adc
xchg
fwait
add
movs
das
inc
xchg
dec
scas
push
mov
fs
(bad)
dec
push
jge
into
cmp
and
retf
mov
jmp
(bad)
adc
call
mov
jmp
movs
xor
shl
leave
mov
test
jo
jg
pop
ret
mov
div
pop
into
xor
adc
rcr
aam
xchg
mov
aad
loop
pushf
and
icebp
in
push
(bad)
test
adc
push
pop
or
add
pop
mov
adc
jle
test
(bad)
mov
xacquire
in
adc
xchg
movs
cmp
xor
mov
push
aam
in
jl
xchg
in
mov
sbb
in
mov
mov
xchg
div
lock
inc
sbb
aaa
jl
pop
push
mov
cs
or
loop
or
push
mov
cmc
in
and
shl
sub
ret
(bad)
fimul
shl
sbb
jae
out
pop
in
pop
mov
lea
aaa
repz
push
mov
mov
and
bound
std
test
les
xor
mov
loop
in
xor
rcl
pop
push
ret
jmp
inc
jle
shl
pop
repz
aam
mov
xchg
or
or
push
pop
mov
aad
mov
jle
(bad)
sbb
mov
inc
leave
call
in
and
lods
sub
lea
repz
inc
mov
cmovae
adc
cmp
stc
push
pop
push
aad
sbb
xchg
jmp
not
xchg
push
xchg
in
and
call
pop
adc
cwde
mov
arpl
jmp
inc
loopne
cmps
or
inc
movs
push
cdq
pop
cmp
inc
les
sbb
pushf
mov
in
jmp
ss
sbb
mov
mov
or
inc
lds
adc
or
in
jmp
jmp
gs
loope
push
jns
cdq
inc
mov
aaa
push
popa
pop
pop
adc
pop
add
inc
and
loop
lods
stos
inc
fnsave
stc
ror
push
adc
mov
jno
lods
popa
push
xchg
outs
adc
out
sti
dec
fisttp
cmp
ds
shr
out
dec
pop
nop
shr
daa
addr16
inc
mov
imul
jp
cmp
fistp
sar
sub
addr16
fisttp
sbb
mov
inc
cwde
or
cmp
push
lods
xor
test
pushf
pusha
arpl
addr16
dec
lahf
cld
or
inc
jmp
push
cmp
xor
cmp
and
adc
and
test
mov
fisub
sbb
push
mov
jl
and
retf
inc
dec
xchg
fcomp
je
mov
and
xlat
xchg
and
outs
ins
inc
test
dec
xor
ficomp
popa
inc
push
cmp
test
mov
xor
add
push
cmp
and
add
or
sbb
or
shl
adc
outs
xchg
push
sub
ror
out
sub
fwait
mov
mov
cmp
push
lahf
pop
push
or
xchg
add
out
outs
cwde
sbb
cmp
stos
fistp
cmps
add
cmp
neg
mov
mov
loope
xchg
std
arpl
sbb
xlat
push
ret
out
and
xchg
shl
push
iret
stos
es
sbb
test
and
mov
daa
cli
cmps
call
dec
mov
and
movd
pushaw
inc
(bad)
js
jno
and
inc
loope
ret
sbb
je
ins
jmp
pop
adc
lods
dec
sub
add
call
push
ins
popa
scas
pop
mov
sub
jno
xor
sub
sub
mov
out
into
popf
pop
icebp
and
dec
adc
mov
and
(bad)
jecxz
xchg
push
xchg
dec
cmps
rcr
pop
out
sub
setne
dec
(bad)
js
pop
sahf
lahf
shr
inc
neg
sti
xchg
popa
sti
xchg
dec
cmps
push
dec
shl
(bad)
cld
sub
lahf
mov
cmc
sbb
lods
push
mov
xchg
popf
shl
sbb
stos
mov
sub
addr16
xor
les
ins
daa
loopne
xor
call
adc
int
imul
cwde
push
fstp
push
pusha
(bad)
jo
sub
aas
mov
fidiv
sbb
sub
scas
mov
mov
mov
mov
je
test
jb
inc
inc
pop
(bad)
pop
aad
inc
jp
loop
les
int
jle
mov
jae
clc
sbb
dec
shl
sbb
or
hlt
fbld
xchg
test
sub
clc
cs
ret
js
cmp
fmul
add
cmp
mov
xchg
adc
mov
ss
dec
retf
add
jno
cmp
and
pop
add
push
push
push
jnp
ror
sbb
int3
jp
(bad)
fisubr
jnp
pop
sbb
dec
cmps
les
daa
push
cmps
fbld
jp
push
jmp
std
sub
pusha
repnz
popa
xchg
jb
and
pop
ret
add
add
pop
push
inc
std
cwde
sbb
sub
dec
int3
add
ins
sub
add
rcr
pushf
ret
je
fild
mov
stos
xor
mov
inc
jnp
gs
scas
outs
shl
pop
jno
or
icebp
movs
and
adc
lock
or
push
int
and
loop
ss
cmp
mov
cmps
fadd
(bad)
adc
js
icebp
ret
fwait
in
cmps
jle
repnz
push
mov
xchg
adc
sbb
fadd
and
mov
pop
push
xlat
cwde
aaa
or
sbb
and
cwde
xor
inc
inc
not
mov
pop
lds
les
or
inc
in
pop
out
mov
into
inc
pushf
jl
arpl
les
inc
arpl
cmps
lahf
or
cmp
shl
mov
xchg
cmps
mov
(bad)
retf
push
aas
call
(bad)
pusha
mov
mov
dec
fstp
and
sub
clc
jg
add
out
bound
pop
(bad)
add
inc
out
xlat
cmps
mov
adc
xor
xor
xchg
push
and
lahf
jb
inc
jno
xchg
in
adc
mov
into
jo
push
fcom
dec
shl
ds
fist
lods
aad
mov
ret
xchg
daa
dec
icebp
mov
test
ins
add
push
xchg
add
imul
lods
inc
dec
mov
pop
aaa
hlt
push
inc
dec
lahf
loop
inc
(bad)
pop
aad
mov
push
in
sub
(bad)
mov
pop
mov
push
jb
dec
mov
mov
in
add
add
mov
shl
and
ret
test
rcr
or
test
fdivr
sbb
mov
adc
add
outs
cmps
and
cmp
cwde
stos
adc
dec
sub
out
fwait
xor
aaa
push
movs
mov
push
fadd
dec
xchg
dec
lock
sbb
dec
sar
movs
jmp
or
sub
out
mov
or
xchg
jmp
nop
mov
cmp
jmp
cmp
mov
shl
or
sbb
or
jge
call
loopne
mov
xlat
jns
popf
xor
push
shr
xor
addr16
xor
leave
mov
add
push
push
sub
pop
test
hlt
push
pop
clc
push
adc
rcl
sbb
xchg
xchg
fadd
in
test
pop
mov
int
xchg
pop
gs
ficom
mov
daa
mov
scas
jg
pop
lds
or
(bad)
outs
adc
xor
sub
data16
xchg
sbb
fadd
mov
or
sbb
pop
call
aad
sbb
or
push
mov
mov
cmps
ins
mov
push
jne
cmp
adc
ja
mov
mov
sbb
out
mov
xchg
test
iret
sub
inc
mov
ds
jmp
cmp
(bad)
sbb
mov
pop
mov
pop
out
push
imul
js
lahf
jno
xchg
push
xor
fidiv
dec
inc
sbb
add
jne
pop
cmps
int3
outs
mov
std
not
mov
bound
mov
sbb
cmp
sti
mov
jmp
sti
dec
test
pop
and
test
out
adc
or
lods
push
cmps
mov
mov
or
push
cdq
jo
push
test
hlt
cmpxchg
jl
mov
cli
mov
jmp
fmul
xor
jne
jl
xor
mov
xchg
ds
push
inc
or
cwde
xchg
outs
cli
xchg
push
fcmovnu
scas
or
sar
mov
jmp
pop
pop
icebp
inc
cmp
mov
ficomp
mov
mov
and
inc
xchg
cmp
add
and
xor
pop
sbb
or
pop
jae
sub
mov
jo
fwait
dec
xchg
add
mov
stc
out
push
jge
repnz
sbb
jmp
inc
xchg
stc
jb
ret
push
jl
jp
sub
sti
jbe
sbb
and
add
xchg
mov
mov
mov
mov
push
push
stos
div
inc
leave
xchg
sub
lds
mov
outs
xor
inc
xchg
xor
stc
jnp
fisub
rcl
hlt
dec
jno
push
popa
int
les
sbb
add
sar
sbb
adc
pop
xchg
push
fmul
inc
int
push
aam
loopne
adc
xor
add
add
pusha
test
data16
jbe
shl
adc
inc
adc
inc
push
adc
push
mov
mov
add
or
and
xor
mov
push
arpl
sub
dec
add
test
fdivr
in
fisttp
xchg
pusha
push
xlat
mov
and
mov
(bad)
test
add
or
out
stos
fsubr
lds
mov
sbb
imul
mov
paddusb
cmp
or
mov
fsubr
pop
pop
fucomip
outs
rcl
and
lock
mov
push
pop
movs
jmp
stos
enter
je
sbb
xor
adc
push
or
aam
jne
jo
sbb
mov
cmp
test
xor
mov
idiv
cmps
sar
out
js
push
call
push
xchg
imul
(bad)
fimul
dec
out
iret
xchg
and
repnz
cli
cmp
iret
push
push
and
data16
ror
ficom
popf
sti
pop
xchg
popf
fcomp
jne
mov
repz
(bad)
shr
repz
push
scas
pop
pop
aas
(bad)
ss
(bad)
pop
push
int
sub
ja
and
push
(bad)
pop
sub
push
mov
jle
movs
add
pushf
cdq
je
and
sti
inc
mov
dec
xor
mov
repnz
lock
push
in
push
mov
inc
cmp
pop
sahf
call
mov
sub
repnz
(bad)
shr
test
add
or
cmc
pop
dec
jnp
out
mov
mov
xchg
pop
mov
push
aas
ins
mov
push
adc
mov
(bad)
jns
cmp
lds
sub
pop
loop
xchg
mov
rcr
jnp
test
mov
push
inc
jmp
xchg
push
ret
jp
inc
in
std
shl
pop
jge
push
imul
and
aad
test
rcr
(bad)
(bad)
pushf
movs
inc
fld
mov
sbb
out
dec
jae
rcl
into
jbe
push
aaa
mov
cdq
addr16
add
pop
(bad)
loopne
repz
das
jp
call
inc
mov
adc
loop
or
movs
call
xor
mov
scas
xchg
push
and
mov
jmp
fstp
add
cmp
pop
jnp
test
mov
fsubr
mov
test
inc
retf
xor
jns
push
rcl
iret
aam
clc
sti
pop
sub
pop
repnz
add
ret
call
inc
inc
mov
data16
push
popa
shl
mov
lds
sar
sub
and
pop
dec
sub
add
dec
push
dec
and
mov
(bad)
pop
fdivr
loop
test
pop
repnz
push
jg
jne
test
mov
dec
xor
lods
das
fidiv
sub
adc
ret
inc
inc
std
gs
fmul
fistp
jns
add
dec
dec
push
pop
pop
dec
mov
shl
icebp
push
(bad)
pop
push
inc
add
jp
push
dec
jmp
add
push
push
fwait
jno
inc
fldenv
mov
ja
enter
in
inc
fsub
mov
out
inc
jns
xor
popa
add
dec
mov
mov
inc
movs
mov
pop
daa
push
rcr
cwde
test
pop
push
(bad)
adc
je
xor
(bad)
pop
add
jno
cmp
mov
xchg
ret
inc
loopne
pop
arpl
inc
fwait
cmp
sub
imul
pop
(bad)
les
add
and
ja
cs
in
add
in
lods
enter
call
fldenv
and
cmp
adc
jae
pushf
mov
fld
cmps
or
inc
push
jg
xchg
pop
adc
jmp
arpl
out
mov
ficom
pop
cs
test
test
out
mov
dec
xor
dec
push
lods
jne
dec
sub
(bad)
cmp
or
cdq
data16
sti
add
lahf
mov
fwait
or
nop
push
ret
mov
movs
inc
mov
pop
out
fs
adc
xchg
cmp
xor
fidivr
scas
inc
retf
push
inc
xor
movs
(bad)
stos
sbb
aam
jp
cmp
fsub
xchg
cmps
bnd
mov
adc
add
jb
aas
mov
xor
rcl
xor
pop
push
ret
sbb
inc
sbb
inc
push
adc
pop
fidivr
(bad)
pop
fld
jmp
leave
leave
mov
add
aad
inc
and
and
test
cdq
(bad)
sbb
fdivr
jmp
cmp
cs
pop
cmps
test
xor
daa
iret
fistp
adc
in
(bad)
popf
jg
aaa
icebp
imul
mov
pushf
inc
sbb
shl
mov
mov
pop
loope
sub
jbe
call
movs
dec
sbb
jmp
sub
imul
push
sub
dec
and
xchg
arpl
and
cmps
push
dec
mov
adc
sub
ret
push
loope
jbe
rcr
imul
adc
out
cmp
(bad)
or
dec
adc
cmp
jnp
pop
or
fld
loope
xchg
js
in
add
push
arpl
cmp
test
pop
push
mov
mov
cmp
mov
je
pop
dec
sbb
and
pop
not
sub
(bad)
cmp
pop
aad
rol
jmp
shr
xlat
sub
jmp
or
aam
and
pop
mov
pop
add
sub
mov
pop
adc
stos
jl
jmp
mov
aad
ss
add
add
jns
iret
push
add
mov
sub
cmp
dec
repz
adc
addr16
jge
fcomp
fwait
cmp
addr16
fsub
cmp
inc
fisubr
mov
mov
(bad)
pop
(bad)
and
sbb
icebp
push
jle
mov
pop
int3
sbb
jp
cmp
inc
rcr
pop
popf
loope
call
scas
les
pop
repz
scas
xchg
shl
aaa
fidiv
arpl
mov
and
loope
inc
cmp
mov
ins
retf
imul
sub
dec
pop
push
mov
scas
cmps
pop
cld
or
dec
hlt
sbb
jo
icebp
iret
mov
jmp
out
mov
ja
enter
add
and
arpl
mov
ds
xchg
xchg
xchg
or
sub
fdivr
mov
in
and
add
cs
adc
imul
sar
pop
mov
jmp
cld
adc
sub
(bad)
repnz
xor
shr
mov
cmp
inc
mov
sub
shl
dec
jle
jg
lds
(bad)
call
gs
mov
sub
sti
mov
mov
clc
and
mov
sub
sbb
add
outs
mov
ss
ins
pop
aas
nop
and
push
ror
repnz
xor
ss
mov
leave
leave
outs
cs
adc
clc
inc
or
sub
mov
or
xchg
scas
or
mov
test
push
addr16
stos
(bad)
and
xor
or
cmp
popf
inc
cmp
mov
adc
or
sub
lock
pop
pushf
dec
bndstx
mov
mov
ficomp
enter
mov
xor
cdq
dec
test
sbb
lock
stos
out
mov
fistp
test
push
dec
in
xchg
pop
pop
clc
cs
ins
rcl
cmps
stos
cld
pushf
jb
js
adc
repnz
aaa
xchg
jo
nop
add
cld
call
es
jp
pop
fwait
adc
push
pop
fimul
sbb
jae
jb
(bad)
out
pop
jo
test
shr
sub
lahf
jp
dec
bound
pop
jecxz
ins
test
push
push
jbe
dec
and
pop
fisttp
out
out
inc
cmps
mov
popf
ds
adc
in
cs
or
stc
inc
mov
lods
mov
sbb
retf
adc
outs
sbb
add
dec
xchg
add
or
lahf
mov
jno
int3
inc
movs
add
pop
test
mov
(bad)
outs
xchg
mov
lock
mov
sub
daa
jmp
icebp
and
and
cmp
jge
ds
xchg
mov
sub
mov
fisubr
popa
push
xor
fisubr
sbb
sbb
sbb
xor
push
ja
xchg
fmulp
lods
lods
jp
xchg
loop
cwde
fnstenv
mov
lahf
leave
(bad)
dec
(bad)
jo
ffree
push
sbb
retf
and
cmps
retf
sbb
out
retf
int3
pop
push
jg
mov
cmp
cmp
leave
jp
clc
in
sar
cmp
mov
mov
(bad)
sar
push
push
push
pop
in
pop
sbb
mov
sti
xor
rcl
inc
or
push
cmp
bound
or
mov
mov
inc
dec
fisub
(bad)
push
and
jbe
aad
sub
sti
inc
adc
cmp
mov
movs
dec
mov
dec
jae
call
sbb
dec
xchg
dec
nop
mov
fimul
cdq
loopne
out
pop
or
shl
add
bound
imul
jno
leave
push
xchg
pop
mov
xchg
scas
iret
(bad)
into
mov
add
sub
scas
push
loopne
pop
pop
addr16
cld
cld
lahf
push
xor
nop
dec
and
or
jcxz
mov
std
sbb
(bad)
jne
leave
xchg
xor
pusha
inc
outs
pop
mov
mov
(bad)
pushf
hlt
rcl
fucomi
adc
sahf
stos
cs
or
sub
repz
jns
int
jmp
sahf
scas
inc
adc
push
xchg
push
mov
ds
pop
jle
ret
js
nop
xor
pop
xchg
scas
fidivr
outs
pop
mov
mov
mov
repnz
inc
mov
call
je
(bad)
dec
out
mov
clc
xchg
cmc
fdiv
sub
mov
mov
js
in
stc
lods
loope
jmp
fld
fisubr
fldenv
lods
or
mov
pushf
or
dec
in
sbb
and
push
lods
test
inc
push
push
aas
outs
cmps
cs
out
mov
dec
cmp
inc
jg
cmps
out
push
nop
js
shr
ss
push
dec
loop
test
push
cs
lea
jns
push
push
jmp
repnz
xchg
pop
push
and
jge
mov
sbb
std
aad
or
adc
jno
sbb
ins
call
jg
push
jge
push
push
cmps
push
in
cmp
inc
mov
jns
adc
fidivr
sbb
pop
sub
xchg
inc
mov
test
dec
dec
out
inc
mov
je
enter
loope
mov
and
out
fiadd
xchg
push
pusha
inc
and
mov
mov
push
fadd
xor
mov
add
push
clc
dec
stos
or
mov
(bad)
fidiv
hlt
jnp
(bad)
mov
inc
xor
loope
mov
lods
sub
aas
lahf
scas
inc
dec
mov
fs
cmp
repz
in
mov
push
xor
mov
add
(bad)
fdiv
cld
adc
mov
jmp
dec
js
adc
fnstsw
add
or
sub
xor
add
dec
and
pop
movs
call
scas
push
out
cs
pushf
vfrczps
ds
jno
sbb
lods
popa
or
cmp
mov
(bad)
leave
cmp
out
addr16
daa
add
clc
jns
test
shr
mov
sbb
jge
mov
sub
dec
dec
and
dec
push
stc
or
ja
mov
ret
lahf
pop
imul
xlat
inc
adc
movs
xchg
cmc
xor
stos
mov
push
scas
cmps
imul
pop
stos
dec
enter
loope
shl
sahf
xchg
les
sti
push
fdivr
push
jecxz
out
jo
call
cdq
jns
mov
div
icebp
mov
scas
jecxz
add
scas
cmp
mov
fadd
ficom
mov
test
fs
in
std
sbb
lahf
addr16
test
sub
sub
cmp
adc
shl
jge
xchg
clc
outs
pop
and
fadd
and
pop
dec
fs
adc
add
test
sub
mov
mov
sbb
or
popa
das
(bad)
push
mov
or
add
(bad)
stos
cmp
and
jae
add
mov
fwait
inc
mov
or
dec
lock
ss
ror
test
mov
inc
nop
clc
mov
mov
push
clc
xor
xor
rcl
out
cmp
jne
mul
adc
(bad)
in
lahf
aaa
pop
daa
push
inc
cdq
ja
push
push
adc
push
push
push
pop
sbb
adc
push
or
fs
enter
add
push
and
test
lahf
cmp
push
stc
dec
shr
test
inc
int
jmp
(bad)
push
jl
sub
fs
pop
stos
test
sbb
jne
adc
jns
sar
int
jb
cmp
stos
pop
push
push
arpl
sbb
aaa
(bad)
cmc
jb
imul
push
fisub
dec
test
jbe
cld
pop
movs
cmps
je
dec
movs
(bad)
add
cdq
sbb
jns
mov
call
and
mov
pop
ds
add
xor
fwait
in
test
jge
popf
add
jmp
sub
cmps
mov
inc
cs
jmp
gs
mov
ret
in
(bad)
call
push
push
or
jbe
push
inc
mov
test
popa
xchg
mov
xor
sbb
jg
pop
add
mov
fsin
(bad)
ins
cmps
loope
xor
ins
int
loop
and
in
lea
dec
dec
rol
stos
xor
adc
push
sub
cwde
mov
mov
push
(bad)
xor
jg
jmp
into
data16
dec
lods
cmp
sar
jbe
popa
adc
stos
xor
mulps
retf
dec
add
stc
add
xchg
into
push
or
ss
mov
(bad)
cwde
iret
dec
dec
mov
jg
pop
ins
jecxz
jmp
aad
inc
in
retf
ja
xor
enter
mov
or
xchg
xor
jg
outs
hlt
sub
lock
mov
pop
inc
mov
pop
jne
iret
push
or
mov
fwait
jmp
in
icebp
jp
push
rcr
xchg
or
sahf
pop
rcr
inc
ds
push
setae
xor
push
add
pop
es
aad
mov
inc
jb
fs
jle
cmp
and
jno
xor
mov
je
scas
add
lea
xor
stc
cmps
iret
add
sub
inc
push
fwait
adc
sbb
or
aas
call
sub
push
push
jno
xor
push
movs
mov
mov
inc
outs
sub
xor
loope
add
cmc
lds
shl
pop
(bad)
jge
mov
and
repnz
out
das
fwait
adc
fsubr
xchg
lock
arpl
cmps
scas
lods
dec
inc
out
mov
sbb
fcomp
pop
cmps
xlat
sub
pop
xchg
in
hlt
jmp
imul
push
push
mov
dec
mov
fdivr
lods
jns
dec
daa
int
sub
rol
fcmovu
add
or
sbb
call
pop
nop
inc
inc
inc
xor
sbb
sbb
repz
inc
test
cwde
(bad)
push
pop
js
push
fmul
push
sbb
cld
jp
mov
outs
cmp
add
cmp
mov
jge
fidiv
test
sub
jl
and
dec
cmp
mov
mov
pop
sub
push
dec
push
call
xlat
aaa
sub
mov
xchg
cwde
mov
jg
and
and
ds
cmps
and
cmp
jl
or
xor
clc
(bad)
push
mov
iret
cmc
in
xor
adc
add
add
das
shr
jmp
sti
sbb
stc
scas
es
test
cmp
clc
fadd
aas
lds
mov
cmp
push
or
sahf
out
les
push
aam
xchg
dec
xchg
lods
jp
les
xor
pop
jecxz
sbb
mov
push
enter
cmps
ins
in
ss
(bad)
shr
leave
gs
icebp
outs
mov
and
sub
xchg
fcmovu
mov
fadd
cld
and
popw
lds
retf
sti
jmp
scas
scas
pop
adc
(bad)
daa
mov
pop
test
out
dec
rcr
jmp
mov
or
cli
push
push
in
push
sti
(bad)
sub
xor
cmp
adc
outs
pop
push
sub
push
outs
sub
lock
bound
out
out
or
mov
sbb
add
jge
xchg
cmp
in
cmps
mov
loop
arpl
out
ds
(bad)
or
mov
and
lock
mov
jnp
mov
aad
pop
in
pop
call
jmp
adc
pop
xchg
cmp
xchg
dec
int
push
cli
inc
mov
(bad)
es
sbb
jne
or
enter
jmp
mov
pop
sar
xlat
cmp
imul
mov
sbb
mov
fld
push
lea
pop
pop
jnp
jmp
adc
fild
mov
call
shl
into
loope
push
test
sbb
rcr
mov
push
out
js
add
fsub
jno
add
dec
mov
aad
jae
iret
pop
mov
lods
lock
xchg
push
xchg
pop
shl
mov
sbb
mov
ror
lds
pop
imul
adc
cmps
es
push
or
out
enter
or
cwde
ins
push
jecxz
mov
or
test
inc
clc
xlat
add
xchg
xchg
in
ret
iret
mov
idiv
fs
xchg
shr
sbb
outs
fnstcw
ds
xor
retf
pusha
movs
sbb
test
push
cmps
push
mov
add
or
or
push
popa
retf
gs
sbb
inc
xor
inc
js
cmp
inc
imul
xlat
sbb
xor
or
inc
jns
pop
dec
(bad)
int3
adc
add
out
test
(bad)
mov
(bad)
xchg
addr16
adc
test
mov
cmp
dec
sub
sbb
test
das
call
cmp
dec
add
cld
into
ins
cmps
dec
or
ret
aaa
mov
fwait
mov
xor
out
enter
retf
push
icebp
pop
add
fldcw
sbb
pop
pop
or
lods
nop
mov
pop
sub
cmp
inc
jp
jno
fild
repz
ds
leave
lock
sbb
inc
rol
cmp
cmp
fbstp
push
outs
jbe
pop
push
movs
sahf
dec
test
imul
popa
push
hlt
push
adc
cwde
sub
xchg
int3
xchg
dec
fld
pop
ins
fld
sahf
cmp
and
ret
push
mov
in
push
call
xchg
xor
test
js
pop
outs
cmp
xchg
inc
sub
enter
addr16
xor
gs
push
mov
add
mov
jno
adc
mov
out
mov
cmp
(bad)
arpl
push
push
shl
(bad)
loopne
sti
mov
and
loope
es
(bad)
jmp
and
fst
arpl
je
dec
cdq
adc
mov
dec
ret
int
dec
jns
xchg
sbb
jns
in
pop
sub
fadd
lods
pop
aam
pusha
jbe
cwde
cmp
mov
repz
push
xor
sbb
repz
fild
test
sub
cmc
ret
xchg
mov
rcl
xchg
out
aas
xor
jbe
xor
loopne
popa
adc
mov
fld
cmps
(bad)
jecxz
icebp
fwait
icebp
aas
ror
mov
iret
xchg
sub
stos
adc
dec
jg
xchg
ds
add
fstp
outs
ffreep
adc
sub
std
pop
mov
shr
pop
xor
sub
or
and
addr16
test
and
(bad)
xchg
pop
sbb
push
jo
addr16
sub
push
ret
fcmovnbe
loop
nop
fcmovnu
int
(bad)
(bad)
mov
test
pop
fwait
stc
les
xchg
pop
int
push
sub
dec
push
mov
je
and
pop
jo
fstp
cmps
and
pop
push
push
cs
or
sub
sub
and
jno
inc
cmps
sar
jge
ins
sub
pop
int3
and
sti
movs
div
xor
ficomp
aaa
sub
sahf
mov
push
test
jge
or
pop
(bad)
xchg
dec
jg
or
jbe
fdivr
mov
scas
ins
sub
popa
inc
jnp
mov
dec
adc
popa
lods
xchg
cli
dec
nop
xor
inc
stos
add
pop
or
push
jo
inc
jmp
jb
dec
fwait
mov
jo
cwde
stos
mov
add
mov
out
cdq
and
push
rcl
add
dec
push
push
loop
push
ss
lods
xor
je
jp
popa
push
es
loop
retf
add
and
pop
sub
lds
int3
xchg
lods
sub
pop
cmp
mov
xchg
loope
pop
xchg
retf
jp
or
fst
pop
std
fcomp
mov
sets
std
or
add
xor
clc
and
xchg
call
inc
push
and
adc
shl
cmps
or
sub
pop
push
cmp
xlat
add
push
(bad)
sub
sbb
sub
scas
dec
fmul
imul
pop
pop
cld
push
cmp
cmp
pushf
out
cmp
pop
(bad)
push
ret
dec
fcmovnbe
ret
loope
mov
cmps
in
imul
jp
pop
fnstsw
add
mov
mov
enter
sub
out
jb
sub
push
leave
popa
bound
xor
out
icebp
stos
ds
mov
push
test
aad
stos
cmc
and
jne
mov
add
nop
test
cmp
push
es
pop
mov
daa
outs
fild
sub
mov
xchg
pop
mov
add
mov
or
cmps
jno
cmp
mov
ss
out
mov
and
sub
lahf
fnstenv
pop
aad
int3
(bad)
outs
neg
mov
cwde
outs
das
sar
push
add
movs
cdq
test
inc
loop
xchg
add
or
dec
fnsave
retf
out
call
gs
and
jmp
add
fimul
xchg
lea
inc
sbb
pusha
les
jge
push
pusha
jg
adc
fwait
in
cmp
rcl
cld
mov
mov
xchg
add
repz
sbb
int
adc
scas
fisttp
jmp
lds
sub
rcr
mov
adc
sub
hlt
dec
sbb
lea
pop
loope
imul
dec
mov
xor
cdq
pop
or
(bad)
jno
jp
lock
and
pop
cmps
movs
mov
push
jae
and
cmp
mov
inc
pusha
sub
mov
call
enter
dec
movs
icebp
imul
sub
jl
or
outs
xchg
adc
dec
inc
add
js
daa
pop
xor
int
es
jle
xlat
retf
pushf
loopne
out
jmp
das
or
ds
fs
mov
mov
pop
mov
jp
int
push
into
shr
sahf
adc
mov
and
inc
pop
setg
cwde
js
sbb
pop
(bad)
pop
or
jae
or
mul
or
lods
xchg
loop
xor
in
mov
xor
or
lods
scas
aas
and
add
xchg
loop
retf
mov
inc
int
xchg
(bad)
out
(bad)
push
pop
addr16
in
jne
cmp
mov
int3
in
clc
cmp
(bad)
call
inc
mov
mov
jp
gs
fadd
aad
xchg
or
xchg
test
in
in
xor
jbe
into
push
adc
mov
(bad)
push
add
rcl
mov
stc
outs
xor
retf
mov
pop
clc
leave
pop
inc
(bad)
sbb
ins
cmp
out
push
ins
push
call
and
or
sbb
dec
clc
push
jp
pushf
sbb
in
test
test
fisttp
inc
int3
xlat
lods
and
arpl
jbe
popf
push
push
popf
xchg
mov
fs
imul
mov
cmps
hlt
sbb
mov
(bad)
or
push
cwde
(bad)
rcl
outs
ret
(bad)
mov
out
xor
xlat
lods
push
fild
add
shl
jmp
cmps
push
mov
and
pop
dec
mov
adc
mov
gs
nop
std
shr
jecxz
pop
xor
pop
inc
(bad)
push
and
adc
cs
cld
push
xchg
call
and
pop
jns
out
push
push
sub
push
dec
mov
bound
clc
pop
lahf
add
xor
mov
aaa
inc
mov
mov
xor
sub
and
ret
je
ins
xchg
les
push
mov
or
pop
push
loop
jmp
gs
and
jl
sub
pop
adc
lahf
mov
pusha
or
inc
mul
or
dec
inc
into
sbb
icebp
add
push
xchg
sub
cmc
lods
mov
iret
scas
in
outs
sub
dec
lds
bound
mov
mov
push
bound
ret
sub
mov
xor
(bad)
push
es
repnz
out
jg
sbb
inc
cs
mov
add
(bad)
push
aas
and
es
loop
sub
mov
cmps
sub
daa
repnz
push
push
mov
hlt
lahf
pop
push
popa
lods
jle
push
in
push
inc
sub
into
jnp
xchg
dec
dec
clc
pop
jmp
dec
jnp
and
add
in
jo
and
jne
sahf
shl
lock
pop
data16
xor
ret
or
lahf
les
mov
lock
inc
add
hlt
add
out
mov
dec
adc
mov
and
rcl
aaa
cld
mov
outs
push
stos
push
or
outs
into
cmp
xchg
out
sbb
nop
sbb
mov
mov
pop
fcomip
sub
shl
push
jae
frstor
push
pop
and
push
mov
cwde
fistp
test
mov
pop
mov
push
jp
jmp
cdq
imul
outs
int
jp
out
or
shr
xor
scas
jns
mov
cmp
dec
gs
pop
sti
dec
test
sbb
push
mov
bound
aad
dec
arpl
daa
scas
ret
xchg
dec
das
mov
pop
loope
ins
mov
push
lock
push
xor
cmp
(bad)
pop
inc
push
loop
je
add
scas
shl
pop
xchg
cwde
add
mov
(bad)
cmc
int
retf
les
retf
mov
fild
jnp
cmps
jle
iret
lods
sbb
sbb
fstp
adc
xchg
or
arpl
cdq
rdpmc
fdivr
test
xlat
xor
mov
scas
add
and
int
lahf
ja
mov
adc
cli
rcl
mov
and
or
xor
mov
lock
std
adc
sub
lahf
imul
ins
sbb
mov
lds
push
jl
int3
xor
xor
rcr
or
sar
aad
in
arpl
sbb
icebp
retf
into
pushf
push
imul
jmp
ins
add
pusha
cld
sbb
fwait
cdq
hlt
add
mov
xchg
(bad)
loopne
inc
into
scas
leave
out
test
cmp
std
dec
lock
scas
sub
and
aad
jp
xor
shr
(bad)
cmp
leave
add
dec
cmp
or
xchg
retf
pop
stos
add
sub
jl
dec
lods
lods
fild
add
or
mov
scas
mov
jg
inc
retf
inc
das
dec
ins
jbe
jp
or
sbb
xchg
inc
addr16
or
inc
adc
jmp
jmp
dec
push
jns
xor
loope
lock
mov
pop
fwait
scas
in
mov
lods
stos
dec
pushf
pop
fist
jge
in
movs
jge
jb
(bad)
sbb
adc
dec
imul
popf
pop
sbb
test
mov
mov
in
in
dec
out
repnz
xor
cdq
cwde
out
xor
pushf
(bad)
(bad)
in
loopne
test
ficomp
and
iret
xchg
mul
fcomp
addr16
dec
mov
sub
xor
xchg
cmp
ficomp
push
shl
xchg
pop
sub
and
mov
cmp
mov
mov
scas
jb
pop
push
iret
dec
fwait
not
arpl
sbb
jecxz
fisttp
adc
daa
stos
xchg
jle
pop
scas
cwde
sbb
jmp
xchg
jge
inc
ds
inc
adc
(bad)
cwde
push
call
xor
mov
cld
mov
or
and
cld
imul
in
adc
jl
pop
popa
shl
xor
mov
imul
mov
loopne
push
pop
add
mov
scas
pop
push
jecxz
cmp
jecxz
test
out
jl
mov
jg
mov
push
mov
enter
out
push
loop
xchg
jge
xor
je
pop
fstp
fistp
cmp
pop
push
in
scas
arpl
mov
je
or
mov
movs
call
push
ins
pop
mov
sub
jmp
mov
daa
mov
int
push
adc
xchg
das
fmul
add
or
test
(bad)
sbb
stos
push
retf
stc
into
test
movs
fdiv
mov
je
sub
sub
aas
popa
cli
scas
adc
mov
int3
pop
dec
aad
mov
adc
cmp
(bad)
popa
pop
punpckhwd
inc
(bad)
xor
xchg
imul
mov
mov
cwde
mov
push
sub
jnp
mov
dec
call
and
sub
adc
adc
and
xchg
clc
les
fcomp
lods
lods
pop
xchg
and
add
or
mov
push
(bad)
sbb
adc
outs
add
pop
retf
into
neg
inc
mov
mov
enter
test
pop
call
mov
cld
lahf
sub
dec
arpl
std
push
fs
in
iret
pop
xchg
inc
(bad)
cmp
repz
xchg
pop
clc
aaa
cmp
in
popa
mov
int
and
lock
push
cmp
ret
mov
retf
cs
shl
test
or
mov
inc
lods
mov
xchg
sbb
leave
mov
adc
inc
inc
(bad)
cwde
(bad)
js
and
pop
pop
rol
sbb
std
fs
pop
sar
inc
dec
sbb
dec
push
dec
jo
mov
mov
push
pop
enter
jp
cwde
xor
push
test
and
sbb
push
push
xchg
push
ss
sbb
jb
stos
(bad)
test
aas
jg
stc
cmc
xor
ror
dec
maxps
stc
sar
cmc
ret
out
and
xchg
daa
mov
outs
cli
xchg
jne
iret
jno
in
or
sub
ja
xor
pop
xor
pop
cmp
sub
stos
test
ins
aas
sbb
fucomp
rcr
mov
test
icebp
ror
in
imul
out
push
ins
test
push
ins
call
scas
xlat
dec
inc
jg
mov
jle
sbb
add
pop
inc
iret
jae
or
repz
sar
adc
sub
(bad)
stc
aas
sti
ud0
pop
iret
iret
mov
jmp
mov
data16
or
cmp
popa
neg
ds
push
mov
clc
lahf
mov
jbe
arpl
sbb
pushf
xchg
xor
fidiv
pop
loopne
jle
push
repnz
ss
nop
push
cmps
dec
test
sub
repz
jl
sub
in
repz
push
or
clc
sahf
sbb
out
adc
nop
bound
jg
sub
lods
mov
push
and
xor
add
repnz
sbb
dec
mov
shl
jle
and
cmp
mov
daa
sbb
jmp
das
jle
push
or
mov
mov
ret
addr16
daa
pop
(bad)
lock
mov
push
out
adc
cmp
aad
push
xchg
retf
js
jbe
pop
xchg
sub
jb
fwait
pop
(bad)
sbb
pusha
test
cmps
inc
mov
(bad)
dec
loop
xor
add
fistp
dec
sub
mov
(bad)
std
dec
in
rcr
fwait
or
xor
and
push
inc
cmps
out
xor
sub
jge
add
cwde
add
ss
sbb
cmp
ins
(bad)
loopne
adc
and
xchg
popf
int3
inc
aaa
inc
mov
and
scas
test
mul
ins
mov
mov
cmp
push
(bad)
sub
dec
sub
les
rcl
nop
fist
pop
popa
rcl
outs
mov
call
in
or
adc
repnz
(bad)
push
ds
and
std
popa
repnz
xor
add
dec
shr
push
mov
out
xor
lss
xchg
outs
cmps
mov
jnp
hlt
icebp
fst
shl
enter
clc
ror
mov
rcl
mov
lea
fstp
out
and
push
int
cld
mov
mov
in
jae
cmp
jmp
add
outs
(bad)
fist
inc
mov
stos
mov
sbb
push
inc
jbe
mov
(bad)
push
idiv
ret
lods
daa
scas
jp
retf
inc
jne
loope
dec
retf
jp
movs
sahf
pop
xor
int3
data16
lock
iret
push
jl
push
sbb
jge
push
mov
(bad)
mov
fld
in
xor
add
sbb
sahf
repz
mov
out
in
hlt
cmp
xchg
cmps
or
or
adc
xlat
sub
fwait
mov
add
jp
out
push
clc
out
sti
mov
mov
stc
lahf
jo
leave
jg
xor
mov
mov
cs
in
jmp
xor
bound
pop
push
xor
sbb
ret
pop
in
sub
and
cwde
movs
data16
sub
pop
(bad)
and
xor
jns
sub
xor
mov
(bad)
out
in
adc
test
(bad)
sbb
fwait
push
cwde
pop
and
rcr
mov
push
or
adc
sbb
loopne
(bad)
div
or
jle
lock
ins
push
lahf
inc
adc
addr16
jp
xchg
lahf
xchg
add
jo
and
nop
jmp
loopne
arpl
mov
sub
fnsave
inc
loop
xor
or
imul
outs
mov
mov
fild
jne
rol
arpl
and
es
mov
mov
mov
mov
pushf
xor
(bad)
nop
je
in
into
(bad)
(bad)
mov
js
mov
hlt
dec
iret
pop
pop
loopne
adc
xchg
adc
sbb
xor
out
(bad)
jb
cs
add
fst
(bad)
mov
push
cli
fwait
enter
lea
mov
adc
add
push
imul
push
es
ret
cli
ror
test
xor
out
call
(bad)
repnz
jp
enter
mov
ss
mov
in
inc
out
pop
leave
push
cdq
push
and
(bad)
mov
sub
cli
nop
xlat
jo
xlat
fcmovbe
test
mov
sub
push
add
or
in
stos
cld
inc
out
mov
pop
xchg
in
in
neg
iret
xor
mov
jb
push
pop
outs
jmp
in
fidiv
iret
push
mov
mov
pusha
inc
loope
and
jno
ror
mov
inc
test
and
iret
dec
js
cmps
daa
xlat
mov
jp
xchg
sub
sub
retf
outs
test
jno
inc
fwait
cwde
test
dec
inc
ret
je
sbb
xchg
or
cld
movs
ror
inc
ins
and
adc
out
jmp
test
shr
jae
fs
push
mov
gs
(bad)
push
loopne
arpl
std
add
js
adc
mov
inc
iret
out
pusha
lea
in
test
and
lea
das
pop
ins
icebp
xchg
ins
push
in
sbb
jnp
pop
jo
mov
pop
loopne
lods
xor
pop
cmps
mov
into
repnz
add
int3
js
lock
fmul
rcl
data16
dec
xchg
xlat
xor
stc
sub
add
and
test
mov
enter
mov
out
inc
int3
fdivr
xlat
jmp
cmp
ret
popf
dec
xchg
lds
push
shr
cmp
stos
cli
mov
ds
jb
loope
rol
mov
jb
gs
js
add
sbb
mov
mov
jmp
mov
cmc
ret
out
push
xchg
cmp
in
cmc
neg
sti
inc
(bad)
xor
jo
outs
jl
cmp
mov
mov
push
sub
lock
cmps
and
arpl
jbe
jp
add
dec
mov
bound
cmp
push
xchg
xchg
and
mov
push
cmps
add
dec
jge
xor
sahf
shl
cmc
push
add
outs
aam
mov
add
push
dec
pop
je
pop
aas
and
outs
inc
dec
in
mov
popa
ret
add
mov
enter
push
mov
ret
cmps
mov
inc
mov
psllw
mov
and
outs
pop
inc
sub
mov
sub
(bad)
cmp
into
jne
ja
aam
mov
stos
xchg
xor
and
out
adc
add
mov
push
das
ins
xor
das
mov
lods
and
inc
dec
xor
out
cmp
std
(bad)
inc
mov
push
pop
pop
mov
pop
xchg
fsubr
dec
es
sub
jae
mov
sub
shr
aam
xor
outs
pop
push
pop
dec
jne
or
mov
mov
inc
cmp
out
stc
leave
out
and
fsub
mov
push
jns
shl
not
icebp
cmp
(bad)
push
in
outs
test
or
icebp
xchg
ret
pop
sbb
push
push
scas
hlt
(bad)
std
xchg
add
cwde
pop
or
or
scas
mov
and
sub
adc
fild
jns
mov
mov
(bad)
call
mov
and
lock
dec
xor
out
lods
mov
out
imul
dec
in
fdivr
dec
pop
cmc
cld
jnp
iret
xchg
fdivr
push
add
sbb
jecxz
out
mov
or
push
test
add
pop
out
mov
jae
and
inc
xor
mov
mov
push
movs
je
repz
lahf
and
aam
mov
(bad)
inc
push
fs
outs
(bad)
jo
pushf
sub
int
(bad)
jecxz
dec
lock
mov
sbb
jmp
fisub
call
shl
stos
cmps
adc
push
push
mov
cwde
push
xor
xchg
in
fwait
cmc
jno
loop
int
fbstp
mov
adc
mov
mov
sub
je
pushf
jnp
je
into
pop
out
mov
ficom
adc
sub
xor
xor
mov
jp
popf
paddsb
lock
inc
mov
test
retf
xlat
mov
popf
and
add
bswap
jmp
scas
(bad)
cmp
inc
mov
test
in
es
inc
dec
add
sub
dec
mov
dec
add
call
dec
adc
inc
call
imul
adc
inc
push
pop
dec
pop
or
mul
in
pop
jns
shr
scas
hlt
mov
add
rcl
inc
or
xchg
cwde
in
push
cmc
lods
lods
jl
dec
add
loopne
out
mov
sbb
mov
xchg
cmp
div
ja
movs
inc
cmp
in
xor
mov
pop
mov
fstp
jno
cmp
push
mov
std
inc
xor
pop
cs
mov
xor
ror
(bad)
xor
push
sub
test
out
fist
or
jp
(bad)
pop
jp
outs
retf
clc
scas
xchg
mov
pop
or
into
mov
movs
adc
out
jns
addr16
ins
inc
pop
inc
cli
mov
mov
inc
fst
rcl
retf
into
imul
mov
jbe
push
mov
rcl
xchg
(bad)
outs
jns
out
and
lock
xchg
outs
(bad)
ds
and
fstp
(bad)
xchg
dec
data16
inc
dec
dec
out
push
mov
push
cwde
les
pop
adc
dec
rol
xchg
cld
or
push
fstp
dec
lahf
repnz
(bad)
into
in
sub
cmps
inc
add
repnz
or
jmp
and
test
sbb
xor
fnstcw
aam
dec
adc
nop
dec
aaa
jo
adc
xchg
cwde
xor
or
fmul
pop
fisttp
scas
lods
sbb
sub
xchg
jne
pop
inc
es
push
js
jbe
mov
(bad)
call
in
sub
or
imul
shr
rcr
(bad)
lock
xchg
xchg
xor
icebp
or
xor
out
push
jmp
cmp
inc
mov
and
or
fdiv
ret
jmp
dec
fidiv
in
ret
push
aaa
push
test
hlt
in
push
mov
cmp
repnz
add
adc
lahf
mov
add
cmc
nop
adc
and
mov
adc
aad
imul
sbb
push
stos
mov
dec
loope
dec
jno
aas
pop
lods
or
in
out
push
sbb
pop
in
mov
pop
pop
ins
es
das
outs
xor
std
(bad)
fcmovne
mul
pop
jecxz
sub
clc
lds
jae
(bad)
push
retf
mov
(bad)
xchg
mov
xchg
test
jnp
daa
pop
data16
cmc
inc
movs
rol
ja
or
stc
(bad)
sbb
mov
jmp
adc
rcr
push
pop
or
hlt
jg
add
and
dec
loopne
movs
pop
add
add
cwde
inc
mov
in
(bad)
ins
xchg
add
mov
fbstp
jnp
loope
ret
sti
ins
push
(bad)
jge
ror
nop
or
(bad)
push
pop
mov
test
cs
and
push
fs
push
call
adc
adc
adc
das
mov
fsub
rol
bound
je
adc
sti
rcr
sub
pop
mov
push
iret
inc
clc
xchg
ret
push
xchg
lea
sub
and
mov
std
and
test
mov
xchg
add
les
jg
cdq
jle
fistp
call
lods
fisttp
sbb
les
or
lea
xchg
mov
push
out
mov
push
daa
(bad)
xchg
loop
nop
jge
and
(bad)
out
inc
pusha
setbe
out
mov
mov
aas
push
xchg
(bad)
enter
push
add
shl
mov
xchg
popf
or
jae
imul
lea
cmc
call
pop
loope
xchg
lds
pop
aad
sub
sbb
call
push
psubusb
cmps
repnz
pop
bound
adc
adc
inc
dec
cmps
sbb
sbb
mov
je
add
mov
push
test
cmp
mov
sub
sahf
cmp
jmp
fstp
cmc
iret
arpl
in
test
dec
and
fcom
outs
arpl
lock
mov
sbb
xor
mov
jp
add
xchg
loop
loopne
jecxz
cmp
jge
es
push
repnz
stos
sub
(bad)
movs
mov
add
add
pop
xchg
cmp
shl
pop
shl
adc
cmp
mov
rol
(bad)
fisubr
cwde
arpl
inc
and
pusha
pop
out
and
loope
pop
push
out
adc
xchg
mov
icebp
outs
pop
xchg
test
in
jp
xor
and
xor
or
lods
(bad)
or
mov
push
inc
in
jecxz
lock
jp
outs
sbb
imul
cli
fistp
(bad)
cld
add
xchg
xchg
jmp
cmp
mov
xchg
pop
in
(bad)
fcmovbe
mov
adc
fist
jo
lock
mov
mov
nop
mov
jge
cmp
and
and
(bad)
fld
cmp
retf
cwde
sub
lods
pop
adc
add
retf
pop
sbb
int
cmp
inc
inc
pop
jp
push
aad
dec
xchg
xchg
rcr
out
inc
cmp
inc
cmc
xor
and
pop
loope
adc
xchg
scas
aam
mov
iret
add
cli
add
mov
and
mov
xchg
ja
dec
fcmovu
dec
mov
mov
outs
addr16
ins
mov
lods
sbb
mov
pop
out
jl
mov
fisub
mov
loop
adc
mov
pop
mov
aam
sbb
adc
inc
jb
iret
inc
mov
mov
test
mov
xchg
or
push
dec
enter
mov
ror
lea
xchg
(bad)
imul
loopne
sbb
aam
(bad)
cmp
jae
push
cwde
imul
cmp
in
hlt
cwde
fldcw
adc
pusha
retf
ret
mov
cmp
xor
sbb
jb
clc
inc
or
mov
jnp
push
call
popf
(bad)
adc
xor
ins
or
fsubrp
in
cmp
sbb
jmp
push
movs
repz
movs
adc
lods
add
ja
and
mov
aas
fsub
inc
int
dec
jecxz
xor
in
jmp
mov
jge
int
cmp
jecxz
cmp
imul
(bad)
or
in
push
add
push
push
test
sbb
add
pop
dec
es
xor
ins
sub
push
mov
xor
in
push
scas
mov
pushf
mov
outs
adc
mov
fisubr
(bad)
and
push
mov
sub
(bad)
jo
hlt
test
sbb
int3
dec
ret
clc
mov
popf
mov
lock
push
mov
test
or
hlt
or
ss
xchg
sahf
jp
loopne
ret
sbb
mov
and
xchg
ins
mov
adc
movlps
mov
ss
push
cli
mov
retf
dec
jo
sub
int3
es
test
shl
inc
and
jp
cli
fcmove
iret
mov
sbb
call
adc
stc
or
cmp
sub
xchg
loope
push
xchg
sbb
movs
(bad)
call
outs
cmps
jmp
inc
dec
dec
pop
xor
xchg
mul
ret
inc
push
dec
or
inc
inc
xor
and
mov
stos
das
and
jmp
jecxz
jle
hlt
pop
daa
je
mov
loop
in
repnz
ret
cmp
xor
pop
add
or
adc
xchg
sbb
xchg
dec
imul
jne
jl
loopne
stc
xor
not
jp
jno
mov
(bad)
jecxz
adc
sub
add
push
ja
push
(bad)
test
push
imul
ds
lahf
lods
inc
pop
xor
inc
push
inc
dec
mov
mov
retf
loope
or
pop
(bad)
cmovs
fucomip
aam
fist
push
and
popf
test
aad
cld
in
sbb
jmp
call
fbld
into
jnp
sub
sub
jl
add
in
xor
ins
ror
mov
mov
and
xchg
fwait
sbb
mov
hlt
jmp
mov
xor
fdivr
inc
push
repz
dec
loopne
jb
cmps
mov
sbb
icebp
ret
mov
(bad)
push
xor
pop
aad
cmps
in
jmp
and
retf
stos
rcr
mov
call
adc
aaa
hlt
and
je
(bad)
and
xchg
in
cmps
out
mov
cdq
imul
retf
ins
pop
or
pop
fs
(bad)
adc
dec
ins
adc
pop
fsub
movs
xchg
push
xchg
xor
loop
push
(bad)
imul
scas
xor
mov
cmp
jo
pop
mov
test
call
and
adc
popa
xchg
jmp
xchg
push
xchg
jb
xchg
retf
mov
xor
mov
xor
mov
pop
adc
pop
and
out
jb
jmp
xor
imul
fsub
retf
xchg
and
mov
xchg
xchg
sub
in
ins
inc
cmp
cmps
sub
mov
and
and
sahf
sub
push
jns
lea
clc
mov
and
enter
(bad)
icebp
adc
shl
pop
inc
inc
inc
mov
dec
movs
mov
inc
pop
mov
mov
xchg
jl
push
cwde
mov
jne
mov
fcom
fdivr
lods
xchg
and
add
jns
mov
or
fild
inc
daa
dec
repz
jl
cmp
sub
cmp
scas
sbb
xor
(bad)
retf
pusha
test
cmp
das
jns
mov
test
jg
push
sbb
xchg
test
push
mov
and
xor
pop
gs
sbb
bound
cmps
loope
xchg
xor
scas
dec
fimul
add
sub
push
les
mov
push
inc
cmp
out
mov
push
adc
cmp
call
xchg
outs
fdivr
mov
lods
jmp
and
push
scas
mov
or
push
in
outs
movs
movs
std
push
fcmovbe
xor
frstor
cwde
cmp
dec
mov
pop
mov
pusha
fs
xchg
jmp
das
inc
ins
dec
mov
sbb
fwait
int
es
shl
fdivr
push
adc
es
sbb
push
fdiv
das
or
mov
mov
adc
mov
test
popf
retf
ret
mov
stos
dec
and
push
imul
push
push
addr16
ja
mov
adc
xchg
pop
xor
nop
dec
stos
inc
dec
ret
imul
mov
mov
push
jge
add
test
inc
arpl
xchg
fcomp
adc
daa
pop
sahf
arpl
mov
ret
and
das
mov
or
scas
gs
jmp
outs
loopne
in
fist
lds
test
add
mov
jbe
pop
(bad)
shr
hlt
lods
sbb
jne
adc
cmp
dec
mov
push
ret
sahf
and
dec
(bad)
lods
or
ins
xor
sub
out
jno
inc
and
(bad)
repnz
pop
add
jp
out
mov
xor
mov
rol
sub
loop
jmp
mov
pop
(bad)
jne
and
movs
push
(bad)
lds
pushf
retf
jno
dec
int
(bad)
push
mov
mov
(bad)
sub
mov
mov
push
repnz
inc
mov
ret
out
idiv
retf
loopne
(bad)
(bad)
stos
pop
sbb
shl
mov
ret
test
cmp
lods
mov
mov
enter
cmps
scas
fcmove
(bad)
mov
pop
xchg
pop
sti
popf
in
call
jae
add
jg
xor
mov
and
sar
jns
es
jle
sub
jmp
loopne
cwde
pop
test
mov
repnz
mov
inc
jmp
sbb
test
and
retf
jmp
cwde
retf
inc
cs
xor
dec
scas
popf
sub
inc
(bad)
jl
popf
and
push
les
adc
xchg
cmp
dec
gs
jl
and
add
inc
jns
sub
mov
sahf
aas
clc
clc
imul
pop
push
test
push
stc
sbb
inc
nop
pop
cli
and
cs
(bad)
iret
lods
in
sub
test
lahf
in
cmps
adc
retf
push
pop
ret
dec
rol
sbb
test
push
jmp
ds
test
cmps
int
imul
add
lahf
in
into
and
sbb
enter
xchg
enter
retf
aam
cs
mov
bound
test
jno
fxch
ret
pop
mov
or
push
test
jb
int
dec
pop
mov
shl
cmp
and
in
les
add
cdq
jge
mov
push
jmp
cmps
dec
in
aad
adc
adc
aas
and
jae
inc
jmp
add
xor
mov
fmul
push
sbb
ds
fstp
shl
retf
in
(bad)
push
aad
dec
ror
std
add
in
ror
jo
inc
call
jb
jl
ret
pop
sub
fbld
call
cmp
jle
ret
sbb
pop
repnz
push
mov
repz
mov
cmps
test
pop
std
test
(bad)
mov
lods
out
mov
pop
inc
scas
xchg
mov
push
div
outs
sahf
lahf
std
mov
lods
(bad)
fwait
push
or
mov
(bad)
gs
mov
shr
sub
jnp
adc
mov
dec
test
dec
xor
mov
std
xchg
push
aad
jmp
sub
sub
imul
out
dec
dec
arpl
mov
push
cmp
mov
mov
adc
cs
push
pushf
and
hlt
fiadd
cmc
mov
int3
or
aad
loope
stos
in
mov
push
(bad)
pop
fcmovb
jne
push
aas
(bad)
add
xchg
xchg
mov
cmp
cmp
push
aaa
lds
inc
lods
mov
mov
jmp
add
imul
push
push
arpl
hlt
in
arpl
test
mov
mov
jl
gs
stos
xor
aam
and
sub
out
add
cmp
push
mov
arpl
cmc
lds
xchg
mov
jmp
test
cmp
jl
cmc
ds
push
cld
outs
xchg
add
rcr
sub
mov
pop
xor
cmps
jae
xor
mov
leave
add
mov
inc
mov
idiv
or
dec
(bad)
out
in
adc
mov
repz
push
dec
loope
jmp
psubq
sbb
pop
mov
xlat
mov
pop
sbb
adc
cmc
stos
int3
ficomp
dec
sbb
sahf
mov
jecxz
fcomp
jmp
lea
pop
mov
push
fwait
xor
int3
out
je
smsw
xor
inc
stc
pop
jp
outs
cmp
cmp
mov
sti
or
cwde
xchg
(bad)
push
and
cmp
push
add
xchg
and
into
xchg
pop
sbb
iret
jp
mov
fmul
jp
pusha
xchg
loop
test
dec
mov
retf
adc
xor
pop
jge
lea
ss
mov
(bad)
call
daa
xchg
test
or
sbb
rol
movs
or
add
mov
push
jp
push
cmp
test
aaa
sbb
lea
sti
mov
fild
xchg
aaa
push
mov
xor
pusha
cmp
jmp
cmps
movs
pop
xchg
mov
jns
inc
jno
push
cdq
mov
cld
mov
jne
lahf
call
cli
or
int3
retf
pop
pop
xchg
mov
and
sahf
ror
retf
ins
dec
repz
ins
dec
(bad)
inc
xor
(bad)
push
sub
std
jl
sub
and
into
inc
sub
or
inc
adc
push
dec
das
mov
cmp
cmp
mov
outs
mov
xchg
inc
out
sahf
and
dec
push
dec
pop
aam
pop
cmc
shr
inc
sti
mov
jo
xchg
pop
mov
mov
les
repz
jmp
adc
cmps
jge
mov
adc
lea
retf
or
repz
mov
(bad)
push
out
test
jo
xor
mov
add
cmp
jno
sub
je
aad
cdq
xor
jno
in
repnz
test
inc
and
jno
xor
scas
outs
inc
push
sbb
fmul
mov
nop
icebp
and
or
cmps
xchg
gs
push
out
and
(bad)
hlt
jge
js
sbb
push
bound
dec
push
fidivr
and
jg
adc
inc
and
mov
xchg
cmp
dec
arpl
fnstcw
jne
jge
in
jge
scas
call
adc
aad
outs
dec
or
xor
(bad)
fmul
imul
mov
scas
rcl
out
arpl
iret
dec
std
(bad)
nop
aad
rcl
xor
loope
sub
test
jmp
dec
fdivp
ins
(bad)
cmp
test
js
add
jae
jl
or
je
fist
sar
mov
jae
or
div
test
and
loope
aam
pop
stos
inc
pusha
xlat
or
add
cli
call
dec
pusha
push
jbe
jno
add
mov
inc
lds
xchg
fstp
mov
pop
in
out
add
out
inc
adc
sbb
sahf
addr16
cmp
jmp
daa
dec
jae
mov
mov
inc
repz
or
test
jge
push
push
lds
xlat
push
push
cmps
call
(bad)
ror
fsub
shl
dec
dec
jb
js
popa
in
sub
jle
cli
dec
cmps
into
repz
int3
mov
movs
xchg
pop
or
inc
sub
outs
inc
popf
mov
jnp
pop
or
in
push
jb
pop
adc
(bad)
sbb
stos
mov
sub
jbe
out
mov
xor
daa
popf
pop
mov
xlat
mov
(bad)
xor
scas
mov
pop
cmc
movs
dec
shl
jle
scas
jg
add
ins
sub
test
cmp
dec
add
add
mov
idiv
mov
lea
fbld
adc
mov
mov
fidiv
jns
jle
xor
push
jg
dec
ja
movs
and
cmp
add
(bad)
adc
mov
push
xchg
(bad)
and
gs
xor
adc
mov
sub
pop
test
pop
inc
stos
test
sar
test
jnp
dec
sub
inc
and
push
dec
call
and
dec
and
xor
dec
icebp
cmps
jg
xor
mov
test
repnz
push
jmp
rcl
dec
popf
retf
mov
xchg
test
cmps
movs
fld
in
enter
push
mov
es
xchg
fist
aas
daa
popa
out
dec
and
push
addr16
jb
fwait
jae
or
jge
call
or
inc
push
out
cmp
and
mov
ror
pusha
(bad)
inc
test
inc
xchg
push
popf
(bad)
sbb
mov
iret
cs
mov
test
mov
adc
and
outs
iret
stos
inc
lods
fwait
mov
xchg
xchg
call
sbb
mov
adc
out
cmp
pop
mov
out
cmp
mov
mov
xor
cdq
mov
adc
ret
xchg
imul
loopne
mov
sbb
movs
cmps
adc
push
int
aas
test
and
or
clc
out
mov
jmp
jl
pop
call
pusha
push
or
fldenv
or
repnz
pop
cmp
mov
xor
xlat
jns
push
test
pop
cmc
shr
add
push
rcr
jge
inc
cmp
out
popf
jbe
xor
xor
ror
lods
enter
dec
sbb
lea
adc
(bad)
arpl
aas
icebp
ins
sbb
and
pop
rdtsc
jmp
pop
rol
or
dec
push
lods
sbb
dec
adc
mov
and
rcl
xor
movs
rol
test
iret
xlat
and
adc
inc
lahf
cmp
stc
(bad)
mov
(bad)
xchg
shl
pop
je
mov
bound
xor
fwait
cmp
cmp
sbb
imul
inc
movs
das
or
push
push
inc
fmul
aaa
int3
ror
test
outs
aas
aad
sbb
movs
in
xchg
and
inc
mov
mov
mov
cmp
cmps
pop
aam
jmp
pop
pop
sbb
cmp
mov
pop
popa
mov
cwde
and
jns
add
cmp
pushf
jmp
ins
cmp
imul
out
fwait
shl
jno
push
push
jmp
push
aam
xchg
jnp
xchg
push
(bad)
movs
lods
and
mov
pop
mov
mov
fmul
stc
or
pop
ins
inc
xchg
rcr
fucomi
retf
(bad)
push
icebp
retf
sub
dec
mov
and
enter
or
adc
(bad)
in
dec
sub
cs
out
xchg
ja
shl
jp
and
fcmovnu
scas
add
xor
pop
pop
bound
popf
std
pop
fisub
aas
mov
les
lods
mov
adc
add
scas
out
xchg
(bad)
push
inc
out
jle
es
iret
fdiv
fild
adc
lock
mov
stos
(bad)
shl
dec
retf
lods
ror
pop
jno
mov
retf
add
(bad)
jle
cmp
xchg
mov
nop
mov
cmps
je
xor
fiadd
(bad)
mov
sub
pop
xlat
cs
dec
into
xchg
(bad)
mov
movs
push
gs
xchg
cmp
sub
jne
pusha
push
cmp
sub
ja
shr
inc
ds
or
mov
inc
push
jne
add
or
mov
neg
xchg
cmp
call
sbb
lea
retf
cmp
pushf
dec
daa
add
dec
fs
enterw
or
lods
ficom
mov
(bad)
push
push
stc
pusha
sbb
cld
pop
imul
jne
cmp
xchg
push
out
mov
ficomp
cmp
cmp
bnd
je
mov
push
aam
push
xchg
ins
mov
daa
lock
adc
out
test
lods
push
xchg
cmp
and
xchg
imul
in
movs
pop
mov
cmp
ret
leave
mov
lock
cli
jmp
mov
test
pop
mov
test
sub
mov
int
sbb
sti
(bad)
call
xchg
xchg
jo
scas
fld
sahf
out
sub
ds
jge
aaa
bound
repz
ins
mov
and
adc
mov
and
rol
jbe
imul
add
push
sbb
or
cmp
out
mov
sar
xor
adc
mov
ja
lea
push
out
jns
xor
jecxz
sub
cli
push
iret
out
out
dec
mul
push
and
dec
pop
loope
or
lock
mov
jle
mov
dec
xor
sub
add
shl
sub
mov
mov
or
jle
nop
jns
psubsb
jns
loope
jno
fcom
movs
adc
cmps
das
pop
dec
mul
dec
mov
in
jb
pop
imul
mov
jno
test
add
or
or
pop
clc
loop
sbb
lea
std
inc
or
cmp
or
inc
lds
fwait
mov
adc
sub
or
jbe
pop
(bad)
repnz
pop
jg
add
xchg
pop
fsubr
retf
push
xor
ret
push
mov
adc
sub
and
ins
shl
cld
stos
std
fdivr
or
mov
dec
mov
fisub
test
fs
movntps
sub
cld
mov
jmp
mov
xor
or
add
xchg
mov
fnstenv
aad
inc
jp
jns
aam
xchg
or
sub
xor
fmul
and
popa
add
push
fst
pop
dec
cmp
pop
lods
mov
or
mov
fwait
mov
in
stos
retf
mov
sub
inc
sbb
mov
and
lods
xor
dec
xlat
and
mov
cmp
mov
fldenv
mov
sbb
pop
stos
jno
adc
(bad)
dec
aaa
jae
lods
and
cmp
pop
push
or
or
jae
pop
pop
inc
lahf
jno
sub
add
lea
push
aad
pop
add
or
xchg
xchg
loope
push
xchg
enterw
cld
test
imul
into
push
mov
pop
push
xor
imul
out
push
push
jnp
mov
push
(bad)
(bad)
and
mov
xchg
cmp
outs
popa
inc
mov
ror
inc
ins
push
xchg
push
lds
fadd
jp
and
sar
mov
pop
pop
int3
sub
add
out
add
sahf
popa
enter
jae
inc
inc
add
pushf
(bad)
adc
mov
cs
adc
ficomp
xor
js
fwait
inc
lods
(bad)
cmc
popf
push
jecxz
shl
into
add
rcr
inc
lods
outs
cdq
push
adc
xor
in
pop
inc
push
xchg
or
gs
inc
xor
pop
xchg
test
pop
add
adc
inc
xchg
movs
lods
adc
test
out
sub
adc
jb
iret
add
add
int
das
xchg
jnp
mov
movs
mov
sbb
adc
xor
dec
je
lods
jmp
call
jmp
inc
pop
fisub
out
jb
or
nop
push
push
mov
push
pop
mov
outs
daa
push
inc
cmps
sbb
and
pop
inc
sbb
mul
push
(bad)
push
cmps
add
call
push
inc
jns
jae
loope
jnp
adc
loope
mov
xchg
mov
pop
or
pop
les
movs
push
jle
push
push
push
icebp
cmp
add
ds
adc
ret
call
js
dec
retf
push
rol
scas
lds
jnp
shl
and
push
movs
test
movs
mov
fcomp
retf
js
ror
ror
in
sbb
call
mov
stc
jl
stos
jg
not
in
mov
sub
popa
fnstcw
enter
sub
setb
cmp
sbb
mov
and
retf
jp
push
push
gs
and
add
adc
mov
inc
inc
imul
shl
xor
pop
mov
mov
in
add
mov
retf
or
push
loop
daa
add
add
or
out
retf
ror
xchg
sub
jns
xchg
pop
push
ja
jo
int3
in
jg
xchg
(bad)
xor
mov
xchg
retf
jp
pop
pop
push
into
cmp
jmp
popa
mov
pop
sar
out
es
fmulp
out
jg
push
jge
sbb
ja
sub
in
jae
repz
xchg
(bad)
ja
mov
int
sub
movs
xor
xchg
repz
dec
out
fld
repnz
bt
mov
clc
test
enter
mov
mov
pop
adc
cmovbe
daa
fbstp
push
xchg
jp
pop
cmps
sbb
xlat
in
cs
movs
or
mov
adc
cmp
sbb
fwait
jno
jb
pop
pop
add
xchg
xchg
sbb
out
cdq
mov
shl
adc
js
jecxz
inc
repnz
iret
mov
sub
js
data16
xchg
test
hlt
lea
jmp
jl
clc
fcmovb
inc
mov
fwait
jle
repz
scas
sub
sub
cwde
push
cmp
adc
out
xor
mov
nop
mov
repnz
iret
icebp
mov
inc
stc
add
cmp
int3
sub
dec
test
mov
jne
mov
test
xor
mul
addr16
outs
push
lea
popf
movs
jp
add
mov
icebp
inc
outs
push
xchg
call
imul
inc
js
xchg
mov
into
cli
out
inc
pushf
xchg
aaa
(bad)
int3
int
cmp
dec
push
aam
loopne
outs
jo
repz
fs
sbb
pop
pushf
(bad)
mov
in
push
xchg
(bad)
loope
pop
xor
mov
stos
clc
jecxz
repnz
gs
lahf
sahf
scas
xor
mov
dec
push
jno
mov
lods
repz
(bad)
es
dec
sub
mov
pop
xchg
repz
lods
pusha
mov
xor
or
test
out
(bad)
xchg
ja
lods
das
xor
fiadd
push
fmulp
(bad)
lock
xchg
hlt
pop
xchg
mov
scas
js
std
xchg
xor
mov
scas
jmp
(bad)
adc
pop
jle
or
std
das
jae
dec
pop
mov
mov
sub
lahf
fcmovu
jne
pop
sbb
not
(bad)
stos
shl
or
fs
inc
stc
(bad)
ds
mov
icebp
aad
shl
scas
pop
ret
dec
jg
pop
test
pop
cmp
xchg
rol
pop
mov
or
je
movs
imul
imul
(bad)
fsub
dec
and
imul
push
es
xor
sbb
push
aas
(bad)
cmp
xor
fs
imul
adc
pop
std
test
dec
or
scas
mov
sbb
xchg
ins
xchg
clc
sbb
clc
imul
mov
mov
enter
hlt
div
inc
and
test
enter
cmp
sub
xor
leave
xchg
sbb
ret
xchg
popf
ins
pop
(bad)
pop
in
fstp
xor
mov
(bad)
ficom
mov
pop
jecxz
pop
push
scas
sub
or
fsubr
aas
in
out
push
sbb
xchg
test
mov
jnp
mov
jle
test
add
pushf
xor
enter
jle
sbb
push
in
test
(bad)
out
mov
mov
outs
pop
lock
(bad)
xchg
out
sbb
inc
jbe
mov
fwait
sbb
mov
jmp
cs
fs
loope
jno
mov
xchg
mov
dec
push
sbb
mov
pop
mov
cmp
repnz
fimul
pop
out
shr
popf
shr
fs
(bad)
sub
dec
and
(bad)
pop
shl
inc
fbld
scas
xor
xchg
loopne
test
int
jle
fsub
loopne
ss
(bad)
adc
cmp
sti
mov
push
jno
and
scas
push
xchg
mov
gs
xor
mov
popf
or
test
sub
xchg
cmp
push
push
ja
arpl
xchg
pop
fcomip
fimul
cli
jne
(bad)
dec
or
jmp
daa
jne
sar
mov
fstp
xchg
mov
xchg
sbb
ror
inc
xchg
mov
stos
mov
scas
push
(bad)
dec
sub
dec
ss
mov
add
fnstcw
add
test
inc
dec
rcr
or
ss
pop
shr
and
mov
cmps
or
dec
or
xor
push
repz
sti
push
fs
aam
add
push
fdivrp
mov
cmp
lods
icebp
xor
mov
mov
out
arpl
jbe
je
mov
cmp
jp
(bad)
mov
test
jae
sub
sbb
neg
push
xchg
repnz
jae
pop
and
mov
cmp
lods
jnp
adc
or
cmps
xchg
dec
jo
aam
jmp
test
ss
leave
ins
hlt
cmc
fidiv
mov
mov
(bad)
repz
bswap
xchg
inc
push
cmp
stc
test
mov
add
pop
pop
jae
sub
mov
aaa
lea
mov
push
test
outs
jo
pop
das
mov
dec
mov
outs
popa
retf
adc
test
xchg
lahf
xlat
push
fmul
cli
fcmove
repz
push
mov
cmp
xor
movs
ins
sub
out
(bad)
clc
dec
push
push
sbb
out
daa
inc
jbe
scas
out
in
lea
and
test
xchg
movs
and
lods
mov
ror
mov
pop
mov
pusha
dec
daa
test
inc
movs
or
add
inc
out
(bad)
jp
addr16
sti
ins
sbb
push
int3
test
add
test
dec
push
inc
push
arpl
fld
sub
jge
xor
dec
mov
pop
shr
sub
xchg
imul
or
mov
adc
mov
gs
imul
pop
fs
cmc
push
aaa
dec
mov
aam
ins
test
jge
push
jecxz
outs
in
test
out
dec
and
pop
jmp
stos
jns
pop
into
stc
mov
pop
dec
xor
xchg
retf
int3
loope
movhps
sti
arpl
push
mov
cmps
inc
and
out
xlat
in
xchg
inc
and
add
clc
shl
or
and
add
sahf
std
in
(bad)
(bad)
push
movs
and
xchg
clc
fst
sub
mov
pop
mov
shl
sub
add
sub
xchg
aas
xor
loopne
xor
mov
or
sub
lahf
jb
mov
sbb
(bad)
fld
inc
je
int
dec
xchg
and
leave
js
xlat
outs
(bad)
mov
and
xor
pop
jge
jge
or
push
test
sub
jle
dec
xchg
fwait
loope
xor
cmp
js
repz
je
sbb
sbb
jmp
xor
aaa
sti
sub
out
test
je
ret
and
ins
jae
sub
xor
adc
test
fmul
fchs
sbb
and
push
inc
dec
bnd
std
xor
std
sbb
call
(bad)
shr
cli
shr
loope
test
aam
ficom
mov
data16
leave
test
sbb
js
ror
ins
test
pop
sub
cmp
lods
jnp
mov
pop
mov
mov
add
daa
js
pop
xor
dec
jne
sti
jg
and
arpl
jb
push
cmp
test
aas
call
into
push
cmp
loope
sbb
jno
jp
push
sbb
icebp
ins
dec
xor
lahf
pop
jle
xchg
push
xchg
(bad)
cmps
aas
int
mov
inc
push
pop
ja
mov
xor
loopne
mov
or
das
push
jg
addr16
cmp
je
jmp
mov
scas
fcomp
scas
fwait
pop
add
dec
mul
mov
add
leave
stos
push
adc
sub
cmp
sbb
push
lds
sub
cmp
in
pop
movs
(bad)
mov
inc
pop
les
mov
xchg
pop
sbb
and
ret
jns
mov
push
jg
dec
jmp
pusha
test
sub
scas
sar
ja
mov
mov
loop
dec
call
jg
push
fbstp
imul
sub
lahf
cdq
sbb
jmp
inc
daa
xchg
sti
lods
imul
sbb
imul
jae
xor
(bad)
out
mov
imul
xor
jbe
cmc
imul
xchg
xlat
xor
aaa
test
pusha
xor
mov
xchg
popa
jne
mov
int3
(bad)
inc
test
jmp
cmp
cld
jge
ins
push
jbe
adc
and
jg
mov
dec
in
lods
call
outs
mov
adc
inc
ins
fwait
jo
adc
mov
lds
fisubr
dec
das
sar
adc
cmp
push
sti
pop
test
and
pop
or
cmp
inc
cmp
mov
cmp
mov
mov
out
dec
cmc
xlat
xor
neg
daa
jmp
stc
cmp
ret
pop
xor
scas
add
fucomip
shr
mov
sub
inc
mov
ror
add
out
pop
retf
cmp
cmp
xchg
pusha
jns
jbe
cmc
mov
lods
mov
and
sbb
imul
xchg
add
jl
fsubr
shl
xlat
xor
or
push
ins
jl
mov
inc
rsm
and
push
jmp
sub
mov
scas
in
cmps
mov
test
push
jo
push
sub
push
pushf
jno
add
stos
sub
mov
jnp
outs
mov
fstp
popf
lock
xor
jae
cmp
arpl
sub
adc
dec
out
jmp
mov
inc
pop
xor
add
mov
scas
cmp
je
mov
xchg
cli
rcl
mov
call
push
hlt
jbe
popf
mov
enter
jge
stos
mov
xor
mov
and
sbb
xchg
pop
(bad)
mov
inc
loopne
popa
fs
add
or
or
fstp
test
push
cmp
jecxz
or
(bad)
into
and
mov
xor
jns
dec
jbe
pop
add
cmc
mov
ret
mov
jne
jne
push
mov
out
cmc
mov
add
jp
imul
adc
adc
fst
push
mov
xchg
and
sub
jae
rcl
xchg
(bad)
leave
data16
and
mov
popf
fmul
pop
cbw
jl
push
ins
cwde
push
jg
jp
ror
ret
inc
repnz
enter
scas
sub
jmp
ins
push
adc
inc
repnz
xor
mov
cld
pop
jmp
mov
add
mov
es
fist
xor
xor
sub
cs
mov
jge
out
add
jbe
mov
mov
cmps
dec
out
stos
in
lea
mov
(bad)
add
rol
ins
adc
loopne
jmp
rcl
std
shl
ja
sub
dec
and
xor
imul
cmp
or
daa
push
aam
dec
ins
test
stos
push
jmp
sub
mov
pop
mov
push
aaa
and
push
lods
inc
loop
xchg
outs
jae
add
mov
ret
addr16
mov
mov
test
sub
leave
pop
fld
arpl
mov
and
add
and
dec
sbb
ret
push
pop
popf
and
dec
push
mov
retf
icebp
dec
loope
mov
cld
sahf
loop
out
(bad)
lock
sub
fs
cmp
mov
jne
jmp
ror
test
cmp
pop
jle
pop
lahf
call
ret
sub
dec
and
mov
mov
lods
(bad)
and
popa
or
sub
mov
xor
jne
xor
add
repnz
gs
jmp
jae
mov
mov
sbb
mov
mov
jb
scas
rcl
stos
aas
shl
adc
fwait
xchg
push
xchg
out
and
pop
xchg
dec
ja
ror
inc
mov
pop
mov
inc
inc
add
adc
sbb
loopne
cmp
adc
xchg
les
ror
call
xor
fsubr
mov
push
push
xor
push
fist
sbb
adc
out
gs
js
lock
adc
in
xchg
lock
xchg
iret
inc
ja
ret
jae
jmp
add
lea
and
push
dec
xchg
out
loope
sbb
(bad)
(bad)
js
jmp
aaa
dec
lods
mov
aaa
xchg
cmp
fdivr
lods
sbb
ins
and
or
(bad)
retf
stos
mov
(bad)
dec
xor
fs
imul
jecxz
cmp
dec
sub
inc
add
hlt
pop
loop
fmul
add
push
dec
fidiv
add
fst
mov
(bad)
mov
sar
dec
xor
jae
mov
xor
jge
push
push
jnp
je
or
push
and
jl
aad
adc
xor
ins
push
loopne
cmps
push
and
(bad)
fld
cmp
dec
dec
xor
dec
out
pop
pop
stc
inc
pushf
int3
pushf
adc
pop
and
scas
push
pop
push
push
xchg
sahf
add
push
sub
xchg
popf
jb
ficom
fstp
jg
loop
bound
shl
sti
das
mov
out
mov
pop
test
xor
jo
xor
out
cmp
adc
adc
and
js
scas
jmp
ins
ficomp
push
js
mov
scas
in
cmp
lea
aaa
xchg
cmps
scas
div
jecxz
call
(bad)
call
and
ffree
push
loop
push
xor
lock
in
cmp
mov
sar
jnp
enter
or
test
(bad)
jns
adc
pop
imul
je
dec
cmc
push
push
test
test
push
fadd
xchg
mov
in
inc
movs
popf
mov
dec
mov
mov
out
mov
dec
jb
pop
xor
dec
rol
(bad)
in
xchg
stos
mov
aad
frstor
push
repnz
jo
int3
loope
mov
bound
popf
popa
sbb
pop
jae
xor
(bad)
mov
aas
lods
mov
test
mov
dec
xor
std
idiv
sbb
mov
(bad)
out
sbb
out
dec
scas
aad
xchg
je
out
out
add
outs
loop
test
pop
mov
xchg
lahf
es
clc
jnp
dec
sbb
std
sbb
out
nop
dec
pop
sub
cli
mov
add
shl
jle
and
add
push
mov
enter
fistp
pusha
sbb
fldcw
mov
push
lock
add
out
jbe
mov
inc
hlt
ins
add
mov
xchg
les
cmp
push
pop
add
dec
pop
pop
cmp
lods
sbb
(bad)
out
(bad)
test
(bad)
ror
push
jmp
cwde
ds
and
jb
scas
adc
mov
mov
sti
or
dec
or
jl
jbe
push
xchg
sti
lahf
(bad)
(bad)
push
fld
cwde
(bad)
(bad)
pop
ins
add
mov
sub
xor
stos
xchg
mov
loope
mov
add
and
push
adc
mov
pop
ds
push
xor
add
mov
movs
out
mov
fs
mov
jge
xchg
jmp
stos
push
fdivr
mov
cmp
push
or
lahf
pop
js
mov
popa
in
cmc
or
push
cli
mov
mov
and
and
(bad)
adc
(bad)
int
jge
mov
cdq
mov
mov
push
mov
sub
pop
loop
sti
mov
stos
stos
inc
(bad)
add
into
test
add
inc
push
pop
retf
mov
(bad)
mov
or
aaa
sahf
mov
adc
repnz
in
call
jbe
add
outs
inc
js
icebp
and
outs
dec
sbb
xor
mov
(bad)
hlt
lods
ret
jns
dec
outs
aaa
gs
mov
outs
imul
ret
retf
retf
inc
jmp
mov
jp
call
mov
loop
mov
fs
inc
loop
add
xchg
or
fwait
mov
sbb
pop
fwait
loop
fwait
movs
es
dec
cmps
dec
jne
dec
push
jmp
and
inc
into
fs
mov
cmp
(bad)
into
xchg
mov
arpl
cmp
add
mov
cmp
fidiv
test
push
xor
stos
inc
or
sub
mov
jne
addr16
lods
or
das
push
fadd
repz
sbb
sbb
psadbw
and
pop
and
sbb
ja
add
pop
jno
call
enter
data16
sti
or
je
shl
scas
shl
aam
and
pop
push
ret
mov
sub
(bad)
cld
stos
into
push
adc
dec
adc
lods
movs
movs
into
je
push
or
inc
mov
push
addr16
outs
pop
into
(bad)
cli
jae
jno
stos
aad
loopne
pushf
xor
sbb
jns
pop
xchg
mov
sbb
cs
xlat
mov
loopne
rcr
jecxz
sub
push
push
mov
inc
and
test
(bad)
neg
scas
add
stc
mov
push
nop
fidiv
sbb
int3
sti
iret
cmp
xchg
shl
pop
outs
mov
fadd
jp
popa
cs
mov
ror
lods
rcl
aaa
aam
mov
add
mov
fild
adc
xchg
repnz
jmp
or
fisubr
jnp
test
inc
sub
sub
mov
push
lea
ins
fldenv
or
mov
daa
(bad)
sub
push
xor
push
push
push
mov
xchg
loop
(bad)
and
dec
loopne
xchg
stos
push
repz
rcl
sub
xor
sti
cdq
jle
sub
cmp
inc
pop
mov
jns
adc
in
xor
or
jmp
and
add
sti
mov
sbb
imul
in
shr
jnp
popf
imul
inc
sbb
adc
or
adc
mul
into
stos
sub
cmp
mov
dec
lahf
sbb
fist
sub
mov
push
dec
xlat
(bad)
aas
jb
adc
jmp
push
pop
retf
dec
jg
cs
call
popa
dec
imul
xchg
ss
repz
aaa
jg
pop
push
mov
je
daa
cwde
fwait
pop
sbb
leave
test
test
cmp
xchg
and
or
mov
cmps
(bad)
shr
retf
mov
or
fcomp
movs
aad
pop
and
jge
add
mov
or
xchg
in
mov
bound
mov
and
mov
mov
sub
dec
not
xchg
or
adc
shl
push
(bad)
xor
and
jge
pushf
sbb
pop
jp
aas
sti
cmc
lahf
sub
and
mov
mov
push
dec
movs
outs
sti
and
out
mov
pop
idiv
inc
dec
(bad)
sub
popa
push
jo
mov
pop
dec
daa
popf
ja
ins
pop
sbb
push
sbb
ins
rcl
popf
movs
mov
and
jo
and
pop
sub
xchg
dec
scas
xor
adc
or
imul
out
leave
mov
mov
jno
imul
mov
mov
cmp
mov
fidiv
cwde
jmp
gs
fld
mov
inc
jns
stos
dec
js
sub
dec
lods
jg
sti
fst
ret
xchg
(bad)
arpl
rcl
mov
call
inc
shr
xchg
leave
out
repz
sub
dec
jno
push
mov
xchg
jl
sti
mov
pop
movs
xchg
or
or
and
push
xor
push
sar
imul
sbb
xchg
mov
jbe
daa
jp
shr
mov
in
sbb
xchg
jmp
and
leave
inc
jmp
push
add
nop
out
test
xchg
mov
ds
mov
or
mov
outs
xlat
shl
xor
sti
cmps
mov
xor
jns
ss
adc
xchg
pop
stos
add
rcl
shl
addr16
add
pop
add
or
or
fidiv
cmp
jbe
mov
lds
xor
adc
push
fcom
add
mov
push
ret
sbb
idiv
sub
(bad)
aad
dec
mov
test
inc
inc
cmps
mov
aad
sub
pusha
(bad)
addr16
adc
mov
aad
inc
loope
sub
sbb
pop
push
mov
sbb
int
jbe
mov
daa
pop
adc
adc
push
int
and
loope
pop
xchg
and
in
xchg
mov
je
test
fist
inc
mov
adc
leave
ds
test
leave
sub
add
dec
lahf
clc
pop
mov
add
add
ss
dec
and
xor
dec
or
into
aas
sbb
xchg
lahf
xchg
sbb
push
sbb
inc
in
aas
pop
or
add
cld
in
push
les
pop
xchg
mov
imul
pop
cdq
dec
fimul
retf
push
lock
mov
sbb
test
aad
mov
(bad)
and
sub
fwait
and
stos
inc
imul
add
pop
jmp
xchg
xlat
cwde
cmp
push
ret
sbb
sub
or
retf
js
and
stos
dec
xchg
push
idiv
pop
fdiv
and
cmp
jl
or
or
arpl
mov
repnz
push
aam
cdq
cmp
pusha
mov
pop
push
jns
mov
mov
sbb
stc
or
pop
push
in
cdq
js
test
push
movs
out
popa
stc
xchg
push
int
mov
loope
mov
sbb
out
jae
mov
jge
cs
sub
clc
inc
lods
cmp
rol
scas
sub
adc
mov
mov
fcomp
sbb
and
cmp
popa
xchg
jecxz
scas
popf
jb
test
into
lods
std
es
aad
shr
stos
outs
cdq
push
cld
xchg
imul
sub
jb
mov
push
retf
mov
and
inc
mov
mov
adc
xor
inc
mov
repnz
pop
test
mul
push
lock
xor
dec
push
jecxz
out
adc
test
inc
xchg
xor
bound
inc
or
(bad)
push
out
dec
pop
(bad)
pop
pushf
push
test
jg
loop
fldenv
cmp
xor
lds
jmp
mov
xlat
mov
scas
jmp
icebp
je
hlt
test
adc
or
cmp
addr16
or
and
lock
sub
mov
pop
ins
dec
fld
cwde
and
aaa
sbb
mov
cmp
push
sbb
int3
lea
mov
clc
idiv
adc
sub
or
jmp
mov
jmp
jbe
mov
popa
sub
div
(bad)
stc
inc
mov
jno
out
stos
scas
(bad)
fadd
add
stc
clc
inc
das
inc
add
pop
mov
or
mov
inc
dec
lods
mov
jmp
inc
out
jo
cmps
mov
ins
pop
cld
pop
lods
sub
cmp
popa
daa
add
stos
cmps
dec
stos
loopne
xchg
sub
scas
mov
push
dec
jmp
fidiv
retf
aas
fisubr
adc
push
test
push
xor
mov
inc
daa
ror
nop
jne
sbb
and
cmp
sbb
xor
inc
jae
add
cli
pushf
dec
int3
dec
(bad)
mov
(bad)
es
cmp
mov
pop
and
xor
(bad)
fwait
sub
or
mov
cmp
jb
(bad)
mov
xor
pop
add
sbb
sub
test
add
and
jmp
or
not
cmp
or
pushf
jle
out
inc
cmps
mov
mov
jp
cmp
mov
or
out
xor
sbb
and
push
repnz
cmp
push
xchg
push
aas
leave
mov
stc
in
lods
cmps
ins
and
mov
mov
fisttp
pop
pop
ins
out
repz
jns
inc
xor
or
mov
pop
rcr
sahf
retf
jmp
jo
outs
and
and
in
pop
rol
push
(bad)
mov
movs
es
loopne
add
out
xchg
(bad)
fwait
add
mov
pushf
(bad)
mov
(bad)
jb
fdivr
shl
mov
loop
aad
pushf
xchg
push
mov
(bad)
je
je
fsub
stos
push
std
shl
push
bound
sub
sub
fld
sahf
mov
cdq
xchg
mov
xchg
add
in
dec
pop
pop
aas
scas
cld
ins
and
dec
hlt
ret
dec
(bad)
outs
push
adc
push
ins
shl
sub
push
sbb
dec
pop
add
inc
mov
gs
cmps
xchg
popa
movs
cmp
cli
add
ret
cmps
jle
pop
add
sub
aam
cli
sti
das
jb
push
sbb
xchg
fidiv
xor
clc
or
nop
ffree
jns
cmp
xchg
xchg
js
xor
adc
out
pop
adc
setns
inc
(bad)
icebp
jno
fst
ja
or
and
and
in
or
mov
add
add
jo
and
cmps
test
xchg
sub
push
lea
enter
xor
lods
and
mov
jmp
mulps
mov
sub
arpl
inc
sub
or
inc
mov
retf
mov
cmp
mov
stos
push
push
test
dec
xchg
jae
dec
mov
mov
call
in
neg
jno
sub
test
xchg
add
cmps
jae
add
sub
dec
cmp
pop
inc
call
or
push
or
mov
pop
cmp
push
cmp
(bad)
rcr
lahf
mov
inc
fstp
aam
test
or
icebp
int
int3
xchg
xchg
stos
fwait
sbb
mov
icebp
cwde
cs
jmp
xchg
jmp
movs
std
add
enterw
dec
push
fmul
sahf
jmp
fisttp
xchg
xchg
jle
repnz
test
ins
add
sbb
or
pop
inc
int3
mov
and
sub
daa
pop
stos
lods
pop
(bad)
xlat
mov
cs
in
pushf
std
fwait
test
fcom
add
sub
push
xor
loop
jb
sub
jle
pop
inc
sbb
imul
mov
pop
mov
and
or
or
inc
repnz
rcr
test
lds
xor
ja
push
or
retf
cmps
sbb
dec
push
cwde
ja
jg
sub
mov
or
arpl
push
je
pop
int
dec
add
or
enter
iret
out
sahf
pop
xor
inc
xchg
ins
in
lods
mov
lahf
(bad)
pop
xchg
or
sub
push
lock
icebp
sahf
dec
fdivr
dec
mov
cmp
jne
mov
inc
jp
xchg
jne
jae
shl
add
inc
call
test
out
cmp
fs
sbb
fsubr
pop
jp
adc
rcl
and
mov
add
xor
out
mov
jge
js
push
xor
push
sub
jae
mov
jecxz
mov
sub
inc
cmps
outs
je
bound
or
loopne
fdiv
xchg
fs
and
ss
in
adc
aad
sbb
mov
pop
imul
sbb
out
and
std
int3
je
mov
adc
cs
jns
enter
or
ror
xchg
cmps
mov
nop
test
or
test
je
shr
cmp
jns
(bad)
movs
xchg
mov
in
cmc
mov
sar
cmps
cmp
jp
aaa
or
mov
push
inc
shl
adc
and
jge
dec
cmps
stc
xchg
fwait
sbb
test
mov
jmp
es
mov
sub
ja
mov
cmc
push
in
js
inc
push
mov
mov
pop
pop
mov
movs
aad
adc
scas
addr16
cmps
dec
imul
stos
jns
sub
lds
arpl
mov
pop
pop
sbb
fistp
lds
mov
pop
repz
sub
adc
mov
jae
mov
sub
ret
aaa
mov
mov
pop
ins
outs
mov
jmp
cwde
adc
(bad)
adc
daa
push
(bad)
pop
dec
(bad)
std
push
sub
(bad)
lahf
add
aaa
xor
shr
js
cmp
push
mov
retf
dec
ins
out
into
sub
leave
pop
dec
inc
sbb
mov
fistp
loope
adc
add
cwde
retf
mov
push
or
add
(bad)
jl
dec
test
loope
inc
push
sub
jnp
or
push
cld
(bad)
hlt
sub
lods
xchg
cmp
lds
sti
jae
mov
clc
and
xor
or
jb
push
mov
push
pushf
mov
dec
adc
adc
scas
shrd
jmp
push
mov
je
inc
out
retf
cmc
fsub
(bad)
in
rcl
sbb
int
in
pop
lods
add
sub
int3
mov
mov
aaa
jg
jnp
out
add
xlat
xchg
or
scas
jo
cld
je
mov
(bad)
xor
mov
stos
mov
inc
mov
arpl
test
imul
addr16
int3
xchg
dec
mov
pop
and
pop
jne
xor
xor
fcos
clts
pushf
push
inc
adc
cmp
retf
int
mov
js
cmp
mov
xor
or
mov
mov
xchg
outs
aad
lock
pop
push
pop
(bad)
sub
lods
cs
stos
add
pop
popf
bound
sbb
pop
arpl
les
imul
sar
ins
and
xor
std
push
mov
fnstenv
rcl
jae
inc
cmps
adc
jbe
jmp
jnp
out
lds
or
pop
rol
cmp
jae
enter
mov
dec
mov
in
aaa
pop
inc
ja
popa
inc
dec
jmp
repnz
push
pop
mov
sub
sbb
adc
ds
sbb
push
inc
mov
push
push
dec
pop
or
ret
movs
jmp
mov
mov
inc
lods
cmp
adc
jmp
jae
or
retf
jp
push
xchg
movs
(bad)
clc
daa
repnz
addr16
jb
int3
jae
and
scas
loopne
inc
cs
ja
int3
lods
mov
mov
inc
cmps
dec
jnp
pop
pop
(bad)
not
addr16
mov
int3
sbb
rcl
pop
loope
dec
aas
fcom
mov
adc
cmp
pop
test
and
dec
addr16
hlt
jg
mov
jp
xor
inc
add
repnz
mov
sub
cmps
mov
dec
neg
lahf
jmp
pop
pop
aam
jmp
ror
push
inc
push
mov
lock
ret
lods
pushf
shr
mov
call
xchg
(bad)
lods
xchg
push
and
loope
repz
xchg
out
repz
(bad)
popa
inc
jbe
adc
loop
out
imul
pop
push
add
or
out
mov
pop
add
lock
sti
push
(bad)
inc
fcmovbe
cdq
cmps
dec
out
dec
jp
test
cli
push
and
pop
mov
jp
int3
jg
add
push
das
aaa
add
jmp
dec
mov
push
sbb
scas
xchg
and
jle
or
cdq
mov
movs
sar
mov
cmc
lods
idiv
xor
test
sub
div
inc
pop
sbb
and
outs
xor
push
push
mov
mov
fcomp
int
adc
and
inc
addr16
mov
fild
sub
mov
xor
outs
pushf
cs
and
jnp
mov
ss
dec
outs
pop
push
lods
ret
cmp
mov
repnz
push
xor
movs
pop
sbb
add
or
mov
test
jecxz
jns
dec
jl
les
pushf
mov
adc
and
ret
xchg
clc
mov
xor
pop
sub
dec
xchg
and
adc
mov
cmp
push
arpl
jns
jo
sbb
push
cld
test
jno
retf
and
(bad)
xchg
outs
inc
movs
in
xor
pop
sbb
and
in
gs
adc
or
icebp
ret
cmp
xchg
push
jns
adc
add
pop
mov
in
mov
fmul
xor
mov
mov
cdq
neg
jae
in
icebp
add
mov
dec
movs
mov
cmp
mov
(bad)
enter
leave
bound
or
leave
cmps
cmp
int
jnp
pop
jl
mov
loopne
aam
xor
push
out
push
xchg
into
fmul
jns
pop
inc
ja
mov
ins
jno
rdpmc
jle
sub
ins
cmp
loopne
in
and
mov
adc
cs
clc
pop
push
ror
out
or
push
pop
repz
xor
stc
xchg
sbb
fwait
aas
repnz
sbb
xor
popf
mov
sub
or
outs
mov
mov
pop
pop
sub
ss
cdq
inc
cld
test
shl
(bad)
adc
cmp
stos
adc
push
cmp
mov
stos
or
sbb
movs
fmul
test
xor
cs
adc
movs
and
pop
xor
and
xor
in
out
clc
aas
push
push
xchg
adc
fldenv
test
or
push
sub
lds
xchg
sub
dec
xchg
mul
push
xchg
mov
xor
inc
adc
in
push
loopne
fbld
cmp
cmp
inc
dec
jp
mov
or
inc
and
ja
rol
inc
enter
ds
sahf
push
cmp
jecxz
jnp
in
fs
or
and
out
nop
mov
jle
stc
imul
sub
mov
push
stos
push
out
imul
adc
sub
mov
adc
jae
dec
pop
sbb
test
cwde
shl
xlat
stos
adc
mov
loopne
aaa
js
mov
mov
cmc
fisttp
xchg
cmp
aad
fucomp
jnp
xor
push
test
and
jg
jns
int3
inc
gs
inc
fcomp
cmp
mov
lds
xchg
ja
xor
sub
fsubr
jns
scas
pop
or
xchg
dec
add
jl
movs
adc
out
vmovdqa
aas
sub
inc
cmp
push
push
outs
in
in
xchg
pop
mov
add
xchg
js
sub
das
pop
add
rol
sahf
in
xor
sbb
not
arpl
ret
imul
mov
addr16
xor
test
sbb
mov
out
jno
mov
xor
add
mov
pop
lods
xor
adc
push
xor
pop
push
(bad)
push
sbb
lahf
xor
imul
dec
pop
movs
(bad)
iret
cmp
mov
jmp
mov
ss
in
stos
rol
mov
dec
arpl
mov
call
enter
push
push
mov
inc
adc
push
sar
lahf
ja
push
adc
dec
arpl
stc
mov
sub
xchg
cs
add
popf
pop
mov
or
or
fwait
inc
fisttp
mov
xchg
and
hlt
in
inc
inc
retf
mov
rcl
fstp
je
stos
jle
adc
jo
pop
pop
shr
jge
pop
cmp
xchg
dec
adc
test
mov
imul
add
xor
xchg
sbb
das
pop
stos
int
mov
js
mov
add
je
outs
les
(bad)
fnstcw
push
fsubrp
jp
mov
mov
push
pop
cmp
ss
fcmove
mov
jns
lods
push
shl
jg
(bad)
outs
pop
stos
outs
inc
div
cdq
mov
popf
jmp
repnz
dec
jbe
cs
or
rcl
das
inc
jmp
(bad)
out
scas
cwde
sbb
pop
aam
sar
test
or
xchg
stos
jns
sbb
scas
or
pushf
xchg
lea
cmp
enter
and
iret
jmp
cmp
(bad)
nop
outs
xor
sbb
xchg
in
daa
dec
scas
mov
int
pop
inc
xor
mov
and
clc
je
xchg
sub
int
or
cli
push
movs
fmul
rcr
fcomp
iret
xor
imul
pusha
daa
mov
sub
sbb
stos
imul
out
sbb
xchg
arpl
and
lahf
iret
and
inc
adc
popf
jnp
sbb
push
xor
je
mov
ss
xchg
out
(bad)
sbb
push
xor
inc
in
sbb
xor
ja
cli
and
dec
cmps
(bad)
cli
dec
mov
cli
jnp
ds
pop
sbb
dec
not
cmp
popf
js
mov
mov
stos
dec
ror
loopne
jmp
scas
pop
inc
addr16
imul
mov
sub
inc
xchg
test
xchg
push
sub
hlt
lods
adc
dec
repnz
mov
and
cmps
mov
inc
push
and
xchg
jge
fs
not
fisubr
mov
or
pop
push
cwde
cmp
sbb
and
std
pusha
dec
xor
push
call
sbb
mov
sti
aas
pop
fdiv
mov
mov
loope
fs
js
dec
add
xor
daa
pop
ret
xchg
sbb
jns
adc
inc
outs
jp
ds
add
ficom
push
xor
and
in
repz
ret
xchg
xchg
popa
and
adc
rcl
out
neg
aad
xor
sub
mov
xchg
imul
mov
aam
cmp
mov
mov
test
std
fimul
outs
sub
pushf
cdq
int3
mov
xor
gs
push
mov
push
clc
out
std
jp
retf
xchg
sub
xor
fs
jmp
data16
repnz
retf
push
xlat
ins
outs
add
cdq
xor
mov
loopne
jno
and
imul
mov
and
cmp
and
sub
or
cwde
push
test
arpl
dec
loope
mov
dec
popf
call
adc
sbb
sub
xchg
mov
dec
mov
dec
mov
mov
das
push
retf
xor
adc
pop
mov
int3
(bad)
dec
cmp
and
xchg
or
call
xor
pop
std
(bad)
(bad)
sbb
(bad)
jmp
mov
inc
arpl
les
cmp
sti
add
in
ret
push
fnsetpm(287
xchg
pop
jae
sub
mov
pop
and
adc
cmps
adc
arpl
test
aad
jb
inc
ds
adc
sbb
mov
dec
aad
ret
pop
test
(bad)
mov
mov
fidivr
imul
mov
jg
push
fwait
push
into
cmps
xchg
xchg
push
xchg
sahf
in
xor
int3
popf
push
mov
call
mov
cmp
int3
cmp
xor
cmp
dec
sbb
(bad)
sbb
idiv
sbb
cmp
in
call
add
clc
cmp
call
lods
push
dec
xor
(bad)
cwde
sub
std
pop
rcr
jbe
data16
(bad)
pop
iret
rol
dec
aad
(bad)
je
lds
cmp
loop
sub
mov
je
int3
fucom
mov
hlt
inc
and
inc
cdq
mov
mov
fild
sbb
test
jmp
arpl
inc
pop
mov
test
fldcw
cmp
aam
and
movs
cwde
mov
mov
iret
aaa
jmp
push
sti
xchg
cwde
jmp
jbe
js
fmul
mov
(bad)
pop
pop
xor
jns
push
icebp
inc
dec
fisubr
pop
push
std
lds
xchg
dec
pop
test
push
jb
(bad)
lods
xchg
aad
sbb
lods
in
out
push
in
daa
int3
push
mov
push
pop
fs
(bad)
push
rcr
fs
clc
mov
lock
inc
iret
sbb
or
dec
out
shl
pushf
ins
pop
cmp
inc
mov
js
jo
xchg
mov
push
cmp
sbb
out
pop
mov
dec
(bad)
pop
loope
popf
push
sbb
sub
or
cmp
mov
mov
adc
pop
in
jns
jl
jmp
cmp
ror
push
jnp
ss
div
pusha
inc
fnsave
imul
xchg
cmps
fst
xor
stc
pushf
and
jl
ror
inc
sbb
mov
xchg
xor
jle
(bad)
pop
xchg
lods
xchg
out
out
pushf
push
mov
loope
cmp
push
mov
rol
pop
pop
je
movs
loop
inc
mov
jnp
dec
popf
inc
cwde
(bad)
sub
jecxz
sbb
xchg
ins
and
xchg
(bad)
aam
gs
aaa
aad
scas
es
adc
inc
(bad)
mov
sbb
inc
mov
popa
adc
mov
fdiv
mov
test
call
xor
pushf
push
xor
je
push
or
pop
dec
out
orps
daa
in
adc
fild
into
punpckhwd
xor
imul
push
les
repz
mov
dec
mov
scas
imul
repnz
inc
mov
mov
jb
int3
mov
lea
adc
xchg
in
pop
std
dec
mov
sbb
pop
fadd
ins
jbe
std
sub
xchg
xchg
ds
xor
or
cld
cs
(bad)
aas
scas
push
loopne
int3
daa
xchg
test
(bad)
(bad)
mov
mov
mov
std
pop
xlat
sbb
mov
rol
in
xchg
and
pop
sbb
sbb
in
movs
mov
dec
xor
jmp
sub
(bad)
sar
arpl
mov
shl
(bad)
dec
lods
adc
repnz
ins
jae
call
movs
retf
in
jns
and
push
dec
fmul
push
loop
fisub
lods
adc
or
(bad)
(bad)
and
xchg
mov
sub
pop
push
add
mov
xor
ins
mov
add
mov
mov
add
and
ret
ret
scas
xor
mov
and
inc
xor
xchg
adc
dec
loope
xchg
retf
call
ja
mov
loopne
xchg
movs
je
jmp
retf
and
jb
jno
ins
sub
out
movs
fsubr
or
sahf
mov
aad
stos
xchg
mov
js
adc
cli
mov
test
sub
retf
mov
in
fs
push
lods
test
sbb
jns
xor
std
inc
in
(bad)
out
lahf
jge
jecxz
sub
call
fisttp
pushw
sbb
ss
ja
daa
out
lods
scas
sub
cli
test
mov
fs
imul
lahf
xor
mov
mov
mov
das
out
adc
int3
sub
and
cdq
mov
in
lods
or
add
pop
clc
mov
cld
push
jmp
psllq
loopne
aad
lods
cmp
out
shr
sbb
push
imul
out
mov
scas
sbb
adc
jno
pop
mov
(bad)
jmp
test
ret
xor
pusha
call
dec
or
neg
mov
(bad)
mov
pop
scas
mov
int3
push
mov
add
jns
inc
adc
cdq
jmp
mov
dec
repnz
adc
mov
pmullw
adc
sti
inc
mov
push
jp
mov
xchg
icebp
jne
lds
dec
out
div
ror
lock
imul
fstp
ins
pop
jmp
push
inc
aam
pusha
mov
inc
cmc
mov
std
imul
inc
stc
cmp
mov
shl
aas
out
jp
ss
test
imul
cs
jae
int3
test
dec
ja
shl
test
pushf
movs
repz
cmp
dec
push
jns
push
push
stc
sub
repnz
psadbw
push
jo
xor
xchg
inc
pushf
loop
stos
mov
push
outs
cmp
test
sahf
fsubr
test
scas
push
outs
lea
dec
cli
sbb
or
out
cmc
test
and
ficomp
mov
leave
jmp
dec
daa
imul
sub
push
add
xor
out
inc
adc
jmp
ret
xchg
or
enter
out
clc
fdivr
fnstsw
icebp
das
xlat
pop
sub
dec
add
lods
sbb
call
loop
lods
jge
mov
push
sbb
daa
mov
xchg
push
adc
sub
neg
jno
imul
xchg
inc
imul
and
sbb
sbb
bound
sub
push
push
out
fwait
xlat
cs
add
jns
enter
push
push
sbb
outs
xchg
sti
sar
(bad)
mov
mov
fstp
adc
dec
mov
aas
xchg
dec
xor
adc
mov
pop
clc
dec
cmp
push
cmp
add
out
add
mov
xor
mov
mov
rol
inc
stc
mov
add
pop
(bad)
cmp
outs
mov
and
out
pop
push
imul
js
cli
or
in
retf
loopne
push
fild
jb
pushf
dec
les
jmp
das
sub
lahf
sbb
push
lock
js
sub
pop
sub
sub
xchg
stos
ror
xor
xchg
jecxz
or
mov
dec
leave
mov
nop
jne
pushf
pop
and
(bad)
mov
mov
xchg
jbe
enter
mov
in
adc
xor
mov
(bad)
shr
pop
ficom
sub
das
xchg
dec
dec
jle
in
cmp
add
rol
sbb
xlat
mov
mov
mov
xchg
ucomiss
imul
sbb
out
dec
or
icebp
enter
pop
mov
outs
jns
div
inc
ss
push
aaa
sub
loopne
neg
sti
out
fisubr
sub
jge
cmp
pop
cmp
add
aam
push
adc
pop
sub
jmp
cmp
daa
cmp
scas
ja
mov
inc
cmps
jns
dec
pop
pop
mov
cmps
ds
jp
cli
jne
cmp
push
adc
sub
push
xchg
cmc
aad
mov
out
and
jno
add
(bad)
call
jno
inc
adc
out
sub
jecxz
test
adc
dec
sar
cmp
mov
xchg
mov
scas
test
lahf
fsubrp
xor
inc
dec
adc
lods
js
mov
mov
sahf
xor
cdq
into
ror
popf
(bad)
and
and
cmp
pop
stos
mov
cs
int3
mov
xchg
cmp
mov
daa
add
or
sti
stos
call
jp
not
arpl
mov
and
xor
xor
aam
jo
dec
push
cmp
xor
pushf
ja
xchg
sbb
fistp
fwait
push
dec
xchg
push
push
lods
movs
sbb
sbb
fcomp
mov
shl
add
adc
jecxz
inc
mov
fidiv
mov
ss
jae
neg
and
xchg
sub
mov
xchg
in
pop
xchg
lds
sub
mov
push
fmul
aam
dec
adc
add
pop
out
sbb
(bad)
mov
lods
test
ret
jae
xor
cmp
mov
inc
cwde
add
ret
into
dec
inc
movs
punpcklwd
push
dec
js
push
test
arpl
out
(bad)
fs
or
mov
test
jg
cmp
sub
mov
test
mov
sbb
sub
cli
mov
lock
sub
pop
(bad)
into
mov
xchg
call
push
jmp
cld
das
stc
daa
sub
sbb
mov
sti
dec
xlat
call
inc
aam
cmp
in
push
mov
(bad)
lea
cs
jns
xchg
lahf
lock
sbb
imul
xchg
(bad)
cwde
jne
rcr
sub
popa
pop
mov
mov
xor
cwde
xchg
data16
jecxz
leave
jae
dec
adc
dec
mov
add
fidivr
(bad)
sbb
add
outs
or
inc
(bad)
or
push
test
xchg
or
push
xchg
fchs
adc
dec
xlat
gs
push
retf
ss
(bad)
out
rol
adc
mov
scas
clc
retf
jo
push
push
ja
imul
icebp
fldenv
or
mov
call
dec
xchg
dec
inc
dec
ins
pop
xor
sbb
enter
mov
add
je
outs
pop
mov
aam
stos
in
fild
jmp
push
xor
retf
mov
jmp
repnz
stos
(bad)
adc
mov
int3
sti
mov
pop
sbb
inc
test
sub
add
dec
and
sar
data16
jge
push
fwait
out
cmp
push
adc
and
test
cmp
xchg
inc
fist
(bad)
xor
es
gs
rol
fwait
push
or
pop
movs
pop
inc
adc
in
mov
sti
rcl
outs
jmp
je
push
ins
sbb
xor
or
add
mov
push
push
mov
mov
mov
cwde
stos
mov
jns
mov
sbb
fst
ds
les
movs
lahf
sbb
les
fstp
or
jp
jl
pop
int
add
stos
pop
xor
add
(bad)
hlt
ja
xor
mov
sbb
test
cmp
adc
cmp
test
xlat
fisubr
sti
bound
mov
adc
mov
enter
cmp
jb
push
clc
jo
mov
or
inc
cmp
jbe
xchg
jle
icebp
fistp
mov
cs
or
mov
out
jle
mov
shr
jb
in
cli
jnp
cmp
test
(bad)
in
aam
fsub
push
in
loope
cmp
cmp
mov
add
xlat
(bad)
jmp
xor
jmp
scas
push
sub
les
push
push
leave
shl
pushf
popf
repz
dec
fimul
in
lock
mov
dec
cdq
mov
mov
inc
(bad)
(bad)
mov
cli
push
push
aad
add
cmc
repz
enter
cli
add
sbb
std
sahf
jno
(bad)
rcl
ja
leave
leave
es
inc
retf
hlt
pop
sbb
hlt
int3
imul
push
inc
dec
add
in
push
imul
mov
enter
popf
std
mov
dec
mov
cli
ins
lea
leave
jbe
pcmpgtw
test
and
pop
pop
inc
imul
lahf
std
xchg
push
cmp
jg
inc
out
jae
in
and
pop
sbb
cwde
mov
inc
adc
clc
cmps
pop
jno
cdq
jp
aad
sbb
popa
bound
push
fild
inc
or
sub
dec
xchg
cmp
loop
and
or
daa
add
add
mov
jmp
xor
rol
clc
repz
mov
pushf
push
(bad)
sub
mov
pop
rcr
pop
mov
jno
mov
push
xor
(bad)
shl
jb
mov
ss
fdivr
repnz
adc
jecxz
fistp
push
ficom
out
push
cwde
sbb
pop
mov
jge
xchg
mov
xchg
push
shl
jp
xchg
pushf
or
cmps
xchg
scas
cld
mov
xor
ja
pusha
cmp
pop
stc
call
cmp
mov
js
push
daa
push
mov
ja
pop
push
adc
and
push
xor
pushf
ins
into
sti
add
stc
xor
xchg
std
in
or
iret
jg
jmp
(bad)
sti
mov
sub
fdiv
aam
pushf
dec
cmps
retf
mov
jno
stc
ss
cld
adc
jnp
push
scas
sub
rcr
outs
aad
pop
push
test
pop
inc
push
out
sub
ins
mov
mov
fwait
mov
cdq
mov
mov
dec
jle
scas
call
pop
ins
imul
jo
iret
pop
cs
rcl
jl
in
ret
retf
mov
xor
sbb
or
in
jmp
pop
sub
push
pop
xchg
xor
movs
pop
cld
sbb
adc
cdq
mov
inc
ret
adc
ins
xchg
pop
shl
xchg
adc
xchg
int3
fisub
test
adc
mov
outs
pop
ss
into
push
mov
sahf
mov
push
imul
je
or
mov
add
inc
jmp
in
mov
adc
inc
mov
mov
sbb
jmp
jmp
jmp
jb
jnp
mov
out
call
call
pop
inc
jns
hlt
lock
fnstsw
pop
and
jle
lahf
pop
mov
neg
add
xor
inc
nop
test
ficomp
(bad)
pop
rol
sbb
and
pusha
imul
stc
lods
mov
sbb
ficom
add
sbb
push
cmps
imul
call
out
aas
cmp
jl
leave
add
push
push
inc
shl
dec
retf
and
xor
fdiv
push
arpl
daa
enter
push
ror
xor
mov
jo
push
sub
jo
lahf
fisub
retf
dec
movs
cmp
addr16
scas
sar
adc
xor
imul
add
lock
pop
imul
mov
outs
fdiv
xchg
mov
mov
sub
cmp
std
fisttp
mov
pop
stos
pusha
dec
scas
popf
dec
mov
(bad)
into
xor
sbb
stos
sbb
fist
sbb
(bad)
popa
fs
ins
lahf
add
adc
in
mov
test
push
or
cmp
mov
add
fwait
jmp
push
popf
fild
ss
add
xchg
call
call
mov
ja
test
cld
scas
jbe
pop
and
xor
mov
mov
fbld
pop
repnz
in
mov
xor
fwait
inc
push
push
and
stc
in
xor
outs
and
xchg
adc
dec
aaa
push
xor
scas
retf
cmp
dec
retf
mov
cmp
dec
(bad)
dec
or
xor
sbb
sbb
push
adc
or
mov
mov
inc
inc
push
leave
scas
pop
cwde
retf
mov
dec
jge
add
jns
popa
div
push
pushf
(bad)
sahf
push
fs
push
and
adc
adc
aas
div
jno
cmc
fidiv
sbb
dec
mov
dec
and
jo
repnz
es
push
repz
jnp
jo
fs
dec
dec
ins
sub
push
imul
push
ins
aad
fsubr
outs
dec
movs
adc
ins
push
or
out
mov
aad
xor
lahf
sti
mov
sar
push
or
idiv
mov
pushf
rcl
or
jnp
and
jnp
div
aas
repz
ja
(bad)
adc
data16
shl
scas
popa
xchg
arpl
rol
mov
retf
sbb
jns
or
lods
stc
inc
xchg
loopne
outs
out
xor
sub
cmp
mov
je
fadd
jle
ja
push
mov
test
mov
iret
cmc
mov
adc
pop
icebp
les
mov
aam
mov
test
xor
xchg
dec
sub
repnz
inc
mov
or
lds
xor
mov
sub
sbb
daa
jecxz
loop
nop
fsub
daa
leave
sub
retf
sub
je
adc
jg
cmps
ret
add
inc
and
jmp
dec
(bad)
daa
dec
aad
jp
jmp
mov
jg
push
sbb
mov
pusha
mov
and
jnp
or
sbb
xchg
or
add
or
dec
mov
clc
(bad)
cs
xchg
add
ficom
retf
mov
pop
jnp
mov
cld
int3
(bad)
sub
imul
or
mov
xchg
mov
cwde
add
mov
jne
mov
imul
jae
sub
arpl
pop
sbb
add
dec
pop
inc
pop
ret
mov
xchg
daa
mov
jbe
dec
adc
test
out
inc
fcomp
sbb
dec
fidiv
sahf
pop
jle
ss
xlat
int
sbb
mov
movs
fwait
mul
dec
(bad)
hlt
scas
mov
sbb
push
mov
jbe
out
push
xor
out
mov
mov
cmp
jne
mov
add
ror
mov
jb
add
pop
push
imul
(bad)
mov
jns
jb
jo
ins
mov
cmp
outs
outs
push
adc
add
xchg
call
sbb
cmp
dec
(bad)
stc
cmc
setb
jo
xor
je
and
pushf
in
popf
arpl
out
cmp
enter
inc
or
das
retf
mov
ss
out
dec
inc
xchg
inc
jne
hlt
in
pop
jl
add
mov
fidivr
fstp
add
cwde
sub
jns
or
dec
popf
adc
add
movs
test
loope
xlat
ss
or
add
or
mov
pushf
mov
in
or
mov
mov
jl
std
jmp
test
add
mov
add
pop
and
and
mov
leave
adc
std
xchg
scas
push
inc
inc
in
sbb
xor
pop
repnz
and
pop
cmp
ror
adc
jge
inc
jae
jae
loop
in
loop
shr
inc
retf
adc
les
inc
jl
mov
shl
enter
mov
out
mov
jp
sbb
mov
or
or
fwait
xchg
leave
sub
pop
xor
push
hlt
pusha
gs
imul
test
xchg
daa
or
inc
fimul
jbe
and
pop
jmp
pop
pop
pop
push
jns
xchg
jg
sysexit
into
mov
add
sbb
cs
mov
xor
mov
rcl
jmp
(bad)
sbb
sbb
adc
mov
scas
and
fldcw
mov
mov
int
add
adc
push
cmp
jnp
cmp
xor
(bad)
into
jo
pop
add
lds
sub
xor
int
jns
jl
(bad)
jp
ins
mov
cmps
sbb
stos
and
cmp
aas
dec
mov
mov
mov
cmps
repnz
push
sbb
xchg
sbb
aam
push
ffreep
movs
fild
rol
cmps
cmc
push
mov
adc
enter
aaa
xlat
clc
in
movs
sar
ficomp
add
outs
pop
fnstcw
inc
sti
or
cmp
or
dec
xchg
cmp
test
xor
(bad)
dec
jmp
shr
ret
sub
xlat
adc
nop
pop
add
inc
out
xor
lahf
shl
mov
pop
int3
test
pop
add
push
sbb
cmps
dec
cmps
lahf
rol
out
mov
xlat
test
mov
(bad)
cmp
or
jmp
fistp
mov
push
(bad)
in
popf
stc
cmp
mov
xchg
stos
pop
lds
stos
push
push
inc
scas
bound
fild
jae
xchg
(bad)
and
pushf
push
sahf
ror
xchg
pop
aad
fisub
in
sub
adc
retf
push
fldz
dec
orps
cmp
ja
add
mov
gs
or
adc
shl
push
or
cdq
xchg
cwde
ja
push
xlat
sahf
dec
mov
xchg
cmp
pop
or
xchg
inc
push
(bad)
cld
jmp
fild
ja
or
movs
pusha
lods
ret
aam
mov
addr16
pop
inc
cmp
cmp
xchg
or
aad
fisubr
nop
mov
movs
test
outs
(bad)
mov
repnz
jmp
sub
iret
aad
cwde
jl
std
ror
inc
pop
gs
inc
adc
xchg
fst
(bad)
mov
jmp
push
jecxz
out
not
mov
outs
imul
int3
xor
jbe
xlat
cmc
in
push
xlat
dec
je
xchg
scas
ret
cmp
shl
hlt
mov
mov
dec
fsubr
gs
xchg
(bad)
cmp
cmp
scas
xchg
clc
mov
mov
mov
ror
or
or
jbe
pop
sbb
xor
fs
xchg
ror
(bad)
push
add
lock
stc
push
rol
inc
jns
mov
mov
and
xchg
(bad)
push
xchg
and
add
stos
(bad)
mov
aas
cmp
mov
cwde
or
stos
push
scas
dec
outs
fldcw
jae
and
je
int3
push
xlat
inc
cmp
test
sti
shr
(bad)
xor
fidivr
rcpps
xor
jae
push
std
push
sti
iret
add
sub
xor
mov
mov
das
not
and
jmp
sar
dec
outs
dec
push
scas
inc
pop
cdq
dec
jmp
or
sahf
xor
aaa
clc
sub
retf
mov
push
repnz
push
or
and
cld
popf
lock
sti
and
pop
in
xchg
xlat
dec
imul
cmps
jns
dec
cmp
in
inc
mov
mov
ror
popa
mov
enter
stos
jno
in
mov
mov
outs
xchg
push
dec
imul
cmova
mov
push
pop
xor
xchg
push
mov
or
mov
xchg
mov
icebp
mov
test
jb
enter
stos
push
pushf
adc
add
test
push
(bad)
jns
out
out
push
mov
and
push
and
(bad)
jae
dec
je
adc
pop
les
xchg
inc
jecxz
sbb
loop
retf
xchg
xor
add
stos
mov
jmp
jnp
outs
xchg
(bad)
cmp
outs
sar
or
fld
cs
xchg
push
jp
inc
lods
dec
bound
scas
sub
sub
scas
xor
xlat
lea
mov
xor
inc
in
lsl
int
pop
jg
fs
fsub
dec
dec
in
mov
add
jl
jmp
fwait
add
cs
fidiv
movs
ins
dec
cmc
add
test
call
gs
and
outs
jbe
fstp
ret
push
xchg
das
xchg
and
fiadd
sub
mov
jle
push
jp
xor
in
test
pop
mov
jnp
push
ret
js
cmp
(bad)
aas
div
and
jo
mov
mov
pop
into
pop
imul
xchg
push
popa
sub
xchg
inc
retf
or
cmp
mov
or
jmp
aad
pop
pop
ins
lds
data16
add
jns
hlt
mov
ja
vcvtdq2ps
mov
mov
jp
bound
dec
inc
lods
inc
rcr
dec
xchg
lods
cmps
(bad)
out
mov
fidivr
mov
jo
xchg
mov
pop
lods
fwait
pop
dec
pop
(bad)
jnp
js
jl
and
aas
or
imul
pushf
jns
sub
in
(bad)
jl
inc
imul
shl
xlat
loope
jp
mov
leave
and
(bad)
lods
mov
sub
mov
imul
xchg
loope
aas
push
sub
(bad)
pop
lahf
mov
or
mov
mov
ins
mov
call
lds
daa
mov
mov
add
or
mov
xor
add
(bad)
repnz
push
test
cmc
std
xchg
xor
jne
xor
call
stos
sahf
mov
pop
mov
(bad)
imul
imul
xchg
retf
jp
mov
or
das
retf
sub
repnz
jg
mov
cmp
cwde
sti
pop
mov
ret
jae
icebp
js
push
xlat
cmp
dec
sahf
pop
pop
fimul
pop
push
fbstp
sbb
cmc
retf
cmp
arpl
dec
js
adc
test
add
or
in
and
sar
aam
sub
inc
pop
pmullw
dec
mov
pop
xchg
inc
xor
xchg
adc
icebp
xor
jmp
pop
frstpm(287
popa
mov
aam
sbb
xchg
dec
xchg
and
jno
mov
jge
pop
test
or
sub
int3
(bad)
sar
xor
cld
add
test
call
jns
mov
es
pop
daa
leave
dec
cmp
push
pop
lods
xchg
xor
ins
xchg
stc
mov
xor
out
(bad)
mov
jno
sub
popf
inc
and
push
pusha
jo
sbb
xor
sti
xor
std
mov
enter
out
sub
or
loop
add
mov
jmp
mov
fisttp
popa
xor
in
movs
inc
xor
test
fdivrp
xor
das
ror
jnp
outs
or
add
iret
sub
mov
mov
add
jmp
jge
pop
pop
pop
fld
mov
repnz
adc
or
fisub
sbb
scas
pop
and
mov
xchg
pop
cli
sub
std
rol
aam
repz
adc
add
rcl
push
ss
gs
add
push
imul
shr
rcr
dec
stos
inc
mov
and
mov
clc
aam
and
fld
pop
mov
push
inc
push
(bad)
sbb
sub
dec
inc
out
push
jmp
xchg
jmp
add
pop
test
xor
jb
push
push
xor
pop
adc
xchg
pop
iret
lahf
and
pop
push
or
pushf
mov
jmp
adc
pop
shl
push
or
sub
jl
mov
dec
pop
sub
mov
ja
mov
in
push
push
js
call
(bad)
jge
movs
sbb
test
push
jb
sub
sbb
or
mov
or
jno
cld
jmp
dec
adc
cld
add
sbb
js
popa
jns
inc
lea
xchg
pop
fdiv
in
int3
bound
(bad)
fstp
scas
stos
imul
push
mov
lea
cli
inc
push
jmp
cli
add
movs
rol
ret
cli
xor
inc
test
or
push
dec
sub
cli
dec
js
dec
mov
ja
xchg
ja
das
pop
sbb
es
jle
test
rol
repnz
push
pop
into
jl
leave
pop
(bad)
cli
pop
mov
rcr
jmp
inc
fwait
inc
sub
out
rcl
add
lock
sbb
bnd
call
fstp
xlat
dec
cs
lds
cmps
aaa
in
sub
push
add
movs
int
stos
mov
inc
or
js
dec
jae
adc
sub
mov
cmp
ins
(bad)
jnp
shr
hlt
pop
sbb
push
sbb
cmp
int
jo
loop
inc
stc
mov
rol
push
mov
cmp
cmp
push
fisub
dec
xchg
jmp
dec
movs
dec
clc
sub
nop
enter
rcr
pop
adc
jmp
in
pop
inc
inc
loop
cmps
dec
dec
dec
in
xor
stos
adc
aam
mov
mov
lds
imul
icebp
dec
out
ss
or
adc
popf
inc
leave
mov
sub
add
scas
(bad)
ror
icebp
cwde
in
adc
stc
dec
(bad)
sar
push
stos
push
mov
xor
add
jne
scas
dec
fisub
(bad)
int
out
dec
dec
stos
pop
dec
adc
sub
xchg
in
scas
and
dec
retf
in
ds
sub
push
cmp
popf
xchg
leave
push
bound
lahf
adc
jmp
cmc
pop
adc
hlt
jl
cdq
or
aam
je
fcomp
jae
fist
inc
cdq
mov
aaa
call
xchg
sbb
mov
or
adc
adc
arpl
ds
ins
clc
add
inc
mov
pop
das
hlt
dec
repnz
sar
xor
sti
jmp
repz
or
nop
pop
loopne
aas
or
test
jl
mov
pop
aam
mov
dec
sbb
ss
push
push
lods
adc
pop
stos
vmovaps
jo
sub
jae
mov
dec
xchg
xor
push
sbb
xor
mov
fdiv
mov
xor
jge
mov
stos
cmc
es
xor
pop
jl
sbb
rol
inc
dec
test
and
mov
or
and
xor
mov
pop
sbb
sbb
movs
cmp
add
pushf
jns
pop
call
and
out
inc
xchg
fcomp
jecxz
dec
pop
add
jns
cwde
gs
jbe
int
dec
dec
xlat
aam
jp
mov
add
sbb
mov
test
pop
adc
jae
jg
bound
call
iret
lods
mov
push
add
ror
cwde
add
cmp
inc
and
add
call
test
sub
aam
sub
je
jbe
add
push
xor
aad
daa
sub
xchg
scas
add
push
jmp
jo
stos
cmp
rcl
in
pop
sub
popa
pushf
mov
mov
cli
pop
lock
(bad)
leave
inc
xor
and
(bad)
(bad)
lahf
movs
or
dec
bound
aam
sbb
sub
mov
mov
ret
jno
xor
fmul
lahf
jno
pop
cdq
rcr
mov
or
out
sar
mov
idiv
movs
cwde
mov
out
add
cmp
ss
ja
stc
pop
push
shl
jb
xor
outs
fs
fadd
push
call
retf
dec
jo
sbb
ret
aas
popf
jg
pop
push
les
jo
xor
test
pop
nop
xchg
pop
sahf
mov
and
pop
mov
int
lds
repnz
sbb
test
ds
iret
mov
aad
inc
test
cmp
xlat
jno
aam
fbstp
push
in
sti
dec
sub
cmp
scas
cmps
fwait
xor
mov
push
leave
ret
and
pop
popa
dec
mov
push
and
adc
(bad)
aam
add
cdq
outs
in
cdq
je
pop
fadd
xlat
gs
cmp
sar
push
mov
dec
jns
stos
jle
pop
out
mov
and
frstor
fisttp
adc
(bad)
jl
dec
push
jp
jo
jge
inc
lea
push
cdq
or
push
stc
scas
add
push
iret
inc
or
lahf
popa
sub
xor
mov
movs
in
mov
retf
sbb
mov
(bad)
jbe
jno
imul
pop
cld
xor
fcom
aam
jp
ds
sub
outs
aas
add
test
push
sbb
inc
jle
ins
mov
retf
ins
lahf
sbb
cmp
push
rol
test
mov
mov
(bad)
xor
push
jmp
mov
punpckhdq
(bad)
(bad)
outs
inc
push
(bad)
fst
cmp
lahf
inc
pop
adc
mov
push
pushf
or
mov
jbe
cmp
aaa
movs
mov
out
(bad)
pop
push
aad
nop
jns
xor
leave
retf
push
adc
xchg
add
(bad)
mov
fild
mov
push
fnstsw
pop
aaa
nop
dec
push
mov
neg
or
retf
push
je
mov
mov
dec
cld
cmp
push
pop
jbe
dec
pop
xchg
fsub
ret
rol
cmps
mov
dec
xchg
aas
mov
push
dec
mov
lods
leave
enter
jge
mov
aaa
sub
scas
push
jp
sub
imul
in
jecxz
ins
pop
shl
jbe
out
jg
in
clc
ja
(bad)
jge
sar
adc
ror
cmp
icebp
or
xor
sub
repz
and
out
sbb
not
inc
jg
cli
add
push
repz
add
in
hlt
das
adc
inc
les
push
inc
popf
mov
xor
dec
pop
pusha
int
pop
push
loope
pop
test
leave
jno
dec
in
addr16
(bad)
je
out
(bad)
aad
jmp
lods
or
adc
jo
cdq
mul
or
sbb
xchg
out
pop
mov
sbb
dec
out
ror
dec
ret
cmp
xor
or
fld
sbb
xchg
icebp
sbb
jmp
inc
mov
cmp
nop
fsubrp
sti
sahf
jns
sbb
mov
dec
cld
and
pop
sbb
js
pop
fcomp
int3
mov
dec
sub
ss
stos
pop
fcomp
mov
outs
fsubrp
mov
pop
xchg
lahf
sub
xor
fs
stc
mov
lea
popf
imul
stos
sbb
and
inc
mov
mov
mov
adc
mov
shr
push
adc
fld
mov
dec
pop
in
sub
jbe
and
xor
push
push
sub
cmp
add
fdivr
enter
es
aad
cmp
xchg
cmp
ret
dec
pop
stc
cli
(bad)
jmp
pop
add
(bad)
out
add
mov
sub
fmulp
(bad)
js
fsin
sub
mov
stc
test
cli
xor
mov
mov
pusha
pop
(bad)
cmp
lea
(bad)
add
pop
jae
into
in
test
xor
add
sub
mov
jecxz
nop
jns
mov
xor
int
sbb
dec
sub
pop
cs
fsubr
lahf
stos
jl
in
cmp
xor
aam
pop
fild
adc
xor
in
mov
push
pop
movs
in
mov
push
inc
xchg
fisttp
fld
push
aam
pop
imul
repnz
call
popf
loop
pop
pop
icebp
push
xor
mov
cmp
mov
ds
mov
xadd
rcr
sub
push
mov
nop
or
sbb
inc
jnp
sbb
or
icebp
gs
pop
xchg
out
retf
mov
and
pop
push
push
push
jo
cmp
sub
lahf
cmp
mov
mov
out
test
adc
xor
popa
in
and
movs
arpl
add
push
int
les
xor
cld
les
jbe
seto
xor
imul
pop
addr16
stc
cmp
data16
stos
mov
pop
sbb
fcmove
cdq
sub
shl
jae
inc
mov
xor
and
ficomp
rcr
sub
call
xor
cmps
or
ja
sbb
and
xchg
imul
icebp
fdiv
icebp
and
out
adc
push
push
outs
scas
fnstsw
rcl
(bad)
mov
lds
test
jne
sbb
pop
enter
imul
das
dec
push
jg
inc
aad
mov
ss
sub
int3
sbb
mov
(bad)
in
mov
inc
mov
and
pop
call
inc
inc
jb
dec
int3
sbb
fmul
or
(bad)
gs
xor
push
mov
retf
pop
inc
jg
adc
sbb
retf
inc
ret
fidivr
cs
jnp
cmc
imul
ins
xchg
iret
xor
adc
loope
das
sbb
(bad)
dec
je
sbb
adc
cld
lods
lods
mov
das
and
jl
and
test
addr16
ret
cmp
or
inc
test
mov
vprotw
inc
leave
jp
pop
int3
fcomp
int
and
frstor
pop
popf
cld
lds
movs
cmps
jecxz
jmp
dec
loop
or
jnp
ins
dec
mov
pop
dec
(bad)
int
sti
(bad)
pop
jg
and
pop
cli
xor
(bad)
les
xor
xchg
sub
cmp
hlt
test
loope
retf
retf
cmp
or
ret
push
cmps
ins
sahf
inc
sub
sub
and
xor
call
dec
sbb
or
push
stos
lds
jmp
jp
shr
in
add
sbb
mov
or
pop
scas
xchg
or
xchg
lds
mov
dec
add
mov
jno
push
ret
sub
sbb
movs
pop
lahf
sbb
add
lahf
inc
loop
not
das
xlat
imul
or
scas
pop
retf
pop
mov
pushf
aad
sbb
outs
dec
mov
inc
pop
jno
mov
sub
sti
pop
add
add
jp
xchg
sub
test
mov
push
scas
bswap
sar
repnz
sbb
repnz
pop
icebp
enter
fild
outs
fbld
cmp
sbb
add
sar
popa
mov
add
cmp
movs
out
mov
sub
push
mov
add
repz
rol
js
sub
xchg
fcmovnu
ja
retf
retf
or
cmp
call
push
(bad)
push
push
bound
push
nop
pop
aaa
fwait
mov
fbld
sub
push
in
adc
lods
add
sbb
or
sub
stos
sbb
scas
sub
xchg
test
xor
data16
loop
sbb
dec
xor
mov
ds
aaa
enter
es
inc
into
jne
iret
sar
loopne
dec
cmp
retf
js
and
enter
dec
popa
jecxz
mov
imul
cmp
and
pushf
push
fidiv
mov
into
sub
pop
(bad)
aas
dec
jbe
xchg
or
enter
and
inc
dec
jno
push
nop
adc
fnstsw
pop
sbb
pop
ret
push
jecxz
cmp
je
adc
test
jbe
sub
(bad)
mov
mov
pop
pop
fsubr
imul
lock
pop
test
in
push
xor
add
leave
fbstp
xchg
xchg
fist
xchg
ret
jb
xor
mov
cwde
sahf
pop
cmc
mov
mov
aaa
or
repnz
fs
dec
retf
or
or
mov
inc
mov
aad
test
out
xor
lock
in
mov
adc
bound
int3
add
sub
(bad)
mov
pop
in
pop
pop
stos
and
enter
scas
fwait
pushf
ret
xor
fcom
jns
mul
icebp
add
loop
push
or
sbb
lea
jge
popf
push
jne
mov
push
test
test
mov
dec
jle
(bad)
iret
pop
cmp
jns
repnz
stos
stos
and
or
call
into
mov
jmp
aas
xchg
les
fisttp
xchg
sub
jecxz
adc
imul
fstp
stc
das
repnz
dec
add
mov
js
test
jmp
cmp
inc
and
sbb
jb
int3
cmp
inc
sbb
or
mov
lods
adc
and
nop
or
not
push
mov
and
imul
popf
pop
int3
pop
xchg
scas
xor
sbb
outs
add
aaa
aad
jle
pusha
push
or
xor
rcl
xor
int3
lods
and
xchg
mov
inc
in
or
aaa
fistp
rcr
ficomp
cmp
mov
pop
enterw
push
int3
jg
mov
(bad)
in
mov
sub
push
loopne
xlat
call
xchg
ret
outs
outs
cmp
xor
push
xchg
in
gs
ds
outs
test
inc
out
test
adc
lds
and
mov
xor
jmp
add
push
jp
sbb
push
mov
add
mov
add
sub
les
lock
jns
mov
cmp
ficomp
bound
out
test
pop
fdiv
lock
mov
xor
push
or
jae
push
icebp
mov
add
(bad)
cs
jae
mov
jecxz
mov
jae
cmp
add
mov
mov
dec
scas
dec
neg
icebp
mov
dec
xor
lods
xor
(bad)
jge
push
jnp
push
(bad)
jl
rcr
(bad)
xor
xor
jp
xchg
jg
xchg
in
shl
mov
fisttp
sahf
movs
scas
hlt
pop
mov
clc
aam
xor
sub
sub
int3
mov
mov
mov
mov
fcom
inc
cdq
adc
sub
pop
daa
aaa
leave
push
xor
aaa
nop
xchg
in
pop
jp
stos
shl
push
lods
fwait
lods
call
cwde
aas
out
fsubr
arpl
leave
rcr
inc
and
ja
int
mov
push
dec
push
out
retf
xchg
shl
call
cli
out
dec
and
call
daa
pop
and
repz
std
loop
fcomp
push
jns
pushf
aad
mov
or
push
cli
inc
test
(bad)
out
dec
xor
jbe
xchg
sub
cmp
push
jmp
push
fabs
jmp
add
ret
xchg
lods
les
jle
or
cmc
outs
rcr
(bad)
cmpxchg
(bad)
jne
lea
sbb
mov
mov
stos
pop
int
(bad)
dec
pusha
sbb
push
and
(bad)
retf
mov
jne
sbb
push
scas
xor
mov
push
into
std
das
dec
dec
or
mov
in
jae
scas
in
jns
call
fnsave
push
imul
dec
inc
add
inc
data16
pop
test
fwait
int3
loop
test
stc
test
cli
add
mov
jge
test
aaa
mov
out
scas
xor
bound
movs
jecxz
xor
stc
sub
enter
(bad)
mov
sub
cmp
test
rol
stos
xchg
shl
mov
mov
xor
fisttp
clc
fsub
ins
sbb
and
jno
and
adc
or
sub
test
fwait
sbb
jl
and
sar
fisttp
adc
retf
dec
popf
mov
mov
jmp
shl
mov
push
pop
push
sbb
sti
add
xor
add
(bad)
adc
lods
push
les
(bad)
xchg
xor
sti
jg
push
mov
push
gs
dec
stos
shl
pop
in
rcl
std
daa
jmp
jae
(bad)
jns
mov
pop
pop
sbb
repz
mov
sub
push
xlat
xlat
cdq
and
scas
mov
cmp
call
and
adc
xchg
push
jnp
leave
jmp
inc
or
push
mov
jp
sti
jns
outs
xchg
loope
loop
push
fcmovne
stos
sbb
int
fidivr
pop
mov
leave
sub
inc
fsubr
fdivr
std
add
adc
mov
push
adc
mov
or
stc
clc
outs
das
(bad)
xchg
adc
popf
mov
js
mov
jle
inc
gs
fwait
inc
aam
mov
in
jmp
pop
add
js
lods
sbb
mov
cmp
jecxz
mov
sbb
inc
sbb
inc
std
movs
imul
add
ret
mov
nop
movs
js
cld
or
(bad)
xchg
jle
lock
mov
inc
or
call
adc
fwait
push
jge
inc
mov
(bad)
iret
pop
mov
in
test
ja
xchg
add
fst
sub
imul
(bad)
stos
into
push
sar
and
call
lea
(bad)
movs
popf
les
movs
cmc
stos
xchg
or
cli
sub
and
cld
stos
test
ins
jmp
aam
jbe
popa
push
sbb
imul
cmp
je
pop
push
cmp
push
inc
fistp
sub
ins
mov
imul
scas
sbb
jbe
cwde
test
and
cmps
iret
xchg
lock
cld
lock
cli
push
and
xor
sub
push
jmp
xchg
mov
sub
outs
lods
mov
pop
fimul
aam
gs
clc
push
or
fstp
add
sub
push
fbstp
xor
inc
push
inc
pop
adc
mov
pop
out
imul
push
mov
xor
xchg
sub
out
inc
lods
std
mov
mov
cmp
jmp
in
movs
mov
xor
mov
xchg
and
aam
mov
jns
aas
mov
mov
std
sub
pop
je
mov
dec
jmp
(bad)
daa
jns
jbe
jnp
scas
lods
shl
or
lods
nop
fsubr
scas
sub
fs
dec
jl
inc
add
leave
mov
pop
ret
aad
pop
enter
and
imul
hlt
add
push
push
jns
sbb
mov
jecxz
aam
mov
repnz
(bad)
stos
shl
iret
addr16
inc
(bad)
xchg
push
into
out
jmp
(bad)
retfw
in
push
ins
xlat
dec
push
sbb
loop
(bad)
loop
ds
adc
push
jp
push
retf
repnz
pop
xchg
adc
mov
inc
push
adc
cmps
mov
push
test
js
inc
mov
es
mov
push
and
and
mov
sub
or
adc
cmps
xchg
shl
pop
ja
jo
cmp
lds
sbb
ret
leave
daa
ins
mov
add
or
sub
mov
sbb
push
imul
ins
adc
jle
int3
movs
into
repz
xlat
cli
xlat
push
mov
loop
mov
js
xchg
ror
push
dec
lea
cmp
or
xor
add
iret
xchg
pop
cmp
cmp
shl
daa
in
jns
cmp
cmp
push
mov
mov
add
in
jb
in
mov
mov
imul
xor
cmps
mov
mov
arpl
cwde
mov
mov
cli
dec
stos
jmp
cld
jno
pop
dec
cmp
stc
aam
xchg
xor
movs
jo
das
loope
(bad)
ds
inc
or
das
or
cwde
mov
pop
sbb
fsubr
pop
xchg
mov
scas
into
les
popa
dec
inc
push
add
ins
(bad)
and
xor
pop
xchg
movs
lea
popf
mov
fimul
iret
jg
ja
mov
fst
pusha
ins
add
inc
pop
sar
mov
fidivr
jmp
or
sub
push
cmp
mov
fmul
ret
icebp
lahf
push
ds
push
out
jne
stc
inc
dec
sub
lds
popa
sub
jno
lods
mov
mov
arpl
adc
addr16
push
popa
and
leave
fcmovnb
test
repnz
push
jno
test
int3
add
mov
ss
dec
mov
xchg
fimul
xchg
cmp
xor
fldcw
mov
out
lahf
shr
add
sub
jg
mov
sub
in
clc
sub
xchg
cwde
test
in
push
mov
sub
jae
xor
sub
inc
cmp
(bad)
jp
push
pop
es
dec
sbb
adc
xor
and
mov
adc
mov
ficom
mov
jnp
mov
shl
scas
jl
test
arpl
fstp
(bad)
(bad)
lods
lock
mov
jl
push
pop
push
mov
fcom
adc
dec
fs
ins
xor
clc
stc
lahf
push
lds
jno
imul
push
jb
push
inc
add
test
dec
cmp
push
jp
mov
ret
repnz
mov
into
cld
sub
aad
aas
sti
jp
dec
mov
mov
pop
pushf
ins
push
dec
ret
dec
aad
mov
leave
xor
and
(bad)
ror
mov
nop
mov
and
adc
mov
push
push
push
push
cmps
ds
mov
es
xchg
(bad)
sahf
ss
add
mov
mov
jmp
int
adc
xchg
paddsw
xor
fcmovb
dec
imul
add
fwait
js
aas
push
xchg
loope
(bad)
loopne
les
out
xor
mov
add
retf
enter
adc
bts
scas
out
mov
and
daa
stc
mov
out
out
rcl
imul
cmp
fnstenv
mov
push
sti
arpl
test
add
jmp
mov
inc
push
ror
cmp
pop
out
outs
xor
out
js
jmp
inc
mov
inc
(bad)
out
xchg
pop
xchg
xor
pop
jo
or
into
or
lock
lea
mov
clc
test
mov
pop
call
xor
mov
jb
push
sar
mov
pop
(bad)
dec
cmc
mul
repz
pop
out
xlat
add
fwait
and
push
jne
dec
jbe
mov
fsin
cmps
jp
inc
addr16
sbb
cs
mov
inc
mov
mov
mov
dec
pop
mov
mov
cwde
sub
push
das
popa
sbb
pop
hlt
add
pop
sbb
(bad)
loopne
aam
sbb
mov
cdq
fs
jb
sub
and
das
mov
stos
stc
test
scas
mov
or
mov
push
pop
sti
sub
cmps
jae
xchg
data16
push
adc
xchg
test
sub
ja
xchg
jne
repnz
pop
sbb
jmp
sahf
cmc
int
inc
shr
inc
lds
mov
add
stos
movs
retf
pop
fdiv
add
add
mov
movs
or
jecxz
cmp
cmp
scas
aas
push
pop
pop
and
mov
sbb
cmp
(bad)
push
mov
cmps
scas
test
jmp
cmp
rcl
scas
push
pop
mov
retf
scas
hlt
arpl
mov
test
ja
aaa
jae
in
(bad)
aad
jnp
clc
adc
gs
pop
(bad)
daa
and
push
out
add
in
popa
ficom
mov
jne
inc
(bad)
jno
stos
sub
ins
rol
cmp
(bad)
xlat
adc
shl
pop
mov
dec
ja
xchg
mov
jbe
or
jnp
or
cmc
jmp
lods
fisttp
das
add
ret
dec
rcr
jb
pop
fimul
fucomip
mov
inc
pop
frstor
and
pop
lods
jnp
xor
or
jmp
ror
call
enter
outs
jge
mov
jb
jmp
sbb
jp
rol
into
mov
stos
jecxz
push
jp
paddb
ins
inc
adc
jmp
xor
pop
sbb
push
cmp
rol
add
ja
sub
loopne
inc
xchg
mov
or
dec
jae
xor
imul
jecxz
cmp
cmp
scas
repnz
push
pop
lods
jno
cmps
and
icebp
mov
divps
dec
fnstenv
pusha
movs
mov
push
mov
dec
xchg
pop
dec
hlt
sbb
aad
sbb
or
dec
pop
je
(bad)
push
std
scas
jne
test
daa
push
scas
nop
dec
mov
imul
(bad)
out
jae
push
retf
dec
cmp
or
shl
movs
cmp
call
and
mov
test
sub
pop
and
loopne
pusha
mov
mov
or
scas
xlat
and
(bad)
enter
fld
sbb
dec
push
punpckhbw
sub
or
push
fimul
add
pop
jmp
bound
add
xor
mov
jmp
pop
add
pop
psubsw
aad
and
ins
pusha
xchg
push
movs
and
(bad)
jbe
fldenv
ret
mov
repz
lock
inc
add
jecxz
add
inc
cmps
add
pop
xchg
aas
sub
popf
add
aam
test
adc
dec
pop
or
dec
cmp
imul
push
pop
in
cli
in
int3
jae
mov
out
push
cmp
or
iret
dec
xchg
mov
xor
(bad)
aad
ja
jle
icebp
push
stos
rol
push
retf
fiadd
in
fidivr
mov
add
shl
int3
sti
mov
call
std
aam
sub
test
pop
addr16
js
in
pop
mov
push
jp
ja
sti
aad
mov
lea
fisub
ret
adc
sub
idiv
in
sub
out
das
dec
int3
pop
pop
lahf
mov
pop
bnd
add
test
fucomip
enter
inc
add
jle
dec
je
mov
into
adc
dec
xchg
mov
push
or
xchg
jb
dec
and
cmp
ficom
mov
fadd
inc
add
aas
test
or
cmp
sar
push
and
addr16
or
ins
add
hlt
sub
out
dec
xchg
adc
cmp
cmps
pop
sub
jecxz
scas
jo
inc
push
leave
pop
je
mov
push
sub
in
addr16
xchg
xchg
hlt
hlt
xchg
push
lods
jmp
mov
inc
std
gs
and
inc
sub
sub
out
jno
pop
sbb
into
rcr
mov
div
cli
aaa
ja
adc
lea
cmp
sahf
jae
push
aaa
adc
popa
add
test
and
cmp
xchg
test
lea
sbb
pop
adc
or
daa
icebp
push
dec
movs
sub
jbe
movs
mov
cmp
lock
loop
call
adc
push
adc
data16
and
adc
test
push
ins
cmp
cmp
push
add
fsubr
jno
xchg
js
mov
push
aam
push
pop
aaa
rol
int
les
lds
adc
test
cmps
xchg
out
call
arpl
jmp
adc
cdq
jmp
(bad)
sbb
sbb
imul
sub
mov
mov
shr
enter
xchg
and
scas
jl
push
in
sub
adc
xchg
test
pop
leave
daa
out
sbb
ret
or
sub
movs
jp
inc
mov
or
push
cmp
das
push
gs
in
xchg
outs
mov
lods
add
fsub
mov
icebp
mov
xor
addr16
fs
xor
retf
imul
xchg
scas
add
sub
sub
shl
pop
iret
jno
les
lahf
mov
ss
dec
mov
mov
cmp
pop
int
hlt
int3
std
test
jmp
mov
ins
ds
ds
cmp
fldcw
mov
push
test
cdq
stos
cmc
sub
pop
fnstcw
fadd
mov
out
addr16
sti
fsub
sub
(bad)
ror
add
push
(bad)
sub
cdq
sub
out
jp
mov
popf
daa
jae
inc
jne
add
imul
retf
imul
xchg
ror
in
pop
push
adc
fucom
or
ss
push
test
fidivr
cmps
int
xchg
popa
aaa
jbe
and
jmp
es
out
loop
scas
movs
je
daa
push
sub
movs
and
ret
retf
adc
aam
stc
test
pop
outs
push
add
pushf
dec
ficom
xchg
mov
ret
addr16
jp
lods
push
mov
shl
cdq
in
mov
mov
mov
mov
and
inc
xchg
sub
sbb
hlt
loopne
sbb
push
icebp
lods
icebp
shl
fadd
(bad)
mov
stc
dec
fwait
cmp
mov
mov
fwait
add
adc
mov
mov
iret
sub
(bad)
mov
popa
ja
dec
jl
push
sub
adc
push
or
aad
iret
movs
rcl
dec
sub
sar
es
mov
push
xor
cmps
in
ror
js
in
mov
pop
xchg
sbb
dec
outs
hlt
aaa
or
jecxz
xchg
pusha
aas
push
ins
sbb
test
outs
mov
dec
inc
mov
xor
sbb
push
xor
cmp
je
or
cmp
push
stc
fwait
or
inc
xor
rol
dec
and
ret
mov
int3
dec
outs
jne
pop
mov
call
mov
push
rol
inc
scas
xchg
fisubr
sub
cld
sbb
and
mov
(bad)
nop
test
mov
sub
xor
xlat
mov
ins
leave
xchg
and
push
fisttp
push
jecxz
mov
add
jb
mov
je
repnz
ror
ror
mov
mov
cmps
ss
jo
lock
bnd
inc
jae
retf
push
call
test
jb
in
inc
(bad)
aad
and
add
or
push
xchg
arpl
cli
push
dec
dec
stos
ror
jmp
adc
cmps
aad
mov
or
outs
mov
pop
cwde
cmps
dec
rcl
test
xchg
push
lods
adc
xchg
mov
popa
(bad)
in
mov
jmp
mov
mov
fldcw
fld
aad
mov
test
inc
dec
push
arpl
je
iret
adc
fdivr
mov
ret
and
lock
cmps
fiadd
jbe
add
cli
in
push
cli
mov
imul
push
mov
popa
scas
push
xchg
mov
fnstsw
push
jle
repz
arpl
jmp
(bad)
std
inc
pop
sbb
cmp
mov
xor
sbb
xchg
aas
inc
into
push
pop
mov
sbb
jmp
test
cwde
dec
mov
repnz
(bad)
nop
mov
or
add
xchg
xchg
or
mov
jo
pop
call
push
pop
jg
pusha
pop
ja
sti
or
pop
sub
pop
shl
cmps
rcl
add
inc
or
out
jg
inc
inc
test
push
push
xchg
cmp
push
shl
test
sar
mov
ss
loop
pop
push
xchg
xchg
xor
packuswb
sbb
xor
jbe
adc
xchg
(bad)
lods
repz
sub
stc
fbstp
call
and
xchg
mov
jb
add
inc
aad
adc
(bad)
cmp
and
jecxz
jge
iret
sbb
pextrw
jg
cdq
sub
loop
mov
imul
push
inc
daa
je
mov
div
dec
mov
fabs
mov
lds
mov
adc
cmp
adc
scas
mov
push
fndisi(8087
inc
pusha
out
cli
std
and
out
add
mov
mov
test
cmps
push
gs
popf
mov
mov
sbb
(bad)
push
jno
sbb
inc
dec
cdq
jle
sbb
out
or
test
sbb
jp
adc
add
ja
movs
sub
cmp
shr
xor
das
xor
push
push
lahf
and
xor
pop
or
aam
jne
daa
xchg
mov
cs
sub
fld
dec
dec
xchg
cmp
lahf
cmp
or
(bad)
pop
or
and
or
mov
call
(bad)
cdq
adc
mov
jno
cmp
not
jns
lds
inc
jmp
retf
stos
lea
sbb
push
push
pop
retf
rcr
mov
dec
adc
test
pop
jnp
push
shr
or
mov
pop
fist
int
out
outs
popf
ror
dec
xchg
mov
pop
sub
int3
imul
imul
mov
pop
sbb
arpl
push
sub
ins
scas
adc
cs
(bad)
pop
push
rcl
sub
cli
rcl
inc
ret
movlps
in
sbb
mov
jge
scas
mov
fsubr
retf
mov
jecxz
out
inc
dec
fmulp
xchg
and
enter
bound
(bad)
jge
push
push
dec
xor
fild
retf
and
lods
cmp
adc
jp
push
and
xor
cs
pop
scas
inc
stos
mov
jmp
mov
fistp
aas
es
xchg
fadd
sub
(bad)
sub
add
sar
adc
out
inc
test
pop
push
push
fidiv
mov
or
loop
movs
dec
mov
cmp
pop
mov
cmp
xor
or
xor
jmp
gs
aad
mov
push
pop
sub
ja
or
je
lds
or
push
xchg
and
push
loope
adc
adc
fldcw
rcl
(bad)
fdivr
jb
fcomp
dec
jb
push
movzx
gs
dec
add
cdq
lahf
sub
inc
jp
mov
jbe
inc
xor
push
jne
cld
jo
fdiv
pop
dec
fdivr
in
outs
(bad)
ror
xor
or
dec
rol
not
push
jne
ret
jl
test
and
daa
mov
std
ja
(bad)
mov
jp
dec
dec
cmc
shr
shl
xor
movs
in
cmp
mov
xchg
mov
sbb
(bad)
cmp
adc
aam
inc
ret
mov
push
push
mov
mov
push
retf
sub
arpl
mov
xchg
cmps
jp
inc
les
cmp
mov
sbb
bound
pop
jbe
adc
adc
mov
mov
in
mov
jl
pop
pop
xlat
pop
inc
je
jge
adc
fcomp
movs
fwait
sahf
lea
pop
loopne
sbb
xlat
cmps
mov
add
(bad)
mov
pop
sbb
sti
movs
ret
mov
sbb
jmp
std
in
rol
test
dec
jmp
iret
push
sub
repnz
mov
mov
into
iret
(bad)
(bad)
push
mov
in
push
or
mov
cmp
cmp
out
dec
lods
or
out
jo
pop
dec
idiv
xor
xor
mov
out
xchg
enter
inc
pop
js
movs
sti
ins
mov
in
sub
mov
add
and
xchg
sbb
arpl
push
sbb
hlt
xor
mov
inc
je
int
sub
mov
pop
pop
dec
cmps
outs
pop
stos
les
mov
inc
mov
or
add
sbb
mov
mov
xchg
jmp
aas
jg
xor
sbb
pop
mov
test
icebp
push
or
imul
xchg
fist
sub
mov
jp
cmp
xchg
mov
imul
repz
dec
inc
pcmpgtd
mov
call
mov
inc
xchg
adc
inc
dec
scas
loopne
sbb
sbb
cs
sub
enter
adc
mov
pop
repz
call
leave
inc
retf
mov
cli
mov
add
jns
mov
or
adc
sbb
mov
jno
mov
push
loop
sub
fild
pop
sahf
das
inc
(bad)
nop
push
cli
popa
adc
dec
ret
out
pop
sub
fs
sbb
dec
ss
xchg
sbb
and
repnz
outs
sub
push
jnp
or
pop
ds
cmps
imul
xchg
add
push
std
dec
dec
pop
xor
repnz
jbe
and
mov
ret
pop
inc
push
das
shl
jae
enter
and
mov
mov
xor
jge
inc
(bad)
and
push
fs
push
popf
xor
test
mov
out
jle
xlat
ds
sbb
gs
ins
mov
fcmovbe
movs
iret
sub
jl
lock
sbb
cli
retf
adc
pushf
dec
movs
pop
push
add
adc
shl
and
in
cmps
xor
inc
out
mov
in
es
adc
ja
xchg
cmp
call
jg
adc
imul
rol
shl
leave
sbb
jmp
pop
ins
idiv
sbb
jae
jle
jbe
rcl
jecxz
mov
xor
and
dec
pop
movs
out
xlat
sti
push
popa
fadd
mov
popf
popa
dec
adc
mov
mov
push
ja
pop
push
imul
or
mov
loopne
push
xchg
push
int3
movs
mov
cmc
jb
xchg
mov
(bad)
adc
ret
movs
sub
mov
movs
test
jmp
test
xor
pop
daa
hlt
out
jno
pop
test
lds
stos
mov
xor
mov
mov
push
scas
mov
lods
ins
xor
mov
cmc
jae
lods
jo
push
sub
dec
(bad)
adc
cmp
jae
and
inc
jmp
jo
stos
mov
mov
mov
jo
cmp
fnsave
mov
xor
fwait
outs
mov
in
sub
jae
sub
mov
xor
jl
xchg
sbb
(bad)
jns
jp
fisub
in
lods
clc
dec
sub
arpl
scas
xchg
aad
sub
pop
mov
jg
or
and
ret
adc
and
popa
(bad)
sbb
movs
ror
clc
pop
jo
jb
das
ret
dec
mov
call
xlat
hlt
daa
jge
inc
retf
cmps
mov
out
dec
out
dec
ins
neg
mov
mov
call
cmp
add
push
imul
out
lea
sub
loopne
jns
stos
mov
(bad)
icebp
pop
or
loopne
dec
push
cdq
clc
(bad)
dec
inc
rcl
iret
add
push
or
cli
daa
cmp
sub
xor
push
mov
retf
dec
sbb
call
sub
mov
mov
add
out
mov
loope
out
cdq
hlt
inc
jmp
push
xchg
xlat
popf
into
sub
daa
aaa
mov
std
jg
adc
outs
hlt
aaa
jo
stos
into
mov
cmp
jnp
mov
(bad)
cs
mov
test
in
push
movs
jmp
mov
jb
xchg
sbb
fisub
clc
xchg
cwde
fiadd
mul
push
(bad)
stos
mov
bound
lods
mov
mov
adc
pop
add
(bad)
inc
shl
(bad)
add
mov
rcr
dec
out
pop
add
fcom
lds
sbb
sbb
xchg
mov
cmp
sahf
cld
xor
int3
(bad)
outs
sahf
xor
imul
mov
sbb
test
loope
push
xchg
add
mov
xor
sub
imul
fadd
jle
sub
and
(bad)
mul
lock
adc
jne
pop
imul
jne
pop
pop
lahf
ror
cmp
add
sbb
popf
mov
dec
imul
outs
out
sub
jle
test
add
cwde
ret
pop
inc
pop
mov
ins
daa
dec
jb
hlt
pop
xchg
pop
xlat
jbe
jecxz
sbb
pop
dec
push
adc
test
cmp
or
cmps
cmp
add
sar
or
rcr
div
out
in
sbb
inc
dec
rsqrtps
cmp
xchg
cmp
(bad)
repz
jo
in
fwait
(bad)
jecxz
ins
mov
or
fild
mov
data16
int
push
mov
pop
adc
mov
stos
retf
mov
into
xchg
xchg
int3
mov
adc
sbb
mov
call
test
idiv
mov
jno
dec
inc
scas
dec
sbb
sub
icebp
js
add
daa
inc
(bad)
hlt
jge
pop
adc
in
mov
sbb
pop
sub
xlat
cmp
inc
jns
jns
adc
sub
movs
mov
inc
das
fmul
push
pop
call
sub
cmp
in
sahf
inc
jmp
inc
rcl
cdq
fwait
cmps
mov
aaa
push
xchg
or
fimul
push
mov
jmp
jbe
pusha
mov
push
push
call
jmp
dec
bound
pop
sub
rcl
xor
outs
cdq
dec
cwde
in
or
add
iret
add
ds
sub
rcl
mov
add
mov
in
xchg
in
mov
(bad)
ds
cmps
arpl
or
add
cmp
jge
mov
xor
jp
cmp
push
shl
xor
dec
mov
mov
shl
or
out
fs
fsub
popa
sub
mov
popf
aas
gs
repnz
mov
cld
mov
repz
pop
or
ret
ja
add
test
lods
push
mov
and
and
scas
test
pop
movs
pop
mov
test
js
inc
jecxz
std
stos
push
in
jmp
and
aas
lods
adc
dec
push
sub
inc
mov
fidivr
mov
push
and
daa
push
push
je
jo
cli
movs
mov
sahf
jno
sub
out
mov
mov
out
mov
repz
stos
adc
mov
ss
mov
or
loop
sahf
push
out
dec
xor
push
mov
sbb
jne
cdq
sub
and
pop
ins
pop
xchg
mov
push
leave
xor
sub
or
in
or
mov
shl
daa
test
jp
ins
xor
in
in
cmp
mov
sbb
jno
xor
fwait
pop
mov
cmps
cmp
xchg
dec
mov
sbb
mov
cmps
(bad)
and
jecxz
sub
js
push
and
test
imul
cmps
xchg
mov
push
xor
popf
in
fcomp
iret
sti
pop
add
mov
xor
in
adc
sbb
or
cmp
fdivr
pop
lahf
mov
nop
jmp
es
outs
repz
outs
inc
(bad)
sbb
mov
push
(bad)
rol
sbb
jmp
jo
je
aas
popf
inc
dec
jo
and
xchg
imul
and
adc
mov
xchg
add
fwait
not
fs
xor
out
xchg
pop
or
movs
and
jb
or
and
fimul
adc
cmc
fild
dec
lods
inc
leave
out
int
(bad)
mov
cli
inc
leave
or
xlat
xor
pusha
sbb
out
pop
mov
or
add
gs
push
xchg
gs
mov
cmp
sahf
fistp
and
push
add
movs
pop
fsub
gs
(bad)
push
mov
inc
nop
call
sub
adc
mov
in
movs
adc
loope
ret
or
sbb
or
push
lods
xchg
mov
cld
pop
(bad)
pop
out
pop
sti
mov
xchg
inc
push
push
icebp
mov
fild
xchg
inc
sbb
adc
jb
jp
scas
and
sbb
sbb
inc
clc
aaa
ret
xchg
sbb
enter
(bad)
jp
xchg
sub
xchg
fs
icebp
sbb
out
xor
push
xchg
jbe
xchg
and
mov
retf
idiv
mov
ds
sub
adc
sbb
mov
clc
cmp
xchg
cmp
fld
lea
adc
xchg
jbe
outs
repz
bound
and
cmps
pop
jp
or
lods
pop
xchg
mov
sub
lds
popf
neg
or
mov
cmp
sbb
pop
or
push
shr
xchg
push
iret
dec
fst
aas
rcr
jbe
ds
push
(bad)
cmp
fsub
pop
mov
dec
push
retf
dec
inc
test
jle
test
jns
mov
mov
adc
ins
push
inc
push
ds
jle
cmp
test
mov
movs
dec
pop
dec
push
xor
mov
cs
rcr
xchg
psubb
xchg
xchg
mov
addr16
sbb
mov
jp
inc
mov
cli
test
xlat
jg
sub
movs
nop
inc
mov
push
loopne
je
fidiv
mov
jmp
hlt
sbb
add
cld
or
inc
push
in
fnsave
fsubr
ret
mov
inc
ds
sbb
mov
daa
mov
jb
and
adc
jbe
retf
and
jae
xchg
adc
stos
add
ds
and
adc
pop
jg
and
adc
adc
add
jno
lock
or
xor
sbb
retf
or
push
fmul
sbb
test
(bad)
push
test
in
ret
xchg
lahf
dec
jmp
cmps
jns
and
or
inc
ja
adc
inc
and
mov
loope
movs
push
loop
xchg
jl
and
pusha
sub
call
xchg
add
jbe
xchg
addr16
inc
cmp
jl
ret
jb
inc
xor
ret
lods
xor
sub
jns
dec
mov
or
stc
mov
ins
imul
jmp
lods
fistp
dec
loopne
cmp
dec
lods
dec
jle
fistp
out
ja
xor
sub
adc
mov
pop
gs
sbb
jle
pop
aam
mov
lods
sbb
rcr
add
and
les
and
sub
pop
imul
inc
xchg
cmps
jne
fisub
xlat
and
pop
adc
mov
jnp
jp
jle
mov
sub
jge
xor
outs
ins
sub
pusha
test
jae
sti
ins
cmp
mov
js
outs
into
sub
jle
sbb
test
clc
aad
or
cmc
push
xor
dec
dec
add
sub
addr16
or
mov
xor
out
xchg
sbb
std
(bad)
jmp
and
add
(bad)
sahf
stc
adc
bound
sbb
inc
sub
inc
js
mov
daa
mov
(bad)
and
push
sti
bnd
inc
mov
loope
retf
adc
cmp
xchg
cwde
pop
xchg
cmps
out
adc
rcr
bnd
rcl
fimul
mov
jmp
xchg
es
xchg
mov
sub
lahf
push
mov
aas
loop
rcl
ret
cmp
sbb
adc
xor
jno
pop
jmp
or
mov
add
in
loope
xchg
cmp
shr
and
mov
and
sub
pop
and
je
jns
rol
xchg
mov
in
push
fidivr
pop
jmp
cli
add
out
(bad)
mul
pop
je
repz
or
mov
lods
fidivr
ds
jmp
ins
ret
push
cmc
add
xor
sbb
or
cmp
movs
jae
mov
sub
sbb
push
push
xchg
fiadd
adc
jnp
mov
or
dec
jg
mov
out
mov
out
and
sbb
arpl
inc
out
(bad)
out
movs
es
out
test
hlt
imul
sbb
jbe
push
jge
in
pusha
enterw
fcom
xchg
push
(bad)
xchg
dec
sub
inc
retf
je
das
sbb
das
push
nop
movs
or
jmp
in
mov
xchg
mov
jge
mov
cmp
retf
push
ficom
and
aaa
cmps
mov
mov
push
push
dec
mov
loop
dec
cmps
out
lods
mov
sub
imul
xor
inc
mov
xchg
shl
xor
inc
cmp
jle
ret
and
pop
dec
aam
jbe
cmp
inc
lock
pop
jo
mov
cmp
xchg
mov
mov
mov
sbb
sub
cmp
retf
jns
std
xor
pop
movs
pop
xor
leave
jbe
scas
xor
add
push
jecxz
push
push
rcr
dec
fdiv
in
not
std
ret
inc
xchg
inc
scas
fcmovnu
jne
xchg
shl
jl
jle
jnp
test
ficom
pop
mov
xor
mov
push
cmc
dec
mov
xchg
jle
bound
sbb
mov
mov
mov
in
ins
fistp
xlat
xor
and
and
clc
inc
cmps
adc
arpl
daa
jns
fpatan
jbe
movs
inc
fld
mov
and
into
jmp
fwait
cmps
in
ret
mov
xor
sub
mov
jmp
or
mov
jmp
pop
les
dec
adc
dec
push
adc
call
jns
push
and
or
and
add
jno
sbb
cmc
outs
pop
inc
sub
dec
mov
popf
scas
and
and
mov
sub
test
js
(bad)
xor
mov
push
inc
call
les
pop
sub
ja
imul
sbb
jp
into
in
inc
nop
push
inc
adc
outs
jge
jmp
jns
xchg
add
pop
cmps
adc
cmp
nop
out
shr
pop
mov
inc
xor
cmps
nop
sbb
daa
mov
popa
scas
ins
and
popf
mov
out
xchg
adc
out
mov
cmps
mov
retf
dec
push
int3
cmp
fs
mov
and
pushf
mov
xor
push
std
push
inc
popf
xchg
fs
ja
(bad)
dec
(bad)
shr
mov
push
(bad)
daa
mov
mov
adc
inc
xchg
or
rcl
cmp
sub
push
xchg
aas
les
cmp
sub
in
sbb
pop
(bad)
mov
cwde
mov
dec
sbb
movs
shr
shl
adc
int3
add
ss
dec
dec
mov
push
enter
adc
in
pop
push
jns
imul
mov
arpl
or
mov
cld
dec
out
call
push
inc
inc
aad
mov
inc
push
push
mov
iret
jl
es
pop
cmp
cmp
mov
push
or
ret
mov
add
push
dec
fisub
mul
add
cs
push
add
test
sbb
movs
adc
cmps
push
and
fdivr
frstor
test
xor
jnp
push
xchg
push
popf
and
outs
shr
ret
outs
shr
stos
lock
add
dec
sbb
jg
xchg
sbb
outs
xchg
push
fnstcw
aam
mov
es
jp
jns
fs
push
pop
shl
mov
daa
xor
mov
pop
out
dec
dec
cmps
cmp
mov
not
shl
push
mov
mov
xor
pop
enter
imul
icebp
fs
mov
bnd
sub
movs
test
mov
adc
sbb
jecxz
xchg
fbld
lds
fwait
mov
dec
cwde
jmp
push
jo
mov
rcl
clc
ret
ds
jecxz
or
in
jae
sbb
pop
adc
outs
inc
clc
xchg
ins
add
loopne
pusha
inc
mov
scas
ins
push
leave
aas
pop
mov
int
je
clc
xor
arpl
mov
fwait
lds
lea
icebp
cmp
mov
in
movs
jae
adc
push
call
(bad)
pop
add
xor
add
jbe
add
test
push
popf
adc
jmp
add
or
fimul
loop
mov
in
mov
je
pop
jp
repz
(bad)
test
mov
xchg
xor
or
call
call
enter
mov
inc
push
xchg
shl
scas
(bad)
mov
imul
lods
je
ss
fdivr
cmc
jp
mov
mov
mov
mov
lods
sub
push
into
xor
out
adc
jae
(bad)
mov
bnd
(bad)
push
lods
cmps
inc
popf
add
dec
das
add
cmc
shl
fnstcw
adc
ficomp
ficomp
sub
jmp
(bad)
ss
push
jg
loope
(bad)
cmp
pop
or
jp
mov
sbb
push
inc
aaa
bound
cdq
inc
xor
mov
out
ds
jle
push
push
in
ds
dec
dec
pop
stos
mov
or
sbb
sar
ret
fwait
and
adc
and
or
cmp
inc
sbb
loopne
jnp
or
aas
shr
cli
mov
add
test
mov
xor
mov
test
icebp
add
mov
icebp
jbe
lea
repz
jo
mov
shl
(bad)
in
loopne
inc
pop
repnz
xor
imul
mov
test
cwde
mov
inc
mov
inc
xor
into
add
retf
out
inc
or
lock
popa
sbb
add
jecxz
or
aad
inc
mov
push
adc
dec
sub
pop
int3
fwait
int
dec
mov
cmp
mov
add
lea
call
es
movs
pop
xchg
dec
push
mov
mov
gs
or
std
inc
mov
mov
sub
or
push
sbb
jecxz
push
arpl
movs
push
lods
or
add
push
std
xlat
cmp
hlt
mov
jmp
pop
loop
jbe
inc
sub
adc
(bad)
int3
adc
aam
adc
iret
int
pop
jns
mov
sub
cmc
lea
add
xor
ret
adc
mov
jns
(bad)
test
repz
and
data16
pop
push
and
adc
sbb
popa
in
push
aad
or
jno
push
pop
jecxz
add
pop
mov
loope
dec
sahf
add
pop
out
into
mov
mov
inc
jle
in
ffreep
jbe
mov
cmp
and
sbb
arpl
bound
stc
xchg
mov
fdiv
pop
pop
add
stos
push
(bad)
out
mov
fst
movs
mov
cs
jle
inc
jbe
push
ja
ins
daa
xor
sbb
jno
mov
pop
sbb
xchg
inc
dec
jnp
inc
push
(bad)
jo
xchg
dec
inc
ins
inc
push
call
and
out
fsubr
adc
in
jge
pop
pop
leave
xor
sub
call
cmp
ror
leave
repnz
push
fwait
add
dec
stos
xor
jbe
loopne
push
leave
and
repnz
popf
and
adc
mov
pop
xchg
int
cmc
xchg
js
test
push
loop
ins
mov
idiv
test
and
cmps
adc
push
leave
mov
fild
fild
aad
ret
jns
and
dec
sbb
pop
or
mov
pop
outs
mov
xor
push
out
or
out
dec
loope
mov
cmp
pushf
mov
ins
loopne
add
stos
jg
leave
bswap
les
in
arpl
cmps
ins
into
xor
add
ds
mov
movs
xchg
js
jmp
int
iret
ins
xchg
loopne
das
inc
enter
push
cli
or
ins
stc
aad
les
jbe
scas
loop
dec
shl
mov
xchg
push
rcr
retf
fwait
popa
push
push
cs
dec
or
aad
adc
fcom
cmp
pusha
fdivr
sub
cmp
iret
add
xchg
test
pusha
sub
cmp
or
(bad)
jmp
cmp
gs
and
call
mov
lods
mov
mov
dec
setnp
xchg
inc
aas
lea
add
push
daa
or
sub
inc
(bad)
and
jb
ds
repnz
push
push
jmp
data16
dec
adc
retf
mov
das
idiv
ja
outs
sbb
xchg
push
(bad)
push
adc
push
add
hlt
sub
fld
inc
aas
or
out
ins
xchg
add
fistp
jmp
xor
mov
xor
mov
movs
aad
lock
fcomp
fwait
clc
ins
xchg
shl
int3
(bad)
inc
loope
out
je
loop
int3
and
sbb
push
mov
xchg
int
loope
cmc
pop
add
shl
retf
repz
adc
xchg
adc
pop
out
test
dec
xor
repz
js
sub
or
push
retf
rol
jge
sbb
shl
in
test
adc
mov
stc
cmp
push
add
xor
xor
(bad)
mov
sub
xchg
and
jae
cmps
jo
fs
cdq
mov
aas
dec
dec
scas
fsub
shl
popf
sub
pop
jb
arpl
sbb
cmc
inc
cmp
and
jp
xchg
enter
push
out
jle
inc
sub
ins
lods
test
dec
ret
test
fild
aad
xlat
ret
shl
adc
adc
inc
rol
xchg
adc
mov
pop
int
ds
lods
(bad)
pop
movs
jbe
pop
xor
mov
shl
imul
cmp
push
neg
dec
sub
(bad)
jp
ficom
retf
(bad)
mov
ins
je
cmp
adc
sbb
iret
lods
in
push
cdq
jo
int
nop
scas
repnz
mov
pop
stc
adc
fadd
fsub
add
push
icebp
ins
mov
or
lahf
xor
test
add
out
(bad)
mov
dec
sbb
pushf
xchg
jo
pop
imul
xchg
jbe
jb
in
ret
ins
sbb
out
sub
mov
cmc
mov
mov
dec
push
inc
pop
and
fs
outs
fldl2t
loopne
ret
inc
cmp
mov
fisubr
fbld
in
sbb
jnp
das
dec
sbb
dec
lods
lock
mov
sub
fs
mov
or
sbb
ja
test
dec
jmp
cdq
add
dec
lea
sub
jl
pop
mov
sti
dec
or
mov
lock
sbb
scas
iret
fwait
je
and
and
fst
xchg
es
sbb
dec
mov
inc
xor
lods
pop
mov
lods
aaa
dec
mov
cs
mov
or
sbb
cmps
sub
adc
jae
and
push
pop
cmp
push
enter
ret
push
movs
mov
fwait
scas
sub
(bad)
mov
loop
push
mov
fstp
and
mov
cmp
cmp
jns
dec
mov
mov
push
outs
iret
sbb
mov
leave
cmp
mov
inc
imul
dec
push
xlat
in
sbb
mov
(bad)
cmc
rcl
xchg
jb
pop
xor
nop
mov
cs
sbb
cli
out
xchg
sub
out
mov
ficomp
nop
jo
and
mov
pop
popa
ja
(bad)
sub
pop
jno
push
adc
test
sub
jne
xchg
loop
pop
imul
pop
mov
mov
sub
push
fwait
stc
dec
fld
shr
aam
pop
arpl
test
ret
adc
push
xor
iret
(bad)
dec
ja
or
call
pop
sahf
inc
pop
das
in
fcom
sub
retf
mov
rcl
pop
mov
(bad)
imul
js
push
out
sub
(bad)
xor
cmp
pop
inc
sbb
and
and
mov
bound
xchg
fucomi
(bad)
jecxz
cmp
dec
mov
pop
mov
mov
gs
leave
sbb
pop
ss
aam
hlt
push
mov
outs
pop
les
es
into
mov
push
or
dec
xlat
cwde
imul
fsub
pop
mov
mov
jge
mov
pop
inc
mov
push
aas
sbb
or
cs
arpl
fucom
(bad)
and
mov
lea
std
movs
xlat
adc
jmp
adc
(bad)
loopne
cmc
or
mov
(bad)
push
cwde
fbstp
jmp
inc
enter
out
(bad)
push
jno
inc
loop
mov
pop
and
movs
leave
dec
ins
(bad)
mov
in
cmp
pop
sbb
jno
jns
sub
icebp
or
popa
shl
ins
push
(bad)
aad
int
not
and
and
cmp
or
into
les
sar
ins
lahf
add
dec
push
in
xsha256
cmps
push
test
scas
fdivrp
inc
or
push
test
xchg
sub
adc
scas
adc
lock
pusha
das
retf
mov
stc
std
nop
xchg
mov
xchg
mov
xor
adc
int
fistp
call
pop
dec
xchg
pop
enter
mov
push
shr
and
call
inc
push
icebp
mov
jns
cmp
inc
loopne
scas
push
in
out
cli
or
ret
call
and
sub
xor
enter
mov
(bad)
neg
pop
outs
sub
cmps
jmp
jbe
in
int3
push
cmp
push
call
jbe
gs
aaa
cmp
xor
imul
icebp
out
inc
pop
adc
xchg
mov
mov
xchg
gs
pusha
push
inc
add
test
mov
mov
and
dec
mov
mov
or
pusha
fwait
lods
pop
mov
sub
adc
mov
out
add
sub
mov
enter
and
scas
fsubr
cmp
pop
jbe
inc
stos
mov
test
stos
adc
push
(bad)
mov
into
dec
dec
retf
pop
dec
imul
nop
fld
repnz
ret
(bad)
xchg
or
pop
pop
out
aad
pop
call
add
arpl
stc
(bad)
pop
mov
(bad)
push
stc
pop
shl
inc
sub
lock
imul
mov
adc
stos
xor
adc
jmp
mov
jp
neg
xor
cs
ins
out
sub
pop
cmc
movs
xchg
jg
out
push
cli
xchg
iret
int
and
retf
in
pushf
and
cli
fmulp
popa
jmp
mov
adc
xchg
(bad)
das
xor
fidivr
mov
cwde
das
repz
test
jmp
mov
loopne
jbe
dec
sub
pop
pop
jp
std
jle
sub
dec
dec
push
sti
push
inc
repnz
test
out
inc
data16
jbe
mov
xor
push
out
daa
mov
mov
sub
retf
movs
shl
sbb
fcmovnbe
ror
loope
cwde
adc
dec
add
adc
cwde
mov
aas
(bad)
cmp
pmaxub
call
test
loopne
jno
loope
ret
fwait
in
push
das
cmp
inc
sub
or
and
add
mov
out
cmc
and
adc
aam
adc
sbb
mov
and
mov
in
(bad)
jo
sub
inc
ror
lods
dec
test
sbb
jne
mov
(bad)
xlat
cmps
sbb
jle
(bad)
fistp
inc
xor
lods
(bad)
stos
xchg
pushf
daa
jecxz
mov
in
clc
push
in
sub
lahf
add
inc
dec
sbb
loop
call
cld
sahf
fst
cmp
add
fwait
enter
push
xchg
push
mov
dec
sbb
push
mov
aam
rcr
pop
imul
pop
mov
xor
(bad)
stos
es
vmovntps
shl
shl
add
bound
xchg
sub
mov
inc
dec
cmp
jle
pop
je
and
in
loop
into
pop
pop
jno
jl
aad
cli
pop
pop
(bad)
les
and
shl
add
cld
outs
fs
retf
aaa
mov
push
mov
sar
outs
dec
add
icebp
lea
sub
mov
mov
out
dec
dec
add
jae
and
repz
pop
dec
jecxz
minps
push
sub
mov
stc
out
ret
dec
test
xchg
(bad)
je
retf
ins
add
lods
hlt
jmp
cs
adc
sbb
retf
leave
cmp
jecxz
sub
add
in
test
xchg
adc
push
mov
jecxz
cmp
cmps
mov
jno
push
movs
in
imul
in
daa
push
add
stos
add
inc
inc
lds
fisub
cmc
pop
inc
(bad)
js
sbb
shr
add
jmp
rol
mov
mov
jne
and
mov
jmp
jmp
mov
out
xchg
nop
sub
(bad)
mul
std
jns
mov
sub
ja
and
mov
repnz
or
int
neg
jmp
inc
mov
jmp
mov
icebp
dec
fisttp
mov
mov
inc
mov
or
sahf
pushf
sub
sbb
cmps
mov
gs
pop
jb
jns
stc
mov
adc
dec
nop
mov
neg
lods
cli
data16
cmp
push
shr
sbb
sar
fstp
ins
xchg
movs
xchg
dec
sahf
push
jbe
mov
rol
sbb
lods
mov
and
int
hlt
jo
stc
rol
adc
xor
(bad)
aad
jmp
popa
sti
inc
adc
enter
cmc
outs
movs
or
ret
cli
pop
aas
inc
outs
scas
xor
bound
pop
cmp
mov
xchg
daa
inc
adc
ret
out
nop
ja
jmp
add
retf
push
repz
dec
adc
ins
sti
jmp
sahf
sub
inc
xchg
das
sbb
dec
xchg
add
leave
mov
inc
add
jl
daa
cmp
sbb
loop
aas
sar
pop
jmp
add
mov
enter
mov
mov
in
out
jmp
pop
mov
outs
push
fcom
mov
xchg
pop
pusha
aas
push
pusha
in
loope
(bad)
in
sbb
push
adc
adc
sbb
imul
sahf
push
leave
cld
mov
sbb
jo
outs
loopne
and
sub
xor
aam
fsubr
adc
and
dec
xchg
cmp
dec
stos
fisubr
push
fiadd
jl
test
pop
lea
stos
fldenv
dec
popf
pop
push
cmc
ja
retf
jmp
xchg
(bad)
test
mov
or
call
fwait
mov
std
in
cmp
jge
ja
es
push
cmp
cmp
sub
mov
cmp
(bad)
mov
cmps
adc
ja
mov
and
mov
cdq
hlt
idiv
and
or
fbstp
pop
xchg
adc
pop
xchg
push
scas
pop
mov
pusha
nop
mov
fisub
imul
jns
xchg
xor
pop
movs
dec
loop
mov
push
inc
or
dec
cli
mov
mov
xor
push
add
cdq
test
add
pop
xor
test
and
out
sub
jbe
fdiv
inc
jecxz
mov
mov
cli
ins
ins
fdiv
leave
mov
jbe
xchg
loopne
popf
inc
dec
add
sbb
test
mov
xchg
xor
and
push
ret
mov
lea
mov
jne
pop
clc
sbb
add
adc
mov
rcr
iret
pop
icebp
(bad)
jmp
adc
inc
or
mov
add
push
cli
mov
xor
adc
pop
add
cdq
xchg
and
data16
mov
aaa
push
aaa
loopne
xchg
push
cdq
mov
shr
jbe
mov
pop
jle
shl
leave
fsubr
adc
xchg
int
dec
inc
mov
cwde
jmp
cld
repz
and
or
inc
out
dec
mov
or
sub
in
mov
call
mov
int3
cmc
jmp
mov
ins
das
jo
cmc
aad
ret
scas
fcom
clc
ss
or
ja
js
mov
out
pop
jbe
add
popf
fmul
add
cmps
ins
push
inc
sar
fisttp
sub
and
aam
call
into
inc
jbe
mul
sub
inc
jle
add
jo
mov
movs
pop
test
inc
fs
mov
lock
xchg
push
mov
cwde
add
int
ss
jl
(bad)
(bad)
cmc
out
lock
fwait
pop
cdq
std
arpl
cli
push
push
inc
add
cmp
cld
retf
mov
mov
nop
jl
fwait
call
cmp
cld
sub
mov
sbb
outs
loope
xor
fs
inc
in
add
mov
jnp
movs
xor
push
das
jno
xchg
and
imul
fisub
es
jl
mov
xchg
or
xchg
test
and
pop
aam
add
dec
div
push
xchg
aaa
or
sbb
lahf
add
sub
push
sub
(bad)
xlat
mov
fisttp
in
adc
sub
inc
imul
mov
pushf
loope
sar
adc
xchg
sub
dec
mov
in
push
lods
mov
add
pop
into
push
fidiv
ret
push
sbb
in
and
je
add
sub
sub
fwait
and
push
pop
loop
les
cmps
jns
in
in
inc
xchg
out
loope
and
push
je
and
pop
push
xor
mov
cmp
fistp
jge
sub
jg
cmp
int
sub
mov
cdq
mov
mov
fcomp
jmp
int3
jb
pop
push
mov
sub
mov
mov
jnp
into
leave
push
jmp
ins
inc
stc
cmp
sbb
xor
scas
aas
and
cmps
ret
imul
xchg
adc
mov
mov
cmp
lea
loop
xor
ret
hlt
in
int
inc
cli
push
les
sub
inc
dec
or
out
scas
call
lods
popa
push
mov
sar
mov
cmp
jl
push
lea
mov
jbe
addr16
add
jbe
sti
mov
data16
jbe
loopne
dec
ds
xchg
push
pop
mov
dec
jp
or
aam
test
mov
addr16
es
pop
adc
pop
mov
lds
push
cmp
ja
and
push
mov
jl
int3
and
and
xlat
sub
scas
xor
daa
mov
add
pop
in
movs
arpl
mov
add
push
cmps
pop
dec
test
pop
sysret
repnz
add
into
loopne
loop
sbb
(bad)
into
cli
xor
xlat
inc
loop
cs
iret
mul
imul
inc
mov
sub
sti
mov
stc
fidivr
cmp
mov
push
repnz
ja
fnstenv
retf
sahf
jl
inc
or
dec
xchg
ins
aam
adc
stc
aam
ret
add
xchg
aas
nop
popf
sar
mov
push
test
fsubr
add
sbb
popf
push
fld
xchg
xchg
mov
xchg
inc
aam
push
mov
dec
mov
xor
fisttp
fst
add
aaa
xor
push
sbb
or
outs
(bad)
cmp
inc
iret
push
sar
clc
and
repnz
mov
add
(bad)
mov
xchg
xor
ret
xor
sub
fisttp
out
push
dec
pop
rcl
sbb
test
mov
int
nop
or
cmp
mov
sahf
fst
sub
xlat
jns
repnz
ins
jnp
and
jne
clc
mov
xchg
into
inc
mov
rcr
push
aad
addr16
sbb
mov
add
sbb
or
test
pop
lods
mov
jno
enter
loope
push
call
push
loop
stos
ficomp
sbb
pushf
xchg
dec
lock
into
in
sub
sbb
int3
bound
(bad)
sti
and
inc
ret
enter
and
rol
test
cmp
jb
and
sbb
xor
les
push
fucomi
lods
fwait
xchg
adc
or
ins
sbb
mov
hlt
cmp
push
mov
aas
das
pop
call
mov
lock
xlat
pop
sub
and
mov
int
iret
das
cmp
sbb
ss
hlt
sub
mov
(bad)
xchg
aam
inc
adc
adc
scas
movs
mov
mov
ror
bound
inc
jb
cmp
stc
jmp
mov
add
ror
dec
inc
pop
xchg
pop
push
adc
push
bound
ror
cmps
jno
push
xchg
fadd
test
cs
jb
or
pop
mov
cld
enter
enter
xor
test
iret
jno
push
ror
popf
pop
aas
sbb
jg
dec
stos
jmp
xchg
dec
retf
cs
cmc
std
and
cmp
jp
cmps
(bad)
add
sub
fnsave
clc
or
inc
ror
lock
fist
jle
xor
inc
xchg
sbb
mov
ror
adc
jnp
in
(bad)
sub
inc
push
dec
call
xlat
aas
ins
jmp
ret
cmp
push
xor
jns
inc
mov
push
and
mov
jmp
ret
adc
sub
or
into
test
or
mov
cmp
push
ds
pop
push
pavgw
xchg
push
push
aad
jl
dec
jmp
aaa
xchg
scas
mov
inc
jmp
xchg
inc
mov
jle
dec
nop
lods
(bad)
sar
cwde
adc
pop
or
out
repnz
push
jbe
out
cmp
std
lea
pop
sbb
sub
push
pusha
dec
aam
or
xchg
and
xor
add
pop
test
mov
int3
leave
jle
adc
and
jo
lahf
or
sbb
ins
ins
fiadd
push
sbb
out
sub
or
repnz
xchg
xchg
rol
pop
jns
push
cmp
and
xchg
jo
add
out
ficomp
icebp
inc
sbb
retf
sbb
cmp
xor
aas
cmp
test
(bad)
jge
mov
imul
icebp
inc
xchg
out
mov
loope
das
dec
pushf
ss
pop
(bad)
outs
imul
out
sti
outs
or
jb
sbb
inc
mov
pushf
sub
jb
ret
mov
jne
jmp
loop
test
retf
and
xor
push
cmp
fwait
jne
outs
jle
cs
xchg
or
mov
scas
imul
in
or
sbb
in
mov
pop
jg
test
retf
dec
mov
stc
sar
or
imul
sub
xlat
popf
rcr
xor
jmp
das
sar
and
outs
and
pop
inc
movs
(bad)
mov
jg
mov
sbb
(bad)
jmp
leave
mov
xchg
jmp
ffreep
mov
aaa
cmc
cld
arpl
test
pop
add
push
fsincos
data16
repnz
xchg
ins
pop
mov
and
out
adc
cwde
cmp
mov
fcom
int3
fsub
push
mov
mov
das
lods
test
mov
cmp
lock
pop
std
push
or
push
test
scas
jle
cmps
pop
(bad)
pop
inc
scas
jo
xchg
lock
rcr
jae
mov
clc
jbe
sbb
inc
into
jle
mov
dec
xchg
mov
enter
xchg
(bad)
dec
mov
in
shl
mov
xor
mov
cmps
dec
adc
in
dec
or
dec
pop
mov
xchg
scas
and
test
push
and
mov
es
or
dec
int3
bound
sub
and
push
fdivr
(bad)
movs
retf
in
sub
xor
test
ror
push
cmp
adc
sub
add
mov
pop
dec
aas
cmps
or
pusha
enter
test
jb
mov
jb
lock
ror
xchg
in
pop
out
cmps
push
or
das
pop
dec
rol
ret
xor
mov
retf
sbb
sub
call
or
pushf
jae
sub
sub
shr
cld
js
idiv
loop
xchg
es
pop
clc
pop
push
inc
mov
xchg
dec
mov
mov
jmp
out
cmp
loope
movs
xor
xchg
add
adc
fsubrp
test
es
adc
push
arpl
pop
test
les
dec
div
stos
adc
lea
clc
movs
mov
(bad)
out
jmp
fstp
fsubr
(bad)
mov
mov
add
mov
sub
ret
jo
rol
ror
push
(bad)
sub
push
bound
jecxz
fcomp
movs
in
in
push
jle
xchg
pop
pushf
int3
rcl
daa
jmp
out
cwde
pop
inc
sbb
mov
jg
and
lods
sahf
ret
loope
jmp
shl
or
add
addr16
cmp
gs
adc
dec
into
xchg
fbstp
enter
mov
in
cmc
mov
retf
dec
outs
mov
dec
rcl
mov
fistp
(bad)
das
mov
jae
loopne
cmp
jne
push
inc
mov
rcr
enter
pushf
xor
jno
imul
jge
xchg
sbb
push
mov
fist
into
pop
or
add
cmp
cmp
jmp
push
mov
dec
ja
jle
(bad)
mov
outs
int
or
xlat
sub
cli
cmp
call
iret
cmc
jle
imul
jecxz
in
add
push
inc
mov
pop
retf
enter
xor
mov
adc
pop
(bad)
or
jg
sahf
xor
adc
retf
js
jne
push
dec
xor
mov
sub
mov
mov
(bad)
loop
pop
sar
cmp
inc
enter
cld
sub
stc
push
outs
je
dec
jmp
jg
cmp
mov
retf
jg
out
(bad)
out
and
dec
iret
xchg
mov
push
and
xchg
jecxz
idiv
mov
retf
mov
dec
imul
(bad)
popa
js
js
push
clc
mov
div
dec
mov
mov
dec
bnd
std
pop
jmp
or
or
xor
in
ss
out
inc
ins
loop
pop
and
(bad)
push
sbb
push
test
dec
loope
mov
mov
mov
aam
mov
push
or
fwait
mov
(bad)
or
inc
jle
mov
mov
jmp
mov
js
(bad)
and
add
and
shl
or
xchg
aaa
sbb
mov
dec
ss
xchg
push
inc
ja
adc
popa
push
dec
dec
retf
repz
push
adc
cdq
in
fnstsw
cmp
inc
inc
retf
mov
psrlw
jne
in
imul
and
inc
jl
fadd
outs
aam
jns
in
push
sahf
adc
and
das
jle
lea
stos
out
push
cmp
mov
adc
push
jbe
xchg
mov
and
test
cmp
sub
enter
push
and
in
out
pop
or
mov
fst
mov
out
lods
lods
xchg
pop
jo
inc
gs
fbld
mov
mov
and
(bad)
xchg
push
xchg
mov
or
ficomp
lods
outs
mov
stc
jmp
cwde
jbe
jmp
test
add
sbb
mov
dec
stos
movs
lods
movs
fcomip
pop
inc
ins
push
pop
das
dec
mov
mov
(bad)
jp
inc
inc
in
push
cmp
add
mov
and
outs
cwde
and
push
scas
pushf
nop
(bad)
stos
mov
fwait
aaa
xor
sti
imul
lods
(bad)
mov
repnz
sbb
stos
xchg
out
adc
xchg
mov
jbe
mov
cmp
aas
jge
ja
es
stos
mov
icebp
pop
enter
cmp
push
mov
mov
dec
dec
sahf
push
fs
dec
mov
mov
adc
mov
imul
pop
ret
mov
call
scas
mov
jle
in
xor
cwde
cmp
push
lods
sbb
popf
test
add
and
pop
push
pop
sbb
out
lea
sbb
push
arpl
jne
cli
mov
gs
not
cld
leave
xchg
pop
je
dec
push
ror
ds
inc
mov
jne
mov
popa
mov
mov
pop
xchg
cmp
inc
fistp
imul
and
jb
xor
and
pop
or
call
test
and
dec
push
inc
xchg
add
mov
pop
pop
inc
xor
movs
xor
call
sub
aaa
sysret
in
mov
retf
mov
adc
add
iret
xor
jnp
dec
pop
or
cwde
and
test
mov
add
add
push
cmps
xchg
sbb
jnp
ins
fs
fcomp
push
imul
ret
dec
inc
sub
mov
lods
ds
stos
lods
mov
sub
xchg
int3
sbb
(bad)
sti
lds
jmp
aaa
out
loopne
popa
out
xchg
adc
xchg
push
and
(bad)
std
mov
(bad)
push
and
bswap
loope
mov
mov
xchg
es
(bad)
shl
mov
dec
popf
mov
fbstp
or
adc
aaa
leave
in
fcom
add
cmps
dec
cs
les
push
jp
xor
pop
mov
jmp
xchg
(bad)
dec
push
mov
test
xchg
out
popa
inc
stos
test
arpl
fsubr
bound
div
xchg
push
scas
xor
or
push
bswap
aad
jl
scas
js
data16
xor
ja
cli
inc
pop
add
dec
push
fld
out
loop
(bad)
loope
sahf
xchg
adc
in
loopne
gs
sti
je
fstp
gs
cmp
jmp
dec
jbe
std
or
int
sub
into
mov
retf
ins
dec
dec
les
and
ss
shl
movs
icebp
jmp
lods
or
push
jbe
rol
push
stos
adc
rcr
sbb
inc
jbe
mov
ins
push
int
fld
inc
in
xor
inc
xor
(bad)
or
mov
pop
dec
jp
stc
call
push
adc
sub
sbb
sub
repnz
fisttp
mov
xlat
jns
fwait
adc
mov
stos
ror
out
pop
jb
xchg
xchg
mov
mov
lea
sub
add
outs
sbb
mov
or
sub
int
or
scas
cdq
into
bound
arpl
xchg
dec
pop
lods
call
xchg
sahf
cmp
rcl
cmps
ins
js
pop
mov
jno
bnd
adc
dec
sub
das
mov
aaa
call
jecxz
mov
idiv
sahf
nop
sub
dec
dec
push
xchg
dec
sub
fsubr
inc
jns
neg
pop
movs
jns
bound
loopne
mov
and
mov
push
sahf
fiadd
das
retf
inc
in
pop
(bad)
ins
xchg
imul
out
or
adc
and
inc
and
movs
dec
or
pop
imul
movs
push
pusha
jmp
jno
pop
lods
ret
xor
int3
call
jg
pushf
jnp
lahf
xchg
add
scas
xchg
leave
sbb
xchg
sub
xchg
cwde
mov
sbb
jle
push
cld
(bad)
mov
fs
cmp
loopne
dec
pusha
neg
retf
arpl
xchg
add
scas
outs
jno
sbb
hlt
cmps
and
in
out
(bad)
mov
fadd
inc
or
jmp
sub
adc
es
xchg
sub
xchg
sub
cmp
dec
call
add
mov
mov
ficom
inc
lods
in
les
daa
adc
pop
fwait
push
xor
(bad)
sahf
inc
out
imul
out
jne
jle
mov
add
dec
call
enter
enter
jge
xchg
mov
pop
jg
mov
sar
test
in
dec
movs
xchg
sbb
or
mov
inc
xor
jne
and
sub
sbb
fwait
mov
mov
jmp
fs
cld
call
in
arpl
lds
out
xor
out
jns
or
sub
call
dec
jae
xchg
cmp
pop
loopne
outs
sets
jnp
inc
je
dec
fxtract
ins
mov
imul
data16
ins
data16
lods
lods
cmp
js
(bad)
adc
fsubr
sbb
pop
mov
imul
mov
shl
jno
inc
clc
imul
call
sbb
dec
mov
es
dec
push
mov
aam
test
stos
test
sbb
cmp
int3
rcl
mov
fs
add
mov
ret
cli
icebp
cdq
push
mov
scas
pop
and
inc
mov
pusha
outs
pop
sbb
fs
icebp
fst
dec
lods
push
(bad)
push
fisttp
sbb
jne
imul
xchg
xchg
clc
mov
sbb
inc
mov
call
mov
push
test
fnstsw
cmp
or
icebp
je
lahf
jp
das
outs
push
outs
adc
or
aam
sahf
pop
mov
mov
out
cmps
mov
jge
push
out
icebp
add
retf
cmps
lods
pop
mov
aas
mov
dec
mov
mov
dec
lods
xchg
stos
setb
dec
shl
pusha
outs
test
jmp
fwait
cdq
xor
call
shl
push
test
jb
daa
pop
sub
psllw
cmp
mov
sbb
lea
push
adc
inc
and
add
(bad)
movs
pop
push
or
pushf
inc
repnz
jmp
sbb
sti
retf
aad
xor
not
loop
push
inc
cwde
or
or
or
aad
mov
dec
jb
dec
xchg
test
dec
std
dec
push
out
fldcw
(bad)
and
int3
jecxz
retf
lds
scas
dec
inc
dec
mov
test
(bad)
cld
(bad)
imul
popa
add
and
inc
mov
ds
inc
imul
add
ror
in
and
sbb
call
cwde
sbb
push
cmp
leave
out
or
aad
and
call
cmp
sbb
xchg
xchg
pop
loop
call
mov
lock
or
pushf
xor
and
cli
(bad)
out
xor
push
scas
xchg
cwde
iret
int
pop
jl
sub
adc
test
mov
sub
cmp
xor
fmul
std
in
xor
lock
inc
dec
xchg
ds
ds
xchg
scas
inc
sub
and
cmp
lds
in
fcom
sbb
in
cmp
cwde
add
pop
inc
jmp
in
lea
call
sbb
or
adc
ror
into
pop
and
dec
cs
lds
loope
adc
outs
mov
add
aad
sbb
cmp
fnsave
inc
sub
inc
sub
push
mov
cmp
bound
sub
iret
sti
or
addr16
push
or
sub
jo
pop
mov
clc
jmp
addr16
jbe
xchg
cld
rcr
cli
fst
inc
sbb
lods
jge
repz
shl
push
sbb
sbb
pop
jo
jns
enter
pop
sub
mov
add
push
pop
ret
cmc
in
rcr
pop
xchg
and
adc
cmp
xor
(bad)
sbb
adc
or
vmovsd
je
stos
test
sar
sbb
out
movs
ins
and
mov
test
outs
cmp
pushf
addr16
cmp
inc
adc
imul
lahf
and
and
cmp
stos
test
sub
and
test
cmps
mov
jne
cmc
fld
xchg
and
mov
ss
cmps
sbb
inc
adc
(bad)
in
in
mul
jg
add
add
jnp
dec
xor
dec
inc
cmp
cmps
jns
aam
movs
test
outs
out
xchg
imul
ins
mov
jg
dec
inc
or
mov
push
sub
jae
imul
(bad)
mov
dec
icebp
test
addr16
push
xor
push
push
js
or
out
add
ins
js
mov
push
cmp
imul
loopne
call
call
push
repz
sti
test
or
inc
aam
pusha
movs
cmp
repnz
shl
sbb
cmc
movs
mov
stos
ds
out
retf
mov
sahf
retf
popa
sbb
mov
dec
sub
sub
in
(bad)
call
dec
dec
dec
sub
call
idiv
xchg
out
or
data16
mov
lock
lds
mov
cmp
xchg
cmp
(bad)
cmc
mov
or
pop
rol
or
push
ret
stos
out
stos
lahf
sbb
and
imul
inc
add
jo
mov
cli
stos
push
int
mov
imul
dec
lods
jp
ror
imul
imul
mov
ss
dec
mov
(bad)
jo
push
inc
cmp
in
jp
dec
push
shl
(bad)
es
in
aam
push
std
or
movs
mov
pop
(bad)
stc
pop
scas
mov
cmp
jecxz
jle
push
xchg
sbb
in
scas
fwait
arpl
enter
cwde
sub
add
sub
sub
xor
cmps
push
xor
jne
adc
pop
(bad)
call
cmp
jnp
fisub
fwait
call
sti
fsubr
xchg
dec
stc
cld
sub
xchg
cs
rcl
and
pop
adc
cs
addr16
cmp
sbb
jge
push
fld
mov
or
cmp
xchg
nop
nop
ds
mov
mov
bound
fdiv
mov
push
mov
inc
stos
cmp
adc
addr16
mov
xchg
or
add
add
cmp
out
mov
les
lods
jmp
push
pushf
adc
push
movs
cmps
inc
into
xor
mov
sub
inc
nop
clc
xchg
inc
imul
addr16
jmp
xchg
cmc
jge
cmp
push
clc
(bad)
fcmovnbe
jne
mov
and
xchg
dec
inc
inc
xlat
push
xor
scas
repz
push
sbb
inc
jbe
sub
add
loopne
pop
enter
add
pop
pop
pop
sbb
lea
movs
adc
loope
ficomp
jecxz
jp
popa
in
(bad)
jl
push
inc
dec
call
sub
pop
(bad)
jl
mov
push
movs
xor
lds
jmp
sahf
out
lock
ror
sub
out
rcl
shl
inc
xchg
and
jecxz
pusha
sub
aad
dec
mov
or
adc
leave
and
pop
nop
popf
pop
mov
jl
or
mov
pushaw
lods
add
xchg
adc
not
movs
mov
into
lods
nop
xor
cmc
and
jg
mov
inc
and
daa
int
jmp
inc
cld
into
fsubrp
imul
in
or
push
sub
cld
push
push
aaa
xchg
fisttp
gs
js
nop
bound
mov
jns
sahf
mov
sub
push
loop
popa
mov
into
scas
int3
cmc
xchg
xchg
xchg
xchg
inc
and
add
adc
pop
and
mov
mov
mov
mov
retf
in
or
mov
jmp
ds
out
inc
es
adc
and
iret
push
popa
(bad)
or
movs
pop
sahf
xchg
mov
pop
push
inc
sbb
push
fwait
mov
test
inc
sahf
add
xor
and
sub
rol
sahf
add
push
fisttp
or
mov
and
(bad)
sub
lods
add
fs
adc
fistp
inc
pop
mov
js
fimul
test
cmps
adc
jne
or
jno
xor
repz
pop
push
mov
(bad)
xor
jns
mov
sbb
xor
lods
sbb
lods
fisttp
push
and
inc
xchg
lea
jns
adc
push
fiadd
jne
sbb
addr16
or
int
ss
rol
cmps
sahf
push
add
mov
xor
inc
movs
add
mov
mov
lds
mov
and
test
rcl
xchg
vxorps
(bad)
or
and
xchg
mov
and
sub
jo
mov
jb
retf
dec
pop
xor
fwait
pop
mov
jbe
ja
mov
sbb
add
pop
test
rcr
xchg
fs
jge
push
js
outs
scas
ffreep
jnp
(bad)
leave
or
pop
jge
push
xchg
je
add
in
adc
sub
jl
xor
ror
push
test
cmp
push
movs
jmp
lahf
push
sub
fsubr
mov
push
jbe
aas
lods
leave
sub
jge
(bad)
mov
or
dec
inc
fmul
dec
out
data16
gs
push
push
mov
mov
or
aaa
cld
jno
pop
mov
inc
dec
stc
(bad)
not
jb
mov
and
pop
lods
add
iret
and
(bad)
add
xor
mov
outs
enter
mov
pop
inc
sub
out
(bad)
adc
mov
dec
fcmove
call
sbb
push
or
sbb
cmp
push
jmp
mul
xor
jbe
aam
in
inc
inc
push
mov
add
push
outs
mov
sbb
xlat
mov
jmp
cmp
add
mov
lahf
sti
sub
clc
in
scas
lea
in
inc
xchg
sub
shl
xor
inc
mov
pop
mov
mov
adc
lea
mov
add
inc
out
ret
push
ss
call
fnstenv
pop
stos
(bad)
jl
in
loope
loopne
pop
or
nop
add
mov
dec
pop
mov
push
mov
sahf
cmc
cs
out
sub
jmp
jmp
nop
jb
inc
out
cmps
dec
cmp
stos
add
out
add
mov
sbb
test
sub
and
lea
mov
adc
iret
push
and
fnstsw
mov
ffree
jmp
or
icebp
inc
sbb
jp
inc
sub
dec
aaa
imul
adc
cmps
(bad)
mov
lods
enter
fs
sub
jne
hlt
add
sbb
mov
cmp
pop
call
pusha
bound
sbb
(bad)
arpl
dec
push
shl
dec
into
enter
inc
or
cmp
ret
push
clc
pop
mov
mov
popa
(bad)
or
call
pop
xor
and
jno
(bad)
mov
out
sbb
loop
pop
aam
fmul
sub
stos
call
push
push
sub
shl
mov
jne
pushf
cmp
daa
out
pop
gs
int3
and
(bad)
and
in
jg
jns
into
and
inc
dec
xchg
ins
lods
jno
jmp
jge
jle
and
mov
outs
or
jg
pushf
jmp
jo
lahf
js
and
jbe
and
(bad)
mov
sub
xchg
mov
mul
movs
ficomp
inc
adc
jmp
add
fdivr
out
jle
dec
mov
mov
push
arpl
imul
or
mov
mov
ss
jge
lahf
dec
fidivr
int3
test
in
mov
repz
out
add
loope
dec
dec
and
mov
xor
scas
out
not
mov
adc
xchg
mov
xor
jmp
bound
cmps
adc
and
mov
enter
push
dec
aas
mov
mov
(bad)
jp
ror
inc
or
mov
xchg
movs
lahf
inc
jae
js
cdq
(bad)
sub
sahf
or
mov
push
xchg
test
dec
sar
pop
in
rol
in
or
hlt
lea
mov
xlat
lea
mov
pop
arpl
dec
mov
push
sub
jge
(bad)
mov
push
mov
loope
sbb
fisubr
xchg
and
dec
nop
nop
dec
cmp
lds
cmc
sub
mov
jmp
aas
into
ins
rcr
xor
mov
or
push
mov
or
das
adc
xor
test
ins
sbb
xor
sbb
xchg
lds
retf
xchg
push
jle
pop
dec
lods
push
ficomp
xchg
mov
and
fsub
bound
aam
(bad)
jmp
and
fiadd
mov
ja
icebp
jl
(bad)
pop
sub
aaa
xchg
test
xchg
fstp
mov
sbb
ror
pop
mov
dec
imul
bound
mov
mov
and
loope
ret
push
fsub
(bad)
not
and
(bad)
enter
add
mov
xor
cdq
and
push
sub
outs
movs
repnz
fdiv
mov
cmp
mov
xor
sbb
jne
mov
push
(bad)
in
or
(bad)
imul
jle
jnp
xor
in
xchg
sar
scas
adc
not
and
cmp
retf
mov
add
mov
rcr
or
fucomi
jmp
xor
mov
cli
sub
mov
test
mov
cli
retf
jge
push
outs
sub
mov
ds
adc
out
outs
mov
out
xchg
pop
jmp
imul
push
xor
sub
inc
in
ins
arpl
(bad)
cmps
clc
cwde
loope
in
cwde
sub
mov
das
adc
stos
(bad)
(bad)
mov
adc
adc
fdivr
outs
jl
cmp
xor
pop
sbb
out
(bad)
fidivr
lds
jmp
or
adc
test
sahf
cwde
mov
inc
lods
mov
xor
push
pop
jecxz
test
aas
es
fdivr
xor
fs
test
inc
push
jl
leave
ds
inc
cwde
gs
pop
jecxz
sub
hlt
jle
adc
jns
push
icebp
jb
jg
rcl
xlat
fmul
mov
or
jle
push
dec
loop
dec
mov
adc
pop
pop
mov
xchg
fdiv
mov
in
pop
or
ins
daa
mov
push
push
pusha
dec
(bad)
cwde
jmp
popa
arpl
mov
sub
int3
mov
stos
push
xchg
mov
cld
rcr
cld
jnp
pop
pop
addr16
xor
and
mov
out
xor
std
in
xchg
pop
mov
gs
or
pop
movs
pop
dec
lods
cmp
fcmovnb
adc
sbb
cs
hlt
mov
jae
lods
mov
mov
and
fld
push
mov
out
call
fimul
cmp
popa
pop
push
popa
mov
dec
fdivr
lea
popf
jo
aam
lahf
xor
sub
mov
sub
inc
jo
into
mov
cmp
popf
movs
push
imul
adc
mov
pushf
test
aaa
fistp
imul
(bad)
int3
mov
push
fstp
inc
dec
dec
popa
lea
xchg
ret
pop
add
jbe
rcr
pop
aaa
shl
lahf
std
fsub
jg
xchg
inc
ins
inc
test
push
or
out
inc
iret
push
inc
sub
dec
sub
call
(bad)
xor
stc
es
out
cmps
add
gs
loop
xchg
inc
and
sbb
loop
(bad)
div
call
shr
scas
nop
lea
adc
mov
aas
lods
jne
pop
cmps
unpcklps
arpl
in
sbb
in
lods
loopne
jl
ja
test
push
sbb
out
inc
adc
xor
xor
mov
ss
push
ja
jno
jmp
(bad)
mov
test
sbb
sub
sbb
or
mov
add
cdq
aam
and
addr16
jle
cs
and
push
mov
(bad)
cmp
fwait
sbb
repz
jns
in
imul
lock
push
shl
leave
xchg
fsubr
add
icebp
jmp
rol
gs
cmps
cmp
and
pop
mov
mov
ins
xchg
xchg
and
fild
sbb
and
cwde
rol
sbb
mov
je
gs
sbb
pushf
push
cmp
xor
mov
iret
xchg
jne
push
aad
mov
sbb
icebp
add
aas
jae
rcr
mov
mov
dec
aam
mov
cwde
mov
or
inc
xchg
push
repz
mov
nop
jnp
dec
clc
cmp
dec
nop
push
loope
sub
dec
aaa
scas
lods
pop
mov
mov
cmp
jo
ror
pop
push
pop
cmp
add
ins
xchg
mov
and
test
push
and
sub
test
sub
dec
sahf
data16
call
shl
jmp
sub
sbb
aad
stos
xchg
sbb
lea
and
add
mov
arpl
(bad)
cld
sbb
aas
test
mov
loope
movs
fwait
loop
sbb
movs
push
xchg
and
imul
pop
mov
je
dec
or
loop
add
adc
or
out
cmp
(bad)
nop
jno
lods
or
or
out
inc
outs
mov
or
dec
ffreep
sbb
and
xchg
imul
pop
adc
and
mov
out
add
jne
and
in
leave
xchg
lds
mov
mov
mov
loopne
xchg
and
shr
jns
cmp
dec
and
dec
jecxz
mov
push
das
mov
dec
cmp
jmp
mov
pop
out
ror
mov
loopne
popa
mov
xlat
mov
push
adc
sub
ins
mov
iret
or
fisub
fimul
add
ds
xlat
push
adc
xchg
dec
inc
cmp
jo
pop
sub
ds
pop
test
ret
call
jge
pop
scas
shl
hlt
mov
jg
sahf
repz
xor
and
sbb
inc
pop
je
mov
mov
lea
push
lahf
outs
xchg
jb
nop
xchg
sub
xor
jae
xor
xchg
cmp
add
stc
(bad)
stos
pop
jmp
neg
jo
ret
fstp
je
inc
in
sahf
push
(bad)
cmp
loopne
push
es
fld
inc
retf
push
cmps
cmp
mov
gs
and
out
sti
scas
inc
xchg
scas
repz
nop
add
cmp
push
sbb
sub
xor
mov
and
and
popf
inc
lahf
int3
mov
push
xchg
loope
inc
inc
mov
not
xchg
inc
mov
inc
outs
mov
addr16
pop
imul
adc
test
push
push
add
push
dec
adc
mov
ds
xlat
test
dec
xchg
mov
pop
stos
retf
into
xchg
daa
retf
jl
cdq
xor
add
push
jno
mov
and
inc
test
sbb
ret
xor
ss
and
dec
jno
neg
push
lds
xchg
or
hlt
sub
dec
add
add
or
xor
retf
out
xchg
in
in
fcmovnu
nop
adc
lods
add
stos
mov
xor
add
daa
retf
pop
enter
test
ins
xchg
push
cld
dec
sub
ret
(bad)
int
mov
xchg
call
jae
jbe
jnp
es
test
push
or
call
or
shl
inc
daa
inc
cmp
ret
imul
xchg
repnz
loope
fiadd
pop
sbb
jnp
lods
pop
fs
lock
cwde
adc
sub
retf
cmp
push
adc
or
sub
cdq
adc
pop
ins
xor
out
sbb
scas
adc
mov
out
outs
fiadd
jmp
sti
pop
push
shl
scas
outs
xor
mov
or
int
fwait
neg
loope
je
sti
stos
sub
out
loop
retf
pusha
ins
push
into
cmp
fsub
mov
mov
fs
mov
je
adc
xor
mov
mov
mov
mov
adc
mov
jecxz
retf
lea
retf
cmp
cmp
shl
mov
xchg
xchg
test
xchg
jo
hlt
or
pop
push
push
add
and
and
scas
jmp
outs
push
jge
adc
xor
fsub
or
mov
adc
add
sub
call
retf
mov
stos
fchs
adc
adc
lods
int
stos
fidiv
pop
mov
fldcw
shl
(bad)
in
iret
xor
inc
ret
ret
cli
adc
xor
addr16
mov
ins
mov
xchg
scas
jge
add
bound
or
retf
sbb
push
sub
cmp
mov
rcl
sub
mov
fisub
call
adc
sub
imul
mov
inc
inc
cdq
fisttp
aad
adc
dec
ret
ins
jo
and
sbb
mov
cmp
rol
and
mov
or
lock
jge
call
sbb
jns
inc
sti
js
test
push
ds
jne
loop
xchg
pop
mov
lods
lock
pop
outs
cmc
fldcw
jg
inc
sbb
adc
xchg
push
mov
js
xor
js
jg
add
jmp
sub
adc
hlt
push
pop
cdq
ja
sub
aas
fild
dec
lea
mov
ror
sbb
sbb
adc
call
cmps
loop
sahf
push
sbb
pop
div
jmp
add
addr16
loopne
jne
neg
and
ret
(bad)
movs
add
jne
push
sar
dec
cli
leave
mov
repz
pop
xor
fbstp
int3
fwait
xlat
adc
dec
pop
mov
pop
mov
lock
sub
mov
cmp
push
or
mov
test
jne
mov
bound
lods
ror
fnstcw
jmp
push
aad
cmp
std
mov
jecxz
dec
cdq
test
xchg
mov
dec
xchg
rcl
mov
mov
psubsb
mov
xlat
popa
out
arpl
(bad)
pop
pusha
fadd
xchg
popa
push
aas
fwait
sbb
add
cdq
out
pop
mulps
stc
push
mov
adc
test
lahf
xchg
test
inc
inc
dec
push
sbb
sub
sbb
push
daa
push
enter
mov
xchg
mov
add
xchg
sbb
mov
dec
fdivr
pop
pop
call
and
sub
push
aas
jmp
into
fimul
inc
ret
lods
fistp
sub
daa
(bad)
xlat
mov
xchg
add
xchg
mov
imul
aam
and
out
cmp
cli
dec
in
xchg
lock
inc
mov
mov
push
inc
out
push
pop
push
rol
inc
sbb
mov
add
movs
test
sub
xchg
mov
sahf
hlt
xchg
repz
pop
cmp
lds
sub
adc
jb
add
repnz
xchg
cmp
aam
dec
hlt
adc
sbb
imul
xchg
inc
adc
loopne
inc
xor
or
nop
xchg
xor
lahf
cmp
xchg
pop
inc
pop
lods
sub
ret
lahf
xchg
das
into
push
adc
dec
fidivr
or
(bad)
sub
shr
jo
repz
sub
cwde
push
test
(bad)
call
pop
dec
(bad)
pop
ret
inc
push
inc
mov
pop
aas
xchg
adc
cdq
movs
add
xchg
retf
pushf
add
mov
(bad)
xor
jnp
fild
add
out
(bad)
mov
lahf
arpl
mov
(bad)
fild
sub
or
cdq
add
mov
test
dec
repnz
fimul
fisubr
pop
pop
outs
fs
adc
fist
inc
inc
mov
and
sbb
loopne
into
and
dec
or
and
(bad)
dec
(bad)
push
int3
push
sub
cmp
cmc
repnz
mov
xchg
xor
jmp
and
mov
loope
repz
ret
outs
lods
dec
mov
xlat
mov
es
cmps
cwde
bound
adc
inc
add
cdq
add
dec
adc
nop
mov
xchg
std
jmp
div
les
ja
fsubp
shl
sbb
call
jg
je
rol
sub
jle
mov
shr
imul
sar
leave
sub
sbb
adc
mov
cmp
and
sbb
adc
add
push
push
push
xor
pop
jmp
cmps
jmp
(bad)
xor
cli
pop
add
jno
inc
inc
adc
into
add
jmp
and
sbb
mov
jmp
outs
(bad)
pop
mov
mov
dec
xor
mov
mov
add
retf
adc
jmp
inc
inc
sub
rcr
pop
test
jae
ins
push
lds
mov
sub
aaa
test
xchg
mov
jbe
inc
sub
sar
mov
push
int3
das
jg
fsubr
clc
pop
addr16
repz
shrd
iret
retf
imul
scas
push
mov
push
and
ret
xchg
loopne
sbb
or
jae
jbe
movs
xchg
jmp
aam
dec
xor
out
inc
cmp
add
call
mov
je
jae
xchg
enter
ret
cs
sbb
add
stos
jns
mov
in
fnstcw
sbb
fnstenv
add
pop
js
push
mov
sti
mov
cld
(bad)
jb
mov
mov
cmps
dec
imul
or
adc
int3
add
mov
aaa
dec
and
sbb
push
xchg
inc
aam
cld
push
dec
mov
and
fsub
inc
sbb
adc
mov
sub
mov
inc
jae
adc
xchg
push
sti
jl
ficom
push
or
adc
and
jg
rol
call
pop
dec
jbe
les
mov
pop
adc
and
jg
ret
sbb
inc
sahf
fwait
rcl
push
add
or
pop
jb
rol
sbb
push
pop
cmp
dec
aad
cmp
in
jmp
out
xlat
jl
(bad)
adc
popa
fwait
sub
sbb
cwde
push
xchg
dec
outs
cwde
scas
jns
mov
push
mov
loop
adc
adc
xor
jp
xor
shl
pop
(bad)
sti
ret
dec
sbb
sbb
push
arpl
cmp
imul
sar
imul
sbb
push
jne
imul
or
adc
stos
sub
push
xchg
mov
jecxz
enter
das
jp
push
aaa
or
or
xlat
mov
loopne
in
out
fsubr
ja
mov
in
xor
aaa
pop
ins
pushf
in
mov
and
stc
push
rcr
push
cmp
push
inc
loop
adc
retf
pop
jb
es
(bad)
adc
sbb
and
push
shr
movs
out
call
jne
retf
nop
sub
pop
movs
(bad)
fcmovnbe
fild
lahf
das
js
inc
jmp
pop
add
lods
jnp
inc
inc
cdq
in
jl
test
test
jmp
mov
adc
pop
data16
sbb
inc
pushf
jae
push
pusha
ds
xchg
into
dec
mov
rcl
sub
int3
cmp
and
sti
(bad)
imul
jmp
pop
sti
jo
mov
lock
movs
cmp
loopne
add
retf
add
cmp
add
in
lods
stc
out
cmp
fst
rdmsr
xor
xor
fwait
adc
jecxz
add
dec
or
loop
les
fisubr
ret
fwait
stc
cwde
pop
push
neg
(bad)
pop
xor
lea
rcr
pop
dec
js
cli
xor
cmps
shr
and
ret
sbb
sbb
cmps
(bad)
sbb
xor
sub
push
pop
xchg
dec
jle
mov
fnsetpm(287
idiv
cmp
rol
int
repz
imul
xor
fadd
inc
ret
jbe
adc
cmp
and
icebp
xchg
mov
cli
xor
mov
iret
out
shr
cmp
int
mov
and
mov
dec
fs
sub
or
ret
ja
jmp
ins
push
mov
inc
inc
cli
push
in
inc
dec
sbb
and
repz
icebp
out
adc
sbb
sub
jns
lahf
add
add
fimul
dec
stc
rol
adc
(bad)
iret
imul
in
add
jl
fisubr
pop
or
aam
in
sub
lahf
cmp
(bad)
ror
movs
push
xlat
in
or
(bad)
test
fistp
lahf
imul
inc
ins
sbb
stc
push
sahf
iret
dec
push
call
int3
pop
popa
push
out
lea
mov
bound
cmovp
push
retf
or
ret
jae
pop
pop
adc
dec
jb
cmp
pop
push
js
retf
cmp
mov
cmps
das
retf
inc
cmps
jne
das
sub
push
sbb
stos
call
pop
or
call
sub
push
int3
sub
les
jecxz
int
add
shl
mov
jge
sub
push
sbb
add
sar
fwait
cmp
sbb
ins
test
ror
das
mov
push
pop
inc
xchg
out
pushf
pop
shr
mov
mov
cs
push
enter
or
sub
or
inc
lods
add
mov
arpl
adc
rcl
movs
pop
fdivr
inc
inc
inc
push
push
jae
das
adc
out
test
icebp
ret
mov
aam
mov
push
loopne
mov
sbb
pop
(bad)
hlt
jae
inc
test
or
mov
push
xchg
cmp
test
mov
add
fs
maxps
clc
(bad)
xor
add
adc
push
call
shr
cmp
sti
ror
pop
and
xor
xchg
mov
dec
enter
(bad)
fpatan
xlat
dec
dec
xchg
mov
idiv
pop
and
mov
jmp
mov
inc
scas
sti
inc
push
sub
lock
pop
ret
mov
data16
add
pop
and
add
xor
into
hlt
sub
push
sbb
push
cwde
seta
cmp
dec
imul
cmc
cmc
and
std
jl
mov
out
and
loopne
mov
pushf
out
out
popa
adc
push
gs
cmp
mov
cdq
enter
div
pop
arpl
jmp
or
add
xor
scas
mov
mov
sub
sahf
pop
adc
mov
fidivr
das
mov
push
mov
scas
fistp
push
jge
xor
sub
pop
xchg
fld
mov
das
(bad)
aam
repnz
push
cld
push
lea
leave
inc
(bad)
adc
fidiv
mov
mov
push
jns
ret
aam
dec
les
jmp
add
stos
push
add
and
sti
cvttps2pi
push
xor
movs
mov
jnp
cmp
xchg
xor
ror
lods
gs
adc
jo
fsub
sar
sbb
js
push
xlat
mov
jge
stos
push
in
js
outs
mov
movs
into
xchg
push
les
int3
fs
mulps
adc
mov
xor
jl
mov
or
out
std
mov
add
ja
sbb
pop
jnp
ret
and
int
mov
push
lods
int3
and
pop
fadd
jnp
mov
lahf
sub
add
popf
jnp
xchg
scas
leave
sbb
outs
test
sbb
dec
push
xor
sub
dec
mov
inc
shl
outs
xchg
mov
pop
(bad)
xchg
popa
mov
int3
out
lea
fisttp
ror
icebp
fcom
mov
sub
mov
enter
mov
div
push
mov
add
sbb
xor
inc
mov
mov
adc
sub
mov
sub
imul
add
stos
bound
mov
or
scas
div
xor
or
mov
inc
or
pop
das
dec
mov
ud1
sti
push
push
push
cmp
in
mov
in
jae
pop
adc
aad
push
sub
jmp
jb
into
and
lock
mov
scas
sbb
popa
mov
ins
(bad)
fcom
mov
add
bound
inc
lahf
mov
test
daa
mov
push
mov
pusha
aam
or
in
jne
fiadd
mov
fcomp
addr16
jmp
retf
cld
or
pop
aad
push
popa
movs
cli
push
mov
inc
fucomp
and
cmp
mov
cmps
retf
pop
in
pushf
jb
dec
and
out
inc
pushf
cmp
hlt
mov
add
adc
cmps
and
into
sbb
test
and
push
and
push
ret
jmp
and
js
inc
sbb
sbb
gs
jae
loop
add
xor
add
pushf
pop
sbb
pop
int3
mov
sbb
cwde
addr16
cld
xchg
xlat
push
mov
or
out
mov
mov
and
adc
add
in
mov
xor
jmp
or
rol
movs
dec
in
scas
out
jbe
push
aas
push
jmp
sbb
xchg
dec
adc
xor
add
jge
jo
cdq
ret
movs
xchg
sbb
sub
push
rol
cmps
(bad)
dec
lds
or
mov
cld
jmp
push
xor
mov
out
cdq
mov
sub
mov
and
fdivr
mov
and
or
pop
lahf
inc
repnz
iret
mov
movs
jb
pop
add
retf
ret
pop
mov
retf
nop
push
xchg
sub
pop
mov
sbb
adc
test
add
mov
cmp
lea
push
mov
jmp
out
loopne
push
push
xchg
and
lock
(bad)
jo
retf
mov
js
test
jae
dec
mov
mov
loop
jae
aam
mov
push
or
push
adc
aaa
xor
(bad)
pop
outs
fs
inc
sti
mov
jle
pop
mov
fwait
mov
pop
cmp
lock
inc
ins
jmp
enter
sub
out
pop
push
movs
dec
repnz
mov
mov
jg
inc
adc
adc
adc
dec
out
jne
ins
jg
fs
push
adc
ss
ret
mov
(bad)
push
adc
cmp
cmp
shl
loope
lods
lds
cmp
outs
mov
loopne
dec
(bad)
jbe
mov
jmp
add
jbe
adc
sbb
(bad)
popf
add
(bad)
cmp
mov
aam
(bad)
aaa
cli
into
iret
push
mov
call
inc
add
leave
out
test
and
add
outs
in
(bad)
jg
pop
sbb
or
ins
push
mov
jmp
pusha
dec
out
push
adc
mov
sbb
or
jp
call
int3
dec
xchg
(bad)
mov
jb
cmp
xlat
push
pop
sub
mov
bound
shl
ins
lds
cmp
dec
dec
sub
repz
jno
xchg
jae
mov
test
push
pop
mov
jg
ins
xchg
cmp
xlat
sbb
inc
mov
aas
loopne
fcom
arpl
cmp
sbb
and
pushf
imul
cmps
xchg
mov
mov
dec
lock
cmp
inc
or
mov
mov
add
push
xor
jns
xor
lea
ins
test
inc
scas
out
aas
scas
int
cwde
and
mov
cmp
pushf
lahf
push
mov
icebp
repz
fstp
out
dec
xor
ds
jmp
sub
rcr
mov
iret
inc
xor
or
out
or
jle
jo
xchg
adc
adc
mov
mov
push
push
icebp
add
push
in
out
sbb
mov
pop
(bad)
sahf
leave
(bad)
fistp
std
adc
dec
cmp
call
ret
into
lea
test
push
sub
cmps
dec
adc
rep
and
loop
aaa
or
push
and
dec
cmc
cmp
dec
int3
lahf
jae
cmps
test
btc
jmp
fldenv
es
jge
fsubr
fxch
xor
lock
jg
ins
sbb
aad
(bad)
cmps
pushf
dec
cld
pusha
ja
cmp
pop
cli
cmp
cs
inc
cmp
ss
adc
lahf
aaa
icebp
adc
and
ja
sub
mov
cmps
or
mov
in
mov
push
cmp
xor
mov
xor
sahf
push
dec
dec
out
enter
mov
sub
movs
pop
aas
push
mov
pop
fsubrp
pop
repnz
mov
push
mov
leave
lock
imul
jns
shl
xor
mov
not
or
xor
fidivr
ins
pop
retf
ret
cmps
push
push
nop
jnp
call
gs
fld
jg
mov
bound
popa
pop
cmp
sbb
cmc
scas
jmp
aad
inc
out
dec
arpl
mov
out
clc
cmp
push
jns
mov
and
imul
mov
dec
loop
cdq
push
test
pop
cmp
popf
cwde
out
mov
(bad)
stos
cmp
lods
and
scas
inc
hlt
gs
scas
mul
loop
repz
sbb
sbb
cmp
into
jle
or
dec
cmp
xor
rcr
add
leave
ins
lds
hlt
ja
(bad)
fcmovu
mov
in
enter
iret
jne
inc
pop
sar
adc
setle
shr
push
movs
pop
pop
(bad)
mov
sbb
sbb
push
xchg
fnsave
je
cli
into
stos
cdq
in
jl
icebp
add
bound
and
sub
jge
pop
test
mov
into
sbb
xchg
push
repnz
mov
retf
dec
sbb
cmp
cmps
add
sbb
outs
int
adc
int
dec
sbb
test
adc
sti
pushf
test
fdiv
pusha
iret
cmp
jnp
int3
jae
not
and
sbb
jmp
movs
sbb
imul
test
pop
sub
add
dec
adc
popf
push
push
pop
dec
nop
sbb
pushf
xor
add
dec
out
fcmovnb
addr16
jmp
lock
sbb
popa
xchg
pop
mov
lea
xor
cmps
enter
inc
mov
cmp
mov
pop
sbb
test
movs
mov
sbb
push
add
int
scas
add
faddp
or
cwde
inc
outs
or
je
mov
(bad)
inc
sub
imul
mov
mov
inc
adc
or
pop
enter
or
and
enter
push
fcom
xchg
aad
sbb
cld
lahf
or
mov
or
es
outs
mov
mov
rcl
ss
dec
pusha
inc
cmp
xlat
xchg
loope
test
mov
gs
in
into
mov
scas
push
jecxz
xor
rep
call
arpl
test
mov
shl
xchg
xor
push
dec
mul
test
aaa
pop
int
mov
dec
jne
mov
or
scas
push
addr16
jo
add
ins
pop
repnz
xchg
pop
inc
inc
in
dec
jp
mov
gs
xor
cs
mov
inc
pop
lods
jmp
and
aaa
push
fld
stc
dec
rcr
or
or
mov
or
dec
jmp
jecxz
je
push
add
push
adc
push
ret
mov
sub
cmp
sbb
cmp
sub
dec
fs
mov
dec
cmp
popf
mov
lods
push
xor
(bad)
popa
(bad)
sub
aad
xchg
push
jno
sti
or
fstp
cmps
ret
icebp
inc
mov
ds
int
test
cmp
or
cmps
xchg
(bad)
sbb
cmp
enter
cmp
sar
outs
in
pop
jg
mov
mov
and
iret
fmul
f2xm1
jmp
fiadd
scas
int
lahf
cmps
pop
mov
lods
sbb
mov
jne
sar
je
jge
std
loop
xchg
aam
notrack
adc
outs
or
retf
push
pop
fld
cmp
fdiv
pop
fwait
sub
out
je
pop
cmp
lds
(bad)
pop
pop
loope
retf
call
sbb
inc
xchg
xchg
dec
pop
push
pop
pop
dec
nop
inc
pop
add
add
cld
leave
ret
retf
cmp
into
xor
fidiv
mov
nop
mov
push
mov
xlat
in
sub
or
xchg
shr
cdq
iret
add
jno
cdq
gs
in
cmp
scas
cmp
js
add
xchg
test
loope
jmp
imul
or
das
shr
pop
mov
call
xor
cwde
fimul
retf
popf
fwait
scas
xor
int
ret
rol
(bad)
fs
lahf
shl
icebp
adc
ds
leave
inc
mov
outs
inc
(bad)
cs
lahf
ret
jo
out
pop
lods
mov
sbb
add
and
ret
ss
les
sbb
js
pop
push
push
xchg
cmp
mov
(bad)
inc
repz
mov
test
and
jb
test
pavgb
mov
or
mov
es
add
popa
push
dec
in
and
pop
and
movs
push
(bad)
adc
arpl
cmp
pop
lods
dec
mov
push
pop
std
loop
jmp
ret
mov
bound
les
clc
adc
cmps
push
inc
ins
in
dec
push
and
push
repz
sbb
jle
fild
pop
add
(bad)
cmp
xor
inc
jmp
xchg
push
mov
xchg
lea
add
xor
cmp
(bad)
std
xchg
jl
pushf
(bad)
into
int3
fsub
mov
jnp
xchg
test
loop
or
push
ret
call
add
aad
push
mov
retf
pop
or
into
dec
sahf
jns
loope
sbb
fs
shl
inc
iret
inc
xchg
(bad)
mov
jmp
fisub
push
pop
(bad)
fisttp
xor
sbb
repz
dec
adc
cmps
mov
loop
xchg
push
mov
(bad)
adc
outs
mov
sbb
vpcmpgtb
les
mov
sub
data16
jecxz
xchg
jno
in
std
ins
loop
out
cli
xchg
cmp
inc
outs
mov
mov
movs
in
ret
push
mov
fcom
js
dec
push
mov
push
ja
jbe
mov
retf
test
test
push
aas
cmp
jne
imul
xchg
jecxz
xchg
push
pop
data16
test
add
clc
sub
mov
add
jl
adc
xchg
sub
inc
add
adc
dec
push
ins
les
inc
(bad)
int
push
ins
js
ficomp
sub
dec
test
push
push
addr16
xlat
lods
xor
sub
dec
es
jbe
inc
test
jmp
iret
cmps
cs
mov
sub
cmps
or
sbb
lods
(bad)
pop
xor
mov
popa
xchg
test
ret
xchg
fstp
mov
mov
mov
aaa
movs
loop
lahf
pop
daa
aaa
jae
sbb
icebp
push
ret
retf
mov
in
lea
pushf
pusha
cmp
rol
and
sub
pop
outs
enter
es
shl
lahf
xchg
and
xchg
call
das
pop
ss
cmp
xchg
rcr
pusha
stc
mov
nop
and
hlt
stc
mov
jae
pop
mov
sbb
(bad)
int3
loopne
mov
scas
cmp
and
dec
rol
movs
addr16
add
cmc
or
sar
adc
imul
cmp
shr
popf
mov
sbb
(bad)
push
popa
out
pop
outs
sar
adc
in
mov
inc
movs
lods
mov
mov
pop
add
rcl
jecxz
js
and
mov
lahf
dec
aas
push
inc
jbe
stos
add
add
cdq
sub
xor
dec
std
mov
xor
mov
inc
std
adc
adc
jnp
pop
in
imul
stos
mov
dec
fmul
adc
mov
push
movs
xchg
loopne
nop
mov
pop
sbb
in
popa
scas
mov
aad
add
aam
shl
mov
push
and
jae
and
jecxz
aas
int3
scas
sbb
xor
pop
dec
mov
jle
out
mov
sbb
and
jnp
aas
push
add
bnd
neg
jno
lea
mul
mov
fadd
sub
cwde
xchg
push
jmp
sub
in
cmp
xchg
js
dec
sub
ja
fwait
std
adc
adc
xchg
cmp
test
jb
xchg
jae
call
repnz
push
mov
dec
mov
(bad)
(bad)
(bad)
sub
push
cli
or
ins
cwde
je
cmp
push
push
jge
test
fwait
in
adc
cmp
inc
scas
and
cwde
cmc
lock
jb
cmp
sbb
push
cld
add
mov
fcom
xchg
(bad)
in
push
les
and
inc
out
sub
in
movs
mov
pop
pop
aad
imul
jbe
mov
sahf
bound
jl
jge
adc
pop
jno
pop
mov
out
pusha
aas
xor
xor
or
inc
sbb
outs
or
lds
push
cmp
and
test
adc
outs
dec
enter
xchg
push
cmp
in
mov
cmp
ffreep
sbb
cmp
cdq
ins
out
lods
leave
sbb
loopne
scas
mov
xor
add
aam
and
mov
fwait
and
cli
iret
jmp
addr16
fisub
imul
cmps
stos
mov
add
pop
lods
test
aas
jo
retf
xor
jle
aam
sub
inc
add
xor
in
out
inc
sub
pop
mov
xchg
xor
out
adc
hlt
inc
or
imul
cmc
aas
lea
inc
sbb
shl
retf
lahf
push
push
movs
xlat
mov
mul
push
je
jge
repz
outs
pop
shr
int3
cmp
and
into
jle
jmp
or
in
ja
sbb
sbb
jecxz
or
rcl
sti
sub
cmp
add
sub
push
xchg
cmp
test
or
fwait
pop
fsub
and
and
add
sub
loope
cli
xor
sahf
push
addr16
jecxz
iret
push
or
into
inc
fsub
mov
popa
jnp
scas
push
hlt
cmp
mov
pop
lods
add
mov
loop
mov
and
enter
cmp
mov
addr16
jmp
nop
dec
dec
sub
fnstcw
xor
cmovae
es
cmp
and
scas
cwde
or
xchg
xor
mov
jns
movs
out
mov
pop
inc
mov
cmps
dec
pop
out
xchg
cmp
stc
cmps
cld
cmp
xchg
(bad)
int3
push
cmp
xor
ins
sub
adc
in
push
sbb
cmp
jns
lods
mov
mov
arpl
out
fnsave
and
dec
ds
or
pop
add
inc
pop
sar
adc
sar
sub
stc
cmp
pop
test
mov
in
dec
cmp
xchg
(bad)
cmp
fstp
and
xchg
mov
push
jno
cmc
and
add
scas
je
inc
mov
std
jnp
mov
jl
or
aaa
lock
data16
sbb
mov
in
mov
xor
pop
movs
out
push
sahf
mov
jb
xor
popa
int
retf
(bad)
xchg
sub
movs
mov
dec
ins
mov
mov
mov
mov
pop
dec
jmp
fucomi
jbe
retf
sbb
in
mov
mov
mov
(bad)
mov
icebp
(bad)
scas
popa
adc
call
fs
pop
sbb
sub
fcom
mov
dec
xchg
jno
stos
fstp
call
stos
imul
xor
ja
enter
into
mov
data16
mov
and
xor
sub
push
xor
shl
cmp
sar
mov
cmp
or
push
or
movs
std
add
ins
xchg
fistp
push
stc
add
cdq
jae
push
push
fnstsw
retf
sbb
ds
jne
push
je
pushf
mov
sbb
mov
push
xchg
bswap
jg
and
ficom
jge
cmp
xchg
mov
sub
addr16
xor
les
inc
sahf
adc
dec
lods
mov
repz
lods
dec
stos
xchg
or
lods
jle
idiv
push
cmp
clc
push
pop
mov
data16
les
sbb
movs
or
enter
loope
sub
rcr
cli
in
stc
leave
inc
test
cmps
into
ins
sbb
jno
movs
jl
push
enter
adc
mov
leave
fldenv
sysenter
sbb
jb
jo
push
adc
pop
sahf
outs
xchg
cld
mov
call
cmp
sti
xor
or
cmc
jecxz
mov
fisub
repz
cmc
add
add
mov
push
sar
xor
fucom
rcl
xor
jg
mov
xor
adc
movs
gs
mov
aaa
rcl
dec
jns
jmp
mov
dec
jb
retf
sub
inc
fwait
push
bound
adc
es
mov
mov
lods
cwde
outs
and
fist
mov
or
rol
cmp
out
mov
loop
mov
pop
addr16
jl
pusha
(bad)
jo
mov
call
push
ret
adc
out
add
repnz
mov
test
sub
push
hlt
loop
test
lea
dec
sbb
js
inc
imul
test
mov
fdiv
mov
(bad)
in
mov
push
es
jbe
inc
test
pop
pop
lods
xor
fs
rcr
xchg
ds
push
(bad)
jg
loope
jl
dec
loop
mov
lea
leave
dec
sub
sar
mov
clc
int3
add
and
push
fwait
mov
movs
shr
mov
mov
enter
jl
add
inc
mov
out
push
clc
dec
into
or
dec
sub
frstor
pusha
jmp
aad
sbb
cmp
outs
fcmove
retf
push
bound
mov
jmp
pusha
sets
and
jl
mov
jge
retf
outs
push
mov
arpl
ja
(bad)
pop
out
push
scas
jmp
call
and
sbb
popf
ret
nop
out
mov
mov
cmp
sbb
aad
or
adc
push
pop
jno
lods
jnp
aam
scas
push
cdq
and
cmp
mov
fild
jecxz
mov
push
cli
push
push
xchg
call
sub
mov
lahf
sub
inc
ror
ret
fs
mov
push
enter
fisttp
push
arpl
xchg
mov
xchg
mov
fsub
cwde
mov
pop
sbb
dec
je
or
sub
inc
jae
imul
data16
xor
add
pop
cmc
mov
fstp
and
mov
mov
repz
ja
icebp
mov
cmp
add
fild
pushf
imul
pmulhw
xor
aaa
int
and
add
ins
stc
aas
jns
mov
outs
and
bound
movs
(bad)
jmp
mov
cmp
cmp
(bad)
(bad)
into
repnz
push
(bad)
fs
rcr
aaa
call
mov
stc
sbb
mov
loope
fst
xor
push
test
cmp
imul
dec
scas
(bad)
jp
ja
cmp
in
xchg
adc
scas
inc
jmp
lock
test
lds
gs
xchg
pop
je
mov
xchg
jno
bound
fcomp
jmp
fdiv
mov
or
push
mov
push
jle
popf
and
jb
fcomp
in
jmp
aam
aaa
push
lahf
mov
mov
test
stc
and
lahf
mov
dec
inc
pop
mov
pop
leave
not
in
call
mov
adc
xchg
sbb
ja
ror
xor
pop
fsub
xchg
and
das
jb
cmps
inc
fldcw
sub
jle
push
pusha
sub
or
ins
sti
shr
leave
rol
sbb
xchg
sub
pop
sahf
pop
not
movs
mov
and
fisub
adc
mov
sub
mov
scas
push
cli
es
sub
mov
adc
sti
aad
(bad)
in
mov
fimul
mov
mov
mov
test
cmp
mov
lock
jo
cld
and
out
popf
movs
sbb
fprem1
jmp
not
sub
hlt
(bad)
xor
inc
in
fiadd
mov
nop
inc
mov
aam
xchg
mov
pushf
imul
add
outs
mov
aaa
mov
imul
mov
dec
(bad)
je
jne
xchg
and
jb
mov
pop
sbb
xor
aas
jnp
cmp
ret
into
pop
ds
jo
mov
jnp
pop
and
cmps
iret
adc
js
ja
fcomp
test
jbe
inc
(bad)
pop
pop
aad
test
mov
daa
xor
cmp
mov
mov
mov
pop
es
add
aad
shl
out
mov
leave
xchg
inc
test
fsub
push
sub
int
movs
add
ret
mov
inc
fucomi
push
mov
sub
sti
inc
push
aad
xchg
mov
xchg
xchg
fisub
mov
fist
cmp
test
jmp
and
daa
jns
sbb
and
pop
mov
in
ret
adc
mov
mov
xchg
cmp
push
repnz
sub
in
push
ja
xchg
mov
push
xor
arpl
xchg
loopne
pop
ret
in
add
cmp
and
pop
jb
out
pop
and
mov
out
cmps
sahf
cmc
jae
push
inc
sbb
sti
jle
sbb
rcl
xor
test
lea
loopne
jo
pop
xchg
lods
lods
mov
cmc
push
aad
push
inc
mov
jns
mov
hlt
and
das
or
sbb
hlt
cmps
xchg
push
push
xor
ficom
dec
jo
pop
enter
mov
mov
or
xchg
shl
xchg
and
cmp
jo
pop
adc
hlt
xor
sbb
sbb
inc
inc
sbb
adc
es
call
mov
add
or
adc
mov
add
hlt
adc
aas
add
sbb
mov
mov
dec
loope
sbb
sar
push
cwde
mov
mov
lock
(bad)
and
pop
mov
clc
repnz
xchg
add
jns
mov
les
mov
push
jge
lahf
jae
inc
fwait
add
jnp
and
inc
sub
dec
(bad)
out
and
mov
cmps
pushf
xchg
in
out
sbb
mov
cs
mov
mov
mov
pushf
mov
mov
dec
mov
mov
shr
outs
sbb
fst
fwait
out
daa
retf
xchg
mov
xchg
and
cmp
or
pop
fisub
jp
add
retf
scas
repnz
shr
popa
cmc
xlat
cmp
les
xor
(bad)
sbb
mov
mov
lods
sar
push
scas
shl
jg
sub
mov
shr
ret
fild
inc
test
add
dec
in
pop
aad
(bad)
shl
aam
fadd
jl
or
in
mov
ins
enter
and
add
es
shl
add
lds
and
mov
fstp
push
sbb
inc
sbb
mov
int
lahf
pop
jno
dec
adc
shr
pop
in
add
adc
mov
into
int3
pop
sbb
xchg
adc
fisubr
cmp
fisub
les
scas
inc
pop
cmps
into
in
into
and
bound
data16
lahf
jbe
jo
cmp
push
mov
pop
loope
ins
mov
jmp
bound
imul
dec
aaa
dec
xor
iret
outs
xlat
and
sub
cmps
ds
fdiv
push
cmp
lods
stc
stos
jae
cmp
outs
cmps
aad
pop
sahf
jbe
pop
or
and
popa
cdq
clc
xchg
mov
jle
(bad)
shl
clc
stc
jnp
in
pushf
out
lea
(bad)
gs
inc
aad
xor
cld
xor
cmp
adc
dec
ret
lahf
sahf
mov
add
add
mov
sub
push
clc
mov
ret
pop
retf
int
scas
cmp
adc
dec
jl
clc
mov
jns
cmp
or
fsub
jmp
push
test
fcom
or
retf
mov
mov
test
pusha
jno
sbb
xchg
cs
sub
mov
add
cmp
jl
pop
jno
inc
(bad)
cmp
mov
and
add
retf
fwait
sbb
aas
add
sahf
sbb
mov
jecxz
jmp
xchg
(bad)
outs
push
jecxz
aam
fisubr
lods
jmp
clc
test
std
loop
pop
dec
cmp
sar
in
(bad)
bound
push
mov
mov
call
xchg
mov
imul
mov
sbb
and
fcomi
imul
pop
sub
es
sbb
sbb
in
ins
or
push
mov
pop
push
mov
add
jno
mov
mov
cmc
shl
dec
jbe
bound
iret
xor
cld
clc
gs
lea
and
stos
mov
int3
fcmovb
ins
pushf
sub
push
es
fidiv
iret
pop
lahf
sub
sub
jo
enter
es
xor
mov
bound
dec
fidiv
ins
int3
test
add
pop
cmp
fwait
ins
add
or
pop
stos
retf
sub
shl
mov
nop
xor
add
cwde
lods
xchg
pop
ret
movs
xor
sub
lods
nop
cs
imul
daa
in
jg
dec
aas
cwde
mov
push
mov
sbb
adc
rcl
jbe
jmp
xlat
push
xchg
mov
mov
cli
ret
jae
(bad)
in
repz
sahf
pusha
je
das
push
jle
mov
pushf
shl
adc
xor
xchg
fild
pop
lea
retf
or
out
fsubp
int
push
xor
inc
cmp
lar
mul
fs
clc
jle
sub
pop
in
sbb
xlat
push
sub
(bad)
mov
sahf
push
or
pusha
push
xor
sahf
jp
mov
imul
jl
daa
push
aam
es
xor
push
aam
mov
mov
fcomp
call
addr16
test
push
inc
inc
xor
outs
repz
arpl
lea
repz
add
mov
inc
jecxz
adc
mov
call
pushf
xor
adc
sbb
mov
cs
sbb
cmp
fmul
and
push
add
mov
(bad)
sbb
pop
push
sbb
adc
sub
sub
inc
(bad)
mov
xor
stos
and
mov
dec
push
les
fs
xor
and
adc
es
daa
push
xor
pop
sub
pop
aam
cmp
adc
pop
nop
loop
repz
outs
mov
sub
(bad)
jle
pop
sub
out
(bad)
mov
dec
or
test
pop
in
mov
call
push
mov
xchg
mov
mov
fdiv
inc
jbe
les
loope
xrelease
xor
sbb
mov
ins
or
lods
and
jl
test
aad
jl
mov
and
pop
cmp
ret
fwait
ss
retf
fsubr
dec
dec
cmps
xchg
daa
and
jbe
fisttp
sbb
xchg
nop
pop
mov
sub
jbe
or
shl
cmp
mov
or
mov
and
push
mov
add
or
mov
inc
adc
out
jno
push
inc
neg
(bad)
je
out
test
jns
sub
outs
div
adc
pop
jge
icebp
les
mov
mov
aaa
mov
in
(bad)
js
jge
pop
mov
pop
mov
xor
lods
jmp
xchg
or
ffree
add
out
cmc
mov
leave
mov
call
in
int3
inc
pop
jle
fs
dec
xchg
cmp
aas
push
pop
lds
cmp
fwait
outs
inc
adc
cs
adc
(bad)
(bad)
cld
xor
aam
jg
in
sti
jns
addr16
xchg
or
mov
or
jg
outs
cmp
mov
ja
adc
jnp
push
std
mov
cmp
xor
sbb
add
push
add
xchg
add
test
test
or
add
cmp
outs
into
add
rcr
(bad)
mov
cmp
fs
push
lahf
jle
mov
mov
sahf
and
int3
sub
dec
mov
shl
xchg
sbb
ret
in
inc
out
sub
inc
add
not
mov
cmp
lods
lea
mov
mov
ss
pop
ins
ins
mov
xchg
test
inc
out
out
xchg
inc
jg
and
daa
sbb
or
push
test
jl
add
sub
daa
icebp
cmps
inc
leave
out
lods
sbb
imul
jno
cld
dec
xor
mov
or
or
int
mov
sbb
adc
push
jnp
push
enter
adc
call
mov
mov
bound
sti
sbb
jge
push
int
aam
cmp
add
push
jge
data16
cmp
imul
jmp
adc
mov
xchg
adc
sbb
inc
xchg
push
mov
in
dec
fstp
and
cmp
imul
shl
fs
jmp
mov
dec
in
popa
push
popf
pop
fild
mov
pop
ret
mov
(bad)
mov
jmp
lods
xchg
outs
test
mov
or
call
inc
push
adc
xchg
mov
bound
test
add
iret
rol
das
jle
cmp
inc
pop
mov
xchg
arpl
xor
test
in
das
in
and
push
pop
dec
add
aaa
mov
xchg
sar
mov
cld
(bad)
adc
add
repnz
xchg
adc
push
adc
cld
add
jmp
sbb
fcom
or
(bad)
xor
sub
sub
xlat
jo
adc
gs
fwait
imul
add
leave
lods
dec
pushf
mov
push
mov
add
call
sub
fiadd
push
or
cmp
scas
cdq
sub
clc
dec
dec
rol
adc
sar
mov
not
pushf
pop
cmp
(bad)
jg
shl
push
pop
and
fadd
ja
lahf
cmp
clc
push
add
fst
cmps
mov
cmps
ret
and
test
inc
cwde
xchg
and
xor
leave
test
sti
imul
xlat
sahf
loopne
dec
add
fwait
retf
pushf
push
pop
pop
out
repnz
out
iret
inc
pop
(bad)
icebp
jl
push
rcr
out
fcomp
sbb
push
movs
(bad)
rcl
in
inc
push
sub
lea
call
mov
std
inc
push
mov
adc
lods
ja
leave
cmp
jp
xor
in
gs
jp
cmps
mov
inc
inc
arpl
inc
test
sbb
nop
xchg
adc
push
xor
adc
xchg
mov
out
std
push
inc
pop
xchg
ins
gs
xchg
mov
lahf
mov
jmp
adc
sub
lods
adc
add
lods
cmp
cli
xchg
jle
sub
rol
int3
ret
dec
sbb
sahf
arpl
mov
mov
shl
xchg
cld
add
ret
mov
shl
into
or
sub
repnz
push
(bad)
adc
push
cmp
sbb
add
sub
pop
push
(bad)
cmp
mov
push
or
test
fidiv
pop
je
xchg
(bad)
addr16
mov
pop
(bad)
dec
(bad)
call
sub
lds
ins
sub
mov
xor
cmp
inc
add
or
ret
aaa
jae
mov
shr
fld
shl
aas
mov
out
test
and
xchg
into
or
jle
imul
add
cmp
loopne
and
sub
mov
add
into
rcr
xchg
adc
pop
sbb
push
in
shl
ja
movs
xor
ret
sbb
stos
js
jmp
fst
int
jmp
push
pushf
test
inc
mov
sbb
shr
cmc
popa
xchg
jb
add
xchg
add
lock
inc
ret
lock
out
sahf
mov
adc
enter
popa
jo
retf
cmps
ror
mov
retf
pop
mov
jae
shl
pop
js
out
push
mov
(bad)
in
(bad)
jb
rcr
out
out
mov
popf
mov
inc
or
loop
in
fild
and
aas
mov
mov
mov
pop
mov
or
jp
repnz
sar
icebp
out
addr16
test
push
pop
hlt
adc
pop
aad
xchg
or
cdq
xor
jg
in
cmp
fnstenv
fcmovb
je
in
jbe
pop
loope
lock
lods
cmp
mov
sbb
jnp
jo
add
xchg
lods
and
lods
inc
mov
push
dec
push
std
dec
loop
add
fisttp
xor
aam
aas
jmp
imul
addr16
inc
cmps
repz
or
mov
push
je
lds
retf
ins
icebp
push
xor
call
sahf
and
add
inc
into
mov
mov
iret
outs
mov
shr
push
icebp
int
fsub
dec
inc
jmp
cmc
shl
xchg
and
mov
stc
xor
fnstenv
jecxz
cmp
sbb
xor
sahf
mov
jl
cmp
test
cmp
clc
xor
(bad)
or
adc
pop
xor
bnd
mov
mov
mov
add
jge
sbb
nop
out
frstor
xchg
sub
mov
pop
stos
mov
hlt
mov
mov
ds
cmp
out
hlt
jmp
cwde
cmps
dec
clc
pop
inc
repz
call
push
(bad)
adc
mov
push
jmp
xchg
and
jb
push
gs
jle
jb
imul
das
rcr
aas
mov
sub
hlt
pop
lahf
cwde
imul
mov
mov
in
jmp
dec
mov
cmp
add
mov
jmp
mov
leave
sub
cdq
inc
(bad)
repz
inc
pop
in
popa
in
jmp
pop
push
or
jge
xchg
mov
outs
xchg
iret
aas
pop
and
xchg
or
neg
inc
dec
push
div
std
xchg
popa
dec
mov
in
sub
jne
mov
inc
mov
into
(bad)
jle
jo
sar
cmps
inc
sbb
xchg
xchg
sbb
push
cmp
mov
pop
pop
test
sub
in
lods
and
aam
cli
jno
in
xchg
jbe
data16
adc
sub
cs
xor
shl
cmp
out
inc
dec
cmp
(bad)
cld
fld
leave
aaa
jne
mov
fwait
or
imul
out
push
outs
enter
stc
adc
mov
dec
mov
sbb
in
sub
jno
push
pop
adc
pop
xchg
pmaxsw
mov
cmps
clc
rol
mov
mov
sub
cwde
loop
sub
sub
mov
std
adc
stos
call
and
leave
cwde
scas
cmp
das
sub
and
dec
lea
pop
xchg
mov
xor
sub
int3
inc
test
mov
aaa
cmps
jmp
(bad)
(bad)
xor
repnz
inc
loop
dec
xor
add
(bad)
ficom
add
sub
movs
inc
inc
mov
or
or
jle
sbb
in
xor
cmp
xor
sar
add
inc
cld
retf
enter
in
cdq
mov
into
push
test
pop
or
stos
test
dec
pop
add
fsubr
sub
jb
mov
stos
push
imul
jbe
retf
mov
hlt
adc
dec
xlat
sub
clc
mov
leave
call
stc
shr
dec
adc
mov
(bad)
out
dec
movs
mov
sahf
add
xchg
dec
mov
add
or
mov
stos
loop
push
sub
ins
pop
jl
dec
iret
scas
sub
mov
cmp
mov
sbb
dec
pop
pusha
push
sub
out
sub
sub
mov
(bad)
in
dec
pop
sbb
mov
stc
mov
cmp
push
mov
push
jl
ds
sahf
and
xchg
retf
lock
data16
ds
adc
fwait
xor
mov
mov
xchg
in
std
rcr
sub
(bad)
adc
and
fcomp
(bad)
push
mov
add
aaa
xlat
adc
push
test
xor
je
rol
aad
iret
out
and
mov
in
(bad)
shl
pop
in
je
xchg
xchg
sbb
inc
outs
aaa
fidivr
retf
aad
cmp
js
mov
mov
push
inc
adc
ins
adc
sbb
cmp
mov
outs
dec
aaa
push
pop
adc
sub
loope
sub
and
aam
sbb
jecxz
push
add
lea
pop
jmp
mov
clc
xchg
dec
hlt
in
mov
cmc
sbb
fld
push
mov
mov
mov
push
je
retf
mov
sti
scas
fs
xlat
xchg
test
cmp
xchg
call
iret
in
mov
inc
and
repz
dec
bound
dec
push
movs
mov
and
cmp
jbe
or
popf
mov
leave
cmp
fcmovnbe
mov
mov
repz
fild
aaa
adc
call
sub
mov
retf
adc
sub
leave
outs
sbb
ds
jb
mov
xor
jbe
test
push
sar
movs
inc
test
aaa
shl
cmp
(bad)
adc
mov
xchg
sub
test
mov
fwait
bound
mov
out
loope
fadd
pushf
cmp
fiadd
movs
out
int3
dec
jbe
das
test
inc
add
scas
xchg
movs
je
push
adc
cmps
movs
cmc
jns
xchg
leave
sahf
inc
into
sbb
push
shr
add
cdq
mov
stos
hlt
mov
push
sbb
push
pop
ret
xchg
sahf
xor
std
in
or
mov
ss
lock
test
mov
aam
pop
daa
inc
mov
jnp
call
mov
mov
retf
xchg
jo
push
cmp
repz
not
sub
and
fidivr
sub
sbb
mov
inc
ror
pop
push
mov
and
jbe
push
inc
sti
push
dec
outs
lods
and
pop
and
(bad)
into
jbe
std
pop
or
push
in
jl
idiv
shr
mov
jmp
mov
and
or
or
cmp
pop
adc
aaa
ret
pop
imul
stos
mov
ret
sub
jg
(bad)
or
xlat
outs
neg
leave
push
out
data16
ret
push
leave
cmps
popf
hlt
dec
push
lock
push
call
mov
out
ror
push
repz
or
adc
test
mov
inc
mov
sbb
jnp
xor
or
iret
jmp
jns
icebp
cmp
cmp
adc
mov
jg
call
dec
cmps
shl
pop
sbb
sar
lods
xor
jmp
dec
into
std
xchg
cmp
mov
mov
jnp
dec
mov
jp
fsubr
push
daa
xchg
movs
dec
dec
or
push
shl
aam
and
lahf
mov
jne
and
push
iret
aaa
xchg
mov
mov
mov
sub
dec
fcmovbe
nop
int3
adc
mov
jbe
add
rol
(bad)
mov
or
cdq
mov
jb
mov
pop
xchg
cmc
cli
retf
cmp
or
es
cmp
mov
dec
lock
cwde
mov
mov
ja
imul
add
pop
push
lea
and
adc
pop
sbb
int3
into
mov
sub
into
and
push
mov
pop
adc
push
sub
cmp
push
sti
ins
push
sub
(bad)
mov
scas
imul
imul
push
inc
iret
xor
inc
dec
mov
retf
retf
shr
mov
xor
jb
sub
(bad)
icebp
jae
ret
or
and
mov
gs
jge
out
leave
and
inc
pop
movs
pushf
stc
cli
mov
call
xor
mov
inc
mov
sbb
cmp
out
inc
add
mov
fprem1
loopne
loope
sbb
pop
dec
dec
sbb
js
cmp
shl
lods
nop
lahf
fsqrt
mov
add
dec
xchg
loopne
out
sub
push
mov
jmp
loopne
xor
jmp
dec
xor
retf
sub
aas
inc
push
mov
cmp
add
push
xlat
jns
push
stos
jnp
(bad)
fsubr
cmp
mov
leave
inc
pop
or
adc
jle
dec
add
cmp
enter
pop
sub
div
xchg
ja
add
mov
fsubr
adc
dec
sub
jbe
fcomp
jnp
jae
or
sbb
mov
ja
dec
movs
pusha
imul
cmc
(bad)
mov
retf
inc
retf
sub
popa
mov
es
enter
call
ret
dec
add
and
pusha
scas
rcpps
aas
add
xor
in
sub
push
lock
add
and
inc
std
repz
js
add
cmp
pop
pop
xchg
add
xchg
idiv
(bad)
es
push
inc
ret
cmps
aam
adc
push
mov
bound
add
in
jno
or
scas
in
xor
int3
add
hlt
xor
add
cwde
lea
inc
lods
outs
pop
popa
sahf
cmp
arpl
jo
jge
mov
test
dec
iret
add
popf
mov
add
mov
test
out
jecxz
int3
xor
lock
and
sub
or
cmc
cs
xchg
loopne
sbb
imul
jmp
mov
stos
not
adc
hlt
scas
aas
dec
push
or
test
xchg
les
cmps
xchg
fs
nop
cmps
leave
and
and
sysexit
lods
mov
jns
ret
fs
jmp
push
in
or
cmp
jmp
aas
xor
mov
xor
pop
dec
xchg
dec
jb
stos
(bad)
ja
inc
lods
aad
xchg
jge
sub
(bad)
std
mov
and
inc
add
outs
sbb
push
je
xchg
xchg
fst
imul
jo
lods
test
cmp
fwait
int3
inc
(bad)
sbb
adc
popa
cs
loope
das
hlt
sbb
cmps
dec
test
retf
jne
add
dec
cmp
cli
dec
fcomi
out
leave
jecxz
shr
push
or
test
fimul
pop
xchg
sbb
shr
sub
out
and
mov
cdq
xchg
ins
cmp
ins
xor
mov
dec
mov
or
popa
xor
mov
aad
loopne
mov
cmp
dec
shl
iret
xchg
cld
call
xchg
lock
jo
mov
sbb
ds
cdq
jns
mov
sub
mov
fidivr
addr16
push
xchg
inc
add
dec
fisubr
pop
fidivr
ds
test
das
adc
and
aam
push
and
add
addr16
sahf
pop
retf
dec
pushf
xlat
std
mov
push
mov
push
inc
pop
add
mov
out
and
jge
mov
outs
inc
xor
inc
jmp
mov
fisubr
jns
inc
xor
mov
push
and
xor
or
aas
cmp
xchg
sar
dec
dec
xchg
rol
jle
or
cmp
mov
sub
adc
ror
popa
les
(bad)
mul
fwait
fwait
in
mov
mov
dec
gs
sbb
jmp
jecxz
or
imul
jecxz
adc
aas
pop
popf
pop
mov
aam
inc
inc
xchg
arpl
idiv
inc
out
jb
inc
(bad)
out
or
cld
mov
outs
xor
mov
add
das
sub
xchg
mov
jo
pop
inc
fisttp
adc
cmp
jecxz
test
mov
mov
imul
lea
dec
or
sub
pop
fisub
movs
and
xor
and
aad
mov
iret
loopne
call
push
je
dec
pop
stos
imul
jo
cmp
mov
push
xchg
pop
sub
(bad)
mov
xchg
pushf
mov
(bad)
nop
call
(bad)
cmps
mov
loope
bound
dec
nop
(bad)
push
out
test
arpl
fistp
mov
push
ja
gs
fcmovne
push
loopne
ja
scas
les
xor
and
cmp
shl
mov
ret
loopne
pop
out
push
test
ins
mov
jl
data16
adc
cli
aad
and
mov
push
movs
dec
test
dec
mov
cld
xchg
movs
retf
sar
ret
or
ins
mov
retf
push
rcr
sbb
add
test
pop
mov
js
pop
xchg
stc
sahf
fs
pusha
inc
add
inc
xor
xchg
test
enter
jae
push
mov
call
mul
jg
xchg
push
xchg
(bad)
jge
push
sub
imul
outs
mov
dec
(bad)
push
sbb
xchg
ins
mov
movs
mov
adc
dec
mov
enter
mov
dec
lahf
xor
sbb
sbb
(bad)
and
(bad)
mov
fs
inc
xor
inc
popa
lods
movs
or
mov
pop
lods
aaa
jle
lock
(bad)
inc
pop
mov
jb
mov
ds
pop
loopne
stos
aaa
pop
(bad)
pusha
push
cmp
add
lock
adc
hlt
stos
pop
(bad)
jp
out
arpl
sbb
pop
js
retf
sbb
cli
aas
lods
adc
inc
jbe
or
int
mov
xor
dec
std
data16
imul
shl
and
xchg
leave
outs
dec
push
(bad)
pop
movs
xor
mov
jmp
add
push
pusha
cs
mov
inc
push
or
enter
xchg
outs
hlt
ins
mov
xor
mov
ror
mov
sub
lds
and
shl
jmp
fbld
sub
and
xor
aam
mul
cmp
and
adc
aas
xchg
into
or
sub
mov
sar
daa
push
pop
fisttp
jle
push
dec
jmp
fisub
cmc
sahf
xchg
mov
aaa
popf
xchg
push
inc
not
stos
cld
push
fs
cmp
or
pavgb
or
push
(bad)
jmp
mov
stc
mov
in
dec
imul
jge
cmps
jmp
loop
push
inc
cmp
dec
push
mov
jo
fsubr
stc
xor
push
outs
sti
push
(bad)
test
push
loopne
in
loopne
adc
(bad)
inc
mov
pop
stc
add
frstor
fnstsw
popf
jno
push
pop
dec
dec
stc
in
adc
in
movs
call
(bad)
xchg
arpl
xchg
xchg
jns
daa
pusha
sti
aas
and
xchg
jbe
or
out
sar
fs
push
xchg
add
pop
add
jl
repnz
in
ret
test
fsub
xchg
imul
fs
xchg
jecxz
add
and
mov
adc
xchg
and
in
cmps
dec
cmp
push
ins
pop
out
inc
dec
sbb
mov
pop
pop
sub
cli
add
lock
loopne
and
and
test
sub
push
stc
repnz
bound
cmp
mov
fidiv
jp
add
sbb
push
and
dec
sbb
(bad)
int
div
and
and
(bad)
scas
push
jge
pop
sti
bound
stos
mov
pushf
in
ret
(bad)
mov
loope
and
ret
adc
push
(bad)
jmp
(bad)
fisub
jmp
adc
sbb
rol
mov
jmp
jl
js
pushf
mov
or
aam
mov
xchg
rol
hlt
mov
or
cwde
inc
adc
out
push
mov
lds
sti
jg
mov
pop
ds
sub
pop
ret
sub
clc
sbb
xor
sbb
fldenv
aas
cmp
mov
xchg
stos
(bad)
stc
or
sub
mov
loop
push
fmul
loopne
and
test
add
into
jl
ret
push
pop
sub
jg
pop
add
popa
(bad)
xor
outs
popf
xchg
test
mov
neg
in
sub
data16
mov
or
dec
or
fcom
add
ror
faddp
inc
sub
lds
retf
jbe
enter
mov
mov
and
mov
or
les
push
ins
adc
sbb
pop
outs
out
outs
rcr
outs
adc
dec
xor
lods
pop
mov
xchg
hlt
and
cmp
dec
push
popf
sbb
mov
(bad)
outs
mov
and
or
xchg
les
cs
repz
into
add
hlt
xchg
jp
inc
xchg
nop
clc
jmp
in
and
addr16
or
mov
cmps
aaa
pop
out
outs
lock
add
(bad)
sub
add
scas
add
sbb
and
push
xor
scas
fadd
lods
loop
popf
or
cmps
adc
(bad)
dec
das
or
sbb
out
lods
xor
data16
pusha
stos
add
sub
frstor
mov
cmps
and
dec
mov
jno
pop
sbb
lock
fistp
call
push
add
mov
xor
sbb
ss
mov
call
push
xor
test
lock
push
jle
inc
neg
push
repz
sbb
dec
dec
imul
xor
lds
repz
dec
jns
std
sahf
rcr
idiv
adc
mov
in
and
or
add
adc
bound
cld
jmp
push
mov
jmp
sti
dec
call
cmp
aad
test
stos
jb
mov
cmp
jnp
fcomip
(bad)
test
mov
movs
(bad)
aam
pop
popf
sahf
xchg
add
dec
mov
dec
xor
jo
cmps
stos
adc
stos
fwait
cmp
fcomp
add
test
push
jo
jnp
inc
adc
icebp
mov
or
stos
xchg
adc
xor
lea
mov
sbb
cdq
div
fwait
xchg
or
and
test
add
inc
retf
add
outs
imul
mov
in
mov
dec
or
repz
mov
test
imul
mov
cmp
(bad)
das
or
aas
adc
mul
bound
push
pop
and
pop
sbb
cs
shl
imul
stc
adc
cmp
ret
xor
(bad)
push
add
push
pop
mov
ret
push
sub
xchg
inc
jae
jno
cmp
pusha
or
frstor
mov
lock
cmp
pop
mov
movs
test
outs
xor
arpl
mov
dec
sar
add
sbb
idiv
imul
gs
ss
andps
lahf
in
loop
call
(bad)
and
test
pop
and
clc
out
aad
inc
rol
bound
sub
sbb
lock
test
stc
stos
ss
xchg
adc
sbb
stc
add
mov
inc
pop
stc
mov
je
sbb
call
jno
push
inc
es
xor
rcl
repz
shr
clc
test
inc
mov
xchg
xor
pushf
mov
retf
arpl
jmp
pop
dec
pushf
and
dec
xchg
bound
scas
das
popa
xor
imul
inc
push
test
pop
jecxz
ss
mov
sub
(bad)
popa
add
fldz
push
arpl
fwait
lods
add
jbe
pusha
call
out
pop
fs
iret
iret
out
cwde
ins
test
repz
push
mov
call
fcmove
stos
push
js
sbb
cmp
jp
outs
sbb
inc
add
cwde
aas
or
icebp
inc
xor
dec
repz
std
jg
mov
sbb
retf
mov
dec
xchg
jmp
sti
scas
and
ds
(bad)
jnp
iret
sbb
test
mov
(bad)
out
popf
inc
fstp
(bad)
mov
mov
mov
dec
shl
jp
mov
adc
sti
fwait
popf
or
out
out
inc
lock
sbb
pop
les
adc
and
int
aam
sbb
cmc
push
mov
ret
(bad)
pop
mov
(bad)
jmp
fst
int
js
sub
jmp
and
and
xlat
int3
fadd
test
stos
push
daa
sbb
pop
mov
daa
adc
loop
test
mov
int3
fst
or
inc
iret
dec
mov
stc
adc
push
xchg
push
jmp
jno
arpl
add
dec
jle
adc
in
cdq
loopne
dec
sub
lock
push
dec
xchg
xchg
pop
jmp
icebp
(bad)
push
repz
popf
mov
sub
sbb
fstp
mov
pop
and
lods
ja
jmp
pop
pop
sub
push
dec
add
stos
jmp
stos
inc
dec
mov
in
mov
lds
in
jnp
jnp
iret
xchg
(bad)
xchg
outs
cmps
xor
add
pop
jecxz
icebp
cmp
inc
mul
test
sub
in
int
fdivr
mov
repz
ss
jno
shr
scas
daa
bound
mov
or
retf
push
pusha
shl
ror
sar
and
xor
clc
gs
jo
or
sti
cmps
and
dec
imul
hlt
rcr
or
jg
std
ret
or
xchg
fs
retf
add
fist
into
mov
mov
sub
push
movs
xchg
sti
scas
cmp
ret
ja
scas
xchg
movs
neg
inc
jae
rcl
sub
sub
pop
push
push
(bad)
mul
les
(bad)
movs
push
stos
mov
dec
mov
xchg
mov
mov
das
fidivr
lahf
cmp
dec
test
sub
out
es
or
fcom
push
ret
sbb
mov
repnz
dec
adc
mov
lods
repnz
add
cdq
enter
imul
dec
xchg
push
loop
aas
sbb
shl
jecxz
sub
mov
inc
push
std
pop
adc
int3
inc
sub
out
jle
aam
mov
xchg
mov
sbb
xbegin
out
out
xor
fisub
or
or
loope
adc
ins
mov
(bad)
cmp
inc
inc
mov
es
fidivr
clc
xchg
and
dec
and
sahf
cwde
leave
retf
outs
sub
mov
add
jb
pop
(bad)
cli
div
shl
ror
xchg
mov
pushf
movs
mov
or
pusha
fldcw
mov
jmp
repz
out
cmp
mov
enter
adc
out
jb
xchg
jg
sbb
in
retf
out
push
ret
nop
inc
cmps
jno
jnp
jmp
not
int3
pop
and
xchg
sbb
in
adc
test
sbb
push
or
cmp
(bad)
rcl
add
adc
mov
mov
test
mov
jbe
xchg
sbb
and
(bad)
outs
into
stos
aaa
pushw
div
call
mov
push
and
ret
xchg
pop
mov
inc
out
sub
inc
outs
cmp
jae
mov
scas
add
aam
dec
cmc
out
jle
lds
jecxz
imul
mov
sbb
sbb
popf
jb
adc
retf
out
inc
pusha
dec
nop
gs
sbb
cmc
les
sbb
call
ds
sbb
dec
popa
dec
out
dec
outs
pop
sbb
fdivr
test
inc
movs
loopne
and
ins
outs
mov
push
push
data16
(bad)
(bad)
je
or
sub
jb
int
cs
cmp
fistp
push
adc
push
scas
lock
test
inc
nop
inc
(bad)
mov
adc
cs
movs
push
push
jns
dec
pop
inc
loope
retf
xor
inc
dec
aad
cmps
imul
out
fs
jnp
daa
lds
call
in
adc
(bad)
shr
sbb
cmc
mov
into
cs
xchg
adc
sar
mov
jle
mov
cmp
jnp
pop
xlat
and
dec
inc
inc
pop
lods
push
enter
adc
jo
xor
adc
rcr
push
jp
jmp
push
sbb
sub
push
jbe
jmp
jae
dec
int3
ret
imul
adc
cmps
cmc
pushf
jae
pop
test
or
inc
rol
mov
sbb
xor
cmp
fcomp
cwd
ja
dec
cwde
ss
ja
dec
jmp
les
dec
push
jle
mov
sahf
(bad)
mov
pop
bound
shl
iret
cmp
bound
xchg
cs
das
push
imul
mov
test
call
add
push
sub
cmp
inc
icebp
and
and
jge
not
mov
pop
xor
retf
mov
push
cmp
loopne
addr16
dec
test
mov
mov
dec
push
mov
in
movs
inc
outs
sub
test
shld
xor
cmp
cmc
cmps
pop
int
jae
push
add
daa
jmp
ret
xchg
add
test
dec
int3
test
stos
mov
adc
mov
ja
int3
hlt
daa
(bad)
xor
add
and
add
(bad)
nop
and
lahf
aas
sub
ins
dec
xchg
add
out
add
ins
into
xlat
dec
mov
loopne
adc
mul
add
fcmovu
addr16
hlt
or
pusha
les
jae
xchg
pop
jbe
or
xchg
sbb
and
enter
sti
ss
mov
xor
rol
stos
adc
or
or
mov
pop
sbb
pop
sub
leave
les
inc
or
pusha
add
xor
inc
dec
sbb
push
pushf
test
in
outs
adc
jge
pop
test
fist
pop
adc
ret
jecxz
xchg
scas
mov
(bad)
xchg
mov
loop
mov
mov
push
and
imul
mov
adc
sbb
stos
mov
retf
xchg
cmps
addr16
xor
mov
pop
and
xor
sub
mov
movs
fsubr
sub
mov
adc
aam
mul
mov
push
mov
add
in
inc
stos
push
sbb
mov
aam
and
ret
or
ds
xchg
lss
data16
and
aad
sbb
jp
cs
jno
loopne
outs
mov
mov
inc
(bad)
out
xchg
jg
movs
adc
adc
rcl
ret
jo
jmp
in
push
mov
cs
add
pop
push
push
rol
xchg
xchg
and
cwde
push
add
cmp
sub
mov
jo
sub
jae
or
and
ins
and
data16
imul
push
mov
mov
int3
out
mov
into
add
push
adc
cmps
iret
outs
fstp
popa
jmp
sbb
addr16
jmp
pop
add
or
retf
mov
or
mov
and
(bad)
xlat
push
jb
xor
mov
test
test
inc
cs
(bad)
xlat
pop
adc
pushf
jnp
dec
and
out
inc
lods
sbb
fmul
or
aam
push
sbb
jns
xor
push
pop
jle
mov
adc
pop
cwde
movnti
inc
dec
jae
mov
mov
push
aam
mov
sahf
inc
pop
pop
jle
fwait
sbb
loop
cmps
scas
inc
fnstsw
sbb
sub
push
pop
inc
or
push
ret
es
nop
mov
pop
shr
sub
xor
sub
outs
pop
mov
ss
cld
xchg
aad
enter
rcr
sub
dec
jns
xor
fwait
pop
je
cmp
fldcw
je
push
mov
inc
and
mov
push
scas
jle
jno
in
xchg
jle
les
out
pop
test
mov
and
push
iret
mov
and
outs
pop
cmp
mov
mov
(bad)
xor
ss
aam
outs
cli
shr
jecxz
xchg
lock
push
or
mov
jno
xchg
push
cmp
lods
mov
cmc
add
jmp
sar
imul
bnd
cmps
push
push
pop
out
xor
jle
jo
mov
bound
lods
mov
mov
stc
test
or
ja
mov
inc
rcr
je
movs
aam
mov
outs
mov
adc
add
ret
jp
mov
sub
fs
dec
pop
pop
pushf
mov
mov
lahf
(bad)
jmp
sar
arpl
sbb
sbb
fld
ins
push
mov
inc
xor
stc
mov
pop
xchg
into
and
pop
mov
fcomp
icebp
mov
inc
dec
bnd
mov
cdq
cmp
into
inc
in
push
sbb
xor
shl
leave
jne
out
inc
dec
hlt
out
pop
pop
push
inc
in
or
mov
(bad)
retf
hlt
rcr
sbb
in
cld
mov
js
call
adc
popf
adc
cli
int
outs
(bad)
push
dec
pop
push
loopne
jecxz
or
mov
lods
pushf
cmp
lds
sub
arpl
fsubr
sbb
sub
(bad)
adc
dec
and
outs
(bad)
loop
cmc
jg
or
out
add
xor
jecxz
je
cld
push
sub
mov
imul
lea
nop
fsubrp
dec
lods
sbb
and
add
add
xorps
inc
out
pop
and
movs
stc
sbb
or
retf
and
push
ja
imul
int
dec
lods
aad
jnp
test
dec
cli
push
lahf
jl
pop
xchg
test
dec
or
cmp
stc
ficomp
sar
cld
ins
pop
push
mov
shl
mov
jns
popf
pop
loope
in
mov
mov
push
test
push
sub
adc
or
sbb
inc
dec
sub
lahf
(bad)
int
inc
sub
or
and
pop
pop
arpl
mov
pop
arpl
loope
xchg
or
mov
push
scas
loopne
mov
retf
les
pop
add
push
xchg
lea
shr
push
dec
cmp
retf
lods
ss
clc
sbb
jnp
arpl
shr
mov
jmp
cdq
test
push
dec
call
add
scas
jl
daa
(bad)
cmps
out
ja
pop
adc
sbb
popa
mov
pop
sbb
pop
das
jno
push
mov
xchg
(bad)
es
imul
push
stos
mov
xor
xchg
mov
or
sub
stos
aam
mov
mov
push
cmps
shl
mov
mov
jae
loop
jnp
inc
dec
pop
jmp
sahf
mov
mov
sbb
shr
clc
and
jecxz
js
adc
push
out
popa
sbb
rcl
arpl
jbe
out
xor
jnp
dec
or
jp
sub
(bad)
loop
stc
and
(bad)
pop
or
add
ds
xor
cmps
fistp
ins
add
mov
inc
jb
jg
lea
xor
jo
or
sub
imul
mul
adc
aad
pop
pop
add
push
(bad)
sub
das
cld
xor
cmps
or
dec
lahf
ja
dec
cs
aad
repz
call
aaa
movs
test
push
je
xchg
and
jle
gs
add
jb
cwde
out
sbb
test
jl
mov
xor
pop
push
xchg
xor
push
in
sbb
popa
lods
jbe
cmp
push
mov
(bad)
aam
(bad)
sbb
or
push
pop
std
(bad)
je
adc
fs
pusha
pop
fimul
adc
nop
and
cli
pop
in
xchg
in
cmp
inc
xor
lods
sub
jmp
popa
movs
rcr
add
sbb
sahf
shl
mov
pop
push
retf
dec
mov
fidivr
stos
pusha
push
inc
loope
ficomp
push
cmp
mov
imul
jae
pop
pop
adc
call
pop
enter
(bad)
sbb
in
or
push
xchg
pop
jp
in
jg
daa
xchg
aam
enter
mov
pop
push
jge
(bad)
jno
dec
pop
je
sbb
lds
xor
push
push
call
lods
outs
pop
ins
into
add
mov
dec
xor
inc
pop
stos
std
int
dec
pop
push
pop
push
mov
sbb
and
(bad)
dec
xchg
mov
jp
add
jp
or
ss
and
pop
test
add
dec
movs
adc
pusha
test
fisubr
cmps
cmp
add
mov
xlat
ret
mov
movs
or
jmp
and
push
mov
es
ins
mov
enter
outs
arpl
xchg
push
cmp
add
fdiv
ins
mov
cmp
pushf
jns
lahf
dec
mov
mov
add
mov
and
xlat
lods
cwde
sahf
ins
js
(bad)
mov
popa
imul
sbb
lahf
js
inc
sbb
or
adc
adc
(bad)
sub
scas
pop
pop
inc
fcmove
addr16
pop
dec
pop
sar
adc
lods
or
jbe
js
sub
jno
cmp
rcr
xchg
or
or
imul
fcom
out
inc
sub
ins
push
movs
sahf
retf
pusha
movs
dec
(bad)
(bad)
jmp
sbb
shl
call
cmp
retf
xchg
fadd
xor
sub
xor
mov
repz
movs
sub
jg
sahf
add
xchg
cmps
mov
sbb
out
repnz
dec
xor
jae
call
in
or
jg
dec
adc
pop
inc
ret
cmp
sbb
cmp
pop
movs
jecxz
lods
movs
sub
mul
mov
push
ja
lahf
cdq
xor
clc
sub
mov
cmps
xor
(bad)
adc
push
add
je
sti
mov
sahf
and
cdq
inc
dec
ret
adc
arpl
add
js
je
jne
jnp
pop
xchg
aad
dec
mov
(bad)
imul
fbld
sub
rcl
mov
xor
mov
js
mov
hlt
dec
pushf
scas
enter
and
push
add
jb
and
jb
ror
mov
mov
sbb
mov
(bad)
loopne
leave
push
ins
mov
in
adc
dec
pop
je
or
(bad)
sbb
loope
xchg
and
dec
ficomp
enter
jbe
sbb
(bad)
out
imul
test
outs
sbb
mov
cmps
or
jmp
aam
int3
add
dec
pop
test
or
mov
and
or
scas
js
ins
leave
push
sbb
pusha
mov
ret
push
pusha
inc
scas
daa
xchg
jno
jns
mov
xchg
aad
push
mov
fist
sbb
jb
push
sub
mov
imul
adc
jg
mov
je
add
cmp
imul
mov
(bad)
call
xlat
adc
into
dec
js
pop
xchg
or
inc
jge
std
xor
dec
cli
leave
add
dec
push
inc
fld
dec
das
jecxz
pop
mov
scas
add
pavgw
jae
mov
or
xor
xor
pop
(bad)
push
dec
imul
movs
ret
(bad)
mov
test
js
jmp
push
push
fadd
mov
leave
aaa
inc
pop
mov
and
sub
sub
in
add
add
enter
pushf
jb
fcomp
test
shl
scas
push
pop
test
neg
xor
xlat
je
add
pop
aad
ds
or
adc
ret
loopne
fsubr
hlt
jae
jmp
cmp
push
call
xor
iret
and
stos
add
lds
xor
xchg
aas
ret
xchg
and
outs
adc
mov
push
(bad)
pop
xlat
push
push
in
mov
xor
pop
call
pushf
or
repnz
test
mov
add
cmp
dec
and
jmp
sbb
sahf
(bad)
xchg
mov
fwait
cmp
in
xchg
sub
int3
nop
test
aaa
mov
not
or
or
lods
ds
inc
xchg
out
out
lock
mov
fs
jle
je
pop
dec
cmp
std
sub
lods
es
mov
mov
xor
mov
ins
pop
or
add
push
mov
aam
push
push
sub
lea
xchg
and
jb
sti
mov
bound
cmp
or
sub
jg
xchg
js
dec
fisub
mov
and
xor
jb
mov
(bad)
mov
das
inc
iret
ret
adc
std
mov
imul
enter
mov
in
push
cdq
int3
cmc
out
xchg
jmp
mov
repnz
mov
jle
jb
bound
push
(bad)
test
(bad)
ins
pop
xor
sub
dec
nop
cmp
sbb
movs
rcl
mov
adc
adc
popa
pop
pop
cmp
cmc
into
mov
test
cmp
xor
imul
in
and
out
fild
test
inc
push
shl
daa
aas
cmps
xchg
lahf
mov
add
std
mov
in
int3
(bad)
in
lds
or
loope
test
jmp
cwde
push
pop
loop
pop
(bad)
push
dec
into
adc
retf
shr
jo
mov
repz
adc
test
fwait
loop
lds
outs
clc
pop
outs
xchg
in
push
out
test
and
push
and
mov
es
je
xor
cmps
sar
xor
cmp
jecxz
fild
je
add
xchg
out
stos
push
xor
rol
pop
adc
aas
sbb
js
rcl
cmps
es
fwait
and
mov
push
movs
ror
or
das
out
pop
push
sbb
jbe
push
mov
mov
cmp
mov
jg
xchg
sub
jns
xchg
(bad)
mul
mov
xor
scas
inc
out
out
push
inc
cmps
mov
xor
pop
jge
mov
dec
leave
cwde
icebp
mov
hlt
xor
das
fadd
cli
and
inc
adc
cmp
add
add
ret
test
pop
push
or
jb
sbb
nop
mov
in
lods
fidivr
or
dec
xchg
cmps
mov
aas
fdivr
popa
xchg
dec
out
movs
pop
data16
jp
jl
xchg
xchg
call
aad
mov
int3
dec
fidivr
pop
shl
retf
aad
repnz
adc
push
xchg
arpl
mov
or
movs
cmps
hlt
push
mov
xchg
scas
cwde
out
in
out
das
mov
adc
jecxz
cld
out
mov
dec
int3
out
pop
cmp
das
cmc
push
or
pop
iret
add
sbb
mov
jmp
aaa
and
hlt
clc
push
add
sahf
pop
or
fld
xor
jg
fsub
in
jmp
pop
or
or
mov
xor
and
mov
out
or
add
mov
inc
bswap
xor
mov
add
xor
call
jns
inc
inc
push
inc
mov
je
fadd
btr
xchg
shl
fnstsw
xlat
cmps
jp
sti
inc
inc
lahf
fiadd
les
movs
daa
jge
popa
pop
xor
xchg
das
sbb
mov
sub
ret
push
sbb
sbb
stos
sbb
inc
cmps
mov
ror
cmp
shr
int
imul
xlat
sub
dec
mov
xor
xchg
(bad)
mov
imul
icebp
les
sbb
pushf
icebp
in
push
imul
movs
push
mov
loopne
clc
dec
jcxz
ss
aas
or
pop
inc
sahf
cwde
dec
push
ror
sbb
mov
out
inc
lds
dec
fst
and
jle
ins
cmp
rcl
cmp
in
pop
mov
mov
in
scas
cmp
xchg
inc
and
jecxz
jge
pop
fwait
rol
inc
daa
stos
cmp
loop
mov
cmps
sti
jge
jb
jnp
ror
fcomp
pop
and
cmp
pop
or
nop
dec
cmp
and
mov
sbb
sti
push
cmp
fs
push
jb
pop
sbb
dec
ins
sub
dec
mov
sti
mov
adc
dec
adc
sub
mov
inc
or
je
aad
ds
loopne
mov
cld
iret
mov
scas
sti
bound
dec
(bad)
(bad)
sbb
sbb
mov
mov
jp
mov
jg
dec
loop
lods
xor
mov
push
imul
ins
xor
adc
in
mov
fadd
and
xor
imul
mov
in
mov
sbb
mov
mov
cmp
jl
xor
cli
(bad)
sub
ret
out
ja
push
cmp
loope
test
ret
inc
hlt
outs
or
pop
loopne
mov
push
es
js
jecxz
fidivr
fidivr
cmp
shl
std
adc
jmp
add
sbb
scas
dec
sub
rcr
leave
xchg
sub
and
outs
cmp
mov
fsub
cmp
add
sahf
xlat
push
fs
lods
cmps
xchg
popa
or
mov
scas
xchg
in
icebp
push
jns
outs
mov
xorps
jle
push
ret
jge
scas
pushf
ret
pop
in
push
jp
jno
pusha
pop
adc
ja
push
mov
jmp
jae
mov
jg
test
pop
jo
sub
pop
jne
add
cld
fisttp
jb
adc
int3
aad
in
dec
mov
(bad)
aam
or
jecxz
(bad)
jmp
ret
pop
jb
sbb
sbb
pusha
jl
cmp
int
xlat
rcl
pop
sub
and
push
mov
lahf
test
adc
stos
fidiv
aaa
loope
(bad)
imul
(bad)
sbb
push
jae
dec
imul
call
scas
inc
es
daa
or
(bad)
hlt
push
je
sbb
cmp
jne
dec
xor
pop
inc
xchg
cmp
imul
inc
dec
pop
cmp
sub
push
dec
xchg
popf
test
mov
sub
in
fistp
retf
dec
repz
adc
mov
sub
and
jne
fstp
sub
fldcw
mov
xchg
pop
mov
sub
sti
xor
dec
or
in
imul
mov
(bad)
(bad)
(bad)
ins
xor
mov
cmp
in
pop
dec
push
push
cmp
pop
pop
fnstsw
fdivp
jbe
push
sub
sub
out
or
xchg
sub
mov
mov
xor
rol
dec
push
sub
add
enter
scas
mov
aad
mov
inc
cmp
xchg
inc
mov
mov
mov
clc
cmp
mov
aam
test
aam
addr16
addr16
xor
or
xchg
sbb
and
and
and
arpl
(bad)
add
pop
shl
push
pop
out
nop
cwde
rcl
pop
std
ss
rcl
in
int3
jmp
imul
test
les
arpl
and
xor
out
and
ficom
in
jmp
sbb
pop
test
add
mov
and
mov
xchg
pop
sub
fistp
scas
repz
idiv
fldenv
xor
mov
pop
cld
xchg
xchg
inc
test
add
js
xor
push
shr
add
mov
mov
fiadd
aas
dec
and
ja
out
lods
arpl
xchg
mov
push
mov
cmp
fcmovne
jp
push
mov
mov
fistp
adc
inc
stos
cmc
jmp
dec
lds
arpl
sbb
lods
push
push
psrlw
fist
pop
call
xlat
push
mov
add
jbe
add
call
fcomp
cmp
sub
mul
or
ins
jge
add
fwait
sbb
inc
mov
xor
or
mov
repz
rol
inc
ds
outs
mov
enter
push
cmps
or
je
call
push
call
jmp
and
imul
retf
mov
mov
(bad)
stc
scas
clc
into
jp
loope
outs
les
in
mov
leave
adc
pushf
out
mov
popa
pop
pusha
test
cdq
push
mov
scas
adc
test
scas
es
ins
or
mov
movs
and
or
das
cmp
sbb
pop
aam
cmp
aas
pushf
lods
mov
push
daa
(bad)
dec
enter
cmps
std
push
pop
add
leave
fmul
sbb
shl
or
mov
or
push
and
ins
movs
xchg
dec
es
(bad)
xlat
jecxz
push
push
jmp
mov
scas
shr
fwait
idiv
adc
adc
mov
and
mov
aas
call
push
push
adc
fwait
js
(bad)
jge
mov
clc
add
ins
or
sbb
jecxz
in
aas
mov
jmp
xchg
cmp
pop
dec
pusha
xchg
and
int
outs
arpl
mov
aaa
outs
in
sbb
fwait
and
out
es
add
inc
dec
jmp
xor
pop
test
cmp
jmp
dec
add
jecxz
retf
mov
aad
jmp
sbb
gs
sti
mov
push
xchg
fwait
sbb
inc
mov
fwait
mov
sub
(bad)
retf
jp
pop
stos
(bad)
add
adc
mov
cmp
adc
mov
adc
movs
mov
sbb
sbb
loop
add
push
fbstp
cmp
dec
sub
rol
sub
(bad)
repnz
fiadd
mov
and
and
xchg
jno
jne
test
fchs
jecxz
xchg
cdq
sbb
fild
cli
test
mov
call
push
std
les
je
aad
inc
in
xchg
(bad)
cwde
out
outs
and
jl
jnp
sub
scas
retf
adc
out
div
or
inc
jo
adc
fiadd
or
fist
and
sahf
or
jl
mov
xor
mov
(bad)
adc
and
int3
cmp
jno
gs
cwde
pop
dec
jl
mov
cmp
sub
or
sbb
out
dec
bound
mov
inc
inc
sar
jnp
adc
lahf
ja
push
cmp
jbe
jo
imul
sar
test
xor
sub
sbb
rol
repnz
jg
xchg
and
sub
out
mov
pushf
lods
out
mov
mov
jae
(bad)
js
call
cmp
out
ss
pop
movs
push
mov
fbstp
pop
add
mov
mov
cmp
dec
mov
cmc
jne
xor
gs
inc
mov
xor
push
test
mov
push
gs
into
int
bound
das
sub
xor
and
test
add
mov
test
mov
rcr
push
jno
push
call
mov
nop
stc
mov
inc
xlat
add
out
cdq
daa
sub
ret
adc
(bad)
dec
ret
into
arpl
(bad)
les
add
inc
frstor
dec
rcl
cmps
ret
repz
or
pop
test
aad
adc
ja
pop
fild
hlt
shl
sub
jge
call
lock
iret
stc
aaa
in
inc
sbb
cmp
pop
leave
jae
cmp
pop
dec
xor
mov
sbb
mov
mov
jle
jge
jmp
push
popf
push
sar
jo
je
sar
fbld
jp
jp
mov
shl
les
out
lods
loope
cmps
cmp
xor
pop
test
push
cmp
xor
adc
movs
mov
js
and
imul
sbb
das
ret
cdq
aaa
and
sti
push
call
(bad)
jmp
fnsave
clc
retf
icebp
xchg
loope
mov
jle
mov
push
mov
test
rcr
add
mov
int
test
sar
inc
or
imul
push
jg
ret
sub
inc
loop
out
mov
rcr
xchg
int3
ss
(bad)
repnz
ret
pop
add
sar
fwait
int3
jns
sub
add
das
sub
pusha
adc
retf
jae
add
dec
xchg
daa
call
ud2
mov
cld
adc
and
sbb
dec
dec
xor
loop
aad
mov
(bad)
sbb
in
push
les
jno
imul
jmp
pop
and
test
jecxz
cmp
jne
test
jne
sbb
pop
lods
xchg
aaa
cs
dec
mov
hlt
jmp
push
push
sbb
fidiv
fld
inc
clc
jl
pusha
mov
or
pushf
sbb
mov
outs
inc
ret
aad
or
adc
jg
test
clc
xor
cmp
movs
adc
xchg
mov
mul
inc
adc
mov
add
xlat
sbb
cmp
adc
add
ins
dec
ins
in
pop
loopne
sbb
loopne
sbb
adc
or
and
xchg
je
push
stos
rcl
sti
in
mov
scas
cmp
test
jge
idiv
mov
mov
fldcw
push
inc
or
es
pop
lahf
daa
out
cmps
lods
shl
dec
mov
push
sbb
pop
push
pushf
mov
int3
cmp
icebp
div
push
int
out
pop
cmpxchg
(bad)
outs
dec
push
es
stos
jg
retf
call
xchg
imul
(bad)
mov
adc
cwde
mov
sub
and
cmp
xor
sbb
call
cmc
out
sub
aas
dec
push
scas
imul
fst
dec
cdq
add
fist
lahf
popa
adc
or
mov
mov
add
dec
out
xlat
repz
dec
mov
sbb
adc
mov
inc
adc
mov
mov
bound
cdq
push
and
dec
fild
ins
sahf
mov
dec
jl
jno
pusha
jno
jb
leave
sbb
push
dec
dec
xor
repz
scas
scas
or
xor
in
xor
fistp
les
rcl
sti
lea
or
dec
jp
or
push
mov
call
and
test
outs
cwde
retf
mov
push
push
push
and
lock
xor
pop
add
mov
mov
pop
fs
call
test
dec
adc
push
aad
aas
jg
arpl
dec
mov
add
sbb
push
dec
sub
gs
test
psubsb
int3
shr
dec
cmp
rol
pushf
lds
test
ja
xchg
pop
shl
stos
xor
add
test
shl
lods
in
test
stos
add
pop
ins
mov
xchg
ins
sbb
and
popa
test
add
mov
mov
daa
scas
mov
add
push
test
das
mov
mov
mov
sbb
outs
inc
mov
jp
cmp
cli
mov
cmp
dec
jl
test
pop
sahf
jp
js
rol
pop
call
mov
add
push
inc
mov
mov
lods
xor
add
pushf
idiv
mov
call
jecxz
neg
inc
cmc
fld1
ins
dec
inc
nop
add
adc
sbb
jns
out
mov
fcomp
mov
cmps
lods
and
xchg
cdq
test
in
xchg
jmp
mov
mov
xchg
hlt
jae
adc
(bad)
stc
pop
fistp
xchg
ss
push
test
aas
adc
push
xor
and
ficomp
jmp
outs
aas
xor
mov
xchg
ror
adc
out
push
cmp
xor
in
icebp
fucom
pop
inc
mov
jl
pop
rol
cmp
and
push
std
lock
sbb
sub
mov
xor
cmp
adc
sti
les
xchg
add
mov
in
pop
out
push
sbb
adc
int
xchg
jmp
add
pop
cmp
cmp
sub
icebp
movs
in
(bad)
and
jns
rcl
cmc
in
stos
cli
mov
dec
jnp
pop
rcl
imul
adc
enter
pop
js
mov
loope
lods
pop
int
out
cmps
mov
pop
neg
nop
mov
inc
mov
fwait
xchg
mov
mov
pop
ja
xchg
sbb
enter
xchg
pop
adc
jb
xlat
lods
push
stos
jbe
enter
cmp
xchg
jns
mov
xchg
jne
push
adc
sbb
pop
mov
lds
sbb
inc
xor
stc
imul
cld
push
add
loope
or
sub
add
ror
in
mov
xchg
mov
mov
in
mov
pop
jg
fnstcw
cmp
fwait
dec
and
xor
sub
push
sbb
cmp
movs
clc
repnz
xor
mov
sbb
imul
les
jb
jecxz
mov
sar
shl
frstor
test
mov
(bad)
jl
cmc
jbe
out
dec
ret
or
ret
adc
adc
mov
dec
xchg
ins
sahf
add
loop
cmp
int3
stc
mov
idiv
adc
cmps
lods
call
movs
mov
pop
repnz
sbb
push
jne
cmp
xchg
push
xor
adc
out
cmp
push
ins
pop
inc
aad
mov
pop
das
dec
call
mov
ja
pop
jo
imul
jae
adc
jle
movs
sub
and
mov
and
fwait
xchg
dec
cwde
and
sub
call
sub
mov
and
sub
sti
xchg
xchg
in
and
dec
repz
fldenv
loope
and
cli
adc
nop
imul
mov
mov
pop
nop
cwde
pop
pop
pop
sbb
pop
inc
cmc
imul
xchg
int3
iret
inc
rcl
mov
fnsave
sub
(bad)
movs
in
repnz
call
mov
ins
cmps
inc
fs
pop
ret
gs
jno
ja
cmp
daa
mov
pop
cmp
cmps
inc
mov
scas
les
jecxz
mov
(bad)
sbb
push
sbb
lods
in
jmp
and
mov
test
test
outs
mov
pop
jmp
and
in
leave
mov
out
adc
xchg
lahf
and
lock
mov
arpl
int
out
test
test
xchg
mov
pop
inc
and
lea
loop
repz
push
enter
test
or
imul
or
cmc
scas
inc
inc
cli
add
sti
jne
sbb
enter
push
mov
xchg
jb
adc
xchg
adc
mov
daa
inc
fisttp
sahf
xor
popa
mov
dec
push
adc
inc
jle
jno
fisub
xchg
aad
retf
retf
add
movs
stc
pop
pop
sub
inc
mov
jnp
cmp
sub
jp
icebp
xor
inc
je
mov
adc
fucomi
popf
dec
dec
lea
mov
int
mov
sbb
xor
push
repz
je
cmp
mov
mov
mov
push
jmp
push
bound
ss
(bad)
(bad)
jae
ja
xlat
xchg
fld
adc
cmp
bound
sar
test
sbb
out
sbb
cmp
pop
int3
bound
cli
add
inc
and
sbb
mov
mov
loope
push
in
leave
pushf
shl
je
fdivrp
repz
or
mov
jmp
xchg
call
aam
adc
inc
jmp
dec
or
ds
and
int
fsubr
adc
lods
std
fisub
sbb
rcl
ficomp
cmp
je
pop
jbe
sbb
cs
repz
jnp
imul
pop
push
jns
enter
jbe
(bad)
movs
xor
in
xchg
ins
call
inc
pushf
repz
shl
mov
or
cmp
sub
xchg
xchg
or
sbb
je
je
or
adc
push
dec
jne
mov
mov
fist
call
(bad)
ins
sbb
inc
xchg
bound
dec
cwde
add
idiv
fwait
ss
pushf
or
mov
icebp
daa
mov
inc
in
mov
xsave
push
xchg
ret
sub
out
shl
in
outs
mov
bound
sbb
xor
ja
dec
pop
dec
test
mov
inc
ins
and
ins
pushf
pop
push
dec
sti
gs
loop
retf
adc
enter
mov
int3
mov
in
mov
inc
sbb
jmp
in
push
xor
jnp
ins
pusha
test
lods
call
push
jo
ins
dec
out
icebp
pop
mov
add
shl
call
imul
or
mov
call
(bad)
jne
pop
jmp
inc
and
inc
cmp
pushf
lods
ds
jbe
push
jns
mov
or
(bad)
sub
loope
ds
jne
mov
sub
mov
jno
xchg
(bad)
in
fadd
iret
dec
mov
mov
fisubr
aaa
sub
data16
les
gs
sbb
xchg
stc
je
jnp
rol
call
push
pop
sti
xor
inc
jae
test
add
sub
rcr
out
sub
xor
ds
test
pop
xlat
xchg
stos
jb
popa
cmps
and
je
add
out
setl
push
xchg
retf
jmp
ins
nop
jmp
xor
xor
enter
push
in
push
jmp
push
sub
dec
rcl
adc
sub
add
push
cwde
add
scas
pop
inc
sub
icebp
inc
push
dec
sub
call
pop
test
pop
dec
ins
jmp
stos
stos
add
das
aam
or
(bad)
mov
jl
sub
mov
test
push
pop
mov
jb
push
les
test
ret
mov
stc
inc
loope
jb
cmp
and
mov
sub
push
mov
nop
loope
add
cmp
jb
and
xlat
push
in
add
sub
xor
mov
scas
ds
mov
mov
mov
popa
stos
cmp
or
and
inc
xchg
mov
out
push
lds
(bad)
adc
into
scas
fwait
mov
xor
mov
cmp
push
icebp
cmps
loop
and
pop
add
push
xor
and
pop
jl
sbb
xor
xor
dec
and
sar
stc
xchg
mov
cmp
xchg
jle
and
sbb
popf
(bad)
sub
enter
ds
xchg
xor
sub
std
iret
pop
pop
add
mov
and
xchg
fs
jmp
and
jo
shl
add
lods
pop
cmc
dec
or
iret
mov
gs
add
out
outs
(bad)
scas
fnsave
out
data16
out
shl
pop
mov
movs
mov
stos
mov
or
push
(bad)
shl
adc
(bad)
xchg
or
jns
sub
aam
repz
xor
mov
add
or
lea
jecxz
das
sbb
dec
loopne
mov
mov
mov
aaa
popf
xor
ins
jnp
shl
and
inc
and
mov
xchg
iret
je
pop
(bad)
cmp
jmp
(bad)
push
pusha
inc
push
pushf
sbb
inc
jbe
push
jp
daa
sub
movs
lods
add
pop
sub
dec
adc
jp
add
mov
jae
bound
shl
movs
cmps
push
(bad)
push
fsubp
sahf
jb
fidiv
cmp
shl
rcl
jo
push
call
add
mov
mov
les
cmc
mov
cmp
(bad)
push
cmp
lock
sub
cmp
dec
test
pop
pop
cmp
inc
push
in
inc
jmp
pop
(bad)
loopne
(bad)
pushf
mov
cld
fwait
(bad)
in
lods
jmp
dec
mov
nop
jge
jmp
or
xchg
faddp
fwait
addr16
mov
jmp
or
mov
push
pop
or
fcmove
cmp
stos
ds
jne
pop
les
int3
sbb
dec
iret
push
mov
mov
rcr
shl
dec
mov
mov
jecxz
je
clc
mov
xchg
sbb
(bad)
and
xchg
mov
cmc
jl
sar
sub
or
jmp
dec
jae
lahf
les
jne
retf
clc
cmc
dec
lahf
mov
inc
adc
lock
xor
loope
movs
scas
loop
and
dec
mov
outs
nop
lods
ret
daa
mov
lods
jbe
lock
repz
sbb
jns
xchg
pop
push
mov
test
add
mov
into
inc
mov
mov
mov
dec
hlt
push
fist
mov
lea
mov
push
pop
es
mov
lds
sbb
mov
rol
mov
aaa
popa
pop
imul
shl
xor
push
aaa
sub
inc
cmp
and
push
mov
sti
and
popa
inc
adc
nop
xor
call
stc
pop
or
imul
mov
int3
dec
pop
outs
iret
and
loopne
in
jne
mov
fsubr
loopne
ss
cmp
jne
pusha
inc
loopne
sar
push
sub
(bad)
jle
mov
jecxz
sub
arpl
sbb
add
adc
sahf
jnp
dec
fsubr
pop
and
sahf
pusha
std
push
bound
mov
push
or
test
and
imul
pop
ins
shl
inc
loop
int3
in
add
mov
popf
jnp
or
xlat
adc
mov
rol
loopne
lods
rcr
adc
jecxz
imul
push
push
(bad)
imul
inc
push
mov
xor
jg
dec
pop
cmc
(bad)
in
push
mov
aad
push
push
inc
daa
clc
std
cmps
cmp
pop
jno
adc
dec
xor
push
repz
mov
mov
data16
ja
out
shl
jg
cmp
push
(bad)
mov
cmp
cdq
fiadd
aam
repnz
xor
stos
pop
ja
sub
inc
xor
cli
mov
fnsave
sar
mov
mov
ds
inc
or
jne
sbb
imul
hlt
jae
in
jmp
pop
stos
or
es
or
sub
cmp
pushf
(bad)
hlt
or
sub
push
iret
mov
add
div
add
pusha
pop
or
push
adc
arpl
arpl
mov
call
inc
cmp
mov
(bad)
fist
call
dec
push
in
cvtps2pd
and
ret
xchg
mov
mov
mov
add
xor
mov
and
pop
xchg
lea
stos
fnstcw
in
mov
cmp
in
scas
aas
mov
arpl
lods
ja
push
add
retf
repz
je
rol
rcr
test
sti
movs
int3
je
mov
lds
xchg
xor
movs
(bad)
cli
and
or
fistp
icebp
mov
test
push
stos
mov
popa
lock
mov
sbb
and
push
out
push
sub
sbb
movs
retf
xchg
mov
jle
xchg
adc
push
jl
std
mul
loope
loopne
jb
in
xor
clc
fidiv
push
(bad)
xchg
dec
dec
in
inc
cld
in
fbld
cld
jo
gs
cmps
fwait
pop
xchg
mov
cmp
add
sub
ins
jae
mov
in
add
push
fstp
xor
int3
inc
(bad)
lahf
jo
ror
cli
jp
test
mov
dec
int3
inc
aaa
fcmovbe
cmp
ret
imul
pop
mov
cwde
pop
ss
xor
mov
fwait
dec
repnz
xchg
dec
mov
call
or
aad
fs
sub
movs
aad
dec
xchg
push
movzx
and
pop
dec
cmps
mov
xchg
sub
aaa
shr
ret
bound
xor
mov
dec
xor
int
sbb
out
iret
push
je
gs
ins
mov
mov
xor
(bad)
in
fisttp
push
mov
aas
pop
pop
push
movs
push
ins
(bad)
pop
ret
mov
popf
retf
stc
rcl
cli
mov
inc
(bad)
cmp
mov
repz
xor
jnp
pop
or
push
jnp
movs
fcmovnbe
jns
pop
and
std
pop
pop
add
mov
hlt
test
arpl
and
cs
xor
xor
push
adc
mov
retf
das
adc
push
shl
xchg
xlat
mov
and
dec
das
xchg
int
dec
popa
xor
adc
push
jecxz
pop
mov
je
ret
or
pop
inc
push
mov
popf
(bad)
lea
xchg
jno
fidivr
or
xchg
in
scas
dec
or
sub
into
add
mov
push
mov
fnstsw
aam
sub
in
repnz
sub
ror
mov
pop
hlt
cmp
cmps
or
movs
popf
daa
ins
(bad)
cld
sub
test
or
add
movs
loop
sti
add
jno
mov
les
mov
or
or
shl
loopne
cmp
scas
fs
enter
loop
xor
dec
es
pop
xlat
out
jmp
adc
loopne
pop
mov
adc
ret
mov
or
pop
movs
popa
(bad)
sbb
in
repz
cwde
leave
pop
or
lahf
sub
mov
cdq
push
neg
pop
mov
dec
xor
and
dec
nop
xor
cmp
(bad)
call
mov
xor
mov
data16
push
arpl
jne
push
retf
imul
adc
aas
mov
sar
loope
xchg
lds
jne
xor
cs
outs
or
jno
icebp
mov
loope
xor
cmp
sbb
nop
adc
adc
mul
and
idiv
xchg
mov
or
pop
mov
fcom
sub
sahf
pop
(bad)
or
std
(bad)
ja
mov
stos
or
test
(bad)
je
pop
fld
lock
test
xchg
jo
stc
push
pop
cmps
jnp
sbb
mov
cmp
xchg
fdivr
dec
setp
jmp
dec
xor
inc
movs
(bad)
call
ins
pusha
or
iret
popf
(bad)
stc
dec
(bad)
jmp
xchg
adc
pop
js
dec
pop
xchg
or
sahf
or
mov
jmp
dec
inc
xor
mov
sub
sbb
movs
dec
cmps
cmps
push
aad
(bad)
fwait
adc
or
in
sbb
cmps
mov
dec
bound
mov
rcl
out
mov
jae
xchg
rcr
out
call
inc
fimul
xchg
xor
movs
xchg
mov
das
pop
sbb
add
jno
ss
jecxz
ror
cmc
xchg
pusha
sub
sub
and
push
pop
push
jecxz
mov
pop
jnp
cmp
xchg
mov
mov
xor
(bad)
(bad)
dec
div
je
imul
adc
mov
sub
jmp
add
ds
out
jae
push
inc
push
sbb
push
in
pop
pop
adc
aam
and
jl
push
jnp
inc
pop
pop
or
push
cmp
ins
sti
popf
xchg
push
call
mov
pop
mov
fisubr
ja
sbb
sahf
scas
jmp
test
stos
mov
ret
aas
xchg
sub
retf
push
addr16
ins
pop
adc
cld
push
mov
dec
pop
outs
shr
mov
lock
xlat
mov
dec
sti
mov
rcl
(bad)
test
in
jbe
js
jns
scas
repnz
int
inc
sub
mov
sbb
add
gs
push
pop
jae
sbb
out
dec
fimul
or
push
je
addr16
xchg
add
enter
test
pop
sbb
inc
loopne
mov
mov
dec
pusha
out
stc
add
push
sbb
cmp
shr
shl
mov
adc
jo
shl
push
cwde
mov
stos
pop
shl
dec
xchg
rol
xor
adc
pop
push
mov
and
pop
add
inc
jns
shl
inc
xor
jmp
mov
mov
add
cmp
arpl
cdq
dec
mov
fsub
dec
pop
or
lds
fwait
popa
repz
pop
rcl
pop
call
jle
int3
mov
icebp
pop
stos
mov
jge
push
sub
xor
add
scas
and
pusha
mov
add
imul
in
inc
popf
shl
mov
ins
fdivrp
test
adc
cmp
pop
push
or
jmp
or
pushf
jle
popa
rcl
(bad)
(bad)
and
bound
and
(bad)
int
mov
rol
xlat
(bad)
outs
pop
adc
and
cmp
dec
cmp
inc
js
clc
out
pop
fisub
inc
lea
mov
adc
sub
mov
nop
push
adc
sub
pop
or
(bad)
mov
mov
das
push
clc
push
mov
test
scas
mov
test
xor
inc
scas
test
adc
inc
cmp
jg
add
mov
dec
fld
and
int
or
xchg
adc
adc
aas
xchg
inc
jecxz
das
iret
jg
sub
fbstp
inc
dec
mov
push
out
outs
outs
adc
jnp
mov
scas
in
popa
sar
popa
shl
jmp
scas
jl
div
je
xor
cmps
adc
mov
es
adc
ror
add
mov
clc
inc
xchg
adc
mov
mov
dec
int3
test
mov
push
add
inc
adc
mov
bound
std
mov
xchg
imul
xchg
aas
add
pop
(bad)
push
adc
mov
mov
adc
sbb
sbb
push
pop
mov
jecxz
jge
sub
cmp
ret
test
aad
mov
pop
or
sbb
outs
adc
lgs
cmp
jne
out
mov
jnp
sar
sub
mov
jae
mov
sbb
mov
xchg
fld
lds
mov
scas
xchg
jge
and
(bad)
ins
pop
out
adc
into
push
pop
into
aas
(bad)
add
lock
stc
jg
ret
xlat
out
pop
cmp
inc
mov
push
test
sar
movs
lahf
dec
sbb
push
sti
(bad)
xchg
push
xchg
jle
popa
retf
mov
jmp
int
imul
or
cli
into
xor
sub
das
inc
popa
sti
pop
jo
int3
dec
fwait
rcr
inc
xor
pop
sbb
push
ficomp
inc
xchg
add
mov
in
daa
aam
xchg
push
push
stc
xor
das
cmp
sub
fcomi
popa
fist
sub
cmp
repz
push
lods
pop
jle
(bad)
push
(bad)
mov
cmp
div
dec
ins
jle
(bad)
in
aam
adc
dec
or
cmp
clc
sub
xchg
nop
push
movs
sbb
daa
inc
and
adc
xor
xor
jb
sbb
add
sahf
xchg
loopne
mov
inc
(bad)
int3
fcomp
mov
mov
js
loop
and
jae
dec
fcom
stc
imul
popa
stos
push
(bad)
fdivrp
adc
ins
pop
mov
shl
scas
add
cs
push
movs
(bad)
mov
std
pop
inc
sub
xchg
imul
adc
mov
ins
pop
push
sub
cmp
aas
sbb
mov
adc
es
jbe
ins
jno
mov
(bad)
jae
fwait
pop
sbb
xchg
or
cmp
or
test
dec
outs
icebp
fmul
and
aad
bswap
jns
push
lahf
dec
sub
sbb
sub
stc
push
xchg
inc
mov
ret
int
cmp
add
push
inc
test
sbb
ins
push
mov
push
jecxz
fmulp
mov
adc
das
leave
jno
outs
jo
addr16
jmp
and
pop
pop
or
inc
out
and
test
loop
xchg
or
pop
add
fisub
mov
ins
stos
inc
or
das
and
push
mov
jno
sub
inc
repnz
push
xor
inc
jp
pusha
aaa
iret
call
xchg
push
or
outs
dec
ja
mov
(bad)
jb
and
adc
dec
outs
(bad)
hlt
xlat
mov
nop
pop
xchg
ror
cmp
pop
dec
jge
popf
jb
mov
jb
inc
call
dec
xor
popa
xchg
in
cmp
dec
fidivr
out
iret
push
sub
xchg
dec
add
push
xchg
lea
mov
adc
mov
fnclex
retf
sbb
mov
clc
mov
nop
aad
je
inc
sti
es
sbb
and
fsub
add
lock
mov
dec
mov
(bad)
push
xchg
std
sbb
jae
jno
ret
fmul
cli
aad
mov
mov
or
leave
pop
outs
push
ret
dec
nop
jmp
adc
repnz
add
inc
sub
mov
stos
jp
cmp
xchg
sti
in
outs
mov
sti
lds
jp
cmp
inc
pop
xchg
repz
shl
mov
mov
in
sbb
cwde
mov
ret
push
test
das
ins
ret
lock
retf
ror
ins
retf
jl
je
push
fbld
cmp
lods
push
out
les
mov
add
xor
add
xchg
sub
fld
xor
adc
scas
popf
lock
and
cdq
add
cmps
cli
cmps
fdiv
and
dec
(bad)
enter
and
mov
imul
inc
fmul
lock
nop
and
sub
iret
xor
xor
movs
shl
adc
dec
daa
movs
mov
sbb
jnp
shl
add
dec
dec
into
inc
out
pop
dec
out
jbe
ret
dec
stos
jb
jno
mov
push
jmp
dec
mov
cmp
mov
inc
out
je
adc
mov
lahf
shl
and
jae
push
add
xchg
xchg
es
cwde
js
jmp
js
sbb
aaa
mov
retf
xor
mov
lods
rcl
nop
scas
mov
push
add
fst
aaa
xor
cdq
add
out
mov
jbe
pop
js
jl
cmp
jecxz
imul
mov
sub
pop
jle
or
mov
sbb
adc
jecxz
push
adc
xor
inc
sbb
xor
pop
out
fld
add
daa
xchg
cmps
arpl
xor
adc
adc
add
push
jbe
jp
test
ins
inc
out
aas
out
xchg
test
cmp
jne
sbb
and
add
lahf
in
xchg
inc
pop
repz
dec
and
ss
sbb
movs
movs
aaa
cli
ror
movs
pop
mov
inc
lods
pop
movs
js
inc
inc
out
jb
sub
jle
ror
mov
xor
and
cmp
cmp
jae
test
bnd
adc
push
or
mov
leave
pop
sub
dec
pop
or
jecxz
movs
xor
(bad)
call
loop
repz
fstp
sub
push
cs
xor
test
xor
dec
inc
in
call
fstp
xor
dec
sbb
mov
xchg
hlt
jnp
push
ficom
inc
fwait
xchg
call
outs
nop
js
pop
jb
in
push
mov
addr16
mov
je
push
sub
inc
push
dec
rcr
lahf
loope
bound
test
clc
mov
mov
int
push
hlt
pop
or
mov
xchg
xchg
in
ja
push
sub
fidivr
adc
push
in
es
and
push
repnz
mov
jge
stos
pusha
jge
(bad)
(bad)
idiv
ror
bound
std
push
xor
(bad)
idiv
mov
mov
push
push
mov
xchg
fcomp
add
pushf
in
mov
xchg
jns
cmp
fst
xor
inc
gs
jmp
add
imul
pop
cli
loopne
pop
add
sub
xchg
or
mov
std
dec
jmp
adc
repnz
jns
cmp
dec
das
xchg
and
aas
sbb
push
cmp
and
retf
cdq
or
rcl
mov
mov
popa
repnz
pop
sti
mov
(bad)
jmp
stc
jno
pushf
dec
xchg
xor
mul
rol
inc
cmp
cmp
ins
sbb
push
arpl
jmp
in
jecxz
jbe
scas
ss
sub
loopne
inc
popf
call
xchg
cdq
jmp
in
js
(bad)
ja
loopne
or
outs
cmp
movs
in
lahf
imul
adc
pop
or
cld
dec
inc
jae
retf
mov
push
je
cld
into
adc
push
sub
stc
cmps
mov
xchg
test
jmp
std
cmc
dec
jo
stos
or
(bad)
pop
or
leave
mov
ficomp
add
mov
(bad)
adc
and
sbb
icebp
mov
fcmovnbe
mov
push
gs
jns
sub
bound
lods
sub
inc
hlt
sub
mov
add
fldenv
fnstenv
mov
pop
gs
push
and
inc
loope
retf
nop
inc
mov
xchg
pop
adc
sbb
sbb
push
ss
xchg
(bad)
push
or
ins
ret
out
jae
enter
dec
add
mov
std
xchg
stos
sub
lods
xor
sub
retf
jle
sahf
xchg
dec
sub
call
cli
aas
dec
lea
jmp
jge
sbb
and
sub
into
ret
lods
inc
xchg
or
stc
push
in
xchg
add
push
adc
xlat
sub
push
add
movs
ficom
hlt
ret
(bad)
xchg
or
in
sub
mov
loope
mov
pushw
sub
outs
out
cld
ins
pop
add
and
cmp
leave
movs
icebp
daa
xchg
xchg
inc
pop
fild
pop
adc
test
pop
ret
xchg
mov
lods
int3
sbb
inc
cdq
pop
pop
pop
pop
out
add
mov
jg
mov
push
dec
test
icebp
in
xlat
jl
xlat
add
(bad)
push
int
xor
retf
sbb
shl
jge
shr
std
mov
sub
and
sbb
fwait
ds
add
push
div
sbb
out
push
fcmovnu
jmp
add
cmp
push
add
cli
test
cmp
mov
lahf
or
xor
out
adc
mov
dec
daa
je
adc
stos
or
in
push
clc
(bad)
(bad)
mov
cmp
mov
cmp
add
push
jb
xchg
mov
and
and
inc
push
fisttp
icebp
(bad)
mov
jp
jecxz
cmp
adc
bnd
outs
xor
popf
arpl
scas
or
cmps
sub
xchg
mov
in
shr
push
test
mov
dec
push
sub
cmp
and
sbb
sub
mov
or
aaa
jl
mov
dec
jle
cmp
loop
sub
mov
add
out
sub
rcr
in
cmp
jmp
mov
and
call
stos
mov
push
stc
shl
cmps
adc
sti
mov
push
mov
jns
inc
xchg
sub
std
and
push
and
pop
adc
cmp
and
or
jmp
mov
movs
rol
icebp
mov
hlt
xchg
mov
mov
mov
push
stos
mov
retf
jg
dec
mov
sbb
pusha
lods
fwait
jmp
add
push
mov
(bad)
mov
icebp
aaa
stc
jmp
pop
cmp
push
mov
pop
jbe
sbb
sub
xchg
dec
ror
mov
inc
dec
xchg
sbb
mov
sub
fisub
(bad)
js
dec
adc
xchg
(bad)
shl
adc
jnp
aad
cmp
cmp
sahf
sar
push
sub
movs
cmp
mov
push
das
dec
mov
in
cli
into
popf
test
lods
aas
push
add
cli
mov
push
out
jmp
ja
and
stos
div
push
mov
mov
xor
aam
sbb
mov
pop
mov
mov
out
test
popf
xchg
add
(bad)
movs
add
jl
fstp
mov
adc
xchg
popf
rcr
leave
jnp
mov
and
fucomp
push
mov
int3
arpl
cmp
js
(bad)
sbb
(bad)
xchg
lds
sub
push
movs
xor
add
mov
sbb
xchg
xor
loopne
adc
sub
popa
rcr
clc
sub
fisub
sti
scas
nop
(bad)
jno
js
leave
jns
cli
sbb
hlt
(bad)
and
dec
sbb
fldcw
dec
movs
mov
xor
dec
cwde
out
rol
stos
pop
sub
xchg
pop
fnstcw
add
(bad)
nop
inc
sbb
pop
dec
stos
out
or
adc
mov
lock
aaa
in
mov
pop
sahf
adc
shl
loop
dec
aam
into
push
movs
aaa
stos
or
pop
mov
jmp
pop
(bad)
adc
test
pop
out
inc
jl
push
les
jno
icebp
cmp
mov
inc
and
mov
xor
cli
mov
in
dec
jns
(bad)
mov
fwait
push
cmovns
sbb
(bad)
jnp
sbb
jg
or
ss
mov
mov
mov
popf
jp
push
sbb
(bad)
(bad)
xor
mov
mov
mov
xor
xor
hlt
push
gs
adc
int
out
sub
js
fld
xor
shrd
cmp
pop
xchg
mov
popf
jl
sar
sar
iret
ds
enter
cmp
push
push
int
pop
imul
(bad)
(bad)
jns
loop
mov
pop
call
sub
cmp
mov
lock
dec
pop
inc
fs
pop
div
lods
push
lahf
data16
pop
xor
pop
sbb
ja
and
cmp
in
mov
das
vpaddd
xchg
repz
div
xor
adc
dec
loop
sub
nop
call
jb
cmp
jno
retf
jmp
and
repz
dec
sbb
add
test
dec
and
ficomp
xchg
(bad)
dec
jp
aaa
retf
inc
mov
cmp
fisttp
in
enter
adc
cdq
jge
sub
lock
ficomp
test
mul
or
retf
cmps
adc
lahf
dec
or
stos
out
loop
stos
pop
pop
xchg
xchg
push
popa
cwde
mov
xchg
dec
std
fs
(bad)
out
sahf
mov
cmp
adc
and
sub
dec
and
dec
sub
dec
xor
dec
addr16
push
aam
inc
pop
xchg
adc
lods
mov
data16
test
xchg
mov
sub
adc
jo
loopne
fdiv
pop
ret
inc
mov
jo
call
es
and
sub
fs
adc
ins
jecxz
or
(bad)
push
push
fcmovb
mov
fidiv
add
fwait
adc
xchg
out
test
int
pop
clc
add
jmp
repnz
(bad)
pusha
cld
mov
int3
push
adc
pop
sub
ins
mov
retf
and
or
push
call
popa
fmul
dec
out
dec
test
(bad)
dec
in
in
push
push
fdiv
bound
adc
scas
sub
push
cmp
add
xchg
sub
and
arpl
out
fbstp
xchg
and
icebp
cmp
and
mov
mov
in
push
(bad)
(bad)
out
retf
or
inc
lods
hlt
cld
cmp
loopne
sbb
xchg
mov
hlt
mov
sbb
out
aam
cmp
cmp
int3
popa
out
lods
inc
and
push
add
jmp
or
adc
ins
mov
test
test
and
jl
pushf
pop
shl
iret
jmp
jmp
pop
xor
lea
xlat
mov
outs
out
ins
dec
gs
mov
jp
mov
cwde
sbb
lock
mov
push
and
and
hlt
out
sub
dec
push
(bad)
fdivr
(bad)
jo
lahf
sub
add
loop
js
dec
out
or
push
out
push
mov
push
jmp
mov
push
jbe
or
sub
lds
aam
call
cmps
ds
out
or
inc
jnp
and
mov
dec
inc
mov
add
lea
jge
call
scas
mov
and
lea
out
inc
add
cmp
xchg
or
(bad)
test
mov
stos
and
inc
iret
shl
adc
ins
pop
addr16
mov
xor
lods
push
xlat
loopne
out
and
out
bound
int
hlt
cs
adc
call
push
pusha
cmp
mov
addr16
pop
jle
add
add
pop
pop
pop
mov
sbb
imul
bound
mov
sub
sub
cmps
ins
cmps
mov
(bad)
(bad)
out
stos
add
loop
push
mov
shl
xchg
cld
fdivrp
in
inc
sub
xor
dec
fcmovnu
stos
into
push
icebp
test
and
fldcw
leave
jo
movs
mov
mov
clc
call
repz
cmps
sbb
xchg
push
mov
push
jl
outs
mov
mov
adc
jbe
ins
adc
mov
jge
mov
out
pop
popf
adc
pop
ret
gs
test
ret
test
pop
inc
cmc
jge
mov
push
sub
pop
or
movs
sbb
enter
popa
cmp
ret
shl
int
movs
xchg
adc
push
ss
jb
test
js
and
or
or
pcmpgtd
dec
loope
mov
mov
int
stos
addr16
pop
mov
xor
push
cmp
fistp
sub
dec
jp
inc
pop
out
xor
sub
push
retf
cmps
clc
repnz
or
in
stc
xor
pushf
jecxz
fsqrt
mov
jno
mov
imul
pop
mov
es
std
cwde
cmps
shr
imul
fwait
and
adc
push
fisubr
pusha
test
cmp
adc
sub
jne
imul
xchg
iret
push
out
fsubrp
mov
icebp
call
or
adc
imul
sar
pop
sub
lods
ficom
jbe
into
or
mov
xchg
mov
push
sub
sub
mov
fst
int
xchg
xchg
jnp
and
xor
mov
aad
addr16
aaa
jmp
cmp
pop
pushw
psubusb
pop
xchg
and
mov
inc
xlat
jae
je
int3
cmp
fldenv
cli
shr
jb
push
sbb
xchg
mov
adc
jns
jb
dec
xor
pop
cmp
pop
loopne
push
xchg
out
repz
scas
outs
stos
inc
call
pushf
and
cs
xchg
loopne
dec
lock
inc
xchg
pop
jne
cwde
fistp
dec
add
xor
push
mov
ret
stos
(bad)
mov
jno
stos
rol
inc
xchg
push
push
daa
in
add
dec
test
movs
ror
in
xchg
sbb
adc
call
cs
nop
cld
mov
addr16
xchg
jmp
mov
xor
jp
mov
stc
inc
lods
dec
mov
jns
loop
popf
aad
sub
sub
add
push
lock
retf
mov
sbb
adc
jg
nop
mov
dec
or
test
cmp
adc
xlat
push
jb
inc
add
sub
fs
fst
ins
jne
daa
fwait
pop
aas
in
div
and
xor
inc
push
rcl
rol
push
cld
sub
fs
les
adc
sbb
fucom
(bad)
rcr
cmp
or
dec
fwait
(bad)
add
xchg
lock
or
into
inc
ror
and
ss
out
mov
test
fcomp
and
das
jo
call
mov
inc
sti
scas
or
xchg
xchg
cmp
aam
imul
jmp
dec
jge
cmp
ret
js
sub
inc
mul
inc
repz
icebp
dec
fdiv
pop
xchg
leave
imul
icebp
imul
sbb
aas
mov
xchg
loope
pop
xor
xchg
mov
mov
cli
scas
and
loope
and
pop
hlt
stc
dec
adc
test
xchg
fsubp
sub
push
icebp
lods
fnsave
repnz
(bad)
pop
pusha
stc
jns
cdq
inc
mov
addr16
mov
or
and
push
cmps
fdiv
ins
std
push
mov
ss
mov
and
into
pop
imul
icebp
xchg
mov
push
clc
xor
cmp
xchg
jmp
xor
xor
jae
mov
das
push
mov
jge
inc
fsub
popf
push
jle
mov
les
jne
jb
fldcw
pusha
das
mov
arpl
ins
aad
pop
jl
push
aam
xor
rcl
ret
ret
mov
ins
sub
lahf
out
fstp
paddusb
cmps
inc
push
cmps
inc
and
addr16
xor
pop
jne
test
jb
cmp
xor
mov
dec
jl
out
inc
loop
clc
cli
(bad)
icebp
add
sti
sub
and
mov
sbb
adc
int3
scas
xchg
fs
loopne
add
push
cmp
cmp
vmovss
out
rcl
cdq
in
xor
or
stos
scas
mov
test
ret
aas
sub
mov
sbb
push
aas
and
addr16
cli
pusha
mov
mov
mov
xor
je
pop
or
cmp
cmp
mov
das
jmp
mov
mov
ja
retf
mov
outs
dec
adc
mov
xchg
loope
mov
xchg
cmp
fsubr
pop
clc
inc
mov
pop
mov
sub
dec
jns
gs
(bad)
cmp
cwde
fdivr
pop
loop
stos
push
repz
mov
pop
mov
outs
adc
cli
imul
mov
retf
sar
inc
shr
and
mov
jg
sub
jge
jne
mov
cld
or
cmp
xor
sbb
cwde
xchg
retf
cmc
jmp
dec
jmp
sub
xor
jae
mov
mov
nop
in
xchg
xchg
jmp
retf
jae
fld
mov
mov
mov
xlat
ret
imul
adc
or
inc
jle
mov
ret
add
dec
cmp
scas
inc
cmps
sti
aas
jecxz
iret
ret
push
(bad)
adc
mov
dec
movs
loopne
int
dec
nop
mov
fdiv
cmovne
clc
jb
pop
add
pop
mov
loope
jl
xor
jmp
add
int
pushf
adc
(bad)
fnstsw
arpl
repnz
xor
xor
xor
stos
push
inc
je
inc
stos
test
cmp
bound
mov
retf
sahf
mov
push
rcr
fld
dec
cld
arpl
dec
ss
pop
inc
xchg
mov
push
mov
hlt
pop
fcom
push
dec
add
push
das
xor
scas
sbb
pop
ret
test
jle
(bad)
adc
bound
fxtract
pop
bound
movs
pop
(bad)
aam
xlat
in
fimul
ins
sbb
and
test
(bad)
lods
adc
adc
cmp
scas
xor
fnstenv
jns
movs
xor
push
fsubr
mov
fcom
aad
xchg
add
test
and
int
cld
icebp
cdq
call
ret
inc
pop
cmps
rol
movs
xchg
push
mov
adc
ss
xor
pop
outs
dec
stos
sub
jle
push
(bad)
in
lock
pushf
jnp
push
lea
aad
cmp
cmp
pop
cmc
into
rcr
pop
or
shl
mov
aaa
cvtdq2ps
aad
mov
stos
clc
sbb
fs
fiadd
adc
shl
jg
xor
jle
sbb
loop
sbb
mov
sbb
(bad)
inc
pop
js
inc
add
add
stc
mov
test
push
mov
out
pushaw
mov
xor
and
stc
jge
jo
inc
inc
jbe
adc
mov
jmp
mov
push
test
call
sub
jmp
dec
(bad)
adc
sub
fild
std
lods
cdq
test
clc
icebp
stos
fist
int
cmp
xchg
cmp
lahf
adc
cld
cdq
dec
inc
hlt
mov
sbb
xchg
test
jle
or
push
inc
xor
fnstenv
cld
jge
pop
mov
daa
dec
ins
dec
shr
add
sub
pop
dec
dec
rcl
inc
mov
cdq
ret
lock
ja
nop
cwde
mov
dec
fisttp
(bad)
(bad)
inc
test
push
cmp
add
cmps
inc
adc
pop
fimul
dec
mov
(bad)
sbb
sbb
mov
out
or
in
add
xor
icebp
and
jmp
je
and
hlt
mov
pop
loope
dec
mov
ins
popa
xchg
inc
repnz
adc
cmc
(bad)
jns
sbb
clc
stos
sbb
loop
retf
stos
mov
movs
push
cmps
jp
cmps
adc
jnp
add
out
sub
fwait
push
dec
inc
sub
aad
inc
dec
or
xchg
stc
(bad)
sbb
mov
pop
les
push
adc
repz
cmps
jo
shr
dec
arpl
dec
add
push
popa
pop
cmp
jmp
and
out
mov
dec
add
stos
cmps
mov
rcr
mov
sub
out
movaps
adc
or
jnp
sub
lods
mov
out
dec
lods
in
ret
(bad)
sub
test
pop
sub
inc
in
xor
sti
mov
mov
mov
retf
or
movs
sti
stos
or
out
fs
and
xor
push
nop
inc
jge
scas
jmp
push
mov
or
lods
mov
out
int
and
and
jl
add
or
shl
pop
xchg
or
mov
addr16
cmp
adc
nop
and
in
aas
adc
jne
dec
lahf
mov
push
(bad)
mov
pop
(bad)
adc
repnz
movs
dec
sub
xor
mov
inc
push
and
pop
or
and
push
(bad)
xor
cld
test
cs
mov
outs
je
jnp
fisubr
xchg
stc
dec
fbld
scas
ret
fcmovnbe
lods
ja
cli
push
xor
pop
fdiv
mov
popf
cmp
mov
test
in
loope
stc
pusha
dec
iret
dec
(bad)
in
lods
sub
or
(bad)
fld
adc
pop
lods
loope
cs
jo
jns
and
arpl
cmp
and
xchg
cmp
enter
pop
fadd
or
cmp
mov
(bad)
(bad)
jge
(bad)
pop
icebp
ss
cmps
fwait
leave
dec
jb
dec
sbb
movs
push
mov
(bad)
adc
mov
and
fptan
adc
mov
jp
xor
fldenv
dec
cmps
push
js
xchg
adc
mov
mov
mov
stos
pop
leave
test
dec
xchg
outs
sbb
into
inc
xchg
nop
inc
retf
mov
arpl
sub
or
mov
mov
into
mov
stos
push
jg
cmp
dec
xchg
call
cmps
and
sahf
sub
xchg
jmp
push
pop
out
test
cdq
lahf
dec
lahf
dec
outs
enter
push
pop
mov
sbb
mov
pushf
call
jne
mov
test
cli
jmp
mov
ins
push
fmul
mov
hlt
mov
(bad)
mov
push
xchg
sub
icebp
cmps
loop
add
call
dec
repz
loop
cmp
aam
ficomp
sbb
fneni(8087
xchg
repnz
pop
adc
int3
pop
sub
test
sbb
pop
nop
mov
loop
push
xchg
xchg
cmp
not
movs
sbb
or
stos
pop
int
sti
ret
mov
cdq
jnp
mov
outs
retf
mov
cmps
ret
(bad)
cli
cmps
arpl
fist
jp
fsub
call
enter
xchg
adc
pop
fstp
lods
adc
add
cld
xor
rol
test
pop
sti
mov
rol
push
movs
in
mov
mov
jp
(bad)
or
fimul
enter
sub
lds
adc
and
xlat
fld
gs
pop
pop
add
pop
jecxz
aaa
cwde
shr
sub
fiadd
xchg
imul
(bad)
jnp
std
or
adc
mov
cmp
mov
xor
mov
inc
push
sub
push
and
into
stc
cmps
das
pop
test
or
mov
mov
jge
test
xor
ja
jmp
and
pop
jnp
jb
lds
push
pop
in
ret
adc
(bad)
in
(bad)
aaa
cmc
inc
loope
imul
(bad)
mov
stos
mov
and
mov
jp
xchg
xchg
fcom
test
lods
mov
js
hlt
es
sub
push
icebp
ss
cmp
fnstenv
int3
inc
bound
add
mov
enter
nop
ret
fcomp
fwait
and
std
popf
sub
popa
jl
or
mov
adc
sbb
pop
dec
add
into
jbe
sahf
fwait
cld
sbb
push
push
hlt
je
inc
or
call
pop
out
xor
push
jmp
loope
call
lds
mov
arpl
into
fcomp
xchg
in
mov
call
ror
xchg
push
dec
mov
mov
and
mov
dec
int3
mov
sub
dec
mov
mov
xor
and
mov
sbb
mov
je
in
loope
mov
movs
jg
sbb
add
sbb
push
sbb
mov
jno
ficom
(bad)
fucomi
inc
je
rol
inc
sub
ss
jo
mov
mov
push
inc
movs
fnsave
add
sbb
push
leave
push
mov
pop
(bad)
repnz
retf
rcr
inc
mov
push
jae
call
sub
ins
dec
xchg
dec
add
and
loop
adc
jne
mov
shl
push
pop
cmps
mov
jb
ins
mov
test
sbb
mov
lea
jp
ret
mov
jb
movs
fild
inc
rcr
movs
mov
and
mov
shl
mov
cwde
shld
xor
icebp
jle
and
out
mov
sub
mov
cmp
rol
sbb
jl
cmp
mov
fisttp
xchg
push
push
jnp
mov
int3
adc
cmp
adc
retf
cmp
cld
loope
inc
inc
push
out
or
les
cdq
fs
or
outs
(bad)
inc
xchg
inc
pop
xchg
sub
test
sbb
ja
out
mov
mov
adc
les
nop
ja
pop
mov
xchg
dec
jle
stc
adc
ret
pop
jnp
inc
jns
ja
mov
pusha
test
rcr
push
mov
or
cmc
shl
jbe
pop
xor
cmp
mov
pop
xor
call
cmp
push
push
xor
ret
push
in
enter
fisub
sbb
test
cmc
jmp
push
adc
mov
pushf
loopne
cmps
int3
(bad)
jns
leave
loope
call
fsubr
mov
stos
cmc
hlt
ret
pop
sub
push
aad
dec
test
xchg
sbb
xchg
add
test
xchg
mov
mov
mov
mov
mov
push
scas
mov
sub
lods
in
repz
outs
inc
add
fsub
and
add
xchg
inc
or
cmp
mov
pop
daa
shr
ror
mov
enter
sub
add
or
adc
lods
stos
pop
(bad)
adc
stos
or
pop
loopne
mov
inc
pushf
jle
sub
sbb
jl
add
or
out
jns
mov
mov
daa
dec
les
fstp
push
adc
and
lods
fist
test
xchg
add
adc
cld
iret
or
sbb
push
mov
pop
pop
loopne
jg
push
dec
(bad)
jae
fsubr
xor
cs
jmp
aas
push
push
enter
movs
add
push
jl
popa
test
jge
int
lods
in
sub
pop
mov
pop
cmc
popf
dec
loop
mov
cmp
test
stc
mov
pushf
push
push
sbb
adc
sbb
dec
add
dec
or
sbb
sub
lahf
sahf
cwde
(bad)
xchg
xlat
cmc
sbb
hlt
imul
adc
out
test
xor
addr16
pop
mov
inc
addr16
add
push
xchg
rol
out
in
out
leave
jbe
fs
sub
push
sub
int
in
outs
sub
in
(bad)
fnstcw
mov
xor
adc
push
push
sub
ins
xchg
jnp
jnp
mov
dec
pushf
fnstsw
ss
push
adc
test
push
sub
(bad)
shl
cmp
test
outs
test
out
xor
jle
lahf
sbb
jo
rol
mov
jno
fucom
cmps
aas
hlt
push
or
push
mov
xchg
or
jge
lea
shl
jmp
les
cli
sub
xchg
ja
ficom
je
add
movs
pop
mov
jecxz
fcmovu
inc
cdq
popf
dec
loop
mov
xor
cmp
cmp
cdq
xchg
xchg
shl
js
cwde
mov
mov
fimul
sbb
pop
and
add
retf
or
outs
pop
(bad)
(bad)
js
test
sbb
mov
sar
out
shl
xchg
(bad)
imul
(bad)
fistp
inc
nop
stc
in
xor
inc
jne
mov
in
sahf
enter
retf
(bad)
rol
fs
ficomp
outs
xlat
pop
dec
in
lea
push
xor
jae
(bad)
jbe
inc
xor
mov
xchg
jnp
xor
ins
jo
ror
out
fild
adc
neg
and
mov
mov
xchg
ss
ins
imul
repnz
bound
dec
cmp
lods
in
push
(bad)
in
nop
ins
xchg
cmp
fisub
int3
sub
sub
fstp
fdiv
jo
div
ins
mov
sbb
pusha
dec
push
xlat
adc
xlat
or
outs
xor
sub
xchg
cmp
rcl
or
add
push
retf
out
cmc
push
lods
ins
dec
int3
mov
daa
mov
and
jns
inc
sbb
pop
jno
daa
mov
inc
xor
xchg
std
shl
cmp
loop
dec
pop
fwait
push
cmp
sbb
stc
and
jae
xor
adc
push
xor
push
and
repnz
lahf
popf
fs
pop
popa
mov
pop
mov
push
jns
mov
jmp
test
stos
mov
pop
jmp
hlt
retf
repz
add
(bad)
out
cmps
scas
out
pop
lods
lds
mov
iret
mov
cmc
dec
cmps
adc
js
add
aas
jg
stos
or
or
xor
out
aas
int
push
aam
jle
xchg
stos
repnz
xchg
vprotq
fs
out
push
mov
jne
repz
jo
ror
add
(bad)
(bad)
loope
sub
dec
cmp
push
fstp
pop
rol
stos
mul
mov
xchg
icebp
cmp
add
stc
dec
jae
push
inc
jl
rcr
fst
daa
mov
xchg
enter
pop
aas
movs
fcom
mov
pop
mov
cmc
jle
aas
call
mov
sbb
mov
jnp
fcmovnbe
adc
xchg
xlat
movs
or
sub
xchg
repnz
je
cmc
sbb
mov
adc
rcr
daa
aas
cmp
mov
mov
xor
je
sub
push
data16
(bad)
mov
xor
adc
push
push
xchg
scas
psubsb
pushf
xor
adc
jp
mov
dec
jnp
push
xor
mov
inc
rcl
outs
adc
adc
xchg
xchg
xchg
lock
aam
sub
sub
dec
mov
loopne
outs
sub
jge
inc
ds
mov
int3
and
mov
cmps
mov
mov
push
add
dec
mov
push
popa
pop
pop
movs
jecxz
mov
pushf
(bad)
inc
push
shl
sahf
sub
adc
loop
mov
jbe
retf
xchg
cmp
out
call
retf
popa
ds
or
(bad)
xchg
popf
out
dec
leave
repz
jns
pusha
scas
int3
xchg
loop
pop
int3
int3
jns
mov
popa
jl
dec
xor
xor
mov
pop
fld
add
jmp
test
push
inc
sub
mov
(bad)
sbb
iret
popa
repnz
cmp
xor
and
xchg
je
and
or
out
add
in
and
sti
pop
mov
scas
pop
sub
scas
xor
xor
imul
dec
sub
fld
leave
aaa
xchg
sbb
sar
xor
mov
and
xchg
repz
sbb
push
mov
retf
inc
(bad)
cmp
jb
mov
sub
clc
in
icebp
imul
icebp
movs
test
ja
jmp
add
mov
arpl
sbb
lods
cmp
outs
push
jge
cmp
xor
sub
jne
shl
icebp
loope
icebp
push
xor
pop
aam
(bad)
dec
lods
aas
clc
dec
mov
bound
fadd
jo
(bad)
loopne
dec
xlat
and
xchg
test
pop
jmp
adc
pop
push
js
inc
jmp
ror
(bad)
xchg
inc
movs
and
dec
pop
into
sbb
dec
sbb
fs
cld
idiv
shl
test
push
jmp
pop
xchg
cs
lods
fdiv
cmp
sbb
mov
cmp
adc
sti
jae
pminsw
ins
movs
mov
ficomp
mov
dec
lahf
arpl
mov
repnz
(bad)
push
sbb
cwde
in
inc
or
xchg
sbb
cwde
mov
lods
jg
and
xchg
fdiv
jmp
dec
jns
ins
pop
jbe
mov
outs
adc
sbb
das
xchg
mov
daa
xor
cmp
cmp
mov
mov
cmp
dec
hlt
imul
add
ins
hlt
cmp
sub
pop
mov
mov
and
push
push
aad
leave
xor
sub
out
je
mov
ffree
xor
dec
out
xchg
and
fadd
pop
mov
jno
lahf
mov
and
imul
jmp
or
je
test
or
jbe
jo
popa
rol
pop
daa
mov
jae
idiv
pusha
add
mov
popf
mov
or
xlat
aaa
mov
shl
cmp
dec
dec
aad
js
fidiv
and
mov
cld
jne
pop
in
inc
push
jb
xchg
jg
push
lods
cmp
add
dec
mov
jne
fwait
cdq
pop
scas
icebp
xchg
shr
jo
rcl
cli
mov
xchg
js
jmp
mov
jg
out
sub
adc
int
adc
cmp
pop
addr16
in
(bad)
idiv
test
cmp
sti
mov
xchg
gs
mov
or
test
mov
dec
ds
retf
push
mov
push
fs
aad
daa
(bad)
fmulp
dec
gs
push
sbb
ror
mov
jmp
out
or
fwait
cwde
addr16
loopne
add
loope
pop
loop
dec
(bad)
movs
cmc
xchg
inc
inc
cmc
mov
stos
cmp
(bad)
jmp
test
rcl
inc
mov
sbb
mov
out
dec
fcom
outs
sahf
in
inc
xchg
xchg
dec
pop
adc
mov
(bad)
jl
les
cs
and
retf
pop
xchg
pop
cli
push
xlat
test
push
mov
dec
gs
jne
or
dec
movs
adc
inc
call
push
sub
fcmovb
daa
(bad)
push
xor
data16
loopne
add
les
cwde
icebp
xchg
sub
adc
fdivp
mov
push
inc
(bad)
ja
gs
leave
sbb
or
cmp
test
dec
push
sub
outs
fisubr
aas
dec
xchg
les
loopne
ss
into
xor
pop
mov
ds
jns
int
fcmovne
fidiv
pop
pop
pusha
jno
jo
xchg
sbb
push
stc
adc
cli
xchg
lea
xchg
test
call
push
push
or
pop
nop
pop
movs
pop
pop
xor
cli
js
pusha
inc
fs
nop
fs
in
sbb
add
cwde
xor
loop
adc
xor
jecxz
movs
inc
push
adc
rol
jg
fadd
add
scas
rcl
pop
sub
fs
xor
sbb
sbb
icebp
out
and
sub
mov
lock
call
fldcw
clc
jmp
dec
mov
pop
mov
cmp
sbb
aam
jg
mov
sub
xchg
xchg
jmp
mov
fmul
(bad)
and
dec
in
push
mov
hlt
and
dec
sar
jae
cli
js
jno
scas
cmp
jae
dec
adc
loop
lods
dec
enter
daa
pusha
test
xchg
pop
jecxz
add
jmp
mov
mov
or
cli
adc
push
or
in
pop
and
(bad)
ficomp
and
inc
or
pushf
mov
leave
add
je
sbb
mov
mov
(bad)
ret
in
push
pop
push
and
adc
pop
sub
rol
jle
jle
sub
es
rol
xchg
into
ja
xor
icebp
pand
jnp
jge
imul
retf
ret
hlt
test
push
es
xor
jp
mov
ficomp
imul
int3
mov
mov
out
lods
jbe
sbb
adc
enter
retf
jg
cs
cmp
in
push
inc
cmp
dec
or
dec
jne
pusha
outs
push
aad
mov
sub
mov
cmp
std
shr
popf
xchg
call
and
add
in
jg
scas
mov
clc
push
jle
out
dec
stc
ds
ror
mov
sbb
xchg
(bad)
clc
or
mov
mov
fldcw
enter
cld
mov
loopne
jecxz
sub
xor
pop
rcr
(bad)
ficomp
push
pop
jae
xor
xchg
inc
stc
scas
shl
shl
and
scas
aad
mul
repz
ja
in
jmp
(bad)
in
cmp
mov
or
mov
dec
pop
xchg
scas
idiv
mov
movs
mov
loope
mov
es
in
sub
lock
shr
int
pop
adc
adc
cmp
mov
mov
test
cmc
jle
cld
hlt
add
sub
sbb
aaa
add
or
iret
xchg
xchg
jecxz
add
arpl
mov
inc
out
push
jp
mov
fwait
adc
cdq
ret
(bad)
addps
adc
push
mov
dec
xchg
push
mov
xchg
push
dec
fsub
add
mov
push
(bad)
jmp
(bad)
(bad)
mov
iret
sub
mov
icebp
outs
test
xor
pop
outs
cmc
push
retf
or
fsub
sub
retf
and
sub
pop
cmc
push
or
mov
add
and
and
clc
adc
jmp
nop
test
rol
adc
(bad)
loop
cli
xchg
sub
fs
dec
imul
cmps
imul
dec
push
jns
fld
rcl
and
sahf
scas
xchg
cmp
mov
jne
and
aas
inc
scas
in
(bad)
std
xor
inc
loope
les
mov
add
dec
ficom
out
mov
mov
push
inc
pop
jl
retf
cmp
push
hlt
sub
or
iret
cli
call
push
pop
pop
cmp
push
(bad)
sbb
xchg
pop
adc
adc
stos
jmp
inc
jo
ret
das
ret
fdivp
rol
or
sub
cwde
in
movs
stos
ds
inc
adc
dec
dec
rcr
scas
jnp
inc
in
or
retf
adc
or
ret
xlat
in
adc
push
pop
mov
fldcw
inc
push
sbb
ror
jbe
outs
mov
sub
sub
aas
xchg
pop
or
xchg
out
add
and
mov
ror
repnz
pop
sbb
xchg
jbe
loop
jmp
pop
(bad)
es
pop
loopne
and
xchg
fdiv
add
jo
jp
mov
mov
call
sub
xlat
mov
push
arpl
xchg
xor
inc
dec
xchg
sub
push
cmp
push
movs
cmps
and
or
loope
call
add
pop
sub
push
arpl
lea
cmp
ja
scas
sbb
xchg
xor
and
(bad)
scas
out
adc
and
loopne
arpl
sbb
mov
fild
and
call
mov
pop
sub
in
iret
das
mov
cmp
retf
mov
adc
sbb
rol
inc
push
fmulp
inc
sub
xchg
xchg
retf
pop
outs
call
repnz
jp
xchg
aas
jo
xor
or
push
jmp
push
push
test
(bad)
sub
and
aas
dec
push
jle
sbb
push
in
mov
xchg
mov
xchg
mov
or
mov
or
xchg
icebp
adc
int
test
(bad)
jae
fisub
dec
in
leave
sub
aam
xchg
out
js
mov
sub
mov
ss
test
add
cli
loope
aaa
les
and
pop
sub
retf
ror
stc
retf
(bad)
imul
outs
rol
pop
jge
arpl
xchg
sbb
mov
stos
sub
mov
std
loop
mov
cwde
in
jle
inc
mov
push
xchg
sbb
cmp
out
jg
repnz
xor
sbb
out
mov
sbb
jns
test
inc
or
xchg
fcom
xchg
mov
mov
cmp
sub
fmul
fild
jge
xor
mov
jg
fadd
add
iret
xor
jns
outs
and
push
outs
push
je
call
(bad)
fist
xor
std
mov
pusha
imul
ins
jge
sbb
mov
pusha
mov
adc
jecxz
ret
movs
adc
mov
xchg
jb
mov
push
mov
jg
xlat
cmp
add
sbb
fld
loop
adc
xor
xor
cmps
add
mov
mov
or
adc
jne
repnz
dec
bound
ds
sahf
dec
pop
mov
add
or
xchg
(bad)
jo
and
bound
nop
push
test
maxps
int
pop
inc
(bad)
and
adc
stc
loop
xor
ins
sub
out
inc
imul
jp
cmp
fwait
imul
dec
repnz
bnd
in
or
test
cmp
js
inc
push
xchg
out
(bad)
fisttp
cmp
jne
inc
push
into
inc
cwde
icebp
call
test
add
shl
fiadd
imul
jns
pop
ficomp
in
call
fsubr
adc
nop
in
in
jo
mov
repz
and
addr16
xor
and
jo
aaa
jnp
xor
or
dec
inc
rcl
popa
popa
les
xor
repnz
call
ds
pop
dec
loopne
retf
lock
(bad)
ins
mov
xlat
lock
pop
mov
imul
test
in
and
jge
and
neg
sbb
and
push
mov
sub
stos
in
cmp
retf
xchg
test
lahf
fnsave
jb
or
mov
inc
addr16
rcl
pusha
mov
push
lock
or
and
push
cmps
sbb
les
shl
sub
or
adc
cs
cmp
pop
sti
out
sti
mov
call
cli
cli
pop
mov
xlat
or
push
dec
(bad)
fistp
stc
cmp
or
jbe
jmp
dec
xchg
aad
push
jmp
addr16
fs
pop
das
pusha
add
add
xlat
mov
stos
add
repz
dec
in
or
outs
add
lds
dec
or
mov
(bad)
jnp
cmps
mov
xchg
adc
xor
scas
repnz
adc
repz
sbb
add
dec
sahf
pop
test
je
mov
sahf
or
or
dec
cmps
xchg
iret
outs
sbb
sbb
add
mov
mov
hlt
or
gs
xchg
inc
in
leave
cmps
or
(bad)
jge
shl
xor
mov
sub
pop
out
(bad)
imul
inc
inc
pop
or
cli
mov
xchg
ret
stos
popa
in
sbb
ins
cmp
xchg
dec
xchg
sbb
xchg
push
mov
mov
add
das
sbb
cmp
xchg
cmps
clc
push
pop
test
push
sbb
movs
mov
das
inc
push
in
add
jno
int
in
arpl
mov
pop
sbb
(bad)
and
sub
and
pop
push
adc
enter
out
(bad)
sub
pop
leave
add
(bad)
xlat
mov
out
fadd
push
int3
mov
fwait
mov
jge
rcl
int
mov
popf
jmp
retf
inc
pop
inc
lods
cmps
stos
sub
adc
ficom
ret
call
mov
mov
hlt
ins
adc
jmp
sbb
stos
cmc
fs
or
or
cmp
inc
mov
(bad)
stos
pop
cld
pop
mov
fld
cmp
xor
in
inc
inc
xchg
mov
mov
push
std
pop
fidivr
inc
aam
cmp
inc
rcr
cwde
mov
mov
mov
retf
sub
mov
mov
push
xchg
cld
push
shl
and
mov
rcr
mov
or
add
ja
sbb
js
ja
jae
fs
sbb
lods
cmps
jp
mov
adc
in
out
jnp
push
(bad)
pop
mov
inc
cmp
sbb
jmp
mov
enter
ja
add
push
jns
js
jle
jb
inc
popf
fisttp
xor
bsr
das
stc
cld
inc
or
inc
ins
mov
sub
inc
pusha
cmp
unpcklps
outs
dec
sub
jnp
daa
pop
adc
retf
lock
dec
push
loope
sbb
inc
daa
sub
sub
push
out
inc
iret
sub
cs
test
cmp
(bad)
imul
cmp
test
lods
pusha
pop
shl
push
add
fldcw
call
inc
add
fcomp
mov
mov
push
push
shr
or
xor
or
es
xchg
hlt
xor
out
inc
jno
xchg
mov
fs
icebp
jnp
int
push
popa
xor
jo
in
mov
cmps
retf
push
(bad)
aas
pop
add
push
in
mov
mov
jnp
xchg
or
stc
sub
shr
fcomp
mov
mul
addr16
inc
dec
aaa
ins
jnp
int3
mov
mov
mov
add
in
stos
std
and
push
mov
push
xchg
push
inc
test
loopne
fidivr
mov
cmp
jge
out
iret
cmp
sub
imul
(bad)
mov
(bad)
(bad)
jg
add
pop
cwde
cmp
mov
cmp
xlat
jne
dec
mov
cmp
ret
arpl
mov
inc
in
leave
call
les
adc
mov
popf
leave
pop
jmp
mov
in
push
pusha
popf
out
out
dec
jno
push
xor
cdq
sbb
js
hlt
jg
pop
lock
aas
sub
fsub
int3
popa
lods
sub
push
nop
mov
dec
push
rcr
sti
mov
in
lods
push
(bad)
sub
ret
lock
loopne
mov
imul
out
push
xchg
fdivr
in
int
ret
push
sub
pop
ins
and
mov
pop
into
fldcw
inc
outs
xchg
data16
or
pcmpgtd
xchg
push
cmp
std
jmp
xchg
push
call
and
sub
xchg
dec
paddsw
scas
and
push
shr
imul
pusha
scas
mov
cwde
(bad)
xor
(bad)
std
daa
gs
mov
push
mov
mov
push
fmul
popf
test
push
in
mov
xchg
pop
fsubr
adc
jae
mov
(bad)
push
jbe
mov
dec
lods
xchg
test
outs
aaa
mov
fld
pop
jecxz
pop
push
mul
sbb
dec
jp
or
cli
je
ins
rcl
adc
aaa
push
(bad)
imul
or
aad
mov
pop
jnp
rcr
sahf
rcr
lea
lods
fidivr
push
xchg
fisub
jp
fisubr
push
enter
xchg
daa
push
jnp
adc
ss
fstp
data16
loopne
or
stos
or
loop
dec
in
aad
rcl
mov
adc
je
mov
jecxz
loop
daa
push
and
and
in
dec
jg
dec
ins
and
push
cmps
pop
mov
or
xlat
loope
mov
pop
cmp
aam
mov
mov
or
inc
icebp
imul
and
in
xor
imul
data16
mov
sets
dec
mov
pop
sub
cmc
data16
cwde
ja
push
test
inc
gs
int3
xchg
jecxz
arpl
xchg
xrelease
add
fist
cmc
imul
mov
xor
in
xor
jp
add
outs
jo
lea
or
ret
mov
mov
icebp
pop
jno
stos
pop
outs
pusha
shr
cs
inc
push
jno
adc
xchg
mov
sbb
movs
mov
test
sub
int3
outs
dec
popf
dec
nop
mov
rol
mov
ds
xchg
test
mov
fs
jmp
pop
retf
jbe
lods
stc
jle
xchg
out
ror
clc
aas
jle
imul
cwde
xor
xchg
push
sub
mov
div
cmp
ins
shr
push
dec
aaa
call
xor
xchg
mov
mov
jl
xlat
ss
loope
test
mov
ds
movs
dec
inc
nop
mov
(bad)
arpl
jmp
aaa
pop
push
movs
jne
mov
sub
xchg
adc
add
(bad)
push
cmps
push
jae
jp
pop
pushf
xor
ret
loopne
cmc
dec
mov
adc
fwait
ds
or
das
std
hlt
mov
sbb
xchg
mov
fs
ins
leave
add
jnp
ret
xchg
xchg
mov
movs
test
lods
add
mov
and
jns
mov
hlt
cld
or
into
mov
pop
pop
adc
push
out
int
stos
aad
out
aam
adc
aas
into
dec
sub
cmp
popf
js
movs
jmp
mov
push
sub
inc
ret
adc
rcl
fild
mov
test
xor
xchg
mov
inc
pop
add
xchg
ins
scas
cmp
shr
scas
xor
movs
repz
ins
push
sahf
(bad)
iret
mov
addr16
loopne
mov
dec
xor
push
jo
js
fmul
inc
add
or
int3
lea
or
fiadd
cmp
popf
ja
inc
out
sub
dec
fistp
daa
nop
and
dec
add
test
sub
cld
sub
fsubr
inc
test
sub
jp
cmc
mov
push
lock
das
xor
xchg
xor
leave
loop
daa
pop
lock
icebp
pop
pusha
fs
scas
cdq
hlt
add
je
jo
je
dec
xchg
push
jmp
test
ret
(bad)
outs
inc
repz
jg
jp
loopne
idiv
in
cmps
add
xor
sbb
mov
les
icebp
inc
mov
push
xor
dec
xor
xchg
inc
adc
test
ins
jmp
xchg
sbb
cs
scas
and
jae
div
rcl
cmc
and
jo
sub
xor
sbb
mov
sbb
mov
sub
jne
in
daa
xor
push
sar
ds
xor
pop
push
stc
jb
xor
call
adc
in
dec
mov
test
hlt
call
aad
(bad)
cs
aam
and
cli
mov
mov
adc
sub
add
ja
push
dec
scas
push
nop
aad
mov
jne
push
std
ja
imul
xor
mov
jp
std
xchg
or
retf
stos
in
lahf
adc
mov
inc
inc
int
lea
or
addr16
add
rol
and
loope
adc
cmp
jle
mov
repz
sti
bound
and
popf
(bad)
enter
sbb
fcomi
(bad)
test
es
dec
xor
nop
push
icebp
jo
inc
fild
jno
dec
lods
hlt
imul
shl
test
mov
jo
pop
movs
push
pop
int3
stos
mov
inc
push
clc
dec
push
fild
xlat
xchg
inc
retf
nop
rol
sbb
mov
aaa
mov
cwde
push
xchg
pop
fwait
in
in
es
push
dec
push
(bad)
pushf
pop
(bad)
sub
retf
scas
mov
rol
mov
ins
ins
xchg
and
jno
ret
ret
dec
push
push
out
aad
cwde
jo
xchg
cmp
rcl
sub
fimul
retf
cmp
mov
pop
add
jecxz
mov
xor
repnz
mov
loopne
clc
jmp
scas
xor
xchg
pop
and
cmp
sti
xor
call
mov
movs
out
jne
in
push
push
jb
out
push
mov
push
sub
stc
in
addr16
in
xchg
std
push
or
or
cmp
cli
lock
sahf
pop
cmp
pop
aas
sti
xchg
jb
xor
jge
mov
cmp
cli
push
movs
mov
sbb
push
cld
jl
imul
call
or
jb
dec
sub
mov
lock
dec
jp
imul
jle
in
out
jne
ret
dec
cmp
outs
loopne
push
das
popa
xor
shr
je
jle
or
(bad)
jg
or
or
adc
mov
retf
not
pop
lock
pop
cmp
inc
popf
jbe
mov
or
(bad)
jnp
std
fsubr
nop
pop
mov
mov
aaa
jle
mov
push
push
fld
sub
and
push
mov
and
mov
inc
aad
jg
pop
stos
sub
or
adc
inc
sub
loope
and
ret
stos
arpl
popa
imul
mov
cs
xor
nop
sbb
dec
and
loope
mov
das
cwde
xor
mov
ret
inc
mov
xchg
sub
shl
jle
(bad)
lods
cmc
stc
mov
pop
call
cld
js
leave
sub
test
(bad)
lods
div
cmps
and
push
dec
pusha
das
dec
stos
fwait
add
iret
and
mov
add
sahf
nop
enter
(bad)
movs
daa
sbb
(bad)
sbb
popf
ds
je
pop
clc
adc
mov
int
retf
in
sahf
jno
jge
add
add
out
outs
aam
push
arpl
aaa
cmps
mov
push
and
arpl
jl
test
mov
shl
inc
xchg
jle
dec
push
sbb
scas
sub
inc
(bad)
iret
mov
test
fstp
ret
shr
mov
adc
sbb
stc
ror
(bad)
fwait
aas
outs
push
aad
movzx
dec
dec
inc
mov
pop
fwait
pop
or
xor
push
pop
in
cli
je
push
pushf
inc
ins
je
cmps
or
out
mov
xchg
daa
popa
jl
adc
js
mov
ret
idiv
jge
(bad)
xor
inc
outs
sbb
in
dec
fisttp
add
mov
pusha
in
xor
repnz
jge
(bad)
ja
fadd
lock
repz
pop
test
jge
pop
out
xor
adc
add
hlt
data16
shl
popa
adc
neg
add
push
dec
fs
aaa
dec
and
popa
call
pop
test
in
test
ja
jl
jno
loopne
sbb
sub
adc
mov
or
fidivr
jae
loope
adc
in
add
std
sbb
ss
adc
and
out
inc
push
xchg
cli
lods
pop
and
stos
jae
xor
mov
adc
sti
lock
and
movs
xchg
hlt
add
mov
or
fist
fs
mov
idiv
push
sbb
jmp
call
add
stos
sub
iret
sub
lahf
loope
add
das
pop
or
clc
push
cmp
(bad)
pop
mov
or
adc
(bad)
fnstcw
dec
pop
(bad)
cmps
sbb
sub
sub
ror
(bad)
xchg
mov
mov
test
jl
mov
movs
add
cmp
jb
dec
mov
stos
rcl
das
inc
fwait
out
add
sbb
sub
xlat
into
and
dec
adc
loope
ret
std
cs
mov
lods
adc
idiv
push
sub
add
cmps
leave
mov
or
iret
mov
mov
pop
outs
mov
arpl
retf
xchg
mov
push
add
mov
jg
mov
push
rcl
enter
mov
cmps
mov
test
sub
pop
scas
xchg
and
lds
(bad)
sbb
adc
add
inc
and
mov
imul
and
jecxz
mov
xchg
pop
das
push
pop
sbb
push
and
jnp
outs
mov
xlat
ins
gs
pushf
out
or
in
bound
jbe
add
fst
neg
(bad)
sub
shl
jmp
push
inc
ins
pop
aas
mov
add
mov
sbb
test
je
inc
push
movs
fidiv
xor
sbb
popa
sub
push
ja
xchg
mov
shr
or
xor
inc
repz
(bad)
call
mov
fwait
push
(bad)
jecxz
sahf
mov
xor
sti
and
neg
mov
in
pop
out
push
xchg
out
fstp
push
fadd
add
cmp
pop
mov
xchg
daa
mov
out
cs
(bad)
jbe
(bad)
sub
sahf
push
add
call
adc
enter
aam
push
jmp
aad
push
int
retf
mov
or
and
int3
xor
dec
call
pop
push
std
sbb
sbb
(bad)
fld
leave
fs
xor
mov
clc
imul
(bad)
out
into
pop
call
sbb
in
leave
xchg
inc
push
aas
daa
pop
inc
movs
or
ins
inc
cmps
and
aam
js
arpl
pop
push
xor
fsubr
out
lds
and
mov
push
popf
xor
or
movs
inc
out
sub
cmp
cmc
inc
and
pop
push
add
push
loope
jbe
pop
test
enter
add
xor
mov
fadd
push
jecxz
pop
mov
pop
clc
sbb
iret
xchg
pop
es
bound
adc
lea
arpl
push
dec
sbb
pop
adc
(bad)
push
push
xchg
dec
js
mov
xlat
inc
(bad)
mov
rcl
push
mov
(bad)
mov
and
cmc
movs
xor
push
pop
mov
jecxz
sbb
aad
xchg
adc
xchg
js
or
nop
or
fidivr
in
mov
popa
mov
or
or
xchg
popf
int3
pushf
sbb
sbb
jmp
popa
les
push
out
xchg
in
sub
inc
jl
cmc
add
jle
test
aad
ins
jmp
cmp
cli
mov
xchg
scas
mov
add
into
mov
out
aaa
mov
push
clc
stc
lds
(bad)
adc
mov
fld
fxch
push
cmp
dec
es
push
add
lahf
push
pop
cmp
adc
outs
inc
xor
in
sbb
sbb
aas
mov
or
mov
retf
inc
cmp
bound
and
jle
mov
rcr
dec
jns
bound
sub
out
dec
cmp
ja
inc
loopne
pop
push
lahf
mov
lea
mov
es
cdq
xor
ja
sub
ret
(bad)
stos
lods
jo
aaa
fld
push
pusha
sub
cld
push
inc
sbb
or
jmp
int
push
gs
ja
mov
cmc
das
aam
inc
cld
int
icebp
sti
into
mov
mov
inc
mov
jge
pop
(bad)
call
fimul
push
inc
or
push
xor
mov
rol
mov
mov
sub
mov
pop
ins
jle
movs
jbe
or
xchg
fidivr
sar
das
sub
push
or
cs
or
xor
test
pop
iret
add
xor
and
mov
daa
loopne
adc
xchg
push
or
pop
push
ffreep
dec
clc
add
jnp
xchg
bound
mov
xor
ror
sahf
paddsb
rcl
xor
cs
jg
mov
sub
idiv
fucomip
vmread
push
push
dec
or
jmp
xor
adc
pop
std
xchg
pop
cmc
ss
jmp
call
lea
cmp
dec
pop
cli
lahf
sub
aaa
push
dec
sbb
xlat
fnstenv
mov
dec
mov
sub
and
push
jmp
push
xor
scas
dec
mov
xchg
scas
enter
clc
outs
lock
cld
add
out
je
fwait
fs
and
xor
sub
leave
jo
rol
pop
mov
clc
dec
xchg
inc
fwait
mov
push
rcl
sbb
shr
mov
(bad)
cld
inc
and
add
sub
std
xchg
xchg
fist
out
lods
adc
pop
adc
mov
aaa
sub
xor
cmp
rol
sub
pop
push
push
push
repnz
sar
mov
add
aad
xor
(bad)
repz
add
pop
dec
(bad)
pop
daa
movs
gs
mov
stos
mov
pop
aam
aam
ror
out
adc
popf
in
leave
scas
pop
pop
and
das
fistp
out
mov
push
ins
cwde
std
jne
dec
xor
enter
dec
dec
adc
mov
fadd
outs
(bad)
or
test
pop
or
xchg
data16
dec
test
fisubr
cmp
cmp
or
pop
or
push
ror
outs
sub
(bad)
push
xor
movs
movs
enter
dec
dec
test
xchg
inc
mov
and
imul
int
(bad)
jmp
cmps
dec
add
cmps
mov
pop
pop
dec
cmp
pop
mov
and
fbld
or
dec
outs
mov
cs
mov
out
jl
xchg
mov
xor
iret
or
and
inc
fucomp
out
es
pop
or
hlt
(bad)
mov
dec
out
out
inc
iret
scas
int3
fcomip
xchg
jo
shl
and
pop
stos
push
cmps
pop
mov
(bad)
(bad)
and
pop
ds
jns
pop
cmp
push
icebp
hlt
inc
xor
aam
dec
aas
sbb
ret
mul
pop
sbb
jl
cmps
mov
mov
sbb
xor
icebp
sub
push
or
add
mov
daa
psubw
loope
not
cmp
ja
stos
sub
les
mov
and
out
movs
call
iret
sub
pushf
sar
xor
xchg
xchg
loope
and
cli
shl
cmp
outs
sbb
push
in
jns
icebp
xchg
rol
inc
dec
xlat
out
(bad)
hlt
pop
loopne
jmp
sbb
rcl
int3
dec
xor
mov
fucom
cdq
mov
xchg
xor
fisttp
pushf
inc
aad
sbb
jp
std
jbe
jne
ret
push
int
mov
int3
mov
jle
pop
test
xor
(bad)
xchg
mov
mov
imul
and
jmp
pushf
inc
mov
adc
daa
fstp
mov
dec
inc
out
push
movs
ret
sbb
add
push
jmp
sbb
loop
call
or
sbb
pop
imul
pop
(bad)
mov
push
pop
aam
pop
out
test
sub
xchg
sbb
xchg
loopne
xor
push
jle
mov
out
in
sbb
pop
mov
ds
aas
xchg
jo
pop
push
lods
mov
(bad)
es
cmp
int
push
sbb
xchg
and
lds
aas
lahf
mov
xlat
lods
pusha
popa
inc
dec
out
push
adc
js
ins
inc
scas
or
popa
jmp
push
mov
and
test
cmp
imul
or
aaa
idiv
repz
in
ja
mov
stc
jne
in
call
mov
push
arpl
cmp
push
stc
aad
push
jecxz
lock
xchg
stos
adc
sti
(bad)
retf
jge
add
push
ins
pop
adc
lock
into
cmp
out
outs
and
xor
test
adc
mov
push
mov
jge
jae
lds
xchg
pop
xchg
push
call
es
mov
inc
call
adc
enter
add
mov
sti
rcl
daa
scas
mov
push
jmp
add
xor
add
shl
iret
mov
in
jmp
xor
out
sub
sbb
push
jb
out
inc
push
ret
cmps
push
sti
in
mov
test
xor
cli
cli
xchg
xor
das
ret
xlat
xor
ror
and
popf
adc
mov
mov
sahf
xchg
stos
fwait
sbb
add
gs
xchg
push
jge
cmps
add
loope
fcmovne
in
repnz
enter
inc
mov
gs
(bad)
dec
push
and
out
rcl
sbb
xchg
jecxz
pop
cld
push
xor
ror
pop
cdq
fistp
xlat
push
fsub
retf
sub
jl
mov
fldenv
adc
test
rcr
adc
sub
mov
sbb
jl
cs
sub
hlt
mov
push
loopne
adc
mov
nop
inc
fnstenv
mov
imul
add
push
pop
outs
add
jl
sub
or
xor
into
popf
fidivr
in
call
in
pop
and
push
adc
xor
pop
add
repz
mov
(bad)
out
add
lock
mov
or
enter
inc
push
mov
daa
and
mov
sub
in
adc
fstp
lahf
inc
push
idiv
and
fild
addr16
fdivr
push
jg
xchg
inc
sbb
mov
pop
cli
imul
jae
cmp
xchg
shl
fdivrp
ret
in
adc
into
fbstp
cmp
(bad)
and
sub
(bad)
cli
stos
dec
push
popf
jb
aaa
popa
fcmovnbe
mov
loop
(bad)
call
ds
jg
xchg
xchg
hlt
lea
adc
cmp
retf
or
stos
jae
mov
mov
out
sbb
leave
popf
xor
stc
mov
fidiv
xchg
imul
mov
or
cs
or
les
dec
mov
jg
sub
scas
stos
or
cmovg
jg
retf
pop
dec
add
xor
fist
push
rcl
sbb
and
or
adc
inc
and
mov
inc
imul
pusha
sti
xchg
and
push
pop
pop
xchg
loopne
push
fcmovu
outs
inc
dec
mov
dec
mov
(bad)
(bad)
and
pop
int3
and
jg
call
int
mov
retf
jbe
retf
bound
cmps
sub
mov
sar
test
repnz
fist
add
jg
popf
test
loop
in
pop
call
out
pop
mov
ja
cwde
inc
jmp
xlat
inc
lods
(bad)
(bad)
fld
dec
push
(bad)
loope
and
fst
push
xor
jnp
mov
cmps
xchg
stos
into
outs
sbb
sbb
mov
or
jmp
mov
imul
or
inc
ja
dec
cmp
cmp
ins
loopne
inc
jns
push
and
outs
fiadd
jne
int
lods
cmp
es
or
ds
aam
test
test
dec
and
mov
jg
loopne
test
les
jle
xchg
mov
cmc
cmps
jmp
xor
scas
adc
je
sub
and
pop
aaa
mov
cmc
push
repnz
dec
jae
push
jg
fcom
fnstsw
mov
int
loopne
ins
push
dec
mov
stos
popa
pop
dec
pop
(bad)
into
out
push
adc
add
sub
add
and
pop
(bad)
dec
push
mov
sti
lods
push
jo
cmp
mov
mov
fist
cli
imul
add
lea
popa
add
fldl2e
mov
push
adc
iret
pop
imul
outs
imul
mov
stos
sub
setbe
fisubr
mov
ror
jae
in
jbe
xchg
push
push
sub
adc
stos
cdq
adc
ret
jno
sbb
ficomp
fwait
mov
test
jmp
(bad)
jmp
push
test
cmp
stc
ins
sahf
in
jne
iret
stos
push
mov
jne
shr
jmp
sub
and
push
dec
add
jmp
(bad)
cmc
push
popa
sub
mov
dec
inc
xor
lods
mov
aaa
mov
and
pop
shr
push
iret
add
loop
push
push
add
sub
jg
je
or
or
mov
test
mov
sub
mov
cdq
mov
stos
imul
aas
pop
sbb
retf
xchg
lods
fmulp
dec
shl
cs
scas
pusha
ret
das
xor
ret
pop
push
push
xor
mov
push
mov
jo
pop
pop
sbb
cmp
js
test
fsub
retf
adc
sbb
xor
nop
and
call
rol
scas
int
test
lds
and
out
fadd
xor
(bad)
xor
mov
ds
cwde
pop
hlt
test
and
mov
(bad)
dec
cmp
mov
outs
mov
mov
daa
xor
mov
js
retf
or
(bad)
jns
cmps
test
addr16
mov
xor
inc
xor
clc
mov
in
imul
inc
or
inc
sub
fwait
push
push
mov
call
daa
xrelease
adc
adc
mov
repnz
mov
or
add
or
popa
jecxz
fisubr
add
aad
nop
jbe
sub
push
cmp
dec
cmps
int
add
xor
test
push
scas
imul
cmc
mov
arpl
sbb
mov
retf
stc
xor
ja
mov
xor
out
clc
ss
add
sub
aas
and
push
scas
das
imul
in
jp
add
adc
sub
jg
mov
mov
int3
mov
sub
out
mov
pop
pop
sub
mov
nop
adc
mov
jg
mov
jl
pop
sub
(bad)
call
xor
ins
cmp
mov
in
dec
dec
imul
add
pop
jmp
or
aaa
mov
dec
ss
inc
ss
mov
dec
jo
movs
cmp
ret
push
or
movs
pop
fld
loop
aaa
jb
scas
or
xchg
and
or
fdivr
lock
dec
mov
mov
jge
inc
dec
stos
pop
mov
and
(bad)
bound
push
repnz
ret
ja
cmp
xchg
mov
mov
(bad)
push
xor
pop
pop
dec
push
lock
sti
sub
jb
call
arpl
xor
dec
and
jns
jl
shl
les
lea
sub
test
icebp
xor
test
sub
mov
mov
fbld
and
das
push
in
mov
mov
mov
sbb
adc
(bad)
push
loop
adc
mov
popa
mov
nop
data16
movs
or
xor
jbe
mov
push
neg
movs
(bad)
in
sub
mov
pushf
out
imul
out
popf
or
les
cli
int
cmp
shl
gs
cmps
clc
mov
jmp
mov
sub
div
retf
out
cmp
mov
leave
sti
sub
dec
mov
mov
mov
(bad)
jecxz
aad
call
lods
jmp
mov
mov
fwait
pusha
push
int3
bound
pop
xor
nop
or
ins
mov
jmp
mov
inc
adc
ficomp
mov
lea
popa
imul
mov
add
in
cld
or
fwait
in
(bad)
clc
push
push
fidiv
push
fs
fdivp
jnp
jp
jno
cmp
and
retf
cmc
gs
pop
call
ret
lock
outs
movs
mov
lods
xchg
adc
and
div
xchg
ficom
mov
add
cld
rep
mov
(bad)
cmp
fdiv
push
repnz
pusha
sbb
cmp
or
les
add
add
add
adc
lahf
into
cmp
js
aas
ret
sub
das
inc
add
dec
sub
je
sahf
(bad)
push
in
sti
xchg
pop
pop
not
jp
inc
mov
or
call
mov
inc
cmp
loopne
cmp
or
and
xchg
add
xchg
cmp
pop
mov
rol
pop
jl
fistp
inc
inc
xchg
(bad)
push
cmp
rol
xchg
push
cmp
inc
xchg
sbb
xchg
shr
jmp
and
xor
jmp
in
or
daa
sbb
cwde
or
mov
pop
ja
fist
cs
inc
loope
and
fiadd
sub
and
lahf
sbb
sbb
pop
push
cmps
adc
imul
aaa
stc
inc
dec
sub
jne
icebp
mov
mov
push
imul
inc
data16
imul
dec
addr16
dec
xor
rcl
mov
call
push
in
fisubr
sbb
xor
xchg
ds
nop
(bad)
in
mov
and
dec
cmps
shr
jno
fwait
inc
and
fstp
stos
xor
mov
and
mov
adc
aad
xor
sub
push
test
cli
pop
(bad)
dec
hlt
call
shr
adc
jae
(bad)
mov
inc
adc
or
fdiv
ins
inc
jecxz
imul
call
jmp
inc
sub
clc
les
stos
jmp
fbstp
jmp
dec
stc
in
gs
fwait
lods
pop
xchg
dec
cli
cwde
outs
and
loope
mov
mov
pop
mov
jmp
dec
call
ret
pop
dec
loopne
sub
call
ds
in
pop
cmp
jge
sbb
out
fisub
mov
aam
xor
adc
outs
fmul
jo
mov
fld
xor
mov
xor
sub
pop
and
xlat
dec
xor
push
sbb
and
(bad)
xchg
push
fsubrp
aas
cmp
push
mov
std
mov
movs
push
adc
test
mov
icebp
xor
mov
push
outs
ins
mov
out
push
sub
jns
pop
call
or
ds
stos
adc
pop
(bad)
call
mov
scas
jne
sbb
sbb
mov
and
or
sbb
shr
cmp
jo
and
aad
push
add
cld
in
(bad)
into
xor
dec
push
cld
mov
adc
cmp
jp
movs
inc
jecxz
sbb
pop
stc
mov
jmp
leave
pop
ins
adc
fild
sub
jmp
pop
movs
call
ret
loope
xor
aad
in
mov
sbb
mov
movs
dec
mov
mov
mov
mov
adc
retfw
rcl
nop
out
loopne
jbe
nop
cli
inc
jno
mov
mov
rcl
les
out
xchg
in
sub
stos
xchg
sbb
pop
jl
sbb
call
jbe
in
into
aaa
repnz
hlt
adc
pop
mov
jle
repnz
or
add
ror
std
or
cmp
dec
shl
inc
scas
xor
adc
mov
(bad)
push
mov
mov
or
lds
stc
mov
fwait
inc
scas
aam
cmps
dec
test
jns
cmp
lock
cmp
inc
cmps
rcl
sbb
test
pop
das
mov
ja
add
sbb
outs
pop
mov
or
cmc
mov
mov
sbb
xchg
inc
cmp
fistp
push
and
ret
(bad)
xlat
inc
imul
dec
sub
in
(bad)
push
inc
cld
jle
gs
les
or
aam
sbb
jae
daa
mov
mov
jns
mov
adc
mov
or
inc
dec
mov
mov
sub
out
aaa
sub
sar
pop
std
aas
adc
push
pop
jl
push
lds
mov
ret
mov
sub
inc
std
mov
test
pop
repz
jns
es
mov
retf
fst
jae
jnp
pop
loopne
pusha
dec
jecxz
sbb
jno
ds
daa
mov
es
or
push
push
and
repz
call
or
xor
iret
cmc
cmp
lds
adc
cmp
push
or
xor
push
ja
enter
mov
das
add
jge
popf
je
push
fldcw
mov
js
mov
jp
lods
test
mov
out
cli
or
dec
repz
pop
push
and
or
sahf
mov
frstor
in
aaa
sub
dec
xchg
add
xchg
xor
cmp
loope
sbb
mov
cmp
sbb
fmul
ror
fsubr
pop
or
mov
xchg
stc
sar
xor
outs
mov
(bad)
ins
push
loop
mov
lods
(bad)
cmp
jnp
fdiv
inc
fisub
movs
fmul
adc
lea
jmp
cdq
inc
xor
(bad)
push
ret
fisubr
retf
sub
bound
(bad)
mov
scas
pusha
sbb
shl
movs
mov
xchg
adc
nop
xlat
(bad)
push
ss
push
sub
outs
les
pusha
and
(bad)
or
cmp
dec
test
repnz
cli
jae
daa
adc
add
movs
in
cld
neg
test
cmp
lock
inc
mov
ret
lock
jg
jmp
dec
int3
in
cs
jmp
mov
mov
(bad)
arpl
call
or
mov
adc
sbb
pop
fsubr
cmc
push
ret
idiv
shl
xchg
or
jmp
xchg
outs
ror
pop
sahf
cli
cs
out
xchg
xlat
dec
ja
dec
pop
ins
test
push
mov
call
xchg
jle
test
bound
add
xor
retf
repnz
inc
mov
retf
(bad)
cmc
ins
xor
std
sbb
xchg
sbb
imul
das
dec
cmc
inc
dec
mov
sahf
aaa
cld
ss
mov
jne
test
pop
add
jnp
mov
in
test
icebp
push
mov
or
rep
sar
add
jmp
inc
xor
adc
push
inc
and
in
cmps
dec
sbb
into
arpl
cmp
je
stos
shl
dec
push
jle
xor
stc
push
fcmovnb
out
xor
add
test
xchg
in
enter
jno
rol
sub
fs
pushf
xchg
push
lods
or
cmp
jmp
push
mov
rcr
icebp
mov
cmp
lods
jnp
sub
pop
repnz
or
xchg
push
call
rcr
mov
inc
mov
(bad)
out
inc
push
jp
leave
std
add
sbb
(bad)
mov
mov
mov
repnz
inc
ja
xlat
add
push
lds
xchg
pop
add
fstp
push
fadd
aaa
sti
fsub
stc
mov
nop
mov
test
data16
dec
push
leave
lods
pop
cli
lods
jle
xchg
ficomp
jge
out
mov
pop
xchg
jnp
stos
sbb
into
mov
mov
mov
xchg
mov
(bad)
add
mov
pop
jecxz
fst
mov
fdivr
mov
mov
jl
dec
lahf
or
xlat
(bad)
pop
xor
lds
ins
dec
cmp
pop
aam
cli
adc
mov
test
in
outs
mov
fdivr
sbb
clc
in
xchg
dec
fnstenv
or
das
xchg
pop
outs
add
in
scas
mov
shl
cmp
je
mov
cli
repz
cmp
xchg
mov
sti
mov
or
or
or
arpl
test
and
shl
sbb
scas
sub
lds
das
sti
cli
arpl
jno
or
aas
adc
leave
lods
mov
cmps
aaa
je
outs
push
mov
repnz
jge
ror
fisttp
dec
cs
lds
add
outs
movs
jmp
cmc
mov
int3
test
sub
push
shr
fsub
icebp
sar
adc
jne
iret
lock
and
mov
dec
sbb
popf
(bad)
xor
sub
jge
dec
fadd
jne
retf
adc
jmp
xchg
dec
(bad)
sub
outs
movs
sahf
pop
xlat
sahf
pop
jno
inc
cmc
and
push
add
mov
adc
lds
inc
scas
cdq
xchg
in
call
xor
data16
mov
cmc
cmp
or
bound
adc
xor
xchg
adc
sbb
push
mov
test
repnz
xor
sub
test
data16
jnp
cli
pop
mov
cmp
push
lods
pop
arpl
sub
adc
outs
adc
jbe
push
inc
lds
cmps
dec
(bad)
dec
lahf
xchg
test
cmp
inc
cld
inc
sar
mov
fdivr
mul
xchg
ja
pusha
pop
dec
imul
mov
retf
rol
jbe
ins
or
mov
xchg
xchg
mov
(bad)
jp
loopne
push
mov
aas
(bad)
cmp
pop
ins
mov
shl
or
mov
pop
sbb
jecxz
clc
fistp
sub
xchg
sub
or
add
cmp
mov
sbb
jmp
dec
mov
icebp
aaa
stos
mov
jbe
retf
enter
dec
and
pop
out
sahf
sub
call
aam
xor
lods
mov
adc
add
nop
sbb
jae
add
push
jmp
xchg
ret
jmp
dec
xor
inc
js
cmp
lods
inc
jmp
rol
push
mov
adc
jmp
and
cmp
pop
repz
sbb
ficomp
dec
adc
push
cdq
popf
std
dec
dec
mov
popa
dec
dec
pop
cld
fist
sti
dec
sbb
cmps
jle
stc
xor
push
inc
push
xchg
popa
enter
jmp
xor
outs
jnp
(bad)
out
mov
adc
inc
inc
push
cmc
xchg
cmp
sbb
inc
dec
adc
xchg
and
mov
fisubr
jp
test
mov
es
and
sub
lds
push
jl
mov
adc
daa
pop
mov
or
lds
test
sbb
sub
mov
sahf
xor
je
clc
mov
xchg
xlat
out
and
xor
add
cdq
stc
ins
div
jl
pop
pop
retf
iret
xor
call
or
adc
je
movs
in
xchg
sbb
inc
fild
stos
push
scas
out
sub
enter
(bad)
jle
retf
push
in
adc
cmp
jmp
cs
imul
dec
adc
out
int3
(bad)
aas
aas
gs
xor
inc
xchg
arpl
inc
pop
mov
push
ret
push
jne
xchg
repz
aam
cmp
aas
sbb
xor
ficomp
loopne
cmp
jmp
int3
xor
ds
dec
call
and
jl
cmps
adc
jb
arpl
cli
push
pop
or
popf
fld
daa
jo
mov
popf
cmp
sahf
sar
repnz
scas
cdq
jo
or
add
test
mov
mov
rcr
icebp
or
loope
icebp
imul
ja
pop
jno
push
xchg
loope
mov
pushf
mov
jecxz
enter
outs
popf
or
push
sub
sub
xor
call
enter
ss
xor
cld
aam
cmp
nop
mov
cmp
lahf
(bad)
jno
sub
add
fdiv
cdq
outs
xor
jl
loope
lods
mov
pop
pop
rcr
and
adc
pop
jno
out
mov
adc
add
movs
sbb
fwait
mov
es
js
repz
in
push
ja
int3
cmps
lahf
je
mov
dec
xchg
and
sub
out
ds
in
icebp
cmc
js
js
leave
sub
jecxz
in
aad
push
ss
adc
aad
cmp
mov
bound
out
and
dec
lea
test
das
dec
retf
adc
shl
jno
jb
mov
inc
sub
add
xchg
fistp
jbe
mov
add
and
leave
pop
ins
loopne
idiv
pop
imul
ror
and
mul
cmp
mov
inc
clc
or
xchg
in
call
test
sbb
aaa
ins
fadd
imul
ja
and
imul
test
xchg
cwde
sub
es
push
popa
push
cmp
imul
push
push
sub
lock
lods
(bad)
bnd
cwde
mov
outs
loope
and
lods
test
jge
mov
mov
sbb
fs
into
stc
xchg
in
bound
daa
leave
dec
(bad)
mov
aam
stos
js
sbb
pop
lods
aaa
jge
retf
mov
into
icebp
xchg
jbe
or
jp
aaa
cmc
rcr
cld
cmp
stos
imul
and
xor
mov
adc
mov
lahf
and
adc
mov
mov
out
mov
or
mov
jl
mov
movs
clc
add
mov
(bad)
and
push
repz
rol
das
sahf
dec
dec
frstor
xchg
push
xchg
aad
and
int
stc
cmp
imul
test
inc
shl
fucomip
mov
call
xchg
add
push
js
scas
sbb
xchg
mov
push
lahf
sbb
or
test
push
mov
icebp
push
scas
cld
shl
cmp
cld
movs
(bad)
jl
ins
xchg
jnp
mov
and
jns
jp
aad
push
pop
mov
mov
pop
inc
dec
mov
dec
xchg
out
popf
lods
not
mov
loop
xchg
dec
in
mov
leave
daa
(bad)
adc
mov
ja
inc
mov
pop
je
and
sbb
jne
rol
adc
jge
fidivr
jo
enter
imul
lods
jl
sbb
or
(bad)
mov
loop
and
ficom
jle
data16
sub
imul
sbb
dec
ins
push
out
(bad)
add
adc
or
outs
inc
add
xor
inc
je
rcl
or
cmp
movs
pop
pop
push
sbb
push
pop
aas
or
jl
cmps
dec
pop
std
or
push
sub
inc
jle
inc
sub
mov
pusha
movs
jns
sub
test
and
(bad)
jo
xlat
or
add
mov
and
outs
mov
sub
sti
in
arpl
ss
lock
mov
mov
sub
sbb
push
push
xchg
jmp
cmp
bound
push
test
push
push
imul
pop
mov
mov
lea
jg
cmp
cmps
imul
pushf
and
add
push
push
cmp
mov
and
sub
dec
sbb
hlt
add
mov
mov
and
cmc
jle
leave
out
fcmovne
mov
cld
into
and
adc
or
mov
js
(bad)
sti
sub
sub
cmp
dec
mov
push
sbb
xchg
dec
or
out
xor
sahf
test
fdiv
xor
dec
stos
adc
dec
sub
adc
jo
add
movs
cs
outs
sbb
int3
pop
jae
cdq
fidivr
dec
pop
lea
je
dec
mov
mov
popf
mov
push
stos
aam
pop
push
add
in
pop
cld
pushf
xchg
scas
and
jae
lea
add
out
jp
or
pop
aam
mov
xchg
mov
movs
jae
enter
cmps
aad
mov
sbb
loope
jbe
jb
stos
mov
cmc
sub
aas
add
jge
pop
push
stc
and
popa
adc
mov
and
pusha
xchg
push
aam
popf
icebp
cmp
int3
(bad)
mov
push
inc
and
xor
nop
fs
mov
sub
js
ret
in
mov
les
mov
into
outs
into
xor
inc
dec
clc
pusha
fs
sbb
cmp
popf
push
xor
inc
adc
mov
imul
daa
mov
out
inc
sbb
lods
sub
ds
and
sub
mov
nop
retf
loope
mov
out
dec
cs
icebp
fs
dec
mov
neg
fist
xor
das
loop
push
data16
fdiv
in
sbb
js
mov
pop
xor
leave
jle
and
sub
mul
mov
stc
(bad)
push
and
ret
outs
fdivr
jbe
ret
mov
mov
jge
mov
in
test
rcl
loop
rol
js
push
cmps
pop
mov
push
sub
and
mov
inc
lea
mov
adc
jmp
jne
cmps
aad
or
mov
retf
cli
sbb
jecxz
sahf
aam
(bad)
fstp
jno
push
push
dec
out
cmp
icebp
jmp
inc
cs
inc
in
call
or
aas
dec
jp
out
cmp
and
sbb
daa
sub
fnsave
(bad)
fcomp
push
mov
rol
push
sbb
add
mov
lea
popf
imul
hlt
inc
dec
xchg
jo
daa
inc
push
or
pop
or
jmp
dec
xor
and
dec
iret
fucom
retf
pop
push
stos
adc
stos
ja
repz
xchg
push
or
push
aas
jo
or
xchg
mov
out
retf
aas
fadd
inc
mov
pop
aas
dec
daa
or
rol
cmp
repnz
jb
adc
jle
push
or
je
int
pusha
test
jbe
xchg
test
pop
adc
in
scas
lock
scas
rol
hlt
pop
or
mov
push
int
xor
xchg
pop
dec
xchg
fcomip
sub
inc
mov
fwait
ds
push
aad
dec
or
cli
push
xchg
std
outs
dec
cmc
push
movs
pop
pushf
loop
xor
int3
retf
aas
int
bound
loope
xchg
out
test
sbb
cmps
ret
jecxz
mov
mov
sub
xchg
mov
pop
add
xchg
cmp
dec
(bad)
int
hlt
and
aam
or
jmp
ins
xchg
jno
test
sbb
dec
adc
pop
loopne
shl
jg
ror
outs
fstp
movs
mov
jns
push
push
jb
out
sti
sar
and
pop
dec
dec
(bad)
fcomp
adc
lock
pop
push
mov
mov
cmp
xchg
xchg
pop
(bad)
rcr
cmps
push
pop
or
lds
push
sbb
scas
nop
ror
adc
adc
fwait
mov
das
cmp
fld
loope
mov
dec
cwde
or
lods
lock
cmp
daa
adc
cwde
sbb
push
add
inc
sar
sub
pop
mov
popf
lods
test
push
shl
add
cmp
cli
icebp
push
adc
push
cli
jns
cmp
scas
xchg
sub
jecxz
in
dec
sub
xor
jmp
add
dec
(bad)
dec
mov
in
js
imul
aam
arpl
test
cmps
int3
in
mov
pop
mov
call
(bad)
mov
das
mov
adc
(bad)
xor
mov
pop
add
cmp
xchg
push
in
loop
xchg
mov
xor
mov
push
inc
rcr
jae
rol
lea
clc
aaa
push
repnz
loope
arpl
cli
aad
(bad)
lock
dec
pop
mov
fcom
movs
pop
scas
xor
or
pushf
fdiv
add
pusha
mov
ins
xor
out
into
jo
fmul
pop
jmp
or
or
lds
ss
pop
iret
mov
addr16
in
enter
sbb
adc
jbe
xor
push
cmps
mov
adc
mov
xor
push
sub
call
in
dec
ins
pop
pop
sbb
loop
clc
sbb
jns
add
cmps
imul
mov
push
(bad)
outs
pop
inc
inc
pop
scas
idiv
dec
jb
aaa
adc
mov
inc
sub
push
hlt
lahf
cmp
jmp
imul
push
push
gs
push
retf
xchg
stos
and
mov
or
retf
test
sub
add
sbb
cwde
out
dec
push
mov
into
mov
add
sar
outs
cli
sbb
pop
pop
out
sbb
adc
mov
mov
or
fcomp
push
pop
pop
dec
and
sbb
sub
cwde
push
lea
fld
retf
into
iret
xchg
dec
or
ret
lods
int3
inc
sbb
icebp
mov
cmp
mov
shl
loopne
or
les
jg
(bad)
push
sbb
sub
jmp
pop
sub
out
clc
mov
pop
and
stc
out
and
and
jecxz
ins
int3
(bad)
mov
scas
stos
out
call
fisttp
aad
repnz
ins
aas
pop
jb
fstp
movs
jge
xchg
push
push
ja
in
fstp
jmp
adc
scas
(bad)
fisttp
fcomi
xchg
(bad)
and
addr16
jb
daa
in
fwait
imul
dec
ins
pop
inc
out
push
jg
ret
jo
sbb
dec
fiadd
dec
xor
push
mov
sbb
push
cmp
or
inc
dec
js
inc
pop
dec
addr16
fbld
std
xor
inc
ds
push
data16
cmp
das
test
xchg
push
retf
rcl
imul
mov
(bad)
sti
repz
sti
pushf
punpckhdq
int
and
xchg
xor
nop
mov
mov
inc
int
ss
push
sub
and
jne
jns
adc
mov
or
mov
push
push
or
sbb
push
leave
ror
int3
sbb
push
adc
add
mov
xchg
(bad)
loopne
xchg
jecxz
sub
inc
nop
rcr
sbb
and
cmp
jo
or
dec
sbb
call
cmp
aaa
sbb
lods
retf
jns
sbb
inc
pop
sahf
cwde
push
int3
push
inc
popf
in
xchg
cli
shl
add
cld
dec
popf
ret
(bad)
pop
movs
push
pop
repnz
fcom
xchg
mov
leave
and
or
ror
int3
fstp
test
ret
dec
or
dec
cmp
movs
pop
mov
nop
ds
sbb
inc
or
retf
test
xchg
jb
lock
movs
add
stos
fwait
test
dec
xchg
dec
dec
call
xchg
and
pop
jbe
sbb
sbb
xor
push
jecxz
dec
push
mov
jno
pushf
js
dec
les
sub
je
add
inc
(bad)
pop
mov
xchg
sub
and
xor
cmp
pop
icebp
in
out
mov
mov
or
in
push
jo
pop
iret
mov
and
mov
sbb
push
inc
pop
ins
push
stos
fsub
xchg
sahf
jns
popa
mov
mov
or
sub
push
in
movs
adc
test
xlat
cmps
sbb
fisub
sbb
jg
loop
fld
addr16
sbb
outs
sar
bound
xlat
shr
adc
or
jecxz
loope
stc
sbb
sub
mov
pcmpeqd
lods
xlat
sub
mov
ss
ret
jb
mov
push
sbb
out
mov
js
cmp
jmp
and
imul
sbb
inc
mov
xchg
test
xor
test
neg
or
mov
xchg
jo
jbe
idiv
mov
mov
mov
lea
adc
pop
into
dec
in
arpl
pop
and
(bad)
je
movs
das
jl
aas
pop
and
mov
sub
imul
add
dec
jg
(bad)
(bad)
ins
xchg
outs
jge
jle
mov
(bad)
xchg
mov
das
imul
cmp
or
retf
mov
ror
out
pop
lds
mov
es
gs
push
adc
xor
xchg
mov
fidiv
adc
ficom
sub
ret
cmp
mov
push
(bad)
fisub
jno
mov
dec
jae
push
fs
je
pop
pushf
out
stos
mov
sub
adc
lahf
aaa
pop
mov
mov
jns
or
sub
adc
cs
arpl
add
(bad)
shl
iret
pop
cmp
sbb
push
jo
dec
scas
into
jbe
aad
jecxz
pop
jb
cmp
sbb
sti
fnstenv
call
das
jmp
dec
mov
adc
ins
cmc
mov
mov
add
and
ds
aas
dec
in
ficom
adc
cmps
inc
inc
pop
jb
out
in
sub
add
loope
(bad)
push
mov
pop
test
add
and
into
or
cmp
fmul
nop
mov
or
iret
in
mov
mov
(bad)
sbb
push
or
lahf
int
and
mov
rcl
shl
sub
cmp
fsub
leave
fsubr
adc
imul
into
sti
cdq
mov
push
or
clc
in
fsubr
dec
leave
add
ret
pusha
lods
push
xchg
call
jge
fadd
inc
pop
cwde
lahf
pop
nop
or
fstp
int3
jb
dec
xor
xchg
and
jbe
sbb
cmp
retf
aad
cmp
test
jb
xor
mov
cmp
lahf
ds
movs
ins
xor
arpl
sbb
jmp
hlt
mov
repz
pop
and
pop
imul
loopne
or
mov
push
call
ja
mov
lds
ins
fcomp
cmp
push
cmps
mov
jne
mov
jg
call
in
lea
xchg
sbb
fnsave
arpl
enter
enter
hlt
adc
leave
enter
inc
pop
test
loopne
pushf
jns
in
test
imul
dec
cmp
sub
push
add
leave
fwait
jo
xchg
dec
and
or
mov
xor
mov
out
scas
and
jmp
jo
(bad)
or
xchg
pop
lods
bound
ret
sub
jb
fcmove
xchg
out
or
out
xor
ror
outs
mov
push
xchg
sbb
push
bound
jl
mov
cmp
inc
push
mov
push
pop
cwde
stos
inc
in
sub
mov
sbb
xchg
cmc
dec
and
push
std
push
ds
mov
pusha
pop
outs
add
movs
fiadd
xlat
xor
and
pusha
pop
fs
scas
sub
pop
daa
dec
xor
push
and
int3
aad
stos
sbb
(bad)
aad
out
repz
dec
adc
push
sub
xor
add
pop
push
and
enter
push
adc
mov
cmp
call
(bad)
mov
fsub
sub
(bad)
dec
adc
fwait
sbb
in
adc
adc
mov
inc
xlat
mov
fisub
jno
inc
mov
cmp
sub
xchg
lods
push
test
sbb
rcl
or
sti
data16
push
sbb
mov
jp
and
call
pop
(bad)
dec
jle
in
jne
mov
loope
call
sub
xor
pop
js
jo
bound
pop
lods
cmp
mov
jo
mov
jnp
mov
stos
cmp
loope
jae
nop
mov
add
out
pop
and
push
js
xor
test
jecxz
outs
jg
xor
dec
mov
outs
jmp
dec
fistp
pop
ffree
jmp
rcr
jmp
fdivr
push
repz
in
add
aad
mov
pop
enter
setns
push
push
xchg
enter
xchg
gs
push
inc
js
fistp
inc
popa
add
sub
es
mov
imul
sub
fistp
(bad)
je
(bad)
sub
js
sbb
inc
mov
fistp
stc
std
leave
leave
cwde
test
inc
mov
xchg
add
lea
xchg
or
sbb
inc
ja
movs
popa
jl
pop
and
pop
sbb
add
xchg
push
test
adc
push
dec
and
sti
sub
xchg
lahf
push
lahf
movups
aad
loope
pushf
or
inc
movs
mov
cmps
xor
push
daa
push
adc
retf
xchg
push
repnz
mov
and
cmp
ja
dec
jl
rcl
jne
test
push
ins
xor
cld
push
pop
rcr
push
rol
imul
ror
mov
leave
or
fisub
icebp
stos
outs
daa
shl
dec
scas
push
int3
xchg
nop
inc
test
pop
lods
(bad)
mov
test
(bad)
cmp
cmps
cmc
std
sahf
ds
cli
sub
fwait
pop
inc
stos
mov
or
int
ja
push
pop
fcom
mov
jecxz
mov
adc
cmps
add
cmp
jle
pop
mov
pop
jae
adc
out
xor
push
scas
add
push
cmp
add
adc
pop
movs
ret
cmps
cmp
inc
mov
(bad)
rcl
mov
jo
sahf
jno
(bad)
cmp
cmp
pop
xchg
inc
ror
and
mov
ss
lds
inc
lea
jne
cmp
xor
or
and
fwait
loopne
and
daa
dec
cmp
(bad)
in
adc
push
mov
jl
pop
loopne
xor
int
and
(bad)
test
les
aad
hlt
xchg
test
les
pop
fld
push
dec
mov
loop
test
outs
sahf
ds
or
or
iret
retf
inc
sub
movs
jno
inc
and
xchg
inc
inc
or
xor
sbb
jae
aad
pop
aam
(bad)
inc
loope
adc
ja
adc
push
mov
cmp
fidivr
jmp
adc
sti
cmp
cld
js
or
dec
lods
sub
(bad)
aas
xor
or
out
repnz
xchg
sbb
sub
adc
cld
cmps
sbb
cmp
mov
cdq
adc
xchg
arpl
ss
gs
adc
out
jae
jnp
pop
pusha
aam
int
addr16
push
add
ins
mov
icebp
dec
mov
ret
sub
adc
ret
cmc
fs
int3
movs
jns
and
out
add
xor
jmp
hlt
pushf
loope
mov
mov
xor
cmp
dec
sbb
ja
and
xchg
fsub
into
rol
fwait
jae
pop
or
push
sbb
movs
inc
pop
mov
es
pusha
ror
jmp
or
(bad)
jnp
and
mov
or
mov
adc
outs
cli
(bad)
int3
inc
xchg
lock
pop
les
jge
jle
xlat
mov
adc
js
addr16
xchg
pop
mov
cmp
dec
adc
stc
sub
int
pushf
dec
shr
aad
pop
push
adc
cli
jle
popf
pop
sub
xchg
(bad)
(bad)
lods
jl
out
mov
pop
loope
pusha
xchg
pop
cmp
or
popf
mov
jp
push
movs
pusha
xchg
mov
push
arpl
add
aad
mov
or
hlt
fisttp
scas
lods
in
cmps
pop
adc
push
mov
nop
push
stc
sub
add
jl
mov
call
sbb
xchg
into
push
mov
jbe
add
imul
(bad)
mov
pop
add
mov
sub
popf
jle
loopne
hlt
sbb
clc
jns
hlt
jge
cmp
popf
int
mov
push
sub
out
(bad)
in
sbb
int3
add
adc
les
sub
loopne
stc
mov
dec
adc
pop
inc
dec
xchg
int
pushf
xchg
ror
sbb
add
aas
jbe
jnp
xchg
xchg
sbb
out
cwde
mov
mov
call
daa
cmps
add
sbb
mov
cmp
jbe
mov
bound
std
inc
cmp
inc
stc
xchg
js
retf
adc
iret
test
mov
push
pusha
inc
add
xchg
fisubr
pop
inc
test
aad
leave
ins
push
sub
cmp
sar
mov
retf
mov
mov
jp
mov
sub
xor
cmps
adc
sub
dec
sbb
aam
adc
jge
sub
in
or
mov
daa
mov
iret
les
ins
in
cmp
pop
mov
popa
jp
aas
mov
or
mov
xor
xchg
pusha
adc
je
add
lods
mov
add
fst
pop
inc
js
daa
or
ja
loopne
std
jns
test
mov
ret
ds
or
pusha
ins
pop
cwde
inc
js
pop
stos
pop
(bad)
xchg
or
(bad)
mov
sub
fcomp
imul
scas
jle
mov
push
(bad)
js
mov
nop
xchg
sub
jne
or
xor
fistp
xchg
mov
call
sub
addr16
jle
daa
call
push
arpl
in
xchg
cmp
mov
inc
and
mov
dec
pop
and
cmp
fdiv
lock
cmp
adc
cmp
pushf
and
push
das
adc
fcom
cmp
add
mov
aad
dec
test
out
sti
(bad)
cmp
jmp
and
(bad)
cli
repnz
mov
push
and
pushf
pop
and
push
(bad)
ins
push
call
dec
mov
je
xchg
mov
adc
xchg
add
rcr
idiv
aas
inc
stos
sub
xor
icebp
or
cmp
nop
and
retf
mov
sar
inc
(bad)
and
add
daa
inc
repz
sbb
cmc
cmps
fsubp
mov
lea
stos
mov
jne
adc
aas
(bad)
or
mov
jge
xchg
ret
movs
lahf
push
aam
out
jbe
movs
test
adc
ja
or
js
dec
ja
(bad)
pop
sahf
lds
mov
call
mov
sti
mov
sar
cmp
mov
outs
pop
aam
mov
sbb
cmp
sub
in
div
sub
add
and
lock
mov
stos
mov
js
push
jne
call
xlat
xlat
sbb
aad
aam
outs
or
push
xchg
es
call
sub
mov
aad
mov
cmps
sahf
mov
es
jnp
inc
add
scas
les
mov
aam
arpl
dec
or
sub
push
cs
or
jge
jp
ret
sbb
aaa
sub
stos
add
add
clc
xchg
fsubr
mov
sbb
leave
cmps
sbb
inc
fcomp
jnp
mov
das
or
outs
xor
cmp
test
pop
cld
add
push
imul
or
push
loop
push
lods
jl
fdivr
sbb
add
sub
sbb
inc
or
ss
sbb
mov
push
test
sub
cwde
mov
mov
xchg
dec
aas
sar
jecxz
sbb
inc
xchg
jne
in
stos
ins
mov
mov
cmp
jge
cmc
dec
push
add
inc
sub
jae
out
out
call
out
cmc
leave
pushf
(bad)
hlt
iret
stos
mov
into
retf
das
push
add
pusha
in
es
rcr
ficomp
pop
call
fisub
xchg
aas
scas
aas
inc
les
xor
or
enter
popa
fstp
pop
cmp
xor
ins
pushf
xor
daa
inc
movs
push
fcom
pop
aad
out
mov
sbb
fnstcw
cmc
push
int3
int3
lds
(bad)
mov
test
dec
shr
idiv
and
outs
add
data16
xor
and
aas
sub
popf
test
imul
je
mov
test
adc
gs
inc
cmc
push
jne
xchg
sub
stc
adc
jmp
mov
aad
xlat
cli
iret
xor
jo
and
lea
out
push
and
add
sub
dec
jbe
lods
sbb
and
xrelease
das
push
(bad)
jmp
dec
mov
stos
out
add
cmc
push
arpl
dec
inc
push
jmp
out
sbb
out
imul
hlt
movaps
mov
xchg
sub
mov
jae
mov
jmp
sub
jbe
mov
(bad)
cmp
outs
dec
data16
icebp
dec
mov
mov
or
aad
popf
pop
or
js
lea
bound
scas
mov
mov
stos
cmp
rol
and
fwait
loop
mov
pop
push
arpl
inc
mov
leave
fiadd
ret
neg
cmc
jnp
out
mov
aad
push
aaa
push
mov
and
cwde
fstp
xor
jne
pop
inc
aam
inc
jmp
push
mov
or
mov
push
or
arpl
mov
sbb
fisub
movs
push
dec
sub
adc
and
mov
mov
jp
mov
out
nop
cmps
stos
sub
mov
jae
and
or
or
and
arpl
lahf
push
jg
xor
jmp
xchg
or
cmp
aas
push
bnd
out
fadd
pop
fistp
xchg
xchg
ds
enter
outs
sbb
test
ret
mov
push
jge
xchg
inc
data16
and
fisttp
adc
js
sub
push
jmp
xor
mov
shl
dec
or
arpl
mov
cmps
xor
rol
sbb
jmp
mov
cmps
cmc
fistp
mov
cli
xor
(bad)
movs
pop
ins
xchg
adc
jnp
or
xchg
test
mov
ret
out
or
fwait
inc
into
sar
repz
push
hlt
xchg
inc
mov
loop
wbinvd
and
xor
mov
mov
in
adc
jne
cmps
inc
and
bound
mov
fiadd
and
out
test
lds
(bad)
mov
test
xchg
add
inc
mov
aad
jmp
icebp
mov
cmc
dec
test
clc
dec
or
sub
jg
in
inc
sbb
test
push
loope
cli
aaa
mov
mov
sub
jbe
out
call
jmp
mov
xchg
inc
inc
push
sbb
retf
cmps
pop
xor
(bad)
imul
or
add
dec
xor
mov
sub
xchg
dec
push
movs
jne
ins
jmp
jno
test
sub
xor
xchg
movs
xchg
call
mov
sub
inc
sub
test
add
inc
ret
sub
daa
or
aam
(bad)
and
sbb
and
xlat
bound
mov
fcomp
call
sti
cmc
(bad)
cmp
jmp
mov
push
push
pop
dec
inc
xor
out
mov
mov
jecxz
fild
or
hlt
adc
dec
dec
aad
dec
int3
pop
test
inc
leave
outs
add
and
ds
movs
imul
jecxz
mov
push
mov
or
or
outs
ds
into
(bad)
cld
push
movs
sbb
cwde
lods
fs
jl
push
jo
jae
(bad)
mov
stos
rcl
inc
add
push
dec
rcr
ret
fwait
push
mov
xchg
sbb
ins
lahf
add
stos
test
data16
and
xchg
(bad)
mov
icebp
cmp
cmp
leave
movs
aam
or
cmp
cs
ss
out
adc
jne
xchg
iret
xor
add
cmp
or
shr
adc
cs
sub
inc
sub
iret
dec
adc
shl
aam
aad
scas
cmps
jg
adc
paddusw
mov
jnp
xchg
fnsave
shl
pop
sub
mov
jno
repz
mov
jbe
test
xor
arpl
rcl
and
pop
jno
dec
or
mov
fidiv
in
push
(bad)
fs
in
psubb
cmps
mov
sar
mov
mov
scas
inc
repz
pop
ficomp
xor
or
jo
inc
ins
sar
nop
inc
push
mov
dec
ror
adc
fdivr
ins
in
or
retf
xlat
push
mov
mov
pusha
jge
and
retf
and
repz
cmp
and
push
imul
sub
mov
lock
into
mov
stos
retf
jno
repz
or
aad
jne
out
fwait
sbb
cmp
mov
push
and
pop
rol
sbb
jmp
(bad)
aas
aam
mov
add
xchg
pushf
or
out
adc
push
(bad)
dec
shl
dec
repz
jmp
stos
adc
cwde
or
push
(bad)
or
sub
ins
sub
leave
loope
dec
fwait
punpcklbw
retf
jnp
jge
imul
int
mov
pop
xchg
adc
xchg
ret
mov
add
jno
jo
cmps
retf
stos
repnz
adc
add
ins
mov
movs
sub
sub
xor
xchg
pop
xchg
fwait
pushf
sub
adc
fld
stos
fsubr
inc
dec
xor
pop
imul
inc
(bad)
lods
(bad)
jle
ret
xchg
call
lock
imul
dec
sub
mov
and
push
js
and
cmc
sbb
push
cmp
add
and
push
pop
xchg
jne
ss
fnstcw
fistp
int
sub
jecxz
(bad)
es
sbb
push
in
mov
sub
mov
jmp
xor
arpl
scas
mov
inc
imul
std
repz
xor
stc
mov
or
imul
inc
mov
xchg
stos
(bad)
scas
out
(bad)
(bad)
and
popf
ret
mov
int3
fcmovnbe
test
adc
cmovs
mov
push
xor
pop
jb
sub
dec
cmps
ret
pop
jae
sub
push
inc
lahf
jp
pop
mov
fadd
sbb
(bad)
sbb
jmp
jmp
ds
sbb
std
jg
mov
call
lea
mov
inc
test
adc
mov
add
out
das
xor
jg
ins
(bad)
pop
cmps
fld
jno
mov
mov
hlt
push
nop
xchg
inc
out
lods
fbld
sbb
loopne
pop
sti
cmp
pusha
jae
(bad)
sbb
inc
dec
dec
rcl
mov
or
adc
jmp
mov
mov
xor
cdq
xor
mov
in
into
out
retf
and
xor
movs
cld
stc
sub
mov
cld
dec
mov
jmp
inc
sbb
fnstenv
lods
mov
add
pop
xor
mov
nop
mov
(bad)
cmps
lds
inc
mov
mov
(bad)
(bad)
pushf
lods
jmp
sbb
test
pop
in
sbb
rcl
imul
jge
lahf
ins
test
or
retf
movs
sbb
dec
(bad)
inc
adc
push
xchg
scas
add
stos
xchg
push
jo
setbe
outs
fsubr
sbb
hlt
pushf
jne
add
mov
cmps
stos
cs
into
shr
mov
aaa
hlt
mov
adc
iretw
sub
dec
repz
sub
jne
xchg
pop
push
bound
in
in
push
mov
dec
call
push
call
or
lahf
adc
ret
hlt
xor
jecxz
aas
mul
adc
out
es
loope
mov
int
dec
xchg
ror
aam
pop
pushf
inc
out
xchg
mov
pop
inc
and
cmp
sbb
mov
setg
xor
mov
(bad)
loopne
jecxz
out
movs
mov
sbb
loope
rcr
cs
fild
push
inc
mov
test
sbb
push
jns
aas
push
push
adc
retf
inc
cmp
pop
icebp
or
outs
fcomp
cld
rcr
or
out
push
ret
imul
aaa
int
retf
retf
movs
in
inc
les
xchg
inc
pop
repnz
mov
pop
pop
sbb
push
sub
and
gs
ret
xchg
add
xchg
(bad)
fwait
adc
repnz
xchg
pop
stos
sub
out
sub
mov
stos
ins
mov
fidivr
out
and
cmp
xor
neg
pop
stos
ffreep
(bad)
push
stc
xor
mov
sbb
call
int
dec
nop
sub
nop
out
jmp
pop
aas
sub
into
mov
(bad)
mov
out
and
les
mov
xor
xchg
ror
sub
rol
mov
mov
into
mov
(bad)
cdq
movs
retf
pusha
popa
in
les
popa
pusha
rcr
shrd
shl
test
inc
adc
and
nop
xchg
mov
outs
mov
repnz
cmps
or
mov
pop
sub
es
push
aaa
push
xor
cdq
aas
imul
push
aas
pop
aam
mov
in
popa
(bad)
ins
cli
mov
mov
lods
sbb
cmp
int3
int3
jmp
iret
mov
stos
pop
clc
clc
(bad)
fadd
retf
ret
imul
ins
xor
sbb
in
jmp
add
xchg
or
sbb
xlat
fcom
outs
daa
dec
mov
ficom
ficomp
pop
inc
jbe
mov
pop
xor
fninit
fwait
stos
add
shl
dec
lea
mov
mov
fisttp
int3
test
cmps
sub
xchg
repz
retf
mov
fs
clc
mov
loopne
jmp
cwde
sbb
add
xlat
jmp
adc
mov
scas
lea
xchg
push
je
mov
xchg
jo
push
jp
call
push
mov
lods
out
cmps
call
mov
ss
push
pop
out
das
movs
ret
cld
jp
fisubr
(bad)
ret
arpl
lea
(bad)
aad
jno
xor
mov
rcr
xor
push
sub
fwait
jmp
adc
sti
int3
xchg
sub
arpl
aam
out
mov
stc
xor
and
add
cdq
sbb
adc
scas
add
clc
movs
push
lea
mov
call
retf
mov
jg
aam
xor
add
dec
mov
pop
pusha
mov
xchg
pop
xlat
xchg
push
inc
sbb
gs
adc
mov
and
xor
mov
scas
lods
push
mov
ror
rcr
test
aam
mov
inc
mov
xchg
out
push
call
mov
add
sbb
bound
xchg
adc
inc
add
mul
shr
fimul
hlt
pop
retf
loope
imul
push
mov
add
outs
xchg
mov
cwde
add
or
mov
mov
add
jg
idiv
pop
sbb
jg
and
les
jmp
out
cwde
inc
inc
loope
push
xchg
add
adc
mov
adc
mov
cs
and
push
sbb
mov
mov
(bad)
or
xor
jmp
pop
xor
es
ja
fs
mov
mov
sub
sub
inc
pusha
mov
arpl
mov
enter
or
scas
clc
cmp
call
or
pushf
or
mov
mov
daa
xchg
fild
adc
jg
sbb
mov
mov
push
jns
cmp
push
sbb
jmp
enter
push
stos
out
into
mov
je
push
lds
(bad)
pop
push
int3
rcl
int3
adc
pusha
push
jnp
xlat
js
adc
xor
stos
and
lock
js
fadd
fld
lods
sub
adc
imul
mov
icebp
pop
test
inc
cmp
or
aam
sbb
push
cmp
sub
inc
rol
scas
icebp
push
or
sbb
xchg
(bad)
xchg
mov
repnz
mov
xchg
cdq
sub
adc
mov
mov
inc
dec
adc
test
retf
jns
fisubr
dec
sub
mov
dec
mov
jp
bnd
xor
repz
repnz
(bad)
inc
test
mov
test
retfw
mov
aas
mov
nop
jle
cmp
jb
pop
sbb
mov
les
jno
dec
mov
jmp
mov
repz
dec
mov
fadd
in
enter
retf
sub
ss
pop
je
xchg
inc
jne
(bad)
imul
mov
jge
add
jae
adc
sbb
addr16
xor
inc
scas
out
mov
(bad)
mov
sbb
shl
inc
retf
sub
mov
lahf
pop
xchg
mov
pop
aas
inc
pop
mov
ret
sub
jae
push
mov
scas
jl
pop
pop
xchg
lea
test
fiadd
pusha
push
mov
push
sbb
test
stos
mov
push
cwde
imul
mov
rol
mov
(bad)
aam
inc
cmp
arpl
adc
sbb
mov
jmp
xor
dec
pop
lods
pop
test
outs
adc
fisttp
mov
pop
push
lea
(bad)
test
cld
cld
in
sbb
(bad)
scas
(bad)
into
xchg
mov
mov
aam
dec
adc
jp
and
pushf
icebp
and
xchg
sub
xchg
inc
leave
ret
pop
pop
mov
pop
(bad)
lods
aas
(bad)
mov
out
sub
or
push
and
arpl
enter
rcl
mov
call
in
jo
call
mov
lea
inc
mov
mov
sar
inc
pop
add
lock
clc
movs
lods
mov
sub
push
lods
out
pusha
out
sbb
int
gs
sub
popa
jl
mov
leave
pop
(bad)
mov
mov
mov
jno
jns
lea
jecxz
ja
or
add
sbb
sar
jle
push
mov
(bad)
into
lea
push
jmp
into
mov
cmp
mov
loope
retf
es
movs
hlt
dec
or
and
mov
sbb
call
les
push
int
arpl
jno
xchg
jp
push
push
mov
int
sub
mov
sbb
xchg
(bad)
push
push
das
jns
scas
stos
sbb
mov
gs
adc
popf
out
pop
(bad)
and
or
test
gs
pop
jb
mov
inc
mov
sti
mov
push
in
xchg
xor
stc
jl
jge
or
fidiv
or
loope
cli
pushf
shl
call
pop
xor
aad
jnp
or
xor
cmp
loopne
pop
shl
or
dec
leave
jno
cmc
inc
cmc
xor
inc
fidiv
js
movs
and
jno
jmp
into
repz
sbb
ret
mov
pop
cli
repz
lahf
(bad)
mov
mov
push
mov
out
cmp
inc
ins
je
xchg
jae
pop
mov
push
or
loop
pop
jl
pop
lods
push
inc
(bad)
stc
mov
xchg
cmc
fdiv
loope
in
dec
cmp
mov
xchg
scas
fucomi
lods
or
jmp
mov
xor
pop
lods
(bad)
xchg
add
push
ds
or
mov
adc
fnstenv
popa
and
adc
cmp
into
pop
in
retf
mov
movs
popa
pop
cs
mov
jge
push
inc
ror
ins
xchg
sbb
jns
mov
call
test
movs
cli
sbb
shr
rcr
push
push
add
push
inc
popa
test
outs
lods
icebp
gs
jl
jo
ja
mov
jb
jo
jae
(bad)
out
sub
add
lods
pop
pop
lds
fdiv
sub
mov
pop
js
gs
pop
or
mov
(bad)
dec
xor
call
loope
push
push
xor
xchg
push
add
mov
std
in
cmps
lock
out
adc
jmp
add
cmp
shl
mov
cmc
ficom
test
cmp
aad
lahf
inc
inc
inc
std
paddsb
call
push
adc
cmp
(bad)
jns
mov
cld
inc
sar
mov
mov
test
les
loope
xchg
(bad)
xchg
xlat
fild
fisubr
int3
pop
shl
movs
xor
add
mov
sbb
lods
lds
lahf
inc
add
sbb
test
(bad)
daa
inc
mov
xchg
cmc
shl
imul
fidiv
shl
lods
cli
add
lods
mov
cmps
mov
cwde
or
test
xor
push
nop
ret
push
ss
push
aas
push
mul
and
and
ret
cmp
cmp
call
jle
and
inc
push
jae
sbb
ins
xor
xchg
xchg
xor
cmp
or
sub
and
mov
mov
sbb
mov
sbb
jb
cmp
adc
fmul
dec
into
dec
js
hlt
lock
jmp
pop
dec
dec
stos
(bad)
bound
jmp
lock
pushf
ret
stc
loop
idiv
(bad)
jmp
enter
imul
adc
sbb
int
adc
mov
mov
pop
js
(bad)
call
popf
out
mov
cli
mov
jne
dec
leave
jne
sahf
pop
add
loop
lahf
les
sub
add
bound
fbstp
sar
retf
enter
adc
cli
adc
jecxz
aas
mov
jnp
add
pop
and
out
jmp
push
jno
inc
clc
fnstcw
xchg
sub
inc
sti
(bad)
mov
xchg
aaa
rol
adc
leave
test
dec
repnz
daa
add
fisubr
xor
cmps
jge
pushf
pop
add
daa
adc
push
mov
push
cmps
lods
dec
jae
xchg
add
stos
or
jge
out
in
push
adc
jb
push
dec
aam
pusha
test
mov
xor
enter
pop
mov
inc
fnstenv
jb
out
mov
pminub
and
fcmovnbe
sbb
mov
cli
pushf
loop
jecxz
test
nop
cdq
mov
mov
push
inc
xlat
out
fisub
mov
ins
and
mov
jne
in
test
in
data16
std
mov
call
icebp
nop
push
jecxz
scas
and
paddb
stc
rcl
pop
push
or
or
(bad)
and
push
cmp
xlat
outs
and
aad
popa
pop
in
inc
outs
outs
sar
mov
fwait
mov
xchg
daa
mov
pop
int3
call
jb
pop
cmp
cmc
in
or
and
lods
mov
test
stos
or
arpl
inc
adc
adc
pop
push
sahf
mov
push
mov
stc
shl
push
dec
sub
cld
push
in
push
push
(bad)
in
fwait
mov
call
test
aad
loopne
les
mov
movzx
lea
loope
cmps
dec
in
inc
cmp
sub
adc
(bad)
mov
div
call
(bad)
in
jmp
loop
inc
loope
sub
adc
call
add
(bad)
pop
je
int3
call
or
sub
aam
xchg
(bad)
lods
dec
sbb
and
leave
cdq
push
add
repz
sahf
inc
lahf
das
xchg
inc
outs
retf
ss
aas
mov
int
shr
push
aad
imul
jmp
jae
bound
mov
fdiv
xchg
bound
neg
add
and
xor
(bad)
(bad)
ds
jle
inc
mov
pop
pop
xor
stos
dec
push
pop
push
es
inc
push
(bad)
repz
jle
push
push
mov
out
sub
arpl
cmp
pop
mov
adc
inc
aas
imul
pop
fild
imul
sub
add
test
pusha
and
inc
xor
test
xchg
cmp
jne
sar
pop
cmp
addr16
add
ins
xchg
aam
sub
loopne
out
xor
mov
jbe
(bad)
push
idiv
xor
scas
xchg
add
mov
push
retf
js
cld
cmp
mov
pop
aad
add
cmp
dec
fistp
jle
add
push
int3
lock
jnp
or
(bad)
clc
enter
jbe
aas
aam
pop
les
cmp
add
sub
inc
mov
sbb
out
pop
fist
pop
add
das
stc
inc
lods
adc
xor
mov
lock
leave
sbb
das
jle
dec
pop
cmp
popa
(bad)
stc
cs
hlt
shl
test
fimul
div
fist
aam
jne
ja
pop
adc
mov
js
repnz
ror
shl
and
je
pop
outs
xor
sbb
imul
push
sub
jmp
push
mov
popa
or
sub
mov
add
mov
loop
ds
nop
sub
std
mov
adc
xchg
push
inc
sub
fwait
out
mov
mov
mov
adc
jb
jb
int3
cmp
jge
mov
mov
popa
dec
dec
stc
lds
icebp
enter
push
(bad)
stc
cmps
inc
retf
inc
jge
push
loop
jo
or
push
cmp
mov
mov
xchg
adc
std
inc
jnp
test
xchg
push
cwde
mov
clc
jo
aam
outs
fstp
jnp
ds
push
pusha
push
int3
mov
xchg
outs
aas
loopne
scas
cli
mov
shl
push
fadd
sbb
clc
pop
push
sbb
jp
push
or
xor
lock
or
ins
ja
pop
test
push
fst
inc
inc
mov
xor
mov
xor
push
fstp
mov
cmps
test
pop
mov
js
adc
mov
pop
imul
dec
add
push
shl
add
ja
test
(bad)
jns
and
dec
xchg
bts
movsx
add
cmps
add
aaa
in
add
sub
sub
adc
mov
jge
rol
ins
sbb
fadd
jle
frstor
movs
mov
and
xlat
lea
cmp
lock
addr16
or
dec
std
(bad)
jb
xlat
lds
ja
fdivr
shr
jb
cmps
out
loop
xchg
test
or
and
mov
adc
sub
in
mov
hlt
mov
stos
sub
popf
jb
scas
cmp
cdq
mov
xchg
(bad)
or
push
jo
push
adc
xchg
ins
and
and
mov
loopne
mov
retf
movs
lea
mov
cdq
xlat
adc
pop
jo
(bad)
mov
or
fild
repnz
adc
fist
mov
popf
or
pop
push
stc
(bad)
and
imul
jns
add
imul
sbb
jmp
pop
retf
data16
push
push
jecxz
push
das
bound
push
or
lock
rcr
retf
cs
push
mov
jne
pop
pop
jo
repz
(bad)
pop
or
enter
pushf
dec
xchg
test
cmps
(bad)
push
loop
fwait
mov
(bad)
(bad)
dec
test
cs
mov
ret
shl
test
std
xlat
jns
fdivr
stc
sub
add
inc
xchg
mov
mov
add
dec
ds
xchg
adc
add
cmp
jns
inc
nop
mov
fcomp
mov
scas
(bad)
ja
aam
dec
lahf
fild
push
cli
fistp
movs
pop
iret
mov
mov
jl
cmps
test
mov
outs
mov
int
inc
jmp
push
pusha
loope
loopne
cmp
sub
sub
jecxz
cmps
in
mov
xchg
rcl
mov
sar
ins
scas
adc
lods
test
fadd
and
xchg
fistp
xchg
xchg
(bad)
mov
bound
loopne
add
xor
rol
xchg
inc
fcomp
daa
pushf
fstp
fiadd
add
push
dec
xchg
scas
add
sub
fisub
push
xrelease
xchg
lock
fld
xor
ret
pop
dec
jecxz
les
(bad)
push
mov
js
xchg
shl
mov
jmp
inc
sub
int3
adc
jae
daa
mov
sbb
das
jg
stos
hlt
mov
pop
xor
pop
lock
shr
test
dec
shl
std
pop
and
out
push
and
add
jno
jp
sub
icebp
lea
push
dec
push
sbb
push
rol
(bad)
mov
cld
(bad)
sbb
pushf
jmp
xor
dec
jb
xlat
mov
push
cwde
test
and
cmp
push
mov
lahf
inc
data16
lods
push
sub
jbe
mov
js
pop
push
sbb
icebp
jmp
pusha
fld
(bad)
lds
jle
inc
int
push
and
add
or
cmp
pop
or
xchg
test
(bad)
fadd
add
xchg
repz
ins
dec
xor
or
inc
jmp
jg
test
xchg
scas
popa
sar
cdq
je
xor
movs
mov
adc
popa
mov
push
and
out
pusha
cmp
sub
or
aam
and
mov
sub
add
pop
fwait
cld
pop
ret
jecxz
mov
cmc
ror
jmp
cmc
imul
scas
mov
test
gs
sbb
dec
(bad)
cld
ss
mov
call
mov
repz
cmps
add
cwde
sub
adc
mov
jmp
fucom
mov
ins
fucom
int
iret
jne
mov
jmp
fcmovnb
retf
out
xor
jno
imul
fmul
mov
jl
mov
fisubr
nop
fwait
ja
fwait
test
adc
cmc
mov
(bad)
add
fild
jg
loope
push
fwait
cmp
imul
test
push
or
lea
loopne
fisubr
and
cs
or
lods
lds
mov
and
retf
cmp
dec
xor
mov
push
int
arpl
into
int
mov
enter
mov
in
push
fst
sbb
pop
(bad)
ds
shr
xchg
inc
test
retf
jae
or
cmps
icebp
push
adc
ror
out
nop
and
rcl
inc
inc
pop
(bad)
push
aas
sahf
mov
sbb
arpl
xchg
or
fidiv
inc
pop
data16
arpl
pop
and
cmps
jns
xor
adc
mov
rol
es
test
movs
dec
imul
dec
enter
iret
dec
hlt
mov
fdivr
daa
sti
pusha
sbb
cmps
jnp
inc
or
xchg
call
add
push
mov
adc
pop
lods
push
lds
mov
enter
fadd
movs
and
call
shr
(bad)
jge
out
inc
cdq
sbb
xchg
jns
lods
outs
idiv
fsub
push
push
dec
rcl
push
ds
jmp
fcomp
cmp
repz
and
fsub
mov
or
jge
push
add
sbb
sbb
rol
out
fmul
dec
mov
xor
outs
mov
lods
outs
(bad)
dec
fs
sub
das
adc
jmp
nop
push
jbe
test
sbb
popf
imul
lods
lds
or
frstor
inc
jne
jns
cmps
push
adc
lods
fdiv
jmp
pop
dec
mov
lahf
repz
mov
cmp
push
dec
jmp
mov
dec
rep
sbb
mov
push
fwait
xchg
scas
clc
bound
sbb
jle
pop
push
fisub
sub
jbe
jne
movs
or
fistp
test
xor
sub
loopne
loope
movs
fmul
(bad)
push
xlat
imul
loopne
lds
xchg
outs
jae
cmp
into
dec
fnsave
(bad)
adc
nop
jmp
sbb
scas
popa
push
sub
nop
adc
out
mov
lea
enter
fldenv
xlat
or
jb
fcmove
adc
mov
out
scas
addr16
xchg
xchg
jmp
icebp
inc
xchg
or
dec
dec
dec
imul
sub
push
or
es
mov
mov
mov
xchg
xchg
in
mov
mov
cmps
cmp
cmps
pop
cmp
fld
(bad)
out
xchg
ins
push
jmp
pop
and
pop
dec
lea
popa
xor
popa
in
enter
pop
pop
mov
aaa
in
xchg
or
imul
xor
xchg
(bad)
sbb
and
movs
dec
cs
test
out
jecxz
loope
lahf
inc
icebp
lods
sbb
daa
sub
ins
mov
cwde
mov
das
fwait
add
adc
sub
push
div
xor
xor
nop
pop
cmp
jne
inc
div
cmp
jg
je
(bad)
(bad)
push
add
jmp
jbe
and
xor
xchg
nop
les
dec
adc
and
out
popa
jo
int
ret
sub
xchg
(bad)
jo
test
imul
xor
hlt
sub
mov
or
stc
xchg
int
ss
jg
out
call
lahf
xchg
fcmovne
test
jne
(bad)
cmc
xor
ins
inc
xchg
js
cs
clc
xchg
cdq
jmp
aad
cmp
out
out
mov
or
xor
and
sar
gs
in
call
mov
jmp
push
in
push
hlt
cmp
test
mov
mov
ficom
out
lock
repnz
sti
mov
jmp
jmp
sbb
leave
popa
call
jno
(bad)
js
and
sbb
iret
xchg
or
addr16
xor
adc
sub
out
inc
pop
inc
bnd
repz
neg
jmp
or
jg
addr16
and
or
sbb
pusha
mov
xchg
outs
lea
xchg
into
push
clc
test
(bad)
aam
addr16
ds
adc
push
cmp
rcr
push
cwde
fwait
mov
mov
xor
mov
out
outs
jns
ins
repnz
(bad)
and
lea
jl
mov
cmp
cmps
mov
jne
cmc
push
pusha
out
push
inc
int3
clc
pop
add
stos
mov
and
jns
xchg
adc
push
data16
loop
inc
pop
std
xor
adc
ins
mov
cmp
mov
mov
adc
xchg
shl
scas
add
mov
pop
xlat
bound
mov
or
pop
push
(bad)
fcom
push
cmp
daa
add
mov
mov
cmp
mov
(bad)
pop
jo
imul
loop
dec
push
jle
pusha
sbb
add
dec
shl
fs
or
mov
sub
xchg
push
mov
cdq
dec
fwait
push
push
cli
xor
mov
test
hlt
fwait
or
inc
loope
fprem
xchg
mov
pusha
test
popf
imul
shl
jno
scas
inc
lds
into
int3
mov
xor
gs
aas
mov
loopne
aad
stos
pop
sub
fdiv
fwait
cmp
jo
mov
rcl
lock
sbb
sti
aaa
jnp
adc
call
scas
jne
sbb
std
push
fidivr
mov
add
jnp
into
dec
out
lods
jno
lea
das
xor
je
cdq
sbb
xchg
mov
iret
mov
jo
xlat
jo
mov
repz
loopne
or
mov
scas
in
sub
jge
xchg
dec
inc
mov
mov
test
mov
mov
(bad)
in
pop
and
lods
push
mov
inc
and
test
bound
sub
dec
aad
ins
jbe
fsubr
mov
sub
fld
aas
mov
in
fwait
push
mov
xchg
data16
pushf
cmp
shl
enter
shr
sub
push
sbb
mov
stc
fild
jmp
in
xchg
push
mov
ret
push
mov
cli
dec
sub
dec
or
cmp
xor
shr
aas
lods
lea
lea
nop
push
xor
push
in
ins
frstor
push
push
dec
or
sbb
inc
pmulhuw
or
(bad)
movs
out
jecxz
mov
aaa
sahf
rol
sbb
call
cmp
mov
add
cli
sar
push
ins
aas
adc
xchg
loope
ja
mov
stc
nop
loope
xor
lds
hlt
icebp
leave
jmp
js
push
sbb
lea
jle
push
ja
ins
imul
je
or
movs
mov
popa
xor
stc
jg
mov
aas
fist
dec
xor
push
(bad)
cld
xchg
sti
pop
and
cmp
(bad)
cmp
sub
inc
pop
jae
and
add
cmp
scas
jno
or
mov
xlat
adc
push
gs
cmps
mov
cmp
mov
mov
bound
xchg
clc
jmp
or
jl
and
cmp
ss
aaa
push
push
ficomp
(bad)
nop
sbb
into
sbb
push
dec
je
leave
mov
inc
push
sti
mov
pop
or
adc
or
mov
add
xchg
mov
(bad)
adc
popa
test
sahf
cld
push
dec
pop
in
(bad)
adc
fwait
in
sub
mov
adc
loop
mov
movs
ret
mov
popf
jno
xchg
bound
lahf
mov
dec
pop
mov
push
mov
stos
clc
mov
mov
iret
inc
mov
adc
jns
jecxz
pop
sub
hlt
adc
xchg
cmp
dec
inc
test
rcr
sahf
pop
je
mov
cld
cmp
in
call
or
mul
cmp
jne
icebp
stos
mov
adc
cdq
lods
jp
ror
mov
rcl
lock
xchg
jmp
inc
xchg
(bad)
adc
cmps
xchg
test
sub
aas
dec
in
inc
xchg
or
sub
mov
(bad)
push
add
mov
adc
and
adc
xor
and
movs
(bad)
clc
and
dec
fisttp
add
jbe
sbb
ins
call
imul
movs
mov
jae
jnp
ja
aam
xor
sar
cmp
rcl
scas
mov
dec
sub
add
inc
arpl
retf
pop
mov
(bad)
aam
mov
adc
xor
pop
outs
adc
in
mov
nop
jno
call
cmc
sub
xor
mov
mov
into
or
pop
lea
sbb
movs
(bad)
sub
ins
test
jae
pop
push
mov
mov
fsubrp
rol
push
mov
stc
out
dec
pop
xor
pop
xor
(bad)
ss
bound
dec
xchg
pop
ss
cdq
scas
xchg
ficomp
jns
dec
fdivrp
das
mov
jmp
xor
jae
dec
xchg
aam
push
and
es
jl
das
adc
ret
inc
inc
push
inc
ret
fidivr
sahf
cmp
cmp
sar
and
les
int3
adc
popf
sub
in
test
xchg
cs
mov
xchg
(bad)
jnp
popa
ds
sbb
push
push
inc
jg
nop
addr16
pop
scas
dec
mov
retf
movs
sbb
dec
stos
and
je
mov
pop
in
cld
je
mov
(bad)
je
fcmovne
out
mov
mov
test
xchg
out
or
inc
push
sub
xor
adc
push
out
push
lock
pop
test
icebp
nop
xchg
icebp
jle
mov
lahf
inc
mov
es
mov
xor
push
shl
arpl
mov
add
jp
ins
mov
fimul
pop
scas
fwait
movs
xchg
cmp
fwait
add
and
xor
push
inc
dec
adc
dec
outs
(bad)
cmc
jae
pslld
mov
ds
dec
and
or
mov
outs
dec
push
(bad)
or
pop
das
rcr
sub
leave
(bad)
mov
mov
sbb
xor
dec
dec
lods
cmc
cs
mov
or
movs
ds
jmp
addr16
movs
xchg
and
movs
sbb
lahf
lods
cmp
mov
jp
jae
inc
xchg
jecxz
les
fild
add
pop
in
pop
fwait
imul
sub
popa
test
or
adc
lods
(bad)
xchg
nop
mov
retf
mov
sub
push
push
add
ins
(bad)
cli
in
pop
ret
mov
fld
stos
add
jg
movs
iret
mov
ds
outs
cli
stos
push
adc
leave
(bad)
stc
add
nop
pop
xlat
cmp
sbb
cmp
pusha
xchg
mov
sbb
or
push
mov
mov
adc
jmp
js
pop
xchg
pop
mov
loop
mov
ficom
push
jo
xchg
fisttp
les
push
pop
add
adc
cmp
fwait
adc
nop
push
mov
cld
inc
xlat
xlat
pop
das
lods
call
xor
(bad)
jg
cmp
mov
in
stc
pop
test
das
inc
movs
aam
mov
sub
ins
lock
ins
push
mov
mov
or
ds
(bad)
mov
or
or
cmp
xchg
loope
push
aam
ss
leave
out
mov
lds
dec
dec
inc
sub
xchg
adc
or
fdiv
xor
and
mov
mov
dec
xor
add
aaa
fnsave
loope
aas
inc
mov
sub
dec
out
dec
mov
cdq
dec
ficomp
mov
into
mov
jb
scas
cmp
lea
ja
int3
jne
push
mov
aaa
push
sub
dec
aad
and
out
dec
std
or
pop
shl
in
clc
add
test
(bad)
stos
pop
cmc
add
lock
sub
xchg
je
jne
pop
mov
inc
adc
jo
int
repz
mov
hlt
sbb
sub
les
xor
mov
sub
mov
xor
shl
mov
mov
sar
push
(bad)
repnz
push
push
lods
cmp
push
je
or
jmp
and
ret
shl
add
imul
or
push
pop
push
fwait
xor
hlt
sub
aad
jl
mov
outs
pop
sbb
xchg
rcl
rol
jle
popa
inc
cld
pop
sar
nop
sub
pop
xchg
ins
xor
dec
cmp
imul
repz
cmp
popf
repz
das
rcl
cmp
retf
inc
jns
gs
cmp
add
popa
cdq
or
dec
fdiv
and
sbb
loop
push
cmps
les
mov
jp
sahf
dec
and
bound
push
push
sti
(bad)
mov
cs
sbb
fbstp
fs
push
jecxz
mov
(bad)
adc
pop
xor
imul
ss
inc
dec
sub
ss
push
vmulpd
jbe
cmps
dec
shl
fst
push
sbb
mov
aaa
(bad)
cli
push
dec
mov
jg
push
imul
pop
popa
outs
into
jge
push
gs
outs
sub
bound
fidiv
mov
jns
or
lods
pop
dec
iret
out
mov
jb
shl
xchg
xchg
(bad)
cmp
(bad)
and
movs
cwde
inc
jmp
icebp
cmp
and
dec
aad
adc
(bad)
jmp
push
sub
sub
xor
adc
popa
sbb
(bad)
cmovp
call
cmp
adc
and
dec
outs
pop
jae
xchg
and
jns
daa
inc
xor
xor
xchg
mov
(bad)
es
repz
mov
cmp
out
ror
and
sbb
mov
pop
lds
scas
and
dec
adc
lea
mov
and
xor
hlt
outs
daa
(bad)
push
pop
cmp
adc
jo
outs
loope
mov
xor
fst
sbb
bound
add
lock
cwde
jbe
pop
leave
js
xor
cwde
xchg
jecxz
jne
inc
sub
test
dec
scas
sub
jne
xor
lods
ins
(bad)
call
popf
inc
or
movs
sub
jne
je
movs
shl
jle
leave
test
test
inc
cli
daa
ss
xchg
push
mov
sbb
adc
cwde
mov
xor
jns
jle
jno
sbb
(bad)
cmp
dec
add
or
adc
std
sub
push
and
bound
(bad)
sub
sbb
push
int3
repnz
xor
dec
jle
push
mov
xchg
pop
sbb
mov
call
sbb
lods
mov
xlat
xor
adc
pop
cmps
movs
mov
or
jle
xor
call
inc
xchg
movs
hlt
cmp
pop
jmp
call
retf
je
inc
(bad)
outs
sar
rcr
cmp
xchg
inc
jb
mov
dec
shl
sub
les
scas
fistp
and
sub
(bad)
loope
sbb
mov
jmp
popf
push
pushf
mov
jecxz
call
pop
repz
mov
jp
mov
dec
pop
push
cmp
dec
jge
popf
pop
enter
cmp
out
jae
call
and
xor
lock
fs
jo
sub
mov
xor
jge
sbb
xor
xchg
pushf
mov
bound
gs
les
sub
test
jg
push
or
xchg
mov
inc
mov
int3
adc
inc
add
cwde
mul
mov
sub
int3
inc
dec
out
in
icebp
fsubr
stos
jae
in
jnp
push
jmp
test
mov
xlat
test
and
jnp
shl
lock
cmps
adc
or
xchg
inc
xor
dec
mov
loopne
mov
mov
fadd
sub
jp
add
adc
sahf
icebp
mov
push
test
mov
cmp
mov
int
dec
dec
xor
push
es
sub
sbb
cdq
stos
(bad)
push
push
jg
add
or
push
mov
push
(bad)
fs
mov
or
loope
daa
lds
not
imul
xor
sub
ret
jne
sar
add
aas
fistp
iret
sahf
xchg
pop
xchg
js
and
cwde
fiadd
outs
xchg
xor
xchg
dec
ins
pop
xor
add
pusha
fwait
adc
clc
clc
or
mov
fwait
test
push
sub
pop
js
sbb
xor
xchg
cwde
sbb
mov
(bad)
xlat
mov
dec
scas
pop
jne
xor
loop
test
imul
cmp
jl
hlt
stc
jns
mov
dec
stc
pop
pop
mov
dec
mov
dec
mov
and
add
pop
psubb
fmul
dec
mov
out
test
nop
into
jne
mov
in
xchg
sbb
push
mov
out
test
mov
and
add
neg
scas
jle
mov
mov
xor
stc
sbb
in
push
sbb
or
adc
sub
pop
push
mov
xor
jge
and
add
push
jl
xor
cmp
add
jns
movs
pop
ror
inc
sub
xchg
push
fwait
push
inc
iret
in
mov
movs
loop
jmp
mov
and
mov
mov
cmp
jmp
cmp
outs
sbb
and
jo
mov
and
sbb
xchg
daa
or
mov
out
popf
(bad)
cli
dec
mov
inc
dec
bound
lds
and
xchg
popa
add
add
mov
adc
std
shr
(bad)
or
cmps
cmps
push
xlat
lods
sbb
sahf
adc
dec
(bad)
fucom
adc
pop
cdq
push
and
test
(bad)
cmp
dec
dec
fcmovb
mov
add
sub
prefetch
or
xlat
das
mov
cmc
sbb
push
xor
fucom
je
bswap
test
jb
cs
jo
out
xor
es
push
shl
ss
fdivr
out
xchg
inc
retf
push
and
xor
or
push
int
icebp
stos
scas
sub
(bad)
pop
jmp
push
test
or
and
mov
inc
shl
mov
adc
je
cdq
fwait
icebp
fst
ja
xchg
pop
xor
push
in
sti
(bad)
jns
into
jecxz
pop
mov
mov
cmp
push
mov
fbld
add
xchg
or
call
sub
sbb
xor
imul
rcr
inc
pop
adc
cmp
clc
adc
mov
push
(bad)
xchg
sti
inc
retf
or
jno
int3
int
mov
lock
push
xchg
add
lea
lea
jb
fist
xor
fcomp
rol
or
sahf
adc
push
mov
addr16
nop
pop
dec
mov
loope
adc
cmp
scas
jo
movs
mov
cmp
inc
jl
add
cmp
xor
mov
jmp
(bad)
out
and
or
and
mov
cdq
pushf
sbb
mov
bound
fdivr
pop
mov
xchg
pop
mov
nop
mov
inc
loope
pop
xchg
call
mov
clc
das
jbe
fst
mov
push
sar
(bad)
mov
adc
shr
mov
xchg
sub
jecxz
jp
repnz
mov
fsub
mov
sub
pop
mov
jno
js
aad
call
rol
cmp
call
mov
or
push
stos
test
and
stos
ret
aam
out
adc
xchg
push
in
std
sbb
ja
sbb
push
xchg
sbb
xlat
adc
inc
ret
mov
into
sbb
and
arpl
idiv
sbb
les
test
pushf
cmovg
and
sub
xlat
sub
stc
iret
addr16
pop
sbb
jmp
and
mov
mov
adc
xor
cli
(bad)
fistp
cs
mov
xchg
xchg
cmp
scas
fisttp
cmp
add
xlat
(bad)
mov
sbb
push
cmp
pushf
mov
dec
loope
jmp
or
cmp
cmp
mov
mov
add
icebp
push
outs
(bad)
jg
jg
mov
mov
pcmpeqd
(bad)
sub
sahf
mov
loope
iret
add
adc
jbe
mov
pop
cmp
mov
mov
mov
out
int
xchg
push
enter
cmp
xchg
jb
aam
test
shl
jge
inc
inc
xor
and
xor
fmul
push
push
and
mov
xor
dec
loopne
idiv
adc
lahf
das
call
fbld
ret
sbb
pop
mov
arpl
inc
xchg
fwait
xchg
sub
out
movs
ds
fisubr
cmps
repz
add
add
into
xchg
and
xchg
mov
movs
arpl
mov
or
sbb
mov
(bad)
mov
(bad)
int3
add
push
ja
mov
sbb
xchg
cmp
mov
cmps
mov
(bad)
dec
jbe
mov
or
dec
push
or
(bad)
sahf
mov
cmp
jb
mov
sub
adc
mov
xchg
push
pop
cmp
lahf
dec
lea
inc
dec
inc
sub
sar
sub
push
push
ins
cwde
xchg
(bad)
mov
mov
cmp
popa
sub
cmp
stos
push
jae
(bad)
pop
pushf
add
or
or
test
push
ds
ss
(bad)
cs
sub
sub
aad
cmp
out
inc
movs
xchg
test
pop
(bad)
jnp
push
iret
mov
ds
xor
mov
push
mov
shl
sub
jecxz
or
(bad)
into
dec
jmp
pop
sti
imul
mov
mov
fcomip
xor
sbb
dec
jle
cmp
std
clc
fadd
cmp
add
jle
add
push
add
jne
aam
sbb
xchg
pop
and
lock
mov
fwait
pop
jmp
cmp
rol
or
mov
jl
clc
cmp
mov
xor
and
shl
push
pop
adc
cmp
add
lods
xchg
aad
fcomp
xor
xchg
shl
loop
inc
int3
pusha
retf
mov
pop
in
mov
hlt
rcr
and
mov
pop
fsub
arpl
ror
(bad)
out
sub
js
mov
xor
ja
adc
fcom
sbb
dec
test
pop
add
and
xchg
and
mov
jl
mov
jge
dec
add
cmp
adc
add
out
jns
lds
aam
icebp
movs
(bad)
push
sar
xchg
iret
outs
out
push
jle
sbb
add
loopne
and
ret
div
push
xlat
jg
adc
pushf
cmp
ins
out
retf
xchg
dec
test
stc
out
imul
out
stc
pushf
mov
mov
cmp
(bad)
ja
aas
dec
out
or
mov
sub
push
adc
stos
shr
test
jecxz
cmps
jge
add
push
cmp
mov
aam
pop
fiadd
cmc
pop
mov
inc
cmp
xor
aaa
popf
(bad)
mov
sub
ds
push
xchg
dec
(bad)
jmp
daa
pop
(bad)
sub
dec
lods
mov
in
loope
pop
test
mov
sub
push
dec
out
mov
loope
inc
bound
int
sbb
lods
lods
lds
cmps
hlt
mov
ret
pop
sbb
popaw
push
pusha
mov
dec
mov
fisttp
and
call
adc
lods
ss
ret
mov
dec
xlat
in
stos
sbb
cmp
add
pop
mov
push
movs
repz
movs
inc
add
repnz
push
cmp
int
je
cdq
mov
xchg
stc
adc
pop
mov
call
or
xchg
ss
mov
cwde
sbb
push
and
push
dec
sbb
mov
mov
push
neg
adc
dec
inc
movs
jns
imul
retf
sub
mov
je
(bad)
mov
jg
(bad)
test
test
fst
mov
call
xchg
xor
fadd
test
test
push
lds
sbb
cmp
sbb
cmp
cpuid
inc
mov
out
push
dec
cs
leave
aam
call
and
inc
mov
scas
xlat
inc
push
mov
in
xor
shl
or
es
mov
pushf
stc
jnp
imul
js
mov
sbb
dec
dec
pop
jns
shr
xor
adc
cmp
push
sub
adc
cmp
sbb
push
imul
aaa
mov
jno
add
ror
and
into
mov
sbb
sub
cli
or
repz
aad
sbb
dec
xchg
jb
adc
cli
mov
jge
out
pop
xor
xchg
(bad)
jo
shl
jecxz
mov
push
jmp
push
inc
mov
cmp
aas
mov
popf
jb
mov
data16
xchg
aam
dec
sbb
(bad)
pop
ja
mov
add
jecxz
(bad)
(bad)
les
imul
aam
add
mov
bound
sbb
jg
sub
dec
xchg
jmp
dec
add
lahf
mov
repnz
cmp
cwde
sub
add
sbb
pop
pop
add
js
xlat
lea
push
ret
dec
and
xchg
jge
cli
xor
hlt
addr16
stos
clc
stos
cdq
cmp
repz
xchg
xchg
jo
xor
hlt
and
xchg
lahf
out
loop
and
cmps
xchg
cmp
sbb
scas
mov
sbb
cli
mov
sbb
jmp
inc
xchg
inc
inc
mov
(bad)
cdq
bound
push
jae
push
fisttp
and
(bad)
xchg
ins
sub
cmps
dec
shl
mov
jo
loope
or
stos
imul
das
mov
loope
mov
test
pop
popf
mov
or
lds
push
cmp
aaa
hlt
push
push
xor
sub
lods
sar
xor
mov
xchg
push
or
imul
addr16
fisubr
in
lds
xchg
hlt
shl
mov
xchg
test
nop
jne
test
cdq
jo
xor
sub
daa
jp
stos
lods
mov
dec
out
in
aaa
xchg
push
dec
call
pop
aaa
sub
push
js
rcl
mov
lds
push
movs
fucomp
jmp
repz
(bad)
cmp
test
sub
mov
adc
push
lahf
fstp
mov
or
mov
aaa
repnz
push
loopne
out
adc
shr
stos
(bad)
retf
ds
(bad)
pop
cmp
inc
in
add
push
cmc
sub
sbb
cmp
jmp
fistp
sbb
mov
nop
jne
xor
pusha
fwait
dec
push
aaa
add
icebp
adc
mov
and
adc
popa
jmp
test
outs
repz
scas
cmps
test
pop
dec
jno
repz
leave
dec
cmc
popa
dec
in
repz
out
dec
mov
add
int3
jae
pop
push
jg
stc
fmul
call
arpl
movs
ja
retf
es
es
jge
mov
call
out
pxor
fist
mov
push
pop
adc
mov
icebp
or
out
cmp
xchg
and
fwait
in
shl
lods
dec
ror
cmp
div
aad
into
out
in
mov
in
pop
xchg
dec
lock
cli
dec
test
sub
mov
cld
loop
push
imul
das
adc
pop
imul
jno
cmps
xlat
dec
ins
in
mov
push
lahf
pop
jae
and
pop
xor
or
mov
in
pop
aas
hlt
loop
les
data16
adc
rcl
xlat
pop
push
xchg
adc
cmps
or
bound
or
inc
push
cmp
(bad)
jp
push
aam
sbb
xchg
xchg
jae
daa
sub
push
push
push
mov
(bad)
xchg
movs
cdq
adc
mov
add
call
frstor
(bad)
outs
inc
dec
xchg
dec
lea
jae
rcl
lahf
cld
rcl
pop
jnp
jmp
out
add
fcomp
fnstsw
stos
repnz
inc
fistp
in
dec
imul
bound
adc
xchg
and
data16
sbb
push
ds
stos
or
ficomp
cmps
inc
out
in
call
sbb
mov
lds
je
loop
sub
sbb
xchg
in
sbb
les
in
ret
sbb
aad
mov
add
pop
xor
inc
ror
cli
movs
mov
sub
mov
loopne
sub
pushf
mov
in
and
jbe
cmp
(bad)
fld
jns
mov
adc
fcmovne
frstor
dec
inc
std
out
lods
mov
xor
fnstsw
fwait
pop
and
ret
ins
sbb
add
scas
fnclex
jp
in
push
movs
fs
and
jo
out
cld
call
xchg
add
js
mov
shl
lahf
jbe
repnz
xor
mov
cdq
sahf
sbb
test
ret
das
jecxz
out
mov
mov
jg
stos
push
lods
sub
mov
pop
cmc
aam
and
les
pop
clc
(bad)
push
mov
fwait
xor
sbb
push
fwait
or
add
outs
ficomp
sub
jns
push
dec
cwde
or
dec
aas
js
int3
into
and
fwait
jns
mov
sbb
mov
jecxz
or
pop
retf
cdq
mov
icebp
sbb
or
pop
sbb
and
jmp
ret
(bad)
(bad)
stc
aas
adc
outs
in
mov
dec
aaa
sbb
cmp
retf
pop
je
sbb
bound
xor
xor
pop
or
or
lea
test
pushf
or
sub
sub
lods
xlat
xchg
mov
cdq
test
mov
ja
pop
nop
xlat
arpl
dec
xor
push
push
pop
fcmovne
push
fldcw
(bad)
sti
out
dec
daa
scas
add
dec
into
aad
ror
imul
pop
cmps
dec
out
cdq
mov
and
aad
push
stos
stos
push
jne
shl
clc
xor
fcomip
in
xor
cmp
add
ds
cmp
shl
mov
mov
mov
push
loopne
xchg
arpl
add
pop
cwde
pop
test
movs
stos
xchg
jecxz
inc
jnp
xor
or
aad
adc
cmp
dec
paddusb
(bad)
pop
cmp
aas
push
push
mov
test
push
ds
mov
ss
mov
jmp
mov
push
inc
dec
test
test
in
imul
xchg
lods
je
inc
xchg
ins
dec
sbb
add
lock
add
mov
mov
mov
pop
arpl
scas
pop
(bad)
aas
leave
dec
sub
adc
jle
mov
retf
cmps
int3
mov
lock
sahf
cs
jae
daa
jo
pop
fndisi(8087
fidiv
xor
js
das
dec
cmp
push
dec
repnz
mov
or
cmps
mov
inc
dec
scas
mov
call
outs
xchg
fwait
add
push
add
and
sub
in
pop
scas
imul
fwait
and
mov
mov
dec
sub
jg
mov
adc
xlat
pop
or
push
ret
pop
nop
in
inc
rcl
jmp
push
and
push
pop
push
sti
popa
xchg
movs
dec
iret
stc
dec
inc
repz
repnz
cmp
mov
(bad)
add
sahf
sbb
sbb
pop
(bad)
xor
dec
aaa
cmp
jae
bound
ja
inc
iret
sub
mov
xor
xchg
mov
adc
dec
fs
and
push
jg
add
push
dec
dec
(bad)
fcomp
jae
fild
push
mov
std
fcomp
in
add
sahf
clc
dec
out
aas
mov
sahf
sub
out
es
cmps
lds
mov
lea
daa
mov
(bad)
lds
xchg
lahf
jno
mov
and
push
mov
xchg
sub
push
jbe
xor
fidiv
xlat
jae
call
and
inc
rol
push
or
mov
bound
jno
shr
pusha
movs
sar
push
out
mov
inc
imul
mov
pop
icebp
pop
pop
ret
(bad)
aam
sub
xor
pop
ins
sbb
jle
cdq
test
dec
or
cmp
(bad)
sbb
and
jle
(bad)
add
test
stos
imul
xchg
sbb
scas
sbb
cmps
ret
lods
into
sub
pop
repz
cmp
xor
lahf
cmp
in
mov
pop
pop
or
adc
xchg
dec
sub
fnop
test
sbb
iret
ss
push
sbb
xor
jns
rcr
jp
leave
test
(bad)
outs
dec
push
test
aas
xor
sub
(bad)
cs
mov
arpl
xor
mov
pop
fdiv
ror
out
push
xor
call
rol
inc
gs
fnstcw
xlat
push
fwait
jmp
fwait
pop
and
jmp
xor
add
mov
lahf
pop
scas
ret
inc
xlat
int
aas
daa
call
sbb
mov
enter
xchg
popf
nop
ds
int3
or
arpl
mov
sar
data16
ret
movs
jne
pusha
fldcw
dec
xchg
out
push
dec
lods
cmps
jne
mov
push
test
pop
stos
pop
ficomp
out
xor
int
lea
imul
adc
pop
cs
xlat
pop
xor
dec
or
adc
inc
clc
aam
ss
dec
int3
frstor
and
pop
add
or
push
push
xchg
add
mov
ror
push
out
mov
add
rcr
retf
push
aaa
mov
and
sti
lds
hlt
mov
fcmove
jno
cmc
cs
aad
mov
int
icebp
or
inc
retf
in
or
jecxz
dec
push
hlt
adc
jne
arpl
sbb
pop
add
fst
mov
add
mov
dec
push
ss
sub
ret
leavew
or
in
xchg
adc
retf
test
out
nop
test
dec
loopne
adc
test
sbb
je
or
int
pop
out
int
loop
cmp
cmps
inc
jae
jecxz
(bad)
inc
jle
pop
test
adc
mov
retf
push
dec
adc
dec
adc
sbb
cmps
pop
add
out
and
mov
fsub
(bad)
mov
xchg
pop
lods
aaa
dec
mov
ins
xchg
pop
neg
xor
(bad)
cdq
xchg
iret
cwde
mul
aaa
rcr
adc
add
lods
push
cmp
inc
push
(bad)
or
inc
stos
je
dec
inc
jecxz
mov
adc
je
nop
in
mov
rcl
movs
(bad)
out
icebp
push
daa
dec
in
icebp
push
movs
retf
cmc
inc
and
test
outs
hlt
fisttp
shl
mov
(bad)
sbb
ret
ja
repnz
call
fdivr
ror
pop
imul
xchg
daa
dec
loop
push
rcr
mov
ret
in
out
add
iret
addr16
dec
mov
or
xchg
jge
pop
dec
test
xchg
repnz
clc
adc
lahf
push
xchg
xchg
dec
or
mov
fdivr
inc
fild
out
hlt
jl
xchg
icebp
sahf
or
jbe
pop
fidivr
jl
and
adc
imul
inc
iret
xor
test
jle
inc
inc
rol
in
add
aam
push
std
sub
and
xchg
movs
mov
inc
nop
cld
push
mov
in
in
xor
pop
(bad)
push
(bad)
in
and
xor
repnz
sbb
scas
mov
inc
dec
cli
pop
nop
mov
test
push
icebp
hlt
jbe
push
inc
repnz
fadd
outs
pop
test
mov
das
(bad)
jmp
xlat
jge
ret
jnp
xchg
jb
cmp
(bad)
in
add
ja
pop
push
outs
add
scas
mov
adc
retf
into
or
loope
int3
aaa
imul
outs
cwde
(bad)
clc
jne
retf
pusha
mov
shl
fwait
xlat
sbb
jge
sub
(bad)
mov
mov
scas
ins
stc
inc
scas
sbb
jbe
(bad)
mul
or
daa
or
push
lods
and
push
xchg
cli
push
sbb
push
pop
(bad)
inc
(bad)
xor
out
mov
inc
add
aas
or
out
mov
stos
add
sub
cmp
push
mov
or
jno
fcom
ret
loope
(bad)
xlat
fisttp
xlat
scas
nop
dec
xchg
movs
int
cmp
je
pushf
int3
mov
mov
mov
mov
cmp
ret
push
iret
adc
int
mov
add
xchg
leave
jne
js
xchg
sub
retf
jae
and
jg
mov
shl
fisttp
movs
outs
arpl
leave
xchg
call
std
shr
push
jl
(bad)
jnp
push
fincstp
xchg
div
(bad)
push
and
aam
in
outs
push
push
bound
gs
hlt
test
pop
or
cmp
adc
mov
pop
in
enter
or
(bad)
fwait
rcr
(bad)
or
aaa
jle
test
imul
mov
push
fidivr
add
sub
repz
mov
fsubr
mov
aad
js
cmp
dec
sbb
adc
cld
arpl
sub
lahf
push
pop
retf
push
mov
inc
inc
push
pop
push
push
cli
call
xchg
dec
add
aaa
outs
fdivr
push
push
jge
sub
jne
inc
in
and
mov
pop
sub
and
cmp
or
inc
fmul
pop
fnstcw
push
retf
test
xchg
pop
and
push
inc
scas
lahf
mov
mov
dec
sti
xor
(bad)
movs
pop
and
mov
pop
dec
rol
inc
xchg
xor
out
scas
jp
rcl
ja
mov
xchg
dec
iret
je
push
in
and
mov
mov
mov
ret
cmp
std
fs
clc
outs
(bad)
cmp
dec
add
dec
popf
pop
cwde
sub
push
adc
loope
jge
clc
test
out
push
dec
movs
push
aam
sbb
shl
cmp
call
shl
pop
push
xor
jmp
aaa
sub
and
xchg
cmp
push
ins
int3
sti
div
or
inc
add
jl
push
or
cld
fld
lock
mov
push
jns
push
in
cmp
push
sub
add
fst
push
gs
ins
fisub
jecxz
pushf
mov
(bad)
jnp
sar
nop
lahf
jb
mov
mov
mov
cmps
pop
xor
cmps
inc
add
add
popf
cwde
add
xor
and
hlt
dec
jo
add
mov
cmp
mov
mov
std
int
cmps
push
fstp
dec
retf
popf
and
mov
push
sbb
xchg
daa
fadd
(bad)
fnstcw
xchg
jmp
movs
jp
mov
mov
or
lahf
repnz
inc
cmps
stos
add
retf
xor
push
(bad)
es
movs
stos
or
addr16
imul
mov
gs
fstp
inc
mov
jl
mov
jmp
adc
mov
out
idiv
jge
fnstsw
retf
sub
ds
in
cli
gs
push
outs
enter
add
add
(bad)
mov
xchg
cmp
imul
retf
push
inc
jno
xabort
jnp
inc
and
mov
dec
dec
sbb
inc
leave
daa
mov
iret
sbb
push
jo
dec
or
mov
das
mov
ds
repnz
pop
repz
xor
imul
fdiv
inc
in
and
jl
push
rol
sub
jmp
call
jb
fsub
or
jmp
int
add
mov
stos
xchg
shr
jle
adc
inc
js
add
mov
arpl
or
stos
out
sub
test
add
add
xor
cmp
pop
aad
jmp
mov
enter
cmp
lock
in
jne
into
xchg
sub
or
add
cmp
or
xlat
sub
add
clc
cs
sub
mov
lock
sahf
xchg
ficomp
dec
mov
das
mov
cmp
sub
adc
jl
mov
neg
dec
mov
cmp
call
mov
iret
in
frstor
sub
lock
dec
and
pushf
ja
xor
ret
or
pop
test
inc
cli
(bad)
call
into
inc
push
retf
and
inc
dec
lods
cdq
pop
dec
and
loope
cmp
mov
out
jno
pop
sub
test
cmp
dec
mov
adc
xlat
aam
in
xchg
or
repz
jnp
push
mov
add
add
aaa
fldcw
xchg
inc
xchg
and
cs
std
jb
out
and
mov
jg
xor
cs
xlat
(bad)
mov
idiv
fist
xor
jmp
dec
cmps
call
das
(bad)
movs
cmps
outs
ret
clc
push
std
in
inc
cwde
mov
inc
mov
loope
or
push
sub
cs
das
iret
cmp
jcxz
inc
ins
daa
xor
xor
add
sub
sub
mov
adc
mov
in
imul
add
jmp
shl
or
imul
sub
cmp
cmps
jg
sub
cmps
sub
add
and
jecxz
pop
pop
and
sub
rcl
cmp
xor
repnz
sub
and
scas
leave
mov
shl
dec
sbb
popa
bound
mov
clc
cs
jmp
and
es
cli
push
scas
jae
cmp
mov
mov
mov
lods
inc
dec
or
jge
lods
rcr
inc
push
push
add
cmc
repz
ret
inc
nop
in
loop
sub
xchg
(bad)
lea
popa
mov
fmul
and
call
xchg
loope
cmp
out
loope
sbb
test
jns
mov
pop
sbb
out
loopne
jle
push
fist
enter
cmp
loopne
sub
aam
cdq
cld
mov
pop
dec
xchg
popf
or
add
test
jmp
cmp
rol
pop
ficom
and
(bad)
ins
push
adc
pop
lock
mov
mov
jmp
das
into
ds
cld
hlt
stc
pop
mov
sub
fcmovb
cmp
leave
fidiv
repz
icebp
fistp
pop
in
pop
cmp
es
in
rcr
xchg
push
add
dec
adc
call
or
and
push
cld
jb
(bad)
push
sbb
adc
push
cmps
mov
retf
sub
push
test
xlat
or
xor
jbe
xor
test
mov
add
(bad)
jmp
fisub
imul
repz
dec
xchg
sahf
mov
out
sbb
cmps
into
hlt
fsub
cmp
jo
cmc
fsub
mov
(bad)
daa
sar
sbb
inc
jno
or
into
retf
mov
cmp
pop
call
loope
push
push
jns
fcmovnu
(bad)
fisttp
push
int3
push
jmp
mov
xlat
xchg
jno
retf
ins
inc
iretw
imul
xor
dec
lds
pop
ficomp
sbb
xchg
fstp
ss
push
test
lock
mov
movs
repnz
ficomp
jecxz
pop
inc
test
and
mov
div
(bad)
cwde
fs
xor
push
push
or
pop
or
repnz
xchg
std
mov
daa
lods
push
enter
xchg
xor
cmp
pop
and
push
jle
and
jnp
and
rol
add
bound
lods
icebp
push
rol
repz
push
outs
inc
inc
pop
jl
call
lock
ja
es
pop
xchg
dec
hlt
mov
push
movs
adc
jbe
inc
push
and
pop
push
xchg
ret
into
inc
push
or
add
xchg
data16
add
mov
jp
test
nop
out
fst
enter
cmps
int
mov
fsub
(bad)
out
aas
xlat
call
lahf
xor
not
mov
cmps
es
cwde
stos
xchg
loope
aaa
sub
sar
js
mov
int3
dec
stos
jbe
fprem1
dec
mov
fistp
fld
add
faddp
dec
add
inc
mov
sbb
repnz
xor
packuswb
mov
fcom
inc
ds
push
mov
push
xor
mov
fmul
or
mov
mov
inc
xor
aam
adc
inc
sar
mov
and
pop
test
xor
int3
add
mov
sbb
ret
imul
jmp
ror
es
nop
push
push
xchg
fcmovu
cs
iret
pop
ficomp
mov
add
mov
jb
push
in
inc
repz
xor
lahf
stos
adc
mov
add
mov
mov
and
inc
dec
or
das
ss
jo
mov
add
cmp
inc
pop
sbb
push
pop
cmp
xor
mov
pop
sbb
jp
mov
mov
and
push
pusha
xor
jbe
test
and
mov
mov
ror
ins
mov
or
stos
(bad)
jae
push
adc
and
cmp
dec
ret
jns
dec
clc
call
repz
inc
fldenv
(bad)
push
pop
mov
lfs
sahf
or
xor
les
jmp
jns
rcl
into
shl
or
pop
add
imul
add
xor
popa
aam
pop
adc
(bad)
in
clc
pop
retf
jge
pusha
jae
xchg
sbb
enter
and
pop
ret
inc
rol
cmps
jecxz
inc
in
jl
jecxz
gs
push
xor
xor
xor
cwde
pop
inc
sbb
cmps
cli
pop
mov
dec
pushf
scas
dec
pop
sahf
push
imul
retf
xchg
jno
lds
mov
mov
cs
pop
outs
and
jge
push
ret
loop
adc
push
loop
jp
pop
call
mov
or
push
(bad)
fmul
mov
lea
ins
rcr
sub
sub
gs
jnp
mov
inc
out
push
dec
mov
popa
loopne
sahf
retf
jle
xchg
neg
xchg
sub
and
pusha
sahf
xchg
push
(bad)
aam
loope
jl
xor
(bad)
lahf
out
xchg
iret
xchg
dec
pop
adc
mov
test
fidiv
scas
ficomp
jmp
loop
add
fadd
ss
(bad)
in
sub
fbld
icebp
addr16
mov
adc
rol
repnz
mov
cmps
xchg
popa
(bad)
add
ret
mov
int3
jnp
adc
jbe
mov
dec
test
push
sub
out
stos
cmp
fidiv
push
pop
push
jge
xchg
sub
cs
cmp
retf
retf
mov
inc
icebp
and
imul
repz
(bad)
ror
push
iret
outs
shl
mov
pop
fadd
div
and
dec
movs
cld
pop
xchg
adc
ret
(bad)
out
iret
dec
ret
adc
iret
and
loopne
or
pop
jl
pop
pop
add
aad
mov
adc
out
dec
add
popf
xchg
mov
push
leave
xor
unpcklps
dec
xor
mov
and
iret
shl
add
push
sub
jge
push
(bad)
push
(bad)
aad
scas
cmp
into
mov
sbb
pop
xchg
fmul
loope
dec
cmp
push
sti
jb
retf
jb
jecxz
xchg
and
std
sub
adc
ja
jno
xchg
mov
out
add
outs
stc
add
icebp
xor
push
or
sbb
imul
push
xor
mov
aam
pop
nop
ds
mov
and
js
mov
ret
xchg
sbb
xor
adc
adc
push
mov
fcmovbe
dec
push
dec
call
(bad)
shr
sbb
push
adc
test
dec
cmp
xchg
adc
jp
jns
mov
popf
popf
mov
out
stc
lods
cmp
in
mov
inc
lock
and
test
sub
sub
inc
sbb
std
in
push
xchg
es
pop
pop
jge
xor
mov
xchg
outs
idiv
cmp
mov
jns
(bad)
test
sub
push
pop
outs
xchg
stos
or
retf
mov
and
ror
lods
cmp
xchg
xor
dec
aam
loopne
mov
sub
adc
push
push
cmp
sub
add
dec
sub
inc
inc
imul
lahf
push
(bad)
adc
sbb
xchg
xor
data16
inc
or
(bad)
fwait
inc
in
pop
(bad)
pop
(bad)
inc
(bad)
mov
out
cdq
or
xor
sbb
ds
fstp
add
sbb
mov
sub
mov
data16
pusha
add
push
sbb
lock
loope
(bad)
jae
in
fistp
imul
cmps
(bad)
bound
xor
hlt
push
adc
imul
adc
cmp
dec
and
icebp
in
test
mov
(bad)
cdq
lahf
push
push
pop
xchg
xlat
push
dec
sub
push
sbb
mov
sbb
pop
fs
fist
or
push
sub
shl
mov
sub
lea
mov
retf
nop
cwde
movs
push
xor
repnz
sub
pop
sar
loop
push
cld
and
shl
enter
xor
mov
jecxz
outs
mov
call
dec
je
idiv
in
call
hlt
sub
push
inc
push
les
in
push
in
pop
lods
push
rcr
jae
sbb
xor
cmp
ins
jp
xor
inc
xor
add
(bad)
pop
popa
and
push
mov
jl
sub
xor
cmp
add
mov
pusha
int3
inc
jae
mov
inc
adc
sub
adc
sub
fimul
xchg
push
and
mov
xchg
dec
jns
lods
ror
xor
sbb
outs
adc
xchg
cmp
cs
inc
mov
dec
hlt
xor
sub
dec
or
cli
mov
add
fbstp
pop
iret
movs
data16
test
mov
mov
test
lods
test
cs
outs
cmp
outs
pop
ror
jl
out
jmp
cdq
ss
pop
push
mov
and
sahf
movs
lea
dec
sbb
mov
lock
mov
sbb
and
(bad)
in
stc
or
or
pop
mul
push
pop
inc
xor
xchg
arpl
jl
dec
inc
and
or
test
imul
es
fisttp
shl
or
aad
call
push
pop
out
cmc
push
mov
lds
clc
adc
and
loopne
out
aas
ret
pop
int
sti
icebp
cmp
sbb
bound
jbe
cmp
dec
aaa
iret
sub
mov
mov
out
jmp
mov
(bad)
or
push
pop
(bad)
mov
add
xchg
stos
push
sub
popa
mov
ds
xchg
add
jae
sbb
jmp
call
dec
dec
cld
adc
or
sar
std
and
rcl
sti
pop
xchg
pop
inc
cmp
stc
aas
stos
mov
xchg
mov
adc
cld
sub
push
pop
jge
sub
pushf
scas
pop
sub
xlat
jmp
add
iret
push
inc
ret
dec
test
loop
mov
ds
iret
mov
cmp
jp
cmp
mov
dec
adc
jae
test
test
sahf
push
call
(bad)
clc
jnp
mov
out
push
daa
inc
ds
sahf
outs
push
mov
and
(bad)
out
mov
add
call
jp
mov
aad
les
(bad)
jg
mov
fdiv
mov
(bad)
ins
xlat
dec
dec
enter
xor
outs
pop
cmp
jbe
and
aaa
hlt
dec
add
cli
loop
nop
jno
bswap
jmp
inc
pop
test
jne
mov
jmp
enter
aas
xor
nop
push
jle
and
add
fidivr
cmp
fld
sbb
out
test
xchg
mov
dec
pop
jmp
or
mov
push
clc
(bad)
mov
dec
shr
mov
icebp
jecxz
mov
jge
call
nop
sub
in
add
sbb
aam
push
jns
inc
xchg
rol
retf
clc
cmps
js
or
xor
arpl
ret
stc
call
or
lods
dec
inc
movs
add
(bad)
mov
jp
outs
add
mov
and
ins
(bad)
dec
outs
arpl
repnz
fwait
imul
or
daa
icebp
mov
iret
push
movs
dec
push
push
rcl
(bad)
jmp
inc
xchg
cs
or
loop
adc
loopne
daa
dec
or
stc
xchg
mov
and
stos
pop
(bad)
add
es
cdq
jae
push
cli
or
(bad)
ds
push
inc
ror
push
mov
ds
imul
mov
bound
ins
pop
inc
fwait
les
sar
popa
jns
or
cmp
jne
jo
test
fst
mov
ins
das
js
push
(bad)
dec
rcl
scas
fwait
imul
sbb
add
loop
sub
mov
shl
cmp
mov
pop
hlt
xlat
push
adc
aas
test
dec
mov
cwde
fisttp
push
jge
fild
leave
jo
and
xor
dec
adc
sahf
cmp
mov
push
mov
pop
push
mov
out
cmps
add
xor
das
(bad)
xchg
push
sbb
push
sbb
fsub
movs
cli
dec
inc
inc
cmp
push
mov
or
fs
xchg
pop
stos
je
retf
mov
fcom
dec
xchg
lods
mov
mul
xor
popf
dec
lds
and
add
mov
and
or
outs
xor
iret
sub
nop
sbb
int3
push
cs
jb
sub
fnsave
js
cmp
sti
add
(bad)
cs
ror
ss
xor
xor
shr
or
jmp
xor
pop
and
lods
rcr
or
mov
and
shl
in
xchg
popa
jp
sti
jo
add
dec
pop
jb
xchg
loop
jb
xchg
out
and
jnp
in
push
dec
je
(bad)
adc
into
cdq
sbb
rcr
in
mov
(bad)
rcl
and
call
movs
ins
and
cmp
mov
add
jmp
adc
xchg
cwde
push
(bad)
arpl
jb
mov
sub
lds
pcmpgtd
mov
pop
(bad)
iret
(bad)
dec
pop
in
pop
jle
xor
dec
pop
retf
test
pop
arpl
adc
adc
jmp
add
jecxz
pusha
push
mov
dec
pop
fbstp
xchg
adc
or
test
dec
pop
and
dec
sub
and
pop
stos
imul
nop
das
jbe
pop
jle
in
and
test
adc
xor
mov
icebp
mov
movs
push
pop
js
push
push
dec
add
add
or
stos
gs
loopne
push
pusha
ror
addr16
xor
jne
mov
mov
dec
lods
pop
mov
jg
fsubr
pushf
and
aaa
jns
mov
mov
push
add
shl
push
cmc
ins
mov
push
and
push
push
sub
or
rcl
cmp
(bad)
lock
adc
stc
test
cdq
pop
movs
push
dec
aam
cmp
call
call
call
popf
mov
(bad)
xchg
cmp
xor
cmps
movs
inc
cmp
jle
push
pop
mov
jp
cmp
into
xchg
in
fistp
adc
cmps
xlat
mov
mov
fucompp
jns
imul
and
xchg
and
test
sub
(bad)
(bad)
out
dec
int3
sti
daa
adc
scas
mov
(bad)
jnp
mov
sub
cli
adc
das
cdq
mov
das
xchg
cwde
sub
add
push
lods
pop
rol
mov
xlat
ss
inc
xor
in
mov
or
pop
iret
jge
ror
push
push
jbe
inc
mov
jb
sbb
cld
lahf
paddw
dec
aad
mov
punpckhwd
adc
or
mov
and
fdiv
dec
ds
push
add
mov
test
inc
cmp
bound
loop
jle
inc
cwde
je
fld
repnz
lock
int3
test
mov
data16
jg
enter
mov
shr
mov
rcr
loop
push
push
push
jmp
ret
cmp
or
and
mov
call
call
inc
dec
rol
xor
rcr
aas
dec
sub
ins
push
mov
icebp
push
scas
cmp
pop
ins
iret
sbb
xlat
xchg
pop
push
nop
ja
sbb
ins
ret
dec
daa
aad
ret
xor
(bad)
(bad)
jne
ins
and
or
std
aas
int3
gs
pop
xchg
(bad)
cmc
add
xchg
or
or
xor
jmp
xlat
test
imul
sbb
fwait
sub
or
pop
sbb
xchg
ret
jle
stos
xchg
sub
ficom
mov
sbb
fldcw
fucomp
cwde
and
jne
lahf
xchg
mov
pop
fxam
out
(bad)
movs
shl
adc
cmps
enter
pop
sub
lock
bnd
adc
mov
jnp
cmp
dec
jge
ins
inc
jo
add
retf
cmp
jg
jmp
popf
(bad)
loop
mov
inc
sar
sbb
(bad)
out
mov
and
out
in
and
cmps
pusha
fidiv
sub
jnp
mov
xor
mov
por
mov
mov
(bad)
aaa
adc
jae
fistp
dec
mov
xlat
mov
xor
dec
std
adc
sub
clc
adc
adc
(bad)
mov
jle
adc
xchg
fldenv
push
and
(bad)
cmps
out
in
fs
xor
mov
ds
aaa
loope
enter
inc
data16
mov
popa
fwait
and
sub
mov
or
fwait
mov
test
(bad)
xlat
xchg
xor
loope
mov
repnz
add
lods
pop
cmp
mov
loopne
scas
and
cmp
push
daa
imul
dec
cmp
not
fild
scas
repz
dec
(bad)
aad
ins
xchg
xor
add
xchg
xor
rol
jecxz
neg
adc
pop
(bad)
stos
test
imul
cwde
and
dec
icebp
add
sub
iret
ds
xor
mov
push
push
pusha
aam
fwait
mov
add
mov
popa
adc
lods
(bad)
out
sbb
mov
aam
aaa
jge
in
inc
test
in
adc
iret
sbb
popa
sahf
xchg
call
inc
or
push
mov
rcl
xor
lock
pop
pop
sar
or
enter
inc
dec
inc
mov
mov
cmps
cmp
cmp
cmp
pop
lods
push
xchg
(bad)
mul
cmp
xchg
test
jge
sub
sub
sub
xor
xchg
sbb
call
fsub
jg
sub
cdq
xor
stos
in
inc
in
lods
inc
adc
sar
sub
mov
mov
ins
push
adc
jmp
sub
inc
into
jg
es
data16
add
scas
loop
aad
mov
inc
into
cmp
sbb
loop
pushf
cli
add
and
pop
and
jecxz
jmp
and
popf
push
out
add
mov
mov
and
out
mov
int3
xlat
ins
icebp
push
data16
jbe
mov
add
scas
dec
in
xchg
lds
sub
or
icebp
push
xor
fcomip
test
add
rcr
mov
inc
or
imul
cmp
not
cmp
rcr
fcomp
int3
mov
and
and
jne
mov
xor
pop
rol
push
cmps
mov
sub
adc
jne
out
jns
or
cmps
adc
std
jl
adc
shl
pop
pop
and
inc
cdq
in
mov
call
adc
es
ins
fist
adc
jb
es
pop
call
stos
sar
aaa
cvtps2pd
jb
fdivr
push
pop
outs
test
mov
jo
inc
sbb
out
(bad)
adc
outs
pusha
inc
sti
mov
out
mov
jns
stc
cmp
movs
pop
(bad)
fstp
or
arpl
cwde
jnp
int3
int3
rcl
outs
add
aas
aam
adc
jmp
icebp
cmps
sti
ret
lock
fsub
xchg
mov
cmp
aam
xchg
adc
xchg
mov
pushf
test
jecxz
cmp
jbe
fld
inc
or
xchg
mov
outs
lods
xor
mov
nop
xchg
pop
lds
in
add
add
stc
pop
in
push
in
xchg
mov
es
fwait
mov
mov
push
in
ret
and
adc
je
imul
push
movs
mov
and
fnstenv
mov
sub
jg
pop
addr16
(bad)
cld
pop
icebp
cld
jb
sbb
mov
mov
xlat
mov
out
sbb
cmc
nop
pop
mov
mov
jne
dec
cwde
and
pop
sahf
nop
retf
inc
sub
ss
shl
pop
lock
aaa
mov
retf
retf
cmp
mov
loop
int
add
loop
add
pop
cli
lea
mov
in
adc
loopne
lea
inc
rcl
fucom
js
pop
push
fs
xlat
add
push
icebp
xchg
bound
mov
les
push
data16
mov
dec
pushf
jnp
dec
fsubr
out
adc
push
fdivr
inc
call
outs
sbb
jge
xlat
add
ja
cmp
push
out
outs
popa
add
or
ficomp
imul
(bad)
sub
and
xchg
ret
inc
(bad)
add
fwait
je
int3
lods
ins
pusha
fwait
mov
idiv
loop
fld
(bad)
popf
fldz
dec
add
in
aas
fdiv
jbe
xor
fidivr
in
jecxz
xchg
pop
cmp
cdq
jp
call
adc
xchg
sbb
inc
sbb
xchg
cli
sahf
dec
push
mov
sub
(bad)
adc
aaa
push
or
dec
pop
or
xchg
cmp
pop
and
arpl
mov
sbb
xor
xor
sbb
push
adc
and
or
aaa
popa
pop
mov
jbe
sub
xor
lds
adc
ror
mov
mov
jne
out
loop
stc
pop
or
jmp
fdiv
hlt
adc
test
rcl
jnp
test
inc
(bad)
repz
ret
ja
leave
pop
jmp
pop
lds
adc
out
cmp
fsubr
or
xchg
enter
push
pushf
mov
leave
add
test
or
mov
stos
xor
ret
inc
repz
fstp
fwait
and
pop
inc
std
test
pop
in
(bad)
in
lods
add
aaa
cmp
mov
sti
add
lods
pusha
cmp
mov
loope
push
out
ins
xchg
jbe
add
mov
xchg
dec
pop
mov
ins
dec
jg
sti
fiadd
dec
aad
jg
mov
and
or
test
xor
aaa
mov
mov
mov
das
mov
xor
(bad)
dec
je
mov
sub
ins
dec
call
xor
lock
lods
add
pop
ficom
dec
mov
xchg
pop
or
loope
jl
lock
mov
scas
arpl
mov
mov
lahf
movs
mov
daa
cdq
jecxz
mov
pushf
sti
jmp
(bad)
mov
in
xchg
rcl
scas
push
(bad)
aaa
mov
or
mov
pop
popf
push
sbb
xchg
and
mov
lds
cwde
push
out
push
mov
mov
lods
adc
lea
push
ret
in
xchg
dec
jb
pop
mov
xor
lds
dec
sbb
push
xchg
retf
jno
xor
xchg
sub
daa
jle
push
xchg
nop
scas
or
adc
adc
scas
push
sub
(bad)
aas
adc
mov
cwde
stc
lock
push
retf
pop
repnz
(bad)
sub
int3
mov
cmps
imul
rol
dec
xor
push
dec
jnp
push
mov
or
inc
cli
arpl
jmp
sbb
xor
mov
xchg
lea
push
es
fcmove
les
mov
in
inc
(bad)
xor
daa
dec
push
cwde
xchg
pop
mov
cmps
frstor
retf
scas
push
lods
adc
(bad)
scas
aad
fs
or
call
es
pop
xor
leave
cmps
lods
ret
gs
(bad)
mov
mov
es
xchg
(bad)
outs
retf
shl
mov
and
in
mov
addr16
daa
hlt
add
mov
cmp
retf
or
xchg
test
inc
ret
and
lock
mov
cmp
pop
pop
std
lea
das
adc
rcr
adc
cmp
add
pop
popa
outs
jmp
mov
ins
lds
mov
mov
out
movs
sahf
fild
xor
ror
sbb
(bad)
add
gs
jnp
inc
xor
adc
and
cdq
add
vmread
cwde
add
xor
scas
sar
out
add
dec
or
imul
add
push
mov
sar
sbb
sbb
ret
lds
sub
ins
sub
and
setle
sbb
and
retf
fcmovbe
ret
inc
cmp
fwait
sahf
xchg
out
xchg
pop
push
xor
mov
add
mov
mov
ins
push
xor
(bad)
cmp
out
sbb
mov
test
xlat
loop
pop
jb
std
(bad)
outs
jle
jo
fmul
retf
xor
out
dec
jle
push
or
popa
jo
pop
mov
pop
mov
push
bound
and
popf
sub
(bad)
sbb
push
in
bound
push
and
mov
pop
push
loope
xchg
adc
ret
mov
nop
sub
adc
std
cmps
sub
ja
ins
mov
fldenv
gs
add
mov
gs
push
dec
push
stos
or
lds
push
iret
ins
nop
shr
sbb
pusha
push
adc
mov
mov
rcl
xchg
ficom
(bad)
repz
dec
adc
loope
stc
scas
hlt
lock
adc
xor
inc
xchg
sti
mov
rcr
les
xchg
in
in
cmp
push
mov
in
dec
hlt
aad
lods
dec
mov
test
das
mov
sub
mov
in
fisttp
imul
pop
(bad)
popf
dec
push
jle
and
mov
xor
jg
jmp
cmp
lahf
call
sub
pop
and
(bad)
jmp
stc
test
cdq
mov
dec
adc
sub
dec
lods
mov
fst
adc
call
or
dec
inc
and
int
mov
fwait
sbb
nop
fcmovnbe
adc
mov
loop
push
jmp
test
stos
addr16
jno
lods
js
dec
mov
jmp
push
sub
mov
cmp
inc
cmps
(bad)
cs
xchg
sub
popa
gs
in
mov
dec
test
dec
mov
shl
aad
int3
ficomp
fistp
mov
daa
jge
and
xchg
movs
ret
cmps
les
leave
push
jge
inc
ret
ds
cmp
mov
je
mov
push
stos
jp
loopne
and
lahf
test
lock
xchg
repnz
loopne
jbe
fcmove
jne
sbb
mov
aaa
bnd
add
push
xchg
stc
jno
mov
cmp
shr
fs
cmp
jecxz
cmc
or
adc
fs
daa
mov
sub
movs
jecxz
pusha
mov
and
test
jp
ds
imul
push
sub
sahf
pop
pop
push
in
movs
jno
jb
lods
(bad)
jle
mov
mov
sahf
fmul
mov
sub
and
push
dec
outs
pop
mov
fist
xchg
je
dec
pusha
cmp
mov
rcl
jb
out
jge
cmp
mov
push
jae
je
jmp
jno
aam
imul
cwde
mov
xor
jg
test
(bad)
pop
xor
into
add
outs
aaa
mov
dec
xor
mov
adc
imul
add
mov
xor
pop
iret
cmp
cmp
jmp
fcomp
xchg
or
pop
pop
fsubr
es
dec
sub
cmp
cmp
and
nop
and
clc
pop
hlt
mov
(bad)
add
add
cmp
jg
outs
xor
cmp
and
mov
or
(bad)
jnp
push
sub
sbb
xor
jl
ss
popa
pusha
push
or
out
xor
lds
pop
jmp
lea
aad
and
jge
inc
arpl
add
call
arpl
outs
nop
std
sub
jno
push
aas
test
out
pop
push
es
xchg
xchg
jg
jbe
jmp
fild
(bad)
mov
fdiv
inc
add
inc
ja
es
push
jne
loope
aas
mov
int
and
std
gs
fld
pusha
lods
je
pop
(bad)
or
pop
in
lds
cmps
or
loopne
sbb
or
dec
sahf
ss
mov
push
push
ins
jo
jb
mov
push
rol
ss
dec
pop
mov
test
mov
inc
xor
mov
test
test
loope
addr16
nop
or
movs
fldcw
sub
bound
jno
stc
sbb
jb
pop
mov
dec
mov
xor
jbe
ins
fidiv
and
xchg
js
or
iret
xchg
inc
aas
dec
or
dec
cwde
mov
sub
and
dec
sbb
push
jle
inc
fidivr
adc
out
into
xor
mov
mov
test
out
jbe
int
sub
inc
psraw
dec
add
iret
sbb
in
mov
ficom
add
dec
inc
bound
inc
loop
std
or
mov
pushf
fld
fstp
call
and
sub
or
mov
into
cmp
add
icebp
dec
adc
aad
stc
pop
stos
dec
sar
aad
(bad)
popf
or
or
pop
xor
push
and
in
dec
inc
(bad)
gs
pop
add
out
stc
ins
dec
ror
or
pop
xor
neg
gs
adc
inc
out
data16
and
ins
int
inc
(bad)
mov
test
cs
div
out
imul
mov
push
aam
aad
mov
out
push
dec
fidiv
dec
jecxz
cmp
sub
out
shl
call
dec
xchg
lahf
icebp
or
shl
je
imul
sbb
xor
mov
out
dec
cmp
lods
ror
jp
mov
xchg
and
mov
rol
(bad)
icebp
test
test
jmp
iret
mov
mov
cmp
add
or
rol
add
sbb
imul
mov
cld
mov
push
inc
fwait
retf
xchg
sub
retf
repnz
jecxz
adc
nop
xor
xchg
ins
mul
dec
push
mov
popf
stos
xchg
jmp
jg
adc
test
xor
pop
repnz
and
cmp
jmp
push
push
jne
aad
movs
pop
mov
shr
or
inc
sbb
jbe
aam
sbb
cli
out
dec
jmp
pop
or
icebp
sbb
out
push
inc
stc
mov
data16
cmp
stc
xchg
jae
add
(bad)
jmp
jl
ret
out
add
mov
ss
jecxz
mov
add
jae
adc
in
pop
xor
icebp
pop
pop
push
enter
push
sbb
cmp
test
dec
int3
(bad)
or
inc
in
gs
popa
(bad)
adc
mov
and
push
add
outs
pop
xor
mov
mov
dec
cmps
jb
out
dec
neg
xchg
data16
(bad)
call
adc
cmps
into
xchg
mov
dec
jp
dec
sar
jae
jno
aad
mov
jl
imul
sbb
jbe
adc
push
add
cmp
cmc
push
xchg
push
push
mov
inc
(bad)
xchg
sbb
call
pop
loopne
test
mov
inc
xchg
(bad)
test
imul
xor
dec
loope
dec
cmp
test
scas
add
movs
push
push
or
mov
xchg
mov
pop
fistp
cmp
cli
call
jne
xchg
cdq
mov
jecxz
test
imul
mov
fist
cmps
push
test
mov
xchg
fwait
lahf
cli
push
fistp
inc
sbb
mov
add
inc
push
xchg
sub
jp
or
cmc
jae
out
movs
retf
adc
xchg
add
nop
fnsave
jo
pusha
popf
xlat
(bad)
fmul
aaa
and
scas
fxch
mov
jle
retf
ret
movs
imul
xchg
test
jp
rol
mov
int
mov
cmp
cmc
mov
adc
add
outs
mov
mov
sbb
push
dec
(bad)
mov
in
shl
cli
leave
xchg
adc
test
in
pusha
inc
das
and
lahf
test
cdq
ret
mov
fld
not
cli
js
push
sub
push
xchg
ins
mov
shl
hlt
jns
rol
push
fld
iret
sub
sti
int
nop
mov
add
les
in
imul
loopne
cmp
push
test
mov
xor
xchg
sbb
add
push
jecxz
out
mov
mov
dec
pop
inc
ins
stos
test
or
mov
inc
mov
mov
jge
call
or
std
xlat
mov
jmp
cmps
inc
and
pop
adc
imul
ret
popf
bound
lds
aam
lods
les
mov
cmc
xlat
xchg
ficom
stc
lds
push
(bad)
das
cmp
fmul
loope
hlt
push
cwde
adc
(bad)
retf
ins
jb
rcr
mov
mov
test
mov
pop
jp
fcmovnb
cmp
pop
xchg
mov
jge
xor
popf
mov
popa
cwde
out
push
sti
loopne
jne
pop
inc
cmp
adc
add
adc
and
jecxz
dec
scas
mov
and
fadd
fild
mov
daa
jmp
or
xchg
sub
xchg
data16
enter
sbb
add
xlat
sbb
dec
push
sbb
js
add
and
gs
sub
clc
shl
int3
xchg
cdq
ins
cbw
ret
mov
(bad)
lock
ds
sbb
js
mov
ret
mov
push
je
push
adc
(bad)
pop
cmc
mov
mov
jno
xchg
sub
ret
xchg
push
(bad)
(bad)
cmps
jecxz
cld
mov
cmp
xchg
inc
leave
sbb
pop
cmp
mov
test
add
xor
fistp
push
jecxz
int3
hlt
xor
xchg
or
in
aam
mov
in
test
nop
dec
rol
ss
pop
mov
movs
(bad)
sub
jb
in
dec
clc
adc
inc
sti
call
ficomp
inc
adc
and
clc
fwait
imul
ins
inc
adc
jge
inc
jl
bound
sub
dec
dec
je
daa
bound
shr
rol
dec
test
pop
sub
repz
xor
clc
fsubr
mov
or
loopne
pop
fidiv
lock
(bad)
xchg
push
mov
loop
pop
movs
dec
fsub
cmp
sub
jp
out
mov
pop
add
(bad)
mov
jp
xchg
sahf
lods
add
pop
mov
and
aaa
aam
hlt
add
push
aam
cli
test
push
sub
pop
add
xchg
adc
xchg
add
retf
test
sbb
(bad)
in
pop
std
and
push
bound
xor
lods
ja
xadd
out
or
push
mov
clc
mov
rol
aas
cmp
add
dec
sub
pushf
gs
sbb
sbb
out
(bad)
jmp
icebp
pop
sbb
ds
sub
dec
dec
mov
dec
pop
aas
push
and
pop
into
push
jno
add
lds
or
mov
mov
xchg
icebp
pop
mov
or
dec
push
and
imul
outs
cmp
int3
shl
adc
lea
dec
xchg
in
nop
sub
push
inc
jg
enter
mov
adc
xor
push
(bad)
ficomp
jg
shr
and
hlt
add
ficom
jmp
in
jns
xchg
sub
sub
jmp
icebp
inc
mov
outs
mov
call
sbb
jecxz
shr
push
pop
fiadd
lock
test
(bad)
aaa
cmp
inc
xor
ret
mov
iret
mov
in
in
arpl
push
push
lods
cmps
and
iret
popa
inc
popf
add
push
push
movs
sub
cmp
jl
enter
retf
aas
xor
popa
mov
mov
xchg
lea
data16
xor
sbb
xchg
sbb
sbb
push
push
jno
mov
or
ret
inc
nop
add
jne
jp
imul
push
pushf
loop
in
xor
jecxz
jl
mov
stos
mov
imul
popa
out
jno
lock
cmp
add
mov
xchg
jecxz
stos
cdq
push
jmp
inc
xor
mov
pop
xchg
cmp
and
sar
out
push
pop
in
call
les
pop
rcr
dec
mov
sbb
lea
pop
scas
push
imul
repnz
or
ja
lods
out
or
popf
add
or
std
mov
inc
mov
rol
dec
outs
loope
cdq
or
or
shl
in
sub
pushf
jno
in
xor
sub
adc
retf
cmp
push
jmp
and
ss
stc
add
ret
mov
inc
lds
xchg
xchg
ins
cmp
in
push
push
inc
sub
adc
cmc
adc
and
nop
in
jl
out
mov
add
(bad)
aas
pop
cmp
jnp
push
dec
xor
sbb
test
push
xchg
or
xchg
pusha
outs
mov
test
ja
inc
or
jo
sub
xor
and
inc
cwde
and
mov
adc
test
pop
pop
xchg
cld
inc
mov
push
cmp
jle
push
mov
ror
pop
retf
bound
adc
mov
adc
jg
and
push
lahf
or
fwait
and
stos
pop
loop
xor
xchg
jbe
push
cld
popa
scas
adc
in
jno
push
sbb
sub
icebp
jnp
in
push
sbb
fld
xor
loope
lea
push
out
and
push
pop
imul
scas
xchg
adc
xchg
ins
aas
dec
push
(bad)
mov
mov
push
xchg
cmp
add
outs
and
in
rol
jp
aas
int3
fucomi
je
es
push
mov
mov
jl
outs
xor
mov
and
inc
jno
sbb
outs
lods
pop
jg
sbb
movs
jbe
jge
cld
adc
pushf
lods
mov
pop
xchg
aad
aad
pop
iret
es
cs
into
test
inc
dec
imul
pop
lods
xor
push
cmp
xlat
fsub
int3
mov
xor
loop
pop
retf
cmp
sub
(bad)
lock
jnp
ret
mov
mov
fs
or
pushf
nop
xchg
rcl
add
fidiv
loop
cs
loop
xlat
xchg
adc
mov
jle
nop
inc
scas
ret
jg
dec
ret
cmc
gs
mov
or
dec
pop
xchg
and
add
add
in
jnp
xchg
sbb
mov
imul
(bad)
xchg
leave
xor
aas
fs
cmp
sub
aaa
sub
lods
jg
jg
lods
xchg
pop
hlt
or
mov
xchg
pop
bound
pop
loopne
adc
fstp
fnstenv
pop
xor
adc
push
ret
into
aas
mov
xor
xchg
arpl
ds
hlt
fst
push
and
lahf
in
bound
loopne
fidivr
cli
adc
mov
sbb
mov
or
stos
mov
xor
shl
in
pushf
jae
xchg
and
(bad)
adc
div
push
into
push
and
ss
jb
mov
loop
aas
aam
dec
stos
xchg
repnz
dec
pop
adc
cmp
or
sub
xor
aam
add
out
test
jns
push
lea
mov
retf
jmp
xchg
nop
dec
dec
int
jne
loopne
aaa
pusha
xor
and
cdq
cwde
fisttp
mov
data16
mov
jne
enter
adc
(bad)
cmp
out
dec
dec
and
mov
mov
cmp
and
test
jo
inc
mov
xlat
dec
fisttp
pop
jnp
pop
xor
pop
mov
sub
mov
gs
push
jno
xchg
pop
fdiv
xchg
cdq
stc
repnz
and
xor
(bad)
arpl
jnp
outs
sbb
cmp
out
rcl
fs
std
mov
push
js
and
add
pop
iret
lods
shl
xchg
cmp
les
mov
and
pop
lods
test
es
and
push
bound
inc
jns
dec
pop
or
rcr
jns
sbb
sti
xor
jmp
dec
jb
adc
jmp
adc
add
inc
stos
dec
in
add
xor
jl
hlt
xchg
add
arpl
pop
sub
aam
inc
nop
scas
mov
movs
idiv
sub
mov
cli
pop
add
iret
mov
bound
xchg
or
add
mov
inc
lock
cmp
sub
(bad)
jge
rol
push
out
push
jge
js
or
mov
dec
pop
mov
out
ja
adc
shl
movs
jl
movs
out
dec
xor
cmc
shl
and
mov
ja
add
mov
jle
inc
xor
mov
aas
sbb
js
and
mov
dec
xor
dec
(bad)
and
jp
pop
dec
mov
add
dec
(bad)
mov
mov
cmp
cmp
aam
push
push
int3
sub
pop
int3
push
cwde
dec
mov
mov
and
jg
paddw
mov
shl
test
jnp
cmovo
inc
repnz
scas
push
std
(bad)
hlt
mov
fwait
in
ret
cmps
sbb
stos
adc
stos
push
je
push
rcl
bound
iret
(bad)
mov
and
sti
imul
xchg
jge
or
stos
add
push
call
popf
jno
sbb
mov
cmps
(bad)
pop
jnp
movs
aas
stc
pop
jp
jne
(bad)
xor
pop
outs
sub
out
jecxz
push
push
aaa
dec
dec
jno
mov
jae
(bad)
loopne
or
mov
cdq
sub
mov
scas
out
ficomp
cmps
imul
cld
addr16
out
shl
mov
or
or
in
jns
test
std
pop
adc
add
push
mov
sub
out
(bad)
scas
mov
sar
push
cmc
sbb
popf
jns
repz
push
in
stos
int3
xchg
cs
sub
loope
inc
movs
mov
lahf
add
pop
jnp
jmp
shr
and
mov
push
int3
outs
das
stc
jp
add
add
clc
lods
pop
jg
push
jge
mov
mov
sbb
dec
mov
adc
les
jp
adc
xchg
in
xchg
add
daa
movs
sub
xchg
imul
lods
jae
imul
hlt
adc
enter
xchg
test
mov
retf
mov
out
xor
cmp
into
mov
gs
add
add
bound
xor
gs
pop
arpl
stc
xchg
dec
pushf
jmp
or
jl
mov
imul
pop
out
pop
push
call
sbb
retf
enter
loop
out
mov
sar
aas
jno
data16
mov
mov
sbb
xchg
fcomp
adc
xor
xchg
xchg
out
ins
sub
sti
inc
inc
out
jbe
shr
lock
scas
cwde
imul
mov
cmp
or
ds
aam
jb
and
lods
or
ins
ja
xchg
repz
aas
cmp
add
xchg
xchg
xchg
stos
dec
sbb
push
out
movs
sbb
and
push
fs
mov
shr
movs
push
sti
loopne
pop
inc
shl
jmp
cmc
pushf
ss
dec
stos
stos
push
ds
and
fcomi
xor
inc
cli
test
mov
jo
pop
icebp
cmp
or
xor
jmp
xor
out
ret
mov
inc
cld
js
out
jg
push
sahf
mov
mov
push
cmp
pop
jbe
pop
sbb
loop
das
sub
push
fdiv
cmp
arpl
arpl
test
call
mov
jp
add
jnp
add
ret
xchg
dec
ins
in
jne
mov
dec
(bad)
fmul
test
push
(bad)
fimul
inc
shr
cmps
xchg
je
mov
push
adc
xor
sbb
mov
mov
cmp
rol
jns
fist
sub
(bad)
fsub
fwait
inc
xlat
jl
xor
test
inc
in
loopne
inc
clc
rcl
mov
fwait
mov
shr
jns
inc
xchg
outs
push
sbb
(bad)
scas
test
push
stos
add
ds
lea
pop
mov
fisubr
xor
and
mov
adc
jecxz
mov
add
movs
add
push
(bad)
add
(bad)
mov
stos
std
gs
lds
push
loope
pop
dec
mov
mov
and
ja
data16
adc
ss
ja
mov
xrstor
push
ret
sahf
xchg
dec
inc
push
jecxz
mov
push
xor
adc
xchg
cmc
call
cwde
jg
fcom
int
ins
xor
pop
in
out
mov
rcl
dec
scas
push
nop
or
mov
sar
jmp
pop
xor
mul
dec
dec
mov
cmp
out
fs
(bad)
cmp
jge
in
in
or
test
dec
push
mov
dec
pusha
nop
(bad)
push
aam
clc
mov
add
pop
enter
or
cmps
inc
(bad)
push
pushf
cli
es
mov
mov
hlt
sti
pop
jbe
or
xor
ror
loopne
mov
pop
(bad)
or
xor
jp
ins
in
dec
and
adc
ret
es
xchg
push
add
pop
inc
adc
cmps
jl
and
mov
popa
pop
lods
xchg
in
shl
das
fwait
int
es
adc
add
cmp
inc
jecxz
test
das
mov
pop
fstp
add
(bad)
stos
or
add
sub
mov
loope
dec
dec
cmp
hlt
cmp
retf
rcl
sahf
aaa
sub
rcl
into
fnstsw
es
fmul
test
xchg
pusha
xor
pop
adc
pop
repnz
je
pop
adc
and
lods
mov
jnp
dec
lds
pop
imul
inc
push
adc
in
loop
enter
sub
push
cmp
gs
sahf
and
rol
stos
pop
and
sbb
mov
adc
pop
loopne
xor
shr
adc
mov
dec
pop
shl
mov
and
rcl
mov
adc
cmp
addr16
dec
clc
out
in
mov
push
ret
popf
pop
xor
xchg
ret
lea
mov
push
daa
shl
push
iret
leave
mov
stc
data16
or
and
loopne
int
jbe
add
pop
push
sub
pop
adc
sbb
xor
cmp
xchg
ret
sbb
or
outs
inc
xchg
lods
mov
add
stc
and
cmp
pop
pop
pop
cmc
(bad)
sbb
adc
push
cmps
mov
in
ret
lahf
xor
adc
and
mov
pushf
std
mov
mov
cli
in
push
push
repnz
aad
movs
push
jne
test
sbb
test
pop
pop
repz
add
mov
fcomp
and
mov
arpl
xor
(bad)
cmp
retf
jns
mov
stc
clc
ins
pop
pushf
mov
imul
mov
rcr
pop
push
cld
popf
or
xchg
call
cmp
mov
shr
imul
stos
pop
pop
outs
pop
ret
pop
add
and
pop
sub
fsub
pop
xor
cmp
movs
cwde
test
jne
mov
test
imul
fwait
repz
fcomp
in
xlat
mov
mov
jp
adc
xor
fst
fcomp
cmc
shl
int3
movs
test
aaa
ret
outs
jnp
xlat
call
dec
xor
not
jge
jg
ss
mov
xchg
sahf
arpl
outs
mov
jnp
mov
pop
mov
push
xchg
jcxz
mov
adc
push
jnp
ret
mov
mov
les
cs
sbb
jnp
or
ja
cwde
mov
xchg
cmp
mov
ret
addr16
push
add
push
xor
or
out
or
outs
jecxz
pusha
(bad)
in
or
and
inc
and
mov
cdq
int3
ror
push
sahf
cmp
jne
scas
jmp
aas
push
mov
cmp
(bad)
cmp
pop
mov
xor
and
in
inc
push
cmp
sbb
xor
addr16
(bad)
xor
jbe
xchg
in
stos
or
dec
adc
pop
jg
mov
mov
fucomp
sbb
jge
adc
xor
rol
mov
rcr
sbb
mov
push
sub
int3
jno
pop
(bad)
cmp
mov
dec
shr
push
rol
pop
xor
in
pop
xor
inc
(bad)
inc
mov
jbe
dec
lods
cmp
xor
shl
dec
cli
jmp
mov
(bad)
sbb
dec
test
sub
and
mov
mov
cmp
nop
clc
out
mov
stos
scas
fs
dec
mov
rcr
into
pop
loop
gs
ins
adc
jl
aad
(bad)
push
add
aas
ins
xchg
in
inc
jns
scas
dec
leave
pop
jmp
and
sub
sti
cmovle
xor
ja
mov
dec
cmp
cmp
les
int3
mov
jmp
clc
test
cmp
neg
das
pop
jle
or
sub
test
add
push
inc
fld
ret
out
cmp
adc
hlt
bound
mov
push
test
dec
mov
push
pop
and
mov
loopne
push
cmc
mov
scas
xchg
sub
push
xchg
pop
xor
inc
push
mov
dec
and
in
jmp
icebp
adc
pushf
(bad)
jne
ss
inc
dec
lea
outs
push
rcr
push
jecxz
dec
cmp
mov
pop
xor
loopne
xchg
sub
pop
sbb
jecxz
pop
inc
rcr
aad
in
or
fnsave
loope
into
int3
aas
imul
pop
cmc
mov
dec
lds
push
and
inc
repnz
ror
cmp
hlt
or
gs
jb
pop
push
jl
test
inc
stos
jb
push
mov
or
push
popa
pusha
mov
nop
dec
arpl
mov
pop
mov
sub
add
sbb
imul
imul
cmp
xor
add
dec
and
addr16
pop
xlat
sahf
jecxz
push
mov
mov
add
neg
pop
cli
test
call
or
cmc
mov
adc
sbb
dec
inc
int3
xor
shl
pop
xlat
cmp
dec
lea
fstp
pop
icebp
dec
das
or
(bad)
cld
sub
add
xchg
jg
fwait
or
pop
xor
cmps
dec
or
mov
inc
imul
stc
leave
mov
mov
sbb
(bad)
icebp
dec
xchg
fild
arpl
sub
jle
std
add
mov
rol
lds
cli
div
in
push
repnz
mov
inc
xor
mov
mov
loop
add
sbb
outs
cdq
enter
cmp
xchg
(bad)
loope
xchg
lods
stc
lea
scas
mov
xchg
inc
pop
jmp
or
js
pop
int
inc
pop
xchg
mov
fnstsw
icebp
inc
xor
or
stos
xchg
jns
iret
and
sub
imul
in
jmp
or
out
xchg
push
xor
pop
sbb
fisub
add
shr
fucomp
das
xchg
emms
pusha
sbb
mov
adc
(bad)
adc
(bad)
fiadd
sar
pop
cmp
push
inc
pop
jge
enter
cld
test
jbe
sub
mov
mov
je
hlt
push
outs
jl
jb
inc
(bad)
scas
adc
ss
jne
dec
adc
xchg
or
dec
mov
pop
sub
cmps
shl
ja
xor
cld
ret
mov
mov
lods
sub
xchg
stos
loopne
and
fstp
out
add
mov
fnsave
(bad)
pop
cmp
mov
jp
aam
rol
xlat
fs
adc
lea
pop
test
repnz
std
mov
lods
cmp
push
and
sub
sub
jmp
into
pop
js
pop
xchg
ins
inc
out
out
adc
jne
outs
jnp
stos
loop
ror
inc
or
stos
sub
adc
retf
dec
mov
fsub
repz
jp
rdmsr
ja
xor
aad
sahf
xlat
ds
push
lods
cmp
add
cmp
push
xlat
inc
stc
push
xchg
jge
jle
inc
outs
into
inc
fdivr
call
mov
pop
sbb
dec
jmp
pop
outs
inc
fbld
(bad)
mov
jp
mov
add
xor
ror
mov
fs
mov
rcr
cmovns
mov
in
in
dec
ds
jbe
div
dec
imul
fild
add
pop
out
rol
sub
mov
call
adc
ret
inc
lock
inc
xchg
imul
call
and
std
dec
cmps
out
add
(bad)
icebp
dec
xchg
inc
fwait
enter
retf
ss
xor
btr
cld
ja
ja
xor
adc
(bad)
jmp
jnp
stc
das
daa
fiadd
jmp
or
clc
cmp
ret
xchg
mov
dec
pushf
push
or
shr
inc
or
aad
outs
jp
adc
mov
mov
in
sub
fucomip
call
mov
xor
cli
push
cmc
jb
jge
xor
adc
jnp
jg
pusha
jecxz
mov
cmps
push
sahf
cmc
outs
or
inc
mov
and
cdq
dec
xchg
mov
xor
mov
push
adc
and
cdq
out
movs
and
dec
out
cmp
or
add
pop
stos
mov
adc
or
lds
pop
dec
sbb
popa
xor
add
pushfw
shr
mov
and
hlt
and
fldcw
sbb
mov
jle
call
imul
mov
scas
aam
repz
out
rcl
and
lock
or
jnp
aaa
inc
inc
cdq
xchg
add
call
inc
sub
mov
das
adc
cmp
(bad)
adc
inc
cmp
mov
pop
or
aas
mov
mov
fimul
xchg
add
ror
add
lods
pop
aas
ja
sbb
shl
pusha
jae
shl
nop
sbb
in
cmp
xor
call
and
push
sbb
(bad)
sahf
fwait
dec
inc
out
repz
mov
fsub
inc
or
push
iret
push
sbb
and
mov
sbb
or
lods
shl
or
scas
out
retf
cmp
hlt
in
sahf
lea
pop
pop
or
and
inc
pop
adc
fwait
or
dec
outs
ins
addr16
sub
adc
stc
xchg
xchg
lds
sub
or
cmc
jmp
inc
xor
mov
call
data16
pop
sub
stos
mov
cwde
sbb
rol
push
pop
retf
inc
and
ret
mov
in
scas
pop
es
jo
and
xor
daa
(bad)
pushf
jb
or
jnp
dec
sub
jae
mov
push
sti
mov
and
pop
out
xchg
jb
push
std
or
xchg
inc
(bad)
inc
mov
ret
push
push
xor
jl
or
mov
jne
sbb
std
pusha
xor
call
add
dec
or
lods
in
icebp
test
or
out
sbb
arpl
push
ins
push
repnz
jae
stos
daa
sub
xor
dec
outs
sahf
dec
nop
stc
scas
jge
inc
sar
rcl
rcr
adc
imul
and
xor
xor
repnz
or
pop
imul
add
or
cmps
pop
mov
retf
inc
mov
movs
stos
xchg
(bad)
sub
int3
dec
in
jmp
mov
and
jne
loopne
and
dec
xchg
adc
xchg
retf
jae
xchg
scas
cmp
scas
mov
sub
inc
add
in
fs
icebp
int3
ret
and
push
nop
mov
cmp
xchg
out
jno
pop
shr
or
lahf
test
mov
jbe
mov
test
rcl
test
pop
xchg
xchg
(bad)
push
retf
push
push
lods
push
ins
ins
(bad)
repz
pop
pop
add
sbb
arpl
inc
mov
mov
(bad)
and
xchg
lods
mov
adc
movs
mov
mov
pop
in
jmp
loope
mov
leave
inc
popf
sub
hlt
and
push
call
pop
mov
adc
pop
les
fwait
mov
mov
jmp
mov
fcomp
popf
xor
clc
jb
inc
or
lods
rcl
repnz
lea
(bad)
popa
(bad)
sbb
mov
mov
jp
(bad)
je
fwait
imul
icebp
xchg
inc
sub
jo
imul
sbb
pop
sbb
in
mov
xor
imul
in
lods
stos
inc
pop
sub
adc
loop
push
in
jle
push
aad
fmul
or
xchg
lock
inc
cmp
shl
add
mov
push
bound
xor
sbb
fst
and
jge
call
ret
ret
leave
clc
out
out
imul
scas
cdq
mov
in
std
bnd
xor
and
push
fiadd
neg
cmps
loopne
stc
push
aam
cmc
data16
jl
cmc
mov
jg
cmps
inc
cmp
fisubr
(bad)
push
call
inc
cli
test
fs
rcr
aaa
fwait
(bad)
loope
inc
cmp
cs
and
lahf
aas
in
mov
int
aas
in
ins
in
shl
inc
enter
jecxz
mov
sbb
fimul
out
mov
icebp
inc
(bad)
lds
inc
retf
mov
scas
sahf
nop
add
jns
mov
in
fisub
jp
add
jge
sub
(bad)
ja
lea
inc
dec
cmps
xchg
mov
mov
jae
mov
jge
ficom
pop
sub
mov
jnp
jbe
jmp
mov
jb
sbb
repz
ret
xchg
adc
pop
xor
xor
aam
xchg
push
fcom
out
sub
lea
add
push
cvtps2pi
inc
adc
popa
repnz
add
int
xor
or
sbb
es
movs
cmp
(bad)
pusha
test
test
mov
dec
mov
jns
and
pop
xor
int
jp
push
sbb
loop
mov
sbb
cmps
xchg
mov
outs
add
test
inc
movs
call
dec
das
pop
mov
adc
xchg
out
sub
mov
neg
fist
inc
cmp
dec
mov
jmp
pop
js
test
adc
fcomp
call
or
hlt
push
pop
in
xchg
or
or
xchg
adc
inc
add
fnsave
test
pop
rcl
push
scas
sub
sbb
cmp
imul
daa
dec
jo
popf
or
push
aad
mov
fxch
not
(bad)
xchg
jae
sar
pop
clc
std
mov
in
adc
xor
sbb
and
stc
jg
cmp
ror
xadd
iret
push
fadd
inc
outs
cmp
std
ins
es
mov
xchg
push
stos
push
inc
push
inc
xchg
cmps
sti
repnz
cmp
jns
aaa
pop
out
in
leave
xor
repz
mov
mov
hlt
popf
jge
lock
sbb
mov
push
or
or
cwde
mov
call
fs
out
adc
mov
add
push
test
(bad)
pop
imul
adc
in
das
mov
add
ins
call
xchg
bound
jg
ret
mov
or
pop
pop
ins
dec
test
add
sub
loope
sahf
lds
test
cwde
int3
push
xor
repnz
fidiv
push
pop
mov
mov
es
mov
cs
sbb
icebp
les
cmc
jp
push
mov
push
inc
xchg
xor
sbb
pop
mov
or
lods
aas
push
push
jecxz
inc
lock
inc
xlat
add
lods
(bad)
push
inc
clc
imul
add
inc
mov
int
mov
mov
push
ds
pop
out
bsf
sbb
pop
adc
jnp
dec
pop
xchg
mov
cmp
inc
stos
sahf
jne
add
pusha
or
dec
push
and
lock
clc
ins
and
inc
or
push
adc
(bad)
and
ss
mov
rcr
cmp
push
(bad)
fcmovu
fmul
jno
test
mov
int3
mov
jae
mov
hlt
(bad)
fdivr
nop
mov
popf
cmps
aaa
cmc
xchg
jnp
les
push
pop
retf
out
push
dec
mov
jle
jecxz
mov
int
add
jnp
dec
jno
pop
adc
cmps
cmp
xor
and
mov
lahf
jne
add
pusha
fsubr
enter
mov
pop
add
scas
arpl
cdq
push
push
data16
jmp
fild
xchg
adc
popf
sahf
(bad)
popf
mov
cld
pop
mov
mov
iret
sbb
or
cmp
jecxz
add
mov
std
cmps
in
mov
jo
fldcw
cmc
sar
sub
push
sub
mov
adc
mov
cmp
out
mov
sub
pop
bound
jnp
sti
sub
push
xor
adc
push
lahf
shl
pop
iret
rol
loopne
js
fs
inc
or
jae
jo
dec
and
addr16
ins
mov
xor
cmps
mov
fisttp
scas
gs
mov
in
lds
mov
(bad)
xor
sti
xor
xor
lds
bound
pop
pushf
stc
push
aas
fistp
data16
jp
dec
jns
mov
retf
ja
cli
mov
or
xchg
in
pop
adc
jge
sub
dec
cmp
xchg
sti
sbb
(bad)
pusha
xchg
pop
cmc
into
pop
pop
cmp
jmp
fwait
mov
mov
push
mov
sbb
mov
xor
add
jle
lock
mov
xor
adc
jbe
sub
cmps
mov
std
inc
bound
loopne
mov
dec
jecxz
mov
faddp
arpl
adc
jbe
mov
mov
push
into
push
jmp
(bad)
xor
cwde
loop
cmp
sub
cdq
fistp
stc
and
out
cmps
ret
mov
adc
or
dec
repz
imul
outs
sub
outs
(bad)
adc
dec
cmp
lods
sbb
adc
add
imul
pop
loopne
xor
jmp
xor
xor
dec
push
xchg
cwde
mov
or
in
inc
mov
loopne
aas
stos
dec
mov
xor
mov
adc
iret
call
mov
int
inc
dec
xor
cmp
int3
sbb
sti
jo
mov
ret
(bad)
mov
cmp
fs
ss
jmp
jmp
hlt
xchg
sti
mov
inc
mov
mov
xor
mov
scas
dec
and
pop
stc
push
fstp
xchg
jp
sub
or
sbb
cli
ficomp
xlat
adc
mov
xor
aaa
stos
fs
or
add
adc
jmp
adc
repz
sub
imul
jno
push
loopne
pop
lds
fcom
sub
cmps
cmp
adc
jl
stos
xor
and
jl
ins
dec
mov
dec
shr
dec
in
int3
ins
mov
sbb
sub
jno
fwait
out
imul
cmps
addr16
cmp
pusha
add
imul
movs
leave
adc
lock
repnz
call
mov
stc
movs
popf
stc
sub
and
push
movs
aad
mov
add
jg
rcr
call
cmps
or
addr16
jge
push
das
pop
jge
sbb
int
cdq
in
hlt
cmp
inc
dec
dec
mov
dec
fisttp
dec
sub
mov
cmp
pop
sub
mov
pop
mov
scas
jmp
jle
mov
loopne
sub
out
and
mov
mov
xor
mov
mov
pop
movs
or
cld
nop
mov
test
lock
cmp
test
adc
mov
and
pushf
mov
das
sbb
push
pop
imul
(bad)
icebp
mov
push
push
push
sbb
push
jae
lea
dec
mov
data16
pop
pop
mov
inc
push
mov
jmp
daa
mov
stos
(bad)
sub
jns
mov
adc
retf
pop
inc
imul
dec
rol
ret
nop
xor
xor
mov
outs
sub
mov
aas
mov
aad
adc
sbb
cmc
into
rcr
cdq
pop
push
mov
mov
call
gs
cmp
retf
cld
neg
push
jg
jno
pop
cmp
dec
sub
xor
dec
sub
mov
nop
or
push
test
pop
shl
adc
arpl
xchg
sbb
pop
push
pusha
add
pop
js
les
push
and
push
jno
not
aas
jmp
sbb
out
aas
int
add
xlat
jno
or
inc
scas
adc
test
imul
clc
pop
rol
movs
in
cmps
stos
cmp
iret
fs
jge
arpl
sahf
pop
in
outs
pop
pop
inc
test
and
pop
adc
dec
aas
out
or
stos
in
cmc
mov
clc
push
inc
xchg
stc
inc
jecxz
mov
dec
ins
jle
in
xor
mov
xor
out
in
push
dec
xor
in
stos
or
xchg
nop
mov
mov
scas
xchg
fst
das
adc
or
in
inc
(bad)
jo
cmp
pushf
sub
dec
xchg
imul
adc
push
sbb
pop
int3
(bad)
(bad)
js
mov
ja
jmp
jo
mov
mov
mov
stos
sbb
mov
push
pop
imul
cmp
scas
or
jnp
xor
sub
fs
push
cwd
lods
(bad)
shl
xchg
ins
cmp
push
inc
jno
pop
loopne
cmp
mov
push
popf
jge
xchg
in
pop
mov
and
and
std
xchg
mov
repz
ins
mov
daa
into
pop
mul
xchg
and
sti
fldcw
stc
fdiv
fs
xchg
int3
test
stos
sbb
xchg
repz
cmp
add
jl
(bad)
sbb
pop
mov
repnz
js
hlt
(bad)
repz
jbe
cmp
rcr
shr
hlt
(bad)
xchg
mov
retf
pop
mov
(bad)
out
push
loopne
nop
dec
add
jnp
or
inc
push
jns
pop
push
daa
mov
sbb
fisubr
jp
xlat
cdq
adc
inc
into
jbe
test
lock
ss
mov
cli
sbb
out
(bad)
int
add
mov
in
sbb
push
int
out
scas
retf
mov
jb
mov
test
sub
and
clc
cs
mov
fmul
sbb
sbb
popf
dec
mov
mov
in
xor
jo
cmp
das
push
pop
(bad)
scas
inc
push
dec
xchg
or
clc
pop
push
cmp
test
ret
xor
pmuludq
mov
(bad)
std
or
xor
pop
popa
shr
(bad)
test
mov
sar
mov
icebp
adc
das
fs
in
lods
xchg
arpl
mov
xor
mov
in
js
in
adc
mov
jbe
push
mov
cmp
(bad)
in
inc
xor
xor
xchg
hlt
mov
call
fucomip
idiv
mov
xchg
in
cmp
mov
cmp
popa
mov
pop
xchg
and
int
mov
and
call
je
jnp
add
jmp
outs
add
hlt
fwait
mov
jne
pop
dec
sbb
mov
or
jb
fmul
aam
int
cmp
jg
dec
jne
movs
sub
xchg
les
stos
mov
pop
mov
jmp
or
mov
fbld
xchg
ins
add
test
mov
je
jl
or
pop
nop
bound
in
sub
mov
fwait
inc
push
fistp
loope
mov
and
xor
mov
cmp
jns
stos
and
enter
jnp
xchg
(bad)
in
out
arpl
loop
cmp
mov
(bad)
mov
mov
aad
call
mov
xchg
addr16
in
or
aas
mov
or
xor
or
cmp
sahf
pop
fadd
jns
add
lods
clc
or
or
jge
pop
data16
and
fdiv
fmul
(bad)
scas
in
adc
pusha
lods
mul
pop
mov
xchg
sub
jno
(bad)
mov
jo
xchg
push
test
lods
call
iret
pop
(bad)
(bad)
dec
cwde
aas
mov
push
inc
mov
inc
mov
aas
loope
cmp
inc
stos
ss
imul
mov
pop
shr
scas
call
std
jns
pop
xlat
cdq
xchg
pop
jmp
rol
mov
inc
or
push
sbb
pop
shl
and
cmps
cmc
in
jno
cmp
mov
dec
ret
push
xchg
test
lea
les
jns
pushf
inc
xchg
loopne
out
cmps
mov
xchg
xchg
sub
mov
pushf
dec
sub
jo
add
push
shr
fmul
sub
aad
fmul
xor
jbe
or
ret
xchg
xadd
movs
push
or
out
sub
jb
sub
jmp
test
pop
repz
jno
jbe
mov
cmp
adc
fwait
add
mov
sar
adc
mov
arpl
push
je
add
add
frstpm(287
nop
mov
dec
retf
gs
add
mov
gs
call
(bad)
ss
mov
cmp
adc
mov
int3
jge
or
jp
and
shl
loope
push
ror
repz
jae
hlt
sub
dec
(bad)
pop
or
call
cs
jae
mov
(bad)
mov
mov
or
mov
test
xlat
jns
and
inc
dec
std
push
out
push
iret
add
daa
fsub
adc
pop
sbb
enter
push
sub
out
jp
mov
out
test
out
inc
push
popa
std
mov
xchg
into
fnstcw
ins
test
int
lahf
pop
jb
push
mov
addr16
loopne
mov
mov
jbe
mov
sbb
call
mov
into
cli
loope
ins
cdq
jnp
adc
add
mov
cmp
push
scas
fwait
pop
stc
pop
pop
inc
xor
push
ds
cmp
icebp
mov
or
add
mov
(bad)
addr16
call
pop
xchg
push
popa
(bad)
sbb
and
inc
sub
data16
jl
dec
cmc
lock
or
in
rcr
push
xchg
aam
push
sbb
jmp
loope
jb
aam
fidiv
sahf
ret
bound
imul
mov
or
push
jmp
and
or
fstp
or
add
dec
ins
mov
imul
cmp
out
mov
aaa
out
call
ja
xchg
jo
cmp
mov
inc
outs
sbb
push
(bad)
mov
nop
nop
(bad)
call
add
addr16
xchg
and
std
retf
mov
out
jb
lods
mov
jp
xor
xchg
add
dec
lods
adc
adc
mov
cli
call
add
hlt
(bad)
loopne
jge
test
dec
ror
mov
jnp
loop
mov
test
(bad)
or
scas
add
jb
ss
out
stc
and
push
mov
stc
loop
pusha
inc
ret
ret
jge
fwait
sbb
clc
aad
ror
or
mov
mov
dec
push
and
pop
cdq
adc
lock
pushf
pushf
inc
xchg
push
out
stc
mov
add
adc
sahf
shr
adc
mov
xchg
int
pop
out
adc
adc
jecxz
push
sbb
xchg
(bad)
pusha
inc
cld
jge
mov
xor
push
mov
nop
retf
cdq
scas
popf
jo
push
pusha
adc
test
ror
and
and
stos
and
xchg
inc
and
stc
jmp
mov
xchg
or
ja
sysret
sbb
out
les
aas
xchg
stc
jno
push
cmp
mov
hlt
and
mul
cmp
add
sbb
pushf
and
mov
add
fimul
mov
outs
popa
in
mov
lahf
shl
loopne
dec
jp
shr
jns
sub
xchg
and
fs
mov
xchg
lock
gs
movs
aam
loop
fucomip
in
inc
xor
(bad)
adc
mov
gs
call
inc
fimul
loopne
cmp
add
ret
xchg
mov
icebp
or
mov
add
inc
cdq
jl
xor
shr
cmp
lahf
rcl
inc
xlat
mov
std
xor
pop
sbb
stos
je
fisubr
add
fcomp
int3
pop
mov
mov
mov
xchg
jmp
and
ror
inc
jmp
jl
out
xor
mov
(bad)
(bad)
mov
in
inc
stos
and
adc
les
ret
push
sahf
push
cmc
push
jmp
popf
inc
xchg
mov
loope
add
outs
push
aas
pop
int3
ret
into
rcr
neg
cdq
loope
dec
mov
ffree
cmc
xchg
jno
dec
icebp
daa
mov
cmp
push
sub
xchg
dec
adc
dec
movs
int
test
pop
in
ds
jp
in
shl
lods
mov
test
(bad)
(bad)
jl
sub
mov
push
adc
movs
mov
cdq
jg
clc
push
fild
cmp
sbb
mov
cmp
repnz
cmc
(bad)
mov
mov
in
(bad)
jmp
xchg
outs
xor
mov
stc
mov
rcl
jno
xor
push
sub
mov
push
push
sub
arpl
pop
out
sub
mov
dec
cmp
aad
fild
pop
xchg
pop
mov
mov
sahf
loopne
lods
mov
push
je
cmps
or
push
fcom
and
gs
test
ins
stos
push
je
shl
mov
popa
(bad)
rol
push
test
adc
sub
jg
push
cmp
jne
pusha
call
(bad)
and
leave
mov
sub
mov
ins
pushf
cdq
data16
test
mov
xchg
adc
mov
cmps
dec
pop
mov
cdq
test
sahf
xchg
cmp
imul
pusha
mov
(bad)
sbb
mov
xchg
sysenter
fistp
mov
push
jno
inc
(bad)
cdq
xlat
inc
test
xor
cmp
xor
je
jge
inc
fisubr
outs
sbb
sahf
and
test
call
outs
(bad)
cmp
fist
xchg
icebp
inc
inc
fdiv
cmps
mov
jg
loopne
xor
retf
outs
sub
rcr
test
add
pop
mov
js
dec
mov
xchg
out
ins
fucomip
adc
dec
sbb
inc
inc
lock
push
cmp
add
inc
mov
and
pop
cwde
pop
ror
in
jae
sbb
jecxz
mov
sti
xchg
push
(bad)
adc
xchg
mov
xor
and
xchg
adc
in
jle
int3
push
out
ret
jns
sub
cmps
les
pop
push
movs
aam
xor
mov
imul
jg
xchg
inc
cmp
mov
jne
scas
mov
(bad)
push
call
mov
retf
shr
jp
daa
loope
cs
mov
or
xor
imul
jmp
fwait
and
je
nop
and
icebp
cmps
enter
pop
dec
sub
bound
int3
xchg
push
jne
js
popa
mov
sub
mov
xchg
cld
mov
jnp
sbb
and
shr
ficom
push
in
andps
pop
dec
sbb
pusha
dec
outs
cmp
je
daa
aad
pop
cmps
test
je
enter
(bad)
lock
sbb
add
push
mov
jo
pop
ins
sbb
ss
mov
pop
jl
dec
data16
out
xor
jno
(bad)
imul
leave
mov
dec
adc
cmp
mov
pop
mov
cmp
jmp
addr16
ins
scas
int
or
leave
cmps
into
push
jne
push
or
sub
or
test
jo
je
mov
std
cmp
mov
aam
add
sub
inc
adc
cmps
mov
cwde
retf
jge
push
push
out
sub
and
cdq
ret
and
in
fwait
mov
popf
dec
dec
cmc
xchg
enter
or
data16
add
xchg
cmp
cmp
xor
aad
push
fdivr
not
cmps
mov
inc
pop
mov
xlat
xor
test
add
add
jns
pushf
pop
adc
icebp
sub
daa
cmp
inc
push
std
mov
lock
add
in
mov
mov
sahf
xchg
add
popf
test
sub
add
ja
(bad)
jb
frstor
mov
bound
jle
hlt
cmc
adc
jl
fst
xor
in
xchg
lock
mov
leave
jae
or
aaa
addr16
int
or
hlt
shl
push
xor
pop
addr16
outs
fdivr
gs
(bad)
nop
cld
adc
ret
or
dec
stos
sbb
add
enter
inc
loope
aas
mov
push
out
pusha
cmp
js
cdq
mov
dec
xchg
ss
fild
push
cmp
ret
jno
(bad)
fadd
fstp
sub
rcl
push
push
(bad)
iret
out
div
mov
xor
xchg
sub
ins
sbb
cwde
std
mov
adc
loopne
ss
push
cli
adc
addr16
adc
sub
adc
pop
add
fs
push
and
xor
mov
fmulp
sbb
push
cmc
daa
fild
dec
repz
mov
sti
cmp
repnz
push
in
mov
ja
mov
enter
outs
cmps
pop
in
cmp
rol
adc
test
sub
push
mov
jnp
push
jle
outs
xchg
in
repnz
push
retf
ret
js
jbe
xor
dec
xor
cmp
push
fnstcw
lock
into
bound
je
sub
lods
leave
scas
fadd
lahf
rol
cli
push
dec
in
sti
je
inc
pop
xchg
pop
or
pop
push
xchg
add
mov
addr16
push
jne
pusha
mov
inc
or
push
sub
movs
test
add
leave
fs
aas
scas
xchg
inc
ja
mov
clc
cmp
mov
ret
sbb
enter
cmp
sub
setb
jnp
movs
inc
xor
out
shl
cmc
sbb
mov
xor
xchg
pusha
dec
addr16
repz
xchg
push
pop
mov
das
xchg
les
and
jl
jbe
jle
add
xchg
(bad)
pop
std
jns
stc
outs
aad
sbb
dec
sub
jns
ds
xlat
arpl
and
nop
mov
out
push
lea
mov
adc
pop
pop
adc
pop
mov
push
mov
stos
sbb
jnp
pop
scas
jge
fwait
es
jnp
call
cdq
scas
jge
dec
mov
xchg
cmp
mov
fisub
xor
in
sub
cmp
xchg
dec
sbb
rcr
enter
mov
cmp
xchg
imul
repz
mov
cli
(bad)
pop
xchg
into
jp
pop
inc
aas
out
popf
loopne
dec
(bad)
in
adc
fild
bound
gs
dec
or
bt
(bad)
lahf
and
dec
push
pushf
in
outs
retf
adc
jp
mul
call
cmps
xor
retf
mov
je
sti
jnp
ret
cmp
xor
jns
pop
lock
lods
sub
add
and
pop
mov
sbb
lods
inc
ins
(bad)
jmp
and
jge
inc
adc
jmp
ins
dec
aaa
movs
add
mov
imul
sub
sbb
and
in
jno
add
int3
int3
sub
mov
jp
ins
frstor
or
movs
mov
mov
fs
popa
push
pop
(bad)
mov
add
jae
inc
jecxz
popw
lods
or
inc
sbb
aas
es
xor
aad
xchg
xor
or
sbb
aad
sub
pop
lock
sbb
mov
sar
mov
mov
sub
popa
add
push
loop
test
adc
push
loopne
leave
lea
sahf
mov
(bad)
(bad)
xchg
je
adc
fdivr
imul
scas
pop
jo
in
div
mov
pop
sbb
(bad)
sti
movs
into
mov
fmul
dec
cmp
jns
sbb
daa
lahf
adc
cs
xchg
inc
loop
imul
aas
jae
stos
fld
es
xchg
sbb
cwde
sbb
stos
adc
scas
(bad)
(bad)
sub
neg
and
lods
jo
scas
je
shl
ds
in
mov
pop
mov
pushf
xchg
sub
daa
aas
pop
sub
(bad)
bnd
dec
jl
int
pop
cmps
fadd
dec
and
movs
xor
inc
ja
inc
mov
pop
xchg
data16
xor
lods
dec
mov
xlat
mov
in
loopne
shl
push
sub
mov
push
adc
aaa
ret
fcmovbe
mov
cmp
add
mov
lods
mov
scas
mov
push
sbb
push
popa
xor
jge
repz
mov
loopne
ss
loopne
push
dec
in
sahf
out
xor
adc
sub
lea
in
mov
push
push
outs
push
push
call
push
xlat
push
inc
add
or
xor
or
lods
mov
inc
mov
mov
ins
pop
enter
and
xchg
lock
call
and
jnp
sbb
dec
cli
mov
ins
jnp
movs
retf
cmp
xchg
sub
jne
or
mov
push
hlt
out
js
dec
push
jg
loop
fnstcw
(bad)
push
cmps
pop
fs
dec
ins
xor
mov
int
in
mov
loopne
dec
cmps
popa
xor
mov
sahf
push
inc
sub
add
stos
mov
rol
jno
outs
jecxz
xor
mov
xor
repz
scas
ficomp
popa
sahf
movs
and
data16
mov
(bad)
ins
add
mov
mov
and
push
sub
jnp
mov
mov
cs
dec
pushf
and
fadd
or
imul
(bad)
shl
ret
loope
push
add
pop
dec
inc
dec
addr16
push
jb
call
inc
mov
pop
push
cmp
jmp
sbb
fld
xor
(bad)
(bad)
fisub
jmp
pop
pop
cmp
iret
cdq
mov
dec
jbe
popa
mov
aaa
cmp
mov
clc
mov
xchg
ja
dec
idiv
inc
mov
test
sbb
cmp
push
xchg
add
pop
mov
out
add
add
outs
call
and
mov
xor
xchg
push
jo
(bad)
sub
sub
jae
pusha
arpl
(bad)
fsubr
xchg
xor
sub
lahf
mov
shl
aad
mov
(bad)
sar
xor
xor
dec
push
sub
push
push
dec
jle
pop
stc
popa
xchg
ret
fidiv
jmp
cmp
out
add
repnz
mov
aas
in
jns
mov
jecxz
adc
and
fdivrp
adc
sti
pushf
div
adc
sti
mov
mov
dec
into
rcl
xlat
jecxz
nop
cwde
stc
push
cmp
xor
inc
pop
arpl
pop
jno
jp
bound
call
xlat
fcmovb
mov
lock
movs
jbe
push
stc
and
js
pop
xchg
sbb
jbe
out
cdq
and
fsubrp
xchg
and
mov
data16
or
jle
cmp
js
(bad)
or
jg
retf
fbld
fild
(bad)
mov
inc
pmulhw
push
hlt
xchg
push
and
mov
and
mov
push
outs
cmp
sbb
mov
scas
inc
jnp
xchg
push
add
in
dec
nop
sbb
lahf
mov
or
pop
les
and
adc
xchg
loop
das
mov
jo
cmp
adc
iret
fnstcw
shl
cmp
jmp
adc
ror
jmp
(bad)
imul
mov
enter
ficom
or
stc
(bad)
pop
not
xlat
xchg
imul
mov
cmc
mov
mov
out
jnp
fwait
sbb
out
movs
adc
test
push
mov
ror
les
div
addr16
xor
mov
fcomp
cmps
test
call
add
call
xchg
pop
fbstp
lods
and
xchg
pop
test
push
loop
sbb
and
lods
mov
mov
push
push
xchg
div
inc
aad
mov
ins
xor
leave
cdq
jae
ret
repz
push
add
xchg
adc
aas
mov
loopne
add
bound
sbb
jo
push
dec
cmovle
icebp
std
pop
sbb
jmp
xor
pop
pop
pop
ins
out
mov
dec
sti
adc
cmp
aad
and
mov
add
push
rol
fstp
adc
sbb
mov
sub
ins
or
push
and
mov
add
sbb
aaa
pop
loopne
jae
jne
in
outs
test
jo
das
adc
mov
push
pop
mov
or
cwde
push
pop
inc
pop
add
mov
lods
mov
push
fimul
les
(bad)
jbe
cld
add
mov
cmps
dec
mov
push
jecxz
jle
(bad)
cmp
sahf
push
dec
pop
ret
or
cmc
cmps
nop
(bad)
inc
call
xor
bound
cmps
mov
in
jecxz
daa
stc
jmp
lahf
pop
pushf
retf
shl
cwde
data16
push
ror
jns
push
sub
sar
cmp
sbb
shr
adc
xor
in
ss
or
mov
jns
mov
mov
mov
push
imul
sub
or
mov
or
cmp
ja
ss
sbb
jnp
lods
or
push
jae
shl
cmp
test
push
test
xor
loopne
mov
xchg
aaa
inc
adc
outs
cld
lock
sub
xchg
sbb
push
push
(bad)
loope
mov
inc
xchg
aaa
ret
retf
(bad)
sub
test
sbb
shl
xor
or
aad
inc
inc
add
add
jo
jp
cs
and
mov
sbb
sbb
cwde
loop
and
icebp
mov
stc
popa
mov
pop
adc
rcr
inc
shl
mov
mov
xchg
xchg
and
pop
cmp
or
pop
gs
out
push
or
xchg
test
outs
retf
addr16
call
icebp
fs
mov
add
jb
shl
sbb
je
cmp
out
pushf
aaa
repnz
bound
ja
xor
pop
es
in
sub
ins
retf
pop
dec
push
sti
(bad)
(bad)
jnp
addr16
jne
enter
in
out
xor
sub
arpl
ds
lea
pop
fcmove
jmp
and
xor
sub
push
and
stos
repnz
inc
jo
int3
push
lods
push
jo
add
dec
mov
cmp
add
outs
lahf
fisttp
(bad)
dec
xor
xor
hlt
inc
adc
out
inc
inc
loopne
push
pop
std
push
nop
push
int
ins
mov
stc
mov
in
or
out
mov
cmp
out
pushf
mov
sub
dec
mov
pop
jl
pop
js
push
mov
push
and
mov
jmp
dec
mov
jle
jno
pop
push
mov
daa
and
retf
adc
push
lods
jb
sub
dec
leave
mov
jo
dec
xchg
dec
fwait
clc
sub
js
addr16
mov
hlt
retf
cwde
or
test
jo
xor
shl
call
fcom
cli
inc
cmp
adc
mov
ss
inc
(bad)
sar
xchg
movs
pop
pop
daa
scas
into
mov
rcr
xchg
dec
sar
pop
jo
xchg
sbb
int3
dec
out
(bad)
loope
push
jb
mov
aam
daa
in
das
mov
lock
fwait
stos
(bad)
xchg
sub
sar
fwait
push
addr16
jp
jae
retf
jno
ror
retf
xor
dec
ficomp
enter
adc
push
lahf
ins
test
dec
push
shl
sti
push
(bad)
repnz
xor
jp
jns
inc
pop
xor
lds
(bad)
clc
mov
out
jge
lock
clc
mov
push
bound
jae
xchg
fbstp
sahf
jl
(bad)
ja
mov
sub
mov
xchg
out
mov
jl
stc
lahf
add
ins
xchg
inc
jmp
jecxz
fimul
jbe
xor
stc
or
enter
or
pop
clc
fmul
iret
xchg
sbb
mov
dec
test
sbb
imul
mov
xor
lahf
cmp
fwait
mov
adc
mov
or
into
mov
mov
adc
retf
xchg
iret
sub
mov
mov
mov
ret
lock
sbb
fdiv
sub
dec
push
gs
ds
shl
xchg
cmps
jl
add
inc
or
inc
inc
xchg
push
adc
sub
cdq
jnp
stc
inc
(bad)
fidiv
cmp
mov
lods
jmp
lahf
jne
mov
add
retf
xchg
dec
jge
dec
add
sub
and
mov
mov
(bad)
xor
pop
and
jmp
repnz
sub
jmp
pusha
cmps
xor
push
xlat
imul
inc
push
mov
loop
aaa
and
xor
xor
jno
mov
and
mov
jecxz
bound
jecxz
mov
fst
movs
nop
fs
push
push
iret
add
mov
call
sbb
fst
(bad)
iret
shr
in
pop
dec
imul
pushf
jl
mov
jmp
push
lock
add
adc
xor
mov
mov
sbb
arpl
add
and
cmps
fild
(bad)
sbb
and
mov
mov
std
mov
xor
cmp
cwde
mov
jge
jg
pop
jecxz
neg
pop
ja
cmp
pop
or
xchg
cmps
and
lds
xchg
std
dec
inc
sub
aaa
xchg
add
add
loope
jle
or
jmp
pop
sub
movs
hlt
mov
adc
sbb
icebp
shl
and
(bad)
pushf
adc
push
sbb
sbb
xor
cmp
scas
xor
push
or
or
addr16
fucomp
addr16
gs
clc
mov
mov
outs
lahf
mov
jp
mov
cmp
jmp
add
xchg
jl
push
and
popf
rcr
imul
or
jmp
sbb
mov
adc
add
adc
addr16
push
imul
mov
fstp
pop
jle
adc
sub
lahf
retf
fidiv
movs
mov
stc
inc
in
inc
int3
mov
dec
repnz
aaa
cdq
jbe
xor
sub
jmp
jns
daa
cmp
loopne
lods
pop
arpl
stc
push
adc
cmps
xchg
sbb
pop
shl
test
aas
adc
adc
cmp
dec
mov
pop
push
repnz
dec
mov
sbb
inc
outs
test
nop
cwde
fdivr
jmp
mov
jp
ds
push
mov
cdq
xor
pop
jle
sbb
stc
sub
cmc
out
ss
das
ins
jp
jl
gs
fs
adc
jns
xchg
scas
mov
add
push
xlat
int3
das
out
daa
xlat
fisubr
cmp
lods
inc
imul
call
inc
and
fcomp
sub
dec
sbb
nop
xor
(bad)
je
xlat
scas
fisub
and
aas
rol
imul
pop
in
cmp
and
or
mul
in
jecxz
adc
cmp
cmp
cmp
cmp
and
mov
mov
fwait
nop
(bad)
mov
mov
sbb
jb
xchg
xor
in
add
fisub
mov
retf
mov
xchg
jl
adc
int3
outs
outs
ret
sub
add
(bad)
stos
cmps
sbb
ficomp
cli
pop
push
js
icebp
ja
dec
sub
cmc
mov
mov
dec
sub
stos
inc
mov
push
xor
dec
inc
mov
mov
mov
pop
and
movs
jl
pop
ds
adc
sub
xlat
retf
sti
ins
mov
fs
mov
mov
add
aad
inc
movs
movs
mov
sbb
xor
js
or
cmp
xchg
and
stc
in
mov
dec
cmp
or
dec
push
pop
ror
jmp
in
push
aas
clc
add
fsubr
jno
sub
cmp
fidivr
mov
push
xchg
ret
jp
pop
scas
cmp
jle
jl
inc
les
dec
mov
pop
fadd
push
push
test
int3
add
loopne
lds
and
es
addr16
icebp
(bad)
lock
xchg
mov
cmp
or
pushf
inc
and
pop
je
je
sub
jae
inc
jo
jo
movs
fld
call
ret
stos
ja
cmc
dec
dec
dec
jmp
cs
int3
ins
std
push
imul
jecxz
jo
dec
inc
mov
or
cmp
pop
mov
mov
pop
imul
mov
hlt
jmp
call
jmp
shl
jae
sar
jne
into
xor
mov
pusha
or
in
out
push
stos
aad
dec
pop
adc
lods
loope
xchg
out
cli
dec
js
sub
gs
imul
sub
ins
xadd
in
mov
iret
outs
retf
cmc
add
xchg
mov
js
rcl
scas
and
inc
and
mov
pop
(bad)
out
out
mov
lods
xchg
xchg
test
popf
mov
sbb
jecxz
dec
push
call
or
push
push
jae
xchg
scas
cmp
rcl
xchg
repz
clc
in
jbe
fisttp
jo
mov
inc
into
lods
dec
pop
mov
xor
fmul
mov
retf
xor
inc
cmps
add
aas
cdq
cmp
dec
aad
jno
push
sbb
xor
sahf
aas
or
inc
add
dec
dec
mov
jmp
cmp
iret
dec
not
scas
mov
xlat
vpcomub
sub
push
sbb
adc
loope
sbb
or
push
ret
gs
arpl
fld
lds
inc
ins
pop
aam
ja
loop
cdq
mov
mov
daa
aas
jmp
out
adc
(bad)
add
inc
test
inc
sub
fs
int3
aas
mov
ins
add
mov
in
push
mov
sub
call
popf
sbb
stos
mov
xor
cmp
pop
test
add
ror
out
mov
inc
lock
mov
xor
ins
arpl
dec
ror
(bad)
jge
mov
lahf
and
popa
adc
adc
mov
leave
xlat
and
fisub
push
ss
sub
mov
xor
xchg
pop
popa
dec
cdq
jmp
add
je
fwait
dec
data16
mov
pushf
push
adc
pop
jle
les
mov
lock
or
popf
aam
pop
lea
sbb
repz
xor
fisubr
stc
cmp
cmps
mov
cld
(bad)
and
sub
adc
aaa
ja
out
scas
cmps
test
push
jg
mov
cmp
or
and
inc
mov
adc
(bad)
mov
hlt
les
fwait
icebp
mov
lods
(bad)
cmp
fcom
ds
mov
ja
mov
stos
test
ins
test
popf
ins
test
les
(bad)
push
mov
pushf
sar
add
dec
pushf
and
jecxz
das
sbb
or
sbb
cli
cli
mov
data16
(bad)
cmp
std
loopne
jb
neg
adc
sbb
test
jmp
add
jne
sbb
not
pusha
sbb
dec
movs
jge
push
ret
pusha
dec
pop
or
in
xor
bound
mov
or
mov
add
mov
(bad)
inc
cs
scas
push
and
lods
fadd
inc
xchg
pusha
lahf
sti
(bad)
push
cmp
mov
mov
jmp
sar
sub
push
test
pop
into
stc
or
xchg
push
inc
data16
dec
mov
lahf
shr
mov
pop
xor
hlt
adc
dec
push
and
jg
retf
add
fwait
icebp
scas
sbb
jb
sbb
inc
adc
int
outs
aas
adc
adc
jmp
fistp
xchg
int3
ret
pop
out
pop
dec
or
sbb
xor
and
push
cmp
imul
xor
add
cmc
retf
adc
out
nop
and
push
sti
test
or
jmp
mov
cmp
outs
(bad)
js
mov
fistp
xchg
pop
mov
add
clc
jmp
or
jecxz
lea
fcom
sar
shl
rol
dec
mov
jo
pop
xor
(bad)
ret
ret
mov
xor
adc
fwait
call
lods
out
xchg
pop
xor
or
inc
daa
xchg
ret
pop
pop
adc
add
xchg
mov
adc
popf
sub
pop
scas
and
pop
les
outs
leave
sbb
(bad)
mov
cmp
std
test
stos
int3
popa
idiv
test
and
cmps
jmp
into
dec
mov
mov
mov
jmp
cmp
cmps
cs
adc
mov
out
xchg
addr16
mov
cmp
mov
cld
fld
xlat
sub
jge
cmp
outs
dec
mov
ror
leave
arpl
xor
dec
xchg
pop
adc
sub
daa
push
mov
test
add
jle
clc
sub
imul
shl
rcl
or
mov
lock
inc
xor
cld
xor
retf
pop
jge
dec
inc
sub
popa
dec
(bad)
das
push
les
inc
jg
cld
loop
in
pop
lds
jnp
jo
sbb
cmp
ror
mov
inc
and
int
popf
jmp
cmc
xchg
test
fnstsw
addr16
mov
iret
dec
push
mov
movs
sbb
fdiv
adc
lods
push
adc
xor
pop
loope
push
cmc
xchg
aaa
std
or
(bad)
repz
nop
mov
repnz
fwait
push
sbb
mov
and
push
or
jno
(bad)
push
inc
mov
movs
cmps
movs
push
ror
fnstenv
sub
addr16
enter
movs
ss
fsubr
data16
or
les
or
xor
sbb
dec
or
add
sbb
jmp
pop
xor
and
cmp
dec
in
aaa
mov
pop
stos
or
sub
mov
cmovne
push
nop
ja
jle
not
mov
and
jp
sub
fbld
pop
xchg
cs
sub
add
(bad)
(bad)
dec
or
adc
(bad)
pop
out
mov
cmp
push
loope
stos
lock
xchg
mov
popf
popf
retf
cmps
pop
jne
cdq
mov
inc
(bad)
repz
jae
jecxz
dec
fwait
mov
dec
aas
jge
mov
mov
push
sub
jmp
mov
mov
out
repnz
sti
cmp
retf
retf
clc
test
js
js
cdq
xchg
and
clc
jmp
dec
lock
push
mov
imul
dec
xchg
mov
xchg
sbb
test
lds
inc
fs
fs
sahf
xchg
dec
xchg
movs
(bad)
test
add
lods
(bad)
xchg
pop
lods
in
scas
retf
pop
int3
cmc
sbb
adc
call
es
jecxz
and
ds
mov
mov
data16
scas
lods
cmp
pop
stos
xchg
cmp
ficomp
int
mov
cmp
call
repz
addr16
add
retf
and
out
pop
dec
adc
lods
fist
lock
pusha
sahf
mov
lahf
ffreep
mov
fdiv
mov
mov
outs
sub
cwde
and
push
test
pop
les
sub
pop
in
movs
inc
cmp
xchg
pushf
(bad)
rcl
lahf
js
jmp
fld
pop
aas
fisubr
mov
mov
adc
out
dec
pushf
push
fidiv
iret
and
pop
test
mov
repnz
push
ficomp
inc
(bad)
popa
cmp
daa
jns
cli
push
in
lea
inc
je
and
adc
mov
pop
in
das
dec
pusha
jmp
movs
dec
inc
xor
(bad)
into
xchg
sub
or
outs
(bad)
fadd
dec
inc
jns
test
arpl
icebp
pop
imul
loop
pop
xor
dec
adc
jae
and
(bad)
sbb
in
mov
push
xlat
mov
test
cmps
cmp
lds
loop
outs
mov
scas
sbb
outs
jecxz
dec
out
jb
mov
ret
jg
jmp
dec
mov
jbe
dec
and
pop
fsubr
(bad)
cmp
pop
cmp
fistp
(bad)
scas
jmp
sub
(bad)
call
cmp
ins
adc
push
in
stos
add
xor
dec
icebp
jge
xor
sub
add
sub
retf
cmp
test
inc
outs
mov
clc
inc
jbe
push
jecxz
lahf
mov
xor
push
fcmovnu
jmp
arpl
inc
out
cmp
test
and
push
mov
les
popf
xchg
fistp
xchg
frstor
pushf
popf
jge
inc
mov
xchg
enter
jnp
dec
cwde
jno
add
int3
xchg
xchg
dec
or
test
cld
adc
fs
enter
add
mov
cmps
sub
out
pop
xchg
nop
xchg
out
add
jno
ins
push
mov
sbb
aad
mov
xor
fild
shl
pop
push
xchg
mov
enter
shl
push
imul
mov
sub
jo
adc
push
jmp
push
cmps
cmp
into
stos
adc
lock
inc
xchg
popf
cdq
(bad)
les
cmp
retf
popf
jecxz
cmp
leave
out
cmp
arpl
jecxz
sub
out
xchg
and
scas
pusha
retf
mov
addr16
or
call
cmp
jmp
push
outs
shr
ret
jb
jno
lods
popf
sub
push
jmp
sub
leave
adc
pop
push
neg
mov
xabort
inc
mov
out
jg
cmc
xchg
dec
(bad)
push
mov
cmp
and
dec
(bad)
std
push
leave
fdivr
mov
mov
xchg
rol
xor
sahf
std
ss
and
repnz
xchg
loop
cli
loopne
adc
pushf
jnp
mov
loopne
cmp
xchg
outs
iret
stos
daa
fnstsw
inc
fdivr
push
mov
xlat
cld
jo
clc
pop
mov
scas
add
ins
pop
push
mov
cvtps2pd
mov
test
mov
and
mov
fadd
aam
rol
ss
ins
fdiv
mov
pop
scas
clc
cmp
and
xchg
imul
dec
stc
jne
fst
xor
jbe
dec
inc
out
jge
sar
xor
ja
adc
sub
and
dec
adc
div
adc
jbe
out
ret
lods
cmp
or
mov
xchg
add
test
sahf
sbb
xor
cmc
jae
dec
xchg
enter
int
ins
aaa
sbb
pop
push
adc
and
xchg
ins
mov
mov
in
push
retf
inc
and
dec
test
ret
test
out
cwde
mov
mov
jecxz
mov
test
mov
addr16
push
test
das
lock
inc
rcpps
push
jns
jae
rcr
arpl
leave
stos
idiv
das
hlt
rcr
lahf
cmp
push
int
ss
daa
(bad)
(bad)
lock
push
pop
ds
jno
or
or
dec
ror
inc
imul
lea
nop
lds
xchg
pop
clc
lock
ja
jp
xchg
mov
inc
shr
xor
lods
rol
data16
adc
mov
and
ins
stos
mov
push
js
push
push
fidivr
lock
sbb
(bad)
jbe
push
call
repz
sub
jno
dec
pop
int3
jbe
fidivr
mov
and
inc
inc
stos
cmp
pushf
shr
(bad)
pop
mov
jne
sti
sub
adc
call
mov
mov
sub
mov
xor
fdiv
push
and
dec
es
add
lods
shl
push
cmp
adc
loope
or
pop
call
retf
test
or
pusha
or
adc
fwait
arpl
mov
sub
mov
cs
ja
jge
icebp
lods
lea
pop
sub
loop
setne
mov
xlat
adc
mov
jle
pop
ins
mov
fwait
je
jmp
adc
into
inc
nop
inc
outs
fs
pop
jge
cmp
sbb
mov
adc
fistp
cmp
add
faddp
pushf
sbb
and
call
ins
fild
pop
pop
scas
retf
pop
push
stos
lea
or
lds
push
xchg
add
pop
mov
lock
and
jmp
fidiv
push
out
outs
mov
out
aam
xchg
dec
sbb
int3
fcmovu
fidivr
push
mov
stos
ds
and
cmps
jmp
ror
or
arpl
or
(bad)
dec
push
outs
les
adc
fild
(bad)
int3
out
int
xchg
ins
aad
jo
cmc
(bad)
cmp
mov
popa
retf
pop
test
fndisi(8087
jp
sti
or
out
sbb
cpuid
or
mov
cli
aas
mov
inc
push
xor
std
movs
rcl
jmp
sbb
loopne
dec
in
lods
pop
mov
je
xchg
xchg
aad
sbb
jmp
ins
imul
sti
outs
das
pop
mov
mov
lds
fs
aaa
stc
jge
ret
rcl
lods
pxor
mov
xchg
xchg
jno
pop
rcl
add
mov
mov
sbb
add
jge
pop
sti
jge
icebp
pop
mov
add
pop
(bad)
rcr
leave
sbb
xchg
adc
or
mov
pop
mov
jne
jl
xchg
mov
add
je
xchg
cld
div
xor
jle
xor
or
push
in
fst
out
(bad)
out
call
in
je
cmp
mov
mov
imul
inc
std
mov
mov
cli
shr
int
xchg
mov
or
es
mov
in
pop
mov
or
pusha
pop
mov
xchg
jno
js
xchg
pop
xchg
leave
movs
lods
pop
ja
push
stc
fsub
(bad)
addr16
sbb
push
jmp
dec
adc
cmp
cmp
inc
sar
sub
push
neg
add
dec
gs
scas
xchg
adc
push
cmp
xchg
shl
out
jle
shl
xchg
mov
imul
shl
std
pop
mov
sub
mov
nop
fwait
das
movs
sbb
in
add
(bad)
mov
push
dec
dec
push
pop
das
pop
mov
xchg
loope
inc
fisub
xchg
mov
popf
or
lods
pop
mov
icebp
inc
lods
inc
mov
xor
pop
cmp
dec
ja
jns
cld
push
rol
xchg
mov
ffreep
je
sub
add
mov
sar
push
pop
ffree
ror
bswap
stc
xchg
adc
xchg
ror
fild
movs
push
fstp
push
sbb
cmps
push
outs
and
mov
jnp
sub
(bad)
xor
ins
push
test
dec
xor
movs
cs
or
pop
stos
fidivr
xor
cmp
cs
je
sub
jbe
rcl
push
cs
or
xlat
sub
cmps
mov
push
pop
push
lahf
jecxz
icebp
cmp
call
das
sbb
and
cmp
repz
or
push
and
jmp
cmc
xor
js
pop
out
loopne
out
xchg
mov
and
in
xchg
ds
sub
mov
std
addr16
loopne
(bad)
ficom
shr
add
loop
stos
xchg
js
js
scas
je
lock
jl
cli
pop
movs
outs
and
inc
mov
cmp
mov
xchg
or
add
cmp
jne
push
mov
lahf
sub
xchg
pop
lea
neg
inc
inc
and
inc
cmc
pop
sbb
push
(bad)
scas
xchg
dec
push
mov
sbb
sahf
icebp
sbb
mov
pop
mov
mov
pop
in
(bad)
sub
xlat
xor
jo
cmp
ja
xor
(bad)
pop
jo
lods
stos
imul
scas
sbb
and
int
push
test
cdq
retf
loope
(bad)
stc
xchg
sti
mov
lods
cld
inc
out
mov
mov
adc
push
test
test
sub
out
xchg
int3
gs
fiadd
or
mov
(bad)
scas
add
add
push
popf
fwait
or
bound
nop
aad
dec
nop
ss
scas
xor
imul
movs
sub
push
sbb
ds
mov
int
cs
sar
retf
cmc
aaa
test
stos
rol
push
ror
push
dec
adc
mov
std
fwait
cmp
push
mov
dec
imul
inc
inc
dec
push
out
fs
call
out
js
jo
sub
mul
push
out
sub
sub
repz
dec
imul
sub
mov
stos
cwde
sar
cli
out
dec
mov
popa
jg
or
inc
dec
pop
adc
push
(bad)
adc
mov
add
bound
and
sbb
std
fisttp
jp
lea
push
xor
and
not
xor
adc
stos
in
cs
xor
movs
hlt
repz
inc
loope
sub
das
loop
mov
push
popf
inc
jecxz
xor
sbb
cmps
int3
out
jecxz
mov
pop
push
sti
jbe
clc
add
in
bound
imul
jecxz
xor
scas
sar
sbb
jp
mov
push
std
loop
sbb
push
add
mov
out
in
idiv
sbb
xchg
pop
adc
or
retf
je
cli
xor
inc
in
xor
mov
gs
int3
cld
stos
inc
cmp
push
adc
cmps
mov
xor
xor
jne
scas
pop
xor
pushf
pusha
test
cli
out
cmp
xchg
mov
adc
push
clc
pushf
inc
nop
shl
inc
fcomp
push
call
ret
into
push
inc
xchg
ins
lahf
jb
dec
mov
or
(bad)
jnp
mov
sti
dec
cmc
mov
sysenter
jecxz
mov
lods
mov
mov
ins
test
inc
and
scas
(bad)
daa
lds
adc
inc
fiadd
dec
or
out
std
loop
cld
fs
jp
xchg
push
jge
add
clc
jbe
jns
push
scas
or
daa
adc
dec
nop
inc
ret
xchg
fstp
push
and
lea
loop
cs
outs
ins
ret
mov
sbb
cmp
xor
adc
ret
test
add
cmps
ror
inc
pushf
das
dec
sahf
dec
pop
enter
sar
adc
movs
sbb
jo
ror
adc
jno
in
stos
ins
xchg
pop
adc
inc
int
cmp
cli
movs
and
mov
in
(bad)
mov
add
cmps
xchg
push
and
dec
xchg
push
jecxz
ins
into
mov
inc
test
in
hlt
loop
(bad)
jns
stos
dec
cmp
sbb
add
es
cmp
out
(bad)
cmc
xor
inc
(bad)
add
xchg
adc
sahf
scas
sbb
(bad)
fcomip
inc
fucompp
inc
mov
loop
sbb
pop
pop
lahf
fsubr
ss
js
ror
mov
stos
(bad)
pop
cli
mov
pop
dec
enter
xor
push
(bad)
arpl
inc
add
or
push
mov
ins
out
test
les
gs
psubw
push
mov
sub
stc
mov
add
ja
inc
jns
inc
loope
push
in
and
push
adc
repz
push
out
inc
mov
push
ins
out
aas
jo
pop
rcl
loopne
cli
sub
push
or
cmp
sub
cmps
inc
dec
lahf
bnd
out
and
sbb
sbb
test
mov
fsubr
xchg
sbb
loope
mov
pop
ficom
ja
retf
fcmovne
sub
(bad)
in
jns
bound
call
cmps
adc
sub
push
sbb
push
push
int
dec
aaa
mov
call
aam
xchg
fs
repnz
and
test
or
push
add
call
inc
adc
jmp
out
aad
vunpckhpd
rol
mov
jne
loopne
xchg
cli
xor
pop
dec
popa
push
and
jne
or
(bad)
aad
or
test
js
xor
inc
mov
sub
test
loop
xor
cdq
mov
fidivr
imul
cmp
add
clc
cmps
or
mov
mov
dec
push
fidivr
add
xchg
pop
sbb
jnp
sar
gs
mov
(bad)
cmp
(bad)
mov
mov
adc
jo
xchg
mov
xor
ret
xchg
addr16
call
int
cmp
popa
(bad)
cmp
pop
inc
add
jmp
and
push
push
inc
sub
xor
dec
dec
mov
xchg
pop
dec
push
push
mov
out
fwait
test
jno
pop
out
cld
fsubr
pop
fisttp
inc
retf
mov
mov
sti
in
push
aas
addr16
cmc
cmp
mul
mov
mov
rol
sbb
cmp
call
bound
xor
sar
mov
xchg
sbb
movs
xor
sbb
pop
retf
sbb
nop
cmp
lea
push
rcl
shr
mov
adc
push
xchg
jb
shl
lods
imul
jmp
jecxz
inc
or
int3
pushf
test
ja
pop
pop
lods
pop
and
push
icebp
daa
xchg
std
sahf
dec
mov
ins
push
add
mov
nop
jle
int3
xchg
lods
mov
or
or
pop
cmp
xchg
xchg
(bad)
mov
pop
leave
mov
call
test
mov
xor
sub
jge
jae
lock
jb
clc
imul
pop
pushf
cdq
lods
sahf
xchg
dec
sub
push
bound
push
jb
shl
cwde
or
add
sbb
or
int3
ror
inc
shl
mov
pusha
mov
mov
out
sbb
retf
mov
fldenv
pop
mov
or
xor
movs
and
in
pushf
idiv
or
cmp
cmp
mov
outs
pop
jnp
inc
daa
mov
hlt
pop
sahf
adc
or
or
ins
repnz
leave
repz
call
fwait
movs
fisub
mov
in
nop
lods
sbb
pop
pop
adc
cmp
dec
sar
adc
sub
fcomp
popf
jnp
add
mov
xor
mov
pop
repnz
mov
mov
pop
loope
add
jb
mov
xchg
test
mov
push
pusha
pop
call
loopne
cs
mov
es
dec
jae
mov
or
cld
daa
xchg
(bad)
cli
mov
(bad)
and
mov
retf
jne
movs
mov
fsubp
ret
aam
xchg
pusha
pop
or
test
sub
inc
xor
inc
xchg
sub
dec
cmps
jae
sub
jle
test
cld
out
xor
push
sub
inc
xchg
push
fadd
(bad)
in
jne
loopne
inc
mov
retf
(bad)
int3
and
xchg
inc
cmp
push
scas
retf
fmulp
das
pushf
adc
xor
add
out
xor
pop
sbb
call
dec
jecxz
(bad)
sbb
out
ins
xor
or
mov
movs
scas
enter
int3
pop
cmp
jmp
outs
inc
fbstp
inc
scas
jb
sbb
fidivr
xchg
adc
jae
xor
mov
inc
fcom
xor
push
sub
shrd
arpl
push
sub
add
adc
push
add
adc
pop
xor
adc
sbb
je
pusha
fidiv
cld
mov
out
in
cmp
sbb
mov
mov
xchg
call
retf
sbb
leave
push
(bad)
mov
or
ret
or
mov
jmp
sbb
jmp
cmp
je
dec
or
jge
cs
nop
sbb
mov
test
mov
sahf
call
adc
int3
pop
jge
imul
add
mov
cmps
shr
scas
pop
xchg
mov
jmp
or
sbb
push
aad
xor
dec
scas
test
dec
sub
cmp
xor
mov
xor
stos
idiv
lahf
sub
lods
in
in
je
lods
add
add
push
fisubr
outs
retf
movs
addr16
dec
arpl
movs
push
pop
js
pop
or
add
stc
sub
xchg
xor
je
icebp
fcmovnbe
out
cwde
sub
out
hlt
mov
mov
(bad)
jne
mov
shr
ret
adc
push
jmp
pop
xchg
mov
cli
cmp
jecxz
jae
sbb
lock
jno
ss
iret
cmp
dec
mov
nop
test
test
shl
rcr
adc
and
mov
pop
xor
push
add
mov
retf
dec
lock
xor
xchg
sbb
data16
imul
and
cmps
pusha
jb
and
dec
fsubrp
add
xor
ds
stos
mov
stos
xchg
fwait
fwait
test
test
pop
fst
shl
fwait
scas
mov
push
pusha
in
lahf
xlat
push
aaa
inc
mov
add
loop
pop
jo
retf
mov
jns
xchg
dec
mov
push
inc
movs
mov
fdivr
jmp
out
enter
rol
inc
in
outs
pop
(bad)
push
sub
popf
das
dec
mov
mov
dec
stos
loope
and
outs
jmp
mov
shl
push
mov
in
mov
push
fld
push
lods
mul
test
inc
(bad)
jbe
xor
outs
test
dec
pop
mov
arpl
dec
lock
mov
and
jo
in
leave
jl
(bad)
aaa
adc
jne
sub
in
jecxz
cmps
(bad)
mov
(bad)
pop
or
scas
push
xchg
pop
and
jl
scas
adc
xchg
mov
xchg
movs
pushf
xor
test
ud2
repz
push
xchg
cmp
pop
xlat
sbb
cs
push
mov
jmp
loope
pop
push
jmp
lods
hlt
fs
shl
add
adc
ret
outs
push
in
and
sub
test
xchg
fcomi
mov
daa
sar
mov
xor
into
stc
pop
mov
out
sub
inc
cmp
out
ret
fsub
add
adc
push
fist
jno
cmp
cmc
rcr
aas
scas
xchg
scas
cmp
xor
add
dec
cmps
(bad)
loop
sbb
pop
aam
xor
outs
lds
sbb
retf
ds
les
test
or
mov
cmps
xchg
dec
jbe
inc
mov
test
push
fs
in
inc
mov
sub
inc
cwde
aad
sbb
cmc
pop
add
adc
cmp
int3
scas
inc
ds
pop
dec
add
sti
lods
xchg
lods
jg
xchg
xchg
adc
sub
mov
sahf
aad
cs
hlt
call
push
out
js
test
sbb
in
sti
jno
adc
mov
imul
mov
aad
mov
test
retf
sbb
pop
stos
sbb
push
dec
or
dec
stos
movs
(bad)
cmc
adc
test
pusha
mov
test
fwait
dec
ret
gs
sti
jb
outs
inc
out
inc
sub
jb
loop
ret
mov
(bad)
(bad)
sbb
sub
add
add
ins
mov
lods
data16
cmps
cmp
addr16
push
inc
xchg
mov
mov
or
mov
mov
xchg
pop
dec
out
stos
adc
clc
jle
out
leave
sub
pop
cs
hlt
arpl
pop
pop
cmps
lods
aas
pop
lods
imul
out
scas
scas
inc
addr16
jne
aaa
and
pop
lds
and
rol
xor
shr
mov
ss
bound
jns
push
mov
rcr
int3
push
cmp
push
dec
popa
push
pop
xlat
scas
mov
mov
fld
out
hlt
xor
pushf
clc
xchg
add
(bad)
jnp
pop
ret
sahf
and
(bad)
pushf
cmc
popa
cli
out
adc
into
dec
shr
push
xchg
jno
(bad)
jl
in
mov
repnz
ret
or
stos
push
push
hlt
aad
mov
mov
into
xor
cli
add
out
das
ret
mov
(bad)
out
cmp
and
ror
test
dec
cld
jg
(bad)
shl
pop
scas
jg
out
xlat
dec
xor
aas
dec
mov
ror
pop
xchg
sbb
in
sub
dec
gs
(bad)
pusha
ss
adc
push
pop
ret
sbb
jo
mov
xor
mov
iret
popaw
cmp
sbb
adc
mov
jl
add
push
cmovs
jne
aam
(bad)
out
nop
xchg
mov
shl
retf
inc
in
out
out
push
cmp
xor
fisub
cmp
les
push
pushf
pop
pop
or
movq
pop
into
lods
sbb
fbstp
sub
xor
push
sub
dec
(bad)
int3
imul
and
mov
xchg
pop
cmp
fadd
xor
idiv
jne
int
scas
pop
popa
loope
push
mov
dec
dec
movs
fwait
out
in
mov
mov
xchg
add
sub
inc
pop
lahf
cmc
xchg
push
jns
call
pop
les
cmc
rcr
out
mov
sub
push
in
mov
mov
lods
add
xchg
fistp
mov
lahf
xchg
sub
test
movs
sbb
dec
in
pop
movs
imul
lods
leave
fmul
add
push
sti
mov
leave
fimul
push
inc
ins
add
mov
jnp
cmp
or
or
xchg
mov
jns
or
sub
xor
inc
or
cmp
shl
inc
(bad)
fs
push
ret
or
into
popa
cmp
rcl
xor
pop
out
sbb
pop
and
jo
sbb
cmp
sub
add
sbb
imul
adc
pop
or
xor
or
dec
adc
retf
mov
(bad)
mov
pushf
repz
(bad)
cmp
cld
cwde
int3
and
jg
lds
shl
ins
adc
sbb
xor
inc
pushf
pop
addr16
rcr
arpl
fimul
gs
fs
int3
repnz
in
(bad)
cli
xchg
lods
and
jno
je
lods
in
out
addr16
stc
fidivr
mov
ret
jno
loopne
mov
movs
xchg
scas
xchg
mov
int3
pop
dec
into
sti
dec
jb
int
imul
or
imul
cdq
jo
xlat
inc
inc
sbb
leave
pop
xor
cvtps2pi
dec
and
cwde
stos
jae
mov
push
lods
adc
jl
shl
scas
cmp
call
sub
movs
shr
inc
pop
not
lea
scas
adc
sbb
int3
bound
fild
lods
cmp
in
movs
add
jp
aas
sub
xchg
mov
sti
mov
xlat
(bad)
aaa
sub
mov
jb
or
pop
ret
push
xchg
dec
jp
push
pusha
inc
cmp
dec
sahf
jp
adc
pop
dec
lods
inc
fnstsw
in
bound
imul
jp
leave
xor
fsub
mov
inc
aaa
shr
cmp
hlt
sar
mov
mov
pop
sub
ror
sub
mov
scas
retf
lock
adc
ret
cmp
addr16
push
add
aas
out
shr
ins
mov
shl
xor
call
inc
mov
sbb
scas
(bad)
fcom
stc
in
mov
mov
scas
and
mov
push
push
aas
(bad)
dec
popa
gs
(bad)
inc
or
into
rcr
out
and
lahf
sbb
test
outs
lods
xor
outs
js
shl
pop
jne
hlt
and
ins
mov
lock
out
out
cmp
mov
mov
or
(bad)
sti
scas
test
xchg
shr
dec
sbb
jns
bound
push
inc
pop
ins
cli
pop
iret
cmp
push
test
ds
movs
pop
add
(bad)
stc
mov
sub
jp
hlt
add
mov
popf
stos
cmp
fist
inc
or
cmp
pop
dec
xor
jmp
loope
mov
(bad)
pop
mov
xchg
icebp
outs
pop
adc
ret
popa
(bad)
pop
ins
dec
test
fwait
xchg
and
inc
adc
outs
sbb
dec
sbb
div
cs
sub
mov
pop
pop
xor
dec
dec
frstor
sbb
pop
sbb
or
adc
cmp
adc
sar
dec
inc
loop
ins
(bad)
dec
hlt
jb
sub
clc
pusha
sbb
push
in
mov
lea
sbb
jp
int3
or
ja
aam
mov
outs
es
and
xor
popf
(bad)
push
fs
je
sub
push
push
xchg
loopne
ror
in
mov
inc
mov
int
xchg
push
sahf
std
loopne
cli
mov
push
mov
push
cmp
std
pop
icebp
push
mov
push
adc
sub
inc
outs
adc
pop
out
dec
jb
movs
pop
or
jle
xor
sar
scas
and
inc
xor
jmp
fsubr
cli
(bad)
fprem1
xor
cli
cmp
ins
fcomp
inc
sbb
ja
stos
push
mov
in
out
or
adc
iret
sbb
push
test
mov
loopne
push
fstp
pop
jno
xchg
sub
xchg
push
(bad)
cmps
xor
aam
add
in
jbe
clc
push
push
ror
shl
fs
int
and
cmp
mov
ret
push
int
lds
or
scas
pop
inc
idiv
or
jl
popa
jecxz
loopne
fild
and
repnz
xchg
sbb
xor
add
mov
ror
sbb
add
add
mov
repnz
sub
mov
mov
je
retf
scas
mov
pushf
data16
mov
fidivr
dec
pushf
mov
cmp
and
mov
ds
imul
int
adc
jo
dec
dec
aad
fadd
cmps
inc
scas
popf
frstor
mov
fsubr
sub
cwde
and
inc
push
sar
xchg
dec
dec
rol
fisub
pop
lods
push
jp
sahf
fidivr
sub
ror
ins
fistp
xchg
aaa
push
sbb
call
scas
loopne
push
inc
int
cmps
push
push
ins
or
mov
lods
fwait
lock
jbe
popf
and
movs
and
xchg
inc
sub
enter
xchg
fimul
fisubr
sbb
sbb
xchg
shl
shl
add
fs
mov
mov
movs
cdq
pop
mov
inc
mov
xor
bound
cli
add
ins
mov
ins
sbb
in
adc
jmp
cmp
jo
xchg
push
fdivr
jbe
mov
movs
jo
pushf
mov
jae
pop
mov
retf
add
push
sbb
sbb
cs
addr16
mov
ret
retf
sbb
xor
mov
in
and
shl
adc
adc
inc
cmp
adc
sub
imul
push
addr16
inc
xor
mov
mov
clc
mov
push
imul
test
add
cdq
stos
cld
sbb
adc
arpl
and
add
jecxz
(bad)
arpl
mov
dec
jns
mov
mov
loop
pop
push
stos
fidivr
or
fisubr
xchg
add
push
pop
inc
arpl
sti
fdiv
das
and
and
mov
jp
mov
int
sub
movs
jno
add
retf
imul
sbb
jecxz
and
adc
in
lock
sahf
or
cdq
add
ins
out
pop
fcomi
mov
int3
dec
mov
xlat
mov
or
scas
dec
inc
fs
add
mov
and
mov
pop
and
push
rol
(bad)
jp
xlat
jge
dec
test
and
in
adc
mov
xchg
inc
ret
xchg
(bad)
ret
cmps
cmp
pushf
rcl
push
mov
cmp
in
and
pop
les
ficomp
shl
xchg
jae
int
xor
ret
sbb
ret
loopne
mov
jns
sub
sbb
jne
jp
mov
(bad)
xor
shl
(bad)
mov
hlt
cli
pushf
retf
lods
and
jnp
cmp
xor
cmp
jl
mov
inc
stos
mov
mov
lahf
xor
jmp
rcl
pop
lods
push
lods
std
pop
mov
retw
sub
bound
dec
in
inc
adc
test
jae
jl
dec
mov
fbstp
(bad)
cdq
or
cmc
ds
fisttp
push
sti
gs
les
or
ds
dec
adc
test
or
into
loop
adc
sub
adc
xchg
or
and
pop
lods
out
or
sti
cmps
xor
mov
out
or
push
test
cmp
lods
gs
mov
js
stc
mov
movs
or
pusha
jecxz
int3
clc
ret
pop
dec
xor
loopne
jnp
cmp
cwde
outs
pop
pushf
pop
jns
aad
cmp
cmp
clc
cld
scas
shl
rcl
cmp
(bad)
pop
sub
push
cld
scas
out
ss
ret
out
dec
fs
fiadd
inc
inc
call
int
call
out
jmp
push
retf
ror
inc
hlt
fsubr
mov
test
mov
xchg
(bad)
jg
mov
xor
xchg
lds
mov
jno
stos
iret
paddusw
mov
sub
adc
xor
cld
ins
push
fst
iret
mov
mov
(bad)
dec
sbb
cmps
push
push
dec
xchg
cdq
aaa
and
pop
(bad)
jge
imul
inc
(bad)
adc
dec
in
fld
shl
xor
xchg
cdq
outs
and
jecxz
nop
cmp
mov
test
jecxz
sbb
push
xchg
jecxz
(bad)
dec
xor
sbb
cld
xor
stc
push
xor
and
jp
std
test
push
dec
call
jmp
(bad)
mov
fsub
push
outs
push
mov
retf
push
cmp
inc
cmp
(bad)
cmps
pop
jecxz
popf
inc
or
sbb
add
pop
mov
cmp
into
push
icebp
bound
dec
inc
ret
ss
pop
test
add
pop
push
and
adc
or
dec
ror
push
adc
xchg
stc
bound
lea
jo
jmp
(bad)
and
xchg
out
cmp
leave
cli
cmc
add
jae
shl
dec
in
popf
cmp
push
int
add
and
sub
call
imul
test
stc
lods
sbb
jns
inc
lea
add
icebp
stc
test
loope
xchg
xor
push
mov
popa
lds
dec
and
pop
fisttp
nop
rcl
dec
xchg
adc
xchg
and
retf
shl
movs
jnp
dec
jne
rcr
pop
imul
sub
mov
sub
jmp
mov
and
sub
mov
cs
mov
adc
push
and
shl
shl
cmp
hlt
mov
jo
jne
inc
cmps
push
ss
mov
stc
(bad)
mov
and
xor
jne
ss
xor
cmp
in
sbb
inc
adc
data16
sbb
xchg
lock
movs
jmp
hlt
dec
(bad)
les
mov
scas
sub
nop
cmp
scas
das
inc
adc
push
(bad)
jg
gs
cwde
cmps
inc
pop
cs
loop
int3
fdivr
add
mov
stos
pop
add
lods
rol
push
cmc
cmp
stos
nop
sbb
mov
jns
sbb
xchg
das
xchg
iret
xor
call
(bad)
pop
sub
jae
loopne
shl
daa
test
sub
ins
add
xor
mov
test
pop
xchg
adc
sbb
lods
ja
sbb
(bad)
ror
pusha
in
aas
xor
mov
out
inc
stc
imul
jg
lahf
mov
jge
movs
and
dec
mov
xor
adc
push
pusha
add
(bad)
mov
ja
stc
cmp
push
movs
or
nop
cs
lock
mov
sbb
jb
scas
sub
xor
cmp
(bad)
ret
sub
mov
out
xchg
jo
jl
jbe
scas
xlat
adc
fcmovnbe
repnz
xchg
cdq
jle
push
out
push
fcos
inc
jg
jg
or
jmp
dec
xor
lea
add
xchg
jmp
xchg
mov
test
and
into
cmc
test
mov
repnz
xchg
xor
sbb
mov
jg
out
inc
mov
shr
sbb
or
push
rcr
push
shr
outs
pop
lods
sahf
fnsave
and
out
repnz
cli
push
test
test
cmp
fldcw
mov
mov
call
lods
ss
stos
cmp
cmps
imul
pop
xchg
out
(bad)
xchg
or
sahf
addr16
stos
adc
mov
fld
inc
mov
pop
fdivr
dec
stos
sub
mov
addr16
mov
mov
add
int
aaa
daa
adc
mov
push
xor
inc
jb
scas
cmps
mov
xchg
outs
leave
adc
inc
mov
stos
test
enter
aaa
popa
jp
jge
inc
ins
ror
xchg
(bad)
sbb
scas
jnp
jle
sub
dec
test
sahf
sub
sbb
into
(bad)
ds
dec
jecxz
aas
retf
pop
mov
pop
mov
mov
xor
clc
and
jl
(bad)
into
push
retf
xor
push
js
addr16
adc
dec
fcom
data16
ret
sbb
push
cmp
jno
cdq
in
test
mov
aaa
ss
add
aaa
sbb
inc
in
fcmovu
not
lock
fld
adc
call
sbb
jns
cmp
std
bound
fsub
jge
inc
fild
sub
in
lock
push
cld
sub
fdivp
mov
call
or
mov
ins
sub
dec
imul
push
inc
(bad)
xor
or
mov
ror
jmp
or
inc
or
pop
mov
(bad)
js
inc
or
test
daa
psubsb
aaa
and
and
mov
or
jge
and
cmps
dec
jo
and
(bad)
dec
aam
in
outs
aad
fld
cmp
xchg
fild
push
adc
mov
aad
xchg
outs
mov
sub
inc
iret
fadd
and
xor
mov
hlt
dec
fild
push
cmp
pop
push
leave
(bad)
mov
lds
mov
test
mov
cdq
xlat
lock
fwait
and
mov
ficom
xchg
jecxz
stos
aas
das
imul
popf
add
xor
xor
add
shl
push
mov
add
pusha
mov
lods
jmp
sbb
shl
xor
push
cmp
mov
scas
call
stos
not
not
and
fild
jmp
dec
mov
mov
xor
imul
cmp
ret
loope
jecxz
into
and
sbb
aam
aad
in
xor
loop
push
cdq
mov
xchg
adc
push
push
test
jmpw
pop
lods
add
jmp
xchg
mov
in
or
jnp
sub
jb
in
fdiv
mul
mov
jge
daa
shl
aaa
inc
(bad)
out
xor
xor
sbb
test
xchg
dec
sbb
shl
daa
mov
or
imul
push
outs
imul
mov
les
dec
cmp
pop
mov
push
adc
mov
inc
xchg
or
xchg
es
inc
sub
cli
outs
shl
imul
sub
inc
aad
pop
repz
stos
aas
scas
mov
int
mov
bound
fst
or
out
lock
retf
cwde
push
adc
shl
jl
adc
pop
jb
retf
(bad)
addr16
or
cmps
pop
lock
shr
rcr
es
popa
call
add
and
mov
cmp
(bad)
push
xor
or
ins
ja
fwait
sub
sub
mov
jb
in
dec
mov
add
jnp
cmp
aam
push
cmps
loopne
(bad)
push
xlat
adc
int
jo
call
fild
cmps
aad
mov
int
push
(bad)
daa
sub
sub
adc
ret
mov
mov
in
and
scas
cmp
rcl
mov
cwde
or
fs
and
xchg
push
sub
cld
mov
aad
inc
dec
pop
dec
jmp
dec
mov
into
into
sub
xchg
ins
xchg
xor
ss
jmp
hlt
scas
mov
xor
test
inc
pop
cmps
scas
fisttp
aad
test
or
cmp
rcr
mov
jecxz
es
mov
fdivrp
jns
cmp
jle
cmp
dec
sahf
and
dec
xchg
sbb
jp
arpl
or
pushf
outs
aam
add
mov
jo
cmp
(bad)
xchg
loop
pop
inc
push
pop
add
xchg
add
test
jmp
sub
sub
push
fwait
inc
fild
jmp
add
addr16
or
push
lods
rcr
in
test
repnz
loope
xor
mov
or
pop
mov
or
out
jge
xor
pop
jle
rcl
mov
pop
aad
(bad)
call
repnz
out
cmp
ror
test
adc
add
jno
retf
xchg
dec
fisttp
pop
sub
jle
mov
les
pop
(bad)
sti
xor
ss
inc
xor
pop
or
fldcw
lea
hlt
cmp
test
adc
movs
push
pop
mov
nop
rcr
mov
mov
shr
and
out
test
loopne
hlt
sti
sbb
lahf
push
scas
fcmovbe
pop
mov
jge
icebp
xor
ret
popf
push
xor
xor
xlat
ret
out
jns
je
cmp
lea
inc
adc
stos
add
add
cmp
cmc
push
sar
iret
and
pop
xlat
movs
or
dec
add
hlt
scas
inc
and
inc
adc
jae
push
pushf
and
xlat
inc
add
mov
arpl
sar
ror
pusha
xchg
dec
cdq
mov
push
mov
inc
fwait
xor
test
mov
data16
add
push
rcr
pop
imul
rcl
dec
clc
mov
aas
pusha
fidivr
movs
fld
in
mov
xchg
jno
ret
aam
jl
xchg
dec
sbb
mov
or
inc
xchg
mov
enter
mov
enter
xchg
dec
jbe
test
cdq
cmp
pop
popa
sahf
pusha
cmps
adc
push
iret
(bad)
or
and
(bad)
cli
or
sbb
cmp
movs
dec
dec
lds
cmc
cld
out
jl
hlt
icebp
mov
out
fbld
mov
test
sbb
ret
push
popa
ror
or
jp
mov
or
mov
mov
push
das
push
aam
pop
sub
mov
pusha
inc
inc
pop
lock
cdq
jp
into
add
shl
push
mov
sub
in
pop
add
inc
jg
mov
daa
push
icebp
pop
mov
int
or
mov
fild
stc
ins
pop
dec
hlt
sti
cmp
ins
mov
mov
rol
dec
enter
add
and
cwde
or
sbb
or
aam
xchg
cmp
lock
and
mov
sub
dec
seta
jne
shl
xor
xor
push
test
sbb
lahf
call
test
popa
or
and
loopne
mov
hlt
sbb
retf
mov
adc
cmp
test
push
or
mov
mov
(bad)
(bad)
lds
xchg
xchg
mov
les
dec
xchg
cwde
add
(bad)
lock
in
cs
(bad)
into
inc
loop
popf
adc
jae
fsub
and
adc
and
js
sub
iret
sahf
ss
ins
shr
and
adc
cmc
push
out
add
xor
dec
jne
retf
inc
stos
or
pop
pop
or
xchg
lds
seto
xchg
test
inc
jne
sahf
xchg
(bad)
jb
test
mov
out
fwait
jnp
loopne
add
lahf
xor
gs
adc
scas
mov
test
inc
stc
mov
repz
jl
in
jmp
faddp
inc
(bad)
shl
pop
xchg
pop
pop
outs
xchg
fidiv
push
jmp
xchg
inc
jl
jmp
and
test
rol
inc
test
daa
sar
mov
test
push
sbb
(bad)
adc
ret
xlat
push
lds
jge
out
and
jne
out
dec
jmp
ret
mov
jle
sub
pop
jl
push
mov
sbb
test
fist
fxch
adc
mov
dec
scas
mov
pop
daa
pop
xlat
int
cmps
cwde
xor
rcr
mov
pop
rcr
mov
adc
(bad)
stc
je
ret
movs
pop
push
sub
jge
fcom
xchg
ins
leave
ret
int3
fwait
dec
jo
ror
cmps
js
mov
or
fcomp
ror
loope
lahf
outs
or
mov
dec
pop
sbb
sbb
ja
push
mov
and
clc
push
ss
lods
xchg
cwde
ins
adc
jne
xchg
es
imul
(bad)
fcmovnb
sub
shld
sbb
adc
data16
xchg
mov
add
add
or
in
xchg
test
ins
cmps
pop
loop
call
mov
add
mov
jp
mov
mov
icebp
pop
xchg
daa
mov
inc
cmp
pop
mov
cli
or
ins
add
cwde
cmp
mov
shl
(bad)
cmp
inc
(bad)
in
push
xchg
shl
(bad)
in
add
push
pop
push
xchg
ror
movs
sbb
mov
movs
lds
or
xchg
xchg
pop
or
test
xor
fistp
in
jno
cwde
inc
lea
adc
jnp
pop
jl
mov
stos
xor
and
sbb
pop
push
sub
cwde
int3
ss
rcr
inc
pop
xchg
in
and
retf
inc
and
mov
jg
cli
inc
jae
js
out
js
test
inc
inc
aam
jl
pusha
call
paddq
cld
cdq
addr16
fst
rcl
push
mov
sub
lahf
clc
push
bound
adc
dec
inc
sub
xlat
xchg
add
movs
std
sub
ins
inc
test
ficomp
lock
iret
ins
gs
dec
sbb
mov
call
adc
out
scas
cs
mov
dec
pop
push
repnz
gs
mov
call
or
inc
pop
lods
sbb
xchg
sahf
cmp
int
or
retf
add
ret
das
dec
repz
icebp
mov
fimul
jl
and
sub
je
jle
adc
inc
pop
(bad)
mov
pop
js
cmp
mov
inc
mov
push
and
rol
icebp
fcom
sbb
dec
test
test
retf
mov
addr16
fisub
cld
outs
nop/reserved
fisubr
out
dec
dec
out
cld
cmps
popa
pusha
add
and
scas
loop
loope
not
mov
jp
in
fwait
cmps
bound
jge
fistp
inc
inc
outs
push
test
cmp
sbb
jmp
loope
push
sub
inc
ss
xor
push
mov
or
(bad)
ret
fldcw
jmp
jl
lock
sub
test
xlat
jns
inc
mul
dec
xchg
std
fild
addr16
inc
pop
in
clc
mov
push
dec
vpcomb
dec
xor
inc
sbb
in
stc
call
xlat
or
(bad)
outs
xchg
cmc
call
fisub
add
fdivp
mov
(bad)
arpl
mov
mov
xchg
mov
adc
ror
scas
outs
pushf
lahf
and
(bad)
mov
sub
xlat
(bad)
sbb
push
sahf
dec
mov
mov
push
mov
mov
jo
dec
shl
in
jmp
ror
inc
mov
mov
cmp
jno
cmp
outs
mov
fwait
mov
inc
test
cmc
mov
retf
sahf
xchg
or
push
ins
sbb
jge
pop
lahf
inc
and
mov
xchg
je
add
call
or
call
outs
iret
pop
scas
popa
mov
aaa
mov
fsub
ja
cmc
cmp
in
mov
mov
cmp
and
jle
sbb
push
ins
cmp
repnz
or
test
add
mov
jb
jo
aaa
inc
imul
out
jns
inc
pop
or
xchg
les
jg
in
ret
sub
xchg
jmp
call
xor
sub
popf
rcr
mov
adc
jmp
sahf
aas
and
jae
call
idiv
adc
popf
ins
mov
in
and
mov
icebp
inc
cld
std
jmp
xor
lods
cmp
mov
push
rcl
mov
jp
repnz
scas
xor
inc
jl
jecxz
lahf
lods
jg
mov
mov
jno
in
dec
lock
push
pop
ins
call
jp
fadd
push
int
cli
xor
adc
adc
push
fcom
ins
inc
sbb
push
and
push
dec
jne
lods
jge
mov
jge
sub
xchg
nop
xchg
stc
fidivr
fwait
scas
icebp
sub
adc
mov
push
pop
aam
mov
or
lods
cmp
ja
dec
sbb
or
cli
xchg
nop
or
push
xchg
cdq
push
test
dec
outs
fidivr
mov
jp
sbb
shl
add
inc
sub
test
mov
in
daa
sbb
cmp
les
cmp
push
inc
mov
xchg
cmps
add
jo
rcl
scas
out
sar
movs
add
inc
xchg
leave
repz
xor
lods
jecxz
push
iret
mov
into
mov
mov
push
mov
inc
pop
and
pop
or
mov
mov
cmps
push
adc
add
mov
sbb
outs
rol
push
sub
pushf
js
dec
pop
fidiv
pop
or
push
or
fisub
push
xchg
sbb
and
jbe
or
sti
loope
test
pop
push
jge
movs
inc
mov
clc
fcomp
test
cmp
mov
push
fisub
cld
(bad)
sub
int
rcl
dec
ins
(bad)
sbb
jp
sub
pop
daa
jo
mov
jp
mov
scas
mov
ror
fild
lds
leave
inc
and
push
inc
jo
xor
rol
adc
stos
int
and
out
and
rcr
pop
nop
in
sti
and
inc
aad
sub
fst
retf
leave
mov
test
out
iret
aas
std
adc
push
outs
mov
mov
mov
adc
popa
pop
test
leave
sub
ins
dec
jecxz
sub
fisubr
mov
cmp
inc
dec
mov
shr
add
int3
ss
push
idiv
inc
daa
fist
mov
inc
std
sub
mov
sub
add
cmp
or
aad
in
sti
mov
mov
xchg
push
ins
fstp
add
push
jno
jbe
out
loope
(bad)
xor
lods
sub
scas
ss
dec
cmc
scas
and
stos
pop
push
hlt
mov
dec
retf
cmp
mov
inc
sub
push
mov
adc
lds
int
add
loop
je
sub
jge
iret
xchg
sbb
out
ds
imul
mov
test
jns
pop
xchg
outs
xchg
or
rol
xchg
inc
leave
mov
stos
mov
(bad)
cdq
cmc
mov
fcomp
sbb
(bad)
mov
jae
xor
scas
inc
fwait
or
(bad)
nop
ja
pop
mov
mov
push
adc
sti
adc
xchg
mov
mov
(bad)
retf
lock
xlat
jo
in
add
clc
xchg
div
iret
sahf
jo
sbb
repnz
xchg
xor
cmp
test
and
jae
or
xor
(bad)
data16
sbb
push
shr
push
pop
cs
es
aas
retf
pop
daa
popf
sub
push
adc
sbb
in
xor
mov
in
rcl
jno
dec
(bad)
es
mov
mov
inc
or
mov
std
or
push
rol
dec
lods
(bad)
or
push
in
cmp
pop
lods
pusha
out
in
mov
add
into
add
mov
sub
out
cmp
retf
add
mov
mov
adc
repnz
adc
sub
xchg
pop
es
dec
sar
mov
outs
fwait
hlt
cmp
xchg
sti
lahf
fadd
and
cmp
sub
int3
imul
push
jnp
cmc
ins
ins
jae
repnz
shl
xchg
inc
in
cmp
and
and
ret
cmp
dec
sub
mov
pop
mov
jb
push
jecxz
daa
inc
sar
or
jle
mov
jge
cmp
outs
int
push
xor
mov
sub
rcr
sbb
pop
dec
daa
or
push
inc
pop
loopne
out
jle
fsub
ret
mov
lods
stos
rcl
jmp
sar
inc
mov
and
sub
imul
adc
dec
outs
jle
adc
fcomp
out
jle
sub
loop
add
pushf
leave
push
xchg
mov
xor
mov
bound
es
cmp
mov
mov
ror
jle
enter
sub
sbb
jmp
int3
jne
imul
add
imul
icebp
(bad)
lods
sbb
inc
fsub
pop
jmp
or
or
pop
dec
sub
movs
loopne
mov
lea
test
ins
les
jb
lods
aam
adc
pop
jae
pop
adc
adc
and
nop
lea
xor
add
inc
adc
mov
mov
ss
rcl
adc
pop
outs
mov
rcr
adc
(bad)
pushf
lds
out
jbe
push
pop
jle
enter
leave
jmp
xchg
leave
in
mov
movs
mov
jns
stos
pop
ror
lods
outs
sbb
call
sbb
cld
and
push
shl
mov
in
ficomp
xor
xor
mov
mov
in
dec
fdivr
and
dec
cmc
fidivr
lods
adc
je
shr
cmp
movs
ror
jnp
sub
xor
movs
push
adc
cmp
jne
and
repz
hlt
bound
stos
cmp
push
div
mov
sub
shr
loop
push
adc
outs
adc
outs
push
or
lods
dec
mov
adc
shl
mov
xchg
inc
adc
mov
push
movs
pop
cmp
adc
(bad)
popa
lds
xchg
sub
inc
retf
je
or
jmp
mov
pop
and
(bad)
push
adc
lea
aam
jo
leave
cmc
in
cmp
push
cmps
pushf
cmp
push
fsubr
dec
(bad)
sbb
iret
xchg
jne
adc
stos
push
scas
jne
arpl
mov
xchg
fcmove
push
xor
scas
lods
out
cmp
movs
(bad)
mov
ficomp
cmp
pop
fwait
ror
mov
lds
xchg
aaa
xchg
mov
mov
mov
test
clc
mov
inc
sbb
mov
and
jg
mov
in
push
jg
jne
sbb
scas
outs
retf
outs
int
outs
xchg
or
jae
movs
fild
mov
mov
std
xchg
ss
das
mov
or
hlt
fdivr
adc
retf
xor
mov
xchg
mov
dec
and
xchg
addr16
push
xchg
mov
push
mov
cmp
jmp
sub
sbb
push
shr
inc
pop
inc
sahf
call
cwde
(bad)
xchg
dec
and
mov
xchg
jle
lds
daa
ins
cdq
mul
ins
push
(bad)
mov
retf
jg
std
inc
ins
dec
out
ins
add
call
xor
sub
and
test
outs
sub
and
push
repz
lahf
mov
loop
jp
hlt
mov
push
push
jmp
retf
aad
xor
cmp
fwait
jb
lds
fnop
dec
into
out
das
add
sub
adc
aad
cmp
out
sahf
iret
mov
inc
fucom
sbb
jbe
inc
fsub
add
or
cwde
(bad)
bound
neg
jns
enter
cwde
stc
jno
adc
or
jno
xchg
jmp
not
(bad)
jg
clc
leave
pop
and
bound
or
xor
jns
push
sbb
lods
fsubr
out
mov
cdq
outs
mov
sub
mov
fcmovnbe
xor
pusha
dec
pop
mov
ret
cmp
test
(bad)
lock
cmp
and
rcr
and
mov
inc
add
fnstcw
cmp
sti
adc
cmp
pusha
test
movs
(bad)
cmc
mov
sbb
pushw
push
aam
scas
push
psrlq
sbb
xchg
call
scas
cdq
mov
mov
ret
inc
(bad)
call
aam
shl
scas
mul
loope
sub
test
ss
xor
aas
push
mov
jl
mov
imul
and
pop
enter
xchg
mov
add
cdq
arpl
inc
adc
gs
push
int
push
movs
es
mov
(bad)
xsavec
mov
pop
ret
mov
mov
xchg
iret
add
adc
mov
xchg
jb
loopne
pop
dec
and
or
xor
adc
popf
outs
jl
int
ins
mov
jo
ins
add
xor
pop
inc
ins
cmp
cli
imul
mov
mov
mov
mov
pusha
idiv
adc
repz
xor
cmp
sbb
das
dec
push
jb
test
push
jns
cwde
shl
sbb
adc
es
push
daa
jns
jmp
test
dec
arpl
sbb
mov
xlat
xor
sub
push
xchg
je
fwait
popf
xchg
outs
int3
cld
bound
dec
jmp
out
icebp
ja
pop
inc
int
stos
jns
fprem
in
sub
push
fucomp
sbb
fucom
arpl
lods
daa
mov
mov
les
imul
sti
int3
loope
xor
sti
mov
push
addr16
and
jg
mov
gs
lahf
fimul
sahf
mov
cdq
lds
push
rol
test
imul
(bad)
sbb
sbb
or
shl
adc
dec
in
sete
xchg
sar
dec
push
mul
xor
adc
mov
aad
cmps
xchg
(bad)
mul
fild
sbb
fdiv
aad
(bad)
data16
mov
nop
xor
loope
fiadd
aad
xchg
add
sbb
pushf
push
xor
aaa
stos
scas
data16
fisub
int3
js
dec
push
js
xchg
pop
jns
loopne
loope
(bad)
jmp
jbe
inc
aam
pop
sub
cmp
add
lock
mov
cmp
fs
jmp
jp
lea
inc
ins
stos
xchg
mov
push
out
mov
sbb
imul
cmps
js
xchg
mov
xchg
jle
mov
sbb
sub
ja
popa
push
sbb
test
pop
popf
cmps
fiadd
push
pop
and
mov
stc
js
add
shl
push
xchg
xor
lea
js
in
xchg
xor
xchg
pop
mov
dec
and
or
cdq
xlat
pop
and
rol
in
rol
push
jp
mov
xchg
add
jmp
xor
lea
(bad)
mov
call
jo
hlt
ins
mov
xor
stos
dec
popf
pop
cs
movs
cmc
rcl
jno
ss
pushf
ficom
pop
cdq
loope
or
dec
int3
push
pushf
test
jnp
mov
pop
and
mov
mov
adc
popf
mov
cmps
and
fnstcw
(bad)
in
mov
mov
cmp
xchg
cmps
test
xor
mov
shl
mov
push
iret
outs
sub
xchg
and
out
add
and
mov
push
mov
push
sbb
and
jbe
enter
mov
lds
pop
inc
cmps
inc
aad
movs
fist
add
xchg
addr16
lea
push
push
sbb
retf
cmps
dec
mov
jmp
stos
add
or
mov
add
sbb
push
loopne
mov
(bad)
ds
xor
test
mov
mov
mov
or
pop
push
cmp
loopne
imul
mov
cmc
outs
pop
cs
test
outs
push
idiv
sbb
cmps
imul
ret
and
mov
add
or
jecxz
ficomp
das
fcom
pop
(bad)
sbb
mov
sar
dec
cld
std
(bad)
retf
pop
hlt
push
mov
inc
mov
xchg
stc
aaa
and
sbb
ja
mov
cmp
and
sub
mov
mov
lock
push
pop
push
lods
pop
fdivr
cs
mov
add
pop
inc
repnz
xchg
and
imul
in
xchg
fsub
arpl
ins
retf
mov
fucom
dec
fiadd
in
push
fwait
int3
xchg
out
lods
xchg
jg
jnp
pop
dec
fisttp
ss
fidiv
ins
fs
xlat
sbb
enter
or
xor
push
mov
pop
pop
jecxz
(bad)
sbb
fisubr
jmp
lea
push
mov
add
int3
cmps
test
xor
mov
xchg
std
repz
mov
mov
cmps
add
loopne
(bad)
adc
daa
fcomp
aam
sbb
pop
in
push
xlat
push
ret
(bad)
fistp
popa
rol
inc
shr
xor
test
jmp
pop
je
cmp
fnsave
xor
imul
pop
mov
sub
push
dec
aad
call
retf
cmps
int3
rol
mov
jo
xor
cwde
fwait
sbb
lock
sbb
jae
mov
mov
mov
mov
imul
retf
cmc
push
stos
aaa
and
enter
cli
cmp
fdiv
outs
push
xor
xor
fwait
jle
js
nop
mov
mov
push
jmp
into
jae
xchg
xchg
pusha
ds
sahf
ins
in
imul
xchg
adc
mov
pusha
icebp
mov
cmp
pshufw
sub
sbb
or
xchg
lods
push
(bad)
in
adc
(bad)
adc
hlt
pop
mov
mov
inc
add
add
push
jae
cmp
gs
fiadd
pop
loope
fst
ds
cmp
dec
sbb
retf
cmp
add
retf
fisub
movs
cdq
out
pop
add
je
jno
test
jmp
inc
addr16
xchg
sbb
fwait
xchg
test
fdivr
mov
or
inc
hlt
xchg
xchg
out
or
dec
les
outs
cmp
loop
inc
test
aam
mov
push
and
repnz
popa
xchg
cdq
pushf
and
mov
add
sahf
out
loope
scas
mov
loopne
fucomip
mov
outs
repnz
call
repz
mov
pop
dec
popf
std
inc
push
test
cmc
push
xor
scas
ins
loope
or
xor
shl
mulps
(bad)
sbb
mov
sar
mov
cld
mov
sbb
loop
fld
xchg
dec
fs
out
or
pop
daa
rcl
cdq
jmp
loop
(bad)
mov
pop
add
ja
or
out
hlt
and
iret
jmp
xchg
mov
out
in
mov
xor
cmp
pop
stc
sahf
movs
imul
mov
jmp
and
cmp
and
pop
out
xchg
(bad)
ss
int3
add
adc
cmp
pop
mov
es
sub
fnsave
sbb
push
pop
sbb
sbb
(bad)
imul
ret
jbe
or
test
add
mov
pop
cld
push
pop
hlt
dec
das
mov
ror
fiadd
idiv
sub
inc
xchg
ja
outs
mov
push
cmps
pushf
sti
cmp
push
ins
adc
mov
loop
sti
in
xchg
call
dec
movs
mov
outs
sub
xor
jl
jb
fisttp
mov
push
pop
movs
outs
repnz
sub
aam
inc
call
and
retfw
mov
loop
test
int3
into
mov
ss
pop
inc
adc
loopne
xlat
xchg
mov
sbb
sbb
cmp
cli
ss
mov
aas
ret
cmp
push
xchg
cmc
inc
clc
jle
jb
xor
in
fsub
inc
mov
mov
and
loop
call
es
push
imul
hlt
sub
out
inc
(bad)
es
mov
mov
cmp
adc
scas
push
add
pop
or
(bad)
lock
adc
daa
xchg
add
jno
dec
mov
or
xor
push
sahf
shl
dec
jno
daa
call
xchg
(bad)
(bad)
retf
test
mov
call
inc
scas
das
xor
mov
dec
std
push
mov
mov
mov
cmp
inc
jne
push
push
daa
loopne
sub
clc
and
(bad)
popf
and
mul
pop
mov
fcom
sbb
daa
sub
adc
dec
cmp
loope
pop
mov
imul
mov
repnz
jg
mov
cli
jl
out
hlt
fld
nop
iret
cmps
pusha
dec
xchg
push
and
aam
or
retf
xchg
and
mov
mov
or
push
cwde
jne
fdiv
xlat
sbb
popf
or
or
push
pop
mov
aad
sbb
jbe
mul
aas
into
into
adc
push
and
pop
sahf
jle
cs
not
scas
imul
mov
ds
aaa
aas
pop
ficom
loop
push
cmp
fisubr
call
push
es
fwait
outs
pusha
and
jl
add
jne
mov
pusha
xor
scas
sbb
jge
enter
in
cmc
mov
gs
ficomp
inc
out
add
sub
jmp
jp
popa
addr16
xchg
or
inc
mov
and
repnz
xor
sub
in
and
jo
add
pop
leave
mov
and
ror
shr
adc
pushf
sbb
sbb
stc
inc
pop
js
iret
fdivr
mov
push
jg
es
adc
mov
pop
pop
pushf
nop
iret
dec
pop
fwait
pop
inc
mov
xchg
lahf
data16
pop
add
mov
xchg
cdq
dec
out
sub
xchg
mov
or
mov
(bad)
leave
rcr
stc
(bad)
sahf
imul
dec
int3
not
movsx
rcl
ins
sub
outs
pop
scas
repnz
sbb
mov
cmc
lea
test
in
sub
jmp
sbb
(bad)
daa
adc
xchg
xchg
fimul
dec
retf
mov
movs
xor
jmp
fimul
ins
cmp
and
out
lea
dec
shl
sbb
xchg
lods
inc
mov
xor
test
call
sub
inc
sub
arpl
jmp
pop
cdq
add
sub
push
ds
imul
push
(bad)
cld
inc
ret
mov
cmp
aam
call
xor
aam
mov
iret
into
js
sbb
ret
push
sar
cmp
and
cmc
push
int
in
call
jmp
push
adc
outs
xor
mov
xchg
aas
jbe
bound
pop
pop
hlt
mov
jmp
jb
fs
mov
sub
mov
inc
sub
jp
out
xchg
mov
push
in
ins
loope
inc
add
dec
cs
push
retf
sti
enter
cmp
shl
jo
js
mov
adc
jo
push
jecxz
sahf
sbb
pop
ret
pop
cld
(bad)
add
mov
or
in
sbb
cmp
outs
mov
adc
xlat
sbb
std
sub
xor
loope
sbb
push
js
inc
mov
fild
icebp
out
outs
in
jno
repnz
sahf
inc
xchg
es
or
fnstcw
cmp
aaa
out
cmps
inc
mov
in
xor
pushf
movs
test
(bad)
(bad)
mov
data16
jp
pop
push
pusha
call
pushf
push
push
pusha
int3
lods
mov
inc
lds
nop
push
add
sub
fdivr
and
dec
pop
lds
out
and
cmp
nop
test
les
inc
inc
cmp
cli
bound
dec
sub
mov
jae
cmps
popf
mov
jnp
push
test
adc
dec
sbb
sbb
xchg
movs
sbb
cli
mov
mov
enter
mov
enter
in
inc
in
cld
mov
idiv
scas
lea
cdq
ret
sbb
in
pop
jbe
mov
aas
mov
out
mov
(bad)
bound
outs
imul
ret
add
jg
cmp
mov
ret
add
and
jmp
pusha
adc
retf
shl
pop
test
mov
inc
push
call
push
and
movs
lods
or
push
sti
mov
jl
mov
das
jmpw
rol
mov
ja
pusha
pop
out
loop
daa
pusha
xor
push
mov
movs
xlat
ror
pop
pop
or
loopne
pop
lock
(bad)
mov
mov
daa
pop
cmps
mov
(bad)
add
(bad)
jns
cmp
ret
(bad)
es
shl
sbb
sbb
pop
push
popf
fisttp
xor
adc
cmp
and
cmc
cmc
mov
(bad)
cwde
ror
jge
sub
push
jmp
xchg
in
push
addr16
adc
int3
aaa
push
jo
cmps
dec
outs
or
pop
xor
jge
or
ret
retf
rol
in
dec
push
dec
std
scas
sar
and
add
inc
or
movs
bound
xchg
icebp
pop
adc
(bad)
dec
jb
jp
daa
dec
or
mov
movs
(bad)
sbb
xchg
je
xor
and
xchg
ja
xchg
jg
dec
inc
and
test
scas
lock
inc
add
data16
dec
xor
mov
xor
scas
mov
mov
add
popf
pop
outs
and
(bad)
imul
mov
sbb
xor
dec
repnz
out
js
test
dec
rcr
push
or
sahf
cmp
leave
popa
jbe
pop
xlat
loopne
imul
in
outs
xchg
iret
inc
inc
loopne
mov
pusha
and
pop
and
dec
add
test
mov
scas
sub
xchg
or
fcmove
test
jbe
in
sbb
enter
(bad)
(bad)
ins
aad
xor
xor
pop
xchg
and
xchg
cmps
xchg
ds
inc
cwde
adc
sbb
xchg
and
fs
shl
dec
cmp
pop
or
jo
out
sbb
jbe
stc
cmps
scas
add
adc
repz
jnp
sub
pop
jge
loop
mov
push
cs
or
scas
mov
push
xor
and
into
pop
cdq
push
test
ss
scas
mov
in
ss
sahf
daa
(bad)
mov
inc
shl
retf
mov
pop
jg
push
sbb
lds
jnp
or
fistp
les
jmp
mov
jb
fldenv
(bad)
js
imul
xor
lods
jle
cmc
fucomp
add
xchg
data16
pop
sub
gs
stos
sbb
jne
pop
add
xchg
cmps
cmp
pop
stos
adc
xchg
cmp
test
loope
or
mov
loope
cmp
mov
in
stc
ins
neg
mov
pop
int
out
adc
fwait
aaa
daa
aam
push
mov
jmp
mov
and
idiv
mov
stos
pop
pop
push
xchg
adc
fsub
jnp
jmp
push
push
push
jp
pop
(bad)
sti
scas
inc
test
js
mov
jle
or
outs
ret
mov
jl
test
xor
mov
xor
fld
(bad)
xchg
mov
fisubr
stos
jnp
mov
sbb
shr
sub
(bad)
hlt
mov
add
mov
shl
sub
jmp
mov
aam
add
push
call
vshufps
les
pop
jbe
sbb
fidiv
cmc
lods
popf
adc
(bad)
mov
in
xor
or
aas
fld
leave
jl
ss
stc
(bad)
adc
dec
dec
loop
mov
pop
push
shr
(bad)
std
pop
loop
fld
int
adc
dec
jb
inc
outs
js
fimul
ja
cld
and
lods
loopne
call
pop
cli
push
movs
nop
mov
add
scas
test
mov
loop
out
pop
shr
sub
cmp
lods
adc
mov
xchg
loope
dec
cmp
test
and
mov
mov
popa
pop
mov
popa
jmp
jnp
loope
pop
das
mov
mov
adc
std
adc
adc
jae
fisubr
push
cmp
iret
aad
jge
xchg
jo
shr
out
xlat
push
es
adc
mov
xor
rol
pop
outs
xor
imul
sub
into
dec
adc
and
dec
lds
xor
jmp
dec
sbb
leave
lea
jnp
mov
xor
jge
scas
mov
dec
mov
cld
push
popa
add
cwde
or
add
movs
stc
jle
fbld
cmp
cli
cmps
jnp
pop
dec
xchg
arpl
cmp
aam
inc
sub
lods
mov
imul
mov
adc
cmp
mov
cmps
mov
push
mov
cwde
call
out
push
call
in
nop
rol
inc
in
rcl
aaa
adc
popf
jnp
sbb
and
add
xchg
out
fdivp
push
stos
mov
pop
mov
(bad)
mov
xchg
dec
xor
in
inc
mov
xchg
retf
push
jmp
sub
mov
rol
and
and
test
daa
stc
es
push
jnp
repz
cs
stc
pop
popa
mov
add
dec
or
pusha
mov
mov
fidiv
sub
(bad)
in
gs
movs
mov
xchg
lea
sbb
sbb
mov
jg
js
sbb
xor
sbb
dec
sti
dec
out
(bad)
out
xor
das
in
sbb
(bad)
ficom
mov
test
lahf
int
mov
adc
mov
jle
es
xor
mov
fild
mov
inc
sub
xchg
je
test
fist
cmp
and
fbstp
mov
(bad)
jecxz
and
cld
fsubrp
pop
das
ja
and
popf
andps
pop
stc
ins
scas
aad
jo
dec
or
ins
or
aam
xchg
pop
hlt
inc
sub
in
jb
lahf
mov
scas
pop
aas
add
cmp
fsubr
dec
mov
sbb
and
push
cwde
dec
lods
cmp
sub
sub
jmp
push
add
mov
out
jbe
mov
pushf
sbb
sub
mov
push
sub
outs
mov
pop
stc
into
stos
lock
rol
fmul
not
das
daa
call
mov
popf
ret
xchg
repz
jb
jle
iret
outs
mov
aad
mov
movs
hlt
lock
jge
stos
push
inc
push
pop
(bad)
rol
dec
(bad)
rcr
(bad)
into
movs
sub
(bad)
push
(bad)
idiv
cmp
and
scas
dec
lahf
das
sbb
push
retf
add
sub
int
dec
imul
dec
lods
bound
scas
fbstp
ror
call
mov
mov
jecxz
ins
stos
cmps
cmp
fwait
cmp
pop
fld
or
fincstp
push
inc
loopne
mov
out
(bad)
dec
test
in
or
cmp
or
into
cli
retf
hlt
mov
cwde
ins
sbb
lahf
(bad)
jmp
sub
ret
cdq
sahf
lahf
outs
mov
ficomp
dec
div
enter
mov
and
sub
mov
(bad)
std
call
fsubr
push
mov
add
ret
inc
xor
aam
mov
popa
(bad)
xor
jne
push
outs
mov
xor
mov
xor
xchg
into
mov
outs
or
ja
cmp
and
into
(bad)
jns
xor
sbb
push
in
mov
sahf
(bad)
and
mov
retf
mov
mov
and
cmp
pushf
cmp
or
ins
or
mov
mov
hlt
aaa
jno
sub
xchg
xchg
fcom
(bad)
and
hlt
jl
lds
sbb
pop
and
(bad)
sahf
fs
jo
dec
mov
mov
rol
(bad)
jns
das
add
std
stos
sub
fs
ins
fwait
xor
(bad)
sti
ja
mov
sbb
rcr
mov
add
lea
mov
adc
mov
push
pop
aaa
mov
cmp
loop
ret
inc
repz
jno
add
cmp
ret
xchg
cmps
sub
mov
sbb
cmps
test
mov
iret
enter
(bad)
dec
cmp
sbb
shl
nop
ficom
fisubr
mov
(bad)
(bad)
xchg
ds
sbb
(bad)
(bad)
cwde
cmp
fcom
mov
movs
jmp
or
mov
xchg
into
adc
push
(bad)
cmp
push
retf
or
sub
adc
int
mov
cdq
mov
sub
rcl
and
fstp
inc
xor
out
mov
xor
and
dec
mov
mov
ins
addr16
push
test
push
enter
lock
pop
rol
add
out
push
sbb
or
xchg
adc
add
adc
nop
loop
sub
shl
or
scas
arpl
jle
aas
and
add
sbb
mov
or
pop
fstp
les
xchg
std
jne
scas
out
mov
push
cmp
call
shr
or
lgs
mov
jle
jae
stos
fbld
ss
jmp
inc
in
push
cld
jno
addr16
nop
xchg
or
pop
les
imul
shr
aaa
cmp
mov
pop
or
lods
mov
fcmovnu
stc
jmp
xchg
xor
mov
add
std
into
mov
ror
sub
dec
adc
and
cmc
or
repz
(bad)
fidivr
adc
inc
pop
dec
jl
hlt
movs
dec
leave
test
movs
outs
xchg
cmp
fild
adc
jg
cmps
push
add
mov
(bad)
cmp
int
outs
sub
lods
sbb
aas
push
out
cmp
jp
fadd
mov
pop
mov
sub
fs
push
cmp
ins
lahf
cmp
repnz
adc
pushf
mov
mov
mov
retf
xor
sub
call
xchg
xchg
repz
sahf
sub
out
gs
or
ret
push
jne
pusha
repnz
or
jne
xchg
push
or
loopne
or
into
pop
jle
imul
mov
pop
lock
sbb
cdq
pop
pop
jbe
stc
scas
sbb
lea
jl
jne
shr
push
cmps
mov
test
dec
leave
mov
add
sub
(bad)
inc
sub
movs
in
imul
bound
icebp
sub
push
pop
inc
imul
adc
and
jg
cld
pushf
jo
cmps
stos
add
sub
mov
mov
rol
push
push
sbb
das
add
pop
fs
adc
adc
sbb
(bad)
mov
sub
ja
or
test
jge
xchg
bound
ret
xor
jle
jns
dec
or
cmps
push
cmp
add
sub
xlat
aaa
add
leave
mov
scas
adc
xor
scas
scas
das
(bad)
(bad)
aam
pusha
shl
lahf
test
fbld
dec
out
test
cld
out
jl
mov
in
test
shl
inc
push
jle
jo
pop
jmp
ja
jmp
mov
adc
sub
mov
jg
je
outs
in
and
icebp
fs
sbb
and
jnp
push
stos
push
std
imul
mov
adc
mov
(bad)
adc
mov
cmps
js
pop
mov
sbb
in
std
outs
inc
mov
jp
retf
cmp
jne
(bad)
movs
dec
es
cdq
aas
cmp
int
xchg
or
movs
mov
sahf
sbb
inc
push
jns
push
lock
add
sub
jecxz
or
adc
dec
cmc
pop
jp
sbb
bound
inc
jae
ss
xchg
xor
or
cmp
add
bsr
pop
test
(bad)
aad
ds
ret
(bad)
mov
fwait
and
mov
lods
les
mov
rcr
pop
dec
fnsave
mov
loopne
inc
cmc
or
jg
lods
dec
adc
dec
dec
(bad)
push
mov
mov
fild
mov
test
pop
jle
cmc
icebp
test
fcom
xlat
repnz
out
pop
daa
imul
adc
mov
arpl
mov
icebp
mov
imul
test
mov
das
into
adc
scas
retf
push
je
(bad)
in
repz
dec
and
xor
test
and
jle
jmp
add
mov
adc
mov
mov
movs
cmp
ins
(bad)
imul
adc
add
pop
add
or
fptan
lods
movs
or
ret
adc
pop
inc
imul
dec
mov
call
movs
in
outs
pop
fwait
jmp
out
and
pop
mov
jbe
dec
add
pop
(bad)
(bad)
sbb
push
sub
xor
push
pop
xchg
pop
and
lock
scas
and
dec
out
add
(bad)
adc
ficom
cwde
cwde
not
xor
cs
jmp
pop
out
jne
and
add
sbb
loopne
jmp
daa
and
pop
adc
aas
cmp
lea
enter
and
inc
inc
std
jge
xor
mov
xlat
xor
or
pop
jp
pop
rcr
sub
cmc
or
and
cdq
or
dec
cmp
jmp
inc
cs
push
popa
and
push
cld
fistp
in
cmp
jnp
mov
jo
ficom
adc
(bad)
mov
fdivp
cmps
test
inc
push
loop
es
jg
(bad)
lods
pushf
pop
ret
mov
rcl
dec
sub
sbb
and
jge
xchg
call
(bad)
das
jge
push
loope
enter
popa
test
inc
inc
shl
mov
push
dec
cmps
sub
cli
push
lods
(bad)
sbb
psubw
stc
pop
dec
dec
loop
sbb
test
in
mov
mov
popf
imul
adc
fs
sbb
cdq
cmc
fwait
cdq
movs
call
repnz
ja
sub
push
(bad)
frndint
pop
aaa
scas
cmp
inc
jne
(bad)
pushf
cmp
outs
nop
repnz
addr16
sbb
sar
push
lock
aam
mov
push
sbb
daa
mov
iret
clc
add
dec
or
out
cmps
arpl
push
(bad)
inc
std
rcr
push
push
retf
sub
push
out
mov
popf
pop
mov
popf
dec
xor
ret
mov
pusha
adc
push
shl
test
js
xor
push
rol
xchg
cdq
jg
adc
jg
mov
mov
pop
rol
and
dec
adc
outs
inc
in
push
mov
jbe
mov
in
repnz
leave
jo
(bad)
test
inc
(bad)
dec
sub
mov
mov
fist
or
int
repz
je
(bad)
ds
sti
out
jns
push
cwde
push
adc
jge
push
cld
ficom
and
mov
push
push
movs
jb
adc
cmp
mov
fist
test
mov
mov
push
mov
inc
mov
xor
pop
cmp
in
outs
pop
cmp
jnp
aaa
pop
test
inc
jle
stos
or
xchg
adc
mov
in
adc
dec
imul
push
(bad)
js
lock
movs
push
xchg
and
ret
and
loop
call
aaa
cdq
jmp
es
mov
pop
sub
rcr
sahf
jle
(bad)
inc
xchg
pop
(bad)
xchg
dec
inc
sbb
lds
mov
popf
loope
imul
scas
mov
push
and
xor
cmp
arpl
mov
inc
shl
push
fimul
sbb
(bad)
stos
and
ins
mov
inc
mov
xchg
(bad)
fisttp
xor
aas
(bad)
mov
xchg
in
fwait
cmp
mov
sahf
movs
cmp
sbb
xor
into
aaa
rcl
leave
pop
inc
add
stos
sbb
or
xchg
xchg
push
mov
mov
fld
je
xor
retf
cmps
jecxz
sbb
or
out
popf
(bad)
nop
and
jns
xor
push
out
xor
mov
ret
xchg
sar
out
out
clc
xor
loope
test
fs
iret
in
sti
repnz
test
add
push
push
jne
imul
inc
xlat
rol
or
jo
movs
stos
push
or
loopne
std
and
shl
adc
enter
cmps
cmp
push
add
mov
mov
xlat
inc
dec
cld
pop
or
push
movs
ins
shr
inc
hlt
adc
sbb
push
(bad)
add
jb
fistp
aaa
popf
pop
call
xor
loop
dec
inc
sub
inc
jno
out
xchg
inc
sbb
mov
retf
mov
xchg
xchg
add
xchg
mov
xchg
sub
fs
sbb
sub
(bad)
push
mov
pop
mov
sub
lds
(bad)
xchg
mov
stc
popa
mov
mov
jmp
xor
jmp
dec
push
es
mov
push
or
aaa
xchg
or
cmps
dec
gs
mov
ja
stos
xor
daa
rcl
cld
sub
pop
xchg
out
xchg
dec
jg
adc
add
clc
cmps
in
vmovapd
push
jecxz
mov
jo
dec
int3
imul
jl
jge
xchg
loope
test
sbb
out
xchg
adc
sub
sub
pop
xchg
pop
sar
push
icebp
add
mov
mov
cs
leave
mov
jmp
jnp
std
outs
jmp
fst
xchg
ss
inc
lds
push
pop
call
fistp
jp
jnp
into
push
cld
or
mov
je
push
call
cmps
cmp
(bad)
fdivr
scas
dec
cmp
jp
mov
jp
shl
cmp
mov
aaa
std
test
loop
ret
xchg
repz
pop
in
mov
ds
mov
sbb
mov
leave
aaa
cwde
sub
fbstp
mov
sbb
xor
in
pop
sbb
jno
adc
cmp
jns
jecxz
jmp
xchg
dec
and
sub
add
dec
xor
cmp
sahf
cmp
test
adc
test
fwait
mov
mov
test
jmp
loopne
imul
(bad)
fsubp
mov
jne
mov
test
lds
dec
aaa
arpl
mov
inc
out
push
jl
lods
sbb
mov
(bad)
sti
shl
out
push
ds
xchg
add
and
sbb
stos
mov
pop
out
das
imul
jg
cmps
mov
mov
xchg
pop
stos
dec
sar
cmp
out
loopne
ffreep
and
lods
cli
xchg
mov
cmc
imul
mov
mov
inc
xor
push
ds
stc
jne
rol
cmp
cwde
outs
rol
sbb
loopne
lahf
pop
mov
xchg
pop
sub
sbb
dec
xchg
fcmovnbe
mov
fistp
repz
jno
xor
inc
sar
add
call
fcomp
jne
lods
push
stos
cli
movs
add
mov
sti
clc
fbld
daa
add
inc
sahf
mov
outs
lock
inc
xor
out
dec
stos
aam
jge
sbb
enter
aas
pop
push
xor
pop
sub
es
mov
xchg
mov
pop
sahf
or
popf
pop
inc
clc
dec
sbb
mov
sti
aad
add
mov
or
test
inc
xchg
es
lock
cmp
out
or
and
arpl
and
test
movs
and
lds
mov
jne
leave
pop
es
dec
and
(bad)
pop
push
mov
out
retf
or
push
(bad)
and
out
push
mov
add
enter
lds
std
mov
movs
mov
or
imul
xlat
mov
out
pusha
and
sbb
out
loope
push
sub
mov
sub
in
mov
(bad)
(bad)
sbb
iret
cmp
fcomp
push
es
cmps
xchg
cmc
bound
in
push
mov
dec
push
in
xor
adc
mov
xor
mov
popa
jl
cmps
mov
dec
add
(bad)
sub
sub
into
aaa
jp
data16
xchg
es
mov
mov
xor
jno
pop
shr
xor
sbb
sbb
cmp
in
adc
adc
dec
adc
add
loope
stos
inc
fidiv
cld
push
loop
sub
mov
inc
push
inc
hlt
int
rcl
shr
ret
mov
mov
jo
scas
(bad)
cdq
or
xor
leave
jecxz
or
cs
stc
sbb
inc
and
mov
out
scas
jle
mov
dec
mov
or
cdq
jmp
inc
cs
out
out
js
sub
rol
imul
loope
xchg
fst
fimul
mov
jnp
mov
mov
jnp
xor
and
out
js
into
into
retf
xor
jns
push
cs
call
sar
xchg
pop
and
lea
jecxz
dec
enter
je
sub
frstor
ja
(bad)
(bad)
fcomp
cmps
push
inc
cmp
les
jp
add
scas
fcmovu
test
xchg
es
lods
adc
inc
dec
jmp
lds
mov
cwde
xchg
aad
(bad)
fcomp
sysexit
cmps
pop
stos
aam
dec
(bad)
xchg
push
xor
inc
(bad)
shl
or
mov
sub
inc
loope
mov
and
push
push
xchg
mov
or
scas
dec
sbb
ror
es
xchg
inc
xchg
(bad)
cmp
rcl
aas
dec
push
mov
out
cli
mov
jb
sbb
out
jae
dec
adc
dec
int
or
scas
mov
jo
cmp
into
add
add
call
aaa
cs
cmp
jb
pop
fstp
sbb
cld
ss
mov
mov
(bad)
xchg
cmp
mov
lods
stc
fld
loopne
out
(bad)
outs
jo
inc
hlt
xor
xchg
jle
mov
mov
leave
adc
std
cmps
ins
in
push
dec
cmps
xor
pushf
inc
sbb
addr16
(bad)
pxor
je
cwde
adc
sub
fadd
lods
fndisi(8087
ins
or
xchg
dec
xchg
fisubr
adc
retf
cli
add
sub
std
mov
in
pop
retf
xchg
jne
loope
mov
cmp
cmp
imul
push
rcl
popa
pop
fisubr
sbb
mov
test
sbb
or
nop
adc
inc
cmp
outs
and
imul
add
loope
cs
mov
xchg
mov
retf
rcr
repnz
push
shrd
mov
hlt
loopne
or
cmps
push
sub
sub
dec
or
mov
mov
scas
xor
xchg
lods
bound
and
cmp
cmps
rcl
out
xlat
call
mov
mov
stos
xchg
imul
sub
mov
sub
es
popf
xchg
mov
jecxz
das
or
add
loop
inc
out
jo
cmp
adc
push
jmp
ffree
mov
int
or
pop
add
rcr
imul
xor
test
cmp
sti
cmp
sub
int
pop
pop
inc
mov
pusha
(bad)
cmp
jns
and
sbb
out
mov
pop
sub
xor
mov
jno
dec
aas
push
inc
jmp
sub
aaa
aas
cmc
stos
jecxz
arpl
rcl
idiv
mov
sbb
inc
mov
mov
adc
fstp
scas
stos
mov
popf
js
mov
pushf
add
xor
pusha
sbb
mov
cmp
fsubr
stos
lds
(bad)
out
call
mov
popf
mov
stos
inc
jno
cmp
mov
jo
push
sub
ss
xchg
int
and
push
and
pushf
push
int
jnp
mov
adc
mov
out
sbb
mov
cmp
movs
cmp
test
ds
rcl
les
hlt
xchg
mov
out
sbb
inc
mov
(bad)
push
lds
(bad)
pop
mov
sub
addr16
call
cli
call
push
add
scas
outs
add
fadd
leave
jne
stos
mov
inc
and
retf
imul
push
sub
push
xor
jne
cs
lds
daa
hlt
mov
fucom
enter
jg
lock
int3
clc
inc
retf
mov
mov
(bad)
(bad)
mov
test
in
out
push
ins
mov
or
fisttp
arpl
sbb
lock
jl
icebp
icebp
xchg
sbb
mov
mov
inc
fwait
in
scas
sub
daa
or
cmc
cli
xor
fs
dec
xor
ja
int3
enter
or
fs
gs
cdq
xchg
pop
js
(bad)
pop
iret
jmp
movsldup
scas
loope
lods
cdq
fadd
ins
out
push
cmp
or
xchg
lea
mov
xchg
xchg
sti
scas
xchg
jge
(bad)
cmp
rcl
mov
loopne
pusha
fwait
aas
pusha
es
sbb
sbb
inc
push
fcomp
ja
inc
ins
shl
adc
inc
fcomp
and
pop
inc
add
xchg
adc
sti
pop
mov
popa
rcl
mov
fist
jle
enter
xor
ss
push
in
fcom
mov
dec
iret
ss
in
add
sbb
jmp
mov
push
cs
dec
add
cmp
add
call
into
add
ret
jne
jp
test
popa
into
push
sub
adc
inc
and
retf
pop
jae
dec
sub
sub
xor
adc
movs
jbe
mov
cmp
test
out
repz
data16
ss
fnstcw
sub
pop
rcr
jl
xor
stos
xchg
xor
ins
add
jne
or
jnp
inc
push
sub
inc
ja
ins
push
xlat
mov
into
cmp
gs
scas
sub
mov
pop
jo
dec
add
xor
ficomp
jecxz
in
das
popa
push
xchg
into
pop
rcr
jmp
jnp
jb
inc
adc
xor
js
sbb
lahf
faddp
sub
inc
cmp
pushf
sub
(bad)
mov
pop
or
popf
jmp
loopne
in
mov
lds
jl
aaa
shr
sbb
scas
push
adc
leave
(bad)
ins
inc
in
rol
xchg
mov
loope
push
fild
adc
js
mov
retf
fbstp
and
xchg
test
dec
mov
add
sbb
stos
sub
cwde
(bad)
push
bound
int
mov
dec
dec
jo
shl
neg
push
ffreep
jmp
sti
nop
jae
pop
hlt
es
iret
mov
lds
dec
lahf
dec
mov
ins
jo
in
sbb
gs
loope
ret
sar
movs
dec
div
(bad)
scas
add
cmp
rol
mov
fild
call
ds
out
mov
fimul
fnstcw
xchg
out
jg
aad
xor
push
xor
fs
mov
call
mov
jo
std
xor
and
sbb
pop
jbe
adc
call
mov
daa
add
xor
and
pop
in
mov
add
cmp
add
sbb
fdiv
ret
pusha
lea
cmps
or
test
test
lds
in
rcr
fldcw
adc
push
or
xchg
jge
xchg
out
add
mov
mov
add
enter
pop
lds
add
jb
or
adc
ja
inc
lea
push
pop
clc
sbb
or
xchg
inc
ins
sbb
rol
jno
jge
shl
add
adc
add
ja
icebp
xlat
imul
addr16
int3
and
sub
ror
add
je
out
add
push
or
leave
loop
iret
push
not
jecxz
mov
loope
das
cdq
cld
fnstcw
pusha
pop
inc
mov
jnp
fistp
and
int3
loope
hlt
xchg
div
push
gs
mov
cmp
adc
pop
and
xchg
adc
sti
mov
pop
pop
dec
mov
inc
jns
dec
mul
lahf
out
mov
(bad)
ss
jns
lods
jge
scas
sub
movs
mov
imul
mov
push
sbb
in
mov
loope
call
add
cmp
adc
retf
cdq
fwait
inc
fistp
and
lock
lahf
push
or
inc
stc
jl
bound
jg
popa
cmp
mov
ja
test
pop
cmp
dec
(bad)
shl
jae
sub
xor
push
jnp
push
clc
adc
push
mov
idiv
mov
movs
pop
(bad)
sbb
inc
lods
lea
inc
jmp
lea
iret
pop
int3
add
outs
jge
inc
fs
mov
push
push
clc
(bad)
push
fdiv
enter
imul
and
popa
test
jae
out
or
lods
ja
test
imul
movs
adc
movs
sar
push
mov
popa
out
movs
xlat
push
and
or
imul
push
pop
ins
xor
xor
cmps
fld
jp
aad
(bad)
jb
ret
(bad)
cmc
ds
lea
mov
xchg
mov
jae
fldcw
add
mov
dec
xor
retf
or
jl
xchg
pop
test
push
je
mov
mov
test
icebp
loopne
scas
push
in
dec
icebp
jg
das
(bad)
jl
add
push
jne
sub
dec
test
inc
rol
or
adc
cmp
inc
or
jnp
jno
ret
lods
int3
dec
push
lods
fisttp
ffreep
enter
mov
xchg
lock
les
je
popa
sahf
dec
out
jge
add
and
sbb
pop
push
sub
fs
stos
(bad)
cs
jmp
inc
xlat
popa
mov
mov
cmps
(bad)
cmps
leave
pop
xchg
push
dec
les
xor
pop
add
jecxz
adc
adc
mov
sar
popf
or
dec
fs
sbb
mov
push
cmps
xor
inc
(bad)
(bad)
cmp
dec
popf
push
stos
movs
rcl
mov
ins
inc
(bad)
(bad)
jne
shl
cmc
in
sub
pop
test
mov
(bad)
adc
jl
ret
sub
sub
xchg
popa
xor
cmp
mov
mov
inc
mov
jg
mov
sbb
rcl
cmps
or
cmp
mov
mov
std
mov
cmp
pop
mov
add
pop
push
adc
addr16
sub
in
out
dec
push
mov
jmp
xor
daa
(bad)
cmps
cmp
fst
std
adc
(bad)
jl
sub
inc
int3
cwde
(bad)
xchg
imul
mov
dec
mov
(bad)
je
xlat
leave
push
mov
je
inc
mov
cmp
out
loopne
loope
inc
hlt
add
push
(bad)
cmp
scas
dec
inc
and
popa
scas
and
enter
repnz
ror
retf
imul
inc
out
ret
popf
out
xor
dec
lods
arpl
mov
in
imul
inc
sbb
pop
fs
das
dec
adc
aas
out
mov
mov
loope
ds
jb
das
dec
xor
fadd
jnp
add
mov
xchg
push
shl
mov
daa
movs
cmp
test
xchg
daa
mov
out
addr16
bound
mov
rol
xor
aad
je
scas
dec
jmp
(bad)
fstp
std
out
xchg
stc
and
ret
jbe
pusha
(bad)
lock
xchg
jb
popa
hlt
adc
adc
mov
sahf
xor
mov
jmp
fsubr
sub
dec
(bad)
dec
xchg
mov
repnz
dec
fiadd
sbb
pop
xor
xchg
je
push
imul
stos
add
or
outs
pop
xchg
ficomp
imul
test
lock
(bad)
mov
jmp
xor
data16
or
cdq
mov
push
lock
xor
push
daa
setno
pop
repz
dec
cli
inc
ins
cmc
cli
jmp
cmc
repnz
shr
dec
div
cmovnp
int
scas
and
mov
mov
lods
into
push
push
shl
es
fstp
xor
out
ret
dec
loop
and
and
add
sub
jmp
ja
cmc
rcr
sub
pop
into
push
push
fnstcw
loope
mov
adc
into
lahf
hlt
pop
outs
xor
je
lahf
out
inc
fcomp
dec
push
js
inc
sbb
cmp
xchg
jmp
repz
dec
push
pop
sbb
jne
fld
push
jns
jmp
or
neg
pop
(bad)
in
mov
mov
xor
jns
fcmovne
xor
sbb
xchg
fbld
ret
adc
outs
sbb
xchg
nop
aaa
ss
popa
inc
sub
jmp
push
and
add
movs
xor
out
xchg
fst
out
push
icebp
sub
das
xchg
loopne
btr
dec
call
fimul
ror
(bad)
adc
sar
pop
outs
test
jecxz
ficom
shl
dec
add
mov
add
mov
push
push
and
cmp
dec
mov
xchg
jp
xchg
lods
repnz
bound
jnp
imul
jae
xchg
sub
jbe
adc
push
lahf
call
and
xchg
dec
sub
retf
aad
pop
jl
push
adc
inc
repz
inc
sub
inc
pop
push
fistp
or
scas
jo
int3
ss
ins
and
inc
aam
test
inc
sub
das
retf
test
and
push
pop
imul
adc
or
popf
mov
mov
fwait
arpl
pop
test
ror
(bad)
sbb
mov
sahf
sbb
inc
xchg
xor
xchg
sub
cmp
shl
xor
jb
and
(bad)
fs
push
ffreep
xor
imul
jl
xchg
mov
adc
pop
daa
mov
movs
retf
mov
bound
pop
push
fldcw
es
xchg
stos
mov
bound
inc
inc
clc
jl
int3
int3
mov
int3
int3
sub
mov
sbb
sti
test
jmp
iret
clc
cmp
push
push
pop
pop
dec
stc
push
aaa
lods
jo
or
fnsetpm(287
fadd
movs
push
imul
inc
sub
imul
cmc
add
fwait
jmp
jecxz
adc
in
xor
mov
into
loopne
jo
xchg
sbb
add
(bad)
fadd
hlt
push
push
retf
fwait
hlt
cmp
enter
pop
stc
fcomp
imul
fistp
add
aaa
lahf
dec
pop
mov
call
test
pop
pop
cmps
cmp
mov
mov
add
(bad)
dec
mov
outs
clc
clc
jb
sbb
repz
adc
into
inc
mov
mov
inc
inc
fild
jp
fstp
adc
jl
out
ret
sbb
pop
add
test
seta
add
sub
fmul
cmp
imul
adc
leave
push
pop
xchg
das
xlat
and
or
xlat
mov
repnz
sub
not
mov
mov
stos
or
pop
mov
int3
ja
test
cmp
lock
cs
cmps
sar
push
loop
mov
push
xchg
pusha
clc
xor
fnstsw
jecxz
mov
add
fdivr
jbe
into
or
sbb
js
(bad)
fwait
xchg
outs
cmp
gs
mov
jb
in
loop
ror
jmp
imul
jno
mov
or
jbe
adc
lds
xor
or
and
lea
mov
or
mov
in
fisttp
stc
mov
sub
fsub
xor
inc
call
mov
ret
mov
adc
stc
mov
aad
push
mov
xchg
xor
adc
jg
js
repz
cmp
add
(bad)
hlt
pusha
mov
inc
(bad)
jns
loopne
popf
out
ret
rcr
add
jge
icebp
adc
jge
ret
das
jecxz
mov
push
jne
retf
pop
dec
ins
dec
jmp
mov
ins
iret
mov
mov
adc
ins
push
shl
xchg
loope
syscall
ret
jg
adc
ret
mov
enter
shl
not
call
push
repnz
(bad)
push
repz
pop
sbb
or
jae
or
inc
xchg
enter
jbe
dec
rcr
das
jmp
inc
adc
into
arpl
pop
repnz
sub
xchg
adc
adc
mov
ror
jmp
mov
retf
mov
mov
out
or
add
mov
das
out
pop
mov
sti
push
mov
pop
jbe
sbb
mov
jl
jecxz
cmp
out
pop
int
pop
and
sub
dec
push
inc
add
jge
push
lods
jl
push
fwait
jge
retf
fild
push
fistp
loopne
loopne
push
imul
jbe
in
adc
outs
mov
xor
outs
pop
data16
or
(bad)
fs
imul
je
xlat
je
icebp
sti
(bad)
cli
test
cmp
les
test
adc
xchg
dec
or
call
and
addr16
xchg
cmp
xchg
cdq
pop
in
bound
rcl
les
movs
dec
xchg
push
ja
scas
push
int
cld
add
fistp
pop
cwde
mov
cmp
jae
std
pop
cs
mov
bound
mov
(bad)
sbb
out
add
and
pop
test
ret
hlt
popa
mov
cld
outs
outs
inc
cli
xor
lahf
mov
push
xor
nop
repnz
add
mov
movs
movs
aas
in
popf
or
push
popa
js
cmp
add
ret
add
jae
cmc
pop
pop
adc
inc
sub
inc
int3
and
mov
dec
xchg
inc
mov
jmp
(bad)
outs
scas
cld
xchg
test
xchg
mov
sub
push
pop
jbe
mov
push
add
pop
cmps
mov
xchg
sti
ss
add
push
mov
adc
test
ja
fild
dec
dec
push
mov
or
mov
test
xchg
adc
into
movs
pop
or
call
gs
int3
pop
mov
call
sbb
cdq
cmp
cmps
jb
movs
dec
push
(bad)
cli
push
mov
into
sar
mov
sub
mov
add
call
sbb
lods
pop
shl
movsx
jmp
mov
dec
fcmovnbe
int
jge
add
pop
popa
test
mov
mov
sub
mov
xchg
test
test
and
pushf
mov
mov
adc
mov
pop
push
pop
int
sbb
adc
sbb
scas
lahf
scas
in
int
out
sub
mov
js
mov
movs
lds
out
int
mov
(bad)
cld
cwde
es
cmp
dec
test
out
movs
aaa
in
jle
pop
aam
mov
test
or
mov
xor
inc
out
jb
cmc
stos
test
in
(bad)
iret
sub
stos
daa
cmps
xor
idiv
push
imul
arpl
adc
cmps
and
xchg
rcl
sub
mov
gs
hlt
pop
call
mov
mov
jns
enter
pop
iret
mov
retf
mov
hlt
shr
jnp
ror
mov
push
cmp
push
fistp
xchg
xchg
cmp
or
out
out
pop
xchg
bound
or
dec
add
out
cmp
cmps
cmp
push
imul
aaa
mov
push
mov
and
les
sub
cs
mov
jecxz
outs
icebp
cmps
cmp
or
scas
iret
nop
lods
int
mov
jno
add
test
cmp
(bad)
pop
je
mov
aad
and
cmp
pop
sub
movs
or
ss
lds
test
mov
fmul
sbb
push
or
in
test
loop
imul
enter
retf
push
retf
xor
(bad)
lahf
mov
shl
jmp
xor
stos
(bad)
or
sbb
test
dec
cwde
jno
mov
div
sbb
mov
add
pushf
aaa
jae
repz
adc
div
add
cli
inc
fld
mov
std
adc
pop
(bad)
and
xor
xchg
loop
sbb
lea
adc
in
add
out
mov
mov
dec
cmp
or
push
mov
lea
mov
push
into
or
mov
pop
xchg
fcomp
or
mov
in
data16
mov
test
popf
aaa
out
call
les
pcmpeqd
nop
mov
aaa
jmp
xor
pusha
mul
lahf
iret
iret
mov
jbe
int
ins
xchg
push
loope
sbb
nop
push
ss
outs
dec
inc
lock
cmp
dec
pop
pop
and
mul
test
add
sbb
(bad)
outs
idiv
mov
xlat
push
mov
call
jb
or
cmp
mov
add
pop
das
(bad)
sub
fs
cmp
xor
inc
das
stc
(bad)
push
sub
xor
inc
xchg
xchg
call
loop
or
xchg
jae
stc
int
and
je
into
(bad)
fist
jmp
repz
cdq
fdivr
inc
dec
push
mov
push
inc
imul
mov
xor
jmp
mov
dec
jg
mov
movs
out
aas
jle
into
mov
(bad)
ins
cmp
(bad)
push
mov
inc
mov
push
push
xor
sub
rcl
and
xor
in
pop
daa
shl
pushf
out
and
enter
sub
data16
adc
add
fdivrp
jo
cmp
adc
sti
gs
mov
xlat
or
mov
fwait
mov
push
mov
popa
mov
gs
arpl
aas
cmps
adc
and
mov
cmps
dec
fcom
inc
fisub
xor
cmps
mov
mov
or
push
inc
xchg
les
in
jmp
fwait
xchg
push
cmp
add
(bad)
mov
mov
dec
or
fwait
hlt
mov
rcl
pop
push
jecxz
jp
cmp
mov
ss
xchg
inc
test
sub
ins
les
add
mov
jo
add
lahf
add
jge
sub
or
inc
mov
out
popa
xor
mov
sub
out
xor
push
rcl
sbb
gs
lea
push
loope
jno
test
out
cld
ins
je
sbb
mov
or
mov
dec
inc
mov
adc
push
ja
js
test
mov
ja
lea
and
(bad)
ss
call
test
jbe
loope
inc
inc
sti
xor
push
adc
out
retf
les
jno
nop
cmp
jge
sub
add
xor
push
ja
(bad)
(bad)
enter
push
clc
arpl
cmc
xchg
loop
mov
mov
adc
xchg
pushf
repz
add
xchg
mov
xlat
lahf
mov
jo
pop
in
popf
ja
in
pushf
push
hlt
ins
dec
sbb
pop
or
mov
push
push
lahf
sub
pop
sbb
sub
push
popf
add
lods
daa
jne
inc
es
jmp
sub
inc
scas
inc
inc
inc
mov
pushf
out
pop
sbb
hlt
adc
mov
loope
mov
out
xchg
jb
repz
ja
add
mov
add
mov
out
push
ret
lea
pusha
push
es
(bad)
shl
jmp
add
fmul
jle
pop
repnz
sbb
jl
aaa
jo
push
jne
aas
jno
push
push
scas
aad
push
jp
mov
mov
pusha
scas
sti
and
stos
sbb
mov
cld
push
add
mov
adc
and
xor
cmp
pop
cmp
fsubr
ds
or
mov
add
jmp
sbb
xor
test
loop
int
les
or
sub
inc
sbb
add
popf
retf
jg
pop
mov
retf
pop
imul
(bad)
ret
xor
mov
outs
rcr
repz
rcr
shl
mov
jb
pop
ja
jg
mov
pop
xchg
xchg
cmp
jmp
mov
iret
aad
dec
ds
repz
mov
push
ret
push
mov
jp
push
xchg
or
xor
jns
movs
dec
adc
or
inc
stos
out
and
or
popf
in
(bad)
cld
pop
mov
out
pop
mov
out
push
movs
int3
sub
push
or
aas
arpl
fbld
inc
mov
pop
xor
pop
clc
jo
test
addr16
cmps
mov
repnz
xor
dec
sbb
clc
int3
xchg
outs
push
test
cmp
push
mov
bound
nop
add
jo
jle
cmp
test
pushf
test
pop
or
xchg
dec
cmp
push
int
dec
inc
aas
dec
daa
mov
fiadd
adc
ins
lods
push
test
ja
(bad)
jno
push
sub
cmp
adc
jo
cwde
cmps
repz
xor
les
xchg
test
push
sub
dec
dec
and
mov
mov
test
pop
jl
fiadd
adc
outs
and
xlat
imul
sub
sbb
mov
(bad)
sti
cmp
retf
inc
push
pusha
mov
sub
add
jne
mov
xor
lods
add
int
jnp
dec
in
adc
jecxz
(bad)
xchg
rol
adc
xchg
mov
sti
ins
jmp
dec
cmp
cwde
mov
call
push
push
or
repnz
sub
and
xchg
imul
sbb
pusha
push
add
push
jmp
gs
loope
mov
loop
lock
mov
cs
xchg
test
inc
daa
mov
jge
ja
test
das
mov
pop
push
or
xor
out
lods
jno
jbe
push
pop
adc
ins
push
inc
jbe
stos
jnp
mov
call
or
mov
leave
jmp
fisttp
mov
or
cmps
jb
cs
movntq
dec
xchg
inc
jmp
in
int3
pop
icebp
nop
xchg
fidivr
push
popa
(bad)
pop
outs
add
shl
je
xor
leave
outs
leave
mov
sbb
hlt
test
mov
or
movs
and
jmp
gs
in
xor
push
in
daa
mov
shr
ds
add
xchg
movs
fldcw
jge
jle
daa
inc
sbb
jae
imul
lahf
bnd
dec
loop
and
retf
mov
cmc
ror
push
aas
jo
inc
or
or
out
xchg
jae
jmp
div
inc
mov
dec
mov
sub
pop
jmp
push
icebp
out
mov
and
cld
daa
popf
fisubr
ins
arpl
inc
push
push
out
lds
(bad)
cs
pop
lea
push
enter
enter
dec
add
cmp
cmps
ret
push
pop
retf
sbb
outs
aam
leave
jo
(bad)
cdq
xchg
mov
xchg
cmp
cmc
inc
mov
movs
es
and
xchg
sub
dec
push
dec
nop
xchg
sti
stc
cmp
push
es
add
sar
jno
test
push
scas
pop
rcl
(bad)
(bad)
iret
pop
xchg
mov
sub
(bad)
and
xor
sar
inc
out
push
sti
sbb
repnz
mov
dec
xor
sub
in
lods
pop
dec
loop
jne
fcomp
scas
jmp
into
mov
pushf
fcmovb
jnp
mov
jmp
mov
and
jecxz
push
lods
cmp
xor
(bad)
test
xchg
mov
aaa
fmulp
mov
and
mov
cmps
fidiv
push
gs
adc
rol
ret
sub
add
pushf
mov
fldcw
std
(bad)
shl
cmp
dec
lock
mov
in
push
dec
imul
rcl
push
push
jne
dec
jge
call
and
test
or
inc
shl
add
retf
cwde
xor
jecxz
test
call
or
sub
(bad)
mov
adc
jae
ror
clc
enter
imul
pop
cmp
xor
repnz
cmp
stos
dec
pop
int
xchg
adc
pop
(bad)
lds
inc
jns
pop
or
xchg
cmp
xor
and
call
sbb
aad
and
das
xchg
push
pop
add
ja
ds
(bad)
lock
addr16
sub
inc
dec
pop
inc
push
dec
(bad)
cs
mov
add
sbb
and
jne
xchg
xor
cmp
cdq
mov
ja
sbb
pop
mov
xchg
jo
cdq
ins
sti
pusha
jne
push
mov
sbb
fild
add
add
sahf
cmp
dec
lock
mov
loope
imul
dec
lods
pop
lds
movs
out
loop
stos
das
int3
in
sub
call
out
test
and
xor
std
lods
es
jae
mov
dec
ds
jmp
cld
sbb
sub
or
(bad)
pop
fstp
or
and
cmp
pop
call
inc
push
push
xor
aam
pusha
pop
and
xor
adc
mov
outs
dec
adc
movs
aaa
jo
mov
addr16
push
or
out
mov
push
shr
dec
or
scas
dec
stos
jno
mov
aas
push
cmp
loope
mov
int
mov
out
push
loop
or
inc
jns
sub
adc
movs
lea
push
jle
popf
pop
adc
loop
dec
rol
outs
mov
pop
dec
mov
cli
mov
jg
push
test
push
popa
mov
add
imul
retf
ret
xlat
mov
xor
push
sub
jb
daa
push
ja
aam
pop
mov
std
je
ins
and
(bad)
ss
imul
sbb
ret
les
pop
pop
addr16
jle
ror
or
or
fidiv
pop
aaa
lahf
mov
xchg
push
mul
push
dec
stc
jb
sbb
movs
dec
mov
xchg
xor
mov
fistp
popa
enter
and
push
(bad)
sar
sbb
stos
sub
mov
push
mov
sub
inc
mov
and
pusha
push
pop
cli
lods
sub
or
rcl
fbstp
test
sub
mov
mov
xor
add
pop
add
sub
ins
and
mov
hlt
pop
and
push
mov
addr16
jns
aas
sbb
rcr
retf
cmps
(bad)
in
push
pop
retf
bound
jp
mov
sahf
xor
ja
sbb
ret
daa
cmps
adc
mov
clc
retf
(bad)
es
arpl
pushf
inc
icebp
pop
icebp
shr
movs
shl
jne
enter
mov
jo
outs
loope
sbb
fdivr
cmp
fidivr
hlt
dec
dec
fst
stos
push
xchg
movs
sub
push
add
std
mov
int3
xor
mov
ss
(bad)
and
adc
mov
movs
add
je
fcom
dec
jge
je
mov
mov
test
pop
cmps
and
jne
repz
mov
imul
lds
sbb
iret
inc
xor
in
or
lahf
sbb
icebp
stos
push
lea
je
cmps
sub
push
sbb
aas
adc
sub
pop
sbb
(bad)
fisubr
or
(bad)
mov
into
test
(bad)
cmp
push
addr16
nop
pushf
sub
xchg
pop
inc
out
adc
dec
fnstsw
(bad)
out
neg
sti
scas
icebp
stos
hlt
inc
dec
(bad)
adc
cmp
or
leave
sar
pop
(bad)
in
hlt
cmp
push
push
outs
fbld
sbb
dec
aas
rol
(bad)
dec
movs
inc
data16
outs
dec
jb
call
call
dec
bound
mov
test
out
stos
and
and
add
or
call
or
push
jno
out
push
push
xchg
call
push
ret
cmc
push
out
mov
fsubp
test
call
jno
sbb
das
xchg
add
mov
xor
and
(bad)
test
pop
in
sbb
xchg
xor
(bad)
mov
adc
inc
adc
dec
cdq
dec
xchg
jbe
in
jae
dec
add
xor
mov
neg
mov
shr
dec
movs
mov
sub
sub
xor
ss
or
sahf
adc
add
dec
or
call
cwde
shl
xchg
sbb
mov
lods
add
mov
std
mov
mov
fstp
sbb
gs
sbb
inc
mov
inc
jne
aaa
mov
imul
fsubr
outs
cld
out
sub
mov
sub
mov
inc
pusha
leave
imul
jge
das
fcomp
retf
cmovnp
mov
xchg
pusha
into
jno
and
jns
cmp
xchg
push
cmps
xor
out
rol
sub
xchg
sub
mov
lods
fwait
cmc
xchg
test
cmp
jae
test
lahf
mov
push
mov
(bad)
sub
in
pop
cmp
mov
mov
xor
cli
mov
das
push
or
lock
and
mov
add
scas
movs
frstor
repnz
push
adc
pop
(bad)
je
sbb
sbb
mov
dec
jp
(bad)
fadd
jno
cmp
aaa
or
and
call
inc
pop
push
jo
adc
pop
int3
cdq
mov
gs
gs
int3
pop
in
mov
dec
sbb
int
xor
and
icebp
jb
cmp
xchg
adc
imul
jmp
daa
test
jb
add
(bad)
add
retf
test
cmc
cmp
xchg
cwde
inc
sbb
mov
or
out
outs
xor
dec
or
retf
mov
imul
outs
jecxz
(bad)
ja
fwait
and
std
sbb
stc
jecxz
sub
cmp
test
aam
inc
or
ins
icebp
(bad)
loopne
mov
rcr
inc
retf
push
test
push
push
retf
mov
repz
into
(bad)
fwait
mov
pop
sub
jge
ret
push
sahf
push
addr16
inc
mov
jl
mov
ror
ins
ret
jne
in
(bad)
loope
scas
sub
ins
or
cld
xchg
mov
cmp
(bad)
or
mov
xchg
jp
and
xchg
fcomi
ror
fcmovne
pop
cld
pop
test
mov
mov
mov
jecxz
sub
movs
sub
in
in
jo
jmp
cld
popf
fstp
pop
push
mov
mov
dec
(bad)
push
and
sub
push
mov
xor
mov
inc
add
cmp
sti
ret
push
push
mov
imul
lock
push
int3
or
sub
cmp
and
ins
add
xchg
cmc
in
fstp
clc
sar
call
jne
leave
sub
jno
xor
jp
fsincos
mov
and
push
cld
push
pop
jle
or
inc
(bad)
loope
in
into
lahf
push
mov
imul
imul
sbb
adc
mov
(bad)
lds
loop
mov
push
xchg
xor
call
inc
fwait
add
xor
mov
ret
jg
cmps
mov
stc
hlt
sub
mov
retf
mov
fisub
les
mov
ror
fistp
inc
jecxz
fcomp
or
xor
inc
out
shl
int
inc
rol
cmp
ror
clc
mov
ss
ret
dec
mov
mov
push
and
push
adc
nop
inc
xchg
in
les
test
dec
sub
cwde
mov
pop
js
arpl
mov
push
jp
xchg
dec
add
mov
sub
xor
and
dec
jns
outs
jo
xor
iret
jmp
hlt
jns
push
fistp
push
int3
pop
test
div
push
jns
mov
inc
push
mov
jp
in
mov
push
or
or
inc
pusha
ror
neg
inc
fucomp
mov
push
xchg
mov
jecxz
mov
mov
scas
ins
push
adc
jne
dec
cmp
imul
rol
gs
fisub
fdiv
xchg
cmc
aas
lea
test
out
hlt
or
fdiv
ret
and
fiadd
ins
movs
icebp
js
sbb
adc
xchg
jge
pop
sti
out
lods
sub
pop
mov
dec
cld
xchg
adc
cmp
leave
or
lods
xor
push
fwait
xchg
mov
out
and
mov
dec
pop
gs
cmp
dec
icebp
or
rcr
jp
sub
mov
push
xor
loop
adc
xor
xchg
mov
pop
sti
cmp
mov
xlat
pop
fild
test
mov
push
mov
xlat
xchg
inc
push
jmp
test
fisttp
sar
inc
inc
inc
icebp
call
daa
adc
pop
mov
mov
loopne
shr
fisttp
(bad)
stc
cmp
mov
mov
pop
push
popf
(bad)
sub
or
add
shr
cmp
xlat
push
mov
sahf
out
adc
sahf
outs
fwait
in
mov
test
push
sbb
cmp
fnstcw
pop
dec
aaa
mov
mov
lea
mov
sbb
je
jp
inc
movs
mov
and
es
sahf
call
xor
sub
mov
test
and
jg
push
movs
cwde
jne
jge
xlat
sbb
outs
mov
xlat
pop
nop
xchg
pop
xchg
jle
adc
gs
mov
jle
iret
lahf
or
rcr
outs
pop
arpl
sbb
addr16
dec
aas
inc
fidiv
or
ror
scas
mov
in
push
xor
ror
pop
out
inc
or
jg
ja
pushf
xlat
xor
(bad)
push
das
push
or
(bad)
fsubr
mov
xor
stc
fwait
adc
cmps
icebp
je
pop
pop
and
icebp
int3
xchg
pop
mov
popa
ins
jo
jnp
call
popa
popa
add
popf
fs
(bad)
mov
in
imul
mov
addr16
lods
hlt
cmp
lock
arpl
xor
pusha
lds
pop
pushf
mov
push
push
repnz
xchg
jge
xor
mov
jb
js
mov
pushf
int3
cld
clc
mov
sub
ret
ins
outs
xchg
add
inc
jo
pop
jbe
vpmuludq
cmps
mov
inc
pop
ins
addr16
enter
aad
vpmullw
es
cmp
repz
mov
xchg
xor
sub
inc
jl
scas
add
call
(bad)
imul
push
cmp
push
test
inc
fwait
and
fdivr
cmp
stos
and
adc
and
dec
ja
cmp
add
cmp
nop
stos
retf
(bad)
sbb
fwait
pop
not
ss
sti
sbb
sbb
jp
pop
pop
inc
fiadd
inc
dec
push
into
scas
push
cli
cmp
cs
sbb
test
test
out
iret
in
adc
lods
idiv
mov
mov
mov
(bad)
mov
loopne
rcl
or
loope
inc
cwde
dec
push
ja
xchg
scas
fdivrp
sbb
adc
xchg
and
push
daa
out
cwde
mov
loopne
retw
dec
fldcw
mov
or
mov
dec
inc
dec
pop
xor
xlat
stc
mov
fdivr
ficom
jns
cmp
lds
out
cmps
dec
inc
jns
mov
fstp
cs
xchg
dec
lods
xchg
xchg
inc
mov
sbb
ja
mov
dec
(bad)
fidivr
sub
fimul
mov
pushf
xchg
out
aaa
fwait
mov
add
sbb
jg
xlat
jp
retf
add
movups
int
mov
or
xor
not
into
dec
cwde
cld
rol
arpl
repnz
or
(bad)
daa
out
out
je
pusha
jl
inc
addr16
fnsave
into
mov
sbb
das
imul
dec
adc
retf
mov
ret
fnstcw
mov
jnp
bound
outs
push
stos
daa
xchg
imul
cwde
ret
pop
ins
in
jmp
and
out
xchg
out
mov
pop
jecxz
push
push
xor
sub
dec
aam
adc
inc
mov
test
mov
les
movs
inc
fst
in
push
je
pop
ins
jb
lahf
or
and
mov
out
jmp
adc
dec
add
jge
inc
dec
dec
call
cmps
gs
(bad)
scas
repz
lock
jecxz
enter
and
adc
rcl
xchg
jno
adc
cwde
push
sahf
iret
ja
xor
outs
test
pop
push
or
xor
xor
out
or
dec
sub
mov
mov
enter
aas
jmp
pop
outs
sti
and
je
mov
sub
xor
sbb
push
pusha
pop
xor
push
orps
and
pop
cs
out
push
pop
jmp
mov
sbb
bound
div
imul
aad
jge
test
in
(bad)
mov
test
cmc
sbb
xchg
and
pop
je
sub
test
xor
jmp
xchg
and
xchg
sbb
sub
push
sub
(bad)
call
cmp
dec
loopne
mov
idiv
lock
stc
pop
adc
jle
arpl
(bad)
sub
ja
imul
xor
push
fisttp
addr16
out
out
dec
js
push
clc
shr
loopne
lds
adc
cmp
aas
jnp
cmp
(bad)
fucomi
sub
fiadd
dec
jns
push
jmp
call
cmps
hlt
sbb
pop
mov
adc
push
xchg
add
xchg
mov
sbb
cmp
cmp
dec
inc
mov
jle
loope
xlat
es
fabs
cs
and
rcl
mov
imul
imul
dec
and
cmp
adc
and
xor
fcom
gs
test
lods
aaa
aad
or
pop
jae
not
outs
rcl
mov
test
mov
call
nop
xchg
retf
cmps
nop
lods
pop
push
adc
call
sbb
rcl
movs
push
and
nop
and
ret
inc
int
add
jl
daa
jl
mov
mov
in
std
mov
icebp
imul
sahf
out
pop
xor
cli
jbe
mov
add
stos
push
mov
mov
jle
rol
cld
fisttp
out
daa
add
inc
sub
mov
shl
pop
outs
or
sub
dec
jo
add
xor
fs
dec
pop
pop
pop
push
iret
rcl
jmp
loopne
scas
std
xlat
imul
or
adc
sar
aam
and
bound
pop
jmp
das
dec
sbb
jecxz
xchg
and
mov
test
in
stos
jmp
cmp
mov
std
jmp
cmp
sub
mov
mov
mov
pushf
pop
pop
bound
mov
jmp
das
sub
and
xor
in
and
cmc
pop
mov
jns
repnz
pop
pushf
jbe
mov
lock
or
jmp
adc
and
int3
add
cmp
mov
adc
add
fwait
retf
adc
out
sub
call
pop
or
cs
into
fadd
add
movs
mov
add
(bad)
test
sbb
popf
int3
enter
xchg
sub
mov
inc
(bad)
fstp
pop
in
pop
sbb
xor
(bad)
mov
inc
mov
adc
or
mov
adc
dec
sbb
sub
sbb
gs
cdq
xor
retf
pop
retf
ds
sbb
sub
add
loop
sub
pusha
or
cmps
xchg
push
call
iret
cld
inc
mov
fcom
hlt
xchg
fcomp
movs
mov
scas
push
scas
gs
xchg
mov
movs
sti
test
outs
loope
or
add
ss
mov
test
cmp
dec
div
mov
sub
xchg
add
movs
cmp
xchg
sti
bound
arpl
(bad)
fisttp
in
xchg
movs
ins
add
mov
push
cmp
mov
sub
into
loop
les
and
xlat
ja
sbb
mov
rol
pop
dec
mov
iret
mov
paddsb
outs
xchg
test
sti
adc
inc
jns
dec
loop
inc
xor
and
lea
pop
jne
pop
push
jmp
jge
adc
adc
ins
inc
hlt
lods
mov
push
test
cmp
enter
pop
push
shr
pop
lods
iret
pop
(bad)
cli
dec
(bad)
fdivr
(bad)
retf
dec
add
mov
mov
push
inc
pop
inc
and
bound
jmp
push
mov
pop
dec
gs
adc
xchg
or
mov
push
inc
mov
outs
jp
test
ja
fwait
ins
mov
cwde
ret
hlt
push
fistp
ins
(bad)
mov
fxch
(bad)
retf
sbb
pop
movs
pushf
inc
imul
jne
loopne
lock
pushf
(bad)
clc
or
fcomp
scas
test
repz
movs
xchg
std
inc
hlt
popa
jbe
mov
mov
jle
pop
xor
cmp
xor
adc
cmp
pusha
adc
xchg
ss
int
adc
jg
ds
les
push
mov
enter
pop
ss
mov
add
push
or
ins
ret
push
xchg
push
and
push
dec
push
dec
push
cmp
enter
mov
dec
jmp
lods
cmp
std
sub
push
ffree
push
dec
ffree
test
mov
sbb
sbb
mov
and
push
add
ficom
add
repnz
call
inc
add
stc
fadd
(bad)
push
addr16
pusha
xor
ins
shl
adc
dec
mov
push
inc
pushf
xor
cmp
mov
lahf
jo
bound
inc
popf
push
fidiv
cmc
and
int
mov
repnz
test
scas
sub
and
or
mov
push
dec
or
loop
pop
mov
sbb
xor
stc
jae
int3
ins
pop
adc
or
cmovno
mov
adc
loopne
js
jle
outs
inc
add
mov
mov
imul
jmp
cmps
outs
adc
cli
cli
int3
dec
ja
push
xor
and
sub
xor
push
ret
inc
and
leave
or
adc
imul
sub
aam
add
fidivr
rol
sbb
inc
cmp
push
enter
cwde
add
jl
cmp
dec
mov
jle
xchg
mov
retf
jecxz
and
loope
inc
(bad)
xchg
pop
gs
add
cmp
lds
sbb
jnp
into
and
(bad)
xlat
and
adc
sub
adc
mov
and
cld
cli
loope
pop
ins
loop
mov
cmps
aad
in
pusha
fnstcw
mov
add
in
mov
jne
out
es
fs
sub
rep
sbb
pop
imul
adc
aaa
cs
pop
repnz
aam
cli
out
iret
fwait
and
or
push
mov
(bad)
jmp
jge
jno
addr16
and
mov
das
fs
adc
pop
push
stc
or
ins
mov
dec
dec
push
mov
out
sti
and
sub
mov
lds
xlat
jmp
mov
lods
rol
fdivr
loopne
mov
ret
xor
inc
add
sub
pop
(bad)
push
or
popf
dec
out
adc
push
xor
mov
arpl
pop
cmp
sub
out
jae
dec
ret
mov
inc
jg
mov
push
xchg
jno
outs
add
jg
sbb
push
mov
lds
scas
push
cwde
pop
das
popf
mov
lahf
pop
retf
push
xchg
nop
cmp
push
pushf
ret
pop
dec
push
div
cmp
ja
cmp
adc
mov
sar
sub
add
sbb
xchg
push
aad
rol
xlat
nop
mov
shl
outs
fsubr
(bad)
mov
(bad)
in
cmp
cmp
pop
xor
sub
js
push
adc
pop
(bad)
and
clc
dec
call
mov
jle
sub
xor
sbb
adc
test
adc
gs
stos
push
popf
popf
ins
sbb
fcom
bnd
movs
pop
pop
push
cwde
adc
dec
xor
in
ror
jle
jl
sbb
lds
pushf
sub
nop
rol
hlt
mov
add
mov
mov
lock
lock
dec
sub
enter
rol
(bad)
xor
add
mov
lock
clc
push
scas
(bad)
jecxz
sbb
(bad)
xor
int3
sub
mov
add
repz
mov
das
daa
dec
ret
jge
push
mov
push
add
mov
cmp
push
mov
mov
adc
mov
jl
mov
pop
into
cmps
push
int3
xor
push
xor
pop
inc
or
push
mov
jne
sbb
mov
rcl
movs
pusha
or
mov
outs
or
push
or
clc
nop
inc
int
daa
pop
out
add
or
mov
paddw
mov
push
(bad)
push
aam
mul
les
icebp
inc
test
inc
xchg
mov
pop
push
call
iret
inc
mov
push
pop
mov
dec
movs
test
xchg
loop
scas
jmp
mov
lods
jo
add
dec
int
mov
je
sbb
aas
out
and
mov
gs
add
xabort
sbb
out
fnstcw
sub
push
mov
adc
add
(bad)
jp
pop
gs
jg
(bad)
arpl
jge
retf
stos
inc
or
adc
pavgw
aas
jns
daa
jmp
lahf
pop
xchg
mov
and
sub
je
scas
in
ss
ret
cmp
sbb
les
cmovae
dec
lods
cwde
sbb
mov
mov
cwde
push
in
enter
cmp
outs
cmp
sbb
push
push
jae
inc
mov
retf
xor
into
mov
loop
sub
arpl
mov
dec
jo
jns
hlt
stos
xchg
lahf
cld
xchg
data16
add
mov
movs
std
int
inc
mov
sti
outs
and
movs
fdivr
imul
es
xor
adc
sbb
jb
push
cmc
imul
push
pavgb
test
es
je
and
mov
add
pop
dec
out
mov
ret
jmp
xor
xchg
mov
sahf
inc
push
test
div
cmp
add
sbb
icebp
cli
(bad)
or
movs
fwait
add
push
call
stos
xchg
jmp
push
movs
cmp
sahf
test
and
call
aaa
pop
inc
and
pop
push
(bad)
iret
or
sub
xchg
push
or
mov
and
xchg
test
jnp
test
push
pop
xchg
fcomp
pop
out
xor
jb
lock
(bad)
(bad)
js
xchg
push
jge
cmp
movs
sahf
inc
jns
dec
fisttp
push
dec
mov
leave
adc
(bad)
xor
ret
and
or
add
adc
jle
call
(bad)
and
imul
cs
add
aaa
inc
in
pop
xchg
jp
sub
adc
inc
test
mov
xlat
ins
bound
ins
push
sbb
cmp
int3
or
mov
cli
mov
out
and
pop
je
popf
cs
xchg
xor
mov
push
outs
push
xor
push
mov
push
arpl
lods
ret
push
mov
mov
shr
xor
jg
adc
cdq
adc
hlt
popa
push
ins
leave
cli
pop
push
and
inc
xchg
jns
retf
mov
(bad)
mov
js
aad
jo
retf
stc
test
sti
mov
and
xor
movs
bound
mov
ffree
ja
xchg
ficomp
xlat
repnz
lods
push
js
or
and
sub
push
mov
ja
cmc
xchg
push
adc
cmc
addr16
xchg
pop
fiadd
adc
cli
movs
mov
out
ja
mov
psllq
lods
(bad)
hlt
push
stc
push
xlat
and
mov
dec
xchg
pop
jmp
xchg
pop
and
in
jmp
leave
inc
or
adc
loop
dec
mov
xor
xchg
movs
fmul
mov
lds
sbb
sbb
mov
xchg
ins
imul
lahf
jmp
cmp
add
out
das
and
sub
mov
or
bound
(bad)
jmp
repnz
pminub
adc
lea
dec
js
or
test
pop
sahf
adc
dec
enter
fisub
jmp
into
mov
ret
xchg
or
loopne
shr
push
mov
ret
aas
jo
shl
pop
or
retf
cmp
push
es
mov
dec
pop
sbb
ja
test
imul
cmps
push
in
push
neg
dec
sbb
lods
push
xor
mov
jmp
xor
mov
push
loop
mov
and
jo
iret
dec
retf
ss
jecxz
adc
pop
out
sbb
daa
aam
iret
adc
scas
and
or
cmc
add
mov
and
mov
out
in
pop
ss
and
or
iret
outs
test
mul
sub
out
imul
call
dec
int
cwde
sbb
jl
xchg
mov
cdq
pusha
mov
iret
add
push
or
aaa
(bad)
adc
leave
je
ja
cmp
push
stos
pop
inc
sub
fnsave
rcl
cmp
or
pop
test
sub
inc
xor
in
ret
jg
sahf
in
xchg
ret
repz
or
jp
sbb
jmp
add
ds
jb
push
cmc
cmp
vunpcklps
xchg
push
je
mov
sti
setge
add
jnp
xor
gs
push
(bad)
popa
adc
jmp
cmc
rcl
shr
int3
mov
cmp
push
loope
test
pop
pop
mov
xor
imul
push
les
popa
pop
fcmove
ss
jg
sub
add
push
not
std
in
not
shl
sar
clc
int
or
clc
mov
add
ja
adc
push
mov
(bad)
sbb
adc
or
shl
or
imul
cli
fwait
pop
test
xor
outs
pop
lods
or
rol
loopne
jae
inc
pop
jno
jmp
(bad)
fdivr
scas
pop
not
xor
push
dec
lods
fwait
mov
or
dec
ss
in
jecxz
(bad)
xlat
out
or
stos
mul
or
push
cmp
xchg
cmp
iret
int
adc
xor
addr16
fwait
inc
push
adc
pusha
mov
jge
(bad)
adc
lods
or
js
cmps
test
and
xchg
mov
std
leave
ja
xor
lock
fmul
xchg
daa
(bad)
pusha
cmc
and
in
and
pop
cli
dec
test
jl
push
inc
mov
mov
xchg
lahf
rcl
xor
loop
dec
aad
sbb
in
jno
inc
add
rcr
inc
mov
sbb
add
add
jmp
mov
mov
jp
mov
jmp
pop
je
jmp
test
call
ret
dec
cmp
aas
jne
ja
dec
cli
pop
jo
inc
jmp
inc
or
std
mov
jnp
sti
outs
fxch
mov
out
mov
jns
push
sub
sub
xor
xlat
outs
pop
mov
push
lea
mov
jne
jle
outs
or
xchg
sbb
lahf
add
push
jmp
sti
inc
pop
adc
lods
stc
inc
rcl
sahf
or
pop
pop
popa
fs
or
sahf
dec
outs
(bad)
sub
fdivr
mov
xchg
sub
(bad)
push
push
mov
cmp
lods
cmps
dec
neg
jbe
nop
xchg
into
ret
xchg
mov
pop
retf
mov
adc
mov
dec
ret
cmp
jg
and
mov
lds
inc
push
cmp
add
mov
cmp
icebp
cmp
cmc
sahf
sub
inc
pop
loop
movs
hlt
dec
ret
enter
(bad)
mov
mul
cmovnp
mov
into
pop
ds
je
lods
adc
inc
inc
sub
clc
and
cmp
xchg
call
pop
pop
jo
cmp
add
cld
cwde
ja
fidiv
cmp
add
cmp
rol
pop
push
adc
lods
sub
lds
sbb
add
ds
add
lods
pop
and
das
cld
xchg
hlt
idiv
(bad)
cmp
leave
pop
lods
rcr
in
std
xchg
xor
jbe
cmps
mov
jo
push
xor
sub
(bad)
imul
or
rol
sbb
iret
mov
push
push
mov
or
push
rcr
icebp
adc
fbld
shr
ins
arpl
outs
enter
fldenv
mov
retf
adc
in
stos
sbb
scas
std
xor
push
cmp
daa
das
and
cmp
ja
(bad)
jle
rcl
and
jae
inc
(bad)
dec
xchg
inc
inc
sbb
cmps
dec
popf
jnp
in
aam
cli
mov
add
inc
aas
pusha
sub
cwde
psubsb
dec
dec
xor
call
xchg
xor
and
mov
inc
pop
test
jb
sbb
pop
cli
gs
test
pop
mov
mov
pop
sbb
mov
pop
stos
pop
fcomp
lock
dec
mov
addr16
loope
retf
inc
popf
pop
pop
adc
adc
test
call
sar
xchg
push
mov
arpl
push
test
jge
test
push
or
(bad)
xlat
les
mov
add
std
iret
lock
int
jns
pop
ds
and
clc
pop
mov
adc
ud1
fldenv
dec
cmc
cmps
sub
inc
mov
mov
std
outs
xor
(bad)
loop
xor
rcl
add
not
push
jg
push
sbb
push
jge
cdq
dec
xchg
in
pop
pop
fldcw
data16
and
mov
(bad)
add
push
jmp
mov
idiv
daa
cwde
stos
cdq
mov
mov
cwde
sbb
pop
jecxz
mov
jae
xchg
or
or
xchg
jle
fisttp
in
jg
cwde
xchg
out
mov
jo
mov
sbb
jmp
xlat
enter
repnz
mov
das
icebp
mov
mul
pushf
jns
mov
lahf
sbb
sar
test
adc
xor
mov
ds
jg
sub
(bad)
jmp
and
mov
enter
outs
pop
adc
xlat
jmp
outs
add
shl
mov
in
xchg
dec
cmp
adc
mov
int
sbb
and
jle
xchg
mov
jecxz
cmp
and
in
stc
jl
mov
lahf
sbb
add
inc
xchg
push
push
dec
inc
add
inc
mov
or
aaa
call
inc
in
inc
cmp
fld
mov
cwde
data16
lods
cmps
jmp
cmp
mov
xchg
push
(bad)
outs
jne
daa
inc
lds
push
adc
mov
jg
lds
inc
lods
sbb
adc
aas
lock
ret
stos
aam
jecxz
and
fcmovnu
sbb
xchg
daa
cmp
push
test
add
shr
xchg
cld
aas
dec
add
stos
cmp
movs
mov
adc
fadd
in
pop
outs
mov
lock
ret
xlat
clc
mov
lods
inc
ja
pusha
inc
daa
push
jmp
in
sbb
cmp
push
bound
test
rcr
mov
dec
loopne
lods
js
sub
mov
mov
mov
inc
dec
pop
popa
ja
repnz
enter
mov
adc
mov
js
inc
call
retf
jmp
retf
retf
cmp
inc
jno
mov
dec
pop
outs
xchg
lahf
push
xlat
adc
mov
dec
sub
cmp
leave
movaps
pop
mov
out
sub
push
mov
(bad)
xchg
pusha
xchg
(bad)
ss
retf
sub
and
shl
test
jae
cmp
dec
or
in
retf
rol
dec
pop
mov
loop
loope
inc
pushf
pop
imul
je
jno
pop
ins
xor
add
push
mov
fcom
sbb
jbe
iret
out
fsubr
retf
sbb
(bad)
(bad)
push
and
leave
dec
fstp
popf
inc
call
fisub
jbe
jno
pop
mov
leave
test
add
(bad)
mov
pop
mov
pop
add
arpl
xor
cmp
cmc
mov
jecxz
cmp
into
inc
repnz
cs
sbb
push
(bad)
cs
fnsave
pop
int3
(bad)
cs
jge
mov
xchg
cmc
scas
js
or
out
xchg
cmps
xchg
in
and
out
jmp
(bad)
ror
sbb
mov
rol
je
inc
movs
leave
test
fcomp
pop
daa
fs
xor
icebp
push
outs
stc
mov
xchg
fild
ins
mov
dec
adc
mov
cs
sbb
xchg
mov
jle
and
or
add
xchg
shl
rcl
clc
pop
cld
jnp
icebp
inc
mov
sub
dec
sar
in
cmps
imul
mov
call
int3
sub
or
in
cmp
dec
add
mov
js
push
lock
or
pop
add
xchg
cmp
mov
cld
sub
push
dec
mov
repz
icebp
sbb
ins
(bad)
ret
std
or
pop
sar
outs
dec
dec
sub
out
jecxz
nop
mov
bound
inc
push
stos
rol
xchg
(bad)
xor
pop
jmp
inc
cmp
xchg
inc
inc
jne
mov
and
and
out
sub
scas
arpl
jbe
imul
cmp
data16
adc
jge
mov
mov
repnz
xchg
push
bound
jno
lea
adc
ret
movs
daa
out
mov
and
xchg
sub
xchg
push
test
add
inc
jmp
cmp
mov
push
xchg
add
sbb
les
cmp
mov
lods
test
mov
push
mov
(bad)
cmp
dec
add
les
fild
je
int
pop
mov
loop
and
mul
repz
xchg
dec
cmp
mov
mov
mov
xor
cmp
push
cld
int
fcomi
dec
(bad)
xchg
dec
sar
clc
int
repz
mov
dec
xor
out
sub
push
add
push
xchg
ret
call
loopne
shr
aaa
cmp
int3
cmps
pop
xchg
lahf
xchg
sub
cmp
(bad)
xlat
adc
lods
js
mov
out
xlat
cmp
inc
xor
pop
outs
inc
test
jp
out
push
mov
das
aas
cmp
push
inc
inc
cmp
inc
adc
sbb
push
pop
xor
pop
leave
jp
loope
scas
inc
push
jp
mov
adc
sub
mov
test
xor
cbw
xor
jle
es
xor
sbb
icebp
jnp
test
in
and
adc
pushf
in
sub
leave
pop
cmp
mov
push
adc
mov
sub
test
icebp
sbb
cmps
xchg
jecxz
ret
push
cmp
xor
dec
js
stc
test
idiv
movs
cmp
adc
sbb
inc
lods
aad
cmp
test
lods
fistp
popa
rol
sub
cmps
push
and
cmc
mov
out
neg
xor
outs
inc
js
popa
mov
ins
and
out
icebp
pop
aad
(bad)
jp
clc
outs
dec
push
mov
ud1
fisttp
ins
in
test
xchg
rcl
mov
add
pop
pop
adc
mov
shl
loope
jmp
(bad)
jmp
cmps
into
(bad)
push
es
add
pop
ficom
ins
pusha
mov
add
lock
rcl
clc
(bad)
add
pop
jno
xor
lds
push
jg
cs
and
arpl
mov
(bad)
push
mov
sbb
test
cmp
or
push
in
push
in
arpl
cmp
and
movs
call
or
ds
mov
xor
enter
idiv
pop
push
pop
pop
adc
aad
sub
inc
sub
push
lods
add
and
or
pop
test
sbb
mov
mov
xor
sub
retf
loope
nop
xchg
push
xchg
in
cmc
cmp
or
and
mov
jecxz
iret
mov
outs
(bad)
enter
shl
mov
adc
sbb
mov
out
jo
dec
dec
pop
mov
push
inc
cwde
xchg
sub
f2xm1
iret
sub
push
mov
stos
xor
test
xchg
inc
sbb
retf
mov
add
adc
cdq
pop
add
in
adc
jl
push
sub
mov
arpl
int3
sub
out
cmp
test
push
aas
dec
fcmovbe
es
(bad)
pop
cmp
pop
shr
popf
hlt
scas
cmp
call
lods
xor
dec
xchg
rol
cmp
rcl
pop
shl
in
fadd
xchg
js
pop
ss
pop
pushf
pop
hlt
test
add
mov
inc
inc
jae
sbb
into
in
mov
inc
pop
out
pop
stc
add
inc
shl
call
outs
push
xor
gs
mov
ficom
jo
and
sub
xor
pop
mov
adc
in
shl
ds
lods
and
movs
pop
call
pop
cmp
mov
leave
mov
mov
jb
sbb
mov
int
cmp
mov
jns
das
test
xchg
outs
adc
(bad)
shl
or
xor
xchg
cmp
sbb
pop
adc
shl
pop
jnp
addr16
cwde
std
pop
dec
mov
inc
shr
dec
hlt
add
mov
ret
out
xchg
adc
lahf
pop
lahf
das
dec
int
or
jne
sub
jmp
mov
sub
jmp
push
hlt
inc
shr
push
les
add
outs
sub
cs
add
loope
mov
cdq
leave
dec
hlt
addr16
mov
aaa
outs
cmp
jbe
cdq
xchg
pop
dec
call
push
adc
retf
mov
shl
clc
std
mov
ja
clc
and
mov
(bad)
sbb
push
mov
stc
test
push
repz
mov
add
(bad)
cmp
cmp
in
pop
fiadd
cmp
mov
add
scas
xchg
inc
push
push
out
cmp
jo
xor
xor
or
jb
daa
sbb
movs
loopne
pushf
pop
jp
ret
xchg
mov
inc
ret
daa
bound
xchg
popf
loop
hlt
inc
xchg
loope
jae
or
popf
sbb
iret
stos
imul
mov
jb
jmp
jmp
cmps
inc
cmp
and
fwait
jle
jge
out
fcompp
push
mov
dec
dec
icebp
dec
cwde
add
jne
jge
xlat
ja
scas
dec
je
in
inc
dec
xor
sbb
das
dec
daa
xor
inc
mov
fcom
jl
cmp
jmp
fstp
(bad)
sbb
arpl
cwde
fimul
jg
mov
sub
fidivr
pop
aaa
sub
movs
fwait
dec
and
pop
mov
ins
outs
push
or
sti
xchg
inc
(bad)
cmps
cld
in
xchg
xchg
aaa
mov
lods
test
mov
cmc
stos
dec
cmp
cdq
jge
jbe
ret
jle
std
adc
sbb
cmp
(bad)
movs
call
movq
xchg
call
sub
add
jns
jge
push
mov
int3
and
or
ins
bound
dec
pop
pop
inc
push
sbb
imul
mov
mov
mov
jbe
(bad)
jbe
sbb
sbb
retf
cdq
test
xor
retf
pop
loope
lods
pop
arpl
cmp
push
jmp
shr
and
enter
or
ds
jg
into
int3
adc
xor
les
pop
xor
movsx
jbe
cdq
jno
adc
lods
mov
push
push
in
add
out
dec
je
pop
sbb
push
dec
sbb
bound
jae
test
fsubr
and
call
mov
xchg
jno
add
cli
fsubr
sbb
and
xlat
nop
test
and
stos
mov
ret
push
or
ins
fsubr
adc
gs
mov
cli
sub
push
mov
xlat
sub
jp
pop
xlat
shl
jecxz
test
cmps
inc
adc
scas
xchg
gs
push
mov
add
cmc
loop
xchg
repz
stc
xor
add
and
js
cmp
pop
add
cld
push
and
cld
into
add
cvtpi2ps
cld
addr16
or
sub
test
test
shl
sbb
aam
and
xchg
ds
add
iret
nop
out
mov
sti
imul
mov
sahf
jno
adc
stc
std
das
add
enter
pop
int
cs
mov
fcom
inc
xor
jo
ror
or
hlt
inc
push
cmp
adc
in
test
push
gs
jp
test
fisubr
or
dec
je
call
mov
mov
inc
cmps
xchg
xlat
bound
stos
cdq
sub
xor
in
jne
fstp
sbb
and
lods
aaa
outs
rol
cmp
xchg
ret
aaa
add
leave
adc
retf
(bad)
into
sub
(bad)
jae
sbb
inc
pop
adc
push
mov
popa
push
adc
out
retf
test
test
outs
xchg
add
jmp
ret
lods
add
sub
inc
jecxz
(bad)
mov
(bad)
and
aaa
fs
popa
psubusw
pop
push
call
mov
mov
aam
jmp
push
push
dec
(bad)
mov
mov
jmp
clc
pop
in
aas
or
iret
adc
cmps
jmp
in
jl
jno
lods
cmc
retf
fiadd
mov
or
ret
pop
into
adc
add
in
sub
sub
loopne
push
add
div
sbb
mov
cmps
pusha
push
and
frstor
jbe
gs
aam
and
add
add
add
inc
and
cli
repnz
xchg
fwait
clc
adc
rol
push
shl
jp
mov
fwait
outs
test
pop
stos
add
sbb
sub
push
jp
ds
test
(bad)
push
jle
mov
retf
call
mov
stos
pop
enter
mov
cwde
dec
mov
sbb
xor
(bad)
outs
or
in
ds
(bad)
pop
or
cli
mov
inc
xchg
xchg
sub
retf
adc
push
ret
lahf
cmps
push
dec
adc
sbb
inc
xor
jb
pop
cmp
outs
xor
xchg
sti
pop
pop
add
and
cmp
fs
mov
test
push
cwd
into
xchg
pusha
xchg
xchg
or
adc
inc
add
jo
dec
out
sub
dec
mov
loopne
pop
and
ror
ja
fimul
ret
fidivr
gs
scas
inc
adc
cmc
imul
inc
rol
jb
js
daa
and
pop
jg
mov
shl
cmc
and
es
inc
loopne
mov
jecxz
push
mov
jbe
and
xchg
aad
pop
ret
in
subps
xchg
push
add
mov
call
mov
sub
pusha
nop
loopne
loopne
mov
adc
dec
retf
scas
es
push
repnz
fild
and
mov
pop
pop
sbb
xor
mov
inc
imul
xor
popf
cmp
and
mov
pusha
adc
mov
push
mov
out
pop
push
push
push
or
lahf
or
push
xor
int3
mov
add
adc
leave
pop
pop
(bad)
rcr
scas
mov
sbb
call
fild
inc
out
(bad)
sub
imul
xadd
adc
outs
xor
jg
or
mov
mov
cli
mov
test
and
xor
add
mov
dec
shr
outs
fwait
mov
aaa
fbstp
les
xlat
push
jmp
call
aam
sar
enter
sub
push
mov
adc
sbb
nop
push
(bad)
not
fnstsw
sahf
das
mov
push
adc
test
test
jb
mov
and
add
fwait
aaa
les
mov
dec
aaa
sbb
ins
icebp
lods
xor
cmp
jne
stos
cmps
pop
cmp
out
sbb
xor
add
outs
jecxz
in
jmp
(bad)
pop
add
in
pop
mov
std
dec
dec
pusha
ror
lods
fadd
inc
inc
mov
pusha
out
mov
mov
inc
jp
pop
and
pop
jle
arpl
mov
fisttp
cmp
cmp
in
fisub
adc
push
jo
in
mov
test
call
cli
pusha
sub
getsec
add
xlat
cmc
mov
dec
add
sbb
mov
and
xor
pop
jl
sbb
push
scas
pop
(bad)
or
mov
jne
pusha
aam
mov
scas
or
jae
cld
add
retf
into
mov
in
jbe
cs
adc
fidiv
lods
cs
outs
cmp
push
jbe
test
cwde
push
das
pusha
repnz
shl
hlt
out
and
mov
jmp
rcl
out
xchg
fwait
xchg
inc
fisttp
xchg
or
nop
or
inc
jg
cwde
out
cmp
push
push
sub
push
mov
mov
test
sub
ss
(bad)
xlat
scas
in
int
push
cwde
mov
sar
es
mov
nop
ret
mov
test
fnstcw
sar
rol
lea
es
xchg
pop
mov
adc
hlt
push
icebp
in
add
mov
stc
popf
adc
lahf
pop
push
fwait
stc
adc
sbb
xchg
icebp
dec
sbb
jg
or
mov
and
pop
mov
inc
mov
sti
inc
mov
je
cmp
push
retf
jno
enter
lds
mov
scas
test
mov
daa
mov
fs
adc
out
rol
fxam
mov
cmps
js
lock
popa
push
sub
pop
daa
push
pop
sub
xor
sbb
push
push
jo
ror
scas
inc
or
fldln2
sbb
push
jmp
mov
xchg
sahf
jmp
mov
push
pop
sahf
cmp
xor
stos
test
dec
xor
stos
hlt
rcr
add
cmp
lods
nop
fld
push
cmps
bound
enter
sub
popfw
pop
inc
fwait
dec
pop
xchg
jns
add
fwait
imul
push
imul
fwait
jmp
ret
dec
mov
adc
pop
call
in
call
jle
ret
sub
sub
pop
jbe
jmp
mov
mov
mov
(bad)
dec
and
je
sub
aam
fcomi
pusha
sti
push
jle
dec
mov
push
and
mov
push
(bad)
and
sbb
frstor
and
push
scas
xchg
jo
ja
aaa
adc
add
xlat
data16
stos
test
test
inc
ret
(bad)
pop
out
imul
ret
aam
pop
mov
dec
leave
leave
cmp
add
movs
cdq
xchg
test
jmp
pop
sbb
jge
sar
inc
xor
pop
cwde
xchg
sub
xor
popa
fstp
(bad)
push
add
mov
sub
sbb
xchg
loop
outs
repz
int
mov
xor
push
sub
outs
pop
push
test
shl
mov
fisubr
sbb
lods
pop
lea
adc
repnz
push
and
cmps
test
cmp
pop
out
cld
aas
dec
leave
pushf
rcr
ds
int
test
into
sbb
dec
pop
jp
or
cmps
mov
xchg
(bad)
fadd
xor
push
out
addr16
xchg
adc
pop
mov
push
test
shld
in
es
call
push
enter
mov
jo
jmp
fwait
rcr
sub
mov
pop
retf
mov
je
and
test
jl
jns
and
mov
sub
icebp
mov
mov
sub
je
xor
les
jp
das
push
xor
test
sbb
pusha
fwait
jmp
push
adc
fcomp
jmp
pop
inc
cld
dec
mov
jp
int3
out
scas
in
pop
and
cmp
mov
mov
xor
fisttp
adc
outs
jl
ret
sar
pusha
push
test
sbb
pop
adc
xor
cmp
fsub
sub
les
fimul
sbb
xor
adc
pop
add
mov
aad
aam
popa
or
pushf
mov
xor
into
adc
jecxz
cmp
int3
jno
mov
push
or
loopne
fldenv
xor
out
cli
test
add
add
push
xor
addr16
mul
int
push
adc
lea
popa
jp
inc
and
(bad)
movlps
jl
jmp
xchg
icebp
(bad)
and
jmp
sub
jecxz
xchg
mov
pop
popa
add
aas
je
into
or
cmps
inc
lods
and
das
dec
pop
add
sub
sbb
pushf
int3
(bad)
aam
mov
mov
fchs
inc
xor
xchg
nop
mov
mov
iret
add
xor
mov
scas
sub
movs
and
scas
data16
leave
cmp
add
pop
ds
ror
fild
push
shl
jg
mov
jmp
xor
cld
fistp
jmp
xor
ja
push
ds
jae
sub
loopne
mov
push
stos
sbb
add
test
imul
xchg
push
lods
das
cld
push
jno
out
adc
sub
imul
pop
in
xor
test
jmp
call
jp
xchg
adc
sbb
xchg
adc
cs
dec
mov
pop
std
lds
inc
or
imul
ins
push
or
stos
cld
push
mov
popf
icebp
xor
fild
fistp
and
inc
js
add
fidivr
data16
retf
cs
rol
cdq
dec
int3
ret
adc
out
sbb
mov
cld
sbb
call
inc
sbb
sbb
jnp
push
jl
aaa
jnp
jno
xchg
loope
rcr
dec
cmp
push
dec
push
fidivr
jmp
std
lds
jmp
xchg
aaa
rcr
xor
mov
push
bound
or
fcmovne
jo
xchg
and
and
adc
pop
out
in
cmps
dec
rcr
sbb
leave
cmp
sub
cmp
xor
mov
ss
std
movs
sbb
mov
push
out
sub
sub
or
(bad)
rol
hlt
xchg
add
adc
rcr
fmul
cmp
test
into
iret
ds
adc
hlt
ds
in
stos
ss
enter
and
out
and
mov
push
xchg
sbb
leave
mov
jecxz
jge
mov
xor
shr
dec
add
mov
mov
cwde
lods
shr
iret
loope
push
repnz
stos
xabort
adc
sar
rcr
cs
cmp
aad
aad
dec
pop
mov
push
mov
adc
mov
mov
sbb
adc
mov
jge
dec
adc
jmp
sbb
xor
or
and
hlt
jl
fcmove
sahf
mov
(bad)
dec
and
or
mov
xlat
enter
imul
inc
mov
jg
pop
and
lods
mov
sti
add
mov
aaa
mov
pop
xor
je
push
neg
pop
icebp
stc
or
or
mov
add
pop
out
cs
outs
shr
sub
xchg
leave
loope
sub
mov
mov
xor
ror
fbld
and
in
out
xlat
out
gs
nop
mov
in
packsswb
loopne
add
cmc
lea
mov
xchg
icebp
or
jecxz
cmp
outs
loop
fld
mov
inc
pushf
or
and
dec
call
mov
lds
(bad)
adc
icebp
int3
sahf
xor
ds
test
lods
out
mov
lods
lods
icebp
cmp
fild
push
push
out
mov
jne
and
movs
xchg
leave
dec
cdq
or
mov
mov
mov
in
dec
repnz
test
xchg
sbb
push
ja
inc
hlt
shl
push
push
daa
jp
xrelease
adc
push
ret
mov
pop
push
jnp
dec
fistp
and
ins
(bad)
repnz
loop
push
ds
push
cwde
inc
and
cmp
and
pusha
dec
iret
push
imul
mov
std
iret
popa
ins
ins
and
or
stos
mov
cmps
mov
cmps
pushf
jecxz
sar
jge
leave
cmc
popf
or
mov
add
daa
xchg
and
into
(bad)
ficom
pop
test
sbb
jecxz
xchg
lods
push
pop
int3
cli
sbb
xchg
mov
shl
(bad)
(bad)
call
out
es
in
jg
loopne
mov
mov
ret
mov
xor
xor
mov
add
mov
getsec
in
test
push
scas
xchg
mov
retf
retf
das
(bad)
(bad)
mov
stos
xor
scas
jmp
data16
retf
push
cdq
xor
psubusb
adc
sbb
inc
ret
(bad)
push
push
add
aaa
adc
sbb
fwait
std
add
ins
sahf
sub
dec
jmp
aas
pusha
arpl
addr16
shl
pop
dec
sbb
fadd
sbb
cmp
sub
sub
fmul
push
xchg
(bad)
int3
jno
dec
xlat
gs
mov
push
sbb
inc
inc
inc
call
cmp
inc
cld
mov
jno
xlat
inc
and
mov
call
ficom
das
sub
mov
push
pop
jle
jecxz
lea
xchg
mov
fistp
pop
xchg
test
sbb
or
mov
sbb
pop
sbb
mov
xor
int
cmp
inc
sahf
sbb
pop
mov
xchg
mov
cmp
jg
pop
pop
movs
retf
aam
xor
pop
adc
jo
ins
call
mov
and
mov
and
out
fild
in
mov
out
(bad)
push
nop
sub
push
mov
push
sub
add
and
mov
imul
pushf
adc
mov
pop
jle
and
xor
ja
cld
sub
jno
jmp
pop
ins
sahf
sbb
test
out
rcl
lods
xor
mov
stos
mov
mov
pop
mov
lods
or
adc
mov
mov
stos
(bad)
ficom
push
add
pop
xchg
mov
aam
paddsw
xlat
fsubr
xlat
in
mov
outs
cmp
xchg
xor
xchg
push
test
pop
or
sub
mov
(bad)
sub
mov
add
inc
mov
cmp
jp
cwde
outs
sbb
sub
mov
sti
and
dec
addr16
pop
sbb
jne
push
xor
movs
dec
mov
mov
das
outs
or
cdq
popf
dec
jg
in
inc
or
cmp
sub
pushf
wrmsr
pop
inc
push
dec
dec
jb
adc
in
jno
pop
stc
add
(bad)
(bad)
fiadd
pop
add
push
out
cld
push
mov
dec
test
xchg
mov
ja
dec
pushf
bound
xchg
iret
mov
xchg
dec
pop
mov
sub
(bad)
outs
repz
mov
jmp
adc
or
(bad)
stos
jns
push
leave
mov
test
inc
mov
dec
jge
lds
inc
dec
cld
cld
imul
std
mov
mov
retf
xchg
(bad)
into
jmp
mov
cwde
out
cmp
call
dec
xor
adc
jnp
xchg
cmps
out
mov
into
jmp
icebp
retf
in
lea
jno
and
pop
cdq
loope
pop
sub
imul
arpl
movs
das
movs
add
imul
call
ret
scas
mov
adc
xchg
adc
gs
or
jmp
push
cmps
push
fist
or
gs
bound
ret
sti
bound
mov
test
and
dec
and
sti
je
jno
mov
xchg
pop
and
aam
push
jb
(bad)
retf
out
sbb
fst
jg
shl
xchg
je
in
or
stc
cli
pop
sub
xlat
or
jb
jmp
mov
retf
stc
stc
mov
outs
jae
adc
scas
push
neg
mov
in
jae
jb
mov
mov
push
aam
lea
dec
scas
cld
cmps
cmp
mov
fwait
xor
test
xchg
push
mov
int3
mov
ret
jns
jg
std
mov
push
mov
xchg
pop
fistp
aad
mov
aas
mov
stos
inc
cmp
jecxz
into
js
xchg
sub
(bad)
mov
data16
(bad)
nop
hlt
sbb
sbb
inc
mov
jmp
sahf
ror
popf
mov
cmp
pushf
push
mov
out
aam
or
jbe
jg
movs
ret
pop
in
mov
cmps
call
movs
sbb
sbb
pop
int3
scas
inc
ins
ja
out
sub
inc
jge
push
xor
addr16
test
mov
into
faddp
and
popf
repnz
in
cld
sub
out
inc
xor
int3
call
jp
adc
shr
pop
xchg
das
lods
jg
mov
mov
xor
dec
adc
int
aam
and
pop
adc
stos
test
pop
add
cli
or
sub
arpl
sub
mov
xor
sbb
repz
mov
cmps
push
cmp
lea
and
rcr
sub
mov
cmc
pop
sbb
in
mov
arpl
repnz
and
inc
pop
pop
enter
std
(bad)
jmp
mov
dec
(bad)
daa
fst
lock
lods
arpl
jge
mov
mov
push
lock
pop
xchg
push
inc
bound
mov
iret
cmp
xchg
aad
(bad)
adc
pop
je
js
mov
dec
pop
pop
mov
mov
popa
xor
fisttp
cmp
cwde
popa
daa
mov
dec
sub
bswap
fimul
cmp
mov
(bad)
iret
out
mov
sbb
jns
neg
repz
aad
bound
enter
call
xor
sti
retf
cmp
dec
xchg
(bad)
test
mov
cmp
jno
dec
aad
sar
outs
inc
cmp
inc
outs
retf
popa
fwait
hlt
and
fld
neg
mov
push
inc
adc
xchg
lods
outs
or
push
movs
pop
pop
adc
inc
out
xchg
and
dec
xchg
popa
lea
fucompp
pop
push
and
ds
xor
ds
idiv
int3
out
or
inc
add
dec
retf
pushf
mov
in
push
aaa
pop
call
xchg
pop
push
aas
add
inc
ret
push
xor
stc
add
jmp
jl
add
cdq
ja
popa
push
popf
cmp
mov
jo
sub
clc
jl
ror
sbb
ret
jae
data16
xor
mov
into
mov
pop
adc
into
sbb
in
xor
nop
dec
ins
add
loopne
dec
push
rcr
dec
not
push
and
and
pushf
cmc
add
mov
fild
mov
sub
leave
jmp
ror
mov
cmps
pusha
or
iret
dec
inc
les
pop
fsin
fisub
div
xor
(bad)
mov
adc
aad
push
mov
call
and
ret
and
push
pop
sti
test
dec
or
sbb
xchg
adc
rcl
gs
xor
sbb
push
mov
xchg
and
jg
test
ins
xor
inc
out
cmp
retf
test
mov
mov
xchg
int
pop
fimul
and
out
xchg
pushf
mul
lea
inc
scas
pop
cmova
pusha
pop
adc
mov
sub
(bad)
call
inc
fucom
mov
call
rol
loope
sar
inc
adc
dec
adc
ja
or
mov
fwait
pop
daa
push
mov
or
mov
mov
xchg
cmp
push
inc
ror
les
sbb
test
cld
cmps
adc
mov
or
pop
repnz
fnstsw
fstp
inc
inc
cmps
fcom
push
arpl
arpl
add
xlat
cmp
mov
add
mov
sbb
fmul
(bad)
cmps
clc
jne
cli
retf
and
lock
gs
xor
add
pop
or
jmp
jbe
mov
sti
or
mov
push
and
imul
sub
mov
jmp
shr
mov
(bad)
shl
push
in
jne
mov
xchg
and
add
outs
xor
dec
cmp
adc
push
aaa
push
fist
cmc
inc
fstp
adc
pop
push
nop
jbe
xchg
add
mov
pop
pop
inc
dec
int
pop
lods
scas
sbb
adc
aam
xor
loopne
pop
aam
mov
jb
jbe
jge
push
idiv
jbe
sub
xchg
or
mov
lods
repz
xor
aas
je
imul
push
and
pop
ins
dec
loopne
jp
movs
inc
or
push
pop
jecxz
ret
pop
pop
pop
dec
enter
dec
imul
adc
cmp
leave
sbb
xor
stc
push
(bad)
(bad)
aam
mov
jl
xchg
dec
mov
and
mov
cmp
sub
mov
cdq
xor
or
jmp
inc
pop
mov
push
and
imul
or
push
retf
xchg
test
cdq
push
mov
test
js
cdq
adc
js
xchg
cmp
jmp
sbb
ret
lock
push
cwde
xchg
sub
cmp
cmp
ds
fcom
cmp
xor
rcr
xor
sub
inc
jbe
fisub
aad
xchg
adc
push
push
pop
inc
cmp
ror
dec
pop
mov
aaa
mov
inc
fadd
dec
adc
adc
ja
sahf
adc
pusha
outs
push
cmp
dec
cwde
push
scas
adc
les
sub
popa
ja
jp
and
or
push
ret
es
ss
mov
daa
pop
xchg
sub
clc
sub
or
dec
fnstsw
sbb
nop
leave
xor
in
adc
aam
imul
imul
(bad)
call
jmp
pop
je
lahf
mov
sub
add
add
cmp
jmp
popf
cli
jne
mov
push
cmps
scas
adc
aas
sahf
aas
xor
cmp
stos
jle
sub
jne
cdq
sti
in
mov
xchg
or
mov
and
jnp
cmps
test
pop
lds
ja
test
dec
stos
(bad)
sar
jnp
jp
or
or
push
fld
pop
fdivr
dec
push
mov
cmp
dec
add
pop
add
push
shl
mov
xchg
lods
int3
inc
push
sub
pop
std
repnz
loop
test
movs
(bad)
push
sbb
dec
sub
sets
inc
add
dec
hlt
sub
jle
xor
mov
inc
jns
sbb
sbb
xor
jmp
cmp
adc
pop
xchg
adc
and
adc
fsubr
adc
call
cld
in
inc
dec
retf
dec
push
es
sbb
adc
mov
xor
mov
in
shl
and
mov
nop/reserved
xchg
cmc
(bad)
jne
sti
xchg
in
cmp
fldenv
add
test
jns
add
scas
mov
(bad)
mov
not
movs
jecxz
scas
outs
jmp
jns
inc
sbb
(bad)
repz
xor
add
jae
mov
and
retf
jo
jl
xchg
xchg
jl
cmp
and
sbb
mov
int3
mov
and
test
adc
mov
sbb
int
cmp
jno
push
ret
lods
adc
lock
test
ins
xchg
js
xchg
imul
mov
sbb
shr
mov
pop
sub
add
xchg
bound
push
mov
sub
std
fucomip
adc
sub
cmp
call
inc
jno
aas
(bad)
pushf
cmps
inc
int
inc
ja
imul
aaa
stc
inc
repnz
retf
fdivrp
aaa
xor
push
fiadd
adc
call
test
test
jl
jg
xor
and
and
push
pop
stos
ds
sbb
xor
sbb
sar
bound
inc
inc
call
mov
iret
adc
scas
add
sbb
ja
and
hlt
mov
lods
pop
addr16
arpl
and
mov
and
xchg
sti
in
enter
xchg
push
ds
icebp
pop
lahf
mov
int3
fwait
dec
mov
fldln2
pop
or
inc
dec
into
sub
ins
sub
or
jns
xor
mov
dec
aaa
inc
outs
out
aas
mov
sub
lods
push
fs
(bad)
gs
adc
add
(bad)
cmps
out
inc
iret
dec
adc
jb
add
jmp
test
sub
in
fist
push
and
mov
scas
outs
pop
scas
xor
and
fdiv
shl
in
jb
xchg
jle
imul
jg
jo
std
jmp
xor
scas
and
mov
(bad)
xchg
dec
lea
xchg
aam
dec
arpl
inc
mov
hlt
sub
inc
(bad)
mov
(bad)
jp
ret
aad
cmp
push
pop
mov
int3
and
push
xchg
inc
jno
jp
xor
stos
pop
ins
adc
bound
sahf
fidivr
test
and
mov
fwait
mov
push
mov
test
je
jl
out
shl
loopne
pop
mov
shr
scas
jmp
pop
out
xor
shl
(bad)
in
les
(bad)
push
push
push
mov
and
jp
dec
retf
hlt
ins
xchg
inc
icebp
inc
ss
dec
and
sbb
in
mov
adc
mov
add
int3
mov
pop
cmp
ret
and
sahf
push
sahf
sub
stos
ins
xchg
pushf
dec
loop
xchg
addr16
jb
inc
ret
pop
into
sbb
mov
mov
mov
and
dec
xlat
jae
pop
xchg
push
das
pop
jle
movs
push
fmul
cdq
inc
cmp
in
scas
mov
push
inc
sbb
push
dec
xlat
cmp
cld
popa
jp
int
xchg
jmp
xor
jns
lahf
sbb
daa
stc
adc
aad
pop
rol
ror
and
call
dec
movs
les
sub
outs
call
mov
in
jae
sbb
in
sub
adc
and
push
mov
mov
sbb
fucom
cmp
les
fcom
fstp
cmp
push
inc
outs
or
adc
or
xchg
and
fcomp
push
ins
loope
in
cdq
push
in
dec
and
scas
fsubrp
cli
dec
xchg
xchg
fisttp
cld
sbb
repnz
nop
push
imul
cmp
cmps
cmp
mov
push
js
and
test
cmps
and
cmp
sbb
jno
adc
inc
aas
cli
jecxz
aaa
jg
adc
hlt
sub
push
jmp
js
sub
add
int
(bad)
imul
mov
ins
mov
cwde
test
movd
ror
cmps
sbb
mov
mov
and
adc
xchg
cmp
inc
repnz
(bad)
xchg
sar
test
sub
mov
push
mov
movs
jg
ss
addr16
push
pop
daa
stos
(bad)
sahf
cwde
cmp
pop
fstp
lahf
mov
jae
lds
mov
pop
imul
mov
in
xor
adc
and
dec
or
jp
sub
imul
ds
xor
fwait
xchg
dec
cmp
cmp
call
xor
and
jns
dec
vhsubps
mov
adc
mov
push
retf
ins
jns
jmp
xchg
add
pop
mov
test
inc
or
jbe
pop
xchg
jecxz
dec
cmc
xor
adc
inc
mov
out
mov
or
adc
stos
cmp
movs
sub
adc
repz
mov
cmc
jno
enter
pusha
(bad)
les
mov
aas
sub
sub
push
outs
aam
dec
(bad)
idiv
mov
fisubr
scas
sbb
call
bound
ret
add
jne
adc
(bad)
sub
jge
jb
sar
jb
iret
pop
sbb
ins
cli
cdq
mov
imul
sbb
jae
add
mov
or
mov
or
imul
pop
popa
pop
data16
hlt
jp
sar
dec
outs
sub
pusha
jl
hlt
mov
test
inc
jae
inc
je
jecxz
repnz
jns
test
jo
movs
aaa
cli
pop
push
xchg
fdivr
sub
mov
test
adc
aas
or
stos
xchg
dec
cwde
or
(bad)
std
jno
call
fisubr
stos
out
cmp
add
bound
cmp
jl
xor
jl
sub
mov
daa
sbb
push
xchg
jmp
and
call
and
sub
push
mov
push
jp
lahf
cmc
mov
scas
imul
hlt
fnstenv
rol
xchg
stos
sub
out
inc
or
stc
push
scas
mov
cmp
imul
(bad)
mov
cli
xor
xor
outs
stos
(bad)
loopne
jns
cmp
in
call
xchg
sahf
and
fwait
imul
mov
pop
iret
xchg
mov
and
out
xor
pop
add
or
or
jg
mov
inc
sahf
shr
fisub
cli
adc
aad
sbb
lds
push
retf
dec
out
or
js
inc
ins
add
enter
test
push
das
pop
scas
mov
and
pop
push
rol
ret
nop
dec
xor
(bad)
pop
or
dec
fs
popa
mov
rol
pop
mov
pop
cmp
rol
add
adc
mov
call
dec
lods
scas
repnz
cmp
ret
inc
xor
and
push
pop
(bad)
lds
sbb
and
out
sub
sbb
pop
dec
push
ins
mov
or
adc
test
stc
or
cmp
imul
push
out
imul
jecxz
shr
leave
adc
iret
iret
int3
mov
xchg
pop
ds
imul
(bad)
in
mov
cdq
pop
jmp
pop
popf
xchg
cmp
cmp
out
mov
(bad)
cmp
or
prefetch
xchg
not
and
xor
ret
push
and
dec
stc
fbstp
arpl
xchg
fadd
imul
cmp
push
jnp
cdq
xor
or
cmp
xor
dec
(bad)
xor
sub
mov
inc
mov
xor
das
inc
xchg
xor
shl
push
add
mov
mov
or
jae
push
repz
stc
inc
in
push
stc
mov
loop
es
sub
mov
pop
pop
mov
call
lods
repz
push
jle
stos
shl
in
cwde
mov
push
jmp
repnz
jno
jecxz
ds
hlt
cmp
jb
test
fimul
sub
scas
(bad)
popa
stc
call
xchg
fdivp
int
sbb
hlt
adc
pop
cmps
add
adc
(bad)
shr
loopne
sti
mov
sbb
imul
jno
sar
push
adc
mov
push
xor
jg
mov
sahf
js
fstp
mov
sub
jecxz
test
popf
jl
sub
xor
cs
sub
or
pusha
dec
mov
stc
nop
pushf
xor
das
or
enter
lods
jnp
or
out
jp
inc
xor
leave
jp
mov
inc
cmp
loop
jl
mov
in
add
jg
rcr
mov
es
xlat
(bad)
sub
jmp
sub
les
clc
fisttp
repnz
and
or
or
and
std
hlt
movs
sbb
stos
pop
fdivr
(bad)
mov
jl
mov
loopne
pop
inc
dec
push
sub
xchg
xchg
inc
into
jmp
and
cld
enter
(bad)
sti
(bad)
in
aam
test
push
hlt
shl
fbstp
mov
mov
ds
fwait
idiv
sahf
js
jecxz
add
scas
pop
inc
mov
jnp
xchg
or
(bad)
(bad)
sbb
popf
imul
adc
or
aaa
bound
add
sbb
fldenv
ror
repz
xchg
cs
jns
rcr
inc
push
inc
lock
xor
cld
(bad)
stos
jb
mov
or
ins
mov
mov
inc
pop
jns
rcr
int
xor
adc
mov
mov
pop
pop
outs
add
xchg
pop
xlat
xlat
and
cmp
cmp
in
cmps
sub
xor
xchg
push
daa
call
leave
push
xchg
sbb
push
int3
mov
out
sub
lods
xor
ds
lahf
xor
(bad)
lods
aad
sbb
xchg
gs
es
mov
adc
and
pop
dec
mov
repz
inc
stc
xor
test
in
cmp
movs
or
ins
push
lds
or
arpl
xchg
rcr
les
ja
push
fidiv
or
sbb
inc
mov
sub
sub
retf
cdq
pusha
into
and
out
stos
push
xchg
xchg
cld
jmp
and
aad
mov
push
data16
int
into
adc
mov
movs
jmp
mov
add
sbb
pop
and
push
loop
push
cmps
adc
push
push
(bad)
mov
add
xor
dec
push
inc
and
clc
(bad)
mov
add
adc
push
or
iret
not
xchg
aad
fwait
pop
pop
sbb
cmp
dec
pusha
cmps
ror
mov
mov
mov
jbe
pop
hlt
jae
or
push
pop
cmp
push
jle
pop
mov
mov
out
add
mov
xor
dec
dec
push
adc
dec
adc
jb
ds
call
jmp
or
fwait
push
sbb
fistp
les
aaa
jp
fistp
fwait
mov
and
fdiv
mov
loope
cmps
dec
ret
mov
or
retf
sahf
xlat
and
and
ins
addr16
sub
mov
aaa
cdq
push
jg
or
clc
out
mov
ja
stos
imul
rol
jnp
int
jnp
outs
popa
adc
repnz
out
jno
push
ret
xlat
test
inc
pusha
shl
cld
sar
cli
xchg
push
jbe
mov
inc
cmp
fst
xchg
lods
je
mul
aad
test
ss
test
inc
pop
mov
aas
push
test
pop
jnp
adc
pusha
xor
(bad)
cdq
xor
xchg
mov
sub
in
jg
les
xor
stos
aaa
das
mov
sahf
pop
mov
mov
loop
rcr
inc
arpl
sar
mov
mov
daa
(bad)
add
mov
inc
int
inc
mov
repnz
iret
pusha
scas
xor
mov
mov
mov
add
std
xor
cld
into
cmp
pusha
fsubr
loopne
and
xchg
pusha
(bad)
fdivr
(bad)
sar
ins
fmul
cmp
or
scas
inc
jmp
xor
rcr
or
movs
mov
xchg
retf
and
ins
cwde
push
dec
mov
in
xchg
xchg
test
push
xchg
nop
jle
out
mov
cld
std
or
lods
or
jae
test
add
sti
scas
test
out
aaa
fcomi
shr
mov
pop
cli
ins
pop
stos
jo
cdq
xchg
mov
enter
push
mov
sti
sahf
mov
imul
push
add
repz
div
add
cdq
xchg
pushf
fild
rol
jp
retf
pop
cmp
dec
add
xor
lahf
xor
movs
cmp
retf
pop
(bad)
mov
outs
jmp
(bad)
mov
mov
jg
neg
repnz
xchg
arpl
fisttp
inc
fwait
in
jne
xchg
fsub
(bad)
int
je
xchg
or
push
es
ins
aaa
sbb
out
movs
fcomp
mov
mul
imul
cmp
scas
and
les
(bad)
mov
inc
rcl
retf
and
xchg
clc
in
add
shl
cmps
(bad)
adc
aam
xor
add
out
push
mov
ja
mov
xor
xor
sbb
dec
pop
cmp
ret
leave
adc
(bad)
cmp
push
clc
pop
inc
push
cmp
imul
addr16
ror
inc
imul
jmp
aam
out
loop
movs
icebp
ins
iret
rcl
(bad)
sbb
repz
repnz
sti
add
push
cmp
es
scas
jge
and
test
(bad)
cs
sti
or
enter
imul
xor
ds
mov
pop
xchg
mov
jb
fimul
push
es
test
push
mov
sti
lds
mov
cmp
pop
pop
fwait
sub
xchg
fwait
into
mov
repnz
and
enter
cmps
jb
xor
arpl
jb
push
movs
jae
mov
stos
jo
dec
das
push
retf
jge
cli
repnz
fldcw
xchg
inc
mov
cwde
jbe
pop
add
fwait
xchg
fild
sub
(bad)
jge
aad
loopne
and
das
inc
in
data16
inc
hlt
dec
pushf
lahf
cmp
pop
add
(bad)
fstp
push
mov
or
(bad)
call
jb
adc
shl
fdivrp
ins
inc
out
cwde
stos
(bad)
fsincos
hlt
retf
push
xor
nop
ret
stos
cmp
sbb
sbb
sbb
inc
xchg
push
ret
dec
test
sub
pop
or
in
add
in
mov
std
add
push
jg
add
xchg
xor
add
in
rcr
jnp
and
dec
call
mov
stos
dec
test
cmp
cmp
jl
push
(bad)
cmp
fs
xchg
pusha
imul
xchg
adc
into
lds
xchg
dec
fild
adc
not
loope
test
xor
inc
cdq
xor
ds
aam
mov
mov
retf
push
xor
pop
xchg
retf
dec
shl
xor
xor
xor
inc
sub
(bad)
div
lahf
mov
sbb
inc
dec
mov
jnp
sbb
pop
jecxz
mul
enter
dec
sub
aaa
rol
jg
aad
mov
cdq
pop
(bad)
ds
cdq
int3
jg
mov
clc
outs
and
xor
add
add
retf
xor
in
sbb
frstor
inc
nop
sbb
test
sbb
pop
pusha
jae
imul
cmp
or
or
pushf
xchg
mov
jo
mov
into
mov
xlat
cmc
fisubr
test
(bad)
or
mov
fstp
rcl
mov
xchg
sub
test
mov
daa
push
fstp
pop
in
push
addr16
sti
jle
lea
(bad)
xchg
cmp
psubd
adc
and
push
int
mov
mov
data16
sbb
dec
(bad)
cmc
lods
nop
add
or
nop
rcr
(bad)
outs
mov
test
es
sbb
ds
add
repz
and
test
inc
cmp
rol
jge
or
add
adc
push
gs
in
mov
push
jp
sub
push
ror
in
xor
xor
xchg
lock
xchg
movs
push
push
sbb
addr16
jmp
pop
dec
dec
mov
lds
mov
dec
in
mov
ins
inc
inc
sub
mov
cld
xchg
inc
out
push
and
mov
pop
sub
cli
ds
xchg
dec
imul
inc
ds
pop
loopne
js
popf
aas
or
addr16
scas
loopne
mov
jnp
adc
mov
icebp
xchg
pcmpgtw
pop
or
loop
sbb
inc
sbb
push
(bad)
shl
in
das
pop
leave
sub
adc
retf
sbb
fwait
cmp
clc
xor
jp
cmc
aas
adc
push
xor
ins
jae
lods
sub
aam
cs
push
pop
in
ret
xor
dec
ror
(bad)
xor
int3
add
pop
dec
test
dec
inc
jle
in
adc
jmp
arpl
mov
mov
jl
xor
xor
sub
es
in
mov
cs
mov
test
push
jne
mov
adc
cmp
mov
or
mov
or
cli
and
and
in
jg
jmp
add
or
xor
mov
jmp
mov
pop
xchg
scas
sbb
or
sbb
push
jo
out
mov
sbb
imul
add
mov
push
jae
ror
loopne
cmp
mov
adc
scas
mov
or
adc
mov
xor
dec
jecxz
and
sub
ret
shl
adc
adc
lods
jge
in
ins
sti
cmp
popf
sbb
gs
push
xor
and
movs
add
aad
mov
and
xchg
jecxz
bound
sbb
dec
out
aad
inc
jmp
sub
jp
sub
cmp
mov
cwde
add
and
inc
mov
call
xor
jp
fidivr
push
mov
inc
and
scas
out
daa
fincstp
test
gs
jns
mov
jmp
into
xchg
les
pop
xor
jmp
mov
ss
daa
cs
enter
pop
push
les
outs
dec
and
clc
ins
ins
hlt
into
fmul
and
ds
sbb
(bad)
out
jmp
ficom
loopne
mov
aas
cmp
sti
icebp
lea
cmp
or
push
dec
jg
cmps
xor
mov
movs
adc
repz
mov
movs
retf
cmps
pop
dec
into
clc
jge
push
or
fwait
cwde
fs
cmp
rol
xlat
mov
ss
inc
cmps
adc
out
push
mov
inc
sbb
jo
sub
rol
inc
mov
inc
enter
out
arpl
clc
movs
xchg
adc
mov
cli
jbe
outs
cmp
or
jns
push
cmp
pop
int
std
mov
pop
and
movs
push
shl
sub
sub
dec
jnp
or
or
fsub
pop
sbb
or
mov
repnz
cli
jae
shl
jnp
call
or
push
mov
push
loop
repz
ret
jmp
mov
mov
sub
call
dec
inc
xchg
adc
sub
pop
dec
scas
adc
xor
xchg
or
inc
cmps
imul
fiadd
retf
adc
cmc
mov
call
nop
and
popa
scas
js
mov
and
ficom
cmps
or
dec
add
pop
pop
es
and
mov
inc
sub
in
adc
cmp
push
and
and
in
or
add
mov
clc
ins
inc
in
cmp
dec
sub
sub
mov
icebp
pop
data16
xchg
bound
fs
xor
cmp
push
icebp
shr
call
jns
int
gs
ja
mov
pop
cwde
pop
sbb
mov
(bad)
retf
or
and
push
adc
dec
push
jns
adc
mov
aam
inc
sub
jecxz
inc
jnp
mov
cdq
cmp
in
mov
pusha
or
imul
push
ins
enter
test
sub
push
popa
inc
sub
xor
lock
xor
bound
and
pusha
pushf
gs
shl
arpl
mov
(bad)
fimul
mov
lea
mov
in
mov
or
daa
adc
jmp
jmp
jae
fadd
add
lahf
push
jno
loopne
jns
lahf
jmp
mov
outs
lea
fild
(bad)
cdq
fist
mov
retf
cmp
movs
sub
ins
ficomp
lea
in
jne
mov
stos
test
idiv
(bad)
in
scas
dec
cmp
cmps
cs
and
and
icebp
mov
jmp
mov
test
aaa
es
cmp
add
push
push
dec
mov
xor
aam
leave
xor
xchg
out
stos
inc
push
shl
mov
xor
jg
jns
je
push
jge
mov
mov
adc
mov
out
sbb
arpl
leave
stos
es
add
mov
(bad)
mov
mov
mov
pop
push
rcl
(bad)
cmps
inc
dec
stc
arpl
inc
dec
adc
jge
out
vpavgw
ss
or
addr16
in
and
test
mov
or
inc
mov
inc
iret
mov
mov
inc
ins
cmp
sbb
js
pop
sub
add
ss
cmp
imul
sbb
dec
cmc
loope
lock
jle
push
je
push
movs
clc
inc
fs
sbb
jne
push
sub
ds
jle
ret
pop
push
mov
mov
in
aas
jmp
mov
xor
cmps
xchg
xor
pop
daa
loope
bnd
cmc
or
or
pushf
dec
mov
mov
mov
pop
sbb
nop
ds
out
adc
inc
push
mov
fnsave
jp
faddp
enter
add
adc
jne
fcomp
mov
out
xchg
fldenv
sub
sbb
icebp
jle
shl
lods
mov
pop
adc
std
int
dec
or
push
movs
inc
nop
pushf
das
mov
push
adc
adc
es
xor
push
cs
jns
adc
(bad)
data16
jl
adc
cmp
call
add
mov
out
mov
stos
add
es
or
ss
hlt
pop
(bad)
aad
dec
xor
mov
int
les
out
hlt
nop
inc
mov
in
mov
and
mov
inc
push
and
push
cmp
sub
add
or
jle
imul
addr16
adc
inc
mov
xor
out
pop
jb
(bad)
mov
pusha
sbb
mov
loopne
jbe
repnz
std
daa
jo
sbb
mov
retf
ret
popa
ins
cdq
xor
cs
mov
movs
mov
mov
jns
stos
neg
or
iret
icebp
enter
push
imul
xchg
outs
fdivr
stos
sar
int3
pop
mov
ret
dec
or
icebp
inc
dec
or
cmp
xchg
inc
pop
cmp
xlat
les
adc
sbb
dec
cmp
adc
fstp
sub
daa
jge
leave
scas
adc
repnz
stos
pusha
call
int3
ins
stos
or
popf
fs
test
fdiv
push
and
mov
pop
(bad)
pop
scas
stos
xchg
pop
push
lds
scas
jmp
and
out
mov
mov
(bad)
cmp
aas
cs
xor
std
dec
ins
mov
and
daa
shr
(bad)
mov
popf
cmp
sub
mov
xchg
mov
add
dec
scas
push
sbb
add
and
cld
add
sti
jl
and
mov
(bad)
mov
jmp
xor
data16
test
cs
jmp
adc
mov
sbb
xchg
in
adc
fisub
cli
jp
fisttp
push
adc
and
ror
pop
jl
lods
sbb
test
repz
stos
cs
push
in
cmps
xchg
mov
cmps
in
mov
sub
repnz
pop
fucomip
pop
add
mov
jp
xchg
or
dec
enter
icebp
test
jbe
dec
outs
sub
fisubr
inc
sete
xlat
fldcw
inc
aas
cli
mov
pop
mov
mov
inc
loopne
pop
cwde
das
sub
in
mov
pop
cdq
sbb
mov
repz
mov
sub
sub
inc
pop
or
dec
std
xchg
fld
popa
jmp
xchg
lods
pop
(bad)
lock
mov
ss
pop
cli
jae
xchg
and
(bad)
cmp
mov
int3
inc
enter
adc
and
inc
iret
xchg
push
mov
jmp
cdq
push
lods
xor
mov
dec
lahf
or
fs
xlat
xchg
sub
mov
jle
mov
mov
cmc
ins
mov
push
in
xlat
pop
xchg
mov
sub
shl
adc
imul
sub
inc
jae
movs
mov
xor
mov
mov
fldenv
sub
sbb
enter
sbb
jmp
bound
mov
cmps
pop
je
into
and
add
hlt
(bad)
out
mov
xchg
bound
or
ret
lahf
push
inc
inc
mov
nop
pop
cmp
mov
cli
inc
in
pop
inc
mov
loop
lds
sub
leave
addr16
sub
jmp
inc
mov
aad
dec
jae
or
rcl
sub
jb
(bad)
and
out
and
scas
cmps
out
hlt
inc
out
mov
mov
inc
and
stos
dec
stos
pop
repnz
arpl
jmp
push
rcr
push
push
mov
push
jbe
(bad)
sbb
adc
push
pop
push
pushf
xchg
pop
add
jg
loope
scas
pushf
sub
xchg
mov
lods
xchg
cwde
int
xlat
iret
inc
iret
push
push
test
push
out
sbb
mov
dec
outs
push
xor
dec
(bad)
lods
loope
inc
retf
fisttp
mov
mov
inc
imul
es
sbb
pop
fsubr
pop
popf
dec
jb
push
fmul
jl
popa
inc
mov
(bad)
and
cmp
inc
xor
sbb
cmp
retf
lods
leave
retf
xchg
cmps
dec
jl
lds
jmp
cdq
sbb
mov
mov
(bad)
and
mov
jo
mov
fnclex
hlt
fist
jbe
(bad)
ret
adc
pop
popf
and
(bad)
(bad)
cdq
xor
and
pop
adc
dec
repnz
lods
repnz
push
loope
mov
in
repz
push
call
xchg
xor
jl
xchg
mul
aam
cmp
mov
pop
jl
adc
and
repnz
adc
fs
addr16
in
(bad)
das
fldcw
daa
les
and
jnp
dec
jno
mov
sub
add
imul
dec
or
popa
xlat
scas
jmp
jns
mov
out
js
hlt
rcr
inc
or
cld
pop
xchg
popa
mov
outs
stc
fwait
or
ret
sar
push
mov
mov
jns
pop
mov
sub
test
push
push
fcomp
jl
in
pop
(bad)
jmp
rcl
mov
test
in
jb
pop
jo
neg
cmp
cdq
std
mov
or
fs
jne
jmp
fcom
pop
push
repnz
movs
gs
sub
stc
aas
out
movs
cld
pop
addr16
jno
adc
or
adc
test
mov
jg
dec
add
in
pop
push
shl
and
dec
or
pop
cmps
add
fnstenv
pusha
cmp
(bad)
(bad)
into
mov
xchg
mov
fsub
cld
xor
outs
add
mov
into
(bad)
push
push
cdq
mov
mov
mov
fstp
into
fnsave
sub
pop
fs
repz
xor
mov
in
enter
jae
mov
mov
in
call
xor
mov
push
mov
mov
pop
lea
push
repz
mov
jmp
sub
or
jbe
add
fidiv
inc
into
mov
and
sub
shl
div
mov
div
in
loope
rcr
xchg
dec
repnz
push
pop
mov
push
dec
out
pop
push
xchg
les
mov
and
xchg
dec
and
xchg
push
inc
in
in
pop
out
jmp
xor
push
loop
ins
xchg
repz
dec
push
mov
addr16
xchg
inc
jns
ds
jmp
and
jecxz
and
cmp
jno
mov
or
or
test
test
cdq
push
mov
mov
pushf
mov
or
and
call
js
adc
(bad)
popf
xchg
push
push
mov
(bad)
loop
(bad)
out
es
out
sahf
sti
mov
mov
jb
mov
inc
xchg
or
int
nop
aam
push
push
jmp
ja
cmp
adc
sub
push
jge
loop
test
mov
nop
int3
jecxz
pushf
adc
xlat
mov
pop
fadd
mov
out
cmp
inc
sbb
sub
sbb
shl
adc
push
iret
mov
push
(bad)
xor
jne
sbb
adc
jmp
fwait
js
into
xor
push
(bad)
mov
jl
repz
das
out
fdivr
mov
inc
mov
cmp
dec
(bad)
push
add
in
outs
hlt
add
xor
jecxz
nop
add
push
and
xchg
sub
cmp
les
or
test
lock
enter
pop
retf
test
cmps
iret
dec
aam
xor
pop
mov
mov
mov
jbe
(bad)
jne
sbb
mov
push
rcl
mov
test
adc
shr
rcr
push
push
jg
pop
mov
push
pop
xchg
repz
sbb
je
adc
lds
xchg
sub
lds
push
push
sar
mov
mov
push
ds
cmp
mov
push
daa
cdq
jmp
fnstsw
mov
stos
retf
lds
call
adc
cmp
cld
xchg
lea
or
int3
fild
xor
inc
pop
sbb
add
push
lahf
nop
lea
fcomp
lahf
jmp
test
adc
test
push
mov
xlat
or
jb
xchg
pop
(bad)
or
mov
or
test
cmp
pop
inc
inc
mov
push
sbb
mov
jnp
mov
ror
add
mov
sbb
into
(bad)
lods
out
sub
inc
sti
sti
adc
ret
out
mov
jmp
jmp
jne
add
aad
sar
dec
daa
clc
scas
je
and
or
jb
stos
and
pop
sbb
mov
adc
or
mov
test
adc
dec
jmp
adc
mov
mov
jb
in
jge
push
jge
push
push
xor
push
jecxz
into
jl
xor
aaa
imul
jo
jnp
fbstp
mov
pop
fimul
icebp
add
mov
jb
pop
test
lahf
pop
arpl
pop
pop
movs
in
mov
dec
std
lea
icebp
xchg
adc
(bad)
jae
push
test
lock
out
mov
and
ins
xlat
je
popf
push
aam
hlt
aaa
retf
adc
in
or
xchg
retf
addr16
lods
daa
pop
dec
adc
sub
inc
mov
sub
inc
mov
or
lods
lds
movs
mov
js
jg
mov
test
sbb
call
popa
or
xchg
nop
cs
repnz
nop
push
push
mov
(bad)
adc
sbb
push
mov
mov
cmps
fistp
icebp
(bad)
jo
sbb
cmp
jne
and
jmp
fild
(bad)
sbb
scas
push
out
and
(bad)
loopne
fist
jecxz
clc
stos
pushf
test
pop
sbb
push
sbb
mov
jg
xor
mov
sub
sub
(bad)
int
in
retf
xor
test
ret
dec
inc
fwait
mov
retf
call
pop
mov
xchg
sti
adc
clc
repnz
xor
inc
shl
adc
dec
or
outs
pop
jne
mov
test
push
ret
jne
xchg
pop
and
stc
repz
pop
cmp
jmp
jo
int3
cmp
dec
dec
sti
mov
adc
mov
lock
cmp
mov
int3
addr16
xchg
mov
inc
scas
(bad)
mov
sbb
xchg
(bad)
repz
sub
jno
mov
and
mov
and
ja
push
retf
es
(bad)
mov
icebp
inc
cld
cmp
cs
fadd
data16
pop
pop
mov
mov
xchg
dec
add
or
jmp
cvtpi2ps
cdq
mov
fistp
and
in
pop
xor
jno
(bad)
leave
jmp
loope
hlt
cmp
gs
lahf
pop
test
push
cs
out
rcl
out
push
inc
push
je
jne
dec
stos
dec
mov
jno
mov
movs
sub
ja
retf
fsubr
nop/reserved
push
and
idiv
mov
rcl
iret
sub
mov
loopne
pop
cdq
jnp
ja
or
clc
xchg
pop
mov
jp
loop
arpl
jne
call
repz
sbb
hlt
iret
fsubr
fwait
sub
fcom
inc
jbe
xchg
inc
mov
inc
adc
test
mov
in
ret
in
mov
inc
ins
or
jae
neg
shl
cs
dec
sub
dec
and
(bad)
cs
fdivr
gs
mov
xchg
call
leave
(bad)
aad
sbb
xchg
adc
push
adc
and
idiv
inc
add
sbb
and
sbb
xor
xchg
aas
loopne
sub
push
cmps
add
aas
nop
mov
movs
sub
sbb
dec
(bad)
(bad)
test
pusha
outs
mov
add
(bad)
(bad)
test
xor
aad
mov
mov
dec
push
cs
fs
xchg
fnstcw
lds
mov
popf
pop
call
jo
pop
mov
dec
(bad)
lods
int
pop
call
loop
pop
push
mov
pop
pop
jns
dec
jne
popf
fild
out
and
ja
dec
push
hlt
mov
out
call
or
mov
xchg
mov
ret
push
cmc
inc
xchg
popf
push
adc
imul
adc
jmp
pop
pop
cmp
pop
das
mov
pop
stos
adc
xchg
in
pusha
les
sub
inc
inc
in
fcomi
pop
xchg
vmovapd
ss
xchg
xchg
push
inc
xchg
add
rcr
mov
and
sub
neg
std
xor
gs
(bad)
in
cmp
sub
adc
out
fisttp
mov
cmc
test
movs
(bad)
movs
call
bnd
mov
addr16
cld
nop
test
stos
clc
xor
addr16
lds
inc
xchg
call
or
mov
cdq
push
xlat
adc
loope
jbe
bound
sahf
jp
jge
lods
xor
or
call
push
leave
mov
fisubr
push
jp
dec
inc
aam
fistp
fmul
sahf
test
cwde
pop
or
cwde
imul
fucomi
dec
gs
and
mov
outs
add
loope
fisubr
shl
fcom
mov
sub
xchg
arpl
jg
sub
popf
dec
sub
sbb
push
pop
dec
outs
sbb
je
sub
adc
fs
retf
mov
jp
loopne
(bad)
mov
adc
fst
inc
xchg
inc
inc
ror
in
fmul
popa
push
sbb
xor
jb
mov
inc
js
jb
jp
sub
add
fidiv
movs
add
jae
push
das
add
jp
das
cmc
mov
mul
push
sub
dec
test
ds
lods
out
pop
(bad)
retf
cmp
cmps
out
jmp
in
adc
sub
std
adc
scas
fisttp
retf
pop
shl
mov
xchg
cmp
int
xchg
mov
fld
adc
xor
or
aam
push
fcomp
arpl
push
dec
and
arpl
push
push
dec
push
ret
mov
in
push
inc
pop
push
(bad)
mov
pop
leave
add
xchg
ret
add
setl
stos
mov
sbb
push
mov
dec
push
push
xor
test
rcl
dec
jmp
mov
cmp
scas
xchg
shr
pop
mov
out
ret
xchg
or
clc
fisub
dec
mov
mov
js
fnstenv
(bad)
sbb
test
dec
cmp
pop
fiadd
imul
xchg
mov
arpl
in
pop
sbb
xor
stos
xor
adc
add
jae
test
shl
jmp
sar
sub
mov
dec
or
cld
lods
out
add
nop
out
in
mov
jmp
ins
js
sub
fild
mov
and
int
push
mov
cmp
in
or
test
in
push
sbb
stos
and
pop
or
(bad)
mov
mov
and
xchg
aas
cmps
mov
xor
pop
lods
je
push
stos
retf
xor
neg
dec
int3
retf
repz
shr
and
and
(bad)
stc
outs
dec
pop
lock
movs
sahf
test
jmp
push
stc
add
cmps
mov
das
jns
push
xor
fwait
mov
das
(bad)
jmp
push
idiv
or
mov
dec
sub
dec
sub
sbb
test
xor
mov
or
push
data16
dec
iret
iret
je
scas
rol
push
sti
mov
cwde
push
jo
mov
loop
retf
push
pop
dec
jmp
mov
jo
cmps
cs
or
mov
sbb
xor
pop
sti
sbb
ds
sub
mov
xor
jns
sub
mov
sbb
jb
outs
jmp
or
jb
mov
dec
not
xor
out
sahf
test
sub
pop
xor
cli
inc
inc
cmp
push
loope
jp
ret
lea
pop
sub
jb
rcr
or
mov
mov
mov
cwde
ins
xchg
mov
retf
push
xlat
mov
sub
pop
pop
repz
popf
xor
add
ror
arpl
pop
or
fwait
mov
arpl
or
popf
sbb
loop
sub
aam
pop
movs
jbe
scas
dec
jne
xor
inc
aas
mov
loope
xchg
mov
jg
sti
stos
lock
cli
mov
stos
mov
out
adc
iret
xor
inc
pop
pop
or
aam
(bad)
fistp
lea
neg
fldcw
mov
or
push
fdiv
ficom
les
es
xchg
jbe
mov
push
add
sti
xchg
movs
adc
and
adc
fbstp
dec
pop
ror
out
fwait
(bad)
and
pop
or
lods
cmp
add
xor
lsl
int
jmp
mov
add
imul
ret
cmp
loop
out
cmps
mov
stos
inc
cld
or
fild
mov
push
dec
mov
movs
adc
pop
sbb
inc
inc
leave
jne
add
popa
adc
pop
stos
mov
mov
dec
hlt
cmps
test
out
mov
ret
pushf
adc
repnz
jp
out
push
sub
in
xchg
(bad)
push
pop
call
std
mov
mov
inc
std
pop
shr
mov
add
xchg
out
je
jb
xlat
jecxz
retf
sbb
imul
cdq
fmul
xchg
xor
mov
jbe
into
adc
push
jmp
stos
add
in
and
int3
jge
fist
sti
pop
fisub
ins
jle
imul
push
or
test
leave
push
or
mov
int
test
and
sbb
(bad)
jae
xchg
pop
mov
sub
inc
outs
jecxz
mov
xlat
into
xchg
ficomp
and
or
pop
fs
jae
dec
push
dec
int3
cmp
xlat
jl
inc
and
icebp
adc
add
mov
fnstcw
cmp
and
xor
loopne
jle
pop
loope
sbb
call
cmc
fst
xchg
add
enter
cmp
(bad)
push
xchg
retf
add
push
cmp
xchg
jbe
xchg
xchg
adc
(bad)
xchg
gs
(bad)
je
enter
or
movs
mov
push
scas
fsubr
sbb
test
jp
bound
xor
jge
out
aad
inc
repz
ss
popf
pusha
retf
cmp
jecxz
xor
or
mov
jge
pop
ss
pop
jmp
mov
push
add
cld
push
mov
pop
aas
movs
sar
ret
lds
repnz
add
loop
mov
xor
cmp
adc
xchg
jmp
mov
in
in
inc
cwde
out
fst
sub
or
loop
call
mov
test
jo
adc
je
cmp
aaa
jge
cs
adc
fcomp
jge
(bad)
scas
add
xchg
mov
jo
or
xor
sti
mov
push
add
sbb
fcom
pop
dec
push
cmp
xor
sbb
inc
sbb
add
add
pop
and
inc
ficom
test
fimul
call
out
shl
lahf
enter
jle
jle
ds
test
(bad)
stos
retf
jle
sti
scas
test
cdq
imul
enter
jmp
jmp
jns
adc
movs
mov
sbb
mov
fimul
pop
xor
xchg
jne
cs
shl
das
sbb
mov
xchg
dec
mov
mov
dec
mov
mov
jge
mov
and
out
int
lock
sub
std
mov
mov
inc
retf
aad
vcvtss2si
and
dec
or
inc
mov
or
in
cwde
icebp
adc
rcr
not
jle
jge
bound
rol
add
push
lds
call
push
sub
arpl
push
pop
cmp
mov
inc
dec
and
sub
sbb
(bad)
xchg
jle
lea
fiadd
xor
xor
inc
xlat
int3
popa
outs
std
out
sbb
mov
ret
push
xlat
shl
pop
dec
mov
inc
jmp
test
jmp
mov
shr
and
hlt
es
test
test
sub
xchg
(bad)
mov
(bad)
xchg
cdq
adc
inc
out
repz
cli
mov
or
jecxz
jg
adc
popa
stos
das
hlt
cmp
inc
cli
gs
jmp
les
xor
sbb
(bad)
iret
inc
sbb
cld
(bad)
lods
push
imul
inc
mov
std
pop
inc
dec
mov
sub
push
dec
call
daa
and
sbb
ret
add
out
loop
push
xor
jmp
cmp
imul
cld
test
pop
pusha
jbe
(bad)
mov
enter
rol
mov
sbb
std
adc
fidivr
mov
fcomi
cmp
pop
and
bound
push
gs
mov
iret
jecxz
cmc
imul
push
mov
mov
scas
inc
or
sbb
(bad)
aaa
mov
mov
(bad)
lock
push
fiadd
imul
jl
stos
jmp
push
or
jecxz
sysexit
dec
sbb
sbb
ror
jg
outs
idiv
shl
es
sbb
inc
xor
cmc
mov
lahf
pop
jns
aas
xor
mov
xor
rcr
cmps
(bad)
push
pop
inc
sbb
xor
dec
or
inc
lods
sub
loop
clc
lock
test
mov
iret
pushf
fucomip
dec
dec
lock
nop
imul
ficomp
inc
mov
pop
adc
inc
popa
mov
dec
dec
rol
mov
imul
cmp
ficomp
leave
(bad)
xchg
bnd
stos
mov
call
call
sti
xchg
pop
pop
test
jns
sbb
xor
jb
cld
dec
in
jo
cmp
cmp
mov
or
cwde
pop
lock
outs
loopne
mov
rol
scas
push
push
dec
cmc
pop
mov
fisttp
inc
sbb
inc
push
xchg
retf
pop
jb
outs
push
mov
and
mov
and
jge
pop
xor
cmp
add
loopne
sbb
add
imul
lea
ret
ret
xor
mov
leave
xchg
cld
cmc
mov
xor
sti
xchg
push
mov
fist
pop
push
cdq
popf
dec
in
push
out
out
in
lock
mov
push
(bad)
loopne
jp
call
into
int
sbb
(bad)
push
arpl
rcr
xchg
sbb
jns
fdivr
popf
shl
pop
hlt
sbb
rcl
call
mov
int
fnstcw
test
xchg
dec
mov
jnp
cmp
cmc
push
dec
repz
sahf
or
jo
jmp
adc
leave
shr
scas
jg
and
pop
stos
pop
test
pop
add
xchg
cli
cmp
in
xchg
xchg
mov
popf
fnstenv
pop
mov
mov
int
add
rol
mov
cmps
push
pop
cld
test
mov
std
fsub
cmp
xchg
into
jae
mov
adc
pop
jp
iret
in
popa
shl
out
fwait
scas
(bad)
hlt
leave
push
jmp
out
xor
addr16
cs
cdq
adc
cmc
jge
mov
inc
in
sbb
sbb
inc
movs
mov
in
sar
hlt
mov
jecxz
outs
jo
sub
mov
rcl
pop
pop
rol
mov
imul
dec
mov
lods
or
mov
scas
jbe
adc
pop
add
dec
sahf
push
jp
cmp
jns
loope
pop
push
mov
stos
cwde
xor
inc
push
pop
dec
or
cld
inc
sbb
cmp
jge
sbb
jns
in
jae
cmp
pushf
jnp
fld
push
ja
inc
gs
emms
call
fwait
mov
jb
mov
out
mov
add
into
cmp
cmp
dec
pop
xchg
sti
and
and
or
add
test
int3
sahf
call
in
sti
or
push
xchg
outs
scas
into
adc
xchg
mov
int3
push
mov
or
mov
sub
xchg
and
int
bnd
addr16
and
fucom
and
and
dec
retf
dec
mov
or
adc
and
mov
scas
shr
cmp
xchg
push
jae
imul
mov
add
sub
sbb
cmp
mov
shl
stos
div
sub
out
in
push
xor
int
mov
mov
pushf
jmp
mov
call
jnp
test
pop
push
mov
or
test
icebp
scas
add
test
fwait
jno
cmp
or
shl
mov
pop
inc
mov
fimul
ret
mov
cdq
mov
lds
mov
xchg
retf
in
rcr
jbe
xchg
mov
push
pop
cwde
shr
push
imul
xor
aam
push
mov
add
lahf
fwait
or
mov
cmps
mov
in
mov
jns
stos
or
adc
pop
es
fisubr
adc
sbb
movs
in
fwait
mov
mov
sbb
jmp
ins
popa
shr
or
aas
sub
mov
in
test
pop
dec
and
fdivr
dec
dec
xor
adc
xchg
pop
in
fwait
mov
scas
sub
arpl
sbb
pop
add
arpl
aad
jne
jg
pop
jnp
jnp
test
mov
jmp
in
xor
adc
cmp
mov
lahf
jl
scas
ret
cmps
cmp
movs
ret
mov
cmps
mov
aas
enter
and
retf
outs
daa
in
xchg
mov
ins
sbb
leave
repz
aad
mov
(bad)
mov
mov
sbb
adc
out
adc
jl
jp
mov
test
(bad)
movs
pushf
inc
jbe
mov
fsub
cmp
fadd
(bad)
mov
jb
xchg
mov
inc
outs
sbb
sub
sub
xlat
mov
ins
xchg
rol
lahf
scas
jb
jmp
int
clc
sahf
(bad)
(bad)
xor
xor
inc
add
cld
inc
aas
mov
inc
add
sbb
imul
add
mov
movs
jae
sbb
sub
adc
nop
sbb
dec
adc
(bad)
adc
or
pop
je
pop
mov
(bad)
dec
xor
and
out
cmps
adc
dec
xchg
push
push
mov
movs
fwait
inc
rcl
ficomp
sar
mov
lock
cwde
sbb
dec
mov
ins
jns
lods
pop
fstp
test
ins
js
jne
inc
fs
ret
push
push
lods
jle
mov
bound
ret
pop
mov
mov
mov
mov
push
mov
mov
(bad)
call
xchg
mov
sahf
repnz
inc
pusha
(bad)
jae
repz
bound
ins
add
daa
mov
sbb
rcl
aam
and
into
add
inc
inc
push
mov
xor
repnz
jmp
cmp
cmp
fnstcw
(bad)
loopne
add
cmp
ins
and
nop
sub
xchg
ror
mov
mov
push
xor
push
loopne
mov
push
leave
outs
aaa
addr16
xchg
mov
lahf
push
int3
mov
stos
xchg
mov
xor
mov
push
leave
scas
push
pop
loope
push
aas
cmp
retf
push
iret
(bad)
pop
dec
or
pop
cs
pop
repnz
scas
mov
fldlg2
int3
mov
clc
mov
jle
and
push
sub
rol
test
scas
retf
add
lods
mov
mov
jb
pop
arpl
push
mov
and
loopne
enter
sbb
jle
add
stc
inc
inc
outs
std
dec
mov
adc
pop
xor
aas
jne
in
gs
cmp
mov
imul
mov
sbb
lock
mov
jns
and
jge
mov
xchg
neg
pop
mov
retf
stos
sub
fild
popa
jg
fnop
addr16
push
jb
loope
(bad)
or
cmp
cwde
dec
test
lds
mov
(bad)
sbb
int
pop
outs
mov
or
loop
inc
(bad)
fcmovne
movs
and
ds
push
jne
push
mov
iret
stc
(bad)
xlat
icebp
or
sub
dec
xchg
rol
pop
std
pop
pop
leave
dec
and
pop
mov
loopne
mov
fcomp
loopne
repnz
mov
call
mov
mov
or
int
add
xor
jmp
clc
sbb
dec
adc
test
jle
jbe
aad
mov
cmp
pop
mov
cld
sub
cwde
stos
cli
sbb
cmps
(bad)
jb
(bad)
in
pop
and
pop
(bad)
aad
enter
xchg
sub
inc
jbe
aad
push
outs
int
ins
call
retf
in
test
retf
fistp
sub
fnsave
pop
pop
scas
int3
jne
cli
push
xchg
test
mov
add
dec
jb
stc
das
adc
imul
das
add
adc
add
mov
fdivr
ror
out
sbb
inc
test
push
pop
hlt
cs
cmps
xchg
leave
inc
or
out
ja
es
js
xor
fsub
retf
in
imul
je
shr
ss
add
mov
hlt
mov
daa
retf
pop
push
(bad)
mov
(bad)
ficomp
and
inc
and
push
dec
shl
sub
int3
gs
neg
idiv
neg
fwait
jbe
jns
xor
cmp
(bad)
test
pop
jae
lahf
and
sbb
(bad)
in
mov
xchg
jb
jae
pop
mov
daa
lea
inc
sbb
pushf
add
pusha
popf
push
enter
sub
cmp
nop
jl
mov
das
mov
(bad)
add
sbb
dec
mov
lods
jns
mov
or
sub
mov
int3
or
dec
addr16
clc
dec
das
mov
mov
and
pop
bound
mov
push
cwde
jae
in
movs
enter
ins
in
push
mov
adc
aam
(bad)
stos
dec
lods
jnp
call
jmp
loope
xchg
leave
dec
addr16
push
(bad)
(bad)
ficom
outs
scas
sub
lods
ss
push
fnstcw
stc
into
push
cdq
sub
pop
inc
or
add
xor
push
mov
adc
loopne
clc
in
inc
cmp
ins
iret
xlat
ror
cmp
push
jmp
or
aad
jge
adc
leave
or
ret
jns
cwde
and
push
jbe
mov
mov
cmp
cmp
pop
cdq
loope
jge
sbb
mov
pop
dec
add
add
jbe
shl
cmp
ret
aas
inc
or
mov
popf
xchg
shl
add
add
int3
cld
test
nop
mov
loope
push
in
mov
xor
ret
stos
mov
in
aad
dec
int3
add
sbb
mov
cmp
xlat
into
or
in
mov
sub
adc
mov
pop
lds
popf
push
in
xchg
setle
mov
cmps
pop
xchg
call
shl
rcr
and
sbb
in
or
xchg
push
fld
not
mov
(bad)
fs
pop
sahf
movs
retf
or
pop
stos
fadd
mov
imul
mov
or
sub
pushf
gs
call
retf
xchg
jg
sbb
mov
dec
idiv
jmp
shr
movs
pop
cmp
xor
scas
and
jnp
or
push
xchg
mov
mov
or
enter
shl
mov
pop
inc
mov
push
test
mov
adc
std
leave
repz
stc
popf
idiv
sbb
or
mov
es
pop
sub
jno
icebp
scas
xlat
int
xchg
(bad)
imul
jo
and
retf
jecxz
jnp
or
and
xor
pop
or
shl
dec
cs
sbb
xor
sahf
popf
scas
inc
pusha
iret
sbb
push
jge
inc
add
or
mov
mov
push
adc
mov
xchg
movs
and
ret
cld
jge
and
jbe
movs
xchg
add
xor
add
pop
scas
fld
pop
add
scas
xor
test
inc
in
sub
retf
push
mov
mov
xchg
scas
xor
(bad)
pusha
(bad)
sti
cmp
xchg
scas
shl
idiv
push
gs
jne
into
cmp
jg
push
inc
sbb
cli
jo
xor
repz
push
mov
adc
cs
sub
sbb
pop
mov
addr16
push
xor
cmp
inc
adc
mov
aaa
cmp
pop
mov
mov
out
mov
(bad)
mov
sbb
ins
push
xchg
in
push
loope
loopne
dec
push
stos
push
mov
lods
add
icebp
or
repnz
pop
test
cmp
mov
mov
ins
mov
fwait
xchg
retf
jmp
push
adc
xor
fst
add
pop
push
mov
in
xor
inc
adc
mov
mov
loope
push
das
call
xor
jp
(bad)
repnz
xchg
mov
test
mov
pop
(bad)
fwait
rol
sar
jecxz
lahf
test
in
js
imul
inc
mov
sub
adc
or
arpl
iret
mov
aaa
pop
jl
mov
dec
mov
mov
push
xor
or
in
loopne
mov
leave
fcmove
les
pop
or
fcomp
or
aaa
fdivrp
in
xor
fnstenv
das
cwde
loopne
push
mov
mov
pop
push
cmp
or
sahf
mov
add
in
sahf
mov
pop
push
dec
shr
fcomi
push
push
imul
in
inc
stc
mov
push
ret
sti
shr
jl
mov
cmp
aam
iret
push
pop
(bad)
dec
test
push
mov
sbb
inc
and
push
jmp
movs
cmp
sahf
jp
push
mov
mov
mov
(bad)
(bad)
clc
(bad)
sub
hlt
mov
int3
fwait
xchg
pushf
push
cmp
push
retf
ja
pusha
retf
jge
test
std
js
push
xor
in
dec
adc
jb
das
add
movs
jb
loopne
and
xor
ja
(bad)
lods
aaa
fcomp
fistp
shr
mov
adc
mov
retf
cmp
pop
and
pinsrw
pop
xchg
dec
ffree
xor
pusha
sti
(bad)
mov
mov
mov
xchg
and
cmp
popa
dec
lods
xor
jecxz
data16
popa
jbe
cmp
pushf
mov
inc
pop
add
inc
jae
inc
push
pop
mov
mov
das
push
mov
add
ficom
dec
daa
or
mov
mov
(bad)
(bad)
dec
jp
sub
(bad)
aad
(bad)
xchg
call
mov
mov
test
mov
or
test
dec
ret
sti
ins
ss
out
xchg
test
cmp
cmp
imul
xor
mov
push
mov
imul
cmp
repz
pushf
jns
mov
pop
or
aaa
adc
cmp
jp
add
jae
push
movs
frstor
and
loopne
pop
mov
mov
loop
jno
call
repnz
jne
shr
sub
cmp
mov
out
cmp
pushf
cli
cmp
add
push
xor
icebp
push
xor
mov
cmps
out
fld
sti
jae
jns
sub
jo
test
adc
popa
lea
movs
jmp
push
out
push
inc
sub
loope
icebp
mov
sub
pop
mov
ds
xchg
call
sbb
popa
sub
in
push
jae
pushf
or
aaa
fiadd
retf
fwait
stos
out
fsub
test
mov
mov
or
call
into
fs
in
dec
sub
jl
xchg
les
dec
mov
xor
stc
cli
in
push
xor
int3
int3
dec
mov
mov
shr
movs
int
fcom
or
xlat
out
mov
popf
pusha
dec
not
aaa
in
jo
adc
jp
mov
call
pop
pop
shl
cmp
bound
jg
mov
push
stos
pop
jle
add
sbb
xchg
lods
pop
ds
repnz
mov
mov
sbb
ds
fsubr
xchg
xchg
unpckhps
push
mov
clc
out
test
adc
cli
or
add
or
std
mov
(bad)
adc
add
push
jns
pop
jb
cwde
pop
add
(bad)
(bad)
mov
inc
jne
mov
mov
adc
mov
push
cld
iret
fcmovnu
int
cli
mov
cmp
mov
cld
and
pop
ret
aad
or
inc
xor
daa
addr16
stc
sub
dec
call
jnp
or
jns
and
fwait
(bad)
out
add
xchg
xor
dec
and
jmp
push
mov
xor
cs
xor
jno
add
in
add
in
ret
mov
repnz
mov
xor
add
or
and
dec
(bad)
push
xchg
out
div
pop
cwde
xor
fmul
lea
push
push
iret
and
inc
cmp
(bad)
cmc
cmp
sub
in
dec
or
pop
hlt
outs
mov
pop
sub
xchg
cmp
push
cmps
call
sub
and
xchg
sbb
cmp
fisubr
cdq
adc
in
test
ror
mov
outs
(bad)
scas
adc
add
dec
loopne
sub
stos
ss
aas
adc
lahf
aaa
rol
dec
mov
push
leave
out
add
lods
ror
movs
ret
(bad)
cmps
clc
popf
and
ins
sbb
cmps
pop
mov
push
outs
dec
dec
inc
test
sbb
jae
xchg
scas
in
std
xchg
imul
push
adc
std
xor
das
js
jbe
jbe
call
xchg
dec
vmread
xor
fidiv
jp
jae
dec
dec
inc
in
jb
mov
jnp
sub
sbb
das
jne
sub
adc
adc
stos
aam
xor
mov
loope
aas
mov
shl
or
sub
mov
loop
test
movs
dec
mov
cld
dec
jmp
rol
stos
sti
mov
cmp
pop
test
(bad)
xchg
xor
cdq
stc
or
mov
cdq
imul
lods
fiadd
loop
gs
fxch
xor
daa
xchg
jb
loop
arpl
and
mov
sar
sbb
adc
xor
data16
(bad)
or
mov
and
dec
std
xchg
add
mov
and
cmc
call
add
repnz
or
mov
call
dec
sbb
leave
bndldx
imul
sar
add
aas
or
jo
cmp
push
cmp
xchg
test
(bad)
rcr
mov
xchg
mov
imul
int
pop
mov
jno
push
dec
cmp
mov
dec
cs
imul
and
data16
(bad)
mov
pop
int3
fwait
cmp
jnp
xchg
push
push
js
push
(bad)
loop
js
jnp
frstor
rcl
adc
lahf
jo
fisttp
adc
mov
cmp
push
jmp
in
lock
xchg
cmp
pop
xor
and
cmp
test
push
jl
fist
fisubr
dec
pop
(bad)
js
mov
sbb
iret
or
das
leave
popa
jmp
sbb
dec
push
pushf
popf
xlat
mov
jbe
nop
jns
inc
cmp
cmps
add
shl
imul
cdq
push
pop
test
cmp
xor
xchg
call
mov
call
push
sbb
imul
dec
or
je
pop
mov
xor
inc
inc
push
xchg
fdivr
inc
imul
pop
out
push
out
cs
lahf
and
retf
push
sub
scas
xchg
or
mov
cmp
icebp
mov
push
shld
pop
dec
sub
mov
pop
(bad)
aad
cmp
fild
ficom
repz
fdiv
mov
jg
jae
dec
aam
jmp
outs
icebp
pop
jb
dec
fiadd
mov
xchg
mov
xor
mov
xor
lods
outs
add
out
xchg
mov
pop
in
dec
(bad)
test
xchg
adc
shr
jne
inc
sbb
sub
ja
sbb
lods
push
(bad)
jecxz
mov
or
mov
mov
(bad)
and
sbb
sbb
pop
and
pop
add
xchg
xchg
je
xchg
mov
or
mov
fdiv
mov
dec
xchg
aad
inc
cmp
shr
rcr
pop
cmp
jp
adc
ins
test
shl
mov
in
ds
cwde
or
or
cwde
sub
mov
dec
js
mov
push
xchg
mov
push
and
loope
pop
ss
and
adc
fdiv
xlat
sbb
push
pop
fld
sub
pop
sub
arpl
movs
mov
push
cmp
adc
ins
push
cld
inc
outs
jle
mov
pop
mov
dec
xor
inc
movs
stos
lods
mov
mov
jge
and
pop
retf
fwait
xchg
das
push
into
je
xor
dec
std
and
jmp
adc
lock
push
rol
add
dec
jle
jbe
adc
xor
push
xchg
movs
je
mov
or
add
cwde
mov
adc
test
aaa
call
sub
data16
dec
and
jge
jnp
aaa
and
xor
push
push
imul
loope
sub
sub
div
push
(bad)
aam
sar
cmp
iret
push
mov
aaa
xor
xor
mov
inc
fild
push
hlt
cmp
pop
cmps
xor
pop
sbb
xor
cmc
(bad)
adc
cmp
js
push
aad
aam
mov
outs
cmps
xor
jne
or
mov
std
pop
mov
jecxz
loop
pop
(bad)
aad
scas
adc
and
ins
js
lds
xor
jecxz
outs
add
pop
retf
inc
outs
iret
std
add
gs
push
sar
xor
sbb
mov
rcr
imul
or
add
sar
or
daa
sar
das
inc
pop
cmp
lock
fs
iret
jno
xchg
and
scas
or
outs
int
cld
cmp
clc
sbb
cmp
pop
scas
out
fldenv
bound
int
pop
sti
add
mov
and
cmp
in
test
addr16
cmps
retf
sbb
pop
xor
push
xchg
adc
ja
arpl
sbb
pop
loopne
dec
sub
mov
sub
icebp
push
(bad)
xor
cld
ds
fiadd
mov
imul
pushf
jbe
mov
repz
cli
or
das
lods
adc
div
out
or
lock
sbb
je
add
and
pop
add
js
outs
adc
push
mov
mov
jl
loope
in
xor
test
mov
xor
repz
push
imul
and
inc
xlat
add
adc
mov
xlat
and
sbb
and
add
lea
xchg
lock
cmp
cli
mov
jb
rcr
xor
(bad)
loope
jl
sub
mov
sub
sub
test
jecxz
add
fnstsw
lea
mov
ins
sbb
lahf
call
pop
pop
ret
adc
pushf
pop
sub
mov
pop
retf
jmp
pop
pushf
outs
ss
sub
adc
sub
js
pop
and
mov
pop
test
add
imul
(bad)
mov
pop
test
inc
pop
call
cwde
or
(bad)
jmp
std
out
sbb
hlt
jne
mov
(bad)
mov
xchg
and
fmul
fild
mov
es
adc
fild
out
jns
sub
ss
aas
and
cli
retf
fwait
imul
pop
lea
cmp
inc
add
xor
pop
xor
xchg
daa
fisub
fimul
or
gs
or
mov
out
(bad)
push
adc
test
(bad)
add
or
(bad)
(bad)
shl
cmp
cwde
test
dec
stos
xchg
std
in
pop
xor
repz
and
jnp
ret
aas
xchg
mov
jge
dec
out
int3
fucomp
movs
cmp
cmc
add
mov
(bad)
mov
stos
jecxz
mov
iret
bound
(bad)
xor
shl
cs
fiadd
jle
push
jecxz
pop
shr
bound
(bad)
scas
test
push
xor
pushf
push
sbb
mov
nop
and
das
cmp
fisub
xchg
mov
mov
jno
fstp
push
jmp
shl
(bad)
jmp
xchg
dec
std
inc
out
fiadd
js
mov
int
aaa
inc
or
sub
mov
fnstsw
mov
add
dec
add
mov
or
inc
mov
push
or
add
rol
inc
pop
popf
sbb
aam
adc
jne
xlat
and
xchg
add
lods
add
pop
inc
pop
movs
push
(bad)
int3
(bad)
xchg
aad
pushf
test
adc
inc
cdq
and
pop
pop
xchg
mov
(bad)
mov
inc
aas
mov
sbb
cwde
(bad)
dec
pushf
push
call
nop
ret
int3
xchg
cmp
jmp
aam
test
clc
mov
or
cmc
push
push
xor
push
dec
outs
lds
scas
arpl
sub
arpl
adc
shr
xchg
movs
xor
mov
adc
pop
aaa
xchg
sbb
sbb
and
pusha
call
xchg
mov
xchg
jmp
push
jg
fsubr
aam
test
out
ror
(bad)
in
pop
xor
xchg
cwde
dec
jne
pop
fxch
retf
out
js
pusha
test
push
pop
or
pop
lods
push
mov
dec
mov
out
pop
out
and
in
fst
dec
imul
es
pop
imul
pop
rcl
mov
xor
mov
test
xchg
push
sahf
out
adc
loop
sub
fnstsw
sbb
jae
fisttp
adc
xchg
xlat
addr16
aaa
cli
dec
rol
xlat
push
test
outs
gs
outs
mov
jg
fmul
pop
test
loopne
or
xor
mov
mov
pop
movs
addr16
push
lock
std
cmps
xor
cmp
add
sti
rcl
dec
cmp
ja
ja
jbe
push
jge
dec
jmp
inc
xor
sbb
cmps
std
and
pop
push
inc
ja
aad
ds
push
aam
mov
data16
xor
dec
imul
mov
fld
mov
popf
xchg
add
mov
call
xchg
(bad)
sub
movs
mov
sbb
xor
cmps
xchg
int
ficomp
inc
or
pop
adc
xchg
jnp
fbld
cs
es
jae
mov
mov
pusha
cs
mov
int3
fistp
pop
push
dec
xchg
mov
or
retf
repnz
sbb
iret
mov
(bad)
out
xor
nop
xchg
adc
pop
leave
retf
retf
std
cmp
pop
jge
xor
pushf
lahf
add
and
xchg
inc
and
inc
cmp
das
sub
push
jns
pushf
out
pop
aas
xor
inc
retf
add
aas
inc
loope
or
lods
and
int
test
pop
pop
pop
lahf
pop
jbe
add
pop
xor
int
movs
repnz
lds
cld
jmp
icebp
push
sub
imul
neg
dec
xor
dec
push
sub
fdivr
je
loop
xchg
stc
adc
pop
lahf
sub
outs
lock
mov
dec
fmul
or
movs
push
add
ret
sbb
test
enter
ret
test
jno
(bad)
or
test
pop
mov
es
xchg
jl
mov
imul
or
neg
das
rcr
add
repnz
mov
stos
adc
adc
pushf
sub
and
std
mov
dec
lods
stc
ret
pusha
rol
adc
out
leave
rcr
mov
scas
sub
sahf
ret
fst
adc
dec
fidiv
pop
clc
adc
inc
cmp
mov
scas
pop
loop
xchg
and
mov
cmp
ja
xor
popa
(bad)
sub
sub
(bad)
in
sti
jmp
cmp
inc
sub
mov
sbb
mov
dec
jns
xor
rol
sbb
mov
push
aad
ins
mov
mov
iret
xor
loopne
(bad)
xchg
loopne
jl
test
cmp
stc
push
fwait
shr
(bad)
(bad)
fcom
dec
imul
or
je
fcmovnbe
fidivr
rcl
int3
ja
mov
sbb
out
stc
mov
add
sti
fwait
test
vpsubw
mov
test
xchg
into
imul
hlt
sbb
jnp
xlat
out
mov
scas
jne
push
fild
call
and
add
lock
mov
fdiv
gs
jle
aaa
xlat
call
pushf
lods
jp
xor
js
repnz
push
dec
cdq
mov
xor
add
aaa
stos
adc
cli
ds
or
sbb
inc
and
repz
mov
cmp
mov
xor
mov
cwde
sub
mov
push
sahf
mov
adc
fcom
lods
inc
in
inc
jne
ret
mov
je
test
dec
popf
imul
aad
loop
pcmpeqb
in
adc
scas
adc
cdq
in
mov
cmp
retf
inc
outs
mov
inc
jnp
or
dec
call
sub
add
addr16
sbb
popf
cmps
lods
push
fist
stos
push
push
push
sbb
push
fwait
mov
cmp
dec
into
mov
out
out
sbb
mov
das
enter
out
ret
push
movs
mov
jns
xchg
ret
jmp
xor
stc
outs
sub
inc
add
pop
mov
mov
clc
sbb
jmp
or
cli
test
mov
adc
xchg
fild
sbb
sbb
jmp
pusha
mov
inc
loope
or
movs
in
xchg
pop
xchg
fsubr
cmp
in
dec
or
push
pop
sar
movs
jmp
dec
fbld
dec
out
mov
jle
sub
int3
adc
inc
in
fisttp
(bad)
xlat
add
mov
or
inc
push
xor
dec
inc
fs
mov
dec
mov
(bad)
call
scas
ja
cmc
xchg
movs
dec
(bad)
push
enter
sti
xor
movs
fwait
jbe
fidivr
cld
repz
stc
jo
pop
enter
push
das
mov
dec
pop
mov
inc
fldenv
or
mov
jle
ins
popf
retf
sub
lods
jle
xchg
fstp
mov
push
ja
sub
aam
pushf
mov
sbb
cmp
cmps
js
jb
cmp
sub
frstor
pop
inc
add
mov
xor
(bad)
pushf
jmp
dec
mov
pop
cmp
or
cwde
push
fs
in
and
xor
shl
mov
popa
and
call
xor
scas
push
mov
das
mov
add
xor
into
iret
leave
mov
lods
mov
xor
(bad)
dec
xlat
in
dec
dec
call
jns
mov
adc
shl
inc
ins
data16
aas
jns
ins
pop
jne
inc
mov
and
mov
rol
les
in
lock
pop
xor
xchg
dec
rcl
div
popw
mov
mov
mov
jo
cmc
sbb
jle
jmp
fiadd
in
mov
mov
fcomi
push
xchg
sti
inc
in
bound
fnstcw
and
cmp
xlat
mov
sub
dec
cmp
jmp
les
dec
ror
sub
addr16
ret
jge
mov
pop
repnz
push
addr16
lahf
dec
rol
in
mov
push
sbb
dec
sub
ss
push
icebp
dec
ret
arpl
mov
int
mov
sbb
mov
jecxz
test
(bad)
cmc
ret
sub
ins
pop
fsubr
push
mov
jae
or
jmp
in
adc
frstor
ins
xchg
imul
inc
pop
and
into
lds
push
and
mov
out
into
imul
in
and
xor
ret
inc
fcomp
push
ins
jmp
mov
lods
jmp
sahf
fcom
push
fild
mov
jb
and
test
lods
(bad)
xchg
iret
(bad)
jb
les
js
in
repz
or
mov
retf
repnz
jge
test
mov
jmp
pop
adc
add
bound
stc
cli
je
add
sub
or
sbb
pop
mov
push
shl
jg
add
cdq
daa
ja
(bad)
fstp
jl
out
cmps
icebp
in
pusha
sub
pop
jle
sbb
in
xor
cdq
push
addr16
retf
dec
scas
sbb
push
push
push
enter
jns
push
scas
fstp
push
gs
es
das
test
cmps
pop
retf
enter
xchg
addr16
xchg
jbe
scas
in
cmp
lock
push
mov
popf
(bad)
xchg
adc
dec
scas
int
sbb
fs
jbe
lods
(bad)
push
pop
loop
push
in
mov
pusha
(bad)
pop
(bad)
fmul
clc
xor
adc
push
rcr
adc
or
call
push
sub
icebp
add
inc
jp
jmp
fdivr
mov
sbb
mov
xchg
int
adc
pop
mov
adc
movs
pusha
mov
jecxz
loope
and
aas
sub
in
cmc
sbb
xor
sbb
jmp
fidiv
jno
ja
lahf
dec
jae
dec
sbb
jg
add
fsub
push
push
rcr
fsubr
mov
loopne
mov
sub
and
xchg
xchg
push
mov
cld
and
mov
or
dec
addr16
enter
(bad)
mov
fdivr
pop
jg
add
test
jb
cmp
outs
jmp
add
inc
mov
mov
xchg
loopne
fsub
addr16
in
popa
test
jns
loope
push
bound
retf
(bad)
cld
gs
test
jae
mov
je
aad
or
xchg
icebp
adc
retf
pop
xchg
js
jl
pop
sbb
mov
pop
daa
aaa
and
inc
pop
xchg
daa
jmp
cmp
lds
lds
mov
mov
sar
sahf
(bad)
icebp
adc
add
add
xor
dec
cs
sub
jbe
mov
sub
adc
xor
test
mov
adc
mov
inc
jl
popf
jmp
(bad)
repz
xor
dec
daa
shl
inc
add
out
adc
aaa
cmp
push
aad
in
and
leave
in
xchg
adc
inc
xlat
shr
sahf
cld
inc
pop
push
xor
sbb
jp
imul
fdiv
dec
arpl
xchg
out
mov
enter
push
jmp
out
add
cmp
cmps
cli
add
movs
(bad)
call
mov
lods
(bad)
xor
popa
add
pusha
mov
and
inc
ds
push
dec
js
mov
add
push
data16
mov
scas
daa
stc
pop
adc
sbb
shl
cmps
push
int
add
fdiv
mov
jle
jl
dec
mov
xor
and
jl
out
or
xchg
inc
imul
jg
mov
jle
lods
ja
mov
sub
pushf
adc
mov
ss
mov
retf
xchg
ds
ret
mov
sub
xchg
sbb
jle
mov
aad
enter
jb
and
mov
and
gs
mov
out
rcr
push
xor
test
sbb
pop
popf
aaa
retf
(bad)
bound
mov
xlat
sbb
push
pop
std
rol
push
push
movs
sbb
xchg
loopne
inc
xchg
mov
dec
mov
mov
xchg
or
les
jne
pop
inc
mov
cmp
dec
pop
push
mov
std
jp
stos
je
into
retf
xchg
pop
ins
retf
loop
pushf
icebp
popf
sub
imul
int3
test
xchg
jno
push
xlat
or
aaa
sub
push
adc
je
mov
sbb
out
hlt
je
sbb
retf
gs
aaa
mov
clc
sub
mov
repnz
push
xlat
pop
outs
pop
(bad)
in
xor
stos
add
push
fnstsw
fidivr
adc
jne
ins
ja
inc
add
xchg
stos
mov
jmp
movs
pop
sbb
scas
scas
cs
(bad)
in
inc
call
xchg
push
adc
or
(bad)
repnz
mov
inc
mov
cli
mov
add
std
gs
pop
icebp
das
adc
repz
in
xor
push
ja
hlt
jae
mov
jg
cmps
cli
ins
test
mov
data16
lea
push
clc
dec
retf
(bad)
pop
push
xor
sub
aas
xchg
bound
retf
jmp
inc
imul
xor
mov
fcom
jg
mov
call
push
push
xchg
fldenv
cmp
jecxz
adc
sub
movs
push
fcom
add
sbb
adc
sub
ss
pop
or
ja
retf
and
sbb
ds
mov
push
nop
mov
(bad)
or
xor
xchg
nop
jl
das
xor
sbb
xchg
sbb
repnz
xchg
dec
dec
push
rol
mov
fwait
push
push
mov
inc
cli
add
inc
aam
cmps
jmp
jb
arpl
cmp
les
push
mov
mov
push
sub
lods
push
sbb
add
inc
mov
pop
xor
lea
data16
pop
jnp
jle
lahf
pop
xor
and
test
aad
adc
push
inc
push
cli
gs
mov
cld
cli
add
and
pop
cmc
ret
pop
xchg
sub
jno
xchg
and
mov
shl
xchg
push
add
sub
cmp
ins
push
fild
int3
xlat
jmp
or
(bad)
cmp
and
and
movs
lods
xchg
test
punpcklwd
imul
adc
ds
mov
pop
add
mov
cs
into
sub
xor
cmp
outs
sub
fnstcw
leave
outs
dec
inc
sar
out
fwait
pop
popf
jne
fidivr
fwait
push
jl
mov
inc
pop
jp
pop
and
movs
int
call
cmp
or
push
(bad)
mov
push
int
cwde
lods
dec
adc
adc
jl
add
mov
xchg
xchg
or
sub
int
leave
movs
ja
cmp
pop
int3
(bad)
outs
sub
jno
add
(bad)
es
jmp
or
mov
test
sar
xor
psrad
push
mov
dec
in
loope
ja
out
cmp
scas
push
or
cmc
cmp
mov
test
jb
and
jb
xor
mov
daa
add
adc
fidivr
sbb
test
or
das
xor
mov
xchg
and
mov
out
popf
cld
outs
sbb
mov
fst
push
shr
sub
fisub
movs
sbb
push
or
sbb
jp
xchg
xlat
fnstenv
lods
sub
or
js
aam
lods
pop
clc
scas
mov
jl
rol
outs
(bad)
jae
out
pop
daa
push
xchg
lea
jns
cmp
inc
lods
rcl
cmp
inc
mov
cmp
fisubr
sbb
cmp
push
aam
aaa
push
in
cli
retf
arpl
xor
push
jo
xor
dec
cwde
addr16
movs
ins
aam
outs
cwde
mov
call
(bad)
sbb
push
push
dec
clc
add
repz
data16
push
out
adc
imul
xchg
out
xchg
jge
(bad)
mov
mov
in
sub
mov
scas
test
mov
shl
(bad)
sbb
mov
ss
mov
cdq
cs
dec
test
in
leave
pushf
daa
xor
mov
sub
push
retf
ss
addr16
mov
cmc
and
movs
xor
mul
mov
adc
cwde
out
out
xor
popa
frstor
sbb
sahf
push
push
cmp
jb
ficom
xchg
(bad)
(bad)
loop
xchg
mov
cli
dec
aaa
dec
aam
mov
mov
aad
jbe
mov
mov
xlat
dec
movs
ret
mov
mov
cs
(bad)
into
ds
xchg
push
data16
dec
mov
sbb
imul
add
cmp
dec
clc
adc
adc
jmp
sub
cmp
push
mov
mov
ss
cdq
and
inc
pop
test
and
or
ds
nop
mov
or
lea
ss
xchg
jnp
cmp
xor
jmp
mov
clc
jnp
sti
data16
leave
je
pop
in
inc
dec
lea
cmp
ret
icebp
pop
mov
in
or
dec
dec
int
mov
mov
ret
mov
in
inc
in
idiv
inc
or
mov
push
adc
call
movs
xor
int3
out
add
push
sub
and
or
(bad)
jg
icebp
retf
out
pop
xor
push
pusha
jp
das
sub
cwde
mov
out
arpl
sbb
iret
or
xchg
sbb
shr
or
(bad)
std
nop
sub
in
cmps
xchg
inc
rcl
mov
icebp
cld
sbb
jb
dec
clc
dec
mov
inc
mov
xor
sbb
xchg
jle
mov
popa
push
or
(bad)
outs
cmp
in
movs
pop
xchg
mov
(bad)
fistp
les
imul
pop
xor
mov
sub
stos
fistp
or
inc
out
jecxz
push
jb
in
adc
mov
mov
cdq
dec
jmp
and
aaa
out
je
fdiv
lahf
sub
pop
sbb
add
retf
(bad)
xor
adc
into
xchg
adc
ror
gs
jo
sbb
js
add
and
mov
mov
ror
pop
hlt
xchg
push
je
xchg
sbb
mov
std
pop
mov
and
jl
bound
push
fdiv
bnd
mov
stos
xchg
add
rcl
jge
adc
push
fwait
pop
addr16
push
xor
jmp
out
lea
cmps
clc
and
out
rep
out
adc
pop
inc
stos
cmps
pop
cwde
xor
cdq
xchg
cwde
out
push
add
sub
add
jg
daa
mov
mov
cmp
scas
fld
add
icebp
out
pop
pop
imul
push
int
repz
shl
(bad)
push
cmp
inc
xor
or
jbe
inc
cmp
int3
dec
scas
and
cli
repnz
cs
xchg
pop
dec
jl
and
sbb
nop
ret
push
cwde
ds
adc
or
scas
mov
mov
ds
fld
movs
mov
pop
add
add
test
call
jmp
movs
xchg
dec
mov
nop
xchg
scas
arpl
pusha
fld
jae
push
adc
cmc
mov
out
lea
push
xchg
int3
sbb
push
pop
(bad)
dec
cmp
jp
inc
jecxz
push
cs
xor
xchg
xor
movs
adc
fst
mov
adc
(bad)
das
dec
lahf
push
xchg
outs
jmp
xor
hlt
lods
add
test
sbb
in
mov
push
cmp
pop
push
xchg
mov
sbb
mov
sbb
repz
test
movs
retf
and
and
repnz
ret
cmp
push
out
inc
fmul
movs
aam
jg
dec
push
pop
daa
adc
repnz
jmp
jno
test
inc
addr16
stos
add
(bad)
aaa
sub
ja
jmp
fidivr
jmp
push
aas
sbb
pop
inc
push
xchg
xor
ret
mov
dec
sbb
aad
jp
int3
loop
add
xor
in
mov
sbb
mov
jmp
push
std
xor
xor
movs
ret
ins
sahf
and
cmp
daa
inc
pop
daa
int
dec
int
stos
mov
imul
sti
cld
int
cmp
cmc
test
out
mov
test
jo
adc
add
pop
or
cmp
dec
in
(bad)
in
cmp
enter
sub
int3
psubusb
mov
(bad)
jns
cdq
jbe
mov
dec
movs
sub
ds
scas
adc
iret
xchg
xchg
repz
imul
iret
in
stc
fdiv
xchg
and
shl
cs
fs
pop
jle
jmp
(bad)
adc
xor
inc
mov
ins
mov
sti
fldcw
(bad)
and
push
or
mov
add
js
mov
cmp
ds
pop
mov
inc
or
xchg
arpl
out
cwde
xchg
adc
fistp
or
add
ins
push
pushf
xor
dec
jne
jb
jne
icebp
mov
dec
inc
in
mov
test
inc
out
out
repz
and
ret
pop
ret
cmp
out
dec
add
cwde
push
sar
in
scas
mov
mov
les
(bad)
je
adc
inc
loop
pop
rcl
fbld
sub
and
sbb
push
sbb
jae
ja
fldenv
arpl
(bad)
(bad)
popa
xchg
cmp
add
xor
pop
stc
cmovne
jae
imul
in
add
(bad)
shl
unpckhps
xlat
stos
jl
pop
movs
lods
hlt
dec
xchg
cmps
inc
xor
movs
enter
in
jne
sub
push
ret
xchg
fidivr
and
(bad)
sub
add
lods
stc
jbe
(bad)
gs
mov
das
sahf
xor
pop
icebp
imul
jne
lock
jns
mov
ror
call
sbb
das
sub
sub
jl
pop
jmp
push
popf
adc
(bad)
mov
jl
jbe
push
test
inc
in
shr
xchg
fwait
xor
push
push
add
fisubr
xchg
cmp
pop
cs
inc
dec
mov
xchg
(bad)
loop
add
mov
mov
mov
and
and
test
cmp
jne
inc
adc
push
(bad)
sbb
mov
repz
cli
mul
jmp
iret
and
pushf
int3
xor
sbb
lock
jnp
dec
push
test
xchg
je
inc
cli
or
sbb
mov
jnp
pusha
and
sbb
out
push
or
in
jbe
idiv
cwde
fld
push
retf
icebp
pop
and
stc
outs
setl
mov
sub
call
int3
or
(bad)
jmp
cmp
push
xchg
scas
imul
sahf
cld
fimul
out
dec
add
sub
das
dec
shl
repnz
cmp
cmp
addr16
dec
adc
xlat
push
pop
push
(bad)
cwde
popf
pop
pop
aam
sub
pushf
cdq
cmp
daa
idiv
xor
push
sub
lods
div
ins
out
push
(bad)
call
pop
scas
icebp
daa
cmp
mov
and
xchg
push
aas
sahf
fadd
div
mov
pop
sub
rcr
xor
mov
mov
(bad)
pushf
cwde
jmp
popa
adc
push
mov
popa
lahf
ss
mov
pop
lock
in
push
imul
lock
jmp
push
push
cdq
jg
jb
add
loopne
iret
stos
inc
jmp
fimul
ja
push
jb
mov
pop
add
dec
ret
int
inc
inc
(bad)
das
sub
sbb
rcr
dec
or
ds
jns
rol
mov
or
adc
cmp
push
mov
mov
and
push
xchg
popa
mov
sbb
outs
loop
or
xchg
dec
stos
bound
stos
(bad)
in
mov
(bad)
cs
pop
loopne
xlat
sub
xor
in
xchg
xchg
mov
ins
push
cli
stos
lock
xor
add
sub
(bad)
pop
and
xchg
pop
call
push
add
rep
push
dec
and
stos
mov
pop
adc
pop
into
pushf
xor
repz
test
into
adc
mov
mov
mov
js
pop
(bad)
int3
aam
sbb
ins
(bad)
loopne
adc
mov
sti
js
push
stos
jae
out
mov
xchg
stc
jb
dec
outs
leave
movs
stos
mov
or
outs
sti
leave
in
mov
(bad)
in
mov
mov
ret
pop
jbe
scas
mov
loope
(bad)
jle
add
(bad)
mov
push
aad
cld
ror
jmp
sub
pop
das
imul
sbb
outs
sub
adc
ins
mov
imul
sbb
and
sbb
adc
inc
xchg
ins
adc
fs
inc
xchg
jecxz
jnp
add
xor
jl
sub
in
dec
sbb
dec
loop
dec
push
mov
jbe
outs
cmps
xchg
fwait
loop
xchg
outs
rcr
loope
sub
add
xchg
test
retf
cld
add
pop
push
jp
mov
stos
int3
xchg
or
cmp
imul
xchg
xor
cmp
adc
or
sbb
jmp
sub
jmp
repnz
loop
cmp
sbb
mov
in
jne
stos
not
mov
inc
jb
fld
fld
lahf
ret
inc
das
std
dec
in
cmp
arpl
xchg
mov
out
fs
repnz
add
push
call
retf
pop
inc
push
lahf
in
and
mov
pushf
rcl
inc
sub
(bad)
pop
inc
aam
ror
cmps
mov
dec
adc
loopne
jbe
pop
inc
ror
sbb
cdq
add
or
add
push
ins
lea
dec
fwait
xchg
iret
xchg
xchg
popf
(bad)
lock
xchg
jecxz
scas
ss
inc
lds
arpl
xchg
adc
cwde
push
push
std
popf
call
or
(bad)
sar
std
pop
jl
ret
ficomp
iret
in
pop
xor
jo
bound
aas
test
jbe
xor
ret
cmp
sub
shr
out
test
jge
pop
xor
(bad)
hlt
cmp
shl
cmp
adc
nop
cwde
and
xchg
sbb
inc
ret
repnz
add
add
xchg
shr
frstor
xor
frstor
fwait
ds
push
rcr
mov
lds
xor
jecxz
cwde
push
fcom
out
add
push
jnp
mov
xchg
push
stos
data16
ja
inc
xor
neg
xchg
mov
lods
push
push
dec
scas
enter
pop
pop
mov
pop
or
push
mov
aas
adc
cmp
pop
dec
sbb
int3
cmp
dec
rol
adc
outs
or
scas
cli
cmp
dec
test
mov
in
addr16
xlat
arpl
loope
sub
imul
popa
repz
js
sbb
fbld
jmp
test
and
ror
jne
push
addr16
imul
scas
pop
adc
mov
es
or
inc
mov
cmp
sub
jmp
outs
or
inc
pop
inc
stos
or
scas
lods
addr16
push
cmp
je
ins
loop
sub
mov
out
push
jg
push
xor
outs
push
fs
mov
cli
js
and
pop
fld
cmp
cdq
mov
ins
mov
pop
mov
enter
jns
idiv
in
push
lods
js
push
add
call
outs
jnp
les
js
inc
arpl
fcomi
out
call
sbb
push
ins
lea
add
add
test
jnp
xor
push
and
aas
push
outs
or
ret
xchg
shr
enter
retf
mov
int
jecxz
pop
jle
sub
loop
enter
jno
ret
je
(bad)
fidivr
mov
inc
cmp
(bad)
in
(bad)
and
push
mov
pop
js
fcomp
aam
xchg
inc
push
mov
ret
jnp
lods
sti
xchg
cdq
inc
push
cld
stos
aaa
cmp
cli
mov
in
sub
pop
mov
outs
adc
mul
cmp
das
jns
pop
test
pushf
rcr
int
jae
mov
repz
jmp
sub
sahf
cwde
inc
mov
cmp
and
adc
jl
cmp
inc
retf
add
mov
pop
inc
mov
fisttp
and
mov
push
dec
fwait
sub
xchg
int
scas
adc
mov
cmp
dec
fbld
jnp
xlat
pop
mov
ja
cmp
inc
call
jg
inc
fild
repnz
fdivr
stos
test
pop
dec
and
andps
in
add
and
jae
movs
adc
int
cmp
sub
(bad)
jbe
lods
icebp
mov
lahf
add
jge
push
popf
scas
mov
outs
pushf
test
xor
cwde
inc
sub
adc
add
into
sbb
hlt
push
dec
scas
add
and
mov
xor
mov
adc
sub
and
pop
xor
arpl
call
add
repz
idiv
mov
adc
call
loope
iret
inc
fisub
xchg
mov
jo
cdq
xchg
mov
fs
and
not
call
jl
fadd
inc
dec
pushf
jae
jle
inc
inc
mov
in
ss
cmp
or
mov
clc
mov
imul
dec
nop
pop
and
add
xor
dec
gs
out
cmp
adc
iret
sbb
test
inc
sbb
jp
fdiv
loop
les
mov
dec
pushf
imul
inc
add
xchg
dec
fadd
xchg
mov
popf
clc
ins
xlat
and
cld
cmps
mov
fadd
add
and
push
or
int
lods
scas
imul
and
out
shl
(bad)
mov
pushf
xchg
aas
lahf
lea
shl
add
imul
out
and
push
push
push
xor
jmp
sbb
sub
ss
cld
pop
shld
dec
xor
inc
cwde
inc
and
xchg
(bad)
loop
test
add
and
pushf
mov
push
aad
xchg
mov
icebp
popf
(bad)
add
push
in
cli
mov
xchg
popf
push
bound
ins
fdivr
into
pop
sbb
or
cwde
mov
sar
sub
xchg
cwde
jne
cmp
mov
mov
in
mov
popf
sub
ja
cmp
aaa
arpl
stos
or
sub
pop
(bad)
adc
(bad)
cmc
stos
ins
aaa
xchg
dec
jo
loop
stc
popf
push
dec
pop
dec
and
pop
jae
retf
nop
push
inc
stos
dec
mov
sbb
cmc
imul
inc
jg
je
cmp
mov
add
xchg
outs
call
cmp
rol
in
xchg
stc
mov
dec
mov
inc
xchg
daa
ror
or
inc
pop
gs
pop
fs
mov
movs
(bad)
cmp
out
daa
jmp
lea
pop
pop
pushf
mov
mov
cmp
xchg
jo
sbb
dec
cdq
mov
push
(bad)
mov
pop
jo
inc
mov
repz
sti
les
adc
and
out
dec
xchg
scas
jns
xor
jae
clc
cmp
ds
and
or
xlat
out
lods
add
fcmovnu
mov
outs
pop
add
push
icebp
ins
xchg
sahf
pop
rcr
add
mov
xor
sbb
mov
mov
cmp
loop
sti
or
out
movs
retf
cmc
mov
pop
rcr
xchg
test
int
sti
inc
das
fld
sub
retf
add
jp
ds
adc
add
in
cld
jmp
das
aas
lock
sub
aas
cmps
add
or
mov
aaa
jns
cmp
popa
sub
in
mov
test
jge
jle
outs
push
nop
mov
mov
repz
push
or
enter
push
or
jmp
adc
movs
dec
and
mov
in
in
mov
mov
out
aad
(bad)
inc
imul
imul
rcl
jl
adc
mov
jg
adc
sub
add
xlat
sbb
cmp
adc
dec
mov
cmps
fld
jecxz
mov
mov
xor
xchg
fidiv
push
sub
call
cmps
fsub
mov
(bad)
xlat
jmp
jp
push
mov
sub
loop
adc
out
mov
shr
cmp
enter
cmc
xor
std
aaa
or
xor
in
push
sub
(bad)
adc
fild
gs
rcl
subps
es
mov
and
cmc
mov
pop
outs
dec
test
and
push
mov
xlat
push
mov
mov
out
fs
(bad)
in
lock
test
mov
lds
lea
in
xor
cwde
dec
scas
jno
repz
clc
dec
or
fld
dec
xor
cmp
ret
cli
stc
dec
and
mov
add
and
jns
sub
fidivr
std
inc
or
mov
aas
cs
jno
shl
popa
test
mov
push
fisub
mov
js
(bad)
mov
outs
pop
ins
mov
sbb
and
imul
inc
mov
dec
rol
fidivr
ss
vcvtsi2ss
mov
call
xchg
ret
pop
rol
dec
stos
sahf
pop
stos
dec
out
out
mov
sub
lods
fsubr
(bad)
sbb
arpl
imul
and
repz
jbe
xchg
aad
and
mov
imul
loop
out
mov
movs
out
shl
jne
out
into
fidivr
add
ds
jo
data16
and
(bad)
stc
adc
movs
not
mov
add
inc
pushf
int
inc
sub
out
adc
iret
mov
popa
hlt
inc
icebp
call
in
aam
inc
scas
push
and
adc
inc
aad
in
sbb
outs
add
xchg
inc
and
pop
cmp
lods
inc
fcmovb
jb
je
ins
ror
cmp
cmps
lods
ins
lods
aaa
stc
pop
in
mov
add
dec
jne
cmc
stos
xchg
pop
inc
push
out
pop
ds
movs
dec
mov
sahf
std
retf
mov
fsqrt
retf
inc
lea
pop
xor
cld
out
bound
nop
ja
mov
retf
mov
adc
jmp
xchg
xchg
mov
mov
mov
pop
pop
mov
and
sub
mov
dec
cmp
sahf
je
cmp
idiv
dec
or
cdq
sub
ret
mov
js
outs
adc
addr16
cs
add
mov
inc
adc
loope
out
fdiv
mov
hlt
test
fcomp
cli
dec
call
in
mov
cdq
dec
or
jne
and
mov
mov
cmps
sbb
fs
addr16
mov
pop
push
mov
dec
out
aaa
inc
iret
xor
jb
call
inc
test
sbb
cmp
and
push
adc
xor
cmc
push
xor
(bad)
sbb
jmp
loop
test
cmp
in
mov
in
ficom
clc
jp
dec
add
in
adc
dec
cdq
(bad)
into
jecxz
fwait
jne
out
pop
add
jnp
inc
fld
mov
xor
mov
pusha
pop
shr
mov
sub
mov
mov
sub
inc
jmp
mov
sbb
mov
pop
call
repnz
adc
in
inc
mov
or
clc
adc
ss
mov
fldenv
xor
int3
leave
jmp
or
mov
ror
fldenv
sar
data16
mov
ins
push
xchg
cmp
retf
push
push
push
test
retf
and
cmp
call
leave
xchg
mov
ins
stos
pop
shl
loopne
mov
and
or
out
inc
bound
movs
inc
jne
adc
sti
mov
lods
jnp
daa
lock
retf
stos
inc
and
xor
xor
xor
int3
sbb
add
dec
movs
lock
pop
adc
idiv
mov
jg
nop
jmp
jge
arpl
retf
dec
mov
and
dec
pusha
xor
or
int3
dec
retf
add
dec
sub
fbld
adc
jne
imul
ins
mov
scas
stc
mov
cmps
call
imul
xchg
loop
or
mov
mov
and
xchg
popa
pop
and
add
repz
or
outs
pop
mov
dec
std
push
inc
dec
or
leave
inc
cmc
outs
or
ja
out
push
add
clc
dec
pushf
inc
sti
mov
(bad)
jg
add
mov
imul
int
push
in
lock
xchg
repnz
xchg
inc
fcmovu
out
adc
and
hlt
lds
aam
adc
sub
cmc
lahf
xchg
sar
dec
pushf
sbb
ins
sti
gs
cmc
mov
jnp
jl
aad
push
push
or
push
mov
jmp
or
scas
iret
jmp
pop
fdiv
mov
bound
and
rol
jbe
push
mov
sub
pushf
add
jmp
ror
imul
cmps
movs
xchg
dec
ss
push
inc
push
pop
adc
mov
and
fdivr
inc
icebp
(bad)
(bad)
in
imul
push
or
pop
imul
hlt
stos
cmp
stos
push
test
mov
jb
inc
test
add
inc
mov
call
clc
popf
out
popf
enter
fdivr
stos
lock
rcr
call
frstor
ins
jnp
push
adc
aaa
add
lahf
stc
shl
stos
jecxz
pushf
jl
ins
jns
aam
push
inc
adc
and
push
scas
mov
inc
and
out
mov
pop
mov
test
scas
nop
mov
sub
mov
cmp
inc
retf
fmul
or
add
(bad)
out
fadd
adc
mov
ins
adc
or
movs
push
jge
(bad)
jbe
sub
or
scas
inc
mov
shl
mov
loop
adc
stos
imul
adc
or
out
dec
push
in
dec
mov
jmp
pop
jmp
cmp
cmp
repnz
jmp
adc
sub
adc
mov
inc
ret
div
sti
data16
dec
out
dec
fadd
adc
xor
(bad)
push
or
scas
xchg
cwde
scas
es
cmp
movs
nop
push
and
fstp
out
mov
push
fidiv
push
adc
sbb
sti
mov
mov
jno
nop
fld
aas
lds
cmc
call
mov
movzx
inc
xchg
cmp
cmp
out
outs
pop
cmp
jns
imul
and
push
sub
add
stc
and
xchg
push
push
bound
lea
xchg
mov
adc
das
cmp
sub
ins
popa
pusha
je
int3
into
rcl
xor
scas
fld
sub
adc
add
ror
mov
mov
scas
iret
fbstp
sub
jge
adc
jae
ret
jo
fidiv
mov
sub
inc
(bad)
fmul
jp
mov
das
sbb
sub
jb
sbb
mov
(bad)
or
ds
mov
xor
mov
xchg
data16
add
arpl
loopne
call
stos
mov
or
inc
jno
add
sar
xor
mov
jge
es
pop
adc
retf
addr16
test
jb
jns
xchg
sub
outs
cmc
je
cmp
add
lahf
mov
or
test
fadd
pop
out
push
xchg
pop
jne
dec
xor
mov
mov
inc
mov
test
or
push
das
retf
pop
xchg
mov
pop
dec
test
jb
imul
out
ja
sub
push
mov
sahf
push
(bad)
sbb
pop
cmp
in
mov
jp
jnp
pop
mov
jmp
ret
adc
jae
xor
or
pushf
addr16
mov
imul
mov
mov
sub
add
mov
mov
stc
out
sbb
pop
jmp
(bad)
int3
jle
jns
rcl
ffreep
cli
das
dec
(bad)
(bad)
leave
sbb
cld
shr
int3
push
sbb
(bad)
pop
loopne
jl
xchg
call
imul
stos
out
leave
pop
aad
movs
inc
lea
test
sbb
mov
mov
ins
call
inc
pop
stos
(bad)
mov
mov
mov
lods
cwde
add
adc
test
mov
xor
sub
and
xor
dec
cmc
cdq
bound
movs
(bad)
fsubr
pop
push
fldl2e
xor
pop
push
sbb
(bad)
push
pushf
xlat
int
xor
jo
out
out
ret
dec
fdivr
aaa
mov
mov
mov
pop
hlt
mov
ret
jmp
mov
in
ret
inc
js
jle
xor
(bad)
push
xor
enter
mov
movs
mov
xor
es
mov
mov
push
dec
add
dec
push
icebp
es
lods
bound
sub
in
jbe
jecxz
aam
sub
push
mov
pop
out
mov
cmp
mov
pop
inc
push
std
or
jno
push
xor
cld
das
add
jmp
adc
push
test
int3
test
popf
xor
cmp
mov
retf
dec
dec
mov
sub
inc
push
push
shr
icebp
repnz
xor
mov
mov
jns
fistp
mov
jmp
add
test
inc
ds
sbb
fwait
xor
sub
adc
imul
add
pusha
(bad)
int
ja
jl
iret
jmp
dec
test
loopne
les
fnstenv
dec
imul
mov
fistp
cmp
js
xchg
loopne
dec
cvtdq2ps
stos
mov
mov
lods
inc
sub
fisubr
je
frstor
or
mov
xchg
cmp
and
addr16
ss
sti
add
mov
leave
sbb
xchg
dec
pop
shl
add
call
push
inc
hlt
adc
hlt
jbe
loope
retf
ja
aas
in
popf
lods
add
sub
mul
jne
pop
push
bound
cmp
pop
cmp
rcl
adc
(bad)
cld
aas
lods
in
das
sar
test
adc
xchg
je
cld
repnz
adc
pushf
add
mov
mov
not
cwde
popa
aad
and
add
fwait
xchg
or
push
iret
sbb
in
or
fcmovu
mov
ins
add
and
adc
lock
jae
shrd
retf
enter
push
into
xchg
jg
mov
call
inc
adc
ss
ja
movs
loope
xchg
mov
jp
xchg
xchg
pop
nop
aas
ins
fdivp
cmp
jecxz
sbb
push
iret
jmp
jbe
aad
outs
push
sub
jmp
fld
add
xchg
stos
cwde
movs
push
inc
inc
cwde
movs
xor
lods
sbb
xor
ret
std
mov
dec
pop
loope
daa
outs
push
pop
or
xor
mov
lea
(bad)
aam
add
or
mov
retf
sub
hlt
mov
xchg
pop
sub
in
cmp
push
dec
test
sbb
int
mov
dec
inc
sub
repnz
or
jno
cwde
adc
(bad)
ins
sub
mov
stc
xchg
adc
div
push
inc
and
cmps
jp
lahf
call
sbb
sub
xchg
das
or
inc
jecxz
daa
push
adc
cmp
mov
fisttp
les
sti
jns
add
aaa
or
(bad)
add
sahf
push
inc
aas
mov
mov
pop
add
aas
and
sbb
adc
outs
icebp
(bad)
xor
sahf
add
mov
pop
stos
hlt
add
shl
or
test
pop
movs
adc
push
std
push
ror
jmp
xor
cmps
ret
and
scas
mov
in
inc
push
add
jb
fwait
(bad)
adc
iret
sahf
bound
enter
and
das
call
or
mov
mov
sub
or
xor
add
iret
cwde
outs
movs
xor
adc
fistp
inc
clc
pop
pop
or
sub
inc
test
mov
sub
and
cmps
ror
sub
imul
mov
popa
add
sub
jecxz
movs
std
jns
mov
mov
stc
mov
inc
outs
pop
idiv
imul
pop
xchg
scas
xchg
out
push
add
scas
lahf
movs
test
aas
sub
stc
pop
in
mov
mov
popa
xchg
dec
cmc
repz
cdq
push
cmp
sti
jle
(bad)
pop
es
push
call
mov
cmps
in
add
loopne
cmps
and
nop
retf
imul
mov
dec
xchg
icebp
pop
(bad)
inc
int
xor
js
xor
in
jle
push
(bad)
cmp
inc
jp
xchg
xchg
into
mov
mov
shr
pop
jecxz
loop
mov
and
sbb
sbb
int3
inc
test
fs
push
mov
lock
mov
jl
into
jmp
pop
jns
and
enter
jge
mov
jecxz
add
lea
iret
push
adc
pop
fprem
dec
sub
add
adc
lods
lods
push
jo
leave
inc
test
inc
fsub
cs
in
pop
imul
loopne
cmc
sbb
sbb
mov
and
enter
fisubr
cli
xchg
pop
cld
sbb
les
mov
hlt
and
xor
jp
jle
(bad)
movs
das
and
es
adc
jge
mov
mov
mov
mov
test
add
outs
js
push
movs
pop
repz
movs
or
inc
retf
stc
pop
push
ins
fwait
rcl
cwde
or
mov
add
test
dec
pop
cdq
cmps
cmp
retf
fsin
adc
inc
mov
pop
je
adc
xor
leave
arpl
mov
and
(bad)
in
push
sub
dec
sub
or
xor
pushf
sbb
outs
nop
out
jp
movups
push
or
loop
mov
fdiv
sbb
ins
out
daa
jns
lahf
dec
aad
mov
and
xchg
(bad)
outs
mov
push
mov
adc
xor
adc
sbb
mov
test
sar
mov
adc
mov
mov
int
jnp
sub
movs
movs
mov
fiadd
ret
jg
dec
aas
add
and
mov
xchg
mov
icebp
mov
xchg
cmp
push
daa
push
and
cmc
js
and
xchg
call
mov
ror
dec
dec
int
xchg
inc
cmc
test
mov
mov
retf
mov
(bad)
adc
ins
pop
inc
or
fcom
call
cli
and
clc
mov
add
pop
iret
jmp
inc
xor
iret
mov
jnp
cld
repnz
inc
sbb
or
xor
cmps
push
jge
jne
popf
mov
lods
das
push
in
in
lods
mov
retf
out
dec
jmp
imul
sub
and
aad
mov
xor
cwde
push
pop
cmp
or
loope
mov
arpl
jg
xor
shl
call
in
adc
iret
aam
retf
adc
(bad)
frstor
stos
xchg
aaa
loope
out
add
(bad)
mov
pop
test
mov
push
jns
pop
dec
xor
jbe
cmc
call
mov
pusha
inc
pop
(bad)
cld
mov
pop
loop
(bad)
pop
adc
push
test
xor
push
xor
mov
sbb
out
xchg
lods
jecxz
sahf
fcom
mov
sub
add
xchg
js
inc
jp
jb
xor
xchg
xchg
adc
xchg
xor
dec
sbb
out
jmp
sbb
push
mov
call
jge
jo
ret
cld
xor
pushf
outs
jmp
pop
(bad)
call
pshufw
pop
call
mov
popf
add
je
cmp
sar
push
call
pop
push
push
test
and
movs
out
out
mov
(bad)
icebp
push
and
aam
lea
xor
in
scas
and
fnstsw
fs
add
ror
pop
sub
xchg
push
push
dec
xor
das
push
hlt
or
and
adc
add
adc
push
test
adc
mov
pop
outs
dec
mov
add
test
(bad)
in
mov
ds
jne
sub
adc
pop
xchg
mov
sbb
adc
loop
and
stos
repnz
enter
outs
(bad)
xor
jnp
push
cmps
sub
mov
movs
movs
inc
inc
aas
pop
inc
in
adc
bswap
out
mov
out
dec
push
xor
cli
arpl
ret
enter
jg
out
mov
add
out
jnp
mov
cdq
in
inc
push
sbb
pop
sbb
mov
enter
(bad)
sbb
mov
cmps
loop
call
cmp
jno
or
rcr
jmp
cld
test
push
jmp
aas
cmp
or
mov
retf
xor
lock
dec
dec
push
loop
and
dec
popf
sbb
sub
imul
or
sub
jp
lahf
fsubp
inc
movs
or
inc
xor
into
sub
mov
arpl
push
pop
loopne
xor
movs
push
lods
aaa
mov
cmps
inc
ss
dec
push
addr16
mov
xchg
or
mov
test
and
xchg
mov
or
mov
out
scas
(bad)
ds
stos
les
push
scas
mov
ins
jmp
dec
inc
fisttp
or
push
imul
iret
push
imul
pop
and
mov
push
push
mov
pop
adc
fs
mov
js
popf
push
xorps
xchg
fadd
dec
in
jle
mov
xchg
xchg
pop
mov
sub
retf
mov
out
call
pop
inc
mov
push
fisubr
repz
fnstcw
sub
cs
push
mov
mov
push
not
pusha
ss
scas
ins
push
xchg
xchg
sbb
xchg
mov
add
ficomp
dec
clc
int3
mov
inc
lea
dec
push
fisttp
movs
(bad)
adc
jmp
stos
add
test
stos
cmc
dec
cmp
inc
mov
cmp
adc
shl
sbb
mov
ins
push
out
jl
iret
or
inc
mov
cld
xchg
jge
adc
sahf
or
scas
idiv
cs
(bad)
mov
repnz
aas
inc
icebp
and
or
pop
ins
pop
jp
popa
in
or
sbb
cmp
js
add
daa
ins
mov
and
into
and
add
call
mov
repz
adc
xchg
ins
xor
mov
call
in
sub
jnp
fimul
ss
or
lods
mov
sub
mov
xor
sub
jle
jge
out
dec
sbb
dec
pushf
test
or
fadd
add
dec
adc
aaa
dec
mov
inc
jbe
or
or
adc
jb
xor
shr
fwait
jg
mov
iret
inc
ror
sub
call
in
int3
xlat
push
test
aas
(bad)
inc
adc
loop
mov
xchg
and
dec
call
repz
and
cmps
clc
dec
mov
jge
shl
daa
jecxz
pop
in
add
push
aam
aad
fimul
data16
test
mov
fidivr
fisttp
xor
test
add
and
push
push
and
movlps
out
adc
not
aaa
je
cmps
xchg
xor
or
jmp
dec
push
and
add
dec
dec
std
add
ds
es
jo
jbe
(bad)
out
sub
pop
mov
xchg
inc
lea
leave
xchg
jbe
sbb
xchg
add
out
lea
fisub
repz
test
pushf
sti
clc
jle
dec
loope
add
nop
cmp
pop
loopne
jae
popf
retf
pop
rcl
push
dec
pushf
xor
cld
fist
inc
out
or
daa
push
fadd
xchg
out
cmc
mov
fisubr
jae
bound
fnstcw
inc
popf
inc
or
xor
cmp
loop
mov
xchg
jae
neg
retf
pop
add
shl
cmp
dec
movups
fmul
fist
adc
lea
repnz
push
call
stc
cli
aam
jle
xchg
mov
sbb
xor
dec
ret
mov
fs
pop
jecxz
adc
ds
mov
test
aas
cmps
cmp
add
loope
mov
add
aas
iret
lods
(bad)
faddp
add
(bad)
push
mov
adc
test
mov
xchg
cwde
xchg
xor
(bad)
mov
adc
sbb
sub
jne
stos
xor
bound
fst
adc
ret
push
ds
cmp
js
dec
and
push
jmp
and
sbb
jg
fdiv
and
inc
sbb
loop
push
xchg
mov
aaa
cmp
jmp
sbb
sahf
pop
inc
fcmovbe
pop
inc
ret
sti
and
(bad)
dec
es
outs
(bad)
jo
or
or
xor
(bad)
pop
pmulhw
ins
mov
pop
(bad)
mov
xor
xchg
push
fimul
stos
fisub
push
dec
xchg
daa
mov
jbe
sar
push
mov
or
or
pop
pusha
xchg
inc
xchg
or
mov
nop
push
mov
cdq
add
mov
fnstcw
shl
mov
icebp
inc
mov
cmp
fisubr
mov
inc
cwde
jns
inc
mov
adc
mov
in
pop
rcr
int
sbb
(bad)
and
lods
jae
mov
dec
jmp
inc
xchg
jmp
add
add
cmp
sub
in
sub
jl
hlt
cdq
sbb
pop
and
mov
div
call
aam
push
lods
call
jns
mov
pop
leave
rcl
out
xor
hlt
rcl
push
sub
pop
je
addr16
retf
clc
add
icebp
out
in
pushf
xchg
rcl
adc
movs
cmp
retf
dec
inc
add
jg
dec
jb
js
jmp
sub
fstp
je
int3
test
js
stos
inc
sbb
mov
xchg
lahf
mov
xor
mov
(bad)
and
adc
out
cmps
push
add
jle
(bad)
adc
into
fnstcw
popf
jmp
push
out
or
pop
xchg
xor
mov
movs
xor
and
sbb
lods
jg
pusha
and
lods
jno
movs
bound
sub
shr
sub
cmp
clc
push
or
cs
sbb
popa
in
jnp
sbb
not
push
inc
in
js
shr
jb
movs
ret
push
inc
enter
test
xchg
fst
popf
nop
or
add
ret
stos
sti
outs
push
xlat
sbb
pop
repz
(bad)
in
test
sbb
out
call
or
inc
adc
fcmove
outs
xchg
sbb
jl
or
ret
popf
lea
and
jmp
jno
(bad)
mov
xchg
stc
mov
pop
adc
mov
jge
ja
movs
repz
jnp
cld
cwde
dec
xchg
jne
arpl
popa
outs
pop
push
pop
jge
xor
cli
xchg
data16
sub
arpl
pop
sub
jae
test
(bad)
pop
out
ins
sbb
adc
mov
and
(bad)
jno
lock
jo
test
int
mov
xchg
push
inc
add
sbb
and
jnp
fisttp
int3
test
jle
xor
xchg
out
push
call
push
enter
sahf
ret
sub
sar
and
repnz
mov
test
push
sbb
and
xor
push
pop
mov
mov
fstp
les
push
ss
sub
push
cmp
or
fcom
test
adc
jg
xchg
es
stos
xor
scas
das
sbb
out
add
mov
popa
mov
sti
mov
retf
or
inc
add
int
mov
jle
mov
loopne
jne
(bad)
lods
cs
sbb
inc
movs
mov
enter
push
push
xchg
stc
xor
leave
dec
mov
dec
push
shr
sbb
xchg
or
shl
sub
add
mov
push
ror
push
dec
xchg
popf
cmp
jl
xor
mov
fmul
icebp
jo
cwde
dec
jns
cmp
popf
rdmsr
push
add
xchg
add
push
cli
ds
xchg
adc
push
mov
jl
outs
mov
xchg
pushf
hlt
mov
(bad)
pushf
bound
cmp
sbb
adc
fcom
cmp
mov
sub
and
and
int
dec
cmp
outs
icebp
mov
mov
jae
in
mov
add
sub
ret
cmp
pop
popf
inc
aad
xchg
jns
mov
xor
inc
mov
cmp
(bad)
pop
mov
lods
mov
push
mov
call
fdiv
jl
scas
cmp
cli
cmp
xchg
xor
das
sub
pop
scas
cmp
in
inc
arpl
mov
rol
sub
jle
add
jae
mov
and
iret
cmp
sub
fnstsw
je
add
addr16
cdq
lsl
cld
mov
adc
add
jmp
das
movs
mov
inc
cmp
mov
std
push
xlat
jg
popa
jb
cdq
call
not
dec
setno
mov
fst
pop
int3
xlat
jns
mov
and
pop
xor
(bad)
in
sub
inc
pop
sbb
shl
mov
cmp
or
adc
call
mov
pop
out
push
add
iret
xor
dec
div
in
lahf
jg
ins
inc
ret
cld
cmp
push
jl
xor
cmp
jecxz
jbe
stos
mov
cmp
or
or
std
jecxz
dec
cmps
xchg
xor
xchg
sbb
mul
fnsave
xchg
loope
mov
adc
or
sbb
inc
xchg
cdq
dec
pop
pop
js
or
mov
cmc
repnz
adc
fstp
test
addr16
mov
dec
sbb
sar
ss
cmc
std
add
mov
int
test
(bad)
rcr
and
fsubr
push
jle
fwait
push
push
inc
cmp
bnd
jbe
xor
fadd
ins
dec
sub
in
jmp
loop
pusha
sbb
xchg
dec
out
xchg
sub
in
jae
push
aaa
in
faddp
push
mov
shr
fwait
mov
in
out
mov
lea
jmp
dec
dec
sti
jmp
push
out
in
inc
push
xor
pop
loop
out
test
inc
dec
mov
je
ret
sbb
int
xchg
mov
xchg
dec
stos
xchg
leave
neg
adc
push
mov
mov
jg
shl
and
or
cmc
pop
addr16
xor
xchg
push
imul
add
mov
stos
loope
ror
xchg
clc
sub
ret
sub
jno
cmp
cmps
rcr
push
xor
mov
retf
sub
call
and
pop
(bad)
jo
outs
jp
fisttp
xlat
jmp
add
lods
cmp
jmp
movs
in
iret
iret
dec
cmp
dec
sbb
int
outs
adc
stc
inc
pop
test
shl
fs
adc
mov
sti
arpl
inc
in
mov
dec
xchg
repz
adc
icebp
pop
jns
cmp
icebp
or
jge
pop
ds
xchg
or
add
std
add
shr
mov
sar
sti
imul
push
inc
cmp
pop
hlt
cmp
dec
(bad)
mov
inc
ret
push
test
or
loop
int3
mov
inc
cmp
mov
push
jmp
lds
ficom
ins
dec
clc
mov
dec
js
or
push
cli
test
dec
xchg
cmp
int
dec
(bad)
fistp
jecxz
ja
xor
das
outs
push
les
xor
lods
jmp
mov
pop
xor
xchg
xor
cmp
jno
ret
cmp
mov
dec
jl
sahf
in
scas
ficomp
or
iret
repz
pop
mov
jg
movs
xlat
adc
jbe
pop
push
and
sub
and
xchg
es
icebp
jge
jge
add
add
mov
test
cmp
or
popa
mov
inc
inc
cmp
das
xchg
retf
push
data16
and
lock
push
sub
shl
add
rol
xchg
imul
mov
les
mov
xchg
(bad)
cmps
call
jmp
lods
inc
test
pop
mov
push
pushf
pusha
dec
out
test
loope
add
jae
cld
adc
and
fcom
dec
in
mov
loope
add
mov
push
lahf
add
jmp
fadd
in
into
shl
mov
imul
cmps
push
sar
or
mov
scas
and
stos
aas
inc
arpl
adc
cmp
leave
jb
out
push
xlat
cmp
dec
or
dec
hlt
jno
ja
fld
or
mov
mov
mov
pop
retf
into
(bad)
push
sub
fs
mov
jmp
nop
mov
mov
jbe
adc
scas
push
retf
mov
jae
fmul
cmp
fimul
adc
sub
mul
les
sub
xor
add
je
mov
(bad)
loopne
call
loop
xor
dec
and
popa
push
mov
pusha
pop
sub
rcl
aam
cs
cmp
scas
or
pop
or
or
adc
out
mov
and
mov
add
pop
test
pop
int3
dec
aas
shl
inc
dec
jp
or
imul
mov
stos
inc
sub
cld
xchg
xor
call
sub
cmp
sti
sbb
push
nop
mov
mov
cmps
mov
or
jae
mov
inc
out
adc
ror
in
sbb
pop
div
stc
clc
inc
daa
fldenv
cmps
mov
(bad)
add
lods
adc
or
xor
movs
enter
fadd
jbe
enter
mov
xchg
add
dec
and
xor
mov
jp
push
adc
dec
sbb
sub
pop
adc
mov
inc
fs
push
out
dec
sbb
lea
loop
ret
dec
cld
sub
add
sub
nop
jle
js
dec
clc
xchg
call
cmp
xchg
(bad)
mov
in
rol
loopne
sub
leave
xchg
shl
lock
xor
in
mov
push
hlt
js
xchg
movs
cs
add
rcl
test
mov
mov
cli
stos
push
push
mov
and
retw
adc
data16
dec
pushf
mov
test
pushaw
ins
mov
push
test
xor
sbb
sub
inc
push
ds
mov
fimul
(bad)
jmp
call
adc
icebp
add
jmp
mov
ret
pop
push
cdq
sbb
cli
pop
(bad)
mov
add
gs
cs
clc
inc
xchg
out
or
movs
mov
iret
rcr
neg
test
jl
fwait
mov
jb
jmp
scas
push
add
ins
push
push
repz
mov
xor
aad
dec
xchg
loop
pop
mov
je
stc
cmp
ss
adc
addps
mov
js
mov
jnp
mov
dec
(bad)
test
mov
inc
xchg
ss
pop
movs
clc
or
push
pusha
add
or
sub
cs
clc
add
nop
jb
inc
inc
jp
mov
scas
data16
xchg
stc
fadd
pop
aam
xor
dec
cmp
into
jae
inc
das
xor
mov
xchg
jmp
sub
or
hlt
lods
mov
mov
aad
leave
mov
sub
mov
mov
(bad)
mov
(bad)
(bad)
sbb
test
jbe
imul
aam
(bad)
std
aas
and
inc
xchg
aaa
fisttp
leave
dec
fwait
(bad)
push
in
paddq
or
xor
and
lea
repnz
mov
and
or
clc
inc
out
xchg
scas
sub
imul
push
and
mov
ins
mov
jle
data16
test
addr16
lea
sub
mov
ins
xchg
jmp
push
(bad)
mov
xchg
or
pop
and
lahf
aaa
or
fs
add
retf
cli
sub
jle
(bad)
xor
jl
or
inc
pop
xchg
lds
js
ret
sahf
mov
xor
aaa
(bad)
cwde
jno
ins
add
jmp
cwde
inc
push
sar
sbb
push
aad
inc
mov
out
ss
push
fwait
jecxz
mov
movaps
imul
std
jge
or
mov
imul
aaa
pop
mov
movs
cmp
int
fnop
and
push
cmp
cmps
shr
and
movs
jbe
or
bound
mov
mov
adc
sub
inc
add
jg
inc
cmc
loopne
xstore-rng
cmps
inc
cwde
aad
inc
mov
arpl
jp
inc
or
arpl
xor
fidivr
add
jmp
mov
adc
jmp
jecxz
test
test
ins
push
loop
inc
push
fdiv
cmp
(bad)
mov
popa
or
mov
mov
mov
rcr
push
mov
fwait
inc
ret
mov
add
lods
in
and
jecxz
frstor
cmp
inc
imul
pop
sar
aad
mov
xor
stos
jnp
(bad)
sbb
(bad)
push
gs
cmps
dec
push
xor
push
cwde
fisubr
jo
rol
sbb
xor
jbe
imul
add
cwde
les
cmp
inc
sub
and
xlat
jge
mov
loopne
in
and
enter
icebp
(bad)
fild
pop
xor
and
retf
call
xchg
loope
repnz
mov
shl
dec
es
(bad)
mov
pop
lods
in
jo
test
mov
repz
sbb
test
cmc
push
mov
adc
sub
shl
xor
stos
mov
jnp
rcl
mov
sti
repnz
addr16
lahf
mov
mov
mov
gs
pop
out
out
test
(bad)
ja
jle
pop
mov
call
addr16
imul
enter
(bad)
jl
xor
sar
sti
push
and
jg
clc
cmp
shl
call
aam
pop
jmp
mov
pop
or
mov
ror
xor
ret
outs
lds
jg
bound
jg
outs
dec
jo
mov
mov
inc
push
xor
cdq
inc
xor
fs
cmp
add
ret
cli
inc
jl
xor
adc
pop
ret
es
lds
xor
and
lea
sbb
in
pop
loope
inc
fcomp
pop
pop
and
adc
jl
cli
sbb
xor
into
and
xor
retf
ja
pop
and
rol
rol
call
mov
push
mov
popf
adc
mov
xor
sbb
adc
push
mov
jae
sbb
imul
nop
cmp
or
iret
clc
arpl
out
int
fdivr
call
dec
sahf
xchg
and
mov
and
cmp
inc
dec
ror
fadd
sub
push
adc
ins
push
adc
iret
retf
pop
(bad)
nop
or
ret
test
or
rol
js
mov
xor
call
mov
mov
ret
(bad)
arpl
add
add
pop
mov
gs
mul
or
inc
and
and
xchg
and
xor
xchg
inc
xor
sti
jmp
bound
into
xchg
add
add
push
mov
push
sbb
test
push
std
in
popa
call
xchg
jg
inc
mov
add
mov
cmps
jp
xor
cld
sahf
inc
test
jge
stc
push
lock
(bad)
retf
ins
mov
mov
cmp
push
pop
mov
retf
and
test
lahf
dec
jmp
adc
cwde
cmp
enter
dec
jns
sbb
ficomp
mov
dec
xchg
loop
das
int3
sub
pop
icebp
adc
jmp
and
dec
das
cmp
cs
or
callw
iret
push
retf
shl
xchg
or
sbb
outs
sti
cs
lock
dec
idiv
ins
mov
jbe
shr
push
cld
xchg
mov
fadd
retf
cmp
ins
sub
(bad)
inc
retf
movs
adc
loope
and
imul
fwait
mov
inc
mov
xchg
mov
add
sti
test
add
lods
inc
test
mov
inc
and
inc
sbb
cmp
imul
cmp
inc
add
lods
in
outs
mov
cmp
jp
out
in
xchg
xor
mov
test
adc
mov
ret
mov
mov
dec
fisub
xor
and
xor
fnstcw
scas
mov
jb
out
fidiv
xor
ins
pop
(bad)
hlt
test
mov
jecxz
lahf
adc
test
daa
std
cmp
pushf
(bad)
sbb
mov
pop
inc
pop
xor
das
lahf
mov
lahf
fnstcw
mov
(bad)
jnp
daa
aam
cld
push
test
mov
xor
sbb
mov
dec
and
mov
stc
xor
leave
mov
(bad)
jp
push
sbb
mov
cmp
ins
mov
inc
cs
pop
lea
and
xchg
test
mov
jle
sub
mov
jp
hlt
ret
xor
sub
(bad)
fcmovu
aaa
xor
arpl
sahf
xor
lea
or
shl
out
lock
cwde
jmp
cmp
stos
push
add
call
dec
out
mov
mov
pop
ret
ss
popa
or
add
cmp
in
dec
inc
dec
mov
push
pop
sbb
aas
xor
mov
sti
xor
enter
pop
cmp
nop
aam
imul
pop
lds
mov
mov
pusha
cdq
cdq
mov
cmp
add
sub
cmp
scas
mov
jb
aaa
lahf
xchg
daa
xor
sbb
xor
mov
movs
fdiv
xor
aaa
jp
adc
or
xor
cmp
repnz
add
jno
xchg
int3
rcr
fist
std
arpl
(bad)
sub
and
int
xchg
movs
loop
add
mov
dec
or
mov
add
cmp
fucomi
rol
in
loopne
ds
inc
push
mov
pop
cli
dec
pop
stos
pop
aas
in
ds
cmp
fdivr
xchg
pop
dec
sbb
sahf
mov
cmc
fcomp
fdivr
pusha
or
xchg
jbe
mov
pop
jmp
mov
pop
bound
inc
pusha
sbb
mov
lods
mov
xchg
aam
aam
sub
jns
in
shr
jnp
fisub
push
int
jnp
mov
movs
inc
inc
call
sbb
ins
xchg
cmp
jmp
call
add
or
dec
pop
shl
adc
enter
mov
mov
mov
sbb
iret
push
sub
(bad)
movnti
adc
rcr
and
cmp
xor
adc
or
fst
and
xor
out
xchg
pusha
sar
loop
sar
fsubr
adc
rol
pop
mov
add
jg
lahf
test
jg
daa
outs
stos
mov
mov
mov
adc
(bad)
in
jge
push
frstor
call
jl
pop
add
mov
adc
cmp
xchg
xchg
lock
int3
push
mov
fwait
mov
sar
or
inc
in
xchg
push
test
mov
jmp
sti
jmp
xlat
mov
shl
aaa
aad
mov
and
sub
mov
lods
mov
pop
dec
adc
push
xor
loop
aad
cmp
je
fwait
ret
fcomp
mov
(bad)
nop
and
lods
cmps
jbe
in
out
jl
retf
adc
cmps
sub
adc
(bad)
into
adc
or
jne
add
retf
xchg
pop
cmp
repz
pop
push
adc
int
out
call
lds
sti
cmp
and
mov
rcr
cmp
xchg
pavgw
or
nop
sub
adc
inc
xor
xchg
mov
mov
call
popa
adc
push
ja
aas
jmp
adc
xor
dec
movs
dec
mov
inc
push
add
inc
xchg
das
mov
push
ds
data16
stos
popa
dec
sbb
dec
dec
mov
shl
movs
push
fdivp
mov
or
cmp
ret
mul
retf
nop
into
dec
add
adc
mov
pushf
mov
mov
fxch
jmp
xchg
mov
fisttp
jl
fmul
and
push
mov
pop
mov
lods
movs
sub
or
rcr
sbb
push
out
hlt
call
sahf
in
cmp
sahf
in
cwde
nop
xor
sub
fdivr
sbb
xchg
add
js
fidiv
xchg
jmp
jo
lahf
jle
imul
adc
ficom
dec
dec
push
mov
aas
ror
(bad)
loopne
mov
pop
xor
xchg
popa
sbb
mov
pop
mov
(bad)
jo
outs
xlat
fadd
dec
into
jbe
xor
inc
mov
lock
ret
shrd
pop
call
dec
rol
shl
xor
pop
or
lds
mov
leave
inc
push
in
or
push
cld
movs
mov
push
mov
pushf
ror
cmc
and
push
retf
in
leave
jp
jae
iret
cli
out
mov
mov
fbld
pop
out
cs
ret
sbb
jns
scas
mov
stos
ins
mov
push
je
pop
or
cmp
dec
inc
sub
mov
push
cs
sbb
adc
sti
xchg
iret
dec
retf
sub
push
aaa
mov
xchg
lahf
fstp
cld
enter
call
in
adc
jcxz
fdiv
fisub
sbb
dec
jne
popf
mov
mov
out
or
ficom
and
(bad)
xor
jne
rol
cmp
and
ficomp
mov
stos
dec
pop
retf
stc
cli
xchg
and
outs
adc
hlt
push
inc
push
pop
adc
dec
cld
loopne
jno
xor
lods
int
mov
ins
scas
in
cmp
enter
mov
call
outs
dec
pop
sbb
std
dec
xchg
scas
sbb
in
pop
jbe
add
lods
outs
jne
inc
test
add
inc
jbe
adc
inc
jbe
add
jl
mov
cmps
cs
dec
mov
inc
(bad)
pop
xchg
mov
mov
mov
aaa
(bad)
fimul
add
retf
scas
lea
scas
sbb
inc
pop
sub
fsubr
jbe
repnz
arpl
cld
cmp
and
sub
xor
ror
rcr
push
add
mov
ins
mov
pop
push
call
mov
stos
cmps
sub
pop
stos
ja
mov
dec
jl
sbb
mov
aaa
mov
fst
add
test
jecxz
int3
adc
push
or
aaa
and
or
push
bound
or
fmul
add
or
push
pop
sahf
pop
movs
enter
cmp
pop
inc
test
test
fwait
iret
lds
test
retf
sub
inc
mov
push
push
stc
or
das
mov
mov
mov
cmp
mov
cmp
mov
or
jp
stos
inc
sbb
sbb
stc
call
cs
adc
loope
adc
dec
bound
xor
cwde
push
adc
or
push
sbb
pop
aas
loope
pop
jb
dec
bound
addr16
int
inc
movzx
js
and
sbb
call
add
nop
sahf
mov
lds
jmp
out
popf
mul
and
mov
dec
sti
call
iret
test
push
retf
mov
repz
cwde
sub
sub
inc
xchg
push
cmp
imul
fsub
inc
push
ins
cmps
jno
xchg
test
std
mov
mov
retf
xchg
mov
je
xor
fidiv
in
js
or
in
into
mov
test
into
rcr
jmp
and
mov
mov
mov
sub
bound
jo
cmp
and
das
repnz
pusha
jbe
stos
fistp
inc
stc
addr16
lahf
adc
dec
jmp
pop
(bad)
fs
js
inc
retf
lahf
push
stos
sub
daa
(bad)
je
mov
arpl
sub
(bad)
lods
or
mov
sub
mov
cmp
jge
mov
mov
jecxz
xchg
pop
adc
xlat
imul
mov
cmp
jp
push
jg
ficomp
sub
pop
jbe
jae
jb
mov
xlat
mov
andnps
adc
fldcw
lea
out
dec
sahf
cmp
fst
in
mov
jl
cmp
movs
or
push
add
adc
fs
mov
and
lods
fild
out
dec
dec
mov
gs
imul
push
mov
sub
mov
mov
jnp
scas
sub
add
jae
adc
sti
daa
(bad)
cdq
sub
pop
jne
mov
dec
pop
int3
jae
(bad)
pop
and
or
aad
das
fnstcw
enter
cmp
and
shl
clc
mov
pop
ret
xchg
repz
xchg
jmp
jmp
std
(bad)
and
cmp
loop
bound
xchg
sbb
cmp
lock
neg
xor
fisubr
loopne
cmp
push
or
adc
dec
mov
lods
call
sub
or
sub
dec
lods
xor
sub
and
mov
out
fstp
(bad)
mov
dec
stc
mov
fcmovu
pop
lahf
pop
cmp
jl
pop
std
sub
push
hlt
js
jmp
and
dec
mov
mov
mov
scas
jne
add
aas
xchg
dec
pusha
loope
dec
push
sbb
add
(bad)
jb
pop
fisttp
(bad)
int3
fsub
sbb
test
pop
jae
push
test
int3
lds
mov
mov
cmps
fisub
xchg
clc
jnp
fnstenv
mov
cmp
jge
dec
push
pop
mov
ss
mov
retf
in
test
gs
lea
sar
xor
jbe
xor
mov
dec
xchg
mov
add
dec
pop
mov
enter
popa
lods
ss
mov
inc
ror
data16
or
jp
sbb
mov
sbb
xchg
sbb
xchg
mov
retf
jg
sbb
in
xor
mov
jmp
stos
repnz
and
push
movs
dec
jecxz
mov
je
dec
cmp
lds
ror
mov
xchg
xor
mov
and
jmp
std
fidivr
pop
or
push
out
fs
xor
push
sbb
pushf
adc
inc
dec
adc
mov
sub
ins
cmc
push
xchg
add
mov
les
dec
dec
xor
adc
mov
inc
nop
mov
jecxz
or
pop
(bad)
or
push
xor
push
movs
jo
xor
pop
inc
outs
btr
outs
adc
sbb
ror
fsub
and
cmp
and
outs
test
mov
mov
mov
sub
outs
xchg
(bad)
arpl
ja
and
mov
push
ficomp
jbe
mov
jno
inc
push
dec
in
push
cld
scas
mov
jo
xchg
or
sbb
dec
xlat
vcvtsd2si
daa
pop
and
cwde
data16
outs
sbb
out
push
rcl
push
shl
cmp
jno
push
je
cld
fsub
sti
mov
push
dec
inc
push
fs
or
stc
in
mov
pop
das
std
pop
sbb
mov
inc
mov
jge
sti
sub
mov
je
rcr
push
test
sbb
leave
aad
popa
jle
pop
nop
cmp
jnp
mov
push
les
jne
adc
retf
inc
mov
xor
call
or
xlat
jecxz
adc
imul
fst
fadd
push
xchg
mov
cld
into
cmp
in
push
js
test
mov
test
clc
test
xchg
sbb
mov
shl
xor
ds
fld
mov
pop
or
cmps
push
mov
push
xor
scas
xor
shl
or
jge
int3
sbb
cdq
imul
mov
or
out
es
jb
mov
and
retf
mov
je
sbb
dec
inc
stos
pop
pop
mov
mov
lahf
push
or
mov
jp
cli
pop
je
(bad)
adc
mov
xlat
test
movs
adc
jmp
push
xchg
jg
adc
pop
xor
jae
mov
xchg
and
int3
cmps
(bad)
mov
inc
shr
adc
push
add
in
fcomp
or
test
add
mov
jp
pop
aas
into
and
mov
xor
push
mov
jmp
daa
sbb
sbb
das
leave
xor
and
add
mov
les
dec
outs
int3
pushf
mov
es
leavew
and
ss
add
xlat
jo
cmove
out
push
add
arpl
jle
cmp
es
clc
sar
aad
das
pop
lods
sar
adc
and
push
inc
jge
cli
or
xor
std
push
idiv
adc
shl
test
inc
add
mov
inc
sbb
ret
and
div
or
push
cmp
jmp
movs
sub
cmp
clc
add
cld
xlat
pop
sub
sbb
sbb
enter
(bad)
jne
std
ja
jecxz
sbb
shr
adc
or
in
jns
mov
jns
loopne
and
call
pop
aas
sub
mov
dec
sbb
xchg
xchg
retf
xor
sub
jmp
(bad)
xor
call
lock
nop
ss
push
sbb
dec
shl
mov
adc
sti
call
movs
movs
movs
lock
test
or
adc
jns
push
mov
xor
jp
fsubr
adc
cmps
cdq
mov
add
shl
mov
adc
and
not
inc
jmp
inc
in
cmp
xchg
idiv
outs
xchg
in
rol
push
cwde
outs
xor
inc
and
jp
shl
lahf
sbb
mov
gs
(bad)
jg
in
movs
mov
call
js
sbb
sbb
fist
dec
cmps
data16
adc
loopne
nop
aad
imul
lods
aam
or
cmp
jb
repz
xchg
and
push
xor
sub
cmp
xchg
je
push
xor
mov
pusha
pushf
xor
js
loop
inc
xchg
clc
pop
jns
cdq
xchg
jno
shr
push
dec
or
fisubr
fstp
dec
or
jne
shr
xor
stc
mov
sub
xchg
enter
js
aam
mov
and
push
sbb
sbb
dec
dec
in
imul
enter
ror
jp
xchg
sti
xor
mov
push
dec
call
dec
(bad)
adc
hlt
pop
pop
out
xchg
loop
inc
icebp
ret
cmp
repz
cdq
shl
sahf
inc
mov
cmp
loope
retf
mov
dec
xlat
(bad)
jg
out
mov
push
(bad)
and
adc
das
aas
loop
xchg
(bad)
inc
xor
jecxz
mov
adc
xlat
rol
popf
stc
adc
or
aas
dec
call
aas
cmp
dec
out
jg
jbe
jno
mov
dec
and
xor
pop
xchg
ret
les
test
inc
push
(bad)
into
fistp
sub
jmp
mov
jecxz
ss
mov
lods
cs
in
ds
mov
xchg
movs
or
hlt
in
xor
dec
ins
sub
pop
inc
jl
cmp
outs
mov
cmp
xchg
push
lea
mov
les
scas
ins
clc
out
xor
xchg
mov
inc
xchg
sar
jmp
ss
xchg
xlat
push
cmp
(bad)
mov
sbb
cdq
adc
cmps
in
pop
in
xchg
fmul
cmp
into
retf
pop
outs
icebp
mov
mov
inc
movs
lods
mov
dec
fsub
repnz
xchg
loope
adc
movs
push
fwait
out
data16
or
mov
pop
xchg
inc
mov
mov
in
(bad)
sub
inc
pop
mov
das
pop
jno
mov
push
inc
or
into
xchg
xchg
shl
inc
ja
inc
pop
mov
aad
xchg
cs
lock
lods
add
cmp
gs
loop
mov
hlt
dec
int3
mov
cmp
cli
out
sbb
repnz
pop
hlt
outs
xchg
rcl
adc
pusha
movs
cli
ss
sbb
ror
pop
into
add
jnp
jo
push
aas
adc
sysexit
(bad)
in
and
das
int3
push
add
fwait
cld
jle
ret
sub
pop
push
sbb
ret
push
pop
mov
jp
call
sar
inc
ds
fucomip
dec
jae
fild
push
adc
adc
lock
leave
xchg
or
test
(bad)
jbe
jbe
dec
xchg
or
les
sahf
and
imul
test
or
(bad)
leave
out
inc
xor
jmp
inc
and
aam
mov
outs
pop
call
rol
jae
cmp
xchg
pushf
jne
jmp
push
mov
int
sbb
ins
jge
clc
mov
pop
push
inc
jl
fsubr
outs
sbb
or
das
mov
outs
mov
ret
or
mov
mov
aad
mov
out
push
cmp
lock
add
pop
pop
jae
mov
paddb
cmp
push
cwde
pop
cwde
add
add
inc
dec
push
arpl
nop
adc
xor
popf
adc
movs
cld
and
sub
cmp
in
xor
cmps
or
mov
mov
or
cmp
adc
push
and
push
aad
call
sub
out
cmp
mov
mov
pusha
xor
xor
ret
adc
daa
das
pop
xchg
pop
sbb
push
and
or
in
mov
cdq
fisttp
das
sbb
dec
sti
rol
std
test
pop
xor
pushf
jnp
sbb
jle
(bad)
lea
(bad)
(bad)
repz
inc
fdiv
jno
(bad)
pop
mov
adc
repnz
(bad)
mov
jg
jne
(bad)
fdivr
cmp
push
mov
cmp
adc
movs
out
rcr
sbb
mov
mov
cli
movs
adc
iret
adc
inc
shl
push
cmp
and
in
xchg
mov
jl
pushf
sub
xchg
adc
addr16
jo
sub
and
ror
cmp
push
retf
xor
jmp
ret
xlat
sar
sub
stos
pop
out
sahf
mov
sbb
xlat
cwde
lahf
mov
sub
aas
sti
or
in
cld
fcom
nop
inc
push
arpl
scas
push
push
pop
mov
ins
ror
fisub
xchg
sub
pushf
outs
sbb
add
ret
add
and
xor
dec
gs
ror
mov
and
(bad)
push
cli
mov
dec
xor
xchg
imul
mov
fidivr
ds
adc
mov
les
mov
shr
mov
jmp
jmp
out
fld
jbe
ins
jb
mov
adc
push
cmp
(bad)
imul
rcr
mov
sti
xor
mov
into
mov
adc
addr16
mov
retf
lock
mov
ror
and
mov
ret
popa
add
movs
imul
cmp
cmps
jmp
or
xlat
test
pop
cli
mov
xchg
pop
jmp
mov
or
jns
and
mov
idiv
sti
push
mov
jnp
xlat
fld
imul
xchg
stc
jmp
xchg
push
sbb
push
loop
cmp
xchg
adc
cli
bound
jnp
xor
inc
xchg
stos
shl
outs
pop
adc
or
arpl
pop
(bad)
hlt
jo
call
adc
cmps
add
test
sti
fnsave
ja
leave
mov
jp
repz
mov
outs
pop
imul
in
stos
rcl
adc
sidtd
push
push
ret
or
out
out
cdq
lds
scas
xchg
mov
sub
cmp
inc
jne
xlat
or
aas
out
sub
mov
fstp
pop
rcl
xchg
std
jnp
hlt
aaa
inc
in
test
inc
pop
pop
stos
(bad)
outs
ror
iret
div
fld
mov
cmp
add
rcr
lea
mov
imul
(bad)
retf
jbe
loopne
dec
and
dec
adc
xchg
pop
pop
cdq
push
sub
sub
stos
mov
or
xchg
jl
(bad)
adc
pop
sbb
jmp
movs
adc
push
jp
shl
fs
jg
daa
sub
xchg
jo
mov
mov
mov
jns
int
mov
fstp
paddusw
or
dec
test
lss
jecxz
test
cmp
pop
or
and
mov
add
popf
inc
push
ja
xor
jae
ins
or
or
mov
dec
mov
movs
xchg
push
js
retf
mov
repz
inc
movs
inc
sti
sub
das
mov
xchg
lock
or
cmp
inc
push
mov
les
into
or
fdivr
lods
add
and
or
bnd
out
jl
retf
jns
pop
push
xchg
test
inc
test
je
mov
popf
dec
add
mov
cmp
call
mov
icebp
mov
adc
push
xor
xchg
dec
push
mov
sbb
push
loopne
ins
test
push
dec
outs
cmps
les
daa
mov
dec
sbb
(bad)
xchg
call
imul
mov
leave
push
fldenv
jb
cmp
mov
sbb
test
inc
cli
in
shl
mov
push
out
test
pop
mov
ins
pushf
mov
push
in
xchg
rcr
sbb
fisub
sbb
out
ss
sbb
shr
(bad)
je
adc
repnz
test
shl
sar
push
and
mov
sbb
les
rcl
stos
jp
imul
pop
jmp
push
sbb
and
xchg
sub
test
lods
dec
lea
movs
stos
add
test
lods
xor
jbe
xchg
lock
(bad)
mov
sahf
mov
bound
out
ds
fcmovb
or
jno
sar
mov
fbstp
(bad)
fs
inc
in
jbe
pop
mov
inc
or
arpl
jb
fcom
push
daa
fdiv
or
mov
je
movs
mov
sti
mov
or
adc
in
xchg
ret
retf
sub
call
cmps
cwde
add
js
out
in
inc
lea
mov
sbb
dec
add
push
mov
ds
push
stos
cdq
call
arpl
aad
xlat
pop
cs
iret
mov
outs
sub
push
xchg
jne
mov
out
fist
idiv
mov
imul
or
dec
mov
mov
call
xchg
jns
or
and
xor
repz
push
xchg
dec
add
or
mov
mov
jmp
sbb
cmps
pusha
fistp
pop
pop
out
jns
xlat
imul
daa
arpl
push
mov
or
mov
xor
jae
mov
inc
dec
xor
sub
pop
popf
jno
xchg
adc
jmp
ins
pop
jecxz
fcom
push
leave
lahf
inc
cmps
fadd
sbb
mov
jo
pop
in
sub
add
movs
stos
sbb
sbb
les
sbb
sti
mov
inc
sbb
cmps
loope
xchg
fmul
test
repz
push
imul
test
xor
inc
dec
gs
cmps
jmp
in
pop
jne
cmp
out
fldcw
or
and
pop
mov
adc
add
inc
int
mov
adc
inc
rcr
pusha
jb
ror
aaa
js
add
mov
mov
fild
pop
or
cmp
add
sub
push
cdq
pop
int
mov
add
mov
into
sbb
push
or
adc
fbld
xlat
sbb
jb
fisttp
adc
cs
jae
sub
scas
jmp
xchg
imul
out
mov
(bad)
(bad)
cwde
jns
mov
cmp
aad
test
jne
push
jle
push
dec
xlat
iret
jnp
or
jo
arpl
jo
out
js
xchg
sub
pop
xchg
inc
xchg
mov
sub
lods
push
inc
xchg
fnstcw
sub
inc
mov
mov
push
or
dec
dec
xor
inc
aaa
pop
lods
mov
mov
(bad)
lock
fisubr
dec
mov
cs
inc
push
call
mov
cld
xor
and
jne
xchg
stos
(bad)
pop
jmp
mov
pop
mov
pop
mov
fidivr
inc
pop
jnp
int3
sbb
ret
cmp
lahf
inc
xchg
xchg
(bad)
dec
mov
dec
fsub
(bad)
push
jg
(bad)
sub
push
stos
fnsave
push
mov
xchg
sbb
mov
push
cmps
and
or
sub
mov
(bad)
mov
push
iret
cli
iret
into
imul
fild
pop
and
lods
aad
movs
adc
test
int3
test
add
mov
xor
stos
fs
xchg
push
in
movs
push
add
jbe
test
dec
pop
jg
mov
sbb
arpl
jbe
xor
out
pop
pusha
ret
fcomp
sbb
sbb
popa
pop
stos
cdq
mov
sbb
push
mov
push
icebp
pop
inc
test
test
fnstcw
xchg
xor
out
push
add
pop
cmp
mov
scas
inc
xchg
adc
xor
push
or
cmp
mov
and
jb
jl
cmp
or
into
imul
push
lock
cld
(bad)
cmp
jp
in
sub
jl
push
or
loopne
pop
rcr
mov
test
mov
(bad)
mov
and
push
dec
or
xchg
mov
xchg
add
into
ds
fcomp
clc
pop
repnz
and
js
inc
ds
popf
pop
mov
add
and
dec
rol
imul
sub
push
jecxz
fistp
sub
(bad)
push
outs
or
jnp
lods
addr16
push
jmp
mov
(bad)
call
xlat
int3
or
and
xor
adc
xchg
xchg
xchg
les
loope
jmp
stos
jg
cmps
adc
std
xchg
bound
test
or
fldcw
jle
jmp
xchg
cs
dec
call
(bad)
pusha
aam
and
push
pop
jb
pop
leave
sbb
sar
adc
adc
sub
inc
rol
popa
ret
cmc
sbb
add
dec
push
cwde
shr
cmp
mov
inc
cmps
add
jp
mov
cmps
xchg
test
pop
cmp
in
pop
imul
(bad)
sub
lock
xchg
aaa
cmc
sub
sbb
mov
push
enter
mov
data16
inc
jp
shr
lahf
add
xor
int
jmp
xchg
mov
add
rcl
sub
dec
aad
fmul
mov
iret
adc
inc
(bad)
rol
shr
mov
add
sbb
mov
nop
retf
jp
sub
push
in
loop
pop
mov
jge
adc
sbb
pop
cmps
sbb
adc
dec
pop
pop
mov
enter
jle
mov
fwait
inc
cmc
xor
jle
mov
sub
(bad)
xrelease
adc
sbb
pop
jg
into
pusha
sbb
out
pushf
dec
sub
lea
xor
loopne
mov
sub
xchg
xor
pop
in
or
and
fild
sub
out
cmp
lock
imul
stos
movs
pop
mov
or
loope
mov
pop
stos
push
lock
push
xor
aam
and
jmp
and
inc
mov
xor
cmp
std
popf
mov
pop
push
inc
xchg
arpl
or
jmp
jo
inc
out
push
cli
test
push
sahf
in
or
das
cli
xlat
dec
std
xor
cmp
inc
addr16
xacquire
mov
int3
cdq
loope
inc
ret
data16
xor
sbb
lahf
fwait
and
(bad)
dec
cmps
add
std
xchg
jmp
mov
dec
data16
xchg
push
in
outs
hlt
mov
jle
(bad)
lods
add
fs
out
out
ror
mov
add
cld
jb
push
push
aas
push
xor
xor
aam
dec
div
cmp
dec
arpl
es
jmp
add
stos
fdivp
adc
dec
jp
sub
mov
popf
sub
cmc
cli
sub
fwait
add
add
in
sub
jecxz
js
pop
lahf
and
inc
stc
int3
int3
fs
mov
pop
iret
cmp
and
xor
add
fld
clc
aaa
inc
scas
mov
test
add
adc
mov
mov
out
stos
push
(bad)
sbb
push
cmps
ret
dec
mov
imul
js
call
(bad)
lock
or
es
mov
call
imul
out
push
or
stc
push
jae
adc
out
sub
push
push
mov
add
jmp
cmp
aas
das
pushf
xchg
retf
(bad)
pusha
sub
ds
test
popa
pop
jns
outs
or
pop
xchg
lahf
dec
adc
bound
cmp
xchg
or
dec
iret
mov
fdivrp
repz
js
dec
pop
jnp
ins
cli
push
push
lea
mov
mov
call
mov
rcl
or
mov
mov
sbb
push
icebp
and
jle
and
or
adc
out
jp
int
fcmove
fisttp
retf
pop
add
fld
aam
jge
cmc
and
scas
enter
jb
stos
arpl
lods
sbb
nop
adc
retf
lods
gs
xchg
rcl
aam
(bad)
out
push
imul
cld
call
adc
inc
mov
fist
pop
out
dec
scas
ins
mov
jge
out
cld
jne
xchg
outs
outs
sbb
inc
call
mov
mov
dec
cmp
pop
out
mov
inc
push
sub
mov
les
xchg
mov
int
lds
ror
dec
call
call
cmp
mov
mov
or
addr16
sbb
sbb
(bad)
mov
mov
gs
sbb
movs
jmp
xchg
or
out
jl
cmps
sbb
jns
stc
adc
adc
es
xlat
test
or
iret
push
and
mov
mov
push
add
cs
sar
fcom
lahf
gs
push
hlt
sar
(bad)
xchg
daa
fld
enter
and
aaa
xchg
adc
sub
aaa
test
sbb
aas
lahf
ror
das
inc
in
repz
dec
cdq
adc
dec
add
je
push
pop
mov
ins
je
mov
fcmovu
mov
iret
stos
adc
outs
xor
test
outs
out
fsubr
(bad)
js
add
adc
fimul
icebp
pop
or
sti
adc
sti
lahf
mov
lds
cmps
aas
mov
dec
push
lea
imul
mov
mov
pop
scas
sbb
xor
shr
enter
mov
inc
mov
mov
out
or
rol
inc
add
jmp
cmp
sbb
retf
scas
sub
and
loop
xlat
mov
dec
mov
idiv
mov
js
adc
mov
push
sub
hlt
dec
ret
inc
int
fld
inc
jmp
mov
out
mov
ins
test
les
pop
mov
pop
xor
imul
cwde
sub
lds
pop
(bad)
mov
pop
cmp
lahf
xchg
aam
mov
aas
retf
lods
jp
mov
dec
and
mov
sbb
mov
(bad)
push
jecxz
loop
xchg
pop
sub
inc
mov
push
rol
bound
imul
lahf
cmp
(bad)
in
out
or
cli
bound
and
push
movs
iret
call
iret
pushf
jno
jnp
bound
(bad)
aam
jmp
xchg
cld
in
inc
shr
cmp
mov
mov
sbb
push
hlt
lods
jne
and
dec
xchg
or
jecxz
daa
push
jo
xchg
xchg
mov
inc
and
jg
fs
ss
ror
test
push
pop
daa
loopne
jnp
xor
pushf
xchg
aas
rcr
adc
inc
push
jne
(bad)
lock
push
dec
xchg
nop
xchg
cmp
adc
jno
pop
cmc
mov
xchg
pop
xlat
int
test
sti
add
or
and
jae
test
das
lods
cs
(bad)
sub
jle
cs
add
jae
fs
xlat
cmps
jecxz
out
dec
mov
out
addr16
stos
adc
xor
dec
fstp
loope
bt
test
xor
and
sbb
inc
adc
pop
lahf
dec
pop
push
jbe
mov
in
mov
cmp
inc
shl
hlt
jbe
aaa
in
rcr
xchg
adc
sub
mov
nop
adc
cmp
mov
xor
pop
adc
sub
jmp
dec
push
pop
jno
adc
jae
add
jns
mov
xchg
fnstsw
adc
outs
and
retf
(bad)
fwait
mov
ret
movs
or
lock
mov
in
pop
cmps
gs
and
or
push
ret
stc
stos
adc
fsubr
out
leave
jne
scas
sub
test
jmp
push
(bad)
cs
paddsw
inc
sbb
push
sbb
mov
mov
pop
push
(bad)
outs
daa
int
push
add
mov
repz
es
gs
dec
lods
out
jnp
cs
mov
rol
mov
cwde
jge
xor
fwait
cmps
loope
nop
div
adc
div
pop
dec
ins
lahf
mov
dec
inc
std
xchg
std
aam
stc
retf
xor
scas
inc
adc
push
dec
div
(bad)
retf
sbb
mov
sbb
adc
inc
fimul
pop
(bad)
xchg
xchg
xlat
jo
xor
push
rol
push
into
xchg
adc
loope
ret
pop
fsub
jle
aaa
mov
or
loope
jmp
(bad)
fmul
ss
push
xchg
inc
push
xor
popa
add
or
push
or
pop
mov
and
xchg
pmulhw
rcr
mov
stos
xchg
or
dec
pop
frstor
pop
icebp
das
inc
xor
sub
adc
movs
cmps
xor
call
hlt
jno
mov
add
or
fdiv
add
pop
cmp
and
in
mov
loope
into
test
and
dec
test
movs
push
adc
adc
inc
mov
(bad)
dec
out
mov
jmp
rol
jp
dec
outs
cmp
adc
add
(bad)
stos
retf
and
jbe
push
push
pop
xchg
push
mov
mov
xor
movs
mov
pop
ds
push
inc
mov
jle
in
add
cld
mov
mov
xor
cmps
inc
add
ins
lar
stc
sahf
sti
xchg
shr
and
jle
lahf
adc
sub
cmps
(bad)
sbb
push
cmp
sahf
daa
xor
and
(bad)
cmp
xchg
int3
fdiv
or
adc
ret
cwde
inc
push
(bad)
jns
xor
data16
ret
ds
pop
das
cmp
jns
ja
shl
mov
arpl
data16
lock
out
jg
sub
imul
inc
adc
push
ret
cmp
rcl
ret
aam
pusha
int
ins
dec
clc
ds
in
sub
repz
cwde
mov
sub
or
outs
aam
ins
sub
addr16
(bad)
add
cmp
xchg
mov
xor
fcom
ja
cli
xchg
or
dec
arpl
mov
adc
and
mov
ret
shr
xchg
(bad)
into
inc
pushf
push
aas
inc
cmp
in
sub
sbb
sub
inc
(bad)
cdq
inc
sbb
gs
jecxz
mov
xlat
sbb
jle
cmps
push
rcr
(bad)
dec
test
inc
pop
popf
cmp
dec
es
or
sub
(bad)
add
and
cwde
es
jno
loope
mov
movs
mov
bound
pop
(bad)
jmp
popa
mov
(bad)
dec
xchg
pop
mov
cmp
jae
int
sbb
or
aam
in
iret
adc
call
(bad)
mov
mov
cmp
icebp
cwde
pop
call
mov
xchg
xchg
inc
and
mov
sti
fsub
push
jne
rcr
mov
ret
push
(bad)
pop
jl
or
(bad)
push
sub
pushf
adc
adc
inc
ror
inc
test
mov
inc
gs
rol
gs
cmc
xchg
push
sbb
push
repnz
call
es
(bad)
clc
retf
pop
dec
sar
jnp
cs
call
xchg
xor
fistp
or
(bad)
dec
retf
dec
mov
addr16
imul
leave
mov
jne
xor
pop
and
addr16
mov
sar
inc
sar
and
sbb
test
and
adc
lea
cwde
inc
imul
stos
lods
jb
std
and
xchg
xchg
imul
repnz
retf
mov
dec
cld
addr16
xor
loope
add
xlat
daa
retf
dec
mov
mov
jne
pusha
adc
jns
aad
cmp
and
repz
lock
lea
jne
stos
cli
cmp
and
dec
xchg
and
call
cmp
fisubr
xchg
adc
je
loopne
fwait
lods
sbb
mov
sub
das
clc
jb
fsubr
test
inc
outs
push
or
test
aas
pop
mov
dec
mov
push
sar
ja
iret
add
push
jb
pop
xchg
mov
hlt
cmp
or
sub
and
int3
cmp
adc
test
cwde
fs
adc
rcr
cmp
inc
(bad)
test
xor
sub
xchg
leave
out
mov
jp
mov
add
sti
jmp
in
pop
out
inc
icebp
mov
mov
mov
add
xor
xchg
push
pop
call
or
out
aad
nop
dec
stos
cld
stos
jns
dec
add
pop
xor
and
and
sbb
retf
into
mov
jl
shl
push
rcl
aam
xor
xchg
addr16
adc
shl
pop
cmp
push
push
inc
pop
mov
xchg
and
(bad)
sar
pop
vpdpbusds
out
(bad)
adc
loope
mov
mov
and
mov
mov
mov
clc
mov
jl
ret
pop
fwait
pusha
jp
inc
arpl
cmp
dec
lahf
fdiv
pushf
inc
cmps
and
xor
jg
loope
xlat
aas
in
paddb
and
cmps
aad
in
in
call
push
daa
add
sub
sub
mov
aaa
mov
or
icebp
js
push
fdiv
test
add
ja
les
js
jp
mov
and
fs
dec
sbb
dec
mov
in
pop
inc
stc
hlt
cwde
jle
add
adc
mov
mul
sbb
adc
cld
outs
or
add
ret
sahf
lock
mov
test
add
dec
into
inc
sbb
out
cdq
mov
int
call
lea
outs
imul
mul
adc
div
cmps
sub
xchg
pop
scas
iret
xchg
cmp
and
fcomp
dec
xor
ds
xor
jbe
mov
mov
mov
cmp
mov
and
push
(bad)
in
stos
test
outs
dec
mov
std
stc
inc
pop
(bad)
push
dec
add
popa
bound
add
test
push
inc
int3
ins
mov
dec
mov
adc
sub
cs
sub
jl
iret
push
and
jp
rcl
(bad)
xor
jne
add
int
stos
sub
mov
rcl
(bad)
jne
jge
adc
sub
scas
retf
fmul
pop
xchg
cmp
in
jbe
mov
add
push
nop
cmp
in
push
dec
lea
jp
(bad)
cld
sub
out
popf
arpl
cmc
(bad)
cli
ins
retf
lock
mov
fs
sub
adc
sub
test
mov
and
lahf
sbb
cmp
gs
xchg
sub
mov
cmp
dec
test
retf
stc
sub
mov
sub
shl
add
xchg
mov
inc
cmp
ins
cmp
enter
movs
push
push
addr16
and
aam
sub
leave
stos
mov
xchg
push
mov
xchg
sahf
iret
mov
hlt
pop
xchg
mov
mov
pop
dec
imul
xchg
mov
outs
(bad)
jno
add
pusha
(bad)
push
pop
imul
rep
jo
cli
mov
inc
inc
adc
out
aas
add
mov
sbb
outs
sahf
mov
out
movs
cmps
stos
aaa
pop
mov
popf
dec
lods
movs
inc
lods
and
in
enter
lds
push
xchg
stc
jp
jbe
mov
(bad)
adc
in
jge
stc
dec
ret
hlt
or
or
call
outs
inc
push
add
push
loopne
sbb
add
mov
sahf
xchg
add
inc
aad
xchg
adc
std
pop
cs
pop
scas
xor
push
sub
fild
aam
xchg
enter
repz
in
pop
add
stos
push
(bad)
add
aam
(bad)
out
fistp
mov
cmp
scas
inc
lahf
ret
jno
(bad)
icebp
inc
in
sti
rcl
cmp
sbb
fst
ret
xor
mov
pusha
jecxz
jo
enter
in
mov
in
lods
mov
imul
stos
xor
out
mov
cwde
inc
sbb
ds
sti
inc
nop
loop
arpl
cmp
mul
or
pusha
dec
xor
push
mov
shl
add
test
dec
mov
and
mov
cmp
mov
shl
dec
add
and
jbe
js
aam
adc
add
sbb
ins
mov
ins
mov
adc
add
xchg
int
out
je
adc
movhps
mov
xlat
and
lods
(bad)
sbb
loopne
inc
cmp
cdq
enter
pop
push
(bad)
lds
and
adc
push
push
mov
mov
push
jle
jmp
xchg
and
or
test
call
daa
test
mov
dec
in
xor
nop
out
mov
jecxz
lods
jle
pop
hlt
add
iret
xchg
cmp
cmp
stc
sub
add
jno
rcl
sub
test
in
sub
and
lea
cwde
sahf
mov
or
cwde
pop
and
jecxz
shl
lods
xchg
jp
rol
cmp
and
sbb
shr
push
sar
sahf
mov
dec
pop
inc
mov
loopne
es
js
and
mov
loope
jae
dec
ret
stos
ss
cmps
dec
xor
cmp
movs
mov
test
retf
repz
sub
jns
clc
xor
rcr
daa
idiv
mov
xor
daa
pusha
aad
nop
fwait
mov
dec
rcl
ja
push
test
aad
and
xchg
push
inc
and
inc
mov
push
xor
(bad)
dec
pop
adc
clc
inc
lods
test
mov
ret
jmp
imul
dec
mov
or
adc
ja
repnz
push
neg
outs
pop
jns
sbb
cld
test
cdq
inc
outs
push
lods
out
mov
and
and
or
mov
mov
jmp
retf
loopne
(bad)
xchg
stos
inc
scas
nop
ret
repz
mov
in
adc
dec
or
adc
and
push
loopne
adc
cld
dec
xor
sti
in
pop
and
mov
fcomp
call
sbb
and
cmp
mov
or
jle
ss
inc
adc
outs
cmp
clc
daa
ss
xorps
jle
add
pushf
(bad)
sbb
xor
rcr
xchg
add
push
pop
(bad)
push
daa
loope
add
das
jb
int3
xchg
in
ins
sub
and
or
mov
repz
mov
push
push
push
push
mov
in
push
cdq
ror
xor
pop
popf
outs
aas
dec
shl
call
das
test
inc
xchg
or
test
pop
pusha
mov
cmp
call
loopne
aas
repnz
dec
jno
repnz
sub
mov
mov
fidivr
cmp
xor
ret
ds
jbe
mov
xor
(bad)
pop
sub
(bad)
and
sub
ins
js
rcr
ja
test
out
mov
push
retf
pushf
out
sbb
in
add
sbb
(bad)
or
aad
sub
out
pop
inc
mov
jnp
fcmove
jno
lock
(bad)
xchg
cmp
adc
jg
inc
jo
(bad)
out
in
sar
xlat
jmp
mov
test
and
xchg
push
aam
xlat
fcom
stos
push
pop
call
out
cmp
mov
sub
gs
xchg
pop
retf
dec
xchg
xor
push
imul
or
jmp
in
lock
mov
call
test
jp
mov
imul
mov
arpl
out
test
and
jmp
inc
loope
pop
pusha
jmp
cmp
sbb
mov
inc
mov
in
sbb
test
mov
dec
cmp
add
int
xor
rol
push
movs
lods
add
cmp
popa
test
fst
jl
or
cmps
jo
and
xchg
dec
jne
and
jge
xor
pop
out
test
test
sub
add
mov
inc
sub
sub
les
dec
loopne
xor
jns
xacquire
repnz
idiv
in
inc
fs
sbb
movs
lock
xor
xchg
inc
xchg
(bad)
popa
aaa
mov
cmp
mov
jg
int
add
es
lds
and
pusha
leave
and
mov
lds
inc
enter
or
add
(bad)
sub
add
inc
jmp
mov
enter
mov
jl
es
arpl
inc
mov
mov
pusha
loop
sbb
xor
dec
sub
jg
push
and
int3
or
xchg
ins
push
test
(bad)
cli
jge
cmp
and
cs
cmp
pop
or
lea
or
(bad)
cmp
xor
jmp
cli
out
out
cld
das
shl
dec
(bad)
imul
cmc
jno
mov
fsubr
in
sub
sub
clc
inc
cmp
push
cmp
es
aas
mov
sbb
push
sub
cdq
jp
dec
and
mov
push
imul
scas
cmps
mov
push
loop
sub
xchg
mov
xchg
or
leave
jmp
inc
icebp
pop
jae
test
cmps
(bad)
or
inc
inc
ds
ja
mov
sbb
ins
(bad)
in
sub
pop
xchg
stos
push
mov
push
mov
sbb
jmp
pop
sub
(bad)
mov
push
xchg
ud2
enter
nop
(bad)
icebp
add
dec
dec
sub
stc
gs
scas
jmp
js
cmp
outs
xchg
test
sbb
xor
repz
cli
add
jle
in
xor
scas
iret
int
loope
in
sub
dec
adc
fisubr
jge
ror
push
lods
js
rol
pop
xlat
mov
inc
sub
cdq
inc
inc
push
pop
movs
mov
and
jnp
repz
je
add
and
xchg
movs
jnp
icebp
fcomp
fwait
cli
push
loopne
popa
loope
aam
int
xor
xchg
push
inc
stos
push
in
add
lods
loop
xor
jmp
xchg
mov
add
mov
addr16
or
je
mov
iret
mov
lods
(bad)
cmp
push
ds
inc
jb
xchg
push
jg
mov
xor
mov
inc
cmp
xchg
cmp
popa
jb
cmp
adc
mov
mov
imul
aam
jbe
arpl
xchg
adc
push
jno
jecxz
mov
test
aas
push
xor
loope
jb
dec
pop
repnz
sar
lods
jg
mov
setnp
in
sub
cmp
push
add
gs
push
cmp
loope
daa
fsubr
sub
sbb
ja
retf
add
(bad)
mov
inc
mov
movs
mov
dec
aam
das
push
je
pop
jne
fwait
mov
xchg
pop
fld
aaa
mov
jmp
fwait
icebp
sub
jmp
sub
loop
addr16
inc
pusha
inc
push
int3
enter
sahf
addr16
loopne
push
or
aas
mov
xlat
test
cmc
rcr
cdq
pushf
pop
jecxz
jne
push
jno
jmp
scas
or
mov
push
add
sahf
imul
test
mov
jb
lahf
mov
dec
mov
xor
inc
and
add
mov
(bad)
mov
stos
(bad)
pop
out
push
lock
scas
adc
fwait
dec
pop
pop
int
cmp
je
ins
test
mov
pop
stc
(bad)
in
lea
push
cdq
jmp
sub
sbb
fld
rcl
dec
jp
adc
xchg
ret
xchg
jmp
inc
pushf
xchg
lods
cs
mov
dec
xchg
dec
add
cld
add
(bad)
ds
mov
mov
in
pop
test
or
(bad)
mov
xchg
or
(bad)
pushf
xchg
mov
push
pop
mov
stos
xlat
jp
icebp
adc
dec
mov
fsub
in
add
(bad)
out
icebp
lock
mov
pop
inc
sbb
push
mov
outs
in
imul
or
fidivr
pop
xor
sbb
loope
mov
mov
cmp
iret
sti
das
popf
mov
lfs
scas
and
mov
sub
adc
xchg
outs
rcl
adc
jo
jmp
cmp
test
aaa
into
push
(bad)
ss
scas
test
cmp
sti
or
pop
and
sub
pop
sub
sbb
cmp
shl
fnstenv
jge
(bad)
adc
adc
enter
pop
pop
jbe
mov
add
add
pop
and
fwait
lock
sub
or
stos
sub
adc
retf
and
dec
xchg
cmp
lods
nop
mov
mov
popf
xchg
sub
mov
adc
push
cmps
into
rcr
mov
mov
xor
adc
xchg
inc
xchg
js
jne
push
inc
adc
neg
xchg
push
cmp
push
mov
(bad)
and
iret
cld
adc
aam
pop
xor
mov
popa
sar
dec
inc
sbb
jg
imul
xchg
or
leave
je
sar
rcl
jne
sar
stos
lods
mov
retf
ret
das
pop
mov
mov
mov
push
mov
ret
jb
popa
imul
daa
mov
pop
rcr
js
repnz
outs
mov
stc
pusha
shl
out
dec
ret
sbb
sbb
inc
jmp
inc
ds
ja
pop
loope
pushf
fcom
fcom
inc
inc
ficomp
imul
pusha
js
inc
das
out
pop
cmps
test
fisub
sub
mov
jnp
aad
and
pop
pop
adc
jmp
mov
jg
loopne
fmul
aaa
(bad)
(bad)
outs
std
jle
ins
lods
(bad)
xor
push
daa
push
aad
jmp
mov
movs
adc
cmp
neg
cmp
jmp
test
ins
movs
mov
mov
sub
push
inc
movs
xchg
popf
push
sub
stos
and
jne
(bad)
outs
sub
inc
sbb
mov
mov
rol
inc
hlt
mov
xchg
enter
stos
retf
sub
cmc
sub
movs
mov
movs
xchg
js
ins
push
loop
out
scas
jl
imul
sub
bound
inc
ss
aaa
cld
push
fbstp
xchg
sar
ds
mov
aam
or
ficom
shr
shl
sbb
fldl2t
lahf
or
inc
repnz
lahf
fdiv
xchg
mov
bt
add
imul
add
sbb
push
jb
sbb
adc
mul
jg
movs
xchg
sub
call
xor
fldcw
mov
popa
fidiv
shl
cmps
mov
scas
dec
sahf
(bad)
xchg
jbe
xchg
movs
and
aad
dec
ficomp
aam
inc
sbb
and
mov
inc
lods
aaa
ins
ins
adc
adc
pop
xchg
jae
mov
mov
icebp
pusha
lds
xor
inc
ret
call
push
jp
cwde
out
stos
and
int3
shl
mov
mov
xchg
push
push
jecxz
cli
add
push
cdq
je
jge
add
push
push
into
es
cmps
retf
les
enter
ins
jae
in
xor
pop
(bad)
jecxz
push
pop
dec
retf
loope
stos
lahf
out
ror
shr
jb
cmps
imul
daa
pop
popa
jp
push
and
sbb
neg
sub
pop
add
(bad)
xor
je
jecxz
cmp
dec
sub
inc
sub
jg
sbb
adc
pop
xor
push
sub
or
pusha
ja
xchg
xor
shl
cmp
and
push
clc
xor
pop
dec
aaa
imul
push
cwde
adc
jl
ret
sbb
pushf
or
movs
cmp
pop
icebp
imul
enter
xchg
(bad)
into
xor
test
sbb
mov
ficomp
adc
xchg
jns
dec
xor
adc
repz
je
gs
(bad)
cmps
add
fs
out
loope
loop
leave
jg
jno
imul
ja
mov
mov
mov
push
sub
cmp
sub
and
mov
sahf
hlt
adc
repz
pop
cmp
icebp
jp
fmul
ins
ror
lahf
sub
push
fdivrp
mov
xor
push
outs
jno
mov
push
push
dec
and
je
fisttp
shr
sti
add
and
xchg
sar
(bad)
fstp
test
es
in
pop
inc
popf
fist
div
jmp
sbb
mov
ja
in
mov
ja
bound
sub
fadd
call
test
xlat
lock
jns
shl
lea
jle
mov
jnp
dec
fidiv
pop
mov
test
add
cmp
inc
mov
push
scas
repz
cdq
push
retf
js
ret
inc
pop
lds
fld
and
and
push
loopne
and
adc
sub
or
sub
jge
mov
fwait
ja
adc
daa
icebp
cmp
(bad)
push
aad
mov
and
add
fmul
fcom
and
inc
rcl
add
inc
dec
xor
cmps
cmp
inc
sahf
repz
enter
push
inc
lds
(bad)
(bad)
sti
popa
scas
adc
shl
pop
xchg
jnp
add
jbe
mov
ss
cld
fs
jecxz
iret
adc
sti
out
(bad)
xchg
cmp
daa
into
cld
pop
out
daa
ins
xchg
jmp
mov
jae
xor
stos
pusha
push
or
inc
mov
pop
xor
mov
push
aad
mov
push
jmp
enter
adc
push
cli
mov
in
mov
sbb
mov
push
das
loopne
leave
xchg
hlt
xor
fs
xor
in
sbb
cmp
fsub
jecxz
xchg
sahf
(bad)
test
add
ins
out
jmp
adc
int
xchg
fist
or
pushf
enter
(bad)
or
and
not
and
loopne
jbe
in
push
and
dec
mov
jo
fwait
leave
or
sar
cld
icebp
fxtract
fld
outs
fild
aad
lahf
push
movd
out
jle
and
jb
cmp
mov
jnp
(bad)
lock
popf
or
mov
gs
dec
sub
mov
xchg
not
call
mov
out
add
jnp
pop
jb
out
sub
daa
jge
ror
clc
or
dec
mov
clc
out
call
jb
mov
(bad)
mov
(bad)
das
iret
cmp
pop
dec
icebp
jnp
int3
or
cmp
mov
in
mov
adc
cmps
adc
jle
push
test
dec
sub
retf
je
in
xor
pop
les
repz
push
push
mov
push
nop
(bad)
fst
xchg
sbb
lea
fs
push
scas
loope
mov
das
repz
stos
leave
mov
into
inc
(bad)
push
or
ds
cmp
mov
mov
jmp
dec
mov
or
movs
movs
sbb
cmp
inc
mov
adc
sti
pop
or
mov
movs
aas
aad
iret
cmp
mov
lods
xor
mov
ret
sub
cli
mov
dec
scas
test
(bad)
cmp
inc
inc
movs
sbb
add
nop
pop
das
jg
cmps
pop
js
jecxz
mov
mov
cmp
pop
sub
mov
stc
loope
dec
lea
adc
jbe
xor
popa
(bad)
push
sbb
cmp
xor
adc
or
cmp
(bad)
mov
ins
enter
jg
ret
in
ins
retf
aaa
adc
int
or
cld
cli
and
xchg
imul
cmp
aas
clc
cmp
mov
ds
cmps
sbb
ds
push
shl
jne
xchg
aaa
std
call
cmp
cmp
mov
int
or
xchg
mov
jmp
mov
sbb
cmps
les
fcomp
aam
and
pop
call
mov
aad
sbb
pop
mov
shl
in
inc
popf
aam
push
jo
out
dec
stc
dec
out
test
and
jp
mov
inc
jne
into
cmp
add
(bad)
push
pop
clc
cmp
push
loope
rcr
out
dec
push
fist
and
rol
iret
(bad)
inc
inc
pop
mov
push
add
dec
push
mov
pop
sub
retf
xor
scas
inc
adc
ja
test
ss
inc
xchg
sti
mov
nop
call
and
sbb
aas
call
clc
jle
inc
shl
lock
out
jecxz
lock
rol
inc
in
dec
iret
mov
int3
int
push
cmp
jge
dec
imul
(bad)
sar
out
rcl
jno
xchg
loop
push
xchg
push
outs
out
mov
jno
out
addr16
sti
xchg
aas
or
stc
jne
and
push
jnp
sub
(bad)
or
cmp
repnz
mov
sub
test
retf
cmp
loope
aaa
push
into
sahf
push
mov
iret
retf
outs
fcomp
aad
xchg
in
dec
push
sahf
fiadd
mov
call
mov
iret
fidiv
cs
add
sbb
lock
or
cmp
cmp
mov
cmp
or
push
ja
sub
xor
mov
xor
xor
out
push
out
jae
jno
imul
inc
rol
jecxz
shr
shr
cmp
mov
mov
in
add
addr16
ds
adc
mov
das
fcomi
xchg
cld
xor
or
xchg
or
xchg
jmp
cwde
pop
aad
sub
in
add
rcl
leave
lods
je
lock
jge
shl
int3
jne
(bad)
mov
popf
cmpps
daa
mov
aam
lea
std
or
mov
pop
add
movd
hlt
shl
and
icebp
shr
jle
lods
mov
and
lahf
es
jle
idiv
(bad)
xchg
mov
xchg
ins
fsubr
cmp
mov
mov
dec
push
loop
add
outs
push
mov
mov
sbb
lock
adc
into
fimul
jbe
xchg
push
push
push
xor
ret
imul
ja
mov
pop
dec
jp
hlt
mov
outs
adc
leave
inc
dec
mov
sahf
(bad)
mov
aas
sub
out
in
aaa
repnz
and
dec
icebp
lods
cmp
aaa
test
add
pusha
or
adc
call
hlt
(bad)
loopne
mov
ja
(bad)
mov
pushf
call
jb
add
inc
mov
lds
cmp
push
mov
and
ficomp
jl
fdiv
loopne
ror
sti
xor
call
(bad)
dec
add
mov
cdq
call
mov
sbb
inc
add
retf
dec
stc
frndint
(bad)
(bad)
pusha
rcl
adc
aas
xor
cs
xor
add
push
jno
push
sub
xchg
ror
jg
mov
dec
inc
fld
(bad)
out
sahf
xor
std
inc
cmc
cmp
xor
das
push
sbb
push
push
push
and
xlat
mov
cmps
cmp
sbb
lods
cwde
mov
iret
mov
nop
fimul
dec
cld
dec
pop
sub
pop
mov
xchg
push
xchg
add
test
sar
int3
push
and
mov
movs
and
push
fimul
jbe
xchg
fcmove
mov
clc
std
dec
pop
or
add
xor
shl
cmp
cmp
xor
pop
xchg
(bad)
fnstcw
ja
add
and
or
ret
fcomip
cmp
mov
xor
cwde
mov
mov
sub
addr16
scas
and
push
(bad)
in
popa
and
pop
cmp
popf
dec
ds
cmp
out
js
fdiv
cld
sbb
dec
into
out
in
sbb
cmp
xchg
stos
loope
fiadd
adc
cmp
inc
xchg
lahf
sbb
arpl
or
mov
xchg
in
push
repnz
int3
shr
cmp
adc
mov
in
cmp
ret
cdq
sub
call
cmps
popa
xlat
pop
fisubr
es
hlt
jb
adc
jo
bound
in
test
ucomiss
mov
jmp
jp
int
setp
and
add
rcr
inc
cld
mov
push
mov
xor
imul
movs
pop
add
mov
and
jo
or
xor
lods
das
ret
mov
fistp
inc
clc
adc
dec
or
int
mov
loope
in
jns
inc
(bad)
pop
xchg
(bad)
scas
xchg
push
popf
dec
pop
fbld
aad
(bad)
add
inc
outs
pop
inc
cmp
mov
sti
rol
inc
mul
add
es
(bad)
lods
imul
loope
dec
pop
dec
call
mov
jp
fisubr
in
push
mov
mov
ret
fsub
es
add
push
movs
mov
cld
add
ret
arpl
mov
cs
jb
pop
sbb
mov
mov
lods
in
(bad)
sti
push
xchg
mov
sub
and
fst
push
rol
lods
and
inc
scas
xor
gs
shl
pusha
bound
pop
cmps
and
cs
mov
jle
ins
sbb
adc
dec
dec
jbe
clc
dec
cdq
jmp
scas
ds
and
xor
and
ret
int
jae
inc
fcom
(bad)
pop
aaa
cmp
push
retf
jbe
(bad)
fs
call
les
in
out
(bad)
cmc
out
loop
mov
and
push
popf
or
pop
imul
retf
sub
scas
lahf
jge
(bad)
and
mov
nop
in
adc
rol
push
(bad)
in
and
xchg
fistp
sub
cmp
fabs
push
(bad)
repz
mov
jmp
cdq
bound
jb
mov
and
lds
or
cmps
cmps
inc
mov
enter
sub
or
add
leave
lds
aad
mov
hlt
xor
retf
push
cmps
sti
retf
test
movs
popf
push
inc
cli
in
mov
mov
js
(bad)
xor
adc
cmp
call
arpl
fs
pop
(bad)
jbe
dec
mov
jnp
jbe
dec
je
movs
pop
mov
jne
mov
pusha
push
push
ins
cmp
iret
sub
sbb
retf
std
mov
test
daa
stos
pop
je
sub
jg
dec
es
sbb
jecxz
retf
pop
int3
add
jno
push
or
nop
cld
(bad)
ins
mov
loop
and
cdq
sub
into
mov
cmc
in
imul
dec
movs
dec
leave
mov
loopne
inc
xor
lea
scas
xor
fadd
add
cld
sub
lods
ja
cmp
in
imul
aas
popf
sub
dec
addr16
mov
out
push
xchg
jp
rcl
movs
rol
pushf
sbb
inc
or
push
out
push
or
xor
lds
aas
cld
cmp
call
xor
imul
int3
xchg
js
push
add
inc
repnz
aaa
sbb
add
pushf
adc
sbb
scas
mov
bound
dec
push
jge
int
xchg
push
icebp
loopne
fprem1
and
cmc
retf
pop
stos
mov
mov
xor
fcmovne
jnp
fist
adc
or
addr16
scas
add
xchg
lods
das
push
inc
adc
xor
fild
pusha
(bad)
jle
cmp
(bad)
ficomp
dec
sub
jo
mov
mov
xchg
cmp
je
ja
repnz
jl
ss
push
frstor
sbb
sub
inc
and
loopne
in
call
fnsave
and
fisubr
xchg
pop
adc
mov
xchg
xchg
or
mov
jmp
sub
ror
jno
scas
cmps
cmps
cmp
mov
pop
or
call
addr16
popf
pushf
and
(bad)
retf
sub
pop
(bad)
xchg
aad
push
add
imul
lods
pop
in
or
sbb
sbb
loopne
jo
mov
inc
gs
and
idiv
stos
scas
sub
mov
mov
loope
add
push
retf
push
hlt
and
jb
pop
sub
in
test
rcr
mov
stos
xchg
xor
ins
and
dec
pop
or
xor
lea
add
pop
push
xor
and
enter
mov
dec
push
outs
mov
add
ror
inc
adc
ja
pop
sub
mov
adc
push
sbb
xor
and
push
fcom
js
test
fild
(bad)
and
lods
adc
sub
sub
push
add
pop
mov
and
pop
push
hlt
shl
jp
xor
retf
mov
dec
jp
stc
pushf
sbb
cmp
cmp
sbb
ja
sbb
push
out
adc
push
lea
cmp
add
(bad)
or
test
addr16
loope
shr
or
sub
in
fidivr
sti
stos
pop
dec
cld
loopne
dec
scas
in
mov
push
inc
ret
xchg
xor
xchg
movs
push
cmp
sub
sbb
jo
push
retf
repnz
out
shl
loope
cwde
cmpps
sub
test
add
push
mov
cwde
mov
stos
mov
mov
jge
add
push
and
dec
das
fild
or
adc
and
cmp
inc
test
mov
retf
mov
ret
ds
sahf
loopne
or
fwait
jmp
ja
mov
add
xor
sahf
iret
stos
ror
sahf
sbb
cmp
and
xlat
pop
xor
cld
mov
add
inc
movs
and
pop
lods
ins
add
je
mov
push
jae
outs
lock
mov
jne
push
sub
adc
mov
inc
jo
and
inc
(bad)
icebp
rcl
xor
(bad)
imul
not
cmp
ja
int
sbb
daa
fs
add
jo
push
pop
(bad)
cmp
rcl
fwait
sbb
outs
push
icebp
es
dec
lock
xchg
stc
or
push
pop
movsx
mov
push
(bad)
sar
lock
push
imul
mov
out
push
ror
xor
daa
and
(bad)
phaddd
mov
dec
iret
fs
lods
xchg
jmp
sbb
sar
sbb
xchg
jp
shl
push
mov
adc
(bad)
xor
mov
and
in
enter
xor
xchg
xchg
sbb
mov
cmp
cmp
or
and
cmps
rcl
or
dec
cmp
sti
sbb
sub
daa
jns
adc
cmps
es
xchg
jecxz
test
bound
push
mov
out
cmps
dec
mov
sub
jge
or
(bad)
icebp
push
or
mov
lea
and
sub
(bad)
aad
test
mov
shl
mov
xchg
add
mov
adc
pop
jmp
mov
push
push
add
push
dec
xchg
inc
mov
adc
cwde
rcl
add
and
pop
mov
daa
outs
xchg
push
popf
loopne
aam
xor
jmp
ja
out
adc
test
sti
test
pop
add
loopne
mov
popa
das
ja
xchg
or
xor
inc
inc
xchg
fld
add
in
sub
mov
sub
arpl
mov
lahf
or
pop
cmp
push
or
sub
in
sbb
inc
repz
std
stc
or
xchg
(bad)
mov
shr
int
fadd
fbld
fcom
shl
sbb
movs
dec
jbe
fwait
jmp
in
xchg
xchg
not
sbb
js
div
xor
cmp
(bad)
lods
adc
add
sbb
test
shl
lods
cmps
out
dec
out
lea
or
popa
add
cs
sti
stos
mov
(bad)
aad
cmp
cmp
sub
retf
imul
popf
sub
jge
movs
or
inc
jae
cmp
inc
cmps
daa
mov
xchg
jb
pop
xchg
mov
jmp
clc
sub
push
into
out
test
outs
ret
mov
icebp
int3
movs
stos
sub
fs
gs
or
dec
aad
pop
xchg
or
ins
inc
adc
movs
shl
cmps
(bad)
push
jnp
cmps
xchg
ret
cwde
loopne
xchg
jae
(bad)
popa
loopne
cmp
jge
sti
int3
inc
jnp
(bad)
icebp
xor
stos
retf
sahf
test
and
into
out
sub
mov
outs
mov
adc
sbb
xor
std
mov
mov
xchg
popf
sub
jecxz
in
jmp
fmulp
aaa
add
out
into
jnp
dec
in
adc
dec
mov
mov
mov
ss
mov
mov
loopne
outs
push
mov
push
jp
push
pop
cld
pop
xchg
push
(bad)
jnp
shl
dec
adc
pop
sbb
cmps
xlat
fwait
pop
push
pusha
mov
dec
in
lods
movs
push
mov
ret
loop
sub
push
push
pusha
or
dec
scas
cmp
mov
out
fstp
lea
adc
ins
inc
add
add
lods
ja
stos
data16
in
cmps
movs
jmp
retf
sbb
hlt
adc
or
cmp
out
ds
pusha
aas
mov
jge
jnp
inc
icebp
popa
pusha
pop
xchg
inc
stc
push
mov
mov
mov
push
cmp
jmp
ds
scas
push
enter
push
imul
push
mov
sbb
stos
sub
jb
or
aad
inc
adc
cli
stos
mov
pop
shl
push
in
out
test
push
sub
fsub
adc
jmp
shl
in
dec
out
test
pop
mov
test
scas
and
push
pusha
xchg
retf
test
sbb
push
(bad)
push
dec
mov
cmp
sub
iret
mov
ss
sub
push
(bad)
fst
imul
xchg
cdq
fdivr
dec
mov
out
mov
lea
xor
stc
out
add
repnz
outs
pusha
or
dec
mov
jns
sbb
xlat
and
cdq
mov
test
mov
shr
in
mov
out
(bad)
pop
out
mov
fidivr
sbb
fnsave
xchg
mov
shr
(bad)
std
lock
xor
mov
add
sub
sub
pop
xor
or
mov
jnp
ffreep
in
dec
adc
mov
int3
add
push
dec
repz
push
int3
cmp
add
sub
add
sub
jg
imul
ja
mov
out
iret
push
popa
push
ret
and
aas
dec
mov
jne
push
outs
iret
sub
fs
pop
mov
jle
enter
lahf
mov
not
(bad)
ror
add
ret
into
call
xor
(bad)
call
cmpps
int3
cmp
pusha
repnz
adc
or
mov
jl
popf
in
call
lock
or
mov
xor
adc
jns
inc
jnp
xor
xchg
in
lods
pop
movs
shr
add
mov
xchg
jmp
mov
inc
mov
fsub
add
outs
jmp
arpl
cli
outs
push
jmp
sbb
xchg
mov
dec
and
enter
aad
and
fs
mov
je
lods
movs
push
rcl
xchg
lock
jmp
cmp
inc
dec
ret
data16
ss
ret
data16
jae
and
adc
ret
lods
(bad)
jbe
lahf
xchg
imul
mov
out
dec
sub
out
push
sub
das
adc
or
pmaxsw
jl
xchg
call
neg
cmp
hlt
ret
or
mov
jae
cmp
or
clc
push
or
fcmovnbe
cmp
std
mov
sar
shr
out
inc
push
das
popf
push
cmps
stos
inc
xchg
js
pop
shl
adc
call
xchg
aam
retf
adc
in
sub
sbb
or
sbb
sub
mov
sub
pop
test
cli
cwde
or
mov
mov
cmp
sub
add
mov
aam
sbb
adc
mov
jae
cmps
xor
sub
mov
imul
int
mov
sbb
inc
leave
dec
push
mov
cmc
in
mov
lods
xchg
mov
fs
xchg
mov
mov
mov
dec
cmps
pushf
dec
imul
pop
aad
adc
or
nop
xchg
sbb
jp
fist
mov
iret
in
sbb
dec
dec
and
xchg
sbb
xchg
xchg
xchg
in
aam
icebp
aam
inc
sbb
mov
ret
out
sahf
das
(bad)
fdiv
popa
fsubr
jecxz
cmc
ficom
xor
stos
gs
cld
xchg
and
xchg
data16
sub
xor
sbb
inc
push
loope
dec
in
pop
dec
mov
vmovmskps
in
pop
je
or
sti
sbb
cmp
sub
dec
or
cmp
(bad)
jnp
or
(bad)
sbb
lea
add
push
jge
lds
jp
rcr
jg
dec
xchg
and
jmp
add
das
mov
popf
cdq
test
or
mov
add
inc
xchg
sbb
push
cmp
outs
jnp
retf
cli
inc
data16
(bad)
jl
pop
cmp
pushf
jl
lds
ret
jecxz
mov
aaa
arpl
loopne
fcmovne
pushf
dec
rcl
jecxz
dec
aam
adc
jp
shr
mov
mov
pop
data16
iret
scas
das
pop
dec
xor
in
add
xor
mov
repnz
daa
dec
pop
mov
jge
pop
das
call
and
adc
mov
or
cmp
retf
mov
add
inc
ret
mov
jb
sar
and
sbb
adc
popa
mov
or
fstp
jno
call
repz
or
test
adc
pop
inc
sti
or
loop
cli
mov
aaa
(bad)
retf
dec
nop
mov
cmp
push
shr
or
pushf
aad
mov
xchg
cwde
retf
ins
add
cmps
dec
cmp
mov
mov
mov
mov
push
inc
(bad)
clc
jge
lahf
fild
outs
ins
sub
mov
adc
lods
add
or
cli
dec
fcmovnb
not
xchg
cld
cmc
mov
fdivr
repnz
shl
bound
out
fcomp
adc
push
sti
push
and
fdivr
xlat
jge
js
int3
es
adc
xchg
mov
js
ret
jmp
pop
ds
push
mov
mov
push
adc
cli
aaa
stc
inc
push
sub
jnp
mov
xchg
mov
and
fsubr
out
int3
bound
test
movs
stos
mov
xor
shl
pop
js
adc
cmps
inc
(bad)
test
js
adc
dec
cmp
inc
xchg
mov
and
dec
mov
aad
cmp
ficom
call
pop
ret
int
adc
lods
lahf
inc
mov
ret
lahf
ret
mov
and
and
push
dec
cmp
inc
es
or
dec
movs
hlt
jns
ins
dec
jo
sbb
cmp
(bad)
xor
jle
addr16
cmp
xchg
and
lock
mov
jns
popf
nop
das
ins
loop
add
(bad)
xor
and
pop
pop
xchg
lahf
in
xchg
mov
call
sbb
xchg
stos
inc
fs
mov
push
push
cwde
pop
int
ret
adc
(bad)
sbb
shr
jge
movs
adc
dec
stos
pop
add
fistp
adc
in
clc
xor
loope
ins
shl
aam
or
into
push
mov
jmp
lea
sub
sub
add
je
add
adc
push
stc
xchg
push
adc
mov
call
mov
push
cwde
imul
jno
sti
pusha
aam
adc
sub
sub
in
xchg
fsubr
std
jnp
scas
leave
pushf
popf
push
fnstsw
jp
cdq
adc
rcl
push
fbstp
push
sub
adc
cdq
and
mul
js
daa
int3
outs
pop
mov
movs
test
lock
push
xchg
cmp
push
dec
out
inc
shl
cmp
add
pop
pop
mov
(bad)
dec
or
jnp
shr
stos
xchg
xor
push
icebp
adc
movs
cmp
add
lea
lods
push
and
js
aaa
push
sub
jno
fs
fbstp
idiv
adc
ins
and
xchg
jecxz
sub
mov
fwait
add
mov
enter
push
dec
jbe
dec
dec
icebp
jno
cld
add
cdq
push
pushf
popa
dec
adc
loope
xchg
and
call
jmp
(bad)
sbb
scas
das
std
dec
sbb
sbb
movs
jnp
in
mov
pop
popf
adc
inc
adc
xchg
lock
push
bound
lahf
adc
in
jle
and
loope
mov
adc
push
mov
adc
mov
cmovs
add
adc
sbb
jmp
pusha
jmp
test
nop
add
sub
lahf
add
cs
pop
inc
dec
mov
xchg
(bad)
adc
les
sub
neg
outs
inc
mov
fs
adc
inc
jge
cli
bound
inc
sar
push
jge
clc
popa
cmps
jge
fild
fidivr
fstp
cmps
fwait
loop
dec
jmp
and
lods
in
or
sub
(bad)
(bad)
jmp
in
fdivr
jbe
and
loop
cli
clc
jle
pop
xchg
add
mov
adc
mov
popa
(bad)
addr16
scas
push
jnp
dec
mov
(bad)
sar
mov
mov
and
les
jae
les
je
ror
xchg
pop
xor
fisubr
test
mov
ret
rcl
(bad)
cwde
loope
shl
int
mov
and
xchg
or
pop
retf
out
mov
nop
cmp
xchg
add
fstp
fisubr
ds
fadd
or
adc
adc
or
aam
adc
sti
xor
or
cdq
dec
(bad)
repnz
(bad)
jg
cmp
out
fsub
repz
jge
mov
repnz
xor
aas
sub
jae
pop
icebp
jo
mov
pop
ss
mov
mov
retf
push
mov
or
mov
(bad)
out
push
pop
jno
retf
mov
xchg
cmp
and
jg
inc
pop
(bad)
scas
fneni(8087
in
mov
cmp
jge
dec
cmc
js
pop
mov
and
leave
mov
or
rol
and
mov
ins
adc
xor
(bad)
ror
popa
cmps
jmp
xor
scas
xor
dec
aad
push
or
int3
inc
inc
pop
pop
mov
lahf
rcl
imul
jl
mov
call
xchg
sbb
addr16
fnstsw
or
sbb
pop
(bad)
mov
push
and
mov
pop
pusha
jmp
fbstp
add
adc
xor
jo
xor
mov
sub
sbb
ds
push
retf
mov
das
and
(bad)
arpl
jp
cmps
jmp
add
loope
jno
adc
dec
retf
jecxz
ret
dec
(bad)
mov
inc
jmp
or
icebp
push
stos
leave
sbb
sub
cmp
mov
int
push
call
push
push
push
neg
and
shr
call
sbb
mov
xor
jmp
xchg
(bad)
mov
inc
and
cmp
sbb
fist
jp
dec
inc
iret
(bad)
scas
xchg
or
icebp
jbe
daa
(bad)
sbb
mov
sbb
imul
seto
xchg
or
imul
inc
in
jmp
pusha
lea
pop
xchg
aad
push
xor
mov
fwait
adc
mov
xchg
stc
dec
xor
iret
push
pop
(bad)
mov
mul
and
dec
in
dec
retf
pop
and
out
mov
mov
cmc
iret
cmc
mov
mov
ret
cmps
mov
mov
mov
nop
pop
sar
mov
cmp
cld
cmp
movs
ins
ss
dec
out
arpl
mov
inc
sub
out
lahf
add
fs
ja
int
test
es
adc
out
mov
jp
ret
mov
es
test
rol
nop
lahf
shr
scas
mov
dec
push
imul
xchg
repz
and
add
xchg
add
loope
ins
sub
jmp
iret
popa
sbb
jmp
in
xchg
mov
push
push
or
and
test
js
cmp
scas
into
inc
jp
(bad)
ror
loope
inc
rcr
cmp
mov
and
outs
push
mov
mov
aaa
jp
call
adc
mov
int3
sbb
ret
mov
cmp
xor
pusha
into
cmp
clc
mov
or
leave
dec
mov
jmp
jp
int
jg
xlat
repz
pop
ficomp
bnd
mov
ja
test
sbb
sub
mov
jg
xor
in
stos
mov
mov
jp
sbb
lock
and
clc
pop
mov
inc
or
iret
pop
push
es
setg
pop
mov
xchg
sub
ds
std
or
jmp
fcmovnb
sbb
call
pop
xchg
test
xchg
fdiv
and
mov
inc
pushf
mov
std
mov
fld
add
imul
popa
add
push
mov
pusha
mov
mov
out
cs
in
mov
(bad)
retf
add
cs
cmps
aad
inc
fmul
out
stos
jmp
pop
adc
cmps
pop
jecxz
ins
cmps
mov
rol
cmc
sbb
test
loopne
jg
(bad)
out
aaa
inc
aad
aas
jl
lea
leave
add
pop
xchg
dec
imul
iret
pop
je
xor
rcl
scas
and
ret
xchg
sbb
xor
mov
xchg
or
out
clc
cmps
and
inc
cmp
ror
and
pop
aaa
fist
mov
add
or
dec
ins
mov
xchg
or
or
sub
dec
cmp
jno
loope
sahf
aaa
adc
mov
jnp
fs
lock
sar
add
push
sbb
stc
fcmovnu
mov
sbb
xchg
aam
jns
lods
xor
aaa
test
and
inc
add
das
stc
hlt
xlat
xor
out
dec
push
push
add
call
or
nop
pop
loope
scas
inc
aam
push
jne
push
dec
pusha
inc
inc
push
mov
jmp
fild
or
or
jecxz
push
sub
outs
add
int
jmp
test
sub
dec
enter
pop
jmp
fcomp
jp
test
and
dec
loop
daa
(bad)
scas
jns
jne
inc
jmp
mov
sbb
and
loop
adc
mov
jne
fwait
xchg
ret
cdq
add
and
xchg
push
pop
mov
xor
jbe
jp
sbb
jno
leave
pop
or
mov
xchg
xchg
jle
dec
fwait
(bad)
jmp
inc
lds
lods
xor
add
xlat
lea
mov
add
or
cmp
js
sbb
inc
pop
jnp
stc
hlt
jb
gs
lods
jae
sub
(bad)
icebp
data16
call
dec
sub
sub
sahf
loop
nop
sbb
sbb
jmp
(bad)
rol
loope
inc
cmps
repz
or
ror
jmp
inc
cwde
mov
mov
pop
fst
jmp
cs
jmp
push
mov
push
mov
mov
lea
idiv
cmp
in
push
dec
xlat
inc
cmp
inc
add
jl
sbb
clc
xor
popf
inc
jge
push
movs
leave
test
ds
mov
jle
leave
mov
pop
mov
mov
mov
out
fneni(8087
inc
inc
cmp
cmps
jae
mul
sbb
sub
loope
xor
js
cmps
ds
lea
hlt
xor
pusha
and
jecxz
pop
mul
sbb
adc
lds
push
dec
sbb
jbe
(bad)
in
xor
lea
xchg
dec
fistp
int3
xor
rcl
imul
or
jne
ins
stc
mov
test
and
push
jne
scas
add
test
fwait
xor
iret
and
or
iret
pop
movs
inc
movs
jmp
jg
das
sahf
cmps
dec
sub
dec
jns
stos
leave
or
mov
outs
inc
fsub
add
and
shl
push
mov
xchg
xor
or
sbb
mov
fcomp
cmp
or
jecxz
mov
jno
and
jo
mov
mov
bound
xor
mov
and
dec
sbb
(bad)
xor
pop
std
sub
lahf
jg
jae
jge
push
or
and
shr
ja
out
test
jp
aad
push
and
pushf
push
pop
mov
dec
retf
mov
adc
nop
mov
push
inc
gs
mov
scas
(bad)
cmp
and
add
imul
dec
dec
jb
aam
cmp
call
daa
repz
mov
ss
aam
mov
pop
add
scas
aas
mov
xchg
xchg
jmp
adc
sbb
cmp
push
push
leave
cld
cli
enter
jecxz
add
inc
push
into
pop
movs
outs
sahf
int3
mov
fild
jnp
xchg
xlat
mov
out
and
test
je
sub
fiadd
jne
out
and
jae
hlt
test
cmp
aas
in
push
mov
push
or
jno
mov
inc
pop
pop
mov
push
push
push
sbb
add
in
out
adc
or
cli
or
retf
mov
arpl
push
adc
cmps
sub
xchg
add
mov
cwde
sbb
jne
test
aam
lea
pusha
out
cmps
cli
or
mov
(bad)
sub
adc
pop
sub
mov
mov
mul
or
or
icebp
lock
icebp
daa
gs
inc
repnz
scas
mov
adc
arpl
sub
sti
fcomp
add
mov
xchg
in
mov
bswap
push
xor
imul
pop
mov
ror
bound
imul
and
je
scas
loopne
mov
cli
sbb
ret
bound
nop
xchg
add
mov
outs
lahf
sbb
inc
sbb
repnz
test
cwde
dec
add
inc
sbb
pop
call
fs
xor
xchg
call
pushf
mov
push
push
(bad)
sub
aaa
push
ret
sub
lods
jo
inc
or
test
push
cli
inc
add
xor
pushf
xor
adc
int
stos
and
je
scas
jnp
cs
scas
xor
jns
cmp
cmp
sbb
pop
dec
lahf
push
hlt
aas
dec
adc
push
in
ins
mov
cmp
mov
leave
jle
pop
xchg
mov
hlt
xchg
mov
pop
cmps
ins
and
and
pop
(bad)
push
fdivr
xor
in
dec
dec
push
test
add
mov
fisub
ror
gs
loop
xchg
pop
cli
push
sbb
(bad)
jmp
in
jmp
push
dec
stos
jae
pop
xchg
lea
pop
stos
jge
retf
fwait
fs
jmp
sub
or
aas
inc
push
cmp
cmp
test
jb
mov
dec
and
loopne
push
cmp
pop
pop
jne
popf
mov
mov
or
sbb
mov
(bad)
fld
fisttp
sbb
mov
lods
or
hlt
sub
xor
div
cdq
fcom
jb
xchg
mov
dec
add
test
fisub
aas
(bad)
and
or
pop
xchg
int3
jb
or
xchg
xchg
sbb
call
rcl
or
out
faddp
(bad)
jl
js
mov
cmp
aad
and
mov
add
and
loop
fidiv
fwait
push
adc
cmp
(bad)
fistp
mov
inc
add
jmp
or
xchg
lahf
ss
leave
pop
in
xlat
stos
in
sahf
sbb
mov
cdq
adc
or
jmp
cmp
inc
xor
ret
xor
dec
scas
call
scas
cmp
mov
xor
movs
inc
add
xor
pop
jl
daa
mov
arpl
stc
or
adc
dec
sbb
pop
aad
mov
shl
xchg
jnp
scas
or
bound
mov
adc
rcl
mov
cmp
call
or
imul
mov
outs
or
add
and
aad
prefetch
jmp
mov
rcr
xchg
(bad)
xchg
dec
and
xlat
int3
mov
dec
out
sub
mov
xor
outs
mov
sub
mov
call
scas
mov
int3
retf
in
stc
es
fmul
sysret
inc
inc
and
or
in
cmp
jmp
sbb
push
jnp
mov
fist
sbb
in
clc
rol
movs
in
jae
xchg
push
jmp
push
lds
test
sbb
scas
je
scas
fisub
data16
in
mov
push
ror
iret
push
mov
push
enter
mov
pop
mov
and
jmp
dec
jns
xor
sub
mov
xchg
aaa
pop
sub
dec
in
push
outs
rol
(bad)
xor
add
push
mov
stc
mov
or
jecxz
adc
imul
(bad)
(bad)
js
(bad)
mov
xor
sbb
pop
jp
xor
push
add
sub
push
pop
pop
add
cmp
inc
mov
pop
xchg
cmp
jnp
inc
iret
movs
cwde
xchg
push
imul
add
jmp
in
mov
stos
imul
shl
cmps
rol
int3
push
pop
mov
pop
mov
jns
jle
cmp
and
sbb
adc
jmp
retf
push
add
out
bnd
cmp
cmp
out
sub
retf
sub
lds
lea
inc
fwait
cdq
leave
shl
pusha
icebp
adc
push
(bad)
fcom
addr16
(bad)
repnz
mov
jecxz
dec
lds
pop
out
nop
dec
mov
lock
sbb
in
neg
mov
ficomp
adc
(bad)
leave
jmp
mov
int
pushw
mov
push
lahf
and
lods
xchg
xor
lods
mov
mov
cmp
fild
mov
push
mov
hlt
scas
mov
fucomp
jge
mov
dec
je
movs
mov
and
xchg
rcl
push
imul
inc
sub
fsub
push
ror
adc
inc
(bad)
imul
inc
add
push
test
(bad)
and
js
pop
stos
mov
call
iret
cwde
dec
clc
and
ja
dec
push
inc
dec
jle
adc
xchg
pop
test
xchg
fcomp
test
jnp
add
inc
in
sub
lock
cdq
daa
ss
in
movs
dec
mov
push
xor
fld
stc
adc
sub
dec
dec
adc
fidiv
push
pop
cmc
adc
and
jns
in
push
pop
mov
dec
pop
inc
mov
icebp
mov
fsubrp
cwde
or
fisub
add
jo
jae
out
fldenv
push
inc
mov
mov
rol
ds
movs
shl
fxch
test
pop
mov
jo
push
loope
fadd
stos
movs
add
adc
outs
sub
sub
imul
aad
aaa
sub
xchg
mov
jl
push
sub
js
xor
adc
pushf
xchg
jbe
inc
pop
add
inc
mov
inc
mov
inc
dec
ins
mov
jnp
std
(bad)
shl
mov
je
enter
jae
mov
adc
pusha
mov
out
shl
lods
cdq
fsubr
and
sbb
out
inc
fmulp
retf
mov
pop
xchg
xchg
in
out
ds
gs
inc
(bad)
shr
jo
inc
clc
mov
push
mov
sahf
das
xor
push
nop
cli
fst
add
sti
cmovge
sub
loope
inc
mov
inc
jo
jg
jle
mov
sbb
push
push
enter
out
pop
pop
pop
shr
pop
adc
adc
xchg
mov
movs
call
arpl
call
cmp
mov
adc
in
lea
cmp
add
mov
popf
(bad)
pop
aas
sahf
mov
mov
cmp
jmp
xor
pop
hlt
arpl
lea
aaa
and
(bad)
pop
outs
push
add
or
cmp
aas
add
xor
out
mov
inc
pop
cmp
(bad)
fld
(bad)
add
ins
sbb
cwde
in
pop
pop
shr
xchg
mov
adc
clc
cli
cmp
pop
add
in
rol
shl
sar
imul
pop
mov
mov
hlt
sub
stos
out
sar
aas
xchg
push
cli
mov
pop
iret
xor
jo
aam
cmp
mov
cmps
xor
xchg
xchg
mov
dec
sbb
push
loop
mov
out
dec
xor
mov
push
repnz
std
mov
retf
sub
xchg
loopne
pop
sbb
inc
sbb
das
mov
and
push
push
and
aas
stos
fisttp
clc
mov
or
fwait
movs
ret
aas
mov
cmp
lahf
mov
pop
cmps
jmp
xor
call
jae
sbb
pop
mov
dec
pop
aas
sub
ds
pop
call
mov
rol
add
cwde
mov
inc
cli
adc
fisttp
scas
sbb
sbb
add
out
mov
aas
in
fadd
addr16
lods
jecxz
aaa
daa
(bad)
fwait
lahf
mov
ret
(bad)
popa
or
lahf
or
hlt
movs
repz
lahf
fcmovu
std
in
jle
push
dec
and
xor
or
movs
out
or
jns
dec
mov
xchg
movs
cmp
fimul
call
sti
data16
push
ss
xchg
sbb
iret
or
scas
jg
add
(bad)
test
loop
and
jnp
(bad)
jle
cdq
std
mov
ins
(bad)
pop
div
jle
xor
cmp
div
jmp
dec
pusha
xlat
mov
inc
xchg
sbb
jmp
inc
lods
mov
retf
xor
mov
add
jp
xor
ins
xchg
xor
mov
xchg
ret
pop
mov
jle
adc
retf
call
sti
test
add
jns
jge
adc
add
xor
dec
test
fbld
or
pop
cmps
mov
xchg
sar
imul
dec
adc
test
adc
cmp
adc
sub
mov
movs
or
cdq
jg
adc
sub
pop
lock
mov
cmps
fcmovb
shr
mov
jl
add
dec
mov
sub
scas
add
out
mov
leave
jge
pop
xchg
inc
pop
fistp
or
pusha
push
call
iret
iret
mov
movs
leave
pop
cwde
mov
mov
push
sub
movs
clc
mov
lahf
xor
mov
xchg
or
xchg
mov
push
jnp
repz
(bad)
pop
out
sub
lds
mov
mov
xor
hlt
ret
or
mov
mov
rcr
imul
xchg
inc
stos
aam
out
aaa
test
call
mov
ds
xor
icebp
add
mov
mov
sti
fld
popa
or
or
inc
jle
(bad)
gs
mov
jnp
sub
xchg
adc
nop
cli
push
xchg
cmp
or
jne
push
add
stc
repnz
add
adc
or
or
in
gs
jbe
mov
mov
fst
(bad)
popa
sub
fst
add
ins
icebp
or
scas
in
inc
fiadd
ret
pop
ins
test
scas
add
call
inc
ret
in
bound
int
mov
(bad)
popf
mov
repz
inc
mov
test
sub
jg
xor
dec
cmps
mov
pop
mov
std
pop
ins
xor
mov
adc
movs
mov
icebp
int3
cmps
js
mov
inc
loopne
jl
or
xchg
outs
sbb
dec
(bad)
and
lahf
jp
xchg
mov
xchg
fwait
or
or
(bad)
and
test
xchg
fadd
mov
add
mov
fstp
jmp
adc
enter
fstp
mov
jge
test
mov
adc
sub
or
repz
sbb
xchg
imul
or
pop
outs
ret
pcmpgtw
ds
imul
mov
pushf
dec
(bad)
jae
push
(bad)
inc
stos
jns
cmp
mov
loope
mov
xchg
lds
sahf
fild
out
repnz
push
gs
sub
ja
mov
xchg
in
mov
or
ror
sub
jns
xchg
pop
(bad)
xchg
icebp
push
loop
inc
pop
add
xchg
push
out
aam
mov
add
out
sbb
cmp
dec
add
inc
dec
cmc
mov
retf
xchg
mov
jle
iret
xlat
arpl
mov
gs
push
mov
ins
test
mov
sbb
ins
mov
clc
adc
fisub
enter
and
xchg
jmp
xchg
and
repnz
push
outs
es
add
aam
mov
inc
ret
or
ret
enter
mov
sub
movs
iret
jp
push
push
stos
ins
inc
shl
mov
mov
pop
jb
jmp
movs
add
pop
mov
mov
cwde
lock
xchg
push
push
sbb
sub
dec
inc
mul
inc
call
mov
shr
jo
je
add
and
test
jge
fmul
push
push
xor
fmul
mov
add
push
dec
push
push
shl
xchg
retf
cdq
add
mov
adc
jmp
mov
xor
mov
clc
rcl
mov
push
jnp
dec
mov
xor
sub
into
outs
sub
shl
jmp
dec
cmp
cwde
inc
cmps
or
pop
jnp
in
cmp
call
add
(bad)
loop
add
call
popf
sbb
leave
jae
mov
retf
sbb
shl
mov
fwait
push
lock
jno
leave
mov
adc
push
sbb
ins
aad
out
test
stos
adc
in
push
repnz
das
mov
gs
lea
inc
jbe
mov
aaa
int
ret
mov
xor
aam
aad
cmp
xchg
dec
imul
add
xchg
retf
jecxz
loopne
mov
nop
add
ja
sbb
lods
into
hlt
dec
lods
cmp
push
iret
inc
ins
mov
das
xchg
cs
xchg
inc
in
out
je
enter
leave
repnz
adc
mov
adc
mov
cmp
out
mov
int3
(bad)
cmc
fwait
enter
or
jns
mov
jo
adc
cmp
movs
fdivp
dec
repnz
ret
sub
add
les
push
in
daa
js
iret
call
loopne
std
and
gs
pop
add
retf
(bad)
ins
mov
int3
xor
or
dec
xchg
xchg
xchg
jns
das
movs
push
mov
and
daa
cmp
adc
jb
xchg
push
dec
sub
mov
les
mov
or
je
pusha
je
sbb
std
nop
ret
jo
mov
xchg
dec
pop
push
ffree
pushf
loope
xor
jmp
and
imul
dec
mov
xor
mov
cs
jle
jl
je
jp
dec
mov
inc
mov
mov
les
sbb
add
pop
inc
adc
mov
cmp
out
aas
add
push
inc
mov
jns
arpl
or
lahf
xor
out
pushfw
pusha
aas
loopne
lahf
dec
jae
ins
xor
fst
pop
sbb
xor
fmul
pop
sub
push
sub
and
inc
mul
and
sub
and
es
cwde
jae
push
lahf
shr
or
pop
adc
pop
in
mov
dec
xor
movs
adc
mov
inc
jmp
movs
cmp
out
popa
cmps
lock
pop
cmps
dec
sbb
mov
jg
sti
dec
cmps
into
or
jmp
enter
ins
iret
je
cwde
mov
pop
cmc
mov
dec
outs
dec
mov
cmp
xor
cmc
aam
cmp
or
bound
mov
add
xor
stos
aad
jmp
xchg
out
xchg
das
mov
mov
ja
mov
mov
pop
dec
aad
int3
xchg
cmp
mov
bound
iret
shl
add
imul
fild
or
fwait
adc
retf
mov
ror
pop
mov
add
adc
pop
(bad)
outs
dec
outs
and
xor
push
ds
dec
mov
jmp
pop
xchg
cmp
pushf
repz
lock
mov
or
ss
mov
jl
adc
inc
push
jmp
outs
or
inc
(bad)
(bad)
enter
mov
enter
add
cmp
bound
dec
iret
scas
and
dec
int3
pusha
ss
and
in
cmp
add
xor
pop
mov
out
dec
sbb
mov
dec
std
cmp
es
push
mov
jmp
add
mov
lods
iret
pop
outs
repnz
sahf
not
lods
mov
jl
inc
sub
iret
or
push
dec
pop
imul
stos
xor
push
cmp
push
lock
inc
inc
jl
movs
and
aad
dec
lods
push
cmp
cli
xchg
or
push
mov
mov
sbb
mov
and
fnstsw
jae
add
xchg
push
into
sbb
mov
add
push
mov
cdq
mov
push
stc
fs
jecxz
xor
xchg
jge
shl
inc
pop
jnp
test
arpl
cs
lods
push
mov
sub
cmps
ins
std
into
outs
ss
sbb
add
sahf
pop
and
scas
dec
xchg
retf
pop
jae
and
in
inc
pop
jmp
mov
and
in
jmp
sub
lods
jecxz
fmul
or
and
mov
loopne
mov
jbe
loope
push
cmps
jecxz
pop
cmp
adc
xchg
fist
leave
sbb
jbe
add
sub
sub
pop
sub
jbe
cmp
adc
mov
fstp
hlt
xchg
dec
test
leave
pusha
sbb
les
aad
adc
mov
in
xchg
mov
int
jmp
ror
adc
sub
popa
pusha
loop
sbb
fcom
pop
repz
mov
fcomp
icebp
xor
xchg
dec
imul
div
xor
push
test
in
sahf
push
imul
cmp
and
iret
imul
hlt
or
or
(bad)
(bad)
fst
stos
stos
mov
push
xchg
outs
pop
xlat
shl
gs
pushf
loope
pop
lock
xor
(bad)
mov
mov
jge
inc
pop
mov
ins
fst
lods
(bad)
xor
in
push
ret
and
xchg
push
ss
retf
adc
stos
pusha
mul
mov
(bad)
cmp
pushf
xor
in
repz
or
or
fnsave
inc
xor
les
pop
mov
adc
cmps
test
jnp
push
mov
ror
sti
cmc
fwait
push
add
pop
enter
mov
push
ds
add
jl
(bad)
(bad)
lds
sar
or
hlt
pop
add
call
xchg
mov
fsub
(bad)
bound
test
out
cmps
dec
ins
xchg
sbb
iret
lock
sti
out
lods
push
retf
test
dec
jnp
scas
ins
addr16
cmp
xor
test
push
and
lahf
fwait
mov
mov
mov
sbb
push
jl
lods
neg
das
jmp
loopne
cmp
lock
inc
out
call
out
and
bound
xchg
retf
lahf
inc
pop
rcr
xor
ss
jo
xchg
push
jmp
add
push
mov
mov
call
es
hlt
mov
push
outs
xor
add
or
ins
sub
popf
adc
xchg
inc
push
in
cmp
imul
aaa
or
sub
pop
mov
xlat
pcmpgtb
das
enter
or
xchg
inc
xor
jne
xchg
call
dec
sti
cmps
and
inc
daa
out
mov
sbb
add
cs
mov
mov
call
mov
in
mov
test
(bad)
mov
iret
call
in
pop
and
push
outs
xor
xor
mov
dec
add
stos
xchg
(bad)
xor
dec
xchg
dec
and
add
loop
xchg
repnz
add
clc
mov
and
movs
lods
(bad)
nop
cmps
jl
adc
or
jo
xchg
pop
and
push
sbb
jge
popf
(bad)
adc
sbb
ret
xor
adc
mov
fdivr
mov
nop
and
mov
xchg
sbb
call
dec
scas
stos
stos
nop
mov
push
mov
dec
sahf
and
dec
call
ins
sub
sub
fnstenv
mov
add
daa
pop
sub
test
adc
push
push
stos
ss
pop
pop
aad
push
push
adc
(bad)
loope
ret
adc
das
jge
push
loope
cmps
int
cmp
push
ss
pop
cmc
pop
mov
mov
aas
sub
mov
bound
dec
xchg
pop
jnp
scas
pop
leave
jmp
aaa
adc
add
movs
xchg
jbe
and
jns
test
or
sub
xchg
mov
adc
jns
fucomp
cmp
in
xor
bound
fs
pop
mov
retf
mov
and
(bad)
xchg
jns
jno
hlt
into
xchg
inc
loopne
jecxz
and
xlat
arpl
rol
xchg
(bad)
mov
arpl
data16
push
mov
data16
mov
jno
stos
and
sbb
and
adc
pop
clc
pop
add
out
(bad)
pop
ficom
popa
fisubr
mov
pop
pusha
test
loope
int3
mov
mov
loope
pop
pop
lods
cmp
mov
outs
loop
xor
mov
sub
imul
jb
lds
push
fabs
mov
mov
push
mov
in
fadd
sub
pop
push
push
push
jne
div
sti
or
xlat
sub
out
mov
dec
xchg
loop
fdiv
aaa
jno
dec
test
pop
sub
mov
ins
xchg
lahf
test
inc
xor
mov
jo
pop
xor
out
loopne
lock
shl
push
push
fist
cwde
loop
mov
(bad)
pop
mov
adc
outs
and
std
xchg
cmc
sbb
lds
pop
add
and
into
push
xor
xor
(bad)
cmc
cmps
dec
xchg
out
pop
xor
push
stos
add
icebp
xchg
int3
sahf
pop
or
adc
jecxz
sbb
jne
fild
jne
xor
stos
or
sub
repz
dec
fidivr
sub
add
ss
dec
(bad)
out
jne
xchg
dec
and
cs
adc
mov
popa
and
lahf
mov
fwait
xchg
loop
jae
mov
pop
idiv
dec
gs
nop
cmps
(bad)
cmp
stos
std
out
fwait
dec
push
pop
rol
add
sti
das
repz
inc
fisttp
test
inc
and
fsubr
(bad)
retf
xchg
inc
popf
mov
(bad)
or
push
sbb
pushf
push
out
fisttp
sub
add
rol
imul
mov
push
scas
mov
into
jmp
fist
push
or
call
ins
adc
cmp
sub
dec
jae
int
sbb
in
fist
add
repz
out
dec
sub
push
iret
clc
push
(bad)
stc
imul
push
jmp
enter
dec
and
adc
pop
pushf
iret
imul
push
cmps
cwde
push
mov
idiv
dec
nop
loope
mov
ja
mov
mov
xchg
aad
in
inc
pop
fs
jmp
and
cmp
test
sbb
push
dec
pop
push
push
push
mov
test
mov
outs
sub
sar
int
dec
lahf
sahf
push
jns
lods
xor
sbb
or
adc
popf
lea
in
dec
retf
cmps
inc
jle
sbb
inc
fidiv
fcomi
push
mov
aad
fwait
loop
push
and
out
int
inc
dec
dec
or
pop
cli
mov
xchg
fwait
loope
pop
cmp
iret
icebp
pop
pop
cmp
jae
pop
jge
xchg
mov
dec
pop
jge
or
jbe
pop
and
into
ins
popf
lods
xlat
sub
mov
jno
ins
sbb
int
(bad)
push
mov
enter
int3
jg
stos
adc
ins
jmp
mov
xchg
in
in
test
ins
fsub
jmp
mov
test
sbb
xor
stos
push
fmul
hlt
mov
retf
cmp
or
cmp
cmp
cmp
or
pop
sbb
jb
mov
xchg
mov
xchg
test
adc
mov
stos
sar
xor
sbb
stc
push
pop
mov
neg
loop
sub
or
pop
fucomip
or
in
cdq
xchg
dec
cmp
or
aas
cmps
cs
jnp
mov
shl
stos
mul
push
mov
dec
addr16
jae
out
stc
xchg
ja
xchg
std
xor
xor
(bad)
arpl
test
loope
stos
jl
xchg
or
icebp
push
das
movs
sbb
pop
xor
add
sbb
out
icebp
imul
stos
cwde
jmp
jle
ret
(bad)
(bad)
movs
jge
push
xor
stos
sub
das
inc
or
les
aaa
and
in
std
and
mov
mov
inc
sti
cmps
sbb
cmp
(bad)
and
lahf
jp
mov
into
fnstsw
push
mov
out
mov
(bad)
xchg
jb
sub
cmp
and
dec
jo
cli
push
and
aam
xor
lds
fisub
push
xchg
dec
scas
ret
jo
cli
cwde
inc
sub
outs
mov
cmp
push
add
clc
mov
sub
pushf
pop
rcl
dec
data16
iret
dec
jmp
int3
sbb
imul
rcr
ret
fiadd
int3
test
ret
adc
ror
mov
arpl
and
pop
inc
jb
mov
fild
mov
enter
test
add
in
xor
mov
dec
cmp
xlat
or
mov
retf
cmp
loope
adc
(bad)
rol
frstor
jb
repnz
cwde
sbb
test
lods
mov
call
fdivr
ins
adc
in
mul
and
xchg
xchg
pop
push
or
in
sbb
movs
xor
mov
fadd
hlt
xlat
sbb
xlat
xchg
cli
xchg
adc
mov
in
mov
pop
ds
outs
(bad)
adc
fldenv
hlt
pop
scas
add
cdq
mov
(bad)
aas
push
add
sbb
mov
(bad)
mov
pop
lahf
cld
cmp
inc
cmp
sbb
ss
add
shl
pop
add
mov
xlat
xchg
jo
push
push
add
push
mov
xor
inc
hlt
loopne
push
popa
fwait
ds
mov
out
rcl
push
push
mov
cld
cmp
and
or
retf
fld
lods
(bad)
pop
fimul
sbb
adc
shl
sbb
mov
test
aaa
lods
push
mov
dec
push
outs
and
cmp
das
or
enter
lods
inc
or
or
loop
cmp
int3
mov
stc
daa
push
jb
sub
mov
in
outs
jne
sub
or
fisub
ret
repnz
outs
xlat
xor
jbe
ficom
xchg
mov
outs
xor
push
inc
pusha
sahf
pop
adc
les
(bad)
retf
pop
lods
mov
adc
ds
iret
ror
cld
sbb
mov
stc
push
stc
sahf
int
cmp
ins
std
arpl
test
jo
jmp
and
in
nop
in
pop
mov
jmp
push
fdivr
push
loopne
mov
xor
retf
mov
outs
outs
lahf
xor
or
repz
xchg
daa
push
xchg
jl
ss
rcr
add
cmps
mov
ins
test
push
scas
outs
je
mov
fdiv
xor
out
mov
push
or
ja
mov
xor
inc
in
mov
cmp
and
mov
xchg
aam
push
leave
into
pop
push
jae
aam
in
shr
adc
pop
(bad)
sub
push
sahf
loop
xor
movs
mov
rol
fidiv
mov
ss
stos
dec
shl
or
repnz
xor
cmps
push
and
js
mov
dec
(bad)
fstp
add
test
lods
js
or
(bad)
int3
std
rcr
mov
call
(bad)
repnz
mov
fwait
(bad)
pop
enter
dec
lds
cmp
in
push
xor
adc
clc
dec
mul
dec
pushf
dec
sbb
xchg
in
xchg
jns
aad
sub
in
or
adc
sahf
and
pop
sar
xor
mov
(bad)
mov
mov
pushf
or
jb
addr16
xchg
test
xchg
mov
pop
(bad)
xor
or
hlt
cmp
pusha
jecxz
xchg
sbb
and
adc
jmp
jae
movs
xchg
adc
sti
clc
jnp
jae
cmps
jbe
xchg
adc
cmp
(bad)
repnz
sub
mov
mov
(bad)
imul
dec
loope
jb
push
and
push
lods
cmps
mov
hlt
or
push
imul
fisttp
jle
mov
mov
cmp
fdiv
sbb
push
loopne
jb
jnp
retf
rcl
and
jmp
push
add
imul
jmp
stos
ret
iret
pop
mov
bound
in
and
fld
sbb
leave
js
adc
or
rcr
ja
and
(bad)
imul
or
ror
jb
push
jmp
or
xlat
lea
(bad)
push
ds
aad
or
jmp
hlt
sbb
and
xchg
repnz
test
mov
fistp
cld
and
adc
jle
jae
or
add
neg
pop
mov
and
adc
aad
jo
data16
fstp
and
in
or
jo
push
xlat
cmp
cmp
mov
pushf
cld
xlat
idiv
or
adc
push
cmc
jns
push
and
out
dec
xchg
pop
push
(bad)
mov
jns
push
in
xchg
add
cld
jmp
mov
mov
inc
out
push
ficomp
add
jbe
pop
rcr
into
or
or
stos
sub
dec
dec
mov
repnz
push
xchg
into
mov
sahf
cmp
int
sub
xchg
push
mov
es
pop
pop
pop
dec
push
jecxz
mov
retf
aaa
xchg
xor
pop
mov
(bad)
in
mov
test
scas
mov
add
cmps
(bad)
mov
js
and
pop
js
arpl
cmp
and
push
cmp
mov
call
cmc
repz
cmps
jmp
xchg
in
mov
push
ins
push
push
xchg
push
xor
add
mov
add
fnstsw
sti
cdq
inc
inc
aas
popa
jnp
mov
jo
dec
cmps
div
or
bnd
xchg
mov
ss
mov
out
les
pusha
fld
mov
cmp
es
pop
push
(bad)
sbb
imul
pop
(bad)
inc
mov
jmp
cmp
sbb
retf
gs
mov
adc
loope
push
push
pop
or
inc
jo
ins
sub
(bad)
mov
add
pop
test
test
leave
jle
lea
test
sub
xchg
add
mov
rol
dec
in
dec
jb
mov
push
or
test
outs
mov
cli
push
loop
xchg
jae
mov
dec
push
dec
enter
jg
pop
lahf
xor
adc
imul
xchg
xor
fmulp
push
loop
push
dec
fdivp
fdivr
cmp
xor
xchg
or
ins
push
mov
sahf
xchg
lea
shl
sub
or
pop
push
addr16
jae
scas
push
es
in
mov
adc
and
jecxz
(bad)
adc
es
mov
cmp
fs
das
and
fstp
cdq
xchg
xlat
push
mov
sub
push
(bad)
push
sub
add
setge
ret
cmp
or
sahf
add
push
jo
mov
les
pop
xchg
or
pop
inc
(bad)
ds
shr
stos
cs
mov
mov
(bad)
xor
outs
daa
data16
jnp
pop
clc
inc
mov
xchg
jne
mov
inc
out
das
test
mov
in
jp
add
and
out
stos
mov
sub
adc
sbb
xor
add
adc
xchg
sbb
jb
pop
leave
ins
inc
jmp
pop
pop
xlat
pop
jl
bound
out
mov
pop
stos
sub
ins
jns
mov
dec
xchg
push
cmc
and
je
and
jne
sahf
shr
push
loop
cmp
pop
push
into
out
aaa
xor
lea
clc
dec
pop
into
jne
mov
mov
pop
inc
test
in
or
lahf
sub
cmp
jb
jmp
dec
mov
jmp
xchg
fnstcw
movd
test
jl
dec
fisubr
and
jge
adc
test
sub
xchg
imul
cmp
dec
cwde
outs
cmps
adc
outs
arpl
fst
jmp
sbb
sbb
push
ds
in
ret
ret
scas
call
aas
in
mov
lds
mov
sub
popa
in
cmc
cwde
mov
mov
imul
and
loope
sub
scas
mov
cmps
xor
movs
retf
pop
(bad)
and
mov
stc
outs
sar
mov
pop
xchg
mov
jmp
call
aam
into
dec
fnstenv
and
push
xchg
int3
cmp
(bad)
out
mov
test
jno
mov
jg
pop
adc
add
dec
stos
mov
mov
mov
or
xor
mov
aaa
sbb
loop
into
or
ss
dec
xchg
out
pop
jno
enter
add
mov
popf
jbe
shl
sbb
scas
das
xchg
inc
xchg
inc
das
pop
jge
stos
sbb
pop
aam
dec
fnstcw
(bad)
mov
push
adc
lods
xor
or
mov
push
pop
cmp
(bad)
lods
stc
mov
daa
pushf
jno
inc
add
inc
xor
leave
je
cmp
push
and
add
fsub
imul
pop
data16
cmp
xor
and
inc
sbb
call
fnstsw
mov
inc
mov
and
dec
dec
push
addr16
jbe
mov
cli
push
cmps
cmp
pop
stc
test
sbb
or
adc
stc
(bad)
or
cmp
enter
add
xchg
out
inc
adc
pusha
frstor
stos
xchg
xor
dec
(bad)
push
xchg
bound
push
mov
sub
in
jnp
add
add
repnz
adc
out
add
dec
xor
cs
xchg
add
clc
sar
frstor
leave
mov
call
mov
jle
sbb
jo
inc
out
ins
cmp
push
cwde
sbb
push
ins
xor
lods
fbstp
mov
jecxz
push
add
or
add
ss
adc
cmps
int3
mov
adc
mov
fcomp
add
daa
jns
int
push
int3
push
cmp
jp
xlat
or
adc
cmp
sub
pop
loopne
mov
adc
jmp
adc
mov
std
out
daa
mov
enter
xchg
cmp
(bad)
fcom
dec
jb
or
cmc
arpl
scas
rdpmc
and
(bad)
std
mov
mov
repz
fwait
mov
int3
mov
or
leave
xchg
mov
popf
pop
xchg
push
aaa
jl
lahf
(bad)
fidiv
(bad)
xchg
cs
scas
daa
into
call
adc
xchg
sbb
cmp
and
in
mov
(bad)
cld
push
nop
cld
add
(bad)
das
mov
movs
mov
pop
sub
ins
push
lea
retf
mov
dec
jl
mov
adc
lock
inc
or
xlat
mov
sub
test
sub
aad
movs
retf
pop
stos
retf
shl
mov
fmulp
or
not
test
cmp
es
xchg
fnstcw
cmps
jmp
sub
ins
sbb
(bad)
xchg
hlt
push
and
dec
push
pop
dec
sub
test
in
stc
jno
cmp
ds
mov
jl
xor
retf
out
scas
out
xor
fcmovnbe
retf
sbb
or
jns
inc
repz
xchg
hlt
mov
inc
iret
xchg
and
add
xadd
int
and
push
push
adc
sahf
add
fild
adc
lods
and
push
leave
dec
rcl
mov
and
mov
pop
repz
mov
aaa
ret
daa
movs
cmp
jmp
test
jmp
jne
xchg
sbb
ins
mov
xchg
push
mov
sub
aad
and
(bad)
call
and
int
call
les
xchg
lods
push
loopne
hlt
cmps
mov
jmp
add
dec
scas
cmp
ds
sub
adc
xchg
xchg
jnp
mov
in
inc
adc
and
adc
dec
pop
in
cmp
sub
mov
ret
xchg
and
jmp
iret
jae
push
xchg
ret
repnz
sbb
imul
sbb
rol
cmps
adc
icebp
push
iret
mov
cmps
sbb
push
mov
pop
nop
push
(bad)
adc
cmp
ins
add
mov
xchg
movs
fisubr
adc
rol
xchg
lahf
iret
mov
sbb
pop
fstp
adc
sbb
ret
fs
push
cs
aas
les
mov
scas
mov
jl
das
sbb
mov
pop
jp
dec
mov
xor
mov
repz
cmp
adc
cmp
clc
scas
mov
dec
jmp
mov
and
mov
call
mov
sub
mov
mov
add
les
sub
je
pop
cmc
xchg
test
ins
xchg
test
sbb
jo
mov
pop
frstor
imul
cmps
push
mov
mov
scas
mov
push
stc
imul
pop
inc
xchg
xor
xchg
fiadd
ret
dec
and
jnp
js
repz
dec
sbb
push
ins
mov
ret
sbb
cmp
dec
jge
ins
jae
cmps
fwait
push
sub
aad
es
xor
dec
data16
mov
out
add
outs
(bad)
xlat
shl
(bad)
out
dec
pop
xor
add
fs
push
ja
and
test
(bad)
jne
pushf
or
mov
inc
rcl
imul
ins
xchg
cdq
rcr
push
mov
neg
fstp
push
mov
sbb
inc
xor
push
(bad)
(bad)
neg
cwde
mov
cmp
add
mov
cmp
xchg
pop
mov
xchg
mov
push
mov
push
ret
adc
sbb
mov
xchg
gs
test
xlat
mov
push
aas
int3
xchg
repz
adc
mov
pop
xor
in
retf
(bad)
mov
int
dec
jle
pushf
push
add
add
dec
inc
dec
push
cmps
pop
xchg
cwde
dec
ret
cwde
cmp
in
bound
movs
and
jmp
std
jns
rol
aam
imul
retf
jnp
rcr
int
mov
aad
pmullw
sub
mov
js
inc
movs
shr
dec
mov
add
pop
pop
out
jmp
mov
mov
sbb
hlt
mov
hlt
pop
mov
jg
dec
xor
mov
rcr
(bad)
jbe
mov
cmp
inc
cli
and
hlt
mov
daa
inc
sbb
and
fist
inc
jmp
push
xlat
add
inc
(bad)
dec
enter
adc
jo
das
aas
js
inc
pmaxsw
scas
xchg
push
fcomi
rcr
mov
push
retf
inc
imul
xchg
ins
fisubr
cmc
test
push
mov
and
jp
cmps
sub
mov
xor
mov
pop
adc
dec
icebp
inc
in
mov
xchg
inc
das
cdq
dec
or
adc
scas
cwde
jnp
daa
inc
dec
pop
inc
enter
lds
movs
daa
sub
xor
inc
shr
push
pop
call
int3
clc
mov
inc
stos
in
inc
jmp
lea
stos
sub
push
adc
addr16
cld
cmp
and
cmp
sub
cmps
xor
cmp
popa
shl
daa
pop
jae
movs
mov
dec
sbb
sbb
xlat
mov
or
pop
xchg
lahf
aas
inc
repnz
call
jmp
shl
cmp
daa
jmp
sbb
and
and
sub
sbb
idiv
mov
push
adc
and
jg
outs
jmp
clc
sub
mov
pop
call
push
inc
pop
int3
dec
ins
jne
ror
out
pushf
test
fistp
jns
lods
and
xchg
xor
neg
sub
mov
jmp
xor
dec
xchg
movs
es
test
add
test
aad
aas
adc
or
dec
mov
rol
mov
mov
fist
cmps
retf
xor
xor
retf
call
xor
sub
in
ins
popa
mov
pop
xchg
cmp
jae
bound
shr
fild
sbb
clc
arpl
pusha
jp
icebp
dec
sar
push
xlat
mov
sub
enter
jnp
repz
(bad)
jl
hlt
jo
jp
inc
int3
mov
and
mov
jl
stos
pop
pushf
push
push
and
push
mov
and
rcl
xchg
mov
(bad)
and
mov
adc
std
mov
mov
lds
js
xchg
dec
aaa
sti
fcmovnb
jl
test
mov
mov
inc
aas
ror
sbb
retf
es
stos
in
lods
jge
xor
cli
inc
arpl
mul
stc
pop
js
pop
jecxz
cwde
mov
inc
aaa
adc
pop
sbb
and
psllq
sub
sub
ja
lods
(bad)
in
mov
in
adc
jmp
fsubr
lock
xchg
add
sbb
mov
imul
jge
mov
pop
pop
pop
push
hlt
out
fidiv
xor
repnz
sub
sub
sti
mov
sbb
cwde
retf
mov
test
add
mov
call
cmp
xchg
and
sar
cmp
shl
rcl
mov
inc
adc
ds
std
jp
test
aad
out
outs
cmp
xlat
sub
or
xor
sbb
sub
and
mov
ds
xor
adc
je
jl
jne
rcl
jp
mov
dec
inc
scas
bound
jmp
jg
fist
mov
xchg
mov
movs
push
inc
xchg
into
sbb
lock
ja
out
fstp
addr16
adc
stos
push
vmwrite
mov
fadd
outs
sbb
jbe
sbb
imul
test
add
pushf
inc
xor
dec
repz
push
mov
mov
std
and
push
pop
call
sahf
lds
lods
popf
lahf
push
ss
mov
movs
mov
pop
jne
xor
add
add
lods
cli
rcl
ja
repz
push
adc
fidivr
jae
sar
jmp
scas
in
repz
and
fstp
jno
das
jle
and
ffree
jne
push
xor
retf
ret
adc
inc
dec
pop
lock
das
call
jecxz
or
mov
mov
mov
icebp
dec
cli
dec
test
and
mov
adc
in
shl
rol
sahf
popa
dec
imul
mov
loopne
xor
repz
push
mov
daa
ds
adc
cli
push
daa
cmp
pop
mov
xchg
mov
loopne
push
xchg
in
scas
inc
mov
dec
(bad)
inc
pop
xor
or
jge
mov
cmp
push
sti
retf
or
sub
nop
or
outs
std
repz
stos
out
mov
inc
loope
xor
sbb
or
mov
adc
dec
adc
in
xlat
cmp
xor
inc
jmp
add
cmc
jmp
ds
rol
int
sub
cmp
pop
test
pop
push
cli
jnp
pusha
mov
xlat
cmp
push
jo
xor
or
add
mov
mov
scas
xchg
inc
pop
sub
inc
fistp
sbb
mov
pushf
(bad)
xor
cli
dec
ja
dec
mov
pop
cli
cmp
cmp
xor
xchg
and
iret
cdq
repnz
pop
(bad)
int3
shr
fldcw
add
fnstenv
push
mov
jno
call
sub
push
cmp
xchg
pop
lods
cld
dec
jle
push
(bad)
pop
pop
pop
mov
add
push
pop
adc
repz
mov
push
inc
push
cdq
or
add
jmp
inc
addr16
or
cdq
pusha
in
mov
mov
fcomip
rol
loop
adc
(bad)
mov
jle
mov
xor
xchg
push
and
pop
pop
neg
cli
xchg
pop
inc
aaa
lds
paddd
imul
bound
loop
ret
das
clc
pop
inc
adc
retf
test
dec
popf
push
dec
cmp
mov
repnz
hlt
test
in
xchg
mov
fwait
mov
stos
fisub
adc
jle
lea
leave
ins
out
bound
repnz
sbb
push
pop
mov
scas
int3
jb
(bad)
retf
sti
cmc
inc
ja
lods
leave
pop
sar
or
and
jae
inc
pushf
dec
lahf
cld
daa
or
xchg
mov
dec
jg
ins
outs
jne
clc
aaa
int3
mov
dec
jns
push
mov
dec
adc
das
je
imul
xchg
ins
shl
fsubr
cmps
push
jns
sub
inc
out
add
daa
sahf
push
lea
addr16
fadd
cwde
addr16
mov
loopne
sti
sbb
out
ss
es
or
dec
push
out
inc
and
sahf
ds
cmp
call
fnstsw
jmp
dec
adc
sar
sub
pusha
mov
push
and
fbld
mov
shr
push
mov
jne
jno
pop
scas
push
push
cmc
or
add
adc
std
sub
sub
retf
mov
les
mov
stc
and
fisubr
sbb
mov
mov
mov
adc
ins
int3
fwait
cwde
out
sbb
inc
arpl
push
in
retf
arpl
fdiv
xor
pop
xchg
add
test
cmp
std
call
push
jno
xor
adc
add
mov
popf
into
ror
sbb
cmp
dec
mov
cmp
fsubr
aaa
inc
mul
push
popa
dec
mov
les
ins
push
fadd
pop
je
pop
(bad)
cmp
jmp
jmp
push
(bad)
or
pop
sub
fild
das
pop
jae
cwde
mov
cdq
ficom
clc
and
inc
dec
das
cmp
dec
adc
inc
mov
cmc
adc
pop
jl
pop
xchg
into
out
push
xor
adc
out
jno
xchg
imul
cld
pushf
jmp
or
repz
mov
scas
in
ror
mov
jl
inc
fdiv
xchg
int3
push
test
ret
sbb
scas
pop
clc
mov
cs
scas
ror
loop
dec
mov
jae
sub
iret
stos
(bad)
mov
adc
or
mov
cmp
sub
push
sbb
cmps
(bad)
cmc
push
jp
xlat
inc
or
(bad)
push
cwde
mov
cli
sub
bound
xchg
sbb
ss
add
mov
mov
push
sar
add
adc
push
shr
jo
cmp
shl
clc
xor
sbb
cmp
mov
xchg
imul
pop
jne
pushf
mov
popa
inc
imul
xor
push
int3
stc
jb
cmp
stos
aam
adc
scas
pop
sbb
push
gs
pop
xor
adc
mov
add
pop
inc
out
jo
jns
sar
push
test
daa
fnstcw
ins
adc
enter
inc
jecxz
jb
call
sub
rol
push
jbe
(bad)
jae
pop
ds
jle
ja
jne
bound
dec
cmp
pop
dec
out
push
cmp
cmps
cdq
loope
dec
cld
push
lods
iret
xor
xchg
repz
xor
xchg
and
imul
loopne
int3
rcr
xchg
into
bound
mov
sbb
into
test
(bad)
jg
and
sahf
adc
cwde
cwde
daa
mov
cmps
fdivr
mov
arpl
inc
nop
ror
ret
jl
or
iret
push
mov
ins
jno
cmps
stos
dec
inc
leave
and
pop
jmp
sbb
(bad)
imul
or
ja
retf
xor
fwait
cmp
and
xchg
or
push
cmc
ds
fs
mov
test
sbb
sub
cmp
sar
push
(bad)
shl
add
dec
js
push
call
mov
movzx
mov
fnstsw
xchg
pop
xchg
jne
push
int
mov
xchg
pop
pushf
xchg
nop
ja
lea
mov
mov
mov
aaa
movs
pop
ja
dec
jle
fisub
add
jno
xchg
push
into
xchg
mov
mov
fisttp
dec
jmp
pop
pop
push
repz
cwde
push
in
dec
jmp
scas
enter
xor
(bad)
cld
rcr
jl
out
popa
cmp
mov
pop
outs
lea
push
lods
jmp
add
lock
fld
sti
fwait
jg
mov
cld
pop
hlt
add
jb
jg
inc
mov
push
enter
call
pop
xor
xor
inc
add
sub
retf
jmp
pusha
bound
xor
mov
in
or
cs
test
loopne
pop
add
icebp
push
jb
cmc
stos
adc
add
js
mov
cmps
jge
shr
xor
mov
pop
add
mov
dec
into
mov
jmp
stos
loopne
sbb
lahf
push
cmp
sub
fwait
mov
stos
xor
mov
fbstp
dec
adc
ins
push
cmps
pop
int
or
jmp
loope
add
mov
inc
retf
stos
call
out
lds
sub
cld
sub
shl
push
lds
xchg
data16
or
rcl
gs
int
sub
mov
pop
inc
test
inc
ror
pop
xchg
cmps
mov
sbb
pop
and
cmc
jg
out
jbe
xor
cmp
outs
in
xor
inc
imul
sub
jecxz
push
sub
mov
pop
add
adc
mov
hlt
mov
and
jbe
adc
add
and
and
jle
pop
call
ret
mov
sbb
pushf
jp
out
mov
cs
fsubp
adc
test
imul
xchg
fdiv
loop
mov
fbld
sbb
outs
loopne
out
add
pop
loope
lods
cmp
jmp
mov
sub
xchg
jb
popa
xor
cmc
lods
cli
jle
sub
popf
es
ins
adc
dec
int
ja
pop
(bad)
and
imul
lds
fcom
ret
xchg
test
popa
mov
in
xchg
sbb
fcmovbe
je
mov
daa
les
hlt
movs
fs
sbb
pop
add
imul
mov
mov
add
inc
scas
or
sbb
test
cmp
cmps
scas
mov
ret
jmp
iret
xchg
in
sbb
movs
push
stc
dec
cmp
mov
pop
mov
imul
inc
popf
neg
jl
aas
sub
test
stos
add
pushf
lods
rcl
dec
out
jnp
loopne
shr
mov
lds
or
stc
sbb
outs
test
dec
outs
aas
push
xor
retf
jno
jmp
cmp
jmp
pushf
mov
(bad)
cmp
adc
loop
std
mov
sbb
xchg
and
icebp
js
sub
push
retf
pop
lods
out
fld
push
push
into
cmp
fsubp
sbb
leave
xchg
cwde
push
jmp
js
pop
mov
push
mov
fisub
mov
call
dec
cmp
cmp
dec
pop
repnz
pop
pop
sub
sbb
add
add
cmp
ins
(bad)
mov
gs
mov
imul
cli
sub
or
push
in
jmp
mov
push
dec
and
div
int
jae
push
jbe
mov
mov
loopne
or
cld
retf
or
icebp
and
mov
xor
jns
stos
(bad)
adc
xchg
sub
pop
and
jbe
jne
rcl
jns
dec
or
adc
mov
sahf
dec
in
imul
and
fild
pop
jmp
xor
nop
sbb
cmp
and
mov
cmp
cmps
icebp
inc
sub
and
test
icebp
outs
inc
push
daa
mov
inc
aam
sub
dec
dec
xchg
push
pop
mov
sbb
lods
fs
push
jge
jnp
or
dec
shr
xchg
shl
fisubr
mov
xor
push
xor
sub
loope
(bad)
hlt
pop
or
leave
(bad)
adc
add
and
mov
cmp
aaa
or
test
(bad)
push
retf
cmp
dec
retf
add
xlat
jno
fild
push
add
sub
and
cs
ss
or
and
mov
and
inc
or
jae
sbb
dec
arpl
mov
fwait
dec
sub
test
jmp
or
ss
out
xchg
push
cmp
gs
xor
bound
dec
mov
mov
mov
dec
xor
pop
jle
sub
nop
fdiv
add
xchg
loop
das
cmp
scas
nop
loopne
adc
inc
dec
cmp
pop
push
cli
mov
sbb
retf
jne
or
cmps
xchg
cmc
mov
mov
dec
push
(bad)
in
adc
xchg
pushf
xor
aam
stos
idiv
imul
retf
sub
mov
out
in
xchg
push
dec
cmps
jge
mov
popa
dec
jbe
push
ins
jb
pop
mov
std
jl
xchg
ds
clc
mov
or
lock
mov
ja
pop
mov
daa
or
mov
iret
pop
adc
jmp
stos
xchg
fbstp
jmp
mov
in
scas
in
mov
ja
xchg
rcl
jmp
lea
imul
mov
xchg
sbb
cmc
dec
in
sbb
inc
push
and
mov
sbb
cli
test
pop
mov
cmp
sbb
out
push
sbb
xor
sbb
sbb
ror
enter
(bad)
sbb
xchg
sub
add
dec
ja
std
call
and
cmps
repz
faddp
dec
pop
sub
arpl
cmc
sbb
stos
inc
mov
cli
and
jge
int3
sbb
pop
sub
sti
inc
les
add
push
xchg
mov
jmp
mov
pop
ror
cmp
enter
jg
inc
cdq
dec
fs
push
movs
xor
cmp
jno
(bad)
ficomp
add
dec
int
loop
push
pop
mov
adc
xrelease
jo
aam
jnp
fucomp
mov
add
cwde
fsubr
xor
push
cmp
dec
ins
cmp
adc
repnz
dec
leave
sub
mov
adc
sbb
or
dec
test
and
ret
std
sbb
idiv
mov
mov
adc
out
cmps
mov
inc
sub
or
arpl
test
rcl
test
jmp
hlt
loope
pop
ds
mov
div
mov
mul
and
ja
xchg
cmp
sub
iret
cdq
pop
cmc
or
sbb
adc
mov
(bad)
in
(bad)
jmp
inc
xor
call
sub
scas
jecxz
jae
enter
jmp
in
or
mov
stc
sahf
or
sub
mov
(bad)
call
idiv
sub
push
mov
adc
jb
test
mov
imul
pop
xor
pop
nop
add
and
sti
adc
cmp
sbb
add
shr
scas
call
jg
in
mov
gs
add
xor
dec
adc
ins
mov
leave
xor
in
(bad)
inc
mov
iret
cdq
sub
leave
shl
mov
inc
dec
dec
pop
xchg
fist
int
inc
push
outs
hlt
sbb
jle
push
test
(bad)
mov
mov
fcmovne
lods
jp
mov
shr
cmc
dec
and
jno
mov
fs
fistp
test
scas
stos
js
mov
xchg
mov
retf
addr16
jbe
add
mov
jmp
jbe
arpl
dec
sub
test
call
test
jne
fisubr
mov
adc
or
push
inc
rcr
mov
cmp
out
jbe
loop
pop
add
repnz
fisubr
leave
leave
add
(bad)
pop
cld
jno
(bad)
(bad)
and
scas
fcomp
mov
fucomi
and
mov
jecxz
leave
in
cmp
mov
nop
sbb
adc
fsub
retf
add
mov
and
repz
push
push
das
inc
sahf
sbb
sahf
and
and
push
or
(bad)
shr
jge
shl
sub
pop
mov
ret
and
fld
pop
in
bound
scas
dec
add
sub
pop
xchg
and
sbb
loope
mov
mov
cmp
mov
xor
xor
std
push
jecxz
popa
add
cmp
scas
and
mov
popf
adc
or
push
in
scas
mov
cld
jl
imul
mov
jl
js
mov
pop
sahf
xchg
pop
inc
loopne
ja
jne
push
bound
leave
cmp
xor
jne
outs
(bad)
sti
push
jne
sbb
js
sbb
retf
inc
pop
in
inc
fistp
sub
jl
add
stc
stos
rcr
loopne
dec
or
add
mov
fisub
das
jl
out
jae
dec
das
push
(bad)
cmps
out
mov
pop
pop
lods
inc
pop
lods
pop
sbb
(bad)
dec
cmp
cmp
stc
dec
push
cmp
bound
test
push
pop
inc
popa
pop
call
xchg
adc
rcr
pop
icebp
(bad)
xlat
leave
jae
or
cmp
jns
sub
loopne
xor
rol
sahf
push
push
call
stos
xor
pop
int3
scas
mov
sub
adc
mov
jmp
sub
rcr
adc
repnz
mov
jge
cmp
mov
mov
enter
pop
test
or
sub
inc
adc
and
sbb
add
test
or
mov
in
mov
sbb
push
dec
dec
bound
xrelease
mov
xor
sti
out
int3
xchg
lods
sub
pop
fdivr
cmp
add
jl
xchg
std
pop
sub
(bad)
nop
out
(bad)
in
xchg
in
or
scas
xchg
and
outs
or
dec
xor
sub
aad
or
sub
and
popf
jl
das
test
(bad)
jge
aam
push
in
data16
pusha
sbb
out
jo
in
dec
ds
popa
imul
int3
mov
and
popf
pop
sti
add
inc
cmp
cs
repz
ja
(bad)
out
pop
adc
jmp
mov
fwait
outs
mov
ins
cmp
js
loopne
mov
or
out
adc
jmp
aaa
jmp
aad
push
sbb
jne
jb
fwait
int
inc
jle
aaa
jecxz
sbb
mov
jg
cwde
pop
cmp
int3
int3
stos
push
retf
pop
icebp
or
sub
pop
and
aaa
clc
icebp
jne
xor
test
xor
out
or
sub
ja
retf
mov
mov
push
or
aas
nop
fcomp
add
icebp
jno
cmps
adc
fsubp
psubq
mov
push
cmp
jle
lods
test
lea
or
popf
fistp
and
stc
sub
ins
cmp
icebp
push
(bad)
aam
dec
mov
mov
jae
loop
adc
bound
jecxz
repnz
jbe
imul
fsubr
adc
push
mov
shr
pop
(bad)
out
jae
in
std
mov
pop
add
adc
sub
xchg
fsub
sub
pop
jb
sub
not
rcr
shr
xchg
xchg
xlat
push
cmp
sahf
hlt
inc
popa
outs
outs
sbb
sub
dec
test
imul
inc
mov
pop
cmp
arpl
xor
mov
sbb
sub
les
es
loopne
push
lds
jns
and
aaa
and
jge
scas
adc
push
dec
dec
adc
outs
ret
sbb
stc
aaa
call
retf
push
xchg
inc
lods
test
xchg
xor
inc
lock
rcl
std
outs
aad
retf
fidivr
jnp
into
xchg
jns
aam
cmp
sub
mov
or
xlat
inc
mov
iret
dec
adc
loop
sbb
int3
xchg
adc
jne
sub
push
imul
mov
out
sbb
jmp
mov
pop
mov
mov
push
xchg
fsub
xchg
repnz
xor
mov
jg
cmp
nop
push
test
stc
xor
mov
cmps
loop
daa
sbb
(bad)
jl
sbb
xchg
inc
jno
iret
div
mov
aad
push
das
cmp
je
inc
xchg
call
pop
hlt
mov
jbe
fs
ja
pusha
xchg
mov
xchg
leave
popf
xor
push
in
sub
ror
mov
inc
cdq
cmps
cmp
out
or
ret
movs
adc
rcr
jle
dec
ins
pop
stos
mov
in
add
xor
jae
movs
js
pop
add
inc
out
xor
psubusb
inc
jno
in
add
push
(bad)
mov
out
xchg
shl
mov
dec
cmp
mov
ret
or
xchg
mov
jp
xchg
retf
arpl
inc
mov
(bad)
les
mov
xlat
idiv
push
inc
inc
ret
push
mov
movs
push
pop
adc
into
repnz
push
push
test
push
icebp
fwait
popf
sahf
jle
bound
pop
pusha
fiadd
fsubrp
jmp
std
add
and
xchg
stc
ds
movs
pop
push
imul
pop
push
inc
jnp
pop
iret
aaa
sti
pop
adc
pop
add
stos
cmp
neg
ret
stos
jne
pushf
aas
add
(bad)
data16
or
lock
dec
inc
mov
mov
sbb
sbb
mov
jmp
jae
xlat
(bad)
les
ficom
loopne
push
test
push
arpl
das
mov
int3
dec
ins
sub
and
retf
mov
mov
ss
out
imul
or
jle
pop
xchg
push
fdivr
loop
fimul
(bad)
out
ret
jmp
mov
loope
push
lahf
mov
sbb
in
gs
call
mov
inc
das
sbb
neg
pop
dec
call
sub
int
pop
pop
and
xlat
pop
adc
pop
adc
fs
jp
or
xchg
xchg
in
repz
lods
in
and
sbb
inc
xchg
loope
add
daa
dec
dec
push
push
push
clc
mov
imul
push
and
or
dec
mov
add
fcmovnb
into
cmp
in
icebp
xchg
fbstp
xor
sbb
or
xor
pop
stos
mov
imul
fwait
lock
lea
push
out
mov
fst
sbb
cmc
sbb
pushf
jnp
and
mov
or
jnp
daa
xor
xchg
add
adc
sar
mov
pop
xchg
push
sub
pop
outs
push
xor
xchg
mov
(bad)
mov
cmps
pop
inc
mov
fmul
push
jge
inc
inc
pop
mov
cmp
mov
push
aam
mov
cld
and
idiv
mov
(bad)
addr16
jecxz
loopne
or
pop
(bad)
nop
xchg
or
test
pop
pop
dec
adc
aam
(bad)
cwde
inc
mov
nop
mov
hlt
stos
xchg
push
out
daa
stc
scas
xchg
imul
ins
jne
pop
jl
ins
cmp
mov
jb
jp
or
jmp
cmps
or
add
and
mov
sub
lahf
xor
cs
push
test
xchg
int3
int
(bad)
shr
lods
push
lds
(bad)
(bad)
cmp
ficomp
pop
loopne
into
iret
xchg
out
lods
xchg
jae
pop
cmp
je
jbe
outs
add
mov
adc
popf
push
lds
int3
sub
mov
pop
and
push
ja
add
das
cmp
pusha
and
adc
mov
mov
cld
icebp
mov
xor
push
call
or
les
frstor
jecxz
lea
adc
das
push
and
or
int3
int
fwait
addr16
mov
pop
push
adc
jge
shl
and
stos
aaa
mov
test
stc
test
fisub
int3
inc
popa
and
or
pushf
mov
push
neg
dec
ins
out
sub
jg
icebp
adc
bound
ret
iret
outs
xchg
shr
outs
movs
dec
(bad)
jmp
cmp
not
cmp
cmp
mov
cmp
aas
mov
frstor
mov
push
in
jb
xchg
jp
push
inc
out
in
jl
push
cmp
pop
sar
ror
mov
outs
outs
(bad)
push
gs
enter
jnp
stc
mov
aaa
sbb
jne
mov
and
jo
repz
sbb
movs
dec
clc
inc
cmps
jge
jl
pusha
cdq
adc
movs
pop
add
and
cld
loopne
inc
ss
popf
iret
sbb
aam
dec
call
adc
movs
mov
xchg
(bad)
mov
scas
gs
addr16
or
jne
xor
inc
lea
ins
mov
or
mov
jmp
xor
bound
je
jns
or
sub
push
fst
mov
xchg
stos
push
xor
outs
je
jno
in
push
jno
scas
mov
pushf
xchg
dec
repz
mov
adc
jo
sbb
fcomp
cmc
inc
cmp
movs
ret
scas
fsub
pusha
mov
mov
icebp
fmul
sti
adc
es
fdivr
sub
cmp
dec
jl
cmps
add
cmp
test
imul
jmp
mov
pop
aam
and
push
pop
cmc
push
xchg
aam
ret
cmps
sar
hlt
sub
int
mov
adc
fcmove
jnp
(bad)
imul
cmp
and
push
add
jp
dec
test
mov
mov
in
jo
inc
or
stc
mov
xlat
mov
aam
jecxz
outs
push
push
scas
ds
aas
mov
sub
jnp
mov
xchg
popa
push
(bad)
xor
mov
cld
or
fst
loope
push
cmp
dec
enter
and
xlat
xor
mov
and
ret
or
cdq
xchg
shl
mov
fsub
and
mov
daa
mov
mov
or
lock
pop
adc
stc
leave
dec
sbb
push
jl
jno
fisttp
cmc
xchg
(bad)
mov
mov
push
call
int3
or
xor
push
xor
push
sub
int
leave
lahf
pop
xchg
jmp
inc
shl
dec
add
xchg
add
out
outs
push
mov
cmp
push
loope
in
inc
ds
push
retf
mov
test
outs
stos
das
add
ror
sub
arpl
xor
add
and
inc
pop
mov
ds
les
push
mov
add
mov
mov
push
call
xchg
es
nop
(bad)
movs
jecxz
add
xchg
and
test
or
cmp
mov
call
push
push
xchg
mov
push
and
retf
fsub
add
lock
jbe
mov
xchg
fldenv
jl
sbb
inc
(bad)
ins
xor
les
mov
push
pop
into
sbb
pop
bound
sahf
xchg
jmp
(bad)
in
ja
jns
aas
xchg
push
les
shl
sub
lea
call
pop
add
rol
in
outs
fimul
and
jno
jnp
ds
xchg
dec
xor
cdq
aam
xor
or
fdiv
mov
fwait
add
jmp
ret
addps
mov
sbb
and
ret
retf
call
outs
sbb
inc
sahf
les
inc
daa
jge
adc
push
data16
retf
sub
cmps
lock
xor
adc
mov
mov
push
pop
cdq
out
mov
xor
jmp
stc
cld
aad
sahf
or
inc
add
adc
sub
cli
pushf
retf
or
aam
pop
jne
movs
aad
dec
cmp
jmp
jae
imul
fwait
pop
fcomp
jge
ret
out
jbe
xor
popa
cmp
ret
push
push
pop
dec
or
(bad)
je
shl
aad
and
movs
mov
jp
test
test
jne
ror
xchg
and
sub
out
leave
push
and
in
pushf
mov
push
mov
sbb
sub
jne
dec
in
ins
cmps
push
add
pop
mov
mov
ins
aad
jae
(bad)
xor
(bad)
jb
xchg
lahf
inc
adc
jns
mov
(bad)
in
loope
inc
mov
dec
fdiv
mov
mov
xchg
cwde
and
out
(bad)
in
rcr
arpl
push
cmp
mov
pop
xor
push
mov
and
mov
gs
mov
repz
sbb
add
ja
out
mov
ret
idiv
test
xor
jns
sub
out
mov
mov
cmp
push
mov
aad
bswap
sbb
add
and
pop
lds
lahf
iret
mov
mov
inc
dec
clc
push
idiv
mov
push
ds
frstor
mov
dec
inc
cmp
or
arpl
pop
scas
pop
add
std
loope
mov
push
add
mov
fisubr
cwde
sahf
jl
adc
aam
in
addr16
aas
shr
mov
jle
rol
loopne
jecxz
dec
dec
cmp
or
adc
sbb
ja
dec
mov
out
dec
clc
(bad)
jg
(bad)
and
dec
je
hlt
mov
fdivp
push
(bad)
js
sbb
mov
push
add
mov
cmp
imul
jno
mov
movs
outs
dec
inc
test
xor
pop
in
les
out
test
in
or
(bad)
jae
jge
or
fistp
xchg
lods
ret
cmp
cmps
mov
add
mov
fbld
xchg
sub
leave
retf
rcl
rcr
push
pop
stos
aad
xchg
ds
sbb
in
lock
leave
mov
rol
aas
loop
stc
mov
jb
frstor
cld
mov
mov
mov
sti
push
and
push
xlat
pop
mov
stos
or
push
xchg
cmc
movs
iret
or
call
mov
into
dec
test
int
mov
test
adc
nop
xor
xchg
add
out
loopne
xchg
stos
push
xchg
dec
push
push
je
mov
jns
ds
mov
mov
mov
vphsubwd
pop
rcl
mov
popa
push
dec
and
xchg
cwde
cdq
fwait
and
(bad)
repnz
or
pop
(bad)
sub
add
push
and
xchg
jo
dec
ins
and
jns
cld
and
mov
into
imul
mov
in
cmp
scas
push
neg
gs
mov
pop
stos
xor
jbe
cmp
lea
sahf
mov
sti
jae
mov
mov
jle
pushf
xchg
sar
jmp
jnp
rcl
dec
cmp
push
xchg
lea
xor
mov
xor
inc
sahf
enter
and
add
mov
js
inc
in
sub
xor
out
xchg
mov
mov
lods
repnz
mov
into
fadd
rcl
sbb
ins
mov
cs
sub
push
loopne
cli
dec
int
and
jp
xchg
jle
jmp
mov
jae
and
ret
lock
inc
retf
add
and
inc
cmp
lea
fst
ret
dec
popa
xchg
dec
je
call
pop
ins
adc
jo
sar
mov
fistp
out
xor
ss
cdq
retf
call
mov
sub
mov
xlat
xor
into
sub
inc
call
daa
push
loope
push
in
rcr
xlat
or
aas
pop
push
or
jae
stos
repz
xchg
test
mov
(bad)
loop
mov
push
and
adc
and
stos
add
mul
leave
div
retf
push
dec
test
dec
dec
rol
mov
fstp
pop
fcmovb
xor
xchg
out
fiadd
push
(bad)
jno
arpl
dec
jb
out
sub
je
adc
icebp
push
dec
out
add
pushf
add
int
les
loopne
mov
cwde
add
inc
sbb
call
sbb
(bad)
push
mov
mov
sbb
inc
mov
push
test
and
lods
jo
pop
pop
xchg
sub
xlat
jne
mov
pop
cli
add
pop
pop
cmp
mov
push
cmp
rol
push
les
cdq
add
mov
fdiv
or
xchg
lea
fist
adc
xor
mov
iret
mov
mov
hlt
cmp
xchg
mov
mov
sub
lods
bound
test
and
or
sub
in
mov
pop
lds
pusha
sbb
sub
jmp
pop
cmp
dec
cmp
js
xor
jno
add
sub
sbb
lahf
cmp
in
and
push
out
or
ds
aas
data16
gs
xchg
dec
jnp
out
push
inc
inc
and
jmp
or
mov
fxch
inc
leave
adc
call
push
push
imul
cmps
fwait
rcr
popa
pusha
add
in
dec
fisubr
int3
addr16
in
mov
out
fndisi(8087
fwait
(bad)
mov
jg
mov
mov
test
add
jno
jmp
out
addr16
jmp
pushf
(bad)
cmp
push
jmp
xchg
jecxz
(bad)
fnop
(bad)
movs
ss
xchg
and
mov
outs
mov
jmp
push
pop
or
ret
pop
gs
pop
mov
mov
(bad)
mov
dec
gs
cwde
mov
popf
push
mov
retf
pop
out
retf
pop
ins
fiadd
cmc
loope
xchg
sub
leave
outs
adc
fbld
or
dec
mov
pop
mov
inc
je
clc
and
push
call
mov
pop
shl
sub
and
cmp
aaa
retf
retf
into
mov
dec
ss
inc
xchg
test
dec
fnsave
stos
test
sbb
cmp
xchg
pop
std
(bad)
imul
or
mov
outs
mov
pop
add
leave
pop
or
and
lods
pusha
mov
push
jecxz
pop
dec
push
and
in
xchg
cmc
ins
test
(bad)
inc
ss
dec
jbe
or
dec
dec
add
fisub
cs
push
aaa
mov
hlt
fnstenv
mov
call
jg
cmp
mov
(bad)
pushf
jnp
shl
fstp
cmp
not
pop
enter
and
pusha
retf
mov
add
outs
rep
neg
push
hlt
jae
push
mov
fimul
out
ret
mov
mov
lea
not
push
xor
add
scas
inc
adc
call
push
(bad)
fs
push
jl
mov
sbb
sub
inc
dec
mov
mov
sub
inc
cmps
adc
dec
sbb
add
xor
mov
adc
jmp
cwde
pop
inc
mov
cld
out
(bad)
mov
mov
outs
cmp
imul
enter
fild
jecxz
push
or
mov
fst
enter
xor
mov
jns
mov
adc
stc
mov
jo
or
clc
cmps
mov
push
std
xchg
push
hlt
jmp
in
mov
movs
sub
mov
push
jo
movs
ret
sub
std
push
imul
sub
clc
or
fucomip
adc
(bad)
test
jns
call
adc
int3
(bad)
cmp
cmp
std
xchg
(bad)
sbb
and
jl
shl
int
(bad)
lods
xchg
mov
mov
mov
int
shr
aam
or
mov
aad
es
xchg
sbb
push
jbe
jge
cmc
sub
popa
or
mov
mov
push
imul
sub
(bad)
dec
into
jp
inc
stos
je
gs
xchg
fild
fimul
pop
cmps
aas
xchg
inc
sub
jb
loopne
pop
aad
ror
xor
mov
jno
mov
dec
push
inc
hlt
lock
or
or
outs
jno
das
rol
sbb
cmc
push
xor
mov
or
add
adc
push
retf
cmc
mov
push
xchg
and
test
pusha
jae
cs
adc
or
xor
pop
cwde
jnp
adc
hlt
mov
add
das
jp
test
mov
xchg
xchg
fsub
inc
ror
call
fwait
pusha
test
pop
jb
adc
mov
sbb
mov
xchg
shl
cmps
or
mov
test
test
mov
add
iret
pushf
xchg
push
or
pop
stos
and
aam
cmps
shl
xor
nop
jmp
mov
cli
cmp
jmp
cmp
and
aad
sbb
mov
jp
sbb
pop
adc
adc
mul
sbb
add
dec
mov
inc
iret
xchg
hlt
inc
jnp
mov
pop
imul
or
sbb
xor
(bad)
adc
arpl
addr16
lock
popa
or
in
popa
les
int
xchg
jb
or
test
dec
shl
leave
xor
cmp
fild
jno
mov
ror
cmp
sub
jmp
mov
fdiv
adc
nop/reserved
das
fstp
inc
inc
cmp
cmps
jl
mov
(bad)
ds
imul
cmp
add
cmp
jp
jl
mov
movs
and
push
fwait
test
rol
xor
pop
mov
push
icebp
mov
mov
test
jns
or
(bad)
sub
sbb
in
fild
shl
outs
sti
arpl
adc
adc
retf
js
cld
xor
mov
std
lds
(bad)
ret
xor
jb
scas
call
mov
mov
stos
mov
jb
mov
ins
fstp
xchg
cmps
(bad)
movs
ss
xchg
mov
pop
fidivr
or
sbb
pop
mov
adc
pop
test
ins
hlt
stos
mov
cmp
or
mov
cmp
push
neg
shl
dec
sbb
adc
les
lods
cmp
add
es
xchg
popf
cwde
fs
(bad)
aam
or
stc
dec
cmp
cmp
ret
iret
and
pop
jl
sub
sbb
stc
aaa
int3
mov
ja
retf
test
sbb
rcl
adc
xor
sbb
jne
push
inc
ins
dec
inc
push
loop
fs
(bad)
repz
or
in
inc
adc
movs
dec
jne
out
cs
cli
lds
sbb
inc
loop
shr
mov
mov
cmp
mov
inc
repz
pop
add
aaa
lods
jb
dec
and
xor
mov
pop
aam
dec
or
ficom
xchg
int3
jmp
clc
in
sbb
add
and
lods
test
mov
cld
test
mov
jl
lea
addr16
sub
or
dec
pop
fisttp
xchg
xchg
cmp
mov
fild
scas
pop
adc
pop
xor
test
fs
inc
repz
push
mov
jmp
or
test
mov
jae
jnp
and
push
scas
adc
xchg
mov
popf
ins
and
dec
outs
adc
inc
dec
and
xor
mov
aaa
retf
popf
sbb
adc
popf
(bad)
dec
jb
or
arpl
mov
mov
adc
outs
jmp
neg
idiv
sti
fnstenv
add
cmp
push
dec
pop
stc
mov
repz
xor
ret
pop
mov
mov
jmp
mov
sahf
pop
and
pop
pop
push
test
cmp
push
mov
outs
pop
mov
ds
add
jg
cmps
adc
xchg
in
mov
stc
pop
fisub
test
lods
mov
pop
cmps
fwait
xchg
(bad)
sar
shl
xchg
inc
pop
and
sti
inc
sbb
jg
mov
aaa
sub
jg
jmp
lds
rol
ins
mov
mov
mov
es
mov
daa
and
adc
pop
stos
xor
cwde
push
mov
jbe
fs
pop
enter
sbb
test
mov
jge
mov
inc
call
sar
popa
sub
test
adc
jnp
adc
inc
push
xchg
(bad)
mov
and
or
retf
add
xlat
xor
xchg
inc
and
adc
les
xor
mov
jno
push
icebp
adc
mov
popa
jmp
cld
pop
xor
or
dec
mov
mov
in
sahf
sub
xchg
outs
call
inc
cmp
sbb
in
mov
jns
mov
loopne
push
enter
pusha
ds
scas
mov
xchg
xor
xor
sub
aaa
outs
gs
pop
add
xor
test
dec
cmp
fcomp
imul
in
cmp
pop
sub
mov
xlat
sbb
sub
int3
xor
adc
sahf
and
scas
xchg
in
sub
nop
std
into
mov
mov
push
mov
xor
ins
pop
pop
call
push
pop
mov
adc
sub
div
xor
cwde
push
aad
pop
mov
int
adc
mov
xchg
daa
fs
sub
adc
call
shl
in
adc
scas
mov
repz
jns
jns
mov
mov
mov
pop
push
in
ja
repz
and
test
loope
movs
or
inc
jno
dec
mov
pop
rcl
sahf
ins
cmp
mov
jg
add
dec
lea
jg
std
pop
pop
inc
push
pop
mov
mov
call
inc
push
stos
sar
lahf
test
xchg
adc
cmp
retf
aam
shr
jmp
stos
mov
pop
jo
push
xchg
adc
push
push
int3
and
and
aad
aaa
jl
retf
push
mov
icebp
mov
pop
adc
sti
idiv
aad
dec
mov
jl
pusha
adc
rol
ss
xor
test
or
leave
dec
jns
rcl
loopne
push
or
retf
es
and
hlt
daa
out
jmp
mov
or
fnstenv
or
jne
retf
es
pop
call
call
push
icebp
ret
in
loop
cmp
pushf
into
stc
and
jns
mov
mov
loop
push
jb
and
fldenv
ja
xchg
cli
arpl
aam
out
push
sub
xor
add
movs
(bad)
call
repnz
mov
sbb
pop
sahf
xor
pushf
adc
std
add
dec
icebp
jle
hlt
aam
add
xor
cmp
sub
push
ja
jmp
sub
(bad)
aam
pushw
adc
adc
and
outs
xchg
test
outs
jbe
push
aad
sub
dec
pop
movs
push
and
iret
mov
in
ret
movs
jl
jmp
push
inc
shl
xor
adc
dec
xlat
in
cmp
xor
sbb
cmp
pop
pop
les
add
scas
icebp
mov
adc
in
mov
ds
(bad)
ins
sbb
imul
ins
movs
cld
sbb
jmp
iret
push
sub
pop
cmp
and
xor
js
movs
bound
loop
(bad)
rcl
outs
out
cmps
xor
ror
cli
push
xor
shl
fiadd
cs
pop
(bad)
leave
add
std
std
fwait
cmp
in
push
popa
ss
enter
pop
(bad)
adc
pop
sbb
les
mov
push
les
arpl
leave
xchg
iret
js
cmp
aaa
div
and
test
mov
xchg
sbb
push
cdq
jl
push
mov
inc
sbb
cwde
or
add
hlt
fwait
xor
lods
push
dec
add
jne
gs
ficom
and
pop
cld
xor
aam
xchg
clc
inc
addr16
mov
push
(bad)
sub
int
imul
ja
or
fisttp
js
or
cli
cdq
(bad)
push
sbb
or
cdq
mov
repnz
movs
inc
inc
gs
in
cwde
jp
xor
cmps
aas
fbld
arpl
fld
jnp
stos
jno
and
jge
push
dec
in
push
cmp
xchg
pop
inc
push
lods
adc
imul
cmp
adc
es
int3
mov
and
popa
and
mov
dec
aas
dec
pop
add
xchg
push
mov
xchg
push
mov
fnstcw
js
mov
outs
sub
es
adc
adc
pop
cs
leave
inc
or
adc
sbb
sbb
push
push
cld
sub
(bad)
or
movs
add
fisttp
in
mov
jp
xchg
xchg
pop
push
repz
and
jle
dec
push
jecxz
les
jp
mov
mov
ss
pop
dec
mov
and
xor
jno
clc
xchg
adc
sahf
clc
aam
aaa
dec
xor
dec
pop
dec
(bad)
xlat
push
xor
test
jo
add
xchg
loope
cdq
or
or
dec
sub
xlat
cmp
push
xor
adc
test
push
mov
cmp
stos
js
jmp
fistp
stc
mov
dec
loope
sar
push
push
xlat
inc
jb
jge
movs
sub
push
xchg
lods
cmp
gs
sbb
rcr
xchg
jo
push
dec
ror
push
inc
movs
int
das
nop
xchg
dec
test
dec
loopne
test
mov
nop
xor
sub
aas
aas
dec
fisub
mov
xor
test
js
push
pushf
or
push
add
mov
loope
ror
xchg
mov
js
es
jno
xchg
jbe
pop
pop
ficomp
or
push
loope
test
hlt
ja
push
stos
cmp
mov
(bad)
cmps
push
in
jb
sar
mov
push
js
and
add
stc
mov
jp
jmp
mov
mov
sbb
pop
inc
fadd
xchg
(bad)
mov
jne
xlat
test
std
sbb
pop
into
sbb
out
test
mov
loopne
push
push
mov
fld
lods
pop
xchg
fwait
jb
iret
int
loop
lods
ret
xor
inc
bound
xchg
movs
adc
stc
leave
push
aas
xchg
xor
into
or
dec
int
push
(bad)
in
push
or
cmc
nop
ror
loope
jl
sub
jno
aas
test
enter
add
mov
rcl
mov
lods
add
add
jmp
inc
mov
push
jne
and
shl
add
movs
mov
mov
cwde
int3
sbb
das
pop
sti
dec
adc
imul
add
cwde
out
int
mov
nop
and
jnp
mov
adc
mov
add
jns
mov
lea
inc
xor
xor
cmp
pop
xchg
fcom
mov
stos
mov
xchg
pusha
or
ror
pop
in
mov
aas
sahf
cs
inc
mov
jmp
push
jno
xchg
jno
aaa
sti
mov
mov
sbb
mov
adc
ror
push
cmp
dec
add
xor
fdiv
pop
fwait
cld
or
xor
inc
lahf
out
test
sahf
inc
push
popf
mul
pop
add
test
neg
pop
add
jg
xchg
sbb
push
xor
mov
inc
sbb
push
retw
arpl
push
aaa
push
ds
out
sar
fidiv
mov
sbb
add
sahf
push
inc
in
ins
jmp
and
ins
mov
dec
hlt
jo
push
test
add
xchg
jl
mov
pop
xor
xor
sti
and
inc
mov
jo
fcomp
push
scas
jp
xchg
xchg
cmp
int3
mov
stc
les
sbb
shl
xchg
ins
xor
cmp
mov
clc
repnz
adc
rcr
retf
inc
cmp
bound
sub
jno
test
jnp
jo
outs
loop
stos
adc
xlat
mov
data16
rcr
push
mov
pop
mov
mov
and
inc
ja
pusha
pop
movs
dec
popf
retf
dec
bound
loope
iret
movs
out
cmp
mov
fxtract
mov
sar
pop
lea
(bad)
stc
push
repnz
jnp
xor
das
ja
into
mov
pusha
add
call
ins
outs
leave
mul
gs
jl
test
iret
vminsd
mov
gs
xchg
sbb
mov
xchg
xor
in
mov
ins
mov
aas
xor
mov
push
out
add
enter
and
pop
push
shl
(bad)
cmp
push
xchg
(bad)
mov
cld
sub
fstp
xchg
cmp
mov
push
addr16
cmps
das
daa
(bad)
ror
cmc
mov
repz
push
xchg
sahf
nop
es
nop
cld
or
ds
cmp
lods
jns
sbb
repz
push
loope
outs
fwait
push
push
dec
adc
cmps
xor
push
dec
in
mov
arpl
cli
jp
mov
inc
jns
cld
xlat
inc
fnstsw
adc
imul
ret
in
ss
adc
inc
inc
add
mov
push
lods
inc
cmp
fcomp
dec
inc
jge
mov
addr16
mov
xchg
push
dec
popf
xchg
outs
adc
bswap
or
lock
adc
inc
push
mov
push
scas
mov
ret
out
sbb
gs
adc
pusha
cli
or
pushf
call
pop
jbe
inc
xchg
push
imul
sbb
fwait
xchg
xor
out
inc
je
sub
inc
inc
sub
mov
stos
push
(bad)
in
test
push
mov
ds
pop
mov
adc
cmc
and
push
fwait
mov
mov
jmp
dec
outs
int
leave
push
js
std
pop
pop
pop
sbb
fild
add
add
add
inc
fdiv
cmc
jl
jnp
ins
outs
icebp
fcom
neg
jnp
inc
push
popa
or
lahf
jbe
push
in
xor
bound
fwait
daa
xor
sub
dec
cmp
or
ror
xchg
bound
mov
jg
push
jae
(bad)
mov
mov
sbb
mov
out
scas
retf
inc
sub
imul
fcomi
mov
push
rcr
out
fst
inc
push
add
and
sub
sar
or
mov
dec
and
dec
imul
arpl
fwait
lods
addr16
aaa
test
push
push
out
ins
shr
lods
inc
mov
(bad)
mov
into
sahf
pop
aaa
jl
pop
out
push
movs
mov
pop
cdq
das
lds
push
and
shl
int
add
cmp
fild
enter
dec
scas
fsub
addps
sbb
and
xor
inc
sbb
sti
jbe
dec
test
(bad)
enter
shl
sbb
or
shl
ret
outs
fmulp
imul
jns
stc
fwait
cld
and
or
push
push
mov
fs
pop
sub
aaa
pop
js
inc
jmp
inc
movs
adc
xor
ret
pop
or
jbe
add
sbb
ds
scas
xchg
test
and
(bad)
sbb
sbb
add
xor
stos
xor
ret
sbb
sbb
push
ja
shl
call
inc
sub
push
and
mov
fwait
dec
xchg
fdiv
cmp
mov
pop
(bad)
daa
adc
fadd
xchg
pop
xor
add
cmps
ret
push
ret
jge
mul
popf
push
and
or
push
fs
inc
jecxz
fsub
mov
cld
jmp
lahf
pop
js
stos
xchg
mov
mov
lods
popf
mov
in
jl
retf
xchg
stc
inc
movs
and
loope
adc
repz
pop
dec
(bad)
fdivr
into
sar
fidiv
and
push
fs
xor
or
into
lahf
inc
xor
push
call
or
pushf
or
lods
inc
xchg
stos
shl
ja
mov
xchg
mov
sbb
cmp
add
cmp
scas
xchg
int3
mov
sbb
xlat
adc
xchg
icebp
xor
xor
jae
shl
ret
cmp
retf
sub
scas
jmp
dec
pusha
push
std
cli
test
or
fs
and
retf
adc
jl
dec
cmps
push
inc
cld
cmp
pop
addr16
out
jp
pop
pop
leave
jl
imul
dec
dec
xchg
fcom
sbb
test
mov
dec
lea
inc
jae
mov
cmp
sbb
sbb
inc
ja
sub
or
add
cdq
in
fs
jo
mov
iret
shl
es
popf
xchg
fdiv
push
rcr
dec
xor
jmp
and
shr
xchg
out
in
into
mov
in
or
or
push
jns
call
stos
(bad)
sub
jno
jne
add
and
fs
stc
or
pushf
(bad)
stos
pop
sub
outs
cmp
mov
push
sbb
aas
fsub
inc
add
dec
popa
and
jle
repz
mov
dec
add
jmp
xlat
add
data16
movs
stos
cdq
lds
int3
xchg
cmps
nop
ret
adc
push
push
mov
or
fisttp
jbe
ficomp
jmp
sbb
(bad)
pushf
pop
jno
cmp
xlat
inc
ret
ja
dec
jg
pop
and
popa
dec
sub
push
push
fsubr
add
mov
aam
mov
outs
or
out
dec
push
fild
pop
shr
mov
jecxz
stos
mov
ins
aaa
mov
clc
pop
shl
jge
dec
dec
cmc
in
mov
sub
lahf
cmp
jmp
scas
enter
mov
push
data16
cmp
xchg
and
dec
dec
outs
lds
in
in
adc
add
in
pop
xor
jmp
push
stc
in
mov
sbb
xor
out
retf
aaa
pushf
xlat
jge
jo
aad
or
pop
add
xor
push
cmp
adc
add
loop
push
jg
shr
inc
std
out
xor
push
adc
jp
popa
aam
addr16
add
cs
add
mov
sbb
or
shl
add
test
nop
add
adc
call
inc
repnz
stos
int3
repz
aaa
xchg
(bad)
sub
push
inc
(bad)
or
inc
lods
or
ins
pop
test
fucomp
scas
(bad)
enter
dec
xor
sbb
pop
mov
push
enter
add
clc
addr16
mov
int3
xor
or
dec
(bad)
mov
jns
das
jmp
mov
ret
scas
sub
test
push
and
dec
sub
mov
pop
out
outs
adc
std
xchg
jecxz
sub
pop
sti
rcr
pop
pushf
fsub
mov
call
pop
jmp
fdiv
sbb
dec
mov
xor
xchg
sahf
in
outs
mov
add
add
jns
iret
sub
lods
adc
lahf
push
mov
sar
mov
pop
es
pusha
fstp
xlat
and
data16
pushf
mov
ror
cmps
mov
lods
sbb
mov
call
iret
cmp
jae
dec
xor
sti
enter
or
(bad)
xchg
xchg
xchg
mov
(bad)
cmc
jns
test
je
pop
jmp
stos
xchg
xor
cmp
xchg
ss
add
xchg
adc
scas
push
mov
repz
clc
jb
sub
pop
mov
sub
stc
push
ret
jne
test
mov
shr
mov
and
loopne
dec
mov
cmp
xor
pusha
ins
inc
daa
loope
test
shl
pop
pop
lock
ss
in
add
out
cmp
pop
cld
sub
and
fstp
int3
hlt
and
jmp
push
cmp
lock
push
dec
inc
sahf
mov
push
jnp
movs
jmp
mov
xchg
movs
sub
jns
xor
ja
cwde
inc
xchg
sub
daa
pop
push
mov
lea
mov
lock
mov
sub
std
pop
in
adc
je
inc
xchg
cli
push
lahf
lea
cld
xor
inc
mov
nop
iret
jl
hlt
scas
(bad)
jb
mov
push
dec
jmp
cli
add
outs
xor
sti
and
dec
sub
inc
xchg
fst
aad
(bad)
std
mov
mov
jmp
leave
loope
or
fld
add
aas
(bad)
pushf
cmp
xchg
xchg
or
or
cdq
xchg
or
cld
aad
pop
xor
mov
adc
int3
imul
xlat
addr16
mov
sbb
sbb
xor
loope
enter
imul
dec
push
add
imul
stos
dec
push
fdivr
cmps
arpl
pop
dec
retf
std
dec
test
sahf
fist
jle
mov
jle
cmp
jns
gs
xchg
div
loop
dec
ja
and
adc
ror
fisttp
mov
addr16
jne
dec
dec
test
cmps
dec
lea
adc
xchg
inc
pop
xchg
adc
mov
cdq
sbb
and
add
xchg
mov
mov
inc
pop
push
push
and
jns
retf
push
aad
rcr
or
push
dec
fisub
add
sbb
mov
xchg
adc
mov
sbb
inc
cmp
addr16
mov
clc
add
push
push
jmp
clc
mov
mov
or
retf
retf
lods
xor
pop
mov
xchg
mov
add
das
mov
sub
stos
sbb
fstp
push
daa
aaa
scas
mov
cmp
imul
inc
fld
lahf
cmp
inc
pop
out
popa
in
mov
jmp
or
in
and
xor
and
pushf
or
or
mov
movs
fst
addr16
data16
neg
or
test
int
inc
add
xchg
movs
add
xchg
aaa
shl
xchg
out
in
adc
xor
aam
pop
in
ss
mov
les
inc
or
stos
aas
add
inc
iret
xchg
or
scas
xor
lock
xor
adc
enter
fistp
cwde
sar
mov
xchg
jge
loopne
stc
inc
cmp
cdq
xor
inc
in
out
xchg
repnz
sbb
pop
xchg
outs
cmp
pop
repz
loope
xchg
fldenv
test
stc
shl
mov
pushf
js
inc
mov
out
pusha
shr
fmul
ins
sahf
add
shr
sbb
ds
pop
mov
jne
ret
sbb
inc
xchg
mov
mov
call
mov
xor
das
clc
inc
push
cmp
inc
(bad)
mov
add
adc
das
cmp
neg
jg
xchg
jno
or
pop
rol
into
scas
aam
ins
inc
cmp
jl
sti
test
fild
outs
mov
push
mov
adc
cmp
retf
xor
pushf
enter
stos
xchg
repz
repz
mov
mov
jp
out
add
mov
jge
imul
inc
add
add
gs
or
or
sub
mov
xor
sbb
sbb
dec
and
in
mov
pushf
stos
add
push
pop
sbb
inc
xor
or
test
pop
retw
arpl
inc
pop
mov
and
dec
sbb
je
movs
icebp
or
mov
pop
sbb
mov
je
add
jo
popa
mov
sub
jno
jmp
shl
ins
lahf
push
std
movs
xor
pop
out
mov
call
mov
add
fdiv
xchg
ret
je
nop
popa
jl
movs
xor
mov
ror
push
pop
cmp
mov
inc
add
ror
(bad)
sbb
xor
cmc
outs
jl
xchg
in
call
jle
inc
imul
adc
xchg
xor
outs
or
jbe
outs
inc
push
or
lahf
(bad)
(bad)
add
pop
or
enter
and
dec
and
scas
(bad)
dec
aas
mov
xadd
cs
sub
es
adc
inc
mov
cmp
jp
data16
hlt
mov
jmp
xor
movs
pushf
das
cmp
pop
iret
jg
pushf
and
out
pop
fst
push
and
movs
add
xor
jmp
(bad)
mov
lods
xchg
cld
dec
popf
xor
out
inc
mov
sub
mov
jno
pusha
fldcw
push
imul
sbb
fnstcw
mov
pop
mov
(bad)
fcom
pop
jmp
dec
movs
jle
pusha
and
out
sbb
int
cmp
jmp
scas
in
iret
das
sbb
or
fucomip
shl
inc
xor
cld
mov
retf
jns
and
xor
cmp
in
stc
into
xchg
xchg
xchg
dec
xor
mov
jmp
jmp
pusha
ror
repz
and
sbb
push
jp
mov
out
lahf
dec
icebp
push
js
fsub
and
pop
test
loop
test
retf
daa
iret
mov
mov
and
or
mov
fdivr
jno
pop
int3
arpl
retf
adc
aad
jp
cdq
add
inc
dec
xchg
into
pop
add
test
and
mov
inc
xchg
sbb
sub
rcl
lock
inc
or
nop
push
pop
or
inc
inc
sub
addr16
inc
in
xor
mov
xlat
jmp
mov
cmp
(bad)
retf
mov
std
inc
xchg
sbb
mul
cmp
out
push
sahf
pop
cmp
push
inc
sub
sbb
movs
ud0
test
arpl
movs
icebp
xchg
fsubr
es
push
sub
ins
mov
mov
pushf
mov
inc
es
fisttp
mov
jmp
shr
leave
retf
test
out
adc
dec
jle
adc
inc
ret
bound
mul
js
xor
inc
dec
inc
mov
cmps
push
and
pop
sahf
stos
fld
fcomp
stc
mov
push
mov
cmp
ja
int
popa
(bad)
cmc
or
jg
das
push
sbb
icebp
arpl
jge
mov
or
(bad)
sahf
cli
rol
push
stos
cmp
mov
leave
xlat
pop
(bad)
or
sbb
in
pop
mov
ins
cwde
jne
mov
inc
lds
cmp
push
pop
inc
mov
xchg
fild
gs
fisttp
fistp
stos
rcl
pop
pushf
pop
adc
xor
fbstp
ins
aas
test
(bad)
icebp
jo
sbb
dec
jg
xchg
mov
sub
inc
aad
pop
mov
push
pop
jns
dec
sbb
into
sub
or
fst
mov
lock
or
push
pop
(bad)
cmp
iret
jg
dec
jb
cmps
enter
inc
fild
sbb
xlat
add
xchg
hlt
sub
jmp
inc
cmp
retf
int3
sbb
movs
xchg
fidiv
adc
mov
lds
xchg
mov
jae
xor
in
xchg
enter
test
aad
mov
test
sti
aam
cmp
mov
adc
sub
lods
xor
inc
repz
gs
movs
mov
pop
imul
xor
test
push
sbb
in
icebp
scas
out
mov
jno
ss
pop
std
out
add
movs
jg
out
pop
and
mov
mov
les
pop
aaa
retf
ret
ret
mov
lea
jg
and
jnp
cmc
inc
shl
sub
fsub
push
shr
cld
mov
and
out
repz
out
adc
fcmovnbe
mov
push
xchg
inc
out
je
loope
lock
pop
dec
or
push
pop
stos
adc
cmp
mov
enter
into
arpl
mov
pop
cmc
push
push
daa
push
or
cdq
out
cmp
cmp
arpl
mov
sub
stc
and
fcom
unpckhps
(bad)
mov
jb
aam
xor
cs
cwde
lds
(bad)
xor
jmp
push
das
mov
outs
jb
retf
jnp
leave
and
jnp
scas
mov
jmp
ret
out
popf
stc
shl
mov
cmp
pop
jno
jl
sbb
lods
rcr
jo
ret
pop
or
push
lock
and
pushf
rcl
out
jae
xchg
pop
aaa
(bad)
mov
repnz
mov
mov
imul
stos
xchg
int
add
icebp
loope
jnp
out
(bad)
out
cmp
cmp
jno
out
stos
ja
and
nop
pop
adc
lahf
push
out
cmc
test
ja
pop
mov
leave
lds
add
cli
pop
jp
rcl
test
out
in
mov
movaps
shl
or
cmp
mov
lahf
test
test
sbb
pushf
push
popf
xchg
mov
push
jecxz
ret
imul
push
aas
sar
outs
mov
inc
mov
(bad)
mov
test
cmp
pop
add
mov
push
xor
mov
and
add
test
imul
test
in
test
mov
jnp
scas
jno
xchg
clc
call
out
and
mov
pop
push
cmps
dec
push
ret
imul
push
xchg
lahf
stos
or
jg
stos
repnz
ret
add
out
jbe
pop
add
add
push
sub
mov
cwde
or
pop
sub
(bad)
loopne
daa
out
mov
sub
mov
dec
aas
mov
dec
pushf
gs
enter
adc
fwait
sbb
adc
out
ins
sub
fisub
stos
stos
jge
movs
data16
push
iret
push
repz
adc
clc
sub
in
fbstp
fstp
test
adc
stc
adc
(bad)
inc
pusha
mov
scas
xchg
daa
cli
cmp
and
ret
dec
push
add
and
xor
sub
repz
push
xchg
lds
into
dec
out
pop
sub
lods
jns
jae
push
test
lods
ret
push
(bad)
aam
js
xor
fadd
jbe
lea
push
fmul
add
cdq
ins
ins
mov
xchg
mov
jmp
push
xlat
sub
fwait
add
mov
push
xchg
xlat
imul
or
sbb
ror
pop
or
cwde
inc
retf
mov
fs
add
sub
fidiv
es
popf
je
mov
dec
mov
jg
les
xor
lods
imul
add
in
js
leave
cs
inc
add
ucomiss
mov
ja
add
fistp
cli
pusha
aaa
push
call
mov
neg
sub
dec
cmp
add
mov
clc
stos
pop
stos
or
gs
mov
icebp
xchg
xchg
inc
xor
sub
mov
push
push
popa
or
ins
or
inc
test
das
cs
jne
mov
imul
push
and
jge
aad
repnz
and
sbb
fst
add
cmp
sub
sbb
add
popf
xchg
jbe
movs
pop
movs
ror
mov
pop
(bad)
rol
fidiv
call
pop
repnz
in
dec
pop
dec
jl
mov
fisttp
rol
dec
fldenv
jb
or
jo
pop
div
sar
or
pop
pop
mov
mov
shl
dec
push
imul
jno
imul
arpl
mov
into
adc
test
aas
xchg
mov
cwde
mov
pop
(bad)
cmp
int3
push
rol
test
leave
int3
mov
xlat
in
cmp
movhps
aad
sub
jns
out
lea
(bad)
hlt
or
jg
or
pop
dec
lock
call
push
outs
test
or
ss
punpcklbw
sub
dec
mov
call
lods
ret
cmp
mov
imul
pop
mov
or
sub
inc
dec
inc
push
cdq
ds
into
push
jmp
mov
xchg
sub
ror
or
add
add
cs
in
stc
jge
aam
xor
sar
sub
test
sub
fild
add
ss
shl
sub
mov
adc
jne
pushf
sbb
test
(bad)
fst
rcr
and
adc
popf
dec
mov
mov
jmp
sub
pop
(bad)
jg
outs
lods
adc
jb
(bad)
cmp
fucom
clc
and
pop
ins
call
rcr
push
adc
or
retf
mov
sub
hlt
and
sar
xchg
sar
mov
inc
xchg
das
inc
adc
dec
and
or
cmps
lds
(bad)
cdq
push
mov
and
je
mov
xor
popa
cmc
sub
mov
int3
add
int3
daa
and
pop
das
out
sub
mov
outs
cld
sbb
mov
and
push
(bad)
retf
adc
lods
xchg
push
nop
ds
cmc
pop
fld
jbe
fistp
pushf
dec
nop
(bad)
mov
sub
jmp
inc
fwait
xor
cpuid
jno
stc
outs
xchg
inc
sbb
movs
jg
int3
mov
fwait
out
pusha
pusha
push
mov
jnp
sub
je
push
mov
lods
sub
loopne
cwde
add
mov
jmp
cmc
jae
and
adc
or
ins
clc
sub
inc
push
inc
in
sub
call
sbb
pop
jb
scas
xchg
xor
push
jg
movs
jmp
inc
cmps
push
sub
xchg
fwait
cmp
inc
mov
jmp
inc
(bad)
call
push
mov
test
pop
add
or
push
push
in
xor
ja
xor
mov
pop
mov
sar
ss
enter
sbb
push
mov
aaa
xchg
jl
mov
jae
xchg
dec
test
jbe
cs
or
and
icebp
mov
push
imul
mov
into
xchg
dec
test
in
xor
outs
daa
mov
cmp
add
push
jns
dec
inc
pop
mov
shl
cmps
lds
fadd
aaa
xor
arpl
inc
mov
je
adc
retf
stc
loopne
in
lock
pop
stos
in
jmp
push
sub
cmps
sbb
dec
cmps
xchg
test
mov
dec
jge
inc
shl
leave
xchg
icebp
movs
lds
and
sub
dec
sbb
lea
and
mov
push
fdivr
pop
shl
xchg
das
test
jnp
pop
push
or
das
pop
dec
adc
retf
leave
call
in
jl
pop
lds
addr16
rcr
les
test
mov
xchg
push
ret
mov
aas
shl
ins
adc
pop
xor
xor
enter
data16
push
sbb
pop
mov
ret
xchg
aas
push
stc
and
adc
mov
test
xchg
pop
mov
ror
lods
mov
and
add
push
ss
sahf
sub
adc
retf
cmc
call
xchg
pushf
mov
dec
shl
pushf
jl
nop
loop
in
pop
outs
cwde
sar
aad
lods
adc
adc
imul
sub
xchg
and
outs
stos
pop
shl
adc
in
xor
xchg
pop
in
shl
std
mov
jae
sub
push
int3
jb
pop
ins
aad
add
pop
adc
shl
pop
lods
lea
sub
jp
ins
pushf
xchg
mov
test
mov
cmp
inc
outs
pop
inc
fdiv
bound
data16
xchg
xlat
rcl
fisubr
sbb
mov
or
jno
sbb
lods
call
std
ja
mov
dec
cmp
mov
(bad)
stc
mov
adc
inc
xchg
scas
lahf
pop
gs
arpl
sar
into
sbb
cmc
ret
mov
scas
mov
outs
push
movs
cs
(bad)
leave
test
popa
fiadd
jbe
xor
ror
push
inc
into
or
dec
data16
aad
mov
(bad)
pop
xchg
and
fwait
jecxz
push
js
sbb
loopne
xor
dec
les
cld
push
mov
sub
test
in
xor
cwde
mov
fstp
fst
and
cmp
lea
cmps
adc
repnz
(bad)
push
loopne
lds
push
sbb
aas
maxps
stos
in
in
sahf
sub
out
in
xchg
push
shl
lock
mov
jmp
cmp
mov
jmp
cmps
(bad)
mov
rcr
inc
cmp
nop
jle
mov
pop
push
test
jmp
loop
mov
dec
push
jge
mov
mov
pushf
adc
fs
push
xchg
cwde
sbb
rcr
cmp
out
adc
fisubr
cmps
(bad)
pop
mov
in
jmp
int
mov
jb
shl
inc
jg
call
and
mov
in
cmp
push
add
inc
ret
jne
xchg
xor
and
ins
jnp
test
xchg
ror
mov
push
pop
test
int3
jg
std
retf
es
xchg
and
mov
push
stos
(bad)
es
rol
stc
fdivr
jne
into
xlat
data16
movs
cmp
and
push
jae
push
cmps
push
xor
loop
pop
jb
sbb
inc
xchg
fyl2x
(bad)
mov
cmps
mov
adc
mov
and
mov
push
sub
test
cmp
xor
push
in
jno
ret
jbe
loopne
leave
movs
inc
xchg
xchg
bound
jp
jnp
push
jp
push
jnp
fdiv
fsub
(bad)
mov
cld
call
test
pop
jecxz
push
loope
mov
loopne
(bad)
cmps
pop
ins
lods
xor
inc
adc
dec
imul
xchg
lods
and
test
cmp
sub
cli
mov
xchg
loope
sub
push
ds
ja
pop
je
add
jne
cmps
or
leave
cmp
adc
xchg
test
lahf
xchg
and
pop
jbe
ret
mov
dec
fdivr
mov
sub
pop
inc
push
push
cld
icebp
mov
cmc
mov
cdq
sub
inc
add
clc
and
dec
pushf
jl
add
pop
out
pop
push
aas
in
leave
push
ror
retf
(bad)
outs
outs
bound
stos
sbb
imul
pop
addr16
cwd
pop
ds
jp
das
mov
cmc
lods
popa
lods
ja
cmp
jno
loop
cmps
xor
ss
xor
mov
jb
jb
call
push
cmps
jmp
push
push
(bad)
ret
or
test
test
arpl
(bad)
xor
call
xor
inc
aaa
nop
inc
or
in
xchg
mov
mov
add
imul
mov
mov
test
ds
sbb
cmps
dec
add
ja
int
lahf
xchg
sub
imul
inc
sub
fadd
aaa
in
xlat
cmp
inc
mov
and
inc
and
xchg
sub
jg
xor
enter
outs
lahf
adc
xor
mov
out
fnstcw
sub
dec
(bad)
cmp
addr16
mov
pop
jno
xor
ret
xor
pop
mov
mov
(bad)
enter
push
mov
ja
mov
dec
and
lea
fld
add
hlt
xlat
jp
mov
imul
adc
in
xchg
xchg
adc
mov
xor
and
push
mov
repnz
xor
and
sbb
test
fwait
stos
jo
jmp
test
int3
or
fst
out
mov
adc
jae
in
pushf
(bad)
vmread
int
mov
mov
inc
xlat
push
ja
retf
lea
pop
push
popa
inc
stos
and
and
sub
add
pop
cdq
pusha
aaa
push
xchg
int
lds
add
push
xchg
hlt
jg
dec
je
inc
je
ds
mov
jl
pushf
lock
xchg
ins
xchg
push
inc
sbb
sbb
and
push
enter
push
xchg
jae
je
rcr
test
stos
ja
fld
idiv
mov
in
cmp
movs
mov
dec
xor
mov
xor
pop
fdiv
or
mov
mov
sub
mov
ret
push
lahf
push
in
mov
add
push
jmp
jo
jnp
or
jae
xchg
ins
repz
jb
push
ja
mov
neg
jge
sbb
sub
ss
cdq
test
and
jmp
and
adc
or
push
inc
es
and
pop
and
mov
in
cmp
jmp
jg
repz
rol
cdq
cli
adc
in
shrd
mov
jbe
sub
loopne
cmp
xchg
cmp
sti
xor
xchg
sbb
loop
gs
xchg
add
jns
std
push
mov
pop
es
mov
inc
cmp
hlt
mov
das
sub
add
test
pop
mov
arpl
enter
outs
mov
mov
jmp
in
sti
mov
gs
rcl
mov
(bad)
inc
adc
ds
cmps
and
fwait
inc
cmps
mov
icebp
xchg
ror
mov
mov
hlt
je
iret
inc
pop
test
pop
and
mov
adc
shl
xor
push
dec
call
mov
jb
hlt
inc
gs
cmp
outs
pop
int3
ins
xchg
dec
or
mov
cmps
pop
pop
cmp
data16
and
add
jge
xlat
cs
test
loope
adc
or
jmp
mov
inc
jo
je
out
loop
cdq
mov
add
frstor
lods
(bad)
pop
cld
imul
ins
stos
and
mov
cmc
outs
imul
shr
jne
add
mov
push
or
add
aaa
ds
cld
add
pushf
jmp
xchg
pop
lods
rcr
sbb
dec
adc
xor
sub
adc
(bad)
dec
in
das
fadd
repz
ret
fs
dec
sbb
xor
mov
push
outs
into
jno
mov
cmc
lea
in
(bad)
adc
ja
cld
lods
dec
std
(bad)
mov
test
rcl
(bad)
iret
mov
cmp
mov
sbb
sub
popa
cmp
pop
sub
inc
mov
fwait
mov
test
cld
int
scas
lahf
dec
adc
aas
push
cmps
dec
iret
into
push
sub
push
pop
je
lock
aas
jle
push
leave
mov
push
arpl
dec
arpl
mov
pop
xchg
mov
and
pop
xor
or
jle
sbb
cmc
and
hlt
sbb
ja
mov
push
(bad)
adc
and
sahf
mov
sahf
div
xlat
cmps
push
lods
in
out
push
rcr
jns
jge
pop
leave
mov
or
or
sbb
pop
test
iret
mov
imul
jb
ja
add
jl
cld
mov
push
inc
push
popf
cmp
push
lods
mov
enter
jno
jno
ins
pop
mov
cmp
add
xchg
jno
pop
xchg
jge
cmps
pop
adc
jmp
leave
sahf
(bad)
dec
dec
adc
mov
loop
es
(bad)
call
test
retf
cmp
fild
popa
dec
imul
cli
fistp
pop
sbb
cwde
retf
(bad)
sub
xchg
and
loopne
sbb
pushf
sbb
ins
dec
std
imul
cli
nop
push
jmp
rcl
push
xor
mov
outs
fnstsw
or
mov
mov
stos
cmps
cmp
mov
ins
loop
imul
dec
dec
xor
sub
scas
mov
jnp
push
je
mov
dec
jmp
loop
xchg
(bad)
aad
sbb
lahf
sub
mov
lods
lods
jmp
popf
enter
setle
or
retf
in
xor
jle
jmp
dec
repz
dec
cmp
(bad)
jnp
pop
jne
repz
jae
sar
push
xlat
and
stos
jge
or
shl
dec
or
bound
sbb
aad
pop
jecxz
loope
mov
jno
sub
das
xchg
push
sti
data16
test
cmps
add
addr16
sub
inc
dec
xchg
repz
jmp
add
cs
stos
dec
push
pop
das
test
push
(bad)
and
jbe
xchg
shl
ret
or
bound
inc
cmps
and
aas
push
out
ret
inc
jbe
xor
(bad)
mov
fdivrp
call
push
push
xor
sub
call
push
add
fnstenv
mov
sub
mov
jno
out
jp
cdq
pop
das
repz
in
and
push
and
sbb
adc
sbb
xchg
repnz
cmps
dec
cmp
loope
push
push
fwait
jmp
pop
adc
scas
fisttp
nop
adc
rcl
add
enter
pop
in
call
jno
not
cmp
mov
jo
add
add
fidivr
mov
and
test
ja
pop
dec
shl
(bad)
aas
and
inc
pop
aas
fild
or
fdivr
dec
sub
xchg
sub
jl
jns
imul
mov
aaa
add
(bad)
fstp
out
add
sbb
loopne
push
or
push
fimul
pop
or
add
not
dec
jg
adc
mov
in
loope
push
xchg
inc
sbb
bound
inc
add
xlat
movs
retf
inc
(bad)
(bad)
mov
imul
cmp
and
cs
add
in
xchg
gs
sub
sbb
int3
scas
pop
in
pop
mov
mov
(bad)
out
or
lds
rcr
mov
mov
jg
push
sbb
imul
aaa
or
push
push
and
and
out
sahf
mov
mov
nop
and
enter
pop
and
lahf
stos
mov
(bad)
jns
jno
add
jb
mov
fistp
(bad)
mov
push
lock
movs
mov
xchg
fwait
cmps
cld
mov
jle
int
xor
repz
and
cmp
sti
mov
fsub
(bad)
xor
jns
aas
call
xor
repz
jmp
ja
stc
or
test
cmc
pop
inc
xor
imul
lods
xchg
hlt
dec
pop
push
rep
fisubr
jno
pop
hlt
aaa
lods
jecxz
call
add
pop
scas
cmp
jo
xchg
daa
sbb
sbb
call
adc
push
mov
loop
xchg
clc
scas
inc
ja
shl
mov
shrd
push
cld
jmp
mov
ror
mov
cmc
cmp
cli
idiv
daa
mov
pop
xchg
jp
or
dec
sbb
cmps
fstp
sbb
mov
pop
mov
or
retf
sub
aam
inc
xor
in
sub
cmps
dec
jle
pop
int3
adc
xchg
xor
out
cwde
jns
aaa
and
(bad)
movs
cld
or
or
sbb
movs
jo
push
sbb
mov
sub
les
push
into
fstp
out
push
mov
test
pop
and
ficomp
fsub
cmc
pusha
std
mov
mov
xchg
test
or
jb
cdq
fdivr
mov
push
dec
and
mov
mov
xchg
sub
jmp
or
out
es
dec
adc
jae
mov
js
rcr
inc
xchg
jl
scas
jnp
cmp
mov
cmp
test
fmul
gs
hlt
xor
stc
cmps
or
loope
popa
push
cmc
cmc
and
xor
dec
mov
sar
lock
inc
in
lods
pop
xor
push
nop
push
xor
out
scas
sahf
jl
rol
ins
dec
lds
mov
and
retf
stos
div
sahf
inc
icebp
cmp
xor
push
rcr
movs
jno
test
pop
cli
fcomp
pop
fimul
or
xchg
dec
inc
sar
popa
lods
adc
clc
jl
mov
aam
aam
enter
inc
jmp
xor
nop
jnp
loop
adc
sar
pop
pop
in
adc
lds
movs
jne
push
call
adc
mov
add
clc
sahf
jmp
fs
ss
xor
add
rcr
mov
jmp
mov
aaa
jmp
sahf
or
fwait
sbb
jns
jno
mov
hlt
(bad)
mov
mov
inc
mov
mov
mov
shl
jp
clc
pop
xchg
mov
push
mov
xor
loopne
popf
mov
fld
inc
shr
test
shr
xor
xchg
push
jbe
jle
into
dec
jb
daa
int
cmc
ret
mov
loopne
sbb
(bad)
(bad)
fist
data16
mov
jmp
int
cmp
or
xor
imul
hlt
cs
enter
dec
lahf
and
setae
pop
loop
or
add
push
shl
adc
scas
adc
dec
add
mov
fucom
dec
xor
retf
dec
sbb
and
(bad)
dec
fild
fldcw
cld
or
icebp
out
iret
add
add
stos
sbb
mov
retf
and
push
addr16
out
mov
hlt
jns
push
push
sbb
adc
lods
cmp
retf
imul
add
pop
rcl
and
stos
div
pop
stc
in
aad
pop
push
sub
mov
ja
mov
xchg
push
imul
xor
sub
or
lods
mov
dec
mov
das
mov
xor
aam
mov
scas
or
push
fldcw
jbe
mov
cmps
adc
xor
jae
dec
sar
jns
xor
and
ror
adc
dec
pusha
loop
xor
add
(bad)
(bad)
push
mov
dec
push
sbb
in
repz
into
xlat
adc
fistp
inc
xchg
inc
arpl
jecxz
jg
mov
pop
push
imul
pop
retf
sub
aas
je
and
das
xchg
dec
jmp
dec
cmc
(bad)
mov
xor
push
mov
push
and
push
xchg
mov
mov
cli
push
cmp
rcl
cwde
mov
stc
aam
cs
jns
loope
or
dec
mov
addr16
cli
cmps
clc
call
mov
in
inc
cli
pop
or
call
aam
fstp
inc
mov
xchg
fidivr
mov
xor
int3
out
stos
jno
xor
adc
imul
in
ins
pop
or
shr
int
movs
outs
js
xor
pop
outs
std
cmp
push
es
mov
aam
jb
ret
retf
mov
sub
daa
mov
cld
fist
push
mov
jmp
ins
and
push
cmc
fldcw
ret
movs
adc
repnz
repnz
add
xor
push
mov
jns
mov
imul
out
pop
mov
jae
inc
pushf
adc
repnz
out
pop
fwait
cli
test
popf
adc
(bad)
rcl
outs
xchg
ret
adc
xchg
xor
jp
push
pop
and
rep
mov
ins
and
mov
push
(bad)
jb
inc
pusha
push
fadd
mov
test
mov
rcr
pusha
les
cmp
mov
xchg
push
cmp
test
pop
pop
loop
fidivr
arpl
sub
in
call
or
(bad)
pop
lock
lea
dec
(bad)
int3
add
inc
(bad)
icebp
(bad)
aas
ret
mov
mov
and
data16
add
fld
dec
mov
arpl
rcl
ret
aad
sub
jmp
aam
xor
and
test
push
div
clc
or
xchg
and
clc
xor
scas
push
sahf
pusha
adc
xlat
hlt
(bad)
movs
mov
stc
jns
pop
jmp
jl
jmp
repz
xchg
inc
jno
movs
adc
iret
add
inc
sub
sub
add
jnp
add
xchg
(bad)
push
jbe
dec
es
xchg
aas
jg
add
push
in
dec
dec
jae
outs
or
adc
lahf
mov
loopne
pusha
or
add
retf
jo
and
jmp
dec
lahf
aam
jbe
mov
shr
or
dec
sbb
mov
adc
mov
out
mov
call
out
mov
mov
cmp
sbb
lods
xor
popa
in
rcl
bound
xchg
fcmovne
add
push
adc
call
pop
mov
mov
rol
mov
pusha
jo
mov
cli
ret
ror
and
inc
aad
push
test
cs
dec
cmp
jmp
aam
fist
fiadd
retf
mov
hlt
lahf
rcl
fimul
movs
xor
rcl
popf
mov
nop
jle
div
imul
das
mov
push
xchg
mov
cwde
ret
mov
xchg
cdq
push
test
mov
adc
mov
xor
mov
xlat
adc
push
adc
std
xchg
mov
xchg
ins
mov
ins
adc
inc
jne
mov
pop
cmc
jnp
inc
idiv
lock
cmps
int3
fdiv
es
es
push
or
ficomp
ins
sub
scas
aad
cmp
add
mov
jb
mov
lods
popa
lods
aam
retf
dec
pop
mov
sbb
imul
dec
repz
call
pop
sbb
icebp
icebp
scas
aad
(bad)
fwait
mov
aam
xchg
aaa
sub
aad
mov
and
in
test
and
cmp
cmp
rcl
imul
(bad)
lea
out
ror
push
dec
xor
or
xor
pusha
and
test
xchg
dec
loop
sbb
gs
jbe
retf
and
inc
(bad)
scas
add
xchg
cs
mov
mov
fwait
mov
in
sahf
gs
dec
mov
dec
pop
xchg
cs
inc
inc
aad
out
push
out
jmp
icebp
sbb
mov
push
mov
in
iret
push
jns
das
add
jmp
neg
ja
sbb
cmp
inc
jmp
dec
adc
mov
mov
cwde
mov
test
mov
rcr
sub
push
dec
dec
aam
adc
dec
cmps
jge
aaa
xlat
and
xor
push
cmps
jl
xchg
cmp
cld
and
aas
push
enter
or
rcl
fld
add
dec
jmp
out
sub
aas
loope
shr
ds
adc
(bad)
neg
xchg
adc
ins
mov
push
push
or
pop
jae
adc
cld
cmp
inc
adc
xor
pop
retf
mov
xor
fbstp
(bad)
in
mov
xlat
into
std
fdivrp
dec
push
js
ret
ror
sub
push
fcmovu
inc
outs
sub
imul
pop
inc
addr16
sub
mov
rcr
add
add
(bad)
lds
repnz
clc
adc
cdq
and
test
sti
(bad)
pop
mov
mov
outs
out
in
(bad)
sub
mov
push
fisttp
pop
cmp
ins
dec
in
mov
int
inc
inc
scas
sbb
push
ret
pop
icebp
adc
and
ja
mov
cli
sub
and
sub
or
sbb
cmp
cmp
pop
cmp
cld
fidivr
xlat
dec
cdq
ja
cwde
fstp
test
cli
jg
adc
dec
mov
cmp
imul
clc
mov
and
xchg
mov
outs
xchg
mov
or
push
mov
sahf
or
aam
mov
mov
sbb
xchg
and
ret
adc
jmp
mov
fdiv
jae
or
imul
test
clc
iret
cmps
adc
mov
or
jp
bnd
lods
xchg
bound
icebp
add
clc
push
pop
adc
cmc
rcl
in
jns
movs
data16
inc
movlps
inc
gs
retf
dec
fisttp
sbb
jns
ja
inc
jo
daa
sub
nop
cmp
bound
mov
popa
outs
sahf
adc
jnp
pusha
sbb
(bad)
cmp
or
dec
movs
jb
add
sbb
push
or
sti
xor
add
loope
rol
push
or
clc
xchg
xchg
xor
jae
js
loop
jne
mov
dec
mov
ficomp
cmc
mov
icebp
cld
inc
rol
mov
(bad)
out
inc
mov
cmp
mov
mov
ss
imul
xchg
cwde
das
add
ror
test
mov
rcr
lods
xchg
cwde
int3
lea
sbb
imul
shl
cld
lahf
ds
lods
mov
lea
cli
aas
jle
rol
inc
scas
inc
shr
and
dec
push
add
je
(bad)
xchg
aas
mov
enter
dec
(bad)
stc
out
lds
xchg
xchg
push
push
sub
les
cmp
adc
xor
scas
mov
cmp
pop
(bad)
cmp
pop
sub
daa
inc
jmp
jp
in
inc
iret
inc
movs
retf
add
sbb
and
aas
in
fistp
add
xchg
mov
in
inc
mov
shl
std
adc
div
in
jecxz
jmp
mov
sub
arpl
inc
test
leave
(bad)
call
out
and
cmp
rol
rol
neg
rcl
xchg
sub
and
mov
add
mov
ja
ins
inc
lds
test
mov
and
in
push
push
cmp
nop
push
ja
push
mov
popa
fisub
mov
mov
push
imul
ins
cmp
cmps
scas
mov
xor
xor
dec
icebp
arpl
fwait
push
adc
or
ins
inc
jl
jge
xchg
test
pop
jl
int3
test
shl
pop
(bad)
clc
xchg
dec
push
pop
dec
xor
not
push
dec
xlat
loop
fistp
cdq
fwait
jnp
sbb
dec
je
sub
call
outs
aas
xchg
mov
push
mov
leave
xor
fstp
sti
cs
div
jno
imul
aad
dec
test
cs
mov
imul
mov
scas
icebp
leave
mov
push
retf
add
sahf
fld
movs
sahf
cmps
ds
xchg
push
mov
addr16
mov
lea
xchg
pop
rcr
pop
adc
fwait
jecxz
and
mov
sub
test
pop
add
add
mov
in
xlat
into
fist
sbb
lahf
adc
mov
mov
mov
(bad)
add
add
adc
jl
xor
adc
adc
dec
inc
aas
into
xor
repnz
jns
jae
mov
mov
mov
sbb
xchg
push
(bad)
fs
mov
push
orps
push
cmp
adc
mov
popf
cdq
shr
stos
xchg
mov
in
push
das
aam
iret
dec
or
in
test
mov
jb
rcl
and
cdq
dec
adc
int
stos
shl
push
rcl
pushf
dec
(bad)
pop
imul
ficom
enter
in
inc
(bad)
dec
cld
or
or
int
sub
adc
cli
mov
xlat
leave
pushf
ss
call
dec
adc
popa
cmc
iret
enter
dec
jbe
sti
mov
pop
cmp
call
sbb
add
or
mov
inc
dec
pop
stc
scas
xor
std
lods
add
fs
iret
repz
mov
pop
mov
adc
jb
xor
ins
or
xlat
cmp
data16
mov
or
sub
das
int
call
jmp
sahf
pop
xor
outs
out
inc
pop
xchg
jecxz
ret
ror
adc
mov
xchg
ficom
jns
jae
popf
push
jnp
cmps
loopne
mov
pop
sar
pop
into
stos
sbb
lods
std
dec
dec
es
mov
jmp
and
adc
mov
call
imul
sub
pop
(bad)
push
push
fdivr
ret
xchg
es
xchg
cmp
scas
or
add
inc
push
sub
popf
and
dec
shl
cmps
dec
sar
hlt
xchg
popa
aam
fimul
xor
(bad)
or
lods
into
pushf
pop
add
stos
xchg
inc
jae
jnp
inc
sbb
sub
or
push
data16
retf
jb
adc
pop
lods
lods
xchg
mov
mov
nop
dec
add
daa
jecxz
xchg
inc
or
test
pop
mov
sti
out
jns
mov
mov
call
pop
pop
fmul
sti
cs
mov
xchg
ins
ret
aas
xchg
or
dec
sbb
test
xchg
push
stc
cmp
aas
int3
int
fldcw
inc
sub
jno
push
push
out
shl
jmp
inc
xchg
xchg
lahf
xor
and
add
nop
les
cli
(bad)
jns
sub
retf
fild
jle
movs
jle
mov
es
cmp
sti
ret
out
cmc
rcr
sub
(bad)
sti
jmp
xor
mov
retf
push
(bad)
sbb
pop
dec
les
js
es
xor
mov
or
mov
shl
pop
or
fimul
outs
push
cli
cmp
das
xlat
ja
lea
clc
out
xor
cmp
loope
xchg
add
and
mov
adc
fs
and
jmp
jmp
aas
leave
pop
movs
mov
movs
pop
cli
sub
add
stos
ret
pop
xchg
rcl
adc
and
outs
test
push
(bad)
fild
add
test
adc
pxor
mov
sub
scas
(bad)
in
cs
pop
xlat
aaa
arpl
adc
push
sub
sub
jo
push
ds
lods
fcom
retf
je
xchg
loope
outs
inc
rcr
pop
jg
shl
stos
ss
out
and
mov
mov
xchg
stos
dec
test
js
mov
adc
push
push
mov
jp
adc
mov
test
scas
ja
mov
aad
lds
xchg
loop
ja
(bad)
jnp
jno
mov
pop
fucomi
and
fnstcw
pop
daa
sbb
fisttp
push
ins
int3
xor
sar
mov
mov
sub
xor
mov
xchg
call
in
inc
add
retf
pusha
cmp
pop
xchg
jns
pop
or
mov
stos
sub
xchg
ins
jnp
xchg
mov
sbb
push
jp
clc
(bad)
push
or
mov
mov
enter
ror
data16
cwde
into
lods
enter
test
push
mov
and
xor
data16
mov
arpl
jno
lahf
and
xchg
fmul
scas
and
jmp
cmp
or
js
sub
cmp
in
mov
fcomp
fstp
jns
and
mov
aaa
xor
ret
pusha
mov
std
inc
ins
xlat
stc
pop
pop
mov
mov
fsub
rcr
cmps
aam
out
jne
mov
ins
aaa
fild
push
inc
xchg
sub
je
setne
mov
cwde
push
xchg
aas
loopne
or
lea
pop
add
push
mov
hlt
inc
mov
adc
inc
push
into
ss
mov
movs
push
xchg
inc
mov
pop
sbb
sahf
mov
mov
popa
sbb
cwde
call
out
outs
and
retf
xchg
imul
adc
sbb
retf
pop
bnd
stos
push
xor
mov
sbb
push
mov
push
dec
jnp
xchg
pop
mov
imul
jge
rcr
push
mov
ss
jmp
inc
mov
out
mov
xchg
daa
adc
jmp
lock
fwait
lock
pop
(bad)
fmulp
add
xchg
mov
jns
xor
shl
sub
jae
scas
lods
mov
xor
popf
cmpxchg
cmc
add
cs
popa
out
pop
fild
das
push
sbb
jnp
push
mov
(bad)
jb
pop
test
fmulp
and
sar
jge
cmp
outs
jp
mov
popa
pop
and
mov
sub
sbb
jae
lahf
add
inc
dec
jae
and
pop
in
outs
pop
jmp
push
retf
sub
and
pop
mov
dec
pop
aaa
sahf
jne
pop
or
out
mov
or
inc
inc
shl
out
mov
sbb
push
mov
and
ins
inc
sti
mov
jb
xchg
lock
jnp
leave
popf
xchg
pop
cli
jns
ja
and
push
adc
push
pand
xor
bnd
shl
pop
xchg
(bad)
div
cmp
adc
mov
(bad)
push
mov
cld
nop
je
loope
pop
jp
mov
xor
mov
movs
call
jg
aas
mov
pusha
pusha
out
nop
jb
fimul
sbb
cmc
mov
adc
jb
xor
xor
xor
nop
cmp
imul
mov
scas
mov
xchg
gs
retf
adc
xor
pusha
ror
shr
push
xor
sub
mov
shr
add
mov
gs
popf
push
icebp
add
dec
call
push
js
mov
inc
cdq
pop
and
cs
in
aaa
jb
ins
adc
dec
or
xor
and
dec
outs
outs
inc
dec
imul
lock
xor
dec
rcl
push
fistp
test
dec
adc
ja
fsub
push
sub
mov
fdivr
jno
pop
(bad)
cmp
sti
jnp
push
and
push
pop
jo
adc
jno
mov
xchg
nop
jne
ret
pop
clc
dec
jmp
mov
pusha
xor
hlt
test
sti
dec
inc
or
cli
test
sub
xchg
sub
dec
ret
and
adc
mov
adc
dec
popa
add
xor
fisubr
aaa
or
mov
push
ins
cmp
cs
push
sbb
cmp
mov
inc
cmps
jge
push
inc
inc
fcomp
into
js
mov
ins
je
cmp
jmp
(bad)
xor
shr
cmp
push
je
or
add
in
sar
xor
jae
jmp
sub
xor
and
test
sub
jmp
xchg
adc
jbe
ret
add
fwait
pushf
pop
pop
fsubr
push
cmp
push
mov
scas
js
jg
out
out
add
mov
into
pop
mov
dec
loop
loopne
popf
pop
scas
sub
fistp
xchg
cmps
(bad)
out
sbb
pop
jo
pop
fs
test
push
jno
int
sbb
je
add
push
push
ja
xchg
repz
je
lock
fild
sub
in
push
pop
stc
out
hlt
push
add
dec
push
jne
mov
mov
mov
lods
fmul
int
imul
mov
sub
cmp
sub
mov
fnstcw
movs
xchg
cmps
fs
je
stc
pop
je
mov
push
push
mov
aam
cmc
push
scas
push
repz
gs
rcl
jbe
add
mov
loope
out
mov
ins
adc
ins
stos
enter
shl
int3
hlt
dec
dec
lahf
xor
inc
mov
cmp
outs
sub
xchg
push
out
fiadd
push
mov
xor
in
pop
or
dec
std
retf
inc
jb
test
sbb
push
push
jl
out
imul
or
(bad)
cmc
inc
iret
dec
sbb
shr
lods
sbb
xor
popa
xor
xor
sbb
mov
movups
rcl
add
xchg
adc
daa
dec
jp
leave
pop
push
pop
sbb
fstp
xchg
dec
cmc
pop
ret
mov
test
pushf
mov
jbe
test
rcl
inc
fs
pusha
jmp
dec
sbb
pop
mov
lahf
push
or
lods
pop
icebp
sar
jno
imul
pop
out
mov
pusha
stos
add
push
fdivp
or
retf
push
mov
jmp
jb
push
in
(bad)
bound
test
aam
xor
xchg
std
fdivr
sub
jnp
shl
rcr
ja
lods
imul
into
xor
movs
(bad)
jo
cs
inc
movs
gs
adc
push
push
out
into
(bad)
(bad)
movs
adc
jae
push
jp
ret
sub
rcpps
popa
fisttp
mul
jnp
iret
(bad)
out
pop
(bad)
lahf
lea
adc
fsubr
sbb
or
sbb
push
and
cmp
popa
aam
sbb
loope
mov
iret
ss
and
mov
fisub
ins
or
jle
in
dec
sub
mov
pop
jmp
loop
push
sub
mov
bound
xchg
inc
or
xor
leave
in
call
dec
cli
jg
push
hlt
std
les
mov
jmp
dec
add
(bad)
dec
mov
and
jp
dec
mov
not
xchg
or
mov
lds
les
xchg
and
xor
(bad)
push
fldenv
jecxz
ins
test
retf
lods
scas
js
add
(bad)
sbb
test
cmp
sub
pop
or
(bad)
scas
je
jnp
mov
xchg
adc
pop
sbb
cmps
add
rol
sbb
rcl
pusha
imul
push
fadd
push
call
sahf
and
mov
aas
jne
pop
fnstcw
cli
adc
imul
jo
fnstsw
or
push
cli
retf
mov
xor
(bad)
mov
sub
imul
jne
mov
and
pop
mov
jl
jmp
xchg
outs
scas
test
pop
repz
sbb
stos
jne
ds
dec
pop
pop
cmc
xchg
xchg
jg
lds
dec
fimul
pop
aas
dec
ins
add
arpl
icebp
das
mov
mov
and
fsubr
in
sbb
idiv
retf
dec
xchg
mov
jno
jbe
mul
ds
xchg
cmp
ins
std
(bad)
js
repz
jg
dec
(bad)
out
xor
call
int3
mov
mov
pop
mov
stos
inc
in
cli
ss
jmp
loopne
add
dec
leave
sbb
and
inc
xlat
push
jmp
mov
jge
inc
pop
arpl
ja
in
cmp
ins
dec
sbb
ins
or
mov
push
and
shr
jl
mov
sub
and
add
test
adc
jnp
pop
call
push
and
ins
dec
(bad)
inc
dec
cmp
xor
ror
je
sar
scas
and
iret
cld
test
cmp
leave
jmp
ss
shl
lahf
jmp
(bad)
jb
in
call
xchg
test
ficomp
aaa
mov
jmp
cmp
push
stc
sub
stos
das
and
mov
pop
sub
int3
mov
clc
adc
ja
cld
arpl
js
or
sbb
mov
jmp
xor
push
sbb
mov
scas
mov
adc
sbb
std
xchg
inc
cmp
in
cmp
fcmovnu
loope
adc
shr
xchg
jnp
daa
dec
push
pushf
mov
or
cmp
test
(bad)
mov
adc
mov
push
std
js
mov
or
dec
fisub
in
push
or
inc
cwde
gs
inc
int3
call
and
ret
dec
(bad)
push
dec
hlt
int3
fabs
dec
ret
stos
pop
cmp
lods
inc
cmp
push
loop
lock
(bad)
das
sbb
repz
adc
xchg
outs
push
dec
dec
outs
xor
mov
xchg
push
mov
shl
mov
in
xchg
mov
mov
jge
dec
out
pop
pop
popf
or
mov
pop
mov
push
jle
mov
out
mov
add
ins
sub
imul
cwde
aam
dec
add
pop
mov
in
movs
mov
xchg
outs
xor
mov
jge
(bad)
pusha
out
ins
jg
ja
jl
adc
xor
mov
mov
cs
pop
frstor
outs
cmp
outs
jb
sbb
jae
pushf
dec
cli
fcmovne
jle
pop
adc
aas
push
xchg
fstp
mov
das
mov
sahf
test
sbb
out
jl
sahf
and
retf
call
rcr
in
into
push
adc
int3
ds
or
xor
dec
sar
inc
mov
iret
adc
fld
pop
and
pop
arpl
call
int3
cmps
add
mov
lods
or
jbe
retf
jp
test
xor
sbb
jg
adc
add
pop
retf
test
sub
movs
call
push
(bad)
enter
jb
jmp
dec
sbb
aaa
pop
cmp
popa
in
sar
mov
rep
addr16
mov
mov
pop
fnstcw
sub
xchg
inc
pop
xor
out
cmp
scas
cmp
adc
cmp
jns
ret
inc
pop
fistp
jecxz
dec
fistp
in
or
fsub
or
push
jp
or
sar
fwait
outs
out
add
test
dec
or
jmp
push
push
(bad)
sub
pop
scas
dec
pop
fldenv
push
test
cli
mov
(bad)
icebp
jnp
sbb
cs
scas
sbb
aas
retf
sbb
xchg
sub
and
dec
push
adc
xlat
pop
mov
sbb
xor
retf
bts
dec
and
mov
aaa
clc
mov
xlat
ins
dec
xchg
dec
fsubr
sar
out
push
daa
cmp
les
fisttp
sahf
scas
popa
in
sbb
cmp
push
leave
jmp
sti
rcl
rcl
mov
cs
bound
pop
(bad)
or
and
pop
push
loopne
push
std
pop
fisubr
dec
loopne
dec
fld
push
pop
and
test
in
push
sti
jb
sub
sahf
adc
nop
push
jecxz
pop
fadd
adc
jge
and
mov
icebp
fisttp
mov
in
icebp
dec
push
mov
retf
rcr
(bad)
fstp
inc
clc
and
mov
dec
mov
xor
lahf
pop
or
xor
icebp
jmp
call
in
and
cmps
enter
pop
test
mov
popa
int3
and
jle
pop
in
jo
rol
pop
pop
cmc
arpl
mov
gs
xchg
dec
fwait
xchg
jecxz
pop
xor
leave
mov
clc
loop
add
aas
mov
(bad)
ficom
sub
movs
jecxz
(bad)
mov
adc
fsubr
jecxz
pop
popf
ins
inc
add
cli
shl
lahf
ret
mov
mov
sub
dec
mov
cmp
je
imul
xchg
sahf
adc
bound
loope
ss
add
add
fcmovu
jmp
pop
push
repz
mov
ja
movs
loopne
xchg
push
jecxz
out
cmp
fnstsw
mov
cmps
mov
mov
pop
cmp
inc
adc
push
pop
xchg
mov
jae
xor
cmp
inc
cmp
pop
xchg
stos
xlat
jbe
rcl
data16
cmps
jle
and
cmps
dec
shl
sbb
(bad)
fcomp
lods
push
mov
shr
lods
dec
lock
loope
mov
pop
sbb
push
sti
xor
jne
dec
std
test
dec
adc
mov
jecxz
cmp
push
inc
mov
fld
xor
xor
push
imul
cld
lahf
int
sbb
pop
xchg
pop
mov
clc
jge
cmc
mov
push
jne
cmp
retf
xchg
fs
fdivr
(bad)
fnsave
das
jbe
test
sbb
add
sahf
enter
pusha
sub
adc
fmul
xor
mov
push
in
retf
add
sub
push
shr
xchg
jmp
sbb
sub
xor
(bad)
out
movs
je
les
cmc
jnp
mov
(bad)
nop
xchg
and
adc
push
pop
jmp
xor
mov
pop
cwde
lods
xchg
and
(bad)
push
sub
cli
push
ret
sub
cld
xchg
and
and
jl
shl
jle
gs
push
in
retf
loope
inc
jmp
ret
xchg
lods
imul
pop
cmp
out
pop
in
mov
loop
pop
cmp
icebp
out
mov
call
repnz
push
mov
and
mov
xor
scas
bt
sub
pusha
mov
or
cmp
mov
pop
lea
repz
jbe
inc
fcom
js
inc
push
sbb
je
inc
repz
and
sub
mov
jb
adc
fcomp
(bad)
xchg
mov
sbb
xchg
inc
cmp
icebp
dec
and
sbb
jne
adc
adc
mov
aas
(bad)
das
pop
xor
dec
in
inc
shr
inc
sbb
jge
jo
das
mov
loop
xchg
pop
jne
pop
clc
add
cmp
(bad)
test
cli
loope
pushf
jae
mov
scas
rcr
push
aam
dec
loope
mov
shr
sub
bnd
xor
sub
je
retf
ret
xor
mov
mov
in
enter
leave
adc
movs
mov
ret
push
shl
mov
(bad)
jmp
and
jns
add
into
or
js
icebp
jae
(bad)
jo
addr16
and
hlt
xchg
mov
xchg
sub
jl
cmp
rcl
push
out
inc
adc
stos
addr16
mov
and
jecxz
sbb
push
dec
sub
gs
icebp
xlat
lds
cld
add
stos
imul
les
jno
ret
mov
add
sahf
cmc
rcr
pop
in
xchg
mov
and
clc
xor
mov
movs
jecxz
out
loope
lea
and
test
add
fcom
cld
push
push
mov
ret
xor
mov
rol
outs
mov
jg
push
add
outs
cmps
rcr
outs
int3
movs
add
dec
sub
fmul
pop
cmp
lock
loop
sub
iret
fmul
xor
movs
or
mov
clc
jge
fs
jecxz
sub
outs
icebp
stos
and
mov
inc
mov
retf
in
mov
sub
xchg
loopne
enter
inc
sub
(bad)
aad
mov
(bad)
shl
int3
inc
pop
cmp
stc
sbb
fist
outs
or
std
bound
shl
inc
(bad)
pop
xchg
mov
pop
stos
jb
data16
outs
pop
adc
jbe
loope
add
sub
adc
in
adc
push
push
push
and
icebp
push
mov
adc
mov
test
and
bound
xor
shl
(bad)
xchg
lds
sbb
mov
push
lahf
cs
scas
aam
push
out
(bad)
and
sub
dec
xor
aas
sub
pushf
push
into
mov
inc
jl
ja
jecxz
mov
repz
cmps
mov
je
jo
push
add
ins
mov
in
(bad)
out
fwait
and
clc
(bad)
retf
cmps
mov
in
lahf
jo
mov
mov
adc
xchg
popf
sub
push
and
push
lock
iret
(bad)
mov
push
pop
add
cmp
xor
pop
test
push
pop
cmc
lahf
mov
mov
fimul
mov
dec
inc
sbb
mov
aam
pop
mov
ins
xchg
hlt
or
mov
ins
(bad)
stc
xor
or
cmps
loop
sti
inc
add
stc
sub
ret
push
retf
push
mov
sar
cmp
mov
xor
jb
push
movs
lahf
jne
sti
ret
cmc
inc
jmp
enter
xchg
out
fs
repnz
inc
pop
pop
mov
imul
ret
sub
nop
mov
sti
push
mov
loop
mov
sahf
jg
loope
cs
or
sbb
dec
and
sbb
cwde
jmp
mov
ficomp
mov
sti
(bad)
mov
in
and
push
jnp
fsub
idiv
pop
mov
sbb
ins
test
and
js
cmp
(bad)
in
sbb
add
popf
cdq
fidiv
pop
shr
jge
inc
(bad)
dec
ror
mov
cs
jmp
dec
dec
xor
pop
xor
mov
iret
inc
jle
xlat
scas
rcl
dec
aad
add
xchg
fs
push
ret
xchg
std
imul
add
xlat
(bad)
xchg
pop
xor
inc
mov
push
add
mov
mov
add
xor
push
or
xchg
jp
shl
mov
xchg
sub
mov
ja
sahf
push
inc
sub
cwde
out
mov
stc
jle
add
(bad)
dec
adc
loop
dec
rol
test
mov
jge
mov
add
leave
mov
pop
inc
cmp
outs
aam
clc
int3
pop
or
rcr
inc
push
push
pop
cdq
outs
jns
xor
adc
test
mov
ror
or
addr16
inc
push
movs
mov
in
adc
xchg
sbb
repz
les
xor
pushf
push
mov
push
dec
pop
sbb
add
(bad)
test
dec
pop
popf
popf
pop
loope
push
adc
inc
xchg
retf
repz
arpl
stc
cs
jae
and
mov
pop
adc
stos
pop
inc
push
(bad)
daa
sbb
stc
dec
retf
cld
dec
inc
xchg
pop
pop
ror
inc
sbb
mov
mov
test
pop
dec
cmps
xchg
stc
aas
cld
mov
addr16
pop
mov
mov
ins
hlt
cmovle
mov
or
push
xchg
and
jne
xchg
lods
inc
lds
jmp
jecxz
adc
in
test
into
outs
add
les
or
or
xor
nop
repz
enter
scas
jb
and
pop
cmp
cmps
div
mov
addr16
cmp
data16
mov
push
fimul
jo
pop
out
dec
hlt
mov
ins
jo
dec
cmps
leave
iret
and
sbb
std
paddw
pop
adc
push
mov
dec
aad
(bad)
test
aad
clc
mov
pop
movs
loopne
aam
inc
cmp
xor
jae
pop
in
push
fwait
sub
das
push
dec
xchg
fwait
cdq
enter
sub
hlt
or
loope
jecxz
mov
call
jg
arpl
dec
les
inc
fld
jb
mov
fwait
inc
icebp
sar
call
jmp
(bad)
xchg
cs
add
sbb
sbb
test
cmp
sub
fisub
mov
jecxz
mov
ds
jmp
cmp
jg
ja
xchg
push
mov
cld
adc
mov
fdiv
fdiv
push
pop
loopne
or
adc
pop
pop
gs
inc
in
fsub
and
push
or
mov
cmp
loop
mov
fnstcw
sbb
and
mov
fistp
mov
jbe
(bad)
ins
or
mov
add
add
pusha
leave
or
dec
and
inc
ret
test
inc
sahf
rcl
cmp
lock
pop
sub
push
jns
scas
adc
and
sti
daa
mov
add
loopne
(bad)
or
sub
not
xchg
int3
mul
jg
ds
dec
cmp
movs
sbb
sbb
cmp
shr
rcl
sti
cmp
adc
mov
push
push
push
aaa
scas
(bad)
or
in
and
lods
dec
lds
imul
shl
ins
in
jmp
xor
mov
sbb
jae
xchg
repz
sub
enter
push
arpl
aad
or
stc
pop
test
sub
mov
dec
mov
ins
mov
stos
sub
loopne
iret
jmp
pop
leave
xchg
pusha
jo
xchg
add
shr
loope
push
cmp
inc
rcr
adc
ja
out
in
mov
inc
fwait
jg
cmp
push
ret
cmp
(bad)
lods
outs
pop
dec
mov
(bad)
in
or
or
inc
pop
cmp
aam
test
push
ss
hlt
mov
jb
sar
jb
dec
int
adc
mov
jle
jb
enter
dec
mov
cli
jbe
ins
daa
add
(bad)
pop
inc
addr16
enter
push
mov
ret
sti
into
pop
xor
push
lods
dec
jns
out
pop
sub
mov
sub
cmc
push
xchg
pop
push
xchg
inc
ficom
dec
jle
js
out
inc
cmp
jp
popa
test
jo
push
inc
fld
es
jge
cmps
sub
add
mov
std
pop
adc
rcr
sbb
jg
(bad)
jb
call
mov
(bad)
and
sbb
push
mov
pop
or
and
mov
dec
adc
cmp
bound
xchg
cli
loope
dec
dec
add
cld
sbb
and
adc
outs
dec
aaa
pop
outs
stos
int
push
es
xchg
test
shl
cmps
sub
pop
add
lds
mov
enter
jmp
mov
test
add
mov
xor
movs
jp
dec
sti
cmc
loop
je
test
daa
lods
mov
sbb
mov
loop
jmp
aaa
enter
jg
dec
shl
std
and
mov
leave
xor
hlt
arpl
rol
ss
jbe
sbb
sbb
std
call
sub
cwde
fstp
mov
sahf
sub
jns
aad
push
fistp
cs
sbb
cli
(bad)
repz
movs
(bad)
not
ds
mov
nop
aas
inc
cmps
int3
fadd
xchg
push
push
sub
sbb
jecxz
xchg
sbb
outs
lahf
imul
xchg
dec
cmp
xlat
fadd
inc
xchg
lock
aam
daa
ffree
imul
push
push
repnz
cmp
retf
mov
btc
shl
call
shl
aam
xchg
out
(bad)
cmp
ffreep
bound
push
out
fiadd
jae
and
or
cli
sub
stos
jbe
aam
push
jno
jne
xchg
outs
sbb
add
mov
fs
sub
xor
iret
daa
psraw
jp
push
ins
add
inc
push
mov
mov
stc
enter
(bad)
sbb
rol
lea
and
addr16
dec
retf
scas
rcr
ret
xor
xor
jmp
outs
addr16
inc
int
inc
mov
xlat
pushf
clc
lds
dec
loop
(bad)
jae
out
popa
xor
push
rol
jle
cmp
lahf
ret
test
sub
retf
add
add
add
or
sahf
dec
or
ror
out
addr16
mov
test
mov
(bad)
mov
int3
xchg
sbb
test
(bad)
outs
mov
fnstsw
or
fnstsw
sub
inc
call
mov
call
hlt
fcos
xchg
xor
js
adc
cs
jmp
mov
into
fist
inc
pop
and
adc
dec
sub
jae
cmp
mov
out
das
test
and
fdivr
and
push
fadd
stc
mov
(bad)
lods
nop
mov
push
dec
adc
xchg
pop
mov
retf
jl
je
aaa
xor
pop
aaa
xchg
test
aas
jle
mov
add
jmp
popf
pop
enter
cmp
out
or
les
ret
jbe
inc
leave
nop
test
xchg
in
sbb
jl
cmp
adc
js
adc
push
mov
mov
ja
or
dec
fwait
sub
jo
je
mov
jg
lods
in
cs
pusha
inc
jo
mov
sti
sub
dec
jg
xchg
out
imul
mov
imul
cmps
inc
inc
ds
xchg
jecxz
push
dec
mov
ds
or
fisub
(bad)
jno
or
arpl
movs
jnp
pop
mov
pop
lock
ret
push
popf
inc
in
icebp
loop
xchg
mov
add
xchg
pushf
and
aad
test
imul
or
jmp
inc
lods
pop
sti
(bad)
xchg
hlt
mov
mov
inc
adc
mov
jp
mov
and
jg
scas
xor
mov
or
pushf
inc
jl
push
mov
mov
call
dec
sub
aam
push
sbb
mov
iret
mov
sbb
push
fild
popf
xlat
or
or
jns
jle
jae
rcl
and
cdq
clc
mov
ins
ret
mov
jno
dec
xor
dec
repnz
inc
push
xor
and
mov
xchg
mov
adc
jg
add
outs
mov
shl
into
jg
xchg
das
mov
mov
lahf
xor
dec
rol
inc
push
or
sub
sahf
test
fnstenv
inc
pop
sub
int
sbb
xor
push
gs
ins
pop
or
retf
call
push
mov
dec
mov
out
push
das
rcl
lahf
dec
mov
rcl
push
ret
ror
lea
loopne
add
imul
lock
sub
mov
sbb
enter
test
outs
add
in
sar
and
pop
test
mov
pop
gs
sti
movs
push
fistp
es
int
jle
sti
mov
(bad)
and
nop
fstp
pop
push
jp
mov
jecxz
jl
lds
in
das
fbstp
sbb
xchg
push
in
pop
daa
clc
out
(bad)
pop
sub
nop
daa
push
sar
addr16
enter
push
imul
fnsave
push
xor
sbb
jmp
out
popa
cmp
push
aad
cmp
int
add
jo
sbb
and
mov
jmp
outs
cld
mov
call
adc
push
adc
loope
gs
in
inc
pop
jmp
xor
movs
out
dec
or
push
or
fldlg2
or
mov
adc
cmp
(bad)
outs
aaa
lods
jmp
pop
into
lock
frstor
mov
pop
inc
mov
scas
(bad)
fimul
jecxz
xor
fwait
mov
std
ror
xchg
dec
pop
sub
mov
add
cmp
stos
nop
mov
ror
pop
xchg
out
adc
hlt
mov
adc
adc
mov
xor
or
nop
dec
jnp
cld
test
add
adc
cmp
xor
add
(bad)
mov
mov
and
sub
out
test
(bad)
jle
jmp
vphaddbw
adc
mov
jl
pop
adc
(bad)
xchg
retf
cmp
mov
inc
enter
mov
sbb
into
stos
in
movs
jge
inc
xor
call
pop
sub
mov
ins
cdq
dec
das
pop
inc
popa
loop
jmp
pop
lahf
ror
imul
push
and
out
fisub
nop
cmp
mov
inc
imul
inc
ret
pop
cwde
mov
(bad)
or
add
mov
cmc
add
inc
cmps
repnz
xor
scas
add
xor
ret
jl
pop
rcl
icebp
add
fisttp
stos
jle
imul
int3
mov
push
jbe
and
or
adc
pop
inc
xchg
clc
daa
ins
fcmovbe
popa
cdq
stos
and
pusha
jle
dec
push
imul
push
ret
cmp
mov
sti
rol
sbb
jno
out
dec
ret
add
mov
cmc
pop
and
mov
aas
push
adc
test
js
addr16
jo
das
mov
pop
and
call
jmp
xchg
mov
pop
movs
mov
dec
cld
movs
fs
mov
ss
mov
jl
push
in
(bad)
dec
xor
or
js
out
ins
cmp
inc
icebp
jg
mov
lods
ret
in
adc
cmp
test
outs
sub
test
frstor
mov
xor
stos
test
mov
adc
sbb
mov
jbe
sub
fxch
sub
repz
mov
mov
pop
add
aaa
js
cmps
or
sub
mov
les
ja
jmp
jns
dec
pop
add
cmp
mov
les
cwde
fwait
ret
cmp
(bad)
mov
pushf
push
inc
push
sbb
mov
hlt
xor
sbb
sub
neg
sar
xchg
(bad)
cmp
adc
jbe
imul
pop
sub
loope
cmp
dec
push
mov
je
add
sbb
cs
push
push
adc
xor
add
ret
mov
das
cmp
push
xchg
sar
mov
push
dec
xchg
pop
adc
xchg
mov
fucomp
aaa
inc
xchg
sbb
pop
add
pop
shl
(bad)
leave
and
aas
dec
mov
lock
daa
test
(bad)
scas
add
jge
gs
mov
and
hlt
into
xchg
jecxz
adc
imul
ds
pop
popf
cmps
inc
iret
sbb
push
mov
pushf
jo
cmp
adc
push
fisubr
mov
into
out
xlat
push
fsubr
xor
loope
add
ja
add
popa
inc
cmp
adc
and
mov
push
xchg
cmp
cdq
pop
pop
dec
idiv
test
retf
out
jb
daa
or
rcl
jno
inc
daa
mov
movs
clc
sbb
test
lahf
cmp
cli
daa
mov
cmp
loope
imul
push
out
and
ja
lea
fwait
dec
or
mov
cmc
call
pusha
paddb
jmp
les
loopne
xor
into
push
ja
int
pop
lods
mov
aad
out
cmp
cmp
sbb
fsubr
scas
int3
or
cmps
cld
pop
pop
jo
sti
ins
or
inc
fidiv
aad
dec
and
mov
out
mov
es
xchg
sub
movs
xchg
mov
adc
add
bound
(bad)
mov
cmp
int
mov
call
dec
enter
sub
test
adc
into
data16
js
(bad)
dec
adc
inc
sti
(bad)
add
ss
in
xor
and
ins
xor
pushf
ins
cs
pop
sti
xchg
addr16
mov
in
les
cmps
mov
scas
push
cs
in
mov
in
cli
mov
and
pusha
cmp
ret
imul
fld
daa
xor
adc
mov
dec
je
pop
scas
outs
imul
push
pushf
ret
xchg
mov
mov
sub
mov
stc
repnz
sbb
outs
stos
adc
mov
cmp
les
and
mov
gs
js
mov
adc
loope
or
rcl
out
push
cdq
xor
push
dec
cmp
push
int
popa
jae
mov
jmp
fwait
push
jmp
sbb
outs
or
or
push
rol
jnp
jo
mov
imul
sar
push
push
jmp
inc
push
out
mov
ja
xor
popf
mov
addr16
xchg
adc
loope
ins
xchg
iret
pop
aad
jle
call
test
xchg
push
aam
jecxz
dec
mov
mov
hlt
push
int3
(bad)
test
xor
into
out
cmp
stos
cmps
ja
std
mov
and
push
inc
icebp
in
mov
sbb
ror
xor
sbb
aaa
pushf
std
mov
mov
or
ins
retf
and
dec
out
xor
inc
(bad)
sub
sbb
xchg
push
jmp
mov
fiadd
test
xchg
imul
es
jb
pop
fisubr
or
leave
xchg
pop
ror
out
outs
in
mov
je
addr16
jmp
out
mov
jle
dec
xchg
test
test
daa
add
mov
jno
or
mov
mov
adc
mov
lock
js
test
(bad)
fs
neg
or
xor
or
push
test
cmp
test
movs
sbb
int3
es
daa
cmp
push
and
dec
xchg
mov
mov
stc
das
lods
mov
jmp
cdq
cs
fist
sbb
and
cmp
iret
int3
and
or
sub
inc
addr16
cld
push
push
mov
je
setp
mov
outs
xchg
sub
fsubr
bound
or
imul
or
push
and
sti
int3
add
sub
xor
sbb
fidiv
or
mov
xor
adc
cmp
loopne
ret
mov
es
mov
adc
jb
jecxz
jae
ds
sub
iret
fcmovne
xchg
xor
leave
mov
cli
xor
arpl
dec
xchg
imul
cmps
pop
fbld
out
(bad)
push
pop
ret
mov
retf
(bad)
dec
mov
aaa
or
mov
push
es
lods
lods
ret
pop
lahf
sub
xchg
or
jg
inc
mov
dec
jge
adc
lahf
movs
mov
aam
add
jae
push
les
sbb
mov
adc
adc
shl
push
test
jo
push
cmps
pop
mov
sub
xchg
mov
pushf
ror
pop
xor
sbb
jbe
push
pop
sub
mov
mov
js
(bad)
mov
mov
popa
mov
cmp
clc
ret
repnz
faddp
pop
out
mov
test
mov
mov
and
jbe
pop
std
fst
mov
in
dec
mov
rol
ss
ins
movs
daa
daa
aas
(bad)
(bad)
and
sar
data16
sbb
int
neg
daa
ins
lods
pop
sub
push
or
fcmovb
dec
xchg
mov
dec
jl
sbb
xchg
out
lahf
inc
enter
scas
add
div
push
inc
xchg
xchg
mov
pop
add
inc
sahf
mov
mov
sub
jp
push
pop
mov
jg
dec
push
cmp
sub
xchg
aas
(bad)
mov
mov
into
xor
arpl
jmp
rcl
or
cmp
dec
ja
jle
or
popa
push
add
bound
cld
mov
pop
push
call
sbb
xchg
and
lods
out
and
into
inc
mov
pop
stos
push
pop
mov
xlat
test
add
cmp
lods
cmc
popa
shl
pop
mov
xchg
cmp
jnp
adc
imul
retf
loop
enter
mov
lock
lods
add
stos
mov
aad
mov
and
lahf
inc
jo
xor
adc
cmp
shl
stos
ins
es
inc
ret
adc
mov
add
ss
movs
pop
(bad)
cmp
outs
dec
js
push
pop
push
mov
icebp
adc
addps
and
adc
fwait
retf
xor
add
mov
mov
jg
add
cmp
pop
ret
into
cs
fdiv
mov
adc
ffreep
pop
aad
mov
loope
stos
mov
push
test
inc
cmp
fisubr
clc
jge
pop
call
imul
pop
stc
repnz
mov
(bad)
push
(bad)
sub
jmp
inc
push
pop
imul
ss
add
mov
fbstp
repnz
jmp
mov
mov
mov
push
fiadd
add
jbe
in
add
aad
or
inc
movs
push
in
sti
neg
jne
adc
add
cli
sub
cmp
aam
cld
cmps
or
stos
jl
or
rcr
cld
fscale
lea
push
scas
sub
adc
mov
sar
out
mov
stos
test
cmp
inc
add
xchg
mov
jge
in
jno
cmp
sub
sub
pop
addr16
mov
jle
ret
or
jg
xchg
fadd
cmp
stos
stos
pop
inc
test
mov
in
jae
push
scas
push
xor
mov
call
ret
std
fwait
xchg
inc
inc
das
bound
ret
gs
mov
adc
mov
jbe
cwde
mov
mov
pusha
jns
cmp
ret
mov
scas
push
mov
inc
add
adc
sub
xchg
add
cmp
sub
and
icebp
pop
in
mov
out
pop
dec
pop
outs
cmc
adc
inc
gs
xchg
jp
cmp
jecxz
call
adc
mov
mov
repz
xchg
sub
daa
(bad)
in
mov
sub
out
push
loopne
rol
jo
loope
sbb
call
bound
popa
or
xor
adc
imul
cmovns
xchg
push
xchg
sub
and
pop
jmp
add
cld
sub
(bad)
mov
mov
or
mov
cld
fs
push
or
mov
pop
int
add
and
sbb
lahf
test
retf
pop
push
cld
jo
sub
mov
stos
gs
fcom
mov
out
mov
jmp
outs
adc
gs
adc
movs
pop
adc
mov
and
add
dec
pop
dec
inc
jmp
imul
sub
and
push
adc
lods
or
or
pop
cmp
loop
push
dec
aad
mov
dec
retf
xchg
dec
sbb
mov
imul
rcl
sbb
mov
sbb
(bad)
ja
push
jp
in
xchg
inc
pop
lods
cmp
retf
test
test
movs
iret
dec
and
jne
mov
ret
test
mov
add
sub
out
jne
jo
into
dec
jle
mov
or
jg
mov
mov
pop
add
xchg
lahf
jge
xlat
mov
cmp
in
cld
iret
movs
lods
scas
ret
and
neg
loopne
or
hlt
int
dec
xchg
xchg
dec
femms
dec
adc
xchg
mov
mov
stc
cdq
ds
add
call
(bad)
or
jns
pusha
(bad)
hlt
(bad)
add
cdq
test
shr
push
sti
mov
std
popa
or
jl
pop
jp
aad
push
scas
cli
retf
or
cmp
in
lods
xchg
clc
es
add
ret
or
push
jbe
push
and
lea
outs
lds
xor
cmp
push
xor
scas
shl
push
jae
add
aad
xchg
mov
into
stos
inc
xchg
retf
inc
xchg
xchg
lods
mov
push
cmp
sub
cmp
cwde
scas
mov
jp
call
sub
add
enter
mov
stc
sbb
mov
xchg
sar
add
ret
ds
rcr
out
test
cmp
(bad)
ins
cmp
stc
fcom
lahf
out
xchg
xlat
xor
xor
or
or
jmp
inc
jns
mov
dec
mov
aad
dec
inc
mov
cmp
pop
fadd
mov
sub
pop
and
dec
inc
and
pop
or
mov
hlt
and
sahf
push
sbb
imul
jmp
mov
ins
mov
cld
ss
shl
stc
xchg
jb
dec
je
fbld
ret
mov
jae
mov
inc
sti
repz
(bad)
fnstcw
popf
cdq
sbb
int
dec
lods
add
out
jnp
outs
xchg
imul
inc
cwde
and
outs
adc
addr16
pop
popf
cmp
add
jmp
mov
cld
xchg
shr
fld
or
int3
aad
xchg
arpl
fisttp
pop
rol
or
add
mov
shr
pop
ds
test
test
lock
sbb
cs
sub
cmp
mov
xor
rcl
and
jmp
sar
add
hlt
test
out
out
fisubr
shl
jg
ins
ret
jae
movd
push
add
xor
loop
and
(bad)
lods
aad
jnp
out
(bad)
ficom
dec
mov
inc
packsswb
lds
cmp
or
repnz
sub
push
mov
sub
(bad)
cmp
aad
cwde
les
sub
ins
dec
jns
inc
cmp
loope
shl
lods
pop
jl
cmp
fucomp
and
mov
icebp
ja
cs
mov
and
sub
sbb
cmp
mov
xchg
push
xchg
sbb
and
(bad)
and
dec
and
out
jl
test
ss
cmps
jbe
xchg
loope
fs
cmp
pop
in
push
mov
clc
inc
and
aaa
stos
mov
retf
cmp
inc
in
mov
pusha
sub
movs
(bad)
int3
dec
data16
adc
jns
jo
mov
ins
sub
add
mov
ss
sbb
fcomp
cmp
pop
sub
xor
lock
sbb
jge
imul
scas
xor
or
xor
jge
stc
rol
and
dec
inc
std
call
mov
cdq
cdq
in
fdiv
cmc
lahf
mov
push
xor
jae
call
adc
stos
jle
rcr
ins
push
xchg
(bad)
or
scas
and
sub
es
pop
(bad)
xchg
das
test
xchg
repnz
lods
mov
jle
out
or
ret
lahf
loopne
shl
push
adc
fstp
mov
xor
shl
push
fcomp
jp
push
fnstcw
xor
and
ret
out
mov
jge
pop
jp
mov
jg
jbe
fdivrp
(bad)
mov
(bad)
fbstp
cmps
mov
jg
mov
test
pop
and
test
push
mov
sub
icebp
adc
mov
outs
push
ror
ja
hlt
push
jae
jle
mov
(bad)
addr16
inc
inc
call
sahf
sub
sar
pushf
mov
sub
imul
pop
les
(bad)
cmps
pop
cwde
nop
and
xor
arpl
movs
in
pushf
das
repz
xor
in
sub
enter
lods
jle
out
in
mov
inc
les
sbb
mov
cwde
sbb
push
add
cli
out
retf
sub
int3
retf
outs
jb
movs
xchg
add
sbb
or
jl
fwait
bound
test
fiadd
lods
aad
pop
dec
outs
push
jb
push
jmp
jg
mov
cwde
test
(bad)
imul
sub
push
xchg
repnz
movs
cwde
popf
jl
mov
(bad)
out
mov
sub
or
inc
lea
push
jge
fdivr
xchg
ss
sbb
nop
movs
sub
cmp
in
lahf
arpl
(bad)
ins
cdq
popf
rcl
mov
and
cmp
adc
mov
inc
fs
inc
mov
je
xchg
and
push
dec
sub
nop
je
stos
repz
add
pop
sahf
inc
dec
fs
pop
or
xchg
nop
dec
and
xchg
mov
rcl
sahf
mov
inc
mov
xor
jmp
sub
cld
xchg
xor
out
push
int
lahf
adc
adc
aaa
cli
push
ss
popf
add
jne
mov
sbb
inc
rol
shl
jmp
inc
shr
(bad)
stc
in
out
nop
inc
out
pop
cmp
bound
(bad)
in
xchg
and
pop
imul
mov
scas
pop
pop
sub
dec
jle
not
xchg
lods
adc
clc
mov
aam
in
scas
ror
xchg
pusha
rcr
in
add
retf
pop
lock
bound
jae
pop
dec
jmp
mov
and
cmc
or
pop
mov
jmp
mov
mov
xchg
xchg
sbb
push
sub
xor
pop
ins
mov
sbb
out
std
aam
frstor
sahf
mov
(bad)
icebp
fnsave
or
jmp
push
fidivr
add
inc
dec
push
cmps
sbb
call
and
int3
dec
fst
mov
mov
sbb
call
push
sub
bound
mov
pop
mov
mov
ss
or
pop
fstp
adc
pop
enter
jmp
dec
add
pop
cmp
addr16
lods
adc
sub
lea
loope
pop
mov
cdq
fnstcw
je
cmc
and
and
aam
push
and
pop
xchg
xchg
add
jne
and
push
repz
ss
xchg
(bad)
xlat
or
mov
dec
fstp
inc
aaa
clc
pushf
stc
(bad)
loope
sub
adc
and
mov
outs
out
fsubr
mov
dec
and
mov
into
lds
jns
xchg
xchg
pusha
fdivr
mov
fs
xor
pop
repz
std
xor
inc
mov
pop
push
jecxz
sub
or
ja
ret
movs
push
bound
jb
mov
sbb
call
loope
dec
inc
add
jo
ret
inc
sbb
lods
adc
jae
rcr
test
icebp
add
jmp
outs
xchg
nop
mov
das
movs
stos
cmp
push
mov
mov
cmp
add
and
cdq
mov
dec
mov
aad
das
sub
push
mov
(bad)
jl
test
leave
pop
mov
jecxz
add
ds
sar
xchg
addr16
jnp
mov
cli
pop
sub
(bad)
push
fcom
sbb
mov
jae
and
adc
pop
out
pop
dec
push
loope
inc
movs
jge
lds
dec
(bad)
cdq
jle
xchg
icebp
add
or
push
push
sub
mov
sub
jno
clc
lahf
je
idiv
mov
cmc
add
loopne
add
pop
jne
and
cwde
cmp
out
loope
ret
out
cs
push
cmp
fcom
jae
inc
fisub
fwait
jb
test
adc
ins
or
mov
cmove
mov
and
xchg
xchg
push
xlat
mov
sub
jae
pop
mov
jmp
mov
shl
xchg
neg
push
and
xchg
sub
js
cmp
xchg
mov
push
sbb
stos
mov
inc
xchg
pop
lea
lahf
movs
push
mov
dec
ja
pop
mov
add
outs
iret
in
cdq
dec
mov
in
lock
mov
mov
ins
dec
pop
sahf
xchg
and
mov
xor
mov
loopne
jmp
mov
aam
mov
call
lds
ins
test
lock
rcl
ins
retf
fcom
add
bound
push
mov
cmps
xor
push
adc
repnz
mov
std
xor
mov
sahf
jecxz
inc
cmp
test
in
add
rcr
imul
and
add
lods
mov
cld
mov
push
cmps
(bad)
loope
xor
pop
and
pop
mul
retf
push
jecxz
lahf
mov
pop
jmp
push
in
leave
(bad)
rol
add
mov
jp
xlat
push
je
and
js
cmp
lods
mov
pop
adc
call
xchg
shl
dec
xchg
fdiv
jmp
retf
cli
or
add
jle
or
pop
std
sub
adc
cdq
xchg
push
and
add
popa
sar
jnp
add
jle
jmp
sbb
jmp
adc
retf
sar
xchg
ds
cmp
out
push
retf
jns
lock
adc
pop
xchg
sbb
mov
(bad)
in
test
dec
jg
push
mov
fistp
or
test
dec
mov
repnz
ins
js
lock
cmp
and
mov
rdtsc
into
jge
loop
dec
retf
jge
pop
push
inc
sub
call
cmp
mov
mov
fsubr
sbb
mov
inc
mov
nop
pop
mov
(bad)
repz
ja
xchg
outs
pop
and
ins
rcr
fbld
fisubr
jmp
inc
outs
mov
sbb
adc
movs
mov
or
jb
mov
cs
aad
cmc
movs
or
sbb
arpl
sahf
out
cmps
adc
(bad)
sahf
inc
mov
jp
pop
stc
and
dec
sub
pop
and
push
xor
rol
push
aad
out
test
into
cmp
in
adc
fiadd
jns
inc
arpl
(bad)
in
frstor
movs
cmps
mov
adc
fcom
adc
pop
fiadd
cmp
mov
mov
inc
(bad)
push
mov
push
xchg
dec
add
ficomp
popa
mov
mov
and
xchg
ins
cmp
adc
aad
sub
cdq
mov
sbb
and
mov
scas
lea
stos
mov
adc
into
jo
in
jns
mov
iret
add
mov
xchg
les
ret
test
or
addr16
sbb
push
dec
xchg
dec
ja
(bad)
jmp
or
dec
add
jmp
mov
test
movs
loopne
sub
and
adc
or
in
repz
xchg
jns
aam
movs
popa
or
jnp
push
ret
hlt
or
lea
retf
test
jmp
add
cld
xchg
mov
jbe
retf
shl
cld
ss
jmp
jo
popa
lods
sbb
cmc
retf
popf
aas
int3
or
push
add
inc
cs
ins
sub
out
test
push
ror
or
aam
sbb
jno
push
pop
xor
lods
mov
daa
rcl
stc
push
jmp
add
or
jb
js
in
test
cdq
pop
mov
push
and
(bad)
out
xor
push
hlt
push
push
sub
inc
push
out
ffree
push
cmps
movs
sub
imul
leave
aad
cld
repnz
cmp
cmps
in
mov
(bad)
cmc
mov
das
stos
dec
imul
cwde
xchg
mov
ret
mov
mov
not
mov
(bad)
retf
pop
dec
test
sbb
das
cdq
mov
mov
pop
dec
xor
pusha
out
xor
dec
xor
stc
lock
add
mov
stc
mov
ret
lods
test
jns
lods
mov
int3
pusha
out
xchg
imul
movs
loope
push
imul
xor
bound
imul
data16
jo
inc
call
in
mov
inc
xor
jbe
mov
pop
push
jne
pop
scas
push
mov
stc
jecxz
jp
or
xchg
mov
sbb
sbb
fcomp
retf
add
push
xor
out
push
cmp
xchg
retf
loop
lock
aad
inc
cs
aaa
(bad)
sbb
or
ficom
repz
stc
test
jle
sub
fidiv
fnsave
mov
pop
retf
into
sbb
pop
addr16
xor
push
and
jb
(bad)
jae
or
dec
jmp
pop
and
add
adc
loopne
cmp
jmp
test
lahf
call
sti
fdiv
fwait
lods
cmc
in
jne
pop
cmps
bound
or
test
sbb
fmul
lods
jb
mov
gs
sbb
push
mul
leave
out
and
push
mov
sub
and
mov
call
imul
std
sbb
jmp
cwde
jo
jmp
clc
outs
add
sub
dec
daa
mov
retf
inc
push
int3
or
movs
xchg
lods
fnstenv
inc
pop
push
pop
fstp
(bad)
inc
mov
push
repnz
shr
call
je
xor
and
call
sub
outs
retf
sbb
dec
or
xor
fwait
not
push
xlat
fs
mov
xchg
shr
rcr
mov
jae
dec
adc
or
test
call
loopne
mov
and
inc
mov
jno
lods
ins
icebp
fisub
cld
push
dec
push
inc
lds
mov
pop
adc
add
adc
pop
aas
jl
aam
imul
sahf
lock
cli
xchg
sbb
sbb
into
pop
sub
mov
jge
hlt
xor
push
adc
cwde
sub
repz
pop
pusha
into
mov
xchg
inc
retf
iret
and
mov
and
pop
lds
fidivr
xchg
loop
(bad)
in
ja
out
data16
scas
xor
(bad)
out
push
push
and
not
in
and
xchg
mov
je
lahf
xchg
push
div
mov
and
dec
imul
push
xchg
imul
call
jne
pop
add
lea
jmp
imul
sbb
adc
or
inc
or
std
addr16
xor
daa
rcr
mov
and
mov
int3
dec
xchg
imul
dec
and
dec
sub
outs
in
repz
pop
mov
jns
daa
loopne
pop
js
pushf
popa
out
jmp
push
call
loop
shl
ss
xchg
and
pop
fwait
cmp
inc
pop
scas
mov
and
push
adc
jecxz
mov
lds
std
ficomp
ins
push
das
retf
(bad)
stc
and
stos
lahf
mov
mov
int
stc
jmp
loope
pop
into
in
mov
mov
mov
cwde
(bad)
shl
adc
mov
push
(bad)
addr16
mov
rcr
add
fdivrp
call
das
imul
stc
sub
(bad)
inc
ds
test
sbb
scas
lea
cli
adc
inc
pop
fwait
push
(bad)
mov
mov
int
cmp
in
not
jnp
adc
js
or
js
pushf
imul
pusha
xor
fwait
retf
and
xor
push
punpckldq
imul
mov
lea
pop
iret
jb
movs
movs
inc
jb
mov
ins
xchg
mov
fcom
int
stc
mov
cmc
mov
mov
das
ins
lahf
mov
imul
push
rcr
adc
popf
dec
jmp
fs
jmp
sbb
lea
jmp
mov
in
sub
lea
js
or
jo
int
sbb
jb
add
retf
cdq
test
inc
push
repz
pop
and
sar
add
or
xchg
xchg
inc
sub
mov
sar
sub
dec
in
movs
enter
hlt
pop
ja
or
dec
mov
and
xchg
test
push
pop
add
(bad)
test
mov
xor
xchg
add
dec
enter
xor
stos
dec
aas
pop
cmp
retf
sbb
cmp
adc
push
sub
dec
push
push
pop
call
push
fadd
icebp
dec
xchg
hlt
adc
(bad)
loopne
(bad)
cmc
inc
xchg
inc
sub
jne
adc
cmp
cmp
or
jnp
in
jne
jl
mov
loop
movs
xchg
imul
add
cmp
in
loop
sub
dec
lds
inc
inc
mov
shl
int3
arpl
sub
pop
test
iret
and
js
mov
add
mov
icebp
xchg
movs
rcl
in
push
popf
pop
(bad)
add
mov
(bad)
test
mov
jae
fbstp
out
pop
ins
mov
fwait
add
push
dec
push
xor
enter
mov
push
popa
(bad)
mov
rol
out
ret
retf
inc
gs
mov
sbb
adc
sbb
not
xor
icebp
xchg
inc
adc
das
mov
cmp
out
pop
ficomp
popa
test
(bad)
loopne
push
jns
mov
leave
call
fsubp
cmp
and
push
test
arpl
iret
loope
inc
scas
or
retf
xor
jge
mov
sub
lock
call
inc
icebp
xchg
test
mov
aam
xor
dec
mov
repnz
sbb
mov
xlat
push
mov
mov
rcl
ror
int
mov
ret
fstp
aas
pop
call
cmp
aas
push
cmp
mov
sbb
jl
or
xor
pop
xchg
adc
mov
lea
dec
cmp
add
jmp
xchg
and
xchg
aam
out
(bad)
adc
mov
sbb
daa
add
pop
push
inc
daa
std
mov
dec
jb
mov
in
icebp
mov
jbe
pand
and
xor
mov
pop
pop
cld
es
scas
imul
jo
scas
bound
jge
jg
mov
xchg
push
out
dec
aas
adc
add
mov
inc
daa
and
add
and
(bad)
xchg
adc
adc
call
ds
dec
or
jb
xlat
cmp
cmp
inc
mov
xor
cmp
sbb
add
(bad)
or
adc
aam
aas
fild
js
push
out
and
mov
repz
xchg
and
adc
int
aaa
xchg
or
mov
fcom
dec
push
inc
and
adc
rcl
leave
sti
jno
mov
dec
jp
in
push
sub
shl
pusha
mov
and
jo
sar
sbb
out
sub
add
je
pop
sub
jne
xlat
xlat
sbb
and
push
in
shl
xchg
dec
and
push
mov
inc
fcomi
int
add
call
or
mov
cmp
xchg
pop
cmps
fcmovnbe
xor
mov
fnsave
stos
pushf
adc
out
js
(bad)
iret
enter
daa
imul
push
xchg
pushf
xor
arpl
cmp
dec
retf
adc
jmp
sub
or
dec
pop
adc
movs
inc
mov
aam
sub
out
or
push
xor
pop
scas
inc
adc
aam
push
mov
mov
cmp
fs
pushf
repnz
mov
and
push
repz
mov
nop
neg
inc
inc
mov
test
mov
aaa
mov
jne
jmp
test
sub
popf
xchg
mov
test
cwde
pop
or
leave
mov
jle
sub
dec
outs
jle
or
ds
xchg
icebp
aaa
fwait
repz
test
retf
fldcw
div
jmp
gs
push
(bad)
movs
arpl
sbb
out
mov
(bad)
push
add
adc
push
push
inc
dec
test
pop
add
lea
out
repz
in
les
adc
sub
sub
add
test
xor
sbb
xchg
ins
mov
in
add
dec
push
jmp
mov
jge
int3
sahf
push
jo
leave
movs
dec
xchg
repz
aad
mov
adc
in
mov
pop
push
aam
sbb
xor
pop
jp
call
pop
xchg
add
mov
xchg
mov
or
cmove
sub
popa
in
not
sahf
cdq
dec
popa
add
jl
cmp
add
xchg
adc
test
cmp
xchg
(bad)
div
sub
adc
gs
jns
cmp
push
mov
jmp
out
call
hlt
and
test
mov
xor
pop
mov
pusha
fwait
jnp
or
aas
fbld
shr
or
mov
or
xlat
test
adc
fld
xlat
jno
ins
inc
jb
add
cwde
test
sahf
inc
in
pop
stos
cli
fistp
fmul
inc
pop
pop
or
das
std
mov
dec
xor
xchg
mov
sub
pop
jp
cmp
push
in
mov
dec
mov
sub
mov
loopne
sub
scas
fisubr
add
or
mov
adc
(bad)
sahf
cld
xchg
(bad)
in
mov
stos
cmps
pop
push
dec
retf
inc
pop
xlat
push
inc
(bad)
outs
rcr
mov
(bad)
clc
add
shl
aad
shl
adc
and
lds
or
ins
sti
lock
dec
shl
sub
pop
ins
adc
dec
adc
adc
dec
pop
xchg
sub
pop
into
call
xchg
fistp
mov
xchg
dec
out
retf
cmps
pop
loop
xchg
les
into
cwde
jns
lea
enter
inc
fbld
repz
movs
inc
fild
js
(bad)
sar
push
div
repnz
shl
daa
and
mul
in
fwait
add
stos
outs
inc
movs
ja
add
pop
retf
test
jge
stc
ins
xchg
lea
xlat
in
dec
adc
cs
mov
dec
or
mov
retf
ja
add
pop
add
pop
addr16
adc
mov
stc
jnp
cdq
in
out
icebp
scas
mov
shr
mov
add
jmp
push
fsubr
das
cwde
(bad)
mov
es
add
call
test
ret
inc
dec
popa
fisttp
dec
mov
mov
or
adc
pop
les
push
mov
push
out
mov
push
ss
add
mov
xchg
mov
std
pop
pop
jmp
nop
push
inc
mov
xlat
jns
push
pop
cld
or
sbb
inc
dec
popa
jecxz
out
imul
je
fwait
xor
pop
ret
xchg
movs
ror
push
lahf
test
pop
lea
out
neg
add
fld
pop
cli
retf
xchg
fs
imul
(bad)
mov
or
mov
imul
(bad)
imul
adc
mov
push
sbb
xlat
shr
push
cmp
sbb
mov
cmp
mov
mov
fisubr
pop
popa
and
and
sbb
sub
out
pushw
je
pop
xchg
pop
imul
fild
mov
or
pushfw
shl
mov
sbb
cli
or
(bad)
jge
rol
cdq
je
push
call
jne
les
sub
into
lahf
test
es
pop
inc
pop
sub
movs
cmp
movs
xor
call
(bad)
mov
fcmovnbe
aam
pop
cli
xchg
dec
pop
push
xor
pop
jnp
or
xchg
pop
cmc
scas
xor
jecxz
jb
icebp
push
rcr
push
mov
cdq
xor
mov
sub
fcmovb
mov
repnz
(bad)
(bad)
jg
jl
push
(bad)
call
repnz
inc
ds
cmc
stos
cmp
imul
cmps
js
inc
test
mov
test
mov
shl
push
jle
scas
leave
mul
(bad)
sub
xchg
sbb
jnp
inc
enter
lds
sbb
mov
inc
dec
xchg
push
loop
aas
xchg
cmps
and
jbe
jne
cmp
push
cmp
push
in
mov
or
vcmppd
shr
je
ror
aas
pop
inc
push
lods
dec
lahf
dec
sbb
push
pop
cwde
lock
mov
retf
adc
mov
or
sub
dec
mov
push
add
cmp
mov
add
xchg
call
lock
sbb
adc
jne
push
jmp
int3
leave
dec
jbe
jae
addr16
xor
push
mov
sbb
cmps
jl
xlat
loope
push
dec
outs
outs
das
mov
mov
xchg
xchg
ror
and
(bad)
and
sub
and
jbe
movs
popf
mov
cmp
scas
(bad)
outs
cdq
xchg
out
cld
out
xchg
dec
sbb
mov
fcom
jp
xor
in
repnz
pop
rol
xor
xchg
mov
loopne
sti
ret
ret
adc
bound
xchg
sbb
lds
cdq
add
aaa
pop
mov
mov
rol
ror
aad
popf
(bad)
cmp
dec
mov
stos
je
div
into
mov
sub
hlt
jne
sub
sub
das
mov
sub
cmp
leave
mov
das
cmps
imul
lea
call
mov
and
sbb
popf
push
push
mov
inc
cmp
ret
mov
sbb
inc
mov
mov
cmp
adc
scas
cmp
dec
leave
sbb
jne
lock
mov
mov
cmp
pusha
shr
fistp
and
mov
mov
jg
cmp
sbb
inc
popa
dec
popf
dec
shl
xor
or
or
addps
mov
fisubr
jge
jg
jb
push
add
fimul
scas
mov
scas
int3
out
(bad)
fcmovbe
xchg
fwait
sbb
aaa
out
mov
(bad)
add
cld
or
enter
cmp
dec
pxor
mov
stc
movs
cmp
jno
iret
or
xchg
aad
adc
mov
ins
xchg
int
mov
cmps
xor
fcmovbe
pop
in
jae
pop
sbb
lahf
enter
and
adc
sub
das
dec
mov
jmp
add
ror
or
mov
and
mov
xlat
stos
retf
xor
sbb
lock
fdiv
ficom
xchg
es
hlt
add
aaa
mov
adc
push
xor
mov
dec
dec
jmp
push
xchg
xchg
sbb
mov
cmps
ret
and
loope
inc
mov
das
fld
(bad)
popf
sbb
data16
ins
and
cmp
lock
xor
ins
push
lahf
sub
mov
fwait
sbb
popa
push
add
mov
scas
cmp
pop
inc
jo
fs
add
mov
sub
inc
ds
fbld
xor
push
cmp
pop
lds
(bad)
sbb
xchg
sub
leave
js
nop
xchg
mov
sar
push
sbb
popa
cmp
or
pop
ret
mov
dec
inc
inc
xchg
push
fadd
mov
mov
sti
imul
std
jp
hlt
xchg
addr16
pop
jae
es
mov
mov
jo
cdq
es
adc
cmp
push
in
out
mov
push
ins
xchg
rol
popf
mov
push
in
mov
xchg
arpl
fs
mov
xchg
stos
adc
and
sub
mov
jmp
inc
aaa
jns
cmp
retf
mov
add
mov
sbb
retf
loop
inc
xchg
pop
das
push
mov
push
test
jne
pop
sbb
mov
xchg
retf
fmul
aam
xchg
(bad)
and
mov
repnz
lods
jmp
(bad)
bound
ds
(bad)
sbb
xor
mov
and
pop
xchg
movs
call
jp
test
int
and
xlat
mov
fldcw
push
pusha
pop
mov
addr16
mov
and
ins
mov
mov
inc
inc
xchg
call
loopne
stos
mov
pop
sbb
add
lock
enter
adc
retf
cmp
sahf
add
sbb
add
hlt
sahf
outs
pusha
int3
dec
ret
arpl
popa
(bad)
mov
imul
push
das
push
push
pop
enter
push
shl
rcl
push
sub
inc
stos
lods
adc
xor
push
call
add
cmp
bound
stos
mov
pop
and
cld
jge
mov
pushf
clc
std
aam
sub
jne
adc
ja
test
push
aaa
or
pop
sbb
or
and
imul
xchg
dec
mov
aam
mov
shl
mov
mov
inc
cwde
jp
dec
push
sbb
adc
sbb
mov
sbb
shl
lods
(bad)
sbb
imul
mov
inc
fsub
iret
jno
not
jecxz
mov
repnz
int3
jb
mov
bound
sub
jb
add
mov
add
ret
std
hlt
jge
sqrtps
or
mov
ja
loopne
dec
and
sub
cmp
mov
test
jns
adc
mov
call
mov
imul
pop
adc
push
sub
lods
sub
jbe
lahf
cs
std
pop
xchg
fbld
(bad)
jne
neg
dec
test
cdq
stos
jmp
push
(bad)
fild
cmp
ja
mov
dec
push
push
mov
cmp
sahf
add
or
and
add
jne
cmp
push
sub
nop
inc
jmp
xor
std
imul
or
dec
call
dec
add
mov
pop
lds
neg
aad
dec
mov
dec
arpl
mov
loopne
push
mov
cmps
pop
lods
ins
pop
jne
je
sbb
sub
in
push
xor
mov
add
movs
les
xchg
add
mov
inc
sub
mov
mov
jg
mov
push
push
jle
aaa
out
jmp
out
sbb
mov
dec
mov
pushf
hlt
and
pop
dec
add
push
mov
add
jmp
pop
dec
sbb
mov
mov
fisttp
outs
mov
pushf
sbb
mov
sbb
cmps
clc
add
mov
out
retf
out
adc
movs
dec
aam
arpl
iret
cmps
ja
icebp
loope
test
adc
daa
ret
and
shl
mov
retf
outs
xor
scas
xchg
fs
sub
gs
inc
push
int
aaa
xor
neg
leave
and
xor
jge
cmps
inc
aas
fimul
(bad)
pushf
movs
adc
sbb
dec
mov
mov
jo
mov
in
(bad)
xchg
mov
rcl
in
pusha
jae
rcl
adc
(bad)
jp
mov
xor
pushf
data16
sbb
mov
fidivr
retf
push
sbb
xor
mov
call
arpl
jl
xor
xchg
xchg
pop
or
(bad)
leave
pop
xor
sbb
dec
push
ja
dec
je
(bad)
xor
mov
add
out
(bad)
mov
cmps
leave
stc
dec
add
mov
ins
stc
mov
pop
lods
lods
push
icebp
push
leave
jmp
scas
dec
cwde
jl
mov
fwait
sub
xchg
pop
into
pop
dec
cmp
cmp
int
mov
std
imul
ja
test
sub
sbb
inc
cmps
sbb
bound
(bad)
mov
aam
out
movs
push
mov
inc
fwait
cwde
jne
sub
movs
jmp
(bad)
repz
imul
push
fisub
inc
sti
mul
push
out
outs
dec
pusha
retf
lds
and
jp
mov
fwait
iret
in
or
or
repnz
lahf
fwait
addr16
push
aas
inc
mov
inc
sub
pop
xchg
pushf
mov
sub
mov
shl
fucomi
in
loope
cdq
ss
sub
imul
or
dec
pop
pushf
xor
xor
pop
call
dec
test
adc
(bad)
push
xlat
pop
rol
and
push
ss
xor
ja
jnp
sti
jmp
add
sahf
lods
pop
sub
popf
add
jnp
in
mov
(bad)
(bad)
and
cmp
mov
(bad)
and
outs
inc
xor
dec
dec
ds
or
mov
leave
ds
and
test
movs
or
mov
es
inc
fld
data16
pop
inc
mov
pop
cli
inc
jg
enter
jg
dec
mov
or
cmps
sub
fist
mov
sbb
movs
fild
sar
in
xchg
xchg
sahf
mov
pop
aas
inc
mov
mov
sbb
sub
pop
mov
stos
cmp
sub
aam
inc
test
imul
xchg
push
xchg
xor
pop
or
xchg
ja
es
jl
jle
retf
sbb
sbb
clc
int3
lea
push
xchg
and
lock
shl
icebp
jne
test
mov
jnp
out
lds
aaa
fild
xchg
mov
addr16
adc
lock
data16
pop
adc
idiv
or
fdivr
lods
test
imul
xor
xchg
scas
loop
add
je
imul
inc
dec
idiv
xchg
sahf
daa
fwait
mov
sti
inc
or
int
lods
jle
into
adc
lods
bound
retf
icebp
aaa
mov
xchg
cli
xor
or
fnstcw
imul
inc
inc
jecxz
rcl
jo
movs
movs
mov
push
cwde
inc
sbb
dec
icebp
repz
je
push
js
jecxz
ja
dec
and
ret
test
inc
aad
mov
xor
sub
cdq
xor
retf
ins
dec
jb
jecxz
mov
xchg
adc
test
movs
jecxz
mov
xor
adc
push
lds
inc
outs
fist
scas
mov
sbb
sahf
jno
icebp
js
jmp
dec
add
add
mov
(bad)
jg
sbb
imul
les
icebp
std
push
pop
sub
add
dec
fdivr
xor
loope
ror
test
adc
fidivr
mov
xchg
stos
fdivr
cmp
adc
dec
push
pop
adc
dec
cli
dec
sar
or
and
xchg
sub
cmp
add
mov
shld
xchg
movs
loop
ret
cmp
cmps
pusha
nop
aaa
sar
adc
xchg
pusha
test
fs
mov
pop
js
lock
cmp
jnp
ja
or
int3
sar
sub
cmps
jne
push
sbb
(bad)
enter
imul
int
in
pop
push
fidiv
sub
sbb
rcl
adc
pop
xor
and
cdq
shl
ja
push
sbb
add
push
pop
test
add
push
scas
xchg
in
sub
mov
test
(bad)
xrelease
sbb
adc
jg
lods
dec
dec
xchg
arpl
cmp
imul
retf
dec
movs
dec
dec
outs
ds
adc
std
sbb
and
jg
or
imul
sbb
inc
cmp
jns
ja
jg
xchg
sbb
iret
inc
fidiv
inc
add
dec
rol
jle
mov
xor
ret
repnz
add
stos
shl
mov
aaa
fucom
adc
je
(bad)
aad
cdq
stos
es
pop
repnz
adc
add
stc
lods
pusha
mov
cmp
int3
out
addr16
pushw
ins
push
lahf
xor
mov
int3
nop
mov
jbe
popa
jmp
rcr
sub
data16
fnstenv
int
add
xchg
mov
ror
or
pop
mov
shl
arpl
addr16
out
jns
pop
or
sahf
inc
fcomi
jbe
push
dec
into
cmp
sbb
or
adc
push
sub
in
dec
jno
inc
movs
inc
lahf
jmp
xor
cmp
xlat
test
lds
not
mov
repnz
push
in
or
out
mov
outs
mov
cdq
xor
push
bound
aas
loopne
aas
push
jae
aaa
jmp
mov
sbb
and
fadd
aas
add
push
adc
enter
or
jmp
mov
cmp
push
ror
out
or
sbb
inc
mov
jge
retf
repz
dec
mov
push
dec
mov
pop
fimul
call
push
out
fdiv
adc
hlt
jb
inc
push
aam
int3
imul
cmp
sbb
loope
mov
popf
sbb
stc
test
test
sbb
mov
mov
mov
mov
push
call
es
cmps
(bad)
sbb
(bad)
jmp
xlat
dec
jle
jecxz
add
loopne
sbb
inc
push
test
jmp
sub
cwde
js
mov
loope
mov
retf
les
call
lock
jge
test
cmps
and
js
adc
inc
mov
jae
repnz
dec
sub
add
pop
mov
cmp
mov
push
adc
sbb
cmps
sbb
arpl
sbb
jno
jmp
cmps
sbb
(bad)
ss
ja
stos
push
xor
mov
mov
push
mov
mov
adc
lahf
popf
clc
xor
loope
adc
ror
shl
or
addr16
mov
idiv
adc
mov
fsubp
loope
es
push
jns
icebp
(bad)
repz
add
cmps
out
mov
inc
fwait
jae
sti
xchg
retf
imul
add
dec
or
add
fs
adc
mul
ins
cmp
mov
or
bound
lahf
loope
lock
add
xor
addr16
inc
cmps
mov
xor
mov
push
nop
sbb
mov
sbb
pop
cmp
mov
add
cmp
loopne
fincstp
adc
cmp
push
cmp
ror
sbb
and
fidivr
sub
sub
pop
jb
int
je
lahf
mov
ret
sbb
addr16
test
xor
mov
jbe
jmp
sahf
dec
fcomp
ret
mov
add
rcr
inc
cmp
jo
das
fcom
iret
aam
xchg
sbb
dec
bound
jl
and
push
les
pusha
in
les
cs
sbb
sub
dec
dec
out
pop
jbe
pop
dec
inc
pop
sbb
add
jge
mov
adc
sub
and
and
jl
sub
adc
mov
stos
sti
popa
fwait
and
inc
or
push
jg
sbb
and
mov
scas
jp
push
sti
test
sbb
add
adc
xor
xchg
retf
cmp
and
scas
aam
arpl
inc
shr
push
inc
sbb
fst
xor
jo
jbe
push
aam
inc
jle
xchg
pop
adc
xor
cmp
or
push
mov
or
mov
dec
xchg
mov
dec
das
mov
(bad)
inc
or
(bad)
xor
xor
lds
sub
pop
mov
les
call
mov
ret
movs
push
mov
xchg
outs
cwde
sub
cli
cli
xor
(bad)
ror
in
cmp
in
add
jns
daa
gs
cmp
mov
xchg
dec
in
xchg
adc
inc
adc
sbb
jns
mov
sbb
les
fild
ret
dec
sub
retf
cmp
and
sub
xchg
pop
mov
mov
cmp
push
ins
mov
leave
mov
jo
in
jp
das
push
or
push
add
pop
pop
mov
push
js
pusha
push
push
leave
mov
fwait
mov
cmps
pop
add
repnz
ins
dec
daa
retf
inc
cmp
je
pop
cwde
inc
fisttp
push
aad
jns
scas
and
and
or
pminub
mov
lods
push
(bad)
aam
mov
cmp
xchg
ja
addr16
pop
jae
adc
mov
scas
xchg
mov
cli
(bad)
loop
(bad)
stc
pop
jae
xor
xor
out
jg
icebp
fmul
retf
test
or
lds
icebp
jno
out
xor
cld
test
repnz
lds
mov
jg
jo
push
shl
xor
out
fisubr
inc
mov
fisttp
or
test
jmp
jl
pop
lods
and
and
mov
fmul
addr16
dec
fimul
outs
pop
loop
pop
push
dec
ror
aas
shl
push
mov
cmp
std
mov
jge
push
test
jns
imul
push
out
xor
or
xor
and
cs
push
jl
test
sbb
outs
fidivr
ficom
push
mov
xchg
into
mov
call
test
sbb
cmps
mov
aad
jp
ret
mov
xchg
sbb
ja
aaa
(bad)
leave
fdiv
sbb
sub
dec
push
rcr
mov
(bad)
cld
jne
pop
movs
in
das
rcl
hlt
push
add
fmul
movs
data16
pushf
add
aaa
lods
call
sahf
and
push
dec
cmp
call
enter
push
xor
dec
sub
and
pop
mov
mov
dec
jge
cmp
lahf
jno
sbb
stc
inc
dec
mov
mov
scas
sahf
(bad)
xlat
sub
inc
jns
int
inc
pushf
aam
lods
jae
fwait
mov
adc
sub
ins
fist
push
push
sbb
imul
frstor
fcmovbe
out
mov
and
cwde
je
adc
push
cmp
loopne
call
pop
(bad)
pop
cmp
outs
jne
mov
sti
dec
test
sub
inc
add
dec
push
add
dec
aad
add
and
leave
push
into
inc
add
mov
xchg
test
fs
jo
wbinvd
retf
or
ins
cmps
inc
imul
retf
xchg
add
fwait
jl
jmp
jecxz
xor
xchg
xchg
jnp
not
push
mov
mov
pop
jp
imul
cmps
sti
ds
push
pop
jb
aad
sub
cmp
mov
sbb
repnz
mov
dec
xor
sub
daa
jb
lahf
pop
dec
std
xchg
(bad)
outs
idiv
mov
pop
rcr
jbe
ins
mov
jne
repnz
push
retf
jmp
add
(bad)
mov
jp
xor
and
and
ja
mov
sar
push
mov
xchg
push
xchg
sbb
int
push
push
fcom
leave
sub
xchg
add
cwde
rcr
fucomi
(bad)
in
mov
jl
imul
mov
xchg
sbb
sub
jmp
fwait
sti
outs
pusha
lahf
and
push
cmps
in
loope
cmp
adc
xor
js
int
or
aad
js
push
cmp
test
add
ret
cmovb
cmps
les
pop
xchg
jnp
vmwrite
mov
dec
shl
(bad)
fsubr
adc
mov
inc
sbb
and
mov
stc
jle
lds
in
adc
stc
stos
gs
jmp
and
dec
sbb
aam
jl
ins
push
add
sub
dec
rol
xlat
cmc
ss
(bad)
jnp
fdiv
mov
push
pop
arpl
cmp
leave
inc
xor
test
enter
lea
cli
adc
ror
test
push
clc
out
out
mov
pop
cmp
inc
mov
cmp
dec
pop
jo
cwde
(bad)
test
aaa
outs
out
cmp
jmp
xor
sub
xchg
mov
data16
jle
add
push
in
pusha
dec
not
jno
push
scas
inc
cmc
sub
mov
cmp
pop
and
mov
inc
xor
push
adc
pop
sub
add
popf
iret
jne
dec
xor
or
fdivrp
push
fld
mov
mov
cli
push
mov
int3
aad
sbb
jb
int3
lods
dec
cmp
push
daa
addr16
dec
sub
dec
add
pop
jnp
inc
sbb
mov
pop
cld
adc
fsubr
cdq
cmp
mov
pop
push
or
lods
xchg
arpl
clc
not
inc
and
mov
loope
imul
(bad)
stc
mov
adc
arpl
pop
xchg
sub
outs
ror
jl
popf
jb
xchg
mov
inc
mov
lea
int
sub
inc
pop
dec
into
mov
retf
sbb
call
pop
or
push
gs
cwde
xlat
dec
rol
push
sbb
rcl
jnp
add
test
lea
nop
test
pop
mov
xchg
and
lods
mov
xchg
mov
cmp
xor
push
xchg
or
shl
adc
jo
rcl
dec
xor
inc
or
xlat
xchg
out
jle
xchg
fninit
mov
mov
pop
ins
sub
jo
push
mov
jmp
push
push
je
cmp
sbb
adc
or
dec
ds
into
stos
int3
xor
imul
fst
inc
sub
mov
mov
and
mov
add
pusha
fadd
cwde
xchg
xchg
into
dec
imul
lods
ds
jae
mov
aam
and
sbb
cs
add
xor
loop
repnz
mov
inc
mov
retf
sub
popa
push
sub
dec
fnsave
sbb
std
mov
arpl
ja
in
popa
add
in
fcomp
jmp
fchs
mov
cs
clc
sbb
sub
xor
ss
mov
shl
rcl
add
gs
sub
or
fwait
mov
stc
cld
test
outs
ds
iret
mov
adc
dec
or
sub
sub
dec
ret
jmp
mov
out
jge
ins
xor
dec
cmove
jne
add
ficom
cmp
in
push
sbb
in
js
leave
loope
jae
cwde
cmc
ins
repz
mov
mov
jl
push
sbb
sub
xor
push
jmp
jmp
cmp
imul
sbb
das
int3
push
push
dec
inc
mov
add
sbb
push
and
std
stc
or
rol
mov
add
mov
mov
out
dec
mov
out
or
ds
jns
shr
add
xchg
xchg
rcl
dec
xlat
movs
jnp
mov
test
mov
adc
retf
lock
mov
adc
leave
ret
cmp
mov
ja
dec
mov
cmps
jmp
inc
mov
and
or
xchg
sub
test
pop
mov
shl
push
jle
cs
ret
ficom
xchg
rol
push
out
and
mov
bound
test
fild
jg
dec
jb
neg
fild
pop
mov
pop
adc
mov
push
js
xchg
cmps
sub
lahf
call
inc
jmp
xor
lahf
pop
cmp
xchg
mov
sub
jns
or
cmp
pop
ins
cmc
jne
loopne
jp
daa
retf
repz
pop
movs
dec
in
cmp
mov
sub
mov
imul
dec
mov
icebp
je
push
xchg
repz
xchg
inc
shr
add
add
imul
mov
arpl
pop
hlt
fnsave
sbb
push
hlt
aaa
or
retf
cmp
pop
xor
out
push
pop
sbb
fld
cmps
stos
lods
jp
sar
shl
je
or
ret
(bad)
push
cmps
mov
or
xor
int3
ins
cmps
cmp
hlt
jae
cmp
and
xor
das
in
and
sub
cmp
sub
push
push
jp
mov
rol
in
sbb
dec
loop
out
stc
daa
and
mov
mov
jns
(bad)
neg
pushf
outs
mov
ja
into
sub
or
inc
mov
mov
dec
in
jp
dec
ja
mov
sbb
or
xchg
stos
or
mov
rol
mov
fstp
jnp
sub
in
dec
jmp
(bad)
adc
das
pop
dec
mov
sbb
mov
jp
leave
sub
jge
mov
test
push
fucom
cmp
or
imul
or
xchg
pusha
adc
jb
xor
adc
jb
into
rcl
lods
enter
ror
shl
imul
xchg
jnp
jl
popf
enter
and
sub
mov
movs
int3
sub
inc
push
pushf
fistp
movs
test
shr
pop
ret
or
xor
movs
push
outs
pop
call
sub
pop
clc
push
jg
cwde
and
jae
jne
and
fdiv
dec
adc
and
mov
pop
(bad)
iret
dec
sbb
pop
cmp
and
mov
jne
xor
cmp
lea
leave
adc
xor
fs
mov
xor
repz
sti
sub
pushf
test
sub
stc
push
xchg
lods
xchg
cs
imul
mov
pop
shr
cdq
iret
loope
shl
movs
and
lods
lea
mov
not
hlt
das
out
ror
movs
loop
int
add
(bad)
and
xchg
mov
push
fisubr
retf
sbb
and
sbb
mov
mov
jle
pop
movs
sub
call
cmps
push
(bad)
dec
jb
and
cmps
mov
retf
mov
jae
cmps
jle
add
sub
ficomp
mov
aaa
int3
inc
push
pop
int
jmp
(bad)
mov
popa
jmp
dec
sub
repnz
aad
jmp
inc
sbb
stos
dec
fidiv
fidiv
retf
rcr
and
jnp
mov
inc
int3
call
mov
add
cs
mov
neg
imul
or
iret
push
imul
push
cwde
loopne
or
push
retf
test
(bad)
mov
pop
mov
cmp
not
sar
out
mov
out
xchg
inc
push
mov
pop
cmps
inc
iret
inc
sub
sti
in
aad
dec
cmp
sub
jo
jmp
js
jmp
dec
mov
pop
jl
pop
mov
js
sbb
popf
leave
out
ss
gs
pop
sbb
enter
movsx
inc
stos
mov
pop
push
xlat
(bad)
fidiv
xor
pop
imul
cmp
ss
dec
inc
pop
mov
inc
ins
les
cdq
push
int3
bound
loop
fistp
cmp
fstp
daa
aas
movs
movs
shl
pop
rol
out
push
fst
lea
dec
mov
push
xor
loopne
dec
neg
sub
test
out
pop
dec
jo
fldl2e
jecxz
pop
and
xlat
or
inc
jns
jle
sub
add
adc
mov
xchg
mul
pop
call
enter
adc
mov
loopne
in
fadd
xor
addr16
cmp
aam
daa
cmps
outs
push
sbb
xor
adc
(bad)
stc
jno
int
stos
mov
and
pop
cdq
loop
xor
dec
repnz
movs
pop
sbb
or
fadd
push
gs
xlat
mov
push
imul
xchg
jo
jmp
or
jbe
aam
addr16
daa
sub
fwait
lods
cmp
xor
xor
ja
inc
push
call
cmps
(bad)
data16
cli
mov
xchg
cmp
add
lds
mov
mov
fucomip
dec
mov
add
cs
push
jmp
inc
imul
outs
sbb
(bad)
adc
int3
or
jg
in
int3
fs
hlt
jmp
mov
sub
or
mov
(bad)
inc
sbb
adc
push
mov
test
and
pushf
enter
hlt
mov
leave
xchg
xchg
nop
shl
inc
xor
mov
and
mov
push
outs
movs
and
or
dec
addr16
pop
push
stc
jle
and
dec
cmps
call
repz
mov
adc
test
jge
jl
jnp
bound
dec
adc
adc
add
fimul
mov
and
mov
sub
cdq
mov
out
push
imul
call
push
add
aad
or
jae
or
jp
inc
and
repnz
mov
mov
and
sahf
hlt
ins
jb
add
mov
cmp
xor
push
lahf
pop
mov
int
and
push
sub
into
inc
cmc
pop
jg
cmps
mov
in
cmps
retf
mov
jnp
outs
cmp
stc
cmp
pop
mov
sbb
or
inc
add
enter
inc
scas
repz
jmp
inc
jmp
mov
(bad)
mov
pop
xor
aam
dec
scas
leave
aad
mov
sbb
push
sbb
dec
jge
push
jo
rcr
dec
push
dec
sub
pop
mov
xchg
xor
fucom
mov
jo
jecxz
daa
jl
jae
pop
ds
or
xor
retf
ret
jo
push
lods
(bad)
stos
loop
mov
in
jl
dec
xchg
in
pop
lock
in
add
into
jle
mov
xor
xchg
fwait
or
mov
(bad)
jl
pushf
shr
xor
movs
loopne
test
mov
aas
cmp
xchg
or
mov
icebp
lods
jmp
stc
retf
push
fisttp
xchg
fcmovnu
out
pop
or
jecxz
ins
dec
and
pop
fs
mov
cmp
inc
fld
mov
lahf
sub
xchg
cmp
mov
ins
and
sbb
popf
imul
and
xor
pop
mov
stos
mov
ins
imul
jno
icebp
pop
rol
stos
adc
cmp
in
sub
dec
add
push
add
adc
dec
fidivr
adc
jmp
cmp
jmp
xor
rol
cmp
call
movs
fs
jmp
mov
pop
mov
adc
xchg
jnp
jns
ret
in
nop
jbe
cmp
mov
xor
ins
inc
inc
xchg
jecxz
xlat
ins
fsub
outs
pop
pusha
(bad)
or
rcr
adc
ficomp
fld
sti
nop
push
xlat
pop
or
cmp
adc
add
ja
mov
xchg
icebp
out
and
inc
mov
stc
test
or
je
add
xchg
loope
popf
sub
in
sub
lock
push
sahf
add
std
loope
mov
push
jno
shl
jno
dec
push
xor
aam
loopne
retf
das
cmp
xchg
jp
arpl
sub
pop
cmp
xor
out
adc
aaa
fsubp
test
ror
scas
jnp
je
in
iret
push
mov
lds
xchg
lods
and
jo
daa
dec
inc
mov
stos
dec
mov
sub
call
imul
add
inc
mov
les
or
call
add
pop
cmps
inc
mov
xchg
mov
(bad)
push
loopne
xchg
dec
sbb
mov
mov
aad
xchg
cmp
jno
cmp
cmp
or
inc
mov
or
jecxz
cli
sub
dec
cs
mov
std
aad
jno
and
mov
sub
xchg
fucom
cld
xor
inc
scas
fmul
cmp
pop
pop
nop
dec
mov
and
imul
dec
int3
mov
sbb
jp
jo
ins
pushf
jno
mov
loop
adc
pop
aaa
adc
push
jno
inc
push
xor
fs
push
cdq
mov
not
inc
mov
jns
xchg
cmp
int
inc
pop
jmp
push
pusha
test
xchg
scas
pop
jne
push
pop
xchg
hlt
mov
in
mov
push
les
push
das
xor
adc
call
mov
cs
sub
sub
in
xor
sbb
adc
scas
xchg
fmul
out
es
mov
and
mov
pop
test
test
wrmsr
and
cmp
dec
daa
cmps
cmc
and
push
(bad)
mov
aas
test
xchg
aam
push
iret
(bad)
imul
cld
or
or
adc
fidiv
cmp
hlt
push
add
adc
jb
and
fs
sbb
pop
inc
pop
jmp
test
cmps
outs
cmp
lods
add
xor
imul
in
jmp
sub
fild
bound
test
xlat
mov
ja
xchg
int
xor
sbb
sub
aas
xchg
jbe
stos
mov
sub
not
mov
jle
in
mov
pop
adc
mov
inc
pusha
nop
nop
fadd
cmp
aad
sbb
mov
inc
mov
mov
int3
fidivr
push
mov
inc
retf
rcr
inc
pop
(bad)
pop
push
and
sahf
jg
shl
or
xchg
fld
ret
or
(bad)
lea
push
or
ins
pop
adc
repnz
mov
or
push
mov
mov
push
jecxz
test
es
aaa
xchg
pushf
dec
mov
inc
pop
jle
int
add
sbb
aam
retf
aam
add
adc
inc
(bad)
scas
dec
pop
add
jge
pop
push
xor
cs
sub
lea
imul
ss
mov
movs
mov
scas
adc
fisubr
sbb
js
sbb
imul
sbb
aam
imul
mov
cmp
lock
int3
mov
mov
outs
shr
call
mov
rol
out
retf
xchg
ficomp
jae
jmp
jmp
pop
cs
inc
jae
rcr
jbe
jne
mov
repnz
(bad)
shl
adc
rcl
dec
cmp
mov
push
pushaw
outs
xor
dec
jge
xchg
jns
push
test
mov
sbb
mov
clc
pop
mov
adc
jecxz
push
adc
jle
enter
pop
jge
(bad)
fistp
pop
xchg
ss
test
pop
add
pusha
call
bound
rcr
and
pushf
push
xchg
push
push
pop
(bad)
fldenv
fs
jge
mov
arpl
aam
outs
inc
cmp
add
dec
in
outs
xchg
cmp
inc
pop
inc
aad
(bad)
add
fstp
jb
cmp
test
xchg
xchg
pushf
outs
jp
mov
fnsave
shr
jmp
jmp
lea
stos
stc
jo
pop
xor
call
add
jle
xor
test
pop
add
hlt
xchg
movs
cmp
popa
jg
sub
mov
gs
out
shr
popf
ins
or
aad
bound
jns
mul
scas
dec
lahf
jle
add
push
ud0
and
push
ror
sub
mov
mov
dec
pop
shl
into
sub
pop
sbb
nop
(bad)
mov
and
repnz
push
sub
mov
inc
outs
add
nop
loop
aam
add
sbb
jb
out
push
fmul
sub
cmps
nop
inc
ficom
sbb
ins
dec
add
pop
or
or
(bad)
mov
mov
mov
add
push
or
pop
pop
loope
fild
sbb
addr16
or
fdiv
in
sahf
fmul
adc
cmp
xchg
jmp
pop
pop
jno
or
aad
aas
es
adc
loope
and
or
xor
fidiv
mov
inc
hlt
cmp
push
jo
mov
in
push
xor
add
mov
push
jmp
mov
(bad)
cmps
(bad)
les
xchg
aas
inc
fistp
jb
mov
(bad)
jns
je
aam
shl
inc
mov
push
xor
fs
adc
xchg
or
fwait
js
jnp
sbb
js
cmps
or
adc
jns
pop
not
out
repz
add
mov
cmp
std
in
sub
dec
add
inc
cwde
inc
loope
and
xchg
xchg
xor
push
stc
dec
movs
or
dec
test
adc
inc
xlat
jge
pop
outs
push
dec
sub
mov
in
xor
sbb
and
daa
sub
rcr
push
in
mov
dec
xlat
sahf
push
jg
jbe
in
lahf
adc
rcr
inc
or
movs
sub
add
bound
test
mov
sbb
fwait
cmp
jmp
nop
cmps
pushf
in
adc
stos
icebp
(bad)
adc
inc
js
ret
sub
add
adc
(bad)
jecxz
push
hlt
add
sub
scas
add
dec
outs
aas
push
or
gs
jle
mov
sbb
popa
out
sub
iret
jmp
out
sub
pop
outs
push
add
mov
imul
fisttp
pop
mov
leave
and
daa
ficom
sub
mov
push
out
in
sahf
push
pop
loop
pop
gs
mov
je
push
dec
loopne
shl
out
jne
sub
loop
mov
shl
mov
hlt
ss
(bad)
movs
(bad)
sub
cmp
sar
loope
and
scas
call
add
je
fcomp
xchg
(bad)
rcr
pop
adc
or
(bad)
adc
(bad)
in
sahf
lock
mov
xchg
lahf
dec
cmp
call
fist
push
mov
ret
mov
stos
xchg
movs
ficom
movlps
sub
push
arpl
mov
adc
or
test
jl
push
fild
fs
inc
sti
dec
pop
xchg
mov
lea
mov
imul
rol
loopne
(bad)
stos
test
inc
jle
mov
pop
or
pop
mov
not
js
aas
aas
rep
and
cld
fldenv
into
daa
lods
mov
clc
and
pop
xchg
mov
out
leave
ret
cmp
ret
pop
xlat
shl
into
sub
mov
vorps
retf
sub
out
aam
sar
je
cs
in
mov
into
out
pushf
pop
adc
jecxz
cmp
imul
stos
adc
out
ret
mov
pop
iret
push
out
jle
adc
add
pop
jmp
stos
sbb
cld
sub
js
fsub
iret
addr16
dec
repnz
sahf
jne
(bad)
test
inc
mov
jne
iret
push
fmul
lods
loope
push
call
mov
bound
(bad)
adc
inc
enter
sbb
dec
ins
xchg
cmp
icebp
mov
aas
push
mov
out
add
xchg
sbb
jp
and
mov
xor
dec
inc
pop
out
or
iret
lock
stos
xchg
dec
movs
xor
sti
pop
aas
cmp
aas
lods
or
xchg
das
mov
adc
pop
dec
in
imul
mov
push
push
xchg
ds
mov
test
adc
inc
xor
add
stos
popf
pop
test
gs
mov
add
inc
or
mov
mov
xor
and
test
mov
pop
inc
icebp
(bad)
je
(bad)
xor
xchg
xchg
nop
cmp
imul
mov
mov
sbb
or
cmps
lods
repnz
or
adc
shr
mov
jne
xchg
push
mov
push
add
xor
ror
ins
cs
push
jo
(bad)
cwde
mov
cmp
mov
or
fidivr
jae
ds
adc
and
mov
sub
sar
in
sti
mov
cmp
sbb
in
sub
mov
sbb
or
cmps
xchg
mov
pop
cmp
dec
mov
mov
rcl
push
scas
fistp
lods
and
in
mov
fsubr
pop
inc
pusha
xchg
movs
jl
push
in
ror
clc
jns
lock
cwde
lods
push
xchg
es
pop
pop
mov
in
rcl
pop
mov
mov
jg
mov
inc
jmp
xchg
xchg
stos
or
mov
fistp
and
add
sub
or
in
dec
sub
aad
and
fs
cwde
(bad)
xor
neg
fldenv
dec
inc
dec
add
in
inc
es
dec
movs
cwd
retf
pusha
add
mov
xor
or
(bad)
call
cmp
add
jecxz
fsub
ror
test
inc
and
in
out
sbb
popf
fs
push
xor
(bad)
and
call
and
mov
cli
mov
ss
jmp
adc
pop
or
test
xor
mov
(bad)
cmp
jp
dec
push
inc
xor
in
jge
ins
stos
sbb
mov
push
retf
stc
icebp
jb
add
(bad)
pop
out
xor
xchg
mov
ficom
push
and
cli
out
sbb
dec
cmp
(bad)
mov
ss
push
lea
ins
icebp
test
adc
loop
or
rcpps
push
add
pop
mov
dec
add
jne
sub
or
stos
mov
cmp
out
sbb
add
push
gs
fld
sub
addr16
push
mov
mov
adc
popa
jmp
xor
sbb
mov
and
mov
popf
fsubr
(bad)
cmp
jno
pop
rol
lds
fisttp
outs
mov
jge
mov
mov
ja
or
jo
aad
dec
sbb
adc
xchg
cmps
hlt
jp
sub
ja
jge
test
add
les
push
js
loopne
pop
lea
(bad)
dec
iret
pop
sti
daa
popf
fmulp
cmp
mov
je
imul
cmps
jo
or
sbb
xchg
sysret
xor
xchg
lock
adc
out
mov
(bad)
sti
pop
dec
xchg
js
(bad)
js
fs
add
jmp
in
or
outs
fnstenv
add
mov
mov
fsubrp
popf
addr16
xchg
push
je
mov
call
into
jp
into
xor
mov
fdivr
addr16
inc
add
popa
out
dec
mov
jne
mov
pop
xchg
jmp
inc
aad
mov
xor
daa
call
addr16
aad
jle
and
int
push
dec
jl
cmp
dec
cmp
stos
fmul
ds
mov
or
(bad)
lds
ja
js
outs
push
dec
fst
xor
aam
loope
adc
int3
ficomp
inc
cmp
ret
or
and
sub
mov
enter
pusha
cli
repz
cmps
lods
push
mov
popa
sub
cmps
dec
jae
call
jg
hlt
pop
mov
int3
push
fld
sub
xor
xchg
cmp
lods
cli
outs
in
jns
clc
fsubr
cwde
push
int
ret
stc
xchg
ja
retf
xchg
mov
ins
lahf
data16
sar
imul
pop
xchg
jle
xchg
mov
das
sbb
push
movs
call
mov
xchg
sub
pop
pop
imul
adc
adc
int
scas
ficomp
jns
in
test
xor
mov
rol
pop
imul
sbb
mov
push
(bad)
lea
mov
add
inc
add
push
iret
jmp
mov
jae
inc
xor
pop
out
repnz
sbb
cld
pop
imul
jmp
inc
call
icebp
inc
icebp
out
sbb
add
or
fiadd
out
cmps
pop
dec
les
push
and
inc
xlat
push
jb
call
loope
shl
icebp
aad
mov
dec
adc
clc
out
sub
inc
fnstenv
and
pop
pop
fnop
pop
jo
mov
rcr
mov
xor
pusha
hlt
imul
cmp
jno
fistp
adc
sar
ret
je
mov
(bad)
jb
mov
push
adc
stos
aaa
imul
pushf
cdq
push
std
add
pushf
and
sbb
out
xor
mov
jg
pusha
sub
inc
mov
fsubrp
pop
lods
fwait
popf
mov
xor
mov
out
frstor
xchg
mov
mov
add
bound
scas
shl
mov
mov
stos
xchg
push
ins
cmc
mov
mov
cmps
loop
mov
call
mov
int3
in
pusha
call
retf
or
sbb
shr
scas
jmp
outs
mov
fnsave
std
pop
adc
jmp
cli
mov
sub
pop
or
adc
sub
(bad)
mov
cld
jns
cmps
mov
not
sar
add
push
stc
adc
mov
jmp
retf
pop
adc
xchg
mov
retf
outs
mov
out
xor
in
test
push
popa
inc
test
in
mov
dec
dec
rcl
inc
or
in
lock
xchg
rcl
lods
adc
outs
test
sti
imul
fiadd
retf
inc
leave
sub
es
mov
ja
sbb
push
sbb
inc
inc
pop
shr
sbb
push
cld
and
sub
lods
shl
ja
cmps
xlat
lods
stos
(bad)
loop
adc
add
cmps
inc
aaa
dec
inc
cmp
pop
push
pushf
movs
sar
stc
in
fisttp
out
cmps
and
pop
mov
pop
je
xchg
in
loope
lahf
mov
push
fsubr
pop
dec
out
xor
leave
loopne
pop
jno
jmp
mov
repnz
sar
shr
pop
aam
add
cmp
fisttp
inc
cmp
out
enter
outs
mov
dec
dec
jmp
xlat
push
and
pop
dec
mov
jle
cli
rcr
in
(bad)
dec
inc
jne
retf
pushf
and
inc
push
push
mov
cmps
jo
ins
in
retf
(bad)
nop
movs
cmp
push
aad
jle
push
fist
arpl
jne
test
leave
jg
cmp
lahf
push
mov
nop
fnstsw
loopne
cmc
(bad)
xchg
stc
shl
fmul
cwde
mov
push
adc
pop
or
ret
aas
mov
jle
fidivr
inc
mov
push
dec
inc
loop
push
mov
dec
(bad)
iret
cmp
jae
call
dec
rol
cmp
jae
xchg
es
or
jge
push
jmp
push
jb
cmps
lock
mov
in
jno
sbb
cmp
push
cmp
and
addr16
mov
aam
test
repnz
repnz
fild
jbe
jae
repz
sub
inc
loope
fadd
push
sahf
in
mov
repnz
cmps
clc
ret
outs
cld
sar
mov
scas
lods
test
(bad)
jg
xor
mov
inc
cld
or
lods
mov
inc
cmps
mov
jo
les
jb
sbb
ficomp
pushf
sbb
cdq
test
pushf
ja
std
lds
mov
test
sti
call
imul
inc
aad
add
cmp
mov
(bad)
jp
cmp
xlat
stos
mov
je
jge
out
pop
dec
test
inc
popa
pop
pushf
adc
or
retf
ret
ret
inc
fcomp
aas
jo
repnz
push
or
shl
ror
dec
mov
leave
out
jb
jb
lahf
rol
fisubr
jl
push
repz
mov
jmp
mov
sub
loope
sbb
scas
std
jl
jno
loopne
scas
bound
and
inc
lods
xchg
sahf
(bad)
add
iret
lods
loope
data16
pop
jp
int
aad
test
xor
jecxz
mov
in
popf
dec
rol
adc
(bad)
retf
xor
push
push
lods
mov
jl
push
fbstp
shl
cli
xchg
sti
mov
std
mov
push
add
adc
in
mov
scas
in
(bad)
jno
dec
adc
xor
mov
pop
(bad)
shl
jp
ins
and
mov
inc
add
add
das
imul
stos
(bad)
mov
test
jb
pop
mov
cli
jmp
mov
fdiv
addr16
sub
and
pop
sub
ds
jmp
xor
sub
xchg
dec
jle
xchg
stc
popa
int
push
push
int3
sti
adc
imul
xchg
xchg
clc
call
sbb
inc
inc
jl
ret
adc
add
pop
leave
adc
adc
xchg
cpuid
fmul
xor
mul
ret
psadbw
lahf
pop
cmc
jb
mov
adc
cmp
push
pop
outs
movs
xor
jo
sbb
fld
pop
xor
jle
popf
mov
out
jge
cmp
inc
xor
xchg
pop
push
jae
mov
or
repnz
or
mov
adc
test
jmp
aas
repnz
and
fidivr
mov
jmp
or
ret
and
mov
add
sub
mov
mov
(bad)
push
adc
sahf
popf
(bad)
addr16
and
stos
mov
outs
cmp
add
fwait
daa
call
mov
(bad)
or
popf
add
hlt
aaa
adc
(bad)
jle
xchg
jmp
add
add
pop
into
or
fcmove
int3
test
or
jae
mov
scas
xchg
xchg
jb
push
mov
ja
popw
bound
and
jno
aam
and
pop
cs
call
pop
pop
jg
mov
aaa
add
push
add
sub
inc
sub
retf
xor
push
adc
sbb
or
add
or
mov
xchg
enter
and
inc
mov
push
jbe
push
xor
inc
cmp
sbb
fmul
inc
imul
pop
into
pop
mov
xor
xchg
mov
fnstcw
sub
inc
test
cli
mov
cld
sub
jle
add
xor
shl
push
mov
jbe
repnz
push
fiadd
mov
out
add
mov
sbb
enter
jnp
or
repnz
cld
inc
pop
outs
in
cmc
repnz
push
xchg
jecxz
bound
sbb
(bad)
icebp
dec
in
push
dec
xor
in
fld
lock
jae
mov
sbb
sbb
out
ja
push
cwde
sbb
inc
fnstcw
ins
movs
scas
cmp
mov
repz
rcl
into
bound
and
cmp
and
dec
fisttp
test
and
aam
je
mov
ins
cmp
mov
and
inc
cld
xchg
inc
inc
loopne
cmp
shr
test
outs
xchg
and
mov
mov
and
mov
lea
imul
sub
xchg
or
bound
or
add
dec
push
aad
inc
sbb
ins
add
xchg
scas
outs
or
pop
sahf
jb
inc
sub
ins
push
push
mov
test
outs
push
ja
dec
adc
repnz
mov
adc
push
pop
jno
sbb
jnp
xchg
sub
mov
dec
mov
loop
mov
xchg
and
sbb
pop
std
pop
pop
call
test
fucom
add
push
cmp
add
paddusw
popf
js
pop
je
test
aad
jl
pop
sbb
mov
outs
rcr
ret
mov
adc
mov
push
dec
cmc
sbb
outs
sub
and
js
mov
sti
arpl
jae
cmovno
inc
and
cdq
inc
outs
pushf
and
jb
push
dec
inc
mov
push
fadd
mov
fdiv
sbb
mov
jmp
in
sub
add
mov
inc
mov
gs
daa
sbb
aas
adc
int3
stc
lods
mov
mov
ins
push
mov
push
mov
mov
test
cmps
mov
ret
jbe
adc
xlat
push
repnz
call
mov
jo
lods
and
mov
xchg
jne
rol
je
jns
popf
out
pushf
pop
pop
sbb
inc
ins
cmps
pop
pop
or
ins
sub
add
mov
adc
mov
add
fidivr
sbb
mov
push
add
cmp
scas
add
iret
ficom
ficomp
ds
aaa
jbe
or
adc
popa
(bad)
into
outs
aas
test
pop
cdq
js
adc
push
dec
in
adc
and
sahf
out
shr
and
shr
push
stos
xchg
cmps
dec
jp
mov
(bad)
jg
cli
jmp
fistp
and
adc
mov
inc
mov
cmc
out
ins
loope
pop
xor
out
sub
push
aas
xor
loop
dec
inc
into
xor
test
ds
iret
es
inc
addr16
mov
repnz
ins
push
push
out
add
imul
ins
pop
dec
out
push
jge
xchg
push
out
xchg
lea
pop
arpl
dec
mov
cli
addr16
out
jecxz
jnp
mov
cmps
ret
or
jecxz
mov
push
dec
or
mov
sbb
push
loop
xchg
jno
xchg
and
aam
and
cmp
mov
pop
cmp
mov
adc
pop
mov
pop
in
call
enter
in
cs
cmp
jl
jg
popa
out
shl
sub
jnp
mov
adc
cli
mov
movs
xchg
shr
push
mov
les
or
push
dec
add
ror
or
outs
sub
in
add
fiadd
ret
xor
jbe
dec
dec
(bad)
mov
fs
mov
or
ins
mov
mov
and
ds
mov
fdivr
adc
in
loopne
dec
stc
sti
int3
lods
ds
lods
or
push
ss
sti
ds
sub
inc
cmps
gs
or
sub
cwde
mov
pop
js
inc
sbb
jecxz
das
int
sub
int
dec
out
inc
(bad)
das
test
and
or
aam
or
xor
test
pop
xchg
aas
stos
aas
sub
add
cdq
jmp
jl
pop
mov
iret
xlat
push
inc
pop
mov
test
push
fistp
add
mov
pop
jne
mov
adc
retf
cmp
or
pushf
test
int3
and
mov
inc
and
xchg
cmc
mov
stc
outs
faddp
cdq
mov
shl
popf
and
mov
cwde
mov
cmp
pop
rol
jne
xor
xor
in
iret
pop
fs
ds
and
push
rcr
mov
lds
push
pop
dec
arpl
dec
mov
fiadd
dec
xchg
jle
sub
aad
ret
or
rcr
and
fwait
sub
inc
fwait
stc
shl
js
pop
or
loope
push
out
movs
cmp
jg
test
scas
ss
sub
outs
sub
mov
mov
adc
jp
adc
sub
add
mov
mov
sub
push
cli
sbb
mov
mov
cmps
dec
pop
mov
daa
sub
imul
popa
add
sub
lods
and
fisttp
jmp
(bad)
in
and
sahf
or
test
daa
bound
mov
sbb
xlat
push
call
ins
mov
push
adc
jns
std
repz
xchg
sti
dec
(bad)
push
popf
iret
inc
and
test
call
dec
mov
mov
loopne
or
enter
push
xchg
cmp
(bad)
aaa
or
mov
push
jbe
dec
or
retf
fsubr
not
cmp
sahf
cdq
mov
jmp
jl
pop
les
or
or
ins
inc
jae
out
jecxz
jle
sbb
mov
cmp
stos
imul
test
loope
sti
js
fscale
sub
pop
call
bound
mov
daa
sub
dec
loopne
pop
push
cmp
dec
sar
jmp
rcl
lock
mov
movs
dec
fs
imul
add
(bad)
das
and
imul
arpl
jb
mov
div
into
pop
rcl
in
out
sbb
jmp
pushf
push
xor
loopne
or
(bad)
dec
inc
adc
das
add
mov
mov
fisttp
push
sub
jae
call
lahf
jns
and
or
push
or
mov
ret
mul
sbb
rol
push
hlt
stos
xchg
mov
push
adc
(bad)
stc
int3
js
aam
sub
hlt
les
loope
cmp
sub
(bad)
addr16
add
test
ins
xlat
in
pushf
sub
push
sbb
and
sub
es
aad
xor
lahf
aas
dec
sbb
(bad)
dec
jmp
inc
xchg
aad
add
es
push
push
push
repz
and
mov
fs
popf
call
fcom
push
mov
cmc
loope
dec
xchg
push
xchg
(bad)
sar
scas
outs
push
fimul
jno
xor
mov
fdiv
pushw
xor
inc
jl
mov
mov
xchg
mov
jae
or
sbb
bound
push
pop
(bad)
xchg
(bad)
call
fistp
rcl
movs
inc
sub
mov
clc
js
lods
jb
aad
jecxz
jp
dec
fld1
mov
sqrtps
ss
dec
push
and
stos
xor
shr
sub
xor
jne
add
loopne
or
rcl
dec
dec
jmp
nop
mov
(bad)
int3
push
jnp
fdivr
mov
inc
jecxz
push
mov
out
xchg
lds
call
out
lahf
shr
mov
sub
lds
scas
cli
add
or
jg
mov
cdq
je
xor
rcl
or
data16
adc
movs
test
sub
push
mov
push
and
sub
ins
mov
movs
idiv
in
push
shl
pop
nop
out
mov
xchg
retf
sbb
out
sub
mov
mov
dec
into
sub
mov
sbb
sbb
clc
adc
aaa
mov
xchg
jecxz
retf
bound
pop
pop
rcr
test
repz
cmp
mov
xor
daa
jle
loop
mov
xor
jge
daa
les
xchg
lahf
rcl
cmc
fwait
adc
sub
jo
(bad)
jle
in
sub
adc
imul
adc
xchg
aam
cli
lds
xchg
add
inc
aad
hlt
xor
popa
sub
cwde
push
inc
pop
pop
cmp
jle
jle
sahf
mov
sub
push
dec
inc
jae
test
sbb
xchg
sbb
add
xchg
rcr
mov
inc
xchg
jne
or
test
das
stos
pop
fs
(bad)
mov
stos
sub
inc
arpl
popf
ficom
fist
xor
mov
imul
push
xor
add
sub
xchg
or
pop
icebp
or
shr
push
mov
ja
mov
jns
jg
inc
out
dec
mov
dec
cmc
or
mov
sub
imul
ss
cmp
test
repz
scas
mov
xchg
fsubr
xchg
(bad)
jno
cmp
jmp
scas
(bad)
push
jbe
outs
sbb
setle
loopne
xchg
and
shl
sub
pop
es
push
and
cmp
or
mov
jne
pusha
pop
inc
rol
xchg
addr16
pusha
popf
movs
or
cli
add
push
pop
dec
div
push
lahf
mov
lea
add
in
call
shl
cmp
mov
dec
inc
or
dec
rcl
sti
dec
mov
pop
popf
inc
bound
add
dec
xor
les
fild
mov
mov
xlat
dec
fwait
ret
xchg
jg
xchg
clc
call
sub
movs
or
addr16
pop
ret
scas
fwait
repnz
pop
shl
pop
mov
fbld
(bad)
ja
push
sbb
jecxz
pop
bswap
xor
or
stos
ret
nop
cli
iret
mov
mov
ins
inc
mov
in
adc
dec
pminub
fisubr
ficom
jg
xor
sub
(bad)
rcr
push
jno
cmps
jp
mov
xchg
pop
movs
mov
pop
jp
xchg
jl
outs
cmp
sub
loopne
gs
push
mov
and
icebp
jb
dec
xlat
xor
inc
es
std
adc
enter
jle
inc
mov
pop
xchg
mov
repz
mov
pop
or
sbb
arpl
cld
cmp
push
mov
jl
clc
fimul
nop
repnz
push
push
dec
jb
cmp
pop
stos
fstp
dec
cmp
dec
fwait
in
cmp
addr16
movs
icebp
jns
sahf
or
sub
in
stos
(bad)
sub
imul
inc
cli
out
out
pop
int
mov
fwait
repz
in
(bad)
popa
sub
retf
and
shl
iret
xchg
sub
cmp
xchg
sbb
sbb
sbb
sub
cmp
sti
pop
in
cmp
stos
jb
test
fmul
mov
mov
(bad)
cmp
and
jg
loop
clc
loope
xor
das
push
icebp
outs
imul
add
out
fidiv
repnz
sub
adc
mov
cmps
inc
cmp
fs
test
and
and
fs
pusha
push
stos
jbe
mov
in
lock
daa
sbb
enter
mov
sub
dec
cmp
out
js
test
(bad)
in
popf
sbb
and
adc
test
cmp
rol
add
fcmovbe
stos
pop
or
jecxz
mov
pop
mov
clc
mov
inc
inc
in
ret
jb
pusha
fisubr
mov
or
inc
mov
mov
in
pop
popf
add
repnz
aas
fld
push
popa
xchg
and
adc
clc
loopne
add
adc
cmp
sub
sbb
popa
xor
mov
out
jae
jo
xchg
and
fisubr
movs
call
jl
mov
sub
pusha
arpl
(bad)
push
scas
inc
fcomp
mov
sahf
dec
out
xlat
xor
add
xor
addr16
ins
aam
jle
(bad)
mov
sub
in
lahf
add
and
retf
test
inc
dec
movs
clc
shl
loope
cmps
hlt
push
pop
dec
(bad)
(bad)
cdq
hlt
out
in
inc
jge
mov
mov
ins
jl
xchg
push
mov
or
lods
xchg
in
retf
pusha
xor
push
retf
xchg
jp
jo
adc
xchg
aaa
stos
sbb
repnz
xor
ss
push
jg
adc
adc
(bad)
in
cmp
lods
repnz
lods
sub
movs
push
push
popa
pop
push
scas
dec
cwde
and
sti
adc
and
mov
jne
dec
mov
in
dec
cmp
dec
sti
xor
add
add
xor
mov
push
loop
data16
inc
mov
sub
mov
xchg
pop
xchg
and
iret
xor
and
cwde
add
fnstenv
jmp
enter
pusha
push
das
cwde
or
cld
push
scas
dec
cmp
push
xor
add
lods
jle
in
dec
jmp
stos
and
push
(bad)
scas
stc
leave
sar
pop
add
sub
cmc
xchg
(bad)
push
call
scas
(bad)
and
sub
pop
iret
cmps
cmps
loope
out
fldl2e
mov
das
les
enter
loop
jmp
add
jecxz
ins
fcom
jae
leave
std
or
pop
cmps
test
inc
ja
pop
and
pop
std
xor
mov
dec
cs
outs
rep
ins
add
lea
adc
repz
push
sti
inc
rol
cdq
aas
sub
in
iret
xchg
hlt
leave
mov
cdq
retf
or
push
pushf
cmp
int3
inc
inc
or
add
cmps
js
push
mov
jb
xchg
cdq
sti
outs
add
aam
xor
sbb
loop
icebp
mov
mov
scas
mov
mov
sti
push
push
mov
shl
cdq
adc
inc
mov
(bad)
out
and
mov
jbe
in
or
mov
cmp
xor
in
sub
mov
or
cmp
mov
jmp
stc
pop
enter
jno
mov
mov
sub
sahf
mov
push
or
jecxz
scas
aas
and
scas
ja
rcl
sbb
xchg
mov
loop
jl
sub
pop
mov
or
xchg
cmp
dec
push
aas
pop
out
cs
pop
(bad)
int3
xchg
(bad)
les
popf
jmp
jmp
clc
rol
stos
inc
cmps
xor
push
js
inc
daa
lahf
jb
push
jbe
in
div
jge
imul
mov
mov
sub
div
xchg
push
rol
or
mov
mov
pop
addr16
repz
xchg
outs
xor
inc
dec
add
and
and
and
adc
push
pop
inc
les
push
(bad)
std
jns
mov
stos
scas
pop
mov
popa
xchg
adc
mov
or
dec
xor
mov
xchg
dec
icebp
ud2
movs
xchg
(bad)
xor
(bad)
push
out
or
mov
or
popa
jnp
jmp
aad
pop
bound
int3
outs
loop
cld
js
mov
pop
push
mov
mov
dec
rcr
xchg
mov
cmp
int
into
(bad)
and
mov
push
jmp
push
scas
ja
jae
fcom
jmp
jmp
out
fisttp
sar
(bad)
cmp
xor
adc
das
ja
push
fnsave
sub
pop
mov
stc
shl
mov
adc
push
dec
pop
mov
xchg
or
js
imul
mov
add
hlt
fild
cmp
sti
call
mov
xor
sbb
xchg
or
scas
ins
jle
ror
ret
push
mov
pop
sbb
jl
int3
faddp
sub
nop
retf
popa
sbb
rcr
js
fist
mov
iret
les
fs
fwait
mov
mov
outs
test
pusha
(bad)
shl
retf
and
or
neg
repnz
jecxz
mov
pushf
fwait
hlt
push
cli
pop
iret
sub
repnz
int3
sbb
mov
inc
fistp
call
loop
(bad)
leave
pause
jle
mov
fnstsw
gs
mov
js
dec
push
add
mov
cli
or
(bad)
or
cs
in
push
aas
jl
push
(bad)
ret
pop
repnz
out
adc
sahf
pop
sub
jle
imul
push
sub
mov
sbb
inc
jb
ins
adc
or
jno
ror
lea
cmp
addr16
inc
mov
dec
ds
shr
inc
xchg
scas
addr16
push
outs
bound
iret
and
shr
cmp
inc
(bad)
cld
fdivr
pop
inc
cmps
pop
jae
mov
je
pop
ins
mov
mov
scas
jge
fcmovnb
pusha
cdq
add
xchg
(bad)
mov
pop
popa
dec
nop
daa
mov
or
ins
shr
jb
jge
es
mov
mov
test
mov
rol
mov
mov
mov
mov
ja
add
and
arpl
in
sbb
jne
add
(bad)
push
xor
ret
dec
js
xor
jp
jae
out
xor
ins
jae
add
mov
ins
pop
dec
int
(bad)
sbb
jl
ja
pop
cmp
xor
adc
jb
jo
sub
psubusb
test
push
test
in
mov
fisttp
fcomp
jle
call
lea
outs
adc
out
xchg
sbb
js
or
xchg
mov
cmp
iret
sub
hlt
and
jmp
sub
aad
test
pop
xchg
int3
push
pushf
std
pop
mov
(bad)
imul
cmp
fstp
jne
xchg
fucomip
adc
mov
add
pop
je
scas
adc
out
(bad)
retf
push
xor
pop
test
test
jle
add
call
push
and
in
sbb
btc
and
stc
(bad)
mov
stos
test
push
out
sub
xchg
or
test
out
cmp
mov
add
jo
inc
push
shl
into
mov
addr16
pop
adc
or
mov
and
jno
hlt
add
mov
arpl
mov
adc
lea
nop
pop
fs
imul
adc
not
int3
sub
mov
je
adc
inc
mov
lahf
push
and
pop
mov
sti
cmps
jle
and
into
jns
cli
jecxz
push
sbb
jmp
or
loope
movs
aas
(bad)
cmc
imul
test
fiadd
jns
ret
leave
xchg
and
adc
stos
xor
push
pusha
or
xchg
sub
stos
cmp
stc
push
jne
movs
mov
fsubr
in
mov
sbb
repnz
push
push
push
add
bound
dec
inc
fld
(bad)
fcmovb
sub
xchg
inc
(bad)
cmp
xor
ret
outs
sbb
inc
dec
sub
xor
retf
push
lds
fild
mov
jae
adc
mov
cmp
leave
mov
adc
sbb
or
sbb
jecxz
and
rol
sti
pop
cmp
jecxz
vcvtss2sd
icebp
pop
mov
stos
js
jmp
rol
jle
daa
or
das
dec
pmullw
jnp
sbb
cli
adc
out
movs
ret
jae
cmp
and
test
loope
movs
xor
and
mov
xchg
out
jmp
sbb
(bad)
movs
pop
mov
xchg
mov
fcomp
call
es
pop
and
neg
push
lods
dec
(bad)
cld
pop
aaa
retf
outs
xor
sub
movs
sbb
add
retf
mov
repnz
mov
stos
and
adc
jle
into
mov
(bad)
ret
sahf
dec
sub
pop
ffreep
sub
fsub
push
and
hlt
nop
mov
or
aam
(bad)
cdq
and
leave
gs
mov
(bad)
xor
jl
sbb
push
enter
xor
mov
popf
outs
and
ror
sbb
(bad)
cld
test
mov
xor
pusha
imul
or
mov
dec
dec
xor
dec
or
popa
stos
clc
cmp
popf
test
lods
in
fiadd
push
shr
adc
movs
popa
out
das
xchg
xor
pop
push
test
or
in
add
push
add
out
xchg
jmp
aad
xor
fidiv
xor
jmp
cdq
pop
add
outs
out
mov
ret
mov
dec
pop
inc
(bad)
jp
jmp
jae
test
jbe
xor
pop
jecxz
push
mov
jns
sbb
adc
add
xor
push
xor
sbb
ret
mov
inc
and
cmps
sub
mov
ins
loopne
jae
xchg
jnp
add
xor
sahf
test
xor
ss
xchg
retf
stc
xchg
js
test
add
rcl
(bad)
pushf
xchg
pushf
xchg
and
add
inc
push
lods
mov
inc
inc
aad
loop
push
mov
xchg
pop
ret
adc
test
mov
xor
pop
fcom
fs
mov
retf
inc
fild
aam
sub
out
sub
cmp
cdq
dec
fadd
pop
mov
sub
mov
(bad)
cmp
imul
imul
outs
pusha
jnp
sub
pusha
lods
cmp
pop
push
sub
ins
call
jge
sbb
mov
mov
jne
and
loop
mov
test
fbld
mov
ins
pop
adc
xchg
gs
adc
sbb
das
pop
sbb
clc
hlt
sbb
pop
xchg
stos
add
cmp
add
pop
adc
push
loope
in
shr
jmp
jae
(bad)
loopne
retf
push
call
ss
and
aad
mov
push
stc
retf
mov
push
xchg
sbb
aaa
xchg
or
hlt
movs
mov
dec
cmp
out
movs
call
int3
mov
or
mov
into
jns
nop
shr
movs
pusha
int
hlt
pop
or
inc
xor
mov
push
call
fstp
gs
dec
and
cs
dec
imul
stos
inc
mov
cmps
fs
xchg
out
pop
leave
inc
cmp
adc
mov
inc
mov
dec
int3
je
mov
into
test
mov
test
or
adc
xlat
fcomp
and
shl
stos
mov
jno
add
ja
mov
into
pusha
fnstenv
xor
mov
(bad)
leave
mov
imul
popa
xor
cmp
fwait
ds
sub
inc
adc
int3
mov
xor
pop
adc
inc
ror
(bad)
xchg
das
daa
sahf
fbstp
fcomp
popf
jg
mov
test
aam
sub
mov
and
mov
ret
xchg
adc
dec
pushf
ss
sbb
mov
cmp
std
in
enter
sub
les
icebp
in
cdq
std
pop
cmp
mov
inc
pop
ja
xlat
out
xchg
(bad)
inc
(bad)
ins
sbb
add
sar
dec
pop
xchg
sahf
mov
or
mov
mov
ins
mov
mov
shr
cmp
mov
into
outs
jge
xchg
mov
or
jp
sti
fldenv
fsubr
cmp
pop
stos
push
js
adc
push
les
xor
sbb
mov
mov
jp
jae
ds
dec
adc
xor
hlt
cmp
outs
neg
mov
mov
pop
mov
test
in
rol
mov
aas
mov
push
adc
add
fcmovne
das
push
cwde
xchg
push
sbb
cld
pop
inc
loop
jl
(bad)
les
ja
repnz
cmp
outs
dec
sub
jmp
cs
jne
retf
inc
movs
dec
es
push
and
inc
push
xlat
bound
jp
and
rol
fs
sar
and
test
jae
xor
pop
(bad)
xor
or
sti
fld
loop
in
xor
pop
pop
cmp
add
stos
outs
push
pop
dec
mov
imul
cdq
push
lea
xor
fst
cld
outs
fwait
ja
aad
inc
add
or
aaa
aam
fnsave
inc
jns
cmp
push
jp
sbb
test
test
data16
mov
xor
ficom
sti
mov
ss
data16
sub
dec
adc
sub
mov
jb
inc
shl
inc
dec
popa
xchg
scas
mov
out
xchg
pushf
sub
dec
inc
xor
(bad)
sub
dec
dec
es
inc
xchg
mov
mov
lods
sub
jle
jg
int3
or
cld
shl
in
sub
cmp
cmp
xor
pop
repnz
idiv
pop
shr
mov
pushf
add
jns
and
daa
sti
je
pop
aaa
imul
cmp
pushf
jbe
rcr
ins
cmp
in
fidivr
and
inc
scas
pop
test
push
xor
ins
xor
sub
(bad)
iret
sbb
xor
and
mov
and
mov
ins
mov
add
sahf
jmp
xchg
add
cmc
out
add
shl
dec
inc
lea
js
jmp
push
nop
jmp
xor
push
ja
cs
out
xrelease
jmp
inc
pop
push
cmp
sbb
out
ja
mov
je
fsubr
dec
push
sub
adc
mov
imul
or
adc
push
cli
xchg
call
mov
jecxz
mov
fdiv
fdivr
fdiv
frstor
fmul
aas
jae
add
adc
(bad)
cmp
jno
aas
int3
fwait
retf
add
adc
cwde
pop
mov
sbb
xchg
xchg
js
mov
sub
mov
mov
cmc
adc
test
dec
cmp
xor
popa
sbb
adc
pop
addr16
mov
loope
xor
enter
loope
stc
cli
bound
fistp
movs
jbe
push
pop
xrelease
and
cli
adc
loop
je
jecxz
adc
leave
int3
jl
inc
les
call
scas
dec
lods
fs
div
in
hlt
pop
push
mov
jmp
sub
cwde
out
jg
mov
popf
mov
dec
cli
jp
cs
les
sti
loopne
push
pop
sbb
jno
jl
adc
(bad)
aam
or
and
jb
or
stos
lods
cmp
sub
dec
and
fbstp
adc
idiv
inc
test
sub
ja
mov
add
push
ja
repz
mov
sbb
mov
add
lahf
loopne
mov
pusha
popf
cld
and
push
out
xor
sbb
or
scas
scas
mov
rol
dec
lea
mov
xor
cmp
arpl
sub
push
pop
cli
mov
sti
adc
dec
xchg
push
stos
inc
lods
inc
jbe
call
xor
fimul
xor
mov
fcom
ficom
rcl
xchg
fxch
iret
cdq
xchg
lods
sub
jg
and
sbb
mov
cmps
push
dec
mov
jmp
mov
ins
ja
mov
repnz
xor
and
jns
jmp
mov
pop
or
sub
mov
jp
jne
push
xor
push
iret
cmp
and
add
jle
jo
mov
ss
jl
dec
push
xchg
jecxz
push
or
pop
sub
fadd
jmp
pop
and
inc
pop
(bad)
jecxz
adc
aam
and
lahf
dec
icebp
push
loop
cmps
jo
hlt
das
lods
fisttp
xor
mov
out
icebp
into
xor
and
xchg
mov
xchg
push
push
in
out
sbb
leave
and
dec
sbb
rol
jecxz
inc
dec
or
dec
xchg
sub
mov
mov
jbe
sub
add
(bad)
pop
add
mov
je
mov
outs
(bad)
dec
xor
mov
dec
xlat
mov
push
xor
jmp
hlt
pop
or
in
or
mov
push
inc
js
loopne
jo
jnp
jno
mov
adc
mov
mov
and
sti
and
out
inc
mov
xchg
cli
adc
test
test
imul
mov
sub
adc
movs
out
mov
and
and
add
or
jg
push
lods
mov
xor
mov
sbb
mov
out
adc
mov
mov
es
in
repz
xlat
les
ins
arpl
dec
mov
cmc
jmp
pop
ror
xlat
push
mov
(bad)
stos
cwde
sub
js
or
out
loopne
pop
(bad)
fidiv
lock
retf
retf
pop
das
pusha
and
dec
jbe
mov
mov
and
push
xlat
xchg
xor
adc
addr16
lock
xchg
sbb
or
fadd
scas
mov
mov
and
(bad)
cld
(bad)
cmp
aaa
ins
sti
mov
jnp
push
jns
dec
clc
add
sub
dec
in
mov
and
jp
pop
cmps
ss
not
outs
std
or
jb
sub
xchg
inc
push
sbb
je
lea
shl
dec
mov
rcpps
es
loop
or
adc
adc
fwait
imul
pop
pop
rol
push
and
inc
iret
push
cmp
or
ficomp
je
enter
pop
ds
xchg
jp
out
test
loopne
inc
mov
test
dec
loopne
hlt
and
pop
mov
dec
and
jp
in
xchg
dec
or
mov
jo
pop
(bad)
mov
inc
mov
pop
ds
leave
mov
mov
nop
push
int
int
into
test
js
and
cdq
add
cmp
cmps
ds
mov
jmp
test
(bad)
pop
outs
ficomp
jmp
stc
add
shl
sub
and
inc
sbb
xor
repnz
loop
sahf
ret
adc
jbe
xchg
(bad)
xor
sbb
les
or
bound
add
sub
mov
mov
pop
fsubr
je
xchg
or
ret
inc
icebp
jae
mov
or
hlt
sub
mov
lock
in
fwait
outs
or
push
push
jecxz
xchg
(bad)
or
mov
jnp
ins
rol
sbb
dec
xor
mul
adc
fcomi
outs
rcl
ret
and
in
inc
push
les
sbb
pushf
test
arpl
hlt
or
inc
xchg
frndint
dec
xor
out
jno
rcr
adc
cmp
sbb
pop
pop
push
mov
ins
mov
xchg
arpl
jmp
data16
mov
cmc
jl
pop
inc
sub
xor
pop
imul
mov
lea
mov
std
in
add
jp
fidivr
mov
xchg
or
sub
xchg
dec
mov
dec
mov
dec
and
push
js
std
add
retf
and
jae
add
jns
in
mov
jg
das
call
or
bnd
inc
stc
ret
sahf
add
sub
xchg
bound
dec
test
dec
and
and
aam
idiv
dec
and
in
add
jmp
mov
pop
xchg
icebp
sbb
add
add
cdq
hlt
fdivr
ja
pop
push
xor
push
cmp
call
ret
cmp
lahf
jg
dec
aaa
fs
in
mov
imul
in
in
xchg
sub
xor
sbb
inc
movs
loop
jg
loopne
xor
inc
pop
enter
fisttp
cmp
fs
outs
adc
dec
stos
jmp
dec
adc
mov
jl
sub
(bad)
push
arpl
aad
mov
js
push
pop
stos
dec
loope
call
rcl
or
mov
mov
int
bound
xchg
and
ja
test
jp
ins
inc
loope
ins
jo
fld
and
and
ror
mov
push
lods
and
inc
repz
push
aad
mov
lea
pop
imul
jae
dec
(bad)
in
fs
cmp
call
cmp
fsub
(bad)
push
neg
adc
imul
fist
pop
xor
and
repz
iret
adc
out
mov
fadd
retf
or
jae
shl
aaa
imul
add
mov
fwait
fs
ror
lds
(bad)
cli
enter
or
inc
adc
fstp
jg
test
xchg
push
mov
mov
pop
pop
add
push
cmp
push
jnp
fbld
iret
inc
mov
mov
sub
jle
sbb
(bad)
or
sbb
mov
out
mov
xchg
lods
push
std
push
les
or
sub
dec
mov
pop
jecxz
lods
jb
sbb
retf
test
mov
test
mov
dec
add
ror
lea
mov
xchg
sahf
dec
mov
arpl
xchg
push
loop
mov
iret
das
lahf
dec
jmp
push
mov
cmp
sbb
xor
es
jmp
(bad)
movs
imul
hlt
xlat
mov
jo
sar
or
vmwrite
movs
jne
mov
stc
mov
and
push
in
ss
pusha
addr16
leave
into
inc
pop
and
lds
cdq
clc
and
das
jmp
push
femms
rol
aas
push
add
shl
sbb
inc
sar
xchg
out
xchg
scas
mov
mov
iret
cmp
addr16
cmps
push
test
popa
sahf
cmp
test
lods
sub
pop
adc
adc
jnp
mov
xor
add
call
into
and
push
hlt
fcom
ret
adc
stos
push
in
sub
sbb
das
scas
dec
and
aam
ins
jmp
push
je
daa
add
or
xor
retf
fucomi
jmp
ds
adc
not
mov
jbe
sub
mov
lds
adc
pop
inc
xor
jg
shl
fwait
ja
call
push
sub
mov
(bad)
push
mul
aaa
leave
jb
mov
leave
inc
push
enter
or
iret
scas
and
movs
fs
add
out
mov
fld
xor
adc
fcomi
std
or
cmps
les
push
not
and
and
loopne
mov
and
push
mov
(bad)
push
ror
ret
pop
mov
push
mov
xlat
hlt
mov
push
xor
pop
and
sub
mov
mov
jae
sti
stc
xchg
pop
repz
cmp
mov
pop
jnp
or
daa
fs
push
mov
sbb
pop
outs
call
pop
pop
push
out
pop
inc
cs
fisttp
es
inc
xchg
jno
sub
pop
enter
xor
inc
sub
mov
loop
sar
or
lea
dec
cmc
int
(bad)
cmp
mov
div
repnz
cmps
push
cmps
pop
add
(bad)
jae
mov
outs
sbb
out
ror
pop
(bad)
cmp
and
push
dec
jno
mov
(bad)
add
js
in
cmp
(bad)
stos
or
loopne
add
aam
push
loop
shl
loope
pop
(bad)
das
fild
add
pop
pop
stos
and
data16
inc
sbb
test
add
lods
ss
(bad)
test
enter
xchg
(bad)
push
mov
inc
mov
mov
inc
dec
mov
mov
loop
repnz
xchg
mov
push
sub
adc
jae
push
(bad)
cmp
js
shl
sti
loop
lods
div
xor
inc
inc
jge
adc
les
fcomi
sbb
imul
mov
mov
push
xor
push
xor
mov
xlat
fbstp
xchg
adc
stc
cmps
cld
shl
lea
adc
jae
mov
cmps
pop
add
scas
inc
and
pop
dec
mov
inc
xchg
lock
in
cmp
jmp
lahf
inc
jae
push
int3
dec
aam
imul
rcr
ficom
xor
inc
es
sub
mov
xor
and
mov
xchg
and
pop
xor
addr16
fisub
sub
in
jle
push
jae
addr16
sti
mov
lahf
popa
cmp
lds
fidivr
inc
movs
adc
in
icebp
scas
outs
or
aad
out
clc
std
lea
inc
js
std
push
or
in
mov
fsubp
call
ret
dec
dec
mov
dec
out
pop
add
(bad)
packsswb
rol
loope
cdq
add
sub
std
pop
mov
test
out
sub
lods
xor
mov
push
inc
push
mov
shr
adc
movs
dec
icebp
cmc
stos
jne
out
stos
add
dec
cmc
mov
dec
xchg
test
add
adc
adc
fsub
mov
sbb
and
push
mov
call
pusha
cs
rcl
movs
adc
pop
xor
ja
fnsave
mov
rol
out
data16
imul
sub
pop
jnp
sbb
and
stos
adc
push
adc
call
xchg
pop
mov
push
pop
int
out
lods
shl
push
pop
and
sub
cli
dec
iret
cmps
outs
fdivr
pop
or
fadd
mov
pop
and
jae
test
nop
push
retf
add
ds
rcl
inc
test
dec
push
and
fbstp
pusha
ret
mov
fs
rcl
push
loope
(bad)
xchg
pop
push
sbb
ins
xchg
aad
push
ret
add
pop
sub
inc
xchg
loop
test
push
and
xor
mov
sub
rcl
add
push
push
stc
sub
call
mov
inc
cs
push
xor
nop
inc
or
sub
cs
loopne
das
push
rol
arpl
(bad)
mov
pop
push
jp
and
inc
pop
nop
test
dec
pop
fbstp
adc
fcomp
ret
cmps
or
test
lock
adc
cmp
push
adc
jno
sbb
adc
or
dec
hlt
test
dec
push
iret
lds
cmp
stc
ds
cmp
xchg
mov
inc
cdq
ror
sbb
push
les
xchg
xchg
fs
push
aam
ins
jp
fwait
out
sub
std
bound
add
jle
or
and
push
jmp
loop
sti
fisttp
out
push
xchg
fxch
mov
or
jp
jmp
ret
or
inc
sub
mov
mul
aas
inc
shr
dec
add
ins
(bad)
cdq
aam
sub
push
jo
pfrcp
add
push
fidivr
sahf
movs
fs
adc
cmp
movs
push
lahf
imul
hlt
adc
aas
retf
(bad)
sti
pop
xchg
mov
iret
add
hlt
dec
neg
dec
loop
push
dec
ds
xor
jbe
outs
(bad)
xchg
inc
dec
add
inc
rcr
xchg
mov
dec
aam
cmps
inc
jl
int
out
pushf
retf
push
shl
inc
sti
cmp
xchg
std
je
jae
aas
fistp
xor
cmps
ficomp
stc
pop
ss
mov
or
das
and
or
cmps
outs
ja
ss
test
es
pushf
mov
(bad)
or
cwde
lahf
mov
lahf
dec
lahf
jp
jp
sar
imul
jnp
out
jae
mov
or
jno
cld
outs
adc
mov
add
xor
sar
dec
lahf
inc
xchg
xchg
loop
and
nop
movs
pop
das
es
xor
mov
imul
xchg
idiv
loop
mov
fidivr
enter
scas
sub
in
mov
neg
fs
shr
test
call
pop
in
and
mov
in
(bad)
jge
call
mov
sub
std
out
call
test
push
sbb
(bad)
sbb
dec
out
push
mov
dec
ret
leave
or
mov
xor
or
jnp
push
loopne
stos
jp
pop
pop
mov
les
mov
pushf
mov
xchg
xchg
out
pop
mov
daa
xchg
inc
adc
test
data16
mov
sbb
cdq
mov
push
das
mov
pop
jns
add
xchg
sub
(bad)
repz
cmp
dec
dec
cmp
jecxz
out
shl
aas
fsub
sbb
stos
out
pop
mov
loopne
pop
dec
test
fwait
or
mov
sbb
sbb
or
and
cmp
mov
pop
mov
shr
aas
mov
loope
shl
mov
dec
inc
push
adc
fdivr
mov
lods
xchg
imul
ror
hlt
outs
adc
neg
js
retf
sbb
pushf
mov
dec
cmp
hlt
in
aas
jno
rol
lock
mov
cmc
xchg
add
ins
mov
not
fimul
inc
push
inc
inc
les
inc
shl
push
out
mov
jne
mov
iret
ret
cmp
pop
int3
ss
(bad)
push
or
push
mov
xor
mov
mov
sub
sahf
js
dec
shr
dec
pop
ds
aaa
dec
jmp
inc
inc
repnz
jl
mov
jne
cmp
enter
test
mov
sti
or
test
xor
sub
in
xchg
push
mov
sbb
add
shl
jbe
sbb
push
dec
sbb
hlt
cmps
push
adc
rol
pop
sbb
mov
cmp
jmp
std
add
mov
add
jp
xchg
cli
mov
cmp
out
das
dec
nop
and
cmp
adc
inc
lahf
jmp
inc
(bad)
sbb
mov
xchg
stc
pop
mov
sar
pop
cdq
mov
dec
xor
adc
cmp
cld
(bad)
popa
or
pushf
lahf
pop
cs
cmp
aas
rol
sbb
dec
xor
outs
arpl
dec
mov
and
mov
inc
mov
cmp
push
sbb
rcl
adc
mov
in
sub
inc
add
cmps
inc
lods
lods
jne
fnstsw
push
int3
pop
mov
jmp
shr
rcr
add
xor
mov
stos
jg
jo
retf
sub
jge
jle
or
sub
cmp
je
pop
mov
pop
add
and
mov
pusha
shl
add
lods
inc
cdq
inc
jge
dec
call
inc
pop
in
nop
shl
dec
outs
cs
xlat
pop
cmps
dec
add
lds
imul
stos
nop
repnz
inc
mov
xor
mov
xchg
fs
clc
shl
imul
adc
inc
cs
ins
int
lahf
das
jns
mov
gs
in
shl
xchg
xor
je
dec
dec
sbb
xchg
fwait
retf
sbb
dec
cdq
imul
js
or
ins
outs
mov
jmp
sub
in
data16
call
adc
jp
in
and
adc
adc
inc
scas
dec
xor
(bad)
push
cmps
ins
mov
adc
sti
or
xchg
aam
jnp
and
mov
mov
int
sti
xor
shr
or
sti
std
bnd
push
adc
and
pop
loopne
hlt
add
out
or
pop
imul
pusha
xchg
jo
mov
jno
xor
gs
mov
fcom
push
clc
lock
scas
adc
test
clc
(bad)
push
xchg
push
sbb
ins
cdq
adc
mov
inc
adc
add
jno
jb
loope
mov
aad
xchg
out
mov
add
jl
mov
movs
sub
(bad)
mov
mov
leave
cmp
frstor
push
sub
adc
push
push
ret
cs
rol
jmp
(bad)
mov
or
ds
jp
sub
lock
gs
sbb
mov
imul
lock
fsubr
inc
dec
and
aas
jo
nop
mov
outs
mov
mov
outs
mov
push
(bad)
sahf
push
pop
pusha
cmp
add
jbe
bound
mov
sub
mov
daa
into
cwde
mov
add
adc
iret
cmp
fidivr
(bad)
mov
or
sbb
dec
xchg
les
cmp
dec
push
in
push
sub
or
xchg
xor
repnz
or
pop
aad
sbb
loope
mov
cmp
pop
fwait
jne
test
sub
mov
adc
xchg
or
lds
sbb
je
mov
add
sbb
(bad)
pushf
std
add
das
xchg
call
fsubr
ins
gs
enter
pop
jle
movs
mov
jbe
sbb
shl
into
call
inc
push
sub
(bad)
xor
retf
sub
sti
cli
jae
in
rcr
dec
les
xchg
pop
icebp
xor
je
pop
adc
shr
js
pop
ss
or
mov
mov
jmp
nop
cmp
cwde
or
fld
sar
inc
dec
mov
adc
jae
lods
add
ss
repnz
aaa
test
repnz
in
ds
movs
mov
mov
ret
shr
je
or
mov
stos
inc
popa
adc
and
std
clc
add
dec
mov
jmp
dec
pop
test
and
mov
lds
and
out
sbb
sbb
shr
dec
addr16
dec
outs
xor
add
sub
xchg
pop
xchg
out
cmc
mov
push
repnz
and
pushf
lahf
dec
push
mov
mov
(bad)
jne
movs
mov
pop
pop
jno
ja
cwde
mov
sub
(bad)
sbb
and
repnz
mov
add
test
ror
push
(bad)
loopne
adc
sbb
(bad)
stos
jns
xor
adc
out
mov
adc
test
clc
cld
div
inc
cmc
(bad)
or
arpl
and
lock
inc
sub
inc
ja
mov
dec
cmps
push
nop
outs
inc
ffree
pop
xor
xchg
jmp
sbb
push
cmp
pop
inc
leave
fld
jbe
fcomp
pushf
add
sbb
jo
inc
push
ret
pushf
and
sbb
enter
sbb
out
and
mov
clc
movs
ins
push
pop
and
jp
dec
nop
das
stos
mov
jge
pusha
std
sar
int3
repz
test
data16
ficomp
(bad)
pop
test
fnstcw
retf
fcom
int
jecxz
std
shl
jmp
adc
out
out
movs
sbb
shr
test
outs
ins
dec
es
div
ret
leave
cmc
push
sub
jl
sub
outs
ins
iret
out
adc
repnz
mov
ficomp
lods
pop
(bad)
and
xor
(bad)
aaa
push
cli
adc
xor
popf
add
xchg
push
jne
call
sar
xchg
ret
cmps
add
jo
mov
jg
xchg
ret
shr
mov
ds
dec
pop
icebp
push
xchg
aas
dec
jns
jmp
in
adc
jmp
movs
xor
pop
add
pop
jo
jecxz
repz
inc
ret
dec
imul
pop
jno
out
aaa
xchg
pushf
call
xchg
sub
pop
mov
enter
push
cmp
and
stc
inc
xchg
jnp
fsub
stos
sub
adc
pushf
popf
outs
inc
and
pushf
imul
jae
pop
sbb
inc
mov
mov
in
fst
imul
jp
(bad)
(bad)
pop
mov
pop
call
push
lds
(bad)
sub
mov
sbb
lods
mov
mov
int
ret
push
lahf
les
retf
mov
mov
mov
aad
loopne
mov
push
mov
jb
loopne
imul
jp
test
cmp
inc
sbb
jns
fdiv
push
std
mov
(bad)
cwde
retf
aad
mov
repnz
cmps
in
mov
out
inc
dec
rcr
imul
ficomp
jo
scas
jno
or
mov
jb
into
fnstcw
xchg
pop
sbb
loop
jl
repz
test
and
mov
jb
out
fadd
push
dec
ins
fdivr
mov
les
add
mov
aam
mov
aam
cwde
pop
and
sahf
adc
dec
mov
jg
jne
sbb
fnstsw
inc
rcr
shl
mov
ja
add
jno
cmp
jae
rcl
stos
sar
loop
(bad)
adc
fwait
popf
mov
add
rol
hlt
cmp
dec
mov
mov
xchg
xor
fadd
jecxz
mov
(bad)
jmp
aad
loopne
jno
pop
mov
mov
shl
pop
dec
jne
inc
sbb
ja
call
loopne
sbb
or
fcom
cdq
push
cmp
test
sub
adc
scas
nop
jnp
mov
(bad)
adc
in
mov
cmp
lea
and
mov
cmp
lahf
dec
sti
movs
cmp
retf
movs
test
or
jbe
jmp
test
(bad)
or
pop
xor
sbb
imul
dec
fld
jb
xchg
cli
rcr
fimul
lock
in
pop
std
js
push
jbe
test
fwait
js
outs
lock
ret
nop
dec
xor
fs
inc
mov
sub
ss
(bad)
clc
test
loope
pop
fwait
ja
inc
rol
fucom
pop
pop
add
cmps
push
(bad)
sub
mov
ret
cli
lea
add
inc
fistp
mov
mov
pusha
sbb
cmp
stc
xor
mov
imul
shl
addr16
mov
loopne
add
jbe
shl
ins
mov
call
or
fwait
add
inc
dec
pop
mov
jmp
xor
adc
aas
or
xchg
je
fmul
call
mov
sub
add
xchg
dec
inc
xchg
mov
add
mov
scas
mov
out
sbb
sub
inc
dec
push
sub
dec
add
pop
inc
xchg
fist
stos
mov
call
or
cmp
pop
xchg
add
shr
fisttp
ret
movs
sbb
jo
push
push
mov
xchg
mov
rol
ja
pusha
pop
shr
sbb
movs
sub
lods
aas
bound
mov
xchg
and
into
lahf
cmps
pop
inc
cmp
xchg
cmps
inc
in
ret
xor
cmp
aaa
stos
lods
sbb
mov
(bad)
dec
hlt
sub
push
inc
jbe
sahf
xchg
ds
je
gs
cmp
mov
scas
pop
cdq
inc
jmp
fld
jecxz
sbb
pop
sbb
aam
xchg
sbb
fld
rol
mov
inc
imul
or
pop
call
lea
in
loope
adc
adc
adc
cli
fldenv
pop
lods
mov
rcr
mov
shr
ja
imul
push
xor
xchg
mov
push
sti
add
push
test
or
pop
sub
xchg
scas
mov
inc
pop
add
lock
push
mov
or
std
mov
jb
pop
ret
push
(bad)
or
pop
adc
fmul
xchg
xor
adc
cmp
cs
call
pushf
nop
pushf
xchg
int
jmp
fldcw
lods
outs
into
sub
push
daa
test
or
jmp
hlt
jge
xor
cmc
int3
mov
dec
and
inc
sub
jle
or
dec
cmp
sub
test
push
sbb
cmp
mov
mov
bound
cwde
iret
sbb
aad
fucom
cmp
push
mov
and
or
into
js
xchg
jl
push
jo
call
push
cmp
jmp
aam
pushf
stos
fcom
sbb
dec
push
mov
movs
shl
and
cmp
xor
add
mov
imul
cwde
or
pop
add
fst
mov
popf
or
jae
push
dec
mov
popa
jbe
xchg
mov
cdq
test
sahf
arpl
push
test
add
fsubr
std
inc
push
mov
adc
mov
retf
push
adc
retf
(bad)
and
dec
or
cdq
cli
in
fucom
or
sbb
push
xor
and
mov
mov
sub
adc
aaa
test
cli
inc
add
cmp
les
test
or
sub
out
fs
xor
sbb
mov
add
imul
and
ins
pop
or
jno
mov
sbb
adc
xlat
cmps
shl
enter
out
mov
fwait
jg
sub
in
mov
scas
lds
cmp
aad
sbb
inc
int
js
(bad)
sbb
add
mov
jns
ins
push
popf
pop
shl
and
jge
inc
mov
adc
sbb
push
repz
iret
xchg
mov
lea
xchg
xchg
nop
mov
movs
jne
mov
aas
dec
jl
icebp
setle
mov
push
mov
sbb
loop
mov
out
cmp
or
xor
imul
rcr
addr16
adc
lock
cs
test
lds
and
and
(bad)
fist
xchg
sub
push
xchg
pop
lock
rcr
pop
xchg
cld
xor
je
cdq
mov
dec
or
sub
xor
lods
test
clc
(bad)
movs
ret
add
out
xlat
cmc
aad
into
inc
mov
scas
rol
xchg
out
(bad)
adc
sbb
ror
rol
cli
push
ins
in
cmps
adc
xchg
xor
push
sbb
and
std
out
mov
cmp
gs
fdiv
jne
sbb
mov
scas
cli
inc
call
pop
lds
xchg
or
pop
loope
popf
in
call
mov
mov
lods
adc
ds
push
push
movs
inc
dec
dec
ss
add
(bad)
loope
mov
lea
cld
push
je
mov
pop
push
xchg
es
cmc
inc
cmp
(bad)
dec
and
pushf
aas
les
pushf
push
xor
mov
jg
fcmovnbe
(bad)
hlt
mov
sar
popf
xor
dec
push
adc
jb
jge
pop
inc
add
sti
fucomi
lea
rol
inc
or
clc
mov
mov
call
and
(bad)
xor
loopne
shl
cli
sub
outs
test
dec
xor
pop
in
sub
pusha
sub
pop
inc
add
mov
cwde
adc
in
pop
jg
ret
inc
and
cmp
and
inc
rcl
pop
outs
inc
mov
ss
ds
(bad)
aas
es
cwde
push
ret
pop
fwait
mov
mov
and
cmps
hlt
jb
outs
pop
shl
test
pop
daa
push
movs
fcomp
dec
loopne
dec
popf
pop
fisub
std
jecxz
les
mov
sub
jbe
push
dec
push
movs
dec
mov
ret
retf
and
cmp
fidiv
mov
inc
xchg
(bad)
std
inc
es
mov
imul
lods
inc
push
adc
in
push
cmp
pop
xor
cmps
mov
lods
scas
into
xor
outs
mov
popf
mov
lea
(bad)
in
mov
adc
stc
lea
shr
daa
sub
cmps
pop
and
imul
jecxz
dec
cs
aaa
loop
lods
xlat
ds
scas
mov
aad
cmc
out
xchg
xor
loop
aam
popa
in
aas
imul
les
fild
scas
cmp
aad
sti
dec
ja
sub
retf
or
cmp
pop
or
push
cmp
jecxz
inc
add
cmp
xor
xor
addr16
and
mov
rol
ins
jmp
mov
rol
and
adc
mov
cmps
imul
dec
aad
jb
cmp
addr16
out
imul
cwde
adc
sahf
sub
test
jb
sub
(bad)
mov
xchg
inc
popa
cmc
pop
loope
pop
ror
arpl
fsub
adc
cmc
dec
adc
rcr
mov
mov
xchg
or
xchg
cwde
push
adc
repz
adc
repnz
jge
xor
and
test
mov
xchg
pusha
shr
loop
leave
rcl
out
inc
loopne
cmp
rcr
aam
fmul
sbb
outs
inc
in
ins
inc
aad
nop
sahf
pop
add
sti
aam
int
pop
add
fld
mov
retf
in
jbe
push
lahf
jmp
cmc
stc
mov
(bad)
fistp
outs
fisub
int3
mov
inc
sub
pop
nop
jae
adc
and
xor
(bad)
adc
jne
sbb
loope
(bad)
outs
imul
inc
repz
jl
outs
daa
mov
sti
(bad)
mov
xchg
leave
imul
sub
sub
mov
adc
ret
jge
inc
add
sbb
and
loop
lahf
imul
dec
cmp
(bad)
nop
jp
cld
xor
xor
mov
inc
sbb
cmp
(bad)
in
and
cmp
cmp
mov
cmc
and
push
sub
cmp
mov
xor
je
inc
sti
jo
and
loop
mov
jb
cmp
adc
dec
scas
or
push
jmp
xchg
xor
(bad)
aad
add
mov
leave
add
(bad)
cld
dec
hlt
rcl
sbb
fistp
retf
ins
push
icebp
mov
and
das
inc
scas
fs
sbb
push
xchg
sbb
mov
call
or
fld
hlt
dec
push
push
add
popa
jns
push
adc
fnstenv
jmp
mov
sbb
dec
in
inc
mov
adc
cmp
jnp
xor
xlat
pop
inc
jne
mov
fs
out
mov
test
movs
dec
loope
and
(bad)
push
test
push
ja
xchg
pop
hlt
dec
jmp
loope
retf
daa
das
xchg
ret
push
ret
fwait
stos
daa
out
ins
js
popf
mov
dec
pop
in
inc
xchg
sbb
sbb
hlt
jmp
aaa
popf
ja
jecxz
loop
neg
das
jns
pop
xchg
or
and
fsubr
nop
cmp
xor
aam
or
cdq
push
jno
fsubr
or
xchg
div
call
popf
in
and
xor
stc
mov
mul
test
enter
sar
push
mov
lock
faddp
or
or
mov
in
push
dec
pop
push
jo
(bad)
imul
repz
add
out
(bad)
aas
in
or
jl
push
jne
sub
addr16
nop
stos
stos
lahf
sbb
xchg
adc
add
or
push
movs
xchg
xor
mov
add
pushf
xchg
mov
cmc
or
(bad)
jle
cmp
sbb
push
pop
movs
dec
cwde
mov
outs
mov
js
cmp
cli
pop
adc
xor
test
imul
jbe
sbb
inc
mov
retf
or
stos
jl
lds
dec
or
xchg
hlt
ds
enter
dec
je
(bad)
ficom
inc
fst
jns
pop
loopne
inc
push
push
daa
popf
inc
das
ins
sti
push
inc
push
mov
jp
outs
pop
loope
cmps
clc
jl
out
retf
cmp
sbb
ret
call
push
fwait
mov
or
es
mov
cli
inc
jns
dec
xor
rol
mov
adc
mov
jmp
mov
pop
jns
push
ffreep
add
dec
les
mov
cmps
test
dec
invd
mov
push
xor
cmp
ror
xlat
jg
xor
pop
addr16
sahf
add
je
pop
je
and
pop
imul
lods
mov
and
push
fld
idiv
in
jle
(bad)
int
int3
cmp
jae
adc
sar
jne
jle
or
leave
mov
icebp
stos
push
xlat
pop
icebp
sar
xchg
mov
xchg
std
xchg
cwde
add
add
loopne
shl
xlat
pushf
and
mov
or
rol
inc
sub
cwde
ins
dec
xor
ins
sub
mov
retf
sbb
call
and
mov
out
in
cwde
and
jb
aad
xor
pop
fabs
inc
mov
push
xchg
cmc
cwde
sub
ret
pop
mov
cwde
adc
push
mov
and
or
repz
cmps
sbb
push
adc
ror
dec
pop
dec
or
or
xor
xor
inc
push
jecxz
fwait
cmp
daa
(bad)
lods
adc
xchg
ins
pop
dec
fwait
adc
jecxz
imul
les
addr16
cmps
adc
push
push
pop
aaa
popf
dec
out
mov
or
loop
push
jmp
mov
mov
add
aas
jne
xchg
adc
inc
pop
cmpxchg
jmp
(bad)
ficom
std
mov
mov
push
test
shl
(bad)
xlat
mov
aad
xchg
(bad)
icebp
xchg
xor
add
pop
push
cld
retf
mov
pop
mov
rol
scas
or
repnz
out
movs
mov
mov
push
dec
rsm
fistp
(bad)
mov
mov
mov
fsubrp
es
das
inc
adc
jne
daa
mov
xchg
mov
nop
lahf
dec
lea
into
xlat
jbe
cmc
dec
gs
cmp
mov
xor
lods
daa
fdivr
dec
vpxor
repnz
(bad)
xlat
cmp
lods
test
pop
mov
inc
or
dec
mov
aad
test
ret
cmp
inc
arpl
xchg
stos
les
ds
int3
enter
xor
adc
jo
nop
enter
jecxz
mov
dec
mov
aad
inc
jmp
jl
mov
into
fbstp
popf
xchg
pop
ss
cmps
pop
and
xor
jnp
pop
aam
ja
mov
aam
bsr
data16
ror
dec
movs
pop
cmps
jecxz
scas
and
jo
jmp
xor
mov
fsub
imul
pop
mov
xchg
je
pop
ja
ins
jg
xchg
je
call
pop
(bad)
out
mov
push
push
test
not
xlat
sti
(bad)
into
push
pop
xor
mov
mov
inc
or
push
dec
(bad)
and
(bad)
mov
add
dec
mov
(bad)
rol
rol
pop
in
push
(bad)
sub
out
pop
push
sub
movs
lods
into
sbb
lods
fwait
sbb
call
pop
jbe
jecxz
adc
xor
shl
add
cmp
stos
push
mov
push
stc
punpckhdq
push
in
shl
(bad)
imul
mov
ror
pop
xchg
out
into
xor
jmp
or
and
sbb
fidivr
mov
test
jmp
mul
sub
jns
das
inc
mov
sbb
cs
push
(bad)
or
or
lods
push
jmp
and
inc
jbe
mov
dec
mov
push
stos
push
aad
sub
mov
retf
es
aad
xchg
inc
mov
sbb
daa
push
cmc
jae
shl
aad
sub
push
pop
pop
movs
nop
out
cmp
frstor
arpl
xor
outs
ret
xor
cmps
add
sub
fcom
lods
and
mov
int3
cmc
scas
int3
mov
cdq
cmps
std
idiv
xlat
push
cmc
idiv
sub
push
jmp
inc
in
push
pop
cmp
lock
push
repz
push
sub
jg
sub
xor
mov
mov
push
jmp
sbb
inc
(bad)
retf
icebp
xchg
stos
pop
shr
fnstsw
jns
mov
adc
push
mov
sbb
arpl
xchg
mov
cli
dec
or
xchg
mov
or
mov
mov
push
pop
ja
push
pop
xor
les
out
mov
jmp
xchg
bound
pop
retf
mov
(bad)
sti
fnsave
stos
pop
movs
inc
add
mov
leave
sbb
xor
(bad)
sar
adc
loope
mov
daa
popa
fidiv
out
(bad)
mov
into
cmp
lea
cld
dec
mov
sbb
and
int3
mov
and
ds
inc
adc
mov
xchg
pusha
or
mov
mov
scas
push
into
sbb
sub
imul
jp
lahf
fwait
nop
mov
jl
outs
add
inc
int3
and
daa
(bad)
iret
cmp
cwde
ins
adc
repz
stos
pop
add
and
dec
aam
mov
cmp
repnz
mov
jns
pop
in
push
sbb
add
pushf
icebp
div
aam
inc
push
sbb
mov
xor
test
(bad)
es
mov
not
call
jmp
mov
mov
push
sbb
push
sar
in
mov
daa
add
sbb
pop
repnz
jle
in
add
mov
jmp
and
out
inc
push
dec
cmp
dec
loopne
das
movs
mov
add
sbb
out
xor
lods
sbb
push
jmp
pop
xchg
sub
xor
push
jge
pop
je
je
stc
mov
pop
xor
in
sbb
xchg
ins
mov
xchg
pop
test
push
ror
(bad)
sbb
int3
ds
xchg
int
pusha
imul
add
and
call
ins
add
out
mov
push
fidivr
sub
icebp
inc
mov
enter
jo
mov
cld
int
out
push
lock
push
push
push
pop
sub
int3
and
sahf
pop
sti
push
cli
push
fisubr
xor
add
jbe
hlt
mov
aaa
adc
jg
xchg
std
cmps
cmps
in
sbb
cmp
jmp
out
mov
cli
cld
fld
and
push
rol
les
mov
out
mov
int
out
jno
or
dec
pop
sbb
push
leave
pop
test
mov
imul
xchg
or
daa
push
pop
pop
pusha
nop
mov
out
aam
stos
fstp
pop
scas
xor
ja
mov
mov
inc
aas
enter
test
(bad)
mov
pop
fld
fiadd
fild
mov
stc
mov
test
into
repnz
or
int3
xor
pusha
movs
mov
sub
jmp
dec
mov
xchg
test
lods
sub
pop
inc
push
js
je
out
imul
add
adc
sbb
mov
inc
in
scas
mov
int
js
pop
add
push
out
lods
inc
inc
mov
sbb
jp
mov
pushf
pop
adc
fiadd
mov
inc
jmp
enter
ins
ja
clc
sahf
ins
push
test
pop
sub
mov
ss
daa
in
ror
mov
dec
push
sub
movs
adc
pop
or
xor
scas
and
les
ret
mov
push
push
jmp
jp
daa
mov
push
mov
mov
(bad)
in
push
aam
imul
mov
mov
sbb
jge
xlat
daa
dec
imul
push
jo
mov
xchg
push
outs
ja
outs
scas
popf
sbb
cdq
hlt
es
xchg
sti
imul
enter
pop
nop
inc
sub
dec
cmc
lds
push
push
mov
test
jg
push
mov
xor
mov
push
inc
(bad)
ret
lods
mov
dec
outs
sbb
lds
fcmovne
xor
stos
add
adc
imul
push
popa
inc
scas
and
push
sar
(bad)
nop
std
sub
xlat
call
pop
pop
xchg
inc
mov
mov
mov
push
lea
mov
jp
push
adc
cs
rcl
popf
(bad)
loopne
xor
(bad)
pop
push
dec
in
scas
or
cmp
sysexit
ja
add
js
aaa
sub
xchg
mov
stos
dec
lahf
movs
jl
and
or
arpl
inc
push
dec
inc
shl
outs
mov
test
dec
(bad)
cdq
adc
or
cmps
push
cmps
clc
lea
pop
pop
or
aas
push
push
jo
outs
aam
xchg
jno
adc
test
pop
aad
sub
(bad)
jae
inc
and
je
outs
mov
(bad)
or
shl
jnp
cmp
imul
xchg
or
cwde
fidiv
lods
std
clc
xlat
enter
fld
repz
and
mov
jnp
stc
shl
inc
ret
push
fdiv
jo
out
adc
jne
jno
inc
stc
adc
rcr
jnp
jl
xor
ds
pushfw
or
aad
aas
test
mov
mov
pop
cmp
or
in
dec
inc
aad
push
aad
mul
mov
out
mov
dec
mov
mov
sub
push
in
cs
scas
mov
dec
pusha
mov
aaa
out
(bad)
cmp
mov
push
adc
rcr
xor
and
into
ret
test
repnz
jge
ret
push
xor
inc
inc
dec
dec
xchg
arpl
mov
inc
outs
test
outs
repnz
and
pop
shl
pop
popf
rol
sbb
xor
pop
sbb
mov
mov
cwde
in
dec
rcl
pushf
cld
adc
mov
push
adc
and
out
aam
push
jge
es
cld
add
inc
lahf
cmp
adc
mov
push
pop
les
mov
jecxz
repz
repz
or
mov
mov
(bad)
jle
cdq
pop
das
pop
or
push
and
ins
inc
shl
outs
inc
mov
cmp
loope
pushf
js
sub
pop
mov
xchg
inc
fmul
aas
(bad)
or
jnp
adc
cmc
xor
pop
fwait
xchg
ins
push
mov
repnz
mov
fisttp
cmp
in
jo
out
in
mov
xor
jo
hlt
xor
fst
and
int
and
dec
push
push
rcl
arpl
sbb
and
add
cdq
jmp
stc
sbb
ds
pop
fiadd
push
sbb
sbb
dec
(bad)
xchg
mov
in
(bad)
push
mov
int3
scas
movs
cwde
and
pop
dec
add
inc
and
push
xor
jecxz
cmp
mov
push
loope
sub
retf
or
out
sbb
ret
iret
in
adc
pop
hlt
cmp
push
mov
jmp
scas
fstp
or
pop
ret
int3
inc
test
sub
clc
inc
dec
xlat
call
dec
lds
inc
inc
sub
mov
enter
pop
inc
(bad)
push
xchg
pop
neg
mov
arpl
xor
shl
push
ss
test
stos
ret
add
cmp
mov
mov
cmp
ret
loopne
jmp
fcomi
push
sbb
jns
mov
int3
pusha
xlat
(bad)
jne
repz
jns
imul
iret
sbb
js
neg
(bad)
pop
loope
adc
inc
movs
and
jnp
sbb
mov
inc
adc
clc
xchg
sub
fsubr
ins
add
dec
outs
das
les
dec
mov
nop
fadd
push
xchg
idiv
pop
cmp
mov
jmp
fcomp
xchg
movs
mov
or
shl
sar
cmp
mov
xor
adc
jns
pop
and
dec
xor
data16
and
sub
bound
inc
and
dec
fidiv
cmps
stc
push
test
aas
dec
inc
leave
cmp
sbb
mov
into
int3
mov
sbb
adc
leave
inc
leave
inc
mov
ja
mov
adc
pop
clc
push
sbb
in
jnp
mov
loop
adc
or
mov
aad
nop
cmc
mov
xor
adc
icebp
inc
cmc
adc
hlt
adc
idiv
jmp
sub
dec
ret
out
jmp
popf
mov
lds
add
cmp
xchg
cmp
iret
push
mov
inc
outs
jge
mov
or
cmp
pop
(bad)
or
inc
lock
jle
inc
xchg
inc
dec
pushf
pushf
test
cmp
adc
cmc
aam
(bad)
and
add
mov
and
mov
push
jbe
sub
sub
inc
ins
lock
add
pop
jp
push
sar
sub
sbb
inc
and
addr16
inc
sub
es
out
int3
fldcw
pusha
int3
inc
or
ret
mov
mov
stos
and
xor
and
xchg
fprem1
adc
xchg
add
or
sub
sbb
push
popf
mov
js
pop
sahf
jmp
cmp
push
push
pusha
in
(bad)
jb
push
jl
adc
ret
pop
shl
jmp
mov
aaa
pop
shld
iret
outs
mov
push
sbb
xor
in
xor
or
cmp
repz
in
pop
mov
pusha
mov
pop
retf
icebp
aaa
cmp
mov
and
cmp
dec
add
push
jb
fsub
mov
jbe
pop
call
sub
ins
rcl
mov
sub
cmp
cs
aas
or
test
mov
imul
idiv
pusha
rcr
fwait
adc
sbb
mov
cwde
cmp
sub
cwde
adc
push
test
mov
into
cmp
and
int3
dec
adc
aad
mov
stc
lahf
bound
(bad)
mov
cmp
div
add
leave
pusha
jb
repz
in
mov
(bad)
cli
cmp
jg
lods
test
lahf
mov
loopne
mov
in
sbb
inc
jge
lock
xchg
and
retf
sbb
jae
ret
cld
xchg
mov
aaa
xchg
add
add
sub
sub
mov
test
sub
cmp
jb
arpl
push
sbb
sahf
jmp
int
adc
cmp
dec
in
mov
fmul
loope
pop
dec
jmp
test
fstp
inc
repz
adc
xchg
mov
push
(bad)
arpl
test
jp
dec
sahf
adc
ja
les
fs
sub
stc
jno
mov
jno
sub
stos
xchg
ja
les
or
pop
test
push
test
in
pop
add
std
and
retf
jns
xor
sbb
inc
loope
fs
pop
sub
in
cdq
mov
adc
dec
push
add
aaa
pusha
call
push
popa
scas
mov
adc
cmp
sub
addr16
int3
pop
mov
and
sub
jecxz
mov
in
pop
data16
sbb
je
jmp
mov
popf
(bad)
xor
adc
pushf
out
(bad)
pop
sub
sbb
fisubr
jo
inc
mov
test
pop
mov
push
or
xchg
in
adc
dec
add
aas
scas
call
sbb
clc
mov
popa
mov
nop
cdq
loopne
and
cwde
jmp
jo
mov
push
adc
ds
int
and
inc
xor
adc
jl
inc
pop
cmp
inc
test
jp
gs
sbb
inc
inc
adc
mov
sub
fdivr
mov
(bad)
jp
push
repz
adc
(bad)
jo
nop
sub
test
lods
jb
cmc
stc
outs
pushf
pop
or
xor
ja
jnp
xor
retf
inc
cli
dec
cmps
mov
enter
sub
aam
push
fsub
push
sub
push
shr
mov
jmp
xchg
adc
inc
push
xchg
push
in
xor
ja
add
xchg
and
movs
push
aad
int
into
cmp
dec
add
in
xor
ror
xor
or
cmp
cwde
pop
fcom
into
sub
std
movs
and
rol
mov
arpl
sub
pop
add
out
mov
xor
push
and
mov
arpl
fsubr
dec
or
loope
ror
cli
fiadd
push
mov
pusha
push
(bad)
imul
sub
pop
fstp
xor
hlt
dec
rol
xor
loop
jmp
movs
imul
sar
sub
imul
dec
add
lea
add
in
push
aaa
mov
mov
and
pop
lea
cmp
jl
pop
ror
xor
xchg
out
ins
inc
(bad)
(bad)
hlt
ins
xchg
jmp
lahf
jno
jno
cmp
xor
jl
mov
mov
adc
stos
das
mov
pop
sbb
jle
pop
jb
cmp
inc
icebp
out
pop
test
cmp
adc
and
push
pop
mov
mov
jmp
sti
rol
ja
in
enter
mov
push
repz
add
lock
stos
jnp
mov
jl
pop
mov
add
push
test
cmp
ret
movs
retf
ja
mov
xchg
dec
bound
cmp
fstp
sbb
and
in
and
test
pop
fisttp
in
pop
setb
aas
add
xor
push
pop
xor
outs
xchg
jl
sbb
inc
and
movs
fnsave
clc
mov
inc
sbb
xchg
or
or
dec
ins
pop
and
or
pop
imul
lock
push
sub
ins
jecxz
jb
xor
or
adc
std
xchg
mov
adc
outs
jo
pop
mov
adc
push
ins
aaa
scas
xor
sti
jecxz
fidiv
cmp
test
push
mov
xchg
sub
and
pushf
mov
(bad)
rol
adc
adc
je
mov
test
cmc
xor
cmp
in
cmp
push
scas
mov
pop
or
jb
mov
dec
hlt
fcomp
push
ftst
pop
xor
inc
sti
inc
mov
inc
and
and
ins
xor
xchg
dec
rcl
cld
fimul
rcl
add
xlat
pushf
dec
pusha
sbb
dec
mov
jno
cmp
and
popf
std
sbb
sub
and
(bad)
jne
inc
add
mov
push
cmp
pop
fdivr
dec
and
mov
div
sub
cmp
jle
cmp
out
sub
push
data16
jmp
inc
imul
xchg
mov
pop
mov
mov
into
mov
inc
and
push
imul
icebp
xchg
lea
xor
jo
fst
adc
gs
push
fldenv
xor
push
jne
cs
outs
js
outs
rol
cmp
push
adc
or
aaa
dec
dec
popa
in
add
loope
leave
push
fidivr
loop
movs
lds
xchg
add
in
enter
stos
sub
xor
fwait
je
inc
xchg
mov
push
lods
add
lods
push
addr16
fiadd
cmp
xchg
cmps
mov
xor
or
call
sbb
mov
mov
mov
ins
adc
and
ins
add
xchg
mov
jo
pop
add
mov
pop
test
push
push
pop
fsub
ins
sbb
pop
in
push
and
imul
into
jle
call
add
(bad)
mov
sahf
push
jns
(bad)
shl
mov
sub
call
sahf
das
inc
jg
sbb
dec
(bad)
xlat
adc
add
sub
push
lods
and
fisubr
push
int3
jnp
fdivr
sahf
push
cmp
addr16
loopne
(bad)
test
(bad)
retf
sub
push
and
leave
and
imul
std
jne
sahf
into
mov
mov
stos
mov
xchg
push
or
sub
sar
mov
les
rcr
jbe
xchg
xor
inc
scas
jae
in
xchg
mov
fist
push
jg
sub
mov
ffreep
xor
add
mov
fidivr
mov
fld
outs
inc
dec
add
sub
and
and
arpl
dec
mov
popf
fldenv
or
push
xor
mov
adc
fst
jmp
popf
push
mov
sbb
adc
pop
in
loopne
hlt
xchg
push
push
ror
(bad)
adc
out
mov
add
inc
adc
lahf
cmps
sbb
xchg
sbb
mov
test
xchg
mov
mul
mov
(bad)
sub
push
adc
repz
ror
push
cdq
and
or
xchg
loop
mov
int
into
mov
mov
jae
mov
cmp
push
xchg
data16
and
add
adc
mov
(bad)
add
stos
dec
shl
push
sti
mov
imul
stos
jge
popf
mov
shr
fistp
in
dec
(bad)
pop
ins
xor
mov
repz
add
xor
or
cmp
outs
imul
and
pop
xor
out
inc
rcl
lahf
bound
dec
lock
sbb
or
(bad)
test
mov
or
xchg
loope
jmp
jecxz
push
and
lahf
pop
ja
loopne
adc
adc
test
pop
outs
inc
push
call
xlat
test
jp
mov
pop
add
enter
(bad)
or
xchg
dec
cmp
mov
mov
xchg
(bad)
ret
sub
clc
inc
pushf
sub
pop
stos
outs
shl
out
shr
cld
test
ficomp
dec
and
std
fmul
or
dec
ret
jg
fnstsw
std
jecxz
int3
pop
rol
fstp
pop
mov
loopne
data16
pop
fisttp
movs
fldcw
popa
leave
in
sbb
outs
bound
mov
jg
movs
test
adc
mov
jle
sub
in
or
dec
icebp
add
out
loop
jmp
leave
cmc
inc
imul
cmovnp
lea
push
movs
sub
mov
fadd
mov
daa
cli
jo
ja
fiadd
iret
jecxz
mov
shr
and
outs
pop
push
xchg
jmp
adc
(bad)
adc
sbb
jne
and
sbb
inc
xchg
mov
lahf
imul
imul
inc
inc
dec
test
and
cld
push
xor
outs
jmpw
in
(bad)
sub
aam
icebp
fmul
fsubrp
add
jmp
(bad)
jb
xor
xchg
push
je
rcl
das
dec
jmp
in
inc
dec
es
or
out
retf
lods
aam
jp
lods
js
xchg
stos
cmp
unpcklps
enter
ficom
fadd
stos
add
cwde
retf
cmp
inc
in
and
cmps
or
inc
test
dec
lea
mov
xor
sub
jp
fs
stos
push
jmp
xchg
ret
add
or
scas
or
pop
fcmove
mov
ret
cmps
lahf
or
mov
sub
or
punpckhdq
mov
inc
pop
js
(bad)
loop
cmp
and
test
add
mov
sub
in
xor
jecxz
rcl
test
jmp
retf
jecxz
mov
retf
stos
jb
pop
or
pop
stc
cld
repz
cdq
sub
cmp
sub
fcmovne
enter
or
out
outs
lea
in
xlat
mov
fild
xor
(bad)
(bad)
mov
out
lea
jo
xchg
xor
sub
dec
in
sbb
icebp
adc
sub
and
jne
or
sub
jmp
or
mov
fldcw
dec
stos
inc
jp
xor
and
dec
push
ins
inc
loope
pop
dec
fstp
mov
sub
loop
inc
shr
mov
inc
int
jbe
inc
retf
xor
sbb
xor
mov
xor
or
adc
adc
shl
sub
call
sub
aas
xchg
xchg
aam
jae
call
(bad)
xchg
dec
pop
das
push
mov
and
xchg
icebp
in
xchg
jge
pop
lahf
(bad)
inc
cmp
jno
ja
aad
sub
dec
lock
push
in
inc
mov
mov
movs
xchg
cli
jne
sbb
enter
jmp
adc
and
shl
adc
imul
mov
test
shr
fs
cwde
mov
outs
mov
in
or
fld
pushf
jns
jg
or
mov
int3
or
adc
lahf
daa
cdq
and
leave
aad
xchg
movs
loop
aad
outs
xchg
dec
leave
shl
neg
jecxz
ret
inc
(bad)
jecxz
loope
and
push
or
cmps
sbb
movs
pusha
or
int3
and
imul
mov
pop
hlt
mov
mov
test
fcmovnbe
dec
lods
jb
xchg
mov
mov
shl
pop
cmp
loop
jmp
ret
sbb
lods
and
je
sub
out
xchg
pop
das
inc
ret
(bad)
sub
jbe
fstp
out
mov
xchg
dec
xchg
outs
ss
push
inc
fucomp
pcmpgtd
out
scas
mov
les
pop
or
out
movs
ds
(bad)
repz
rol
mov
cmp
jno
mov
inc
sbb
pushf
mov
xchg
cdq
mov
add
xor
cmp
es
aas
jecxz
sbb
sub
xor
inc
dec
test
jnp
jno
cmp
dec
icebp
xor
addr16
ror
call
cld
stos
adc
fild
add
jmp
fmul
cmp
jmp
(bad)
xchg
dec
xor
outs
in
movs
xchg
pop
shl
cmp
xchg
leave
cli
mov
aaa
jo
test
cwde
xor
mov
iret
cmp
push
ja
adc
loop
mov
dec
cmps
enter
(bad)
call
sbb
cmp
out
mov
ss
fs
xchg
push
push
cmps
mov
xchg
int
xchg
hlt
or
jnp
fs
xchg
fidiv
pop
push
repz
daa
xor
fdiv
jae
cmps
xchg
xchg
stos
push
shr
mov
add
jecxz
fwait
sbb
ficom
adc
mov
push
movs
fnsave
pushf
inc
popf
and
or
dec
test
aam
mov
js
push
xchg
imul
iret
in
xor
mov
test
dec
sbb
test
push
into
jne
fsubr
cmp
jmp
les
scas
xlat
outs
push
dec
daa
es
iret
mov
les
ficomp
fnsave
xor
test
test
inc
push
es
and
push
or
out
iret
cmc
inc
pop
ins
das
loope
mov
retf
add
popa
repnz
sbb
jecxz
xchg
ins
adc
add
loope
jle
(bad)
push
xchg
(bad)
push
fs
addr16
mov
addr16
add
dec
mov
and
sti
pop
mov
push
mov
out
or
lock
dec
pop
adc
add
repz
stos
mov
pop
cmp
add
jbe
stc
mov
stos
lock
aad
xor
dec
imul
sbb
mov
xchg
jmp
or
inc
(bad)
xor
jmp
pop
imul
sub
rcr
stos
test
mov
clc
das
jns
or
test
dec
mov
mov
bound
jae
or
popa
ficom
ins
mov
rcr
mov
push
popf
add
bound
movs
mov
aam
push
repnz
mov
push
cmp
mov
es
rol
mov
jmp
inc
repnz
fst
int3
jo
jge
mov
scas
out
jge
fadd
int
ds
jns
or
xor
outs
jns
mov
mov
in
sar
adc
mov
pop
jbe
aad
scas
mov
dec
sbb
shr
push
iret
mov
addr16
xchg
pop
out
cmps
cmps
(bad)
xchg
inc
scas
iret
mov
pop
outs
mov
ja
adc
lds
jmp
sub
pushf
add
sub
loop
xor
test
mov
jp
loope
add
test
add
stos
cmp
loope
push
xchg
dec
les
cmp
popf
mov
dec
pop
(bad)
ss
sahf
std
ret
jecxz
inc
xor
loopne
xor
sti
pop
scas
lods
mov
lods
inc
sbb
jae
jl
add
imul
mov
xor
push
fmul
xchg
iret
xchg
pop
cwde
jae
push
jb
jg
div
scas
pop
mov
int
add
ja
pop
jge
mov
(bad)
adc
adc
test
rcr
fadd
(bad)
inc
loopne
add
sbb
pop
fistp
fcom
jge
jae
pop
sbb
xchg
adc
popa
ja
arpl
gs
add
mov
sbb
arpl
in
jle
addr16
je
cmp
or
jmp
mov
(bad)
xchg
cmp
add
sbb
stos
pop
adc
sahf
mov
test
mov
scas
aad
sub
cmovnp
dec
add
push
(bad)
hlt
rol
cdq
jl
jmp
cmp
push
retf
outs
inc
in
je
sar
rol
pop
and
jmp
aaa
sbb
repnz
pop
inc
cld
pop
push
out
dec
mov
pop
div
jb
pop
adc
fucomi
push
sub
je
fisttp
aam
dec
dec
inc
dec
nop
pop
inc
or
inc
lea
clc
test
jns
pop
loop
retf
xchg
cmps
and
sub
push
mov
mov
adc
xchg
adc
jmp
rcr
jne
cld
dec
mov
xchg
cmp
cmp
lahf
retf
pop
cmc
stos
dec
test
xor
cld
mov
(bad)
inc
cli
jns
(bad)
shl
add
sub
test
mov
or
mov
xor
shl
(bad)
sub
loope
rcr
and
ret
stos
nop
mov
mov
bound
(bad)
cmp
and
pop
ret
add
xrelease
mov
std
push
ja
ror
int3
mov
dec
cwde
es
nop
pop
inc
fs
sub
lock
push
inc
cmps
cmps
push
(bad)
icebp
jb
sbb
cpuid
aam
and
cmp
xor
pop
jno
xor
lds
xchg
movs
sub
sub
or
in
mov
test
or
clc
jecxz
test
ins
aaa
mov
mov
pop
aas
xchg
jb
jns
movs
sub
xlat
dec
setbe
imul
push
arpl
call
add
ss
sti
xchg
mov
mov
mov
sbb
jns
and
xor
fwait
(bad)
lods
in
cmp
cdq
cmp
cmps
mov
jmp
movs
push
cmp
mov
scas
push
clc
sub
push
pop
sbb
mov
add
std
les
cwde
add
inc
imul
sbb
int3
jl
dec
mov
dec
fstp
imul
add
imul
pop
out
outs
cmp
pop
push
imul
aad
adc
pop
sub
in
sti
scas
mov
inc
ds
inc
fidivr
mov
mov
arpl
pop
push
push
hlt
out
ficomp
loope
fisubr
xchg
fisttp
fsubrp
sbb
in
jmp
push
ds
fnstenv
imul
add
into
pop
popa
push
dec
icebp
mov
dec
push
mov
out
xchg
mov
push
scas
dec
ins
xchg
adc
pop
loopne
in
mov
enter
ds
shr
hlt
int
out
mov
inc
call
sub
cmps
jmp
daa
xor
inc
mov
std
(bad)
sbb
jg
icebp
jo
mov
sbb
retf
push
sub
scas
pop
jge
dec
sbb
or
jb
lods
cli
rol
xor
jno
iret
mov
jmp
imul
in
xchg
(bad)
mov
movs
(bad)
(bad)
mov
mov
push
and
xchg
ror
fbld
js
rol
sub
push
retf
lock
dec
push
inc
aaa
popf
mov
ret
push
mov
push
jg
pop
loopne
int3
popa
dec
lahf
je
sbb
xchg
push
pop
sti
dec
push
push
sbb
into
gs
pop
inc
jo
(bad)
mov
xor
mov
int
loopne
dec
mov
sbb
mov
ror
imul
push
add
jbe
test
push
lahf
add
(bad)
and
mov
mov
lods
push
inc
jno
or
mov
cmp
scas
int3
cmp
add
sti
test
in
sub
mov
jb
les
add
dec
test
bound
(bad)
rcl
rdtsc
iret
inc
rcr
dec
push
in
rcr
dec
cmp
jnp
mov
call
pop
pop
hlt
fcomip
jge
div
push
cmp
add
push
data16
int3
fucom
nop
leave
pop
add
xchg
xor
(bad)
in
popf
cmps
cmp
add
into
inc
xchg
cmp
fs
cmp
push
dec
(bad)
into
push
jmp
and
or
push
div
call
jge
cmp
dec
stos
xchg
xchg
push
jmp
mov
xor
push
fadd
sub
dec
aam
imul
retf
daa
mov
lea
fwait
add
adc
in
fnstsw
fdivr
mov
nop
dec
loope
pop
outs
mov
cmps
aad
imul
xchg
cmp
movs
in
jmp
mov
sub
or
(bad)
pop
arpl
dec
dec
and
push
and
fidiv
mov
cmp
push
(bad)
mov
aam
test
movs
or
neg
mov
add
xor
xor
inc
scas
xor
mov
stc
pop
adc
popf
mov
inc
adc
pop
push
popa
mov
inc
push
jecxz
push
xor
pop
dec
push
jne
jl
push
mov
dec
int
call
es
into
out
add
push
sahf
sub
clc
push
pusha
xchg
ins
fwait
in
(bad)
xor
and
cmp
shl
loope
addr16
mov
fisubr
sbb
repz
pushf
jb
shl
or
cmps
mov
inc
xor
bnd
cmp
inc
mov
shl
aad
inc
push
add
xchg
inc
stos
out
mov
lods
add
adc
dec
inc
mov
loope
(bad)
sbb
sbb
addr16
push
stc
loopne
pop
bound
outs
daa
pop
mov
lahf
push
push
call
retf
cmp
imul
mov
pop
(bad)
xchg
xchg
fst
jle
les
and
mov
enter
sbb
push
gs
das
popfw
scas
add
dec
sbb
push
dec
daa
adc
pop
sbb
mov
popa
mov
dec
imul
mov
retf
enter
mov
fwait
adc
(bad)
lods
(bad)
lahf
retf
es
outs
add
pop
mov
cmp
(bad)
retf
mov
ds
in
mov
sbb
out
fnstcw
add
scas
shr
lods
jp
repz
push
and
arpl
clc
ds
sbb
bound
mov
cdq
fisttp
add
mov
aad
daa
xor
adc
ja
cmp
or
pop
fs
mov
sub
das
lods
mov
xchg
test
jno
lods
aad
pop
in
mov
aaa
pop
mov
dec
ret
mov
sub
adc
loopne
push
jbe
es
jbe
mov
lods
dec
cmp
test
sbb
into
int3
scas
fcom
pop
mov
movs
out
pop
adc
xor
jnp
je
dec
jge
pop
imul
fist
test
out
jne
fs
mov
pop
mov
xor
sbb
sub
or
inc
sub
adc
dec
dec
and
test
inc
test
je
add
pop
ins
sub
jno
fist
sub
push
in
arpl
in
cli
lods
loop
adc
imul
or
in
(bad)
int
icebp
sub
in
xchg
sbb
inc
lock
inc
dec
rol
test
and
leave
shr
sbb
xor
scas
mov
mov
(bad)
push
sub
xor
or
ds
(bad)
or
sub
nop
(bad)
pop
pop
lods
es
pop
cwde
xchg
out
mov
call
sti
nop
xchg
mov
mov
and
mov
mov
cmps
mov
push
stos
imul
fimul
mov
iret
and
xor
xor
jae
imul
xchg
repnz
test
ja
mov
ds
(bad)
jno
and
call
push
jno
xlat
fs
rcr
ficom
(bad)
leave
mov
jl
test
jg
daa
mov
adc
jle
xchg
mov
jecxz
ret
shl
iret
mov
or
pop
cli
mov
and
inc
xchg
dec
or
es
and
out
add
add
inc
push
adc
push
xchg
and
enter
adc
and
jl
xchg
xchg
cmp
jge
mov
inc
test
cmps
pop
adc
int
aam
cmps
cmp
shl
dec
outs
pop
add
ins
cmp
cld
(bad)
shl
push
fdivr
xchg
mov
test
stos
sbb
sbb
or
enter
mov
dec
sbb
mov
jnp
adc
jmp
add
test
retf
mov
cld
cwde
add
push
out
cmp
pop
cld
sbb
rol
retf
das
data16
ror
add
les
jge
sub
(bad)
cli
push
jmp
adc
mov
div
sub
jb
test
call
out
outs
aad
pop
sahf
jmp
pop
pusha
mov
dec
(bad)
mov
pop
popa
or
mov
add
in
retf
add
(bad)
icebp
mov
bound
cmps
and
cdq
mov
or
movs
and
sub
cld
push
rcr
aam
lds
paddw
xchg
cmp
and
mov
adc
mov
bound
rol
cli
and
lods
enter
stos
je
dec
dec
xchg
sbb
(bad)
sub
cli
movs
inc
sub
push
in
mov
push
lds
cmp
cs
push
cdq
outs
mov
aaa
fnstsw
push
mov
fnsave
or
cmps
cwde
pop
stos
mov
lods
adc
in
inc
jge
stc
mov
ret
mov
aaa
sbb
enter
add
mov
ret
dec
push
sub
test
adc
(bad)
xchg
cmps
pop
in
std
and
ret
lods
outs
cmp
xor
popf
inc
imul
pop
and
(bad)
cmp
lahf
in
pop
jne
adc
xlat
call
xchg
popf
daa
(bad)
mov
mov
dec
xchg
cmp
xor
int3
or
jns
addr16
pop
loopne
xchg
or
(bad)
push
movs
bound
mov
push
adc
aad
inc
fcmovnbe
retf
jle
dec
in
imul
pop
and
xor
sub
pushf
and
push
daa
(bad)
(bad)
out
popf
sbb
fnsave
jo
cmps
dec
das
imul
jns
and
call
(bad)
pop
inc
arpl
ins
rol
pop
jns
mov
xor
cmps
add
push
adc
stc
push
push
shl
(bad)
lea
push
dec
pop
mov
sti
daa
imul
imul
retf
sub
retf
or
bound
inc
mov
dec
clc
repnz
jbe
ficom
dec
out
out
iret
mov
lods
and
addr16
mov
ins
outs
jae
dec
sub
push
rcr
sub
ficom
adc
cmp
mov
cmps
test
ror
pop
fdivr
mov
out
test
test
xchg
jmp
(bad)
into
jmp
mov
pop
mov
pop
mov
cmps
int3
outs
repz
stc
push
xlat
fsubr
call
test
loope
jl
lea
retf
fmul
dec
xlat
jle
sbb
mov
rol
sub
outs
pop
dec
aad
fwait
data16
sub
add
rol
retf
jne
ins
cld
cmps
cmc
push
ds
xchg
out
test
add
call
dec
stc
fimul
jecxz
xchg
pop
xchg
xor
outs
cmp
jle
lea
mov
jne
inc
js
jge
ds
inc
loope
ret
push
push
mov
or
enter
bound
les
fdivr
f2xm1
mov
shr
rcpps
jno
ins
mov
and
jmp
ins
cmp
cld
cmps
pushf
mov
jbe
js
mov
cmps
out
adc
sbb
mov
loopne
mov
mov
sub
cmp
push
in
(bad)
in
mov
and
mov
adc
push
(bad)
sub
pop
movs
ret
scas
xchg
mov
adc
dec
or
or
scas
mov
fisttp
mov
scas
xchg
xlat
sti
adc
inc
iret
push
(bad)
dec
xor
mov
or
stos
sub
cwde
ins
xor
push
call
jno
or
stos
mov
(bad)
jbe
mov
gs
push
shl
punpckhwd
jb
cwde
mov
cmp
outs
aam
jns
sbb
enter
xchg
sbb
add
iret
cwde
fwait
test
fwait
cmp
retf
cmc
(bad)
xlat
cmc
jle
jb
jno
movs
repnz
out
mov
jp
mov
scas
dec
mov
test
sti
imul
pushf
pop
ror
and
xlat
call
push
movs
test
dec
repz
stos
push
cdq
retf
arpl
cli
lea
and
ret
mov
mov
out
popa
fucompp
push
add
jnp
fstp
mov
push
repnz
movs
repz
push
leavew
dec
mov
ja
and
xor
mov
xlat
and
and
int
out
imul
sbb
aas
cmp
lea
mov
pop
mov
shl
mov
mov
or
pop
push
mov
movs
or
xor
lahf
test
xchg
xchg
ss
popa
fldcw
and
shl
xor
ins
inc
pusha
loope
push
scas
shl
(bad)
mov
in
lods
pop
adc
dec
shl
and
or
ret
adc
sub
pop
sbb
mov
add
mov
add
sahf
(bad)
ja
fisttp
adc
out
mov
jmp
ret
sub
loope
test
int
cmps
shl
adc
cli
jns
je
fdiv
pop
sti
and
dec
inc
adc
ds
stos
cmp
popf
push
push
and
dec
push
std
call
(bad)
jo
sbb
adc
adc
xor
or
les
pop
(bad)
ins
inc
add
ins
mov
ja
lds
mov
les
cmp
mov
xchg
pop
xchg
mov
fmul
loope
fist
xor
inc
jns
sub
enter
cmp
lock
pop
inc
pop
inc
xlat
icebp
cmp
imul
sar
loopne
jnp
(bad)
repnz
loope
popf
in
(bad)
jo
xchg
js
xchg
fdivr
mov
inc
mov
adc
mov
in
inc
sub
data16
arpl
fbstp
or
in
imul
push
xor
push
mov
xlat
jg
sti
outs
or
adc
cmps
inc
fiadd
jne
cdq
dec
add
fisub
popa
xlat
pop
arpl
jmp
push
outs
xchg
mov
aad
jbe
sbb
sbb
sbb
jbe
into
pop
xchg
mov
ficomp
mov
in
scas
dec
push
push
cmps
xor
and
daa
push
cmps
adc
clc
std
mul
fcmovnbe
int3
int3
pop
pop
aad
xor
inc
or
mov
ss
inc
sar
shr
in
push
inc
in
add
(bad)
add
push
movs
adc
sti
loopne
sub
fpatan
iret
push
rol
in
rol
in
aad
xchg
dec
dec
stos
cmp
or
inc
xchg
pushf
jb
mov
push
pop
setne
inc
xchg
enter
mov
pop
bound
test
cdq
ins
test
into
push
outs
xlat
inc
popa
aad
clc
mov
or
dec
mov
sahf
pop
stc
cmp
hlt
xor
pop
fs
rol
scas
(bad)
push
mov
adc
aas
aas
cs
mov
adc
or
pop
xor
pop
xchg
fisttp
or
inc
paddusw
jl
xchg
jne
xor
xchg
lds
je
retf
push
sbb
inc
xchg
int
sub
sub
fwait
push
je
cvtpi2ps
mov
jmp
jmp
cmp
sbb
xor
in
daa
mov
add
(bad)
inc
sbb
imul
(bad)
icebp
iret
cmp
jae
jl
cmp
leave
jmp
mov
pop
push
or
sub
and
sub
fimul
xor
fisub
xchg
sub
lea
call
int3
xchg
sbb
mov
pop
ins
mov
sub
mov
mov
jl
lods
inc
add
or
mov
sub
sbb
xchg
pop
sub
xor
js
addr16
and
out
mov
jno
pop
mov
ds
pop
sahf
inc
xchg
xchg
pop
sub
fs
pop
(bad)
in
je
inc
add
pop
js
adc
or
sub
in
mov
faddp
adc
xchg
pushf
fwait
cwde
sub
ret
cwde
xchg
mov
push
push
jl
push
adc
mov
movs
cmps
or
cmp
jmp
mov
aas
mov
rcr
cmp
ja
push
inc
adc
(bad)
pop
das
shl
jg
(bad)
xchg
lahf
mov
stos
cmp
gs
mov
push
jb
mov
or
lds
mov
mov
in
cmp
into
shl
mov
int3
mov
call
or
jge
pop
pusha
jmp
and
adc
out
lds
pusha
inc
test
adc
test
cmc
pop
mov
push
sub
(bad)
out
or
jbe
push
cmp
(bad)
mov
fsubr
movs
cmps
pop
and
dec
cmp
and
out
outs
int3
sti
push
ins
out
cdq
and
xchg
das
int
pop
push
or
scas
dec
xlat
add
cmp
arpl
push
in
xchg
dec
stos
cmp
test
push
inc
jae
mov
lahf
dec
dec
pop
and
sbb
xchg
push
mov
daa
push
pop
mov
fistp
movs
add
xchg
dec
test
or
stc
jle
std
arpl
jo
sahf
push
(bad)
stos
or
xchg
test
fstp
inc
sbb
push
in
ins
or
pop
(bad)
lods
ja
or
push
stos
cmps
repz
push
mov
adc
jl
stc
sub
mov
fstp
xchg
push
lea
jo
scas
mov
dec
call
icebp
mov
mov
out
js
cmc
jnp
and
ret
ror
mov
mov
sub
pop
int3
cs
inc
std
xor
jae
push
inc
sar
xchg
sbb
in
je
mov
xchg
hlt
add
(bad)
push
jl
push
lea
mov
xchg
inc
scas
xor
mov
mov
jmp
(bad)
retf
sub
inc
(bad)
sar
mov
loopne
jno
sbb
mov
std
sbb
movs
pop
add
pop
mov
mov
ror
loopne
lods
xchg
pop
inc
sbb
(bad)
jl
dec
jb
retf
push
mov
mov
adc
and
mov
cs
into
loopne
lds
nop
aad
icebp
mov
jecxz
loop
es
ror
cmc
outs
(bad)
daa
pushf
adc
sbb
add
push
pop
lahf
popf
retf
enter
loop
aam
loop
call
push
or
inc
or
(bad)
cmp
dec
jp
inc
sbb
adc
test
xlat
inc
inc
int3
fsub
mov
dec
hlt
mov
sub
iret
(bad)
imul
push
mov
das
std
pop
sub
jo
dec
push
fsub
cmc
push
xlat
jbe
cdq
jle
push
cmp
imul
out
mov
stos
(bad)
les
push
jmp
lods
dec
cmp
mov
outs
sahf
in
mov
enter
inc
pop
gs
lahf
mov
cs
shr
movs
add
cmp
sbb
and
jl
(bad)
pop
jge
ffree
push
outs
mov
inc
pop
shl
out
scas
dec
into
call
adc
xor
push
xor
jg
fsubr
fwait
shr
loope
add
add
clc
addr16
daa
in
loopne
and
xchg
scas
mov
sub
mov
fmul
daa
rcl
sub
ficomp
xchg
sub
add
xchg
jbe
in
daa
std
call
xchg
mov
jge
jns
fs
adc
int
sbb
inc
daa
mov
or
rol
aaa
inc
mov
push
cmp
cdq
push
retf
adc
dec
mov
add
(bad)
loopne
inc
leave
mov
mov
jnp
and
stc
iret
pushf
cmps
mov
aaa
(bad)
or
inc
bound
out
cmp
sbb
push
mov
jg
dec
pop
sbb
repnz
cdq
repnz
jbe
xor
sar
jo
loop
xchg
mov
and
fsub
loop
mov
sbb
xchg
jmp
lea
mov
dec
xchg
push
cmp
sub
arpl
lock
cmp
loopne
adc
or
xor
inc
and
lods
sbb
fwait
dec
mov
int3
cmps
cmp
or
arpl
std
dec
dec
lds
jbe
dec
les
mov
xchg
test
xchg
ret
es
sub
(bad)
cmps
adc
inc
ja
mov
out
pop
mov
pop
or
mov
pop
xor
stos
fs
add
jne
adc
mov
pop
cmps
or
fwait
lods
xor
(bad)
inc
inc
jbe
push
into
pop
inc
inc
retf
and
inc
psrlq
inc
mov
mov
and
fisubr
cli
popa
stc
xchg
cdq
jge
push
loopne
loope
mov
push
mov
lods
jns
and
lock
scas
repnz
mov
aad
hlt
imul
jp
xchg
inc
emms
loopne
mov
pop
xchg
js
fwait
and
movs
(bad)
repnz
enter
mov
aam
and
out
add
iret
ja
jae
inc
mov
xor
(bad)
leave
faddp
popf
ret
xchg
cmps
repz
scas
ins
adc
mov
push
jl
outs
loop
fistp
int
jns
call
leave
pop
push
loopne
mov
lods
add
cli
test
dec
jmp
(bad)
add
xchg
pop
outs
out
or
mov
iret
mov
loope
movs
jge
out
std
nop
in
sbb
jl
outs
rcr
sti
dec
aas
lods
cdq
mov
mov
cmps
or
dec
mov
das
mov
cld
xchg
sbb
outs
mov
jge
test
cmc
xchg
dec
jecxz
sbb
dec
and
sub
cmp
sbb
mov
or
das
xchg
xor
inc
mov
push
dec
rcl
push
std
test
fadd
stc
inc
xor
jmp
fmul
pop
sub
pop
xchg
sbb
dec
or
cmp
nop
add
push
cmp
bound
xor
pop
in
cmps
mov
mov
mov
sub
sahf
loope
jne
test
xchg
and
ret
lods
out
test
addr16
jno
(bad)
cmp
cmp
push
das
mov
jnp
xor
mov
sbb
push
add
lods
into
and
aam
mov
bound
mov
and
or
jmp
scas
movs
sti
hlt
push
cmp
or
jmp
in
sub
stc
push
jmp
mov
jo
ror
adc
push
sbb
adc
test
sbb
pop
(bad)
mov
sti
dec
pop
lods
mov
push
sub
push
jmp
stc
aam
adc
push
call
call
ror
xchg
sub
adc
xor
and
and
movs
in
dec
daa
sub
data16
je
jb
sub
or
sub
in
imul
mov
mov
mov
loopne
add
shl
ror
inc
ret
mov
lods
sahf
mov
sbb
mov
fcomp
jb
jns
sbb
movs
nop
jb
pop
inc
std
fcmovu
xchg
xchg
push
adc
pop
scas
xor
push
retf
mov
adc
or
cmp
enter
push
out
xor
mov
rcl
retf
stos
push
pop
mov
cmp
mov
mov
mov
mov
inc
fist
aam
(bad)
std
fwait
mov
mov
inc
loope
push
sahf
sar
mov
sbb
out
aam
pop
xchg
loopne
mov
mov
out
mov
nop
ret
dec
or
std
fisubr
adc
hlt
inc
(bad)
loopne
out
dec
and
sti
sub
or
jne
bound
stos
bound
xchg
loop
std
aam
outs
rcr
xchg
nop
addr16
push
push
(bad)
xchg
xor
fwait
and
adc
cmps
mov
push
call
sub
mov
lock
sub
or
mov
dec
mov
xchg
mov
or
arpl
mov
mov
cmp
dec
test
or
mov
inc
ss
mov
and
es
mov
sub
enter
mov
mov
mov
sub
lea
movd
jecxz
push
or
inc
sub
ins
xor
and
mov
out
xchg
push
(bad)
in
inc
mov
(bad)
xor
or
xor
push
imul
push
popa
repz
pop
popa
in
xlat
dec
imul
xchg
mov
xchg
mov
jp
loope
fisub
and
repnz
jecxz
ret
add
mov
and
mov
and
push
jo
ss
push
int3
mov
adc
call
dec
cdq
mov
and
adc
cmp
mov
outs
in
pop
out
or
retf
cdq
adc
fs
dec
push
sub
std
mov
sbb
adc
pop
(bad)
jecxz
lock
pop
mov
mov
push
sahf
lock
inc
add
pop
mov
ja
enter
ds
(bad)
hlt
loop
loopne
cmps
add
loop
jle
dec
ffree
push
mov
dec
lds
call
mov
dec
ins
or
xchg
jo
cmps
test
sub
stos
or
mov
pop
in
xor
mov
dec
dec
cmps
add
in
fild
loop
push
mov
(bad)
aad
dec
pusha
mov
xchg
sti
jae
fldenv
fadd
aam
sti
add
jbe
adc
mov
inc
sbb
cmp
mov
mov
mov
mov
push
sar
xchg
xchg
xchg
dec
sbb
das
imul
repnz
sub
movs
lds
les
aas
popa
idiv
mov
pop
inc
fild
jp
movs
push
dec
stos
mov
daa
pop
sahf
jge
movs
pop
push
pop
mov
push
int3
cmp
cmp
xor
and
ret
adc
mov
cwde
jp
daa
imul
sub
mov
and
les
js
xor
cmp
fwait
push
dec
movs
call
inc
(bad)
and
cs
jae
sub
popf
mov
mov
std
shl
ins
leave
loope
mov
dec
call
xchg
pop
arpl
adc
xor
das
(bad)
call
rcr
jp
loop
cs
mov
push
mov
mov
ror
in
mov
push
(bad)
ja
mov
dec
xor
pop
inc
and
sub
(bad)
or
adc
ret
lds
and
inc
jb
xchg
je
addr16
imul
scas
sbb
icebp
aas
(bad)
out
stc
mov
xor
ror
sbb
and
movs
ja
repnz
xor
mov
dec
and
dec
out
js
push
imul
sub
movs
pop
fidiv
cmp
imul
pop
mov
dec
lods
gs
rol
mov
std
leave
sbb
or
cmp
pusha
or
popf
repnz
adc
clc
and
sub
mov
pop
mov
mov
and
pop
push
outs
std
jnp
pusha
jecxz
fwait
sbb
mov
jmp
movs
jg
or
lods
fsub
dec
cmp
sti
inc
inc
lods
push
and
add
jg
mov
pop
idiv
pop
lea
gs
sub
loopne
adc
xchg
(bad)
repz
mov
ss
pop
cs
and
mov
outs
or
aam
and
mov
scas
dec
test
sbb
and
inc
sub
movs
ret
fisttp
fwait
mov
imul
jl
mov
fnstsw
cld
xchg
jmp
and
ror
mov
push
repz
retf
movs
sub
in
cld
lods
int
or
imul
cdq
hlt
aaa
pop
jb
inc
push
in
ins
call
add
pop
xor
mov
js
cmp
pop
cli
mov
sub
shl
xor
sub
or
sub
cld
retf
(bad)
ror
jns
mov
mov
and
scas
sahf
pop
lods
aad
mov
jb
mov
lds
push
lock
jmp
and
add
jge
int
icebp
pop
push
add
stc
dec
pop
sub
stc
xchg
push
dec
(bad)
add
mov
ja
test
jb
xor
(bad)
fdivrp
add
shl
rcr
cmp
enter
mov
inc
mov
push
(bad)
div
imul
and
mov
sahf
add
test
ja
ins
aaa
int
cmp
mov
mul
scas
or
sbb
popa
and
lock
mov
push
jge
add
sub
call
xchg
out
push
add
push
(bad)
mov
sbb
xchg
scas
loopne
add
(bad)
jge
dec
and
jno
ins
dec
aas
pop
adc
dec
add
sti
retf
or
inc
test
mov
fstp
dec
pop
add
mov
lods
mov
push
scas
stos
call
add
into
jge
lods
rcl
jl
cld
jecxz
dec
inc
mov
cmp
mov
push
xor
in
(bad)
mov
and
mov
dec
sti
out
call
push
or
je
mov
fs
or
loopne
lods
scas
inc
sub
bound
sub
mov
addr16
xor
fstp
arpl
push
mov
int3
aaa
pushf
add
xchg
push
fldcw
enter
xchg
jbe
sub
push
xor
lods
jmp
cli
test
lods
add
cmp
jmp
test
sti
pop
pop
int3
sbb
scas
add
hlt
push
mov
enter
mov
popf
in
in
fcmovnbe
sbb
test
loope
in
mov
jae
xor
and
mov
mov
mov
push
adc
or
fs
push
js
sub
push
mov
in
mov
adc
shr
imul
and
jle
das
or
int3
pop
dec
sbb
(bad)
mov
loop
push
cld
rcl
sub
lds
jbe
aad
xchg
jg
imul
stc
push
scas
inc
or
pop
fsubr
iret
xor
dec
jle
fist
mov
imul
(bad)
test
xchg
lahf
es
cmp
es
in
mov
dec
and
retf
(bad)
mov
mov
mov
out
inc
fdivr
inc
fxtract
mov
fdivr
sbb
ficomp
mov
xor
std
xlat
cdq
in
inc
push
sbb
or
inc
aaa
push
jp
sub
sub
pop
jo
pop
fcom
fist
lea
retf
pop
js
pop
pop
fnsave
pop
jle
cmp
xor
pop
leave
add
mov
aad
test
xchg
cmp
cld
jle
push
sub
pop
lea
test
adc
fld
or
or
movs
popa
inc
addr16
jp
mov
test
fs
mov
aam
jo
pop
inc
out
in
xor
sbb
adc
pop
inc
add
outs
mov
sub
xchg
or
mov
imul
call
data16
fistp
jne
arpl
int
daa
xlat
sahf
bound
add
cmp
fadd
sbb
fld
ds
adc
mov
sbb
or
jo
cdq
ds
aaa
bound
push
nop
in
jbe
call
sti
mov
push
jnp
xchg
call
ins
int
iret
outs
ss
(bad)
retf
jg
aam
imul
fdiv
fcomp
or
cmp
pop
pop
mov
cmps
dec
sbb
push
add
stc
jno
xlat
fmul
cmp
jne
jge
and
dec
popf
nop
call
pop
and
(bad)
fcmovu
dec
sbb
ja
and
outs
aam
jne
xor
inc
cli
gs
cdq
retf
(bad)
pop
lahf
jmp
icebp
mov
in
and
inc
inc
push
add
xlat
sub
repz
pop
cmp
add
ins
sbb
loope
adc
repz
and
das
jmp
popf
sub
addr16
call
xor
xchg
inc
mov
jno
ja
xchg
(bad)
jo
push
dec
pop
and
(bad)
xchg
adc
pop
outs
fs
fdiv
lahf
int3
pop
and
jb
imul
mov
mov
or
std
or
cmp
or
imul
mov
hlt
mov
xchg
mov
adc
xor
lea
add
xchg
movs
push
out
cmps
and
fsub
movs
xchg
movs
xor
shl
addr16
push
mov
mov
retf
out
sbb
push
pusha
mov
xchg
xor
out
je
sub
dec
shl
jge
imul
or
pop
jp
arpl
jecxz
add
adc
cmp
push
jmp
ret
sahf
iret
nop
push
add
inc
mov
lock
mov
pushf
jmp
mov
and
pushf
xor
lock
or
cs
scas
inc
lock
push
mov
lock
and
sahf
repz
imul
fisubr
jle
jno
add
fldl2e
(bad)
xor
dec
push
popf
sti
fstp
(bad)
(bad)
in
jmp
jns
(bad)
loopne
js
cmp
inc
sar
xor
inc
xchg
mov
pop
xchg
cmp
ss
xchg
push
sti
mov
dec
mov
(bad)
adc
frstor
fcomp
cmp
adc
add
imul
sahf
mov
clc
push
or
mov
ins
out
xchg
add
jb
dec
inc
sbb
das
sub
add
lods
xchg
mov
xchg
add
jmp
cmp
mov
repnz
clc
mov
dec
xor
stc
repz
inc
stos
cmp
movs
mov
xor
call
cs
cmp
push
mov
call
enter
jns
out
dec
mov
cmp
aam
addr16
pop
gs
lods
sbb
inc
xor
xor
sbb
cmp
out
sbb
mov
and
fst
xor
out
leave
sti
push
int
cmp
mov
push
pop
scas
das
inc
adc
rcr
frstor
mov
imul
je
fmul
in
dec
mov
sub
inc
sbb
and
ins
aam
lds
mov
(bad)
mov
sbb
jecxz
out
(bad)
and
in
jp
shr
dec
jle
cmps
cli
adc
mov
gs
xchg
in
inc
push
jl
cmp
bound
or
mov
mov
xchg
aad
and
pop
inc
push
pop
xor
out
jno
and
mov
sub
movs
aad
aaa
sbb
rol
lea
sar
das
push
ret
pop
test
push
bound
add
sti
rcl
mov
clc
scas
rol
or
imul
loop
(bad)
xor
mov
xchg
ret
out
shr
adc
packuswb
in
out
repnz
call
pop
or
inc
pop
mov
call
xchg
xor
ror
pusha
arpl
mov
lock
add
jl
outs
sbb
lods
and
dec
int3
int
pusha
push
jno
jne
inc
repnz
pop
pop
or
scas
int
cmps
cwde
aaa
inc
or
stos
mov
lods
dec
loop
dec
test
lods
sbb
fs
or
imul
adc
scas
and
cmps
nop
ja
mov
ficom
cmps
repnz
push
ret
push
mov
xor
arpl
push
loop
cwde
adc
jno
pop
and
or
sub
push
sbb
cmp
dec
outs
stos
add
inc
in
mov
fild
jne
or
(bad)
mov
sub
and
ss
mov
sbb
xchg
mov
push
popa
loope
stos
movs
mov
mul
cmp
mov
mov
cmps
jno
adc
jmp
adc
pusha
add
mov
mov
cdq
jg
out
inc
sbb
rcl
or
bound
(bad)
jnp
and
sub
mov
cmps
jge
inc
jmp
push
ror
rcl
popf
or
popa
div
jne
ret
dec
movs
into
retf
fcmovnbe
mov
jge
(bad)
iret
and
test
test
dec
cmp
icebp
and
sub
mov
mov
test
imul
mov
push
psllq
and
push
js
or
xchg
inc
inc
movs
and
lds
in
inc
inc
sbb
mov
sbb
or
pop
mov
fwait
call
push
push
adc
pop
add
xchg
in
hlt
mov
cmp
fsub
(bad)
daa
inc
call
mov
leave
hlt
or
adc
jns
fwait
mul
dec
pop
movsx
icebp
push
push
ret
pusha
inc
stc
sahf
inc
push
sbb
in
lods
lods
sar
imul
dec
aad
stos
std
les
cmc
std
fwait
cdq
mov
stos
dec
push
dec
jns
pop
lea
inc
add
pop
stos
xchg
(bad)
in
inc
in
jns
jl
push
lfs
inc
cdq
mov
mov
push
mov
add
cmp
(bad)
or
pop
les
rol
popa
ficom
in
jp
fcmovne
es
cs
je
in
jle
push
mov
mov
cmc
mov
hlt
jmp
sbb
daa
jno
mov
inc
inc
jl
push
fist
jmp
sahf
test
mov
and
and
call
leave
mov
(bad)
sbb
dec
sub
jge
cmps
mov
or
psubusw
and
jo
test
(bad)
js
xor
out
adc
xchg
or
int3
cld
hlt
aad
adc
daa
mov
mov
push
jns
scas
push
dec
jl
add
sub
adc
cs
(bad)
cmp
inc
mov
jne
push
xchg
cdq
push
sbb
rol
movs
in
iret
rcl
inc
ror
leave
push
shl
loopne
cmps
adc
sbb
cs
adc
fdecstp
jle
and
mov
out
test
cmp
add
test
pop
(bad)
pop
test
push
xchg
cmp
jp
push
in
popf
mov
fcom
push
push
aam
fwait
loopne
ret
xlat
dec
push
or
stos
mov
jno
pop
ret
sahf
int3
lds
xchg
pushf
test
adc
shl
adc
icebp
push
fwait
in
ins
in
int
scas
js
xor
dec
jge
push
mov
add
jle
movs
inc
xchg
repnz
pop
add
jnp
test
data16
lea
xchg
inc
pop
cs
cdq
lea
fstp
mov
or
aas
fild
or
aad
dec
sbb
imul
ret
popf
or
lods
push
jo
mov
fsubr
retf
loopne
cmp
jmp
fcmovu
das
call
cmc
aas
xchg
mov
out
add
mov
test
push
pop
aam
repz
xor
pusha
push
adc
jbe
in
push
sbb
pop
and
cmp
push
inc
std
adc
jae
sub
jbe
sub
lods
stos
stos
and
jmp
repz
xor
mov
es
sub
ficomp
loopne
enter
or
ret
sub
js
push
sbb
sub
addr16
and
xchg
or
gs
gs
fdivr
rol
xor
test
(bad)
lea
popf
xor
or
stos
or
loopne
cmps
ret
aad
lods
or
loopne
cmp
std
hlt
cmc
rcl
leave
cmp
xchg
gs
outs
rol
sbb
xchg
fcomp
sub
dec
sbb
rcr
xor
pop
into
loop
rcr
(bad)
test
test
mov
(bad)
and
xchg
add
stc
aad
popa
out
adc
aas
imul
or
sub
dec
mov
cli
(bad)
rcl
in
xchg
pop
test
sar
dec
dec
jb
mov
pop
cdq
ins
fistp
cmp
enter
xlat
inc
pop
sub
aad
shld
lahf
sub
adc
xchg
xor
push
cmp
and
ss
or
ror
jno
cmp
test
fcmove
lds
clc
or
fptan
xchg
mov
ret
jne
push
jbe
dec
xchg
pop
jecxz
push
repz
xor
xchg
mov
adc
xchg
ja
fidivr
gs
sar
inc
jmp
mov
fcom
dec
repz
jecxz
lea
or
jb
dec
stos
xor
movs
cmp
scas
jae
xor
add
dec
test
pop
mov
add
mov
xchg
cmp
xchg
aad
jb
fcomp
icebp
mul
mov
cmc
fwait
sub
mov
mov
add
inc
mov
pop
sbb
push
jnp
adc
in
jmp
fdivr
or
leave
push
inc
movs
and
stos
sbb
arpl
push
xlat
in
adc
xlat
movs
sub
stos
das
lea
pop
adc
or
lahf
add
pop
mov
cmp
push
out
mov
pop
xor
inc
pop
das
adc
test
lds
test
cdq
jmp
je
pop
ja
pop
xchg
(bad)
jno
adc
xor
neg
sar
in
repnz
rcr
xor
sub
adc
or
xor
pop
daa
out
jg
lahf
xchg
jl
mov
add
and
test
in
repnz
(bad)
dec
test
test
mov
jo
adc
mov
mov
retf
pop
mov
add
xchg
sub
push
or
scas
lods
pop
push
dec
dec
loope
sub
sbb
push
dec
sahf
dec
jle
push
xchg
inc
push
or
jo
fld
pop
add
fs
ret
inc
in
xchg
mov
repnz
in
clc
loop
push
std
test
rcl
cdq
pop
jns
cmps
adc
or
ja
test
lods
fadd
adc
stc
and
fmul
cmp
pop
xchg
xor
jo
push
sub
out
mov
lahf
pop
sbb
cmp
mov
(bad)
call
fcom
jmp
xchg
push
icebp
mov
cmp
jg
mov
ins
xchg
mov
ja
xchg
push
and
rep
lahf
cmp
out
sbb
jne
cld
xchg
dec
jmp
retf
xchg
loope
mov
adc
call
fnstenvw
pop
out
iret
xchg
ficomp
jge
inc
or
xor
int3
xor
and
imul
neg
es
cmp
push
sbb
rcr
inc
retf
dec
sar
jns
int3
cmp
jmp
int3
sub
xchg
iret
pop
(bad)
lods
jg
int3
xchg
sub
inc
in
mov
std
gs
push
jbe
adc
retf
push
sub
sbb
or
inc
not
loopne
mov
int
xor
adc
jo
mov
test
fcomi
movs
shr
and
out
adc
xlat
fcmovnbe
lds
xlat
repz
cwde
add
mov
add
pop
rol
xchg
ret
icebp
pop
aaa
fimul
jge
cmps
int
adc
push
lahf
xor
inc
xchg
sub
adc
sti
in
pop
jae
push
jae
pusha
mov
popa
out
clc
std
mov
add
stc
cmp
adc
or
aaa
xor
pop
iret
jg
cwde
push
sbb
popf
sahf
push
aam
inc
inc
aas
mov
sbb
and
and
sub
sub
pop
jle
mov
and
ror
adc
mov
int3
leave
mov
cli
retf
inc
and
mov
dec
adc
fisubr
jg
inc
jp
mov
jle
(bad)
adc
(bad)
mov
fcomp
out
mov
(bad)
sub
out
icebp
pusha
stos
mov
scas
jne
es
add
inc
outs
cs
sbb
mov
ins
cmc
sti
and
xor
mov
or
push
push
pop
sbb
mov
gs
mov
(bad)
cdq
pop
das
dec
clc
sub
mov
(bad)
cld
call
pop
out
sahf
ret
cmp
jge
jbe
dec
in
sbb
fimul
sub
jp
mov
out
add
fidivr
inc
out
into
xchg
retf
jae
mov
adc
cld
jecxz
inc
fidiv
sbb
pop
aas
nop
inc
pop
add
push
data16
or
nop
adc
(bad)
xlat
mov
push
pop
cmps
mov
xchg
xor
cmps
icebp
icebp
jae
push
sbb
or
fwait
shr
push
leave
dec
inc
inc
push
popf
xchg
in
movs
mov
ss
cmp
mov
cmc
jl
imul
daa
ja
dec
cmp
pop
fidiv
pop
push
mov
sbb
adc
hlt
cmp
cmp
pusha
mov
(bad)
dec
sub
xor
ds
jl
add
rol
dec
icebp
mov
cli
mov
test
add
jle
inc
or
xor
cwde
outs
pop
dec
or
push
xchg
fdivr
and
mov
sbb
dec
and
fwait
xchg
loopne
pop
std
jmp
sub
inc
rcl
adc
mov
bound
or
loopne
(bad)
xchg
stos
sbb
sub
(bad)
sub
mov
mov
bound
sar
push
repnz
sbb
inc
or
ds
pop
jge
loopne
or
rcr
in
mov
and
repz
lods
push
stos
clc
xchg
fistp
popa
xchg
sahf
or
sub
pusha
lock
test
cs
loope
push
arpl
std
imul
inc
inc
call
mov
inc
sub
pop
jno
jae
jb
sub
lock
push
mov
addr16
dec
pop
cmp
iret
ja
outs
xlat
js
mov
scas
mov
pop
sbb
(bad)
mov
cld
retf
out
shl
and
xchg
add
call
mov
jge
sub
test
push
xchg
lds
ja
sub
pusha
cdq
mov
xchg
lds
push
imul
outs
push
and
jbe
ret
jb
loop
jns
fidiv
repz
and
xchg
mov
inc
fst
pop
add
push
packssdw
stos
dec
inc
repz
jg
test
mov
arpl
sub
je
fist
pop
scas
inc
xor
js
xor
mov
mov
xor
in
ja
xchg
out
cmc
mov
mov
xlat
je
fwait
jl
jmp
mov
xchg
jl
sbb
aam
ja
fstp
ret
loopne
and
cdq
div
mov
outs
lods
add
inc
push
pushf
(bad)
or
sar
sub
mov
or
jp
mov
mov
loop
inc
iret
push
mov
mov
dec
push
mov
fisub
pop
xchg
adc
or
pop
imul
leave
fwait
sbb
sbb
loope
cwde
repz
pop
mov
push
sub
scas
adc
into
es
addr16
mov
les
outs
mov
cmp
sahf
sbb
daa
mov
pop
(bad)
rcr
mov
clc
mov
push
sbb
mov
mov
sub
cmp
pusha
pop
jno
clc
cmp
loopne
mov
sbb
cdq
das
sub
nop
test
sub
bnd
push
inc
add
sub
out
(bad)
adc
shl
dec
(bad)
dec
sbb
ret
(bad)
sub
loope
ja
cmp
retf
loope
jle
aam
jp
and
xchg
inc
pop
addr16
cmp
imul
add
rcl
push
jle
std
jbe
add
(bad)
pop
mov
vpavgb
iret
add
icebp
mov
int
lods
mov
retf
enter
mov
hlt
mov
stos
(bad)
pop
mov
cmp
prefetch
or
pop
popa
(bad)
sbb
fwait
jp
ds
add
adc
inc
sub
mov
jge
stc
jae
push
xor
xor
repnz
push
daa
lods
lock
xor
ja
call
dec
int
mov
xor
jno
xchg
es
ds
xchg
cmp
mov
dec
dec
inc
cs
ins
data16
hlt
mov
inc
add
sub
imul
repz
xchg
pushf
mov
xor
add
push
sub
(bad)
pop
xor
push
xor
xor
xchg
aad
sub
sub
xchg
movs
pop
cli
retf
js
(bad)
xor
cdq
xor
jb
xor
enter
cmp
stc
ss
and
pushf
inc
test
dec
push
jl
cs
dec
outs
add
mov
or
fwait
cld
push
cmc
fist
xor
xor
inc
xchg
aaa
das
mov
xchg
movs
fwait
xchg
ins
pushf
and
jmp
ins
jae
cmp
mov
or
outs
ror
mov
ss
ror
and
dec
fstp
mov
ins
cmp
push
inc
pop
adc
retf
jmp
xor
sbb
pop
xchg
pop
lahf
mov
mov
mov
out
and
and
aaa
mov
jle
pop
mov
pop
push
cmp
fidivr
cli
stos
cmp
jns
inc
pop
enter
mov
outs
fimul
pusha
sub
push
loope
sahf
mov
imul
mov
retf
cmp
ins
xor
jne
and
(bad)
cmp
push
or
test
mov
push
sub
pop
xchg
cmp
repz
dec
ficomp
sbb
mov
pop
loop
pop
sub
call
inc
icebp
jmp
lds
cmp
clc
and
mov
adc
add
mov
movs
cmp
ss
push
push
loopne
fcmovne
addr16
sbb
sbb
out
cdq
pop
mov
movs
outs
rol
rol
test
mov
add
push
xor
jge
xchg
xor
loopne
outs
adc
pcmpgtw
add
mov
ret
mov
mov
jge
mov
jnp
xor
mov
rol
mov
pop
les
les
jnp
sbb
xor
into
stos
(bad)
mov
dec
mov
mov
mov
mov
jne
test
adc
dec
sbb
fsubr
mov
and
mov
arpl
dec
mov
inc
pop
jmp
mov
imul
add
scas
clc
fldcw
inc
pop
std
cmp
push
xlat
stos
pop
mov
push
lea
out
dec
es
fucomi
cmp
jns
and
mov
retf
xor
pop
mov
dec
dec
inc
ja
push
mov
imul
jnp
inc
mov
hlt
neg
push
cmp
dec
daa
cs
imul
push
(bad)
and
std
push
outs
pushf
lods
pop
aad
sub
sbb
ror
adc
ja
inc
adc
and
je
inc
cmp
les
(bad)
mov
add
cmp
lock
push
clc
je
scas
sahf
cmp
in
xor
jne
mov
or
mov
retf
adc
sbb
imul
mov
fsubr
(bad)
(bad)
pop
inc
sbb
dec
daa
cmp
je
in
pusha
push
sub
cmp
aad
inc
xor
dec
int
mov
push
mov
inc
or
dec
es
xlat
push
inc
inc
repz
cmp
cmc
fcomp
push
cmps
jecxz
arpl
pop
lahf
imul
pop
shr
loope
xchg
sub
xchg
dec
pop
lods
call
stos
fcmovbe
mov
xchg
lahf
std
jge
jecxz
retf
jae
dec
xchg
fstp
adc
ja
mov
(bad)
int
cld
dec
inc
adc
int3
cmps
dec
or
push
cmp
xor
(bad)
fiadd
movs
cmps
(bad)
xor
aaa
xor
and
out
cli
inc
mov
xlat
movs
add
aaa
jle
cmp
hlt
mov
icebp
dec
call
jle
mov
lds
jge
mov
outs
xor
xchg
push
aam
stc
jmp
sbb
xchg
lds
aam
lods
retf
inc
xchg
aaa
ds
fstp
cmps
les
adc
jl
lods
adc
cmp
mov
mov
dec
in
cmp
cmps
sub
cmp
sbb
pop
leave
pop
cmp
push
xlat
pop
call
mov
cli
ret
pushf
pop
mov
xor
jns
out
in
in
cmp
and
in
push
jp
aaa
in
jnp
jp
cmps
enter
std
or
xor
aas
sbb
das
add
fstp
push
cmp
cmps
mov
sub
pushf
jmp
inc
aad
aaa
inc
and
in
jnp
(bad)
add
mov
mov
xor
out
in
or
push
mov
jge
shr
in
(bad)
adc
(bad)
cmp
pop
xchg
mov
push
int3
into
pop
test
call
outs
cmps
sub
pop
fs
pushf
mov
dec
ficomp
mov
stos
aas
xchg
(bad)
pop
ror
rcr
inc
push
jnp
sub
inc
lahf
std
cli
sub
add
sbb
cmc
dec
repz
push
mov
jmp
(bad)
mov
addr16
and
int
adc
fisub
ret
or
out
sbb
sbb
hlt
inc
mov
pushf
mov
in
(bad)
jp
push
inc
and
outs
jmp
out
xchg
xchg
inc
inc
mov
sbb
stc
ds
mul
jb
and
mov
ficom
mov
(bad)
shl
div
mov
(bad)
cdq
add
mov
mov
jbe
test
aad
or
sbb
mov
js
or
hlt
enter
outs
push
jns
push
sar
jge
fwait
inc
movs
jp
data16
clc
addr16
fwait
xchg
dec
scas
push
ret
xchg
dec
push
push
jp
test
sbb
dec
(bad)
pop
js
and
pop
cwde
inc
lahf
inc
adc
shr
stos
movs
retf
loopne
and
bound
push
push
and
jle
pop
sub
ret
lods
scas
or
loop
nop
jnp
mov
cmps
jecxz
js
pop
add
(bad)
data16
sbb
mov
shl
and
and
(bad)
cld
retf
xor
loope
push
xchg
push
loop
jne
push
leave
mov
jbe
or
les
inc
cmps
aam
mov
into
inc
ja
or
cmps
cmps
or
and
int
push
je
mov
mov
call
mov
dec
or
inc
pop
mov
fidiv
inc
cmp
xlat
add
jmp
movs
out
push
sub
sbb
ret
dec
inc
inc
xor
ficom
xchg
movs
or
fs
inc
sbb
repnz
outs
pop
fs
or
and
movs
jge
pop
sub
sub
(bad)
out
inc
mov
stos
not
in
cwde
mov
mov
push
mov
cwde
cmp
aam
cmc
mov
mov
mov
cmp
mov
or
rol
push
xor
jmp
popf
pop
pop
xchg
imul
aaa
retf
aam
mov
into
fild
xchg
in
xchg
or
imul
out
ins
jp
lds
mov
push
jae
inc
sbb
movs
add
xchg
sub
xchg
mov
rcr
pop
sub
icebp
cwde
xchg
ja
ror
dec
jge
push
fstp
jb
xchg
xchg
push
jo
cmps
fcomi
shr
adc
add
arpl
jge
nop
test
and
inc
sbb
mov
ss
mov
shl
dec
outs
aad
sub
shl
xor
test
push
mov
add
xor
xchg
aam
loop
sub
mov
out
jne
fst
add
mov
int3
or
sub
dec
adc
cmps
jno
add
hlt
xor
inc
mov
inc
sub
dec
je
retf
push
xchg
pop
imul
data16
ins
enter
jmp
aad
add
adc
jl
pop
out
loopne
dec
(bad)
sub
mov
stos
(bad)
cmp
xchg
out
js
imul
ret
push
adc
cmp
xlat
mov
cs
sub
or
outs
pop
mov
cmp
mov
xchg
pusha
ficomp
outs
push
pop
cs
outs
jbe
fs
mov
mov
lahf
es
lea
das
inc
sub
shr
mov
jg
pop
outs
and
add
mov
(bad)
sbb
mov
aaa
popa
iret
jno
inc
and
dec
mov
in
stos
shr
add
xor
arpl
arpl
movs
int3
cmps
mov
fld
mov
add
inc
push
(bad)
mov
cdq
ins
add
mov
fwait
dec
fbstp
cmp
push
sub
cmp
movs
cld
mov
xchg
stc
pushf
rcl
mov
lahf
adc
jle
inc
ds
push
cmp
dec
mov
movs
mov
test
stc
(bad)
jmp
loope
int3
pop
out
sub
pop
inc
pop
ss
and
dec
push
sbb
xchg
dec
(bad)
sub
hlt
mov
sahf
sub
sub
sub
mov
mov
(bad)
jecxz
sub
pop
and
mov
add
fsub
inc
outs
xchg
mov
shr
int3
mov
call
add
out
sub
lock
mov
shr
pushf
push
jnp
mov
shl
lahf
rol
(bad)
movs
repnz
mov
(bad)
call
mov
clc
push
data16
push
mov
jmp
mov
mov
sbb
enter
mov
cld
sub
fs
nop
jmp
movs
or
sti
sub
ins
dec
std
inc
inc
mov
cmps
pop
or
xlat
push
jp
sbb
sti
add
(bad)
mov
in
int
add
push
movs
dec
ret
jmp
mov
pushf
cmp
xor
add
jo
jae
pop
fcmovnu
mov
mov
and
pop
shl
test
aam
(bad)
dec
mov
sbb
pop
add
(bad)
push
push
dec
inc
lds
jmp
lock
and
mov
jnp
jb
and
mov
pop
adc
mov
gs
mov
xor
mov
sbb
cmp
mov
jne
aaa
or
repz
sub
sub
fadd
aas
mov
xchg
in
pop
xor
stos
add
add
pop
jno
or
clc
sub
mov
adc
iret
es
mov
xchg
xor
rcl
pop
adc
repnz
addr16
mov
out
js
loope
call
sbb
xor
push
xchg
push
cmp
sub
or
sahf
mov
outs
jge
jle
push
sbb
cmp
push
adc
imul
fwait
out
shl
ret
stos
mov
sar
daa
add
inc
cld
or
xchg
jns
xor
pop
aam
nop
xor
daa
sbb
dec
ret
mov
shl
stc
adc
call
nop
adc
int
dec
xchg
movs
mov
mov
test
bound
lahf
push
mov
mov
xchg
xlat
push
sub
mov
lock
mov
push
addr16
add
xor
inc
outs
pop
stos
mul
jno
push
push
ror
aad
mov
bound
mov
fild
mov
sar
xlat
mul
sbb
push
sbb
push
(bad)
jns
xchg
xchg
jle
loopne
sub
add
rcl
sti
jns
xchg
add
stc
sahf
inc
mov
je
ds
pop
das
mov
leave
jae
sbb
xlat
pcmpgtb
(bad)
xchg
mov
mov
add
push
ror
jo
rol
sub
neg
fimul
mov
imul
xlat
div
stc
jnp
sub
mov
add
arpl
push
psubusb
jp
(bad)
push
sbb
jb
retf
(bad)
popa
jmp
jno
inc
iret
js
dec
add
add
xchg
and
dec
loope
aam
pop
ja
push
fstp
not
(bad)
repz
call
jnp
mov
xor
mov
cmps
sti
(bad)
mov
cwde
call
mov
shl
sbb
fdiv
or
daa
push
xchg
in
icebp
or
cmp
push
test
mov
fistp
sub
cmp
mov
add
xchg
scas
or
sahf
imul
das
xchg
data16
ret
and
sub
inc
stc
leave
sub
cmc
jns
sub
out
stos
pop
das
push
inc
arpl
pop
mov
ja
push
fimul
scas
je
fidivr
push
inc
(bad)
adc
mov
jae
pop
pop
mov
jno
jmp
xchg
ins
mov
xchg
in
sbb
into
lock
and
jle
sbb
cwde
mov
retf
push
mov
jecxz
aad
cmp
mov
pop
dec
inc
pop
inc
pusha
push
mov
or
jb
bnd
imul
mov
in
sbb
ror
sahf
inc
sub
mov
mov
and
mov
aaa
enter
xor
mov
test
mov
dec
fadd
xchg
mov
and
jmp
push
push
mov
repz
ror
loope
inc
dec
add
jne
dec
dec
bound
inc
int
jnp
(bad)
push
mov
aad
sbb
and
adc
cli
jmp
jno
lahf
push
or
add
jne
addr16
jbe
pop
inc
mov
sub
jl
xor
and
aam
pop
push
outs
cmp
dec
ret
addr16
idiv
mov
inc
jecxz
jo
push
jmp
fidivr
add
dec
aam
(bad)
(bad)
xchg
sbb
repnz
mov
(bad)
gs
data16
enter
pop
sub
stc
enter
daa
out
not
xchg
and
mov
rcr
in
cmp
in
xor
or
and
mov
xchg
mov
mov
sbb
lds
mov
cld
sahf
packsswb
lahf
int3
cmp
sub
stos
jae
and
pop
(bad)
fstp
or
or
push
sbb
mov
mov
cwde
stos
aaa
imul
xor
mov
(bad)
sub
cld
stos
cmp
dec
mov
add
xor
mov
scas
(bad)
jg
outs
dec
mov
int3
cli
jg
dec
dec
into
sub
push
jmp
dec
lds
and
fld
cmp
(bad)
mov
cmps
not
or
pop
bound
xchg
pop
(bad)
outs
mov
adc
btc
sub
xlat
in
cmp
ror
les
mov
and
les
mov
rcr
stos
jae
cld
aad
sub
fidiv
xor
mov
xchg
xlat
mov
jmp
mov
jecxz
out
or
sahf
xor
fmulp
mov
shl
iret
mov
xchg
pop
sbb
mov
mov
fisttp
retf
sbb
mov
and
jg
sub
pusha
sbb
int
jns
mov
clc
add
lahf
repz
jl
sbb
mov
fadd
retf
sbb
xchg
and
imul
and
dec
xlat
mov
stos
and
mov
add
icebp
repz
xchg
pop
fiadd
adc
pop
fcomp
add
mov
jecxz
cmps
cld
inc
cwde
mov
and
into
inc
jmp
cmp
call
scas
jae
pop
and
mov
(bad)
cld
xor
nop
adc
add
adc
ja
mov
fmul
cli
jns
outs
pop
mov
sti
jmp
push
dec
and
push
push
gs
pop
enter
dec
ror
push
xchg
xlat
int
and
retf
in
push
inc
push
ins
cmp
xchg
inc
iret
aas
add
fadd
retf
xor
and
jno
cdq
bound
shr
mov
push
jecxz
imul
dec
pop
aam
add
icebp
in
in
enter
pop
adc
retf
jge
sbb
xor
adc
hlt
push
push
xor
add
aam
add
nop
iret
leave
rcl
or
inc
aad
and
mov
xor
movs
jle
fldz
or
ins
stc
aam
shl
or
fidivr
in
xlat
in
or
gs
cmp
imul
jno
push
pop
sti
rol
imul
lods
out
stos
xchg
jl
mov
pop
shr
popf
xchg
xchg
dec
scas
movs
mov
sub
lods
mov
iret
cld
mov
dec
xor
loope
pop
retf
rcl
xchg
in
into
mov
test
into
and
cmp
adc
sub
push
adc
adc
movs
in
mov
fisub
cmp
jmp
enter
and
mov
into
xor
lods
sbb
loopne
test
out
iret
imul
retf
outs
sbb
cmp
jo
je
fld
adc
arpl
movs
add
shl
mov
dec
dec
cmc
xchg
arpl
icebp
cmp
idiv
sbb
mov
mov
aas
add
or
mov
popa
jo
cmc
stc
data16
xchg
jns
test
mov
add
mov
inc
and
cmc
push
movs
sub
fsubrp
inc
jmp
loope
outs
fidiv
sbb
push
push
pop
(bad)
pop
mov
jno
pop
or
add
(bad)
das
outs
xchg
or
adc
scas
xlat
jns
push
pop
retf
(bad)
jo
xor
aaa
mov
push
in
push
pushf
jnp
je
sub
pushf
mov
xchg
inc
add
cmp
inc
int
cmps
fild
push
xchg
pop
push
push
push
and
je
bound
sti
cld
jecxz
mov
call
push
push
into
out
and
imul
sbb
mov
pop
push
dec
mov
add
je
lahf
jae
addr16
pusha
test
sub
int3
push
add
xor
jmp
jb
inc
mov
push
stc
rcl
das
inc
mov
cmp
rcl
push
xlat
int3
lahf
outs
ds
jae
mov
xchg
shr
mov
sar
xor
pop
pusha
mul
pop
stos
xor
mov
mov
sub
mov
retf
mov
xchg
jle
frstor
cmc
jge
push
push
jle
xchg
inc
mov
pop
push
cmps
jge
cmp
retf
sbb
inc
jecxz
jo
mov
into
ror
cld
mov
inc
gs
pop
push
xor
xor
inc
xchg
inc
add
jg
enter
mov
mov
sbb
out
cdq
push
sbb
out
js
jl
mov
ror
fwait
xchg
xchg
into
jecxz
mov
(bad)
rol
ror
pushf
cmp
push
push
mov
fbld
and
and
jmp
adc
daa
lock
cmp
push
mov
xor
int3
mov
sub
test
push
sbb
repnz
jae
or
stc
inc
pop
aad
pushf
sub
mov
(bad)
add
jno
(bad)
iret
pop
repz
cmc
repnz
jnp
scas
push
cmps
inc
dec
add
popf
sbb
jmp
repz
push
int3
test
mov
popa
sbb
(bad)
ss
ds
cdq
adc
repz
xchg
in
sub
repnz
pop
out
jmp
jo
xor
inc
stc
cmps
pusha
test
mov
xchg
xchg
(bad)
push
sub
pop
mov
gs
dec
ins
dec
int3
inc
pop
cmp
imul
or
in
aad
mov
aaa
lods
dec
sbb
push
jne
test
out
push
jo
fwait
xor
mov
and
or
jne
jns
pusha
or
xchg
nop
arpl
int
addr16
cwde
fs
(bad)
jl
or
sub
test
cwde
movs
add
pop
pop
push
popf
xchg
and
int
lds
adc
xor
out
call
add
fcmovnb
push
mov
adc
add
mov
jb
es
in
fcom
loopne
jg
std
adc
push
(bad)
mov
sahf
mov
mov
push
cmp
xadd
cdq
shr
pop
test
jno
out
cmp
jo
sbb
setp
push
push
or
imul
popa
add
cmps
add
mov
pop
daa
shl
and
push
cmp
mov
mov
sub
(bad)
cmp
fs
mov
cmc
cs
jmp
xchg
jno
jns
ret
js
xchg
(bad)
(bad)
enter
lods
mov
pusha
std
into
push
out
icebp
ret
retf
pushf
scas
outs
test
iret
pop
dec
shl
add
shl
imul
jbe
adc
pop
xchg
pop
pop
sbb
inc
enter
dec
rcl
loopne
inc
or
or
inc
loope
jmp
fdiv
call
(bad)
test
mov
pop
xchg
ret
push
cmps
shl
push
mov
test
sbb
into
arpl
pop
jo
or
les
mov
mov
arpl
or
rol
scas
or
pop
adc
cmp
call
cmps
push
dec
push
into
es
ror
pop
sub
adc
cdq
nop
inc
scas
sbb
(bad)
push
sahf
xchg
std
sbb
xchg
cmps
jmp
jno
test
les
xchg
inc
scas
add
repz
in
xchg
stos
mov
clc
mov
dec
movs
icebp
or
in
mov
into
mov
and
shr
sub
add
and
bound
xchg
or
push
and
xchg
cdq
mov
adc
imul
mov
mov
pop
rol
jge
(bad)
cmp
js
test
imul
inc
lds
aad
ficom
jmp
ret
aad
push
loope
cwde
sub
out
shl
xchg
je
iret
das
fsubp
lock
les
ror
(bad)
aad
out
or
xor
daa
test
inc
bound
jmp
lahf
(bad)
out
add
dec
lods
sub
aad
psubq
enter
call
mov
sub
imul
not
pop
call
cmps
test
ret
retf
das
sahf
inc
ret
sbb
mov
cld
dec
jp
clc
fidiv
inc
xchg
adc
mov
xor
inc
pushf
aas
sbb
mov
fldcw
sub
pop
rcl
shl
in
cdq
int3
es
mov
xchg
inc
test
out
mov
mov
lahf
adc
xor
jo
jp
mov
inc
fs
bound
add
dec
mov
stos
fs
rcr
inc
imul
xchg
mov
mov
xchg
(bad)
ja
lds
and
push
mov
adc
lods
push
or
jo
aad
sub
movs
or
push
inc
cmp
loopne
dec
xor
jo
stos
js
xor
ds
imul
pusha
xor
out
enter
dec
idiv
pop
lods
mov
cmps
lahf
lods
pop
loopne
int
shr
or
hlt
stc
inc
fsubp
out
js
(bad)
or
dec
mov
and
call
iret
sub
push
xchg
fsubr
nop
dec
cmps
xchg
sbb
cmp
cmp
pop
add
pop
mov
sub
pop
shr
fadd
push
jns
mov
dec
push
push
add
inc
pop
(bad)
imul
fs
inc
pusha
mov
cdq
cmp
inc
and
mov
or
lock
daa
jbe
fs
rcr
popa
mov
push
(bad)
repz
jl
mov
js
shl
daa
jbe
xor
in
shl
loope
movs
sub
sub
jnp
cwde
push
sbb
retf
test
and
retf
jo
and
sti
retf
leave
push
xchg
xchg
and
ins
mov
ss
dec
sub
in
aam
popa
push
stc
jge
cmp
mov
mov
loopne
sbb
inc
js
pop
pushf
inc
or
or
clc
jne
add
inc
sbb
js
or
fld
add
jo
jnp
dec
sbb
stc
nop
cmp
pop
xor
int
rcl
mov
add
not
fdivr
xlat
iret
cmp
jle
push
out
out
loope
int3
lea
retf
xor
ret
mov
xor
pop
add
xor
sbb
xchg
jo
add
popf
jle
adc
in
out
pop
mov
dec
cmp
loop
pop
(bad)
dec
dec
dec
jne
aas
mov
mov
inc
popa
xor
mov
test
xchg
xor
xor
iret
out
test
ficomp
out
pushf
loopne
(bad)
dec
sahf
gs
add
mov
pop
push
push
lock
xor
mov
lods
sbb
xchg
out
mov
add
lock
movs
ja
cmp
sub
aaa
push
inc
(bad)
bound
and
outs
sbb
in
cwde
cmp
popa
jmp
out
cmps
repnz
call
jl
arpl
aas
jnp
or
scas
dec
mov
xchg
paddsw
imul
push
xchg
xor
cmp
add
in
adc
stos
mov
jmp
jecxz
scas
imul
sub
or
(bad)
mov
aad
pusha
comiss
mov
cmps
outs
mov
cli
xchg
outs
xchg
push
mov
or
movs
ds
inc
out
repnz
pop
mov
cmp
mov
clc
out
ret
gs
pop
jl
movs
cmp
xor
sbb
mov
push
mov
jbe
repnz
jmp
movs
jecxz
sahf
xor
adc
adc
out
int
in
and
loop
mov
lods
jb
gs
repnz
and
adc
sbb
cs
xchg
lock
dec
aad
clc
cmp
outs
movs
fldcw
inc
mov
jge
repz
mov
cmp
xchg
mov
jl
inc
push
lods
ret
push
add
shr
cdq
repnz
lods
jp
lds
ja
mov
movs
sub
scas
out
mov
out
out
adc
mov
cmp
ja
sub
icebp
int3
add
aad
mov
pop
pop
rol
xor
(bad)
clc
sub
pop
loop
popa
jl
cld
arpl
push
add
dec
clc
retf
mov
popf
out
cmp
dec
mov
add
dec
add
scas
dec
(bad)
in
ds
add
rol
lahf
lds
test
fwait
in
mov
push
add
hlt
mov
test
shr
pop
test
dec
jb
fdivp
jno
sub
inc
mov
pop
dec
rol
mov
fmul
(bad)
sahf
cmp
fmul
sar
aam
xor
ins
cmp
push
mov
push
push
lahf
js
sbb
or
fs
stc
mov
pop
pop
and
cmp
jge
(bad)
cld
dec
lock
mov
imul
loopne
jl
mov
xchg
mov
jg
lds
adc
outs
aaa
out
adc
ss
jns
and
push
push
mov
cli
pusha
xchg
int
sbb
ja
pop
retf
dec
sbb
into
xchg
push
loopne
in
add
jo
daa
ja
aaa
mov
inc
psubusb
push
pop
repz
add
inc
jl
test
xchg
fbstp
daa
fsubr
repnz
sar
adc
jecxz
rol
arpl
cmp
mov
(bad)
stc
xor
dec
fstp
or
mov
ins
mov
pop
add
and
cmp
mov
mov
mov
mov
test
xor
ja
and
push
fimul
jns
adc
dec
jmp
data16
adc
in
xor
jl
sbb
mov
inc
xlat
xlat
gs
int
xor
cdq
in
sub
pop
dec
pusha
dec
or
test
jb
push
lea
inc
icebp
or
jge
add
push
vphaddbw
xchg
aam
ins
retf
xor
cmps
pop
fbld
or
dec
push
add
loop
cmp
out
(bad)
sub
adc
outs
cs
shl
push
pop
idiv
loopne
test
imul
sub
or
out
(bad)
lods
ret
fcom
mov
xor
inc
dec
sub
inc
cmp
push
xlat
push
jmp
mov
daa
or
inc
mov
pop
mov
push
mov
popa
or
jl
fldenv
movs
daa
pop
fiadd
nop
push
sub
movs
in
fld
bound
pop
xchg
je
jmp
fistp
repz
jmp
cwde
xor
xchg
imul
fbstp
aas
xchg
sub
in
mov
dec
cwde
data16
arpl
int3
sub
ret
push
test
lds
cmps
sar
push
push
xor
sub
mov
pushf
dec
cmp
cmp
adc
mov
xchg
out
sbb
mov
test
jl
in
xor
pop
mov
lds
data16
pusha
lods
or
or
xor
scas
and
out
jle
mov
clc
push
repz
cmp
cmp
mov
mov
mov
cmp
fnsave
add
repz
xor
ret
xor
cmp
jbe
sub
bts
sub
dec
ins
imul
sub
cld
aam
adc
xor
jne
(bad)
addr16
mov
inc
and
xlat
lds
xchg
test
cmps
and
inc
cld
jp
adc
cmps
in
adc
gs
xchg
push
idiv
mov
into
mov
pop
sti
outs
test
and
push
jno
xchg
mov
scas
jecxz
mov
out
(bad)
pusha
into
inc
or
ja
cmp
mov
in
(bad)
ins
mov
mov
aad
jg
(bad)
adc
inc
pop
stc
je
inc
jbe
into
cdq
mov
ficomp
jns
aam
dec
xor
iret
mov
push
push
dec
pop
icebp
nop
js
rcr
mov
mov
mov
jge
cmc
test
cli
daa
push
leave
fs
jg
xchg
jne
mov
adc
pusha
cwde
or
add
test
or
pop
jno
call
pusha
imul
aad
sub
xchg
cld
xchg
daa
jle
aaa
dec
icebp
std
push
iret
mov
fadd
xchg
xchg
adc
or
push
push
mov
adc
xchg
jnp
or
pop
retf
ins
mov
in
ret
js
pop
aaa
lods
shl
repz
xchg
sub
test
dec
scas
sbb
jns
cmp
iret
dec
add
xor
fistp
ins
jne
fistp
mov
jbe
jae
mov
out
ss
mov
xchg
dec
dec
sub
push
or
adc
pusha
pushf
call
add
loop
jns
pop
and
call
test
cmp
jmp
mov
(bad)
fnstenv
stos
dec
inc
inc
sbb
inc
mov
jle
xchg
les
add
cmps
sub
mov
inc
dec
mov
cmp
scas
cmp
imul
dec
iret
popa
ficomp
and
mov
(bad)
push
and
test
dec
rol
(bad)
xor
fsubr
ficomp
jne
pop
and
jmp
scas
jecxz
sub
cmp
cmps
pushf
mov
stos
xor
scas
push
test
cli
sub
mov
dec
(bad)
in
push
jns
xlat
xlat
sub
mov
jae
es
or
in
jmp
inc
(bad)
jecxz
jge
rcr
adc
into
imul
icebp
dec
gs
sub
mov
jecxz
js
(bad)
jns
inc
jbe
aas
call
leave
xor
jno
scas
xchg
je
ret
das
loope
jb
pop
in
fcmovb
cli
push
loopne
xor
shl
mov
xor
fwait
call
imul
fadd
into
sbb
sub
mov
arpl
mov
xor
push
jae
inc
sbb
sub
test
lods
fiadd
das
sbb
and
jae
push
arpl
inc
jno
fcom
arpl
xchg
sub
stc
cmc
xor
inc
jp
sbb
(bad)
cwde
and
neg
cmp
sub
mov
inc
gs
pop
lock
inc
icebp
fs
cwde
sbb
xlat
mov
in
jb
dec
stos
movs
cmovl
ss
in
and
xchg
xchg
mul
add
jae
loopne
dec
mov
ja
inc
and
push
xlat
rcr
dec
pop
xor
pop
repnz
pop
addr16
in
push
adc
pop
xor
or
add
xor
jp
movs
and
outs
(bad)
rcl
adc
pop
std
lods
sub
inc
xchg
pop
stos
add
gs
mov
sbb
mov
dec
rcl
retf
or
fucomip
push
dec
retf
out
push
cmp
adc
movs
or
fwait
lahf
dec
and
mov
hlt
rep
sbb
jg
jg
das
aas
push
mov
loop
mov
jmp
mov
pop
retf
test
std
push
sbb
bound
push
xor
xchg
loop
je
push
mov
add
jl
ja
jmp
xchg
out
pop
jmp
clc
in
out
mov
in
enter
xchg
xchg
imul
idiv
mov
loopne
outs
jge
pop
mov
adc
mov
jl
out
jno
and
test
cdq
inc
push
and
fsubr
dec
hlt
sub
retf
adc
jle
dec
adc
fs
shl
je
sub
xor
jmp
(bad)
and
mov
dec
clc
jge
or
inc
cmp
adc
jp
sbb
out
adc
pushf
repnz
loope
inc
push
inc
mov
mov
xlat
cmp
arpl
xchg
lock
adc
gs
jp
mov
sbb
sbb
cmp
pusha
les
stc
test
pop
cwde
or
retf
jp
inc
mov
sub
jle
jmp
xchg
leave
ds
jge
out
mov
shl
ds
out
ret
stos
mov
ins
cmp
mov
add
lods
(bad)
iret
mov
and
setae
inc
iret
push
jg
xor
call
jae
cmp
movs
repnz
pop
push
cld
imul
or
sar
ins
adc
dec
xchg
call
xchg
andnps
adc
hlt
out
sub
sahf
fndisi(8087
xchg
mov
mul
inc
(bad)
movs
inc
mov
and
jg
push
movs
mov
outs
fsubrp
iret
jno
inc
out
outs
add
sti
repnz
or
cmp
xchg
pop
fs
push
add
stos
jns
push
fsubr
dec
add
pop
test
cli
mov
mov
xchg
lds
sub
lods
aad
mov
rcl
push
into
jne
lea
push
test
cmps
or
mov
into
sub
xchg
pop
frstor
inc
dec
and
dec
mov
inc
mov
mov
dec
sti
stc
jmp
lods
lods
out
ret
(bad)
nop
scas
int3
jbe
ja
fs
or
fst
mov
pushf
mov
pop
stos
xchg
mov
std
add
xchg
sbb
jmp
inc
jno
fs
mov
push
in
or
or
pop
ja
xchg
int3
adc
popf
cmp
test
adc
ss
add
aad
mov
mov
xchg
jne
push
enter
ds
pop
xor
stos
cmp
jb
mov
call
dec
(bad)
pop
or
pop
mov
(bad)
mov
in
or
call
mov
push
sub
or
loopne
test
cmp
dec
test
cld
push
iret
push
add
mov
loopne
stos
mov
and
sahf
pusha
div
cmp
sar
add
or
in
sub
out
pushf
ret
shr
hlt
push
or
loope
pop
cmp
jnp
and
adc
dec
(bad)
test
and
jge
or
adc
cmp
dec
addr16
scas
les
adc
outs
adc
sub
push
mov
shr
mov
adc
lods
pop
out
mov
aaa
pop
push
mov
jecxz
int3
mov
mov
outs
mov
(bad)
lods
call
(bad)
stos
jp
idiv
cwde
push
(bad)
(bad)
or
jb
cmps
add
mov
popa
mov
rdtsc
je
jno
cs
inc
call
adc
hlt
lahf
push
xchg
mov
inc
cmp
sahf
rcl
movs
sub
add
test
push
sub
dec
push
or
xchg
cs
push
dec
repnz
jne
in
mov
fcom
(bad)
neg
into
ja
xchg
ja
lods
dec
aam
pusha
jmp
repnz
stos
stos
xor
das
pop
cwde
icebp
in
das
xchg
mov
pop
call
push
push
ficom
(bad)
fdivr
in
aaa
pushf
js
inc
int
fwait
mov
test
(bad)
ficomp
dec
pusha
sub
imul
jge
pop
(bad)
and
mov
out
ror
js
cli
std
(bad)
adc
(bad)
ds
pop
fdivr
test
xchg
mov
pop
sar
and
jns
xor
or
jae
push
jae
lahf
test
adc
neg
push
fistp
idiv
cld
pop
cmc
lahf
aam
add
imul
push
and
or
pop
daa
cmp
jmp
or
push
adc
(bad)
adc
sbb
jo
mov
pop
push
cmps
popf
jge
mov
jnp
cmp
push
cmp
xchg
fisttp
shl
in
adc
das
push
out
add
pop
not
add
call
lods
stos
fisub
call
scas
retf
inc
xchg
adc
sti
in
push
(bad)
vcvttpd2dq
hlt
add
add
lods
push
pop
int3
cmp
cmp
ret
movs
sti
div
dec
lods
cwde
mov
jle
xchg
stos
jmp
cmp
jmp
jg
lea
lock
inc
xor
mov
ins
sbb
or
xchg
sub
in
rcr
addr16
mov
xorps
cs
push
outs
pop
idiv
fs
pop
std
pop
push
sub
mov
data16
cmp
mov
and
mov
popf
ins
sub
and
shr
out
dec
jae
(bad)
in
aas
sbb
pop
sbb
test
mov
test
pop
mov
outs
xor
or
clc
scas
and
loope
push
mov
xor
jmp
fnstsw
sub
inc
jae
ss
jg
ds
mov
jbe
nop
sbb
sahf
cmp
fdiv
xchg
adc
cmp
addr16
and
cmc
mov
or
mov
mov
xchg
cmp
test
xchg
scas
scas
xchg
mov
or
sub
xor
push
enter
add
pop
rcl
repz
cwde
sbb
cmp
add
and
jae
mov
icebp
(bad)
(bad)
test
xchg
adc
fwait
dec
inc
inc
mov
pop
stos
std
out
gs
mov
pop
cdq
pop
pop
movs
sub
mov
ja
dec
jge
jae
and
enter
stc
(bad)
cmp
lock
out
stos
inc
xchg
test
push
lds
cmc
loopne
imul
pop
cs
and
hlt
out
pop
aam
cmp
mov
pop
mov
mov
loopne
in
jns
mov
rcr
jp
jno
jg
out
aas
cs
invd
xchg
inc
test
(bad)
jb
mov
push
out
cmp
ret
pop
movs
mov
push
nop
push
stos
mov
test
pop
mov
inc
adc
add
xor
inc
repnz
fwait
xchg
ror
add
ja
mov
jmp
xor
fwait
cmc
jmp
add
xor
adc
sahf
pop
mov
pop
in
sub
enter
repz
cmps
cmp
lods
mov
mov
mov
sbb
loop
and
mov
and
and
lea
fild
adc
cmp
xor
cs
mov
(bad)
loope
stc
fisub
ror
xchg
add
(bad)
imul
lock
pop
das
dec
xor
jb
and
add
jmp
dec
dec
(bad)
xchg
mul
cmp
cmp
jecxz
lock
mov
inc
sbb
test
adc
add
pop
(bad)
aaa
movs
rol
inc
call
test
nop
les
push
scas
pop
loop
mov
push
and
jne
out
or
lds
(bad)
adc
dec
ret
mov
test
and
mov
mov
nop
in
add
nop
jbe
scas
pop
xchg
bound
dec
jns
imul
enter
mov
popf
rol
jle
int
sahf
repnz
(bad)
sbb
into
shl
lock
dec
jp
push
mov
jne
push
dec
jp
bound
retf
(bad)
js
out
adc
cmps
loopne
fidivr
xlat
imul
dec
push
dec
in
sub
cs
cmp
cmp
inc
rol
retf
ja
dec
mov
fild
sub
ds
gs
cs
sahf
mov
hlt
xchg
aad
ja
push
push
retf
or
pop
sub
add
iret
and
jbe
imul
and
adc
xor
int
in
clc
add
or
in
int3
nop
add
popf
or
dec
push
pop
hlt
cmp
lahf
dec
inc
or
and
jmp
ret
mov
ins
movs
stos
in
mov
lods
adc
xchg
into
rcr
pop
dec
into
xor
mov
dec
add
scas
sbb
(bad)
daa
outs
sbb
sub
fdivr
sbb
cmc
not
ficom
loope
ret
pop
sub
nop
stos
mov
iret
cdq
adc
sar
mov
int3
xchg
or
inc
cmps
add
push
cmp
sbb
xlat
add
jle
add
push
repz
mov
test
retf
pop
jno
loopne
xchg
sbb
sbb
in
add
sbb
mov
push
ret
fistp
cwde
jb
neg
mov
out
sbb
mov
out
ror
sub
push
or
mov
push
and
clc
shr
dec
call
sub
es
xchg
(bad)
xor
add
repnz
mov
mov
ret
stos
(bad)
jmp
or
mov
xor
jl
loopne
jbe
icebp
stos
loopne
or
or
out
xor
data16
and
or
xlat
or
adc
aad
(bad)
pop
xor
int3
pop
mov
inc
rol
push
push
loop
mov
push
mov
ret
mov
fild
stos
shr
sub
enter
mov
jge
cmps
xchg
and
cmc
sar
xlat
mov
push
enter
pop
pop
jg
cmps
add
dec
sbb
loope
sbb
sub
mov
pusha
call
int3
cli
je
aaa
test
mov
leave
enter
mov
jnp
push
inc
push
je
cmps
test
mov
adc
sar
scas
mov
dec
push
pop
lods
into
int3
xor
cmp
jmp
pop
jns
stc
test
sub
xchg
test
lods
mov
add
dec
mov
push
and
repnz
mov
js
dec
xchg
in
jge
and
or
mov
clc
fstp
daa
dec
mov
mov
dec
push
repnz
call
mov
daa
sub
dec
imul
stos
test
or
mov
fdivr
ror
ss
add
sbb
xchg
push
sbb
les
jo
bound
lds
js
xchg
adc
scas
aam
mov
stc
ss
inc
dec
adc
push
aad
je
out
or
vrsqrtps
mov
outs
jmp
pushf
fwait
jne
cld
or
and
inc
cli
rcl
adc
movs
rol
xchg
mov
mov
test
xchg
mov
ror
es
adc
mov
out
mov
pop
movs
mov
outs
sahf
cdq
in
pushf
or
mov
shl
aad
sahf
xlat
int3
aam
out
das
gs
lahf
adc
imul
scas
dec
add
dec
pushf
inc
push
cmp
loope
or
add
cli
dec
xlat
add
xor
fadd
mov
and
sbb
xor
sar
mov
sub
imul
fsub
push
add
ins
inc
pushf
mov
mov
mov
(bad)
pop
imul
dec
fs
pop
into
or
pop
addr16
ficomp
mov
cmp
mov
push
pop
inc
fistp
call
bound
js
sub
cdq
mov
pop
jl
stc
out
cmp
stos
adc
mov
adc
mov
outs
xor
fnstsw
jecxz
inc
pop
sbb
xchg
and
jecxz
sbb
mov
mov
les
into
dec
pusha
fnstsw
loopne
push
fst
lahf
dec
sub
jns
sbb
jl
movs
ds
ror
jmp
js
iret
movs
adc
ja
retf
jbe
sub
and
or
inc
popa
cmp
js
mov
into
pop
js
dec
int3
and
push
mov
mov
push
jno
or
mov
adc
sbb
jb
xchg
fisttp
sar
js
fimul
push
xlat
and
(bad)
(bad)
lea
push
sbb
inc
or
inc
cmp
pusha
repz
pop
into
mov
int
cmp
mov
aaa
popf
mov
rcr
wrmsr
pop
in
jl
add
xlat
daa
sbb
sbb
nop
xchg
inc
cmp
ins
ins
lahf
lods
lds
pop
mov
div
fldl2t
inc
sbb
add
xchg
nop
cli
(bad)
es
in
test
jge
popa
fisttp
jl
ins
aam
or
push
add
sub
dec
enter
jo
add
data16
push
ins
mov
fsubr
jmp
rcr
cmp
adc
sub
call
retf
sub
mov
adc
cmp
dec
cmps
and
hlt
gs
inc
dec
fidiv
ret
xchg
scas
sbb
sub
dec
add
(bad)
xor
ss
scas
out
idiv
lahf
in
xlat
cmp
sbb
mov
inc
scas
ins
aaa
es
mov
stc
xchg
mov
lods
aaa
jecxz
cmc
push
xchg
mov
retf
call
imul
jbe
mov
pop
movs
clc
out
or
stos
jne
inc
or
int3
mov
fcom
add
cmps
cmc
movs
out
into
mov
aas
push
sub
cmc
jb
ret
pushf
jb
sbb
hlt
(bad)
rcr
aad
sub
mov
add
out
fwait
jb
add
les
mov
imul
fnstsw
cmp
sar
das
sbb
in
in
(bad)
fstp
push
mov
xor
or
cmc
lock
xchg
xor
test
adc
sub
jge
cmps
mov
push
test
sub
xchg
ds
push
jmp
xchg
push
sti
cmp
loopne
stos
test
ret
push
mov
inc
cmp
(bad)
div
in
sub
jnp
mov
out
je
mov
dec
mov
imul
fs
adc
outs
jnp
dec
sbb
data16
(bad)
in
(bad)
je
mov
out
cmp
mov
adc
pop
inc
jo
cmp
adc
dec
inc
(bad)
jbe
mov
inc
sub
cmp
lds
pop
jno
(bad)
nop
mov
pushf
jne
pusha
call
mov
mov
out
cmps
jnp
push
ins
sbb
out
pop
ja
imul
push
and
repz
inc
xor
pop
neg
add
push
pop
cwde
int
std
pushw
das
push
nop
test
cmp
add
xor
xchg
push
jns
aad
outs
in
and
mov
adc
test
push
fs
enter
pop
xchg
stc
es
call
jmp
inc
jecxz
call
or
inc
sbb
test
es
rcr
jle
add
in
aad
push
idiv
ret
sbb
aad
mov
lahf
and
pusha
call
clc
aam
adc
and
push
adc
call
and
(bad)
int
mov
push
push
daa
imul
pusha
pop
xlat
pop
call
mov
int
jp
push
scas
xchg
aad
mov
adc
popf
sub
shl
xor
inc
jl
cmp
or
xor
sbb
ror
aaa
test
pop
out
push
cmp
(bad)
stos
neg
outs
cmp
jl
sbb
call
mov
ror
xor
push
pop
xor
ss
xchg
xor
jmp
push
inc
js
(bad)
sbb
mov
mov
stc
sbb
call
add
clc
jecxz
ret
bound
adc
mov
or
xor
jbe
enter
je
mov
push
inc
jge
int3
xchg
es
or
fist
aas
mov
sbb
dec
mov
cmps
std
jo
inc
jmp
inc
push
dec
out
imul
lock
imul
fstp
pop
cmp
inc
xchg
pop
icebp
mov
loop
lock
push
or
test
inc
push
nop
add
aam
sub
ja
dec
push
repz
or
push
imul
sbb
xchg
sahf
in
adc
mov
add
fistp
jge
pop
movs
ror
test
pop
aas
outs
stos
cdq
aaa
adc
pop
or
ficomp
adc
and
outs
sub
adc
inc
inc
xor
or
xor
mov
gs
xchg
sub
pop
js
das
lods
sub
std
shr
and
arpl
push
ss
push
ins
inc
jnp
xchg
xchg
into
cdq
scas
push
jl
pop
jle
js
xor
stos
sbb
mov
in
dec
mov
mov
and
mov
sbb
jp
jbe
push
push
stos
repz
fdivr
stc
imul
lahf
xchg
jmp
sub
in
test
add
or
or
xor
xchg
es
adc
inc
xchg
pop
ret
test
mov
or
sbb
jmp
sub
jae
push
pop
fdiv
mov
xchg
in
push
shl
stos
jbe
mov
sub
scas
lods
mov
mov
xchg
push
cs
popf
jne
clc
shr
xchg
ins
cmp
sbb
mov
ret
mov
hlt
imul
jnp
mov
sbb
sub
xchg
mov
mov
mov
leave
cmp
xor
rcr
jge
push
(bad)
jl
jbe
dec
sbb
int
push
outs
push
(bad)
enter
test
adc
enter
mov
pushf
jns
loopne
fcmovne
cdq
fnstenv
add
mov
mov
in
mov
repz
(bad)
mov
xor
fstp
imul
fdiv
sub
mov
xchg
icebp
rcr
or
ds
ret
inc
and
fldcw
mov
mov
mov
fcomp
inc
mov
sbb
sbb
loopne
loop
mov
push
outs
sti
sbb
sub
call
mov
test
xchg
xor
hlt
mov
mov
sbb
push
pop
les
aam
ret
dec
ror
inc
gs
aas
fnstsw
test
aad
mov
outs
cmp
inc
mov
emms
dec
inc
stos
pop
fstp
or
nop
sar
sar
test
mov
rcl
loop
sbb
imul
nop
aad
jns
lea
jl
or
or
dec
pop
mov
nop
mov
push
test
xor
clc
es
ja
pop
add
and
mov
lods
test
mov
xchg
lock
or
dec
hlt
mov
sbb
adc
test
or
into
jecxz
cmps
out
inc
test
pop
add
imul
and
imul
pop
push
sbb
movs
sbb
(bad)
mov
inc
ja
and
sub
in
cmc
xor
int
shl
fnstsw
stos
inc
fimul
sub
int
jns
fsub
add
push
xor
mov
sar
rcl
mov
pop
xchg
xor
addr16
xor
jg
(bad)
neg
loopne
sbb
sbb
hlt
inc
cmps
popa
dec
xor
out
cmc
jno
xor
fnclex
sbb
push
jle
sti
ror
nop
push
stos
(bad)
hlt
xchg
pop
cmps
push
jbe
xchg
xlat
and
mov
pushf
dec
xor
mov
mov
xchg
xor
push
add
sub
dec
mov
scas
hlt
fstp
cmp
es
xchg
es
and
adc
mov
dec
fistp
dec
fisubr
rol
push
mov
mov
mov
pop
jge
inc
in
mov
cmp
cmp
sbb
leave
xchg
ror
nop
dec
cmp
jnp
mov
call
adc
fldenv
push
call
mov
sub
adc
mov
add
std
push
inc
daa
sbb
adc
ja
sub
mov
mov
lds
fs
add
scas
jge
mov
add
pop
inc
push
mov
test
jge
cli
fsubr
sub
jle
mov
jne
and
fadd
rcl
xor
mov
inc
dec
mov
gs
mov
jns
ss
dec
pusha
(bad)
jp
push
push
iret
inc
pop
mov
js
or
push
mov
test
out
adc
inc
aas
jg
jbe
dec
sar
retf
push
add
add
xor
cmp
add
cmps
retf
jns
and
out
pslld
imul
mov
xor
cwde
adc
fimul
mov
outs
(bad)
aad
fidiv
popa
sbb
inc
movups
leave
sahf
sub
pop
mov
mov
ja
loope
pop
rol
jle
xchg
sub
bound
loopne
ja
(bad)
out
cwde
mov
adc
or
cmp
or
fldpi
sub
and
rep
jnp
leave
mov
add
sbb
dec
push
pop
fadd
jmp
cli
(bad)
xchg
arpl
pop
sub
das
adc
test
lds
jl
push
adc
cli
and
add
mov
lods
inc
and
loope
fisttp
jecxz
cmp
sbb
cmp
mov
ror
fild
mov
mov
dec
(bad)
call
push
mov
mov
ja
pushf
imul
movs
xchg
outs
scas
mov
in
dec
lods
test
mov
adc
inc
push
mov
(bad)
mov
sahf
sub
xchg
mov
aad
test
fs
adc
mov
dec
inc
cld
adc
lock
and
xchg
and
mov
ffreep
ins
daa
mov
inc
sub
dec
fild
mov
cmp
pop
mov
sub
or
inc
push
cwde
dec
addr16
xchg
lock
lods
out
(bad)
adc
xor
push
xchg
imul
inc
(bad)
(bad)
clc
pop
add
lea
lds
jl
(bad)
fsubp
jno
pusha
mov
and
dec
cwde
or
mov
pop
out
sub
xchg
lock
inc
add
js
cmps
sub
add
pop
xchg
ss
(bad)
cmps
xchg
add
retf
ss
pusha
sbb
and
popa
pop
int3
ss
mov
call
add
mov
fs
mov
jns
in
retf
aaa
sbb
in
fs
mov
sub
mov
lahf
xchg
cs
sti
mov
retf
nop
push
sub
jmp
into
lock
mov
sub
cmc
and
jmp
inc
push
mov
or
sub
inc
stc
mov
loope
and
dec
in
fcomp
icebp
addr16
daa
xchg
push
(bad)
dec
mov
sbb
cmc
mov
out
adc
sbb
cmp
or
mov
xchg
test
rcl
sbb
es
adc
(bad)
push
inc
sbb
cli
fs
pop
pop
movs
push
and
inc
pop
push
inc
fcmovb
ins
pop
dec
pop
lods
cdq
dec
test
cmp
outs
ins
jmp
addr16
lds
ret
js
push
icebp
sbb
dec
loope
mov
scas
ret
or
push
mov
fist
mov
cmp
aas
(bad)
fstp
retf
les
or
xchg
ss
jp
cmp
in
in
sub
pop
hlt
cmp
and
inc
xor
into
mov
rol
imul
or
fldcw
push
sub
int
popa
movs
adc
cmp
add
icebp
(bad)
or
mov
repnz
xchg
jl
push
jge
call
loope
std
pop
dec
scas
dec
pop
int3
aam
es
mov
test
shl
add
push
out
int
pop
jp
sbb
sbb
outs
xchg
ror
mov
xor
sar
cmp
shl
ss
lods
test
jmp
loopne
push
ss
mov
adc
sahf
inc
fldenv
cwde
adc
xchg
ret
and
or
shr
pop
out
ror
loopne
ret
pop
cmps
pop
and
shl
push
add
and
add
lods
aam
jae
call
dec
and
inc
stos
add
inc
dec
mov
dec
ja
imul
mov
and
in
cs
js
int
add
fwait
cmp
das
dec
adc
addr16
cdq
add
pop
jno
ins
(bad)
cmp
cdq
outs
call
jmp
push
cli
loop
nop
mov
dec
xchg
ret
enter
xor
lds
rol
les
cmc
adc
(bad)
and
cmp
mov
addr16
jl
pop
fdiv
add
push
jecxz
int3
mov
iret
and
mov
jnp
xor
push
mov
xor
popf
repnz
rol
data16
dec
cmp
out
call
aaa
iret
xchg
jnp
pop
add
jp
cwde
in
lds
jnp
mov
dec
fsub
dec
retf
cmps
addr16
cmc
inc
push
push
dec
sbb
inc
push
or
and
rcl
mov
mov
sbb
or
adc
in
retf
rcl
xor
es
aas
call
add
dec
ror
xchg
cmps
stos
std
jmp
pop
jb
cmps
stos
in
sub
inc
and
je
data16
fiadd
mov
xchg
scas
push
pop
daa
mov
icebp
push
mov
ret
cdq
pop
retf
daa
mov
retf
pmulhuw
xor
sbb
sub
test
and
fcmovnu
mov
or
repnz
push
mov
into
xchg
adc
add
pushf
jmp
(bad)
lock
add
inc
test
cmp
add
push
jne
cmps
mov
push
mov
sub
outs
and
pop
pop
push
add
cmp
and
into
xor
stos
leave
test
push
xchg
ins
sbb
cli
lahf
fwait
scas
sbb
and
dec
lahf
jbe
mov
pop
imul
test
inc
dec
jge
dec
mov
test
in
(bad)
and
dec
adc
mov
xor
popf
cmp
(bad)
cli
xor
push
adc
popa
add
call
jp
jae
sub
in
or
xchg
retf
mov
xor
test
jge
mov
and
xor
rcr
lds
jmp
retf
iret
jge
mov
pop
movs
in
jle
xlat
adc
push
loope
in
cmp
in
sub
cmp
ror
add
scas
in
inc
pop
push
ins
xlat
ret
bound
push
int
(bad)
sbb
(bad)
and
inc
(bad)
mov
test
adc
mov
retf
gs
data16
lods
adc
call
test
pushf
or
cmp
data16
push
mul
xchg
addr16
ds
xchg
xor
fs
retf
es
dec
pop
movs
and
in
ret
cli
cs
fwait
inc
or
dec
jge
test
and
push
fidiv
aaa
and
xchg
sub
pop
add
iret
sub
aam
push
stc
shl
add
jb
je
in
pop
call
xchg
pop
pop
mov
cmp
push
faddp
xchg
mov
adc
(bad)
or
mov
pusha
inc
mov
les
or
jge
adc
mov
and
pop
loope
fild
mov
rcl
out
movs
mov
pop
add
lods
pushw
sbb
cmp
dec
ret
dec
test
movs
pop
push
xchg
outs
js
pop
push
jae
bound
addr16
xor
pop
in
(bad)
fidiv
call
push
repz
js
cmp
mov
sub
lods
sub
mov
data16
xchg
push
cdq
(bad)
mov
pop
cs
test
aam
(bad)
adc
pop
loop
or
jne
push
cwde
in
loope
cmp
adc
mov
arpl
movs
mov
xor
adc
lods
in
sub
mov
push
xor
retf
hlt
aad
or
repnz
shr
mov
outs
fcomp
scas
or
mov
and
mov
idiv
xchg
dec
loopne
add
ins
pop
push
push
jmp
mov
sbb
inc
xchg
mov
loop
fldz
xchg
sahf
test
add
mov
cmp
xor
jae
in
test
jmp
cmp
add
or
xor
inc
pop
sbb
sub
ins
push
fidivr
icebp
xchg
ss
adc
pop
lock
add
mov
test
inc
push
test
hlt
popa
adc
fild
ds
push
outs
dec
jb
mov
(bad)
cmp
fsubr
les
push
sub
sbb
pop
xor
test
cmp
ja
cmp
cmp
ret
scas
push
fmul
int3
pop
shl
movs
and
xchg
repz
popa
xchg
lods
shr
stos
dec
addr16
shr
adc
jmp
fisub
dec
in
mov
shr
jge
(bad)
xor
dec
inc
add
jnp
not
inc
xchg
(bad)
test
xchg
jne
sub
imul
xchg
je
mov
out
jmp
out
jns
loope
sbb
cdq
add
inc
push
xchg
imul
xor
inc
in
mov
fidiv
lock
lea
mov
cwde
cmp
ds
js
sbb
sahf
imul
mov
mov
mov
sub
cmp
movs
stos
enter
sbb
loop
mov
xchg
jno
mov
nop
mov
push
pop
jge
(bad)
sar
xor
pop
or
dec
mov
(bad)
or
mov
sbb
int
xchg
mov
stos
mov
iret
cs
fisub
push
int3
xor
mov
mov
retf
jp
outs
mul
and
out
mov
jne
jno
inc
dec
not
enter
pop
inc
pushf
mov
or
xchg
mov
je
or
add
fcmove
mov
push
mov
mov
pop
jge
pop
mov
popa
or
mov
jmp
cmp
es
mov
sbb
jb
imul
es
loope
mov
pop
(bad)
cdq
sub
mov
push
scas
mov
sahf
je
push
dec
aaa
not
pop
outs
inc
xor
and
xchg
push
sub
jne
jns
xchg
pop
lods
push
mov
add
cdq
and
pusha
scas
xchg
loopne
div
adc
dec
cld
outs
loopne
mov
adc
mov
into
fist
inc
or
pop
adc
fsubr
pop
or
mov
popf
xor
loop
jno
ins
fs
scas
jmp
pop
dec
adc
repz
push
inc
rcl
add
popf
(bad)
dec
and
int3
clc
mov
push
imul
pop
retf
out
xor
or
cmp
jb
xchg
push
sbb
cmp
mov
inc
push
push
jmp
aam
cmp
ins
xchg
in
(bad)
jg
pop
sbb
jle
xchg
sbb
mov
and
push
lahf
mov
stos
loope
cmps
jne
jae
mov
jle
jae
out
aad
(bad)
jl
outs
inc
es
std
out
shl
std
lods
aaa
scas
data16
sbb
xor
mov
test
stc
enter
dec
xor
pushf
jns
dec
call
aaa
mov
out
cmp
cmc
dec
adc
jmp
sbb
cli
pop
xor
call
stos
or
add
test
(bad)
adc
dec
or
push
mov
pop
mov
repz
xchg
sub
scas
into
nop
out
mov
out
cmps
push
dec
fsub
mov
jle
jnp
sbb
(bad)
icebp
ins
test
and
cwde
movs
add
fwait
mov
inc
popa
in
movs
push
in
sub
xor
movs
mov
push
ins
dec
mov
adc
iret
(bad)
jl
xchg
cdq
cmps
adc
mov
imul
jo
loope
jns
int
pop
popa
clc
scas
cmp
int3
add
mov
dec
mov
jmp
jmp
mov
stc
sub
xchg
sbb
pushf
adc
fdiv
arpl
xchg
sub
in
mov
jp
or
fist
mov
cmp
mov
inc
js
mov
cli
in
mov
push
mov
in
call
imul
(bad)
retf
fidiv
(bad)
out
or
or
jecxz
or
icebp
mov
dec
jg
inc
add
dec
jae
xor
stos
fldcw
in
lods
ja
mov
mov
jbe
xor
and
jp
xchg
js
iret
icebp
lock
sbb
jo
lds
pop
rsqrtps
stos
jns
pop
mov
arpl
call
xlat
or
pop
sbb
rcr
inc
pop
xor
pop
cmp
sub
fwait
popa
add
cwde
loop
cmps
loop
je
mov
(bad)
fistp
cmp
dec
mov
mov
jp
and
neg
popf
xchg
(bad)
jp
cmps
push
or
mov
sti
dec
and
jns
stos
hlt
push
inc
out
fisub
adc
aam
mov
lock
pop
(bad)
and
aas
das
cs
div
test
mov
sub
xchg
loope
xchg
les
imul
and
and
cdq
cmp
hlt
pusha
jno
dec
push
pop
mov
push
nop
pop
rcl
ins
stos
dec
pop
test
call
jmp
pop
mov
push
push
inc
pop
in
jno
fs
and
xor
lods
xchg
(bad)
sar
and
pop
mov
sub
repz
cmp
inc
adc
ret
xchg
cs
and
mov
inc
sub
push
mov
inc
int3
dec
lods
push
(bad)
loope
aad
les
aad
outs
cmc
adc
or
es
and
fucomp
cmp
aaa
lea
dec
cmp
push
into
dec
push
stos
mov
xlat
mov
addr16
imul
pop
push
(bad)
push
or
xor
push
dec
adc
xor
sbb
dec
push
mov
inc
add
sbb
daa
lahf
jmp
jl
push
push
lods
push
or
cli
sub
rcr
push
add
or
imul
sub
fcomp
push
fs
pusha
push
mov
adc
jno
out
push
pop
imul
outs
lds
iret
jl
mov
not
and
cmp
ins
add
stos
jb
adc
cmc
ror
sbb
call
push
xor
pop
add
push
scas
sahf
jle
dec
push
cmps
xchg
sub
nop
add
ss
scas
icebp
inc
test
call
cli
sbb
popa
cmps
push
xchg
daa
pmaxsw
enter
mov
xchg
retf
pop
mov
and
dec
mov
push
pusha
fsub
mov
daa
mov
js
sub
sbb
push
cmps
adc
ret
sbb
es
mov
popa
push
xor
punpckhwd
je
add
movs
sub
push
retf
or
xor
(bad)
and
retf
fwait
sub
fwait
cmp
dec
stc
xor
xor
mov
ret
scas
(bad)
in
mov
dec
cmp
pop
mov
adc
push
dec
hlt
sub
(bad)
int
aas
and
es
cwde
scas
cmps
xor
mov
jg
fimul
push
adc
cmp
nop
call
pop
push
out
mov
aam
cs
mov
xor
bound
shl
xor
lea
retf
and
push
xchg
xchg
mov
lahf
lods
popf
mov
lds
xlat
imul
jg
inc
stos
pop
mov
js
sbb
and
mov
scas
add
jle
loopne
dec
push
dec
cmp
mov
call
inc
xchg
fdiv
sub
or
imul
pop
(bad)
std
cmps
sbb
movs
xchg
xchg
cmp
mov
cmps
xlat
(bad)
push
dec
(bad)
sub
mov
jne
cmp
neg
fstp
push
lahf
inc
dec
sbb
mov
adc
jno
ss
mov
and
adc
icebp
mov
not
mov
or
gs
dec
push
popa
mov
addr16
neg
call
and
mov
push
outs
mov
mov
push
scas
adc
out
push
aaa
mov
inc
sahf
repnz
dec
out
cmp
jb
mov
rcr
pop
pop
dec
dec
cmp
mov
icebp
mov
aam
sahf
mov
pop
in
jae
adc
mov
icebp
xchg
inc
pop
mov
jge
cmp
mov
xor
loope
retf
xlat
xlat
test
jmp
out
cmp
test
and
pop
pop
out
add
fwait
inc
fst
repnz
push
jecxz
and
sar
js
(bad)
xchg
ss
fwait
mov
jmp
mov
jg
pcmpeqb
lahf
shr
inc
sub
not
inc
retf
pop
sbb
imul
or
jnp
enter
push
imul
sti
clc
mov
mov
push
mul
pop
daa
sub
mov
movs
dec
out
sbb
aaa
push
sahf
cmovne
mov
xlat
jae
jecxz
js
out
dec
add
cdq
sbb
push
into
fwait
setnp
ins
sbb
and
xchg
add
pop
bound
mov
cld
(bad)
push
pmaxsw
push
mov
cwde
int
out
sub
mov
jg
add
sti
dec
inc
cmp
leave
iret
cmp
pop
imul
inc
retf
mul
jbe
leave
adc
lods
inc
ficom
or
sbb
or
sub
jecxz
mov
daa
movs
add
sub
dec
adc
loopne
lock
push
in
inc
jl
sahf
mov
imul
sbb
jmp
test
movs
jae
push
aas
data16
mov
aas
adc
xchg
repnz
icebp
mov
fs
or
fdiv
test
fwait
jo
and
xor
lods
inc
movs
jge
jne
fst
ins
push
cld
and
fcmovne
bound
sbb
jb
xchg
cmps
(bad)
jo
cmp
xchg
aam
inc
jge
test
js
sub
inc
add
jmp
pop
push
pop
mov
sub
xor
adc
pop
xchg
push
push
sub
je
add
cmp
sub
cs
inc
fstp
sar
xor
ret
jl
gs
mov
loope
pushf
std
cmp
loopne
scas
aaa
push
xchg
adc
cmp
mov
(bad)
fiadd
int3
pop
pop
lods
jge
idiv
iret
adc
in
jns
and
xchg
sub
call
adc
stc
cmc
push
imul
push
pop
xchg
xor
lods
(bad)
sub
inc
adc
ss
test
dec
sti
fiadd
cs
inc
jo
cmp
ret
inc
loope
jmp
xchg
mov
cld
jno
xchg
cmp
push
pop
cwde
test
jge
jle
pop
or
cmp
call
mov
sub
sub
call
(bad)
xchg
stos
mov
dec
lds
ret
inc
pop
aaa
call
loope
xchg
xchg
out
stos
or
pop
mov
xchg
add
(bad)
out
add
mov
pop
pop
les
test
sbb
mov
cmp
call
mov
pop
mov
repnz
retf
cmp
cmps
inc
(bad)
pop
(bad)
and
sub
fwait
imul
outs
leave
cmp
fsubr
and
adc
jo
jg
sub
les
or
cld
xor
neg
ins
push
adc
inc
call
jecxz
daa
adc
cwde
xor
mov
int
xor
mov
jnp
sbb
push
mov
mov
pop
lds
push
iret
pop
aad
dec
test
shl
cmp
in
outs
cmp
lods
mov
and
jp
xchg
std
aad
shl
jns
sbb
test
pop
je
adc
movs
pop
ss
cmp
xor
repz
out
(bad)
mov
std
adc
stc
add
daa
jbe
cmp
dec
sub
rol
or
call
popf
cmp
clc
fisttp
mov
adc
sbb
addr16
adc
xor
mov
inc
mov
xor
ds
shl
push
bound
xchg
into
xor
add
sbb
sub
xor
leave
jecxz
dec
out
push
push
or
cs
xor
sub
mov
or
mov
fisub
rcr
push
and
(bad)
(bad)
adc
icebp
adc
sbb
scas
jmp
add
mov
fldenv
outs
std
(bad)
add
push
cs
fsub
xor
mov
cmps
mov
dec
imul
jmp
sbb
dec
mov
aam
add
lock
(bad)
outs
mov
addr16
call
fdivr
repz
mov
mov
push
cmc
cdq
inc
shr
cli
pop
mov
or
and
into
pop
lods
xchg
retf
arpl
loopne
dec
inc
add
(bad)
into
(bad)
enter
mov
ds
add
push
inc
ins
cld
test
sbb
xchg
in
sbb
int3
call
xlat
lea
xor
sahf
mov
(bad)
adc
lock
and
ja
xchg
xlat
inc
fmul
movs
movs
movs
fcomp
leave
fmulp
cmp
popf
xchg
or
pop
popa
in
in
xor
setp
pop
in
imul
sbb
push
out
and
les
int3
ins
call
mov
sbb
mov
ror
xor
fwait
pop
push
(bad)
sub
lea
pop
lock
sahf
arpl
xchg
mov
mov
ins
into
jecxz
add
xchg
jecxz
and
jb
pop
adc
xchg
cs
adc
inc
adc
mov
fisub
hlt
sbb
jle
lods
xchg
fisubr
mov
inc
jl
adc
pop
mov
pop
repz
mul
and
mov
pop
mov
in
cmp
inc
lock
out
(bad)
cmp
jg
pop
jns
jnp
test
jno
pop
arpl
or
arpl
sti
es
ja
mov
clc
sub
int
(bad)
and
aaa
sti
out
add
ds
jmp
push
popf
in
(bad)
ss
xchg
add
aas
mov
sbb
xor
xor
retf
sub
outs
pop
jg
outs
jl
jmp
inc
dec
mov
aas
mov
repnz
sahf
lods
sti
xor
and
xchg
adc
lock
cmps
ror
ds
mov
jne
sahf
cld
mov
(bad)
ficom
js
and
add
inc
std
arpl
popf
inc
stos
adc
clc
(bad)
sub
jb
xor
ja
jg
pop
xor
xchg
pop
inc
ret
retf
push
add
pusha
jae
fwait
push
cli
sub
add
adc
pop
sar
out
mov
lods
gs
pop
push
mov
and
add
push
cmps
out
add
scas
ds
mov
pop
pop
rcl
ja
jo
mov
call
mov
adc
cmp
mov
adc
jbe
std
movs
test
xlat
jo
(bad)
pop
fmul
add
call
mov
add
sahf
inc
sti
popf
jecxz
dec
loope
xor
sahf
push
adc
sar
dec
fstp
retf
mov
movs
cmp
hlt
fcmovu
or
xlat
jmp
jae
out
cmp
loope
jne
lds
add
and
test
pop
(bad)
push
inc
cmp
jmp
sbb
inc
mov
push
or
pop
xor
sar
(bad)
push
mov
mov
inc
xchg
xchg
pop
mov
jns
pusha
stos
inc
or
hlt
mov
add
frstor
mov
mov
imul
sbb
cld
push
int3
xor
pop
push
dec
cmps
rcr
adc
or
jmp
fcomp
mov
pop
inc
jae
jmp
popa
popf
inc
out
jo
test
lds
sahf
cwde
cdq
sti
nop
ja
xor
pop
inc
cli
aas
push
jg
(bad)
sub
cmp
clc
mov
jno
xor
mov
ins
adc
(bad)
push
jle
cwde
out
popf
ss
or
pop
nop
mov
arpl
cmps
push
pop
jnp
or
ror
fsubrp
add
call
(bad)
ins
sub
sbb
xchg
pop
dec
leave
es
pop
in
iret
jmp
pop
loope
rcr
cmp
mov
xor
xchg
pop
mov
adc
sti
add
ror
mov
mov
jge
push
mov
test
dec
add
xor
ja
jl
call
lock
mov
add
mov
leave
inc
or
test
xchg
cmc
imul
xchg
loopne
pop
retf
movs
and
loopne
fst
inc
scas
in
icebp
push
mov
vpcmpeqw
cmps
pop
mov
jle
jnp
and
rol
nop
(bad)
mov
shl
fcom
adc
mov
dec
icebp
jp
mov
je
fild
sbb
sub
cs
mov
push
test
sub
rcr
clc
pop
sbb
push
sbb
(bad)
mov
bound
adc
ja
adc
push
nop
sbb
dec
loope
add
push
test
mov
cmp
and
jg
sbb
mov
jno
mov
shl
(bad)
movs
add
ret
sbb
in
fwait
sub
iret
cwde
popa
aad
mov
or
inc
fstp
imul
xchg
lds
lods
hlt
add
pop
mov
shl
sbb
ror
stos
pop
jge
mov
out
add
scas
scas
push
dec
inc
ins
jnp
sti
in
cmp
inc
xor
mov
inc
add
arpl
cmp
add
aaa
loopne
push
std
mov
jnp
pop
xchg
jns
icebp
adc
fsub
fisttp
sbb
jle
fimul
mov
out
pop
mov
(bad)
test
and
mov
xor
push
popa
and
fmul
and
inc
mov
or
dec
push
or
test
push
pop
add
dec
inc
pushf
scas
xor
jge
jnp
sbb
mov
pop
jo
sub
es
adc
sbb
inc
sbb
lods
arpl
jg
xlat
std
inc
sbb
cld
and
mov
retf
jle
mov
repnz
sbb
jnp
dec
(bad)
jmp
call
sub
xor
pop
pop
add
mov
push
jb
mov
push
daa
jbe
inc
add
xor
or
xor
lahf
pop
jge
aad
jo
dec
fbld
and
cmp
mul
jg
aam
adc
jl
in
ins
cmps
pop
dec
loope
mov
or
mov
push
xchg
fdivr
aam
inc
sub
mov
scas
rcl
mov
scas
inc
adc
xchg
xor
sti
push
arpl
add
hlt
mov
jecxz
dec
mov
cmp
jp
mov
or
inc
mov
xchg
add
mov
mov
sbb
inc
and
nop
and
xor
cmp
je
mov
movs
pop
mov
(bad)
mov
dec
repz
adc
pop
and
sub
mov
aad
cmp
imul
in
lahf
sbb
(bad)
cwde
fwait
not
ja
mov
(bad)
iret
hlt
sub
xrelease
outs
mov
call
in
cmp
(bad)
outs
jp
stc
sub
(bad)
outs
outs
popa
pushf
adc
xor
call
xchg
out
push
jle
sbb
xor
sbb
dec
mov
bound
rcl
inc
xchg
push
retf
cmp
adc
aam
xor
(bad)
rcl
push
(bad)
push
inc
popf
mov
jb
and
sbb
adc
xor
dec
in
cmp
(bad)
xchg
add
sbb
test
push
push
pop
in
ja
test
shr
sahf
push
add
fld
adc
in
mov
out
cmp
dec
mov
mov
push
adc
and
push
movs
pop
push
add
push
pop
stc
jbe
ins
adc
add
outs
add
dec
mov
das
pop
(bad)
sbb
cmp
jg
iret
movs
lods
int3
sub
pop
jge
test
loope
hlt
aaa
mov
cmc
pop
frstor
push
aad
imul
cmp
cli
outs
inc
jae
mov
aam
ficom
push
ins
fistp
mov
jo
daa
xor
inc
data16
and
fcom
fst
push
mov
icebp
jmp
outs
jns
inc
imul
in
out
jo
stos
push
(bad)
arpl
push
shl
in
leave
(bad)
adc
xor
pop
in
sub
dec
lea
sar
xchg
retf
add
pop
out
les
adc
fadd
loopne
dec
mov
cmps
fldcw
ds
mov
cmps
xchg
movs
mov
movs
js
adc
add
mov
push
sbb
dec
xchg
xor
in
stos
or
xchg
movs
mov
dec
pop
xlat
imul
push
dec
pop
or
push
iret
mov
pop
jb
enter
test
mov
mov
pop
int3
xchg
sub
dec
sbb
imul
or
cdq
dec
pop
ror
mov
dec
gs
addr16
out
test
jns
jnp
fistp
mov
mov
sub
(bad)
sar
arpl
pop
sbb
arpl
mov
cmp
push
ja
add
pop
or
pusha
sub
xlat
pavgw
rcr
es
inc
in
addps
inc
das
and
lock
add
xchg
inc
loope
call
std
fist
cmp
fs
push
adc
sub
push
or
je
sub
xor
mov
in
and
or
test
inc
js
(bad)
stos
pop
cwde
imul
fwait
dec
sub
xchg
jnp
(bad)
add
or
lea
retf
sbb
daa
xchg
adc
jge
sbb
ret
add
pop
push
dec
sub
(bad)
xor
rol
jge
in
mov
cmp
ret
sub
push
xlat
repz
add
jnp
out
test
clc
jge
sbb
mov
or
mov
sbb
add
std
mov
idiv
xchg
je
cwde
jne
fimul
retf
rol
and
(bad)
sbb
jmp
jle
add
test
outs
sub
inc
sbb
mov
xor
mov
xchg
stos
cmp
pop
dec
int
imul
iret
and
repnz
mov
(bad)
rcl
push
mov
gs
addr16
sbb
test
lds
movs
inc
jno
add
adc
push
add
or
sub
pop
dec
out
bound
lods
adc
sbb
jnp
repz
push
dec
and
xchg
je
ret
daa
out
mov
popa
jg
lds
or
inc
aas
cmp
xor
adc
adc
lock
push
loop
lods
and
(bad)
push
xor
and
scas
mov
sti
add
add
imul
repnz
loopne
xchg
je
mov
fcom
xchg
xchg
inc
in
adc
mov
push
je
jge
fnstcw
cmp
retf
stos
das
mov
mov
int
pop
pop
sar
arpl
mov
pop
in
test
add
xor
popf
test
call
mov
test
dec
xchg
xor
ds
sub
or
aas
add
int
ins
mov
adc
int3
add
pop
fwait
xacquire
or
mov
call
iret
dec
xor
mov
(bad)
mov
lds
adc
data16
add
sahf
mov
daa
adc
retf
(bad)
adc
dec
xchg
lock
cmps
loopne
cmp
out
sbb
icebp
xchg
mov
add
jno
jbe
nop
sbb
(bad)
mov
ss
popf
dec
sub
loope
in
adc
mov
cli
xchg
repnz
sahf
fnsave
dec
stos
pop
inc
xor
fsubr
xchg
lahf
pushf
pop
mov
add
icebp
xchg
inc
and
mov
xchg
test
inc
cmp
xchg
test
hlt
js
mov
in
push
dec
out
retf
lock
or
xor
or
sub
mov
dec
mov
retf
mul
add
push
je
mov
das
adc
push
sahf
lods
xchg
and
loope
xchg
shl
jnp
add
iret
mov
jno
mov
jae
out
jnp
cmp
mov
sbb
aas
pop
leave
aam
mov
cld
xor
repnz
test
jmp
mov
sub
push
sub
pop
sub
mov
add
aas
not
outs
adc
(bad)
push
pop
dec
inc
jecxz
jne
std
lea
cmp
cld
pusha
dec
call
push
add
mov
popf
test
pop
mov
int
icebp
(bad)
aad
daa
sbb
push
(bad)
out
ror
and
(bad)
js
ret
das
xlat
(bad)
repnz
push
call
mov
icebp
hlt
rcr
and
mov
outs
imul
or
jg
(bad)
stc
push
in
outs
mov
jge
sub
dec
ja
mov
sub
push
pop
jae
xchg
mov
repnz
ret
inc
or
jp
cmp
cmps
out
and
icebp
test
mov
cdq
sti
cmps
xchg
sub
push
xchg
push
pusha
popf
sub
leave
loopne
retf
ret
sub
mov
sbb
iret
mov
and
arpl
in
out
adc
shl
add
add
mov
into
xchg
imul
dec
in
mov
and
iret
jmp
(bad)
shl
push
mov
sbb
sub
cmc
mov
dec
sbb
stos
test
in
push
pushf
call
movs
sahf
xchg
push
pop
inc
mov
sti
sbb
loopne
cmp
or
or
mov
mov
test
loop
lock
in
dec
sbb
loop
jg
inc
popa
stos
loope
pop
cwde
hlt
enter
pusha
imul
inc
cmc
push
xchg
pop
xchg
fadd
ret
mov
mov
jae
mov
mov
mov
clc
jo
pop
retf
out
xchg
pop
cmp
mov
imul
push
into
into
or
sbb
fucomp
outs
pop
jle
sbb
idiv
jecxz
push
push
ins
rcl
jae
mov
xor
es
fchs
sbb
mov
mov
test
retf
jge
inc
inc
out
ja
add
xchg
loop
push
inc
mov
push
xchg
in
jle
cs
loope
mov
ja
cmc
push
pop
pop
cmp
js
dec
ror
cwde
add
lahf
and
(bad)
push
add
lahf
jg
ja
sbb
push
popf
or
arpl
ss
mov
push
sub
ins
in
inc
mov
jg
dec
sbb
outs
ja
push
jg
adc
clc
lods
lods
push
call
push
xor
ficomp
mov
aas
jno
das
mov
mov
js
fnstenv
loopne
cmps
jp
xor
stos
mov
mov
adc
dec
sbb
pop
cmp
sahf
and
fs
lea
out
pop
(bad)
push
xchg
push
cmp
leave
xor
sub
stos
jnp
inc
lods
fadd
std
xchg
xchg
inc
(bad)
jg
cld
push
xor
or
xor
stos
jmp
xchg
inc
pop
aas
xchg
xchg
dec
loope
push
adc
sti
scas
push
aas
xor
push
inc
mov
outs
add
jo
xchg
sub
fwait
xor
jmp
ror
ss
rcr
stc
in
pop
mov
jno
shl
mov
out
repz
outs
leave
out
cmp
les
mov
fldenv
daa
out
sub
and
jmp
push
fisttp
and
and
cmps
movs
out
and
push
lds
push
imul
adc
mov
xchg
jge
add
rol
dec
push
aad
inc
outs
cmc
dec
push
push
mov
pop
xchg
push
adc
xor
xchg
sub
daa
ins
sbb
mov
pusha
mov
mov
mov
xor
int3
dec
inc
and
ds
lea
xlat
push
inc
inc
pop
dec
sub
mov
or
add
aad
inc
test
mov
pop
sub
inc
test
jle
mov
repz
out
cs
and
clc
outs
mov
add
pop
mov
daa
cmps
popa
adc
repnz
movs
ret
sub
cmp
cs
push
out
fsubp
inc
clc
dec
das
inc
push
pop
enter
inc
stos
cmps
je
jp
aaa
fcmovnb
cmp
xchg
inc
adc
and
sti
mov
mov
dec
jo
mov
jns
push
xor
push
iret
cli
add
loope
xchg
sbb
popa
xchg
dec
cdq
call
inc
add
sahf
pop
js
push
pop
mov
mov
es
mov
scas
mov
nop
and
jl
or
shl
shr
fiadd
jnp
hlt
pop
fld
xor
retf
fwait
jp
inc
mov
not
push
xchg
pop
adc
cmp
jmp
lods
test
aaa
fcom
cmp
mov
dec
into
stc
cmp
inc
and
das
mov
addr16
int3
cmps
push
mov
add
xchg
pop
jne
and
adc
cwde
stos
jmp
adc
inc
fbstp
mov
cmp
je
ds
cmp
mov
add
cmp
jge
leave
dec
mov
inc
movs
cmp
and
sbb
adc
mov
call
pop
dec
add
iret
out
adc
repnz
enter
xchg
pop
and
rcr
bound
or
js
dec
mov
call
push
into
push
pop
daa
out
and
mov
pop
or
les
jp
aaa
cmps
push
xchg
mov
xchg
pop
push
or
fnstsw
xchg
pop
sbb
cmp
and
and
xchg
std
outs
hlt
jg
mov
inc
rol
inc
popa
mov
mov
inc
rol
inc
mov
jmp
sbb
loope
mov
cmp
push
push
out
iret
xchg
loop
lods
bound
adc
push
or
mov
or
cmp
and
pop
mov
mov
sub
loop
in
shr
mov
inc
(bad)
mov
ss
sub
test
test
pop
and
in
cmp
adc
mov
loopne
jae
repz
stc
dec
or
inc
dec
jp
xor
fs
jne
outs
and
loope
adc
iret
cmp
pop
ja
inc
arpl
cwde
sbb
sbb
mov
adc
xchg
push
xor
mov
clc
push
mov
mov
scas
js
int3
and
(bad)
jo
jge
jmp
pop
cs
fnsave
push
sti
(bad)
mov
arpl
lods
push
fdivr
inc
enter
mov
fwait
mov
(bad)
bound
lahf
movs
dec
cli
int
xor
sbb
mov
fadd
pop
and
call
dec
(bad)
scas
call
fst
maxps
cdq
movs
scas
inc
xor
enter
mov
xchg
mov
and
pop
inc
(bad)
lock
mov
jbe
fstp
pop
in
in
jne
hlt
jl
cmp
mov
dec
icebp
(bad)
dec
mov
sti
jnp
cmp
add
cmc
call
cmps
inc
push
dec
test
mov
jle
xchg
jmp
add
and
push
xchg
jmp
iret
dec
leave
je
lahf
cli
inc
into
dec
jae
sti
das
push
mov
aam
mov
ret
mov
jg
sub
fnstsw
loopne
lea
ret
in
cmp
mov
mov
or
xchg
sub
out
stos
leave
cmp
movs
cmc
rol
scas
xor
lods
test
cmp
leave
ja
dec
jno
(bad)
push
pop
shl
xor
popa
mov
into
ret
pop
jg
pop
and
jae
sub
add
stc
lahf
in
retf
jno
mov
xchg
cli
jle
and
popf
inc
mov
push
(bad)
in
arpl
jmp
jbe
and
dec
pop
shl
add
je
sahf
xchg
ins
cmp
cmps
test
clc
fcomp
into
jne
das
call
push
bound
xor
cmp
pushf
mov
lahf
retf
mov
dec
ja
rol
adc
test
jmp
jno
call
mov
fmul
dec
out
(bad)
lahf
loope
add
stos
jg
inc
call
js
xchg
clc
ret
and
dec
ja
add
in
pop
add
xchg
out
js
cmp
pop
cmps
inc
jo
pop
push
lea
(bad)
sti
and
sub
push
inc
jns
lock
pop
xor
cmp
mov
call
mov
and
imul
fistp
dec
jb
push
leave
pushf
aaa
cmps
sahf
lock
mov
mov
mov
cmps
and
adc
cmc
sbb
xor
cwde
mov
dec
(bad)
lock
xor
rcl
jae
sub
mov
or
addr16
add
aas
imul
loopne
push
test
outs
and
les
stc
cmp
hlt
call
inc
push
loop
sub
and
push
and
cmps
and
mov
stos
mov
xchg
lods
lahf
popf
adc
sbb
sub
add
not
cmp
fmul
hlt
cmp
push
call
jp
jge
or
push
mov
int
xchg
into
push
and
pop
push
mov
jns
cmp
rol
jle
sar
enter
push
push
call
adc
shr
in
ja
sar
pushf
out
lods
pop
sbb
in
add
not
mov
xchg
loope
mov
add
and
cmp
jle
push
outs
jns
fwait
addr16
push
push
jp
fldcw
pop
mov
cmp
or
je
fcomp
nop
jecxz
mov
sub
sbb
das
pusha
mov
loop
scas
sahf
mov
nop
mov
in
mov
int3
jnp
mov
push
add
adc
jmp
out
push
or
mov
jo
mov
jae
add
adc
loope
sbb
cmp
retf
push
out
push
adc
sub
pusha
sahf
int3
sub
jp
dec
xchg
dec
xchg
push
cmps
mov
ror
sbb
ss
stos
mov
sbb
mov
shr
mov
ret
sub
pop
leave
jmp
stos
aam
sub
sbb
or
xchg
mov
add
arpl
dec
dec
adc
mov
inc
outs
dec
sub
mov
cmc
pusha
call
call
retf
adc
cmp
xlat
jns
leave
inc
mov
loope
inc
fistp
es
enter
pop
cmc
sub
pop
das
pop
icebp
pushf
ins
shr
data16
rcr
lods
push
jno
or
stos
cmp
nop
sbb
call
ficomp
push
and
iret
sahf
sbb
cmp
imul
adc
add
pop
ss
mov
out
sbb
cmp
repz
scas
jbe
adc
hlt
inc
inc
std
sub
shl
je
add
loope
dec
test
jp
sbb
push
add
pop
scas
jno
scas
dec
in
jb
ins
inc
scas
mov
fisub
pop
pop
popa
imul
test
pop
imul
lahf
retf
mov
xchg
les
mov
mov
xchg
and
xchg
jecxz
xchg
fdivr
enter
jmp
sets
out
push
mov
push
sar
pop
push
out
icebp
add
out
pop
loope
push
pop
mov
outs
ins
fisub
(bad)
shr
inc
adc
ds
lahf
push
jge
inc
jp
and
test
loope
test
mov
add
int3
sbb
jmp
sbb
(bad)
sbb
push
es
xchg
int3
add
push
inc
movs
push
push
xchg
push
rcl
out
out
sub
popa
xchg
mov
into
lea
popf
push
neg
jns
cmp
add
xchg
aam
push
out
fcmove
sub
rcl
jmp
push
pop
push
push
adc
push
loop
inc
not
inc
push
fiadd
clc
aam
aam
push
loope
cmp
fwait
push
and
stos
sbb
or
sub
sbb
iret
push
xchg
cld
cmps
jne
dec
sub
push
pop
popf
into
mov
movs
bound
sbb
sar
cli
xchg
mov
dec
repz
dec
es
(bad)
stc
mov
mov
rcr
jecxz
mul
mov
adc
xor
jmp
sti
xchg
gs
imul
cmps
mov
cli
mov
mov
add
pushw
inc
or
dec
sub
test
inc
mov
jmp
or
ins
shl
in
mov
mov
test
into
outs
popa
fistp
rol
fcomp
add
fucomp
mov
add
push
popf
jle
fld
fst
stc
dec
loopne
add
stos
scas
fxch
sub
sub
adc
pop
loopne
inc
fwait
shl
ret
jb
rcr
loope
sbb
pop
stc
repnz
stc
mov
adc
sbb
shl
imul
sar
and
mov
xchg
(bad)
jo
inc
and
outs
adc
sub
dec
xchg
cmp
mov
out
bnd
scas
aaa
adc
mov
jmp
lods
lea
and
fnsave
cmps
loop
cmps
stc
cs
les
repnz
cld
test
dec
sbb
cmp
aaa
jae
pop
fild
dec
pop
in
jp
arpl
aad
mov
jmp
jg
jo
pop
jmp
and
push
repz
arpl
cmp
pop
popa
inc
stos
sahf
in
into
adc
pop
push
(bad)
dec
movs
loopne
shl
dec
jg
scas
ficom
xchg
jmp
out
icebp
ja
test
push
cdq
mov
dec
jmp
add
cmps
imul
and
retf
jne
jge
sbb
dec
or
cmps
dec
test
sbb
retf
and
ins
or
adc
cmp
iret
or
hlt
or
adc
les
mov
(bad)
hlt
add
aam
push
add
in
xchg
jnp
shr
push
fdivr
add
fst
ja
scas
push
push
jno
jae
mov
outs
in
fs
cli
ret
fidiv
outs
mov
xchg
jl
jo
dec
cli
mov
cmps
cmp
pop
int
add
push
addr16
jg
es
mov
inc
repz
push
push
out
pop
hlt
cld
pop
cs
fnstsw
jne
sbb
push
sub
jne
fild
inc
repnz
xchg
jmp
mov
fdivp
scas
movs
call
pop
ud0
ret
outs
int3
aas
dec
mov
mov
cmp
jl
adc
jb
inc
lods
or
cmp
stos
(bad)
das
mov
dec
cmp
ret
jb
and
std
push
cmp
cmps
add
pop
xchg
or
push
(bad)
enter
push
dec
std
or
movs
stos
lods
mov
dec
lds
aas
mov
xchg
mov
ins
dec
pop
pop
(bad)
movs
xchg
sub
cld
cmp
stc
add
jbe
call
push
jbe
mov
pushf
or
sbb
frstor
or
pop
mov
pop
leave
lods
push
(bad)
std
pop
mov
(bad)
test
sti
pop
xchg
shl
mov
dec
sbb
outs
adc
push
sub
push
mov
pop
imul
sub
jmp
mov
and
adc
es
cmps
xlat
repnz
sysret
out
sub
inc
fdivr
imul
mov
jae
shl
mov
lods
dec
push
mul
jo
cmp
jle
or
dec
inc
sar
test
jb
loop
mov
shr
enter
inc
mov
sbb
inc
sbb
sbb
push
add
mov
cdq
pop
out
cmp
adc
repz
out
sbb
fstp
xchg
inc
pop
xchg
jg
jbe
xlat
es
xor
out
inc
cwde
popa
jb
sti
mov
test
push
hlt
retf
rcl
jnp
es
or
out
enter
in
push
mov
xor
jo
jle
push
popf
mov
xor
inc
addr16
jb
jl
aad
inc
fwait
jg
ins
(bad)
sti
or
xchg
rol
test
cmps
mov
cmp
(bad)
lea
xor
cmp
pop
cld
shl
jmp
pop
movs
push
(bad)
dec
jo
dec
cmp
inc
mov
adc
(bad)
dec
ins
stos
adc
push
sbb
test
sub
retf
pop
push
add
iret
xchg
add
movs
(bad)
fbld
mov
add
pop
in
data16
push
ss
jecxz
in
aas
jae
je
daa
or
cwde
je
lahf
mov
dec
popf
xlat
cdq
es
imul
nop
and
and
mov
inc
pop
inc
sbb
sub
cmc
inc
xor
inc
mov
and
mov
or
das
mov
push
imul
push
adc
mov
sbb
rcr
cdq
xor
jp
sbb
xchg
mov
inc
or
jge
div
mov
push
ss
inc
push
(bad)
pop
sbb
xchg
les
jo
and
jo
lock
jmp
outs
jne
aas
repnz
dec
inc
cdq
mov
fsubrp
into
mov
add
rcl
call
adc
aas
shr
cmp
xchg
fnclex
xchg
int3
or
(bad)
jge
xchg
gs
test
scas
mov
mov
rcl
sbb
retf
xchg
xchg
cmc
daa
pop
std
ret
xchg
sub
nop
sbb
jo
scas
cdq
dec
sbb
and
jo
leave
pop
jae
test
fwait
mov
dec
pop
ins
jmp
ret
cmp
cmps
inc
xor
sbb
xor
arpl
push
pop
jle
out
jge
adc
movs
stos
jg
xchg
dec
test
(bad)
hlt
sbb
sub
xor
stos
imul
popa
aaa
and
jns
mov
sub
lods
xor
in
(bad)
pusha
fwait
cmp
lea
retf
sbb
out
mov
mov
add
xchg
out
ror
test
call
mov
call
or
iret
test
aas
add
pop
mov
mov
mov
or
push
es
pop
vpunpcklbw
cmps
fwait
mov
ret
pop
jp
mov
mov
xchg
add
fsincos
sub
pop
fcmovb
gs
iret
dec
sbb
sbb
loope
es
es
fwait
fwait
cmp
xchg
fs
mov
push
pop
mov
adc
test
push
dec
cmp
shr
jmp
test
xlat
fsub
repz
(bad)
fcomp
ficomp
or
and
sbb
mov
repz
cmp
aam
inc
(bad)
(bad)
push
sbb
mov
mov
ret
popf
sti
jb
outs
dec
js
mov
and
out
loopne
xchg
enter
in
arpl
int3
int3
dec
add
fcmovb
fisub
sbb
dec
ret
mov
mov
in
push
dec
push
popa
inc
sub
cmp
mov
popf
repnz
sub
aad
xchg
xchg
jecxz
jl
mul
push
(bad)
cmc
cmp
fwait
fwait
lods
adc
mov
in
adc
and
mov
cmps
sbb
stc
fmulp
cmps
addr16
pop
xor
addr16
inc
mov
adc
sub
int
(bad)
mov
cmp
(bad)
mov
mov
mov
push
aas
dec
outs
ror
cmps
cmp
mov
shr
ret
dec
and
mov
pop
mov
nop
mov
ror
out
xchg
enter
sub
cmc
pop
ins
add
sbb
xor
sbb
ss
clc
push
loop
cmc
test
pop
mov
adc
add
sub
push
aad
retf
ret
(bad)
out
push
xchg
mov
shl
push
inc
cld
lldt
jnp
adc
shl
pop
inc
inc
pop
push
popa
pop
ficomp
jmp
(bad)
jne
out
mov
repnz
imul
or
sbb
jno
sub
jo
aad
call
sub
repnz
lods
shr
jmp
outs
rcl
cdq
sub
sti
int
add
mov
lds
div
push
out
les
dec
(bad)
mov
cmp
imul
xor
mov
add
pushf
sub
xchg
int
xor
mov
pop
mov
inc
lahf
or
ja
adc
cmps
and
sub
mov
mov
lock
cmps
lahf
ret
sub
jo
test
add
cli
adc
out
sub
inc
fisubr
(bad)
xchg
cmp
aad
or
cmp
jmp
jmp
in
push
les
pop
jmp
push
cdq
jno
xchg
out
mov
sub
leave
push
ja
in
es
sbb
mov
test
cwde
popa
push
cs
mov
repz
dec
xor
pop
popa
mov
iret
and
mov
mov
loopne
test
loopne
fnsave
out
adc
add
inc
neg
sbb
dec
dec
cli
fsub
push
shl
(bad)
pop
sub
std
addr16
imul
push
add
fistp
cwde
or
bound
pushf
mov
mov
ja
jle
add
loope
jecxz
push
(bad)
out
pop
push
lahf
adc
pop
sbb
icebp
mov
xor
cmps
jg
scas
push
sti
loope
sbb
test
fnsave
popf
int3
adc
mov
loopne
dec
adc
xchg
or
(bad)
movs
cdq
jne
mov
ins
shl
repnz
xchg
push
ror
sahf
jp
nop
or
rcl
mov
retf
sub
mov
ret
ficomp
addr16
fsubp
mov
jge
jmp
ror
pop
sub
in
in
xor
push
mov
inc
sahf
inc
push
push
and
jg
dec
pop
int
shl
cmp
mov
lea
add
call
add
and
xor
mov
clc
call
fsubr
jmp
in
sub
nop
sub
adc
cmp
aaa
sbb
pusha
cmps
popf
shl
ja
cli
ret
push
mov
iret
jo
sbb
mov
call
(bad)
outs
mov
mov
out
les
or
sbb
popf
pop
inc
(bad)
and
inc
and
sbb
push
mov
push
int
pop
clc
adc
fadd
add
sti
push
xchg
and
adc
dec
mov
aam
xchg
fisttp
mov
pop
clc
jl
and
push
push
mov
ja
cs
mov
stc
icebp
out
jg
lods
mov
add
jne
das
jl
rep
jbe
cmps
sbb
push
enter
jmp
fsubrp
jmp
aam
and
jae
jp
in
sub
mov
sahf
pushf
mov
cs
push
enter
test
shr
dec
xlat
xchg
mov
call
push
ins
out
xchg
sbb
jbe
add
mov
jge
sub
das
fdiv
pop
cmc
pop
aaa
and
jmp
sahf
sub
sub
jo
mov
call
and
inc
pop
jno
retf
pushf
push
adc
jge
xor
sbb
cdq
mov
jne
sub
daa
push
leave
add
pusha
fidivr
xchg
stos
nop
xchg
mov
pop
lahf
lea
xchg
fcom
inc
or
jmp
mov
jmp
mov
cs
inc
shr
mov
fs
inc
ret
enter
sahf
and
dec
push
das
xchg
div
in
cli
outs
sub
rcr
jg
aaa
call
mov
fwait
dec
iret
ret
dec
add
pop
pop
ret
fistp
shl
adc
adc
scas
enter
(bad)
xor
push
aaa
add
mov
in
jecxz
push
sbb
dec
in
mov
xchg
and
sub
idiv
je
jno
mov
jne
lds
jb
outs
fwait
jmp
es
push
jg
adc
add
outs
mov
sti
loopne
and
dec
out
int
dec
stos
cmps
mov
mov
call
inc
mov
jle
mov
dec
and
mov
adc
out
push
rcr
fcmovnbe
sbb
xor
push
pop
fld
and
ins
sbb
xchg
adc
jp
push
sub
movs
mov
popa
mov
addr16
shr
ja
jbe
(bad)
or
dec
fisubr
shl
(bad)
ins
and
into
xchg
repz
mov
pop
stos
add
push
add
pop
cmc
xor
or
fwait
ds
addr16
aaa
add
jne
mov
xchg
gs
sub
movs
test
cmp
cdq
adc
test
jl
push
sub
sub
or
xchg
sub
and
ds
out
xor
lods
mov
fdiv
xlat
jecxz
push
movs
out
or
sub
ret
sbb
mov
fild
add
mov
ins
imul
retf
scas
inc
inc
repnz
fs
scas
js
mov
loopne
out
sub
retf
inc
hlt
adc
sbb
out
clc
dec
lds
inc
rcr
mov
mov
test
sbb
ror
inc
cmp
repz
fcomp
push
dec
int3
iret
sub
loope
push
xchg
repnz
mov
cmp
xor
pop
outs
rcr
loope
es
push
mov
icebp
call
ficomp
push
mov
push
and
cmps
pop
and
xor
cmp
call
sbb
int3
push
lahf
push
dec
inc
shr
inc
or
mov
arpl
xor
pop
mov
mul
add
sbb
xor
repnz
fisub
(bad)
push
sbb
out
loop
out
lea
lods
lods
sbb
ja
retf
sahf
outs
and
pop
dec
or
xchg
out
fdivr
fistp
xor
push
sub
inc
outs
add
cmp
jae
mov
fidiv
jmp
sub
push
imul
aam
or
fcom
mov
jg
fucomi
std
pop
or
rol
stos
mov
mov
sub
inc
mov
out
fcom
jmp
cmc
aaa
pop
cmp
xor
xlat
or
mov
pop
jecxz
pop
push
jne
jne
adc
push
inc
mov
in
mov
in
lds
scas
mov
jbe
inc
mov
inc
push
leave
out
repz
dec
ins
sub
push
icebp
hlt
pop
mov
gs
mov
dec
fmul
std
shl
lahf
imul
dec
iret
jle
mov
imul
jmp
shl
jp
fwait
dec
repz
ret
pop
(bad)
mov
cmps
push
jg
adc
cmps
sub
mov
xchg
mov
clc
js
sub
pop
pop
pop
(bad)
push
mov
rcr
mov
sub
and
fidiv
push
jecxz
je
jp
add
nop
fnstsw
sbb
stos
imul
mov
pop
(bad)
test
sbb
sbb
cmp
lahf
pop
fnsave
or
inc
fld
or
cmp
xor
clc
cld
xor
inc
mov
idiv
xchg
enter
jecxz
pop
cmps
inc
pop
dec
sbb
dec
retf
ds
test
cmp
mov
leave
jge
mov
sbb
nop
(bad)
pop
xchg
jg
loop
mov
cs
add
adc
mov
out
fsub
jns
fnstenv
mov
(bad)
(bad)
aas
inc
mov
fild
cmp
sub
add
inc
xchg
dec
cdq
popf
and
mov
add
pop
add
(bad)
fwait
inc
jns
mov
mov
je
pop
push
mov
(bad)
mov
or
jmp
ja
in
xchg
jmp
dec
push
mov
repnz
mov
fcomp
(bad)
cmp
pop
sbb
sbb
loopne
cmp
pop
retf
or
and
dec
jnp
cmps
sti
jns
or
push
pop
inc
inc
test
cdq
inc
aad
jmp
adc
ins
dec
sbb
sub
xchg
scas
int
pusha
or
push
cmps
neg
adc
mov
cli
jae
mov
(bad)
pushf
fsubrp
cmp
mov
cmc
mov
add
mov
and
xor
mov
lds
cld
gs
sbb
fs
dec
sub
and
xchg
pop
xchg
lods
daa
or
test
mov
fxch
xchg
call
js
mov
sub
scas
jo
sub
adc
mov
(bad)
mov
adc
jb
pushf
inc
gs
xor
(bad)
pop
outs
lahf
sub
lds
ss
movs
in
sub
mov
cmp
imul
and
pop
or
cli
aaa
sbb
and
dec
(bad)
cld
add
aad
imul
jns
pop
mov
cli
jle
daa
(bad)
std
int
pop
ficomp
xchg
mov
fwait
or
xor
les
dec
jo
push
mov
and
addr16
rep
inc
push
mov
xchg
xlat
pop
ins
dec
mov
ret
pop
xchg
inc
aam
(bad)
and
push
(bad)
mov
lea
pop
sub
cld
ret
sbb
cmp
pop
push
sub
push
sbb
sub
inc
push
nop
adc
jmp
int
fistp
push
fisubr
in
mov
dec
aas
(bad)
mov
fwait
sti
mov
mov
ror
inc
jmp
sar
cs
aaa
inc
sbb
cmp
fist
sti
push
cmp
jg
push
scas
xchg
sbb
xor
popa
push
and
mov
lahf
sbb
cmp
leave
mov
jg
stc
popa
inc
dec
jns
jl
sar
repnz
push
adc
pop
mov
jecxz
scas
pop
test
inc
mov
pusha
cmps
in
test
aaa
adc
retf
clc
je
(bad)
adc
aaa
pop
push
fnstsw
dec
jl
(bad)
or
mov
mov
cmps
xchg
xchg
adc
or
bnd
add
rol
or
aas
push
ss
pushf
pop
push
mov
inc
cs
jne
sahf
jae
jg
ret
and
in
(bad)
repnz
and
(bad)
push
pop
cmp
das
add
dec
hlt
or
mov
xor
mov
pop
push
push
sbb
xchg
xchg
rep
mov
imul
xor
fisub
ins
sar
and
rcl
xor
adc
mov
pop
pop
mov
jnp
push
adc
pop
retf
add
pop
int
sbb
(bad)
neg
lahf
xchg
xchg
push
or
cmp
or
pop
test
call
adc
aad
mov
add
(bad)
jle
pop
pop
fild
push
or
xchg
stos
add
jecxz
xchg
iret
mov
icebp
jp
xchg
fdiv
mov
sbb
mov
xor
mov
pop
mov
cmps
(bad)
inc
inc
ror
out
adc
sub
or
aaa
cmp
inc
cmp
jbe
shr
or
repz
std
loope
fs
or
pop
movs
imul
mov
movs
fsubp
shl
test
fld
push
adc
loopne
repz
sub
fisttp
cmp
aaa
cmovo
jle
dec
pop
icebp
dec
mov
and
js
sub
ins
aad
stc
adc
adc
add
jnp
arpl
push
imul
mov
sbb
jns
cmp
(bad)
dec
pop
sbb
pop
push
and
out
adc
stos
out
lea
sub
add
mov
(bad)
and
sbb
mov
aas
loope
add
and
lea
dec
push
(bad)
jnp
dec
push
pop
loopne
inc
xchg
cwde
fdivr
xchg
repnz
mov
push
(bad)
lds
lock
mov
jge
xlat
popa
push
mov
dec
jbe
cmp
enter
push
test
mov
repnz
add
dec
and
jp
dec
inc
lahf
std
sub
addr16
pop
stos
frstpm(287
xchg
jno
jae
imul
sub
int3
in
nop
mov
(bad)
fisttp
arpl
sbb
ret
mov
outs
jb
and
es
retf
xlat
pop
sbb
push
or
pushf
push
not
gs
jno
pop
pushf
and
fsubrp
mov
pop
cmps
pop
scas
inc
in
aam
push
and
dec
lahf
adc
or
mov
js
xlat
adc
nop
retf
inc
push
lea
sbb
jle
pop
dec
inc
lahf
sbb
sti
inc
aad
jmp
add
ret
std
fs
(bad)
cmp
sub
dec
test
jmp
ja
and
loop
sbb
and
enter
sub
add
push
test
xchg
stc
jp
out
fadd
outs
or
ret
sub
scas
cmps
jnp
mov
dec
jl
cwde
xchg
push
push
sbb
and
push
ret
mov
jg
(bad)
fiadd
mov
or
dec
sub
sahf
aad
and
rcr
cmp
mov
mov
scas
(bad)
adc
or
int
mov
jg
stc
pop
js
pop
inc
pop
js
jns
js
jl
retf
leave
jbe
fldenv
stc
mov
lock
and
sbb
mov
sbb
loop
pop
fstp
stc
test
es
lea
mov
leave
jb
out
or
push
cld
jp
xchg
push
mov
and
cmp
adc
mov
fstp
push
out
pop
or
jnp
(bad)
jnp
inc
clc
in
sub
fidivr
pop
je
fist
clc
pop
xchg
cs
and
in
mov
mov
mov
cmps
mov
dec
nop
stos
fs
lahf
out
sbb
xchg
inc
repz
pop
jnp
in
push
sub
repnz
das
pushf
adc
push
dec
push
xchg
adc
sar
and
test
jnp
repnz
jbe
retf
ret
sbb
inc
retf
mov
adc
imul
clc
add
jns
or
cdq
mov
sub
add
dec
mov
jne
scas
jg
sub
in
add
ja
xchg
push
dec
mov
xor
mov
cwde
das
mov
ds
inc
pop
inc
push
push
xor
loope
and
mov
(bad)
(bad)
or
(bad)
and
push
in
test
movs
test
fwait
test
test
inc
fwait
call
mov
inc
push
(bad)
jae
mov
pop
dec
lahf
mov
pop
adc
adc
dec
test
scas
ja
pushf
mov
and
call
sub
cmps
popa
lock
repz
mov
movs
mov
adc
xor
in
pop
shr
sbb
push
aas
rcl
xor
mov
stc
xor
mov
bnd
pop
shl
and
mov
push
push
pop
mov
out
aaa
or
in
mov
inc
jne
test
repz
in
xlat
push
mov
rol
stos
imul
jbe
ror
mov
lahf
xchg
lds
call
push
mov
sub
int
jne
lods
pop
and
cmp
std
inc
stc
inc
sub
lods
scas
ja
pop
xchg
(bad)
imul
cdq
aaa
mov
inc
mov
inc
inc
inc
popa
(bad)
mov
les
sub
inc
inc
fbld
(bad)
shl
and
mov
pop
pop
popf
pusha
and
fnstsw
pop
and
fild
xchg
inc
and
hlt
sahf
nop
in
push
or
(bad)
cmp
ror
mov
add
dec
jbe
add
jl
stc
(bad)
cld
dec
jg
lea
sahf
sbb
or
call
xchg
enter
test
or
mov
push
(bad)
xor
cs
(bad)
mov
sub
test
mov
rcr
dec
mov
jb
sub
adc
add
cmp
and
jecxz
ret
js
push
sub
mov
add
jg
imul
lea
das
mov
arpl
cld
icebp
push
push
mov
fstp
jae
fcmovne
in
xchg
pop
xchg
jno
test
push
sbb
sub
xchg
mov
mov
push
mov
mov
xchg
shl
push
inc
xchg
xchg
sub
movs
mov
inc
pop
scas
pusha
jecxz
cmc
cwde
dec
adc
pop
pop
fidivr
sub
iret
(bad)
mov
call
push
jmp
mov
lds
cmp
hlt
in
adc
out
mov
fst
ins
icebp
xor
cmp
movs
(bad)
mov
lods
clc
pushf
push
inc
sub
mov
adc
or
cmp
ret
mov
mov
fcmovnb
mov
test
jmp
and
inc
test
mov
pop
repz
ret
rol
addr16
fwait
mov
inc
lock
xlat
je
mov
in
ins
xor
mov
jo
adc
mov
aam
add
and
push
nop
xchg
aas
clc
jmp
xchg
push
in
inc
(bad)
(bad)
std
aam
mov
mov
(bad)
add
and
into
xchg
inc
call
fdivr
std
ror
sub
xor
loop
mov
mov
adc
or
mov
ret
sub
and
inc
lock
mov
cdq
dec
hlt
(bad)
das
xor
xchg
cmp
adc
pop
adc
fwait
cmp
cdq
enter
inc
mov
daa
jbe
(bad)
mov
or
pop
sub
mov
xchg
jmp
pop
jns
or
aad
rcr
clc
in
ins
ss
jb
lds
dec
dec
mov
ret
iret
jmp
xor
or
cld
(bad)
dec
test
push
mov
push
mov
lds
dec
lods
mov
out
mov
int
mov
and
dec
pop
int3
add
aam
or
in
pop
pop
jmp
stos
pop
stos
or
adc
push
pop
adc
ja
enter
jmp
mov
pop
mov
mov
sub
or
adc
push
jmp
in
jmp
push
or
out
std
pop
bts
cmp
out
pop
(bad)
mov
mov
ss
xchg
ds
dec
mov
push
cmp
test
or
loope
lods
in
jmp
or
clc
xchg
and
sbb
scas
or
sbb
or
xlat
mov
pop
and
mul
in
adc
lahf
push
sbb
adc
into
jno
jle
xlat
push
push
lods
pop
pop
xchg
cmps
sbb
fmul
push
mov
or
jo
mov
fwait
add
cmp
push
les
repnz
fisttp
jge
sbb
pop
(bad)
imul
cmps
mov
fnstcw
xchg
rol
jmp
push
stos
adc
les
pop
or
cwde
pop
fmul
pop
sbb
es
jbe
fsubr
cmps
and
mov
out
inc
xlat
mov
loop
and
xchg
pop
mov
xor
test
inc
mov
popf
rcr
push
xchg
lock
fnstenv
das
sbb
cmp
repz
or
out
mov
and
xor
test
mov
cmp
out
sbb
sbb
push
jne
je
das
push
add
or
int3
mov
call
push
call
lahf
dec
lods
pop
sub
cmp
les
inc
mov
mov
xor
pop
push
and
mov
jae
or
push
es
mov
fwait
add
or
inc
push
(bad)
mov
outs
or
sub
inc
repz
and
je
xchg
jmp
cmps
dec
sub
or
add
jae
fwait
xlat
imul
mov
jmp
ret
sbb
inc
iret
stos
mov
or
(bad)
sub
or
test
aad
or
idiv
aaa
nop
add
cmp
adc
inc
scas
cld
repz
push
lods
jp
dec
pop
cmp
or
xor
inc
arpl
dec
popf
xor
pop
jae
nop
jmp
movs
mov
sbb
adc
inc
test
add
call
mov
xchg
std
or
into
mov
pop
repnz
jg
xor
xchg
mov
pop
add
push
xchg
ja
push
pop
xchg
lock
fwait
adc
and
stos
adc
and
jae
cmp
enter
xchg
push
add
aad
cdq
xchg
jl
pop
leave
mov
add
mov
inc
pop
xchg
sub
retf
aam
mov
cvtpi2ps
dec
push
pusha
fs
and
mov
ret
loope
fstp
fs
stos
push
test
add
fwait
call
loopne
mov
(bad)
stc
in
sbb
push
ror
inc
push
mov
clc
jle
pop
ja
stc
push
je
shr
retf
push
je
lds
and
pusha
leave
push
mov
push
add
(bad)
dec
rol
fisttp
out
sahf
test
cli
out
mov
mov
jae
lahf
cmp
popa
js
mov
xor
inc
call
and
fmul
pop
lock
adc
in
add
leave
lea
ret
xor
jecxz
xchg
call
and
(bad)
je
(bad)
retf
and
repz
(bad)
inc
pop
stc
pop
(bad)
es
mov
push
loope
movs
enter
mov
stos
or
clc
out
dec
xor
jmp
fdiv
test
jmp
adc
ret
sbb
ds
mov
add
sbb
out
sbb
sbb
mov
dec
pop
inc
sbb
test
sbb
jne
mov
jnp
fnsave
xor
dec
outs
push
adc
daa
xchg
cld
and
pop
(bad)
jge
or
sub
dec
sbb
push
cmp
xor
xchg
push
mov
or
and
daa
aad
stos
mov
jae
lods
pop
dec
mov
add
and
cmp
jo
pop
std
jmp
and
iret
mov
mov
addr16
mov
iret
stos
movs
lahf
or
pop
xor
stos
nop
pop
rcl
das
dec
pop
add
retf
adc
out
fisttp
xchg
cwde
pusha
push
jge
sub
ja
pop
or
ret
sub
movs
mov
mov
sbb
repnz
inc
outs
sub
mov
push
outs
mov
pop
aam
stos
xchg
sub
inc
mov
test
pop
mov
xchg
imul
add
fiadd
icebp
sub
or
jmp
neg
in
movntps
push
aam
sbb
jae
or
std
push
sub
sub
rol
sub
sbb
cmp
imul
jno
popa
(bad)
arpl
out
fldcw
(bad)
repnz
stc
fiadd
rcl
dec
adc
jae
lods
into
outs
arpl
imul
and
cmp
xor
adc
push
push
pop
pop
xchg
jge
data16
cmp
pop
fdiv
jmp
stos
sbb
add
sbb
jno
fcmovnb
nop
sub
and
out
pop
(bad)
int
jg
lods
mov
xor
mov
sbb
cs
stos
(bad)
cmp
out
ss
sub
arpl
repz
sub
sbb
adc
mov
fisub
adc
xchg
jecxz
xchg
xor
mov
test
nop
mov
in
aas
out
pop
pop
inc
fst
lock
loopne
push
adc
sahf
aad
push
loopne
dec
leave
stos
lds
mov
jnp
adc
jno
imul
mov
xchg
or
mov
and
leave
lods
mov
dec
outs
add
xor
sub
xchg
sub
pushf
call
ss
data16
xor
fdivr
jle
mov
mov
pushf
lds
lods
mov
xor
mov
add
in
jle
pop
stos
aaa
lods
shl
outs
movs
adc
jno
(bad)
sbb
jae
or
ret
outs
xor
loope
or
movs
ret
vmovaps
fistp
jle
clc
pop
sub
cmp
pop
lods
mov
fwait
js
and
xchg
iret
fistp
stos
repz
icebp
cdq
adc
xchg
arpl
push
cmp
adc
nop
sub
pop
daa
out
adc
test
adc
int
jmp
sub
jl
mov
(bad)
cmp
test
pop
xchg
loope
movs
adc
mov
sub
jb
pop
(bad)
fisttp
ins
stc
push
mov
mov
mov
cmp
or
push
ja
or
pop
or
cmp
dec
add
jmp
inc
shl
jmp
dec
push
mov
pop
jg
mov
push
stos
sahf
mov
and
mov
pop
int
pushf
pusha
sub
mov
or
pop
call
and
into
loop
push
ins
and
(bad)
xchg
scas
ds
dec
sub
push
xor
fadd
xchg
lahf
push
ja
sbb
call
sub
dec
imul
ror
lock
xchg
stc
adc
xchg
mov
cdq
loop
push
xor
xor
nop
ds
retf
sbb
pusha
clc
mov
ss
imul
xor
inc
dec
pusha
outs
pop
mov
in
adc
data16
out
mov
(bad)
pop
pop
imul
clc
xor
xlat
sub
xchg
cld
mov
cmp
mov
aam
js
push
(bad)
popa
dec
mov
repnz
jl
mov
mov
rol
nop
(bad)
mov
nop
cwde
in
cmps
sbb
mov
xor
mov
lahf
loopne
or
xor
movs
push
push
xchg
fwait
sbb
or
adc
pop
das
xchg
daa
adc
jg
mov
ds
sub
sub
jnp
mov
inc
xor
imul
xchg
ds
sbb
mov
es
retf
test
sub
or
fcomp
push
jns
xor
xchg
outs
ja
movs
sbb
or
jl
sub
mov
inc
ss
(bad)
cmps
jl
rcl
bound
les
mov
je
sbb
mov
test
adc
je
cmc
cmp
mov
dec
dec
(bad)
out
push
push
neg
or
pop
retf
mov
je
push
icebp
cmp
xchg
sub
sub
add
mov
push
ret
cmp
jl
imul
xor
push
mov
dec
stos
push
pop
xchg
retf
test
or
sahf
ins
sti
mov
pop
mov
dec
imul
inc
fsub
add
dec
lods
sub
mov
jecxz
dec
xchg
and
mov
popf
fcmovne
fild
fnstcw
imul
(bad)
mov
fadd
xor
inc
cs
ja
xor
cmp
jne
or
dec
dec
retf
addr16
xchg
das
outs
dec
or
(bad)
mov
ds
adc
pushf
(bad)
xchg
jg
xor
js
lahf
outs
sbb
jne
adc
add
inc
mov
mov
sar
cmp
call
test
fidiv
mov
sbb
mov
push
or
icebp
or
popa
(bad)
cmp
xchg
stc
xor
aas
nop
movs
ror
xor
mov
jg
daa
xor
repz
inc
inc
and
mov
cmp
adc
lock
and
adc
(bad)
stos
jmp
iret
mov
push
retf
hlt
aad
pop
outs
inc
pop
shl
inc
or
add
xor
repz
mov
ret
imul
js
stos
outs
xchg
jo
pop
pushf
dec
and
xchg
pushf
aaa
adc
movs
and
call
cmp
push
and
iret
loop
and
inc
mov
ds
leave
jo
push
icebp
mov
adc
xrelease
inc
popa
sar
js
add
cmp
(bad)
gs
pop
inc
(bad)
xor
and
cmp
push
mov
cwde
push
cs
push
jge
shr
or
xchg
jg
xchg
push
pusha
dec
ins
inc
cmp
mov
(bad)
lahf
pusha
mov
adc
lds
push
(bad)
imul
jmp
movs
jns
push
retf
add
sbb
sbb
dec
lods
pop
out
or
mov
aam
mov
lods
shr
movs
mov
stos
addr16
inc
sub
aaa
stos
mov
xor
test
jbe
pushf
cli
xchg
mov
stc
cwde
xor
inc
cmps
push
(bad)
sub
lahf
ror
gs
push
mov
and
pop
pushw
hlt
cdq
aad
gs
lods
test
mov
cmp
or
(bad)
mov
cmp
cld
mov
dec
mov
mov
jmp
cmc
lea
adc
mov
xchg
xor
fbld
stos
fcmovnbe
or
popf
pop
push
or
xlat
shl
les
mov
clc
sub
gs
daa
jmp
int3
and
push
dec
dec
shl
std
sbb
pop
sub
cli
sub
mov
jb
mov
movs
mov
outs
xlat
cmp
and
sbb
sub
inc
and
leave
hlt
movs
jb
arpl
leave
adc
int
cli
in
fs
xchg
cmp
mov
inc
cmc
jnp
sbb
and
loop
xchg
inc
iret
(bad)
sti
push
clc
jno
cmp
and
int
dec
in
nop
or
ja
xor
mov
push
xchg
add
mov
adc
jle
or
(bad)
sub
pop
jecxz
icebp
add
(bad)
and
mov
xor
cld
fsubr
mov
dec
pop
scas
jmp
inc
out
and
and
ss
int
mov
sub
jae
pop
(bad)
cwde
das
push
aam
add
xchg
cmp
jbe
jbe
hlt
mov
paddsb
pop
push
adc
inc
push
cmp
fwait
cmp
cs
arpl
(bad)
xor
lahf
stos
js
fcom
cmc
sbb
sbb
or
rcr
cld
int3
(bad)
cld
repnz
dec
in
stos
cmp
xchg
je
mov
bound
push
das
inc
clc
cmp
inc
fs
or
adc
loope
mov
jo
mov
lods
mov
push
sti
dec
test
ret
xlat
test
cmp
add
xor
and
push
xchg
mov
sbb
jge
in
aas
fimul
adc
and
in
inc
rcl
add
lds
push
xchg
cs
cmp
xchg
stc
pop
arpl
fwait
pop
pop
xlat
dec
adc
cmp
pop
retf
out
psadbw
lock
vminss
shl
fisttp
sub
xchg
in
dec
addr16
sar
leave
jl
push
pushf
push
sbb
jmp
in
shr
mov
ds
mov
inc
ss
push
add
pop
sbb
xchg
or
ins
dec
push
aas
cs
sub
cs
pop
into
(bad)
ds
push
xor
push
cmc
add
retf
cmp
loope
xor
shl
xor
or
fadd
mov
daa
(bad)
out
xchg
dec
idiv
lea
pop
in
sbb
stc
fisttp
xchg
aaa
push
in
(bad)
out
(bad)
pushf
cmps
or
into
jle
dec
int
xchg
pusha
inc
cmp
fadd
pop
(bad)
imul
icebp
push
bound
js
(bad)
aaa
and
test
daa
retf
arpl
xchg
in
jne
repz
mov
pop
cdq
ret
pop
stos
push
inc
aas
pop
push
in
push
mov
cwde
jnp
arpl
out
outs
pop
(bad)
jmp
mov
or
loopne
iret
cmps
mov
in
cmp
outs
mov
pop
sbb
repnz
(bad)
idiv
jle
pushf
mov
push
fidivr
cmp
xchg
cmc
inc
add
jp
cmc
jo
cdq
or
fdivr
push
jbe
lods
inc
ss
xor
xchg
jns
pushf
sbb
inc
mov
adc
and
cmps
loop
loop
pop
sbb
pop
push
sbb
test
xor
adc
push
xchg
out
fsubr
sbb
clc
xchg
frstor
pop
cmp
(bad)
dec
nop
ss
daa
and
cwde
sub
call
cmp
xor
retf
mov
loopne
inc
in
sbb
inc
ret
sbb
mov
cmps
jnp
add
xchg
(bad)
jns
dec
pop
add
mov
inc
adc
shl
punpcklbw
mov
mov
jmp
repnz
push
fcomp
adc
sbb
aaa
daa
and
(bad)
add
in
in
inc
cmp
shr
push
repnz
mov
sub
js
and
mov
out
popf
vpaddq
inc
pop
push
dec
mov
pop
in
jl
sbb
retf
cdq
(bad)
pop
push
(bad)
out
pushf
sbb
out
xor
pop
adc
call
cli
gs
nop
and
shl
jmp
xlat
push
adc
jnp
mov
xchg
loop
enter
add
popa
or
push
or
cli
push
lods
jle
xor
and
xor
std
cmps
ja
popa
sti
mov
inc
fs
sub
adc
push
retf
mov
jecxz
stos
cli
das
jmp
mov
fdivr
push
push
jb
jb
mov
adc
div
jp
shl
jmp
movs
sbb
scas
sbb
cmp
pop
xor
jb
pop
nop
jb
das
xchg
jnp
xor
iret
sti
xor
jbe
fsub
stos
dec
inc
cmps
xchg
inc
pop
(bad)
xor
fwait
jb
xchg
sbb
retf
mov
jl
lods
jmp
push
pop
popf
(bad)
dec
cmp
push
test
pop
cwde
dec
retf
sub
pop
dec
not
and
fwait
sbb
mov
or
sub
mov
dec
outs
rcl
mov
push
xor
dec
jmp
push
test
adc
jb
jecxz
(bad)
fwait
mov
mov
inc
push
or
pop
xchg
dec
sbb
inc
mov
daa
imul
and
xchg
lock
popf
mov
icebp
jp
push
pop
retf
js
data16
movs
mov
sbb
shr
mov
fstp
jnp
movs
sbb
jbe
mov
mov
add
call
(bad)
dec
sbb
pop
movs
push
in
lock
(bad)
or
dec
fwait
das
mov
mov
scas
mov
mov
lds
jb
mov
xchg
ret
or
lahf
mov
mov
inc
sub
sbb
mov
dec
inc
adc
or
add
pop
lods
pop
add
push
adc
xor
and
xchg
mov
(bad)
leave
lahf
pop
mov
aam
mov
pop
test
fadd
mov
enter
or
sbb
ror
arpl
inc
rcr
mov
mov
mov
cdq
jle
sbb
test
sbb
aaa
mov
stos
out
cld
leave
cwde
out
and
sub
pop
scas
mov
clc
mov
fadd
fidivr
data16
xor
gs
ret
mov
fs
pop
sbb
icebp
in
fdivr
int
jp
pop
push
scas
mov
mov
sub
fdiv
cli
push
mov
shr
xchg
into
dec
sub
mov
mov
inc
push
add
xlat
adc
sub
dec
es
scas
loope
fwait
pusha
sti
test
mov
ins
test
enter
add
aad
jmp
add
mov
outs
mov
sub
cli
std
mov
in
btr
cmp
ss
xor
mov
lea
pop
jmp
xchg
jecxz
add
pop
adc
mov
out
xchg
jmp
sub
rcr
xor
mov
ret
push
pop
pop
sbb
dec
(bad)
call
dec
nop
adc
jmp
sub
sbb
cmc
jg
popa
scas
inc
pop
inc
sar
inc
and
jbe
inc
push
fucom
xchg
sbb
icebp
or
sbb
add
pusha
lods
in
aaa
(bad)
mov
pop
add
xchg
dec
imul
ret
repz
or
mov
mov
and
pop
jo
xchg
pusha
in
push
adc
dec
push
les
xor
adc
les
pop
mov
dec
sub
jno
(bad)
mov
cmp
(bad)
pop
test
fistp
sahf
(bad)
push
(bad)
jns
xor
inc
or
sbb
xor
inc
jp
in
pop
(bad)
sbb
inc
sbb
adc
cli
and
adc
mov
imul
sti
jo
adc
xlat
or
shr
mov
add
lock
push
stos
dec
ins
jmp
daa
aad
pop
outs
pop
cmp
stos
imul
das
loope
sub
sbb
mov
out
into
adc
xchg
imul
int3
xor
mov
add
jp
or
imul
daa
inc
ja
(bad)
aam
scas
and
ror
cmp
fimul
mov
je
loop
nop
and
dec
adc
ds
ret
ins
movs
adc
mov
ret
repz
int3
push
movs
cmps
loope
sbb
mov
sti
sahf
or
cmps
loopne
sar
sub
mov
xchg
fwait
jmp
(bad)
adc
fs
enter
sub
ror
sti
ds
sbb
pop
into
lods
push
loop
lock
push
xchg
mov
cmp
or
jno
push
sub
aas
inc
test
pop
ins
and
and
mov
rcr
or
push
daa
imul
cmp
jge
maxps
push
sti
ins
adc
sub
sbb
(bad)
pusha
cmp
test
inc
sbb
jo
in
jb
jle
ret
and
and
popf
rcr
fbld
scas
ret
add
mov
pop
mov
sub
or
sbb
dec
(bad)
ins
clc
jle
mov
pop
movs
rol
int
sub
and
push
push
xchg
or
cmp
pop
xor
dec
loope
dec
lahf
add
fimul
inc
pushf
repz
and
popa
adc
cld
je
into
shr
and
(bad)
fucomip
mov
call
(bad)
daa
xchg
sbb
in
pop
enter
pusha
or
fstp
les
cld
mov
fldcw
dec
inc
in
push
dec
out
pop
stc
xchg
mov
aad
les
xchg
mov
dec
imul
fnsave
cwde
stos
pop
add
inc
(bad)
cmp
jns
in
sbb
fisub
test
popf
inc
mov
pop
jmp
loope
scas
pushf
mov
add
loope
and
fld
out
cli
jnp
test
pop
sbb
loopne
pop
or
mov
xor
xor
jecxz
das
call
mov
lods
jg
and
(bad)
dec
sbb
xor
cmp
add
imul
mov
(bad)
in
xor
test
call
cmp
js
test
fdiv
nop
mov
push
pop
push
(bad)
adc
jmp
push
pop
push
pop
jmp
scas
aad
hlt
in
pop
ret
repz
adc
fdivr
jnp
in
push
out
fsubr
enter
div
push
fild
mov
inc
(bad)
jae
xor
xor
pop
xor
pushf
add
xchg
xor
(bad)
stos
mov
mov
push
rcr
mov
inc
mov
std
pusha
dec
ja
cmp
cmp
les
fisubr
hlt
das
call
pop
mov
dec
push
mov
xchg
fucomp
push
mov
and
jp
mov
add
pop
(bad)
not
cli
psllw
enter
(bad)
mov
pop
imul
loop
jecxz
xor
cli
or
movs
add
sub
sub
(bad)
cld
jecxz
mov
mov
hlt
xchg
(bad)
xor
scas
test
loope
hlt
in
cmc
xchg
idiv
movs
mov
mov
dec
cli
in
shl
sbb
cmc
jae
mov
test
icebp
in
jmp
cli
adc
sbb
mov
in
clc
enter
inc
ds
addr16
and
mov
ins
push
pushf
out
mov
pop
das
sbb
cwde
daa
gs
add
shl
push
in
mov
xchg
aad
xor
xchg
stos
lock
xor
hlt
cmp
(bad)
mov
repnz
jmp
xlat
cs
imul
jl
xchg
das
sub
cmp
mov
dec
cmp
out
inc
push
or
mov
mov
cmp
outs
cmps
(bad)
stos
mov
lods
sbb
or
sub
push
xor
jp
push
xor
outs
out
popw
xchg
mov
cmp
jp
retf
ds
adc
or
mov
xchg
les
outs
add
ror
shl
add
cmp
push
add
xchg
push
js
xchg
ret
adc
daa
push
ret
push
jge
jg
xor
lods
cli
idiv
shr
or
adc
scas
cs
idiv
pop
test
inc
out
rcl
jns
dec
pop
or
xor
nop
retf
or
pusha
int
fs
mov
bound
pop
xchg
shr
xor
mov
mov
adc
js
and
js
out
das
loope
ficomp
(bad)
stc
xor
xor
xor
into
lds
adc
pop
fidiv
imul
ins
test
push
xor
inc
retf
jne
ror
dec
icebp
adc
adc
xor
add
xor
lock
mov
sub
les
aam
jo
mov
cdq
inc
jb
sbb
push
in
add
adc
dec
sub
mov
inc
dec
mov
cld
scas
gs
imul
ret
sahf
sbb
mov
loope
data16
inc
mov
push
dec
jae
mov
rol
les
mov
(bad)
jb
sbb
inc
aaa
sub
mov
out
xor
sbb
mov
xor
mov
lock
ret
(bad)
adc
out
pop
xchg
sub
sar
hlt
jl
(bad)
popf
out
jne
sar
arpl
cmc
push
retf
adc
xor
test
add
dec
ret
inc
leave
pop
push
ds
call
pop
ret
iret
repnz
les
jb
cmps
xor
sti
stc
cwde
mov
xchg
cs
int3
xchg
pop
pop
inc
cmp
inc
outs
or
ds
cmp
popf
or
cmp
push
mov
push
out
adc
jmp
nop
scas
mov
je
xor
adc
inc
movs
out
jmp
icebp
dec
push
xor
or
je
pop
pop
mov
push
daa
scas
inc
sbb
sub
js
test
icebp
jne
inc
or
cmps
sbb
sbb
mov
adc
push
or
scas
or
pop
xor
lea
into
js
jge
cmp
push
mov
sahf
mov
(bad)
enter
mov
nop
hlt
mov
mov
pop
jecxz
test
push
and
arpl
jb
pop
fld
jmp
sahf
inc
popa
inc
xchg
pop
cli
mov
jae
aaa
(bad)
das
mov
lods
xchg
sbb
xchg
cmps
je
les
xor
mov
mov
cmps
call
jg
cwde
outs
cmp
ret
inc
or
cdq
sub
fisttp
jl
repnz
push
(bad)
ja
inc
ret
pop
nop
lahf
fbld
pop
sbb
add
sbb
fisubr
or
cmp
xor
shr
bnd
inc
in
xor
sub
jb
mov
xlat
movs
dec
xor
jp
or
cmps
(bad)
pop
fiadd
or
mov
mov
pop
mov
xchg
scas
nop
shl
cld
jge
dec
jmp
aas
dec
push
jne
add
frstor
jae
sbb
pushf
xor
mov
mov
or
mov
test
xchg
adc
inc
mov
pop
test
and
rol
shl
idiv
call
fistp
mov
xor
movs
add
push
jecxz
and
dec
scas
mov
add
movs
pop
add
xchg
xchg
add
or
stc
pop
int3
fwait
or
addr16
cmp
push
(bad)
fcomp
adc
nop
dec
sar
mov
mov
mov
aam
in
push
sub
adc
jmp
add
sbb
and
cdq
and
call
retf
push
mov
or
addr16
mov
mov
mov
mov
(bad)
push
jge
adc
cld
pop
popa
ja
sub
xchg
mov
push
clc
mov
leave
xlat
jno
pop
leave
fsubr
fadd
sbb
outs
nop
ins
push
scas
mov
out
cdq
xor
mov
pop
sub
mov
jle
ffree
xchg
mov
ret
pop
popa
add
das
imul
movs
pop
jmp
xor
mov
cli
sbb
jns
cmp
jno
nop
rcl
and
sbb
sbb
jmp
inc
inc
leave
stos
js
fwait
pushf
mov
or
sar
push
fwait
xor
cdq
in
xchg
mov
pop
pop
(bad)
cmc
ss
jecxz
xchg
inc
es
cmp
test
fdiv
sahf
or
fs
inc
xchg
sbb
dec
cmc
and
xchg
lods
repz
mov
and
cmps
sbb
mov
pop
cwde
out
fst
dec
add
lods
inc
(bad)
ret
jecxz
pop
mov
(bad)
dec
ins
sbb
ret
push
mov
push
(bad)
mov
scas
lds
rcl
imul
mov
inc
mov
lahf
movs
jbe
pop
and
sub
and
not
xchg
xchg
clc
mov
pop
test
or
jnp
push
push
bound
fisttp
shr
jne
jle
ins
dec
xchg
retf
into
push
xor
sub
push
xchg
mov
push
in
push
shl
or
ds
mov
popa
or
or
ja
aad
add
push
stc
movs
inc
dec
jno
retf
mov
xchg
sub
fild
addr16
daa
repnz
and
das
xor
aad
ret
js
in
hlt
and
push
jns
lods
bound
ror
sbb
add
sub
movs
jnp
mov
dec
mov
call
xchg
out
pop
and
xchg
mov
out
inc
ins
push
cmp
jo
push
les
sti
adc
xchg
sahf
je
into
mov
sub
mov
pop
test
pop
je
and
movs
out
pop
mov
sbb
ror
and
and
add
mov
mov
test
nop
stc
xchg
dec
call
pop
xor
clc
xchg
push
fxam
inc
arpl
cmp
ret
xacquire
sub
hlt
cmc
dec
sub
fucomp
or
xor
pop
cli
out
jo
in
out
data16
jp
push
jae
les
int3
sbb
fstp
fist
shl
(bad)
movs
push
rcl
popa
lea
dec
pushf
addr16
dec
mov
cld
adc
push
in
xor
xlat
cdq
jns
jp
cmp
jl
mov
cmp
mov
xchg
std
jl
pop
mov
sub
imul
mov
pop
jle
ins
rep
not
push
xor
adc
mov
outs
ja
or
fmul
push
pop
movs
add
xor
mov
sub
bound
jmp
movs
jmp
and
test
das
push
sub
push
mov
xchg
fst
and
out
xchg
xchg
dec
js
mov
movs
stos
sbb
push
mov
sbb
jmp
push
and
sbb
jmp
or
jo
je
sar
xchg
sub
jle
jecxz
outs
loope
mov
retf
rcr
pop
popa
mov
xor
in
dec
jae
sbb
add
addr16
inc
xchg
or
mov
retf
fstp
lods
popf
xchg
jno
and
mov
xor
bound
mov
cli
repz
shr
in
mov
outs
or
in
xchg
cmp
mov
aas
xor
add
sub
xor
pop
mov
push
(bad)
leave
das
fwait
ret
imul
(bad)
push
push
hlt
push
(bad)
fld
out
sub
mov
iret
jnp
fcomp
push
mov
pop
imul
lea
push
popf
pop
jns
cmp
cwde
pushf
push
adc
lods
push
cmp
jg
out
aaa
loop
in
sub
add
push
rcr
xor
pusha
lock
div
inc
pop
and
mov
xchg
sbb
jns
push
mov
cmps
and
lods
mov
cld
cmc
sub
mov
test
jmp
sysexit
imul
pop
int
sbb
lea
pop
popa
jbe
(bad)
mov
or
rcl
ret
mov
outs
xor
mov
cmps
stc
dec
daa
mov
sub
scas
popf
adc
sub
push
popa
hlt
in
and
adc
std
or
mov
lock
aaa
ror
inc
stos
sbb
dec
sub
push
inc
sbb
mov
jno
jecxz
mov
call
scas
add
mov
cmp
xchg
out
sub
and
jbe
loopne
fcmovnb
or
dec
loop
xchg
mov
or
jl
sar
or
sbb
xchg
or
pop
sub
mov
dec
sti
xchg
(bad)
movs
popa
mov
stos
(bad)
and
cmp
lahf
cmp
(bad)
push
add
cmc
mov
(bad)
ror
mov
loop
push
or
cdq
scas
(bad)
sti
adc
dec
mov
mov
push
mov
sub
mov
and
fisttp
dec
and
add
jmp
sbb
loopne
jo
(bad)
in
pop
aad
sti
dec
mov
mov
add
adc
rol
dec
addr16
mov
stos
pop
movs
cmp
leave
iret
ret
xchg
mov
mov
rcl
call
popa
mul
mov
mov
stc
adc
cmp
(bad)
push
mov
cwde
int3
jle
cmp
stos
sub
retf
push
inc
aad
cs
push
jmp
add
(bad)
pop
push
and
sub
mov
jo
fs
cld
xchg
inc
sbb
iret
les
push
xor
fstp
outs
push
xor
jg
add
cs
shr
inc
xchg
clc
xor
rcl
cs
retf
jg
adc
mov
outs
pop
dec
push
movs
arpl
les
test
mov
imul
inc
jno
fcomip
push
iret
outs
sub
lds
jge
ss
test
mov
dec
cld
icebp
push
stos
xchg
xchg
test
sbb
sbb
inc
movs
sbb
mov
lods
sub
cmp
mov
pop
push
in
sub
mov
in
sbb
mov
popf
xchg
mov
add
loope
fild
mov
pop
push
jmp
xchg
lock
movs
fisubr
sbb
loopne
mov
mov
or
or
push
(bad)
cmp
push
aad
call
in
and
scas
inc
out
scas
jg
mov
test
xchg
std
(bad)
pop
inc
mov
cmps
cmc
dec
mov
test
and
pop
shl
retf
sbb
pop
icebp
shl
(bad)
in
sbb
enter
fldenv
cmp
gs
jmp
sbb
or
fs
dec
int
leave
retf
in
mov
ins
clc
ins
out
clc
mov
mov
mov
stos
xchg
enter
mov
daa
retf
cmp
jl
(bad)
and
or
sub
retf
xchg
or
mov
gs
outs
pop
sub
test
lds
pusha
shl
pop
(bad)
stos
stc
dec
mov
cs
add
cmp
retf
(bad)
dec
pop
mov
inc
sbb
arpl
into
ror
mov
xchg
ds
test
sub
jnp
xchg
iret
sub
pusha
retf
icebp
(bad)
out
pushf
or
aas
cmp
sbb
dec
shl
inc
add
lock
das
mov
adc
xchg
cwde
movs
stos
dec
sbb
and
jl
sub
(bad)
movs
xchg
and
jbe
mov
mov
imul
mov
(bad)
retf
push
fsubrp
inc
aaa
or
sub
pusha
push
jle
es
and
dec
test
dec
xor
cmps
cmp
fs
xchg
into
cmp
xchg
mov
inc
fs
cld
ret
pop
mov
sbb
mov
imul
jne
iret
xchg
mov
nop
dec
fwait
push
loop
push
add
mov
xchg
out
sub
mov
sti
fst
test
jmp
(bad)
dec
or
jle
adc
xchg
dec
cld
or
je
jo
pop
pop
nop
mov
pop
repz
movs
adc
inc
fdivr
stc
adc
jmp
dec
jmp
xlat
(bad)
fist
xor
pop
or
dec
adc
fst
inc
mov
cmc
dec
mov
into
call
xchg
and
cmp
add
mov
jmp
xor
inc
mov
(bad)
add
test
retf
mov
cmps
sar
xchg
les
std
jb
ss
lea
cmps
adc
mov
jo
shl
mov
adc
or
sub
mov
pop
add
and
fwait
ins
data16
ds
lods
fs
pushf
cmp
xor
pushf
push
mov
jne
adc
pop
mov
mov
fbld
std
mov
mov
jae
mov
xor
ins
out
fidivr
xchg
into
mov
push
mov
adc
loop
xchg
fist
mov
cli
dec
pop
aad
cmp
bound
inc
je
aaa
(bad)
das
sub
sbb
inc
jns
jmp
mov
or
jmp
xor
jb
ficomp
sub
jns
daa
push
mov
sar
ins
ins
or
cld
aam
loope
(bad)
imul
mov
mov
inc
cwde
sub
and
nop
mov
mov
jp
jp
jecxz
push
inc
(bad)
jae
and
fadd
mov
inc
inc
pop
addr16
lea
dec
rol
lds
sar
jns
xchg
ss
dec
sbb
inc
sbb
or
sbb
and
mov
(bad)
(bad)
push
or
imul
loop
iret
inc
inc
cmp
dec
xlat
pop
cmp
vunpckhps
nop
lock
cdq
loop
aad
retw
in
sti
das
push
(bad)
and
xchg
inc
xchg
pop
or
cmp
inc
retf
jmp
jge
mov
xor
dec
(bad)
daa
pop
data16
fs
adc
inc
retf
xchg
fwait
movs
mov
sbb
in
(bad)
ds
fmul
lahf
clc
push
add
or
(bad)
jl
clc
xchg
in
push
pop
add
fcmovnb
mov
adc
or
add
retf
arpl
xor
push
mov
fbstp
repnz
fincstp
dec
sti
mov
sahf
add
test
adc
int
sbb
push
repz
mov
push
mov
aaa
repz
(bad)
mov
enter
sub
jo
jmp
pop
imul
xchg
ins
fsubr
push
(bad)
out
jae
sbb
xchg
mov
cmp
dec
in
retf
adc
push
dec
cmp
jb
neg
stos
inc
dec
sbb
jmp
in
enter
mov
push
mov
pop
xchg
loope
inc
inc
xlat
xor
out
movs
into
adc
das
int
mov
out
mov
add
push
xchg
cmp
(bad)
sub
sti
rcl
push
jae
dec
(bad)
or
push
clc
push
dec
test
dec
mov
bound
test
(bad)
sar
movs
fmul
movs
dec
inc
not
ss
cmps
icebp
mov
or
stos
test
mul
(bad)
movs
div
or
add
sbb
pop
add
sub
jg
lods
jge
mov
out
cwde
cmps
stc
cdq
inc
cmp
out
jl
push
call
sbb
xchg
dec
sbb
data16
std
dec
inc
into
sti
mov
hlt
adc
push
fsub
sub
push
rol
aad
push
fdiv
(bad)
sub
int
addr16
adc
sub
mov
in
xor
push
push
clc
cmps
imul
jne
mov
xchg
addr16
xchg
in
mov
in
xchg
jle
bound
das
cmp
xlat
xor
inc
xchg
cmp
inc
xor
arpl
cmp
jne
adc
ja
and
dec
sub
imul
pop
jmp
int3
push
repz
jp
push
push
into
or
bswap
outs
mov
fs
mov
call
dec
loopne
add
mov
mov
cmc
cmp
leave
mov
sahf
repz
lock
imul
sbb
push
jle
and
sub
stc
sub
mov
out
clc
xchg
scas
xchg
fs
das
jns
lock
xchg
fdiv
jno
xchg
(bad)
cwde
stos
mov
xor
fnstenv
outs
lods
sbb
jg
mov
stos
push
mov
stos
aas
push
xchg
test
popf
sub
ins
call
scas
sub
aam
xchg
jmp
enter
xchg
scas
ret
dec
std
aam
rcr
mov
or
aad
push
daa
sbb
ret
push
cdq
sub
rcl
cwde
scas
js
int3
add
add
fisubr
rcr
cmp
stos
sbb
push
jp
push
popf
xor
nop
lahf
das
shl
or
sbb
int3
and
ins
stos
sbb
mov
nop
cli
mov
jg
dec
stos
sti
call
mov
lahf
cmc
jbe
mov
mov
sti
cli
retf
dec
rol
lds
jno
push
aas
popa
aaa
loopne
adc
(bad)
sub
test
jne
xchg
les
imul
inc
mov
jge
scas
xor
(bad)
in
xor
mov
xchg
dec
dec
pop
js
shl
ins
(bad)
dec
xor
(bad)
jle
mov
fstp
push
scas
xor
rcr
sub
jno
data16
push
repnz
and
cmp
or
and
in
sbb
inc
mov
and
imul
test
movs
push
addr16
and
test
jbe
dec
unpckhps
mov
lock
imul
fdiv
lahf
daa
popf
js
sahf
xchg
fldenv
mov
in
inc
leave
stos
xchg
lods
jo
lods
shl
mov
mov
jb
add
aam
cld
cdq
push
xor
dec
sbb
arpl
push
mov
pop
mov
or
mov
lock
xchg
mov
dec
and
mov
mov
pop
inc
into
fcomp
pop
ins
pusha
dec
(bad)
jae
or
popf
pusha
adc
pop
sahf
push
jge
xchg
icebp
ja
pusha
push
imul
div
sub
mov
aas
fs
dec
jns
xchg
xchg
xor
loop
arpl
xchg
jle
inc
add
leave
mov
cli
aam
add
lahf
push
xor
aad
lds
and
out
inc
hlt
push
stos
call
push
js
out
test
scas
jle
and
mov
xchg
stc
jl
jecxz
imul
pop
ds
or
retf
pushf
std
and
jne
dec
pop
stos
icebp
pop
pop
imul
xchg
xor
jns
push
cmps
les
or
popa
popa
fld
cdq
mov
enter
inc
(bad)
shl
fnsave
xchg
ror
sub
(bad)
addr16
jl
jb
outs
(bad)
xchg
adc
push
ss
aaa
cmp
jo
rol
jns
repnz
pop
pop
sbb
shr
aas
popf
mov
mov
lock
mov
in
fcom
xchg
sub
nop
sub
or
jp
lock
lea
push
add
push
mov
out
xlat
sahf
push
imul
mov
imul
fwait
and
movs
add
imul
rcr
sbb
mov
inc
adc
mov
test
jbe
mov
test
sub
cmps
clc
inc
icebp
(bad)
fidivr
scas
rol
dec
xor
mov
xchg
adc
mov
(bad)
cmps
or
fistp
or
fs
dec
xchg
les
lods
nop
in
dec
xchg
rcl
push
data16
jl
adc
sub
movs
sub
icebp
mov
mov
jmp
sbb
mov
sub
mov
xchg
in
add
add
repz
mov
xchg
inc
fs
arpl
mov
daa
xor
test
and
aam
ja
xchg
mov
mov
js
push
test
gs
je
lock
xor
sub
push
mov
outs
mov
aaa
jne
ja
pusha
cli
(bad)
(bad)
mov
inc
out
mov
mov
xor
retf
stos
mov
and
pop
fisubr
inc
sbb
adc
inc
rcr
das
xchg
sbb
mov
int
cmps
xor
lahf
in
pop
push
test
aaa
adc
shr
cld
lods
xchg
ret
pop
(bad)
xlat
cmp
repnz
in
jl
add
pusha
sbb
or
scas
aas
and
fnstsw
je
ret
pop
xchg
mov
adc
pop
fnsave
loope
push
ja
mov
sahf
daa
or
shl
sbb
leave
fwait
sar
mov
movs
iret
sbb
inc
scas
mov
aaa
mov
call
xor
fild
out
jno
retf
dec
fbld
mov
push
jnp
push
out
std
rcr
pop
cmp
add
mov
dec
(bad)
xlat
pop
push
loopne
and
repz
jmp
es
cmp
(bad)
scas
mov
lods
call
adc
or
sub
mov
repz
jecxz
cmp
sti
lods
xchg
in
xchg
mov
adc
mov
jg
scas
jg
mov
clc
data16
aad
cwde
push
push
mov
add
cmp
add
and
sub
std
imul
jne
add
fcmovnbe
and
mov
mov
js
sbb
lds
inc
jne
adc
pop
ret
fwait
push
pushf
mov
inc
pop
adc
lahf
aaa
mov
inc
gs
lea
cmc
mov
mov
lea
std
sub
push
(bad)
in
cmps
mov
adc
cmps
jmp
dec
lock
fdivr
ret
mov
shl
push
aad
cdq
popa
sar
and
sbb
sbb
push
leave
call
rep
adc
adc
mov
daa
and
test
push
cld
lea
add
inc
pop
in
push
xor
pop
gs
pop
in
dec
and
je
jmp
jecxz
rol
sub
ret
push
ds
scas
aad
dec
dec
in
jmp
push
call
pop
lods
mov
dec
adc
xchg
(bad)
int3
adc
xor
adc
fnsave
xchg
lahf
aam
fucomip
(bad)
dec
repz
movs
int
jno
sbb
xor
pop
jae
aas
mov
add
mov
add
lea
push
jb
xor
fisub
fistp
out
fcmovnbe
jno
xchg
add
add
push
fwait
cmp
nop
outs
shl
cdq
rcl
mov
out
mov
sub
add
mov
mov
xor
jo
jno
cmp
adc
dec
ficomp
(bad)
push
cwde
lock
cmp
neg
push
fistp
stos
mov
inc
fiadd
in
push
mov
push
mov
inc
add
mov
lahf
cmps
mov
ja
dec
das
popa
repz
mov
inc
push
push
jp
push
dec
out
or
xchg
push
mov
jmp
fldcw
xor
lods
adc
and
aas
mov
push
add
(bad)
adc
lods
mov
mov
mov
cwde
xor
ss
mov
arpl
xor
cmp
(bad)
push
cwde
sub
lahf
adc
mul
loopne
inc
imul
mov
or
dec
and
cmp
and
js
scas
retf
xchg
cmp
pusha
pusha
ror
out
push
loop
je
mov
aaa
lahf
out
out
popf
cdq
fsubr
imul
fcmovne
or
add
lahf
scas
out
jmp
mov
(bad)
or
sub
xchg
sub
pop
or
retf
scas
mov
hlt
jbe
or
dec
pop
adc
ret
dec
adc
inc
inc
sti
dec
pop
mov
jecxz
inc
mov
(bad)
fcmove
jl
jnp
inc
mov
icebp
push
mov
xchg
shr
mov
xor
add
pop
nop
sbb
mov
push
adc
push
sbb
xor
xor
push
test
sbb
pop
(bad)
cmp
mov
xchg
jmp
xchg
sub
or
mov
sbb
shl
mov
cmp
jne
ja
fdiv
fistp
mov
dec
mov
pop
mov
xchg
fisub
popa
or
pop
add
loope
pop
retf
(bad)
in
jbe
out
jnp
jnp
hlt
cld
std
pop
adc
inc
std
shl
repz
sub
outs
lods
dec
fs
aas
jmp
fst
idiv
vmread
cmp
push
lahf
popa
out
or
mov
jb
and
je
cmps
call
jmp
inc
and
adc
addr16
out
loope
mov
inc
jg
test
mov
jnp
or
mov
xchg
mov
hlt
popf
test
jp
push
dec
add
movs
popf
sub
xchg
jnp
cmp
sub
icebp
sbb
repnz
or
cmps
xchg
jmp
sti
jns
dec
jl
dec
mov
and
fwait
xor
retf
pushf
dec
jo
iret
imul
enter
test
mov
test
cmp
cmp
push
xlat
dec
daa
jne
inc
in
jmp
out
shr
xchg
jns
sub
xchg
push
inc
mov
out
mov
and
aas
jne
push
clc
(bad)
mov
scas
mov
lods
rcl
fldlg2
mov
or
ins
adc
stos
inc
mov
ret
and
ficom
ror
addr16
stos
ins
(bad)
cmp
xor
jnp
bound
out
pop
inc
pop
jbe
xor
out
(bad)
test
call
cmp
outs
mov
lods
sbb
sbb
mov
pop
sbb
dec
test
push
js
xlat
fcomp
inc
cmp
mov
xchg
lds
jmp
mov
sub
cdq
stc
add
xchg
fwait
inc
ins
and
and
sub
fdiv
lods
cmps
daa
pop
movs
sbb
dec
test
stc
xchg
cs
dec
pop
in
sbb
mov
cmp
mov
lock
xor
cmps
pushf
and
mov
fisttp
fdiv
aad
cmc
sub
hlt
stc
mov
sub
call
jge
out
pop
dec
jbe
pop
scas
sub
mov
jns
lahf
(bad)
cmp
jmp
adc
int3
jecxz
cmp
les
shl
fist
scas
mov
sahf
fidivr
adc
inc
fiadd
ret
arpl
and
stos
pop
mov
cli
inc
stos
ror
test
jp
(bad)
lds
std
xchg
call
les
push
sub
add
ds
xchg
xchg
jg
push
sti
punpcklwd
pusha
inc
aas
add
inc
(bad)
gs
popa
lods
sbb
jecxz
inc
pop
pop
outs
cmp
xor
mov
push
mov
mov
xor
push
jecxz
push
inc
add
mov
ins
ds
test
cmp
test
pop
sbb
mov
mov
cmc
push
push
adc
jmp
pop
aam
push
mov
pop
xchg
inc
xchg
aas
jb
js
inc
movhps
cmps
mov
and
(bad)
rcr
jo
call
(bad)
push
xchg
pop
push
outs
lea
ja
(bad)
clc
mov
pop
pop
dec
or
mov
adc
adc
hlt
xor
jecxz
pusha
xchg
cmp
xor
cwde
xchg
xor
ja
addr16
pop
adc
iret
push
cwde
repz
mov
pop
pop
dec
fs
jl
in
data16
jecxz
push
mov
loop
imul
push
mov
sbb
(bad)
mov
mov
mov
call
xlat
out
inc
mov
sbb
sub
add
enter
jecxz
fadd
jp
and
pop
xor
cld
mov
std
data16
push
xlat
cmp
xor
dec
jg
push
dec
clc
jo
cmp
jb
(bad)
ja
xor
sbb
test
in
mov
aad
in
fsub
and
push
xchg
sbb
sti
and
xor
cmps
cwde
xchg
iret
xchg
add
add
cmp
fild
scas
cs
out
and
inc
or
data16
inc
and
lahf
or
cmc
dec
xchg
adc
leave
jb
jp
bound
mov
popf
les
mov
imul
cmp
add
add
mov
push
and
xor
dec
xchg
and
sbb
fstp
mov
aad
jnp
out
fldenv
ficom
fistp
sub
ins
jle
mov
inc
mov
addr16
loopne
out
sbb
sbb
ins
cmps
xchg
mov
xchg
test
into
jmp
das
addr16
cdq
data16
rcr
jmp
(bad)
in
outs
or
pop
ret
mov
jle
push
inc
adc
call
add
xor
aaa
jmp
out
out
lods
repz
mov
or
pop
ins
rol
or
add
jo
jmp
loopne
jb
les
dec
les
(bad)
and
repnz
add
clc
adc
cmps
ret
pop
sbb
pusha
mov
xor
sbb
jnp
inc
ins
mov
out
push
add
hlt
dec
(bad)
fcomp
mov
mov
ds
(bad)
lds
add
out
rol
and
cwde
sahf
rol
sbb
std
inc
xor
adc
test
or
ror
scas
dec
out
pop
lock
aad
enter
xor
fisttp
sub
cmc
retf
iret
das
cmps
cwde
(bad)
outs
cmp
dec
dec
mov
push
hlt
test
repnz
xor
out
dec
jle
int3
fild
jae
(bad)
xchg
xchg
mov
push
xchg
scas
lea
jns
add
cmp
jae
jle
(bad)
mov
fwait
mov
cmp
xchg
cmp
leave
clc
push
push
cmp
sub
popa
jp
cwde
xor
xor
fmul
ss
call
sub
mul
inc
dec
test
or
mov
loop
cdq
loopne
(bad)
loope
push
pop
sub
(bad)
lods
push
les
ins
bound
lods
fs
adc
push
mov
inc
or
cwde
mov
pop
sbb
lea
pop
xchg
neg
sbb
add
ficomp
push
arpl
mov
aaa
aaa
ror
cmp
sahf
or
push
push
movs
fdiv
xchg
dec
dec
retf
or
scas
mov
loope
xchg
fimul
inc
test
nop
push
inc
je
enter
lock
retf
stos
pop
xchg
jae
ja
sbb
adc
test
and
jecxz
(bad)
sbb
jmp
push
mov
in
xchg
jmp
xchg
jmp
cld
mov
ss
movs
jp
add
pop
mov
pop
ror
nop
xchg
mov
cmp
jg
sub
ds
lock
xchg
div
js
xchg
push
pop
stc
iret
popa
sub
push
fstp
sub
xor
aaa
push
je
pop
andps
mov
std
inc
sub
lea
inc
stos
xor
ja
or
std
daa
xchg
inc
cmp
jg
sbb
and
adc
xor
jnp
add
je
jmp
out
(bad)
jl
nop
gs
push
pop
dec
cmp
in
jnp
ins
icebp
aad
fdivr
mov
lods
call
pushf
and
icebp
mov
add
(bad)
mov
pop
js
in
jmp
jbe
mov
sar
in
and
sub
jno
out
mov
shr
in
mov
dec
push
shr
add
jmp
mov
subps
mov
shl
pop
js
jae
jp
adc
(bad)
popa
add
adc
arpl
add
inc
loopne
daa
pop
inc
loop
hlt
add
clc
cli
push
pushf
mov
cmp
and
test
(bad)
lea
xchg
jecxz
cmp
pop
lahf
sub
fidivr
jecxz
jecxz
fs
jmp
pop
icebp
adc
enter
adc
sub
sar
cmc
sbb
push
push
stos
iret
ror
bound
test
or
call
push
inc
std
jecxz
dec
(bad)
adc
sahf
cmp
dec
jb
cmps
stc
ja
jae
push
lods
and
hlt
inc
add
push
inc
outs
outs
sbb
jmp
or
(bad)
cli
mov
adc
jae
push
fs
sbb
mov
mov
jle
shl
jecxz
inc
in
data16
jmp
sar
imul
in
int3
sahf
in
jge
dec
call
fsub
push
jmp
pop
xor
add
(bad)
jno
fist
enter
cld
adc
sub
fidiv
outs
stos
jl
cld
xchg
cmp
lock
out
pop
test
aad
push
int3
xor
bound
inc
in
data16
mov
xchg
and
sbb
daa
sbb
(bad)
aaa
cmp
iret
test
mov
in
sub
xor
cmp
xlat
add
xchg
or
xchg
int
mov
sub
dec
mov
imul
cmp
aaa
cmp
nop
adc
fucompp
adc
hlt
enter
push
data16
test
mov
fwait
add
push
or
mov
mov
mov
xchg
fucomip
inc
dec
ret
xchg
add
shl
push
test
adc
adc
inc
and
or
push
(bad)
outs
aam
sub
sub
daa
jae
mov
lods
push
mul
lock
jl
pand
xchg
cmps
jmp
arpl
(bad)
sbb
cmp
scas
add
sbb
xchg
lock
ja
imul
adc
scas
(bad)
cmp
loope
push
pop
addr16
mov
ja
inc
cdq
mov
int
test
shl
cmps
adc
adc
sub
jp
adc
jle
lods
inc
retf
pusha
jbe
(bad)
push
cmp
popf
sbb
fcomp
inc
mov
xchg
ret
and
or
scas
mov
mov
mov
stc
fistp
jmp
daa
push
ins
(bad)
adc
sbb
cli
jnp
sbb
test
mov
or
or
cmp
pop
repnz
mov
push
movs
jl
out
je
xchg
(bad)
sbb
push
xor
mov
or
stos
arpl
fsubr
addr16
iret
xchg
xchg
dec
hlt
mov
lods
aas
jp
ret
sub
daa
mov
sub
imul
retf
inc
aas
ins
push
jge
xchg
daa
xor
nop
call
fistp
inc
cmps
(bad)
xchg
xchg
aad
push
ja
jmp
ins
cwde
lock
jg
xor
cmp
push
in
in
popf
gs
movs
mov
out
iret
aas
cwde
es
and
fcom
pop
and
mov
sub
pop
or
mov
xor
loop
adc
fmul
test
mov
sbb
call
cmps
popf
(bad)
xchg
xchg
pop
pusha
(bad)
cdq
mov
addr16
std
or
ret
out
aas
aad
into
dec
sub
add
fsub
or
jle
pop
imul
(bad)
jle
mov
leave
and
(bad)
pop
lods
adc
add
adc
push
sub
add
or
iret
in
and
test
ja
cwde
das
sahf
dec
jl
jmp
rcl
lahf
pusha
jl
jne
shl
add
iret
push
mov
(bad)
in
test
mov
inc
push
or
addr16
xor
mov
(bad)
adc
scas
mov
jbe
hlt
lock
ror
dec
cdq
add
pop
rcl
test
mov
in
pop
adc
pop
adc
js
retf
fdivr
pop
push
shr
mov
clc
sub
and
inc
inc
push
pop
scas
inc
fcomip
popf
loop
push
cs
imul
in
enter
loopne
jp
jge
xchg
call
mov
pop
add
div
int
(bad)
shr
dec
or
hlt
js
cli
xchg
pop
mov
mov
xor
mov
xchg
loop
push
fcmovbe
sub
es
push
cmp
pop
push
add
mov
sar
xchg
fnstenv
inc
rol
push
xchg
sti
mov
(bad)
lock
fst
jbe
cmp
or
pop
addr16
inc
in
xor
fld
or
enter
mov
dec
xchg
inc
les
xor
lahf
or
fdiv
adc
and
mov
ins
retf
rol
xchg
stos
push
cmp
add
mov
cwde
mov
or
imul
mov
inc
fistp
ins
data16
fst
std
mov
cmps
int
mov
push
addr16
pop
pop
ja
(bad)
xchg
iret
fist
pusha
shl
int3
fmul
jb
test
xchg
cli
mov
and
and
or
mov
int3
les
(bad)
hlt
cmp
repnz
add
sbb
cli
sti
xchg
addr16
pop
neg
jno
xchg
pop
mov
mov
mov
pushf
enter
ret
aaa
hlt
fstp
fld
dec
jl
movs
loope
frstor
pusha
mov
int
in
sbb
ins
mov
mov
cli
add
hlt
inc
cwde
in
adc
xor
loope
sub
cs
iret
cli
loopne
sub
pop
ins
sbb
in
mov
pushw
scas
xor
or
or
sub
xchg
mov
adc
pop
mov
pop
imul
cmp
sub
mov
sub
lods
fldcw
dec
aas
add
pop
stc
jb
mov
aas
ins
aas
pop
jmp
rep
movs
push
dec
test
(bad)
mov
jb
iret
(bad)
add
mov
inc
push
adc
xor
popf
out
inc
pusha
mov
jns
test
cmp
nop
pop
std
pop
jae
out
das
stc
out
pop
dec
sub
mov
mov
push
out
repz
jo
scas
lea
and
int
cmp
bound
stos
pop
enter
xchg
movs
inc
addr16
shl
test
adc
mov
xchg
pop
fsub
daa
jnp
push
cmp
pop
lea
push
movs
xchg
fbld
cmps
dec
push
sti
lods
xchg
jo
jno
dec
xor
xor
imul
ret
xor
xchg
(bad)
cli
mov
pop
cmp
ficom
mov
cmp
sub
aam
adc
les
pop
or
aas
mov
jecxz
mov
imul
dec
arpl
push
or
dec
mov
bound
ret
in
cmp
jp
in
cmps
push
jno
les
or
mov
mov
test
in
adc
dec
ficom
jns
stos
psubsw
push
into
call
xlat
mov
sbb
inc
push
jmp
test
pop
sbb
or
(bad)
imul
mov
pop
or
(bad)
aaa
out
inc
mov
inc
cwde
sub
fld
xor
mov
xor
(bad)
xor
fisub
sbb
(bad)
fiadd
jmp
iret
rol
lods
test
add
in
addr16
inc
mov
xlat
rol
(bad)
lahf
aas
add
mov
mov
pop
aam
in
and
int
test
or
mov
xor
pop
sub
pop
in
and
ss
fs
cmp
jl
in
jmp
push
ins
jnp
mov
cdq
(bad)
out
sbb
test
imul
fndisi(8087
mov
jmp
pop
mov
aam
cmp
xchg
adc
jmp
out
adc
push
mov
out
out
je
lock
add
mov
inc
popf
mov
imul
pusha
not
enter
jns
les
push
jecxz
sub
pop
popa
sbb
add
mov
jne
(bad)
jmp
bound
cmp
rcl
mov
mov
and
xchg
and
test
std
pop
and
dec
pusha
sti
lea
adc
xchg
inc
cld
cmp
pushf
test
gs
jmp
sub
sub
lock
pop
mov
and
fwait
mov
lds
int
pop
and
(bad)
sahf
xor
cs
nop
mov
dec
push
add
mov
ret
and
(bad)
jmp
mov
xor
xchg
adc
pop
lods
movs
js
jecxz
stc
pop
push
pop
push
int
and
add
packsswb
retf
mov
rcl
aas
out
int
cli
aad
cs
push
sub
cmc
xor
fdivr
aas
push
lds
outs
repnz
mov
inc
nop
sub
jne
(bad)
mov
popa
xor
add
sbb
push
sbb
fbld
push
sub
fld1
pop
arpl
movnti
out
jg
test
xor
into
arpl
cmp
xor
into
jns
pop
pop
inc
pop
mov
jl
int
fs
imul
retf
popf
not
fcom
in
mov
mov
popf
es
jp
es
push
sub
int3
xchg
mov
add
xor
sbb
cli
jno
inc
out
shr
or
mov
dec
sti
cmp
push
mov
scas
out
into
cmc
aam
repz
aad
push
inc
jmp
pop
lock
pop
loopne
movs
push
retf
or
mov
cmp
jmp
jo
ficomp
lahf
pusha
popa
mov
(bad)
jle
push
sub
cmp
sar
iret
push
(bad)
mul
and
aad
and
jge
imul
fcomp
ror
xor
pop
sub
sub
mov
mov
pop
dec
sub
push
adc
int
pop
imul
jnp
pop
push
dec
jnp
cwde
shl
jle
dec
sbb
test
xchg
jg
mov
push
or
mov
pusha
retf
add
pop
fxch
xor
mov
(bad)
mov
lock
cmp
dec
push
fld
ins
adc
adc
adc
mov
cli
popa
or
push
xlat
xchg
(bad)
imul
iret
dec
pop
sahf
lock
loop
sub
jecxz
scas
fdiv
stos
cmp
outs
(bad)
lds
jbe
(bad)
aas
std
xor
mov
xchg
cmc
rol
inc
pop
xchg
retf
stos
mov
in
mov
mov
mov
push
retf
stos
fbld
(bad)
mov
and
enter
scas
xchg
cmp
pushf
mov
inc
xor
scas
aam
imul
out
adc
dec
test
dec
gs
retf
cmps
cmp
in
jno
cmps
sub
outs
add
push
jno
push
into
cmp
je
outs
sub
sbb
mov
(bad)
aam
xor
imul
xchg
gs
out
sub
mov
test
ss
stos
jecxz
or
(bad)
mov
das
push
cmps
mov
jle
div
(bad)
enter
jb
dec
das
cs
ins
imul
test
in
loop
inc
stos
pop
mov
jp
rol
mov
das
add
(bad)
push
hlt
ret
psraw
ficomp
in
adc
mov
jle
(bad)
pop
dec
xlat
ins
sub
mov
fdiv
dec
cmc
sbb
jno
adc
add
jns
movs
cmp
sub
sbb
dec
in
sub
and
cdq
sbb
xor
retf
dec
inc
les
shl
jp
xor
je
js
mov
inc
cmps
push
and
addr16
fadd
pop
xor
jmp
jne
call
fcom
stos
icebp
lock
and
test
xor
mov
sbb
dec
pop
dec
sub
xchg
push
std
je
popf
push
push
and
fld
push
in
aaa
in
or
(bad)
adc
pop
mov
fdivr
adc
mov
jbe
mov
fsub
adc
retf
cmps
fisub
and
xchg
pop
adc
int3
aas
push
mov
ds
iret
push
jnp
add
in
mov
adc
in
fld
neg
add
imul
js
xor
mov
mul
push
nop
jno
push
test
mov
out
cmp
in
mov
cdq
push
scas
jns
scas
xchg
and
(bad)
icebp
test
out
push
add
iret
jg
add
retf
jo
mov
fucomip
dec
(bad)
ret
sbb
xor
push
sub
outs
adc
sbb
xor
cdq
sub
or
cmp
dec
mov
in
sub
push
adc
popa
call
mov
xor
mov
mov
and
lahf
mov
adc
repz
mov
and
shl
cmc
push
mov
imul
clc
stos
or
int
fs
loop
movs
movs
ins
popf
jp
rcl
jb
pusha
cld
dec
ss
xchg
int3
int
jmp
ins
mov
test
js
inc
repnz
jne
sub
and
(bad)
cmps
bound
push
mov
repnz
jb
fisub
jmp
adc
pop
das
scas
lea
cmp
out
sbb
int3
ret
push
pop
fsub
inc
mov
inc
jp
jns
cdq
dec
inc
out
sbb
popf
aam
stos
or
retf
dec
inc
sti
ret
push
fild
jmp
dec
adc
xchg
fbstp
push
fcomp
pusha
stc
pop
mov
imul
ror
out
mov
push
sti
and
push
shld
nop
push
jb
jbe
retf
push
jbe
jmp
(bad)
push
ins
pushf
sub
and
mov
mov
out
aam
or
xchg
pusha
jge
add
dec
push
loopne
or
jne
repz
stos
adc
cmp
push
sar
fsub
mov
mov
add
jno
inc
retf
add
adc
pusha
mov
lahf
xlat
or
mov
retf
call
xor
mov
ret
mov
mov
xor
imul
mov
xchg
test
ret
add
xor
add
ins
and
and
pop
xchg
or
and
jg
cmp
xchg
and
fdivr
xor
aaa
lahf
sub
(bad)
add
and
ficomp
xor
cmp
dec
add
mov
xchg
ror
adc
adc
in
fldcw
mov
daa
fcomip
jne
aaa
cld
sbb
xor
mov
ja
std
(bad)
out
mov
push
mov
cmps
(bad)
mov
mov
push
dec
stc
je
int
inc
leave
popf
ret
pop
je
push
mov
gs
test
dec
ins
and
xor
imul
add
fsubr
add
int
idiv
popf
shl
and
mov
push
out
pop
inc
push
xor
xchg
popa
or
jnp
sbb
inc
loop
and
cwde
jmp
pop
fs
(bad)
loope
pop
push
add
sbb
lods
sbb
pop
das
mov
mov
mov
dec
jb
sahf
add
je
jle
cwde
stc
inc
repnz
pop
in
lea
test
bound
fdivr
add
mov
or
jno
loopne
mov
sbb
test
gs
adc
pusha
jmp
test
or
fnsave
sti
(bad)
push
nop
pop
lock
shl
push
(bad)
mov
xchg
jl
cmp
test
test
bnd
das
ds
aam
cmp
mov
cdq
(bad)
mov
add
xor
(bad)
jne
popa
lds
sub
dec
pop
or
sbb
or
test
repnz
mov
hlt
cmc
je
es
pop
scas
fiadd
into
out
adc
jnp
fstp
ins
jno
ja
lock
loope
sub
push
pop
rcl
xor
aas
jmp
stos
add
test
sbb
leave
in
(bad)
daa
or
in
pop
add
ret
adc
clc
xor
into
push
das
cmp
retf
retf
dec
jecxz
call
cmps
pop
mov
sub
dec
add
sub
mov
out
xchg
imul
stos
jb
cmp
or
lods
pop
(bad)
in
js
cmp
outs
(bad)
cmc
or
mov
sbb
xchg
and
mov
mov
cwde
xchg
jnp
xor
mov
imul
pop
mov
pusha
call
ror
imul
(bad)
sub
es
pop
in
jge
jge
jl
ds
add
sbb
xchg
outs
lahf
sub
(bad)
cdq
cmp
mov
xchg
addr16
ret
dec
dec
cdq
cmc
mov
dec
and
inc
data16
sbb
and
mov
push
(bad)
pushf
add
not
aas
call
and
(bad)
test
idiv
adc
xor
cmp
dec
addr16
fldcw
push
cmp
imul
fdiv
mov
(bad)
aam
mov
push
add
or
cmps
dec
fwait
scas
and
dec
out
xor
aam
jl
arpl
jns
cwde
pop
arpl
dec
pop
sar
or
push
dec
push
shl
mov
or
(bad)
in
mov
add
mov
fs
pushf
adc
js
cmps
add
ja
mov
imul
mov
sbb
or
add
mul
inc
(bad)
sti
dec
enter
and
jae
push
ud0
adc
and
in
cli
fwait
jp
retf
xor
adc
jnp
ret
(bad)
in
jno
sub
in
sbb
das
adc
cmp
sbb
test
mov
cmc
shl
mov
pop
sub
push
(bad)
push
push
pop
inc
adc
call
cmps
psrlq
aas
je
das
xor
cmp
add
out
jecxz
jmp
test
fcmovnbe
ds
fxch
xor
jg
push
ret
xor
popa
aas
scas
(bad)
aam
ret
in
fs
mov
or
inc
mov
or
aad
xchg
push
or
ss
xor
out
pusha
cmps
xor
sahf
(bad)
jne
in
test
aam
mov
lea
lea
mov
sbb
jnp
loopne
push
dec
inc
lock
adc
fidivr
jmp
xor
jle
xor
mov
jge
sub
aam
jge
inc
sbb
test
sub
adc
xchg
add
in
retf
and
push
xor
xchg
add
sbb
xchg
mov
mov
pop
(bad)
loopne
xchg
inc
bound
pop
test
sub
add
jp
ins
xchg
retf
std
mov
xor
ror
xchg
call
mov
add
add
rcl
pop
push
add
mov
mov
mov
push
pop
jbe
xor
pop
cmp
mov
sbb
sub
dec
pop
push
mov
mov
and
cmp
int
add
sub
xchg
add
les
mov
bound
sub
sahf
int3
in
addr16
aaa
fistp
gs
dec
enter
mov
pop
std
shl
iret
movs
sub
cmp
or
inc
jne
mov
ret
jmp
and
arpl
aad
int3
mov
adc
loopne
gs
xchg
mov
fadd
sub
cwde
shl
jmp
std
mov
add
push
pop
or
pop
sahf
xchg
push
push
retf
fisttp
movs
fwait
fwait
cld
jl
ret
jns
popf
mov
out
add
mov
cdq
mov
movs
mov
imul
and
sub
ror
mov
sub
and
mov
sar
(bad)
pop
push
sub
inc
arpl
mov
inc
jns
lea
in
push
sar
mov
sti
je
or
hlt
movs
in
repnz
add
dec
jno
popa
fwait
ret
inc
aas
adc
mov
jle
in
hlt
lods
aaa
jnp
ds
neg
jae
xor
popf
mov
push
retf
mov
(bad)
in
mov
iret
ds
repnz
out
inc
(bad)
xchg
scas
ja
xor
and
pop
repnz
add
mov
rcr
imul
rcl
nop
mov
push
pop
sub
adc
fcom
loop
ror
ror
data16
imul
aam
jmp
push
retf
xchg
(bad)
mov
test
aam
icebp
gs
sti
test
adc
sbb
lods
xchg
iret
jg
loop
(bad)
in
push
(bad)
in
adc
fstp
xchg
jmp
and
mov
inc
out
test
pop
shl
sub
ret
mov
(bad)
call
ja
arpl
(bad)
adc
int
sub
iret
leave
add
fld
add
in
fdiv
dec
jmp
stos
lods
out
pop
aaa
mov
dec
push
pop
ss
sbb
sbb
test
push
ret
(bad)
jmp
lock
fsub
ins
push
retf
call
cmps
pop
int3
or
movs
mov
test
ins
pop
test
push
xchg
cld
cmc
pop
mov
ror
shl
call
xor
fidiv
std
loopne
cld
sub
aad
(bad)
push
sbb
cmc
dec
sub
hlt
or
aas
jns
sbb
inc
dec
sub
hlt
add
stos
adc
(bad)
mov
pushf
shl
or
jmp
mov
mov
jp
cmp
test
fld
test
jns
repz
test
cmp
shl
sbb
jns
adc
mov
shr
jbe
sub
mov
ins
or
jbe
repnz
js
adc
push
shl
retf
data16
aas
mov
adc
mov
loopne
dec
mov
push
sbb
lods
jnp
loope
push
fadd
loope
stos
in
xor
loope
pop
sbb
loop
mov
test
stos
xor
call
pop
xor
sub
xchg
fs
and
inc
add
fdivp
sub
pop
imul
or
call
pusha
cs
ja
cmps
mov
scas
addr16
js
mov
lods
rcr
push
add
jns
jmp
rcr
pop
jnp
mul
xchg
jl
inc
ja
xchg
push
or
jo
mov
pusha
clc
push
ret
cmc
sbb
add
cmp
add
(bad)
out
pop
mov
je
fdivr
cld
mov
outs
inc
rcl
int3
retf
mov
cmps
loope
xor
inc
add
nop
jp
inc
or
iret
jno
test
inc
iret
pop
mov
ds
ds
fisttp
add
clc
imul
pusha
dec
push
mov
jg
mul
or
dec
fisttp
(bad)
mov
adc
test
repnz
stc
mov
dec
cdq
jae
pop
cmp
jns
xchg
pop
lds
gs
mov
cwde
cs
retf
cdq
cwde
outs
ret
jecxz
aam
stc
test
call
or
lds
cmps
add
ins
or
inc
movs
out
bound
push
xchg
jmp
xchg
in
scas
pop
fsubr
pushf
retf
fnstenv
cmp
jecxz
loop
xchg
inc
nop
jecxz
fisub
dec
pushf
jns
in
mov
es
out
out
mov
xchg
xchg
test
stc
inc
jecxz
das
out
xor
dec
xor
fwait
les
stos
or
mov
je
mov
int3
push
xchg
mov
and
hlt
in
pop
pop
mov
inc
fbld
pop
bound
ja
and
jo
loop
xor
inc
repz
cmp
fwait
aad
sub
mov
mov
jp
lods
dec
ins
ja
aaa
mov
fbstp
aaa
mov
xlat
adc
aam
adc
and
add
mov
pop
jg
(bad)
and
aam
mov
imul
imul
push
ret
sbb
inc
cmp
aam
out
outs
xor
sbb
(bad)
xlat
int
std
mov
sub
outs
mov
mov
push
xchg
mov
gs
call
mov
pop
clc
jge
outs
in
adc
aam
xor
or
ds
adc
out
mov
ret
mov
pop
push
xchg
outs
mov
out
out
js
sub
jg
push
xor
mov
aas
iret
xchg
or
sub
cli
pop
mov
mov
jmp
pusha
ins
jg
pop
dec
into
mov
sbb
pop
xchg
and
cwde
in
xchg
sub
xchg
jnp
cmp
sbb
cmovo
cs
push
test
push
fcomi
and
fwait
cwde
or
mov
into
out
repnz
mov
movs
jmp
inc
jl
scas
cmps
scas
sub
mov
loop
out
shl
shr
and
cmp
ret
movs
ins
mov
and
ins
mov
out
adc
cmp
sbb
sbb
jecxz
push
arpl
repnz
mov
fidivr
push
xchg
cwde
pop
rcl
cmps
cmp
fsubr
pop
and
pop
pop
cli
cmp
push
push
(bad)
or
fwait
nop
mov
adc
outs
xchg
sbb
lahf
cmp
fst
or
adc
lea
mov
push
cmp
xor
popa
mov
dec
nop
std
or
jp
dec
outs
stos
mov
or
aas
xor
mov
sub
(bad)
(bad)
loop
out
gs
sbb
pop
xchg
xchg
xor
pop
retf
cli
sahf
xchg
movs
inc
mov
mov
jne
push
sbb
call
push
jge
pop
shr
fimul
into
jmp
in
je
jne
adc
mov
cli
jg
pop
das
aaa
push
maskmovq
mul
cwde
cld
loop
inc
ins
push
not
sbb
sbb
rcr
sub
enter
ret
(bad)
gs
jo
(bad)
mov
movs
out
adc
mul
cmps
cmp
rol
ss
shl
aam
cmp
ss
xor
fcmovu
test
std
stos
push
or
or
pushf
sahf
sub
(bad)
(bad)
sahf
call
adc
in
cmps
or
and
push
ins
adc
ins
fsubr
pop
jbe
adc
iret
or
dec
jmp
lea
inc
mov
stos
inc
enter
into
add
and
imul
jb
mov
rcr
in
jne
lods
jbe
xchg
xchg
retf
(bad)
add
test
leave
stos
cmps
repnz
mov
iret
mov
ins
add
mov
sub
xlat
pushf
mov
aaa
add
jb
xor
add
dec
test
jle
inc
jmp
dec
ins
and
mov
(bad)
adc
out
mov
stos
inc
mov
lods
fnsave
jle
xchg
retf
xlat
loopne
dec
fdivrp
std
jnp
add
dec
mov
lods
inc
cmps
pop
daa
push
in
lods
sahf
retf
rol
mov
cld
push
mov
mov
mov
stc
ja
pop
mov
int3
fsubr
verr
mov
(bad)
mov
in
aam
call
mov
mov
mov
fwait
(bad)
ret
jge
in
xor
loop
out
mov
add
ror
icebp
jmp
mov
and
xchg
aaa
cmp
xor
sub
shl
xor
or
jg
enter
inc
pusha
mov
test
inc
inc
in
rcl
test
sti
shl
psrlw
pop
test
mov
jmp
(bad)
xchg
xor
aam
out
xlat
cmp
imul
hlt
scas
pop
in
sub
pop
aam
ret
js
in
cmp
pop
retf
fimul
cmps
and
lds
scas
and
fadd
les
ret
cmp
xchg
xchg
gs
xchg
dec
(bad)
xor
sahf
xor
shr
pop
jae
iret
xchg
stc
mov
jmp
rcl
(bad)
cdq
mov
int3
loopne
stos
mov
js
bound
push
xor
dec
mov
cmp
inc
mov
stos
pop
pop
push
xchg
int3
xor
cmp
retf
cld
mov
mov
mov
adc
jge
int3
pop
into
fbstp
mov
retw
outs
and
jge
popf
stos
out
gs
xchg
aas
test
or
inc
push
test
add
dec
int
rcl
xchg
aas
outs
repz
push
jmp
push
mov
pop
push
in
sti
fs
pushf
mov
dec
push
dec
push
movs
sbb
pop
xchg
mov
lock
(bad)
push
stos
jl
jne
int
mov
or
push
mov
in
and
and
dec
ss
cmp
pushf
xchg
fcomip
and
bound
xchg
or
cmps
push
dec
movs
aas
jmp
repz
or
repz
push
idiv
dec
xor
jns
adc
ds
inc
outs
out
(bad)
mov
cmp
pop
vcvtss2si
add
jnp
xchg
fnsave
pop
push
jg
and
rcl
mov
jmp
psrlq
mov
adc
sub
cmps
(bad)
xor
lea
clc
test
sbb
cli
daa
fcomip
pop
das
push
pushf
pop
mov
movs
outs
mov
jae
in
outs
popa
sbb
addr16
mov
mov
pusha
mov
rcr
mov
ret
or
aas
jp
jmp
mov
cld
fmul
mov
sub
fdivr
xor
jne
ins
inc
dec
rcl
lds
jmp
lods
push
(bad)
bound
fidiv
cs
fld
sbb
lock
pop
sub
repz
(bad)
cli
xchg
pop
jae
and
aam
push
xchg
pop
lock
mov
mov
jmp
sbb
adc
imul
ret
retf
mov
or
mov
inc
mov
adc
retf
out
fbstp
sub
sbb
mov
jnp
enter
xchg
call
call
xchg
xchg
inc
mov
push
adc
test
pop
pushf
mov
(bad)
arpl
jge
xor
cmp
pusha
das
pushf
loope
lods
retf
icebp
dec
stos
pushf
idiv
adc
in
add
jp
int3
cmp
ss
gs
xor
shl
and
jp
pop
dec
test
add
ficom
xchg
ins
bound
int3
pop
das
push
fld
pusha
(bad)
dec
and
in
inc
dec
pop
sbb
stos
cmps
push
int
mov
cld
dec
test
clc
ror
mov
cmp
pop
bound
aad
sbb
xor
xor
data16
sub
pop
or
call
xchg
xchg
or
es
lods
mov
push
retf
pop
and
jecxz
stc
push
movs
or
data16
in
out
ror
outs
(bad)
shr
fcomp
cld
xchg
cs
or
push
popa
int3
mov
fild
out
jo
bound
sbb
or
mov
xchg
dec
dec
in
daa
enter
jae
xchg
push
scas
iret
fwait
cmp
repz
jae
add
test
xchg
aad
scas
in
xor
es
jge
xchg
call
aad
jbe
test
adc
repnz
pop
(bad)
jle
cld
sbb
std
adc
cmp
inc
leave
jmp
push
lds
hlt
retf
mov
loope
into
not
mov
call
push
sti
inc
cmp
gs
mov
test
jmp
xchg
outs
or
jae
pop
sub
mov
push
xchg
ins
add
je
cdq
ja
aad
ret
mov
fwait
mov
jl
mov
(bad)
ror
xchg
xor
call
xor
jo
pop
in
cmc
mov
test
jo
pop
xchg
std
fs
clc
cmp
push
ret
iret
sbb
mov
call
mov
sub
push
(bad)
movs
jne
jbe
fcmovnb
jle
xor
push
inc
and
dec
int
sbb
mov
dec
cmp
xchg
mov
bnd
or
or
mov
xchg
inc
jl
das
mov
jmp
cdq
ja
ins
cmc
stos
outs
retf
in
ins
pop
mov
or
jo
push
sub
aas
fbstp
mov
xchg
jo
fwait
jecxz
mov
sti
ds
pop
mov
stos
rol
call
sahf
cdq
fild
dec
xor
movs
lock
aad
fmul
iret
ins
jecxz
mov
js
and
ins
pusha
clc
repz
loopne
daa
mov
mov
mov
repnz
xor
push
add
mov
(bad)
(bad)
or
xor
cmp
out
(bad)
lock
push
cmp
add
dec
cmp
inc
pop
fs
jne
shl
mov
fild
add
dec
(bad)
mov
loopne
lods
adc
imul
data16
stos
or
adc
(bad)
mov
out
mov
scas
or
cs
retf
retf
pop
mov
aam
cs
movs
jmp
scas
lods
mov
add
test
cmp
xchg
fisttp
or
cs
retf
xchg
fs
push
call
add
cmc
jne
test
dec
pop
test
jno
mov
cld
into
or
jp
test
ss
add
test
cli
test
push
or
aas
cmovp
push
(bad)
fadd
inc
add
into
test
jae
or
call
(bad)
cmps
js
std
cdq
adc
adc
mov
xchg
push
jbe
or
mov
push
sbb
ja
xchg
retf
idiv
xchg
xor
mov
test
repz
cmp
(bad)
jl
cmps
add
push
or
lods
mov
cmp
rcl
fld
shl
xchg
test
xor
jp
xlat
ja
pop
popf
jmp
das
hlt
mul
xor
outs
sbb
dec
(bad)
neg
add
fldenv
cmps
repz
int
jnp
jl
dec
(bad)
hlt
inc
push
cmp
stos
jmp
ss
add
ret
and
test
cwde
pop
push
push
fcom
repz
jl
xor
mov
out
and
sahf
jp
retf
std
fwait
sbb
lods
(bad)
sbb
add
adc
call
mov
shr
lods
jle
fwait
inc
sub
clc
push
retf
xchg
mov
or
aaa
xor
xchg
sub
movs
push
dec
int3
mov
loope
inc
cld
cmp
(bad)
mov
ins
into
fsubr
retf
(bad)
and
pop
sub
pop
mov
sub
pop
dec
add
adc
fcom
rol
(bad)
pop
(bad)
ja
xor
jmp
stos
sub
mov
outs
push
xchg
in
sar
dec
je
inc
sbb
ror
xchg
xchg
sbb
sar
ins
xchg
xchg
(bad)
add
fild
pusha
jb
dec
(bad)
xor
mov
mov
sub
pop
jl
sbb
ret
outs
fdiv
inc
xor
into
mov
mov
mov
jno
xchg
nop
xchg
cmp
jae
gs
loope
loope
data16
lock
mov
sub
(bad)
mov
sbb
xor
xchg
mov
push
pop
dec
xchg
dec
or
lds
cmc
test
out
lahf
mov
push
in
jo
pop
adc
aad
inc
pop
fbstp
clc
mov
cmps
push
scas
xchg
dec
sbb
sbb
xchg
xlat
sbb
xor
xchg
fisubr
sbb
inc
xchg
push
mov
repz
adc
repz
or
repnz
sti
stc
jmp
test
daa
cmp
mov
hlt
(bad)
ins
mov
dec
cmp
cmps
shl
inc
inc
cmc
push
test
ret
cmp
and
dec
xchg
leave
aad
xchg
sbb
in
inc
jne
rcr
sbb
push
aaa
rcl
(bad)
sbb
xchg
cmp
inc
nop
out
pop
mov
sbb
aad
xor
cmp
into
push
pusha
mov
jnp
cmps
pop
jge
retf
inc
jno
out
int3
cmc
xchg
push
xchg
js
sbb
in
call
or
into
sub
aaa
jno
push
int
push
xchg
das
jnp
mov
dec
push
lahf
out
inc
push
jmp
rol
and
cs
jmp
pushf
jo
push
sbb
mov
pop
mov
mov
and
mov
mov
sbb
enter
aas
ret
sbb
ret
mov
data16
push
push
ins
cmp
ja
push
test
test
jmp
test
pop
push
popa
sbb
sub
into
fcmovnbe
pop
or
outs
les
adc
repz
xor
push
cmps
dec
cwde
sti
ins
fwait
mov
jo
cmp
iret
js
add
cdq
xchg
sti
xor
mov
imul
mov
pop
scas
rol
or
inc
jns
xor
nop
sub
int
stos
in
push
scas
sub
dec
fucomp
jmp
retf
test
push
daa
xchg
push
jmp
retf
jge
mov
std
inc
daa
mul
jnp
mov
mov
mov
add
pop
out
stos
cmp
push
loop
sbb
xor
push
sbb
jns
inc
jns
xor
xchg
adc
xchg
(bad)
test
xchg
call
sbb
outs
inc
pop
jle
inc
and
cwde
fcmovne
fstp
cmp
mov
into
adc
cdq
and
test
push
mov
sub
dec
or
and
jmp
jmp
cli
lods
xchg
rcr
or
ins
imul
(bad)
jo
push
call
mov
jle
cmps
xchg
std
and
jne
sub
xchg
jg
ss
pop
sub
loope
and
adc
rol
mov
or
adc
mov
sar
aad
shl
and
cmp
add
xchg
call
sub
ror
mov
adc
sti
mov
stos
loopne
in
adc
and
jl
rcr
ja
dec
push
pop
and
sti
mov
in
outs
mov
(bad)
and
or
push
dec
outs
in
jae
push
and
cmp
xchg
inc
arpl
push
clc
xchg
pop
stos
and
mov
ins
or
inc
pop
(bad)
or
mov
shl
lds
push
jmp
in
imul
test
shl
adc
adc
push
mov
test
sahf
enter
outs
and
lods
outs
in
inc
sti
or
repnz
loop
out
xor
jb
das
lahf
test
ficom
stos
pop
dec
xor
js
movs
lahf
sbb
adc
push
sahf
lds
or
and
push
pop
ror
or
aad
or
inc
xchg
in
lahf
mov
adc
mov
sahf
sub
mov
jge
mov
pop
sub
(bad)
inc
inc
in
neg
aam
daa
mov
pop
mov
mov
pop
lods
jp
cmp
dec
(bad)
jmp
pop
dec
xchg
push
test
and
data16
repnz
pop
(bad)
adc
mov
push
sar
movs
test
mov
sahf
pop
push
lock
aam
jb
cli
xor
dec
push
lahf
cmp
or
data16
sbb
retf
sbb
std
jno
sub
jnp
push
sbb
cmp
int3
xlat
scas
mov
into
xlat
in
xor
ins
aad
bnd
and
fistp
mov
or
push
mov
mov
sbb
test
mov
inc
mov
push
stos
mov
adc
stos
jmp
inc
sub
dec
(bad)
fld
outs
jo
push
in
jmp
mov
stos
loope
sub
mov
push
aas
arpl
outs
call
cmps
sub
fsubr
mov
popf
lods
inc
mov
out
lahf
xchg
ret
mov
or
cmp
adc
jmp
cmc
mov
test
pop
es
enter
shl
int3
cmps
bswap
ja
test
call
sti
scas
sub
or
inc
xor
in
mov
jle
xchg
fcomp
jecxz
mov
ss
cmp
pop
xchg
sub
stos
out
outs
pushf
rcr
xchg
repz
frstor
retf
mov
xchg
xlat
or
mov
popa
push
push
adc
clc
jo
jbe
xor
cmp
test
fmul
dec
jnp
and
int
ja
and
retf
cmp
mov
mov
push
add
bound
dec
jecxz
les
inc
test
lahf
or
dec
xor
add
std
push
cmp
int
push
add
or
and
cwde
xor
sbb
mov
fs
call
ja
shl
mov
out
fcomp
fdivr
mov
xor
sbb
push
push
aad
(bad)
(bad)
cld
xor
mov
add
mov
sbb
push
movs
(bad)
cmp
test
mov
or
div
nop
int
movs
jecxz
dec
sti
jp
shr
in
cmp
popa
mov
mov
dec
jg
aam
stos
inc
js
jge
push
cmps
lods
ret
mov
or
sbb
sub
and
inc
cmp
xchg
jmp
shl
lods
jb
fdiv
call
pusha
fld
shr
mov
ins
icebp
inc
and
xchg
mov
inc
leave
jmp
hlt
or
out
pop
jecxz
jle
cld
sub
out
jb
jge
pop
adc
repnz
aam
mov
cdq
ds
jbe
adc
rcr
ret
push
(bad)
dec
(bad)
fstp
cmps
fwait
int
xor
push
adc
icebp
enter
push
adc
movs
les
stos
movs
cmps
and
push
lock
retf
jl
cmp
arpl
fmul
sub
xchg
adc
jge
inc
in
movs
into
mov
es
in
test
call
xchg
ja
fnstcw
cmp
sbb
add
mov
sbb
pop
xor
shl
aas
sbb
cmp
pop
out
add
and
stc
stos
pop
dec
push
repz
ret
in
loopne
adc
sbb
xlat
js
xor
fstp
xor
ss
jmp
aad
pop
xor
mov
lods
fild
cmp
cmc
adc
dec
out
xchg
loope
mov
xchg
mov
push
or
or
cmp
into
jb
xchg
aaa
enter
sbb
call
out
mov
stos
data16
mov
lock
enter
repz
enter
lods
inc
push
rsm
fbstp
(bad)
iret
movs
aaa
xchg
(bad)
jle
stos
and
movs
xor
pop
pop
lea
cmps
mov
and
jmp
imul
dec
mov
and
pop
fimul
(bad)
sbb
mov
stos
(bad)
in
push
imul
cmp
jg
retf
in
movs
call
and
or
xlat
cwde
mul
int3
not
cmp
sahf
adc
cmp
stc
jae
xor
xor
cmps
pop
xchg
(bad)
lods
mov
add
retf
pusha
out
ins
ds
or
push
test
bound
lock
push
mov
in
sub
adc
cmps
sub
sti
stos
cmp
push
out
pop
rcl
sbb
in
icebp
pop
out
push
jno
idiv
movs
push
jecxz
add
pop
mov
mov
and
mov
push
or
neg
lock
ror
mov
std
cli
sbb
mov
xor
or
out
pop
jp
and
test
iret
xor
mov
mov
jbe
push
add
fistp
fstp
pop
scas
ret
shl
sub
mov
pop
mov
pop
dec
sbb
fnsave
jmp
cmp
mov
mov
pop
xchg
mov
xor
ficom
mov
lea
loope
inc
sti
jo
fiadd
cmc
inc
jne
jno
jmp
jb
lahf
mov
cmc
push
sub
retf
mov
sub
scas
ret
int3
jmp
call
sti
xor
xchg
fidiv
sahf
sbb
int
(bad)
jns
popa
out
mov
aam
jmp
cmp
jne
mov
outs
push
push
jecxz
std
adc
mov
jae
add
cmp
cmp
and
sbb
push
outs
dec
outs
jo
jnp
dec
lea
sbb
hlt
imul
add
leave
leave
inc
cmp
mov
inc
das
jne
dec
fsubr
(bad)
in
int3
ret
mov
pop
adc
pop
in
mov
dec
pushf
jo
push
xchg
and
push
mov
cmps
and
idiv
mov
cmps
ret
sbb
ins
mov
sti
inc
je
shl
adc
sbb
ja
push
push
or
gs
aam
mov
jo
xor
mov
pop
push
int
mov
arpl
adc
outs
jmp
jmp
fsubr
xor
(bad)
mov
mov
aam
xor
in
mov
mov
ficomp
mov
push
add
out
adc
icebp
(bad)
into
add
in
add
out
jbe
dec
mov
mov
outs
cmp
add
sbb
jnp
dec
int3
mov
xchg
push
stc
mov
ins
clc
jecxz
mov
loope
je
mov
pushf
or
clc
xchg
lock
add
repnz
fnsetpm(287
stc
inc
sub
ins
hlt
shl
pop
dec
xchg
add
(bad)
in
cmp
pop
mov
mov
xor
or
push
pop
xchg
mov
add
adc
pop
mov
in
mov
xlat
pop
sub
cmps
cdq
push
xchg
cmp
add
xchg
xchg
inc
xchg
idiv
call
into
xor
sahf
nop
call
retf
div
push
mov
fcmovbe
or
not
cmp
add
mov
jno
jb
sbb
cwde
iret
cmps
mov
dec
mov
stos
sub
push
cwde
fwait
ins
add
pop
rol
push
ins
(bad)
ffree
sbb
mov
sub
xchg
mov
push
dec
pop
or
or
adc
scas
mov
mov
mov
hlt
mov
es
xchg
add
leave
dec
mov
add
add
test
push
je
(bad)
stc
mov
(bad)
in
mov
je
pop
mov
aam
xchg
fsubrp
push
mov
lods
lods
ins
cld
adc
mov
out
cmp
enter
adc
arpl
movs
aaa
or
mov
int3
imul
int
inc
scas
or
cmps
mov
jecxz
popa
loop
add
mov
pop
cmp
nop
cmp
xlat
sbb
je
(bad)
jmp
inc
jne
shr
rcl
add
mov
outs
cs
or
cmp
fcom
out
enter
movs
neg
movs
in
out
in
sbb
pop
ins
add
ja
push
icebp
or
test
cmps
dec
mov
int3
jo
outs
scas
sub
sub
outs
int
add
inc
dec
mov
call
jp
add
stc
aam
dec
scas
add
dec
aaa
sub
neg
in
in
add
mov
fsincos
in
rcr
mov
pop
jecxz
push
push
(bad)
sahf
cmp
test
jle
sub
popf
fiadd
out
mov
das
js
cwde
mov
dec
xchg
inc
nop
mov
mov
icebp
ds
(bad)
jne
jecxz
mov
scas
into
mov
mov
mov
loop
pop
mov
jno
das
call
nop
mov
loop
pop
(bad)
jge
pop
rol
fnstcw
push
jecxz
icebp
jo
pop
adc
jmp
shl
add
mov
imul
jge
and
stos
movs
fucomp
and
mov
lods
dec
adc
inc
sub
xchg
pop
mov
loopne
outs
mov
test
xchg
and
iret
fisub
mov
rol
movs
repz
stc
or
test
xchg
ja
push
xor
mov
mov
out
lds
int3
shl
jg
lods
cld
cwde
hlt
jns
shr
pop
pop
arpl
add
cmp
in
scas
mov
pop
inc
or
ja
movs
lock
lock
xchg
lea
stos
add
aad
pop
dec
mov
and
outs
pop
inc
repz
cdq
hlt
out
arpl
xor
outs
push
movs
mov
shl
test
mov
(bad)
fmulp
mov
rdtsc
inc
cmps
xchg
les
add
xchg
shl
into
and
mov
push
dec
inc
xchg
ss
fwait
out
xor
xor
jae
popa
jl
in
cmp
mov
inc
pop
loop
cmp
cdq
cmp
sub
push
dec
pop
and
imul
add
aad
aas
xchg
mov
or
repz
cmp
jnp
out
sahf
imul
pop
add
aad
mov
inc
mov
sahf
loopne
adc
pushf
cs
sbb
repz
aam
test
dec
or
add
(bad)
outs
not
ins
js
mov
jp
adc
js
dec
dec
lods
push
mov
(bad)
jle
out
add
pop
and
cmp
xor
adc
sub
mov
jmp
pop
(bad)
jbe
loop
retf
pop
jnp
sbb
iret
(bad)
ror
adc
push
mov
jge
sbb
bound
outs
sub
cli
jb
std
call
int3
sbb
pop
call
jmp
inc
ret
in
inc
sbb
out
inc
sar
test
ret
xor
es
xor
out
jns
and
popf
jle
sub
mov
xor
adc
cmp
ins
sahf
popa
icebp
pop
mov
in
inc
inc
cmps
les
aam
pushf
popa
les
inc
mov
push
rol
popa
mov
shl
add
sub
aaa
dec
sbb
mov
test
fild
sbb
mov
loope
scas
std
sti
xchg
jo
outs
icebp
pop
rcl
sub
imul
xchg
mov
and
add
add
jle
jmp
push
cmp
pop
sub
ficomp
out
std
(bad)
sub
and
mov
and
popf
jb
or
aas
test
fcomp
or
shl
adc
rcr
xchg
and
jmp
mov
lahf
enter
xchg
cmp
lea
sbb
out
in
pop
std
adc
nop
push
pop
ins
not
dec
adc
dec
call
cmps
(bad)
xor
jnp
imul
shl
ins
sub
es
rol
add
bnd
mov
imul
aam
shl
xor
stos
ret
(bad)
dec
ret
popa
pop
or
jmp
or
and
sub
outs
gs
in
jae
ret
aaa
fbstp
sbb
aas
inc
fs
imul
mov
lock
and
jp
add
(bad)
push
sub
pushf
inc
dec
mov
jno
call
fist
inc
iret
mov
cmp
jp
xor
add
shl
and
repnz
push
xor
adc
(bad)
inc
call
out
loope
xchg
xchg
xor
popa
out
in
or
inc
xchg
jns
cmp
fst
(bad)
call
and
iret
or
retf
shl
sub
pop
cmp
inc
fld
mov
mov
stc
mov
mov
xor
loop
in
call
xor
jb
jecxz
xor
mov
inc
idiv
jae
lahf
sub
int3
out
or
fisub
dec
pop
mov
outs
sbb
lods
js
test
and
lea
enter
call
test
div
mov
(bad)
cmp
add
stos
xchg
adc
fsub
(bad)
push
sub
add
and
mov
push
push
sar
dec
sar
pop
pop
repz
xor
ds
aad
cmp
sbb
ins
xor
dec
push
dec
mov
imul
jmp
mov
xor
mov
mov
scas
cmp
sub
cmp
push
and
cmps
dec
push
sbb
xor
es
ins
sahf
adc
mul
icebp
push
xor
or
imul
cmp
mov
test
xor
or
mov
repnz
or
lea
das
aam
sub
pop
xor
or
xchg
fild
mov
dec
sahf
adc
add
out
int
mov
shl
sub
adc
mov
(bad)
pop
pushf
int
sti
int
cs
cmp
loope
xchg
dec
test
add
mov
inc
or
dec
mov
inc
inc
jmp
sub
jnp
cdq
jbe
ss
addr16
(bad)
(bad)
ficomp
leave
mov
pop
cmp
pop
dec
loopne
sub
iret
lods
xchg
push
jne
jnp
cs
add
mov
inc
push
xor
js
int3
lods
lea
in
or
popf
pushf
push
mov
sbb
dec
fnsave
inc
or
sub
sub
sub
pop
dec
sbb
lahf
sbb
mov
cld
stc
mov
lods
add
(bad)
fcomp
mov
add
dec
(bad)
(bad)
adc
cmp
gs
mov
sub
push
(bad)
dec
ins
adc
int
xlat
int3
sbb
in
js
call
iret
mov
enter
fnsave
cdq
hlt
imul
or
(bad)
mov
daa
stos
stos
pop
out
hlt
test
xchg
cmp
or
rcl
cmp
add
mov
push
out
ss
push
imul
out
(bad)
imul
scas
out
neg
xor
shl
jp
mov
sbb
jno
popf
outs
push
inc
addr16
mov
dec
(bad)
jnp
popf
push
xchg
popa
rcl
aam
add
imul
jae
mov
pushf
adc
push
imul
je
add
jne
cs
mov
sahf
push
lds
pop
ror
mov
and
jae
jno
pop
out
cld
sbb
cmp
clc
fsub
mov
aam
jmp
cli
sbb
or
push
cwde
add
push
scas
in
push
into
imul
mov
loop
cli
imul
dec
aad
je
inc
sets
popa
cmp
cmps
mov
test
cwde
in
ss
adc
mov
xor
cs
out
or
test
xor
and
cmps
test
push
sub
push
fidiv
add
and
out
jnp
cdq
retf
in
int
sub
pop
inc
into
xchg
add
push
fld
mov
or
loope
ins
push
pop
call
or
in
mov
rep
mov
add
(bad)
(bad)
mov
cmps
jge
ins
aas
das
(bad)
mov
test
xchg
shl
aaa
cmp
push
fisub
ror
jp
inc
fs
outs
mov
clc
shl
xchg
add
test
cmp
ja
cdq
out
pop
cmp
cmps
test
mov
dec
call
pop
jg
jnp
loopne
(bad)
ficom
jecxz
jno
dec
xor
movs
jge
hlt
pop
mov
dec
jecxz
sub
pusha
mov
cmp
aas
jmp
call
mov
jmp
mov
data16
imul
cs
pop
enter
hlt
xchg
mov
jnp
adc
jp
fcom
out
pusha
sub
imul
xor
xor
int3
sbb
jne
mov
fsubr
push
mov
add
adc
pop
mov
les
arpl
call
push
idiv
(bad)
pushf
dec
dec
inc
jmp
cmp
push
fistp
push
inc
sub
cmp
hlt
stc
add
dec
cmc
lods
jne
test
outs
or
ret
add
enter
jo
mov
add
add
pop
xchg
out
aam
bound
xchg
cmps
fcom
sahf
jl
mov
inc
mov
adc
loop
push
pop
mov
es
in
cli
push
cli
addr16
scas
sub
mov
jno
push
inc
test
fistp
inc
out
or
jo
data16
sub
and
frstor
mov
in
je
pop
out
out
push
out
push
adc
int3
cli
push
and
imul
addr16
fsub
loope
or
adc
rcl
sbb
loopne
jecxz
add
pop
retf
adc
push
int
aaa
ret
psubb
inc
cmps
push
test
sub
lods
aam
out
pop
mov
sbb
ret
push
data16
xchg
sbb
xchg
add
mov
mov
cmp
fild
xchg
movs
in
mov
popa
(bad)
gs
mov
xor
int3
call
push
mov
ret
addr16
loope
scas
popf
inc
ins
es
jp
inc
loop
inc
inc
lock
cmp
mov
inc
cmc
lods
stos
(bad)
mov
push
out
mov
cli
(bad)
pop
adc
push
add
aam
dec
add
jmp
(bad)
je
addr16
xor
cld
out
mov
or
into
jb
jp
nop
arpl
pop
sub
pop
mov
cli
iret
jmp
push
jl
pop
cmp
mov
jae
sti
mov
lods
les
test
or
fstp
sub
loopne
mov
clc
fdivr
push
retf
and
ins
in
and
or
mov
cmp
fnstsw
fimul
or
test
dec
call
pop
pop
push
sub
je
leave
mov
pop
push
xchg
jb
mov
mov
xabort
push
adc
rol
xchg
push
sbb
mov
js
call
sbb
or
xchg
push
pusha
enter
sub
pop
stos
pop
jecxz
sbb
call
xchg
lods
es
nop
jge
sub
int
retf
sbb
mov
xlat
ss
lds
or
out
adc
popa
mov
add
mov
sar
fwait
add
mov
sti
(bad)
mov
inc
data16
ror
ja
mov
xlat
sbb
rol
xor
cmp
push
js
shl
push
cmp
xchg
sub
lock
iret
cmc
icebp
bound
pop
jns
movs
fdivrp
aad
mov
ret
jbe
gs
push
ret
test
push
mov
push
push
cmp
jnp
jno
icebp
push
mov
iret
sbb
adc
mov
xor
loope
loop
inc
retf
add
sti
mov
ret
ret
mov
popa
loop
xchg
mov
pop
repnz
in
jle
ret
cmp
adc
call
pushf
and
push
pop
mov
xchg
adc
js
out
test
mov
mov
iret
and
xchg
adc
loope
movs
jp
cwde
xchg
xor
leave
adc
mov
jg
add
add
mov
ins
into
mov
mov
outs
and
std
xor
loop
add
adc
or
lahf
add
fadd
pop
mov
arpl
cmp
and
aad
and
(bad)
xor
sub
fiadd
pop
push
add
push
pop
push
xchg
jns
jl
div
xchg
dec
xchg
pop
mov
fstp
push
push
adc
test
pushf
cmp
ins
mov
leave
push
pop
in
popa
mov
fisttp
test
fisub
jp
ret
cmp
push
lahf
sbb
xchg
or
gs
push
sub
mov
add
mov
add
loopne
jae
dec
xor
and
sub
mov
fadd
xchg
xchg
mov
dec
iret
jae
loop
pop
call
xchg
shr
std
loope
leave
popa
lock
sbb
cmp
stos
jecxz
movs
adc
in
pop
ja
ror
inc
pop
xor
xor
mov
cmp
mov
push
sbb
push
ja
in
popa
(bad)
jnp
dec
out
mov
xor
add
cmp
ficom
dec
test
pop
sbb
pop
push
jmp
inc
(bad)
jbe
out
std
lea
add
cwde
pop
pop
push
pop
int3
or
cdq
aaa
xchg
jecxz
dec
in
sahf
(bad)
xchg
push
mov
fist
mov
push
ret
sub
pop
scas
daa
fistp
xor
push
push
enter
repz
dec
pop
fdivr
lds
or
popa
jbe
sbb
jne
or
not
inc
mov
arpl
mov
adc
sbb
(bad)
mov
out
ficomp
es
inc
jne
outs
add
shl
jp
mov
dec
mov
mov
or
mov
div
pop
jg
dec
ror
jmp
scas
clc
jno
cmp
sar
jp
add
mov
mov
icebp
mov
cmc
jnp
cwde
bound
pop
int3
and
shr
mov
int
aaa
adc
daa
das
xchg
inc
pop
pop
movaps
pop
and
loopne
pop
mov
lds
(bad)
fsubr
inc
(bad)
das
and
xor
hlt
scas
mov
enter
pop
push
bound
pop
pop
mov
mov
push
lahf
and
in
lahf
ret
aaa
fstp
cmp
sti
pop
fcom
mov
or
cmp
imul
pcmpeqb
mov
mov
aaa
pop
inc
mov
aam
int3
cmc
dec
int3
jnp
adc
ret
les
(bad)
push
leave
push
retf
mov
mov
sahf
outs
imul
retf
cld
add
jmp
inc
sub
jecxz
jno
lds
(bad)
gs
push
in
xchg
xor
push
add
jge
scas
fbstp
xor
xchg
cli
inc
out
hlt
mul
inc
sub
add
adc
xchg
pop
and
inc
ds
retf
adc
popf
mov
jns
xor
pop
jne
fbld
in
pop
js
inc
inc
lahf
sahf
(bad)
sbb
mov
cmps
cmp
dec
pusha
(bad)
lock
mov
pop
xchg
gs
xchg
push
ss
lods
mov
(bad)
in
sub
ja
test
push
mov
imul
mov
std
pop
push
dec
pushf
xor
cmp
xchg
into
or
fcmovnb
pop
pop
loopne
repnz
cdq
cmp
je
xchg
add
jmp
dec
sub
test
mov
ins
mov
adc
xor
pushf
xlat
popf
je
cs
call
popf
cld
retf
jle
shl
sub
push
sti
cmp
cmc
aaa
enter
dec
retf
stos
inc
jmp
inc
pop
js
push
sti
pop
mov
xchg
std
out
pop
lds
addr16
inc
pop
add
test
stos
xlat
xlat
scas
jns
dec
(bad)
call
pop
aas
inc
push
cmp
pusha
add
ins
lahf
or
fs
xchg
jg
add
push
(bad)
test
sbb
and
xchg
ror
stc
shl
inc
imul
inc
lahf
xor
and
mov
div
mov
sti
inc
xor
jae
push
inc
inc
mov
(bad)
add
aas
call
xor
jb
jl
mov
push
es
test
fwait
dec
cdq
xchg
mov
popa
(bad)
xor
hlt
mov
dec
outs
scas
mov
inc
and
inc
movnti
clc
movs
jo
(bad)
jmp
fsubr
jle
sti
lea
mov
mov
pushf
inc
pop
retf
fwait
jmp
sbb
ins
sahf
dec
xchg
(bad)
jl
(bad)
aas
pop
vpaddusb
sbb
mov
lea
rcr
and
add
ds
stc
xor
mov
xchg
call
pop
xor
pop
into
mov
mov
or
add
sbb
push
mov
out
stos
adc
(bad)
lahf
sub
cwde
sub
sub
lods
icebp
push
stos
ret
and
out
push
adc
sub
mov
cmps
sar
es
push
lahf
lahf
fmul
cmps
inc
sub
sub
sub
ror
adc
inc
jmp
cwde
loope
sub
fld
pop
movs
mov
popf
xchg
nop
aam
ret
je
pop
(bad)
rol
(bad)
mov
leave
dec
xor
daa
lods
pop
hlt
jbe
dec
arpl
into
cmp
stos
gs
enter
mov
push
or
gs
(bad)
popa
pop
js
sbb
jge
rol
lahf
adc
jmp
(bad)
lock
pop
inc
mov
mov
pop
ins
add
fld
fcmovnb
mov
ja
out
pop
iret
gs
clc
out
scas
sub
out
push
pop
out
add
cli
test
retf
ins
ficom
sub
mov
pop
dec
pop
inc
adc
in
inc
mov
push
dec
out
loope
fst
jmp
xor
ins
jnp
mov
lahf
imul
or
out
(bad)
(bad)
pop
jle
mov
push
mov
out
in
dec
test
dec
cmp
fs
pop
jle
test
push
je
push
jnp
add
pop
dec
movs
adc
jecxz
cmps
inc
ins
adc
out
sbb
mov
sbb
sub
mul
lds
fadd
xchg
ds
daa
sbb
outs
or
arpl
inc
dec
sub
fidiv
shl
add
int3
mov
nop
mov
add
in
mov
(bad)
(bad)
cmps
cmp
(bad)
xor
mov
jae
cli
adc
fist
sbb
das
cwde
pusha
sbb
adc
cmps
dec
xchg
pop
cli
mov
aas
fwait
stos
(bad)
(bad)
inc
fld
pop
ds
aas
lods
retf
(bad)
cmc
stc
pusha
dec
jns
ret
in
and
imul
jns
mov
pop
adc
dec
not
popa
push
call
cdq
inc
mov
(bad)
pop
out
adc
lods
push
and
xchg
and
and
js
xchg
fwait
add
push
das
lds
jae
sbb
sbb
jp
loope
lds
cdq
push
cmp
and
(bad)
out
or
push
mov
cwde
cld
jmp
(bad)
call
sbb
(bad)
jne
fwait
mov
popf
lods
xor
and
loopne
lea
xchg
xlat
mov
or
rcl
jo
push
dec
lahf
call
test
ds
mov
aaa
mov
pop
or
fcom
(bad)
test
test
mul
jnp
sbb
popa
out
imul
icebp
repz
or
jl
ins
mov
jle
into
leave
xor
daa
popa
adc
movs
mov
iret
lds
test
adc
stos
xlat
cmp
arpl
cmp
add
jne
outs
retf
iret
(bad)
jo
xchg
inc
push
push
push
fldcw
push
mov
adc
add
stos
repnz
xchg
ins
inc
sub
sub
mov
dec
jo
leave
dec
sar
dec
sbb
retf
(bad)
(bad)
movs
lock
push
pop
test
add
stos
sbb
(bad)
pop
retf
cmps
pop
xor
stos
ss
or
adc
push
xor
and
jns
das
or
sub
jne
and
mov
sbb
ret
pop
jl
fst
test
xchg
aas
pop
out
jg
int3
xchg
adc
or
and
add
mov
repz
inc
nop
jg
inc
sub
sbb
sub
rcr
aas
push
dec
sbb
(bad)
ds
pop
add
xchg
dec
or
pop
xchg
push
push
cmps
xchg
cmp
leave
xor
cmp
int3
fidiv
xor
mov
movs
adc
sub
in
sbb
push
shl
je
push
mov
lock
push
adc
adc
cli
xchg
mov
pop
int3
jl
aas
cmp
and
jne
sbb
call
or
inc
(bad)
adc
mov
mov
xor
ror
imul
xor
cdq
adc
outs
in
jno
mov
jnp
add
add
addr16
cwde
mov
dec
xlat
cmp
dec
out
inc
pop
pop
aam
test
movs
jle
xor
imul
mov
push
or
jae
mov
dec
lods
or
cmp
xor
cwde
jl
pop
mov
dec
xor
call
enter
sar
mov
emms
ins
je
hlt
js
add
mov
push
add
stc
xchg
mov
mov
scas
imul
mov
jl
(bad)
pop
mov
out
jbe
addr16
mov
in
pop
fsub
test
cmps
mov
(bad)
cmp
lahf
pop
pop
xchg
or
loop
mov
mov
jbe
(bad)
mov
jmp
xor
loope
ds
mov
jecxz
add
addr16
dec
and
mov
and
pop
outs
dec
dec
inc
inc
call
sbb
scas
leave
imul
cmp
sbb
dec
out
bound
push
out
mov
int3
pop
lahf
dec
fcom
sbb
pop
mov
mov
jmp
pop
inc
fs
jae
sahf
shl
jge
dec
pop
and
lds
mov
push
fdiv
fcom
mov
mov
test
xlat
xor
out
jle
jge
adc
fild
xchg
cmp
xchg
lock
or
pop
adc
xor
repz
pop
or
and
test
mov
inc
mov
fild
jne
fimul
pop
xor
pop
pop
xor
cld
sahf
mov
cli
pop
xchg
push
add
add
icebp
aad
sbb
add
sbb
cmps
xchg
mov
call
movs
jns
xchg
outs
loop
retf
sub
popa
cmp
mov
daa
sbb
cmps
adc
xor
test
mov
aas
push
mov
mov
mov
pop
fdiv
into
and
rcl
sub
adc
out
test
mov
mov
pop
in
cmp
sub
mov
push
sbb
jmp
xor
cmp
jb
mov
pop
je
mov
shl
push
dec
sub
js
mov
test
or
lea
in
std
pop
or
lahf
(bad)
cmp
ficom
ins
add
sub
dec
and
sub
cs
mov
pop
jmp
es
aas
cmp
movs
dec
mov
push
packsswb
cs
mov
adc
xchg
mov
mov
pop
mov
imul
cmp
dec
ss
xlat
repz
dec
sub
xor
mov
(bad)
out
out
call
loopne
sub
iret
shl
(bad)
fisubr
pop
jp
mov
cmp
add
call
test
out
xchg
cmp
or
jmp
pmaxsw
data16
add
out
sbb
mov
xor
lods
aaa
rol
adc
or
lds
mov
sbb
cmc
inc
jl
mov
ficomp
rol
pushf
and
mov
push
leave
lods
mov
pop
loop
inc
adc
movs
pop
nop
retf
gs
dec
into
aaa
ficom
out
xor
pusha
jne
into
fist
test
push
(bad)
pop
and
xchg
das
retf
mov
cmp
dec
cmp
push
push
repnz
mov
nop
jge
dec
mov
add
push
jno
mov
test
imul
jge
mov
call
cmc
push
sub
icebp
mov
fcom
out
cmp
scas
(bad)
bound
ficomp
jecxz
sbb
push
out
test
jl
out
call
lea
pop
pop
fidiv
dec
jns
push
scas
mov
stc
aad
repnz
sbb
cmp
sub
stos
push
and
push
test
loopne
jle
adc
push
rcr
mov
js
fdivp
mov
movs
js
lahf
mov
add
xor
bound
jl
ja
lds
jnp
jle
cmp
push
jne
jns
jns
cwde
pop
ror
mov
mov
mov
jecxz
and
dec
mov
stos
add
ja
mov
div
adc
scas
test
call
xchg
int
jle
out
ret
daa
shl
ja
push
xchg
cmp
lock
ror
push
out
or
sub
aaa
mov
add
jno
cmp
jg
jae
push
mov
imul
aad
push
cdq
and
arpl
pop
jns
rcl
jmp
jmp
inc
cmps
xor
loope
fld
out
nop
fsubr
jne
fwait
push
cwde
in
(bad)
lahf
in
add
mov
out
mov
mov
(bad)
dec
mov
movs
mov
pop
into
fbld
ret
mov
in
and
imul
aaa
jmp
test
mov
movs
or
and
xlat
push
dec
lods
out
movs
out
scas
movs
mov
and
in
adc
mov
lea
fcmovbe
sbb
cmps
das
mov
pop
xchg
lea
jge
mov
add
dec
jge
pop
mov
add
mov
push
jge
lods
or
cli
loopne
dec
and
ret
outs
pop
std
(bad)
cwde
push
out
ins
mov
aam
ror
jecxz
ror
rcl
shl
dec
mov
(bad)
adc
outs
(bad)
xchg
or
sahf
gs
jno
jge
hlt
jo
aam
pusha
not
outs
jne
ins
cmps
ficom
aas
loope
sub
dec
push
clc
adc
jbe
es
push
fwait
sbb
add
push
test
aad
push
aad
push
pop
mov
mov
fwait
inc
mov
xchg
and
push
stos
mov
add
or
add
mov
test
push
(bad)
jecxz
jbe
inc
(bad)
fucomp
mov
add
sub
jge
lods
fist
sbb
jecxz
stc
cs
add
outs
movs
shr
mov
push
jmp
retf
repz
mov
imul
ds
push
pop
mov
push
(bad)
dec
test
push
cwde
ins
enter
mov
xchg
jns
imul
dec
inc
jl
xchg
mov
mov
sti
outs
xor
pop
or
jne
xor
cld
test
add
xchg
int
cmp
loop
out
sbb
cmp
int3
add
sbb
sub
das
add
ret
cld
jmp
enter
fisttp
cli
cld
cmp
mov
jbe
test
inc
iret
outs
loop
sbb
jno
dec
dec
ss
pusha
mov
jae
cmp
shl
inc
ret
das
add
sbb
inc
mov
jmp
(bad)
mov
outs
cmp
loope
(bad)
push
ret
rol
sbb
pop
xor
fwait
in
push
inc
(bad)
mov
test
mov
push
xchg
imul
pop
jnp
fnstcw
mov
leave
pop
xchg
(bad)
fadd
dec
into
sub
imul
or
xor
pushf
ins
leave
enter
sub
sbb
sub
xchg
adc
cli
test
stos
push
(bad)
ins
jnp
cmp
xchg
std
cmp
push
dec
imul
mov
repnz
mov
pop
inc
cmps
mov
inc
xor
cmc
int3
xchg
sbb
(bad)
into
std
inc
dec
dec
cmp
fstp
loop
or
je
pusha
repz
jo
pop
push
outs
lods
jne
mov
inc
rcpps
inc
xchg
je
jno
setg
shr
pshufw
cs
adc
int
mov
xor
es
mov
mov
add
xor
add
jmp
sbb
movs
cmp
aaa
jmp
hlt
jle
inc
mov
xchg
jmp
test
pop
sbb
fadd
dec
call
test
xlat
cmp
lea
push
inc
jb
cmp
cmovno
push
fld
test
adc
and
adc
in
sbb
test
fadd
push
or
jbe
add
cmp
aas
pop
pop
jecxz
(bad)
clc
mov
jbe
sbb
(bad)
inc
xchg
jne
jb
repnz
vhsubpd
pop
test
inc
adc
mov
mov
imul
in
ds
data16
mov
cld
jae
xor
movs
sbb
inc
out
jbe
into
mov
nop
and
repz
neg
ins
in
sti
(bad)
in
xchg
pop
stos
dec
add
inc
pop
sbb
mov
xchg
cs
sahf
push
jl
jge
pushf
sbb
ins
and
sahf
arpl
mov
mov
ret
xor
jg
pop
call
retf
fcom
fnstsw
fwait
push
xor
js
lds
inc
dec
adc
sbb
into
outs
lahf
loop
mov
out
add
jnp
xor
xchg
lock
int
loop
mov
js
adc
pusha
or
sub
sub
lds
fild
push
fwait
push
pop
ins
push
arpl
js
retf
pop
not
frstor
ficom
js
or
sbb
sbb
mov
jne
addr16
push
imul
xor
lods
icebp
adc
sbb
inc
adc
mov
xchg
mov
je
dec
fsubr
repz
ret
mov
xchg
nop
sar
(bad)
xchg
sbb
dec
lahf
shl
dec
pop
mov
mov
aas
repz
pop
mov
jge
fld
xchg
les
and
or
and
shr
inc
shl
xchg
jno
and
jmp
loope
jbe
lock
sbb
push
xor
imul
cld
xor
shl
aas
dec
push
nop
push
add
test
mov
push
retf
add
out
or
cdq
sub
and
mov
scas
jnp
icebp
or
or
arpl
inc
ret
mov
ins
stos
scas
and
ror
dec
and
pop
xor
inc
adc
aam
push
fdiv
popf
push
gs
add
and
lods
cld
jmp
xchg
mov
ret
push
ja
iret
jne
lods
add
mov
imul
dec
retf
jg
add
cmp
dec
mov
mov
mov
mov
mov
xchg
mov
mov
ret
inc
dec
mov
sbb
inc
pop
dec
(bad)
call
sbb
push
fdivr
and
cmp
inc
call
out
imul
out
push
pusha
sar
out
rol
cmp
das
adc
add
mov
fisubr
xchg
add
loope
xchg
rcr
inc
and
push
fidivr
mov
loope
sbb
mov
int
(bad)
std
loope
xor
sti
push
imul
dec
cmps
shr
dec
fcom
in
sub
add
and
add
ficomp
jns
fsubr
sbb
sbb
(bad)
push
js
cwde
pop
out
fbstp
(bad)
and
xchg
sti
iret
scas
push
push
and
iret
js
jge
out
ret
in
punpckhbw
push
cwde
out
fsub
mov
push
repz
ds
sub
and
bound
ins
(bad)
les
push
add
test
addr16
xor
dec
cli
je
adc
cmp
outs
sbb
aas
test
mov
inc
and
test
call
add
sub
push
xchg
push
adc
inc
mov
sbb
cmp
cmp
dec
mov
sbb
mov
fdiv
add
sbb
and
imul
sbb
cmp
lods
cld
push
es
imul
dec
loop
xor
das
hlt
mov
cmp
mov
add
and
mov
(bad)
jmp
sbb
and
push
add
imul
push
dec
mov
je
inc
cmp
lea
jmp
pop
jns
daa
in
push
(bad)
dec
ror
pop
aam
(bad)
mov
pop
in
nop
and
cmp
cdq
push
pop
fdivr
xor
jns
xor
pop
xor
push
sti
sbb
pop
sub
jle
mov
sub
push
ins
inc
jo
jg
lods
pop
popf
mov
jle
dec
lahf
mov
in
pushf
mov
stos
test
in
loopne
mov
fcomp
rcr
hlt
mov
xchg
push
jns
shl
rol
mov
adc
sub
adc
cwde
add
jl
mov
leave
adc
ja
hlt
rcl
sub
add
stos
shl
mov
ds
gs
std
jmp
xchg
dec
cld
pause
lods
mov
(bad)
stos
ds
(bad)
and
test
inc
fwait
push
push
test
not
xor
aam
lock
and
jae
sbb
adc
cdq
inc
add
pop
xchg
inc
pusha
cmp
or
xchg
out
mov
mov
push
outs
loop
and
sbb
mov
mov
add
mov
inc
hlt
push
jb
fs
push
int3
movs
mov
or
jecxz
mov
push
cmp
cli
das
xor
cmp
add
clc
neg
cmp
test
stos
inc
aaa
mov
outs
cs
nop
sbb
and
dec
adc
jbe
inc
mov
xchg
adc
dec
push
pop
shr
ja
enter
sbb
stos
in
add
push
mov
pop
and
xor
out
int
ja
cmc
mov
jbe
in
outs
lods
(bad)
imul
pop
or
rol
mov
loope
dec
sahf
call
lds
cmp
add
pop
xchg
in
sub
out
add
fcom
in
jno
bound
loop
xchg
in
dec
das
or
leave
mov
(bad)
(bad)
mov
fdiv
push
inc
mov
sbb
out
stc
cmp
cmp
lea
jmp
dec
sub
mov
ja
mov
stos
mov
shr
adc
mov
adc
and
cmps
cmp
dec
jmp
cld
popa
aaa
ins
cs
mov
xchg
jg
neg
dec
outs
in
xchg
nop
ss
dec
test
stc
ficomp
cmps
mov
fs
sub
enter
imul
jmp
fiadd
sub
jmp
in
xchg
bound
scas
aad
scas
cmp
mov
ja
push
add
ja
test
inc
pop
nop
inc
push
xchg
(bad)
mov
aaa
(bad)
push
or
cmp
or
adc
cs
mov
push
push
pop
adc
ror
aad
in
(bad)
xor
into
adc
aad
jl
or
adc
(bad)
in
std
int
ds
xchg
pushf
ror
mov
sub
jge
pushf
repz
aad
pop
push
pop
xlat
xor
pop
mov
and
dec
(bad)
sub
cs
xchg
dec
sbb
or
daa
mov
shl
call
aas
push
ficom
fwait
adc
pop
inc
cwde
repz
mov
and
shl
xlat
jl
sar
fmul
mov
mov
dec
push
bound
imul
jbe
cmp
or
cli
jb
enter
jno
je
jno
jmp
add
sbb
aad
call
aam
dec
loopne
out
sahf
adc
adc
pop
mov
rcr
jle
in
inc
hlt
mov
pop
ja
and
xor
shl
pop
mov
dec
out
cli
mov
fidiv
stos
scas
lods
cwde
add
inc
fst
(bad)
mov
int
or
jmp
push
call
lods
push
sahf
adc
pop
cs
adc
mov
repnz
mov
lods
std
ss
push
inc
pop
call
pop
dec
cmp
jecxz
scas
mov
push
add
les
inc
jl
cli
cld
movs
xor
cmp
gs
(bad)
or
sub
ja
pop
(bad)
out
inc
mov
adc
int
mov
fdiv
and
aad
outs
je
neg
xchg
movs
mov
xchg
in
leave
sub
cld
test
sti
xlat
jb
mov
dec
lods
fcompp
pop
imul
dec
pop
xor
lods
imul
fld
(bad)
jl
pop
or
push
xchg
jecxz
push
arpl
sti
push
repz
and
add
or
add
pop
loop
dec
sbb
mov
lahf
mov
xchg
add
int
sub
loopne
rcl
sbb
dec
out
mov
movzx
leave
not
mov
(bad)
stc
outs
xchg
out
jmp
cmp
adc
dec
rol
jns
pop
imul
mov
push
pop
mul
xor
or
jg
int3
ins
jle
mov
mov
mov
xchg
jmp
call
das
ja
mov
jmp
push
and
fild
stos
add
xor
sbb
test
jmp
adc
xlat
addr16
not
add
mov
adc
push
scas
xor
(bad)
stos
fst
fadd
imul
ds
xor
sbb
std
fbld
hlt
dec
cmp
dec
rcr
mov
ja
(bad)
sub
pop
add
jg
addr16
mov
sbb
and
mov
cmps
fbstp
div
in
mov
aas
push
dec
mov
pop
cmp
fldenv
pop
cmp
or
dec
sub
mov
add
popf
dec
mov
jmp
lock
aam
addps
pop
fwait
mov
pop
fmul
sbb
jbe
mov
outs
fsubrp
dec
repz
cmp
mov
pop
mov
add
inc
sahf
ror
mov
cwde
test
and
les
xor
popf
mov
push
push
test
pop
call
cmp
xor
mov
dec
movs
and
cdq
push
mov
push
cwde
(bad)
mov
icebp
pop
xchg
cmp
mov
lods
mov
pushf
dec
xchg
inc
jno
movs
ror
hlt
xchg
retf
jp
int
push
sbb
push
mov
ins
xchg
and
aam
pop
in
sub
sbb
sbb
pop
inc
nop
stos
inc
imul
ss
cmps
repz
pop
retf
int
cmps
dec
in
jns
loope
xor
xchg
xchg
jnp
sti
pop
faddp
xor
xchg
xor
ret
or
cmp
es
mov
and
scas
sbb
ret
jae
mov
inc
and
mov
icebp
loopne
in
movs
enter
sbb
dec
jns
js
pop
pop
sti
stos
inc
and
inc
pop
xor
out
es
fdiv
or
ror
ins
push
push
ficom
out
push
dec
sbb
adc
xchg
aas
inc
and
push
mov
in
push
push
jo
add
loope
cmps
in
test
dec
xchg
pop
aas
jl
sub
dec
xor
les
inc
sbb
sahf
(bad)
icebp
lock
stc
push
arpl
mov
xchg
jae
sub
pusha
out
mov
jmp
cld
cld
cwde
mov
ins
stos
or
jno
sbb
sti
cmp
fstp
jno
movs
outs
cwde
fmul
popa
lds
rcr
mov
sub
adc
mov
pusha
dec
xchg
test
pop
cmp
leave
call
pop
cwde
jno
fwait
outs
test
scas
push
cmp
stos
cmp
fcomp
mov
adc
jmp
jno
jbe
inc
mov
push
loopne
call
jbe
jmp
and
dec
retf
loopne
jge
je
push
dec
adc
test
movs
popf
xor
sbb
and
jmp
sar
rcr
mov
mov
loope
stc
aam
xchg
and
sub
movs
inc
pop
dec
(bad)
mov
repnz
pop
add
jl
lock
not
imul
adc
and
pop
aam
sub
cmp
sar
add
and
or
jb
in
repz
add
popa
outs
int3
arpl
pop
add
push
mov
aad
fwait
repz
aam
xlat
mov
jp
xor
fcmovu
and
inc
and
sub
retf
dec
adc
and
lds
dec
mov
lahf
cmp
std
(bad)
rol
dec
jns
mov
fs
xchg
jge
les
cmps
fidiv
int
scas
call
dec
adc
jge
outs
push
dec
mov
(bad)
push
lods
mov
mov
add
and
iret
add
push
inc
mov
imul
out
imul
dec
gs
or
fcomp
inc
int
xor
fcomp
lds
push
stos
add
mov
push
pop
fidiv
mov
out
scas
sub
mov
and
dec
inc
sbb
add
leave
sub
cmp
cmp
jle
mov
adc
(bad)
in
iret
rol
adc
adc
cwde
rcl
xchg
xor
stc
stos
adc
mov
dec
(bad)
out
mov
cmp
movs
jbe
leave
or
cdq
pushf
adc
cmp
jecxz
xchg
xchg
fist
outs
push
repnz
dec
add
lds
cmp
inc
push
fnsave
enter
push
mov
push
and
xchg
cmps
outs
inc
sub
sbb
xchg
fwait
mov
mov
adc
cmp
mov
push
sbb
icebp
mov
lea
cmp
imul
mov
addr16
mov
bnd
call
in
and
sti
in
add
rcr
popa
cmps
hlt
lods
aad
hlt
movs
sti
cdq
or
inc
in
dec
mov
or
movups
push
popf
mov
out
mov
or
icebp
push
das
clc
mov
enter
jecxz
mov
call
inc
mov
inc
dec
lea
sbb
pop
mov
cmp
inc
scas
mov
stos
sbb
mov
fcomp
data16
mov
mov
call
mov
mov
jbe
xchg
lods
test
push
inc
add
out
ins
addr16
sbb
(bad)
jo
push
cli
xchg
test
add
ret
pop
gs
mov
popf
dec
jb
and
sahf
xor
ret
adc
int3
in
xchg
js
inc
and
not
movs
xchg
arpl
xchg
pop
adc
cld
push
fucomi
pushf
xchg
cs
in
or
or
in
cdq
iret
pop
mov
scas
add
sub
pop
js
jecxz
adc
movs
test
pop
cmp
ss
fisubr
vmread
ds
adc
into
jbe
adc
std
dec
pop
pop
int3
inc
pop
jae
xchg
mov
js
dec
push
ror
mov
xchg
arpl
push
mov
fdiv
push
sbb
xchg
jmp
and
in
sub
jg
xor
fcomi
cmp
inc
stos
adc
int
push
(bad)
addr16
pop
data16
dec
add
mov
push
jge
scas
lea
lea
fnsetpm(287
adc
hlt
xchg
pop
imul
scas
iret
mov
pop
shl
sub
sti
hlt
lea
mov
xchg
gs
cmp
cmps
ss
pushf
outs
and
rcl
fcmovu
inc
aaa
loope
mov
jbe
call
mov
adc
and
sbb
mulps
out
les
mov
mov
or
mov
mov
xor
mov
pop
cmp
rcl
sbb
mov
js
jp
sbb
dec
stos
jnp
rcr
xchg
lock
nop
cli
loopne
pop
and
sub
pushf
jo
dec
mov
movs
mov
mov
and
mov
mov
clc
out
sti
in
xor
push
xchg
mov
xor
sub
pop
icebp
dec
mov
adc
loop
adc
(bad)
movs
ins
jbe
lods
and
retf
ret
dec
hlt
pop
sub
daa
fisttp
sub
pop
ins
ds
mov
adc
and
(bad)
xor
in
jo
jmp
mov
dec
sbb
ja
pop
jmp
int3
jno
xor
sub
mov
push
cmp
test
dec
outs
repz
popf
adc
xor
popa
xchg
call
lods
add
nop
int3
inc
mov
daa
rol
mov
xor
cmp
xlat
out
mov
push
hlt
push
ds
in
and
or
mov
fwait
dec
pop
nop
in
inc
add
xor
xchg
sti
in
popf
mov
out
xchg
(bad)
repz
inc
pop
pop
daa
or
and
push
repz
aam
pop
jo
test
pop
mov
jge
(bad)
call
pusha
xor
fsubrp
push
sub
add
xchg
movs
pushf
inc
push
push
pop
push
outs
(bad)
out
fwait
iret
std
sub
mov
inc
std
add
xchg
push
adc
dec
lds
mov
fldcw
push
adc
outs
jae
dec
imul
and
jb
imul
inc
ja
leave
push
int3
clc
sahf
aad
xchg
adc
push
or
sbb
pop
mov
fmul
imul
and
adc
(bad)
int3
pop
es
jne
mov
ds
(bad)
cmp
out
xchg
stc
retf
std
pop
shr
xchg
cdq
jns
(bad)
shl
xchg
hlt
adc
inc
mov
scas
sub
ss
pop
lahf
daa
push
dec
jb
retf
ins
or
mov
xor
xchg
jne
xor
add
jmp
iret
push
mov
les
mov
xor
or
lods
int
cmps
popa
(bad)
push
mov
lea
sub
or
pop
das
adc
loopne
mov
pop
cmps
cmp
int
es
jne
push
test
or
inc
pop
imul
jne
and
pop
call
addr16
pop
sub
sbb
xor
sahf
fisubr
jo
int
cs
or
(bad)
aad
mov
fxam
xlat
std
and
push
xchg
mov
xor
stos
jge
and
jecxz
fs
push
lods
xchg
sahf
rcl
adc
test
(bad)
mov
sbb
mov
lea
jecxz
and
out
push
dec
mov
or
das
std
mov
(bad)
movs
es
dec
mov
lods
sub
into
pop
popa
pop
and
arpl
cdq
loopne
and
scas
or
adc
outs
or
xlat
pusha
ror
aas
jae
xchg
out
sub
retf
(bad)
mov
sbb
dec
push
adc
xchg
mov
adc
imul
sub
clc
test
xor
xchg
push
mov
push
xor
icebp
aam
or
jns
in
fldcw
sbb
adc
jo
retf
sub
mov
movs
fdiv
xor
cmps
int3
xchg
inc
push
daa
pusha
popa
push
mov
jne
cmp
lahf
sub
jge
jg
sub
inc
push
xor
loop
adc
mov
adc
call
out
call
inc
xchg
(bad)
pop
dec
mov
div
ins
xchg
lsl
out
fiadd
in
cmps
iret
inc
leave
paddq
sbb
les
sbb
int3
sbb
xlat
jl
mov
cmp
inc
mov
repz
push
cmp
dec
out
stos
out
push
or
inc
arpl
ficom
sbb
xor
push
test
mov
out
popf
mov
jecxz
es
adc
pop
das
sbb
icebp
inc
mov
popf
je
sti
fcmove
fwait
idiv
dec
mov
mov
push
xchg
dec
(bad)
push
and
gs
mov
and
sbb
repz
pop
xor
frstor
jae
mov
and
xor
xchg
mov
cdq
add
xchg
dec
shr
jl
sti
enter
test
ret
imul
mov
retf
imul
adc
push
les
inc
out
mov
sbb
movs
xlat
and
repz
hlt
mov
(bad)
shl
sbb
retf
mov
std
lods
shr
mov
out
repz
lea
jbe
adc
ss
loop
cmps
mov
cmp
cdq
je
and
mov
pop
pop
cs
adc
out
and
sbb
add
loope
fnstenv
fwait
or
mov
stos
add
and
sub
or
test
mov
dec
test
fiadd
ss
push
inc
or
(bad)
jg
mov
movs
pop
dec
mov
xor
lock
xchg
out
addr16
out
das
popf
ins
add
aad
and
mov
out
mov
push
xchg
jl
fidivr
pop
fldcw
enter
dec
dec
mov
mov
add
cmc
lods
add
push
mov
xor
jnp
inc
rcr
fistp
dec
or
pop
mov
xchg
jns
adc
cwde
cs
pop
sub
sbb
dec
pop
sti
arpl
movs
pop
pop
adc
add
mov
std
retf
dec
je
mov
mov
pop
pop
pushf
pop
pop
leave
cmc
hlt
jbe
jp
or
sub
sub
fcomp
pop
popa
cdq
popa
pusha
dec
out
lahf
gs
sbb
sti
repz
stos
ss
mov
xchg
cdq
fnsave
sbb
cmps
jae
out
icebp
pop
sahf
lock
dec
push
sbb
popf
sar
cmp
into
fidivr
test
ins
retf
pop
inc
inc
bound
in
imul
mov
adc
inc
mov
mov
pop
add
mov
fs
not
sbb
adc
xor
inc
dec
daa
jmp
jmp
icebp
fsubr
sbb
adc
dec
sti
stos
jae
mov
(bad)
sbb
xor
adc
dec
stos
push
sub
ss
push
mov
test
and
aaa
test
std
fmul
loope
pop
pop
lds
pushf
add
sbb
fnstsw
and
mov
mov
(bad)
pop
and
or
mov
enter
outs
daa
scas
adc
sub
jae
dec
inc
ins
inc
es
mov
loopne
or
je
(bad)
in
in
ins
mov
fimul
(bad)
scas
push
int
imul
mov
jns
adc
or
mov
mov
lods
pushf
add
inc
js
jle
enter
or
sub
sbb
sbb
inc
outs
aaa
mov
xor
mov
in
mov
lods
pop
cwde
mov
sub
or
int3
stos
jbe
cdq
mov
ror
es
shl
test
outs
xor
shr
mov
cmp
mov
pop
mov
(bad)
mov
fwait
mov
jmp
ins
test
dec
jne
jl
mov
iret
jmp
fwait
xor
push
imul
repnz
daa
imul
pop
repnz
xor
mov
dec
outs
mov
xor
pop
push
rcr
mov
inc
stos
sbb
mov
sub
xor
sub
nop
das
adc
in
call
mov
pop
pop
sub
adc
or
pop
or
dec
pop
ret
bound
imul
fsub
push
js
in
leave
add
and
xor
xchg
ins
movs
test
cmp
mov
add
xor
cmp
and
adc
fwait
retf
lea
hlt
or
in
sub
jmp
in
stos
test
add
add
retf
sahf
sub
leave
pop
hlt
sub
inc
xchg
stos
jno
push
mov
imul
xchg
add
loope
out
ss
pop
cld
and
imul
push
lock
ret
mov
mov
dec
test
out
retf
jae
aam
adc
pushf
loop
push
or
xchg
int
movs
cmps
dec
inc
sahf
mov
jmp
outs
imul
jecxz
daa
and
les
cwde
dec
push
xlat
imul
xchg
outs
jg
loop
pop
mov
cs
daa
cmp
popa
sub
inc
sub
mov
retf
cmp
adc
retf
sub
add
and
ror
in
xchg
pusha
xchg
repnz
push
push
mov
inc
sbb
pop
xchg
add
jbe
mov
jae
mov
inc
in
push
cmps
cmp
jnp
sahf
pop
scas
sbb
jge
mov
jo
or
dec
add
mov
in
or
addr16
ins
or
in
add
(bad)
sub
shl
in
arpl
ficomp
xchg
xchg
xor
xlat
push
lahf
jns
sbb
pop
push
sub
mov
test
scas
cmps
pop
retf
inc
push
jmp
add
inc
push
test
sbb
or
pop
add
cmp
inc
inc
mov
rcr
dec
mov
retf
stc
inc
mov
xchg
ret
inc
or
cwde
daa
adc
pop
aam
xor
or
jne
aam
mov
aam
or
out
cmp
popa
cld
or
mov
retf
lods
adc
sbb
and
cmp
or
sbb
ds
fsubrp
push
inc
stos
or
nop
sub
mov
retf
test
aaa
mov
add
inc
xor
push
jns
daa
imul
imul
adc
gs
xor
sahf
sbb
frstor
fild
mov
cli
mov
data16
es
adc
fiadd
push
add
je
pop
xchg
or
bnd
xor
cld
xor
lods
mov
inc
jmp
div
enter
aas
add
adc
sbb
nop
jecxz
sub
and
mov
jmp
mov
cmp
mov
retf
mov
ins
hlt
dec
mov
or
imul
cmps
test
mov
scas
adc
inc
(bad)
pop
repz
test
out
push
and
and
movsx
mov
jns
cmps
jno
js
out
cli
(bad)
jo
je
test
inc
add
outs
aaa
sub
add
xchg
xchg
cmps
cwde
imul
xor
adc
or
jae
mov
cmps
ins
cdq
add
out
xchg
sbb
ss
dec
xchg
ficom
(bad)
cld
xor
inc
mov
cmps
jg
push
ss
ja
fld
dec
jecxz
jae
out
add
add
int
mov
ds
xchg
adc
adc
and
dec
fild
dec
pop
int3
les
in
ja
neg
loope
(bad)
xlat
dec
cmp
xchg
add
or
sbb
loope
mov
lods
mov
out
pop
cmc
sub
hlt
jns
repnz
jae
mov
xchg
mov
dec
dec
das
nop
call
push
or
movs
cmps
inc
xchg
(bad)
mov
jge
shl
into
scas
and
cdq
mov
adc
mov
icebp
(bad)
ror
jno
inc
shl
sti
(bad)
xor
adc
mov
inc
lods
or
lods
push
mov
push
cwde
(bad)
pushf
mov
sar
jmp
mov
push
jg
popf
and
nop
sub
sar
sub
in
jae
add
int3
(bad)
lock
gs
(bad)
push
test
or
out
mov
add
in
add
adc
cmps
lea
ret
inc
ja
pop
push
ret
fdivrp
push
movs
fs
lahf
adc
std
adc
lods
out
test
xor
push
aam
test
dec
mov
ss
std
data16
xchg
push
pusha
cmps
inc
dec
xor
das
mov
or
and
repz
fcmovbe
or
add
mov
out
jge
sub
scas
cmp
adc
jecxz
pusha
push
mov
and
sub
leave
loopne
push
sti
or
cmp
xor
and
jmp
leave
sbb
cs
inc
rcl
jl
push
loope
push
and
xchg
je
jne
sub
fisttp
xchg
retf
mov
in
or
lahf
add
sbb
add
pop
jmp
loop
push
mov
xor
imul
aaa
push
je
mov
aam
addr16
push
lahf
outs
scas
cmc
loop
xchg
xchg
adc
jle
xchg
aaa
dec
sbb
ins
add
pop
dec
sbb
push
fwait
jo
xchg
pop
mov
push
or
rol
ror
ja
fwait
mov
fcmovne
rcr
adc
(bad)
xchg
jo
dec
imul
sub
je
cmp
add
push
fmul
dec
lods
inc
nop
mov
imul
push
mov
and
adc
jl
dec
loopne
jg
icebp
sbb
ds
jl
in
jns
push
call
stos
hlt
inc
jmp
adc
add
shr
jo
ds
mov
sub
jne
adc
sbb
aaa
scas
shl
mov
add
cs
cmp
icebp
lea
add
lock
rcl
jns
adc
or
fwait
ss
push
pop
js
ds
fs
dec
adc
ds
adc
sub
xchg
sbb
xchg
fild
popa
fucomi
add
jmp
out
xchg
stos
add
sub
or
(bad)
mov
clc
push
inc
shr
mov
ins
push
shr
jl
mov
sub
fcomip
ins
mov
sub
cmp
in
(bad)
jmp
mov
cmp
(bad)
and
fwait
arpl
inc
and
jp
xchg
scas
or
lods
aam
adc
sbb
push
pop
stc
pop
push
jmp
lock
mov
xor
cmp
pop
jae
mov
sbb
pop
gs
jp
inc
jnp
cli
test
gs
aaa
mov
sbb
shl
inc
fadd
repnz
hlt
pop
jnp
add
dec
pop
aad
pop
xlat
movs
out
mov
pusha
jnp
mov
jmp
add
sbb
(bad)
sahf
xchg
imul
shl
call
and
ret
push
daa
daa
dec
lea
xchg
lock
jae
data16
mov
push
les
pusha
inc
fstp
push
xchg
sbb
fs
cmps
in
fnstcw
lahf
out
je
push
cld
xchg
std
popa
adc
adc
imul
jne
cli
test
mov
adc
jnp
pop
loope
xchg
mov
adc
jmp
xor
loopne
sub
jne
xor
or
pop
xchg
dec
das
push
pop
pushf
or
cmc
push
push
dec
cmp
jns
nop
jbe
mov
iret
and
pop
retf
clc
ret
call
movs
cmp
lahf
sbb
jbe
mov
jmp
lds
mov
retf
push
jnp
mov
mov
arpl
fdiv
xchg
add
int3
inc
inc
push
ins
movs
jp
scas
dec
cwde
push
xor
and
pop
mov
aam
rcl
jo
dec
inc
in
in
adc
hlt
mov
jp
push
push
fwait
and
inc
mov
fimul
dec
sbb
sub
push
adc
and
jbe
mov
stos
scas
das
test
(bad)
fstp
leave
call
ins
or
pushf
push
dec
pop
and
mov
fistp
fsub
adc
push
jns
sbb
les
jns
lds
jecxz
es
inc
sbb
(bad)
cmps
jge
pop
fisubr
pop
jbe
rcl
push
adc
adc
icebp
(bad)
popa
cmp
mov
push
pushw
cmp
or
add
test
hlt
int3
add
ss
ds
repz
test
cwde
add
add
rol
mov
push
aam
mov
daa
inc
clc
sbb
sub
xor
call
loope
sub
in
mov
dec
cld
xchg
(bad)
mov
xchg
add
pop
test
xchg
adc
jmp
and
pop
jae
mov
dec
adc
pop
xchg
je
dec
cmp
jns
call
rcl
shl
outs
ret
dec
pushf
add
mov
ret
out
or
(bad)
test
pop
shl
outs
xor
dec
mov
dec
pop
outs
mov
mov
cdq
leave
repnz
dec
or
loope
lods
std
mov
adc
pop
mov
aas
inc
xchg
(bad)
(bad)
adc
adc
arpl
scas
sub
push
xchg
gs
shl
mov
scas
neg
dec
sub
and
enter
xchg
cmp
mov
pmaxsw
push
inc
push
bswap
retf
ss
mov
push
icebp
popa
pop
fild
scas
cmp
jmp
in
and
lahf
push
mov
cmp
retf
sahf
aam
or
xlat
not
test
push
pop
xchg
shl
sbb
inc
add
mov
add
movs
lods
sbb
pop
(bad)
and
jb
sbb
fmul
sub
jae
jl
(bad)
daa
or
stc
push
div
hlt
or
mov
inc
dec
and
mov
push
add
mov
sahf
add
pop
adc
(bad)
push
mov
ss
sar
adc
add
sub
pop
btr
das
xchg
test
dec
inc
push
ins
xor
xchg
sub
dec
int3
adc
clc
mov
xchg
xor
jbe
push
xor
or
(bad)
and
jp
jns
cmc
dec
xor
jbe
add
mov
jo
adc
les
neg
std
or
sub
cld
lea
sub
xor
pusha
movs
fdiv
in
mov
xchg
push
push
jmp
push
scas
stos
lea
pop
xchg
mov
ins
add
dec
cmp
ins
cmc
dec
cmc
cld
inc
ret
test
fsub
push
or
add
and
push
xor
push
jae
sti
stos
popa
test
sub
xor
dec
jno
lods
lock
aas
push
loop
pop
in
ret
dec
cmps
retf
dec
mov
dec
push
or
jae
and
popa
xchg
mov
add
sbb
fs
sbb
push
out
arpl
fldenv
faddp
mov
pop
int
cmp
adc
mov
lds
xchg
retf
mov
cmp
in
and
jne
iret
inc
xor
ins
and
fs
pop
icebp
fmul
push
or
mov
mov
xchg
sbb
sub
mov
sub
into
push
test
adc
(bad)
fbstp
xchg
xlat
jecxz
mov
xchg
or
neg
popf
stc
or
or
arpl
ficom
sbb
cs
sub
push
lea
sbb
adc
dec
mov
sbb
int3
mov
popf
dec
mov
mov
ss
pop
mov
dec
test
arpl
xor
mov
test
xchg
iret
cmp
imul
and
sti
cs
jle
pop
sub
jne
pushf
stos
mov
sub
adc
(bad)
adc
or
xlat
cmp
add
cmps
push
js
lahf
xchg
sbb
data16
pand
cwde
ror
iret
sar
push
sbb
pop
lods
jne
sbb
test
sub
enter
mov
add
and
and
xor
(bad)
or
sub
test
das
retf
jb
cwde
or
fst
fcom
repz
sbb
test
sti
mov
push
idiv
fld
pop
push
sbb
mov
arpl
pop
cdq
fnsetpm(287
inc
fs
sbb
mov
sub
adc
or
push
mov
imul
lds
lods
jmp
loopne
loopne
stc
add
adc
or
pop
xchg
in
add
mov
in
inc
cmps
jns
dec
icebp
adc
pop
leave
cmp
adc
test
fstp
aaa
jecxz
jne
ficomp
jbe
adc
mov
fcom
movs
cmp
ror
jne
dec
jmp
adc
ins
pop
push
push
sbb
in
xchg
leave
or
les
jne
loop
(bad)
call
jmp
sub
das
bound
xor
xor
and
inc
sub
mov
adc
je
inc
lds
and
or
sub
dec
and
jb
jecxz
(bad)
or
gs
pop
pop
(bad)
outs
sti
xchg
pop
lock
lods
int3
outs
dec
nop
dec
pop
push
std
out
inc
mov
mov
inc
pop
push
mov
popf
imul
sub
push
ret
out
jno
sahf
add
jb
ds
xlat
in
xor
gs
imul
cmp
cwde
js
pop
dec
dec
sbb
stc
pop
sbb
in
ficomp
cmp
mov
fsubr
xor
call
ja
out
pop
retf
mov
das
and
mov
dec
gs
mov
dec
je
xor
mov
movs
mov
adc
mov
push
cwde
jae
push
xor
jae
mov
ret
daa
pop
push
jb
comiss
sbb
pop
xlat
jp
stos
cs
jne
jne
sub
jg
cmp
(bad)
bound
pop
scas
call
jmp
aas
push
add
jbe
dec
fdivr
gs
jb
scas
xor
xchg
and
inc
mov
add
std
cwde
outs
xlat
ins
ja
xchg
out
xor
test
adc
test
mov
mov
(bad)
imul
push
jecxz
jmp
pop
add
jnp
and
cld
xchg
xlat
xor
mov
int
jmp
in
pop
sar
lock
mov
enter
ins
dec
xor
not
and
inc
out
leave
fcom
mov
lock
xor
sub
arpl
xor
idiv
ret
(bad)
mov
xor
mov
push
cmp
cmp
cmp
cmp
add
out
(bad)
mov
push
loop
adc
sub
pop
and
push
ins
outs
pop
or
fdiv
cmp
pop
cmp
cmps
mov
hlt
imul
jbe
sub
int
fisubr
ds
mov
mov
das
ins
mov
pop
jne
xor
test
clc
dec
icebp
hlt
dec
dec
inc
pusha
dec
pop
mov
retf
mov
ja
xor
dec
sub
mov
enter
mov
sub
xor
cwde
mov
or
fistp
and
bound
mov
and
adc
xchg
pop
push
out
xchg
jecxz
iret
imul
mov
scas
cmp
adc
xchg
das
pop
data16
(bad)
pop
and
stos
movs
neg
adc
into
pushf
mov
std
in
addr16
int
sub
movzx
movs
neg
cmp
(bad)
imul
in
mov
rcl
sbb
push
fnstcw
pop
sbb
pop
mov
pop
xchg
adc
dec
loope
ja
push
sbb
loop
add
cmps
pop
push
scas
push
xchg
xchg
les
shl
inc
out
mov
cld
adc
loopne
sahf
cmp
out
xor
and
fadd
push
xlat
ret
and
cli
add
shl
xchg
clc
push
sbb
retf
jns
mov
aad
pop
cmp
cs
loop
inc
mov
lea
into
stc
sbb
push
dec
jp
cmp
push
outs
loope
xor
aaa
mov
cmp
cmc
and
cli
in
imul
outs
rol
mov
mov
outs
xor
inc
cmps
sub
fisubr
cmp
stos
loop
std
mov
loope
retf
jne
test
shl
push
je
jmp
retf
jge
dec
sub
(bad)
adc
(bad)
adc
mov
(bad)
mov
or
(bad)
inc
pop
pop
add
add
mov
and
ret
popf
push
cli
jnp
pop
ficom
ret
addr16
int
(bad)
xor
or
mov
dec
dec
xchg
sub
sahf
cmp
or
adc
scas
ins
ja
push
sub
pop
xchg
scas
jo
dec
pop
repnz
lods
cmp
icebp
and
in
and
mov
ret
jne
inc
push
cwde
les
inc
xchg
call
add
mov
loop
test
jl
or
iret
out
adc
cli
or
add
leave
xchg
mov
or
pop
ror
aad
retf
retf
xchg
(bad)
into
jp
std
pop
inc
mov
mov
js
cmp
adc
ds
sub
add
pop
fist
and
cmps
in
pop
dec
jbe
pop
add
div
pop
rcr
aaa
sbb
xchg
aam
call
mov
ficom
jbe
cmp
and
push
pop
and
div
sbb
es
cmps
xor
jbe
adc
pop
mov
lods
call
adc
into
lods
or
cwde
(bad)
jle
add
call
enter
push
fcomp
fst
cmp
imul
mov
and
je
or
scas
arpl
xor
and
pop
stos
ins
(bad)
pop
pop
not
xchg
lds
mov
bound
imul
jb
daa
cmp
xchg
cmc
cld
cli
fs
pushf
mov
dec
sbb
leave
xchg
mov
jne
pop
push
loopne
cmp
inc
and
(bad)
jnp
xchg
das
jp
xchg
cmp
es
mov
push
or
shr
mov
movs
stos
adc
ror
ins
scas
mov
repnz
push
dec
shl
(bad)
pop
fild
push
mul
outs
clc
pushf
add
daa
loope
jecxz
cwde
xchg
aad
(bad)
mov
push
inc
pop
fild
stc
inc
(bad)
cmp
xchg
out
popf
jb
daa
push
rcl
scas
push
cmp
mov
movs
jecxz
imul
jae
pop
call
mov
xor
loopne
scas
aas
dec
fdivr
fbstp
add
jno
aas
fstp
sbb
jecxz
xchg
cmps
jnp
mov
mov
mov
out
ret
cmp
test
ret
stos
push
add
cmp
add
in
xchg
xchg
mov
test
popa
ss
add
cmp
push
pop
iret
retf
rcl
jo
xchg
inc
and
shl
mov
xor
and
pop
aam
rcl
divps
add
lods
into
pop
ret
stos
push
bound
mov
mov
(bad)
pop
add
pop
out
in
inc
push
cmp
sub
sub
movs
rcr
mov
cdq
sub
repnz
and
push
ja
loop
retf
out
fld
retf
cdq
pushf
test
scas
std
mov
xchg
pop
nop
push
mov
mov
and
mov
pusha
push
mov
imul
jmp
out
enter
dec
pop
iret
(bad)
lock
popa
movs
pop
dec
jmp
std
imul
inc
or
xor
push
mov
push
jno
(bad)
loope
popa
pop
repz
fwait
add
sub
cli
aam
pop
pop
out
imul
je
fild
repz
ins
loop
imul
in
xchg
lahf
fucomi
cwde
pusha
fnstsw
out
jp
sub
jg
dec
leave
pushf
inc
inc
or
data16
pop
test
mov
pop
adc
mov
addr16
dec
shl
push
mov
inc
jae
call
in
shr
movs
call
adc
addr16
ds
or
push
jmp
add
aad
outs
stos
cld
sub
aaa
fst
lods
and
leave
pusha
mov
sbb
adc
fsin
dec
shl
jnp
inc
add
jo
out
and
movs
movs
pop
outs
outs
pop
xchg
dec
fstp
das
ss
push
dec
test
sub
push
add
into
jle
fucomip
push
fs
bound
sub
mov
jecxz
in
test
out
cwde
popa
and
pop
ins
add
sub
in
add
mov
mov
push
push
sbb
scas
frstor
cmp
jns
sbb
mov
and
cmovp
adc
jg
dec
adc
ror
push
xchg
int3
push
test
inc
jg
addr16
popa
in
fdiv
mov
jmp
dec
jmp
push
xchg
push
nop
sbb
inc
xchg
inc
punpckhbw
outs
cli
stos
mov
xchg
cmp
and
stc
ds
(bad)
loopne
dec
(bad)
frstor
inc
ins
mov
mov
lods
inc
cld
mov
outs
pop
test
in
aaa
gs
inc
paddsw
sahf
cdq
(bad)
jo
(bad)
jno
ret
cmp
push
test
sub
loop
jecxz
nop
push
pop
in
stc
and
push
mov
inc
push
xlat
gs
push
retf
jp
push
and
sub
mov
test
pusha
dec
add
fdiv
pop
mov
fsubr
or
pop
into
push
cmp
mov
ret
fwait
jge
aaa
add
out
inc
inc
icebp
mov
adc
mov
das
mov
sbb
and
sti
es
and
lds
pushf
dec
dec
jne
enter
int3
xor
out
xor
pop
retf
lods
adc
and
mov
dec
pop
ret
mov
ins
stc
rol
dec
lods
sub
imul
scas
add
in
jae
jle
leave
push
out
rol
mov
(bad)
loope
mov
fidiv
sbb
lds
sbb
ins
mov
call
pop
sbb
(bad)
nop
push
or
adc
mov
loopne
mov
repnz
in
das
in
out
inc
mov
pop
outs
enter
add
push
in
mov
pop
pop
jb
fwait
daa
xor
cmp
mov
sub
or
sbb
jecxz
movs
scas
mov
iretw
sub
or
jo
stos
push
sub
or
mov
jbe
pop
jo
mov
frstor
ficomp
inc
pop
sub
add
jno
in
inc
xchg
add
jnp
scas
push
xor
add
adc
cmp
or
xor
fnsave
adc
ss
and
dec
lahf
test
pushf
mov
pop
adc
femms
fmul
ins
aas
pop
add
sbb
sbb
mov
outs
sub
arpl
mov
std
mov
fidivr
or
(bad)
xchg
loopne
sub
aam
movs
gs
or
in
push
add
xor
mov
popf
test
pop
int
cwde
xor
push
xchg
jmp
fldenv
dec
test
jo
mov
dec
hlt
adc
cli
fld
push
mov
jg
push
xchg
xlat
sub
test
and
mov
call
mov
arpl
push
mov
inc
adc
jmp
xchg
out
iret
sti
cmp
(bad)
repnz
adc
fisttp
sub
xchg
(bad)
sbb
mov
cmp
call
inc
sub
sub
jnp
jmp
dec
mov
in
or
das
or
pop
scas
mov
fucom
or
rcl
aam
mov
xchg
mov
pop
sti
rcl
sbb
cld
retf
aaa
xchg
inc
stc
sbb
lock
stos
ret
push
cld
in
js
jmp
mov
cmp
dec
add
sar
xchg
push
inc
xor
stos
fstp
pop
scas
sub
and
test
daa
and
lods
test
outs
cmp
out
mov
sub
pop
add
mov
inc
(bad)
loopne
jp
mov
clc
loopne
fs
mov
ret
jb
test
test
or
or
ja
jb
cli
into
cmp
and
sub
add
mov
dec
sub
or
ja
cmp
jns
mov
mov
test
adc
and
mov
push
fsubr
pop
je
std
and
jl
xchg
cs
pop
push
pusha
dec
mov
pop
(bad)
out
cmp
dec
xor
addr16
imul
jnp
cmp
int3
fs
ror
mov
mov
cmp
push
daa
mov
sub
xchg
sbb
outs
mov
jmp
mov
lahf
cmp
jo
shr
(bad)
in
or
xor
jge
xchg
dec
xchg
aaa
xchg
cmps
xchg
call
sbb
dec
xor
jge
dec
mov
xchg
in
and
fcmovne
xlat
shl
cmp
jnp
or
sbb
cmp
rcr
cwde
and
adc
pop
add
(bad)
mov
shl
dec
push
loopne
mov
jge
mov
bnd
mov
stos
pop
movs
(bad)
cmp
push
mov
pop
or
stos
mov
xchg
lock
(bad)
or
int3
jbe
mov
cmp
and
test
adc
sub
xor
sbb
test
and
nop
adc
dec
xchg
pop
cdq
cli
sbb
add
or
push
pop
xchg
push
pop
xchg
out
out
call
scas
(bad)
add
popf
cwde
div
adc
imul
and
imul
jae
lds
ror
sbb
xlat
mov
aaa
jle
jmp
pop
arpl
inc
or
sahf
pop
inc
push
sub
xlat
bound
add
pop
fwait
jne
and
xor
pop
lahf
jl
test
push
push
fistp
mov
data16
sub
jle
or
ds
lods
cmc
arpl
add
mov
dec
and
and
movs
mov
add
add
pop
scas
lods
sub
xor
mov
mov
jle
repnz
sub
loopne
fstp
pop
or
std
sti
test
pop
scas
ffreep
outs
push
xor
in
shl
add
cli
pop
sbb
jle
pop
movs
dec
mov
daa
xchg
sub
push
(bad)
hlt
mov
add
test
push
push
jnp
xchg
pop
or
sbb
rcl
scas
es
mov
iret
pop
inc
out
jl
test
xchg
es
pop
(bad)
and
adc
inc
ss
and
arpl
sbb
and
or
mov
or
mov
stos
pop
inc
push
pop
retf
adc
pusha
and
in
pop
fcomp
sub
stos
jbe
je
and
inc
inc
sbb
xchg
and
cmp
cmps
jecxz
rcr
ds
xchg
jnp
call
pop
ss
loopne
push
sub
mov
inc
cmp
(bad)
into
(bad)
idiv
(bad)
push
fdivr
je
enter
outs
aas
add
mov
cmps
add
mov
sbb
jle
mov
cmps
je
push
xlat
shr
xchg
xor
shl
cmp
cmp
(bad)
cmp
into
in
lock
fsubr
outs
aaa
gs
ror
mov
popa
je
mov
cli
shr
cs
adc
push
jne
pop
mov
ja
push
mov
test
inc
ds
xchg
mov
fist
mov
adc
dec
daa
push
fnsave
call
jmp
repz
or
jns
and
out
mov
ins
in
inc
or
add
sbb
push
push
xchg
aad
sub
and
push
idiv
fcomip
test
xchg
call
fnstcw
xchg
add
sbb
movs
push
mov
xchg
pop
test
lods
xchg
leave
mov
mov
or
mov
or
push
jnp
daa
scas
or
dec
dec
xchg
popf
pop
cmp
inc
popa
pop
push
nop
xor
jl
adc
sub
inc
stos
pop
jae
jecxz
arpl
fist
repnz
test
cs
sbb
xchg
pop
sbb
xchg
jg
ins
aam
pushf
js
sub
aam
es
mov
sbb
mov
mov
fimul
or
xchg
sti
pop
pmulhuw
dec
lock
pusha
sahf
push
and
test
mov
cld
scas
and
jo
push
fst
jbe
test
in
call
out
in
xlat
pop
jl
jge
push
mov
cwde
dec
sub
outs
xor
lock
jae
fstp
add
cmp
cmp
add
call
mov
jnp
inc
scas
push
in
jbe
sar
add
iret
mov
mov
int3
leave
loope
outs
imul
mov
pop
ja
cmp
loop
je
adc
sbb
mov
fisubr
xlat
hlt
jecxz
cmp
ins
mov
dec
xchg
push
xchg
xor
adc
ins
jns
and
sub
dec
xor
jle
outs
adc
pusha
or
aaa
mov
in
push
jb
scas
jmp
or
inc
jge
push
cdq
idiv
call
xchg
(bad)
cmps
out
repz
dec
mov
das
out
inc
sar
jo
or
sbb
push
push
adc
call
inc
and
fst
js
cmps
fldenv
and
dec
cwde
pusha
mov
hlt
mov
lea
mov
ret
adc
mov
shl
xor
aad
sbb
(bad)
aas
sub
call
jae
push
shl
jp
lds
daa
outs
inc
push
cld
jnp
or
xor
cmp
add
xor
repz
inc
mov
mov
data16
jbe
into
lods
(bad)
push
repnz
mov
icebp
ficom
sub
fbld
jmp
cmp
and
ret
jmp
data16
enter
jae
neg
lds
adc
rcl
add
xor
mov
inc
sbb
push
mov
stos
push
adc
(bad)
mov
fcom
(bad)
xor
or
enter
adc
inc
xor
fiadd
inc
cmp
cmc
arpl
ds
jmp
jmp
aaa
(bad)
xor
dec
mov
scas
sbb
push
in
rcr
out
ret
imul
sub
or
mov
ins
test
dec
xchg
mov
mov
push
sub
push
sbb
out
add
xchg
jg
and
push
cmp
outs
daa
sahf
pop
or
mov
jg
jle
push
sti
shl
and
adc
outs
outs
xchg
adc
int3
in
pop
lods
jb
scas
push
neg
mov
fwait
cs
stc
mov
ja
cmc
adc
push
add
in
repz
(bad)
pushf
icebp
mov
movs
mov
jl
xor
dec
sbb
pop
mov
push
outs
fcom
sbb
mov
mov
ins
pop
into
xor
inc
or
or
push
add
(bad)
pop
lods
mov
or
mov
mov
daa
in
stos
not
mov
arpl
pop
fisubr
push
iret
cs
popa
or
xor
jle
les
xor
das
mov
bound
loop
pop
out
fst
iret
and
clc
(bad)
or
sbb
ret
adc
in
in
(bad)
(bad)
xor
aad
and
(bad)
cli
jnp
into
inc
push
call
mov
pushf
repnz
xchg
div
fist
sbb
xchg
pop
add
js
inc
push
mov
mov
hlt
test
shl
sbb
xor
cmp
adc
jecxz
call
ret
sbb
push
jg
int
mov
(bad)
stos
mov
or
ds
movs
mov
rol
loope
scas
add
aad
ret
fsub
xchg
adc
sub
mov
loopne
lea
and
mov
adc
add
mov
sub
not
xor
cwde
push
loopne
call
ss
mov
mov
adc
inc
push
leave
fwait
sbb
or
call
sbb
int3
fistp
push
jmp
xchg
cmp
std
dec
inc
jmp
jecxz
cmps
rol
pushf
pcmpeqw
daa
mov
mov
ficom
into
xor
xchg
pop
inc
aaa
jecxz
out
mov
in
mov
or
out
(bad)
mov
dec
adc
out
mov
xlat
jle
fcmove
fild
mov
adc
push
pop
push
inc
shl
add
clc
cli
xchg
xor
call
xor
cmp
sar
push
les
add
out
movs
or
jl
mov
cmps
or
push
fnstsw
(bad)
sbb
lahf
adc
pusha
push
push
jle
xlat
xor
mov
mulps
sbb
icebp
and
push
loope
xchg
int
cli
test
cmp
jl
ds
push
movs
aam
pop
mov
push
movs
arpl
pop
cmp
and
test
adc
fdivr
jl
mov
xor
sbb
aam
jb
js
mov
xor
sbb
ret
xor
and
xchg
scas
push
mov
sub
mov
or
fcmovbe
arpl
rcr
lock
pop
dec
dec
jle
aad
data16
sbb
bswap
lock
adc
push
in
clc
xchg
stc
out
mov
pop
rol
sub
dec
mov
sub
fisub
sar
stc
sbb
aad
mov
push
cmps
inc
mov
sub
xor
mov
outs
call
xchg
lock
sbb
mov
and
int3
and
inc
mov
mov
fnstenv
hlt
and
dec
repnz
dec
mov
bound
jbe
push
in
nop
cmp
adc
push
in
es
stos
add
sbb
test
outs
fidivr
aad
leave
js
in
cmp
cmp
push
jo
fs
scas
sub
sub
jmp
mov
adc
and
sub
push
cli
sub
dec
dec
pop
jns
stos
push
mov
push
scas
xchg
fimul
dec
fcom
mov
cmp
inc
cmp
xchg
adc
mov
adc
adc
imul
sub
cmp
dec
add
jo
sbb
repnz
das
or
or
sti
xchg
jns
sahf
mov
and
lds
adc
push
in
repnz
xor
dec
movs
aam
dec
outs
add
mov
mov
fwait
xor
in
cmps
cmp
std
xchg
(bad)
mov
xchg
inc
sbb
inc
fwait
push
mov
mov
in
lea
xchg
enter
jbe
jno
xchg
movs
leave
popa
inc
dec
aam
xchg
xchg
inc
adc
sbb
xchg
sbb
pop
sbb
and
fstp
or
sub
adc
call
fwait
pop
xor
sbb
mov
fiadd
mov
jae
test
mov
sbb
sbb
xchg
xor
cwde
dec
clc
xchg
rcr
adc
mov
enter
stos
push
gs
(bad)
fnstsw
mov
pop
sub
mov
repz
in
xor
dec
ins
jae
ret
lock
jge
repz
jae
outs
outs
sub
arpl
shr
pop
or
dec
xchg
adc
jbe
mov
pushf
les
sahf
pop
adc
dec
push
jne
stos
out
(bad)
sub
frstor
bound
(bad)
fcomp
push
call
or
fldcw
(bad)
imul
and
pop
mov
dec
cmp
adc
push
pop
ins
mov
fild
or
push
and
sub
push
sbb
je
neg
or
sub
xchg
xchg
inc
cli
arpl
fwait
and
(bad)
(bad)
stos
lods
(bad)
fldcw
stc
in
gs
pop
fisttp
lods
push
daa
fs
dec
addr16
cmp
cld
add
std
clc
das
mov
mov
sbb
fadd
mov
pop
out
sahf
mov
xchg
into
adc
test
dec
stc
pop
jno
push
push
(bad)
movs
dec
std
ins
dec
jmp
enter
in
imul
aad
jns
ja
mov
mov
mov
add
and
shl
(bad)
cmp
mov
dec
arpl
adc
mov
aad
stc
dec
xchg
push
(bad)
xchg
test
pop
out
xchg
jmp
xchg
mov
sbb
pop
(bad)
adc
and
nop
mov
or
adc
cmps
jp
mov
pop
data16
cmp
stos
cdq
ins
xchg
sub
xor
ret
lea
mov
pop
dec
inc
ficomp
dec
clc
dec
dec
out
mov
repz
lods
mov
jno
ins
fnstsw
pop
xchg
jg
sbb
aam
out
stos
out
jns
jmp
ins
out
lea
es
jge
xchg
scas
jbe
sbb
cwde
js
aas
mov
xchg
aaa
dec
lock
popf
je
push
std
adc
mov
mov
adc
push
dec
push
das
cmp
sar
pop
mov
push
push
test
scas
sbb
jp
outs
(bad)
dec
mov
pushf
adc
inc
ss
outs
adc
dec
xchg
mov
push
dec
jno
or
das
and
adc
shl
loope
jle
xlat
movs
xor
jnp
popa
in
xor
sbb
mov
jb
icebp
fist
(bad)
cmps
xchg
lahf
and
ds
test
lds
mov
icebp
sahf
fsub
sbb
cmp
mov
pushf
push
dec
fisubr
mov
fst
dec
dec
jnp
and
dec
in
dec
fist
(bad)
mov
pop
std
aam
push
push
cmp
repz
mov
gs
xchg
cmp
jbe
xor
test
sub
jns
sbb
stos
add
fsub
sbb
sbb
in
pop
lock
sub
mov
mov
pop
outs
pop
push
push
imul
(bad)
jecxz
movs
in
repz
lods
push
repnz
xchg
pop
adc
popa
sbb
pop
push
push
jg
popa
icebp
pop
int3
mov
inc
mov
movs
retf
(bad)
cmp
(bad)
cmps
mov
cmc
rcl
ret
push
aas
mov
or
push
repnz
mov
lea
jle
out
cmp
mov
imul
adc
stc
int3
iret
xchg
adc
cwde
jl
dec
push
inc
pop
adc
xchg
xchg
std
(bad)
jo
mov
inc
mov
sahf
jecxz
pushf
clc
cmp
xor
rcl
adc
xor
call
(bad)
sbb
mov
push
mov
mov
adc
fisub
int
and
push
push
push
popf
sbb
push
loop
ins
les
jo
cmp
pop
cmp
test
jge
aam
cdq
(bad)
ja
push
fmul
fwait
rcr
mov
lahf
ja
sbb
mov
dec
int
stos
mov
xor
imul
pop
loope
addr16
cmp
test
push
and
inc
int3
out
jo
ins
(bad)
jp
or
xor
and
push
sbb
rep
and
xchg
popa
jnp
enter
add
cmp
mov
pop
xchg
jnp
inc
mov
xchg
es
cmp
push
fnstenv
sub
jle
xor
or
xor
mov
mov
mov
mov
fsub
dec
ror
in
arpl
lods
enter
jecxz
leave
mov
mov
fcmovbe
out
push
mov
retf
add
mov
xor
sbb
pop
retf
xchg
and
test
lahf
xchg
into
mov
pop
cmp
hlt
lock
adc
retf
mov
retf
inc
frstor
js
cmp
stos
arpl
add
add
pop
xchg
inc
stc
pop
inc
or
push
add
stos
enter
mov
push
sbb
sub
pop
mov
es
adc
loopne
or
sbb
inc
and
cli
inc
in
or
xor
mov
dec
cmp
stos
mov
or
mov
sbb
and
add
ins
push
sar
scas
in
sahf
cwde
mov
data16
in
jg
xor
and
adc
mov
xchg
(bad)
repz
(bad)
fisttp
dec
inc
int3
push
jl
repz
jbe
sbb
out
arpl
imul
and
setno
mov
mov
in
push
dec
pusha
daa
add
mov
loop
repz
int3
(bad)
fs
aad
aam
iret
jno
mov
push
mov
scas
jge
lock
jne
add
xor
aas
mov
popa
movs
jge
iret
mov
sbb
sar
inc
or
pusha
ds
jg
lods
out
loop
cmp
in
sahf
jnp
int
mov
mov
icebp
daa
jge
ins
adc
or
dec
or
out
sub
aad
pop
dec
pavgw
xchg
shl
arpl
js
gs
jb
rcr
mov
pop
test
xchg
call
les
ja
push
into
jns
push
pop
and
retf
sub
xor
enter
mov
mov
push
jo
pop
push
sub
stos
in
repz
sbb
inc
in
jns
push
cmp
and
or
test
in
jb
pop
inc
rcr
popa
inc
loop
add
test
lahf
fild
pop
fucomp
popf
mov
mov
cs
pop
jge
and
stc
inc
(bad)
and
mov
mov
dec
les
pop
adc
mov
inc
adc
arpl
jbe
in
mov
cs
pop
sbb
lods
push
and
pop
jnp
and
das
arpl
and
push
mov
or
in
test
xchg
in
pop
push
aad
jne
push
jmp
pop
retf
push
sbb
push
jecxz
cmp
pop
sar
nop
hlt
xlat
in
jne
test
add
aad
ja
(bad)
jno
dec
fmul
rcl
jno
dec
sub
ds
sub
iret
jp
mov
cli
test
in
pop
(bad)
pop
inc
aam
out
push
sub
cmp
jmp
fcom
cli
(bad)
adc
mov
fsub
dec
push
sahf
jb
jl
mov
mov
sub
(bad)
inc
(bad)
int3
scas
std
into
xor
xchg
lock
sub
mov
dec
push
or
jmp
cmp
push
addr16
sar
loopne
aas
stos
cwde
jnp
imul
xor
sbb
xlat
inc
or
cmp
out
or
ja
bound
scas
div
inc
dec
or
inc
hlt
cmp
repnz
pop
lea
pop
mov
add
add
jbe
mov
xor
sub
cmps
out
cld
out
(bad)
cmps
test
jecxz
sbb
sbb
inc
dec
ret
dec
sub
into
push
mov
std
sub
pop
sub
or
jp
daa
pusha
inc
jecxz
mov
cmp
icebp
mov
pop
add
loop
push
(bad)
xor
adc
repnz
mov
in
ss
inc
xchg
imul
ss
mov
(bad)
jnp
call
nop
aas
sub
push
adc
sub
xor
cs
js
les
push
xchg
jmp
inc
gs
or
add
add
inc
leave
lods
pop
lock
outs
cwde
xchg
jmp
or
xor
push
ret
lock
xchg
pushf
gs
rol
and
shl
(bad)
push
shr
cmp
cld
sbb
mov
loope
mov
repnz
ins
push
(bad)
mov
scas
(bad)
add
push
test
sbb
xor
fdivr
inc
out
push
and
xchg
inc
xor
and
mov
pop
mov
bound
faddp
and
and
ret
(bad)
mov
(bad)
into
(bad)
add
xchg
popa
sahf
not
pop
ret
xor
mov
jb
xor
pop
lods
jo
aas
jg
shl
jo
lods
rcr
ds
out
adc
jg
lods
xchg
jnp
xor
(bad)
rol
add
fldenv
add
push
sbb
xchg
loopne
fsub
nop
and
das
mov
into
daa
mov
mov
(bad)
test
push
dec
les
cmc
and
clc
fldpi
enter
xor
add
xor
pop
test
jne
imul
cmp
sub
sbb
pop
popa
dec
xor
scas
cmp
outs
jp
inc
mov
jbe
ret
test
test
jnp
cmp
sub
pop
cmc
mov
shl
retf
test
(bad)
lock
jmp
cwde
push
ds
inc
and
adc
add
arpl
mov
mov
dec
icebp
mov
mov
jmp
fsub
cdq
in
clc
stos
(bad)
xor
xor
aad
xor
dec
outs
fcmovnb
pop
sbb
and
xor
imul
adc
pushf
inc
sbb
lods
shr
addr16
test
jl
mov
add
out
(bad)
jno
out
pop
xchg
dec
int
std
push
xchg
sbb
pop
dec
and
cs
push
adc
leave
mov
lds
repnz
push
sub
ficomp
in
push
icebp
(bad)
call
sbb
aaa
arpl
sahf
sub
xchg
test
push
and
jae
ds
(bad)
fucom
sub
mov
xchg
add
(bad)
push
or
dec
pop
mov
iret
pop
dec
inc
test
mov
and
pushf
jo
call
in
adc
loopne
sti
es
lods
das
stos
sub
fadd
in
test
mov
es
cmp
sub
leave
xchg
push
sti
mov
cmp
mul
pop
push
int3
push
push
pop
mov
imul
adc
sub
push
xor
inc
xchg
xor
adc
jle
cmp
int3
loop
fs
push
pop
jne
mov
and
pushf
(bad)
jp
cmp
jnp
xchg
ror
cmp
sub
mov
jae
mul
jmp
pop
daa
mov
inc
add
dec
fwait
inc
sub
inc
jl
cli
and
adc
addr16
shr
fsubr
ficom
and
sub
or
pushf
pop
loop
dec
jl
xor
inc
icebp
mov
(bad)
mov
stc
ror
fisttp
ins
sub
ror
scas
in
jae
xchg
xchg
scas
fld
movs
jb
ss
dec
in
mov
sub
push
dec
test
dec
sub
clc
jne
mov
fistp
punpckhbw
add
idiv
or
hlt
xor
or
ins
jnp
cmp
push
mov
mov
movs
jno
leave
add
xor
sar
cmps
pop
rol
mov
pushw
loopne
popf
loopne
adc
cmp
mov
test
loop
xlat
or
dec
icebp
std
inc
or
lock
jp
or
mov
pop
rol
sub
adc
pop
mov
pop
not
jg
or
call
call
sub
push
jecxz
or
inc
(bad)
js
push
jns
imul
xor
(bad)
sub
js
push
jmp
pusha
scas
xchg
jmp
ds
push
pop
pop
jae
loop
std
ret
movs
jg
push
sti
sub
pop
(bad)
in
rol
xchg
pushf
outs
push
xchg
push
je
rcr
mov
int3
mov
fcmovb
leave
(bad)
mov
sub
repnz
xlat
shl
xchg
std
xor
call
std
push
ror
jns
mov
aas
dec
scas
inc
repz
scas
ins
mov
mov
sbb
jbe
sub
push
sub
mov
pop
leave
stos
(bad)
out
push
xor
out
pop
and
or
out
dec
push
mov
dec
push
jg
mov
iret
xchg
adc
ins
adc
mov
xor
mov
add
fisttp
fiadd
sub
or
pop
mov
xchg
pop
pop
cmp
mov
push
cmp
push
push
sub
dec
ror
adc
mov
out
js
xchg
in
sar
mov
sahf
adc
sahf
outs
mov
movs
adc
cdq
repnz
pop
inc
add
xchg
add
test
(bad)
enter
fs
je
into
ret
(bad)
jne
add
and
push
in
add
or
push
adc
mov
je
mov
outs
js
push
sub
cmp
dec
cld
pop
jb
xchg
jnp
or
inc
test
(bad)
add
ret
arpl
jns
adc
mov
cmc
or
push
ins
jecxz
jmp
mov
(bad)
mov
loop
push
sti
outs
inc
not
lods
rol
push
pop
cdq
push
(bad)
sahf
adc
pop
adc
dec
fidivr
xchg
mov
lahf
add
pop
pop
inc
arpl
or
pusha
add
mov
pusha
cmp
dec
dec
pop
jl
sub
rol
ror
push
cli
and
imul
jne
pop
in
popf
xor
bound
fild
mov
fwait
mov
xchg
adc
adc
shl
mov
pop
pop
mov
outs
pop
inc
hlt
fld
es
cmp
cmp
push
cmp
mov
lea
rep
std
js
push
ins
test
push
add
jne
xlat
imul
mov
sub
into
or
in
mov
sub
jno
in
sub
fst
xchg
mov
pushf
fsubr
shl
test
lds
dec
jecxz
popa
aad
cld
out
xor
shl
mov
mov
pop
pop
ss
data16
ins
and
dec
xchg
push
test
cld
mov
jo
or
out
add
push
inc
je
sub
inc
push
mov
push
leave
nop
xchg
cmps
xchg
out
ins
cmps
shl
mov
pop
jecxz
inc
push
(bad)
mov
pop
push
fucom
jnp
xchg
pop
and
cmps
push
shl
in
(bad)
imul
add
call
or
xchg
or
mov
arpl
movs
jmp
adc
cmp
pushf
mov
cdq
jl
lea
test
das
retf
fisub
(bad)
push
adc
add
shr
jae
aad
inc
(bad)
loopne
sti
inc
div
mov
fisub
stc
sub
sahf
ret
dec
pop
or
xchg
nop
add
out
xlat
call
sbb
sub
adc
push
and
jns
loop
fcmovbe
lods
cmp
rcl
arpl
shr
cs
xchg
cmps
inc
adc
push
fs
popf
cs
test
mov
pop
mov
in
pop
or
mov
sar
jb
xor
ret
inc
pushf
aas
or
aam
xchg
cmp
or
pop
dec
sahf
jmp
or
xchg
xchg
test
(bad)
idiv
div
mov
ja
push
or
xchg
mov
gs
inc
jnp
sbb
sub
scas
push
stos
mov
inc
inc
pop
inc
xor
int3
xchg
lahf
push
push
hlt
lea
adc
mov
ja
pop
arpl
fadd
inc
xchg
(bad)
push
push
cwde
mov
push
(bad)
imul
xchg
mov
add
outs
xchg
cmp
add
cmps
jp
mov
test
test
xor
jg
jg
sbb
push
stos
jmp
jl
je
inc
xor
lods
iret
mov
cmp
xchg
cmps
cmp
arpl
pop
sbb
xchg
je
push
and
mov
sub
push
lahf
jp
jns
inc
imul
dec
dec
jo
push
fisttp
jp
(bad)
stos
fucom
pushf
xor
push
clc
mov
cmp
add
or
addr16
fiadd
fldcw
(bad)
mov
movs
xchg
and
js
movs
jnp
pop
fiadd
js
dec
cmp
test
(bad)
ins
cmp
push
leave
jmp
xchg
inc
mov
js
in
(bad)
xchg
(bad)
je
xor
and
not
sbb
inc
push
ret
outs
jno
cwde
iret
pop
cmp
(bad)
dec
retf
mov
out
jnp
mov
cwde
cmps
in
sbb
or
jne
adc
push
jl
test
outs
cld
dec
leave
mov
(bad)
sub
lock
nop
test
(bad)
ror
icebp
jbe
out
add
push
loop
cs
pop
or
ins
push
xchg
sar
fst
adc
in
adc
jae
retf
sbb
out
sbb
ds
imul
cld
dec
mov
hlt
retf
mov
push
xchg
mov
adc
js
ins
xlat
in
sbb
mov
dec
fwait
aad
inc
inc
mov
shl
inc
and
push
mov
inc
mov
retf
jmp
sub
sub
cs
call
jae
inc
adc
mov
and
aam
std
pop
xchg
sub
rol
cli
mov
mov
add
int3
mov
loopne
add
dec
clc
jno
rcl
sbb
call
dec
adc
fcomp
mov
push
dec
data16
sahf
(bad)
mov
xor
pop
jno
xor
mov
out
add
(bad)
out
hlt
dec
rcr
mov
(bad)
cwde
fwait
mov
test
and
fsub
inc
out
mov
xor
push
adc
fmul
(bad)
cmp
jo
inc
or
xchg
cs
inc
mov
inc
sbb
fadd
xor
icebp
adc
cld
in
test
ds
jae
test
xchg
test
int
scas
cmp
das
xchg
std
std
icebp
push
cmps
retf
cmp
xchg
mov
clc
mov
outs
jmp
push
loope
push
into
cwde
ror
adc
repnz
pop
sbb
jge
stos
jmp
sbb
addr16
and
sbb
cs
sub
cli
(bad)
xchg
mov
push
sub
mov
(bad)
shr
inc
movs
xchg
dec
fiadd
pop
inc
pop
loope
loope
sbb
icebp
leave
ret
push
push
push
and
ret
dec
jge
shr
mov
ins
les
cdq
mov
dec
or
inc
scas
(bad)
std
dec
cmp
cmp
popw
clc
adc
arpl
pop
jbe
mov
or
int3
sbb
sub
ret
fidiv
test
push
sbb
mov
mov
imul
pop
outs
js
cmps
pop
in
dec
jl
lea
jmp
cli
rol
jb
and
leave
retf
(bad)
mov
retf
neg
adc
loop
jge
fstp
cmp
imul
outs
shl
mov
fwait
adc
mov
mov
and
add
sub
lock
ds
add
sbb
mov
jno
(bad)
cmc
push
sti
nop
cmps
push
mov
and
cmc
adc
jne
(bad)
out
xchg
div
sub
sub
fwait
xchg
lds
xor
sbb
mov
sti
dec
ins
xchg
mov
mov
retf
jmp
or
cmp
and
jp
hlt
stos
sbb
dec
leave
mov
and
jo
jae
jae
xor
adc
aaa
in
jmp
mov
test
push
push
rol
out
fs
pop
lahf
mov
movs
inc
in
add
into
add
outs
adc
and
mov
mov
jl
addr16
cmp
std
jge
dec
xchg
xchg
inc
lods
outs
xor
xor
hlt
mov
pop
hlt
dec
cmp
enter
inc
mov
ror
cwde
mov
fadd
mov
pop
outs
(bad)
stos
das
aas
adc
sbb
shr
adc
adc
inc
outs
mov
push
idiv
addr16
test
stos
mov
cmp
mov
cmps
xor
cs
or
add
scas
push
and
out
enter
mov
xchg
movs
and
add
xchg
cs
(bad)
adc
mov
repz
das
ins
ret
aas
sbb
inc
cld
(bad)
adc
pop
adc
add
and
sbb
popa
cmp
das
call
test
push
aaa
std
js
dec
jmp
lods
sbb
mov
repz
adc
xchg
pop
call
mov
inc
jnp
je
push
(bad)
and
adc
mov
rol
fidiv
push
cmp
inc
fnstcw
pop
sbb
gs
aas
mov
mov
or
aas
movs
add
int3
push
sub
inc
push
stos
ds
addr16
(bad)
fcom
stos
cmps
adc
dec
arpl
out
inc
jmp
sbb
fldcw
mov
xor
xor
mov
mov
lea
lds
mov
pop
xchg
pop
and
push
mov
push
pop
sbb
cs
pushf
test
je
popa
retf
mov
cmp
xchg
sbb
leave
mov
sahf
xchg
and
call
xchg
and
pop
jg
fld
retf
cmp
cld
mov
in
fidivr
or
int
enter
imul
enter
dec
inc
ja
lds
inc
or
push
and
or
jmp
jae
jge
mov
jmp
shl
push
adc
push
lahf
out
mov
cmp
arpl
in
mov
(bad)
xchg
sub
ret
fstp
in
(bad)
lods
inc
enter
js
into
fidiv
and
into
adc
pop
pop
jmp
inc
jno
test
inc
adc
push
or
push
dec
mov
or
in
stos
pop
push
daa
mov
jno
push
mov
inc
aam
adc
jl
test
xchg
fistp
push
push
lods
mov
or
adc
aas
adc
xor
and
fldenv
cmp
test
sub
mul
sbb
cmp
sti
outs
sti
ja
adc
push
fcomip
stc
sub
rol
hlt
and
mov
sbb
arpl
stc
shl
lds
repnz
loop
(bad)
or
out
fdivp
xor
mov
pop
addr16
movs
movs
fisttp
dec
test
xor
lahf
or
mov
or
imul
mov
ror
test
push
mov
mov
out
dec
loope
dec
lds
jnp
(bad)
xlat
cmp
shl
jmp
jns
repz
dec
lahf
sub
ja
add
lock
not
push
mov
into
out
dec
out
xchg
mov
mov
xlat
adc
fwait
sub
enter
ja
(bad)
push
repz
dec
push
pop
aad
push
test
call
pop
mov
js
sti
mov
add
std
and
cmc
xchg
xchg
lea
aad
psubsb
pop
cmp
xor
std
pop
adc
push
pop
pop
and
sub
and
shl
inc
jnp
ret
ja
inc
jnp
dec
cdq
pop
mov
mov
and
std
sbb
lock
daa
out
push
push
xchg
out
mov
pop
dec
sub
fwait
push
fmul
hlt
mov
xlat
sbb
ret
js
pop
enter
jnp
mov
xchg
fldcw
push
icebp
sbb
inc
sub
imul
fnstsw
hlt
cli
dec
ret
push
xor
fcomp
daa
mov
outs
jae
mov
stos
addr16
fimul
jbe
mov
adc
test
pop
test
sbb
nop
les
jnp
pushf
mov
dec
and
mov
adc
lock
stos
js
out
ret
xchg
cmps
sbb
jnp
gs
push
cmp
fdivr
fs
sub
sub
or
ja
rcr
pop
adc
dec
lock
push
cmp
fild
int
inc
push
je
push
cmps
imul
sub
repz
mov
out
jl
sub
sub
repnz
fs
cwde
push
int
jo
fs
out
loopne
mov
aam
cs
imul
or
cmp
jmp
push
push
inc
not
pop
mov
xchg
pop
cmc
lahf
scas
mov
mov
dec
idiv
dec
sub
push
pop
inc
xor
or
leave
out
add
int3
mov
mov
mov
nop
push
add
shl
sar
(bad)
cld
push
mov
iret
popa
push
rcl
or
lods
mov
ja
outs
lods
adc
mul
repnz
cmp
xor
jge
js
xor
mul
cmp
xchg
test
hlt
add
pop
or
adc
cmps
int3
test
add
inc
sahf
test
sti
xchg
fmul
push
aam
ret
inc
in
outs
cs
fadd
sub
cld
jmp
ss
cs
sahf
adc
jne
or
add
(bad)
pop
rcl
xor
add
sbb
dec
ds
lods
shl
int3
or
repnz
mov
das
add
xchg
ds
out
add
ja
inc
jmp
stos
dec
mov
bound
outs
std
loopne
jmp
and
push
movs
mov
sti
cld
add
div
clc
or
out
push
adc
xor
mov
out
xchg
push
xchg
fistp
mov
enter
push
aaa
pop
pushf
xchg
rcr
pop
adc
out
pusha
ins
dec
dec
cmps
shr
das
pushf
adc
(bad)
mov
nop
into
ins
cmp
mov
pop
daa
ins
lods
js
mov
xor
cmps
dec
xchg
jns
or
dec
scas
push
shr
xor
cwde
and
mov
out
dec
adc
sbb
cmc
mov
popa
mov
jge
(bad)
(bad)
and
lahf
cmp
dec
cmps
inc
lods
rcl
pop
sahf
not
xchg
jg
sbb
sbb
(bad)
fisubr
in
or
jnp
adc
std
jecxz
xor
data16
mov
cmps
mov
jnp
xlat
repnz
xor
cli
jmp
call
and
gs
dec
xchg
call
out
(bad)
and
adc
adc
pop
aas
mov
dec
dec
or
fldcw
enter
push
daa
mov
and
(bad)
pop
xchg
adc
push
sub
jns
xchg
push
pop
jmp
adc
dec
ficom
shl
es
sub
rcr
pop
xchg
clc
xchg
lds
adc
(bad)
retf
adc
lods
fimul
mov
cld
(bad)
aaa
fld
dec
inc
cld
fcomp
pop
mov
mov
mov
jl
out
sub
or
and
mov
hlt
push
pop
sub
cmp
rcl
int
out
xchg
ror
fadd
into
cmp
dec
or
in
fs
faddp
or
hlt
stc
jo
adc
je
or
or
pop
or
hlt
imul
and
shl
mov
sti
mov
aaa
jae
test
sbb
retf
loop
(bad)
mov
addr16
mov
sbb
adc
fwait
or
bnd
xchg
cmp
fidivr
mov
icebp
lods
inc
mov
lods
mov
add
and
retf
inc
mov
mov
or
inc
pop
test
enter
es
sbb
mov
cmp
and
loope
fs
nop
add
shl
pop
sahf
pop
bound
mov
mov
mov
inc
stos
lock
and
aas
(bad)
loop
cmp
mov
sub
jg
inc
pop
retf
sti
pushf
jg
mov
imul
out
mov
fcmovnbe
push
iret
jmp
xchg
fwait
jnp
dec
adc
add
pop
outs
fdivr
out
xchg
xor
mov
mov
(bad)
int
std
jbe
mov
lods
and
test
inc
push
call
inc
and
arpl
neg
outs
out
adc
dec
mov
dec
pop
(bad)
mov
pop
mov
pop
and
add
js
hlt
and
cmp
fucomip
xor
or
sub
shl
loop
in
and
inc
sub
retf
in
fstp
mov
(bad)
shr
xlat
call
ins
sbb
jle
jge
test
push
fsubr
xchg
ins
scas
mov
mov
fisubr
daa
cli
mov
or
jo
sub
jp
sbb
mov
push
or
dec
cmp
xchg
int
scas
mov
add
cmp
mov
mov
je
sub
push
ja
cmp
fsub
sub
push
pop
or
outs
push
sbb
cmps
scas
stc
outs
cmp
push
push
sahf
lahf
popa
scas
test
xchg
adc
popa
scas
xor
jmp
loop
mul
not
std
or
mov
fisubr
inc
or
shl
scas
sbb
mul
ficomp
push
jbe
push
add
loope
sub
inc
shl
cmps
mov
mov
pop
into
or
mov
(bad)
and
sbb
cs
(bad)
push
sbb
test
xchg
cmp
mov
ret
ins
iret
jmp
cmp
mov
cwde
pop
sbb
shl
lahf
push
mov
or
fidivr
mov
dec
(bad)
mov
sahf
ror
mov
inc
lods
add
pop
mov
inc
and
xchg
ss
call
pop
in
push
xor
jle
mov
mov
nop
mov
loop
push
mov
or
pop
jp
dec
clc
cmp
jg
fist
dec
xchg
push
inc
sub
loope
sub
ins
repnz
(bad)
xor
repz
addr16
pop
fbstp
xchg
out
push
mov
mov
hlt
or
dec
imul
mov
and
aad
or
movs
mov
cs
jne
mov
jg
and
xchg
ds
daa
ficomp
lods
dec
lds
jmp
jge
mov
xchg
loopne
ret
dec
or
call
rol
push
dec
xlat
mov
ins
jge
add
loope
add
clc
imul
aam
dec
mov
mov
out
xchg
cli
aas
call
cmps
adc
and
cmp
gs
repnz
shr
mov
push
stc
das
jg
pop
in
or
mov
enter
dec
repz
inc
out
popf
sub
mov
stos
and
call
pop
test
mov
in
mov
or
mov
push
sub
call
cmp
idiv
jno
out
popf
add
sti
sbb
mov
pop
es
les
into
mov
jg
sub
sbb
adc
mov
xchg
sbb
test
test
idiv
or
fcom
mov
pop
(bad)
(bad)
ja
outs
cmp
lods
and
addr16
or
(bad)
lds
inc
rcl
jae
push
sti
pop
sub
in
aam
movs
pop
inc
rol
sti
ret
addr16
add
in
ja
sahf
shl
adc
xor
rcr
fbld
xlat
xchg
imul
fs
and
inc
js
xor
jnp
push
jae
cmovno
cwde
jle
shr
(bad)
out
and
inc
pop
fisttp
sbb
mov
lds
(bad)
or
and
in
jne
and
push
mov
int3
adc
adc
fcomp
inc
dec
cmp
(bad)
xor
je
cmp
or
mov
imul
jns
pop
xchg
leave
jns
scas
lods
out
push
push
popf
cmps
inc
(bad)
lahf
mov
adc
cld
repz
add
cmp
std
adc
xor
movs
sub
jnp
jne
xchg
ins
idiv
cmp
test
enter
lock
pop
xchg
lahf
push
pop
in
lahf
gs
mov
inc
aad
push
xchg
sub
mov
sub
adc
in
inc
xor
or
jle
or
stc
sbb
clc
jne
movs
mov
mov
neg
cmp
pop
adc
push
in
inc
mov
lock
add
outs
dec
movs
popf
daa
daa
out
mov
mov
add
inc
das
clc
adc
jmp
xor
cwde
fnstenv
adc
sub
pop
imul
pop
popf
pop
(bad)
mov
div
loope
loopne
mov
ins
or
cmp
push
addr16
mov
xchg
sar
push
sub
adc
sbb
push
popf
add
or
ror
or
mov
dec
call
jns
loop
dec
cs
xor
push
mov
mov
inc
mov
lods
stos
dec
mov
inc
popa
les
cmp
movs
mov
shl
jo
and
jg
iret
daa
xchg
cs
adc
imul
stos
push
sbb
ret
ins
and
dec
ret
add
retf
add
jmp
adc
push
sub
dec
aas
addr16
inc
jns
sbb
into
mov
lds
xchg
popf
adc
out
sub
mov
jle
ds
add
push
fstp
mov
daa
mov
mov
add
shr
push
popf
add
imul
shl
retf
cmp
add
lock
shr
es
dec
imul
ret
imul
mov
lods
xchg
out
out
and
inc
xchg
lds
push
mov
mov
pop
call
cmp
and
ds
rcl
dec
jg
scas
pop
outs
inc
test
xchg
xor
jecxz
cmp
sub
popa
jmp
sub
ins
sbb
inc
jns
retf
dec
push
loopne
test
out
int
xchg
rcl
xor
lea
pop
mov
adc
and
push
mov
arpl
mov
or
ret
and
mov
(bad)
fmul
mov
mov
and
cmp
aam
jp
jne
cmp
cs
push
stos
jge
pop
hlt
enter
cs
outs
pop
cdq
jge
jmp
mov
pusha
mov
mov
or
adc
inc
mov
movzx
add
js
ins
call
mov
out
in
or
popf
shr
aaa
cmp
mov
fsub
jp
push
sbb
or
cmp
pop
cmp
pop
lea
mov
mov
dec
(bad)
(bad)
jne
xor
imul
cmc
sub
in
hlt
inc
aaa
aas
inc
jae
sbb
pop
out
pop
xchg
lds
test
push
xchg
mov
jb
cmp
mov
xor
mov
outs
and
pop
test
push
jo
jge
or
icebp
js
fiadd
xchg
pop
in
outs
and
cld
cmp
shl
add
lahf
movs
jbe
push
icebp
push
addr16
enter
jmp
jo
call
and
mov
dec
shr
add
or
xchg
pop
add
rcl
or
pop
dec
jp
shr
push
mov
add
sub
jnp
push
pushf
popf
(bad)
sbb
les
mov
and
mov
mov
mov
mov
sbb
in
in
pop
(bad)
push
xchg
cld
mov
ret
pop
aad
in
loope
js
sbb
lods
jb
in
test
xor
xchg
adc
rcl
sahf
dec
dec
int3
lds
xchg
jb
or
sahf
pop
mov
push
pushf
retf
mov
cmovle
jl
ins
(bad)
fstp
mov
lahf
cld
dec
push
mov
ret
js
xor
shl
jnp
xchg
and
dec
jge
pop
push
fidiv
popf
lock
sti
pop
xchg
adc
sbb
mov
ins
mov
ret
retf
imul
mov
mov
in
add
add
call
cmp
xor
(bad)
das
sahf
fnstenv
pushf
imul
jmp
inc
inc
cmp
sbb
mov
push
jno
cmp
push
add
nop
cmc
dec
out
push
cmp
jp
cmp
call
and
icebp
sbb
ss
inc
sbb
mov
lds
jne
sub
out
cmc
mov
cs
test
test
pop
in
ds
gs
in
jns
arpl
loopne
inc
ds
inc
std
and
jle
daa
mov
dec
cmp
xchg
or
dec
adc
mov
repz
add
push
xchg
or
dec
repnz
daa
vpor
enter
push
lods
mov
fstp
addr16
(bad)
lock
je
ficom
sbb
sbb
out
push
test
aaa
pusha
push
pop
push
push
jle
jl
cmp
dec
sub
imul
icebp
xchg
mov
sbb
xchg
repz
pop
or
test
dec
sahf
xor
daa
xor
retf
xchg
mov
stc
inc
ror
lock
sub
outs
lea
aam
(bad)
(bad)
shr
cli
inc
cmp
ins
call
xchg
cmc
xor
push
lea
xor
dec
loop
and
inc
mov
mov
xchg
adc
sub
es
in
cmps
iret
fwait
lds
js
arpl
enter
inc
ds
popf
shl
nop
xchg
inc
adc
es
iret
movs
ja
jb
out
mov
fiadd
shl
cmp
fyl2x
jge
or
repz
xchg
push
push
iret
dec
sub
mov
push
pop
(bad)
xor
mov
pop
push
pop
ins
fld
out
jl
daa
mov
pop
leave
cmp
cmp
pop
out
dec
cmp
call
cld
(bad)
mov
pop
or
inc
test
rol
movs
ret
push
add
xor
and
pop
push
mov
out
jecxz
push
jg
push
mov
imul
and
xlat
mov
outs
push
mov
movs
mov
sub
jmp
call
mov
dec
out
push
jmp
mov
pop
mov
ficom
cmp
push
loopne
lods
ret
fcomp
cs
pop
push
sahf
in
adc
xchg
mov
mov
loopne
in
aas
pop
mov
jae
cmps
and
xor
push
xchg
jg
ror
pop
outs
jl
dec
inc
adc
xor
popa
sbb
push
(bad)
mov
push
mov
lods
stos
into
push
push
push
cmp
dec
loope
in
mov
stc
pop
ja
dec
cmp
outs
popf
fwait
jne
cmp
sahf
or
(bad)
dec
fdiv
js
mov
sub
aas
mov
das
mov
mov
retf
jnp
xor
aam
adc
add
jmp
adc
cld
mov
ins
pop
pop
stc
push
clc
clc
sar
repz
and
ja
cmp
push
mov
add
jb
mov
int
inc
les
push
sub
stos
add
jmp
call
add
jb
neg
js
inc
inc
cmp
arpl
cmp
ss
jno
dec
xchg
pop
inc
leave
(bad)
adc
lea
scas
in
sub
test
push
jmp
and
fstp
jmp
popa
dec
mov
das
cli
inc
cld
pop
pop
push
mov
xor
xor
push
fwait
add
std
neg
dec
mov
cmp
xchg
or
pusha
in
aas
gs
xor
sub
and
pop
fwait
adc
cdq
xchg
popf
jge
xor
call
(bad)
sbb
out
test
int
js
retf
mov
jg
dec
fcomp
lds
cmps
and
icebp
dec
mov
idiv
dec
mov
ins
mov
sub
nop
ror
cmp
jl
in
cmp
xchg
and
fs
adc
pop
cmc
loopne
push
xchg
mov
(bad)
out
dec
iret
ror
xor
mov
xchg
out
or
adc
ss
iret
add
ror
sub
dec
je
clc
sbb
scas
std
inc
mov
js
sahf
or
cmps
pop
sti
mov
mov
sub
(bad)
pop
mov
fisttp
scas
cmp
shl
mov
popa
inc
cmp
pop
push
add
pop
call
sbb
add
mov
mov
push
push
daa
clc
mov
sbb
sbb
repz
stc
mov
or
inc
inc
jmp
push
pop
xor
cli
js
mov
cli
nop
pop
xor
aad
repnz
fwait
lods
ins
xor
arpl
movs
push
jmp
mov
cmp
pusha
popa
adc
out
mov
lock
sbb
push
outs
loope
add
cmc
xlat
cmp
ret
test
sbb
adc
int
add
mov
nop
fidiv
adc
mov
hlt
mov
bound
jecxz
push
and
lods
xor
add
into
inc
xchg
xchg
pop
adc
loopne
or
xchg
adc
aad
test
bnd
mov
cmp
(bad)
enter
dec
sbb
test
(bad)
cmp
add
inc
jmp
add
test
popf
pop
xor
jl
neg
in
add
cmp
mov
pop
sub
and
int
add
pop
aas
xor
stos
outs
test
rol
xchg
scas
in
xchg
pop
lds
jle
sbb
jle
scas
(bad)
mov
xchg
jbe
pop
movs
sub
adc
dec
fwait
fs
sbb
fwait
stos
punpcklbw
lahf
mov
xchg
icebp
pop
xor
popf
popa
and
popf
std
(bad)
sub
mov
or
push
xor
push
mov
js
pop
mov
cmc
mov
sub
pop
inc
pop
mov
aas
je
stos
aam
adc
mov
imul
je
(bad)
xchg
sub
ror
int
aaa
(bad)
fnstcw
les
jmp
mov
shl
std
(bad)
popa
std
sahf
pop
jecxz
pop
add
or
cmc
dec
stc
(bad)
mov
mov
and
mov
xor
adc
push
leave
enter
jbe
sbb
xchg
lods
loopne
sub
shl
mov
enter
in
dec
and
fmul
and
sti
ret
in
shl
retf
mov
out
mov
xchg
mov
fisubr
ret
adc
and
mov
lods
stc
push
ds
sti
and
add
inc
outs
adc
movs
mov
stos
adc
sub
ins
in
dec
ins
iret
call
aas
or
cmp
jb
xchg
cmp
add
(bad)
dec
aaa
into
inc
ror
rcl
(bad)
mov
pop
mov
cmp
and
loope
gs
sub
xor
add
jge
adc
and
out
loopne
mov
popf
(bad)
imul
lock
mov
jl
dec
mov
pop
in
cli
(bad)
mov
mov
and
enter
and
lahf
bound
stos
neg
xchg
(bad)
mov
(bad)
ss
movs
fndisi(8087
test
push
sbb
shl
pop
adc
jne
in
pop
sub
inc
cmp
test
ror
lods
inc
cmp
jge
push
movs
je
lods
jge
in
cdq
hlt
neg
imul
fsub
cmp
mov
mov
xchg
mov
dec
mov
add
in
pop
js
mov
leave
nop
psrlw
cdq
mov
fsubr
ror
(bad)
pop
icebp
repnz
pop
int
test
push
mov
imul
xor
call
sbb
cmp
add
sahf
xlat
(bad)
xchg
fsubr
pop
dec
jg
movs
inc
scas
mov
mov
aad
mov
test
inc
shr
xchg
leave
ror
sti
pop
mov
jl
ficom
in
popa
sbb
sbb
jbe
sbb
test
lds
sub
dec
mov
add
push
push
pushf
sub
repz
pushf
popa
push
loope
cmps
repz
call
xlat
mov
inc
mov
retf
jnp
retf
bound
idiv
lea
xchg
jb
cmp
jno
adc
sub
cmp
sbb
call
sub
hlt
fsub
test
shl
mov
pop
fmul
div
sbb
inc
xor
fcomp
fst
(bad)
and
enter
mov
cmps
clc
push
adc
aaa
adc
(bad)
leave
mov
cmp
(bad)
push
dec
loope
xor
in
dec
arpl
lods
jl
xor
pop
dec
bnd
retf
(bad)
sub
in
rcl
sbb
sti
push
call
mov
dec
cmp
imul
add
test
fistp
pop
add
push
adc
mov
aaa
pop
dec
and
adc
movs
ja
mov
xchg
xchg
push
loope
ret
arpl
mov
or
and
pop
pop
cmp
jbe
fs
mov
push
and
cmp
outs
pop
ret
or
push
push
dec
xchg
inc
pop
cmp
je
mov
shr
pushf
add
arpl
shr
in
loopne
test
jnp
jno
lea
(bad)
and
and
aam
clc
and
repz
pop
xor
add
pop
mov
mov
xor
add
ja
bound
(bad)
outs
push
icebp
(bad)
shl
xchg
jnp
inc
sbb
jae
fcom
push
xchg
adc
add
fisub
pop
sub
xor
xchg
inc
je
mov
shr
call
nop
jp
clc
loop
push
popa
(bad)
mov
ror
(bad)
shl
mov
scas
cmc
or
adc
sub
lahf
and
pop
inc
sbb
pop
cmp
mov
mov
mov
xchg
in
rol
xchg
out
(bad)
loop
and
mov
add
dec
xor
cmp
movs
cmp
movs
in
jg
mov
movs
push
inc
push
ins
or
cwde
and
test
mov
das
xchg
adc
hlt
pop
sub
and
xchg
inc
lds
pop
sub
mov
pop
cld
(bad)
(bad)
push
lods
add
xchg
call
imul
js
jmp
jg
mov
xor
jmp
aaa
in
js
mov
ja
fnsave
mov
hlt
mov
jge
xor
sbb
ret
mov
or
in
mov
stos
and
test
arpl
mov
in
mov
pop
imul
cmps
dec
xor
dec
loop
iret
cmp
adc
dec
mov
or
cwde
push
cld
and
jbe
or
imul
xchg
pop
shr
jnp
gs
ret
lea
sti
icebp
dec
(bad)
cmp
push
cmp
ins
mov
fdiv
mov
aam
(bad)
mov
mov
push
mov
out
shl
data16
mov
and
mov
jp
cmp
stc
loope
call
pop
mov
dec
clc
xchg
fdivr
outs
and
jmp
mov
arpl
dec
xchg
and
cmp
(bad)
mov
int
sub
retf
cld
imul
enter
inc
and
sahf
(bad)
pop
pushf
push
xor
pop
add
jle
xchg
nop
or
adc
push
movs
out
nop
sbb
mov
pushw
mov
aaa
fcom
mov
xchg
cwde
sbb
pop
mov
enter
fadd
mov
ror
jp
jne
lds
es
movs
cli
cmp
dec
int3
xchg
cs
and
ja
jmp
pop
adc
test
mov
aas
adc
adc
ficomp
pop
aas
push
sbb
push
jecxz
sbb
test
add
rol
mov
cmp
scas
int
scas
iret
xlat
fild
mov
or
push
jnp
ss
ss
data16
inc
pusha
sub
repnz
jae
imul
pop
clc
(bad)
in
mov
dec
pop
and
pop
in
rcl
or
(bad)
xchg
jne
ja
cld
leave
std
out
jne
stos
test
lods
mov
(bad)
adc
daa
jg
sub
sbb
dec
mov
popa
adc
push
enter
(bad)
sar
add
mov
(bad)
je
jns
mov
or
imul
(bad)
arpl
mov
sub
add
mov
mov
add
inc
repz
data16
test
dec
add
out
outs
jnp
push
jecxz
je
xlat
push
jecxz
jl
pop
mov
mov
pop
add
inc
xor
ret
popf
push
jb
cmps
pop
dec
jmp
xor
add
xor
inc
inc
jnp
inc
add
sbb
jbe
xchg
sub
pop
push
mov
dec
mov
icebp
push
lock
int
ja
jge
ret
rcr
rcr
outs
mov
inc
jl
test
outs
cld
mov
fadd
call
ja
xlat
mov
mov
ds
movs
jl
std
inc
ins
mov
in
imul
in
inc
mov
sti
mov
mov
inc
data16
jbe
in
mov
sub
add
test
sub
add
ret
sub
jne
test
cwde
add
in
mov
sbb
pop
(bad)
loope
and
mov
imul
js
fldcw
jecxz
test
pop
mov
mov
mov
ins
xor
jns
cwde
sahf
sbb
xor
imul
mov
into
or
or
std
xor
xchg
pop
xchg
sbb
cmp
push
mov
cwde
(bad)
lods
dec
push
or
lea
or
xchg
popf
out
fld
cwde
mov
or
mov
ins
add
popa
sbb
(bad)
xchg
sub
jnp
push
or
push
imul
and
xchg
test
inc
idiv
push
and
cmps
das
aas
sub
sub
xchg
jmp
add
add
cmp
dec
sar
fild
fsub
xchg
jo
push
scas
xchg
mov
sar
xor
mov
cld
mov
pop
out
jne
xchg
clc
or
call
stos
add
loope
lods
mov
xchg
mov
arpl
mov
mov
sbb
cs
push
dec
pop
shl
xor
shl
dec
cmp
mov
bound
push
dec
ficomp
(bad)
movs
xor
and
inc
data16
or
add
shr
push
imul
and
out
imul
xchg
dec
inc
xchg
pop
shr
jmp
mov
sbb
ret
cmp
cmp
(bad)
sbb
push
cdq
shl
sub
cmps
or
push
mov
add
retf
sbb
dec
or
pop
test
adc
cli
cmp
ja
out
imul
jmp
mov
clc
lock
sub
scas
sar
out
pusha
fnstsw
pop
cmps
pop
lods
push
cli
fsubr
dec
jnp
sbb
mov
popf
repz
dec
mov
xchg
inc
repnz
arpl
add
mov
in
(bad)
fst
mov
sbb
dec
fxch
data16
mov
cmp
hlt
clc
xchg
cmps
mov
and
dec
inc
mov
sub
sbb
(bad)
sti
fcom
inc
fidiv
call
and
sbb
cmp
fmul
pop
lock
jle
stos
xchg
(bad)
fnstenv
jno
mov
adc
sub
xchg
fstp
jp
push
mov
out
adc
adc
loopne
sub
and
stc
or
inc
inc
sbb
adc
pop
arpl
int
aas
lds
add
es
aam
ss
cwde
push
loopne
cmovge
fiadd
jmp
in
sahf
in
addr16
hlt
jb
adc
iret
pushf
xor
pop
movups
xor
scas
hlt
loope
out
int
pop
cmc
add
cmp
outs
mov
push
ins
mov
out
mov
arpl
(bad)
loop
mov
inc
mov
int
sbb
fs
das
popf
sbb
lahf
cwde
mov
mov
adc
jnp
inc
add
add
xchg
mov
mov
push
jbe
xor
dec
daa
xor
popa
pop
xchg
(bad)
imul
pop
sbb
mov
mov
out
mov
sbb
(bad)
inc
sub
out
mov
fldenv
mov
rcr
int
jae
pop
ins
jle
mov
(bad)
(bad)
jmp
dec
pop
xor
add
(bad)
xchg
pop
and
xlat
ret
dec
and
push
mov
inc
adc
push
pop
inc
(bad)
out
xchg
adc
cmp
pop
jg
ja
fbstp
outs
in
inc
popa
mov
mov
pop
mov
dec
or
es
outs
add
mov
mov
(bad)
jmp
mov
or
adc
sbb
popa
aas
sbb
sbb
mov
cmp
imul
jo
ret
cmps
movs
outs
add
retf
fnstsw
mov
mov
xchg
idiv
in
push
sub
imul
fnstenv
rcl
inc
sahf
cld
push
mov
loopne
outs
sub
fs
sub
outs
mov
cli
loopne
pop
pop
or
cmp
pop
mov
inc
mov
jmp
mov
pop
nop
inc
and
xor
jne
xor
push
inc
mov
das
jg
sub
das
and
push
sub
mov
mov
push
mov
push
pop
gs
jg
mov
mov
inc
mov
push
lods
shr
daa
adc
pop
cli
repnz
in
cmp
mov
mov
push
push
sub
add
or
jno
ja
adc
dec
pusha
es
rcr
adc
ret
inc
retf
push
pop
scas
and
jl
jg
cmp
add
adc
sbb
pop
clc
add
dec
pop
jecxz
lahf
idiv
fld
popa
xlat
stc
jno
mov
rol
push
sub
lahf
sub
fdivr
loope
cmps
int3
adc
retf
or
and
mov
out
sbb
ret
mov
les
push
sub
mov
mov
out
pop
mov
mov
mov
add
xor
int
push
(bad)
xlat
push
xor
test
and
aad
cwde
add
out
aam
(bad)
mov
sbb
dec
cmps
fldcw
jmp
cmc
into
xchg
arpl
xor
ja
stos
dec
sub
repnz
fnstcw
stc
cmc
jg
loopne
or
sar
xchg
xchg
pop
pop
movs
(bad)
push
jmp
mov
movs
lods
xchg
mov
and
cli
mov
or
ret
and
out
adc
mov
and
fisttp
and
mov
xor
jnp
pop
out
cmc
push
imul
sbb
pop
mov
outs
cmp
xor
int
(bad)
std
cs
dec
ss
mov
aam
into
stos
in
(bad)
mov
jecxz
dec
push
ret
xchg
mov
push
sub
sbb
sub
xchg
xor
daa
mov
ss
cmp
mov
sub
mov
fstp
sbb
int
mov
fs
jb
aaa
fwait
das
test
sub
sbb
in
(bad)
push
or
data16
mov
push
aaa
repz
mov
and
lock
in
cmp
out
push
and
dec
mov
dec
dec
pop
xchg
or
pop
pop
add
rep
or
mov
cmp
push
ja
mov
ficomp
jbe
adc
lock
fadd
scas
sub
inc
pop
ins
xor
mov
addr16
cmp
cmc
xor
ds
jge
sbb
aas
xchg
push
(bad)
push
ja
mov
shl
fcomp
sub
add
cmp
cmp
stc
es
sub
mov
xor
cmc
sub
int
repz
pop
shl
xor
pop
lea
xor
mov
mov
mov
push
out
movs
or
fisttp
xchg
pop
sbb
sbb
loope
mov
mov
dec
pop
add
add
jns
lahf
pop
add
adc
ins
lock
inc
mov
fcom
ins
adc
cmp
std
aas
xchg
push
lea
scas
xchg
scas
mov
(bad)
jmp
loop
mov
sub
mov
aaa
aas
das
or
add
pop
out
pop
jne
or
mov
(bad)
js
mov
ret
xchg
mov
ficomp
ds
iret
fisub
pop
fcom
in
adc
pop
or
or
ja
aaa
mov
xchg
adc
inc
adc
retf
xor
xchg
mov
lods
loopne
mov
mov
lods
sbb
push
test
or
jb
xchg
in
fadd
hlt
mov
jle
repz
inc
dec
inc
or
pop
pop
mov
daa
mov
rol
cmp
aas
mov
push
(bad)
mov
js
scas
xchg
pop
es
jne
pop
pop
ins
pop
mov
and
dec
lds
mov
xor
mov
iret
mov
dec
imul
jge
jecxz
push
xchg
dec
dec
mov
cmps
push
imul
inc
mov
sbb
das
or
sbb
nop
pop
jge
cdq
movs
jno
push
dec
adc
xor
loopne
push
mov
rcl
mov
into
lds
adc
cs
lods
xor
jmp
sbb
out
(bad)
shl
lahf
push
mov
retf
push
ret
jae
popf
and
mov
pop
sub
scas
adc
(bad)
inc
adc
stos
mov
pop
jno
mov
xor
in
sahf
jmp
fcom
mov
loopne
popf
xlat
dec
jmp
dec
add
add
sub
es
adc
dec
sub
idiv
sti
xchg
push
ror
sbb
push
mov
out
mov
idiv
mov
sti
adc
jmp
stc
(bad)
out
sub
mov
jno
adc
pop
retf
lods
cmp
xchg
(bad)
cwde
jle
pop
mov
fs
fisub
aas
push
jp
jo
repnz
lods
lahf
iret
pop
dec
clc
icebp
cld
sub
jns
sbb
ins
fisubr
pop
jg
jle
leave
out
xor
rcr
ficomp
jae
aam
or
sbb
push
sbb
add
loope
cld
xlat
sub
mov
lahf
mov
movs
mov
xchg
cmps
push
xor
cdq
sub
fmulp
and
cs
and
cmps
daa
adc
aam
enter
cmp
(bad)
in
movs
ficomp
sbb
ins
daa
inc
mov
dec
stc
push
push
cmp
or
xor
pop
(bad)
outs
push
and
dec
cmps
leave
je
inc
loope
mov
pop
(bad)
mov
mov
aad
in
dec
push
jl
mov
cwde
in
(bad)
mov
ins
dec
loopne
push
jmp
stc
test
jl
dec
dec
sbb
xlat
jae
outs
shl
jmp
push
push
shl
leave
ins
call
mov
sub
jp
xor
push
and
(bad)
xlat
daa
loop
aaa
jmp
pop
stos
jmp
inc
xchg
or
cmp
pop
repnz
sbb
retf
sub
mov
and
int
add
push
addr16
dec
out
xchg
push
arpl
cmps
inc
pop
xor
sub
fs
inc
xchg
cmp
pop
add
xlat
inc
dec
mov
mov
js
fsubp
aam
retf
test
mov
jae
retf
les
sbb
dec
cli
cmp
xchg
call
aas
das
or
arpl
nop
into
mov
hlt
push
jae
(bad)
repz
dec
test
cmps
stos
mov
dec
inc
mov
pop
jmp
div
jmp
int3
pop
xchg
loop
cmp
es
sar
shr
cmp
mov
es
retf
add
sbb
push
aam
push
xor
aaa
call
pusha
mov
pcmpgtw
push
enter
add
inc
(bad)
out
mov
jmp
mov
xor
jb
jmp
sahf
cmp
out
lahf
aas
add
loope
fs
mov
dec
jbe
aas
aaa
cmc
add
cmps
cmp
mov
adc
pop
push
jp
ja
in
iret
dec
dec
stc
xchg
stos
inc
adc
in
je
push
stos
push
xchg
mov
mov
cmp
push
or
cmp
(bad)
and
or
inc
jge
push
mov
mov
inc
mov
adc
jp
dec
pop
sub
popa
leave
mov
mov
mov
jp
out
adc
(bad)
and
xchg
mov
enter
cmp
out
jne
xor
and
push
xchg
mov
loopne
jecxz
sbb
add
and
aas
shl
clc
mov
arpl
and
pushf
xor
mov
xchg
repnz
(bad)
out
ret
test
dec
add
repnz
mov
test
adc
je
mov
sahf
cs
sub
loope
mov
xchg
std
in
fs
push
add
sbb
cmp
int3
sar
movs
xchg
push
sbb
xchg
mov
mov
stos
cld
adc
and
cmp
inc
jno
es
jp
retf
test
call
mov
inc
test
mov
mov
rcr
mov
adc
inc
fs
stc
scas
inc
add
and
dec
push
in
or
jo
(bad)
or
rcl
mov
dec
mov
add
fwait
cmp
call
mov
std
pop
mov
bound
mov
outs
jmp
adc
mov
push
sahf
imul
test
cmp
ror
ds
xor
addr16
loope
test
call
out
popa
dec
mov
pop
(bad)
dec
pop
movs
sbb
xor
jno
int3
sbb
dec
fisubr
push
sbb
mov
shl
sbb
call
jmp
push
sub
rcr
inc
outs
ss
mov
xor
imul
enter
dec
cmp
leave
and
inc
aaa
fcomi
imul
xchg
and
or
ret
or
xchg
loop
push
inc
push
mov
jno
jmp
pop
hlt
fxch
sbb
mov
jle
mov
push
pusha
test
pop
aad
xchg
stc
stc
aas
stos
cmp
cld
cs
inc
jle
xor
popa
(bad)
mov
dec
add
iret
sahf
and
ja
repz
xchg
pusha
sub
pop
push
push
inc
xor
mov
or
cmp
jecxz
pop
test
enter
scas
mov
add
or
(bad)
aam
fbld
sar
dec
push
movs
stos
fbld
add
dec
pop
icebp
movs
mov
hlt
pop
daa
and
ins
aad
retf
mov
addr16
sbb
lods
and
jmp
mov
inc
add
ss
std
(bad)
in
lock
cmp
out
sub
out
dec
add
add
mov
sbb
push
pop
push
test
xlat
call
xlat
jmp
cmp
and
jno
imul
xchg
inc
mov
dec
pusha
mov
icebp
cmps
jg
movs
push
(bad)
and
mov
inc
cmp
scas
adc
cmps
in
cmps
push
mov
cmp
in
cmp
and
mov
jne
xchg
retf
into
test
mov
in
arpl
inc
cmp
out
lahf
hlt
push
scas
pop
loope
adc
and
retf
inc
ins
sbb
mov
sahf
fmul
scas
shr
in
mov
xchg
xchg
dec
mov
push
add
xlat
cmp
pushf
inc
mov
fdiv
data16
inc
mov
cmp
ret
mov
pop
push
das
inc
mov
mov
add
mov
test
test
hlt
dec
int
scas
pusha
sbb
shl
sub
inc
lds
jae
jno
iret
addr16
adc
cmp
sub
(bad)
and
mov
xchg
or
sub
ror
jge
add
gs
pop
pop
push
push
add
sub
or
scas
imul
xor
loopne
inc
sbb
adc
push
fcom
cmp
into
push
ins
cmps
cld
dec
mov
jns
outs
shl
jo
inc
mov
sub
push
in
lds
iret
xchg
mov
push
into
adc
test
mov
mov
movs
cli
dec
and
mov
cmovns
ror
stc
rcl
xor
cli
test
test
sub
leave
loope
adc
in
mov
sub
xchg
nop
jp
or
imul
inc
jp
outs
(bad)
aad
push
hlt
(bad)
sub
loop
dec
mov
scas
fwait
add
mov
xor
add
test
add
in
das
push
aam
cmp
add
addr16
xchg
das
cs
fwait
jbe
fistp
mov
adc
fistp
and
pop
xchg
in
(bad)
cld
cmp
inc
mov
inc
inc
jp
lea
outs
je
jae
jno
inc
jbe
outs
xor
jnp
xchg
cmps
jg
mov
cdq
lock
fimul
loopne
pusha
pop
adc
cmc
or
sub
sub
arpl
stos
pushf
daa
mov
xor
mov
add
cwde
leave
sub
loope
adc
jmp
or
or
mov
pop
and
stos
pop
and
xchg
sub
test
sar
add
repz
ins
mov
mov
loope
int
dec
mov
xor
(bad)
sub
inc
inc
loop
inc
ds
pop
jle
mov
scas
fst
rcl
dec
jmp
jmp
test
xchg
mov
mov
sub
cmp
cdq
pop
sub
lock
sub
arpl
dec
jae
retf
mov
jbe
retf
or
ficom
out
aas
sbb
add
aad
test
and
inc
dec
fadd
shl
fcmovu
mov
pop
xor
mov
push
jmp
(bad)
mov
fcmovu
shl
xchg
ins
mov
mov
bound
fs
adc
jns
in
imul
je
mov
sub
dec
rcr
lahf
pop
jmp
push
repnz
xor
ds
sar
scas
sti
xchg
pop
push
jne
ins
jle
cwde
mov
mov
fdivr
jecxz
addr16
loop
mov
ins
jno
inc
jge
outs
imul
icebp
sub
dec
aad
cdq
and
loop
scas
sar
sbb
nop
aam
jecxz
test
test
in
cmp
in
adc
mov
sub
fs
xlat
out
dec
mov
cmp
mov
xchg
pop
dec
arpl
repz
jg
push
mov
or
xchg
(bad)
push
sbb
test
push
(bad)
imul
jno
es
jmp
movs
pop
loope
jnp
dec
cmp
mov
fs
cmp
test
nop
push
(bad)
(bad)
sub
sub
mov
mov
inc
(bad)
push
les
or
adc
jnp
mov
push
lods
jmp
xor
or
les
jno
fsub
pop
(bad)
fcmove
out
jo
leave
adc
xor
outs
les
sbb
scas
nop
and
or
xor
fs
xchg
inc
mov
inc
test
das
mov
popf
cmps
and
sub
push
push
sub
jo
mov
ds
cld
cli
sahf
inc
icebp
test
or
sub
and
lods
in
and
xchg
dec
and
cmp
mov
fwait
or
xchg
xchg
push
mov
and
inc
jo
ja
xchg
(bad)
sbb
inc
in
hlt
dec
movs
and
jg
cmp
jbe
push
lods
lea
shl
lods
or
xor
lock
jmp
aaa
inc
mov
mov
imul
dec
pushfw
sahf
or
mov
mov
sub
test
lods
push
push
push
inc
mov
rcl
jnp
fldcw
icebp
or
jl
xor
popw
lods
push
xlat
pop
shl
call
fisttp
adc
inc
out
lods
lds
repnz
fs
lds
jb
mov
xor
dec
bound
jo
cmp
xchg
lahf
mov
into
xor
xchg
les
xchg
fidiv
dec
inc
into
xchg
mov
inc
hlt
movs
loope
test
mov
test
cmp
mov
js
cli
mov
mov
clc
shr
out
scas
stos
movs
sbb
addr16
adc
or
jl
jb
(bad)
icebp
fidiv
cs
inc
ins
mov
inc
movs
jnp
jge
jp
push
outs
pop
rcl
shl
xchg
dec
fdiv
fwait
add
ja
cmp
out
dec
mov
or
aam
cmc
pop
inc
fst
xchg
or
imul
fdivr
(bad)
pusha
shl
mov
je
(bad)
jp
cmc
pushf
fs
scas
ds
inc
test
in
in
les
in
or
push
dec
push
xchg
inc
mov
jmp
or
dec
(bad)
add
sbb
rcl
and
mov
por
or
imul
pop
jl
inc
sbb
lahf
int3
aaa
add
ret
xor
aas
jmp
sbb
call
sbb
ja
inc
lds
pusha
cld
fadd
pop
div
sub
xchg
cli
ja
sbb
sbb
mov
rcl
cli
lods
push
daa
jae
jmp
pop
(bad)
aas
adc
or
xor
mov
jo
cmps
rol
or
cdq
mov
and
jno
pusha
fs
cmc
mov
fistp
cmc
fwait
and
test
xor
fnstsw
ss
mov
jecxz
repz
retf
jecxz
mov
adc
imul
out
(bad)
test
scas
mov
jbe
mov
dec
test
cmp
sub
ret
pop
std
cli
dec
rcr
rol
stos
stc
jmp
stos
(bad)
xor
sub
dec
jne
nop
push
add
inc
and
in
retf
sub
xchg
or
aad
add
cmc
xlat
call
mov
cli
pop
fbstp
add
push
ins
lds
pop
dec
js
xor
inc
aam
xchg
imul
push
pop
and
loopne
scas
std
cld
stos
in
ret
pop
rcr
(bad)
fidivr
jns
fs
add
pushf
push
iret
cmp
xor
or
sti
jle
xor
inc
mov
cmp
push
push
out
cmp
push
adc
lahf
cld
mov
push
les
imul
(bad)
jnp
je
dec
mov
lds
jmp
ffreep
pop
int
jecxz
inc
push
stos
push
adc
jno
mov
mov
test
daa
in
inc
mov
sbb
pop
mov
lahf
add
and
push
mov
add
imul
nop
outs
ret
adc
inc
sbb
mov
mov
xor
mov
je
mov
push
inc
mov
xor
jmp
test
ss
iret
fs
ins
and
or
mov
hlt
push
mul
test
fiadd
adc
mov
xchg
stos
sbb
push
push
mov
fisttp
inc
retf
jo
iret
stos
mov
xor
dec
mov
mov
adc
cmps
xchg
jg
xlat
or
adc
ret
inc
sbb
in
ja
mov
mov
fs
js
test
test
stos
mov
or
dec
pop
loopne
aaa
mov
pop
in
inc
shl
pop
jecxz
mov
and
rcr
xchg
cli
test
imul
xor
mov
xor
fnstsw
enter
dec
sub
push
dec
scas
fiadd
lods
std
mov
lock
xlat
inc
pusha
retf
cmp
jns
mov
pop
jg
pop
mov
cli
dec
add
mov
sub
cmps
iret
popf
out
sub
jnp
out
std
fldenv
cli
and
mov
mov
je
or
sub
test
ins
mov
not
adc
mov
sbb
js
jne
ret
inc
sar
hlt
test
add
into
jp
in
dec
bound
sbb
movs
mov
dec
mov
pop
ja
dec
out
jo
jp
mov
push
sti
or
or
cld
pop
(bad)
div
int
aaa
test
xor
add
push
into
repz
loop
inc
push
fsubr
mov
iret
aad
and
cli
mov
sbb
dec
add
adc
mov
sti
popa
loopne
fwait
mov
fist
fmul
rcl
std
dec
aam
dec
xor
fnstsw
mov
mov
mov
adc
ret
xor
je
cmp
jo
inc
bound
movs
or
dec
xchg
gs
sahf
outs
or
in
test
cmp
mov
push
outs
lahf
adc
push
cmp
xchg
orps
jecxz
jbe
sbb
sub
cmp
loop
or
mov
test
jp
dec
xor
mov
mov
push
in
fnstcw
mov
cdq
xor
push
je
jg
lea
adc
pop
add
test
jae
xchg
or
in
shl
sahf
and
push
cmc
ins
add
jg
pop
(bad)
scas
outs
xchg
cwde
dec
arpl
add
cmp
nop
sub
or
pop
add
movs
call
adc
scas
aad
sub
or
and
in
test
xor
inc
and
ja
xor
or
mov
out
mov
repnz
sub
in
pop
rcl
xor
retf
dec
sub
dec
cmp
push
mov
dec
pop
mov
or
jno
mov
loopne
jne
mov
cwde
sar
icebp
iret
cmc
ins
(bad)
outs
sub
cmps
add
sub
inc
call
push
es
sub
inc
push
je
pop
mov
(bad)
jmp
sbb
mov
test
jge
test
test
arpl
sbb
pop
test
iret
stc
lods
nop
dec
aaa
and
ds
outs
out
and
mov
inc
retf
pop
(bad)
(bad)
xchg
cs
jbe
into
adc
dec
imul
fcom
add
inc
pop
inc
mov
pop
jl
fs
jns
loope
push
pop
push
dec
call
push
pop
jns
ret
xor
sbb
push
hlt
push
or
mov
nop
cdq
adc
into
jge
inc
addr16
xor
data16
mov
adc
mov
mov
push
pop
push
pop
out
fs
je
sub
pop
pop
aam
and
jo
aas
js
cld
fs
(bad)
ror
mov
sbb
clc
dec
pop
(bad)
jle
mov
fidiv
and
push
pop
push
xor
add
sub
in
rcl
test
sub
(bad)
push
lea
jg
inc
xchg
call
fcomp
jg
sub
mov
and
mov
mov
int
jns
sub
pop
std
cmc
(bad)
daa
out
ja
(bad)
call
mov
in
xlat
nop
fdivp
in
push
icebp
adc
cmp
outs
add
(bad)
pop
xor
repz
retf
sahf
scas
ins
retf
pop
xchg
or
sub
sti
jb
leave
call
cmp
fcomip
adc
test
popf
out
outs
add
addr16
mov
sbb
jnp
outs
and
cmp
adc
dec
or
das
xchg
out
jne
inc
imul
sti
xor
bound
jbe
ficomp
inc
mov
sbb
adc
dec
adc
test
mov
cmp
pop
lods
add
mov
mov
inc
or
xchg
sti
(bad)
jno
rcl
jp
ds
xor
fnstsw
lock
jecxz
jnp
(bad)
sti
add
sbb
pop
call
mov
daa
mov
xor
rcl
mov
loopne
inc
push
and
ins
sub
push
(bad)
out
adc
scas
(bad)
pop
mov
sbb
data16
mov
xor
pushf
mov
test
std
dec
mov
popf
mov
fisub
xor
dec
fld
stc
sbb
xchg
in
ror
add
jo
out
std
pop
sbb
inc
ror
pop
adc
in
(bad)
lock
dec
ins
sub
add
(bad)
or
int3
addr16
push
rcr
idiv
and
xor
into
mov
dec
pop
xor
xor
std
jle
(bad)
cdq
pop
mov
push
repnz
mov
inc
(bad)
pop
mov
dec
pop
sub
(bad)
mov
data16
cmp
push
sahf
pop
lods
aas
adc
(bad)
add
lods
and
pop
ret
rcr
ror
pop
test
jmp
sub
movs
lods
lock
aas
pop
sub
imul
fdivr
mov
pop
push
clc
dec
popa
enter
and
pop
out
or
mov
test
icebp
mov
xor
sar
adc
inc
shr
adc
ror
cdq
cdq
fdivr
fwait
mov
cmp
rcl
dec
imul
or
cmp
pusha
pcmpgtw
aad
jnp
arpl
mov
sahf
daa
mov
xstore-rng
cmps
add
cs
dec
lods
cli
sahf
adc
adc
dec
xor
jl
inc
dec
adc
jnp
shl
repz
cli
mov
fsubr
lock
or
inc
scas
es
and
das
inc
jp
and
div
mov
pop
add
icebp
pop
push
or
test
cmp
dec
iret
xor
sbb
xchg
(bad)
pop
in
pushf
cmp
dec
fdivp
add
(bad)
or
ins
push
or
in
or
push
inc
sbb
jmp
in
mov
sbb
sbb
inc
(bad)
movs
mov
cli
lods
jnp
in
lods
xchg
push
or
sub
xor
sbb
movs
std
call
add
push
hlt
fistp
mov
fidiv
push
cld
rcl
and
adc
inc
xchg
movs
lods
jp
cwde
and
xor
or
daa
mov
hlt
ins
mov
mov
mov
je
and
cwde
and
jmp
adc
retf
and
push
dec
jge
adc
cmp
ds
aas
push
es
mov
js
and
mov
rol
pop
pop
dec
cmp
adc
loope
ja
sbb
xor
lea
mov
test
jecxz
cmp
loop
stos
sbb
stos
into
pushf
xlat
cmc
cwde
rcr
sub
dec
(bad)
in
pop
imul
clc
add
pop
fdiv
lods
xor
and
aad
mov
pop
loopne
xchg
aam
(bad)
ja
xchg
push
push
adc
or
mov
(bad)
mul
mov
mov
lahf
sahf
and
or
push
(bad)
outs
fisttp
xchg
xchg
add
lods
dec
out
pop
jns
psraw
inc
scas
into
push
movs
jle
scas
xor
inc
pop
fistp
mov
outs
xchg
xchg
mov
add
pop
xchg
xor
popf
out
xchg
xchg
push
jb
xchg
pop
scas
ss
and
sbb
jmp
in
push
xchg
dec
xor
stos
dec
arpl
std
inc
inc
and
mov
aad
sbb
xchg
and
push
pop
test
ret
loop
dec
add
jno
clc
cmp
or
xchg
dec
dec
es
xchg
jg
cmp
(bad)
sbb
pop
push
imul
jl
scas
or
lea
mov
jae
cmp
or
out
xor
cmp
outs
cmp
push
stc
(bad)
and
pop
dec
data16
xchg
jno
(bad)
jmp
pop
pop
psubb
test
adc
xchg
jbe
je
xlat
gs
push
jbe
cmc
lods
xchg
cmp
push
fmul
push
cmp
mov
mov
rol
pop
push
push
mov
jne
push
xor
dec
push
cs
stos
cmp
mov
pop
mov
mov
push
repnz
cmc
inc
ret
pop
daa
lods
sub
ror
and
popf
movs
in
(bad)
outs
out
bound
ins
lds
cmc
and
lea
outs
addr16
sar
or
aad
or
outs
cmp
sysret
mov
jns
stc
cmp
ja
sti
sub
cld
or
xor
imul
dec
(bad)
test
xchg
out
je
sub
jmp
aam
xor
xchg
lock
mov
xchg
dec
mov
repnz
cmp
xchg
jmp
cmp
sub
mov
movs
clc
call
xchg
bsr
cmp
mov
pop
adc
enter
jge
sbb
jne
mov
sar
das
xchg
call
pop
into
jbe
cmp
aad
pop
ret
cld
jo
or
fwait
pop
pushf
aaa
and
lods
add
movs
gs
repnz
mov
ror
add
out
mov
pusha
push
dec
push
dec
adc
fdiv
sub
xlat
or
nop
call
test
xchg
jne
mov
push
loop
xchg
xor
xlat
add
mov
sahf
imul
xor
cli
rcr
jb
fisttp
dec
test
and
test
cmps
je
inc
dec
scas
out
stos
pop
xchg
add
mov
pop
ror
xor
xor
test
ins
and
or
xchg
xor
ret
dec
and
lahf
xchg
sbb
or
mov
out
xor
repz
inc
movs
fs
mov
test
push
cmc
xor
cmps
mov
push
cwde
sbb
mov
xor
xchg
xchg
mov
jmp
adc
in
jne
ffree
and
clc
cwde
fsub
xchg
xchg
push
cmp
sbb
or
cmp
inc
dec
mov
push
sub
push
push
xchg
sub
shl
out
outs
loope
lods
adc
leave
push
dec
shl
add
sahf
cmps
xor
add
mov
mov
adc
adc
mov
jae
adc
or
sbb
scas
sub
dec
fimul
mov
fucom
stos
fisttp
(bad)
xchg
dec
mov
test
mov
fadd
inc
jle
pop
mov
xor
and
mov
cmp
jb
ss
xor
inc
inc
pop
(bad)
push
mov
popf
mov
push
jno
jns
add
pushf
xchg
rcr
adc
aaa
mov
adc
retf
call
jmp
std
inc
cmps
stos
fcmovnb
call
sbb
fistp
sbb
sbb
jbe
movs
out
popf
in
ins
dec
mov
mov
shr
fidivr
fisttp
push
aad
(bad)
aad
jmp
(bad)
sbb
and
add
dec
ins
mov
mov
adc
lea
mov
(bad)
cli
out
sti
xor
scas
in
loope
imul
add
jecxz
enter
or
movs
cdq
adc
mov
sar
add
xchg
dec
imul
mov
lods
popf
das
imul
or
jg
ret
rcr
ins
psubusw
test
mov
test
imul
sbb
mov
pop
cmp
xor
ins
fcom
test
pop
addr16
cmp
xchg
out
or
xchg
ds
inc
xor
mov
jnp
fs
fisttp
hlt
mov
leave
jp
daa
call
pop
add
inc
xor
rol
ja
jbe
and
or
and
icebp
enter
movs
adc
iret
je
cmps
mov
loopne
rcl
and
ds
dec
pop
test
xchg
(bad)
aas
xchg
(bad)
out
and
test
jb
imul
iret
pop
out
mov
pop
fst
push
sub
jne
jb
cmp
sub
je
inc
pop
jb
mov
fnstsw
inc
rcl
cwde
pusha
jl
jecxz
xor
jnp
cmp
ror
and
sbb
cmp
and
dec
and
pop
sahf
push
lahf
rcl
test
mov
mov
and
sub
jge
leave
mov
test
pop
jbe
es
xchg
lds
movs
ficom
add
not
cmp
and
cmp
call
arpl
hlt
int3
daa
vmovaps
and
sti
pushf
outs
imul
(bad)
mov
push
bound
aas
dec
shufps
add
push
aas
xchg
xchg
push
sbb
inc
push
and
inc
pop
pop
cmc
sbb
hlt
cmp
pop
sbb
test
xchg
dec
xchg
push
jecxz
xchg
pop
scas
hlt
and
imul
push
jns
cmp
cmps
scas
cmp
arpl
xchg
loop
test
std
adc
mov
lock
xchg
leave
aaa
hlt
scas
push
or
mov
(bad)
fucom
mov
push
fs
cs
retf
imul
lea
(bad)
ins
push
and
jbe
in
enter
inc
pop
mov
icebp
stos
ins
aas
and
pop
xor
mov
rcl
(bad)
mov
stos
in
ret
dec
ror
and
stos
adc
add
or
xor
sub
and
cmp
mov
jmp
out
test
push
loop
mov
jb
iretw
inc
arpl
mov
fidiv
xchg
dec
adc
lods
and
or
sub
out
mov
jbe
mov
xchg
and
add
mov
in
iret
ins
cmp
jge
and
xchg
enter
add
repnz
inc
repz
test
pop
pusha
sbb
stc
bound
xor
test
push
sahf
xor
inc
cwde
sbb
cmc
popa
mov
scas
(bad)
shl
mov
test
repnz
js
icebp
js
jle
popa
inc
mov
cld
adc
xor
bound
pop
sbb
mov
push
cs
(bad)
fst
aad
aaa
sub
or
test
jg
pop
fcomp
test
cmp
test
add
popa
jle
aad
pop
outs
mov
or
shl
push
icebp
iret
or
ficomp
sub
icebp
sar
js
mov
arpl
xchg
pushf
pusha
shufps
and
mov
stos
pop
lods
mov
repnz
movs
ror
dec
mov
ret
fwait
mov
loopne
cmp
std
outs
jno
cmps
and
mov
fstp
test
mov
pop
and
jmp
rcl
push
je
cmps
in
sahf
sbb
pop
hlt
div
mov
xor
push
hlt
push
inc
or
aas
(bad)
icebp
inc
cwde
push
mov
or
add
aam
or
imul
cmp
fisubr
repz
(bad)
(bad)
add
lahf
xchg
cmp
sbb
fisttp
mov
outs
shl
stc
int3
mov
jle
and
xchg
cli
dec
inc
push
mov
xchg
fs
dec
dec
jmp
je
xor
in
ret
out
iret
cmp
in
cmp
fisttp
cmp
lods
fistp
sub
je
ret
arpl
aad
popa
xchg
and
or
xor
leave
push
imul
loopne
cmp
and
or
mov
js
scas
mov
sub
mov
hlt
test
cmc
inc
mov
ds
mov
cmps
or
pop
ins
(bad)
pop
sub
jg
xor
int
jb
push
adc
mov
je
aaa
test
int
jo
ds
fcmovnu
test
pop
push
pop
xchg
or
or
adc
repnz
mov
lods
(bad)
cli
pop
shr
call
push
test
fdiv
xor
sub
shl
sbb
imul
xor
icebp
fadd
scas
sbb
scas
and
test
ret
into
push
dec
xor
dec
dec
cmp
push
ficomp
test
push
and
rcl
mov
sub
test
cmp
adc
dec
mov
leave
push
pop
add
mov
mov
ror
sbb
test
add
inc
(bad)
sub
out
xor
(bad)
or
lods
data16
xchg
jg
scas
push
pop
xchg
cmp
xor
push
int3
jle
dec
sahf
cmps
mov
ds
sahf
mov
movs
xor
call
jmp
into
xchg
scas
add
je
fcomp
outs
adc
shl
cdq
in
push
and
sbb
stos
sub
push
push
cmp
and
mov
inc
adc
retf
movs
sar
fnstsw
dec
stc
aas
mov
adc
jp
pop
push
cmp
int
sub
mul
or
js
jb
(bad)
rcl
lods
mov
jae
and
or
fimul
push
mov
jae
daa
pop
test
cmp
jge
aaa
pop
int3
mov
mov
outs
scas
cmps
inc
fwait
dec
pop
loopne
or
inc
fsubr
in
mul
xor
retf
ins
mov
pop
int
push
add
cwde
cmp
dec
je
pusha
shl
mov
aas
pop
mov
outs
or
enter
xchg
xchg
dec
loope
xor
retf
xchg
jo
data16
loopne
bound
sbb
jns
jae
jnp
mov
mov
sbb
cmps
add
cld
mov
adc
inc
and
cmps
js
pop
sbb
movs
mov
out
jno
shl
outs
push
cmc
adc
pop
pop
ja
(bad)
fidivr
lock
fndisi(8087
and
popa
cli
stos
es
inc
xchg
jp
stc
leave
cmps
or
mov
jns
bound
ret
pop
jno
movs
mov
test
gs
inc
mov
push
and
add
dec
out
in
and
mov
in
jo
sub
cmp
mov
cmps
(bad)
sub
icebp
aad
sub
cs
retf
psubd
(bad)
mov
xor
mov
je
jg
mov
inc
cmc
push
push
ffreep
iret
add
mov
lods
pop
cmp
imul
mov
mov
test
or
bound
mov
inc
jne
inc
fs
jecxz
cmp
ins
or
sub
enter
movs
add
dec
retf
(bad)
sub
xchg
enter
pop
jp
mov
rcl
dec
xchg
and
inc
outs
cli
xor
jb
retf
mov
cmp
inc
into
or
cli
test
mov
add
inc
sbb
mov
pop
ins
cmc
(bad)
cmp
iret
clc
ror
fidiv
cmp
outs
sbb
movs
xor
enter
call
cld
dec
daa
cld
lds
std
mov
sub
fldenv
movs
test
pushf
inc
mov
(bad)
(bad)
add
jae
cwde
push
push
mov
icebp
in
test
jge
cmp
push
fldz
jg
les
call
mov
repnz
push
pop
sub
div
bound
inc
fsubr
fbld
pop
enter
mov
dec
cwde
jl
sub
imul
dec
addr16
xchg
push
adc
mov
in
outs
dec
sbb
call
cmp
leave
ja
xchg
ins
jp
adc
or
mov
stc
fwait
adc
stos
jge
stos
out
mov
fsub
loope
adc
push
call
or
pop
xor
call
shl
imul
movups
ds
inc
sbb
or
leave
es
lea
scas
(bad)
xor
jecxz
dec
add
pop
dec
jbe
scas
nop
lods
nop
mov
cmp
popa
sti
push
sbb
mov
jmp
(bad)
and
pop
fcmove
aad
jge
push
dec
or
jo
ja
fwait
aas
cmps
cli
xchg
and
shl
hlt
ss
mov
mov
in
pop
stos
jbe
stos
jg
out
stc
ja
push
or
sar
xchg
mov
nop
retf
jmp
xchg
mov
pop
push
xlat
aaa
lahf
rcl
test
pop
sbb
mov
mov
xchg
fisub
stos
std
push
adc
repz
cmps
and
and
cmps
addr16
jmp
bndldx
sti
push
push
popa
jp
repz
or
ret
inc
test
enter
dec
daa
xchg
pop
iret
jp
and
ret
jns
neg
inc
jae
jmp
add
(bad)
jo
dec
(bad)
mov
xchg
adc
shr
xor
sub
add
sbb
mov
sub
mov
shl
xor
sbb
xchg
popf
in
adc
mul
and
js
mov
scas
sub
mov
rcl
jne
sbb
arpl
sbb
sbb
sub
sub
leave
pop
pop
cmp
sbb
outs
inc
aas
psubusw
ins
test
test
loopne
sub
pop
xchg
adc
js
mov
push
jp
js
ficom
sar
jle
ret
jnp
and
jae
pop
pop
sti
(bad)
jae
int
dec
dec
sub
mov
inc
jo
cmp
sbb
ret
jo
(bad)
out
mov
and
enter
imul
(bad)
adc
rcr
arpl
pushf
nop
nop
jp
jmp
cvtdq2ps
ss
add
pop
into
or
xchg
bound
push
pop
stos
in
xchg
jnp
in
mov
and
adc
pusha
mov
mov
in
call
jl
or
pop
push
xor
pop
cmpps
mov
push
mov
imul
mov
cmp
push
pop
pop
arpl
pop
ds
sbb
inc
inc
xlat
in
xchg
pop
pop
jo
lods
mov
sub
adc
ins
lods
daa
mov
push
pmuludq
outs
inc
pop
mov
cmps
cwde
sub
in
ins
aaa
stos
(bad)
out
jne
call
add
and
add
mov
ja
shl
dec
pop
jnp
stos
bound
div
mov
sub
xor
jns
shr
fcmovbe
movs
xor
add
add
mov
je
inc
cmps
andps
push
movs
inc
mov
std
push
mov
ja
add
out
xchg
inc
add
test
into
in
dec
add
mov
adc
mov
mov
js
push
add
cmp
adc
loope
je
or
adc
aaa
xchg
inc
inc
call
in
mov
fadd
aad
xor
cli
mov
mov
jno
fstp
cmps
es
addr16
xchg
cli
scas
stos
outs
fsub
lea
cli
jns
mov
xor
stc
mov
fdivp
scas
fsqrt
pop
retf
push
sahf
out
sbb
ror
mov
push
icebp
mov
in
popf
fst
cmp
sub
add
pop
aad
jnp
mov
test
call
aaa
xchg
xchg
sub
fdivr
fidivr
fisub
xor
mov
std
rol
xor
popf
addr16
ins
sbb
seta
cmp
(bad)
lds
cs
cmps
out
jno
enter
enter
xor
mov
cmp
ins
in
jmp
js
mov
mov
movs
out
xor
inc
call
inc
lods
lds
not
fsub
out
sub
fwait
xor
mov
dec
xchg
loope
loop
aas
cmp
aaa
rcl
adc
mov
add
push
dec
mov
sub
add
outs
ja
push
fnsave
or
fcom
loope
jno
sub
in
in
repnz
pop
fcmovbe
stc
xchg
gs
stos
(bad)
fwait
cmps
push
cld
jl
adc
leave
or
fldenv
dec
jbe
sbb
sbb
mov
ret
or
outs
jecxz
or
mov
jmp
mov
popf
push
imul
(bad)
push
jb
or
xlat
in
out
push
pushf
xor
push
jp
mov
popa
out
shl
xchg
push
lahf
loopne
xor
sub
mov
lock
jbe
mov
fadd
sbb
out
mov
inc
cwde
lods
aaa
add
sub
cmp
mov
retf
sbb
push
mov
xchg
stos
popa
rcr
mov
test
mov
sbb
adc
cmc
aaa
ins
xor
dec
hlt
push
dec
imul
add
jb
push
cld
xor
ss
out
dec
mov
mov
mov
inc
and
cmp
push
fidiv
dec
cmp
leavew
cld
add
sti
movs
pop
stos
xchg
or
sub
scas
lahf
add
pop
call
out
stos
adc
mov
retf
mov
xor
jbe
add
clc
xor
xchg
jmp
arpl
xor
sahf
call
jecxz
xchg
cmps
sbb
(bad)
xor
test
xchg
mov
les
(bad)
iret
je
push
sub
dec
std
out
dec
xor
outs
leave
ins
sbb
lods
cmp
nop
or
cmp
mov
and
in
jecxz
call
imul
lds
ja
sbb
sahf
jl
jbe
push
pop
inc
sub
cwde
in
cmp
pop
es
push
bound
test
je
rcr
int
lahf
(bad)
fst
xchg
imul
push
cmps
and
stos
dec
dec
sub
out
(bad)
out
je
sbb
mov
test
and
(bad)
jle
xor
add
(bad)
and
inc
push
mov
shl
inc
fimul
push
(bad)
retf
pusha
js
push
cmc
or
jno
inc
and
repnz
dec
mov
mov
imul
in
loopne
cdq
(bad)
(bad)
and
fldenv
mov
lods
shl
ror
outs
div
or
and
mov
xor
enter
inc
pop
cmp
and
xchg
stos
ins
mov
xchg
les
movs
sbb
sbb
xchg
fsubr
not
push
mov
test
inc
inc
sar
xchg
xor
or
stc
and
loop
hlt
int
lock
push
bound
ins
jge
mov
push
xlat
sbb
pop
xor
xor
out
or
sbb
and
sub
(bad)
pop
sub
ret
push
out
ficomp
jns
fisttp
mov
mov
cmp
addr16
(bad)
and
pop
in
pop
mov
test
push
fdivr
pop
pop
mov
mul
ret
jle
pop
pop
jo
jecxz
inc
sub
xor
mov
inc
dec
sbb
shr
popa
xchg
fs
daa
inc
jg
out
adc
imul
ret
mov
in
and
pop
cdq
adc
xchg
in
cmc
mov
xchg
cmp
inc
out
cmps
fmul
inc
cmp
and
hlt
xchg
dec
bound
cmp
mov
sar
aam
ror
and
scas
jmp
adc
and
outs
pop
cli
ret
cmp
mov
je
add
and
add
push
push
sub
xor
in
jno
dec
cmps
(bad)
out
cmp
rol
dec
(bad)
imul
enter
xor
rcl
addr16
popaw
aas
adc
ds
out
js
pop
cmp
ret
imul
fcmovnbe
add
add
int3
adc
dec
scas
retf
push
adc
xchg
ja
cmp
add
adc
fsubp
adc
mov
dec
jnp
ret
retf
fst
sti
add
outs
jae
mov
sub
inc
sub
jb
test
cwde
loopne
in
adc
leave
push
dec
or
aaa
pop
inc
push
movsx
dec
fimul
bound
add
sub
push
and
ins
lea
pop
sub
stc
dec
ficom
adc
xor
(bad)
jecxz
push
out
mov
and
inc
jmp
pop
xor
jp
jle
add
movs
fistp
sub
cmps
jbe
xchg
int3
or
fst
sub
mov
test
out
and
repz
das
adc
pop
clc
jecxz
jns
test
sbb
mov
sbb
(bad)
into
sbb
aaa
and
fbld
mov
(bad)
jmp
je
xchg
fimul
adc
outs
addr16
jne
into
sub
outs
jbe
mov
loope
mov
in
sbb
xchg
cmps
mov
loopne
push
sahf
and
mov
neg
lods
and
mov
push
call
sbb
out
repz
cmc
stc
repnz
sahf
jp
push
add
fadd
xchg
xor
adc
jp
rol
rcr
fsin
test
sub
ss
and
jl
mov
retf
inc
and
cmp
test
out
xchg
aaa
mov
pop
std
rcr
rol
mov
or
rcl
or
clc
cmps
xchg
mov
and
sub
mov
dec
sbb
jge
pushf
cs
xlat
dec
iret
jns
loopne
pop
dec
daa
enter
popa
out
(bad)
mov
mov
into
fwait
repnz
mov
cmp
div
xchg
call
sub
aaa
jns
dec
mov
hlt
scas
cmp
xchg
xchg
push
cld
in
out
push
mov
(bad)
das
shr
hlt
popa
call
mov
pop
jb
aam
mov
inc
xchg
mov
test
sbb
int3
sub
ds
push
mov
shl
pop
jmp
in
push
mov
xchg
adc
push
and
add
cmp
sub
repz
inc
pop
mov
cdq
(bad)
ror
jp
pop
mov
mov
xor
fbld
xchg
sbb
pop
mov
dec
ret
mov
mov
fs
add
pop
xor
shr
addr16
inc
jnp
sbb
in
or
mov
nop
add
push
sub
pop
out
inc
cld
sub
push
pop
lahf
(bad)
xor
outs
icebp
repnz
jne
cdq
pop
sub
sbb
adc
xchg
dec
sub
pop
lahf
scas
dec
loopne
cmps
aad
adc
dec
pop
les
jbe
adc
pop
(bad)
push
pusha
add
repnz
in
rcl
or
stos
movs
dec
dec
sbb
mov
js
or
mov
sbb
ds
push
aaa
movs
or
xchg
mov
sbb
xchg
ss
xor
sbb
call
xchg
es
repz
sub
add
out
xchg
sbb
sti
test
mov
dec
(bad)
shr
fmulp
push
sbb
mov
add
es
add
mov
ins
mov
adc
call
in
push
sbb
repz
call
ficom
push
sahf
xchg
lahf
pop
shr
xchg
repnz
fs
or
or
mov
pop
ret
mov
jbe
call
test
mov
add
daa
xchg
fist
or
into
mov
mov
cmc
mov
cmps
mov
mov
sbb
dec
ror
xchg
cmp
adc
pushf
jg
js
jmp
ds
test
pop
xor
mov
cli
fidiv
mov
sub
aad
ds
je
sti
sti
cmc
dec
fcmovb
stc
cmp
in
loopne
or
push
into
xor
sbb
scas
ror
mov
shl
pushf
jl
int
imul
and
xor
imul
push
xchg
retf
jl
add
retf
lea
mov
jb
loopne
repnz
arpl
xchg
jge
add
add
jl
(bad)
mov
sbb
pop
dec
(bad)
xchg
mov
mov
fs
add
in
in
pop
loopne
shl
dec
mov
inc
xchg
cmp
pop
out
cs
clc
in
cdq
les
or
cld
inc
in
mov
pop
xlat
cli
arpl
cmp
jae
aas
jmp
xlat
outs
scas
cdq
mov
les
mov
pushf
push
loop
mov
jl
mov
xor
mov
(bad)
sbb
jne
pusha
cmp
fwait
(bad)
push
sub
pusha
jge
push
sbb
(bad)
cmc
sub
jmp
cwde
fsubr
mov
push
add
mov
daa
mov
mov
xor
pop
push
movs
xor
pop
push
arpl
nop
adc
and
add
inc
int
shl
or
or
lods
sub
mov
shl
shr
jmp
in
push
lods
push
js
in
cdq
cmps
or
dec
mov
or
inc
ja
adc
add
fwait
test
inc
je
mov
push
movs
iret
jg
pop
test
inc
jmp
ror
cmp
das
inc
scas
inc
movs
cmc
xchg
arpl
mov
loop
adc
je
dec
dec
sbb
dec
add
inc
sub
pop
jnp
leave
sub
dec
jle
cmp
sti
cwde
daa
mov
clc
mul
dec
push
jo
(bad)
clc
xchg
ret
cmc
int3
cs
inc
jle
cld
xchg
addr16
mov
add
je
adc
int3
leave
(bad)
fcompp
cmp
cdq
repnz
data16
dec
xchg
dec
sti
jmp
mov
mov
popa
cmp
add
mov
mov
adc
popa
mov
mov
ins
mov
xor
xor
in
es
hlt
jb
ud0
dec
fs
sbb
sbb
enter
jb
add
cmps
dec
sbb
push
dec
mov
neg
aad
out
call
fwait
lock
retf
(bad)
adc
cmp
sub
adc
pop
sub
jle
out
mov
pushf
jp
in
repz
cmp
movs
and
rol
scas
clc
scas
popf
push
inc
and
pop
sbb
sbb
inc
fdivr
retf
xchg
stos
lahf
sbb
dec
or
les
inc
movs
rcl
push
sub
inc
lahf
mov
sub
or
cmp
out
stos
inc
and
adc
mov
test
push
test
fadd
jne
fist
fcomp
ins
imul
sbb
adc
(bad)
hlt
xchg
out
mov
mov
(bad)
sar
adc
les
lahf
pop
inc
xchg
popf
(bad)
pop
cmp
mov
shl
push
and
jl
or
sub
mov
mov
out
inc
call
pop
sub
add
and
mov
je
xchg
jae
xor
and
inc
fstp
fldenv
add
push
and
or
sbb
loope
and
mov
push
shl
cmps
jge
jb
hlt
mov
dec
jae
lods
mov
xor
scas
cmc
xor
dec
(bad)
in
pushf
mov
call
leave
rcl
add
bt
dec
xor
pop
mov
je
jge
test
ja
pusha
xchg
mov
loope
xchg
mov
mov
gs
sub
mov
dec
adc
dec
xchg
or
or
pushf
cwde
pop
jl
push
mov
lds
shr
test
cdq
jmp
mov
add
(bad)
arpl
and
mov
int
test
jae
cmps
jle
movs
push
(bad)
dec
js
mov
xor
iret
repz
xlat
ret
jnp
imul
mov
or
sar
in
mov
ins
das
cmps
jmp
jp
add
push
dec
inc
mov
push
cmps
mov
jns
std
xor
repnz
rol
(bad)
mov
in
dec
jb
xchg
sub
(bad)
cmp
cmps
xchg
(bad)
sub
aaa
clc
xchg
scas
sbb
movs
ss
mov
(bad)
sbb
mov
cdq
mov
iret
xchg
mov
dec
jg
inc
and
imul
stc
retf
repz
inc
mov
sbb
mov
jo
fisttp
pop
mov
add
cmp
cdq
popa
shl
inc
xor
sub
scas
sub
ins
pop
push
sub
and
or
or
cmps
test
sbb
add
hlt
jo
(bad)
mov
paddusw
dec
aad
loop
push
(bad)
pop
jo
scas
adc
(bad)
stos
xchg
int3
outs
adc
sbb
mov
pop
push
xor
pop
sbb
out
addr16
lods
or
jmp
xchg
dec
mov
xchg
fild
ins
iret
out
or
mov
sub
push
(bad)
mov
xor
adc
and
xchg
and
jbe
stc
sbb
sbb
gs
mov
sub
lds
jns
test
and
mov
std
out
out
enter
in
mov
jmp
or
sbb
popf
xchg
out
(bad)
int3
mov
xor
xchg
sbb
call
popa
jno
cmps
or
jo
pop
xchg
ins
(bad)
mov
loope
mov
push
scas
xor
mov
aam
inc
jp
inc
out
cmp
movs
adc
lods
mov
pop
jb
shr
jmp
loopne
mov
in
xchg
lahf
pop
jp
lock
inc
cdq
inc
jle
push
inc
mov
mov
or
pop
jno
pop
(bad)
xor
jmp
enter
push
mov
ss
je
pop
xchg
and
inc
push
je
das
out
xor
inc
mov
mov
jge
pop
xchg
gs
fyl2x
fstp
mov
dec
lods
mov
je
fsubr
ds
mov
(bad)
in
cmp
push
mov
pop
mov
and
cld
inc
arpl
in
rcl
dec
cmp
out
adc
lea
mov
hlt
icebp
pop
adc
sbb
dec
into
jo
push
mov
sub
pop
aam
hlt
dec
mov
sub
addr16
dec
int3
push
test
fidivr
sub
jae
imul
xor
es
jns
push
out
addr16
iret
push
loope
jecxz
jnp
adc
push
xchg
icebp
sbb
mov
fsub
ja
clc
mov
mov
lahf
fst
es
mov
mov
sbb
out
push
jb
and
push
add
in
mov
mov
(bad)
mov
stc
inc
add
sbb
jl
(bad)
sbb
outs
mov
mov
adc
call
xor
inc
mov
sbb
push
mov
dec
(bad)
int
dec
loop
jg
sbb
sbb
push
cmp
fstp
mov
jp
(bad)
adc
sub
fidivr
out
mov
dec
retf
fistp
cwde
hlt
xor
cmp
xchg
or
pop
cmp
jns
inc
fldcw
lea
inc
push
add
add
repnz
(bad)
clc
xchg
mov
lds
pop
test
out
xor
dec
xor
into
xchg
add
aad
repnz
push
jmp
fnsave
ffree
shl
inc
xchg
mov
or
rol
adc
imul
cmc
lahf
pop
ds
adc
jge
pushf
cmps
add
jo
out
sub
call
mov
mov
xor
idiv
mul
lods
retf
sbb
call
add
clc
fild
jbe
jge
and
adc
fwait
stos
adc
gs
inc
dec
int
mov
lea
mov
test
(bad)
and
je
(bad)
mov
jp
mov
movs
inc
add
(bad)
sti
cld
jo
fild
iret
dec
enter
stos
push
(bad)
and
mov
cmp
jne
jnp
stos
lods
inc
xchg
push
pusha
pop
xor
cmps
das
ret
sbb
xchg
test
inc
(bad)
xor
sub
sub
or
sub
out
fistp
mov
adc
ds
idiv
xor
cmp
cmp
add
pushf
sbb
pop
fwait
pop
mov
aas
sub
daa
aas
push
mov
movs
out
jbe
jb
dec
stc
ins
daa
out
push
jp
fwait
sub
push
lods
cmp
and
sub
or
(bad)
and
and
sub
push
and
ret
pop
ret
push
movs
cmp
add
and
iret
je
adc
or
cmps
cwde
lods
out
fisttp
sub
stos
aad
cmp
xor
adc
inc
ficomp
mov
aaa
inc
shl
lods
(bad)
(bad)
pop
ins
iret
lock
in
jecxz
ds
mov
jno
jmp
add
scas
arpl
pusha
ds
outs
cld
xor
inc
push
(bad)
pop
jl
cmp
shl
xchg
js
jb
(bad)
pop
out
es
push
pop
adc
(bad)
jp
inc
or
test
mov
xlat
push
stos
or
inc
cmp
jle
xor
jae
mov
dec
aad
les
fstp
icebp
push
les
cmp
inc
mov
int
sbb
fs
add
pop
xchg
cld
inc
dec
mov
push
xchg
pop
test
or
icebp
jb
iret
xchg
test
sbb
into
das
test
dec
add
gs
jne
cmp
ret
aam
ror
mov
xor
cld
ds
and
aas
cwde
and
test
push
inc
cmc
jo
pop
jno
jmp
mov
cmp
fidiv
fcmovnu
(bad)
sbb
sbb
mov
sub
fwait
in
adc
jp
out
data16
xchg
movs
adc
inc
cmp
(bad)
sub
iret
enter
jp
mov
or
or
test
lock
cmp
scas
lds
outs
push
add
jo
outs
in
or
(bad)
fdiv
xchg
ja
mov
idiv
scas
dec
shr
jecxz
mov
movs
pop
out
cwde
mov
and
lahf
jmp
imul
sbb
fimul
jo
dec
sub
outs
dec
(bad)
(bad)
popa
aad
or
cld
outs
jge
add
cwde
loope
and
sub
cmp
inc
jno
and
adc
cmp
dec
jecxz
pop
sbb
cdq
repz
add
popa
popw
sbb
cmp
cmp
pop
pop
mov
xor
dec
sub
xor
mov
lock
in
hlt
rol
pop
xor
pop
lock
idiv
xchg
inc
push
imul
shr
mov
mov
jmp
add
ins
hlt
scas
inc
and
call
call
loopne
mov
sbb
jl
stos
jo
ins
xchg
push
cmp
push
sbb
inc
mov
push
xchg
push
stos
add
ins
into
pop
loop
jg
xchg
or
mov
fld
iret
cdq
hlt
inc
cmp
sbb
bound
lods
push
(bad)
xchg
or
popf
test
in
push
pusha
ficom
ror
(bad)
sub
(bad)
mov
sub
or
js
scas
fcomp
gs
push
pop
in
gs
pushf
mov
(bad)
mov
popa
mov
dec
add
icebp
mov
int
cmp
mov
popf
dec
push
fisttp
mov
aam
mov
or
popf
or
std
cmp
or
sub
jp
hlt
pop
sahf
out
mov
lahf
call
push
mov
sti
pushf
sub
inc
inc
test
pop
(bad)
out
ficom
ins
add
adc
and
fwait
push
or
lds
pop
pop
int3
es
add
push
cwde
sub
jmp
call
dec
bound
mov
or
jnp
ins
dec
(bad)
shr
cmp
xlat
jae
add
mov
mov
cmp
shr
mov
loopne
or
(bad)
(bad)
sar
adc
test
dec
sub
jbe
mov
xchg
mov
je
stc
lock
sar
(bad)
in
pop
add
jl
test
es
lock
jle
sti
add
call
cmp
adc
test
xor
xor
cwde
mov
push
fwait
inc
xor
test
js
loopne
pusha
adc
jo
push
jo
dec
xchg
das
and
or
fs
mov
mov
pop
mov
pushf
aas
dec
jle
jo
lahf
xchg
add
push
es
mov
(bad)
aad
(bad)
jns
push
loop
hlt
clc
mov
jl
leave
int
adc
jge
push
bound
lods
cmp
ss
test
loopne
xchg
sub
mov
call
pop
(bad)
pop
clc
jbe
mov
(bad)
into
hlt
sub
(bad)
sbb
cmp
pusha
arpl
mov
adc
scas
jo
repz
or
fwait
xor
shr
xchg
fs
cdq
mov
lock
mov
outs
cmp
enter
mov
rcl
or
int3
mov
mov
mov
lock
lahf
hlt
add
jl
ins
test
xor
aad
dec
push
out
scas
mov
test
movs
mov
push
iret
adc
scas
pop
sub
pop
aam
xor
sub
mov
push
dec
xor
jmp
push
jae
sar
test
push
xor
iret
mov
sbb
xchg
dec
inc
sti
in
lods
jo
rcl
or
mov
jo
xchg
std
retf
and
cmps
sbb
mov
stos
daa
imul
popa
je
pop
ds
pop
(bad)
data16
mov
fild
stos
cmp
out
adc
out
movs
pop
shr
xchg
mov
dec
fild
dec
dec
jg
inc
fdivr
jb
mov
xchg
and
imul
jecxz
mov
enter
frstor
xor
in
xchg
cmc
clc
push
add
dec
cmps
fwait
jb
xor
call
add
push
adc
repnz
aam
out
mov
push
push
cwde
inc
push
sub
adc
push
shl
or
enter
imul
rcl
xchg
stos
pop
xchg
mov
sbb
xchg
cmovg
lea
imul
out
push
and
and
xchg
test
fwait
jbe
add
sar
cmp
repnz
fistp
ins
xchg
mov
sub
pop
jp
adc
push
sbb
mov
jnp
jb
rcr
mov
data16
loope
or
xor
or
xchg
adc
dec
xor
sub
dec
jne
daa
fcomp
arpl
clc
xlat
lods
mov
lock
outs
cmps
nop
jno
sub
mov
xchg
and
fdiv
sub
inc
fwait
and
shr
call
test
add
clc
cmp
push
or
mov
pusha
mov
dec
xchg
xlat
xor
sub
mov
push
shl
push
sub
leave
aaa
(bad)
ds
pop
aad
das
dec
int3
out
or
stos
ins
leave
inc
push
outs
or
addr16
sbb
jge
dec
push
xchg
mov
sbb
mov
mov
pop
mov
sar
int3
shl
fldenv
adc
test
lds
xchg
fwait
inc
xor
cli
call
fs
cmp
lods
jns
jnp
cmps
popf
dec
or
push
aas
(bad)
retf
js
push
lods
inc
rcr
imul
inc
dec
push
fsubr
popf
int
sti
push
(bad)
ss
test
mov
aam
enter
xchg
iret
mov
jge
cmp
fs
jns
inc
or
and
iret
or
test
add
or
pop
cmp
xor
call
test
xor
pop
jns
sahf
hlt
sti
inc
adc
pop
pop
mov
out
monitor
daa
mov
or
outs
nop
mov
push
push
add
mov
mov
mov
ror
mov
mov
and
(bad)
inc
xchg
into
cmp
int3
and
mov
test
cmp
mov
adc
dec
nop
xchg
xor
sar
(bad)
xchg
cmp
inc
out
mov
jge
leave
fdivr
pop
outs
fwait
cmp
inc
repz
aad
test
push
push
push
sub
popa
mov
loopne
xchg
xor
fs
mov
jmp
scas
jp
pop
mov
jmp
xchg
jo
aad
test
push
dec
dec
stos
lahf
pop
xchg
ret
ins
sar
xchg
lahf
cs
nop
push
jmp
mov
imul
jae
jne
cmp
mov
push
dec
push
stos
aam
pop
loopne
(bad)
mov
inc
leave
call
mov
cmp
jnp
les
cld
(bad)
idiv
add
retf
cmp
pop
and
or
lds
pop
mov
jo
cwde
adc
mov
jmp
les
pop
push
icebp
shl
sahf
and
dec
xchg
nop
fstp
lock
adc
push
icebp
ds
loopne
mov
push
fcom
loopne
mov
popa
or
js
cmp
mov
nop
mov
xchg
fwait
pushf
push
sbb
push
push
fsubr
inc
push
inc
jae
dec
std
adc
(bad)
call
cs
sbb
xchg
out
pop
jmp
mov
push
std
mov
mov
addr16
in
and
jns
jns
jmp
jbe
fcmovbe
jmp
movs
push
inc
cmp
cmp
adc
jae
or
sub
push
daa
inc
dec
jo
xchg
ja
icebp
inc
cmc
mov
jle
xlat
mov
imul
jb
pop
add
rcl
push
mov
call
nop
sub
and
mov
stc
pop
ret
adc
mov
iret
pop
repnz
inc
leave
aaa
nop
cmps
lods
pop
mov
(bad)
cmp
mov
sahf
ror
rcr
loop
shl
jp
dec
fld
lock
cmp
mov
jecxz
sub
and
or
mov
outs
mov
test
sti
stos
int
retf
imul
fwait
loopne
test
sti
stos
test
cmps
pop
pop
sub
dec
sub
mov
pop
int
(bad)
out
sbb
adc
push
xchg
jne
and
nop
scas
dec
push
xchg
adc
mov
(bad)
sar
fs
jp
or
mov
dec
(bad)
or
inc
pop
add
pop
jmp
xor
mov
pop
cdq
mov
lock
mov
in
call
lds
in
dec
ja
add
adc
js
icebp
push
sub
inc
fs
cmp
jl
jne
jb
cmp
out
fwait
cdq
scas
push
je
mov
cmp
pop
out
mov
pusha
imul
xor
aad
das
dec
jbe
outs
or
mov
cmp
inc
out
js
loopne
inc
add
iret
retf
addr16
je
cs
cs
lods
adc
and
jmp
(bad)
mov
(bad)
ficomp
jmp
dec
mov
aas
inc
xchg
dec
(bad)
jmp
push
add
mov
or
in
aam
push
xor
mov
repnz
ss
jp
lock
pop
fmul
push
les
arpl
cmc
into
sub
adc
popf
mov
jge
push
inc
(bad)
sub
mov
cmps
sbb
fidiv
add
addr16
ficom
lahf
ss
je
mov
or
cmps
pop
mov
cmp
pop
push
inc
push
and
cmp
xlat
and
gs
cmp
pop
repnz
fld
stos
inc
movs
stc
ficom
aam
fbstp
push
int3
stos
mov
addr16
jp
ror
lock
add
gs
push
and
std
mov
xchg
inc
mov
inc
dec
cmps
cmp
adc
mov
lea
sub
ss
push
pop
jae
xor
push
pop
addr16
sub
in
sub
sbb
ret
fiadd
imul
add
cmp
push
xchg
cld
push
bound
mov
sbb
cdq
fs
bound
add
push
jbe
data16
jl
fidiv
push
sbb
sbb
mov
sub
dec
ret
inc
sbb
jecxz
add
test
mov
push
daa
xchg
int
adc
mov
fadd
push
into
sbb
(bad)
scas
pusha
cmp
mov
xor
push
xchg
sar
xchg
inc
or
cmp
jmp
lods
dec
sti
ins
scas
dec
mov
scas
lea
sar
mov
mov
jo
cdq
aas
popa
xchg
ret
inc
jo
mov
inc
call
cmps
push
es
test
jae
xor
sbb
mov
out
rcr
sbb
adc
jmp
pop
jne
xchg
xchg
mov
fcom
test
push
fcomp
aad
add
xor
enter
adc
mov
mov
aaa
stc
mov
lods
daa
mov
sub
jne
aas
dec
aas
pop
pop
movs
int
retf
xor
dec
mov
fs
out
out
lods
pop
mov
add
mov
pop
out
push
jb
stos
aas
adc
add
xlat
lods
inc
sahf
aas
sub
clc
dec
mov
dec
mov
cmc
fidivr
in
sub
mov
and
repz
lock
push
sub
cs
adc
and
push
lea
xchg
inc
fadd
cli
es
pop
ins
loope
jp
call
push
fidiv
or
sub
inc
pusha
fdiv
es
pop
push
movs
loopne
pop
inc
call
cs
pop
sbb
cwde
mov
aaa
stos
pop
ret
mov
std
pop
cld
in
adc
xchg
clc
jmp
or
sub
inc
xchg
and
dec
rcr
and
add
xchg
je
popf
rol
push
and
jno
push
mov
push
sar
xchg
add
outs
jae
outs
adc
imul
call
xchg
xchg
in
sub
sbb
dec
stos
cmp
or
cdq
xchg
push
adc
adc
imul
fwait
nop
lea
jnp
add
shl
and
call
cld
popf
pop
pavgw
jns
adc
adc
jne
(bad)
ret
mov
jge
push
mov
push
dec
mov
mov
cdq
out
and
(bad)
aaa
mov
(bad)
dec
cmp
jbe
adc
or
sub
test
cmps
mov
push
jge
jmp
leave
outs
cmp
xchg
ret
cmps
(bad)
pusha
gs
ss
out
fcomp
pop
idiv
aad
outs
data16
push
shl
call
mov
in
lods
fldcw
dec
stos
ins
movs
cld
loop
push
mov
xor
fild
leave
out
ret
mov
rcl
xchg
jmp
dec
sbb
push
dec
adc
fsub
inc
push
sub
test
mov
push
mov
fcomp
out
sub
sbb
jmp
mov
idiv
sbb
xor
into
dec
or
(bad)
in
aas
cmp
into
dec
mov
xor
outs
movs
or
dec
xor
mov
mov
ret
jecxz
sub
aas
fsubp
jno
jmp
call
cld
movs
cmp
inc
loope
push
sbb
xchg
aaa
sbb
gs
mov
icebp
push
call
sub
add
out
pop
lds
nop
mov
jo
push
movs
add
push
ficom
xchg
shl
test
movs
push
xchg
mov
jl
pop
(bad)
repz
inc
or
jle
js
hlt
in
jnp
mov
push
stos
call
fcmovnu
push
pop
sti
lock
pop
shl
movs
dec
lods
clts
sbb
push
sbb
jp
test
out
and
mov
inc
jne
je
mov
dec
dec
cwde
in
out
in
out
test
cwde
cmp
jns
push
xchg
fisub
aaa
pop
jl
cs
pop
mov
sbb
or
cmp
inc
cmp
jno
cld
(bad)
ss
fstp
cmp
dec
(bad)
cmp
(bad)
or
jmp
jne
xchg
aad
int
fcom
push
adc
aad
push
mov
mov
ss
mov
sbb
popa
inc
mov
jge
stos
fcmovnu
into
imul
mov
or
push
dec
scas
shl
aas
leave
in
jnp
out
adc
inc
xchg
xor
push
pop
xor
sbb
les
gs
rol
dec
shl
in
(bad)
cld
jl
pushf
cmp
enter
dec
inc
test
out
popf
jmp
sub
mov
popf
call
(bad)
xchg
lods
in
cmp
popf
out
shl
add
fsubr
mov
cmp
and
cwde
push
sbb
shl
fs
lock
add
(bad)
js
out
ja
xchg
(bad)
pusha
dec
call
mov
inc
mov
sub
mov
xor
(bad)
push
imul
stos
add
adc
test
int3
ds
inc
je
mov
test
pop
xor
rcr
fisttp
and
fsub
ret
int3
mov
pop
test
mov
xchg
mov
xchg
js
(bad)
js
call
adc
or
fst
jne
ins
retf
jle
stc
bnd
and
pop
arpl
mov
jge
sbb
test
pop
fcom
test
mov
nop
mov
or
xor
out
adc
sub
mov
push
out
sub
push
retf
stc
sbb
bound
pushf
fldenv
adc
or
out
and
fldcw
xchg
adc
mov
mov
mul
fsub
sbb
(bad)
xlat
aad
jns
dec
sbb
test
mov
in
jb
pop
cmps
mov
inc
push
jnp
repz
sub
ss
in
push
mov
jmp
mov
mov
add
(bad)
pop
test
adc
retf
into
jle
push
(bad)
lock
enter
push
into
and
movs
xchg
cli
cmps
in
mov
fwait
loopne
sti
push
aam
and
lahf
out
in
xor
bound
daa
(bad)
stc
add
push
cld
mov
aam
xchg
jmp
fnsave
xor
xor
mov
jno
addr16
jae
imul
sahf
push
lock
shr
lahf
lds
call
inc
push
loopne
in
mov
daa
ins
out
xor
(bad)
cmc
fs
inc
inc
into
loop
in
adc
inc
rol
jno
pop
adc
pop
mov
mov
push
icebp
inc
add
push
adc
pop
inc
mov
jne
in
rcr
xor
lea
cld
shr
fisttp
pop
out
mov
or
or
cmps
stos
pop
xchg
inc
pop
sti
xchg
inc
mov
fucomip
adc
clc
fnstsw
fwait
adc
js
adc
push
push
jb
push
ds
sbb
loopne
add
loop
jmp
push
add
jae
push
lock
enter
mov
in
enter
mov
mov
and
xor
jb
xlat
mov
sbb
xchg
xchg
popf
call
repnz
push
ret
outs
fs
clc
nop
icebp
dec
cld
xor
mov
cmp
mov
xor
shl
mov
jl
mov
mov
sub
and
xlat
pop
loopne
xchg
cs
loop
xchg
mov
sti
mov
pop
enter
cmp
or
add
sub
je
pop
sbb
fs
stos
jne
xchg
mov
and
add
call
add
jne
mov
ins
adc
loopne
loop
sub
std
jbe
xor
inc
xchg
push
push
pop
sub
adc
cmps
and
ja
and
out
test
xlat
(bad)
sub
push
cmc
ja
stos
test
je
push
imul
adc
xchg
les
retf
adc
frstor
out
mov
cdq
and
adc
jg
test
stos
mov
sub
aam
addr16
or
icebp
hlt
ret
cmp
ins
jle
test
mov
push
cld
mov
cmp
ret
ret
pop
loope
shr
add
mov
into
pusha
enter
adc
mov
push
aad
push
add
movs
cmp
bound
push
cli
clc
jl
pop
xor
nop
xor
hlt
pop
mov
fld
out
int
and
sbb
mov
stc
push
aad
test
arpl
and
xor
ins
gs
outs
retf
and
jns
cdq
sbb
mov
jmp
stos
outs
in
call
cmp
pop
int
mov
std
cmp
add
cdq
add
dec
fsubr
ror
sti
mov
enter
or
xor
sti
add
test
mov
dec
xchg
loop
jmp
push
(bad)
jae
dec
cmps
(bad)
mov
out
sub
int3
(bad)
test
fidivr
mov
into
fst
add
retf
mov
xchg
mov
fadd
jnp
jmp
push
mov
mov
push
ret
push
jnp
clc
xor
sub
fiadd
outs
arpl
jo
add
mov
int
xchg
call
scas
lods
inc
sub
aas
dec
sbb
aas
mov
stc
or
mov
hlt
and
(bad)
lea
push
push
dec
and
jmp
outs
icebp
cmp
sub
mov
scas
out
imul
ins
sbb
mov
frstor
dec
fstp
pop
cmp
jb
sbb
jp
popa
jmp
daa
dec
jmp
sbb
pop
sbb
sub
js
sbb
(bad)
pop
in
pusha
stos
mov
std
or
jbe
out
inc
mov
xrstors
sub
xchg
call
sbb
and
mov
clc
add
aam
sbb
cmp
jmp
mov
sar
sbb
in
cmc
lods
inc
or
mov
je
ins
out
push
or
dec
xor
jl
movs
aam
mov
sbb
jmp
pop
lods
es
push
xchg
out
xlat
shr
add
aaa
imul
shr
xor
imul
inc
or
sub
inc
and
shr
clc
sub
aad
adc
imul
jb
mov
xchg
adc
xor
sub
inc
xor
fisttp
push
or
test
mov
or
jecxz
fidiv
push
loope
bound
inc
fistp
pop
repz
mov
jg
clc
xor
sub
pop
cli
inc
sahf
jmp
icebp
mov
jb
jmp
push
sub
adc
pop
pop
stc
inc
push
pushf
loope
jp
shl
xchg
push
lds
or
(bad)
xlat
push
push
inc
je
inc
nop
inc
out
mov
movs
xchg
sub
cmc
pop
rol
sub
or
adc
jle
jbe
sub
xchg
lods
std
sete
enter
jmp
push
cmc
(bad)
sub
test
out
arpl
lods
ficomp
mov
push
dec
fdiv
cdq
cld
in
mov
cs
jae
push
aaa
sub
xor
pop
imul
inc
mov
nop
(bad)
sbb
cmp
jl
sbb
ficom
pop
scas
outs
(bad)
add
inc
push
addr16
mov
jae
pop
(bad)
mov
xlat
nop
adc
shr
pop
stc
fild
lods
loope
pusha
leave
jnp
icebp
and
retf
test
add
dec
mov
dec
xchg
in
dec
fadd
cmp
xor
or
movs
pop
out
mov
jnp
aas
sub
xchg
rcr
mov
jo
xor
push
mov
inc
cmp
adc
repnz
inc
jno
pop
pop
jecxz
sahf
out
or
out
icebp
mov
jae
push
inc
enter
push
or
mov
jns
es
adc
push
inc
ficomp
outs
push
pop
mov
xlat
jnp
push
jns
dec
jne
xor
popa
out
xchg
and
push
pop
enter
add
cdq
add
int
mov
mov
int3
in
dec
int
sub
in
mov
fstp
aaa
sbb
push
addr16
dec
push
mov
ror
stos
fdivr
xchg
cdq
xchg
out
aad
push
xchg
inc
mov
jl
jmp
and
cmp
pop
sub
loope
inc
sbb
sub
pop
in
test
push
sub
sbb
sub
jl
add
lds
dec
or
xchg
adc
ror
adc
pop
jmp
xor
or
xchg
loop
inc
inc
retf
or
pop
outs
mov
adc
les
push
stc
pop
adc
loopne
popa
jmp
or
aad
or
pushf
aam
mov
pop
mov
call
and
xor
cmc
add
jl
ss
mov
int3
jno
mov
xor
pop
gs
fstp
daa
mov
lock
cmc
movs
cmc
sbb
mov
sbb
sub
sub
push
movs
in
sub
and
add
mov
mov
mov
nop
jo
test
std
add
pop
push
imul
sub
pop
xchg
xchg
stos
adc
inc
mov
out
mov
jmp
loopne
jns
cmp
setno
jmp
inc
push
inc
out
imul
rcr
jno
movs
shl
imul
and
ret
dec
or
je
leave
(bad)
push
nop
jo
aam
dec
out
jnp
cmps
push
sub
and
push
icebp
sub
pop
sbb
nop
push
cdq
pop
je
sbb
pop
(bad)
pusha
inc
movs
pushf
fldenv
retf
les
add
mov
add
jmp
and
int
test
mov
inc
loop
jb
repz
hlt
sub
fsubr
sahf
cmps
add
mov
aad
addr16
retf
mov
inc
push
pop
pop
daa
mov
and
mov
cwde
lea
frstor
imul
das
mov
push
in
mov
outs
(bad)
aam
xchg
retf
dec
cmp
lds
dec
dec
ins
lea
cmps
mov
push
retf
mov
mov
adc
mov
idiv
clc
aad
jns
cmp
in
cmps
mov
hlt
sbb
iret
loop
mov
retf
adc
popf
dec
das
int3
dec
dec
test
jne
mov
pusha
add
dec
dec
adc
shl
lds
mov
push
into
enter
pop
ja
call
xchg
and
push
stc
push
dec
fcom
adc
or
jmp
(bad)
cmps
mov
imul
xor
mov
jg
cmp
mov
adc
sar
outs
jmp
or
push
inc
fyl2xp1
jg
mov
push
jo
add
fst
cmp
dec
test
pusha
daa
xor
shl
js
jge
dec
jae
popf
push
shl
jo
or
adc
(bad)
je
test
mov
(bad)
xchg
dec
xchg
or
cmovp
popf
ins
aam
jae
cld
stos
rol
lods
inc
xor
adc
inc
fdivrp
ror
enter
fld
fdivr
sub
popf
daa
mov
push
(bad)
iret
add
xchg
jns
repnz
pop
ret
(bad)
jge
cmp
add
adc
pop
repnz
outs
lods
icebp
hlt
gs
test
mov
(bad)
or
jb
push
mov
rcr
cs
ret
iret
shl
retf
adc
cmc
dec
xchg
xchg
or
cmps
pop
jne
(bad)
sub
or
shl
jl
jp
loop
xor
mov
mov
stc
outs
(bad)
add
add
je
adc
xor
ss
aam
addr16
dec
mov
das
add
cs
(bad)
gs
outs
cwde
dec
adc
outs
jo
(bad)
sub
leave
sub
and
add
scas
std
pop
cmc
mov
pop
call
test
jmp
inc
cmp
je
(bad)
adc
stos
leave
push
cs
pop
or
xor
popf
lock
int3
mov
and
mov
jp
add
xor
(bad)
std
adc
push
push
sub
pop
dec
leave
jmp
test
pop
cld
pop
pop
lods
sub
push
push
loopne
ficomp
call
data16
and
mov
add
mov
fwait
jmp
loop
add
adc
pop
cs
lds
jge
sbb
scas
sbb
push
rcl
ins
clc
dec
pop
rcl
jmp
jecxz
mov
jg
lahf
push
(bad)
push
loopne
popf
arpl
sti
push
xchg
mov
imul
out
xchg
jg
mov
test
xchg
retf
mov
jbe
sub
stos
lahf
pop
push
popa
xlat
mov
adc
rol
sub
idiv
enter
and
pop
add
and
data16
pop
scas
dec
jb
test
adc
scas
mov
test
mov
bound
shr
xchg
jp
push
data16
push
fwait
cmp
jb
bound
in
dec
or
push
sub
push
in
dec
arpl
inc
inc
mov
lock
ffreep
add
sub
jno
(bad)
dec
fistp
push
xor
or
sbb
mov
sub
inc
test
dec
mov
adc
mov
mov
inc
(bad)
or
push
mov
mov
scas
test
mov
sbb
xchg
jnp
inc
xchg
scas
jp
add
int3
mov
jmp
push
add
sub
in
lock
cmp
fistp
hlt
mov
cmp
in
popa
pop
push
cmps
mov
(bad)
repnz
xor
imul
mov
(bad)
imul
inc
cld
or
std
daa
cmp
dec
pop
dec
push
mov
or
xchg
jno
jmp
neg
sbb
not
mov
sub
push
dec
jb
test
add
iret
push
mov
sbb
push
dec
pop
shl
add
(bad)
sbb
mov
test
push
mov
jp
push
cmp
rcr
cmp
xor
ds
push
sub
jl
mov
in
pop
xor
add
popf
out
leave
int
add
push
loop
sub
stos
lahf
cmp
cmps
dec
push
outs
shl
ret
push
sub
out
ins
mov
and
jb
jne
mov
or
test
ret
dec
pusha
sbb
add
aaa
cld
cmps
add
sahf
jg
pusha
xor
(bad)
in
pop
and
mov
into
add
enter
push
xchg
into
fs
(bad)
push
test
push
sti
dec
mov
xor
cmp
imul
jo
pop
cmp
fcom
std
lods
cli
jno
jge
xchg
dec
pop
retf
ins
mov
adc
mov
div
mov
inc
lock
mov
and
sbb
adc
adc
pop
cmp
fs
arpl
push
pop
adc
imul
push
outs
xor
dec
dec
sub
ins
std
div
in
add
pop
retf
shl
or
pop
daa
inc
push
call
out
repnz
test
sub
out
adc
outs
lock
jge
mov
inc
scas
rcl
in
movs
shl
jmp
jecxz
pop
add
inc
adc
and
iret
xor
inc
or
ret
sbb
cld
pushf
jno
ret
sub
sub
retf
cdq
cmp
jg
jno
stos
xchg
aad
mov
dec
sbb
pop
inc
cld
sbb
dec
mov
push
and
adc
inc
out
push
xchg
xor
sub
xchg
xchg
imul
add
out
cmp
or
push
ror
pop
or
aaa
inc
sar
cwde
pop
cmp
push
fsubr
fnsave
not
stos
shr
je
jmp
sub
xchg
dec
sahf
lds
cmps
aaa
pop
inc
rcr
adc
push
cmp
dec
das
mov
jbe
test
test
mov
shl
and
je
mov
add
mov
neg
adc
int3
xchg
cli
mov
add
lods
ds
adc
sahf
aad
dec
imul
out
pop
popa
jns
jbe
addr16
jecxz
loope
call
mov
or
lds
inc
out
jl
add
fistp
lds
retf
shr
pop
and
ss
jmp
cmp
sbb
mov
(bad)
in
mov
mov
je
pusha
sbb
pop
pop
stos
and
dec
or
dec
xchg
fcomp
dec
cmp
mov
sub
jnp
push
inc
leave
cmps
int3
dec
jb
test
xchg
sub
xchg
les
fdivr
dec
jp
mov
mov
mov
movs
mov
scas
(bad)
iret
xchg
fadd
ffree
or
push
push
fwait
inc
aaa
jno
push
adc
add
pop
shl
lea
xor
xor
ret
daa
icebp
leave
jo
adc
in
cmp
sbb
dec
jne
mov
shl
fcomp
(bad)
lds
mov
adc
pop
clc
mov
mov
xchg
lock
call
fistp
rcl
daa
mov
nop
mov
lock
imul
ins
cs
loopne
bound
mov
xchg
jecxz
test
es
sbb
fcomp
mov
sbb
mov
inc
push
or
retf
pop
inc
std
int
mov
(bad)
fnstenv
sbb
sbb
inc
push
mov
jno
pop
jmp
retf
movs
test
cmp
inc
mov
ins
sub
or
data16
(bad)
xor
js
mov
fisttp
or
outs
pop
test
mov
push
add
in
xor
mov
enter
jg
jae
sbb
out
leave
adc
pop
xchg
xor
mov
jmp
ja
sub
adc
in
sbb
aas
nop
add
and
sbb
jb
cld
mov
adc
cmp
out
mov
and
stc
mov
or
fcmovnb
jnp
add
mov
ins
jmp
popa
add
ins
xchg
test
fisubr
mov
cdq
mov
cmc
scas
ret
jo
cmps
scas
or
mov
stos
out
lods
jbe
push
add
sahf
popw
push
xlat
frstpm(287
aam
shl
stos
jle
(bad)
lock
pusha
mov
loop
push
bound
or
inc
xor
and
ss
push
sub
int3
jle
sbb
pushf
mov
mov
and
ret
outs
sub
jbe
push
or
sub
sub
ins
movs
inc
pop
lea
mov
dec
mov
fwait
leave
add
inc
dec
call
repnz
addr16
mov
dec
dec
mov
or
mov
dec
lods
dec
not
jp
out
mov
fsub
movs
xchg
xor
inc
test
cs
jbe
fnstsw
xlat
shr
xchg
mov
sub
loop
jge
xor
cdq
div
imul
ror
push
mov
imul
and
push
pop
sub
std
mov
mov
pop
movs
mov
retf
jo
lds
sub
call
test
push
xchg
inc
cmp
hlt
jbe
sar
cmp
in
idiv
iret
cmps
cld
imul
aam
in
ins
sub
jecxz
bound
jo
or
orps
mov
out
mov
sbb
sbb
mov
fidiv
ret
xchg
imul
cdq
or
fwait
mov
inc
(bad)
nop
dec
or
sbb
cs
mov
lods
mov
push
lea
pusha
jb
mov
pop
shl
fsub
xlat
jp
ins
cmp
test
icebp
in
enter
loopne
in
and
cmp
jnp
mov
sbb
es
adc
outs
nop
loopne
pop
jmp
inc
and
inc
add
sub
dec
and
aam
or
pusha
sub
jp
jb
aad
or
out
sub
stos
call
cpuid
lock
leave
repz
mov
mov
xor
inc
pop
mov
add
xchg
repz
int
sti
mov
xchg
or
sbb
std
mov
fcmovu
mov
daa
sub
xchg
and
pop
mov
sti
bound
shl
and
and
test
or
mov
pop
inc
push
mov
das
pop
jmp
imul
out
nop
sar
je
inc
(bad)
inc
(bad)
out
sbb
aad
sti
sti
mov
sbb
or
dec
add
add
test
mov
and
std
mov
jb
outs
(bad)
dec
fwait
ret
mov
push
mov
jmp
lods
push
clc
jl
mov
push
iret
add
fbld
mov
jg
ja
popa
test
test
shl
ds
jo
jl
gs
out
xchg
xchg
aaa
mul
mov
pop
pop
dec
div
in
jno
xchg
xchg
mov
push
fsubr
sub
fist
addr16
sub
xchg
mov
cmp
cmp
or
popa
fsubp
mov
mov
cwde
xor
add
lds
pop
inc
dec
jg
ret
push
jae
stos
scas
dec
clc
repnz
jo
daa
lsl
xchg
js
add
in
mov
out
rep
rol
mov
dec
int3
xor
mov
xlat
mov
xor
add
movs
je
fistp
mov
pop
scas
ja
mov
jmp
mov
js
retf
sar
pop
pop
leave
adc
push
stos
jp
pop
in
cld
pop
mov
aam
cmp
adc
push
push
ins
dec
and
into
add
call
mov
sti
xor
lahf
sti
mov
pop
mul
jmp
cmps
cwde
neg
inc
popf
mov
mov
neg
les
inc
mov
jb
or
pop
xchg
dec
mov
adc
dec
inc
add
das
adc
out
addr16
mov
sub
push
jle
xor
outs
(bad)
xlat
imul
call
(bad)
adc
gs
mov
jnp
movs
xchg
icebp
fadd
inc
test
pop
into
repnz
popa
leave
jmp
int
rcl
add
jno
inc
jnp
adc
shl
scas
add
gs
cld
(bad)
cmps
hlt
(bad)
adc
lods
jl
sub
out
sub
jp
ffreep
jle
xchg
dec
pop
cld
pop
mov
(bad)
or
add
fs
ja
push
jnp
je
mov
clc
jg
push
(bad)
jns
repz
or
mov
ret
fmul
pop
mov
add
lods
or
cmp
xchg
fbstp
inc
(bad)
xor
push
outs
into
repnz
outs
push
push
cld
clc
test
cs
mov
jmp
inc
icebp
cwde
arpl
sbb
jg
xchg
je
fadd
mov
mov
loop
leave
(bad)
out
in
inc
pop
jp
or
mov
mov
retf
or
loop
sbb
push
test
pusha
test
out
retf
sar
in
sar
push
(bad)
out
scas
mov
or
dec
jl
sbb
xor
push
sub
adc
xchg
inc
jle
movs
xchg
mov
(bad)
lods
ins
rcr
dec
mov
inc
sbb
loopne
lods
in
cmc
xchg
in
(bad)
sub
adc
pushf
pop
mov
xlat
arpl
cmp
shr
pop
arpl
pop
cmp
cli
add
daa
jo
arpl
loopne
jmp
fistp
push
and
cs
push
adc
inc
in
cmps
pop
push
stos
mov
movs
cmp
sub
dec
sbb
adc
mov
sub
jo
fcmovne
inc
mov
mov
cmp
dec
mov
fld
mov
test
cmp
cmp
das
sbb
sub
ins
jl
cmc
dec
mov
iret
das
movs
xor
fbld
mov
adc
sub
adc
adc
pop
push
mov
pop
or
xchg
ja
push
jnp
push
sub
sub
push
xor
xor
and
int3
add
scas
into
sbb
jge
aad
adc
and
in
cmps
inc
out
scas
adc
or
cmp
mov
rcl
(bad)
xlat
dec
add
test
call
push
cld
fiadd
cmps
mov
sub
mov
scas
outs
scas
sbb
iret
push
data16
cmp
mov
loopne
aam
dec
xchg
cmp
test
xor
aas
mov
xor
andps
ss
xchg
imul
fcomp
or
loope
pop
mov
mov
sar
hlt
sbb
ins
jmp
adc
loopne
mov
call
sbb
ins
(bad)
mov
lock
or
pop
dec
fdiv
adc
lods
xor
add
retf
cmp
in
fwait
push
(bad)
(bad)
(bad)
js
nop/reserved
(bad)
xchg
ins
mov
rcl
adc
or
jmp
pop
xchg
aaa
jge
dec
and
and
inc
nop
mov
mov
xchg
cmp
jo
retf
push
pop
fld
fnsave
cmps
jnp
in
cmp
inc
inc
jno
rcr
loopne
pushf
std
and
into
outs
jmp
test
mov
cmc
mov
pop
rol
sbb
jno
lahf
dec
add
xor
sub
and
sub
push
xchg
mov
cmp
push
inc
pop
sbb
popa
outs
repnz
ror
dec
sub
sub
fnstenv
mov
mov
outs
mov
in
cdq
and
hlt
lock
add
scas
fucomi
rcl
push
dec
sar
leave
test
inc
push
aas
jns
not
daa
inc
jmp
sbb
mov
jmp
push
lahf
sbb
ret
jp
hlt
jle
(bad)
and
test
aad
push
repnz
sub
scas
(bad)
bound
pop
pop
jp
xor
loop
adc
cmps
sub
pushf
sahf
mov
cwde
jl
cmps
call
stos
xor
adc
sbb
push
cmps
xlat
push
xchg
fistp
push
sbb
cmps
mov
sub
loope
imul
rcl
gs
adc
repz
pusha
cmp
sub
sub
sbb
dec
xor
cmp
sub
nop
and
imul
xor
into
mov
jecxz
jbe
push
inc
jecxz
pusha
(bad)
add
mov
fisubr
int
sbb
dec
shl
adc
cmp
repnz
mov
lea
pop
sti
sbb
test
mov
xor
aam
fcom
in
dec
int
imul
mov
(bad)
popa
aas
mov
mov
jae
pop
xchg
add
in
shl
add
dec
ja
mov
rcr
test
inc
mov
cmp
call
(bad)
gs
in
int3
xor
mov
cli
shl
mov
ss
call
out
jp
sub
gs
inc
cmp
cwde
sub
jmp
es
ret
mov
and
sar
ds
xchg
pop
mov
lods
das
fwait
push
cmp
fcomp
js
maxps
fs
imul
(bad)
sub
push
ret
dec
jle
daa
pop
scas
mov
sub
push
xor
xor
add
ffreep
mov
fdiv
jns
scas
je
add
jg
ins
retf
jl
cmc
cwde
inc
test
(bad)
lea
sbb
cmp
dec
(bad)
xchg
hlt
out
cmp
fwait
and
cmp
ss
sti
fcmovnb
jmp
imul
in
cmp
daa
ret
or
dec
scas
mov
cdq
movs
test
mov
and
out
aaa
repnz
dec
push
jp
mov
pushf
aaa
dec
cmc
sbb
cmp
lahf
and
pop
pop
repz
inc
xor
lea
fcompp
sbb
and
cmps
sbb
mov
and
pop
ins
out
jbe
jb
fsub
ja
inc
adc
cmp
cli
inc
add
fs
add
jp
cmps
clc
inc
repz
leave
pusha
inc
int
scas
fnstcw
ret
lahf
adc
sbb
mov
ss
shl
loopne
outs
push
paddusb
aas
ins
in
loope
(bad)
xor
mov
and
mov
retf
xlat
sub
repz
or
jae
jbe
jmp
and
xor
xchg
adc
leave
movs
das
push
(bad)
out
or
inc
int3
popf
aas
fdivr
jecxz
cs
test
out
fiadd
loope
jle
lock
jb
std
sti
call
in
mov
jecxz
cmp
test
inc
jb
inc
fld
loope
add
call
loopne
mov
mov
sub
pop
fnstsw
ins
shr
dec
jp
jo
adc
fstp
rcl
fsubr
pop
xchg
stos
dec
movs
jmp
xchg
in
adc
jg
sbb
or
loope
arpl
push
fwait
or
iret
loop
mov
stc
sbb
and
pop
sub
add
push
sbb
mov
push
pop
and
dec
dec
lds
cdq
movs
ins
ja
pop
dec
push
mov
ds
pop
cmc
dec
scas
mov
outs
fstp
scas
rol
jle
movs
cs
jnp
cmc
dec
jae
mov
pop
into
cmp
fimul
jns
lea
fadd
dec
mov
xchg
push
shl
add
add
popf
fidivr
and
pop
pop
adc
neg
mov
and
adc
imul
jo
popf
xor
das
ficomp
into
mov
addr16
lock
fisttp
pop
push
xchg
enter
mov
rcr
mov
arpl
xor
lock
push
test
rol
aam
and
sbb
aas
or
out
xchg
and
in
pusha
int
movs
pop
xor
or
inc
aaa
sub
jmp
(bad)
test
and
jbe
into
adc
test
pop
dec
sbb
push
in
xchg
mov
inc
pop
push
arpl
mov
lock
ja
mov
add
add
pop
mov
popa
ret
ret
lock
nop
test
add
out
adc
and
dec
mov
mov
mov
mov
or
jle
mov
fimul
or
inc
push
imul
xor
jb
mov
push
ror
mov
and
sub
adc
mov
mov
push
push
or
movs
add
cdq
loop
dec
sbb
xchg
jg
push
jmp
repnz
push
in
loopne
xor
xor
dec
pop
cli
add
lods
xor
sub
cdq
retf
adc
push
cmps
xchg
arpl
mov
lea
popf
loopne
stos
mov
cmp
std
pop
in
imul
ror
jmp
add
pop
cmc
add
dec
in
sbb
lods
add
add
pop
adc
cmp
jp
arpl
push
cmps
in
and
cmp
or
cmp
ret
push
dec
cmp
xchg
sub
inc
test
cmp
jbe
pushf
sbb
or
and
push
mov
mov
push
pop
(bad)
scas
inc
mov
cld
inc
mov
sub
sub
loop
jle
out
inc
lahf
xchg
fsub
sub
mov
dec
push
jno
push
cmp
cmps
es
retf
out
sbb
xchg
scas
aad
xchg
fmul
sahf
mov
pop
xor
jae
pop
mov
enter
pop
push
ror
(bad)
xor
test
test
inc
mov
and
push
lahf
ja
(bad)
es
xchg
das
mov
bound
xchg
and
iret
inc
jno
add
ret
cmc
into
call
sub
mov
jg
pusha
pop
sar
das
sub
popa
pop
aas
mov
jmp
mov
jbe
xchg
sub
hlt
or
ss
dec
pop
jmp
pop
in
pop
cdq
inc
inc
fcom
adc
and
mov
cmp
mov
xchg
pop
xchg
jl
ret
mov
add
ds
ficom
leave
aam
cli
pop
fisubr
lds
pop
cmp
daa
arpl
fwait
dec
rol
lea
cmp
ss
dec
aaa
add
fs
lock
in
mov
xchg
cdq
and
shl
xchg
ret
and
xor
aaa
jle
sub
cmp
sub
pop
jb
pop
cdq
sub
ret
dec
(bad)
test
loop
ins
imul
rol
inc
mov
out
out
mov
sub
ins
pop
cmp
repz
div
fcom
xor
push
jl
pop
mov
xchg
mov
mov
scas
aad
mov
lds
sbb
add
mov
sub
sbb
xor
leave
aam
push
mov
fsubr
jns
out
sahf
push
ds
call
sbb
mov
push
xchg
bound
fisubr
xlat
mov
aaa
add
inc
dec
popf
mov
sbb
mov
jle
jae
add
add
sbb
xlat
pop
jae
adc
std
pushf
xchg
out
dec
clc
jmp
loopne
lds
mov
or
jl
add
neg
out
mov
ins
adc
pusha
and
fld
sbb
mov
mul
pop
xor
mov
mov
xchg
daa
ins
mov
or
xchg
jge
adc
adc
pop
mov
xchg
or
ret
fmul
in
cwde
xor
jmp
push
nop
test
and
and
adc
inc
mov
aaa
in
adc
aad
ret
std
and
movs
jge
jle
imul
add
and
je
xor
mov
loope
mov
and
and
sub
nop
shl
inc
pop
sbb
sar
and
stos
test
mov
mov
aad
mov
mov
inc
stc
mov
or
sbb
xchg
movs
leave
sbb
dec
push
or
fist
or
stc
pop
ss
jge
cmps
pop
and
cmp
(bad)
adc
jmp
jo
addr16
mov
mov
addr16
xor
call
add
out
adc
int
and
dec
mov
xchg
daa
mov
xadd
daa
(bad)
aas
pop
movs
xchg
sbb
cmp
mov
call
ret
add
aad
sub
mov
and
mov
sbb
lock
pop
or
mov
out
mov
push
adc
not
fsub
add
cmps
rol
popf
add
in
pop
outs
jmp
mov
fwait
cld
fwait
push
fistp
xchg
into
popf
in
(bad)
pop
push
fld
jb
mov
fcom
ja
add
pop
lahf
repz
push
cmp
sub
iret
pop
sbb
in
(bad)
inc
sub
int3
pop
sub
or
loop
push
push
mov
adc
fild
sub
dec
sub
pop
add
lock
mov
xchg
jmp
pusha
stos
leave
jmp
dec
cmps
in
repnz
push
mov
ins
xchg
inc
adc
ret
add
fidiv
retf
sbb
faddp
jae
pop
xchg
cmc
mov
(bad)
loopne
out
push
out
jl
int3
popf
cmovns
xchg
pop
jbe
dec
clc
jle
xlat
js
cld
test
dec
mov
(bad)
(bad)
jg
and
push
rcl
jbe
pop
mov
adc
xchg
div
in
dec
jae
repz
mov
push
xchg
das
fld
xor
xchg
add
or
aam
push
xor
cmp
pop
sub
into
jae
push
jno
sti
cld
cwde
mov
jb
outs
call
push
fistp
sub
or
leave
test
push
mov
jns
shl
in
rcl
sbb
xor
push
pop
(bad)
mov
dec
pop
add
enter
popf
int
hlt
ret
adc
push
cwde
dec
pop
cwde
arpl
mov
cmp
pop
sub
movs
or
jb
pop
lock
fucomp
dec
stos
pusha
scas
jbe
(bad)
scas
inc
adc
lock
push
push
push
cmp
aaa
aas
test
mov
test
xor
pusha
daa
mov
sbb
loopne
mov
xchg
xlat
call
dec
idiv
cmp
retf
and
xchg
or
mov
int
pop
lds
scas
or
lahf
aad
test
retf
loope
pusha
adc
dec
inc
sub
pop
or
sub
push
int
(bad)
or
bound
add
std
push
mov
pop
pop
int3
cmps
ds
mov
cmp
cld
loop
outs
arpl
sbb
add
ins
or
dec
mul
push
mov
push
push
sbb
aam
cdq
jb
retf
mov
jle
jmp
mov
(bad)
test
mov
shl
call
test
loope
clc
cmc
je
popf
lods
outs
jo
cli
shl
arpl
sti
scas
mov
cmp
jmp
cmp
cmp
je
or
xchg
dec
lods
sbb
and
cwde
je
outs
push
jo
jae
jns
rol
inc
fadd
jge
add
mov
or
std
jo
ss
dec
mov
mov
push
and
sbb
xor
push
js
dec
stos
sbb
hlt
int
es
mov
pusha
jp
adc
adc
and
inc
data16
jg
cmc
inc
adc
mov
loopne
daa
test
mov
(bad)
dec
adc
and
adc
sti
int
test
call
dec
dec
rcl
rcl
or
gs
daa
in
sbb
xor
es
sub
dec
push
xchg
fldenv
stc
iret
xchg
fadd
pusha
arpl
xor
ret
push
(bad)
or
repnz
push
adc
lods
mov
pop
xor
pop
mov
jmp
inc
cmps
es
jns
jmp
or
dec
pop
mov
xchg
xchg
das
mov
cdq
adc
and
in
cmp
enter
xchg
movntq
and
sar
xchg
fmul
call
leave
xor
cmc
outs
xchg
cmp
in
push
xchg
jo
mov
scas
icebp
mov
pop
or
mov
adc
push
loopne
mov
push
(bad)
pop
and
ret
sub
xchg
hlt
(bad)
push
cmps
test
pop
imul
lahf
mov
xor
and
jae
xchg
cli
jl
sub
mov
rcl
sub
daa
je
add
mov
imul
fs
sub
xchg
int
dec
sbb
and
or
push
aam
test
leave
enter
xchg
fs
push
inc
and
outs
cdq
pushf
xor
test
pop
iret
imul
jnp
inc
sti
xchg
dec
mov
mov
mov
ror
scas
test
sub
mov
mov
lds
jp
arpl
jecxz
int
inc
mov
jle
jg
xchg
std
(bad)
cmp
mov
jl
js
jmp
ror
imul
cli
(bad)
push
test
outs
add
mov
(bad)
mov
stc
push
cld
ret
in
xchg
and
aas
aad
sub
sub
cmp
adc
out
pusha
ja
xchg
add
adc
xor
stc
lock
in
repz
ins
test
push
pop
mov
sbb
inc
arpl
ins
out
out
sbb
inc
cmp
idiv
ret
and
dec
rol
and
sbb
inc
in
sub
pop
inc
imul
pusha
mov
ins
dec
ins
or
and
call
jge
jmp
popa
imul
jmp
jmp
int
pop
lahf
mov
cmp
int
popf
test
cld
xor
dec
test
test
fs
mov
and
cmp
xchg
cwde
imul
mov
mov
inc
lock
push
sub
stc
sub
loope
loopne
cmp
xor
outs
call
adc
pop
sbb
imul
cmp
mov
test
push
sub
cmp
add
mov
jmp
fisubr
hlt
fwait
mov
mov
stos
sbb
popfw
push
xor
test
mov
rcr
push
jmp
fist
mov
shr
mov
push
repz
fwait
dec
xlat
les
mov
or
or
cmp
mov
aaa
mov
retf
pop
daa
inc
or
lock
xchg
sbb
stos
cmp
jo
xchg
lds
fsubr
aad
sbb
cmp
les
outs
jno
sbb
es
mov
popf
dec
add
dec
add
jle
out
dec
mov
push
inc
mov
xchg
pop
lods
dec
(bad)
dec
mov
mov
inc
rcr
ja
pop
push
jno
stc
rcr
(bad)
rol
jae
xchg
inc
jno
push
mov
aas
sbb
pop
lock
aad
scas
test
inc
inc
mov
and
xor
xor
not
mov
jb
out
cmps
jae
imul
js
mov
popa
mov
sub
imul
int
retf
int3
mov
xchg
repnz
cld
mov
les
xchg
add
mov
jmp
mov
mov
fsub
dec
mov
mov
mov
mov
mov
xor
(bad)
ror
adc
cdq
outs
scas
std
rol
lock
push
pusha
std
mov
outs
dec
xchg
shl
mov
push
mov
sub
inc
jnp
or
lea
fs
sbb
mov
mov
imul
add
aaa
test
sub
mov
jbe
stos
mov
sub
add
mov
or
inc
xchg
neg
fcom
shl
pop
int3
mov
fnstsw
adc
sbb
mov
add
popf
pusha
mov
mov
sahf
aaa
jno
movs
xor
inc
data16
bt
mov
inc
push
add
(bad)
call
fucom
mov
sub
inc
push
arpl
push
jns
stos
fstp
inc
jbe
mov
pop
xor
cmps
outs
push
shr
or
rcr
stc
in
arpl
loope
inc
sub
adc
xchg
mov
adc
sub
sub
inc
inc
cwde
into
aaa
(bad)
ficomp
mov
adc
dec
cli
fneni(8087
loop
adc
adc
in
(bad)
movs
imul
jecxz
aam
lea
push
xchg
mov
ret
cmp
aad
ror
sub
xchg
rol
jge
mov
inc
les
lods
ss
mov
push
jmp
mov
mov
sub
fs
aam
push
je
add
shl
ret
fwait
nop
pop
jno
mov
repnz
pushf
sbb
iret
pop
out
ins
pop
ror
jecxz
sbb
test
jae
outs
cmp
mov
scas
das
psubusw
jbe
fcomip
jns
(bad)
leave
sbb
cmc
jge
mov
or
mov
cdq
sahf
imul
inc
push
(bad)
mov
mov
loopne
pop
sub
jnp
cwde
pop
or
mov
mov
cdq
lahf
xor
dec
and
test
jne
out
adc
ret
imul
push
push
not
or
xor
arpl
out
and
fcomp
push
dec
setbe
pushf
(bad)
sahf
or
vpunpckhdq
imul
(bad)
call
add
jae
jb
(bad)
mov
pop
adc
je
cmp
sbb
adc
mov
mov
dec
cld
jbe
clc
icebp
(bad)
pop
gs
mov
add
mov
or
dec
add
cmp
and
js
mov
sbb
or
xchg
sub
pop
xchg
fistp
outs
retf
inc
(bad)
fild
int
adc
jecxz
outs
cmp
scas
pop
shl
in
and
mov
mov
out
and
mov
les
or
scas
movs
mov
mov
(bad)
mov
push
jno
ss
shl
xchg
mov
lods
inc
mov
outs
jb
xor
xchg
cmps
cmp
call
data16
(bad)
push
pop
add
ja
sub
call
pop
mov
hlt
jmp
xchg
call
xor
add
sbb
rcr
(bad)
jo
in
inc
push
addr16
mov
shl
ss
jno
lods
jg
mov
cmp
dec
mov
xor
inc
push
jmp
(bad)
test
xlat
(bad)
sbb
xchg
add
push
jmp
xchg
and
mov
ds
mov
jmp
sahf
(bad)
push
leave
ins
sub
aas
dec
nop
mov
mov
enter
jo
xchg
pusha
cmp
push
jb
add
popa
(bad)
in
jbe
cmp
bound
faddp
or
inc
mov
dec
repnz
xor
cdq
clc
aam
js
or
(bad)
ret
pop
mov
push
pop
into
lock
push
mov
mov
dec
push
loopne
jno
test
nop
aas
test
jecxz
or
je
sbb
fild
daa
jno
rcl
loop
adc
ret
(bad)
xchg
xor
imul
and
pushf
adc
mov
pop
push
sbb
movzx
fisttp
(bad)
cmp
sbb
sub
lahf
test
mov
mov
gs
sbb
add
push
cmp
push
outs
add
(bad)
ficom
call
and
dec
test
mov
mov
inc
mov
xchg
rcl
jge
jns
movs
pusha
(bad)
and
popa
xchg
loop
addr16
(bad)
out
dec
mov
add
mov
pop
xchg
imul
ret
outs
(bad)
cmps
clc
rcr
pushf
xor
sbb
rcl
retf
pop
scas
pop
iret
aad
push
inc
add
loopne
jp
mov
mov
addr16
js
ss
outs
sbb
inc
popf
push
sbb
mov
push
add
mov
jbe
mov
popa
sub
inc
dec
in
and
inc
lock
bound
jecxz
das
cwde
push
sbb
xchg
(bad)
mov
pop
jg
cdq
into
add
mov
adc
adc
ins
fdivr
push
or
in
cmps
push
pusha
mov
call
cmps
push
dec
(bad)
xlat
cmc
pushf
xor
adc
jnp
jnp
mov
(bad)
push
outs
fwait
mov
inc
cmp
inc
add
pop
movs
movs
clc
xchg
ret
in
fdiv
jl
dec
lds
stc
jo
out
sbb
lods
mov
mov
push
ret
(bad)
and
inc
loop
xchg
cmp
mov
or
jbe
pop
sub
mov
push
xchg
push
jb
loopne
fcmove
xchg
shl
inc
daa
inc
bnd
pop
adc
xchg
not
xchg
and
sbb
mov
sub
or
in
jae
push
inc
lahf
mov
ret
int
retf
push
(bad)
xor
rol
and
scas
out
jge
pop
mov
ja
(bad)
call
rcl
xchg
pop
dec
mov
enter
add
mov
inc
ja
int3
adc
gs
in
dec
sub
call
mov
cli
dec
movs
cld
and
outs
push
loop
imul
rol
test
cli
hlt
xor
mov
adc
mov
mov
cmp
aaa
jmp
mov
xor
sub
nop
hlt
mov
dec
cmc
jecxz
out
xchg
cmp
outs
cmps
in
jae
mov
fwait
mov
in
gs
ror
dec
ja
fs
xchg
sbb
mul
xchg
pop
sti
dec
addr16
mov
jge
bswap
cmps
xchg
enter
popf
inc
sbb
sub
dec
cld
sar
lahf
cmp
movs
es
clc
dec
cwde
cmp
stc
xlat
fs
mov
call
mov
or
or
and
std
mov
sbb
movs
inc
dec
mov
mov
aaa
aaa
(bad)
call
(bad)
ret
cmps
xchg
or
(bad)
clc
mov
fidivr
fdiv
dec
sbb
jo
xchg
cmps
xchg
retf
aas
ds
push
fstp
enter
xchg
push
arpl
pop
inc
lods
jmp
and
cmp
es
add
call
inc
or
jl
fucomp
daa
into
cmp
mov
sub
les
adc
push
pop
inc
mov
mov
addr16
xor
push
inc
test
imul
mov
add
lods
es
bound
imul
lods
mov
fs
imul
dec
popf
clc
xchg
popf
cmp
jnp
push
and
jl
and
ret
push
push
cpuid
jns
test
pusha
movs
push
push
lods
mov
xor
cmc
pop
dec
das
aas
jmp
or
fucomi
dec
inc
enter
jmp
test
add
loope
out
sbb
cmps
jle
into
push
test
adc
xchg
cli
je
mov
mov
adc
dec
push
sub
sbb
add
xchg
mov
or
inc
(bad)
cmc
pusha
mov
fisttp
add
and
cdq
add
mov
out
mov
push
sbb
out
test
imul
enter
jle
mov
lods
mov
js
loop
imul
fwait
retf
into
lods
arpl
hlt
push
push
or
sbb
inc
ret
mov
add
push
xchg
pop
fidivr
into
xor
jp
sbb
clc
(bad)
push
adc
movd
xor
cmp
lock
cs
xchg
(bad)
pop
leave
jmp
and
test
mov
pop
stc
pop
adc
mov
enter
push
cmc
cld
mov
movs
rol
xchg
cmp
out
pushf
dec
imul
jae
clc
mov
fimul
stos
call
xchg
cmp
iret
mov
cmp
sub
jle
push
ss
and
pushf
mov
cs
aas
jno
in
enter
pop
fiadd
fdivr
outs
push
imul
mov
jl
adc
dec
out
sbb
and
int3
rol
jmp
imul
(bad)
out
adc
mov
add
or
sub
mov
or
inc
sbb
xor
test
fs
inc
pop
repz
xchg
scas
mov
lock
or
lock
xchg
ror
js
pop
mov
jl
mov
and
pushf
mov
push
cmp
arpl
mov
cmp
sub
xchg
sti
push
adc
fimul
xor
inc
or
and
sahf
fisub
add
pop
pop
stos
aad
pop
sar
and
iret
mov
iret
lahf
aaa
sub
dec
mov
jmp
mov
and
xchg
xchg
stos
nop
push
xor
shl
dec
cmp
fldcw
fistp
add
add
pop
xor
gs
jno
out
cmc
or
mov
out
mov
sub
cmp
fmul
adc
scas
mov
dec
es
test
inc
ins
sbb
(bad)
cmp
aas
sbb
mov
stos
sub
cwde
fdiv
cmp
ins
test
in
popa
push
sub
sub
aam
imul
mov
out
fcomp
mov
lods
mov
mov
jo
jae
cs
scas
icebp
push
mov
mov
mov
(bad)
jnp
je
mov
inc
dec
out
sbb
pop
mov
mov
or
adc
and
xor
xchg
es
ins
xchg
add
aad
cmp
dec
adc
out
xchg
and
jg
bound
outs
clc
shl
ins
mov
adc
dec
xchg
ja
and
aas
push
or
jmp
mov
pushf
mov
xchg
jmp
movs
mov
sbb
hlt
mov
test
jb
out
out
fadd
push
jae
and
and
mov
xchg
or
aas
xor
or
pop
(bad)
and
jne
mov
pop
retf
ud0
dec
jmp
pusha
dec
and
jnp
aam
sub
push
pop
dec
mov
fs
jnp
ja
mov
inc
or
in
test
and
xor
(bad)
jl
jns
scas
test
es
clc
aad
sti
push
mov
sbb
(bad)
test
adc
sub
mov
jae
mov
xchg
mov
bnd
mov
test
stc
jbe
scas
mov
jmp
into
dec
fiadd
mov
xchg
(bad)
inc
movs
mul
cmp
inc
dec
and
test
nop
dec
lock
stos
xor
or
jbe
and
xor
fdiv
(bad)
inc
out
sub
sbb
jecxz
jae
push
cs
push
cld
mov
jmp
aas
and
dec
inc
push
cdq
psubsb
fiadd
into
stc
xor
mov
dec
mov
mov
stos
mov
xor
inc
lahf
hlt
ret
mov
loopne
out
pop
mul
dec
xor
mov
jnp
jae
call
adc
loop
scas
pop
dec
cmp
jae
(bad)
retf
mov
jb
sub
out
dec
push
push
mov
and
test
and
mov
(bad)
jns
inc
gs
ins
js
aam
arpl
mov
jns
int
retf
int
mov
sub
and
and
retf
push
into
shl
pop
mov
or
xor
int3
fidiv
pop
jno
dec
inc
add
repnz
lea
sbb
pop
movs
aam
dec
xchg
mov
data16
mov
(bad)
pop
rcr
sub
jno
mov
cmp
inc
dec
fwait
je
push
popa
push
sti
add
sub
pop
sbb
pop
mov
sbb
or
cmp
pop
xor
ins
cmp
nop
rcl
pusha
sbb
xchg
movs
mov
cmp
adc
add
push
mov
push
mov
mov
mov
or
jb
push
fsubr
dec
xchg
div
mov
out
enter
and
sti
sar
and
lahf
movs
sbb
or
lods
aam
mov
cvtpi2ps
in
or
fld
pop
into
int3
jne
cmovp
mov
ins
scas
pop
pop
into
cmps
aad
repnz
adc
not
addr16
rcl
and
or
mov
out
loop
adc
or
lds
fadd
(bad)
jbe
jle
clc
ja
hlt
add
pop
fistp
lea
dec
ret
pop
xor
pop
mov
mov
jb
xchg
shl
mov
inc
das
pop
call
mov
in
add
lds
jmp
leave
imul
add
iret
dec
popf
mov
(bad)
dec
adc
jae
(bad)
lds
push
inc
sub
retf
pusha
and
ret
sub
xchg
pop
dec
hlt
fneni(8087
add
mov
outs
int
and
fsub
xor
jb
and
xchg
vpmaxub
mov
(bad)
int3
loop
mov
into
lahf
xchg
xchg
push
test
movs
mov
fldcw
bound
hlt
sub
ins
mov
shl
sbb
call
retf
jbe
hlt
fldcw
retf
aaa
loope
in
adc
sbb
sub
test
mov
mov
mov
pop
imul
jnp
xchg
pop
cmp
ja
ss
mov
mov
fs
mov
test
push
iret
jb
add
mov
push
nop
sub
cwde
psrlw
jnp
inc
stos
mov
inc
sbb
dec
jmp
jmp
cmp
xor
sbb
popa
sbb
pop
lahf
jg
popa
retf
das
push
and
jle
dec
cmc
push
mov
mov
outs
xchg
add
add
sbb
add
mov
add
arpl
mov
in
repnz
outs
add
xchg
ret
push
retf
icebp
mov
in
mov
xlat
imul
(bad)
push
call
cmp
add
rol
in
cmp
jmp
jmp
sbb
ret
enter
inc
fldenv
mov
jecxz
inc
mov
retf
mov
xchg
add
sub
int
ror
mov
icebp
sub
cmp
outs
js
and
fsub
xor
push
xchg
movs
mov
xchg
xchg
gs
movs
in
cs
jg
jle
pop
neg
and
xor
lahf
adc
adc
inc
and
int
sbb
mov
xchg
jae
cmp
cmc
(bad)
rcl
jmp
and
cmps
inc
in
dec
adc
push
jp
dec
jle
call
jg
and
fistp
inc
ret
mov
jp
jmp
mov
dec
xchg
mov
popf
cmp
cmp
mov
and
and
mov
shr
and
jno
lea
jp
jmp
or
push
sbb
mov
mov
cmc
cmc
je
mov
cmp
adc
mov
or
aam
or
push
cmp
cs
xchg
sti
dec
cmp
adc
imul
pop
mov
push
or
mov
cld
shl
sti
inc
mov
mov
mov
outs
or
clc
div
imul
sar
xchg
dec
pusha
inc
jae
and
clc
and
mov
add
jecxz
lea
dec
repz
jg
int
aas
cmp
test
ss
sub
loop
add
ret
push
xor
jg
mov
into
xchg
movs
rcr
and
push
rol
inc
pop
push
xchg
inc
clc
mov
cmp
out
fild
and
ret
lea
arpl
cs
cmps
dec
fcomp
xchg
xor
rcl
div
gs
into
es
scas
ret
imul
outs
arpl
push
push
cmp
test
mov
jb
in
mov
mov
adc
add
ds
sub
test
push
and
jecxz
or
push
sbb
loopne
and
add
ins
(bad)
es
push
xchg
jle
jnp
out
mov
cmp
mov
je
ds
bound
div
sti
xchg
inc
xchg
aam
adc
cli
mov
sub
fdiv
push
mov
leave
dec
test
ins
add
inc
push
nop
pop
int
push
xchg
stos
add
loopne
push
push
scas
pop
dec
mov
cli
sbb
add
(bad)
sbb
push
rcl
out
xchg
cmp
cmps
(bad)
dec
pushf
daa
lahf
jb
pop
sahf
int3
push
fadd
xlat
(bad)
sub
pop
pop
add
jmp
sar
push
xchg
popa
icebp
and
lds
mov
mov
or
mov
sbb
jmp
ret
or
sub
(bad)
adc
xchg
mov
fnstsw
imul
dec
pop
or
push
dec
cmps
cmp
inc
dec
dec
sbb
or
fiadd
sub
or
sar
jge
rcl
mov
pop
cwde
std
repnz
fwait
jbe
fs
pop
jbe
ja
sahf
and
icebp
dec
or
call
sbb
scas
movs
fwait
pusha
clc
outs
cmp
retf
jmp
imul
mov
sahf
jmp
dec
inc
mov
pop
outs
jmp
adc
js
sbb
imul
push
(bad)
cmp
scas
ja
cmp
ret
inc
neg
ja
lahf
cmp
test
and
imul
sar
ins
movs
repz
mov
mov
jl
inc
fldcw
xor
jae
mov
scas
(bad)
pushf
cli
stos
mov
mov
cs
pop
ret
xchg
neg
test
mov
sbb
and
pop
jmp
inc
(bad)
clc
sub
push
iret
inc
dec
dec
push
cmp
mov
movs
fisub
mov
pop
hlt
adc
push
lahf
sti
xor
add
pop
(bad)
enter
imul
inc
cwde
addr16
and
fidivr
(bad)
mov
cmps
mov
mov
jp
xor
inc
nop
cmp
adc
scas
fdivr
gs
mov
mov
jbe
mov
mov
inc
iret
loopne
adc
mov
cwde
ja
push
in
iret
frstor
add
clc
sbb
cmps
outs
pop
jle
cmc
xlat
pop
cld
ins
dec
cdq
(bad)
inc
inc
inc
dec
test
and
mov
repnz
jmp
fwait
mov
push
lahf
and
hlt
pop
pushf
in
cmp
mov
adc
cmp
mov
pop
imul
adc
lahf
les
je
ror
push
(bad)
call
jno
add
jbe
jg
pop
or
push
in
mov
sbb
ja
sub
enter
fcomp
mov
fnsave
push
mov
xchg
cli
int
push
es
pop
fisubr
push
fbstp
test
mov
leave
ret
adc
loope
(bad)
stos
iret
ficomp
or
inc
lock
or
out
xor
pop
pop
cld
cwde
add
(bad)
dec
loope
inc
and
cmps
(bad)
xchg
mov
(bad)
jecxz
xor
jo
jbe
clc
push
stc
int3
ins
inc
out
jmp
(bad)
dec
int
mov
clc
fidivr
jge
mov
frstor
dec
(bad)
int3
out
out
lea
mul
(bad)
mov
and
xchg
and
not
in
sahf
push
push
imul
xor
sub
adc
xor
sub
xchg
inc
mov
std
sti
fnsave
xchg
and
adc
les
ret
sbb
in
les
rcr
xor
dec
in
outs
dec
mov
loop
fisubr
pop
ds
ins
fild
out
fld
cs
out
jns
or
popa
cmp
or
rcr
out
jge
mov
sub
mov
dec
sub
aad
mov
mov
jns
movs
and
dec
push
movlps
clc
and
daa
movs
in
cwde
imul
out
cmp
in
jg
mov
add
fisttp
call
mov
hlt
out
aaa
aaa
jo
xchg
scas
xor
call
out
add
adc
mov
push
and
adc
jge
(bad)
inc
and
or
addr16
xchg
es
rcl
enter
out
cmp
out
or
adc
mov
test
dec
push
out
ret
aaa
cmp
aam
mov
imul
xchg
jmp
aad
stos
ds
jne
not
inc
push
add
push
inc
xlat
pop
in
pushf
in
push
mov
repz
mov
(bad)
div
retf
push
enter
adc
push
mov
les
or
dec
leave
rcr
jns
call
dec
ror
cld
(bad)
jnp
test
add
add
into
or
mov
pop
in
inc
gs
push
je
stc
sbb
stc
xchg
inc
add
jae
inc
jb
mov
xor
xor
adc
or
cmp
ja
adc
daa
rol
fwait
dec
pop
jae
xlat
mov
jnp
inc
ret
push
popa
jnp
cmp
in
es
pop
mov
int
mov
push
sub
pop
neg
fsubr
in
bound
stos
addr16
xchg
xor
fstp
mov
retf
xor
push
cmp
(bad)
mov
mov
sub
int3
xchg
xchg
stc
hlt
das
shl
add
mov
cmps
pusha
mov
add
inc
mov
jbe
arpl
arpl
(bad)
sahf
jns
(bad)
mov
dec
inc
adc
pop
xor
jp
scas
sbb
add
dec
cmp
add
js
push
sub
cld
fcomp
(bad)
xor
pusha
mov
xor
pop
out
inc
xchg
xchg
cmc
pop
lods
rcr
lods
ror
test
popf
or
test
(bad)
adc
add
mov
sbb
scas
popf
sub
popa
add
jl
mov
cs
or
jnp
jmp
call
sahf
in
adc
(bad)
cmp
mov
inc
aaa
cs
popf
aas
sbb
sbb
sbb
push
jl
or
mov
out
rcr
mov
aam
popf
xchg
scas
cmc
push
sbb
lahf
jo
push
sar
fwait
loopne
iret
mov
les
sbb
pushf
rcl
jns
or
cmp
xchg
xchg
or
xchg
xchg
fdivr
sub
pusha
clc
jp
xchg
(bad)
pop
mov
nop
cmps
test
jnp
ss
inc
inc
test
cs
popf
jle
add
add
cld
fcomp
adc
push
jnp
mul
scas
mov
push
sbb
nop
hlt
push
es
(bad)
lods
push
(bad)
repnz
push
sub
leave
push
pop
js
cmps
xrelease
push
mov
xchg
xchg
xchg
sub
push
or
mov
sahf
(bad)
push
enter
sub
jp
je
aam
ds
call
bound
out
(bad)
fld
aaa
pop
jmp
push
loop
in
pop
jge
xlat
gs
pop
div
ds
imul
xor
jne
add
test
sub
mov
jbe
call
xchg
xor
cmc
(bad)
pop
xchg
mov
sti
lea
push
je
mov
xchg
pop
jg
aaa
cmp
fwait
sbb
aaa
push
enter
arpl
dec
dec
retf
pop
jae
das
xchg
fnstenv
leave
sub
shr
popa
jmp
jge
pushf
dec
rcl
test
mov
and
fsub
pushf
push
xor
mov
sbb
dec
shl
lods
or
aam
and
(bad)
(bad)
push
mov
pop
test
pop
dec
nop
xchg
add
or
imul
rcl
imul
mov
cmps
icebp
dec
push
add
inc
xor
mov
pop
es
dec
and
jmp
and
mov
pop
push
pop
cwde
mov
retf
adc
xor
pop
(bad)
xor
frstor
scas
jmp
pop
fldl2e
or
cmps
jo
mov
adc
dec
and
cmp
dec
and
sub
hlt
push
aad
(bad)
in
outs
call
push
shl
push
and
jg
adc
mov
mov
(bad)
daa
pop
xchg
push
fwait
push
mov
call
xchg
lods
lock
inc
add
sub
repz
mov
and
mov
and
adc
mov
int
call
adc
sahf
scas
or
add
push
int3
mov
push
xchg
js
sbb
fwait
loop
sbb
icebp
bound
ficomp
loope
mov
cwde
xchg
add
dec
inc
adc
repz
adc
lock
adc
jge
loopne
test
mov
or
repz
add
gs
jmp
ret
(bad)
mov
cmp
lock
adc
inc
adc
sti
(bad)
sub
sbb
cli
push
gs
imul
test
sahf
xchg
sbb
jp
test
adc
imul
cld
shl
pop
loop
push
xchg
mov
xchg
iret
data16
adc
mov
ror
mov
in
xchg
(bad)
leave
xor
in
add
add
rcl
mov
jae
jl
mov
add
jle
inc
mov
mov
sbb
pop
int
cmc
mov
out
or
jo
xchg
dec
sbb
pusha
dec
jnp
sbb
ins
lods
aas
xlat
sub
sub
movs
fwait
sbb
je
mov
stc
(bad)
jmp
sub
jecxz
cmp
cmp
or
mov
cli
and
cmp
sub
test
xchg
dec
mov
mov
cmps
lods
jno
outs
cmp
lock
push
sub
stos
or
push
mov
mov
push
cmp
sbb
aaa
cli
jmp
dec
outs
xchg
sub
mov
sti
jmp
fild
jle
inc
sub
pop
pop
aam
jg
stos
lea
mov
in
(bad)
int3
pop
push
cmps
mov
mov
rcl
mov
(bad)
sbb
mov
inc
lds
enter
or
jb
mov
lea
pop
or
sub
cli
cmps
retf
or
mov
or
test
push
xor
test
push
sub
in
xchg
xchg
ins
mov
imul
mov
push
mov
pop
inc
xchg
out
xor
pop
dec
sahf
movs
mov
out
in
sbb
add
je
int
enter
pushf
cmp
push
lods
ins
(bad)
dec
add
mov
in
icebp
xor
add
fdiv
sahf
and
mov
mov
pop
jae
sti
add
mov
aad
xor
or
repz
jno
loop
xor
xchg
or
test
mov
retf
push
dec
adc
xchg
cmps
shl
call
aam
aad
aas
jbe
and
aaa
inc
push
and
aad
jo
arpl
idiv
pop
xchg
or
or
mov
ins
or
sti
mov
sti
push
scas
jbe
mov
adc
xor
xor
repnz
shl
fs
sti
dec
(bad)
ss
hlt
enter
mov
(bad)
rcl
test
imul
mov
dec
inc
push
add
mov
dec
test
stos
lods
dec
inc
jmp
(bad)
jne
ret
push
cmc
in
int
enter
xchg
repz
mov
jmp
imul
aaa
add
mov
mov
push
dec
pop
adc
pop
jg
cs
pop
and
mov
adc
out
ret
and
ss
xor
inc
test
mov
test
movs
push
pushf
scas
mov
retf
jne
push
popa
jle
scas
inc
repnz
push
cmp
movs
aad
jl
je
fldenv
cmp
jns
ds
sub
dec
imul
push
clc
aam
adc
inc
mov
sub
ins
jbe
xchg
inc
div
call
in
out
sar
add
cld
and
add
hlt
(bad)
sub
xchg
lock
xor
icebp
test
push
adc
aas
not
lahf
dec
sahf
and
pop
ds
inc
lods
jmp
xchg
cmps
aam
adc
adc
stos
sti
and
das
sub
jl
out
fldcw
aas
push
popa
xor
sbb
jp
lods
not
lahf
icebp
xlat
cmps
test
pop
fcomp
inc
cmp
add
fs
stos
jno
sub
clc
push
je
inc
dec
rcr
or
sub
mov
iret
fs
mov
and
test
push
lock
cmp
or
ins
arpl
pop
xchg
add
cdq
push
popf
aad
push
push
add
push
jns
loopne
mul
mov
mov
out
repnz
int3
mov
imul
ja
outs
les
mov
leave
xlat
lods
aas
icebp
xor
enter
aam
sbb
(bad)
xor
push
data16
ins
push
fisubr
rol
push
jbe
lea
and
icebp
imul
sbb
loopne
jns
mov
mov
int3
jb
ror
out
adc
je
push
icebp
lahf
pop
sbb
lahf
stc
push
(bad)
sub
out
ss
and
xchg
hlt
(bad)
sub
add
xchg
jp
sub
nop
fistp
inc
popa
jno
loop
cmc
nop
jg
enter
cmp
jnp
fadd
call
lods
jle
rcl
data16
jp
and
mov
mov
inc
push
xor
movs
add
pop
inc
mov
sub
rcl
jnp
jno
movs
or
test
cmp
jmp
push
mov
push
cs
cld
jge
daa
xor
sti
jb
dec
loop
jns
dec
pop
pop
bnd
ins
aaa
cmp
es
les
xchg
in
jmp
sbb
xchg
mov
mov
sub
or
repnz
pop
sub
jo
sub
mov
cmp
push
fidivr
bound
cli
pop
pop
imul
(bad)
movs
clc
leave
add
adc
mov
and
loope
imul
jne
xchg
mov
fdivr
jmp
xor
and
test
pushf
pusha
inc
inc
and
dec
and
out
add
mov
mov
popa
xchg
and
push
push
cdq
jmp
imul
jns
jl
cmp
mov
outs
lds
inc
jmp
mov
scas
jecxz
lahf
outs
cmp
xchg
dec
add
jns
les
push
dec
push
loopne
in
sub
inc
add
and
jbe
data16
add
lds
sub
(bad)
fbld
add
cmovne
retf
xchg
push
or
sar
sub
cld
test
test
mov
addr16
cmp
imul
je
pusha
cwde
mov
mov
rol
stos
fnsave
cdq
push
pop
movs
loop
adc
shl
sahf
mov
imul
(bad)
in
imul
adc
dec
in
push
adc
inc
inc
push
jo
fwait
scas
dec
in
rcl
out
mov
ret
xchg
mov
push
pop
fisub
nop
pop
mov
xor
pop
loope
sub
xlat
jp
mov
inc
mul
xchg
push
sub
mov
xor
addr16
pusha
cld
xchg
and
out
(bad)
pop
lock
lds
popa
push
lds
test
mov
jnp
je
adc
mov
cmps
cmps
mov
xchg
mov
xor
adc
test
dec
loop
pop
mov
push
jo
test
test
mov
cmp
mov
pop
cmp
add
leave
je
outs
xchg
sbb
push
xchg
mov
jl
int
jbe
pop
jmp
je
add
cs
adc
sbb
mov
dec
dec
inc
cmp
es
repz
push
out
cmp
pushf
add
sub
and
into
inc
pop
loop
outs
popf
xor
sub
div
out
and
nop
and
adc
outs
jmp
loop
mov
out
out
iret
(bad)
repz
xlat
nop
pushw
das
lods
icebp
enter
pop
dec
cli
bound
pop
pop
push
in
dec
stos
jb
sti
xor
sub
xchg
daa
jp
lods
(bad)
pop
xor
or
mov
shrd
test
ds
sbb
int3
or
dec
fsub
das
sahf
mov
xchg
popa
push
add
dec
sbb
scas
xchg
or
mov
jne
pop
xor
(bad)
lods
call
scas
out
sub
mov
bnd
add
int3
pop
pop
sbb
out
cmp
pop
outs
(bad)
or
xor
stc
and
mov
out
jmp
data16
cmc
mov
add
inc
bound
add
adc
fisubr
sbb
lds
scas
xor
fild
mov
and
dec
push
pop
inc
ins
(bad)
rol
clc
or
es
fsub
jnp
inc
dec
gs
and
mov
cmp
int3
mov
jo
sub
sti
jg
in
add
sub
das
adc
sub
inc
mov
cdq
mov
xlat
aaa
ret
mov
pop
retf
push
dec
call
repz
mov
shl
mov
pop
adc
sub
adc
ds
imul
jae
sbb
test
imul
push
mov
aaa
mov
mov
out
xchg
(bad)
dec
jbe
fwait
mov
xchg
mov
fisttp
aas
push
jae
mov
ds
add
icebp
jmp
mov
add
fcomp
pushf
fiadd
ror
add
ins
cmps
mov
adc
lds
les
cli
inc
imul
lock
bound
ins
xchg
and
bound
icebp
add
and
xlat
dec
nop
mov
out
ss
aad
jmp
jae
sbb
test
in
mov
out
mov
cmps
xchg
popa
or
xchg
and
shl
jb
test
pop
xchg
fwait
inc
out
stos
dec
pusha
mov
retf
popa
int3
cld
or
ds
add
mov
mov
cli
cmp
mov
cmp
fimul
xor
sub
les
sbb
movs
ins
jl
hlt
jp
add
xor
lods
adc
rol
retf
inc
fiadd
pop
cmp
pop
mov
fwait
(bad)
push
sti
inc
jge
push
dec
xchg
outs
pop
aaa
scas
loopne
fstp
fiadd
mov
inc
add
packuswb
gs
retf
icebp
out
and
pushf
retf
stos
push
sbb
add
adc
xchg
(bad)
clc
shl
xchg
out
retf
out
xchg
push
(bad)
(bad)
pop
xchg
xchg
sub
outs
dec
fwait
sbb
mov
push
pushf
fcomi
push
js
or
add
enter
or
xchg
int3
inc
mov
fstp
dec
scas
inc
mov
push
outs
fldenv
cmp
adc
jmp
mov
or
cmp
xchg
idiv
das
rcl
nop
test
cld
add
fbstp
jge
or
mov
add
fnsave
leave
sti
sub
retf
in
fcomp
or
cmc
push
inc
sub
fdivr
xor
(bad)
xchg
inc
dec
sbb
out
push
add
retf
outs
mov
mov
push
cwde
pop
xor
mov
js
jecxz
push
sar
clc
int
hlt
dec
test
cwde
(bad)
adc
push
(bad)
jle
xor
icebp
mov
sbb
(bad)
pop
loopne
xchg
clc
mov
inc
jp
jl
icebp
sbb
idiv
push
mov
out
jnp
and
cdq
ins
arpl
jle
xchg
in
inc
cmp
movs
jmp
dec
xchg
and
out
inc
dec
std
loope
mov
out
or
xchg
dec
scas
sbb
jg
ret
retf
adc
je
pop
pop
rcl
mov
xchg
clc
mov
mov
ret
cmp
sbb
jmp
mov
sbb
inc
sub
std
jne
fsubr
ja
push
pop
or
fwait
and
add
adc
rcr
jle
jp
cmp
mov
xchg
xchg
icebp
push
in
int3
mov
pushf
sbb
aaa
pop
int
xor
adc
out
sahf
add
lods
aad
test
inc
sbb
add
xor
test
test
or
out
pop
in
xor
test
nop
jae
jbe
push
jbe
mov
mov
inc
iret
(bad)
pop
in
pop
sbb
shr
mov
iret
adc
xor
js
mov
mov
inc
(bad)
mov
pop
lahf
in
rcl
xor
ins
mov
mov
push
or
or
inc
mov
cmc
(bad)
mov
inc
add
inc
inc
pop
test
adc
mov
cmps
push
enter
ja
mov
cdq
jg
shl
ret
inc
std
ror
pop
mov
cld
cmp
sti
arpl
lock
bound
push
cmp
mov
(bad)
mov
sub
aad
add
cli
pop
sub
add
fnstenv
int3
test
test
xor
push
test
mov
push
ret
xlat
adc
add
or
jnp
lahf
lea
dec
mov
stos
sbb
popf
mov
out
mov
call
retf
out
ss
dec
lock
in
fld
call
jg
sub
xchg
or
out
pop
push
add
and
inc
cmp
iret
mov
xor
inc
push
shr
repnz
mov
jae
mov
mov
scas
sub
ficomp
adc
dec
arpl
rol
pusha
xlat
xchg
sahf
out
adc
dec
jge
add
or
fdiv
imul
fldenv
push
jne
jmp
cmc
test
ret
cmp
aam
dec
add
sbb
mov
inc
and
ret
cli
adc
fwait
sbb
mov
and
arpl
shl
(bad)
pop
adc
movs
push
or
shl
sub
enter
fdivr
iret
push
add
push
inc
sar
outs
das
or
push
add
idiv
das
rep
or
sbb
pop
lea
mov
dec
jnp
fs
mov
cli
pop
jmp
ror
push
vrcpps
sbb
int3
mov
aas
dec
sub
push
nop
sub
call
sub
jle
cwde
push
repz
fild
rcl
ins
out
loopne
fucomi
and
fist
pusha
adc
jbe
sbb
mov
jg
xchg
sub
xchg
push
das
xchg
into
sar
and
mov
mov
dec
fwait
sbb
in
xor
(bad)
mov
sbb
cld
cmps
loop
mov
shl
leave
imul
pusha
and
sahf
jg
add
jns
les
ss
movs
les
cmc
retf
fs
movs
dec
loop
xor
jg
es
xor
rol
test
fist
mov
mov
outs
les
rcl
test
aam
sbb
enter
pop
pop
and
sbb
pop
or
pop
pop
pop
fstp
xchg
jp
inc
test
jb
iretw
in
movs
sbb
hlt
out
mov
fisttp
call
and
(bad)
dec
jmp
fild
(bad)
cmps
retf
inc
shl
ins
push
pop
mov
adc
enter
xchg
inc
ins
stos
mov
push
lods
dec
mov
mov
push
inc
push
pop
loope
mov
mov
pusha
adc
(bad)
test
repnz
push
push
push
dec
je
es
push
cmps
xor
retf
ja
repnz
retf
xchg
es
fadd
aas
out
cmp
sub
dec
gs
dec
sbb
xor
jb
movs
pop
std
retf
jae
arpl
mov
xor
ss
jmp
ret
cmp
jle
(bad)
fsub
mov
call
pop
or
mov
loop
std
mov
gs
sbb
pop
aaa
xlat
cmps
or
test
(bad)
stos
daa
(bad)
movs
ds
push
or
sub
pop
mov
mov
test
outs
and
pop
push
xor
cli
adc
mov
sbb
or
stc
inc
int3
add
push
lea
xor
data16
into
daa
sub
loope
mov
sub
adc
inc
call
xor
xor
mov
jmp
mov
mov
xchg
cmp
mov
mov
xchg
mov
or
and
daa
mov
test
jb
adc
and
sbb
stc
popf
mov
pop
xchg
sbb
pushf
ins
or
or
mov
cmp
pop
sbb
xor
ret
mov
or
std
je
into
popf
xchg
js
adc
pop
xor
xchg
push
loope
jne
xchg
push
xor
sar
mov
iret
xchg
adc
iret
cmp
and
jmp
call
mov
les
std
push
jge
(bad)
adc
mov
shr
and
inc
adc
stos
xchg
push
ret
jbe
sub
push
imul
adc
push
pop
sub
leave
xor
push
pop
retf
dec
sbb
push
pushf
imul
push
shl
in
jnp
xchg
xchg
or
fild
inc
lds
dec
cmps
aad
pop
pushf
test
push
adc
hlt
push
xchg
test
out
dec
fwait
mov
xchg
mov
xchg
ins
jmp
mov
push
push
bound
pusha
pop
sti
ret
or
movs
xchg
jg
pushf
mov
loop
stos
or
(bad)
popa
sub
push
inc
fldcw
outs
in
mov
xchg
sub
xchg
cmps
sbb
sub
jle
loopne
aas
sub
repnz
nop
mov
dec
pop
jne
fsub
mov
sub
mov
int3
and
pusha
jbe
and
test
call
push
or
imul
(bad)
adc
ficomp
repz
test
sbb
cmps
mov
adc
shl
xchg
pop
outs
icebp
dec
outs
jne
fisttp
xchg
dec
pop
or
div
inc
push
adc
and
daa
lods
xchg
popa
rcl
call
lds
neg
xlat
cmp
xlat
jo
outs
xchg
nop
pop
push
out
mov
xlat
mov
adc
push
repz
hlt
adc
cmp
pop
ffree
push
mov
out
shl
arpl
mov
(bad)
fisubr
mov
test
xlat
push
ds
enter
push
jb
push
bound
fdiv
jmp
xlat
popa
xchg
push
stos
cmp
jo
or
dec
(bad)
adc
dec
sub
(bad)
or
xchg
or
sub
sub
pushf
adc
mov
aas
repnz
popa
push
imul
or
mov
adc
push
fidivr
xchg
sub
push
pop
cmps
cmps
inc
and
sbb
xlat
mov
xor
xor
or
stc
push
loop
shl
xchg
or
stos
inc
lahf
sub
or
adc
aaa
push
dec
lds
shr
push
test
imul
jnp
add
rcl
fwait
cld
mov
pop
movs
popf
cmp
xor
enter
jmp
int
iret
stc
dec
push
jnp
mov
cmp
bound
cwde
add
jge
test
mov
jb
sub
(bad)
scas
sti
call
cmps
mov
pop
rol
push
(bad)
lock
leave
call
jmp
in
fiadd
pop
(bad)
mov
ins
lods
xlat
adc
repnz
cmp
mov
jae
xor
mov
cmp
pop
pushf
int3
lods
and
mov
(bad)
retf
mov
arpl
xor
cwde
repnz
lea
ja
add
enter
retf
les
hlt
and
jns
imul
xor
mov
mov
adc
stos
fwait
or
or
xchg
inc
jbe
pop
scas
cmp
cld
xor
movs
aam
ins
clc
ins
jmp
xchg
inc
ror
or
imul
pop
push
jmp
pop
sbb
xor
fwait
mov
idiv
pop
mov
nop
sub
or
rcl
icebp
xchg
push
mov
sbb
sub
inc
(bad)
pop
push
mov
lods
xchg
test
xor
cmps
daa
or
sbb
sbb
pusha
add
and
push
ss
aas
mov
push
adc
ins
push
jmp
inc
mov
loop
mov
mov
lds
cmp
mov
cmps
loope
push
inc
loop
xchg
fsubr
pop
aas
aas
es
out
push
sub
movs
stos
xchg
cmp
in
call
imul
rcl
js
(bad)
jmp
push
pop
add
nop
shl
jo
in
xchg
sbb
pop
rol
and
cld
data16
xor
push
fistp
iret
jmp
data16
and
pop
pop
jle
std
mov
call
loop
mov
mov
mov
sar
pop
or
or
dec
sbb
mov
pushf
or
mov
call
and
ins
lock
inc
mov
ins
or
mov
or
jmp
cmp
mov
fimul
not
clc
xor
jle
sbb
inc
cmps
push
pop
cmp
mov
mov
retf
hlt
pop
gs
push
sub
test
shl
in
cmp
xlat
call
xchg
jno
xor
in
addr16
lods
xor
bound
test
and
(bad)
cmps
stc
addr16
mov
in
xchg
cmp
push
pusha
push
outs
das
xor
jae
mov
mov
test
nop
loope
daa
popf
and
inc
mov
int
push
mov
sbb
mov
push
cmps
push
dec
test
aam
xor
sub
ins
sbb
and
shl
jae
popa
int3
(bad)
mov
xchg
mov
add
and
pop
cmps
leave
int3
aad
out
ins
int3
inc
mov
retf
dec
dec
mov
fs
aad
ss
adc
imul
int3
jnp
dec
mov
or
xchg
sbb
mov
mov
clc
or
xor
jp
icebp
mov
dec
dec
sub
xchg
xlat
adc
mov
jge
out
pop
mov
out
stc
sbb
and
sub
(bad)
repnz
dec
adc
jno
js
jp
xor
mov
xor
repnz
and
fs
xchg
mov
mov
xchg
leave
ror
data16
xor
mov
dec
fdiv
sub
retf
test
aad
bound
xchg
iret
sbb
loop
push
aaa
fs
mov
loop
or
fimul
inc
ins
icebp
int
out
add
(bad)
mov
arpl
adc
movs
push
std
and
mov
aad
(bad)
jp
aad
test
pop
fst
popa
adc
lahf
push
xchg
cmps
mov
adc
fisttp
pop
data16
std
fld
inc
pop
daa
jns
nop
fimul
jne
out
ret
int
jmp
stos
adc
xchg
inc
xchg
pusha
stos
into
sbb
movs
jp
jne
lock
inc
xchg
jl
movs
(bad)
in
sbb
cmp
fmul
pop
mov
shl
aaa
add
lock
pop
sub
push
push
dec
sub
fwait
cwde
dec
adc
xor
adc
jle
cld
test
pushf
cmps
lahf
mov
std
in
pop
icebp
push
pop
call
push
aam
and
int3
or
ds
pop
in
dec
sbb
test
sub
add
addr16
ins
xor
push
mov
cmp
or
std
sub
fbld
repz
sub
fnstcw
xor
adc
test
adc
mov
mov
or
mov
test
(bad)
mov
in
ja
cmp
mov
cdq
mov
pop
scas
push
retf
ret
ins
call
pop
mov
in
or
inc
add
jb
xchg
cmp
mov
fidivr
dec
mov
and
popa
cmc
(bad)
push
retf
or
and
mov
lea
and
sbb
mov
hlt
push
scas
fs
fdivr
cwde
push
or
sbb
lods
sub
adc
ficomp
push
mov
les
push
jmp
xchg
int
dec
or
test
inc
pop
xor
je
mov
mov
outs
lock
ret
mov
push
pop
(bad)
cmp
or
mov
rcl
mov
ss
les
pop
in
mov
cwde
mov
add
fst
pop
push
xor
adc
xchg
jp
ss
aad
jae
idiv
adc
(bad)
cmp
and
leave
dec
mov
cld
shr
(bad)
popf
fistp
lea
ret
jo
add
sbb
add
jns
xchg
sub
mov
lods
mov
push
test
mov
push
adc
fld
fs
push
mov
push
xchg
sti
and
into
or
in
sbb
adc
pop
sbb
or
mov
(bad)
push
(bad)
fnstenv
cmps
sti
add
mov
fdivr
push
xchg
call
call
sub
xchg
push
adc
test
cmp
pop
neg
(bad)
neg
pop
cmp
cld
cmova
icebp
sbb
jae
retf
pusha
inc
push
or
jecxz
cmps
int
push
or
sub
fsubr
and
dec
pop
bound
(bad)
dec
mov
enter
cmp
in
sub
and
and
xor
jle
jo
pop
imul
sti
sbb
and
aas
pop
mov
push
mov
inc
or
cmps
push
popf
nop
sub
mov
cmps
and
add
stc
test
pushf
aaa
dec
sbb
add
push
mov
inc
add
call
mov
mov
loope
xchg
mov
mov
inc
cld
cmp
(bad)
lock
mov
adc
mov
and
mov
jae
mov
and
ja
cli
dec
into
fs
int
icebp
test
jnp
stos
je
pop
leave
(bad)
mov
imul
test
jmp
jnp
and
fidivr
(bad)
js
lods
int
pop
pop
xchg
cli
xchg
pmulhw
mov
xchg
mov
mov
cs
jge
adc
xor
push
cli
adc
inc
mov
pop
xchg
cdq
cld
xor
sub
test
movs
and
inc
retf
push
retf
ja
jg
jecxz
jecxz
inc
dec
adc
mov
mov
sar
in
fld
sub
and
jb
std
sub
cmps
mov
cwde
xchg
mov
push
dec
call
sub
pusha
movs
push
cmps
test
sahf
fild
popf
xchg
mov
xlat
push
or
xor
mov
outs
add
mov
mov
add
sbb
call
jmp
shr
sub
enter
mov
(bad)
hlt
iret
jns
add
add
repz
(bad)
sbb
retf
in
scas
or
sbb
cmps
std
repz
xor
test
cmps
mov
movs
adc
xchg
cli
sub
push
test
xor
shr
push
sub
pop
fnstcw
rcl
cmp
movs
rcl
jae
push
enter
fs
sbb
pushf
jge
stos
fs
inc
mov
push
jb
mov
mov
sub
ds
jo
js
daa
jge
(bad)
adc
lock
adc
cli
(bad)
cmp
mov
addr16
int
cmc
loop
retf
das
out
mov
ficomp
aaa
bound
mov
inc
(bad)
loopne
imul
mov
test
aas
dec
inc
jle
sbb
dec
adc
les
xor
add
fldl2t
lea
pop
sbb
mov
jmp
shr
fcomip
mov
call
mov
out
jnp
sub
outs
jg
sbb
dec
sbb
mov
mov
mov
adc
rcr
cmp
pop
jg
mov
(bad)
out
lds
jg
mov
mov
inc
sub
push
push
push
nop
jo
les
stc
mov
xchg
test
in
and
sbb
cmp
sbb
outs
jg
push
out
movs
add
ss
jo
pop
push
(bad)
fsubr
mov
aam
push
xor
es
neg
xor
(bad)
dec
ss
cmp
shl
test
or
(bad)
and
sub
mov
rcl
or
je
sub
push
inc
fsubr
mov
inc
cmc
add
mov
hlt
repnz
cld
jmp
stos
and
dec
hlt
iret
adc
in
repnz
dec
pop
data16
or
call
icebp
pop
push
mov
mov
mov
inc
adc
in
sub
ret
mov
mov
xor
inc
pushf
popa
stos
fild
pop
xor
(bad)
cli
xchg
enter
jl
add
iret
gs
ins
repz
xchg
mov
push
gs
cli
mov
std
push
mov
xchg
sub
xchg
lds
mov
dec
mov
fild
repz
not
ret
add
jb
sbb
jecxz
dec
in
out
jnp
jmp
pop
iret
(bad)
mov
add
mov
outs
enter
adc
jno
inc
jns
arpl
pushf
bound
pushf
adc
mov
mov
arpl
mov
xchg
aaa
xor
cwde
xchg
stos
mov
out
loop
fbstp
hlt
mov
(bad)
mov
jno
cmps
shl
jb
adc
xchg
jae
pop
popf
sar
stos
out
aaa
lods
xchg
add
mov
retf
mov
xor
ds
inc
mov
dec
sub
push
mov
sbb
stos
(bad)
mov
in
(bad)
out
pop
shl
sub
outs
pop
shr
add
add
clc
inc
jle
nop
mov
scas
les
stos
in
test
stc
lahf
mov
pop
add
scas
mov
dec
xor
cli
loopne
mov
les
fdiv
sti
and
out
or
mov
push
js
fwait
mov
lds
adc
adc
aad
inc
mov
sub
retf
outs
popf
add
add
mov
pop
mov
ja
xlat
xlat
out
inc
and
xchg
das
aad
adc
in
fcmovne
pop
jmp
jmp
push
call
cmp
lods
mov
push
jp
push
int3
(bad)
pop
sar
fiadd
push
dec
xchg
adc
jae
ss
inc
adc
rcr
scas
add
jnp
mov
xchg
jo
addr16
sahf
movs
cld
cmps
int
cmp
jmp
shl
dec
sar
dec
mov
pop
or
scas
mov
lock
idiv
and
mov
push
bound
outs
pushf
sbb
push
xchg
add
push
inc
and
cli
xchg
add
fwait
(bad)
sub
int
inc
in
cmp
sbb
push
ret
ins
mov
cmps
push
neg
(bad)
adc
ins
push
dec
adc
sbb
mov
je
lods
mov
and
lock
lea
mov
cld
cli
and
pop
scas
jecxz
pop
fistp
cmp
sahf
sar
aaa
push
mov
sbb
push
mov
shl
push
add
dec
and
push
and
jp
movs
aam
lock
xor
mov
fwait
pop
js
sub
cmp
add
mov
xor
icebp
and
mov
jl
sub
cmp
sub
dec
out
sub
loopne
lock
jge
inc
sbb
mov
je
cdq
adc
stos
loopne
mov
mul
push
pop
add
(bad)
xor
xor
adc
and
mov
xchg
adc
nop
repnz
call
jb
jle
or
xor
out
jmp
clc
daa
scas
inc
cmps
or
ret
pushf
(bad)
xor
cdq
add
push
bnd
retf
mov
and
int
jle
stos
mov
xor
in
std
mov
addr16
sub
das
push
rcl
mov
(bad)
pop
mov
int
imul
xchg
cmp
xor
push
and
ins
gs
or
sbb
xchg
movs
add
mov
icebp
add
xor
push
push
add
sti
ret
push
and
jle
mov
xor
retf
sbb
mov
(bad)
jp
mov
retf
aad
imul
or
enter
int
repnz
and
ror
pop
mov
test
test
fmul
push
popf
mov
mov
xlat
pop
cmp
pop
or
push
xor
frstor
std
cmp
pop
test
inc
jecxz
mov
sbb
sub
sub
test
dec
adc
cmp
jb
xlat
outs
jmp
daa
pop
std
jecxz
nop
and
cs
lock
pop
jno
mov
pop
mov
add
mov
arpl
adc
fs
loop
sbb
lods
mov
dec
dec
rcl
cs
inc
lods
jle
jns
xchg
xchg
lock
movs
xchg
je
ja
mov
and
les
mov
jne
push
fdivr
sub
fcmovbe
fstp
xchg
loope
push
adc
test
lods
mov
pushf
sbb
out
adc
sub
mov
stos
stc
cmps
fsub
jecxz
push
dec
out
cmp
mov
or
mov
pop
stos
mul
call
push
cmp
(bad)
es
ss
pusha
mov
adc
clc
ret
sqrtps
jmp
pop
loop
lods
loopne
stc
sbb
and
inc
xchg
mov
and
js
fst
arpl
adc
pop
aaa
pop
mov
mov
retf
push
push
cmps
lods
aas
call
add
add
pop
nop
dec
nop
ins
push
cmp
mov
jno
cld
pop
aas
lods
pop
cs
xchg
popf
stos
add
xchg
out
xchg
pop
aas
cmp
pop
cs
xor
cmc
jno
lods
cmp
inc
mov
sbb
push
push
test
out
test
and
scas
movntps
inc
cmc
or
and
lea
add
sti
cmp
cs
movs
mov
dec
movs
jne
dec
fnstenv
out
dec
cmps
rcl
lods
mov
xchg
div
mov
xor
mov
call
lods
jmp
imul
popa
mov
adc
fcom
xor
and
sub
loop
repnz
pop
push
fist
aad
mov
xor
adc
push
stos
sbb
loopne
not
xchg
clc
mov
xor
mov
cmp
repnz
pop
push
mov
jae
lods
stc
repnz
inc
push
inc
or
mov
mov
jmp
(bad)
sub
cmp
test
clc
mov
aaa
add
sub
mov
sbb
push
xchg
cwde
test
sbb
mov
cmp
mov
dec
mov
in
in
pop
pop
add
movs
xor
sub
xor
and
in
dec
mov
in
and
imul
sub
sbb
sub
into
xchg
mov
inc
add
adc
popf
ss
aam
fstp
out
sub
mov
inc
cdq
jo
fnsave
jnp
inc
mov
xor
stos
or
jecxz
and
push
cmp
icebp
push
jl
xor
push
mov
or
jne
(bad)
cmp
loope
push
inc
mov
loop
repnz
(bad)
adc
cmp
add
fimul
pop
or
fidivr
sbb
stc
mov
stc
pushf
sbb
cmp
and
adc
add
xor
ins
push
jno
sbb
sub
adc
mov
add
or
iret
repnz
pop
repnz
in
bound
cmps
and
inc
inc
hlt
jl
movs
jl
adc
fidiv
bswap
pop
jne
and
repnz
pop
xor
gs
rcr
mov
xor
jmp
cli
(bad)
xchg
(bad)
out
or
inc
stos
cmp
stc
out
push
xor
aas
je
arpl
mov
shl
cli
call
shl
cld
or
xchg
push
add
ret
jp
pop
pop
jb
inc
cmp
or
sub
push
pop
shr
ins
jb
mov
cmp
cmc
jbe
cli
mov
mov
inc
dec
inc
push
fwait
cs
fwait
vpmacswd
mov
out
lds
push
call
push
xor
stos
js
pop
inc
lea
jle
(bad)
ret
loop
pop
in
dec
ja
mov
sbb
adc
jns
rcl
xchg
adc
and
xchg
xor
mov
inc
xor
jno
lods
push
(bad)
mov
xor
sbb
retf
xor
xchg
sbb
das
add
xchg
xchg
mov
iret
or
mov
pop
cld
jbe
ins
ret
xchg
mov
dec
outs
ja
mov
test
push
inc
dec
cmp
scas
cdq
jp
push
je
push
stc
adc
dec
pop
aas
mov
adc
(bad)
bnd
xchg
(bad)
jae
aad
inc
add
jno
aam
cmp
dec
push
mov
pusha
ret
fild
mov
sub
jbe
(bad)
je
inc
fcomp
ds
mov
in
out
xor
and
enter
nop
add
and
ror
xchg
cdq
lea
adc
iret
outs
jle
cwde
bound
mov
or
cmp
cli
mov
ins
adc
sub
pushf
push
sbb
pop
push
pop
ret
pop
pop
and
lahf
out
ret
jbe
add
leave
adc
push
sub
inc
fimul
pop
push
ret
pop
ins
out
pop
(bad)
cmps
pop
jno
shl
aad
jmp
adc
jecxz
xchg
cmp
(bad)
jns
std
mov
stc
cmovne
push
leave
mov
ja
into
mov
jge
mov
inc
xor
inc
shr
dec
outs
pop
adc
dec
jns
inc
scas
inc
gs
cmc
sub
push
outs
cdq
pop
stos
cli
mov
add
stos
and
or
stos
or
or
shr
sub
or
call
mov
aaa
pusha
add
fdivr
cmps
push
xchg
sahf
adc
jb
(bad)
std
stos
xor
add
cmps
nop
or
push
adc
sbb
retf
push
das
lds
fcomp
(bad)
retf
sub
int3
ja
and
sub
pusha
jmp
xor
cmp
push
mov
stos
push
mov
push
(bad)
scas
pop
stos
jb
das
popf
(bad)
jmp
pop
int
or
jmp
rcr
xchg
fdiv
fwait
mov
and
xchg
mov
(bad)
ins
lahf
dec
jae
mov
xor
dec
pop
pop
pop
aam
shr
imul
rcr
fwait
sbb
sub
sub
mov
inc
jae
sahf
ret
lock
mov
sub
add
iret
test
or
adc
mov
push
pop
mov
(bad)
rcl
sub
leave
gs
arpl
adc
pop
mov
gs
add
mov
cmc
sti
and
adc
imul
xchg
mov
push
call
loope
pop
add
xor
push
test
dec
mov
int
xor
pop
mov
adc
int3
out
stos
inc
scas
enter
stos
mov
mov
ror
scas
inc
aas
lods
fild
iret
bound
push
repz
fiadd
xchg
push
pushf
push
adc
jno
mov
outs
dec
mov
sbb
sbb
popf
mov
adc
mov
lahf
cli
adc
sub
cld
jbe
fdivr
fst
lds
xchg
mov
daa
repnz
in
out
cmps
out
sar
mov
es
sbb
cmps
pop
dec
add
test
ficomp
or
xchg
(bad)
adc
jle
stc
mov
retf
je
sub
mov
(bad)
mov
lods
mov
dec
jmp
inc
imul
mov
in
xchg
add
sbb
xchg
adc
daa
mov
cmp
xlat
mov
or
shl
inc
sub
push
push
and
jl
not
mov
push
rcl
lods
ficomp
je
stos
pop
out
jl
bound
outs
xchg
dec
cli
ins
mov
xchg
(bad)
paddq
(bad)
sahf
popf
lahf
and
loope
outs
out
in
pop
sbb
cmps
aaa
and
add
cli
cmp
cmps
fwait
in
sbb
sar
jle
mov
addr16
mov
sbb
leave
adc
xchg
and
rcr
popa
sahf
adc
xor
dec
fisttp
xchg
scas
test
adc
js
sub
push
mov
cmps
in
out
fidiv
pop
repz
add
cdq
arpl
inc
inc
mov
pop
cmc
push
scas
jns
sub
in
pop
xchg
sub
mov
mov
xchg
jno
int
push
popa
xchg
popf
mov
mov
pop
into
(bad)
xor
pop
shr
fisttp
mov
or
arpl
pop
das
clc
mov
movs
mov
inc
jmp
ins
bound
pop
cmps
lds
adc
or
(bad)
dec
in
dec
test
int3
add
xchg
into
(bad)
lock
mov
add
mov
push
mov
lods
inc
add
mov
xor
and
addr16
pop
sub
and
loop
das
stos
and
push
push
aad
mov
xlat
xor
fdivr
push
addr16
mov
push
cmp
mov
jns
mov
pop
imul
sar
xor
test
inc
(bad)
cs
pop
sbb
push
jle
rcr
outs
leave
je
in
test
div
out
mov
cmc
jmp
add
mov
rcr
scas
mov
bound
mov
or
mov
ss
dec
adc
or
add
fcmovu
mov
xchg
push
lods
fs
jg
cmp
push
in
cmp
push
mov
add
outs
ins
xor
mov
sbb
xor
es
push
outs
fiadd
xchg
je
pop
pop
fnstenv
cmp
dec
inc
xchg
test
bound
xchg
call
ds
mov
lock
dec
jp
mov
shl
adc
xor
pop
test
in
mov
loope
pop
jl
pop
sub
inc
mov
mov
in
xor
push
aaa
bound
xor
retf
mov
cmp
sub
scas
and
ds
jne
pop
retf
aam
mov
xor
mov
xchg
movs
lock
scas
mov
and
mov
cwde
xor
mov
mov
push
xchg
push
xor
ins
xchg
call
pop
ins
cmovge
sub
inc
call
dec
jle
and
pop
xor
xor
dec
mov
scas
inc
aad
addr16
sbb
test
jnp
clc
jmp
sbb
imul
fwait
stos
aam
pushf
sub
popa
xor
dec
mov
mov
popf
cmp
inc
scas
and
dec
cmp
(bad)
push
bnd
stc
loop
mov
outs
cdq
mov
pop
cmp
xchg
mov
mov
aam
push
pusha
call
in
imul
pop
jae
push
shr
dec
adc
inc
movs
and
cmp
cmp
ret
jle
fsub
push
jae
cmps
out
sub
lods
add
(bad)
push
movs
pop
mov
inc
sbb
dec
pop
mov
xor
adc
icebp
xchg
mov
(bad)
jmp
das
call
mov
inc
stc
xor
mov
stos
sbb
pop
add
pop
fs
arpl
add
mov
cdq
inc
js
sub
inc
adc
pop
fdivr
je
inc
outs
inc
fsub
stc
(bad)
cmp
scas
xchg
jns
xlat
fiadd
or
xor
mov
jno
shr
retf
rcl
aad
dec
loope
test
mov
push
jbe
adc
in
push
nop
ins
inc
mov
pop
stos
jmp
sbb
jmp
call
into
pushf
popf
or
cmc
mov
sahf
dec
rcl
in
xor
stos
ret
shl
jnp
xor
push
inc
mov
and
pop
retf
repz
ud0
shl
jmp
adc
imul
jmp
popa
ret
pop
and
mov
and
aam
arpl
leave
dec
outs
dec
out
mov
inc
dec
(bad)
adc
ret
ins
jnp
in
adc
dec
in
inc
loopne
sub
mov
inc
retf
pop
ins
stos
leave
mov
adc
(bad)
cmp
push
jge
push
inc
add
dec
xor
pop
sub
adc
lock
xor
int3
pop
pop
arpl
adc
adc
out
pop
int
jg
inc
pop
pop
xchg
push
aad
dec
mov
sti
les
jge
sub
sub
popa
mov
add
es
dec
inc
sbb
sbb
repz
add
xchg
rol
cmp
mov
push
mov
add
repz
xchg
mov
mov
mov
xchg
cs
cmc
daa
mov
mov
mov
jne
(bad)
movs
or
mov
dec
xor
fcomp
adc
out
cld
and
mov
shr
xor
mov
adc
add
mov
pop
pop
int
jo
and
fsub
fucom
sub
out
cmc
je
add
sbb
clc
call
fucomip
xchg
push
imul
cmp
pop
mov
jno
dec
push
cwde
xor
mov
sub
mov
test
clc
push
int
mov
sar
mov
fdivr
adc
in
stos
frstor
xchg
mov
loopne
and
ins
push
loope
call
and
outs
mov
xlat
repz
pushf
mov
(bad)
xlat
xchg
sbb
cli
mov
ins
adc
ret
mov
mov
push
bnd
mov
out
ret
pushf
xchg
xchg
jo
cmp
inc
jge
(bad)
movs
mov
xchg
cmp
mov
jnp
add
sti
cmp
adc
push
jno
scas
movs
shl
popf
xchg
or
lahf
jg
adc
and
jbe
mov
or
cmps
mov
or
fisttp
call
fneni(8087
(bad)
xor
movs
add
or
jmp
(bad)
jno
iret
rcr
sub
sbb
adc
test
cmovnp
fwait
sub
or
mov
cmp
movs
xor
ins
enter
sbb
lahf
add
jp
push
mov
test
loop
push
xchg
mov
ficom
lea
sbb
push
(bad)
ja
inc
mov
jbe
jns
scas
sbb
xchg
call
out
out
stos
retf
adc
inc
je
paddusw
mov
mov
and
addr16
pop
inc
cmp
xor
pop
ffree
stos
push
fs
(bad)
in
cmp
in
pop
add
stc
stos
adc
imul
inc
(bad)
out
cmp
jge
pop
add
cmp
lods
inc
lods
(bad)
fisubr
cs
sub
adc
(bad)
into
imul
outs
pop
mov
and
cmp
mov
xor
sbb
xchg
neg
mov
push
jne
fisttp
imul
stc
pop
jmp
js
cmp
aad
in
pop
pop
and
jmp
pop
inc
push
and
(bad)
ss
pop
cmp
pop
push
arpl
lods
push
in
xor
sahf
jge
lock
add
dec
xor
frstor
push
and
pushf
inc
arpl
lods
push
test
push
outs
lahf
(bad)
int3
push
repnz
sbb
(bad)
push
outs
arpl
jae
inc
ins
mov
push
pop
add
cs
push
pop
jno
cs
popa
scas
std
ror
dec
call
outs
pop
mov
xchg
call
(bad)
fisub
sub
sbb
lods
in
jns
xchg
lods
jae
js
sti
cld
ins
sbb
push
popa
xlat
ror
pusha
cmp
movs
xor
pop
or
push
dec
jge
or
mov
xchg
dec
mov
cli
addr16
in
dec
arpl
mov
pusha
cli
mov
add
push
test
xchg
mov
sbb
xchg
stc
jnp
sbb
push
les
or
jo
popa
in
(bad)
cmp
and
int
cmp
or
and
cmps
pop
es
or
cdq
mov
or
sub
cmp
stc
ds
lahf
mov
aam
lods
inc
repz
cs
test
(bad)
icebp
xchg
push
sub
push
aaa
loope
sub
shl
ret
(bad)
es
adc
sub
mov
inc
cmp
(bad)
inc
and
xchg
cli
test
rcr
mov
add
fcomp
data16
fnsave
pop
pop
aaa
out
mov
pop
cmp
push
push
xchg
push
fstp
push
inc
ret
retf
sahf
sub
dec
mov
jo
mov
int3
cwde
pop
outs
(bad)
mov
xor
pop
fnstsw
clc
loope
xchg
sub
in
xor
imul
xchg
inc
jp
fsubr
(bad)
jmp
inc
scas
cmp
jp
xor
mov
adc
mov
dec
sahf
es
xor
sub
add
pop
test
fdivp
outs
scas
jb
pop
mov
sub
or
aam
or
cmp
mov
jmp
sahf
push
test
in
jns
push
jg
jge
lds
push
xor
add
mov
rcl
test
dec
lock
sub
dec
mov
inc
xor
stos
or
imul
pop
and
movs
clc
pop
cdq
outs
xchg
(bad)
hlt
dec
mov
pop
mov
pushf
push
xchg
scas
imul
outs
das
inc
rol
dec
jg
repz
sar
imul
jne
fisubr
sbb
ror
push
cmp
lods
inc
mov
jg
(bad)
nop
jno
sbb
push
pop
outs
adc
icebp
adc
sub
fbstp
mov
sub
jno
movs
mov
fdiv
sti
scas
sub
pop
or
not
cmps
sbb
mov
mov
pop
dec
leave
or
fldcw
xor
push
cmp
test
lea
cs
dec
fsubr
push
loop
cdq
sub
mov
(bad)
mov
jae
retf
daa
jb
out
fsubp
adc
in
inc
rol
and
enter
fwait
int
movs
movs
xor
call
scas
xlat
inc
jne
in
lods
xchg
xchg
pop
cmp
rcl
jl
jnp
or
xchg
out
out
call
fnstcw
cmp
pop
cmps
aaa
jmp
push
xchg
into
sti
jmp
jecxz
xor
jmp
pushfw
call
mov
dec
int3
xor
adc
or
pop
mov
and
mov
movs
jle
mov
pop
inc
pop
jle
mov
std
cmps
push
mov
sbb
cmps
cwde
push
adc
(bad)
dec
sub
jbe
lahf
cmp
push
imul
cmp
out
sub
cmc
jbe
aaa
(bad)
jle
shl
xchg
pop
and
cmp
mov
int3
(bad)
aaa
pop
and
push
stos
add
mov
xor
imul
test
xchg
fsubr
cld
out
add
ffree
in
cmp
data16
fmul
std
movs
push
push
in
adc
lea
int
push
fadd
movs
and
js
nop
xor
and
xchg
inc
shr
pop
hlt
jmp
jp
dec
adc
daa
dec
mov
add
or
pop
(bad)
lahf
ds
xchg
out
test
popf
xor
push
pop
int3
push
pushf
test
fld
loopne
or
sar
(bad)
ins
jmp
outs
into
loopne
inc
and
mov
xchg
into
out
movs
inc
pop
lea
enter
pusha
cld
cdq
push
stos
mov
pop
std
dec
push
and
mov
pop
repz
mov
push
cli
retf
fnsave
push
sub
mov
adc
je
or
fwait
mov
ss
mov
push
(bad)
pop
movs
jmpw
or
psubsb
aam
xchg
inc
leave
xchg
(bad)
stos
call
push
xchg
stos
cmp
mov
test
les
(bad)
xor
sbb
scas
jnp
xor
adc
(bad)
pop
mov
sub
jnp
push
dec
shl
and
fiadd
or
mov
jmp
cmp
xchg
add
cs
sub
xor
call
jns
and
shl
jmp
imul
jnp
sbb
mov
pop
xchg
loope
and
std
pop
pop
push
dec
mov
inc
int3
mov
xchg
jnp
aad
pop
ja
mov
push
loopne
mov
pop
adc
test
xchg
or
sbb
and
retf
mov
cdq
push
test
(bad)
fbld
pop
loop
add
mov
jmp
dec
inc
in
jg
cmps
jae
mov
hlt
mov
add
call
sahf
pushf
mov
cmp
xchg
popa
and
push
rcr
sti
ins
das
cmp
inc
mov
cs
xor
fmul
or
cmp
cmp
jo
xchg
fcmovnbe
std
xor
cmp
adc
(bad)
mov
jne
js
xlat
fimul
jmp
fwait
dec
cmp
pop
aad
sub
mov
icebp
jnp
or
in
adc
(bad)
retf
int
jbe
retf
addr16
jmp
push
test
xchg
cmp
xor
inc
add
dec
mov
nop
cli
sub
je
jmp
add
lock
and
add
sbb
sbb
push
leave
inc
mov
mov
xchg
in
retf
push
fcomi
(bad)
add
shr
(bad)
lds
push
(bad)
icebp
dec
mov
mov
sbb
mov
mov
mov
sar
hlt
mov
cmp
jl
push
xchg
or
gs
mov
mov
or
gs
inc
sbb
jp
add
push
popa
sbb
cmps
loope
lods
icebp
mov
in
int
and
lock
cwde
xchg
sub
mov
loop
(bad)
cmp
je
in
imul
dec
hlt
or
mov
cli
adc
dec
jnp
fidivr
mov
pop
pop
(bad)
and
adc
fdivr
icebp
xchg
call
pop
adc
mov
adc
arpl
fsub
cmps
add
lods
les
dec
cmp
mov
imul
or
jbe
xor
movs
icebp
repnz
inc
mov
mov
ja
cmp
test
outs
sub
nop
rcl
jge
aaa
push
(bad)
mov
inc
test
or
pop
jae
jno
xchg
lods
xchg
out
scas
adc
leave
outs
clc
(bad)
mov
div
jb
pushf
movs
sub
jg
adc
fild
repz
cmps
dec
inc
mov
dec
xchg
push
pop
out
sub
loope
sub
dec
xchg
(bad)
rcr
retf
out
ror
inc
loope
in
adc
sbb
mov
daa
cwde
push
idiv
mov
retf
jle
sbb
pop
xor
aam
mul
sub
ror
sub
cmps
hlt
sub
xchg
in
sahf
scas
loope
and
ja
pop
add
cmp
leave
pop
inc
pop
mov
movs
clc
lds
repnz
push
add
mov
hlt
jmp
hlt
fwait
push
xchg
xchg
mov
(bad)
pusha
push
jno
test
rol
mov
push
mov
fdivr
cmp
push
fs
push
movs
jecxz
addr16
mov
xlat
sub
ror
xchg
int
loope
dec
fnstenv
arpl
scas
stos
pop
rcr
or
or
push
mov
inc
or
cmp
add
push
fimul
inc
cs
js
inc
xchg
cmp
jns
mov
test
fbstp
enter
in
aam
xor
push
pop
js
outs
adc
es
imul
push
out
push
pusha
popa
pop
add
mov
call
adc
mov
jno
and
sti
jge
jae
data16
xchg
push
xlat
fistp
icebp
fld
(bad)
mov
bound
cmp
(bad)
pop
leave
jno
(bad)
push
mov
aad
leave
cs
fwait
cmp
pop
fs
pop
dec
add
push
into
outs
loopne
xchg
cmps
xor
jl
mov
push
dec
jo
xchg
leave
lahf
xchg
pop
cmps
mov
fs
scas
cmps
fs
xor
test
and
jae
loopne
icebp
aaa
pop
pop
dec
mov
push
xchg
push
sub
inc
shl
fiadd
fsub
dec
add
lea
mov
enter
sbb
pop
movs
lahf
mov
aaa
mov
jge
aas
dec
ins
std
xchg
push
cdq
jle
pop
aad
inc
pop
fwait
(bad)
pop
jns
loopne
lods
daa
mov
xchg
je
inc
pusha
arpl
cmps
fisub
dec
cmps
(bad)
stc
dec
push
ret
xor
test
push
mov
and
push
or
mov
cmc
es
stos
push
movs
retf
add
dec
les
xchg
mov
cmp
imul
(bad)
aam
mov
adc
scas
int
aaa
push
cmp
sbb
rcl
mov
(bad)
mov
xchg
mov
jo
jae
ja
cmps
rcl
int3
out
mov
inc
dec
test
mov
sbb
inc
mov
push
add
imul
jno
push
mov
imul
mov
mov
or
(bad)
sub
pop
push
ja
push
jp
ds
or
sbb
inc
xchg
fst
mov
fcom
mov
push
cmp
jge
cmp
or
pop
or
imul
dec
add
lods
xchg
in
std
lods
imul
test
shl
ja
scas
xchg
mov
and
and
sbb
lahf
or
test
ins
cmp
clc
test
push
mov
shl
rol
add
pop
xor
sbb
pop
in
call
stos
sti
mov
test
loope
mov
pop
cmc
or
cld
sub
mov
xchg
leave
nop
and
inc
xor
mov
inc
(bad)
fldcw
(bad)
loopne
cli
dec
and
cmp
cmp
aad
cmp
inc
ss
inc
ins
aam
adc
loope
es
add
gs
ds
lds
dec
lock
push
pusha
dec
test
scas
lahf
shl
mov
dec
es
(bad)
sub
das
mov
fisttp
in
pop
xor
repz
xchg
cmp
add
mov
mov
push
imul
sub
sbb
mov
arpl
jb
xor
and
push
das
mov
aam
cmp
(bad)
sbb
mov
inc
into
dec
popf
pop
push
test
pop
sub
and
out
(bad)
imul
cwde
dec
into
out
leave
adc
mov
xchg
das
pop
pop
mov
mov
arpl
sbb
jl
shl
inc
adc
leave
js
dec
xor
ja
xchg
data16
dec
icebp
pop
push
arpl
aas
cwde
cld
rcr
ja
loopne
and
mov
xor
outs
jns
loopne
jg
daa
xchg
jnp
lahf
jl
ret
mov
push
add
cld
in
mov
scas
(bad)
xor
xchg
popa
ds
cmp
push
loope
pop
ret
outs
daa
mov
inc
jg
not
push
ss
shl
int3
cld
mov
lock
mov
jb
inc
cmps
dec
pop
mov
mov
push
dec
cwde
ins
push
jno
retf
cdq
rcr
lock
movs
dec
add
dec
mov
pop
cmp
mov
popa
das
cmp
inc
leave
add
pop
in
dec
pop
jne
xchg
xchg
dec
addr16
fld
test
pxor
movs
cdq
iret
iret
adc
xor
adc
mov
je
clc
dec
emms
jl
bound
xchg
xor
xor
xchg
outs
popa
cwde
xchg
jnp
adc
and
and
mov
inc
pop
inc
cmp
aad
not
les
in
cmc
ins
mov
mov
dec
pop
push
cmp
(bad)
push
dec
dec
jne
call
lds
mov
cmp
pop
xchg
call
lods
push
mov
xchg
sbb
xchg
shr
adc
je
sbb
cmp
mov
adc
xchg
jns
add
mov
push
mov
sub
dec
mov
in
imul
cmps
xchg
leave
lods
inc
jl
mov
lds
shl
lahf
jmp
inc
push
push
icebp
scas
loopne
mov
ins
jecxz
mov
or
(bad)
jnp
ins
jg
jmp
mov
(bad)
pop
fcmovb
cmp
jp
aas
fmul
cmp
dec
pop
adc
mov
dec
test
pusha
ja
jae
cmc
rcr
bsr
mov
and
les
jl
movs
sub
dec
ss
jge
mov
scas
push
cmp
lahf
ror
(bad)
mov
jae
mov
mov
inc
jp
popa
cmp
ret
xchg
nop
repnz
lea
gs
pop
lock
fmul
scas
adc
cs
inc
stos
xor
fsubr
mov
jo
cmps
in
nop
imul
movs
sbb
test
ins
dec
push
loop
or
adc
cmps
lods
inc
ds
enter
(bad)
mov
call
jge
in
inc
xor
mul
cmps
out
int
test
inc
jle
pop
sbb
push
cmp
xchg
aam
into
mov
sub
add
xchg
les
mov
out
mov
fst
clc
xchg
jne
jae
rcr
call
repnz
mov
(bad)
icebp
add
ss
jo
xlat
popf
adc
shl
lock
cli
(bad)
xor
push
jbe
sahf
sub
push
cmps
inc
dec
sbb
fimul
mov
add
js
push
mov
out
cmp
sbb
hlt
dec
xchg
pop
xor
lea
mov
push
pop
jmp
ins
push
inc
pop
je
push
shr
inc
adc
push
jb
or
(bad)
fidiv
inc
aaa
push
out
lock
lds
test
jp
or
enter
push
jmp
dec
mov
into
adc
or
pop
dec
mov
test
mov
mov
push
imul
dec
clc
adc
popa
cmps
push
push
inc
in
lods
loopne
aad
stos
jmp
push
add
iret
or
jge
dec
jne
jecxz
jne
jl
outs
xor
loopne
pusha
enter
cli
mov
cmp
mov
add
xchg
cli
arpl
leave
mov
lock
xchg
ror
mov
sahf
je
mov
fs
jbe
lahf
je
aam
sub
fdivrp
cmps
pop
pusha
xor
jle
and
cmp
pop
dec
das
(bad)
dec
xchg
stos
scas
out
xchg
xor
pop
add
fs
sbb
add
and
stos
clc
xchg
pop
test
or
shr
mov
mov
cdq
pop
adc
jns
scas
push
add
(bad)
fsub
clc
leave
cmps
adc
fmul
xor
(bad)
push
pop
pop
sub
add
mov
cmc
lods
stos
popa
mov
cmp
(bad)
adc
mov
push
sahf
es
or
test
xchg
lahf
inc
cmp
in
or
xchg
retf
mov
mov
dec
ret
push
push
mov
call
(bad)
leave
jmp
popa
sbb
xchg
jmp
pushf
jnp
dec
call
sti
mov
fsub
imul
fst
add
lahf
fisttp
aam
jae
nop
xchg
in
cs
sbb
lods
sub
mov
pop
pop
and
push
icebp
xchg
ds
jg
lock
jmp
out
dec
call
push
jo
scas
inc
or
push
push
add
pusha
aam
sub
jecxz
dec
inc
(bad)
xchg
add
ds
popa
inc
jecxz
add
inc
retf
aaa
movs
mov
xor
and
lds
lods
hlt
pushf
push
mov
pop
mov
sahf
pop
data16
arpl
mov
(bad)
mov
mov
cmp
call
ret
outs
(bad)
jo
pop
jns
pop
pop
mov
xchg
lds
xor
push
les
sbb
inc
adc
call
(bad)
in
sub
test
outs
sub
stos
add
mul
pop
mov
dec
test
into
and
fiadd
jb
iret
sub
and
scas
and
xchg
mov
sbb
mov
mov
mov
cmp
mov
gs
inc
aad
popa
(bad)
adc
push
adc
out
inc
(bad)
pop
push
sub
int3
inc
bound
sub
xor
fs
jnp
mov
and
xchg
push
jnp
dec
jns
jmp
fnsave
enter
imul
mov
sub
adc
jp
pop
pusha
cmps
mov
call
pop
dec
fimul
cmp
int
mov
jp
retf
je
cmp
leave
in
movs
je
dec
enter
ins
lock
out
gs
mov
fisubr
nop
scas
stc
or
add
mov
fsubr
pop
jp
mov
dec
retf
and
ss
iret
adc
xor
and
jmp
cli
push
pusha
nop
pop
add
dec
stos
lods
inc
scas
popf
jnp
nop
sub
push
push
shl
mov
inc
seta
jns
mov
inc
fld
aam
not
in
(bad)
cli
lock
cmps
sahf
xchg
lods
jmp
xor
dec
xchg
cli
push
adc
sub
mov
and
fidivr
sbb
jmp
lods
mov
leave
aas
xor
cdq
dec
cmc
and
inc
cmpxchg
cmps
jnp
adc
mov
xchg
mov
das
jecxz
loop
ins
mov
mov
sbb
cmc
or
clc
lea
rol
(bad)
inc
sub
adc
push
popa
jbe
mov
aam
test
mov
shl
mov
jnp
int
jo
mov
popa
stos
pop
jecxz
es
nop
mov
mov
sahf
inc
or
mov
outs
cmp
aam
(bad)
call
xchg
scas
pop
xchg
jnp
loop
adc
pop
fistp
dec
test
sbb
(bad)
cmp
add
fld
dec
aas
jmp
(bad)
icebp
and
(bad)
int3
aaa
adc
add
push
xchg
inc
jp
mov
out
inc
fiadd
jecxz
in
jbe
fcomp
jno
(bad)
cld
jae
leave
jecxz
cld
(bad)
mov
lds
fcom
adc
arpl
and
mov
fwait
xor
push
push
retf
xor
or
xchg
xor
ret
mov
hlt
mov
dec
(bad)
pop
jg
(bad)
mov
inc
les
xchg
pushf
mov
mov
push
out
mov
imul
lods
sahf
mov
dec
iret
bound
in
and
repz
and
popa
aaa
cmc
out
retf
mov
into
and
daa
pop
ins
cwde
es
(bad)
jae
mov
dec
ja
cmp
clc
outs
mov
lods
inc
in
repnz
(bad)
xlat
sbb
arpl
aam
mov
sub
repnz
or
push
sbb
scas
lods
jbe
sti
pop
call
mov
inc
loope
imul
cmps
std
jbe
mov
push
push
aad
fdiv
xor
mov
jp
div
scas
enter
sub
pop
popf
dec
jmp
fimul
popa
(bad)
dec
inc
ficomp
pop
and
jbe
data16
faddp
loopne
test
sub
leave
sub
out
cmp
push
ret
jmp
mov
mov
sub
mov
loopne
loopne
add
sub
ins
sbb
outs
mov
mov
and
cmp
mov
fs
mov
fadd
mul
sar
stos
ins
ss
mov
inc
aaa
dec
cld
mov
gs
lods
retf
in
shl
cmpps
xor
pop
and
cmp
xlat
mov
adc
dec
cmp
pop
push
mov
jno
fistp
fldenv
ins
adc
aas
xchg
and
fnclex
xchg
mov
adc
fist
mul
sbb
lock
mov
(bad)
xor
out
cmps
mov
sbb
jmp
push
push
cli
lock
inc
stos
pop
xchg
movs
(bad)
mov
sbb
sbb
mov
sub
jno
int3
(bad)
out
jbe
inc
mov
pop
mov
jno
inc
mov
xchg
jbe
int
cmc
mov
cmp
inc
inc
pushf
imul
mov
jge
add
int3
jmp
test
jb
int
dec
(bad)
enter
mov
mov
ret
pop
mov
jo
lock
es
shl
push
cmp
mov
sub
push
in
xchg
mov
pop
pop
vaddsubps
jmp
sahf
cmp
in
pop
mov
aad
sbb
cmp
xchg
int3
addr16
sahf
cmc
pusha
rsqrtps
mov
cld
mov
xchg
dec
nop
leave
cdq
out
ret
das
aam
mov
xchg
(bad)
adc
xor
push
(bad)
in
je
sbb
jo
iret
add
repz
rcr
test
push
pushf
mov
pop
jbe
ss
inc
fwait
cld
mov
and
sti
push
xchg
jmp
icebp
inc
popa
adc
pop
lds
pop
sub
push
in
sbb
movs
or
sub
inc
mov
or
mov
dec
cmp
aam
lods
pop
push
test
push
xchg
fwait
rcl
jp
sub
aam
jmp
lahf
inc
mov
repz
push
mov
inc
mov
adc
cli
out
inc
test
shl
mov
test
rcr
adc
daa
scas
sar
fld
popf
imul
mul
or
xchg
rep
push
cmps
das
ins
mov
fyl2xp1
in
enter
push
dec
repz
movs
js
cdq
push
or
shl
mov
rcr
out
sub
cld
push
jge
enter
sbb
mov
aam
das
sub
mov
mov
test
lock
jecxz
aaa
adc
and
cmps
jbe
fcom
add
aas
jge
push
pop
push
mov
call
pop
loope
idiv
repz
bound
or
daa
cmp
adc
cmp
or
scas
inc
xchg
pop
sub
and
sar
sbb
fimul
pop
inc
jns
data16
ins
imul
or
ss
jl
mov
push
imul
pop
lds
bound
xor
sub
sahf
(bad)
rcl
xor
stc
stos
pop
xchg
cwde
and
push
aam
mov
xor
test
clc
push
mov
loope
jo
mov
or
xor
mov
dec
push
pop
xor
and
rol
aaa
or
test
inc
jl
adc
sub
jmp
mov
rol
cmp
cmp
test
(bad)
cs
xor
inc
cld
jge
loop
dec
fisttp
pop
ret
aad
sbb
jmp
mov
mov
int3
dec
jb
sbb
gs
jmp
xchg
popa
aas
xchg
dec
sar
mov
sub
popf
jnp
mov
in
push
outs
mov
sub
adc
or
pop
lods
mov
xchg
(bad)
es
mov
jp
fdivr
cmp
jns
mov
call
inc
mov
cs
cmc
hlt
into
xchg
mov
sbb
in
rol
es
clc
stos
fwait
mov
out
jo
clc
ins
in
enter
mov
in
stos
inc
std
fdivr
movs
jg
xchg
ja
ds
jns
add
fsub
fnsave
and
out
xchg
push
outs
jge
movs
movd
cld
stc
push
out
inc
out
ret
jo
les
cdq
(bad)
or
push
jecxz
jb
cmps
hlt
mov
es
cmp
aaa
adc
cdq
in
lods
inc
lahf
stc
xchg
fwait
mov
xlat
daa
mov
out
and
sub
mov
loopne
xor
sub
lea
mov
cli
push
test
cli
repnz
pop
pop
xor
add
adc
jmp
xchg
arpl
aad
and
shl
cld
fimul
ret
jmp
es
cld
dec
pop
dec
add
cvtpi2ps
and
sti
push
and
cwde
xor
leave
movs
push
(bad)
sti
mov
dec
shl
inc
inc
sbb
and
adc
sbb
retf
cmp
dec
lock
pop
pop
push
dec
scas
ds
aad
int3
icebp
jmp
mov
adc
mov
xchg
(bad)
mov
out
pop
inc
clc
inc
mov
xor
pop
and
sub
cmpxchg
jb
movs
pop
xor
pop
mov
sbb
mov
add
cmp
dec
mov
cli
jmp
imul
push
popf
jae
mov
pop
cmp
cmp
movs
dec
cwde
ins
mov
push
inc
stos
or
das
xchg
pop
mov
test
pop
or
into
ds
and
inc
test
je
popf
sahf
or
xchg
mov
out
mov
bound
xlat
outs
inc
jecxz
retf
rol
and
sub
mov
xchg
leave
and
dec
jle
dec
shl
xor
add
retf
add
push
xchg
xor
add
cs
push
inc
(bad)
lods
pop
xchg
mov
xor
int
inc
cmp
cwde
add
jnp
mov
sub
mov
dec
push
mov
or
es
jle
bound
mov
neg
xor
mov
(bad)
repz
outs
scas
lock
aas
cmp
aaa
inc
sub
xlat
fdiv
cmc
out
inc
in
sub
jg
or
or
inc
mov
(bad)
fld
pop
mov
jae
icebp
mov
add
pop
fstp
mov
ins
in
mov
pop
(bad)
mov
xchg
in
out
aad
mov
jge
fdiv
repnz
iret
adc
push
ds
lahf
out
aaa
xchg
or
adc
xor
es
push
in
(bad)
movs
pop
mov
stos
aam
icebp
mov
adc
xchg
stc
rcr
inc
mov
into
add
enter
ud2
(bad)
icebp
xlat
cli
push
pushf
retf
jbe
aad
test
pop
or
dec
js
ret
fadd
mov
mov
pop
enter
fwait
out
lds
push
jnp
fstp
test
lods
jg
or
sbb
retf
cdq
pop
outs
mov
mov
in
inc
outs
iret
push
adc
cdq
test
or
mov
dec
hlt
xchg
aas
dec
push
cmp
inc
xor
mov
xor
cdq
pop
push
fnsave
mov
push
in
daa
in
scas
or
bound
aad
xor
addr16
or
ficomp
repnz
stc
not
aas
into
sub
fild
fild
push
sbb
push
(bad)
mov
ja
add
mov
or
push
adc
jo
cs
and
jle
xchg
retf
inc
push
fld
mov
mov
xor
bound
push
dec
fisub
mov
xchg
pushf
xor
mov
out
jg
(bad)
(bad)
movs
test
mov
inc
gs
add
sbb
xor
sahf
out
(bad)
jge
repnz
lds
push
sub
mov
call
sub
lods
pop
(bad)
popf
push
fcmovne
pushf
mov
and
imul
sti
push
push
jg
pop
test
nop
inc
movs
mov
jne
xchg
std
pop
push
push
dec
rol
sbb
adc
repz
mov
pop
sub
push
sub
stc
fsub
dec
imul
pop
xor
jg
retf
pop
test
scas
or
loope
or
xor
mov
xchg
je
bound
(bad)
mov
call
cmp
int3
imul
jmp
adc
cmps
cmps
mov
popf
jge
mov
pop
loopne
sub
sti
push
and
sbb
sahf
movs
dec
add
stos
cmp
push
and
hlt
pop
faddp
imul
xor
xlat
xchg
hlt
lea
data16
xor
sub
sbb
xchg
sti
jl
aaa
in
sub
sbb
xor
in
test
mov
jbe
mov
pusha
mov
cdq
mov
mov
cmp
inc
addr16
mov
pop
in
stos
out
mov
(bad)
fdiv
bnd
push
arpl
add
ret
xlat
mov
cmps
pop
gs
(bad)
ins
mov
rcl
sub
inc
and
inc
jno
sbb
psrlw
fsubr
dec
mov
lods
inc
je
sbb
(bad)
push
bound
sub
sbb
test
sub
xchg
sti
retf
xchg
pusha
mov
adc
sbb
mov
xor
jle
pop
xlat
add
mov
adc
push
pushf
jl
inc
sbb
jo
cld
adc
or
enter
jae
sub
mov
into
jns
daa
jae
sbb
sub
jle
sbb
fdivr
jo
jecxz
mov
bound
sub
push
sub
test
inc
push
pop
adc
xor
cmp
ror
push
(bad)
(bad)
scas
jne
push
add
mov
jns
pop
stc
(bad)
mov
repnz
pop
mov
dec
fcmovnb
mov
add
iret
movs
mov
push
cmp
sti
iret
push
mov
pop
push
js
add
std
fsub
js
(bad)
retf
xchg
retf
sub
cmp
and
daa
(bad)
aad
cmps
imul
jne
push
nop
loopne
and
bound
bnd
fdiv
les
and
push
xor
jnp
test
adc
out
sbb
mov
cwde
xlat
outs
or
sub
add
push
add
je
push
lea
inc
xchg
aad
mov
sbb
adc
and
inc
popa
rcl
push
jg
daa
xor
sub
ret
scas
push
shr
ror
(bad)
mov
(bad)
sub
cmps
(bad)
movs
fsubr
dec
bound
xchg
and
in
sub
aad
or
lahf
mov
sub
add
push
nop
dec
iret
cmp
repnz
lds
pop
lods
out
retf
inc
ins
jmp
in
mov
add
outs
push
stos
icebp
mov
inc
sbb
call
mov
jg
cmps
mov
inc
ret
mov
mov
dec
fsub
lea
xchg
and
mov
xor
sbb
(bad)
cmp
in
loopne
push
adc
xchg
or
jecxz
or
xchg
aaa
rcr
ficomp
sub
inc
scas
push
leave
or
pop
out
loop
sahf
dec
jmp
out
push
(bad)
test
xor
mov
xchg
xchg
fsincos
mov
cs
push
jmp
into
and
push
clc
in
cmp
popa
ja
or
add
mov
mov
clc
sbb
retf
dec
(bad)
fs
xchg
and
and
je
lock
fisubr
dec
retf
sbb
jns
sub
movs
mov
push
(bad)
sub
cwde
clc
ror
jmp
mov
scas
jl
fwait
xchg
icebp
lea
test
or
loopne
cmc
int3
and
(bad)
add
(bad)
out
mul
cmp
scas
push
ds
mov
outs
jp
jmp
fst
cmp
outs
push
loopne
jae
pusha
rep
push
jp
pop
les
sbb
es
sbb
inc
in
push
js
mov
js
cmp
pop
push
imul
imul
mov
fild
push
jbe
cmp
pop
add
aad
push
mov
adc
cmc
mov
jmp
and
test
pop
arpl
mov
rcl
pop
fs
push
sub
aaa
and
add
loopne
inc
lock
inc
mov
ss
add
xor
retf
popf
cdq
outs
or
pop
add
jle
arpl
(bad)
inc
mov
mov
xlat
retf
call
xor
cwde
dec
rol
mov
je
rcr
mov
sbb
inc
sbb
and
pop
inc
lods
nop
loopne
cmc
add
mov
push
mov
pop
add
inc
movs
xchg
adc
loope
nop
movs
jecxz
repz
aad
pusha
ins
mov
mov
das
xchg
int3
mov
shl
inc
and
adc
popf
pushf
push
pushf
cmps
push
dec
add
pusha
retf
jb
xor
fnstenv
cmp
xchg
jge
in
jno
cwde
loopne
movs
or
xor
mov
jle
and
jae
adc
nop
aas
cmp
cmp
push
jge
int
fist
out
sub
adc
out
push
retf
repnz
in
fisubr
xlat
(bad)
fisttp
outs
cld
inc
outs
mov
fwait
or
scas
jno
js
les
add
neg
pop
xor
std
(bad)
aad
fimul
test
mov
ja
sbb
rcr
enter
data16
push
jne
push
sub
daa
mov
push
sub
and
and
jnp
push
jae
sub
push
add
fdivr
xchg
jp
lea
xchg
fistp
mov
and
fsubp
jg
dec
adc
push
(bad)
pop
jmp
add
test
mov
mov
test
and
retf
scas
rep
into
loope
shl
sbb
xlat
rcr
xor
pop
stos
ins
les
ret
test
mov
das
mov
fpatan
mov
stos
mov
xchg
data16
mov
push
mov
arpl
xchg
jnp
cmp
add
sub
lahf
arpl
adc
mov
jb
arpl
pusha
pop
rcl
push
aas
dec
jg
out
js
add
(bad)
cmp
pop
shl
cmp
xchg
mov
icebp
add
and
pop
mov
cmp
arpl
test
lock
mov
cmps
xchg
mov
nop
jp
rol
repz
stos
mov
rcl
jae
and
xchg
(bad)
jnp
push
mov
xchg
sbb
mov
loopne
fsubr
or
push
aad
aam
pop
ss
fimul
(bad)
ds
es
call
cmp
ja
cmc
jnp
xor
dec
jge
cmp
stos
push
adc
push
movs
sub
out
jb
push
and
fs
cwde
mov
pop
mov
and
mov
sbb
inc
(bad)
mov
push
push
mov
fs
jae
gs
mov
jmp
cdq
aaa
mov
mov
inc
cmp
mov
lea
idiv
repz
rcr
mov
mov
inc
popa
dec
pushf
push
adc
or
inc
cld
sbb
leave
mov
pop
iret
popf
into
ret
adc
ret
test
imul
out
retf
mov
nop
aaa
push
repz
jnp
bound
(bad)
push
fptan
push
or
mov
out
scas
dec
mov
push
and
push
lock
mov
push
les
cmps
mov
mov
adc
arpl
(bad)
fist
loope
or
retf
lock
push
cmp
xor
jbe
pop
jl
ret
sub
jnp
imul
ins
ficom
in
aas
add
fild
sub
mov
dec
fucomi
mov
jns
adc
in
mov
addr16
push
fwait
pop
repnz
ror
scas
loop
aad
mov
mov
mov
mov
or
jecxz
daa
pop
xor
sbb
(bad)
and
and
push
pop
pop
xor
bnd
pop
adc
enter
jmp
xchg
das
or
out
or
cmp
cdq
sar
jmp
js
imul
imul
sub
wbinvd
icebp
jmp
outs
mov
or
fwait
shl
mov
ss
adc
mov
inc
inc
mov
mov
sbb
into
aaa
mov
or
sbb
sbb
(bad)
cdq
das
dec
shr
xlat
mov
fsubr
and
pop
pop
jmp
xor
(bad)
bound
or
xchg
out
sbb
retf
cmp
jmp
das
mov
outs
mov
(bad)
dec
push
xor
or
mov
nop
popf
cmp
and
aad
stc
push
rol
cmp
pusha
aaa
popf
push
btc
xlat
cdq
cli
mov
inc
stos
cmp
dec
jge
mov
stc
nop
sub
adc
pop
jb
dec
pop
push
sub
rcr
ins
ret
add
adc
push
cmp
sub
jns
sub
inc
(bad)
cmp
push
arpl
in
dec
sbb
xor
shr
or
cmp
push
sbb
in
das
(bad)
cmps
xchg
mov
dec
and
push
lahf
push
fnstcw
daa
dec
fidivr
into
push
and
cmp
ins
fmul
in
hlt
jo
push
cs
pop
lock
shl
jmp
out
(bad)
mov
push
xchg
jmp
ss
xchg
int3
sub
inc
rcl
inc
jecxz
rcr
sbb
sbb
mov
test
mov
pop
test
sahf
lea
test
mov
push
adc
leave
xchg
cmp
adc
mov
push
or
pop
jns
add
mov
lods
cmp
xchg
cmp
sbb
pop
outs
adc
and
(bad)
fbstp
xchg
add
movs
jne
jle
cmp
out
add
sbb
jmp
push
popa
mov
push
mov
or
mov
mov
cld
push
outs
mov
add
mov
test
stos
cmp
ret
loop
lds
and
aad
jecxz
jnp
push
or
push
rol
shl
add
or
popf
sbb
cmp
xchg
jge
push
shr
je
jmp
popf
iret
pop
dec
(bad)
dec
pop
mov
pusha
in
ins
jg
xchg
sub
jbe
hlt
inc
xchg
not
fistp
out
cld
add
push
adc
loope
ds
and
push
jo
jbe
inc
out
jp
and
in
test
jl
jmp
xchg
add
mov
mov
les
xchg
ins
les
ss
enter
adc
mov
aad
mov
ja
sbb
test
inc
(bad)
fnstcw
fstp
mov
sub
(bad)
bound
(bad)
lods
inc
loope
out
fnstcw
add
stos
cmc
rcl
test
xor
call
out
pop
mov
arpl
(bad)
cmovl
push
mov
out
and
sar
inc
sbb
sbb
push
mov
lock
add
xor
add
(bad)
ror
dec
sbb
pushf
cmps
shl
lods
je
and
add
jo
arpl
je
call
xchg
out
adc
scas
sub
dec
or
les
shl
gs
ins
adc
mov
into
pop
js
pusha
std
push
in
cmp
aad
lea
iret
or
into
aas
mov
leave
shl
and
lods
test
mov
xchg
mov
in
daa
dec
std
xor
hlt
cmp
imul
ror
rol
cwde
push
push
lahf
mov
push
les
loopne
lods
xchg
jno
mov
adc
je
ins
sbb
or
xor
icebp
mul
lods
cmp
jns
jnp
(bad)
aam
xor
pusha
call
sbb
mov
pop
leave
xlat
mov
mov
cmps
xchg
rol
scas
adc
sbb
rcl
das
sub
lods
jns
pop
push
jmp
cmp
cmps
sub
mov
out
xchg
add
xor
jl
cmp
aaa
fcmovne
lods
dec
push
pushf
retf
dec
mov
lock
or
jmp
or
out
popa
mov
jo
xor
xor
cmps
dec
mov
cs
pop
push
movs
add
sbb
xchg
pop
movs
jge
(bad)
mov
cmp
xor
jnp
adc
jns
(bad)
es
outs
jle
int
fidiv
xchg
fsubp
inc
popa
sar
test
repz
or
je
cmps
out
test
stos
mov
pusha
mulps
repz
sbb
push
retf
ins
enter
pop
jl
and
enter
pop
xor
in
xor
int3
lahf
mov
addr16
leave
in
add
inc
pop
je
iret
pop
test
(bad)
sub
jae
stos
shr
xor
cdq
hlt
mov
iret
jmp
lock
sub
(bad)
cli
repnz
sub
test
idiv
pop
mov
mov
enter
clc
bound
in
hlt
(bad)
loop
test
popf
xlat
(bad)
and
pop
fnstenv
xchg
out
(bad)
out
call
jnp
scas
xlat
outs
jle
ss
(bad)
mov
inc
dec
movs
inc
retf
mov
loopne
out
pop
sub
out
sub
cmp
xor
iret
mov
ds
loope
ins
ss
sbb
add
mov
pusha
cmp
mov
mov
mov
stos
cdq
pop
nop
cmps
cs
pcmpeqb
add
setno
sahf
in
push
add
add
ins
dec
inc
out
ja
mov
mov
sbb
jp
icebp
jl
push
dec
sub
arpl
aam
fld
rcr
sbb
(bad)
repnz
cs
or
imul
inc
push
mov
xor
mov
xchg
in
jbe
dec
movs
cmp
les
jns
xchg
add
out
inc
push
dec
nop
xchg
jo
jo
fcomp
mov
sbb
loopne
imul
and
popa
pop
cmp
gs
and
pop
arpl
out
hlt
mov
or
mov
mov
and
inc
in
cdq
fsub
inc
(bad)
sbb
or
mov
lods
(bad)
fsub
pop
sbb
mov
outs
push
das
xchg
pop
daa
push
inc
and
(bad)
pop
scas
js
adc
rol
jae
lock
xor
fwait
mov
jp
iret
cmp
shl
push
mov
in
data16
sub
xlat
ret
iret
adc
es
and
sbb
add
cld
xor
in
out
sub
add
sti
fisttp
xor
adc
aaa
xchg
push
or
call
pop
sbb
sahf
(bad)
adc
arpl
fs
mov
outs
retf
jmp
jle
clc
sbb
push
loop
adc
rol
out
pop
inc
lahf
add
imul
or
cmp
fadd
dec
sbb
mov
sub
inc
push
cmp
push
out
cmp
cdq
int
xor
cwde
(bad)
adc
outs
push
aad
xor
or
retf
inc
cmp
ret
push
mov
test
fidivr
mov
popa
mov
sub
pop
pop
dec
mov
dec
dec
popf
icebp
push
push
ss
les
cmps
fucomip
mov
pop
aad
out
cmc
ss
or
shl
ret
cmps
lods
clc
nop
mov
pop
push
aam
dec
mov
push
xor
cmc
cmc
retf
std
adc
pushf
lahf
adc
cmp
push
mov
shr
mov
cwde
test
je
xor
cmp
scas
sbb
fimul
mov
pop
add
jmp
js
jae
inc
ret
dec
daa
mov
ins
sub
and
xchg
xchg
fwait
ins
mov
or
xchg
mov
loop
mov
shl
or
aaa
mov
repz
iret
rcl
xchg
imul
cmps
xor
cmp
cmps
jmp
pushf
outs
into
push
scas
mov
xor
pop
ja
jbe
jp
rol
daa
xchg
inc
in
xor
pop
cmps
mov
lock
and
xchg
jns
sbb
jb
or
add
mov
into
repz
or
out
xor
call
adc
std
out
movs
pop
mov
imul
es
movs
xchg
imul
dec
mov
lds
ds
adc
jns
loope
inc
ret
mov
inc
adc
sub
iret
into
ins
int3
cmp
fnsave
mov
(bad)
push
sbb
mov
ds
fmul
or
mov
push
push
and
mov
push
fadd
into
add
ficomp
dec
daa
repz
mov
and
movs
or
(bad)
cmps
rol
push
test
cld
adc
jb
jns
call
rcl
push
jb
sar
inc
int3
fdiv
adc
cmps
aas
stc
or
aas
retf
in
lods
pop
push
cmps
cmps
fdiv
xchg
outs
push
inc
stc
ret
iret
xor
mov
xchg
pop
add
fwait
push
stc
outs
mov
(bad)
cmp
imul
push
fldcw
pop
sub
data16
mov
mov
mov
ins
mov
inc
cmc
out
mul
jg
not
push
stc
cmp
and
jo
cmp
hlt
sbb
cmc
jmp
(bad)
ficomp
ret
stos
inc
mov
cmp
shl
mov
cs
mov
jae
sbb
pop
xchg
xor
push
call
mov
mov
jno
arpl
push
(bad)
pushf
les
mov
add
(bad)
int3
sub
mov
sbb
add
xor
lea
xchg
mov
jbe
push
pop
add
in
nop
cmc
adc
sub
pop
(bad)
sbb
mov
sbb
push
or
jg
mov
sbb
jp
xchg
(bad)
mov
lods
push
pop
bound
sub
inc
push
enter
in
xchg
xchg
and
lahf
icebp
test
inc
div
fcomp
mov
les
pop
sbb
and
jle
js
aad
cmps
and
into
cwde
xchg
add
out
push
cs
fimul
mov
rol
and
xchg
sub
adc
push
adc
call
je
jno
push
dec
enter
jns
(bad)
rol
xchg
test
call
in
lahf
int
jne
gs
ret
and
pop
aad
popa
lock
les
xor
mov
cmc
xchg
mul
shr
fistp
xchg
add
mov
inc
or
lahf
jnp
cmp
push
pop
sbb
cmp
in
(bad)
jmp
adc
mov
jnp
jmp
(bad)
(bad)
jmp
sub
loop
mov
sub
adc
mov
pop
adc
xor
imul
jl
test
xchg
stos
mov
inc
call
and
dec
mov
and
out
or
dec
jge
sub
mov
mov
cmp
pop
sti
sub
aas
cmpps
jge
and
xchg
popa
mov
(bad)
out
dec
sbb
inc
xor
adc
mov
mov
sub
add
fisttp
and
mov
pop
lahf
loope
fistp
xchg
push
dec
push
nop
icebp
retf
fidiv
mov
pop
dec
imul
rcl
xor
js
push
xchg
out
popf
ret
imul
aaa
aad
push
pop
pop
clc
call
xor
jecxz
push
popf
mov
outs
inc
inc
stc
std
fild
outs
gs
into
jbe
sbb
enter
sbb
mov
rcl
dec
mov
xchg
inc
aas
and
das
rcr
test
sar
imul
rcpps
adc
lods
push
lods
repnz
pop
hlt
hlt
inc
cmp
hlt
rol
movs
fist
adc
mov
cmp
emms
call
shr
and
ret
push
mov
mov
sub
rol
add
adc
push
xlat
sub
push
dec
push
popf
sub
outs
dec
and
pushf
sti
test
aaa
pop
in
gs
jmp
jg
daa
movs
cmp
cs
jae
mov
fbstp
test
fld
xchg
fs
enter
push
dec
rcl
cmps
sbb
mov
mov
ins
pop
xchg
jnp
xor
mov
cmps
in
inc
adc
inc
hlt
sub
jle
mov
std
xchg
sbb
inc
adc
jge
sar
cmp
jo
ficom
add
adc
mov
xchg
test
repz
sub
stc
in
jmp
dec
pop
add
stos
mov
and
jle
dec
ret
add
out
cmp
jns
test
imul
or
add
fild
adc
cwde
icebp
xor
mov
inc
stos
jo
jmp
jo
inc
xchg
in
(bad)
aaa
aad
jnp
push
push
arpl
pop
pop
popa
retf
loopne
add
and
pop
xor
add
call
mov
out
movs
ficom
mov
pop
sar
mov
sub
xor
arpl
fdivr
pop
(bad)
arpl
mov
sahf
retf
aas
cmp
sbb
out
lds
test
jnp
push
movs
cwde
xor
(bad)
cmovl
adc
pop
xchg
jge
adc
std
sti
push
popa
test
fcomp
in
jmp
xchg
call
pop
hlt
mov
retf
imul
pop
hlt
inc
mov
retf
data16
jge
pop
jecxz
gs
sbb
pop
jnp
aas
pop
shl
adc
xchg
out
and
sub
push
dec
lods
jl
movs
sub
dec
push
ficom
inc
popf
fsubr
test
xor
loopne
mov
mov
add
mov
daa
not
ja
mov
fsub
push
cmc
dec
je
and
loopne
fmul
pop
jmp
xchg
frstpm(287
mov
repz
popa
xchg
es
sbb
or
xor
pop
pop
adc
mov
mov
jg
in
push
mov
sbb
das
loope
sub
inc
sub
pop
lds
xchg
and
adc
int3
fwait
aam
dec
outs
cli
out
std
xor
sbb
scas
test
push
ins
ins
out
pop
inc
mov
xor
jecxz
std
mov
push
popa
sti
outs
mov
rol
sub
xor
and
jns
movs
loope
add
enter
mov
(bad)
cmp
mov
cmc
leave
cmp
pop
ror
fs
dec
mov
xchg
(bad)
cld
mov
pusha
push
xchg
jb
jmp
cmp
popa
out
adc
aas
add
jp
icebp
add
adc
mov
mov
and
call
mov
adc
call
mov
outs
fprem1
add
xchg
in
movs
(bad)
test
stc
push
retf
jl
push
push
sbb
fmul
fldenv
fmul
sbb
aam
and
xlat
inc
loop
pop
or
and
out
cmc
cmc
mov
sub
sahf
ds
push
cli
or
mov
ss
xchg
aad
push
push
aas
test
ds
cmp
jmp
imul
mov
push
aaa
shr
inc
fstp
mov
add
and
arpl
sub
mov
xchg
retf
retf
mov
mov
mov
xchg
aad
inc
(bad)
xor
adc
jl
neg
jle
jbe
test
cwde
call
out
adc
sar
adc
das
sbb
arpl
pushf
in
mov
loopne
fbld
lds
xchg
mov
xchg
xchg
add
push
xor
or
aaa
(bad)
ja
xor
scas
ins
out
sub
dec
ds
pop
sub
imul
ds
push
push
push
sar
add
and
push
rol
imul
je
int3
repz
mov
pop
dec
ins
out
cmps
mov
sub
pop
imul
push
hlt
rcl
retf
sbb
fs
inc
neg
push
xchg
xchg
and
gs
cli
pop
addr16
fidivr
mov
push
xor
outs
xor
push
or
add
sar
push
std
sbb
clc
cmc
and
sbb
cmp
inc
and
sub
mov
ds
and
ins
push
jbe
in
int
add
pop
stos
cmp
(bad)
push
sti
mov
sub
mov
sbb
ror
inc
je
jge
add
ja
fild
cmc
adc
inc
mov
jecxz
push
retf
cmc
cdq
jmp
int3
fild
repz
pop
and
xlat
shr
retf
stc
jns
and
and
outs
sub
adc
clc
in
aam
inc
hlt
pop
and
bsf
pop
jo
mov
sub
int3
rcl
cs
pop
and
aam
scas
ins
(bad)
sbb
inc
pop
xchg
cs
jmp
into
jne
add
clc
aam
aaa
lods
aas
cmp
sub
cmps
push
push
in
sbb
icebp
bound
cmp
jge
cmps
jb
out
push
jno
jae
xchg
jecxz
cdq
lock
push
test
cmps
mov
xor
(bad)
push
jg
cmp
imul
mov
in
xchg
sbb
pop
js
xchg
jne
std
inc
add
xchg
fiadd
mov
test
or
sub
xabort
push
xor
cs
jge
jp
pop
daa
jmp
mov
call
push
rcr
jl
fld
test
leave
loope
xlat
in
cld
mov
in
ja
inc
enter
dec
push
cmp
xchg
sub
adc
add
pushf
dec
pop
loopne
(bad)
cmc
inc
ja
jecxz
pushf
and
sub
inc
outs
xor
loopne
outs
dec
loop
push
gs
movs
sahf
test
push
and
stos
xchg
mov
mul
pop
sub
sub
cmp
inc
mov
test
xchg
sbb
mov
dec
adc
(bad)
sbb
or
jmp
loop
sbb
jns
test
call
mov
cmp
ret
ja
push
shl
dec
ror
mov
add
sub
sbb
call
jo
mov
imul
lods
cdq
or
pop
lahf
test
addr16
inc
mov
jnp
cmc
retf
jge
inc
xor
push
dec
fdiv
sbb
sub
sbb
or
cs
js
and
xchg
cmp
in
jae
mov
mov
popa
fstp
sbb
mov
inc
or
movs
xchg
sub
fwait
dec
lods
jle
test
xlat
(bad)
jp
icebp
cmp
lods
and
xor
nop
mov
xor
cli
les
fs
fs
jmp
retf
outs
mov
ds
inc
rcl
mov
repnz
jae
imul
shl
dec
shl
je
mov
aaa
and
adc
and
into
ror
(bad)
sub
in
les
ror
xchg
(bad)
xor
cs
fneni(8087
mov
xor
inc
xor
fldcw
sub
push
sbb
in
jns
push
loope
hlt
push
repz
mov
dec
mov
mov
cs
dec
clc
pop
test
push
xor
ret
push
fmul
xor
cmp
inc
jg
call
pop
mov
mov
dec
pusha
aam
inc
in
jmp
mov
inc
lea
jne
lds
xchg
int
leave
(bad)
aas
cli
shl
cdq
iret
inc
iret
mov
and
dec
test
dec
adc
pop
data16
sbb
test
popf
pop
dec
push
push
pushf
cmp
iret
or
dec
int3
cwde
fnsave
lahf
mov
mov
or
lahf
xor
rol
vpunpcklbw
cmp
push
adc
ss
or
push
(bad)
sub
and
pop
outs
clc
and
cmp
ja
shl
sbb
add
adc
jns
mov
cmp
int
push
es
xchg
push
sahf
sub
ins
js
xor
out
adc
je
fs
fs
mov
jb
scas
mov
es
mov
(bad)
mov
psubw
cmps
push
lods
fld
add
setl
(bad)
jmp
ins
cmc
mov
jb
xchg
xor
mov
jg
repz
xor
inc
adc
aam
aad
test
mov
pop
stos
fucomip
xor
mov
pushf
jbe
pop
std
pop
jp
test
bound
and
jg
mov
clc
scas
inc
ds
dec
or
js
sbb
pusha
jo
jle
mov
iret
test
cmps
sub
scas
xor
scas
cmps
mov
cwde
mov
sub
in
(bad)
and
loopne
ror
ret
sbb
and
cmps
movs
push
fisttp
jmp
jp
or
out
dec
loopne
xor
movs
sbb
inc
adc
dec
outs
dec
cmc
cmps
outs
fwait
shl
pop
addr16
jns
les
pop
mov
push
push
dec
jg
cmp
and
jae
sbb
gs
adc
fistp
mov
mov
xchg
adc
add
push
enter
aas
test
fst
push
fwait
in
lods
pop
cmp
jmp
mov
push
jmp
jmp
test
cmps
je
jne
lods
cli
add
cld
or
rcr
xchg
daa
pop
lods
stos
push
xlat
mov
inc
jno
in
adc
mov
(bad)
sar
jge
gs
xchg
cmps
test
outs
jp
test
inc
nop
cmps
(bad)
jmp
(bad)
dec
mov
int
int3
jp
mov
pop
adc
or
pop
mov
popf
jge
aad
push
outs
in
loope
out
stos
xchg
adc
push
or
rcl
in
cld
pushf
rcr
jbe
aaa
jp
sub
fimul
push
popf
xchg
in
shl
inc
or
scas
daa
aas
adc
lea
clc
cmp
ret
or
mov
mov
mov
adc
sub
pop
xchg
sub
pop
jmp
arpl
push
data16
inc
ins
xchg
cmp
loop
fnstcw
cmp
push
jae
aas
or
cmp
ja
jecxz
test
adc
or
adc
loopne
loope
inc
and
shl
add
mov
ret
pop
adc
pop
bound
fbstp
push
jae
test
(bad)
dec
xchg
fidivr
and
mov
test
push
xchg
cmps
std
scas
int
into
loop
jnp
cdq
hlt
inc
or
ins
and
and
fsub
imul
retf
adc
sbb
xchg
mov
sub
fs
xor
retf
jmp
jmp
loop
stos
cmp
call
cdq
call
mov
js
cmps
outs
xor
cmps
dec
dec
loopne
fcomp
inc
fidivr
test
ret
and
jg
fist
(bad)
cs
mov
sahf
mov
inc
outs
pushf
ret
xchg
in
adc
sbb
inc
dec
mov
push
ins
dec
pop
fcmovnu
xchg
push
jo
or
call
popa
adc
cmp
ss
jmp
(bad)
cs
div
inc
je
sbb
cmp
cmp
pop
mov
in
cli
cmp
sahf
mov
mov
movs
fisub
loop
jmp
daa
xchg
inc
xchg
fdivr
ins
dec
nop
or
jb
pop
cwde
lock
or
loope
mov
mov
sbb
fidiv
fistp
mov
(bad)
stc
pop
test
jne
mov
(bad)
adc
jne
inc
adc
mov
xor
ret
test
mov
or
mov
addr16
lds
(bad)
lahf
or
sub
mov
sub
mov
ins
dec
fild
and
iret
fxch
movs
movnti
fistp
in
sahf
mov
jmp
pop
xchg
dec
add
push
add
mov
lods
mov
sbb
xor
out
aas
cmp
fcom
inc
mov
jg
stos
jb
adc
adc
fmul
mov
retf
loop
icebp
inc
mov
jmp
xchg
push
imul
and
inc
jle
mov
jl
xor
ds
add
xor
push
xlat
add
mov
inc
gs
jns
imul
fmul
adc
lock
ja
popa
mov
scas
aam
addr16
or
xchg
sbb
xor
fwait
inc
das
test
sub
repnz
cli
mov
ins
xchg
out
cmp
inc
push
outs
sti
mov
clc
hlt
outs
sub
aaa
mov
rcr
mov
push
add
dec
clc
inc
xor
retf
fld
jmp
(bad)
pushf
xchg
mov
aas
das
and
dec
popa
psraw
xchg
cdq
xchg
mov
cmp
inc
lock
push
jle
fs
jne
iret
cli
cmp
adc
(bad)
int3
out
loop
cmp
pop
scas
loope
adc
shl
fs
cmps
ror
retf
cli
push
cli
push
cmps
add
outs
daa
xor
(bad)
gs
pop
inc
cmp
aam
popf
lock
push
or
repz
xchg
cmp
repnz
jbe
cmps
loopne
ror
add
push
mov
pop
xor
cmps
or
sti
aam
mov
mov
dec
mov
cld
pushf
mov
pop
xlat
aam
mov
adc
inc
stos
or
xor
and
iret
and
pop
jno
dec
bound
add
sti
arpl
and
ins
imul
push
int3
cwde
movs
dec
gs
sti
add
pop
fldcw
mov
repnz
je
xor
sub
imul
add
fxam
xchg
push
mov
push
adc
int
ret
jnp
test
sbb
cs
shl
push
push
outs
cmp
jle
xchg
fisub
repz
lock
inc
xlat
cwde
mov
xchg
in
rcl
rcl
pop
push
push
setno
int3
adc
xor
xchg
adc
inc
adc
in
push
jmp
xchg
adc
sub
mov
mov
add
shl
neg
mov
ins
outs
out
repnz
hlt
sbb
hlt
sub
leave
pop
mov
xor
loope
or
sahf
ins
shl
retf
popa
retf
je
into
sar
fld
xchg
or
iret
std
mov
hlt
xor
ret
in
mov
scas
gs
dec
cwde
mov
aam
enter
aad
stos
jnp
jg
sbb
push
daa
add
(bad)
stos
call
mov
test
outs
fnstenv
push
push
outs
mov
fld
adc
pcmpeqb
xchg
sbb
push
sbb
sub
inc
mov
daa
jns
pop
add
jb
(bad)
push
out
int
inc
ins
sub
dec
xchg
pushf
jno
and
test
sbb
dec
adc
bound
jno
(bad)
fcom
(bad)
cld
ja
xor
in
mov
pop
rol
sbb
mov
jp
mov
les
push
sub
lea
mov
mov
leave
cwde
enter
pushf
add
sbb
mul
adc
mov
push
scas
test
out
sbb
ja
rep
cld
jecxz
xor
sub
clc
jns
xor
lea
outs
mov
sahf
add
mov
cmp
mov
stos
in
jae
sub
std
dec
jo
and
mov
xchg
pushf
(bad)
xor
aaa
add
jnp
arpl
push
push
push
gs
pop
or
mov
or
sbb
aad
adc
adc
pop
mov
call
ds
adc
sbb
inc
inc
repnz
ss
scas
fsubr
push
imul
daa
lea
jns
push
dec
mov
xor
das
jb
xchg
aam
or
inc
or
out
in
mov
add
jb
ret
mov
xchg
retf
mov
(bad)
or
push
imul
add
arpl
pop
fiadd
jecxz
lds
and
sbb
ins
ret
ficom
pop
movs
pop
dec
xchg
push
lods
mov
xor
sbb
jmp
pop
push
(bad)
xchg
in
stos
xchg
adc
out
adc
fild
dec
or
(bad)
cmp
jmp
sub
jecxz
jnp
inc
int3
xor
sub
sbb
mov
mov
jbe
or
scas
test
dec
pop
mov
push
mov
pop
push
test
sar
ja
mov
or
xchg
mov
push
adc
pop
dec
std
mov
daa
mov
dec
cmp
ficom
mov
xchg
xor
rol
jns
jnp
push
daa
cwde
add
cli
pusha
mov
aas
mov
retf
mov
mov
rcl
daa
jb
jbe
popf
mov
lahf
loop
fistp
xchg
xchg
adc
movs
popf
jmp
test
xlat
pop
xchg
xor
jmp
je
test
add
sub
gs
shl
cmc
pop
sbb
shl
push
push
aam
push
retf
pushf
aad
test
jmp
xchg
sbb
dec
mov
aam
xlat
outs
push
cmc
fmul
dec
mov
add
xchg
ret
mov
ins
add
outs
iret
jg
outs
scas
jne
out
int
hlt
ja
and
add
mov
push
(bad)
cli
(bad)
mov
(bad)
adc
fist
xchg
loop
inc
mov
popa
ror
xchg
mov
cld
inc
push
pushf
mov
mov
sbb
mov
adc
ror
mov
(bad)
sar
push
stos
daa
imul
call
sbb
test
mov
outs
into
pusha
xor
jl
push
sub
icebp
pmullw
repnz
(bad)
dec
add
cmp
es
in
cmc
test
adc
cmp
dec
out
aad
test
adc
imul
(bad)
(bad)
mov
sahf
inc
xor
fs
loopne
adc
fistp
inc
jnp
adc
cmp
cwde
and
xor
mov
sbb
daa
ins
adc
daa
stc
pop
push
mov
mov
popf
inc
aaa
lods
push
pop
sbb
xchg
and
in
cdq
pop
mov
and
xor
sar
adc
test
sbb
xor
push
add
jae
xchg
jmp
(bad)
std
repnz
mov
cmps
sbb
cmp
ins
(bad)
sbb
mov
push
mov
aas
in
sbb
daa
ja
add
loope
sbb
xlat
pop
and
outs
pop
call
popf
aas
cwde
xor
sbb
pop
in
adc
adc
aam
out
jae
xor
es
lods
sbb
test
sti
imul
nop
in
scas
and
popa
lods
jnp
inc
mov
enter
les
cdq
kunpckwd
or
add
fdivr
jmp
out
or
jg
cmp
(bad)
loopne
push
and
push
sahf
stc
cdq
jbe
and
sbb
popa
xor
out
addr16
xor
es
adc
das
repnz
mov
enter
loope
test
out
shl
mov
out
pop
push
sbb
sub
pop
xor
push
loope
out
(bad)
imul
cmp
or
and
xchg
mov
xor
dec
and
jnp
mov
int3
lea
xchg
xchg
inc
shl
cmp
jg
jnp
mov
in
outs
sub
sub
scas
nop
add
xor
daa
int3
sub
ja
jmp
(bad)
jne
scas
js
mov
mov
or
jae
inc
pop
movs
(bad)
xor
add
js
push
popa
arpl
cmp
adc
dec
and
(bad)
adc
add
leave
mov
xlat
sahf
retf
jmp
lahf
scas
sti
xor
inc
cmc
push
pop
push
les
push
pop
je
and
movs
sbb
xchg
add
cmp
and
std
dec
iret
fidivr
in
call
sub
and
data16
and
push
inc
push
bound
xchg
sub
fimul
ds
enter
aas
mov
data16
pop
out
pop
sbb
clc
adc
and
mov
arpl
test
inc
or
inc
loopne
in
or
push
stos
loopne
test
jecxz
sub
imul
hlt
fsub
inc
(bad)
push
ror
scas
lahf
fld
xor
(bad)
(bad)
je
adc
call
aad
(bad)
jmp
out
xchg
xchg
inc
mov
cld
mov
pop
mov
lea
arpl
jnp
cmps
mov
inc
dec
into
jl
push
daa
outs
mov
xor
in
lock
icebp
xchg
jl
jnp
jl
mov
pop
int
push
pop
lods
add
sub
fbld
icebp
jb
(bad)
jg
stc
fdiv
or
je
movs
fdiv
fsubr
lods
mov
fsubr
sub
fld
inc
and
pop
fimul
(bad)
std
ret
push
sub
sub
cdq
xchg
cli
xchg
mov
je
inc
inc
mov
ds
pop
and
scas
daa
mov
rol
or
out
pop
test
sub
leave
cmps
fnstsw
sub
data16
and
jbe
loope
push
sar
cmp
std
cmp
dec
aaa
dec
bound
fidiv
mov
pusha
dec
jmp
mov
dec
cdq
fbstp
test
pop
jp
shl
adc
(bad)
cmp
or
push
es
sub
mov
dec
ror
movs
outs
outs
inc
mov
stos
cmps
or
and
repnz
mov
nop
pop
and
cmps
jae
mov
pop
jmp
ja
repnz
add
sbb
cmp
int3
stc
in
and
push
cli
fmul
stc
mov
dec
ficomp
lds
je
mov
les
sub
mov
fild
mov
mov
mov
adc
js
fwait
pop
loop
push
push
cmc
loop
push
(bad)
imul
ins
or
data16
mov
mov
push
cdq
test
xchg
and
inc
addr16
je
(bad)
push
and
lahf
fwait
jne
gs
iret
xor
das
xor
(bad)
sub
ret
mov
push
xchg
adc
xlat
movs
test
nop
jo
xor
lahf
movs
mov
fwait
cwde
retf
ja
(bad)
lods
lods
inc
and
lock
jns
push
jmp
dec
or
hlt
adc
sub
pop
mov
sub
cdq
pusha
push
mov
in
push
fimul
sbb
push
cwde
cmps
(bad)
mov
adc
or
jo
add
xor
ins
xlat
je
leave
adc
fdivr
xchg
dec
clc
mov
sub
sub
xchg
test
sub
dec
shr
inc
enter
mov
mov
lea
shl
cmps
jg
outs
sbb
adc
stos
push
test
mov
mov
mov
dec
jmp
inc
jmp
sti
cmp
mov
adc
add
lods
mov
lds
into
in
push
inc
movhps
sbb
cli
inc
pop
and
stc
xchg
pop
sub
mov
out
or
(bad)
sbb
not
outs
jecxz
or
pop
adc
cmp
adc
inc
jnp
mov
push
push
or
pop
xchg
sub
jmp
adc
push
adc
add
cwde
jg
fdivr
pop
inc
push
sub
cmp
sub
add
pop
int
xor
inc
mov
pop
xchg
cmp
mov
push
and
pop
and
mov
mov
ins
mov
xchg
xchg
sti
mov
lds
cld
leave
xor
nop
pop
mov
pop
ss
mov
lock
push
add
out
sbb
mov
(bad)
mov
int
dec
cmp
add
xor
jmp
jl
std
jo
pop
inc
js
push
mov
mov
pop
outs
mov
xor
in
cmp
add
popf
jbe
mov
mov
inc
sub
(bad)
mov
in
loope
sbb
ss
add
inc
enter
mov
inc
push
sub
popa
mov
add
dec
mov
push
mov
mov
mov
and
sbb
push
xchg
cmc
call
adc
and
jnp
inc
jge
xor
arpl
loope
push
std
sbb
cmp
repz
fadd
cdq
int3
cli
fxch
js
cmp
cmp
jge
out
(bad)
jp
fisub
daa
ret
cmps
sar
inc
xchg
and
xchg
inc
leave
sbb
sub
lahf
push
lahf
push
not
mov
dec
out
mov
xor
mov
lods
(bad)
pop
lods
lods
mul
dec
movs
push
(bad)
xor
jecxz
pop
inc
stos
push
inc
fidiv
clc
sbb
into
jmp
pop
xchg
jns
icebp
xchg
pop
pop
xchg
push
mov
stos
ja
(bad)
in
jg
imul
stos
mov
test
data16
lds
dec
fcomp
mov
stos
adc
retf
aas
daa
fdivp
es
dec
hlt
sub
xlat
cmps
dec
bound
sbb
out
xchg
ret
mov
movs
out
pop
fcomp
and
xor
imul
dec
xchg
ja
shr
inc
mov
xchg
ins
cmp
pop
loope
lock
pop
rol
popf
int
mov
(bad)
out
or
sub
into
and
adc
dec
xchg
cmp
jp
mov
shl
outs
std
in
cmp
stos
leave
xchg
jle
js
in
in
lds
cmp
iret
jle
repz
jae
enter
pop
sbb
int
pop
mov
ds
addr16
cs
adc
sbb
nop
dec
and
arpl
in
sub
repz
add
repz
imul
inc
sbb
outs
cmp
lea
inc
mov
inc
clc
sti
lock
adc
mov
push
adc
xchg
daa
jns
push
leave
add
add
jmp
fdiv
sbb
pop
hlt
inc
stc
inc
call
mov
ds
xor
stos
into
xchg
mov
mov
movs
add
mov
js
jmp
ds
in
mov
jne
jg
mov
fcomp
out
add
ds
adc
daa
(bad)
lock
and
mov
ds
mov
icebp
jg
fstp
mov
fld
jb
jg
sub
nop
mov
ret
movs
or
sbb
pop
jns
movs
sub
sahf
outs
into
push
aam
arpl
enter
clc
fwait
or
arpl
stos
retf
xor
(bad)
retf
int3
pause
cmp
out
jnp
jl
int3
ss
dec
(bad)
popf
or
fs
jmp
mov
fdiv
xlat
aad
mov
adc
fs
dec
(bad)
push
(bad)
xchg
inc
xchg
cmps
xchg
jecxz
retf
jg
aaa
in
cmp
ds
pushf
in
daa
cwde
inc
enter
in
data16
pop
lods
int
fnsave
out
hlt
jg
xchg
out
(bad)
movs
adc
enter
jne
sub
mov
je
dec
mov
imul
(bad)
add
mov
pop
loope
or
adc
mov
sahf
jg
enter
add
fild
pushf
push
sbb
sti
mov
mov
pop
pushf
mov
add
psubusw
shl
push
bound
cdq
aam
inc
adc
mov
mov
mov
push
jecxz
test
mov
je
(bad)
scas
cmp
push
loop
(bad)
push
imul
loope
cdq
adc
xor
pop
xchg
push
adc
clc
lds
das
mov
test
or
enter
push
mov
xor
out
stos
faddp
stc
cld
aaa
cmps
pop
loope
(bad)
jno
lods
jmp
pop
dec
popa
or
mov
loopne
and
mov
in
lods
mov
mov
test
push
mul
xor
cmp
inc
arpl
movs
jo
inc
movs
or
sub
shl
mov
mov
add
or
fnstcw
aam
sub
test
xchg
fidivr
xor
or
xchg
add
aam
cli
xchg
push
cmp
or
loopne
jecxz
push
pop
inc
lock
jno
dec
cwde
mov
or
push
ja
sub
cmp
test
sbb
cmc
fdiv
loope
cs
mov
push
dec
popf
ss
out
es
les
test
hlt
xchg
add
cmp
in
dec
out
xor
inc
(bad)
lods
fs
xchg
jne
mov
add
push
in
cdq
pop
in
pop
jo
jnp
fcom
fild
cmp
rcr
cld
cmp
jo
push
xor
dec
sub
jbe
pop
retf
push
(bad)
sar
imul
fwait
scas
stos
hlt
xor
or
ss
pop
fiadd
sbb
pop
daa
cmp
int
popf
(bad)
sar
cwde
test
xor
dec
mov
icebp
lea
mov
shl
sub
fiadd
xchg
sbb
sbb
sub
ins
dec
test
jp
jne
push
sub
out
imul
mov
push
cwde
retf
mov
sub
idiv
pop
(bad)
loopne
push
lock
push
nop
cmp
pushf
stc
jae
dec
inc
mov
scas
cmp
cmps
push
rcl
clc
cdq
icebp
cmps
(bad)
(bad)
mov
jmp
mov
popf
push
jae
mov
test
push
test
adc
dec
fcmovne
mov
in
jmp
std
inc
add
pusha
test
cs
movs
shl
mov
ret
les
into
mov
inc
cmp
dec
shl
ror
(bad)
imul
outs
push
sub
in
xor
mov
fcomp
sahf
sbb
cmp
pop
cmp
mov
test
outs
xchg
jmp
in
das
call
and
xchg
push
test
pop
mov
mov
mov
push
cmps
inc
dec
popf
xor
cli
fs
pop
dec
test
or
dec
(bad)
push
mov
jo
cwde
xchg
inc
les
rcr
fwait
sub
mov
add
push
call
xor
scas
sub
mov
mov
imul
push
nop
lds
out
out
adc
mov
jg
retf
mov
push
push
(bad)
mov
inc
inc
pop
hlt
inc
jmp
mov
mov
call
inc
rcr
mov
dec
mov
mov
mov
jge
jae
sbb
mov
inc
jne
jl
mov
movs
mov
add
fcmovbe
mov
inc
test
xor
add
mov
push
leave
pop
adc
jb
std
xor
add
inc
clc
pop
mov
or
mov
and
test
ret
pop
xchg
jle
push
mov
ds
call
loope
sbb
pop
test
lods
inc
sbb
push
lods
mov
mov
xor
and
xor
fs
repnz
and
ficom
lods
and
add
xchg
(bad)
jno
xchg
loop
pop
out
jle
adc
shr
jecxz
hlt
inc
push
adc
je
and
outs
mov
sub
fs
pop
and
mov
xor
jo
daa
outs
clc
in
aaa
movs
and
mov
dec
dec
shl
iret
jb
dec
out
loope
out
das
mov
pusha
mov
into
adc
push
popa
in
sub
xchg
mov
inc
cmp
mov
int
push
lods
and
jp
clc
xchg
mov
iret
sub
cmps
test
test
js
and
or
fstp
pop
fisttp
mov
stos
jno
adc
xchg
fbld
xchg
(bad)
jle
push
cmp
sbb
retf
mov
out
jb
retf
dec
and
jl
push
call
aaa
xchg
arpl
loop
mov
aam
dec
dec
arpl
loop
scas
addr16
shl
(bad)
cld
js
sbb
jb
fild
dec
es
mov
pop
jae
mov
sub
pop
int3
fldenv
mov
dec
xchg
inc
cwde
sub
out
fwait
jmp
(bad)
test
ret
(bad)
cmps
jl
xor
fmul
jbe
inc
and
cmc
aas
mov
push
jle
fcomp
xor
ins
fist
add
ret
sub
aas
gs
pop
jle
cmp
shr
mov
mov
jns
pop
into
aas
push
(bad)
mov
inc
pop
pushf
movs
sbb
cmp
xor
adc
cwde
sub
hlt
sahf
mov
pushf
pop
outs
or
pop
cmps
fsub
and
dec
fimul
add
loop
cli
cmp
pop
out
movs
mov
movs
aaa
cld
or
outs
mov
adc
pop
(bad)
dec
push
shr
mov
fld
ficom
je
add
inc
or
cmc
adc
fidivr
aam
mov
inc
fld
xlat
cmp
pop
mov
pop
aam
sub
cmp
imul
dec
data16
scas
push
fdiv
xchg
xchg
and
mov
dec
cmps
ins
(bad)
fidivr
jge
jbe
sub
cmp
dec
and
int3
iret
mov
in
and
mov
ret
test
adc
mov
jp
dec
jg
js
out
addr16
inc
sbb
scas
inc
jnp
stc
pop
stos
pop
mov
mov
rcl
or
xor
add
adc
inc
inc
jle
outs
imul
jo
dec
push
gs
lods
fiadd
push
cmc
dec
dec
mov
xchg
xor
inc
jbe
xor
cmp
adc
bound
and
mov
dec
pop
fcom
cdq
lock
mov
int
push
add
ror
inc
and
int
mov
ins
push
sbb
icebp
js
cmp
mov
add
bound
mov
es
and
xchg
sbb
sub
mov
iret
ins
out
(bad)
add
sbb
or
sub
js
pusha
mov
cmps
lods
push
into
mov
pushf
repz
jbe
pop
ffree
mov
test
xchg
call
push
retf
loop
push
aam
push
addr16
sbb
pop
xor
sti
mov
stos
sbb
jmp
pop
aad
push
fnsave
pop
lea
mov
repnz
pop
cmc
pop
xchg
add
add
das
aaa
cmp
test
shl
jo
sbb
aas
retf
test
cld
rcr
ror
and
mov
retf
sbb
rcr
mov
pop
imul
iret
aam
sbb
call
pop
sahf
dec
ins
fstp
jp
jo
inc
dec
sbb
dec
les
lock
mov
jg
loop
es
cmp
sub
mov
fs
jecxz
push
cmp
(bad)
addr16
sub
ret
cmp
hlt
add
ins
cmps
mov
das
popa
out
xor
inc
xor
lods
dec
adc
or
ss
mul
mov
mov
test
dec
(bad)
xchg
ror
aam
int
popa
adc
jo
in
inc
adc
cmp
pop
movzx
into
aaa
mov
pop
inc
jl
sub
or
js
pop
sbb
xchg
(bad)
xchg
repnz
cld
and
mov
scas
inc
stc
repnz
or
mov
outs
and
mov
imul
popa
mov
add
les
pop
and
push
(bad)
gs
jmp
adc
inc
or
pusha
cmp
test
and
inc
clc
push
jnp
dec
jmp
jmp
ins
retf
push
cwde
rcr
sub
ins
adc
push
cmps
mov
dec
int
push
dec
mov
sbb
popa
xor
or
and
rcr
adc
mov
in
imul
push
dec
dec
in
cld
push
fwait
pop
int
jmp
jecxz
jbe
sub
iret
shl
xor
rcr
dec
mov
or
jne
fmul
dec
adc
test
ins
xchg
(bad)
fsub
mov
xchg
pusha
ror
jb
fild
cwde
ficomp
or
test
daa
lods
xor
inc
dec
rol
clc
jmp
les
xchg
jge
imul
sahf
test
and
jbe
inc
out
jp
in
iret
jp
jbe
nop
int
push
icebp
not
iret
pop
cmp
pop
jno
dec
cmp
enter
pop
push
cmp
cmp
jle
inc
push
xlat
(bad)
repnz
pop
pop
inc
fwait
cli
retf
pop
hlt
pop
js
push
xor
fdivrp
adc
mov
hlt
sub
les
push
jae
mov
cmps
xor
jno
adc
fmul
sbb
jg
and
call
iret
into
xor
add
xchg
(bad)
cmp
movs
dec
mov
jmp
movs
in
aas
hlt
mov
and
das
push
pop
jmp
cmp
mov
and
jb
sub
dec
pop
sbb
push
out
shl
hlt
cs
inc
sbb
pop
rcl
mov
iret
outs
js
mov
and
pusha
inc
iret
inc
inc
pop
or
jmp
mov
bound
add
call
iret
pusha
dec
sub
sbb
sub
mov
xor
jo
into
out
jle
cmc
rcl
push
adc
or
pop
jmp
adc
mov
popf
and
cmp
daa
mov
push
les
cmp
rol
and
add
inc
stos
sbb
call
(bad)
icebp
ds
call
xchg
loop
fistp
or
xchg
int
shl
movs
jl
imul
jb
push
icebp
stos
lods
add
cwde
push
push
int3
xchg
scas
sbb
lock
rcl
(bad)
fs
mov
mov
out
pop
and
xor
pop
out
jle
xchg
ja
mov
lods
call
ss
jp
into
test
mov
adc
lahf
cmp
and
add
xchg
cli
push
dec
pop
data16
dec
push
lds
stos
pop
inc
mov
call
call
xor
das
je
sbb
clc
sub
call
cli
(bad)
cmps
and
mov
sub
cmc
arpl
mov
outs
inc
in
scas
ror
or
or
sahf
mov
cmc
call
(bad)
hlt
imul
mov
fstp
dec
jo
sub
cli
mov
out
mov
jge
xchg
jmp
add
lock
fnsave
pop
sub
push
ins
mov
or
hlt
cmp
cmps
sbb
sbb
fistp
lea
repz
or
and
mov
adc
fisttp
cmp
ja
aaa
inc
(bad)
pop
ins
rcl
icebp
xchg
jnp
sbb
loop
sbb
and
lahf
or
xor
add
xor
into
jmp
ret
ins
(bad)
jp
into
jmp
mov
fstp
and
shl
mov
(bad)
jecxz
cmp
jae
mov
sti
mov
adc
mov
out
cli
inc
xchg
xlat
jecxz
xor
xor
pushf
std
scas
mov
in
loope
push
aam
fistp
xor
imul
inc
shl
mov
not
or
inc
push
loopne
rcl
sub
mov
cmp
nop
xchg
jae
lahf
xor
jbe
inc
push
adc
fdiv
ds
rol
mov
add
sbb
or
outs
(bad)
pop
aaa
xchg
mov
sbb
mov
rol
add
pop
mov
out
popf
cmp
inc
mov
(bad)
xlat
iret
pushf
add
outs
(bad)
mov
data16
test
arpl
stos
jle
push
ss
add
inc
pusha
rcr
cmp
cmp
aaa
adc
adc
mov
shl
out
xor
cmp
aaa
pushf
mov
das
or
sub
stc
iret
mov
in
sub
mov
or
pop
or
ds
mov
nop
jne
cmp
jb
(bad)
stos
mov
push
neg
ja
call
jbe
dec
jae
pop
enter
push
cwde
and
mov
shl
nop
mul
sub
imul
adc
sbb
xchg
pop
lods
push
enter
jecxz
fild
push
mov
outs
sub
jmp
hlt
pop
adc
clc
sbb
fld
mov
in
sbb
pop
fs
mov
sar
mov
cs
or
mov
int
aam
pusha
xchg
les
les
das
or
sbb
or
(bad)
jmp
jo
pop
adc
jnp
imul
sbb
sub
xchg
and
or
push
fsub
cdq
inc
jo
and
stos
ds
call
cmc
jns
lock
dec
leave
(bad)
(bad)
xchg
adc
imul
dec
hlt
push
or
(bad)
xchg
cmp
mov
ins
sbb
push
jecxz
sbb
out
and
ret
ds
enter
pop
xor
test
lea
out
mov
and
push
push
mov
shr
adc
or
fs
push
mov
inc
mov
jge
mov
sub
sub
repnz
and
inc
outs
stos
pusha
sbb
cmp
cmp
shl
int3
push
enter
and
into
shl
sub
imul
jnp
(bad)
fsubr
icebp
aaa
aam
jne
xchg
and
adc
xchg
pop
(bad)
fsubp
pop
xchg
pop
jns
clc
loope
loop
data16
(bad)
mov
pop
call
aad
stos
data16
dec
das
popf
ja
retf
and
call
cwde
ins
mov
jne
push
stos
in
jmp
retf
fisubr
xchg
push
xor
les
push
sahf
aad
sti
aam
(bad)
fbstp
arpl
inc
stos
cmp
or
mov
jmp
dec
or
lds
add
xor
sar
idiv
xchg
scas
or
sub
in
cld
(bad)
(bad)
stos
adc
mov
add
loop
jecxz
push
push
nop
mov
nop
ss
jns
sub
je
and
ror
adc
xor
mov
xchg
lock
jl
jo
test
add
xchg
sar
add
ss
add
jl
jl
push
sbb
test
mov
fldenv
arpl
sub
dec
pusha
adc
ins
fnstenv
inc
test
fist
ror
mov
in
inc
ret
retf
or
mov
xor
scas
adc
push
mov
cli
mov
mov
test
(bad)
mov
dec
adc
adc
outs
mov
pop
inc
fisttp
mov
call
dec
dec
jbe
movs
fist
pop
shl
push
das
stos
stc
mov
mov
loope
int3
aam
ins
jo
dec
mov
cmc
xchg
pop
cmp
jle
ds
mov
fisttp
stc
push
mov
in
inc
retf
(bad)
retf
lock
jge
js
jmp
into
xor
jo
mov
daa
je
clc
test
adc
mov
cs
out
push
jmp
mov
mov
lds
jle
and
test
cmp
sbb
ret
inc
mov
and
mov
sar
mov
loop
push
mov
mov
jae
xchg
iret
push
loopne
jae
inc
jns
sub
lods
add
scas
ror
xchg
xor
fs
stos
popf
sub
daa
lea
mov
outs
adc
rcr
je
pushf
les
ret
adc
adc
xchg
scas
adc
jnp
scas
gs
or
push
jb
(bad)
fwait
push
test
adc
fcmovu
xor
movs
cmps
xchg
outs
ret
daa
sbb
cmp
fild
aam
lods
xchg
xor
jl
add
leave
hlt
shr
cmp
mov
aas
mov
stc
std
or
or
sbb
daa
dec
push
mov
pop
dec
or
push
sbb
stc
shl
mov
movs
mov
mov
iret
mov
dec
popa
xchg
cs
jae
pop
pop
inc
(bad)
aad
popf
retf
data16
movs
lds
arpl
das
pop
xor
dec
std
xor
mov
push
mov
rol
add
repnz
inc
pop
jo
xchg
adc
imul
popf
dec
out
ficom
mov
mov
pop
or
aaa
mov
test
mov
ret
clc
ja
pop
xchg
mov
gs
mov
add
into
imul
push
out
cmc
lahf
push
or
sub
xchg
add
sub
test
jecxz
xor
jbe
bound
shr
jno
xchg
(bad)
data16
cdq
mov
dec
adc
adc
xor
lods
aaa
mov
aam
test
sub
sbb
xchg
and
cmps
repnz
mov
mov
movs
retf
daa
repnz
shl
jo
push
outs
mov
cmps
xchg
xor
or
mov
pushf
das
dec
sub
dec
push
and
dec
adc
mov
hlt
xor
(bad)
mov
dec
mov
mov
inc
mov
test
rep
sub
shl
test
test
fnstcw
jmp
arpl
inc
xor
ds
ret
ja
inc
add
fldcw
fs
leave
clc
xor
inc
jecxz
or
cmps
jmp
adc
sub
loopne
lea
dec
push
loopne
cmps
fadd
push
push
loop
popf
les
movs
sub
xchg
push
inc
je
push
stc
push
leave
xchg
or
popf
xchg
adc
jmp
idiv
adc
test
rcr
not
retf
ja
xor
loopne
add
jo
ret
cwde
daa
daa
pop
mul
sbb
rcl
cmp
(bad)
jle
mov
jl
out
stos
ret
(bad)
sbb
hlt
popa
(bad)
sbb
mov
ins
rcr
and
xor
sub
sub
and
shl
loope
ret
mov
lea
loop
sbb
imul
dec
mov
aam
xchg
add
fadd
test
arpl
cmp
pop
jl
shl
das
ja
out
fst
scas
push
ss
repz
lds
pushf
dec
add
mov
inc
rol
daa
sub
loop
add
scas
pop
rol
mov
mov
pop
sub
push
push
jns
mov
inc
mov
lds
xchg
add
jp
(bad)
out
inc
movs
cmp
lock
rol
add
cmp
mov
cs
scas
lahf
and
dec
pop
cmps
(bad)
mov
icebp
stos
pop
mov
or
jmp
jns
sldt
je
popf
xchg
mov
jge
fs
lock
inc
push
inc
jmp
sbb
mov
scas
xchg
inc
movs
retf
cmp
pushf
out
mov
xor
ins
sar
mov
mov
cmp
add
mov
(bad)
push
shr
fld
pop
xchg
sbb
(bad)
pop
not
mov
shr
ror
mov
aaa
xchg
enter
and
xchg
xchg
sub
mov
loope
outs
rcl
mov
fld
cmp
stos
sbb
test
in
dec
scas
shr
or
lods
popa
movs
jno
adc
cmp
int
and
xchg
out
test
mov
ss
ret
stos
dec
mov
ss
ficom
xchg
dec
adc
pop
call
xor
jno
bound
mov
and
ins
pop
neg
out
and
push
aam
rol
inc
(bad)
jb
aam
push
mov
popa
push
aam
push
xchg
shl
aad
ss
dec
inc
fild
sahf
leave
mov
inc
cmp
jns
add
std
sbb
jmp
push
mov
out
jle
sub
mov
pmulhuw
push
fnsavew
add
xor
bound
js
addr16
daa
ins
mov
imul
cmp
sahf
mov
dec
mov
shr
ror
nop
ror
xchg
popa
loopne
dec
xchg
sub
sub
pop
fldenv
mov
xchg
js
dec
fld
sar
sub
push
mov
setb
stos
jecxz
push
fisttp
mov
ss
push
xchg
loop
mov
clc
cmp
mov
mov
mov
cs
sub
sbb
cmp
nop
pop
adc
xor
mov
jle
mov
mov
scas
int
mov
sbb
add
cmps
adc
sbb
and
jg
and
scas
cmp
push
lds
cmp
ins
xchg
(bad)
std
jnp
and
pop
lods
stos
(bad)
dec
cmp
popa
mov
dec
jno
in
and
adc
or
out
push
mov
sub
test
cmp
inc
mov
xchg
stos
xor
push
cld
or
imul
adc
stos
retf
clc
pop
push
mov
ds
or
das
cwde
mul
cmp
jle
mov
push
test
mov
gs
pop
shl
call
out
inc
adc
cmp
dec
in
mov
movs
mov
adc
outs
add
mov
adc
or
mov
popa
sbb
mov
imul
dec
push
lods
fwait
cmp
out
jae
jo
add
stos
pop
imul
outs
sahf
pop
aam
adc
jno
xlat
mov
stos
pop
daa
shl
push
pop
push
call
icebp
add
int3
ficom
adc
inc
rcl
mov
push
inc
xchg
mov
lods
add
stc
inc
cmp
pop
sbb
sahf
ret
mov
popa
out
jl
fldenv
jbe
cmp
std
aam
mov
movs
dec
sbb
pand
sbb
mov
add
loopne
(bad)
fcmovu
xchg
push
ror
xor
push
mov
push
cmp
push
ins
test
xchg
cmp
pop
in
addr16
mov
rcl
jno
lock
stos
mov
pop
sub
xor
xor
jno
push
add
xchg
scas
ret
outs
jge
push
sub
std
inc
sub
and
or
xchg
jg
pop
mov
dec
jb
cld
xor
mov
xor
mov
iret
sub
test
dec
pop
pop
jo
mov
ficomp
push
and
mov
hlt
or
push
pop
lahf
loopne
dec
and
cwde
daa
mov
pop
push
(bad)
scas
lods
sbb
imul
(bad)
sbb
rol
loope
pop
jo
shl
leave
pop
loop
minps
imul
or
sbb
inc
daa
sbb
cmp
dec
inc
xor
cli
xchg
gs
mov
mov
cmc
std
mov
es
fisttp
fcom
movs
(bad)
out
xor
stos
or
push
sub
jns
out
push
mov
(bad)
stc
pop
das
cmps
jge
inc
pop
add
sbb
imul
adc
mov
jge
and
out
xchg
mov
inc
daa
inc
call
movs
test
aaa
ret
dec
mov
retf
out
xchg
pop
in
pop
or
cwde
cdq
shl
fwait
xchg
ror
mov
mov
mov
jecxz
cli
mov
(bad)
dec
inc
inc
aam
aad
in
inc
xor
push
lods
inc
or
push
es
mov
(bad)
imul
aad
xchg
out
mov
push
adc
jne
in
mov
retf
xchg
test
enter
cmp
out
xbegin
loop
and
out
fild
es
inc
jle
and
(bad)
jp
and
ficomp
push
or
xlat
aas
dec
ins
ret
fdivr
mov
dec
in
iret
cwde
ins
dec
pop
fisubr
mov
stos
sbb
aam
fisub
aaa
in
xor
lods
sbb
leave
xchg
and
ins
mov
and
out
test
fwait
jmp
mov
repnz
ret
jmp
mov
test
leave
mov
scas
dec
cs
mov
cwde
sti
fwait
push
div
push
ins
leave
in
xchg
jno
dec
fstp
jp
ror
pop
fldcw
or
popa
data16
jg
cmps
test
mov
xchg
push
sbb
sub
mov
adc
lods
dec
adc
jmp
mov
mov
adc
dec
ret
mov
jmp
push
mov
xchg
lods
mov
(bad)
retf
jbe
(bad)
jno
xor
pop
jge
fisttp
pop
cmp
shl
call
bound
push
stc
adc
mov
lock
or
nop
push
jae
out
scas
bound
stc
push
popa
add
pop
jmp
test
repz
mov
jl
inc
mov
dec
jmp
clc
cmp
out
sbb
fimul
inc
xlat
dec
ss
ds
jge
in
out
sbb
pop
lea
mov
pop
repnz
dec
test
lods
jno
add
pop
and
test
std
(bad)
sbb
(bad)
repnz
dec
sbb
dec
enter
add
pop
add
test
inc
cmp
mov
sub
jo
pop
(bad)
xor
sar
mov
adc
pop
into
sub
rcl
jle
mov
adc
popf
inc
and
cmps
nop
and
jp
ja
mov
mov
push
jb
popa
ret
outs
(bad)
jae
mov
pop
or
adc
ins
in
into
push
cli
pop
mov
jo
outs
xchg
pop
out
dec
ret
sbb
add
outs
jp
inc
in
sbb
dec
or
cwde
mov
sti
in
cwde
movs
push
lea
jno
add
mov
ins
or
mov
cmp
dec
pop
inc
sub
push
cli
pop
mov
add
outs
jle
daa
dec
aad
outs
add
mov
lahf
sub
lods
sbb
sub
jns
dec
add
(bad)
in
out
lods
xchg
in
shr
aad
mov
mov
or
push
fidiv
add
aad
mov
dec
mov
(bad)
ins
xchg
les
test
push
(bad)
adc
jnp
or
push
mov
dec
call
xor
mov
scas
or
iret
lahf
xchg
dec
sbb
xchg
cmps
enter
cmp
add
push
or
data16
std
push
int3
stos
mov
add
mov
outs
or
adc
loop
or
addr16
out
cmp
mov
(bad)
jmp
cmp
aam
outs
shl
mov
aas
jne
idiv
xor
push
inc
add
pop
push
mov
jmp
sub
movs
xchg
in
test
sub
std
sub
fs
jno
fsubrp
cmp
cmp
ror
adc
push
shr
jbe
setl
push
popa
test
stc
movs
(bad)
sbb
cmps
dec
in
cwde
jg
sub
cmp
stc
or
repnz
cs
dec
xor
loope
pop
jbe
jle
jns
mov
cwde
popf
sbb
mov
rol
lahf
jge
(bad)
cmp
dec
push
add
adc
cmp
ja
cmps
out
ds
mov
sbb
ror
neg
inc
pop
jnp
in
xor
jns
pop
fcomp
mov
ror
popa
pop
and
mov
xlat
in
xchg
or
push
loope
pop
mov
xchg
scas
pop
mov
pop
adc
ret
mov
add
sar
rcr
xor
xor
stos
and
ja
out
xchg
popf
add
es
push
in
dec
hlt
mov
dec
pusha
(bad)
cli
mov
cmp
push
dec
mov
lahf
sub
repnz
sbb
jecxz
dec
sbb
xor
pop
stos
dec
shl
jmp
inc
std
push
add
mov
jno
fdivr
sub
push
mov
xchg
sbb
fsub
stc
or
cld
sar
push
xor
and
mov
aaa
jmp
push
arpl
sar
push
mov
xchg
mov
and
dec
or
sbb
cmp
movs
adc
push
cmc
sub
(bad)
jmp
mov
(bad)
pop
sbb
jmp
jl
xchg
sbb
div
jae
cwde
push
and
sbb
leave
mov
or
pop
or
loope
shl
pop
xchg
cmps
rol
test
ins
(bad)
mov
push
in
cwde
inc
adc
cmp
lds
cmp
stos
test
mov
imul
jno
mov
imul
sbb
leave
jmp
les
cmp
sub
lods
cmp
fistp
inc
pop
scas
daa
jb
ret
test
xchg
ds
in
cwde
mov
call
mov
out
std
dec
(bad)
pop
sbb
out
nop
mov
or
mov
or
pop
popf
gs
jmp
adc
or
push
lock
pop
sti
cld
adc
xor
(bad)
cdq
adc
xor
mov
xchg
cs
cmp
inc
dec
and
xor
dec
add
test
jp
and
sahf
mov
rcr
mov
inc
mov
mov
dec
jmp
inc
jns
popf
cmp
pop
jg
pushf
xor
repnz
ror
pop
aaa
and
pop
aaa
or
iret
xor
xor
jl
sar
or
mov
push
and
pop
pop
(bad)
fisttp
aas
shr
mov
adc
enter
push
mov
lods
movs
into
pop
push
inc
in
not
and
inc
pop
test
mov
sub
je
ret
pop
sub
in
fbld
push
add
pop
dec
div
and
ds
cmp
xor
jno
dec
out
in
sub
jge
cmp
retf
test
(bad)
ror
pop
cmp
and
sub
xor
fs
inc
inc
sbb
push
dec
adc
test
iret
inc
loope
push
ja
pcmpgtd
cmps
sar
mov
add
neg
inc
cld
ret
shr
mov
aaa
ds
xchg
jnp
add
js
stos
out
fdiv
leave
stos
add
fcomp
pop
push
out
sbb
cmp
cmp
hlt
movs
fimul
xor
inc
int3
or
retf
fsubrp
cmps
js
out
mov
stos
les
jp
aaa
mov
ins
pusha
cs
fadd
je
(bad)
ja
or
and
in
xchg
fmulp
push
mov
jnp
xor
mov
push
push
imul
xor
pop
or
cli
sub
jl
fs
cs
sub
and
outs
pushf
push
int
sbb
sub
in
sahf
cmc
jns
adc
mov
dec
adc
les
sub
push
(bad)
pop
nop
das
and
inc
dec
dec
jmp
xchg
movs
std
repnz
mov
sbb
add
push
loope
(bad)
push
imul
cwde
adc
or
add
jnp
imul
sub
fdivp
imul
mov
test
into
ret
in
jo
jns
jmp
cwde
push
stos
jge
sbb
lock
inc
hlt
clc
inc
jo
or
aaa
jmp
mov
in
jg
arpl
in
lods
gs
adc
add
out
sub
fidivr
arpl
mov
scas
punpckhbw
pop
fisub
add
sbb
fcomp
jge
addr16
enter
add
movs
add
sub
cmp
pop
pop
add
xchg
fsubrp
xchg
out
add
int
sub
add
xchg
dec
dec
mov
cmp
cdq
cmp
scas
sbb
push
mov
fcomi
pop
cs
and
js
(bad)
or
push
jb
cmp
div
mov
adc
(bad)
pusha
test
push
add
jmp
int3
or
test
neg
jle
test
(bad)
stc
mov
clc
pop
cs
lock
add
jne
dec
leave
nop
pop
jbe
fcom
jbe
add
adc
inc
fcmovnbe
dec
into
xlat
push
cmp
es
ja
or
sbb
adc
add
fld
sbb
mov
pusha
inc
pushf
scas
add
xchg
push
in
add
jge
out
lods
fwait
out
xchg
(bad)
int3
add
jne
repnz
scas
cli
ret
push
xor
adc
cmps
(bad)
sbb
push
div
inc
rep
push
or
add
sub
mov
jbe
pop
sbb
push
ret
or
jmp
aad
retf
dec
shl
dec
mov
xor
push
es
cmp
(bad)
addr16
and
mov
pop
xchg
outs
xchg
mov
inc
mov
adc
lea
dec
je
mov
xchg
aas
mov
cli
rcr
test
fidiv
loopne
jne
imul
add
mov
mov
in
(bad)
rcl
pop
jmp
ja
imul
outs
dec
int
push
sub
inc
cmp
rcl
mov
jmp
xor
adc
int
mov
add
(bad)
adc
mov
mov
or
mov
push
pop
fucomip
push
dec
adc
push
mov
jecxz
outs
sub
jo
dec
mov
popf
xchg
pushf
les
push
xchg
movs
icebp
leave
(bad)
mov
and
fisttp
adc
pop
movs
cwde
jno
ret
lds
inc
test
pusha
xor
xchg
inc
pop
xchg
pusha
sub
enter
cwde
jnp
mov
mov
icebp
jmp
ins
sbb
ret
shl
test
sub
push
sbb
mov
addr16
lods
mov
mov
and
inc
mov
dec
pop
pop
cmp
xchg
(bad)
jae
push
imul
pop
aam
shl
mov
mov
jno
ss
pop
ins
cmp
xchg
ret
mov
add
into
hlt
movs
fnop
shr
int
out
test
xchg
cmp
dec
add
(bad)
xor
outs
push
dec
test
imul
cmp
test
sub
mov
psrlw
ret
sub
or
or
xchg
or
leave
aaa
setl
dec
jmp
dec
sti
loope
jmp
jnp
fnstcw
sbb
mov
xchg
or
adc
out
aam
dec
addr16
aad
sar
add
pusha
stos
jge
shld
sar
daa
fdiv
cmp
jmp
cmps
xlat
out
add
fcom
mov
jb
pop
jno
mov
jmp
cmps
mov
add
push
mov
push
ret
xchg
mov
dec
sbb
pop
daa
ret
fadd
fs
inc
bound
add
test
xor
cmp
shl
addr16
jecxz
push
mov
jnp
pusha
jg
mov
push
jp
fcmovbe
jmp
push
push
icebp
stc
fldcw
xchg
jp
nop
call
jmp
cld
fcomp
sbb
cmps
or
sub
sbb
jo
add
ds
fisttp
loopne
cmp
xlat
push
ss
scas
sti
push
jg
and
mov
es
cmps
push
dec
dec
jns
out
fimul
jmp
cmp
lock
pop
div
vcvtsi2ss
in
cmps
pop
lds
leave
mov
(bad)
fst
ret
adc
jo
test
sub
xchg
dec
adc
cmc
xor
sub
cli
and
pop
jbe
ret
bound
or
imul
inc
retf
sub
or
into
add
stc
sbb
xchg
popf
xor
jl
or
sar
sub
lahf
and
dec
mov
cmp
bound
lds
dec
scas
lds
jo
ror
stos
sbb
nop
jl
xor
or
test
lods
pop
ret
inc
enter
test
lods
cmp
ja
std
or
out
inc
xchg
xor
push
stos
sub
test
xchg
cmp
or
adc
repz
or
enter
push
out
cmp
loope
ins
push
dec
mov
sbb
pop
sti
lahf
shr
out
arpl
jl
push
(bad)
in
dec
dec
std
xchg
xlat
test
push
xchg
lock
js
mov
imul
or
in
push
inc
mov
sbb
jle
pop
dec
sahf
(bad)
mov
sub
fdivr
mov
hlt
cld
sub
sbb
dec
dec
jae
jg
sbb
ins
push
mov
addr16
lea
test
retf
xor
cmps
xchg
sub
int3
inc
push
dec
sti
add
xlat
cmp
dec
mov
jae
inc
xchg
and
add
out
fild
outs
pop
inc
xchg
int3
sbb
cmp
popa
jne
mov
adc
cmp
fiadd
pop
repz
out
lods
lods
outs
mov
cmps
or
cmp
fcom
test
or
or
aam
pushf
stc
xchg
daa
push
jb
xchg
dec
stos
addr16
sar
pop
(bad)
fbld
xchg
jg
adc
mov
into
aaa
call
loope
cmp
mov
add
push
out
enter
mul
ficom
mov
int
cmp
push
mov
outs
mov
repz
retf
jo
leave
mov
in
or
aas
in
fdivr
cmps
daa
mov
mov
cmp
cmp
ror
jecxz
(bad)
arpl
jae
mov
fchs
inc
aas
xchg
xor
test
stos
jl
retf
fisttp
scas
stos
dec
popf
inc
adc
pop
jae
push
sbb
mov
jp
js
or
outs
push
and
ds
ins
aas
sub
push
fcmovne
dec
mov
loopne
and
sbb
xor
jnp
stos
dec
cmps
xchg
cmc
out
fist
subps
and
lods
idiv
stos
and
lea
mov
adc
mov
out
mov
xchg
mov
pop
mov
xlat
dec
iret
xor
mov
xor
in
jmp
add
mov
ret
adc
dec
(bad)
pusha
pop
or
inc
rcl
sub
xchg
xor
dec
int
sbb
mov
call
xchg
bound
cs
inc
dec
dec
ins
mov
gs
push
pop
int3
call
mov
sti
pop
(bad)
add
outs
lods
cmp
(bad)
fist
sub
sub
mov
lods
leave
ret
cmp
inc
and
test
aad
ficomp
jmp
das
inc
pop
sbb
sub
xor
test
and
xchg
mov
clc
sbb
mov
inc
sbb
xchg
mov
fadd
data16
push
mov
int3
sub
xchg
dec
neg
pop
pop
fiadd
outs
rol
mov
jno
call
jmp
push
ja
mov
imul
leave
add
dec
add
nop
loop
fbld
xor
std
add
mov
add
push
loop
pop
jle
mov
push
push
dec
je
or
popf
dec
idiv
push
loopne
mov
and
mov
jns
popa
jle
pop
ffreep
shr
xor
jne
dec
ins
movs
fwait
cmp
xor
pop
jb
punpckhdq
(bad)
retf
or
scas
push
int
dec
pop
movs
push
or
inc
sbb
jp
ret
scas
repz
dec
nop
lods
xor
dec
gs
je
jecxz
test
add
pop
jno
bound
dec
and
daa
int3
jnp
cs
das
into
inc
movs
dec
ret
ret
add
push
imul
lahf
fcom
in
pop
(bad)
or
or
sti
idiv
or
xor
push
ds
sbb
stos
gs
sar
in
pop
add
pop
imul
fistp
sbb
sti
inc
xchg
cdq
xor
cli
mov
movs
pop
xor
xchg
rol
fmul
stc
push
in
popf
gs
mov
(bad)
push
mov
mov
mov
xchg
dec
rcl
ret
jnp
outs
retf
ja
sub
ss
xlat
push
stos
fmul
pop
imul
ss
inc
repnz
push
jnp
push
xor
sbb
(bad)
xchg
or
push
mov
push
inc
lahf
pop
aam
cmp
mov
ja
adc
push
add
mov
add
outs
pop
jge
retf
pop
mov
xsha1
cmps
mov
gs
jne
dec
fnstsw
ror
dec
xor
test
sub
jl
mov
push
mov
mov
xor
cld
push
add
push
xchg
mov
jp
or
ds
and
jmp
(bad)
scas
mov
in
add
fst
jb
scas
mov
stos
adc
repz
dec
push
jp
sub
jmp
add
pop
add
pop
stos
je
and
int
push
pop
sbb
jns
pop
cmp
push
mov
leave
add
and
call
sub
cmp
lods
pop
lahf
cmp
or
icebp
push
xchg
retf
xchg
addr16
and
pop
xor
icebp
jnp
stos
fdivr
bound
sub
dec
adc
mov
(bad)
cmp
mov
dec
int
pop
pop
jmp
pusha
cs
mov
lods
loope
adc
xchg
sti
and
mov
sub
leave
cmp
fsubr
cdq
add
xchg
mov
dec
out
push
lahf
push
sub
or
sahf
inc
out
paddw
xchg
sbb
and
mov
loop
les
arpl
imul
jbe
pmulhw
(bad)
es
mov
or
out
das
test
mov
xchg
mov
push
repnz
sbb
pop
sub
inc
jmp
mov
xor
out
mov
rcr
fstp
xchg
test
xor
(bad)
arpl
je
inc
or
fwait
lds
mov
(bad)
jmp
jae
sub
fst
fild
hlt
imul
jb
cwde
imul
data16
stos
cmps
xor
fwait
lock
pop
adc
pop
cmc
inc
int3
add
retf
test
xchg
arpl
cmps
jl
jge
xor
enter
retf
xabort
inc
leave
jbe
and
inc
xchg
test
xor
fcomp
xchg
enter
ss
jmp
add
and
mov
popa
mov
ins
sti
pop
push
movs
push
cs
push
sbb
add
pop
xchg
pop
cmps
std
aaa
ja
xchg
xchg
cdq
fisubr
pop
or
fild
ror
adc
sub
imul
xor
adc
jmp
sbb
jbe
enter
pop
cdq
enter
pop
ja
pop
inc
in
(bad)
sbb
mov
imul
xchg
mov
out
cmp
cwde
add
out
cli
shr
push
pop
push
add
test
pop
ror
out
mov
cmp
test
aad
jae
repnz
jae
sub
aam
mov
nop
imul
xor
mul
pusha
addr16
jnp
jp
push
ins
vpunpckldq
mov
bound
imul
dec
mov
pop
push
fadd
jns
xor
mov
fsubr
jecxz
mov
or
sub
mov
(bad)
imul
add
stos
inc
loope
xor
cmps
ret
push
sub
dec
ror
jl
cmp
and
and
das
pop
sbb
cmp
into
dec
fcmove
cld
test
aad
mov
enter
inc
cmp
test
sahf
cmp
stos
into
add
(bad)
push
cli
xor
push
jp
push
jge
sbb
mov
push
into
xchg
mov
lods
fadd
add
cmp
pop
ret
call
sub
sti
inc
and
out
(bad)
fldcw
cld
mov
shr
sbb
inc
mov
or
inc
out
dec
xchg
pop
pop
inc
adc
jns
lock
or
iret
jo
lods
test
js
add
sub
addr16
sbb
(bad)
or
add
and
rcr
jno
pusha
xlat
das
ret
loopne
dec
inc
test
(bad)
push
add
jb
popf
jbe
int
popa
and
lds
xor
ror
nop
or
add
shl
ins
pop
mov
test
sbb
sbb
mov
jp
fsub
xlat
in
int3
test
mov
add
ficom
inc
jo
fs
movs
call
sub
inc
sbb
jo
xor
cmp
je
adc
add
or
popa
repnz
ror
ret
out
push
and
adc
shr
fnsave
add
out
(bad)
lds
adc
fnstcw
cmp
fimul
ja
push
repz
jmp
jb
pop
xchg
into
jecxz
inc
lods
pop
fsubrp
pop
pop
xchg
scas
movlps
ins
mov
jecxz
sbb
pop
sbb
inc
jno
inc
(bad)
enter
rcl
sub
cli
rcl
nop
push
popa
jle
cdq
shr
clc
sbb
jecxz
xor
imul
sbb
scas
or
test
(bad)
cld
xchg
ds
outs
adc
sbb
dec
pop
sub
jnp
xor
jecxz
cwde
mov
(bad)
loope
adc
sub
or
lods
sub
aam
and
lods
sub
mov
push
pop
fidivr
inc
cmp
retf
arpl
scas
sbb
mov
or
fadd
jb
cmp
aad
retf
or
aas
rol
mov
or
mov
xchg
outs
lahf
push
jl
mov
es
mov
jo
mov
or
or
push
aas
adc
mov
mov
ret
outs
int
enter
dec
pop
retf
push
xor
mov
into
push
add
daa
pop
popf
sub
or
push
sbb
jae
mov
shl
(bad)
shl
sbb
cmp
or
add
arpl
inc
dec
cwde
imul
loope
sub
or
shl
les
mov
(bad)
xor
clc
add
bound
push
and
cdq
mov
inc
or
mov
shr
movs
hlt
pop
imul
(bad)
jge
mov
pushf
inc
add
push
add
mov
div
jmp
cwde
mov
push
mov
or
mov
push
(bad)
(bad)
pusha
mov
std
and
push
push
xor
fistp
pop
mov
pop
aaa
mov
push
push
addr16
jp
pop
pop
and
cmp
movs
adc
cmp
outs
adc
test
pop
sti
xor
xor
mov
and
mov
mov
jno
cmp
xchg
mov
jo
add
cmc
adc
(bad)
sbb
push
inc
popf
mov
sub
les
mov
mov
and
sbb
jb
clc
fs
fld
into
xor
lahf
xchg
das
aaa
push
das
(bad)
jnp
or
or
sub
and
push
xor
push
mov
mov
mov
stc
mov
dec
icebp
or
mov
mov
jmp
retf
sar
mov
pop
je
pop
cmps
add
push
and
in
pushf
sub
stc
test
pop
mov
pushf
mov
mov
push
mov
cdq
je
pop
scas
test
pop
nop
push
push
sub
jno
cmp
mov
pushf
or
cmps
mov
mov
rcl
cmps
adc
mov
fdivrp
pop
jmp
fld
jg
call
dec
jp
fistp
mov
xchg
jns
les
ins
enter
mov
popa
test
dec
pop
sahf
frstpm(287
mov
popa
sub
inc
movs
test
addr16
or
and
sbb
mov
sub
jae
ins
(bad)
lods
pop
cmp
repnz
ficomp
popa
scas
cmps
fs
icebp
ss
or
test
and
fmul
lea
xor
in
inc
imul
test
and
imul
cmps
dec
int3
leave
std
push
xor
sbb
mov
pop
mov
push
add
das
push
lahf
cmp
adc
in
lea
cld
neg
adc
sub
inc
xchg
repnz
jae
dec
sub
jns
in
inc
ss
jae
je
mov
adc
jge
out
mov
imul
inc
pop
mov
rcr
xor
pop
lahf
in
pop
out
inc
fwait
hlt
in
jl
ja
jecxz
xchg
stos
jmp
out
jae
sbb
dec
dec
jne
inc
imul
jle
inc
fsub
push
pop
mul
cli
xchg
in
ficomp
xor
jb
mov
imul
mov
retf
jmp
loope
inc
sar
out
fidivr
pop
adc
sub
ja
call
fmul
mov
daa
xchg
pop
fbstp
inc
add
(bad)
jno
cli
xchg
fisubr
repnz
sti
adc
mov
outs
pop
inc
iret
sub
(bad)
push
fisubr
leave
xlat
push
sub
cdq
pop
jmp
inc
mov
add
mov
fwait
retf
xchg
sbb
xor
fisttp
adc
jle
int
xlat
(bad)
cmp
(bad)
push
stc
(bad)
repnz
xor
mov
dec
add
(bad)
enter
aaa
call
adc
int3
jmp
push
sub
and
add
sti
int
mov
test
ret
out
lea
mov
pop
pushf
ret
jno
or
les
(bad)
retf
jecxz
popf
nop
lods
in
and
pop
in
mov
jns
adc
daa
cmp
test
mov
pop
and
sub
pushf
xchg
fwait
pop
aam
pop
cmp
inc
outs
mov
inc
inc
jecxz
push
stos
mov
xchg
cmc
(bad)
cmc
cmp
pop
stos
inc
sar
ja
adc
push
add
mov
add
les
adc
test
loop
int
(bad)
scas
jnp
inc
or
addr16
mov
ficom
sub
mov
mov
popa
push
adc
adc
aas
mov
daa
inc
pop
cmp
retf
dec
stos
lahf
mov
mov
mov
sbb
das
sub
xor
cmp
mov
sub
cmp
fimul
mov
cmps
pop
cmp
xor
popf
mov
inc
jge
adc
inc
mov
(bad)
cmps
fstp
and
(bad)
std
aam
xchg
mov
ret
shr
push
loop
push
dec
or
mov
add
push
xchg
and
xchg
test
mov
mov
call
cmp
xchg
add
add
scas
adc
(bad)
cmp
or
rol
retf
cli
sbb
jns
scas
adc
sbb
xchg
cmc
rol
xchg
ins
mov
out
jnp
fwait
stos
inc
mov
mov
(bad)
sub
in
mov
fldpi
arpl
retf
pop
xor
xor
loopne
jns
pusha
push
stos
or
pop
and
sub
jecxz
loopne
inc
aas
outs
out
shr
xchg
sbb
push
pop
xor
mov
inc
retf
test
jg
scas
popf
mov
pushf
fxtract
or
out
mov
inc
mov
test
(bad)
pop
push
call
xchg
jb
stos
test
dec
cmp
sbb
aad
jno
add
das
dec
push
outs
ret
cmp
daa
xor
inc
push
xor
pop
cmp
in
(bad)
imul
jno
int
mov
sub
lea
pop
xchg
rol
pop
xchg
dec
int3
inc
adc
test
sbb
in
push
stos
xor
dec
jbe
sbb
or
in
sub
shl
fstp
div
xor
adc
cmp
xor
stos
call
pop
mov
mov
push
das
push
aaa
inc
inc
mov
js
inc
test
mov
mov
mov
outs
stos
call
inc
out
push
loopne
and
mov
les
mov
pop
nop
ds
cmp
xchg
and
cmc
mov
jmp
or
scas
add
lods
mov
in
sbb
shl
inc
repnz
push
int3
fisttp
cs
jbe
mov
cmp
retf
jmp
les
mov
mov
aad
mov
in
jl
sbb
xor
enter
aad
inc
sbb
xor
sub
cmps
fsub
mov
add
lods
add
bound
sar
mov
idiv
sub
movs
lods
mov
mov
fmul
call
adc
jo
aad
ror
jge
test
(bad)
loope
data16
pop
ret
xchg
test
sub
aaa
xchg
cmp
in
push
loope
xor
fisttp
mov
dec
adc
nop
xchg
push
movs
cmc
push
ins
push
out
ret
test
lahf
pop
add
out
les
mov
cmp
pop
retf
mov
jae
shl
je
xor
sbb
dec
lods
push
mov
cdq
(bad)
inc
fcom
(bad)
cmp
adc
mov
xchg
push
sub
inc
jmp
ret
loopne
es
push
xor
and
or
cmc
test
jnp
dec
sti
add
imul
jge
xor
out
in
sbb
cdq
sub
int3
daa
jne
inc
test
out
in
xchg
xor
inc
cwde
cli
sub
lods
push
sbb
stc
fsubr
adc
cmp
jae
push
out
mov
xor
punpckhwd
repnz
dec
in
or
enter
push
les
mov
jnp
sbb
dec
inc
stc
jp
movs
push
xchg
xchg
std
(bad)
arpl
icebp
push
pop
add
ror
cmc
mov
outs
out
sub
adc
in
xchg
icebp
sub
adc
xor
pavgw
pop
js
ss
rcl
test
cwde
sbb
lods
movs
imul
not
mov
test
imul
cmovns
sub
fbld
xchg
add
mov
jnp
mov
mov
aaa
lahf
jns
das
(bad)
hlt
cmp
std
cli
lods
aaa
retf
repnz
fnstsw
xor
cmps
add
jnp
xchg
movs
dec
sub
in
out
in
mov
fdiv
nop
daa
push
clc
frstor
in
pop
in
in
repz
call
jg
or
fistp
imul
xor
add
aaa
test
inc
adc
inc
add
mov
inc
mov
aas
outs
and
pop
sbb
pop
cld
les
push
or
rcpps
sahf
in
adc
fistp
cmp
clc
jo
sar
popa
repnz
mov
fisttp
mov
jp
add
push
sbb
pop
inc
inc
pushf
lea
sub
cmp
sahf
xchg
and
jge
push
mov
push
pop
dec
movs
(bad)
mov
jp
pop
add
xchg
retf
mov
imul
mov
in
xchg
leave
das
loopne
ret
cmp
nop
dec
shl
outs
sub
scas
call
adc
add
movs
fbld
mov
xor
add
pop
mov
iret
xor
sub
inc
xlat
xor
lahf
scas
add
cwde
retf
or
pop
fs
xor
mov
mov
mov
mov
cwde
std
ss
(bad)
rcl
call
retf
mov
ds
addr16
jmp
dec
dec
movs
cmps
xchg
push
and
jne
sub
or
mov
leave
movs
aam
retf
stc
jb
dec
ficom
jnp
push
in
int3
nop
xchg
jle
jge
mov
add
shr
out
retf
aaa
jecxz
jne
aad
mov
stos
sub
xor
ss
push
sar
(bad)
out
call
je
pop
inc
mov
jl
inc
inc
cmps
(bad)
or
mov
stos
rol
inc
mov
xor
and
dec
sub
push
inc
(bad)
imul
sub
loopne
mov
jl
mov
fild
pusha
or
sub
xor
or
movs
jo
adc
ror
sbb
add
add
mov
int3
data16
cmp
or
push
ja
jp
dec
add
fadd
and
inc
pop
mov
xor
xor
jmp
in
push
clc
gs
sbb
cli
xor
movs
popf
adc
adc
lds
iret
pop
pop
or
xchg
sub
jecxz
and
and
test
jbe
int3
sub
sbb
xor
stc
leave
adc
sahf
push
iret
dec
pop
push
(bad)
fisub
or
inc
out
jno
xchg
test
mov
mov
cmp
xlat
mov
(bad)
out
and
xor
gs
nop
outs
(bad)
out
ror
push
pushf
rol
cmp
loop
add
and
or
jle
and
fs
mov
(bad)
fst
(bad)
retf
jae
loopne
icebp
or
pop
sbb
and
inc
pop
scas
mov
and
scas
adc
rcr
leave
dec
movs
icebp
iret
dec
or
add
cmp
cdq
mov
fisubr
dec
mov
aas
and
cmps
dec
or
mov
gs
pop
mov
in
fistp
adc
mov
inc
(bad)
jge
loope
jne
outs
enter
in
stos
leave
xor
movs
ins
xor
out
ins
push
or
stos
ja
jne
fldenv
ins
out
inc
mov
mov
pop
cmps
add
inc
in
das
xor
shl
dec
and
push
pop
mov
sub
test
fnstcw
add
fist
nop
aas
enter
xor
xor
cmc
mov
jno
adc
lods
mov
xchg
pop
and
vmaxps
inc
and
sub
hlt
add
movs
ret
jbe
or
adc
or
std
(bad)
ret
pop
shl
or
or
lods
or
inc
clc
fs
lods
arpl
mov
sbb
ja
(bad)
leave
in
xchg
push
call
adc
outs
ret
jno
add
(bad)
(bad)
mov
shr
mov
dec
inc
retf
mov
or
sub
(bad)
test
push
mov
pop
pushf
inc
add
mov
or
xchg
adc
pusha
add
mov
out
jae
jb
sub
dec
inc
sbb
dec
mov
push
xor
in
imul
je
mov
xlat
xor
cld
inc
sub
mov
test
push
addr16
out
movs
jmp
pop
stc
xchg
adc
call
jge
rol
adc
lahf
mov
repnz
push
fidivr
inc
(bad)
sbb
mov
dec
scas
imul
loope
fiadd
mov
xchg
les
lahf
or
cs
rcl
into
xchg
lea
(bad)
inc
pop
stos
or
lods
jl
add
xchg
pop
jmp
mov
(bad)
pop
push
dec
imul
test
xor
mov
mov
cmp
inc
pop
les
pmullw
lahf
clc
int
jnp
mov
sub
inc
out
mov
xlat
std
outs
and
loop
idiv
aaa
ins
mov
stos
(bad)
cmp
dec
sub
imul
push
retf
cmp
mov
jle
adc
in
arpl
rcl
jns
push
xlat
xchg
neg
push
cwde
inc
stc
shl
inc
and
pop
cmp
jmp
xchg
pop
cmp
idiv
cmp
pusha
clc
dec
inc
fisubr
je
sbb
stos
push
push
cwde
and
hlt
jmp
data16
cmp
dec
mov
and
jnp
lock
fcmove
cmp
dec
test
lods
lea
jb
mov
jl
popa
adc
xchg
cmps
jns
cmc
or
fsubr
loope
out
adc
retf
push
sub
dec
rol
nop
gs
ja
stos
sub
test
and
outs
iret
inc
push
test
iret
dec
lahf
aas
mov
jns
test
ins
iret
into
addr16
cmps
mov
arpl
rol
mov
and
mov
sbb
push
shl
in
adc
aad
jne
fwait
adc
xchg
mov
adc
mov
push
adc
push
cld
(bad)
dec
add
mov
iret
in
daa
(bad)
mov
rol
movs
fs
cmp
add
adc
shl
div
adc
sbb
add
dec
retf
fwait
xor
rol
test
lock
sbb
dec
xchg
jg
stos
jle
(bad)
inc
pop
(bad)
mov
xchg
or
push
push
or
xchg
cmp
cmp
dec
lods
gs
sbb
dec
mov
popa
stc
sbb
ret
(bad)
leave
(bad)
pop
sub
or
ds
sub
test
inc
xchg
xchg
nop
push
pop
pop
stos
jmp
imul
cmp
and
ja
and
imul
add
sub
cmps
ss
jge
stc
mov
mov
ins
cwde
or
ret
xchg
(bad)
add
ds
inc
jp
psubd
retf
jnp
(bad)
das
bound
xor
cld
fs
push
jmp
(bad)
dec
mov
and
pushf
dec
xchg
gs
mov
scas
xor
pop
gs
pop
data16
aad
fisubr
dec
jecxz
jmp
pop
dec
adc
jmp
mov
jl
fisubr
cdq
cli
(bad)
outs
fwait
dec
sbb
push
inc
push
push
sbb
fidiv
les
ss
dec
push
aad
loope
mov
cdq
(bad)
out
dec
int
jnp
and
popa
adc
lahf
sar
repz
sub
into
ror
icebp
clc
leave
out
dec
cli
mov
xor
fwait
cmp
sub
stc
push
mov
jg
mov
scas
jne
fadd
fild
push
sar
fisub
shr
(bad)
cmp
add
stos
movs
rcr
inc
dec
les
jmp
test
xor
adc
mov
push
add
xchg
pop
add
pop
push
fild
jecxz
adc
stos
mov
loope
rcr
mov
jmp
push
pop
dec
and
outs
xor
mov
mov
xlat
sub
jmp
jns
scas
sbb
cld
movs
jp
cdq
ror
xchg
mov
mov
lods
mov
mov
mov
mov
pop
jb
and
push
jns
adc
mov
add
popf
xchg
into
xor
lods
xchg
retf
cld
sub
jle
adc
adc
xchg
and
jecxz
or
cmp
call
fcmovne
push
std
pop
leave
icebp
inc
pmullw
in
rcl
out
daa
gs
pop
push
daa
jbe
mov
inc
sbb
movs
fs
sahf
iret
mov
pop
ins
sti
in
lds
push
in
jbe
rcl
cdq
jmp
mov
add
adc
inc
(bad)
xor
lds
dec
sbb
imul
in
rcl
mov
mov
mov
lods
pop
jge
cwde
cmc
push
aaa
push
and
xchg
push
scas
jb
ins
jp
jge
cmp
movs
and
pop
fild
das
jg
sub
xlat
or
aad
push
push
rcr
adc
iret
sub
into
fwait
stc
mov
dec
idiv
cmp
xchg
add
mov
adc
outs
aas
xor
cmps
push
stos
mov
outs
rcl
add
bound
clc
push
jg
push
popf
loopne
sbb
test
jmp
or
xchg
and
mov
addr16
test
shl
mov
jecxz
dec
shl
xchg
mov
dec
push
mov
dec
out
ret
movs
pop
fsub
fiadd
mov
test
adc
inc
xor
dec
ss
lods
pop
dec
int
add
lds
jne
sti
inc
cmps
mov
sub
je
inc
push
rcl
test
or
out
jmp
fiadd
in
add
jle
out
jo
fild
jbe
cmp
ret
xchg
pop
out
hlt
mov
mov
aam
icebp
cmps
out
cmp
icebp
into
pop
mov
mov
or
(bad)
mov
or
mov
dec
mov
(bad)
dec
fidivr
add
in
push
and
jns
jl
mov
rcl
cmp
loopne
cmp
js
mov
daa
ins
jle
xor
dec
mov
and
mov
mov
leave
jg
(bad)
mov
dec
or
mov
movs
outs
stos
(bad)
pop
xor
push
int3
repnz
lds
xchg
(bad)
push
add
inc
cmps
mov
mov
or
test
mov
lods
inc
and
call
jl
stc
sahf
pop
mov
cmps
(bad)
push
hlt
cmp
imul
movs
cli
das
mov
pop
scas
sbb
pushf
and
pop
mov
dec
iret
pop
clc
sbb
xchg
jnp
icebp
iret
xor
sbb
dec
jl
jbe
sbb
ja
push
add
and
call
cmp
pop
ror
sti
cmp
adc
cmova
add
in
adc
pop
enter
idiv
neg
and
and
aam
call
jnp
adc
add
arpl
add
shl
dec
cmp
fst
adc
pop
jecxz
(bad)
test
loope
xchg
or
push
neg
add
sub
rcl
jecxz
lea
adc
mov
repnz
sar
iret
neg
dec
inc
inc
cmp
imul
dec
pop
add
dec
int3
cld
stos
jmp
or
sbb
sub
out
ins
es
cmc
mov
sub
outs
icebp
push
sbb
sub
mov
shr
push
push
aam
mov
or
dec
out
jo
fadd
mov
dec
fsub
add
adc
adc
out
mov
xchg
lods
jmp
pushf
xlat
imul
icebp
mov
in
jmp
int
mov
aas
nop
inc
push
test
jb
loopne
(bad)
and
movs
fsub
jbe
jnp
mov
imul
cwde
outs
(bad)
fs
repz
dec
ror
xchg
clc
mov
mov
hlt
leave
push
push
or
pop
cmps
sub
int
in
mov
mov
jne
loop
inc
push
or
jne
and
pushf
jp
(bad)
mov
and
dec
pop
shl
movs
fldenv
daa
pop
out
sub
add
mov
repnz
or
fnstenv
lea
cmp
lds
hlt
sub
mov
(bad)
ja
adc
adc
aas
dec
add
loopne
push
xor
push
test
mov
or
mov
and
inc
syscall
dec
add
adc
out
js
xchg
lods
cdq
sbb
loope
xor
ds
inc
push
pop
test
dec
pop
mov
dec
gs
mov
xchg
les
xchg
pop
xor
add
inc
clc
es
aam
lea
ret
mov
adc
adc
adc
sahf
push
hlt
aad
imul
ss
xchg
ret
mov
xchg
(bad)
mov
sbb
push
mov
(bad)
fcom
xor
or
sbb
jmp
mov
add
inc
cmp
inc
mov
std
push
mov
push
loop
add
(bad)
in
arpl
cli
sub
mov
das
mov
out
add
cmps
dec
ss
dec
add
and
adc
stc
jge
sub
icebp
mov
sbb
imul
shr
repz
jb
pop
enter
push
dec
mov
xchg
xor
aas
loopne
shl
adc
imul
ret
push
dec
shr
sub
scas
pushf
push
inc
sub
sbb
retf
cmp
xchg
sub
mov
pop
retf
ds
stc
out
sub
ds
cwde
push
fcom
add
jne
xchg
pusha
clc
or
sub
add
aaa
add
fs
(bad)
and
dec
aam
test
push
popa
retf
shl
mov
xchg
scas
rcr
test
cmp
ss
rcl
jo
mov
popa
and
push
sar
and
hlt
push
inc
push
scas
add
in
aaa
mov
inc
in
cmp
or
movs
xchg
sub
xor
push
xor
int3
mov
int3
inc
push
jae
pop
inc
mov
jnp
xchg
mov
and
bound
cli
inc
jecxz
pop
ins
call
imul
cmps
mov
aam
pop
mov
in
push
sub
lds
push
stc
or
loop
and
outs
jbe
test
(bad)
outs
stos
das
leave
mov
push
xor
mov
loopne
push
jne
dec
cwde
push
jecxz
jl
test
stos
cmps
aam
cdq
lods
push
enter
(bad)
movs
popf
jbe
xor
retf
sbb
mov
imul
xor
or
std
in
or
xor
call
loope
lock
ret
fstp
fcom
or
jno
mov
dec
fdivr
aam
lods
pop
test
fldcw
(bad)
lods
xchg
ret
(bad)
fs
je
ja
int
(bad)
cmps
push
adc
int
aam
jno
pop
movs
fnstcw
adc
ins
retf
fstp
adc
ret
mov
sub
xor
inc
test
shr
sub
div
jmp
jbe
inc
sbb
jle
mov
ds
or
inc
sbb
(bad)
cdq
mov
push
dec
cmc
fbld
cmp
clc
rcl
out
add
aam
cmp
mov
test
fiadd
inc
xlat
jbe
jo
mov
mov
pop
mov
leave
test
mov
jmp
sub
or
inc
in
mov
aas
retf
repz
jl
stos
dec
cmps
(bad)
sub
inc
xchg
push
aas
(bad)
or
dec
push
xchg
hlt
xchg
xchg
xchg
mov
pusha
pop
xor
xlat
mov
data16
loope
pop
lea
push
jo
pop
jo
dec
inc
pop
loopne
ret
fdivr
sub
and
sub
mov
pop
push
outs
movs
mov
jo
aaa
rcl
lahf
jb
mov
add
sbb
pop
push
cmp
push
adc
push
popf
daa
mov
jno
sbb
loope
outs
outs
mov
mov
loop
aam
dec
and
test
mov
mov
xor
jl
popa
iret
xor
aam
and
adc
pop
cmps
lahf
cmps
sbb
lods
jge
adc
mov
test
adc
fcmovbe
ins
cmp
push
repnz
pop
popa
inc
iret
xchg
sub
gs
inc
sub
lahf
ffree
xchg
cld
bnd
cmp
dec
retf
jl
pop
sbb
inc
pop
mov
push
into
cdq
mov
jle
outs
loope
fldcw
push
leave
ret
mov
push
dec
mov
xor
adc
dec
pop
fiadd
fidivr
cmp
in
ficom
inc
mov
idiv
mov
push
fld
stos
test
je
pop
test
(bad)
movs
ret
lds
sti
hlt
clc
push
cli
out
scas
ds
test
adc
jg
mov
imul
lahf
or
mov
in
lds
cld
inc
jecxz
cs
mov
test
cmp
test
adc
loop
es
stos
cmp
push
xor
iret
inc
jl
stos
push
jno
out
sbb
cs
in
xchg
inc
cwde
jnp
jp
sub
imul
(bad)
in
lock
ins
lea
sbb
repz
mov
movs
fcomp
inc
pop
mov
cmps
jg
aad
adc
mov
paddb
dec
xchg
icebp
xchg
dec
ja
inc
scas
sub
outs
outs
test
test
adc
jge
or
in
and
jno
and
movs
pop
jge
jbe
push
add
cmp
(bad)
icebp
cdq
xor
pop
jl
es
mov
fcmovb
fsub
jl
sbb
popa
ins
push
inc
adc
xchg
mov
xor
push
jbe
mov
cmp
mov
enter
movs
ficom
lds
ret
in
jae
xor
pop
pushf
sub
iret
pop
nop
cmps
or
mov
retf
iret
js
pop
and
sbb
jmp
sar
jbe
jmp
out
add
fimul
daa
dec
or
jge
(bad)
dec
mov
jbe
leave
popw
jmp
ins
cmp
mov
push
and
xchg
xchg
sbb
leave
sub
xlat
pop
jp
jl
xor
mov
jmp
push
arpl
lods
mov
(bad)
(bad)
mov
lea
xchg
rol
(bad)
sbb
mov
fmul
rcr
dec
cmp
push
and
adc
loop
int3
popa
fdivr
loope
xchg
stc
fwait
ja
sub
(bad)
jmp
stc
or
(bad)
xchg
loop
mov
inc
rcr
popf
and
retf
cmc
pop
add
(bad)
(bad)
mov
mov
xchg
sub
push
ds
add
sub
test
pop
inc
mov
and
bound
cmps
icebp
scas
int
mov
xchg
dec
test
into
imul
or
aad
hlt
(bad)
cmp
mov
clc
mov
add
pop
outs
outs
cmp
pop
lds
jns
pop
inc
xor
pop
into
sub
inc
push
scas
xor
(bad)
adc
mov
hlt
call
mov
sub
inc
arpl
movs
ds
dec
mov
mov
push
mov
mov
and
nop
cdq
and
popa
fdivrp
int3
repz
arpl
aad
lods
into
jne
xlat
jmp
(bad)
sub
adc
movs
sbb
mov
jbe
es
fistp
stos
inc
lea
out
push
mov
int3
mov
mov
adc
pop
lahf
add
mov
fild
jb
xor
js
mov
or
lods
test
fsub
mov
jl
push
mov
pop
aad
pop
mov
sub
xor
add
mov
mov
adc
jo
xchg
dec
or
jmp
enter
sub
inc
push
imul
jb
inc
dec
loop
(bad)
jnp
in
shl
push
add
leave
sub
cmp
fisubr
jo
mov
(bad)
xchg
movs
mov
in
and
or
sahf
in
adc
jbe
stos
jmp
aaa
xor
aad
inc
sbb
push
mov
(bad)
cmps
addr16
ja
cmp
mov
push
mov
cmp
int
mov
inc
jb
mov
repnz
or
pop
jle
mov
jmp
lds
jb
adc
mov
push
cmc
stos
jne
xor
mov
sbb
in
inc
es
fucomip
and
push
popa
lods
xchg
mov
mov
dec
jg
retf
test
mov
mov
and
out
ja
dec
or
xchg
shr
shr
jmp
or
test
sbb
mov
iret
xlat
enter
mov
retf
ds
lods
sub
popa
jle
adc
in
cmp
out
inc
inc
es
dec
lea
nop
hlt
lock
add
shr
xchg
add
inc
unpckhps
mov
cmp
xor
mov
jns
fadd
ret
jp
addr16
out
dec
retf
scas
or
jle
and
fstcw
pop
aas
adc
pusha
add
mov
ins
icebp
leave
movs
jl
cmp
mov
stos
test
pop
out
jae
xor
rcl
mov
mov
scas
sbb
add
adc
repz
jno
icebp
scas
inc
pop
les
or
sbb
and
push
and
push
rcr
movs
xchg
int3
scas
data16
shl
out
ret
or
dec
push
icebp
sbb
pop
loope
cs
xor
cwde
aaa
xchg
jb
inc
gs
jge
mov
jno
mov
retf
pushf
mov
cld
cld
sub
cmp
push
push
leave
pop
in
xchg
adc
scas
xchg
mov
rol
adc
mov
sahf
cmp
pushf
jno
retf
out
dec
adc
mov
adc
jb
adc
inc
cmps
pop
sbb
test
ins
pop
or
aam
imul
in
neg
or
jo
loop
jmp
es
jb
inc
ins
xchg
rol
push
shl
push
iret
and
mov
push
jmp
push
(bad)
jnp
rcr
cmp
push
test
push
pop
repz
xor
fdivr
pop
imul
mov
cwde
iret
test
bnd
mov
into
add
xor
(bad)
and
test
jno
jp
mov
jl
std
fld
retf
mov
sbb
mov
or
out
push
lds
arpl
inc
cwde
jp
xor
mov
jmp
sub
mov
test
push
sub
mov
inc
mov
sub
adc
out
dec
ins
push
jnp
pop
je
loop
ffreep
and
scas
push
or
mov
je
push
retf
gs
mov
inc
dec
and
fidivr
fsub
or
pop
sub
retf
xlat
xor
(bad)
mov
(bad)
retf
push
or
jmp
add
pop
cmp
stos
cwde
add
movs
or
push
mov
test
aas
sbb
scas
loope
gs
inc
daa
test
fsubr
add
enter
lods
ja
cdq
aad
fdivr
jae
(bad)
xchg
adc
sbb
sub
lea
popf
lock
mov
ja
and
ror
pushf
cld
(bad)
test
cmovle
dec
dec
test
adc
jns
cmp
outs
adc
in
add
add
xabort
popa
adc
jp
xchg
cmp
loopne
inc
mul
xchg
loope
pop
outs
and
inc
cli
rcl
push
or
cs
xchg
aad
popf
and
lods
jle
pop
(bad)
push
shl
out
lods
bound
fmul
in
sti
stos
fcomi
sbb
ss
jl
inc
ror
nop
push
xchg
cmp
mov
xor
jl
or
ret
dec
lods
add
fcomi
xchg
jl
pop
cmc
lds
push
movs
outs
ror
shl
ds
or
mov
in
cs
in
repnz
mov
sub
loope
je
loopne
inc
loopne
ss
sub
or
aam
xor
popa
imul
fisub
outs
out
sbb
xor
fnstcw
xchg
daa
shl
(bad)
push
inc
xchg
sar
in
or
jo
xchg
out
jmp
push
cmp
scas
xor
in
ins
aad
movs
jnp
outs
cmp
(bad)
shl
jl
or
shl
lods
jg
xchg
test
inc
mov
push
xor
in
ret
retf
pop
mov
outs
push
or
xor
ins
jp
xor
cmp
adc
add
push
lods
cmc
jmp
mov
adc
sahf
sub
pop
push
iret
shl
sbb
and
ret
les
sub
inc
ror
push
mov
cmc
fsub
stos
xor
cli
push
fs
pusha
push
and
shl
sbb
ins
pusha
mov
dec
in
out
xor
jecxz
leave
adc
xlat
dec
jg
std
cli
out
jecxz
mov
lods
movs
pusha
cmps
xor
(bad)
ds
cwde
int3
mov
mov
and
mov
sbb
fstp
jnp
dec
or
and
jle
bound
js
pushf
or
mov
xchg
pop
push
push
push
leave
es
jne
jge
or
xor
addr16
cmp
mov
and
rcr
cmp
(bad)
pop
das
and
cwde
add
jne
sub
movs
jge
cmp
mov
test
aaa
push
into
lds
stos
and
daa
std
repz
cld
adc
inc
jecxz
rcr
loope
std
out
jmp
ins
in
push
inc
push
fdiv
pusha
imul
ins
mov
cdq
push
popf
mov
scas
xchg
dec
jbe
movs
pop
ds
jns
movs
into
xchg
(bad)
mov
sbb
mov
mov
ss
add
jmp
mov
pop
and
lods
lods
aaa
sub
dec
test
jno
and
jo
cs
and
pop
sbb
inc
dec
or
imul
xor
scas
in
fld
ret
cdq
xchg
and
and
and
(bad)
lahf
cwde
(bad)
mov
nop
aas
pop
and
push
xor
adc
jp
push
fwait
cmps
arpl
sub
push
and
xchg
push
adc
xor
dec
aas
adc
xor
jg
in
and
pop
pop
(bad)
pop
es
js
sar
add
cmps
(bad)
fisubr
cmp
shr
ja
xchg
lods
test
out
aad
xor
int
mov
imul
test
fidiv
dec
and
das
inc
inc
push
jg
ficom
call
xchg
mov
xlat
inc
stos
xchg
mov
mov
addr16
lea
inc
js
jmp
or
add
ror
mov
jmp
xor
nop
fsubr
(bad)
imul
pop
xor
fmul
hlt
inc
dec
jp
dec
or
cdq
jecxz
mov
pop
mov
or
movs
xlat
fwait
lock
mov
or
and
dec
cmp
cmp
cmp
cmp
fbld
movs
lods
stos
ins
adc
mov
adc
ret
xchg
lods
push
(bad)
sub
in
cmp
loopne
sti
and
rol
add
jp
movs
or
movs
out
pop
sbb
test
fxam
and
push
sub
out
lahf
cmps
mov
mov
out
dec
cmps
pop
and
push
add
push
scas
jmp
cmp
idiv
push
jmp
repnz
addr16
fs
push
cmc
dec
mov
aaa
(bad)
adc
jmp
ret
dec
aas
adc
and
je
cmp
stc
pop
push
dec
mov
clc
repz
jbe
xchg
pop
push
lock
jmp
push
jmp
repnz
dec
add
xchg
inc
mov
pop
or
inc
pop
nop
(bad)
(bad)
cmps
inc
dec
mov
jae
and
pop
lock
jle
cmp
stos
or
push
(bad)
shl
and
sbb
imul
(bad)
out
bound
push
cmp
xchg
mov
and
cmc
jge
mov
jecxz
fcmovnbe
das
out
jl
mov
(bad)
or
shl
add
xchg
arpl
shl
fdivr
pop
lods
cmp
aad
and
rcr
sbb
rcl
aad
cmps
ret
push
and
or
mov
sbb
and
pop
daa
xchg
rol
stos
outs
sbb
and
and
mov
pop
jns
test
mov
mov
dec
fld
jnp
mov
xor
mov
jb
jno
loope
pop
jl
mov
icebp
icebp
enter
cmp
xor
scas
leave
ins
ins
jg
cmc
in
or
stc
das
lods
and
and
mov
mov
pop
ds
xor
jb
fstp
mov
jmp
hlt
xchg
push
mov
pop
sti
xor
test
mov
js
push
jg
or
fiadd
mov
push
adc
mov
dec
xchg
pop
xor
nop
mov
dec
jecxz
xor
sbb
iret
adc
ss
mov
push
cmp
add
(bad)
fst
sub
movs
ins
fwait
pop
jns
je
aam
lock
jle
cmp
js
into
loope
and
ins
adc
cdq
mov
and
adc
ins
adc
jnp
pop
adc
xchg
call
cmps
mov
sbb
lods
(bad)
call
add
aas
cmp
arpl
dec
cmp
add
adc
mov
mov
out
add
bound
xor
sti
into
ins
stc
push
neg
push
push
in
adc
mov
add
outs
imul
test
jg
repz
into
mov
adc
inc
lds
cmp
imul
cmp
(bad)
jmp
ds
fst
sub
xchg
and
cmp
aad
outs
cmp
adc
add
outs
xor
mov
dec
jbe
popa
mov
xor
add
pop
cmp
popf
jl
cmp
jnp
sub
jge
push
movs
popa
mov
xchg
or
gs
call
fwait
and
xor
mov
(bad)
les
inc
ins
xor
sub
ins
stos
inc
cmps
and
xchg
mov
lods
arpl
cmp
xchg
mov
jnp
xchg
(bad)
xor
ret
mov
xor
jmp
mov
mov
xlat
fwait
xchg
pop
adc
and
loop
jmp
add
jp
push
mov
adc
adc
das
lds
adc
std
xchg
mov
hlt
pop
xchg
repz
jge
xchg
xor
xor
pop
add
dec
cld
or
shr
lds
sub
rcl
clc
mov
(bad)
and
adc
mov
ret
imul
dec
sar
jp
test
and
mov
inc
push
xor
or
xchg
add
jg
adc
lods
hlt
cmp
test
mov
pop
rcl
jo
xor
in
jle
loopne
(bad)
lahf
sub
jp
or
stc
stos
xchg
loop
ja
mov
xchg
xor
mov
out
lds
jle
rcl
in
jle
sbb
call
cmp
sub
fstp
in
ret
dec
dec
dec
jl
int
mov
int
(bad)
sub
xchg
fwait
or
add
paddw
mov
adc
mov
(bad)
mov
and
les
jle
mov
jns
sub
sbb
mov
adc
call
dec
xchg
ds
dec
mov
sub
push
cmp
in
mov
repz
bound
jmp
js
jno
fcomi
mov
adc
mov
mov
(bad)
jbe
pop
(bad)
dec
adc
xor
mov
fsubr
mov
push
dec
fwait
xor
rcr
cli
cmp
fild
(bad)
idiv
dec
ret
push
fstp
ss
stos
sub
mov
shl
push
dec
mov
adc
gs
mov
mov
xlat
pop
or
pop
(bad)
jg
enter
in
jp
cmp
fs
ins
xchg
pop
and
popf
pushf
test
jl
sbb
sub
outs
adc
dec
shr
test
les
mov
and
lods
mov
xor
add
sub
fs
std
adc
dec
cmp
test
push
inc
xor
call
or
bnd
xor
jmp
xor
mov
arpl
retf
icebp
dec
push
push
sub
cs
pop
jmp
pop
sbb
mov
in
pop
xor
call
inc
or
cmps
popa
push
movs
stos
ss
fild
stos
jle
into
fdiv
outs
adc
ds
fimul
add
lods
inc
mov
push
nop
dec
xor
add
pop
or
call
mov
nop
mov
mov
loope
adc
xchg
(bad)
mov
dec
lods
or
bound
or
xor
jno
mov
shr
dec
fcmovnu
stos
(bad)
outs
aaa
(bad)
rcl
pop
pusha
cmp
sbb
in
xchg
cmp
mov
enter
dec
xor
pop
aaa
sub
inc
aaa
lahf
cmp
ins
ja
push
and
add
ins
ret
dec
(bad)
mov
mov
mov
lea
pop
inc
mov
jne
dec
pop
jecxz
aam
daa
cmp
in
jns
test
mov
and
push
add
cmp
call
cwde
push
mov
ret
cld
stc
pusha
dec
push
out
in
stc
mov
or
mov
or
(bad)
push
scas
stos
xor
jns
ins
rcr
cmp
data16
and
dec
cld
pop
into
sar
sub
lods
xor
push
into
or
lods
movs
jg
clc
fdivr
cwde
cmp
aaa
imul
push
adc
mov
leave
out
adc
popf
mov
fstp
mov
fwait
sahf
mov
mov
je
mov
test
jo
cmp
movs
mov
outs
(bad)
out
sub
mov
into
sbb
dec
and
out
mov
leave
out
sub
sbb
fiadd
lods
mov
mov
push
push
mov
or
jbe
xchg
sbb
xor
loop
test
leave
fwait
inc
add
sub
bound
push
stos
mov
or
xchg
in
push
or
and
fbld
inc
adc
fs
or
lea
inc
jns
pop
xchg
mov
and
push
mov
vcvtpd2ps
mov
jp
xchg
mov
shl
and
push
fwait
jnp
shl
pop
and
xchg
enter
push
pop
mov
scas
mov
xchg
fistp
push
les
mov
addr16
in
ds
xor
movs
call
push
int
or
dec
sahf
(bad)
(bad)
retf
cmps
mov
fistp
jg
push
dec
fstp
sbb
inc
add
push
cld
mov
xchg
mov
aad
adc
jecxz
add
inc
les
outs
sbb
mov
push
pop
js
jb
es
aaa
mov
cmp
dec
sti
jle
mov
cmp
pop
outs
movs
(bad)
jle
mov
push
sbb
std
xchg
mov
xchg
sbb
retf
outs
leave
cmp
mov
sbb
cdq
mov
push
movs
pop
stc
push
and
push
addr16
int3
rol
xor
push
int
les
inc
std
or
sub
lea
xor
lods
add
sbb
call
cmp
in
out
mov
xchg
mov
sbb
xor
jl
icebp
repz
neg
pop
jmp
into
add
mov
jmp
in
xor
mov
test
mov
mov
mov
cmps
sub
loop
sub
mov
push
xchg
sub
retf
test
repnz
xchg
leave
lds
cmp
(bad)
cli
cmp
in
popf
test
adc
je
cmp
mov
sbb
sbb
(bad)
hlt
lods
fidivr
fwait
loop
test
add
test
mov
daa
ret
or
mov
shl
jmp
xchg
push
inc
std
and
push
sar
jg
cpuid
sbb
js
cmp
stos
sti
inc
or
leave
out
inc
out
fstp
xchg
fmul
iret
add
adc
aas
xchg
test
sbb
xchg
add
loopne
mov
add
dec
dec
lock
add
jl
mov
add
cmps
fdivr
dec
outs
push
daa
cwde
add
inc
shl
ret
cmp
leave
fwait
rcl
(bad)
in
inc
leave
enter
fidiv
jge
leave
std
ds
test
mov
xor
jae
ret
cmp
dec
inc
adc
or
into
or
into
jo
xor
fstp
pop
(bad)
sbb
add
xor
sbb
sbb
scas
dec
mov
sbb
mov
pop
leave
out
pop
xchg
mov
mov
aad
(bad)
pop
out
int
aas
mov
xor
retf
punpckhbw
fcomp
or
pop
mov
xor
bound
xchg
hlt
(bad)
cmp
ds
mov
cmps
pop
(bad)
out
sbb
mov
lds
inc
push
or
push
sub
or
sbb
out
push
sbb
gs
add
dec
test
idiv
xor
data16
pop
xor
loope
(bad)
adc
push
movs
jmp
dec
push
sbb
mov
(bad)
jae
popf
dec
out
sahf
mov
sub
test
inc
in
xlat
fwait
retf
or
movs
icebp
icebp
mov
das
in
mov
inc
mov
cmp
imul
(bad)
test
stos
mov
daa
cmp
fmulp
or
jbe
rcr
mov
pop
cmp
(bad)
movs
call
call
xchg
cmps
mov
and
test
(bad)
aas
mov
(bad)
(bad)
jne
enter
cmc
fisttp
dec
dec
addr16
pop
push
jl
sbb
dec
loope
mov
int
or
xchg
sbb
xlat
pop
jmp
mov
pop
sub
inc
mov
add
ins
cmp
cs
mov
sub
jno
jecxz
xor
les
xchg
fidiv
dec
lahf
call
or
and
mov
stos
sahf
xor
jb
jg
cld
inc
push
js
stc
or
jl
lock
sub
imul
ret
and
inc
ss
push
out
xor
in
jmp
jmp
add
jae
dec
icebp
xchg
mov
inc
ja
or
mov
mov
imul
rol
adc
and
xchg
dec
adc
icebp
jno
(bad)
sar
push
cmp
inc
retf
sub
mov
popa
mulps
and
push
dec
mov
xlat
adc
mov
fistp
daa
and
mov
mov
adc
rcl
fdivr
pop
fist
mov
cmp
mov
fistp
dec
and
into
xchg
popa
add
and
movs
inc
mov
test
xor
inc
call
call
pop
add
(bad)
out
aad
outs
into
ret
popa
dec
scas
jnp
out
repz
sbb
aam
fld
ins
cmp
fcmovnbe
mov
leave
inc
cwde
mov
sbb
cmp
mov
mov
or
mov
pop
xchg
pop
or
aam
scas
pop
iret
push
push
dec
bound
pop
sub
jne
mov
test
repz
or
dec
dec
xlat
int
xor
xchg
ins
jnp
add
ins
xor
inc
jno
or
cmps
sti
adc
add
sbb
xchg
or
ja
mov
mov
pop
sub
ror
inc
push
mov
nop
pop
pop
aas
add
mov
pop
popf
lock
bound
and
enter
aam
mov
inc
repnz
push
cmc
sub
sub
sub
int3
xchg
pop
in
into
pop
cld
cmps
or
dec
dec
ins
test
add
cmp
cli
aaa
cmps
adc
jo
xlat
sbb
xor
cmp
sbb
jg
ins
(bad)
icebp
mov
mov
jge
adc
test
iret
jl
sbb
cmp
and
push
cmp
(bad)
enter
rol
pop
sub
mov
les
push
dec
adc
push
sbb
fs
mov
ficomp
sbb
call
inc
pop
push
fadd
sar
sahf
ficom
push
fs
sub
fbld
loope
ror
test
(bad)
mov
pop
bound
mov
iret
mov
push
add
xchg
and
loopne
movs
inc
(bad)
jg
adc
add
or
mov
lahf
outs
pop
out
imul
pop
nop
and
retf
fistp
mov
in
adc
pusha
test
push
or
inc
pop
js
cdq
test
push
mov
mov
cmp
pcmpeqw
pushf
add
cmp
jno
test
(bad)
cmp
push
jmp
fld
xchg
rep
add
pop
lods
pop
arpl
(bad)
std
adc
or
les
mov
add
sub
mov
loop
cmp
jnp
mov
cmp
je
pop
dec
or
sub
mov
dec
mov
lock
jle
arpl
fwait
lock
xchg
(bad)
ja
push
in
retf
cmp
mov
shr
fabs
js
test
xchg
adc
xchg
inc
xchg
inc
pop
push
mov
je
pop
inc
loopne
nop
test
xchg
push
cmc
push
push
mov
aam
cli
lea
fwait
push
test
pop
push
xchg
jne
xchg
push
mov
ror
inc
sahf
push
daa
xlat
push
mov
ins
inc
jb
mov
cmp
pushf
mov
pop
xor
sub
ds
aas
push
push
iret
or
dec
push
or
add
add
js
mov
jmp
cwde
outs
jecxz
adc
loop
enter
sub
xchg
sub
mov
rol
ins
pop
mov
mov
leave
popf
addr16
enter
cli
hlt
push
scas
movs
es
loop
jbe
jae
pop
test
add
pop
fwait
bnd
movs
sub
iret
or
sti
dec
nop
pop
and
sbb
ss
dec
mov
sbb
div
test
pop
cmp
jg
xor
jbe
js
rol
push
inc
fisubr
pop
inc
or
lods
cmp
outs
push
or
push
cmps
mov
popa
(bad)
shl
sbb
mov
fsub
adc
mov
push
fmulp
mov
cdq
cmp
test
imul
loopne
mov
xlat
add
(bad)
sahf
inc
fincstp
stc
popa
cmps
aad
mov
repz
xor
pop
jle
ja
inc
cwde
mov
add
into
popf
jge
cmp
aad
mov
pop
cli
call
or
sub
dec
(bad)
pop
lock
imul
into
and
mov
cmp
inc
scas
rol
jnp
movs
push
mov
popf
push
xchg
push
pop
cmp
mov
aas
sbb
mov
loopne
(bad)
int3
nop
jae
jge
push
out
(bad)
aad
add
push
jge
popa
xchg
shl
ins
push
ja
mov
popf
mov
adc
pop
dec
iret
xchg
xchg
rol
xchg
jno
jl
pop
fcmovb
pop
mov
sbb
hlt
mov
outs
fst
movs
cmps
pop
xor
mov
cs
pop
out
sbb
mov
sub
hlt
gs
inc
mov
(bad)
(bad)
xor
(bad)
mov
cdq
les
lods
and
jle
push
xchg
scas
aas
(bad)
out
outs
loopne
sbb
dec
fcom
retf
(bad)
imul
mov
inc
fisubr
aad
pusha
hlt
shl
scas
hlt
ror
shr
fist
fdivr
aas
add
loopne
cdq
jle
xor
dec
adc
in
push
fcom
ins
dec
clc
pusha
add
int3
sbb
(bad)
xchg
ror
mov
test
pop
xor
inc
retf
imul
lods
jp
cmc
xor
nop
cwde
imul
inc
in
in
js
loop
into
cs
(bad)
push
cmp
in
fidiv
cmps
push
cmp
xchg
ret
sahf
mov
mov
xchg
jle
(bad)
cmp
add
push
nop
pop
fsub
push
pop
pminub
mov
pop
cli
push
jno
add
jns
or
mov
imul
add
jae
sub
cld
and
jecxz
inc
sub
stos
test
loope
mov
fmul
cdq
pop
mov
push
cmp
clc
cmps
dec
cld
mov
pop
out
push
cld
fcomp
jne
dec
hlt
enter
fcmovb
shr
retf
xchg
push
repnz
aam
pop
(bad)
xchg
cmp
ret
push
cld
lahf
hlt
mov
mov
enter
shl
mov
push
cmps
scas
test
push
mov
adc
je
movs
xchg
ror
jmp
rcl
cmp
data16
scas
jb
and
out
or
pop
push
fdivr
loope
mov
fdiv
or
lods
xor
shl
jl
js
mov
imul
jg
in
lods
jnp
popf
sub
cmps
outs
mov
pop
retf
loopne
push
jg
jae
jmp
sub
mov
xor
and
xchg
jae
aad
test
(bad)
enter
sub
or
jo
movs
jns
xchg
mov
xchg
push
mov
mov
ret
rol
inc
and
sbb
jb
inc
adc
push
not
loopne
fdivr
jae
mov
push
in
mov
sar
out
loope
jbe
fwait
cdq
pop
fild
sub
inc
fs
ds
pop
pop
mov
ins
je
leave
jl
into
and
or
enter
les
sti
cwde
pop
jmp
mov
or
dec
stos
xchg
sub
inc
xor
add
mov
jp
shr
adc
call
dec
icebp
xlat
inc
cmp
jmp
lahf
call
pushf
push
sbb
xlat
xchg
iret
test
or
sbb
inc
jg
jmp
mov
adc
sub
or
pop
gs
loope
xchg
fisub
sub
inc
repnz
pop
mov
fwait
xor
idiv
cs
pop
push
mov
mul
in
leave
jo
out
int
lahf
cmp
sub
xor
leave
cmp
call
and
call
mov
xor
jmp
hlt
cdq
pop
in
jns
ja
mov
pushf
loopne
mov
push
jmp
sbb
dec
jmp
shl
sub
lock
mov
dec
mov
sub
mov
mov
mov
inc
icebp
or
xchg
xchg
jo
sbb
mov
sahf
(bad)
sbb
mov
icebp
shl
rol
adc
add
(bad)
or
rol
or
xor
stc
daa
dec
xchg
dec
addr16
sub
iret
nop
cld
jle
sbb
xchg
pop
push
jmp
push
(bad)
(bad)
in
in
outs
mov
stos
adc
iret
xor
pop
add
inc
outs
mov
xlat
mov
sub
add
push
mov
jl
repnz
mov
push
jl
mov
aam
sti
adc
(bad)
(bad)
popf
(bad)
sbb
scas
mov
push
aas
mov
push
and
ins
xchg
xchg
bound
jl
loopne
pushf
es
cld
popf
retf
xchg
inc
enter
mov
out
movs
fwait
mov
pop
sbb
pop
push
scas
rol
pop
in
enter
sbb
cmc
pop
pop
sti
fisttp
not
push
and
les
rcr
je
mov
out
(bad)
js
dec
sti
mov
pop
rcl
adc
(bad)
xchg
mov
push
adc
hlt
cmp
inc
cld
unpckhps
fcom
lds
outs
push
fst
cld
out
sti
fstp
or
dec
mov
mov
adc
and
out
gs
xchg
rcl
bnd
push
repnz
push
ficomp
fist
pusha
pop
xor
js
cmp
ja
pusha
lock
jle
ret
retf
push
shl
or
jmp
fs
and
mov
add
lods
lds
sbb
jb
scas
imul
adc
pushf
les
xchg
xchg
lds
rol
jmp
mov
jmp
jo
adc
jmp
pop
(bad)
sti
shl
xchg
adc
and
xchg
add
cmp
push
push
sub
mov
jno
popa
jg
ds
jo
out
sbb
and
cwde
dec
fstp
and
jbe
mov
push
jne
ficom
cmps
lea
xchg
pushf
jo
mov
rol
int
leave
or
pop
addr16
(bad)
gs
in
sahf
add
rol
call
and
je
or
ret
out
pop
push
inc
xchg
add
mov
sub
cmp
sbb
push
mov
xchg
outs
inc
mov
rcl
add
dec
sbb
fisub
cmp
sbb
pop
outs
clc
cmp
(bad)
imul
out
int
mov
or
pop
sbb
and
xor
push
into
cmp
sbb
and
fsubr
fidiv
jns
aas
and
sub
cdq
iret
push
cmp
mov
pop
or
mov
sti
xchg
sahf
int3
or
aas
outs
mov
xor
and
mov
push
in
cwde
dec
inc
pop
xchg
cmp
inc
fs
sbb
xor
ret
mov
ins
retf
sub
mov
fiadd
lods
in
sbb
jl
cmps
movs
repz
adc
mov
popf
cmps
out
cdq
ja
pop
add
xor
jnp
clc
scas
dec
call
imul
rcl
xchg
ins
aaa
add
cmp
cmp
nop
jo
mov
cmp
inc
and
ins
ret
xor
xor
dec
pop
rcr
pop
dec
push
psrld
mov
push
jno
nop
mov
cmp
enter
push
fbld
dec
fidiv
icebp
fwait
call
sbb
shr
mov
leave
cmp
adc
adc
retf
adc
sbb
or
call
ins
cli
inc
out
add
xor
sar
and
push
dec
lock
pop
dec
pop
push
fdivr
loopne
or
dec
bound
lea
xlat
mov
add
(bad)
xchg
xchg
loop
enter
rcr
test
ins
and
jge
xor
mov
test
sti
push
inc
push
in
mov
cld
or
add
push
inc
ss
data16
aam
in
retf
popa
iret
loopne
cmp
pop
cmc
sub
retf
retf
xchg
mov
mov
xchg
mov
sub
mov
mov
fs
inc
push
ror
push
xchg
sub
mov
fstp
dec
(bad)
mov
imul
in
scas
mov
mov
je
faddp
jbe
adc
mov
nop
movs
jge
out
mov
out
je
(bad)
mov
lahf
lea
aaa
mov
adc
ins
and
inc
adc
mov
add
div
xchg
cwde
stc
call
lahf
shl
rol
nop
or
push
pop
iret
cs
cwde
popa
pop
out
dec
in
ficomp
inc
pop
outs
mov
icebp
daa
(bad)
xchg
cli
xchg
dec
mov
dec
stos
sbb
mov
mov
mov
call
repz
rcr
sub
leave
adc
ror
mov
add
fst
push
xchg
fwait
call
dec
movs
sbb
(bad)
les
ins
push
test
sub
ins
jne
jmp
rcl
cli
movs
or
stos
mov
sbb
rcr
push
and
mov
xchg
out
jb
add
add
inc
jl
push
lods
push
pop
out
pusha
cli
add
repnz
mov
add
xor
and
push
dec
jl
test
pop
ins
pop
adc
sub
sbb
jne
xor
gs
cmp
mov
test
hlt
jl
add
test
aad
adc
lahf
fidivr
pop
sbb
cmp
in
test
push
idiv
push
mov
ds
cmc
cmc
fiadd
jg
into
dec
pop
call
adc
mov
scas
imul
mov
aas
hlt
fsubr
loop
mov
(bad)
out
mov
stc
xchg
jae
jmp
in
xchg
mov
imul
adc
lods
xchg
stc
pop
push
and
pop
and
pusha
xchg
ret
shr
call
dec
je
pop
dec
repnz
ins
test
std
push
ds
mov
and
mov
mov
sbb
sar
dec
jge
push
jmp
test
rcr
push
and
dec
nop
cmp
mov
fsqrt
xor
fxtract
jmp
mov
push
push
or
popa
aaa
fstp
(bad)
sub
call
push
pop
test
scas
lds
pop
call
push
and
push
sbb
jl
pop
in
mov
xor
ds
repz
loop
imul
mov
push
xchg
inc
fs
mov
sar
jo
or
les
adc
movs
cmp
imul
ja
sbb
xor
and
adc
push
xor
test
je
and
stos
repz
iret
pop
xchg
and
mov
mov
sbb
stos
mov
ret
jne
out
movs
pop
mov
mov
(bad)
popf
jne
loop
call
jnp
out
repnz
mov
clc
clc
(bad)
pop
sbb
addr16
fcomp
sahf
push
mov
test
call
pop
mov
out
cmps
rcl
aaa
sub
cmc
cmps
ret
stos
push
gs
cwde
rcr
cmp
adc
add
sti
loope
jmp
out
sbb
pop
fs
sub
call
test
mov
pushf
cmp
jmp
in
pop
out
or
add
scas
jbe
xchg
ins
mov
fistp
mov
jb
mul
xchg
aad
lods
das
mov
cld
js
adc
call
inc
cli
jne
call
mov
push
pop
lods
cmps
lock
mov
icebp
or
jne
add
lea
cdq
das
retf
sub
adc
sbb
mov
mov
dec
and
cmp
repz
repnz
fbld
pop
sbb
popa
jmp
dec
popf
cdq
cmp
add
or
xchg
movs
arpl
jle
shr
mov
inc
cmp
sub
(bad)
sbb
adc
fiadd
inc
cld
movs
xlat
(bad)
and
fcmovu
add
mov
icebp
(bad)
inc
sub
test
dec
imul
(bad)
sub
sub
(bad)
ds
pusha
jp
dec
jp
and
mov
icebp
xor
adc
das
or
sub
lods
add
retf
out
shl
shl
jmp
xor
mov
aam
fisubr
shr
ins
jns
adc
mov
mov
push
xor
jmp
inc
xchg
repz
push
movs
test
popf
pop
add
es
add
(bad)
rol
dec
popf
xchg
dec
pop
mov
test
dec
hlt
repz
cmps
mov
stos
mov
jmp
jo
movs
mov
dec
dec
xlat
sub
sub
jbe
jo
xlat
sub
push
push
lods
daa
repz
sbb
or
pop
leave
ror
movs
(bad)
mov
adc
imul
pop
retf
jo
pop
cwde
nop
dec
addr16
mov
push
in
leave
movs
jne
nop
cmps
pop
movs
popa
jb
pop
cmps
ret
arpl
cmp
arpl
je
movs
inc
int
in
mov
imul
sahf
stos
inc
add
sbb
inc
lods
dec
mov
sub
sbb
xchg
movs
add
pop
pop
xchg
pop
push
ins
out
sub
ret
stos
sti
sub
int
mov
pop
and
sar
pop
hlt
je
push
xor
enter
retf
mov
gs
add
inc
in
sahf
mov
retf
(bad)
dec
jnp
cdq
sub
bound
cmp
addr16
repz
xchg
pop
imul
stos
add
mov
or
loop
lahf
test
cdq
xchg
jne
dec
sbb
and
xchg
vmovaps
pop
iret
inc
push
into
jl
clc
xchg
movs
xchg
retf
push
xchg
mov
test
ja
pop
jb
push
pop
imul
lahf
mov
xor
cmp
in
inc
inc
pop
or
test
jae
push
or
ret
push
sbb
jmp
scas
sub
and
xchg
mov
jl
cmc
daa
(bad)
inc
pop
add
shr
aas
xor
mov
xlat
arpl
jb
cmp
mov
(bad)
fcomp
inc
mov
sbb
dec
mov
mov
(bad)
lahf
mov
pop
mov
jnp
pop
adc
xchg
mov
dec
push
jno
ret
sbb
xor
adc
mov
into
adc
rol
push
xchg
mov
cmp
popa
aam
mov
cld
sub
arpl
xor
ret
std
loop
movs
pop
daa
pop
xor
pop
into
sub
cmp
movs
dec
xor
jb
sub
xor
and
xchg
dec
or
je
rcl
xchg
jmp
jae
xchg
xchg
xchg
jo
xlat
mov
inc
xchg
call
test
scas
jns
xor
adc
push
stos
lahf
(bad)
cmp
into
xchg
lods
and
mov
lea
mov
xchg
mov
jns
ja
shl
pop
push
or
xor
mov
pop
and
gs
das
scas
int3
xchg
mov
idiv
imul
push
xor
adc
mov
sti
jns
add
lea
sbb
jb
fwait
ror
inc
jl
mov
cmp
mov
sub
xor
push
jo
movs
pop
or
mov
xor
ror
cmp
fld
fdiv
dec
mov
jae
daa
and
xor
pushf
cmps
daa
push
lahf
jmp
rol
nop
xor
arpl
fdivr
pop
loop
ja
cmp
int
mov
mov
or
push
jmp
pop
jg
sar
cdq
das
stos
pop
jmp
mov
mov
lds
push
push
(bad)
fild
cwde
pop
mov
daa
sub
clc
cmps
push
call
cmp
xchg
adc
mov
inc
outs
call
or
xchg
call
sbb
popf
add
push
inc
xor
mov
dec
(bad)
push
lds
repnz
cld
inc
in
mov
or
pusha
(bad)
cli
xchg
sbb
ins
sub
xor
mov
sub
ret
jb
jp
mov
push
pushf
cmp
sub
mov
ja
dec
adc
jge
inc
clc
popa
jmp
push
sbb
ret
or
jmp
mov
cmp
push
cmp
pop
out
cmc
sub
add
mov
in
out
sbb
inc
ret
xor
adc
push
out
aam
jmp
add
push
push
popf
xchg
in
jp
cdq
cmps
push
pop
je
loopne
jno
loope
mov
jle
push
jnp
(bad)
cs
out
lahf
xchg
pop
clc
push
sub
adc
imul
inc
or
push
test
mov
sub
xchg
adc
lahf
jmp
or
out
pop
out
pop
sahf
sub
out
adc
stos
add
repz
or
in
dec
pop
cmps
pop
mov
dec
(bad)
cmp
lahf
push
jmp
xor
jnp
fwait
sar
dec
repnz
cmc
sub
int
pusha
test
mov
je
nop
mov
jo
(bad)
ds
test
test
int3
je
add
mov
in
aad
xchg
inc
pop
push
enter
cmp
push
out
ror
(bad)
call
xor
test
and
xor
inc
icebp
jge
rcr
cld
leave
sar
cmp
mov
and
vxorps
cwde
mov
adc
sbb
dec
pop
ror
out
adc
(bad)
and
jns
fs
pusha
jne
and
clc
adc
jecxz
retf
adc
jae
ins
push
mov
sbb
xchg
in
int3
pop
inc
jns
mov
jbe
aam
cmp
lds
add
out
xchg
js
ja
xchg
aam
aad
sbb
xlat
mov
push
sub
call
pop
mov
cdq
mov
adc
or
mov
in
and
cwde
sub
in
push
ins
bound
int3
rcl
mov
push
sub
xchg
add
push
popa
ja
cmp
xor
scas
js
stc
test
sti
push
data16
fwait
adc
mov
scas
sar
fist
add
sbb
push
mov
mov
rcl
sbb
jmp
mov
and
lods
stc
stos
dec
xor
push
xlat
jmp
jne
stc
mov
add
sub
test
jg
pop
imul
lock
cmc
mov
in
mov
or
out
jge
(bad)
bound
jp
mov
xor
in
pop
sub
fwait
mov
jmp
sub
jae
push
fucom
or
sti
cwde
jle
scas
jo
arpl
jg
and
fdivr
retf
ja
outs
loope
or
or
div
dec
sahf
lds
mov
leave
in
xchg
pop
xlat
call
dec
sub
gs
lahf
xor
(bad)
(bad)
and
ss
dec
retf
(bad)
fcomp
cmp
ins
xor
mov
call
adc
xlat
das
push
pop
adc
dec
add
stos
xor
add
cmp
lods
or
push
es
adc
in
jmp
adc
dec
in
rcr
sub
daa
scas
dec
das
test
test
push
cs
in
js
push
fnstenv
addr16
ja
mov
ins
leave
out
pusha
push
inc
dec
pop
pop
les
inc
or
iret
jnp
iret
fistp
mov
ss
clc
leave
call
stc
mov
rol
aam
fucomi
push
mov
mov
call
jp
ds
iret
dec
ss
cmc
xchg
ror
dec
movs
imul
add
mov
aas
std
popa
xchg
dec
into
xor
xor
pop
loop
jo
xchg
(bad)
in
push
test
stos
cs
adc
jmp
push
movs
push
dec
and
cmp
icebp
jp
mov
jno
xor
stc
cmp
leave
fs
push
push
test
into
pop
mov
push
lods
add
movs
xor
mov
cmp
xchg
inc
sub
mov
enter
mov
push
dec
push
cmc
stos
fdivr
jbe
daa
je
popa
xchg
or
xor
retf
sub
clc
pop
mov
sub
sar
cdq
cld
xor
push
mov
or
jl
test
mov
lock
cmc
lock
jnp
ret
push
in
sub
pop
sub
jne
jbe
pop
pusha
lea
lea
jge
add
cmp
mov
mov
inc
dec
mov
les
nop
jecxz
cdq
jle
xchg
iret
pop
ins
jl
add
push
sbb
xchg
push
xchg
je
(bad)
loopne
jl
rol
sbb
mov
cs
test
retf
in
imul
loope
(bad)
pop
dec
leavew
dec
adc
iret
fbld
test
mov
inc
pop
call
jae
push
or
fimul
pop
movs
dec
cli
pop
and
xchg
and
bound
fdiv
adc
scas
xchg
outs
fld
stos
scas
daa
daa
adc
rol
test
outs
adc
jl
cld
push
jbe
sbb
outs
addr16
sub
rcl
(bad)
jp
push
inc
jge
jmp
scas
pop
ss
pop
and
aaa
or
xor
outs
test
test
scas
cli
loop
inc
hlt
jae
stos
adc
js
jle
jmp
push
test
mov
adc
dec
xor
int3
mov
jmp
bound
and
lea
mov
xchg
cmp
jae
ds
mov
mov
inc
mov
mov
cmps
icebp
pop
add
inc
imul
sub
setnp
push
xchg
or
loope
repnz
push
sub
shl
jns
icebp
mov
div
add
js
mov
hlt
movs
inc
mov
cmp
mov
dec
dec
aad
std
push
and
mov
xlat
neg
paddd
add
cmp
lahf
mov
outs
das
pop
or
ja
add
mov
push
les
mov
adc
paddq
xchg
mov
ret
gs
(bad)
out
cmp
cld
neg
das
cmp
(bad)
daa
jg
inc
and
jg
mov
mov
test
ficom
fisttp
leave
fs
ret
test
imul
cli
js
or
ja
test
mov
imul
xchg
ins
add
xchg
cmp
jmp
out
cmp
push
mov
bound
cmp
js
cli
mov
sbb
fwait
lahf
sub
not
pushf
jmp
jmp
js
xchg
into
adc
mov
dec
jge
xchg
pop
push
in
lock
inc
in
sub
test
mov
lods
(bad)
xor
sar
mov
(bad)
jecxz
cmp
gs
or
(bad)
int
cmp
dec
push
or
sbb
or
inc
fstp
xchg
or
loope
sub
sub
int3
xchg
test
test
jbe
in
stc
mov
stos
pop
call
pop
jnp
xor
jmp
scas
in
movs
gs
jmp
retf
cwde
(bad)
pop
add
sbb
cmp
and
and
jp
loopne
xor
daa
lods
dec
adc
(bad)
fldenv
and
and
cdq
mov
mov
adc
mov
data16
jne
jb
fs
push
push
or
mov
and
add
scas
or
stos
adc
adc
or
sar
imul
adc
pop
mov
je
cmp
mov
xor
add
call
inc
and
repnz
add
and
popf
lds
clc
mov
retf
dec
mov
xchg
pop
jle
adc
xor
jle
mov
or
sbb
push
cmp
sub
cmp
ss
dec
ins
mov
or
sbb
push
jg
sub
lds
sub
mov
or
lds
xor
loopne
call
mov
sub
sti
sbb
ror
push
cli
jbe
rcr
xor
adc
sub
jbe
shl
add
xor
push
jl
mov
ss
and
pop
pop
enter
pop
cmp
dec
enter
pop
sbb
push
push
mov
repz
or
call
and
inc
popf
cmp
rcr
in
mov
pop
add
mov
mov
data16
pop
inc
fdivp
ss
jne
out
call
fcomip
call
dec
arpl
jno
test
mov
test
es
add
cmp
jb
sub
lock
add
and
ins
les
aas
lds
mov
xchg
test
inc
cwde
mov
cwde
xchg
mov
cmp
clc
dec
xchg
sbb
pop
imul
jns
xchg
adc
out
pop
or
arpl
test
fild
xchg
mov
aam
push
xor
mov
rcr
gs
cdq
adc
ficom
xor
push
sbb
sub
movs
cmp
lock
adc
jae
arpl
mov
out
shl
fs
or
fwait
pop
pushf
push
mov
xor
mov
in
push
sahf
cmc
loope
ret
cmp
fstp
dec
xchg
push
xchg
xor
popa
scas
jbe
jg
sub
loop
cmp
inc
cli
ror
sbb
test
jecxz
cmp
or
fs
dec
imul
icebp
mov
fist
cmps
stos
(bad)
cli
mov
not
ss
(bad)
aas
sub
push
lods
mov
xchg
icebp
je
in
sahf
adc
push
add
int3
mov
call
mov
add
push
cmp
mov
call
mov
mov
dec
(bad)
cmp
(bad)
out
mov
lock
adc
mov
adc
push
sub
aas
(bad)
addr16
inc
dec
cvtps2pi
or
repz
ins
adc
inc
in
and
mov
xchg
mul
push
pop
fsin
add
iret
mov
cld
inc
add
adc
mov
mov
inc
ror
leave
scas
test
clc
pop
test
fs
mov
lods
leave
xchg
dec
xlat
fcomp
into
pop
test
out
cwde
retf
enter
fwait
call
(bad)
push
mov
mov
test
xor
ds
cdq
mov
cmp
pop
push
cwde
inc
ret
call
(bad)
push
repnz
fld
mov
xor
inc
rcl
jmp
in
cdq
mov
mov
sub
pop
stos
cmps
aad
into
xlat
cmp
push
outs
cli
sbb
sbb
test
xor
dec
enter
inc
mov
cmp
dec
mov
rcl
mov
adc
dec
mov
adc
push
hlt
mov
push
dec
repnz
inc
cli
int
out
mov
jge
mov
shr
jmp
ret
push
aas
popf
sar
push
retf
cmc
push
retf
fxam
popa
pop
cmps
iret
cmp
shl
into
xchg
mov
push
push
repnz
mov
xor
cwde
dec
pop
cs
retf
and
in
inc
imul
movs
xchg
inc
jle
outs
dec
stos
into
hlt
mov
mov
shl
cld
inc
(bad)
mov
icebp
xor
repz
jmp
shl
mov
mov
shl
fdiv
add
inc
xor
or
frndint
pusha
outs
jl
retf
data16
pushf
fs
aad
push
inc
push
stos
les
dec
imul
xlat
or
lods
mov
in
in
mov
xchg
jp
push
(bad)
push
dec
mov
push
inc
or
inc
sub
cmp
pop
and
add
pop
sub
sbb
cmps
jle
adc
mov
idiv
sbb
call
cmp
mov
adc
in
test
jecxz
in
sahf
inc
xor
call
jp
outs
inc
push
cmp
sub
xor
sbb
adc
call
adc
add
mov
add
repz
repnz
jmp
mov
push
lock
not
xchg
aam
jmp
add
sub
mov
mov
xchg
shl
enter
das
pop
aaa
pop
add
icebp
in
jle
cmp
ret
fs
addr16
mov
ja
jae
enter
pop
stc
int3
fist
or
out
or
aad
loopne
imul
jl
jb
jae
mov
add
(bad)
push
mov
popf
xor
fs
fld
cmps
in
mov
sar
mov
(bad)
movs
lds
xchg
jno
fnsave
pop
jbe
jp
neg
dec
aam
les
gs
loopne
push
fwait
sar
xchg
inc
mov
fstp
sbb
push
sbb
test
(bad)
push
std
popf
push
test
(bad)
ins
dec
setno
fadd
inc
lods
test
adc
sub
jge
fild
xlat
dec
and
popa
(bad)
jmp
jnp
lea
mov
aad
int3
test
jae
jecxz
sub
(bad)
int3
inc
adc
or
and
aaa
xor
(bad)
(bad)
xchg
call
push
sub
fdiv
ret
xchg
mov
clc
fbstp
push
data16
pop
jb
sbb
jns
loopne
lods
jge
push
mov
mov
push
in
in
call
scas
in
xchg
mov
lods
sti
mov
mov
cmp
fs
or
inc
add
add
(bad)
mov
cmp
(bad)
ret
mov
ins
imul
adc
push
inc
imul
arpl
rol
shl
dec
ds
jle
mov
scas
sub
pop
daa
push
pop
cmp
rcr
jae
mov
push
xchg
je
ja
dec
mov
mov
sahf
in
inc
sbb
xchg
fst
inc
mov
pop
jae
mov
sbb
out
loop
nop
jmp
or
adc
test
inc
mov
adc
push
clc
add
sbb
pop
or
dec
je
mov
add
int3
sbb
pusha
inc
jb
inc
(bad)
fisubr
jb
dec
lahf
mov
xchg
xchg
lods
or
nop
cdq
ds
ss
pop
mov
inc
xor
mov
shl
xor
dec
es
xchg
sub
add
jg
das
stos
fcmove
mov
add
enter
je
and
shl
imul
cmc
and
std
loope
mov
popf
push
mov
xchg
icebp
pop
das
retf
lds
pop
push
sar
repz
movs
outs
bswap
movs
mov
mov
ret
pop
pop
cmp
push
test
add
outs
jae
push
push
ins
sahf
or
cmp
cmps
cmp
push
mov
mov
gs
lods
or
clc
iret
test
adc
pop
into
xlat
mov
std
shr
push
loop
(bad)
stos
outs
ss
lods
fwait
push
fwait
mov
les
xchg
dec
sbb
in
push
add
mov
mov
je
mov
xchg
xchg
add
sti
jno
iret
xor
jle
inc
mov
adc
mov
or
pop
(bad)
push
bswap
out
fmul
xchg
xlat
xchg
pusha
stos
test
push
mov
xor
sbb
imul
ins
lods
mov
jp
imul
or
das
nop
push
cmp
jo
cmps
cmps
cmp
and
out
mov
adc
inc
push
jb
mov
in
pop
push
or
inc
scas
loop
daa
into
and
(bad)
icebp
loop
xchg
inc
push
xlat
pop
popa
jmp
mov
adc
sub
cld
aam
jmp
and
jb
ins
fdivr
push
cmp
inc
jmp
push
add
pop
xor
push
inc
push
test
inc
dec
mov
mov
jns
jno
or
jae
mov
retf
imul
or
fwait
icebp
mov
add
daa
aaa
jae
xchg
push
pop
inc
inc
loop
sbb
cmp
cmp
and
dec
add
sar
jbe
lea
inc
cld
mov
jne
xor
adc
mov
lods
adc
jle
in
jle
fisttp
push
cdq
sub
mov
sub
in
push
iret
jmp
fisubr
jge
out
imul
inc
xor
(bad)
mov
scas
leave
cmp
cmp
rcl
mov
push
enter
and
sub
or
repnz
inc
add
mov
and
and
sbb
repz
inc
xchg
mov
cmp
push
repnz
(bad)
fcom
retf
shl
mov
pop
call
jecxz
fsub
mov
sbb
xor
sub
icebp
add
sbb
out
sbb
mov
wrmsr
push
xchg
and
adc
inc
inc
nop
rcl
ret
push
sahf
cmp
ret
arpl
inc
in
ins
popf
inc
mov
rep
ja
mov
and
mov
adc
js
push
out
enter
lock
mov
sbb
lahf
iret
xchg
jl
jl
(bad)
ret
in
cld
mov
int3
test
mov
mov
sub
cwde
mov
adc
mov
nop
mov
cmp
sbb
mov
xor
inc
pop
je
or
mov
cwde
pop
in
pop
iret
in
idiv
push
mov
inc
in
arpl
cmp
mov
lea
or
mov
repnz
ficomp
test
fimul
xor
inc
xor
push
mov
jmp
add
aas
imul
jo
and
push
cmps
in
ins
lea
inc
aas
mov
jns
jge
std
adc
mov
nop
cmp
(bad)
aaa
bound
into
adc
jge
and
gs
hlt
and
inc
mov
cli
repz
fstp
mov
aas
xchg
push
(bad)
pop
pusha
mov
jne
mov
mov
pop
syscall
sub
dec
inc
xor
dec
inc
fnstcw
jg
mov
xor
(bad)
push
inc
mov
pusha
jp
jb
call
pop
fild
cdq
fwait
outs
jbe
repnz
dec
out
dec
mov
inc
cmp
push
push
push
jns
xor
inc
mov
sub
pop
cdq
je
push
jns
mov
mov
mov
sub
pusha
push
lea
push
iret
lea
arpl
stos
out
fistp
sub
inc
mov
pop
push
cmp
adc
adc
adc
out
pushf
push
and
xchg
in
stc
cmp
sub
or
imul
sub
sbb
xchg
pop
cmp
and
cmc
outs
pop
in
hlt
or
xchg
cmp
retf
xchg
inc
in
push
jns
pop
stc
js
sbb
push
mov
stos
pop
les
ins
leave
inc
ret
(bad)
cmc
gs
add
and
and
cmps
(bad)
adc
lods
sbb
lahf
or
or
pusha
fst
mov
add
sbb
ins
sub
cmp
jne
inc
shr
inc
pushf
cmp
or
jb
jno
fs
cld
fnstcw
rcr
add
mov
jmp
int3
dec
ins
xchg
imul
imul
bswap
fidiv
cmp
out
dec
fdiv
add
pushf
sbb
aam
pop
mov
jnp
(bad)
pop
movhps
lds
xor
int3
aam
popf
adc
add
cdq
xor
xor
xchg
cmc
mov
add
dec
dec
(bad)
jae
out
dec
and
imul
add
dec
(bad)
cmc
in
pop
loop
dec
(bad)
dec
ror
repnz
xchg
mov
cmp
sub
dec
sbb
(bad)
xor
clc
or
jge
mov
loopne
pop
int3
in
mov
mul
mov
retf
cmp
das
mov
mov
pop
outs
es
stc
xor
ficomp
in
push
les
inc
cmp
inc
je
adc
into
scas
into
jb
stc
pop
mul
nop
fsubr
jp
dec
dec
inc
xchg
and
and
jg
cli
sahf
fsubp
fcmovb
rcr
xor
push
xchg
xlat
lods
pop
push
int
add
dec
and
sahf
cmp
and
push
sub
popf
shr
push
inc
sahf
sbb
mov
xor
dec
jne
nop
sahf
mov
addr16
addr16
push
icebp
inc
(bad)
shl
fs
shr
cs
pusha
outs
jmp
push
pop
(bad)
outs
mov
adc
in
cmc
push
ins
push
dec
(bad)
call
inc
cmps
xor
fisttp
(bad)
cmp
pop
sbb
in
adc
jmp
(bad)
arpl
mov
test
mov
repz
push
cmp
jmp
clc
fadd
movs
inc
mov
dec
ss
lods
lock
inc
add
xchg
pop
dec
dec
test
inc
stc
lea
mov
sub
dec
shr
retf
and
xchg
mov
hlt
popf
mov
int3
shl
pop
cs
or
or
psubsw
xor
dec
sahf
xchg
jecxz
retf
call
mov
stos
sub
fidiv
imul
cmp
adc
mov
push
mov
imul
sbb
mov
imul
outs
aad
and
mov
ds
jecxz
fbld
movs
push
push
mov
xchg
in
sar
xor
xor
(bad)
sub
mov
adc
push
jae
add
dec
dec
sub
inc
pop
lods
lock
xor
jle
rol
mov
adc
add
pushf
(bad)
loopne
mov
loop
cld
fmulp
and
jns
neg
mov
sub
cdq
dec
jle
mov
jecxz
xchg
dec
ins
clc
rcr
iret
add
addr16
xor
fbld
or
sub
or
add
test
cmp
mov
in
pop
xor
xchg
jmp
sbb
movs
add
jne
inc
enter
xchg
loopne
adc
cmp
sbb
shr
cwde
test
int3
cmp
push
mov
add
rcl
xor
push
sub
inc
in
push
loop
stos
(bad)
push
sbb
cmp
dec
loope
dec
and
popf
loop
imul
jmp
xlat
push
ficom
xor
outs
test
sbb
loope
xchg
adc
xor
jle
adc
in
jno
js
rcl
xchg
rcr
inc
cmps
mov
xchg
fst
loopne
cmp
inc
mov
jg
mov
nop
xchg
mov
pop
push
pop
movs
inc
inc
dec
retf
pop
xchg
retf
xor
ret
xor
add
ds
aas
mov
inc
int
mul
sub
or
stc
and
cmps
inc
test
xchg
loopne
cwde
loope
in
data16
mov
pop
shr
or
stc
and
call
dec
movs
mov
mov
adc
add
pop
aaa
data16
loope
lods
repnz
jbe
aam
xchg
sbb
inc
and
in
sbb
icebp
xor
ret
(bad)
shr
mov
sbb
sub
sbb
les
and
inc
outs
movs
out
call
popf
mov
mov
push
daa
or
xchg
adc
cld
sbb
inc
jb
in
push
jg
scas
push
jmp
test
jno
dec
cld
or
sub
and
cmp
push
dec
icebp
cmp
sbb
ins
push
aam
loopne
imul
xor
push
scas
pusha
movs
pop
cmp
mov
jg
jne
loop
aad
mov
cdq
cmps
imul
fild
push
push
(bad)
cmp
call
mov
and
jg
adc
cmps
and
repnz
sbb
cmp
(bad)
repz
sub
out
pop
mov
jp
or
push
sub
enter
jns
sub
pushf
aas
ds
pop
ins
call
enter
push
ins
cmp
push
mov
popf
imul
pop
imul
sti
cmp
das
jae
hlt
xor
cmc
scas
ret
ret
out
adc
mov
pop
push
or
push
nop
nop
retf
ror
cmp
aad
push
cmp
dec
ss
adc
push
jbe
mov
in
imul
imul
push
adc
inc
lahf
dec
test
dec
add
aad
cmp
addr16
loop
outs
lock
xchg
xchg
pusha
bound
push
test
adc
fisttp
lods
jb
dec
std
sbb
std
and
dec
jge
call
inc
dec
inc
sub
clc
aaa
ja
sbb
pop
fwait
push
sahf
mov
sub
pop
mov
or
daa
xchg
dec
cdq
add
outs
xor
rcl
mov
mov
hlt
mov
push
dec
(bad)
aad
mov
retf
repz
jp
hlt
fiadd
xchg
mov
loop
adc
and
sub
int
adc
hlt
in
(bad)
enter
sbb
lds
or
jae
dec
call
adc
popa
aam
or
jg
jmp
push
cdq
dec
repnz
les
in
add
ja
xor
sbb
cmp
in
je
jne
call
jae
arpl
jmp
sub
xchg
adc
outs
adc
pop
adc
iret
sbb
mov
inc
mov
cmc
mov
jae
sbb
test
loopne
ins
mov
sub
inc
pop
aas
in
sbb
cmp
fs
fcmovnu
xchg
test
dec
in
xchg
mov
jp
adc
imul
and
mov
xchg
mov
inc
je
ss
stc
aaa
ins
cli
out
adc
pop
icebp
call
sbb
out
xchg
xchg
rcr
nop
cwde
push
pcmpgtd
pop
jno
out
pop
pop
push
sbb
dec
lahf
cli
cwde
mov
fs
lahf
xor
iret
xor
add
xor
inc
int
mov
scas
cld
jecxz
cli
push
repnz
nop
out
sub
inc
push
addr16
inc
sub
jp
fidiv
out
cmc
pop
cmp
or
cmp
cli
out
mov
ret
ins
(bad)
(bad)
adc
iret
hlt
mov
je
stos
jb
fist
mov
loop
(bad)
pop
pop
fldln2
adc
loope
les
adc
sub
lods
add
xor
(bad)
hlt
mov
sbb
fdiv
mov
or
mov
fsubr
fmul
xchg
sbb
adc
or
(bad)
add
stos
into
pop
imul
xchg
rol
mov
push
imul
cld
fdiv
das
cmp
mov
add
enter
or
xor
mov
cmp
into
ficomp
ud1
sub
push
hlt
int3
out
xchg
iret
stc
rol
and
imul
out
jge
dec
xchg
add
mov
adc
fcomp
call
push
test
jmp
mov
ret
nop
pop
add
lea
aas
push
iret
aas
lahf
xchg
(bad)
out
not
lock
mov
jmp
lahf
adc
sbb
mov
push
mov
cmps
xchg
jge
xchg
pop
data16
retf
das
pushf
and
fs
and
inc
call
or
shl
push
lock
inc
cmps
push
(bad)
jmp
sub
(bad)
cmp
add
xchg
outs
sub
mov
or
std
mov
test
pushf
std
(bad)
mov
mov
xor
mov
mov
jl
inc
pop
movs
int
loop
xor
pop
in
aas
push
or
push
shr
or
mov
mov
scas
nop
fist
and
adc
adc
sbb
cli
fiadd
push
es
add
or
cmp
inc
xor
(bad)
add
push
adc
nop
das
push
or
dec
mov
push
(bad)
cmp
popf
popf
cmp
jb
aas
add
sbb
pop
test
lahf
(bad)
jmp
test
dec
cmp
ret
outs
lahf
iret
mov
mov
(bad)
adc
test
dec
call
dec
(bad)
aad
xchg
dec
mov
mov
pusha
icebp
in
mov
int
into
mov
jnp
cmp
(bad)
rcl
leave
mov
and
lea
sub
stos
add
std
xlat
adc
pop
and
ss
call
push
aam
pop
test
or
cmc
loopne
dec
add
mov
mov
ins
pop
pop
sub
mov
retf
retf
cmp
pop
adc
inc
cwde
and
stc
inc
out
cmp
shl
les
hlt
mov
mov
add
and
call
mov
mov
jmp
rcl
ja
pop
mov
mov
cmp
rsqrtps
push
jb
dec
xchg
push
xchg
int
jg
scas
and
js
sti
mov
mov
mov
daa
sar
jmp
cmc
lods
sub
sbb
mov
push
out
adc
mov
cmc
mov
jnp
sbb
lds
(bad)
outs
sbb
repnz
inc
leave
stos
pusha
clc
dec
ret
mov
and
in
jl
movs
dec
loope
push
enter
sti
push
mov
(bad)
aam
push
pop
hlt
loopne
xchg
and
add
sub
loope
std
mov
xor
jge
cmp
(bad)
xchg
cmp
xor
inc
addr16
mov
into
out
sbb
fist
sub
adc
test
call
push
shr
enter
pushf
adc
je
nop
dec
sahf
mov
ss
fldenv
xchg
mov
and
inc
leave
pop
xchg
mov
imul
iret
mov
cwde
scas
outs
add
loop
cmp
dec
dec
in
and
xor
mov
inc
in
or
mov
add
jge
ss
cwde
jnp
jg
ret
aaa
imul
and
xor
push
inc
sub
int
sub
cmps
daa
cs
cmp
cmc
push
sbb
dec
or
adc
mov
fst
scas
cwde
in
xchg
mov
sbb
loop
lods
inc
sbb
movs
lea
xlat
add
test
loop
cmps
xchg
test
sub
add
retf
aad
add
inc
mov
mov
pop
push
sbb
ret
xor
pop
inc
mov
cs
and
mov
jo
pop
xor
mov
hlt
pop
adc
jmp
jne
cmp
retf
pop
push
aas
movs
into
out
lods
mov
arpl
popa
imul
js
fdiv
scas
scas
pushf
add
sbb
lea
mov
sar
push
cmps
lahf
(bad)
mov
hlt
dec
xchg
(bad)
aas
sub
pop
hlt
hlt
jae
xchg
sub
aas
gs
sub
ins
xor
retf
int3
xor
pusha
xor
dec
push
aas
movs
jecxz
cmp
scas
fbstp
fcmovu
ss
cli
push
and
mov
dec
std
xor
int
xchg
cwde
ss
jno
adc
or
ss
ud0
mov
lahf
jg
cmps
fwait
or
popf
int
std
mov
and
inc
dec
jne
push
mov
jno
add
out
scas
mov
hlt
cmp
xchg
ret
in
cdq
or
es
loop
add
rol
cmp
mov
or
jle
(bad)
cmp
neg
sbb
cmp
add
xchg
cmp
pop
jecxz
out
push
shl
aas
aad
lds
or
fadd
cs
jg
ret
movs
lods
mov
xor
popa
cmc
add
aam
jmp
dec
popf
push
jb
ss
push
or
xchg
xchg
out
mov
das
and
cmp
call
mov
cmps
ror
mov
test
xchg
xchg
xchg
lahf
rcl
mov
add
loope
pop
add
loopne
popf
dec
and
sub
nop
aas
jmp
or
inc
sbb
xchg
add
cmp
fidivr
outs
adc
pop
pop
loop
jl
mov
inc
inc
ret
adc
sbb
repnz
or
loopne
ja
jp
adc
xor
mov
std
aaa
mov
stos
in
call
push
push
mov
lds
ror
nop
and
add
xchg
or
sar
mov
(bad)
or
cs
(bad)
sbb
shr
dec
jb
cli
mov
cmp
lock
cmps
pusha
repnz
xor
xchg
mov
ins
inc
mov
cmps
and
ja
sbb
pop
stos
sti
adc
sahf
outs
sub
mov
in
in
mov
push
iret
xchg
(bad)
jg
inc
imul
xor
shr
pop
mov
jp
dec
xchg
or
inc
movs
enter
lahf
pop
aam
in
pop
sti
adc
mov
ret
hlt
shr
mov
xchg
mov
pop
ret
add
ja
mov
inc
ja
iret
aaa
or
in
sar
retf
sub
in
loope
push
ffreep
(bad)
test
leave
scas
je
pop
arpl
imul
add
mov
push
sub
sbb
mov
lods
xchg
xchg
(bad)
cwde
push
jp
and
push
frstor
jmp
ja
stos
jecxz
test
and
sub
(bad)
mov
jbe
add
in
add
adc
ds
scas
cli
adc
out
pushf
add
and
out
sub
retf
sti
and
(bad)
mov
out
mov
push
int
mov
popa
adc
movs
inc
xchg
push
(bad)
push
popf
loopne
push
xchg
loopne
movs
test
cwde
sub
push
xchg
lods
push
enter
dec
or
xor
dec
inc
xchg
pusha
sbb
repz
push
js
push
out
pop
xchg
xor
adc
pop
or
fld
jle
and
shl
shl
mov
daa
mov
dec
test
mov
mov
xor
jns
sbb
rdtsc
(bad)
mov
and
or
cmp
jmp
xchg
test
sahf
and
ret
fnsave
add
out
mov
inc
sbb
mov
das
pop
jno
jb
sub
ficom
fsubr
or
scas
mov
retf
movs
and
out
jmp
push
jno
jmp
(bad)
sub
(bad)
dec
adc
xchg
inc
or
test
xchg
dec
mov
mov
inc
inc
or
js
jnp
clc
cmp
lods
xor
(bad)
mov
ror
pop
xor
add
and
mov
(bad)
lds
sub
xor
fistp
dec
mov
mov
in
arpl
mov
add
inc
sbb
icebp
pushf
xor
sub
xor
mov
call
or
lods
(bad)
dec
in
test
dec
and
and
cs
add
add
ins
mov
inc
out
jo
or
fcomp
jl
mov
cmc
jge
ret
xchg
add
cli
or
imul
jbe
loope
jmp
xchg
jmp
das
pop
mov
fistp
lahf
mov
fdiv
aaa
mov
inc
xchg
sbb
fwait
imul
repnz
mov
repz
aam
test
retf
fidiv
push
mov
and
arpl
cwde
or
hlt
mov
jecxz
call
rcl
in
scas
bound
loopne
stos
sar
cwde
xor
jae
dec
cld
(bad)
mov
jbe
call
mov
test
jmp
cli
imul
iret
xor
and
pop
push
jecxz
cmp
es
pop
and
mov
test
imul
jl
sti
push
fnsave
out
nop
mov
addr16
call
xor
(bad)
cmp
push
scas
mov
ficom
pop
xchg
pushf
arpl
xchg
mov
jp
cld
sub
das
or
cmp
xchg
sbb
pop
sub
idiv
je
add
dec
lea
test
loop
fcom
lock
stos
imul
push
lds
mov
nop
cmp
out
push
aas
adc
adc
push
push
(bad)
stos
jmp
out
ja
mov
mov
pop
les
push
retf
ret
sub
stos
dec
jmp
jl
xchg
sub
fmul
cmp
cmp
xor
adc
jns
fsub
adc
inc
jp
xchg
and
clc
shl
inc
pop
nop
dec
push
(bad)
sahf
stc
rol
cmp
jl
in
fbstp
push
cmp
pushf
sbb
jbe
jge
pushf
cmp
cmp
push
dec
pop
ret
sub
call
ds
and
adc
or
sbb
std
ret
fs
dec
in
or
inc
push
push
mov
mov
jg
(bad)
ja
dec
stos
dec
je
xchg
call
shl
in
inc
test
cs
cs
mov
sbb
jle
or
jle
adc
adc
cld
xor
jb
mov
adc
cwde
nop
adc
loopne
sub
push
aam
fisubr
ret
fwait
cli
div
shl
fnstcw
fist
mov
mov
and
and
mov
inc
xchg
add
mov
jb
mov
mov
mov
jns
cmps
out
jns
cmp
pop
stos
cmp
int3
push
pop
adc
sub
or
aas
popa
addr16
cmp
dec
or
loop
pop
popf
mov
or
fmul
mov
jno
xchg
inc
sub
ret
dec
cli
cld
ds
and
dec
or
add
sti
push
mov
dec
sub
lods
pop
ins
inc
(bad)
(bad)
inc
xchg
add
rol
mov
inc
cmps
push
xchg
iret
adc
pop
xchg
fistp
hlt
cli
jbe
(bad)
(bad)
test
xlat
lods
out
adc
mov
pop
outs
mov
in
cmps
out
adc
push
jmp
mov
pop
imul
mov
pop
or
jns
inc
sbb
fnsave
add
mov
dec
sub
inc
xor
or
in
fs
or
pusha
(bad)
xor
cmp
push
out
into
mov
lods
sub
inc
lods
out
xor
rcl
out
mov
pop
inc
jne
jg
(bad)
mov
pop
out
jo
div
js
xchg
xor
ja
je
jae
shl
ror
int3
int3
dec
pop
or
jae
jl
mov
test
loop
retf
scas
pop
mov
xchg
and
dec
fcomp
pop
cmp
call
test
shl
add
jo
inc
shr
cmp
xchg
std
hlt
mov
mov
mov
or
inc
enter
call
fdivr
pop
bound
mov
shr
or
cld
xor
push
add
lea
movs
popa
fwait
inc
fchs
push
cdq
dec
push
sub
mov
retf
pop
adc
xor
push
push
adc
or
xchg
xlat
mov
ds
dec
add
dec
dec
popf
xor
mov
xchg
in
add
dec
adc
lods
(bad)
sbb
cwde
lock
je
in
sahf
stos
or
pop
push
popa
shl
dec
or
adc
xchg
fmulp
lock
js
or
daa
or
cmp
stc
sti
fistp
retf
in
xor
stc
sub
pop
sbb
pop
add
sbb
push
test
jmp
das
test
adc
loop
(bad)
rcr
(bad)
je
shr
pop
sub
mov
fwait
xchg
xchg
and
in
push
mov
jmp
jae
popa
cmps
mov
xchg
fwait
icebp
mov
arpl
xchg
and
out
cmp
cmp
xor
mov
sbb
pop
add
cs
sbb
repnz
pop
sbb
inc
add
cmp
cmp
addr16
add
std
mov
jl
inc
mov
call
cwde
cdq
lods
gs
sub
inc
pop
cmp
movs
out
add
dec
daa
outs
fdivr
xlat
psrad
xchg
mov
pop
clc
ds
in
dec
enter
xchg
adc
(bad)
pop
dec
aaa
iret
in
in
mov
test
xor
add
mov
(bad)
movs
test
xchg
mov
stos
dec
mov
cmp
inc
(bad)
addr16
lea
push
ins
mov
bnd
shl
arpl
cmps
hlt
sub
pop
gs
jns
leave
jae
iret
sbb
in
dec
mov
jge
xor
fnstsw
mov
inc
pushf
mov
mov
push
and
xor
and
add
mov
aam
cs
pusha
mov
xor
mov
in
pop
sar
sub
or
mov
call
inc
mov
push
jecxz
mov
mov
jo
fst
cmpxchg
sbb
xchg
dec
mov
in
adc
push
add
xchg
push
or
jecxz
lea
inc
mov
cmp
bound
push
dec
dec
cmps
call
rcl
gs
adc
outs
mov
jns
add
pop
clc
(bad)
sub
loope
arpl
jmp
xor
inc
pop
dec
dec
ret
push
mov
mov
inc
lock
pop
in
pop
add
xchg
or
das
dec
xchg
or
icebp
pop
xlat
rcl
les
jmp
out
push
inc
or
arpl
sti
ins
jns
xor
daa
adc
xor
cs
out
add
(bad)
sub
jl
test
adc
aaa
fisubr
clc
xchg
out
or
dec
icebp
cli
and
push
data16
aad
repz
sub
or
sbb
lea
int
repnz
ja
adc
mov
jo
mov
in
xor
pop
fstp
and
shl
and
add
iret
retf
sbb
pop
sar
mov
adc
call
clc
dec
xchg
inc
fcom
push
scas
retf
mov
xchg
push
jle
(bad)
sub
enter
sbb
pop
pop
imul
in
cmp
call
inc
pop
and
out
add
jge
aam
in
jmp
sbb
fimul
aam
mov
dec
lods
push
mov
xor
retf
or
cmp
inc
pop
cmp
outs
loopne
or
xchg
jle
into
not
cmp
dec
sub
aas
sbb
(bad)
pop
mov
bound
(bad)
in
arpl
inc
ret
mov
push
in
ficomp
stos
ret
shl
and
into
lods
or
jnp
cmpxchg8b
mov
(bad)
mov
scas
pop
shr
xchg
shl
mov
adc
ja
push
pop
mov
sub
(bad)
adc
cs
push
lds
test
in
gs
cld
dec
or
xor
push
sub
adc
adc
add
dec
or
or
in
add
repnz
imul
or
lds
cmp
ss
ins
sbb
nop
cmps
les
cmps
test
ss
sub
or
cmp
std
pop
mov
test
scas
fisttp
sbb
fcomip
xor
stos
dec
xor
(bad)
(bad)
xor
test
(bad)
popa
push
xchg
inc
mov
jmp
clc
dec
sbb
pop
(bad)
jmp
lods
ds
in
push
loope
mov
nop
sub
loopne
sbb
sbb
test
test
mov
stos
fucom
xchg
push
cwde
lds
shl
call
jecxz
fsubr
mov
dec
inc
mov
xor
stos
popa
adc
es
mov
arpl
lock
sub
and
sbb
sbb
push
out
loopne
adc
test
jl
and
(bad)
fist
and
icebp
adc
int3
scas
xchg
cmp
out
dec
adc
cmps
movs
loop
mov
stos
jl
cmps
push
add
or
cwde
sbb
out
cmp
xchg
(bad)
pop
inc
stc
shl
data16
test
jae
lods
xchg
push
scas
loopne
imul
cli
cmc
popf
pop
sti
outs
xor
fxch
jns
cdq
into
jo
add
retf
push
mov
ret
stos
dec
scas
(bad)
shl
push
stos
hlt
inc
add
lods
dec
fidiv
mov
dec
xchg
nop
mov
pop
mov
mov
repnz
jl
lods
jo
loopne
pop
add
mov
in
or
mov
add
xchg
push
aas
inc
stc
xchg
aad
xor
sub
loop
es
(bad)
push
int3
fwait
(bad)
mov
jle
mov
pop
mov
fisubr
cmps
rcr
mov
out
iret
jb
mov
ins
cmp
out
movs
jnp
cmps
dec
jbe
sbb
call
sbb
push
cli
pop
cs
loopne
push
fistp
repz
std
xchg
sar
and
mov
shr
xchg
mov
sub
jne
inc
test
xor
adc
clc
sbb
addr16
out
repnz
bswap
mov
pop
loope
fstp
inc
mov
iret
jge
aas
jo
mov
in
or
and
pusha
fwait
xlat
mov
popf
xor
test
cld
push
push
cmp
xchg
cs
test
mov
push
jno
(bad)
(bad)
std
cli
mov
inc
dec
leave
mov
jno
mov
mov
loopne
fidivr
ret
and
cmp
push
cmp
enter
xor
fs
rol
out
jmp
push
jo
gs
stc
inc
jbe
loope
pop
lea
sbb
repz
cmp
sbb
pop
mov
mov
pop
sub
push
popa
and
pop
rol
cld
mov
cdq
mov
rcr
pop
pop
repz
int3
xor
add
or
repnz
mov
clc
mov
(bad)
jb
adc
pushf
int3
pop
push
mov
mov
inc
aad
inc
xchg
jae
cmp
xor
shr
xor
(bad)
imul
fs
aad
cmp
adc
enter
push
inc
jae
push
(bad)
mov
xor
imul
int3
sub
adc
jae
xchg
nop
dec
out
mov
adc
mov
jp
pop
fwait
mov
in
jno
sbb
and
add
jp
fwait
leave
mov
fstp
xor
int3
scas
xor
mov
mov
int3
jp
and
loop
cs
and
dec
dec
push
sub
call
retf
ror
retf
cmp
repz
xchg
dec
jb
inc
ins
pop
sbb
pop
scas
sti
push
outs
out
mov
inc
pushf
adc
movs
or
adc
cwde
int
cmp
and
push
inc
ds
xchg
(bad)
scas
daa
clc
add
rcr
xor
and
ficom
das
in
pop
popa
shl
pushf
pop
cs
test
mov
cmps
gs
push
ins
rcr
dec
dec
jg
call
cmp
inc
sbb
es
pop
xchg
mov
inc
hlt
out
sub
ja
adc
push
jne
xor
mov
pop
jge
dec
(bad)
int
mov
jne
mov
int
hlt
stc
adc
adc
add
in
sar
sbb
push
add
pop
scas
inc
fwait
test
push
repz
into
lods
and
cld
sbb
sbb
scas
add
or
(bad)
jnp
jno
sub
ror
jns
jns
jge
or
or
das
loopne
jne
(bad)
retf
out
sbb
leave
cmps
xchg
fsub
mov
pop
dec
pop
scas
stc
pop
out
mov
adc
imul
mov
mov
inc
inc
xchg
xor
les
push
(bad)
cmp
adc
jae
add
dec
out
in
add
jbe
call
sub
jecxz
and
jb
dec
sbb
mov
inc
mov
mov
jmp
in
push
imul
les
sahf
xlat
dec
inc
dec
sub
fadd
not
rcl
add
push
cdq
bound
adc
inc
outs
mov
(bad)
repnz
fdivr
jo
mov
pop
mov
sub
jecxz
(bad)
ins
(bad)
retf
mov
and
ss
sbb
jb
int
in
in
js
lods
jnp
pop
cmp
cld
or
mov
mov
or
lahf
sbb
xor
or
sti
enter
aas
mov
adc
pop
pop
inc
daa
call
jl
mov
stos
inc
retf
ins
in
pop
mov
jmp
cmp
js
sti
or
push
ins
mov
adc
pcmpeqd
jp
xchg
mov
loope
inc
mov
fwait
outs
sbb
int
push
cmps
push
mov
shr
test
mov
xor
out
sub
jge
mov
adc
fdiv
mov
push
push
or
scas
iret
js
pushf
mov
out
in
out
popf
dec
inc
inc
or
mov
in
leave
jnp
cwde
(bad)
mov
loop
mov
or
popa
es
(bad)
add
push
stc
push
movs
cmp
mov
dec
cmp
mov
or
adc
out
mov
dec
cmp
and
test
mov
inc
sbb
shl
imul
outs
mov
repz
xlat
fiadd
dec
adc
jmp
movs
(bad)
dec
xor
inc
mov
dec
add
and
sub
cmp
dec
jge
aam
icebp
hlt
or
dec
sub
fld
test
cmc
mov
scas
aad
test
add
xor
inc
or
mov
(bad)
push
xchg
mov
xchg
inc
(bad)
push
inc
aas
adc
fdivr
push
mov
pop
jecxz
mov
xor
sbb
xchg
mov
inc
adc
xchg
rcr
idiv
mov
outs
jns
push
in
or
loope
adc
hlt
inc
call
shl
cli
int3
test
xor
shr
pushf
in
ins
fild
mov
sahf
jp
xchg
add
iret
or
aad
xor
sub
rcr
add
fdivr
ret
push
sub
sbb
cmp
ins
xchg
cmp
cmp
shr
add
or
rol
dec
xor
mov
mov
mov
pop
addr16
sub
rcr
cmp
leave
inc
mov
sub
scas
arpl
loope
inc
fisubr
sbb
or
adc
aam
add
outs
adc
stos
mov
psrlw
jmp
das
cld
mov
in
addr16
outs
sbb
inc
call
arpl
mov
sub
dec
pop
mov
xchg
jg
adc
cli
xchg
into
cwde
jmp
push
fs
imul
inc
movs
mov
fmul
jne
mov
mov
sbb
lock
and
js
push
dec
cli
sub
or
daa
rcl
mov
or
add
jo
sub
pop
mov
out
or
mov
sbb
or
dec
mov
das
or
or
fimul
cmp
pop
sub
add
retf
xor
scas
and
pop
xor
jbe
inc
sub
les
mov
mov
ins
test
push
idiv
xchg
ja
idiv
pop
mov
popf
ss
adc
out
jae
jg
shl
lods
xor
fimul
sar
pop
mov
cmp
xor
jmp
mov
pop
icebp
std
mov
xchg
sub
sbb
inc
sub
xor
add
push
pop
mov
(bad)
movs
std
inc
clc
shr
sbb
test
pop
or
sahf
rcr
and
dec
adc
cmp
nop
mov
mov
lahf
xchg
cmp
stos
mov
test
jle
pop
jge
stos
sti
in
mov
jbe
mul
jmp
mov
cs
shl
mov
cli
pop
lahf
lods
inc
scas
push
ins
or
mov
jne
mov
pop
pop
neg
(bad)
mov
daa
add
adc
jne
rol
cmc
ins
retf
cmp
pop
fbstp
fiadd
adc
call
push
mov
(bad)
ds
mov
hlt
scas
arpl
xor
push
(bad)
jge
(bad)
mov
ret
xchg
sub
repnz
mov
nop
inc
cld
cmc
dec
movs
movs
ds
ins
cmp
les
dec
pushf
or
xchg
mov
sub
xor
std
inc
sbb
dec
jg
adc
mov
xor
loope
nop
dec
cmp
cmp
imul
xor
mov
jno
jns
pop
jle
ds
inc
dec
mov
push
aaa
test
and
mov
or
jmp
(bad)
sbb
ss
movs
jae
push
cmp
xor
dec
jge
push
(bad)
xor
retf
add
cwde
sbb
lock
inc
jmp
hlt
call
scas
and
sub
shl
pop
cs
xor
sub
dec
mov
inc
das
loope
out
sub
push
rol
add
loope
(bad)
adc
out
pop
and
add
pop
mov
inc
mov
rcr
and
push
jle
cmp
bswap
mov
or
jle
cmp
pop
adc
stc
pushf
les
adc
inc
mov
adc
sub
pusha
js
inc
and
mov
aam
sub
add
jp
lods
call
inc
repnz
pushf
ja
jmp
mov
repz
xchg
pop
cmps
lods
jecxz
mov
pop
pop
mov
out
push
jo
bound
stc
mov
sbb
cmps
jo
fnstcw
add
arpl
mov
test
shl
sub
adc
data16
mov
jb
addr16
sub
cmp
xchg
sub
dec
scas
xor
pushf
out
mov
dec
mov
or
aas
sub
and
imul
push
mov
cmp
mov
mov
sbb
and
xchg
out
js
cmps
push
push
(bad)
xchg
pop
mov
jecxz
mov
sub
dec
lea
pop
leave
pop
scas
(bad)
sub
or
xlat
mov
(bad)
movs
and
cmove
scas
fisttp
(bad)
std
mov
mov
mov
(bad)
loopne
pop
cmps
sbb
outs
mov
(bad)
mov
repz
mov
add
dec
and
stos
sub
mov
jmp
(bad)
or
xchg
cld
jb
or
lods
mov
sbb
push
sar
in
int3
in
push
nop
mov
in
arpl
call
adc
adc
cmps
pop
(bad)
in
stc
xchg
cmp
fisttp
mov
and
inc
pop
cmps
or
fld
sub
stos
mov
mov
inc
mov
fwait
stos
lahf
inc
xor
daa
in
jne
add
xor
scas
add
movs
movs
sub
mov
(bad)
jmp
(bad)
outs
je
mov
xor
loop
movs
test
daa
sbb
or
sub
lea
call
cdq
movs
mov
test
test
dec
(bad)
retf
fcmovu
adc
dec
mov
out
and
in
clc
and
dec
es
xchg
fdivr
jnp
ds
loope
mov
xchg
push
xlat
in
fcom
out
stos
enter
jmp
inc
ds
pusha
stos
add
fild
and
fwait
aad
in
jno
mov
bound
jecxz
stc
call
(bad)
jp
jo
jl
jecxz
stc
in
adc
dec
out
mov
mov
pushf
mov
cmp
shl
loop
nop
cmp
xchg
in
mov
xor
jge
xchg
sbb
das
dec
iret
arpl
daa
rol
jo
pop
(bad)
inc
pushf
xlat
push
jmp
and
sbb
xor
pop
xlat
pusha
out
jae
inc
pop
mov
xor
mov
pop
push
loopne
or
aad
jle
push
cmp
pop
mov
push
aam
in
add
push
or
and
pop
mov
(bad)
out
and
sub
and
or
popf
sub
mov
adc
int3
sbb
jno
cs
test
movs
je
dec
mov
imul
jmp
ss
jb
pop
outs
enter
fcomi
arpl
clc
cmp
mul
sub
aas
loope
push
cld
in
push
cmp
fwait
and
retf
rcr
mov
aam
aad
mov
pop
add
lods
iret
and
xchg
inc
fisub
mov
inc
sbb
adc
mov
dec
in
fst
js
aam
fldcw
mov
lock
imul
jno
retf
repz
cmp
je
pop
add
mov
lahf
mov
and
mov
test
inc
mov
sahf
lods
loopne
and
xor
retf
jae
add
retf
inc
subps
mov
push
fdivp
je
mov
xor
fmul
mov
addr16
fcmove
sbb
(bad)
enter
iret
jnp
mov
or
and
cmp
nop
cmps
inc
pop
cmp
lods
jp
jecxz
imul
push
cmp
inc
jmp
sbb
neg
pop
loopne
stc
xchg
or
push
mov
xor
out
mov
push
adc
pop
out
jmp
cmp
mov
or
adc
push
adc
mov
pop
xor
into
xchg
popa
mov
push
jle
mov
(bad)
xlat
ss
sbb
sub
and
sub
inc
sbb
sbb
mov
fs
push
inc
jb
les
fimul
cmp
xchg
cwde
popf
retf
pop
and
inc
xlat
mov
pop
jle
dec
or
ds
or
dec
outs
gs
loope
cmps
mov
pop
inc
mov
sti
mov
jmp
int3
(bad)
cli
and
pop
xor
retf
push
push
nop
lods
scas
mov
mov
daa
and
adc
mov
jmp
mov
jl
jo
cvtdq2ps
cs
cmp
adc
or
stos
aam
xchg
(bad)
aam
les
imul
sbb
push
mov
outs
dec
iret
out
mov
mov
fisub
rol
fadd
aas
cmp
and
je
(bad)
mov
iret
fcomp
push
cmp
xchg
pop
cmp
nop
push
mov
pop
mov
aam
pop
jae
mov
mov
movs
xchg
sub
loopne
outs
xor
retf
adc
pushf
push
aad
sub
(bad)
fmul
inc
inc
add
or
push
mov
xchg
xor
mov
adc
imul
mov
aas
push
jge
push
and
jmp
dec
loop
mov
sbb
sbb
xchg
and
and
pop
pop
pop
mov
jp
out
mov
cmp
(bad)
rcr
push
loopne
jb
sbb
(bad)
shr
add
adc
and
adc
arpl
stos
sub
call
xor
les
mov
sub
inc
xchg
je
pop
es
sub
push
pop
lods
and
fnstsw
and
sar
xchg
jbe
icebp
xchg
test
nop
leave
icebp
mov
mov
push
shr
movs
int3
and
cmc
sbb
mov
ins
inc
iret
(bad)
mov
rcr
movs
sbb
push
bound
sar
sti
pop
dec
mov
cmp
mov
cmp
push
xchg
call
pushf
pop
mov
aam
mov
(bad)
xor
push
mov
cmp
sbb
mov
mov
loopne
jge
and
mov
test
clc
and
cld
scas
arpl
mov
scas
sub
push
pushf
and
punpcklwd
in
(bad)
jle
or
sbb
xor
adc
jge
mov
test
mov
int
xchg
nop
inc
call
mov
pop
lods
fisttp
jmp
aad
push
cmp
adc
(bad)
pop
std
add
jecxz
je
mov
sub
adc
sbb
and
stos
in
pop
out
add
jae
das
cld
jmp
jl
scas
mov
fdivr
add
mov
cmc
push
xor
push
jmp
fisub
push
xchg
fcmovnb
or
arpl
or
inc
repz
out
repnz
ret
inc
pop
lods
int3
in
stos
rol
popf
mov
sbb
popf
fcom
call
cmp
dec
jl
cmp
ss
xchg
ins
mov
icebp
inc
es
in
sbb
push
pop
push
hlt
sub
es
nop
mov
pop
mov
cwde
push
stos
sbb
leave
sub
imul
aaa
push
fprem
pop
ret
mov
cmp
pop
dec
cmp
test
aaa
jo
dec
pop
sub
xchg
cmp
fistp
call
inc
jae
xor
adc
les
xchg
mov
mov
adc
scas
sbb
(bad)
mov
in
aas
pop
mov
sti
movs
out
out
jge
jecxz
inc
jg
retf
push
int3
popf
mov
xchg
stos
test
aas
adc
xchg
loope
xor
sub
neg
loopne
jl
cmc
cmp
fwait
out
movs
pop
in
daa
xor
stos
imul
and
mov
jns
add
cmp
add
in
and
xchg
xor
js
not
les
add
mov
enter
mov
pop
pop
sbb
daa
hlt
dec
mov
(bad)
cmc
jmp
or
pop
inc
movs
cmps
cmps
inc
adc
xor
ret
fadd
or
push
push
cmp
lahf
cwde
jmp
adc
push
std
mov
or
retf
sub
xor
mov
jl
push
fsub
addr16
enter
movs
mov
add
xlat
aam
jg
mov
loope
stc
mov
les
pop
test
outs
pop
movs
popf
ret
fld
mov
cmps
push
fld
mov
push
add
push
inc
jo
je
dec
xchg
leave
push
aam
inc
adc
xchg
mov
cli
push
mov
jle
test
hlt
adc
cdq
pop
pop
pop
imul
leave
repnz
imul
mov
mov
lock
cmps
inc
sub
daa
scas
or
inc
out
xor
ror
mov
shl
adc
ins
(bad)
sbb
xor
stos
sbb
int3
dec
xchg
bound
dec
and
bound
push
mov
sub
ret
js
xchg
dec
or
lds
mov
loope
gs
xor
jle
sub
jne
(bad)
(bad)
sbb
xchg
jecxz
mov
push
pop
sbb
loope
jmp
dec
rcr
xchg
cmps
push
and
cmp
mov
jecxz
mov
push
xor
mov
stc
(bad)
cmp
fcom
shl
inc
or
inc
and
inc
out
inc
mov
mov
cdq
pusha
pop
mov
mov
mov
push
adc
sbb
mov
mov
mov
icebp
fld
test
adc
(bad)
jmp
xor
ret
cmp
outs
test
int
jbe
adc
out
or
dec
in
iret
pop
sti
xchg
lods
xlat
or
mov
and
imul
stos
push
sbb
xor
pusha
stc
xlat
xchg
jle
dec
ss
in
dec
fwait
cmc
xlat
cmp
ja
jmp
addr16
(bad)
mov
sub
inc
and
xor
sub
mov
in
sbb
and
jns
ins
jnp
adc
and
out
lock
push
inc
cld
lahf
jge
repnz
cmp
dec
sti
shl
stos
out
les
ret
addr16
ror
pop
inc
movs
fisub
loopne
(bad)
test
xchg
xchg
mov
or
retf
or
scas
mov
mov
pop
scas
xchg
test
xlat
fbld
xchg
(bad)
mov
ficomp
cli
jmp
ss
fs
test
push
jg
add
dec
(bad)
pop
in
in
add
jmp
fs
or
dec
adc
imul
in
movs
push
retf
dec
xor
mov
push
icebp
mov
xchg
xchg
pop
dec
xchg
mov
ret
lock
call
mov
lock
jo
push
xchg
scas
das
jl
in
mov
xchg
and
sbb
inc
inc
xchg
leave
xchg
ds
jg
lds
and
cwde
aaa
mov
sbb
push
test
std
xchg
sub
les
mov
sub
les
pop
jo
pusha
jns
and
jl
aam
mov
mov
retf
popf
jmp
mov
adc
adc
xchg
gs
sbb
xchg
dec
jno
icebp
mov
mov
xor
test
cmc
push
xor
and
mov
push
ss
or
inc
mov
repnz
mov
add
movs
sti
aad
dec
scas
adc
in
jg
add
push
and
stc
mov
push
test
xor
and
add
loope
retf
push
mov
sub
and
mov
inc
int
inc
and
cmps
mov
icebp
stos
sbb
dec
jge
ins
dec
jno
lods
adc
ror
mov
xchg
(bad)
scas
cmp
out
xchg
fwait
xor
popfw
std
pop
sbb
mov
cmc
scas
and
dec
mov
dec
push
and
pop
push
mov
repz
dec
xchg
je
push
pop
xor
enter
inc
test
ja
or
pop
cmp
outs
fistp
xor
mov
repz
test
idiv
sti
inc
and
(bad)
imul
jne
pop
hlt
push
mov
cmp
pop
and
nop
inc
out
fbstp
fisttp
fwait
sbb
fwait
ja
add
sbb
loope
add
sbb
push
jle
retf
(bad)
clc
rol
and
int
and
ret
ins
jnp
shr
hlt
lods
xchg
pushf
inc
lds
ficom
xchg
xchg
xchg
call
cmp
xlat
xor
or
xchg
or
in
adc
adc
jmp
sbb
dec
repz
mov
daa
inc
bound
adc
mov
mov
neg
xchg
and
jb
std
call
add
dec
aam
fwait
dec
mov
(bad)
add
pop
cwde
push
sub
mov
fdiv
sbb
fwait
or
pop
jecxz
aas
rcl
call
test
out
mov
sub
pop
pop
movs
repz
(bad)
repnz
or
mov
data16
sar
sbb
sub
jae
jle
push
fdivp
or
add
ins
es
(bad)
lea
xchg
or
(bad)
test
mov
fnstcw
fcmovu
sti
sahf
(bad)
dec
data16
jle
std
jmp
enter
in
dec
js
enter
add
push
add
fiadd
std
sbb
adc
ins
sub
mov
movs
in
sbb
mov
lahf
xor
enter
sub
cmp
mov
fmul
ficom
aas
mov
dec
ret
daa
mov
fst
or
jecxz
add
hlt
inc
push
add
lock
pop
jb
(bad)
enter
cmp
rcl
ficomp
jns
jo
clc
stos
push
cwde
xchg
xchg
cs
icebp
lods
pop
enter
or
adc
fcom
sbb
dec
div
call
imul
call
call
jecxz
out
sub
jae
pop
js
adc
ins
pop
cmp
xor
ret
push
adc
sub
mov
xchg
mov
sub
jg
mov
ins
push
mov
cmp
pusha
popa
push
adc
jne
test
push
(bad)
mov
add
jne
mov
adc
mov
pop
sbb
mov
inc
mov
push
and
adc
sahf
sahf
int3
sbb
shr
mov
push
adc
(bad)
xor
and
push
xchg
or
retf
dec
fnstcw
enter
jns
nop
pop
xchg
jb
fsubr
cmp
inc
out
scas
test
lahf
pushf
jge
push
in
loop
ja
mov
bound
call
adc
mov
test
mov
xor
jmp
outs
jmp
daa
xlat
mov
stc
xchg
xor
out
ret
jo
xchg
cmp
retf
mov
push
xor
ret
dec
jnp
mov
mov
retf
cmp
and
aas
jns
in
xor
popf
mov
and
daa
fist
adc
jg
dec
sub
test
in
je
(bad)
fucomi
inc
xor
int3
mov
imul
sbb
(bad)
pop
retf
leave
pop
test
mov
xor
fist
neg
adc
pop
adc
adc
stos
fwait
int
inc
loop
cmp
sbb
add
add
ins
cmc
fistp
sti
and
int
mov
xchg
pop
lods
xlat
sbb
xchg
lock
mov
dec
dec
mov
xor
xor
pop
mov
imul
add
pop
sub
cs
fs
in
clc
pop
in
cmc
push
xor
movs
push
mov
lods
out
sahf
ins
aas
test
cmps
push
or
mov
hlt
mov
mov
sbb
push
jmp
jecxz
cmc
movs
imul
in
pop
les
xor
pushf
adc
inc
mov
xchg
(bad)
fisub
push
push
jo
sub
mov
sub
mov
out
mov
out
cmps
mov
fs
xor
dec
and
cmp
loopne
xchg
cwde
call
xchg
ss
mov
test
inc
adc
lea
sbb
popf
mov
inc
mov
add
xchg
stos
pop
loop
mov
xchg
in
pop
gs
ds
lds
outs
push
jae
mov
adc
sub
mov
adc
xchg
test
loope
lahf
mov
mov
inc
fdiv
adc
add
inc
rcr
mov
fmul
ja
dec
or
add
scas
icebp
lock
dec
sbb
std
iret
mov
js
add
cmp
lods
(bad)
sbb
dec
ja
cmc
pop
imul
and
mov
repz
push
push
and
mov
or
adc
les
loope
mov
ins
and
hlt
push
ja
lahf
xchg
mov
popa
adc
jecxz
cwde
add
cmp
ss
push
dec
ins
push
add
sub
imul
dec
jecxz
push
sub
retf
and
mov
xor
pop
in
jb
push
xor
icebp
mov
rol
(bad)
cmp
or
jae
inc
pop
add
mov
iret
sub
adc
pushf
dec
cmp
fwait
push
xlat
mov
jmp
jge
cmp
popf
and
mov
sub
mov
loopne
retf
push
shr
jle
outs
jbe
dec
stos
movs
cdq
loopne
ins
out
in
jge
test
fs
jp
xchg
je
pop
fcmovne
ret
jbe
lock
pinsrw
cmp
mov
lods
aam
inc
lods
xchg
call
cmp
push
aaa
jnp
arpl
inc
ror
pop
fiadd
push
xchg
jo
xor
out
fsubr
push
mov
repz
in
xchg
pop
dec
js
out
or
out
(bad)
adc
js
pushf
dec
push
loopne
cmp
sbb
mov
stos
lea
xchg
mov
push
and
ror
dec
movs
push
mov
or
cmp
repnz
into
or
inc
or
push
dec
stos
test
out
es
cmp
cmp
inc
pop
cwde
js
iret
repz
dec
inc
scas
packuswb
and
mov
in
add
(bad)
shl
and
cmp
push
cs
(bad)
in
pop
jge
adc
jle
mov
div
push
cmp
dec
leave
pop
rol
rol
sbb
int
lahf
pop
dec
add
jge
call
in
cwde
mov
mov
popa
adc
ja
xor
fsubr
loop
pushf
ret
mov
inc
xchg
mov
or
sbb
add
fidivr
jae
aam
pop
mov
rol
and
ror
xor
push
push
ficom
aaa
sbb
rcl
fsubr
dec
(bad)
pop
sar
mov
es
dec
cmp
jle
sbb
sub
clc
sbb
out
jae
les
mov
rcr
xchg
imul
push
pop
jecxz
cmps
mov
cmp
xchg
sahf
or
out
mov
cmp
inc
mul
mov
dec
pop
push
cmp
mul
sbb
stos
xchg
mov
ror
cmp
pop
test
sbb
in
(bad)
pop
jae
push
movs
xor
mov
mov
mov
mov
rol
sbb
lods
outs
push
push
add
inc
xchg
jle
icebp
ret
or
bound
xlat
shl
data16
inc
inc
push
pop
data16
sbb
(bad)
cdq
jmp
inc
into
call
lods
in
(bad)
pop
push
nop
sahf
push
jbe
inc
push
not
lods
jo
popf
dec
dec
mov
and
mov
fcomp
or
dec
pop
imul
mov
and
cmp
je
fnsetpm(287
pop
pusha
mov
cmp
push
cmp
push
mov
sbb
(bad)
imul
arpl
sbb
fistp
jg
ror
mov
mov
mov
(bad)
mulps
clc
pushf
lock
cmp
adc
idiv
mov
fisub
les
dec
into
sbb
bound
pop
arpl
sbb
mul
or
int
and
xor
int
and
mov
sub
bound
xor
dec
push
lds
ja
add
sbb
imul
xor
mov
sti
xor
or
pop
leave
adc
jbe
jl
jmp
cs
pop
ret
les
lea
mov
adc
mov
mov
xor
jnp
mov
cmps
(bad)
bound
cmp
dec
sbb
jge
clc
pusha
mov
mov
call
int
sub
pop
and
mov
in
push
(bad)
mov
sahf
push
or
and
mov
mov
push
jmp
cmp
jl
out
(bad)
xchg
ja
push
xor
jg
lods
paddd
hlt
mov
xor
movs
aaa
mov
out
xchg
mov
xor
cmc
test
and
div
adc
data16
(bad)
xchg
and
sub
jecxz
sub
mov
or
jmp
test
lods
int
mov
push
ret
dec
push
and
aad
adc
sub
pop
mov
das
daa
dec
xor
cmp
jle
lock
adc
mov
mov
stc
inc
(bad)
out
dec
cli
mov
cmps
mov
lods
push
push
lds
fnstsw
rcr
xchg
les
pushf
push
imul
mov
rcl
leave
sahf
jmp
add
lods
les
sar
ja
xchg
fcom
(bad)
lahf
sub
adc
movs
push
addr16
jmp
mov
fcomp
mov
sahf
dec
rol
jmp
xor
arpl
nop
and
out
cmp
ja
push
dec
sub
scas
pop
sahf
sub
sahf
shl
cmps
vmwrite
inc
jmp
adc
pusha
ror
(bad)
lods
stc
mov
sbb
dec
retf
out
test
xchg
enter
in
cmp
out
icebp
dec
fnstsw
loope
movs
scas
xchg
xor
into
call
into
cmp
jmp
dec
mov
push
stos
dec
call
js
sbb
push
stc
mov
jnp
push
jp
sub
cwde
test
jb
jo
fdivr
xchg
in
pop
inc
fcomp
add
mov
xchg
push
int
mov
push
bound
std
lea
inc
mov
call
(bad)
jo
mov
jnp
mov
pop
xor
cmp
pop
xor
jo
hlt
jnp
add
out
dec
mov
xchg
adc
fdivr
dec
jecxz
pop
xor
aam
mov
mov
pop
dec
pushf
and
int3
rol
xchg
cld
xchg
add
mov
adc
aad
mov
out
data16
ins
sub
into
lods
jae
fidiv
xchg
jo
push
je
inc
push
std
cmp
iret
loope
jmp
shl
mov
sbb
(bad)
fldl2e
mov
lea
adc
int3
mov
cmps
or
inc
push
dec
jl
inc
jno
and
cmps
push
push
jle
imul
xchg
push
or
mov
fwait
lock
pop
push
scas
imul
pusha
imul
add
add
or
jge
(bad)
int3
push
es
nop
fnsave
cmp
fs
fisubr
into
lods
ss
or
nop
test
leave
ret
sar
cs
popf
mov
test
movs
adc
xor
ins
fstp
jbe
js
push
js
inc
add
mov
out
ds
and
mov
cmps
pop
fstp
shr
or
cmps
push
mov
pop
xchg
fs
sbb
cmps
inc
add
in
cwde
cdq
pop
push
jmp
lds
cmp
dec
lods
dec
(bad)
in
fistp
and
das
dec
retf
sub
bound
jnp
mov
jae
adc
push
pop
sahf
adc
call
pusha
add
push
dec
mov
xlat
sbb
add
inc
jo
jmp
scas
test
sbb
fcom
fwait
and
adc
mov
stc
mov
mov
push
mov
dec
mov
ret
inc
imul
jle
dec
enter
enter
mov
jg
adc
mov
mov
pop
call
(bad)
cmps
cld
lock
test
sub
(bad)
pop
add
mov
shr
mov
pop
dec
aam
sbb
popf
adc
push
cmp
in
iret
pop
imul
jmp
ss
inc
add
cmc
pop
int3
popa
js
or
lods
cmps
pop
in
cwde
test
ds
cwde
jns
out
xor
push
or
clc
push
jno
push
mov
add
xchg
cmps
out
repz
jns
in
clc
xor
stos
mov
push
sbb
cmp
(bad)
shl
pop
adc
mov
leave
and
xchg
(bad)
sub
(bad)
cmp
cmps
repnz
push
mov
xor
pop
into
fsubr
dec
pop
out
outs
imul
sub
hlt
push
(bad)
sbb
mov
popf
lea
clc
cmp
aas
or
adc
inc
xor
mov
xor
lds
sbb
imul
jg
or
mov
aas
movs
sbb
inc
sub
fdivr
cmp
xchg
push
fstp
cwde
jmp
(bad)
adc
cmps
inc
add
push
and
mov
nop
mov
push
scas
or
(bad)
ins
enter
push
(bad)
add
or
mov
xchg
and
int
inc
daa
mov
out
sbb
adc
cmp
sub
mov
pushw
inc
adc
mov
int3
xchg
cmc
xor
addr16
pop
ret
(bad)
repnz
popa
(bad)
xchg
out
movs
mov
stc
shl
lods
or
out
movs
and
jb
xchg
push
mov
or
sub
(bad)
(bad)
mov
xchg
mov
lahf
sahf
push
adc
inc
mov
mov
shl
cmp
xchg
xor
ficomp
mov
sub
and
push
xchg
std
fst
call
dec
add
les
fld
pusha
adc
jl
mov
push
mov
dec
test
fsubr
dec
push
fwait
(bad)
rol
pop
xlat
pop
xchg
push
ja
sbb
jne
mov
add
outs
jns
mov
push
or
js
es
cmc
pop
lock
mov
dec
add
jecxz
add
arpl
sbb
adc
pop
in
js
push
adc
shl
jg
clc
scas
or
mov
shl
push
jbe
xchg
cdq
inc
(bad)
out
(bad)
pop
and
pop
jb
push
inc
push
test
out
and
test
movs
pop
dec
push
sbb
loope
aad
pop
add
aaa
mov
aam
mov
mov
out
jno
call
and
mov
and
mov
push
es
inc
jle
jno
es
in
ficom
sbb
pop
pusha
add
mov
cmp
test
cmc
fiadd
fcomp
sbb
xchg
scas
lahf
and
or
mov
mov
imul
push
mov
ja
mov
js
imul
sahf
(bad)
push
les
mov
lds
add
fsub
cld
aaa
xchg
jo
iret
cmps
sbb
jl
leave
push
sbb
cwde
out
repnz
cmps
sub
push
xchg
(bad)
fprem1
js
jle
xchg
add
(bad)
call
pop
mov
pushf
fucomip
sbb
(bad)
mov
adc
and
fmul
cmp
movs
hlt
icebp
jl
ins
lahf
repnz
loopne
loop
bound
call
sahf
pop
sub
repnz
xlat
cdq
push
and
sbb
mov
imul
inc
repnz
or
inc
inc
inc
test
(bad)
repnz
fstp
adc
popf
aam
mov
dec
out
out
shr
xchg
xor
jmp
mov
mov
dec
xor
pop
aad
inc
xlat
adc
stos
cmp
mov
jns
cmc
xor
jp
imul
repnz
jmp
mov
push
sub
mov
xlat
sub
pop
adc
data16
aaa
jns
push
ret
add
icebp
int3
nop
pushf
rcl
jnp
jae
cwde
cmp
add
ds
je
ret
mov
jmp
stos
sar
push
adc
xor
(bad)
inc
pop
clc
dec
into
int
pop
out
adc
pop
xor
and
aaa
in
test
sub
loop
jno
push
retf
add
(bad)
scas
sub
pop
addr16
and
int
sbb
in
call
push
(bad)
or
xchg
mov
fs
xchg
cmc
aaa
test
(bad)
xchg
test
cmps
lds
scas
push
sub
fsubr
mov
pop
fcomp
imul
or
sbb
xchg
xchg
xchg
mov
jbe
push
clc
jo
mov
pushf
aaa
inc
xchg
and
jb
inc
and
mov
mov
gs
xchg
jnp
std
sub
sbb
scas
(bad)
pop
fld
unpckhps
retf
sti
test
in
call
xchg
mov
lds
xor
in
hlt
push
add
arpl
fild
out
add
cmp
int3
mov
mov
or
add
fld
(bad)
das
sti
cmp
pop
mov
neg
dec
and
xor
mov
cld
int
ror
xor
adc
adc
fsubr
aaa
imul
push
cmp
repz
ins
outs
outs
scas
xchg
cmp
add
mov
shl
adc
lods
sbb
push
push
fld
or
cmp
(bad)
sbb
ja
ffree
xchg
pop
mov
cmp
loop
mov
das
inc
inc
imul
jo
mov
push
pop
popf
ret
les
xchg
fwait
push
pop
dec
outs
cmp
or
popf
dec
movs
mov
sub
adc
movs
adc
cmc
push
pop
push
or
xchg
mov
jmp
scas
call
sub
jmp
mov
mov
jmp
stos
inc
sub
push
std
lds
xchg
pop
stc
pop
mov
adc
xor
mov
in
cmp
stos
enter
call
xor
fidivr
inc
push
mov
es
ret
sub
in
scas
xchg
icebp
pusha
pop
xor
xchg
mov
mov
test
imul
(bad)
and
leave
mov
shr
retf
adc
frstor
pop
mov
xchg
jns
ins
out
mov
xchg
mov
scas
xchg
enter
and
fnstenv
dec
enter
push
(bad)
pop
loop
mov
pop
mov
push
(bad)
adc
out
add
push
loope
mov
inc
retf
loop
outs
inc
dec
int3
dec
(bad)
mov
ret
xor
push
and
daa
(bad)
aam
jb
jno
add
inc
(bad)
std
test
inc
mov
popa
xchg
jge
cmp
xchg
or
ror
push
test
mov
pusha
sar
rol
test
sti
sti
xor
outs
mov
inc
sbb
push
sti
loop
cwde
jecxz
jnp
mov
idiv
movs
bnd
daa
sub
pop
dec
xchg
retf
rcr
loop
cmps
leave
xor
jo
xor
push
cmc
fcomp
fwait
out
xor
and
test
shr
out
or
fisub
fwait
xchg
xchg
es
push
loope
je
jl
mov
mov
jecxz
push
or
rcl
push
fdivr
push
je
inc
adc
ss
test
lahf
inc
xor
sbb
lods
jo
mov
repnz
push
mov
in
mov
test
clc
inc
pop
push
dec
scas
mov
mov
dec
mov
mov
rcr
cli
outs
xor
lods
add
mov
outs
(bad)
mov
jne
out
inc
inc
out
bound
pop
sar
add
mov
add
rcr
xor
jbe
jns
xchg
add
or
cmp
inc
pusha
push
(bad)
es
scas
and
jecxz
mov
push
inc
fsub
sbb
mov
xchg
sub
aaa
sub
repz
jmp
adc
out
and
dec
in
out
inc
lds
mov
jl
in
push
(bad)
loop
xchg
icebp
push
dec
push
xor
xchg
and
rcl
mov
(bad)
dec
or
movs
jbe
fisub
mov
jb
stos
or
rcr
jl
xlat
loopne
adc
cdq
(bad)
cli
xor
mov
iret
or
ret
int
(bad)
clc
mov
mov
pop
dec
scas
push
inc
or
in
inc
pop
xor
js
jg
pop
fwait
mov
fdivr
pop
push
mov
dec
mov
ins
adc
xor
test
in
cmp
mov
scas
loop
mov
and
mov
jo
push
adc
sbb
call
inc
aam
cli
inc
mov
fmulp
xor
mov
movs
adc
js
jno
call
add
mov
out
(bad)
aas
stos
pop
sub
in
dec
mov
and
out
aam
jbe
test
loopne
sub
out
pop
mov
ficomp
sub
add
lock
add
mov
mov
inc
inc
dec
inc
pop
sub
jl
or
outs
dec
out
add
sar
pop
fisttp
mov
push
pop
add
and
loop
cdq
inc
mov
mov
sti
leave
shl
stos
cli
mov
sbb
or
iret
cmp
or
out
mov
std
sahf
mov
ret
das
in
push
rcl
rcr
jmp
repz
mov
lahf
out
in
lock
dec
cli
nop
cmp
xor
outs
or
pop
xor
in
sub
in
mov
pusha
sti
mov
repz
adc
jne
jecxz
mov
push
scas
adc
mov
scas
retf
dec
mov
push
lds
add
loopne
daa
test
or
or
pop
jo
sti
sar
popf
scas
or
inc
fcmove
ret
sub
les
xchg
loopne
gs
add
loope
ret
int3
xor
cmp
pop
cmps
xchg
sbb
jle
cmp
or
mov
aad
sti
popa
das
push
pop
sub
adc
pop
in
out
out
push
jo
cwde
ds
push
je
pop
push
dec
mov
in
mov
fisub
not
shl
sbb
adc
jg
and
or
mov
and
inc
jbe
out
xchg
data16
mov
mov
fisub
push
enter
pop
js
ins
cmp
iret
inc
or
je
mov
clc
xchg
push
fs
xchg
dec
mov
push
loop
mov
pop
pop
sbb
push
movs
fadd
movups
loop
ins
into
push
cli
jecxz
xor
pop
test
jb
sahf
dec
pop
(bad)
xor
pop
add
dec
in
jle
sti
leave
retf
dec
push
cmp
sahf
inc
and
bound
aas
dec
scas
add
add
and
stc
scas
lock
stos
outs
icebp
xchg
dec
sar
dec
or
mov
mov
punpckhwd
test
mov
fst
ffree
mov
test
add
shl
dec
xchg
cmp
je
mov
or
sub
ret
(bad)
push
lock
adc
les
in
adc
cmp
ja
ss
sahf
push
pop
mov
lahf
std
and
push
push
push
jmp
pop
call
sbb
cld
imul
je
jmp
ret
adc
jbe
mov
imul
mov
sub
test
or
cli
std
rcr
cmp
sub
fwait
dec
mov
pop
xor
xchg
cmps
or
push
dec
pop
xor
push
sub
and
mov
fsub
pop
scas
pop
cmc
and
xor
mov
es
stos
sub
pop
and
aaa
sbb
push
dec
pop
rcl
xor
add
xchg
dec
(bad)
cs
sbb
shr
mov
shl
jl
dec
mov
pop
mov
pop
mov
lock
outs
xor
icebp
es
xor
pop
pop
pusha
sub
and
jns
call
push
jge
and
sbb
stos
imul
(bad)
in
add
jnp
push
retf
aam
pushf
cmc
mov
(bad)
xchg
mov
push
push
jbe
popf
lods
sub
das
xchg
movs
inc
(bad)
repz
add
mov
fidiv
gs
sbb
or
sub
leave
jmp
fisttp
cmps
cdq
nop
imul
pop
and
jb
movs
test
fdiv
or
test
mov
inc
popf
test
xor
icebp
scas
or
mov
cmps
popa
jae
out
dec
fist
or
daa
cmps
mov
cmp
aam
fcmove
sbb
clc
add
mov
adc
jno
aam
sub
(bad)
ins
jmp
sar
sub
pusha
mov
sbb
mov
popa
stos
in
mov
xchg
sbb
cmp
in
mov
cmp
lods
jb
js
xor
dec
adc
data16
cmp
imul
mov
popa
ds
test
loope
push
out
mov
xchg
xchg
test
sbb
sub
test
mov
iret
sti
add
aas
imul
scas
xlat
push
mov
push
mov
mov
mov
pop
and
(bad)
daa
add
xor
jmp
sbb
mov
stos
fdivr
ins
das
retf
loope
dec
fadd
movs
pusha
rcr
enter
mov
add
loop
lods
mov
ins
and
pop
cmps
(bad)
adc
add
stos
std
sbb
pop
cmp
push
lods
jne
cmp
mov
sbb
int
adc
popf
xchg
mov
lea
dec
in
cmp
ja
fist
pop
xor
jmp
add
ins
daa
and
mov
inc
test
fisttp
movs
shl
outs
loopne
out
mov
mov
jb
pop
push
iret
ret
push
aad
mov
or
int3
ins
xchg
call
sub
inc
push
inc
pushf
mov
sub
pop
jns
inc
inc
mov
ret
cmc
jg
add
aam
push
xabort
mov
sub
pop
xor
cli
fdivr
pop
xor
sbb
add
inc
pop
aaa
pop
jmp
jmp
mov
jne
shl
sub
push
movs
jecxz
pop
adc
push
retf
xchg
test
lea
sbb
cmp
les
xchg
je
sub
or
pushf
lock
mov
sub
jo
dec
test
cmp
loop
adc
mov
out
test
ret
mov
inc
jo
and
icebp
jae
xchg
in
into
pushf
mov
xchg
call
cmps
push
xchg
push
and
xchg
add
and
cdq
push
fisttp
mov
aam
enter
scas
cwde
fchs
push
out
dec
xchg
mov
push
mov
rcl
icebp
mov
adc
repz
stos
mov
fmul
out
pop
mov
lds
shl
push
lods
sbb
jne
xchg
scas
sub
hlt
gs
or
scas
push
mov
imul
sub
loope
rcl
out
adc
or
push
xor
call
fwait
aaa
aaa
push
out
adc
fdivr
dec
(bad)
je
mov
and
xchg
test
mov
call
(bad)
cmp
dec
cmp
ror
pop
retf
loopne
imul
in
(bad)
ss
loope
or
xor
push
(bad)
pusha
repnz
pop
pop
div
jnp
enter
mov
imul
mov
les
retf
inc
popf
int
cmp
(bad)
lock
out
jp
mov
inc
sbb
and
dec
pop
es
lahf
or
push
retf
pop
sbb
hlt
inc
aad
icebp
loop
pop
xchg
push
and
adc
xor
sti
into
fwait
popa
aas
nop
xchg
inc
mov
fadd
aas
push
fadd
mov
test
call
fdivr
data16
jo
xchg
js
mov
nop
ror
and
loop
ficom
push
popf
loop
jb
cli
mov
and
jb
xchg
dec
pop
sub
or
outs
clc
jno
dec
add
fwait
xor
aam
ins
out
aaa
ret
sbb
loopne
xchg
das
pop
cmps
mov
sub
mov
jp
outs
inc
fisubr
xor
outs
and
cmp
and
jns
jae
pop
iret
imul
out
jmp
pop
scas
mov
into
mov
push
cmps
imul
out
ins
aaa
sbb
ins
push
xchg
and
jb
stos
mov
and
pop
aad
aad
dec
js
cli
push
xchg
(bad)
push
mov
sbb
pop
ret
push
ror
addr16
xchg
ins
mov
ja
jnp
jne
(bad)
fcmovbe
pop
sahf
pusha
cmp
rcl
jg
pop
ror
popa
cli
shr
in
push
fnstcw
pusha
mov
push
les
inc
push
sbb
adc
or
jp
xlat
mov
je
dec
pop
out
add
fcmovbe
jge
lods
push
pop
fdiv
xchg
(bad)
imul
shl
push
lahf
popa
cdq
cli
(bad)
sub
jmp
imul
push
inc
and
ja
push
push
mov
iret
aam
mov
sbb
mov
fs
les
cmp
fimul
xchg
push
sbb
add
loopne
mov
shr
inc
aas
imul
and
dec
adc
movs
lods
or
int
cmps
out
pusha
jbe
mov
loopne
jge
sbb
adc
imul
dec
xor
bound
pop
xor
test
(bad)
sbb
add
xchg
xchg
jne
stos
dec
movs
scas
out
(bad)
cmp
cld
fld1
(bad)
jmp
call
ins
xchg
lahf
inc
mov
stc
adc
adc
bound
outs
dec
rcl
ja
in
xchg
cmp
cwde
cli
int3
and
or
inc
rcl
pcmpgtb
mov
leave
or
gs
(bad)
(bad)
add
int
pop
or
stos
rol
(bad)
sar
add
movs
mov
(bad)
cld
push
mov
mov
sbb
xor
lock
call
push
mov
add
test
(bad)
imul
sub
cmc
inc
cmp
fild
and
bound
lds
jnp
stos
sbb
cmp
clc
adc
sub
test
fs
out
stos
cmps
push
mov
mov
(bad)
test
aas
and
sbb
sub
and
xor
(bad)
cdq
fldenv
iret
xchg
les
pop
inc
dec
dec
or
and
popa
or
outs
cmp
push
mov
adc
inc
sbb
jne
repz
je
out
inc
jmp
leave
mov
lods
jle
xchg
dec
inc
add
sub
add
js
adc
lahf
pop
sub
popf
cmc
fstp
repnz
sub
mov
lods
xchg
fwait
inc
(bad)
adc
inc
mov
outs
je
std
xor
cmp
fcomp
and
test
pop
or
fs
mov
sbb
push
repnz
add
dec
jb
mov
push
dec
sahf
into
push
mov
fsub
push
mov
arpl
xor
mov
mov
inc
cmp
inc
jne
cs
push
push
cdq
ret
sub
(bad)
xchg
sub
sbb
(bad)
or
jmp
xchg
pop
add
in
xchg
rol
(bad)
test
xor
push
push
mov
cwde
fnstenv
mov
cdq
sbb
xor
cld
xor
pop
cld
sub
sbb
inc
lods
leave
aas
xchg
push
and
push
mov
vcvtsi2sd
in
stos
sbb
sub
in
dec
nop
jno
jmp
inc
sub
(bad)
loopne
cs
lods
or
xchg
inc
mov
in
sbb
nop
arpl
jae
xchg
mov
pop
loopne
mov
rcr
ret
es
xchg
in
mov
xchg
add
je
jge
scas
rcl
js
push
adc
mov
jb
cmp
and
mov
iret
sub
enter
lahf
lds
sbb
daa
je
mov
dec
nop
stos
inc
cmp
(bad)
cmc
xor
iret
xor
jmp
or
sub
xchg
ins
cmps
adc
sti
jmp
ficomp
(bad)
push
mov
daa
les
add
sub
xchg
mov
add
stc
pop
mov
mov
ins
push
(bad)
push
mov
or
sub
retf
jle
jmp
retf
arpl
dec
mov
leave
repz
fwait
pop
pop
outs
mov
mov
pop
pop
and
and
ret
xor
mov
inc
inc
and
xlat
mov
imul
pop
and
xchg
fimul
mov
inc
andnps
adc
test
sub
retf
push
fbstp
pusha
(bad)
mov
adc
sbb
lahf
into
out
mov
sti
cmp
ds
ror
or
pop
test
cs
imul
fild
imul
enter
mov
mov
repz
inc
mov
in
mov
adc
pop
add
add
xchg
dec
jl
xchg
and
inc
inc
mov
xchg
loope
(bad)
adc
in
dec
outs
call
pop
les
dec
sbb
out
dec
adc
adc
fwait
mov
fstp
push
xchg
adc
stos
push
ins
pushf
aas
add
out
jge
call
mov
cmps
jno
dec
fs
xor
aaa
xor
pop
in
(bad)
jle
neg
xor
addr16
inc
das
push
aas
retf
xchg
pop
cmps
jb
add
(bad)
enter
xchg
push
push
mov
fbld
pop
pop
inc
jmp
outs
jp
cmp
in
leave
mov
test
pop
ja
enter
pop
and
imul
dec
jmp
js
shl
popa
push
test
adc
movs
mov
imul
jecxz
arpl
jnp
mov
jno
sbb
jl
sbb
add
mov
repnz
inc
pop
adc
xor
or
or
adc
jl
mov
call
pushf
imul
stc
mov
adc
setge
mov
or
xchg
xlat
xor
shl
pop
sar
xchg
cmp
ja
xlat
xchg
cmps
test
lds
fsub
dec
fdivrp
in
lahf
xchg
lods
xor
mov
mov
sbb
jns
je
movs
mov
push
retf
or
inc
pusha
pop
mov
sub
clc
cmp
or
push
mov
data16
lods
inc
mov
jo
outs
add
mov
(bad)
hlt
into
and
cdq
push
fs
pop
popf
ret
les
mov
mov
cdq
or
push
adc
cmp
ins
cmp
mov
cld
adc
add
bnd
sbb
inc
mov
mov
ja
repnz
push
lds
fild
popa
mov
stos
jne
stos
shr
(bad)
fcomp
inc
and
cmp
bound
inc
mov
xor
hlt
pop
retf
or
mov
mov
jne
adc
lahf
dec
pop
push
leave
jo
adc
mov
sbb
movs
pop
dec
push
and
(bad)
pushf
xor
cmp
ins
(bad)
mov
iret
nop
ror
xor
push
in
push
mov
cwde
xor
add
cmp
jbe
sub
xor
cmp
fsub
pop
es
dec
dec
pop
mov
shl
pop
mov
hlt
loope
push
push
lock
and
call
jmp
add
js
mov
jb
ins
ror
dec
adc
push
movs
clc
retf
into
iret
sub
movs
push
test
push
mov
neg
sbb
mov
mov
dec
and
fstp
movsx
sbb
addr16
scas
pop
rcl
mov
hlt
outs
xchg
aas
pop
sub
out
inc
ret
cmp
cmp
icebp
xchg
out
ds
xor
push
sub
cld
inc
jl
lea
call
dec
jg
jnp
fstp
ins
add
pop
mov
add
fnstsw
cmps
jb
or
push
xor
loope
mov
cwde
sti
mov
test
leave
jne
sub
cmc
lods
lods
sub
lods
ret
cli
sbb
out
mov
call
pusha
fild
push
int
imul
outs
push
ficomp
add
call
aas
icebp
out
inc
dec
inc
mov
pop
adc
dec
test
mov
push
ja
mov
imul
test
sbb
xchg
mov
or
mov
bound
cmp
fnstcw
push
pop
or
in
lea
and
cmp
xchg
aam
mov
sbb
in
jns
and
xchg
cmp
pushf
pop
jne
call
push
adc
dec
xchg
cld
call
outs
pop
mov
push
addr16
sbb
jnp
out
shl
push
and
fs
push
fmul
add
dec
mov
cli
jp
out
es
inc
and
call
out
xchg
add
mov
out
inc
dec
jl
cmp
pop
and
call
mov
adc
push
inc
movs
add
(bad)
mov
outs
cs
fidiv
jae
imul
es
jnp
push
add
jnp
cmc
iret
iret
std
dec
movs
call
pop
push
or
mov
xchg
cmp
mov
lods
or
leave
jl
std
test
fs
out
jge
push
mov
push
add
cs
popf
push
stos
or
and
arpl
and
mov
repnz
es
ins
xchg
ds
xor
pop
xlat
xor
test
neg
out
pop
push
adc
iret
and
xchg
cs
lea
cmp
in
xchg
jge
mov
and
or
cmps
std
add
sub
inc
xchg
push
ret
pop
jge
xchg
shl
push
addr16
cmp
sbb
mov
xlat
jmp
pushf
mov
adc
mov
sbb
scas
movs
stc
ficomp
mov
sbb
repz
mov
out
sub
cmp
mov
dec
data16
shl
cmp
loopne
mov
mov
fisub
mov
push
cmc
cmp
cmps
ins
or
popw
mov
xchg
sub
stos
jl
out
pop
lock
push
mov
repz
mov
lds
mov
adc
pop
xchg
aas
stos
sbb
mov
sub
loop
push
enter
add
jecxz
jno
jo
dec
mov
inc
nop
rcl
fstp
xor
daa
jbe
cmp
mov
cmps
adc
outs
cmp
arpl
push
sub
adc
xchg
adc
out
jmp
loope
jns
ret
mov
adc
add
aam
test
xchg
les
das
pop
sahf
(bad)
mov
(bad)
sbb
int
jle
inc
not
adc
jo
imul
movs
das
stos
fucomp
push
pop
hlt
adc
cld
jmp
outs
test
icebp
enter
loope
(bad)
rol
push
push
lock
inc
repnz
dec
pop
mov
mov
dec
jne
cmc
loop
push
lods
mov
dec
(bad)
xor
sub
cmp
lock
lahf
dec
int
into
stos
fdivr
icebp
ds
aas
inc
inc
xchg
sbb
mov
inc
lahf
jae
enter
inc
xchg
and
push
leave
sub
es
in
jns
pop
xor
jae
dec
dec
stc
test
mov
cs
js
xchg
xor
push
push
sub
fmul
xor
retf
xchg
into
das
ficomp
push
dec
shr
pop
bound
jp
jae
(bad)
fcomp
adc
mov
shl
push
sbb
sub
(bad)
jnp
clc
cwde
xchg
out
repnz
mov
pusha
jnp
(bad)
jns
(bad)
inc
xor
lea
not
and
call
stos
mov
mov
dec
loopne
jmp
mov
sti
cmc
sub
popa
loop
pop
fwait
pop
inc
jmp
in
bound
push
sbb
daa
ret
loopne
mov
inc
push
adc
pop
inc
add
pop
mov
enter
mul
pop
sbb
add
(bad)
push
call
mov
test
lods
mov
or
pop
cli
sar
xchg
or
pop
jo
inc
inc
les
mov
sub
arpl
jecxz
les
ins
js
jle
mov
das
sub
adc
cli
retf
xlat
and
cmp
ret
add
test
sub
mov
js
lock
les
dec
pop
pop
push
cmp
mov
leave
sti
inc
jg
dec
mov
sbb
ror
stos
jns
imul
pop
mov
sbb
clc
ret
mov
dec
scas
adc
jo
in
mov
mov
shl
inc
jp
dec
movs
mov
mov
and
mov
push
call
xor
fisttp
push
loopne
cmp
sub
pop
hlt
jle
mov
fwait
xor
stos
pop
fwait
sub
test
imul
out
dec
hlt
dec
neg
xor
daa
mov
ret
sub
fcomp
test
in
(bad)
out
imul
sub
inc
es
data16
cmp
lds
test
hlt
les
addr16
xchg
aas
mov
shr
pop
pop
or
imul
jl
addr16
adc
out
cli
in
mov
push
or
iret
bound
add
sbb
(bad)
mov
sbb
and
fild
dec
in
std
pop
pop
mov
and
push
or
jbe
aaa
cdq
fwait
rol
jns
cmp
paddb
and
mov
out
cmp
or
leave
jmp
inc
jmp
and
sbb
sub
add
(bad)
sar
sbb
mov
sub
pop
add
push
jmp
std
xor
test
in
jecxz
inc
mov
pop
lods
mov
outs
cli
mov
jne
xchg
int3
arpl
jo
out
retf
and
push
rcr
adc
mov
mov
jae
add
fstp
cmp
aad
cdq
dec
shl
rcl
xchg
mov
push
xlat
sbb
daa
adc
pop
pop
sbb
nop
inc
add
imul
xlat
shl
sbb
cmp
sbb
retf
daa
fldcw
std
test
xor
jae
mov
cmp
jl
add
aam
mov
aas
and
clc
sar
mov
js
push
sub
push
sahf
iret
stc
jge
stos
mov
imul
pop
mov
fmulp
xor
jnp
pop
arpl
cdq
ds
rcl
jo
xor
xchg
iret
mov
cmp
dec
mov
fisub
pop
movs
and
pop
dec
sbb
cmp
hlt
dec
dec
outs
fdivr
in
shr
pop
(bad)
jns
rol
test
sti
inc
fld
xlat
mov
add
test
sbb
fwait
add
add
cmp
fwait
fwait
or
rcl
ja
int
inc
std
test
jg
dec
xchg
xchg
mov
loope
fwait
in
cmp
fisttp
jbe
jmp
in
mov
cs
(bad)
dec
(bad)
xchg
int
add
out
lods
push
xchg
rcr
adc
out
sar
retf
fadd
jp
les
aam
add
and
xchg
call
imul
mov
sub
xchg
jmp
mov
xor
and
pop
ins
out
test
fsubr
loopne
cmp
jecxz
jmp
dec
clc
out
gs
or
jno
(bad)
cld
jl
(bad)
add
test
mov
aas
js
daa
add
mov
push
adc
mov
mov
inc
push
sub
test
aas
mov
add
repnz
xor
cmp
popa
dec
pop
call
mov
add
out
inc
push
xchg
sbb
icebp
scas
movs
(bad)
aaa
(bad)
dec
cmp
mov
add
add
xchg
lea
inc
fs
dec
mov
push
xor
push
popa
push
push
cld
jmp
fisubr
sub
push
loop
dec
push
arpl
jne
lds
shr
in
mov
cmc
xchg
cmc
(bad)
mov
jmp
cmps
pop
xor
rcr
cwde
inc
xlat
pusha
rcr
xor
enter
mov
cdq
test
(bad)
aas
mov
jns
ds
xchg
add
dec
gs
pusha
in
aaa
retf
dec
jns
shl
pusha
or
mov
inc
mov
fdivr
adc
arpl
out
mov
sub
push
mov
dec
mov
mov
mov
idiv
inc
les
jns
pop
jp
and
outs
outs
sub
mov
aad
xor
adc
push
inc
dec
mov
ret
(bad)
jg
push
jbe
xchg
stos
(bad)
mov
inc
mov
mov
(bad)
out
or
pushf
popa
sbb
push
mov
rcl
test
fs
imul
mov
jne
mov
xchg
xchg
pop
into
ret
das
pushf
int3
es
pop
jg
pop
jno
cmp
fnstenv
das
nop
mov
test
mov
in
in
dec
stos
dec
pop
sub
or
sbb
addr16
mov
xor
in
cmp
dec
pusha
xchg
repz
pop
cld
adc
nop
and
xchg
out
mov
adc
test
hlt
mov
xchg
mov
adc
std
inc
mov
push
push
out
cli
push
xchg
mul
imul
xchg
xor
enter
adc
test
sbb
and
jmp
cs
dec
jns
not
(bad)
out
jbe
(bad)
jmp
jecxz
mov
loope
neg
into
jge
cmp
pushf
cmc
ins
popa
gs
icebp
call
in
adc
push
dec
lea
fcmove
dec
jmp
cmc
mov
xchg
and
iret
mov
push
jns
adc
xor
gs
jmp
test
push
ret
mov
in
(bad)
cmp
xchg
ret
mov
test
ror
nop
bswap
pop
int
adc
xchg
mov
sub
sub
test
inc
test
add
sub
inc
and
rcr
das
movs
rol
rcr
cdq
aad
push
xchg
add
mul
data16
or
outs
clc
call
and
adc
repnz
fcomip
ret
inc
ret
ret
cmps
cmc
js
test
lods
mov
lahf
sar
xor
jo
rcr
aad
in
je
enter
push
add
add
mov
jmp
adc
dec
aad
lods
lods
ins
mov
and
or
repz
rol
jmp
pop
or
imul
add
pop
adc
xchg
mov
pop
mov
aaa
test
inc
data16
pop
and
add
pop
mov
xacquire
xchg
adc
cmps
push
clc
call
or
call
inc
add
stos
sub
scas
jmp
jnp
push
cli
in
rcr
or
pop
leave
or
les
and
fst
mov
sub
les
inc
mov
js
movs
dec
outs
cmp
jge
out
and
imul
lods
cmp
pop
repz
out
and
das
adc
adc
push
(bad)
(bad)
cmps
bound
test
addr16
mov
call
hlt
xchg
(bad)
jle
xchg
push
std
xor
fdivr
and
fldenv
and
mov
imul
fsub
retf
out
fnstsw
in
pushf
ficomp
xchg
scas
inc
in
sbb
inc
pop
aad
iret
je
cmp
nop
jno
je
sub
jae
outs
jo
mov
pop
iret
aas
mov
call
cmp
sbb
stmxcsr
stc
pop
inc
movs
sbb
lahf
fwait
call
lahf
xchg
dec
mov
(bad)
sbb
or
pop
dec
mov
add
pop
sti
add
inc
jecxz
or
xchg
inc
in
cmpxchg
clc
call
call
or
popf
fstp
sbb
fs
shr
mov
adc
or
cld
stos
fnsave
mov
jmp
loope
xor
pushf
jno
mov
inc
int
ror
inc
xchg
ss
or
sbb
mov
cld
inc
xor
int3
xor
mov
std
jecxz
retf
jns
ins
fisttp
and
xchg
cli
cmc
mov
int3
xchg
dec
(bad)
and
push
mov
xchg
mov
push
cdq
jmp
repz
mov
shl
mov
(bad)
xchg
inc
add
int3
fild
pop
lock
jno
repz
mov
stos
les
fsub
fwait
mov
pop
sar
cmp
dec
movs
pop
pop
jae
add
in
mov
test
movs
arpl
add
stos
fidiv
sbb
xchg
pop
fld
jo
jno
adc
xchg
in
(bad)
mov
into
pop
pop
out
stos
pop
femms
sub
ja
jne
add
loop
dec
mov
mov
hlt
popa
add
mov
inc
inc
(bad)
ins
add
sbb
rcr
loopne
mov
dec
sub
jg
mov
ror
inc
test
popa
dec
and
call
add
jg
push
xchg
test
jp
outs
pop
dec
aad
xchg
cmp
pop
das
test
(bad)
mov
and
cwde
call
dec
popa
inc
mov
mov
in
dec
jne
ret
and
xor
add
adc
cmp
ss
pop
lea
(bad)
cmp
mov
add
mov
mov
push
xlat
cmps
adc
stos
sub
mov
xchg
push
repnz
aaa
sub
fldcw
jmp
and
push
add
fistp
outs
rcl
mov
out
adc
cld
aas
dec
maskmovq
xchg
add
loopne
test
out
xchg
cmp
or
and
(bad)
add
sti
lods
inc
dec
out
popf
rol
popa
pop
pop
jg
jno
sahf
adc
aaa
add
xchg
mov
add
sbb
ins
call
jae
jle
xor
pop
in
cmp
ja
inc
and
pop
and
mov
mov
mov
stos
(bad)
test
ins
out
fstp
dec
pop
or
cld
or
dec
push
(bad)
data16
cmp
mov
cmc
xchg
inc
stos
imul
in
mov
mov
(bad)
data16
xor
xlat
outs
movd
daa
mov
add
je
mov
adc
mov
inc
mov
scas
retf
ficomp
adc
jne
lods
sbb
stos
sub
fdiv
pop
sbb
xchg
xor
pop
fstp
out
movs
retf
pop
mov
imul
add
(bad)
mov
jmp
je
dec
jb
cwde
dec
addr16
xchg
ins
int3
data16
add
pusha
addr16
clc
pop
push
sbb
dec
pop
loop
xchg
in
and
mov
sbb
ret
mov
(bad)
or
xor
mov
or
pop
dec
xchg
push
(bad)
out
imul
dec
or
fadd
and
call
inc
sahf
std
enter
aam
popf
xchg
pop
inc
sti
pop
retf
dec
imul
xor
xchg
push
xchg
xchg
fcom
or
pop
test
call
cmp
std
pop
std
cmc
dec
fisttp
cmp
(bad)
mov
scas
dec
(bad)
xor
div
adc
pushf
xchg
leave
out
sbb
pushf
sar
test
out
js
inc
xor
inc
mov
ins
jo
mov
dec
int
inc
sbb
pop
lock
fcom
inc
push
rcr
mov
xchg
loope
shl
cmps
adc
dec
adc
cdq
or
pop
jb
shl
mov
outs
jnp
cmps
xchg
out
(bad)
fild
rcl
sub
fst
lahf
outs
push
ror
iret
shr
cli
or
dec
int
ret
fdiv
cmp
dec
nop
or
ror
pop
adc
fadd
mov
sub
sbb
and
adc
mov
sub
dec
add
adc
ja
repnz
mov
xchg
add
ficomp
out
es
retf
out
jmp
mov
mov
(bad)
fs
sbb
ficom
pop
add
jbe
rcl
ja
jb
pop
jae
nop
add
in
in
or
(bad)
pop
and
mov
cmc
fiadd
iret
aam
dec
in
jp
call
pop
aad
jbe
lods
fst
sbb
dec
std
and
or
loope
fcomp
cmp
test
stc
cmp
mov
test
fwait
rcr
mov
mov
loopne
cmp
out
out
jne
push
inc
mov
jne
or
pop
stc
mov
xor
inc
jb
aaa
mov
mov
jns
inc
mov
inc
push
mov
dec
cmp
push
imul
iret
cmp
cmp
pop
adc
pop
es
lods
ret
arpl
xor
cmp
pop
aam
pop
imul
and
movs
pusha
retf
pop
leave
into
leave
aas
add
or
test
fild
sbb
icebp
adc
repz
in
dec
test
add
shl
mov
sub
xor
imul
adc
(bad)
inc
int
and
repnz
mov
xlat
or
sub
(bad)
jnp
push
or
push
and
push
xchg
mov
repz
mov
mov
shl
in
stc
jmp
push
fst
js
add
std
push
or
inc
xchg
adc
test
xchg
adc
xor
scas
push
bswap
inc
lods
scas
mov
add
pop
mov
mov
sbb
stos
pop
call
sub
mul
xor
cmp
push
cmp
adc
push
(bad)
and
outs
push
xor
inc
mov
adc
mov
sar
adc
lock
sbb
xchg
adc
mov
push
fadd
lods
aam
push
jno
sbb
push
mov
movs
mov
cmp
stos
mov
push
pop
loop
fild
jp
cwde
jmp
or
neg
fsub
cmp
mov
pop
xchg
fnstsw
push
xor
aaa
sub
add
push
or
cmc
xchg
add
inc
jl
fst
mov
popa
and
dec
sub
mov
jmp
out
cdq
jo
mov
cli
repnz
inc
pop
test
push
push
adc
mov
push
imul
cmp
and
mov
mov
test
inc
push
inc
out
pop
les
sti
aad
mov
cmp
sbb
retf
cmps
jmp
sub
aam
inc
inc
pushf
cs
sub
ds
mov
jl
ror
pusha
sub
fidivr
fst
aam
icebp
shl
or
std
popf
inc
sub
cmps
mov
test
jge
outs
je
loop
xor
xor
es
imul
or
jl
mov
mov
movs
mov
dec
pop
dec
rcr
add
inc
push
push
push
pusha
mov
popf
arpl
out
fsubr
stos
pop
mov
mov
retf
mov
ret
add
js
data16
aam
xor
popf
out
leave
pop
adc
mov
cmp
or
pop
dec
sahf
nop
jmp
xor
jns
xlat
adc
add
das
js
sub
xor
lods
loop
(bad)
mov
bswap
xlat
xor
sahf
int3
xor
and
ret
push
sub
movs
das
adc
adc
sub
cmc
cmc
mov
jecxz
xchg
push
lock
push
push
pusha
push
pusha
repz
ret
push
scas
push
cli
sub
test
jne
jg
je
jb
int3
repnz
enter
retf
call
pop
call
push
xchg
sbb
add
inc
and
ins
popa
pop
out
lahf
fwait
sbb
pusha
movs
pop
addr16
and
cmp
mov
(bad)
push
cmp
mov
fiadd
dec
adc
iret
jnp
jno
mov
and
outs
hlt
scas
fld
xchg
les
adc
add
xor
push
mov
int
icebp
cmc
mov
pushf
stc
test
and
mov
jne
adc
loop
nop
dec
out
dec
sub
call
push
adc
push
popa
mov
shr
cmp
rcr
or
adc
lods
and
jge
push
rcr
mov
sub
icebp
sbb
stos
mov
pop
and
retf
cs
push
mov
pop
out
(bad)
ficomp
sbb
repz
data16
jbe
sti
test
sbb
adc
aam
sub
popa
jmp
ror
inc
mov
in
test
and
jge
mov
shl
aad
in
sub
mov
xchg
ins
ds
ss
or
pusha
sbb
js
push
hlt
sub
mov
mov
jmp
(bad)
mov
sub
xor
repz
push
push
enter
(bad)
ds
and
repz
loopne
jbe
push
pop
int3
mov
jbe
push
inc
or
fist
scas
into
sub
bnd
push
imul
cmp
stos
arpl
sahf
stos
or
lods
mov
(bad)
movs
dec
mov
int
xor
jnp
fs
xchg
fisubr
test
add
mov
iret
adc
and
cmps
loop
loope
in
aaa
add
fld
in
(bad)
mov
out
lea
shl
pop
idiv
pop
push
movs
jmp
jmp
jno
xchg
fdivr
mov
pop
pop
sub
mov
sbb
cld
mov
outs
popa
and
xchg
pop
and
mov
jne
lods
cmp
mov
pop
dec
mov
iret
xor
dec
xchg
popf
push
sbb
imul
movs
jae
stos
cmp
aad
call
pop
fdiv
cmps
xchg
adc
sti
ret
sub
mov
out
dec
test
mov
sahf
shr
cli
retf
push
mov
or
(bad)
aas
daa
dec
push
cld
mov
stos
ja
sub
xchg
sbb
popa
mov
mov
js
cmp
test
push
mov
mov
and
inc
mov
fucom
fxch
mov
scas
jle
pusha
adc
pop
stc
inc
into
sub
and
aam
sbb
repz
ret
aad
shl
mov
sub
mov
mov
xchg
push
mov
push
loopne
dec
add
mov
push
cmp
outs
outs
sbb
jecxz
je
das
loope
dec
push
loopne
xor
enter
and
xchg
lods
shr
inc
jg
loop
dec
push
in
les
bound
mov
xor
xor
call
in
and
fbstp
aad
and
mov
out
jns
push
adc
pop
or
repz
push
cmp
push
or
mov
jns
ficom
cmp
add
mov
mov
cmps
fld
dec
mov
ret
xor
outs
mov
mov
pop
(bad)
sbb
imul
icebp
xchg
adc
enter
das
jmp
fsub
and
jg
imul
ss
mov
(bad)
int
pop
adc
(bad)
push
xchg
jge
add
test
outs
add
add
jecxz
aam
sbb
push
inc
mov
mov
add
jb
fadd
push
leave
sub
jno
scas
pusha
and
mov
ror
inc
popa
sbb
sub
or
add
aam
dec
xor
adc
dec
cmp
inc
call
pop
add
dec
sbb
mov
push
imul
jg
fadd
or
mov
sbb
dec
or
out
cmps
mov
mov
cwde
mov
xor
out
(bad)
jae
in
lods
mov
arpl
mov
mov
sub
jo
jle
imul
push
pop
mov
xchg
pop
in
lods
pop
xchg
inc
dec
sbb
mov
pop
or
outs
hlt
or
push
push
sbb
and
loopne
arpl
cmp
fwait
aam
hlt
in
lea
xorps
out
sar
sbb
icebp
jmp
xlat
pop
loopne
cmp
mov
and
(bad)
xchg
cli
sbb
push
ds
rcl
in
ins
retf
mov
gs
ds
add
add
xor
in
dec
push
fwait
push
fst
pop
iret
mov
cmps
push
loop
mov
in
dec
push
call
mov
xchg
out
lods
int
push
dec
xor
cdq
in
push
hlt
pop
out
in
pusha
pop
jb
mov
out
scas
ret
data16
(bad)
or
xchg
inc
xor
pop
and
dec
xor
(bad)
pop
pop
jmp
or
and
pop
sbb
data16
cld
xor
jge
call
hlt
push
sub
js
and
mov
push
inc
sub
iret
scas
stos
int3
or
jle
stc
mov
mov
fs
sub
out
dec
mov
xlat
call
mov
mov
cdq
dec
aas
lods
fnsave
ror
mov
sbb
lds
rcr
movs
not
adc
fs
sti
xchg
scas
aad
popf
jl
(bad)
hlt
lds
ret
and
aas
jl
dec
hlt
popa
call
add
aaa
jo
inc
add
jo
and
xchg
jns
cmp
xor
pushf
pop
mov
test
lds
jae
xlat
mov
inc
jecxz
mov
out
cdq
sbb
pop
mov
aas
jno
or
dec
xchg
ins
dec
test
push
out
(bad)
adc
pop
mov
movs
xlat
mov
xor
cli
pop
inc
outs
imul
shl
xor
sbb
(bad)
jns
jg
push
std
jg
ret
ins
xchg
leave
jl
lock
cmps
fnstcw
dec
pop
mov
sbb
movs
add
and
out
in
cmps
fdiv
sbb
ror
out
dec
xchg
inc
(bad)
sub
cmp
add
fcomp
pop
pop
or
(bad)
fdiv
and
cdq
sub
mov
or
cmp
mov
xlat
imul
mov
jp
adc
test
cdq
cli
lds
push
push
hlt
retf
ins
or
fs
scas
cli
adc
stos
idiv
dec
out
aas
lods
xor
adc
ja
cdq
popa
push
jae
loopne
loope
cmp
div
mov
xchg
and
out
pop
cmp
mov
adc
jmp
les
or
shl
mov
scas
test
xchg
movs
retf
(bad)
mov
xor
ja
sub
clc
inc
icebp
dec
test
shl
rcl
pushf
pop
lds
movs
scas
add
jge
int3
sub
popf
mov
cmp
fbld
in
test
pmuludq
fistp
or
fdiv
mov
hlt
sub
pop
xor
fbld
test
test
push
inc
(bad)
(bad)
inc
sti
or
mov
or
push
pop
repz
test
enter
outs
iretw
shld
cmp
arpl
mov
pop
dec
fwait
not
dec
fwait
push
cmps
sbb
fwait
jne
cmp
push
adc
test
sub
cs
iret
and
jnp
scas
je
retf
pop
push
pop
stc
xchg
or
inc
push
(bad)
fstp
xchg
inc
pop
mov
aaa
adc
(bad)
sbb
lds
lods
cmp
xchg
psubq
jbe
fist
rcl
dec
into
scas
ins
imul
iret
call
shr
add
mov
push
mov
or
lods
popa
aam
xor
push
xchg
or
loopne
cli
xor
mov
icebp
jb
ins
jae
or
(bad)
cmp
imul
jbe
clc
adc
icebp
xchg
and
pop
lods
or
jno
cli
fdivr
int3
inc
dec
je
adc
push
mov
loopne
inc
sbb
sub
push
mov
inc
retf
out
ds
cld
add
lea
lods
popa
leave
sbb
push
push
mov
sti
jmp
jb
mov
mov
xor
sbb
rcl
aad
xchg
pop
fild
inc
aas
bound
inc
adc
mov
test
inc
sub
pop
xchg
mov
sub
inc
imul
xor
push
scas
or
loope
jecxz
mov
jecxz
xchg
ret
pop
cli
mov
fwait
ss
call
pop
push
fild
retf
imul
nop
cdq
and
sbb
dec
sub
and
jbe
mov
popf
push
dec
out
jns
push
xor
stc
or
jae
repnz
aas
aad
int
stc
add
adc
repz
adc
inc
int
jns
inc
adc
and
mov
add
inc
add
rcr
fstp
mov
push
imul
push
movs
movs
add
iret
push
(bad)
hlt
call
popf
int3
jl
pop
mov
rol
and
sub
jge
mov
inc
pop
mov
aaa
jns
fwait
idiv
mov
xor
daa
mov
shr
cmp
mov
out
repz
xor
(bad)
lea
ret
cmp
stos
mov
and
rcl
mov
data16
pop
icebp
out
retf
and
xor
icebp
fld
dec
or
retf
jns
xchg
mov
adc
mov
call
(bad)
les
mov
jo
retf
std
jne
xor
xchg
dec
bound
std
shr
and
xor
je
aad
add
xor
add
sbb
pusha
jl
imul
in
(bad)
mov
in
adc
or
xchg
adc
shl
fiadd
jle
arpl
jmp
xchg
test
das
sub
adc
fisub
fstp
icebp
(bad)
bound
jo
mov
pop
in
dec
loope
push
ins
outs
and
loopne
addr16
imul
mov
inc
sbb
cmp
jp
out
(bad)
stc
sub
movs
(bad)
repz
adc
enter
xlat
jne
rcl
stc
xor
mov
sub
fiadd
add
pop
outs
ja
jno
call
imul
sbb
sbb
inc
adc
mov
cmp
repz
dec
jo
mov
imul
outs
mov
inc
addps
cwde
retf
xor
xchg
xor
and
or
stc
adc
or
add
cs
out
out
sbb
and
hlt
test
aas
retf
mov
adc
rol
repnz
pop
dec
mov
mov
ja
fwait
sar
jne
call
xor
inc
xchg
dec
stos
mov
fwait
ds
jl
aad
inc
mov
int3
cmp
cmp
cli
mov
aas
xchg
jmp
imul
mov
inc
dec
cmp
xchg
mov
rcr
(bad)
popa
fcmovnb
jmp
lds
dec
add
mov
dec
psrlw
in
jl
jle
pop
mov
retf
stos
jle
inc
call
or
retf
and
loop
ret
add
ficom
mov
cmp
in
das
addr16
iret
in
pop
ret
mov
cmps
mov
jns
pop
out
add
mov
std
push
add
mov
icebp
push
retf
jne
dec
mov
jne
add
add
mov
popa
inc
stc
dec
inc
or
loope
mov
push
cmp
sbb
jmp
adc
fiadd
add
mov
jo
aam
push
sbb
jo
repz
ins
cmps
adc
pop
stos
or
mov
jle
inc
inc
and
test
mov
sub
int
inc
fcomp
sti
mov
push
pop
mov
or
sti
mov
je
sbb
pop
inc
outs
cs
xchg
dec
mov
fiadd
mov
ds
add
jnp
xor
into
pop
aam
int
js
movs
(bad)
loop
inc
push
in
xor
inc
adc
sub
adc
(bad)
adc
adc
cmp
sbb
mov
dec
push
adc
adc
xchg
scas
stos
mov
mov
test
mov
mov
int
(bad)
fiadd
daa
push
test
adc
push
movs
movs
mov
sar
mov
sbb
push
cmp
pushf
xchg
popf
(bad)
adc
ret
adc
loopne
inc
adc
jo
pop
fldln2
add
outs
test
or
mov
dec
add
fldl2t
(bad)
mov
movs
mov
push
stc
and
adc
aas
jns
mov
xor
mov
aaa
stc
lahf
std
or
dec
pop
mov
in
jne
adc
retf
pusha
xor
mov
mov
pop
retf
pop
hlt
lods
test
ret
stc
imul
icebp
jl
add
cmps
inc
fwait
ror
fiadd
outs
inc
scas
fcomp
data16
or
push
mov
aam
or
arpl
dec
mov
jl
mov
adc
sbb
in
mov
xchg
fwait
cdq
(bad)
mov
xor
jmp
repnz
int3
and
jle
leave
mov
cmps
fisubr
mov
xor
sbb
es
and
fild
gs
and
mul
inc
push
xor
fdivr
pop
xchg
retf
mov
ret
aas
xchg
ret
sub
xor
(bad)
adc
mov
jmp
xor
jmp
and
jg
cmp
repnz
mov
out
cmp
repz
(bad)
movs
cmp
inc
dec
mov
lds
sub
mov
sar
or
adc
sbb
imul
jge
es
inc
aaa
jae
push
sbb
pop
hlt
xchg
out
jp
add
mov
je
xchg
(bad)
jbe
(bad)
sti
and
dec
int
popf
cwde
sub
mov
add
mov
adc
sar
or
cmc
jmp
and
dec
sbb
and
xchg
push
repnz
push
pop
mov
mov
fst
test
push
sub
adc
inc
retf
sub
pop
pop
nop
jbe
inc
rcl
xchg
int3
dec
gs
xor
cmp
mov
push
xor
loope
std
jnp
jae
and
and
or
popf
adc
cli
jo
js
xchg
hlt
iret
scas
inc
add
xchg
and
xor
pushf
out
fnstcw
and
xchg
rol
dec
test
scas
cmp
push
xor
aaa
add
test
les
mov
adc
test
out
stos
ficomp
pop
leave
call
call
pop
clc
cli
loop
popf
mov
xchg
js
inc
mov
push
ret
mov
add
mov
repnz
outs
xchg
and
das
repz
scas
cdq
rcr
push
push
xor
mov
adc
mov
out
into
ret
jbe
xor
sbb
pusha
xor
aad
push
ret
xchg
sahf
push
lock
cwde
mov
push
pop
repnz
nop
xchg
adc
loop
fs
dec
not
mov
or
loop
js
inc
or
push
stc
push
cdq
paddq
hlt
or
jmp
add
fiadd
sbb
xchg
mov
dec
ds
push
sbb
pop
xchg
adc
adc
add
arpl
daa
jb
adc
adc
or
add
inc
ficomp
(bad)
dec
inc
out
stc
enter
pop
(bad)
iret
sub
push
cmp
popf
test
pop
jp
scas
fsave
adc
jns
std
movs
xor
push
lock
repnz
sub
fiadd
loop
shl
jnp
imul
pop
sub
shl
xlat
fiadd
test
aam
xlat
pop
xlat
push
add
(bad)
and
das
and
adc
mov
fstp
adc
lea
dec
int
out
fcomp
scas
adc
jp
stc
sbb
push
outs
outs
push
sub
lds
dec
(bad)
nop
adc
mov
jbe
aaa
jno
daa
cmp
es
sahf
stos
push
or
sub
jmp
out
inc
fstp
ja
sub
das
push
fmul
das
mov
fiadd
sub
jbe
xor
fcos
add
sti
cmc
jmp
test
cdq
mov
jge
mov
inc
jl
test
push
mov
cmp
xor
xchg
push
das
imul
xor
xor
in
xchg
push
xchg
xchg
xor
jns
imul
cmp
mov
fld
loope
mov
popf
or
mov
stos
ficomp
fwait
scas
lea
cmps
fstp
lods
and
xor
adc
iret
push
add
or
xor
inc
dec
inc
cmp
or
or
pusha
aaa
out
leave
jmp
sub
and
(bad)
fmulp
sbb
mov
jecxz
js
sbb
cdq
(bad)
mov
xchg
cmp
mov
pop
push
mov
ins
lea
push
mov
leave
xchg
iret
femms
xchg
sub
inc
popf
aad
jns
fucomp
mov
mov
xlat
and
int3
das
xchg
sti
pushf
retf
scas
sbb
int
xchg
push
push
arpl
mov
mov
mov
or
cs
mov
into
sub
xchg
adc
stos
test
cmps
(bad)
push
or
mov
arpl
inc
inc
mov
dec
push
lock
rcl
mov
cmp
leave
and
(bad)
mov
fs
pop
test
shl
sub
(bad)
test
push
in
mov
mov
sub
bound
mov
mov
mov
mov
(bad)
mov
mov
ret
push
adc
xor
retf
sub
in
add
or
sbb
sbb
ret
jno
jae
pop
mov
push
pop
inc
pop
dec
jle
jp
xchg
push
adc
and
cli
mov
pop
add
test
jp
mov
loope
imul
(bad)
aad
div
sub
mov
add
mov
pop
retf
leave
mov
inc
(bad)
popa
shl
pushf
bound
inc
pop
fsubp
and
rol
push
lahf
mov
inc
sbb
mov
sbb
jmp
pop
cdq
adc
aaa
add
pop
pop
adc
and
cmps
mov
std
sub
sub
jg
mov
mov
es
fdivr
fstp
mov
xor
in
mov
push
dec
std
outs
neg
cdq
dec
and
mov
xchg
dec
(bad)
aad
jno
shr
sub
in
jecxz
xchg
cmp
in
pop
mov
pop
push
fisttp
push
outs
push
jnp
shr
scas
or
jnp
mov
test
xor
inc
pop
mov
add
push
mov
xor
inc
xchg
out
and
sbb
adc
sbb
inc
push
xchg
js
jb
inc
aaa
lock
sbb
cmp
in
hlt
add
push
aad
ja
leave
adc
pop
adc
in
and
jmp
lahf
xchg
icebp
sti
sbb
xchg
enter
(bad)
inc
les
les
aad
sub
mov
lods
rol
sub
inc
ror
imul
sbb
test
sub
popf
mov
sub
sub
pop
mov
sbb
rol
popf
dec
inc
xchg
test
outs
jle
dec
mov
pop
ficomp
(bad)
mov
pusha
mov
add
add
aaa
(bad)
fs
mov
in
mov
mov
pusha
test
sbb
dec
or
xchg
mov
sahf
pop
enter
into
inc
call
enter
pop
push
or
rsm
fild
jmp
mov
fld1
cs
fbld
or
scas
xchg
push
cmp
cmp
das
popa
in
jle
movs
xchg
outs
cmp
push
in
loope
pop
sub
mov
mov
sbb
jns
std
jle
test
jo
push
sub
mov
lds
sbb
enter
xchg
sbb
inc
xlat
lods
sbb
cmps
cdq
sbb
ret
movs
lods
dec
pop
outs
arpl
sub
ins
jmp
pop
or
dec
cmc
dec
in
out
fcomp
dec
push
dec
pop
mov
xor
in
dec
daa
retf
nop
sbb
pop
mov
or
inc
(bad)
int
and
call
jbe
frstor
cmc
sbb
ja
and
cmp
fld
xlat
cld
fs
aad
push
cwde
iret
jns
into
sub
ja
cmp
add
jl
and
jl
cmps
rol
stos
mov
inc
lods
out
adc
movs
sub
push
xor
and
jmp
in
fs
push
dec
jns
jg
xchg
imul
lock
adc
lahf
mov
xor
inc
or
aad
cwde
data16
call
dec
push
call
xchg
inc
add
mov
pop
mov
push
das
and
iret
jb
push
icebp
lods
and
arpl
inc
mov
enter
hlt
call
lock
into
and
push
cmp
adc
das
sbb
int3
lods
mov
inc
xchg
fidivr
lods
dec
cdq
js
cli
fxch
repnz
stos
cmp
test
sub
or
aaa
loop
je
xchg
sub
inc
mov
daa
or
mov
in
arpl
outs
and
sub
cmp
xor
fistp
cmps
and
inc
(bad)
push
popa
jmp
aad
mov
xchg
inc
addr16
mov
cdq
mov
pop
hlt
push
dec
dec
pop
inc
rol
and
mov
shl
pop
sti
daa
mov
out
icebp
adc
jge
sbb
leave
jmp
lock
pop
clc
rol
mov
xor
adc
stos
mov
xor
shl
dec
mov
btr
or
add
jne
mov
arpl
add
ror
xor
gs
dec
dec
push
ds
mov
out
loop
sbb
push
sub
popf
ret
pop
dec
adc
dec
jb
jle
sub
xchg
xor
xchg
shr
push
fwait
movs
ins
adc
js
(bad)
mov
pop
pop
and
(bad)
hlt
dec
cmp
cmps
mov
dec
arpl
xor
push
push
jno
hlt
rol
cmp
sub
sub
jbe
out
jbe
cmp
imul
pop
ret
ror
xlat
adc
sub
daa
iret
call
imul
dec
dec
in
jg
not
enter
add
pop
cdq
xor
dec
lods
push
shl
adc
and
(bad)
lock
mov
cmp
int3
(bad)
repnz
add
cld
mov
aad
cmp
mov
xor
fiadd
mov
mov
rol
inc
xor
inc
sbb
and
jg
xchg
jns
es
repz
hlt
mov
mov
ds
dec
jmp
mov
(bad)
outs
adc
jbe
pop
adc
xlat
sbb
push
sub
mov
in
cmp
scas
add
hlt
cdq
cmp
gs
popa
mov
imul
outs
ja
lahf
pop
pusha
dec
nop
in
les
lahf
and
and
retf
mov
xchg
mov
jmp
mov
fs
ins
xor
jle
imul
dec
dec
into
pop
ins
push
popa
jmp
mov
sar
jne
push
loope
pop
movs
test
sub
cmps
fcom
inc
sub
ret
cmps
and
pop
call
cmp
call
mov
mov
sar
add
movs
mov
add
push
arpl
mov
xchg
cmp
out
dec
das
mov
mov
push
pop
pop
and
jno
mov
xor
inc
adc
(bad)
jle
jge
and
icebp
(bad)
sbb
push
movs
cmp
cmp
mov
jne
and
inc
shr
jmp
or
xor
push
bound
(bad)
retf
lods
cmps
sbb
push
mov
push
xor
sbb
push
arpl
repz
stos
xchg
ins
ret
mov
pop
fwait
xchg
push
fwait
retf
pop
cdq
mov
push
rcl
inc
(bad)
mov
jb
inc
cmps
xor
das
add
enter
cmp
xor
retf
ret
ss
mov
ds
sbb
pop
fs
inc
div
daa
jmp
ja
and
aad
adc
sbb
lock
out
out
sbb
and
cmp
fsub
in
and
and
jg
jno
lods
ins
in
add
jae
out
push
mov
cmp
rol
lods
cmp
xchg
and
inc
mov
push
xor
pop
jmp
test
scas
adc
adc
push
pop
mov
push
ds
xor
jp
sbb
test
or
and
and
push
sbb
cmp
lds
(bad)
(bad)
sbb
xlat
fldcw
(bad)
jns
std
repz
fadd
loopne
sub
aam
dec
test
mov
cmp
cdq
mov
pop
and
aas
push
enter
das
pop
jb
xchg
cwde
mov
test
sub
push
clc
add
(bad)
xchg
in
pop
shr
pop
out
rol
jp
daa
pop
es
cmp
arpl
repnz
repnz
and
inc
pop
dec
clc
lea
popf
and
into
jo
push
add
jl
sbb
jg
push
les
adc
enter
push
repnz
push
dec
jle
xchg
mov
hlt
cwde
int3
loop
jecxz
sbb
pop
mov
mov
push
and
pop
adc
das
fwait
in
sub
inc
mov
dec
mov
fild
dec
add
adc
test
mov
setg
pandn
movs
sub
pop
pop
fcmovnbe
jge
dec
fcomp
sbb
or
retf
add
mov
movs
mov
cmp
mov
popa
mov
lods
mov
adc
cmp
push
mov
pop
dec
jmp
jnp
or
imul
call
cmp
cli
(bad)
lods
sahf
adc
cmp
(bad)
mov
xchg
pop
jbe
and
or
adc
imul
dec
cs
es
ficom
int3
call
sti
cmc
adc
shr
je
aaa
or
out
xchg
inc
and
mov
jno
imul
and
cld
bound
jmp
mov
jl
dec
and
aaa
cmp
ret
mov
daa
retfw
(bad)
clc
test
jmp
ins
sub
add
mov
sar
test
into
lea
adc
int
mov
pop
mov
mov
das
xchg
jecxz
mov
enter
test
ror
fadd
add
inc
add
or
lds
jb
mov
ss
ins
jo
push
sar
pop
pop
retf
push
sahf
push
and
mov
mov
cmp
sbb
mov
hlt
rcl
adc
clc
or
mov
cmps
push
jle
stc
cld
lds
inc
push
push
scas
les
mov
cmc
pushf
les
sbb
and
rcl
lock
cmp
push
dec
mov
xor
imul
ins
inc
or
pop
loop
jo
and
loopne
out
or
bound
cli
mov
cdq
or
mov
xor
push
pop
xor
std
or
fnsave
mov
pop
ds
jmp
mov
jle
add
sahf
(bad)
bound
test
ins
sbb
inc
pop
inc
sbb
dec
in
push
xchg
mov
inc
xchg
xchg
xor
push
mov
pop
sub
dec
mov
xor
xlat
sbb
data16
das
xchg
inc
out
sub
mov
(bad)
sub
jl
ins
fidivr
xor
(bad)
call
mov
cmp
mov
aad
and
xchg
retf
nop
and
fnstcw
add
fs
add
xor
push
loop
sbb
sub
push
cmp
jno
data16
mov
in
cmp
(bad)
ins
push
mov
mov
pop
or
pop
jne
cmp
test
push
out
and
dec
xor
fimul
dec
stos
sub
lahf
popa
jno
(bad)
xor
rcl
pop
push
cmc
mov
popa
(bad)
rcr
mov
adc
xor
stos
and
lea
scas
mov
nop
jmp
cmp
hlt
add
jmp
xchg
(bad)
popf
add
cmp
test
jno
(bad)
rcl
dec
or
outs
sahf
out
call
test
dec
jns
(bad)
push
cmps
inc
idiv
xor
mov
out
sub
shl
aaa
in
stos
call
cmp
pop
dec
xchg
call
adc
dec
add
cmp
xchg
add
sbb
int
push
stos
mov
jge
mov
mov
popa
repz
(bad)
mov
les
sbb
fnsave
bound
lea
mov
pmulhw
dec
xchg
mov
mov
xchg
jae
nop
retf
jnp
cld
std
jne
xor
jge
out
mov
jecxz
fwait
daa
cmp
pop
scas
mov
outs
xlat
enter
arpl
and
dec
inc
or
ds
movs
retf
push
cmc
adc
sub
mov
dec
jae
adc
hlt
aaa
inc
push
sub
xchg
xchg
imul
dec
pop
or
pop
lock
in
add
stos
push
outs
pop
cwde
adc
jmp
ret
call
mov
rol
fcomp
and
inc
cmc
cmps
push
mov
sbb
xor
xchg
leave
fisubr
push
loopne
jl
jmp
mov
neg
das
test
cmp
mov
jp
js
cmp
push
jmp
stos
sub
shr
sti
cmp
xchg
ret
add
je
mov
cmp
call
test
adc
inc
fmulp
mov
cwde
sti
and
jmp
add
arpl
mov
aam
jle
pop
xchg
or
outs
fs
cmp
pop
gs
jno
hlt
rcr
adc
stc
sti
mov
pop
jecxz
inc
sar
mov
pop
call
ins
out
push
ret
loopne
jl
pop
iret
push
jbe
jbe
jnp
ror
jmp
(bad)
repnz
ins
mov
push
and
push
daa
test
es
jae
and
popa
jno
popf
lods
or
push
jle
and
mov
ror
fisubr
pop
js
int3
or
enter
(bad)
push
xlat
(bad)
ss
push
mov
cmp
retf
inc
add
clc
mov
adc
dec
cld
push
inc
mov
dec
jns
push
dec
dec
add
fsubr
sahf
pop
popa
xor
mov
int3
sub
pop
adc
(bad)
test
mov
in
or
cmc
sahf
pop
retf
not
out
fisub
push
lds
rcr
(bad)
pop
xchg
shr
jo
mov
neg
out
xchg
(bad)
mov
jle
or
bound
fcos
into
gs
xor
mov
loope
adc
adc
inc
jmp
xor
into
jecxz
jmp
loope
mov
in
mov
pop
mov
push
add
xor
idiv
sub
adc
loop
out
and
nop
xchg
fld
mov
mov
or
pop
(bad)
sti
in
or
pop
mov
jnp
enter
mov
jecxz
xor
jo
inc
adc
cmp
hlt
dec
xchg
and
pop
mov
cmp
mov
das
add
test
cld
je
mov
inc
retf
and
addr16
shl
mov
pop
pop
pop
xor
mov
(bad)
mov
into
pop
aad
cli
dec
inc
pcmpeqw
mov
repnz
sub
and
push
adc
inc
aad
ss
adc
jbe
cmp
cs
arpl
jge
cli
inc
push
test
lea
icebp
nop
dec
mov
pusha
jl
pop
xchg
sbb
bound
jge
add
jmp
sbb
mov
cmp
icebp
push
movs
(bad)
cmovp
dec
jne
ds
cwde
cmp
popf
add
dec
das
xchg
adc
push
cmc
mov
pusha
mov
mov
in
cmp
push
pop
in
nop
jp
mov
dec
in
jae
push
sub
clc
lahf
dec
pop
cmp
mov
ins
into
ss
sub
sbb
xor
dec
dec
add
fistp
xor
jbe
xchg
mov
mov
cmc
pusha
scas
jmp
jge
loopne
inc
push
mov
out
stos
(bad)
jbe
out
cmp
or
sbb
test
cmp
cmps
enter
xchg
xchg
repz
jb
movs
icebp
mov
cmps
or
mov
push
mov
cdq
lds
mov
imul
xor
xchg
cli
add
sbb
inc
xchg
(bad)
inc
jne
inc
loopne
add
xchg
xchg
shl
call
adc
leave
std
adc
jne
pop
pop
out
dec
push
inc
sbb
fldenv
xchg
arpl
add
icebp
lds
adc
ins
mov
jno
xchg
dec
or
mov
cmp
dec
xchg
jo
lock
arpl
mov
cmps
in
retf
push
xchg
(bad)
sbb
fimul
call
mov
loopne
popf
arpl
mov
int3
jae
push
daa
popf
out
movs
imul
mov
fidivr
nop
pop
popf
fs
aaa
xor
mov
(bad)
ror
adc
dec
adc
movs
push
fldcw
pop
sbb
repnz
push
mov
mov
xchg
push
xor
mov
push
fdivr
lea
pop
shl
inc
stos
(bad)
outs
cmc
mov
jmp
jecxz
inc
push
repnz
(bad)
fild
inc
scas
adc
jle
jns
lds
jmp
xor
pop
nop
retf
(bad)
jl
inc
fild
inc
xchg
loopne
adc
push
pop
and
push
int3
cmp
cli
cmp
movs
shl
pop
aam
cdq
mov
jle
cmp
loopne
call
out
imul
push
stos
sub
sub
cmp
xchg
(bad)
cmc
rol
mov
push
(bad)
shl
pushf
dec
je
push
loop
mov
fisttp
sub
adc
pop
imul
rol
mov
fwait
adc
movs
cwde
dec
cmp
imul
or
sub
cmps
mov
mov
mov
ficomp
fs
div
enter
push
fcmovbe
mov
dec
sbb
jns
sti
outs
inc
shr
push
push
arpl
out
sub
fistp
jle
xchg
mov
or
xor
push
push
jns
jp
mov
shr
or
jb
sbb
pop
aaa
test
rcl
push
or
call
xchg
ret
mov
add
(bad)
pop
repz
sbb
mov
sbb
das
mov
js
sbb
das
sbb
add
pop
fist
fidivr
xor
pushf
xor
and
shl
inc
jecxz
icebp
sar
ds
sub
movs
shr
rcr
push
push
mov
lahf
or
cld
mov
fsubr
inc
inc
jle
jle
adc
adc
jns
test
repz
dec
push
mov
jge
cmp
(bad)
jl
xchg
cdq
xchg
test
and
jns
fst
pop
int3
and
jle
xchg
ds
es
pusha
adc
xchg
test
out
mov
clc
mov
cmps
retf
push
sti
aad
rcr
(bad)
sub
ss
call
test
mov
pop
sub
jo
psubb
fs
iret
scas
add
push
out
mov
jmp
fimul
(bad)
call
(bad)
mov
bound
std
add
ins
lods
pop
lods
(bad)
mov
jnp
dec
mov
add
ss
int
lods
sbb
imul
fcomp
cmp
shl
cmps
cmp
mov
sahf
xchg
fxch
mov
into
push
pusha
out
xchg
rcl
nop
inc
xchg
pusha
gs
inc
dec
mov
add
pop
(bad)
fcom
iret
rcl
xchg
sbb
push
outs
test
shl
xor
retw
mov
dec
lea
cmps
pop
leave
sub
out
push
add
and
push
pop
xchg
cwde
xor
adc
and
fnstenv
inc
(bad)
adc
dec
mov
data16
and
mov
stos
in
push
xor
mov
mov
popa
(bad)
jns
or
jmp
mov
and
pop
leave
inc
(bad)
fimul
mov
lods
push
test
fidiv
sub
dec
mov
dec
pop
xor
mov
arpl
retf
outs
mov
pop
es
or
call
das
add
retf
jmp
add
cmc
dec
(bad)
(bad)
adc
lods
fs
cwde
in
scas
or
inc
out
and
add
paddb
adc
ins
mov
adc
aas
(bad)
in
push
(bad)
rcr
popf
sar
dec
int3
ins
push
stos
mov
xor
push
push
imul
xchg
dec
xchg
dec
shr
or
and
mov
call
sbb
scas
jecxz
pop
rcr
popa
sahf
mov
out
hlt
mov
xor
out
inc
mov
xor
mov
xor
pop
and
in
popf
cmp
xchg
test
or
mov
cmp
sbb
scas
mov
mov
jbe
stos
loope
xor
test
push
xchg
test
pop
adc
shl
push
inc
jmp
xchg
jmp
cli
xchg
bound
push
mov
cmps
add
addr16
sub
fild
mov
cmp
(bad)
ins
lods
pusha
inc
daa
rol
repnz
jecxz
int3
mov
mov
fstp
icebp
lods
stos
ss
and
pop
shl
jle
inc
cli
pop
movs
inc
out
jmp
cmp
sbb
mov
mov
cmp
pusha
pop
jmp
push
inc
or
cmp
push
mov
or
sar
jp
or
push
and
dec
setp
sub
fisub
inc
fs
mov
mov
xor
icebp
lods
pop
xor
and
dec
dec
or
pop
sub
cdq
cmp
sar
call
xchg
retf
push
and
xchg
sbb
dec
ficomp
fadd
push
or
cwde
(bad)
in
adc
lahf
loop
xor
fs
xor
pop
mov
sub
enter
and
sub
test
cwde
xchg
loope
ja
and
ret
shl
and
jo
into
mov
mov
pop
(bad)
push
fidivr
inc
xor
shr
or
sub
addr16
xor
fstp
ret
es
div
outs
test
scas
test
aam
call
sbb
mov
inc
sbb
jbe
call
les
jl
das
push
int
push
dec
sbb
jno
jg
inc
lds
xchg
and
mov
adc
pusha
mov
lds
or
popa
arpl
lahf
mov
jecxz
cmc
sub
bound
(bad)
pop
mov
sti
mov
icebp
test
cmp
ins
imul
loop
fisub
sar
pop
stos
sahf
ficom
mov
add
sbb
popa
and
fnsave
or
mov
fs
jle
cs
push
push
out
inc
mov
adc
push
outs
cwde
ss
mov
nop
jne
jae
in
lods
rcl
es
mov
loope
shr
repz
dec
adc
(bad)
ins
mov
outs
push
mov
fs
outs
outs
cld
push
xor
dec
mov
xchg
adc
push
ficomp
repnz
neg
cwde
mov
jecxz
push
scas
dec
cmp
mov
mov
retf
aas
imul
shl
in
jl
adc
cmp
cmp
jmp
(bad)
cmc
cld
daa
add
inc
dec
test
cmp
out
fist
icebp
add
or
cmp
pop
pop
outs
jbe
das
xor
out
lock
push
inc
cld
jbe
aad
xchg
cmp
fmul
sbb
std
mov
push
sbb
mov
fild
sbb
adc
dec
dec
imul
adc
popa
aas
jp
ins
(bad)
and
js
mov
and
jbe
ret
adc
jecxz
or
push
pop
dec
sar
or
stc
movs
fwait
or
cmp
hlt
cmps
dec
xor
sbb
pop
fmulp
mov
cmp
pop
jp
push
or
jl
mov
test
dec
adc
call
add
stos
dec
and
aas
gs
test
jp
ret
ret
retf
shl
fist
cmp
popf
stos
pop
stos
rcl
mov
cld
sub
cli
mov
shl
xchg
adc
fcomip
mov
jp
add
dec
mov
lahf
mov
dec
mov
fdiv
int
xor
mov
fld
sbb
in
sbb
mov
pop
sub
stc
adc
fadd
jns
(bad)
repnz
pusha
test
adc
cwde
retf
adc
shl
test
in
xchg
xchg
mov
adc
(bad)
movs
push
add
cmp
(bad)
mov
mov
cli
add
mov
dec
ror
inc
xor
push
je
sbb
test
xchg
shl
leave
repnz
pop
or
ins
loop
call
push
fnstsw
jmp
adc
rcl
or
je
push
mov
xor
mov
test
out
pop
int3
loopne
hlt
call
sbb
lods
gs
popf
lods
test
lahf
jmp
mov
movs
mov
pop
pop
into
imul
aas
jnp
xchg
sbb
mov
cmp
(bad)
cmp
mov
mov
(bad)
repnz
out
mov
jecxz
jae
dec
aas
inc
movs
mov
inc
add
pop
cmp
push
xchg
or
dec
outs
paddusb
xor
ss
fsub
outs
(bad)
loopne
rol
adc
ins
xchg
mov
fs
inc
dec
test
rcr
mov
dec
pusha
leave
push
push
and
aas
push
jns
test
dec
ror
out
add
and
sub
xchg
jbe
shl
add
call
pop
pop
not
inc
and
into
dec
or
push
in
jo
push
es
or
push
jge
mov
or
add
shl
(bad)
cmps
arpl
jne
adc
dec
mov
or
mov
nop
mov
mov
mov
idiv
pop
adc
cmp
xchg
push
cdq
mov
pop
(bad)
cmp
mov
gs
stc
push
bound
mov
push
out
or
fwait
xchg
xor
daa
adc
add
icebp
push
call
in
mov
daa
adc
dec
cli
inc
inc
in
int
fcmovnbe
inc
clc
sub
cld
pop
dec
pop
mov
fdivr
adc
out
pop
(bad)
rcr
imul
inc
pop
fdivr
in
repz
xchg
test
stc
(bad)
cli
adc
jmp
loope
outs
fstp
fwait
leave
xchg
xchg
fstp
data16
(bad)
pop
pop
or
add
push
inc
push
mov
sar
dec
out
push
or
loop
daa
jmp
retf
pop
in
mov
xchg
aam
cmps
ja
push
sti
fstp
test
sbb
fldl2e
xchg
and
arpl
push
add
sbb
mov
dec
fsubrp
cmc
mov
xor
adc
xchg
sub
push
repz
inc
cs
daa
mov
xlat
addr16
sbb
inc
jb
xchg
xlat
retf
gs
mov
xchg
cwde
pop
push
cdq
mov
xchg
imul
jbe
xor
sti
repnz
inc
push
imul
ret
imul
mov
mov
mov
aas
xchg
jg
arpl
adc
cmp
enter
xor
mov
std
xor
ror
inc
and
inc
mov
lods
out
sub
ja
push
xchg
cdq
push
pop
cmc
sub
addr16
aas
test
cli
sub
jae
sbb
out
shl
imul
mov
ror
(bad)
arpl
sbb
push
push
lea
lods
shr
lahf
fs
xchg
xor
pushf
in
add
xchg
popf
cs
fndisi(8087
popf
xchg
div
xchg
cmp
in
cmp
push
jno
mov
ss
dec
jg
inc
sbb
stos
inc
sub
into
mov
inc
xor
push
imul
adc
call
push
aad
add
addr16
test
ret
add
bnd
addr16
xlat
ins
lods
xor
test
jl
pop
xchg
lods
jnp
and
mov
push
jecxz
inc
or
inc
les
mov
or
push
scas
aaa
pop
push
jl
dec
cmps
mov
mov
jle
js
add
out
xchg
cli
add
pop
imul
int3
cld
stc
xchg
sti
mov
xchg
dec
call
push
enter
ret
push
push
sbb
push
inc
popf
mov
les
stos
into
jae
mov
or
imul
push
mov
and
outs
mov
xlat
lds
jbe
fidiv
pop
mov
cmp
sub
ret
adc
ja
test
inc
int3
xchg
sti
sbb
cmp
mov
sbb
jae
inc
mov
mov
adc
arpl
stos
pop
int3
fdiv
mov
lds
pop
jp
dec
jbe
xchg
dec
mov
jnp
mov
xor
pop
jns
iret
xor
mov
sbb
(bad)
arpl
jmp
inc
mov
int3
cmp
call
es
dec
lea
push
stos
lahf
xor
xchg
sub
mov
ret
aaa
ror
lods
fstp
or
jg
fcmove
popa
loopne
push
in
ds
pop
lahf
sub
hlt
iret
jmp
jb
dec
push
leave
cmp
out
push
out
repz
aas
mov
inc
or
ja
sbb
out
ffreep
xor
xchg
dec
sub
hlt
int
pop
cmp
test
in
adc
fcmovu
xchg
lds
cmp
dec
adc
outs
xor
fs
push
add
shl
cs
cld
sbb
arpl
test
push
jae
das
fimul
loop
leave
cmc
mov
xor
sbb
sbb
xor
out
not
dec
int
fwait
pusha
sub
xor
lock
pop
(bad)
cld
movs
enter
sti
mov
and
lea
out
out
xor
xchg
(bad)
adc
mov
dec
aam
dec
mov
mov
(bad)
jbe
iret
cmps
jmp
int3
retf
movs
cmp
jb
push
loope
fcmovbe
outs
and
stos
sub
jnp
sbb
and
push
cs
sar
mov
inc
add
sahf
mov
dec
mov
xor
ins
in
jno
fnstenv
jbe
sub
sbb
addr16
mov
mov
test
shr
mov
dec
push
int
push
adc
jnp
scas
lahf
test
retf
out
movs
mov
pop
lock
hlt
mov
ret
sub
ret
inc
cmp
sbb
pop
adc
(bad)
out
call
fcom
adc
jp
add
push
xor
imul
and
outs
xor
popf
out
sub
pushf
push
popf
imul
pop
movs
test
ficomp
sub
adc
movs
fsubr
mov
sbb
adc
sbb
hlt
fbld
lds
jbe
jecxz
aas
daa
inc
mov
fwait
repnz
aam
cmp
mov
mov
jge
stc
out
into
adc
mov
out
or
xchg
mov
cli
pop
sbb
cmp
fisttp
les
sbb
inc
repnz
popf
aam
ret
dec
lods
xchg
(bad)
jnp
std
ds
sbb
popf
std
iret
aas
call
mov
stos
shl
clc
lds
add
inc
test
into
mov
inc
add
xor
(bad)
sub
(bad)
test
ins
test
or
xor
enter
mov
adc
fbstp
xor
(bad)
retf
push
and
push
iret
mov
xchg
stc
lods
adc
into
outs
add
or
ins
dec
xchg
popf
inc
and
jg
or
sbb
aad
cmp
lods
add
push
in
pop
clc
call
ins
dec
xchg
sbb
or
push
cwde
test
mov
jmp
mov
stc
xchg
inc
test
daa
or
inc
push
scas
(bad)
jmp
(bad)
not
movs
lods
adc
das
lahf
mov
(bad)
xlat
loopne
(bad)
popf
mov
sub
xchg
jle
jbe
add
movs
sbb
adc
stc
outs
push
inc
pop
cwde
inc
adc
cmp
std
xchg
cdq
(bad)
es
push
jle
out
fsubr
mov
add
imul
ins
xchg
mov
mov
lods
mov
mov
data16
pop
jne
add
(bad)
dec
cs
das
in
mov
or
pop
push
lahf
repnz
aam
cld
or
cmp
mov
das
out
fisttp
ins
xchg
into
xor
sahf
sbb
int3
aam
and
dec
bound
and
xlat
cwde
inc
xor
loop
adc
nop
sbb
aam
lods
push
test
test
fwait
in
aaa
pop
in
pop
cdq
sub
lea
push
jo
scas
sub
bound
mov
xor
xchg
and
xor
ret
pop
fisubr
pop
in
mov
jecxz
sub
js
popa
sbb
push
xchg
pop
or
sub
test
ds
inc
(bad)
ss
adc
(bad)
xor
into
xchg
xor
inc
cmps
in
push
mov
cwde
cmp
inc
sub
and
push
lods
out
dec
aas
fwait
mov
push
mov
mov
add
sbb
sahf
inc
xlat
jb
bound
imul
sbb
call
push
(bad)
retf
jge
lds
xchg
fild
out
pop
imul
mov
adc
js
out
push
pop
in
fs
xor
fstp
(bad)
dec
mov
push
sub
inc
jmp
clc
dec
pop
sub
hlt
push
adc
sub
rcl
shr
mov
inc
test
pop
jp
iret
xchg
sub
outs
mov
dec
jae
fdivr
test
adc
jp
mov
jo
cmp
pop
jg
or
sub
xchg
push
in
arpl
xchg
out
das
pop
xchg
dec
nop
ss
inc
jae
lods
mov
ins
in
mov
jg
pop
jbe
ficom
fistp
push
repz
outs
gs
mov
xchg
push
scas
shl
shl
sti
into
jp
inc
popf
arpl
icebp
push
jge
or
mov
jl
sahf
cmps
test
cmp
sub
jmp
int3
bound
cmc
mov
push
add
push
rcr
inc
cmps
adc
fwait
lods
out
cmp
add
mov
dec
inc
stos
cld
(bad)
dec
test
push
mov
mov
pop
call
repnz
sbb
xor
xor
retf
gs
jmp
adc
into
mov
js
push
jbe
sbb
enter
fsub
mov
cmp
(bad)
pop
add
jb
mov
clc
sbb
dec
pop
push
mov
in
std
xchg
in
ret
add
bound
mov
adc
or
xor
mov
lds
dec
or
pop
cdq
les
xchg
push
sbb
loop
aaa
cmp
mov
dec
xchg
loope
outs
ret
adc
int
pop
cmp
adc
push
clc
(bad)
pop
loop
xchg
cmp
scas
jg
add
xchg
ins
xchg
shr
in
xchg
cli
push
clc
in
mov
mov
mov
aad
mov
cli
push
jecxz
inc
mov
push
imul
inc
(bad)
jb
pop
or
mov
xchg
movs
inc
cmp
enter
cmc
xor
leave
adc
or
ret
movs
push
pop
inc
mov
cmp
cmp
ss
cld
ss
or
enter
jo
lods
mov
xor
pusha
stc
add
and
jg
(bad)
into
nop
stos
sbb
call
mov
xchg
ret
cdq
mov
jo
push
loopne
dec
mov
addr16
push
int3
fmul
dec
retf
add
or
je
and
cmp
fmul
xchg
sbb
or
aas
popf
(bad)
out
out
adc
xor
movs
lods
jg
mov
xor
out
stos
pop
pop
sbb
nop
arpl
(bad)
call
data16
and
out
movs
add
sti
xchg
imul
out
lds
mov
out
cmp
les
add
sub
mov
jmp
xor
and
cs
leave
dec
fs
(bad)
jns
arpl
sbb
scas
inc
xchg
push
test
ret
sbb
aas
fucomp
mov
xor
sbb
dec
outs
fnstsw
push
pop
int
dec
and
movs
mov
mov
cwde
pop
sub
fs
(bad)
stos
shl
movs
jge
dec
sti
mov
xchg
push
sbb
jno
mov
scas
sub
ins
xor
mov
jae
fdivr
add
jb
dec
cld
into
add
dec
push
nop
retf
xchg
inc
iret
xchg
jmp
lahf
iret
cmc
cmp
fsubrp
addr16
aaa
lock
fcomp
loop
mov
pushf
dec
cdq
sub
(bad)
in
bound
mov
jle
outs
pushf
cmp
push
call
mov
js
xor
xor
dec
rcl
jnp
mov
mov
xchg
imul
cmp
push
mov
nop
pusha
dec
gs
pop
dec
adc
dec
push
jns
inc
push
mov
daa
mov
fdiv
xchg
aaa
(bad)
bound
test
adc
mov
xchg
adc
add
loopne
xor
mov
sub
cmp
rcr
and
pop
jbe
out
mov
or
jnp
cmp
mov
jg
push
sub
jmp
push
adc
or
cmp
xchg
cmp
or
and
gs
push
adc
mov
dec
mov
fcom
out
popf
dec
ret
inc
dec
add
pop
and
inc
mov
inc
fdiv
repz
movs
sub
pop
lahf
xchg
dec
fild
hlt
pop
jae
sub
call
pushf
(bad)
push
cmc
mov
test
adc
cdq
xchg
cmp
pop
push
mov
call
jge
cmps
and
pusha
cld
xor
mov
inc
inc
inc
xor
(bad)
ret
push
js
sub
push
ja
inc
sub
pop
pop
xchg
pop
cmp
and
jmp
fs
int3
mov
fiadd
inc
shl
es
xchg
(bad)
cmp
stos
push
mov
pop
leave
mov
push
retf
xor
adc
ds
call
mov
add
mov
pushf
jg
add
loopne
push
sbb
sahf
out
test
in
repnz
xchg
push
push
mov
jne
outs
ins
xor
inc
sub
add
mov
jle
in
(bad)
cmc
out
push
(bad)
rcr
repnz
push
push
jmp
cmp
and
jmp
in
pop
xchg
inc
cmp
mov
jo
sti
mov
outs
jg
sbb
cvtpi2ps
popa
aad
jae
addr16
mov
bound
mov
pop
push
outs
xor
bound
inc
imul
ret
push
ins
adc
sbb
lea
mov
popf
lock
loop
ins
pushf
loopne
inc
cli
inc
mov
std
popf
dec
popf
inc
aaa
mov
sbb
pop
rol
fsub
js
cmp
cmps
sbb
mov
or
aad
adc
mov
mov
pop
rol
push
fdiv
fnclex
jmp
jb
out
jne
ror
(bad)
ins
cmp
xchg
repz
and
sbb
mov
or
ret
inc
ja
popf
or
lahf
into
push
and
jnp
push
sbb
pop
bound
and
pop
pop
test
jbe
iret
adc
scas
in
lock
push
and
fidivr
test
nop
fild
add
(bad)
jmp
pusha
mov
push
jne
mov
hlt
das
(bad)
loopne
into
out
push
fnsave
ror
adc
aas
sbb
mov
mov
ret
or
mov
retf
cmp
js
nop
pop
sub
jmp
mov
push
jge
push
inc
dec
jb
cli
cmp
lods
sbb
scas
fcmovnb
daa
inc
add
inc
dec
jb
pop
popa
jns
mov
cmp
cdq
popa
cmp
cmp
pop
pop
or
fdivr
pop
shl
enter
pop
push
addr16
xchg
aad
sbb
clc
mov
lds
sub
loope
lods
aas
cmp
mov
ja
(bad)
cld
pop
adc
(bad)
fnstsw
daa
add
fbstp
push
mov
std
push
and
push
mov
add
cmp
jmp
clc
(bad)
lea
retf
inc
pop
pop
mov
or
cdq
add
call
xor
js
push
das
pop
dec
lods
inc
ret
imul
adc
cmps
dec
mov
stos
sub
dec
and
retf
in
movs
or
cmp
sub
xchg
popf
sti
inc
push
add
inc
jl
xor
clc
xlat
xchg
jae
in
inc
xor
mov
pushf
sahf
add
lods
adc
jnp
cwde
xchg
pop
(bad)
and
cwde
mov
cmp
xchg
and
inc
sub
and
xor
ja
add
and
or
push
cmp
sahf
jns
loop
adc
fisttp
mov
out
rcl
test
shrd
xchg
add
mov
sar
nop
gs
ret
push
mov
sbb
sahf
adc
jl
and
cld
jmp
xor
xchg
adc
and
adc
mov
scas
daa
push
not
xchg
popa
je
je
mov
xor
cli
mov
sub
popf
push
push
mov
mov
mov
adc
and
cmc
xor
shr
push
retf
adc
mov
rcr
mov
or
cmp
retf
sti
cmps
xor
nop
repnz
call
call
inc
sub
cmc
aad
mul
pop
sahf
retf
out
cmps
or
add
retf
jne
fsub
inc
(bad)
fmul
jno
(bad)
jg
dec
out
arpl
inc
xlat
loop
ret
cs
ss
pop
xor
pop
daa
out
out
xlat
xchg
inc
and
out
test
xor
cmp
fadd
repz
or
xor
out
leave
aaa
sbb
scas
mov
mov
mul
mov
sbb
in
add
sub
and
cmp
jecxz
repnz
icebp
mov
dec
stos
xchg
jl
movs
jno
pop
mov
dec
jnp
push
push
jnp
inc
aaa
jecxz
or
jle
lods
mov
mov
in
mov
test
fdiv
test
sub
(bad)
retf
inc
and
mov
jns
test
jne
fild
xor
xor
pop
pop
sub
or
loop
mov
push
jb
jb
mov
mul
pusha
xchg
mov
in
sbb
shl
(bad)
push
rcr
sub
stos
lods
mov
dec
push
(bad)
lock
xchg
popf
fisub
xchg
fsubr
xchg
cs
icebp
clc
inc
jmp
outs
mov
scas
(bad)
cmp
inc
jbe
gs
mov
dec
out
push
out
inc
stc
popf
or
shl
movs
push
in
cli
mov
dec
xchg
cmp
outs
pop
cmc
(bad)
jg
push
scas
cmp
mov
push
cmp
cmc
scas
add
or
aad
mov
mul
xchg
aam
(bad)
aad
and
xor
cmp
sahf
rol
arpl
movs
fxch
leave
xchg
jbe
mov
mov
cmp
cmp
mov
sbb
pop
dec
or
lods
in
cmp
jecxz
inc
or
adc
cmp
aas
and
sbb
cmp
iret
mov
js
in
pop
repz
shl
iret
sbb
int
jmp
(bad)
mov
pop
mov
pusha
push
and
xchg
pop
xor
xchg
dec
xor
inc
(bad)
lock
push
jnp
ret
outs
shl
sub
test
jp
push
icebp
jbe
inc
popf
mov
mov
xchg
add
leave
lahf
out
js
fwait
sbb
mov
addr16
dec
call
call
sub
pop
mov
fist
dec
mul
sahf
ds
mov
sub
jo
jnp
scas
add
pop
(bad)
xor
popa
lods
scas
fcom
jbe
cwde
pusha
test
lock
push
mov
xor
xchg
loopne
xor
mov
xlat
cmp
mov
jae
mov
jns
enter
shl
int3
hlt
lods
jp
mov
and
push
lods
fs
dec
fcmovbe
dec
test
jl
or
push
aaa
test
cli
cwde
xor
jo
mov
push
push
pop
or
mov
in
or
cmp
cmp
out
rcl
push
or
movs
ss
dec
data16
jbe
outs
test
ret
test
cmp
(bad)
cmps
add
aas
dec
dec
xor
sahf
je
das
pop
sub
jge
inc
arpl
leave
push
xlat
jno
test
dec
loopne
in
fs
shl
adc
call
retf
hlt
ds
mov
cdq
mov
(bad)
gs
pushf
aas
add
adc
jl
test
dec
ins
ss
add
ficom
sbb
ret
imul
push
mov
jl
jmp
push
fisttp
scas
xor
in
push
sub
outs
mov
ins
es
or
inc
je
mov
mov
xor
cmp
rcl
cmp
jne
outs
retf
aaa
dec
in
push
jmp
pop
ins
pop
jmp
fidivr
pushf
call
mov
loop
in
inc
sbb
jns
movs
js
jb
fiadd
inc
inc
les
inc
sbb
retf
jge
push
scas
jecxz
pop
rcr
sub
mov
dec
in
mov
mov
push
call
sub
(bad)
cdq
or
adc
repnz
add
xchg
hlt
lahf
push
ret
bswap
and
in
sub
and
adc
out
mov
mov
cmps
(bad)
push
scas
dec
mov
ins
repz
pop
adc
ins
loop
cmp
push
push
setno
movs
push
rcl
push
add
outs
add
std
inc
icebp
dec
jecxz
or
aas
rcr
adc
iret
es
xor
int3
adc
sbb
cmps
jl
jp
sti
cmp
adc
movs
inc
aaa
lea
adc
sbb
cmp
idiv
xchg
jb
rol
inc
bound
jae
fmul
xchg
mov
push
xor
inc
shr
mov
inc
mov
out
xor
cmc
lods
movs
movs
dec
in
popa
es
sub
push
dec
jo
clc
ror
jne
mov
jno
add
(bad)
mov
xor
call
push
and
daa
bound
sub
xchg
add
es
xor
mov
push
xor
sbb
mov
out
jbe
out
sbb
mov
mov
mov
outs
mov
add
pop
(bad)
ins
push
pop
into
cmps
mov
push
nop
stc
retf
aaa
pop
inc
jns
call
push
ja
dec
push
xchg
das
stos
add
inc
add
pushf
ds
rol
iret
or
mov
and
pop
dec
pop
xor
sub
popf
or
cwde
sub
das
push
arpl
nop
mov
or
pop
fcomp
nop
add
daa
dec
lea
test
sbb
or
test
mov
add
pop
add
ds
pop
(bad)
push
jp
xchg
dec
or
lahf
xor
jg
(bad)
mov
enter
xchg
sbb
cld
fdivr
pusha
test
adc
pop
fistp
or
(bad)
adc
cmp
or
das
fsub
pop
repz
fmul
pop
popa
icebp
add
retf
jo
xlat
ret
es
fidivr
mov
dec
test
sbb
mov
xchg
mov
jmp
cwde
push
xchg
into
dec
mov
iret
mov
sub
stc
pop
es
push
iret
call
push
mov
dec
push
inc
shr
int3
pop
inc
jnp
test
or
ret
iret
lods
jmp
add
or
es
lods
stos
pop
popa
or
sub
scas
push
and
mov
test
xor
stos
cmp
adc
fwait
dec
mov
pushfw
fbld
push
mov
dec
dec
mov
fstp
nop
ins
(bad)
mov
xor
push
pushf
fdivr
push
mov
sbb
sub
push
test
aaa
or
cmp
sar
jb
mov
xchg
cld
ret
sub
adc
cmp
mov
daa
iret
cmp
sub
movs
or
(bad)
in
sbb
repz
mov
adc
fidivr
xchg
cmp
ror
jnp
lahf
pop
cmp
fistp
das
fdivr
jne
mov
adc
inc
adc
(bad)
mov
ficomp
shl
sub
scas
test
hlt
push
lea
mov
test
cli
mov
mov
(bad)
into
add
sbb
arpl
shl
pop
jne
test
fcmovnbe
packssdw
aam
out
xor
aaa
push
ins
fstp
jg
jmp
cwde
xor
out
cwde
pop
mov
lock
and
inc
dec
mov
cld
add
pop
xor
mov
xor
enter
clc
pop
push
shl
lahf
pop
pusha
xor
or
cli
lock
fwait
ror
pop
mov
cmp
or
xor
mov
ret
arpl
add
sahf
stc
sbb
mov
fnstsw
bound
(bad)
push
shl
imul
sbb
lods
push
stos
inc
jnp
sahf
sub
add
retf
mov
mov
js
(bad)
std
xor
or
push
loope
bound
jecxz
or
lds
in
(bad)
jl
stos
sub
sub
cld
cli
lock
fldenv
dec
(bad)
in
aaa
mov
or
cmp
stc
push
sub
adc
retf
or
shl
out
add
jmp
into
lock
push
int
jmp
jo
les
outs
jecxz
scas
add
push
sbb
aas
add
push
xchg
jmp
sbb
inc
jno
sbb
mov
popa
lock
rcl
imul
inc
xor
fld
sub
retf
popf
mov
mov
mov
mov
cmps
xor
xor
movs
inc
shr
call
sbb
retf
lds
adc
iret
add
sar
movs
repnz
movs
mov
jbe
aad
(bad)
pop
ss
xor
fstp
jg
inc
jno
and
(bad)
in
inc
or
sub
mov
cmp
and
fisttp
push
nop
ror
pop
cmp
inc
dec
sub
xor
daa
cmp
adc
push
adc
adc
gs
ja
mov
ins
dec
movs
inc
stos
repnz
and
jl
or
movs
xor
cs
mov
movs
in
js
pop
inc
cld
xchg
test
pop
(bad)
pop
xchg
add
rol
cmc
jp
out
aad
ret
mov
loopne
fidivr
cmp
sbb
pop
test
push
mov
sbb
arpl
or
jl
xor
or
nop
pop
sbb
or
stos
jg
movs
shl
sbb
mov
pusha
sub
(bad)
pushf
aam
push
lahf
rol
mov
loopne
or
add
rol
loope
jb
pop
push
jnp
cdq
jnp
mov
mov
mov
fwait
inc
push
sbb
dec
inc
adc
xchg
dec
dec
jbe
mov
(bad)
or
mov
ss
mov
jecxz
push
nop
mov
xchg
in
fdivr
pop
fstp
add
mov
add
shl
lea
mov
pusha
xor
inc
jne
int3
mov
jno
adc
dec
cmp
dec
mov
mov
sub
mov
mov
and
ins
repz
and
and
push
push
push
adc
cdq
rcr
cmp
imul
pop
add
neg
add
ret
adc
push
jne
xchg
aas
lods
ds
mov
dec
pop
loop
sahf
or
or
cmc
pop
gs
xchg
jecxz
sbb
jp
hlt
into
scas
in
and
gs
loope
mov
inc
sbb
adc
stos
xchg
push
xchg
mov
ins
addr16
lahf
push
xchg
ds
mov
pop
cmps
jle
shl
pop
add
shr
add
mov
imul
xchg
or
pusha
ja
jge
sub
cld
repz
mov
in
fisub
out
xor
adc
ins
in
push
fwait
mov
jb
and
xchg
adc
lods
pop
sti
nop
mov
xchg
int
xchg
xchg
pop
lea
out
dec
xor
push
push
lea
cmp
clc
lock
xchg
aam
xchg
scas
call
lea
jae
pop
or
stc
push
jg
add
cmp
add
cmps
aad
or
push
into
push
retf
inc
rol
mov
add
sub
ret
dec
xor
cmp
mov
int3
pop
inc
push
cld
(bad)
ret
cdq
inc
(bad)
ds
stos
add
imul
add
(bad)
fisttp
add
xor
jmp
cwde
inc
aam
mov
aas
aam
imul
and
and
inc
xor
(bad)
xor
sbb
and
and
fs
fst
mov
jle
inc
xchg
xchg
cli
cmp
and
mov
jae
cwde
cs
in
outs
das
mov
inc
and
push
cld
repnz
adc
lahf
mov
and
test
cmp
pop
movs
mov
sub
sub
cmp
xor
arpl
xchg
cmp
mov
mov
ins
test
lods
cmps
imul
pushf
mov
es
pushf
inc
mov
mov
iret
dec
bound
and
add
ds
pop
pop
lock
repnz
pop
out
mov
stc
ret
xlat
cmc
add
sub
push
hlt
dec
call
mov
jmp
pushaw
mov
sti
shl
stos
(bad)
jecxz
sub
inc
fisttp
cmps
imul
mov
mov
mov
shl
push
xchg
fcmove
test
mov
cmp
mov
in
cmps
fimul
popa
mov
pop
mov
fs
adc
icebp
in
pop
shr
fistp
jle
mov
outs
ins
or
enter
add
add
call
ins
adc
mov
ret
dec
push
adc
mov
aas
sbb
xor
sub
mov
lahf
rcl
and
push
mov
cmp
mov
or
cmp
mov
je
add
pushf
and
sbb
je
arpl
scas
pusha
jae
das
in
mov
div
mov
ds
(bad)
out
mov
gs
add
pop
ss
cmp
enter
dec
mov
lock
cmps
or
cwde
dec
mov
in
jmp
je
loope
cli
ret
cmp
lea
xchg
add
push
lock
sub
cmc
scas
mov
mov
xchg
aam
sbb
mov
push
push
pop
rcl
mov
sub
sub
xchg
pop
ret
cmp
js
int3
xor
fs
fsubr
mov
in
push
ret
push
out
sub
(bad)
mov
sub
gs
xchg
int
enter
push
cmp
pop
dec
dec
xchg
mov
repnz
push
loope
xlat
test
pop
cmc
dec
repnz
mov
add
and
jmp
mov
sub
cmp
into
and
hlt
mov
xor
mov
push
or
jns
jecxz
sub
inc
jg
mov
lahf
mov
adc
scas
adc
retf
jmp
pusha
push
mov
cmps
sbb
bound
sbb
fisubr
mov
or
rol
jb
add
mov
xor
ret
add
pop
leave
loop
aaa
cmp
ret
dec
scas
inc
out
test
lahf
loopne
movs
push
or
pop
and
das
add
xchg
pop
fsubrp
out
psubb
mov
inc
pop
cmps
xchg
lock
dec
inc
and
ds
ja
mov
jmp
out
cmps
sar
push
leave
push
sahf
pop
inc
ja
std
pop
test
adc
fst
retf
in
push
(bad)
stc
iret
or
outs
shl
int3
aam
out
dec
xor
or
cmp
loope
mov
push
cmps
jae
lods
inc
iret
out
dec
mov
(bad)
std
pushf
sti
call
push
enter
sbb
sub
outs
jnp
and
fs
out
dec
adc
(bad)
aad
mov
pop
pushf
dec
add
xchg
jmp
jmp
mov
cli
jno
inc
(bad)
dec
mov
jnp
arpl
mov
stc
dec
cmp
xor
(bad)
jmp
call
dec
pop
call
inc
jmp
enter
cmp
lock
pop
ds
xlat
mov
push
lods
pop
fwait
mov
fild
outs
lods
popa
mov
push
pop
jmp
pop
in
cmp
jmp
xchg
jne
xchg
cmp
jns
sar
inc
retf
jg
lods
sbb
mov
sbb
push
dec
retf
cmp
outs
jnp
xchg
xor
and
mov
add
shl
jl
add
xchg
inc
cli
loope
adc
mov
mov
pushf
sbb
jge
pop
in
(bad)
cwde
rol
cmp
push
(bad)
mov
push
push
(bad)
cld
fisubr
cli
add
cmp
pop
imul
inc
pop
aaa
add
cmp
mov
data16
ja
neg
adc
stc
jbe
ror
add
dec
nop
call
in
mov
push
push
das
xor
and
cmps
pusha
jmp
cmp
ins
jl
out
jne
sbb
sahf
ins
mov
dec
mov
(bad)
jp
mov
in
mov
mov
add
retf
aam
jmp
dec
sub
mov
mov
in
out
popf
bound
inc
mov
imul
sar
in
xor
fisttp
lahf
pop
jo
sub
adc
leave
jle
inc
mov
and
mov
jno
test
sbb
arpl
(bad)
dec
cmps
cld
sbb
push
sbb
xchg
out
and
mov
movs
movs
jb
inc
sbb
pop
mov
ins
push
mov
daa
cmp
adc
(bad)
mov
sbb
mul
jbe
mov
out
fwait
xor
sub
inc
lods
test
(bad)
iret
or
xor
loop
xchg
sahf
pop
mov
xchg
adc
rcr
cdq
dec
jb
sar
in
popf
cmps
iret
push
and
dec
cmp
aas
je
and
push
cmc
sbb
scas
gs
retf
mov
outs
outs
xor
ins
mov
mov
or
xchg
nop
jmp
std
cmp
adc
movs
pop
lods
ds
fcomp
enter
cmc
outs
xchg
inc
scas
in
mov
push
xor
push
ret
test
mov
dec
sub
ins
cs
mov
mov
cli
arpl
push
mov
sub
sub
inc
jmp
out
cmp
push
inc
lods
leave
mov
cmp
pop
xchg
arpl
icebp
mov
jmp
cmp
int
sub
add
and
clc
fstp
sub
sbb
sub
jne
int
jb
ss
cmc
mov
aaa
mov
mov
push
mov
in
retf
jb
mov
rcl
push
arpl
adc
sub
mov
iret
cwde
daa
jg
jecxz
inc
iret
jecxz
ret
cmp
add
shl
mov
outs
add
sub
int3
out
daa
shr
icebp
pusha
std
fisttp
sbb
fbstp
inc
dec
test
int3
sbb
xlat
dec
stc
jno
jmp
adc
pop
std
pop
sub
push
imul
sbb
xor
ret
cmps
mov
cmp
and
mov
and
fld
loop
add
xor
hlt
jmp
push
popa
ss
mov
mov
push
jmp
xor
push
(bad)
push
movs
fst
out
cmp
test
es
jmp
jmp
rcr
ins
je
mov
out
clc
inc
lahf
sub
jo
es
test
call
into
jl
pop
mov
pop
in
inc
pop
cmp
cmps
cld
dec
jns
gs
cmp
push
sti
inc
loope
aad
mov
leave
(bad)
cmp
and
dec
jbe
jle
fs
pop
mov
pop
stos
dec
icebp
ret
jp
mul
xchg
dec
fnstsw
stos
fucomip
(bad)
xchg
js
icebp
pop
jg
xor
in
clc
pop
xor
(bad)
xor
and
jnp
push
cs
cmps
mov
out
sub
daa
pop
mov
out
idiv
adc
add
add
retf
jns
mov
add
sub
idiv
inc
je
out
aad
leave
jle
retf
out
xchg
or
and
mov
xor
mov
mov
cli
sub
xlat
cs
push
and
js
call
imul
or
push
jns
fcomp
push
fscale
xchg
ret
inc
inc
and
xchg
push
(bad)
xor
test
call
inc
pop
icebp
xor
stc
mov
enter
fwait
shl
test
mov
cld
jecxz
jmp
sbb
movs
setae
mov
mov
popa
cmps
mov
jns
lea
and
test
sahf
mov
sub
jbe
imul
lock
(bad)
fidivr
adc
xchg
dec
jno
cmp
push
retf
sar
in
add
hlt
in
retf
mov
jo
add
(bad)
out
or
inc
enter
adc
ret
(bad)
mov
retf
fwait
aad
adc
mov
inc
(bad)
iret
in
adc
out
or
mov
(bad)
xchg
mov
sub
clc
fiadd
lock
rol
cmps
jecxz
sar
sub
mov
pop
popa
adc
and
jb
stos
push
test
ror
mov
loopne
dec
pop
(bad)
sbb
xor
or
mov
(bad)
add
pusha
jo
jo
jo
jmp
loop
adc
xlat
adc
call
out
add
addr16
les
mov
lea
push
je
and
test
pop
out
fidivr
xchg
mov
daa
cld
xor
sub
(bad)
mov
adc
dec
jne
retf
xor
dec
cmps
fsubr
or
push
xor
push
cld
in
retf
or
push
xchg
nop
push
cmc
jp
mov
adc
(bad)
sub
xor
dec
pop
aad
add
jmp
cmp
push
hlt
fistp
cmps
(bad)
mov
add
xor
cdq
push
sub
test
mov
sub
sbb
jno
ins
sub
sub
in
mov
mov
enter
dec
sbb
rol
mov
cmp
in
or
sbb
jnp
add
cmp
cli
mov
das
sub
xlat
and
addr16
pop
idiv
push
cmp
pop
xor
adc
jnp
ret
pop
pop
and
cs
stos
in
add
repz
xor
push
and
sub
xor
pop
in
(bad)
es
or
stos
push
mov
xor
mov
and
loopne
push
cmp
and
pop
dec
fdivr
sahf
daa
pop
movs
les
mov
sub
sbb
inc
jp
imul
jmp
hlt
ficomp
sub
int3
sbb
jp
pop
cld
ret
and
es
(bad)
movs
and
out
(bad)
push
mov
(bad)
mov
mov
mov
or
sub
imul
sub
cmp
cmp
arpl
adc
(bad)
imul
(bad)
pop
fsub
nop
fild
xchg
inc
popf
call
cmp
rol
cld
sub
sbb
mov
in
cld
(bad)
cmp
pop
imul
cwde
pop
sub
sahf
pop
lahf
retf
cmp
mov
sub
stos
inc
retf
mov
add
cmp
data16
mov
repz
arpl
test
dec
dec
xor
push
test
fcom
cdq
fwait
popa
movs
or
inc
push
xchg
in
jecxz
pop
adc
sbb
inc
pop
je
ret
cmp
fld
sbb
(bad)
push
aas
adc
(bad)
pop
popf
push
enter
rol
xor
fld
add
hlt
imul
aam
dec
sar
xor
dec
outs
mov
add
dec
xchg
mov
lods
imul
sbb
adc
imul
das
shl
inc
sub
mov
jle
adc
mov
nop
movs
push
pop
mov
add
outs
ja
xchg
sahf
and
das
adc
fnsave
push
and
adc
push
jbe
mov
call
fcmovnbe
cmp
test
out
cmps
pop
lds
bound
repz
jmp
add
jo
jmp
dec
add
jg
dec
jecxz
xchg
gs
out
mov
ds
and
xchg
pop
cmc
mov
iret
sti
test
ret
and
cmp
mov
push
mov
dec
pushf
sub
sub
popf
fs
dec
sbb
adc
push
into
push
mov
xlat
pop
push
add
xchg
push
adc
not
jne
add
enter
pop
nop
mov
mov
rcr
push
pushf
stc
repz
test
mov
jnp
ins
aaa
shl
int
(bad)
out
push
mov
jmp
(bad)
lds
pop
sbb
scas
and
push
loopne
adc
inc
inc
out
xor
cmp
and
gs
cld
xchg
into
sti
and
mov
sar
dec
mov
shl
aad
inc
in
in
fsub
loopne
stc
mov
bound
or
lods
repz
mov
pop
jno
pop
adc
outs
aad
xchg
(bad)
push
sar
ja
ror
adc
stc
or
xor
xor
jmp
push
test
mov
xchg
icebp
repnz
dec
lahf
sbb
sbb
jge
jb
mov
pop
xor
iret
mov
in
int3
mov
fsub
and
and
mov
sar
nop
jecxz
sub
aaa
sub
pop
lea
ret
sbb
push
xchg
ror
xor
cmc
xchg
pop
cmps
push
push
rcl
fwait
sbb
jnp
out
push
xchg
in
repz
xor
cwde
(bad)
cmp
mov
mov
ss
cmps
aam
push
leave
sar
push
push
or
mov
retf
loop
xchg
cmp
into
adc
dec
sub
sub
and
xor
shl
xor
je
jp
popf
inc
sar
mov
lods
aaa
mul
jns
xor
add
push
outs
sahf
or
lds
pop
ss
mov
dec
or
ficomp
mov
mov
repz
fldenv
sahf
in
cmp
stos
pop
adc
pop
or
ins
xchg
shr
xchg
inc
push
(bad)
outs
jle
mov
call
out
scas
imul
push
sti
xor
and
inc
iret
int
ror
xor
fild
adc
dec
jecxz
imul
out
push
lock
push
jo
push
test
shl
or
mov
aas
cmps
arpl
iret
jbe
xchg
mov
add
xor
mov
lock
imul
mov
outs
ret
cmc
mov
call
dec
dec
fst
in
stc
inc
sbb
inc
test
xchg
test
stos
icebp
adc
into
fbstp
loope
enter
gs
aaa
nop
or
adc
add
dec
leave
sub
inc
add
mov
into
neg
fs
xor
call
jp
into
jo
xor
std
stos
pcmpeqd
dec
test
add
(bad)
push
xchg
jno
loope
xchg
xchg
mov
or
fisttp
xchg
xchg
xchg
push
(bad)
in
pop
pop
(bad)
xchg
ffree
ins
xchg
aad
jmp
mov
jns
in
adc
out
call
aam
jg
out
arpl
test
fld
scas
sub
xchg
sub
in
jmp
sbb
loop
pop
out
mov
in
mov
and
hlt
push
fisub
loop
fimul
xchg
xchg
movs
inc
xor
dec
inc
jecxz
push
xlat
push
scas
ja
das
jle
jmp
lock
inc
not
mov
pop
fmul
adc
std
imul
cwde
pop
mov
int3
aad
(bad)
mov
ffree
mov
lds
mov
aad
pop
inc
push
scas
add
inc
and
mov
xchg
push
popa
mov
mov
test
mov
stos
daa
xor
and
jp
add
lea
imul
xchg
sbb
fldenv
cmp
mov
add
add
add
push
xchg
pop
xor
xchg
(bad)
mov
mov
nop
mov
loop
outs
fadd
(bad)
stos
push
pop
mov
stos
ret
xchg
movs
addr16
jnp
xlat
adc
sbb
and
(bad)
xchg
fsubr
(bad)
out
jp
loope
pop
xlat
rcl
push
push
aad
pop
pop
jecxz
pusha
pushf
popa
pop
rcr
pop
sbb
int
ins
stc
frstor
outs
sbb
push
push
mov
jle
mov
test
adc
scas
mov
retf
mov
dec
jmp
add
fwait
bound
test
iret
in
or
call
or
inc
or
retf
lods
cmp
lds
(bad)
je
add
popa
es
movs
not
jb
(bad)
outs
clc
icebp
sub
test
mov
test
jb
shl
lea
jo
out
test
mov
in
cwde
test
test
mov
addr16
mov
xor
clc
or
add
add
mov
popa
push
aad
mov
jne
test
inc
xchg
sub
dec
pop
push
je
(bad)
dec
jae
inc
mov
push
adc
(bad)
sub
dec
and
cmc
data16
pop
add
stos
sub
fmul
das
add
push
cmp
push
cwde
stc
mov
scas
repnz
popa
out
push
mov
hlt
popa
jnp
pushf
gs
or
xor
push
adc
push
sub
mov
div
push
leave
cvtdq2ps
sbb
adc
sbb
mov
es
mov
jle
out
jo
jns
adc
sub
jle
shr
add
scas
push
jnp
mov
lds
data16
(bad)
and
fidivr
outs
push
pusha
ins
aad
(bad)
jp
xor
enter
pop
xor
scas
jbe
add
aad
loopne
hlt
ret
dec
and
xor
je
sub
ds
mov
xlat
jo
cli
add
sub
pop
sub
mov
and
adc
aad
fistp
icebp
xor
dec
ins
xchg
mov
mov
pop
jg
inc
push
repz
sub
mov
aad
gs
(bad)
(bad)
sub
data16
xchg
push
and
sub
jmp
add
loopne
or
xor
mov
dec
mov
ret
retf
out
fwait
and
pop
js
std
inc
call
and
push
push
add
aaa
xor
xchg
dec
dec
xor
and
and
(bad)
test
sub
cs
fprem
sbb
stos
shl
pusha
dec
dec
push
inc
in
mov
movs
into
inc
add
xlat
ja
movs
push
fisubr
and
ds
dec
dec
sbb
or
push
mov
fwait
pop
loop
push
jg
retf
jne
mov
or
jmp
dec
gs
cli
or
xchg
mov
fstp
fucom
in
or
fcmovbe
loopne
pop
rcl
and
jno
push
in
fwait
mov
dec
or
jmp
clc
push
add
sbb
mov
imul
enter
or
fbstp
push
ss
lock
mov
(bad)
out
aas
mov
jge
lahf
fstp
adc
push
sbb
(bad)
and
xchg
test
push
pop
jmp
dec
jg
mov
jp
sbb
xor
or
add
pop
repz
pop
cdq
jne
lahf
mov
ins
data16
leave
jns
dec
in
jl
or
aas
mov
fmul
loope
sub
out
test
fsubr
sub
in
rcr
or
(bad)
movs
mov
dec
and
repz
cdq
xlat
daa
add
cli
add
cwde
rcl
push
add
xchg
mov
xor
pop
jnp
test
inc
test
xor
xchg
ss
repz
call
ret
imul
clc
into
push
or
push
adc
not
cmp
rcl
out
imul
inc
clc
xchg
sub
lods
cwde
popa
add
pushf
loope
(bad)
or
and
(bad)
jmp
mov
shr
or
icebp
lock
cld
mov
lds
or
jns
inc
dec
fistp
dec
jg
or
cmp
and
push
sub
and
adc
adc
outs
shl
inc
mov
stc
or
mov
loope
ror
push
sbb
xlat
and
out
into
xchg
aaa
cmps
pop
push
or
mov
leave
jo
call
dec
mov
mov
push
fisubr
aam
aam
push
pop
or
sbb
loope
push
sar
loope
dec
in
and
movs
or
and
push
xchg
jp
jae
add
daa
mov
repnz
mov
fisubr
out
(bad)
cmps
jge
xor
inc
fidivr
lock
mov
call
popa
push
(bad)
aaa
pop
add
xchg
test
out
ror
push
sub
call
jns
lahf
mov
cld
gs
pop
enter
mov
retf
jb
cmc
dec
mov
popa
inc
xor
and
test
sti
loope
test
aad
or
cld
xchg
dec
push
mov
rcl
pop
dec
addr16
call
jmp
and
cs
dec
adc
add
mov
int3
pop
and
outs
sbb
int3
xchg
sub
pop
inc
(bad)
push
push
pop
ins
stc
outs
sub
cli
inc
lea
scas
fdivr
cmc
mov
jae
xor
fs
fcmovnbe
sub
ror
cmp
push
shl
mov
sbb
xchg
sub
ins
jne
test
(bad)
or
inc
sbb
outs
push
call
pminsw
jle
shr
mov
mov
sar
movs
fstp
test
int3
fbstp
pop
push
inc
int
lods
inc
pop
inc
(bad)
sti
mov
mov
lds
add
mov
call
jl
cmc
jns
mov
sbb
pop
cmp
mov
mov
data16
xchg
aad
jne
lahf
imul
dec
pop
push
mov
xchg
lahf
je
push
add
dec
std
jle
adc
shl
fwait
scas
dec
push
push
mov
inc
dec
push
dec
loope
mov
and
aaa
std
cld
mov
jl
mov
loopne
das
xchg
adc
mov
inc
or
sbb
ins
jle
mov
jmp
fcomp
aad
inc
jg
stos
fs
loopne
jbe
in
dec
cmp
mov
call
jg
jns
mov
out
aam
mov
aas
xor
retf
repnz
sub
or
pop
fidiv
retf
and
mov
sbb
in
clc
xor
lock
dec
cdq
lods
hlt
pop
adc
dec
hlt
mov
xor
adc
retf
mov
xlat
mov
fist
xor
sub
and
or
int
pop
mov
adc
inc
xrstor
push
xor
push
stos
pop
xchg
sbb
xchg
push
stos
push
sbb
call
dec
jg
mov
push
aam
cdq
mov
lds
add
dec
mov
sub
sbb
mov
mov
pop
icebp
mov
push
cdq
pusha
popf
jle
cdq
dec
mov
enter
in
mov
inc
ins
sbb
pop
jle
sahf
adc
mov
repnz
rol
inc
jbe
pop
mov
icebp
inc
push
cs
xor
xchg
add
add
scas
sub
inc
je
ret
mov
imul
ss
icebp
int
jmp
dec
out
mov
and
int3
push
push
in
and
das
(bad)
jcxz
cdq
pop
loope
scas
push
or
mov
ror
mov
and
fwait
push
jb
push
js
(bad)
loopne
dec
imul
test
sub
fcomi
js
inc
(bad)
inc
popf
out
outs
fcomip
movs
ficomp
sbb
test
or
in
ins
out
bound
cmp
les
sub
test
add
pop
fist
mov
gs
adc
jno
data16
add
push
mov
adc
or
dec
adc
data16
test
in
pop
dec
dec
sub
fst
mov
inc
pushf
cwde
je
pop
cmps
mov
dec
arpl
setge
inc
out
and
ins
jne
out
data16
cmps
push
jle
iret
lea
bound
add
sbb
sub
and
in
sti
in
mov
sub
push
aaa
mov
mov
cmp
call
xchg
lea
adc
aad
and
fmul
cs
out
aam
(bad)
pop
(bad)
or
ds
xchg
xor
loop
dec
sar
sbb
or
lock
aas
int
and
xor
xchg
fisubr
push
cli
xor
and
dec
(bad)
int3
dec
pop
jmp
(bad)
and
mov
push
sbb
and
jmp
sbb
cmp
add
test
out
(bad)
data16
fild
push
ja
(bad)
sub
movs
icebp
xchg
nop
aam
and
stos
inc
out
scas
cmp
std
rcr
ror
xor
aaa
outs
add
loop
fistp
loope
pop
js
sahf
ror
pop
add
js
jae
xchg
fist
cli
fild
mov
mov
pop
movs
add
inc
jg
inc
sbb
xor
xchg
mov
sbb
out
dec
jo
loop
es
pusha
dec
jns
adc
loop
inc
mov
add
cmps
and
pop
test
mov
aas
and
add
js
fldenv
mov
inc
stc
xor
and
xor
or
inc
adc
xchg
stc
mov
push
xor
xor
adc
lods
sub
movs
sub
ins
vmovntps
call
pop
dec
ja
lea
inc
inc
or
mov
je
out
sahf
out
pop
dec
push
pop
imul
push
mov
mul
div
mov
adc
sbb
cmps
mov
in
cwde
inc
mov
inc
pop
dec
sub
das
out
cmp
sbb
into
xor
hlt
sbb
shl
data16
out
inc
ins
xor
push
xor
fldenv
arpl
clc
icebp
in
pop
out
adc
imul
aam
add
cld
nop
xor
push
(bad)
add
push
mov
or
cmp
jmp
mov
push
xor
dec
sbb
pop
outs
pop
(bad)
xchg
inc
(bad)
in
sbb
enter
fsubr
xor
inc
int
jecxz
test
scas
std
push
fsubr
sbb
pop
pop
mov
dec
or
xchg
cdq
retf
add
das
cmp
int3
int
sti
call
(bad)
cs
xchg
rcl
(bad)
sahf
fcmovb
addr16
aaa
mov
imul
cmp
mov
and
add
pop
stos
(bad)
jmp
push
or
movs
inc
sub
jbe
in
imul
fimul
dec
mov
dec
das
ds
mov
sar
cmp
cmp
mov
cmc
sub
dec
fcomip
int
rcr
pop
and
xor
cli
xor
gs
daa
pop
stc
add
call
cmp
mov
and
and
nop
mov
enter
push
iret
cmp
jmp
movs
fs
pop
lahf
cmp
xor
leave
jg
fiadd
push
iret
retf
out
mov
rcr
push
jbe
pop
mov
sub
test
jmp
jns
jmp
rcr
jle
push
push
sub
test
jmp
popa
aas
adc
xor
mov
xchg
into
fsubr
shl
mov
shl
cmp
bound
loope
pop
pushf
inc
mov
and
jmp
fist
jb
cmps
sbb
and
maxps
lock
inc
retf
stos
fbld
mov
aam
jno
icebp
jp
xor
or
xor
retf
in
addr16
push
or
dec
(bad)
push
dec
mov
push
sbb
jp
xor
adc
pop
pushf
and
div
xchg
cs
xor
sti
xor
(bad)
xlat
push
pop
jae
fxch
add
or
scas
popa
in
jge
mov
add
mov
div
aas
ja
leave
or
xchg
mov
(bad)
loopne
cli
cli
cld
test
das
inc
scas
mov
sar
bound
inc
rol
imul
lods
or
call
jmp
fild
mov
xor
cmp
mov
xchg
sub
or
adc
add
loop
fimul
cmps
push
lods
iret
in
or
in
inc
xlat
sbb
aaa
lds
sar
repz
cmc
or
and
adc
(bad)
mov
and
adc
fcom
xchg
pop
les
adc
icebp
retf
push
and
fsubr
sub
jbe
push
enter
cwde
rcr
popf
add
shl
out
movs
mov
mov
fwait
sub
aad
cmp
ffree
add
loopne
out
cli
adc
push
push
mov
sub
lea
xor
es
push
pop
icebp
leave
pop
adc
mov
xor
xchg
pop
jle
mov
cmp
shl
retf
sub
xchg
inc
test
pop
test
jno
push
cs
jno
(bad)
push
push
ins
ret
not
aaa
xlat
jle
jmp
cli
retf
push
push
fwait
loopne
mov
in
xor
fst
add
fwait
and
ins
outs
add
mov
push
bound
(bad)
test
in
ret
cmp
fadd
lock
xchg
inc
js
std
pop
into
mov
movs
fidiv
mov
push
mov
jecxz
gs
jns
stos
push
xchg
dec
imul
popf
es
push
sti
scas
pop
out
inc
test
pop
hlt
pop
pusha
cwde
out
in
and
mov
mov
dec
(bad)
nop
sbb
enter
sbb
in
cdq
pop
jmp
call
inc
cdq
not
mov
out
dec
xor
cdq
call
daa
push
mov
lock
jno
push
data16
xor
mov
das
fdiv
lock
and
dec
pop
sub
cmp
mov
paddq
sub
int3
call
gs
packsswb
scas
or
nop
out
jge
mov
(bad)
in
les
jmp
mov
cwde
fisttp
jge
fldenv
adc
xchg
inc
xchg
or
add
xchg
xor
mov
and
jo
pop
mov
jecxz
ret
or
shl
mov
dec
inc
and
or
popf
out
jmp
dec
(bad)
retf
adc
cmp
mov
sahf
(bad)
hlt
mov
push
push
jg
bound
into
cmc
add
mov
pop
cmc
xchg
ret
sub
in
pusha
cmp
cmp
ins
pusha
mov
(bad)
ja
push
jae
jne
test
dec
cdq
push
int3
dec
movs
pop
popa
xchg
pop
inc
inc
sbb
push
sahf
imul
outs
and
sbb
mov
dec
jmp
add
cmp
fisubr
sub
push
jbe
fucomi
add
ds
add
cli
loope
cmp
adc
icebp
adc
dec
push
add
mov
cld
or
popa
adc
and
add
rol
scas
and
mov
inc
mov
ds
lock
ins
ins
add
lds
adc
pop
push
add
mov
pop
or
sbb
mov
std
cmc
gs
aas
and
clc
push
mov
cmps
lahf
div
sub
lea
xchg
mov
call
clc
shl
pop
jmp
leave
pop
push
push
jbe
mov
ret
push
mov
hlt
in
jnp
pop
add
sti
imul
xlat
stos
jmp
cli
cmp
movs
scas
mov
mov
push
ins
addr16
test
lods
push
out
or
outs
inc
push
push
or
adc
lock
inc
sbb
out
pop
imul
ret
mov
pop
jl
inc
lahf
push
div
push
xchg
jbe
xchg
nop
and
enter
push
add
cmps
pop
sbb
std
sbb
pop
and
bound
aam
and
int3
stc
pop
mov
scas
sub
dec
push
aad
iret
inc
scas
fstp
in
pushf
int3
push
and
inc
push
dec
sub
in
bound
mov
out
pop
rcl
fild
push
mov
leave
mov
sti
cwde
(bad)
pusha
mov
in
jb
add
push
sbb
dec
push
pushf
inc
es
jecxz
push
xchg
das
sti
adc
xchg
adc
shl
stc
and
lods
test
jns
out
dec
mov
pop
inc
test
out
test
inc
pop
and
outs
cmps
add
push
dec
add
not
add
fcmovu
stos
cmp
inc
into
int3
and
fidiv
(bad)
or
and
mov
mov
xor
lods
movs
pop
inc
push
mov
and
lds
inc
shl
loop
jnp
or
add
push
rcl
sub
pop
(bad)
cwde
jb
mov
pop
rcl
xchg
in
call
adc
add
jg
retf
push
inc
adc
in
jl
fcomp
mov
push
and
push
sub
sti
cdq
stos
bound
mov
in
xor
cmp
in
mov
push
jo
outs
inc
scas
mov
mov
in
(bad)
sbb
imul
or
mov
cld
cmps
jl
(bad)
mov
aad
sbb
hlt
std
ja
fwait
sub
xchg
push
adc
cld
dec
push
sbb
ja
mov
(bad)
xor
cdq
out
arpl
mov
(bad)
add
jmp
cmp
dec
jns
inc
or
mov
mov
rol
xor
sti
mov
test
sbb
xor
mov
mov
mov
ss
jmp
sbb
mov
(bad)
(bad)
imul
pop
lods
or
repnz
stc
inc
cmp
cmp
jmp
(bad)
sub
inc
sub
or
jmp
dec
push
loope
and
mov
sub
mov
clc
in
jle
push
lods
out
cmps
pusha
add
mov
jb
jo
stc
shr
in
adc
push
jae
imul
jmp
arpl
pop
repz
imul
pop
fs
cmc
fs
add
xor
in
mov
dec
call
push
mov
ret
push
fimul
fstp
pushf
pop
cmp
(bad)
push
outs
stos
dec
add
es
das
nop
mov
mov
ret
cmps
xchg
jl
or
xchg
mov
jb
imul
call
scas
jg
aas
cmp
sub
in
mov
loopne
xchg
pop
in
or
xor
mov
cwde
test
cmp
adc
inc
adc
popa
jmp
push
jns
in
cmc
inc
mov
loopne
xchg
cmp
leave
add
xchg
mov
scas
retf
cs
frstor
xchg
xlat
mov
fidivr
mov
fnstsw
(bad)
mov
mov
xchg
mov
inc
sti
jae
iret
dec
push
lahf
mov
arpl
ja
imul
pop
aam
cld
jge
and
and
pop
jmp
mov
enter
loopne
push
inc
dec
xlat
sub
push
or
in
fprem1
test
(bad)
stc
xchg
mov
psraw
mov
jns
jb
dec
rcl
mov
cwde
xchg
xchg
jb
inc
mov
push
xchg
cli
not
sbb
sahf
push
add
jl
push
xchg
sub
(bad)
inc
shr
mov
pop
xchg
call
repz
mov
enter
icebp
mov
jbe
cwde
push
out
sub
arpl
into
jg
cwde
adc
repnz
inc
shl
push
stos
and
ror
add
cmc
mov
sub
or
adc
ror
out
inc
and
lahf
xchg
outs
xor
adc
or
cmp
aas
dec
das
pop
test
test
xor
imul
jns
popf
mul
push
clc
adc
add
js
inc
lahf
jecxz
xchg
stc
push
jg
push
xchg
and
test
mov
adc
jne
add
pusha
adc
xor
xor
bound
pop
lea
xor
imul
adc
(bad)
or
jecxz
in
out
xchg
adc
mov
imul
dec
sbb
js
mov
ficom
les
sbb
gs
lahf
je
sub
hlt
clc
xchg
xchg
adc
ins
ret
jge
aaa
jmp
jecxz
pop
sbb
cmp
sbb
mov
out
pop
retf
jo
dec
jmp
lods
imul
shl
add
sti
ret
mov
out
mov
fmul
cs
jp
cmp
dec
and
fimul
push
sbb
retf
rcr
shl
les
icebp
push
ror
add
jns
mov
pop
out
mov
in
sub
out
rcr
nop
pushf
pop
xchg
mov
sub
push
push
sbb
div
dec
movs
mov
pop
aaa
inc
int3
fidivr
outs
retf
fbstp
push
int
mov
lods
xchg
pop
in
push
sbb
jle
lock
ret
jge
lods
jae
iret
jge
out
popf
out
outs
add
sub
mov
inc
int
or
loopne
mov
cld
ds
hlt
sahf
popf
ins
push
fwait
aam
jno
jns
ret
mov
push
out
(bad)
shr
adc
push
mov
xor
jg
or
xor
loope
aas
mov
mov
mov
push
rol
not
loopne
fld
push
and
inc
int3
push
fnstenv
sub
sub
outs
jl
pop
pop
cmp
pop
test
outs
or
pop
xchg
not
push
push
xchg
retf
dec
les
and
mov
fld
retf
dec
sub
push
cmp
mov
sub
xlat
dec
lahf
adc
mov
mov
fsubrp
adc
out
fisttp
or
mov
mov
loop
dec
xor
sbb
mov
sub
add
call
aad
addr16
push
pop
cmp
icebp
and
mov
call
rcr
sahf
mov
or
cmp
leave
ds
fwait
xor
popa
fld
ret
loope
mov
sbb
pop
jo
arpl
xchg
mov
adc
pop
mov
adc
ret
pushf
ret
sbb
pusha
jbe
jne
cmps
push
jbe
cmp
mov
dec
ja
xchg
jo
xor
clc
and
sti
loope
not
add
ss
clc
jp
test
adc
clc
mov
stc
xor
sub
inc
pop
aam
hlt
aad
sbb
add
ss
mov
gs
jecxz
les
arpl
mov
add
pop
adc
out
imul
or
or
cli
enter
data16
jg
dec
sub
mov
into
push
and
mov
loope
and
or
repnz
mov
and
mov
push
(bad)
retf
stc
inc
retf
cmc
adc
ret
sti
rcr
mov
add
xchg
add
daa
push
sub
lea
pop
cmc
gs
inc
retf
addr16
mov
fcmove
enter
cld
jg
add
fistp
iret
test
cli
imul
xchg
add
inc
inc
xchg
dec
pop
cmp
fistp
adc
and
sbb
cwde
jp
sti
sbb
es
sti
lock
inc
cmps
sbb
mov
add
stc
retf
jge
mov
cli
push
sbb
aaa
and
out
adc
rcr
mov
inc
or
xchg
xor
xchg
inc
cmp
mov
aam
xor
and
ins
gs
es
and
xor
icebp
call
xor
push
out
mov
dec
jmp
inc
(bad)
adc
movs
fldenv
std
stos
test
cmp
xchg
icebp
dec
mov
inc
xchg
call
mov
push
pop
inc
xchg
loopne
clc
xor
imul
cmp
cmp
xor
adc
xlat
pop
pop
imul
out
aad
aaa
aas
fdivr
jecxz
sar
pop
sbb
pop
scas
shr
(bad)
sub
dec
in
inc
dec
(bad)
in
inc
(bad)
cld
mov
mov
adc
jbe
arpl
hlt
out
test
pop
int
dec
or
jle
mov
ror
jbe
add
les
xchg
pop
popa
jecxz
sar
or
jb
test
xor
daa
out
xor
arpl
push
adc
fisttp
in
ret
jmp
loop
mov
push
xchg
adc
aaa
sti
sbb
lds
rol
push
cmps
pop
mov
aas
mov
inc
in
dec
aaa
mov
js
cwde
icebp
xor
(bad)
mov
mov
lds
jmp
and
rcl
jmp
ficom
pop
int3
inc
hlt
mov
inc
xchg
mov
push
fst
ds
xchg
push
out
loopne
icebp
pop
test
stos
add
in
sar
stc
xchg
jl
fadd
cwde
cs
cli
fist
popa
aad
mov
cmp
outs
(bad)
push
lods
stos
mov
mov
dec
adc
out
pop
jmp
push
push
(bad)
pop
push
or
inc
hlt
xor
pop
push
pop
xchg
scas
inc
int
xchg
dec
xor
cmp
xor
adc
sti
lea
inc
rcl
jae
push
sahf
push
add
dec
sar
gs
ja
imul
sub
fdivp
movs
sbb
add
scas
jo
jge
push
adc
xchg
mov
nop
xor
nop
cmps
movs
cmps
outs
jmp
sub
daa
std
or
not
xchg
mul
sbb
das
inc
movs
xlat
xor
sbb
pop
icebp
add
ins
mov
fadd
lods
or
adc
mov
jl
mov
dec
adc
mov
loope
in
cli
cmps
and
xor
movs
popa
push
inc
idiv
mov
pop
push
jmp
xchg
sbb
mov
mov
push
into
es
fild
mov
leave
int3
mov
xor
pop
rol
out
push
lods
ins
xor
add
sbb
and
arpl
push
mov
fld
jge
js
sbb
fs
sub
test
pushf
into
cli
pop
ret
or
sbb
call
sbb
dec
jmp
push
dec
pop
pop
or
mov
pushf
cmp
sub
pop
pop
loop
pop
mov
dec
cmp
xchg
sbb
stc
or
xchg
loopne
stos
imul
cmp
neg
(bad)
jmp
stc
xchg
jg
and
loopne
mov
push
movs
jmp
pinsrw
mov
xor
mov
jmp
pop
cdq
mov
call
sbb
dec
push
jb
cmp
retf
cs
or
xchg
fisubr
xor
push
jp
ins
push
call
xor
into
jnp
xchg
or
add
mov
test
into
mov
mov
fadd
(bad)
dec
in
call
cli
clc
jp
mov
xor
lea
sub
call
in
std
imul
je
js
sbb
adc
jae
ror
adc
fwait
pop
adc
inc
popf
jmp
jmp
and
ja
in
or
dec
mov
fmul
mov
inc
or
and
mov
fldcw
outs
aad
stos
jg
fs
xlat
inc
cmps
mov
das
mov
xchg
pop
push
mov
fist
fadd
loop
sbb
sbb
adc
mov
sbb
aas
push
jae
add
mov
jp
fcom
cmp
sbb
leave
mov
jb
std
(bad)
call
out
popa
add
adc
mov
call
ins
repz
ss
emms
aaa
stc
push
retf
mov
and
imul
outs
test
aam
ret
sahf
sub
scas
lea
imul
mov
movs
inc
dec
mov
fbld
popf
lock
repz
jne
xor
push
das
and
popf
or
pop
jecxz
sbb
pusha
outs
mov
fwait
mov
sbb
lods
and
outs
cmps
add
jp
add
or
sbb
mov
adc
loop
fist
outs
push
retf
jl
mov
jg
mov
cmp
cs
xchg
push
push
sti
dec
fild
and
or
mov
dec
adc
push
addr16
pop
lods
push
and
(bad)
test
ja
add
sub
cdq
cwde
push
inc
out
adc
(bad)
cwde
jge
gs
mov
jns
std
lea
sbb
sti
xor
fstp
int3
ffreep
jns
ss
xchg
pushf
jecxz
pop
or
inc
mov
dec
xor
sbb
pop
retf
jnp
jnp
xchg
xor
ins
in
mov
sbb
lea
cmp
mov
ret
movs
pop
imul
mov
add
mov
(bad)
jge
add
ret
pop
pusha
mov
(bad)
push
fdiv
bound
(bad)
mov
mov
sahf
dec
jmp
mov
(bad)
mov
ror
add
in
in
adc
xchg
adc
cmps
xor
lea
mov
xor
push
leave
gs
call
(bad)
xor
mov
sahf
jge
adc
test
add
shl
fwait
ds
and
cmps
pop
add
pop
jmp
xchg
pop
inc
pusha
mov
adc
ins
(bad)
xlat
xchg
cmp
mov
push
loopne
xor
mov
push
iret
in
inc
fsub
jge
add
ret
sbb
xchg
xchg
xor
xor
dec
lds
inc
cmp
or
add
fwait
xchg
add
or
or
pushf
in
inc
ficom
sbb
xor
lahf
jle
test
rol
std
xchg
sbb
in
dec
ss
add
mov
dec
std
es
mov
sub
(bad)
mov
popa
xchg
or
int
imul
cmp
inc
fild
dec
push
(bad)
ja
jns
ret
xor
repz
mov
sub
sbb
xchg
jmp
mov
or
mov
js
xor
(bad)
cli
int3
icebp
adc
into
fwait
sbb
jg
push
pop
scas
(bad)
(bad)
in
loopne
in
retf
jbe
xchg
pop
cmp
ror
and
cmp
xor
fidiv
inc
movs
mov
mov
jo
pushf
scas
adc
push
cmp
sahf
sub
push
mov
fs
call
xor
movs
mov
(bad)
add
add
cdq
add
gs
aam
adc
jne
aas
rcl
mov
cmp
lock
xchg
push
loope
xchg
call
push
and
push
mov
mov
aam
xchg
sbb
sbb
xor
test
test
inc
stos
lods
ret
add
mov
lahf
std
icebp
pusha
add
sbb
jecxz
rol
lock
sub
ret
mov
retf
adc
(bad)
in
jp
push
mov
mov
sbb
cmp
mov
sub
mov
or
out
jae
xchg
std
pop
jle
popf
add
aas
xchg
or
push
loop
shl
sub
sbb
cmp
or
xchg
xor
dec
push
jmp
jle
out
in
out
outs
mov
push
je
and
push
xchg
in
lds
jle
mov
out
lock
jmp
push
pushf
leave
ins
(bad)
push
pop
into
shl
adc
lea
jecxz
mov
nop
sbb
int3
sub
icebp
lahf
jle
jmp
test
and
call
add
mov
nop
jle
clc
(bad)
xor
movs
scas
dec
scas
sbb
xor
jb
hlt
sbb
push
mov
out
mov
out
inc
out
and
aam
ror
movs
push
cli
js
jne
jno
retf
das
push
stc
jmp
outs
ins
sar
push
pop
sub
add
ret
dec
cld
jle
jbe
add
add
push
icebp
jmp
dec
hlt
ja
call
push
jp
into
cmp
dec
xlat
mov
jg
jns
inc
lea
add
mov
cdq
mov
push
mov
inc
jo
sar
pop
push
sbb
adc
cli
pop
loopne
popf
cli
in
aam
retf
out
lods
add
push
mov
das
push
fldcw
int3
dec
int3
(bad)
stos
push
dec
loop
test
cmp
hlt
pop
cdq
xchg
lods
arpl
cs
imul
fisubr
ficom
out
add
push
fistp
scas
aad
mov
lds
fild
ficom
(bad)
lods
std
mov
in
ds
cmp
mov
das
pop
push
push
jle
je
jae
add
inc
stos
stos
xchg
fs
sbb
mov
aaa
data16
call
imul
lahf
mov
adc
mov
push
or
xor
ins
add
std
dec
(bad)
cmp
in
xor
loopne
push
(bad)
aad
ret
cmp
mov
call
adc
xor
and
sbb
jbe
ficom
xchg
movs
test
fisubr
in
pop
or
adc
or
mov
pop
fcmovnb
por
test
and
fidivr
(bad)
mov
sub
rcr
push
xchg
js
mov
ficom
mov
pop
pop
dec
add
push
out
retf
push
inc
pop
hlt
xor
push
imul
add
mov
outs
push
in
xor
cli
into
adc
(bad)
mul
retf
nop
inc
cmp
dec
lds
loop
push
jp
scas
pop
jle
sub
call
in
aas
mov
cmp
cwde
js
div
mov
jge
push
arpl
rcr
pop
push
(bad)
icebp
pop
and
hlt
imul
fld
push
movs
cs
sbb
(bad)
pop
aaa
rcl
dec
pushf
sbb
cmps
cmp
add
push
sub
imul
pop
mov
push
pop
(bad)
shr
mov
cwde
xchg
sub
push
cwde
push
sub
ret
inc
fsubr
push
cli
pop
push
and
mov
in
cs
mov
dec
sahf
ror
push
and
cmp
mov
mov
mov
jne
aam
test
shl
fiadd
(bad)
outs
or
sbb
gs
push
in
push
pop
retf
mov
mov
push
mov
enter
retf
(bad)
push
nop
mov
lock
sbb
jge
dec
clc
inc
push
dec
mov
inc
movs
push
sub
pop
cmps
jmp
mov
cwde
xor
inc
retf
cmps
xchg
ret
pop
fsub
push
das
push
jne
fisttp
jne
or
adc
dec
lods
dec
int3
aad
shr
pop
call
icebp
loop
xchg
lea
mov
push
fisttp
enter
cwde
and
data16
push
fsub
sbb
ret
shl
jmp
iret
pusha
mov
lock
xor
mov
mov
stos
mov
fadd
std
jmp
sub
not
loopne
mov
push
aas
je
adc
ret
clc
mov
mov
(bad)
mov
adc
jg
dec
rcl
sub
ret
ret
mov
pop
(bad)
aas
imul
imul
retf
inc
pushf
nop
mov
aas
test
out
mov
cmp
mov
in
pop
mov
repnz
daa
mov
sbb
test
hlt
push
dec
mov
outs
and
xchg
pop
mov
les
adc
(bad)
jl
xor
mov
pop
inc
mov
retf
push
ins
or
mov
ds
inc
test
leave
and
fabs
int
jle
jno
xlat
outs
out
xchg
jecxz
xor
dec
dec
jecxz
push
mov
fild
in
shl
(bad)
push
je
cmp
stc
mov
and
jno
xchg
mov
movs
nop
mov
test
cwde
imul
pop
lock
jmp
lock
nop
cmps
jecxz
bound
push
(bad)
rcl
add
add
mov
std
gs
push
(bad)
sahf
mov
or
fbld
shl
fbld
jmp
mov
mov
mov
std
xor
loope
int
icebp
jl
lods
clc
pop
cmp
and
ja
push
and
ss
sub
loop
daa
js
mov
adc
lock
nop
mov
test
outs
jp
mov
(bad)
fld
jmp
mov
mov
sbb
movs
and
xchg
push
aaa
mov
loopne
sbb
mov
jmp
mov
je
in
or
cmp
les
clc
adc
mov
cmp
cmp
xor
(bad)
mov
stmxcsr
les
imul
shl
jns
imul
clc
jb
jl
push
fisttp
xor
mov
rol
lock
sub
push
pop
int3
push
sahf
xchg
push
iret
add
pusha
xlat
pop
adc
cmps
clc
sub
outs
loopne
xor
cmp
add
and
call
adc
mov
jl
int
sbb
adc
jmp
add
ss
inc
fldcw
ret
imul
add
xchg
push
cmp
and
mov
cmps
ret
pop
pusha
xor
retf
fiadd
mov
sub
mov
push
add
jp
jae
mov
test
dec
retf
fld
jno
inc
xchg
aas
mov
sbb
mov
push
fcomp
mov
dec
aas
cmps
xchg
dec
sar
ds
out
inc
lods
jecxz
pop
arpl
int
add
adc
mov
pop
jbe
mov
add
(bad)
rcr
ins
dec
stos
jle
push
push
mov
sub
inc
sbb
loopne
pop
outs
add
sub
or
push
mov
cmp
push
jmp
test
and
jbe
rcr
sti
cmps
push
xlat
fwait
push
jns
fimul
push
cmp
adc
in
lods
cs
sbb
xor
sbb
clc
pop
shr
scas
jbe
push
jp
call
ds
fst
shl
das
test
dec
dec
push
mov
or
jg
inc
pop
test
in
fsub
push
in
div
sbb
test
add
rcr
mov
inc
lahf
int
add
and
in
loope
or
(bad)
in
call
cmps
push
mov
and
addr16
dec
fisubr
dec
xor
sbb
jae
addr16
sub
pop
jmp
out
fcmovnu
daa
scas
or
(bad)
mov
mov
add
push
xor
xchg
stos
lea
inc
xlat
add
mov
fcmovnbe
aas
xchg
sbb
inc
jmp
je
cmp
rcl
and
adc
retf
adc
test
(bad)
cld
xchg
ds
bound
test
and
lods
pop
std
and
jmp
xchg
call
mov
test
jmp
push
or
cmp
(bad)
repnz
call
pusha
push
or
add
mov
je
jns
jo
dec
cld
ficom
dec
dec
cs
sub
fild
add
rcr
jmp
je
test
shr
lahf
jno
xor
(bad)
pop
shl
(bad)
cmp
add
les
and
icebp
pop
mov
jo
gs
out
movs
adc
fidivr
and
fisttp
xor
pop
xchg
lahf
adc
pusha
pop
sar
jmp
sbb
pop
xchg
and
sti
in
dec
out
sbb
mov
enter
nop
jae
cmp
call
inc
add
cmp
pop
mov
mov
aam
jne
sbb
dec
xor
push
out
xchg
aas
mov
or
jo
(bad)
pop
aam
out
mov
dec
mov
fistp
pop
mov
in
nop
bound
adc
push
pop
mov
pusha
xchg
ror
pop
fisub
mov
mov
sbb
popa
ret
sahf
sub
(bad)
fstp
xor
iret
pop
cmp
or
stc
mov
jmp
inc
and
pop
cmp
ror
sub
sbb
bound
stos
xor
mov
inc
fcomp
loopne
pop
mov
cld
mov
mov
sub
sub
adc
repnz
repz
pushf
enter
fdivr
sbb
sbb
push
js
js
iret
push
push
mov
rcr
ret
(bad)
not
pop
dec
rcr
movs
pop
loopne
and
add
(bad)
inc
ds
fs
sbb
scas
sub
rol
or
jno
dec
xlat
jbe
fsubr
(bad)
(bad)
mov
loop
xchg
jmp
pop
ss
clc
sbb
cmc
push
cmp
lods
mov
mov
in
mov
mov
rol
pop
sub
mov
cli
pusha
mov
xor
and
add
add
rcl
cmp
add
mov
les
mov
into
sbb
bound
mov
mov
div
adc
movs
fisubr
add
not
cmc
xor
ins
push
(bad)
loope
jb
xchg
rcl
test
mov
and
gs
cmp
mov
popa
(bad)
add
dec
cmp
test
and
jmp
add
push
es
imul
mov
xor
push
mov
ror
mov
dec
mov
stos
pop
lea
mov
xor
mov
or
mov
xchg
(bad)
outs
jb
xchg
add
xor
push
adc
xchg
xchg
push
xchg
sbb
pop
cdq
push
xchg
and
push
push
es
(bad)
pop
mov
pop
jmp
pop
std
sub
or
pop
stc
call
je
cmp
ret
mov
ins
jge
je
not
add
rcl
adc
sub
push
popa
movs
cli
aam
or
pop
inc
add
push
test
leave
jne
push
stos
mov
adc
push
mov
dec
xchg
jns
scas
jnp
test
or
mov
pop
out
fdivr
pop
push
or
adc
xor
add
stos
jl
sub
push
inc
xchg
and
or
daa
mov
add
fldenv
jb
loopne
cmp
pop
dec
out
mov
retf
adc
fwait
push
pop
data16
or
xor
popf
sub
popa
add
jo
stc
fild
sbb
sbb
sub
mov
mov
mov
xor
es
ret
mov
(bad)
(bad)
mov
repnz
mov
in
pop
stos
cmp
clc
jne
cmps
(bad)
hlt
(bad)
dec
fild
add
repz
xor
call
sub
adc
call
xor
push
mov
and
enter
dec
jnp
adc
imul
and
or
jmp
pop
add
ret
xchg
adc
mov
int
rcl
or
fwait
add
jle
iret
sti
sbb
jne
fisubr
push
xchg
adc
sub
retf
fisttp
iret
fidiv
ret
sar
movs
inc
jmp
jb
push
ret
pop
ds
mov
pop
ja
xchg
(bad)
out
adc
mov
push
repz
xor
cmp
clc
(bad)
test
xor
add
and
adc
cmp
sub
add
dec
shr
out
int3
push
test
pop
mov
dec
jl
sub
out
dec
sub
push
mov
(bad)
pop
test
adc
jno
lds
jle
pop
mov
push
inc
fiadd
mov
loopne
xchg
jnp
shl
sbb
push
jb
nop
dec
daa
xchg
pop
jmp
dec
jmp
and
xor
pop
sbb
jbe
in
sbb
jae
jb
mov
inc
loop
jns
mov
repnz
sti
les
sub
leave
fwait
jo
ins
or
mov
add
push
push
push
jne
and
cmps
sub
mov
test
aam
js
xor
sub
add
repz
daa
lods
push
pop
sub
stos
add
adc
pop
les
cld
xchg
jecxz
imul
pop
in
out
add
clc
mov
push
mov
mov
mov
loope
in
push
mov
pop
and
cmp
adc
and
xchg
xor
pop
sbb
ins
test
mov
jge
in
add
out
aam
and
sub
pop
cwde
push
push
sbb
mov
dec
cmp
jae
inc
ins
sti
pop
fadd
inc
and
scas
daa
or
adc
daa
xchg
popa
push
jmp
ret
push
mov
loopne
jge
cmp
pop
fcmovnb
sbb
bound
pusha
mov
out
jne
or
mov
pop
fstp
push
and
movs
je
push
push
xchg
adc
cmps
(bad)
out
lods
inc
add
xor
push
mov
xchg
out
in
and
xor
repz
mov
scas
ror
out
rol
mov
push
out
mov
xor
movs
vphaddubw
test
mov
cld
nop
xor
shl
inc
xor
jo
into
adc
(bad)
pop
lahf
loop
add
pop
pop
xchg
scas
push
pop
and
jb
and
mov
xchg
ins
lods
ins
mov
jle
fs
test
enter
sbb
push
pop
(bad)
test
loopne
sub
rcl
aaa
pop
xor
jmp
jl
add
fidivr
push
es
sar
mov
mov
xchg
or
sbb
lds
dec
adc
sti
jecxz
and
je
pushf
dec
xchg
xchg
pop
test
out
arpl
aad
outs
push
pop
jle
cmps
data16
jmp
aaa
and
jge
inc
imul
rol
loope
sahf
ror
fisttp
pop
out
int3
fcomp
mov
(bad)
ror
js
call
test
cwde
test
rcr
mov
or
cli
fild
sub
ret
(bad)
cld
mov
sbb
jbe
jbe
(bad)
(bad)
in
inc
aas
mov
mov
mov
ret
test
pop
dec
xchg
aas
mov
mov
push
pop
lds
fld
sub
mov
inc
js
pop
ss
or
xor
cmps
repnz
adc
inc
jb
retf
or
cmp
push
pop
jmp
adc
mov
ficom
cdq
sub
dec
xor
inc
push
movs
fild
aad
call
stos
sbb
loopne
pop
pop
retf
lods
test
call
arpl
xchg
inc
jbe
stos
jo
push
or
pop
test
rcr
out
lock
test
cmp
(bad)
aas
add
mov
adc
sub
cs
sub
mov
jge
jmp
push
or
jae
cmp
push
mov
push
cmp
loope
sub
xor
outs
out
popa
pop
xchg
in
test
xlat
xor
idiv
inc
adc
shr
push
pop
out
mov
addr16
pusha
(bad)
dec
gs
sub
cmp
add
push
pop
test
mov
mov
push
pop
sbb
sti
xor
pushf
mov
stos
pop
ins
mov
adc
icebp
push
jb
fwait
daa
stc
(bad)
sbb
sbb
cmp
and
jnp
call
adc
push
sub
clc
(bad)
int3
jle
push
pop
je
lods
or
sub
mov
sub
repnz
add
out
sub
aad
daa
mov
fbld
mov
jle
inc
ja
shl
repz
mov
lods
idiv
dec
stc
bound
jne
mov
jp
mov
pop
mov
sbb
retf
loop
std
lahf
sbb
mov
stos
jecxz
mov
jecxz
(bad)
dec
loop
jle
lods
push
add
sub
jp
xchg
movs
lods
movs
jno
sar
jbe
cdq
ds
bnd
adc
add
in
cwde
cwde
mov
push
movs
and
or
cmp
push
pushf
enter
xor
int
pop
sar
in
and
dec
push
cmp
arpl
stos
add
cmp
inc
pop
push
jmp
shr
mov
leave
das
and
sbb
sub
sub
xchg
mov
jns
out
inc
sub
sbb
dec
mov
dec
jle
std
jmp
fisubr
(bad)
data16
adc
xchg
mov
xchg
dec
aaa
mov
ds
xor
(bad)
push
jmp
xchg
(bad)
push
add
(bad)
jle
movd
into
aad
pop
mov
xor
adc
cmps
scas
xchg
fst
or
mov
loopne
fsubrp
fidiv
nop
ret
and
cmps
scas
push
pop
les
adc
ss
aaa
pusha
leave
mov
mov
add
aad
out
cmc
cmp
add
jno
(bad)
repnz
inc
lock
xor
adc
inc
mov
lods
and
sar
mov
or
jp
jp
daa
data16
xlat
jae
retf
mov
xchg
cld
push
inc
push
add
in
sbb
sbb
and
add
or
pop
or
dec
out
mov
xor
sub
cmp
sar
mov
mov
bound
xor
scas
icebp
pop
mov
fisttp
push
call
call
in
sbb
(bad)
leave
pop
repz
imul
push
ja
cs
xor
outs
sti
fimul
les
add
out
and
cli
scas
stos
or
sbb
ins
imul
add
hlt
xor
lahf
jbe
arpl
call
in
vpshufd
and
mov
pop
inc
aaa
or
out
pop
pop
fiadd
jmp
sti
mov
retf
inc
mov
pusha
std
pop
add
cmc
lahf
inc
and
or
js
mov
fisttp
inc
dec
lods
cmc
cmp
std
fsub
mov
rcl
(bad)
xor
adc
mov
lds
xlat
out
add
sbb
cmc
xor
in
mov
mov
mov
sti
stos
psrld
call
xchg
pop
mov
add
push
leave
test
fisub
daa
xchg
int3
aaa
sub
dec
dec
push
outs
add
mov
mov
sbb
repnz
dec
mov
push
push
push
aad
jb
and
mov
pop
jb
adc
cmp
aas
in
into
(bad)
iret
jmp
hlt
xchg
inc
aad
repz
popa
sbb
inc
dec
stos
sub
inc
pop
adc
or
lahf
dec
jl
lock
jns
movs
jle
ret
mov
add
out
jne
ficomp
add
inc
mov
test
sbb
mov
cmp
jae
popf
and
fs
outs
xor
fidivr
add
sub
jp
fidivr
scas
mov
jne
std
gs
fnstenv
or
loop
(bad)
xchg
arpl
xchg
cmp
push
scas
call
cmp
jmp
in
pop
enter
lahf
sub
xlat
(bad)
fucomp
jne
jae
test
(bad)
mov
je
fsub
ins
adc
stos
das
dec
inc
jmp
and
add
rcl
data16
gs
or
xchg
add
pop
dec
daa
cmp
xor
popf
jb
xchg
mov
dec
aaa
dec
pusha
and
add
iret
lods
push
(bad)
pop
dec
sub
outs
(bad)
jmp
movs
xchg
repnz
ret
sbb
and
mov
loope
cmp
lahf
stos
mov
fwait
and
sbb
nop
stc
jmp
xchg
jp
cmp
jae
sbb
ja
cmp
int3
pop
retf
sbb
cmp
not
sub
mov
mov
scas
dec
dec
inc
push
mov
test
jno
nop
jge
pop
test
xor
fistp
pop
jl
fmul
cmc
ja
dec
or
or
mov
xor
aaa
pop
adc
movd
xchg
and
xchg
or
std
in
cmp
push
aaa
(bad)
jg
dec
dec
mov
jno
hlt
cmp
icebp
push
push
mov
loope
rcl
int
jp
pop
dec
cwde
std
and
aas
pop
mov
enter
sub
mov
sbb
psrlq
std
pop
aas
dec
inc
retf
or
xchg
xchg
pop
outs
mov
mov
loope
add
push
mov
inc
and
fcmovnb
inc
popa
in
adc
lods
mov
add
adc
pop
mov
loop
les
lds
cmps
sub
in
scas
sub
add
pop
xchg
int
cmp
loopne
inc
xor
mov
push
popa
fldenv
popf
push
mov
fdivr
es
jbe
int
data16
jnp
test
inc
(bad)
or
mov
sbb
sub
adc
pop
jo
push
ret
xchg
in
xchg
lock
call
mov
fs
add
sar
cmp
popa
(bad)
sbb
mov
outs
mov
cdq
mov
or
sahf
xlat
daa
pop
scas
popa
adc
push
int3
(bad)
jmp
fisub
pushf
jb
cs
push
inc
and
aad
lahf
dec
test
inc
inc
sub
and
test
sub
retf
inc
ss
(bad)
iret
jnp
xchg
add
call
(bad)
jge
mov
add
fmul
mov
adc
xchg
jg
ins
mov
mov
push
inc
inc
ins
int3
sahf
in
bound
imul
xchg
adc
or
ror
pop
repnz
mov
call
adc
or
and
test
mov
jl
popf
retf
adc
mov
mov
dec
clc
nop
ins
xor
xor
leave
inc
ficom
scas
leave
mov
jmp
push
loop
mov
leave
popa
jp
inc
mov
(bad)
into
dec
mov
and
push
pop
inc
cmp
ror
rcl
arpl
jp
fiadd
cmp
call
loopne
data16
push
test
imul
adc
dec
cld
(bad)
push
dec
ja
cmp
loop
cmp
nop
pop
(bad)
aad
std
test
xor
ret
inc
and
test
neg
pop
pop
cmp
enter
xchg
xor
scas
or
mov
push
or
ds
fldcw
lds
adc
and
outs
xchg
(bad)
jne
leave
adc
dec
in
into
popf
jb
in
cdq
mov
addr16
js
xchg
add
loop
dec
fwait
out
in
mov
push
arpl
add
xchg
shl
(bad)
fsub
imul
jg
mov
inc
call
fcomip
fs
sub
lds
mov
pusha
add
add
(bad)
cli
cmp
bnd
and
popa
and
addr16
out
sahf
pop
loope
push
out
mov
cmp
cmp
or
inc
jecxz
cmp
push
sbb
(bad)
aam
inc
hlt
lock
sbb
mov
stos
cmp
push
add
sbb
mov
stos
ret
aam
jp
fstp
adc
jmp
adc
mov
push
mov
dec
inc
jo
iret
ret
call
mov
xchg
mov
fwait
int3
mov
movs
jp
repz
pop
call
xor
ja
xchg
fwait
knotb
adc
mov
in
(bad)
inc
sub
xchg
cmp
add
sub
and
lea
adc
and
push
jge
inc
fcomp
call
cld
lock
add
jle
aam
dec
jecxz
sbb
iret
ja
cmovg
(bad)
jmp
into
outs
adc
add
sub
hlt
rol
sbb
(bad)
mov
test
xchg
adc
sti
mov
dec
adc
or
retf
pop
pop
test
adc
dec
xor
sahf
sub
aad
mov
xchg
push
bound
call
xchg
mov
mov
push
inc
in
pop
test
ss
and
jnp
pop
rcr
fld
push
adc
inc
movs
pop
icebp
push
cs
aad
ins
(bad)
aaa
fld
les
xor
ins
dec
js
out
(bad)
mov
pop
xor
call
shl
pop
or
pusha
hlt
lahf
out
repnz
dec
in
mov
ret
iret
mov
out
out
sti
out
xchg
pop
scas
jnp
inc
call
outs
add
int
and
fs
sub
js
jne
or
gs
scas
int
cmp
inc
jns
sub
push
push
(bad)
cli
icebp
sbb
mov
cmp
jecxz
cmps
inc
in
rol
xchg
aam
in
(bad)
inc
in
sbb
and
jns
imul
jp
mov
dec
dec
rol
sub
fnsave
xor
mov
je
(bad)
push
cmp
jne
xor
jle
stos
je
in
or
adc
rcl
mov
in
push
push
push
mov
inc
jl
fsubp
lods
sub
xor
jle
ins
or
mov
in
ss
xor
push
dec
shl
(bad)
cmps
test
cmp
sar
ror
push
ins
iretw
fidiv
push
into
jne
std
lds
aam
xor
nop
clc
add
cmp
and
jb
pop
cmp
cmp
pop
mov
inc
pop
ret
xlat
mov
or
push
das
call
push
sahf
mov
dec
mov
mov
imul
sub
push
or
movs
mov
push
inc
adc
xor
icebp
stc
jnp
add
(bad)
aas
mov
jne
jbe
ins
loope
stos
dec
shl
mov
dec
xrelease
addr16
pusha
inc
ss
fimul
mov
sub
mov
in
aas
xchg
adc
(bad)
scas
mov
jbe
lahf
movs
pop
call
test
sbb
in
inc
jle
mov
or
cmp
test
or
inc
sub
mov
push
mov
jb
out
push
or
sub
xor
or
xchg
add
sahf
imul
fdiv
mov
neg
push
adc
ret
test
loop
inc
shl
pop
sar
mov
or
cmps
pop
or
dec
sbb
xlat
jnp
add
mov
popf
sub
mov
cmp
pop
cwde
add
inc
cmp
mov
jmp
or
cmp
pushf
sbb
(bad)
test
(bad)
loopne
inc
adc
cmps
jg
xor
aam
pop
repz
mov
mov
add
xor
cmc
cmp
dec
add
lea
shl
or
retf
dec
adc
fwait
sar
cmp
nop
xchg
or
inc
inc
xor
daa
loopne
mov
in
xchg
push
xchg
fwait
and
add
out
mov
jb
jmp
ss
mov
xchg
icebp
stos
mov
fldcw
jo
xor
hlt
sub
mov
mov
jns
jo
(bad)
push
sub
dec
cmp
jge
mov
inc
mov
lods
push
in
push
xchg
into
cwde
xchg
adc
outs
xor
into
loope
loope
cmps
sbb
push
add
add
shl
je
test
ja
popf
fisub
xlat
pop
inc
add
call
add
js
or
cmc
iret
call
sbb
add
outs
cmp
xlat
add
push
xchg
(bad)
je
mov
mov
int
lods
mov
xor
add
xchg
jo
icebp
scas
and
ins
xor
xor
rol
retf
push
(bad)
jp
mov
dec
loope
xor
aad
xchg
(bad)
cmp
arpl
fdiv
sbb
inc
(bad)
mov
mov
jae
test
xlat
and
ins
repnz
loopne
lock
ins
sbb
je
and
sub
dec
pop
xor
push
sub
pushf
xchg
lods
push
add
imul
pop
rcl
dec
mov
loop
fisttp
lock
jb
ins
dec
sub
(bad)
dec
cwde
jne
add
jmp
inc
ret
test
adc
out
(bad)
loope
pop
xor
pushf
in
movs
sbb
cmp
fstp
add
push
addr16
mov
jmp
jno
pop
dec
test
jb
push
fcomp
cli
mov
adc
xor
sbb
cli
mov
movs
jg
dec
cmps
fsubr
aam
jge
and
jmp
repnz
push
mov
or
dec
inc
jg
mov
mov
xor
and
int
pop
xor
jmp
or
sub
jmp
enter
lock
push
arpl
call
mov
inc
mov
adc
hlt
rcl
add
mov
icebp
jg
or
cmp
xchg
fisubr
mov
rol
in
jl
out
aaa
mov
addr16
pusha
fcomp
arpl
xor
test
jns
adc
or
or
cmp
ins
inc
dec
mov
stos
dec
pop
sub
loopne
xchg
pop
ja
cmp
or
out
sub
pop
add
push
int
add
mov
dec
mov
sbb
sub
mov
ds
adc
cwde
into
pop
dec
bound
cmp
repz
ret
into
pop
shl
(bad)
mov
xchg
push
or
dec
das
mov
int3
sar
call
sbb
ja
mov
movs
ja
clc
shl
pop
ins
mov
adc
mov
rcr
mov
dec
loop
call
dec
sub
cld
sub
aaa
leave
(bad)
test
mov
sti
daa
cs
clc
cmp
jecxz
daa
sub
pushf
in
and
mov
xchg
(bad)
push
mov
xor
and
xor
daa
retf
cdq
cmp
jmp
outs
stos
test
mov
mov
push
xor
mov
dec
(bad)
es
sar
popf
loop
adc
lods
fs
icebp
call
or
in
jge
test
or
adc
xchg
xchg
ficomp
sbb
push
in
in
not
sbb
popa
or
xchg
lds
push
push
popa
mov
xchg
dec
sti
das
lods
data16
lea
retf
or
inc
add
pop
add
mov
push
pop
jp
and
aad
outs
lods
cld
shl
and
xor
test
and
jl
idiv
mov
test
jl
test
out
mov
daa
fst
cmp
mov
pop
sub
mov
(bad)
sti
jbe
mov
(bad)
scas
adc
add
jb
adc
xchg
fsub
fs
call
or
jae
in
js
xor
stos
sbb
xchg
inc
daa
and
dec
jle
jle
mov
loop
dec
repnz
xchg
or
cdq
and
mov
icebp
mov
cmp
stos
xchg
fwait
add
(bad)
push
and
aad
or
jo
push
outs
mov
ret
sub
arpl
leave
inc
fisubr
jg
aaa
(bad)
sub
jmp
push
sub
jmp
stos
jp
std
adc
cli
aaa
add
test
test
fst
aaa
popa
inc
seta
into
mov
dec
and
sti
rcl
imul
ror
jne
push
lock
out
jno
jmp
push
jb
aam
add
sbb
and
enter
lea
sti
cmp
or
xlat
pusha
xlat
hlt
mov
data16
popa
inc
iret
cmp
and
jns
inc
push
mov
jmp
shl
js
xchg
in
test
sbb
pop
jbe
sbb
pop
repz
dec
je
cmp
mov
sbb
or
xor
ds
sub
pushf
aas
mov
pop
aam
adc
iret
les
push
in
sbb
push
(bad)
clc
fdivrp
aad
icebp
xor
pop
mov
mov
iret
fst
sbb
dec
push
leave
mov
in
(bad)
and
pop
adc
and
mul
xor
icebp
rol
inc
mov
cmp
and
popa
push
enter
loopne
pop
jbe
sbb
(bad)
dec
mov
sbb
jnp
dec
xor
jmp
ja
(bad)
cdq
jmp
or
pop
lods
jge
sub
push
pop
adc
sahf
sbb
jno
adc
inc
sahf
mov
xchg
mov
data16
sbb
jb
aaa
imul
xor
into
jmp
es
scas
aaa
arpl
movs
imul
adc
jnp
inc
cmp
sub
mov
or
push
(bad)
mov
sbb
out
and
jbe
pop
lds
push
js
push
cmp
add
mov
jg
cmps
ret
cdq
cld
xchg
cs
(bad)
mov
movs
or
pop
pop
sbb
fstp
or
or
ret
lods
rdtsc
and
sbb
hlt
hlt
mov
xor
fcomp
jns
ret
arpl
(bad)
mov
loop
fisub
and
or
dec
loopne
ins
hlt
add
mov
cmp
fidiv
cs
dec
cmp
mov
test
fsub
out
retf
xor
mov
movs
mov
dec
je
add
call
sub
cwde
data16
or
cmp
bnd
xor
inc
push
cmps
das
sar
xor
inc
pop
sub
push
xlat
mov
cwde
lahf
outs
xchg
adc
push
mov
cs
sbb
mov
jmp
fisub
and
mov
arpl
inc
sbb
mov
push
pminub
push
ret
fnstcw
setb
fwait
in
ficom
jmp
idiv
call
xchg
and
js
inc
in
fs
mov
xchg
xlat
lods
xchg
add
ror
and
fsub
leave
inc
inc
(bad)
dec
mov
fsub
(bad)
daa
dec
cmp
add
enter
adc
sahf
iret
mov
xor
jle
ja
dec
and
inc
jae
or
iret
or
inc
pop
test
jo
ficomp
icebp
fcmovbe
lds
cmp
push
aad
nop
leave
push
push
cmp
inc
popa
rcl
mov
es
in
loopne
sbb
mov
xchg
jg
movs
push
ficomp
(bad)
(bad)
pop
nop
in
xor
add
fist
inc
repnz
repnz
push
ss
out
push
push
sti
jae
adc
iret
outs
xor
mov
mov
mov
movs
mov
(bad)
pop
pop
syscall
push
enter
out
push
test
enter
jmp
add
cmp
mov
jnp
ins
out
push
(bad)
jae
pushf
pop
mov
sbb
cmp
sbb
inc
(bad)
pop
and
dec
push
retf
fwait
dec
in
push
inc
daa
and
add
sub
(bad)
push
jo
xlat
xor
push
push
mov
push
jl
mov
into
sbb
jp
cwde
int3
retf
dec
or
rcr
sub
mov
jns
in
shl
jne
sub
es
sub
xlat
(bad)
shl
leave
jg
fcomp
dec
xor
sub
std
add
sbb
sub
call
inc
sbb
outs
inc
dec
mov
xor
sbb
jns
add
mov
push
enter
cmp
movs
imul
push
sub
mov
or
fwait
enter
sar
and
xchg
sbb
sub
ja
mov
inc
xor
bound
sahf
jmp
adc
adc
sti
xchg
lock
adc
in
adc
add
les
mov
imul
pop
add
pop
pop
icebp
sub
imul
dec
and
xchg
inc
ss
mov
fimul
xchg
(bad)
loope
js
aam
enter
imul
test
imul
and
mov
es
clc
repz
pop
push
or
(bad)
mov
iret
jl
arpl
cwde
packssdw
mov
jns
movs
dec
jecxz
inc
jns
lea
sbb
loope
cwde
inc
(bad)
and
xchg
rcr
hlt
in
test
or
jbe
cdq
pop
dec
cmps
gs
sbb
sbb
icebp
xchg
cmps
xchg
lods
sub
mov
push
lock
ja
movs
mov
retf
das
xor
sti
pop
pop
mov
fimul
and
rol
push
jns
xor
or
sub
push
mov
dec
outs
jle
push
repnz
push
rcl
lahf
rcr
out
shr
mov
fiadd
out
inc
inc
fs
and
lock
(bad)
(bad)
or
retf
mov
add
pop
enter
out
push
dec
retf
lock
inc
fisubr
ficom
xor
or
shr
pusha
mov
dec
cmp
add
mov
jmp
jle
test
ror
(bad)
inc
push
popa
sbb
(bad)
cmp
and
and
mov
test
cmp
mov
sub
test
int
mov
(bad)
cmc
and
inc
aam
into
cmp
mov
push
lahf
push
mov
sbb
xchg
aad
fisttp
jb
out
iret
rcr
or
clc
dec
das
movs
and
cmp
or
jno
in
loop
dec
retf
adc
xchg
dec
aam
add
push
xor
scas
or
fld
sbb
dec
mov
fsub
pop
and
mov
mov
adc
icebp
aad
adc
dec
stos
(bad)
hlt
test
push
mov
cld
imul
sbb
jae
or
das
mov
je
and
pushw
and
fidivr
stos
popa
pop
sbb
mov
test
sti
xor
or
sub
stos
cli
push
mov
stc
inc
test
pop
push
or
xchg
pop
data16
(bad)
in
jle
mov
movs
or
fdivr
xor
add
int
cli
pop
ins
sar
cmp
xor
dec
ret
enter
into
scas
leave
int3
(bad)
jl
and
movs
jp
div
(bad)
les
shr
fsubrp
mov
or
pop
add
push
daa
push
xor
jmp
cmp
push
xor
not
sub
dec
inc
stc
mov
fucomi
xchg
cmps
push
cmc
ret
xor
popa
mov
add
xor
pusha
rcr
fisubr
xor
sahf
pop
pop
scas
stos
and
cdq
call
(bad)
inc
stos
add
xlat
add
mov
cmp
addr16
pop
out
add
dec
jge
mov
or
inc
sub
imul
push
cmc
push
or
add
lds
jmp
outs
idiv
mov
imul
popf
icebp
inc
stc
popf
das
mov
icebp
pushf
imul
jo
out
push
jb
sbb
addr16
sub
call
fwait
sub
or
test
loopne
ins
xchg
pusha
add
mov
cmc
xor
stos
push
aaa
sbb
outs
adc
(bad)
inc
ret
xchg
sbb
(bad)
dec
ins
jg
sbb
mov
mov
sahf
xlat
ret
leave
leave
sbb
sbb
adc
div
xchg
lods
fisub
sub
add
fistp
stos
fild
cli
cwde
jecxz
push
jle
push
inc
cs
adc
sub
cli
push
xor
lds
mov
mov
loopne
add
out
mov
int
sbb
xchg
and
xchg
jbe
adc
(bad)
push
lock
xor
shl
iret
add
icebp
shr
xchg
es
and
sub
fnsave
neg
iret
aas
(bad)
sbb
push
pop
js
scas
rol
adc
ret
mov
xor
pop
xchg
les
arpl
call
cmp
mov
jno
pop
push
sub
fwait
xor
mov
out
in
ins
addr16
stos
mov
sahf
sbb
ss
add
sahf
jae
ins
int
loope
push
dec
rcr
xor
and
or
cmc
push
sub
mov
add
inc
je
xchg
inc
shr
dec
fistp
mov
addr16
dec
cdq
fwait
enter
popa
jmp
ss
aad
sbb
mov
dec
imul
repnz
mov
(bad)
mov
(bad)
test
adc
pop
gs
icebp
cmp
neg
adc
cmp
cdq
mov
icebp
push
sahf
rcr
repz
mov
xchg
or
cmps
sti
push
aam
mov
(bad)
(bad)
push
inc
sti
cs
add
fild
sbb
arpl
or
pop
cmps
push
nop
add
dec
push
(bad)
xchg
adc
outs
ret
in
ss
popa
movs
jmp
scas
dec
and
inc
adc
add
jle
leave
daa
les
inc
shr
xchg
sbb
dec
adc
js
jmp
retf
and
xor
out
mov
ins
mov
jmp
adc
sub
sbb
movs
pop
in
in
icebp
pop
inc
pop
rol
sbb
and
adc
fbld
shl
xlat
xchg
lock
lock
fs
add
mov
pop
adc
jnp
adc
retf
ja
in
mov
xchg
test
inc
clc
mov
pop
aaa
imul
cdq
ret
bound
cmp
dec
(bad)
push
push
mov
jg
mov
in
ja
and
or
dec
mov
mov
stos
test
pushf
fsubr
leave
inc
jl
mov
popf
int
push
out
or
out
jg
mov
xchg
xchg
shl
std
movs
adc
(bad)
xchg
fs
jbe
cli
inc
das
jle
jbe
or
mov
repz
cli
ins
mov
ds
cmps
push
xchg
mov
(bad)
in
adc
repz
xchg
pushf
inc
retf
out
pop
mov
push
lock
js
push
cs
cwde
mov
sti
(bad)
loope
add
pop
repnz
mov
jmp
dec
xor
inc
not
les
test
ja
sbb
sbb
fidivr
sub
jp
xlat
not
cwde
cwde
push
fbstp
jb
stos
lods
cwde
cmp
ficomp
clc
and
jmp
sar
stc
mov
mov
cdq
mov
fld
mov
ret
pop
inc
loop
mov
std
jmp
add
cmps
mov
js
rcr
and
xor
pop
outs
jbe
dec
iret
les
in
pop
inc
push
xchg
movs
jae
xchg
repz
fldenv
int3
adc
cli
nop
cmps
int
out
cmp
popf
cmp
sti
mov
pop
or
out
sbb
enter
sub
in
dec
sbb
jne
and
jnp
cmps
inc
in
cdq
pop
fistp
enter
mov
adc
mov
int
repz
ins
adc
xchg
mov
jbe
sub
loopne
cmps
inc
or
pop
mov
xor
sbb
push
sub
add
xchg
pop
sahf
mov
xchg
mov
sub
addr16
add
nop
das
dec
sbb
int
rcl
mov
xor
mov
fwait
outs
ror
out
pusha
mov
retf
fcom
jmp
xor
stos
mov
int
(bad)
pop
push
mov
dec
fstp
popa
add
enter
ins
push
cmp
jmp
outs
push
add
push
mov
adc
jp
inc
arpl
cmp
push
pushf
imul
xor
(bad)
rcl
fcom
nop
sbb
ja
push
ret
call
adc
mov
cli
stos
into
stos
test
push
xchg
sub
lods
retf
and
lods
adc
sbb
or
(bad)
jnp
jg
pop
test
dec
pop
mov
ss
into
adc
or
outs
les
stos
jnp
arpl
rol
inc
cwde
lahf
add
pop
pusha
sub
push
lods
mov
adc
xchg
add
xor
aas
mov
xlat
jp
repz
add
in
or
xchg
cmps
sbb
out
adc
aam
push
aas
rol
pop
sbb
call
sbb
jo
cmp
pop
push
in
fnstsw
adc
popf
pop
imul
test
push
jnp
aam
call
cmp
leave
pop
push
add
jb
(bad)
sbb
add
in
imul
xor
stos
jnp
test
mov
cmps
jg
neg
repnz
(bad)
dec
jmp
clc
clc
jno
sub
push
mov
loopne
ds
push
jg
icebp
adc
cmps
add
mov
es
push
das
cld
addr16
cmp
mov
cld
cmp
mov
cdq
jnp
into
mov
mov
mov
ss
sar
or
xchg
repz
adc
xchg
in
cmp
fs
fld
xchg
pusha
xchg
push
sbb
aam
dec
in
mov
fdivr
add
pusha
mov
mov
pusha
sub
sub
fsubr
jnp
or
jl
push
sbb
pop
push
fst
icebp
leave
mov
add
pop
paddusw
xor
jmp
cmps
callw
dec
test
or
adc
jae
stos
sub
or
mov
call
ret
sbb
sbb
mov
cdq
xchg
outs
dec
jne
call
sbb
sbb
scas
add
jmp
sbb
pop
pop
dec
shr
cmp
retf
push
jmp
scas
lods
dec
cmp
(bad)
in
mov
adc
inc
push
sahf
xchg
sub
js
jecxz
mov
aam
xor
xor
sbb
shl
inc
out
pop
movs
nop
pop
hlt
shl
rcr
jb
and
pop
icebp
in
and
aam
lods
adc
adc
cmp
imul
mov
fisubr
pop
aam
and
mov
sbb
push
pop
rol
aad
pusha
mov
cdq
xlat
out
add
scas
std
stos
xchg
jo
pop
jnp
inc
add
test
xchg
mov
xchg
enter
js
rol
pop
fisttp
mov
sub
inc
cs
call
ins
pusha
out
and
cdq
push
stc
xchg
in
and
lock
inc
jae
push
push
in
sbb
adc
ja
and
into
add
stc
repz
jb
mov
jmp
int3
mov
imul
js
add
dec
dec
xchg
call
in
adc
daa
mov
fidiv
je
call
in
mov
pop
fwait
sahf
mov
in
cld
mov
or
sub
out
int
lds
lods
aad
fiadd
jle
xchg
call
popa
mov
cmc
sti
repnz
mov
sub
adc
call
retf
jp
pop
(bad)
cmps
gs
out
and
loope
imul
pop
pop
out
in
sub
add
mov
data16
push
push
xchg
and
add
inc
sar
jge
js
mov
mov
jge
cs
enter
mov
jo
int
test
pop
add
sub
sbb
ss
mov
inc
push
shl
aam
jmp
lods
or
sub
leave
push
stos
pop
push
test
mov
rcl
movs
mov
sti
ins
arpl
mov
imul
pop
jle
aas
inc
jno
sub
arpl
call
test
out
jmp
arpl
jle
por
xchg
retf
stc
dec
retf
or
shr
ds
aam
outs
div
call
ret
jb
(bad)
sub
scas
mov
mov
mov
sbb
sub
xlat
jecxz
rep
int
mov
inc
jae
js
mov
les
retf
add
inc
inc
test
pop
mov
retf
and
push
das
adc
in
push
cld
push
pop
test
xor
int
add
mov
jge
inc
dec
fdivr
pop
jno
movs
ret
arpl
out
push
push
daa
push
sti
int
fcmovb
xchg
std
lds
sar
inc
adc
(bad)
jne
and
icebp
cdq
jae
mov
popf
jg
sbb
push
pushf
jns
cmc
push
push
and
cmp
imul
(bad)
and
or
ins
bound
test
jmp
dec
cmp
sbb
ds
movs
cmp
pusha
outs
mov
xchg
xchg
cdq
xchg
and
stc
lods
test
mov
retf
inc
outs
jo
mov
push
pop
xor
pop
rcr
je
std
xchg
ins
push
cmp
rol
jmp
adc
daa
pop
mov
dec
push
mov
mov
sbb
repz
dec
add
xchg
les
sar
or
jecxz
retf
dec
(bad)
mov
sub
cmp
in
cmp
ss
jnp
cld
pop
push
sbb
pop
xchg
shl
add
sub
dec
sti
xchg
jle
popa
mov
or
test
push
dec
sbb
xchg
out
loope
sub
lock
add
fidiv
adc
push
mov
fidiv
sbb
addr16
and
jge
pop
jge
out
stc
push
and
sub
xlat
mov
pop
jo
(bad)
jns
mov
rcr
mov
int
fistp
jecxz
outs
sub
call
ins
push
mov
adc
sub
xchg
inc
or
cmp
dec
popa
jae
scas
or
call
jg
(bad)
in
hlt
sbb
popf
mov
mov
iret
jmp
and
push
pop
inc
mov
inc
add
xor
in
fidiv
imul
add
fstp
(bad)
push
jmp
push
adc
inc
xchg
je
clc
dec
mov
xchg
fwait
dec
stos
and
lea
cwde
(bad)
fs
(bad)
push
pop
and
arpl
push
out
scas
enter
sti
xchg
and
daa
pusha
ret
jle
(bad)
pop
jnp
and
repnz
in
les
xor
mov
loope
mov
pop
call
into
(bad)
in
push
(bad)
stos
(bad)
bound
int
(bad)
mov
xchg
sub
in
int
sub
pop
mov
dec
cmp
inc
cmp
repz
std
xchg
test
and
push
inc
arpl
pop
cmp
test
cld
pop
pushf
xchg
jne
sub
outs
call
stc
mov
add
add
pop
or
rcl
inc
std
leave
sub
mov
add
pop
dec
ja
(bad)
repz
push
jmp
daa
mov
in
pop
movs
add
imul
pop
into
fiadd
ret
rcr
mov
sahf
fwait
mov
les
mov
dec
pop
mov
mov
clc
hlt
ins
push
fs
loop
or
test
mov
(bad)
cmc
or
dec
bound
cli
and
je
scas
mov
daa
jmp
or
dec
cmp
jb
scas
in
(bad)
sub
inc
nop
fcom
mov
stos
and
fs
cdq
nop
mov
or
xchg
lods
inc
pop
pop
or
add
mov
add
scas
sbb
nop
out
or
ins
and
or
retf
adc
mov
scas
jne
(bad)
mov
push
ins
cmc
pusha
xor
aam
mov
addr16
mov
sbb
jmp
mov
mov
retf
jne
push
out
rcr
jmp
push
dec
fst
test
repnz
pop
cmps
cdq
sub
popa
fimul
add
(bad)
pop
scas
mov
jmp
jno
mov
cmc
retf
(bad)
pop
rol
popf
hlt
int
pushf
int3
dec
in
push
mov
icebp
js
or
xchg
lods
dec
lahf
je
(bad)
push
repnz
fild
mov
clc
fisubr
mov
rol
icebp
cmps
les
pop
cmp
div
xchg
push
out
inc
enter
sbb
pop
cmp
ret
pop
dec
mov
jecxz
out
mov
mov
out
(bad)
xor
jge
add
or
inc
out
xchg
jo
lds
mov
inc
xor
inc
mov
mov
mov
push
xor
dec
cmp
dec
inc
icebp
rcl
adc
test
pusha
mov
data16
repz
xchg
mov
clc
jle
mov
(bad)
push
or
ss
mov
ss
pop
pop
cdq
aam
aam
lods
mov
sub
add
sub
outs
repz
pop
int3
and
fstp
test
jb
add
push
sahf
add
push
retf
mov
mov
addr16
aad
sbb
outs
mov
push
movs
inc
mov
cmp
lock
pop
dec
mov
(bad)
sbb
addr16
shr
mov
adc
loope
push
(bad)
fld
and
push
fscale
hlt
xor
cmp
out
or
dec
sub
sub
bnd
adc
or
mov
mov
and
sbb
es
xchg
jb
ja
add
push
xlat
and
inc
push
lods
js
cmp
in
pop
lahf
pop
or
pusha
push
aam
cli
in
jecxz
ja
xor
push
fcom
out
retf
scas
retf
cmp
xor
cmps
dec
or
push
jge
int3
inc
out
push
outs
push
jns
push
ins
ret
xchg
sti
fild
fwait
loopne
jge
jle
or
stos
pop
push
sahf
cmp
popf
rcr
mov
inc
pop
xchg
mov
xchg
jno
outs
adc
fisttp
jl
ds
and
aad
or
mov
add
inc
dec
inc
or
cmc
add
adc
bound
xchg
mov
daa
mov
sub
popa
je
pusha
les
pop
inc
mov
(bad)
(bad)
call
pop
pop
or
sbb
lods
dec
adc
or
jmp
sub
lahf
lods
adc
cdq
xchg
push
arpl
addr16
push
fst
(bad)
out
mov
pop
push
jbe
jb
enter
inc
jae
je
ins
jle
mov
imul
test
jmp
scas
cmps
xlat
loopne
cdq
pop
jae
sahf
jbe
pop
or
adc
push
mov
mov
and
rcl
cdq
push
xchg
scas
dec
movs
adc
xlat
xchg
inc
jl
xchg
jne
ret
cmps
xlat
mov
xchg
mov
mov
mov
sbb
fs
call
cmp
cli
outs
dec
cmp
jmp
sbb
neg
pop
and
adc
adc
push
mov
push
fild
test
mov
pushf
mov
cld
leave
lods
add
xchg
out
xchg
cmp
imul
adc
mov
inc
loopne
push
sti
rol
mov
sub
mov
es
sub
dec
and
pop
push
cs
lods
lods
sbb
das
jmp
es
cmc
ss
retf
mov
ficomp
adc
(bad)
(bad)
xlat
(bad)
inc
sub
add
mul
jno
fisttp
cwde
scas
xchg
(bad)
outs
dec
stc
sub
ficomp
repz
daa
cmp
pushf
cmp
mov
mov
outs
mov
xor
inc
in
(bad)
scas
push
xor
mov
cmp
adc
cmp
ds
sbb
push
lea
adc
xchg
inc
xlat
dec
fistp
cwde
ds
sbb
push
repz
jmp
pusha
addr16
(bad)
cmp
xor
cwde
push
pop
inc
stc
call
jne
pop
push
push
pop
push
dec
adc
xor
pop
add
fldcw
mov
jbe
mov
cs
mov
dec
scas
xlat
enter
jae
mov
das
int3
gs
mov
mov
aaa
mov
test
add
sub
jbe
fisttp
mov
and
cli
rol
and
and
mov
outs
sbb
dec
inc
cmps
cmp
push
in
mov
xchg
sbb
ret
xor
out
mov
dec
in
xchg
xchg
ret
je
repnz
test
xchg
cld
push
mov
inc
das
arpl
jp
cdq
jnp
inc
or
call
mov
mov
movs
or
popa
cwde
pop
in
es
and
aam
mov
add
sti
inc
test
out
xlat
jnp
pop
adc
mov
ja
rol
xor
jg
dec
or
mov
ins
inc
andnps
push
jmp
fcmovnu
mov
test
jmp
ins
in
jge
sbb
aad
add
dec
jmp
mov
int3
push
out
fisubr
enter
sbb
push
cli
jmp
je
dec
pop
scas
and
push
fwait
movs
mov
dec
add
sub
sub
addr16
sbb
int
loopne
pop
or
lock
pushf
in
cmp
or
lahf
mov
or
ins
dec
jae
push
out
fst
or
xlat
int3
pop
dec
pop
ror
cmp
lahf
dec
or
xchg
mov
ret
gs
retf
pop
add
lods
jmp
std
cmp
adc
inc
scas
xor
outs
xlat
fnstcw
outs
mov
xor
jns
rcr
push
in
fmulp
or
fsub
and
int3
sub
icebp
xor
push
mov
jnp
add
cmp
push
ds
mov
stc
dec
test
mov
sbb
push
xor
stos
enter
repz
lds
push
xchg
push
sub
movs
or
dec
push
aam
pop
or
inc
push
push
shl
sahf
jmp
adc
and
jg
ja
pop
sub
jne
das
shl
test
mov
jb
adc
std
push
cli
or
sub
and
call
inc
cmp
fld
mov
pop
ins
movs
daa
ins
ret
jne
mov
fsub
ret
iret
(bad)
test
test
idiv
xchg
out
mov
push
mov
stos
fidiv
retf
out
mov
scas
sbb
xor
mov
sub
push
sbb
cmp
jb
loop
ss
add
sahf
(bad)
addr16
pusha
jb
push
add
sbb
jmp
call
fstp
idiv
mov
cmp
iret
sahf
xor
scas
(bad)
xchg
test
outs
mov
inc
pop
pop
xor
ja
stos
mov
xchg
push
arpl
sbb
sub
mov
xor
leave
inc
arpl
sbb
pusha
(bad)
stos
in
push
pop
xor
sti
repz
mov
jnp
fild
cdq
cmc
xlat
sub
mov
xchg
inc
jno
ja
movs
sbb
push
shl
repz
push
cmp
popf
sub
nop
out
sub
jnp
inc
push
int3
data16
push
xor
or
xchg
sub
xchg
(bad)
xchg
xor
xchg
(bad)
(bad)
cmp
cli
push
push
sahf
mov
(bad)
sub
xor
call
mov
inc
adc
icebp
xchg
aad
inc
and
repz
iret
aaa
and
sub
(bad)
mov
call
gs
daa
pusha
pusha
dec
mov
cmp
fldpi
jp
cmc
inc
lods
dec
sbb
jbe
sub
lahf
cmp
pop
pop
xor
fnstcw
mov
inc
inc
jae
stos
jle
pop
mov
add
fcomp
xor
cmp
xor
mov
sahf
loope
scas
arpl
xlat
pop
(bad)
mov
out
dec
aam
mov
sub
iret
enter
icebp
test
inc
ret
out
mov
test
cmps
mov
xchg
seta
sub
mov
dec
jbe
mov
push
add
sub
(bad)
jo
mov
ja
rol
(bad)
sub
adc
(bad)
xor
xor
call
clc
mov
aam
push
push
fsubr
call
sbb
xor
pop
dec
rcl
add
out
cmp
ds
in
xchg
cmp
mov
xchg
lds
js
cwde
ss
les
push
xchg
daa
(bad)
mov
xor
mov
into
pop
jge
cwde
shl
xlat
ins
pusha
mov
out
jnp
and
into
int
cdq
ret
cdq
add
mov
cwde
and
xchg
movs
cwde
pop
sbb
adc
cs
push
cmp
mov
dec
lods
test
(bad)
cmp
test
xchg
sbb
add
push
jl
push
(bad)
xor
xchg
into
shl
retf
aad
xor
push
ins
in
dec
int3
jmp
mov
sti
sbb
mov
mov
dec
fdiv
icebp
fld
mov
mov
or
jo
hlt
(bad)
adc
push
or
inc
dec
cmp
inc
jne
dec
je
inc
leave
shr
or
out
je
in
dec
sub
lahf
fld
nop
adc
pop
cmc
ja
fstp
push
inc
fisub
add
ffreep
or
bswap
aaa
inc
jae
stos
mov
je
lahf
mov
push
dec
fisttp
sub
jo
dec
jle
xor
cmp
aad
retf
vmovapd
or
pop
icebp
(bad)
push
mov
ficom
add
mov
xchg
std
movs
sti
add
add
adc
aaa
neg
ret
push
mov
daa
inc
mov
mov
mov
cmps
in
mov
enter
jne
inc
rol
repz
push
movs
jo
dec
ds
mov
inc
adc
mov
js
jae
lods
cdq
out
pop
fs
std
jecxz
int
adc
sbb
xor
imul
and
mov
sub
fcmovb
test
jo
sub
xor
adc
ficom
(bad)
push
stos
imul
or
inc
xchg
icebp
sub
sbb
idiv
xchg
outs
mov
call
sar
and
rcr
jecxz
jp
out
mov
inc
dec
xor
loop
mov
pop
pusha
or
stc
mov
cmc
lea
xchg
or
xchg
scas
mov
jbe
out
in
pop
mov
out
fcmovnbe
scas
cmp
bound
jge
stos
retf
and
imul
cmps
jmp
jge
(bad)
out
adc
test
or
push
jae
ss
inc
imul
(bad)
inc
and
std
daa
or
test
cdq
xor
sar
loope
mov
mov
iret
or
rcr
stc
in
imul
pop
retf
sbb
or
movs
inc
or
in
fwait
iret
stos
push
jb
xor
scas
out
into
jmp
stos
inc
pop
sti
and
or
mov
add
jmp
sbb
xor
outs
(bad)
cdq
sub
adc
lea
and
retf
bound
into
(bad)
sahf
mov
std
inc
add
xchg
outs
(bad)
jle
pop
or
xchg
pop
lahf
outs
ror
je
jecxz
movs
pop
sbb
push
push
ss
inc
mov
mov
es
jecxz
jo
push
sbb
xor
enter
arpl
and
mov
xlat
and
test
lahf
push
xor
cmps
xor
dec
in
fadd
test
mov
jno
and
mov
push
sahf
stc
call
sub
cmp
fmulp
gs
dec
sub
sub
shr
cmp
cmp
(bad)
push
add
inc
sbb
ret
dec
imul
pop
mov
jmp
cdq
or
inc
cmp
inc
popf
cmp
jo
cdq
out
inc
push
test
daa
mov
shl
push
cmp
or
int
push
retf
fiadd
out
(bad)
ffreep
xlat
mov
mov
mov
and
push
mov
mov
adc
pop
and
cdq
fiadd
rcr
sahf
mov
mov
loop
int3
xor
sbb
in
xor
pop
ret
ror
adc
(bad)
loope
in
call
jp
dec
leave
dec
pop
sub
aam
or
dec
xor
adc
sub
dec
xor
das
hlt
inc
es
inc
mov
sub
mov
cmps
je
jae
not
scas
mov
setne
jnp
pop
(bad)
rcr
enter
test
aam
cmp
cmp
mov
aas
mov
stc
js
mov
push
push
nop
and
lods
(bad)
fdiv
int3
cmp
sub
pop
dec
xchg
and
rcl
jmp
js
pop
movs
jne
or
sbb
xchg
xchg
ror
pop
or
jnp
sub
xor
cmp
jle
outs
sbb
adc
mov
fs
pop
test
bound
xchg
pop
lods
test
rcl
ret
pop
sub
imul
fwait
(bad)
(bad)
popf
fnstsw
retf
add
call
mov
xchg
adc
sub
imul
dec
adc
push
mov
mov
arpl
pop
fcmovnb
rol
neg
push
pop
inc
push
push
dec
sub
xchg
cmp
push
icebp
and
call
mov
dec
jbe
mov
add
push
jbe
adc
ja
adc
xchg
xchg
into
lock
pop
sbb
imul
mov
jns
cdq
mov
mov
imul
aaa
arpl
ror
leave
jns
mov
rol
stc
sbb
add
cmp
cld
mov
adc
inc
mov
daa
iret
stos
sbb
ins
aad
cmps
in
pop
xor
xchg
ins
lods
xchg
xlat
pop
inc
ja
in
bound
cmp
mov
pop
out
push
jmp
dec
dec
test
pop
test
call
mov
cmps
out
mov
inc
mov
sahf
sbb
pop
test
into
add
push
and
and
call
mov
push
jg
cmp
push
or
sub
and
mov
test
mov
and
sahf
mov
mov
jmp
es
jnp
jg
push
fxch
xor
pop
pop
js
cld
jecxz
imul
push
xor
int3
mov
call
cmc
cmp
or
mov
xor
rcr
hlt
repnz
sbb
popf
es
in
pushf
movs
and
jo
push
outs
inc
mov
push
jle
es
xor
std
mov
daa
lea
xor
mov
mov
pop
pusha
and
fwait
sbb
loop
inc
adc
add
and
call
test
mov
fsub
lock
dec
test
mov
test
les
push
das
inc
xchg
sub
push
pop
push
call
inc
shl
sbb
lock
mov
das
dec
rol
imul
das
and
mov
(bad)
hlt
pop
and
inc
inc
xchg
adc
out
popa
mov
xchg
repnz
cmps
push
pop
ins
cmc
call
dec
push
inc
aaa
cmc
nop
cs
ins
mov
mov
cmp
push
fnstsw
xchg
outs
loope
push
imul
(bad)
out
fild
sub
xchg
inc
mov
fld
test
push
rol
cli
mov
pop
fld
xor
jmp
lock
stos
mov
jmp
fcomp
pop
pop
subps
addr16
daa
add
out
mov
xchg
lahf
cmp
in
mov
jp
xor
xor
ja
pop
test
aaa
test
pop
and
jl
sbb
frndint
retf
xchg
int
into
fst
or
cmp
mov
sbb
sub
mov
jmp
sub
push
cmp
lds
jmp
fst
arpl
outs
pop
es
dec
outs
adc
mov
mov
xchg
lea
inc
dec
ja
jmp
and
out
mov
push
(bad)
sub
aam
mov
out
rol
or
(bad)
dec
adc
xor
cli
add
pop
idiv
nop
mov
icebp
nop
pop
shl
fbstp
pop
mov
loop
xchg
or
cli
fucom
dec
and
fs
enter
pop
mov
adc
mov
das
or
pop
or
sub
addr16
mov
mov
pop
cmp
les
add
cmp
rcr
mov
out
and
or
dec
pop
std
dec
cmp
mov
sub
ret
xchg
imul
sbb
mov
popf
fnstsw
ins
(bad)
xor
out
jge
mov
ret
push
cmp
cmps
mov
out
adc
pop
jmp
stos
mov
in
xchg
jbe
pop
ja
das
jnp
(bad)
push
movs
add
mov
inc
jl
out
mov
arpl
mov
push
inc
aas
mov
popa
je
aam
mov
or
outs
scas
jae
mov
fisubr
mov
adc
out
sbb
shl
popf
mov
jmp
leave
mov
loopne
jns
cld
iret
movlhps
sub
sub
lea
mov
mov
mov
pop
add
rcl
arpl
push
out
enter
loope
push
aas
lods
sub
jmp
inc
sub
int3
push
sbb
or
dec
dec
adc
data16
hlt
cwde
sub
nop
(bad)
jge
mov
and
scas
mov
push
xchg
icebp
test
pop
call
cmp
cmps
lahf
jno
cmp
call
sub
push
cmps
stos
pop
and
sub
jae
push
popa
sysret
pop
data16
rol
push
sub
push
add
push
les
jae
inc
movs
pop
sub
xchg
arpl
cwde
add
xchg
mov
adc
imul
lahf
test
xchg
icebp
xor
xchg
out
dec
sbb
fidiv
mov
jp
pop
pop
mov
push
xor
xchg
dec
stos
and
push
jmp
loop
sub
dec
dec
mov
jg
xor
sbb
hlt
imul
ins
or
and
ja
cld
push
or
sbb
and
inc
or
in
fsub
lods
rcr
shl
dec
aad
xchg
sub
clc
add
fwait
popa
scas
sbb
xchg
xchg
sub
xlat
addr16
mov
movntps
xor
mov
mov
lds
clc
js
in
pop
jno
js
inc
mov
ret
loope
sub
xchg
shl
dec
mov
fiadd
mov
in
outs
adc
push
mov
push
sbb
pop
xchg
arpl
pop
out
dec
xchg
inc
xor
rcl
(bad)
or
das
jo
sub
mov
imul
in
dec
(bad)
ins
dec
jecxz
test
int3
inc
jno
imul
sub
pop
repnz
sbb
pop
test
iret
inc
xor
push
xlat
cmp
shl
popf
inc
push
pop
(bad)
mov
or
pop
mov
iret
fidiv
icebp
dec
cmps
repz
add
xor
add
not
in
das
out
mov
gs
ja
(bad)
in
sub
jle
dec
inc
mov
mov
dec
jmp
fisub
icebp
xchg
dec
mov
mov
pusha
dec
js
xlat
mov
iret
loopne
outs
scas
adc
add
mov
jae
test
lods
push
jb
and
push
mov
push
push
jl
lds
aaa
sbb
lea
in
add
clc
push
push
sbb
mov
enter
loope
fsubr
mov
dec
or
fs
fdiv
cmp
cdq
jae
or
loop
arpl
ja
mov
cmp
add
ins
sbb
pop
cmp
xchg
lock
out
sbb
jp
inc
mov
xchg
hlt
ins
or
mov
cmps
cmp
jne
or
fnstsw
icebp
mov
push
push
out
push
fs
mov
sub
pop
imul
outs
out
and
into
push
xchg
xor
lods
shr
repz
aas
adc
lods
lock
jecxz
mov
sub
dec
mov
xor
push
fidivr
mov
test
sbb
(bad)
clc
fwait
gs
and
mov
adc
jge
push
xchg
and
mov
test
movs
cmc
outs
idiv
mov
aam
repnz
lea
add
or
adc
int3
xchg
lods
lods
mov
aas
lds
mov
or
xchg
lock
push
mov
mov
ds
and
ss
js
pop
cs
bound
jmp
fbld
pop
mov
mov
pop
leave
ss
pop
popa
dec
mov
and
push
retf
sbb
push
jb
mov
add
jnp
or
addr16
pop
stc
adc
mov
popa
test
call
sar
add
cdq
ins
(bad)
mov
pop
ss
into
icebp
stos
enter
lea
or
pop
repnz
or
dec
or
and
dec
(bad)
scas
sub
mov
repnz
add
xchg
or
push
shl
imul
psubsw
add
push
pop
mov
jne
pop
std
mov
loope
(bad)
aaa
leave
ret
shl
jmp
ror
sub
test
stos
jno
js
call
sbb
es
inc
mov
test
aad
mov
(bad)
jmp
jp
adc
ret
cmp
inc
shr
pop
nop
jne
adc
jl
aam
aaa
xor
cmp
and
retf
and
fisttp
das
shl
xchg
mov
cdq
rcl
adc
add
sbb
test
dec
pop
jne
add
aas
and
aam
aam
cmp
scas
cli
xor
xor
mov
cmp
call
xchg
dec
test
push
(bad)
loopne
cld
cmp
mov
pusha
add
mov
cmp
je
mov
dec
rcl
loopne
adc
loope
or
pop
dec
fidiv
inc
and
push
sbb
outs
sub
popa
outs
mov
sub
inc
add
xor
dec
push
mov
cmp
jg
in
test
sbb
das
aad
movs
pop
jge
and
ja
mov
add
push
movs
xor
jg
or
inc
dec
repz
inc
cdq
cmp
pop
jbe
sbb
inc
call
rcl
jo
inc
sbb
loope
jno
nop
sbb
inc
push
and
mov
cmps
jo
out
lods
xchg
test
(bad)
stc
push
inc
retf
in
xchg
dec
xchg
push
(bad)
or
push
sahf
push
es
fnstcw
and
gs
sti
mov
frstor
mov
xchg
jne
lock
mov
jmp
push
xor
or
icebp
fnstcw
sub
cmc
lahf
outs
pop
and
pop
jnp
daa
stos
add
fs
test
in
xchg
aam
cs
in
retf
(bad)
fld
xor
pcmpeqw
outs
rcr
or
pop
and
sti
and
mov
leave
imul
and
imul
dec
out
outs
ud1
sub
sbb
mov
inc
sahf
cmp
mov
ins
mov
sub
jl
jb
icebp
push
cmp
dec
inc
call
retf
cdq
out
push
loop
sbb
repz
jb
xchg
sub
imul
ss
adc
hlt
mov
out
adc
lahf
pop
out
pop
loope
aad
mov
adc
adc
or
js
mov
inc
repnz
mov
test
dec
mov
jmp
sub
icebp
les
mov
les
test
fldcw
inc
sti
mov
aaa
jp
mov
ss
mov
jle
mov
out
call
(bad)
xchg
jb
clc
test
push
adc
int3
mov
(bad)
dec
mov
inc
ss
out
popa
sub
mov
lea
cmp
fwait
or
xchg
push
add
dec
jge
daa
mov
xor
cmp
pop
mov
mov
ja
cwde
addr16
das
add
push
shr
inc
xchg
lock
sysexit
(bad)
xor
adc
sub
or
add
iret
cmp
mov
loopne
je
sbb
sbb
aaa
ror
sub
pop
pop
or
(bad)
cli
mov
out
test
push
dec
or
cs
daa
sub
jmp
mov
jmp
(bad)
cmp
cwde
das
and
fwait
push
es
movs
repz
cld
das
mov
pop
adc
xchg
xor
xchg
xor
xchg
mov
mov
ror
xchg
inc
(bad)
(bad)
lods
repz
and
jmp
xor
sub
push
mov
add
mov
call
jmp
inc
test
push
std
sub
inc
enter
ins
jecxz
dec
mov
xchg
icebp
sub
jmp
enter
inc
sub
mov
sbb
add
cld
cwde
bound
pop
div
call
inc
sub
push
and
ins
mov
mov
imul
sub
in
mov
xchg
jmp
inc
or
push
push
jne
mov
adc
aad
stos
push
fnsave
mov
std
ret
pop
ss
icebp
rcr
into
push
sahf
jg
sar
sbb
scas
xchg
cmps
cmps
or
cmp
push
dec
not
cmps
rcr
sub
sub
popa
and
cs
call
jno
mov
mov
xchg
gs
and
jns
add
add
add
retf
call
test
mov
je
outs
pop
xor
clc
cmp
aas
lods
or
bound
push
add
mov
pop
mov
call
pop
loop
ret
(bad)
jns
loop
stc
fiadd
fst
not
xchg
add
gs
inc
shl
fwait
out
loope
xchg
enter
adc
cmp
push
sbb
or
dec
mov
push
mov
sbb
fisubr
(bad)
stos
in
bound
test
vprotq
pop
xchg
pop
mov
dec
loope
hlt
mov
sbb
and
inc
ss
je
xor
mov
jmp
push
lods
fwait
imul
and
clc
fistp
mov
dec
and
repz
mov
clc
leave
push
or
or
aad
sbb
outs
rcr
cdq
in
add
cmp
dec
retf
movs
loope
test
mov
rcl
shl
out
jle
(bad)
int
sbb
push
push
jno
push
mov
and
push
retf
pop
add
sar
xchg
enter
arpl
mov
lahf
adc
(bad)
std
xor
push
mov
ja
add
(bad)
or
jmp
repnz
add
mov
push
fwait
ret
mov
mov
hlt
mov
daa
in
dec
(bad)
sbb
outs
not
mov
stos
mov
adc
cmc
call
stos
sub
mov
add
xchg
cmp
sti
sahf
ret
iret
pop
jp
scas
push
and
sbb
daa
pop
push
jnp
fiadd
in
in
(bad)
sti
pop
or
mov
dec
inc
enter
adc
sti
int
fidiv
cmc
test
xlat
inc
sti
sbb
jmp
jbe
pop
lahf
mov
inc
push
xor
leave
cmc
xor
sbb
inc
lods
pop
and
mov
int3
cmps
aad
jge
jo
lea
(bad)
lock
pop
and
mov
add
adc
(bad)
retf
mov
mov
adc
repz
neg
ret
ret
popa
sub
jno
hlt
in
dec
retf
fcmove
mov
sub
je
lods
mov
sub
add
enter
dec
mov
nop
ins
aas
cmp
popf
sub
jmp
fsub
movs
cmp
imul
jmp
mov
and
cli
(bad)
jp
push
in
std
and
dec
mov
push
and
mov
pusha
ins
inc
add
sbb
shr
push
je
xchg
movs
dec
mov
lds
mov
and
push
sbb
in
fwait
je
add
pop
adc
movs
lods
movs
lods
add
xchg
out
idiv
mov
and
sub
ret
cmps
xor
pusha
mov
ret
retf
and
add
std
xor
imul
pop
adc
mov
adc
mov
or
ret
int3
out
in
dec
stos
mov
mov
pop
and
sub
mov
mov
inc
jb
dec
leave
scas
imul
jmp
jge
jg
push
mov
retf
mov
mov
test
data16
or
jno
cmp
cmp
cli
xchg
sti
int3
fimul
push
mov
int
fnsave
sub
ret
dec
inc
retf
aad
sahf
sub
mov
mov
xor
inc
je
mov
ja
pop
push
lds
arpl
adc
repz
loop
fsubr
pop
mov
jp
adc
mov
test
movs
jp
xchg
xchg
push
cmp
jmp
mov
push
cdq
jno
mov
cmps
mov
outs
lahf
std
in
inc
popa
cli
xchg
push
xor
xor
sub
outs
add
imul
mov
lods
int
retf
popa
lds
test
je
and
or
outs
xchg
push
jmp
jae
push
mov
(bad)
lds
std
dec
lock
jmp
mov
outs
(bad)
out
push
mov
add
push
push
push
and
mov
test
jne
sbb
fdiv
cmp
imul
cwde
mov
shr
addr16
out
jne
dec
xchg
retf
mov
mov
jne
cs
test
mov
mov
xchg
mov
aas
js
das
lock
jns
inc
int3
pop
push
inc
addr16
xor
(bad)
sub
ins
adc
(bad)
jg
push
mov
add
enter
movs
add
fwait
or
js
cli
call
adc
xchg
test
ins
sti
jmp
mov
lods
cdq
out
cmp
add
dec
js
sbb
dec
xor
movs
ret
lods
int
mov
test
and
retf
iret
(bad)
xchg
push
cmp
bound
cmp
lods
mov
mov
scas
aaa
inc
add
int
inc
(bad)
outs
repnz
in
inc
jl
scas
(bad)
sub
repz
gs
stc
loopne
and
dec
je
sub
(bad)
push
shr
in
add
or
jge
mov
add
dec
lock
fistp
xchg
(bad)
cmp
or
xor
in
iret
jns
add
cdq
mov
loop
pop
ficomp
push
emms
jp
jmp
inc
xchg
xor
add
call
or
das
and
or
into
cmps
popf
and
pop
push
xor
mov
push
xchg
push
cmp
mov
push
dec
es
jne
loop
rol
punpckhdq
push
xlat
mov
sub
fst
dec
mov
shl
ins
add
push
dec
out
(bad)
out
push
mov
je
mov
fs
or
inc
stc
mov
push
cmp
xchg
mov
repz
push
or
(bad)
push
inc
push
xor
fst
push
sbb
push
daa
out
push
xor
dec
mov
ss
cmp
jmp
cmp
push
sub
mov
pop
lods
and
cwde
aam
popa
sub
add
cmp
ficom
xchg
hlt
sbb
int
mov
add
lods
retf
hlt
into
dec
movs
in
imul
loopne
pusha
jmp
adc
cmc
ins
scas
stos
add
(bad)
lods
sbb
(bad)
jmp
stos
dec
stos
(bad)
in
mov
test
in
mov
and
cli
mul
sbb
sbb
fdiv
aam
fldcw
out
stos
in
push
imul
sbb
cs
cmp
dec
call
mov
shl
mov
and
fcmove
pop
bound
arpl
sbb
cmc
mov
stos
fadd
repz
mov
jne
or
(bad)
xor
loope
fdiv
mov
mov
xchg
or
adc
sub
adc
xchg
leave
adc
sub
int3
sbb
jmp
(bad)
int3
lock
jmp
leavew
pop
das
or
push
outs
cwde
stos
cwde
pop
loope
adc
ins
inc
cmps
jb
adc
je
push
neg
call
mov
jle
test
or
add
or
dec
sbb
adc
aad
sbb
lock
cmp
ror
cld
cmps
cli
mov
popf
fnstcw
hlt
test
sub
stos
add
pop
push
and
popa
lahf
mov
dec
inc
popf
jl
pop
add
xor
or
xor
mov
in
call
bound
repz
mov
jp
mov
and
dec
test
dec
or
or
xchg
pushf
ds
js
adc
add
loop
(bad)
xchg
dec
mov
xchg
pop
lods
cmps
outs
outs
sub
test
jmp
add
sub
lds
lods
cmp
pusha
sbb
mov
test
sub
xchg
mov
or
push
or
sub
pop
xchg
test
std
ret
jne
rcl
not
mov
sar
(bad)
xchg
test
cmp
pop
push
loope
cmp
stos
xor
sbb
adc
mov
mov
add
fwait
push
lods
iret
pushf
adc
pop
repz
rol
ds
cld
sar
je
mov
outs
leave
push
retf
shl
outs
xor
jmp
mov
stos
rol
mov
xchg
hlt
mov
or
cmps
mov
pop
sbb
mov
jo
mov
mov
xchg
movs
add
outs
cmp
icebp
or
ror
mov
adc
rcr
and
test
enter
dec
(bad)
xchg
mov
add
mov
push
sti
arpl
scas
in
adc
nop
ror
sar
mov
push
les
mov
das
push
add
jg
lahf
(bad)
mov
mov
pop
fdivrp
pop
dec
mov
mov
neg
bound
arpl
ffreep
int3
pop
xor
inc
mov
icebp
cwde
clc
add
popf
sbb
cmp
mov
mov
fnstcw
jmp
cmp
adc
jmp
repz
jns
push
dec
push
fcom
push
fst
adc
dec
psubq
shl
jb
sbb
sbb
bound
mov
sub
out
leave
imul
aas
sbb
test
or
jmp
xor
imul
xchg
pushf
(bad)
fs
(bad)
(bad)
xchg
dec
int3
int
icebp
push
push
ror
int3
fcmovne
stos
push
cmp
movs
jge
or
dec
sbb
cli
fld
jne
into
mov
call
add
cmp
sbb
push
call
mov
push
ror
clc
pop
jnp
test
push
mov
stc
cs
jmp
and
nop
push
push
lock
into
mul
xchg
dec
jo
xchg
(bad)
xchg
into
add
ret
loopne
push
repnz
sbb
mov
inc
rep
pop
pop
jae
sub
sub
pop
push
je
repnz
dec
mov
or
cs
cmp
and
sbb
cli
jmp
(bad)
stc
retf
cmps
jp
inc
jnp
cmps
ja
pop
ins
mov
retf
mov
mov
push
sub
dec
jb
cs
popf
dec
jge
dec
jne
adc
xchg
xchg
cwde
sub
push
loope
jbe
loop
sti
das
push
popa
je
sahf
and
cwde
pop
mov
loope
in
adc
enter
outs
jp
cli
and
jo
jp
arpl
mov
jg
push
pop
and
test
inc
push
mov
mov
push
cmps
loopne
shl
jnp
jle
dec
idiv
int
and
mov
or
or
or
int3
out
push
or
push
loop
push
jns
and
dec
xor
or
inc
je
mov
xor
imul
in
push
sub
jl
iret
loop
cmp
popa
push
clc
jmp
call
repnz
idiv
scas
int3
pop
not
push
mov
test
fisubr
mov
call
adc
jbe
or
xchg
xchg
jmp
pop
pop
push
xchg
es
stos
dec
jl
xor
lds
mov
sbb
out
cmp
call
ja
push
push
cmc
in
fimul
inc
adc
push
push
nop
test
shl
xor
mov
bound
mov
inc
pop
jbe
xlat
cli
fild
xchg
std
xor
outs
int
jb
out
adc
add
hlt
cmp
adc
sar
sbb
mov
xor
into
cmp
sub
cmp
jae
iret
inc
mov
jae
pop
push
repnz
push
jecxz
loopne
std
je
test
push
sub
dec
cli
pusha
int
mov
cmp
out
rcr
test
mov
xchg
xchg
mov
xchg
ret
in
cwde
mov
add
out
retf
push
and
mov
dec
fadd
lods
out
(bad)
cmp
aad
xchg
mov
sub
push
outs
dec
push
sti
shl
cmp
dec
cdq
popa
lods
mov
push
push
in
jle
push
aam
loope
cmp
jne
loopne
imul
out
jge
sub
push
neg
sub
push
loopne
cmp
fcom
js
mov
ins
mov
jne
pop
nop
ss
dec
xor
rol
fisttp
sbb
pop
retf
jae
and
jmp
mov
dec
cmp
push
inc
test
jb
imul
repnz
repnz
xor
xchg
and
fidivr
or
sahf
fsub
pop
xor
jns
cmps
sbb
gs
(bad)
inc
ins
jge
xor
cmp
pop
in
ret
loopne
push
push
inc
inc
mov
sub
jbe
les
cmps
push
jmp
xchg
adc
cmps
call
push
mov
es
ror
dec
cmp
(bad)
mov
lock
xor
push
xchg
adc
jb
rcl
into
push
fnstsw
jp
inc
data16
adc
xchg
test
out
jae
fisttp
push
loopne
or
test
int
hlt
lock
jl
pop
adc
mov
pop
sahf
fcmovnb
add
scas
push
scas
inc
std
xor
xchg
popf
and
imul
int3
inc
gs
sbb
les
out
dec
inc
repz
push
loopne
int
imul
push
test
ds
fdivr
ret
bound
sti
xchg
inc
push
pop
dec
or
mov
in
push
rcr
popa
xor
xchg
dec
int
mov
jmp
test
clc
clc
push
and
inc
mov
mov
call
test
jne
loopne
cdq
stos
add
test
mov
call
aam
xchg
fwait
iret
sar
cdq
cmp
gs
stc
sbb
shl
push
(bad)
jmp
pop
sub
add
push
aam
inc
imul
jle
mov
adc
add
or
jg
sbb
cmp
out
mov
push
lods
nop
out
cmp
cmp
into
in
inc
dec
dec
inc
dec
mov
ret
sbb
cli
mul
sbb
pop
jp
call
out
aad
dec
jmp
xchg
lods
movs
adc
pusha
(bad)
fadd
mov
mov
outs
fwait
fs
push
xor
pop
std
jmp
popa
mov
inc
jnp
dec
cmp
addr16
mov
std
nop
shr
sub
adc
pop
pop
mov
push
ins
ficomp
cmp
das
dec
imul
hlt
fistp
pop
xor
cmps
fimul
cli
les
popf
jmp
add
xchg
or
loop
jns
xor
jae
push
adc
(bad)
mov
div
inc
mov
and
imul
mov
rcr
mov
sbb
cmps
xor
dec
sub
les
jl
inc
test
sub
dec
test
push
mov
popa
je
sbb
xchg
(bad)
in
xchg
dec
or
pushf
jl
adc
xchg
xchg
pop
jne
repz
and
xor
daa
out
(bad)
jns
dec
or
into
pop
pop
inc
mov
adc
imul
push
stc
inc
ss
or
cwde
cmp
push
cmp
jmp
test
mov
xchg
addr16
push
lock
inc
icebp
mov
sub
aad
test
int3
mov
addr16
in
xchg
bound
mov
sbb
lea
fild
or
and
popa
ins
inc
in
arpl
xchg
push
mov
push
idiv
cmp
int
or
push
lods
rol
stos
mov
nop
inc
or
bound
mov
and
inc
pop
mov
xchg
shl
jb
(bad)
lods
adc
scas
and
je
(bad)
jbe
js
hlt
stos
aas
mov
out
lahf
push
cli
(bad)
(bad)
clc
push
xor
mov
or
xor
mov
scas
xor
mov
push
outs
cmps
mul
mov
or
test
cmp
in
cmp
or
push
pop
jno
mov
xor
sub
sub
adc
aad
sbb
push
cmp
(bad)
fucom
inc
dec
dec
inc
jl
stos
cmp
xor
xchg
cli
call
in
fdivr
dec
xor
out
mov
popa
inc
jle
mov
lds
xchg
mov
xlat
mov
scas
adc
sub
xchg
in
cmps
pop
cmp
retf
add
enter
push
sub
inc
pop
rcr
mov
mov
mov
repz
xchg
xchg
iret
xchg
fcom
sbb
cmp
out
idiv
int
push
sbb
fbld
inc
mov
cmp
mov
mov
gs
dec
hlt
clc
arpl
lods
jbe
mov
push
scas
leave
mov
mov
ss
jnp
sti
leave
mov
(bad)
int3
dec
dec
mov
sub
cmp
mov
popa
or
stos
mov
xchg
adc
movs
adc
(bad)
lods
mov
test
xor
jle
sbb
sub
push
shl
push
sti
and
mov
push
xchg
dec
mov
(bad)
adc
leave
daa
mov
in
cld
je
dec
adc
jbe
je
xlat
add
mov
arpl
push
std
push
loop
lods
pop
aas
push
clc
leave
jge
jnp
ins
in
(bad)
std
push
sahf
stos
mov
mov
stos
js
not
fwait
ja
xchg
jge
js
pop
adc
fucom
aad
mov
mov
stos
in
adc
cli
mov
shl
mov
xor
int
imul
pusha
mov
punpcklwd
inc
and
fcom
outs
xchg
pop
mov
add
scas
(bad)
mov
das
les
and
loopne
cmps
inc
clc
or
and
cmp
jecxz
loope
and
push
hlt
in
xchg
jmp
xor
or
or
aaa
and
test
inc
popa
imul
xor
loope
mov
(bad)
call
mov
dec
and
ficom
mul
cmp
out
into
fcmovne
pusha
shl
imul
cmp
popa
les
in
enter
es
ror
xchg
not
icebp
hlt
dec
(bad)
leave
dec
stc
hlt
xchg
mov
pop
jno
sub
les
xor
add
enter
mov
sbb
sbb
loop
mov
out
mov
jno
js
jge
les
daa
js
cmp
or
xchg
mov
cmc
push
retf
push
movs
stos
pop
push
jge
int3
out
out
cld
out
loopne
push
xor
and
mov
popa
and
int3
and
mov
mov
sub
jmp
cmp
retf
xchg
or
leave
dec
cmp
mov
xor
adc
cmps
int3
dec
test
ja
shl
sti
ror
xchg
xchg
pop
js
push
push
cmp
cmps
cmp
(bad)
loop
pop
or
mov
mov
sar
test
xor
xchg
test
or
jo
aad
sbb
gs
inc
iret
cmps
repnz
ds
cmp
sar
gs
neg
cmp
in
push
sub
loop
lahf
stc
popf
and
(bad)
push
(bad)
out
fs
pop
int3
mov
bndcu
cmp
or
dec
push
loope
int3
fsubr
pop
add
xor
call
inc
mov
or
loopne
mov
cmp
movs
(bad)
adc
dec
sub
repnz
repnz
stc
dec
xchg
mov
sbb
das
adc
repnz
aad
sub
dec
sar
jp
scas
mov
xor
and
dec
xchg
(bad)
inc
retf
xor
inc
cmp
lahf
lds
jb
cmp
fstp
or
je
out
jmp
aad
xchg
pop
xor
in
add
pop
pop
loop
xor
mov
mov
mov
sub
sbb
dec
jb
clc
mov
jecxz
inc
pop
dec
repnz
push
sub
pop
and
call
add
fwait
dec
lea
addr16
sub
xchg
(bad)
sub
and
ficomp
and
mov
shl
adc
jno
add
xchg
dec
mov
or
mov
sub
xchg
push
adc
jge
pop
mov
cld
fist
(bad)
pop
cmp
fst
adc
mov
jmp
cmp
daa
aam
push
cmp
or
add
out
mov
sub
lea
or
mov
push
mov
rol
(bad)
pop
aas
push
fsub
add
sbb
fld
bound
mov
movs
mov
lods
jo
(bad)
int
fcomp
pusha
iret
pop
mov
data16
out
sahf
push
in
sub
div
pusha
and
pop
mul
movs
mov
inc
cmp
pop
aam
arpl
push
fs
inc
gs
fiadd
and
cld
inc
jne
mov
fdivrp
mov
(bad)
jmp
test
fs
cld
sub
fidiv
and
pop
mov
and
gs
and
pop
mov
jnp
cmp
xor
and
scas
xor
imul
mov
adc
or
ret
sti
lods
inc
pop
jmp
lods
mov
mov
sbb
jo
outs
(bad)
or
dec
xchg
pusha
pop
imul
dec
shl
pop
clc
pushf
dec
popa
or
pop
call
ins
sub
xor
pusha
xor
test
cli
sti
daa
xor
stos
outs
inc
fcom
stos
pop
cmp
and
adc
add
bound
mov
je
jle
test
mov
call
or
in
push
xor
(bad)
mov
add
popf
pop
xchg
pop
pop
mov
sub
les
dec
test
xchg
jecxz
mov
mov
and
or
ret
cmp
and
mov
xchg
mov
addr16
mov
add
or
and
out
icebp
sbb
jb
movs
inc
ret
jo
(bad)
jmp
gs
xchg
stos
mov
cmp
sahf
push
cmpps
xchg
mov
ret
mov
popa
mov
call
sbb
int
inc
fsub
pop
sub
jae
mov
push
repz
test
mov
push
add
test
cmp
inc
pop
lods
or
out
call
iret
add
(bad)
xor
mov
out
xchg
push
mov
inc
or
arpl
xor
xchg
mov
mov
(bad)
out
pop
loop
mov
sub
push
pushf
scas
frstor
test
mov
sub
bound
pop
in
test
mov
jmp
sahf
cmp
fbstp
push
popf
movs
pop
add
sub
mov
mov
in
or
push
push
inc
lahf
sbb
fdivr
and
fsubr
call
(bad)
mov
lds
push
or
mov
ins
push
xchg
js
fist
movs
inc
retf
mov
sub
push
mov
mov
shr
dec
and
inc
int3
jno
inc
sar
loopne
pop
ss
jl
and
jns
xchg
xchg
jmp
pop
xchg
pusha
rol
cmp
mov
inc
push
(bad)
add
lods
repnz
cmc
lock
mov
fwait
push
push
and
rol
jmp
mov
ds
inc
(bad)
shr
sub
arpl
or
sti
in
movs
pop
std
sub
inc
sbb
ficom
test
fmulp
push
fdivr
shl
push
imul
rcr
jecxz
xchg
pop
retf
adc
test
pop
mov
mov
or
movs
jae
push
pop
mov
mov
push
stc
div
sbb
xchg
add
ins
pop
mov
sub
fistp
in
jmp
dec
adc
push
mov
pop
push
daa
shl
xor
mov
stc
rol
adc
jmp
ins
out
xchg
dec
cwde
das
xor
out
sbb
fild
or
push
mov
sub
mov
push
cwde
add
cmp
adc
sub
cmp
int3
adc
xor
pop
xchg
sbb
aaa
pusha
out
ss
jne
ins
sti
jo
and
pop
cmp
jns
mov
or
mov
push
enter
jp
pop
mov
add
lods
xchg
in
pop
xor
ficom
xchg
outs
shl
xlat
jae
pop
push
inc
fisttp
xor
rcl
sbb
pop
mov
xchg
xchg
fdivrp
arpl
mov
jae
lea
cmp
or
gs
inc
lods
cmc
push
mov
pop
stos
ja
xchg
pusha
das
mov
or
scas
sbb
ror
sub
mov
test
aam
pushf
cmps
test
dec
sbb
dec
sbb
xor
jl
xor
mov
xlat
push
dec
ja
iret
push
cmp
(bad)
push
xchg
inc
and
aad
and
xor
fist
shl
dec
dec
into
mov
test
mov
lss
xor
dec
clc
pop
jne
mov
jl
mov
daa
jmp
mov
(bad)
stos
imul
repnz
sahf
sub
test
fcmovne
add
out
add
xchg
push
pop
cmps
test
dec
or
jge
inc
mov
xor
clc
jl
in
fwait
jbe
loopne
and
jbe
ins
mov
retf
es
inc
add
test
jl
retf
adc
aaa
mov
push
not
rol
std
lea
lock
mov
jns
rcl
retf
std
push
mov
popa
xor
inc
jo
into
cmp
imul
mov
out
mov
bound
in
jae
and
mov
pop
dec
sbb
sbb
fisub
cmps
inc
cli
(bad)
out
test
cmps
cmp
add
sbb
setne
pop
popf
leave
sahf
pop
rcl
aaa
or
add
and
aam
pusha
aaa
lds
push
mov
cmp
push
mov
in
mov
push
and
sbb
stc
stos
in
enter
dec
mov
clc
xor
mov
jge
and
sub
idiv
scas
adc
mov
fstp
inc
rcl
inc
ret
cwde
aas
xchg
push
mov
test
mov
mov
mov
test
loopne
xor
mov
es
test
sbb
or
test
loop
adc
or
mov
je
out
xchg
lds
cmps
fwait
ret
xchg
jnp
dec
(bad)
(bad)
mov
xlat
leave
xchg
loop
sbb
lock
ja
or
mov
push
cwde
pop
iret
(bad)
xor
cmp
jmp
int
and
jmp
ins
cmp
daa
or
es
mul
xchg
mov
into
add
int3
out
push
adc
push
inc
fsubp
or
cmp
loop
pop
call
out
pusha
cmp
or
add
dec
dec
(bad)
adc
mov
mov
xchg
in
dec
aad
jbe
shr
or
mov
and
jecxz
or
lds
call
enter
xchg
jmp
loope
test
fstp
(bad)
and
sbb
jp
jno
cmp
sub
data16
cmp
dec
dec
mov
xor
es
cwde
test
push
repnz
fdiv
or
xchg
enter
dec
pushf
dec
data16
rol
sub
push
mov
xor
xlat
xor
fcomp
repnz
das
leave
or
fsubr
aad
push
ror
dec
inc
retf
retf
(bad)
ficomp
sub
lock
js
push
sbb
sbb
and
xchg
bnd
inc
lds
xor
mov
sub
sub
js
sub
mov
jno
call
scas
xchg
stos
mov
movs
xchg
jns
test
push
call
push
jle
adc
mov
cmp
sbb
mov
cli
call
jo
pop
stos
fadd
add
sub
shl
adc
pop
or
inc
jb
or
ja
cmp
fcom
add
nop
sub
int
(bad)
adc
ds
sbb
dec
jl
pusha
dec
push
xchg
dec
ins
sub
and
xor
sbb
aam
jge
push
and
stos
in
push
ror
test
jl
lahf
test
scas
mov
addr16
mov
aam
and
(bad)
out
(bad)
popf
mov
ins
aam
pushf
js
popf
test
and
test
pop
daa
jge
test
or
sbb
and
jmp
icebp
push
icebp
es
int3
mov
popa
fstp
(bad)
je
add
cli
in
push
sub
ret
mov
sbb
push
sub
push
repz
sbb
sti
test
loopne
dec
jge
sub
xchg
and
fsubr
push
jge
cld
icebp
enter
lahf
enter
fisttp
dec
stc
xchg
scas
adc
daa
cmp
shr
mov
pop
clc
xchg
pop
mov
mov
fs
stc
xchg
retf
hlt
mov
sub
and
sbb
xchg
xchg
mov
pop
add
retf
sub
into
mov
sub
mov
dec
repz
cli
mov
stc
and
dec
pusha
(bad)
iret
popa
into
rol
xchg
repz
mov
mov
(bad)
mov
stc
push
aaa
xchg
adc
dec
call
lods
sar
sbb
lahf
stc
cmp
mov
mov
imul
cmp
and
rcr
push
test
cmps
push
mov
(bad)
xchg
aad
cwde
test
cmp
jne
popf
sahf
and
sbb
jp
je
imul
mov
pop
mov
shl
bound
iret
cmp
out
sbb
(bad)
movs
loopne
xor
lods
popa
scas
lock
js
mov
retf
sbb
adc
push
repz
jl
(bad)
jmp
jae
inc
sbb
ficomp
pusha
pop
xchg
mov
mov
lock
or
and
sbb
push
(bad)
idiv
and
and
xrelease
stc
jle
mov
inc
sbb
lock
jp
xor
xor
(bad)
out
sub
mov
adc
jns
sti
push
mov
movs
mov
add
fild
out
mov
(bad)
std
sbb
adc
mov
bound
movs
inc
jbe
pop
ins
pop
lods
shr
push
dec
jno
(bad)
sub
cmps
stc
jbe
iret
adc
pop
push
stos
push
loope
gs
ret
fsub
sub
jge
push
jl
fstp
lahf
xor
or
sbb
cmps
mov
jl
pop
dec
jno
push
in
xchg
add
mov
lods
scas
ror
adc
dec
aad
and
mov
jae
mov
mov
call
test
push
add
loope
mov
outs
cmc
add
sub
mov
add
movs
sbb
lldt
idiv
sub
rcl
mov
dec
pop
mov
lahf
mov
inc
mov
sub
push
test
imul
in
or
sbb
and
jge
push
sub
xor
in
add
inc
sbb
test
cli
cmc
xor
dec
inc
or
mov
push
push
jne
xchg
pop
(bad)
hlt
pop
stos
ftst
push
inc
and
ficom
cmp
push
rcl
mov
fmul
std
pop
icebp
loope
or
dec
ins
fnstcw
push
inc
pop
fimul
jb
popf
imul
push
test
sub
jmp
push
fidivr
stos
(bad)
popa
leave
addr16
adc
cld
xchg
(bad)
aad
rol
dec
aad
daa
jge
xor
int3
bound
dec
add
imul
mov
ins
loope
mov
inc
sub
leave
push
test
xor
clc
adc
dec
fdiv
xchg
push
dec
jnp
outs
scas
scas
fst
imul
das
in
stc
sub
mov
arpl
dec
push
ins
cmp
movs
popa
(bad)
(bad)
jl
in
in
add
ins
lahf
cmp
push
ds
and
lahf
sub
lds
jns
ins
leave
mov
and
jno
scas
mov
sub
push
out
ss
mov
pop
mov
enter
sub
inc
(bad)
and
adc
add
out
jmp
fistp
ins
outs
jmp
xchg
inc
stc
es
aaa
mov
hlt
jmp
mov
xor
(bad)
bound
xchg
jmp
mov
adc
xor
sbb
outs
lods
mov
push
adc
loopne
stos
mov
cmp
mov
push
sub
mov
cmps
jns
jns
repnz
loop
jecxz
test
inc
sahf
loope
fmul
in
inc
test
mov
sbb
nop
mov
addr16
mov
add
lahf
pop
push
mov
mov
pop
js
out
pop
add
xor
and
add
cwde
das
pop
sub
cmps
leave
xlat
or
mov
cmc
movs
pop
jmp
mov
mov
xchg
and
cmp
push
pop
mov
or
push
stos
shl
mov
es
ret
sub
dec
push
xor
sbb
jge
inc
rol
push
jns
ins
shl
lds
adc
pop
mov
mov
mov
ret
popf
and
es
add
loop
pushf
repnz
rcr
dec
jb
pop
cli
adc
push
loope
and
cdq
sbb
fldcw
scas
adc
(bad)
push
div
ins
fimul
fiadd
mov
inc
test
or
scas
pop
dec
mov
mov
das
pop
jmp
sub
pop
jecxz
push
pmullw
adc
fcmovne
scas
aad
cmp
ja
inc
jmp
adc
ret
push
(bad)
dec
xchg
lock
dec
xchg
mov
add
xor
dec
mov
inc
movs
mov
inc
call
mov
mov
dec
cdq
push
sub
(bad)
aad
push
in
sar
mov
add
cmp
shr
sub
gs
adc
mov
(bad)
pop
or
fwait
mov
xor
sbb
mov
adc
adc
jmp
xchg
hlt
ds
loop
sbb
push
push
and
rcr
jp
mov
or
data16
add
inc
mov
movs
in
mov
out
imul
mov
push
add
add
dec
cld
xchg
bound
cmp
pushf
add
icebp
pop
pusha
scas
adc
push
les
xor
xor
mov
retf
cmps
cmp
xor
xchg
adc
or
cmp
iret
xor
xchg
jne
call
(bad)
out
sbb
jmp
adc
xor
and
stos
test
test
cmp
clc
sub
cwde
and
(bad)
push
dec
fld
mov
mov
hlt
pop
mov
loopne
pop
xchg
cmc
pop
sub
push
sub
dec
imul
in
mov
or
(bad)
push
ins
repnz
jmp
xor
and
mov
mov
sub
ret
imul
loopne
inc
dec
xchg
cmp
fsub
push
iret
push
xchg
ret
mov
fisub
mov
sub
leave
cdq
scas
(bad)
jmp
stos
adc
inc
dec
cmp
out
push
xor
hlt
jle
push
or
adc
xchg
pop
push
ins
retf
inc
nop
and
stc
inc
loopne
mov
mov
xchg
test
or
in
adc
sbb
pop
adc
loop
or
jge
sbb
cmps
sub
mov
or
ja
pop
dec
and
or
add
mov
pop
out
icebp
push
inc
call
fwait
pushf
dec
xchg
js
mov
lods
test
(bad)
mov
mov
cmp
enter
in
sti
push
dec
mov
in
or
pop
inc
mov
inc
(bad)
test
pop
push
fimul
adc
pop
sahf
iret
mov
fadd
mov
jge
in
mov
std
push
leave
add
fisttp
movs
cmp
xor
mov
or
cmc
adc
popa
ret
stc
jne
jg
add
xor
fs
jp
gs
jg
lahf
add
xchg
lds
arpl
out
out
xchg
mov
loopne
xchg
xchg
push
outs
inc
inc
fsubr
jge
stos
scas
iret
mov
sti
data16
mov
xchg
cmp
push
xchg
push
fstp
xchg
loope
inc
dec
fwait
pusha
xchg
jne
jnp
sub
pop
cld
and
not
mov
pusha
movs
sbb
shl
sti
dec
xchg
in
retf
jo
add
test
lea
outs
push
xor
out
sub
jmp
int
mov
jnp
dec
push
std
and
pop
shr
cmps
movs
pop
popa
into
(bad)
scas
js
mov
xchg
mov
lods
mov
fsubr
into
jmp
popa
fcom
cs
call
test
jmp
ret
lods
ins
test
cmp
xchg
int
mov
iret
cmp
repz
neg
popf
mov
(bad)
mov
mov
pop
enter
cmp
xor
iret
xchg
ja
pop
sbb
cli
ret
xchg
(bad)
mov
loopne
dec
xchg
out
mov
fidiv
jle
(bad)
pop
xchg
pop
pop
movs
add
xor
aaa
and
test
xor
out
pop
icebp
mov
sbb
ins
mov
(bad)
cwde
daa
mov
sub
push
aam
cmp
adc
rcr
in
cmp
pop
in
bound
add
lods
jle
xchg
das
sbb
dec
(bad)
aad
mov
out
jl
aaa
xchg
jo
xchg
ins
push
pop
dec
dec
out
dec
xor
jne
in
icebp
jp
loop
add
popf
xor
pusha
sub
or
js
test
int3
popf
xchg
loop
xchg
mov
leave
cld
mov
adc
sbb
pop
shr
data16
push
or
cmp
xchg
xchg
push
sar
dec
adc
lods
imul
idiv
retf
add
jl
push
push
adc
fadd
add
xor
das
xchg
icebp
fdiv
jle
sub
cmc
and
xchg
(bad)
test
mov
cmp
scas
add
inc
aad
cmp
and
rcl
ins
mov
inc
push
fld
stos
pop
or
add
(bad)
loope
mov
mov
ja
hlt
leave
jl
shr
and
lock
dec
daa
gs
ja
scas
retf
cmc
lea
jae
out
dec
jecxz
jbe
fsubr
outs
shl
sub
mov
mov
pop
jno
sbb
(bad)
icebp
js
das
inc
inc
mov
fld
mov
aas
out
jmp
xchg
pop
scas
dec
cmp
pop
stos
pop
mov
fwait
in
pop
pushf
pop
cmps
scas
cmp
cdq
xor
sti
sbb
in
cmps
aad
pushf
pop
ins
mov
idiv
dec
mov
ins
mov
cs
sub
mov
or
mov
sbb
retf
jecxz
xchg
aam
dec
ss
or
sub
das
inc
and
jns
sbb
adc
leave
lock
cs
sub
xor
out
sti
add
push
test
call
push
mov
xchg
sbb
in
pop
inc
dec
lock
dec
jns
jae
cs
rcl
fwait
out
adc
pop
pop
jne
fdivr
(bad)
(bad)
int3
and
loop
push
fbld
push
sbb
stos
push
mov
test
inc
add
outs
add
or
adc
lds
push
popa
inc
daa
push
sub
scas
cmp
arpl
cmc
aas
pop
js
push
and
lds
cmp
js
repz
sbb
(bad)
cmp
or
stc
in
inc
mov
mov
sbb
scas
pop
fimul
mov
ins
in
add
or
imul
stos
sub
cmps
popf
push
jl
addr16
jmp
sbb
ficomp
das
mov
pop
push
mov
(bad)
ret
mov
jl
sbb
push
jmp
das
pop
sub
or
pop
loopne
pushf
test
mov
es
jo
aas
mov
loope
(bad)
stc
add
inc
das
imul
mov
(bad)
mov
push
mov
push
in
sub
movs
sbb
lods
mov
ins
clc
es
and
push
dec
rcr
loope
pop
jbe
mov
fwait
jns
xchg
ins
ror
test
mov
cmps
in
clc
pop
xchg
sbb
cmp
xchg
in
lods
xchg
into
in
xchg
ret
arpl
sti
sub
jge
cmp
mov
hlt
fsub
stc
leave
push
mov
sbb
sub
loop
imul
int
iret
pop
dec
pop
(bad)
and
xor
ja
cmp
push
and
call
sub
fs
xlat
adc
pop
sub
iret
out
hlt
aaa
adc
mov
ret
sbb
lods
and
push
push
add
pop
scas
cmp
das
jne
push
clc
loope
xchg
cmp
adc
mov
je
(bad)
dec
movs
adc
shr
sub
mov
ins
out
inc
jbe
adc
push
pop
pop
fimul
inc
and
sub
add
das
neg
fwait
pop
mov
(bad)
mov
push
fst
adc
test
jae
fild
into
sbb
mov
lahf
lods
jb
add
or
out
(bad)
es
jns
pop
call
bound
xchg
mov
outs
sbb
cmp
mov
pusha
fdiv
shr
dec
pop
into
xor
sub
arpl
xchg
push
jle
pushf
sub
xchg
mov
mov
sti
outs
xor
jp
out
daa
loopne
in
xchg
repnz
sbb
cmp
cmp
pushf
cmp
dec
inc
(bad)
stos
cmp
inc
lods
fiadd
mov
jg
cmps
stos
outs
and
mov
jae
cmp
arpl
push
cmp
mov
lods
mov
cld
xor
fdivr
xor
addr16
xor
cmp
inc
push
out
sub
adc
in
clc
mov
mov
add
mov
add
dec
loop
call
or
loopne
lods
inc
and
inc
loope
cmps
push
mov
mov
loop
mov
cmp
jle
and
inc
lds
jnp
mov
fsub
cmp
shl
mov
fisubr
push
or
mov
vmaxss
loope
mov
(bad)
(bad)
mov
in
jmp
sub
test
jge
pop
xchg
inc
ins
xchg
pop
or
cmc
hlt
jno
cmp
outs
jge
xchg
je
mov
icebp
pop
xchg
mov
cmp
xor
sub
enter
sbb
loopne
fcmovbe
ds
or
aas
cdq
cli
mov
sub
(bad)
pop
push
jb
fnstsw
fist
add
not
inc
imul
xchg
and
or
shl
loope
pusha
fs
sti
ror
xor
mov
pop
pop
mov
sbb
ret
(bad)
cs
fadd
popa
mov
mov
rol
and
cmp
shl
fidivr
ret
pop
xchg
inc
jno
cdq
movs
mov
jmp
push
inc
cdq
nop
mov
cld
int
(bad)
cli
mul
mov
in
fstp
push
xor
adc
cmp
fldcw
push
add
lock
xor
xchg
icebp
push
stc
and
dec
mov
adc
jmp
in
repz
mov
scas
mov
outs
stc
mov
lahf
adc
xor
dec
cmp
ja
ds
fnstenv
cmp
xchg
into
push
push
and
daa
pusha
xor
sub
cdq
shr
jge
mov
int
adc
shl
aas
jae
cmps
daa
dec
mov
outs
cmp
call
cmc
push
data16
rol
adc
inc
pop
mov
xor
dec
mul
shl
add
(bad)
xor
pop
addr16
shr
and
sbb
in
jns
mov
sub
and
push
dec
pushf
push
fisub
arpl
sbb
sbb
xlat
mov
imul
test
mov
sbb
data16
xor
push
nop
mov
call
(bad)
jp
sbb
out
popa
es
add
sar
mov
mov
inc
popf
pop
in
movs
cmp
dec
push
jl
push
(bad)
cmps
idiv
aas
add
ret
je
sbb
push
mov
mov
mov
shl
mov
ja
jbe
aam
mov
cmp
or
xor
cli
jb
mov
pusha
cmc
jne
out
adc
pop
ja
(bad)
dec
pop
and
sbb
(bad)
fmul
das
lods
and
out
inc
test
lea
or
mov
push
out
inc
pusha
pop
cdq
jbe
jno
mov
xchg
rcr
repz
adc
jp
xchg
add
(bad)
adc
cmp
and
jo
leave
imul
and
mov
in
sbb
xor
loope
inc
iret
and
popa
jmp
sbb
mov
dec
mov
lea
cmps
or
push
xchg
arpl
ds
add
push
stos
lods
mov
xchg
call
lahf
js
std
(bad)
int
fild
nop
dec
call
jno
sbb
int
mov
pop
out
out
add
mov
out
int
xor
add
shl
mov
inc
shl
fmul
test
add
adc
inc
mov
neg
xor
pop
aas
xlat
jg
loopne
ins
out
mov
xchg
cmp
lahf
les
std
cli
ins
adc
pop
jae
or
int3
sub
cmps
add
out
xchg
sbb
mov
mov
test
gs
mov
fnstenvw
mov
loop
and
(bad)
sub
and
or
test
add
ret
add
cwde
or
daa
fwait
and
int3
jmp
sahf
or
jmp
in
scas
out
cmp
in
nop
add
out
dec
lea
inc
movs
mov
mov
(bad)
fadd
and
xor
jmp
aaa
frstor
push
jge
mov
adc
lods
cmp
mov
mov
dec
and
adc
int3
hlt
inc
(bad)
mov
cmp
outs
(bad)
push
das
je
mov
jb
jle
inc
leave
int
call
push
push
(bad)
aam
enter
jmp
mov
sub
mov
or
or
(bad)
(bad)
das
sub
lods
sbb
std
mov
add
and
push
jecxz
xchg
fwait
hlt
sbb
(bad)
xlat
vmlaunch
adc
xlat
fnstcw
(bad)
test
push
jno
rcr
aas
or
mov
out
mov
dec
lock
push
push
sbb
mov
sar
xchg
xchg
xor
cmp
sahf
push
loop
adc
call
or
sbb
loope
xor
sahf
nop
xor
div
int
mov
jno
ss
fiadd
loop
inc
mov
rcr
(bad)
push
push
lods
jbe
ins
xchg
inc
and
icebp
fidiv
jp
test
sti
rol
test
mov
push
(bad)
ds
jae
aaa
sub
push
cdq
scas
stos
int
dec
hlt
inc
aaa
jns
jae
mov
mov
aam
cld
call
mov
adc
jp
jo
add
mov
cmp
xchg
in
sbb
aas
dec
inc
sub
cli
or
js
xor
lea
sbb
cmp
cli
aam
mov
and
sbb
adc
inc
stos
or
lods
dec
jecxz
(bad)
(bad)
lock
adc
retf
pushf
pop
lds
cdq
pop
sub
dec
popf
shl
dec
pop
cmp
fistp
pop
pop
mov
dec
jbe
push
sub
arpl
cs
adc
es
xchg
sbb
lods
and
inc
enter
xor
popa
ins
xor
jge
rcr
repz
sbb
cmps
bound
add
retf
mov
sar
pop
or
push
xor
gs
push
or
pop
loopne
ret
mov
movs
mov
retf
adc
clc
add
pushf
mov
sar
es
cmps
cmp
mov
jecxz
add
or
pusha
mov
repnz
sbb
mov
jp
inc
jnp
add
aaa
(bad)
mov
cdq
pop
add
loop
and
cmc
neg
dec
inc
clc
jmp
mov
and
hlt
adc
lea
sub
push
(bad)
push
or
add
push
std
xor
rcl
popa
mov
popf
mov
dec
add
out
mov
test
adc
push
scas
iret
push
and
inc
push
pop
loopne
sub
mov
out
adc
xchg
xor
loope
stos
xchg
test
add
fsubr
pop
mov
push
ja
dec
xchg
in
into
cwde
imul
cmps
js
dec
add
mov
dec
mov
xor
rcl
sub
ficom
js
nop
ror
add
adc
outs
xchg
fimul
push
repz
iret
pop
cmp
test
sub
push
xchg
test
cmp
jmp
out
test
shr
push
adc
fdiv
repz
cld
or
dec
push
std
sub
xchg
aam
mov
pop
repnz
or
mov
jle
lods
pop
sub
ret
inc
inc
mov
adc
jecxz
stos
pop
je
cli
mov
int3
es
cmp
or
sbb
cmp
cli
sub
or
scas
mov
sub
in
fld
imul
fdivr
loope
scas
cld
jb
scas
add
ins
mov
cmp
jg
jbe
ins
(bad)
imul
shl
mov
jg
lea
and
xor
data16
fistp
call
and
loop
movs
jmp
js
xor
imul
mov
pusha
jns
or
mov
cmps
movs
ret
mov
int3
push
aam
ret
sti
(bad)
pop
cmc
push
lods
ret
xchg
stos
jecxz
and
xchg
mov
test
inc
sahf
in
inc
or
pusha
ins
movs
pop
xor
push
adc
push
add
xor
imul
push
pop
(bad)
pop
daa
inc
push
scas
ret
addr16
jmp
push
mov
jo
inc
dec
sbb
adc
call
and
add
int
les
outs
mov
sbb
dec
xchg
inc
pop
adc
cmps
daa
inc
xlat
pushf
cmc
ins
jae
or
iret
cmp
out
and
scas
retf
test
imul
inc
cmc
mov
cmps
and
cmp
outs
retf
ss
jecxz
pop
push
std
push
push
stos
push
push
xor
pop
xor
outs
cmp
mov
jmp
and
rol
test
pushf
and
cmp
mov
lds
scas
xor
(bad)
jns
push
cmps
cmp
xchg
jge
and
mov
inc
cmp
xchg
aad
jecxz
push
(bad)
ss
xchg
cmp
mov
clc
cmp
dec
ja
pop
xchg
pop
pop
xlat
es
pop
and
adc
cmp
mov
stos
push
out
dec
jge
fbstp
(bad)
sub
int
mov
mov
xchg
pop
add
jns
and
add
mov
stos
push
aad
cmp
pushf
xor
dec
out
iret
dec
aaa
imul
jb
hlt
ror
pop
out
cdq
(bad)
addr16
ret
je
shr
adc
pop
mov
addr16
idiv
jg
pop
in
cli
push
daa
jbe
sbb
xor
icebp
daa
nop
mov
jmp
or
popa
and
fidiv
prefetch
or
cmp
xor
fnsave
mov
dec
repnz
(bad)
pop
jb
stos
cwde
out
push
call
jno
cmc
(bad)
shl
psubd
mov
add
xchg
sahf
pusha
scas
and
mov
mov
js
int
hlt
out
out
push
(bad)
or
aaa
je
call
mov
neg
stc
stc
imul
inc
mov
(bad)
lock
inc
imul
out
cmp
push
nop
div
dec
rcr
jp
aad
call
in
call
mov
inc
out
retf
(bad)
test
sbb
xchg
adc
das
cmc
xchg
mov
outs
shr
les
loopne
cmp
int
jne
dec
adc
and
cmp
xor
cmps
loop
lods
out
push
lock
sahf
mov
and
adc
fisub
daa
aad
xor
mov
xor
mov
out
arpl
push
jne
mov
cmp
sub
add
push
inc
mov
sub
gs
adc
mov
cmps
out
and
cmp
sbb
test
mov
sti
pop
(bad)
aas
in
lahf
xchg
sub
cwde
jne
call
cli
add
mov
out
shr
sub
scas
test
sbb
loop
xor
sbb
mov
lods
test
aam
enter
jae
inc
push
cld
or
mov
mov
pop
cmp
inc
sub
adc
mov
lods
jecxz
sub
scas
pop
cmp
rol
inc
js
out
jl
les
sbb
jo
sub
push
inc
jmp
mov
mov
aas
out
mov
mov
daa
add
ss
frstor
outs
inc
nop
jmp
xchg
les
dec
call
xchg
push
xor
dec
mov
dec
mul
pop
adc
push
cmp
cmc
cmp
aas
sar
add
out
inc
push
gs
ss
and
add
pop
mov
in
imul
dec
clc
adc
daa
mov
leave
mov
adc
ja
sbb
movs
adc
sub
mov
pop
aaa
xor
or
inc
sbb
pop
cmp
add
rcl
jmp
dec
mov
call
jns
bound
cmp
jno
test
(bad)
in
sbb
fneni(8087
xor
nop
mov
push
jnp
and
in
adc
dec
int3
pop
aas
ja
mov
add
cwde
rcl
fnstcw
jmp
inc
aam
cmps
jge
retf
add
sbb
lea
mov
loopne
test
pop
mov
lds
and
outs
test
adc
push
out
inc
jmp
or
fild
push
sbb
jmp
cmp
pop
ret
aas
xlat
xchg
pop
xor
mov
test
pop
(bad)
and
xlat
(bad)
cmc
je
add
jecxz
cli
lock
or
test
adc
mov
or
push
inc
test
pushf
fiadd
cld
mov
popf
mov
pop
sub
mov
inc
and
out
cli
dec
xor
call
mov
clc
pusha
aam
adc
je
adc
out
hlt
cmps
aas
inc
fs
bound
mov
sub
jne
inc
inc
pop
sbb
in
fstp
or
mov
push
adc
outs
xchg
jle
call
add
or
cmp
add
into
xchg
retf
sbb
je
jl
fmul
movs
(bad)
stc
stos
mov
pop
and
scas
jle
das
mov
rcl
push
mov
push
and
fist
and
ror
(bad)
stc
mov
sub
ins
mov
mov
std
test
xchg
movs
fcmovnbe
jle
shl
out
mov
sbb
push
xchg
xor
repnz
push
inc
fiadd
xor
and
out
jmp
ret
inc
je
sbb
mov
cs
daa
xor
gs
xor
daa
adc
lock
aas
cmps
push
sbb
pop
out
cmp
rcl
jg
mov
jbe
ror
adc
inc
in
scas
pop
jle
push
pop
sub
dec
dec
mov
loope
adc
(bad)
mov
arpl
ins
mov
cmp
mov
fcom
fcom
clc
push
icebp
push
xchg
and
cmp
in
xchg
loop
aas
sbb
cwde
mov
pop
jp
outs
mov
imul
nop
jmp
adc
nop
mov
add
pop
jl
lock
sub
cdq
stos
arpl
mov
aad
sbb
mov
loope
jo
fld
inc
cdq
imul
das
mov
mov
push
imul
pop
push
hlt
push
stos
xchg
ret
pop
jge
dec
inc
push
and
sub
dec
pop
imul
stc
jmp
iret
fidiv
loop
bound
and
mov
leave
inc
sar
pop
clc
sbb
aaa
std
sbb
icebp
pop
outs
out
lock
push
pop
push
pop
ins
test
shl
mov
push
inc
ss
inc
loopne
xor
mov
leave
ds
and
jb
lods
sahf
push
dec
and
std
icebp
cmova
mov
shl
sahf
jns
and
mov
mov
cmps
jbe
lods
aad
mov
jbe
cmc
jo
mov
lods
scas
in
test
inc
pop
scas
jne
pop
or
stos
fld
cdq
sub
mov
pop
sahf
cmc
mov
adc
jae
dec
pop
sbb
(bad)
lock
shl
int
(bad)
ja
inc
cmp
pusha
mov
stos
sbb
push
mov
or
cmps
mov
add
xor
sub
or
fcmovb
test
outs
das
push
mov
outs
adc
(bad)
fld
and
or
jle
jae
fnstsw
ret
stos
fmul
or
out
daa
int3
pop
and
inc
outs
call
mov
stc
inc
adc
lahf
sub
dec
fwait
xor
xchg
and
pop
xor
lods
imul
cmp
pop
sbb
outs
cmps
xchg
sub
inc
jl
sub
mov
cmp
sub
sbb
sti
push
fld
aad
pop
mov
aaa
cmp
iret
addr16
or
loopne
ins
sti
mov
inc
out
fdivr
(bad)
mov
sbb
idiv
sbb
in
jo
std
xchg
cmp
xchg
push
pop
xchg
iret
test
fbstp
push
out
ret
sub
jmp
sbb
(bad)
sbb
pop
jmp
xchg
inc
sbb
shl
jns
popa
popfw
ins
push
cwde
inc
hlt
js
push
call
cmp
aas
dec
loop
mov
inc
cmc
jnp
jb
(bad)
mov
adc
xor
lea
mov
gs
daa
mov
dec
cmp
xor
enter
jge
(bad)
lods
mov
push
cmp
(bad)
pop
fisub
dec
into
push
xor
jmp
je
xor
add
out
(bad)
lahf
sbb
inc
or
jp
sbb
ret
call
cmp
mov
xchg
lahf
(bad)
add
out
loop
ret
clc
hlt
jno
retf
adc
not
les
push
out
jl
pop
fisttp
sub
push
add
fcmovb
lahf
mov
(bad)
or
popa
adc
inc
loopne
lds
ds
movs
dec
push
push
push
push
repz
mul
cmp
lods
xchg
push
cmc
aam
cmp
inc
mov
aad
sbb
(bad)
retf
cmp
popf
jge
xchg
icebp
jg
and
daa
mov
lea
adc
xor
lods
mov
shr
and
push
movs
push
mov
stos
data16
repz
test
mov
test
(bad)
movs
sub
lahf
retf
cmp
into
lahf
dec
scas
xor
dec
ror
push
in
dec
fsub
gs
mov
xor
cs
mov
jae
jle
inc
add
or
mov
jmp
jbe
inc
pop
jmp
in
pusha
iret
sub
cmovae
fstp
mov
push
lea
sbb
jge
jl
cli
push
push
fsub
(bad)
(bad)
jbe
jmp
sub
daa
adc
add
xchg
or
xchg
dec
xchg
jg
data16
repnz
mov
cmp
xor
sbb
add
stc
and
mov
ficomp
mov
in
and
daa
pusha
jecxz
ins
xor
xor
or
inc
xchg
dec
retf
xchg
inc
rol
jbe
fiadd
aad
test
cmp
push
cmp
fldln2
int
rcl
push
fdivrp
push
push
pop
gs
cmp
sub
(bad)
in
pop
mov
outs
xchg
pop
aas
adc
xlat
sub
bound
jb
dec
and
ss
jle
int
out
mov
sbb
push
xor
mov
out
pop
das
enter
xchg
cmps
add
pop
imul
add
daa
mov
push
mov
and
add
cmps
jmp
push
ret
in
push
rcl
enter
mov
andnps
push
(bad)
adc
push
js
add
sub
xor
inc
es
mov
icebp
fwait
cs
mov
jle
int3
xor
fcmovnb
jbe
adc
or
sbb
stos
sbb
xchg
fistp
fbld
fs
add
jo
(bad)
rol
out
xchg
in
shl
xlat
in
fisubr
pop
jecxz
xchg
and
adc
push
not
out
add
xlat
sub
xor
into
adc
int3
bound
add
xor
cmp
or
outs
mov
(bad)
loopne
sbb
pop
in
cdq
mov
mov
jmp
in
cmp
mov
xor
xor
sub
pop
sub
sbb
fcom
and
fcomp
cmc
add
outs
adc
jbe
pop
jp
xchg
in
push
stc
call
movs
imul
dec
int
sub
daa
js
out
jecxz
aaa
inc
popa
pop
xchg
dec
push
or
fcmovnb
lods
test
das
adc
pop
sar
int3
addr16
es
fs
adc
cmps
in
add
stc
fild
jo
inc
mov
stos
sbb
mov
mov
ds
jmp
lea
mov
std
mov
sbb
arpl
mov
sub
aaa
aaa
dec
sbb
test
scas
lock
mov
lea
js
xor
xor
xchg
inc
lahf
ffreep
loop
pushf
cli
lds
ret
rcl
rcr
push
cmc
xchg
sbb
fwait
stos
mul
lahf
imul
inc
adc
ins
push
jge
xor
stos
xchg
push
fst
retf
jo
hlt
jae
les
pop
inc
inc
fisubr
mov
into
pop
movs
ja
pop
test
scas
mov
adc
adc
pop
pop
or
mov
rep
(bad)
in
fisubr
add
jb
retf
pop
xor
gs
or
mov
ja
jmp
add
(bad)
xchg
mov
shl
imul
push
adc
pop
test
mov
in
jb
icebp
sahf
imul
test
xchg
rcr
mov
jge
fstp
xchg
xchg
in
or
xor
mov
out
popa
div
dec
xchg
sub
adc
jae
mov
and
adc
mov
adc
int3
dec
ror
rol
mov
jne
je
push
mov
jns
inc
into
lods
lods
jle
dec
and
mov
jle
cmp
mov
mov
xchg
not
clc
call
es
xchg
sub
pop
mov
dec
aad
nop
sbb
xor
sti
push
imul
mov
inc
fimul
and
ins
sbb
les
fidivr
test
or
pop
js
pop
popf
scas
cdq
or
jmp
add
jbe
(bad)
mov
mov
adc
fdivr
call
xlat
mov
xchg
and
jmp
mov
inc
mov
lahf
call
inc
ret
dec
cmp
pop
xchg
mov
imul
xchg
pop
pop
push
and
add
pop
cli
adc
sbb
pop
loopne
add
or
in
xor
push
jbe
ficomp
xor
pop
dec
cwde
xchg
(bad)
mov
mov
adc
scas
or
sbb
and
or
mov
mov
call
adc
stc
shl
test
jmp
ret
jmp
fisttp
leave
inc
arpl
xor
icebp
push
fistp
lods
mov
test
xor
adc
ret
add
cmp
in
clc
mov
ret
inc
xor
push
add
sbb
push
aam
or
aad
pop
jmp
mov
stos
sub
xchg
fisttp
out
mov
stos
sub
lds
push
jnp
pop
fnstsw
loope
daa
not
inc
rcr
mov
aad
adc
repz
(bad)
jecxz
xor
inc
cmp
add
mov
scas
mov
xor
dec
mov
push
xchg
mov
fild
(bad)
sbb
aas
ins
cmp
popf
fild
push
addr16
push
and
xor
pop
sar
mov
stos
pop
neg
jne
pop
inc
retf
(bad)
pop
sbb
outs
mov
aas
sub
jbe
int3
and
xchg
enter
xchg
mov
xor
cli
retf
test
push
mov
add
loop
sbb
pop
jae
aaa
out
cmp
scas
mov
cmp
jbe
fldcw
and
pop
dec
and
mul
enter
mov
push
cmc
adc
sar
pop
dec
test
sub
repnz
and
aas
popf
or
mov
mov
pushf
loope
imul
mov
std
cli
or
add
inc
sub
add
mov
(bad)
jne
ror
fcmove
cmp
rol
cmp
fwait
mov
shl
inc
leave
popa
mov
xchg
sbb
ins
push
mov
scas
stc
aaa
arpl
mov
pop
call
jg
sbb
mov
outs
aad
xor
xor
imul
iret
fcomp
aas
std
lods
jnp
(bad)
fs
jp
aam
cmc
fist
retf
and
mov
or
mov
movs
adc
push
hlt
int
aam
and
into
in
xchg
in
push
outs
fstp
cld
retf
in
loope
outs
cli
cmp
jp
test
push
mov
data16
and
push
cld
aad
add
adc
push
aas
(bad)
sub
cmp
push
and
rcr
jae
int
fist
sbb
cmps
add
jne
test
les
push
mov
jno
adc
add
dec
cmp
cmp
mov
fwait
add
mov
push
sub
pop
in
mov
test
dec
inc
jmp
call
ret
xor
sar
xchg
rol
out
mov
xlat
shl
mov
in
mov
sti
sub
(bad)
sub
sbb
push
xchg
pop
retf
lea
in
add
addr16
inc
xlat
jne
pop
daa
loopne
adc
adc
mov
dec
loope
mov
add
sbb
jo
mov
add
xchg
add
(bad)
sub
(bad)
pusha
in
in
push
adc
outs
push
mov
xchg
adc
adc
maxps
and
sbb
ins
shl
sbb
scas
mov
(bad)
es
fcom
adc
and
ret
push
jo
and
xor
jge
and
dec
pop
mov
cmp
jns
sti
nop
xchg
mov
or
out
mul
or
(bad)
out
repnz
jl
xor
lods
adc
mov
mov
imul
int
test
add
(bad)
neg
pop
push
std
out
pusha
or
rcl
retf
nop
or
hlt
fistp
dec
outs
fwait
jmp
dec
inc
(bad)
fidiv
ss
cmp
sbb
mov
outs
(bad)
jns
push
mov
fiadd
lock
aaa
(bad)
jmp
clc
std
inc
retf
scas
push
in
push
push
mov
pop
push
jg
int3
loopne
and
push
imul
xor
ffreep
and
xchg
out
scas
fstp
cld
xor
shl
cmp
rcl
cld
clc
jmp
mov
mov
mov
iret
mov
mov
push
cmp
sub
cld
pop
loope
ja
xchg
adc
pop
jne
imul
fdivr
ret
dec
sbb
xchg
in
push
(bad)
mov
nop
jb
sbb
cwde
pop
mov
jg
stc
ja
push
fidivr
or
or
cmps
popa
and
jge
xchg
sub
jmp
mov
out
clc
sbb
repz
and
sbb
xchg
sti
inc
cmp
mov
test
dec
inc
mov
add
sub
mov
sub
mov
scas
ds
ror
jle
ret
sbb
out
jecxz
rcl
mov
jge
icebp
rcr
xchg
icebp
jmp
imul
jb
jmp
movs
inc
outs
sbb
mov
int3
lea
hlt
mov
ins
mov
mov
wrmsr
sbb
cdq
stos
ja
ftst
push
push
mov
dec
mov
jge
shl
stos
clc
scas
dec
inc
sub
out
inc
sar
mov
arpl
add
loop
or
ss
mov
xor
jo
jmp
mov
ja
push
jecxz
mov
mov
pushf
test
addr16
leave
mov
(bad)
aas
addr16
sbb
or
int
adc
dec
dec
adc
ficomp
jp
mov
inc
push
setne
loop
or
adc
jl
out
es
outs
xor
imul
aas
ret
clc
loop
xchg
std
repnz
adc
icebp
mov
jge
popa
pop
je
mov
retf
sti
dec
jo
jno
or
sub
jo
push
repz
sbb
outs
xchg
in
pop
movs
sti
jmp
mov
popf
mov
shl
(bad)
mov
push
loop
sbb
in
or
mov
add
jmp
and
cmc
daa
sbb
jae
clc
lea
aaa
outs
arpl
inc
inc
out
mov
push
add
cmp
or
adc
shl
fwait
jmp
imul
cmp
in
lds
pop
xchg
mov
mov
xor
mov
cld
jno
mov
jmp
mov
dec
sub
ins
sbb
test
sbb
repz
sub
pop
push
cmp
xor
(bad)
and
push
ret
mov
dec
in
addr16
xchg
inc
scas
cmp
iret
cmp
push
pop
inc
out
mov
into
mov
mov
loopne
call
out
test
jp
js
xor
ret
hlt
mov
dec
pop
cmp
pop
mov
jb
jae
jo
pop
out
fcmovne
es
cmps
fs
or
aaa
cli
mov
cmp
outs
pusha
xchg
enter
xchg
adc
(bad)
rol
or
pop
rcl
iret
xchg
orps
out
scas
mov
mov
fistp
add
scas
int3
and
gs
stc
(bad)
movs
adc
mov
cmps
sub
leave
add
sub
dec
xchg
repz
call
push
sar
xor
push
sahf
fcmovnb
jge
lock
lock
dec
pop
out
aas
in
mov
aaa
inc
push
cmc
out
fild
aas
push
sbb
js
xlat
pop
jmp
les
(bad)
mov
dec
sub
outs
xchg
into
jae
jmp
int
inc
adc
loope
push
sub
ins
hlt
rcr
bound
outs
loope
mov
pop
lahf
mov
and
gs
movs
lods
push
adc
in
gs
mov
lods
or
and
sub
add
arpl
jp
adc
arpl
mul
cmp
lods
call
addr16
pop
repnz
push
push
mov
add
sbb
enter
movs
lods
or
cli
les
mov
ret
mov
call
icebp
and
sar
fild
shl
sub
ret
mov
xchg
and
pop
mov
jle
rcr
shl
or
mov
xchg
imul
push
loop
out
js
(bad)
enter
std
cmps
jmp
mov
dec
lods
adc
lods
or
jecxz
or
push
push
movs
xchg
ins
in
push
dec
push
sub
not
xchg
xchg
push
mov
push
sub
adc
mov
jmp
test
add
mov
and
scas
or
cld
clc
adc
ds
jbe
sub
inc
pushf
stos
int
jne
jae
std
daa
sub
mov
mov
add
inc
xchg
jne
aad
retf
xchg
cmc
jbe
mov
and
or
and
pop
mov
or
dec
retf
int3
repnz
dec
cmp
adc
xchg
lahf
sahf
mov
sub
xchg
rol
dec
aas
sub
mov
retf
(bad)
(bad)
icebp
test
fld
aad
idiv
jns
stos
mov
clc
lods
scas
sub
imul
test
cmp
mov
lods
add
imul
outs
cmp
pop
lock
inc
adc
sbb
mov
mov
(bad)
fild
inc
movs
push
push
loop
retf
inc
call
sub
aam
stos
xor
cdq
jge
loopne
stos
push
mov
lods
cmc
push
inc
movs
sbb
mov
sub
mov
ret
sub
fsub
imul
adc
sbb
fsubr
inc
aad
test
cld
loopne
jp
inc
(bad)
push
pop
arpl
(bad)
outs
push
mov
loopne
inc
fs
rcl
sar
cs
sar
push
(bad)
je
rcr
pop
js
mov
mov
and
daa
dec
int3
sbb
mov
mov
or
cmps
enter
jmp
adc
pop
push
and
dec
xchg
mov
js
xor
fidivr
bound
jbe
add
into
cmp
out
aam
jne
test
lea
xchg
pusha
call
enter
dec
hlt
fcomp
ret
lea
or
and
jp
jl
fwait
jbe
adc
aaa
loopne
jnp
add
mov
jmp
jno
test
mov
add
out
or
out
cs
jns
shr
call
inc
loopne
inc
sbb
or
out
in
into
push
push
lods
out
fadd
repnz
scas
inc
or
pop
out
mov
add
cmps
daa
int
cld
mov
(bad)
psllw
sbb
sbb
outs
mov
cmc
xor
cdq
retf
pop
sbb
sbb
into
mov
mov
jae
pop
ror
push
pop
dec
push
scas
mul
push
jmp
pushf
mov
(bad)
loop
adc
stos
sahf
push
pop
or
(bad)
push
ins
push
enter
mov
aaa
mov
sahf
push
data16
fsub
mov
push
cmp
cmp
mov
not
push
dec
jmp
(bad)
dec
jbe
adc
cmp
popf
dec
jnp
aam
or
push
jb
xor
mov
pusha
pop
cmps
(bad)
gs
xchg
aaa
xlat
pusha
cmp
or
sbb
pop
popf
ror
int
mov
nop
jle
cs
or
in
dec
lds
and
pop
adc
repz
in
out
sbb
dec
jae
push
icebp
dec
(bad)
cmc
mov
test
jmp
leave
scas
cmps
push
xchg
jbe
in
jmp
sbb
leave
clc
jne
call
sbb
xlat
cmp
jo
ins
inc
popf
leave
cwde
adc
leave
cmp
cmp
(bad)
push
sub
mov
dec
scas
loopne
jmp
xor
pushf
and
xchg
or
mov
and
pusha
push
cmc
out
add
push
int
or
mov
js
inc
pushf
dec
lea
add
movs
int
les
xchg
lods
jnp
enter
test
inc
xor
scas
sbb
jns
xor
clc
pusha
test
retf
iret
mov
outs
push
data16
jae
inc
cli
push
out
jbe
in
in
dec
fist
jb
lock
xlat
stc
sub
dec
fwait
pusha
sub
ja
sbb
jge
fisub
ret
ret
and
cmp
dec
mov
fs
sub
sbb
stc
add
or
or
inc
imul
scas
pop
xor
sbb
pop
lods
loop
div
out
mov
push
or
sar
frstor
out
or
jp
repz
inc
inc
addr16
and
lods
stc
mov
int3
mov
adc
ins
mov
nop
addr16
xchg
pop
(bad)
inc
movzx
iret
test
push
xchg
in
scas
cdq
cwde
inc
jle
mov
lahf
test
inc
movs
call
jle
push
mov
cmp
fnstcw
pushf
adc
add
cld
cmp
jmp
jmp
ss
sub
ret
xor
int3
cli
cmp
add
xor
aad
mov
push
mov
or
mov
pop
xlat
bound
jle
push
mov
pop
retf
dec
cmp
sub
call
es
cdq
mov
cmp
or
adc
push
retf
rcl
(bad)
into
(bad)
mov
cs
stc
fcmovu
push
push
sahf
mov
in
jno
aas
in
mov
retf
rcl
or
cld
test
xlat
xchg
sbb
call
loop
dec
out
imul
fcmovnb
adc
test
sub
adc
aaa
mov
outs
push
outs
jne
stos
rcr
cli
adc
pop
daa
lahf
or
ss
dec
sbb
test
inc
ret
sub
enter
ss
dec
push
jmp
retf
cmc
xchg
jnp
mov
lods
addr16
or
enter
iret
push
mov
pop
retf
add
fistp
cmp
into
fmul
rcl
mov
jns
inc
mov
mov
dec
iret
stc
dec
repnz
and
repnz
add
fs
loope
add
xchg
push
xchg
adc
ja
jnp
push
mov
add
lock
cs
repnz
xchg
mov
or
dec
mov
xor
push
je
stos
daa
cmp
ins
cmp
sub
adc
jp
cmps
sub
cmps
mov
push
mov
and
out
out
mov
sub
push
shl
pushf
jns
bound
cli
jns
ins
jns
mov
aas
pop
or
xchg
push
cmps
mov
cmp
or
dec
fld
test
jmp
repz
mov
dec
int
out
adc
cmp
sub
push
ja
cmp
mov
sub
and
test
mov
cmp
fisttp
xlat
jns
stos
or
out
fwait
hlt
xlat
xor
fs
pop
leave
ins
popf
not
scas
cmp
pop
movs
xchg
sar
or
adc
outs
sbb
sti
or
pop
sbb
lods
mov
stc
adc
cmp
pop
(bad)
pop
repnz
addr16
or
sbb
test
into
add
jecxz
mov
imul
and
xchg
mov
sub
dec
and
inc
cli
aas
inc
xchg
ins
push
movs
icebp
outs
and
xor
fprem1
rep
scas
pop
xor
aaa
mov
mov
popf
jmp
sub
stos
mov
test
std
push
jge
fnstenv
in
std
outs
mov
mov
int
popa
out
mov
push
aam
or
mov
or
jle
push
mov
and
or
or
shl
cmp
(bad)
retf
imul
or
xchg
cdq
fwait
xchg
fisubr
mov
mov
pop
xor
add
push
jge
mov
mov
sub
out
aam
ins
loop
test
sbb
pop
lds
cwde
leave
jp
xchg
jmp
pop
xchg
push
out
push
dec
sub
lock
scas
in
jg
(bad)
dec
xchg
adc
out
xor
test
cmp
pop
cld
mov
test
ror
outs
push
sbb
cmp
loopne
sbb
js
imul
dec
leave
(bad)
xor
push
pop
in
pusha
das
(bad)
mov
push
sti
inc
aaa
push
popf
(bad)
(bad)
mov
cmp
loope
std
inc
ins
dec
enter
inc
xchg
icebp
push
out
pop
dec
add
retf
mov
sbb
es
sti
outs
repnz
sub
pop
aam
mov
push
add
cmp
cmp
cmp
add
icebp
cmp
add
popa
mov
push
in
adc
(bad)
iret
imul
cmc
dec
xor
dec
jp
dec
rcl
fwait
sti
lds
ret
cwde
movs
xor
adc
(bad)
test
adc
loop
sub
sahf
inc
sbb
out
clc
add
cmps
push
or
jecxz
mov
and
sub
iret
cdq
mov
or
mov
mov
std
ret
add
or
jbe
xchg
inc
or
out
sbb
into
and
cmp
mov
out
mov
add
gs
ror
push
ja
ret
leave
mov
div
sbb
adc
(bad)
popf
sti
add
and
or
ret
sahf
fs
mov
ret
cmp
mov
test
adc
adc
inc
fmul
mov
sbb
mov
xchg
adc
add
mov
(bad)
(bad)
mov
dec
nop
pushf
cmps
pop
(bad)
mov
adc
cmp
jmp
iret
jbe
pop
sub
int3
adc
push
movs
ds
test
adc
sbb
das
mov
lea
add
xchg
mov
cwde
and
and
cmp
or
sub
icebp
mov
(bad)
aas
rcr
adc
push
or
pop
stos
mov
popf
int3
popa
outs
popa
or
pusha
dec
xchg
outs
xor
out
sub
adc
(bad)
nop
ss
mov
leave
sti
imul
rol
push
in
and
movs
rcr
pop
jno
xor
xor
xlat
in
jbe
adc
int
sub
je
cmps
pop
xlat
adc
cmc
dec
in
ins
xor
xchg
clc
lods
addr16
mov
mov
aas
dec
scas
aam
mov
sub
inc
sahf
adc
cwde
mov
xlat
inc
dec
mov
(bad)
gs
pop
shl
not
inc
test
dec
gs
xor
call
xchg
jp
ins
shr
arpl
cdq
test
sbb
xor
or
inc
pop
(bad)
pop
cmc
dec
push
mov
in
jmp
mul
lods
outs
dec
rcl
sbb
and
xchg
sar
or
or
push
xchg
push
cmps
call
addr16
push
idiv
ficomp
lea
inc
sbb
dec
into
das
cmps
cs
test
sbb
fsub
pop
and
js
jp
cmp
mov
pop
loope
out
or
pop
out
bound
rcr
fsubr
mov
hlt
cdq
ret
or
push
pop
fnsave
xor
pop
mov
mov
sar
and
xchg
scas
mov
daa
fs
inc
adc
push
adc
push
or
push
cmp
lea
dec
sbb
nop
dec
movs
rol
xchg
push
pminub
iret
jp
adc
mov
dec
pop
ret
cmp
pop
xor
pushf
out
loope
outs
out
sub
(bad)
ret
xor
in
jle
int
ja
mov
xchg
neg
movs
mov
sar
dec
jo
ins
int
pop
gs
and
in
and
cmp
icebp
shl
ds
je
push
jo
leave
in
sti
mov
push
jae
bnd
pop
in
adc
fcomp
dec
sub
stos
mov
fsubp
dec
push
fisttp
repnz
dec
out
repz
pop
shr
gs
xor
sub
shl
ins
cmps
test
jl
or
cmps
inc
mov
add
sbb
add
lock
inc
pop
mov
ja
ins
imul
fist
mov
data16
and
mov
inc
ja
mov
inc
inc
shl
shl
jne
adc
pop
fbld
add
mov
jne
idiv
pop
scas
or
lods
jb
cmp
fiadd
enter
pushf
and
cli
(bad)
lods
rcl
pop
xchg
mul
and
jle
dec
ds
test
mov
stos
lea
sti
pop
xchg
js
jp
std
cmp
leave
es
xchg
cmp
lods
cdq
nop
movs
add
jbe
push
mov
add
(bad)
fidiv
or
rcr
mov
xchg
pop
dec
inc
add
and
add
icebp
das
or
mov
int3
sub
scas
fidiv
xchg
repnz
clc
push
dec
inc
into
mov
mov
push
adc
push
pop
sub
rcl
push
push
or
inc
push
push
sti
movs
sbb
xor
ror
push
mov
popa
ds
(bad)
jbe
pop
iret
mov
adc
pop
jb
xchg
ss
mov
inc
sub
ins
pop
pop
and
div
aad
(bad)
cld
je
pop
sar
fdiv
and
sbb
pop
and
fst
dec
mov
loop
xchg
pop
neg
pushf
sbb
imul
cmp
adc
pop
scas
cmps
scas
push
or
leave
push
pop
into
and
xchg
push
mov
enter
sti
dec
and
js
icebp
popf
lock
sbb
adc
gs
sti
loopne
add
adc
xchg
sub
dec
outs
jmp
retf
mov
adc
mov
sbb
inc
scas
scas
push
ja
inc
ret
push
xlat
sbb
pop
xor
(bad)
cmp
or
aam
adc
ror
jb
xchg
sar
sbb
xchg
out
and
popa
dec
adc
inc
and
ret
popf
pop
movs
movs
outs
movs
aas
cmc
jp
push
pop
push
cmc
stos
mov
adc
mov
cdq
fisttp
lea
and
xchg
cmps
stos
xor
xor
push
cmc
cmp
lds
out
(bad)
neg
xchg
pop
push
dec
and
dec
mov
push
jae
mov
xchg
jns
cwde
sbb
xchg
mov
js
mov
xor
adc
cmp
jp
nop
inc
inc
sbb
sbb
aas
fidivr
xor
cmp
les
sti
leave
mov
test
stos
mov
and
sti
mov
mov
test
sub
push
data16
sub
aas
outs
ret
sub
add
jmp
cmp
pop
push
xchg
push
dec
sbb
dec
sub
cmc
(bad)
dec
add
addr16
xchg
push
push
push
push
test
add
nop
arpl
leave
arpl
cmp
sbb
mov
mov
jo
push
mov
out
xchg
inc
je
push
pop
scas
sar
mov
add
montmul
cmps
xchg
xor
test
test
push
in
push
pop
jno
lods
jge
jo
sbb
movs
jl
cli
ja
jne
test
in
scas
mov
mov
mov
fiadd
(bad)
push
xchg
icebp
and
jbe
mov
push
push
inc
mov
fcmovnu
inc
(bad)
fimul
rcr
movs
test
jns
cmp
add
inc
imul
mov
jo
ret
(bad)
retf
inc
movs
inc
sub
into
push
repnz
fwait
test
mov
das
scas
xchg
cdq
(bad)
pop
(bad)
cmp
call
ss
xchg
in
mov
push
shr
xchg
or
adc
aam
dec
rcr
clc
sbb
pop
inc
lea
push
push
(bad)
(bad)
mov
stc
inc
push
jne
mov
inc
adc
cmp
mov
inc
mov
cld
mov
out
adc
pusha
in
(bad)
mov
dec
aam
lods
fwait
ret
sbb
fstp
or
or
stos
popa
jp
sub
sbb
stos
leave
gs
dec
neg
in
fld
dec
pop
mov
jge
jp
pop
ins
add
stc
or
inc
inc
pop
pop
js
jg
imul
lock
call
inc
dec
cmp
sub
jmp
inc
mov
lahf
call
aad
dec
sahf
ret
iret
addr16
fisub
sub
sub
rcl
fcom
mov
les
xchg
hlt
je
sub
out
xchg
fild
div
mov
mov
je
(bad)
int3
mov
or
loope
jnp
out
enter
js
mov
out
inc
je
(bad)
mov
mov
dec
and
push
mov
in
lds
je
or
add
xchg
popf
in
(bad)
sbb
into
aas
xchg
retf
retf
ror
mov
sub
xchg
mov
jns
inc
fcmovb
in
jae
jnp
mov
xchg
aad
shl
fistp
data16
(bad)
mov
pop
ficomp
call
icebp
imul
ret
mov
mov
fwait
dec
les
pop
and
adc
adc
pop
or
sbb
mov
popf
sub
test
xchg
sbb
mov
sub
stos
mov
fwait
inc
ins
adc
into
add
or
sub
mov
std
jno
retf
(bad)
push
std
stos
test
adc
aaa
push
xor
inc
shr
out
push
lods
sub
mov
lods
mov
and
lahf
push
scas
pop
cmp
(bad)
mov
and
xchg
adc
push
xchg
lods
div
mov
pusha
sbb
add
mov
cld
adc
jmp
jle
xchg
adc
dec
jg
sub
sub
add
inc
gs
jns
and
jae
sub
adc
cld
xchg
rcr
cmp
fiadd
cld
aaa
and
mov
push
movs
cmp
push
xor
mov
mov
shl
mov
stos
pop
pop
das
xchg
jp
rcr
pop
fimul
and
fisubr
icebp
stos
xchg
inc
adc
sub
scas
fs
cwde
nop
scas
sub
cdq
pop
add
push
pop
add
inc
cmp
mov
bound
std
jle
jmp
xchg
(bad)
xor
repnz
xchg
inc
add
cdq
mov
mov
mov
ficomp
cmp
xchg
add
test
dec
aam
add
xchg
ret
pop
scas
js
adc
aaa
aaa
iret
mov
mul
pop
bound
or
cli
mov
and
clc
dec
ror
adc
(bad)
arpl
call
fs
out
fwait
push
mov
add
add
fwait
push
xchg
add
push
mov
xchg
aas
loopne
aam
cwde
xchg
jnp
shl
pop
push
aaa
mov
clc
or
push
cld
cli
ss
jecxz
sub
ret
jns
arpl
mov
ret
jmp
fs
(bad)
sub
aaa
xlat
mov
(bad)
fild
pop
jmp
ja
aam
in
jno
jnp
test
xchg
push
cld
jb
(bad)
in
and
dec
repnz
loopne
mov
rol
jo
ror
mov
cmp
in
xor
xchg
cwde
cmp
enter
fcomp
scas
shl
movs
adc
xchg
cmp
adc
test
mov
dec
sahf
sub
add
(bad)
fs
loope
ins
ja
xchg
in
cmp
neg
pop
mov
rol
jl
repnz
mov
push
sbb
push
jne
nop
cmp
pop
(bad)
in
call
das
loopne
pusha
xor
into
ret
adc
(bad)
mov
sbb
out
cld
loopne
mov
sar
mov
fcom
pop
sub
shl
int3
rol
sahf
pushf
xchg
mov
or
lea
shl
lods
lods
(bad)
inc
(bad)
hlt
bound
outs
(bad)
shr
mov
xor
je
cmp
sbb
and
jle
sub
or
cdq
jg
jae
and
xchg
test
arpl
cmps
jb
cwde
adc
fwait
inc
pop
and
sti
sbb
jae
arpl
repz
mov
stc
dec
xor
addr16
rol
and
sub
loop
sub
fldenv
jecxz
in
lds
cmp
lods
fist
(bad)
call
or
dec
cwde
or
stos
cli
sub
lock
mov
rol
dec
fwait
pop
dec
ror
call
jmp
(bad)
mov
cmp
ins
int3
aad
cmps
data16
mov
jl
in
or
jae
mov
pop
jnp
mov
xchg
or
mov
clts
movs
cmp
mov
fsubr
cmp
(bad)
ins
test
test
pop
mov
test
fs
mov
rol
sbb
jb
sbb
mov
fs
test
xchg
mov
push
add
push
dec
lock
hlt
nop
pop
add
pusha
adc
shl
pop
inc
fisubr
xlat
or
fs
xor
jb
mov
or
jmp
and
daa
xchg
adc
int
xchg
add
rol
or
imul
mov
fsub
ret
pop
ret
call
movs
adc
or
jmp
test
cmp
sbb
cmp
into
or
inc
cmp
jp
das
and
aas
dec
popa
pop
or
jo
xor
push
jno
js
cmp
add
test
lea
loope
cmp
add
cs
cwde
pop
test
xchg
adc
lea
test
into
mov
mov
(bad)
push
pusha
in
jnp
test
push
dec
mov
push
js
fbstp
dec
mov
cmp
push
dec
xor
cdq
jb
inc
addr16
(bad)
stos
xor
and
ret
stc
or
popf
shr
pop
pop
cli
sub
xchg
jo
icebp
add
or
or
leave
test
arpl
iret
into
les
add
repnz
pop
outs
shr
push
cwde
add
pop
inc
mov
or
sub
mov
push
xchg
xor
mul
sub
movlps
pop
sub
or
mov
jbe
test
and
cmp
into
adc
and
cld
pop
push
add
push
push
mov
push
adc
mov
test
repnz
int
cmps
inc
mov
lea
fld
cmp
add
dec
aam
pusha
xchg
std
ins
mov
arpl
fnstenv
pop
scas
cmp
and
sub
and
mov
jmp
xor
out
inc
pop
mov
mov
ret
out
out
mov
and
mov
jg
cmps
out
test
jmp
rcr
rol
mov
aas
cmp
arpl
push
dec
sbb
and
mov
push
push
add
xchg
out
aam
mov
mov
neg
and
out
push
clc
push
les
xor
mov
outs
jmp
jnp
repnz
push
ins
stc
aam
pop
fadd
es
idiv
fcmovnbe
push
mov
arpl
gs
mov
sub
push
je
jns
cs
aad
into
mov
inc
xor
mov
mov
sub
cmp
push
test
imul
adc
fs
adc
fadd
jecxz
daa
xchg
mov
arpl
ficomp
sub
(bad)
repnz
cwde
lock
stc
pop
jmp
and
lods
ret
jle
and
cmps
xor
pop
fwait
test
stc
in
das
and
xchg
cmps
in
push
adc
mov
pop
mov
xor
pop
pop
sub
push
push
cdq
fidivr
ficom
mov
mov
fs
ficomp
int3
push
popf
mov
sub
mov
or
cmp
sbb
xchg
xor
(bad)
dec
cmp
pop
or
or
(bad)
shl
(bad)
(bad)
xor
fst
xor
sub
and
dec
jae
(bad)
enter
mov
call
ds
add
and
ret
retf
cmp
mov
not
pusha
inc
into
aaa
cmp
movs
mov
arpl
aam
cmp
dec
or
clc
cmc
xchg
sub
push
push
int3
mov
mov
ins
daa
leave
dec
into
mov
and
or
mov
sbb
and
movs
cld
aaa
clc
sub
fld
mov
(bad)
loope
mov
jnp
cmps
jno
aas
lods
sub
mov
mov
sub
mov
adc
dec
fbstp
fmul
jae
mov
pop
loopne
ins
cmp
sbb
jg
xlat
addr16
add
mov
inc
mov
stos
inc
adc
(bad)
pop
mov
dec
add
dec
mov
and
push
sar
mov
xchg
cld
xor
push
fsub
(bad)
adc
sub
aaa
and
xlat
js
xor
leave
scas
mov
xor
push
outs
adc
shr
inc
sub
scas
jl
jl
and
cmc
loop
ins
inc
shl
push
add
and
fisub
cmp
aas
(bad)
loop
pop
or
jmp
pop
xchg
mov
or
xchg
adc
sar
add
dec
dec
out
mov
adc
jo
ins
out
sbb
and
adc
xchg
push
jge
stos
test
call
xor
jecxz
inc
leave
imul
xlat
stos
lods
(bad)
movs
push
arpl
imul
fiadd
mov
retf
sar
iret
adc
adc
and
enter
lahf
inc
and
xchg
xlat
mov
sub
jno
cs
xor
pop
mov
cmps
lea
jg
(bad)
adc
xor
and
mov
mov
mov
xchg
cdq
push
xchg
jg
int
jb
pop
rol
cs
or
nop
mov
dec
xor
inc
dec
(bad)
ja
sub
sub
int3
test
std
dec
aas
inc
(bad)
adc
pop
xchg
pop
xchg
xor
add
jae
mov
aam
xchg
or
adc
daa
daa
out
test
mov
test
cmp
iret
sub
or
cmp
and
inc
mov
rcr
es
xchg
les
cmovnp
inc
cmp
mov
out
call
or
cwde
adc
(bad)
push
sbb
dec
nop
adc
(bad)
dec
push
ret
std
test
loope
mov
xchg
das
mov
mov
lods
push
or
cmp
dec
mov
mov
fdiv
ret
sbb
pop
stc
out
mov
ret
cmp
(bad)
iret
sbb
ja
mov
sub
mov
jmp
or
sub
cmc
xor
cmp
call
test
xchg
cld
xor
hlt
or
cld
push
xchg
enter
mov
push
sti
or
mov
xor
(bad)
xlat
pop
aam
lods
sub
enter
mov
shl
jb
imul
sub
(bad)
out
cld
dec
sahf
pusha
sbb
dec
xchg
hlt
(bad)
jns
(bad)
pop
xchg
call
pop
cmps
pop
dec
pushf
mov
jno
and
pop
loopne
lods
scas
in
cmp
inc
mov
sbb
mov
mov
mov
dec
jo
adc
or
inc
dec
jle
enter
cwde
push
push
movs
aas
jns
imul
mov
dec
sahf
jecxz
lock
dec
jmp
push
cmp
fcomp
test
loopne
cmp
pop
mov
sar
mov
and
pop
stc
or
hlt
gs
sar
ins
xchg
(bad)
jmp
enter
aad
imul
push
or
test
jge
jae
fbld
mov
mov
test
in
pop
test
xchg
xchg
out
out
cmp
inc
pop
xlat
fistp
push
adc
adc
jmp
xor
push
mov
mov
gs
fmul
add
mov
cs
dec
movs
cli
cs
cmps
mov
cmps
add
stos
out
pop
lock
ret
sbb
xor
cmp
or
outs
mov
mov
std
fcomp
ja
jb
in
movs
rcr
push
mov
neg
pop
mov
push
mov
jb
ret
arpl
fisub
int
ficomp
jae
stos
sub
or
jmp
outs
mov
bound
or
fwait
cld
cmp
outs
xor
xor
repnz
shl
shl
mov
push
or
rcr
add
add
in
pushf
sub
or
xchg
add
in
cmp
aas
and
test
adc
sbb
pop
or
or
jmp
and
sub
cmp
and
pop
mov
gs
adc
mov
mov
cmp
xor
dec
xor
dec
bound
cmp
das
div
xchg
out
or
and
ja
cmp
pop
fcmovnu
xchg
(bad)
push
jmp
and
stos
cmp
jp
imul
inc
push
xlat
and
out
push
pop
dec
pop
or
imul
pop
cdq
loopne
mov
sub
adc
mov
inc
dec
mov
or
jnp
fst
or
jmp
sub
and
cmp
cmp
cmps
or
sahf
fs
pop
inc
data16
pop
loope
div
(bad)
aam
in
jl
fsub
cs
xor
leave
push
loope
add
(bad)
jecxz
push
pop
xchg
add
div
test
nop
push
jnp
call
fst
(bad)
fwait
add
in
cmp
in
pop
jne
out
mov
shr
lds
scas
icebp
idiv
push
mov
stos
call
pop
dec
add
retf
scas
cmp
retf
call
jnp
fwait
aas
xchg
jmp
jmp
lahf
inc
dec
fmul
js
mov
lods
jne
retf
inc
lods
mov
dec
cli
pop
call
push
dec
hlt
xor
aas
data16
mov
cli
jp
std
and
push
adc
rcl
int3
mov
dec
xchg
mov
popf
ret
cmp
sbb
mov
mov
or
xor
leave
push
push
dec
pop
mov
xor
enter
in
pop
in
jl
nop
fsub
lods
cmp
pop
aaa
cmps
mov
push
sbb
jbe
adc
jo
dec
jmp
mov
call
sbb
fs
out
test
dec
mov
jns
dec
jge
movs
aad
mov
xor
sub
push
aad
sub
mov
or
mov
mov
sbb
pop
adc
sbb
cmp
mov
xor
cmp
push
cld
jne
pop
(bad)
nop
inc
frstor
push
sbb
gs
push
xchg
mov
pop
es
arpl
call
sub
repz
fsub
mov
fmul
out
sub
push
mov
lahf
mov
jge
mov
jne
push
and
pop
add
in
sbb
inc
xor
daa
jbe
lahf
ss
jbe
and
push
push
xor
test
in
push
jge
cmps
je
jl
lods
cmc
ja
sti
jb
dec
loopne
cmps
push
pop
test
cmp
mov
or
push
fs
out
(bad)
pop
lods
dec
push
mov
xchg
pop
cmps
in
mov
leave
fdivr
pop
or
pop
xor
std
js
ins
movs
sbb
push
(bad)
outs
jmp
lods
cmp
xchg
push
clc
int3
mov
pop
add
sub
fsub
cwde
push
(bad)
rcr
nop
jno
and
add
or
mov
shr
movs
shr
push
ja
and
popa
(bad)
sbb
out
in
aam
xor
jno
test
(bad)
mov
xchg
and
or
popf
repnz
jo
clc
and
cmps
xchg
or
xchg
cdq
and
xchg
lea
sub
fwait
pop
shr
lock
shl
dec
inc
stc
xor
call
dec
(bad)
or
or
mov
sub
fst
lock
hlt
test
xchg
add
aad
out
retf
rol
mov
push
cmp
fisubr
or
(bad)
fild
jmp
mov
mov
mov
and
dec
je
push
test
jmp
sbb
xlat
bound
cmp
ret
test
ins
jne
(bad)
(bad)
out
mov
movs
call
mov
adc
jecxz
in
repz
pushf
jb
jle
call
add
or
sub
add
data16
mov
scas
das
adc
mov
and
push
nop
mov
dec
aaa
mov
shl
ror
inc
das
push
mov
ins
cmps
outs
xchg
inc
cmps
loope
dec
cmps
arpl
jge
je
in
jo
ret
xor
aam
mov
push
cld
inc
stos
out
loop
sub
pusha
imul
sub
lods
pop
(bad)
sti
cmps
lods
out
mov
scas
call
lock
or
dec
icebp
jb
movs
sbb
lods
push
adc
push
mov
(bad)
ins
or
ins
out
enter
xchg
push
mov
sub
pop
or
adc
lods
nop
fldcw
lds
adc
ins
lods
and
mov
xchg
syscall
hlt
mov
xor
jle
xor
sbb
popa
fadd
(bad)
adc
pop
push
dec
lds
push
cmp
and
add
mov
loop
test
sbb
outs
adc
es
lods
push
adc
jp
mov
lea
cmp
ins
inc
and
push
cmp
sub
mov
push
sub
add
fs
mov
mov
push
int
(bad)
adc
arpl
dec
push
mov
jg
rol
jno
mov
outs
mov
jecxz
push
add
jae
dec
inc
sti
call
mov
movs
xchg
xor
call
stos
jo
adc
hlt
aas
cmp
in
xchg
popf
pop
mov
or
mov
in
mov
ror
lahf
fcomp
mov
in
xchg
xor
lea
mov
mov
bound
call
dec
sbb
das
out
pop
pop
mov
fwait
test
mov
test
out
stc
(bad)
aas
mov
sub
pop
mov
std
jecxz
into
mov
xor
cld
xor
jno
mov
jns
push
aad
je
push
xor
inc
lods
sbb
inc
cmp
mov
inc
or
aad
das
ret
sub
push
cmps
pop
jge
mov
test
lea
loopne
sub
fcom
mov
dec
ja
sti
stos
or
es
mov
mov
dec
int
cmps
xlat
sbb
xchg
sbb
stos
dec
fidiv
sbb
(bad)
xchg
pushf
xor
cmc
mov
jecxz
int3
(bad)
jbe
loop
loop
inc
aas
pop
push
leave
mov
pop
push
sub
push
add
or
shl
fld
das
dec
out
fcmovnu
daa
fcom
fisub
adc
es
dec
sbb
repz
sbb
mov
mov
xchg
jecxz
ja
mov
or
and
fiadd
or
aaa
mov
js
popa
les
dec
dec
mov
sbb
pushf
lahf
jb
mov
mov
xor
xor
xchg
(bad)
mov
mov
sar
outs
ret
jns
sub
das
pop
mov
cli
or
sbb
add
add
push
pop
popf
ja
push
stos
aaa
mov
or
sar
and
add
nop
into
add
inc
repz
pop
jo
inc
mov
dec
inc
(bad)
iret
push
aas
mov
dec
(bad)
gs
push
in
jecxz
int
fwait
xor
call
xor
and
xor
stc
dec
push
jne
inc
cs
(bad)
in
add
jmp
(bad)
sub
call
into
push
adc
pmuludq
dec
mov
pop
pop
fs
in
movs
and
pop
aaa
movs
ret
mov
dec
cmps
push
les
and
arpl
xlat
push
pop
leave
cmps
xchg
in
jg
jle
push
ins
(bad)
mov
int3
test
push
scas
pop
pop
movs
mov
mov
bound
mov
sub
jmp
mov
(bad)
fdivr
ret
rol
jnp
jno
fldcw
inc
xchg
bound
sbb
jecxz
mov
cdq
push
mov
outs
scas
icebp
lock
mov
pop
cmp
mov
shl
dec
adc
pop
xchg
or
mov
jbe
xor
fwait
aas
or
inc
sub
pop
lods
aas
push
loopne
xchg
pop
sub
sti
ror
sub
xchg
mov
mov
repz
mov
out
sbb
fdivr
pop
xchg
hlt
pop
loope
sbb
neg
icebp
je
das
xchg
sub
jl
jno
das
and
aad
out
sbb
mov
xor
adc
dec
leave
loope
pop
rol
and
add
pop
add
rol
arpl
xor
sub
das
inc
xor
lock
push
call
hlt
inc
adc
pop
sbb
outs
cmp
(bad)
push
push
cmc
add
inc
push
dec
mov
mov
add
jnp
loope
pop
pop
sahf
xchg
mov
add
add
test
dec
cmp
icebp
(bad)
loopne
les
push
(bad)
xchg
gs
sub
adc
loope
(bad)
in
xor
inc
mov
loope
ret
xor
push
xchg
adc
les
cmps
inc
and
sbb
(bad)
pop
test
push
out
sub
fsqrt
sar
pop
or
mov
sub
adc
jb
cmp
mov
sub
out
pop
fnstsw
xchg
cmps
jle
cmp
shl
sub
loopne
adc
mov
mov
ja
ds
pusha
stc
stos
in
cmc
mul
(bad)
xor
stc
push
inc
xchg
xor
dec
push
adc
cmp
mov
popf
push
into
int
or
call
push
push
in
fidiv
and
ret
pop
mov
xchg
inc
mov
jae
sbb
daa
pop
mov
mov
dec
mov
xor
ins
in
cs
sbb
jle
mov
inc
adc
mov
xor
ficomp
xchg
jne
imul
jg
xor
mov
add
sub
jmp
shr
adc
pusha
or
or
aad
das
pop
in
je
mov
or
mov
pop
(bad)
(bad)
cmp
push
cmp
(bad)
and
fld
shld
cmp
push
push
jmp
daa
xor
cmc
dec
and
lahf
or
adc
push
adc
sub
or
and
test
pop
into
test
pop
cld
push
dec
ss
test
mov
pop
mov
mul
xor
adc
jmp
sar
stos
test
fimul
cs
sub
jmp
inc
add
(bad)
xchg
dec
adc
inc
pop
sbb
add
rol
lods
sbb
push
jg
int
push
inc
clc
in
(bad)
cs
gs
das
fld
push
mov
int
jge
or
xchg
add
int3
sbb
fsub
lea
mov
fimul
pushf
ins
loop
push
fidivr
jmp
and
scas
or
idiv
or
js
or
add
xchg
sub
out
sar
mov
jl
icebp
sti
mov
sbb
dec
mov
into
and
mov
bound
sub
push
shl
xchg
jb
repz
adc
jns
popf
mov
dec
in
push
movs
mov
or
in
dec
imul
std
loope
jo
cli
(bad)
pop
mov
jo
xor
adc
sub
neg
push
(bad)
mov
into
ins
jno
aam
outs
pop
push
arpl
mov
out
lahf
push
push
adc
sub
add
rcr
xor
mov
push
mov
cmc
mov
fistp
sbb
(bad)
outs
jne
sub
push
inc
adc
sub
jno
rcl
cld
outs
mov
hlt
pop
lds
fisubr
push
std
lock
fsubp
pop
fstp
cmp
mov
into
and
dec
repz
hlt
movs
repz
cld
inc
xchg
ja
mov
imul
fcmovu
cmp
push
jo
popf
jne
(bad)
push
stos
out
mov
sub
bound
cmp
adc
adc
inc
fldenv
shl
pop
das
or
je
fwait
loop
push
adc
scas
rcr
shr
inc
loop
pushf
enter
fadd
dec
pop
push
mov
jbe
call
cmp
dec
jae
jb
(bad)
jns
je
pusha
fldenv
jns
ss
lea
(bad)
pxor
xor
aad
pop
popf
sbb
not
das
pop
xchg
xor
inc
inc
adc
add
add
lahf
inc
push
push
mov
or
icebp
addr16
mov
sub
test
js
(bad)
lods
and
imul
sub
adc
mov
cwde
jo
popf
sub
add
je
add
jecxz
inc
mov
sub
mov
call
adc
mov
add
cmp
mov
jmp
retf
xchg
inc
xchg
add
iret
fwait
and
inc
mov
out
imul
daa
retf
imul
jno
or
jbe
push
enter
frstor
es
arpl
out
add
lds
cmp
fnstsw
lds
lods
dec
push
pop
test
pusha
sahf
(bad)
and
xchg
mov
jg
(bad)
stos
dec
sahf
sub
add
out
mov
push
cmp
push
scas
shl
jae
xchg
pextrw
dec
xor
mov
mov
push
loop
out
pop
push
sub
jg
jg
jl
fwait
out
shr
jae
inc
(bad)
jecxz
fdivrp
fwait
div
hlt
fld
(bad)
imul
sbb
xchg
adc
add
cmps
cdq
cmps
lea
movs
ja
dec
fs
xor
pop
aaa
fs
push
add
push
push
lahf
push
sbb
and
cs
adc
cwde
pop
(bad)
pusha
fiadd
push
ret
adc
lods
aaa
jmp
cmp
fwait
outs
iret
xchg
in
fdiv
sub
mov
jp
mov
hlt
cdq
out
xor
pop
mov
mov
inc
mov
fst
pop
nop
pop
sti
push
ds
out
repz
mov
add
rcl
adc
jle
or
stos
dec
sub
sub
pop
cwde
or
bound
inc
mov
retf
sbb
jne
in
imul
aaa
inc
sub
aam
(bad)
lods
or
in
mov
sar
jno
lahf
out
jge
in
sbb
mov
dec
les
es
inc
lds
push
xor
jle
scas
pop
inc
mov
ds
push
jmp
dec
loope
movs
push
fwait
(bad)
jle
addr16
xchg
inc
xchg
jecxz
and
in
mov
and
jmp
mov
jbe
ss
mov
dec
inc
or
leave
movs
pop
lahf
mov
stos
and
lds
test
inc
xchg
adc
sti
sub
push
dec
imul
dec
aad
popf
fwait
push
mov
int
jle
push
fisubr
outs
je
stc
in
push
popa
jp
sub
mov
push
in
inc
loope
out
inc
(bad)
in
add
sbb
add
icebp
sub
retf
mov
adc
pop
int
div
(bad)
mov
test
fwait
push
push
push
xlat
(bad)
or
sti
mov
sbb
mov
aam
mov
cli
outs
xor
mov
arpl
mov
lock
dec
fwait
pop
lods
(bad)
push
jecxz
daa
dec
mov
mov
scas
mov
dec
cdq
push
mov
data16
dec
mul
outs
xor
sbb
ja
xor
(bad)
test
jbe
mov
cdq
or
mov
and
call
sub
push
iret
mov
sahf
push
in
jae
add
mov
pushf
sahf
jnp
nop
jmp
xor
fcom
rol
cmps
lea
sbb
int3
push
sub
loopne
test
stc
mov
mov
dec
pop
pop
lahf
adc
mov
add
in
sub
or
fwait
pop
aaa
mov
jb
xchg
pop
das
mov
sahf
xchg
mov
call
push
or
(bad)
push
xchg
ss
fld
sub
and
lds
push
xchg
mov
sbb
sar
popa
loop
icebp
dec
or
sub
gs
pushf
cmp
add
cmc
inc
ja
push
pop
in
and
cmp
xchg
mov
mov
mov
outs
outs
inc
stos
cmp
sahf
pop
out
hlt
jbe
sti
and
fiadd
pop
xor
jnp
movs
xlat
test
fsub
jno
out
call
(bad)
dec
popf
in
cld
rcl
inc
pushf
aad
xor
lods
xchg
xchg
pop
cwde
push
retf
data16
inc
or
pop
shl
es
mov
out
das
imul
daa
mov
popa
std
scas
scas
gs
or
pop
pop
inc
clc
or
mov
push
push
data16
repnz
xchg
loop
jbe
jns
adc
std
cmp
(bad)
aam
lods
daa
mov
or
pop
in
and
sbb
movs
jbe
cmp
out
fisttp
xchg
add
mov
xchg
cli
das
ror
aad
sbb
stos
cmp
cmc
and
xor
adc
push
xor
in
(bad)
cmc
shl
cmp
inc
cmp
and
aam
in
outs
and
mov
out
(bad)
outs
cmp
mov
pusha
push
xlat
int3
mov
in
mov
test
call
icebp
sti
dec
sbb
scas
inc
pop
push
jge
jae
or
test
in
test
aad
dec
mov
jnp
in
xor
inc
jecxz
iret
dec
mov
es
cli
and
push
xchg
fcmovnb
(bad)
(bad)
aaa
cmps
hlt
es
stos
push
xor
cmp
ins
xchg
inc
pop
and
sbb
sub
pmaxub
jb
xor
mov
or
pop
test
jbe
int3
mov
inc
sbb
(bad)
sbb
into
xor
sub
jno
in
jle
jne
xor
int
xchg
sbb
shl
pop
jmp
ja
aad
out
fsubp
add
xchg
xchg
(bad)
clc
push
jnp
push
mul
jmp
xchg
mov
add
call
jb
cmps
clc
out
lock
xlat
mov
jae
pop
aas
dec
daa
mov
(bad)
or
cmp
adc
(bad)
bound
lods
leave
adc
cmp
arpl
(bad)
movs
sub
in
popa
mov
lock
cmc
adc
(bad)
pop
jecxz
mov
adc
lods
adc
adc
sub
fs
nop
cmp
cli
xchg
pop
nop
xchg
sti
cmp
or
jne
adc
mov
shl
dec
mov
cs
lock
aad
jno
daa
call
repnz
mov
inc
cmp
xchg
fild
jp
(bad)
xor
out
in
stos
data16
(bad)
outs
into
xor
xchg
pmulhw
cmp
jmp
das
std
cmps
das
aad
mov
xlat
inc
pop
je
adc
ja
je
inc
lahf
(bad)
out
xchg
mov
inc
ds
js
pop
es
jae
jmp
mov
sbb
push
inc
in
in
jns
or
and
mov
stos
cmps
sbb
and
in
mov
mov
(bad)
out
add
push
adc
psubq
stos
fnstsw
dec
hlt
scas
ins
inc
std
add
movs
cmc
std
jmp
pop
jb
pop
test
pushf
mov
mov
xor
jo
cmp
adc
pop
sbb
push
outs
test
enter
imul
arpl
stos
xor
fisttp
in
(bad)
pop
push
scas
sahf
aas
push
aaa
(bad)
ret
sub
shl
shl
cmp
retf
mov
test
jne
jo
cwde
ror
aad
(bad)
out
xor
cwde
loop
ror
je
icebp
adc
retf
imul
jmp
fst
imul
pop
adc
repz
dec
mov
call
cmpps
mov
push
sar
dec
jg
pop
and
aad
mov
pop
neg
sbb
inc
outs
mov
and
sub
ret
call
adc
mov
pop
enter
and
xchg
sub
cli
popf
jp
or
aam
mov
ror
push
jno
push
sti
dec
jb
sbb
fist
adc
fadd
jno
das
stos
inc
fwait
mov
adc
jae
(bad)
jb
(bad)
fist
adc
add
loope
stc
ja
push
(bad)
mov
mov
pop
cli
pop
mov
dec
jo
in
jne
mov
mov
dec
(bad)
stc
loop
js
adc
cwde
sub
and
sub
mov
xchg
hlt
ins
sahf
cmp
fnstsw
inc
cmc
mov
mov
arpl
iret
push
fcom
or
call
adc
mov
jb
call
add
(bad)
sbb
dec
xor
stos
mov
cwde
fs
ds
mov
adc
jp
aaa
call
push
icebp
ret
aaa
js
leave
gs
sbb
jb
push
lods
repnz
push
sbb
or
int3
jmp
sahf
mov
push
and
jp
push
xor
int
loopne
(bad)
mov
jmp
ret
lods
mov
or
(bad)
hlt
bound
jge
jp
xchg
and
cmc
pop
pop
(bad)
js
cmc
jmp
in
dec
cli
aas
gs
or
cwde
test
out
xchg
dec
(bad)
ins
pop
jns
loope
out
in
sbb
dec
shl
js
pop
outs
jl
adc
jl
jb
xlat
mov
les
inc
movs
sbb
shr
push
inc
cmp
push
jo
and
pop
push
push
xchg
adc
inc
jo
push
and
hlt
or
push
fisub
inc
fstp
inc
jl
add
pusha
es
lea
je
push
fdiv
dec
es
call
sub
mov
test
xrelease
repnz
fld
xor
inc
test
xchg
call
xor
js
or
shl
daa
jmp
jg
or
(bad)
cli
adc
stos
mov
mov
shl
mov
adc
push
out
jmp
ins
ins
mov
pop
ins
mov
cmp
pop
popf
(bad)
fdivr
push
out
or
sbb
js
in
aaa
jmp
dec
xchg
cwde
inc
mov
pop
sbb
icebp
(bad)
dec
out
(bad)
pop
mov
sub
xchg
xor
push
add
adc
in
cmps
(bad)
in
and
jb
adc
(bad)
fwait
inc
mov
or
cmp
mov
lds
inc
or
test
mov
xchg
sar
cmp
pop
mov
(bad)
fadd
jns
mov
int3
pop
lods
(bad)
push
sub
bound
inc
les
pop
mov
test
addr16
test
rcr
nop
rol
sub
dec
and
outs
inc
in
or
sub
aam
aad
inc
ss
cdq
mov
popf
lahf
es
mov
pushf
ficom
pop
loopne
xchg
test
mov
pop
pop
jne
adc
aam
in
push
std
test
and
jae
std
jp
sbb
into
mov
popf
mov
mov
cmp
iret
sub
mov
xchg
jo
mov
xchg
jle
add
out
leave
retf
sub
mov
add
xor
clc
sbb
les
call
mov
std
inc
jl
cwde
hlt
es
sub
ret
movs
mov
call
jmp
ds
xchg
ret
jnp
je
jns
pop
int
pop
jo
repz
push
mov
mov
mov
ins
adc
in
shl
rol
int3
cli
push
xor
and
mov
xchg
dec
add
mov
add
add
inc
push
add
cli
xchg
inc
add
mov
xor
xor
addr16
dec
jmp
imul
jb
das
dec
push
pop
daa
adc
sti
stos
cli
mov
ret
xchg
push
and
jno
jg
jae
pop
outs
or
je
and
lds
adc
sub
xchg
xor
jb
gs
sub
lods
jno
mov
imul
mov
pop
cmc
xor
cmp
or
mov
mov
mov
popa
xchg
pushf
xor
loope
push
add
cmp
mov
les
cmc
int
je
xor
lods
push
sub
fdivr
jecxz
jmp
inc
jl
or
xchg
mov
je
daa
push
adc
pop
cmps
fnstenv
(bad)
(bad)
pop
mov
out
adc
ins
scas
fsub
(bad)
sbb
mov
lock
lods
or
out
inc
iret
and
inc
leave
pop
cmps
pop
scas
cmps
retf
js
xchg
rsqrtps
jo
xchg
fprem1
(bad)
pop
lock
(bad)
(bad)
clc
xor
shr
xor
and
xor
pop
xor
or
and
adc
xchg
pop
sbb
mov
test
aad
cmp
in
jno
out
jnp
push
stos
pusha
inc
sar
mov
dec
add
mov
jge
popf
cwde
mov
mov
mov
sub
in
stc
outs
add
or
pop
xor
in
imul
ror
mov
jl
je
mov
push
jnp
in
imul
push
adc
pop
shl
loop
call
out
xor
jb
shl
jae
pop
xchg
push
dec
mov
inc
push
jo
gs
push
les
aaa
or
test
adc
jmp
aas
dec
sub
jbe
and
iret
pop
jge
and
pop
imul
dec
ret
imul
ss
add
or
out
push
push
and
cmp
stos
(bad)
lea
xchg
adc
ins
adc
xchg
movs
ins
cdq
sbb
aaa
das
add
adc
mov
in
jl
call
retf
sbb
adc
pop
jns
push
fld
fadd
jg
dec
test
inc
mov
in
push
mov
pushf
xor
push
pusha
mov
imul
adc
or
jnp
fldcw
inc
xor
test
pop
std
outs
out
jge
cmp
test
fld
mov
(bad)
sub
aam
mov
ftst
loopne
repnz
dec
add
test
sbb
pop
repnz
mov
mov
mov
pop
lods
aas
nop
cdq
and
mov
cld
addr16
daa
sbb
inc
pushf
shr
js
mov
ja
popf
xor
xor
les
ins
add
mov
outs
jne
cmp
out
dec
adc
jg
mov
adc
in
inc
and
adc
shl
stc
dec
and
movs
call
mov
jmp
movs
xor
xchg
push
mov
dec
inc
add
mov
fdivr
stos
inc
sbb
and
add
lods
inc
hlt
sbb
in
pop
jle
dec
adc
sub
dec
loope
dec
loop
lods
(bad)
xchg
cmps
sub
pushf
push
or
imul
sub
push
scas
stos
retf
pop
dec
dec
fdiv
out
add
cs
es
(bad)
add
(bad)
pop
pushf
sub
out
push
and
dec
mov
push
aas
pop
push
aad
xchg
movs
push
pop
adc
push
dec
(bad)
ds
pop
ds
push
stos
ins
mov
lock
pop
repnz
es
and
outs
mov
shl
push
fstp
cmp
pop
mov
icebp
jmp
out
jbe
inc
mov
enter
fist
cmp
pop
outs
pop
arpl
mov
fisttp
int3
movs
cdq
xlat
jne
ret
push
mov
ja
cmp
mov
pusha
mov
sub
xchg
dec
daa
adc
jmp
icebp
push
jge
test
sub
(bad)
sub
stc
sub
aad
sbb
cmp
push
std
or
mov
jns
pop
add
les
dec
data16
cmp
test
or
add
fidiv
int
inc
jns
call
pop
cmp
rcr
hlt
push
std
jmp
dec
cmp
cli
and
mov
in
add
and
sbb
ja
push
adc
imul
addr16
imul
hlt
imul
inc
es
xchg
and
inc
and
imul
mov
jns
dec
pop
in
push
nop
sbb
jno
std
je
ss
out
pop
mov
xlat
ds
jne
sub
data16
nop
or
cs
nop
push
aad
mov
ret
stc
retf
push
inc
scas
shl
or
jmp
adc
es
nop
popa
and
jmp
cmp
xchg
mov
inc
jno
shr
int3
enter
retf
xchg
xor
pop
cs
or
sbb
dec
fidivr
out
xchg
idiv
fimul
and
mov
sub
in
adc
les
jle
xor
jno
jle
sub
mov
jmp
or
popa
push
mov
adc
ds
sbb
pop
inc
fwait
inc
loope
push
pop
jae
rcr
push
scas
iret
xor
pop
fdivr
inc
ins
mov
mov
mov
nop
cs
daa
pop
imul
adc
inc
js
cld
xchg
mov
mov
sub
and
adc
test
nop
xlat
lds
jl
jmp
sti
cmp
fwait
mov
pushf
out
call
mov
mov
ins
stos
mov
test
mov
ret
retf
popa
fld
mov
mov
sbb
sub
xchg
fs
iret
sub
mov
into
mov
in
jo
pop
mov
stc
pop
adc
call
jbe
mov
or
or
jae
(bad)
int
and
iret
pop
js
fstp
pop
sub
scas
lods
scas
mov
xor
xor
ins
ret
cmps
fbstp
lds
xor
mov
mov
or
cmc
jbe
sti
cmp
inc
jno
add
mov
ror
mov
inc
call
sub
daa
or
adc
xchg
mov
loope
aas
rcr
lods
inc
aam
into
stc
retf
pusha
in
cmp
xchg
test
mov
and
fisttp
not
xchg
jo
imul
mov
neg
arpl
push
adc
or
cmc
xor
push
fist
mov
push
loope
add
mov
gs
xlat
mul
pop
out
pop
xor
jne
fldenv
lea
loope
jbe
mov
add
cmp
fs
fs
ret
mov
adc
out
jne
nop
mov
sbb
jg
cmc
mov
or
fistp
cmps
xor
dec
js
inc
mov
mov
neg
ror
jne
and
loopne
fadd
loopne
dec
(bad)
lods
pop
sub
cs
icebp
xor
jne
jmp
xor
lea
jne
xchg
loopne
aas
cmp
and
int3
mov
aas
stos
sar
mov
or
jmp
(bad)
jo
add
mov
ins
in
add
jmp
or
and
mov
call
add
(bad)
or
adc
nop
outs
fisubr
jnp
dec
mov
mov
cmp
or
add
pop
pop
xchg
jecxz
xor
and
test
cmp
inc
cdq
mov
push
ret
mov
int
ror
fucomp
sub
test
jecxz
stos
jl
xchg
test
call
mov
retf
jecxz
or
(bad)
jae
les
pushf
lds
retw
mov
jae
scas
test
add
inc
add
jle
ss
mov
std
test
sbb
adc
or
aas
add
(bad)
daa
dec
xchg
int
cli
jl
mov
or
adc
xchg
loope
clc
cli
aaa
jecxz
jne
(bad)
(bad)
pop
jns
movs
rcr
jecxz
hlt
pop
or
sti
stos
jmp
and
lods
ret
add
aam
and
aas
xchg
cmps
dec
sub
cmps
mov
push
in
mov
sbb
mov
cdq
jbe
inc
adc
clc
(bad)
js
repz
and
or
jo
mov
aad
test
push
ficomp
(bad)
aaa
dec
aaa
scas
mov
push
jno
std
sub
ins
mov
popf
sbb
jl
xor
mov
pop
jl
out
out
pop
mov
inc
test
mov
test
fst
popa
(bad)
mov
or
shl
adc
xor
xor
fld
xchg
daa
imul
dec
xchg
es
push
mov
xchg
cmp
mov
mov
test
mov
(bad)
sub
xlat
xor
xchg
xchg
and
ss
enter
int3
xor
(bad)
jne
mov
xchg
fsubr
or
fisubr
ficom
add
sbb
arpl
out
xor
rol
xchg
sbb
fnsave
cmps
mov
shr
mov
and
sbb
cmp
fadd
out
fcmovnu
imul
mov
mov
sbb
push
addr16
sahf
shr
mov
ret
aaa
fsub
stos
daa
daa
fisttp
rcr
pop
int3
or
in
mov
or
(bad)
xchg
mov
mov
addr16
pop
cmp
mov
inc
mov
cs
sub
das
dec
pushf
clc
add
mov
scas
cld
inc
das
sub
or
shr
(bad)
push
dec
push
add
mov
pop
into
imul
out
jl
xchg
pop
adc
and
cmp
inc
adc
cmps
pusha
test
and
cmp
mov
mov
ret
pop
mov
inc
cmp
int
mov
pop
pusha
inc
mov
sub
push
jg
ficomp
jno
data16
adc
sub
lahf
je
test
dec
inc
repnz
inc
push
outs
das
mov
(bad)
jg
push
les
pushf
lods
jno
(bad)
pop
in
add
sti
inc
push
lods
mov
ret
jo
aaa
aam
xchg
jmp
in
adc
rol
stos
sub
xor
retf
jl
fs
cmp
adc
scas
xchg
dec
xchg
(bad)
xlat
outs
or
loope
sub
xlat
mov
mov
push
in
pop
xor
in
or
iret
sbb
fdiv
das
loope
mov
sbb
xchg
inc
inc
jo
or
jbe
movs
inc
les
in
push
or
sbb
lods
loope
mov
repnz
retf
(bad)
cmp
jg
mov
rol
push
sub
xchg
sbb
ins
ret
xchg
dec
inc
mov
cwde
out
loope
mov
rcr
mov
push
call
xor
imul
int3
(bad)
std
mov
push
cmp
mov
pop
(bad)
sbb
and
enter
inc
call
test
mov
(bad)
pop
loope
shl
repnz
test
sbb
ins
cwde
lods
xchg
leave
mov
imul
jb
sbb
or
outs
stos
ret
(bad)
xor
ins
sub
pop
mov
inc
push
ja
ins
fcmovnu
xor
adc
push
xor
jnp
fs
jno
fld
fsubr
sub
dec
cld
cmp
cs
loopne
pop
movs
ins
hlt
pop
and
adc
sub
cmp
(bad)
cwde
in
and
fcomp
xchg
popa
and
mov
mov
mov
scas
adc
(bad)
mov
mov
xor
(bad)
fist
and
cmc
stos
xchg
jg
(bad)
iret
scas
sbb
daa
mov
add
js
dec
js
cmp
adc
lock
ficom
mov
sub
sub
(bad)
lock
push
sbb
or
jbe
and
jo
and
mov
popa
ret
or
or
repz
push
mov
sub
lahf
adc
xor
pop
aaa
pop
call
(bad)
out
loopne
pushf
test
inc
fcomp
push
dec
and
ins
aas
jo
ret
in
jnp
xor
mov
dec
mov
lahf
sbb
pop
push
fcom
xchg
cmps
xchg
leave
jns
xchg
leave
sar
push
scas
shl
mov
mov
jp
(bad)
(bad)
cmps
(bad)
jb
sbb
adc
leave
inc
dec
cld
es
popa
movs
push
or
std
jmp
fld
sub
dec
jmp
(bad)
neg
cs
push
xchg
icebp
icebp
call
dec
(bad)
test
add
pop
sbb
pop
aas
daa
nop
sub
inc
fwait
cmp
iret
fucomip
in
lock
sub
out
daa
pop
dec
or
aas
scas
or
add
pop
ror
jb
adc
imul
xor
mov
add
in
xor
sub
mov
mov
movs
jo
push
out
pusha
ins
jge
sti
push
mov
sub
mov
dec
inc
mov
inc
cmp
in
mov
nop
clc
mov
out
jge
mov
dec
xor
and
imul
push
bnd
je
scas
xchg
movs
shl
sub
mov
mov
mov
dec
jb
ins
dec
rol
in
in
cmc
shr
inc
imul
mov
rcl
jle
or
cmp
fcom
push
scas
mov
or
pop
pop
mov
ds
movs
fild
ret
mov
sub
lods
retf
pop
ds
aas
fwait
mov
xchg
cli
xor
ins
mov
(bad)
dec
pop
aad
xor
(bad)
jb
push
add
(bad)
cwde
(bad)
loopne
push
mov
lods
std
mov
cmps
fnstenv
test
mov
inc
jmp
jge
push
mov
add
pop
inc
rcr
pop
mov
dec
jge
(bad)
pop
sub
les
or
in
mov
lods
adc
xchg
mov
sub
jno
jno
jg
int3
xor
mov
ror
ja
pop
adc
das
or
or
push
pop
scas
pop
lock
pop
xor
arpl
or
(bad)
jge
js
int
es
arpl
inc
cmp
enter
scas
inc
aas
sbb
mov
call
adc
call
daa
add
cmc
add
scas
shl
ins
or
add
imul
stos
xor
or
xchg
jecxz
add
dec
ror
push
dec
xor
xchg
sbb
lea
stos
mov
mov
retf
dec
sub
cmp
stos
daa
mov
cmp
repnz
mov
adc
loopne
mov
and
adc
or
dec
push
xor
out
scas
cld
jecxz
xor
in
xlat
outs
pop
mov
cdq
inc
jno
cli
jo
sub
dec
fiadd
out
jle
mov
fs
mov
leave
sub
jl
nop
fld
repnz
mov
sahf
mov
out
iret
xor
loopne
jns
cli
test
adc
mov
mov
sahf
movs
clc
dec
sbb
dec
inc
pop
dec
(bad)
jnp
je
or
dec
in
xchg
cmp
cmp
jb
mov
std
jle
dec
retf
lds
lods
push
sbb
jle
cmp
push
stc
push
push
daa
lahf
(bad)
lahf
mov
jbe
fcmovbe
(bad)
pushf
push
dec
xchg
fmul
ins
call
xchg
in
call
lods
push
loop
sbb
loopne
aam
push
das
mov
add
ja
dec
scas
sub
(bad)
xor
xchg
pop
dec
jmp
or
sar
xchg
add
fldcw
outs
pop
fcomp
cmp
inc
pop
xor
push
fbld
loop
pop
ja
fadd
jmp
test
push
sub
xchg
shr
push
leave
push
outs
sub
inc
aam
xchg
ds
push
rol
mov
out
mov
test
aas
mov
and
std
dec
(bad)
adc
mov
rcl
lock
data16
mov
dec
call
cmp
(bad)
cmp
jmp
leave
ror
pop
jnp
pop
mov
xchg
mov
jmp
xlat
add
fwait
lahf
fild
adc
xchg
in
fs
pop
ins
dec
nop
outs
jmp
and
xor
inc
js
dec
xor
inc
jp
lods
sar
jbe
xor
sbb
xor
jno
sub
dec
fst
cmc
es
jbe
mov
push
or
push
popfw
xlat
cmp
mov
jg
mov
(bad)
fcmovbe
push
(bad)
call
jp
mov
icebp
dec
ins
push
ds
imul
add
pop
push
cmp
es
test
aaa
mov
fwait
ins
jno
or
enter
mov
jmp
iret
or
adc
push
cmp
xchg
dec
sbb
jno
loope
dec
mov
jb
add
adc
pop
pop
(bad)
bound
mov
es
jns
mov
and
sub
in
pop
mov
and
mov
mov
pop
jb
pushf
push
push
lahf
xor
icebp
ins
sti
mov
mov
mov
(bad)
mov
adc
sub
xchg
les
fst
jp
and
sbb
fadd
push
push
cmp
xchg
sbb
leave
push
(bad)
loopne
fiadd
les
push
pushf
sub
leave
ss
rol
mov
fild
scas
out
push
(bad)
pop
sub
retf
fist
movs
shl
js
mov
or
inc
sti
jbe
call
jb
adc
push
or
mov
ins
shl
xor
or
cli
in
fwait
loop
sar
ret
inc
call
std
pusha
xchg
in
lods
movs
adc
and
pusha
ss
push
repnz
int3
mov
xor
mov
pop
jns
cdq
lahf
test
and
mov
push
sbb
mov
repz
ret
fidivr
jne
and
fxch
or
data16
xchg
pop
mov
mov
test
sahf
cmp
loop
push
repnz
shl
dec
adc
xchg
sbb
xchg
int3
and
aaa
mov
dec
mov
je
jecxz
jbe
mov
hlt
fnstenv
ficom
cmp
push
mov
fdiv
mov
and
cvtdq2ps
cmp
test
mov
xor
dec
pcmpeqw
add
int
xchg
xchg
cmp
inc
sbb
out
rcr
sub
add
dec
mov
mov
or
dec
or
les
movs
push
retf
outs
stc
loop
loopne
xor
mov
cmc
loop
inc
das
push
retf
xor
fndisi(8087
xor
mov
or
imul
ins
imul
xchg
inc
data16
cmp
mov
in
add
push
(bad)
loopne
xchg
ss
push
cdq
jno
xor
inc
out
and
in
mov
mov
int
jae
fldcw
inc
sub
xchg
pop
push
pop
lods
test
xchg
xor
adc
call
popa
int
(bad)
ins
and
lods
pop
mov
or
sub
imul
pop
mov
popa
jnp
dec
call
and
shl
push
loopne
dec
test
pop
jnp
into
jmp
jno
sub
pop
movs
test
stc
dec
fidiv
clc
add
imul
pop
fwait
or
ret
stc
and
jle
stos
cdq
frstor
int
mov
enter
push
dec
sbb
aas
cdq
sahf
or
push
mov
in
je
sar
stos
ror
mov
popf
mov
(bad)
int3
xlat
fist
cmp
add
jle
jno
pop
sbb
in
int3
iret
repnz
das
nop
mov
out
pop
enter
es
pop
mov
cmps
cmps
fild
es
inc
mov
sbb
ret
jmp
sbb
aad
retf
adc
and
pop
jns
jb
sub
fidivr
loop
pusha
(bad)
dec
call
jnp
fcom
adc
in
mov
pushf
test
nop
pop
mov
mov
mov
leave
movs
sbb
out
icebp
repnz
enter
mov
fidivr
out
adc
xor
sti
nop
add
outs
add
out
dec
loop
mov
aaa
mov
shl
inc
push
ficomp
lods
xor
mov
adc
mov
ins
mov
cld
cmp
cdq
test
jns
cwde
(bad)
ds
pop
repz
arpl
cmp
retf
ja
pop
call
out
stc
popa
xchg
or
cmp
and
cli
movs
loope
ja
mov
jns
aam
retf
daa
push
jo
es
and
pop
or
pop
jbe
aaa
sbb
push
retf
push
jmp
cli
mov
xor
icebp
ror
jno
ja
cmp
push
adc
inc
mov
(bad)
jp
inc
lea
or
mov
mov
lock
mov
pop
sbb
scas
aam
icebp
jb
xor
cmp
jge
inc
in
xlat
or
mov
dec
cmc
pusha
inc
xor
in
imul
adc
(bad)
lds
arpl
ins
js
and
imul
push
js
jl
neg
push
dec
xchg
xchg
out
pop
mov
dec
pusha
adc
and
adc
scas
pop
cmp
addr16
push
xor
ja
mov
jp
mov
xor
stos
in
dec
mov
lds
stos
lock
mov
inc
addr16
pop
test
sub
int3
(bad)
push
sti
pop
dec
(bad)
pushf
mov
(bad)
ins
jmp
sub
add
jne
sbb
and
push
xor
mov
dec
popa
mov
clc
jmp
jns
je
adc
mov
sahf
aam
ins
mov
xlat
(bad)
xor
rol
loopne
mov
push
inc
bound
(bad)
cli
jnp
mov
clc
bound
jb
jns
jp
inc
mov
out
test
push
dec
nop
ret
pushf
pop
adc
(bad)
lds
out
scas
test
test
mov
inc
(bad)
aaa
bound
xor
nop
std
mov
dec
and
add
ja
mov
shr
movs
sbb
xchg
sub
jno
mov
jbe
add
push
shr
jge
mov
mov
pop
cmc
shl
pushf
outs
sub
div
retf
jns
add
add
push
in
xchg
mov
(bad)
imul
sti
cli
mov
jne
xchg
shl
pop
xchg
xchg
dec
daa
fs
jge
icebp
popa
mov
push
imul
fsubr
adc
inc
je
into
mov
inc
in
dec
shl
jecxz
test
lds
xor
fmul
mov
(bad)
and
pop
lock
mov
repz
test
icebp
xor
push
inc
mov
xchg
or
push
add
jp
adc
xchg
mov
shl
mov
push
push
mov
pop
mov
movs
hlt
cs
mov
mov
iret
in
sti
mov
fmulp
call
and
mov
out
xchg
or
sbb
xor
jmp
in
mov
or
dec
push
cs
frstor
add
lods
or
xor
pop
or
jmp
push
xchg
shr
or
retf
mov
enter
in
dec
jnp
mov
fnstcw
xor
jae
cmp
mov
mov
sti
or
test
sub
sub
jg
cmp
fld
pop
push
int
ror
jge
call
add
mov
and
sub
stos
push
call
cwde
ins
xchg
loopne
sub
jmp
retf
es
adc
xor
jecxz
cld
imul
inc
add
lock
icebp
xchg
rol
cmp
js
rcr
fisub
aad
sar
movs
repz
adc
jb
push
inc
mov
jle
mov
and
outs
mov
add
push
xor
not
fnstcw
sbb
std
jl
retf
pop
xor
mov
scas
call
or
sub
pop
sbb
mov
fsubr
(bad)
push
fsubr
shl
cmp
jg
cdq
xlat
push
mov
jne
stc
repnz
mov
test
jo
cdq
xor
xchg
jge
ret
cmp
pop
push
jno
push
cmp
mov
cs
int3
data16
and
out
mov
jmp
mov
pusha
dec
out
jbe
aam
mov
loope
je
xor
ror
sub
(bad)
and
xchg
shl
cmp
dec
mov
pop
mov
aad
lock
js
dec
mov
loop
(bad)
push
pop
into
test
outs
(bad)
(bad)
pop
xchg
cmp
movs
(bad)
addr16
fs
sub
mov
nop
or
icebp
popa
dec
icebp
jecxz
les
(bad)
imul
cmp
sub
xor
pop
mov
shl
jno
mov
or
fcomp
jnp
or
lds
out
nop
push
sub
mov
pop
mov
sub
shl
sar
sub
out
ror
div
(bad)
out
jmp
add
cwde
repnz
inc
xor
lock
sub
or
adc
cmc
mov
add
jb
xchg
pop
cmp
clc
adc
xchg
lock
xlat
push
lea
pop
pusha
sbb
push
cmc
cmc
or
jb
sub
lods
std
inc
sbb
pop
not
push
inc
inc
push
jmp
and
jecxz
retf
inc
pop
shl
dec
xor
imul
popf
rcr
mov
cmp
ins
(bad)
mov
mov
mov
les
clc
jmp
and
hlt
push
mov
div
cmps
mov
push
jl
pop
out
pusha
lea
sub
aad
int
jno
cmps
and
or
sbb
ss
fsubp
loope
cli
jmp
enter
jne
sub
stc
ins
or
mov
fmul
pusha
xchg
mov
mov
mov
movs
pop
sar
mov
nop
jae
sub
div
cli
and
sbb
xchg
push
test
and
leave
jmp
stos
push
neg
ds
lds
shl
cmp
stos
push
push
inc
(bad)
pop
mov
and
add
lea
test
mov
scas
int
inc
cmp
and
fwait
scas
dec
cmps
mov
jbe
or
jge
sahf
icebp
mov
pop
mov
mov
fcomi
inc
mov
outs
sub
inc
mov
cmp
rol
push
add
lods
xor
or
xchg
jnp
outs
mov
adc
adc
xor
push
sub
and
ins
adc
lods
lds
xchg
inc
dec
enter
cdq
popa
scas
jl
add
clc
sbb
adc
adc
jne
cmp
movs
xor
repz
imul
out
push
push
(bad)
(bad)
cmp
inc
stc
mov
das
adc
pop
mov
push
cli
nop
dec
inc
aad
cdq
daa
retf
dec
std
mov
inc
clc
lods
inc
jg
inc
fst
or
into
sbb
aas
jns
jmp
cli
cmps
call
push
js
mov
pushf
xchg
pop
aam
je
cld
cli
push
iret
push
inc
cmp
jnp
shr
int
xor
mov
(bad)
outs
imul
or
and
pop
rcl
jg
pop
push
push
sbb
dec
ja
int
stc
popf
fdivr
mov
sub
leave
cmp
pop
ins
push
jo
cmps
ffree
pushf
shl
sbb
hlt
xchg
mov
hlt
adc
sti
fstp
sbb
arpl
fild
cwde
(bad)
and
cwde
pusha
hlt
pop
inc
inc
lods
inc
xchg
cmc
lock
rep
(bad)
and
and
gs
out
leave
inc
sar
cmps
popa
sbb
or
pushf
mov
jle
inc
sub
cwde
adc
or
mov
mov
(bad)
out
dec
sahf
dec
les
jne
cld
dec
inc
push
dec
adc
xchg
mov
and
(bad)
(bad)
fisttp
dec
add
out
(bad)
adc
loopne
mov
sbb
pop
cmp
mov
retf
div
jno
mov
pushf
and
jge
sbb
push
(bad)
pop
inc
je
retf
fbld
or
lock
sub
sbb
mov
jno
mov
or
or
push
push
js
xchg
inc
call
fs
jo
popf
movs
xlat
jo
mov
or
add
jne
movs
sar
fild
push
sub
xor
and
sub
cmp
(bad)
dec
xor
xor
cmp
xchg
mov
push
cwde
in
mov
nop
push
sbb
js
cmc
inc
test
mov
mov
mov
fwait
pop
xchg
(bad)
inc
arpl
imul
imul
adc
inc
hlt
xlat
mov
popf
jnp
pop
cs
stos
fstp
(bad)
pushw
push
cli
mov
adc
jbe
outs
ins
les
pusha
jmp
jmp
cwde
in
xchg
fdivr
sub
test
test
(bad)
stc
mov
aam
pushf
call
jae
xor
sub
enter
lock
inc
and
fisttp
fucom
out
ja
dec
and
xchg
jbe
fdiv
xchg
and
call
(bad)
mov
pop
ror
clc
mov
scas
add
mov
loope
add
dec
(bad)
std
js
sub
pop
mov
shr
mov
loop
arpl
fistp
jg
or
jno
mov
pusha
jne
inc
sahf
adc
in
mov
cmp
add
push
push
dec
cmps
dec
je
stos
sahf
aas
inc
in
adc
xor
test
in
and
rcl
xor
push
mov
adc
sbb
into
sub
sub
jns
pop
mov
stos
shl
stc
hlt
mov
or
clc
push
repnz
pop
mov
loope
mov
fld
or
push
jns
dec
sub
(bad)
(bad)
xor
push
sbb
iret
ins
scas
mov
jnp
add
loopne
and
daa
idiv
in
lds
lods
mov
pop
and
ins
and
arpl
lods
mov
mov
and
xor
xchg
das
mov
mov
jmp
dec
sub
push
fcom
mov
and
add
jae
imul
imul
mov
pop
or
push
nop
pop
loop
retf
push
cdq
xor
fcom
mov
push
add
jnp
ss
push
pop
mov
xor
sub
scas
fbld
pop
and
fild
adc
jmp
movs
lock
cld
xor
pop
fsubr
nop
add
mov
and
push
mov
dec
xorps
jge
cmps
sub
test
pusha
sub
inc
xlat
push
popa
push
dec
test
adc
ds
(bad)
cmp
stos
or
arpl
pop
cld
pop
inc
je
mov
test
mov
aad
stc
push
mov
je
cmp
push
dec
push
xchg
or
arpl
push
xor
dec
jg
sahf
inc
stos
push
int3
adc
cmps
jg
xlat
xchg
push
xor
cmp
lods
repnz
jecxz
push
jbe
imul
sahf
shl
push
popf
inc
hlt
out
inc
jg
aad
sbb
arpl
aad
add
add
repz
pop
xchg
fisubr
push
cmc
stos
pop
push
test
jmp
adc
ss
loope
shr
cmc
(bad)
aam
inc
xor
nop
mov
retf
dec
call
xor
mov
mov
adc
cmc
popf
dec
adc
jne
(bad)
addps
adc
rcr
mov
fdiv
lds
pusha
jne
push
ret
jbe
or
shl
dec
pop
(bad)
rol
inc
lea
cmp
test
test
lock
std
push
stos
aas
shl
cmp
mov
sbb
add
pop
pop
rcr
shl
xor
arpl
mov
inc
retf
scas
push
mov
sbb
and
xor
push
mov
push
(bad)
mul
xor
scas
sub
and
sbb
pop
hlt
push
push
jmp
xchg
mov
cli
ins
mov
scas
dec
mov
mov
cdq
mov
sbb
fld
xchg
outs
xrelease
sub
imul
jo
jp
pop
and
in
(bad)
xor
pop
js
call
(bad)
outs
(bad)
xor
jmp
std
stos
clc
push
mov
jl
gs
ror
mov
in
out
dec
loop
stos
or
xchg
rcr
sbb
sub
mov
hlt
fwait
pop
ret
sbb
aas
(bad)
cli
jle
dec
add
add
add
cmp
fwait
addr16
call
cs
scas
stos
dec
out
or
ins
ret
in
inc
shr
mov
jne
popf
sub
pop
push
jge
and
call
clc
popa
ins
mov
jne
pop
fwait
and
sbb
push
shl
movs
xchg
cmp
jbe
add
shl
call
inc
pop
adc
mov
cmps
push
xchg
cmp
inc
jmp
pop
mov
mov
mov
xchg
test
sbb
mov
mov
aad
rol
ds
and
call
pushf
and
adc
pop
mov
addr16
inc
mov
div
push
adc
sub
hlt
sub
dec
xchg
lea
bound
test
mov
ins
mov
fs
cmp
les
sahf
adc
data16
shr
push
lea
xor
fsubr
xchg
mov
xchg
icebp
jnp
nop
add
daa
mov
in
ins
adc
shr
push
xor
aam
imul
and
xchg
rcr
mov
mov
inc
cmps
sbb
or
pop
pop
pop
daa
sar
es
adc
cwde
movs
sbb
add
xchg
jle
jg
in
fbld
push
or
dec
sbb
push
popa
cli
mov
sub
adc
(bad)
jo
lods
repnz
in
xor
out
sar
xchg
mov
dec
push
lods
rcl
xchg
test
push
call
xor
in
jbe
pop
fs
mov
add
xchg
sub
sti
movs
(bad)
mov
add
jmp
xlat
push
push
dec
ins
or
push
cmp
repz
and
int3
and
gs
retf
stc
test
mov
jmp
inc
mov
xchg
popa
or
mov
mov
jmp
xor
nop
rcr
adc
daa
add
push
idiv
das
lds
rcl
jmp
mov
pushw
(bad)
sahf
mov
imul
adc
xlat
loope
pop
cs
int3
jecxz
or
dec
div
jb
mov
dec
mov
je
retf
xchg
std
lods
mov
mov
enter
inc
push
ins
add
push
dec
pop
stc
fiadd
sbb
retf
mul
inc
jg
pop
sub
add
xor
enter
shr
sub
sti
bound
loope
movs
jno
push
sub
das
mov
cmps
push
imul
daa
jbe
shr
xchg
test
and
adc
cmc
pop
aas
and
pop
ins
mov
adc
or
test
(bad)
daa
shl
(bad)
xor
aam
out
in
das
mov
sbb
xor
inc
pop
jge
push
sub
push
xor
push
cmp
jmp
mov
xlat
in
and
mov
retf
push
sbb
jb
daa
jbe
mov
popa
push
xchg
add
mov
mov
rep
cwde
sahf
or
pop
add
cmp
jbe
cmp
and
pop
pop
test
pop
inc
test
js
push
push
or
inc
jno
ins
jb
sar
mov
xchg
adc
xchg
xchg
mov
xchg
sub
pop
fcomp
xchg
mov
xchg
scas
mov
call
sbb
and
mov
fs
adc
inc
pop
(bad)
mov
dec
xor
and
jmp
je
or
repz
scas
pop
dec
arpl
ins
dec
rcl
das
mov
sbb
std
nop
loope
push
icebp
mov
cwde
mov
test
jg
cli
dec
inc
in
ins
pop
call
dec
ret
push
pusha
mov
scas
fisub
push
(bad)
push
push
push
in
jecxz
pop
retw
adc
hlt
adc
scas
mov
pusha
mov
repz
cwde
shl
sbb
xchg
out
pop
addr16
xor
sbb
ja
out
and
cmc
gs
stos
enter
and
xchg
mov
call
or
cs
sahf
xchg
not
fsubr
nop
xchg
ins
lahf
gs
push
cmp
ja
push
js
sahf
fwait
xor
mov
jle
push
outs
enter
data16
imul
cmp
or
xor
ror
scas
mov
scas
ins
sub
in
adc
sahf
lods
push
push
mov
icebp
pop
xchg
and
dec
lods
in
mov
mov
jl
push
fidiv
inc
repnz
(bad)
iret
pop
dec
(bad)
ins
push
sbb
push
push
xor
inc
inc
xchg
mov
in
and
jge
int3
bound
mov
and
push
pusha
mov
push
retf
cmp
cmp
loop
or
inc
pop
xchg
push
xor
outs
addr16
xchg
loope
adc
fsubr
fadd
sbb
fsub
aas
pop
daa
pop
or
scas
or
stc
arpl
test
not
adc
arpl
(bad)
gs
xchg
test
test
das
mov
iret
push
jne
out
sub
aam
jo
adc
out
pop
mov
xor
cli
mov
push
mov
and
pop
cmp
mov
loopne
add
fwait
mov
xor
inc
fcomp
mov
das
cmps
jns
sub
shl
or
ret
mov
xor
mov
sbb
push
cmp
test
inc
pop
repz
ins
xchg
movnti
inc
jl
inc
mov
iret
arpl
out
jmp
pop
gs
daa
scas
jp
cmp
mov
fimul
enter
adc
add
fdivr
sbb
sub
ja
mov
adc
sbb
es
jnp
stc
inc
mov
int3
popf
or
addr16
sbb
cmp
rcl
mov
xor
jo
cmp
arpl
lods
scas
adc
xchg
popf
mov
mov
pop
inc
fs
mov
out
ficomp
sbb
mov
jmp
xchg
jecxz
mov
and
add
stos
sub
scas
mov
ror
cmp
sbb
int3
xchg
jo
ficomp
out
sub
movs
mov
push
js
adc
mov
iret
inc
push
inc
pop
push
and
sub
pop
div
dec
sti
xchg
fdivp
inc
neg
jecxz
mov
cmps
inc
jae
int3
in
xor
ins
fwait
popf
jne
(bad)
push
cmp
dec
or
pop
out
sub
inc
and
xchg
out
loope
cwde
mov
jg
sub
mul
adc
pop
add
inc
int3
cmc
test
fwait
adc
mov
aam
not
out
sub
call
and
jae
mov
cmp
mov
and
pop
daa
movs
cmp
std
cmp
cwde
ret
mov
test
mov
xor
cmp
cli
(bad)
push
movs
lock
les
das
xor
inc
adc
or
iret
pop
repz
aaa
jae
lods
xchg
jo
test
add
(bad)
cmp
push
(bad)
mov
push
cwde
imul
lahf
mov
dec
test
add
bound
popf
call
mov
add
and
jb
movs
mov
dec
mov
mov
and
out
push
mov
jbe
mov
ret
cwde
add
stc
out
retf
jg
sbb
gs
dec
push
test
mov
adc
mov
add
jmp
test
stc
xchg
(bad)
fldl2e
movs
imul
inc
push
ja
cwde
into
mov
jecxz
pop
aad
mov
inc
lea
enter
frstor
repz
fs
pop
inc
aas
mov
shl
nop
loope
js
outs
rcl
fcomp
pop
in
rol
sbb
mov
in
(bad)
jmp
sub
popf
stc
aad
push
dec
popf
push
mov
je
dec
sbb
or
push
add
mov
test
inc
outs
(bad)
cmps
dec
and
xor
addr16
push
out
jge
or
adc
adc
std
jecxz
out
stos
popa
jno
inc
rol
retf
rcr
pop
and
gs
jmp
ret
mov
clc
inc
call
mov
shl
dec
ds
inc
loop
inc
or
dec
loope
mov
fisttp
mov
jmp
ins
ret
xor
cmp
xchg
mov
push
ins
jmp
lods
mov
mov
scas
xchg
jp
imul
sub
mov
loop
pusha
mov
xchg
mov
fiadd
in
add
int3
sub
mov
arpl
movs
mov
pop
pop
rcl
and
clc
leave
repz
pop
push
jnp
inc
fwait
hlt
aam
and
imul
repnz
push
cli
fwait
xchg
(bad)
cli
dec
or
xlat
push
pop
dec
cmp
sti
fwait
and
mov
call
fwait
pop
repz
(bad)
inc
outs
or
jmp
clc
mov
(bad)
fdiv
test
push
call
fsub
mov
xchg
jmp
stc
scas
jg
test
pop
mov
retf
jmp
dec
xchg
pop
ins
stc
mov
adc
fild
dec
jns
inc
bnd
jnp
loop
hlt
mov
mov
fs
pop
dec
dec
xor
iret
sub
daa
mov
pushf
add
jno
fs
jecxz
fadd
pusha
in
mov
xor
loope
mov
jg
add
shl
or
fwait
jnp
adc
sub
shl
lahf
ds
push
neg
test
jge
cmp
mov
mov
xor
fimul
arpl
js
dec
mov
(bad)
call
in
in
mov
jo
push
bound
imul
outs
mov
jecxz
mov
pusha
pop
pop
ins
adc
push
and
lds
in
push
push
fadd
xor
movs
jns
lds
xor
jmp
push
outs
pop
cld
adc
aaa
jb
arpl
xchg
loope
sub
xchg
iret
(bad)
jle
or
xchg
(bad)
fidiv
test
mov
sub
call
ror
dec
nop
inc
jp
pop
xor
xor
je
push
loopne
stc
mov
stos
jle
mov
xchg
leave
sub
stos
out
dec
pusha
add
cmp
cmps
push
dec
inc
pop
repnz
jo
mov
push
xor
aad
inc
jle
hlt
sbb
mov
sub
and
repz
arpl
sub
cmp
lds
mov
mov
inc
clc
lods
rcl
scas
std
movs
fs
xchg
popa
pop
cmp
and
push
rcr
jb
hlt
(bad)
jae
out
lahf
(bad)
aam
add
inc
movs
xor
adc
sahf
xor
movs
push
or
push
mov
jmp
inc
lods
push
xchg
cmp
loope
fld
xor
repz
loopne
adc
pop
fistp
jmp
sub
mov
shl
push
into
pop
mov
ret
into
loopne
int
adc
adc
mov
fild
jge
xor
inc
div
lds
xor
or
adc
aaa
xchg
ficom
or
int
pop
mov
push
retf
and
lahf
xchg
das
dec
imul
div
and
mov
xchg
inc
outs
ror
sub
fwait
mov
test
daa
mov
jae
das
mov
mov
ins
inc
mov
inc
and
daa
sbb
xchg
dec
cmps
call
adc
mov
sti
pop
mov
stc
mov
fwait
or
push
repnz
lods
cmp
or
in
mov
mov
xchg
jge
pop
mov
test
in
cmp
mov
sahf
shl
imul
addr16
daa
push
dec
out
mul
and
and
test
data16
loopne
sub
mov
pop
pop
outs
rol
jge
bound
ss
sub
adc
mov
out
sbb
xor
icebp
sub
(bad)
enter
push
in
push
cmps
in
push
or
mov
imul
div
ins
xchg
cld
test
cwde
das
or
mov
(bad)
scas
movs
and
jae
call
in
jmp
mov
leave
and
pop
sub
icebp
inc
scas
ds
push
inc
daa
add
es
dec
xchg
fsub
frstor
imul
mov
bound
rcl
jl
sub
sti
lock
xchg
jp
mov
das
repnz
sub
or
bound
rol
(bad)
xchg
aad
and
dec
popf
jle
cmp
daa
inc
pop
imul
sbb
cli
sar
add
les
sar
pop
clc
xchg
xchg
jp
int
in
mov
dec
xor
push
not
dec
cwde
das
dec
imul
and
jl
(bad)
fdiv
sbb
cmp
imul
add
and
dec
jle
jge
adc
(bad)
xchg
and
repz
lods
je
sbb
xchg
loop
pop
push
sbb
lds
sub
sahf
cmps
xchg
lahf
js
jl
xor
and
pop
movs
test
mov
into
(bad)
xchg
ret
neg
out
lock
retf
rol
jo
dec
mul
sahf
jl
mov
cs
pop
push
js
gs
test
outs
aaa
mov
add
sbb
jns
(bad)
pop
sub
(bad)
rcl
inc
pop
push
inc
(bad)
std
fiadd
ret
mov
pusha
mov
out
aam
dec
call
bound
dec
stos
into
pop
movs
xor
cmps
int
cdq
clc
cmps
addr16
push
adc
not
hlt
xchg
aad
mov
push
sub
popf
ret
test
fdivr
mov
cmp
dec
mov
fs
dec
fld
jae
xchg
xlat
cmp
fisub
add
out
xchg
add
ss
sub
jbe
daa
hlt
sbb
test
jl
repnz
inc
aaa
sub
or
jbe
xor
stos
outs
into
std
les
inc
adc
into
retf
inc
pop
stos
xor
mov
inc
into
sub
and
lock
(bad)
or
jnp
es
shl
icebp
(bad)
push
in
aam
addr16
clc
shl
pop
loope
and
xor
add
popa
bound
sbb
adc
cmp
mov
outs
jmp
sbb
cld
and
sbb
pop
xor
je
pusha
lock
mov
call
ds
test
sub
cli
jb
add
or
inc
pop
mul
pop
adc
adc
xchg
sbb
loope
cmps
pushf
sbb
(bad)
cmp
jbe
mov
shr
dec
mov
pusha
sbb
cmp
(bad)
jmp
sub
out
imul
rep
(bad)
adc
scas
pop
mov
dec
mov
(bad)
mov
cs
scas
cmp
or
jo
fst
test
add
cmp
mov
fnsave
inc
sbb
add
scas
hlt
stc
sub
push
jl
inc
repnz
dec
into
jno
dec
in
stc
test
fist
adc
pushf
and
push
push
or
cmc
mul
pop
mov
push
outs
aam
sbb
outs
js
mov
fwait
(bad)
hlt
scas
sbb
sub
(bad)
push
jmp
or
jecxz
mov
push
inc
mov
mov
arpl
adc
jo
mov
stc
jg
fsub
daa
dec
imul
cdq
test
xchg
jle
sti
sbb
in
mov
outs
add
or
es
fisttp
adc
mov
imul
jae
gs
scas
(bad)
fisttp
sbb
rol
call
adc
sub
pop
out
mov
and
cld
cmp
pop
mov
mov
mov
inc
xor
das
rol
pop
jne
add
mov
aam
shr
pop
and
jle
inc
mov
pop
nop
xor
(bad)
pusha
popa
(bad)
sbb
ja
bound
push
or
cmp
mov
aas
rol
push
cmps
les
add
stos
push
sub
xchg
mov
cmc
mov
repz
imul
and
scas
cmp
in
and
repz
ins
pop
push
cmps
out
imul
mov
sbb
ss
jbe
or
jnp
in
mov
push
sbb
test
sbb
dec
mov
xchg
cmp
and
pop
mov
xor
ret
fimul
push
aaa
xchg
mov
shl
mov
push
dec
pop
cmp
ja
push
lods
lods
cwde
push
jo
pop
xchg
adc
inc
call
sbb
not
fwait
inc
stos
and
pop
fst
dec
call
shr
aaa
jbe
and
inc
gs
outs
mov
fs
jmp
daa
cmp
lahf
call
idiv
fistp
pop
cmps
cmps
fldenv
mov
mov
dec
call
xchg
sbb
sub
scas
jns
sbb
mov
sbb
test
repz
push
jno
mov
mov
adc
push
hlt
pop
dec
or
adc
mov
ror
sbb
mov
push
in
and
aad
(bad)
enter
test
mov
jmp
daa
mov
inc
push
sbb
or
loope
jg
call
add
jo
cwde
mov
jo
stos
(bad)
jg
pop
mov
mov
sub
or
inc
or
movs
in
mov
add
jle
inc
arpl
(bad)
and
dec
aad
cmp
pop
in
dec
je
aaa
stc
fnstcw
dec
pop
imul
add
idiv
imul
std
mov
test
jns
mov
gs
stc
push
push
sbb
pop
push
push
rcl
mov
das
cmp
loop
add
loopne
pop
jecxz
sbb
inc
or
outs
loopne
pop
arpl
jmp
shl
imul
arpl
adc
inc
sti
mov
or
fwait
retf
add
sbb
fdivr
in
adc
(bad)
xor
lds
or
or
test
fild
mov
xor
not
sbb
cmp
enter
out
out
icebp
loopne
mov
cmp
sbb
scas
sbb
push
mov
lods
push
and
sub
daa
hlt
sub
in
xchg
dec
adc
das
pop
dec
sbb
mov
mul
mov
cmc
out
fpatan
cli
push
sub
lahf
ror
inc
int3
mov
lea
lods
dec
xchg
std
xchg
test
aad
pop
xor
cmp
xor
sub
push
fidiv
mov
popa
pop
jge
lahf
mov
out
adc
add
push
cmp
shl
and
jmp
mov
jle
aam
xchg
pop
jecxz
xchg
add
pop
les
(bad)
sbb
mov
(bad)
jo
fisttp
(bad)
outs
shr
ja
loop
inc
adc
js
fadd
loopne
jle
addr16
adc
sbb
stc
jecxz
jmp
or
dec
cld
cmp
pop
mov
iret
call
pop
lock
fst
stos
xor
adc
push
or
shr
aaa
jl
cli
push
in
push
jmp
or
jmp
loope
addr16
inc
jg
sti
stc
sub
stc
mov
pop
(bad)
cmp
sub
scas
mov
jg
(bad)
pushf
ins
cbw
(bad)
xlat
mov
scas
movs
push
test
mov
or
mov
pop
inc
mov
xchg
pusha
imul
push
call
jns
aas
lahf
std
and
inc
call
mov
jmp
jg
mov
inc
push
pop
pop
xor
lahf
pop
lods
adc
and
ins
inc
cmc
xor
std
jg
cwde
sar
test
les
ss
mov
leave
hlt
cwde
repnz
pop
iret
sbb
ffreep
jecxz
push
cmp
or
inc
inc
arpl
push
inc
push
xchg
rcl
adc
push
pop
dec
xchg
(bad)
mov
jmp
jno
pop
int
pop
(bad)
pop
cmc
inc
or
fmul
repz
xchg
push
sar
mov
push
pop
(bad)
or
pushf
std
jnp
cmps
push
or
aas
popf
mov
jmp
push
adc
jne
test
and
dec
push
gs
test
pop
fst
xor
clc
jns
sbb
xchg
lock
popa
xor
ret
int3
leave
mov
js
inc
retf
sub
push
fidiv
cmp
mov
sbb
or
dec
xor
stos
or
rcr
push
or
je
fwait
retf
adc
cmp
fwait
(bad)
push
push
fdiv
aaa
into
pop
jle
lock
or
cmc
call
cld
sub
inc
arpl
cdq
lock
and
xchg
fidiv
repz
dec
pop
jbe
mov
leave
les
lock
mov
mov
ins
aaa
ret
not
fs
movs
and
shl
push
ss
loop
inc
mov
cmp
push
adc
xor
push
das
pushf
lods
cmp
bnd
fcomp
lods
sbb
jmp
cmp
in
push
push
(bad)
mov
test
aas
push
addr16
mov
fwait
std
jecxz
jb
lea
mov
popf
pop
and
fwait
inc
(bad)
(bad)
fwait
jmp
gs
and
mov
(bad)
jmp
push
ins
xchg
adc
sar
and
fucomp
loope
push
xchg
xchg
or
jns
mov
in
cmp
aad
jmp
je
stos
(bad)
mov
loope
mov
inc
add
or
sub
in
arpl
jg
(bad)
push
adc
dec
out
iret
inc
push
adc
repnz
in
dec
fucomi
cmp
push
mov
jmp
mov
shl
add
xchg
sbb
stos
nop
dec
popf
pop
call
push
inc
pop
bound
sahf
popf
outs
add
pop
and
pop
js
dec
mov
in
fiadd
ds
cmp
mov
dec
and
cs
shl
dec
pop
inc
add
jno
xor
adc
ins
inc
fdivr
xor
and
adc
cmp
mov
stc
mov
popa
adc
dec
(bad)
push
fdivr
and
retf
cmp
or
movs
mov
add
ss
(bad)
dec
xchg
inc
adc
ss
dec
daa
ret
scas
adc
mov
in
mov
mov
fisubr
retf
xor
mov
adc
add
sbb
mov
mov
push
mov
ret
mov
loop
pop
shl
(bad)
sti
mov
stos
test
mov
or
je
push
fsubrp
pushf
movs
iret
cli
mov
and
push
xchg
(bad)
jnp
pop
add
and
es
mov
push
(bad)
repnz
and
sub
pop
lea
(bad)
js
mov
jae
push
dec
lea
xchg
(bad)
dec
or
jp
ins
push
or
dec
shl
movs
add
das
or
add
mov
mov
fstp
arpl
hlt
js
and
outs
xor
adc
mov
pop
jmp
pushf
test
pop
sti
push
or
ficomp
sbb
mov
sbb
push
shl
xor
lods
xchg
int
push
(bad)
xchg
ficom
mov
or
aas
sub
dec
and
dec
adc
adc
fidivr
ror
sbb
sahf
mov
add
sbb
int
ins
xor
retf
test
sub
clc
pop
cdq
retf
test
popf
repnz
scas
push
shl
push
jmp
sub
mov
add
xchg
jle
sub
(bad)
or
xor
sti
adc
inc
sub
or
adc
push
xchg
retf
pop
std
mov
fimul
and
js
call
data16
dec
sub
pop
pop
xchg
cmps
mov
js
enter
mov
adc
rol
jo
enter
xor
and
inc
pop
test
xor
rcr
jmp
push
test
das
stc
jnp
mov
mov
inc
fcmovnbe
push
cmps
sub
sbb
rep
add
out
xchg
fstp
jmp
cmp
mov
inc
loope
mov
sar
or
fstp
stc
mov
add
sbb
push
(bad)
cmc
data16
sub
outs
out
add
js
mov
sbb
fwait
scas
inc
adc
out
scas
retf
dec
or
and
outs
aam
cmp
test
rcr
lods
movs
lods
dec
fs
cs
data16
push
popf
imul
icebp
mov
jno
dec
(bad)
retf
or
cdq
int
stc
and
xor
mov
mov
leave
push
or
or
into
xchg
mov
mov
sahf
push
inc
mov
push
ins
xor
mov
fucomp
retf
pushf
fimul
clc
mov
in
push
jge
dec
pop
shr
cmp
push
or
sbb
test
data16
inc
je
out
sub
enter
(bad)
out
ficom
add
pop
pop
xchg
gs
inc
(bad)
jmp
mov
jmp
idiv
mov
mov
dec
ins
inc
adc
mov
push
xor
cmp
mov
fs
leave
mov
mov
daa
jg
sti
mov
add
out
icebp
jns
lea
push
(bad)
cmp
das
adc
nop
movs
sti
jl
cdq
lds
pusha
push
ja
mov
ins
add
mov
hlt
jb
push
in
mov
push
xchg
daa
cmp
cmps
push
sub
jbe
or
sbb
add
pop
cmp
xor
ss
inc
leave
mov
scas
out
push
mul
sbb
inc
scas
sbb
ja
cmps
popf
xor
mov
pop
mov
leave
mov
inc
sbb
mov
jecxz
push
in
adc
or
rol
jmp
(bad)
xchg
push
inc
imul
out
and
fisubr
push
add
cmc
leave
dec
stc
adc
mov
sub
pop
mov
jge
cwde
fdivr
mov
push
sbb
add
inc
adc
or
adc
pop
pop
fwait
rcr
ret
(bad)
in
xor
and
sub
arpl
shr
arpl
movs
(bad)
add
cmp
pop
xchg
mov
ja
dec
(bad)
in
std
test
ret
in
jbe
and
popa
cmps
lods
outs
jo
mov
xlat
dec
cs
or
lods
out
idiv
xor
push
cwde
loope
movs
sbb
not
cmc
sub
jge
sti
call
movs
icebp
fidivr
ret
sbb
sahf
gs
cmps
addr16
push
mov
or
add
out
mov
lds
xor
xchg
and
mov
das
dec
mov
adc
(bad)
retf
jp
rcr
cmc
dec
push
sub
ins
out
mov
jae
mov
cmps
jl
jp
es
test
fild
stos
in
mov
jno
aas
(bad)
xor
retf
inc
dec
fwait
loopne
sub
test
push
sbb
add
jge
pop
add
fsub
test
rcl
cmp
out
mov
daa
mov
mov
cli
call
test
inc
push
stc
mov
push
loop
out
in
pushf
and
mov
test
jnp
mov
fwait
aad
(bad)
cmp
(bad)
xor
pusha
repnz
add
ret
and
add
pop
clc
retf
adc
xchg
cmp
aad
xchg
or
mov
les
jb
cmps
out
loopne
in
sbb
test
jnp
ror
jne
xor
daa
ret
jg
(bad)
(bad)
sub
jge
sub
lods
fisttp
shl
cs
xchg
cmp
fstp
fidiv
sub
sub
(bad)
popf
test
dec
loopne
(bad)
into
mov
and
dec
dec
and
adc
lods
sub
ins
jmp
cs
mov
test
sahf
mov
mov
push
adc
(bad)
fisttp
out
push
repz
ret
push
add
in
mov
aaa
xor
imul
cmc
jae
sysenter
inc
sbb
outs
sbb
retf
loop
add
iret
inc
fwait
mov
test
imul
jnp
push
mov
xchg
pop
xlat
and
xchg
aad
or
cmp
jmp
mov
mov
pop
sub
idiv
stc
fs
out
(bad)
fadd
cmps
jmp
pcmpgtd
dec
shl
dec
nop
sbb
icebp
in
dec
fwait
loopne
sti
retf
xor
jb
ret
jp
mov
cmps
pop
push
push
inc
rol
out
or
imul
(bad)
jmp
and
adc
retf
mov
mul
enter
daa
shl
cmps
and
mov
pop
jae
dec
sub
mov
jb
xchg
inc
dec
icebp
(bad)
lock
retf
in
nop
mov
pop
mov
mov
fmul
jmp
(bad)
fcomp
push
jmp
imul
in
addr16
mov
hlt
addr16
imul
xchg
fistp
and
shr
cmps
dec
pop
dec
mov
add
cdq
push
adc
cmp
jmp
cmc
test
call
sti
(bad)
adc
shl
adc
adc
inc
fwait
out
sub
repz
adc
xchg
adc
in
xchg
repnz
xlat
jl
xchg
rcr
ds
push
mov
in
stos
(bad)
pop
mov
cli
pop
adc
ror
inc
inc
or
sbb
pop
push
lea
mov
mov
ds
mov
(bad)
sbb
inc
pop
test
mov
fdiv
mov
pop
push
cmp
jno
and
mov
push
xchg
xor
out
mov
and
(bad)
sahf
cmp
movs
mov
(bad)
push
mov
es
mov
out
loop
into
add
into
in
push
cmp
leave
pop
out
jecxz
inc
xchg
pop
mov
cmps
daa
stos
fsub
clc
push
inc
nop
nop
add
dec
repz
jg
mov
mov
xor
retf
movs
and
mov
pop
jae
jmp
cmps
and
loop
call
repnz
mov
push
jmp
popa
pop
sbb
jbe
dec
mov
sub
inc
pop
mov
cmp
mov
cmp
out
out
pop
add
cmp
shr
fadd
xor
popa
and
ss
int
and
rol
xchg
or
push
inc
cld
fist
mov
pop
dec
sbb
mov
push
push
stos
movs
ret
inc
sbb
lods
add
cmp
add
call
fnstenv
cmp
mov
ins
fsincos
(bad)
(bad)
aad
cwde
xor
lahf
int
lds
xor
hlt
adc
mov
jge
cmp
nop
mov
adc
popa
lock
xchg
sar
aad
lea
(bad)
xor
sub
shl
pop
dec
cmp
shr
rcr
call
inc
jmp
(bad)
std
retf
(bad)
in
adc
jns
xor
xchg
xchg
jb
ror
repz
or
sbb
mul
(bad)
and
cmps
scas
aad
mov
jo
pop
mov
jns
test
in
cmps
mov
leave
or
push
jae
rcr
cmp
hlt
scas
jmp
cmc
mov
pushf
fneni(8087
mov
fild
std
iret
mov
pop
arpl
mov
dec
xor
inc
jb
out
cmp
cmp
call
lock
cwde
outs
nop
xor
jge
sub
adc
and
adc
mov
push
add
out
out
imul
xor
pop
adc
mov
push
sahf
jns
cs
ret
mov
sbb
xor
mov
outs
push
or
hlt
das
sbb
pop
push
mov
call
sub
(bad)
xlat
push
out
pop
xchg
ret
movs
fdivp
cwde
mov
in
loope
mov
(bad)
icebp
fstp
mov
mov
pop
dec
adc
leave
xchg
ja
ja
rcr
dec
(bad)
pop
retf
bound
or
call
fild
jge
ret
sbb
adc
sbb
(bad)
fild
in
data16
ja
int
pop
inc
jmp
dec
cmc
fwait
outs
inc
les
ffreep
xchg
cli
jns
loope
sbb
outs
xlat
inc
test
dec
dec
hlt
push
jmp
and
jecxz
lock
sbb
add
sub
or
cmp
add
arpl
dec
imul
icebp
scas
add
mov
outs
adc
dec
inc
cmps
ja
adc
in
lea
adc
xchg
mov
add
xchg
sbb
arpl
movs
pop
or
sub
movs
es
or
dec
ins
inc
cs
or
ins
out
mov
mov
pop
jmp
xchg
shr
lahf
and
sbb
cmps
jle
ret
mov
xchg
cmp
mov
mov
jne
enter
push
xor
(bad)
jmp
outs
dec
sbb
cdq
lods
xchg
mov
cmp
push
test
and
je
js
add
xor
sub
or
std
gs
movs
leave
enter
jge
(bad)
adc
adc
dec
retf
js
(bad)
add
daa
xchg
xor
sbb
pop
add
popf
jns
sub
push
cmp
jle
cs
xchg
xchg
mov
or
fisubr
and
pop
lea
add
jbe
fsub
and
inc
dec
jle
pop
test
inc
sub
adc
rcl
out
into
push
adc
xchg
mov
lds
scas
addr16
fs
out
stos
pop
(bad)
popa
push
jg
outs
ins
mov
fsub
push
pop
sti
pop
mov
aam
pop
call
out
enter
out
add
jb
pop
lods
cmp
sub
push
mov
or
js
iret
or
ss
and
mov
xchg
enter
sub
sahf
mov
loope
and
and
mov
retf
pushf
test
xchg
pop
xchg
inc
dec
into
and
sub
jae
pusha
xchg
leave
lahf
xor
xchg
and
push
lods
or
test
push
fs
inc
shl
(bad)
jbe
inc
jb
jb
mov
movs
adc
(bad)
xor
enter
outs
mov
sbb
test
fs
ret
stc
jb
sub
popf
aam
cdq
jae
xchg
fnstenv
movs
add
xchg
div
dec
mov
fwait
mov
fdivr
adc
mul
jmp
add
sub
fadd
ss
jmp
pushf
xchg
mov
popf
enter
inc
cmp
dec
hlt
inc
ins
sub
ss
mov
mov
(bad)
xchg
imul
mov
jb
sbb
mov
cmp
mov
push
xor
or
hlt
stos
popa
call
scas
lods
cdq
cmp
inc
pusha
movs
pop
pop
stos
jnp
das
call
push
push
sub
mov
aaa
out
outs
call
ins
jmp
sub
scas
das
test
retf
mov
mov
out
ja
mov
push
das
mov
jmp
cmp
sub
cmp
mov
in
ror
daa
ja
fwait
mov
sub
int
jmp
push
jp
out
movs
dec
jl
mov
xor
ret
xchg
adc
je
sub
xchg
mov
pop
mov
enter
jb
es
or
mov
hlt
xabort
adc
out
stos
cli
std
sub
scas
loop
or
neg
dec
leave
sar
pop
add
add
dec
inc
pop
fadd
mov
adc
xlat
hlt
div
mov
in
pusha
mov
test
das
into
sbb
adc
neg
lea
sub
dec
popa
inc
push
sar
jbe
out
mov
into
(bad)
mov
cld
cmps
jae
xchg
push
scas
repnz
inc
add
dec
fild
add
loop
inc
mov
add
push
aas
aas
adc
dec
ret
(bad)
fstp
cmp
mov
sub
pop
mov
pop
(bad)
(bad)
mov
jae
inc
sub
xchg
mov
icebp
mov
ins
stos
lea
mov
push
pop
push
xor
repnz
fwait
inc
call
sbb
push
inc
outs
(bad)
retf
cdq
jl
sub
leave
jae
pop
icebp
jo
lock
stos
or
or
bnd
scas
rcr
call
mov
repnz
arpl
add
pop
les
hlt
jge
push
xor
repz
inc
add
int
add
dec
pop
sbb
xchg
movs
mov
retf
and
xchg
ss
loop
outs
push
xchg
retf
arpl
cmp
dec
ret
xchg
jge
or
repz
or
outs
add
mov
pop
jo
inc
imul
(bad)
ror
sbb
js
sbb
cdq
push
sub
sbb
scas
clc
in
lods
adc
sbb
loop
cmp
sti
cmp
mov
mov
dec
mov
push
push
ror
and
mov
push
mov
xchg
mov
movs
fdivr
in
xor
arpl
or
pop
sbb
xchg
idiv
push
cdq
adc
ret
adc
mov
enter
pop
std
sub
mov
pusha
or
std
jae
shl
dec
mov
dec
sub
pop
cmp
ss
call
push
mov
sbb
cmp
sub
sar
ja
mov
dec
loopne
pop
mov
(bad)
mov
xor
sbb
outs
jmp
js
add
loopne
retf
sub
xchg
xor
addr16
lds
cmps
pop
fld
pop
movs
test
mov
or
inc
push
mov
push
add
push
adc
and
mov
out
jne
retf
sub
pop
cmp
setg
cdq
loop
fs
mov
inc
mov
cmp
and
ds
adc
jge
inc
ja
(bad)
call
inc
int
jl
mov
push
xlat
adc
std
xchg
int
mov
and
xchg
call
mov
push
lods
or
and
jae
(bad)
mov
stos
sahf
sub
ror
int3
xlat
cmps
xchg
pop
std
add
push
jl
adc
test
jge
push
adc
out
sub
lahf
adc
loope
or
jmp
adc
cmc
mov
(bad)
jo
push
test
push
xchg
push
push
dec
add
cmp
sbb
sub
aad
or
mov
push
push
cmp
pop
push
cli
ficomp
mov
stos
in
daa
sar
jno
ja
add
inc
jl
adc
loopne
sbb
out
xor
pop
jbe
cmp
xchg
xchg
jle
ss
lea
das
xchg
out
add
sub
sbb
push
mov
cmp
mov
inc
cmps
mov
push
jo
imul
in
ss
mov
xchg
sbb
mov
mov
jnp
iret
push
inc
scas
mov
sub
aas
addr16
inc
fxch
sbb
arpl
mov
shl
mov
(bad)
sbb
es
inc
sbb
dec
mov
or
pushw
stos
adc
sbb
push
sahf
mov
sbb
push
lods
ret
push
xor
pop
dec
test
add
mov
shl
mov
pop
sbb
jl
enter
pop
in
and
push
push
and
add
sub
fbstp
cmp
jle
fidiv
sbb
pop
daa
mov
leave
sbb
dec
and
sub
mov
int3
inc
cmc
mov
pop
sar
sbb
push
cdq
sbb
push
sti
out
in
test
fsubp
in
ret
dec
push
stos
xchg
jle
xor
inc
add
jne
pop
sahf
push
das
mov
jle
cmp
cmc
push
jno
jae
pop
mov
and
push
sbb
or
(bad)
outs
dec
cmp
adc
daa
inc
and
inc
(bad)
lods
push
loop
pop
and
call
imul
mov
cmp
push
xchg
mov
or
pop
cmc
push
es
sbb
dec
test
(bad)
jno
lods
sub
cs
push
arpl
dec
mov
sub
test
fmul
addr16
mov
xlat
xor
add
loopne
cmp
cmovo
lods
push
jmp
je
jmp
scas
nop
addr16
and
cmp
sub
or
enter
dec
xor
stc
ss
jae
add
xlat
icebp
cmps
mov
add
imul
pop
les
shr
(bad)
int3
scas
push
stos
lea
jge
inc
mov
and
pop
dec
test
pop
inc
dec
ins
push
lea
leave
shl
pop
test
xor
fcmovbe
inc
push
test
sub
mov
xchg
mov
lea
out
daa
push
es
dec
xor
enter
loope
std
out
sub
imul
ss
jle
dec
pop
xor
or
hlt
cmc
pushf
jo
jnp
in
mov
aam
mov
in
jmp
sub
push
pop
leave
in
inc
xchg
inc
out
ins
push
push
dec
push
dec
cwde
jne
mov
mov
bound
retf
mov
push
or
pop
data16
push
and
mov
xchg
xchg
add
nop
and
lock
sbb
mov
iret
movs
and
pusha
loop
mov
push
adc
or
jp
adc
int3
outs
stc
pop
lea
cmps
addr16
lods
loopne
adc
push
test
or
jp
cmps
shl
jecxz
enter
ins
jle
scas
fucomp
mov
jecxz
dec
call
pop
mov
pop
jns
mov
cli
into
jmp
inc
sub
lea
(bad)
xor
adc
inc
fdiv
dec
mov
data16
iret
pop
adc
(bad)
mov
(bad)
movzx
push
ret
push
mov
xor
xchg
xchg
mov
add
addr16
jmp
out
lock
loopne
pop
je
repnz
inc
int3
mov
and
(bad)
or
popa
cwde
es
fucomip
lahf
leave
out
sub
scas
retf
lods
loope
sub
call
sahf
adc
lock
cmp
jo
aam
mov
and
(bad)
cmp
mov
arpl
dec
aaa
into
ffree
pop
(bad)
and
mov
inc
fld
xlat
xchg
add
mov
scas
push
and
xor
in
xchg
mov
mov
or
push
push
dec
dec
sub
pop
jge
jecxz
dec
int3
dec
and
or
jl
xchg
pop
or
cmp
fnsave
push
inc
icebp
fnstenv
sub
shl
fnsetpm(287
cdq
mov
cmp
lock
pop
inc
xor
mov
push
popa
ss
mov
scas
mov
cmp
jg
ja
std
xor
cs
cmps
mov
mov
push
popa
std
aam
fsubr
aam
je
sahf
xchg
ins
mov
clc
or
dec
imul
mov
dec
jle
enter
pusha
mov
sti
and
mov
jno
in
xchg
sub
ins
xor
adc
sub
clc
in
mov
pop
adc
dec
jns
cmp
jecxz
pop
jo
pop
sbb
push
repz
or
sbb
mov
push
das
sub
out
clc
leave
inc
push
pop
or
out
ror
not
mov
or
ss
adc
out
pop
inc
dec
push
pop
push
lea
sub
dec
popa
inc
mov
fwait
std
je
jno
lods
ss
sbb
push
push
ret
xchg
cmp
mov
dec
cld
pushf
inc
cmp
ss
cmp
cli
pop
and
sbb
gs
retf
dec
cli
xchg
adc
ss
cmp
fidiv
adc
push
lods
imul
mov
xchg
and
fisub
push
sar
fwait
je
adc
dec
inc
mov
and
xlat
in
mov
mov
lods
call
pop
sbb
push
into
fs
or
es
cld
add
push
pop
or
jge
cmc
xchg
jecxz
pop
int3
push
cld
and
sub
pop
jae
stos
movs
mov
add
push
pop
shl
ret
add
sbb
xchg
(bad)
or
ror
xor
sbb
jo
cmp
out
aas
rcr
cmp
xchg
sar
xchg
xor
(bad)
je
jno
inc
or
into
or
pop
sbb
sub
dec
je
test
mov
lea
pop
sbb
pop
cwde
mov
je
addr16
push
shl
xchg
inc
jne
scas
clc
xchg
les
movs
int3
lahf
ja
jb
xchg
popa
add
jecxz
(bad)
jmp
aam
or
mov
jecxz
jns
fdivr
(bad)
push
jecxz
arpl
enter
adc
jno
xchg
(bad)
mov
(bad)
dec
mov
add
pop
xor
jb
push
ret
xchg
sbb
sub
scas
movs
jle
shl
mov
mov
les
outs
and
mov
mov
adc
or
push
dec
mov
pop
adc
bound
call
add
dec
test
je
daa
mov
jp
xadd
push
mov
mov
adc
out
call
out
pop
nop
test
adc
movs
cdq
bound
pop
aam
adc
loopne
sub
(bad)
xchg
leave
je
mov
in
fstp
jmp
xchg
out
retf
cmp
inc
sbb
inc
and
push
ror
push
shr
mov
imul
push
in
xor
adc
jp
add
and
cmp
xchg
cdq
jb
in
mov
and
sub
xchg
and
jle
mov
push
js
mov
and
out
pop
sbb
mov
add
jbe
xchg
aad
clc
fwait
pop
dec
aas
(bad)
mov
ret
addr16
lods
mov
or
aas
imul
xchg
push
cmp
adc
xor
cwde
outs
int
inc
push
mov
loopne
sub
jp
mov
cmp
push
imul
sbb
jo
mov
ins
add
cmc
and
test
xchg
addr16
pushf
cs
mov
or
sub
or
sbb
repnz
xor
mov
mul
push
call
xor
fld
dec
ror
dec
dec
rcl
dec
jmp
xor
ja
jge
mov
mov
mov
call
sbb
and
sbb
sub
pop
gs
dec
stos
inc
sti
retf
push
inc
cli
add
cmps
stos
ins
or
inc
sbb
fs
push
frstor
out
pop
test
mov
ins
cs
loopne
lods
cmp
cs
mov
sbb
add
pusha
inc
std
imul
div
shr
add
jo
xor
push
(bad)
mov
sub
dec
pop
sbb
arpl
xchg
or
shl
add
lahf
mov
dec
cmp
adc
int3
in
je
sbb
adc
hlt
dec
fucomp
loopne
and
adc
in
mov
jbe
je
sbb
push
and
xor
shl
outs
inc
addr16
popaw
outs
outs
jl
fiadd
mov
ret
out
popf
pop
mov
pop
retf
push
jmp
jb
dec
sub
push
arpl
xlat
in
xchg
imul
push
sub
add
push
gs
or
aaa
data16
int
mov
xor
ins
mov
xchg
test
je
xor
pop
or
rcr
sti
dec
es
xchg
sub
mov
rcr
movs
push
sub
jae
push
ss
xchg
pusha
fadd
mov
dec
xor
push
add
dec
in
js
and
in
add
in
and
outs
mov
add
dec
popf
in
add
cmps
movs
int3
cwde
jle
fiadd
fs
adc
outs
daa
mov
lea
movs
jne
sub
cli
cmp
int3
sbb
cmp
in
mov
cdq
in
iret
iret
cmp
dec
js
sbb
jo
ds
repz
fild
data16
xchg
xor
jae
ja
push
sub
dec
(bad)
cmp
imul
mov
adc
outs
xor
hlt
bnd
in
cs
popa
or
ss
mov
fld
add
popa
ins
sub
adc
(bad)
clc
mov
xchg
ret
dec
mov
add
cld
jo
mov
add
jmp
pop
inc
retf
sbb
ret
xlat
mov
mov
sti
cwde
pop
push
mov
mov
retf
sbb
loop
adc
ds
mov
cs
inc
cmp
mov
xlat
stc
push
xor
out
sbb
ret
cmp
imul
adc
call
push
stos
xchg
xchg
or
inc
int
aaa
sub
loop
retf
mov
cli
cmp
dec
(bad)
sub
cwde
gs
dec
das
sbb
xchg
add
mov
shl
sub
adc
xchg
call
dec
and
dec
ins
xchg
jge
icebp
(bad)
ja
ins
fnstcw
xlat
sbb
sbb
stos
dec
adc
push
and
cmp
std
enter
jnp
jns
jno
cmp
mov
je
xchg
jle
mov
dec
bound
gs
vmaxpd
mov
sbb
rcr
cmp
jl
add
data16
push
mov
les
fidiv
in
bound
jo
sub
leave
xchg
ror
mov
gs
aam
popa
or
inc
pusha
and
icebp
inc
mov
add
xlat
inc
push
push
or
jge
inc
push
inc
out
cmp
push
out
or
(bad)
cmp
or
out
jns
jae
leave
sub
sub
shr
outs
mov
in
sbb
lock
int
mov
xor
mov
mov
push
loopne
out
inc
idiv
xor
(bad)
push
mov
pop
mov
mov
inc
xchg
jmp
jg
test
cld
in
xor
jae
int3
ret
add
adc
fcomp
shr
dec
and
out
iret
sbb
cli
dec
push
out
pop
add
add
stc
out
xchg
cmp
retf
sub
out
cmc
aad
sbb
mov
jbe
sbb
add
(bad)
lahf
retf
or
fimul
fadd
(bad)
mov
call
cmps
sub
jmp
xor
mov
call
mov
sahf
adc
mov
cmp
mov
js
sbb
int
push
push
xchg
mov
sar
add
hlt
jecxz
and
aaa
add
fld
(bad)
inc
loop
iret
lds
pop
adc
fstp
jnp
pop
or
addr16
add
and
cmp
loop
inc
mov
in
dec
neg
repnz
retf
adc
mov
add
inc
push
mov
cld
aam
or
mov
xchg
mov
mov
jg
test
cmp
lock
xor
push
cwde
add
mov
xlat
dec
cwde
std
mov
adc
push
shl
push
movs
cmp
icebp
xchg
sbb
in
repz
leave
dec
fstp
pop
jecxz
pop
xchg
cs
in
in
div
fbstp
test
push
xchg
in
lock
dec
out
add
push
mov
sbb
push
jne
femms
mov
push
enter
mov
xchg
in
sbb
jmp
in
(bad)
(bad)
cmp
(bad)
adc
fdiv
popa
out
lds
push
or
mov
or
mul
mov
push
ds
xchg
mov
jae
xchg
or
outs
aas
push
adc
pop
arpl
clc
in
fs
mov
cmp
and
mov
(bad)
push
fwait
xchg
push
dec
test
dec
out
mov
loope
cmps
xchg
enter
dec
dec
and
iret
fsubr
(bad)
hlt
inc
jl
adc
mov
push
or
rol
jae
ror
(bad)
xchg
jecxz
xor
push
and
mov
cmp
cmc
mov
adc
pop
imul
xor
xchg
or
daa
mov
int
shl
mov
movs
jbe
fwait
pushf
sub
lahf
imul
bound
ss
fadd
and
lds
xchg
mov
mov
cmp
cmp
lods
and
adc
xchg
jb
retf
repnz
add
mov
shr
sub
sbb
mov
dec
dec
jecxz
push
mov
pop
jle
push
adc
mov
or
push
scas
fsubr
adc
xor
jecxz
push
sahf
push
repnz
cmp
mov
retf
loopne
icebp
mov
jmp
in
es
(bad)
rol
jnp
jmp
dec
and
cs
push
jl
sub
scas
push
sub
mov
and
jo
jmp
mov
pusha
cmp
pop
cli
pusha
jno
mov
loopne
mov
repz
xchg
adc
shr
mov
jb
aad
sahf
mov
div
(bad)
pop
push
jmp
sbb
mov
or
push
les
cmp
xchg
pop
lds
dec
ins
xor
inc
into
mov
mov
mov
pop
adc
lds
push
shr
push
and
add
cmps
cs
out
enter
out
in
mov
(bad)
fdivp
sub
iret
xor
and
fdiv
mov
into
push
inc
pop
(bad)
out
sub
scas
test
rol
and
push
bound
mov
arpl
sbb
pop
jmp
loope
arpl
test
movs
jb
loope
cs
repnz
(bad)
loope
push
jb
iret
jne
rol
ret
jecxz
and
xor
sar
sti
enter
scas
inc
nop
pushf
adc
imul
in
lods
dec
mov
sub
mov
popf
inc
jle
pushf
push
mov
mov
test
orps
repnz
nop
in
enter
shr
jb
or
mov
pop
sti
test
adc
mov
aam
mov
mov
loopne
sar
pop
(bad)
(bad)
xor
xlat
cmp
cmps
lods
jns
cli
push
mov
jmp
retf
xchg
in
cmp
fcmovnb
adc
cmp
cli
xchg
call
retf
jno
cmp
mov
es
(bad)
mov
test
mov
enter
xchg
ret
mov
jb
icebp
inc
imul
mov
or
mov
(bad)
mov
popa
jmp
iret
cmp
cli
out
jmp
mov
lods
int3
es
retf
push
sbb
call
and
xlat
adc
test
pop
dec
dec
repz
out
xchg
and
mov
rcl
fst
or
mov
and
aam
cs
movs
ror
fcomp
fwait
mov
test
and
sbb
pop
dec
das
fidivr
in
xor
cmps
lods
loop
scas
push
fcom
in
pop
lds
in
add
pop
call
out
cmc
(bad)
shl
(bad)
sti
xchg
retf
push
fdiv
fdiv
fiadd
lea
mov
jle
xchg
cs
and
inc
call
xchg
cs
dec
push
sub
(bad)
ins
mov
pop
inc
fisub
add
mov
mov
xor
movs
je
or
sub
outs
xchg
push
scas
or
push
xor
imul
push
int
sbb
mov
loope
sbb
fwait
cs
add
in
mul
cmp
call
int3
fsub
pop
jle
imul
stos
push
test
xor
adc
test
cmps
jnp
adc
sub
xor
iret
xor
pop
neg
jnp
pop
push
fst
xor
cmp
repnz
push
cwde
sbb
cmp
scas
pusha
mov
push
xchg
cli
(bad)
add
cmps
scas
int
popf
aaa
outs
call
cmc
jecxz
xor
mov
retf
add
lds
adc
mov
add
out
sbb
cmp
cmp
call
shl
(bad)
jle
push
push
and
loope
push
pop
(bad)
in
rsqrtps
xor
lea
or
(bad)
sub
popf
add
dec
in
ss
mov
mov
dec
add
jns
mov
mov
ror
aaa
pushf
(bad)
(bad)
hlt
out
pusha
repnz
pop
mov
and
push
pop
and
sub
push
sub
gs
fist
cmp
inc
rcl
fcom
stos
daa
dec
popa
jecxz
rcr
arpl
push
int3
and
lahf
push
fnstcw
cld
dec
sbb
int3
mov
clc
call
xchg
pushf
stos
rcl
test
add
outs
push
push
mov
inc
out
pop
sbb
(bad)
(bad)
lock
aaa
mov
imul
pop
lock
adc
rol
push
(bad)
add
pop
and
(bad)
xchg
mov
jno
fnstcw
dec
jbe
mov
dec
arpl
push
cmp
lods
test
lea
fstp
cmps
add
int
sub
inc
in
mov
push
scas
and
ss
shl
push
inc
nop
cmp
out
cmp
inc
push
xchg
dec
inc
mov
jne
dec
adc
ror
fwait
inc
push
(bad)
clc
movs
clc
fsub
cmc
jg
sub
adc
nop
push
xchg
xor
mov
fsubr
ror
imul
cmp
jae
ror
mov
stos
pop
cs
xchg
mov
pop
addr16
mov
pop
jne
mov
xor
xchg
mov
sub
int3
scas
rol
xor
popa
and
inc
jbe
stc
js
fwait
dec
cmp
lods
mov
arpl
out
ins
movs
cli
loop
cmps
call
xor
inc
jno
or
dec
fnstenv
cli
sub
cld
bound
test
sbb
mov
cs
mov
adc
cmp
push
add
sub
in
pop
out
cmp
jg
push
mov
das
xor
jmp
ss
pop
mov
mov
in
fisttp
cmp
mov
cmp
push
popf
lock
pop
loope
xor
sub
adc
adc
dec
sub
(bad)
loopne
cmps
jle
add
mov
es
pop
jne
push
xor
mov
mov
dec
bound
aad
inc
mov
jnp
pop
inc
ret
pop
jo
xor
pop
add
fs
bound
pop
cmp
popf
aam
retf
fistp
das
or
dec
loope
pusha
xchg
out
(bad)
fcomi
adc
les
out
adc
mov
cmps
adc
dec
or
and
xchg
xor
je
mov
(bad)
fucomip
mov
int3
jmp
pop
in
daa
test
pop
xchg
hlt
imul
xor
jmp
lds
mov
std
std
sbb
fwait
xchg
mov
lods
call
pop
shr
and
jle
or
lea
add
cmp
cmc
xchg
jmp
leave
sub
cmp
adc
and
cmp
mov
xchg
push
fmul
or
ja
iret
or
lds
fistp
nop
mov
cmp
cmp
jne
cdq
inc
pop
mov
outs
jnp
add
pop
out
jbe
mov
mov
and
pop
mov
scas
test
and
jmp
fimul
popa
mov
loope
xchg
(bad)
sub
pop
out
shl
fld
push
movs
push
faddp
add
(bad)
cmp
or
sar
and
jns
mov
mov
push
cmp
xchg
retf
js
cmp
dec
popa
xor
add
xor
aaa
sbb
inc
popf
mov
jmp
pop
pop
pop
inc
imul
xchg
(bad)
ins
nop
and
mov
dec
test
sbb
or
jge
and
lods
dec
inc
sar
shr
in
jmp
mov
fdiv
cmp
jbe
shl
mov
cli
(bad)
push
fistp
pop
jmp
mov
sahf
jns
pop
retf
sar
or
imul
xor
add
imul
pop
scas
or
xor
jb
test
pop
loop
movs
cmp
sahf
sub
mov
imul
mov
add
cmp
cmc
jns
mov
xor
cmp
push
js
rcl
mov
mov
call
test
cmp
mov
icebp
(bad)
pop
into
xor
sbb
xchg
ds
(bad)
imul
inc
push
fild
sub
mov
movs
cmp
fs
retf
xchg
sub
aam
and
mov
inc
pop
sti
addr16
in
mov
mov
inc
fimul
fldenv
inc
jmp
das
les
pop
out
add
push
mov
and
aas
sbb
gs
repnz
into
(bad)
movs
mov
add
pop
test
mov
jp
push
xchg
mov
inc
pause
(bad)
jmp
out
aas
enter
mov
imul
inc
mov
mov
lods
iretw
inc
inc
ins
xor
ds
jb
mov
(bad)
dec
dec
scas
add
fist
popa
cli
int
pop
fwait
ja
pmaxub
add
adc
pop
test
cli
mov
rol
xor
stc
pusha
mov
(bad)
push
sub
hlt
pop
outs
mov
adc
cmc
xchg
sete
push
jnp
jp
and
iret
push
or
jmp
dec
lahf
(bad)
push
iret
test
mov
hlt
setae
xor
das
mov
mov
movs
inc
pop
es
fisub
lea
xor
ins
jne
fnstcw
js
or
add
gs
imul
lock
(bad)
loopne
mov
scas
stc
or
mov
cli
push
and
clc
pop
and
sbb
js
fnstsw
xchg
out
push
not
jmp
or
push
(bad)
cdq
push
add
jg
jmp
mov
or
sahf
stos
jno
jo
sub
xor
aam
outs
push
loope
out
push
sub
movs
daa
jecxz
sub
jg
sbb
call
imul
test
outs
mov
dec
(bad)
ins
mov
xor
add
(bad)
cmp
xor
pop
into
idiv
sbb
push
cmps
sbb
push
sub
or
jnp
imul
add
xchg
jp
add
dec
and
and
retf
pop
pop
cli
push
pusha
dec
out
cli
pop
sub
xor
cld
fwait
push
dec
dec
mov
inc
push
xchg
test
(bad)
nop
pop
cdq
mov
mov
test
inc
les
std
push
sbb
push
lods
inc
outs
sahf
repnz
leave
inc
push
in
dec
adc
movs
dec
dec
mov
xchg
push
push
adc
lds
pop
sar
cwde
dec
cmp
lock
push
retf
adc
mov
or
mov
out
das
out
dec
mov
and
mov
push
shl
inc
mov
aas
hlt
mov
push
aad
sbb
inc
pop
adc
push
mov
test
inc
adc
push
scas
and
mov
mov
mov
aam
dec
shl
stc
push
xchg
dec
sub
test
pop
pop
ds
pop
repnz
(bad)
mov
xor
scas
push
or
inc
sub
inc
sub
or
jb
dec
jns
fcmove
ret
mov
xchg
rol
call
ja
int
(bad)
ja
jmp
mov
dec
or
mov
push
arpl
push
sahf
jnp
out
xchg
sub
cwde
adc
pop
leave
mov
xchg
sbb
pushf
mov
push
add
aas
test
lock
ins
jb
sub
push
pop
out
fcmove
sti
and
xchg
lea
outs
std
jns
or
mov
data16
push
(bad)
xchg
dec
fidiv
push
or
mov
mov
add
adc
mov
add
sbb
les
jl
inc
movs
push
lods
mov
dec
daa
or
xchg
sbb
dec
jns
into
mov
xor
sbb
add
jmp
sub
jge
fisub
daa
pop
fs
lds
rcl
adc
lahf
loope
xchg
cmp
adc
es
scas
or
mov
int3
cdq
dec
xor
mov
ja
movs
test
sbb
test
pop
aas
loop
leave
(bad)
aam
sub
sub
out
bound
xchg
sbb
mov
call
scas
inc
dec
mov
jb
push
imul
lods
repz
sbb
enter
xchg
pop
sub
ret
sub
mov
in
scas
xchg
shl
push
xchg
xchg
out
sti
dec
jbe
push
push
xchg
and
inc
or
cld
add
or
and
shr
xchg
dec
scas
mov
or
adc
adc
sub
cmps
cmc
call
nop
icebp
jp
mov
cmps
jne
mov
jmp
pop
ja
mov
ds
jo
arpl
cmp
outs
jg
bound
or
xor
mov
pop
(bad)
mov
xlat
mov
sbb
pusha
jns
jmp
lds
mov
ins
mov
test
mov
xchg
idiv
push
arpl
mov
xor
fdivp
jae
sti
pop
jns
mov
dec
pop
test
cmp
lods
outs
mov
dec
mov
jb
push
(bad)
aam
in
dec
mov
and
sbb
push
fild
sub
push
outs
pop
pop
rcr
mov
pop
dec
inc
stos
dec
cmp
mov
mov
sbb
int3
out
mov
stc
gs
aad
es
imul
lds
or
xor
out
mov
cmps
add
sbb
adc
pop
mov
mov
jmp
fs
add
or
ins
jecxz
adc
mov
cmp
ja
fimul
in
ins
push
mov
sub
jne
pop
adc
pop
push
lock
fistp
ds
outs
inc
cli
mov
data16
lahf
push
jp
sti
and
fwait
inc
das
adc
xor
adc
xor
dec
push
mov
jmp
dec
and
lea
jp
rep
sub
lods
rcr
inc
int
shl
jb
js
retf
mov
cmps
cmp
leave
imul
ret
ret
xor
frstor
mov
inc
adc
dec
push
dec
xor
mov
mov
mov
mov
or
pop
and
shl
seta
test
mov
out
or
add
jl
jo
jbe
idiv
test
(bad)
pop
adc
push
bound
jns
sbb
fbstp
rol
fidivr
or
sar
or
leave
div
mov
adc
xchg
mov
inc
add
push
xor
nop
xchg
or
cmp
mov
mov
xor
adc
dec
mov
(bad)
xor
leave
mov
shr
out
adc
jle
add
repz
xchg
pop
xchg
aas
cmp
jmp
lds
wbinvd
les
inc
push
aas
popf
(bad)
frstor
adc
dec
jo
jno
fdiv
xchg
popf
pop
sub
inc
out
rcl
mov
sub
jo
shr
sahf
jmp
in
mov
retf
mov
stos
mov
push
cmp
aad
mov
scas
dec
add
movs
js
xchg
pushf
pop
ja
xchg
mov
jmp
pop
icebp
push
jns
sub
pop
adc
shl
mov
push
popf
lods
or
fst
mov
fs
mov
lahf
jns
jle
imul
lahf
movs
pushf
pusha
cwde
add
call
push
jno
cmp
add
es
cli
cmps
imul
(bad)
and
adc
mov
lock
loope
add
pop
dec
(bad)
fs
lods
les
and
adc
fst
test
sub
dec
cli
mov
lods
pop
sub
outs
or
sub
fld
inc
sti
pop
cld
movs
sbb
push
push
mov
mov
cs
test
inc
sbb
rcl
mov
movs
jae
adc
pushf
stc
test
sti
adc
pop
enter
jns
call
mov
shl
push
mov
sbb
xchg
arpl
sar
pop
retf
aad
mov
lahf
mov
push
fwait
pop
sub
jbe
sbb
fisubr
sar
push
sbb
adc
cmc
adc
cli
mov
cmp
cmp
push
fbld
add
jbe
shl
cmp
jmp
add
out
(bad)
xor
das
add
cmp
shl
xchg
ror
sbb
mov
xchg
push
add
mov
lods
inc
jmp
sbb
jl
push
sbb
push
repz
xchg
cli
push
cmps
jl
or
ja
push
mov
bound
inc
ret
pop
sub
sti
add
adc
push
fs
jmp
pop
out
push
xchg
dec
sbb
mov
sub
das
xor
xchg
(bad)
hlt
inc
stos
add
movs
outs
push
mov
call
cmc
sahf
bound
push
test
mov
in
xor
inc
popa
push
movs
jecxz
inc
dec
xor
(bad)
mul
sbb
in
lahf
mov
cli
fidivr
sahf
adc
mov
in
push
cmp
xchg
push
fwait
adc
stos
sub
or
cmps
jg
sub
or
loope
call
inc
ins
inc
aad
cld
cmps
and
mov
adc
dec
and
inc
fwait
add
add
xchg
cmps
imul
cdq
stc
mov
in
inc
ficomp
mov
push
call
inc
lds
xchg
retf
std
jge
push
aad
es
sub
dec
dec
and
sbb
xlat
(bad)
jecxz
or
fs
or
mov
mov
or
ror
dec
and
aam
(bad)
adc
pushf
test
iret
repnz
test
rcr
sti
jg
fwait
test
(bad)
mov
inc
stos
les
adc
jmp
ds
jbe
aaa
mov
jg
loop
jge
ja
lods
jge
(bad)
or
cdq
cld
and
popf
push
and
cmp
mov
cmp
and
xor
pop
xor
mov
xor
and
xchg
icebp
adc
and
dec
aas
sub
push
inc
scas
stc
mov
or
repz
push
gs
(bad)
jecxz
daa
pop
push
adc
mov
fucom
daa
mov
out
sbb
cdq
sub
and
daa
cmp
mov
cli
retf
sub
inc
cld
adc
(bad)
rcl
test
pop
loopne
(bad)
adc
loopne
lds
mov
mov
test
cmps
adc
imul
repnz
or
sub
push
cmp
push
inc
movsx
and
xor
test
mov
test
mov
pop
loopne
jae
mov
mov
pop
ss
int
aam
sub
cmp
mov
(bad)
dec
and
or
xor
movs
jne
and
pushf
sub
scas
mov
imul
loopne
in
adc
cmc
pop
inc
aad
out
mov
xchg
xchg
mov
push
push
jmp
loopne
xchg
rcl
xor
adc
mov
mov
(bad)
cmp
jne
(bad)
sub
add
mov
sti
xor
and
pop
mov
fadd
mov
(bad)
cmovge
push
jg
cmp
add
std
int
mov
jmp
and
test
jnp
inc
hlt
mov
hlt
dec
adc
ins
call
imul
idiv
sbb
add
xor
dec
lods
jp
in
das
add
push
xchg
dec
js
enter
jns
jo
imul
ss
fnsave
adc
fild
fimul
cld
ins
xor
call
shr
lock
xor
and
jge
fimul
mov
sar
or
icebp
xlat
popa
jg
xchg
push
(bad)
sahf
nop
mov
inc
xchg
cmp
jmp
aaa
fistp
aaa
pop
imul
push
and
mov
out
cwde
mov
pushf
fwait
xchg
mov
push
das
test
mov
ins
icebp
lock
push
jo
push
scas
cmc
inc
jge
ret
mov
jno
aaa
jmp
mov
popf
int3
stc
out
inc
je
xchg
es
mov
mov
scas
(bad)
lods
aaa
dec
sub
cmp
sbb
pushw
mov
jmp
inc
ins
je
push
jl
push
test
fimul
dec
jmp
adc
je
cld
mov
imul
rcl
jbe
dec
test
xchg
push
jae
xor
push
mov
mov
rcr
pusha
mov
pusha
aaa
sub
xor
je
lods
or
je
xlat
jmp
mov
sub
stos
pop
lock
fs
xchg
pop
mov
loope
retf
jmp
in
adc
pusha
mov
(bad)
aas
sahf
xchg
pop
mov
stos
dec
mov
push
push
pop
xchg
jl
movs
xchg
ret
jmp
call
or
pop
mov
dec
mov
std
dec
and
mov
sbb
mov
cmps
adc
cmps
push
push
daa
dec
push
inc
ins
(bad)
sbb
push
std
add
sahf
sar
shl
bound
push
mov
shr
(bad)
int3
inc
(bad)
(bad)
sbb
out
push
jo
add
nop
mov
fcomp
or
xor
daa
push
fs
cmp
or
sbb
test
push
mov
xor
fbld
sbb
stc
(bad)
retf
jp
mov
mov
xchg
addr16
or
pop
imul
retf
fwait
xor
ror
imul
pop
dec
and
push
cdq
mov
mov
ret
pop
ja
aad
jmp
and
lods
mov
pop
imul
jecxz
lahf
call
and
sahf
add
xchg
fbstp
mov
cmp
popa
push
mov
loopne
lock
outs
mov
in
lock
mov
mov
out
xchg
pop
mov
cld
ror
jecxz
xchg
fsub
push
push
ret
jo
mov
fisttp
fcmovne
jae
stc
aam
int3
scas
dec
dec
inc
call
cld
sbb
ret
es
xchg
pop
xor
mov
dec
repnz
lea
aad
fcmovnu
nop
jecxz
cmp
ins
lahf
(bad)
jns
test
pop
fwait
addr16
dec
outs
xchg
in
cmps
outs
push
adc
mov
sub
mov
outs
mov
stos
push
xchg
xor
fidiv
mov
xchg
add
psubusw
jae
or
xchg
cwde
mov
fs
or
jmp
aad
dec
xchg
mov
sub
(bad)
pusha
sub
mov
icebp
int
scas
xor
pop
add
or
push
mov
out
mov
ja
fist
xchg
sahf
dec
dec
test
fidiv
jle
adc
adc
movs
cmp
add
imul
out
retf
imul
dec
je
xchg
(bad)
adc
dec
outs
adc
int
test
loope
push
mov
and
or
push
push
loop
inc
xchg
xchg
jo
push
inc
xchg
stos
inc
scas
jmp
adc
xchg
inc
scas
xchg
ins
scas
(bad)
out
fbld
mov
retf
dec
mov
push
loopne
adc
ret
ins
sbb
aaa
jg
add
or
loope
inc
xor
ret
and
pop
loope
test
lods
xor
mov
sbb
fwait
cmps
repnz
mov
in
jbe
(bad)
rcl
sub
dec
aam
fstp
jl
pop
push
(bad)
xlat
mov
repz
xchg
sub
loope
push
cmp
push
popa
out
loope
adc
sbb
aaa
int
and
lds
ror
shl
or
xor
data16
and
xchg
ss
aam
or
ins
xor
lds
pop
out
movs
jle
dec
sub
bound
out
mov
pop
dec
mov
pusha
ficom
jp
push
int
pop
fst
mov
xchg
sub
cmp
sbb
add
scas
dec
dec
cmp
(bad)
(bad)
cmps
in
sti
inc
aad
push
mul
int
cdq
or
scas
mov
ins
pop
bts
js
inc
inc
push
retf
in
loop
repz
fdiv
and
in
and
dec
das
movs
pop
mov
cmp
push
pop
cmp
jle
xchg
mov
cmps
fmul
pop
test
movs
std
test
dec
in
fsincos
jecxz
push
jae
pop
ss
xchg
call
inc
icebp
fcomp
push
or
loope
int3
sbb
mov
rcl
popa
cmps
in
ds
hlt
pop
mov
addr16
ins
jbe
ja
data16
pop
inc
add
adc
cmp
shl
dec
jbe
or
mov
lds
push
inc
aam
sub
scas
leave
jb
test
xor
scas
push
xchg
(bad)
in
sub
js
lock
xchg
ror
stc
pop
cwde
inc
push
push
(bad)
lock
sub
sub
inc
xor
ja
enter
sti
pushf
mov
fstsw
mov
push
xchg
sahf
popa
jmp
dec
or
sti
jnp
ret
pop
push
add
push
test
cmps
push
dec
xor
out
in
fisttp
loope
mov
scas
jo
jmp
jns
mov
pop
es
in
cli
adc
jmp
inc
stc
stc
pop
sub
jmp
jns
push
cmp
addr16
jnp
mov
mov
int3
imul
push
loope
sbb
jecxz
mov
fld
repz
xlat
(bad)
cli
mov
cmp
into
data16
xchg
retf
movs
add
gs
cmp
adc
bound
(bad)
std
cmps
mov
ret
mov
data16
jnp
push
push
lods
dec
push
cmc
push
aam
pop
outs
pop
cli
cmp
mov
scas
mov
fistp
sti
sar
in
sbb
inc
xlat
mov
(bad)
fdivr
scas
mov
fimul
cmps
jmp
cdq
les
fcmove
dec
xlat
loope
dec
sbb
in
inc
jl
fild
mov
mov
xchg
adc
repnz
xchg
push
mov
mov
outs
jmp
das
mov
push
or
movs
xchg
or
js
jbe
cld
and
lds
inc
mov
enter
mov
in
je
jge
das
bound
lods
mov
xchg
inc
xchg
fincstp
sbb
std
jo
push
rcl
arpl
dec
iret
dec
push
call
mov
mov
fcmovu
sahf
lods
inc
pusha
add
jo
adc
adc
lods
loope
xchg
add
out
cli
jnp
mov
fstp
xchg
xor
mov
mov
jmp
mov
jb
pop
jnp
sbb
daa
call
lds
sbb
repnz
and
bsr
dec
jl
retf
mov
cs
gs
jo
inc
pop
xlat
or
icebp
push
jb
jbe
mov
push
sub
xor
movs
ins
inc
dec
sbb
cdq
daa
xchg
loopne
pusha
xor
xchg
jo
jle
jmp
xor
or
xchg
inc
out
jns
xchg
inc
sub
shr
std
push
xor
add
cld
pop
fbld
push
fsub
int
lods
mov
out
inc
dec
dec
mov
add
les
mov
mov
enterw
mov
mov
add
mov
add
lock
movs
fidivr
lods
jno
jnp
pop
push
call
mov
cmp
xchg
pop
loope
cmps
mov
js
inc
push
lods
data16
sbb
sahf
xchg
shl
leave
or
fisttp
mov
sti
sbb
loop
sbb
std
iret
out
shl
loopne
in
adc
mov
and
push
sub
loope
fstp
push
rcl
inc
ss
call
into
dec
mov
jae
out
xor
lock
and
stos
inc
cdq
loop
add
push
adc
mov
pop
push
mov
push
jmp
mov
loop
scas
xchg
push
sahf
add
mov
mov
leave
pop
sub
mov
int3
shr
jno
daa
gs
or
cmps
(bad)
jnp
dec
out
scas
js
cmp
stos
movs
mov
div
mov
add
mov
cld
dec
loope
pop
aad
or
daa
mov
cmovge
jle
cmp
mov
mov
xchg
fstp
cdq
stc
mov
jne
sub
pop
dec
scas
mov
js
shl
(bad)
or
mov
repnz
or
xor
pusha
sub
int3
test
dec
jo
leave
popf
addr16
pop
cmp
popf
test
scas
jle
or
fld
mov
loop
call
xchg
push
jge
mov
(bad)
out
daa
jg
bound
dec
sub
and
scas
mov
out
jmp
jns
fcomip
xchg
ja
mov
out
pop
mov
dec
ins
mov
mov
jmp
dec
adc
(bad)
movs
and
sbb
(bad)
imul
mov
je
arpl
jns
pop
sti
in
or
scas
call
out
xchg
pop
fnsave
addr16
jae
scas
ins
jmp
push
or
or
mov
pop
popf
enter
iret
dec
adc
or
out
sbb
nop
outs
and
jne
xor
fsubr
stos
test
mov
lahf
shl
sbb
fcom
add
aas
imul
sub
lods
aam
sbb
stos
push
cld
sbb
cmps
ds
fist
aam
pop
das
jbe
fistp
popa
add
or
stos
add
adc
or
mov
jp
adc
jo
sar
jb
or
es
push
int
add
push
call
push
pop
mov
add
or
cdq
mov
push
pop
or
ss
lock
out
mov
xchg
in
stos
mov
mov
add
or
jl
pop
pop
and
bound
xchg
ja
fdivrp
in
in
inc
push
mov
sub
retf
fadd
cmp
mov
fdiv
popf
push
and
xor
loopne
cmp
mov
popa
movs
mov
mov
pop
jge
pop
xchg
ror
inc
test
imul
fwait
adc
loop
sbb
lods
stc
iret
pop
sub
enter
xchg
aad
push
xchg
popf
inc
stos
sti
in
cld
dec
xor
jno
(bad)
mov
pop
imul
jae
in
mov
popa
test
stc
jb
inc
jns
(bad)
imul
jl
xor
push
mov
jb
xor
cmp
shr
dec
fcmovnbe
sub
inc
xor
mov
dec
xor
sbb
fwait
mov
and
or
push
sbb
test
or
lahf
les
retf
or
add
mov
mov
sti
pop
in
cmp
int3
push
mov
ret
in
lods
pop
stos
mov
xchg
push
hlt
add
cld
inc
ja
in
fmul
cs
add
adc
dec
mov
loop
iret
sub
js
sub
iret
sbb
add
movs
int
dec
stos
mov
add
cmp
(bad)
dec
add
jbe
push
adc
sub
stos
and
add
jae
sbb
aas
fcomp
add
push
add
dec
jge
and
je
popf
cwde
xor
outs
gs
jge
inc
cmp
arpl
xchg
das
or
fwait
sti
repnz
aam
xor
push
repz
(bad)
in
xor
int
xor
mov
pop
adc
ror
es
addr16
lods
add
adc
shl
mov
push
sub
in
fild
frstor
bound
ror
sbb
dec
mov
push
outs
mov
and
sbb
sub
loopne
push
cld
ficomp
adc
mov
ins
mov
sub
add
lock
cs
or
inc
xchg
xor
imul
push
sub
bound
sbb
sub
and
(bad)
cmp
pop
cmp
xor
into
jg
aad
loopne
inc
nop
push
test
retf
xor
mov
cmp
adc
or
stos
xchg
pop
aam
lods
push
xchg
push
out
pushf
fsub
js
jp
in
mov
push
pop
int
aas
mul
cmp
dec
daa
std
movs
inc
sbb
ficomp
sub
cmc
add
pushf
cmp
jns
scas
sub
scas
xlat
(bad)
cmp
cwde
jge
imul
cmp
pop
add
add
leave
mov
cmp
push
lds
jmp
mov
adc
mov
jbe
push
push
mov
mov
and
dec
dec
pusha
call
addr16
adc
jbe
inc
push
sbb
lods
xor
push
fld
pop
pop
dec
jp
sbb
push
mov
js
hlt
(bad)
dec
sbb
mov
mov
leave
loope
inc
xor
mov
pop
push
gs
in
and
xchg
jmp
mov
push
cmc
inc
cmp
outs
adc
and
aam
rol
inc
jns
adc
xchg
mov
pop
xchg
enter
mov
popf
cmc
push
mov
ds
mov
sti
sbb
pop
outs
dec
mov
cdq
aad
cdq
xchg
nop
inc
sahf
mov
imul
cmp
push
mov
into
in
call
jbe
lock
or
fwait
xchg
pcmpeqw
cli
inc
sub
in
les
iret
mov
out
icebp
repz
mov
nop
and
inc
jbe
jb
jo
lods
xor
jne
push
(bad)
repnz
mov
inc
ret
aad
jnp
les
add
leave
adc
sub
push
(bad)
lods
sbb
mov
fistp
mov
retf
pop
mov
inc
test
movs
cmps
xor
in
push
idiv
push
mov
mov
xor
ss
mov
xchg
outs
and
jge
bound
ficomp
ror
pop
inc
cmc
std
sbb
lahf
aad
fwait
movs
retf
dec
fld
into
loope
cmp
retf
mov
inc
mov
lods
retf
jno
bound
push
les
cmp
outs
jo
call
test
pop
xor
pop
ins
inc
mov
fisub
imul
mov
dec
sbb
inc
stos
jle
dec
sub
test
sbb
pop
out
(bad)
in
jmp
sub
xchg
push
xchg
push
or
dec
loop
les
mov
cwde
mov
(bad)
daa
out
in
clc
ins
sbb
pop
(bad)
repnz
pushf
(bad)
jle
sub
mov
call
push
ds
sbb
mov
movs
dec
mov
ins
scas
popf
pusha
outs
fwait
lsl
addr16
sbb
test
and
loope
sbb
lods
mov
outs
push
cdq
jns
in
jmp
mov
cld
repnz
xchg
stos
xlat
sbb
fnsave
repz
daa
test
or
ins
(bad)
arpl
sub
mov
xor
cs
adc
mov
push
enter
retf
cmp
jae
pop
sahf
push
adc
stos
enter
(bad)
idiv
sbb
cmc
mov
js
imul
ret
scas
sbb
inc
dec
push
outs
cmovg
mov
jp
inc
push
add
adc
mov
jp
lock
xlat
nop
sbb
mov
popf
sar
or
les
add
test
cmp
movs
add
fist
lock
(bad)
or
outs
dec
jae
cwde
cmp
out
icebp
adc
mov
out
and
fnstcw
dec
jl
jp
dec
stos
aaa
xchg
mov
enter
sbb
test
jmp
int
fbstp
fwait
leave
out
sub
nop
daa
cdq
scas
(bad)
movs
sub
xchg
xchg
pop
mov
or
xchg
and
jmp
mov
out
sub
stc
push
adc
or
pop
pop
xor
mov
sti
(bad)
push
mov
cmp
das
dec
mov
dec
test
into
xor
mov
inc
and
mov
stos
mov
inc
xchg
xor
popa
sub
jbe
test
aaa
push
test
mov
rdpmc
shr
std
pop
sub
mov
mov
and
push
ds
mov
mov
cmp
cmp
mov
jp
inc
fsubr
inc
pop
mov
jg
and
daa
pop
dec
nop
(bad)
mov
mov
sub
mov
pop
adc
pop
repnz
test
mov
out
sub
rcr
shl
mov
mov
mov
xor
outs
mov
mov
jae
loopne
xor
push
mov
push
cs
shr
call
rol
add
jmp
mov
test
jnp
jg
es
inc
int3
lea
ja
or
dec
movs
outs
test
jg
pop
jne
cdq
pop
sub
shr
outs
mov
jnp
icebp
clc
sahf
and
mov
xchg
stos
jnp
pop
jge
inc
(bad)
sti
mov
mov
xor
cmp
push
fadd
cmp
pop
mov
cmp
repz
and
adc
dec
in
mov
aaa
xchg
retf
std
add
xchg
xchg
mov
mov
sbb
adc
jnp
xchg
nop
lods
ret
add
es
pop
xor
jmp
pop
lods
jno
stos
pop
or
fisub
cld
add
add
imul
jbe
scas
push
push
or
call
shr
inc
(bad)
mov
aas
psubsw
mov
cld
sbb
imul
inc
(bad)
ins
data16
jecxz
scas
dec
fisttp
ret
stos
ror
or
mov
xlat
call
inc
retf
sahf
push
in
jmp
pop
push
test
inc
clc
add
jo
pop
and
xchg
mov
add
test
jae
xchg
or
xor
sti
gs
push
mov
jns
push
loop
fdiv
inc
lahf
stc
fld
add
push
adc
xlat
retf
(bad)
jns
mov
mov
sbb
or
daa
(bad)
jecxz
and
je
shr
mov
cli
sahf
pushf
dec
cmp
xor
std
mov
xor
popf
lahf
aam
push
cwde
stc
test
inc
jmp
mov
inc
sbb
fdivp
mov
cmp
test
jns
in
aas
jo
retf
shr
inc
or
pop
pop
into
mov
ret
push
ja
xchg
retf
mov
xchg
mov
add
mov
pop
cmp
xchg
lahf
inc
pop
out
call
push
popa
push
mov
in
loope
adc
xchg
mov
push
add
pop
cmp
lea
int
xor
mov
ds
ficom
adc
mov
rcr
xchg
ss
lock
dec
(bad)
mov
cmp
xlat
daa
test
pusha
imul
(bad)
xlat
not
mov
sbb
ja
lea
in
gs
push
sti
pusha
inc
inc
mov
or
push
jmp
les
xor
loope
xchg
cmp
dec
xor
inc
push
adc
xlat
jg
or
sub
cmp
int3
(bad)
fcmovu
push
mov
ret
mov
pop
xchg
xor
adc
jns
int
icebp
xchg
cwde
jo
dec
aas
(bad)
dec
rol
sti
je
mov
or
jg
repnz
jge
xor
sbb
dec
dec
or
pop
sbb
popf
(bad)
jae
sbb
sbb
(bad)
hlt
mov
ficom
mov
dec
mov
int3
mov
cld
lock
leave
loop
sub
push
rcl
jg
scas
sbb
stc
add
jne
cwde
sub
cmps
mov
push
and
adc
adc
sbb
ret
(bad)
lods
sbb
mov
movs
xlat
cmp
out
enter
icebp
or
or
fsubr
push
push
and
pop
sbb
lahf
fist
xor
jnp
fild
stos
jmp
inc
mov
add
xchg
bound
mov
loopne
mov
sub
test
ffree
pusha
sti
pop
jp
nop
pop
mov
sbb
dec
stos
test
repz
outs
fdivrp
in
xlat
xchg
int3
add
pop
mov
cmp
js
dec
pop
int3
jae
inc
cmp
jno
push
repz
or
stos
stos
call
inc
dec
adc
cmp
shl
inc
jecxz
or
adc
pop
xchg
sub
shl
in
dec
sbb
sbb
ret
xchg
or
pop
jmp
push
pusha
addr16
pop
adc
mov
fadd
xchg
lods
cmps
loopne
inc
xor
mov
enter
inc
mov
dec
add
retf
lods
sbb
lock
sahf
in
xor
add
test
imul
xor
pop
ins
lds
enter
enter
mov
fstp
shl
mov
or
in
xor
aam
pop
dec
adc
adc
repz
fdivr
cmp
mov
(bad)
sbb
cs
or
sub
mov
jno
mov
mov
cmc
push
sub
cwde
in
rol
push
(bad)
fdiv
jp
leave
retf
push
mov
loopne
or
jg
and
adc
add
sahf
mov
push
movs
fdiv
add
adc
pop
lods
jmp
data16
inc
push
xlat
or
fimul
inc
add
inc
dec
jp
jecxz
mov
jecxz
mov
and
sbb
out
push
hlt
mov
repnz
cli
sub
daa
dec
mov
call
iret
dec
(bad)
mov
fst
mov
repnz
icebp
sub
pop
mov
mov
push
push
inc
cmp
stc
ins
xchg
outs
push
mov
jns
test
imul
frstor
xchg
xor
sub
mov
sahf
jle
push
pop
scas
dec
pop
mov
and
lahf
jp
(bad)
fiadd
out
stos
push
imul
scas
ins
xchg
ret
nop
jmp
cmc
mov
jl
pop
jnp
cmp
out
ja
ret
adc
fist
sub
cmc
push
inc
push
cmp
movmskps
data16
dec
jns
fs
xor
fs
icebp
add
push
sbb
(bad)
dec
(bad)
xor
loop
mov
sbb
test
sub
adc
in
lock
and
xor
aas
jge
jg
inc
lock
xor
call
push
(bad)
push
loop
sbb
cdq
and
ret
jmp
sbb
ins
xlat
in
mov
xor
pop
ror
iret
in
lods
xchg
mov
cmp
leave
or
sbb
mov
ret
pop
clc
mov
cmp
out
aaa
pop
mov
jge
stc
push
cmp
fisttp
bound
mov
movs
pop
xor
icebp
imul
xor
jo
mov
shl
xchg
dec
sbb
sub
call
psllw
add
repz
mov
ror
or
cld
cmp
(bad)
jo
js
xor
jb
pop
sbb
mov
jb
cwde
adc
lock
imul
in
int3
mov
fdivr
xor
adc
retf
add
jbe
add
mov
pop
push
jge
or
arpl
cmovne
push
jbe
repnz
daa
or
mov
(bad)
in
and
loop
hlt
stos
mov
pop
aas
cmp
cwde
xchg
ss
in
clc
dec
lock
jnp
push
and
and
xchg
adc
ins
jne
or
stc
test
lods
cmp
adc
lea
fs
shr
sbb
mov
lock
cdq
dec
ss
mov
icebp
add
sbb
rcl
test
idiv
in
cmp
cmp
and
add
cmp
jmp
mov
pop
adc
gs
cmp
push
aas
out
(bad)
adc
inc
and
mov
dec
enter
mov
or
shr
mov
mov
mov
mov
popf
xor
cmp
stos
push
repnz
fst
mov
call
fs
call
gs
mov
out
mov
ins
fcomp
mov
push
arpl
mov
into
xchg
sub
jmp
mov
mov
xchg
mov
sub
pop
das
mov
fcmovb
pusha
outs
xchg
pop
js
in
mov
jns
nop
shl
pop
stos
mov
int3
pop
inc
or
mov
adc
imul
stos
xchg
cmps
(bad)
retf
ds
or
imul
dec
fwait
jo
pop
push
(bad)
shr
mov
pop
or
mov
aas
sti
sar
sbb
shl
ror
push
xchg
xchg
dec
xor
ins
sahf
pop
repz
or
aad
adc
pop
jnp
jae
pop
add
rcr
xor
adc
std
xor
mov
in
push
fcmovnb
in
dec
jns
pusha
mov
out
daa
repnz
addr16
sub
sub
sbb
dec
pushf
lahf
inc
out
or
mov
jbe
ret
and
inc
xchg
lds
or
push
aam
xchg
loope
and
pop
inc
jnp
mov
addr16
lods
jns
std
sbb
aad
sub
lea
loop
paddsw
and
sub
push
xchg
aam
test
call
xlat
loopne
je
mov
inc
movs
stos
mov
and
xchg
js
push
or
push
shl
neg
retf
cmp
mov
add
mov
adc
sub
lahf
mov
xor
or
mov
pop
test
cmp
ret
cli
ins
cmp
jle
pop
dec
pop
cmp
add
imul
adc
jmp
inc
repnz
jo
sbb
cs
sbb
bound
call
mov
cmc
dec
push
in
mov
push
xor
jecxz
pop
repnz
xchg
gs
pop
popa
mov
cwde
(bad)
xor
xchg
and
or
xor
jg
fldenv
inc
icebp
loop
bound
and
mov
mov
xchg
push
ja
fisttp
aas
mov
repnz
mov
aaa
das
mov
neg
mov
pop
mov
xor
sub
std
in
sbb
jmp
mov
and
mov
cs
add
dec
scas
push
jp
cmp
rcr
adc
in
xchg
int3
jp
iret
xchg
std
ja
fsub
mov
dec
das
xor
push
or
add
push
es
inc
mov
adc
or
arpl
push
(bad)
xchg
dec
push
xchg
mov
lahf
enter
add
ins
outs
sub
inc
inc
jne
ss
mov
xor
je
xor
and
push
shr
inc
jbe
hlt
mov
into
push
push
ss
outs
cmp
mov
loopne
mov
hlt
fwait
pmuludq
pop
jecxz
xor
aaa
iret
adc
mov
clc
cmp
pop
push
and
jge
and
xlat
mov
jnp
leave
and
push
leave
xor
pop
mov
mov
mov
adc
repnz
mov
movs
jbe
ins
mov
hlt
(bad)
pop
pushf
loop
int3
fwait
std
fld
loop
enter
jb
pusha
test
test
clc
lds
test
pop
push
add
push
int3
xchg
test
xlat
shl
repnz
in
mov
leave
ins
fs
jle
(bad)
mov
inc
arpl
idiv
fld
fild
ret
lods
dec
add
frstor
push
test
outs
ffreep
mov
mov
in
jmp
jge
push
(bad)
jbe
(bad)
pop
es
xor
and
std
mov
les
xchg
dec
sbb
daa
dec
imul
mov
and
(bad)
and
jmp
icebp
arpl
xchg
pop
jno
push
cwde
popf
test
nop
cmp
xlat
scas
sbb
push
pop
test
jg
cmp
test
cmc
push
popf
mov
push
inc
pusha
and
jno
jbe
and
mov
fild
das
sahf
cmp
sahf
das
mov
bound
or
leave
stos
cmp
push
add
test
and
repnz
cmc
fs
mov
sub
(bad)
and
and
cmp
ja
(bad)
popa
(bad)
xlat
hlt
pop
cmc
(bad)
jb
dec
add
jbe
and
arpl
es
repz
lds
xchg
in
push
adc
test
inc
mov
inc
or
std
ficom
arpl
adc
xchg
mov
dec
(bad)
pop
call
mov
and
sti
retf
cmp
iret
sahf
ficom
sub
fdivrp
pop
fwait
sbb
xor
sti
jne
jmp
hlt
mov
add
pop
in
dec
rcl
dec
outs
jb
in
fadd
fidivr
lods
rcl
cmp
call
jae
ret
xchg
retf
iret
cmps
adc
pop
and
lods
jns
and
sub
std
push
mov
icebp
ret
push
mov
ror
ret
pop
rcr
jp
cmp
test
stc
sbb
adc
les
add
es
pop
dec
inc
pop
push
add
jp
cmp
mov
pop
fs
icebp
aam
popf
xchg
or
in
jbe
and
add
push
lods
iret
mov
rcl
repnz
call
jp
fwait
scas
cmc
out
repz
mov
not
retf
push
jp
push
dec
sahf
push
xchg
lods
or
mov
sti
dec
mov
fisttp
jl
mov
sar
ror
pop
add
int
hlt
pop
(bad)
rol
ffreep
bound
es
scas
cmps
test
and
iret
pop
jnp
mov
dec
clc
jbe
fwait
cmp
lods
in
xchg
sub
pushf
dec
int3
push
push
xor
sbb
(bad)
xchg
pop
adc
stos
push
test
dec
mov
daa
cmp
add
das
lods
jmp
and
xor
pop
adc
mov
and
cmp
fsub
lds
mov
clc
dec
cmp
sahf
loopne
inc
add
push
dec
mov
fcomp
(bad)
xlat
or
fld
pop
dec
xchg
and
int3
in
imul
ds
fmulp
jnp
mov
fnsave
and
xor
or
jl
or
mov
cmp
add
ins
(bad)
std
sbb
jmp
add
mov
jecxz
inc
xor
repz
xlat
mov
cwde
out
test
cld
sahf
(bad)
sbb
or
cmps
lds
inc
cmps
add
mov
adc
sbb
mov
mov
or
lds
outs
cmp
arpl
iret
dec
(bad)
(bad)
call
mov
in
int3
or
fisttp
outs
jne
mov
loop
ds
cdq
xchg
gs
(bad)
(bad)
mov
mov
pop
dec
in
xor
je
(bad)
popa
sub
mov
mov
(bad)
imul
and
or
mov
cmp
pop
inc
inc
pop
push
jne
mov
or
mov
jge
push
jl
(bad)
mov
popf
sub
xchg
cdq
ror
pop
dec
push
xor
jmp
mov
sub
sub
fcom
push
mov
and
imul
fild
call
sub
sub
pop
push
push
into
push
cmp
fwait
cmp
jle
cmps
fwait
test
(bad)
dec
loopne
jae
jmp
sub
push
ficom
push
mov
sbb
jp
imul
add
outs
and
scas
xor
ins
fsub
push
test
nop
mov
pop
sub
leave
xchg
cmc
sbb
sahf
inc
mov
in
jecxz
stos
dec
test
ja
(bad)
mov
retf
es
push
pop
jecxz
push
das
mov
xchg
clc
jno
mov
cmps
pop
add
push
popa
inc
push
jnp
xor
push
adc
mov
or
inc
mov
jns
fmul
dec
out
xchg
retf
dec
mov
xchg
aaa
shl
fucom
jle
jno
ret
mov
adc
pop
inc
mov
test
stos
sahf
or
mov
pextrw
jne
sbb
clc
test
mov
cmp
mov
ins
adc
test
mov
xor
movs
or
add
and
shl
clc
and
xlat
movs
xchg
push
and
cmc
sbb
loop
lds
mov
jo
xchg
jne
pop
mov
(bad)
js
(bad)
mov
pop
xlat
enter
mov
or
dec
fcmovu
pusha
fcom
sub
or
inc
cs
test
loopne
icebp
retf
inc
in
icebp
test
mov
xlat
pop
cmps
cmc
dec
dec
sub
push
sub
jns
and
outs
daa
mov
retf
int
fsub
pop
pop
ret
xor
icebp
xchg
(bad)
sub
daa
lods
xchg
addr16
cli
push
fdiv
inc
mov
leave
cmp
cmp
imul
dec
lds
sbb
mov
fild
pop
mov
mov
mul
add
stos
(bad)
sbb
mov
push
fnstcw
push
xchg
dec
mov
std
and
jbe
and
clc
xor
aam
sbb
jno
lods
lds
xor
pop
hlt
fcom
idiv
clc
stos
pop
out
pop
add
setge
sbb
mul
mov
add
push
lods
pop
sahf
outs
fs
jae
pop
add
pop
mov
outs
adc
int
and
outs
mov
call
cwde
and
ja
xor
push
repz
adc
add
mov
mul
add
stc
ja
jne
aam
mov
pop
push
xchg
xor
fwait
dec
lds
adc
mov
fwait
xchg
icebp
mov
mov
outs
jae
inc
cmp
jle
add
pop
dec
inc
sbb
(bad)
fimul
out
jmp
push
jae
mov
mov
ret
sub
fisttp
shr
dec
mov
pop
pop
enter
sahf
fbstp
loop
ds
sub
mov
fstp
sbb
xor
xchg
shr
dec
jno
adc
pusha
xchg
and
sbb
inc
xchg
mov
jns
jbe
stc
test
mov
sub
popa
pusha
jno
addr16
mov
push
popa
dec
push
sbb
popf
add
sbb
push
adc
sbb
cdq
mov
icebp
out
cmp
xor
and
add
xchg
aam
jl
rol
cmc
xor
adc
xor
push
loope
pop
mov
xor
xor
inc
(bad)
and
cs
and
std
mov
ror
std
mul
dec
xor
xor
pop
push
dec
aaa
aad
iret
inc
xchg
arpl
cld
leave
enter
adc
retf
mov
lahf
pop
xchg
dec
add
imul
fistp
inc
push
add
or
test
xchg
jmp
mov
mov
sub
addr16
(bad)
jmp
mov
or
adc
xchg
dec
cmp
popa
pop
les
lock
cmps
clc
mov
inc
cmp
ret
and
cmps
push
enter
addr16
in
aas
test
je
or
std
inc
out
ror
inc
and
jb
push
fimul
fdiv
adc
outs
das
adc
stos
inc
imul
cmps
or
or
bound
push
movs
sar
xlat
call
lea
jge
cmps
sub
xchg
ins
(bad)
and
push
repz
add
push
cmp
add
js
add
push
dec
psllw
pop
ja
push
sbb
sbb
mov
mov
push
sbb
rcr
aaa
loopne
stc
hlt
retf
fcom
imul
sub
mov
jno
xor
movs
xor
call
pop
or
jl
xchg
cwde
and
xchg
jnp
inc
sub
mov
mov
mov
arpl
fmul
jbe
in
and
sub
xchg
add
pop
xchg
cdq
(bad)
stos
in
data16
and
out
rcr
fimul
ja
mov
imul
xchg
push
imul
ins
call
or
nop
int3
mov
and
cs
cmp
adc
daa
dec
xchg
loopne
or
loop
add
pop
and
sahf
mov
das
stc
enter
pusha
sbb
dec
imul
in
mov
push
add
add
cmp
cmp
add
push
retf
cdq
dec
std
pop
imul
cmp
enter
jg
(bad)
dec
popf
pop
out
mov
adc
mov
repnz
retf
inc
xor
loope
jne
stos
cvtps2pi
aam
loop
xor
jno
addr16
daa
imul
es
add
dec
jp
mov
in
mov
retf
mov
pop
push
dec
ins
imul
add
or
mov
cmps
clc
or
xchg
cmp
cmp
cmp
ja
inc
loopne
ja
jmp
xor
ficom
adc
neg
or
fbstp
cld
cli
popa
push
xchg
pop
pop
cld
iret
lock
test
push
xchg
mov
sub
jp
popf
cmp
mov
mov
in
pushf
xchg
or
push
idiv
add
std
or
sbb
add
or
sub
adc
mov
sub
mov
xchg
ds
sti
xor
imul
add
mov
add
push
adc
cmp
(bad)
xor
or
out
je
fdiv
mov
sub
xchg
mov
out
xor
loop
cmp
int3
jge
xlat
das
(bad)
sbb
xor
adc
and
mov
adc
cwde
aaa
xchg
push
sti
(bad)
mov
push
xor
cmp
outs
mov
loope
push
cdq
lock
das
mov
and
cmp
fdiv
push
cs
out
lahf
mov
in
xchg
dec
dec
add
push
call
gs
xor
and
ins
pop
mov
add
xor
daa
in
sysenter
dec
repz
scas
xchg
test
je
mov
xchg
push
jb
cwde
push
add
mov
push
push
and
sbb
pusha
lea
add
fisttp
cmp
in
sbb
inc
mov
xchg
sub
push
test
pusha
xchg
dec
mov
test
jae
int
sbb
jmp
push
inc
dec
arpl
pop
ret
lock
xchg
mov
stc
or
(bad)
xchg
jle
mov
jmp
arpl
add
add
mov
mov
shr
in
in
aaa
jns
xlat
adc
fs
loop
ss
ds
cwde
jnp
add
mov
popf
dec
fs
and
pop
pop
outs
ror
jne
pop
gs
and
mov
rol
cmp
jl
clc
cs
dec
dec
dec
sub
sets
mov
repz
mov
add
lock
lahf
frstor
push
or
clc
dec
mov
je
adc
cmp
xchg
inc
mov
sub
mov
mov
push
lock
dec
mov
js
xor
addr16
hlt
mov
mov
push
stos
jle
lods
dec
jb
cmps
mov
or
fidivr
data16
rcr
movs
pop
ins
ja
inc
push
adc
mov
fisttp
xor
in
jmp
dec
cmps
gs
adc
jnp
jecxz
faddp
add
push
sar
mov
adc
in
pop
fisubr
(bad)
mov
outs
fimul
adc
rol
gs
mov
cld
shl
xor
ror
nop
nop
xchg
lods
in
push
cwde
mov
fisttp
fisubr
push
pushf
push
or
lods
stos
test
out
fisttp
mov
pop
sbb
jb
push
cmps
inc
cmp
or
clc
mov
or
xchg
jbe
std
mov
sub
mov
mov
add
sbb
inc
lea
stos
jo
hlt
push
nop
fst
mov
xchg
loopne
jmp
cmp
fidivr
int
or
mov
jge
cli
fstp
adc
xchg
inc
pusha
pop
jno
js
pop
or
jmp
lds
and
in
mov
loopne
mov
cli
adc
push
inc
mov
scas
inc
call
inc
test
cmp
ficom
mov
jmp
cmp
(bad)
sbb
cwde
repz
clc
ins
lods
adc
push
pop
cmp
pusha
add
xchg
outs
add
rcl
ret
arpl
push
das
pop
mov
xchg
fld
cmp
fs
mul
fs
imul
cmp
and
shr
ja
mov
xchg
call
(bad)
lods
fcom
xlat
cmp
push
daa
sbb
imul
sub
sub
sti
add
stc
loope
into
push
js
adc
mov
push
call
push
xchg
xchg
shl
and
xor
cmp
in
cmp
test
addr16
lods
pop
data16
rcl
pop
dec
cwde
mov
and
cmp
dec
push
lahf
jl
adc
sub
cdq
in
pop
rcl
std
xor
add
stos
test
add
and
leave
cmp
mov
stos
push
cmp
ror
sbb
adc
and
adc
shl
inc
scas
push
inc
shl
rol
mov
xlat
rcl
call
aad
fsub
sub
dec
neg
dec
ins
push
in
lea
popa
dec
cmp
aaa
push
repnz
lods
sub
call
aaa
jl
(bad)
cmp
mov
xchg
fiadd
das
scas
fcom
xchg
or
jmp
imul
not
xor
lds
xchg
and
fnsave
cmp
out
icebp
mov
(bad)
mov
push
inc
mov
jmp
cmp
add
scas
jne
dec
mov
in
dec
rol
cwde
jmp
ss
ret
popa
xchg
jno
xchg
pop
jl
dec
popf
fisubr
sub
fdivr
dec
or
mov
mov
outs
push
jge
daa
sbb
pop
lods
xor
sbb
jecxz
mov
cmps
sub
pop
pusha
inc
sbb
inc
(bad)
call
and
mov
dec
add
or
(bad)
pushf
jge
cs
dec
ret
ss
mov
outs
lahf
add
shr
es
ret
cmps
aad
cmp
jmp
xchg
repz
daa
jle
sti
sub
lods
sub
fnstenv
mov
xor
outs
add
fbstp
fs
mov
mov
(bad)
out
or
jge
adc
popa
pop
mov
push
les
xchg
cmp
push
mov
mov
mov
out
lds
mov
pop
or
int
jo
push
ins
loop
pop
push
test
cs
push
jne
fadd
shl
test
gs
jbe
dec
xchg
or
jbe
inc
sbb
sbb
ss
push
jbe
add
mov
icebp
inc
daa
aam
mov
inc
mov
add
and
mov
nop
lods
push
jo
pop
add
ja
(bad)
fldenv
sub
cdq
loopne
push
sar
dec
lods
stc
leave
daa
mov
test
xor
in
push
fidivr
add
pop
pop
clc
daa
leave
js
add
mov
mov
sub
pushf
into
sahf
inc
and
cld
imul
inc
jo
mov
ss
repnz
dec
sbb
inc
add
ret
or
or
adc
jg
or
mov
gs
adc
cwde
aad
out
dec
adc
popa
pop
mov
sub
loopne
cs
fnsave
xor
bnd
fdiv
ja
add
imul
pusha
jmp
bound
js
sbb
xchg
loope
leave
lock
gs
jo
(bad)
cli
pop
mov
or
fsubr
xchg
cmp
pop
aaa
nop
scas
mov
and
dec
mov
shr
pop
xchg
scas
jl
add
cmp
sub
push
push
add
dec
xchg
test
popa
adc
cs
out
mov
ins
push
inc
cmps
repz
and
(bad)
xor
cli
aad
jecxz
gs
sub
sub
or
jne
rcl
arpl
out
jmp
pusha
and
data16
jecxz
pusha
push
push
ja
push
adc
lods
rcr
inc
cmp
jnp
jge
or
out
add
cdq
mov
out
test
ins
mov
push
test
cmp
fdivrp
pop
dec
sbb
cmp
lock
retf
add
add
push
popf
pop
addr16
imul
adc
daa
or
pop
enter
mov
and
cmps
mov
mov
out
(bad)
and
push
jl
and
movs
adc
mov
in
bound
mov
loopne
or
minps
call
sub
add
jns
mov
mov
mov
test
loopne
nop
sub
push
aaa
jmp
add
aad
inc
shr
stos
cmp
ss
stc
pusha
les
push
cmps
repnz
out
inc
repz
mov
fnstenv
sbb
and
daa
popf
or
xor
mov
movs
push
ret
fcomp
test
sbb
push
inc
gs
sbb
mov
fcmovbe
stos
js
jl
test
pop
test
rcl
dec
push
mov
adc
and
pop
and
adc
mov
jmp
cld
and
jns
hlt
push
push
sbb
jne
ror
iret
fld
imul
pop
rol
jmp
pop
add
mov
xor
popa
mov
pop
sub
adc
(bad)
int3
ins
add
gs
push
sbb
shl
xor
pop
ins
and
pop
aad
mov
ret
push
imul
movs
leave
loop
das
push
cmps
mov
ins
test
fcom
dec
jmp
inc
leave
test
out
mov
in
jecxz
dec
push
stc
add
xchg
ror
popf
aad
jnp
jle
retf
(bad)
adc
or
mov
jecxz
inc
bound
lods
add
cli
add
jmp
jmp
(bad)
push
xchg
jno
pop
and
xor
jp
push
jno
sti
push
mov
add
data16
sbb
jle
push
xlat
sar
aaa
out
aas
(bad)
in
fistp
sub
das
rcl
push
enter
rcl
xchg
dec
call
mov
jb
js
xchg
or
icebp
cmps
inc
inc
sar
shl
call
and
fisubr
mov
jo
dec
sub
inc
dec
int
cmp
mov
and
mov
in
stos
xor
out
adc
fwait
in
nop
pop
and
rol
cmp
ret
into
dec
iret
add
mov
sbb
(bad)
jge
pop
add
mov
cmp
sbb
push
call
sti
or
clc
cmc
lds
and
sub
mov
or
(bad)
mov
mov
mov
dec
inc
mov
push
fs
jno
mov
mov
xchg
ss
add
push
mov
mov
mov
xlat
jno
pushf
test
fwait
or
jae
pusha
cmp
add
data16
fidivr
inc
ret
das
ins
or
sbb
jecxz
inc
dec
xchg
inc
mov
mov
pop
ins
rcl
cdq
mov
je
push
neg
push
jne
shl
push
mov
inc
dec
xor
stos
and
mov
test
xchg
inc
sahf
mov
jl
call
pop
stc
or
stc
retf
jmp
cdq
movs
jns
outs
xor
out
mov
and
push
out
xchg
mov
int3
jnp
sbb
add
sahf
stos
fbstp
jl
xchg
sub
dec
dec
or
cli
pop
sti
popf
or
imul
jecxz
pop
jge
aaa
xchg
test
aas
adc
shl
sub
repz
xor
cmp
push
repnz
dec
mov
aam
in
jne
or
inc
jb
fisttp
inc
xchg
loope
mov
cmp
test
stos
aaa
popf
dec
push
push
push
mov
lahf
mov
push
xchg
pusha
and
mov
repz
ins
aas
sbb
mov
cwde
pop
(bad)
mov
xor
jae
and
add
and
call
jno
mov
rcr
call
mov
repnz
(bad)
std
fucomip
cmp
pop
mov
jp
jb
je
das
jo
pop
sub
shl
push
mov
stos
in
pusha
cdq
push
lock
mov
mov
retf
sub
fcomp
xchg
xchg
mov
pop
jns
sti
idiv
pop
ins
push
aas
pop
mov
xor
scas
scas
xchg
cmp
jl
cli
test
sahf
(bad)
pop
aas
gs
leave
inc
scas
jecxz
pusha
or
rcl
fs
cmp
jnp
mov
or
mov
ins
inc
stos
mov
jno
aaa
cwde
pop
mov
inc
adc
mov
push
out
mov
dec
mov
xchg
and
push
and
sbb
mov
pop
(bad)
mov
repnz
popa
sub
push
dec
cmps
mov
sbb
cmps
xchg
xor
add
cmps
pop
ret
xchg
xor
std
cmp
fsub
movs
xor
shr
je
push
jmp
pop
add
scas
xchg
mov
cwde
stc
test
jmp
mov
shr
cmp
sub
fmul
push
lods
inc
std
cdq
imul
xchg
(bad)
aam
sbb
lods
jo
or
mov
xor
fwait
mov
or
hlt
call
movaps
mov
push
repz
or
jmp
aad
cmp
shr
mov
js
sbb
je
fs
shl
test
adc
xor
mov
mov
cdq
add
mov
das
das
dec
jnp
sti
std
dec
test
popf
idiv
stc
les
push
add
pop
test
push
bound
ret
stos
adc
ret
or
test
adc
fdiv
ja
js
and
out
and
cmps
pop
iret
sar
and
xor
mov
pop
add
std
ror
jno
(bad)
stc
pop
data16
mov
retf
adc
lock
imul
out
sub
mov
nop
mov
push
mov
scas
fidivr
out
mov
cdq
add
loop
std
jecxz
adc
movs
pop
mov
mov
jle
push
pop
dec
sub
or
mov
push
pop
inc
in
sbb
ss
lahf
adc
gs
cmp
jle
xchg
fadd
ret
lods
push
cli
dec
in
pop
dec
test
pop
fsincos
repz
sub
jge
adc
(bad)
(bad)
adc
and
(bad)
sub
in
mov
lods
and
retf
cdq
or
or
cs
inc
adc
jecxz
data16
inc
adc
(bad)
call
mov
xor
inc
and
pop
dec
or
push
adc
dec
add
or
jmp
imul
inc
scas
test
sbb
stc
and
and
lds
mov
mov
js
(bad)
cmc
push
push
dec
and
leave
lods
sbb
mov
mov
xor
and
rcl
dec
push
inc
les
test
repz
and
(bad)
call
push
jbe
(bad)
cmp
mov
popa
inc
xchg
movs
pop
int
push
add
call
data16
inc
add
cmp
sbb
or
fdivr
ret
mov
lds
pop
dec
rol
imul
outs
and
cmp
inc
inc
adc
xchg
cwde
cld
push
push
aas
dec
push
add
cmp
sbb
sahf
loopne
pop
add
pop
push
mov
add
adc
mov
retf
fwait
cdq
retf
fldcw
aad
test
xchg
jno
xor
jmp
in
add
div
mov
enter
sub
lahf
ja
ret
loope
(bad)
cmp
mov
cmp
mov
fmul
and
cmp
dec
fst
lods
sar
into
fnstsw
and
fdiv
out
in
es
mov
aas
(bad)
jno
inc
or
mov
enter
mov
mov
(bad)
dec
jnp
jmp
inc
into
or
ins
pop
mov
inc
test
cmp
sbb
dec
das
cmp
pop
mov
or
shl
sbb
fistp
push
(bad)
fist
popf
sbb
or
mov
mov
ret
mov
out
retf
icebp
scas
ret
lods
cs
fstp
sbb
iret
adc
ficomp
mov
out
fdiv
int3
ins
sub
cmc
data16
int3
movs
in
in
int3
mov
(bad)
pusha
inc
cwde
or
je
fist
fld
(bad)
and
jne
cwde
imul
daa
popf
or
push
pop
leave
cwde
or
cmc
jmp
sbb
inc
ss
mov
js
out
test
adc
adc
nop
mov
mov
not
ret
bound
rol
mov
bound
and
adc
mov
loop
push
movs
pushf
jno
repnz
test
mov
inc
inc
pop
push
ins
cmp
cmp
aad
dec
imul
(bad)
xchg
cmp
jae
dec
cld
mov
outs
and
mov
outs
aaa
inc
jo
mov
pushf
sbb
in
aad
mov
fisubr
aad
cld
jno
ss
sbb
repnz
pop
ds
mov
(bad)
lods
lods
lock
pop
sbb
aas
enter
jo
js
cwde
xor
lock
loope
lods
bound
(bad)
mov
ret
loope
sub
fdivr
cmp
clc
test
cmp
(bad)
jecxz
dec
mov
mov
mov
or
ds
cmps
cmp
enter
pop
cwd
cmc
lds
lea
push
xlat
addr16
test
je
mov
stos
aaa
pop
sub
ret
pop
outs
sbb
mov
push
jns
ins
popf
cdq
adc
add
pop
jl
push
mov
mov
inc
es
scas
dec
dec
loopne
adc
pop
cmp
stc
add
cmp
(bad)
aad
out
xchg
test
inc
pop
jg
scas
adc
cmc
lea
ins
jae
pop
push
xlat
mov
pop
lea
or
inc
(bad)
aad
jmp
mov
rcl
imul
mov
jp
fdivrp
push
stc
and
pop
aaa
dec
pusha
xchg
pop
mov
jo
push
dec
stos
(bad)
sbb
dec
push
or
movs
ror
pop
dec
xor
movs
mov
dec
loopne
sbb
dec
imul
mov
add
neg
(bad)
jmp
jae
push
call
movs
inc
pop
pop
fisub
and
sub
in
out
fnstcw
dec
mov
(bad)
xor
add
sub
inc
mov
mov
stc
test
int3
test
iret
popf
dec
and
dec
pushf
rcr
inc
rcr
mov
jmp
cmp
(bad)
cmps
test
mov
lea
add
sub
retf
push
dec
xlat
cmps
jnp
je
test
sti
jge
or
jmp
sub
ja
push
or
lahf
das
stos
push
aas
xchg
div
or
mov
sbb
aaa
call
ret
cwde
imul
mov
dec
xor
xchg
or
mov
shl
sbb
and
push
inc
int3
mov
ror
mov
xchg
push
lods
mov
jge
and
out
aaa
inc
popf
or
mov
test
test
xchg
sbb
inc
(bad)
pop
jns
xchg
cmps
mov
lds
and
js
in
mov
daa
hlt
xchg
adc
push
adc
outs
jl
jnp
sbb
mov
jl
adc
mov
push
sbb
mov
mov
mov
xchg
and
dec
or
sub
pop
and
loop
mov
ror
daa
push
mov
mov
xchg
pusha
in
mov
cmc
jne
sti
dec
mov
call
or
cmps
int
xor
add
inc
into
xor
hlt
adc
cmp
lock
mov
xor
dec
hlt
cmc
jae
jg
aas
dec
repnz
mov
xor
cwde
and
sar
test
add
push
push
rsm
scas
out
hlt
inc
push
gs
xchg
mov
jbe
dec
adc
pop
out
xor
ja
adc
rcr
mov
push
arpl
adc
sahf
or
add
fs
pop
and
jl
pop
loope
setbe
das
ret
xlat
lds
(bad)
mov
stos
jne
(bad)
aad
lock
cmc
test
daa
mov
jae
jmp
or
jg
cmp
je
xchg
adc
mov
xor
mov
push
sub
addr16
in
push
fwait
aad
jne
cld
sub
shl
loop
not
mov
or
and
stos
(bad)
pop
pop
sti
push
jmp
cli
inc
imul
mov
xchg
out
adc
or
outs
dec
call
pop
out
outs
jmp
sbb
mov
cmc
adc
mov
scas
pop
pop
xchg
shl
pop
(bad)
aaa
call
pop
ret
push
fdiv
test
int
fadd
pop
gs
mov
je
fsubp
push
jp
int
add
mov
lods
in
out
push
out
test
mov
pop
push
call
test
out
rol
jns
add
adc
fidivr
fild
fwait
(bad)
out
pop
int
test
call
call
iret
out
mul
xchg
inc
(bad)
data16
sbb
pop
mov
out
xor
mov
mov
mov
scas
(bad)
icebp
ja
adc
inc
test
jl
sbb
sbb
mov
cmp
add
xor
mov
mov
outs
cmp
stos
jp
and
in
add
fs
scas
stc
sub
push
xchg
push
push
ja
test
and
jle
clc
imul
mov
adc
sub
and
cmp
jo
imul
ds
sub
add
stos
push
mov
lea
cmc
mov
mov
enter
cmp
shr
in
cmp
pop
scas
shl
pop
stos
sbb
and
cmp
mov
cld
out
outs
fisttp
inc
je
rcl
ror
jl
enter
mov
in
fs
push
push
ret
fs
jecxz
(bad)
or
ins
repnz
mov
fnstcw
cmp
push
scas
sub
add
xor
jg
sbb
sub
cld
pop
fistp
addr16
and
cmps
imul
cmps
sub
jle
in
push
mov
inc
jecxz
mov
retf
dec
mov
dec
outs
jg
inc
cmps
ins
aad
push
or
leave
sbb
(bad)
jns
iret
or
push
mov
mov
aam
jns
mov
cld
jmp
data16
sbb
push
xchg
jge
cmps
in
lock
repz
imul
cmp
mov
in
sbb
pop
stc
aaa
sti
das
rol
inc
es
cld
ss
pusha
pop
jbe
call
pop
add
ja
jmp
(bad)
ret
inc
lods
push
movs
sub
jb
les
jmp
dec
stos
(bad)
xchg
xor
test
hlt
adc
mul
cmp
(bad)
jmp
cmp
xchg
mov
or
inc
push
mov
and
push
aad
jg
mov
ds
jne
jbe
dec
fwait
shr
call
pop
outs
mov
call
mov
stos
and
cs
bound
jl
mov
pop
adc
push
adc
loop
leave
mov
lods
bound
push
sub
iret
scas
xlat
mov
adc
sbb
xchg
mov
outs
mov
dec
cmp
leave
xchg
and
cli
dec
sub
mov
inc
mov
pop
and
xchg
bound
fwait
lahf
mov
pop
mov
add
mov
ret
cmp
push
jp
ror
jbe
mov
enter
shl
mov
dec
enter
ja
jmp
add
mov
dec
data16
sti
inc
inc
sar
mov
inc
test
fisttp
inc
(bad)
mov
bound
addr16
mov
call
hlt
jle
cmp
pop
and
and
push
bswap
and
push
xchg
dec
cmp
or
int
iret
fst
imul
and
loop
push
(bad)
stc
in
sub
cmp
bound
(bad)
bound
add
in
mov
pop
add
mov
xor
sub
shl
in
fisub
xor
mov
enter
popf
cmc
pop
sub
test
(bad)
inc
dec
(bad)
shl
rcl
add
mov
lahf
test
fist
fsub
fild
movs
ja
sbb
pop
jg
push
xchg
clc
adc
aas
test
sbb
lods
neg
push
enter
sti
adc
push
add
test
pushf
xchg
xor
icebp
sbb
push
or
repz
sub
pop
gs
and
adc
icebp
and
adc
dec
inc
popf
add
or
test
and
retf
js
inc
add
sub
int3
arpl
call
loop
or
xchg
je
movs
adc
cmp
xchg
mov
stos
add
jno
sbb
push
pop
mov
jl
fadd
daa
sbb
out
loopne
pop
(bad)
pop
xor
push
mov
and
(bad)
lea
in
pop
ret
cmp
xor
loopne
add
not
les
pusha
mov
(bad)
in
mov
ss
jmp
test
repz
sub
or
cmp
push
outs
fisttp
rcl
out
sbb
push
or
scas
push
adc
sbb
mov
cmp
loopne
call
sti
jb
sti
mov
sub
jb
les
lea
and
pop
pop
dec
aas
adc
fs
hlt
inc
xchg
push
and
js
xchg
sub
cmp
mov
push
jo
scas
and
push
in
add
mov
add
js
fs
adc
int3
jl
test
rcl
imul
mov
ins
push
add
add
imul
ret
gs
dec
xchg
shr
cs
enter
xchg
fs
jo
cmp
xchg
dec
xor
mov
push
fs
cs
sub
mov
or
ret
stos
aas
xchg
pop
sub
ss
dec
push
xchg
dec
fadd
ins
sub
stos
inc
jmp
push
inc
xchg
ret
push
dec
xchg
sahf
or
(bad)
inc
jns
push
mov
mov
je
(bad)
aaa
xor
jg
arpl
(bad)
shl
push
pop
mov
add
ins
call
xchg
push
loopne
or
sbb
push
push
push
lods
or
xchg
sub
push
aaa
mul
xor
pop
cli
mov
sahf
aaa
push
inc
call
xchg
mov
adc
dec
and
call
imul
lock
jno
mov
xlat
arpl
iret
int
mov
cmp
inc
(bad)
lock
jmp
ret
retf
xchg
inc
mov
out
sub
xchg
push
push
sub
ret
dec
mov
enter
mov
out
xor
loopne
lds
pop
fnstcw
adc
cmps
mov
out
jne
mov
call
jno
mov
cmps
arpl
push
mov
cmp
ficomp
add
push
lahf
and
or
out
dec
cmp
loop
repz
jbe
(bad)
mov
add
jne
and
jle
std
jg
sub
pusha
shl
sbb
xor
xor
jnp
xor
mov
inc
jo
or
js
(bad)
call
inc
test
push
data16
mov
and
push
call
(bad)
sub
popf
dec
hlt
and
out
dec
outs
nop
sub
fbld
out
addr16
fisttp
popa
pop
in
test
add
pop
nop
sbb
jmp
sub
sar
pop
and
fidiv
push
scas
fisub
jp
rol
sub
push
push
sti
sbb
xor
out
sub
xchg
test
rep
dec
xchg
out
push
adc
adc
mov
push
scas
jmp
retf
ret
ret
(bad)
int3
imul
mov
clc
push
cmp
mov
adc
xbegin
mov
les
xor
mov
shl
and
fld
fdiv
les
(bad)
mov
data16
push
and
cmps
(bad)
out
test
mov
cld
push
call
cld
sub
mov
jg
add
rcl
mul
mov
push
call
stos
mov
fwait
sbb
jmp
addr16
pop
pushf
(bad)
pop
mov
mov
shl
sub
nop
mov
pop
push
loope
fcom
fistp
jg
push
add
fst
ins
pop
pop
xor
inc
mov
add
int3
push
add
loopne
mov
add
test
pop
jo
sbb
popf
jmp
xlat
outs
xchg
nop
mov
xchg
inc
rol
mov
inc
stc
sub
in
push
sub
sub
jnp
push
retf
clc
mov
stos
pusha
mov
push
cwde
iret
mov
fldcw
in
cwde
outs
ins
xor
inc
out
mov
push
test
aaa
sbb
add
mov
jno
mov
push
jo
mov
sbb
bound
push
das
and
or
stos
jg
cwde
cmp
push
and
mul
xchg
shr
bound
jo
movs
jo
outs
cmp
das
icebp
cmp
pop
and
fwait
and
mov
jne
jmp
enter
ror
ss
int3
loopne
dec
cmps
in
int
push
jp
lods
pusha
ss
imul
sbb
dec
xor
out
mov
jnp
enter
push
mov
test
in
xor
lock
and
pop
push
pop
inc
cmp
arpl
push
sbb
add
inc
das
aam
iret
push
(bad)
ror
scas
or
jp
(bad)
dec
pop
dec
arpl
inc
dec
jl
fadd
push
inc
mov
outs
mov
std
(bad)
push
es
je
xchg
mov
mov
push
ds
cdq
jns
addr16
nop
jno
daa
jb
push
jle
and
adc
xchg
ja
mov
push
in
sbb
push
sub
test
clc
xchg
sti
sbb
test
mov
lods
movs
inc
inc
mov
sub
inc
inc
sbb
ins
mov
cwde
push
bound
ret
push
sub
jmp
add
pop
lea
jmp
fsubr
ja
dec
cmp
sub
adc
cmp
cmps
and
mov
ss
call
sub
mov
or
inc
and
repz
adc
and
mov
sahf
in
mov
cmp
outs
dec
dec
xchg
(bad)
imul
cmp
in
add
movs
or
xchg
ret
cmp
imul
add
lods
dec
pop
rol
outs
add
push
icebp
ficom
movs
jp
push
and
pop
neg
bound
xor
fwait
mov
cmp
jmp
aam
sbb
jmp
push
mov
jmp
push
mov
pop
stc
sbb
mov
icebp
push
es
sub
and
cmps
dec
sbb
loop
add
pop
mov
(bad)
cmp
push
and
push
repnz
clc
scas
push
call
cmp
aad
or
sbb
pop
test
fdiv
out
aam
rcl
or
dec
mov
ficomp
clc
or
movs
or
and
mov
iret
xor
jmp
mov
mov
cwde
mov
push
push
out
adc
or
pop
fbld
push
sub
test
sbb
sub
push
dec
enter
push
pusha
jno
neg
and
push
sar
mov
adc
add
scas
mov
mov
call
jmp
movs
mov
jno
shl
pushf
std
movs
and
arpl
push
push
or
retf
pop
pop
xlat
and
enter
mov
popa
std
mov
aaa
outs
cmps
leave
fld
in
call
pop
push
mov
bnd
shr
repz
in
jmp
push
mov
fucomi
sub
out
into
cmp
xor
or
mov
and
lock
xchg
mov
repz
daa
mov
aaa
out
jecxz
out
xor
jmp
inc
cmp
xlat
cmp
push
and
rcr
ins
jo
add
fst
(bad)
into
inc
add
add
test
add
mov
stc
movs
sbb
sahf
push
sbb
inc
and
add
inc
xchg
lahf
xor
pop
(bad)
out
(bad)
pop
std
(bad)
js
test
imul
adc
sbb
fdiv
xor
or
mov
pop
and
fsubr
jmp
inc
cld
jns
mov
sub
adc
push
ins
in
mov
outs
loope
xor
inc
push
push
push
xor
fcom
pop
pop
movs
int3
aam
mov
iret
mov
cld
movs
in
movs
fwait
leave
(bad)
jmp
xchg
adc
jge
sbb
push
sar
or
xchg
std
test
xor
jb
lods
pop
mov
stos
lahf
pop
lahf
cli
and
(bad)
and
lock
int3
out
js
(bad)
mov
(bad)
jae
mov
cmps
ins
xchg
sbb
test
outs
xchg
(bad)
icebp
push
cs
and
jg
mov
adc
ror
inc
ret
cmp
clc
add
aad
adc
cmp
dec
add
call
(bad)
outs
xchg
jg
das
sbb
sub
cmp
and
cmp
inc
xchg
cwde
pop
in
rcr
mov
int3
idiv
out
aam
mov
mov
bound
and
jne
xchg
and
push
jecxz
dec
arpl
clc
inc
xlat
fwait
xor
push
lahf
leave
inc
cdq
pop
and
xchg
bound
pop
jae
cmp
dec
arpl
out
loop
idiv
mov
out
out
and
fisubr
pop
fcomi
enter
repz
and
ins
rcl
mov
in
clc
adc
adc
ret
inc
icebp
rcl
push
mov
nop
je
mov
push
ds
call
jl
popf
cmovo
xor
lea
int3
jp
nop
jnp
mov
xchg
stc
jne
pop
inc
or
shr
jmp
call
or
inc
shr
push
fmul
xchg
std
nop
shl
div
sub
cmp
mov
adc
lods
loop
add
or
inc
push
dec
pop
pushf
rcl
or
fdiv
ins
sub
cmp
push
and
xchg
fs
add
jmp
mov
dec
in
cmp
in
fwait
push
icebp
cmps
ins
(bad)
and
add
xor
pop
stos
shl
and
cdq
(bad)
test
add
adc
rcl
mov
add
lea
sub
jmp
inc
punpckhdq
cmps
xchg
mov
lods
push
cmp
loop
or
stos
dec
push
movs
shl
dec
sbb
push
pop
lock
sbb
mov
inc
cmp
call
dec
jnp
xchg
xchg
fiadd
not
movs
popa
int
and
xchg
adc
gs
push
dec
stc
ret
loopne
inc
mov
inc
leave
sub
sbb
retf
int3
test
mov
clc
(bad)
xchg
dec
xor
fs
or
pusha
pop
jne
xchg
daa
int
leave
(bad)
cld
retf
das
(bad)
sub
pop
sub
movs
popf
adc
pop
jecxz
sbb
sbb
adc
push
mov
push
inc
inc
and
nop
sbb
pop
pop
fld
pop
jno
fcomp
fidivr
adc
cmps
pop
cli
fist
mov
jmp
cmps
pop
les
jge
push
sbb
test
sbb
dec
lahf
push
rol
movs
neg
ficom
lock
sbb
xlat
(bad)
xlat
cmp
pop
aad
sti
ret
mov
arpl
lods
aad
popa
aaa
cdq
push
pop
call
xor
add
adc
sub
loop
cmp
mov
mov
sub
jmp
mov
xor
aaa
sub
sub
ins
repz
sahf
mov
ss
lds
add
sahf
lea
hlt
aas
cld
pushf
mov
mov
sub
cmp
stos
add
cli
addr16
and
scas
jno
and
loop
in
sub
pop
inc
sbb
mov
jge
and
xor
test
out
inc
ds
int
push
mov
cmp
inc
xor
loopne
xchg
pop
xor
xchg
es
jmp
mov
sub
mov
cmp
in
adc
in
sub
jb
inc
es
jecxz
sbb
dec
pop
lods
jmp
xchg
pop
loope
hlt
push
cmps
sbb
inc
call
cmps
jl
fcomp
popf
(bad)
js
popa
int3
xor
sbb
hlt
pop
scas
neg
das
push
outs
sub
push
push
data16
pop
cdq
mov
adc
shl
inc
sbb
shl
dec
and
and
stos
sar
xchg
mov
fwait
std
jo
int3
mov
sub
xchg
sbb
retf
stos
dec
fsubr
daa
fidiv
dec
push
pop
leave
inc
or
sti
xchg
xchg
mov
cld
shl
clc
xchg
cmp
mov
int
pop
scas
jmp
fldcw
mov
push
in
jmp
push
xor
fnstenv
jbe
dec
lods
sbb
sub
out
fistp
icebp
loopne
(bad)
push
and
fwait
xor
(bad)
fild
je
repz
add
jbe
in
push
ja
int3
or
(bad)
es
adc
jo
rcr
sahf
sbb
ins
shl
jle
jmp
inc
cmp
mov
fistp
jbe
xchg
pop
mov
(bad)
adc
fld
push
ins
sbb
mov
push
inc
in
loope
push
and
or
push
and
clc
xchg
and
std
out
jb
and
and
mov
push
dec
dec
rol
inc
(bad)
ins
dec
inc
dec
test
rcr
stos
loope
clc
or
inc
into
dec
adc
mov
mov
loope
out
stos
mov
xchg
mov
sub
retf
mov
push
popf
loopne
(bad)
retf
inc
mov
lds
inc
push
mov
loopne
aaa
leave
in
jle
stc
enter
push
jnp
mov
mov
loop
cli
adc
dec
add
outs
data16
push
aaa
fs
sub
test
mov
daa
add
jmp
test
jmp
leave
mov
and
xchg
or
mov
cmps
fisttp
iret
lock
or
in
into
add
sahf
or
push
cdq
aam
push
sub
mov
xor
aad
mov
push
and
sahf
fwait
sti
ins
push
loopne
pop
mov
sub
test
mov
xor
inc
pop
jbe
xchg
pop
(bad)
jmp
mov
jno
cmp
mov
jge
or
push
into
pop
(bad)
retf
pusha
loope
in
ret
mov
xor
mov
leave
mov
mov
sbb
mov
xor
mov
lea
in
push
ins
sub
add
or
or
cdq
xchg
xchg
xor
or
imul
jns
sub
push
push
and
push
push
outs
mov
loop
or
lods
cmp
cmps
pop
push
adc
xchg
sbb
jecxz
popf
fadd
push
not
push
pusha
push
mov
les
mov
scas
pop
ss
(bad)
sbb
push
fcmovb
inc
adc
jb
xor
and
mov
out
test
inc
retf
das
ja
sahf
xchg
pop
rcl
or
repnz
repz
and
push
pop
jmp
ret
(bad)
ja
add
or
lds
jmp
aas
mov
push
cmp
xchg
jbe
stc
inc
and
jle
pop
ja
inc
(bad)
xor
mov
adc
mov
loop
clc
pop
mov
in
xor
jne
dec
dec
outs
fist
int3
ins
mov
sbb
popf
test
inc
or
dec
xchg
movs
or
jo
sub
iret
inc
stos
adc
nop
nop
cmp
das
in
sbb
bound
mov
jae
jae
push
xchg
out
cmps
mov
daa
push
cmps
dec
mov
mov
ret
icebp
push
adc
and
pop
xchg
push
push
lea
mov
(bad)
iret
aas
aas
mov
cmp
cmp
int
sbb
in
or
cmps
sahf
mov
adc
add
stc
xchg
cli
cwde
in
or
pop
inc
jecxz
nop
and
cmp
imul
or
cmc
rcl
nop
adc
ret
addr16
pop
pop
jmp
jge
sub
sahf
fcmovu
add
sub
lock
fwait
pop
icebp
push
pop
pusha
xor
cli
addr16
dec
add
add
mov
dec
icebp
sar
(bad)
fst
lea
ror
das
mov
in
bound
cdq
cmp
sbb
out
nop
imul
fld
push
xchg
std
xchg
add
das
mov
rcl
cld
pop
xor
in
inc
iret
gs
pop
(bad)
pop
mov
xchg
and
or
hlt
lea
imul
gs
pop
cs
xor
mov
outs
or
cmp
outs
mov
popa
xor
jmp
sbb
xor
and
stos
cmp
sbb
xchg
add
es
mov
imul
xlat
addr16
ins
jp
(bad)
leave
sub
enter
mov
stc
inc
cwde
lea
stos
ss
arpl
push
scas
mov
jge
add
xchg
mov
push
repz
repnz
xchg
xor
push
mov
jp
arpl
aaa
cmp
jge
mul
fst
(bad)
retf
cli
add
push
jno
adc
inc
xchg
or
fnstcw
pop
je
add
inc
aaa
hlt
nop
xor
stos
push
xchg
cmp
mov
iret
les
jno
mov
jl
call
sbb
dec
icebp
xchg
nop
pusha
or
pop
sahf
movs
lea
jmp
push
jg
inc
mov
xchg
in
xor
mov
mov
aad
or
or
xor
jg
test
inc
fisubr
sbb
jmp
or
sub
pop
push
push
ins
jnp
cmp
sub
sub
sub
sti
inc
mov
mov
(bad)
loop
inc
jae
lahf
inc
rol
fnstsw
call
inc
arpl
sahf
daa
or
test
ret
(bad)
pushf
in
sub
ja
data16
jmp
movs
in
adc
add
xchg
jae
ret
(bad)
or
inc
sar
sub
mov
aas
push
lods
mov
ret
pop
cmp
ficomp
daa
clc
je
pop
xchg
push
and
ja
inc
inc
push
scas
mov
fld
adc
cli
and
cdq
loop
mov
jb
test
add
ins
dec
xchg
scas
pop
push
imul
mov
sub
mov
movs
(bad)
call
cmc
xchg
xor
push
cmc
xlat
cmp
adc
xchg
in
xchg
fsubr
sbb
or
loope
mov
xchg
pusha
add
dec
cmp
pop
lea
(bad)
xlat
pop
lahf
xchg
iret
or
xor
cwde
enter
ins
cmps
mov
in
nop
mov
fdivp
repz
push
fs
lods
xchg
shr
push
cmps
mov
pop
xchg
mov
push
fwait
rcr
(bad)
xchg
test
or
cmp
add
push
mov
and
mov
lock
lods
mov
stos
mov
(bad)
jl
dec
adc
test
mov
jp
bound
gs
mov
in
xchg
add
mov
fnstenv
push
test
mov
inc
ret
test
mov
jle
pop
retf
inc
and
and
push
xor
daa
sbb
(bad)
xchg
je
sub
cmp
pop
sub
imul
mov
push
loope
mov
mov
ret
sub
xor
push
mov
jns
pop
scas
lock
mov
cmp
dec
sub
xchg
and
fs
xchg
mov
retf
push
or
push
(bad)
ret
std
pop
arpl
scas
or
add
dec
arpl
push
outs
pop
push
into
cmp
rcr
sbb
and
(bad)
retf
lods
cli
test
loopne
xchg
or
push
popa
cmp
jbe
retf
cmp
out
add
rol
lahf
cdq
or
cs
(bad)
mov
mov
jb
and
and
or
mov
mov
add
sub
scas
sti
xor
mov
and
mov
add
fsub
add
jle
out
or
push
retf
fistp
mov
sbb
fwait
sub
scas
push
syscall
mov
in
scas
les
dec
inc
mov
fst
out
push
inc
test
cmc
jge
push
test
sbb
xchg
cmps
sbb
mov
push
dec
mov
pop
out
shl
pop
ins
push
xchg
test
adc
cmp
sti
ins
and
mul
jmp
rcr
(bad)
aad
dec
or
in
push
arpl
inc
inc
mov
(bad)
cdq
retf
scas
jge
push
mov
push
je
fwait
jbe
mov
cmp
ins
bound
data16
mov
inc
call
shr
fsub
mov
sahf
std
cld
push
stc
sub
pop
leave
das
mov
js
ret
mov
xchg
nop
dec
or
cmp
repz
push
cli
add
mov
in
sti
in
fs
int3
je
fimul
gs
scas
xchg
and
clc
or
ds
daa
fstp
stos
mov
nop
test
es
mov
add
adc
xchg
jle
jg
(bad)
lahf
adc
and
xchg
fs
mov
repnz
and
std
xchg
in
add
out
mov
inc
(bad)
movs
dec
sbb
xchg
or
into
std
scas
cmc
ret
dec
popf
jle
leave
jb
lods
pop
jecxz
jecxz
aad
adc
mov
dec
hlt
daa
les
push
lods
mov
in
fstp
pop
xor
push
or
lahf
mov
std
and
(bad)
or
mov
and
or
jmp
popa
xchg
and
dec
imul
out
pop
rcl
push
pop
xor
push
stos
adc
arpl
add
sbb
jle
jmp
outs
dec
adc
and
rcr
addr16
fwait
je
pop
jns
dec
cmps
shl
and
mov
addr16
dec
aam
dec
pop
fisttp
stc
and
test
mov
loope
sbb
fist
jb
int
stc
sbb
cmps
call
mov
push
popf
jbe
cmp
icebp
fldcw
pushf
test
outs
popa
mov
ds
cmp
jno
dec
xchg
ins
ds
int
mov
popa
and
jae
shl
into
xchg
or
or
mov
stc
js
dec
in
pop
fwait
mov
adc
loop
mov
sbb
popa
cmp
je
mov
adc
lock
aas
mov
cmp
mov
cli
call
popa
pop
mov
je
pop
jnp
xchg
and
adc
rcr
inc
mov
cwde
iret
adc
xchg
fmul
mov
dec
push
push
lds
fild
pop
sahf
loopne
and
and
out
arpl
inc
mov
mov
sbb
mov
int
cwde
jo
inc
mov
pop
or
test
push
xchg
dec
adc
loope
scas
fist
adc
xchg
jb
shl
jecxz
das
inc
and
in
imul
in
jnp
inc
or
dec
mov
jmp
popa
out
push
dec
push
push
movs
clc
ja
xor
fimul
pop
mov
aaa
and
push
cmp
jns
jb
add
ins
xchg
push
repnz
popf
inc
jg
je
xchg
es
pop
and
mov
in
inc
xor
pop
sub
mov
pushf
mov
push
jecxz
idiv
icebp
iret
imul
sub
(bad)
pusha
ficom
in
imul
test
cmp
aaa
pop
je
inc
jns
mov
push
pop
pushf
mov
push
jg
loop
(bad)
adc
inc
fsubr
icebp
push
push
ins
add
dec
sbb
add
push
inc
lds
inc
adc
lock
push
push
adc
outs
dec
adc
adc
out
mov
xor
jle
test
mov
outs
xchg
or
push
dec
push
lock
cmp
retf
add
in
dec
or
xchg
pop
retf
pusha
scas
mul
mov
call
bound
(bad)
les
inc
cmp
outs
test
stc
fmul
xor
add
pop
lock
imul
jp
cmp
cmc
jmp
push
(bad)
in
xor
arpl
jl
ret
loop
test
ficom
outs
push
or
aaa
and
xchg
fs
mov
aas
fs
sub
adc
add
lahf
sahf
fcomp
mov
sti
xchg
lods
and
ror
and
je
pop
into
adc
hlt
(bad)
cmps
push
inc
dec
lods
xor
jmp
mov
fmul
push
pop
xor
jns
mov
inc
xor
cmps
aam
dec
mov
inc
aam
ja
add
(bad)
pop
xor
sbb
int3
mov
or
jge
add
or
or
or
sbb
imul
jl
xchg
sbb
jl
and
jo
xor
retf
ret
dec
cmp
call
add
cmp
add
xchg
xchg
xchg
jecxz
lock
mov
clc
lock
mov
xor
push
add
dec
js
out
sbb
xchg
inc
cmp
push
lock
dec
stos
cmp
or
or
mov
enter
jecxz
lock
sub
pop
or
jns
ins
mov
pop
(bad)
dec
jge
jl
nop
ror
cmps
(bad)
fidivr
popa
cmp
outs
mov
or
repz
lahf
stos
call
adc
jnp
mov
cdq
add
jne
inc
test
(bad)
fwait
xchg
push
outs
add
add
test
fldenv
mov
sbb
xlat
clc
pop
mov
cmp
dec
mov
add
dec
mov
sub
ins
(bad)
mov
or
cli
sub
adc
dec
sub
pop
mov
mov
fadd
test
call
add
jae
inc
shl
lahf
in
fdiv
je
test
pop
adc
cmp
dec
mov
adc
pop
mov
test
add
mov
push
xchg
fadd
sub
mov
cmp
push
sbb
fidivr
pop
mov
push
test
jg
push
push
push
xchg
popf
sbb
push
push
xor
xor
push
cmps
fdivrp
test
and
imul
rol
cwde
div
or
or
cmps
ins
sub
in
add
in
jbe
push
lods
or
mov
cmps
clc
pop
repnz
inc
fs
out
push
pop
or
iret
mov
das
add
pop
ret
inc
sbb
out
outs
les
mov
xchg
test
cmps
xor
add
jb
arpl
dec
sub
cdq
and
pusha
movs
(bad)
jno
xchg
or
jnp
retf
inc
aas
jo
in
pop
dec
sti
icebp
imul
and
loop
mov
hlt
push
mov
(bad)
fmul
not
mul
inc
mov
sahf
aaa
sbb
arpl
retf
push
mov
repz
cmp
fisttp
js
sub
lock
mov
repnz
fisttp
out
push
pop
mov
cli
inc
icebp
fild
das
popa
mov
push
xor
pop
xor
ins
call
js
push
retf
loopne
mov
scas
push
cli
cmps
mov
dec
dec
ret
sub
xchg
cmps
jmp
pop
sub
and
adc
cs
mov
(bad)
xchg
dec
xchg
adc
pop
adc
aad
stos
jp
call
fwait
data16
push
sub
imul
push
retf
mov
sub
mov
or
xor
or
or
add
into
push
fwait
test
jmp
pop
xchg
les
int3
(bad)
scas
in
loop
push
mov
inc
les
add
mov
adc
xor
ficom
ins
ss
cwde
cmp
out
xchg
sub
iret
rcl
std
mov
repnz
xor
pop
pop
and
pop
ins
out
daa
pop
sub
pushf
cvtpi2ps
xchg
out
rcl
mov
mov
add
ins
into
jns
ja
mov
lds
dec
xchg
xchg
mov
xchg
mov
sub
xchg
(bad)
les
cs
push
pop
dec
lods
pop
inc
add
mov
pop
aam
(bad)
push
mov
pop
xchg
in
(bad)
ss
sub
push
or
cmp
fdiv
dec
call
or
mov
xor
outs
and
mov
inc
cmc
(bad)
neg
xlat
div
pop
dec
cmp
inc
test
stos
mov
(bad)
jmp
cmp
jmp
outs
fisttp
pusha
dec
add
adc
stos
sub
and
inc
pop
rcl
in
dec
jmp
jge
ficomp
pmovmskb
push
addr16
mov
pop
out
mov
jmp
and
jmp
mov
js
push
ror
popa
sub
pop
cmps
adc
aas
jecxz
xor
call
call
push
out
out
pop
inc
mov
fldcw
mov
and
jno
cwde
mov
xor
cmc
popf
sbb
fcom
arpl
push
fstp
push
test
fimul
inc
jns
xchg
inc
repnz
pop
mov
sub
mov
xchg
and
mov
outs
mov
(bad)
out
stos
pop
jge
add
xor
xchg
xchg
jae
mov
rcl
rcr
xchg
push
test
in
mov
pop
xor
inc
dec
xchg
in
xchg
jl
lods
push
jge
(bad)
sub
out
xchg
test
(bad)
sbb
iret
test
aaa
sub
dec
leave
dec
retf
hlt
daa
shr
push
mov
getsec
add
mov
add
icebp
xchg
rcl
mov
dec
mov
dec
and
xchg
mov
xchg
mov
pop
sahf
movs
push
pop
xchg
ins
loope
js
dec
add
mov
cwd
mov
push
dec
outs
dec
cld
fs
mov
jns
lahf
dec
stc
sbb
inc
mov
jne
repnz
bound
sbb
shr
and
aad
clc
(bad)
shl
push
in
dec
lods
mov
popf
rcl
and
js
mov
mov
sti
les
xchg
pop
sbb
in
mov
adc
pop
(bad)
sbb
xchg
push
mov
pop
sbb
push
jecxz
daa
pop
es
repnz
add
lahf
jge
pop
push
mov
pop
add
lahf
je
shrd
inc
bound
in
mul
inc
xor
leave
and
jmp
mov
pushf
adc
lds
dec
inc
jle
js
out
sbb
hlt
out
adc
call
adc
push
push
cwde
pop
jbe
and
loop
adc
or
sub
out
pop
add
repz
cld
pop
jb
jnp
daa
cmc
es
pop
or
xchg
cli
adc
mov
arpl
and
lea
jp
sub
mov
fdivrp
(bad)
inc
ins
cmp
jne
sbb
or
sbb
fsubp
lock
xchg
ret
test
clc
mov
mov
cmc
cli
repnz
out
dec
push
adc
add
inc
fisttp
pop
mov
ret
mov
popf
mov
fidivr
clc
xchg
int
(bad)
cli
scas
das
cld
fucomi
jecxz
cmp
dec
dec
jp
ss
jbe
sbb
in
jle
cmc
sub
js
mov
dec
mov
call
(bad)
xor
ja
arpl
add
pop
or
pop
ss
int
inc
pop
add
hlt
fcom
add
jle
cmp
outs
(bad)
out
ret
push
mov
jge
adc
cld
pop
popf
je
dec
shl
fdiv
xchg
pop
into
lea
or
xchg
call
pop
dec
in
rcr
lds
in
inc
jmp
or
out
pop
nop
outs
maxps
sub
ret
pop
or
mov
xchg
push
rcl
mov
sub
add
mov
add
gs
mov
push
xor
jbe
sbb
out
cmp
push
inc
cmps
push
fwait
stc
or
mov
cwde
aas
pop
cmp
rcl
shr
sahf
add
and
leave
hlt
loopne
jo
int3
add
cld
dec
cmp
dec
jbe
(bad)
imul
arpl
imul
rcl
inc
jecxz
mov
xor
fs
xchg
test
dec
call
add
retf
repnz
jno
ss
les
sar
rcr
pop
inc
hlt
stos
(bad)
lock
cs
loope
cmps
xor
lock
cdq
dec
and
ja
xchg
adc
inc
cs
aam
sub
mov
movhps
cdq
push
into
or
push
dec
invd
out
sar
cmp
push
cdq
in
sub
pop
add
sti
pusha
popaw
mov
in
xlat
mov
mov
pop
mov
mov
test
out
and
(bad)
inc
in
mov
xsha256
cmps
push
mov
(bad)
(bad)
mov
xor
call
adc
push
mov
push
adc
jnp
sbb
inc
push
adc
pop
dec
mov
add
xlat
outs
sub
cmp
mov
arpl
call
add
ins
fisubr
add
dec
add
leave
loope
sbb
fnstenv
es
sub
loope
or
ss
clc
addr16
xchg
cs
clc
mov
and
je
mov
out
and
jmp
bound
sbb
lods
ss
mov
or
inc
ret
test
mov
(bad)
in
sahf
call
jb
cld
arpl
leave
xchg
je
lock
cld
cwde
scas
and
sub
jo
push
in
dec
hlt
jl
lods
scas
data16
mov
out
mov
dec
cli
sti
js
mov
lea
arpl
jge
and
jo
out
mov
scas
jae
aas
jns
ins
sub
sahf
outs
mov
mov
call
xor
xor
pop
xor
xchg
mov
cmp
cmc
(bad)
jp
je
cs
jmp
cmp
cmp
xchg
mov
in
fs
sbb
mov
jae
test
xchg
in
pop
sub
sbb
adc
sbb
mov
fld
lahf
ud1
pop
adc
mov
inc
lahf
cmp
dec
popa
call
mov
shr
pop
and
jno
lods
sar
outs
jae
fimul
pop
aad
aas
and
aad
leave
dec
jl
fcomp
add
(bad)
xor
out
jne
sub
cmc
shr
add
sub
iret
ja
loope
jnp
outs
mov
cmc
ds
pop
vcvttps2dq
je
pop
fwait
shr
(bad)
push
test
push
jnp
xor
mov
rol
in
lds
jge
mov
nop
movs
add
mov
add
js
dec
loopne
push
imul
repnz
cmps
retf
(bad)
sbb
data16
test
pop
mov
fdiv
ret
dec
sbb
xchg
lahf
xchg
xchg
ficomp
fst
cmp
inc
push
out
movs
gs
aaa
pop
xor
lahf
adc
sbb
repnz
cmp
out
lahf
pop
push
mov
movs
repz
or
sti
or
stc
xchg
loopne
add
push
sub
in
jns
call
movs
add
aam
pop
loope
sar
ds
addr16
xor
push
shr
into
(bad)
les
into
and
imul
int
xchg
mov
fisubr
xor
test
iret
imul
dec
mov
pop
les
shr
pop
jno
mov
jb
add
dec
cmp
xor
test
mov
push
xor
das
test
fstp
cs
adc
add
mov
dec
hlt
es
stos
in
push
ins
das
fiadd
lock
dec
and
push
shl
cdq
cdq
inc
pop
sub
push
xor
icebp
sbb
pop
iret
inc
bound
nop
std
push
loop
test
js
mov
mul
xchg
cmp
xor
xchg
ins
add
in
stos
jge
sar
outs
mov
jp
inc
adc
test
mov
pushf
push
mov
inc
aas
dec
inc
cmp
popf
popa
jnp
and
out
mov
or
adc
pushf
(bad)
push
es
in
movs
mov
mov
loopne
(bad)
adc
imul
adc
add
iret
les
inc
out
push
out
inc
mov
dec
push
fnstsw
jnp
and
and
pusha
jae
mov
std
rcr
popf
jecxz
xchg
adc
test
mov
(bad)
cmp
mov
fdivr
loop
jno
pop
bound
push
dec
rol
push
mov
or
lods
mov
mov
cmp
leave
mov
lahf
dec
and
xor
cwde
stos
inc
movs
pop
cld
add
jne
loope
cwde
mov
sub
mov
xchg
adc
movs
sti
ret
iret
cdq
cmp
repz
or
sbb
imul
pop
jno
sub
popa
loop
movs
dec
cmp
ss
jno
mov
xor
jge
ins
mov
cmps
add
test
mov
cmps
jne
xchg
mov
js
repnz
mov
sub
outs
loope
cmp
cwde
psubb
jmp
fs
repnz
sub
pushf
rcr
inc
or
pop
fisttp
dec
mov
mov
xlat
(bad)
push
lock
sar
and
repnz
sub
mov
lods
xchg
sub
inc
repnz
(bad)
cli
popa
jmp
xor
mov
jp
fadd
jne
fadd
pop
mov
jmp
test
setbe
add
cmps
cmp
cli
xchg
repz
xchg
mov
sbb
adc
jmp
aas
jnp
fs
xchg
ret
rcl
pop
lods
jne
enter
inc
mov
adc
add
nop
mov
adc
and
xchg
or
adc
popf
sbb
ficom
add
(bad)
jae
pop
std
jmp
jno
jnp
in
jnp
leave
pop
jmp
push
jmp
cmp
inc
ins
push
rol
repnz
das
push
cmp
and
pop
inc
lea
jle
leave
rep
adc
ret
xchg
and
push
arpl
bound
xor
das
xor
int3
out
xchg
mov
mov
jmp
xchg
out
and
mov
inc
psrad
push
out
lea
mov
cld
sbb
xchg
rcl
into
adc
ins
sbb
xor
jbe
bound
pop
pop
cdq
xchg
sub
call
dec
pop
lock
enter
addr16
clc
lods
shl
xor
adc
pushf
lahf
xor
clc
(bad)
dec
push
jl
adc
addr16
inc
retf
cmp
and
cwde
fwait
arpl
stos
popa
lahf
lds
mov
push
and
cmps
push
pop
jbe
xchg
jmp
jne
outs
es
call
loop
lea
adc
(bad)
dec
pop
retf
pushf
xchg
lahf
in
jnp
jg
add
cmps
bound
sub
lods
xchg
lods
inc
test
adc
int3
jns
in
ins
fist
ins
jmp
push
push
add
or
cdq
and
mov
or
and
sbb
pop
fiadd
retf
cdq
ja
add
ret
adc
and
sbb
and
mov
imul
inc
xchg
addr16
repnz
movs
out
push
adc
dec
push
outs
scas
nop
sahf
jecxz
dec
(bad)
pop
inc
add
out
xchg
sub
push
mov
adc
jnp
stos
in
inc
jmp
jecxz
xchg
dec
inc
and
out
sti
hlt
mov
adc
and
jge
int3
out
mov
or
push
std
sub
out
outs
mov
leave
jmp
fcmove
imul
xchg
pusha
jne
mov
cmps
sahf
hlt
jae
dec
in
fmul
je
sar
and
or
enter
mov
adc
into
cld
mov
(bad)
lahf
fdiv
in
scas
add
jbe
add
int3
ja
je
je
repz
mov
sahf
xchg
test
pop
repnz
std
sti
js
sbb
call
gs
adc
push
cmp
xchg
cdq
mov
lock
ja
fimul
adc
scas
not
out
pop
pushw
mov
push
fidivr
xlat
inc
sub
dec
adc
leave
fwait
std
jmp
test
push
sbb
push
inc
lods
inc
iret
jmp
jge
xlat
or
add
mov
push
inc
pop
mov
push
call
ins
sbb
sub
sar
sub
cmp
int3
cmc
js
xor
mov
je
add
scas
dec
push
rcr
bound
aaa
ficomp
jmp
adc
div
or
arpl
mov
stc
(bad)
jmp
pop
jns
(bad)
push
push
xchg
fsub
jp
mov
jne
inc
mov
adc
rol
and
push
pop
and
out
shr
scas
not
mov
jecxz
repnz
outs
clc
sar
(bad)
loop
mov
data16
pop
jge
mov
fsub
(bad)
dec
repz
out
jg
ret
or
mov
adc
mov
add
imul
enter
(bad)
movs
leave
aad
mov
rol
mov
rcl
aam
rcl
sbb
push
or
mov
fcomp
retf
xchg
xor
xchg
jmp
ja
pushf
lea
aad
shl
mov
jp
lds
(bad)
adc
retf
scas
call
jno
xchg
pop
cvtps2pd
cmp
pop
mov
add
imul
xchg
(bad)
fcom
xor
jp
std
cs
hlt
dec
je
mov
pop
adc
rcr
dec
pushf
mov
adc
inc
lock
out
push
stos
inc
inc
das
and
es
mov
add
inc
jp
add
cmp
(bad)
aas
mov
mov
mov
jmp
sbb
inc
xor
aad
inc
shr
jl
(bad)
lea
jl
fs
nop
cld
mov
mov
dec
pusha
je
jmp
or
adc
cmp
pop
stos
xor
test
xchg
aam
fdivr
jecxz
sbb
(bad)
(bad)
test
int3
and
outs
push
sbb
dec
push
push
push
out
repnz
push
scas
inc
or
jbe
add
cmp
xor
xor
xchg
adc
jmp
cld
fbstp
or
mov
add
push
lock
pop
ret
dec
mov
call
mov
(bad)
fsub
and
gs
xor
les
jo
fs
repnz
icebp
ret
xor
ja
sub
test
or
add
cli
mov
imul
(bad)
loope
dec
out
js
jmp
cld
inc
mov
fisttp
sbb
xor
mov
mov
jle
mov
and
lahf
aam
loop
add
inc
pop
mov
aam
dec
jmp
mov
cmps
mov
xor
cmp
es
and
adc
jle
dec
enter
sub
push
add
in
xchg
int3
(bad)
in
not
retw
and
movs
jae
jnp
lea
mov
call
pop
mov
mov
dec
jl
cli
inc
out
fldenv
outs
sar
xchg
out
pushw
(bad)
fsub
lahf
(bad)
sbb
inc
scas
rcl
sub
cmps
adc
loop
inc
or
scas
fst
dec
mov
push
enter
test
shl
out
inc
inc
cmc
mov
cdq
pop
mov
ret
sbb
lods
sbb
loope
outs
cld
test
push
cmp
in
call
pop
test
fdivr
scas
or
and
add
stos
mov
out
push
sbb
or
(bad)
sar
outs
add
push
js
and
iret
inc
imul
xor
fs
pop
mov
sbb
test
rcl
pop
push
lahf
xor
in
and
xchg
push
or
neg
or
pop
dec
stos
fmul
(bad)
and
inc
loopne
imul
add
push
or
scas
cmps
stos
xchg
pop
add
sub
mov
xor
adc
or
mov
cmp
mov
pop
push
add
pop
sbb
in
cmc
outs
push
jnp
mov
aas
repz
jns
nop
sahf
cmps
imul
(bad)
ror
outs
outs
test
mov
push
jns
mov
sti
cmp
fiadd
push
xchg
mov
ins
loop
retf
lods
pop
int3
pop
les
fistp
popa
retf
xchg
add
in
(bad)
int3
push
xchg
test
repz
bound
sbb
imul
rep
int
dec
and
jb
(bad)
pop
add
xchg
leave
jl
imul
jo
pop
cmp
test
cli
pop
ds
fcmove
jecxz
and
mov
daa
leave
imul
cmp
adc
xchg
jl
pop
or
stos
xor
mov
icebp
outs
inc
jle
jnp
pop
inc
mov
cmp
sbb
xor
(bad)
mov
cmp
xchg
aas
inc
push
stos
or
inc
sahf
inc
inc
jbe
dec
adc
jmp
retf
faddp
out
jb
mov
test
idiv
mov
sahf
jmp
test
add
add
jne
sub
add
xor
aad
jp
inc
ds
aaa
btc
(bad)
inc
call
fcom
nop
imul
into
jno
add
push
mov
xor
sub
out
lock
jnp
out
(bad)
push
add
movs
pop
cmp
adc
and
jge
into
lea
test
mov
in
mov
cwde
(bad)
cmp
int3
jns
out
dec
inc
push
ins
sub
mov
sub
repz
add
jne
nop
dec
ffreep
gs
ror
xor
push
(bad)
or
dec
xor
and
retf
inc
adc
lea
xor
sub
(bad)
js
jae
rsm
mov
jnp
push
jns
into
mov
sub
pop
in
pop
dec
mov
ins
mov
loope
das
popf
nop
sub
imul
pop
jl
ror
int3
fdivr
cmp
inc
sahf
rol
sbb
dec
and
jge
xchg
dec
into
int3
cld
jno
mov
jno
inc
inc
mov
outs
dec
jecxz
pop
mov
dec
loop
mov
dec
jmp
fnsave
or
push
test
push
dec
jmp
dec
add
sbb
mov
xrelease
pop
sahf
shl
dec
mov
pop
call
pop
retf
ss
iret
jne
xor
mov
es
inc
mov
mov
sbb
jecxz
outs
iret
push
mov
nop
sub
jl
mov
add
sahf
ficomp
scas
sbb
addr16
ror
(bad)
shl
mov
add
xlat
jl
jge
repnz
in
repz
faddp
jecxz
or
lods
cmp
icebp
dec
mov
push
daa
enter
cli
push
(bad)
aad
cli
and
inc
movsx
rcl
fs
es
cmps
add
addps
test
add
stos
loop
xchg
and
fdivr
aad
mov
push
sbb
fwait
and
mov
jp
pushf
push
out
into
dec
dec
mov
jmp
fdiv
lds
mov
mov
loopne
sbb
outs
inc
inc
xchg
ins
loope
retf
xchg
cmp
dec
xchg
aam
loop
mov
sti
cmps
int
stos
cmp
fidivr
lahf
cld
add
data16
fidiv
aaa
enter
inc
sbb
and
pop
dec
or
pushf
in
push
mov
scas
push
pop
sbb
sbb
mov
inc
and
xchg
add
mov
add
xchg
jge
and
push
pop
xor
mov
int3
addr16
leave
ret
ja
ror
push
iret
xchg
sub
(bad)
jg
xchg
int
cmp
add
push
loope
push
pop
jecxz
jno
mov
jne
call
inc
mov
sub
jo
call
pusha
mov
mov
push
cmp
push
ret
push
mov
pop
loope
dec
hlt
push
mov
ret
call
sub
loope
mov
mov
leave
and
aad
je
xchg
push
and
scas
pop
faddp
xor
mov
cmp
mov
(bad)
sbb
mov
adc
nop
sbb
cmc
icebp
(bad)
scas
jae
outs
xor
ret
mov
fs
dec
cs
in
mov
sbb
xor
adc
retf
fisttp
repnz
cmp
neg
jns
lods
test
lds
mov
in
pop
jl
sbb
dec
ins
mov
dec
sar
inc
sbb
sbb
lock
mov
mov
jo
and
inc
xchg
push
sti
add
call
lods
retf
popf
out
loop
cli
xchg
mov
ss
xor
popa
xor
xor
es
xor
cmp
nop
sbb
cmc
mov
ja
sub
hlt
pop
mov
popf
sub
mov
mov
mov
jae
into
aad
sbb
and
dec
or
sub
js
adc
jmp
(bad)
jnp
loop
push
cmp
pop
gs
sbb
jne
add
jo
(bad)
mov
push
push
test
sub
push
fwait
or
lods
js
dec
dec
pop
into
and
iret
loopne
pop
retf
movs
out
add
jmp
or
xchg
adc
sub
in
and
ss
ret
pop
sahf
imul
dec
das
std
fdivr
scas
mov
push
mov
sub
xchg
pop
arpl
or
in
and
sub
fwait
add
stc
fwait
inc
mov
gs
ins
ins
cld
lock
xlat
fisubr
jp
iret
fucomip
pop
xchg
daa
mov
inc
mov
js
push
(bad)
fistp
mov
mov
or
jnp
jge
add
sbb
outs
add
test
jecxz
xor
je
jg
rcl
ror
ja
and
imul
outs
cmps
push
mov
cmp
fs
mov
call
lods
cdq
xchg
movs
movs
xchg
adc
xchg
hlt
dec
inc
jmp
leave
lds
dec
das
nop
mov
ret
cmc
mov
jb
push
adc
lahf
mov
nop
adc
dec
int
push
cmc
mov
outs
jo
std
cdq
ja
es
int3
scas
push
rol
mov
mov
in
mov
and
in
test
mov
xlat
mov
int
dec
sub
mov
jbe
jge
in
lea
push
mov
add
in
dec
jmp
cmps
stos
sti
xor
icebp
ret
data16
inc
xor
push
aaa
push
mov
fwait
jl
mov
sbb
push
mov
fwait
shr
pop
or
add
adc
mov
mov
pop
loop
or
in
ss
and
push
sbb
loop
mov
jmp
jl
inc
addr16
pop
add
push
arpl
cmps
xchg
dec
xchg
mov
in
jmp
dec
push
mov
or
jmp
sbb
and
dec
or
loopne
jle
les
stos
jle
mov
stc
test
daa
xor
pop
inc
(bad)
pop
cs
loopne
(bad)
jae
jae
inc
mov
sbb
repz
fwait
clc
outs
icebp
ds
imul
push
adc
mov
dec
retf
xor
xchg
shr
mov
imul
adc
out
lahf
sub
sbb
iret
push
das
push
jo
xor
xchg
add
inc
stos
shl
hlt
jecxz
mov
or
jmp
inc
pop
test
gs
mov
nop
gs
fdiv
mov
dec
add
xchg
repnz
add
xchg
arpl
sub
xor
inc
repz
lds
ss
fdiv
jb
jo
jno
sbb
pop
call
push
mov
int
leave
pop
xor
mov
pop
jmp
mov
jno
mov
xor
pusha
in
sar
js
mov
es
mov
(bad)
ja
push
dec
ja
mov
shl
sub
and
pop
inc
mov
cmps
sahf
mov
dec
outs
call
adc
add
sbb
push
jmp
sbb
div
mov
out
dec
xor
jb
xchg
shl
jne
add
pushf
mov
cmc
mov
in
adc
dec
jns
xor
fdivr
sbb
mov
ins
lods
inc
fld
test
jno
mov
xchg
mov
adc
pop
in
int3
dec
adc
pushw
mov
jns
adc
sbb
outs
fcomip
jecxz
xor
enterw
in
jmp
arpl
bound
aas
cmp
test
inc
add
fidiv
and
shl
dec
je
dec
pmullw
cwde
(bad)
cmp
test
adc
fwait
rcr
(bad)
jae
dec
push
cmp
sbb
lds
push
(bad)
lds
ins
sub
out
arpl
push
pushf
mov
adc
push
es
leave
xchg
es
(bad)
add
ficomp
or
retf
imul
hlt
and
test
pop
push
jns
stos
push
loopne
test
ror
(bad)
xchg
daa
jecxz
xchg
xor
sub
pusha
jo
adc
mov
xchg
mov
mov
inc
into
and
inc
inc
bound
xchg
mov
dec
push
arpl
retf
jecxz
sti
in
jge
mov
in
dec
imul
jge
or
cmp
int
cdq
rcl
shr
mov
dec
fidivr
xchg
xor
pop
xchg
push
outs
aam
aam
jmp
bound
cmp
pop
sbb
shl
mov
jne
fcom
das
aaa
mov
or
inc
push
scas
nop
std
sti
test
push
adc
(bad)
int
jmp
popa
clc
mov
cmp
in
pop
mov
and
inc
pop
sub
fldenv
jns
enter
and
jl
push
jb
jno
xchg
or
mov
nop
loopne
les
adc
pop
mov
stos
lods
jmp
adc
and
xchg
inc
inc
push
jmp
bound
mov
rol
and
push
out
jmp
jmp
add
aam
lds
mov
xchg
cmps
push
popa
mov
lahf
cwde
add
icebp
jb
fistp
bound
icebp
sub
jae
sbb
or
push
dec
sti
lahf
pop
xor
ss
call
lea
mov
mov
xor
sbb
mov
xchg
mov
in
and
jbe
add
scas
push
jb
lods
pop
into
aas
push
inc
jge
cwde
loopne
xbegin
retf
es
inc
nop
jmp
cmp
cmp
cmp
rcr
or
xor
or
out
mov
dec
std
scas
pop
inc
push
pop
out
and
inc
mov
and
lods
mov
dec
repnz
cld
sub
and
jae
and
xlat
ret
sub
(bad)
mov
dec
jmp
and
xlat
mov
and
jmp
cmp
(bad)
jbe
sub
mov
in
leave
popa
mov
ins
ins
stc
int
xchg
mov
ds
stc
fisttp
push
push
pop
je
es
in
(bad)
pop
out
cs
cmp
in
fcmove
cmp
and
and
test
cmp
mov
mov
sbb
mov
sub
push
cld
push
out
jae
lods
fdiv
cwde
jge
fdivr
retf
stos
bound
pop
add
(bad)
fmul
(bad)
lea
jle
jp
aaa
adc
icebp
add
movs
or
stc
sub
cmp
mov
outs
jmp
loope
lea
mov
mov
jmp
jae
imul
adc
mov
mov
fmul
mov
push
mov
mov
jnp
mov
mov
push
add
scas
scas
xchg
mov
fucomp
dec
pop
ins
xor
cdq
cdq
jne
xor
dec
icebp
xchg
push
and
push
les
xor
push
les
jecxz
sbb
ret
clc
sbb
call
fild
push
mov
xchg
cmp
inc
cmps
sub
out
push
movs
cmps
sub
test
leave
mov
bswap
dec
aad
cmc
sbb
sub
xchg
cmp
leave
jns
cmp
jl
test
cdq
jp
in
cld
ins
int3
mov
rcr
dec
sbb
out
adc
shl
mov
xchg
ins
sbb
out
movs
test
lds
imul
jge
push
jne
inc
cli
scas
(bad)
adc
jp
add
cmp
in
in
outs
mov
add
cmp
out
sub
and
jmp
xlat
pop
fmul
and
test
ins
icebp
cmps
cmp
pop
popf
sar
in
jl
cmps
pop
fimul
idiv
xchg
jmp
mov
lods
push
fs
mov
sbb
cld
test
in
out
cmps
push
mov
sti
popa
in
rcr
jb
test
mov
jge
jb
and
cmp
push
imul
sub
pop
sahf
pop
inc
add
xchg
dec
mov
dec
fst
mov
fist
daa
mov
into
cli
push
sbb
cwde
sar
scas
pop
xchg
inc
outs
xor
add
out
(bad)
loop
out
sbb
and
fsub
fdivp
(bad)
scas
mov
xchg
imul
inc
(bad)
(bad)
mov
pushf
cmps
enter
nop
inc
js
retf
repz
mov
lea
or
cmp
imul
jge
adc
mov
test
push
sub
inc
iret
sub
outs
(bad)
inc
retf
dec
jmp
push
test
frstor
out
(bad)
jl
movs
xor
leave
mov
push
mov
pop
cmp
out
call
lock
mov
mov
xor
pop
sbb
jmp
inc
push
shl
stos
mov
dec
push
pop
dec
mov
push
dec
enter
aaa
mov
in
ror
aaa
cmp
jbe
stos
push
and
ins
add
sahf
pop
test
mov
in
add
retf
mov
test
mov
std
call
dec
or
jb
xchg
in
or
sub
nop
sbb
push
xchg
out
pop
fwait
dec
push
add
cmc
lock
pop
popf
cmp
addr16
mov
arpl
rol
mov
push
push
pop
xchg
inc
add
or
das
mov
mov
loopne
sub
or
sbb
es
call
jbe
out
dec
and
or
inc
jns
mov
mov
scas
out
out
mov
outs
or
sub
retf
bnd
movs
in
addr16
imul
inc
addr16
add
and
js
pusha
pop
stos
mov
mov
add
fs
div
sub
fwait
jb
push
pop
rcl
sub
cmc
mov
or
sbb
push
xchg
stos
push
(bad)
(bad)
mov
or
mov
pop
inc
loope
loopne
and
or
cli
adc
sbb
add
das
outs
cwde
and
pop
fcom
pop
ret
es
daa
(bad)
call
push
adc
jl
dec
or
dec
scas
cld
pop
aaa
cs
add
cmp
sbb
adc
bound
sbb
outs
popa
pop
xor
inc
jae
xor
outs
inc
mov
movs
sub
call
xor
and
icebp
enter
retf
cmp
pusha
pop
test
scas
pop
sub
jle
push
pop
call
push
xchg
aas
inc
pop
jle
pop
cld
push
sub
sub
and
pusha
mov
mov
out
mov
dec
stos
mov
lds
(bad)
nop
sti
clc
push
aad
or
xor
sbb
mov
gs
add
mov
lods
fs
mov
sbb
test
inc
mov
mov
lods
cmp
mov
mov
arpl
aam
adc
adc
dec
loopne
mov
int
and
cmps
mov
dec
xchg
jecxz
jnp
xor
jl
inc
jp
out
jmp
mov
cmp
jmp
pop
mov
repz
mov
mov
xor
or
in
cmp
push
out
push
mov
mov
imul
or
aad
jge
push
fild
adc
jnp
(bad)
cwde
lock
int3
adc
jo
add
iret
xor
add
(bad)
(bad)
xor
inc
mov
jmp
dec
xor
in
int3
cld
repz
repnz
add
hlt
mov
adc
inc
test
out
push
sbb
or
jp
sbb
repz
in
dec
mul
rcl
std
(bad)
ins
dec
push
xchg
retf
movs
jne
jp
add
and
int3
jl
sub
xor
std
std
in
ds
inc
or
mov
cmp
cmp
mov
pop
cdq
idiv
or
jmp
xchg
dec
scas
std
inc
pop
adc
shr
jb
retf
aam
mov
pop
hlt
pop
add
dec
fldenv
and
ins
shr
test
and
push
inc
imul
fsubr
push
mov
ret
mov
jl
pop
jl
ror
push
jle
mov
rcr
movs
sahf
lods
std
sbb
(bad)
test
in
xor
jns
xchg
cmp
or
add
pop
test
adc
iret
add
stos
jecxz
adc
fnsave
cmp
cld
repnz
sbb
out
int3
xor
gs
push
xchg
xchg
retf
fdiv
pop
or
mov
jg
call
lds
push
arpl
jecxz
popf
outs
dec
shr
mov
cs
mov
push
aam
pop
jecxz
xchg
jp
mov
popf
or
mov
int3
neg
xlat
pop
xor
ror
lahf
xchg
sub
sbb
mov
adc
mov
jne
out
sbb
call
mov
das
mov
popa
mov
push
mov
es
lock
aam
mov
xchg
jmp
inc
das
les
pop
mov
and
lods
and
aaa
inc
mov
das
and
lods
mov
in
bound
ins
addr16
stos
test
cmc
shl
mov
(bad)
xor
and
mov
fwait
(bad)
or
jmp
sbb
add
enter
fnstenv
aas
mov
inc
sar
jp
push
sbb
ins
cmp
pop
pop
dec
cmp
std
or
ins
lods
sbb
out
cmp
fnstsw
mov
cmp
dec
lods
movs
jnp
invd
daa
mov
test
jmp
cmp
movs
mov
push
mov
lea
jns
adc
retf
xor
jp
pop
ins
shl
or
xchg
rol
(bad)
xor
adc
xlat
pop
adc
loopne
ficom
outs
scas
cmc
adc
cdq
call
xchg
dec
mov
cmp
xor
ss
and
stos
xor
pop
xchg
dec
loop
sti
je
cmc
adc
repnz
jge
repnz
jns
and
or
std
cli
lods
xor
and
lods
inc
mov
pop
xor
es
pusha
dec
inc
ins
xor
and
ss
push
ds
jbe
int
daa
mov
dec
pslld
mov
dec
or
sbb
lock
and
cmc
mov
lea
outs
inc
test
push
jno
push
mov
mov
bound
push
pop
add
mov
ins
push
cmp
test
jecxz
jnp
icebp
mov
rcr
mov
retf
les
mov
mov
push
mov
daa
mov
lahf
fild
hlt
(bad)
cmp
mov
adc
xlat
mov
xchg
fs
jmp
xchg
jne
push
mov
rcl
scas
lea
mov
mov
pop
cmp
push
mov
lods
frstor
jns
adc
icebp
mov
ins
dec
bound
push
pop
jmp
push
hlt
ins
and
std
inc
out
lock
enter
jg
xor
(bad)
xchg
jbe
cmp
aaa
(bad)
push
setp
loopne
pop
sbb
test
retf
lods
loop
js
xchg
pop
gs
into
sub
push
sbb
movs
pop
stc
jp
inc
test
leave
mov
pop
fs
es
and
addr16
cmp
ins
fcmovb
stos
pop
stos
sbb
repnz
add
cmp
or
inc
jp
jae
jno
cli
sub
adc
imul
xchg
push
pop
push
ret
fcom
sti
sbb
sbb
rol
in
jmp
mov
push
dec
pusha
lods
sub
jbe
leave
mov
dec
lock
adc
iret
mov
je
stos
jno
in
cmp
jno
inc
pop
sub
sbb
and
or
test
adc
into
push
xor
aad
daa
xor
jno
popa
xor
and
mov
or
push
mul
fstp
div
fmul
pop
shl
jmp
cmp
push
mov
repz
pop
popa
jno
xor
mov
xor
stc
jns
jb
xchg
fild
jo
or
sub
mov
jno
in
adc
pop
jp
ins
push
icebp
pop
lea
imul
mov
loop
mov
out
xchg
outs
repz
mov
sti
sbb
or
rcl
(bad)
push
test
or
ja
dec
test
das
dec
sub
add
push
sahf
ficom
or
or
inc
shl
mov
pop
arpl
das
xor
pop
add
dec
add
jmp
push
pop
push
out
mov
mov
sar
and
inc
test
or
ficomp
pusha
mov
fild
jns
jecxz
outs
cmp
cmps
loopne
sbb
cmc
xor
aam
cmps
stc
push
lds
xchg
and
ret
or
sbb
ja
mov
fcom
test
shl
pushf
ror
pop
loope
push
mov
(bad)
mov
push
in
add
retf
xchg
adc
push
idiv
retf
ret
jp
movzx
and
test
clc
sbb
leave
adc
pop
cld
loope
xor
jnp
jle
call
xor
mov
pop
mov
(bad)
icebp
mov
push
(bad)
inc
push
cs
push
bound
call
outs
xor
push
mov
mov
sub
stos
cmc
push
cdq
ins
mov
nop
pop
stc
test
mov
jp
jnp
ss
mov
(bad)
push
mov
mov
cwde
pusha
movs
add
jg
mov
sub
test
popf
stc
lods
and
or
out
sub
leave
mov
mov
jecxz
sbb
scas
sub
out
mov
(bad)
stos
or
xchg
loope
test
xchg
rcr
movs
jbe
aad
xchg
mov
mov
jg
aaa
jl
inc
sti
push
pop
xchg
pop
test
xor
cmc
clc
mov
xor
pop
std
push
xchg
lea
imul
mov
test
xor
ins
adc
push
push
xchg
mov
in
leave
imul
or
cli
pop
dec
jg
std
inc
sub
or
mov
ds
mov
or
sti
arpl
push
icebp
mov
js
and
cmp
mov
(bad)
jle
(bad)
dec
push
mov
(bad)
jo
jo
ret
jecxz
loopne
outs
js
add
inc
call
adc
push
(bad)
std
push
or
outs
push
pop
cmc
sub
mov
movs
scas
and
push
mov
gs
dec
cmps
mov
data16
(bad)
push
retf
and
movs
adc
sar
scas
mov
call
or
or
icebp
xchg
xchg
enter
jmp
dec
cwde
gs
cmp
inc
sbb
adc
push
push
or
mov
push
pop
lea
push
mov
fbstp
xchg
push
retf
mov
je
xor
push
movs
mov
push
cmp
lods
push
mov
retfw
or
push
lds
pandn
int
xor
mov
loop
je
aam
ret
ss
jns
retf
ins
xor
lahf
xchg
cmp
jp
nop
jno
jecxz
rcl
jns
mov
dec
push
in
fimul
ret
movs
call
xchg
enter
cdq
shl
sbb
stos
test
out
(bad)
cmp
xor
adc
sbb
pop
dec
adc
sub
ins
xchg
push
pop
sti
dec
push
scas
adc
inc
imul
mov
es
dec
mov
shl
cmps
rol
loop
mov
in
pop
fnstenv
out
cmp
xchg
pushf
les
mov
xchg
(bad)
fsubr
jne
cmp
add
pop
xchg
aam
pop
(bad)
dec
inc
sbb
or
sbb
jmp
dec
mov
cld
popf
cwde
cmps
dec
or
inc
pop
mov
mov
outs
mov
inc
xchg
clc
jg
movs
jno
xor
mov
cli
jbe
ins
mov
jecxz
jge
cmc
xlat
retf
cmp
outs
dec
iret
(bad)
pop
dec
or
lods
push
sbb
(bad)
adc
(bad)
loop
xchg
push
loop
add
jmp
js
(bad)
cmps
jne
popa
lahf
cdq
inc
jmp
jecxz
xchg
pushf
test
jl
and
adc
repz
xor
adc
xchg
cli
pop
lods
ret
dec
imul
add
xchg
mov
sub
test
scas
push
leave
cmps
std
pop
fist
push
sub
jmp
jae
fcmovnu
into
cmp
sbb
in
cmp
jecxz
call
and
jcxz
ins
xchg
push
xchg
cmp
rol
pop
sub
push
push
pop
cdq
mov
xchg
mov
dec
push
jnp
jl
test
ss
cmp
xchg
adc
mov
jg
push
neg
mov
scas
out
inc
inc
rcr
pop
adc
in
pop
push
in
xcrypt-cfb
cmps
popa
mov
cmp
dec
jne
mov
mov
fst
and
mov
cdq
xchg
push
data16
mov
ja
xor
clc
adc
push
mov
stos
scas
ds
mov
test
adc
sub
push
jp
mov
sti
mov
mov
mov
sub
jecxz
xchg
sub
jmp
retf
clc
add
test
outs
outs
std
clc
adc
sbb
in
sub
aaa
(bad)
push
stc
jne
xor
dec
fld
adc
inc
push
popa
sbb
xchg
jg
test
addr16
jmp
not
pop
xor
neg
stos
outs
(bad)
pop
cmps
movs
push
mov
or
jmp
push
shr
leave
mov
movs
cmp
push
in
push
cmp
out
xchg
or
in
test
xchg
lds
in
nop
sbb
(bad)
out
fneni(8087
fidivr
retf
bound
retf
addr16
adc
xchg
sbb
pop
mov
call
addr16
dec
clc
je
inc
jp
or
push
mov
pop
icebp
jbe
xor
in
(bad)
mov
in
adc
inc
jns
xor
xlat
fsub
dec
pop
(bad)
or
jbe
int
cmps
jbe
in
imul
js
cmp
jae
retf
jne
imul
xor
adc
nop
xchg
sar
aad
mov
cmp
retf
call
jne
sti
sbb
adc
mov
scas
fstp
in
imul
stos
movs
jle
(bad)
sub
mov
or
shl
jb
dec
enter
stos
pushf
add
fwait
inc
mov
test
int3
sbb
cmc
popf
stos
call
sub
cli
leave
ds
jb
jne
outs
nop
rcl
fadd
add
push
cmp
or
nop
cwde
fcom
inc
popf
cli
pop
out
xchg
ds
push
mov
inc
clc
add
shl
mov
push
pop
aad
cmp
movs
or
adc
nop
and
test
push
repnz
cdq
cmp
rol
xlat
fimul
inc
inc
pop
jb
out
shl
jge
xor
ss
or
xchg
imul
push
push
pop
ret
lods
repz
loop
add
mov
pop
punpckhdq
inc
loope
ja
sub
ins
fcomip
mov
sbb
cmp
(bad)
push
pop
xor
mov
fimul
xchg
cmps
outs
daa
fwait
dec
mov
hlt
adc
(bad)
jmp
sbb
les
adc
jp
xor
inc
fisttp
cld
cmp
jns
inc
pusha
jns
xchg
or
arpl
jno
mov
test
das
adc
push
adc
jns
daa
icebp
outs
adc
mov
nop
xchg
fdivr
ror
fild
into
sbb
cmp
add
call
call
cwde
xchg
push
mov
std
push
dec
(bad)
inc
push
mov
imul
and
jmp
push
scas
jg
ja
fdiv
adc
test
or
and
adc
stos
pop
jecxz
test
dec
push
popf
and
mov
test
pop
add
ror
fist
push
add
adc
push
or
xchg
inc
add
dec
inc
je
inc
lock
loop
retf
or
arpl
fisub
fwait
or
clc
jle
push
imul
dec
pop
sbb
rol
adc
mov
push
inc
mov
mov
pop
inc
shl
mov
pushf
mov
adc
movs
out
cmp
out
shr
dec
retf
and
jno
pop
sub
stos
data16
dec
push
hlt
cs
int
and
and
xor
jbe
jecxz
pushf
pop
mov
sub
sbb
inc
push
cmp
(bad)
jmp
adc
cmp
xchg
scas
test
dec
and
rol
mov
mov
ret
dec
add
leave
push
into
in
or
sbb
and
mov
mov
and
repz
pop
mov
lods
test
fld
ja
scas
xor
mov
retf
push
mov
xchg
xor
mov
lea
repnz
jmp
adc
jle
std
add
aad
out
push
sub
loopne
popa
xchg
adc
dec
dec
mov
les
xor
iret
out
popa
lods
movs
mov
jp
int
push
xor
or
and
scas
jno
test
mov
dec
sbb
ss
mov
sar
dec
xor
nop
shr
dec
repnz
pop
shl
stos
dec
sub
pop
mov
pop
hlt
es
and
add
xchg
pop
mov
push
mov
es
(bad)
fldz
out
dec
scas
cdq
jl
aaa
ins
xchg
add
add
jo
aas
push
xchg
xor
inc
mov
arpl
mov
adc
cmps
stos
mov
push
dec
in
add
ror
dec
pop
or
pusha
aam
ret
push
jmp
mov
jp
sbb
or
push
cmp
jge
cmp
call
push
dec
clc
xor
sbb
out
mov
mov
repnz
lods
jl
rcl
inc
out
lock
mov
mov
xchg
call
jp
push
test
pop
out
mov
test
in
push
adc
sub
(bad)
arpl
pop
test
aaa
(bad)
les
or
pop
mov
jo
(bad)
xchg
icebp
rcr
xchg
ja
fs
dec
xor
adc
in
xor
push
push
or
outs
(bad)
jmp
aad
aas
add
jb
xchg
cmps
and
mov
out
adc
sub
inc
cmp
xor
int3
jp
mov
push
jns
je
enter
popf
(bad)
push
mov
cld
loopne
adc
les
retf
sub
or
jl
leave
test
xor
jb
mov
dec
fwait
icebp
xchg
adc
adc
in
cdq
xchg
lods
push
(bad)
data16
retf
xchg
aaa
sti
add
repz
sub
(bad)
fdivr
cmp
imul
sbb
sub
dec
jmp
mov
push
cmp
loope
bound
mov
imul
sub
std
xor
movs
stc
idiv
cdq
xor
in
jp
inc
inc
call
sub
mov
mov
icebp
fldenv
out
cdq
add
jmp
ins
call
pop
cld
loop
shl
mov
and
lock
and
cmps
fisub
jns
cld
cdq
inc
jo
repz
push
popf
xchg
inc
push
push
inc
push
popf
adc
fild
ret
enter
iret
pop
lods
pop
sbb
out
add
fs
jne
ja
cmps
and
(bad)
fcom
int3
ins
sti
push
xchg
or
cmp
lea
xlat
movs
mov
in
dec
mov
push
push
fdiv
cmp
je
inc
mov
stc
sar
push
mov
dec
cmps
fwait
sbb
push
mov
push
shl
(bad)
fst
stos
ret
mov
dec
cwde
js
stos
loopne
lock
fisttp
dec
pusha
sub
aas
sub
xor
test
(bad)
jae
push
mov
and
pop
lahf
inc
je
loope
outs
cld
mov
in
outs
mov
cmps
or
mov
push
into
push
jmp
jo
cdq
cli
mov
push
bound
and
mov
jmp
adc
ret
loope
ret
outs
call
idiv
sub
push
xchg
scas
setnp
push
fimul
mov
mov
test
ds
pop
jo
jecxz
loop
loop
mov
pop
popf
mov
fisubr
push
and
add
add
into
mov
into
pushf
cmp
div
inc
jge
fs
aam
adc
push
leave
retf
dec
call
rcr
rol
stos
stos
arpl
mov
cmp
adc
add
mov
ds
sahf
sbb
sub
scas
fdivr
and
shr
push
imul
or
icebp
sbb
push
pop
scas
pop
out
pop
in
loop
addr16
movs
xor
sbb
cmps
or
test
dec
imul
mov
mov
fld
ret
push
out
ins
sub
and
ins
(bad)
mov
xchg
js
iret
out
daa
xor
xchg
hlt
shr
retf
aaa
pop
inc
popf
sub
pop
fnsave
inc
stos
shr
ss
pushf
popf
jbe
stos
dec
ds
fadd
stos
xchg
jbe
stc
push
pop
jmp
test
jmp
sub
jmp
jge
pop
sbb
xchg
jne
xchg
imul
push
jecxz
push
mov
adc
mov
jge
out
sub
sub
iret
mov
push
repz
jecxz
xor
mov
leave
sbb
mov
movs
popf
and
rol
xor
add
addr16
dec
je
xchg
mov
jl
mov
mov
xor
sti
sbb
shl
xlat
clc
inc
and
mov
xor
nop
sub
xlat
cmc
mov
mov
cmp
mov
dec
dec
or
mov
aam
add
sbb
and
ret
pop
jle
out
iret
add
jge
paddusb
int
mov
jb
pop
popf
inc
(bad)
sub
shr
in
cdq
(bad)
fisub
(bad)
mov
sub
mov
mov
xor
stos
push
sahf
pop
pop
shl
add
fiadd
in
faddp
xor
out
pushf
mov
dec
leave
sti
sbb
mov
or
sub
test
mov
test
jno
cdq
call
aas
pusha
sub
jmp
mov
mov
or
lahf
mov
jo
adc
les
jecxz
jnp
mov
cs
std
cdq
pop
mov
or
push
(bad)
rol
jae
popf
push
sbb
cdq
cmps
in
add
addr16
das
imul
loopne
dec
lahf
daa
mov
xor
fistp
add
sub
inc
mov
mov
mov
out
jo
push
xchg
mul
or
mov
pop
pop
push
sbb
scas
cdq
aaa
movs
jb
xor
lods
xchg
sbb
aam
inc
scas
aas
xchg
push
cmc
aas
rol
fisttp
lahf
cld
imul
mov
jl
push
sbb
std
stos
inc
loopne
push
and
popf
xchg
int
mov
mov
dec
(bad)
jmp
xor
mov
xor
push
ret
ror
xor
mov
jne
fldcw
pop
pop
shl
imul
add
aaa
xor
outs
outs
call
push
jbe
cmps
movs
adc
mov
adc
sub
sahf
in
mov
mov
mov
mov
dec
mov
dec
jl
mov
and
mov
icebp
push
mov
push
push
shl
icebp
pop
cli
mov
(bad)
push
scas
push
retf
mov
dec
popa
jle
call
cmps
jo
data16
dec
pop
bnd
jo
or
push
xchg
icebp
sub
sub
jb
imul
in
inc
pop
jle
sub
or
add
call
mov
xchg
sbb
aas
ret
push
xchg
(bad)
mov
mov
xchg
leave
mov
mov
sti
enter
ins
ja
imul
and
(bad)
in
fbstp
xchg
or
mov
pop
push
jno
xor
xor
dec
pushf
loope
mov
sub
push
pop
pop
inc
xor
scas
iret
dec
cmp
jecxz
fwait
mov
pop
mov
xor
out
sbb
sti
sub
pop
sbb
push
xor
movs
int3
jno
pop
dec
scas
lods
mov
shl
xchg
pop
sub
mov
rcl
mov
xchg
rcl
fst
call
jg
leave
and
cmps
mov
popf
scas
(bad)
idiv
lock
in
or
inc
xchg
scas
cmps
call
sub
in
fdivr
stos
lods
stos
mov
jo
enter
mov
pop
sti
fstp
sub
dec
lahf
stc
dec
xchg
push
fldenv
popa
adc
dec
aaa
sbb
cmp
aad
fmulp
pusha
add
cmps
cdq
ds
pop
neg
push
mov
popf
repz
(bad)
ja
enter
outs
cs
or
sti
cld
jl
mov
call
jbe
xchg
and
mov
mov
dec
test
std
push
loopne
int3
pushf
outs
js
mov
fs
sahf
test
outs
or
adc
push
(bad)
mov
sbb
pop
cmp
mov
adc
jecxz
sti
(bad)
cmp
test
mov
rol
loop
pop
fiadd
dec
call
js
(bad)
movs
cmps
mov
xchg
pop
push
sub
je
cli
pop
shl
icebp
cmp
movs
xchg
dec
cld
sub
cdq
or
shl
inc
ret
lock
cmp
outs
ret
mov
test
call
mov
lds
sub
lea
cmp
push
inc
dec
lahf
mov
add
mov
add
xchg
or
add
inc
ret
xor
add
aad
retf
dec
cmp
mov
or
add
lahf
pop
rcl
pop
pop
sbb
call
pop
adc
or
mov
add
mov
or
sub
inc
mov
pop
add
jg
add
and
and
ja
and
pop
(bad)
shr
rcr
mov
push
push
or
inc
adc
xchg
jo
mov
push
fwait
shl
movs
push
xchg
seto
and
fwait
retf
pop
jle
mov
mov
test
pmaddwd
ins
xor
xchg
add
sub
(bad)
cmps
inc
jmp
mov
ins
adc
mov
push
mov
or
mov
pop
jno
loop
jae
aad
pop
pop
mov
repz
rol
test
shr
bound
pop
add
inc
xlat
mov
inc
out
xchg
push
and
pop
fsub
xor
mov
pop
sbb
enter
test
ss
mov
popf
test
push
movs
jp
pop
repnz
fimul
xor
ins
data16
jmp
mov
mov
xchg
and
push
pop
add
(bad)
mov
stos
mov
jnp
jns
mov
cwde
fnstcw
cwde
jns
cmp
out
adc
(bad)
fsubr
mov
dec
push
sub
movs
not
ja
pop
add
movs
leave
adc
mov
fst
cdq
mov
jbe
int
sbb
aam
test
cli
pop
add
push
cmp
xchg
add
js
jno
xor
je
sar
pop
push
stos
retf
(bad)
in
data16
push
out
push
jmp
xchg
xchg
inc
adc
pushf
push
pop
scas
inc
add
aaa
in
cmps
fistp
jo
add
pop
pop
sbb
repz
enter
cmp
mov
jecxz
lods
jle
dec
xor
daa
test
mov
out
and
test
xor
xchg
push
stos
add
js
loopne
mov
js
adc
sbb
data16
retf
outs
popf
mov
cmp
mov
std
mov
ins
cmc
scas
add
sbb
stc
gs
mov
sar
pop
or
popa
xchg
xor
mov
(bad)
push
test
xlat
daa
mov
cdq
cmp
js
jmpw
cld
cmps
nop
jmp
out
xchg
xor
shl
aam
adc
adc
xor
fcmove
sbb
pop
inc
es
pop
cmc
xchg
push
test
jle
push
test
push
ds
dec
jb
movs
sti
(bad)
fs
adc
adc
add
scas
xor
lods
mov
loop
dec
sub
cmps
mov
inc
dec
jo
pop
leave
sub
sub
daa
mov
cmp
inc
cmp
and
push
adc
jno
jle
pusha
and
and
call
stos
add
sub
sbb
pop
mov
ins
mul
mov
pop
scas
xor
rcr
mov
push
(bad)
mov
mov
scas
cmc
out
daa
mov
mov
in
popf
movs
pusha
ret
adc
cmp
test
jnp
mov
push
sbb
sti
xor
and
mov
xchg
sbb
sbb
sub
or
mov
movs
dec
cmp
out
cmp
xchg
or
jb
pushf
xchg
cmp
mov
jp
icebp
jge
(bad)
sar
dec
jge
mov
mov
jae
mov
inc
cdq
adc
xchg
fcmovb
cmps
and
mov
arpl
pop
cs
or
ins
cmp
cmc
cmp
test
pop
(bad)
mov
mov
push
test
(bad)
mov
jp
mov
dec
in
hlt
js
in
xor
push
xor
repnz
or
int3
jmp
mov
cld
mov
inc
(bad)
retf
pushf
cmp
mov
inc
pop
add
and
ja
in
sub
dec
sbb
pop
pop
jo
mov
loopne
sbb
sub
jae
adc
daa
cmp
shr
dec
stos
call
pop
gs
inc
adc
icebp
loopne
dec
sar
out
mov
xchg
popa
or
mov
nop
sub
retf
retf
xchg
dec
mov
or
adc
mov
aaa
mov
xchg
xchg
push
inc
je
icebp
into
and
fisttp
add
inc
push
repz
arpl
aas
not
cmp
push
pop
aam
repz
xchg
aam
in
addr16
imul
ins
xor
push
sub
shl
sub
jo
jnp
mov
rcr
repz
imul
or
mov
cmp
jbe
mov
mov
mov
sti
jae
sbb
in
mov
mov
lock
adc
add
cmp
xchg
jmp
and
inc
(bad)
mov
inc
in
push
js
xchg
sbb
jb
std
and
scas
jmp
inc
fsub
in
mov
out
das
add
jg
scas
mov
dec
loop
sbb
xchg
mov
mov
mov
fidivr
pop
bound
sub
scas
add
mov
sar
(bad)
ret
dec
pop
loopne
xchg
ret
rol
shr
sub
sahf
dec
sbb
push
iret
inc
fldcw
xchg
fisubr
mov
test
pop
jae
ret
push
mov
jp
mov
pop
sti
outs
or
ins
push
mov
movs
sti
iret
dec
popf
(bad)
mov
lahf
cld
leave
and
push
dec
popa
xchg
(bad)
adc
or
(bad)
outs
mov
bound
sbb
sbb
mov
cli
std
xchg
arpl
imul
(bad)
ins
sahf
lods
es
inc
mov
xor
test
jnp
mov
in
mov
add
int3
pop
stos
jmp
ret
or
mov
fisttp
xor
sti
in
out
xor
sub
stc
or
popa
push
xchg
(bad)
sbb
ins
clc
lock
cmp
inc
(bad)
neg
loopne
pop
add
stos
mov
fnstsw
pop
std
mov
imul
add
icebp
enter
imul
inc
ret
or
mov
(bad)
pop
(bad)
mov
addr16
xor
pop
sbb
mov
cmp
test
in
data16
push
loope
dec
imul
cld
dec
cmp
xchg
ins
movs
sub
std
cmp
sbb
jle
fdecstp
add
mov
in
sub
leave
imul
and
je
hlt
lahf
cmp
aas
jnp
jns
xchg
cdq
in
imul
add
(bad)
inc
stos
std
(bad)
add
jne
ins
add
push
retf
ins
ins
mov
div
inc
mov
xchg
repz
loop
inc
dec
repnz
xchg
jnp
bound
mov
cmc
in
test
in
stc
and
inc
pop
inc
and
loopne
jmp
sbb
(bad)
mov
sbb
rcr
iret
(bad)
imul
stc
add
(bad)
mov
(bad)
nop
sbb
push
mov
dec
aad
sbb
test
inc
dec
mov
adc
daa
and
dec
pop
sub
clc
jg
repz
lods
pop
int
ss
jge
xchg
jmp
mov
sbb
cmp
adc
mov
movq
cmp
cwde
(bad)
test
mov
test
mov
je
jle
jmp
sar
cmc
mov
mov
dec
mov
pop
ret
and
inc
xor
in
jo
xor
aaa
push
pop
jne
imul
lods
push
(bad)
mov
push
cmc
sub
mov
dec
xor
out
sub
sti
push
clc
call
and
mov
sbb
mov
dec
inc
cmp
lods
jp
aam
in
retf
dec
add
pop
inc
fst
push
fld
repnz
or
jmp
retf
outs
mov
fist
mov
imul
fnsetpm(287
inc
xor
mov
retf
push
pop
sub
lods
push
stos
sub
jns
pusha
js
out
ins
psraw
aad
mov
dec
imul
sbb
bound
add
in
shr
sahf
call
cld
xlat
mov
push
in
cs
add
mov
mov
sub
dec
jbe
ins
sbb
add
leave
push
jmp
fisttp
sti
popf
(bad)
enter
or
(bad)
sub
cmps
cmps
cli
retf
out
xchg
mov
js
inc
(bad)
ins
mov
mov
xor
outs
ja
ror
pusha
mov
pop
leave
pop
sbb
jecxz
movs
lea
cmp
or
in
sbb
ret
jns
scas
pop
sub
push
inc
dec
jg
test
or
fwait
mov
rcr
loope
sbb
ret
push
inc
shl
scas
movs
out
ins
dec
iret
cwde
test
(bad)
rcr
cmps
mov
(bad)
in
mov
mov
or
xor
inc
xor
or
push
or
jmp
dec
(bad)
cmp
adc
mov
das
lock
stos
adc
pushf
mov
fst
push
push
dec
dec
test
(bad)
jp
movs
jle
adc
adc
mov
sub
rcl
ins
push
push
shl
icebp
jbe
inc
inc
jle
xchg
pop
pop
stos
(bad)
setp
xor
or
lods
xor
inc
movs
(bad)
mov
or
jne
neg
shl
jp
das
xchg
mov
call
lahf
bound
mov
inc
pop
leave
nop
(bad)
orps
add
pop
loope
cmc
loop
add
bnd
lock
add
jbe
stos
jecxz
push
xchg
and
pop
ror
adc
mov
and
mov
test
dec
or
inc
loop
mov
inc
pop
call
mov
dec
or
xchg
xor
outs
sbb
push
or
jg
push
inc
lods
and
out
sub
mov
or
mov
movs
mov
add
addr16
dec
test
in
cmps
iret
inc
sar
push
call
inc
cmp
push
xor
push
imul
push
xchg
jmp
jecxz
push
int3
sub
push
stos
addr16
mov
xchg
or
inc
stos
ins
out
enter
rol
in
out
adc
sti
xchg
mov
inc
rol
repnz
lock
cs
push
loopne
(bad)
gs
adc
mov
pop
mov
adc
ja
jbe
mov
jnp
jb
mov
jb
jp
movs
mov
pop
es
jmp
xchg
sub
push
push
mov
setnp
adc
jae
jecxz
pop
ins
jge
lahf
ins
cs
fdiv
and
sti
int3
mov
lods
jmp
es
imul
scas
sti
loop
icebp
in
dec
jge
cmp
test
pop
jecxz
scas
adc
mov
(bad)
aaa
outs
daa
sahf
scas
mov
icebp
mov
repz
mov
out
das
add
call
xchg
shr
push
xor
push
mov
aad
mov
mov
sbb
pop
(bad)
or
push
ffreep
xor
jb
sub
nop
and
sub
push
mov
test
sahf
rcl
mov
or
out
jl
or
mov
jmp
(bad)
jo
fdiv
adc
push
pop
int3
fwait
sub
pop
(bad)
and
xor
daa
xchg
iret
ds
and
outs
leave
xchg
ss
pop
icebp
sbb
stc
jo
mov
adc
dec
out
xchg
jo
pop
pop
pop
lock
ins
cwde
cs
test
jmp
jg
push
(bad)
mov
outs
dec
retf
adc
jb
popf
outs
add
test
mov
popf
pop
aaa
cmp
cmc
lock
push
lahf
(bad)
or
out
push
push
cld
jle
mov
adc
ds
inc
and
inc
repnz
imul
jnp
loop
mov
inc
or
mov
mov
add
inc
fcmovu
repnz
mov
mov
mov
cmp
jae
call
dec
adc
or
out
jnp
dec
fbld
adc
enter
mov
ja
aas
(bad)
cdq
or
mov
dec
and
cmps
mov
lds
mov
outs
call
sub
imul
mov
ds
sub
cmps
adc
mov
popa
(bad)
and
shr
and
add
xor
mov
stos
das
mov
sub
jae
push
xor
push
test
jmp
adc
pop
adc
pop
outs
je
dec
pushf
es
das
fst
cwde
hlt
rcl
pop
push
jge
out
push
out
ja
mov
repz
pop
adc
push
sub
enter
add
mov
ror
fcmovnbe
ja
mov
popa
in
fdivrp
pop
adc
jmp
sbb
xchg
in
xor
into
rcr
imul
loopne
sub
cmps
cmps
push
add
sbb
push
pushf
dec
out
jne
cmp
ja
test
adc
xchg
bound
stos
imul
pop
xchg
mov
jbe
adc
push
sbb
or
mov
sub
and
sub
jg
or
pop
movs
and
pop
dec
ins
fsincos
neg
movs
lods
xor
mov
lods
les
ret
jmp
add
movs
push
add
adc
xchg
inc
mov
cmp
outs
jecxz
dec
cwde
iret
mov
(bad)
jmp
sub
jecxz
fcomip
xchg
cmps
(bad)
inc
cmp
mov
add
xchg
cmp
cdq
iret
mov
add
dec
jg
or
mov
ins
push
sti
or
int
outs
xchg
adc
js
and
outs
ja
pop
out
pop
inc
pop
sub
ins
pop
sub
dec
mov
das
sub
jp
lds
out
fsubr
stc
push
mov
pop
push
sbb
shl
sbb
xchg
dec
jle
push
fidivr
xor
pop
sbb
call
sub
les
test
scas
out
sar
mov
mov
dec
jno
dec
mov
(bad)
cdq
push
jmp
add
push
fidiv
push
sbb
je
jmp
adc
fs
add
dec
adc
pop
adc
jp
add
jmp
jns
aas
bound
mov
fsubr
test
xchg
xchg
scas
loopne
outs
dec
vmovss
adc
retf
cmp
dec
das
xchg
cmc
scas
not
cmp
add
jp
ss
(bad)
popa
push
lods
adc
test
cmp
out
pop
fwait
imul
inc
jge
in
ret
xchg
sahf
(bad)
and
ficomp
jae
int
pmovmskb
mov
pop
test
mov
mov
fcom
adc
repnz
std
frstor
xchg
out
lds
jo
in
push
icebp
fild
mov
cmp
ins
cmp
or
mov
pop
jnp
push
xor
add
call
hlt
mov
clc
adc
mov
and
mov
xchg
mov
pop
pop
movs
jmp
jmp
jle
cdq
xchg
push
aas
inc
jle
pop
dec
mov
cmps
call
clc
mov
push
test
xor
and
cwde
jno
pop
adc
jg
movs
push
(bad)
je
movs
push
push
not
addr16
cmp
mov
rcl
and
jle
push
loope
mov
ret
and
je
addr16
cmc
test
(bad)
adc
lahf
mov
pop
loop
xchg
pusha
nop
sub
mov
push
enter
lock
dec
fld
sbb
(bad)
sbb
std
jle
enter
(bad)
test
icebp
imul
or
xor
aas
jmp
xchg
jae
shl
cmps
div
aam
cmp
pop
adc
cmp
xor
fcomip
dec
ds
cmp
stos
inc
scas
mov
hlt
call
mov
push
test
cmp
jo
dec
pop
xchg
xchg
cmc
mov
add
popa
xchg
xchg
(bad)
mov
adc
scas
iret
enter
mov
add
es
push
popa
and
loopne
test
cmp
add
mov
adc
lahf
adc
out
push
pop
and
rcr
sbb
inc
jmp
inc
push
mov
add
stos
sbb
xor
fucom
xor
cmps
sti
cli
and
push
shl
adc
and
test
or
out
push
jmp
out
sbb
out
mov
ins
and
int
nop
xchg
xor
stos
dec
sbb
pop
sub
imul
lea
and
clc
loope
fstp
cmp
xchg
push
mov
push
jge
daa
inc
dec
lock
push
sub
jge
lds
movs
sbb
lahf
and
cmp
push
(bad)
repnz
into
cmps
clc
inc
das
sub
int
fwait
xlat
int3
push
fdivr
scas
out
and
jge
xchg
mov
sub
adc
sub
in
pop
div
stos
sbb
lea
rol
cdq
test
ror
or
or
jle
stc
mov
add
aad
pop
test
in
jns
dec
jp
push
jp
inc
push
retf
jns
inc
(bad)
xchg
lea
or
jmp
aaa
cmp
pop
adc
sub
jle
imul
fs
stos
nop
cmps
push
push
or
outs
es
and
xchg
idiv
dec
inc
mov
repnz
loope
pushf
out
sub
sub
jmp
ret
jae
std
popa
cwde
sub
div
sar
inc
mov
jns
movs
popf
push
cmps
jne
fs
xor
arpl
in
icebp
sbb
popw
push
jne
stos
fstp
data16
lea
(bad)
jb
arpl
mov
inc
loope
mov
push
mov
dec
ret
xchg
mov
addr16
call
mov
dec
pusha
mov
retf
stos
lods
aas
aad
push
inc
ss
fdivr
mov
mov
mov
out
and
push
or
dec
adc
ins
cmp
dec
test
mov
inc
sub
mov
shl
repnz
pop
jmp
push
ret
jb
or
sbb
mov
in
out
mov
int
out
xchg
jg
int
(bad)
rcl
sbb
cdq
pop
xchg
mov
aad
push
inc
stos
mov
xchg
adc
mov
pop
aas
cld
mov
outs
fwait
add
int3
movs
push
adc
xor
cld
adc
and
inc
mov
inc
inc
lods
fnstcw
xor
cmps
mov
push
sbb
dec
sbb
cdq
and
loope
hlt
scas
out
xchg
ins
add
mov
xchg
ja
inc
or
jo
jbe
int3
outs
gs
out
sbb
int
adc
pop
mov
mov
mov
aas
dec
and
ins
xor
mov
(bad)
aaa
mov
js
sbb
lds
xchg
cmp
or
sbb
mov
bound
test
and
aas
pusha
pop
mov
sbb
mov
push
xchg
xchg
aad
inc
sbb
fild
in
mov
ficom
test
icebp
iret
sbb
imul
fistp
idiv
mov
jmp
jmp
(bad)
adc
nop
xchg
push
sahf
in
mov
jbe
xchg
cmps
data16
fsub
int3
int
rcr
mov
cmc
jno
mov
fadd
cmps
test
push
stos
xchg
arpl
jle
and
clc
jmp
jb
clc
test
scas
movs
adc
push
dec
out
push
pop
in
bound
sbb
push
outs
int3
ret
ret
or
daa
ja
test
jb
pop
nop
shl
inc
jg
add
lods
sbb
mov
dec
jo
jb
xchg
or
leave
mov
cli
gs
das
int
lahf
or
and
cwde
jmp
movs
and
shl
in
xor
sub
shl
push
ins
adc
arpl
push
repz
adc
movs
push
jb
mov
adc
pop
out
dec
sbb
and
arpl
or
push
in
fistp
inc
mov
inc
mov
scas
lock
outs
daa
in
int3
cmp
(bad)
cmp
add
clc
(bad)
fstp
cdq
(bad)
cli
xchg
jge
outs
push
es
mov
pop
sub
add
sub
arpl
in
inc
shr
ror
push
cdq
dec
cwde
push
cmc
call
dec
icebp
(bad)
sbb
out
push
cmp
aam
js
mov
mov
xchg
or
fs
(bad)
fs
call
lock
cmp
adc
and
(bad)
imul
imul
es
lds
xchg
lahf
fisttp
shr
aas
(bad)
sbb
fs
out
popf
rol
push
retf
xor
inc
ret
xchg
lods
out
xchg
in
adc
inc
fcomp
mov
mov
jg
mov
dec
js
or
iret
push
cmps
and
aaa
add
sub
adc
nop
sar
xlat
(bad)
repnz
je
les
add
fld
inc
mov
pop
fwait
xchg
xchg
mov
add
sub
je
scas
lods
xchg
mov
xchg
pop
sub
out
jmp
ret
sbb
(bad)
imul
fdiv
and
xlat
add
rcl
cld
xchg
out
data16
dec
mov
dec
cwde
xchg
jecxz
lock
jnp
jbe
mov
adc
adc
xchg
mov
jg
sbb
push
mov
dec
lds
and
sahf
and
sbb
mov
lea
lods
push
pop
mov
inc
xchg
ret
(bad)
push
and
mov
adc
arpl
jle
mov
(bad)
cwde
imul
mov
xor
inc
cs
fwait
sti
movs
lds
inc
outs
dec
movs
mov
js
cmp
sbb
jnp
dec
xchg
rcr
(bad)
pop
mov
add
dec
test
imul
jae
mov
(bad)
fs
adc
mov
das
fimul
xor
jge
enter
fwait
test
adc
cwde
cmp
sti
jb
jmp
push
and
xor
xchg
fs
inc
repnz
test
sub
xchg
jle
es
(bad)
lahf
aad
xor
xor
mov
sub
fst
nop
xor
bound
loopne
xchg
mov
add
cmp
movs
inc
fnsave
adc
int
cld
mov
aas
cmp
call
push
leave
stos
dec
mov
and
jle
cmp
cwde
ffree
ret
sahf
mov
mov
gs
adc
add
cmp
mov
jmp
and
adc
inc
(bad)
sub
pop
iret
test
shl
rcl
bound
stos
or
adc
jno
popf
dec
cmp
or
cwde
pop
mov
fld
mul
frstor
xchg
repz
push
xor
mov
dec
sti
mov
xor
cmp
mov
imul
add
cld
call
push
dec
and
jne
xchg
push
clc
add
mov
iret
and
xor
mov
xchg
sbb
mov
mov
sub
sahf
mov
or
jo
xchg
mov
lea
ret
add
(bad)
test
call
fiadd
sbb
dec
mov
sbb
mov
cld
test
std
inc
inc
and
test
pop
jne
repnz
rol
jno
jns
dec
xlat
pop
stos
xchg
mov
mov
ja
fistp
inc
das
mov
xchg
mov
icebp
lods
inc
jmp
xchg
adc
sub
xlat
push
inc
pop
or
inc
sbb
out
sbb
les
outs
mov
mov
mov
loopne
shl
enter
jp
push
ret
stc
sbb
ins
shl
jle
fnstcw
into
imul
mov
adc
jmp
in
test
adc
out
popa
push
and
(bad)
in
enter
scas
int3
mov
pop
and
jle
in
ror
lods
mov
xchg
inc
stc
enter
ja
aas
xor
sti
ret
addr16
in
ficomp
push
and
dec
std
sbb
lock
fadd
pop
dec
add
rcl
cmp
cmp
dec
lea
fadd
xor
and
aas
pushf
std
pusha
jne
bound
mov
dec
cli
mov
test
mov
stos
sub
or
mov
cmp
add
in
es
ss
test
pop
inc
jge
fbstp
adc
fnsave
adc
jmp
test
push
push
lods
add
das
mov
aaa
adc
outs
xchg
les
clc
adc
push
nop
ficomp
ret
cmp
fimul
cmp
mov
xchg
push
sbb
cmp
inc
fsub
push
sub
repz
add
xor
mov
sbb
pop
pushf
and
sbb
inc
or
mov
clc
cld
jecxz
and
inc
leave
fcom
pop
push
sub
inc
ss
adc
mov
lahf
outs
imul
dec
cmps
pop
ret
sbb
stc
or
and
mov
repz
call
cmc
rcr
xor
push
jmp
push
adc
mov
(bad)
jp
mov
int
fstp
repnz
mov
lock
loop
pop
dec
test
shl
enter
out
push
std
je
sbb
aad
adc
pop
xchg
add
fist
lods
sub
repz
pop
or
cs
ds
mov
inc
outs
mov
jecxz
das
in
mov
fsubr
xor
retf
inc
gs
fwait
xchg
movs
dec
xchg
ss
out
lock
sub
pop
mov
daa
pusha
int3
push
jo
ins
mov
in
jns
pop
push
ror
(bad)
xchg
aad
mov
out
mov
scas
ja
mov
mov
fnstsw
cli
xor
in
sbb
or
xor
in
outs
bound
mov
jl
pop
sub
and
mov
imul
call
fmul
call
xor
sbb
jne
add
inc
es
in
pushf
std
neg
mov
rol
popf
jp
dec
cli
push
cmp
lock
sub
aad
(bad)
mov
push
inc
cli
inc
push
cmps
inc
sub
sub
sbb
xchg
stos
xchg
pop
movs
mov
std
outs
mov
or
invd
cdq
push
pusha
fs
stc
shl
mov
sti
sub
data16
jmp
shl
mov
movs
rcr
lea
fsubr
push
mov
inc
sti
xchg
push
cli
xchg
inc
outs
and
(bad)
jl
pusha
jmp
js
inc
jecxz
pop
add
pop
add
and
das
xchg
(bad)
rcl
int
bound
sub
push
xchg
outs
inc
pop
cmp
dec
call
movs
(bad)
ins
cmp
lods
pusha
cmp
test
xchg
aad
and
fdiv
test
jge
push
ds
push
ja
pop
mov
cmp
add
(bad)
jle
cmp
mov
push
nop
ins
push
push
xchg
mov
shr
xchg
dec
jnp
clc
lock
imul
rcr
xor
int
retf
dec
jnp
retf
iret
xchg
int
adc
mov
ret
stos
arpl
fwait
ret
ja
push
jl
ret
push
inc
pop
clc
cmp
jp
mov
mov
jl
xchg
add
add
retf
adc
dec
test
add
inc
push
out
push
inc
inc
inc
push
sub
jmp
ins
adc
push
adc
mov
adc
inc
jg
add
mov
xor
cmp
sub
mov
pop
or
sbb
sbb
aam
sar
iret
push
pop
in
jne
(bad)
fucom
or
xchg
xchg
test
movs
inc
adc
test
pop
ins
pop
dec
push
mov
retf
pop
(bad)
bound
jae
xchg
inc
je
rol
cmp
aaa
and
mov
sbb
add
mov
movs
cmp
sbb
sub
add
mov
test
sub
idiv
jmp
and
and
aad
and
adc
and
call
shr
sbb
pop
call
sub
mov
fcmove
loope
leave
dec
sub
mov
int
jle
sti
xor
adc
(bad)
dec
daa
test
leave
out
inc
mov
dec
push
xchg
adc
lahf
xlat
adc
fwait
adc
or
loop
inc
fld
es
aad
cmp
cmps
push
call
jb
adc
adc
out
gs
mov
and
repz
pop
in
and
(bad)
add
sbb
mov
test
aad
jne
xlat
rcl
daa
ror
mov
jecxz
movs
popa
inc
(bad)
jo
push
jecxz
clc
push
fnsave
cmovle
mov
adc
adc
pushf
push
subps
add
retf
fnstsw
sub
xchg
lahf
test
mov
loopne
inc
mov
nop
arpl
adc
pop
test
leave
sti
jo
cmp
test
mov
aad
dec
push
adc
mov
pop
ds
mov
scas
out
cmps
movs
aad
std
dec
mov
push
jb
jbe
addr16
dec
dec
add
test
jmp
movs
les
jp
add
sti
repnz
pop
imul
repz
xchg
mov
adc
inc
retf
add
sbb
xchg
call
push
fld
mov
adc
ins
cdq
out
out
cmps
nop
jge
es
and
push
pop
aam
movs
ds
sbb
bound
in
push
xchg
dec
mov
ins
in
mov
mov
adc
dec
lds
push
jno
push
or
stc
in
push
push
aam
cmps
ret
fbstp
xchg
out
sti
push
adc
inc
adc
mov
push
adc
lods
or
ror
out
test
jg
enter
ins
je
jg
jg
ror
mov
mov
cmp
je
jns
or
call
dec
sbb
rcl
pop
or
adc
add
dec
mov
jnp
lds
jne
or
sbb
dec
adc
or
ret
push
dec
and
cli
loopne
ds
outs
and
ja
cmps
dec
ins
xchg
adc
and
outs
fsubr
pop
retf
shl
ja
cmps
test
dec
mov
not
sub
in
daa
pop
pop
cmps
cwde
ror
xchg
int
fcom
cmp
sti
xchg
sbb
leave
jno
sbb
add
out
mov
push
ins
and
ins
add
(bad)
sub
sbb
mov
mov
pop
lea
add
jecxz
js
dec
out
jmp
call
or
mov
outs
sub
mov
stos
dec
mov
dec
and
sbb
mov
(bad)
jno
dec
and
sub
ret
sbb
jmp
cmps
mov
jne
sub
push
or
icebp
movd
mov
ret
and
sar
movs
xchg
in
jl
xchg
(bad)
scas
sub
je
lods
movs
pop
test
sub
clc
addr16
jl
adc
xor
fild
push
mov
cmp
cmc
data16
add
jmp
add
xor
nop
outs
fisub
mov
imul
push
call
cmp
or
mov
scas
jmp
push
ss
mov
mov
pop
inc
mov
mov
sbb
jno
mov
sub
dec
xchg
icebp
pop
fcomp
fmul
xchg
cs
xchg
adc
js
out
cmp
or
sbb
lahf
fistp
outs
inc
loope
jb
adc
fdivr
or
xor
ins
mov
mov
mov
push
xchg
call
xchg
fadd
sahf
and
aad
sub
dec
jl
outs
mov
bound
stos
jg
shl
cmc
fldenv
push
(bad)
scas
imul
out
or
xor
inc
ins
and
pop
cmp
shl
rcr
pop
mov
lahf
loop
sub
cmc
add
inc
leave
mov
mov
punpckhwd
pop
in
sub
pop
les
je
in
ret
xchg
cmc
in
jecxz
sbb
loop
out
pop
mov
jb
and
das
clc
sub
xchg
aad
add
or
push
adc
push
cmp
mov
xlat
mov
rol
in
cs
jg
pop
lods
push
lea
sub
int3
ins
dec
in
pop
sbb
sbb
fsubr
lods
icebp
mov
dec
pop
or
mov
data16
jno
nop
repz
mov
pop
rep
pop
jp
mov
cwde
mov
es
xor
mov
stos
mul
adc
mov
fcom
lahf
mov
mov
mov
sbb
pusha
sub
out
xor
add
sub
ds
clc
cld
retf
dec
jns
sbb
sti
mov
cmp
xchg
or
push
dec
mov
test
fisttp
pavgb
fild
call
jecxz
or
jbe
out
imul
pop
jg
pop
add
jmp
jecxz
movs
push
cmp
movs
in
or
or
or
in
sub
adc
fadd
scas
dec
or
add
in
sbb
jg
iret
cmps
shl
cmp
sbb
les
imul
(bad)
push
int3
push
les
es
loope
sub
add
dec
jnp
cli
sub
std
hlt
out
inc
sahf
inc
pop
movs
sub
ins
or
pop
xlat
mov
xchg
ins
lahf
push
in
mov
call
cmp
add
neg
xor
(bad)
mov
mov
and
push
adc
sbb
xor
cmp
idiv
pop
jns
and
push
daa
mov
inc
in
push
fst
inc
pushf
xor
daa
(bad)
lods
sbb
dec
int3
push
imul
and
sbb
aam
xchg
cmp
dec
mov
mov
imul
sbb
test
fwait
xor
repnz
jg
push
inc
xlat
into
or
mov
into
mov
jle
int3
sub
ror
js
aaa
dec
sahf
(bad)
push
xchg
scas
inc
pop
push
cmps
cmps
inc
hlt
test
cmps
mov
push
(bad)
hlt
push
sbb
mov
shl
or
stos
test
ins
lods
scas
mov
xchg
outs
sub
jmp
adc
and
push
ss
test
das
aaa
fcmovnbe
(bad)
jne
push
mov
push
push
inc
sahf
pop
pop
add
mov
imul
in
jp
xor
mov
outs
pop
jmp
cdq
popf
cmp
mov
call
fidivr
dec
xchg
shl
ret
nop
jmp
or
pop
ja
jo
adc
dec
xor
adc
lods
or
fisub
ficom
mov
pop
xor
out
fsubr
int3
(bad)
shl
rcr
mov
mov
pop
dec
cmps
mov
iret
retf
pop
push
xchg
js
popa
out
rol
test
push
inc
and
cmp
mov
rol
cmps
or
pop
pop
addr16
mov
sbb
cmp
dec
sbb
adc
add
mov
mov
inc
jno
push
add
inc
adc
dec
(bad)
mov
fist
getsec
lds
mov
mov
das
mov
sbb
cmp
dec
mov
loope
jo
in
fwait
mov
or
or
inc
jae
inc
out
lock
clc
push
jno
test
push
gs
cmp
je
sub
mov
add
jp
movs
outs
addr16
leave
jns
jns
dec
pop
loopne
pop
dec
lock
lds
test
scas
sbb
sbb
test
pop
pop
and
cmps
or
int3
in
in
(bad)
mov
bnd
scas
cli
inc
jnp
xor
add
xchg
jb
and
xor
xchg
push
cs
xchg
sbb
mov
jbe
sub
or
nop
cmp
inc
and
ficom
xchg
dec
test
jae
adc
popa
dec
in
in
cmp
sub
lods
ss
in
jl
push
cmp
shl
xor
sbb
mov
mov
repnz
fldcw
cdq
dec
fsub
out
dec
dec
adc
outs
inc
(bad)
mov
shr
jecxz
inc
push
push
sbb
mov
popf
jnp
mov
aas
cwde
nop
jbe
jge
pushf
inc
out
jbe
cmp
scas
rol
lahf
cwde
cwde
pusha
outs
(bad)
das
and
cli
ret
push
or
movs
loop
jmp
cdq
and
scas
mov
xchg
add
pop
sar
movs
rcl
jo
push
icebp
sub
outs
jle
retf
fs
jae
xchg
xchg
enter
je
or
xchg
inc
inc
push
popf
and
mov
fs
loope
fdivr
jmp
mov
fld
xchg
call
outs
dec
dec
mov
cmp
add
mov
push
jmp
idiv
out
mov
scas
adc
xor
pop
hlt
add
push
in
add
nop
xchg
lods
(bad)
mov
push
lahf
pop
inc
lock
(bad)
shr
push
sbb
in
mov
mov
or
sbb
fmulp
cld
mov
js
mov
rcr
mov
dec
outs
xor
inc
mov
jp
outs
es
popa
jb
sbb
fs
inc
mov
push
ss
sub
adc
pushf
xchg
add
rol
stos
sti
push
sub
or
data16
add
sahf
pop
mov
iret
and
mov
out
cmps
ret
repz
pop
lods
(bad)
jb
loopne
cmp
mov
inc
mov
or
aas
jmp
leave
(bad)
mov
popa
loopne
sub
test
mov
xchg
push
scas
jg
pop
in
sub
inc
rcl
std
mov
push
mov
cs
mov
daa
adc
pushf
mov
jge
inc
clc
in
daa
repnz
lea
(bad)
and
out
mov
ror
das
cmp
shr
pop
push
dec
fiadd
pop
sub
inc
pop
mov
in
lods
cmps
out
sbb
jge
xor
out
ins
mov
adc
pop
aad
mov
inc
pop
shr
sub
rcr
cmp
movs
cmp
loope
ins
gs
mov
loop
cli
cmp
(bad)
or
add
sar
ins
iret
sbb
dec
shl
inc
out
mov
daa
xchg
fistp
adc
jbe
add
inc
xor
retf
shl
jbe
mov
int
xchg
fwait
mov
xor
clc
jmp
sbb
and
daa
adc
bound
mov
xchg
add
inc
and
sub
loopne
rol
in
push
inc
mov
js
cmp
into
out
cld
or
mov
xchg
push
retf
outs
loope
test
and
jbe
fwait
xlat
jnp
push
lods
add
scas
jecxz
jno
out
xlat
adc
mov
jb
jge
xor
popf
test
adc
inc
dec
pop
outs
(bad)
push
aaa
sti
or
test
xchg
pop
scas
jle
mov
sbb
sbb
cmp
adc
das
push
sbb
dec
shl
mov
aaa
sbb
in
pop
add
ret
sbb
xchg
mov
sub
push
dec
xchg
cmp
mov
sub
pop
pushf
popa
or
lahf
cmp
rol
lock
ret
call
mov
xchg
jns
xchg
and
ret
mov
xor
out
push
aaa
lds
pop
fst
stc
rcl
mov
stos
sbb
sub
cld
push
test
and
ror
hlt
push
cld
xchg
scas
outs
std
mov
sar
mov
xor
pop
repz
push
call
mov
int
mov
scas
xchg
xchg
jecxz
inc
movs
inc
ja
push
xchg
dec
jecxz
gs
dec
inc
pop
int3
(bad)
xor
js
dec
movd
add
(bad)
or
repnz
pop
cs
mov
movs
dec
mov
add
pop
cmps
and
cld
call
jns
repz
inc
fcom
(bad)
std
int
(bad)
icebp
xchg
js
push
sbb
movs
(bad)
lock
ficomp
aas
icebp
inc
mov
add
shl
pop
sub
movs
imul
mov
jns
jno
xor
mov
push
or
mov
pop
dec
fnstsw
adc
dec
lock
or
or
pusha
ror
jno
sub
or
xor
nop
aam
lea
dec
mov
loopne
xchg
mov
sub
sub
sbb
std
push
sbb
mov
mov
cmp
std
cld
and
pop
sbb
cmps
call
pop
jecxz
imul
out
add
pop
mov
into
sbb
mov
aas
fs
lock
sub
lea
and
pop
data16
xor
test
sbb
sbb
(bad)
int
xor
jmp
jae
mov
inc
pop
ja
adc
out
jno
fucomi
xchg
push
adc
cmp
jl
push
in
shl
mov
sbb
in
bound
xchg
add
mov
dec
outs
retf
cli
popf
shl
cmp
cmp
sar
test
xchg
bnd
pop
out
lods
and
jbe
jge
cmp
aad
in
nop
repz
cmp
inc
(bad)
sbb
test
lods
pop
dec
and
cmp
jo
lods
(bad)
out
test
outs
mov
jmp
fwait
sub
hlt
shl
pop
loopne
and
pop
mov
out
int
mov
jmp
mov
cs
loope
jecxz
add
push
xchg
mov
jp
movs
jnp
cli
and
iret
mov
cmps
xchg
xchg
in
mov
cmc
jb
cld
es
or
and
cdq
in
(bad)
sar
cmp
shl
fwait
movs
into
pusha
jl
pop
add
pop
mov
test
and
pop
(bad)
ss
sub
sbb
ss
or
lock
sub
inc
and
les
fs
mov
movs
mov
ja
aam
cmps
pusha
(bad)
pop
mov
dec
popa
js
push
addr16
mov
arpl
jmp
cs
pop
sbb
ret
(bad)
push
ret
gs
daa
fsubr
repz
jle
or
lods
das
(bad)
jge
inc
sbb
out
movs
aam
scas
sub
ins
int3
adc
mov
in
neg
cmps
push
push
dec
mov
(bad)
popf
sbb
rol
idiv
dec
add
cs
xor
pop
test
sbb
cs
pop
pop
aam
jae
(bad)
(bad)
cmc
fwait
test
mov
push
pusha
cs
out
rcr
js
add
dec
outs
xchg
ss
ret
pop
nop
cmp
(bad)
lock
mov
xor
test
into
cli
shr
or
outs
sbb
mov
add
or
call
stc
mov
xchg
imul
ret
mov
int
sbb
or
mul
xchg
test
dec
dec
push
xor
gs
mov
nop
add
xchg
jne
cmp
mov
sbb
mov
mov
jp
fs
retf
jg
loop
inc
out
js
and
fst
mov
(bad)
jg
or
and
shl
mov
sbb
addr16
jge
mov
jl
cmp
pop
dec
pop
mov
lods
sahf
push
stos
add
std
push
mov
inc
hlt
cmp
cmp
pop
jb
mov
aam
and
ja
or
fsubr
xor
sbb
in
jmp
mov
in
sar
xchg
sbb
fadd
sub
inc
xchg
aad
or
add
mov
add
ins
fdivr
or
movs
adc
mov
pop
test
sub
adc
inc
aam
adc
(bad)
dec
fmul
fiadd
xchg
(bad)
pop
inc
mov
mov
data16
adc
aad
hlt
mov
gs
popa
fldl2e
je
dec
xchg
adc
test
movs
and
int3
imul
fidiv
mov
push
popa
pop
test
jb
or
stos
sbb
adc
dec
and
inc
push
xchg
lds
retf
mov
xchg
sub
push
add
(bad)
test
push
push
cmp
mov
xchg
cmp
das
sub
or
mov
int3
sub
inc
cmp
xchg
mov
xor
into
icebp
or
std
xchg
sub
scas
iret
and
xor
xlat
(bad)
test
or
loopne
xchg
arpl
mov
dec
xchg
push
dec
xchg
xchg
movs
retf
out
adc
adc
repnz
inc
mov
jle
xlat
xchg
adc
xor
or
inc
into
jle
push
xchg
fnstsw
outs
mov
out
lea
adc
stc
movs
pop
jb
mov
dec
hlt
hlt
outs
sar
mov
outs
add
les
iret
retf
lock
cdq
mov
(bad)
aam
adc
dec
inc
mov
mov
dec
jbe
inc
(bad)
xlat
fxch
out
dec
xor
inc
jecxz
jl
mov
or
sub
clc
popf
repz
sub
mov
sub
test
xchg
or
pushf
in
loop
(bad)
(bad)
mov
sub
retf
and
or
popa
lods
ja
mov
call
mov
mov
lahf
mov
ds
daa
(bad)
imul
jge
fs
ins
jmp
out
inc
mov
imul
dec
shr
adc
add
lds
jl
cmp
jnp
push
(bad)
inc
sahf
xor
jg
xchg
push
(bad)
sbb
les
inc
xchg
jmp
aas
repnz
int
fld
ja
inc
mov
test
lods
mov
test
mov
mov
shl
mov
bound
and
jnp
mov
inc
mov
(bad)
dec
mov
sbb
adc
mov
or
ror
out
or
jne
jb
bound
mov
dec
adc
ins
mov
(bad)
and
ds
mov
inc
mov
fisttp
cmps
jnp
mov
daa
adc
mov
mov
aaa
sahf
call
fbld
(bad)
or
stc
mov
xchg
cmp
ret
addr16
hlt
les
retf
leave
shl
push
and
mov
jge
inc
scas
cld
xchg
out
mov
ss
sti
in
loopne
or
(bad)
std
movs
push
jnp
jl
and
enter
sti
leave
jg
mov
xchg
cmp
push
mov
mov
mov
mov
sub
xchg
in
mov
push
jl
sbb
sti
in
lahf
nop
in
clc
pop
inc
mov
add
jmp
cmp
sar
xchg
xor
xchg
daa
ds
pop
sub
sbb
dec
xchg
aad
fucomi
xor
lods
daa
jge
xor
adc
push
outs
or
outs
dec
lods
(bad)
into
lock
or
mov
lods
ds
sub
pop
pop
xor
test
pushf
(bad)
sbb
ret
test
pop
rep
cmps
mov
mov
fwait
es
and
test
scas
mov
jge
loopne
mov
or
mov
push
jne
mov
rcr
and
nop
dec
test
jae
retf
add
lahf
cld
pop
enter
mov
xchg
retf
in
or
into
repz
aas
pop
lgs
pop
xor
mov
ins
cmps
mov
xchg
push
inc
lea
and
jmp
iret
or
mov
mov
mov
push
(bad)
std
xor
out
icebp
xchg
sub
pop
mov
out
jecxz
sbb
ins
xor
nop
add
push
add
das
inc
pop
test
lods
adc
mov
enter
pushf
pop
cs
loope
mov
mov
mov
cmps
sbb
adc
in
sbb
dec
xor
or
outs
xchg
(bad)
shl
jo
(bad)
js
xchg
retf
nop
addr16
sub
pop
clc
xor
pop
pop
out
call
test
ror
cmp
jp
inc
fcmovnb
pop
cli
shl
push
adc
popa
out
jle
cwde
pop
dec
and
inc
cmps
aad
test
jno
out
pop
rol
push
push
sbb
adc
add
jle
in
add
adc
fild
loopne
stos
and
ss
into
push
mov
fisub
lds
inc
ins
pop
jge
dec
xor
sbb
jo
and
inc
ins
mov
jae
xor
sub
arpl
mov
adc
push
test
mov
test
pushf
inc
xchg
push
(bad)
neg
xchg
(bad)
das
test
and
fwait
sbb
shl
mov
mov
fistp
push
imul
xor
xlat
or
adc
jae
jmp
shl
loop
and
xor
pop
cwde
fmul
cmps
dec
sbb
scas
(bad)
aaa
xchg
inc
pop
imul
mov
repnz
addr16
repz
pop
sub
jae
pop
inc
stos
ss
fs
mov
push
cmp
cmps
inc
adc
mov
aam
pop
(bad)
sbb
sti
scas
pop
mov
pop
or
mov
jo
loop
pop
(bad)
in
inc
inc
ds
jmp
push
xchg
paddb
xchg
je
mov
int
aad
out
in
xor
or
frstor
mov
cmc
add
push
retf
mov
cmp
adc
push
leave
push
xchg
and
call
or
movs
push
scas
fbld
mov
rcl
xchg
pop
dec
in
pop
jle
cmp
stos
aas
lods
stc
sbb
pop
or
xor
add
xchg
ins
adc
lahf
add
cmp
mov
ret
inc
jmp
xor
sahf
popf
cmp
fwait
adc
cld
aas
shl
sub
jecxz
dec
popf
lods
push
pop
jg
pop
xor
nop
outs
test
xor
sahf
xor
and
mov
xchg
scas
inc
mov
ins
add
into
ret
pop
and
pop
test
inc
imul
pushf
ins
push
cwde
adc
bound
jns
sbb
popf
arpl
scas
mov
icebp
stc
stos
cld
movs
clc
push
stos
jne
and
shr
(bad)
mov
push
(bad)
lahf
jge
rcr
lock
(bad)
jns
sub
retf
scas
mov
pop
daa
push
cmps
pop
sub
into
sub
out
inc
(bad)
sub
mov
in
mov
test
jno
movs
push
aas
out
ret
cmp
xchg
inc
mov
mov
in
movs
call
inc
cld
scas
mov
mov
sub
out
clc
in
ret
cwde
jp
dec
(bad)
mov
lea
dec
adc
mov
xor
mov
ja
mov
xchg
int3
or
cmp
adc
adc
(bad)
out
push
jb
repnz
ret
jns
sbb
adc
cmp
push
pop
add
mov
shl
inc
aad
add
scas
and
push
push
loopne
pusha
pop
pop
push
int3
cdq
sbb
mov
jne
pop
xchg
mov
sub
sbb
mul
lock
or
and
dec
pushf
stc
sbb
cmp
lods
jge
and
ins
and
pop
fcom
aad
jnp
sub
cmp
push
push
mov
inc
dec
movs
push
ror
pop
pop
ss
daa
cld
xchg
clc
and
cmps
inc
push
push
xchg
data16
inc
dec
mov
push
clc
cli
sub
cwde
bound
xlat
push
add
rcl
mov
inc
adc
(bad)
cdq
adc
je
mov
mov
in
ins
or
stc
adc
jno
repz
push
mov
xchg
mov
pop
dec
mov
(bad)
and
mov
jae
in
xchg
out
in
adc
push
addr16
add
push
mov
fst
cmp
adc
sub
rcl
sbb
add
pop
jno
loopne
loop
add
ret
push
cs
fisttp
jl
mov
(bad)
dec
dec
sub
cmp
push
add
dec
mov
scas
inc
sub
pop
push
aad
mov
push
cwde
adc
xor
cdq
ja
lahf
std
mov
mov
test
xor
dec
mov
(bad)
push
mov
movs
ret
sub
add
pop
jns
scas
stc
dec
shl
cmps
pop
add
cmps
aam
pop
iret
pop
xchg
cmps
sbb
popf
pop
sbb
ss
fdivp
jae
lock
popf
not
sbb
inc
jo
loope
cmp
rcr
and
xchg
mov
push
mov
arpl
sub
and
pop
sbb
scas
xchg
in
(bad)
fist
mov
rol
push
mov
or
ins
mov
mov
inc
outs
jmp
push
std
adc
jecxz
in
sub
sbb
jne
adc
or
in
adc
xrelease
lods
movs
mov
lods
loope
or
neg
lds
xchg
jp
ja
sbb
std
xor
mov
cmc
rcl
xor
rcr
xor
mov
rcr
cmp
and
test
mov
loop
stc
movs
scas
pop
sbb
mov
adc
les
jle
adc
cs
sub
cmp
push
sub
push
push
adc
or
in
fcom
sub
leave
xchg
sub
ds
mov
mov
pop
mov
pop
(bad)
adc
xor
sbb
cwde
sahf
shr
or
ret
fiadd
sub
jbe
gs
(bad)
mov
sub
jp
mov
sbb
cmc
arpl
fcmovnb
out
(bad)
ficom
popa
arpl
cs
icebp
dec
jg
mov
and
mov
adc
mov
gs
dec
outs
test
push
xor
bound
shr
mov
nop
xchg
cmps
pop
int
pop
test
dec
push
shl
loop
clc
clc
inc
int3
sbb
adc
and
xor
in
lods
and
mov
inc
(bad)
(bad)
and
sub
push
jge
adc
dec
cmp
inc
rcr
retf
stos
fwait
pop
scas
loop
sbb
sbb
cs
(bad)
cmps
aad
ret
mov
cmp
shl
lods
mov
mov
adc
xor
and
jp
sbb
jle
test
sbb
jno
cmp
popa
mov
xchg
js
aad
je
js
xchg
loopne
jno
out
mov
xchg
xor
jno
pop
inc
outs
in
mov
mov
dec
inc
fsub
outs
call
out
pop
pop
call
iret
dec
cmp
jge
mov
mov
xchg
fisttp
inc
outs
shl
fbstp
jg
or
xor
jns
cmp
ins
pop
xor
test
or
retf
push
adc
loopne
aas
fst
cmp
cmps
dec
mov
rcl
ret
das
(bad)
dec
ja
repz
inc
std
(bad)
div
sub
fld
int3
dec
test
push
or
adc
jp
and
pop
call
push
jne
bound
fnstenv
jb
sahf
mov
sub
cwde
ins
or
cmc
cmp
jle
mov
sbb
leave
stos
cmp
mov
mov
push
pop
pop
hlt
mov
jo
mov
gs
js
mov
ficom
ss
mov
cmp
das
pop
pop
std
mov
jg
lds
in
(bad)
push
daa
push
rcr
mov
pushf
inc
sbb
pop
out
pop
mov
inc
jns
(bad)
jmp
dec
shr
aaa
xor
stc
xor
push
cmp
push
les
mov
arpl
repnz
outs
mov
fwait
cs
cmc
adc
pop
(bad)
jecxz
jbe
into
xor
es
sub
xchg
mov
repz
repz
and
mov
jmp
fisubr
add
retf
pop
inc
jnp
inc
add
stos
icebp
mov
push
mov
pop
icebp
gs
jne
and
cld
xchg
xor
cmc
inc
sub
ins
and
xchg
xchg
cs
gs
fimul
into
xchg
mov
retf
out
cwde
xchg
jge
das
sub
xchg
div
sar
jb
push
pop
push
cmp
and
sbb
dec
dec
sar
pushf
ret
ss
fisubr
or
enter
or
mov
clc
out
or
or
ins
sub
call
pop
idiv
or
mov
lahf
pop
ins
mov
dec
xchg
sub
dec
inc
adc
dec
mov
repnz
scas
sbb
popf
sub
icebp
adc
inc
retf
mov
add
ret
mov
loop
or
aaa
mov
sti
push
adc
jl
jge
or
push
inc
xchg
test
push
jp
jmp
cmp
jne
xchg
xor
fs
push
push
pop
add
pop
jle
ret
std
aam
adc
iret
js
sbb
stos
mov
xor
push
jle
and
inc
es
loopne
jge
jb
fwait
sub
jle
mov
jmp
popa
cld
fist
js
inc
sbb
cmc
dec
push
retf
push
lods
lea
cmp
push
repz
movs
cmps
outs
pop
mov
in
out
(bad)
loope
mov
enter
adc
mov
xor
mov
imul
fild
in
pop
xor
int
mov
add
bound
push
and
sbb
leave
sub
icebp
(bad)
out
icebp
sub
inc
adc
xchg
gs
mov
in
sub
mov
mov
push
xchg
sbb
inc
or
xchg
sar
xor
pop
cmps
(bad)
out
cmps
mov
pop
or
cmps
pop
jo
pop
(bad)
cmp
and
sub
daa
movs
rcl
shl
mov
(bad)
fstp
sub
push
mov
call
retf
cdq
movs
mov
and
sbb
xor
in
adc
neg
je
fs
xlat
push
sub
and
dec
lods
je
cdq
push
xchg
mov
into
js
data16
cmp
jbe
inc
cwde
(bad)
std
out
sbb
push
clc
adc
cwde
arpl
adc
repnz
adc
xor
or
lsl
test
cmp
test
movs
retf
jbe
add
pushf
call
clc
pop
jno
call
push
inc
sbb
add
or
xchg
imul
ds
pop
sub
adc
fldenv
out
mov
arpl
sbb
jae
in
addr16
mov
jns
push
lea
lds
mul
into
push
out
push
xor
jb
mov
mov
lock
pop
xor
push
push
pop
mov
lahf
inc
pop
in
xchg
cmps
pop
inc
and
out
test
xchg
lea
add
push
bound
icebp
push
mov
push
pop
imul
dec
inc
jne
dec
push
jecxz
add
loopne
sub
add
jge
mov
or
aam
cmps
(bad)
xor
fcomp
adc
ds
and
dec
sub
push
add
aas
add
inc
out
mov
ret
fs
ror
mov
xchg
push
and
int
call
mov
popa
and
push
mov
and
inc
scas
dec
push
push
mov
jnp
rcl
ror
dec
pushf
jmp
popa
into
outs
mov
or
cmc
xchg
lahf
xchg
(bad)
mov
add
mov
jae
or
sbb
fnclex
cwde
push
(bad)
cmp
lods
xchg
adc
(bad)
pop
loopne
and
xor
ret
ror
loopne
(bad)
cli
push
inc
and
lock
gs
lds
push
into
cld
movs
pop
xchg
pusha
push
test
sbb
arpl
popf
ret
scas
icebp
pop
xchg
repz
out
xchg
cmp
xor
pop
sbb
xchg
mov
rol
mov
and
mov
iret
out
rol
push
in
repz
aam
leave
cmps
iret
inc
mov
fwait
mov
loop
push
and
jb
mov
push
mov
mov
cmp
stos
push
dec
popf
xor
ins
pop
inc
pop
fbstp
push
fidiv
and
pop
jns
(bad)
aam
daa
cld
in
fdiv
test
fmul
out
rcr
cwde
ret
adc
inc
jo
fs
pop
adc
shl
jns
pop
fild
and
or
fucom
(bad)
xlat
pop
adc
mov
mov
cmp
inc
cdq
(bad)
cmps
and
push
xchg
ficom
inc
push
movs
pop
(bad)
jnp
aam
in
(bad)
jne
push
jmp
loope
sbb
addr16
pushf
cmps
leave
push
outs
add
(bad)
enter
jne
and
or
inc
push
ja
pop
test
inc
rol
adc
pop
cmps
cld
jmp
pop
cmp
mov
mov
jb
call
movs
fnsave
sbb
cwde
mov
dec
jmp
popa
sub
cmp
adc
mov
inc
xchg
rcl
cmp
fsub
cmp
sar
pushf
sub
mov
xchg
push
mov
les
or
add
inc
pop
int
ins
(bad)
sbb
xchg
(bad)
mov
dec
add
mov
push
aad
inc
repz
test
jmp
leave
aaa
xchg
outs
jle
sbb
fsub
jbe
jl
(bad)
xor
mov
push
sahf
xor
adc
xchg
xor
jns
out
sbb
jnp
gs
sbb
inc
sub
dec
push
push
xchg
adc
inc
sti
adc
stos
sbb
pop
or
ss
imul
push
add
mov
mov
hlt
stc
lods
and
fnstcw
ret
mov
in
pop
ret
nop
and
std
and
inc
fcomp
outs
enter
mov
or
jge
cmc
sub
xchg
aad
jge
lds
and
outs
push
mov
enter
push
fs
jae
jecxz
div
cwde
pop
mov
sbb
test
aad
fcmovnbe
loope
fdivr
mov
sbb
jb
inc
push
fbld
jecxz
out
mov
and
dec
mov
xchg
and
lods
jne
push
ins
fidiv
fcomp
push
push
lahf
xchg
jle
scas
dec
popf
call
rcl
popa
fldenv
adc
sub
adc
push
in
or
ins
retf
push
dec
jp
mov
rcl
and
nop
jo
pop
int
push
(bad)
fbstp
stos
daa
int3
mov
xor
pop
dec
and
mov
xor
xchg
imul
aas
das
mov
sahf
push
scas
cld
mov
push
jg
sub
test
cmp
test
in
les
inc
fcom
xlat
rol
mov
adc
adc
ret
xchg
sar
in
cmp
(bad)
cld
inc
fs
outs
mov
pop
push
add
and
adc
dec
dec
add
loop
(bad)
push
bnd
mov
(bad)
xchg
pop
hlt
lds
jmp
(bad)
mov
fbld
cld
test
xor
jb
(bad)
mov
adc
xor
mov
and
mov
fs
add
ins
cmp
xor
jecxz
mov
(bad)
sti
inc
mov
cmp
int
pushf
pop
or
dec
xor
int
sbb
sub
pop
pop
aaa
xchg
inc
imul
push
mov
add
es
mov
addr16
cli
xchg
adc
xchg
sbb
ins
dec
pushf
ret
lds
and
sbb
jno
arpl
jmp
hlt
or
push
mov
push
shl
xchg
add
(bad)
dec
test
adc
push
or
imul
xchg
add
es
mov
int3
xchg
xor
(bad)
popa
ret
mov
or
jbe
push
push
fistp
gs
ds
stos
fnstenv
mov
jnp
push
jmp
and
mov
(bad)
cmp
sbb
pop
pop
data16
mov
nop
push
fld
jmp
pop
scas
shl
fdiv
inc
ins
xchg
js
jbe
repz
fwait
mov
iret
call
mov
pop
in
cld
scas
push
mov
ds
xchg
and
and
xor
jne
(bad)
movs
xor
sbb
loopne
dec
call
ss
out
rcr
add
out
not
xlat
das
sbb
dec
ds
jb
jne
mov
and
pop
aam
and
cmp
jl
sbb
mov
enter
cmp
inc
adc
sub
mov
cmps
xchg
inc
push
mov
xchg
push
sbb
jmp
mov
and
cmp
sub
cmp
sub
pop
addr16
loope
imul
in
xchg
jns
jl
sbb
mov
lds
cmp
and
mov
arpl
cwde
mov
push
add
mov
dec
fst
push
or
leave
iret
jg
sub
test
jnp
retf
mov
and
jae
jno
jmp
pop
mov
inc
adc
mov
push
test
dec
(bad)
js
imul
repz
in
dec
mov
dec
in
xchg
or
xor
xchg
call
sbb
adc
and
in
mov
adc
xchg
into
cmp
loope
cmp
jl
xchg
ret
ret
or
cmp
rcl
or
ins
sub
fsubr
hlt
(bad)
lock
sbb
pop
jmp
out
pop
aas
rcl
and
fsub
mov
sahf
fstp
lods
enter
imul
inc
inc
leave
mov
scas
jecxz
push
rcr
scas
sub
mov
push
popa
sub
jmp
jno
mov
sti
push
outs
pop
sub
push
add
cmp
arpl
mov
ins
aas
xor
jae
push
sub
jl
jp
call
add
add
cmp
enter
pop
aas
xchg
push
cmp
pop
sahf
jns
js
dec
fdiv
jg
mov
add
inc
dec
mov
shl
into
push
xor
(bad)
or
dec
rcr
rol
mov
test
in
dec
sub
stos
push
ret
xor
test
mov
push
fidiv
sbb
jae
jns
in
jmp
std
dec
int3
jno
das
mov
ds
fcmovnu
push
sub
das
jb
inc
sub
mov
imul
cmp
xchg
sahf
cld
test
sbb
mov
imul
mov
(bad)
in
int3
pop
jbe
fcomp
jmp
add
push
outs
jp
mov
dec
inc
jg
(bad)
xchg
mov
and
jmp
jp
push
(bad)
jb
(bad)
jne
sub
push
cmps
add
cmc
js
add
cmp
pop
xchg
aad
ror
inc
mov
sub
movs
xlat
sub
in
fwait
cmp
mov
mov
xchg
fmul
inc
(bad)
cmp
jb
aad
jae
pop
jmp
in
gs
pop
sub
mov
stos
jbe
push
dec
loop
mov
dec
sahf
int
iret
push
inc
xchg
jmp
mov
icebp
xchg
cmp
xchg
push
cmp
repz
shr
lods
outs
cmp
cmp
bound
dec
out
loopne
push
inc
(bad)
jp
fs
lea
xchg
iret
mov
cmp
cmp
les
adc
pop
cmp
ret
shl
mov
pushf
xchg
lods
jne
mov
cmp
pop
add
mov
jno
push
dec
rcl
mov
dec
gs
fisttp
jl
repz
lock
jae
outs
sbb
lods
fnstenv
out
sbb
dec
and
(bad)
sub
out
stos
xchg
pushf
adc
adc
and
mov
or
ret
adc
cld
mov
std
cmc
icebp
cs
retf
xor
idiv
sbb
in
imul
ror
jns
in
push
call
cmp
push
lods
xor
push
cmp
in
fisttp
(bad)
pop
fwait
lock
shr
loopne
mov
jge
jns
adc
xlat
xchg
int
jno
and
jp
mov
push
outs
jg
iret
(bad)
mov
jmp
movs
add
dec
mov
mov
cwde
and
retf
xor
sbb
sbb
sti
jae
mul
shld
adc
jae
xchg
mov
xor
into
jae
outs
cdq
test
and
movs
jno
dec
movs
cli
ret
fstp
jae
cs
(bad)
add
out
cmp
neg
aas
inc
in
or
nop
pop
xor
inc
or
sub
xor
into
mov
push
mov
mov
(bad)
inc
mov
ins
jae
lods
add
xor
ss
xchg
cmp
out
fsub
mov
out
stos
lods
mov
out
out
retf
xchg
iretw
daa
gs
popf
lahf
into
aas
sti
push
and
cmp
mov
pop
in
xor
cmps
rcr
sbb
or
push
pop
in
dec
ja
jne
jmp
cmp
inc
or
stos
adc
inc
in
aam
lods
push
or
fist
iret
cli
dec
aas
fidivr
inc
ror
out
pop
sbb
mov
push
xchg
add
sahf
sub
ret
sub
jno
pop
scas
aas
cwde
adc
sbb
xchg
xchg
gs
xchg
inc
add
mov
jp
lock
mov
mov
fist
scas
shl
shl
ret
pushf
add
sahf
push
sbb
jae
bound
xchg
add
inc
adc
xchg
adc
retf
mov
not
add
sbb
and
or
fcomp
inc
adc
jns
dec
and
ficom
retf
mov
xchg
and
rcl
in
cwde
mov
lods
(bad)
fwait
jecxz
pop
imul
cmc
sub
dec
shl
xchg
dec
test
mov
ret
mov
pop
cdq
cmp
(bad)
cmp
adc
lods
test
and
mov
fstp
out
imul
daa
mov
test
inc
inc
adc
pusha
jg
test
cwde
mov
lock
or
out
ror
daa
mov
mov
or
mov
jmp
sti
mov
retf
test
scas
into
xchg
mov
fcomp
aaa
push
mov
or
lds
jmp
push
xor
mov
lahf
stos
pusha
aaa
mov
call
jge
enterw
mov
mov
call
and
(bad)
mov
xchg
inc
pop
not
popf
mov
push
mov
movs
pop
lock
mov
inc
mov
fstp
mov
sbb
lods
arpl
addr16
xor
pop
push
mov
xchg
ret
xor
(bad)
ror
(bad)
jmp
in
pop
shr
or
std
cmovl
pop
push
jp
and
mov
or
mov
aam
jp
div
push
mov
jge
and
test
dec
aaa
imul
je
xor
and
aas
jle
(bad)
push
outs
jl
and
mov
mov
mov
jae
xchg
adc
mov
mov
lock
repnz
pusha
or
xchg
ins
push
adc
pop
dec
xchg
jne
mov
aaa
ss
nop
adc
test
jle
sub
les
ja
loopne
loop
sti
popf
aad
pop
pop
pushf
into
addr16
sub
jp
ss
lock
ja
cdq
ficom
pop
add
icebp
xor
xor
(bad)
sbb
fwait
sub
cdq
ins
nop
xchg
nop
push
add
icebp
lea
pop
jnp
shl
pop
push
in
cmps
das
jae
pop
mov
mov
add
mov
data16
push
rcr
dec
rol
shl
fdivr
sbb
(bad)
mov
jno
scas
and
aad
das
(bad)
aad
xor
fstp
and
mov
add
jns
shl
(bad)
ins
jmp
pop
test
not
xchg
pop
xchg
cmps
dec
aaa
xchg
fidivr
pop
pop
mov
mov
movs
cs
hlt
mov
inc
fst
xchg
sub
iret
xchg
sbb
xor
push
aaa
inc
lds
jb
mov
or
arpl
cmps
out
mov
pushf
shl
sub
dec
jne
sbb
push
push
fisttp
xor
shr
cmp
cmp
jb
jmp
ss
jmp
push
pop
sub
or
xchg
jo
pmullw
pushf
sub
pop
pop
adc
xor
mov
int
js
in
xor
cmc
add
imul
inc
out
sahf
into
mov
int3
leave
out
vpshufd
pop
call
xchg
cmp
jg
call
dec
pop
daa
hlt
imul
hlt
push
push
adc
mov
mov
cmp
push
push
mov
mov
inc
ud0
fisubr
in
popf
cdq
jmp
xchg
mov
out
(bad)
xchg
mov
aad
inc
lahf
dec
pop
sub
call
repz
xchg
fidiv
cs
outs
mov
xor
fdiv
frstor
cli
sub
rol
out
push
lods
mov
xor
cmps
push
add
push
iret
push
into
cmp
cmps
jl
cmp
and
std
test
stos
mov
sbb
sbb
dec
loop
loope
cmp
popa
cwde
hlt
loope
retf
push
sbb
retf
popf
retf
lea
imul
data16
add
mul
sbb
mov
repz
pusha
add
sar
jnp
outs
cmc
adc
sbb
stos
ficomp
test
or
mov
inc
(bad)
loopne
cmp
lds
pushf
and
test
es
rcl
mov
out
in
adc
cmp
cld
jg
into
cmp
mov
xlat
gs
and
pop
into
jmp
and
or
stos
arpl
xor
rcr
jne
add
rol
jmp
push
mov
xor
dec
fcmovnb
sub
and
pop
fidiv
adc
push
and
lods
push
aas
loopne
mov
int3
rcl
push
std
dec
test
std
and
aad
ds
fidivr
test
or
cwde
dec
jmp
xchg
and
ret
out
push
stos
dec
and
add
daa
jbe
js
in
in
je
(bad)
push
inc
cdq
push
(bad)
and
mov
scas
cmp
fld
shl
xor
xchg
pop
xor
jmp
call
repz
add
icebp
ret
(bad)
shr
push
in
test
or
mov
sub
jmp
adc
loope
push
xlat
pop
mov
and
aam
movs
lock
sbb
clc
retf
and
pop
pop
or
das
push
sbb
(bad)
inc
(bad)
js
mov
cmp
bound
(bad)
adc
gs
stos
inc
or
pushf
in
in
lods
mov
call
or
jbe
movs
sub
int
push
stos
cmp
add
(bad)
(bad)
iret
mov
xor
cmp
cmp
sbb
stos
mov
add
xlat
mov
lods
xor
push
pop
out
jmp
mov
xor
es
shl
enter
lods
sbb
imul
imul
fwait
jp
es
adc
ins
sti
(bad)
sub
out
mov
ins
mov
cmp
outs
add
(bad)
mov
scas
stos
aam
cmc
cmp
daa
out
es
fbld
std
cmps
mov
loopne
nop
(bad)
ret
cdq
lods
pop
jmp
or
adc
xor
shr
push
out
popa
clc
sub
sbb
adc
jbe
xchg
div
adc
sub
in
dec
adc
scas
ds
push
arpl
pop
icebp
mov
(bad)
fild
jp
gs
fdivr
loop
jp
sub
fxch
(bad)
aas
test
jne
sahf
mov
sahf
fwait
retf
xor
bound
dec
push
or
scas
jl
push
bound
mov
mov
in
fisub
lahf
or
clc
mov
daa
(bad)
lea
test
adc
mul
aaa
and
jmp
test
mov
mov
sub
cmc
(bad)
(bad)
stos
jbe
les
push
inc
outs
loopne
sub
push
repz
or
lock
inc
inc
ss
aam
push
push
mov
jb
or
data16
sub
inc
push
pusha
in
cmp
dec
add
js
ret
xor
movmskps
fcos
lea
repnz
rol
cmps
pop
into
retf
push
shl
xchg
jo
push
or
mov
sahf
jecxz
add
xor
fiadd
call
js
dec
xchg
nop
push
xchg
lock
(bad)
push
jb
out
xor
or
xchg
out
sbb
pop
adc
push
imul
cmc
mov
jns
and
cmp
and
ins
or
jne
push
mov
out
sub
(bad)
mov
pop
mov
pop
dec
xchg
jg
(bad)
les
int
sbb
cdq
stc
mov
test
pop
adc
sub
call
(bad)
std
push
jnp
jge
jno
dec
push
jb
dec
add
pop
xchg
jl
push
mov
jmp
dec
jno
push
inc
mov
adc
bound
jge
xchg
test
js
shl
stc
mov
das
shl
sbb
xlat
cld
add
xchg
outs
loopne
inc
jno
push
aam
or
lock
stos
out
push
ja
xchg
mov
test
jge
and
(bad)
and
daa
mov
mov
mov
out
or
bound
fdiv
ss
jae
xchg
lds
lahf
xor
aas
pop
dec
mov
inc
cdq
cwde
outs
mov
jne
ret
cmp
lahf
xor
mov
ret
popa
inc
xchg
(bad)
sti
out
and
xor
mov
test
push
pcmpgtb
fidiv
xor
sbb
jle
cmp
dec
lock
cmp
repnz
mov
jae
test
inc
sub
xor
out
inc
inc
cmp
scas
xor
mov
dec
bound
test
sub
out
cmp
push
inc
add
jl
xchg
cmp
lods
add
out
ficomp
repnz
div
xchg
lods
jle
into
into
cmp
jmp
xchg
fcomp
ss
imul
cmp
inc
shl
loop
push
loop
stc
mov
mov
xchg
xchg
jne
dec
mov
js
pop
mov
push
cmp
jl
add
push
sbb
in
jnp
popf
enter
ret
inc
shr
xor
inc
lahf
fidivr
ret
and
lock
push
cmp
arpl
jle
dec
sti
popf
jns
adc
mov
je
dec
or
(bad)
(bad)
cmp
or
repnz
lea
adc
xor
cmp
mov
daa
pop
sahf
lahf
idiv
scas
mov
xor
out
inc
cmp
popa
sub
push
dec
out
fadd
std
sbb
jmp
mov
dec
push
movs
xchg
cld
in
push
retf
mov
sub
mov
inc
test
mov
jle
sub
and
test
pop
sub
test
xor
cmp
and
sub
lock
mov
fnstenv
outs
lods
jmp
test
add
fiadd
jg
sbb
add
jbe
jae
adc
out
loope
sbb
pop
push
movs
jge
std
push
jl
popf
push
jo
imul
dec
mov
loop
mov
dec
imul
mov
fs
mov
pop
pop
cs
dec
idiv
lods
outs
bound
ja
iretw
test
call
push
test
(bad)
and
jo
mov
lods
in
jg
sti
dec
mov
or
mov
inc
idiv
out
xor
out
mov
jb
jns
cld
lods
ror
mov
sar
jmp
mov
adc
pop
nop
inc
mov
scas
push
sar
adc
in
cmps
jno
fisubr
cmp
or
push
inc
and
pop
mov
ss
mov
std
(bad)
cld
ins
sti
push
pop
popf
jge
jecxz
movs
(bad)
int
cmc
jbe
std
jg
add
xor
(bad)
or
sahf
sub
dec
mov
mov
out
xor
data16
cmp
cs
xor
movs
jle
repz
mov
adc
dec
retf
aaa
jo
push
xchg
sub
(bad)
xor
addr16
add
mov
imul
scas
es
repz
test
lea
mov
aad
enter
add
mov
mov
cmps
push
cmp
adc
cmp
sbb
daa
cmc
in
push
jno
mov
mov
lds
jp
call
(bad)
xchg
xchg
inc
lock
call
sub
(bad)
clc
pop
lea
adc
lods
cmp
pushf
stos
push
pop
inc
mov
dec
inc
sub
jno
push
and
mov
jne
mov
or
mov
pop
mov
mov
xlat
dec
iret
dec
outs
jle
int
add
inc
sub
outs
jg
xor
or
push
xchg
sbb
jmp
mov
lahf
loop
or
mov
mov
ins
jp
mov
(bad)
pop
sahf
test
(bad)
push
xchg
xor
lock
popa
adc
xchg
adc
out
into
iret
test
jp
sbb
dec
in
dec
pop
jg
cmps
and
push
rcr
dec
inc
mov
retf
daa
add
add
jno
bound
outs
jb
stos
(bad)
jg
push
and
test
cmp
sbb
popf
cmp
xor
mov
cmp
inc
int
(bad)
cwde
ds
and
mov
arpl
xchg
bound
fst
and
inc
cwde
and
pop
ret
ins
jns
leave
jp
sar
xor
imul
adc
fnstcw
fsubr
mov
cli
mov
nop
retf
and
inc
out
mov
inc
jnp
loopne
xchg
sub
movs
(bad)
or
mov
shl
test
push
sbb
pop
sub
mov
lea
fnsave
mov
xchg
(bad)
jb
push
ja
(bad)
ins
das
pop
(bad)
or
imul
lahf
popf
adc
mov
pop
rol
mov
and
inc
movs
sahf
fld
fcomp
push
or
push
sub
(bad)
in
cmps
cmp
fdivr
mov
ja
push
xchg
mov
inc
outs
sub
ret
sbb
pop
pop
int
inc
pop
mov
adc
add
pushf
nop
push
push
dec
cmp
sub
or
(bad)
mov
jmp
add
loopne
xchg
jne
loopne
mov
mov
and
xchg
jns
fld
pop
lock
push
xor
adc
mov
cld
cmp
jno
jns
inc
xchg
mov
mov
xchg
movs
mov
push
into
add
aam
cli
jbe
mov
gs
push
aad
xchg
jb
into
pop
popf
test
sbb
and
xor
xchg
mov
inc
pusha
and
fdiv
push
test
mov
xchg
cmc
in
jnp
pop
inc
ins
icebp
in
mov
mov
push
jl
test
pop
cs
sar
sbb
call
jnp
sub
inc
cmps
mov
xor
jo
mov
jae
nop
sub
and
clc
jg
mov
jmp
out
repnz
dec
mov
pop
addr16
or
push
cwde
cmp
xchg
pop
repz
and
ins
pop
mov
inc
jmp
std
jmp
cmp
hlt
jnp
dec
push
jecxz
add
mov
movs
mov
add
dec
push
movs
arpl
xor
sar
js
mov
jge
idiv
movs
shl
pop
lock
pushw
pop
cmps
fiadd
outs
xor
lea
xor
lock
mov
adc
xchg
aaa
push
or
cmps
cli
mov
in
mov
mov
out
call
pop
ds
mov
inc
dec
jns
pop
test
xchg
mov
jb
jns
sahf
out
sub
clc
xchg
xchg
adc
or
test
mov
cmp
xchg
in
fist
out
mov
stc
push
sub
leave
aas
aam
ficomp
jecxz
inc
in
mov
inc
rol
pop
xchg
lock
inc
push
lds
inc
sub
mov
cmp
test
pop
rol
bound
cmps
jmp
jo
jnp
pop
xor
out
push
mov
nop
xchg
pop
scas
xlat
je
inc
mov
mov
mov
fidiv
mov
sub
xor
jmp
sti
xor
push
inc
push
dec
inc
pop
ficomp
stos
sub
popf
pop
mov
sub
mov
cs
sti
test
addr16
or
cli
pop
push
movs
aas
fcomip
xor
addr16
jge
mov
mov
test
call
(bad)
xor
neg
xor
add
movs
inc
mov
inc
scas
fdivr
adc
xchg
xchg
push
pusha
push
jmp
aad
fcom
neg
jbe
jle
jmp
retf
(bad)
fisubr
icebp
mov
jae
push
shl
icebp
dec
cmp
fist
jg
loop
cmp
pop
xchg
mov
scas
imul
push
mov
icebp
jecxz
ret
sar
in
or
pop
ja
mov
cdq
sbb
in
and
icebp
or
mov
das
adc
mov
and
fsubr
jmp
fsub
xor
out
xchg
inc
loope
jmp
cmp
aad
imul
lock
ja
in
test
xor
or
dec
fisttp
pop
mov
add
in
in
aad
inc
les
pusha
test
das
pusha
test
test
(bad)
push
dec
push
jmp
pushf
jle
clc
scas
call
outs
movs
bound
xchg
out
push
and
movs
cmc
dec
pop
push
int
cdq
js
hlt
jle
sub
sti
(bad)
fcmovne
sbb
mov
push
xchg
popf
mov
(bad)
hlt
clc
ds
mov
lds
call
out
iret
jb
adc
and
sbb
out
es
test
and
push
stos
cmp
stos
stos
and
sbb
sar
mov
loop
cmp
jg
fild
and
xor
call
jecxz
cmc
cmp
cld
or
cwde
jb
sti
les
rol
sar
jnp
cmps
cwde
inc
pcmpeqb
cmps
cmp
bound
aas
add
lds
jmp
mov
sub
jae
scas
and
jp
pop
sub
mov
add
test
mov
ret
shl
push
mov
out
xor
in
push
or
mov
loope
jb
mov
mov
rcl
lahf
mov
int
(bad)
int3
sahf
cmc
cmp
jnp
push
in
imul
mov
jp
rol
inc
mov
push
mov
xchg
sti
jnp
cwde
int3
stos
test
mov
dec
mov
je
xor
mov
cmps
dec
int3
inc
inc
mov
gs
xchg
cmc
add
dec
aam
out
pushf
dec
test
les
retf
xlat
das
test
cli
mov
xchg
out
sbb
push
test
jno
dec
add
xor
sbb
enter
shl
js
int3
push
xor
and
inc
mov
adc
pop
and
repnz
jge
and
cmc
dec
push
sub
xlat
push
movs
jp
xchg
jmp
dec
(bad)
mov
cmp
sbb
mov
jne
int
jge
adc
rcr
pop
mov
mov
mov
mov
adc
daa
addr16
aam
sbb
sub
or
loope
setno
cmc
or
mov
adc
jmp
and
mov
ds
mov
mov
sbb
lods
inc
fwait
sbb
fstp
arpl
add
or
repnz
or
idiv
add
test
cmp
in
out
int3
xor
inc
ja
mov
sahf
mul
leave
les
xlat
mov
jmp
push
mov
scas
push
sub
stos
push
push
div
mov
cdq
popa
lods
fisubr
sub
xchg
dec
mov
mov
mov
jp
ret
mov
xor
mov
pop
mov
xchg
mov
push
mov
xor
enter
mov
dec
xor
sbb
cmp
inc
jecxz
inc
mov
pop
out
mov
retf
retf
jne
jbe
daa
jne
mov
adc
shl
xchg
pop
int3
sbb
nop
xor
jg
mov
add
pop
adc
push
or
lock
cmp
(bad)
cmp
cmps
in
aam
cmp
sbb
punpcklbw
stos
dec
inc
in
add
adc
mov
and
mov
fcomp
xchg
loope
hlt
arpl
mov
cmp
aam
and
xchg
call
mov
imul
mov
mov
lock
jno
imul
dec
(bad)
jle
mov
fdivr
int
mov
(bad)
cli
adc
add
or
mov
xor
jecxz
ja
in
cli
loopne
fs
add
jne
ins
dec
jge
js
push
dec
or
cs
imul
sahf
stos
sub
js
and
in
out
pop
inc
push
add
leave
dec
loope
push
call
sbb
jle
sar
push
adc
mov
pusha
mov
cld
sbb
jl
cs
(bad)
mov
mov
repnz
sbb
jecxz
xchg
mov
imul
sbb
jmp
pop
arpl
dec
outs
jmp
(bad)
je
xor
inc
sar
push
xor
fdivr
or
xchg
pop
(bad)
dec
cli
std
sbb
add
cld
or
inc
(bad)
mov
hlt
adc
mov
adc
sub
(bad)
je
shl
dec
int3
outs
pop
adc
lds
cmp
nop
sub
adc
push
cmps
cld
sub
dec
xchg
xchg
in
mov
test
cmp
cmp
repz
loop
or
jne
push
push
pop
push
mov
fucomp
xor
sbb
mov
int3
imul
jnp
pop
push
mov
add
inc
xor
sbb
dec
ss
pop
cwde
(bad)
(bad)
(bad)
mov
ds
cmp
loopne
cmp
cmps
sbb
adc
jne
sti
aaa
in
dec
arpl
enter
mov
ins
test
sahf
sbb
pop
aaa
and
rol
mov
jae
xchg
jae
mov
call
das
fild
mov
mov
pushf
add
ds
add
rcl
push
push
and
lahf
push
pop
and
cmp
imul
inc
mov
or
imul
push
(bad)
iret
popf
sub
scas
les
fcomi
(bad)
adc
pmulhuw
fwait
icebp
retf
pop
rol
ss
lea
ins
or
pushf
mov
sub
cli
push
push
stos
jbe
mov
dec
inc
bound
xchg
mov
idiv
dec
mov
fnsave
jnp
pop
je
mov
neg
jmp
or
cmp
cdq
mov
cli
call
cdq
daa
add
lea
xor
out
movs
jmp
pop
cmp
xchg
imul
and
movs
enter
sahf
je
jecxz
ins
jp
jno
mov
ror
xchg
sbb
sbb
lahf
imul
outs
pop
and
pop
inc
pop
lods
retf
pop
jg
sbb
add
inc
sbb
adc
ss
lods
cmp
push
movs
scas
or
inc
inc
stos
in
popf
and
imul
ins
inc
idiv
and
stos
pop
pop
cmp
iret
adc
pop
adc
xchg
loope
bound
not
push
cmp
mov
sub
call
sbb
cwde
mov
push
shl
mov
ret
enter
mov
push
les
add
sub
stos
xchg
and
icebp
xor
sub
arpl
jne
lds
not
movs
xchg
jb
push
mov
movs
lock
rcl
adc
sub
mov
les
mov
mov
mov
xor
loope
movs
dec
sbb
inc
adc
in
push
sub
cmps
out
xor
icebp
cmc
mov
in
sub
push
cmp
mov
cld
push
sub
call
sbb
jl
xor
or
int3
dec
movs
or
call
cmp
lahf
push
push
scas
add
in
leave
xchg
xor
inc
xor
xor
pusha
xor
out
int3
cmc
sub
sub
add
aam
cld
push
add
mov
dec
push
add
fisttp
mov
push
push
mov
sbb
push
jb
and
mov
loope
fwait
xchg
sub
jmp
pop
ds
add
inc
call
test
mov
xchg
imul
test
pop
(bad)
leave
push
or
repz
ja
mov
stos
mov
lds
jbe
xchg
aad
scas
jg
fsub
ins
test
xlat
add
pop
pop
stos
pop
inc
imul
retf
sbb
je
cld
fisub
push
push
xchg
fs
leave
jle
jmp
add
lods
jmp
mov
cdq
mov
jae
dec
push
fisubr
pop
addr16
mov
mov
inc
fisubr
push
push
sub
add
dec
and
out
gs
sbb
mov
popf
in
or
cmp
comiss
inc
ret
jns
mov
jne
add
inc
push
jecxz
shl
movs
ins
inc
jg
inc
pop
mov
add
sub
mov
dec
into
xchg
stos
fidivr
cmp
inc
sbb
mov
das
adc
cdq
rol
mov
outs
iret
fistp
(bad)
dec
mov
ret
mov
cmp
jo
sbb
in
shl
mov
fisttp
cmp
cmp
pop
mov
add
cmp
jno
xlat
xor
sbb
daa
fld
call
pop
dec
jno
mov
mov
jae
clc
sbb
cmc
adc
(bad)
xor
or
in
cmp
pop
icebp
idiv
addr16
push
mov
push
jl
in
gs
mov
cmps
mov
sti
ins
mov
fcom
or
cmp
out
pop
pusha
not
rcl
push
stc
lods
cmp
and
adc
cli
xchg
inc
test
xor
xor
dec
jns
sbb
sub
fdivr
push
dec
xchg
(bad)
dec
fimul
imul
imul
or
ins
sub
dec
cmovae
stos
push
jnp
cs
mov
pop
jp
ins
sar
sub
rcr
mov
fsub
outs
adc
cmp
imul
not
cmp
push
or
sub
sub
dec
out
imul
adc
add
sub
imul
ret
push
(bad)
test
adc
ret
popf
mov
cmps
xchg
out
in
pop
(bad)
push
push
cmp
jo
test
adc
lds
lds
loopne
sti
xchg
stos
cmp
push
aas
jne
dec
push
pop
adc
cld
out
pop
fwait
cmp
lods
push
and
pop
mov
es
and
sbb
mov
jl
xchg
imul
push
inc
mov
mov
(bad)
mov
popf
or
sbb
retf
xchg
mov
icebp
or
dec
fisub
cmps
(bad)
fsubr
clc
sub
jb
add
sbb
(bad)
jb
loopne
pop
iret
sbb
cs
dec
stos
and
sub
xchg
fstp
leave
movs
iret
call
or
jb
inc
pop
push
push
cmp
push
jns
pop
arpl
jmp
ror
mov
call
push
fdivr
push
adc
rcr
out
xchg
and
and
xchg
test
xor
in
adc
jp
cs
pop
in
xor
(bad)
cwde
movs
add
stos
std
jecxz
inc
ss
test
popf
ja
retf
or
and
cmp
pop
pushf
pop
rcr
into
pop
fldcw
je
pop
sub
test
mul
enter
movs
add
data16
push
push
dec
jmp
jg
lahf
repnz
fcom
pop
dec
mov
jb
fimul
cmp
sub
pop
inc
push
imul
mov
clc
xchg
stos
add
cmp
push
lods
jb
adc
sub
test
or
inc
in
popf
lahf
lods
ret
xchg
mov
pop
imul
outs
dec
std
sti
das
inc
aas
(bad)
and
int3
xchg
sub
jnp
cmp
hlt
inc
ins
inc
push
stc
aad
cmp
adc
cwde
jb
jl
cmp
mov
jne
lds
pop
push
xor
mov
xor
jb
or
adc
fisttp
es
(bad)
cmp
je
sbb
test
pop
lahf
push
inc
sub
lods
inc
nop
stos
retf
inc
test
mov
jae
hlt
movs
pop
add
sub
daa
in
xchg
dec
leave
shr
cdq
push
cmp
jns
cdq
mov
jmp
and
ficom
sbb
imul
daa
xchg
gs
mov
or
repz
sahf
rcr
xor
lock
xchg
pop
pop
and
es
push
sbb
jbe
xchg
fwait
pop
cmp
ret
pop
cmps
mov
jecxz
jecxz
mov
(bad)
test
clc
outs
push
or
retf
push
add
add
aas
mov
xchg
in
mov
jl
jge
add
adc
popf
(bad)
outs
add
retf
je
lahf
shr
push
mov
jnp
enter
stc
sbb
xlat
inc
sub
ins
pop
xchg
js
out
adc
cmp
cmp
out
push
fwait
xchg
xchg
jne
push
mov
push
inc
jbe
(bad)
jl
aam
add
or
xlat
lods
fild
bound
aad
xor
repnz
xchg
jg
inc
daa
mov
icebp
ret
ds
add
pop
push
out
xor
inc
mov
sub
dec
add
stos
shr
lods
stc
sub
hlt
xor
adc
loop
and
cmp
repz
sbb
fcmovu
cmp
sub
pop
inc
push
fdiv
bound
sbb
lds
cmps
jg
add
jg
in
xchg
loope
mov
sub
ret
pop
pop
xchg
push
dec
pop
jmp
mov
call
xlat
aas
aad
xchg
mov
cmp
mov
and
lods
ins
mov
iret
pop
(bad)
cs
adc
cmp
repz
dec
in
jle
adc
ret
xchg
addr16
sub
xor
jecxz
fnstsw
jle
icebp
movs
and
jle
(bad)
add
pop
xor
std
dec
nop
xor
xor
shr
push
dec
dec
outs
test
mov
jmp
lea
(bad)
in
xor
and
test
dec
je
rcl
inc
jbe
nop
je
push
dec
(bad)
mov
push
(bad)
fadd
or
test
popa
lock
cmc
sbb
add
loop
and
pop
in
lea
add
leave
push
sti
and
mov
jns
fs
repnz
js
pop
xchg
jle
(bad)
jg
cdq
dec
push
neg
push
test
xor
loopne
(bad)
and
push
and
push
jnp
aad
retf
imul
add
cmp
pop
xchg
cs
jmp
inc
xor
jp
dec
pop
pop
dec
lea
xor
mov
inc
repz
jo
sub
pop
out
mov
mov
push
aas
mov
in
jge
add
pop
adc
pop
ror
push
arpl
xchg
and
mov
out
cmp
xor
dec
enter
sub
jg
in
cmp
add
sub
imul
movs
ins
mov
xor
std
mov
retf
inc
xchg
ret
mov
push
out
mov
or
mov
jmp
xor
(bad)
icebp
or
lds
retf
adc
lds
in
ret
outs
outs
mov
cmp
cmps
sqrtps
lock
pop
(bad)
data16
xlat
fst
push
inc
cmp
shr
push
clc
jns
cwde
je
xchg
nop
add
mov
retf
or
pop
idiv
dec
outs
das
xchg
(bad)
in
xchg
(bad)
jmp
mov
test
jb
out
xchg
mov
dec
dec
imul
and
stos
mov
neg
stc
mov
fiadd
retf
es
movs
(bad)
or
lahf
push
lahf
fild
sub
mov
push
jmp
xor
iret
adc
mov
or
into
sub
test
and
or
stos
adc
push
inc
jns
xchg
dec
(bad)
mov
in
xor
leave
xor
or
pop
and
and
xchg
inc
ins
dec
mov
in
aam
pop
push
jmp
and
sub
sbb
xchg
rcl
(bad)
mov
mov
mov
and
and
js
(bad)
add
pop
xchg
stos
push
xor
das
ds
xor
xchg
fadd
mov
daa
ins
jmp
scas
mov
push
add
dec
das
mov
dec
ins
mov
mul
dec
mov
and
ins
mov
sbb
inc
pop
nop
pop
je
jge
shr
mov
ds
imul
imul
in
inc
mov
or
cwde
dec
adc
nop
cmp
ins
dec
mov
lods
xchg
test
(bad)
lds
dec
jns
or
mov
adc
repnz
ret
enter
div
call
mov
pop
jo
ret
and
pop
and
xor
mov
into
call
lds
sbb
xchg
fadd
stos
fwait
cs
imul
mov
pop
xchg
aam
xchg
pop
push
dec
fldenv
arpl
push
add
(bad)
pusha
and
pop
xchg
cli
and
popf
pop
pop
lods
jl
hlt
jecxz
pop
mov
mov
inc
push
mov
mov
std
xchg
mov
cld
fist
shl
jne
loope
push
push
push
cmps
xor
scas
adc
push
iret
(bad)
cmp
fist
push
dec
les
add
mov
movs
xchg
in
shl
test
xor
push
imul
outs
test
push
iret
je
clc
mov
jp
or
movs
xor
mov
sub
test
jbe
jbe
xchg
and
xlat
mov
inc
dec
mov
aad
repz
add
out
pop
(bad)
push
xchg
ss
cmp
xchg
adc
adc
(bad)
sub
sbb
jmp
pusha
(bad)
jo
call
push
mov
ins
test
xchg
loopne
jb
pop
(bad)
call
and
add
sub
out
bound
mov
ret
(bad)
dec
(bad)
cmp
cmps
aam
inc
pop
add
out
daa
jecxz
aas
repz
or
out
add
or
and
daa
push
(bad)
shl
or
sub
cmp
out
cli
pop
mov
sub
je
lds
out
sbb
scas
retf
loopne
jbe
lods
dec
std
push
nop
or
imul
push
mov
jl
arpl
cs
stos
out
add
mov
pop
jl
add
mov
bound
cmps
aam
fcom
jecxz
push
push
aaa
and
les
outs
cmp
sti
nop
popf
mov
push
jmp
jp
inc
cmps
es
and
ja
and
jnp
sub
test
pop
scas
xor
pop
dec
push
mov
cld
xor
cmp
stc
inc
jmp
cdq
mov
into
sti
push
dec
push
mov
cmp
dec
push
jp
das
adc
jno
push
iret
pop
gs
clc
jnp
mov
mov
adc
stc
popf
fdivr
popf
out
or
aas
mov
es
bnd
add
mov
add
adc
pusha
aas
jmp
adc
dec
adc
xchg
or
dec
mov
mov
mov
jge
mov
mov
xchg
adc
call
addr16
fucomip
test
mov
pop
fcmovne
in
into
loopne
int
mov
lock
test
pop
fadd
shl
scas
rcl
jge
pop
(bad)
div
ins
mov
in
or
jmp
mov
mov
movs
test
aas
idiv
into
jmp
add
ds
sbb
sub
pop
rcr
test
fcomp
sbb
mov
xchg
pop
not
mov
rcr
push
cmps
loopne
fld
retf
xchg
sbb
add
mov
xchg
leave
xor
lahf
mov
arpl
push
push
inc
int
sbb
mov
aaa
lea
mov
(bad)
ret
sahf
dec
push
outs
push
mov
inc
fs
das
in
pop
ret
push
dec
and
mov
and
loopne
mov
xchg
pushf
ja
mov
faddp
movs
dec
xchg
push
fadd
lock
and
not
pop
jns
mov
test
xlat
pop
sbb
jle
jmp
retf
push
jne
ja
rol
sub
inc
xchg
mov
retf
xor
repnz
sub
(bad)
call
nop
mov
pop
shl
lea
lds
sub
fcom
pop
ja
mov
out
push
xchg
push
sbb
xor
add
jno
add
or
inc
or
or
sub
scas
nop
jnp
mov
daa
mov
stos
leave
movs
adc
mov
ret
sbb
cli
dec
fild
sbb
call
frstor
xchg
sbb
adc
xor
lods
xchg
(bad)
(bad)
adc
dec
xor
cwde
ret
dec
leave
cmp
addr16
mov
aam
sbb
enter
inc
sub
push
and
shl
imul
(bad)
jb
add
push
scas
out
in
scas
jmp
dec
retf
aam
les
bound
fnstenv
stc
sbb
fsub
fwait
pusha
mov
jae
ins
pop
inc
lea
inc
jne
call
addr16
iret
retf
pop
(bad)
ins
mov
mov
(bad)
(bad)
enter
jg
ret
div
cmp
cmp
nop
scas
jbe
or
repnz
fdivr
mov
xor
pop
aad
jno
cmp
xor
loopne
js
cmp
and
(bad)
add
pop
sbb
ffree
sub
test
and
fiadd
sbb
outs
pushf
(bad)
xor
xor
add
es
daa
addr16
cmps
push
dec
push
jb
sbb
sub
leave
stc
int3
ds
jo
sbb
jne
test
sbb
and
les
call
icebp
(bad)
xchg
retf
pop
jno
sahf
ret
xchg
icebp
or
mov
outs
ss
mov
aam
outs
gs
lea
and
(bad)
aam
add
aaa
xlat
cmp
xor
push
je
fnsave
test
and
sub
jmp
stc
jecxz
outs
sub
cmp
repz
gs
inc
fld
sub
into
rcl
cs
ret
ror
out
jmp
mov
in
cdq
xlat
shr
(bad)
dec
ret
mov
fwait
mov
lods
call
js
or
or
dec
mov
or
imul
mov
int
hlt
aas
scas
js
mov
jne
fadd
mov
ret
jnp
loop
push
cmp
ficom
scas
pcmpgtd
mov
enter
add
aam
adc
xchg
aad
rol
cmp
and
push
inc
(bad)
rcl
retf
push
pop
fstp
movs
popa
mov
adc
(bad)
(bad)
int
push
sbb
fcom
lds
and
shl
mov
aad
cmps
inc
out
jbe
jecxz
pusha
and
or
jmp
cmp
out
adc
push
test
or
pop
int3
adc
shl
les
mov
or
add
sbb
adc
ror
mov
je
stos
push
aam
sbb
pop
add
adc
xor
sar
fdivp
sub
fwait
ret
mov
jbe
pop
imul
retf
fld
shr
sub
jmp
aam
in
jmp
pop
cmp
jns
mov
movs
cmp
or
xor
in
dec
popf
fsubrp
add
xlat
fwait
mov
scas
stc
mov
jmp
(bad)
dec
inc
jnp
sub
aaa
cs
mov
in
int
std
dec
in
mov
cmp
mov
fs
or
data16
jge
addr16
call
xchg
jp
mov
je
adc
fs
lock
jb
mov
xchg
sbb
fadd
dec
int3
cmp
cmp
jle
mov
addr16
mov
out
cmp
js
cld
jns
sbb
xchg
sub
std
nop
jo
push
and
cli
es
or
or
cmp
adc
hlt
ja
pop
ja
fisttp
jo
imul
sbb
pop
xchg
xchg
fnstenv
shl
in
mov
cmp
lock
jp
push
adc
jge
test
cmps
(bad)
sub
mov
dec
cli
fisttp
and
mov
inc
jnp
leave
sbb
dec
dec
or
iret
lea
push
sub
xchg
loope
mov
test
adc
jbe
fdivr
mov
jne
loop
adc
imul
or
movs
pusha
fchs
enter
push
mov
dec
je
(bad)
push
fcmovnu
shl
lods
push
sbb
jmp
and
push
dec
stos
and
sub
(bad)
out
cmp
loop
(bad)
lea
cmp
(bad)
adc
aaa
std
sar
ror
pop
fiadd
std
inc
sub
cmp
push
cdq
out
into
dec
idiv
cmps
sbb
ds
jne
and
imul
bound
add
push
xor
test
iret
lods
mov
mov
cli
pop
ret
cli
jp
mov
adc
pop
fldenv
xchg
dec
lahf
dec
xchg
out
mov
sub
(bad)
lods
fmul
mov
xchg
jb
enter
inc
xchg
sbb
adc
xchg
push
jno
and
ficom
je
test
out
and
xchg
shl
push
and
and
sti
(bad)
(bad)
mov
sub
pop
adc
sar
scas
mov
sbb
movs
or
adc
and
int3
mov
les
rcl
xor
add
jecxz
stc
cmp
nop
icebp
and
xor
cmps
div
mov
mov
ds
imul
push
arpl
outs
jge
inc
jge
jp
mov
mov
xchg
push
and
loop
retf
mov
mov
mov
cmp
mov
pop
or
test
mov
inc
dec
add
call
stos
pop
and
int3
cmp
std
dec
je
mov
dec
cmp
xchg
in
mov
cld
aaa
loopne
loopne
xchg
sbb
test
adc
xchg
ins
div
xor
xor
mov
iret
xchg
out
sub
nop
sub
xchg
mov
test
(bad)
cwde
adc
cmp
mov
dec
mov
and
inc
aam
std
shl
or
pop
push
pusha
test
mov
inc
mov
fcomp
jecxz
cmps
pop
push
lock
(bad)
push
fdivr
or
in
cmps
mov
bound
push
ins
dec
(bad)
sbb
xchg
dec
mov
or
cld
and
rol
jb
cmp
pop
sbb
in
data16
xor
and
adc
fld
ds
inc
mov
or
pop
push
mov
mov
stos
mov
jno
push
outs
push
jge
cmps
loope
int3
jp
and
and
push
ds
lds
stos
mov
dec
push
cmps
xchg
repz
cmps
scas
cmp
mov
test
push
loope
and
xor
cmps
push
pop
ficom
adc
sub
xor
popf
mov
xchg
cdq
in
loop
ror
xor
push
pushf
or
xchg
add
xchg
push
popf
sbb
in
repnz
sar
add
lahf
jmp
cmp
mov
pushf
fwait
pop
lds
scas
push
xor
neg
(bad)
cmp
or
mov
test
popf
cmp
test
sub
imul
add
mov
mov
mov
scas
hlt
sbb
out
mov
test
or
pop
adc
in
in
ds
(bad)
push
in
clc
(bad)
sar
add
inc
test
call
loope
test
push
aaa
adc
ins
repz
test
mov
jmp
lds
lea
dec
mov
cmps
aam
int3
ss
dec
pusha
and
(bad)
(bad)
shl
push
loop
fdivrp
out
pop
(bad)
fwait
or
test
aad
idiv
(bad)
xor
in
mov
jg
pop
sbb
xchg
(bad)
cld
adc
mov
lods
xchg
and
dec
setbe
fisub
neg
fidivr
sahf
arpl
ret
leave
iret
test
xchg
sahf
mov
mov
cmp
xlat
jne
xchg
add
je
repnz
inc
xor
adc
int
shl
add
ds
adc
and
stos
xchg
xchg
push
push
aad
mov
aam
push
jmp
retf
mov
push
push
and
push
add
lahf
lods
call
add
and
cmp
fdivr
dec
cmp
aad
sbb
sbb
scas
retf
je
cs
xor
std
or
mov
mov
repz
cmp
push
dec
movs
aam
call
and
jmp
and
ror
dec
sub
xchg
push
push
cmp
js
cmp
push
jne
imul
sti
adc
add
data16
mov
and
nop
ds
arpl
lock
lods
fmul
lods
retf
(bad)
fisubr
bound
and
inc
xchg
xchg
jo
pop
ins
add
add
int3
pop
xor
mov
dec
dec
xor
retf
mov
jnp
arpl
inc
or
fidiv
rol
mov
xor
mov
ret
adc
xor
jnp
aad
sahf
fs
and
mov
jge
rdmsr
or
rcl
push
and
adc
mov
add
or
call
test
popf
aas
mov
adc
ror
fmul
ins
inc
sbb
imul
add
mov
jmp
(bad)
lea
push
ror
and
retf
in
adc
in
pop
mov
xchg
adc
add
mov
xchg
and
pop
push
xrelease
idiv
gs
ja
test
int3
and
jo
push
ds
ins
in
or
ror
or
loopne
mov
ret
ret
sub
jnp
jae
aaa
ds
push
cs
stc
mov
hlt
js
xchg
movs
or
lods
les
add
sti
pop
out
mov
call
fs
ffreep
sahf
and
adc
sbb
mov
mov
cs
mov
call
mov
pop
jno
mov
push
int3
out
sbb
scas
ret
ds
add
retf
call
push
(bad)
cli
adc
adc
jnp
push
jnp
dec
ins
xor
or
test
push
(bad)
test
jne
adc
or
test
div
lock
mov
adc
push
not
stc
sub
push
out
jge
bound
xchg
(bad)
test
push
add
push
test
hlt
test
xchg
push
mov
sbb
push
dec
jle
add
leave
and
das
mov
rcr
shl
mov
mov
ds
jns
jmp
cwde
sbb
dec
inc
inc
push
sbb
mov
inc
pop
fisttp
cmps
fiadd
dec
cmp
mov
mov
in
cmp
inc
mov
(bad)
arpl
pop
jmp
add
cmp
aad
cmp
dec
jge
add
sar
xchg
leave
mov
test
push
mov
(bad)
shl
add
xor
bound
popa
shl
and
jae
addr16
lea
xchg
mov
mov
popa
ja
xlat
pop
(bad)
adc
mov
cs
inc
and
pop
ret
aas
mov
add
gs
aad
cld
imul
pushf
or
popf
xchg
cmp
xchg
pop
add
in
pop
add
into
mov
dec
mov
push
sbb
jbe
movlps
xor
cmp
mov
inc
ja
outs
aaa
int3
or
rcl
das
jle
add
adc
inc
imul
es
out
aad
sahf
vpshuflw
pop
loopne
fneni(8087
cmp
or
xchg
sbb
ror
add
cmp
fldenv
pop
jne
nop
cdq
mov
xchg
or
rcr
pop
jmp
pop
jl
dec
jo
cmp
xchg
sub
mov
pushw
or
ja
pop
lock
imul
pushf
xchg
aaa
scas
aam
cmps
jbe
iret
(bad)
sbb
xchg
sar
sbb
xchg
(bad)
aad
stc
(bad)
cmp
pushf
mov
pop
fs
adc
adc
dec
mov
popf
jecxz
xchg
retf
push
mov
mov
jno
(bad)
not
and
mov
in
inc
xchg
hlt
popa
jmp
or
in
and
or
std
add
iret
inc
lahf
xor
mov
lods
pop
push
hlt
retf
cmp
push
jnp
push
js
aam
inc
add
add
pop
out
sbb
loopne
test
push
mov
cmp
xchg
movs
add
ins
jle
add
iret
mov
cmp
(bad)
imul
std
in
iret
retf
outs
test
retf
inc
pop
shr
pop
pop
jmp
mov
cmp
xlat
out
sar
mov
jle
sub
in
and
xor
in
xchg
inc
int3
mov
jnp
aas
in
cbw
pop
fadd
aas
add
lds
in
mov
outs
mov
sbb
mov
sbb
push
sub
push
xor
daa
adc
sbb
(bad)
fdivr
jecxz
in
es
jle
dec
mov
fisttp
shl
or
or
(bad)
shr
jge
push
adc
mov
jo
inc
or
loop
sbb
sbb
mov
mov
out
leave
les
dec
adc
push
pop
arpl
test
mov
dec
icebp
or
push
aad
mov
push
cwde
outs
stos
into
inc
add
retf
lds
cdq
mov
icebp
cmp
sahf
aad
shl
and
adc
jp
jns
push
repz
sahf
xchg
xor
jnp
dec
gs
push
stc
and
aas
(bad)
or
test
mov
lahf
xchg
sahf
mov
xchg
aad
sbb
add
mov
(bad)
popf
mov
movs
sbb
sbb
js
cwde
push
inc
sbb
in
dec
lods
adc
fucomp
cmps
xchg
push
rcl
inc
push
jnp
(bad)
and
int3
adc
cmps
and
repnz
pop
call
mov
aaa
(bad)
mov
fnstsw
push
inc
add
jp
cld
pop
cmc
inc
or
push
je
cs
(bad)
ret
xchg
push
and
xchg
std
adc
cwde
(bad)
sub
adc
xor
inc
les
mov
retf
movs
pop
cmp
les
mov
xchg
jo
hlt
cmps
mov
ins
add
add
pushf
pop
test
in
pop
cwde
sub
retf
imul
sub
addr16
sbb
ret
test
pop
mov
cdq
mov
rol
dec
aam
rcr
rcl
stc
mov
push
mov
out
fs
dec
shl
hlt
adc
(bad)
sub
es
les
cmp
pusha
sub
mov
pop
lahf
push
stc
pop
push
imul
push
jae
popa
addr16
mov
mov
fistp
ja
pop
repnz
or
jl
shr
jecxz
retf
fdivrp
cmp
jle
or
int
jl
cmp
rcl
or
ret
loop
lods
sbb
mov
dec
adc
mov
sub
jo
test
mov
dec
or
ds
std
mov
popf
ret
jno
xchg
xchg
ins
cmp
in
lods
dec
xor
jecxz
cwde
push
jle
push
sahf
jno
dec
pop
ret
cld
out
(bad)
jnp
xchg
mov
mov
push
fstp
pop
mov
ret
xlat
sbb
cmps
retf
jnp
push
imul
ins
pop
or
mov
xor
mov
es
in
sub
inc
xor
and
xchg
xchg
jo
clc
mov
jmp
in
mov
loopne
xchg
pusha
test
retf
ret
cli
and
in
sub
out
pop
adc
leave
add
scas
ja
fs
imul
aas
pop
(bad)
push
ins
dec
xchg
ins
pop
dec
jne
ja
movs
fidivr
mov
mov
cmp
adc
pop
mov
nop
dec
aam
xchg
bound
mov
pop
in
retf
imul
mov
ret
mov
inc
dec
imul
in
loop
jmp
(bad)
lods
call
inc
xchg
stos
jl
add
imul
das
popa
jnp
das
xlat
es
sub
ror
jbe
or
and
or
data16
mov
stc
ud0
pop
bound
push
pop
sahf
mov
mov
mov
(bad)
adc
jne
lds
mov
stos
cmp
out
mov
dec
mov
pop
xchg
sbb
test
test
stc
ins
or
xlat
mov
mov
popa
shl
pop
xor
jbe
mov
sar
rcr
les
adc
dec
loopne
mov
sbb
mov
jle
ret
call
movs
(bad)
aam
xchg
ja
xchg
mov
fisttp
cmps
inc
inc
xchg
enter
retf
sbb
out
enter
out
into
pop
mov
nop
call
xor
imul
push
or
adc
(bad)
and
retw
lods
mov
in
and
jbe
jns
sbb
sub
icebp
inc
xor
hlt
mov
dec
push
in
(bad)
loopne
stos
push
cmp
std
aad
rol
test
or
clc
xor
dec
add
push
mov
pop
xor
rcr
hlt
(bad)
out
(bad)
imul
pop
mov
adc
aas
ins
shl
cmps
clc
xchg
mov
das
retf
imul
xchg
call
sbb
stc
(bad)
xor
cmp
in
out
popa
mov
adc
ret
sbb
add
xchg
cmp
outs
(bad)
sub
mov
xor
out
sbb
dec
cmp
outs
dec
jb
stos
jmp
or
xchg
inc
cmp
xchg
loop
dec
dec
mov
pop
fcmovb
lds
ja
fs
jmp
xchg
clc
cmc
mov
cmp
sub
int3
aas
sahf
jb
push
aaa
je
not
jmp
jns
cmp
test
(bad)
icebp
dec
cmovb
xchg
mov
push
stos
sub
and
add
push
mov
mov
xchg
call
adc
test
popa
or
in
sbb
hlt
mov
cmp
fwait
(bad)
push
div
mov
or
mov
mov
(bad)
icebp
(bad)
dec
jb
inc
mov
jg
popa
pop
mov
call
pop
mov
sub
sahf
jmp
fadd
sub
pop
inc
xchg
fadd
push
xchg
cmp
or
mov
ret
pop
or
daa
adc
push
loop
outs
es
add
push
dec
sbb
sub
xlat
test
jbe
or
sub
and
push
test
nop
fld
retf
fist
fsub
add
fdiv
and
mov
mov
daa
outs
jbe
sahf
test
vandnps
or
add
stos
dec
xlat
xchg
fs
cli
xchg
or
mov
loopne
(bad)
stos
push
retf
or
add
xchg
mov
adc
pop
xor
lock
gs
popf
mov
sub
xchg
cmps
das
hlt
cmps
lods
cmp
movs
retf
arpl
or
in
loop
cdq
xchg
loopne
test
xchg
(bad)
jp
pop
aad
push
bound
fs
mov
ret
jne
std
mov
sti
pop
or
ret
and
xchg
or
xor
(bad)
mov
inc
push
data16
test
adc
pop
pop
xor
ffree
stos
push
push
imul
xchg
sbb
fcomp
mov
stos
cld
out
movs
movs
cld
push
sar
movs
test
push
fcomp
aas
and
sub
es
fsub
push
pop
pop
mov
stos
stc
add
sub
cdq
out
sbb
lods
sbb
push
in
pusha
std
js
cs
(bad)
mov
dec
neg
add
xchg
rcr
push
pop
push
test
sbb
sub
adc
dec
sub
jo
mov
pushf
shl
in
mov
pop
push
hlt
fidivr
dec
arpl
xor
shr
mov
int3
loope
arpl
mov
pop
in
dec
sbb
data16
dec
jge
mov
out
lss
push
test
(bad)
fsubr
outs
sbb
or
mov
ror
or
ds
in
mov
retf
loope
xchg
push
fist
add
in
pushf
sahf
icebp
lock
push
sti
pop
or
fild
sahf
mov
push
pushf
mov
adc
(bad)
in
xchg
out
or
xor
pop
(bad)
xlat
scas
and
in
inc
add
mov
mov
mov
iret
test
sahf
rcl
fs
pop
adc
dec
jg
or
aaa
or
mov
sub
add
loop
ins
sahf
inc
data16
push
cdq
pop
ret
sub
sbb
mov
stc
adc
push
ds
js
xor
add
or
loop
jnp
pusha
mov
ret
dec
outs
lods
cmp
outs
scas
mov
adc
sti
dec
mov
or
faddp
sbb
cs
xchg
mov
inc
mov
gs
fwait
je
or
mov
mov
pop
inc
gs
xor
out
dec
out
cdq
ss
in
or
mov
mov
push
mov
fcmovbe
inc
cmps
neg
inc
add
pushf
lea
movs
frstor
xchg
std
pop
cmps
es
(bad)
sub
or
or
dec
call
stos
xor
scas
rol
cmp
aas
or
jle
dec
out
lahf
xchg
stos
out
sti
movs
sbb
rol
sub
dec
mov
int
mov
pop
sub
and
push
xchg
inc
inc
ins
sub
nop
scas
aas
xchg
pop
shl
fxch
add
(bad)
adc
scas
sub
jle
xor
inc
test
cmp
sbb
ret
call
out
mov
sbb
push
sub
ret
xor
add
mov
inc
push
pop
push
add
sub
loopne
and
xor
adc
jo
push
inc
jae
out
outs
xor
ss
push
pop
movntq
loope
sub
mov
iret
push
shr
sbb
dec
jge
mov
inc
fcomp
jecxz
imul
dec
jg
test
sub
jne
out
aaa
cmp
das
loopne
sub
xchg
xchg
rol
xor
cmp
repnz
inc
push
sahf
push
int3
sbb
jno
aam
in
add
mov
push
(bad)
(bad)
and
retf
movs
xor
jbe
xor
test
jns
xchg
cli
das
jmp
outs
(bad)
mov
int
div
scas
mov
sub
jle
dec
sti
arpl
sahf
or
dec
mov
loopne
inc
in
dec
mov
pop
jnp
in
dec
dec
xlat
cwde
sub
mov
and
scas
(bad)
fdiv
sbb
addr16
imul
cmc
ret
pop
loope
sbb
outs
jg
popa
repz
pop
xor
rcl
pop
push
gs
shr
and
cld
add
in
or
adc
iret
lock
cs
ja
adc
sbb
retf
and
mov
je
mov
ja
mov
repnz
adc
popa
mov
enter
mov
movs
mov
(bad)
aaa
out
aas
add
xor
(bad)
out
lods
push
sbb
lds
cmp
xchg
out
pop
sbb
mov
mov
cmc
adc
daa
movs
mov
fwait
popa
imul
adc
icebp
and
das
sbb
xor
dec
popa
mov
xchg
fdivr
pusha
sub
add
aas
(bad)
or
mov
ss
fs
imul
mov
sahf
dec
cmp
mov
pop
ins
fpatan
stos
push
and
je
les
addr16
fcom
test
jnp
gs
mov
adc
push
in
add
sub
pop
push
sbb
movs
sbb
jge
mov
into
push
ret
push
pop
hlt
stos
ds
cmps
xlat
leave
cmp
push
mov
imul
adc
sbb
and
fsub
js
xor
int
stos
mov
inc
push
jb
rcl
(bad)
or
xchg
or
scas
jge
fist
in
cli
or
and
xchg
adc
xor
lea
imul
mov
pusha
imul
add
(bad)
jne
jo
mov
cmc
(bad)
loopne
cmps
push
fsqrt
sti
mov
mov
jae
add
mov
ins
and
jge
in
jb
mov
fnstenv
mov
das
push
rep
dec
ins
into
aam
gs
cmps
div
xchg
sahf
out
inc
mov
or
pop
sbb
and
mov
scas
mov
or
test
jge
pop
aas
js
addr16
rol
bound
xor
and
dec
imul
repnz
fwait
pop
(bad)
inc
fdiv
les
inc
cmp
neg
stc
mov
cli
cdq
xlat
imul
cld
cmp
add
mov
xor
int3
xchg
and
inc
(bad)
pop
aam
mov
call
pop
mov
test
imul
je
rol
and
cs
mov
xchg
mov
jecxz
dec
fisubr
cmps
mov
and
push
rcr
sbb
xchg
cmp
inc
sti
push
adc
out
dec
(bad)
fst
shl
or
cmp
hlt
pop
adc
jl
(bad)
aam
cmp
pusha
push
imul
call
mov
test
jnp
or
stc
fs
test
stos
call
enter
movs
pop
mov
aad
xor
cdq
or
rep
dec
add
dec
jno
or
repz
jno
cmp
out
loop
movs
mov
lahf
ins
aam
jge
dec
dec
xchg
lods
hlt
mov
test
ins
cmp
jp
mov
xor
push
imul
mov
mov
out
jp
xor
dec
mov
jnp
jmp
jmp
jl
test
sub
mov
scas
sti
push
and
out
leave
in
fldenv
fidivr
fwait
pushf
push
scas
scas
xchg
push
repz
inc
repnz
int
dec
mov
add
add
lock
imul
stc
dec
xchg
test
add
pop
pop
cmp
jbe
push
test
daa
in
pop
inc
xor
mov
outs
icebp
out
call
mov
outs
push
fldenv
rcr
mov
and
sub
rcr
imul
lods
sbb
xchg
hlt
mov
and
leave
retf
add
imul
sbb
push
cmps
mov
pushf
add
pop
scas
xor
fnstcw
fcmove
inc
in
or
jmp
int3
repnz
inc
out
ficom
xor
cmp
imul
cmp
cmp
out
and
int
lock
outs
leave
and
add
fdiv
icebp
xrelease
xor
push
mov
pop
add
popf
adc
sub
hlt
fucom
iret
mov
into
into
pop
lea
daa
inc
and
mov
and
add
fiadd
adc
add
inc
adc
xlat
ffree
sar
sahf
mov
fistp
mov
test
xor
add
ja
scas
pop
xchg
jp
aas
aas
shl
push
imul
push
jbe
clc
sub
fstp
mov
inc
es
scas
call
movs
or
lea
pop
add
cs
leave
dec
push
aad
fcomi
aas
mov
arpl
xchg
frndint
xor
xor
imul
(bad)
push
mov
or
xor
pop
stos
pop
mov
pushf
cmc
dec
ins
mov
pop
jg
pop
ror
adc
lds
push
inc
jg
test
retf
aas
push
enter
inc
rol
inc
dec
mov
fstp
jmp
cmps
xchg
jecxz
mov
ins
sub
fs
jg
mov
retf
clc
repz
in
dec
mov
std
mov
(bad)
je
lock
add
mov
scas
dec
inc
arpl
arpl
and
cmp
mov
jmp
adc
xlat
sub
fnstcw
dec
jbe
js
jns
ja
fmul
das
mov
test
jns
nop
sub
sub
icebp
and
pop
movs
outs
sbb
push
inc
imul
sti
dec
mov
das
clc
lock
movs
push
pop
popf
xor
cmp
or
test
loope
xchg
out
jbe
mov
and
lods
stos
cmp
scas
fidiv
jmp
jno
mov
into
mov
mov
out
or
or
sbb
jle
fimul
push
(bad)
fwait
imul
cmp
mov
xchg
adc
pop
and
xchg
add
push
inc
and
jmp
aam
push
out
jmp
xchg
out
pushf
xchg
lock
setle
outs
xor
imul
cmp
adc
mov
adc
out
jmp
pop
stc
call
push
cmp
cwde
daa
test
movs
fstp
ret
daa
push
push
arpl
fdiv
and
outs
in
jae
dec
push
sbb
popa
sub
inc
mov
inc
es
mov
mov
mov
cmp
push
inc
jmp
jmp
rcl
cmps
jg
shl
pop
popa
sub
add
loopne
pop
pop
or
scas
sbb
nop
cs
mov
pop
xor
test
jne
inc
inc
cli
mov
imul
fiadd
inc
(bad)
jp
xchg
ret
(bad)
inc
call
xor
cmp
call
(bad)
mov
sahf
test
adc
cmp
push
inc
xor
inc
lahf
(bad)
mov
ror
ins
xor
jnp
mov
bound
sub
cmp
adc
outs
into
scas
lahf
test
push
mov
xor
imul
xor
loopne
lock
push
push
inc
dec
aas
xor
inc
add
aaa
adc
push
ins
test
or
jnp
or
adc
outs
(bad)
cmc
mov
push
movs
cmps
mov
retf
dec
and
data16
add
pusha
outs
mov
xor
pop
scas
aas
mov
xchg
jge
lods
out
add
aad
add
push
int3
sbb
xor
sub
xlat
push
js
jmp
mov
jne
cmp
pop
rcl
add
push
ret
xor
cmps
in
push
pop
inc
and
push
jge
ret
sub
sub
dec
or
xchg
les
retf
cwde
mov
adc
adc
xchg
repz
aad
pop
sbb
xor
outs
retf
sahf
mov
xchg
jp
dec
mov
or
out
jg
jp
aaa
cmp
mul
inc
xchg
dec
adc
into
cmp
mov
in
popa
fistp
mov
jl
mov
adc
and
pop
mov
mov
js
test
leave
pop
jmp
pop
sbb
imul
repz
xchg
repz
mov
inc
mov
sbb
pmuludq
test
out
sub
pop
xor
in
loopne
repnz
lea
dec
arpl
fnsave
enter
pop
add
sahf
push
dec
cmp
pop
jp
xchg
push
fwait
mov
adc
inc
push
dec
(bad)
fimul
inc
ja
cmps
jecxz
pop
mov
pop
mov
test
imul
cmc
sar
pop
int3
loop
hlt
dec
sub
das
out
dec
cmp
jnp
xor
sbb
imul
dec
aaa
std
in
xor
jae
or
push
inc
xor
cmp
jmp
aaa
inc
xchg
fimul
adc
mov
push
add
push
mov
lds
in
and
cmc
(bad)
loop
icebp
or
inc
mov
retf
jne
sbb
rcr
mov
dec
loopne
xchg
enter
add
mov
xor
mov
daa
les
outs
call
fdivr
pop
add
int
and
ret
cs
dec
ins
test
daa
jg
lea
sbb
cmp
push
mov
in
call
push
mov
cld
pop
out
push
adc
mov
loope
dec
push
rcl
(bad)
lock
adc
out
mov
xchg
movs
mov
ja
xchg
push
ds
lods
addr16
aam
sub
add
stc
xchg
mov
call
sub
xchg
xchg
je
push
cmp
mov
mov
jno
dec
push
mov
inc
(bad)
jl
daa
ficomp
ins
inc
push
lods
scas
xchg
bound
jbe
push
out
in
mov
test
pop
mov
sbb
es
loop
gs
cli
mov
loopne
cdq
jl
das
mov
mov
out
(bad)
ror
dec
push
or
mov
aas
add
add
pop
data16
adc
sub
mov
daa
cmp
jnp
loopne
adc
mov
dec
jle
and
push
jge
push
iret
(bad)
(bad)
pop
dec
test
rcr
fadd
add
mov
(bad)
inc
ret
sti
mov
jecxz
dec
sbb
leave
out
int
inc
loop
lahf
mov
fisttp
jno
popa
mov
stc
jo
ror
xor
ss
les
cwde
push
cmp
sub
cld
cmp
test
test
addr16
dec
lds
test
mov
(bad)
es
and
cwde
push
xchg
cmp
leave
lock
dec
in
and
cmp
push
xor
enter
cmp
mov
or
mov
mov
bound
push
inc
jp
mov
dec
mov
scas
in
mov
loope
into
jecxz
jne
test
arpl
add
clc
gs
add
pop
dec
or
mov
pop
push
inc
aad
cmp
js
call
and
sahf
dec
test
js
xchg
loope
mov
push
xchg
push
std
sub
push
jno
out
jae
inc
dec
shr
hlt
xchg
push
and
pop
xchg
ss
adc
daa
pop
pop
int3
(bad)
adc
stos
addr16
cs
lods
test
(bad)
push
jge
jecxz
lea
retf
adc
mov
inc
push
int3
sub
lock
mov
scas
dec
inc
adc
(bad)
dec
pop
sbb
shl
mov
sub
adc
das
in
xor
jns
sbb
mov
mov
rol
pusha
cmps
mov
mov
inc
in
lahf
jg
rcl
mov
xchg
pop
add
cmps
sbb
mov
cmp
scas
or
lds
xor
jl
es
pop
pop
enter
push
adc
test
mov
mov
push
mov
inc
adc
addr16
mov
test
icebp
sbb
sar
mov
pop
sbb
stc
out
scas
fdivr
jge
jg
dec
push
aad
jo
or
leave
cmc
lock
jge
push
mov
dec
(bad)
nop
(bad)
ds
and
push
call
mov
push
int
push
daa
loop
out
pop
shl
jecxz
loope
mov
or
xor
xlat
dec
popf
neg
mov
mov
adc
out
and
loop
push
cld
out
jne
test
shr
sbb
test
and
push
stos
jb
mov
mov
dec
test
ins
or
jnp
sbb
je
xor
push
push
cmp
sub
clc
jecxz
push
jb
or
cdq
jne
mov
retf
inc
push
stos
or
retf
movs
push
pop
rcl
push
cmps
xchg
outs
pop
fsqrt
in
lods
push
outs
mov
hlt
leave
cli
ja
push
jne
mov
jmp
fcom
cmp
cdq
fs
lds
out
push
leave
push
syscall
inc
stc
xchg
push
std
mov
mov
fidivr
push
jns
dec
rol
and
popf
rcl
cld
hlt
sub
int
inc
xor
ins
push
adc
mov
lahf
mov
ds
xor
jae
mov
cmp
mov
jns
dec
pop
pop
jnp
and
lods
push
shr
jo
mov
mov
rol
pusha
inc
ja
mov
in
push
mov
fistp
cmps
pop
sub
mov
dec
ins
dec
inc
call
and
push
push
or
(bad)
int3
push
mov
sub
test
adc
and
es
push
mov
pop
nop
(bad)
jle
dec
add
and
mov
dec
push
outs
out
(bad)
retf
jge
inc
xchg
fadd
aas
add
popf
adc
iret
inc
ja
xor
xor
pusha
das
rol
stc
in
lock
xor
into
loope
sub
retf
and
popf
xchg
mov
dec
pop
jae
xchg
xlat
fidivr
mov
mov
inc
sbb
sahf
test
inc
retf
jecxz
movs
mov
ror
or
mov
and
and
mov
cmp
add
and
mov
scas
leave
in
push
mov
adc
push
xor
adc
lods
push
dec
mov
lds
rcr
rol
inc
jmp
jae
cmp
xor
push
inc
into
or
jo
sub
repz
cld
push
stos
jmp
pop
sub
nop
call
dec
jl
jp
ds
xlat
and
add
lock
dec
jb
or
xchg
xchg
and
cs
lock
ja
fstp
push
ds
loopne
dec
mov
sub
mov
sar
enter
test
sti
inc
call
std
xor
pop
lahf
jmp
mov
mov
loop
pop
jnp
(bad)
pop
inc
fld
sub
lock
jb
fdiv
pop
mov
sub
push
imul
repnz
in
movs
lods
and
cdq
inc
dec
add
push
sub
vmovntps
out
std
or
cdq
fcomip
sub
jl
sahf
sub
sub
inc
push
sub
call
test
sub
sahf
imul
gs
push
mov
popa
test
xchg
cdq
imul
jge
(bad)
jecxz
fsub
ins
into
adc
push
cli
dec
in
fs
outs
icebp
pushf
xchg
(bad)
out
pushf
add
or
cs
test
(bad)
push
or
not
call
popf
nop
inc
mov
sub
test
movs
adc
lods
cmps
es
xchg
movs
adc
pop
imul
jle
in
ret
inc
ror
pop
loop
fninit
cmp
xor
jecxz
ds
pop
or
scas
cmp
mov
mov
sub
jl
mov
xor
daa
fst
adc
xor
inc
mov
mov
pusha
in
push
jmp
(bad)
sbb
fs
sub
sbb
adc
and
jle
xchg
dec
push
out
stos
inc
or
mov
stos
(bad)
add
add
int3
(bad)
fldenv
inc
xchg
pinsrw
movs
push
fwait
stc
ret
sti
retf
inc
sbb
es
dec
lock
xchg
fwait
ret
dec
sti
clc
aad
dec
test
popa
fwait
pop
mov
push
push
enter
(bad)
sbb
sub
(bad)
imul
fld
dec
cmp
pop
push
xor
or
inc
in
mov
sub
xor
movs
loopne
mov
sub
arpl
and
mov
add
cmp
pop
out
pop
push
cmps
jnp
shl
dec
loop
in
pop
cwde
(bad)
jmp
sub
pop
jbe
(bad)
in
mov
jmp
xlat
or
outs
enterw
popf
xor
leave
clc
mov
or
lods
loopne
(bad)
ins
sar
pop
xchg
mov
jnp
jmp
call
test
adc
push
loopne
gs
pop
add
xchg
pop
sbb
cmps
stos
pop
mov
sub
(bad)
cmp
add
fsub
lods
xor
or
push
xchg
popf
adc
sbb
and
aad
leave
inc
xor
mov
clc
int
dec
ins
add
cmp
xchg
push
lahf
call
push
mov
xchg
xor
xor
aaa
mov
mov
fcom
push
lahf
stos
jle
daa
push
push
(bad)
data16
pop
push
pop
add
adc
sbb
add
add
sub
pushf
or
inc
sub
(bad)
mov
sbb
jecxz
outs
sub
sbb
lahf
push
scas
mov
aaa
test
adc
mov
pop
into
add
jg
pop
jg
pop
loope
inc
push
pop
push
or
sti
in
stos
sbb
mov
cmp
inc
pop
dec
cmp
inc
das
sti
pop
pop
or
cdq
cmp
xchg
(bad)
or
dec
cwde
aaa
call
mov
sbb
sti
or
xor
and
mov
add
sar
out
mov
sub
fsubr
retf
out
dec
mov
mov
cld
cmps
aaa
pop
xor
mov
in
repnz
inc
(bad)
or
sub
mov
mov
jnp
sar
sbb
in
jmp
movs
clc
gs
daa
fldcw
jbe
aas
jbe
push
sub
mov
jg
mov
pop
shl
or
jle
mov
mov
int3
mov
sar
(bad)
xchg
enter
pop
mov
push
in
mov
adc
pop
daa
xor
lock
add
pop
fild
(bad)
mov
xchg
push
daa
dec
or
push
iret
mov
inc
inc
lods
mov
jecxz
icebp
mov
push
adc
loop
inc
test
fwait
push
shl
push
fild
lahf
js
aas
jle
ins
popf
jge
in
int
and
jl
js
dec
or
push
mov
jb
cvtpi2ps
cmps
fild
loopne
pop
int3
arpl
sbb
add
pop
xor
dec
repz
movs
pop
cmp
jmp
enter
(bad)
mov
aad
sbb
vcvtss2sd
fsubrp
adc
push
jns
das
dec
add
repz
mov
retf
or
push
jno
test
mov
test
mov
jns
retf
movs
dec
mov
sub
sbb
inc
cdq
jecxz
push
out
push
dec
mov
add
push
cdq
mov
ss
pushf
aaa
inc
and
lods
dec
out
dec
add
sbb
jb
jmp
test
pmullw
lds
push
lds
scas
mov
lahf
mov
ror
aad
or
in
push
cmp
or
fsubr
jb
mov
sub
sbb
pushf
out
sbb
sub
(bad)
dec
sbb
repnz
cld
jge
test
mov
call
and
inc
ror
data16
cmp
push
mov
mov
inc
out
in
jno
xchg
or
(bad)
mov
(bad)
xor
pop
ret
push
das
pop
sahf
cmp
jmp
pop
ret
xlat
inc
cwde
call
sar
push
jecxz
mov
mov
and
call
push
jo
pop
adc
or
adc
push
sbb
push
int
push
adc
pop
jne
xor
xor
mov
sbb
xchg
fmul
mov
div
int3
sbb
das
cs
fsubr
or
je
and
ror
xchg
mov
ja
repnz
xor
add
(bad)
push
jae
movs
repz
lahf
and
test
xor
iret
imul
es
jg
push
imul
cwde
into
jmp
pop
add
mov
lock
and
in
std
lods
jb
je
pop
in
in
xor
jmp
outs
bound
imul
xchg
jno
ins
mov
jb
or
shl
cwde
sbb
xchg
or
fcom
mov
aam
dec
rol
in
mov
test
xlat
jo
jg
(bad)
movs
or
out
arpl
cmp
xor
fcmove
and
out
xor
xchg
test
outs
popf
add
imul
inc
int
ret
retf
cmp
pusha
add
pusha
pusha
mov
fwait
(bad)
icebp
inc
inc
jbe
enter
jbe
jp
popa
inc
ficomp
xor
cmc
cwde
add
push
jmp
es
cmps
scas
sub
aaa
movs
popa
popf
mov
shl
rol
cmc
mov
mov
sub
cld
jg
mov
les
fisttp
aas
adc
jg
jmp
xchg
call
adc
jns
push
test
outs
mov
jge
pop
xlat
bound
cmp
xchg
aas
int3
sar
clc
ret
push
sub
nop
sub
xor
fisub
(bad)
sti
sbb
push
xor
int
xor
adc
mov
push
cwde
lahf
mov
xor
jb
(bad)
push
inc
outs
shl
sar
inc
inc
mov
cmp
daa
lods
cmps
jbe
cmp
cmps
std
jecxz
push
cli
cmp
(bad)
push
sub
outs
call
sar
dec
push
cmp
or
inc
test
scas
adc
inc
mov
cmp
dec
addr16
or
iret
repnz
and
imul
lds
jo
mov
mov
(bad)
(bad)
je
xlat
dec
sbb
(bad)
fcomp
dec
cmp
scas
sbb
lds
div
mov
lahf
ss
mov
cwde
in
outs
enter
xchg
fcom
aas
es
js
out
enter
cmp
jp
out
dec
push
and
add
test
mov
imul
inc
dec
jo
jns
ins
cmp
int
ins
cmp
(bad)
jae
jne
push
into
outs
pop
stc
test
and
(bad)
or
int
push
repz
sub
mov
or
add
jle
push
push
jmp
sub
sbb
sti
stos
cmovnp
sar
cli
push
(bad)
(bad)
ja
mov
icebp
aad
mov
xchg
rcr
idiv
push
mov
inc
push
je
inc
xchg
inc
rcr
hlt
fimul
mov
add
inc
cli
xor
out
cmp
pop
adc
int
test
mov
or
int3
mov
(bad)
jae
jb
scas
adc
jo
movs
fild
pop
xchg
popa
ins
shl
popf
ins
cdq
mov
ja
pop
fsub
outs
int3
aas
cmp
(bad)
adc
out
rol
xchg
adc
jbe
test
push
or
in
out
push
and
xchg
sbb
adc
dec
xchg
add
fbstp
and
loopne
and
jmp
(bad)
retf
ja
pushf
mov
pop
and
pushf
imul
iret
push
push
xchg
cmps
ret
xor
gs
dec
hlt
pop
mov
retf
pop
jbe
and
enter
mov
inc
jo
aaa
sub
(bad)
fisubr
adc
cmc
cmp
loope
nop
iret
ss
mov
cmp
sahf
imul
and
push
lods
test
popa
push
mul
adc
rcr
out
mov
mov
inc
mov
sahf
sub
out
jbe
aaa
fucomi
(bad)
adc
cmp
xchg
mov
xchg
dec
jne
pop
jo
mov
xor
dec
mov
xchg
sub
idiv
ret
data16
loopne
loop
lods
(bad)
adc
in
aaa
inc
test
and
xor
in
out
loope
sub
rol
ror
popf
bound
mov
pop
pop
popa
push
add
xchg
jns
cmp
sbb
into
ret
test
rcr
adc
sbb
sbb
loopne
xchg
inc
jmp
sub
mov
imul
pop
ret
and
jg
xchg
push
cdq
inc
pop
add
pop
std
int3
xor
cdq
mov
jge
stos
jp
sub
push
int3
fs
test
test
mul
or
push
or
int3
std
cwde
loopne
cmp
fidivr
add
icebp
iret
aad
pusha
sub
fdiv
dec
out
test
mov
test
pop
nop
and
jmp
push
dec
cli
pop
call
lahf
fist
xchg
mov
dec
inc
in
jno
inc
ins
mov
pop
push
dec
out
jmp
out
das
nop
sbb
pusha
jns
xchg
icebp
sub
cli
jne
movs
nop
add
fsubr
shl
je
and
loop
or
fwait
call
and
adc
fidiv
xchg
aam
push
stc
mov
push
je
add
imul
jle
lea
(bad)
adc
jle
enter
push
(bad)
and
sbb
fisubr
das
leave
sbb
cwde
bound
(bad)
enter
and
jae
std
popf
adc
and
out
mov
in
cdq
fs
add
das
(bad)
pop
jne
sahf
sar
pop
lea
pop
dec
out
mov
adc
xlat
sub
mov
add
push
sbb
not
imul
pop
sbb
in
mov
xchg
clc
fadd
loop
daa
and
lods
ret
fcomi
adc
mov
pop
push
or
(bad)
sahf
shr
les
add
test
inc
mov
push
loop
inc
push
push
rep
scas
push
cwde
dec
fdiv
sbb
idiv
sbb
pop
aaa
out
(bad)
sub
xor
ret
mov
imul
in
push
or
inc
(bad)
xchg
outs
ja
repz
adc
jl
es
dec
adc
repz
mov
daa
fptan
imul
sbb
push
fdiv
cmp
push
pop
gs
push
xor
hlt
jmp
or
clc
mov
scas
jo
xchg
aaa
mov
dec
sar
cmp
jge
mov
sbb
cli
nop
xchg
mov
mul
in
lods
mov
out
loope
cwde
leave
mov
test
loopne
or
ret
mov
inc
pop
xchg
xchg
xor
inc
sbb
adc
sbb
xchg
push
ds
or
out
jl
ds
(bad)
loopne
adc
sub
or
xchg
inc
adc
jne
push
lods
test
gs
mov
in
and
add
adc
mov
fcom
jecxz
and
test
outs
js
mov
bound
lock
adc
xchg
mov
sbb
or
cmp
xchg
cdq
xor
mov
mov
ds
sahf
sub
fidiv
imul
mov
retf
fld
add
adc
addr16
mov
sbb
scas
jecxz
sahf
jle
sbb
icebp
jge
mov
icebp
inc
xor
sbb
(bad)
push
xchg
imul
pop
jge
inc
mov
sbb
pop
inc
lods
ins
aaa
mov
aas
cmp
inc
mov
fdiv
pop
dec
movs
pop
rcl
fidiv
jne
cdq
adc
shl
in
and
jg
(bad)
xchg
jno
arpl
test
xor
out
dec
dec
mov
gs
out
fwait
add
push
lds
enter
(bad)
out
rol
sbb
out
jae
das
addr16
hlt
add
icebp
jo
clc
fnstsw
cmp
pop
pop
xor
xchg
inc
mov
mov
and
retf
retf
push
cmp
xor
add
fidivr
cli
and
addr16
test
push
dec
lods
fst
retf
dec
sar
push
push
mov
and
popf
xchg
sub
loopne
aaa
mov
or
lahf
xchg
xor
push
popf
push
daa
fistp
lods
xchg
loopne
pop
cli
push
sbb
mov
shl
sti
(bad)
and
pop
jno
mov
jl
pop
jecxz
aaa
js
jl
hlt
pop
out
mov
jle
xchg
inc
mov
int3
cs
adc
and
jp
push
ins
xor
pop
add
dec
ror
inc
call
or
shr
inc
and
pusha
pop
cmps
xor
(bad)
mov
mov
repz
mov
inc
arpl
outs
loopne
push
popa
cmps
inc
scas
aad
jo
adc
xchg
mov
scas
les
jmp
dec
mov
mov
outs
pop
stos
cs
cmp
adc
dec
mov
dec
hlt
shr
ds
cmp
les
jbe
mov
cs
cmp
cmp
inc
pop
mov
icebp
dec
mov
fcomp
loope
xor
or
pop
inc
sbb
mov
div
and
jne
jbe
retf
mov
dec
out
sub
or
sub
xor
mov
mov
adc
mov
push
jp
mov
test
in
arpl
ret
int
mov
(bad)
adc
jecxz
sbb
out
jmp
sub
aas
in
gs
ror
pushf
xor
mov
es
call
mov
dec
sub
or
cmps
lods
aaa
sbb
outs
adc
inc
pop
xchg
jmp
rcpps
xor
leave
push
push
xchg
mov
ret
idiv
stc
xlat
js
aam
test
inc
jnp
mov
(bad)
out
add
dec
int
retf
mov
out
push
loope
dec
mov
fincstp
cmp
or
mov
fistp
mov
push
std
(bad)
adc
dec
arpl
pop
xor
mov
(bad)
aas
xlat
pop
or
sahf
cmps
stos
inc
sar
push
(bad)
imul
ret
dec
dec
movs
data16
fisubr
sbb
push
inc
xlat
rol
dec
adc
inc
mov
int
mov
and
lea
fisttp
mov
fstp
pop
imul
adc
xchg
pop
jnp
jb
retf
out
mov
rcr
pop
adc
gs
add
mov
scas
mov
mov
mov
(bad)
(bad)
adc
fimul
mov
fiadd
dec
inc
push
pop
js
jmp
popf
jbe
jecxz
idiv
test
push
xchg
dec
gs
in
aam
aad
push
pop
dec
and
jae
ja
retf
sahf
mov
inc
jb
adc
pop
pop
sar
dec
daa
adc
push
push
cmp
sbb
cmps
clc
add
add
jns
pusha
and
or
jmp
pop
repz
jne
jle
push
sub
jle
repz
mov
xor
add
sub
ret
leave
sub
xchg
pop
addr16
in
xor
fwait
mov
ror
lock
push
dec
iret
mov
pop
adc
add
inc
mov
(bad)
in
es
std
xchg
push
add
dec
outs
vpunpckhdq
mov
in
xor
adc
add
push
or
push
(bad)
fadd
add
out
mov
scas
xchg
inc
daa
jnp
rep
sub
or
stc
popf
add
pop
adc
pop
mov
pop
xchg
dec
pop
in
pop
jno
lods
inc
icebp
ds
sub
jle
(bad)
push
ds
or
imul
jne
pop
clc
adc
movs
xor
mov
push
fdivrp
movs
push
xor
cmps
xchg
out
ds
xlat
adc
dec
icebp
out
jmp
mov
push
pop
xchg
cmp
dec
arpl
dec
fbld
das
std
loope
push
pop
jbe
sti
call
sti
cmp
push
test
mov
mov
movs
push
imul
mov
pop
fldenv
jmp
cmp
push
test
push
and
(bad)
(bad)
mov
jecxz
je
inc
lds
popa
movs
cdq
imul
mov
imul
rcr
pop
hlt
mov
mov
cmps
in
mov
das
push
sub
fwait
xor
xchg
or
push
shl
das
test
scas
add
jne
pop
lods
inc
movs
xor
xchg
xor
and
test
jnp
sbb
sub
retf
inc
mov
xabort
push
sbb
popf
(bad)
dec
jnp
jle
push
xor
and
(bad)
cld
or
inc
mov
sub
icebp
inc
sub
dec
push
sbb
popa
adc
popa
lahf
mov
or
lahf
into
or
inc
pop
add
loope
arpl
nop
je
ins
movs
and
mov
add
in
shl
dec
imul
lahf
and
out
xchg
cmps
pop
and
movs
mov
adc
xor
inc
in
(bad)
mov
cmp
jl
or
pop
dec
repnz
jle
adc
lea
jbe
lods
mov
shl
and
add
(bad)
stc
ret
les
test
test
sbb
ret
mov
xor
xor
shl
out
sub
outs
stos
xchg
jmp
fidivr
repnz
sub
push
and
sub
scas
ror
rcr
mov
jg
xor
ins
loope
fs
add
cmp
dec
dec
or
(bad)
cs
callw
test
out
mov
loopne
fs
aam
es
mov
add
cmp
je
mov
pop
push
mov
leave
cmp
xchg
push
mov
stos
push
xor
cmp
mov
into
inc
aaa
fidivr
mov
mov
mov
lds
sahf
retf
scas
sahf
jl
jmp
sbb
popf
stc
scas
stc
push
cmp
add
ret
cmp
cmp
aaa
and
add
out
fisttp
xor
in
call
jecxz
repnz
mov
pop
push
out
into
push
(bad)
jp
and
cwde
cmp
or
cmp
push
adc
cmp
xlat
mov
sar
int
enter
lods
fs
pop
sbb
adc
sub
adc
jne
and
cdq
gs
mov
inc
(bad)
fcomp
xchg
sub
push
mov
rcr
in
mov
pop
movs
test
je
jo
scas
aaa
(bad)
mov
movs
dec
inc
push
aad
cmps
mov
pushf
in
mov
sbb
outs
sar
retf
sbb
inc
bswap
js
outs
cmps
xchg
hlt
call
xor
cmp
push
dec
shr
aam
adc
jg
xchg
repnz
fld
js
shufps
add
jb
mov
or
or
shl
adc
popa
retf
test
sub
inc
or
mov
mov
icebp
sbb
lahf
push
mov
dec
mov
es
aas
add
mov
in
movs
pop
das
xchg
mov
ins
call
pop
mov
xchg
xor
mov
mov
push
adc
pop
aaa
les
jno
scas
mov
jno
lea
sub
stos
pop
mov
xor
jno
adc
cmp
xor
out
cmp
sbb
mov
mov
mov
pop
outs
daa
or
mov
pop
or
cli
imul
sahf
in
out
call
jmp
rol
or
adc
mov
cli
stc
imul
int3
das
test
xchg
xchg
cwde
cmp
loope
or
push
cmp
cmc
or
lods
jbe
dec
sar
inc
fistp
mul
jo
adc
lods
cdq
jmp
mov
add
jp
bound
xchg
out
xor
imul
rol
add
mov
xchg
dec
ja
clc
sub
sub
sub
cmp
scas
sbb
movs
or
sti
(bad)
fxam
idiv
test
xchg
pop
push
xor
xor
nop
imul
ret
xlat
mov
mov
loopne
or
call
imul
int
xor
and
aad
ror
mov
imul
push
add
(bad)
loop
and
aad
and
fdiv
aas
sar
inc
pop
int3
cs
das
movs
pop
cmps
int3
sub
push
gs
mov
cmp
ds
or
vsubss
fsub
test
mov
(bad)
sbb
or
arpl
sahf
pop
sub
stos
pop
fstp
add
dec
fisub
scas
xchg
rcl
push
cld
and
sub
jg
movs
and
jnp
sbb
aam
push
aad
loopne
adc
inc
(bad)
repnz
repz
adc
mov
lods
test
xor
add
out
inc
mov
stos
jmp
jbe
jne
push
mov
test
or
push
adc
shl
mov
(bad)
dec
mov
lahf
cmc
jns
cli
shr
gs
and
out
xchg
aad
fsub
cdq
loopne
jmp
adc
mov
pop
js
(bad)
cld
sub
push
xchg
inc
pop
shl
push
js
std
in
inc
out
packssdw
push
inc
add
xchg
mov
in
sub
or
push
bound
es
xchg
xor
and
cmp
push
cmp
ret
out
xor
popf
js
push
dec
push
xor
xchg
cmp
call
aam
sub
cmps
test
cmps
cmp
or
or
xor
ds
(bad)
xchg
out
xor
hlt
in
pushf
fsubrp
cmps
mov
jecxz
push
mov
rcr
int3
xchg
out
cmp
or
jbe
mov
sub
add
lods
and
mov
(bad)
clc
sbb
and
pop
xor
(bad)
imul
pushf
adc
pop
push
pop
jb
adc
pusha
cli
push
ja
mov
push
cdq
cmp
imul
push
test
jge
or
mov
dec
sub
mov
push
xor
loope
pop
xlat
xchg
add
xor
jle
in
in
aas
stos
call
pop
std
jbe
int3
xor
mov
and
or
shl
sti
add
js
lods
pop
test
add
leave
push
xor
div
or
fdiv
jae
call
or
pop
enter
pushf
xchg
push
fsub
xor
out
popa
mov
cli
mov
fiadd
dec
in
sbb
add
popf
jns
aad
sub
mov
movs
in
pop
stc
and
outs
xor
add
(bad)
in
pop
movs
clc
popf
and
or
sbb
movs
mov
cdq
shl
(bad)
sbb
inc
in
sub
fstp
es
jg
adc
scas
mul
mov
dec
xor
outs
test
dec
cmps
mov
ds
dec
mov
pop
push
daa
jo
not
or
retf
cs
imul
mov
mov
add
mov
add
xchg
movs
jp
add
vmwrite
push
jbe
clc
push
lock
inc
daa
adc
call
xlat
repnz
pop
cmova
out
aas
inc
call
inc
pop
xchg
bound
cmp
jmp
mov
idiv
mov
hlt
test
and
imul
or
dec
add
mov
or
cmp
push
jmp
aam
inc
out
mov
pop
sub
icebp
and
xchg
xchg
dec
arpl
xchg
aaa
retf
retf
loope
pop
mov
test
jecxz
and
nop
or
aad
jmp
jns
popa
or
push
and
imul
ror
jl
iret
mov
call
or
sub
in
cmc
jle
adc
leave
mov
and
dec
push
neg
loopne
loopne
mov
jmp
inc
jmp
leave
mov
leave
adc
mov
hlt
out
jg
std
stc
out
pop
fwait
(bad)
jp
push
call
mov
je
arpl
lock
xor
enter
test
sbb
add
cmp
cmp
daa
test
pop
scas
sub
stc
addr16
pop
dec
ja
addr16
cmovne
pop
lds
dec
fild
mov
pop
lea
aam
adc
pusha
cmp
lods
js
ss
imul
shr
dec
cmp
and
inc
and
cmp
xchg
mov
fisttp
inc
fs
mov
sar
pusha
sbb
test
in
arpl
es
loopne
repnz
mov
les
push
daa
jno
movs
add
xchg
mov
mov
xchg
loopne
ds
xchg
jl
idiv
pop
(bad)
cli
fwait
stos
add
cs
dec
jl
adc
ins
(bad)
ss
xchg
add
inc
jmp
loope
push
sub
jmp
mov
neg
dec
adc
xor
or
lea
mov
lds
vaddpd
xor
mov
fimul
nop
fsubp
push
xchg
sbb
inc
out
and
pop
or
jns
jne
pop
hlt
cwd
lods
cli
bound
add
jmp
xor
test
out
and
pop
dec
cld
les
out
mov
and
pop
les
mov
aad
cmc
push
clc
adc
dec
jno
dec
(bad)
inc
out
sub
in
jae
or
inc
fild
pop
cmps
xor
pushf
iret
lods
xchg
out
and
xchg
jnp
rcr
xor
push
cmp
ret
or
cmps
push
into
sahf
mov
or
stos
dec
lock
add
scas
es
daa
and
sub
jo
mov
dec
scas
adc
mov
cmp
in
in
scas
shr
or
out
pop
cmp
loope
mov
mov
add
mov
adc
stos
dec
cmp
dec
repnz
mov
lahf
lods
test
push
cld
mov
cmps
out
sar
inc
ret
pop
and
dec
(bad)
adc
ins
rol
pop
test
je
cmp
cmp
mov
es
xchg
stos
mov
add
repz
lds
call
in
and
test
aad
int3
pop
and
sbb
ins
xor
xor
sbb
fwait
cmps
xchg
mov
fidivr
xor
pop
clc
sbb
sbb
es
(bad)
dec
cmc
dec
test
or
je
mov
rcl
dec
jp
pop
movs
fidiv
xchg
or
ins
aam
inc
das
and
scas
sub
iret
sub
jl
lahf
fist
push
das
popf
or
mov
and
ins
scas
jge
pop
sbb
cmp
hlt
mov
pop
and
inc
clc
sbb
daa
pop
jae
fwait
xchg
imul
sbb
mov
cld
jbe
retf
into
scas
sbb
movs
jno
cmp
sub
lahf
sub
in
and
sub
fbld
xchg
xchg
mov
add
xor
xchg
test
pop
repnz
test
mov
mov
push
retf
xor
ss
out
lds
pop
mov
fidiv
push
push
fwait
push
shl
imul
aam
leave
mov
or
add
cld
lock
jnp
cwde
inc
aas
push
xchg
sbb
jnp
scas
aad
aad
cmp
or
inc
in
jecxz
loope
cmps
mov
imul
stos
mov
inc
and
pop
popa
shl
push
das
mov
push
xor
(bad)
dec
push
stos
push
push
call
push
xor
cmps
in
add
dec
pusha
stos
inc
xchg
in
in
jmp
fidiv
xchg
nop
adc
in
rcr
mov
mov
fwait
shl
sbb
cwde
inc
pop
sbb
hlt
or
movs
or
push
sub
mov
out
sbb
sub
xor
int
cmp
cmp
std
fsubr
cmp
xchg
mov
cld
jmp
xor
push
cmp
xchg
jae
test
icebp
sbb
repnz
add
dec
inc
out
pop
into
pushf
xor
fisub
sbb
in
imul
ret
sbb
sub
and
rcl
cli
in
stos
cmp
add
mov
inc
mov
mov
imul
sbb
cld
push
jge
daa
jg
jb
cmp
out
xchg
pop
xor
sar
xchg
pop
mov
xchg
sub
mov
cmp
adc
mov
inc
dec
loopne
mov
int3
add
neg
out
add
(bad)
fdivr
ss
push
jg
and
push
dec
(bad)
(bad)
data16
loop
sub
mov
push
jno
adc
adc
xlat
sub
pop
retf
ins
mov
sub
clc
push
test
mov
xor
int
retf
faddp
and
hlt
bswap
mov
clc
or
push
inc
xchg
pop
push
inc
pushf
xchg
mov
mov
xchg
inc
outs
sub
cmp
nop
arpl
mov
inc
mov
cwde
dec
ror
mov
rcr
xchg
mov
cmp
push
lahf
cmp
cs
xor
pop
out
(bad)
and
pop
(bad)
ficomp
shl
out
jns
and
loope
pop
fadd
mov
je
mov
jne
mov
cmp
cmp
dec
sti
mov
(bad)
ds
fisub
loope
mov
mov
popf
and
(bad)
jnp
mov
into
mov
(bad)
jo
mov
sbb
adc
daa
adc
adc
fld
add
mov
lods
add
jmp
sbb
imul
sub
not
repnz
jo
push
(bad)
xchg
push
push
xchg
mov
xchg
xchg
push
jmp
and
hlt
mov
add
sbb
or
gs
xchg
and
test
outs
imul
jecxz
adc
pop
dec
test
and
(bad)
aam
inc
or
mov
push
dec
test
(bad)
xchg
adc
dec
or
jne
movs
mov
outs
nop
adc
rcl
in
jp
scas
adc
xor
xor
sub
fnsetpm(287
js
inc
in
cmc
int3
ja
jge
pop
(bad)
jmp
out
jecxz
and
fisub
add
mov
ins
call
push
adc
dec
in
daa
mov
out
aad
lods
mov
jecxz
loop
outs
dec
cmp
ja
cmp
in
sbb
enter
or
dec
pop
in
test
ror
icebp
jo
pop
cmps
jp
or
xor
ss
pop
mov
inc
div
arpl
addr16
(bad)
mov
dec
leave
enter
sbb
fsub
sub
mov
sub
or
pop
cmp
nop
jo
sub
int3
imul
adc
movs
adc
jmp
sbb
out
(bad)
add
push
dec
and
cmp
retf
scas
cli
cld
push
mov
xchg
sub
call
mov
mov
mov
dec
shr
jno
lds
sub
add
or
iret
test
dec
push
cmp
inc
fwait
std
xchg
push
iret
std
push
xchg
test
int3
int3
arpl
xchg
sbb
mov
popf
sti
fwait
pop
jno
push
es
addr16
xchg
test
sbb
cmps
or
or
sub
mov
mov
xor
call
mov
push
sub
jmp
sar
pop
sar
pop
fiadd
dec
or
aam
fistp
in
(bad)
iret
xchg
jp
xor
das
pop
das
shr
adc
add
sub
dec
adc
push
dec
mov
cmps
inc
mov
rcl
shl
(bad)
xor
loop
es
push
sbb
fs
push
push
and
dec
mov
cs
shl
sub
cmp
pop
call
mov
mov
lds
pop
inc
test
out
idiv
cmp
or
dec
mov
sub
xor
inc
ret
inc
or
mov
mov
mov
loopne
test
(bad)
sbb
scas
ja
les
popf
mov
push
neg
sbb
sar
sti
mov
ja
jg
xchg
push
ja
pop
sub
mov
push
ret
inc
and
jnp
mov
add
xchg
adc
or
sbb
iret
add
test
cmp
add
dec
xchg
or
xchg
nop
cwde
xchg
std
repz
pop
add
and
imul
or
out
adc
sbb
or
aaa
nop
xor
xchg
dec
mov
inc
adc
dec
mov
loop
pop
push
fcmovnbe
push
dec
pop
jnp
lods
loope
xchg
jne
sub
xor
scas
addr16
retf
and
ja
adc
popf
scas
aaa
jo
sbb
lds
jne
push
jecxz
dec
inc
or
or
mov
lods
push
mov
aam
call
mov
bnd
dec
jp
xchg
(bad)
call
lea
imul
stos
lea
iret
cs
push
mov
inc
push
push
out
sbb
sub
mov
jp
dec
add
adc
dec
ins
arpl
jmp
sbb
daa
lods
jmp
or
cld
inc
div
mov
xlat
push
ficom
xchg
mov
lds
es
repnz
push
jne
cwde
add
mov
int
sahf
mov
push
pop
into
or
das
pop
cld
dec
aas
neg
mov
inc
cmp
fdivr
mov
sub
lods
js
sbb
fcom
rcr
mov
call
adc
hlt
test
xchg
jmp
aas
jmp
sub
sbb
sub
iret
jo
fcmovu
out
dec
mov
ja
into
sar
pop
outs
int
shl
jle
and
push
fldlg2
test
push
and
xor
sub
(bad)
test
shl
(bad)
xchg
repnz
aad
xchg
retf
outs
retf
lods
cld
ret
sub
xchg
mov
imul
pop
fiadd
cmp
mov
popa
call
scas
push
popf
jg
push
aad
pop
push
in
sbb
mov
arpl
enter
cmp
into
ins
loop
fld
sub
mov
push
(bad)
bound
dec
cdq
ja
sbb
dec
xor
fidiv
cmp
leave
les
fisttp
cmp
add
imul
ficomp
add
pop
enter
jne
dec
or
pop
es
push
cmp
repnz
xchg
dec
mov
add
enter
jae
retf
out
pop
cdq
repz
xchg
inc
mov
stc
clc
cmps
in
repz
cmp
push
retf
dec
fstp
push
lock
lds
lods
xchg
mov
or
adc
pushf
(bad)
mov
dec
ret
outs
xchg
and
and
cmps
xor
fldcw
icebp
ins
and
(bad)
outs
jg
lahf
dec
mov
call
inc
xor
jmp
or
cmp
inc
fdiv
aad
outs
int
outs
arpl
add
cmp
shr
call
int3
test
(bad)
add
in
pop
pop
(bad)
mov
fisubr
idiv
ins
mov
adc
(bad)
popf
xlat
jle
aad
loop
cdq
cmps
fnstsw
in
mov
add
lahf
(bad)
out
das
shl
add
pushf
out
icebp
or
lahf
daa
ins
out
cmps
mov
push
sub
in
or
adc
push
ds
mov
mov
jb
aas
sbb
shl
(bad)
mov
outs
ins
pop
dec
xchg
and
(bad)
mov
sbb
mov
sub
sbb
fld
icebp
aad
sahf
fs
sub
cmp
leave
push
dec
or
xchg
call
xchg
dec
adc
sub
(bad)
data16
(bad)
cmp
fst
les
icebp
cmp
(bad)
sub
xchg
popa
out
add
cwde
frstor
push
dec
xor
add
push
push
enter
push
out
xchg
cmp
jne
(bad)
call
fwait
bound
jo
jl
push
repnz
test
xchg
mov
or
xchg
mov
aam
jne
jnp
xchg
mov
mov
fistp
lock
sti
fwait
pop
pop
icebp
push
jmp
das
or
dec
xor
ja
adc
xchg
sub
(bad)
cwde
inc
shl
mov
jp
in
cmp
or
xor
fwait
ret
pop
push
int3
les
push
rcr
mov
cmc
sbb
jbe
fld
mov
cmps
mov
push
das
imul
das
daa
(bad)
jo
pop
and
xor
mov
mov
dec
dec
xchg
mov
xchg
mov
or
mov
fmul
lods
shl
mov
mov
test
retf
fwait
in
fidiv
inc
lea
add
aam
aad
test
xchg
mov
rcl
jo
push
out
jb
dec
nop
jle
jbe
adc
fxch
cmp
push
scas
imul
adc
(bad)
xchg
add
sbb
inc
adc
mov
int3
loopne
mov
(bad)
ss
pop
icebp
adc
xchg
sub
xrelease
or
in
add
adc
iret
jl
sbb
and
fnstsw
call
add
(bad)
call
mov
mov
div
mov
jae
(bad)
mov
pop
cwde
xor
add
push
cmp
jbe
pop
and
jmp
inc
pop
add
clc
aas
mov
add
in
call
sbb
pop
dec
add
nop
mov
(bad)
push
sbb
fbld
fdiv
scas
into
sub
add
fcomip
mov
and
mov
and
mov
and
loope
add
mov
out
dec
cld
mov
and
adc
fcomi
in
retf
xchg
mov
cmp
add
int
sub
xlat
xchg
sar
jmp
mov
adc
xchg
test
mov
adc
xor
and
gs
bound
pause
and
cmc
loop
push
or
inc
das
fisub
xchg
push
pop
and
sbb
xchg
popf
pop
jg
inc
div
ds
daa
mov
aam
jmp
sbb
inc
arpl
add
sti
out
xchg
repz
inc
add
scas
popw
int
into
cli
into
mov
std
mov
inc
out
bextr
lods
retf
sti
ret
(bad)
call
imul
push
je
push
xchg
push
pop
push
inc
sar
mov
test
in
jmp
adc
retf
sbb
in
mov
(bad)
mov
jns
sub
mov
add
loopne
push
mov
repz
(bad)
jo
jo
jno
test
push
mov
inc
into
shr
mov
scas
dec
dec
jae
fwait
inc
movs
inc
xor
mov
add
xor
cmp
mov
adc
test
add
loop
mov
je
movs
xor
adc
dec
push
inc
jecxz
jmp
pop
push
fmul
mov
jmp
loop
mov
lea
scas
mov
pop
in
sub
fsubr
mov
push
inc
movs
jecxz
std
adc
sub
adc
push
rcr
sbb
or
xor
xchg
es
mov
mov
or
retf
mov
call
mov
gs
push
xor
push
popf
outs
and
(bad)
out
jae
push
jp
mov
mov
aas
mov
mov
outs
iret
(bad)
sbb
add
xchg
ins
jp
pop
lods
push
jnp
movs
jns
and
sti
jb
jmp
cwde
pop
ins
(bad)
je
push
and
jge
mov
mov
pop
in
dec
add
sti
jnp
clc
inc
cli
fild
pop
jns
sbb
push
loope
sub
test
ret
cmp
nop
out
and
shr
sar
cmp
retf
arpl
in
data16
aaa
cs
pop
(bad)
lock
mov
mov
inc
shr
out
fwait
rcl
inc
in
fisttp
dec
jno
(bad)
lods
xor
in
push
sahf
or
sbb
rcr
push
aad
pop
sub
cmc
arpl
pop
pop
addr16
and
ja
in
repz
ins
push
cmp
dec
sub
cwde
data16
cs
sar
adc
nop
stc
xchg
imul
push
jb
adc
idiv
fidiv
add
das
hlt
push
mov
scas
cmp
and
push
mov
adc
(bad)
loopne
pop
test
loop
hlt
xchg
push
push
inc
fcomp
push
fnstsw
in
outs
jo
dec
dec
outs
push
mov
iret
lds
xor
mov
rcr
and
inc
dec
in
repnz
jae
repnz
add
movs
inc
and
pop
cwde
call
jns
and
cmp
jmp
push
lahf
mov
push
movs
aam
fnstcw
push
dec
jg
fdiv
xchg
imul
jns
aam
mov
enter
push
cmp
outs
pop
lods
mov
loope
xlat
dec
nop
retf
xchg
push
mov
mov
movs
xchg
test
(bad)
xor
mov
sub
or
mov
adc
leave
cwde
out
jl
jge
cmps
imul
test
repz
xchg
xchg
enter
pop
push
outs
pop
mov
xchg
jb
inc
sbb
fs
pop
sar
mov
mov
push
xchg
xchg
outs
fst
scas
fst
add
cmp
mov
mov
and
mov
(bad)
sub
pop
xchg
clc
mov
and
pop
and
mov
outs
adc
int3
or
or
inc
xor
les
push
pop
pop
cmp
cld
loopne
ror
adc
cmp
data16
or
in
sub
and
cli
pusha
stc
jbe
das
mov
aad
xor
and
fimul
pop
rol
in
mov
xor
pop
and
xor
idiv
jmp
push
lahf
clc
dec
mov
push
(bad)
shr
popa
pop
enter
test
sbb
adc
(bad)
xor
xor
pop
jo
xchg
icebp
imul
push
lods
std
jmp
mov
push
bound
push
ret
data16
pop
and
or
rcr
out
dec
mov
adc
xor
mov
jle
test
fild
retf
frstor
mov
adc
(bad)
mov
cmc
and
adc
xchg
inc
pop
mov
idiv
push
cmp
pop
bound
jmp
ja
(bad)
mov
not
in
cmp
daa
aad
jno
aad
pop
mov
outs
sub
and
or
repz
cs
inc
neg
xchg
sbb
data16
ins
adc
pop
nop
iret
popa
jns
and
ins
ds
call
or
std
lahf
jb
mov
test
js
aam
fisub
cdq
mov
mov
daa
shl
mov
je
fwait
push
xor
sub
mov
push
pop
sbb
popf
out
sbb
dec
jge
add
arpl
add
adc
(bad)
push
pusha
pusha
and
das
xlat
out
fistp
int
ret
cwde
push
inc
and
das
dec
sub
inc
enter
sbb
jne
pop
push
jne
loope
mov
push
mov
xchg
cmp
cmc
sbb
test
out
dec
push
ins
pop
mov
fcomp
sti
jecxz
retf
cmp
pop
retf
jg
ds
stc
sbb
inc
adc
mov
jg
dec
mov
sar
mov
or
inc
cdq
nop
xchg
jmp
inc
add
inc
dec
push
jno
add
cmp
xor
cmc
mov
jbe
mov
bswap
pop
retf
xchg
sub
push
stos
sbb
inc
icebp
aad
jg
sbb
add
in
mov
dec
shr
cs
test
(bad)
adc
int3
add
mov
loope
arpl
jg
scas
scas
(bad)
(bad)
jle
xchg
sub
mov
addr16
lds
fwait
stos
nop
nop
and
mov
cmp
loope
sti
xchg
inc
or
ret
pusha
and
(bad)
(bad)
aaa
call
mov
iret
ins
xchg
or
xor
cmp
call
lea
pop
adc
cs
sbb
sbb
mov
aad
test
sub
xchg
inc
retf
sahf
xchg
std
jecxz
gs
add
push
push
sbb
or
mov
aad
pushf
cmp
test
sbb
pop
mov
jmp
rcl
lock
mov
int3
mov
mov
mov
lds
fs
stos
daa
in
inc
(bad)
mov
or
jo
aam
sbb
jns
xchg
mov
or
fsubr
xor
je
push
dec
cvtps2pd
and
je
repnz
jge
sub
inc
dec
dec
repnz
jne
fimul
jle
pop
jp
lahf
(bad)
sub
pop
cs
jmp
mov
std
inc
(bad)
clc
test
mov
outs
add
push
loopne
xor
adc
test
imul
in
pop
in
popf
mov
push
ins
pusha
loopne
sub
enter
je
in
dec
out
inc
cmp
cmp
jns
sbb
test
outs
movs
cmp
icebp
popa
cmp
data16
shr
sub
ds
(bad)
mov
repz
add
xchg
lock
cld
mov
cmps
popa
mov
movsx
and
xchg
fwait
mov
sbb
std
xor
aam
scas
aad
retf
mov
jno
mov
cmp
out
imul
add
hlt
inc
xchg
call
jb
ret
cmps
sti
or
in
scas
icebp
daa
lods
popf
lods
xchg
ds
pop
dec
jne
xchg
pop
and
pop
cli
lock
jae
das
or
sub
push
mov
mov
dec
push
fidiv
sbb
int3
adc
jmp
or
add
adc
push
outs
ins
ds
(bad)
xor
lods
dec
jnp
repz
out
jmp
cmp
push
push
aas
jp
mov
shl
xchg
inc
sbb
or
(bad)
mov
adc
xchg
push
jmp
jl
inc
fs
push
pop
fs
sbb
adc
lds
call
adc
dec
add
push
(bad)
std
jle
out
jge
ja
sbb
cli
jmp
nop
xor
shl
les
test
cmp
dec
xor
push
sar
jo
pop
sub
push
cmc
retf
fadd
ss
cdq
nop
retf
loopne
sub
scas
dec
adc
xor
outs
pop
cmp
ins
jmp
icebp
cmc
sbb
xor
test
je
int3
jg
test
lock
out
push
nop
xor
addr16
pop
and
movs
shl
cmp
arpl
mov
xchg
stos
popa
pop
inc
popa
je
mov
les
(bad)
cld
pop
pushf
test
inc
fsubr
jb
in
and
add
jno
loop
ror
iret
mov
ss
stos
mov
jl
daa
push
call
xchg
sahf
test
int
(bad)
clc
call
inc
and
das
pop
ja
push
adc
test
lods
cli
mov
jb
mov
cli
sub
mov
dec
ja
lea
mov
inc
jno
jmp
jmp
lods
in
fucomip
push
repz
mov
in
test
mov
(bad)
pop
push
inc
sbb
pop
clc
popa
mov
push
xchg
adc
test
or
jbe
movs
retf
in
fwait
jae
dec
imul
cmp
loopne
sub
cmp
je
iret
pop
inc
lods
les
xor
inc
mov
shl
inc
mov
pop
div
jnp
xor
cmp
and
push
ins
adc
in
cs
scas
out
(bad)
mov
ja
dec
shl
mov
push
xchg
adc
sbb
mov
ss
pop
aas
mov
push
adc
mov
pop
inc
dec
mov
sti
les
or
mov
rol
ins
inc
pop
ret
add
nop
xchg
stc
movs
inc
pop
sbb
lahf
dec
retf
scas
lock
(bad)
sub
sbb
cmp
loop
sbb
and
sub
push
pop
xor
mov
lods
popa
sahf
stos
pushf
ins
repz
aam
sbb
cmp
cmc
ins
popf
sub
shl
rcr
adc
jmp
leave
lock
add
inc
enter
aad
cmc
out
aaa
fidiv
pop
(bad)
lock
sbb
xchg
jmp
jns
(bad)
push
ins
ss
adc
movs
jl
popf
push
and
mov
jo
jp
jecxz
in
xchg
jl
mov
inc
xor
(bad)
fisttp
dec
jae
sar
mov
pop
jo
and
fucomip
jae
mov
loopne
push
test
js
or
les
mov
(bad)
push
mov
xor
scas
jp
cmp
push
mov
xchg
jb
cli
push
inc
stos
in
shr
(bad)
ds
cmp
(bad)
inc
dec
and
push
mov
sbb
bound
cmp
pop
imul
inc
stc
xor
dec
mov
jno
pop
fist
push
dec
push
xor
xchg
pop
or
sahf
icebp
adc
call
rcl
lahf
and
jo
(bad)
inc
mov
outs
fldcw
and
cmp
pminub
cmps
cwde
add
push
shr
fcmove
pop
ins
inc
sbb
lea
outs
pop
mov
sbb
cmp
test
leave
sbb
adc
arpl
and
movs
jnp
loope
cmp
movs
mov
or
movs
in
outs
std
push
and
inc
cmp
aaa
es
test
shl
lldt
popa
sub
mov
mov
ss
retf
outs
pusha
icebp
(bad)
repnz
stos
mov
pop
js
mov
pop
addr16
out
test
loope
into
jne
cli
adc
(bad)
or
imul
sbb
gs
dec
xor
cdq
dec
push
stos
movs
add
das
hlt
add
sbb
mov
push
jle
out
xor
jae
lds
mov
jns
ss
fmulp
and
call
js
dec
push
cmp
popf
mov
push
push
ins
or
mov
pop
pop
leave
jb
xor
and
int3
sbb
int
ss
mov
jne
push
mov
out
sub
cmp
cli
and
cli
adc
mov
fisttp
scas
fs
in
cmps
inc
inc
mov
mov
int3
mov
cld
ds
mov
sbb
sub
dec
pop
or
bound
mov
hlt
push
sub
dec
lea
aam
and
cmp
pop
adc
lods
mov
icebp
jmp
stos
push
loope
test
sti
(bad)
sahf
(bad)
push
cmps
add
mov
sti
sti
(bad)
xor
and
arpl
sbb
mov
mov
pusha
cmp
push
shr
ins
xchg
ret
ret
call
stc
imul
aaa
test
cmps
lock
imul
mov
ret
aad
cld
mov
cmp
sub
xor
repnz
test
push
cld
sbb
ret
cmp
inc
sti
inc
leave
mov
mov
push
shr
xchg
shl
mov
fild
ret
mov
push
out
pushf
dec
pusha
stc
xchg
icebp
add
xchg
ret
adc
leave
pop
cmp
cmp
mov
jbe
dec
push
movs
mov
jbe
fidiv
js
add
fdivr
push
pop
add
cwde
mov
in
xor
push
mov
pop
inc
jnp
test
das
lock
dec
sbb
inc
add
enter
push
rcr
inc
outs
out
pop
push
fdivr
fsub
mov
mov
je
mov
xchg
and
(bad)
pop
out
aad
sbb
mov
sub
(bad)
retf
xor
daa
jg
sti
imul
js
icebp
push
jge
fimul
mov
repz
ds
xchg
pusha
(bad)
jae
and
push
cmp
or
popa
cmp
addr16
movs
pushf
pop
cmp
inc
mov
mov
push
arpl
aam
in
and
jg
rol
aaa
and
jecxz
xor
mov
ss
retf
pop
pop
cmp
daa
test
jmp
push
into
test
retf
pop
adc
push
aaa
dec
adc
jmp
push
fild
gs
pusha
fdivr
ror
jnp
cdq
data16
pop
lods
adc
xchg
fs
aas
shl
rcr
es
mov
lahf
mov
outs
push
retf
ror
push
cld
(bad)
adc
mov
pop
lea
scas
mov
cdq
push
jns
mov
mov
xchg
jno
shl
clc
in
(bad)
and
mov
jle
or
add
jno
mov
out
test
cmc
and
loop
adc
push
pop
dec
mov
sub
call
out
lods
pop
xor
mov
add
pop
cmps
dec
in
(bad)
fistp
dec
(bad)
mov
or
fisttp
cmps
cwde
aas
fxch
fidivr
aad
mov
add
imul
push
cmps
loopne
pop
mov
aaa
sbb
test
in
push
inc
cmps
dec
cwde
adc
xlat
popf
ins
add
leave
ffree
push
jne
add
sub
cmp
shr
loope
out
mov
popf
push
adc
add
mov
mov
stos
stos
ret
jnp
and
jmp
inc
enter
cmp
hlt
pop
jp
aas
dec
loopne
push
into
scas
xor
inc
inc
pop
shl
xor
jecxz
inc
mov
or
in
pop
jno
push
inc
imul
mov
mov
dec
(bad)
jo
xchg
adc
fcomp
mov
inc
xchg
mov
mov
and
or
in
or
inc
nop
mov
cmc
in
pop
sub
frstor
lea
xchg
adc
mov
stc
psubusw
ret
js
inc
repz
inc
or
leave
lods
fidiv
loop
cmc
daa
push
jle
dec
cmp
and
call
sub
inc
jo
int3
pop
cld
pop
gs
or
inc
cmp
and
add
out
jb
mov
(bad)
jb
imul
stos
stos
data16
ss
inc
jo
daa
leave
loope
ins
rcr
aas
test
loopne
mov
stos
mov
call
inc
pusha
nop
cmp
inc
inc
fdivr
dec
lods
sti
out
add
mov
cmp
adc
cmp
imul
sub
cmp
push
inc
into
shl
stos
or
jmp
test
fist
stos
xchg
movs
fcmovbe
pop
call
outs
dec
int3
fdiv
call
(bad)
aas
outs
aas
push
inc
sub
and
add
shl
dec
maskmovq
idiv
and
out
lods
and
push
loop
cmp
push
sbb
ins
rcr
dec
iret
repnz
mov
sbb
mulps
mov
fwait
test
xchg
iret
fisub
shl
inc
stc
jle
loope
aas
mov
inc
sub
mov
adc
or
dec
push
mov
lds
daa
or
mov
mov
mov
push
dec
mov
xchg
fistp
call
push
or
aaa
les
(bad)
into
pusha
mov
inc
mov
adc
push
push
push
aas
adc
inc
jmp
xchg
xor
pop
ins
cmp
and
or
rol
adc
scas
ret
jge
je
pop
inc
or
cmp
add
int3
inc
push
ja
movs
and
add
loop
mov
repnz
xor
and
ror
mov
or
mov
xchg
ds
scas
push
push
mov
xor
sbb
pusha
sar
xor
sub
enter
and
lds
std
and
adc
adc
scas
inc
mov
retf
dec
(bad)
mov
xchg
xchg
addr16
stos
arpl
test
cli
out
mov
xchg
mov
pop
push
mov
mov
adc
(bad)
xchg
cmp
retf
mov
ins
adc
ret
ret
ror
je
addr16
cmc
scas
and
mov
xor
sub
syscall
mov
icebp
pop
pop
xchg
xchg
or
scas
je
dec
sub
rcl
sbb
jb
(bad)
dec
movs
and
icebp
sahf
lea
aaa
mov
ins
movs
ja
jno
pop
mov
adc
imul
jae
xchg
dec
jb
push
in
fbstp
cmp
into
das
movs
cmp
mov
test
imul
mov
push
mov
or
in
fsubrp
je
scas
jmp
pop
mov
popf
push
(bad)
dec
jnp
movs
cli
bound
inc
mov
inc
add
int3
fnstsw
and
mov
pop
cmc
xor
pop
cmc
daa
inc
je
sub
idiv
fsub
dec
or
ds
rol
pop
xchg
jne
mov
fs
nop
sbb
stos
xor
sbb
inc
push
fwait
mov
xor
jl
imul
or
std
push
add
push
in
jno
inc
and
adc
push
arpl
pop
and
push
xchg
cmp
mov
shl
loop
inc
mov
imul
pop
pusha
add
sbb
js
xlat
add
outs
fldz
rcr
push
pop
mov
int3
mov
dec
mov
imul
pop
push
xchg
sbb
jp
xor
pop
ffreep
popf
sbb
repnz
cli
test
repnz
stos
pop
in
sbb
sbb
mov
sbb
pushf
inc
push
xchg
xchg
mov
(bad)
xor
mov
hlt
push
inc
in
cmc
xchg
call
jp
aad
mov
jne
sbb
push
mov
ret
test
sbb
lock
je
inc
daa
jl
push
rol
xor
or
pop
adc
stc
inc
iret
scas
mov
sub
test
ja
scas
dec
xchg
adc
sbb
mov
(bad)
jg
sbb
inc
pop
sbb
push
or
shl
ins
ficom
mov
(bad)
stc
push
sbb
shl
adc
cld
sbb
cmp
out
or
mov
push
mov
and
das
jae
repnz
mov
ret
shl
jmp
jbe
lods
pop
aas
jo
imul
inc
dec
xor
xchg
repz
adc
mov
and
dec
ret
push
jmp
iret
jb
jmp
sub
fidivr
outs
adc
mov
cmp
or
add
call
pslld
adc
jb
es
outs
fsub
out
cli
mov
jnp
jle
daa
mov
dec
pop
ror
cmc
jmp
in
out
sti
shl
lods
sahf
mov
lea
ins
popa
ds
icebp
retf
in
push
dec
mov
add
js
out
cmp
ins
add
adc
out
das
jo
jmp
call
inc
mov
(bad)
ror
hlt
jmp
sub
cmp
aas
jmp
push
(bad)
rcl
push
dec
mov
and
pusha
js
mov
inc
scas
pushf
sahf
lods
das
xchg
fs
gs
cmp
and
sbb
mov
xchg
std
fisttp
jmp
sub
mov
popa
out
mov
push
or
dec
cmps
jle
jmp
cmps
inc
(bad)
xor
dec
and
das
cmp
pop
push
fdivr
test
test
aam
sbb
mov
or
jbe
dec
sti
or
push
(bad)
sti
inc
mov
data16
imul
or
les
push
movs
add
inc
mov
push
outs
mov
dec
mov
push
adc
mov
pop
popf
leave
cmp
jg
je
pop
dec
call
inc
repz
jle
push
inc
sbb
sar
inc
js
(bad)
imul
fdiv
fcomp
cdq
jmp
jne
pop
bound
push
xor
fsub
pop
cmps
dec
or
jge
int3
nop
jno
adc
add
cs
cmp
mov
dec
push
sub
scas
popf
sbb
jg
adc
mov
ret
cmp
add
arpl
add
add
and
jb
pop
push
repnz
leave
bound
jmp
jg
inc
sub
out
das
add
jb
xchg
dec
data16
cmp
stos
outs
stos
div
mov
sbb
das
inc
and
ja
out
sbb
dec
rcl
out
xor
stc
mov
aam
and
pop
sbb
das
test
dec
into
pop
xor
lea
add
push
je
jo
mov
pop
inc
arpl
inc
out
cdq
sti
mov
jl
pop
outs
stos
cmps
test
dec
jmp
or
into
pop
ds
or
push
xor
test
xchg
dec
adc
leave
mov
mov
jne
sbb
stos
mov
loopne
mov
(bad)
push
pop
push
adc
adc
push
add
test
xchg
jg
xchg
and
fdivrp
aam
int
ret
mov
fs
jnp
icebp
xor
add
mov
pushf
mov
in
in
bound
scas
add
mov
jno
cmps
pop
daa
dec
repz
lods
xchg
pop
xchg
xor
push
popa
xor
xchg
mov
repnz
and
jno
mov
mov
dec
push
mov
jno
mov
(bad)
bound
jno
sub
nop
mov
push
shl
stos
or
pushaw
inc
jmp
cs
imul
stos
ss
sbb
jl
sbb
jge
xlat
push
adc
push
imul
or
mov
jle
out
jae
jbe
mov
aad
sbb
mov
mov
mov
loop
leave
dec
call
xor
das
dec
retf
push
push
fwait
xchg
jno
fadd
bt
jl
pop
pop
mov
hlt
sub
int
mov
lahf
xchg
dec
nop
dec
dec
cmps
push
test
pusha
add
cdq
pop
int3
ret
scas
scas
mov
adc
nop
fbstp
inc
ret
push
jnp
cdq
mov
cmp
sub
xlat
aas
and
aas
jge
adc
das
rol
or
mov
clc
mov
inc
jecxz
in
jle
mov
ds
jmp
mov
ins
dec
pusha
jmp
cmp
sbb
aas
aaa
mov
mov
cmp
rol
mov
clc
data16
xor
jle
fld
mov
inc
sub
cli
stc
in
xchg
out
pop
pop
pop
je
xchg
inc
aaa
inc
pop
cmp
sub
out
cli
adc
jne
push
mov
xor
es
es
ja
enter
ins
in
mov
xlat
test
test
jg
ja
inc
mov
mov
cmp
test
call
mov
lods
leave
cmc
retf
mov
xchg
aam
pop
pop
push
(bad)
in
push
fistp
ins
mov
scas
push
pop
push
cli
or
pusha
inc
adc
dec
fcom
fistp
rcr
inc
add
cmp
xor
jmp
dec
push
into
adc
add
push
inc
push
retf
fwait
ds
cmp
out
push
mov
jae
pusha
jp
pop
mov
mov
ficom
xor
cmp
pushf
in
sub
adc
jmp
cdq
pop
xchg
dec
outs
in
or
int
das
jno
jne
cmp
push
and
repnz
mov
cmp
mov
into
mov
out
bound
sbb
mov
aas
fiadd
mov
jo
pop
sub
push
test
push
xchg
aam
push
jb
repnz
jne
in
(bad)
aad
lds
sti
test
xor
daa
cmp
pushf
(bad)
push
or
xchg
mov
test
mov
outs
mov
rcl
and
std
pop
add
into
jle
fisub
inc
test
mov
sub
mov
sub
scas
push
mov
dec
pop
leave
cdq
pop
cs
icebp
jo
sub
lods
push
mov
(bad)
ds
mov
and
shr
leave
ins
sti
scas
add
mov
adc
gs
popa
outs
ret
sahf
inc
pop
push
aaa
(bad)
cmp
push
cwde
jns
daa
pop
ss
jmp
mov
sbb
inc
lods
cmp
jp
loop
cmp
(bad)
call
xchg
pop
adc
cmps
or
cmp
fwait
cmps
(bad)
imul
scas
sub
into
fwait
cmp
mov
sub
fcmovnbe
mov
jns
mov
les
lea
add
(bad)
ins
call
(bad)
ror
jb
adc
dec
xchg
jp
lods
adc
jne
icebp
add
out
ret
iret
scas
je
ror
cdq
xor
loop
(bad)
push
mov
cmp
pop
fnstcw
dec
jp
jae
pop
xchg
test
ja
rol
mov
(bad)
mov
push
adc
and
push
lahf
adc
out
js
pop
dec
jl
cmp
pusha
stc
(bad)
in
fisubr
ins
or
mov
fnstenv
sti
fadd
jmp
push
fidivr
mov
cmp
ds
adc
pushf
push
scas
xchg
shr
fisubr
out
jecxz
mov
out
mov
xchg
mov
(bad)
out
jp
pusha
mov
call
fs
scas
dec
push
sbb
call
sub
in
mov
xor
xchg
pop
lods
xor
sbb
ins
inc
xchg
xchg
jno
sub
les
xor
add
jmp
and
pop
sbb
jg
test
and
xchg
mov
xchg
(bad)
xchg
test
adc
dec
add
test
inc
faddp
and
sahf
call
mov
or
mov
push
mov
pop
out
or
int3
jle
cmp
inc
les
xchg
ins
(bad)
xor
pop
jae
add
imul
loope
sbb
jns
jecxz
mov
or
sbb
xchg
ja
pop
jns
push
jno
jmp
test
ret
jns
in
(bad)
fldenv
pop
(bad)
dec
pop
cmps
cld
sub
fst
ss
mov
jle
dec
in
xchg
xor
aad
mov
sbb
shl
inc
push
lahf
out
mov
or
clc
cmc
or
cmps
call
jno
jge
push
jbe
push
pop
adc
iret
jno
push
loopne
xlat
out
xor
(bad)
jle
loop
(bad)
setle
cmp
imul
pop
inc
mov
bound
pop
rcl
jmp
jnp
xor
add
dec
pop
call
(bad)
pop
mov
ss
test
or
mul
mov
jo
retf
bnd
into
(bad)
xchg
pop
leave
add
adc
adc
(bad)
cmp
mov
ret
ret
cmp
xchg
pop
inc
lods
jae
adc
(bad)
xor
push
jae
xchg
sbb
xor
sbb
loopne
adc
pop
js
stos
push
sub
ins
xor
sbb
xor
xchg
push
pop
popf
pusha
das
add
out
pop
(bad)
jo
mov
loopne
xchg
outs
ror
pop
mov
sahf
jl
cli
mov
cdq
xchg
cdq
cmp
sub
mov
add
repnz
jg
imul
or
mov
fild
das
fdivr
add
sub
push
in
pop
sar
shl
and
iret
nop
mov
dec
xchg
adc
xor
inc
cmps
shr
mov
mov
fnsave
leave
push
mov
mov
mov
mov
movs
out
pop
and
outs
fstp
pop
movs
dec
pushf
aam
xchg
std
dec
mov
inc
mov
cld
mov
and
arpl
push
or
iret
dec
add
fs
nop
(bad)
ret
mov
mov
retf
mov
loopne
xor
xchg
adc
js
sub
adc
mov
inc
xchg
(bad)
cwde
fwait
add
imul
jle
xor
cmp
or
lods
ins
sbb
mov
sbb
outs
or
sar
ror
mov
add
aam
shl
cs
imul
and
xchg
xchg
aad
sbb
out
outs
xlat
loopne
pop
mov
ds
jae
pop
jmp
mov
pop
pop
pop
retf
mov
lea
cmp
outs
adc
data16
out
retf
xchg
push
lods
sar
shl
inc
sub
jmp
cmp
stos
push
push
cmps
dec
pop
aas
cmp
std
fst
add
fadd
xor
xor
inc
cs
js
(bad)
and
dec
iret
mov
or
or
test
scas
jne
stos
pop
inc
lds
pop
popa
daa
xlat
xor
mov
pop
(bad)
jns
shr
mov
ret
xchg
mov
dec
xchg
idiv
(bad)
adc
stc
jne
inc
cmc
push
jp
scas
xor
xchg
mov
sbb
fisub
cdq
icebp
mov
shl
push
push
adc
fs
ret
in
imul
jne
loope
cmp
pusha
dec
mov
sti
outs
jno
mul
push
xchg
adc
sub
out
push
enter
jo
out
pop
ret
loop
(bad)
and
cld
out
cli
inc
sbb
sub
dec
out
pop
out
add
add
mov
mov
es
or
cmp
jne
jb
leave
cmc
fwait
cmp
lods
xor
jl
xor
fwait
arpl
movs
inc
sbb
icebp
loope
scas
into
inc
mov
jp
aad
es
and
ret
pop
aam
xchg
adc
ss
cmp
int
pop
jmp
lods
sti
frstpm(287
das
jp
lds
(bad)
enter
(bad)
imul
div
or
dec
jo
fisub
push
and
mov
sti
fs
fldenv
add
std
xchg
idiv
ds
ficomp
mov
sub
adc
call
push
jmp
pop
jmp
push
mov
adc
movs
test
xor
aaa
jg
pop
sar
pushf
adc
mov
adc
outs
movs
in
cmps
sub
mov
dec
shl
push
cdq
outs
imul
xchg
aad
cwde
(bad)
fdivp
icebp
int
mov
sbb
or
fwait
mov
ss
cmp
cmp
mov
pop
sub
out
mov
arpl
in
out
and
lea
push
inc
test
pushf
xchg
dec
cmp
adc
movs
fadd
test
xor
or
call
xor
inc
fdivr
in
or
mov
lods
add
cwde
sub
lods
fsubp
das
sbb
movs
popa
dec
xchg
adc
mov
inc
nop
in
aad
push
cmp
aas
sbb
adc
(bad)
pop
and
scas
sbb
lods
push
xor
test
fmul
jl
mov
repnz
dec
daa
mov
(bad)
loopne
add
pop
pop
or
jmp
mov
pop
sbb
movs
push
inc
or
sbb
nop
xor
hlt
cs
jbe
jle
or
les
sar
mov
xchg
pop
ins
std
add
fsub
or
adc
mov
inc
mov
or
xor
sub
or
xlat
test
lods
pop
icebp
rcr
movs
push
icebp
xchg
cs
(bad)
(bad)
dec
clc
enter
iret
out
push
pop
and
mov
fsub
and
test
clc
pop
stos
mov
adc
mov
xchg
jnp
pop
adc
mov
dec
shr
sbb
jo
push
jge
les
addr16
push
movs
test
or
out
jp
jnp
movs
les
pop
(bad)
shl
jp
dec
xor
xor
mov
mov
ror
imul
ret
xchg
jnp
sub
or
out
(bad)
add
and
scas
push
test
cmp
fwait
test
inc
sub
sahf
mov
nop
cmc
mov
bound
pop
adc
shl
stos
sbb
jb
(bad)
xlat
mov
jge
retf
stos
jmp
dec
cli
repz
shl
fstp
mov
add
(bad)
hlt
pop
pop
push
es
lods
cmp
sbb
mov
adc
xchg
and
lahf
inc
mul
push
inc
cdq
pop
mov
adc
fs
lds
es
stos
sbb
in
ficomp
inc
xchg
(bad)
sahf
(bad)
popa
ret
mov
nop
aam
jne
xchg
int3
aas
pop
repz
bound
into
jbe
mov
test
mov
out
jmp
mov
cmp
mov
cmp
loopne
(bad)
xor
call
adc
stos
jno
imul
dec
lods
mov
stos
push
sub
add
or
xor
cwde
push
pop
pop
or
rcr
(bad)
push
dec
mov
call
das
jle
pop
mov
xor
jns
cmps
fcmovnbe
enter
in
dec
call
push
mov
mov
xchg
jl
jmp
adc
sub
mov
push
lods
add
fdiv
mov
out
(bad)
in
sub
retf
push
mov
sub
mov
sub
fldenv
push
cmp
packsswb
pop
jbe
int
pop
mov
bound
dec
(bad)
mov
add
or
stos
hlt
inc
fimul
adc
mov
es
xchg
inc
push
mov
lods
leave
sbb
push
inc
not
out
xchg
jae
not
dec
lahf
pop
jns
jle
push
retf
add
fmul
sets
es
bound
enter
pop
mulps
vshufps
add
xor
cmps
repnz
push
sbb
cmp
(bad)
push
lods
fs
lods
shl
lock
push
adc
mov
mov
test
test
sub
dec
sbb
xchg
xor
adc
dec
outs
push
inc
scas
std
add
adc
pushf
pop
push
pop
fisubr
jecxz
push
sbb
lds
inc
movs
dec
(bad)
sbb
mov
fcom
and
inc
popa
cmp
jmp
dec
fidivr
ss
adc
pop
inc
data16
dec
mov
xor
iret
sbb
ins
jl
adc
in
pop
pop
cmp
mov
clc
add
pop
xor
jb
in
pop
push
sbb
push
scas
adc
push
popa
mov
inc
retf
fwait
jle
test
ins
fnstenv
loopne
push
std
mov
(bad)
fisubr
sbb
adc
mov
cmp
jge
push
(bad)
pushf
sub
popa
retf
shl
lds
or
xor
push
pusha
stc
xor
pop
nop
push
adc
jno
mov
(bad)
adc
les
fucomp
mov
addr16
mov
xchg
mov
or
mov
fcomp
imul
and
cmps
ret
pop
jnp
shr
popa
mov
sti
inc
sub
push
je
mov
dec
add
int3
imul
dec
out
add
pop
aad
shl
mov
and
mov
xchg
pop
mov
sbb
and
jge
dec
and
jge
xchg
jne
cs
mov
mov
xchg
pop
cmp
and
dec
pop
push
in
push
mov
clc
std
add
inc
movs
jbe
xor
jnp
ins
sbb
data16
frstor
lods
sub
rcl
shl
jmp
cmps
bound
ins
sbb
cmps
add
push
aad
clc
and
inc
mov
jp
sbb
sub
inc
fwait
imul
add
call
mov
arpl
push
inc
sub
or
into
scas
mov
les
push
fbld
or
push
inc
jmp
pop
push
imul
hlt
add
inc
sbb
(bad)
pop
ror
push
jbe
pop
adc
jnp
or
jl
nop
int
outs
cmc
pop
sbb
clc
(bad)
mov
sub
push
mov
arpl
mov
xor
push
mul
xchg
shr
out
ror
lods
jb
jecxz
sub
popf
test
out
int
dec
inc
jmp
adc
xchg
pop
xor
ror
and
clc
leave
aaa
shl
shl
cmp
or
push
gs
inc
dec
cld
add
jno
mov
clc
or
push
inc
imul
icebp
inc
scas
sub
xchg
jge
xchg
in
mov
je
sar
cld
icebp
xchg
rol
movs
(bad)
test
out
je
sub
mov
mov
ins
adc
(bad)
cmp
movs
sub
inc
xchg
aas
stc
in
cmp
jp
push
(bad)
movs
lock
adc
jo
jl
ja
sub
in
pop
int
or
cmp
pushf
pop
pop
mov
repnz
sahf
push
and
sbb
shl
and
in
shl
loop
lods
ja
mov
jg
or
xor
mov
push
ja
test
aaa
jecxz
jl
mov
mov
dec
xchg
jno
fmul
into
mov
call
js
outs
mov
jo
push
xor
mov
sbb
scas
inc
call
push
imul
mov
sbb
jecxz
das
xchg
shl
movs
stos
pop
inc
fisttp
push
popa
jo
sbb
and
int3
pop
cmc
mov
enter
lods
add
lds
inc
mov
lock
movs
in
sub
mov
xor
sbb
and
scas
jnp
mov
dec
lods
dec
pop
mov
jae
in
dec
push
sbb
dec
test
lahf
js
inc
inc
ror
inc
or
rcl
stc
pushf
out
xor
idiv
mov
in
and
add
sti
push
sar
aaa
jmp
dec
or
xchg
mov
aad
dec
iret
sar
iret
xchg
jge
js
sbb
jmp
jmp
jae
cdq
mov
jl
fisubr
cs
mov
stos
jnp
cmp
ret
mov
and
int
mov
ret
std
xor
xchg
xor
push
aad
rcl
jne
fisttp
mov
xchg
mov
mov
sbb
in
jl
xor
dec
lahf
sbb
and
pop
in
loopne
jb
popf
adc
test
mov
shr
(bad)
dec
push
push
fxch
dec
mov
xchg
mov
sahf
mov
mov
sub
loopne
out
das
add
bound
or
inc
push
xchg
popf
lock
sbb
dec
out
into
shl
inc
push
jl
call
mov
inc
cmp
adc
dec
adc
rol
rcr
mov
or
mov
cdq
inc
retf
leave
lea
xor
or
mov
sub
(bad)
pop
in
imul
retf
cmp
ins
movs
mov
sub
xchg
mov
mov
or
xchg
dec
mov
outs
pop
jae
jecxz
mov
loopne
inc
xchg
xchg
fist
add
jge
jb
ds
(bad)
repnz
fisubr
xchg
adc
push
mov
and
(bad)
mov
retf
addr16
in
pop
jg
frstor
sub
push
test
ret
outs
mov
xor
loope
movs
outs
cmp
or
xor
mov
sbb
shl
pop
daa
jne
xor
xchg
xchg
xor
(bad)
imul
xor
push
movs
mov
cmp
cmps
ret
sahf
inc
dec
jle
mov
jp
(bad)
fs
jae
xor
in
int3
inc
out
outs
lds
popf
inc
sub
cwde
(bad)
mov
das
mov
mov
imul
inc
dec
or
loop
jne
(bad)
mov
xor
repz
mov
or
movs
inc
xchg
push
pop
lea
movs
push
dec
xchg
pop
inc
jb
sub
das
xchg
mov
fwait
mov
cmp
mov
jecxz
jb
pop
(bad)
sbb
mov
cmc
inc
xor
push
and
shl
mov
movs
retf
add
pop
scas
pop
jg
jns
jg
push
scas
sub
(bad)
push
cwde
retf
pop
xor
jmp
retf
inc
(bad)
fbld
lock
fistp
popf
pop
jecxz
jo
out
(bad)
loopne
(bad)
add
pop
sbb
inc
jmp
out
pop
sub
dec
shl
mov
cmp
bound
mov
jmp
mov
and
ficomp
je
jge
mov
add
mov
sbb
xchg
and
mov
movs
mov
push
mov
aam
mov
sbb
hlt
addr16
out
loope
pop
ja
or
pop
mov
cmps
scas
dec
repz
lds
inc
retf
dec
push
sbb
inc
sub
out
(bad)
cmp
shl
(bad)
stos
sub
enter
movs
nop
or
add
or
stos
out
int3
fmul
fld
inc
jno
outs
xchg
or
mov
fcom
pop
push
add
cmp
bound
aad
mov
or
or
jb
or
cli
(bad)
nop
rcl
mov
shl
icebp
inc
(bad)
push
sbb
pop
and
sbb
xchg
sahf
mov
cmp
add
in
fstp
in
mov
mov
mov
xchg
ss
mov
xchg
mov
push
jnp
mov
repz
adc
cmp
mov
pop
push
leave
aaa
adc
test
fdiv
jmp
pushf
dec
mov
fwait
mov
outs
adc
push
dec
cmp
mov
xor
ins
jbe
xor
scas
xchg
xchg
outs
es
adc
fidiv
xlat
repz
mov
cmp
arpl
push
jne
and
jmp
cwde
inc
fucomp
repnz
scas
in
inc
outs
lahf
inc
retf
jle
xor
ss
mov
xchg
mov
push
and
aad
pushf
mov
mov
sbb
bt
lea
test
int
mov
data16
repz
rcr
mov
loop
rcl
sub
push
cmc
inc
mov
icebp
sub
lock
fst
cmps
pop
stos
adc
jnp
div
push
loop
jmp
or
cmc
inc
sub
xor
or
ja
mov
es
leave
arpl
sahf
push
mov
xor
cmp
pop
scas
mov
in
data16
mov
dec
nop
ret
xchg
mov
ins
or
xlat
or
movs
fbld
xor
sar
and
lods
xchg
pop
(bad)
jnp
xor
jp
sbb
or
or
movs
iret
sar
inc
pop
mov
mov
es
cmps
aam
adc
ja
repnz
xchg
imul
rep
jnp
imul
sbb
in
xchg
jbe
or
fwait
std
push
fsubrp
xchg
jp
mov
das
mov
push
pop
inc
int3
out
or
add
inc
pop
cmp
jns
out
push
jo
retf
or
rcl
xchg
dec
mov
lods
or
call
adc
movs
push
sti
scas
cmp
pop
clc
pop
dec
dec
cdq
cmp
mov
pop
mov
retf
jo
cli
lea
movs
fstp
and
lods
rcr
clc
xchg
loope
test
mov
(bad)
xchg
adc
mov
pop
fsub
enter
cmp
inc
dec
scas
sbb
sti
rcr
imul
xchg
xchg
sub
jle
xchg
mov
fisub
sbb
sub
add
retf
loopne
jae
stc
mov
pop
les
sub
stc
inc
and
push
pop
test
push
jb
adc
scas
jp
mov
les
cwde
bnd
popa
mov
mov
mov
push
cmp
sbb
adc
mov
xor
cdq
ins
and
jae
les
sbb
in
or
and
pop
adc
hlt
or
loope
fmul
xor
pop
std
mov
push
cs
mov
mov
or
sub
push
shr
arpl
xchg
dec
cmps
xor
lea
jno
dec
push
xchg
xchg
mov
or
jno
sahf
stos
jle
aad
mov
xlat
inc
or
clc
dec
shl
pop
sti
out
repz
xor
fiadd
stc
in
xchg
shr
mul
or
aam
jne
adc
dec
push
adc
ror
icebp
mov
call
ins
inc
cmp
push
add
jo
sub
retf
add
sub
hlt
cwde
xor
mov
cmp
(bad)
inc
sub
and
icebp
mov
aaa
stos
arpl
and
call
pusha
mov
push
adc
cmp
sub
das
or
(bad)
aad
xor
in
(bad)
leave
std
ret
dec
in
mov
push
aad
dec
inc
(bad)
sbb
mov
xor
arpl
retf
cmp
dec
push
enter
mov
sub
js
mov
mov
lods
mov
das
jne
sbb
pop
cmp
xchg
pop
call
pop
pop
mov
(bad)
dec
or
pop
add
cmps
jno
mov
jle
push
dec
dec
jl
ds
pop
jnp
sub
mov
cmps
rol
jle
xchg
xchg
pop
or
xlat
or
fld
or
push
add
fstp
dec
hlt
cmp
cli
test
sub
pop
clc
push
sub
(bad)
jl
push
(bad)
or
fist
add
mov
pop
lock
loop
enter
and
outs
adc
psubsw
mov
and
dec
inc
mov
adc
out
retf
iret
shr
pop
jne
dec
fist
(bad)
jl
imul
out
xchg
dec
cdq
inc
inc
ins
out
test
outs
and
shl
sar
inc
repnz
mov
push
xchg
(bad)
(bad)
push
sub
xor
pushf
dec
adc
in
mov
call
fwait
rcl
jecxz
lahf
mov
push
inc
ret
rol
add
push
(bad)
or
jl
push
cmp
cmp
cs
sub
and
or
mov
mov
fstp
int
rcr
ja
lock
xor
jne
cmps
mov
pop
test
mov
imul
cli
xchg
mov
nop
jb
adc
stos
and
dec
push
movs
jae
adc
push
xor
and
xchg
fsub
shl
add
mov
mov
addr16
xchg
xor
mov
dec
pop
pop
in
mov
or
ficom
clc
jecxz
mov
popf
inc
je
stc
iret
outs
fstp
ja
inc
and
jmp
sub
mov
add
mov
cmps
inc
jne
mov
cmps
jecxz
add
adc
bound
retf
push
sub
fcomi
or
dec
push
mov
or
shl
in
cmps
retf
xchg
xchg
popa
aaa
outs
xchg
stos
jne
js
lods
jne
sbb
(bad)
iret
les
ins
movs
mov
nop
repz
(bad)
push
movs
fild
xor
mov
sahf
inc
mov
sti
cmp
std
movs
cld
and
retf
inc
jae
sbb
pop
les
es
ins
jmp
fstp
fst
and
das
push
adc
jmp
fs
popf
push
js
fild
sub
test
(bad)
push
ret
push
arpl
lahf
popf
out
jle
neg
div
inc
mov
push
in
xlat
(bad)
retf
mov
inc
jecxz
scas
xchg
adc
popf
(bad)
mov
mov
pop
ja
ret
mov
and
or
out
xchg
loope
test
jo
push
lods
cli
jg
pop
inc
lea
call
cmp
in
repz
push
or
xchg
cmp
adc
push
mov
pusha
pop
dec
stos
mov
fcomp
add
lods
xchg
dec
lds
xor
jg
sbb
cld
and
xchg
push
fwait
dec
mov
vscalefpd
ret
push
out
das
fild
push
jmp
inc
in
jb
xchg
cwde
add
shl
mov
or
fisttp
sbb
mov
in
call
pop
lea
sub
sbb
xchg
sub
mov
popf
shl
les
xchg
(bad)
push
pushf
stos
les
ret
push
data16
push
imul
arpl
or
push
add
mov
pop
xchg
jns
sub
and
xor
sub
test
dec
mov
pop
sbb
ds
mov
aad
inc
ja
js
shl
outs
imul
mov
push
mov
icebp
addr16
jns
or
add
dec
mov
into
fcmovnb
push
cmps
xor
mov
mov
adc
jge
jae
jge
jnp
inc
ds
cdq
mov
out
shl
sbb
jle
into
out
das
jle
xchg
sbb
out
leave
int
xchg
sahf
adc
leave
xchg
mov
jle
sub
xor
je
fwait
imul
push
test
sbb
jecxz
dec
dec
cmp
daa
pop
bound
scas
dec
sub
sbb
fistp
movs
loopne
add
pop
dec
sub
mov
in
adc
pop
icebp
push
addr16
enter
add
sub
cmps
and
or
(bad)
cmp
int3
out
scas
fs
xor
jbe
fisttp
xor
scas
lods
inc
xchg
cs
mov
dec
mov
adc
retf
jmp
jp
nop
fcomp
shl
adc
shr
fwait
push
xor
pop
sbb
jp
repz
mov
mov
jmp
mov
push
add
test
daa
test
and
(bad)
jl
jo
jae
sti
add
add
push
and
sbb
cmp
dec
imul
jo
scas
scas
sub
and
test
fdivr
mov
fmulp
cld
mov
daa
movs
retf
add
add
pop
popf
(bad)
rcr
bound
sub
or
sub
test
loop
or
fwait
push
fwait
or
xor
push
lds
xchg
pop
aam
push
or
mov
out
sub
add
cmp
lahf
cwde
test
mov
movs
sbb
xchg
stc
in
retf
push
leave
sub
pop
push
retf
pop
xchg
and
iret
or
pop
mov
sub
daa
fwait
(bad)
out
je
xchg
mov
adc
push
mov
mov
cwde
icebp
stos
and
in
mov
xor
outs
xor
pusha
inc
ins
xchg
mov
pop
in
mov
cmp
mov
lock
mov
sub
stc
sbb
(bad)
jmp
pop
(bad)
in
or
das
leave
mov
xchg
dec
jbe
inc
inc
xor
sbb
dec
leave
sbb
add
cld
mov
adc
retf
add
push
jo
pop
jnp
cmc
jno
(bad)
inc
daa
push
or
or
clc
sub
aam
jae
mov
mov
cmp
jne
pop
mov
cmps
and
xor
dec
or
mov
xchg
cwde
je
rcl
fcmovb
mov
stos
and
test
xor
dec
test
jge
sar
or
mov
icebp
stos
mov
xchg
mov
gs
xor
sbb
mov
sub
mov
or
ja
mov
inc
and
pop
loope
fcom
mov
outs
jmp
daa
lahf
xlat
jl
pop
jae
ds
pusha
nop
stos
and
rcr
sbb
mov
xor
pop
enter
mov
mov
cwde
out
mov
sbb
mov
imul
or
fld
xchg
call
test
mov
(bad)
jle
cs
dec
dec
mov
xchg
sti
fidiv
push
test
sbb
add
pop
mov
mov
inc
fadd
stos
and
xlat
ret
cmc
adc
xchg
sub
jb
stc
in
or
test
mov
inc
clc
cmp
mov
xor
pop
daa
es
jg
(bad)
fld
les
or
int3
jge
xchg
jmp
jnp
cmp
jnp
sub
adc
xchg
sub
stos
mov
sti
retf
mov
mov
ins
movs
adc
gs
shr
jle
fnstsw
das
fstp
fldenv
enter
add
mov
push
jp
(bad)
mov
lods
jae
xor
inc
es
das
cmps
scas
(bad)
int
mov
sub
(bad)
jne
and
call
xchg
ror
ja
jno
(bad)
ja
test
and
cmp
retf
push
out
icebp
(bad)
int3
dec
das
pop
xor
cmp
xor
sub
mov
push
adc
lahf
(bad)
jmp
and
jae
jmp
popf
ret
movs
jmp
add
std
out
xor
xchg
int
push
popa
mov
ja
pusha
inc
int
in
xchg
jecxz
out
les
enter
sbb
mov
ja
mov
imul
lods
cmp
dec
movs
loopne
inc
es
or
leave
vpsraw
adc
retf
dec
stc
(bad)
in
imul
jg
mov
mov
outs
inc
outs
add
inc
fwait
sub
xor
mov
(bad)
mov
jge
dec
daa
push
add
ror
push
mov
xlat
in
and
or
push
push
vmwrite
cmp
shr
and
outs
call
mul
mov
outs
sbb
inc
xor
pop
xchg
and
fld
dec
je
mov
mov
sahf
add
inc
pop
bt
imul
mov
popa
jne
or
mov
je
add
xor
sub
sbb
cwde
xchg
mov
popa
fisttp
iret
nop
loopne
out
push
jo
xor
inc
ret
and
mov
shl
push
inc
cmp
leave
dec
ret
xor
out
fwait
cmp
scas
rol
popa
js
cmps
cmps
ins
xchg
push
stos
mov
imul
inc
jns
pop
or
inc
aaa
retf
cmp
mov
mov
ins
or
push
pusha
inc
jno
xchg
or
cdq
pop
jnp
ret
scas
loop
data16
dec
cmp
cmp
mov
adc
icebp
or
jno
outs
test
mov
push
add
jg
mov
cld
mov
out
in
mov
out
stos
mov
jp
push
loope
add
pop
mov
add
inc
cli
je
add
inc
add
mov
sbb
jb
rol
je
lock
test
xchg
fidiv
jbe
fmul
dec
out
movs
cmp
rol
push
ins
out
dec
push
mov
lea
and
sar
or
retf
or
push
add
or
(bad)
out
icebp
jns
scas
imul
sbb
pop
in
nop
inc
jno
mov
aad
jno
les
scas
push
cmp
or
(bad)
pop
add
retf
frstor
add
cmps
mov
jmp
daa
outs
cmp
cmp
mov
xor
int
pop
out
rol
adc
add
mov
adc
mov
shr
sbb
mov
push
retf
lea
movs
ret
and
mov
(bad)
mov
(bad)
pusha
repnz
xchg
mov
jne
mov
fbstp
aad
frstpm(287
sar
iret
lea
mov
rol
fscale
sahf
scas
les
jmp
(bad)
and
add
pop
call
dec
imul
mov
sbb
leave
outs
jnp
nop
(bad)
mov
push
or
(bad)
fld
popf
pop
jp
pop
lds
out
adc
push
mov
push
(bad)
adc
repz
test
pusha
push
mov
push
cmp
lds
test
mov
jmp
in
fst
out
push
mov
int3
push
mov
bound
(bad)
xchg
es
imul
adc
cli
mov
inc
(bad)
push
jbe
in
mov
sub
and
shr
sub
nop
mov
mov
cmp
dec
js
and
mov
scas
push
push
push
jp
das
sar
je
jno
add
cmp
sbb
arpl
ds
jno
adc
push
fdivr
imul
les
ss
mov
int
pop
sub
mov
cmps
or
mov
mov
stos
add
xor
ss
leave
fwait
mov
adc
inc
xor
mov
pop
dec
popa
jecxz
scas
dec
call
or
inc
neg
jp
cdq
cmp
xchg
clc
sub
jp
mov
arpl
out
stos
movs
dec
or
enter
add
clc
(bad)
out
xor
rcr
scas
popf
cld
shl
adc
(bad)
push
mov
iret
cwde
inc
sub
call
dec
mov
cmp
mov
dec
cmps
mov
and
rcr
inc
pusha
sar
mov
enter
inc
xor
and
repz
fdiv
lods
dec
and
aam
xchg
stos
(bad)
pop
es
sbb
ss
push
jae
pop
mov
and
adc
xor
add
jle
movs
in
mov
pop
cmp
sbb
mov
shl
(bad)
repz
add
popf
pop
jg
push
fnstcw
add
sbb
push
sub
loop
int
lock
sbb
sub
mov
inc
sti
push
add
jmp
mov
or
mov
cmp
jo
out
mov
fiadd
cmp
fimul
jle
xchg
mov
pop
cmp
push
or
or
dec
cld
jmp
add
clc
inc
or
xor
gs
jne
dec
cmp
cmps
cmp
and
dec
test
mov
xchg
movs
stos
dec
hlt
push
(bad)
cld
mov
mov
(bad)
popf
repz
addr16
mov
add
shl
daa
mov
aam
push
clc
and
mov
aas
in
test
nop
push
(bad)
jl
mov
shl
mov
pop
out
xor
rcpps
test
pop
retf
cld
dec
cld
or
cdq
cmp
inc
jne
stos
adc
dec
shl
test
pop
js
xor
cmps
jecxz
jge
jg
outs
push
xchg
outs
les
lock
cli
fmulp
push
aaa
retf
sbb
and
pop
xor
loope
(bad)
test
cmp
(bad)
cmps
push
jg
out
mov
call
mov
and
xchg
sar
xor
mov
mov
sbb
adc
test
hlt
sub
push
jns
sub
(bad)
fbld
pop
inc
jp
das
lds
sub
xchg
ds
dec
sbb
inc
lods
lods
call
add
stos
push
dec
cld
mov
call
fucomip
adc
aas
daa
pusha
out
mov
cmp
adc
or
leave
call
pop
pushf
xor
rcl
mov
mov
sub
lahf
inc
sbb
ficomp
popf
cdq
push
daa
xchg
or
adc
inc
xchg
adc
dec
and
icebp
jp
mov
ror
imul
sub
lds
std
movs
pop
repnz
loopne
adc
inc
pop
xor
pop
or
cmp
aam
les
cmp
sahf
add
mov
push
lock
pop
sbb
push
dec
xor
jae
push
ss
cmp
dec
aad
xlat
adc
xchg
inc
sub
inc
inc
rcl
xchg
xchg
stos
jge
or
sub
jle
clc
outs
push
dec
out
or
test
pop
es
ret
rol
arpl
or
or
adc
jns
daa
mov
das
push
dec
lahf
pop
lea
or
je
in
shr
cmp
push
int3
jnp
or
sbb
(bad)
(bad)
sbb
in
lods
mov
jbe
aas
daa
jecxz
mov
pop
sar
and
aaa
out
in
mov
in
enter
mov
push
ret
out
jbe
jb
dec
(bad)
js
hlt
xchg
xor
dec
cmps
jne
mov
push
jno
not
lds
inc
mov
push
add
inc
jbe
add
clc
enter
pop
js
pop
aam
leave
xchg
cmp
mov
dec
cmp
ja
mov
mov
addr16
sbb
add
mov
pusha
or
imul
ins
mov
mov
or
int3
(bad)
das
scas
std
xchg
sti
push
mov
mov
dec
dec
or
loop
mov
lods
push
cmps
std
ficom
and
test
inc
push
and
movs
mov
and
cmp
jae
adc
pop
lock
out
popf
push
cmp
popf
xchg
mov
mov
mov
add
inc
mov
mov
inc
add
popa
pusha
mov
adc
push
je
in
ret
(bad)
jp
into
or
sahf
rol
push
inc
sbb
hlt
cmp
stos
pop
fidiv
jnp
aas
cwde
sbb
or
sub
ds
jecxz
cmp
imul
or
adc
pop
sub
mov
pusha
ins
push
add
test
mov
out
push
sub
scas
in
cmp
or
fisubr
jae
mov
imul
xchg
dec
lea
outs
in
or
mov
(bad)
mov
cmp
push
iret
std
xchg
popa
fwait
add
out
cmp
xchg
xchg
(bad)
test
or
in
inc
int
imul
sbb
dec
adc
fisubr
xor
add
lahf
cmc
cmp
mov
out
push
adc
push
push
add
(bad)
cmp
add
sub
js
ss
or
test
mov
mov
or
sbb
push
jbe
popf
cdq
repnz
adc
mov
jb
in
and
imul
imul
adc
aam
push
jmp
out
cmp
mov
popf
mov
icebp
jo
jne
pop
test
into
pop
pop
xor
jmp
sbb
enter
inc
test
xchg
cs
ja
push
in
test
sbb
mov
xor
mov
jg
cmps
sar
push
mov
jo
in
cmc
mov
and
fwait
stos
ret
leave
mov
mov
sbb
inc
mov
dec
fcmovne
syscall
out
(bad)
xchg
or
retf
add
fidivr
clc
test
mov
shr
xchg
or
xor
into
dec
mov
dec
inc
test
pop
jo
mov
in
and
into
shl
sar
mov
dec
add
or
pop
fcom
cmp
jno
or
aad
mov
in
shr
aas
cmp
ret
into
cmp
or
not
mov
xor
xchg
mov
mov
cld
sub
inc
aaa
add
in
(bad)
sub
(bad)
(bad)
mov
push
push
add
xchg
or
push
loopne
int
mov
and
and
inc
mov
mov
shr
push
mov
cmp
mov
mov
addr16
js
ins
and
xchg
push
jnp
sbb
mov
ds
sub
add
cmc
mov
jae
outs
dec
mov
dec
sbb
test
mov
fdivr
lock
xchg
dec
adc
jo
push
xor
mov
les
pop
mov
inc
mov
stc
sti
xchg
cmp
scas
scas
add
mov
in
arpl
ss
or
pusha
lods
jns
pop
pushf
adc
nop
aam
jno
cli
jo
popf
adc
aam
fst
add
test
mov
xor
dec
mov
xor
arpl
push
push
inc
pop
arpl
add
lea
add
aaa
movs
lock
mov
rol
mov
gs
mov
pop
push
adc
int3
ja
xor
stos
jmp
sbb
lock
shr
rcl
mov
cwde
mov
push
pop
push
outs
(bad)
pop
sbb
loop
xor
or
or
add
push
jno
add
sub
das
inc
xor
adc
pop
sar
ds
(bad)
mov
add
mov
out
adc
out
jb
test
sbb
adc
or
aas
jle
xchg
or
mov
cmp
add
out
bound
ins
jbe
imul
jo
js
div
fyl2xp1
xchg
aas
fdiv
dec
pop
sub
cmc
add
mov
push
jg
cdq
ins
mov
dec
sbb
mov
adc
fisubr
and
push
aaa
arpl
test
out
mov
and
ss
call
icebp
js
adc
or
push
xor
mov
mov
(bad)
sub
adc
push
ins
inc
and
mov
daa
push
fs
and
ds
pop
mov
shl
push
mov
xchg
popa
sub
or
fldenv
sahf
mov
fst
inc
jmp
fadd
and
mov
push
push
sbb
mov
pop
adc
mov
mov
fcom
cmc
push
lahf
adc
loop
leave
adc
jp
ins
adc
call
pop
retf
in
pop
dec
cdq
pop
pop
outs
fistp
inc
inc
movs
xor
xchg
fistp
lods
rol
push
pop
in
and
imul
inc
and
fidiv
(bad)
out
inc
xor
xchg
inc
sbb
mov
inc
fidivr
dec
(bad)
add
clc
inc
out
(bad)
in
lods
cmp
mov
int3
not
fs
pop
(bad)
adc
sar
leave
dec
jne
lods
inc
lock
repnz
ins
ja
pop
cmp
mov
xchg
or
dec
scas
xchg
cmps
(bad)
jo
mov
out
ret
cmps
inc
dec
mov
fsub
jl
(bad)
jmp
push
pop
loop
xchg
ficom
mov
add
push
call
mov
in
jecxz
cmp
scas
and
cld
mov
jns
jp
outs
inc
sbb
jae
ficomp
in
and
mov
shr
xor
inc
xchg
mov
or
dec
popf
rcl
das
dec
cmpps
outs
test
aam
dec
adc
push
mov
cld
push
xor
mov
ret
ss
xchg
jle
dec
sbb
cwde
sbb
xor
outs
add
shrd
fsub
bound
adc
dec
lock
repz
dec
cmc
adc
sbb
rcr
xchg
dec
das
rol
push
xor
stos
int
mov
inc
das
aad
pop
cmps
jecxz
or
mov
gs
aas
fadd
push
push
bound
jmp
mov
ins
and
imul
jg
mul
ins
xchg
pop
icebp
pop
gs
call
popa
test
jmp
adc
mov
retf
outs
push
push
push
mov
cmc
push
pop
clc
aad
jecxz
out
cmp
iret
repz
imul
sbb
xchg
or
je
mov
imul
mov
push
sbb
stc
jecxz
dec
push
int
fisubr
jmp
or
(bad)
jns
test
(bad)
les
jb
(bad)
das
ds
in
mov
ds
push
sub
lods
std
aad
push
adc
fsubr
add
ja
popa
stc
pop
or
inc
sti
pop
inc
or
shl
into
into
popa
jmp
jne
retf
fild
jno
aad
jae
cmp
stos
cmps
data16
jg
dec
rcr
xchg
js
mov
pop
or
cmp
icebp
das
out
mov
and
xor
jmp
imul
lods
jne
dec
jecxz
sar
or
mov
or
mov
adc
inc
xchg
outs
mov
mov
outs
fs
jmp
mov
xchg
inc
stos
push
dec
mov
fdiv
pop
enter
cmps
or
(bad)
dec
ss
nop
arpl
jmp
fisttp
add
pop
xor
retf
add
not
dec
adc
cmp
loopne
pop
leave
jp
bound
cmp
aam
mov
test
and
aad
movs
pop
ja
and
loope
dec
inc
lahf
and
xor
in
sub
loop
sahf
das
mov
(bad)
jo
add
jmp
rcl
adc
cmp
or
pcmpeqb
inc
popf
outs
cmp
(bad)
mov
sbb
jecxz
or
stc
inc
(bad)
mov
jne
shl
rol
call
sub
and
sbb
mov
scas
sub
mov
adc
sub
dec
xchg
xor
sbb
ret
dec
cwde
jne
xchg
dec
leave
fidivr
or
sbb
inc
loopne
push
cmp
neg
je
cmp
retf
ins
sbb
nop
mov
xchg
cdq
ret
jae
std
mov
imul
aad
call
xchg
or
xor
out
pop
js
jmp
adc
cmp
and
mov
scas
add
into
mov
xor
xchg
sbb
fwait
add
outs
and
loopne
lea
jb
ret
fild
or
movs
jnp
jmp
push
retf
scas
add
test
push
adc
pop
jns
fisttp
leave
mov
cdq
or
add
sbb
jns
js
scas
fldcw
cdq
xlat
lock
rcl
or
cld
and
fwait
jne
(bad)
sub
jmp
inc
out
rep
xchg
mov
sbb
repz
jp
cli
sbb
dec
mov
inc
in
cli
mov
loop
lods
push
out
ffree
xchg
shl
pop
enter
xchg
hlt
jae
(bad)
popa
add
stos
or
int3
cmp
test
push
loope
dec
shr
xchg
mov
(bad)
cmp
sub
pop
shl
xchg
aas
sub
push
xchg
iret
dec
and
imul
fs
mov
mov
leave
rcr
xchg
js
mov
arpl
sub
addr16
scas
es
mov
push
xor
ins
das
dec
mov
inc
sub
(bad)
xor
pop
sub
jo
gs
and
xlat
xchg
xchg
mov
mov
lea
stc
cmp
sub
lods
fsub
mov
xor
hlt
popa
push
inc
mov
pop
sub
push
dec
xchg
int3
jo
xor
inc
cdq
mov
lea
pop
clc
ins
mov
mov
jmp
push
call
cmps
mov
mov
sbb
sahf
push
pop
outs
xlat
pop
sar
fidivr
mov
div
cmp
outs
push
shl
or
xchg
int3
lock
adc
fldcw
jb
ret
push
and
pushf
movs
push
ins
or
xchg
retf
jp
push
sbb
sti
adc
mov
lock
push
pop
sbb
call
nop
and
push
pop
sub
cmps
in
stos
pop
xor
nop
fcom
out
in
cmp
sti
into
push
fdivr
dec
or
lods
push
cmps
push
nop
shl
data16
sub
call
mov
hlt
xchg
cmp
or
pop
aas
add
fisttp
inc
aas
and
rol
imul
sbb
ds
sqrtpd
(bad)
loop
sar
pusha
dec
ret
into
inc
add
fstp
mov
jl
cmps
loope
loop
adc
jge
jecxz
cmps
or
xor
das
jns
xor
(bad)
mov
(bad)
cmp
ret
cld
pop
pop
rol
lea
mov
mov
ret
inc
and
and
pushf
push
xchg
pop
pop
push
push
and
mov
das
fwait
int
iret
mov
cmp
sub
enter
xor
loopne
clc
cli
xchg
sub
adc
jnp
test
jle
jae
pop
(bad)
and
add
adc
xor
or
mov
sub
mov
movs
lock
loopne
imul
sub
xor
mul
loop
out
jnp
push
sub
ret
pop
call
mov
in
sub
or
jmp
mov
loopne
xor
(bad)
(bad)
lock
xor
in
mov
je
ss
push
movs
dec
mov
xlat
loop
sti
dec
jb
xor
ja
(bad)
fcom
test
dec
mov
xchg
xchg
and
mov
adc
ja
sub
pop
sbb
mov
test
mov
inc
sub
(bad)
in
fwait
mov
fisttp
sti
lods
jbe
pop
xor
pop
cmps
cmp
jl
and
stc
or
pop
cmps
push
add
add
fwait
aad
xor
push
cmp
fsubr
cmp
shl
repz
(bad)
shl
and
or
sahf
sbb
jg
ret
push
sbb
stos
push
pop
pop
push
stc
inc
pop
and
scas
fisubr
xlat
push
sub
je
retf
in
(bad)
not
test
movs
cmp
push
out
sub
pop
inc
gs
xchg
stos
outs
shl
jmp
xchg
movs
mov
pop
push
xor
sbb
mov
ins
xor
inc
cmp
stos
sub
movs
mov
mov
pop
dec
inc
data16
ja
popf
add
mov
call
aad
add
push
jmp
mov
cwde
cli
nop
jp
ret
cdq
out
dec
ficom
adc
mov
xor
cmp
dec
lods
test
test
push
jbe
jmp
and
ins
lods
push
data16
(bad)
clc
sub
push
pushf
(bad)
xchg
push
mov
push
stc
clc
cmp
aam
(bad)
loope
xchg
in
mov
jno
(bad)
push
les
stos
std
xchg
inc
adc
xchg
jne
jecxz
outs
sbb
dec
in
or
in
cmp
jnp
aaa
scas
ror
out
push
ja
jne
(bad)
adc
jbe
pop
fimul
inc
fmul
daa
mov
push
mov
and
or
test
push
scas
pushf
xlat
fidiv
mov
xchg
dec
stc
add
fisttp
imul
in
mov
in
pop
cld
lock
push
dec
or
cmp
(bad)
stos
lods
cmps
inc
xchg
rcr
sahf
outs
and
and
mov
movs
jmp
xchg
jmp
(bad)
adc
inc
sub
sbb
cmp
rol
in
shl
pop
sbb
cmc
in
or
jle
pop
(bad)
cld
out
aaa
jmp
xchg
mov
aaa
ret
push
fnstsw
in
cmc
or
call
aaa
fadd
out
lock
cli
mov
add
(bad)
retf
dec
(bad)
mov
mov
pusha
fwait
sahf
jmp
adc
std
add
call
and
xlat
jl
mov
dec
xchg
inc
pop
sub
push
fimul
pop
fidivr
ins
repnz
(bad)
adc
pop
stos
loopne
lea
ins
in
lea
mov
out
fidivr
adc
mov
repz
ins
jmp
inc
push
in
xor
out
xchg
fmul
outs
mov
inc
call
nop
mov
xlat
outs
dec
std
cdq
mov
cmp
sahf
popf
push
outs
cmps
imul
inc
inc
dec
les
xor
jp
rcr
mov
xchg
int
int
sub
std
dec
or
lods
call
sub
dec
push
cli
clc
in
fcomp
lock
dec
pop
imul
fidivr
in
xor
aas
sub
adc
test
jmp
movs
(bad)
jmp
adc
sahf
xchg
popa
gs
and
mov
out
loopne
cmp
(bad)
push
aad
(bad)
test
cmp
jle
(bad)
pop
movs
inc
rol
(bad)
mov
dec
pop
pop
mov
into
inc
aas
fist
ds
shl
sub
and
mulps
daa
ret
jle
mov
jl
xor
pop
adc
add
xchg
repnz
mov
clc
idiv
lahf
xchg
jns
pmulhuw
jne
mov
push
call
jmp
mov
dec
pop
mov
or
fs
mov
dec
loop
xlat
out
jne
sbb
shl
xchg
hlt
loope
push
sub
xchg
call
scas
aad
mov
scas
dec
gs
sub
xlat
and
ficomp
mov
pop
(bad)
fdivr
out
dec
iret
div
lods
mov
test
shr
fwait
push
lea
mov
aas
(bad)
xchg
pop
call
sbb
stos
cwde
mov
sbb
or
cmp
popf
call
bnd
adc
mov
xor
in
je
and
pop
imul
clc
je
mov
cmp
lock
jno
inc
popa
iret
dec
js
jno
fisub
pop
xchg
xor
stos
loopne
mov
jbe
push
sbb
js
iret
mov
pop
sub
pop
jg
mov
pop
daa
inc
rcr
test
adc
int3
icebp
lock
fild
push
(bad)
push
mov
adc
popa
or
dec
stos
das
sbb
lds
fst
cmp
retf
and
stos
movs
pop
in
xor
repz
push
dec
std
outs
adc
out
imul
mov
jbe
or
popf
hlt
xor
shl
add
out
jecxz
into
cmps
cmps
cmp
pop
idiv
vpmulhw
or
lea
dec
push
shr
push
push
xor
mov
stos
xchg
xchg
push
cmp
int3
xor
ins
add
iret
imul
dec
jle
pushfw
add
jno
push
cmp
pop
xchg
and
jge
outs
adc
inc
dec
cs
gs
push
mov
addr16
pop
push
adc
mov
cmps
adc
push
xchg
repz
and
sar
cs
add
aas
movs
ss
clc
sbb
fimul
call
in
pop
fisubr
xor
adc
xor
mov
mov
out
sbb
lahf
daa
or
lock
sub
jge
cmp
dec
cmp
sbb
xlat
inc
int
sbb
pushf
cli
jecxz
mov
push
data16
sti
jp
ja
js
test
sub
xchg
lea
aam
retf
mov
pop
mov
mov
call
leave
push
jmp
or
add
jmp
fmul
callw
pop
mov
and
push
cmp
mov
dec
std
mov
add
and
rcr
pop
jns
mov
cli
mov
outs
cwde
push
xor
and
sahf
es
sbb
ss
ret
es
dec
pop
xchg
adc
mov
lds
(bad)
out
ins
cli
loope
push
sub
xor
sbb
enter
or
int
push
xchg
push
fidiv
in
push
aad
shl
pop
cmps
cmps
outs
push
aas
add
clc
lfs
pop
clc
out
jb
or
sub
dec
xchg
jbe
fst
inc
pop
jge
mov
jl
daa
dec
pop
std
dec
clc
retf
sub
aad
scas
stc
sbb
push
loop
mov
pusha
iret
pop
mov
stos
mov
rol
je
xchg
cdq
mov
enter
pop
mov
sti
xchg
xchg
sar
mov
mov
push
mov
aad
ins
inc
adc
repnz
mov
aas
lds
and
cmp
sub
jb
inc
xchg
or
nop
sbb
rcl
aad
cs
mov
pop
ret
in
xchg
dec
xchg
mov
pop
movs
push
jmp
dec
das
test
cmps
xor
scas
mov
arpl
popf
sub
mov
fidiv
pop
mov
or
inc
xor
add
lock
adc
xchg
lea
cld
movs
std
jmp
pop
adc
push
mov
or
mov
scas
xchg
fwait
stc
xchg
arpl
fimul
xchg
mov
jp
pushf
mov
or
cmc
mov
stos
pushf
mov
test
push
movs
lea
dec
mov
movs
xor
inc
fidivr
es
outs
mov
loop
aad
(bad)
xchg
dec
dec
in
out
out
aaa
dec
pop
mov
or
add
adc
inc
mov
push
and
sbb
loope
inc
mov
mov
ins
aad
(bad)
in
movs
daa
sbb
into
mov
shl
int3
mov
or
(bad)
push
jne
xchg
daa
sbb
hlt
ror
lods
bound
push
inc
jg
dec
mov
les
dec
xchg
test
adc
cmp
xchg
push
sub
in
rcl
dec
cmp
test
jnp
fdiv
movs
into
(bad)
imul
lods
cmp
call
js
pop
xchg
jno
inc
retf
repnz
jmp
data16
or
cmp
in
das
into
rcr
xchg
mov
xchg
or
and
ds
scas
in
jnp
xlat
aam
jo
adc
mov
leave
test
lock
push
xchg
cwde
aam
cmps
dec
pop
pop
and
mov
js
sbb
and
inc
scas
pop
imul
js
pop
add
dec
not
rol
ficom
sub
jl
adc
push
push
push
fldcw
xchg
ss
fild
sbb
stc
addr16
sub
jbe
ss
adc
fs
sub
aam
mov
xchg
xchg
pop
aaa
cmc
push
mov
mov
jno
enter
adc
loope
cs
or
xor
adc
rol
mov
les
mov
xchg
cmp
mov
gs
(bad)
sub
xlat
adc
mov
sti
movs
sub
inc
mov
inc
jno
ja
fiadd
or
cmp
neg
lahf
mov
xchg
cs
jmp
stos
das
sbb
(bad)
in
cmc
popf
mov
mov
movs
mov
cmp
pop
add
fnstsw
jle
jne
scas
push
jmp
stos
ret
pop
and
psubsb
and
jo
jmp
lods
add
imul
sub
sub
or
les
not
push
push
dec
mov
mov
imul
div
pop
imul
push
xlat
retf
and
push
test
sub
push
and
dec
adc
pop
push
in
sbb
pusha
lods
add
jl
inc
jbe
scas
dec
data16
dec
out
xchg
lods
repz
leave
mov
retf
lock
ret
sub
clc
jge
test
sub
dec
mov
div
sub
loopne
std
imul
mov
addr16
sub
sbb
stos
sar
adc
and
mov
adc
sti
dec
imul
or
inc
lea
aaa
dec
fbld
add
cmp
loope
jns
xchg
icebp
js
jp
mov
rcl
xchg
adc
pop
(bad)
(bad)
mov
pop
and
mov
inc
adc
mov
mov
xor
inc
repz
outs
sub
es
aad
mov
adc
stos
jae
dec
pop
int3
push
sbb
cmp
and
repz
jecxz
or
sti
lods
sbb
jecxz
mov
je
in
and
shr
jecxz
jo
test
mov
fldcw
push
bnd
es
mov
les
(bad)
or
(bad)
ins
aad
xor
pop
out
mov
sbb
or
loopne
out
pop
cmps
xchg
sub
cmc
icebp
and
(bad)
xor
adc
jg
ss
push
mov
pop
push
fisub
adc
mov
mov
cmp
in
outs
inc
lods
push
inc
ret
sbb
mov
retf
pop
icebp
jmp
mov
stos
xchg
and
shr
lea
imul
pop
or
xor
sub
mov
sub
test
aaa
mov
mov
fwait
test
imul
mov
ins
mov
jno
mov
sub
outs
loop
test
mov
jmp
dec
inc
callw
adc
shl
inc
test
xlat
adc
(bad)
jg
jecxz
pop
call
aam
jp
xor
or
rcl
je
int
xor
aad
call
arpl
dec
leave
in
or
mov
dec
aas
inc
inc
std
js
popa
aas
mov
into
cmp
dec
pop
xchg
stc
stc
jbe
push
bound
xchg
test
push
jecxz
jge
sbb
dec
stos
push
mov
leave
mov
add
test
cmps
sbb
pusha
dec
or
imul
and
inc
add
test
test
in
sbb
call
push
aad
add
cld
inc
jle
dec
shl
inc
(bad)
mov
jp
push
push
les
and
sub
jne
ins
cs
jbe
xchg
sbb
in
or
mov
inc
xchg
js
push
cmp
or
or
jl
xor
add
sbb
and
inc
aaa
(bad)
(bad)
out
popa
outs
outs
add
ror
or
faddp
ja
leave
and
add
enter
mov
xchg
jne
pop
ins
dec
pop
cmps
aas
ds
xchg
(bad)
jmp
mov
ror
mov
dec
jns
push
test
jae
adc
(bad)
rcl
push
nop
cmp
add
mov
mov
movs
(bad)
fxch
inc
movs
inc
sbb
xor
push
sub
aad
adc
sub
push
mov
adc
mov
loopne
out
add
jbe
sbb
fisubr
icebp
fmul
mov
mov
in
inc
scas
mov
div
xor
or
jge
and
inc
adc
adc
repz
jbe
fld
pop
add
jnp
jb
inc
xor
mov
push
dec
outs
lods
stc
lock
lock
jge
add
adc
cs
mov
sti
loop
adc
xchg
fadd
popa
out
dec
and
rol
aaa
repz
das
call
and
rcl
bound
mov
into
iret
cmp
jg
xchg
fdivrp
mov
cmp
ja
fwait
pop
pop
push
int
mov
sub
jp
add
cmp
push
mov
loopne
adc
outs
push
dec
(bad)
aam
call
xor
fwait
shl
stos
adc
and
(bad)
jg
aaa
dec
mov
sbb
cmp
cmp
xor
mov
lods
jg
or
sahf
push
in
push
or
and
sbb
xor
push
jb
mov
jle
jmp
stos
enter
cmp
pop
mov
ret
ins
inc
and
call
int
jmp
fdiv
test
out
push
aam
ins
add
cmp
hlt
dec
sub
inc
mov
jmp
retf
xchg
or
ins
push
mov
xlat
lods
inc
and
and
xlat
inc
nop
xor
ret
jb
movs
xlat
xchg
sub
sub
int
jg
cmps
ins
cmps
pushf
out
call
sbb
xor
inc
sti
or
sahf
mov
in
jge
clts
or
xchg
push
test
sahf
push
jb
pop
dec
push
stos
test
xor
push
xchg
pop
aaa
mov
adc
push
mov
stos
jmp
add
mov
pop
xchg
outs
jle
mov
xchg
dec
loop
jg
xchg
xchg
push
test
sub
scas
fimul
das
and
jns
sbb
pusha
enter
stos
out
enter
popf
add
and
cmp
arpl
mov
add
xchg
push
cmps
pop
ins
xchg
rcl
cs
test
je
popf
inc
cli
xchg
push
sbb
add
std
or
into
adc
sub
adc
aad
xchg
xchg
xlat
mov
je
mov
push
(bad)
mov
sub
inc
push
fcom
jge
pushf
cmps
add
in
pushf
test
fs
xchg
push
xlat
push
adc
sti
call
push
test
mov
inc
rcr
xor
call
mov
mov
fstp
pop
or
pusha
sbb
and
popf
push
pop
dec
or
movs
add
sbb
popa
pop
out
push
shl
jp
fnstenv
leave
lods
or
mov
rol
pop
repnz
dec
mov
cli
or
push
dec
or
sub
push
loope
mov
lds
jge
movs
test
out
sbb
inc
push
mov
cmc
mov
out
xchg
mov
retf
aam
xor
mov
and
(bad)
pop
or
adc
xchg
cli
push
xchg
rcr
test
xor
xor
mov
mov
lea
dec
dec
test
neg
jecxz
sti
push
pop
fnsave
inc
or
(bad)
sub
push
std
and
add
pop
pop
cmps
in
test
rcr
data16
jno
xor
sub
jl
nop
mov
shl
bound
cmp
stos
test
xor
jo
dec
lds
test
jmp
loopne
jbe
mov
hlt
(bad)
sbb
or
mov
leave
stc
jp
xchg
and
inc
adc
jp
or
inc
scas
leave
mov
mov
call
xchg
stos
push
sbb
adc
mov
sub
cmp
imul
inc
sub
or
out
inc
sub
inc
xchg
xchg
stos
je
stos
push
sub
les
inc
das
mov
or
push
xchg
gs
sbb
rcl
aas
in
mov
sti
out
mov
mov
mov
jmp
rcl
mov
and
xchg
push
sbb
mov
fwait
xor
sbb
out
push
movs
stc
cmc
push
es
push
js
mov
mov
pop
mov
and
mov
loopne
pop
cmc
retf
xor
mov
ins
sbb
(bad)
sub
pop
cmp
pop
dec
push
ds
jl
call
adc
mov
mov
sub
sub
shl
mov
fimul
push
out
sbb
popf
pop
xchg
and
cmp
dec
inc
out
out
or
(bad)
pop
pop
int
lahf
add
jmp
in
jmp
inc
enter
(bad)
hlt
adc
daa
mov
and
jg
mov
jne
push
pop
test
sub
aad
xchg
dec
(bad)
shl
ja
scas
jecxz
or
shl
bound
lods
and
fldenv
xchg
cli
lods
jl
clc
popa
es
mov
jno
inc
hlt
xchg
xchg
test
cmp
push
popf
jo
cwde
xor
mov
arpl
dec
xor
pop
mov
arpl
dec
adc
xor
xchg
pop
mov
mov
sub
cdq
daa
add
xor
aas
in
sub
jnp
add
mov
or
cmp
or
inc
pop
pop
rcl
mov
lahf
sbb
movs
mov
imul
retf
imul
xchg
mov
dec
hlt
addr16
and
pop
je
ja
fs
popf
cwde
cs
mov
int
cmp
in
mov
xor
sbb
adc
out
inc
js
(bad)
cmp
in
and
push
push
sub
(bad)
cmp
stos
sub
ds
sti
add
adc
cmps
xor
jns
clc
enter
push
sar
inc
ret
sbb
xchg
ftst
mov
mov
js
loope
cld
loope
sbb
sub
jns
push
inc
sub
pop
test
mov
sbb
push
call
and
cld
or
adc
xchg
cmp
xchg
movs
fsubr
adc
fld
add
lods
mov
lahf
icebp
out
fild
das
stos
push
push
sub
out
out
xchg
and
pop
mov
aam
xor
push
shl
pop
sti
sahf
xor
enter
gs
gs
popf
jp
sub
fistp
sar
push
lods
cmp
xor
xor
push
push
lds
std
neg
std
bound
sbb
or
scas
push
pop
add
xchg
inc
xor
or
mov
arpl
jmp
mov
inc
mov
fsubr
aas
sbb
mov
pushf
mov
pop
sti
fcmovnb
jbe
mov
xchg
and
inc
fwait
imul
scas
in
jmp
int
sbb
repz
les
mov
(bad)
push
or
mov
outs
jb
enter
in
(bad)
adc
mov
popf
nop
add
sub
xlat
push
inc
aad
lea
sub
in
pop
sti
push
not
pusha
jae
ror
jb
nop
ja
jns
inc
pop
mov
test
push
mov
leave
pop
push
shr
scas
gs
dec
retf
jl
push
cmp
ret
cmp
repnz
jno
out
or
aas
pop
mov
mov
ret
in
adc
ret
into
test
in
lahf
push
sub
xor
inc
mov
jmp
dec
inc
jl
dec
inc
mov
(bad)
push
dec
out
mov
jmp
pop
loope
cmc
pop
sbb
mov
mov
out
outs
loope
int
test
out
test
fild
lods
clc
mov
(bad)
push
es
sar
cmps
and
inc
dec
or
push
ror
push
adc
retf
jge
(bad)
cmp
push
inc
ins
add
cwde
fisttp
ret
jno
sar
aas
push
(bad)
jp
sbb
hlt
es
retf
mov
or
or
jb
in
popa
adc
pop
addr16
(bad)
xchg
add
call
pop
repz
nop
cmc
and
fwait
imul
dec
repnz
js
data16
scas
mov
fdiv
adc
dec
adc
test
fwait
mov
ret
dec
lods
enter
fcmovnu
dec
adc
or
ret
call
(bad)
scas
fimul
in
xchg
sub
(bad)
mov
js
pop
js
xlat
loopne
(bad)
cld
and
fidiv
or
imul
(bad)
push
adc
xchg
sub
in
mov
dec
retf
int3
aam
add
imul
mov
jns
cmps
es
push
jmp
or
sbb
mov
popf
outs
jp
adc
(bad)
dec
adc
and
mov
or
scas
mov
test
int3
gs
fadd
xchg
test
pushf
ds
or
jmp
mov
(bad)
rol
push
xchg
loope
ja
mov
adc
inc
xor
cdq
dec
add
mov
retf
mov
mov
(bad)
das
fdivr
xchg
popa
popf
jns
jne
(bad)
mov
sar
sbb
mov
mov
repnz
dec
shl
adc
pusha
xor
jo
test
imul
je
jmp
inc
mov
jbe
mov
das
dec
(bad)
int3
(bad)
frndint
ja
pop
sbb
iret
or
dec
std
pushf
mov
mov
inc
cmp
clc
hlt
or
and
sbb
adc
push
xchg
retf
mov
or
dec
add
xchg
and
fcom
fimul
(bad)
loop
jnp
inc
mov
jae
lods
outs
jb
loopne
xor
pop
mov
cmc
xor
js
sub
test
cld
pop
cli
push
mov
pop
cmp
mov
repz
lds
pop
or
popa
dec
clc
out
(bad)
xor
loop
clc
jns
jge
jae
dec
xchg
fild
loop
in
inc
data16
mov
cmps
fcomp
outs
or
into
jae
adc
inc
sti
daa
lods
adc
cmps
cmps
mov
sbb
jecxz
cdq
adc
test
add
mov
xor
dec
retf
pop
jno
aaa
in
fwait
mov
or
in
ss
cs
xchg
pop
(bad)
out
cmp
add
out
scas
lock
out
cmc
push
lods
sub
add
push
mov
shr
scas
mov
dec
jne
jl
ins
mov
mov
popf
mov
or
or
jmp
push
jbe
and
add
test
ds
nop
or
cwde
ret
add
call
pop
call
xchg
scas
popa
add
bound
sbb
jmp
mov
lds
sub
int3
imul
in
sbb
dec
ror
ds
jecxz
loop
arpl
sti
ins
fcmovne
mov
mov
call
test
adc
div
outs
cli
adc
retf
rcr
daa
inc
lods
sub
push
lods
in
aad
mov
mov
mov
es
stc
pusha
enter
dec
add
jmp
aas
add
dec
fdiv
movs
cmps
cmp
cs
and
(bad)
dec
xchg
lds
adc
cmp
or
jp
mov
add
add
repnz
and
pop
mov
xchg
int
movs
fld
ret
in
and
fsub
jmp
jns
and
mov
rcl
and
js
push
mov
retf
xchg
dec
dec
aad
mov
pop
add
push
mov
call
sub
leave
cwde
(bad)
inc
test
in
in
adc
int3
ins
jno
outs
and
push
mov
leave
loope
sub
fiadd
pop
loopne
(bad)
jbe
mov
mov
fistp
in
scas
in
push
cmp
mov
hlt
lea
mov
dec
test
sbb
or
sbb
in
jnp
shl
jns
mov
sub
push
mov
aas
in
scas
xchg
jle
mov
add
xchg
and
xchg
ja
pop
jae
jmp
nop
(bad)
int3
xchg
adc
mov
mov
mov
fnstcw
pop
jmp
xor
add
inc
cmps
push
xchg
mov
imul
stos
sub
push
push
jge
outs
out
cdq
sbb
stos
enter
jae
fist
xchg
and
bound
loope
dec
call
imul
movs
inc
cli
sub
je
adc
pop
pusha
xchg
icebp
in
jp
and
inc
jmp
fisub
div
test
daa
test
mov
pop
cmp
pop
aad
push
mul
shl
jmp
mov
xor
shl
fbld
bound
ds
mov
out
jnp
xor
xchg
inc
xchg
fild
mov
inc
jmp
cmp
pop
icebp
pop
movups
sub
aaa
sbb
(bad)
shl
mov
addr16
jmp
aam
mov
lods
rol
imul
mov
leave
add
shl
fs
retf
push
cmp
aaa
out
mov
aaa
push
xor
jb
mov
movs
lock
adc
adc
xchg
addr16
inc
and
xchg
mov
and
cdq
pop
sub
int
jno
sti
inc
call
fisttp
shl
fcom
fwait
add
mov
out
or
pop
in
xchg
popf
movs
push
jnp
retf
jne
push
hlt
loop
cmp
cmc
fstp
int
arpl
jo
jle
mov
cmc
out
jecxz
mov
dec
cmp
pop
xchg
movs
add
cmp
or
sbb
fadd
pop
add
cmps
popa
mov
ja
fisub
ja
cs
xor
(bad)
jo
or
mov
push
hlt
les
push
cmp
adc
jle
inc
(bad)
ficomp
lock
and
sub
inc
jbe
adc
int
into
pop
mov
mov
jbe
xlat
mov
jne
arpl
movs
in
in
adc
stos
pushf
hlt
popa
mov
push
out
or
mov
mov
push
pop
inc
xlat
out
sub
pop
idiv
inc
xor
into
loop
int3
add
pop
cli
cmp
retf
sbb
xchg
mov
inc
jp
sub
ret
mov
adc
inc
(bad)
push
in
sub
xlat
add
out
xchg
(bad)
mov
pop
fwait
xchg
mov
jns
ret
xchg
jg
jb
adc
js
cld
idiv
out
xor
sbb
ret
iret
mov
popf
out
mov
jecxz
pushf
xchg
outs
xchg
add
cmps
lea
xchg
std
push
mov
mov
js
enter
jg
popf
fist
push
sbb
mov
mov
ret
inc
and
jo
outs
mov
neg
dec
adc
outs
jp
data16
adc
or
jnp
pusha
stc
int
sub
dec
scas
into
out
es
pop
mov
scas
push
adc
jmp
adc
xchg
sub
cmp
cdq
pop
cs
sbb
pop
(bad)
push
add
in
push
imul
cmp
mov
pop
fst
xor
addr16
js
hlt
adc
or
sub
mov
add
rol
movs
jo
in
cmp
out
(bad)
div
test
push
push
adc
cmps
xchg
xor
xchg
loope
sbb
iret
inc
adc
sar
(bad)
jo
mov
sub
jge
sub
jno
repz
ss
pop
xchg
mov
mov
mov
in
inc
in
pop
push
cmp
addr16
xchg
push
inc
sub
push
std
mov
cmps
or
lock
js
fmul
test
dec
int3
shl
xlat
retf
ja
idiv
mov
stos
lahf
enter
out
pushf
nop
jge
sti
call
push
rol
(bad)
rcl
xchg
je
and
pop
dec
(bad)
jbe
rcl
mov
push
jecxz
add
pop
icebp
sbb
je
out
mov
ja
dec
mov
xchg
sub
push
out
out
(bad)
xor
mov
fisttp
rcr
lods
xchg
mov
mov
and
inc
sub
lods
das
add
adc
outs
dec
add
pop
adc
rcl
loope
xor
push
(bad)
mov
mov
call
in
(bad)
xor
sub
int3
inc
js
cmp
xor
cmp
ret
(bad)
jbe
pop
repnz
dec
ds
cmp
ror
fwait
xchg
shl
nop
push
push
lahf
mov
gs
add
push
adc
test
movs
push
mov
mov
xchg
cs
pop
fisttp
dec
sbb
outs
xchg
test
test
or
hlt
(bad)
mov
in
push
mov
(bad)
movs
lea
cmp
and
lock
nop
out
movnti
rol
int
add
push
fs
stos
mov
(bad)
sbb
aas
inc
mov
jo
out
dec
out
scas
and
mov
push
pop
xchg
mov
imul
pop
mov
mov
jmp
or
ficomp
push
lods
sub
push
test
mov
ins
stos
retf
sti
stc
pop
push
mov
test
sbb
sub
and
dec
push
mov
or
xor
or
jno
(bad)
jmp
adc
jp
cwde
dec
cld
bound
mov
mov
call
inc
stos
jbe
loopne
clc
pop
xor
loop
jmp
inc
ficomp
cld
cmp
fdiv
pop
movs
mov
pop
(bad)
fcmovnbe
arpl
sbb
jp
jmp
dec
xor
pop
xchg
or
push
int3
dec
fild
adc
sbb
imul
sbb
imul
and
sub
jmp
xor
jae
or
and
cli
(bad)
pushf
cmp
gs
cmp
loope
xor
jns
dec
jnp
ins
push
mov
ins
ja
mov
addr16
cmp
dec
jns
loope
stc
out
sbb
out
bound
adc
gs
mov
push
cli
jg
in
xor
ja
jl
or
fwait
lds
ret
xchg
retf
sti
cmp
mov
lods
cmp
xchg
in
mov
mov
dec
mov
push
lods
out
sbb
fnstcw
or
inc
dec
lea
(bad)
loopne
adc
fdivrp
das
jne
int
fld
mov
aaa
xchg
adc
mov
pop
fdivr
adc
or
cld
cwde
push
inc
mov
ins
inc
jbe
xor
mov
or
out
aad
pop
dec
outs
lea
in
(bad)
dec
out
test
cmp
fist
rcr
push
xchg
xor
lds
in
ins
sbb
or
mov
push
jg
pop
xor
cmps
lods
jecxz
cli
xchg
fsubrp
(bad)
and
test
sub
inc
mov
adc
xchg
push
add
test
lahf
pop
retf
cmp
shl
enter
mov
mov
inc
test
call
pop
mov
push
jae
sar
outs
hlt
xor
dec
call
mov
test
lea
iret
pop
mov
jno
adc
mov
fisub
out
cld
or
inc
adc
push
cmp
adc
xor
pop
dec
or
inc
cmp
fcomp
dec
call
aad
inc
mov
and
test
xchg
ret
loope
or
jbe
sub
(bad)
jl
mov
sbb
ficom
test
jp
(bad)
fnstenv
bound
inc
hlt
mov
push
aaa
adc
in
mov
jge
pop
jmp
lds
in
sub
pop
test
mov
xchg
cmp
icebp
mov
mov
imul
sbb
(bad)
int3
test
fnstcw
or
sub
sbb
push
lock
xchg
test
jno
je
push
(bad)
jns
inc
fldcw
inc
es
mov
jmp
mov
les
test
pop
inc
les
dec
adc
ficom
ds
cwde
jle
pop
je
or
shr
inc
cmp
into
and
xchg
cmps
movs
mov
lds
adc
push
nop
inc
das
sub
and
adc
pop
mov
dec
dec
mov
push
test
jmp
(bad)
jp
adc
jecxz
arpl
xor
xchg
push
pop
cli
xchg
push
imul
dec
mov
xchg
mov
mul
cmp
mov
jne
adc
popf
enter
lahf
sti
rol
ds
cmp
jp
sahf
mov
dec
jge
mov
push
jg
mov
jnp
pop
(bad)
(bad)
ds
lea
or
inc
sub
push
shl
pop
sub
mov
push
and
outs
movs
sub
fxch
jnp
and
mov
retf
sahf
dec
adc
push
fcomp
push
sub
int3
bound
pop
jo
(bad)
mov
dec
(bad)
mov
dec
jbe
dec
loope
push
repz
dec
jae
jmp
leave
cmp
stos
enter
fwait
jge
pop
icebp
jns
xchg
jae
jae
dec
mov
ins
rol
add
push
jb
xchg
sub
cmp
popf
test
push
jle
mov
outs
sbb
pop
leave
xchg
xor
fyl2x
scas
cmp
mov
or
push
lock
call
test
cmc
addr16
or
xchg
or
scas
je
stos
sub
or
ins
push
inc
aam
test
dec
add
adc
adc
xor
and
imul
rcl
fcmovu
push
or
cmps
out
pop
cmp
(bad)
outs
lea
jp
loope
mov
shr
adc
outs
push
xor
call
movs
jmp
fistp
imul
mov
mov
add
and
aad
jns
push
xor
mov
test
fidivr
cmc
pop
or
sahf
inc
pop
xor
jmp
ficomp
jp
xor
(bad)
lods
mov
jge
mov
sbb
or
cmp
push
mov
enter
popa
fisttp
movq
or
jg
jmp
loop
mov
int
mov
xchg
rcl
mov
cmp
xchg
xor
out
mov
arpl
test
imul
fadd
les
adc
fisubr
adc
cmp
es
iret
movs
retf
sbb
add
retf
nop
jmp
into
add
push
arpl
loope
sahf
leave
push
mov
push
pop
push
xchg
ins
push
loope
pop
js
cwde
(bad)
stc
aaa
mov
dec
dec
loope
pcmpgtw
or
arpl
pop
out
scas
popa
loope
dec
push
mov
iret
fst
mov
(bad)
out
(bad)
jecxz
pop
sbb
inc
ficomp
test
push
leave
push
ror
inc
das
fiadd
push
loopne
out
cwde
pop
mov
loopne
jp
and
inc
xchg
stc
mov
pop
and
mov
scas
mov
jb
adc
imul
jg
repnz
pop
sub
test
push
nop
push
xchg
scas
int
sub
mov
xchg
and
push
inc
call
fldenv
retf
popa
lods
lock
neg
push
add
sbb
cmc
hlt
into
popf
sbb
pop
adc
mov
shr
xchg
cmps
pop
push
lods
sub
popa
les
fs
cmp
sbb
ins
dec
test
std
pusha
jae
addr16
into
inc
icebp
xor
mov
test
das
addr16
mov
adc
jmp
pop
adc
mov
adc
loopne
cmp
arpl
mov
fcos
imul
and
sahf
push
sbb
or
lock
cdq
ja
retf
mov
mov
add
cmp
mov
js
fmul
xchg
aam
lods
jmp
push
enter
push
test
xchg
mov
or
pop
pop
and
dec
mov
jl
jl
adc
adc
and
inc
pop
daa
leave
mul
push
jge
xor
inc
add
pop
push
rol
jne
mov
adc
jecxz
lahf
add
xchg
pusha
les
xchg
jnp
lahf
lods
cmp
cmp
cli
or
scas
sub
stos
xor
addr16
push
in
movs
cli
xchg
lods
sbb
dec
arpl
mov
dec
mov
fdiv
mov
jmp
ins
push
and
std
fwait
retf
clc
aaa
nop
loop
jno
sbb
in
sub
std
pop
pusha
mov
cmp
das
push
inc
js
test
pop
xor
cmps
stos
lea
loopne
fincstp
cmp
mov
mov
xchg
and
sbb
hlt
mov
pop
mov
jbe
jmp
xchg
lods
test
or
pushf
adc
repz
data16
mov
cmp
jns
cmp
nop
mov
adc
push
movs
scas
sbb
add
popf
retf
add
inc
inc
mov
xchg
ja
aam
mov
mov
fcmovu
push
mov
pop
call
(bad)
xchg
xor
inc
jl
ja
dec
nop
inc
inc
push
mov
and
and
cli
inc
stc
int3
jg
dec
sub
cmps
mov
cmp
and
sub
lods
pop
jo
sbb
neg
dec
ins
mov
pop
adc
mov
jb
mov
dec
(bad)
div
sbb
push
out
sbb
cld
xor
fcmovbe
(bad)
jl
pop
stc
mov
movs
movs
pop
mov
jp
xchg
mov
cmps
pop
xlat
dec
pop
mov
iret
dec
pop
repnz
pop
fisubr
call
leave
call
pushf
fdivr
jp
xchg
mov
and
sahf
mov
add
int3
fiadd
push
popf
leave
add
scas
cdq
clc
fcomip
mov
out
xchg
lds
das
int
add
xchg
mov
rcr
not
ja
in
call
shr
push
add
arpl
mov
clc
jo
imul
push
inc
xchg
cmp
cmp
loop
enter
push
pop
xor
data16
fisub
mov
xchg
mov
es
sbb
ds
ret
je
push
add
push
movs
fcom
xchg
jge
outs
loop
pop
or
es
mov
inc
and
push
icebp
clc
xchg
jmp
and
mov
imul
popa
jp
sti
in
mov
retf
mov
icebp
inc
inc
ret
test
sbb
aaa
imul
test
pop
adc
xor
in
xchg
fistp
and
daa
std
inc
dec
in
jp
fdiv
sbb
scas
and
and
xchg
sar
fwait
add
xchg
neg
loope
out
mov
ss
cmp
mov
fs
cmp
out
sar
pop
inc
mov
xor
pop
cmp
imul
bound
daa
mov
add
test
or
and
stos
inc
jae
mov
sar
cmp
adc
add
and
mov
xchg
xchg
dec
enter
and
mov
xchg
or
mov
int3
out
or
and
and
test
cmp
(bad)
jnp
std
out
(bad)
arpl
adc
(bad)
in
mov
mov
clc
(bad)
int3
call
sub
push
jns
sub
or
xor
mov
cmp
jo
lock
add
ret
jmp
push
jle
cmp
and
dec
mov
gs
pop
test
aam
mov
sbb
jbe
adc
xchg
cmc
into
ret
cmp
sub
cmp
or
mov
call
sti
leave
sub
fwait
jmp
add
dec
fwait
test
cs
lahf
jo
pop
and
in
or
pop
lock
adc
popa
and
jge
cli
push
out
jbe
enter
add
imul
int
inc
add
sub
ror
lock
xor
push
pop
mov
lods
adc
mov
in
test
xor
aam
data16
fimul
cwde
add
pop
scas
sub
sub
into
cmp
pop
push
leave
inc
xchg
push
fwait
(bad)
clc
jp
or
out
push
cdq
es
hlt
stos
cmc
shr
jecxz
(bad)
dec
jbe
es
es
cli
loopne
jb
xor
adc
movhps
sbb
mov
fsubr
dec
dec
arpl
xor
xchg
cmp
xchg
lods
jae
lods
mov
fwait
pop
jl
jb
(bad)
adc
fisttp
adc
pop
pushf
sub
scas
adc
dec
inc
(bad)
pop
sbb
cs
cmc
adc
push
and
scas
adc
stc
inc
shr
push
in
in
clc
jl
sbb
pusha
sbb
sar
mov
(bad)
cdq
(bad)
out
js
int
nop
inc
ror
pop
push
mov
lea
push
fnstsw
scas
int
xchg
or
popf
stos
mov
stc
(bad)
enter
dec
addr16
in
int
inc
cmps
out
dec
nop
popf
or
push
mov
dec
in
add
aas
fcmovnb
jne
jmp
sbb
push
pop
and
mov
mov
(bad)
ss
mov
ficom
imul
enter
imul
fsubr
cld
in
rol
imul
pusha
(bad)
pushf
or
cmps
rcr
sbb
adc
(bad)
push
lahf
sub
fdivr
repz
jg
jbe
repnz
add
mov
sbb
mov
sbb
mov
arpl
xor
cmp
dec
sbb
in
cli
and
ficomp
int3
pop
iret
mov
jecxz
rcr
rol
dec
std
adc
jmp
mov
fidiv
repz
cld
mov
frstpm(287
ret
sahf
in
movs
cmp
icebp
mov
paddd
and
call
push
sbb
xchg
retfw
xchg
cmp
dec
cmp
push
add
xchg
lods
les
mov
jmp
test
int
je
mov
mov
ins
sub
xor
xor
sub
movs
pop
je
in
xchg
mov
stos
pop
pop
dec
gs
mov
sbb
jmp
xchg
scas
mov
jae
xlat
and
stc
adc
add
in
outs
sub
jle
jmp
xchg
sbb
jb
aam
ds
or
cmps
mov
xor
popf
cdq
mov
fsubr
or
pop
fs
sub
jmp
aaa
add
mov
mov
inc
xor
ret
push
sbb
add
jmp
test
movs
mov
mov
push
int
jge
into
hlt
add
xchg
call
sbb
out
icebp
pop
sub
int3
out
loopne
mov
call
add
lods
lahf
xchg
mov
mov
js
outs
jle
lahf
and
cmc
cmc
inc
aad
in
add
sub
(bad)
mov
add
jns
pusha
xchg
in
lock
retf
pop
and
outs
inc
ss
push
dec
inc
cwde
mov
(bad)
in
lods
inc
mov
fcmovnbe
adc
add
cmp
and
adc
and
xchg
push
jp
xor
stos
fldenv
push
jae
inc
push
sbb
nop
hlt
and
dec
mov
inc
scas
in
clc
xchg
cmp
je
mov
into
pop
xchg
cmc
pop
jge
jbe
(bad)
xchg
repnz
mov
mov
fsub
and
or
arpl
stos
mov
sar
ror
js
pushf
and
pop
and
xor
arpl
retf
pop
sub
cs
inc
stc
push
mov
push
cmps
movs
push
jmp
jo
pcmpgtw
push
imul
dec
push
mov
stc
sbb
sbb
pop
mov
mov
jle
and
add
inc
sti
or
retf
fdiv
cmp
icebp
outs
xchg
sbb
or
loope
xor
sbb
int3
xchg
mov
data16
xchg
fsub
outs
rcl
sbb
imul
adc
add
mov
loopne
lds
popa
nop
mov
and
inc
inc
mov
(bad)
arpl
dec
cli
and
lods
jl
lea
fcmovnbe
xchg
push
(bad)
stc
adc
adc
pop
and
jb
pop
or
push
xor
mov
mov
je
shl
in
pusha
or
jb
xchg
je
pusha
sbb
mov
dec
sti
sub
xor
cmp
jg
cmp
sti
mov
movs
jge
cmp
imul
jle
or
push
sub
and
xor
lods
jb
mov
jge
push
push
sbb
xchg
pop
mov
in
or
sub
pusha
stos
push
call
enter
cwde
cli
mov
mov
inc
fsub
fwait
jl
scas
adc
inc
outs
xchg
jle
mov
cmc
or
test
je
cs
lods
rcl
sub
sar
dec
test
xor
jnp
sbb
sar
sbb
jno
mov
xchg
jle
fnstsw
aad
jnp
fld
mov
imul
or
jns
push
cmp
jb
cmps
xor
test
inc
xor
mov
push
sbb
loope
xor
aas
xchg
jmp
imul
mov
leave
into
imul
xchg
add
jbe
mov
int3
and
(bad)
mov
sub
or
repz
adc
mov
fcomip
lahf
dec
fdiv
fsubrp
fwait
xlat
popf
gs
icebp
mov
retf
xor
sbb
pop
inc
mov
test
hlt
ins
push
jae
outs
int
iret
test
scas
arpl
test
inc
fsubr
jbe
retf
or
inc
sbb
lds
mov
mov
mov
loop
je
int
mov
dec
fdivr
das
into
add
and
lods
xchg
cmp
inc
jl
inc
movs
call
push
fisttp
fwait
shr
(bad)
jmp
imul
sub
js
dec
mov
mov
mov
lods
arpl
mov
mov
mov
mov
or
mov
push
jns
sub
xchg
frstor
ins
outs
xchg
call
push
and
and
inc
xchg
jnp
mov
mov
mov
fnsave
test
div
popf
xchg
jl
ret
(bad)
fisub
fs
adc
mov
jbe
lods
adc
sub
fnstcw
(bad)
loopne
movs
or
popf
fbstp
jecxz
(bad)
fbld
mov
int3
cmp
xchg
lds
dec
out
cmp
cld
mov
out
xchg
mov
push
ficom
mov
add
les
push
dec
enter
sbb
xor
ins
adc
(bad)
shr
xchg
mov
pop
imul
xchg
shr
es
repz
stc
arpl
dec
fcomp
pop
stc
adc
mov
cmp
adc
mov
mov
clts
mov
xchg
sbb
std
and
shr
cmp
mov
jns
mov
stos
sbb
and
(bad)
add
cmp
mov
push
adc
stos
int
push
xor
jo
fadd
sahf
call
enter
ficomp
ds
cmps
lods
cs
mov
fsubr
dec
or
ss
mov
icebp
sbb
pop
and
add
add
adc
jns
aas
call
xchg
into
pop
dec
mov
daa
push
(bad)
jp
repnz
fucom
xchg
sysenter
inc
daa
ins
or
inc
sar
push
and
jae
rcl
int
jl
cmp
je
push
loop
inc
push
stos
inc
adc
repz
xchg
in
fcmovbe
pop
push
loopne
ret
sar
ror
cmp
jmp
fcom
movs
xlat
inc
std
dec
adc
nop
cmp
dec
das
pop
repnz
movs
mov
leave
inc
loopne
retf
xchg
das
cdq
pop
shl
scas
adc
xor
jle
inc
aaa
addr16
mov
push
icebp
sub
aad
jg
test
pop
mov
daa
ins
daa
jp
cmp
mov
and
dec
aaa
sbb
ret
repz
pop
aas
iret
push
jl
inc
popa
outs
add
int3
jmp
scas
mov
imul
push
lods
mov
mov
loope
pop
cmp
mov
pop
mov
clc
sbb
xchg
rcl
retf
jmp
push
and
fstp
mov
mov
xor
or
dec
cmp
arpl
lods
pop
cmc
ins
out
test
gs
movs
mov
mov
sar
xchg
inc
test
out
stos
sbb
jo
pop
add
mov
jge
test
xor
pop
push
mov
jle
add
cld
outs
loope
cdq
fbld
pop
dec
push
inc
and
into
int3
adc
push
div
jno
or
jl
test
adc
shl
push
(bad)
popf
jg
retf
add
gs
xchg
fld
scas
xchg
sub
inc
mov
xor
and
movs
(bad)
jge
stc
mov
stc
gs
retf
add
mov
std
inc
add
sti
loope
ret
nop
stos
mov
rcr
lods
gs
sbb
aaa
pop
dec
call
push
jg
fs
xor
rcl
push
mov
inc
xchg
loop
hlt
ror
in
dec
inc
and
fnstenv
(bad)
hlt
rol
mov
cmp
(bad)
ins
aad
dec
aam
ror
das
imul
stos
inc
enter
int
sub
pop
mov
rcr
xlat
xor
mov
movs
xor
enter
outs
(bad)
addr16
fst
lods
jae
jp
push
mov
mov
retf
xor
sar
jmp
push
dec
xor
stos
fcomp
in
cmp
mov
and
mov
sub
sbb
into
cdq
and
out
adc
xchg
idiv
and
(bad)
movzx
int
std
inc
arpl
push
or
in
pop
jp
popa
lahf
xor
push
repnz
jg
stc
stos
push
xor
mov
lds
loop
fdivr
shr
ins
popf
add
xchg
inc
cmp
mov
push
and
mov
sbb
data16
mov
sti
(bad)
ss
xchg
adc
mov
xor
jbe
sbb
xor
xor
lahf
push
or
(bad)
adc
cmc
test
or
fwait
and
ss
bound
add
xchg
lds
int3
inc
mov
sub
xchg
pusha
dec
push
ins
push
push
jecxz
fidivr
inc
call
mov
mov
mov
movs
mov
sub
adc
ja
neg
sbb
xchg
arpl
xor
outs
xor
stos
loope
aas
js
pusha
scas
fild
leave
fnstenv
(bad)
jne
out
test
sbb
add
mov
pop
dec
test
je
cmps
mov
mov
pop
(bad)
mov
and
sbb
cmc
loop
(bad)
pusha
les
or
mov
pop
jmp
xchg
inc
xor
sbb
loope
mov
mov
std
push
push
ds
test
loop
mov
into
rol
mov
dec
sub
mov
push
jp
dec
popf
int
jg
cmp
mov
add
jl
sbb
pop
mov
dec
ret
jns
cmp
pop
inc
ffree
xchg
mov
pop
sbb
and
add
jo
shl
in
inc
and
stc
retf
xor
push
sub
in
dec
xor
aas
repnz
push
test
ror
push
ins
mov
mov
dec
dec
or
icebp
fsub
jno
enter
push
xor
fmul
sbb
movs
cmp
in
jbe
xchg
or
jbe
push
(bad)
pop
pop
test
std
sub
lods
mov
enter
pop
outs
adc
test
mov
lahf
mov
inc
fimul
sub
pop
shl
add
cmp
fsubrp
xchg
add
pop
sub
pusha
cld
sub
ret
inc
mov
int3
shr
mov
mov
inc
popf
hlt
adc
aam
shr
push
icebp
mov
popf
adc
and
xchg
dec
loop
ja
fucomi
mov
xor
mov
or
push
inc
dec
lods
inc
inc
and
loope
shl
inc
hlt
add
sbb
mov
cmp
daa
fnstenv
xor
(bad)
ins
jae
or
jl
icebp
test
mov
pop
stos
mov
sub
dec
cld
stos
sub
fcmovb
dec
xchg
or
xor
add
stc
stos
in
das
ret
or
mov
call
(bad)
ja
xchg
out
fs
sub
les
push
mov
jne
dec
mov
clc
adc
dec
lds
sahf
test
fnsave
mov
retf
push
add
es
xchg
imul
dec
call
mov
into
pop
gs
daa
xor
xchg
shl
movs
retf
int3
or
sub
mov
daa
mov
push
adc
sbb
test
jecxz
inc
mov
dec
mov
cli
sub
push
push
or
es
mov
mov
push
sar
mov
popf
aam
dec
retf
jo
pop
mov
sti
sbb
mov
dec
(bad)
mov
cld
sbb
les
mov
stc
mov
jnp
jnp
cmp
ins
add
call
mov
retf
sub
push
icebp
std
cmp
popa
out
mov
xchg
in
jmp
xchg
cmp
adc
repnz
jmp
js
xor
add
in
aaa
jne
jp
xchg
push
call
repnz
add
mov
pop
sbb
movs
cmp
adc
fcom
dec
ret
mov
jg
fisub
iret
retf
xchg
stos
mov
pusha
test
outs
dec
jae
sbb
aad
leave
xchg
(bad)
jmp
adc
push
jne
mov
push
xchg
inc
aad
gs
int
aam
icebp
mov
into
retf
arpl
cmp
mov
push
iret
jne
ins
inc
sub
push
sahf
pop
sbb
sbb
push
jl
push
pop
call
sbb
xlat
push
dec
stc
add
xlat
dec
mov
aaa
(bad)
mov
loope
pop
out
and
cmp
call
test
je
jo
les
sub
jnp
cmp
jns
push
repz
lds
xchg
cmp
movs
push
and
leave
icebp
aas
adc
inc
ja
mov
test
ins
pop
pop
ss
ins
adc
mov
push
mov
adc
jecxz
out
xor
in
(bad)
jle
add
push
and
xor
(bad)
outs
jbe
cmp
into
pop
sub
mov
jmp
sbb
add
mov
aaa
push
js
(bad)
imul
cmps
leave
adc
das
or
out
jl
cmps
sub
fwait
(bad)
mov
sub
shr
lea
push
retf
lods
sub
mov
fwait
or
push
leave
out
xchg
nop
jnp
xchg
fmul
cli
rcl
retf
jmp
lahf
cwde
cmp
sub
xchg
mov
adc
outs
jge
mov
pop
shr
(bad)
fld
push
in
clc
or
sbb
pop
mov
test
scas
and
or
int
xor
sub
cld
ds
test
(bad)
pop
jbe
mov
or
int3
pop
xor
mov
shl
leave
adc
pop
sti
loopne
mov
cwde
stos
imul
loope
lea
push
hlt
(bad)
rcl
xor
jecxz
xchg
iret
movs
test
and
ins
cmps
test
or
daa
jmp
test
add
mov
pop
sbb
cmc
and
add
shr
dec
dec
mov
in
(bad)
sub
push
nop
addr16
and
sub
xchg
outs
adc
fiadd
(bad)
popf
repz
xchg
movs
leave
mov
sar
outs
stos
cdq
jns
mov
xchg
lods
push
and
and
es
adc
scas
arpl
sti
in
inc
ins
test
xor
add
aam
repz
dec
xchg
lods
push
fisubr
movs
or
xor
and
or
icebp
mov
and
(bad)
adc
and
pop
popa
dec
jb
sti
xchg
add
lods
aam
xchg
mov
xlat
ja
(bad)
cmp
mov
movs
sub
add
loopne
leave
(bad)
cmp
in
int3
inc
add
test
in
fcomp
repnz
in
popa
push
(bad)
(bad)
fdiv
jl
add
pop
add
ret
pop
dec
mov
mov
les
test
ins
inc
push
dec
fistp
enter
sbb
mov
mov
hlt
retf
dec
scas
inc
add
sti
sbb
(bad)
dec
xchg
out
pop
lock
jle
inc
push
repz
retf
xor
lahf
out
xchg
sar
cdq
add
xchg
int
mov
adc
mov
movs
lahf
stos
dec
push
or
(bad)
and
pop
mov
sbb
or
cmp
fwait
xor
scas
cmps
xchg
push
enter
retf
sub
pop
pop
and
mov
mov
lahf
cmps
mov
out
ret
add
jo
aas
mov
xchg
pop
inc
ret
xor
scas
test
repz
cdq
retf
ss
rol
test
shl
iret
data16
sbb
stos
lahf
ins
scas
sub
sbb
arpl
mov
cmp
aas
hlt
mov
fcmove
dec
or
xor
test
xor
xor
(bad)
mov
outs
loope
inc
ds
and
or
(bad)
push
cmps
leave
xor
adc
xor
pop
mov
pop
scas
out
frstor
cmp
call
mov
jp
cli
mov
icebp
sub
(bad)
(bad)
scas
cmc
movs
cmp
add
mul
cwde
fisubr
hlt
jl
add
sti
jmp
and
dec
xchg
or
jnp
push
test
mov
bnd
dec
arpl
inc
dec
add
clc
jp
int
jnp
or
jno
in
je
movs
fidiv
push
add
dec
jo
push
(bad)
fiadd
sub
idiv
xchg
not
test
rcl
dec
xor
cld
jecxz
je
push
callw
sub
push
cli
cmp
ins
frstor
jb
das
cmp
ss
daa
mov
mov
fnsetpm(287
fs
pop
jl
into
call
rcr
inc
shr
mov
add
shr
fist
cli
or
dec
movs
lds
lods
gs
mov
(bad)
mov
xor
retf
cld
sbb
cld
and
inc
(bad)
call
jne
mov
je
out
xor
les
mov
mov
or
ds
and
ja
jne
movs
leave
mov
pop
aad
jl
mov
std
test
pop
and
sub
mov
pop
dec
in
sub
movs
push
push
nop
push
out
fcmovu
pop
mov
sbb
fwait
les
lods
mov
stos
aam
and
or
adc
std
xchg
or
or
or
daa
mov
xchg
arpl
pop
popa
cmp
push
dec
leave
mov
inc
inc
mov
mov
ret
imul
mov
mov
add
push
xchg
addr16
mov
pusha
sbb
xchg
xchg
call
adc
mov
push
ins
push
hlt
pusha
loope
push
mov
adc
push
pop
mov
mov
sbb
lds
out
loop
mov
mov
call
call
jb
mov
xchg
xor
sar
xor
pusha
test
lahf
push
xchg
xchg
(bad)
popa
sub
or
repnz
xchg
gs
outs
inc
pop
iret
aad
fs
add
shr
or
jnp
(bad)
cmc
xor
call
retf
dec
aam
adc
or
jnp
push
mov
push
(bad)
push
popa
mov
jnp
aam
outs
sub
lds
ja
loopne
popa
pop
sbb
sbb
jne
dec
xchg
mov
add
and
pop
arpl
jmp
cdq
mov
cs
push
or
call
repnz
push
cs
ins
scas
movs
sbb
daa
adc
jge
jmp
mov
xchg
fcomi
xor
repnz
mov
mov
or
pop
push
repnz
push
pop
das
fisubr
stos
fld
xchg
pop
shl
data16
push
jb
ficom
pop
jno
imul
pop
mov
pop
in
nop
ja
pusha
or
push
scas
fcomp
out
stos
sbb
cmp
sub
jbe
por
or
xchg
or
test
js
xchg
mov
bound
fcom
(bad)
sbb
mov
out
sbb
pop
jnp
dec
cli
jl
pushf
aaa
nop
mov
adc
inc
jbe
in
scas
(bad)
shl
adc
call
adc
fwait
pop
(bad)
popa
dec
ror
add
into
ins
bnd
inc
call
push
adc
sar
test
dec
mov
pushf
daa
es
and
and
cs
lds
mov
mov
out
pop
lahf
push
bound
push
mov
cmp
(bad)
pop
or
or
pop
mov
(bad)
jmp
aam
xlat
fcomp
clc
into
or
push
push
xchg
in
inc
cmps
adc
dec
adc
aas
stos
pop
xchg
in
sub
test
push
sti
popa
mov
cli
ret
sbb
mov
cwde
mov
cmp
mov
push
jp
mov
sbb
cli
inc
mov
and
add
test
fwait
jl
mov
mov
xchg
inc
mov
mov
and
shr
and
mov
daa
sbb
push
jl
popf
stc
test
mov
inc
mov
cli
mov
jmp
mov
xchg
sbb
jp
les
mov
ja
or
mov
push
cmc
mov
cmp
mov
retf
ja
fwait
cmp
dec
fsub
cwde
movs
mov
mov
pop
pushf
add
xchg
test
cmc
pop
mov
mov
fsubr
fbstp
cmp
aaa
stos
ret
push
gs
dec
mov
call
jl
jmp
rol
pop
test
push
retf
push
lea
cmps
retf
imul
sub
add
jb
xchg
inc
mov
inc
fs
adc
mov
dec
mov
enter
dec
adc
fucomp
push
int3
lea
ds
inc
(bad)
(bad)
cli
in
push
adc
jge
dec
mov
jo
call
add
xchg
pop
out
dec
stos
out
inc
scas
mov
push
popf
jmp
lods
test
in
cmp
repz
push
or
in
sbb
out
add
and
sbb
or
xchg
popa
push
cwde
in
sbb
cmps
bound
stos
add
repnz
lea
xor
cmp
or
sbb
ins
mov
add
xlat
sub
outs
inc
test
fnstsw
prefetch
bound
js
mov
xchg
ret
stos
gs
outs
mov
enter
mov
mov
cld
jo
ins
or
ror
xchg
pop
dec
push
in
xchg
push
mov
mov
adc
mov
jecxz
and
lea
sahf
inc
sbb
stos
mov
cdq
ins
or
int3
sub
icebp
pop
jo
stos
adc
js
imul
daa
das
and
mov
lds
movs
push
ss
fsub
in
sbb
pop
rcl
pop
test
int
leave
bound
mov
mov
mov
fimul
in
arpl
js
sahf
movs
sbb
and
jl
popa
pop
arpl
dec
sar
pop
mov
sar
pop
icebp
ja
mov
out
mov
in
xchg
movs
dec
cmps
adc
xlat
int3
clc
mov
inc
mov
dec
ss
jmp
pop
cmp
lds
xor
clc
nop
retf
aad
dec
push
dec
inc
pop
aaa
bnd
jnp
cmp
push
retf
add
repz
outs
dec
mov
jecxz
mov
push
mov
cwde
std
(bad)
out
dec
lods
mov
mov
add
sub
or
(bad)
jns
mov
adc
sub
leave
cli
ds
pushf
cmp
movs
scas
mov
test
mov
mov
jecxz
cmps
daa
fcmovu
jg
inc
mov
mov
call
outs
cmc
iret
repz
mov
aam
outs
je
jle
mov
fisubr
push
cmc
call
xchg
ret
inc
mov
pop
add
(bad)
mov
pop
in
leave
int3
push
ss
leave
ja
pop
mov
and
icebp
inc
pop
inc
jmp
ds
pop
js
aas
sub
lea
mov
pop
call
mov
fisubr
icebp
push
imul
lods
xor
neg
xchg
sub
imul
mov
inc
sbb
in
gs
cdq
inc
ja
inc
or
hlt
mov
or
fs
or
sar
inc
bound
mov
xchg
pop
(bad)
out
add
sbb
outs
and
lods
push
sbb
push
daa
loope
mov
out
nop
aaa
jno
nop
adc
enter
ficomp
fprem1
mov
pop
scas
iret
sar
cdq
adc
std
lahf
icebp
adc
ins
push
out
xchg
jno
sbb
mov
ret
stos
enter
retf
dec
push
js
pop
push
repnz
pop
int3
mov
push
xchg
retf
jno
push
mov
sub
ds
pop
(bad)
cmp
cli
rcr
out
into
popa
mov
and
and
call
mov
inc
rcl
pop
mov
cmps
push
mov
pop
icebp
(bad)
and
cdq
dec
cmpxchg
jecxz
mov
stos
cli
ins
push
xor
fldenv
adc
div
xchg
add
push
jne
ds
inc
mov
push
lods
adc
adc
jge
leave
mov
sub
mov
mov
stc
call
sbb
xchg
clc
xor
pushf
iret
cmp
and
repnz
mov
rcl
retf
ds
mov
pop
scas
xor
hlt
popa
jmp
cmp
aam
dec
ja
call
xor
aaa
jle
jg
mov
or
(bad)
inc
sbb
nop
or
popf
(bad)
in
or
inc
push
xchg
inc
jne
mov
lods
sbb
pop
out
dec
cmp
jmp
pushf
cmp
adc
fwait
test
leave
pop
aam
shr
mov
test
xor
loope
push
push
fs
mov
or
xchg
sbb
test
scas
ins
inc
sbb
ds
xchg
cmp
fild
test
inc
jl
xchg
in
js
lock
xlat
rcr
push
push
jae
call
mov
mov
ds
inc
sbb
and
cmps
fdivr
subps
sar
ins
xor
mov
rcl
add
sub
add
pop
imul
cdq
mov
sbb
or
or
and
mov
fadd
shl
imul
mov
cmp
push
cmp
jmp
ja
dec
pop
and
adc
cli
xchg
fisubr
test
imul
or
or
fidivr
and
mov
cmp
add
sbb
mov
popf
retf
mov
dec
add
(bad)
(bad)
mov
fstp
cli
push
xchg
shr
(bad)
popa
cmps
outs
(bad)
sahf
jl
cmp
mov
cmps
call
and
adc
and
loopne
daa
xor
ss
and
cs
fdivp
mov
xor
aas
pop
adc
dec
mov
mov
sbb
fmul
js
jne
dec
outs
inc
out
pop
ja
xchg
and
ret
jae
outs
fwait
jecxz
mov
pop
je
aam
dec
add
gs
add
cmps
or
jmp
cdq
ror
out
inc
mov
leave
jns
mov
movs
adc
retf
ffree
out
push
cmp
or
invd
aas
in
mov
xor
push
ja
mov
sahf
jge
iret
int3
pop
mov
mov
push
frstor
adc
dec
cdq
popf
por
adc
dec
stc
data16
int3
xchg
jo
push
in
pcmpeqw
mov
mov
adc
je
hlt
loop
jmp
or
mov
cmps
pop
and
sub
int3
add
fs
adc
sub
inc
repnz
das
ret
xor
push
pop
sub
ja
push
add
daa
mov
add
sub
es
add
pop
add
push
scas
shl
pop
(bad)
fbld
jns
sub
ror
mov
arpl
sbb
add
or
and
js
in
inc
xchg
adc
and
dec
mov
pop
push
or
test
ficomp
aaa
std
xor
shr
push
inc
ret
scas
cdq
pop
ja
add
out
push
or
or
(bad)
pop
pusha
jno
sub
mov
call
push
mov
and
mov
xchg
inc
call
jo
sbb
push
xor
clc
popf
add
hlt
or
in
and
pushf
lds
jp
jne
arpl
jnp
not
ins
inc
stos
loope
inc
mov
sar
jle
mov
or
jb
pop
dec
push
cmps
push
sub
in
cld
xchg
jg
cmp
mov
daa
cmp
fsub
pop
mov
sub
je
imul
rcl
mov
add
cmp
sahf
mov
pop
xchg
pop
xchg
push
push
test
sub
imul
call
jne
fldenv
jmp
es
adc
enter
push
push
fiadd
mov
and
sahf
bound
das
test
popf
scas
jg
outs
sub
gs
or
xlat
aas
aam
xlat
test
in
jo
dec
mov
and
in
je
and
and
mov
fdiv
mov
clc
mov
pushw
rcl
popf
jnp
sub
popf
jae
sbb
sahf
call
xor
mov
xchg
in
or
sti
jae
test
and
mov
adc
push
sbb
cmps
jge
rcr
xchg
mov
xchg
shr
sub
push
jge
mov
add
fs
add
inc
cmp
push
fist
jge
sub
cdq
shr
dec
imul
push
hlt
mov
sub
jnp
retf
fdivr
xchg
pop
sub
inc
jae
cdq
test
dec
inc
or
xchg
fldcw
inc
out
enter
xchg
into
icebp
imul
out
jmp
cmp
inc
mov
jb
jp
cmp
xchg
call
pop
lahf
stc
mov
sbb
ret
sub
and
stc
dec
add
mov
add
sar
dec
int
mov
xor
outs
jns
pop
inc
mov
mov
mov
stos
and
jecxz
lahf
test
sbb
push
push
movs
adc
scas
cmps
jp
idiv
mov
sbb
cmp
jb
jp
inc
cmp
jge
sbb
push
in
aad
mov
sbb
cmp
imul
and
ficomp
dec
sbb
cli
add
push
cli
dec
dec
dec
mov
dec
adc
sbb
add
adc
xchg
jmp
add
div
adc
xor
enter
lock
mov
xchg
fucomi
loopne
and
shr
xor
test
pop
js
aam
fwait
stos
jmp
jecxz
cld
lods
shl
hlt
mov
sahf
push
fnsave
cmp
out
sbb
sub
jmp
sbb
push
dec
cmp
call
mov
cmp
lea
popf
and
push
sub
dec
cli
es
cmps
pop
cwde
inc
lock
outs
je
dec
xor
icebp
push
sbb
loop
aaa
jmp
dec
rcl
or
mov
jo
xchg
xlat
and
mov
clc
sub
mov
call
fld
xor
hlt
ins
jle
lods
inc
neg
jp
sub
mov
cli
rcl
nop
fnstenv
ja
int
or
xor
inc
jo
cmp
dec
mov
fsub
les
bound
pusha
inc
ficom
call
mov
inc
xchg
fwait
sbb
fsubr
inc
enter
mov
jp
push
(bad)
add
cmps
sbb
mov
(bad)
out
test
icebp
push
test
mov
pop
lock
mov
fst
outs
xchg
add
scas
inc
movs
cli
fs
and
mov
sub
adc
shr
imul
out
xchg
cli
out
cwde
xlat
stc
ucomiss
cmp
jecxz
hlt
inc
mov
(bad)
scas
test
or
mov
imul
mov
(bad)
adc
(bad)
sti
or
mov
aaa
imul
mov
movs
mov
es
les
popa
retf
push
jge
dec
stos
xor
mov
jp
popa
add
mov
popa
sbb
dec
fiadd
adc
(bad)
fs
and
call
jp
inc
pushf
inc
cmps
in
(bad)
xlat
fimul
gs
or
loop
jno
and
add
nop
jnp
je
jnp
out
fistp
inc
gs
inc
or
dec
imul
fist
iret
cmp
test
push
push
shr
xor
and
in
out
mov
retf
and
mov
mov
add
mov
fs
jo
xchg
sbb
popa
and
or
mov
jb
push
cld
cmps
outs
fst
aad
jecxz
add
mov
stos
dec
outs
sub
jecxz
cmp
mov
xchg
test
dec
outs
mov
add
cli
and
jg
inc
cmps
arpl
inc
jb
in
lea
add
add
cmc
dec
sar
add
sbb
jns
jae
aad
xchg
dec
adc
or
xchg
mov
pop
jno
aam
add
dec
dec
adc
fisubr
jns
add
mov
mov
pop
sbb
add
pop
out
xor
jne
fs
shl
adc
xchg
inc
iret
pop
dec
fidivr
fs
ja
call
je
dec
mov
mov
cmp
test
fucomip
xor
inc
sub
int3
mov
jge
xchg
add
fsubp
cmps
xor
sbb
mov
jle
mov
repnz
in
pop
stc
push
add
add
ins
lahf
mov
add
js
fidiv
out
mov
adc
and
or
dec
ret
fpatan
ins
bound
not
mov
mov
mov
ds
rcl
cmp
xchg
aad
(bad)
adc
mov
retf
in
retf
stos
jecxz
pop
popa
pushf
adc
sub
mov
(bad)
subps
pop
test
inc
push
out
rol
sub
push
mov
lea
mov
jns
stc
sub
jp
mov
ret
sti
xor
out
stos
ds
mov
fistp
je
xchg
stos
movs
pusha
mov
pop
and
xor
pop
sub
and
mov
mov
jne
aaa
and
ret
xchg
dec
(bad)
and
sbb
std
lahf
or
inc
repnz
cs
fscale
loope
pop
jg
pop
xor
mov
fidivr
daa
cmp
push
in
add
stos
rcr
imul
jb
loopne
stos
adc
mov
jb
add
pop
cwde
and
mov
icebp
cmp
mov
jp
outs
ins
mov
push
xchg
inc
outs
or
ins
jbe
test
or
sub
movs
jae
pop
lahf
in
leave
clc
aaa
cdq
sub
test
mov
out
dec
xor
cmp
in
rol
sbb
stc
repnz
push
pop
inc
dec
test
mov
paddsw
dec
in
adc
icebp
xor
mov
test
jb
loop
and
xchg
call
jecxz
cs
movs
int3
jo
push
mov
lock
icebp
mov
mov
loope
je
mov
add
push
fdivp
xchg
pop
sti
push
mov
pop
or
(bad)
in
fbld
pop
push
xchg
xchg
ins
jo
add
xbegin
imul
xor
out
fist
bound
fdivr
(bad)
sahf
inc
movs
out
scas
in
and
rcl
je
push
push
cmc
dec
sbb
adc
sbb
add
shl
jbe
dec
dec
cmp
imul
push
inc
popa
cmp
fwait
adc
inc
and
add
adc
mov
imul
mov
mov
sbb
neg
or
pop
pop
daa
push
ffree
cmp
and
dec
in
jge
shl
cmps
sbb
ss
por
ss
lock
cmp
mov
in
ds
sti
xchg
loope
data16
jmp
sbb
jg
push
mov
push
in
repz
aas
adc
add
cli
stc
push
lea
shl
outs
pop
pop
cmp
sub
adc
push
sbb
dec
stos
repz
ret
mov
ficom
mov
jb
cmp
xchg
inc
jnp
fisttp
inc
into
push
neg
xor
jo
aaa
cmp
mov
shr
gs
sub
ins
sub
fnstcw
inc
pop
mov
push
push
test
jae
xchg
ins
xor
(bad)
std
aam
or
mul
mov
out
mov
iret
mov
xchg
xchg
jmp
pop
or
test
xor
cmc
test
mov
ja
push
xor
dec
in
retf
sbb
mov
xlat
cmp
cdq
stos
ss
test
xchg
push
mov
ins
or
out
aad
push
mov
xor
fs
dec
dec
mov
or
mov
push
stos
or
xor
mov
sub
div
add
mov
fld
ins
int
sub
pop
and
jb
xor
repz
ror
xlat
add
call
addr16
repz
(bad)
mov
cs
mov
lods
les
stc
add
mov
jnp
lahf
pop
stc
inc
gs
(bad)
ret
adc
ror
scas
cmp
add
fcomip
xor
iret
sub
jno
fwait
push
stos
cmp
js
push
test
cli
sub
add
or
mov
or
repnz
adc
fisub
adc
arpl
ja
out
inc
nop
stos
nop
(bad)
adc
lods
cmps
xchg
fsub
jmp
int
pop
sar
(bad)
jmp
push
lahf
pushf
add
inc
aaa
xchg
jle
cmp
xor
sub
adc
leave
lea
add
jg
je
mov
jno
mov
out
cli
lahf
and
add
out
lods
xlat
add
(bad)
mov
xchg
sbb
clc
pop
adc
movs
sub
and
sub
movs
les
call
les
dec
sbb
pop
inc
pop
stos
pop
pop
adc
sbb
movs
nop
mov
sbb
adc
add
jmp
(bad)
stos
ds
arpl
in
out
cmp
stos
xchg
das
pop
in
ins
aam
jo
test
std
mov
ja
push
mov
add
sar
pop
test
sub
push
mov
call
int
and
mov
loop
push
jo
sub
mov
jb
(bad)
rol
xchg
and
dec
sbb
movs
sti
adc
outs
into
mov
pushf
lea
or
jne
aaa
ror
or
inc
xor
test
push
arpl
pop
dec
fwait
outs
imul
adc
and
jnp
mov
sbb
xchg
mov
neg
rcl
mov
push
(bad)
inc
mov
inc
and
pop
mov
and
aas
inc
push
mov
mov
push
test
imul
aas
bound
aas
rol
mov
xchg
mov
xchg
cmp
push
add
(bad)
mov
push
rcr
outs
cld
stos
pop
mov
neg
adc
ror
sub
enter
add
or
dec
test
or
std
dec
jecxz
repz
pop
mov
inc
test
fisubr
neg
shl
mov
jmp
push
out
mov
sbb
dec
mov
mov
nop
lock
jge
(bad)
lds
dec
out
aam
sub
addr16
lods
jb
sar
pop
dec
sub
jge
dec
and
mov
leave
dec
mov
jo
dec
pop
inc
dec
pop
psubq
and
inc
sbb
add
rol
jae
mov
gs
test
sbb
addr16
cmp
sbb
dec
cld
daa
xchg
mov
mov
pop
popa
mov
mov
movs
ja
lods
aam
dec
fistp
jge
mov
addr16
outs
push
(bad)
fwait
fs
inc
movs
pop
jmp
out
mov
pop
pop
xor
popf
stos
dec
repz
adc
xchg
mov
fnstcw
sbb
inc
sbb
retf
xor
es
(bad)
jb
push
test
loop
sbb
cmp
mov
bound
or
dec
loopne
dec
dec
retf
imul
jmp
sbb
sbb
in
add
int3
xchg
daa
dec
mov
mov
push
mov
mov
jns
icebp
mov
xlat
cmp
sbb
pop
stos
out
je
int
shl
mov
(bad)
pusha
fcomp
fstp
adc
and
inc
mul
fucomi
xchg
fild
les
inc
sbb
adc
movs
and
add
mov
(bad)
not
(bad)
sub
call
push
xlat
xchg
jnp
xchg
das
js
mov
jmp
inc
hlt
popf
ror
cmp
dec
sub
sub
adc
aaa
mov
imul
cmp
std
push
sub
xchg
sub
inc
ret
fmulp
xchg
sbb
cmp
adc
mov
cmove
sub
pop
imul
pop
lods
xor
mov
in
cs
jp
xchg
mov
mov
leave
cmp
pop
mov
clc
rol
ret
adc
adc
mov
sbb
jne
out
cmp
daa
xchg
jae
pop
mov
sbb
cli
jp
into
je
hlt
fwait
ret
loope
pop
jne
and
in
jmp
dec
(bad)
jno
std
imul
xchg
pop
mov
and
pop
aam
adc
mov
pushf
adc
mov
pop
retf
out
jae
mov
sub
jae
test
xchg
push
les
(bad)
dec
ret
xlat
vmread
call
pop
inc
dec
xor
push
imul
mov
frstor
inc
sar
sbb
jge
or
pusha
loop
stc
xor
(bad)
or
rcl
into
aam
pop
xor
jo
arpl
mov
lds
fs
push
mov
and
xor
sub
mov
bound
loope
std
in
imul
int
add
mov
retf
dec
xchg
int3
jmp
xchg
sub
mov
outs
popa
fisubr
ds
pop
clc
lods
shr
mov
push
add
(bad)
repnz
mov
push
shl
or
and
xor
adc
jns
cmp
ret
push
call
xlat
out
movs
pop
ror
inc
and
add
jmp
jle
movs
stos
es
arpl
nop
mov
sub
add
pop
and
call
loop
add
cwde
mov
in
aaa
aaa
imul
daa
retf
xor
repz
lods
popf
push
fisub
fbld
xchg
fstp
cmp
xor
jecxz
(bad)
jmp
sub
xor
xor
push
sub
retf
aas
jns
adc
adc
xor
sti
aaa
adc
adc
or
pop
(bad)
push
ret
pop
pop
imul
and
jb
push
out
push
adc
jmp
shl
shl
push
lods
push
lods
dec
mov
mov
xor
pop
and
dec
int
dec
test
(bad)
or
push
hlt
push
enter
das
das
arpl
adc
lahf
or
pop
enter
and
dec
dec
mov
(bad)
call
sti
jp
dec
aaa
js
xchg
std
bts
clc
adc
jbe
aas
bound
xor
aas
sub
ins
icebp
mov
fisttp
outs
dec
leave
sbb
pop
cmp
or
das
cdq
sub
cmp
(bad)
stos
xchg
icebp
add
sbb
mov
fadd
push
out
aaa
cs
pusha
mov
sbb
sbb
ret
sub
ret
fs
(bad)
cli
inc
dec
xor
cmps
imul
or
(bad)
mov
push
cld
sbb
imul
push
inc
cwde
mov
scas
leave
push
es
lock
test
jnp
jecxz
dec
jno
je
push
call
shl
mov
inc
sub
(bad)
push
sub
xor
(bad)
(bad)
ds
out
pushf
mov
xchg
xchg
and
sbb
xor
fwait
iret
imul
(bad)
pop
sub
fwait
xchg
out
call
mov
movs
mov
push
mov
(bad)
stc
cmp
stos
xchg
cmc
push
imul
fsubr
adc
lods
mov
inc
mov
mov
add
add
ffreep
adc
(bad)
jge
int
adc
(bad)
nop
ret
fucomp
sbb
add
imul
rol
dec
jbe
sbb
push
cli
mov
cwde
adc
sub
sbb
adc
jnp
js
test
cli
call
lahf
xchg
dec
mov
xchg
ret
movs
push
test
cmovne
mov
loop
mov
jmp
les
rcl
mov
push
or
gs
mov
cld
(bad)
out
jg
ret
fild
dec
xchg
adc
outs
out
mov
mov
test
xor
popf
popa
pop
dec
sar
ss
jb
cmp
idiv
cmp
cmps
jb
cmp
div
push
cmp
fs
(bad)
enter
or
add
daa
mov
aad
fcomp
mov
fcomip
cmc
mov
mov
xor
mov
jl
or
mov
fyl2x
xor
and
icebp
retf
mov
add
adc
popf
mov
hlt
bound
adc
add
adc
sub
repz
(bad)
mov
pushf
into
cmp
inc
ja
mov
pop
xor
jno
xor
inc
sub
mov
in
out
xor
mov
push
mov
push
stos
popa
movs
jae
adc
adc
aad
and
rcl
pop
xchg
outs
int3
xor
ret
not
rol
cwde
sar
xchg
mov
sahf
loope
xchg
mov
xchg
push
xor
popa
xlat
push
fwait
jmp
data16
out
call
xchg
cmp
sbb
add
lahf
or
push
cmp
push
into
fstp
fcmovb
(bad)
cmp
lock
mov
xor
push
pop
sar
xor
in
mov
call
lods
out
pop
fsubr
and
shl
pop
cmp
jnp
mov
loop
jbe
pop
adc
xor
mov
mov
hlt
add
call
or
daa
jnp
mov
imul
lds
cmp
push
sub
fistp
ins
mov
mov
out
leave
mov
jne
jnp
shl
mov
shl
popf
dec
pop
enter
fcomp
adc
popf
repz
stos
pop
arpl
add
retf
push
cdq
xchg
ja
lds
cmp
loope
fimul
xchg
hlt
test
pop
in
pop
std
sub
jno
or
push
or
aas
mov
inc
xor
push
arpl
test
gs
inc
mov
jns
push
mov
mov
or
jnp
mov
repnz
adc
movs
fwait
push
(bad)
fst
add
int3
mov
rol
addr16
daa
mov
push
pop
mov
ja
mov
into
mov
fdivr
pop
adc
fs
mov
ret
mov
ds
sbb
mov
pop
and
(bad)
scas
loop
mov
call
aad
sbb
pop
inc
fmul
sbb
mov
daa
xchg
test
rcr
outs
leave
add
aam
and
mov
inc
ret
pop
test
and
dec
jmp
xor
out
adc
iret
lea
xlat
sbb
jo
shl
jno
adc
mov
ja
inc
outs
mov
cmp
push
inc
adc
adc
push
inc
jl
adc
shl
pop
cmp
push
icebp
dec
lock
push
push
arpl
retf
pop
ss
repnz
repz
mov
pop
jle
add
sub
jno
add
fimul
js
adc
push
jne
sub
je
fist
mov
int
aas
or
pop
push
sub
hlt
push
cmp
repnz
jle
cmc
je
es
push
xchg
xchg
push
(bad)
jecxz
sti
mov
pop
nop
call
cmp
pop
inc
int
mov
adc
push
xlat
dec
mov
add
fbld
js
popf
fist
in
aad
pop
mov
ja
push
pop
aas
pop
bound
pop
(bad)
repnz
loop
xchg
ins
jne
test
leave
cmc
aad
scas
fdivr
adc
jb
push
mov
retf
fisttp
jecxz
inc
sbb
and
shl
ins
mov
(bad)
out
mov
loop
movs
xchg
hlt
sbb
ja
shl
push
push
adc
mov
repz
shr
std
pop
xchg
mov
std
xor
sbb
ss
movs
lds
dec
inc
cli
sahf
mov
push
je
leave
dec
fdiv
sahf
mov
adc
adc
jns
das
pop
dec
in
repnz
fcomp
pop
in
sbb
push
inc
enter
sbb
cli
adc
mov
jge
or
sbb
clc
mov
test
(bad)
xor
aad
xchg
stos
add
scas
sbb
out
fnstsw
iret
xor
dec
repnz
adc
xor
or
jbe
cmp
ja
cmps
shl
pop
cmc
imul
push
repnz
adc
push
test
pushf
dec
xchg
mov
je
stos
dec
jmp
xchg
leave
bound
jecxz
je
lods
ja
vpmacsdd
mov
call
xchg
jae
push
rcl
push
jne
pop
push
(bad)
mov
ret
cmp
push
pop
icebp
inc
push
xlat
mov
test
enter
loope
std
pop
xchg
mov
dec
xchg
aaa
mov
jb
adc
out
fimul
cmps
dec
xchg
vpsraw
dec
or
retf
and
in
in
sbb
mov
ja
popa
test
or
adc
ret
repz
in
mov
ret
xchg
cmp
mov
push
repnz
(bad)
xor
sar
xchg
sub
pop
inc
xchg
pop
xchg
fisubr
and
sbb
add
jno
shl
jmp
dec
jnp
inc
out
sti
mov
jl
ror
cmp
out
xchg
xor
loop
pop
push
xchg
and
mov
test
dec
mov
fistp
mov
ds
leave
push
lods
and
and
mov
mov
fild
xchg
pop
xchg
adc
imul
sbb
icebp
mov
sub
jns
leave
sbb
div
mov
jle
in
xor
popf
adc
lods
cld
adc
test
int3
out
fld
int
pusha
movs
jle
xchg
pop
in
(bad)
(bad)
test
fnsave
inc
dec
add
jo
stos
mov
mov
retf
dec
aaa
ja
mov
movs
loopne
or
fisttp
shl
xchg
mov
jae
dec
lahf
sub
mov
lods
jae
pusha
or
pop
push
jae
inc
sahf
inc
jge
xchg
add
lock
and
inc
dec
int
cmp
add
push
push
cmps
dec
test
sbb
jp
dec
and
(bad)
cmps
mov
pop
pop
std
out
scas
movs
(bad)
sub
push
xchg
ins
lods
fiadd
retf
dec
js
mov
add
pop
inc
push
pop
xor
movs
retf
mov
nop
pop
pop
jnp
dec
push
je
fisub
mov
frstor
std
cmp
leave
xor
std
fild
out
leave
into
jle
mov
and
shl
sub
mov
fmul
push
add
jbe
cmp
and
mov
arpl
fimul
push
es
push
scas
cmp
push
out
push
mov
push
jle
test
std
and
push
mov
jmp
into
in
xor
mov
mov
cmp
aad
pusha
in
mov
xlat
pop
jl
mov
aaa
add
and
and
inc
sub
adc
sbb
pop
adc
dec
outs
rcr
add
pop
popf
lds
inc
imul
cli
int
xchg
adc
jmp
mov
(bad)
xchg
xlat
imul
or
sub
xchg
jg
scas
mov
enter
cmp
bound
pop
xchg
sub
inc
in
mov
cmc
syscall
cmps
add
xchg
inc
cmp
loopne
std
add
xor
dec
out
xor
lahf
js
push
sbb
stos
push
mov
std
xchg
lds
adc
jle
jmp
xor
mov
push
stos
or
mov
sub
cmp
vmread
and
cdq
push
call
or
fldenv
jb
pop
mov
repz
sbb
cmp
add
add
out
(bad)
leave
mov
inc
enter
inc
out
lods
or
pop
push
test
xchg
add
adc
inc
mov
jb
sbb
or
mov
push
jmp
mov
ror
jge
mov
(bad)
jns
mov
dec
sbb
ds
mov
sar
or
jecxz
mov
xor
adc
mov
mov
call
mov
outs
push
(bad)
mov
mov
sbb
movs
inc
push
aad
mov
cmp
sbb
mov
pushf
fcomp
cld
dec
cmp
cmps
call
xchg
adc
push
jg
cmps
(bad)
sub
add
test
in
dec
gs
pushf
cli
ja
mov
and
imul
xor
and
push
mov
and
pop
pop
inc
cmp
mov
jl
or
fdiv
outs
rcl
mov
xchg
nop
xor
xchg
sti
ja
dec
and
mov
xor
push
lods
mov
fst
int3
jecxz
push
rcl
adc
xchg
sub
or
cwde
cmc
test
cmp
arpl
cmp
lods
(bad)
loopne
or
scas
mov
(bad)
mov
push
(bad)
sub
xchg
arpl
test
jmp
pop
mov
cmps
pop
and
nop
adc
push
lahf
xchg
mov
and
push
inc
cdq
sbb
cwde
retf
sub
jmp
aaa
ins
mov
dec
push
dec
push
push
daa
retf
inc
xchg
adc
retf
mov
pop
enter
js
test
xchg
jl
xchg
cmp
sbb
call
out
lds
pop
mov
sar
xchg
dec
sbb
jmp
mov
aam
into
jo
loop
push
fldcw
adc
cmp
sbb
fadd
mov
mov
(bad)
icebp
das
nop
cmp
loope
cmps
inc
push
fwait
and
ins
push
cmp
fisttp
push
cmps
movs
sub
test
pop
push
fisub
(bad)
push
enter
repz
xchg
xor
imul
retf
fdivr
jb
mov
jg
and
aas
in
mov
sbb
cmps
in
push
in
sbb
mov
inc
mov
or
mov
mov
loopne
adc
cli
mov
xor
xor
mov
jecxz
and
loope
pusha
adc
xlat
aaa
cld
sbb
mov
mov
popa
and
sahf
call
test
aad
cmps
mov
dec
mov
and
xor
dec
loop
aaa
inc
(bad)
push
cwde
push
or
mov
pop
inc
mov
jge
mov
cmp
test
cli
cwde
jns
lods
cmp
lock
in
mov
rcl
pop
and
test
es
sub
cmp
inc
sub
ret
sub
sbb
inc
(bad)
je
push
fwait
xchg
mov
inc
add
push
arpl
out
scas
xor
sub
cli
(bad)
(bad)
and
pop
in
(bad)
in
add
repz
sub
mov
jmp
sar
retf
dec
int
or
aaa
int3
xor
jge
repnz
hlt
aam
fadd
in
jns
or
ret
ret
dec
lods
xor
repnz
jnp
retf
ss
xor
jb
mov
outs
(bad)
popa
jp
mov
retf
push
aad
(bad)
xor
ds
retf
sbb
call
das
je
and
popa
imul
add
inc
(bad)
ss
dec
inc
(bad)
sbb
das
xchg
lahf
fnstenv
int3
out
mov
ss
or
jb
ins
in
mov
adc
jns
push
inc
push
adc
lods
xchg
inc
adc
pusha
test
daa
cmp
out
dec
adc
pop
mov
in
pop
inc
cmp
retf
into
call
mov
mov
clc
das
sub
lock
fsub
mov
mov
(bad)
xlat
retf
mov
outs
or
iret
ins
call
jo
dec
sbb
push
or
clc
and
sbb
retf
add
fsub
(bad)
dec
mov
lock
push
cmps
aaa
iret
jae
stos
pop
jae
fimul
inc
cwde
push
xchg
out
aam
fstp
pop
dec
pop
mov
movs
daa
inc
cmps
xchg
adc
rcl
ins
cmp
lea
mov
cmc
push
sbb
jbe
push
dec
mov
mov
in
loope
das
and
mov
ja
retf
aad
push
loopne
fwait
push
add
push
mov
les
pusha
in
lahf
push
inc
xor
inc
cwde
pop
daa
add
cmc
fwait
sub
aam
mov
test
pop
xor
mov
rol
(bad)
dec
aaa
xor
pop
cs
btr
retf
add
xor
mov
fisub
inc
add
jl
data16
pop
sbb
xchg
inc
push
repz
jmp
outs
mov
xor
jmp
mov
mov
std
mov
inc
mov
push
cmp
jle
inc
pop
test
popa
test
xchg
ja
movs
xchg
stos
jns
sbb
cmp
movs
or
test
ss
jb
lea
sbb
adc
ror
xchg
jae
shl
pusha
jne
out
mov
mov
and
dec
inc
mov
jns
pop
or
jg
addr16
or
cmp
std
pop
fisttp
or
fisubr
adc
and
mov
mov
test
repz
test
retf
push
jecxz
adc
jecxz
test
out
inc
lds
jmp
dec
add
cli
fsub
push
hlt
imul
xchg
leave
shl
call
jp
mov
pop
mov
push
cmps
cmp
and
int3
adc
adc
cmp
jae
xchg
cld
xor
stc
xor
aas
or
jg
popf
out
mov
sub
pop
mov
xchg
shl
repnz
xor
scas
mov
mov
rcr
out
xor
and
inc
mov
pop
arpl
(bad)
rcr
out
or
inc
bound
sahf
lock
dec
daa
jle
lods
je
cmp
(bad)
in
ins
ins
call
int
add
jg
ins
faddp
jo
stos
arpl
jge
int3
and
lahf
xlat
push
xchg
inc
xchg
and
inc
xchg
mov
mov
daa
hlt
or
dec
mov
(bad)
es
add
and
mov
sbb
add
ins
lea
leave
xchg
push
ret
or
sub
adc
lea
sbb
popa
jge
pusha
pusha
sar
inc
loopne
inc
cli
push
push
xor
sbb
shr
hlt
dec
or
lods
ja
mov
cli
mov
dec
dec
push
mov
fucomi
daa
bound
pop
out
and
xor
mov
sar
ret
sub
sbb
loope
inc
sub
inc
nop
inc
lds
mov
imul
ret
push
inc
sub
outs
xchg
clc
pop
outs
(bad)
fwait
dec
movs
ror
test
test
sub
pop
dec
shufps
fdivr
out
xchg
test
cdq
adc
inc
movs
cmp
and
ret
add
cmp
mov
ja
pop
popf
dec
in
mov
pop
not
fadd
out
fcomp
jmp
ins
(bad)
outs
mov
inc
xchg
sti
mov
sbb
sbb
dec
sbb
pop
add
push
dec
addr16
pop
stos
and
or
mov
inc
push
gs
dec
cld
imul
adc
call
adc
push
sub
mov
mov
fisubr
jnp
xlat
push
xchg
mov
mov
jne
sahf
and
mov
inc
sub
scas
or
xor
push
add
push
sbb
adc
adc
data16
add
pop
nop
mov
add
adc
outs
dec
pop
push
jecxz
pop
xlat
mov
(bad)
out
fwait
ins
xor
xor
inc
mov
loopne
ret
xor
hlt
xchg
or
call
jns
aaa
pop
jne
jnp
lock
outs
xchg
sub
and
xchg
mov
shr
fistp
(bad)
idiv
popf
xor
jbe
je
leave
adc
jne
rcr
push
test
loope
cmp
and
adc
ret
retf
xor
sub
icebp
and
ror
pop
inc
add
out
sub
cld
mov
cmps
mov
in
adc
xchg
xchg
ja
jne
mov
ret
(bad)
mov
out
fld
push
sti
out
(bad)
sar
xchg
fdivr
into
popf
push
in
push
cli
or
push
or
pop
jg
not
jmp
sub
jae
push
test
(bad)
sar
test
test
push
out
imul
fidivr
and
lds
mov
xor
mov
jge
pop
pushf
adc
push
sub
shl
push
fsub
ret
cmp
jne
mov
loopne
stos
cmp
jmp
mov
stos
and
cdq
fist
dec
std
sbb
inc
cmp
in
cmp
dec
pop
popf
mov
xchg
sbb
cmps
xchg
pushf
push
sbb
(bad)
push
xchg
shr
mov
js
enter
cmp
fmul
inc
movs
js
cmps
(bad)
aam
xchg
and
pop
repz
addr16
inc
das
jno
mov
enter
and
outs
jno
aas
mov
xchg
sahf
add
ret
jmp
jno
cs
out
inc
das
movs
(bad)
hlt
aas
mov
in
cmp
or
mov
cmp
and
(bad)
js
pusha
push
pusha
cmp
xchg
ins
cs
mov
cs
sar
jae
imul
out
aam
dec
imul
out
push
test
into
xchg
xchg
(bad)
aaa
sbb
out
out
sbb
ins
pop
xchg
push
push
lds
xor
into
mov
repnz
hlt
repnz
jg
dec
pop
dec
add
call
inc
cmc
ret
rcr
jno
adc
mov
dec
shr
mov
xor
jnp
fcom
loop
les
scas
leave
(bad)
fisubr
hlt
cwde
bound
es
mov
je
and
xchg
pop
xor
fcomp
mov
ins
inc
inc
push
jg
mov
ins
ret
mov
loop
mov
sti
mov
sub
push
enter
mov
jecxz
arpl
add
enter
push
mov
inc
test
dec
fwait
mov
out
jle
mov
pop
cs
cwde
jb
out
cli
movs
adc
adc
cmp
lock
push
test
jge
push
dec
xchg
dec
in
mov
in
sahf
jo
jno
inc
test
adc
dec
neg
jl
aas
jg
cmps
fdivr
test
jmp
fiadd
repz
xor
mov
mov
stc
push
push
fstp
or
fadd
xchg
jmp
jne
mov
inc
outs
fdivp
iret
scas
add
(bad)
outs
out
and
sahf
xchg
lods
test
sbb
movs
inc
int
mov
shl
push
xor
iret
sbb
fwait
(bad)
mov
mov
cmp
repz
popa
cwde
clc
jl
loop
xchg
xor
xchg
mov
jbe
dec
push
int3
sbb
sub
mov
outs
repz
imul
jecxz
push
sub
jo
popf
lock
outs
add
mov
mov
hlt
call
jg
clc
adc
je
enter
push
ins
and
or
push
mov
idiv
out
xchg
(bad)
fild
mov
out
mov
adc
and
fistp
adc
and
sbb
sub
mov
sbb
in
cmp
jns
call
mov
movs
test
xchg
(bad)
je
mov
clc
je
xor
pop
sbb
scas
call
jbe
pop
enter
ja
or
or
sahf
mov
(bad)
add
mov
mov
fsubr
cmps
lahf
push
ins
jo
dec
jbe
out
sub
xchg
(bad)
and
fcmovnu
(bad)
push
pminsw
or
adc
inc
adc
jns
ds
sbb
push
mov
jne
adc
cli
rcl
es
scas
jmp
pusha
retf
push
xor
jg
cmps
cmp
mov
xlat
je
arpl
pop
cld
fs
das
ror
pop
loopne
fst
mov
lea
sbb
adc
sub
mov
mov
imul
das
in
pop
jmp
addr16
inc
xor
cmps
out
jnp
aad
cs
sbb
lods
cmp
push
mov
adc
stos
and
sbb
in
adc
jns
scas
loop
mov
jl
fdivr
xor
cld
lock
xchg
stos
push
inc
jmp
jno
push
xor
xchg
out
or
popf
inc
cmps
out
addr16
xchg
aad
stos
cmp
mov
test
jle
es
loope
les
div
shr
sub
jmp
jecxz
and
inc
cmp
fcomp
mov
retf
ins
js
push
fs
dec
push
pop
iret
pop
cmps
sti
and
out
lods
call
mov
addr16
xor
cld
shr
jge
scas
cmp
push
leave
mov
xchg
sbb
xchg
je
inc
rep
xor
stos
inc
shl
pushf
lods
and
enter
lock
adc
mov
out
js
cmp
mov
and
or
dec
push
repnz
sub
call
imul
sbb
sub
std
push
popf
xor
sti
add
hlt
pop
(bad)
pop
ja
aad
gs
cmc
cmp
retf
pop
shl
cli
call
xor
ficom
xor
push
popa
sbb
push
and
sbb
int
fidivr
(bad)
iret
es
rol
xor
mov
aaa
jo
shr
sub
and
sbb
jmp
xchg
pop
(bad)
stc
pop
lods
in
inc
pop
push
pop
inc
sub
cmp
cmps
ret
dec
movs
add
aad
add
fwait
sbb
mov
add
repz
pop
ja
aam
(bad)
mov
enter
in
cwde
push
stos
jl
add
daa
jae
fdiv
lahf
dec
push
sbb
pop
rcl
repz
mov
ins
mov
ja
mov
fcom
xor
sbb
lea
xchg
pusha
add
pop
pop
mov
cmp
test
mov
and
cld
fist
in
inc
sbb
sbb
mov
shr
rcl
cld
jl
pop
push
pop
mov
push
cmp
clc
pop
dec
retf
(bad)
lock
push
in
outs
xchg
shr
sub
pop
mov
sar
fisubr
add
repz
jbe
out
sbb
add
push
gs
ret
xor
shr
cmp
stos
in
xor
add
sbb
xor
mov
dec
adc
mov
movs
cwde
ja
jne
add
or
xchg
popf
sub
ins
cdq
sbb
inc
ds
fwait
in
push
cmps
xor
pop
sti
push
and
pop
or
sbb
(bad)
and
add
xchg
cmp
es
popf
xor
dec
jle
out
outs
mov
dec
out
(bad)
mov
push
inc
push
sti
cmc
(bad)
in
repnz
add
dec
cmp
push
jnp
and
add
push
int3
enter
sub
adc
fcmove
jo
dec
stos
sbb
(bad)
jo
lods
inc
mov
cdq
call
aaa
pop
xchg
push
out
or
xchg
pop
jne
and
inc
add
cli
pop
test
ds
pop
sub
mov
jne
stos
or
outs
mov
fistp
cmp
sti
xchg
xor
int3
dec
clc
sti
xchg
les
mov
sar
outs
jnp
and
sbb
(bad)
(bad)
leave
mov
or
pop
fwait
pop
out
jg
mov
rcl
jl
mov
push
(bad)
icebp
pusha
push
dec
or
test
les
into
sbb
cmp
cmp
and
jbe
pop
cld
sbb
(bad)
push
aad
mov
and
and
and
adc
sbb
xor
jno
and
js
adc
outs
jne
in
push
mov
mov
push
int3
iret
shr
sbb
nop
pop
in
js
sub
pop
add
mov
mov
mov
pushf
cld
idiv
movs
push
cmp
inc
lds
cmp
dec
sub
(bad)
mov
cmps
mov
push
dec
inc
popf
dec
lea
in
push
jmp
cmp
push
imul
xor
mov
cmp
mov
es
push
jecxz
ins
dec
pop
int
(bad)
(bad)
cmp
pop
mov
mov
pop
add
stc
retf
jae
dec
pop
stos
add
cmp
jne
sar
adc
mov
xor
dec
dec
aad
jae
and
pop
repnz
mov
inc
push
mov
dec
imul
xchg
mov
test
dec
fidivr
test
push
mov
int
(bad)
jmp
fild
(bad)
(bad)
dec
loop
mov
stos
imul
cmps
ins
mov
sbb
lods
test
ja
xchg
cmp
fmul
pop
(bad)
out
mov
int
xchg
fistp
lods
adc
pop
(bad)
jnp
adc
call
aaa
inc
das
xchg
popf
je
stos
ficom
fwait
push
repnz
sbb
or
jb
jb
dec
out
popa
popa
fdivr
scas
mov
pushf
call
inc
jmp
test
mov
mov
or
pop
rcr
(bad)
mov
cdq
gs
xlat
jp
sti
and
adc
(bad)
or
sahf
sbb
add
pusha
int
rep
or
cmps
int
cmp
(bad)
into
mov
loopne
sti
leave
xchg
(bad)
adc
sbb
or
push
out
mov
int
jns
inc
mov
sbb
pop
pop
lea
push
repnz
mov
lock
repz
add
mov
jmp
loope
cmp
stos
mov
mov
popf
repz
mov
pop
sti
xchg
imul
inc
mov
dec
sahf
(bad)
add
push
cdq
mov
or
(bad)
push
pop
fild
mov
mov
cmp
pop
push
std
xchg
mov
bound
into
inc
sub
xchg
xor
inc
retf
pusha
pop
jmp
fwait
cmps
mov
fwait
pop
ins
(bad)
je
cmp
xchg
pop
jmp
add
in
xchg
mov
xchg
loop
imul
ss
sbb
call
inc
jnp
mov
inc
lods
jae
xchg
mov
xchg
test
sbb
cs
fcmovnb
jns
fcomp
sub
cmps
sqrtps
lea
fdiv
std
add
add
mov
xor
xor
inc
test
push
adc
dec
rcr
inc
push
repnz
imul
or
mov
and
int3
xchg
adc
inc
out
into
(bad)
mov
das
mov
aas
les
ds
inc
hlt
iret
jmp
inc
ret
jo
pop
cmp
aad
push
cmp
test
imul
jp
cmps
dec
mov
xchg
test
push
inc
call
movs
pushf
into
jmp
imul
addr16
test
loop
push
leave
or
arpl
out
adc
pop
mov
mov
cmps
ins
loopne
imul
arpl
cmc
cmps
jp
and
cmp
daa
shl
and
mov
add
pop
das
dec
out
and
out
ficom
jmp
retf
push
and
cmp
push
jo
xchg
stc
cmp
mov
outs
cli
fisttp
push
out
int3
ret
push
jg
dec
aam
ds
push
sub
and
mov
adc
push
jl
shl
dec
cmp
xchg
dec
push
int
and
add
jg
into
push
cmp
cmp
imul
ss
ror
retf
dec
push
push
shl
and
(bad)
icebp
gs
out
rol
push
and
movs
dec
sub
jne
jl
or
adc
cmp
lds
mov
inc
adc
xchg
mov
xchg
cld
sahf
jns
mov
sar
(bad)
daa
mov
add
push
outs
adc
lea
clc
jnp
sbb
inc
jo
jno
inc
cmp
xor
frstor
xchg
add
enter
arpl
mov
inc
cli
xchg
jge
adc
mov
push
push
ja
or
jae
fs
xor
mov
xor
pushf
sbb
mov
and
mov
mov
xchg
(bad)
arpl
sbb
into
iret
push
xchg
xor
stos
imul
je
xchg
test
xor
dec
sbb
je
lahf
and
(bad)
std
sub
sahf
xchg
dec
pop
pop
push
sahf
fsub
push
push
sahf
gs
lods
push
cmp
and
shr
in
arpl
jbe
stos
push
mov
pop
fdivr
inc
adc
cli
enter
data16
pop
pop
dec
loope
add
xchg
fbstp
sbb
imul
push
adc
xor
aam
(bad)
fbld
sub
xchg
xchg
push
xchg
xor
scas
sub
and
mov
mov
sbb
sbb
or
sahf
das
cmp
adc
in
rcl
jmp
addr16
cmp
loopne
pushf
jns
dec
and
fld
icebp
lock
out
adc
(bad)
fcomi
mov
test
add
fadd
inc
cmp
scas
aam
and
outs
or
cmps
ds
adc
retf
fist
scas
data16
or
movs
dec
out
(bad)
repz
pop
cmps
inc
mov
imul
mov
mov
cli
push
jecxz
or
lock
sub
fucomip
cmp
test
loope
jp
(bad)
fcomip
pop
enter
and
mov
in
add
push
jge
jno
mov
pop
mov
dec
jge
mov
mov
jg
in
push
push
adc
cmc
mov
addr16
or
ins
dec
data16
xchg
xor
imul
push
push
imul
nop
in
add
and
mov
sub
push
or
jmp
popf
(bad)
sub
pop
retf
cmp
into
xchg
popf
sahf
mov
xlat
or
stos
sub
aad
out
push
adc
xlat
js
mov
push
xchg
inc
xchg
sar
sbb
xchg
stos
loope
std
add
xchg
sub
loop
sbb
jge
lea
mov
iret
adc
mov
dec
mov
and
push
shl
add
adc
or
das
dec
and
nop
sub
mov
mov
ja
push
leave
push
aam
jecxz
push
jae
je
push
loope
xor
pop
hlt
pop
bnd
(bad)
jae
push
jno
cmp
std
cmps
das
ja
pop
xchg
adc
(bad)
and
mov
jmp
cmps
inc
push
push
mov
add
adc
fwait
jl
add
pop
xchg
sbb
idiv
data16
sub
inc
sbb
inc
push
js
test
rol
fidiv
sbb
and
pop
mov
mov
stos
sbb
add
push
xor
stc
movs
int
jmp
fmul
jge
mov
pop
adc
push
xchg
ret
mov
call
inc
mov
mov
push
mov
je
mov
clc
dec
mov
mov
jmp
mov
mov
es
outs
jae
xchg
mov
and
pop
pop
les
pushf
xchg
shl
cmp
adc
jp
mov
ret
mov
pop
push
loope
inc
xchg
ret
or
mov
xchg
xchg
cld
sub
mov
cld
fldenv
xchg
cmp
inc
and
sbb
sub
inc
loop
ss
pop
inc
pop
jo
add
mov
fcom
fsubr
inc
adc
xchg
sub
fstp
jno
pop
jo
sbb
jb
inc
adc
movs
inc
jne
fbld
jg
xchg
inc
test
call
lds
gs
(bad)
into
ficom
cmp
nop
sub
fadd
test
movs
es
aam
lds
inc
iret
fld
push
pop
(bad)
xchg
int
cmp
enter
jno
add
jo
mov
xchg
inc
(bad)
call
sub
stc
jg
mov
and
ret
dec
xchg
xchg
out
add
je
iret
inc
mov
inc
in
test
push
(bad)
call
pop
add
mov
daa
ds
mov
xor
std
test
jecxz
push
shl
push
inc
xchg
cdq
cs
pop
pop
cmp
dec
push
daa
ja
mov
jnp
jno
stc
xchg
outs
add
jg
inc
sbb
test
push
mov
sbb
sub
and
dec
(bad)
bound
xor
clc
push
add
in
daa
pop
bound
ins
js
adc
push
mov
inc
stos
nop
pop
xor
inc
fnstsw
mov
leave
cmp
pop
ins
leave
rcr
sub
sub
cdq
add
rcr
adc
cdq
dec
dec
into
or
pop
mov
xlat
ja
movs
loop
sbb
add
or
sub
popf
ficom
repz
ret
jmp
add
xchg
push
cmp
xchg
cmp
xchg
ret
adc
daa
xchg
dec
sbb
jnp
test
not
inc
pop
add
cwde
inc
dec
lds
into
ins
pop
cmps
std
ror
xchg
scas
push
out
or
xor
out
inc
push
call
outs
fmulp
xor
adc
aam
xor
div
lahf
fimul
mov
out
mov
or
push
and
xor
dec
imul
je
loope
mov
xor
popa
sub
push
pop
dec
call
or
aas
out
(bad)
retf
out
iret
sub
adc
jno
inc
jg
das
jno
jne
dec
sub
retf
fwait
jg
mov
dec
sbb
xchg
mov
(bad)
adc
inc
inc
out
xchg
ret
std
add
xchg
xor
mov
outs
(bad)
xor
dec
retf
pop
fdivr
and
xor
in
and
and
es
jg
out
aad
imul
lock
sub
bound
jg
das
push
mov
and
gs
mov
adc
jmp
test
nop
(bad)
fwait
dec
loopne
daa
add
jl
fistp
js
jb
(bad)
ficomp
xchg
fs
lds
fs
adc
xor
lahf
and
add
mov
or
hlt
(bad)
div
in
xchg
ret
lds
test
cli
pop
add
xor
xchg
dec
movs
(bad)
push
xlat
mov
xchg
iret
jno
ds
lods
ss
add
enter
jecxz
in
mov
ins
push
popf
xchg
xor
adc
adc
fs
scas
(bad)
or
movs
lock
inc
dec
(bad)
mov
ins
out
bound
adc
xor
push
fst
ss
jae
cmc
lea
fidivr
jg
popf
aad
neg
dec
gs
or
cmovg
xchg
inc
pop
fst
fbld
loop
inc
arpl
mov
push
scas
push
xor
xchg
mov
mul
push
mov
mov
lods
fldcw
add
shr
sub
dec
push
adc
shr
retf
rcr
hlt
dec
fadd
(bad)
js
inc
ja
and
test
xchg
lods
add
inc
cmps
adc
jne
arpl
dec
scas
or
add
leave
pop
aam
xlat
inc
sti
sbb
mov
neg
sub
int3
mov
cdq
das
mov
ffreep
or
cwde
cwde
push
xchg
hlt
shr
mov
mov
jne
xor
jbe
ret
adc
jge
dec
and
xchg
(bad)
xor
fild
fist
ret
loop
mov
mov
inc
in
xchg
fwait
mov
pop
movs
cmc
loopne
aaa
sub
mov
and
or
jno
pop
cmp
push
sub
mov
aas
arpl
sub
fcomi
pop
push
stos
fdiv
mov
popa
addr16
jle
mov
test
in
je
mov
movs
enter
push
pop
je
inc
sub
push
pop
mov
xchg
std
xchg
xchg
inc
and
iret
adc
jbe
xchg
test
js
and
repnz
outs
mov
inc
dec
movs
fbld
clc
xchg
adc
or
test
fsubr
adc
scas
xchg
jb
in
mov
clc
sub
icebp
aas
shl
les
sub
(bad)
mov
jae
push
push
stos
jge
hlt
jl
mov
(bad)
push
xor
cmp
or
(bad)
out
or
std
call
pop
test
lock
lock
out
jo
xor
nop
sbb
test
dec
aaa
sub
inc
jnp
arpl
pop
jg
or
inc
dec
repz
test
bound
pop
ja
imul
push
fistp
cs
pop
fs
leave
pushf
rol
fdiv
and
int3
mov
cmp
cmc
adc
jle
int
add
pop
xchg
xor
js
in
xor
sahf
cwde
push
xchg
or
jbe
push
jne
add
cmp
popa
sbb
dec
mov
cmc
aam
inc
cs
inc
xor
daa
dec
sti
mov
imul
jp
mov
loopne
gs
jb
test
cdq
jecxz
xchg
inc
push
push
or
es
(bad)
sbb
mov
dec
xchg
rcr
inc
repz
xchg
mov
(bad)
sbb
jl
push
jmp
call
fs
mov
adc
jmp
and
shl
sbb
cmp
dec
lahf
fadd
sub
mov
mov
push
mov
xchg
(bad)
jle
loope
in
aam
jg
jno
mov
or
or
push
cmp
scas
pop
cwde
shl
add
(bad)
jle
call
dec
aaa
imul
js
cmp
aas
mov
pop
scas
or
loopne
es
loopne
jl
dec
pop
cmp
not
jmp
int
push
jl
cwde
lea
and
adc
push
mov
push
jmp
nop
cmps
movs
movs
scas
out
test
fnstcw
jo
sub
push
test
jb
mov
inc
cmp
fmul
cs
sti
sub
icebp
xor
mov
ss
sbb
cmp
aas
pop
mov
or
mov
test
cmps
(bad)
mov
loopne
cmps
cmc
call
enter
aam
loop
xchg
imul
in
outs
push
sbb
rol
dec
rcl
aad
rol
or
and
hlt
jae
into
aad
mov
loop
jnp
push
push
pop
ret
sahf
xchg
jmp
fisubr
test
das
mov
inc
or
dec
xor
adc
push
dec
jne
popa
arpl
mov
jle
lea
pop
sar
xchg
jg
pop
mov
push
fwait
pop
in
stos
jmp
cmp
bound
pop
out
pop
outs
sub
loop
xor
pushf
pop
loope
(bad)
dec
fcomp
movs
stc
push
ss
xor
cmp
cmp
adc
mov
xor
or
dec
add
cli
push
pop
sub
movs
lock
and
sti
pushf
sub
test
sbb
jp
cmp
iret
cmp
mov
mov
or
je
cmp
nop
and
enter
adc
shl
cmp
push
stc
push
inc
and
or
sbb
cwde
iret
aam
cmp
and
mov
and
push
fcmovnu
daa
mov
call
fcmovne
cmc
mov
inc
jo
int
mov
mov
add
push
pop
fnstcw
inc
xchg
xor
out
ins
inc
pop
ret
push
or
xor
push
sub
or
cli
sub
or
aas
std
fs
mov
popa
jp
enter
jns
outs
movs
cmps
lahf
xor
daa
sub
pop
test
ficom
adc
das
jmp
aad
jo
cs
loop
iret
std
xchg
xchg
pop
arpl
leave
xchg
in
xchg
cwde
int3
std
xchg
and
and
fwait
sti
fist
popf
push
shr
hlt
lds
stos
add
cmp
ss
call
js
dec
repnz
nop
in
sbb
jae
call
push
mov
sub
jg
adc
or
xlat
sub
adc
das
(bad)
sub
mov
or
inc
pop
ror
bound
dec
xchg
dec
jmp
mov
rcr
sti
add
push
aam
gs
enter
out
pop
add
inc
dec
ret
out
dec
pop
fist
cs
jmp
mov
add
pop
out
pop
pop
adc
aam
pushf
sbb
mov
shr
cmp
mov
fwait
ins
push
bound
mov
int3
sahf
fwait
(bad)
mov
inc
cmp
dec
inc
stos
in
jne
aad
fcmovnb
outs
mov
add
ret
dec
adc
ja
call
mov
das
loop
into
js
fstp
addr16
rcr
jno
xor
leave
lods
xlat
fldlg2
mov
cli
sbb
push
(bad)
mov
cmp
out
loope
cmp
mul
xchg
imul
ss
repz
test
or
jns
pop
add
movs
jo
jne
pop
adc
js
gs
(bad)
dec
cmc
test
int
lods
scas
mov
sub
test
repnz
scas
fldenv
jbe
mov
adc
int3
add
(bad)
repz
xchg
inc
fdivrp
cmp
inc
mov
iretw
mov
jmp
push
in
stos
xchg
push
arpl
dec
cmp
ret
jecxz
xchg
repz
outs
lods
(bad)
mov
sbb
jno
and
sub
mov
sub
mov
loopne
inc
push
inc
push
or
mov
mov
jae
js
mov
mov
fsub
shl
jb
add
jbe
push
mov
mov
jg
mov
nop
arpl
aas
scas
sub
cmp
or
aam
int
xchg
or
aad
loope
das
ficomp
cmp
inc
and
mov
xor
pop
dec
mov
bound
popa
xchg
or
xchg
pop
sub
lock
mov
lahf
add
popa
adc
call
retf
and
aas
add
jl
inc
sub
mov
and
sti
test
jmp
pop
mov
pop
inc
js
push
and
sub
or
in
xchg
push
xchg
daa
push
and
push
sar
xchg
repnz
es
push
jbe
xchg
stc
sub
fnsave
adc
inc
adc
loope
icebp
sub
mov
(bad)
icebp
xchg
and
mov
mov
lock
das
ins
out
sub
mov
loope
push
aam
adc
cmp
sub
mov
movs
cmp
out
pmuludq
mov
sbb
daa
mov
(bad)
mul
aam
mov
xchg
cwde
dec
xchg
fsubp
mov
jecxz
retf
rcr
cmp
or
pop
(bad)
stc
push
jae
test
imul
lea
jl
jns
outs
movs
loopne
cmp
inc
adc
adc
pop
xor
xchg
sub
or
and
fnsave
adc
jb
ss
push
adc
sbb
jmp
jnp
jp
inc
mov
jmp
sahf
lods
fstp
pop
or
pop
xor
std
mov
das
in
or
pop
push
xor
stc
adc
jbe
mov
(bad)
cli
cmp
shl
mov
pop
(bad)
repz
(bad)
fistp
cmps
cmp
mov
adc
daa
xchg
ret
jne
xor
aaa
and
ficomp
jo
jnp
adc
and
push
sub
xor
and
sub
inc
jl
and
div
pusha
bound
shr
push
lock
and
inc
gs
xchg
xchg
push
dec
pop
stos
inc
daa
fcom
retf
inc
mov
rcr
ss
mov
movs
ja
add
sbb
adc
adc
out
out
scas
aam
adc
mov
adc
(bad)
push
movs
test
dec
sub
sbb
mov
pop
les
les
outs
pusha
mov
push
es
in
fwait
in
in
js
movs
mov
push
ja
shr
test
jns
imul
dec
cmp
iret
das
test
push
inc
lods
shl
aad
jns
push
mov
movs
mov
lods
mov
(bad)
lods
add
and
enter
adc
inc
push
xor
nop
xor
gs
aad
inc
mov
cmp
xor
fidivr
push
loop
pop
sbb
add
dec
retf
scas
mov
mov
mov
cdq
add
or
sti
cs
adc
sbb
ror
hlt
inc
xchg
xor
enter
and
pop
dec
(bad)
dec
push
fsub
adc
ret
mov
pop
jbe
inc
push
popa
add
fs
inc
jbe
jo
jge
pop
stc
mov
fnstsw
ficomp
pop
xchg
mov
(bad)
fidiv
or
push
mov
jecxz
push
adc
xchg
(bad)
mov
inc
mov
push
inc
ja
test
xor
fadd
int3
xchg
(bad)
popf
mov
out
sub
xchg
movs
stos
clc
mov
adc
les
pop
push
xchg
sbb
addr16
repz
ss
dec
cmps
pop
mov
or
repz
ja
cmp
dec
mov
push
mov
ror
sub
and
dec
jb
lods
dec
jne
sbb
(bad)
ds
cld
mov
lods
mov
sub
xchg
int
stos
mov
sbb
sbb
cmps
cmp
push
iret
cdq
push
pop
xchg
pop
lods
jp
inc
push
sahf
adc
shl
or
aam
adc
stos
sbb
mov
movs
imul
adc
in
dec
add
nop
cmp
push
inc
in
pop
leave
ss
xor
(bad)
mov
fnstsw
cdq
mov
retf
sbb
cmps
jp
cmp
and
push
push
idiv
imul
popf
(bad)
sbb
or
sbb
pop
xor
pop
jle
adc
fidiv
stc
popa
push
sbb
xor
or
mov
pop
fisttp
ja
ins
in
(bad)
mov
retf
push
lea
outs
movs
repnz
mov
stc
mov
cmp
lods
sbb
(bad)
mov
mov
ja
test
cmps
dec
adc
ja
pop
fwait
jbe
movs
test
lods
retf
ja
dec
out
(bad)
jb
repnz
pop
cmps
(bad)
pop
pop
dec
test
pop
shl
(bad)
icebp
mov
and
push
stc
xlat
mov
lods
push
pop
add
sub
arpl
mov
retf
mov
test
or
lds
ret
jo
xchg
fsubr
sbb
jle
out
mov
mov
aaa
jns
adc
xchg
mov
movs
and
jle
mov
ins
dec
jg
pop
loopne
adc
cmp
test
cmps
cmp
pop
mov
in
(bad)
dec
xchg
enter
mov
ja
or
inc
movlps
xchg
lods
add
sahf
mov
neg
lea
mov
sub
mov
mov
or
ins
mov
inc
mov
jbe
stc
push
(bad)
jnp
dec
das
push
lock
stc
adc
ins
sar
outs
lahf
in
sbb
mov
ret
shl
leave
shr
pop
add
std
arpl
(bad)
stc
jle
aad
mov
add
cwde
push
xchg
cmc
into
or
sub
std
aas
adc
mov
sbb
mov
xlat
jl
outs
lds
test
jo
or
int
pop
bound
xor
mul
out
mov
jo
in
cmp
lods
imul
aad
sub
popa
mov
ror
and
daa
je
and
int3
sub
mov
call
ins
stos
mov
inc
push
jnp
inc
mov
dec
out
push
adc
frstor
in
jmp
ds
inc
push
and
mov
loope
mov
inc
hlt
gs
xchg
int3
out
push
leave
push
iret
xchg
fisubr
call
or
jle
les
pop
into
cld
adc
add
and
lock
test
(bad)
outs
cmc
or
mov
xor
retf
aas
pop
aam
cs
outs
test
lds
mov
lods
ins
push
outs
cmp
out
inc
jp
ins
cmps
inc
iret
or
xchg
sub
sub
mov
enter
xchg
cmp
xor
repz
addr16
push
stc
fstp
popf
sbb
mov
cmp
addr16
in
jnp
scas
mov
jnp
dec
outs
loope
xor
pop
push
dec
jp
fnsave
sub
push
pop
add
push
cmps
(bad)
imul
sbb
icebp
mov
mov
mov
sbb
sub
lds
sbb
sbb
pop
sbb
push
stc
xchg
in
add
mov
pop
(bad)
shl
clc
dec
cmp
jb
ret
pop
and
cmp
xor
mov
sbb
loopne
into
sub
test
jle
popf
das
test
(bad)
mov
mov
push
fdiv
pop
add
fs
cld
cmovno
stos
dec
in
movs
inc
push
pop
fldcw
inc
sub
inc
test
jl
sub
add
rcr
sbb
sub
mov
jb
mov
sbb
and
push
repnz
mov
or
je
mov
pop
clc
cmp
mov
sti
sbb
pushf
retf
aad
add
pop
mov
and
mov
mov
xor
mov
or
push
xchg
xor
loop
aad
cwde
outs
push
out
mov
inc
fadd
push
enter
ds
in
cmp
cmps
dec
retf
es
jns
loop
cmp
retf
(bad)
mov
fsubr
push
jge
int
inc
pop
shr
mov
mov
xor
push
ins
js
mov
sub
lahf
push
int
mov
pop
inc
stos
call
mov
les
adc
in
and
daa
pop
shl
dec
out
movs
sbb
mov
adc
(bad)
seto
jmp
outs
pop
int3
xor
push
or
xor
ins
adc
mov
dec
ret
pop
push
addr16
add
arpl
push
inc
xchg
jns
or
mov
inc
xor
xchg
(bad)
fdivr
shl
jl
xchg
lock
rcr
add
pop
or
jne
fisttp
shr
fisttp
xchg
movs
mov
xlat
ins
inc
dec
stc
xchg
retf
mov
xchg
hlt
ins
js
inc
mov
adc
adc
push
les
scas
int3
lea
rol
adc
or
fwait
rcl
cdq
ja
loope
imul
pop
mov
sti
mov
ret
sahf
loop
fisttp
mov
dec
sbb
hlt
in
jnp
test
xchg
mov
mov
push
lods
pusha
mov
or
ins
sbb
loopne
mov
test
test
pop
lahf
jmp
mov
sbb
xor
sahf
(bad)
jb
(bad)
push
mov
sbb
mov
inc
rcl
les
rep
xor
js
into
jne
repnz
adc
push
imul
ret
cmp
(bad)
nop
push
daa
sub
jns
enter
repz
xor
mov
loope
dec
jno
and
in
or
push
lea
les
mov
cmp
mov
dec
cmovno
(bad)
not
adc
outs
inc
ss
sbb
es
scas
stos
in
out
retf
dec
leave
jns
test
mov
push
pusha
xor
div
xor
fwait
mov
xchg
movs
mov
mov
shl
les
sub
aaa
std
lods
xor
cmp
cmp
add
les
ret
sub
xchg
mov
popa
inc
add
neg
push
lahf
sub
shr
scas
(bad)
jp
add
bound
test
push
leave
out
lods
daa
out
push
std
mov
lods
lea
stos
fwait
dec
pandn
dec
cmps
jbe
xor
retf
jmp
jae
stc
mov
enter
js
imul
daa
fadd
mov
push
push
out
add
add
js
inc
fisttp
push
pop
call
mov
lock
fistp
scas
or
cmp
cmp
and
or
ret
and
and
xchg
call
pop
xor
mov
cmp
loope
adc
adc
jmp
sub
push
rcl
sar
popa
push
es
pop
add
fcom
ins
push
sub
mov
ins
aad
inc
mov
push
aad
add
mov
pop
cmp
inc
sub
xor
test
inc
cmp
popf
push
jbe
cmp
or
bound
mov
and
stos
(bad)
xor
xchg
sbb
mov
aas
lods
neg
inc
push
jne
xchg
ins
push
adc
or
imul
test
sbb
leave
int
sbb
out
ja
or
sbb
scas
adc
push
xlat
ja
jmp
push
mov
mov
imul
std
sub
or
aad
jge
dec
shl
shl
dec
std
xor
stos
(bad)
mov
fisub
mov
ucomiss
aam
pusha
jge
cmp
in
mov
fist
pop
ja
icebp
test
fucom
jnp
int3
push
out
aad
pushf
cld
shl
loopne
js
and
mov
popf
mov
jl
into
rol
cmp
inc
pop
lods
fnsave
sbb
sub
dec
pop
fnstenv
sub
add
iret
adc
mov
shl
repz
fimul
mov
add
dec
jg
push
or
(bad)
and
jno
retf
or
mov
pop
fld
popa
stos
cli
jns
mov
test
xor
(bad)
mov
jns
dec
jecxz
sbb
retf
pop
cmp
sti
mov
jbe
or
xchg
xor
add
or
add
test
cmp
(bad)
mov
sub
movd
push
sahf
xchg
icebp
push
stc
dec
shl
mov
or
cmps
lds
stos
test
cmp
pop
mov
inc
popf
daa
das
mov
xlat
push
icebp
sub
cld
(bad)
cmp
iret
(bad)
out
push
dec
dec
fdivrp
mov
sahf
arpl
fisttp
jmp
aaa
xor
or
adc
imul
sbb
pop
pop
iretw
cwde
cmp
test
or
pop
cmps
or
dec
inc
fsub
(bad)
jl
sub
sar
sub
imul
pop
sbb
mov
aad
jns
jbe
retf
adc
jmp
in
cmps
or
xor
pop
stos
push
es
repnz
addr16
add
mov
out
lds
inc
or
imul
into
cmp
enter
and
inc
jns
daa
pop
add
jno
ins
cmp
and
sbb
dec
iret
pop
dec
mov
xor
mov
mov
mov
push
(bad)
push
adc
pop
(bad)
add
lock
nop
sbb
mov
arpl
mov
inc
add
pop
fisttp
fsubr
fdivp
ins
mov
mov
gs
mov
retf
add
push
aad
inc
mov
mov
add
pop
retf
popf
popf
shl
outs
outs
pop
inc
je
pop
in
xlat
cdq
jge
jno
(bad)
pop
test
fmul
push
std
xor
or
stos
lahf
aad
adc
xchg
enter
imul
pop
mov
popf
leave
jb
adc
sbb
sub
push
sub
loopne
in
retf
(bad)
pop
sbb
mov
dec
jmp
mov
jl
inc
pushf
in
int3
adc
xor
mov
dec
push
jae
xchg
sub
test
xlat
mov
in
imul
retf
hlt
hlt
pop
mov
mov
push
loop
outs
pop
xchg
daa
ja
in
scas
jmp
cmc
add
dec
jns
stos
cmps
lds
sar
jno
cmp
pop
sub
jae
ror
addr16
cmps
movs
sbb
jecxz
clc
ficomp
sbb
test
xor
pop
outs
ret
in
cmp
or
test
dec
jno
push
out
jno
mov
outs
sub
push
out
dec
jg
test
inc
pop
sbb
jmp
adc
inc
mov
popa
dec
outs
sub
sbb
push
fwait
lods
inc
loop
or
imul
lea
mov
push
cmp
push
sub
out
jle
test
adc
wbinvd
repz
fcom
push
fcmovne
mov
xor
mov
cs
pusha
loop
stc
adc
adc
sbb
adc
lds
hlt
mov
pop
jbe
dec
mov
dec
adc
jmp
mov
nop
sbb
call
test
adc
jae
clc
inc
repnz
lods
push
or
xor
test
adc
xor
adc
push
inc
inc
ror
mov
(bad)
call
call
scas
ins
mov
xchg
mov
mov
sub
sbb
div
fild
push
adc
jb
icebp
mov
mov
aad
cmc
fadd
lock
(bad)
xchg
push
dec
das
cmps
and
sbb
jno
mov
loopne
push
push
xor
sbb
int3
cmc
push
(bad)
stos
lahf
pop
ret
mov
in
inc
in
ret
sub
fcmovne
(bad)
es
mov
push
add
mov
mov
shl
mov
dec
popf
stos
adc
call
mov
aas
inc
les
jmp
clc
cwde
adc
rcl
mov
push
and
jae
sbb
jns
imul
mov
push
mov
inc
dec
mov
mov
mov
jecxz
in
lahf
imul
mov
retf
mov
(bad)
mov
push
neg
sbb
out
cmp
sbb
or
or
xor
faddp
js
popa
add
nop
cmp
and
daa
add
neg
adc
rcr
dec
cmp
cmp
shl
aaa
int
ja
and
or
out
mov
push
int
or
mov
pop
test
mov
pop
and
or
xchg
xchg
mov
ds
mov
add
xor
jno
jae
mov
arpl
jl
clc
inc
cmps
and
mov
mov
sbb
mov
pop
xor
(bad)
jge
xor
mov
outs
add
pop
inc
stos
aaa
aad
ja
pop
call
ss
pop
sub
push
stmxcsr
pushf
(bad)
jbe
stos
clc
(bad)
fstp
lods
scas
je
add
test
push
outs
push
int3
out
fmul
dec
cli
test
enter
fimul
or
push
cmp
je
push
mov
rep
fidivr
in
popa
or
dec
mov
stc
or
cmp
mov
xchg
dec
xlat
sub
ror
out
icebp
cmp
ins
mov
and
pushf
mov
pop
retf
jmp
pop
retf
jbe
xchg
mov
pusha
arpl
jp
sub
jne
jbe
push
mov
push
mov
jp
jo
out
xor
or
push
dec
movs
test
mov
jns
inc
mov
or
mov
aaa
push
pop
in
or
jns
sub
or
pop
mov
xor
loop
and
sbb
stc
stc
call
add
push
jnp
adc
iret
neg
sub
sbb
inc
mov
not
dec
cs
movs
lock
sbb
pop
mov
xlat
push
mov
call
movs
dec
out
inc
jecxz
jnp
xchg
jl
bnd
mov
pop
push
push
mov
dec
push
xchg
or
inc
sbb
cmp
sub
aam
ins
scas
loopne
(bad)
dec
out
jg
fwait
stos
and
fadd
ret
inc
mov
mov
mov
mov
mov
jo
cmc
sbb
dec
out
push
inc
fs
das
pop
(bad)
jns
and
sub
out
aad
sbb
ret
sbb
cmc
pop
or
aaa
mov
cwde
mov
aas
leave
pop
or
xchg
daa
cmp
and
or
mov
scas
lods
jae
adc
in
outs
mov
lahf
xor
mov
cs
fisubr
mov
push
es
mov
push
jecxz
jns
iret
in
cmp
outs
adc
imul
ret
test
shl
dec
cmp
test
sahf
push
not
and
adc
mov
fwait
dec
jge
out
popf
inc
sbb
cwde
sar
or
out
aad
fldcw
mov
mov
(bad)
sub
enter
out
xchg
shl
and
cmc
enter
call
shr
movs
xlat
ret
(bad)
mov
jecxz
add
inc
and
mov
out
push
fst
adc
data16
rcr
sub
and
inc
test
repnz
push
inc
mov
pop
jmp
lea
dec
scas
pop
dec
mov
arpl
outs
mov
jo
out
jae
inc
mov
xor
or
aam
gs
lea
xor
outs
ja
adc
btr
pushf
aad
(bad)
std
fmul
or
fisub
push
aaa
sbb
and
mov
retf
inc
mul
in
rcl
scas
out
dec
lock
and
stos
sti
fsubr
and
inc
retf
jle
xlat
clc
loope
je
das
cmps
mul
mov
out
push
ficom
mov
fbstp
mov
leave
xlat
xchg
(bad)
es
mov
hlt
imul
mov
mov
and
xchg
into
xlat
and
cdq
inc
xor
loope
xchg
addr16
lea
pop
jp
push
xor
xor
mov
shl
pop
cld
sbb
adc
inc
dec
enter
pop
fisub
push
and
add
sbb
in
les
cmps
or
fsubr
xor
xor
cmp
out
test
out
xor
ins
movs
inc
and
push
adc
scas
mov
das
add
aam
inc
sahf
jbe
xor
jb
scas
xor
mov
mov
leave
inc
fisubr
jbe
sahf
scas
pop
out
xchg
pop
mov
in
test
test
and
xchg
dec
aaa
sub
pop
fs
popf
sub
lods
sbb
or
mov
aam
sub
idiv
dec
inc
pushf
out
cwde
adc
sbb
mov
aas
adc
les
fstp
bound
adc
into
jl
gs
pop
test
adc
mov
push
fs
push
jmp
inc
xor
out
shr
add
sub
lds
sti
sbb
cmp
lahf
cs
addr16
nop
sub
cmps
inc
push
mov
test
xlat
and
cmp
mov
pop
xor
cmp
push
mov
dec
mov
movs
cmc
ret
enter
cwde
sti
cmps
outs
xchg
push
iret
adc
or
mov
cs
xchg
call
xor
or
adc
jne
and
das
xor
ins
fcomp
mov
push
out
or
fsubp
cmp
adc
cmp
repz
jae
bound
fstp
push
cmp
bound
and
bound
fiadd
popa
das
dec
inc
mov
cmp
dec
push
outs
or
jne
cmps
jo
cmp
mov
mov
fisttp
pop
mov
popa
mov
in
imul
cmp
retf
int3
repnz
push
sub
inc
mov
xor
ficom
cmp
hlt
xor
jmp
inc
jnp
cmp
jge
ja
jnp
in
xchg
add
sub
dec
mov
xchg
aas
and
(bad)
jmp
in
mov
xchg
inc
fmul
inc
pop
mov
sub
cdq
xor
loopne
into
(bad)
fisttp
idiv
lods
and
cmp
cmp
jb
jmp
clc
jg
push
lock
in
jnp
(bad)
sbb
das
adc
inc
jne
scas
retf
call
or
daa
inc
in
mov
sbb
cmp
call
xchg
ret
leave
mov
scas
xor
aas
and
sbb
arpl
daa
mov
cli
pop
jne
mov
ret
push
mov
bound
inc
xor
nop
mov
pop
(bad)
je
fimul
xchg
and
test
mov
rcr
mov
lea
test
ror
or
popa
xchg
not
push
or
ins
ins
ins
xchg
in
pop
dec
int
ret
adc
test
xchg
push
leave
jns
sub
xor
and
rcl
shl
mov
stc
xor
and
push
sub
xchg
je
ret
jb
loope
in
pop
movs
push
xchg
jp
ins
jbe
cwde
mov
and
mov
mov
mov
add
hlt
imul
stc
sti
add
push
fidivr
aam
dec
movs
jg
inc
mov
pop
out
lea
ins
pushf
sbb
test
out
out
fsub
pop
cmp
push
jl
jb
test
xchg
push
xlat
sbb
in
jecxz
ror
retf
std
leave
stos
iret
arpl
aam
sbb
dec
mov
dec
outs
inc
mov
ins
aaa
pop
mov
sti
cld
push
adc
inc
scas
hlt
imul
movs
aad
popa
rcr
ror
js
sbb
lods
inc
les
mov
fild
cmc
push
adc
jge
mov
or
movs
fs
xor
pop
leave
jp
(bad)
push
aaa
xlat
mov
lds
loope
inc
sahf
std
lock
leave
fnstsw
aad
or
or
mov
outs
xor
aam
fild
rcl
loop
and
pop
sub
sub
imul
mov
dec
jp
repz
jno
fidivr
out
in
stos
jl
ret
dec
lds
xor
stos
mov
int3
jne
lock
into
aaa
cmc
pop
dec
mul
cmp
inc
rcr
in
dec
mov
add
sbb
call
daa
mov
addr16
(bad)
push
inc
sbb
jg
rcr
cmp
stos
out
mov
or
in
dec
adc
mov
xor
fsub
jnp
cmp
shr
in
and
add
fcomp
sub
jns
scas
repnz
retf
dec
dec
dec
ror
cmp
test
add
pop
dec
in
inc
pop
bound
gs
mov
icebp
aaa
push
mov
hlt
ins
inc
xchg
mov
popf
add
pop
sub
out
repnz
cmp
aad
adc
je
rol
push
jmp
cmp
and
xchg
sub
js
es
xor
push
sub
cli
mov
bound
push
rcl
sub
mov
adc
add
test
inc
call
es
xor
(bad)
mov
inc
jle
daa
mov
adc
lea
inc
push
jo
and
fbstp
(bad)
loopne
lods
movs
jl
pop
bound
mov
inc
stos
dec
nop
jne
sub
inc
out
movs
add
mov
les
ror
inc
stc
repnz
jmp
cmps
fimul
cld
stos
adc
adc
inc
cmc
lea
sbb
pop
jmp
mov
sbb
pop
xchg
add
loopne
cmp
add
sti
stc
xor
dec
or
lds
xor
fld
xchg
inc
test
(bad)
jmp
cmp
test
jl
mov
xchg
xor
xor
imul
sbb
fimul
leave
imul
cdq
nop
sbb
fwait
or
int3
cmp
clc
mov
inc
loop
test
cld
(bad)
icebp
adc
daa
out
dec
cmp
(bad)
jmp
sub
popf
jl
pop
imul
sti
xor
mov
jb
int
es
mov
icebp
jmp
mov
ins
or
mov
(bad)
fcmovnbe
jnp
sub
test
lock
cmp
imul
dec
test
cli
test
jbe
out
jnp
movs
call
jmp
arpl
xor
iret
xchg
xchg
push
mov
cmps
dec
(bad)
lahf
imul
bound
and
stos
cmp
inc
mov
xchg
ins
pop
int3
xchg
shr
shl
inc
push
out
clc
ss
cmp
jecxz
push
ja
adc
iret
loopne
push
pusha
sti
repz
sub
adc
arpl
cld
(bad)
or
popf
(bad)
jg
(bad)
js
call
add
loopne
add
cmp
popf
data16
and
xchg
popf
dec
cmp
pusha
not
loop
or
ins
inc
outs
or
sahf
jecxz
je
push
fs
cdq
pop
sti
out
pop
ins
stos
pusha
cmp
adc
cmps
ret
and
in
pop
cmc
jge
cmp
popa
sub
push
test
mov
sub
mov
fld
cmp
and
jno
out
scas
(bad)
mov
retf
(bad)
dec
int
outs
jno
outs
pop
cmp
fwait
lds
adc
xor
(bad)
cmps
mov
pop
xchg
push
dec
sti
cli
jns
imul
clc
lock
(bad)
add
and
add
xchg
outs
or
mov
inc
jmp
lods
push
sbb
and
add
loop
test
sub
and
mov
lock
fiadd
in
adc
fistp
and
and
stc
cmp
stos
into
push
jle
(bad)
sbb
lock
xchg
jbe
xchg
xchg
pushf
mov
stos
push
or
imul
and
jge
repz
ins
iret
aaa
clc
mov
or
add
xor
arpl
jbe
mul
or
xchg
xor
fbstp
es
aaa
dec
sbb
mov
sbb
inc
pop
(bad)
aad
mov
xchg
cmp
mov
cmc
push
pop
cwde
sar
inc
outs
bound
mov
int3
stc
mov
pop
test
push
in
xchg
jmp
shr
xor
sub
cli
sub
push
pop
cmp
imul
mov
sub
sbb
or
into
or
mov
sbb
mov
je
dec
mov
push
rcr
sub
inc
cmp
into
inc
inc
popa
call
jo
sbb
sub
sahf
or
nop
sub
je
push
jns
xchg
int3
mov
outs
pop
dec
cmp
dec
push
xchg
jno
xchg
sub
jno
int
jae
mov
mov
or
jo
cmp
data16
add
add
mov
js
repnz
(bad)
mov
jne
push
mov
lea
pop
cmp
enter
stos
lods
xlat
add
rcr
call
test
cs
jns
sbb
adc
inc
in
jmp
dec
xchg
pop
push
retf
in
xchg
pop
out
dec
call
ds
pop
sahf
rcl
push
xchg
(bad)
sub
addr16
xchg
jnp
nop
push
adc
dec
mov
and
test
or
daa
pop
push
sti
cmp
sbb
push
in
xor
fdiv
mov
sub
push
push
dec
sbb
dec
sbb
cwde
mov
loopne
fwait
mov
ja
inc
xchg
sbb
ret
dec
dec
pushf
jnp
pushf
adc
xor
enter
mov
mov
mov
retf
out
mov
arpl
pusha
mov
mov
arpl
jp
lahf
idiv
fwait
clc
dec
sbb
cs
and
out
aad
pop
outs
sar
in
ftst
inc
or
inc
pop
in
mov
sub
lea
pushf
adc
fsubr
cmc
loopne
adc
dec
mov
lods
adc
pop
ins
mov
(bad)
out
ja
xor
jle
push
imul
adc
(bad)
clc
mov
loope
and
repnz
popf
sub
rcl
add
xor
fstp
add
or
push
xchg
aad
jbe
push
cmp
daa
pushf
lods
bound
js
jmp
push
imul
pop
imul
into
rol
cwde
aas
jno
fisub
sub
mov
fld
jns
add
xlat
loopne
inc
in
jle
dec
cdq
mov
cmp
in
fistp
adc
mov
repz
pop
(bad)
jmp
in
inc
add
(bad)
fsub
push
cwde
pop
data16
sub
(bad)
repz
pusha
outs
jg
int
push
or
inc
or
cli
mov
retf
aam
jg
xor
int
jg
ins
in
test
xchg
lds
mov
mov
pop
cmp
stos
icebp
loopne
sbb
aaa
into
sbb
pop
std
jb
add
mov
mov
daa
pop
(bad)
shr
lods
icebp
jp
pop
inc
and
aaa
mov
fwait
test
xchg
ins
mov
xor
in
or
jmp
jb
jmp
add
or
and
inc
(bad)
sar
mov
or
ds
in
je
mov
and
inc
pop
ret
fisttp
fist
je
dec
dec
mov
outs
cld
inc
test
sub
test
cmp
popf
push
cmp
retf
scas
out
aaa
xchg
inc
mov
test
lahf
or
push
aaa
or
push
cmp
xchg
dec
dec
jnp
aas
sbb
mov
popa
sub
in
xor
sub
dec
jmp
push
(bad)
call
or
lahf
push
outs
push
pop
movs
mov
daa
out
push
and
imul
jo
(bad)
jge
sub
xor
mov
les
nop
test
jnp
jp
adc
sub
sbb
dec
fistp
mov
and
ffreep
sahf
inc
lods
retf
sahf
sahf
sbb
not
ret
(bad)
rol
cmp
xchg
mov
sub
mov
lss
popf
push
or
jmp
xor
(bad)
retf
stos
(bad)
in
pop
movs
out
test
xor
add
dec
(bad)
dec
arpl
lods
cmc
mov
inc
mov
push
ret
out
test
or
ficom
call
(bad)
xchg
sbb
or
mov
loope
out
inc
mov
inc
in
loop
outs
scas
aas
and
popf
push
das
cmp
adc
fs
pushf
cmp
mov
inc
push
or
sub
je
and
mov
ja
hlt
(bad)
push
daa
xor
fs
sbb
imul
lahf
or
shl
retf
adc
addr16
push
mov
mul
outs
pusha
add
shl
inc
and
mov
std
pop
(bad)
xor
cmp
movs
mov
bnd
in
clc
movs
inc
in
cs
fadd
(bad)
pop
xchg
lock
cmp
pop
mov
cwde
out
sbb
out
pop
adc
(bad)
jnp
pop
sbb
shl
fadd
or
cld
mov
cmps
pop
and
and
test
pop
mov
nop
push
pop
fld
push
adc
jmp
ds
ins
xchg
iret
inc
or
ficomp
cs
jbe
iret
mov
xchg
ror
inc
mov
(bad)
mov
pop
dec
xchg
repz
jno
mov
fs
xor
icebp
push
js
outs
push
jae
daa
mov
add
(bad)
daa
hlt
or
xor
in
(bad)
sbb
jl
pop
les
add
rcl
pop
iret
jecxz
and
push
jecxz
hlt
jae
fdivr
popa
call
aaa
mov
repz
pop
pushf
xor
mov
in
arpl
nop
jl
(bad)
fimul
ja
fild
add
lods
jmp
data16
jns
out
shl
shl
scas
jl
xchg
push
adc
xlat
inc
add
or
inc
inc
and
rcr
fsub
test
dec
mov
cmps
dec
dec
and
call
jmp
pop
xor
and
cmp
mov
add
add
gs
and
cmp
ret
call
retf
xchg
in
add
std
mov
into
xlat
jge
mov
out
pop
push
out
adc
mov
cmps
(bad)
xor
leave
xchg
out
cmp
daa
dec
xor
adc
pop
in
ins
adc
pop
add
inc
mov
add
inc
dec
cwde
xchg
sbb
inc
xchg
xchg
xchg
test
les
scas
sub
jmp
sti
mov
pop
enter
adc
mov
outs
sbb
fcom
add
stc
das
sub
mov
push
aad
jb
dec
cmp
mov
prefetch
in
idiv
and
test
aaa
int3
(bad)
mov
xchg
arpl
stos
lea
ds
push
(bad)
jne
or
cwde
movs
aam
fsub
and
fsub
inc
popa
ins
dec
scas
(bad)
pop
(bad)
leave
loope
out
fsubr
les
push
add
retf
scas
in
mov
arpl
div
pop
sub
into
mov
xchg
fld
sbb
repz
mov
js
(bad)
pop
mov
and
loopne
sub
shl
jle
and
popf
sbb
push
jae
add
(bad)
jae
bnd
cmp
cmp
xlat
leave
mov
xor
sbb
stc
pop
repnz
(bad)
sbb
scas
mov
sub
movs
push
pop
jp
out
or
xchg
imul
jmp
jg
and
xor
lods
fdivr
mov
sbb
sbb
test
(bad)
mov
ds
mov
push
mov
popa
cmps
fst
cmp
lds
mov
jmp
adc
sbb
jg
clc
adc
sbb
cmp
add
(bad)
pop
mov
xchg
mov
sbb
push
les
pop
cmp
adc
xlat
(bad)
std
pop
hlt
mov
je
ja
push
shl
pop
adc
les
cwde
cli
adc
pop
out
cdq
out
sbb
mov
sub
sbb
cmps
sbb
fs
mov
aaa
fiadd
push
movs
xlat
push
add
out
popf
jno
rol
inc
xchg
sbb
sbb
dec
aas
aas
test
inc
in
or
mov
mov
stos
bound
xor
daa
jne
or
stos
or
inc
xchg
jecxz
adc
jo
mov
xor
ins
jo
ins
cli
jnp
mov
push
dec
mov
add
mov
jae
imul
jns
outs
mov
mov
add
inc
jns
cmp
xchg
ja
pop
jo
inc
fwait
push
lea
jns
fdivp
test
fdivp
leave
push
add
cmc
push
or
stos
sti
aaa
cwde
inc
fadd
cmps
rol
fadd
xlat
or
sbb
xchg
jmp
(bad)
xor
dec
cmp
mov
stos
scas
or
push
adc
ret
imul
dec
retf
ins
jge
inc
pop
clc
dec
outs
clc
mov
fst
lahf
or
jge
pop
push
retf
inc
and
(bad)
pop
push
(bad)
aas
enter
push
jmp
xchg
retf
je
cmp
in
ins
aam
imul
mov
pop
inc
ret
out
dec
test
sahf
dec
mov
xchg
repz
int3
pop
(bad)
(bad)
stos
dec
xor
inc
pop
inc
add
cmp
lods
gs
clc
scas
mov
stc
sahf
mov
mov
out
xor
sahf
jnp
fsubrp
pop
or
fstp
jge
nop
icebp
mov
xchg
push
movs
lods
xchg
data16
lock
cmp
rcr
sahf
rcpps
and
sbb
int
mov
(bad)
adc
mov
inc
adc
and
and
fbld
inc
or
out
fld
iret
daa
cs
loop
test
add
enter
xchg
mov
pop
dec
or
adc
movs
adc
not
jnp
mov
pop
xchg
mov
jmp
jp
dec
mov
aas
(bad)
or
cdq
and
ins
movs
sbb
and
outs
push
hlt
mov
je
out
(bad)
sahf
inc
xchg
xor
mov
or
imul
and
mov
ja
dec
mov
jmp
stc
push
es
dec
mov
push
pop
push
push
inc
push
in
mov
mov
addr16
nop
das
add
push
xchg
jnp
popf
clc
out
jns
shl
daa
mov
adc
add
cmps
dec
xor
sbb
dec
lock
cmp
inc
cmp
mov
sub
ja
cld
pop
jae
stos
pop
aad
jg
or
push
push
cmp
jbe
shl
sub
dec
fcmovnb
mov
(bad)
dec
pop
std
das
les
std
and
dec
fist
mov
cmps
mov
pop
mov
dec
mov
add
in
dec
ds
xor
sub
xchg
test
push
pop
xchg
xchg
mov
mov
mov
std
adc
or
(bad)
movs
popf
cdq
pop
xor
fs
push
scas
sbb
enter
(bad)
loop
sub
adc
xchg
dec
ss
xor
clc
xchg
jl
dec
mov
or
cwde
fwait
jae
jg
das
ds
scas
adc
not
pop
aam
cmp
cmps
out
(bad)
adc
outs
fwait
ja
adc
lea
inc
inc
cmp
fldcw
xchg
xor
(bad)
adc
(bad)
daa
neg
push
sbb
mov
repz
jne
push
mov
and
mov
jle
movs
jge
mov
push
test
adc
xchg
mov
push
lock
fild
imul
cld
popa
clc
mov
scas
into
xor
mov
push
and
cwde
ret
aad
mov
test
mov
iret
inc
pop
adc
sbb
add
lods
dec
fldcw
mov
lds
repz
pop
scas
mov
xchg
jmp
adc
sub
dec
jbe
and
mov
cmp
mov
push
mov
cmp
(bad)
data16
ret
lds
pusha
xchg
xchg
add
iret
stos
jg
mov
fiadd
dec
out
xor
cmp
(bad)
in
outs
xor
stos
pop
xchg
dec
or
enter
or
mov
ret
mov
cld
fild
scas
push
not
icebp
cdq
pop
pop
(bad)
adc
cdq
or
out
xchg
jbe
pop
call
icebp
out
icebp
mov
cdq
mov
pop
int3
add
inc
jg
lods
mov
loopne
sub
mov
sub
fdivr
xor
mov
sbb
sub
adc
jo
out
mov
xchg
leave
inc
add
fnsave
mov
enter
out
aaa
jle
(bad)
lahf
outs
out
not
mul
cmp
pop
inc
rcr
fmul
inc
jle
(bad)
rcr
push
mov
xor
gs
cwde
fs
mov
sub
jg
ja
or
mov
push
sbb
stos
dec
mov
pop
cld
or
or
(bad)
call
(bad)
jnp
push
ins
sti
pushf
and
push
and
adc
nop
mov
fsubr
cmp
push
dec
add
sbb
and
mov
and
jns
not
cs
dec
ret
lahf
(bad)
jns
sbb
pop
and
push
dec
ins
or
mov
pop
jb
fisub
outs
loope
add
adc
loopne
ja
scas
retf
cli
xlat
xor
jns
push
push
enter
lods
(bad)
push
adc
sub
adc
xchg
cdq
sub
out
jo
ins
fisubr
xor
fcomp
mov
pop
cmps
enter
push
ja
push
test
mov
ret
call
cmp
push
add
out
add
and
mov
sub
and
jle
add
movs
ins
jno
add
inc
ins
mov
pop
into
push
jmp
adc
sar
leave
adc
(bad)
mov
clc
fdiv
sub
pushf
mov
push
lock
pop
pop
nop
ror
fild
xor
cmp
ss
shl
push
iret
sar
xchg
adc
jno
shrd
cld
mov
jg
pop
push
add
test
dec
lea
mov
push
movs
add
shl
xchg
fnstsw
cdq
dec
jne
sahf
push
out
mov
cmp
pop
call
jl
jmp
pop
xchg
outs
cmp
and
pop
or
inc
dec
add
sbb
stos
mov
nop
stos
cmp
add
push
lahf
push
out
movs
mov
and
sub
popf
repnz
mov
das
cld
inc
stos
fistp
loopne
sub
and
push
movzx
adc
retf
stc
pushf
sti
pop
repnz
sub
mov
in
mov
adc
cli
daa
lods
adc
enter
aas
sub
imul
cmps
les
jmp
push
xlat
or
jbe
sub
xchg
xchg
mov
(bad)
std
mov
xchg
or
mov
call
inc
dec
movs
(bad)
neg
mov
arpl
xchg
out
sub
push
adc
mov
lods
jb
mov
sbb
pop
in
sub
ror
shl
xchg
fisub
pop
scas
or
or
xchg
dec
mov
dec
push
add
push
xchg
push
mov
add
mov
xchg
push
icebp
jno
cmc
mov
xchg
mov
mov
mov
mul
mov
add
jmp
or
cld
add
fnstcw
mov
push
pop
ins
(bad)
cwde
pop
(bad)
out
fwait
test
inc
repnz
jnp
stc
xchg
or
imul
mov
lahf
jle
mov
cmps
push
not
sub
mov
inc
call
mov
sbb
cmp
mov
sbb
mov
lds
stos
and
pusha
adc
rol
xchg
ret
cdq
mov
mov
fistp
and
add
jl
mov
push
xor
dec
add
mov
jns
sub
std
loopne
sbb
jne
in
test
das
mov
je
pop
(bad)
adc
fidivr
inc
bound
xchg
cmovns
jns
in
popf
into
add
mov
xlat
mov
cmp
retf
adc
ss
aas
pop
cmc
or
sbb
data16
out
mov
push
ret
data16
xor
sbb
push
cdq
inc
push
rol
adc
shr
and
cmp
push
(bad)
cs
mov
xor
push
jo
push
popa
clc
mov
cmp
mov
retf
push
pop
test
cmps
mov
mov
fwait
aas
in
inc
fnsave
iret
fsincos
(bad)
cwde
dec
cli
mov
inc
jle
inc
dec
sub
xor
mov
jae
aam
xor
ret
fld
mov
or
pushf
and
cmp
in
sbb
jl
lods
in
retf
and
fisttp
cmp
adc
out
out
and
into
jp
pop
mov
push
cmp
sahf
and
xlat
test
call
push
adc
xor
cmps
inc
mov
jne
or
mov
mov
xor
out
cmp
jnp
(bad)
fist
into
frstor
lods
push
fadd
fmul
jl
push
push
mov
adc
repnz
aas
shr
dec
sbb
mov
push
arpl
inc
loop
mov
and
mov
daa
cmp
icebp
mov
jne
scas
test
push
push
call
push
clc
ins
lea
ja
jo
sub
rcl
test
fdiv
dec
dec
sbb
mov
jae
test
and
(bad)
jno
jb
clc
xor
xor
shl
cmc
lods
in
fwait
retf
add
cld
call
push
mov
pop
sub
out
mov
(bad)
push
ja
sub
fadd
cmp
xchg
cmp
test
jns
and
mov
enter
or
xchg
push
sbb
outs
test
pushf
push
cmp
adc
pop
frstor
cmp
ror
mov
fwait
pop
jmp
sbb
(bad)
test
or
(bad)
out
fwait
sbb
adc
pop
shl
int
dec
cs
cs
shl
xchg
mov
(bad)
add
add
or
imul
push
xchg
mov
jecxz
lds
(bad)
sti
and
int
and
adc
mov
enter
rcr
sub
mov
dec
push
add
mov
add
jo
out
(bad)
popa
lock
je
mov
in
and
mov
mov
sbb
test
cmp
jno
ss
xlat
xor
xchg
cmps
sar
pop
dec
jo
stos
ins
xchg
fcomp
inc
cli
cdq
mov
icebp
cmp
jecxz
cmp
out
frstor
clc
xchg
cli
out
adc
retf
retf
mov
aaa
push
push
fstp
(bad)
aas
xchg
retf
fwait
inc
sbb
mov
push
and
or
lods
mov
call
mov
sti
in
dec
lock
hlt
pmulhw
xor
call
div
jno
cs
mov
xchg
stos
dec
or
pusha
lods
push
mov
dec
jmp
adc
inc
outs
scas
loopne
leave
fcomp
sbb
xchg
sbb
bndldx
ins
lock
arpl
push
mov
inc
xchg
shl
ror
lods
outs
ins
sbb
movs
ja
sbb
ins
jp
adc
jp
dec
and
mov
cdq
push
pop
aaa
push
add
enter
sti
iret
div
test
(bad)
stc
xchg
out
mov
push
aam
in
pop
stos
jg
(bad)
fbld
(bad)
mov
arpl
xor
cmp
and
xchg
cwde
pushf
std
add
jmp
mov
or
nop
fld
mov
xor
inc
jecxz
cdq
sti
rcr
pop
int3
cdq
push
mov
fld
add
cli
(bad)
popf
jo
or
jp
pop
std
(bad)
in
inc
rcl
push
dec
repnz
mov
jmp
adc
cli
or
jne
mov
or
sbb
(bad)
mov
xchg
shl
push
mov
mov
xchg
mov
ss
mov
repz
jecxz
dec
xchg
dec
jmp
xor
jle
outs
aam
pop
leave
add
jb
dec
scas
sub
inc
push
cdq
imul
jl
cmp
stos
sbb
pop
mov
mov
push
xor
faddp
lahf
les
enter
lahf
pop
xchg
test
cdq
cmp
push
das
push
inc
sar
loope
push
jle
daa
sub
xlat
mov
cmc
leave
push
mov
retf
(bad)
(bad)
fldenv
dec
xchg
imul
lea
xor
sbb
fldpi
in
sub
or
addr16
adc
add
sub
iret
or
mov
dec
enter
add
and
imul
(bad)
popa
xor
out
adc
add
(bad)
out
jo
lods
push
jle
gs
cs
sbb
pop
scas
pop
in
aam
je
xchg
ins
sub
xor
stos
push
jb
rol
les
jo
movs
cmp
data16
mov
dec
push
(bad)
fcom
sahf
add
xor
mov
adc
jo
dec
or
inc
in
iret
icebp
sti
mov
inc
xchg
xchg
in
int3
sbb
(bad)
xor
mov
test
in
add
hlt
stos
mov
push
mov
mov
idiv
lds
jbe
aad
imul
mov
loope
pop
rcr
push
add
adc
mov
test
mov
inc
sub
mov
lahf
or
dec
bound
dec
inc
inc
pusha
cdq
dec
cmp
push
push
mov
cwde
jge
es
xchg
mov
sbb
(bad)
test
sbb
xor
dec
mul
inc
jae
push
sub
in
aam
push
fcom
out
nop
jle
or
into
pop
xchg
sub
les
xor
push
push
loopne
xchg
ins
inc
lock
and
repnz
arpl
pop
mov
mov
xor
mov
outs
test
jns
dec
xchg
inc
test
adc
(bad)
adc
sbb
call
div
js
pop
jle
mov
pop
loop
mov
fild
das
xchg
frstor
dec
mov
pop
repnz
ins
mov
xchg
imul
sub
(bad)
cmp
mov
sbb
xchg
repnz
or
cmp
cmp
mov
sub
xchg
xchg
mov
fsub
sub
repnz
pop
add
les
jle
sbb
xchg
dec
fadd
jb
and
lahf
out
mov
ret
push
jae
lds
repz
sti
mov
mov
adc
jp
mov
lods
mov
cmp
xor
popf
mov
addr16
adc
jg
jge
stc
push
retf
adc
inc
xchg
fdivr
pop
repnz
push
movs
fiadd
jo
push
jns
mov
cld
mov
inc
sub
(bad)
fcomip
jne
jno
jg
and
push
mov
push
sbb
jnp
stos
push
pop
mov
imul
xchg
and
add
push
(bad)
frstor
pop
mov
or
push
test
xor
jle
int
inc
dec
sbb
dec
adc
or
stc
jmp
and
pop
adc
ss
inc
cmp
jb
sub
sbb
jbe
push
ficomp
call
pop
inc
mov
sub
jo
dec
jae
(bad)
xchg
cmc
push
push
adc
dec
ret
push
out
mov
inc
call
cld
ret
push
sbb
jmp
and
enter
mov
hlt
adc
movs
jmp
sub
outs
shl
out
lock
sub
sbb
xchg
jmp
mov
push
jne
scas
hlt
xchg
pop
mov
dec
jp
inc
adc
inc
int3
mov
not
pop
jnp
sbb
adc
ret
cmps
push
mov
daa
pop
xor
pop
cmp
jl
cmps
push
jae
into
jo
pop
shl
sar
push
pop
ss
mov
lds
dec
fild
call
clc
xchg
add
mov
xlat
movs
mov
cld
mov
pop
inc
and
push
lea
mov
ss
out
xor
mov
push
sahf
sbb
stc
outs
scas
cli
xor
pop
mov
mov
mov
push
mov
int
rcl
pushf
aas
jns
push
scas
fdiv
sub
or
jbe
mov
push
cmp
das
adc
mov
sub
xor
in
enter
sbb
repnz
ds
enter
dec
movs
inc
lea
sub
xor
mov
daa
xchg
test
mov
xchg
(bad)
pop
sub
cmp
push
jmp
xchg
sbb
add
(bad)
es
and
(bad)
xor
fs
nop
jns
fsubr
sbb
retf
add
cmp
mov
or
mov
jge
cmp
rol
jb
sbb
xchg
mov
or
shl
call
push
movs
mov
inc
adc
pop
sar
daa
(bad)
loopne
fadd
xor
lods
out
retf
adc
movs
push
ror
cmp
adc
mov
pop
sub
or
inc
call
mov
add
fs
inc
ret
sub
pop
sbb
cmc
pop
js
loop
mov
ret
mov
jne
(bad)
pushaw
or
daa
inc
dec
and
dec
arpl
mov
or
pop
adc
and
dec
test
push
je
pop
imul
xor
sbb
jmp
sub
inc
xchg
xor
pop
cmp
and
fwait
ret
mov
and
enter
mov
jnp
inc
ins
ins
add
outs
add
les
jbe
or
mov
cmc
loop
jbe
dec
pop
mov
int3
mov
mov
arpl
ja
(bad)
mov
data16
scas
mov
fwait
bound
icebp
mov
sbb
sbb
cmp
mov
jg
cmovne
rcl
add
shl
loopne
xchg
or
sbb
or
sbb
adc
ficom
mov
or
push
fcom
retf
adc
rol
adc
cs
add
inc
push
shr
sub
push
sbb
xchg
iret
add
stc
add
repnz
nop
sbb
mov
test
test
mov
fldenv
sbb
mov
xchg
inc
push
aaa
mov
repz
cmp
movs
push
icebp
out
mov
adc
cld
(bad)
or
retf
js
dec
dec
push
aad
jae
mov
inc
outs
retf
aad
popa
jbe
add
mov
fnstenv
cmp
cmp
aam
shr
adc
ret
test
mov
add
aam
mov
sar
leave
jg
js
pop
leave
icebp
inc
mov
out
xor
lea
(bad)
(bad)
aam
push
pop
cmp
xchg
mov
lods
sub
test
or
or
pusha
rol
(bad)
mov
xor
retf
std
(bad)
cmp
sbb
or
data16
arpl
imul
cmp
mul
pop
mov
and
scas
add
cmp
cmp
sub
xchg
xchg
adc
sbb
mov
(bad)
and
xor
(bad)
and
out
push
in
fldenv
cmp
mov
scas
jl
leave
outs
mov
inc
sub
mov
cli
sub
cmps
das
xchg
mov
js
stos
pop
lea
and
push
scas
repz
inc
movs
xchg
jg
lea
loope
mov
into
and
lahf
mov
fmul
cld
arpl
or
adc
mov
add
scas
lahf
(bad)
leave
adc
sbb
and
xor
shl
mov
lods
inc
sub
sub
ja
cdq
dec
in
xchg
pop
inc
or
pop
int3
fwait
shl
or
cmp
adc
jl
fsubr
push
and
adc
int
add
mov
repz
mov
push
daa
hlt
pushf
dec
scas
scas
in
sar
pop
pop
inc
out
xchg
jl
out
xchg
aad
sub
push
push
lods
jb
inc
test
cmps
(bad)
push
or
xlat
mov
xchg
mov
(bad)
imul
mov
cmp
sub
stc
out
fist
xchg
icebp
dec
sbb
cs
mov
pop
lea
movs
jle
jmp
out
and
pop
mov
cmp
loopne
or
jne
shr
jae
mov
loope
test
outs
pop
push
mov
or
fnstcw
jb
add
sub
retf
sbb
(bad)
or
pop
aad
jbe
nop
mov
je
imul
cli
sub
mov
lods
mov
mov
inc
sahf
push
adc
sub
push
rcl
cmp
call
popf
push
mov
dec
jmp
adc
and
(bad)
mov
sbb
pusha
(bad)
fidiv
popa
adc
mov
ins
loop
sbb
mov
pop
cmc
mov
js
daa
jl
jnp
add
js
fldenv
push
popf
in
or
mov
aas
xchg
in
iret
outs
push
pop
xchg
add
jl
dec
enter
in
dec
(bad)
cmp
out
pop
cmp
dec
and
and
cmp
mov
jbe
in
arpl
or
loop
ret
and
jo
sub
mov
les
mov
out
mov
inc
fidiv
pop
mov
jecxz
inc
(bad)
mov
mov
jp
cdq
(bad)
je
push
mov
xchg
or
imul
jb
sbb
mov
stc
cmp
cs
lods
pushf
and
mov
sbb
mov
mov
cmp
jns
cld
xor
repnz
ror
mov
(bad)
adc
iret
cmp
in
sbb
push
je
xor
jle
out
leave
test
add
push
jl
fmul
repnz
into
jp
cli
js
sub
cdq
es
cmc
mov
(bad)
push
arpl
aad
mov
and
adc
ret
pop
fadd
ss
push
mov
mov
mov
cmp
pop
push
jge
faddp
dec
jle
fidivr
and
push
adc
inc
add
es
movs
push
retf
movs
add
imul
adc
test
push
cmps
fisttp
loope
ret
or
xchg
fdivr
icebp
jae
push
pop
mov
push
mov
pop
inc
or
fisttp
xchg
outs
aam
inc
xchg
test
sbb
jnp
pop
ret
mov
pop
sbb
fwait
pop
mov
mov
push
sbb
jbe
push
(bad)
pop
push
cmp
sub
loope
scas
xchg
or
mov
test
xor
sbb
lock
in
xor
mov
aas
sub
scas
mov
iret
xchg
inc
xchg
cli
es
jl
inc
sbb
movs
jmp
cwd
cmps
sub
mov
es
(bad)
push
dec
(bad)
xchg
dec
inc
dec
popf
or
(bad)
cmp
call
je
cmp
lods
stos
jb
adc
jno
adc
mov
push
stos
(bad)
aad
sar
mov
repz
out
cdq
push
mov
es
mov
int
fisubr
sub
retf
fwait
xor
pop
xlat
int3
dec
fisub
sub
and
and
and
sbb
or
call
hlt
jnp
xchg
mov
add
cmp
lods
pop
or
pop
mov
(bad)
retf
lahf
das
pusha
ja
repnz
into
jl
sbb
xchg
add
sub
lods
ss
jmp
and
dec
adc
xchg
rol
jo
aam
mov
aam
pop
and
adc
lahf
cdq
lds
aam
jmp
mov
push
adc
push
shl
aaa
cmp
inc
mov
mov
outs
arpl
pop
xor
xchg
cs
mov
push
and
(bad)
cmps
mov
gs
mov
xchg
jbe
push
jb
loopne
les
fisub
mov
dec
sub
daa
sub
pop
xlat
call
shr
mov
test
jns
mov
inc
mov
pop
jge
mov
frstor
dec
shl
add
xchg
xor
hlt
dec
aad
sub
in
mov
inc
mov
fs
sub
push
dec
cmp
movs
sub
inc
mov
cmp
repz
and
aad
outs
mov
jnp
and
or
int3
push
sbb
push
mov
test
mov
sub
ins
and
adc
mov
mov
movs
nop
xor
mov
stos
cmp
dec
xor
pop
cmp
sti
call
mov
jns
push
xchg
test
xchg
das
pop
and
leave
hlt
mov
mov
(bad)
jmp
and
ins
unpcklps
mov
call
dec
jbe
popa
mov
popf
jnp
xor
mov
stos
jnp
outs
xor
in
jle
test
stos
pop
add
icebp
popa
aas
xlat
xor
xor
movs
nop
sub
mov
fdiv
punpckhdq
std
push
and
or
jmp
inc
mov
sub
mov
mov
mov
jae
add
jmp
jo
mov
fld
xchg
sub
les
dec
mov
popa
sub
cmc
dec
pop
add
popf
push
ja
jmp
sub
jl
mov
pusha
test
push
and
jo
dec
cli
enter
scas
mov
lock
imul
(bad)
scas
lea
sahf
pop
nop
loope
mov
xor
sub
jp
push
cli
cld
int3
(bad)
loopne
dec
ins
gs
mov
loop
shl
or
fimul
jp
stos
popf
sbb
loope
cmp
inc
add
(bad)
sbb
cmp
push
sti
loope
cmps
inc
pop
push
loop
xchg
adc
call
fadd
mov
xchg
inc
out
les
mov
xchg
xchg
aam
cs
dec
sub
jae
xlat
scas
push
in
popf
dec
sahf
and
mov
mov
sub
cmps
and
inc
mov
(bad)
into
jne
das
adc
shl
ds
adc
cwde
mov
(bad)
call
mov
retf
stc
movs
fstp
enter
mov
mov
imul
mov
push
pop
aaa
dec
xchg
les
jne
inc
pushf
sbb
and
or
cmc
xchg
out
(bad)
jnp
fnstcw
or
sbb
ror
inc
lahf
sti
test
mov
cs
jp
push
adc
mov
and
repnz
jb
add
stos
push
or
cmp
xchg
sbb
int3
xor
xchg
iret
aad
jge
jb
jge
pop
jecxz
push
mov
fcomp
out
adc
jmp
add
jae
xor
(bad)
fsub
jl
or
mov
loop
cmps
inc
push
fdiv
xchg
and
xor
push
ja
rcl
add
stos
cld
mov
scas
xor
xor
retf
adc
pusha
iret
cmp
ror
adc
pop
pop
mov
jns
enter
add
add
lahf
pop
add
mov
push
movs
cmc
cwde
cli
pop
cli
ss
retf
pop
aad
xor
imul
push
js
fidivr
(bad)
mov
sahf
push
aaa
adc
pushf
and
fmul
out
iret
pusha
call
fnstcw
mov
sub
ins
dec
ss
outs
in
cmp
push
xor
test
fild
sub
stos
mov
cmp
cmp
add
inc
push
pop
inc
mov
es
out
and
fist
loope
adc
or
xchg
or
cmc
pop
aam
sbb
stc
dec
shl
in
lock
jecxz
inc
fistp
dec
leave
cwde
cmps
or
mov
(bad)
jmp
mov
mov
inc
mov
repnz
sar
mov
push
mov
aaa
inc
outs
repz
push
jle
pop
jmp
push
cwde
shl
scas
out
jl
les
jg
cmp
pop
std
nop
les
gs
dec
mov
sub
(bad)
std
push
inc
dec
or
out
fisttp
rcr
popf
jb
cmps
cmc
mov
push
jne
sti
cmp
pop
in
frstor
cli
sub
outs
dec
(bad)
cli
aas
and
daa
das
out
dec
enter
js
aam
dec
scas
inc
xlat
ds
(bad)
test
sub
add
sub
lds
push
push
adc
fisub
in
(bad)
ficom
dec
adc
pop
sub
sbb
xor
fs
call
std
xor
pop
ror
aas
jmp
jp
scas
adc
pop
fdiv
jmp
repz
scas
arpl
mov
scas
push
xchg
ret
es
or
dec
std
into
xor
push
sbb
push
and
sbb
addr16
pop
jne
test
aad
rcl
not
test
fsubp
(bad)
jle
shl
push
dec
lods
xor
dec
inc
or
in
mov
push
cmps
addr16
ins
xor
into
out
lock
out
sub
dec
mov
das
shl
or
(bad)
sbb
nop
rol
jno
scas
arpl
cmp
mov
into
pop
(bad)
out
pop
inc
mov
sub
repnz
xor
adc
mov
add
sbb
ret
mov
in
mov
sti
rcr
ja
push
stos
mov
or
xor
xor
mov
xchg
jne
xchg
mov
lods
int
mov
aas
jnp
ror
icebp
xchg
sbb
and
sub
ror
mov
cwde
test
and
ror
mov
pop
jmp
in
ret
cmps
or
cmp
sub
xchg
adc
pop
dec
sbb
scas
mov
inc
mov
mov
(bad)
fcomp
or
pushf
push
sar
arpl
in
shl
std
fsub
push
int
mov
add
dec
scas
fwait
in
stc
add
call
mov
retf
dec
data16
sub
inc
rcr
add
popa
cmps
mov
jmp
sub
xor
mov
pop
xor
repnz
add
es
call
push
dec
or
sbb
loope
or
ins
cdq
jne
out
sbb
cs
push
cwde
xchg
inc
and
jae
mov
fistp
aas
dec
inc
push
cdq
ds
arpl
mov
iret
add
jge
mov
das
leave
out
cmps
push
fsubr
or
sahf
add
aas
lods
pop
cmp
or
jge
ficom
call
pop
sbb
pop
repnz
inc
sub
inc
sbb
xchg
not
fild
mov
js
adc
in
imul
push
(bad)
mov
push
adc
fdiv
(bad)
je
jmp
mov
sbb
adc
stc
call
loope
push
inc
sbb
lea
or
(bad)
pop
inc
or
dec
mov
jo
addps
add
adc
xchg
ja
les
mov
dec
push
repnz
ja
add
idiv
or
fsubr
inc
mov
sti
daa
or
dec
les
(bad)
mov
test
or
jns
out
shl
not
push
iret
adc
sbb
jbe
sub
shl
cmp
fisttp
jle
lods
cwde
and
aad
sub
rcr
mov
xchg
add
rol
gs
(bad)
adc
sbb
ret
sar
push
loopne
test
ret
ds
jecxz
xlat
retf
nop
adc
inc
imul
dec
add
and
pop
or
xor
inc
jb
mov
push
lock
inc
ret
sub
mov
test
jne
lock
fst
ret
inc
or
mov
sbb
addr16
mov
jge
inc
push
in
or
jo
cmc
jp
imul
bound
mov
stc
add
jo
lock
scas
lods
adc
mov
sbb
retf
push
or
stos
xchg
out
and
xor
cmp
loope
jecxz
out
int
cmps
enter
(bad)
(bad)
jp
xchg
add
mov
add
movs
fdiv
test
xor
in
(bad)
mov
rep
mov
push
test
cwde
cwde
sub
and
sub
or
pop
leave
or
fidiv
retf
pop
imul
adc
xchg
bound
push
les
stos
and
pop
cwde
cmp
pusha
cmp
inc
jecxz
cmp
retf
je
ss
and
loope
cmps
xchg
sub
iret
inc
push
sahf
push
pusha
loopne
xchg
cmp
xor
rcr
mov
inc
inc
dec
and
jo
dec
xchg
jg
pop
mov
sub
cld
push
or
inc
fimul
mov
mov
ud1
pop
scas
dec
jmp
xlat
aas
xchg
cld
jae
aad
push
pop
sbb
xchg
stos
sbb
cmps
xor
cmp
shl
cmp
lds
and
int
xor
arpl
xor
(bad)
mov
jmp
and
xchg
dec
hlt
mov
sub
cmp
jmp
push
aaa
sti
jo
js
pop
scas
mov
inc
jp
push
jp
mov
adc
arpl
fidiv
push
sub
add
arpl
aaa
rol
shl
mov
push
outs
fld
jnp
push
pop
pop
mov
int3
jecxz
pop
jb
adc
(bad)
aas
sbb
adc
inc
push
loop
das
ret
xor
push
mov
add
je
sahf
pop
mov
hlt
das
out
pop
mov
cld
aaa
dec
movs
sbb
jnp
test
dec
mov
aam
jl
aas
push
fiadd
in
lods
(bad)
sub
dec
out
push
rcl
sub
mov
aaa
ret
xor
fs
mov
xor
in
icebp
sub
data16
cwde
push
mov
ja
ins
dec
sub
outs
jp
pop
sbb
push
adc
pop
mov
in
das
inc
hlt
(bad)
xor
dec
and
inc
push
xchg
loope
xchg
popa
mov
aaa
jecxz
adc
inc
sti
stc
aad
fld
add
push
xchg
mov
mov
sbb
mov
xchg
xchg
bound
mov
test
or
pop
retf
int3
into
mov
jmp
sti
scas
dec
mov
mov
sub
call
addr16
call
fdivr
imul
sub
mov
pop
pop
pop
inc
push
xchg
pop
jle
imul
aad
pop
movs
clc
add
out
loop
push
mov
es
mov
cmovae
mov
cmps
adc
mov
std
xchg
pop
sahf
xchg
inc
push
or
(bad)
dec
dec
scas
stos
test
rcl
adc
shl
fwait
imul
sub
jle
retf
add
mov
xor
retf
mov
sub
mov
dec
mov
jae
mov
and
test
hlt
ins
popa
or
add
int
dec
and
mov
push
cmp
les
jmp
aaa
adc
cs
das
fmul
enter
pop
mov
push
(bad)
cmps
mov
ret
mov
pushf
lahf
addr16
sti
inc
cmc
pushf
les
xchg
or
icebp
shr
cs
inc
pop
sahf
cmp
enter
sbb
xchg
imul
(bad)
cmps
mov
lods
dec
sub
out
repnz
mov
iretw
fdivr
shr
movs
sbb
pop
xor
dec
cmps
mov
pop
loopne
je
push
pop
rcl
addr16
sbb
xchg
test
xor
and
loope
pushf
or
push
xor
enter
xchg
div
es
lahf
and
adc
mov
sub
push
pop
pop
jmp
scas
or
pop
inc
sbb
push
inc
(bad)
xchg
test
mov
add
shl
xchg
shr
fcomi
sub
mov
mov
pop
popf
fst
es
bound
(bad)
pop
test
rcr
das
jl
cmp
sub
hlt
xchg
popa
stc
mov
inc
xchg
mov
mov
daa
jle
xchg
test
sub
(bad)
adc
push
mov
push
outs
out
mov
push
add
outs
scas
jg
out
test
std
push
(bad)
sbb
ss
sahf
movaps
sub
and
div
dec
jmp
mov
cmp
ss
add
dec
jmp
and
jmp
add
f2xm1
cmp
jbe
out
xchg
stc
loopne
out
pop
es
rcr
movs
jae
pop
js
fwait
scas
(bad)
retf
aas
and
mov
jge
xlat
cmps
fst
pop
cwde
sub
push
sbb
and
add
mov
xchg
xchg
mov
test
pop
stos
pop
or
ret
test
inc
test
push
out
leave
cmp
cmps
push
push
scas
cmp
or
mov
inc
ret
fld
dec
out
jp
mov
adc
mov
movs
(bad)
adc
mov
fmul
scas
ins
ja
push
jge
push
(bad)
loope
adc
push
add
bound
mov
iret
adc
lods
lea
jns
or
ret
sbb
and
lock
movs
shr
in
sti
or
mov
add
jmp
mov
push
jbe
add
les
popa
lods
xor
pop
lahf
mov
sub
outs
pop
adc
inc
das
js
mov
aam
adc
mov
frstor
out
dec
neg
fstp
aas
std
shl
ss
repz
(bad)
adc
pop
or
add
push
mov
mov
scas
(bad)
lods
pop
cld
xchg
cmp
cmp
stos
aam
sub
inc
pop
pop
loope
les
pushf
in
or
leave
add
lods
add
sub
push
ds
mov
pop
test
cmp
clc
add
jg
aad
pop
imul
(bad)
ficomp
adc
cvtps2pd
add
ins
push
stc
imul
movs
jmp
and
dec
popa
mov
push
dec
inc
sbb
int3
pop
ins
pop
and
push
mov
and
fs
lods
mov
fwait
pop
cmc
or
int3
cmp
lods
xchg
movs
mov
(bad)
hlt
mov
les
mov
inc
xor
sbb
push
and
pop
lock
out
mov
fist
inc
push
fiadd
cs
dec
outs
jle
je
or
pop
xlat
test
and
sub
sbb
cwde
ret
in
sbb
stos
adc
jl
fisubr
js
cwde
or
(bad)
dec
add
ds
or
jmp
xor
out
push
pop
shr
or
cmp
mov
adc
loopne
mov
xchg
pop
jmp
cmps
xchg
rcl
int3
in
neg
mov
mov
inc
stos
dec
mov
fisttp
cs
jae
out
nop
inc
mov
dec
dec
mov
stos
imul
pop
call
jge
mov
lock
push
icebp
push
push
sti
imul
(bad)
mov
call
or
xor
sar
fbld
rol
and
lods
push
pop
sbb
dec
cmp
cmp
pop
inc
stc
repz
je
adc
scas
pop
jmp
loope
enter
mov
pop
jnp
xchg
pop
sbb
push
and
jo
in
aas
dec
push
xor
ss
adc
shl
dec
cmp
mov
aam
cmp
popa
(bad)
in
imul
push
xor
(bad)
sub
idiv
cmp
ficomp
aaa
xchg
sti
pop
sahf
test
je
fucomip
mov
push
inc
or
retf
aaa
enter
mov
je
scas
lock
or
in
retf
and
cmp
mov
jp
xchg
sbb
push
inc
pop
push
jp
cmp
xlat
rcl
xor
ins
sahf
pop
(bad)
xchg
xchg
popf
sar
xlat
sti
sub
and
fs
neg
rol
sahf
add
div
inc
cli
cmp
out
rol
jo
loop
inc
stc
imul
and
arpl
jp
in
pop
btr
mov
or
int3
fld
inc
adc
mov
fcom
popf
xchg
pop
and
fwait
out
(bad)
stc
std
or
retf
push
xor
inc
add
mov
and
(bad)
or
cs
xor
das
dec
scas
dec
cdq
xchg
push
pop
int
ret
jmp
add
inc
add
push
sbb
in
imul
addr16
adc
add
repnz
std
sbb
hlt
iret
sub
sbb
mov
out
mov
into
xchg
aad
fs
add
enter
leave
int3
(bad)
sar
retf
cld
jbe
push
or
adc
cmp
pop
aas
clc
jle
cmp
fwait
sub
sti
pop
nop
cld
cmps
xor
pop
dec
mov
and
div
xchg
cmp
inc
cmps
retf
fwait
and
mov
aas
sub
inc
or
cs
jmp
mov
add
test
mov
lock
push
add
popa
adc
xor
and
jge
ret
or
fcmovbe
aaa
jecxz
jae
cmp
adc
add
stos
push
mov
test
add
xchg
into
cmp
ret
in
int3
xchg
pop
or
dec
xor
add
movs
movs
xchg
dec
fs
xor
mov
mov
sbb
stos
inc
add
mov
jp
mov
aam
and
daa
mov
cmp
pop
mov
icebp
in
jnp
add
xchg
xchg
push
daa
(bad)
cdq
ins
mov
imul
mov
int3
jo
leave
inc
leave
mov
in
cmp
in
add
xchg
xor
inc
je
push
lahf
sub
cmp
cmp
or
add
fstp
xlat
cmp
loopne
jae
xor
cwde
rol
jg
add
push
ins
out
xchg
es
jmp
dec
data16
ret
xchg
dec
pop
jp
jmp
scas
das
dec
retf
dec
add
sahf
xchg
loopne
shl
pop
addr16
test
sbb
xor
test
or
jecxz
inc
test
bound
push
sbb
(bad)
mov
inc
jns
fmul
sbb
sbb
xchg
mov
out
or
pop
loope
jnp
push
and
mov
inc
ins
rol
pop
jecxz
add
mov
pop
jno
add
mov
pop
add
xchg
ror
or
sub
jno
into
fisubr
imul
cdq
sbb
sti
cmps
mov
cs
or
or
jp
jbe
dec
std
or
retf
mov
aas
cs
xchg
neg
jb
ins
push
cmc
jno
xchg
sub
cmp
sbb
dec
sub
arpl
mov
push
pusha
sub
mov
and
lahf
fucomi
pop
lock
adc
call
adc
(bad)
pop
jmp
mov
je
out
or
das
inc
inc
or
cmp
enter
lods
add
cli
imul
lods
mov
in
adc
cmp
xchg
sbb
js
sbb
sub
mov
inc
(bad)
out
enter
sbb
(bad)
jb
ret
mov
mov
xchg
mov
dec
xchg
out
mov
mov
cmps
dec
inc
cmp
adc
test
nop
inc
pusha
outs
xchg
int
stos
xchg
stos
mov
cmc
mov
fdivr
jmp
push
xlat
jl
sub
or
arpl
mov
push
fsubr
cmp
and
adc
test
mov
dec
jno
xor
xor
ret
pop
retf
rcl
pop
xor
pop
popf
push
sbb
inc
cli
push
sar
inc
push
add
cmp
sub
das
adc
mov
dec
fld
mov
neg
ror
mov
or
cmovo
and
xchg
xor
ret
or
shl
mov
gs
and
shr
add
xor
outs
div
into
sbb
ret
and
es
xor
sub
(bad)
in
ret
inc
retf
mov
inc
and
xchg
xor
ja
xchg
dec
(bad)
stos
les
imul
aad
cmps
or
pop
leave
push
retf
lds
jb
mov
sti
sub
cmp
xchg
pusha
ret
sub
movs
pop
repz
jl
or
test
adc
cmps
stos
dec
or
pusha
push
xor
lock
cmp
sbb
mov
sub
xor
pop
fidiv
mov
dec
ds
out
cmp
pop
es
bound
aas
jns
xchg
add
dec
in
dec
sar
jg
or
repnz
sahf
lds
adc
pop
or
sbb
iret
lds
inc
out
hlt
cmps
and
mov
fnstcw
nop
push
data16
xchg
dec
and
cmp
cmp
pop
jnp
xlat
and
dec
adc
cdq
cs
add
ins
aad
in
stos
push
sti
push
sub
aas
pushf
mov
inc
dec
fiadd
push
jle
cmp
movs
ins
repz
cdq
mov
adc
mov
scas
aas
or
mov
dec
xlat
shl
xchg
xchg
sti
arpl
jl
mov
repz
sbb
fcom
(bad)
sub
shl
fist
pop
dec
and
lods
aaa
xlat
push
pop
fist
push
push
or
xor
pop
jg
inc
lahf
stc
ja
push
mov
popa
inc
xor
pop
in
sub
stos
pop
fadd
aad
xor
inc
xchg
sbb
not
push
popa
icebp
dec
push
ds
adc
push
adc
sti
std
push
mov
test
add
or
loopne
pusha
fwait
or
inc
pop
cdq
nop
sbb
stos
sbb
mov
call
cmps
mov
sar
adc
push
lods
test
aad
leave
cmp
dec
popa
inc
retf
icebp
adc
mov
lock
mov
leave
adc
mov
xchg
pop
or
bound
sbb
jo
jl
sbb
xchg
rol
sub
out
inc
mov
add
push
rol
inc
inc
push
mov
cmps
jnp
(bad)
jno
jno
leave
or
nop
adc
(bad)
mov
push
sbb
mov
hlt
xlat
call
jg
sub
mov
in
jmp
pop
stos
icebp
or
mov
inc
adc
xchg
push
xchg
inc
xsha1
cmps
dec
ins
test
mov
sub
fsubr
push
jge
test
ins
and
cmp
fmul
pop
div
cmps
xchg
mov
jg
inc
sahf
or
cmps
pop
pop
xor
out
xchg
sub
add
push
inc
or
clc
or
(bad)
(bad)
mov
and
cmp
xor
mov
(bad)
mov
gs
cli
(bad)
lahf
jp
mov
clc
mov
xchg
inc
outs
js
loop
cwde
sub
jp
stos
push
xor
dec
sub
add
das
pop
adc
(bad)
and
pusha
sub
int
mov
clc
jmp
stc
lds
(bad)
jmp
ficom
dec
ficomp
mov
imul
fwait
push
ins
mov
test
xchg
imul
popa
push
jmp
inc
jg
fld
mov
cs
adc
mov
aas
push
(bad)
out
push
mov
movs
inc
xor
xchg
or
fcom
inc
sub
jmp
sbb
test
sub
add
int3
jl
pop
cmp
fisub
ffree
mov
jg
adc
lahf
mov
test
jns
test
out
cmp
outs
test
dec
leave
loop
scas
call
dec
repnz
inc
and
sub
cmp
lods
sahf
mov
mov
sbb
and
mov
ret
lahf
mov
in
cwde
add
lahf
cmp
xchg
mov
mov
das
enter
inc
arpl
out
fstp
jl
xlat
mov
leave
push
jp
loope
dec
fsincos
mov
adc
dec
fs
push
or
loop
sbb
or
lods
pop
js
inc
shl
je
cmc
mov
retf
popa
es
and
outs
sbb
mov
(bad)
pop
imul
xor
cmp
mov
xchg
(bad)
outs
adc
jmp
bound
cmp
jb
sti
mov
mov
mov
shl
mov
icebp
push
cli
and
add
cmp
sbb
or
mov
fs
pop
inc
fs
fidivr
dec
rdtsc
pop
fcmovb
mov
mov
sub
loop
dec
inc
das
xor
out
cmp
push
sbb
jle
mov
into
push
into
jns
ret
test
(bad)
inc
xchg
adc
adc
sub
popa
sub
xchg
mov
lods
cmp
rcl
pop
push
mov
add
cdq
jne
mov
ds
push
adc
fcomip
or
leave
call
adc
inc
dec
pusha
mov
push
ins
stc
mov
in
and
aad
mov
sub
cli
(bad)
mov
cmp
sti
and
cld
fcmovnu
xor
pushf
outs
js
push
inc
(bad)
push
and
leave
hlt
mov
pop
iret
dec
and
adc
test
sub
mov
xor
sbb
lds
or
sbb
aas
mov
mov
stc
in
lds
pop
cs
lahf
mov
adc
in
sbb
dec
jnp
xchg
inc
cmp
xchg
or
dec
pop
and
cdq
jns
pop
dec
adc
mov
bound
cmp
sub
and
or
adc
xchg
pop
test
imul
aam
xor
sbb
shr
inc
cmps
fisttp
mov
push
sub
daa
cmps
xor
add
arpl
or
into
sar
fsubr
in
aas
inc
loope
jl
xor
test
stos
pop
movs
retf
call
cdq
retf
mov
sub
fdiv
neg
xchg
jbe
xchg
in
dec
(bad)
fcmovbe
jge
and
je
nop
or
gs
xchg
push
out
pop
mov
or
fild
and
xchg
sub
aaa
out
push
(bad)
fsubr
in
lods
ja
jge
ret
rol
in
push
or
mov
xor
adc
(bad)
ficomp
push
mov
test
push
shr
cmp
imul
jg
outs
scas
out
fcomp
mov
xor
std
mov
fcom
push
jg
add
adc
adc
out
pop
xor
jl
xchg
cmp
pop
out
add
addr16
mov
inc
add
sub
shl
int
mov
loopne
or
call
sbb
out
std
test
stos
fldenv
fs
xor
cli
xor
outs
and
mov
pop
add
cmp
xchg
mov
jg
cmp
cmp
aam
call
mov
repnz
aas
test
mov
sbb
add
dec
nop
fdivr
popa
pop
ins
imul
adc
imul
and
or
movs
leave
push
lock
lock
mov
(bad)
adc
rcr
pop
enter
inc
fbstp
in
shl
nop
jo
sub
fisttp
mov
retf
jecxz
cmc
cmp
setle
pop
ror
jge
or
stc
mov
out
adc
cmp
int
mov
sbb
or
mov
adc
xchg
xor
jg
mov
fimul
dec
cmp
push
sbb
int
or
cmps
movs
and
xor
inc
fst
and
inc
rol
add
inc
cmp
imul
inc
xor
fdivp
jbe
repz
mov
push
loope
shl
movs
add
mov
xlat
or
aam
cmp
jae
jns
push
inc
mov
mov
add
jo
ins
cmp
adc
es
(bad)
cmc
rcr
es
scas
popf
or
sbb
xchg
or
jo
mov
mov
inc
dec
retf
xchg
imul
(bad)
inc
ins
inc
mov
(bad)
imul
repnz
push
sbb
retf
leave
out
pusha
repnz
xor
or
xlat
add
ret
pop
xor
xchg
scas
mov
mov
loopne
out
xchg
leave
jnp
inc
and
sub
pop
add
inc
pop
les
retf
mov
and
ja
retf
and
je
ins
mov
(bad)
pop
cmp
hlt
sar
mov
cs
pop
inc
mov
into
or
mov
jnp
test
scas
mov
adc
xchg
xchg
sub
or
dec
push
and
test
jne
in
rcr
push
ds
add
mov
aaa
lods
scas
aam
inc
mov
loope
mov
sub
shl
scas
mov
lock
cld
ds
push
xor
retf
or
inc
pop
mov
fprem
stos
inc
dec
push
cmps
lods
mov
ret
sbb
adc
inc
push
push
rcl
cmps
pop
jae
stos
lds
shl
iret
addr16
movs
sbb
out
adc
sbb
pop
cs
pushf
sub
inc
cmps
icebp
xchg
cli
lahf
imul
push
stc
sub
and
(bad)
loopne
jo
(bad)
push
cdq
pop
adc
ror
pop
jge
sbb
inc
sbb
push
mov
scas
jno
xchg
push
xchg
push
inc
xor
push
mov
jg
adc
sub
adc
das
xor
retf
mov
imul
retf
leave
cmp
xchg
xlat
jmp
inc
jmp
popa
xchg
cmp
mov
or
inc
xor
inc
mov
call
inc
rcr
mov
fadd
and
cmp
iret
movs
mov
sbb
inc
cmp
mov
add
xor
and
into
xor
sub
inc
xchg
data16
lods
retf
jge
test
pop
dec
into
sub
popf
or
pop
cmp
xchg
mov
rcr
or
pop
jg
psrld
ret
daa
aam
pop
pop
(bad)
push
adc
repnz
sbb
push
dec
push
adc
push
adc
fisubr
sub
lds
das
ds
cmp
sbb
sub
fnsave
mov
in
or
jmp
enter
mov
and
and
pop
out
mov
adc
xchg
cmps
dec
or
ins
mov
pop
adc
adc
ror
shl
dec
jo
adc
inc
cmp
sbb
imul
fistp
dec
ror
dec
ret
not
ret
cmp
clc
push
imul
mov
and
out
data16
mov
sti
mov
adc
xchg
mov
jecxz
cmps
and
ins
sti
rol
push
lds
fistp
xor
pop
pop
sbb
jmp
cmp
xchg
sbb
mov
xor
sub
icebp
jno
fmul
mov
sub
fcomp
sahf
xor
test
rcr
mov
xor
inc
les
rcl
xor
(bad)
inc
popa
adc
stos
in
movs
movs
xlat
xchg
or
cli
mov
cmps
movs
jp
and
sub
mov
and
(bad)
cmps
ret
fisttp
movs
lods
(bad)
out
int3
xor
lods
call
xchg
call
data16
jb
div
inc
mov
inc
shl
outs
mov
push
fadd
daa
mov
retf
test
cmp
cli
xchg
cmp
jns
into
aad
add
ja
retf
push
push
ror
mov
popf
push
or
adc
adc
sbb
sub
cmp
push
mov
xchg
fstp
or
cmc
es
retf
(bad)
(bad)
(bad)
add
jns
mov
pop
lock
jl
ret
pusha
dec
rol
inc
idiv
and
mov
dec
in
cld
out
fcomp
pop
mov
xchg
scas
bound
dec
inc
leave
mov
push
test
add
inc
pusha
xchg
aas
jmp
mov
in
mov
pop
push
jp
inc
mov
xchg
(bad)
in
rcr
jbe
std
test
std
cmp
je
mov
mov
ins
fs
and
loopne
lahf
mov
push
pop
test
jmp
adc
es
mov
xchg
(bad)
cld
mov
aad
sub
sahf
std
ds
dec
inc
jl
gs
cmp
iret
call
xchg
mov
xor
mov
add
inc
or
(bad)
hlt
dec
loop
in
adc
aaa
sbb
adc
outs
repz
pop
loop
mov
push
cmps
pop
mul
sub
mov
out
jbe
test
mov
mov
mov
xor
nop
mov
push
lds
xor
pop
repnz
mov
jmp
adc
(bad)
in
mov
std
mov
and
sbb
push
xchg
cmovnp
popa
retf
dec
fwait
ds
jecxz
rcr
cmc
out
lahf
mov
mov
adc
(bad)
lock
retf
clc
xor
(bad)
ret
pusha
test
dec
mov
ret
and
xor
outs
dec
ret
addr16
push
cs
cdq
or
cmc
inc
xor
mov
sub
retf
mov
add
sub
lock
aad
ins
pusha
push
arpl
int
pop
aad
pop
imul
jl
cmp
js
mov
sub
sar
int
sub
fdiv
jg
popa
jmp
es
cmp
cmps
mov
out
or
mov
mov
ds
ret
retf
repnz
iret
add
jmp
sbb
xchg
push
or
add
jp
inc
xor
addr16
ror
je
(bad)
lds
push
in
enter
movs
dec
xchg
mov
sub
mov
adc
pop
xchg
or
cmp
icebp
mov
retf
sbb
hlt
or
inc
fisttp
sbb
in
mov
inc
fbstp
cwde
dec
out
dec
pop
in
jecxz
stc
fsubr
mov
cdq
imul
pop
jle
dec
rcr
int
xchg
test
xor
push
sub
pop
das
ret
scas
add
jnp
out
mov
int3
mov
js
loopne
gs
div
cmps
mov
cwde
popf
out
mov
stc
jmp
sbb
mov
mov
mov
pop
mov
or
jnp
push
inc
mov
jno
sar
imul
stc
je
and
cwde
jg
ds
inc
loopne
push
add
xchg
imul
mov
enter
aas
test
fidivr
ffreep
or
aaa
mov
mov
(bad)
xchg
dec
pop
adc
jns
jl
fidiv
xchg
xchg
daa
shl
cwde
sub
test
retf
aas
adc
fimul
ins
test
xchg
js
icebp
jecxz
inc
loopne
mul
add
fsub
mov
sbb
xchg
jge
lods
mov
sub
push
scas
in
mov
repnz
adc
mov
jns
pop
shr
sub
stos
shl
jns
cmp
adc
and
mov
xchg
dec
mov
adc
out
test
fiadd
ret
cli
(bad)
into
fistp
dec
iret
jne
test
shl
scas
jne
xchg
das
push
mov
fisubr
scas
das
inc
push
dec
stos
mov
daa
add
out
iret
sbb
scas
mov
(bad)
mul
and
enter
xor
loope
pop
mov
and
dec
sbb
sbb
dec
daa
push
or
sti
out
pop
mov
jno
mov
jns
cmps
mov
in
dec
push
addr16
cld
sub
(bad)
dec
imul
icebp
and
out
adc
jp
xchg
cmc
pop
mov
call
rcl
mov
sbb
mov
lods
lock
jg
jne
in
fdiv
call
push
cmp
mov
icebp
fstp
or
xor
push
or
xchg
and
mov
push
add
cwde
cmc
dec
mov
jns
pop
in
mov
xchg
jb
add
rcl
enter
sbb
push
fiadd
push
aam
retf
and
leave
inc
cld
xor
push
fwait
pop
scas
adc
push
dec
rcl
xor
adc
inc
adc
bound
mov
ret
(bad)
cmps
mov
jno
xor
cmp
inc
add
(bad)
and
jecxz
leave
lods
aam
dec
mov
icebp
(bad)
arpl
xchg
mov
loope
shl
icebp
jbe
arpl
and
pop
(bad)
pop
enter
xor
sub
sub
cmps
xchg
xor
shl
mov
jmp
mov
int3
out
sub
push
and
pop
rcr
pop
mov
shl
gs
push
clc
push
mov
lock
test
fdivr
xchg
push
mov
cdq
icebp
dec
sbb
mov
sbb
mov
xchg
fisubr
mov
xchg
and
(bad)
xor
test
fwait
adc
mov
xor
xchg
das
xchg
iret
and
mov
cld
inc
das
into
sub
fldenv
shl
cmps
pop
inc
mov
addr16
xchg
xchg
inc
call
out
jecxz
mov
dec
jno
push
test
ror
dec
dec
or
ds
inc
jmp
test
cmp
push
int3
nop
dec
pop
fisttp
xlat
cli
aad
jbe
sub
mov
inc
and
fwait
lods
fucom
and
pop
outs
pop
mov
lods
inc
jp
clc
xchg
mov
sbb
int
mov
(bad)
std
rcl
loop
popf
push
popf
cmp
out
push
push
add
inc
mov
popa
sub
daa
jnp
cmp
add
push
adc
adc
mov
gs
inc
push
mov
(bad)
mov
mov
jl
mov
jne
hlt
mov
or
pop
dec
add
call
shr
mov
popf
bswap
dec
mov
stos
outs
pop
(bad)
mov
cmp
dec
lods
push
out
ret
pop
cs
pop
inc
les
test
and
iret
out
jmp
inc
dec
inc
xchg
cmp
icebp
xchg
inc
xor
(bad)
push
jo
(bad)
pop
aam
test
mov
jns
add
loopne
and
xor
push
retf
sqrtps
dec
lds
hlt
sbb
loop
arpl
push
popf
cmp
xor
push
and
dec
stos
addr16
push
xchg
or
cmp
and
ss
mov
(bad)
loop
fimul
into
jmp
out
mov
fisttp
push
inc
std
sbb
sub
jb
idiv
dec
xor
inc
ss
push
or
jg
inc
xchg
nop
(bad)
add
popf
or
pop
enter
mov
push
retf
sub
pop
xor
ins
popa
ret
fadd
mov
and
sahf
mov
jns
pop
retf
into
add
sar
dec
mov
and
or
(bad)
(bad)
sub
stc
in
mov
sbb
sahf
mov
pop
mov
sub
xor
int3
arpl
arpl
xchg
call
inc
mov
xchg
mov
je
add
div
adc
mov
cmps
add
imul
ins
retf
into
das
or
inc
in
cs
inc
and
aam
push
add
xor
push
cmps
inc
mov
xchg
out
nop
adc
jle
jnp
pop
sub
pop
mov
jns
sahf
or
stos
xchg
outs
push
inc
push
cmp
cmps
cmp
fiadd
call
cmp
or
sti
sub
sbb
xchg
mov
inc
add
or
es
imul
shl
adc
out
cli
fstp
movs
cmp
push
sub
icebp
xchg
fucomi
mov
clc
xchg
pop
xchg
mov
jl
ret
cmp
adc
std
outs
add
mov
fisttp
jns
(bad)
mov
jae
push
mov
fist
popa
neg
push
fnstsw
(bad)
(bad)
aam
jnp
mov
push
out
xor
pop
xchg
mov
movs
push
or
cmp
stos
dec
lock
test
jmp
mov
pop
mov
aas
(bad)
xor
and
lock
xchg
retf
ins
jb
aad
hlt
or
push
push
ret
push
cmc
jbe
and
mov
dec
imul
test
jae
icebp
clc
push
cmps
push
cmovb
dec
iret
out
in
fwait
mov
hlt
std
push
fdivr
popf
outs
push
mov
jmp
inc
cwde
add
mov
pop
out
jb
cwde
jne
jno
imul
add
sbb
inc
push
ds
stc
inc
jl
loope
fnstsw
jb
stc
pop
loope
jmp
jo
ja
push
mov
(bad)
int3
lea
in
(bad)
lds
push
jecxz
xor
(bad)
or
(bad)
sbb
xor
add
int3
xor
fisubr
adc
(bad)
(bad)
cmp
call
aaa
sub
cmp
repz
cmp
or
jmp
leave
sub
arpl
mov
je
arpl
pop
mov
ror
push
(bad)
in
nop
fs
ins
outs
leave
pop
push
ficomp
rcl
out
sbb
push
pop
stc
leave
xchg
iret
sub
loopne
xchg
mov
movs
push
mov
bound
retf
movs
(bad)
out
daa
call
outs
cli
sbb
inc
sbb
(bad)
xchg
(bad)
lods
(bad)
in
inc
mov
cdq
mov
mov
push
add
int3
nop
dec
popf
in
jg
dec
jecxz
sbb
sub
xchg
adc
cld
add
cmc
mov
adc
loope
xor
pop
dec
pushf
in
push
cwde
mov
shr
mov
data16
mov
cdq
test
jecxz
(bad)
mov
mov
inc
cmp
jp
int
jp
pusha
test
nop
xchg
adc
jae
dec
jno
sar
sub
outs
add
sub
popf
or
cmp
mov
fistp
fadd
clc
std
xor
sbb
push
push
test
sub
mov
fwait
xchg
xor
movs
jns
sar
mov
xchg
mov
cmp
jne
outs
xchg
(bad)
ror
cs
cmp
or
out
cmp
sbb
add
adc
xchg
push
lahf
jl
imul
pop
cli
xchg
mov
in
int3
repz
push
push
imul
(bad)
lods
fstp
test
(bad)
in
xchg
mov
pop
cwde
outs
hlt
jle
push
mov
leave
scas
cmp
fwait
hlt
out
push
pop
dec
in
arpl
mov
rcr
aam
cmp
ficom
enter
stos
jmp
mov
sbb
in
(bad)
dec
mov
sar
in
mov
scas
cmc
lea
push
mov
jmp
dec
mov
mov
push
dec
clc
sbb
or
icebp
cmps
or
repnz
dec
sub
pop
xor
(bad)
cdq
mov
in
retf
clc
fbld
(bad)
shl
dec
cwde
sbb
mov
xchg
adc
mov
xor
js
imul
or
(bad)
inc
mov
sahf
pop
push
or
pop
outs
inc
push
xchg
call
cmp
(bad)
out
jp
jmp
shl
mov
int3
fadd
hlt
test
pop
loop
sub
sbb
xchg
mov
lock
(bad)
(bad)
jns
and
sub
xor
test
inc
stos
sub
cmp
pushf
cmps
mov
sbb
pop
or
out
jnp
shl
aad
adc
int
(bad)
pop
mov
dec
pop
repnz
inc
xor
fs
fisubr
into
ss
sbb
cmps
adc
lea
fidivr
shl
(bad)
retf
jp
sbb
cmp
lods
sub
add
mov
xchg
pop
fld
test
loope
or
hlt
out
jmp
and
call
cmc
movs
cmp
mov
(bad)
(bad)
(bad)
es
cmp
js
or
gs
movs
dec
mov
sub
test
add
outs
cmp
fisttp
and
pop
popf
fadd
mov
sbb
sbb
mov
mov
cli
aad
jmp
push
mov
pop
lods
sub
js
daa
call
loopne
je
repz
in
shl
jg
fdiv
lahf
jge
inc
cmp
lahf
cmp
in
pop
mov
ror
sti
and
dec
cwde
mov
mov
popw
pop
jmp
and
push
pop
clc
cmp
xchg
cmp
daa
inc
arpl
mov
iret
out
loop
cmp
(bad)
mov
or
cmp
sbb
imul
jne
fcom
cmps
add
(bad)
rol
ja
cmc
scas
leave
es
imul
and
test
loopne
cmp
daa
push
pop
xchg
sar
retf
xlat
xchg
and
ins
inc
adc
ret
sub
and
les
pop
xor
mov
sbb
dec
xchg
xchg
add
push
inc
fisubr
lahf
inc
pusha
sbb
adc
push
imul
jns
movs
clc
xchg
dec
imul
inc
jo
mov
sti
(bad)
sub
jne
jg
mov
mov
imul
mov
(bad)
jns
adc
mov
jg
push
loopne
pop
and
out
push
sahf
or
ret
imul
imul
inc
jle
cmp
xchg
mov
jbe
les
mov
mov
gs
push
test
and
pop
mov
xchg
jno
ficomp
push
test
xchg
pop
loopne
jns
test
push
cli
sub
jne
ds
dec
add
out
sub
inc
data16
in
sub
pop
mov
sub
jmp
xor
sub
adc
outs
or
fwait
mov
cdq
mov
dec
mov
mov
jge
fwait
repz
sub
movs
sti
pop
inc
mov
jb
call
jmp
out
pusha
dec
sub
sahf
pop
add
xchg
cli
rol
mov
test
ror
popf
pop
push
mov
push
dec
mov
neg
gs
into
fcmovnbe
add
mov
cmc
out
mov
pop
push
cld
jmp
jl
fst
cmps
xchg
icebp
aad
and
push
sub
daa
cmp
xor
bound
test
jb
imul
add
pushf
repz
xchg
movs
cmp
cwde
pop
lea
cs
xchg
imul
dec
or
(bad)
outs
jmp
cmps
and
aam
mov
rcl
fwait
in
(bad)
loopne
(bad)
mov
pop
lea
call
out
jg
repnz
(bad)
aam
pop
lahf
or
retf
loope
js
jae
cmp
xchg
inc
mov
cmps
inc
pop
sub
lahf
and
enter
hlt
fild
lods
daa
jp
fcom
and
sbb
cmp
push
push
or
jno
and
cmps
movs
nop/reserved
inc
enter
sbb
outs
aaa
xlat
ret
pop
rcl
sub
cmp
out
call
scas
pop
sbb
icebp
jne
sub
xchg
add
enter
ds
gs
nop
and
call
or
cs
cmp
mov
ds
pushf
add
stos
push
dec
loopne
imul
in
mov
arpl
pop
sub
ja
shl
dec
das
inc
sub
adc
imul
jle
imul
loop
xchg
inc
push
cmps
mov
cmps
add
inc
fild
or
test
mov
loope
fcmovnbe
mov
ror
mov
sub
sbb
ret
das
rcl
rol
mov
daa
mov
cs
jp
pop
cmps
mov
dec
ror
jbe
jae
rcr
nop
inc
xchg
cmps
lock
inc
outs
xor
and
adc
mov
ins
mov
fwait
movs
lea
xchg
pop
or
add
mov
sbb
and
inc
call
sub
repnz
imul
or
mov
pop
loop
xor
sahf
cld
call
jmp
iret
sub
fisttp
sahf
sbb
xor
push
addr16
cmp
es
jmp
or
xchg
out
adc
lock
std
push
pop
enter
push
loopne
lods
cmps
push
inc
xchg
inc
dec
sub
mov
nop
push
sbb
cmp
int
xor
aaa
xchg
test
fiadd
aad
xchg
pop
sbb
repnz
cmp
cmp
mov
jp
imul
dec
mov
loope
jecxz
pop
push
stc
sahf
lods
cmp
data16
adc
xchg
(bad)
dec
aas
push
xor
cmp
mov
adc
xchg
mov
sbb
inc
push
into
sub
cld
jo
test
jmp
pop
repz
call
out
add
mov
call
enter
ret
xchg
and
test
int
mov
or
or
xchg
mov
das
inc
jno
jae
daa
add
popf
(bad)
sbb
pop
xor
sti
(bad)
nop
jbe
cmp
jae
xor
and
sahf
dec
mov
xchg
mov
(bad)
aas
(bad)
jmp
push
ret
inc
cmp
xor
iret
ins
lods
ins
bound
(bad)
jae
adc
adc
mov
push
xchg
adc
(bad)
in
dec
loopne
fdivp
ss
ss
adc
rcl
test
sub
mov
xchg
clc
dec
sbb
int3
mov
sub
cmp
movs
stos
fiadd
jne
adc
push
iret
nop
sbb
mov
shr
daa
inc
mov
rcr
sub
int
push
shr
xor
jmp
inc
dec
mov
or
xor
(bad)
push
xchg
std
sub
adc
stos
jns
pop
cmp
mov
pop
sbb
and
pop
out
pop
nop
sub
rcl
hlt
sbb
dec
mov
jb
(bad)
iret
pop
scas
push
mov
loop
call
(bad)
or
in
xchg
das
aad
push
inc
loope
mov
push
shl
dec
ja
pop
icebp
je
fnsave
sbb
test
enter
jno
gs
xchg
pop
jnp
out
mov
jle
xor
aaa
push
sbb
xor
cmp
jge
cmp
jne
loope
pop
int
retf
movs
push
cmps
push
mov
mov
iret
fldcw
inc
pop
je
xchg
imul
retf
adc
cli
jecxz
ins
stos
inc
mov
cmc
hlt
push
xor
movs
mulps
cmp
stos
sub
cmp
lods
xchg
fnsave
fisttp
pop
mov
and
retf
pop
sub
je
(bad)
lds
test
lea
add
sar
movhps
mov
mov
xchg
adc
jle
mov
jae
repz
cdq
jns
sub
mov
mov
movs
sub
(bad)
in
mov
or
sahf
cmp
(bad)
aad
jnp
and
cs
test
cs
xchg
ffree
or
mov
bound
jmp
ror
add
das
int
mov
mov
scas
out
gs
push
adc
stos
xchg
out
jb
out
dec
call
mov
sahf
dec
pop
in
nop
xor
adc
cmovs
scas
call
sahf
xchg
in
fwait
push
call
stos
mov
(bad)
xchg
sbb
jmp
push
test
jg
mov
mov
xchg
cs
scas
shl
gs
adc
sub
call
test
pop
add
cmc
icebp
shl
dec
clc
aam
es
(bad)
popf
mov
push
popf
mov
jne
aam
or
cdq
les
stc
hlt
cmp
addr16
mov
cmp
pushf
sbb
sub
cmp
cmp
clc
cmps
stos
push
cmp
mov
ins
je
jmp
xor
aad
test
or
fdiv
push
mov
test
ficomp
jae
out
(bad)
jge
inc
sti
inc
popa
popa
mov
cmps
ror
jmp
inc
mov
and
addr16
xor
call
pop
shl
or
ss
das
fisttp
imul
jmp
sbb
cmp
sbb
mov
retf
cmps
shl
aas
push
add
mov
jbe
xchg
repz
into
jmp
cmc
inc
das
jp
das
sub
std
xchg
add
jno
fnop
scas
or
push
dec
retf
imul
not
add
inc
and
adc
pop
add
mov
mov
sahf
fsub
xor
adc
adc
scas
mov
sti
mov
and
add
add
lods
ss
pop
js
jp
retf
push
cmc
leave
fsubp
test
fld
mov
jb
shl
sbb
adc
pushf
loope
mov
imul
out
dec
mov
sti
pushaw
cmp
fisttp
mov
sbb
lahf
(bad)
inc
and
stos
imul
mov
add
xchg
mov
mov
cli
inc
daa
int
pop
nop
cmps
aas
sbb
(bad)
fst
lahf
test
xchg
jle
iret
out
pushf
pop
clc
sbb
xchg
iret
pop
and
cdq
jp
dec
push
dec
aad
dec
sbb
in
adc
neg
repnz
pop
sub
inc
mov
and
rcr
jge
loopne
lock
jae
dec
rcl
xor
dec
mov
cmp
mov
loope
mov
dec
push
xor
std
daa
gs
test
pop
add
xchg
sti
pop
(bad)
adc
sub
sbb
push
add
and
cmp
xchg
stos
fsubr
mov
cmp
dec
sub
mov
cmp
hlt
inc
aas
(bad)
push
mov
or
mov
movs
out
mov
call
ss
dec
int3
jg
and
dec
lea
mov
rcr
scas
xchg
test
mov
mov
inc
loopne
push
mov
jmp
push
add
adc
rcr
popa
pop
push
rcr
outs
mov
jmp
mov
int3
jle
call
dec
jg
mov
cmp
pop
jle
sub
adc
stos
cmp
pop
ret
cmpnleps
pop
sbb
in
sub
inc
lahf
cli
loop
icebp
dec
adc
jecxz
add
js
lahf
cmp
aas
shl
fsubr
fcompp
fnstcw
dec
je
push
popf
fsubr
ffree
lahf
lock
ss
xor
test
mov
jmp
cs
push
sub
cmps
mov
pop
mov
jno
and
pop
sbb
and
adc
(bad)
in
adc
jb
les
sbb
loope
sbb
adc
test
scas
mov
inc
loope
mov
ins
pusha
loop
pop
in
sahf
sahf
nop
and
inc
sbb
push
pop
sti
pop
sub
mov
xchg
or
dec
mov
cmp
or
imul
pop
pop
push
cmps
call
cmp
mov
xor
and
fwait
std
add
jmp
push
or
pop
fs
loop
out
push
mov
das
xlat
dec
sbb
cmp
les
sahf
pop
push
push
adc
jle
ror
daa
movs
iret
rcr
mov
das
adc
scas
jns
xor
pop
fisubr
jo
mov
(bad)
xchg
fadd
add
inc
xor
push
xchg
mov
movs
cmp
out
jl
sub
mov
jle
and
pushf
stos
pushf
dec
jge
repz
add
test
cwde
cmps
fimul
mov
xchg
sar
lds
mov
or
shl
scas
pop
xchg
int3
cs
in
movs
repz
cmp
inc
and
dec
pop
and
mov
mov
cmp
mov
lock
(bad)
xchg
jns
adc
pop
xor
cmp
int
fsubr
ret
or
push
jmp
popa
jp
mov
push
jae
imul
scas
jg
loop
and
xlat
loop
inc
pop
pop
push
call
push
or
mov
or
add
adc
loopne
mov
jmp
inc
lea
scas
leave
xchg
xchg
xchg
(bad)
cmc
cwde
scas
cwde
and
int3
(bad)
xchg
pop
retf
out
adc
push
inc
pushf
mov
(bad)
pop
add
js
add
ins
pusha
adc
lock
inc
sub
mov
jns
std
shl
or
xchg
arpl
mov
je
inc
pop
mov
adc
outs
adc
cmp
mov
xchg
sar
push
cld
mov
mov
ins
push
loopne
adc
jle
mov
stc
jge
jmp
inc
xor
mov
nop
mov
mov
in
repz
lods
mov
psubusw
out
out
hlt
push
mov
movs
inc
loop
dec
iret
call
xor
fldenv
aad
inc
ja
test
sub
fwait
in
push
test
es
out
int3
stos
mov
dec
inc
sbb
ror
imul
out
xlat
arpl
jecxz
jns
push
(bad)
mov
and
push
lds
cwde
lock
xlat
aas
mov
sahf
mov
dec
dec
pop
and
int
and
pop
push
add
cmps
sbb
mov
mov
mov
xchg
lds
sahf
es
jbe
sbb
test
(bad)
mov
cmp
push
(bad)
add
xor
inc
aad
sbb
sub
stc
xchg
bound
int
out
dec
inc
cmp
cwde
call
leave
jp
mov
pop
je
push
icebp
pop
inc
loopne
or
mov
hlt
out
add
lea
cmp
movs
ror
or
adc
scas
adc
mov
jge
popa
mov
xchg
out
mov
jmp
pop
je
jl
inc
(bad)
(bad)
test
dec
xchg
retf
lods
mov
add
out
pop
or
inc
lods
or
sbb
sar
and
idiv
fdivr
mov
aas
out
pop
loopne
shl
push
aas
ins
push
cld
xor
(bad)
pop
in
test
inc
sub
jbe
inc
sub
ins
add
jle
pop
(bad)
ror
in
or
inc
inc
adc
and
jmp
jbe
xchg
js
rsm
leave
pop
enter
pop
mov
pop
lods
mov
dec
sbb
test
cld
(bad)
not
pushf
ror
rol
fstp
mov
sbb
icebp
call
and
or
out
inc
push
sub
fldenv
mov
jmp
jg
push
push
or
out
das
neg
mov
call
js
or
mov
jp
add
fidiv
pop
pushf
in
imul
jns
enter
leave
addr16
leave
gs
mov
mov
fnsave
aam
mov
add
mov
es
jns
jle
cmp
sbb
adc
outs
ret
call
scas
fsub
pop
iret
lods
lods
test
xor
(bad)
sti
inc
(bad)
ret
int
xor
scas
xor
int3
adc
addr16
not
sbb
jg
and
aad
adc
and
push
test
cmps
mov
rep
pop
cmps
hlt
movs
pop
je
outs
or
inc
cmp
call
add
loop
dec
lock
mov
js
mov
cmp
xchg
out
fistp
rcl
adc
les
stos
inc
cli
inc
(bad)
test
sbb
out
push
push
clc
ror
inc
test
out
mov
dec
(bad)
fdivr
jnp
push
sahf
test
and
mov
jnp
movs
dec
mov
and
sub
jne
mov
inc
push
cmps
ins
and
fwait
inc
jae
popf
enter
pop
ins
rcl
sahf
fwait
(bad)
aaa
mov
push
in
jl
addr16
aad
add
add
mov
imul
push
or
test
and
gs
and
inc
push
or
dec
adc
pusha
sub
mov
and
add
loop
xchg
sbb
xchg
cmp
sbb
mov
sub
aad
addr16
pusha
les
aaa
push
shl
aas
stos
or
pop
hlt
leave
adc
jns
popf
push
mov
in
cs
or
outs
inc
test
xchg
push
sub
(bad)
sub
retf
pop
sbb
nop
mov
sub
out
dec
retf
aam
mov
push
add
add
sub
or
pop
xchg
push
jbe
out
fucomp
iret
dec
sub
sbb
dec
cmps
xor
push
retf
arpl
adc
pop
jl
xor
xlat
lock
sub
retf
sbb
(bad)
mov
stc
jns
jge
aas
jle
and
dec
inc
mov
into
sub
fstp
jl
inc
js
or
xor
test
out
dec
jnp
cmp
add
shr
xchg
push
dec
call
je
mov
xchg
mov
fucomi
test
push
gs
and
xchg
pop
jmp
popa
(bad)
fld
or
int3
xchg
inc
jp
movs
jecxz
into
xor
xchg
push
add
jae
lock
ins
ins
mov
dec
sbb
loopne
dec
dec
das
jbe
xor
xor
xor
cmp
xor
mov
rcr
data16
push
push
ficomp
dec
push
enter
lahf
scas
(bad)
sti
pop
leave
lock
neg
movs
dec
and
ss
sbb
dec
adc
call
mov
sahf
push
mov
(bad)
bnd
fcmove
stos
cmps
jns
fistp
jge
fild
imul
jp
clc
std
mov
aaa
into
int
jae
int
jbe
adc
mov
mov
stos
cmp
xchg
mov
lods
mov
maskmovq
div
call
jge
lds
retf
enter
xchg
push
add
aad
xor
(bad)
lahf
jno
in
inc
es
leave
dec
fsubr
mul
adc
js
cli
pop
out
xor
clc
rcr
xchg
scas
mov
daa
in
sti
mov
shl
jne
movs
or
bound
inc
xchg
loope
je
inc
data16
lds
in
retf
js
pusha
or
lock
sbb
call
into
cmp
aad
cld
scas
push
loopne
sbb
jp
push
mov
inc
cmp
movs
push
push
hlt
adc
push
(bad)
adc
push
dec
xor
jmp
dec
pusha
fdiv
pop
pop
or
mov
dec
int3
loopne
sub
mov
stc
cmps
lods
retf
cwde
or
dec
pop
sti
int
aas
xor
add
movs
outs
mov
pop
inc
int3
std
xchg
sbb
(bad)
int
rol
cdq
pop
js
scas
or
and
into
rcl
mov
push
int
call
je
mov
ret
and
loope
push
pop
mov
jg
xor
sub
pop
and
or
mov
mov
call
mov
into
xchg
inc
xchg
mov
cmp
dec
lock
loop
aam
jns
scas
inc
push
xor
and
mov
jge
lea
sbb
jmp
rcr
xchg
mov
jmp
cmc
or
je
movs
push
arpl
fs
add
leave
fs
enter
stc
loopne
div
ins
adc
out
or
sub
mov
sbb
xchg
inc
sbb
das
sub
push
or
hlt
outs
fistp
ds
cmp
xor
movs
jecxz
jnp
cmps
ret
adc
sar
lea
mov
sub
mov
lods
pop
jmp
sbb
jne
cmp
push
out
dec
cmp
stc
adc
add
mov
ret
cmp
fs
pop
jnp
outs
or
mov
fwait
xchg
xor
add
mov
jmp
adc
ss
loope
rol
retf
adc
stos
aam
cwde
leave
and
lds
ds
pop
cmp
sbb
cmp
cmp
pop
stos
xlat
xorps
xor
cmps
cwde
test
add
pop
add
sbb
mov
(bad)
push
aam
stos
push
imul
jge
pop
lds
xchg
lahf
jg
sti
aam
popf
dec
pop
jno
jecxz
neg
clc
lock
jae
inc
inc
sbb
mov
xchg
imul
(bad)
sahf
jmp
js
push
mov
in
cmps
das
push
and
push
jecxz
(bad)
jns
fimul
or
mov
popa
aad
into
mov
int
fwait
mov
enter
(bad)
hlt
mov
jbe
int
gs
pop
mov
fstp
jle
or
jge
push
pop
leave
into
fstp
cld
mov
xchg
out
inc
stc
or
in
aam
in
or
fldcw
sti
scas
xor
in
add
mov
ins
call
mov
in
mov
lds
outs
adc
ins
adc
fdiv
inc
repnz
sub
jne
ins
adc
retf
loop
pop
outs
sbb
add
call
shl
(bad)
clc
ds
imul
loop
fdivr
and
sub
xor
sub
ss
fldcw
out
add
push
pop
push
push
push
push
mov
push
psadbw
outs
adc
mov
ins
sbb
rcl
jge
ficom
stos
push
ds
cs
jle
cmp
cli
push
mov
sub
jo
mov
adc
fmul
jge
mov
cld
test
cld
inc
(bad)
xchg
fnstenv
retf
cli
push
je
mov
and
into
dec
pusha
mov
fldenv
clc
cmp
(bad)
xchg
fndisi(8087
into
dec
hlt
les
out
mov
xlat
outs
sti
repz
loop
ins
retf
mov
jle
push
mov
callw
push
cmp
test
test
dec
cmc
xchg
jb
enter
and
inc
adc
cs
pop
enter
cmp
sub
pushf
cmp
nop
adc
adc
xor
ja
shl
fiadd
add
jp
dec
ins
push
xor
dec
std
sub
lds
mov
inc
dec
adc
xchg
inc
adc
popf
adc
pop
push
int
lahf
or
out
dec
lahf
aad
xchg
cdq
inc
pop
ss
test
dec
push
sbb
out
(bad)
test
mov
and
leave
loope
mov
sub
outs
xchg
pop
xchg
dec
test
mov
mov
mov
(bad)
jmp
out
out
fs
cmp
mov
fsub
shr
dec
lods
cmps
pop
mov
xchg
and
adc
pop
sbb
mov
lock
sub
push
cmp
xchg
in
xchg
in
sub
inc
scas
and
dec
sbb
call
bound
jle
outs
test
dec
cmc
in
rcr
jp
out
jnp
mov
xor
sti
cmp
push
inc
mov
adc
pop
sar
out
jle
xor
dec
add
or
fdiv
ins
stc
xchg
add
push
daa
add
xchg
leave
out
push
pop
or
xchg
cs
sub
fidiv
ror
hlt
and
out
mov
loope
adc
imul
mov
cld
lods
pop
sub
and
sub
aaa
shl
push
sbb
popa
dec
jle
loop
lods
and
dec
fcmovbe
xor
sbb
xor
fsubr
and
stc
stos
add
mov
rol
xchg
mov
mov
fadd
nop
mov
inc
push
test
adc
dec
cmp
pop
ret
call
and
jo
inc
test
mov
daa
xchg
fadd
mov
inc
jle
not
push
adc
mov
cs
inc
add
ret
pop
pop
lods
addr16
je
fimul
mov
fcom
ret
xchg
inc
mov
pop
arpl
add
aas
cdq
fcmovnb
cmp
jo
stos
sub
mov
jl
mov
aad
or
pop
mov
cmc
clc
push
adc
ja
imul
loop
test
in
cmp
mov
into
ss
mov
xchg
xor
clc
mov
popf
mov
and
stos
sub
jmp
add
mov
(bad)
add
xchg
mov
inc
das
add
or
add
mov
adc
inc
push
inc
sbb
dec
aam
lods
jbe
adc
ins
repnz
pusha
jmp
sub
call
es
sti
and
xor
fisttp
aaa
jmp
jmp
ss
arpl
cmc
inc
sub
add
scas
les
cmp
popf
mov
add
sub
sub
fmul
mov
gs
inc
sbb
arpl
sbb
bound
push
and
or
or
leave
xor
sub
pushf
inc
xchg
fimul
dec
imul
jnp
in
(bad)
and
and
(bad)
loop
add
push
push
aaa
loop
fbstp
daa
sub
psllq
pop
and
cmp
dec
sub
frstor
dec
sub
and
push
mov
push
xchg
jge
add
mov
dec
xchg
xor
pop
adc
inc
pop
or
rcr
inc
jae
imul
xor
mov
imul
cmp
(bad)
and
push
outs
ss
push
sbb
les
js
jmp
mov
xor
mul
mov
dec
leave
push
add
scas
ret
mov
and
iret
int
dec
mov
xor
inc
jge
call
sub
push
fs
xor
xor
fistp
cs
popa
xor
inc
arpl
mov
add
inc
mov
(bad)
jne
mov
loopne
xchg
mov
push
sahf
sub
mov
xor
push
jge
mov
pop
sbb
aaa
pop
mov
xchg
mov
pusha
cmp
or
(bad)
in
int
fs
fadd
addr16
stc
repz
or
and
mov
xchg
loop
sub
enter
pop
mov
jp
dec
cmp
test
in
sub
rcr
or
sbb
add
call
pop
pop
repz
mov
sub
xchg
in
mov
iret
shl
dec
stos
push
pop
es
jae
add
dec
das
pusha
inc
push
dec
enter
pop
ret
in
gs
sbb
pop
pop
test
dec
sti
outs
scas
into
rcr
sub
mov
bnd
jmp
lahf
jnp
push
fild
sub
jge
pop
mov
lods
sub
int3
loop
(bad)
mov
and
fsub
push
ret
pusha
call
or
sub
hlt
ficomp
jbe
sbb
les
pop
repnz
lods
in
add
jns
(bad)
pop
mov
out
sub
lds
xchg
or
inc
pop
aaa
fst
ficomp
xchg
lds
sub
popa
(bad)
shr
sbb
es
arpl
(bad)
dec
inc
push
lods
and
rep
shld
cvttpd2dq
ror
shl
fild
adc
das
shr
(bad)
int3
ins
fwait
cs
rcr
inc
sbb
jge
inc
xlat
ds
test
push
sub
sub
bound
push
int
mov
sbb
iret
mov
xor
out
mov
mov
in
jno
outs
inc
rcr
push
dec
imul
mov
xchg
adc
scas
in
jno
or
out
push
ret
mov
push
xchg
cld
hlt
fwait
shr
pushf
retf
ja
dec
fs
mov
popf
aam
xor
xor
out
jmp
in
stos
pusha
cmp
iret
jle
mov
xchg
mov
pop
add
loop
outs
fisubr
jmp
scas
mov
push
test
mov
aas
sub
std
aas
mov
mov
addr16
aad
adc
mov
fdiv
scas
dec
mov
lods
push
ds
bound
std
stos
xchg
aas
jp
sbb
mov
mov
movs
dec
pop
(bad)
into
xor
fist
lods
bound
jge
ins
xlat
mov
mov
fwait
lds
push
rcr
sar
adc
push
mov
scas
fisttp
mov
cli
nop
fst
in
or
repz
test
cli
xor
xor
pop
lea
jge
sub
test
pusha
and
cmp
imul
jae
pusha
xor
call
jo
lahf
imul
in
xor
pop
dec
(bad)
jne
daa
retf
shl
inc
in
dec
call
cld
push
cmps
push
mov
addr16
and
(bad)
mov
sbb
ja
fdivr
mov
rcr
xor
and
scas
push
mov
xchg
out
push
test
fs
add
fldcw
mul
int3
inc
aam
outs
arpl
(bad)
adc
sbb
add
jle
retf
retf
pop
movs
sbb
(bad)
fdivrp
add
div
mov
mov
sar
jb
in
call
test
out
or
(bad)
mov
sar
sbb
dec
sub
mov
and
mov
fs
arpl
(bad)
je
mov
push
and
dec
lock
and
into
mov
jmp
sar
test
pusha
mov
arpl
xchg
vpaddusw
add
inc
retf
in
mov
aaa
leave
stos
xor
inc
add
shufps
sti
int3
mov
and
push
lods
add
push
sbb
cmp
xchg
aam
pop
inc
ja
scas
daa
enter
xor
ds
push
jno
cmp
mov
rol
add
inc
clc
add
jb
pop
or
push
lahf
add
or
and
or
jmp
cmp
ins
sbb
fwait
adc
dec
fiadd
out
sti
sar
and
pusha
or
add
push
mov
push
mov
mov
mov
and
out
push
jne
js
loope
aaa
test
jle
sbb
test
push
sbb
xor
fistp
bound
cwde
and
pop
(bad)
bound
repz
dec
ret
bound
fadd
and
mov
or
sbb
(bad)
mov
rol
lods
(bad)
sbb
mov
mov
xor
addr16
test
inc
cwde
into
push
imul
mov
xor
push
jge
sbb
mov
fsub
push
test
push
mov
cmp
popa
int
pop
fist
lods
loop
je
inc
jmp
xchg
or
hlt
out
retf
(bad)
fsubr
out
jb
ds
(bad)
in
jne
fwait
mov
adc
out
add
rol
das
retf
jg
xchg
lods
call
lea
ss
mov
(bad)
adc
int
or
sbb
data16
pop
add
sub
mov
(bad)
sbb
xlat
jnp
fbstp
dec
hlt
mov
aas
xor
ins
pop
cmp
mov
mov
add
or
popf
sbb
or
test
inc
sbb
add
sbb
xor
xchg
lahf
xlat
inc
and
mov
(bad)
xor
add
hlt
cmp
(bad)
push
pusha
cmps
test
hlt
cmp
mov
cmp
iret
aas
sbb
shr
xor
lahf
mov
test
cs
dec
mov
xchg
mov
push
js
das
test
fmul
push
push
inc
inc
fdiv
or
test
inc
cmp
dec
adc
dec
bnd
test
div
cmove
nop
and
push
lea
out
sub
jle
ror
mov
xor
fst
aaa
jl
nop
dec
call
lock
das
xchg
sub
mov
shr
push
ret
push
cs
add
(bad)
outs
pushf
icebp
out
popf
fild
xor
es
xor
mov
iret
daa
jns
inc
add
clc
rcl
sbb
mov
das
add
fadd
aam
sbb
sbb
std
fcomp
push
mov
into
pushf
fadd
mov
es
enter
xlat
rcr
and
mov
repz
cs
sub
hlt
jle
mov
pop
fcmovnb
(bad)
mov
movs
loopne
dec
mov
out
mov
add
dec
jb
pop
cwde
push
icebp
rcr
mov
push
push
add
xchg
sbb
push
icebp
sub
mov
mov
arpl
add
xchg
nop
sbb
sub
jbe
xor
xor
sti
ret
cmp
ins
std
cmp
rol
sbb
pop
inc
popa
mov
hlt
fisttp
add
or
cmps
adc
add
or
pop
je
(bad)
xchg
ret
ja
pop
mov
jecxz
or
mov
adc
cmp
adc
inc
ret
fsub
popa
add
mov
iret
outs
jmp
dec
gs
mov
jbe
icebp
es
rcr
cmp
ja
adc
xchg
jo
fld
jp
fs
and
test
mov
cmp
fstp
jp
mov
lea
div
hlt
icebp
(bad)
jl
mov
add
sub
or
int3
adc
jo
xor
ret
mov
cli
loope
iret
movs
lea
xchg
cmp
pushf
xor
jg
push
cmp
dec
in
retf
loopne
(bad)
add
or
cmps
arpl
or
lods
mov
ret
ret
es
into
push
les
push
idiv
push
and
or
stc
call
mov
xor
hlt
ftst
movs
call
shr
mov
pop
jge
cmp
popf
outs
sbb
cld
aaa
pop
mov
mov
js
mov
and
sub
jae
pop
fnstenv
dec
cmp
sub
sbb
mov
das
jg
repz
out
cmp
xlat
xchg
outs
or
inc
pushf
outs
cmp
nop
movs
pop
xchg
jecxz
xchg
outs
dec
sub
(bad)
mov
fistp
pusha
jecxz
fs
cmp
push
sub
stc
pusha
outs
enter
xchg
or
fild
in
mov
dec
cld
jl
scas
mov
cmps
es
fisubr
and
adc
mov
jb
mov
mov
dec
jnp
fdivr
lock
and
ret
mov
push
add
sub
mov
das
push
inc
xchg
sub
mov
jns
inc
pop
or
rol
in
aam
jo
mov
jg
fwait
jg
push
lea
xchg
mov
jno
pop
repnz
lds
jp
sbb
aam
out
push
mov
mov
pop
push
fisub
ss
cmp
sbb
loop
sub
shr
jb
ins
fwait
push
hlt
pop
clc
sub
enter
adc
gs
ins
dec
cmp
mov
adc
push
push
xchg
ror
imul
mov
push
leave
or
push
leave
rcr
lock
and
ret
push
js
in
or
cmps
cld
scas
pop
in
and
and
jmp
scas
ins
inc
jae
sahf
out
aaa
nop
dec
icebp
leave
lahf
iret
mov
imul
and
cmps
and
call
and
xchg
addr16
popf
dec
add
xchg
mov
ins
pusha
dec
fild
or
fisubr
add
dec
into
cli
mov
xor
fmul
jmp
test
ss
popa
fnsave
lods
lea
pop
inc
xor
sub
mov
es
adc
jnp
inc
sti
inc
fcom
in
sbb
or
mov
mov
nop
adc
dec
repnz
jg
xchg
ds
jo
push
loop
dec
rol
pushf
popf
pop
xchg
and
inc
cmp
pop
adc
jl
xchg
xchg
retf
sbb
xor
adc
inc
cmp
rcl
in
mov
das
loope
xchg
mov
adc
mov
xchg
xlat
and
mov
mov
ror
iret
xchg
lahf
in
sub
test
jnp
adc
and
lahf
inc
inc
and
sub
pop
div
cmp
add
ror
jmp
jnp
popf
cli
lods
and
ja
repnz
hlt
jl
sbb
and
mov
adc
sti
fcmovu
mov
add
pop
lds
sbb
out
test
adc
jns
shl
jge
adc
inc
test
jp
sbb
mov
and
cmp
mov
lods
mov
mov
mov
xchg
add
into
leave
mov
mov
push
or
sub
push
es
(bad)
mov
les
push
movs
cmp
pop
nop
lahf
fimul
or
jl
int3
cmps
retf
std
mul
pop
or
ins
add
and
inc
sbb
jge
ins
cmp
or
gs
int3
sar
mov
push
xchg
inc
fldcw
aad
mov
jg
test
adc
sahf
push
scas
mov
in
xchg
repz
and
retf
mov
call
mov
gs
lods
(bad)
(bad)
sub
not
cwde
mov
in
loop
mov
lds
jl
std
inc
(bad)
inc
imul
cdq
mov
jne
int
xchg
test
fdivr
push
and
mov
mov
icebp
xchg
and
sahf
cld
and
fcmovnu
(bad)
xlat
or
jle
lea
mov
(bad)
sbb
mov
mov
scas
std
add
cmp
dec
mov
loope
cwde
ficom
ins
push
sbb
outs
rcl
fnstsw
es
rcl
fld
aad
shl
or
cmp
add
mov
rcr
es
call
sub
jge
pop
fistp
imul
sti
(bad)
push
jbe
or
dec
dec
mov
jns
ret
popf
pop
xor
dec
mov
repnz
cmps
adc
mov
mov
leavew
push
mov
shl
jle
inc
mov
retf
outs
push
pop
and
dec
cmp
les
xor
or
movzx
jne
retf
outs
and
adc
data16
enter
jb
mov
lock
dec
call
aad
push
sbb
test
inc
aad
ficom
cmp
and
pop
sub
jge
cmp
cmp
cwde
push
jb
mov
push
aaa
xor
sti
pop
mov
inc
pop
mov
inc
adc
jmp
mov
mov
daa
clc
iret
cmp
push
cmp
jecxz
mov
xor
pop
xor
adc
into
(bad)
stc
mov
jge
cmp
and
inc
add
fiadd
fist
out
jmp
xor
mov
call
fnstcw
sbb
adc
sub
pop
imul
add
jle
or
lahf
or
dec
hlt
mov
addr16
jg
call
jge
add
data16
std
xor
jno
out
aaa
idiv
mov
mov
pushf
mov
out
call
loop
inc
push
test
js
xor
sahf
inc
pop
ins
les
out
adc
sti
push
stos
sbb
inc
mov
enter
div
loop
xchg
mov
ins
repz
xchg
aas
sub
push
pop
repnz
mov
ds
inc
das
inc
aam
cwde
leave
jo
gs
shl
int3
imul
jecxz
imul
adc
pop
or
inc
push
inc
popa
or
xor
ror
retf
enter
sahf
std
js
and
pop
pop
out
push
sub
movs
jl
xor
dec
outs
shl
cwde
shr
jmp
cmps
xchg
xchg
pop
cmp
jmp
mov
mov
push
sub
cmp
aas
jae
cmp
jae
repz
xor
mov
aam
out
(bad)
imul
pop
mov
xor
xchg
sub
xor
push
not
cmc
stos
jge
xchg
rcl
mov
inc
add
push
add
push
mov
jnp
out
or
je
inc
mov
pop
in
leave
gs
in
adc
rcl
imul
jp
jb
(bad)
ss
lods
jbe
ins
shl
mov
sar
jo
jbe
pop
faddp
loopne
push
leave
dec
pop
(bad)
cmp
retf
ficomp
std
dec
mov
and
rcl
movs
fwait
test
sub
into
in
into
cmp
cdq
cmps
pushf
inc
xchg
pusha
repnz
ss
ins
push
mov
call
push
sti
sub
data16
inc
shl
dec
fstp
out
jp
call
imul
xor
jecxz
dec
pop
ins
mov
mov
mov
repnz
js
mov
frstor
call
sub
adc
pop
shl
xchg
push
(bad)
dec
dec
mov
ins
sub
mov
add
pop
js
cli
ret
add
sbb
jo
push
ins
xchg
mov
lds
jb
in
and
sub
test
leave
sahf
add
mov
imul
cld
sbb
iret
fwait
(bad)
out
sti
dec
add
xchg
cmp
mov
(bad)
mov
out
jno
test
mov
nop
sbb
push
daa
lock
lahf
jle
mov
(bad)
ficom
inc
cwde
inc
std
test
ret
lds
arpl
fdivr
cmp
sahf
cmc
jle
xchg
mov
sahf
std
jle
xchg
push
xlat
push
mov
loopne
dec
jb
push
les
mov
xor
scas
rep
int
rcl
cmp
jecxz
cmp
mov
cmp
mov
shr
addr16
xchg
mov
mov
xchg
xchg
es
leave
out
push
cmps
icebp
sub
sub
and
or
sbb
movs
mov
mov
mov
sub
or
lods
les
and
and
ds
cmp
xchg
sbb
cmp
fwait
dec
imul
test
int
push
stos
(bad)
nop
aaa
das
outs
xchg
or
cwde
out
fmul
mov
aaa
jae
test
out
les
nop
mov
dec
in
cmp
fcom
pop
xchg
jecxz
add
dec
or
enter
xor
push
test
xlat
cmc
ret
ss
rol
mov
test
icebp
popa
xlat
add
push
test
fsubr
push
jns
xor
mov
arpl
sub
or
cmp
jae
pushf
cmp
mov
push
jp
mov
aas
cmp
and
jge
inc
fs
jo
jmp
call
push
stos
jmp
jo
jmp
and
movs
ins
nop
nop
retf
test
mov
cmc
dec
or
adc
sub
enter
dec
out
(bad)
int
repnz
adc
and
jbe
mov
mov
pop
jecxz
inc
xor
ins
icebp
mov
jp
mov
aad
push
fcom
dec
rcr
fnsave
and
sub
or
mov
fdiv
xor
sub
fbld
jmp
inc
data16
sbb
cmp
adc
aas
pop
lahf
lods
push
pop
xor
repnz
adc
test
mov
imul
ret
test
mov
or
pop
(bad)
cmps
das
dec
mov
in
lock
je
adc
mov
loope
imul
lods
int
and
cmp
xchg
call
inc
pop
hlt
daa
sbb
jbe
sbb
lods
stos
in
(bad)
mov
jne
add
lock
bnd
jns
mov
inc
sub
(bad)
xchg
in
and
in
cld
int3
js
enter
imul
test
in
xchg
cmp
pop
cmp
in
dec
fcomp
addr16
or
sar
dec
mov
or
test
(bad)
out
jo
shl
aad
fimul
fnstcw
ins
(bad)
clc
test
xor
and
pusha
cld
adc
jmp
inc
out
sub
lds
xor
xor
xchg
repz
push
mov
cli
jae
dec
cdq
or
in
test
ror
call
sub
pop
push
clc
and
or
rol
xor
mov
jb
ss
icebp
mov
pop
add
cwde
movs
fstp
add
adc
mov
and
int3
pop
push
or
test
loop
adc
cdq
mov
and
neg
xlat
shl
xchg
add
pop
add
push
sub
hlt
jg
xor
or
bound
iret
fisubr
push
xchg
mov
lds
and
dec
test
(bad)
mov
lods
gs
mov
lea
pop
jbe
add
pop
jmp
pop
dec
test
mov
into
ret
(bad)
iret
push
mov
push
cmp
fldenv
das
outs
(bad)
out
inc
dec
add
ret
pop
or
les
lods
push
push
or
push
test
cmc
sub
mov
cmps
lock
xor
addr16
std
loop
mov
sub
mov
and
ror
movs
jns
add
xchg
push
push
push
mov
sub
mov
enter
push
cli
stos
inc
loop
aas
or
shl
cmp
pop
call
mov
mov
jp
loop
inc
jl
inc
arpl
test
fs
repnz
or
je
mov
mov
xchg
aam
(bad)
(bad)
mov
inc
mov
(bad)
ins
shl
push
pop
or
(bad)
sar
ret
ffree
kmovw
add
test
add
push
push
imul
iret
fist
inc
jb
mov
push
sti
inc
mov
dec
dec
popa
mov
mov
test
fdivr
test
dec
cmps
test
loopne
fdivr
hlt
sbb
shl
xlat
mov
les
fiadd
fnsave
inc
(bad)
cdq
jl
sbb
or
or
mov
out
pop
adc
out
cdq
mov
xchg
push
dec
mov
es
out
adc
jb
pop
test
adc
fcomp
clc
adc
mov
push
aas
pop
(bad)
ins
stos
fucomi
(bad)
mov
ja
test
les
dec
loope
pop
add
dec
(bad)
cli
xlat
sub
xchg
lods
call
mov
push
mov
add
push
or
jge
and
into
add
xor
test
xor
cld
test
xor
iret
test
into
cmp
mov
imul
popf
rcr
xor
cmp
mov
mov
mov
retf
xchg
dec
cli
popf
xor
push
xchg
or
pandn
dec
inc
push
nop
call
xor
std
out
pop
movs
jns
push
jae
jmp
push
inc
dec
repnz
cmps
js
push
push
xor
ret
pop
or
sbb
arpl
inc
test
push
xchg
push
cli
mov
mov
outs
(bad)
adc
add
outs
push
jp
dec
mov
fcom
pop
imul
and
mov
mov
push
aam
pushf
arpl
jl
or
push
hlt
mov
and
shl
cmp
lea
clc
cmp
or
retf
cmp
stc
inc
movs
cmp
mov
and
repnz
in
and
shl
sub
dec
and
(bad)
pop
and
cdq
push
mov
lods
xor
cmp
daa
fild
mov
lds
(bad)
jne
or
xor
call
inc
dec
dec
jns
icebp
pop
sub
inc
retf
je
sbb
jo
inc
(bad)
cld
ss
push
retf
js
mov
retf
xor
mov
popf
(bad)
jmp
inc
push
dec
jne
or
bnd
sar
push
inc
xor
retf
jbe
repnz
and
cmp
movs
hlt
clc
jno
sbb
(bad)
addr16
xchg
into
mov
dec
jb
out
sbb
fnstenv
mov
movs
and
clc
je
mov
pop
inc
mov
add
sbb
popf
mov
inc
daa
jne
cld
ror
cwde
and
dec
sbb
je
rcr
cmp
jo
or
ins
ror
shr
xchg
fld
mov
lea
jne
les
stos
or
bound
ror
(bad)
cli
inc
scas
add
jge
jne
jl
mov
jecxz
shl
lock
inc
(bad)
mov
mov
into
push
jne
push
call
jecxz
xor
inc
fst
mov
inc
outs
pop
imul
ss
adc
xchg
fsubr
and
mov
mov
add
imul
int
pop
pop
lods
xchg
jg
jns
add
outs
mov
xor
and
jmp
test
sysret
addr16
mov
bound
in
out
xchg
in
xor
iret
pop
loope
or
mov
push
adc
pusha
test
mov
jnp
mov
rcl
mov
daa
mov
rol
movs
sub
or
pop
adc
mov
mov
imul
xor
fmul
sub
cwde
push
jmp
pop
jp
data16
mov
cmps
aam
mov
daa
pop
push
sar
mov
or
ins
imul
sub
adc
jns
jl
cwde
test
hlt
pushw
adc
mov
sbb
outs
push
mov
pop
pop
and
sbb
gs
mov
mov
mov
and
inc
mov
push
fisubr
or
stos
sbb
jo
dec
cli
xchg
neg
sub
inc
das
(bad)
jmp
outs
push
add
xchg
scas
imul
xor
mov
sar
(bad)
push
xchg
imul
cmp
sbb
sbb
fcomp
sub
stos
sbb
fwait
mov
iret
push
shl
push
inc
cmps
add
and
fidiv
mov
stos
mov
sub
out
pop
pop
int3
icebp
push
pop
enter
gs
out
mov
mov
sub
or
jge
inc
inc
(bad)
sub
jmp
(bad)
sar
sub
(bad)
call
jl
add
push
add
and
pop
gs
ja
out
cmps
pop
jns
ins
mov
xor
fchs
push
dec
mov
out
cdq
dec
out
add
jmp
clc
fcomp
mov
add
ja
sets
mov
pop
sub
and
mul
cdq
mov
ret
push
cmps
add
adc
into
shl
scas
pop
pop
ja
fmul
ret
fnstenv
xor
xchg
lahf
adc
data16
iret
pop
ss
loop
ret
inc
jmp
mov
sbb
in
(bad)
cs
jbe
jmp
call
mov
sub
imul
mov
lods
mov
mov
scas
repz
add
cmps
scas
cdq
ror
mov
mov
lods
and
xor
in
mov
rcl
stc
adc
out
(bad)
(bad)
lea
add
pop
cmp
fidiv
cmp
ins
je
(bad)
hlt
xor
cmp
cdq
jp
xchg
scas
mov
mov
test
jmp
xor
jbe
outs
adc
push
jbe
sbb
cmp
mov
cmc
jno
mov
dec
int
mov
xchg
dec
inc
cmp
cmps
in
inc
call
sbb
xchg
das
pop
test
inc
pop
retf
pop
test
(bad)
jns
lea
test
(bad)
xor
cmp
sub
mov
inc
mov
iret
cs
push
mov
out
pop
dec
cwde
loope
hlt
mov
cmps
retf
out
cdq
dec
xor
cmps
sbb
mov
cmc
dec
loop
mov
imul
mov
jb
pop
dec
mov
xor
jbe
xchg
ret
inc
jae
sub
aad
and
fidiv
sbb
repz
cmps
sar
in
pop
xchg
sbb
push
cmp
push
pop
and
pushf
leave
or
or
sbb
(bad)
jne
mov
jbe
mov
mov
mov
cmc
nop
push
cdq
in
(bad)
mov
imul
popa
test
push
ins
stc
cli
dec
leave
into
(bad)
in
aad
add
popf
cmp
dec
cdq
cmp
stos
ins
add
mov
pop
data16
mov
(bad)
aaa
les
ror
shl
cmp
push
xchg
clc
fistp
cmc
xchg
outs
call
mov
into
mov
in
sar
mov
dec
xchg
cmp
std
scas
jbe
int3
jl
sti
inc
xor
xchg
or
add
ss
dec
mov
mov
jo
cmp
xor
neg
daa
lahf
aas
dec
movs
xor
ret
xlat
sub
mov
cmp
mov
pop
popf
fdiv
mov
mov
outs
pop
adc
aaa
xor
(bad)
cmp
inc
out
icebp
call
mov
mov
jmp
and
jns
mov
nop
cmp
push
(bad)
xchg
xchg
(bad)
sub
lahf
jbe
push
push
(bad)
clc
mov
fst
jae
outs
mov
dec
push
sbb
ja
pop
or
iret
in
imul
sub
in
js
inc
jg
or
dec
push
daa
mov
jo
(bad)
inc
xor
push
rcl
cmp
push
adc
not
pop
adc
lea
sub
sbb
pop
scas
mov
test
add
(bad)
outs
(bad)
cld
ins
dec
xchg
adc
shr
jns
mov
fst
dec
mov
push
sub
xor
or
jae
sub
mov
imul
fwait
into
dec
xchg
ror
jp
sar
mov
arpl
scas
fisubr
gs
outs
ds
call
icebp
es
dec
dec
paddusw
jnp
pop
jnp
xor
sbb
mov
mov
mov
les
jo
movs
pop
bound
jecxz
es
scas
and
add
or
sahf
cmp
ins
inc
jmp
add
fnstsw
mov
push
mov
mov
cmp
mov
call
and
xchg
jmp
stos
push
retf
add
test
movs
or
adc
outs
fsubr
std
addr16
inc
hlt
dec
mov
in
xchg
outs
out
add
mov
fisttp
push
(bad)
gs
xor
jno
(bad)
jge
stc
into
mov
jnp
push
jle
je
stos
int
dec
jnp
mov
jmp
sbb
lea
sub
test
xor
popf
clc
xor
mov
shl
cwde
jb
push
add
xor
push
fldcw
cmp
fwait
ss
out
pop
ja
push
fisubr
adc
sbb
sahf
sub
adc
sub
xor
pop
add
and
sbb
test
mov
pusha
rol
shr
out
scas
hlt
(bad)
adc
popf
mov
cmps
sbb
dec
add
cmp
stc
ret
jge
cmc
stc
stos
or
push
and
js
(bad)
push
push
popf
xor
adc
retf
clc
mov
sub
mov
mov
inc
cmp
jg
adc
aas
mov
pop
xor
xchg
(bad)
out
or
mov
test
movs
jo
iret
or
jmp
cmp
aas
mov
cmp
inc
mov
mov
cmp
push
stos
popa
jle
dec
js
mov
fs
ds
mov
in
mov
mov
les
outs
nop
mov
(bad)
push
or
pushf
sbb
and
push
sub
and
shl
inc
test
cmp
pop
jg
jecxz
daa
inc
xor
test
out
jg
aad
mov
ja
sti
cmps
jbe
mov
dec
sub
outs
sbb
jmp
ror
lea
into
pop
lods
pop
enter
ins
enter
lock
scas
push
test
cmp
stos
fs
int
pop
mov
push
mov
sub
mov
sti
icebp
dec
jbe
and
(bad)
mov
jo
or
call
outs
cld
test
sbb
cmps
xchg
(bad)
sti
and
sub
mov
add
adc
mov
shl
icebp
ins
push
pop
pop
xchg
ss
jb
xchg
adc
stos
dec
mov
ret
(bad)
mov
jnp
pop
lds
adc
in
xor
xor
mov
cmps
mov
cli
inc
mov
add
stos
sub
(bad)
cmp
call
and
push
(bad)
in
out
jl
fcomp
push
and
cmc
jns
or
sub
xchg
outs
mov
xchg
out
or
xchg
xchg
imul
cmp
ja
mov
rcl
mov
adc
jge
loop
push
add
out
and
das
leave
test
mov
and
sbb
rcr
ret
(bad)
fs
jno
adc
lods
dec
call
retf
dec
ret
ds
jg
inc
push
dec
add
cmp
or
inc
or
sbb
std
xor
pop
pop
enter
outs
inc
out
and
sbb
ret
or
aad
imul
dec
cmp
dec
jge
and
xor
retf
outs
std
lea
pusha
imul
xchg
inc
aaa
sbb
mul
arpl
mov
jne
bound
pop
(bad)
nop
push
push
sbb
jno
dec
and
xor
sub
imul
mov
adc
sahf
cdq
push
sti
pushw
pop
inc
pop
jbe
lds
mov
jno
sbb
fnsave
mov
dec
sbb
pop
loop
into
xlat
cs
cld
adc
and
nop
sti
adc
icebp
fisubr
shl
das
fadd
jne
xor
clc
adc
ret
push
fisub
clc
dec
scas
pop
mov
arpl
fisubr
xor
xchg
cli
xor
mov
cdq
push
mov
pop
pusha
and
in
mov
movs
clc
xchg
iret
nop
imul
dec
push
idiv
cmp
stos
add
and
lahf
(bad)
jo
mov
(bad)
sbb
loope
fstp
xor
aam
test
jl
aas
sar
pushf
(bad)
cmp
cmp
mov
sahf
mov
rcl
add
out
adc
ret
call
inc
jns
and
sbb
inc
sbb
shl
js
mov
inc
cmp
stc
sbb
out
jecxz
and
xor
cmp
push
adc
sbb
dec
loopne
movs
mov
movs
pop
jp
ins
imul
cli
in
sti
pop
pop
and
lea
mov
pusha
mov
movs
out
icebp
inc
sbb
dec
jnp
jl
mov
fadd
call
xlat
aad
fstp
inc
and
aaa
fwait
add
arpl
(bad)
icebp
repz
(bad)
pop
push
mov
xor
mov
inc
ins
into
and
jp
jns
add
xchg
or
jbe
cmc
dec
mov
je
lds
test
and
push
push
mov
popf
sub
cli
or
movs
int3
sti
sub
hlt
mov
or
clc
sbb
xor
xor
jns
and
mov
mov
icebp
dec
stc
sbb
ficomp
arpl
xor
icebp
xor
dec
imul
mov
adc
inc
pop
mov
mov
fisub
enter
xchg
dec
dec
xor
ret
outs
mov
mov
push
inc
add
dec
xchg
sub
jbe
pop
ret
fadd
or
stos
push
or
xchg
push
jecxz
pop
jmp
cmp
and
in
jns
inc
push
cmp
int3
call
je
jmp
sub
icebp
movs
scas
popf
shr
fdivr
push
add
xchg
push
lods
(bad)
cmc
xchg
fsubrp
enter
in
pop
js
jge
ret
inc
dec
sbb
outs
and
mov
xchg
mov
outs
push
and
jg
jbe
and
mov
inc
jge
ins
jns
loope
pop
int
out
retf
sbb
jmp
sbb
cmp
sbb
sub
(bad)
jo
sbb
loopne
imul
adc
fs
stos
or
std
clc
mov
cmp
out
leave
mov
pop
rol
mov
sar
pop
test
dec
fwait
dec
add
jo
cmp
mov
rcl
vpmacsswd
jl
push
pop
jle
fiadd
add
cmp
fnstsw
mov
jle
mov
in
adc
mov
imul
xchg
xor
jns
inc
lea
lea
sub
and
dec
mov
inc
add
mov
push
xor
sub
test
fwait
sub
pop
dec
out
into
cli
xlat
jg
fcomp
xor
clc
pop
dec
sahf
sti
inc
out
ror
xor
mov
jnp
sub
test
cmps
pop
or
cmp
dec
jnp
xor
adc
aad
les
pop
push
jp
sub
(bad)
push
das
pushf
mov
fisubr
pop
jae
sub
and
or
xchg
fisubr
xlat
cmp
sbb
ds
lahf
push
cmp
dec
js
inc
ss
jge
pushf
jmp
push
jae
or
mov
(bad)
pop
out
out
movs
cmps
jbe
cmps
cmp
xchg
xor
in
mov
iret
fld
push
cdq
sub
xor
or
push
dec
sar
pop
cmps
or
xor
shl
aad
neg
inc
push
out
xchg
repz
ja
sub
in
ja
mov
into
mov
daa
push
xchg
inc
adc
add
xchg
ins
rcl
sbb
push
mov
cmp
mov
aaa
pop
sub
pop
aam
test
pop
push
sbb
xchg
stc
push
xlat
mov
rcr
xchg
mov
ret
sbb
mov
adc
pop
lods
add
pop
adc
aam
dec
or
mov
push
loope
push
pop
mov
adc
and
mov
jae
enter
scas
ret
pop
and
out
adc
rcr
and
daa
dec
mov
dec
mov
cmp
popf
out
imul
pop
pop
sub
push
dec
sub
icebp
xchg
test
pop
test
add
shl
sahf
sbb
enter
stos
mov
sahf
cwde
jp
loope
mov
mov
dec
test
pop
retf
inc
mov
xchg
fnstcw
movs
pop
lahf
out
loope
into
int3
sbb
ss
mov
sub
mov
test
dec
out
xor
cdq
add
jb
mov
ret
js
or
inc
sbb
push
test
into
add
dec
mov
jb
sub
pop
not
jle
(bad)
lahf
inc
or
xor
jmp
dec
adc
add
and
test
jecxz
mov
in
outs
xchg
mov
std
cld
mov
jp
jae
dec
push
lock
xor
cs
cmp
cmps
repz
ret
dec
push
(bad)
mov
mov
fwait
(bad)
cld
(bad)
out
adc
sbb
xchg
rcl
push
stc
push
push
imul
mov
pop
(bad)
jmp
xchg
add
cmp
mov
xchg
(bad)
cld
mov
mov
int
imul
fwait
sbb
retf
jno
arpl
jnp
mov
lea
fdivr
stos
(bad)
(bad)
(bad)
pop
push
out
out
push
jg
add
add
dec
or
jge
jne
adc
adc
xor
xchg
pop
jnp
and
jo
aas
sub
(bad)
push
xor
lods
aas
cli
mov
es
mov
jp
out
xor
and
xchg
repnz
cmps
arpl
push
inc
into
or
clc
mov
(bad)
or
pop
adc
xchg
stos
loopne
(bad)
and
sbb
mov
data16
loope
test
add
cmp
mov
mov
scas
mov
mov
leave
sbb
lock
(bad)
ds
push
popa
mov
jne
inc
fs
sub
test
js
movs
inc
(bad)
mov
jb
adc
(bad)
jae
fidivr
jno
xlat
dec
mov
or
jne
cmp
lock
in
(bad)
hlt
inc
pop
cli
jbe
mov
or
cmps
push
icebp
inc
sbb
dec
sbb
shl
dec
clc
inc
fadd
push
rol
adc
scas
leave
int
mov
sahf
jbe
mov
int3
(bad)
(bad)
mov
sbb
jnp
fs
cli
nop
lock
dec
push
dec
add
cmc
xchg
movs
push
xchg
jmp
out
test
xor
test
ss
mov
lods
xchg
inc
mov
movups
cdq
add
xchg
shl
or
mov
leave
jecxz
add
and
repz
add
(bad)
mov
jecxz
mov
push
dec
(bad)
sub
daa
dec
lock
mov
mov
pop
(bad)
jae
cmp
cdq
sbb
inc
pop
add
push
mov
(bad)
cmc
out
bnd
jbe
aaa
xchg
sub
(bad)
out
sti
test
mov
aad
xchg
dec
mov
dec
dec
pop
nop
push
dec
xor
or
mov
add
xchg
pop
imul
sub
int3
popa
mov
inc
(bad)
sbb
pop
leave
gs
fsubr
jmp
cdq
adc
cmp
jg
push
sti
lods
mov
inc
jne
push
pop
ja
aaa
dec
aad
mov
cmp
outs
adc
mov
inc
mov
lahf
adc
push
outs
jb
hlt
in
lock
fdivr
fnstsw
adc
mov
xchg
mov
(bad)
jmp
ins
int3
aam
adc
jno
imul
mov
mov
iret
in
sar
mov
shr
fs
addr16
cmp
in
hlt
sbb
jne
movs
xor
dec
and
call
push
stos
scas
inc
rcr
dec
retf
sub
sub
shr
repnz
push
add
imul
outs
daa
pop
mov
div
test
hlt
adc
dec
sahf
std
out
fisttp
or
outs
sahf
mov
sub
sbb
add
sub
out
dec
pop
mov
scas
jb
rcr
mov
int3
test
mov
sbb
mov
scas
xchg
inc
iret
jecxz
mov
lahf
outs
je
add
mov
scas
push
dec
pop
test
es
cwde
pop
sub
dec
add
jb
aam
xchg
mov
out
or
adc
add
lods
retf
dec
jecxz
in
jae
push
dec
adc
lods
(bad)
dec
cmp
jl
lods
cmp
push
pop
shl
sbb
sti
xlat
sbb
sub
sbb
push
xor
or
sti
adc
mov
xchg
(bad)
(bad)
std
sub
jne
cwde
outs
inc
mov
(bad)
int3
adc
xor
adc
ss
xor
(bad)
sti
test
push
xchg
xchg
out
shr
js
cmp
jmp
jl
fld
aam
ds
test
icebp
jno
cwde
ins
cmps
ret
or
popa
or
cmp
dec
aaa
sbb
and
fsubr
in
lods
add
test
adc
mov
cmp
mov
sbb
pop
or
cld
cmps
fsub
cwde
mov
push
add
xchg
xor
jne
in
psrlq
rcr
dec
je
iret
fisubr
aas
scas
xor
pop
mov
repnz
push
out
(bad)
aad
mov
push
jns
dec
sub
stos
cwde
lock
push
ret
and
pop
push
lock
aad
in
lock
cmp
popa
inc
push
stc
pop
jo
xchg
sub
outs
test
lods
aaa
sbb
repnz
mov
jmp
jle
push
fistp
sub
js
icebp
enter
jne
mov
iretw
aaa
sub
push
loopne
repz
call
xor
or
ds
and
add
rep
movs
add
dec
jnp
shl
call
sbb
add
mov
xchg
sbb
aas
in
fwait
jmp
and
nop
aas
aaa
push
sti
push
rcr
call
push
inc
jae
data16
sub
mov
retf
mov
xor
mov
mov
pop
(bad)
cmp
jl
jmp
jne
cld
pop
out
(bad)
jl
push
call
push
lods
fld
push
pop
(bad)
sti
je
xor
sahf
sbb
fadd
fcomp
jmp
jmp
lods
jp
stos
iret
(bad)
sti
pop
cmps
gs
mov
jl
push
cmp
jl
xor
mov
mov
xchg
jmp
nop
test
pop
mov
cmp
mov
cs
mov
cmps
ret
sbb
inc
mov
sbb
mov
push
jmp
add
stc
js
pop
jmp
xor
out
or
dec
retf
cmp
xor
inc
jmp
pushf
cwde
jns
imul
mov
addr16
jo
repz
loope
push
dec
inc
inc
push
inc
jge
outs
ja
adc
ins
push
cmp
icebp
mov
or
mov
mov
dec
cmovp
outs
sub
mov
call
pop
sub
div
loop
cmc
movs
mov
mov
js
call
not
add
stos
adc
xchg
cmps
lods
xor
data16
xchg
mov
xchg
cdq
(bad)
stos
xchg
jbe
pop
mov
inc
in
ins
aam
repz
mov
ret
and
pop
xchg
mov
pop
sbb
es
adc
cld
dec
(bad)
and
jo
sahf
in
fs
iret
jo
cs
pusha
in
and
add
test
inc
sti
stos
cmp
mov
xor
fiadd
xchg
xor
lds
mov
cli
or
shl
loop
ins
lods
adc
cli
dec
lfs
loope
mov
call
cmp
add
sub
sub
fwait
repz
cmps
jecxz
ror
mov
jo
push
dec
adc
leave
or
or
pop
out
add
push
iret
ss
movs
into
int3
pop
mov
and
jecxz
cmp
into
cmp
call
pop
xchg
ss
mov
xor
push
das
mov
adc
or
pop
mov
hlt
arpl
loopne
cmps
inc
xchg
cdq
mov
xor
loope
push
movs
xchg
xchg
cmp
pop
cwde
sbb
adc
sbb
mov
xor
lds
loope
retf
cmc
mov
cmp
inc
dec
rcl
cmp
or
push
(bad)
out
cmp
pop
daa
mov
push
fbld
jg
cmc
pop
test
cmc
fsubr
pop
ret
out
cmp
xchg
icebp
sbb
add
pop
dec
jmp
les
outs
aad
inc
sbb
gs
sbb
fild
pop
imul
aad
fst
icebp
gs
xchg
xchg
push
cmps
xlat
push
add
clc
jbe
ins
jp
outs
cmp
cmps
sub
pop
xchg
cmp
cmps
sbb
lods
fsub
enter
fdiv
cmp
and
mov
mov
fdiv
lds
adc
aas
inc
sub
pop
sbb
jmp
std
mov
mov
popf
add
cld
(bad)
add
mov
dec
fsubrp
cmp
(bad)
xchg
and
cmp
xchg
(bad)
lock
xchg
mov
cmp
push
ins
pop
sbb
out
mov
xchg
loope
add
mov
bound
mov
fsubrp
jecxz
retf
pushf
cmp
inc
jmp
cdq
cdq
cmp
push
lods
dec
sbb
popa
sub
inc
sahf
loopne
(bad)
cmp
or
sbb
mov
sbb
cmps
ins
popf
out
addr16
outs
cmp
or
mov
leave
mov
xchg
clc
jb
ret
imul
sbb
loopne
outs
xchg
scas
push
pusha
les
mov
pop
push
mov
pushf
stos
je
cmps
add
xor
mov
inc
rcl
and
sbb
cmp
ja
hlt
and
xchg
test
dec
and
les
cwde
cld
mov
dec
mov
imul
cmc
sbb
and
sbb
dec
bound
sbb
mov
lock
retf
xor
mov
jnp
xchg
call
cmps
not
icebp
pop
push
jmp
stc
mov
and
loope
xor
pop
not
push
sar
push
mov
mov
adc
mov
mov
jmp
mov
push
xchg
scas
(bad)
in
cwde
jl
pusha
xchg
add
mov
cmp
xchg
dec
(bad)
cmp
scas
mov
and
pop
and
pop
call
pop
or
dec
sahf
dec
shr
sti
cmp
inc
sub
addr16
popa
cmps
adc
cmovo
dec
xchg
lds
push
scas
jl
push
push
mov
loope
pusha
xchg
cmps
adc
imul
sti
jbe
cmp
jnp
cmp
and
ss
fsubr
or
popa
xchg
sbb
mov
mov
inc
test
sbb
xor
imul
xchg
fcomip
sbb
add
data16
addr16
xchg
cmp
adc
adc
jmp
mov
mov
scas
add
cmps
or
into
mov
imul
or
push
in
stos
mov
xchg
pusha
pop
push
push
sub
xor
bswap
cmp
push
ret
dec
fadd
xchg
xchg
(bad)
hlt
xchg
adc
bound
sub
sub
xchg
call
inc
mov
imul
loope
loope
packsswb
in
loop
cmp
push
mov
or
popf
push
mov
test
(bad)
jnp
and
mov
bound
push
pop
push
sub
jg
into
call
stos
xchg
test
pop
add
jo
push
adc
xchg
push
retf
fisttp
sbb
mov
stc
rcl
das
call
mov
mov
hlt
jecxz
inc
push
mov
xchg
leave
loopne
jecxz
ds
nop
mov
cmc
inc
cmp
xor
cdq
(bad)
cli
mov
mov
mov
sub
xchg
(bad)
out
dec
or
mov
fsubr
xor
in
stos
in
(bad)
mov
pop
jno
xor
mov
mov
mov
fistp
in
int3
jne
outs
loopne
stos
movs
pop
add
test
dec
popa
jno
dec
xchg
xor
add
sub
jbe
(bad)
pushf
retf
stc
add
sahf
stc
call
rol
fstp
nop
rcl
ficom
out
sahf
clc
jp
fstp
sbb
push
shl
dec
or
std
ins
cmp
arpl
and
and
retf
xchg
movs
mov
mov
xor
mov
cmp
push
mov
push
xchg
scas
bnd
lahf
clc
es
add
call
pop
add
or
stos
ins
xor
cmps
pop
xchg
push
mov
add
pop
dec
into
loop
mov
cmp
or
sub
pusha
(bad)
stos
dec
pop
mov
jnp
push
iret
fsin
or
sub
imul
mov
add
outs
(bad)
fisubr
(bad)
mov
das
pop
jne
pop
xchg
add
aad
leave
jge
mov
pop
sahf
xor
je
aad
cmp
iret
or
and
dec
sub
add
cld
sub
ins
dec
in
out
xor
xor
cmp
pop
ins
mov
(bad)
test
jae
jl
retf
loopne
add
mov
dec
out
rcl
cld
mov
dec
dec
xchg
(bad)
or
mov
mov
pusha
repnz
das
loopne
movs
push
jmp
push
js
cmp
and
into
cmp
hlt
cdq
jmp
cld
dec
sub
jl
and
xor
push
cmp
je
xchg
lods
in
inc
mov
jns
jb
fisttp
sub
dec
out
push
loopne
clc
cmp
fisubr
sbb
jo
dec
cmps
mov
push
movs
push
push
xchg
popa
jl
add
test
loope
jb
push
(bad)
loop
pop
popf
pop
pusha
pop
into
push
lahf
cs
jp
bound
cmps
lds
xor
arpl
push
(bad)
pop
pop
inc
or
pop
test
xor
inc
adc
out
stos
jl
push
inc
int3
xchg
xor
lods
pop
loope
inc
jo
sub
test
push
mov
adc
jo
mov
mov
loope
stos
loopne
push
icebp
mov
mov
shl
sti
xor
and
cli
call
mov
push
cmp
aam
and
sub
adc
mov
lahf
(bad)
gs
sbb
stos
and
or
repz
mov
(bad)
cmc
sub
xchg
jns
or
cmp
pusha
fnstcw
out
dec
sub
or
push
mov
aad
xchg
mov
inc
cmps
stos
fs
xlat
pop
or
mov
sbb
pop
idiv
cmp
movs
popa
inc
pusha
cmp
pop
in
adc
and
jp
mov
add
popf
mov
lahf
hlt
cmps
xor
scas
mov
xor
pop
push
hlt
out
inc
inc
dec
xor
adc
pusha
enter
aam
xchg
nop
je
xchg
test
dec
sbb
xchg
les
jnp
inc
mov
push
fisubr
mov
dec
push
adc
xchg
retf
mov
mov
cwde
sbb
push
or
pushf
mov
and
ins
push
gs
mov
pop
das
mov
fild
leave
sbb
cmp
imul
inc
call
or
mov
cmp
gs
and
xchg
mov
idiv
sahf
or
pop
adc
jge
xchg
out
push
pop
shl
jae
leave
fld
clc
mov
or
adc
sub
pop
dec
inc
sqrtps
loopne
cmp
push
xor
out
dec
jae
mov
adc
inc
ds
jne
daa
pop
add
scas
mov
movs
lock
ficomp
mov
shl
push
push
xor
dec
and
sub
jb
clc
adc
(bad)
mov
jge
add
mov
pop
aas
aas
adc
ficomp
cmps
sbb
hlt
(bad)
call
adc
ret
sub
pushf
aam
adc
sbb
retf
enter
dec
inc
fucomi
fsubr
gs
iret
js
int
imul
sbb
cmps
outs
ins
scas
shr
loop
ja
adc
mov
jp
or
cmp
aas
clc
mov
jns
cmp
repnz
mov
pop
ss
add
imul
ss
es
gs
push
jns
loop
xor
sbb
adc
sbb
push
jae
inc
mov
jle
lock
ds
retf
aam
mov
pop
mov
xchg
cmp
shr
sar
popa
stc
xor
je
mov
sbb
jle
mov
fsubr
sahf
sbb
sahf
inc
or
mov
out
sub
xchg
add
push
dec
out
jbe
shl
push
push
mov
loopne
loope
mov
into
and
xchg
out
jno
adc
je
mov
push
xlat
push
add
jne
add
xor
pop
sahf
fld
and
add
pop
mov
xor
and
bsf
jb
jns
xchg
iret
inc
add
dec
out
push
pusha
loope
push
jp
sbb
fmul
in
cmp
xchg
iret
xchg
add
mov
cmp
cs
jnp
cmp
push
imul
ja
in
push
aaa
jl
sbb
mov
dec
arpl
fdecstp
pop
out
pop
mov
cs
mov
pop
push
frstor
push
stc
imul
xlat
cmps
push
fsub
push
(bad)
cmp
or
(bad)
aas
sbb
jns
dec
lods
div
push
pop
xchg
pushf
xchg
xlat
mov
sbb
pop
aam
rcl
sbb
pop
aad
cmp
inc
sti
sub
or
neg
push
xor
mov
push
ror
(bad)
aam
mov
push
xor
jmp
cmp
fisubr
push
mov
icebp
shr
or
jecxz
cld
imul
(bad)
dec
iret
rcl
add
lods
in
cmp
cmps
push
mov
cmps
pop
mov
xchg
or
retf
fsub
mov
fistp
mov
les
jb
cmp
jl
mov
pop
and
retf
inc
mov
or
(bad)
lock
cwde
pushf
inc
jno
mov
sbb
jge
in
xchg
ins
and
popa
rcl
call
mov
pop
das
not
fst
cmp
out
mov
daa
ja
arpl
mov
rcl
xor
es
ja
or
adc
loop
into
xor
call
sub
shl
mov
inc
sub
outs
or
mov
addr16
pop
mov
sbb
inc
(bad)
lea
je
stos
xchg
pop
xchg
dec
adc
pop
jbe
dec
xchg
lock
call
dec
dec
dec
sbb
lock
dec
lahf
add
stos
test
dec
pushf
xor
or
ja
int
int
ret
(bad)
push
push
lahf
lods
imul
je
adc
and
retf
mov
cwde
xor
inc
inc
sub
xchg
and
push
push
jmp
out
cmp
test
mov
mov
cmp
fdiv
mov
and
push
pop
sbb
nop
cmps
enter
adc
test
fadd
jo
dec
repz
mov
imul
ror
in
and
sub
sub
jno
mov
mov
rcr
mov
mov
fwait
pop
xchg
mov
inc
add
retf
xchg
inc
test
jg
in
aaa
mov
mov
dec
sbb
mov
jno
out
mov
xchg
push
test
daa
or
cmp
out
hlt
js
les
mov
adc
inc
lock
out
leave
sub
(bad)
ins
adc
popf
push
fst
mov
in
jecxz
sbb
and
das
cld
pop
jge
add
jne
adc
cmp
push
pop
inc
xor
pop
and
fsubr
rcl
xchg
iret
mov
mov
dec
jmp
mov
push
iret
add
dec
popa
jecxz
push
pusha
fild
aas
dec
add
repnz
repnz
xor
addr16
shl
or
push
rcr
scas
jp
int3
ins
les
and
imul
lock
add
fmulp
xor
jg
and
cld
scas
stos
in
mov
dec
loope
ror
das
add
ret
repz
in
inc
aam
sahf
imul
imul
lods
hlt
nop
lds
jno
xor
add
xchg
sub
fisubr
test
int
stos
inc
lds
(bad)
scas
sahf
jmp
pop
mov
push
fstp
call
jge
frstor
mov
fidivr
pop
sub
mov
cmp
pop
pop
pusha
rol
(bad)
and
shr
fsubrp
in
pop
ins
stos
in
mov
mov
popf
adc
or
adc
xor
mov
dec
cwde
jg
out
stos
add
rcr
inc
movs
mov
dec
mov
mov
add
into
cdq
dec
jmp
adc
loopne
cmp
pop
add
or
or
bound
sub
popf
aam
mov
(bad)
xchg
sub
xor
hlt
jbe
std
in
test
test
test
shl
push
pop
jmp
add
xchg
loop
push
mov
in
ins
(bad)
cli
pushf
int3
pop
(bad)
retf
dec
push
sbb
repz
pop
aam
push
out
pop
add
int3
mov
sbb
repnz
leave
adc
pushf
shl
out
lds
xor
sub
add
jnp
push
scas
mov
or
xchg
aam
xchg
jo
aam
test
sub
imul
pop
sbb
inc
into
clc
pop
inc
pop
ror
je
icebp
in
push
xchg
inc
xchg
dec
pop
dec
inc
imul
je
aaa
repnz
xor
leave
dec
gs
aam
push
fbstp
cmc
inc
mov
sub
mov
nop
shl
dec
shl
jg
imul
sub
leave
add
int
retf
sub
mov
stos
fadd
seto
retf
mov
sbb
les
in
in
inc
and
xchg
push
add
add
add
fsubr
cmps
loopne
push
pop
shl
fldcw
pop
in
jne
pop
jmp
aaa
adc
mov
das
cmps
jns
out
push
retf
inc
adc
in
shl
or
popa
je
retf
lea
stos
dec
lods
in
sbb
loopne
test
jecxz
ret
or
sub
mov
jp
push
or
cli
mov
in
fsubr
cmps
(bad)
mov
call
mov
lahf
(bad)
dec
push
dec
les
fild
fisttp
retf
or
hlt
sub
(bad)
push
pop
in
xchg
xlat
or
jecxz
arpl
adc
pop
add
hlt
loope
aam
sbb
sbb
mov
pop
xor
ds
mov
in
xchg
cmps
xor
xor
jae
cmps
stos
and
pushf
add
imul
lds
in
xor
xchg
add
push
fwait
or
ds
push
jnp
add
gs
fimul
mov
sbb
pushf
out
mov
leave
pop
fcos
mov
std
sub
fdivrp
icebp
inc
and
ret
addr16
out
mov
cmps
mov
mov
dec
mov
mov
jl
test
and
mov
in
ds
cmp
xchg
fidiv
xlat
sub
fwait
dec
add
scas
add
movs
test
(bad)
fild
pop
mov
or
pop
add
lods
sub
gs
jge
or
adc
loopne
mov
fisttp
inc
cdq
aas
push
test
push
shl
dec
mov
sbb
xor
cmp
xor
mov
jo
push
jbe
cmp
inc
loop
loop
es
fucom
aas
aas
js
or
daa
cli
push
mov
(bad)
repz
jb
pop
pop
(bad)
enter
aaa
es
mov
icebp
jb
fs
xchg
jl
in
jae
mov
xor
inc
cwde
or
sbb
or
fdivr
out
push
fnsave
cmp
imul
movs
sti
das
mov
push
popf
not
pop
ds
(bad)
sahf
pop
retf
sub
and
and
lds
scas
inc
xchg
and
and
sub
stos
xchg
push
addr16
xchg
idiv
mov
ds
aas
pusha
pop
adc
lahf
cli
shl
inc
or
sub
mov
dec
add
popf
xchg
retf
daa
jae
push
dec
call
mov
cmc
xor
aad
mov
and
popf
inc
icebp
loope
mov
and
jno
sbb
mov
mov
mov
mov
or
movs
xor
ja
dec
inc
pusha
adc
in
xchg
pop
in
aas
test
xor
dec
or
cdq
jle
rcr
xor
push
sub
int
inc
adc
aaa
imul
icebp
mov
pusha
xchg
xor
inc
push
adc
jl
pop
add
mov
rcl
mov
dec
cmc
xor
adc
inc
jns
pop
mov
mov
adc
add
pop
lods
and
and
or
gs
push
or
adc
ficomp
push
repnz
pusha
mov
out
mov
inc
lds
sbb
xor
jmp
adc
mov
ins
push
jb
sar
cld
shl
pop
mov
adc
and
jge
cwde
adc
test
mov
push
dec
dec
inc
retf
xchg
fisubr
imul
das
js
in
xchg
js
or
push
retf
sbb
or
aaa
xor
ss
test
movs
stos
dec
mov
xchg
sub
inc
jbe
sbb
add
mov
and
push
cmp
movs
jge
cmp
jae
les
in
stos
lods
popa
jmp
clc
mov
adc
mov
dec
ror
int
daa
leave
pop
xchg
or
out
int
in
inc
and
pop
mov
or
nop
jp
jmp
loope
mov
dec
lock
pop
cmp
(bad)
push
jge
adc
mov
push
pushf
push
jmp
lock
and
xor
push
cmp
push
xchg
dec
pop
sbb
dec
jnp
cld
lock
mov
data16
xchg
dec
inc
and
mov
cmps
push
shl
dec
cmps
jge
call
jne
popf
pusha
mov
lea
movs
jns
lahf
cs
inc
(bad)
adc
cmp
mov
out
push
xor
out
mov
and
js
(bad)
int
test
mov
gs
cmp
xor
pop
lea
icebp
inc
mov
xor
test
cmps
mov
pop
mov
adc
loope
pop
fwait
mov
jle
fwait
les
sbb
inc
mov
push
dec
pop
xor
movs
out
test
mov
lahf
or
xchg
call
stos
test
dec
jecxz
add
fs
dec
int3
mov
mov
mov
inc
outs
cmps
add
nop
pushf
xchg
ja
sub
sub
fidivr
fwait
lock
or
mov
je
jp
sub
push
or
je
mov
jae
test
out
jmp
stos
dec
or
pop
xlat
test
(bad)
sbb
add
or
pop
mov
jno
pushf
and
xchg
mov
xor
mov
mov
inc
inc
sbb
mov
push
leave
cld
adc
adc
jge
push
out
and
daa
pop
push
cs
mov
mov
sbb
dec
dec
pop
mov
out
scas
xchg
daa
in
retf
fisubr
out
pop
dec
mov
and
test
rcr
aas
jg
inc
push
xchg
mov
or
jg
(bad)
js
xlat
shl
jne
js
dec
iret
movs
and
mov
rol
push
scas
bound
add
pop
add
push
and
test
cmp
jno
jno
ret
inc
fs
jmp
xor
into
mov
push
std
sbb
bound
loop
lock
leave
and
pop
imul
add
inc
pop
pop
aas
repnz
rol
pop
push
add
xor
jge
fisubr
jl
dec
das
sub
or
push
in
imul
jl
lods
out
push
mov
outs
movs
and
je
aaa
push
fwait
test
daa
test
or
cwde
jp
clc
stos
gs
inc
jecxz
das
adc
pop
xor
data16
lods
ins
cmc
daa
dec
test
aas
in
mov
dec
into
or
adc
dec
cmp
inc
jbe
or
fstp
cmp
sub
test
cwde
lods
inc
push
rcl
jecxz
shl
adc
ret
lods
sbb
fidivr
push
pushf
xor
cld
(bad)
cs
test
sbb
or
aam
mov
sub
or
jg
sar
mov
out
xchg
test
pop
adc
popa
mov
cmp
mov
adc
sub
popf
pop
pop
mov
xchg
aaa
and
xchg
adc
dec
lahf
mov
fstp
xchg
mov
fcom
mov
imul
sub
fst
pop
and
gs
jle
movs
jnp
rcr
xchg
xor
sbb
loope
lock
mov
mov
inc
out
xor
push
sub
dec
loope
mov
mov
test
jbe
fwait
push
adc
xlat
std
or
daa
ins
add
and
je
out
sbb
or
imul
push
inc
add
sbb
dec
sub
inc
or
push
int
mov
daa
mov
xchg
push
nop
fcomp
ja
xchg
inc
or
lods
sub
cmps
retf
test
fwait
test
ret
xor
aaa
adc
inc
int3
sahf
outs
fdivr
add
dec
pop
dec
jmp
int
adc
pop
mov
call
jmp
je
leave
sbb
mov
pop
mov
sub
fstp
test
aam
pop
fsubr
push
jae
or
sbb
sub
lock
stos
xchg
and
leave
inc
mov
xchg
mov
sub
fisttp
sub
mov
or
loope
sub
push
mov
cmp
mov
enter
mov
mov
dec
rcr
ins
push
adc
hlt
and
sub
sbb
es
and
cdq
sub
rol
icebp
adc
mov
popf
lahf
dec
mov
arpl
push
cli
int
scas
mov
jmp
or
pop
mov
sub
pop
or
jns
jnp
pop
and
inc
iret
mov
push
int3
fmul
jo
and
pop
imul
pop
cmp
push
cmp
repz
add
add
push
loop
cmp
push
mov
scas
cli
inc
int3
je
ins
stos
into
lahf
sar
sub
xlat
ror
out
mov
test
jp
jge
shl
jbe
fadd
add
adc
adc
gs
imul
cdq
mov
push
outs
sar
or
cld
add
or
pop
jnp
push
addr16
arpl
mov
push
(bad)
ror
dec
push
adc
xor
push
mov
or
cmp
call
jae
ss
sbb
std
lds
cs
enter
bound
mov
adc
adc
add
ret
push
sub
or
addr16
icebp
cmp
mov
pusha
addr16
imul
(bad)
lods
les
jne
hlt
std
push
mov
jbe
and
sub
lds
sti
xchg
(bad)
mov
and
sbb
mov
loope
dec
cdq
stos
cs
pusha
out
bound
cmp
xchg
sub
sbb
out
stos
test
lods
add
and
or
mov
dec
shl
pop
add
cmc
shrd
shr
rcr
jbe
push
jecxz
push
sbb
ret
cmp
xchg
cmp
loopne
addr16
out
loopne
(bad)
cmp
or
mov
jmp
xor
and
fwait
imul
js
mov
bound
push
std
jmp
add
sbb
xor
(bad)
xchg
aam
mov
xchg
enter
push
mov
(bad)
mov
lock
push
fisubr
or
fucom
mov
mov
dec
sbb
pop
cs
in
lahf
jmp
ja
rcr
cmps
sub
cmp
and
ins
push
outs
pop
adc
jecxz
adc
push
mov
ds
(bad)
cmp
push
into
mov
jne
or
(bad)
push
jmp
jae
jmp
cmp
inc
cmp
pop
cmp
sub
mov
sub
nop
cmp
adc
cmps
pop
test
scas
or
sub
sub
dec
ins
and
dec
add
mov
xchg
stc
dec
stos
js
xor
int3
mov
repz
xchg
addr16
push
sbb
arpl
sbb
xchg
outs
cmc
dec
add
xor
push
adc
sahf
xor
sub
push
and
in
scas
enter
jae
inc
bound
aam
jle
cmp
mov
js
shr
adc
xor
inc
sahf
stos
stos
data16
or
test
shr
retf
cli
push
push
les
dec
call
pop
cmp
repnz
xor
aad
mov
(bad)
fisub
xor
(bad)
fs
cmp
pop
out
hlt
sahf
mul
and
push
add
dec
mov
adc
mov
loope
inc
push
mov
adc
lods
cs
ret
push
mov
xchg
sahf
lock
inc
add
adc
mov
mov
add
push
jp
mov
xchg
or
sbb
fdiv
js
mov
retf
or
test
mov
jmp
test
push
cdq
push
pusha
jle
jae
scas
jbe
push
jbe
test
fidiv
test
fimul
or
stc
loopne
dec
mov
mov
add
mov
cli
sahf
mov
mov
setb
push
dec
hlt
push
or
int3
cwde
loope
cmp
sbb
movs
hlt
xchg
push
sbb
fimul
sub
and
retf
jg
fdiv
xchg
mov
fadd
bound
pop
test
mul
xor
jbe
inc
add
cmp
ret
dec
das
sub
ds
sbb
dec
cmp
out
pop
clc
dec
scas
add
or
add
rol
outs
imul
xchg
inc
dec
movs
mov
sahf
sub
add
fwait
or
jno
lods
jns
mov
js
xchg
jb
inc
shl
push
xchg
lds
push
pop
in
and
xchg
xchg
adc
ror
test
call
ficom
out
sahf
ret
fwait
stc
adc
into
rcl
mov
cmp
pop
jmp
iret
dec
cwde
and
dec
jl
sbb
pop
std
stos
adc
push
pop
fldpi
sub
xchg
aaa
cmp
pop
rcl
retf
add
inc
xor
xchg
ss
push
shl
(bad)
mov
movlps
or
pop
push
mov
les
mov
popa
popf
jmp
pop
adc
add
sbb
xor
add
lahf
mov
jmp
mov
popf
inc
sub
int3
jnp
add
push
ffree
fwait
push
fsubr
cmp
pop
lock
dec
add
test
dec
jo
aam
outs
pop
sar
push
xlat
push
push
or
inc
xor
dec
test
test
jmp
lds
or
mov
cmc
push
xchg
add
pop
jg
scas
or
and
dec
fstp
cs
jmp
daa
cld
mov
xor
jecxz
adc
and
dec
(bad)
mov
movs
pop
test
hlt
mov
or
xchg
mov
jl
fst
jbe
mov
jb
push
sub
xchg
push
mov
push
dec
out
imul
bound
sub
imul
push
cmp
add
shl
adc
sub
hlt
xor
(bad)
arpl
fist
mov
dec
dec
dec
lds
or
jmp
cmp
push
call
xor
aad
add
or
jp
mov
push
jecxz
jo
or
pop
cmp
aad
xchg
aam
pop
pop
rcr
dec
adc
ret
push
push
int3
pop
inc
out
test
out
mov
call
jae
js
adc
movs
enter
stos
mul
in
push
and
ret
mov
stc
(bad)
test
mov
mov
mov
aaa
or
fisttp
ja
leave
xor
xchg
movs
pop
int3
push
ficomp
sub
test
mov
cli
jbe
rcr
jp
mov
lods
sahf
loop
nop
push
scas
hlt
cs
mov
add
out
cmps
inc
xor
sbb
(bad)
or
push
cmp
inc
xchg
ret
or
push
or
cmp
fdiv
dec
jp
stc
(bad)
aad
arpl
add
push
aad
xor
jmp
jg
push
jle
add
sub
mov
add
or
sbb
mov
mov
mov
xor
push
sub
or
sub
sbb
out
sar
and
jp
(bad)
fistp
mov
mov
or
(bad)
ds
aam
add
xor
mov
pop
xchg
out
loope
iret
imul
mov
das
push
rcr
sub
retf
inc
xor
in
mov
mov
push
adc
pop
ds
and
sbb
jnp
pop
inc
pop
imul
mov
cmc
add
inc
and
rcl
jge
divps
(bad)
test
and
dec
push
lock
jne
mov
(bad)
pop
call
test
jne
push
mov
loop
and
(bad)
or
inc
repnz
add
adc
xor
cwde
retf
cmp
frstor
mov
outs
fcom
lock
sbb
(bad)
pop
jns
push
mov
sahf
imul
out
dec
mov
dec
dec
or
nop
mov
loop
mov
mov
adc
sbb
add
mov
xor
test
sbb
(bad)
jne
xchg
repnz
mov
ins
repnz
sar
cli
ror
js
ss
in
gs
add
and
fidivr
push
sahf
mov
dec
icebp
addps
jle
add
or
pop
ret
push
add
xchg
jmp
shl
data16
mov
nop
push
pop
lods
es
inc
adc
sbb
push
dec
sbb
fidivr
test
cmp
push
pop
pop
(bad)
call
hlt
pop
sti
fisttp
sub
cmp
xchg
pop
xchg
lock
retf
js
ret
int3
mov
jb
ss
call
repz
cmp
ds
add
daa
add
sahf
jno
xchg
cmp
lds
adc
sub
rcr
jl
(bad)
cmc
sar
lea
(bad)
xor
sbb
mov
mov
add
fadd
inc
xor
dec
ss
mov
call
test
out
and
inc
aas
mov
inc
add
int
(bad)
xchg
xor
mov
fld
loop
pop
inc
stos
cmp
test
mov
cmp
lahf
dec
mov
sub
in
adc
ins
mov
mov
ins
mov
mov
push
mov
adc
lahf
jge
aaa
jae
loop
or
ficom
repz
dec
add
and
(bad)
sub
jp
sub
xchg
add
mov
mov
movs
repz
cwde
inc
and
cmp
ss
or
int3
pop
ss
adc
bound
mov
fwait
in
push
push
into
xor
mov
ror
jo
mov
add
add
pop
sahf
xor
cs
sub
(bad)
or
inc
xchg
add
lock
stos
sub
loop
stos
mov
xor
nop
add
call
and
cmp
push
imul
shr
pop
imul
aaa
dec
push
(bad)
movs
(bad)
mov
jne
pop
adc
mov
pop
xor
pop
shl
nop
fucomp
fwait
imul
into
mov
(bad)
imul
fcomip
imul
jbe
cmp
out
push
cmp
xchg
push
lahf
outs
out
lahf
(bad)
ffree
add
ss
and
(bad)
mov
or
mov
fstp
(bad)
fisubr
sbb
jae
push
and
(bad)
out
loopne
adc
pop
push
sbb
out
cmp
adc
loope
jno
scas
inc
lods
pop
adc
xchg
sub
jmp
imul
or
sbb
dec
test
imul
jbe
xor
loopne
aas
faddp
aam
xchg
sub
dec
idiv
bound
fistp
fsubr
(bad)
leave
add
inc
pop
scas
mov
hlt
or
pop
loopne
outs
movs
cmp
and
int
fcomp
rcr
retf
xchg
sbb
and
jne
fistp
out
xchg
lea
pop
int3
or
and
mov
bound
lods
xchg
daa
mov
sbb
loop
jle
imul
cdq
cmp
call
add
sbb
ret
lods
shr
out
mov
out
daa
fwait
lods
(bad)
int
sub
je
sub
pop
jns
(bad)
repnz
iret
jmp
dec
sti
sti
and
xor
ret
inc
mov
add
or
dec
adc
into
jno
in
int3
cmp
push
xor
loop
jno
lds
or
push
lea
lds
shl
push
jo
lsl
and
ds
test
ret
mov
push
pop
add
sub
xor
repnz
push
shl
in
std
jbe
add
mov
fiadd
mov
aaa
or
or
test
loopne
ja
out
jecxz
jle
imul
cmp
mov
shl
jo
mov
dec
retf
fst
dec
inc
outs
in
ror
mov
pop
sub
xor
test
jl
daa
mov
cmp
daa
cmp
call
jns
dec
retf
shl
pop
clc
sub
daa
enter
retf
cmp
inc
stos
cmp
and
stos
mov
push
inc
repnz
lds
fwait
sbb
popf
push
(bad)
div
in
ficomp
adc
jmp
sbb
mov
out
cdq
lock
iret
cmc
cmp
cmp
xchg
sti
repnz
xchg
or
jno
lahf
shl
mov
and
adc
jcxz
or
or
inc
mov
hlt
push
adc
(bad)
retf
fsub
pushf
or
and
and
cmpps
mov
scas
mov
dec
in
cmp
cli
ins
push
test
jno
retf
adc
(bad)
shl
pop
rcl
outs
call
fdiv
or
nop
adc
mov
imul
out
sub
cmp
jg
aad
ins
add
mov
mov
xor
xchg
add
cdq
dec
inc
xchg
xor
xor
aaa
jne
bnd
(bad)
mov
push
sti
(bad)
adc
leave
inc
inc
cli
repz
dec
(bad)
push
scas
aad
push
sbb
out
nop
xchg
pop
movs
outs
mov
fisub
inc
and
or
add
or
ins
fmul
aas
mulps
or
mov
pop
add
mov
push
mov
lods
cdq
cwde
sub
jbe
shl
jge
(bad)
xchg
inc
rcr
xchg
jp
shr
sbb
lahf
pop
push
inc
mov
aas
add
inc
pop
push
inc
xor
push
jns
scas
repnz
pop
in
push
xlat
cli
mov
test
scas
mov
rol
mov
imul
rol
rcl
or
xor
fs
scas
xchg
cmps
movs
imul
hlt
inc
mov
daa
jmp
popf
jae
call
inc
dec
mov
or
cmc
dec
mov
inc
xchg
and
sbb
mov
jbe
(bad)
mov
test
not
sub
cdq
shl
jge
cmps
adc
cmps
xchg
or
fbld
xchg
adc
dec
outs
cli
es
push
ret
dec
call
scas
sbb
push
add
pop
std
xchg
pop
cmp
or
mov
add
sbb
xor
lock
pushf
jmp
icebp
inc
jo
and
test
mov
call
mov
pop
xchg
stos
or
arpl
push
adc
pushf
pop
push
lods
and
add
xor
ins
test
test
(bad)
retf
cmp
(bad)
ficom
mov
mov
fs
stos
(bad)
jnp
mov
loop
out
popa
jns
jb
mov
inc
add
test
jbe
outs
fadd
in
call
sbb
retf
movs
sar
or
popa
clc
inc
jle
and
popf
pop
mov
jne
push
mov
cmp
lahf
xchg
nop
hlt
movs
aad
mov
lock
xchg
add
xchg
mov
push
(bad)
loopne
and
cli
cs
imul
inc
(bad)
std
pop
into
(bad)
xlat
xchg
pop
out
xchg
ins
cmp
jmp
jl
pop
cmps
repz
and
add
dec
push
rcl
arpl
push
sahf
leave
mov
sub
fnstcw
mov
inc
cmp
sub
mov
sub
dec
mov
mov
pop
mov
add
pop
sar
push
sub
addr16
mov
add
mov
adc
push
dec
movs
rcl
jle
dec
and
(bad)
pop
adc
xchg
stc
push
aam
cli
mov
xor
or
pusha
adc
int
outs
inc
cmp
inc
inc
add
aas
outs
add
sbb
xor
sti
sub
bound
mov
jb
jne
ins
test
or
push
add
cdq
mov
lods
mov
sahf
das
adc
ds
data16
mov
or
inc
push
test
sar
cmp
or
outs
and
xchg
mov
nop
jl
int3
jne
xchg
nop
das
add
and
and
or
push
cli
jmp
jmp
ss
js
jmp
stos
xor
in
inc
mov
movs
inc
in
jns
imul
cmp
mov
lods
fwait
shl
fimul
pushf
mov
test
jmp
test
pop
xchg
mov
mov
mov
inc
int
jnp
sbb
bound
jnp
leave
stos
or
add
cli
push
cwde
jle
rcr
pop
clc
mov
inc
nop
mov
enter
push
out
mov
ins
aad
mov
jne
pop
mov
adc
or
fdivr
mov
push
ret
out
ficomp
out
or
xchg
popa
test
sbb
sar
mov
mov
xchg
nop
adc
(bad)
iret
popa
ror
add
arpl
icebp
stos
sti
pop
(bad)
(bad)
sub
or
xchg
call
daa
les
pop
adc
stos
(bad)
aam
add
leave
xchg
push
jle
(bad)
cmp
mov
idiv
cmps
dec
mov
jns
stc
into
ja
lods
mov
jge
push
jmp
xchg
push
mov
pop
enter
dec
imul
in
lods
fst
ret
inc
xchg
jge
or
fiadd
(bad)
fidivr
enter
mov
and
(bad)
xchg
test
call
hlt
inc
dec
add
pusha
inc
mov
add
mov
push
popa
int3
sbb
or
shl
jmp
jne
imul
add
dec
add
xor
call
xor
mov
lahf
hlt
inc
out
sar
aam
ror
scas
jge
data16
xchg
out
shr
loop
nop
fwait
mov
sub
retf
adc
mov
pop
sbb
fst
mov
and
push
stos
in
or
mov
dec
test
add
mov
and
into
lahf
inc
sahf
or
or
scas
or
adc
cmps
cmp
mov
repz
push
or
xor
adc
lahf
push
add
jmp
in
inc
mul
sbb
or
div
stos
cmp
push
std
push
mov
adc
(bad)
inc
cli
(bad)
ror
add
mov
sbb
lahf
jmp
xchg
stos
outs
pop
push
jp
mov
ja
xlat
int3
imul
mov
push
add
mov
mul
aaa
xchg
cmps
cdq
(bad)
call
xor
into
inc
ins
dec
fidivr
leave
inc
mov
test
(bad)
hlt
fcmove
inc
cli
mov
mov
add
sbb
push
xor
aaa
cmp
cmp
jg
cs
cmp
int3
inc
je
or
add
inc
mov
mov
imul
mov
add
cmp
pushf
xchg
xchg
pushf
out
sbb
pop
scas
in
push
fstp
scas
js
sbb
gs
pop
repnz
retf
movs
test
sub
cli
mov
fdiv
push
(bad)
or
jo
or
and
fidivr
imul
and
std
addr16
sbb
or
sub
sub
xchg
outs
(bad)
je
enter
xchg
out
cwde
sub
and
or
lods
xchg
outs
and
xor
cdq
xor
in
fnstenv
adc
and
js
sbb
call
adc
inc
out
fwait
lds
cli
cmp
mov
enter
shl
dec
jmp
pop
dec
add
iret
jmp
ja
jmp
mov
dec
mov
jno
loop
mov
data16
push
lods
jnp
test
or
mov
dec
or
mov
out
shr
int
rcl
jle
stos
rcr
clc
sahf
xor
mov
cmp
mov
add
adc
das
ja
cmp
dec
retf
mov
arpl
add
inc
pusha
pop
into
pop
mov
pop
cmp
bnd
stos
fcomp
xor
inc
inc
(bad)
repnz
mov
ret
rol
sub
daa
and
ins
fldcw
mov
push
std
enter
push
jg
dec
fs
loopne
or
out
adc
push
lods
popa
mov
inc
psrad
lods
cmps
pusha
dec
daa
repnz
(bad)
mov
imul
std
hlt
mov
cmp
mov
inc
push
xor
cmps
imul
cld
mov
int
and
inc
xchg
ins
sub
adc
mov
xor
xor
inc
les
jns
rcr
pop
and
aas
outs
in
push
loop
or
jle
(bad)
jmp
mov
mov
xor
lahf
popf
sub
icebp
rol
xor
jb
arpl
sub
mov
mov
(bad)
mov
mov
inc
jbe
in
mov
cld
jb
les
mov
hlt
mov
mov
fnstenv
xchg
dec
pop
xor
cmp
test
inc
inc
lock
outs
iret
fstp
pop
add
loopne
sbb
sub
dec
mov
sbb
pop
mov
adc
out
sbb
add
push
test
mov
fucom
into
and
cmovl
cmp
in
add
push
pushf
pop
sbb
shl
test
in
and
add
aad
dec
jmp
in
jns
mov
push
loop
jmp
test
lahf
call
jae
fmul
push
jmp
pop
and
pusha
sub
cmp
mov
inc
xchg
xchg
fistp
(bad)
(bad)
fisubr
and
scas
mov
into
cmp
(bad)
add
or
ja
mov
mov
cmp
jnp
sbb
sub
adc
repz
cmp
(bad)
es
rol
sub
inc
pop
shl
jne
aaa
into
dec
retf
jbe
ret
cmc
movs
fld
jmp
pop
clc
fsubr
outs
in
sub
sbb
mov
adc
inc
push
xchg
xor
or
dec
imul
aaa
outs
jnp
pop
and
cmps
push
and
(bad)
adc
cmc
ja
inc
xchg
ins
xchg
jne
cdq
mov
mov
pop
mov
sub
dec
sbb
shl
fs
add
mov
aad
xlat
mov
sub
inc
gs
xor
xor
int3
pop
sbb
mov
or
pop
jb
sbb
cmp
dec
jo
popa
popa
cmp
mov
dec
ins
mov
mov
lods
adc
sbb
mov
push
sbb
mov
xchg
sub
jne
or
fst
and
mov
and
movs
bound
jecxz
fistp
in
mov
fcompp
into
pop
ins
out
shr
or
(bad)
and
push
nop
std
js
ret
cmp
xor
push
sub
(bad)
pop
or
xlat
inc
add
lods
adc
mov
or
cmp
cmps
push
addr16
dec
jne
leave
dec
inc
ret
out
ins
jp
fstp
jge
adc
cmps
outs
jno
xlat
icebp
xor
xchg
jp
inc
and
xlat
pop
fidivr
mov
adc
cld
mov
rcr
push
cmp
js
xor
not
icebp
pop
je
pop
pop
rol
pushf
pop
cld
outs
inc
and
xchg
imul
dec
ins
fimul
call
adc
mov
call
ja
cmp
adc
push
mov
mov
lds
adc
jl
jle
aaa
mov
outs
and
test
arpl
clc
icebp
push
jmp
aad
mov
arpl
xor
enter
cwde
mov
aad
jle
clc
inc
sar
xchg
call
push
mov
mov
fnsave
and
adc
rcl
stos
aaa
aad
movs
cwde
leave
push
pushf
mov
and
inc
pop
repnz
sbb
dec
out
shl
add
fistp
dec
xor
mov
xchg
ins
out
or
push
dec
lock
bound
push
push
push
arpl
dec
xlat
test
dec
fwait
in
lods
mov
xlat
retf
and
leave
enter
lahf
(bad)
push
mov
ss
add
inc
js
mov
sub
leave
xor
jmp
imul
adc
pop
popa
sub
shl
repz
(bad)
ret
dec
mov
add
and
popf
push
mov
inc
jmp
dec
jne
mov
sub
shl
mov
cmp
fistp
sar
xor
pop
ret
lds
push
cmp
push
ins
push
fistp
out
ins
dec
pop
dec
and
xor
arpl
fsubr
sub
(bad)
shr
or
aaa
push
neg
aas
out
jg
out
aaa
push
pop
mov
push
cmc
outs
(bad)
lock
pop
ds
sub
loope
dec
adc
sti
call
inc
mov
jp
aam
cmp
cld
les
loope
cmps
pop
add
int
rcl
adc
aaa
loope
ss
cmp
pop
cmp
sbb
add
inc
or
fldenv
lock
ds
(bad)
sahf
sub
in
mov
push
aam
repz
jle
and
call
int
scas
in
out
jl
dec
(bad)
jge
push
and
push
push
jmp
in
out
dec
add
icebp
dec
bound
push
mov
icebp
mov
sbb
mov
lea
and
retf
inc
push
ss
jmp
jl
sahf
jmp
ret
hlt
jl
hlt
adc
mov
inc
sahf
test
(bad)
add
jle
ret
out
sti
(bad)
icebp
stos
dec
xchg
aad
push
aas
xlat
cs
xlat
sahf
pop
xor
repz
lea
add
jg
mov
(bad)
inc
adc
xchg
scas
cli
imul
adc
aad
push
cwde
add
div
out
or
adc
ins
push
pop
gs
mov
xor
mov
cmp
cmp
stos
das
jb
pop
ja
fadd
retf
int3
lods
hlt
push
repz
dec
mov
jno
je
outs
cdq
mov
inc
inc
cld
lock
cli
cmps
out
sbb
mov
push
repnz
mov
mov
(bad)
(bad)
dec
pop
push
dec
cs
sub
xor
and
sbb
pop
fbstp
fidiv
cmp
and
ret
sub
scas
xor
pop
inc
and
push
sti
and
add
mov
icebp
rol
xchg
sahf
and
nop
dec
pusha
or
xchg
scas
dec
mov
test
lea
rcl
add
fwait
cmps
cwde
into
out
jle
pop
jae
xchg
cs
and
xchg
cs
mov
rol
inc
add
out
push
mov
mov
sbb
stos
(bad)
push
in
arpl
call
jb
sub
and
neg
rcl
es
outs
sti
xor
retf
bound
inc
ds
push
xor
mov
mov
sbb
jge
adc
ds
mov
call
(bad)
pop
jmp
popf
lods
lods
dec
jnp
xchg
mov
lds
jmp
pop
ins
in
loopne
add
lods
repnz
sbb
gs
inc
cmc
stos
lea
xchg
inc
mov
daa
jg
xor
xchg
ret
fild
ins
and
in
enter
sbb
mov
lock
lods
call
add
scas
xchg
enter
(bad)
or
enter
or
pop
gs
loope
cmps
xor
ret
fbstp
adc
or
pop
push
popa
adc
mov
jb
sub
dec
out
adc
inc
outs
jnp
imul
dec
mov
retf
inc
jae
jmp
int
add
or
xchg
push
out
push
xchg
cmp
push
xchg
sbb
push
jmp
popf
and
add
sub
test
loopne
or
xor
jno
ja
ret
(bad)
retf
pop
fild
xor
mov
(bad)
xchg
mov
xchg
dec
ins
loope
inc
in
push
sub
mov
jg
iret
lahf
out
lods
push
inc
xchg
cmp
and
mov
cmp
addr16
outs
and
arpl
lods
mov
fwait
xchg
mov
lea
pop
xchg
sar
lods
sbb
sbb
mov
fnstenv
dec
data16
sbb
pop
push
sbb
mov
push
mov
push
jp
push
adc
sti
lds
daa
aad
sub
push
(bad)
loopne
push
cmps
inc
mov
mov
cmp
in
je
xor
jp
inc
retf
lds
mov
mov
jo
mov
nop
xchg
repz
mov
push
xlat
aaa
arpl
jl
push
mov
add
aad
and
(bad)
or
jne
mov
add
pop
add
xchg
mov
test
mov
dec
fldcw
or
outs
out
sbb
sbb
loop
dec
sbb
mov
and
leave
pop
(bad)
in
mov
int3
push
cmp
add
dec
lods
fbstp
xchg
jbe
xchg
(bad)
or
cmp
mov
lds
jnp
cld
leave
lock
es
jmp
inc
pop
and
mov
scas
pop
in
add
repnz
pushf
pop
jecxz
mov
fld
push
mov
js
sti
push
jge
retf
(bad)
xor
je
dec
add
bnd
xor
call
(bad)
mov
out
inc
mov
push
int
push
aas
cli
pop
push
push
mov
xchg
or
cmps
push
jmp
push
(bad)
lods
(bad)
das
icebp
fs
cmp
div
mov
mov
addr16
push
fwait
sbb
ja
inc
pop
push
ret
repnz
mov
push
xor
xchg
jns
dec
push
shr
leave
fdivr
or
sbb
out
inc
dec
mov
adc
out
jbe
je
jmpw
mov
rol
in
cli
add
mov
in
ins
rol
ins
mov
xchg
sbb
cmp
js
push
imul
loop
jg
jno
fwait
or
test
retf
aam
mov
push
pop
(bad)
cmp
rcr
push
pop
mov
add
or
inc
test
pop
js
std
imul
hlt
div
mov
mov
mov
xlat
push
jecxz
popa
or
in
icebp
cld
test
mov
inc
sar
adc
push
inc
and
ret
xor
mov
pop
in
push
jnp
lea
hlt
inc
outs
push
jbe
add
xchg
mov
lock
repz
test
mov
ja
das
cmp
(bad)
and
pop
(bad)
jne
hlt
push
sub
dec
repz
mov
push
stc
lea
or
(bad)
out
jne
iret
in
pop
movs
add
xchg
adc
dec
cmp
fmul
inc
fwait
ret
out
ss
pop
test
imul
popf
adc
and
mov
pop
je
push
(bad)
not
cs
xchg
stos
mov
add
movs
sub
cs
scas
sahf
lds
inc
cmp
cs
mov
cdq
and
fimul
imul
movs
test
(bad)
les
seto
sub
fld
mov
mov
fiadd
sub
(bad)
jecxz
xchg
add
add
adc
or
out
mov
adc
aas
sbb
and
mov
retf
pop
sub
in
(bad)
test
mov
inc
addr16
repz
daa
repnz
mov
sub
mov
adc
sbb
cmps
pusha
sbb
xchg
lods
daa
xchg
test
ss
xchg
xor
adc
cwde
mov
mov
aaa
repnz
outs
jmp
movs
sbb
push
cld
dec
dec
lods
adc
js
mov
lods
fld
push
xchg
test
mov
mov
inc
mov
cmp
repz
xor
pop
cmc
dec
retf
ja
xor
adc
inc
cmp
int
add
imul
jne
clc
pop
push
sub
cmovae
(bad)
pcmpeqd
cdq
xchg
adc
inc
aad
xchg
sbb
push
mov
ins
xchg
jmp
jns
push
ss
test
mov
add
arpl
mov
inc
or
pop
test
aas
mov
data16
inc
mov
jbe
and
cmp
retf
mov
rcl
lods
stc
push
dec
cmp
jo
jmp
int3
pop
call
jmp
fisttp
dec
push
fadd
xor
out
jp
aam
cli
mov
xchg
pop
mov
leave
fstp
push
xchg
push
sbb
jbe
adc
push
pop
hlt
sbb
pop
pusha
rcr
jae
add
xchg
xchg
inc
pop
fild
cs
mov
aam
test
icebp
jle
lahf
xor
push
sbb
scas
push
jl
xor
out
aad
out
add
add
add
out
mov
or
(bad)
mov
stos
cmp
(bad)
jg
popa
pop
aad
lods
jns
add
adc
and
sub
and
adc
sbb
into
cmp
xor
jecxz
mov
xchg
xchg
aas
pop
xor
dec
enter
cmp
mov
popf
jmp
inc
les
or
jns
adc
or
movs
and
(bad)
dec
inc
sub
sahf
add
dec
bound
sub
add
pop
pop
sbb
imul
inc
cmp
push
inc
leave
jo
les
and
ins
and
xor
and
inc
cmps
cmp
ror
es
fucomi
out
dec
mov
cmps
(bad)
mov
mov
(bad)
std
shr
jge
pop
add
or
jmp
xchg
mov
popf
dec
sbb
mov
jmp
in
fisubr
lock
cmp
sub
inc
(bad)
retf
mov
add
pushf
mov
(bad)
add
pop
jmp
dec
pop
push
pop
push
rcl
xor
mov
dec
or
repnz
rcr
cwde
sahf
xchg
fnstenv
pop
dec
jge
and
inc
jbe
cld
pavgb
mov
mov
idiv
ror
clc
sbb
outs
xchg
push
or
or
xor
cli
sub
inc
(bad)
jno
sahf
stos
ins
das
in
lock
ds
outs
cwde
cmp
jno
jmp
push
in
cmp
movs
movs
xor
cmp
dec
std
loop
mov
(bad)
imul
xchg
push
popa
add
cmp
js
lods
xchg
sub
cmps
jns
jae
das
(bad)
dec
test
pop
icebp
jg
push
inc
mov
(bad)
mov
fnstsw
xchg
fstp
lock
fdivrp
sar
jge
or
push
repnz
es
and
arpl
out
fmul
aad
(bad)
sbb
and
fnstenv
repz
bound
add
rol
xlat
test
push
push
inc
test
pusha
pop
xor
ret
mov
das
pop
ror
jbe
in
iret
push
js
sub
outs
movs
inc
jle
and
mov
inc
outs
lods
and
mov
inc
(bad)
inc
sub
in
cmp
mov
mov
out
out
push
lods
mov
scas
int3
cmp
xor
cmp
js
loope
push
xchg
int3
sub
xor
mov
dec
lods
bound
inc
xor
xchg
sub
xor
or
pop
fnsave
movs
and
hlt
sbb
and
ins
mov
lahf
es
jge
test
pop
shl
arpl
or
dec
fcom
xlat
pop
jnp
lahf
jmp
pusha
push
jmp
ret
adc
inc
sub
jmp
push
ins
sbb
push
fist
es
movs
(bad)
or
pusha
mov
dec
cmp
pusha
jnp
sbb
push
pop
pop
fimul
imul
mov
lods
inc
(bad)
mov
mov
adc
call
jmp
mov
mov
xor
mov
sub
fsubr
dec
(bad)
retf
push
mov
or
dec
js
sbb
push
sti
jmp
in
fld
mov
out
cmp
mov
jge
sar
mov
push
fistp
arpl
shr
iret
pop
cmp
sub
leave
xor
stc
loope
adc
xchg
adc
add
xchg
sub
lods
inc
hlt
mov
xchg
jmp
mov
inc
inc
ret
mov
push
aad
inc
mov
sahf
dec
pop
fcomp
sub
aaa
jno
jle
push
repnz
add
lock
cmp
neg
ss
cmps
mov
std
fadd
xor
out
push
ror
mov
push
call
push
add
int3
dec
test
pop
mov
in
cmp
xchg
int3
aas
retf
cli
mov
sti
ins
sub
sti
pop
jmp
ror
inc
(bad)
push
mov
test
mov
xchg
mov
sbb
ins
sbb
pop
inc
or
dec
mov
ret
(bad)
cld
mov
loopne
call
mov
retf
loope
(bad)
int
and
inc
rcr
iret
lea
and
les
jmp
or
js
adc
gs
clc
push
hlt
outs
adc
js
mov
(bad)
popa
sar
push
leave
test
fdiv
jmp
cmps
cmp
push
mov
outs
pushf
mov
cmps
sahf
xchg
(bad)
mov
and
pop
stc
fwait
imul
mov
sub
dec
lods
sub
dec
fld
or
ret
stc
(bad)
xor
cdq
xchg
xor
lods
jle
mov
sbb
cmp
idiv
cmp
sahf
bound
jae
cmps
xchg
push
jno
popf
aam
iret
scas
mov
pop
out
mov
movs
stos
mov
jmp
mov
ss
retf
lds
xor
mov
sub
test
dec
adc
cli
sbb
mov
xlat
scas
out
popa
push
sub
push
xchg
scas
fild
cdq
sub
shl
cdq
or
inc
dec
lds
aas
loope
pop
jo
test
xchg
sbb
(bad)
jae
cwde
into
ficomp
push
push
gs
cmps
retf
rcr
cmp
call
lahf
jae
fldcw
rcl
outs
jge
lea
pop
mov
sbb
dec
sbb
xor
retf
xchg
xchg
mov
sub
sub
or
mov
(bad)
jmp
fisttp
or
mov
nop
out
push
mov
in
jb
sar
shl
adc
ret
mov
mov
xchg
pusha
aad
iret
sbb
retf
fsubr
inc
sub
mov
out
out
xor
call
in
push
jae
sbb
sub
mov
cmps
scas
xor
fidivr
mov
movs
mov
push
mov
mov
add
loopne
retf
or
and
jmp
ins
inc
icebp
iret
test
or
mov
(bad)
fucomp
addr16
(bad)
gs
or
adc
add
clc
lahf
adc
mov
pop
(bad)
mov
shr
je
(bad)
repnz
mov
xchg
cmp
mov
enter
cmp
dec
pop
bound
push
add
fbstp
sar
jecxz
fbld
sbb
ret
inc
mov
call
out
(bad)
shl
call
add
fimul
xor
rcr
sahf
pop
inc
mov
iretw
and
mov
cmps
xchg
mov
pop
xchg
or
lock
mov
in
cld
test
ds
hlt
inc
pop
sub
js
jno
leave
add
retf
fs
dec
enter
stc
jae
mov
cli
pop
(bad)
jge
cmp
sbb
ret
out
mov
adc
cmps
(bad)
aaa
mov
fcom
sbb
pop
pop
rol
adc
ror
sub
push
and
fwait
mov
mov
rol
and
fwait
sub
lea
pop
pop
push
mov
ss
push
sbb
adc
pop
add
aam
push
in
cwde
jo
call
adc
rol
imul
sahf
inc
inc
clc
sbb
sti
cmp
bound
jge
pop
sub
jecxz
pop
jns
cmp
ss
xchg
adc
push
xchg
pop
jo
mov
fild
sub
sub
mov
jae
gs
iret
mov
xor
ja
add
jne
mov
ss
pop
push
xlat
icebp
inc
dec
ret
or
fdivr
and
out
in
cmp
mov
inc
xchg
mov
or
or
pop
movs
ficomp
out
mov
cdq
cs
mov
jmp
fstp
call
push
cwde
out
std
(bad)
sar
and
lea
stos
lea
test
jl
fnstcw
fisub
mov
sbb
les
push
in
out
outs
add
sti
fldenv
inc
inc
and
xchg
dec
je
mov
pop
mul
pop
adc
call
or
ins
mov
ins
pusha
xchg
int
ds
jg
adc
jmp
mov
clc
sbb
adc
cmp
sub
jae
and
xchg
jno
in
cs
mov
(bad)
fisub
cmc
mov
and
loope
pop
loopne
dec
mov
aad
call
pop
mov
or
pusha
mov
add
shr
xor
push
fwait
call
jmp
popf
add
cmp
test
das
fs
setno
(bad)
(bad)
in
ja
mov
lods
pop
(bad)
and
aad
dec
adc
mov
ds
cmp
sbb
pop
push
and
add
mov
jo
outs
shr
lahf
stc
mov
push
and
les
mov
and
lds
mov
mov
in
aaa
(bad)
ss
xchg
pop
std
enter
fcom
in
xor
jmp
aam
mov
repz
mov
call
dec
fstp
pop
jmp
mov
mov
rcr
dec
cs
adc
xchg
mov
jl
xor
dec
jnp
mov
into
add
inc
push
(bad)
dec
pop
shl
xchg
and
(bad)
push
call
fcomip
jge
in
push
js
aas
jmp
(bad)
and
popf
add
loopne
stos
sbb
push
ss
fcmovnb
xor
or
jecxz
push
pop
pop
fisttp
fistp
xor
shr
test
pop
int3
sbb
fiadd
dec
rcl
shl
inc
sbb
push
out
cmp
addr16
lock
and
outs
xchg
test
lds
sub
jecxz
retf
add
push
mov
dec
fwait
mov
aad
fcomip
imul
inc
outs
fst
das
inc
inc
mov
jg
into
or
hlt
jmp
mov
fild
call
loope
rcl
icebp
pop
xlat
in
(bad)
clc
or
call
sub
mov
(bad)
(bad)
(bad)
xchg
lods
inc
(bad)
fcom
mov
inc
add
adc
dec
fisub
or
push
inc
jge
and
mov
xor
lahf
imul
popf
das
xchg
xlat
pop
xchg
es
mov
popf
sbb
pop
imul
in
dec
add
cmc
aas
mov
jg
or
mov
cmps
sbb
inc
push
mov
out
(bad)
outs
nop
sbb
jmp
mov
ins
inc
fcom
mov
fs
and
loope
jns
stos
jecxz
and
push
icebp
mul
mov
xchg
xor
fwait
dec
pop
test
hlt
and
push
outs
aam
dec
(bad)
in
mov
jns
dec
mov
push
xchg
inc
outs
dec
in
popa
cmp
pop
cld
jb
call
jmp
fwait
sub
das
push
inc
sti
(bad)
rol
(bad)
inc
mov
dec
adc
and
xlat
mov
retf
aas
hlt
scas
mov
loope
mov
imul
imul
and
pop
add
addr16
mov
call
loopne
add
and
cmps
push
push
pop
push
mov
sbb
cmps
in
sub
mov
scas
adc
shr
sub
js
push
pop
fidivr
add
lock
jle
and
pop
xor
lahf
in
mov
mov
xchg
xchg
scas
xor
sbb
fiadd
ins
add
sbb
and
(bad)
leave
xchg
mov
repnz
mov
stc
jmp
push
jle
cmp
xor
push
mov
mov
cmp
push
cmps
xor
xlat
cmp
sbb
push
jle
call
sub
pop
fimul
jb
inc
sbb
in
xor
pusha
daa
(bad)
out
je
fnstsw
cld
sub
xchg
pop
sbb
enter
enter
in
xchg
cmps
mov
and
jno
xor
lods
add
loop
ins
mov
mov
xlat
inc
fisub
xchg
or
shr
pop
call
push
bound
add
lods
pop
aam
and
repnz
ja
lock
adc
sub
dec
add
int3
test
mov
fiadd
mov
mov
jmp
mov
inc
mov
mov
xchg
hlt
add
jnp
push
test
and
loop
ds
push
inc
mov
push
outs
nop
xchg
xor
jp
repnz
push
xchg
xchg
pop
push
xchg
mov
in
fsub
sbb
mov
jno
inc
push
(bad)
icebp
fdiv
cmp
movs
out
clc
push
in
xchg
outs
pop
push
scas
ds
cmp
mov
and
fstp
loope
in
popf
pop
data16
xchg
repnz
dec
inc
sub
mov
sbb
cwde
jne
sub
mov
loop
fisttp
or
das
sub
int
and
jns
xor
loop
fsubr
dec
mov
or
push
shl
add
xchg
test
xor
inc
out
xor
aaa
ins
mov
and
retf
cmp
out
test
bound
or
out
shl
sub
adc
daa
fisubr
or
pop
xor
xchg
cs
dec
adc
cwde
je
jns
cmp
dec
inc
and
mov
pop
mov
inc
fcom
dec
mov
sub
adc
dec
inc
or
mov
and
scas
pop
push
pushf
add
sbb
jge
outs
repnz
loopne
or
pop
sbb
rcl
lahf
test
scas
pop
sbb
(bad)
cmps
xor
or
int3
or
ret
jle
stos
call
cmp
add
(bad)
sbb
adc
ja
pop
mov
jmp
push
inc
pop
add
xor
dec
push
fst
sbb
ret
sub
push
(bad)
(bad)
pop
cmp
pop
sar
fistp
dec
es
ins
push
jl
fsubr
xchg
pop
popa
ficomp
sbb
mov
pop
jne
dec
(bad)
jo
outs
shl
xchg
mov
data16
cmc
sbb
xchg
repnz
adc
bound
call
jne
movs
ss
int
inc
mov
ror
push
mov
(bad)
xor
mov
and
sbb
xchg
lahf
test
out
test
addr16
xchg
inc
adc
out
fistp
cmps
push
cdq
pop
enter
xor
jbe
out
adc
or
mov
xchg
jbe
mov
ja
or
sbb
neg
add
ret
(bad)
test
mov
aaa
loope
out
xor
or
mov
dec
mov
dec
sub
stos
add
clc
lock
lods
arpl
add
sub
jne
xor
add
dec
and
cmps
inc
pop
test
pop
add
xor
pop
add
xlat
push
and
daa
and
and
sub
inc
xor
push
pop
fwait
stos
and
out
les
mov
int3
pop
clc
inc
inc
dec
out
jmp
outs
push
dec
test
push
int3
les
jecxz
sbb
or
gs
jmp
ja
and
sub
pop
iret
mov
sub
inc
jle
movs
rol
ret
xor
sbb
stc
scas
pop
rcl
ret
xchg
mov
jnp
out
movs
lahf
stc
fbld
data16
scas
pop
cmp
loopne
sbb
sub
sti
push
cmps
fucomi
fst
inc
shr
fistp
push
pusha
and
rol
div
dec
sahf
push
xlat
push
(bad)
or
das
sub
cwde
or
cs
jbe
adc
jmp
push
add
nop
ja
cmps
shl
jmp
or
and
adc
fimul
lock
cmp
mov
pop
sar
mov
mov
and
mov
xchg
lahf
fcomp
sbb
cdq
fdivrp
rcr
pusha
adc
add
jecxz
dec
aad
popa
test
fmul
cmc
mov
or
add
fcom
fcomp
xchg
jnp
aaa
adc
pop
xor
xchg
xchg
clc
popa
pop
in
jns
outs
pushf
jge
jnp
and
out
jnp
push
xchg
sbb
iret
pop
mov
in
pop
sub
in
enter
inc
inc
test
mov
or
repnz
loopne
stos
mov
jb
xchg
xlat
mov
jo
fwait
jl
jmp
cmp
fwait
adc
adc
sub
fdiv
jp
and
mov
sbb
mov
pop
(bad)
jbe
xchg
pop
pop
xchg
cmc
mov
xchg
or
cmps
shl
jns
rol
mov
test
adc
(bad)
cmc
das
out
hlt
xchg
or
pushf
inc
cmps
dec
cdq
sar
out
sbb
pop
pushf
lods
sbb
mov
ret
xlat
std
out
sub
dec
hlt
and
xor
xchg
outs
ret
mov
mov
pop
mov
in
sbb
dec
mov
int
in
repz
dec
loopne
sub
xor
sbb
setb
and
and
sti
leave
js
rol
add
adc
test
xchg
sbb
ja
mov
mov
push
dec
jb
jne
std
call
aas
out
ss
add
add
sbb
ss
inc
aad
or
inc
mov
jb
jl
fimul
ret
mov
ror
icebp
pop
daa
dec
test
test
loopne
neg
jle
fcmovbe
ss
xchg
or
and
pop
mov
sub
xor
shl
and
jg
mov
push
and
xchg
int3
push
repnz
mov
clc
jno
mov
xor
sub
leave
jecxz
push
dec
outs
rol
adc
int
inc
aad
or
cmp
(bad)
sub
add
adc
pop
adc
(bad)
lock
dec
xor
or
test
cmc
aam
das
ficomp
pop
add
loopne
data16
jbe
(bad)
inc
ja
loope
and
(bad)
and
sbb
call
test
sahf
cwde
out
jp
je
cmc
mov
std
and
data16
sbb
rcl
repz
(bad)
xor
adc
and
das
cmp
cmps
lods
repnz
jb
or
cmp
fimul
and
(bad)
pusha
pop
and
xor
stos
add
sub
xchg
cmps
pusha
inc
push
int
push
fdivr
inc
repz
shl
adc
mov
cld
sub
dec
in
push
cmp
popa
jge
ret
lods
mov
cmp
imul
loop
cld
in
cwde
loop
push
ret
dec
pop
mov
mov
push
js
push
cmp
cmc
mov
inc
outs
neg
dec
mov
jns
xchg
mov
enter
mov
mov
lea
and
rol
js
sbb
imul
cdq
xchg
cdq
xor
or
pop
pop
inc
out
in
sub
jecxz
mov
dec
neg
inc
adc
or
add
retfw
int3
dec
or
iret
jge
ds
test
pop
rcr
jae
shr
inc
dec
xchg
test
hlt
gs
xlat
test
jl
aaa
nop
push
movs
aaa
js
inc
jg
jecxz
data16
mov
fdivr
in
xor
lods
xor
arpl
fisubr
shr
mov
out
ins
out
daa
jle
lods
jnp
xor
and
scas
dec
mov
test
and
sub
dec
lock
push
fisttp
pop
jbe
sub
arpl
fisub
cwde
test
mov
mov
push
test
push
or
push
(bad)
sbb
aam
or
(bad)
mov
(bad)
push
sahf
fstp
popa
mov
fisttp
add
ret
into
mov
add
push
xchg
sub
mov
cmps
cmp
jge
loope
aam
sahf
cmp
popf
in
sbb
aam
cmp
fnstcw
daa
lock
scas
push
mov
aas
pop
lds
jnp
jge
stos
test
cmc
stc
call
and
mov
retf
ds
xlat
shr
or
or
gs
mov
cld
push
mov
add
inc
jl
fwait
xchg
mov
repz
push
iret
sub
shl
rcr
sub
mov
iret
sub
adc
mov
icebp
and
mov
xor
mov
or
sbb
xlat
dec
ins
adc
outs
dec
popa
fcmovnbe
push
fcmovnu
or
mov
xchg
pop
mov
xlat
in
bound
mov
pop
and
in
add
or
adc
ja
cli
mov
mov
xchg
scas
leave
lea
push
retf
mov
mov
inc
cmps
icebp
ret
mov
jo
dec
mov
cld
fwait
jbe
pop
and
mov
inc
test
fstp
mov
pop
pop
push
jle
ins
fsubr
cmp
jge
and
shl
and
fld
push
push
pusha
fwait
or
jmp
rcr
dec
rcl
or
lds
inc
dec
call
cli
pop
jmp
pop
mov
xchg
jmp
mov
and
aad
fsubr
pop
jno
add
mov
fcom
mov
cli
xchg
ret
push
mov
out
dec
inc
xor
or
shl
jae
out
jae
mov
test
pop
stos
(bad)
inc
leave
(bad)
jno
dec
add
shr
ja
push
test
xor
addr16
mov
iret
xor
adc
sub
pushf
cwde
cli
inc
cmps
xor
in
jge
cld
pop
popf
mov
sub
sti
ret
push
adc
add
mov
and
fiadd
cmc
push
fsubr
lea
jg
inc
repz
cmp
or
sbb
adc
bnd
and
out
pop
nop
pop
xchg
xchg
js
ror
sub
adc
scas
int
das
mov
pop
int
adc
pop
pop
ins
ins
in
int3
es
fidiv
adc
pop
fcomi
lods
clc
mov
jle
adc
imul
stos
(bad)
je
lods
iret
retf
icebp
sub
test
loop
push
(bad)
cmps
mov
sub
jmp
out
adc
push
adc
leave
cmp
dec
sub
fild
push
ror
out
jmp
dec
mov
mov
jmp
(bad)
lea
adc
out
pop
jne
inc
mov
pop
and
ins
or
rcr
jle
cli
movs
inc
and
loop
adc
loope
xchg
and
jmp
and
ja
aaa
fdiv
mov
xchg
adc
out
xor
cld
jmp
ret
adc
stos
mov
sbb
cmps
inc
hlt
jg
add
and
(bad)
and
aad
mov
ss
je
jbe
icebp
jmp
adc
mov
and
xor
mov
imul
mov
stc
or
inc
mov
mul
xchg
add
jnp
fnstcw
push
inc
push
call
mov
bound
dec
xchg
sbb
dec
mov
mov
mov
inc
retf
xor
inc
xor
dec
add
mov
pop
inc
mov
out
cwde
and
adc
dec
cmps
sbb
or
mov
lods
test
xor
call
pop
(bad)
adc
cmps
sbb
xchg
xchg
ins
sub
xchg
xor
pop
jl
push
cmps
and
mov
jbe
lea
test
mov
(bad)
cmp
or
sbb
inc
push
cmp
sbb
mov
push
pop
(bad)
jmp
and
int
(bad)
cmps
adc
sbb
add
cmp
add
push
push
mov
int
cdq
pop
xchg
sbb
jmp
(bad)
rcr
arpl
call
ds
mov
jno
into
loope
movs
loop
push
loope
push
mov
call
dec
mov
cmp
fwait
mov
mov
sub
gs
(bad)
fcmovu
jg
pop
mov
dec
(bad)
aaa
dec
adc
leave
adc
shl
js
and
mov
pop
loopne
inc
mov
clc
out
ins
rcr
clc
pop
mov
mov
mov
or
mov
mov
les
(bad)
push
(bad)
dec
cld
sub
das
add
add
iret
or
dec
or
xor
ds
lea
aam
lds
jbe
in
test
js
out
mov
or
into
ds
push
(bad)
(bad)
sub
cld
add
inc
mov
std
in
mul
cmps
fidivr
mov
adc
retf
out
sbb
jnp
ror
das
mul
pop
rcl
sub
xchg
push
ins
pop
mov
in
xchg
pop
data16
and
dec
cli
std
test
retf
repnz
lods
cmp
scas
ins
ret
popf
outs
in
xchg
ret
mov
pop
mov
mov
hlt
clc
lds
or
push
pop
mov
cli
in
call
rcl
jle
mov
jl
sbb
and
in
push
pop
fwait
adc
and
dec
popf
leave
mov
dec
jge
jbe
stos
or
es
pop
mov
(bad)
call
inc
cmp
jecxz
imul
femms
retf
int
data16
cli
mov
dec
out
cmp
mov
in
push
sbb
and
inc
je
jb
pop
(bad)
fldcw
xchg
push
loop
in
outs
into
xchg
inc
xchg
mov
push
push
inc
or
dec
mov
mov
popa
sub
repz
in
cli
pop
dec
jmp
movs
sbb
shr
pop
or
pop
cdq
push
cdq
psrad
clc
inc
(bad)
mov
adc
push
repnz
outs
add
ds
les
cli
movs
neg
or
shl
mov
ret
dec
or
push
xor
cmp
sbb
xor
dec
mov
fdivr
or
push
(bad)
popf
push
or
inc
fs
inc
(bad)
fimul
or
ins
div
retf
sbb
inc
mov
addr16
xchg
call
adc
in
xlat
cdq
or
ja
push
xor
test
cmp
xor
and
adc
inc
loopne
mov
test
pop
nop
sbb
push
aaa
cld
push
xchg
adc
and
cli
cmps
stos
sub
or
rol
sbb
idiv
out
das
push
ret
mov
loopne
ret
hlt
or
push
ffree
xchg
jo
and
mov
pop
outs
rcr
pop
out
xchg
jne
neg
inc
dec
mov
push
leave
fild
add
sub
rcl
stc
or
(bad)
sar
mov
sub
push
das
aaa
mov
test
mov
mov
xor
ret
mov
movs
hlt
mov
jmp
mov
xor
xchg
sbb
ins
std
in
inc
inc
or
rol
and
aad
aad
or
mov
retf
pushf
pop
cmps
mov
xchg
jns
jl
test
xchg
mov
stc
sbb
mov
xchg
popa
hlt
pusha
xor
push
mov
sub
push
das
xchg
sahf
jnp
(bad)
pushf
cli
in
adc
sbb
ins
data16
mov
arpl
jmp
or
add
adc
fstp
lea
push
arpl
cmp
loope
out
(bad)
jle
retf
nop
daa
lods
pop
rol
dec
add
xor
xchg
mov
pop
pop
xor
retf
and
dec
test
sbb
push
mov
jo
cld
mov
mov
shld
call
rcl
dec
mov
xor
push
gs
aaa
push
test
sub
xchg
inc
fs
jnp
adc
mov
or
cmp
sub
xor
call
in
nop
mov
loop
pop
and
mov
adc
mov
xchg
test
int3
mov
stc
(bad)
mov
dec
mov
mov
sub
add
imul
aaa
pop
dec
mov
and
push
push
nop
add
shl
pop
(bad)
jns
inc
dec
gs
fiadd
xchg
jae
fcomp
movs
mov
jmp
out
cmps
jnp
adc
imul
es
push
shr
add
pop
ret
mov
jmp
adc
and
lahf
popf
fidivr
xchg
add
imul
ds
or
and
mov
and
(bad)
and
ficomp
(bad)
dec
rcr
or
pushf
fwait
jp
adc
add
call
xor
pop
jg
jle
and
out
mov
scas
sar
mov
stos
rol
or
push
or
movs
and
loop
push
push
xchg
jg
and
imul
icebp
and
xor
sub
leave
push
cli
ins
or
cmp
(bad)
sub
sar
push
and
enter
and
(bad)
jl
inc
mov
retf
das
ja
lods
sahf
cmp
push
sub
dec
inc
popa
(bad)
imul
mov
mul
(bad)
mov
inc
lds
xor
pusha
jne
mov
jmp
mov
movs
ins
pusha
fild
or
push
ins
sti
clc
outs
fld
imul
aas
or
popf
lds
pop
fdivr
js
shr
imul
mov
(bad)
and
push
mov
dec
js
add
sahf
mov
mov
ret
into
cmp
xor
xchg
mov
cmc
jmp
repnz
fwait
es
aas
inc
cs
mov
ficomp
int
sbb
sbb
scas
in
pusha
pop
lahf
les
fadd
add
jno
cmps
mov
mov
sbb
mov
adc
and
sti
repnz
pop
mov
xor
add
push
movs
daa
mov
fwait
out
inc
fisub
and
pop
mov
int3
inc
cmp
int3
into
push
mov
test
jbe
call
pop
into
push
and
clc
or
out
out
out
les
jnp
es
and
loopne
jb
add
dec
(bad)
mov
popf
and
jno
cmp
inc
mov
mov
mov
jbe
pusha
shl
loope
inc
es
out
pop
mov
jno
ds
cwde
out
inc
hlt
stc
xor
sub
lahf
add
dec
test
add
xor
push
jne
push
or
repnz
mov
push
push
or
and
cmp
cmp
push
and
ja
or
movs
in
inc
clc
sub
mov
xchg
out
xchg
adc
mov
outs
xchg
push
inc
ficomp
cmp
cmc
les
mov
mov
jecxz
or
jmp
ret
js
mov
out
add
add
push
inc
xor
xor
movs
push
ins
lods
(bad)
in
add
and
xchg
and
adc
ins
jns
ins
(bad)
loopne
outs
cwde
(bad)
jb
adc
mov
push
jp
pop
dec
into
push
jmp
inc
jno
inc
clc
(bad)
out
pop
xchg
jne
daa
lods
pop
cmp
daa
mov
mov
adc
jmp
jmp
push
inc
mov
mov
xchg
mov
dec
push
loope
mov
ins
rol
test
hlt
aad
push
sbb
ror
(bad)
push
cs
ror
jecxz
repz
add
jg
cmp
jg
outs
xchg
fist
in
add
and
ss
shl
adc
adc
js
jae
iret
aam
sub
(bad)
jae
lods
out
xchg
lods
aas
mov
(bad)
jge
push
imul
pop
clc
addr16
jmp
loop
out
out
in
adc
(bad)
mov
mov
sub
adc
xchg
iret
jl
cmp
aas
xchg
xor
popf
div
and
ins
das
popf
mov
jae
push
scas
xor
aad
or
push
or
xchg
lahf
cmp
mov
int
or
daa
add
pop
fidivr
mov
test
pop
adc
cmps
jns
inc
cvttps2pi
mov
pushf
sbb
cmc
inc
mov
stc
js
add
fwait
sar
mov
push
lods
fistp
loope
repnz
shl
sbb
leave
pop
cmp
inc
das
xor
jns
(bad)
test
mov
jl
pop
retf
cmp
fcmovbe
leave
test
popaw
add
cmp
xchg
pop
cli
sub
std
cmp
rcl
leave
sub
fsubr
pop
adc
pop
sti
sbb
mov
movs
xor
dec
xor
inc
fldcw
xor
or
adc
adc
mov
loop
sbb
lods
xchg
jecxz
cmps
xchg
(bad)
sub
ins
add
mov
stc
(bad)
je
add
xchg
push
div
or
test
movs
cld
not
xor
cdq
bound
lock
fcmovbe
daa
dec
int3
loop
push
sbb
int3
jmp
sub
fs
loope
xchg
mov
out
stos
test
jbe
pop
xor
daa
lods
in
sbb
inc
cld
xor
shl
push
pop
pop
not
pop
sub
fwait
clc
inc
pop
aas
les
push
in
adc
push
loopne
icebp
jp
jl
test
mov
jmp
fdiv
pop
js
mov
dec
inc
loopne
mov
cmp
iret
call
dec
inc
aaa
xchg
aaa
and
push
jmp
aaa
ds
shl
mov
loopne
mov
popf
popa
push
cmp
mov
int
daa
call
das
stc
pushf
add
cld
rcr
imul
sbb
lds
test
cs
int3
shl
jb
cs
add
das
pusha
dec
add
neg
fwait
inc
je
sahf
inc
sub
aam
sbb
inc
lea
outs
(bad)
mov
xchg
sahf
xchg
mov
xchg
je
and
push
mov
dec
into
dec
js
push
xchg
fidivr
out
xor
jo
fsub
xchg
xor
aaa
push
iret
xchg
repz
mov
leave
cld
jp
mov
sbb
add
lds
(bad)
mov
mov
loop
xchg
dec
mov
popa
dec
mov
jb
pop
mov
mov
out
xchg
sub
cli
adc
push
enter
mov
cli
xor
pop
mov
inc
mov
adc
loop
ret
in
lods
cmps
rep
test
outs
ds
les
mov
mov
adc
add
loop
not
inc
lods
adc
adc
inc
mov
scas
add
and
mov
cmps
ds
jne
pop
nop
mov
data16
retf
into
push
ins
pusha
fsubr
sbb
xor
xor
dec
bound
mov
in
repz
aas
mov
inc
add
shr
gs
ins
cmps
(bad)
jae
cmp
out
xor
sar
stos
cwde
inc
mov
xchg
test
mov
cli
(bad)
adc
clc
and
ja
pop
adc
mov
dec
push
mov
clc
dec
mov
daa
jae
gs
xor
outs
and
adc
retf
iret
pop
xor
(bad)
fidiv
popf
fwait
call
sbb
or
clc
mov
cmp
pusha
aaa
icebp
cmp
repnz
cmp
rcr
test
fisttp
or
push
out
fadd
mov
pop
cmp
stos
fdivr
or
cmp
bound
jmp
mov
cmps
pusha
ror
cmp
cmps
test
adc
ret
add
inc
fild
sbb
adc
cmp
pushf
(bad)
out
mov
pop
imul
imul
xor
and
mov
imul
mov
jne
xor
(bad)
cli
lock
cli
das
cmc
bound
fucomip
fadd
popw
bnd
mov
adc
mov
(bad)
pop
xor
and
mov
ds
fild
adc
and
dec
mov
rol
(bad)
mov
pusha
rcr
pop
cmps
inc
push
adc
(bad)
loopne
lahf
lea
cmps
mov
or
(bad)
fild
fucomp
xchg
retf
xchg
mov
or
arpl
cdq
cmp
into
xchg
das
mov
scas
daa
mov
mov
jmp
fistp
iret
sbb
outs
shr
pop
dec
std
or
aam
scas
push
cmp
and
bound
fs
stos
pop
or
aaa
(bad)
repnz
cmp
add
cmp
stos
jmp
add
cmc
mov
or
repnz
cmp
and
das
movs
lods
das
xor
push
dec
and
xchg
push
ror
cmp
push
jns
xchg
push
mov
jns
dec
std
je
mov
mov
push
sub
aam
test
adc
push
idiv
mov
ret
push
xlat
jle
pusha
sbb
mov
nop
mov
or
(bad)
aad
in
dec
push
jecxz
add
jmp
push
xlat
jns
cmp
cdq
(bad)
and
outs
xor
xlat
sbb
xor
mov
in
cdq
pop
push
xor
arpl
ja
clc
enter
dec
mov
pop
aas
mov
mov
daa
not
add
retf
leave
xor
out
xchg
cmp
push
dec
jnp
dec
repz
pop
cmp
ret
fsub
lock
mov
cmp
mov
test
mov
cwde
xor
mov
sbb
int
add
das
lods
xchg
inc
mov
mov
out
dec
mov
pop
dec
mov
adc
popa
fsub
add
fimul
mov
iret
int
test
cmp
rcr
clc
mov
xchg
jp
pop
sti
xor
adc
adc
push
adc
dec
pop
mov
ja
push
inc
jmp
out
dec
or
mov
fstp
push
lock
xchg
mov
cmp
push
dec
sbb
sub
pushf
sbb
loopne
aad
mov
mov
stos
je
mov
bswap
push
push
inc
ret
mov
loop
scas
das
add
jl
test
loop
xor
loopne
push
cmp
aas
fdiv
mov
mov
xor
(bad)
ins
repnz
stos
fisub
xor
pop
retf
push
dec
inc
shl
aas
outs
test
pop
mov
mov
mov
int3
jnp
dec
pop
sub
lahf
sbb
mov
inc
gs
dec
popf
aaa
(bad)
in
push
es
imul
dec
or
stos
xchg
in
ds
inc
sti
data16
cmp
dec
test
shr
cmc
(bad)
fcom
mov
std
or
and
retf
(bad)
xor
call
adc
sub
ds
mov
jl
push
outs
jmp
fistp
dec
sar
aam
sub
addr16
dec
add
sbb
push
sbb
jbe
cmps
ss
dec
sar
add
and
sub
push
sbb
xchg
neg
ss
neg
fst
(bad)
call
sbb
pushf
adc
out
jns
(bad)
repz
push
jne
xlat
pop
ins
arpl
lock
push
push
in
test
int3
sub
dec
retf
push
dec
jb
jne
popf
mov
fucomp
mov
mov
xchg
xor
mov
xchg
std
jnp
push
dec
sub
adc
imul
push
mov
shl
scas
shl
and
imul
push
add
mov
push
cmp
jb
inc
in
dec
aam
push
mov
cmp
call
ficom
cmp
arpl
std
mov
rol
mov
mov
or
mov
jbe
bnd
stos
clc
and
jbe
mov
mov
dec
sub
jns
clc
mov
imul
inc
sbb
and
sub
jns
pushf
mov
or
sub
dec
(bad)
jne
mov
adc
int
outs
mov
xchg
xchg
add
add
repnz
adc
cmp
pop
jne
adc
jb
fmul
adc
aas
push
xor
inc
out
outs
cmp
jnp
mov
xor
push
imul
ds
out
repnz
in
adc
ret
cmc
inc
or
cmc
(bad)
std
(bad)
ja
arpl
std
push
fs
ficom
mov
xchg
aas
loop
add
pop
push
fwait
(bad)
mov
dec
fidiv
mov
xchg
mov
fsubr
dec
fwait
lds
cwde
(bad)
loopne
sete
cli
out
clc
arpl
sbb
(bad)
int
jl
adc
cmp
mov
sbb
test
adc
data16
sub
cld
lahf
mov
fsubr
fs
retf
les
int
sub
jp
lea
xlat
fsubp
fistp
xchg
mov
sahf
in
cmp
fcomi
out
in
sub
sti
mov
xchg
pop
nop
pop
pop
neg
pusha
je
fs
add
jg
push
outs
loopne
dec
(bad)
jb
jno
jecxz
push
pop
or
pop
lock
pop
add
or
sbb
jne
dec
sbb
and
(bad)
sti
adc
adc
mov
push
xor
pop
bound
sub
retf
adc
push
loopne
mov
lea
lock
sub
pop
in
std
ret
stos
cmp
pop
and
adc
sbb
lods
push
hlt
mov
inc
lds
shl
adc
imul
jle
fnsave
add
jmp
(bad)
ja
repz
lea
pop
shl
bnd
out
loope
mov
enter
mov
dec
ror
out
xor
sub
lahf
(bad)
aad
in
sub
rcl
aad
aas
push
xchg
jp
cmp
mov
ds
aas
jle
xor
adc
shl
popf
sub
xor
jne
stos
es
push
mov
cwde
stos
inc
jmp
(bad)
cmp
pop
out
cli
(bad)
cld
pop
shr
or
or
mov
push
sbb
sub
shl
sub
fpatan
inc
xchg
mov
and
jg
jo
cmps
sbb
mov
in
cmp
data16
cmp
sti
jg
daa
inc
stos
inc
xchg
leave
pop
mov
bound
xchg
cmps
retf
xor
add
scas
sbb
pushf
xlat
jmp
gs
lahf
and
jmp
adc
sub
mov
mov
mov
scas
mov
inc
fimul
mov
pop
popf
xor
popf
push
mov
sbb
(bad)
push
retf
icebp
pop
cmp
repz
add
fcomip
popa
push
push
sbb
imul
fstp
in
in
adc
mov
dec
outs
pop
dec
cdq
ja
call
retf
ret
and
inc
xor
fcmovbe
mov
push
in
xor
cmps
shl
loope
adc
cmp
push
xchg
mov
popf
and
sar
sub
xchg
pop
ret
(bad)
sub
scas
loope
push
out
jmp
stos
xlat
push
sbb
mov
cmp
inc
fcom
sbb
out
lods
jmp
stos
enter
jno
mov
leave
jmp
xchg
jno
out
or
push
pop
inc
push
dec
cmp
dec
jl
cmp
inc
movs
(bad)
int
rcl
stos
fcomp
cmc
scas
(bad)
mov
stos
sti
ret
xor
ja
jle
retf
jno
sbb
push
and
shl
pop
int
mov
mov
xlat
stc
popa
(bad)
mov
je
mov
popf
add
jg
fisttp
inc
arpl
cmp
dec
xlat
dec
sbb
(bad)
sbb
clc
xchg
cdq
push
retf
fisttp
mov
bound
(bad)
rol
xor
add
mov
pop
cmp
retf
sti
ficom
fisubr
shl
aas
add
pop
out
mov
pinsrw
into
and
in
maskmovq
idiv
sub
scas
pop
inc
add
ds
push
mov
dec
dec
sbb
js
push
pop
jmp
fcmove
adc
xchg
adc
sbb
(bad)
mov
add
out
jo
loope
call
dec
imul
mov
and
cmp
cld
adc
lock
mov
xchg
int3
fstp
loopne
inc
adc
cmp
xor
cwde
hlt
pop
sbb
(bad)
repnz
icebp
adc
adc
fcomip
into
enter
xchg
mov
sub
add
and
dec
sbb
loope
mov
call
mov
mov
dec
xor
cmp
push
popa
push
call
aad
int3
adc
out
mov
dec
mov
push
sub
hlt
cmp
or
add
mov
lds
mov
add
push
into
dec
xor
mov
jns
cld
and
jne
mov
cmp
ret
and
leave
push
pop
jns
and
adc
adc
add
in
fdivr
dec
test
or
(bad)
xor
cdq
add
jo
push
gs
cmps
pop
arpl
or
pop
dec
adc
dec
cmp
popf
add
retf
adc
inc
mov
in
sbb
stos
push
sbb
lods
out
xchg
les
movs
lahf
xchg
mov
sar
(bad)
xchg
imul
cmp
mov
sub
add
jns
dec
xchg
clc
pusha
mov
and
or
nop
mov
xchg
(bad)
int
test
mov
pop
std
popf
fs
sub
push
add
push
push
push
pop
lahf
popa
gs
cdq
retf
sbb
jmp
jp
mov
add
gs
int
into
enter
nop
cwde
lea
stc
les
div
das
(bad)
aaa
mov
cdq
cmps
and
rcl
les
inc
xchg
pop
push
sbb
push
xor
jns
adc
cmovl
pop
dec
mov
push
and
aad
pop
push
fld
inc
cmp
pop
mov
cs
jnp
xchg
pop
fistp
push
(bad)
aad
pop
scas
xchg
mov
stc
adc
(bad)
or
into
mov
dec
mov
cdq
retf
cmps
inc
bound
mov
mov
fsubr
gs
xchg
dec
in
sahf
jo
jmp
shl
add
lock
dec
cs
data16
fld
imul
jmp
out
xlat
int3
adc
into
aaa
cmp
sar
xor
jns
pop
inc
push
pop
sbb
mov
pop
mov
push
mov
cdq
fwait
push
xchg
lahf
or
or
retf
pop
and
ret
ins
push
in
pop
xor
pop
outs
cwde
cli
test
mov
test
cdq
pop
cmp
pop
hlt
jp
outs
adc
jmp
retf
cwde
(bad)
xchg
adc
add
test
xchg
or
loope
jl
jns
push
retf
mov
rcr
dec
gs
stc
mov
mov
mov
mov
cwde
fst
mov
addr16
cmp
pusha
lods
ret
xor
mov
das
mov
sub
push
aam
inc
jno
sbb
pop
pop
out
mov
sub
sbb
jmp
call
jno
adc
data16
sbb
out
sub
fld
call
pop
inc
into
xor
pop
(bad)
jo
or
fiadd
cmps
xor
nop
add
dec
xchg
jge
mov
repz
leave
cmps
xor
xchg
mov
and
ss
xor
add
pop
adc
push
pushf
xchg
xchg
retf
movs
scas
sub
cmp
scas
pop
mov
add
mov
aad
fs
adc
call
stos
jno
xchg
xchg
sub
sar
pusha
fcmovb
test
mov
addr16
shr
fs
jge
jp
(bad)
ss
pop
mov
dec
pop
stos
inc
dec
cs
inc
inc
pop
retf
pop
shl
inc
pop
sar
mov
test
retf
add
outs
mov
in
mov
ret
jae
(bad)
sbb
jl
cld
mov
nop
add
mov
shr
pop
adc
inc
mov
stos
cs
cmc
jmp
or
mov
gs
adc
adc
jno
mov
adc
mov
push
fild
(bad)
in
mov
xchg
xchg
gs
mov
dec
retf
data16
fwait
stc
jne
call
pop
mov
mov
cmps
js
cmc
lds
test
daa
mov
fistp
movs
sahf
dec
shl
pusha
jne
std
jns
jns
(bad)
fild
add
arpl
ins
xor
(bad)
xchg
ja
adc
call
adc
mov
fsubr
out
sub
retf
mov
pop
gs
mov
xor
mov
(bad)
xchg
xor
cwde
mov
push
adc
jmp
xchg
inc
and
push
xor
sbb
popf
stos
sub
scas
push
dec
pop
jmp
xchg
aam
inc
imul
sub
movs
ins
inc
fsubr
xchg
pop
push
or
cmps
comiss
adc
inc
adc
movs
icebp
scas
xchg
add
rcl
mov
mov
xor
(bad)
sbb
popf
jmp
das
call
mov
pushf
retf
pop
iret
add
adc
jns
enter
mov
jle
fistp
mov
dec
pusha
retf
fidivr
shl
push
lahf
pop
jbe
ins
lock
inc
sbb
ds
pop
push
sub
or
inc
xlat
sbb
dec
popf
adc
and
ds
pushf
loopne
fs
aaa
lea
cmp
mov
enter
or
fst
and
cmps
mov
inc
enter
icebp
pop
stc
jbe
dec
aaa
ret
xlat
es
stos
pop
je
add
std
mov
cs
jmp
mov
fdiv
sbb
mov
int3
loope
(bad)
pop
xor
push
cmp
daa
cli
dec
jp
inc
mov
sbb
cmc
mov
pop
sub
lds
xchg
in
repz
mov
pop
div
outs
push
inc
dec
scas
jmp
push
ror
inc
xchg
xchg
jge
jecxz
jo
adc
jne
(bad)
into
dec
mov
dec
sahf
sub
adc
push
sub
lea
test
fldcw
or
adc
imul
dec
xchg
cwde
clc
push
or
inc
iret
cmp
enter
inc
mov
imul
or
cmp
test
cwde
jns
pushf
add
sub
call
jb
fiadd
xor
inc
pop
ins
in
mov
xchg
mov
jmp
outs
fsub
loope
gs
int3
outs
aad
out
loop
push
popa
mov
adc
push
lods
stc
dec
xor
mov
mov
movs
test
push
icebp
hlt
dec
ret
add
(bad)
mov
sbb
clc
aam
int3
jne
cld
inc
xor
adc
loop
lea
add
sbb
stc
xchg
lods
sub
inc
cmp
push
std
retf
adc
retf
sbb
cmp
inc
pop
jmp
enter
aam
test
aaa
xchg
cmp
mov
shl
push
cmps
retf
rcl
inc
or
popf
xchg
loope
xchg
fst
jmp
and
gs
mov
leave
mov
jno
fs
sbb
stos
aad
or
jnp
inc
and
in
popf
popf
add
std
xchg
and
mov
cmps
xchg
cdq
sub
sti
sti
mov
adc
cmc
out
imul
xor
mov
out
aaa
adc
pop
aaa
aam
mov
xchg
les
push
xchg
in
jns
cmps
push
and
jmp
and
mov
call
push
dec
out
jb
xchg
test
ss
int3
mov
push
or
icebp
ins
jmp
aaa
data16
rol
and
and
xchg
dec
mov
out
adc
es
pop
les
lds
test
add
cmovns
shl
das
fimul
cld
imul
mov
xchg
jmp
popf
xchg
sub
xchg
(bad)
jg
jne
packsswb
pop
pop
xlat
mov
xor
adc
fsubr
lahf
es
repnz
les
and
mov
and
add
push
daa
repz
(bad)
xor
sbb
stos
cdq
xor
mov
test
lock
or
mov
(bad)
jp
cmps
sub
popa
mov
cdq
jle
and
sbb
cmp
xchg
out
push
int3
push
lods
jle
icebp
pop
outs
rol
cwde
popf
ss
push
add
push
mov
mov
daa
pop
rcl
sub
and
fwait
mov
jg
sahf
xor
ins
fisttp
ins
pusha
xchg
dec
js
adc
je
imul
shl
push
inc
sub
mov
push
ret
retf
and
(bad)
into
leave
sti
iret
add
xchg
mov
loope
loop
jecxz
sub
call
int3
push
jo
lds
jnp
iret
xor
shr
dec
repz
arpl
dec
dec
cmps
test
cmp
clc
lods
adc
sbb
mov
stos
cmp
sub
test
jecxz
mov
dec
ins
aas
in
dec
add
test
cmc
cmp
sub
xchg
jno
push
pop
push
scas
push
outs
mov
jb
clc
xor
add
pop
fs
xor
out
jge
sub
pop
pop
retf
push
(bad)
hlt
push
sub
mov
xchg
test
cs
xor
loope
scas
cmps
inc
sbb
das
cmp
jp
(bad)
and
sub
dec
mov
push
fst
pop
cmp
mov
mov
int
call
xchg
ins
push
out
mov
and
xor
push
pop
dec
es
sub
add
adc
in
xor
retf
push
shl
add
mov
rcr
movs
jg
adc
xor
leave
cmc
ret
cmps
inc
sub
add
cs
cs
adc
mov
pop
pop
ds
mov
addr16
and
and
pop
and
cmps
pop
mov
loope
mov
jg
cli
test
sub
sub
in
popf
mov
bound
sub
pop
ds
jle
pop
push
add
test
xchg
adc
fld
mov
test
xchg
repz
std
mov
pusha
sbb
and
je
sbb
pop
pop
test
lock
mov
ins
lea
cli
sahf
jmp
add
popa
je
add
jb
in
out
add
call
sbb
(bad)
adc
xchg
mov
xchg
rcr
lock
sub
push
int
mov
jmp
mov
(bad)
mov
mov
shr
cmps
imul
mov
mov
mov
adc
cmp
push
jno
push
inc
cmps
adc
cli
lahf
icebp
repnz
lods
xchg
scas
repz
data16
jecxz
std
(bad)
scas
push
stc
in
pop
mov
in
adc
cli
test
dec
aad
add
shl
loopne
mov
jge
jl
inc
addr16
inc
pop
push
call
jns
sub
pop
push
jge
push
call
(bad)
gs
push
sbb
push
dec
pop
jo
jno
out
push
cmp
test
lock
sahf
daa
sub
lods
xor
cli
push
ficomp
ficomp
cwde
mov
gs
dec
iret
sbb
cmc
test
jge
fsubp
fsubr
ficomp
outs
cmp
sub
and
adc
sub
rcr
clc
cmps
jns
pop
enter
cmps
outs
or
repz
not
fldln2
hlt
and
and
cmps
adc
jmp
xor
imul
stos
cmp
inc
xlat
xor
js
mov
push
ins
mov
call
test
or
sub
rol
sub
mov
push
mov
mov
lds
out
pop
or
xor
push
mov
add
outs
repnz
dec
and
xor
pop
fdivr
leave
dec
add
push
(bad)
in
cmp
rcl
loope
adc
aam
loop
add
jb
fld
in
(bad)
and
inc
js
mov
sbb
cli
or
movs
inc
inc
into
loope
repnz
sbb
mov
leave
add
pop
fiadd
dec
rol
ja
test
aam
push
mov
adc
outs
cmp
cld
outs
xchg
test
idiv
mov
retf
in
arpl
add
call
mov
imul
mov
rcl
dec
in
and
pop
ja
sahf
bound
repz
scas
jl
add
dec
jecxz
pop
in
adc
outs
jl
rcr
out
retf
jmp
adc
mov
cdq
add
addr16
xchg
cmps
aas
clc
jmp
stos
aam
pop
mov
xchg
xor
ss
std
sahf
add
cmp
mov
imul
int
movs
stos
or
sbb
pop
sub
add
sub
std
mov
push
div
add
jbe
sbb
pop
jae
push
push
lods
ds
aaa
call
stc
es
sbb
jne
lahf
fisub
sub
bound
cmp
inc
jbe
scas
adc
inc
mov
mov
es
push
sti
scas
xchg
xchg
sbb
test
ins
imul
jb
push
call
or
push
(bad)
mov
mov
call
(bad)
cmps
nop
scas
or
cmp
clc
and
mov
jle
lahf
retf
cwde
push
cmps
jb
push
adc
and
mov
icebp
sbb
and
and
imul
mov
or
xor
es
std
cdq
enter
scas
mov
dec
int3
scas
cld
add
mov
jo
or
cmp
cld
aam
fadd
mov
jns
push
jmp
xchg
scas
pop
adc
adc
scas
leave
in
mov
push
mov
cmc
pop
push
das
lods
jb
mov
stc
jmp
cmp
jae
lahf
test
pop
xor
mov
(bad)
dec
and
cmps
mov
jmp
ficom
xor
cmps
je
cdq
inc
xchg
inc
mov
ficomp
pop
ins
(bad)
jecxz
xchg
stos
das
icebp
or
test
mov
cwde
inc
mov
(bad)
cmp
fstp
jne
or
fisubr
cmp
scas
iret
es
sbb
sbb
repz
xor
mov
dec
(bad)
data16
sub
dec
pop
fst
sbb
test
add
scas
in
das
mov
jne
lahf
mov
xchg
mov
fmul
xchg
xchg
movs
test
ret
int3
test
push
mov
dec
dec
out
push
icebp
aam
retf
outs
test
mov
sbb
fwait
push
cli
aad
mov
dec
cmp
std
repnz
loope
or
popa
movs
mov
adc
mov
stc
shl
retf
sub
movs
xchg
out
std
ret
(bad)
jnp
mov
in
lea
xor
mov
jg
fs
aam
in
clc
jle
icebp
add
cli
pop
loope
or
xchg
mov
scas
mov
jmp
std
or
fstp
pop
mov
ins
movs
xchg
mov
retf
fidiv
adc
pop
ret
out
jmp
mov
push
xchg
outs
or
jno
les
add
jmp
sub
fwait
jno
pop
xlat
adc
(bad)
dec
mov
mov
hlt
jge
in
sub
in
jo
mov
rcl
std
gs
js
nop
or
xchg
outs
xor
pop
(bad)
pusha
data16
mov
push
jnp
jnp
pusha
xor
cwde
cdq
push
nop
nop
add
nop
dec
sar
cmp
cmp
fisub
jp
sub
sahf
cmp
dec
and
fimul
cmp
dec
(bad)
out
sbb
int
xor
sahf
mov
xor
fistp
(bad)
push
sbb
call
fs
cs
out
fs
out
daa
fisub
jle
test
xchg
sub
sub
sub
adc
mov
test
test
push
loop
cmp
and
fld
imul
jp
pop
je
mov
ins
scas
call
dec
(bad)
and
div
das
fwait
dec
jle
aaa
adc
sub
retf
int
in
inc
dec
dec
pusha
pop
movs
aaa
sub
mov
ins
rcl
or
dec
and
dec
test
pop
jne
in
scas
fcom
loop
push
test
fistp
mov
mov
sub
pop
cmp
mov
sar
in
out
add
outs
adc
cmp
or
jl
arpl
xchg
addr16
popa
das
cmps
and
xor
mov
push
test
pusha
inc
mov
int
inc
std
mov
xor
or
and
out
dec
and
mov
push
fs
or
cmp
lods
test
cmp
add
mov
cmps
lock
mov
inc
add
hlt
pop
xor
push
retf
lea
sub
push
mov
push
inc
mov
pop
and
lods
mul
mov
(bad)
div
outs
push
jmp
mov
scas
xor
shr
cmp
jo
jbe
ficom
arpl
mul
stos
cdq
shl
add
jne
not
mov
xchg
xor
jnp
inc
mov
adc
xor
cmp
add
fisubr
pop
adc
in
cmp
pop
push
mov
xchg
loope
gs
sbb
in
fcomp
pop
and
dec
mov
dec
bound
fidivr
(bad)
out
(bad)
push
push
jecxz
jno
cmp
shr
and
aad
popa
jnp
sbb
dec
lods
stos
mov
cmp
pop
les
iret
in
(bad)
test
push
add
jl
push
cdq
ss
stos
cmp
and
jg
cmp
shl
dec
nop
mov
jnp
sbb
cmp
div
dec
js
or
sbb
data16
lds
mov
dec
lock
sub
(bad)
shl
push
inc
cmc
adc
in
push
sub
pop
loop
jp
add
dec
mov
or
adc
pop
ret
cmp
ss
add
test
jge
jle
or
ins
repz
movs
cmp
(bad)
retf
fsub
movs
sub
mov
sub
in
xor
add
(bad)
iret
pop
cs
in
call
mov
mov
dec
adc
ja
add
pop
je
pop
mov
popf
push
dec
neg
(bad)
adc
cmp
xchg
lahf
dec
call
das
push
rcr
arpl
adc
inc
shl
xchg
pop
aad
cld
test
xchg
and
push
fwait
mov
and
mov
jl
pop
lahf
scas
retf
inc
mov
fs
les
test
inc
inc
stos
xchg
packuswb
jmp
xor
mov
arpl
hlt
push
fldz
xchg
ret
icebp
popa
les
xor
mov
call
sub
out
mov
outs
fldenv
adc
ds
retf
pop
arpl
inc
dec
adc
xchg
dec
mov
pusha
iret
iret
out
or
dec
dec
sbb
pop
xchg
mov
mov
dec
aam
scas
inc
das
gs
mov
leave
sub
(bad)
pop
mov
jmp
pop
je
xchg
jb
jbe
popf
gs
mov
test
add
jne
mov
dec
out
stos
retf
cli
push
scas
ins
mov
pop
popf
push
ror
mov
pop
test
dec
inc
or
in
mov
lods
jge
lods
adc
and
xor
pop
push
inc
jno
inc
push
add
rcl
xchg
xchg
mov
xchg
pop
test
into
daa
cmp
sbb
pop
push
dec
cmp
int3
mov
call
inc
test
cli
sti
or
inc
push
sbb
pop
push
push
or
xchg
mov
add
jmp
and
fldenv
sar
inc
adc
neg
xor
dec
test
call
mov
sub
sbb
ja
ret
mov
jno
into
or
pusha
xchg
cmp
ja
and
pop
ja
pop
add
std
inc
pop
xchg
imul
and
hlt
(bad)
mov
daa
hlt
sbb
jg
sbb
cmp
or
mov
out
sub
inc
jno
les
sbb
or
pop
inc
mov
inc
mov
jo
mov
div
rcr
(bad)
movs
inc
or
jbe
out
and
nop
push
sbb
cmps
xor
(bad)
scas
js
push
cmc
jle
stos
push
mov
shl
mov
jae
imul
imul
test
add
xor
sbb
leave
ret
shr
call
or
mov
xor
(bad)
(bad)
dec
jae
jns
or
push
lods
jl
pop
cmp
mov
fwait
stos
mov
stos
mov
sub
outs
inc
dec
and
cmps
add
xor
rcr
adc
lods
es
mov
call
sbb
(bad)
pushf
dec
jge
out
fs
hlt
ror
add
les
es
jmp
imul
sbb
es
cmp
push
sub
outs
fld
push
jno
(bad)
mov
leave
inc
rol
(bad)
fwait
das
addr16
add
push
mov
jl
cld
lds
push
std
ret
add
dec
stos
dec
xor
mov
xchg
jle
popa
mov
cwde
mov
jae
cwde
sub
aaa
test
pop
jmp
lds
push
aad
sub
mov
aaa
inc
mov
inc
xchg
pxor
dec
xchg
and
add
inc
jl
mov
mov
sub
gs
int
cmp
pop
int3
sub
add
inc
cmp
jb
bound
dec
mov
ins
xor
and
repnz
sbb
mov
sbb
cmc
cmp
in
dec
sub
fild
jns
call
test
sbb
adc
fimul
mov
jg
hlt
jp
push
push
sbb
adc
shl
data16
sub
adc
dec
inc
dec
icebp
mov
fstp
push
sbb
adc
or
(bad)
je
mov
pop
xor
sbb
repz
push
cwde
pop
push
stos
add
loop
mov
jo
and
call
cmp
add
push
das
jns
and
mov
jge
adc
lahf
dec
jge
clc
shl
mov
cmp
shr
dec
out
daa
mov
xchg
imul
sub
scas
xor
fs
loope
stos
jmp
dec
dec
(bad)
repz
inc
test
jmp
jns
adc
pop
test
std
in
mov
scas
ja
(bad)
sub
jg
dec
(bad)
mov
int3
mov
daa
out
mov
adc
add
or
push
bound
inc
fbstp
mov
(bad)
div
stc
(bad)
cld
sub
mov
(bad)
mov
fwait
xor
pop
pop
inc
push
out
adc
outs
fimul
inc
js
data16
lea
packuswb
out
jae
dec
mov
xchg
add
int
out
push
jb
mov
neg
and
mov
imul
test
jae
mov
xor
cmp
mov
jmp
jno
or
jle
mov
or
fmul
aad
movs
mov
push
dec
jecxz
ret
loop
movs
(bad)
mov
or
mov
mov
and
arpl
outs
sbb
loopne
sbb
loop
clc
mov
icebp
xor
repnz
fsubr
pop
cmc
mov
inc
mov
jge
mov
inc
xchg
outs
dec
jecxz
movs
addr16
and
xor
mov
jbe
adc
cld
inc
dec
mov
xchg
dec
or
mov
mov
ins
or
je
js
jb
xor
or
inc
xchg
std
lods
sub
push
fistp
sbb
jnp
cmp
sub
mov
nop
push
pop
jl
push
fisubr
leave
xchg
cmp
(bad)
add
cmp
call
push
or
mov
stos
aas
into
cmp
sub
loope
push
pop
test
sub
add
jns
push
lds
jecxz
mov
xor
rcl
adc
enter
inc
add
mov
mov
adc
(bad)
push
mov
nop
mov
pop
leave
(bad)
ins
jnp
sub
sbb
mov
cmps
xlat
fidiv
mov
sar
pop
out
add
int3
sub
mov
cmc
ficom
jb
mov
fwait
sbb
push
sahf
adc
push
stos
cmp
jg
cmp
jecxz
test
fimul
out
rcr
mov
adc
lds
jbe
scas
je
mov
retf
jbe
mul
retf
adc
add
sbb
sahf
xchg
cs
shr
ror
push
lods
in
xor
or
sub
scas
nop
fisttp
adc
or
cld
adc
mov
pop
icebp
push
jns
mov
cs
xchg
(bad)
jmp
ins
mov
out
sub
sbb
sub
cmp
add
sub
sub
(bad)
mov
xchg
xchg
out
pop
repz
or
into
xor
add
sbb
sar
add
sub
adc
push
mov
mov
cmp
push
nop
jmp
jmp
leave
cmp
push
jecxz
xor
iret
inc
xchg
popa
or
cwde
adc
(bad)
jno
sar
or
jge
test
mov
sbb
dec
adc
shl
jns
adc
aam
mov
ffree
push
cld
into
shl
add
dec
shl
sub
push
int
adc
add
adc
arpl
in
sub
inc
xchg
test
sub
out
hlt
dec
pop
pop
or
dec
lock
fs
jns
cmp
lock
mov
or
ror
xor
ret
mov
dec
shr
xor
enter
pop
dec
mov
pushf
les
enter
mov
jmp
mov
xchg
(bad)
push
cmp
add
add
retf
mov
jnp
mov
je
mov
ds
push
test
pop
jle
xor
cmp
sbb
mov
cmp
jo
cwde
and
(bad)
jg
shl
adc
cmp
icebp
jbe
cld
call
out
loop
fld
lock
sub
xchg
pop
ins
xchg
inc
cli
xchg
push
mov
and
jg
or
popa
cmps
ins
test
mov
es
cmp
jle
adc
daa
xor
dec
test
pop
push
mov
in
les
fistp
inc
sti
lea
repz
add
adc
imul
test
loope
aas
pop
push
popa
fs
jb
add
xlat
mov
gs
movs
push
inc
mov
xchg
arpl
int
inc
scas
jb
cmp
hlt
inc
mov
in
(bad)
rol
push
es
enter
bound
repnz
es
int3
and
cmps
cwde
push
ss
xchg
popf
xlat
outs
sti
loop
lock
push
jp
dec
push
dec
jmp
push
or
or
xchg
fdiv
xchg
add
test
mov
jge
inc
loop
sub
out
int
and
in
mov
cmp
loop
daa
adc
inc
shl
rol
cmp
ins
dec
inc
jg
and
jb
ss
xchg
loope
repz
(bad)
rcr
push
das
rcl
cmp
mov
push
lods
sub
adc
push
scas
xor
mov
and
addr16
mov
sti
xor
pop
cmp
mov
imul
inc
movs
mov
in
cli
in
sub
out
jl
inc
dec
cwde
or
jns
cmps
pop
sahf
stc
add
dec
(bad)
scas
xor
movs
mov
inc
and
jb
push
call
cmp
xor
mov
cmp
or
imul
mul
ja
push
std
or
mov
inc
push
sub
and
mov
pop
aad
push
fisttp
das
inc
or
xor
and
cmp
pinsrw
inc
mov
pusha
fisttp
dec
imul
jo
fidiv
add
in
mov
push
fstp
pop
mov
test
pusha
inc
cmp
jl
push
into
rol
and
sub
out
(bad)
ret
add
xor
stos
call
aad
call
cmc
into
push
icebp
sbb
push
mov
xor
gs
jae
stos
sbb
jle
hlt
jnp
xor
test
dec
sti
ja
xchg
aad
mov
rcl
das
push
push
push
sbb
bound
add
push
dec
sar
mov
(bad)
leave
nop
push
mov
int3
cmps
mov
call
out
pushf
mov
mov
in
test
stos
dec
push
(bad)
cli
cmps
test
jmp
nop
inc
std
adc
add
repnz
lods
mov
jo
ret
and
repz
and
dec
jae
cmp
std
adc
sahf
dec
pop
out
cld
je
mov
sbb
cmc
xchg
or
aam
daa
cmps
mov
inc
inc
fstp
mov
dec
jl
cmps
into
iretw
pushf
mov
jb
inc
arpl
clc
push
shl
mov
jns
pusha
cmps
jge
xchg
ret
test
ss
imul
and
outs
lahf
mov
push
mov
adc
stc
add
repz
repz
sbb
(bad)
neg
cli
inc
and
je
rcr
mov
shl
xor
pop
fisttp
push
add
mov
pop
out
xlat
xchg
pop
inc
sub
sub
inc
mov
xor
xchg
scas
(bad)
test
or
fnsave
sub
and
jno
pop
or
mov
xchg
cwde
sbb
jl
add
rcl
(bad)
and
push
xor
adc
sti
xlat
xor
mov
rcr
pop
pop
stos
push
dec
sti
fnsave
pop
rol
aaa
test
ins
shld
les
lock
lahf
cmc
or
jmp
jecxz
loop
sbb
xchg
(bad)
rep
pop
lock
adc
pop
xlat
addr16
xor
mov
mov
ds
mov
sub
xor
(bad)
dec
jecxz
retf
adc
pop
jmp
out
cli
pop
dec
sti
xor
and
push
fadd
sub
cwde
js
ins
add
jp
pop
mov
int3
cwde
jmp
test
(bad)
xlat
push
mov
out
mov
push
jle
adc
push
push
js
mov
cmp
test
cmp
sbb
push
pop
mov
dec
daa
add
sbb
loopne
mov
ins
fwait
jle
outs
jp
aam
mov
ja
lds
jno
ins
adc
pop
jo
cmp
pop
jno
jmp
xor
arpl
pop
cdq
ds
mul
lods
mov
dec
sti
pop
sub
retf
cmp
imul
push
ins
das
adc
test
push
sub
xchg
dec
mov
test
ins
data16
or
mov
jecxz
and
in
idiv
out
addr16
and
push
repz
rcl
mov
scas
call
out
xchg
ds
call
push
mov
xor
pop
sub
out
mov
add
add
(bad)
dec
adc
sbb
sub
adc
gs
out
push
mov
call
outs
scas
ret
fistp
adc
push
ds
test
mov
pushf
int
mov
dec
add
cmp
add
inc
mov
mov
jmp
dec
push
ins
daa
data16
inc
sbb
imul
sbb
cmps
fnstenv
xchg
pop
sahf
retf
and
mov
and
cmps
pop
xor
out
sub
mov
ds
aaa
fcomip
or
or
jo
push
imul
(bad)
xchg
pusha
jp
and
gs
mov
rcl
psubw
xchg
mov
mov
fisttp
out
mov
fprem
int3
push
jo
jge
in
jge
cmc
adc
or
mov
test
aad
ins
sbb
stos
ret
add
sbb
mov
mov
sbb
jae
into
test
dec
push
retf
sbb
neg
(bad)
int
lahf
iret
cmp
ret
call
imul
xchg
leave
test
jo
aas
in
cwde
sbb
pop
jg
jno
jmp
push
leave
dec
mov
fcomip
push
(bad)
daa
mov
aam
imul
sbb
xor
je
(bad)
push
push
or
inc
jb
iret
loope
sbb
jno
fisub
xor
aaa
es
xlat
xchg
sub
jl
pop
mov
nop
xor
std
pop
test
int3
mov
push
repnz
mov
aad
pop
rol
push
jecxz
rcr
fwait
call
jbe
stc
je
cmp
mov
dec
xchg
inc
adc
push
dec
out
(bad)
jno
sub
mov
scas
icebp
popf
and
dec
retf
imul
pop
test
out
push
mov
push
add
fld
dec
movs
mov
jb
(bad)
and
test
aad
push
sahf
jmp
and
stc
xor
mov
push
xor
xchg
inc
mov
or
mov
sti
rcr
sub
inc
jl
push
repnz
cmps
in
jo
pop
mov
dec
neg
scas
or
rol
push
popa
test
sar
inc
fs
and
push
imul
mul
mov
cmp
pop
dec
fstp
ret
push
xchg
adc
retf
dec
xor
inc
test
int
or
cmp
push
cmc
xor
xchg
cmp
loope
xchg
push
sbb
pop
les
sbb
aaa
(bad)
jb
push
jbe
(bad)
fild
push
inc
lock
mov
repz
test
inc
dec
pushf
aam
push
jmp
call
dec
mov
push
ja
or
mov
mov
in
dec
jle
cmp
int
ret
retf
call
jae
sbb
aam
or
arpl
xor
pop
sbb
mov
dec
xchg
push
xor
jle
mov
sub
push
add
scas
std
mov
in
push
add
pop
rol
pop
inc
jge
int
js
ja
and
test
inc
cmp
and
arpl
js
ss
sub
add
cli
loopne
jns
adc
retf
stos
lods
jae
fcom
xchg
das
fld
loopne
dec
mov
in
in
call
or
fistp
retf
mov
into
xor
data16
int
jo
jle
mov
sub
push
mov
pusha
aaa
inc
fcmovne
sbb
jbe
push
sbb
int
mov
test
enter
and
add
cmps
sbb
stc
aaa
enter
sbb
jecxz
cmc
push
fisubr
inc
cdq
lahf
xor
aaa
fldl2t
add
in
add
outs
jns
movs
pop
shl
mov
mov
mov
jbe
push
std
xor
fsub
sub
mov
aaa
retf
in
test
add
or
mov
cli
ss
retf
dec
in
or
or
ret
je
(bad)
mov
mov
movs
ret
mov
xchg
iret
out
outs
add
or
jmp
sbb
outs
mul
push
pop
cdq
xor
mov
xchg
jno
loopne
test
enter
inc
out
stos
ins
jns
push
popa
mov
std
in
sbb
mov
in
or
outs
jecxz
popf
hlt
push
cli
movs
push
ins
jge
jo
ins
or
ins
rol
mov
loopne
and
pop
lods
imul
mov
xor
cmp
pusha
jno
ds
mov
mov
xchg
cli
inc
push
adc
xor
mul
xor
icebp
jbe
sub
jle
retf
out
shr
xchg
xchg
hlt
dec
jnp
mov
cmp
out
xchg
(bad)
inc
stos
xor
mov
retf
aaa
mov
dec
cmps
fist
pop
xchg
xor
(bad)
push
data16
loope
push
push
xcrypt-cfb
pop
imul
fcmovnb
jae
mov
adc
or
lock
fidiv
aam
or
xchg
dec
mov
jb
(bad)
popa
sub
adc
adc
push
xor
adc
in
mov
(bad)
lods
jns
jb
fst
jecxz
mov
push
imul
jnp
xor
adc
adc
leave
fdivr
mov
imul
sti
sub
lods
retf
sbb
enter
out
cmc
(bad)
pop
cmc
test
rcr
iret
imul
mov
ror
jge
out
out
les
in
jmp
pop
imul
stc
jbe
lea
cdq
cli
sbb
mov
jle
push
jmp
call
add
adc
jo
jl
xor
mov
xor
lods
dec
add
jno
adc
adc
xchg
pop
rcr
and
test
ins
mov
repz
pop
mov
jne
(bad)
mov
xchg
push
fsubr
out
iret
mov
xchg
inc
push
sub
sbb
pop
jle
jmp
mov
cmps
xor
cmps
fimul
push
(bad)
ss
sub
or
adc
mov
in
add
jl
dec
adc
imul
sub
push
fnsave
(bad)
call
arpl
xchg
int3
movs
fidiv
out
loope
cmps
adc
adc
push
test
loopne
inc
test
pushf
movs
cli
test
or
dec
xchg
dec
or
hlt
iret
mov
mov
push
mov
mov
ds
call
leave
xor
sbb
clc
mov
test
nop
test
jno
push
sbb
jmp
jbe
mov
out
xchg
ins
or
(bad)
sub
push
sub
push
lock
and
push
mov
jmp
ss
jnp
aas
adc
sahf
sti
fist
and
xchg
in
mov
rcr
mov
ss
dec
and
inc
or
adc
in
cwde
lds
mov
pop
jnp
(bad)
mov
loop
push
xchg
cmc
xor
jbe
adc
or
mov
add
addr16
int3
adc
cmps
mov
or
movs
xlat
jae
clc
xchg
push
(bad)
cld
je
jnp
rol
mul
outs
mov
jae
xchg
ret
stos
lahf
jne
push
add
pop
rol
mov
retf
fiadd
ret
loop
cmp
pusha
in
call
dec
push
out
stos
loopne
push
xchg
and
inc
mov
(bad)
rcr
cwde
and
mov
or
sahf
xor
jmp
push
repz
pop
loopne
in
lds
cmp
mov
daa
xchg
push
gs
push
and
xor
ret
mov
sbb
lea
mov
jmp
sbb
stos
(bad)
pop
les
mov
movs
mov
cmp
mov
xchg
lahf
jae
loopne
in
fwait
je
out
add
loopne
iret
adc
daa
sub
sbb
out
int
(bad)
sbb
cmp
sahf
inc
std
jle
stos
outs
jbe
mov
add
cmp
aas
retf
mov
sbb
es
fs
mov
sub
mov
xor
iret
pop
fdiv
fs
pop
sbb
sub
pusha
and
pop
daa
push
adc
push
cmps
push
mov
mov
stos
jg
xchg
inc
mov
stc
mov
into
int3
jb
xor
push
pop
mov
iret
bound
shl
daa
adc
or
outs
loope
dec
cmps
xlat
and
fnstenv
jg
jmp
pusha
xchg
fsub
repnz
jae
mov
int
stos
dec
lock
pop
or
add
mov
cmp
mov
xlat
sbb
mov
rcl
shl
cwde
cmp
aas
gs
add
xchg
in
inc
xchg
mov
inc
xchg
cmp
scas
int
xchg
sti
mov
inc
cmp
xor
pusha
fcomp
fbld
call
lds
mov
test
les
xor
add
and
jne
mov
(bad)
inc
addr16
or
dec
rcr
cmp
js
xchg
aaa
adc
add
or
lock
jmp
les
mov
js
mov
push
test
fwait
(bad)
xchg
ror
pop
mov
jns
jg
loop
fcomp
mov
or
push
xor
inc
arpl
mov
dec
lds
cmp
jmp
stos
aaa
fcomip
sub
mov
jle
mov
mov
aam
add
fdiv
adc
jmp
push
ins
nop
add
pop
and
mov
or
inc
jae
scas
adc
dec
pop
outs
mov
call
xchg
mov
sti
mov
mov
mov
mov
mov
fild
mov
cmps
sahf
shr
lods
int
call
fcomp
(bad)
adc
mov
and
leave
mov
sbb
dec
outs
mov
rol
imul
(bad)
rcl
mov
adc
stc
fcom
outs
push
or
add
jmp
xchg
aaa
test
add
or
nop
retf
jecxz
shr
mov
adc
(bad)
mov
cmps
loop
nop
push
push
fcomp
dec
inc
(bad)
fistp
dec
rcl
outs
push
jp
sub
mov
dec
leave
cmps
idiv
cmp
add
gs
lods
aam
sub
cmc
lods
shr
add
dec
enter
add
fwait
cdq
adc
push
add
aaa
aaa
into
imul
pop
and
fnstenv
pusha
clc
push
inc
ja
call
out
sub
xchg
mov
cmp
mov
cld
or
rcl
push
jnp
mov
fcomp
inc
cmps
push
mov
bnd
int3
fimul
enter
rcr
addr16
cmc
and
xchg
jmp
(bad)
jmp
push
pop
mov
inc
jle
inc
and
push
push
dec
pop
cmovb
int3
js
aad
popf
inc
loope
mov
(bad)
sbb
inc
or
dec
xchg
test
fild
push
xchg
push
cmp
jp
movs
and
or
adc
dec
rol
add
add
cmp
xlat
inc
mov
jl
push
pop
imul
adc
push
movs
stos
dec
mov
jns
or
shl
xor
adc
push
nop
cwde
movs
repnz
stos
ret
jo
mov
movs
repnz
cmp
sub
push
lahf
dec
aaa
jmp
movs
sbb
sbb
xor
dec
jmp
mov
jmp
int
retf
rol
rol
dec
dec
push
mov
imul
jnp
gs
sub
jns
shl
mov
cld
(bad)
mov
lods
jnp
stc
sub
pop
fwait
push
pop
fist
cmc
and
in
jmp
loopne
xchg
popf
inc
dec
retf
in
push
push
packuswb
cs
dec
movs
(bad)
xchg
(bad)
mov
jnp
sbb
test
mov
push
sti
lock
cmc
xchg
div
dec
sub
test
fisubr
xchg
iret
pop
push
fistp
out
scas
dec
mov
rol
jl
imul
shr
loopne
scas
mov
adc
xchg
sti
and
out
outs
mov
jns
mov
sub
lea
sti
jmp
es
mov
dec
push
int3
gs
lea
add
push
pop
cmp
dec
adc
call
hlt
sub
xchg
test
shl
dec
div
in
sub
test
sbb
xchg
mov
dec
les
dec
jge
ds
movs
mov
sub
into
inc
inc
shl
push
retf
mov
xchg
pop
mov
mov
pusha
js
sub
ret
xchg
adc
mov
aam
xchg
add
add
es
mov
mov
outs
in
dec
ds
outs
cmp
mov
mov
dec
mov
add
mov
jno
sbb
pop
jg
(bad)
mov
add
add
mov
sbb
pop
retf
jle
(bad)
std
neg
hlt
neg
pop
mov
xchg
mov
das
xchg
(bad)
stos
jle
pop
lahf
sub
jmp
out
mov
dec
js
adc
int
pop
xchg
in
pop
cwde
sub
jnp
scas
test
push
popa
shl
pop
mov
out
add
mov
inc
add
shl
aaa
cmp
repz
imul
adc
push
xchg
cdq
jmp
in
pop
movs
push
idiv
outs
inc
scas
inc
or
mov
ret
fmulp
dec
pop
jbe
(bad)
push
cld
sub
popa
(bad)
pop
mov
dec
add
push
inc
and
stos
retf
pop
dec
and
fst
dec
retf
outs
shl
mov
adc
xchg
loope
or
push
push
pusha
xchg
push
xchg
(bad)
and
iret
gs
in
pop
inc
(bad)
test
sti
sub
and
ins
scas
sbb
dec
cdq
pop
retf
mov
jecxz
add
ficom
test
ins
xor
arpl
mov
push
leave
inc
fld
mov
jnp
neg
xchg
leave
jmp
mov
mov
retf
xchg
push
jmp
fist
cmp
push
and
aad
or
dec
xchg
sbb
repz
lea
imul
sbb
call
pop
mov
(bad)
sbb
inc
aaa
pop
pusha
mov
jle
into
xchg
sar
cmps
in
popa
data16
fistp
(bad)
push
cmp
bnd
pop
scas
ret
pop
push
jno
push
cmp
les
aam
loope
push
das
ret
(bad)
xchg
gs
push
and
push
ret
dec
repnz
sub
cmp
add
ret
retf
(bad)
adc
in
sbb
adc
pop
nop
jne
js
aas
sub
jle
jbe
popf
in
sahf
lods
xor
mov
stos
fwait
jnp
xchg
arpl
icebp
push
adc
daa
pop
pop
sub
aaa
mov
aas
sbb
es
sbb
sub
pop
shr
jo
mov
movs
int3
pop
mov
dec
push
and
cld
xchg
ins
jmp
inc
aaa
cmp
jle
ja
test
cld
pusha
push
pushf
or
cmp
loop
imul
out
out
xchg
call
fcmovu
xor
sbb
cmc
mov
retf
shr
or
mov
sar
jg
xor
inc
movs
sub
or
ja
(bad)
pop
js
sub
rol
cmp
mov
mov
pop
and
pop
repz
movups
cmp
pop
pminsw
out
nop
ss
arpl
push
das
cmp
adc
test
fldl2t
sub
call
(bad)
pop
mov
dec
test
outs
sub
xchg
jo
push
adc
jle
jb
inc
jmp
popf
sub
out
(bad)
iret
jl
adc
mov
mov
xchg
lds
push
xchg
pop
or
cmc
aaa
fnclex
cwde
push
mov
fwait
mov
add
pop
std
jb
push
loopne
popa
jmp
div
fsubrp
xor
inc
mov
pop
push
int3
test
cmps
stos
add
mov
xchg
mov
into
scas
xchg
xor
outs
xor
pop
jb
mov
out
xchg
aad
adc
cdq
pop
lods
xor
shl
js
mov
xor
jg
add
adc
jge
and
les
add
aad
fwait
out
cld
jb
lods
popf
fstp
and
push
ficomp
int
jp
enter
mov
xchg
retf
ret
mov
cmc
pushf
shr
adc
stos
es
jp
ss
scas
mul
pop
jmp
popa
push
jns
mov
jmp
and
jb
adc
or
pop
jo
(bad)
xchg
dec
popa
mov
jbe
mov
xchg
pop
add
jno
xor
aas
fsub
cmps
fsqrt
inc
inc
push
pop
leave
test
mov
iret
pop
rcr
cmp
dec
mov
fld
and
mov
test
es
fidivr
loop
mul
jae
and
add
ja
push
push
sahf
pop
stc
push
mov
out
jae
fild
mov
xor
outs
jnp
sbb
fldenv
or
mov
or
sbb
cmp
ds
mov
fistp
leave
push
lods
mov
mov
test
jb
or
icebp
bound
jae
fisubr
mov
mov
(bad)
cwde
adc
xchg
adc
sbb
xor
daa
xchg
push
mov
scas
and
cld
pusha
loope
mov
sbb
fs
adc
add
adc
mov
push
pop
add
pusha
adc
push
test
mov
cmps
fwait
aad
repnz
sbb
cmps
ds
popf
sub
call
and
push
ins
mov
sub
out
fstp
jno
ja
scas
xor
cdq
imul
leave
int
enter
xor
repnz
(bad)
std
pop
ins
fidiv
into
sub
push
xchg
or
mov
rcr
xchg
mov
push
xlat
or
push
out
xchg
cmc
push
dec
sbb
rcl
sbb
push
nop
pusha
jl
cs
arpl
out
pop
xchg
adc
popf
dec
div
push
jae
jne
dec
or
cmp
add
add
or
adc
fwait
xchg
mov
adc
lea
(bad)
(bad)
cld
inc
pop
aas
mov
mov
jge
add
sbb
xor
enter
push
mov
cmc
mov
shl
sub
push
inc
jns
aaa
and
dec
into
out
cs
pop
sub
lock
bnd
push
push
jmp
xchg
aam
adc
mov
shl
dec
add
std
jge
mov
scas
icebp
adc
out
(bad)
call
mov
cdq
xchg
cmps
fsubr
cdq
push
call
xor
push
mov
mov
and
push
and
lahf
mov
(bad)
sbb
icebp
ret
cmp
sti
push
xchg
pop
inc
jbe
sub
xor
aas
call
dec
mov
pop
push
ins
inc
imul
jge
mov
pop
jecxz
sub
dec
pop
scas
mov
arpl
out
enter
sbb
rol
xor
loopne
(bad)
lock
adc
jg
rcl
aas
lds
leave
dec
repnz
adc
fisttp
gs
into
or
mov
cdq
add
adc
jne
dec
out
pop
pop
mov
cmps
adc
(bad)
xchg
movs
mov
cmp
pop
loope
jecxz
xlat
dec
popa
pop
scas
(bad)
repnz
add
push
adc
mov
sti
add
push
sub
into
xchg
pop
(bad)
push
cmp
adc
add
nop
xor
inc
(bad)
test
(bad)
std
mov
adc
test
ins
popa
(bad)
jmp
inc
loop
inc
shl
dec
test
xlat
add
repz
xchg
shl
jae
xchg
(bad)
popa
add
test
mov
imul
inc
retf
mov
fistp
in
lods
fnsave
imul
icebp
xlat
and
jo
cmps
lods
xor
call
dec
fs
int
lahf
push
pusha
mov
lea
add
cmp
push
xor
cmp
rcl
jecxz
add
hlt
je
push
push
xacquire
inc
movs
add
cmp
ss
cli
mov
scas
jl
in
jno
aam
adc
in
jg
cmp
repnz
jb
mov
repnz
mov
cwde
sti
sldt
fadd
pusha
aaa
mov
lea
clc
mov
jl
mov
mov
dec
inc
push
hlt
in
inc
(bad)
mov
add
popf
lds
bound
jne
pop
adc
mov
test
xor
or
iret
and
and
mov
add
les
lods
pushf
mov
ins
sbb
pop
ret
cmp
not
mov
cmp
jb
mov
mov
iret
xor
add
mov
push
jns
loope
es
pusha
sbb
and
rol
repz
in
sbb
pop
in
std
into
cwde
jp
clc
and
(bad)
push
sub
call
lods
jl
add
scas
dec
call
ret
and
fild
push
inc
outs
movs
dec
inc
inc
jmp
mov
cmp
nop
xor
leave
popa
sub
or
call
push
push
push
sub
test
or
pop
adc
outs
mov
sub
jns
cmp
cwde
pop
pcmpgtd
lea
pop
retf
mov
cli
mov
jb
add
sub
sub
jle
in
mov
je
mov
push
sub
xor
fdivr
jmp
jbe
jmp
leave
dec
mov
pop
lahf
cmps
xchg
adc
push
popa
cs
icebp
mov
adc
ja
iret
loope
in
and
and
mov
and
add
xchg
movs
pushf
stc
repz
nop
mov
xchg
jle
js
xor
lahf
pop
adc
fmul
xor
mov
xchg
xchg
lds
add
cmp
adc
jmp
idiv
out
and
jecxz
jae
sti
push
fild
loope
test
scas
test
jbe
jb
cmps
scas
ss
sub
or
popa
or
sbb
sti
or
push
pusha
push
pop
sbb
or
fneni(8087
mov
lods
xchg
in
fiadd
xor
mov
inc
inc
ret
(bad)
enter
cmp
add
pusha
and
sub
add
adc
dec
mov
xchg
sub
test
push
jge
rcr
pop
cwde
xchg
or
cmps
jl
jle
cmp
sub
lock
les
pusha
popa
mov
or
inc
cmp
test
int
jne
sbb
or
enter
cs
leave
out
inc
jl
mov
dec
add
add
push
mov
jo
dec
shl
jl
jns
in
xchg
fistp
add
add
xlat
scas
call
mov
lahf
mov
mov
scas
inc
cmps
jecxz
cld
shl
push
sti
mov
jp
shl
fistp
inc
shr
fistp
sub
inc
ss
dec
stos
arpl
sbb
xor
sub
pop
mov
mov
test
in
sti
sbb
dec
xchg
retf
cmps
data16
xor
rcr
jecxz
popa
mov
mov
add
loop
xor
mov
mov
icebp
xchg
les
adc
add
pop
cs
or
add
lea
shr
cwde
into
outs
ins
xchg
push
loop
inc
cmp
dec
jmp
mov
call
cli
push
test
punpckhwd
sub
mov
adc
push
sbb
(bad)
and
bound
in
mov
add
jne
push
cmc
test
push
(bad)
mov
mov
fdiv
fstp
and
xchg
stos
jmp
mov
mov
gs
adc
div
lea
jle
adc
push
(bad)
rol
xchg
in
lea
pop
or
xchg
dec
sbb
pop
xor
push
ss
rol
cmp
mov
dec
add
enter
jmp
add
inc
icebp
mov
xor
sbb
add
mov
xlat
lods
jp
mov
out
out
cmp
repz
scas
pusha
ret
push
pop
pop
push
repz
imul
pop
test
ret
fcmovu
sar
ret
cld
cmp
inc
cdq
cmp
test
push
popf
mov
dec
sub
push
pop
jecxz
or
xchg
jbe
mov
test
push
push
shl
cld
popf
aas
mov
push
rcl
jl
mov
dec
jg
push
pop
cmp
mov
sub
int3
je
sahf
lods
out
arpl
push
xchg
mov
aas
mov
xor
or
(bad)
and
sub
dec
xor
cmp
adc
cmp
cmps
mov
fld
add
lea
mov
daa
sbb
cdq
mov
and
(bad)
in
out
and
sar
mov
jmp
out
push
push
sbb
sbb
fstp
ficom
int
or
outs
movs
stos
jae
mov
retf
inc
push
stc
call
inc
ret
mov
scas
sahf
fisub
loop
fild
push
sub
or
mov
jo
and
mov
push
push
popa
xor
xlat
lea
mov
fild
inc
push
or
cs
ret
addr16
cs
and
sbb
cmps
div
aam
mov
mov
xchg
loope
retf
retf
xlat
mov
and
repnz
fidivr
push
inc
sbb
test
(bad)
xchg
test
mov
mov
pusha
xor
lock
fsubrp
xor
cdq
and
(bad)
xor
add
sbb
scas
push
dec
pushf
mov
shr
shl
pop
rcr
xchg
repnz
mov
sti
sub
add
sbb
loope
cwde
push
add
and
std
sub
jle
push
mov
jl
rcl
dec
cmp
sar
or
add
dec
ror
mov
sbb
lds
mov
loopne
xlat
cmps
jns
sbb
into
and
push
jmp
jnp
test
xor
loope
mov
loopne
(bad)
pop
rcr
out
mov
mov
dec
sub
inc
and
or
sub
sub
or
call
cwde
xchg
cli
mov
mov
pop
add
mov
sbb
bound
cmp
push
xor
dec
jns
mov
js
xchg
pop
shr
outs
xchg
and
xor
jae
ja
mov
add
xchg
sub
xor
xchg
and
xchg
repz
aas
xchg
pop
adc
out
ss
jle
std
mov
inc
add
nop
das
jno
jbe
pop
pop
and
xchg
stc
jecxz
jno
jge
dec
add
or
or
sub
ficom
lahf
rcr
rdpmc
pusha
test
movs
pop
aaa
jno
xchg
cld
xor
sub
push
ror
in
dec
repz
and
xor
into
gs
jge
mov
xchg
xor
shr
or
aam
xacquire
add
pop
outs
mov
cwde
sbb
rol
and
out
les
es
mov
dec
movs
pop
jg
xchg
push
mov
fcomp
xchg
loopne
shl
sbb
mov
dec
add
dec
movs
or
test
aam
(bad)
(bad)
jle
lahf
scas
adc
and
clc
inc
sbb
pop
mov
fistp
aaa
mov
dec
pop
outs
adc
bound
repnz
xor
fcom
push
stos
sar
cmp
retf
call
enter
sbb
clc
in
test
in
dec
push
cmp
push
xor
or
xor
mov
pop
jmp
sbb
aaa
add
cmp
pop
scas
and
mov
lds
je
jmp
call
xchg
pop
or
jp
mov
push
fwait
daa
or
lods
pop
mov
mov
test
stos
pushf
pop
sti
adc
js
mov
shr
inc
lock
pop
js
dec
add
dec
sbb
repnz
lods
jo
les
test
inc
(bad)
out
jp
inc
or
loope
mul
arpl
repnz
stc
push
(bad)
int
mov
outs
stos
mov
loope
call
gs
shr
mov
les
xchg
sub
add
fcmovnbe
and
push
ins
repz
push
aaa
jle
mov
push
or
fnsave
xor
xchg
mov
gs
dec
jo
xchg
mov
cmp
movs
push
lods
jnp
mov
jecxz
out
into
fwait
xchg
mov
inc
icebp
in
xor
mov
push
aas
jo
xchg
pop
push
movs
mov
dec
in
inc
scas
test
pusha
mov
xchg
sbb
jo
cmc
mov
jge
outs
cwde
int
adc
sub
movs
jmp
xchg
and
xor
push
pop
jo
mov
pop
or
int
retf
xchg
inc
mov
dec
and
push
add
push
xor
xchg
mov
push
jge
dec
xor
out
pop
int
iret
rol
lods
add
pop
fimul
cmps
mov
sti
cwde
adc
push
dec
adc
icebp
cmp
fbld
jnp
pop
dec
cmp
ins
push
mov
rol
inc
out
neg
sti
mov
ret
push
jb
fbstp
lods
jbe
add
adc
mov
dec
pop
(bad)
cmp
or
push
mov
and
test
cmp
inc
das
sahf
xchg
ins
ins
icebp
arpl
add
call
aaa
imul
aas
pop
jmp
popa
mov
lods
cmps
sbb
xor
mov
mov
pop
icebp
cmp
mov
xor
repz
(bad)
add
sbb
pop
or
adc
jns
mov
pop
inc
sbb
shl
dec
xchg
dec
cmps
(bad)
retf
push
imul
in
inc
cmp
mov
mov
mov
mov
nop
push
iret
jmp
pmaxsw
jb
push
dec
inc
stc
push
test
fstp
cmp
call
in
push
pop
arpl
stc
or
sbb
arpl
mov
int
cli
mov
mov
mov
mov
out
sbb
pop
call
sbb
nop
adc
xchg
push
xor
ret
cli
mov
rcr
das
add
mov
sbb
cmps
hlt
mov
xchg
iret
mov
push
lods
jecxz
xlat
add
dec
jg
push
popf
leave
(bad)
xor
or
pop
mov
sbb
push
imul
add
xchg
adc
mov
push
stc
and
xor
xchg
mov
fdivr
ret
adc
bound
sbb
cli
ror
mov
push
mov
sbb
push
addr16
sub
xor
arpl
jmp
dec
mov
scas
mov
sub
(bad)
mov
jl
jae
lock
dec
mov
in
add
add
inc
lea
sbb
cwde
out
clc
sbb
cwde
lahf
ja
push
sub
nop
and
aad
(bad)
lock
sbb
pop
and
mov
test
xchg
mov
sahf
cld
push
fdiv
sub
cmp
cmp
imul
pusha
test
mov
syscall
aam
and
adc
dec
sahf
mov
jno
or
arpl
pop
aad
mov
aad
mov
ror
aaa
mov
adc
mov
ins
fucomip
outs
adc
sbb
xlat
or
dec
scas
pushf
in
aam
pop
imul
shl
loop
jno
jbe
shl
pop
inc
ror
xchg
and
mov
fcomp
ret
movs
pop
xlat
imul
jb
inc
push
cmp
ins
mov
cmp
mov
cmps
add
fisubr
imul
(bad)
aas
jbe
ins
lds
aaa
inc
int3
jbe
fcmovnb
ds
imul
fisub
cmp
push
dec
sbb
cmp
out
fnstenv
cmp
pop
push
retf
xchg
jmp
retf
mov
cdq
sub
aam
pusha
inc
loope
shl
inc
dec
imul
add
cmp
in
push
in
std
pop
push
mov
lea
mov
push
rol
inc
ds
xor
pop
test
stos
xor
inc
fdiv
xor
ja
dec
jl
mov
fist
fsubr
mov
pop
cmp
push
shr
sub
mov
lds
rcr
pop
jne
push
jns
repnz
cmp
je
add
sti
das
sub
leave
jmp
les
jb
mov
mov
jecxz
jo
add
add
or
adc
aas
cdq
xor
and
aaa
fisub
mov
dec
sbb
add
pop
mov
xchg
loop
gs
add
pop
loopne
mov
xlat
inc
mov
lds
jno
ficom
out
retf
xor
outs
and
jae
push
ret
adc
mov
and
push
mov
icebp
ja
mov
setp
into
mov
or
add
into
popa
pop
push
daa
sbb
push
cmp
lock
jmp
sbb
and
bound
jnp
cwde
cmp
icebp
add
call
ror
pop
rol
loop
inc
int3
jle
imul
inc
xchg
mov
movs
push
test
dec
inc
dec
(bad)
outs
jmp
nop
addr16
(bad)
fisub
or
sbb
fs
cmp
addr16
loop
aad
ficom
ins
inc
fsubrp
cmc
shl
cld
fisubr
jns
adc
mov
loopne
or
(bad)
(bad)
in
retf
adc
sub
cmps
shl
push
ret
(bad)
sub
scas
add
add
sbb
push
retf
jmp
push
in
jl
mov
mov
push
jl
ja
jl
retf
push
iret
adc
xchg
xor
add
xor
jle
xchg
mov
not
stc
in
rol
dec
hlt
sub
xor
(bad)
adc
xchg
dec
adc
lods
xor
test
mov
leave
jecxz
sub
xchg
pop
adc
pop
and
jns
cli
mov
cmp
xlat
mov
cmp
mov
sub
and
ret
test
(bad)
leave
jbe
adc
cld
fcomp
(bad)
mov
aam
push
in
loope
push
imul
jge
jge
and
sbb
push
jns
adc
sub
or
jmp
(bad)
fild
push
idiv
sub
in
and
adc
jl
push
mov
jae
in
xor
push
sbb
adc
cmc
push
mov
(bad)
xchg
mov
pop
mov
mov
mov
mov
push
retf
mov
mov
mov
or
out
sbb
sti
jmp
jns
pop
and
mov
mov
cld
add
add
and
stc
or
shr
jnp
into
jp
stos
dec
(bad)
mov
cmps
mov
jbe
(bad)
neg
ret
out
and
ja
iret
mov
jnp
dec
lods
push
sub
inc
adc
mov
push
sbb
or
xchg
div
cmp
cmp
inc
aas
xchg
push
mov
leave
and
adc
ja
repnz
xchg
jb
mov
loopne
imul
mov
sbb
mov
cmp
xchg
or
xor
aaa
xlat
adc
sub
adc
outs
out
mov
adc
les
les
jne
mov
push
mov
loope
push
jb
dec
movs
(bad)
into
dec
repz
adc
pop
or
sub
push
mov
daa
iret
or
mov
mov
mov
adc
jg
push
daa
mov
shr
sahf
jo
dec
push
jp
add
mov
jecxz
popf
(bad)
xchg
adc
pop
nop
mov
jl
dec
mov
mov
mov
push
fcom
cmps
jbe
test
mov
mov
xor
test
sbb
(bad)
pop
xor
neg
xor
(bad)
mov
fimul
pop
fsub
cmp
out
int3
pop
ret
and
div
(bad)
je
rcr
dec
test
mov
(bad)
fnsave
out
sbb
repnz
xor
sbb
arpl
inc
nop
mov
test
fidiv
and
aas
mov
pop
out
mov
and
pop
push
push
cmps
lahf
repz
test
cmp
das
out
mov
jg
add
xchg
imul
or
or
test
xor
ja
add
lds
jge
pushf
(bad)
sub
inc
xor
pop
push
movs
fisub
push
dec
repz
dec
icebp
je
sar
(bad)
push
mov
fwait
inc
imul
adc
fnsave
(bad)
dec
push
leave
xor
mov
xor
loop
and
cmp
call
xchg
arpl
pause
sbb
retf
loop
and
pop
aad
sbb
mov
popf
mov
and
in
shr
pop
push
mov
mov
inc
add
or
xor
jmp
test
mov
scas
sub
jl
adc
push
fwait
sqrtps
int3
add
push
pushf
push
out
xchg
and
in
adc
jle
dec
or
mov
cmp
sub
inc
int3
mov
pop
ins
adc
and
sub
fbstp
xchg
ins
push
or
dec
aam
test
out
sub
push
push
push
mov
sbb
and
push
xor
pop
jge
xchg
cmp
xor
cdq
outs
retf
push
adc
inc
mov
add
sub
or
mov
stc
mov
sbb
sbb
neg
sahf
pop
pop
mov
mov
jbe
es
enter
mov
fwait
daa
xchg
sub
mov
push
ss
and
or
mov
int3
jge
adc
dec
push
dec
push
cmp
pop
or
xchg
ds
(bad)
push
icebp
pop
repz
xchg
scas
loope
push
xchg
ja
cld
xchg
aaa
mov
icebp
cld
in
adc
push
loopne
mov
lds
push
add
fimul
jg
push
call
fwait
pop
gs
jle
mov
or
or
test
add
dec
rol
fdiv
stc
sar
stc
pop
cmp
sub
dec
pop
cmp
xchg
sbb
in
jo
or
add
inc
call
mov
stc
leave
sti
out
mov
nop
(bad)
aam
test
aaa
movs
in
in
popf
adc
popf
sbb
or
dec
and
(bad)
mov
(bad)
ror
sbb
stc
jp
pop
dec
int3
outs
push
xor
pop
cmp
jl
push
mov
adc
sbb
sbb
movs
cmp
sub
dec
in
stos
shl
ret
sbb
xchg
loope
cmovl
in
mov
xchg
mov
not
mov
jnp
mov
call
add
xlat
mov
call
fsubr
gs
dec
retf
xor
int3
shl
inc
clc
xor
xlat
call
pop
xor
sar
hlt
mov
arpl
or
cmpxchg
lods
push
fmul
(bad)
cmp
xchg
cmp
push
in
ds
xchg
add
leave
out
sti
inc
dec
idiv
jle
mov
aad
cmc
adc
aaa
and
jge
das
jg
iret
xor
inc
xchg
das
outs
test
mov
jecxz
xchg
(bad)
(bad)
fstp
sti
pop
mov
sub
cli
sahf
jo
neg
ins
or
lahf
cwde
ins
add
and
mov
movs
(bad)
pop
and
xchg
loope
mov
xchg
sub
jne
or
popa
idiv
icebp
and
movs
data16
ret
push
add
hlt
fdiv
mov
or
push
ss
lahf
shr
and
out
and
add
or
mov
retf
sub
add
mov
aam
(bad)
ins
pop
adc
pop
jbe
sahf
sbb
or
out
add
stc
jns
mov
das
fdiv
sbb
(bad)
dec
xor
movs
(bad)
icebp
sbb
cmps
mov
xor
mov
xlat
or
fwait
mov
ins
retf
into
mov
xor
pop
cmp
daa
jns
xor
test
push
rcl
push
xchg
xchg
mov
repnz
inc
jo
push
mov
xchg
loopne
cmc
movs
test
mov
pusha
in
pop
lahf
pop
outs
dec
inc
fcomp
into
nop
jne
clc
dec
inc
mov
lock
int
xlat
hlt
sub
lods
or
loopne
adc
(bad)
popf
mov
cwde
or
mov
test
arpl
sub
mov
iret
fwait
xlat
xor
popa
push
cmp
int
ds
jp
dec
mov
mov
sti
xor
mov
xchg
ficom
bound
popf
inc
retf
sbb
or
push
xor
cld
(bad)
sbb
xchg
push
xchg
enter
adc
(bad)
div
(bad)
sub
adc
or
in
mov
mov
and
xor
mov
aas
popf
and
jge
sbb
int
mov
test
popf
rcr
(bad)
push
cmp
adc
sub
push
dec
lds
or
aas
fdiv
ror
xor
mov
ret
bound
iret
adc
mov
cmps
(bad)
(bad)
sbb
stc
ret
xchg
cmp
movs
mov
repz
lods
and
pop
add
xchg
cli
mov
std
(bad)
jecxz
pop
mov
cmp
stos
enter
mov
mov
out
mov
push
add
retf
pop
jg
mov
cmp
lahf
ins
mov
pop
test
test
jl
(bad)
retf
test
cmovl
das
xchg
test
sub
gs
ds
mov
and
(bad)
loope
or
stc
imul
(bad)
pusha
je
or
inc
scas
rcr
adc
loopne
pop
pop
aad
xlat
lods
sbb
xor
(bad)
or
xchg
sbb
xor
xchg
fwait
inc
jmp
dec
jae
idiv
popf
mov
icebp
stc
mov
cmc
arpl
not
(bad)
dec
pop
jmp
in
arpl
xor
imul
ret
sub
and
sahf
dec
cmp
cld
cwde
push
dec
pop
mov
fst
pop
push
cmc
sub
sub
dec
cld
mov
int3
out
sub
pop
es
mov
popa
std
adc
or
jg
int3
push
fcom
xor
leave
fisubr
lahf
(bad)
out
or
mov
jae
sbb
(bad)
gs
push
push
pop
and
mov
xchg
jnp
dec
scas
jl
daa
cmp
bound
(bad)
sub
lock
mov
dec
stos
iret
fs
xchg
add
xchg
mov
fsub
pop
push
pop
xlat
outs
mov
call
clc
dec
cmc
ret
mov
cmp
repnz
mov
sub
mov
inc
sbb
fwait
les
icebp
mov
scas
inc
in
jmp
ds
fistp
mov
push
(bad)
mov
inc
cmps
dec
xor
or
cmps
adc
fstp
jnp
mov
int3
dec
push
imul
dec
lods
dec
lods
or
mov
daa
mov
inc
nop
mov
ss
movs
or
(bad)
push
fld
stos
inc
jge
int
and
popa
or
(bad)
(bad)
inc
jae
add
addr16
push
push
sub
rcl
mov
ret
add
sub
ss
(bad)
xor
mov
jbe
jae
(bad)
into
cdq
or
add
popf
pop
fxch
bts
adc
sar
mov
jl
sahf
cs
cmps
popa
into
push
test
in
xchg
int
push
xchg
mov
push
gs
call
pop
(bad)
inc
inc
push
and
mov
aas
js
out
pop
pop
mov
retf
pushf
mov
inc
jle
enter
jmp
dec
loope
data16
aaa
adc
(bad)
mov
loop
cmps
push
stos
and
es
jb
inc
loope
aas
sub
test
push
sub
or
idiv
sub
das
cmps
fdivr
aaa
outs
rcl
loope
add
adc
jg
add
cmp
xor
je
sub
aaa
nop
(bad)
dec
inc
test
xchg
nop
inc
mov
jp
shl
cmp
mov
xchg
xor
inc
sub
mov
mov
popf
(bad)
xor
pop
xor
inc
js
in
call
in
mov
iret
repz
jmp
outs
mov
sti
cmp
cdq
gs
sahf
dec
mov
push
imul
or
adc
jae
fimul
or
pop
xchg
sti
cmc
dec
in
xchg
cmps
jbe
cmp
out
popa
mov
(bad)
adc
test
ret
aaa
es
sub
retf
mov
dec
push
out
sbb
push
cmc
push
cmp
xchg
add
xor
popf
jecxz
lods
xchg
and
dec
mov
(bad)
inc
jno
mov
pop
out
pop
push
fucomp
scas
enter
mov
cmp
int
mov
jmp
int3
xlat
sbb
mov
jnp
pop
xlat
test
pop
or
pop
hlt
aam
lea
sbb
or
sub
imul
mov
inc
and
scas
shl
(bad)
push
imul
mov
imul
stos
pop
lock
in
popf
pop
(bad)
xor
push
shl
xor
sub
fcomp
(bad)
repnz
je
inc
xchg
int
lock
push
and
cmp
cdq
dec
adc
rcl
inc
jnp
loope
dec
fld
inc
into
in
xlat
out
push
push
sub
pop
pusha
mov
pop
mov
jne
pusha
jge
neg
jb
enter
push
pusha
in
push
or
cli
jge
test
inc
ds
sti
sbb
mov
adc
xor
shr
in
xchg
sub
bound
pop
nop
inc
iret
sub
sbb
cmp
aas
adc
in
shl
sbb
arpl
jge
pop
fistp
iret
and
sbb
jns
pop
mov
fistp
mov
aas
outs
mov
arpl
adc
mov
push
call
stos
add
loopne
stos
xchg
(bad)
int3
cmps
adc
in
or
add
mov
ins
push
push
out
cmps
sbb
popa
dec
hlt
push
jns
or
lods
jbe
outs
mov
inc
jg
add
popf
add
imul
mov
mov
out
fbld
aad
scas
pop
fs
bound
pop
test
push
or
push
test
or
ret
and
dec
sbb
push
jge
mov
fisttp
sbb
dec
xor
mov
sbb
xor
xchg
mov
stc
or
xlat
mov
in
test
push
and
pop
push
pop
fs
jmp
mov
dec
cmp
(bad)
pop
cmps
inc
mov
aas
in
mov
nop
ficom
jecxz
pop
cmp
test
xor
adc
inc
and
lock
fistp
jle
push
add
inc
adc
loope
inc
push
or
jl
outs
int
aaa
popf
push
push
mov
mov
cmps
jne
lock
ror
jo
sbb
inc
test
retf
in
aam
std
add
std
or
push
add
dec
retf
retf
sti
mov
or
xchg
push
les
dec
leave
ret
iret
stc
mov
jmp
mov
lds
dec
mov
sub
out
adc
mov
imul
add
fs
movs
hlt
or
push
mov
fcom
adc
xchg
push
test
sub
cmp
fs
ret
aaa
mov
fidivr
out
(bad)
mov
xchg
sub
or
loop
rol
fwait
cmps
rcr
xor
pop
fidiv
mov
shl
repnz
(bad)
js
je
dec
fsubr
or
mov
or
jnp
mov
cmp
sub
cmp
push
fisttp
popa
repnz
adc
inc
ins
pop
dec
(bad)
(bad)
sbb
lods
pop
jl
test
pop
inc
cmps
sti
cmp
jns
cwde
mov
lea
rcr
jg
dec
sub
or
or
sub
loope
cmp
loope
cmp
retf
cmp
fild
clc
pop
and
(bad)
repnz
enter
xor
rcl
and
out
push
xor
jge
xchg
inc
mov
fwait
dec
fdivr
pop
pop
repnz
into
fstp
jb
push
sub
mov
adc
xchg
sti
push
movs
addr16
adc
push
adc
mov
fldenv
mov
add
ds
adc
shl
popf
mov
push
mov
cmc
sub
xor
sbb
sub
(bad)
call
mov
mov
add
adc
inc
xchg
jle
into
cs
pushf
test
inc
lods
in
and
(bad)
lods
mov
xor
scas
jge
jno
imul
mov
jp
pop
cmp
jmp
mov
ins
mov
je
sbb
rcr
add
movs
jmp
outs
mov
jmp
inc
or
xchg
std
inc
adc
lods
test
cld
icebp
push
xchg
or
in
xchg
mov
sub
cmp
mov
cmp
sub
or
jne
mov
hlt
(bad)
jae
idiv
(bad)
ds
cmps
aas
(bad)
jo
fidiv
popa
add
or
cmps
ins
call
cmp
add
dec
push
mov
aad
(bad)
xchg
jne
rcl
mov
fdivrp
imul
lods
inc
adc
xchg
loope
mov
out
adc
or
or
aaa
daa
fld
mov
mov
pop
jo
retf
xchg
mov
jle
pop
std
cwde
sahf
inc
mov
xor
fdiv
ficom
gs
mov
mov
frstor
and
jmp
test
add
adc
or
ss
out
repz
pop
sbb
or
cwde
stos
xchg
push
push
mov
and
imul
adc
ds
or
clc
dec
data16
fisttp
(bad)
movs
addr16
scas
mov
aas
xor
xchg
int3
imul
retf
jecxz
add
mov
sbb
sbb
push
pop
cmp
stos
mov
xor
mov
push
xchg
sbb
popa
ins
dec
cld
popf
push
inc
push
mov
scas
stos
movs
fcom
in
jge
fwait
jno
xor
pushf
dec
mov
les
ss
imul
inc
cwde
sahf
iret
je
movs
cli
daa
mov
jae
test
mov
retf
sti
add
inc
bound
mov
movs
push
(bad)
pop
mov
fadd
jae
dec
or
or
data16
push
xor
xor
cmp
mov
push
out
add
jecxz
je
aam
dec
repz
mov
mov
out
loopne
jns
les
dec
cmp
popa
daa
je
adc
jae
in
je
push
xor
retf
in
out
lahf
pop
xlat
cmp
mov
ret
movs
stos
daa
sbb
ja
jmp
loope
repnz
dec
js
outs
iret
inc
cmpxchg
retf
xor
test
ins
jg
mov
push
cmp
enter
xchg
mov
std
sbb
(bad)
sbb
fxch
inc
push
dec
in
out
or
test
mov
cdq
inc
pop
ret
in
pop
mov
stos
sub
mov
jbe
lahf
xchg
sbb
push
and
ds
adc
test
add
out
cmc
mov
jmp
push
stos
jecxz
sahf
retf
scas
lods
push
lods
dec
out
retf
pop
mul
push
inc
shr
ins
or
push
popa
xor
imul
scas
ss
sub
test
sub
mov
shr
ja
add
nop
not
sti
sahf
inc
bound
repnz
fild
push
cmp
push
or
retf
retf
popf
(bad)
cli
sub
imul
cmc
stos
pusha
xchg
mov
in
leave
mov
dec
mov
es
cmps
scas
(bad)
jne
xor
sbb
cmp
loop
out
and
or
out
test
nop
sbb
inc
call
repz
call
popf
push
xchg
loope
popf
dec
ret
add
add
xor
dec
popa
or
mov
je
ror
test
sbb
and
pop
or
stos
xor
ret
sbb
xchg
xor
fild
pop
aas
int
push
push
push
jp
cmp
jge
mov
rol
popa
cld
call
adc
fiadd
pop
lods
jecxz
mov
mov
outs
clc
and
in
mov
jl
push
and
repz
std
das
cmp
xchg
mov
fwait
cmps
aad
push
mov
mov
out
cs
aaa
pop
aam
jbe
imul
jge
adc
mul
shl
outs
sbb
add
lods
sub
movs
pop
ins
stc
aam
loope
pop
adc
sti
push
pop
inc
pop
call
mov
imul
test
into
pusha
pushf
push
mov
inc
stos
pop
sbb
sub
sub
jmp
push
dec
push
iret
or
outs
hlt
cwde
pop
in
call
dec
push
pop
mov
jb
push
arpl
icebp
xchg
push
mov
cmp
sbb
push
or
sbb
mov
add
jae
movs
or
and
cmp
gs
xchg
je
pop
push
pusha
adc
or
cwde
lods
fs
sub
add
ds
dec
(bad)
std
sub
ss
outs
(bad)
fdiv
dec
js
pop
nop
dec
push
inc
fistp
(bad)
or
ja
test
jg
rol
neg
retf
imul
jmp
loopne
mov
sbb
add
in
pop
repz
test
aad
(bad)
cmp
cmp
xchg
fucom
push
mov
std
gs
imul
in
sbb
mov
rcr
movs
mov
and
inc
shl
(bad)
inc
shl
scas
push
es
or
popa
sbb
popa
neg
out
aad
aad
inc
jne
add
add
popa
sub
mov
jbe
sbb
iret
mov
jae
clc
add
or
fsubr
stc
(bad)
loope
std
push
xor
inc
dec
sti
(bad)
fld
test
les
mov
add
mov
xchg
sbb
xchg
ret
sbb
bound
stos
ins
loope
mov
jmp
adc
xchg
or
xor
adc
ja
sbb
xor
sti
retf
test
or
mov
gs
repz
or
xchg
and
ds
cmp
cmp
and
outs
imul
inc
js
push
mov
lahf
ins
jne
inc
stc
retf
gs
sbb
pop
mov
jne
mov
loope
mov
or
push
(bad)
out
jnp
fisub
mov
sub
sub
sti
div
in
and
sbb
or
pop
mov
outs
xchg
pop
add
test
mov
outs
xor
add
push
call
add
lahf
mov
add
pop
mov
sar
pop
fadd
cmps
mov
jbe
mov
jecxz
fcmovnu
scas
int
aaa
(bad)
out
outs
ja
push
(bad)
cmp
inc
scas
adc
cmp
ja
xchg
inc
(bad)
jge
les
dec
test
ins
retf
ror
jecxz
not
inc
sbb
sbb
sbb
popf
jl
out
cmovs
stos
inc
jl
pop
xchg
xchg
jmp
xchg
pop
test
inc
jl
mov
popf
ds
mov
data16
ret
sbb
test
sub
gs
adc
stos
dec
hlt
add
inc
pop
repz
cmps
in
cld
(bad)
jo
jns
sub
xchg
mov
movs
ja
mov
cmp
movs
fistp
pop
shr
xchg
add
scas
jecxz
mov
loope
jmp
mov
push
out
push
cs
pop
out
and
hlt
test
repnz
push
sub
daa
mov
ror
sbb
mov
mov
ins
in
push
sahf
mov
mov
dec
mov
ja
repz
sbb
xor
sti
fist
sub
pusha
jle
mov
xor
mov
fsub
mov
jp
int
xchg
test
jl
int3
xchg
push
pop
and
inc
sub
cmp
mov
lea
lea
popa
inc
or
pop
in
(bad)
in
mov
leave
sbb
addr16
push
rcr
mov
adc
adc
sahf
mov
shl
xchg
aaa
in
out
push
aas
out
pop
mov
and
push
jnp
or
(bad)
mov
mov
cmps
ins
push
aaa
xor
popf
(bad)
adc
loope
jnp
mov
dec
pushf
dec
mov
dec
push
push
add
(bad)
in
xlat
dec
fnclex
aad
push
xlat
jno
nop
adc
sub
mov
add
lock
push
mov
pop
popa
sbb
adc
pop
mov
xor
adc
pop
(bad)
mov
movs
jo
imul
push
popa
cmc
xchg
push
pop
jl
jmp
rcl
stos
sbb
inc
lds
into
stos
pop
cmps
jmp
fisttp
out
(bad)
(bad)
test
or
fisubr
outs
or
jnp
push
aad
repnz
jecxz
cdq
pop
sub
scas
lods
out
push
outs
jae
out
jno
lea
mov
pop
shr
mov
fnstsw
push
stos
pushf
mov
and
jge
dec
loop
dec
xor
in
sar
popa
das
inc
add
and
xchg
and
jge
(bad)
fst
ds
scas
dec
call
xor
xlat
pop
mov
and
in
sub
mov
setno
pusha
mov
sti
cmp
pop
inc
bound
cmp
mov
cmp
inc
aad
jo
cld
retf
int
jns
(bad)
push
adc
add
aas
xor
pop
aam
pop
in
(bad)
div
daa
in
into
aad
(bad)
aaa
lock
pop
retf
xchg
pop
xor
inc
test
mov
aad
or
or
rol
sub
mov
ja
arpl
call
addr16
sahf
push
mov
pop
shr
add
das
sbb
int
jmp
pop
jge
push
pushf
jo
inc
repnz
inc
mov
rol
xchg
pop
xor
xor
std
dec
push
add
mov
add
push
das
ret
inc
test
push
inc
test
(bad)
fist
aad
ds
mov
and
gs
rol
out
adc
rol
in
sbb
mov
pop
fmul
or
xchg
cmp
outs
cs
jg
imul
in
sub
sub
pop
mul
mov
dec
ret
jmp
addr16
add
push
in
lods
in
jae
fsubr
or
iret
and
scas
or
jg
(bad)
scas
sub
add
pop
lods
push
xor
dec
ja
rep
pop
nop
aaa
arpl
les
ret
arpl
aaa
cwde
sub
into
aas
ret
call
jp
xchg
xchg
nop
int
inc
out
pushf
jecxz
dec
enter
jmp
inc
adc
stc
cdq
cld
jg
push
sub
adc
pushf
loop
mov
and
clc
cs
xor
or
inc
bound
mov
imul
inc
out
inc
iret
sar
ds
push
mov
cwde
pushf
je
jae
xchg
add
mov
in
stos
sub
loope
mov
(bad)
pushf
bnd
(bad)
xor
inc
mov
push
mov
ret
and
push
cmp
cmps
add
lock
mov
jp
imul
pop
inc
into
aaa
nop
push
bound
int
icebp
and
hlt
int
sbb
pop
addr16
pushf
mov
pop
ins
push
leave
rcl
pop
jbe
stos
or
pop
jg
loopne
and
call
call
cmp
jmp
dec
shl
popf
adc
cmc
fldcw
hlt
jmp
out
aas
(bad)
in
pop
int3
stos
cmps
in
rol
test
pushf
sub
sbb
and
lea
inc
out
(bad)
mov
or
mov
mov
retf
mov
pop
jmp
imul
cld
dec
push
dec
test
cld
neg
(bad)
push
aas
aam
popf
sbb
sahf
and
movs
data16
shl
or
test
mov
fwait
fs
mov
shl
xchg
mov
lahf
or
jno
inc
xor
sbb
push
jns
outs
xor
jg
and
pushf
(bad)
pop
out
or
xor
cmp
jne
xor
jecxz
add
scas
sub
dec
add
inc
imul
mov
pop
fdiv
adc
jge
cmp
jbe
cmp
rcl
pop
dec
push
inc
sub
adc
pop
pop
inc
dec
imul
cmps
jp
add
fimul
ds
push
aam
dec
xor
stos
push
les
push
cs
nop
sbb
pop
(bad)
int
mov
xchg
je
test
ins
shl
sub
jmp
pop
xor
rcr
lea
shr
ret
push
jle
jg
clc
adc
mov
adc
sbb
(bad)
fcomp
mov
xchg
cwde
and
adc
push
stc
xchg
ret
pop
nop
(bad)
push
ret
xchg
in
test
mov
in
xchg
push
in
and
rol
stos
sub
jae
pop
ret
fist
push
cmps
mov
xlat
test
pusha
cmps
push
call
daa
ja
mov
inc
mov
out
jp
pop
movs
sub
xor
shl
retf
clc
loope
(bad)
jne
and
xor
ja
out
cmp
pop
mov
leave
adc
pusha
ds
(bad)
dec
rol
push
addr16
cwde
jae
sbb
icebp
pop
loop
xchg
pop
dec
fisubr
push
ret
mov
xchg
mov
enter
loopne
xor
and
shl
mov
push
pop
add
cld
call
in
cmps
push
xchg
push
ret
ret
cmps
jmp
push
mov
jg
movaps
lods
lds
imul
loop
cmc
sub
scas
(bad)
aam
lods
ror
sbb
push
cs
pop
mov
test
lods
xor
pop
push
mov
in
jmp
ins
stc
(bad)
les
or
dec
cmc
inc
pop
cs
in
and
aam
pop
sub
sub
sbb
es
sahf
outs
fs
aad
call
shl
jecxz
dec
push
xor
xor
mov
jae
les
(bad)
cmp
mov
dec
out
(bad)
outs
sbb
inc
out
daa
push
movs
ins
ficomp
sahf
push
lods
jnp
outs
jb
mov
push
cmp
sbb
and
push
out
inc
popf
aam
es
mov
mov
cli
dec
inc
loop
nop
lea
or
cmp
fdiv
mov
stc
mul
mov
stos
mov
aas
test
mov
xor
ja
add
jne
dec
int3
mov
xchg
or
cmp
mov
fadd
test
sbb
or
fcomp
push
push
mov
cdq
add
xchg
mov
mov
cli
sub
pop
repz
jo
mov
daa
popf
sbb
cmp
ins
jb
rcl
push
sub
(bad)
xor
addr16
pop
popa
lods
sub
sbb
cdq
jl
mov
ins
jp
call
jg
add
sub
xchg
cmps
mov
nop
in
movs
xchg
leave
jbe
cmp
xor
iret
jmp
movs
xor
inc
pop
sub
xchg
fimul
icebp
jne
add
arpl
fwait
sub
aaa
push
xlat
dec
push
dec
outs
dec
repz
sbb
icebp
xchg
pop
out
jno
mov
mov
mov
retf
jle
inc
cmps
shl
cmc
add
in
sbb
aaa
dec
or
xor
(bad)
and
jbe
fcmovnbe
sbb
in
xchg
jbe
jmp
inc
pop
inc
add
push
xchg
jne
pop
push
pop
lods
mov
push
dec
sbb
mov
nop
jge
mov
sub
xchg
mov
les
gs
faddp
hlt
xor
push
lods
xor
dec
push
xchg
stos
(bad)
sub
ss
mov
arpl
jl
test
push
repz
jg
into
stos
ins
stos
(bad)
jae
sub
repz
sbb
mul
sub
or
aad
clc
add
mov
adc
cld
stos
pop
inc
adc
inc
push
cmps
mov
dec
fs
bound
sti
mov
sub
outs
fistp
xor
ret
pop
mov
push
int3
push
cmp
test
xchg
or
inc
sbb
and
ror
mov
gs
arpl
addr16
stc
push
sbb
inc
out
and
cmp
jo
mov
sub
xor
sub
inc
imul
es
call
out
mov
in
test
xchg
xchg
ret
imul
inc
lods
or
mov
pop
inc
stos
fwait
push
sbb
gs
out
pop
inc
std
fild
test
xlat
repz
xchg
cmp
push
outs
push
cwde
int
iret
and
dec
mov
pop
add
sahf
enter
cmp
dec
test
dec
movs
and
sbb
in
cmc
call
int
fld
cmp
dec
int
pop
aam
mov
cmc
bound
popf
std
into
jle
nop
xchg
outs
mov
push
xor
add
test
call
icebp
pop
cli
jb
jg
lea
xlat
(bad)
mov
xchg
sub
gs
mov
mov
push
out
pop
dec
push
sbb
retf
pop
jp
add
mov
pop
arpl
push
iret
xchg
jae
ins
pop
dec
outs
lds
xchg
adc
and
imul
dec
jmp
fsub
neg
test
add
or
inc
mov
test
mov
pop
or
rcl
dec
mov
in
inc
sbb
inc
jmp
fidiv
cmp
(bad)
push
jo
inc
jl
gs
mov
out
nop
mov
out
mov
js
scas
push
ja
jl
xchg
xlat
(bad)
das
add
jo
mov
das
jge
pop
mov
add
push
pop
and
adc
pop
pop
cwde
inc
lods
pop
xchg
arpl
pop
mov
add
movs
(bad)
pop
pop
mov
lock
into
retf
test
mov
test
out
mov
(bad)
popf
or
sahf
mov
fmul
adc
mov
leave
fild
fstp
in
mov
das
(bad)
fcom
loope
add
push
sahf
adc
call
add
dec
inc
mov
retf
pop
xchg
add
or
push
mov
js
add
lea
scas
push
sub
mov
push
hlt
xlat
call
loope
xlat
stos
dec
push
mov
stc
scas
lods
push
push
adc
or
stos
xchg
pop
sub
je
push
test
xchg
xor
cmp
fs
ins
mov
movs
dec
pop
adc
scas
sub
add
adc
inc
lods
jae
(bad)
ds
loopne
and
or
dec
push
sub
pop
and
gs
sub
cdq
jmp
stc
jne
mov
rcr
cdq
xchg
jg
ror
or
jg
jecxz
sub
dec
mov
pop
push
daa
push
push
test
lahf
adc
out
pop
push
ret
imul
jp
movs
mov
mov
shl
popf
fdivr
mov
xor
lods
mov
idiv
and
xor
jmp
ins
scas
and
aas
or
dec
test
js
pop
add
mov
clc
jae
dec
shr
inc
arpl
ret
ds
(bad)
movs
cwde
jp
aam
push
add
loopne
call
ja
shr
fsub
ds
lods
mov
mov
jb
cmp
popa
loop
(bad)
retf
cmp
aam
add
xor
ficom
test
loope
ret
dec
ins
cwde
cmp
int
aas
out
cmp
inc
jmp
popa
(bad)
mov
jmp
and
(bad)
xchg
aaa
mov
push
xor
loopne
daa
fstp
nop
add
int
add
add
mov
mov
imul
pop
test
jns
pop
cdq
imul
jo
fmul
jle
xor
jo
jle
rol
dec
or
adc
rcr
call
lods
loopne
xchg
or
jp
jp
inc
sub
pop
out
popa
mov
push
(bad)
in
sub
push
and
xor
or
sbb
jo
sub
jae
mov
fsubr
imul
mov
imul
cmp
(bad)
movs
rcl
imul
jmp
sbb
stos
cli
sub
add
imul
test
xor
test
popa
into
push
pop
outs
sub
dec
(bad)
or
sbb
or
(bad)
sar
ins
ret
loopne
repnz
aaa
mov
dec
mov
mov
fsub
imul
pop
mov
mov
mov
ja
jle
inc
fimul
pop
and
dec
stos
add
inc
jl
shl
xchg
push
rcl
add
mov
(bad)
mov
or
cmp
dec
xlat
xchg
inc
addr16
(bad)
jmp
cld
ror
push
xor
retf
mov
lds
and
sti
adc
add
lock
and
ret
jp
xor
(bad)
andnps
inc
scas
call
retf
mov
arpl
dec
xor
fdivrp
jmp
cmp
push
daa
and
test
shl
data16
push
cli
add
outs
in
xchg
imul
xchg
sub
jnp
or
push
ins
xchg
push
fs
(bad)
xlat
jle
stos
push
pop
sub
ds
das
fldenv
test
mov
xor
xlat
adc
mov
jge
enter
and
fs
ficomp
or
dec
xchg
es
push
xor
pop
fdivr
movs
mov
enter
sub
adc
pop
dec
int
add
pop
es
mov
pop
xchg
hlt
std
mov
xchg
ss
dec
retfw
push
push
mov
lock
lods
ficom
or
aas
xchg
sbb
pop
out
mov
mov
std
sub
stos
rcl
dec
sub
scas
out
dec
imul
cmp
and
sub
out
pop
xor
mov
invd
mov
jge
push
test
ins
cmps
xchg
cmp
repz
cwde
jmp
call
inc
pop
sub
popf
jmp
arpl
push
aam
xchg
cmp
cmc
xchg
ror
fstp
outs
pusha
lods
sub
(bad)
push
inc
or
pop
or
or
jno
mov
sub
(bad)
mov
pusha
sahf
mov
sbb
lock
popf
arpl
aaa
push
add
(bad)
jge
mov
sar
xchg
or
lods
in
movs
cs
(bad)
lods
int3
inc
mov
shl
pop
fisttp
pop
and
ret
mov
mov
mov
push
loop
sub
outs
(bad)
out
or
xchg
or
pushf
(bad)
cli
leave
out
or
je
fs
fs
clc
out
and
outs
and
inc
test
mov
pop
loop
pushf
out
xchg
cmp
lods
adc
ret
xchg
sbb
xor
mov
dec
push
test
sub
push
mov
and
xchg
mov
cmp
outs
les
cmp
mov
inc
sub
ja
jmp
mov
dec
je
std
push
ins
push
sub
push
pop
pop
xor
push
add
movs
cld
jne
rcl
out
push
xlat
retf
cmp
cli
stos
dec
leave
jne
add
gs
mov
out
bound
push
push
repnz
sub
jae
jg
int3
mov
daa
xor
mov
sub
push
imul
iret
shr
ror
aam
push
pop
xor
xor
and
push
dec
inc
sahf
jo
aam
mov
mov
shl
js
or
pop
daa
or
hlt
push
sub
ficom
inc
jae
fmul
cld
push
and
pushf
dec
ss
cmps
dec
jp
jge
lahf
dec
jnp
ret
mov
rcl
inc
add
pushf
(bad)
aaa
retf
cli
loopne
call
add
mov
or
xor
(bad)
jmp
mov
cdq
imul
loop
call
dec
repnz
jmp
std
std
inc
dec
lock
push
push
jbe
mov
or
and
adc
(bad)
gs
das
cmps
ins
movs
sbb
dec
jno
dec
outs
pop
cmp
in
mov
movs
inc
push
lahf
push
jne
mov
pop
fs
mov
scas
dec
sbb
dec
std
inc
mov
pandn
jp
movs
inc
les
xchg
mov
js
ja
pop
popf
cs
aad
mov
test
cmp
ja
mov
push
adc
mov
add
data16
xlat
xchg
pop
leave
mov
into
nop
faddp
pop
xor
(bad)
in
or
in
mov
or
cwde
push
scas
loopne
in
stos
push
ds
neg
stos
test
addr16
int3
pop
xchg
scas
cmp
and
mov
add
push
icebp
loop
xor
add
out
mov
inc
lods
or
mov
(bad)
or
or
jb
popf
outs
jle
in
xor
add
lea
xor
cmp
fmul
aad
jle
xor
push
lahf
push
inc
in
adc
cmps
ins
cmp
fiadd
aas
je
xchg
jmp
cmp
xchg
fld
imul
ret
pop
inc
mov
shr
scas
lahf
jg
xor
out
cs
mov
addr16
sar
pop
xor
cmp
add
sub
sub
add
shr
sub
stc
addr16
lods
and
mov
inc
jne
mov
add
ins
stos
add
popa
jg
adc
cmc
or
movs
(bad)
jl
or
mov
test
jecxz
sub
call
push
xchg
fs
jl
pop
mov
sbb
ss
add
repnz
stc
cmc
mov
sub
sbb
push
and
xchg
pop
mov
mov
addr16
clc
sbb
jmp
jno
add
mov
adc
pop
call
jle
xchg
adc
dec
xchg
ret
cwde
repnz
inc
popf
cdq
movs
(bad)
mov
mov
fcmovnu
pop
les
push
les
dec
sub
retf
cld
jmp
psrlq
retf
jl
mov
mov
retf
push
std
sub
jmp
mov
jnp
aas
scas
mov
aaa
mov
loopne
dec
pop
inc
test
adc
inc
jecxz
aad
pop
addr16
test
or
inc
jg
ss
mov
xchg
mov
sti
jbe
pop
aad
adc
shl
add
hlt
push
sbb
sub
shr
jo
xchg
arpl
(bad)
mov
es
xor
sbb
adc
xchg
test
aaa
retf
cmps
pop
inc
fnstenv
push
(bad)
mov
or
pop
jns
push
mov
xchg
retf
gs
fidivr
out
sar
mov
into
add
outs
inc
fadd
mov
dec
xor
mov
push
jns
fiadd
jae
fbld
test
outs
ret
(bad)
fdiv
scas
cmps
dec
dec
pop
rcl
xchg
adc
aaa
(bad)
fiadd
jg
xchg
js
fistp
sub
repnz
jnp
push
push
lds
xor
xor
div
adc
cmc
jne
or
retf
mov
mov
cmps
mov
fwait
xor
sub
arpl
icebp
div
push
(bad)
or
loop
xor
inc
push
repz
xchg
test
or
(bad)
fsub
mov
add
cli
test
gs
out
into
scas
push
js
jae
les
sub
pop
xchg
xchg
fstp
push
outs
jmp
and
push
jle
dec
in
cmp
inc
test
retf
pop
jno
ja
jge
sub
js
mov
jecxz
push
inc
xchg
loope
frstor
mov
push
out
jge
dec
not
jo
or
loopne
leave
(bad)
imul
and
mov
dec
loop
or
or
sbb
sub
mov
movs
mov
repnz
les
jae
fisttp
fwait
mov
mov
xchg
and
xchg
movs
loop
jne
cmps
jle
sar
mov
in
pushf
mov
stos
push
jns
(bad)
xchg
inc
add
push
adc
scas
cmc
int
ficom
cmp
into
sub
mov
pop
mov
es
arpl
jbe
shr
mov
xchg
es
add
cld
ins
pop
jp
fstp
pop
pop
push
sbb
jmp
cmp
sti
push
nop
cmp
enter
mov
leave
in
mov
repz
loope
dec
dec
push
lahf
xchg
add
stos
imul
rol
jae
or
lahf
(bad)
sub
mov
or
(bad)
std
mov
xchg
cld
add
lods
movs
cmp
dec
inc
jmp
adc
cmps
push
sub
shl
mov
out
xchg
popf
xor
adc
stc
movs
stc
mov
shr
mov
sub
sbb
div
cwde
xchg
add
mov
and
ja
(bad)
lahf
(bad)
sbb
bound
jmp
or
retf
stc
push
cmp
pusha
jns
enter
xchg
fidivr
es
popa
pop
mov
arpl
bound
daa
adc
push
outs
and
(bad)
movs
stc
es
dec
xchg
mov
cmp
call
pop
into
sahf
cmp
shl
mov
dec
inc
pop
rcl
arpl
jecxz
jno
fwait
outs
int3
mov
outs
stos
out
jae
jp
xchg
pop
mov
fisttp
add
sub
cwde
xor
ja
call
addr16
mov
or
jmp
adc
cs
ja
fs
xor
loop
push
fstp
push
pop
in
leave
or
cdq
retf
pop
adc
inc
dec
mov
sub
mov
arpl
stc
mov
les
hlt
or
cmp
mov
mov
into
pop
mov
mov
pushf
ja
call
ins
pop
jmp
jnp
inc
and
out
dec
inc
push
push
jmp
lds
gs
dec
jmp
push
call
mov
push
jbe
mov
inc
or
mov
xchg
jp
sbb
lds
retf
loope
sar
lock
pop
(bad)
(bad)
bnd
jp
imul
jmp
mov
cmc
ss
pop
(bad)
jle
enter
inc
xchg
lahf
or
jge
mov
push
xchg
or
test
cmp
outs
push
sahf
push
aam
add
ins
mov
xchg
inc
(bad)
mov
iret
test
in
jbe
pop
ret
sbb
mov
cmp
ret
fwait
lods
outs
jo
sti
pop
or
xchg
ja
fidivr
xchg
enter
pusha
mov
pop
retf
ins
xor
push
fld
movs
fiadd
mov
and
daa
aas
scas
fist
ret
loope
push
out
loope
jle
shr
mov
or
mov
rcr
jl
sub
jmp
lods
fnstenv
call
cmp
out
in
mov
jecxz
jo
icebp
xchg
and
and
in
sub
pop
add
mov
mov
xchg
xchg
cmp
mov
fwait
dec
xchg
mov
xchg
cmp
out
cld
and
inc
rcl
inc
cmp
dec
mov
lds
push
fs
or
mov
in
and
imul
adc
and
sub
dec
(bad)
or
adc
loope
aam
fucom
jecxz
fld
data16
sbb
sbb
xchg
sub
inc
push
mov
std
js
imul
jb
not
pop
and
pusha
fcom
cwde
adc
mov
pop
enter
movs
jl
popf
and
mov
pusha
sahf
loop
jmp
or
(bad)
mov
sub
cli
add
in
and
sar
or
mov
outs
fisttp
aas
ss
dec
jecxz
and
sti
in
push
push
cld
jne
mov
into
das
mov
xchg
push
add
stc
pushf
pusha
cmp
pop
push
data16
pop
pusha
add
movs
xor
arpl
das
dec
nop
stos
adc
push
pusha
mov
push
push
lods
push
gs
cmp
addr16
sub
xchg
xor
sahf
icebp
in
and
movs
adc
lock
mov
dec
push
js
(bad)
adc
inc
jbe
dec
add
pop
cmps
push
jne
sbb
jns
jge
out
div
idiv
sar
push
jb
and
retf
mov
repnz
mov
retf
(bad)
(bad)
cmp
fmul
fistp
cmp
push
dec
cmp
push
or
push
mov
aas
call
or
xor
mov
or
std
push
jns
aaa
fucomi
in
inc
outs
xor
pop
fs
adc
arpl
cmp
fdivr
push
xor
mov
jmp
jmp
pop
xor
lea
jae
mov
les
xchg
xchg
aad
(bad)
ins
xor
push
outs
stos
add
sub
inc
cmp
imul
fimul
inc
inc
(bad)
mov
mov
test
xchg
outs
scas
cmp
retf
jo
push
ret
pop
mov
std
leave
push
jbe
mov
push
pushf
dec
add
test
sbb
pusha
pop
pop
aad
shr
in
and
stos
mov
mov
ins
and
push
xchg
(bad)
and
jge
mov
fwait
xor
scas
nop
cmp
cs
cmp
cmp
fiadd
jge
add
add
push
inc
xchg
cmps
cmc
repnz
aaa
fistp
jns
aam
out
pop
lods
outs
leave
sub
ss
ret
dec
int3
stos
stos
inc
mov
dec
add
ins
cmp
aam
arpl
inc
test
mov
cdq
inc
cdq
or
mov
xchg
mov
jbe
cmps
in
rol
pop
adc
rcr
jo
lahf
daa
and
(bad)
jge
pop
pop
push
and
dec
std
pop
mov
cmps
mov
push
out
int3
push
mov
mov
pop
dec
movs
adc
gs
xor
es
lds
mov
dec
out
aaa
mov
add
(bad)
fidiv
sbb
sub
sbb
test
adc
movs
push
add
or
xchg
cmp
mov
bound
movs
mov
je
loope
out
mov
sub
cmp
cwde
repz
sub
out
and
gs
push
(bad)
out
xchg
or
mov
out
inc
jnp
mov
pop
hlt
repnz
or
xchg
das
inc
aas
hlt
xchg
mov
iret
lods
inc
aam
sbb
pop
sbb
fnstsw
data16
mov
in
xchg
ds
daa
inc
cmp
xor
push
and
mul
dec
fucomip
shl
cdq
gs
add
push
xor
and
xor
pop
pop
scas
das
and
push
inc
fnstcw
shl
add
jae
cwde
int3
xchg
mov
sar
jae
outs
cmp
popf
popf
out
sub
inc
or
retf
push
jl
sahf
push
inc
or
fsubr
push
or
mov
ds
sbb
lods
test
out
lds
aam
jne
dec
sbb
jb
jl
aaa
repz
daa
push
mov
sbb
popf
inc
mov
or
cmp
cmp
enter
jge
dec
shl
repz
(bad)
repz
stc
idiv
shr
lahf
pop
mov
ins
or
arpl
mov
loope
frstor
gs
mov
scas
sbb
fstp
fsubr
movs
sub
dec
outs
dec
aad
cs
xor
movs
mov
mov
lods
mov
cmp
fild
mov
push
sbb
nop
std
jns
(bad)
mov
jae
rcl
sbb
mov
movs
cwde
inc
sub
aam
fisubr
in
mov
in
and
call
and
xlat
out
popf
retf
cmp
lahf
setp
test
mov
stos
xor
inc
rol
mov
outs
mov
mov
xor
dec
mov
loop
xchg
pop
mov
inc
out
mov
movs
add
xor
xlat
loopne
or
jge
xchg
mov
cmp
ds
int
push
lea
add
loope
cwde
pop
cdq
sub
sahf
fwait
(bad)
sub
and
repz
hlt
xor
inc
fisubr
(bad)
aam
push
sti
push
xchg
adc
adc
call
xchg
jno
adc
pop
(bad)
out
shl
cmp
rol
inc
pop
push
(bad)
es
cs
pop
xlat
sbb
jne
xor
arpl
add
aaa
sbb
jb
xor
test
jnp
daa
jns
sahf
mov
and
jmp
das
aas
dec
pop
push
into
pop
pop
xchg
jg
(bad)
pop
call
lds
add
xlat
out
scas
mov
fnstsw
add
aam
sub
add
add
pop
retf
ins
fcom
add
add
inc
das
dec
scas
outs
inc
cmps
cld
clc
mov
xchg
lods
ret
cld
mov
add
jecxz
add
mov
fs
mov
sub
sahf
arpl
pop
into
jmp
scas
pop
lods
sub
cmps
adc
sahf
jecxz
inc
mov
jmp
sub
mov
sahf
lahf
jo
mov
fmulp
inc
jge
adc
inc
ror
mov
push
bound
out
add
out
cmc
movs
loop
ficom
jle
xchg
jnp
pop
pushf
cli
push
fwait
stc
mov
xchg
cmc
mov
mov
sub
dec
jbe
jne
xlat
cmp
cmp
lods
mov
jge
or
je
je
push
add
xchg
adc
xchg
cmp
pop
aaa
adc
adc
in
fmul
jecxz
loopne
icebp
mov
sbb
jge
shr
sbb
cmp
aaa
bound
inc
fisubr
icebp
iret
pop
je
test
adc
adc
inc
pop
int3
outs
pop
adc
xchg
cdq
dec
and
pusha
xor
int
cli
cmp
adc
clc
loope
dec
gs
fsubrp
dec
frstor
xor
js
mov
mov
adc
ret
cmp
(bad)
scas
jge
sub
pushf
xor
popa
loopne
stos
outs
scas
push
xchg
sbb
push
rol
push
fnstenv
adc
add
mov
push
xchg
jmp
retf
jns
shl
dec
cmp
movs
add
or
mov
push
popf
inc
sbb
fistp
inc
push
retf
movs
daa
mov
mov
xor
repz
in
jns
dec
lods
or
pop
and
mov
sub
test
rcr
fisubr
mov
std
inc
mov
adc
push
jne
adc
inc
inc
dec
pop
mov
mov
pop
mov
cmc
mov
jle
push
mov
jmp
dec
adc
adc
sub
fwait
repnz
cmps
call
addr16
jmp
ret
sbb
jp
call
xchg
xchg
mov
jmp
in
bound
outs
pop
mov
out
mov
pop
es
pop
int
dec
call
mov
pop
call
or
sbb
mov
pop
mov
add
or
cmp
sub
push
adc
pop
outs
or
sub
or
add
mov
gs
xor
sub
inc
push
xchg
mov
(bad)
push
mov
in
lods
sub
(bad)
dec
mov
xor
pusha
(bad)
lods
shl
inc
sbb
cmp
mov
fwait
retf
inc
pushf
push
mov
popa
dec
shl
cs
adc
lods
fstp
xor
test
mov
imul
pop
mov
and
daa
rcr
aad
ror
fsubr
mov
inc
cmp
int3
cmp
and
and
pop
rcl
or
sub
clc
mov
popa
(bad)
cld
nop
(bad)
mov
inc
jl
mov
xchg
sbb
aaa
ins
lock
xchg
daa
icebp
inc
rcr
test
inc
mov
sbb
and
jp
add
mov
iret
xlat
popf
mov
(bad)
sub
add
movs
adc
inc
mov
mov
cmp
popf
and
and
mov
ins
pop
mov
sub
xor
or
fnstcw
sahf
push
push
ret
sub
mov
sbb
out
adc
add
sub
cmp
mov
adc
fucomp
cli
sub
pusha
and
imul
fdivrp
mov
sti
sbb
mov
xchg
rcl
out
dec
dec
and
data16
xchg
imul
loopne
xchg
retf
nop
cmp
mov
(bad)
pusha
retf
mov
mov
jno
cmp
jecxz
ror
cwde
mov
add
push
push
outs
fsubr
mov
push
je
xor
add
enter
movs
(bad)
in
push
adc
inc
xor
fimul
pop
test
inc
mov
sub
lds
push
jg
cmps
xchg
lds
pusha
and
mov
cld
fld
outs
lods
sub
gs
xchg
not
popa
add
outs
in
push
adc
xor
mov
les
leave
jo
adc
test
rcr
xchg
jne
inc
cs
rcl
cs
int
aas
imul
in
out
mov
or
cmp
dec
inc
sub
aam
push
aad
mov
lea
mov
sbb
loopne
mov
mov
aas
push
out
lahf
xor
jle
lds
sub
push
and
inc
es
in
mov
and
cmc
mov
mov
jl
mov
fs
inc
fldcw
(bad)
jecxz
mov
xor
test
popf
inc
cmpps
push
cmp
push
adc
pop
pop
dec
scas
std
xor
jl
push
adc
pop
outs
pop
adc
cmc
jp
ret
adc
add
pusha
ss
and
xchg
imul
int
mov
inc
cmp
pop
xchg
mov
rcr
push
ds
xor
fsub
icebp
mov
sti
mov
mov
mov
dec
xor
mov
shr
hlt
js
or
and
xchg
enter
addr16
inc
sbb
and
fisubr
gs
mov
and
cwde
cmp
arpl
push
loopne
fwait
or
ret
mov
cmp
mov
retf
call
cmp
pop
sbb
mov
sti
or
mov
sahf
sbb
mov
cmp
loop
aaa
sbb
jne
add
dec
das
movs
in
fisttp
jb
cmps
fimul
scas
fdiv
ss
enter
inc
nop
jle
and
push
into
mov
mov
test
push
add
xchg
shr
dec
shr
inc
jmp
cmp
ret
adc
daa
imul
shl
stos
pop
mov
pop
lods
mov
pop
and
movs
aas
(bad)
aad
out
dec
das
call
shl
lea
and
inc
pop
fist
sub
call
inc
(bad)
out
xchg
leave
xor
pop
retf
or
imul
dec
sbb
ror
pop
cmp
adc
jmp
adc
add
jg
mov
leave
aam
adc
out
in
cmp
loop
mov
cmp
inc
or
test
ins
mov
add
inc
out
cwde
call
test
xor
fistp
je
mov
mov
sti
into
sbb
inc
mov
stc
in
xchg
ret
into
loope
add
addr16
inc
jo
and
idiv
fild
pop
or
in
mov
icebp
stos
cmc
in
sub
cwde
repz
add
xchg
dec
stos
mov
add
add
inc
es
mov
repz
(bad)
mov
push
sbb
sub
jmp
jge
mov
mov
jmp
add
jno
cdq
sub
fcmove
vmread
mov
repnz
dec
and
mov
sbb
jmp
or
mov
push
sub
ja
cli
pop
retf
fwait
mov
and
inc
jb
outs
movs
jno
(bad)
fucom
xor
mov
jns
sbb
adc
xchg
pop
mov
pop
fs
aaa
inc
fisubr
fcmovb
ret
call
mov
dec
scas
adc
cld
push
jno
pop
xchg
inc
cmps
scas
push
xor
lods
mov
clc
mov
aaa
xor
scas
cmps
mov
push
ror
xor
sahf
ins
movs
add
sahf
and
cmps
int3
pxor
int
(bad)
mov
xchg
mov
add
cmp
add
xchg
adc
inc
fnstsw
dec
dec
mov
neg
or
inc
xchg
aaa
pop
cmp
jecxz
mov
jne
or
enter
es
pushf
inc
or
adc
mov
std
arpl
and
mov
inc
dec
fadd
inc
jl
fisubr
and
cs
lods
div
jb
dec
pop
jne
ror
fwait
cdq
adc
lahf
or
stos
aaa
xchg
ret
mov
or
jl
shr
aad
and
pop
ins
repnz
int
pop
outs
sbb
add
and
fs
enter
scas
xchg
mov
in
clc
(bad)
in
fldz
rcr
lock
xchg
mov
mov
pusha
jnp
jge
inc
sbb
mov
jmp
pop
loope
mov
mov
xchg
pop
movs
push
mov
adc
mov
rcl
cwde
imul
pop
pop
daa
jno
rol
dec
in
dec
mov
push
aaa
push
inc
pop
and
fadd
test
push
in
lods
ret
sub
popf
aam
mov
cmps
aad
push
sub
jle
push
ss
cmp
mov
(bad)
push
jno
ficomp
test
retf
addr16
(bad)
fadd
pop
jmp
data16
pushf
sahf
add
repnz
gs
pop
in
sbb
push
loopne
xlat
dec
xchg
mov
mov
fnstenv
pop
ret
loope
dec
jg
psrad
push
test
cmp
cmp
sbb
outs
imul
pop
xchg
lods
inc
add
jmp
popa
out
mov
or
inc
outs
out
xchg
lahf
arpl
dec
adc
jecxz
leavew
test
cmp
mov
dec
je
xor
push
cmps
inc
xor
mov
sub
push
jmp
rol
aas
test
mov
mov
repnz
cmps
sbb
xchg
repnz
xchg
aas
pop
outs
or
stos
xchg
fldl2e
inc
cld
mov
mov
mov
cli
sub
mov
cmc
cmc
jmp
sbb
cmp
or
lea
jo
call
or
in
sub
xlat
out
dec
mov
push
push
aaa
xchg
mov
mov
mov
ss
out
pop
sub
std
sub
jae
out
add
mov
scas
bnd
jb
aam
imul
xchg
les
daa
jl
pop
call
jne
jae
mov
jg
pop
push
sub
push
mov
scas
mov
inc
mov
cs
dec
sbb
mov
vorps
dec
xchg
faddp
mov
leave
add
gs
pop
or
(bad)
jne
sbb
into
fwait
retf
(bad)
es
sub
xchg
cwde
cmp
(bad)
jae
aas
int
fwait
xchg
iret
jns
in
pop
pop
loopne
inc
repnz
inc
pushf
cs
shl
sbb
mov
into
pop
jmp
shr
imul
inc
sub
(bad)
repz
sbb
rol
stc
ret
dec
ja
cs
out
xchg
shr
jge
lock
mov
inc
inc
fidiv
aam
inc
cmps
add
or
loop
jl
mov
out
cmp
push
xor
cmp
jne
pop
sub
cmp
in
jno
fs
pop
sbb
hlt
or
xchg
cmp
retf
lahf
sbb
ins
loop
jge
mov
icebp
and
and
adc
ret
add
sbb
lock
addr16
mov
das
xlat
into
stos
loopne
test
mov
push
sub
retf
xchg
mov
inc
pop
or
fwait
xchg
mov
sar
aam
aaa
push
aaa
pop
xchg
sub
adc
push
or
mov
jbe
cmps
push
icebp
jno
icebp
cmps
test
or
into
push
xor
cdq
mov
lods
fs
jbe
popa
bound
pop
arpl
pop
lods
add
stos
sub
sahf
cmps
test
aam
cmp
lahf
sbb
fisub
aas
adc
add
inc
ror
movs
mov
mov
sub
pop
dec
xor
mov
mov
(bad)
shl
fdivrp
sbb
outs
sub
loop
shr
jno
or
mov
ficomp
sbb
rol
dec
jg
enter
adc
out
jnp
pusha
fcmovu
pop
push
push
int
aaa
push
ret
xor
sbb
mov
push
add
sub
dec
mov
sub
sbb
dec
int
ss
lods
mov
push
jge
in
mov
jmp
xchg
shl
fs
dec
jmp
out
xor
arpl
dec
jno
out
mov
push
rcl
inc
dec
in
jmp
xchg
(bad)
mov
call
lahf
fnstcw
into
cmp
in
mov
mov
cmps
sub
cmp
xor
popa
adc
pop
scas
cs
stos
cmp
push
test
add
ja
scas
int
xchg
dec
out
mov
xchg
cmp
int
cmp
pop
dec
or
jle
fs
push
cmps
push
outs
repz
mov
and
jb
push
int3
jle
jmp
inc
fbstp
xor
mov
jge
shr
mov
jl
fistp
pop
sub
sahf
jl
fist
cmp
add
xchg
popa
mov
mov
fwait
xor
xor
push
inc
mov
jae
cmp
jecxz
cmp
imul
movs
adc
dec
(bad)
mov
or
pop
mov
daa
sbb
cdq
fst
out
pushf
jg
sub
push
inc
jl
daa
sbb
in
mov
push
mov
mov
push
add
xor
clc
xchg
push
movs
and
inc
pop
mov
inc
push
jnp
dec
cmps
leave
dec
and
mov
xchg
push
fs
xor
adc
mov
jp
inc
iret
leave
sbb
or
loopne
xchg
sub
outs
mov
jge
or
jmp
(bad)
xchg
xchg
or
gs
in
mov
jmp
cli
in
mov
jp
mov
test
call
sub
imul
cld
xor
aam
or
xor
cs
xor
jle
add
test
jno
daa
shl
out
aad
dec
lahf
enter
sbb
mov
jne
mov
xchg
cmp
sbb
cmp
sub
and
and
dec
xlat
push
push
bound
fst
daa
aas
mov
and
popa
scas
add
mov
mov
fadd
sbb
fstp
xchg
adc
jg
cmps
push
sub
scas
and
xchg
mov
add
out
(bad)
inc
dec
or
xchg
xchg
out
sbb
gs
out
das
pop
clc
sub
sbb
and
loop
adc
mul
lock
js
mov
dec
popf
inc
sbb
xchg
sbb
jp
ret
icebp
sub
les
js
jne
retf
out
(bad)
in
inc
mov
pop
mov
ja
inc
inc
cli
pop
arpl
pop
xchg
inc
(bad)
adc
ficomp
mov
mov
xchg
inc
aam
mov
mov
xchg
popa
ret
sbb
and
jle
in
and
push
sbb
push
sbb
(bad)
mov
imul
inc
sahf
cmps
adc
xor
dec
inc
mov
(bad)
fs
test
cli
push
(bad)
in
clc
mov
push
shl
scas
inc
jno
push
cmp
std
pop
xchg
dec
hlt
dec
addr16
nop
(bad)
mov
cmps
add
outs
shr
out
cdq
fisttp
mov
mov
cli
aas
scas
inc
shr
in
stos
add
xchg
mov
cmps
fst
mov
adc
dec
mov
pop
sbb
xchg
jmp
xchg
mov
sbb
dec
push
mov
and
jmp
call
sahf
and
push
or
in
mov
fdivr
dec
shr
(bad)
jns
lds
mov
xchg
mov
jmp
and
jbe
jae
leave
aas
iret
ja
xor
cmp
xchg
or
in
in
xor
adc
ins
or
sub
mov
xor
push
xchg
mov
add
xchg
jne
mov
loopne
adc
mov
adc
xor
add
pop
lds
xchg
mov
cmp
addr16
adc
ss
inc
gs
scas
sbb
mov
xchg
push
or
int3
cmp
cwde
cld
mov
rcr
fild
dec
push
mov
addr16
(bad)
dec
pop
dec
hlt
mov
pop
icebp
cmp
mov
push
sahf
out
lea
shr
pop
adc
scas
jg
push
inc
adc
add
push
sbb
dec
shr
je
jmp
(bad)
sub
icebp
add
(bad)
addr16
push
xchg
cmc
xchg
out
pop
jbe
out
imul
jbe
sbb
jne
sbb
pop
je
dec
or
movs
out
pop
leave
jmp
loopne
or
sbb
jo
or
xchg
pop
xor
jno
dec
adc
jge
loopne
ret
outs
arpl
sub
inc
retf
das
in
mov
rcl
stc
mov
adc
imul
jmp
inc
mov
into
inc
pop
sub
std
icebp
cmp
(bad)
frndint
aaa
xor
in
xor
cmp
pop
xor
imul
mov
out
and
scas
pop
jl
mov
pop
mov
add
(bad)
in
and
aas
rcl
xor
inc
mov
mov
xchg
mov
jb
nop
mov
jne
xor
(bad)
sahf
pop
ins
push
cmp
movs
ins
ss
jno
movs
dec
mov
leave
out
fxch
add
fidiv
addr16
lea
cmp
rcl
hlt
or
mov
inc
mov
cli
or
aam
mov
mov
rcr
inc
imul
loop
or
and
inc
fs
mov
push
inc
out
scas
aas
test
dec
repz
outs
sub
fadd
leave
aaa
gs
sub
mov
into
in
jmp
std
mov
jbe
and
add
jo
arpl
cmc
push
and
sbb
rcr
cs
mov
fsubrp
out
xchg
push
lea
leave
add
sar
mov
mul
xchg
cmp
aaa
mov
mov
data16
rcl
mov
sbb
mov
cmp
lock
sti
push
iret
sub
loop
jbe
cmp
xor
loopne
mov
dec
dec
or
jl
mov
and
(bad)
retf
or
sub
mov
jmp
dec
push
cmp
dec
cmp
cmps
cmp
test
sbb
pop
stos
imul
or
call
xchg
test
inc
sub
aad
repz
div
adc
push
loop
mov
sbb
popf
pop
inc
mov
cs
aad
dec
sub
(bad)
fdivr
adc
xchg
ja
jnp
mov
cdq
stos
jle
inc
xchg
imul
add
outs
rcr
stos
js
mov
xor
sub
lds
movs
loope
add
cmc
sbb
movs
pushf
aas
arpl
cmp
jnp
fbstp
ins
add
hlt
out
sub
adc
jge
sub
push
cmps
xchg
outs
addr16
shl
cmps
dec
xlat
leave
dec
jb
xchg
mov
cmps
test
jmp
pop
jae
sub
mov
push
add
add
aam
in
jns
data16
adc
loop
jns
sub
lahf
leave
jne
pop
lds
int
test
das
fimul
and
es
retf
(bad)
(bad)
in
icebp
jae
dec
into
or
pop
out
xor
and
push
mov
stc
popf
in
cdq
ins
pop
adc
jns
xchg
xor
mov
push
push
push
push
sbb
mov
sbb
pop
cwde
ret
retf
sahf
into
pop
div
stc
push
pop
push
sub
push
retf
lods
add
ret
stc
shl
out
in
push
pop
fsubrp
mov
cmps
fst
xchg
cmp
movs
leave
sbb
xchg
add
hlt
push
dec
lahf
sub
sub
out
out
or
icebp
iret
dec
and
dec
jmp
dec
or
(bad)
push
adc
jmp
fwait
js
dec
jbe
leave
daa
sbb
ret
pop
mov
lods
pop
enter
movs
add
rcl
gs
adc
and
fbstp
das
jo
out
xchg
imul
mov
repz
xor
jbe
mov
push
cmp
cmp
neg
pop
addr16
scas
push
xor
movs
sbb
test
cmp
das
push
mov
push
nop
mov
add
cmp
xchg
je
fwait
xchg
imul
mov
sbb
sub
pop
cmp
(bad)
mov
outs
fsub
cmps
mov
test
dec
and
xchg
mov
mov
mov
mov
dec
inc
jmp
(bad)
xor
(bad)
jno
mov
or
xchg
int
(bad)
xlat
xchg
ftst
sub
inc
pop
jl
outs
test
scas
xor
push
mov
out
xchg
movs
cld
fisub
(bad)
push
or
xor
xchg
or
jmp
in
or
cmc
pop
test
xchg
mov
(bad)
pusha
into
inc
inc
jg
cmp
push
xor
fld
mov
xchg
push
xor
out
out
retf
sub
push
cmp
mov
xor
add
and
dec
adc
xchg
out
fwait
cmps
movs
dec
lds
jp
add
movs
aaa
loop
dec
ficomp
int3
stos
push
xlat
repnz
sti
adc
xor
idiv
call
xchg
sbb
mov
fnstenv
inc
leave
inc
enter
cmps
and
int3
fcom
jb
inc
cmp
pusha
add
xchg
xchg
aas
xor
scas
jp
test
rol
cld
cmp
xor
outs
sahf
push
imul
jmp
add
imul
push
sub
pop
scas
loope
mov
ss
icebp
mov
jg
add
scas
mov
sub
movs
dec
pushf
(bad)
pop
pop
xor
mov
jmp
jge
ret
je
test
xchg
mov
xor
test
cld
in
jp
mov
outs
aam
mov
adc
aam
mov
in
jmp
fnsave
jmp
inc
jns
mov
cmp
mov
cmp
lock
or
cmp
sbb
popa
jp
jnp
jge
pop
mov
loope
and
sub
sub
cmp
popf
xor
shl
push
jo
and
js
adc
pop
rcl
icebp
jno
ret
das
(bad)
leave
out
add
pop
pop
popa
call
pop
or
jmp
mov
mov
sbb
pop
int
ja
xor
adc
dec
xor
xchg
fldcw
sub
das
inc
jl
inc
or
mov
ror
stc
fwait
pop
jne
test
aam
(bad)
pop
adc
movups
xchg
jns
mov
or
bound
mov
lds
inc
push
scas
retf
xchg
xor
loopne
(bad)
lock
or
dec
jmp
adc
pop
imul
and
adc
adc
jecxz
cmps
mov
mov
inc
mov
adc
adc
aaa
pushf
ja
mov
aas
cmp
mov
in
aas
imul
ja
xor
fcomp
push
mov
mov
adc
sbb
sub
inc
stos
test
lods
or
xchg
lods
mov
jne
jp
mov
sti
inc
cdq
test
loope
jo
repz
cmp
pop
ss
mov
loope
push
enter
int
es
jp
push
sub
push
adc
pop
push
lea
pop
adc
jmp
pusha
and
adc
call
xor
pop
jbe
pop
test
fcom
cmc
push
sub
nop
rcl
cmp
sbb
(bad)
aam
push
inc
sar
into
xchg
popf
fisubr
iret
(bad)
aam
arpl
aas
loope
jmp
in
arpl
cmp
rcl
fistp
dec
sub
mov
fstp
pushf
int
mov
mov
ss
pop
xchg
and
mov
les
jae
jmp
sub
sub
dec
xor
sub
mov
cld
jg
mov
inc
mov
sbb
push
mov
(bad)
mov
js
pop
loope
lock
out
pop
mov
sbb
ror
sbb
cmps
xchg
push
push
shr
push
icebp
push
je
data16
mov
aaa
push
pop
sbb
icebp
in
cli
ficom
repz
jg
sbb
mov
add
(bad)
jo
lock
data16
push
mov
jl
inc
ret
mov
cmps
imul
sub
punpckhwd
mov
ins
test
int3
and
sub
jle
push
dec
pusha
xchg
aas
into
mov
mov
std
into
and
xor
out
mov
ret
not
pop
icebp
push
dec
jbe
out
mov
and
gs
mov
adc
ja
jae
jl
or
lds
in
mov
stos
jmp
mov
aas
add
test
cmc
inc
cmp
cdq
sbb
dec
stos
bound
dec
xchg
push
cmp
loop
pop
enter
dec
sub
push
lahf
cs
xchg
push
xor
fs
add
pop
mov
dec
push
gs
shl
out
cmp
push
sub
or
mov
gs
jge
push
cmp
mov
ins
rcr
lods
mov
shr
dec
data16
popa
imul
cwde
xor
fld
jl
rol
adc
mov
pop
pop
pop
mov
jle
ins
jb
enter
int
iret
sbb
inc
xor
arpl
mov
mov
mov
retf
loopne
cmps
mov
cwde
inc
or
cmp
sar
scas
sar
mov
stos
mov
inc
scas
out
mov
push
ins
nop
push
dec
mov
scas
(bad)
or
mov
fisub
xor
mov
add
popf
pop
mov
push
shr
add
loopne
jne
mov
loopne
adc
cmp
mov
int3
xchg
jmp
add
pop
adc
cmp
les
sub
pusha
pushf
push
cmp
jbe
ret
inc
cdq
movs
clc
(bad)
out
and
cmp
ds
mov
cwde
or
sub
mov
dec
scas
fldcw
lea
cmps
fist
popa
loope
fild
out
mov
mov
xchg
ret
inc
jbe
sbb
push
das
xor
jge
les
push
pop
add
push
div
in
out
mov
and
movq
mov
sbb
pop
mov
ret
xchg
pusha
push
fcmove
(bad)
xchg
in
dec
sbb
ret
jmp
das
in
int3
or
mov
ds
add
pop
adc
lds
xor
inc
pop
retf
jo
call
and
enter
aas
adc
pop
div
jl
jge
int3
in
ja
xor
(bad)
ret
sbb
out
inc
adc
retf
aad
out
and
xor
jae
lock
jg
imul
jno
lea
add
mov
add
in
adc
adc
jmp
jb
aaa
mov
(bad)
pop
or
cmp
(bad)
sti
fidiv
(bad)
lock
inc
daa
aam
inc
shl
and
mov
fcomp
dec
jnp
add
repz
icebp
stc
cmps
sti
inc
mov
xchg
mov
jo
mov
ja
ja
xor
pop
fstp
cmps
mov
sti
dec
popf
add
jle
jg
arpl
stos
pusha
push
div
jmp
leave
daa
shl
sub
movs
xchg
and
fistp
jbe
xor
push
or
arpl
jb
shl
fs
shl
fisubr
mov
jb
adc
(bad)
jnp
push
inc
pop
adc
pop
aam
sahf
test
mov
(bad)
mov
jmp
xor
mov
inc
out
push
push
ins
fstp
jl
shr
adc
mov
push
popf
lfs
dec
xchg
sbb
sar
outs
xor
mov
push
int3
adc
jno
pop
cs
nop
xchg
and
in
pusha
data16
(bad)
jo
or
inc
adc
push
out
(bad)
push
pop
push
ret
fdivr
push
mov
sahf
fst
sub
push
int
add
jmp
jle
ss
mul
cmps
sbb
jmp
stos
repz
movs
pop
push
xor
cmps
sub
je
sub
push
jns
dec
push
push
into
sub
jg
mov
and
ss
sub
cmp
es
outs
movs
out
push
jecxz
fist
jmp
cmp
scas
jg
xchg
dec
fsubrp
hlt
jbe
and
push
aad
jno
test
inc
inc
aaa
jae
stc
cld
xchg
pop
jle
add
loop
jle
pop
call
cmp
rcr
inc
mov
jmp
stc
jecxz
or
mov
out
loop
and
dec
lods
and
push
and
xor
ss
push
stc
jne
pop
adc
fdiv
mov
retf
jmp
test
inc
sub
outs
pushf
cmp
mov
cmp
aas
outs
pushf
hlt
sti
pop
jae
push
ror
sub
adc
shl
addr16
and
mov
data16
nop
add
pushf
add
out
inc
fild
sar
push
js
and
xchg
rcl
xor
xor
sbb
cmp
mov
fs
cwde
cmp
mov
(bad)
mov
xchg
not
(bad)
cld
popf
push
je
outs
pushf
out
push
sahf
mov
inc
(bad)
fsubr
or
repnz
jae
packssdw
pop
call
out
push
sbb
sbb
push
adc
imul
and
ds
ret
mov
pop
xchg
pushf
popf
adc
cmp
mov
les
mov
out
test
fwait
or
jmp
aad
adc
jno
push
cmp
mov
lods
or
cld
or
(bad)
sbb
inc
pop
into
les
sbb
cmp
cmps
loopne
mov
mov
imul
xchg
inc
cmps
cmp
sbb
int
adc
mov
mov
mov
and
daa
mov
test
cmp
mov
wbinvd
ror
add
call
inc
sahf
mov
dec
cmp
retf
or
add
enter
mov
sbb
cmp
sar
scas
push
loop
pop
fisub
ja
sub
movs
push
adc
retf
lea
stos
push
jmp
jo
ja
mov
shr
xor
ds
leave
cmp
inc
mov
sar
dec
cs
sar
add
jo
pusha
jp
push
out
sbb
js
pushf
mov
int
(bad)
popa
cmps
data16
mov
inc
je
daa
mov
push
int3
cld
adc
xlat
sbb
sbb
(bad)
push
push
cmp
out
pop
and
jle
sbb
loope
movs
xor
movs
fnstcw
inc
loopne
jecxz
test
push
(bad)
das
xchg
ins
mov
jmp
fs
pop
xchg
scas
dec
out
and
pop
adc
fwait
jnp
movs
add
xor
cdq
fmul
jle
mov
out
retf
add
adc
fldcw
ins
push
iret
fdivr
into
push
sbb
jnp
mov
(bad)
cmp
jle
sbb
hlt
cmp
call
scas
and
movs
jmp
xchg
sub
call
xor
aas
push
std
movs
adc
outs
lods
ret
cwde
test
sbb
(bad)
and
cmp
adc
sub
sub
mov
js
inc
or
sub
stos
ss
shr
xchg
sbb
push
pop
iret
mov
xchg
xchg
push
jge
push
cld
and
jno
daa
stos
clc
ret
cmp
enter
sbb
add
cmp
mov
and
lods
leave
xchg
lds
mov
retf
mov
inc
dec
loope
mov
movs
les
inc
cmp
sub
ret
test
sahf
aas
sbb
repnz
rcl
into
sbb
pop
xchg
in
imul
sbb
mov
xchg
lds
cwde
jl
(bad)
adc
or
xchg
jb
in
or
push
and
sahf
mov
jge
push
loope
xor
test
shr
sti
scas
jb
mov
idiv
retf
add
jne
loop
sub
aaa
mov
les
in
adc
push
ret
pop
(bad)
out
push
cmp
dec
and
sbb
(bad)
fdivr
loop
push
mov
xchg
inc
fbstp
push
adc
(bad)
cmc
jnp
mov
sbb
out
retf
fldenv
sbb
cmps
nop
add
lods
xchg
sub
add
jmp
lods
adc
fild
sbb
pop
xor
lods
xlat
adc
sub
stos
out
retf
or
inc
aad
into
(bad)
push
mov
imul
sbb
js
fld
repz
dec
inc
mov
add
xor
sub
sar
retf
popa
sub
mov
sub
jge
pusha
cld
mov
pop
adc
fwait
stos
xchg
sub
dec
(bad)
lods
mov
lock
loopne
or
mov
add
div
cmc
cmp
stos
lods
cmps
jbe
cmps
sar
cmp
ins
mov
cld
add
fist
sub
mov
mov
mov
mov
adc
push
and
(bad)
or
adc
fcmovnb
push
dec
push
add
push
scas
stos
mov
jne
cmp
(bad)
pop
jno
neg
adc
call
(bad)
retf
arpl
ror
pusha
push
lods
jmp
test
loope
out
in
inc
sahf
outs
lods
rcl
add
xchg
pop
rcr
retf
add
popa
loop
test
pop
push
dec
mov
add
pusha
add
dec
xchg
pushf
sub
xor
clc
mov
int3
icebp
sub
sub
cmp
cmp
daa
jb
arpl
hlt
aaa
pop
scas
xchg
jge
stc
popf
cmps
and
(bad)
inc
scas
retf
lods
add
add
sub
jmp
aas
add
and
cmps
fistp
sbb
ja
xchg
pop
adc
out
shl
sbb
mov
pop
cmp
enter
fucom
call
mov
adc
mov
mov
xchg
mov
shr
xchg
je
push
bound
arpl
sub
sbb
call
inc
add
sbb
inc
das
jno
or
test
adc
xor
imul
icebp
(bad)
or
cmp
inc
(bad)
(bad)
outs
sbb
mov
mov
or
fadd
js
jb
das
test
lods
and
scas
sbb
(bad)
loopne
hlt
mov
sub
push
pop
dec
lahf
out
xchg
das
inc
fisubr
inc
clc
lods
ret
inc
xchg
iret
xor
call
and
mov
adc
movs
mov
push
sub
dec
jecxz
je
xchg
and
sahf
push
jns
dec
das
fidivr
cmp
push
pop
mov
outs
jmp
mov
gs
and
(bad)
inc
jno
sar
xchg
cmps
je
out
pop
fdiv
movs
sbb
add
pop
test
or
dec
rcr
stos
push
or
addps
mov
push
pop
call
xchg
pop
data16
loope
ds
add
xchg
cmp
adc
lahf
push
inc
jns
jp
push
cli
sub
cwde
inc
push
sub
or
mov
call
push
or
push
or
loopne
cwde
and
xchg
mov
cmp
in
mov
cli
inc
inc
inc
mov
push
shr
mov
call
lods
pop
mov
mov
mov
lods
push
xor
jae
(bad)
test
ss
sub
push
inc
outs
or
retf
mov
pop
ins
xlat
pop
in
mov
or
push
sub
adc
js
sub
mov
xor
push
les
inc
cmp
int
xor
cli
loop
lahf
mov
lods
sahf
push
push
ficomp
pop
or
(bad)
out
dec
cmp
cmp
repnz
mov
add
popf
addr16
mov
aas
jb
in
push
jmp
daa
addr16
retf
aam
and
add
fsubr
sub
mov
or
mov
jl
das
(bad)
div
lds
lahf
sbb
fst
loop
fs
jmp
ja
pushf
call
call
adc
push
js
xchg
iret
idiv
xchg
and
and
aad
std
les
xchg
stos
out
mov
mov
add
ret
mov
pop
popa
ret
sub
xor
mov
xchg
push
outs
mov
jo
push
cwde
(bad)
sbb
test
iret
add
fisttp
mov
imul
push
pop
je
mov
xchg
xchg
imul
test
sbb
into
push
pop
outs
mov
(bad)
imul
and
aam
push
and
or
or
add
or
inc
sbb
sub
outs
mov
shr
test
push
arpl
rcl
jnp
or
call
xchg
cs
imul
push
add
mov
ret
mov
movs
stos
lods
dec
hlt
movs
(bad)
dec
and
test
scas
pusha
jne
sbb
aam
outs
es
test
and
mov
fisubr
out
cmp
xor
rcr
pop
mov
sub
inc
cmp
inc
cs
cmp
dec
pop
jns
mov
stc
mov
(bad)
sub
nop
mov
movs
push
push
cmp
sahf
mov
lahf
rcr
sti
ss
pushf
cmp
inc
mov
fcomip
es
lahf
mov
adc
xor
ds
test
dec
jmp
push
ins
mov
xchg
dec
jbe
push
or
imul
popa
jecxz
mov
(bad)
scas
jno
pop
jb
sub
call
repnz
arpl
scas
stos
sub
mov
jo
add
add
stos
daa
adc
or
sub
outs
xlat
jmp
mov
clc
pop
or
dec
mov
and
das
(bad)
pop
bound
repnz
call
nop
push
cli
jp
dec
ss
push
inc
loopne
dec
mov
xchg
or
push
push
sbb
pusha
add
mov
int3
mov
add
mov
pushf
imul
pop
push
gs
ja
repnz
int3
cmp
cld
jge
dec
fwait
rcl
movs
mov
or
ins
outs
mov
mov
push
cwde
rol
fdivr
ja
mov
cmp
mov
nop
repnz
jne
push
inc
test
mov
(bad)
cmp
ret
sbb
adc
and
test
adc
jle
jne
test
cdq
jb
xor
xchg
jo
nop
ror
xor
xor
imul
cld
daa
or
cli
mov
jmp
push
pop
(bad)
pop
mov
xchg
xchg
adc
inc
sbb
cmp
or
aas
mov
imul
lods
mov
into
xchg
sub
std
xchg
push
aaa
sub
movs
add
push
jmp
ds
cli
mov
mov
mov
je
outs
xor
sbb
sbb
inc
xlat
and
(bad)
popfw
mov
push
js
in
sub
inc
retf
ret
sbb
xchg
inc
sub
into
sbb
loope
outs
push
repnz
ins
xchg
or
cmp
test
xchg
ret
int
ret
pop
(bad)
mov
call
(bad)
ins
fdivr
movs
stc
sub
mov
setns
fild
scas
mov
repz
(bad)
lds
add
imul
movs
push
mov
and
and
int3
mov
icebp
imul
test
sub
jne
jl
mov
sar
das
shr
add
cwde
test
mov
in
cmps
iret
dec
loopne
cmp
cli
imul
in
ja
push
dec
lahf
dec
dec
inc
ja
popf
jno
sub
in
add
addr16
js
mov
or
lea
cwde
lahf
add
sti
pushf
pop
outs
or
retf
push
cmp
aam
int
fistp
xchg
test
cli
out
pop
cmc
mov
push
jo
mov
add
or
dec
push
and
mov
(bad)
sbb
or
cdq
enter
ins
repz
inc
mov
imul
das
addr16
add
lods
push
cs
ins
cmp
inc
jae
movs
loopne
xchg
out
jbe
dec
retf
clc
sbb
adc
mov
jns
mov
push
add
daa
mov
dec
(bad)
fcmovbe
xor
sub
mov
push
out
jo
push
dec
xchg
and
in
mov
loope
cmp
out
pop
xchg
cmp
mov
sbb
push
cmp
test
aam
nop
fisubr
push
mov
add
lea
or
add
mov
fstp
add
test
mul
xchg
das
sahf
pop
mov
xor
dec
sbb
stc
arpl
neg
inc
xchg
je
lds
cdq
mov
das
adc
in
shr
dec
mov
jp
cmp
jp
jne
xor
add
aaa
lock
sbb
cli
sar
cld
add
fdivr
je
dec
push
push
leave
xchg
or
add
jno
stos
retf
or
shl
(bad)
jmp
inc
sti
ins
popa
sbb
(bad)
aad
dec
push
ins
xlat
imul
or
cmps
jo
cmp
jp
inc
popf
repnz
cdq
or
shr
pop
mov
push
adc
retf
jmp
lods
cmp
fld
nop
out
scas
les
push
movs
pop
aaa
movs
inc
call
imul
stos
dec
fcomp
ds
mov
push
dec
out
cli
sbb
pop
test
movs
rcl
lahf
add
in
call
pop
inc
imul
mov
lods
jns
pop
stos
test
leave
scas
pushf
test
lods
pop
cmps
sub
std
in
dec
add
sub
stc
cld
test
ins
or
mov
loop
push
ds
sbb
cmp
rol
xchg
lock
popa
neg
xlat
xor
xor
sub
mov
jo
std
mov
dec
pop
hlt
xchg
cmc
jle
cmps
fs
push
aam
cmp
sbb
sbb
dec
outs
fisub
enter
lods
(bad)
push
adc
outs
and
inc
pop
adc
repnz
pop
arpl
xor
pop
into
and
add
ins
fcom
dec
adc
fnstcw
inc
imul
shl
shl
in
pop
repnz
outs
lds
adc
mov
mul
or
mov
sahf
mov
cld
fidiv
sub
adc
imul
aas
inc
aad
dec
xchg
popf
cmp
sub
and
jge
cmp
(bad)
sub
xchg
pop
push
sbb
xor
pop
(bad)
dec
adc
sahf
add
(bad)
push
add
bnd
mov
pop
pop
and
cmp
ja
cmp
je
loopne
xor
mov
sub
sub
js
pop
int3
sbb
pop
out
fbstp
add
sbb
jmp
push
jne
fs
(bad)
mov
shr
addr16
sub
jne
lds
adc
leave
jb
cmp
inc
lahf
sub
mov
pop
out
jbe
mov
and
lods
dec
mov
in
icebp
(bad)
popa
int3
cmps
fs
add
loope
fwait
iret
aas
xor
xor
test
ficom
js
mov
movs
and
lock
jae
nop
jge
mov
jecxz
repnz
xchg
cmps
add
adc
cmp
(bad)
cs
ret
pop
std
sub
adc
dec
mov
es
(bad)
out
(bad)
mov
mov
xor
mov
push
push
add
adc
mov
and
mov
mov
lds
dec
inc
movs
in
xchg
dec
sub
stos
sub
push
sub
xchg
ror
sub
imul
dec
dec
aas
in
and
jl
xchg
dec
xor
push
(bad)
js
cmp
push
loop
push
in
and
pop
mov
inc
std
adc
pusha
mov
test
or
sar
mov
mov
sub
xor
push
loop
mov
not
mov
and
jmp
data16
mov
js
jge
in
adc
push
jp
cld
mov
out
xor
xor
lock
jmp
cmp
jp
aam
xchg
mov
sbb
sti
outs
inc
pop
mov
cmp
in
add
test
hlt
fistp
out
test
jle
je
(bad)
test
inc
pop
or
aas
inc
add
xor
ins
cmp
cmps
cmp
xor
or
stc
sbb
pop
cmc
(bad)
inc
or
out
into
stc
adc
push
mov
jne
sub
inc
sahf
sub
neg
pop
pop
test
add
dec
cs
mov
or
xchg
es
outs
aaa
(bad)
call
in
std
xor
bound
xchg
sar
mov
cmp
xchg
push
movs
call
dec
jp
cmp
xor
es
mov
mov
jb
popa
sub
fsub
ret
inc
outs
ret
retf
add
or
push
(bad)
or
mov
repnz
cmp
xor
pop
sahf
mov
dec
dec
pop
pop
ins
neg
adc
cmps
popf
or
xlat
ret
lods
stos
lock
in
test
movs
outs
lock
cmp
jg
call
sti
scas
add
out
fisttp
ret
les
popf
imul
arpl
cli
push
and
or
inc
repnz
(bad)
ja
dec
test
push
fld
push
lods
je
xchg
mov
fdivr
mov
data16
icebp
fld
mov
stc
xchg
mov
in
out
movs
jg
lea
dec
xchg
sub
mov
sbb
stos
out
xor
daa
jp
lods
mov
stc
sub
aad
outs
cmps
ja
lds
lock
std
pop
push
sahf
bound
push
mov
mov
call
or
movs
sti
fucom
es
cmp
outs
cdq
add
push
mov
or
push
push
ret
jns
dec
in
pop
iret
sbb
xchg
mov
inc
(bad)
pop
fild
inc
push
push
je
mov
sub
push
and
xor
push
push
add
popa
aas
loope
add
pop
aam
or
mov
je
sub
(bad)
into
pushf
add
jmp
pop
pop
clc
and
inc
retf
cld
mov
fiadd
stc
dec
mov
xchg
dec
xor
(bad)
mov
jno
adc
addr16
or
mov
pop
mov
adc
or
xchg
jmp
mov
cld
and
std
(bad)
ins
xor
cmps
fist
inc
xchg
imul
pop
out
jmp
mov
add
push
inc
and
lds
outs
sbb
mov
outs
push
loope
out
mov
test
or
add
cmps
jmp
mov
outs
cmps
(bad)
xor
pushf
jmp
pop
xchg
int3
pop
pop
cdq
add
cmps
jno
stc
or
cmps
stc
stc
sti
bound
jg
(bad)
mov
ret
adc
adc
adc
jle
add
dec
jae
shl
sbb
nop
jg
int
shr
inc
jp
or
sbb
sbb
outs
test
pop
test
in
icebp
loopne
push
out
adc
add
mov
(bad)
rol
xchg
loop
cmp
rol
sbb
sbb
jbe
call
push
arpl
and
dec
mov
aaa
mov
sbb
(bad)
and
push
sti
inc
stc
shl
scas
inc
push
iret
xchg
inc
gs
icebp
add
mov
pop
xchg
in
(bad)
hlt
mov
pop
add
jmp
mov
sbb
sub
enter
ds
(bad)
fdivr
pushf
xchg
xchg
mov
lahf
popa
jp
rcl
add
or
mov
jbe
dec
mov
movs
inc
mov
add
addr16
outs
sub
movs
dec
imul
arpl
jno
mov
jle
out
loop
inc
call
push
cmc
fisttp
mov
mov
enter
adc
mov
cmp
sbb
shl
lea
dec
mov
inc
fsincos
mov
test
xor
icebp
mov
loopne
cmc
jecxz
outs
adc
in
retf
sub
movs
sti
scas
mov
mov
pop
mov
mov
movs
sbb
xor
xchg
pop
loop
dec
cmc
xor
pop
push
cwde
pop
pop
std
retf
je
cwde
and
cmp
stos
cmc
fcomp
sub
fild
or
fisub
stc
mov
in
jle
pusha
in
xchg
add
scas
imul
xchg
es
lds
leave
inc
adc
and
cmp
je
push
test
and
dec
fadd
push
xlat
mov
mov
cmp
mov
jp
dec
mov
mov
or
mul
fisub
ficomp
cmps
bound
retf
fwait
pop
inc
cmps
push
das
jne
xchg
dec
fisttp
cmps
cmp
mov
mov
out
inc
ret
xchg
mov
lods
pop
mov
fwait
xchg
enter
xchg
pop
add
add
stos
and
psllw
enter
sub
mov
inc
mov
cld
lock
popa
sub
out
mov
and
call
or
or
cmp
out
test
adc
inc
in
movs
xor
mov
sub
daa
jne
xchg
int3
cmp
lock
push
or
mov
jecxz
sbb
sbb
fidiv
fnsave
(bad)
cmp
pop
pop
push
nop
in
xor
mov
and
out
test
jp
inc
xchg
dec
iret
dec
push
mov
mov
pop
bound
fwait
or
mov
push
(bad)
jp
mov
pop
test
fdivr
test
ret
pop
hlt
popw
sti
or
pop
sub
jae
push
hlt
jnp
lods
mov
fistp
jns
call
add
in
pop
sbb
ret
repz
adc
dec
push
out
xchg
enter
jge
pop
ins
cdq
in
add
int3
adc
nop
push
hlt
mov
iret
jmp
jmp
push
loopne
stc
fucomp
icebp
or
fwait
xchg
sbb
cdq
rol
cmp
ins
mov
adc
repz
jo
sar
lods
mov
rol
ss
pop
jecxz
test
(bad)
cmp
int3
in
iret
jb
lds
push
xchg
pop
sbb
stos
movs
xchg
cmp
imul
lods
cs
push
mov
(bad)
sub
cmp
pop
xor
jmp
sbb
ins
dec
push
jge
test
cmp
or
jle
icebp
(bad)
ret
into
xchg
lahf
jb
into
mov
push
sbb
sbb
rcr
shl
mov
xlat
jle
test
mov
xchg
add
adc
sbb
fdivr
add
mov
mov
push
outs
popf
inc
pushf
(bad)
push
jnp
ficom
sbb
inc
and
leave
adc
ds
arpl
inc
lds
pop
jecxz
inc
mov
adc
mov
dec
in
out
mov
sub
pusha
xor
fsubr
lahf
call
jp
fsubr
fstp
clc
cmp
push
subps
and
stos
push
shr
mov
cmp
fcomp
and
push
aaa
pop
push
js
(bad)
push
(bad)
fist
(bad)
imul
inc
in
lock
pop
jb
or
mov
pop
push
sub
cdq
pusha
mov
outs
xchg
addr16
stos
cli
shr
fidivr
call
cmp
xor
mov
(bad)
dec
inc
nop
pop
xor
pop
or
xchg
dec
push
xor
inc
jecxz
dec
stos
sbb
mov
into
cmp
repnz
mov
xchg
cld
pop
mov
das
ins
aad
or
xchg
(bad)
push
(bad)
out
push
cwde
inc
lods
push
adc
fld
pop
xchg
adc
mov
inc
add
dec
xchg
adc
fadd
repz
test
mov
inc
mov
movs
jp
jnp
dec
clc
jecxz
mov
in
inc
sbb
add
dec
mov
pop
and
mov
mov
cmp
cs
outs
in
xor
jmp
or
add
cs
jne
in
xor
loope
fidivr
inc
mov
dec
dec
hlt
add
sub
out
and
into
out
dec
(bad)
lea
and
mov
pop
xor
xor
enter
dec
xor
jmp
inc
sbb
lods
cmp
mov
or
inc
(bad)
aam
jg
movs
aaa
mov
bound
fnstcw
das
repz
jp
push
repz
mov
pop
pop
xor
cmp
sbb
mov
push
jb
mov
js
push
fld
cmp
lahf
(bad)
mov
in
retf
retf
mov
dec
jo
addr16
jg
fdiv
or
sub
retf
or
into
rcr
cmp
push
inc
add
(bad)
fst
push
mov
je
add
mov
outs
xlat
jge
retf
loope
retf
push
inc
fdiv
xor
push
stc
jge
ds
ja
push
sub
xor
mul
movs
(bad)
cmp
mov
out
xchg
push
cmp
cmps
mov
(bad)
fnstsw
dec
ja
stos
dec
cmp
adc
ret
sub
inc
jne
daa
pop
cmp
(bad)
pop
cs
jge
sbb
stos
or
cmps
jmp
(bad)
out
mov
stos
or
inc
add
in
idiv
je
push
cmp
xchg
fild
sub
pop
lock
add
xor
inc
mov
enter
les
ret
retf
xchg
xchg
mov
ror
pop
bound
push
mov
sbb
jmp
jl
in
es
mov
xchg
and
lahf
(bad)
loopne
fdiv
cmp
les
std
scas
mov
push
(bad)
mov
movs
sub
pop
lods
outs
enter
mov
loopne
in
sbb
cmp
xchg
and
outs
ins
out
mov
dec
scas
scas
pop
sub
adc
dec
repnz
adc
add
jae
inc
add
sbb
dec
rol
cld
mov
cmp
push
pop
imul
mov
test
mov
pop
mov
xor
dec
test
or
xor
sub
out
cmp
xchg
rcr
push
push
add
scas
add
loope
push
mov
in
add
pop
lea
cmps
test
jmp
push
xchg
xchg
(bad)
mov
and
inc
pop
jmp
jmp
adc
(bad)
in
mov
movs
xchg
ficomp
inc
cld
stc
adc
into
loop
sbb
jnp
push
add
outs
mov
into
jae
cmp
mov
mov
xchg
jge
retf
jb
ret
cmc
push
aaa
xor
test
fdiv
pop
aam
std
inc
fidivr
es
ret
and
push
add
lds
pushf
in
cmp
mov
fdivr
push
fdivr
jb
int3
inc
sbb
stos
mov
xor
jp
daa
test
(bad)
(bad)
mov
mov
ret
fwait
out
mov
mov
xor
xor
mov
pushf
adc
stc
imul
xor
jb
jae
sahf
nop
mov
sbb
jle
jp
fldcw
arpl
or
fsubrp
movs
dec
mov
or
add
imul
fimul
call
stos
sbb
ret
mov
(bad)
rcl
in
in
mov
lea
pop
dec
xchg
stc
pop
lea
jo
pop
jae
pop
fst
pop
fmul
mov
outs
leave
test
fcomp
or
out
rcr
or
adc
aam
pop
sti
pop
jae
in
push
inc
test
push
out
jg
enter
daa
cmp
dec
cmp
mov
pop
retf
pop
add
pop
sub
fdivr
mov
push
add
fwait
and
jp
jmp
jb
sar
cmp
or
push
xchg
add
imul
sub
dec
retf
dec
jae
and
push
cmps
pushf
or
pop
sbb
cmp
sar
loope
sbb
or
push
mov
shl
pop
sub
stos
xor
movs
test
clc
jns
cmp
xor
inc
sub
aas
mov
push
and
jmp
push
outs
xchg
lds
bound
mov
rcr
xchg
(bad)
aad
adc
xchg
movs
xchg
cmp
xor
fwait
push
jnp
or
stos
sbb
mov
add
xchg
icebp
or
jmp
out
xchg
icebp
sub
cmp
lock
pop
fsub
jo
jg
add
mov
or
js
add
mov
ret
imul
sbb
or
adc
loopne
cmps
mov
xor
dec
mov
mov
push
(bad)
stc
js
xchg
and
aas
pop
loop
rol
mov
pop
aas
das
(bad)
and
add
dec
(bad)
out
psrlq
cmp
mov
imul
or
cmp
enter
out
xlat
ds
sar
add
cmp
sti
push
mov
in
mul
das
cld
cmc
push
sbb
nop
aas
call
lock
mov
loopne
adc
(bad)
push
ja
test
cmps
cmc
aad
cdq
out
cs
jge
sub
or
leave
push
dec
jb
dec
mov
push
enter
adc
xchg
jo
gs
ds
pusha
adc
sub
out
jmp
div
sub
rol
mov
nop
mov
push
push
div
sub
mov
test
in
mov
cmp
mov
add
push
lock
retf
in
xchg
idiv
mov
xor
and
jns
or
out
or
dec
stos
in
arpl
sub
and
mov
push
(bad)
rcl
inc
leave
mov
jo
inc
std
outs
fwait
mov
add
cdq
cmps
mov
mov
das
sbb
mov
icebp
mov
inc
arpl
add
ins
and
sti
xchg
(bad)
movs
sar
lock
jns
add
je
hlt
cmp
fs
push
ds
adc
sbb
xor
jge
push
js
(bad)
test
(bad)
pop
loop
xchg
push
ds
sub
jo
and
xor
jmp
mov
pop
ja
cmp
shl
fisttp
inc
and
jb
test
stos
sub
jle
data16
lods
fsubr
mov
push
ins
adc
out
jo
push
mov
inc
aam
xchg
loop
xor
jae
pop
and
fidivr
xchg
sub
fisttp
and
pop
or
xchg
mov
repz
inc
xor
mov
movs
mov
push
les
jae
push
xor
(bad)
mov
test
mov
iret
xor
int
lods
and
fsub
(bad)
push
in
into
outs
leave
sub
sahf
or
xchg
retf
ret
ins
imul
xor
(bad)
adc
cvtdq2ps
imul
repz
push
mov
je
sti
and
out
add
fidivr
(bad)
or
cdq
add
fcom
pminub
add
mov
adc
lahf
xor
lds
ret
xchg
cmp
ss
jno
(bad)
std
loopne
inc
ja
jns
mov
adc
movs
loopne
rol
mov
lods
adc
cmps
pop
mov
jo
int3
cdq
loop
addr16
pop
push
addr16
lds
loopne
shr
shl
pusha
push
fld
into
scas
popf
xlat
pop
jbe
cmps
cmp
jo
ins
dec
and
repnz
pop
addr16
push
cli
xchg
mov
int3
adc
fiadd
retf
sub
dec
push
test
pop
pushf
je
and
cmp
out
mov
cmp
shl
mov
test
fldcw
outs
mov
in
pop
xchg
sbb
xor
fcmovu
jmp
fldenv
pushf
push
test
in
xchg
ret
xchg
push
push
xchg
clc
imul
xchg
adc
dec
cmp
gs
jge
xchg
or
jne
retf
push
xchg
add
add
or
ror
sub
clc
sub
rcl
and
jns
sub
push
pop
repnz
add
sub
add
pop
adc
push
add
lods
mov
into
fisubr
ud2
xchg
(bad)
cmp
fisttp
je
lahf
push
stos
ins
in
and
into
pop
ret
icebp
dec
std
dec
lods
cmps
mov
jne
and
fwait
icebp
mov
jecxz
cmps
xchg
cdq
mov
arpl
inc
mov
in
rcl
xor
inc
jmp
mov
jo
les
fwait
mov
enter
mov
pop
pop
aam
daa
(bad)
mov
mov
jg
ficom
or
pop
sub
push
pushf
push
mov
xchg
inc
pop
sbb
(bad)
retf
ja
or
test
sbb
cmp
xor
outs
jmp
test
scas
mov
shl
mov
js
cmps
rcl
sub
sbb
retf
dec
retf
sbb
hlt
cmp
push
mov
mov
test
sbb
xchg
dec
xchg
stos
fild
mov
jbe
jg
out
inc
sbb
jb
cmp
clc
add
das
cdq
jg
out
sbb
(bad)
hlt
sbb
push
jle
inc
movs
in
sub
mov
push
jo
cld
fwait
xor
pop
inc
cmps
jle
mov
std
push
mov
fsubr
xrelease
mov
(bad)
mov
movs
sub
into
cmps
sbb
les
rcl
add
hlt
pusha
mov
xchg
inc
sbb
push
aaa
cmp
sbb
rcr
shl
or
dec
out
gs
(bad)
xchg
fadd
xor
cmc
fucomip
aad
movs
mov
push
jmp
inc
fcomp
lahf
lea
enter
aas
xchg
push
movs
aaa
xor
add
mov
cmp
mov
das
mov
ja
cmp
pop
add
mov
push
fmul
mov
inc
sar
aaa
out
sub
mov
cli
or
mov
aas
in
push
jle
icebp
cmp
fwait
cmps
dec
(bad)
jae
cld
add
repnz
jae
loope
push
mov
test
lods
xchg
jno
xchg
push
retf
lahf
icebp
jo
cmp
fs
cmp
jge
xchg
hlt
leave
in
sbb
ficomp
(bad)
nop
or
push
std
(bad)
or
fidiv
push
sub
test
sub
push
mov
popf
test
fisubr
out
and
or
enter
fsub
xor
inc
mov
cmps
xchg
mov
rcl
mov
dec
ins
sub
add
fmulp
dec
xor
and
or
xor
retf
pop
out
xor
mov
retf
sbb
pop
push
ins
mov
lea
or
retf
fst
xchg
xor
jg
out
mov
push
inc
(bad)
je
cmc
into
int3
push
jne
enter
xchg
cdq
mov
ds
in
out
mov
fcomp
xor
bound
jecxz
fld
shr
pop
bound
cld
push
push
sti
add
cmp
mov
iret
adc
jle
inc
cmps
sbb
call
stos
scas
bound
add
mov
sub
and
mov
std
(bad)
jo
pop
mov
pop
daa
cmp
and
stos
sub
adc
das
pop
and
retf
inc
jbe
mov
xchg
ja
ror
jl
dec
arpl
ret
scas
imul
nop
xor
fmul
mov
std
push
add
stc
inc
jecxz
movs
cmc
pushf
sub
jge
push
dec
test
add
in
push
push
pop
push
xchg
sbb
push
fdivr
mov
sbb
xchg
xor
aad
xchg
retf
lds
jnp
adc
mov
(bad)
popf
push
adc
xor
add
mov
sti
mov
je
dec
retf
xchg
mov
push
jns
(bad)
aas
lea
xor
adc
std
ds
aad
add
clc
jl
pushf
pop
dec
pandn
dec
ret
stos
mov
sbb
jle
xchg
test
cmps
clc
ja
loop
or
iret
jmp
aad
aad
pushf
or
repz
rcl
push
cmp
sbb
jb
pop
sahf
nop
mov
xchg
mov
cmp
xchg
addr16
pop
pushf
out
mov
cmps
add
in
nop
(bad)
imul
cdq
pusha
int3
pusha
jne
aam
xor
xchg
or
dec
or
mov
test
pop
(bad)
aaa
(bad)
fisub
aam
mov
jbe
push
lahf
or
daa
push
scas
jne
and
cmp
aam
int3
in
stos
jecxz
ss
(bad)
or
stos
scas
(bad)
fst
ror
mov
inc
aas
loope
retf
mov
in
xlat
int
sbb
je
pusha
(bad)
sbb
daa
cmp
xchg
outs
xchg
retf
repz
out
je
ret
pop
and
in
or
imul
push
dec
jmp
lahf
jp
pop
mov
pop
int
sbb
sbb
outs
call
adc
sbb
sub
(bad)
fxch
xchg
mov
mov
mov
pop
jb
in
cmp
sub
das
push
pop
lock
add
lock
pop
xchg
mov
cwde
sub
xchg
repz
fldenv
aam
push
cmps
inc
or
push
sub
sub
xchg
aad
xchg
int3
in
mov
and
idiv
add
xchg
push
fs
and
gs
mov
cmp
push
push
lahf
sar
cmp
repz
test
(bad)
aad
test
sar
jne
or
gs
popa
dec
dec
neg
(bad)
push
retf
loop
nop
ss
adc
push
sub
fnsave
add
ret
gs
lahf
inc
rep
sar
lods
jno
jns
xor
jge
mov
(bad)
shr
fwait
movsx
ja
dec
retf
dec
test
pop
xchg
dec
ins
or
into
cmp
je
pop
mov
ds
dec
xchg
out
and
scas
xor
out
cmps
add
fnstcw
sub
fs
loopne
and
mov
xchg
cmp
fs
jecxz
mov
je
aam
or
outs
pop
into
xor
mov
mov
inc
pop
or
xor
aaa
movs
(bad)
(bad)
ds
cmp
push
mov
arpl
cmp
scas
cmp
daa
sbb
dec
xor
sbb
dec
ret
sub
cmp
push
lahf
mov
leave
jmp
dec
and
fdiv
addr16
pop
mov
mov
loope
(bad)
cmp
sbb
mov
mov
movs
mov
xor
pop
jb
mov
xchg
imul
jge
stos
sti
hlt
jl
les
jae
movs
outs
rcl
xor
stc
aam
das
(bad)
or
je
in
cmp
mov
mov
jmp
rcr
iret
or
les
out
pop
adc
test
out
icebp
sub
loope
push
fs
mov
int3
adc
sub
movs
inc
nop
out
pop
inc
fdivr
mov
retf
jno
inc
jle
call
adc
and
cdq
mov
sbb
mov
cmp
jno
jg
enter
iret
into
sub
sub
add
cwde
cld
cwde
inc
sbb
in
adc
push
dec
jns
ficom
sub
iret
inc
das
push
xchg
jmp
cmp
loopne
addr16
mov
out
test
cmc
out
fs
push
mov
inc
sub
cld
jmp
pop
fisub
ja
xchg
mov
jecxz
sbb
pop
pop
and
rcl
stc
jle
lea
test
lock
test
rcr
pop
sbb
xchg
inc
fmul
(bad)
jl
cmp
out
jmp
push
pop
xor
mov
int3
sbb
not
sub
pushf
pop
in
jno
or
add
in
mov
call
jecxz
lock
mov
add
pop
inc
bound
xchg
inc
aam
sahf
pop
scas
mov
movs
repnz
loope
xchg
aam
loopne
je
test
sub
(bad)
addr16
leave
shr
pop
pushf
mov
(bad)
movs
mov
adc
push
mov
div
xchg
sub
ja
fbld
add
xor
pop
and
arpl
sar
add
fcom
xchg
movs
imul
and
jns
push
inc
stos
sbb
out
cmovg
loop
xor
add
push
add
in
retf
movs
mov
pop
loope
xor
std
scas
pop
imul
int
pop
sub
sbb
pushf
or
xchg
sub
jecxz
test
cli
das
xor
fadd
js
add
sbb
xor
lds
fadd
std
xor
ds
xchg
sbb
mov
out
cmp
xchg
hlt
movs
add
dec
inc
sub
inc
pop
fnstcw
cwde
movs
dec
jno
outs
mov
sbb
inc
xor
imul
jg
int3
or
out
pop
cwde
mov
loope
in
push
jl
xchg
loopne
rol
addr16
cmp
iret
mov
dec
jne
dec
jo
fs
xchg
or
pop
outs
xchg
xor
ret
(bad)
test
mov
dec
push
rol
add
pop
(bad)
icebp
dec
aam
in
xchg
pop
(bad)
test
push
xchg
arpl
or
mov
out
cvttps2pi
popa
shr
xor
fmul
jle
sti
in
retf
jmp
and
call
(bad)
mov
lods
or
cmp
dec
mov
popf
rol
xor
add
mov
leave
(bad)
popa
jns
cmp
jecxz
aam
loopne
out
mov
imul
out
mov
dec
popa
pop
dec
push
retf
cmp
in
sbb
sbb
jno
dec
jp
cmp
or
cmp
jo
mov
retf
or
aam
cmp
loop
ds
mov
sub
add
push
repnz
das
push
test
jmp
fwait
repnz
push
ds
addr16
sbb
(bad)
push
inc
pop
sar
or
in
dec
mov
out
and
cmp
sbb
sub
aam
lods
(bad)
cdq
test
in
retf
cdq
test
das
daa
(bad)
push
jg
cs
sub
mov
scas
mov
inc
sbb
repnz
sub
scas
mov
mov
fs
loope
xchg
(bad)
fsubr
ss
mov
and
es
fdivp
ss
and
pusha
cwde
xor
jmp
out
xor
push
in
cmc
mov
jp
mul
movs
mov
jne
loope
sub
fsubr
mov
push
adc
leave
fist
mov
push
cmp
push
sbb
and
cld
pop
jno
test
jg
and
int
xor
jp
xor
push
mov
je
xor
xchg
or
mov
out
mov
jmp
xor
jg
stc
scas
call
pop
lods
cmp
mov
outs
pop
das
sbb
mov
or
iret
dec
in
and
loopne
loope
mov
fucomp
jnp
mov
jmp
dec
sbb
mov
aad
in
and
mov
mov
ret
push
fs
xchg
or
mov
inc
dec
icebp
fwait
test
inc
rol
push
(bad)
or
movs
mov
xlat
jb
mov
mov
jle
and
ror
out
push
sub
cmp
xor
inc
jp
(bad)
gs
pop
inc
mov
mov
mov
inc
fldenv
fwait
imul
mov
and
clc
mov
mov
in
fs
lea
xchg
add
and
movs
xchg
mov
mov
dec
dec
stos
loop
push
push
outs
mov
pop
fistp
mov
sub
mov
sub
lahf
test
dec
ret
sub
sar
cli
shl
mov
(bad)
cdq
add
dec
add
or
xchg
cmp
dec
inc
stos
rcl
sbb
cmp
mov
add
ins
xor
xchg
xor
test
cmp
adc
mov
jns
push
lods
test
stc
and
adc
sbb
xchg
sahf
xlat
mov
shr
and
inc
rcr
lea
xchg
cwde
in
loope
cs
out
inc
nop
pop
add
sub
das
pop
xchg
xlat
cmp
fs
mov
cwde
and
out
scas
neg
out
and
stc
push
and
(bad)
in
sti
mov
stos
je
adc
push
jg
cmp
es
add
fld
arpl
push
(bad)
pop
mov
push
sti
(bad)
dec
mov
xor
mov
ds
xor
jle
and
sbb
or
mov
test
pop
and
mov
xor
jno
in
adc
cwde
aad
inc
add
mov
aad
aad
dec
push
fcmovbe
xor
pop
cmps
call
mov
fisubr
stos
aas
aaa
jnp
in
push
rcr
cmp
jnp
rcr
add
fistp
test
aas
adc
sbb
push
jns
lods
mov
outs
ret
dec
xor
pop
stos
adc
xor
call
mov
sbb
xchg
sbb
pusha
mov
std
fcmovne
ins
and
dec
mov
mov
jne
ror
push
cmp
sub
adc
lods
jmp
inc
dec
fild
in
(bad)
es
stos
push
data16
fidiv
outs
push
imul
fadd
xor
mov
hlt
scas
(bad)
xor
xchg
xchg
das
inc
idiv
ds
retf
xchg
popf
or
xor
sahf
mov
mov
sbb
lahf
xor
enter
loop
das
mov
rcl
xchg
add
sbb
rcr
xor
cmp
cmps
ss
xchg
stos
add
loop
mov
into
hlt
scas
pop
xor
adc
xchg
fstp
mov
jnp
and
mov
xchg
or
dec
cmp
std
dec
out
xor
mov
dec
fwait
push
(bad)
adc
(bad)
mov
and
pushf
xor
and
loope
mov
stc
pusha
and
xor
jecxz
fs
xchg
lods
mov
(bad)
sbb
bound
icebp
xor
sbb
mov
dec
push
ss
sbb
cmp
repz
(bad)
fistp
sahf
mov
sub
xchg
xor
call
sbb
scas
not
enter
jne
jge
fwait
push
lods
pop
push
mov
cmp
jb
outs
mov
adc
imul
sub
mov
pop
aaa
out
pop
in
push
dec
or
repnz
call
nop
lock
cli
jmp
jmp
and
cmp
pusha
add
and
mov
add
pop
les
ret
mov
popf
(bad)
das
(bad)
fild
loop
adc
adc
inc
movs
push
sahf
out
pop
aas
mov
fwait
pop
cli
loopne
mov
jno
out
pop
in
sub
adc
stos
dec
push
dec
xchg
mov
cmp
dec
xlat
loop
and
pop
mov
jo
push
jns
push
cdq
aas
mov
dec
ret
scas
in
pop
rol
enter
clc
leave
inc
test
fs
mov
jl
jbe
pop
repnz
out
adc
mov
(bad)
and
or
dec
pop
jmp
repz
mov
xchg
push
xchg
jb
pop
dec
and
loope
nop
mov
jb
sahf
xchg
adc
cmp
fcom
std
add
dec
lahf
loopne
or
test
lds
pop
mov
dec
imul
push
push
dec
gs
add
test
loop
adc
pop
aad
or
sub
aam
add
fstp
pop
adc
jmp
out
adc
xchg
jl
pop
ret
lods
ficomp
in
push
jmp
pop
retf
xor
dec
aas
jne
ret
outs
mov
in
jmp
push
push
and
scas
loopne
mov
call
inc
dec
inc
dec
xor
push
js
loopne
inc
clc
fdiv
test
pop
cmp
mov
and
mov
push
mov
rcr
mov
movs
push
push
test
js
in
inc
mov
cmp
in
jns
test
mov
and
pop
cmc
sub
sahf
jg
jg
ret
das
sub
int
jmp
int
xchg
pop
jmp
lahf
jmp
inc
pop
cmps
xor
sub
repnz
test
mov
pop
cmp
cmps
in
cmp
mov
add
or
xchg
fild
out
mov
cmp
add
mov
(bad)
in
fxch
mov
ins
add
jg
mov
cmp
push
mov
sub
and
jge
sar
xor
ja
inc
mov
mov
retf
add
sub
jnp
push
(bad)
aam
daa
xor
outs
pop
sub
fist
ins
push
push
jns
or
outs
call
mov
pushf
cmp
and
add
jl
sub
into
aad
mov
jb
mov
imul
xor
jecxz
or
jb
and
jne
xor
mov
xchg
pop
xor
js
push
sub
pusha
int
out
and
pop
sbb
mov
arpl
mov
adc
dec
in
cmp
adc
xchg
jns
inc
and
(bad)
mov
push
cdq
pop
mov
stos
das
data16
cmp
pop
test
and
out
add
dec
jmp
popf
std
shl
sub
dec
mov
jns
out
repz
jmp
mov
mov
test
imul
inc
cwde
es
fadd
push
jno
jp
cmc
xor
mov
cbw
stc
adc
shl
xchg
sbb
xor
lods
push
aam
shl
cmp
stos
(bad)
mov
sub
call
js
push
test
pop
sbb
sahf
add
call
scas
dec
stc
xchg
cmp
dec
in
sub
(bad)
repnz
mov
call
stos
not
outs
mov
adc
and
xchg
les
xor
lods
sub
pushf
cmps
and
cs
outs
fdiv
mov
pop
sbb
xchg
push
ins
data16
ins
add
or
int3
pop
stos
mov
ret
test
(bad)
pop
xor
neg
nop
loope
out
or
das
push
cmp
xchg
rcr
push
add
jno
arpl
scas
fwait
cmp
in
jae
push
xor
xchg
stos
and
cmp
test
ins
ds
mov
push
mov
jp
(bad)
adc
aaa
push
jecxz
mov
xchg
mov
jl
outs
bound
loop
ss
dec
pop
push
pop
movs
xor
into
daa
or
mov
pop
(bad)
mov
xor
imul
stos
jnp
xor
imul
add
mov
(bad)
pop
repz
aas
mov
lahf
jmp
(bad)
adc
mov
sub
shl
je
adc
int3
jae
xchg
inc
js
push
and
ins
iret
push
inc
lahf
xor
cli
sub
or
mov
mov
mov
jnp
pmaxsw
xor
adc
jmp
imul
push
add
pop
pop
arpl
add
aaa
das
add
ins
shr
out
push
cmp
add
lods
mov
and
push
add
std
add
ret
mov
mov
daa
jae
push
pop
scas
push
jmp
mov
cmps
(bad)
in
fisubr
xchg
push
(bad)
ret
push
into
xor
imul
push
or
mov
enter
fcmovu
call
aas
mov
sti
arpl
popa
das
sbb
cmps
add
adc
popa
pop
(bad)
xor
jbe
jns
mov
in
sbb
test
fst
out
ja
adc
mov
jo
in
adc
xchg
pop
jecxz
mov
arpl
arpl
dec
push
jecxz
popa
into
xchg
push
repnz
and
icebp
sbb
pop
sub
outs
or
int3
(bad)
xchg
xchg
push
lods
sti
or
iret
mov
add
cmp
add
clc
push
(bad)
hlt
and
out
dec
into
aaa
xor
test
jne
mov
out
sbb
or
rol
int
pop
adc
mov
mov
out
jle
retf
push
push
dec
add
retf
mov
fsubp
gs
mov
cmp
lea
dec
gs
pop
scas
jns
popa
xor
out
jge
stc
and
or
adc
cld
cmp
imul
cmps
mov
scas
lods
mov
rol
(bad)
aas
mov
(bad)
adc
lahf
sub
std
(bad)
rcl
lea
ds
pop
inc
jl
xchg
jl
dec
jmp
jb
jnp
sti
xchg
push
imul
mov
in
in
add
pop
jae
jnp
add
mov
arpl
lahf
jmp
pop
jne
aaa
dec
xor
ror
sub
enter
mov
cmp
shr
jnp
fs
cld
xor
out
jns
and
or
pop
test
mov
jbe
shr
in
or
je
add
rol
(bad)
in
pop
fdivr
mov
lds
ret
pop
add
xchg
xchg
sar
sar
xor
pop
enter
and
shr
mov
xor
(bad)
shl
pop
xchg
shr
mov
test
or
mov
mov
ins
(bad)
lods
jnp
jno
dec
or
cmp
mov
add
push
enter
in
mov
pop
pusha
mov
lds
mov
fldl2t
enter
push
bound
add
shr
xchg
sub
jge
mov
sbb
ss
jmp
push
mov
mov
add
scas
std
jmp
leave
inc
push
nop
pop
pusha
dec
sbb
adc
cmps
pop
mov
cmp
jo
dec
fs
mov
add
mov
cmp
ins
scas
clc
adc
adc
xchg
mov
mov
clc
xlat
xchg
aad
fs
jmp
js
popf
or
sub
adc
cld
and
cmps
ins
mov
arpl
mov
mov
aas
pop
mov
mov
xchg
out
lods
pusha
mov
xchg
cmp
mov
add
das
mov
mov
repnz
dec
push
mov
aas
pop
dec
inc
add
dec
(bad)
adc
imul
ret
push
fldcw
dec
cs
push
push
repnz
or
out
and
arpl
(bad)
into
xchg
cmps
jecxz
sub
sbb
retf
test
or
jp
test
add
fistp
(bad)
jno
pop
(bad)
jo
push
dec
cmp
data16
int
sub
out
dec
dec
mov
enter
jmp
daa
push
(bad)
push
push
xchg
jp
out
pmuludq
lea
sbb
or
xchg
in
call
inc
pop
mov
jge
sbb
aad
loope
and
lahf
dec
mov
jecxz
fist
daa
jae
mov
or
mov
gs
stc
std
mov
ror
and
sahf
in
jae
loope
leave
repz
(bad)
pop
push
and
fst
cmc
adc
sub
jb
cli
cmp
pop
mov
ss
adc
pushf
mov
inc
mov
sub
push
fisubr
ret
scas
or
mov
aam
mov
shl
push
xchg
adc
xor
out
into
daa
pop
aaa
sub
adc
das
push
mov
in
fisttp
(bad)
xor
adc
retf
and
test
ss
jl
neg
addr16
inc
push
jmp
or
and
js
or
mov
adc
sbb
jae
push
ins
mov
ss
jmp
dec
repz
mov
inc
xor
sub
push
sub
test
mov
add
and
and
(bad)
add
test
ins
jo
jge
sub
icebp
cld
fucom
add
daa
jae
push
and
xchg
retf
pop
int
arpl
out
pop
cld
or
dec
stos
aad
push
add
into
test
mov
add
pusha
(bad)
ins
int
mov
jmp
inc
pop
lods
je
mov
xchg
rol
sbb
out
xchg
outs
pop
outs
ret
push
shr
dec
sub
lahf
das
jecxz
xchg
adc
and
stos
(bad)
into
movs
sbb
int
in
call
les
push
scas
jp
push
sub
(bad)
addr16
inc
xor
pop
pop
mov
mov
dec
push
xchg
jns
scas
jp
inc
add
pop
outs
cmp
popa
popa
imul
out
xor
outs
cwde
pop
dec
out
pop
cmps
cmp
jbe
push
push
test
lock
stos
pop
cmc
or
dec
xor
fsubr
mov
push
jmp
js
sar
dec
cld
xor
aaa
pop
add
in
inc
(bad)
push
push
adc
adc
imul
inc
pushf
xchg
inc
jnp
pop
mov
(bad)
and
in
fdivr
out
sub
aas
inc
xor
inc
mov
xor
mov
dec
xor
push
(bad)
enter
pop
enter
mov
lea
or
inc
in
(bad)
fcomp
pop
push
adc
test
lods
(bad)
push
push
inc
(bad)
sbb
jne
push
ror
push
or
rol
xor
jecxz
push
mov
push
fcom
push
or
mov
mov
push
push
leave
or
loopne
cmps
fist
pop
cmp
xor
push
cmp
sub
test
mov
add
jb
gs
sub
out
xchg
retf
shl
retf
jnp
inc
sbb
dec
movs
push
fucomip
aas
or
test
arpl
retf
les
retf
imul
sahf
cmp
stos
add
je
and
pusha
sbb
inc
fnstenv
sub
fadd
pop
inc
std
test
(bad)
xchg
mov
ror
cmc
stos
dec
xchg
dec
adc
in
das
arpl
movs
inc
jg
pop
cmc
and
ja
and
retf
jbe
(bad)
out
enter
sar
shl
retf
xor
or
pop
jg
jle
mov
test
push
cwde
pop
cmp
fdiv
ss
data16
stos
fist
inc
mov
shr
nop
addr16
inc
movs
inc
imul
cmps
add
mov
aad
int3
mov
fst
je
nop
jle
push
add
in
(bad)
and
stc
or
dec
out
jno
push
push
jmp
mov
addr16
popf
xchg
or
cmp
mov
(bad)
fimul
pop
out
add
cmp
clc
xor
push
call
fucomp
add
lods
or
jge
test
xor
psrad
dec
inc
mov
ret
cwde
mov
repz
out
adc
hlt
mov
cwde
mov
xchg
test
cmp
test
inc
xor
pusha
lods
jmp
pop
lods
popf
(bad)
mov
jecxz
cmp
hlt
mov
pop
test
ds
mov
cld
test
push
repnz
or
push
push
pushf
cdq
jnp
mov
and
lea
mov
and
test
pop
cli
or
popa
leave
sub
cwde
or
leave
test
push
xchg
jecxz
in
mov
sahf
clc
shl
mov
jo
sbb
div
popf
das
mov
jb
jmp
mov
push
inc
mul
div
push
and
popf
ins
repnz
add
pop
test
pusha
call
add
jnp
fisttp
iret
dec
mov
mov
pusha
ret
mov
pusha
outs
arpl
call
data16
dec
jae
jne
arpl
mov
mov
fisubr
mov
fwait
xor
test
cmps
inc
cdq
dec
movs
add
repnz
std
mov
fist
imul
cmps
and
dec
shr
inc
dec
(bad)
add
push
mov
lahf
push
jp
push
lahf
push
sbb
xchg
xor
jno
(bad)
out
ss
push
mov
sti
mov
enter
arpl
mov
add
ret
mov
in
cmp
jbe
ins
daa
jo
jecxz
outs
or
mov
dec
adc
or
mov
push
sub
inc
mov
in
outs
out
add
enter
lock
xchg
mov
mov
ds
adc
stc
lods
outs
(bad)
in
jle
(bad)
jb
xor
call
or
jno
xchg
adc
aas
xor
sahf
jle
pop
add
cmp
and
mov
sbb
cmp
xlat
das
hlt
fisubr
or
push
dec
jp
xchg
lods
vcvttps2dq
add
repz
xchg
enter
retf
or
rcl
call
xchg
jmp
mov
push
js
mov
fdivrp
lds
sub
stc
in
(bad)
mov
repz
inc
clc
sar
xchg
xchg
sar
or
xchg
les
retf
call
add
outs
and
ret
lods
dec
or
xchg
ins
in
push
dec
mov
mov
cmp
push
(bad)
dec
fstp
scas
xor
mov
mov
push
(bad)
ror
jmp
push
in
stc
test
pushf
inc
sbb
shl
cli
ja
add
fnsave
sub
movs
mov
fdivr
ins
xchg
pop
fmul
push
dec
sub
pop
cwde
jl
shl
pop
std
popf
inc
test
repnz
ror
and
xrelease
xchg
jmp
inc
popa
adc
mov
xchg
push
xchg
push
je
inc
or
or
sbb
sbb
cmp
out
dec
xor
jbe
fmul
adc
inc
inc
sub
mov
sbb
jo
sbb
mov
adc
push
adc
dec
nop
fsub
add
sbb
ja
ret
fdivp
jns
rol
add
xchg
push
push
sbb
mov
in
popa
and
xor
sub
push
cdq
sub
into
mov
mov
stc
xor
nop
(bad)
ss
mov
sbb
dec
or
jl
or
mov
push
inc
lahf
sbb
test
jno
xchg
pop
sbb
mov
dec
jle
cmp
fild
in
mov
daa
retf
push
pusha
dec
or
xor
data16
push
sub
sub
gs
ja
rcl
sbb
retf
jnp
sub
(bad)
xchg
in
std
rcl
fwait
xor
inc
sub
jmp
cmp
mov
mov
fcomip
add
in
cmp
or
in
and
imul
xchg
ret
sti
sub
mov
repz
add
jmp
add
loope
loope
mov
xor
pop
jbe
sbb
and
sub
cmp
sbb
fidivr
mov
es
int
jo
test
jg
pop
inc
arpl
xchg
ret
int3
jne
pop
pop
or
cdq
mov
xchg
cmp
mov
sti
mov
pop
and
xchg
dec
xchg
into
pusha
loope
push
jle
lea
imul
shl
mov
call
(bad)
and
mov
mov
idiv
add
inc
push
cld
movs
mov
sbb
(bad)
sub
sbb
test
cli
rol
pop
ror
cld
xlat
adc
mov
jmp
xchg
inc
das
(bad)
ret
sahf
test
mov
mov
lock
mov
scas
fnstenv
ret
stos
out
sub
mov
xchg
mov
jl
iret
inc
push
int
in
and
cmps
mov
jecxz
movs
mov
(bad)
jmp
leave
xlat
mov
dec
xor
enter
add
jnp
mov
cwde
(bad)
fild
jo
push
ja
in
mov
addr16
mov
js
pusha
out
pop
cdq
shl
push
dec
jmp
fcom
or
dec
mov
nop
or
or
mov
in
es
jnp
push
sub
push
pop
repz
jne
adc
pusha
stos
push
pushf
mov
pop
ja
jp
fmul
das
jmp
ror
push
dec
sbb
stos
jl
cmp
jo
jb
shr
push
in
imul
mov
cmc
scas
sar
dec
sub
sbb
mov
stos
test
arpl
jbe
xchg
sub
jmp
leave
pop
jmp
and
std
sub
sar
es
aam
test
sbb
fs
adc
or
and
or
hlt
xor
movs
fisubr
push
pushf
mov
inc
int
and
mov
dec
xor
leave
shl
pusha
in
outs
int
ret
jg
add
pop
xchg
cmp
fst
xor
sbb
sub
lock
push
dec
fcmovnu
call
rol
pop
inc
jno
pop
and
test
mov
push
dec
ins
add
inc
rcl
sar
mov
pop
test
stos
mov
fldcw
daa
push
ret
call
test
aas
loope
adc
pop
sbb
dec
push
aam
jmp
loope
arpl
test
or
xlat
retf
hlt
cmp
cld
jbe
movs
mov
xchg
xchg
push
add
sub
cmp
scas
clc
mov
jecxz
scas
in
pop
sbb
push
jle
(bad)
and
sbb
bound
mov
aad
mov
inc
pop
sbb
xlat
arpl
dec
jo
fnstcw
sbb
popa
sbb
and
or
retf
sbb
iret
adc
adc
push
lea
mov
sub
sbb
fcom
xchg
daa
or
mov
dec
addr16
dec
les
cmp
popa
xchg
sbb
jbe
iret
fst
jns
ins
jge
inc
adc
movs
movs
mov
outs
leave
retf
mov
(bad)
fwait
call
(bad)
and
pusha
inc
mov
in
push
pushf
mov
iret
and
out
xchg
neg
jno
(bad)
xor
out
sar
xor
pop
sbb
sbb
pop
(bad)
cli
push
(bad)
xor
shl
mov
pushf
jp
dec
dec
test
inc
stc
lods
and
sbb
jne
fadd
(bad)
adc
int
jno
outs
(bad)
retf
push
or
outs
clc
movs
mov
and
retf
jmp
int
cmp
(bad)
adc
int
or
jp
mov
cmp
cmp
push
cmc
popf
(bad)
add
data16
movs
stc
lock
and
repz
js
mov
sub
inc
ss
inc
cmp
int3
out
or
aas
int3
int3
popf
aad
cmp
pop
in
jbe
xchg
jnp
push
adc
mov
or
jp
cmp
jo
or
pusha
mul
jge
rcr
sbb
xchg
(bad)
lahf
lods
mov
cmp
inc
adc
mov
and
retf
sahf
add
add
add
scas
fwait
push
pop
int
add
shl
push
fcom
mov
or
(bad)
push
xlat
xchg
pop
add
push
mov
mov
mov
jge
cmp
sub
pop
jne
cs
aad
neg
mov
mov
in
jl
jns
sar
fild
(bad)
int3
vsqrtps
mov
repz
inc
clc
adc
ret
xor
or
inc
ret
cdq
leave
loopne
add
jae
hlt
pushf
pop
sub
hlt
cli
mov
push
enter
jmp
cli
xchg
jne
pop
mov
mov
mov
pusha
push
in
xchg
dec
jge
xor
rcr
out
cmp
loop
push
jno
and
pop
nop
and
push
cmp
fistp
fild
(bad)
int3
mov
sbb
push
add
ss
popa
xchg
pop
pop
push
mov
push
cmps
pop
outs
mov
mov
jmp
jae
mov
inc
imul
push
add
fidiv
push
dec
push
enter
push
pop
ins
lods
push
mov
adc
and
jmp
and
mov
dec
aad
xchg
sub
push
xchg
push
mov
data16
sti
movs
sbb
and
mov
adc
add
movs
fcmovnb
nop
jnp
fild
rcr
call
or
mov
retf
lahf
cmp
add
jle
jne
pushf
ucomiss
cs
sub
adc
fstp
addr16
inc
push
sub
sbb
jnp
xor
adc
mov
ins
test
out
scas
aas
enter
jmp
in
pop
das
aad
and
adc
aaa
ret
(bad)
xchg
psubsb
adc
pop
ds
mov
gs
mov
adc
fldcw
into
ja
inc
mov
cmp
mov
cmc
cmps
sub
sti
mov
dec
and
fmul
mov
xlat
call
leave
dec
int3
je
dec
and
xchg
mov
enter
and
jns
xchg
rcl
cs
push
retf
cmps
and
inc
bound
js
loopne
movs
cmp
inc
jne
(bad)
add
jp
test
push
push
or
pop
cdq
(bad)
fadd
(bad)
mov
fwait
repnz
mov
pop
xchg
dec
pop
mov
je
pop
xchg
cmps
into
dec
out
test
outs
or
jnp
jl
adc
fwait
push
pop
repnz
int3
cmp
std
mov
xchg
sub
push
dec
shl
jb
pop
jnp
sbb
jp
das
mov
rcr
mov
(bad)
fldenv
adc
(bad)
cmp
dec
push
and
std
mov
adc
aas
mov
push
pushf
std
sub
xchg
mov
int
mov
icebp
cli
out
mov
repnz
jg
mov
inc
dec
xchg
adc
lock
shr
adc
inc
push
push
mov
xor
mov
mov
leave
mov
neg
pop
or
in
push
sbb
cmps
mov
pop
xor
lahf
ins
cmps
aaa
mov
push
movs
in
push
or
xchg
mov
adc
repnz
aam
fsub
bound
pop
test
lods
pushf
and
adc
loope
jle
jge
pop
aas
and
mov
push
test
test
rol
mov
push
test
cmc
(bad)
jno
xchg
and
ret
popa
dec
and
ret
jb
and
jle
ror
xchg
inc
cs
xlat
mov
jbe
inc
in
xor
retf
(bad)
add
cmp
sti
mov
(bad)
fwait
je
repnz
les
adc
icebp
test
nop
xchg
mov
xor
sbb
sub
fmul
dec
sbb
shr
repnz
test
js
mov
fst
mov
adc
and
cmp
mov
mov
xchg
addr16
inc
outs
mov
pusha
pop
stos
xor
push
cmps
push
sub
pusha
mov
mov
add
retf
cmc
jo
jge
and
xchg
push
sti
mov
cmp
jl
cmp
xchg
mov
xor
ds
outs
aad
push
aas
dec
and
clc
sub
stos
lahf
imul
add
sub
enter
inc
mov
push
mov
push
call
test
shl
rcr
ds
(bad)
cmp
push
pop
ins
popf
xor
adc
push
xor
imul
in
xlat
mov
adc
mov
mov
or
push
je
inc
sub
adc
in
adc
or
mov
(bad)
push
pop
jnp
and
test
xor
lods
dec
mov
(bad)
adc
and
mov
mov
xchg
cwde
ins
cs
sub
bound
(bad)
dec
jnp
mov
jle
inc
sbb
ss
xchg
mov
lds
mov
dec
push
pop
jmp
stc
pop
aad
xor
scas
inc
sub
add
fidivr
pop
sar
push
xchg
pop
pop
mov
imul
add
lock
lock
push
dec
in
shl
mov
inc
xor
jp
int
pop
loope
or
mov
repz
mov
and
movs
dec
ins
rol
mov
ja
pop
repnz
in
cli
cmp
outs
and
(bad)
sbb
xchg
adc
pop
ja
push
pop
sub
pop
jo
and
add
adc
out
cwde
fs
mov
ret
aad
cmp
push
mov
jb
ret
ret
pop
popa
xor
add
or
clc
or
rol
jg
in
lea
stc
movs
cmp
and
movs
or
fcomp
add
or
pop
sub
(bad)
icebp
xchg
rcr
jle
hlt
jmp
add
jns
ds
jle
xor
lea
cmp
ja
push
sbb
mov
loop
js
fnsave
repz
int3
and
addr16
mov
das
jg
cwde
sub
outs
and
pop
sub
dec
aam
xchg
fisttp
fstp
jbe
or
inc
jno
jb
pop
adc
inc
inc
jmp
inc
adc
add
addr16
rcl
dec
sbb
and
push
mov
jmp
jge
dec
add
push
shl
xchg
pushf
mov
or
call
outs
cli
cmp
ret
inc
push
aas
cmp
cmp
mov
shl
or
adc
mov
gs
push
sbb
and
pop
stos
(bad)
cmp
out
or
inc
push
mov
inc
inc
jmp
cld
stos
aad
xor
and
sub
into
jl
out
push
inc
sar
fs
dec
ins
pop
and
push
xchg
bnd
mov
jmp
inc
or
mov
xchg
or
daa
je
ret
dec
addr16
xor
mov
outs
and
sub
ficom
loopne
mov
and
jbe
imul
cmps
dec
dec
movs
in
jmp
mov
aam
inc
pop
sti
cmc
jg
aam
dec
cli
out
daa
or
jmp
popf
adc
lahf
adc
test
dec
ret
pop
fucomip
addr16
in
mov
mov
call
add
sti
pop
dec
jl
or
add
fwait
xchg
ret
retf
mov
lods
mov
xor
mov
cmp
mov
das
ds
fnstenv
les
rol
stos
or
pop
pop
aas
xchg
fistp
mov
and
retf
aad
pop
mov
lds
das
rol
scas
jp
mov
ds
mov
lds
jns
repz
push
int3
mov
in
inc
out
inc
(bad)
cmp
(bad)
adc
jecxz
rcl
mov
lahf
jmp
adc
(bad)
je
add
stc
dec
or
adc
push
pop
stos
mov
fimul
rcr
mov
fnstenv
mov
cmp
ret
cmp
mov
mov
or
fst
mov
inc
adc
(bad)
popf
xor
scas
dec
push
std
call
jbe
xchg
xchg
cdq
push
jae
iret
rcl
int3
into
fidiv
(bad)
mov
mov
out
cdq
sbb
xor
jae
popa
push
mov
mov
push
xchg
aad
jg
dec
sbb
push
sub
clc
sti
or
cld
fsub
xor
dec
in
dec
int3
mov
lahf
popf
inc
inc
clc
lahf
add
addr16
add
jbe
mov
adc
jle
cs
das
lods
dec
or
rol
pop
pop
stc
stos
cmc
nop
sbb
lea
addr16
pop
xor
jbe
dec
adc
test
jp
sbb
lods
mov
cmc
push
sbb
pop
mov
addr16
out
inc
(bad)
pop
mov
loop
cmp
jb
xlat
pop
dec
or
daa
neg
clc
add
dec
cmp
add
cld
or
nop
mov
jbe
pop
and
in
pop
jmp
(bad)
cmp
mov
sub
fld
and
inc
arpl
aad
xor
pop
add
cli
emms
dec
lods
mov
retf
xor
pop
inc
mov
cwde
mov
dec
cmp
sub
xchg
and
inc
sbb
mov
mov
test
mov
out
int3
data16
arpl
pushf
imul
mov
inc
es
jl
sub
cmps
adc
test
jle
je
clc
push
stos
out
loope
rcr
pop
movs
dec
inc
daa
nop
push
mov
fsub
lea
add
imul
xchg
adc
call
popa
sahf
mov
push
stos
cmp
xchg
xor
cmp
xchg
out
in
or
xchg
test
xor
outs
ja
fwait
push
xor
popa
fld
pop
or
loope
mov
aas
inc
frstor
push
push
stc
jbe
adc
cs
(bad)
cmp
fs
clc
xlat
jg
add
not
aas
test
fwait
xor
adc
pop
sub
add
sbb
add
fist
sbb
lahf
sub
dec
outs
mov
pop
or
or
stos
push
ja
gs
inc
add
ror
dec
in
jp
sbb
jmp
jle
or
enter
pop
push
(bad)
adc
mov
rcl
xchg
cs
nop/reserved
ret
dec
push
add
rcl
cmp
push
jae
retf
icebp
cs
movs
mov
rol
mov
jne
push
dec
jo
std
jl
sar
push
sub
cdq
fistp
stos
sub
jns
lock
or
stc
test
popf
mov
cwde
loopne
ficomp
cld
mov
dec
xor
pop
pop
jmp
push
inc
scas
sbb
inc
scas
mov
pop
in
lea
xchg
mov
popf
xchg
gs
dec
mov
and
pop
mov
jae
jg
mov
mov
add
mov
pop
test
jnp
push
push
and
xchg
lock
lock
test
pop
repnz
icebp
push
and
jmp
daa
pop
dec
leave
mov
jo
cli
mov
outs
mov
aad
jmp
cmp
xlat
lods
dec
jnp
loope
test
mov
xor
(bad)
ss
(bad)
call
aad
test
cmps
fwait
inc
and
sub
loopne
xchg
adc
(bad)
jl
sar
out
pop
aas
imul
jmp
int3
call
jecxz
push
xchg
sub
jecxz
mov
pop
out
push
retf
out
inc
mov
(bad)
mov
pop
fild
mov
xor
test
xlat
ins
dec
ins
lods
pop
mov
pushf
or
sbb
nop
mov
bound
jmp
pop
pop
mov
xchg
mov
mov
shl
call
cmp
add
gs
xchg
jge
jge
push
in
stos
jns
mov
(bad)
addr16
sub
pusha
mov
dec
or
je
mov
cs
adc
adc
xlat
xchg
push
inc
rcr
push
or
out
enter
push
sbb
in
call
fadd
adc
int
loop
dec
rcr
lods
out
sbb
pusha
jae
xlat
lods
adc
jle
inc
or
lock
mov
pop
pop
xchg
(bad)
out
inc
sti
xor
stc
stc
popf
mov
adc
lea
ins
push
and
cdq
add
add
call
mov
dec
sub
icebp
movs
lods
pop
pop
xchg
jae
pop
cmp
pop
jno
push
pop
scas
retf
scas
mov
pop
shl
xlat
ss
adc
loop
jns
in
dec
xchg
xor
in
jno
jle
daa
cmps
and
iret
jae
retf
or
xchg
or
push
xlat
mov
fisub
jmp
xchg
scas
mov
pop
lds
enter
push
(bad)
icebp
mov
sub
pushf
sub
push
mov
dec
dec
sbb
loopne
cmps
or
cwde
fstp
gs
jg
cmp
or
cmc
int
dec
popf
pop
mov
push
std
inc
test
mov
xchg
pop
jle
out
or
cmps
ins
mov
fist
int3
push
repnz
cs
std
stc
push
ins
ret
mov
int
lods
clc
inc
push
jecxz
je
ins
push
dec
rol
rcr
loope
leave
mov
fiadd
cmp
and
cmc
dec
xchg
adc
and
leave
mov
popf
cmp
test
fistp
adc
loopne
cmp
jp
add
imul
std
and
shr
push
jo
cdq
push
cdq
push
jg
leave
(bad)
adc
xchg
int3
movs
push
mov
add
out
xor
mov
or
lods
cs
fsub
test
mov
enter
adc
jecxz
loope
xor
push
jnp
(bad)
xchg
ins
jecxz
push
bndstx
rcl
xor
cmp
inc
dec
sub
or
mov
adc
nop
xchg
jb
(bad)
scas
fs
cmp
or
ret
pop
adc
ret
inc
les
int
enter
sbb
movs
inc
cmp
push
sub
ins
push
clc
mov
push
outs
test
jg
std
push
adc
pop
lds
and
out
pop
sbb
push
popa
push
mov
mov
push
add
add
mov
mov
xchg
or
and
adc
hlt
push
not
bound
xchg
mov
loope
jne
cld
inc
stos
into
sub
inc
mov
out
repnz
xchg
pop
data16
sub
imul
cmp
loop
lock
aam
sub
imul
and
rcl
cmp
mov
dec
cmp
leave
mov
cmp
mov
lds
sbb
or
and
(bad)
pop
xchg
sub
xchg
and
test
movs
test
scas
std
mov
sub
xor
pop
or
fimul
adc
xchg
pop
push
aam
xchg
out
cmp
xchg
fldcw
xor
(bad)
ret
ins
js
mov
add
imul
lods
push
xchg
data16
cmp
ficom
dec
adc
in
pop
dec
pushf
fisubr
push
sub
pop
and
push
pop
aaa
xor
xor
loope
sbb
test
jg
xchg
adc
jmp
lds
or
lds
xor
cmp
xchg
and
add
outs
or
push
retf
cmp
mov
fcmovu
cld
adc
cmp
mov
jno
cmps
fisub
pushf
add
push
xlat
or
add
bnd
les
shl
outs
mov
cmp
fcom
ret
xor
scas
out
inc
shr
(bad)
(bad)
nop
imul
sub
sbb
pop
(bad)
adc
ret
add
in
push
xor
mov
enter
and
cs
xor
mov
and
stos
cmp
xchg
pop
inc
and
cvttps2pi
sar
(bad)
sub
cdq
imul
aas
cmp
dec
inc
jb
cmp
mov
fbstp
aas
(bad)
push
sbb
cmps
inc
jno
ja
fist
in
xchg
pop
std
fimul
aad
test
xor
enter
pop
sub
dec
fidivr
push
jge
pop
frstor
push
test
js
jne
repz
(bad)
imul
es
daa
mov
dec
push
push
cmp
push
pop
sbb
nop
shl
sbb
push
and
iret
rol
xchg
cmp
gs
adc
and
loop
enter
mov
mov
retf
jle
fucomip
(bad)
xchg
or
out
sbb
mov
test
xchg
loope
or
push
out
sahf
mov
mov
push
movs
test
xor
lods
mov
clc
fs
mov
rcl
jmp
push
xor
scas
shl
jmp
test
inc
sub
cmp
adc
inc
dec
dec
sti
inc
cmp
int
cmps
sub
jl
mov
jnp
push
ss
movnti
stos
gs
jecxz
push
cmp
pop
xchg
(bad)
fstp
mov
enter
xlat
idiv
mov
push
cmps
fbstp
out
sbb
pop
or
pop
xchg
jae
push
clc
das
or
cmp
push
jmp
cmp
stos
pmulhw
ret
into
xor
fwait
out
mov
mov
push
xchg
(bad)
xchg
pop
sahf
stos
(bad)
frstor
fimul
push
xchg
loopne
push
imul
dec
and
sub
mov
loop
es
xchg
pop
lds
push
mov
fs
test
inc
bound
pop
ins
dec
sbb
mov
sbb
pop
cmps
sbb
xchg
aam
pop
add
cmps
mul
adc
xchg
out
daa
loopne
push
xchg
cmp
cmp
inc
mov
or
out
cmps
xor
or
mov
movs
dec
cs
lahf
clc
outs
dec
cwde
pop
rcr
int3
sub
fwait
mov
push
jne
jne
jbe
push
sub
dec
sub
(bad)
mov
cmps
adc
je
shl
lods
fs
hlt
mul
test
add
cld
and
dec
add
das
xchg
jo
pop
or
adc
popa
js
adc
mov
hlt
jmp
pop
aam
mov
maxps
rcr
mov
pop
retf
and
add
and
es
or
test
jbe
mov
test
int
gs
dec
xor
add
or
and
shl
pop
xchg
fsubr
mov
cmp
addr16
xor
ret
push
xlat
pop
and
and
sbb
mov
adc
and
mov
inc
xchg
in
ins
jg
stc
sub
imul
adc
pop
dec
jo
(bad)
cld
inc
lahf
cdq
or
sbb
ins
jno
xor
push
mov
sar
dec
sub
jno
loopne
push
lds
add
fdivr
add
add
mov
call
in
repz
repz
imul
sbb
xchg
sbb
inc
xor
fadd
dec
fs
cdq
pop
mov
in
div
jge
dec
pop
es
imul
xor
xchg
loopne
in
mov
mov
mov
scas
dec
clc
test
bound
xor
sub
push
add
mov
pop
data16
retf
jmp
mov
or
movs
xor
aad
(bad)
xchg
out
lods
cmp
or
out
adc
push
fs
lahf
or
mov
push
pop
cmp
cmp
lock
(bad)
pop
sbb
xchg
pop
sub
das
mov
iret
repnz
movs
jle
fist
lods
nop
mov
sti
std
mov
out
jo
mov
sub
aad
lock
stc
push
jg
push
cmp
pop
sbb
lahf
pop
leave
stos
xchg
xchg
(bad)
jp
cmp
xchg
test
pop
dec
add
in
enter
xchg
mov
inc
push
fisubr
in
add
pop
sub
popa
mov
push
and
or
movs
cmp
dec
lds
lds
lea
xor
ins
call
mov
sti
ret
leave
aas
daa
xchg
loop
or
stos
push
xchg
in
clc
add
pop
hlt
sub
push
add
rcr
mov
or
sub
sar
les
push
fiadd
retf
sbb
xchg
xchg
fldenv
cdq
jp
pop
xchg
cmps
test
sbb
cmc
inc
xor
dec
lea
xor
mov
cli
int
scas
sub
add
mov
xor
adc
and
xor
outs
and
adc
(bad)
push
adc
push
mov
ret
pop
in
and
(bad)
mov
dec
push
inc
mov
out
pop
cmp
inc
inc
mov
call
xchg
imul
sub
adc
aas
aad
out
jb
lock
xor
xchg
int3
cwde
shl
xor
add
dec
xchg
popa
xlat
stos
and
xor
xchg
mov
mov
pushf
popa
or
pop
mov
jns
mov
repz
rcl
test
div
sbb
cwde
out
mov
pop
(bad)
adc
test
(bad)
push
sbb
or
sub
xlat
mov
sti
cdq
add
dec
xor
sub
imul
rol
inc
cwde
mov
fnstenv
daa
add
out
ins
jno
pusha
dec
and
jg
mov
add
test
push
push
repz
mov
stos
std
std
jl
icebp
mov
xchg
and
shr
mov
ins
sbb
add
int3
pop
clc
mov
dec
sbb
test
jbe
scas
mov
in
stos
rcl
xchg
xchg
neg
dec
jl
imul
jae
cmp
in
sar
scas
mov
mov
inc
retf
inc
cmp
pop
(bad)
stos
mov
push
pop
push
mov
(bad)
mov
push
and
dec
mov
and
adc
and
retf
pop
stos
adc
add
jmp
cmc
jle
add
je
and
sti
cmp
pop
mov
mov
mov
mov
fist
(bad)
aad
jp
or
push
push
fst
nop
stos
xchg
fstp
out
xchg
mov
inc
mov
inc
jge
lea
and
cmps
mov
les
aam
rcl
mov
fcmovne
or
loopne
arpl
fldcw
mov
pop
fld
xchg
add
pop
jno
fld
movs
mov
cmp
call
retf
xchg
add
xchg
addr16
mov
ja
push
retf
jmp
ss
mov
fsubr
aam
mov
mov
in
mov
aam
jbe
sub
ret
pop
xor
adc
sub
sbb
stos
lea
das
push
mov
pop
cmps
test
in
das
sahf
aam
sbb
dec
scas
setne
pop
sub
gs
addr16
sub
outs
je
sti
shl
mov
aad
mov
jl
shl
les
sar
mov
sub
jl
aas
fwait
lods
ror
cmps
rep
cmp
mov
cdq
mov
pushf
mov
mov
or
pop
mov
call
cdq
and
sub
popf
aas
push
sbb
jnp
aad
popf
aam
add
outs
icebp
iret
sbb
scas
ds
sbb
repnz
pushf
shl
push
xor
scas
outs
call
pop
jno
rol
popa
int
mov
sub
lods
jns
or
mov
jae
loop
out
call
and
and
cmps
push
clc
pop
call
mov
jns
dec
pop
jp
rol
and
sub
xchg
dec
aad
lock
inc
push
nop
push
in
pop
aad
dec
xchg
or
mov
repz
retf
retf
int
push
jle
daa
xchg
xchg
stos
add
inc
sbb
repnz
shl
ja
fucomi
jo
mov
sbb
fild
cmps
and
xchg
sub
inc
dec
sub
fistp
shl
adc
ret
inc
mov
fcom
add
adc
outs
jbe
adc
push
push
lock
mov
mov
mov
add
jecxz
or
pop
stos
add
xchg
test
ins
retf
inc
xor
(bad)
push
fisubr
outs
cld
call
loope
mov
test
dec
(bad)
pop
imul
pop
mov
or
(bad)
inc
inc
repz
dec
mov
pop
cs
push
mov
retf
or
lods
jecxz
sbb
dec
pushf
enter
sbb
outs
push
fs
lods
in
jp
das
xchg
jle
dec
mov
adc
arpl
inc
ret
add
call
push
fist
scas
sbb
xchg
stos
repnz
mov
jmp
mov
push
outs
adc
mov
cmp
push
stos
icebp
push
ins
cmp
sub
(bad)
jle
mov
dec
mov
(bad)
xchg
cmp
mov
push
test
fidivr
and
mov
dec
inc
fadd
sbb
fisttp
jae
add
push
jno
add
lahf
retf
dec
push
and
add
mov
sbb
loopne
(bad)
pop
retf
shl
mov
clc
cs
retf
mov
xchg
cvtdq2ps
ret
xchg
or
adc
push
in
ficom
fnclex
lods
add
je
jecxz
adc
push
fsub
call
addr16
movs
cmc
out
(bad)
xor
or
(bad)
fst
cwde
jmp
scas
test
hlt
retf
data16
pop
dec
cmp
cdq
shr
inc
(bad)
(bad)
push
push
pop
dec
es
push
dec
add
mov
inc
push
loop
enter
mov
dec
scas
xchg
lahf
add
sbb
retf
sub
inc
les
gs
ds
in
mov
xor
sbb
(bad)
out
jge
jp
add
loope
loopne
fnstcw
movs
pusha
call
push
ror
cmp
push
test
sbb
and
adc
adc
mov
and
addr16
std
pushf
jmp
sub
cmp
pop
dec
pop
jp
imul
inc
sub
(bad)
sub
mov
xor
scas
repz
mov
in
in
(bad)
sub
or
add
mov
cli
push
dec
fcomp
test
cmp
pop
aas
mov
sbb
mov
call
aaa
bnd
cli
pop
fldcw
dec
push
dec
mov
outs
mov
cmc
add
cli
rol
pop
cwde
add
sbb
cs
jbe
imul
push
adc
sub
aad
(bad)
mov
(bad)
addr16
cwde
xchg
push
cmp
push
call
ins
sub
(bad)
or
(bad)
aam
popf
jno
cwde
xor
adc
stc
imul
inc
push
push
fnsave
mov
(bad)
mov
mov
sbb
sub
xchg
cmp
mov
(bad)
scas
std
sahf
cld
out
sub
retf
or
xchg
mov
mov
push
(bad)
xchg
xchg
push
call
push
mov
fcomp
pop
mov
dec
push
dec
and
and
and
ret
in
ins
or
and
mov
out
pop
inc
mov
xlat
test
sahf
sahf
loopne
pop
es
pop
inc
xlat
sub
div
sub
loopne
sub
push
dec
daa
or
sbb
retf
and
dec
in
and
cmp
lods
or
(bad)
jbe
sub
mov
ss
inc
xor
movs
dec
cmp
cli
lock
adc
fwait
(bad)
mov
mul
inc
pop
xchg
call
pop
cwde
xchg
mov
cmp
xor
(bad)
out
arpl
pop
push
retf
dec
out
mov
push
push
sub
jle
inc
adc
and
test
inc
das
dec
sbb
push
cld
xchg
out
scas
or
sub
sub
daa
cli
mov
jbe
pop
cmp
pop
push
adc
xor
jmp
sub
adc
int3
fsub
stos
pop
cs
adc
loopne
test
cmp
inc
fdiv
mov
outs
or
and
xchg
and
mov
test
retf
add
in
out
mov
int
mov
out
cmp
int3
aas
sar
jp
mov
push
adc
jge
aam
mov
test
loope
cdq
cli
jae
sub
scas
repnz
mov
repz
jp
test
inc
out
test
and
shr
clc
pusha
add
les
imul
stos
cmp
cmp
iret
aad
cmps
xchg
aaa
jno
data16
sti
inc
test
push
nop
push
imul
ja
or
sub
lock
mov
mov
test
jle
xchg
cmp
xor
push
sub
outs
cmp
jmp
pop
sub
add
sub
cmps
mov
call
cmp
sub
xchg
mov
or
ja
xchg
movs
xchg
dec
mov
mul
mov
xchg
in
popf
sbb
cs
cmp
and
gs
das
outs
pop
xor
adc
sbb
xchg
sub
lods
retf
pop
inc
or
mov
mov
loop
les
scas
fsubr
add
ins
mov
sahf
xchg
dec
test
fistp
cmp
xchg
cdq
fadd
push
scas
jp
cmps
je
dec
(bad)
hlt
sbb
iret
pop
imul
jmp
xchg
outs
adc
ds
out
mov
xchg
lds
ss
mov
out
jmp
pushw
jnp
xchg
inc
test
xlat
lods
icebp
or
addr16
scas
fisubr
xor
fisttp
jbe
add
jmp
jbe
test
mov
leave
sbb
sub
xor
jmp
push
lock
fnsave
mov
push
xchg
fistp
(bad)
out
mov
mov
daa
icebp
push
out
stos
dec
scas
ins
jmp
lahf
fist
add
leave
dec
jle
test
repz
fwait
lods
sbb
pop
int
xchg
inc
(bad)
push
je
out
retf
pop
aas
sbb
pop
int3
cdq
icebp
cwde
xor
arpl
js
rol
iret
lock
xor
pusha
xchg
data16
loope
loope
out
mov
add
dec
inc
mov
adc
(bad)
dec
mov
or
cwde
cmp
jbe
jmp
adc
xchg
fs
xchg
jne
ret
mov
test
and
jecxz
movs
mov
aaa
inc
inc
jno
es
aaa
fxch
xor
gs
outs
fwait
push
sbb
sbb
dec
add
mov
sar
js
stos
into
xor
fcom
xor
dec
xchg
cmp
cmp
mov
sbb
mov
iret
xchg
push
pop
and
clc
adc
daa
std
ins
shr
cli
outs
or
mov
cmp
aaa
hlt
nop
mov
imul
ins
mov
(bad)
pop
mov
retf
call
adc
jecxz
cmc
dec
loope
out
(bad)
inc
mov
scas
fst
and
dec
repz
inc
imul
jg
xor
adc
xor
dec
ror
push
mov
inc
outs
ins
(bad)
mov
xchg
retf
cmp
int3
aas
cdq
jno
hlt
retf
dec
inc
dec
pop
stos
sti
mov
icebp
and
sbb
jp
(bad)
mov
cwde
and
or
fwait
sbb
push
jmp
cmp
add
into
bound
cmps
lea
(bad)
dec
sub
dec
xor
cmps
mov
jmp
retf
adc
sbb
(bad)
jns
xor
mov
int3
cld
daa
mov
inc
test
mov
sbb
std
push
cmps
cmps
jle
dec
pop
cmp
add
stos
xor
xchg
add
jecxz
ret
xor
jp
movs
and
xchg
shl
or
adc
mov
adc
push
arpl
icebp
jle
outs
dec
pop
dec
xchg
sbb
push
or
std
call
ret
outs
fxch
hlt
xchg
into
xlat
retf
pop
adc
(bad)
in
sub
addr16
mov
dec
(bad)
xchg
or
jmp
sub
(bad)
pop
add
xor
cmc
add
ins
push
imul
mov
int
repnz
sub
mov
or
movs
cmp
jmp
push
rol
xchg
jnp
inc
(bad)
hlt
data16
(bad)
mov
jg
jnp
add
fsub
retf
pusha
pop
sbb
jl
movs
cmp
add
add
call
sub
pop
outs
sti
ds
push
and
cwde
xchg
pushf
daa
pushf
pushf
sub
shr
push
push
mov
mov
xor
xor
fisub
xchg
sub
xor
adc
push
mov
push
xchg
xlat
sbb
movzx
gs
out
pop
clc
mov
adc
iret
sbb
and
fadd
or
push
or
rol
shr
aas
outs
inc
mov
fwait
outs
mov
xor
rcr
xor
out
xor
sbb
out
mov
adc
js
out
nop
out
inc
push
nop
pop
fwait
mov
fnstsw
scas
mov
xchg
hlt
call
inc
fmul
or
or
jns
retf
pop
cmp
(bad)
ja
mov
pushf
inc
pop
int
mov
add
in
imul
inc
inc
cmps
les
les
(bad)
adc
and
in
in
hlt
cwde
call
fwait
lock
mov
scas
call
cmps
in
jmp
xchg
jo
into
mov
mov
fsubr
xchg
lds
scas
div
jl
mov
cli
xchg
shr
fld
jle
icebp
movs
mov
push
cmps
push
daa
cmp
in
jg
xchg
lods
faddp
aas
add
and
(bad)
mov
lods
add
inc
sti
mov
loop
inc
lea
mov
mov
xor
dec
sub
dec
repz
fstp
sahf
mov
pop
jge
ffreep
mov
stos
stos
(bad)
call
push
mov
inc
loope
sbb
mov
stc
fild
xchg
fstp
pop
add
arpl
mov
push
bound
scas
in
mov
arpl
cwde
(bad)
pushf
lods
(bad)
add
xchg
dec
(bad)
stos
mov
jg
mov
or
iret
pop
vpmaxuw
adc
mov
or
popa
ins
imul
in
mov
gs
fmul
sbb
in
in
(bad)
repz
scas
dec
lahf
push
sbb
out
lods
(bad)
cli
cmps
sub
fistp
sbb
aas
ss
jl
add
icebp
pop
jnp
jbe
ds
aaa
push
dec
(bad)
xor
(bad)
out
push
mov
cs
add
xor
popf
adc
pop
lea
mov
mov
mov
cmp
outs
jb
imul
pop
in
fnstenv
jae
fsub
jmp
out
out
int
push
jno
loop
mov
xchg
add
or
repz
mov
imul
fdiv
pop
xor
lods
sbb
xor
cmps
inc
outs
es
dec
fldcw
fneni(8087
fld
fisub
cmps
inc
imul
shr
adc
inc
bswap
cmps
or
jge
rcr
imul
pop
ds
sbb
in
ret
push
pop
jb
push
test
mov
add
cmp
jle
fistp
sbb
add
mov
push
push
mov
call
aas
jle
aaa
int3
add
xchg
outs
fld
jmp
pop
loopne
cmp
(bad)
int3
and
adc
stos
mov
loop
pop
ss
inc
add
jb
es
lock
popf
call
or
sahf
mov
xor
call
js
mov
mov
retf
sbb
xchg
movs
inc
cwde
mov
sbb
inc
lods
dec
and
movs
enter
(bad)
xchg
and
fld
jo
or
dec
repz
bnd
daa
mov
push
neg
adc
adc
std
out
das
mov
sub
retf
sub
dec
adc
retf
aas
cmp
imul
push
dec
js
push
xchg
leave
loope
inc
ins
adc
ror
push
cmp
pop
or
cwde
das
in
xor
mov
fcomip
fisttp
and
add
push
mov
or
cwde
daa
call
mov
push
jbe
retf
fsubr
lock
xchg
ror
pop
std
ins
cmp
ss
xor
and
lds
mov
jmp
ins
jle
cmp
or
cmp
imul
repz
xchg
std
data16
(bad)
sub
repz
xlat
ins
adc
pop
(bad)
cld
ret
push
push
loope
pop
adc
std
sar
jmp
pop
pop
ss
cmp
daa
cld
sbb
imul
xchg
add
into
ror
inc
sub
xor
aam
jg
adc
xor
pop
mov
cmp
sub
out
aam
lds
mov
cs
stos
xor
mov
xchg
xlat
es
int3
(bad)
cmp
sub
pusha
lds
sub
ret
push
add
gs
pop
out
or
lods
add
mov
das
push
adc
xor
xchg
call
lea
stc
je
mov
loop
adc
int3
stos
call
out
mov
add
in
cs
hlt
gs
xchg
adc
shl
cmp
push
jno
cmp
sub
les
mov
pusha
dec
jnp
aaa
dec
iret
jmp
movs
xchg
mov
add
inc
adc
add
cs
sbb
xchg
cmps
cmps
pop
push
aaa
mov
mov
fadd
jnp
sbb
push
pop
ja
dec
pusha
movs
inc
jne
call
adc
and
cdq
pop
mov
pusha
xchg
into
das
fmulp
pop
jb
call
ret
jg
test
pusha
sub
sbb
dec
lods
xor
and
int3
pop
xchg
and
mov
test
mov
cdq
mov
je
loope
test
jbe
imul
adc
cwde
das
mov
aaa
push
in
out
sub
arpl
shl
inc
out
dec
movs
pop
pop
mov
jmp
dec
imul
lods
inc
pop
cmc
push
outs
inc
int3
pop
loop
mov
pop
push
imul
mov
std
outs
mov
loopne
and
inc
js
sbb
test
push
dec
sub
fnstcw
cmps
aad
data16
xchg
in
adc
mov
nop
dec
dec
mov
ror
and
and
out
cmp
shl
neg
jno
enter
fimul
adc
add
or
and
in
es
dec
pusha
xor
xchg
clc
cmc
call
sar
mov
movs
push
arpl
das
gs
ins
mov
retf
sub
lock
xchg
dec
ficomp
and
mov
ins
call
in
jo
daa
cmp
lea
sbb
jg
sub
dec
dec
aad
(bad)
mov
sub
test
adc
mov
inc
adc
and
xor
lahf
pop
sti
dec
(bad)
xor
adc
sub
ins
cmp
add
lods
sbb
dec
or
ins
adc
ret
jo
jo
mov
fldenv
(bad)
mov
enter
into
mov
and
or
mov
loop
xchg
fwait
leave
lods
inc
in
lods
icebp
ss
mov
sbb
mov
call
shl
jo
cmp
fist
in
repz
mov
test
xor
(bad)
out
ins
lock
or
push
lods
(bad)
lock
sti
es
push
push
mov
pop
repz
jmp
mov
mov
jo
enter
fst
(bad)
push
and
adc
push
scas
repz
popa
mov
xchg
cmp
and
and
ret
ins
pop
sbb
mov
loop
mov
ja
clc
mov
pusha
gs
aaa
cmps
fstp
pop
xor
imul
ret
mov
xor
scas
jp
rcr
mov
clc
neg
or
adc
call
sbb
pop
mov
fwait
das
push
stc
cmps
ins
add
push
stos
xor
ret
and
out
fadd
sub
retf
scas
jecxz
mov
pop
inc
mov
cmc
popa
inc
xor
xor
ins
jmp
popa
cli
jecxz
out
mov
retf
inc
mov
pop
ja
cdq
mov
add
cmp
cmps
mov
fs
int3
aas
cmc
(bad)
cmp
arpl
and
outs
loop
push
mov
mov
mov
push
cli
xchg
popf
xor
cmp
xlat
ror
aas
push
test
mov
inc
jne
inc
adc
js
(bad)
jns
stos
push
enter
inc
add
inc
sbb
jp
daa
mov
jae
pop
in
popa
call
ja
sbb
loope
push
xchg
sub
jecxz
fnstenv
iret
aaa
mov
cmp
je
pop
and
mov
cmps
dec
mov
jp
mov
cmp
dec
mov
sub
test
cwde
out
aad
sbb
imul
fbstp
mov
jmp
cmp
lea
xchg
enter
(bad)
enter
inc
add
icebp
into
and
loope
adc
xchg
xchg
adc
add
add
jb
add
jbe
push
jnp
loop
sub
aad
push
pop
or
lods
repnz
xchg
jo
sar
xchg
das
push
repz
push
fiadd
jns
sbb
arpl
add
pusha
and
lea
push
and
adc
in
ins
shl
ret
mov
daa
pop
sbb
mov
jmp
cmp
xchg
xchg
(bad)
mov
fild
push
in
icebp
icebp
loopne
mov
jg
outs
xor
pop
outs
mov
emms
stos
adc
push
push
retf
pop
add
xor
lahf
jle
inc
xlat
mov
dec
xchg
jae
es
loope
xchg
push
nop
mov
inc
popa
jno
pusha
int
inc
cwde
not
out
in
adc
in
add
int
sahf
test
fstp
cmp
stc
dec
js
loop
ja
cwde
sbb
(bad)
mov
sub
cmp
inc
lea
mov
sar
outs
js
jmp
mov
in
sub
ds
call
xor
jnp
das
ficom
xchg
mov
push
push
imul
pop
(bad)
inc
push
rol
out
ret
mov
or
test
bnd
les
daa
jb
xchg
jle
pusha
out
je
push
mov
fxch
mov
aam
push
adc
lds
push
in
scas
not
adc
jle
or
in
push
rcr
mov
repnz
and
mov
in
cmp
call
push
fcmovnu
loop
cld
jb
mov
mov
inc
inc
dec
shl
push
push
xor
inc
xor
adc
(bad)
imul
sahf
(bad)
xchg
aas
and
test
xor
enter
inc
fist
psrlw
daa
(bad)
jnp
enter
aaa
ds
or
jmp
xor
mov
xor
stos
push
and
xor
push
lds
xchg
cmp
sub
int
int3
adc
daa
lea
icebp
nop
mov
pop
mov
adc
aam
es
fbld
das
sub
leave
mov
jecxz
mov
fisub
popa
cmps
cmp
ins
add
stc
cmp
popa
inc
mov
cmc
mov
fwait
cwde
jg
fwait
(bad)
adc
lods
push
pop
pop
xchg
movs
cmp
repnz
es
jl
jb
mov
jno
mov
xchg
jmp
(bad)
or
(bad)
xor
movs
mov
push
lods
adc
inc
clc
stos
dec
fcomp
leave
adc
loope
in
ret
dec
imul
fsub
stos
inc
stc
mov
ficom
mov
cmps
(bad)
popa
fisubr
ins
jg
and
int3
outs
mov
ds
push
add
cmc
loopne
add
aam
and
dec
aas
pop
out
cmc
fcmove
dec
mov
clc
fcom
mov
out
(bad)
jecxz
bound
cmp
mov
out
adc
movs
push
jg
lds
push
ins
and
stc
fld1
add
adc
mul
dec
sti
shr
cdq
add
aas
in
out
inc
xor
fcom
pop
in
jg
xchg
pushf
pop
mov
dec
add
push
(bad)
aam
or
mov
(bad)
xchg
cmp
ret
call
aas
xchg
push
aas
test
into
in
in
and
jge
adc
adc
hlt
jmp
or
sbb
shl
sbb
pop
in
or
scas
stos
cwde
push
fst
fld
and
(bad)
es
jno
imul
mov
pop
pop
sbb
aam
fidivr
aam
icebp
add
sbb
jmp
imul
sub
jno
adc
add
faddp
jae
adc
jb
add
and
(bad)
mov
jge
in
mov
adc
idiv
jmp
movs
pop
loopne
cmps
cmps
lahf
jnp
sub
pushf
fst
sbb
dec
je
or
push
aaa
sti
mov
mul
dec
mov
scas
mov
cdq
out
mov
adc
js
xchg
mov
hlt
pop
out
cdq
xor
xor
gs
push
rcl
and
jmp
xor
dec
stc
push
inc
sbb
lock
mov
push
dec
pop
pop
inc
cmp
pop
in
adc
xor
(bad)
dec
add
aad
inc
inc
and
cmps
dec
sub
jle
push
mov
cmp
mov
sbb
popa
leave
jae
mov
pop
push
push
or
mov
rol
ficomp
shld
mov
xor
aad
es
push
add
push
out
pushf
stos
(bad)
sub
popa
fmul
jecxz
mov
(bad)
fstp
out
inc
fistp
nop
(bad)
jno
jne
inc
cmp
leave
pop
into
push
xlat
or
jns
out
out
pop
ret
cmp
pop
sub
inc
dec
jb
mov
xchg
daa
and
ja
sbb
sbb
cmps
add
jno
inc
mov
fs
adc
push
rol
gs
int3
imul
cmp
loop
mov
loopne
push
cmp
es
sbb
dec
pop
inc
xchg
jmp
daa
sub
push
pop
adc
test
xchg
inc
xchg
mov
inc
xor
mov
fstp
sbb
ins
jae
aad
or
das
xchg
jl
or
dec
fst
pop
cmp
stc
test
xchg
xor
call
popa
cmp
js
push
add
xor
scas
mov
jg
sbb
in
mov
(bad)
mov
dec
push
mov
jbe
ss
sbb
add
stc
ret
pop
pop
dec
lods
dec
cwde
in
gs
(bad)
sbb
push
or
xchg
pop
scas
mov
adc
test
dec
cs
push
pop
sub
in
add
push
pop
xor
cmova
jp
adc
push
scas
cdq
push
adc
and
or
test
dec
cdq
mov
and
xchg
jmp
in
mov
fstp
mov
mov
lahf
xor
mov
pop
mov
mov
cli
sbb
iret
shr
push
sub
adc
(bad)
and
call
cwde
and
scas
ja
daa
pop
in
dec
repnz
push
add
pusha
ret
sbb
addr16
push
ss
push
jo
mov
enter
sub
and
mov
dec
dec
ins
leave
test
bound
lahf
mov
mov
lock
or
and
or
add
mov
popa
leave
mov
push
dec
lock
sar
aas
jp
outs
movs
jp
push
pop
pop
mov
cmp
or
sub
daa
fisub
xchg
les
fadd
repz
jecxz
mov
outs
movs
cmp
cdq
add
pop
fisubr
dec
sbb
pop
rol
ss
cmp
es
cmp
sbb
fwait
(bad)
sbb
jae
mov
mov
xor
dec
mov
push
loop
sbb
lea
daa
mov
jnp
pop
test
jl
mov
mov
xchg
test
adc
cmp
mov
outs
mov
mov
ret
bound
lock
cmps
add
shl
test
rcl
push
fucom
xor
push
mov
psubq
loope
out
sbb
and
mov
retf
push
aam
xchg
in
sbb
test
hlt
pop
jp
in
or
call
cmp
mov
sub
jae
test
out
outs
ret
in
xor
nop
fisubr
inc
push
cmp
in
adc
cmp
fwait
or
xchg
mov
sub
js
adc
cld
xor
mov
pop
adc
cmp
push
mov
xlat
pop
pop
jnp
daa
sahf
inc
cmps
aam
addr16
arpl
stos
pop
nop
in
mov
loop
jle
aas
and
lds
cwde
cmp
cs
mov
pop
adc
iret
ret
jns
push
jne
xchg
sub
add
jno
fiadd
mov
imul
(bad)
jmp
ret
xchg
and
dec
movs
dec
xor
jg
and
add
jecxz
cwde
out
pop
(bad)
cmp
cmp
ss
(bad)
scas
pop
arpl
gs
retf
pop
dec
sar
add
and
fs
jge
and
cmp
dec
mov
xor
imul
fnstcw
pop
sbb
push
xchg
push
pop
mov
xor
std
xor
(bad)
(bad)
mov
or
jns
sbb
adc
(bad)
out
push
cs
jge
jg
sub
pop
cli
movs
pop
mov
push
cmc
push
icebp
or
mov
aas
mov
mov
mov
arpl
cmp
jge
mov
xchg
out
addr16
in
dec
loop
leave
jle
dec
jnp
xchg
imul
test
mov
push
arpl
aad
jge
mov
in
jle
inc
or
int3
lods
jns
add
and
push
inc
call
in
icebp
or
sbb
test
enter
push
stc
cmps
lods
sbb
cmp
addr16
out
out
(bad)
adc
clc
fsubr
xchg
fsubr
lods
call
(bad)
out
pop
sbb
jge
mov
or
ja
cmp
and
xor
dec
add
jecxz
sub
jmp
fsub
retf
push
sahf
sti
cs
pop
fcom
into
js
fdiv
jle
outs
fbld
or
adc
fs
loop
jmp
or
fild
dec
jae
(bad)
hlt
dec
pop
fidivr
test
js
cmp
cmp
mov
es
jmp
mov
fdivr
or
pop
push
loope
ror
adc
out
ja
jecxz
and
add
xor
cmc
sbb
scas
mov
jmp
cmp
not
jae
into
lock
lods
loope
add
inc
push
js
cmp
push
or
bound
dec
gs
repnz
loope
mov
imul
fs
in
pop
fwait
sub
dec
stc
stc
bound
and
sbb
in
and
cli
stos
fmul
call
jl
scas
jo
iret
sahf
iret
mov
sbb
jmp
xchg
sub
pop
pop
jge
fnsave
fadd
mov
cmp
xlat
and
jnp
or
dec
movs
repz
popf
hlt
outs
cld
loope
or
sub
cdq
cwde
or
add
mov
ror
ins
mov
cmc
xor
stc
and
dec
out
std
or
retf
sbb
mov
inc
xchg
inc
ret
xor
cld
popf
aas
inc
jg
loop
inc
push
xchg
retf
mov
repz
aas
cmp
mov
sub
inc
mov
pop
ret
call
jbe
ins
cs
rcl
pop
loope
rcl
cdq
cli
xor
imul
pop
mov
stos
leave
cwde
mov
clc
imul
push
and
adc
enter
enter
dec
cmp
mov
bound
push
call
xchg
mov
push
shrd
and
lods
xor
dec
mov
and
dec
aas
movs
ret
(bad)
push
mov
sar
and
rol
sahf
xor
mov
pop
mov
rol
fidivr
test
sbb
iret
jp
movs
xor
ins
scas
push
mov
adc
pop
out
sbb
lock
cmp
pop
dec
pop
pop
pop
sbb
inc
adc
pushf
jns
retf
loope
icebp
call
push
sbb
outs
nop
or
loopne
sahf
fisub
cmps
call
div
mov
mov
jmp
pop
jbe
mov
cmps
out
shl
mov
push
popa
xor
mov
aam
or
ins
(bad)
push
xlat
(bad)
xor
fst
xchg
ins
aam
dec
fstp
mov
pop
inc
ffreep
ins
dec
cmc
inc
repz
or
sub
pop
mov
pushf
mov
xor
mov
jno
ja
push
cwde
daa
pop
dec
jecxz
stos
jmp
push
loopne
and
dec
or
jmp
push
into
(bad)
jae
xor
mov
jo
inc
jecxz
mov
pop
mov
push
and
mov
test
sbb
or
and
ret
sub
pop
sub
pop
sahf
mov
sbb
xchg
mov
inc
jge
xlat
test
enter
mov
pop
inc
pop
iret
popa
jl
mov
xchg
xchg
or
sub
loop
pop
jnp
xchg
or
cmps
dec
das
xchg
int3
retf
sti
sar
jb
(bad)
add
or
shl
xor
test
cmp
pop
add
adc
mov
imul
pushf
in
push
loopne
in
add
loop
adc
push
pop
bts
dec
sbb
jno
mov
outs
mov
jb
sub
dec
sub
sub
(bad)
and
inc
dec
sub
mov
push
jge
pop
ss
dec
daa
xchg
push
or
dec
repz
pop
xor
das
and
jl
(bad)
(bad)
cmc
mov
mov
sub
sbb
jo
and
enter
mov
and
pop
xor
pop
shr
mov
mov
xor
xchg
movs
stos
mov
adc
xor
xchg
lock
ret
adc
jns
cmps
movs
fs
in
enter
mov
sar
and
(bad)
imul
push
iret
aam
or
mov
addr16
clc
data16
pop
dec
ss
fcmovb
in
inc
cmp
test
add
call
call
mov
pop
push
imul
test
jecxz
add
dec
inc
pop
xchg
cmp
int
cmp
xor
arpl
pop
test
pushf
xchg
retf
dec
stos
mov
push
aam
push
je
mov
cmc
pusha
or
mov
jle
rcr
popa
aas
dec
daa
inc
cld
ins
cdq
push
lds
pop
add
lahf
add
stos
mov
mov
jno
inc
(bad)
or
sub
jns
xchg
push
std
jnp
pop
mov
loope
mov
int
aad
pusha
mov
cs
dec
add
xchg
mov
adc
cmp
or
(bad)
loopne
je
sub
gs
out
or
sub
sbb
xor
(bad)
mov
add
inc
enter
pop
mov
jge
adc
sti
and
jb
and
ficomp
ja
test
loop
xchg
mov
add
add
xchg
movs
inc
loopne
cmp
repnz
(bad)
repz
pop
gs
nop
mov
test
jg
idiv
jmp
outs
mov
fs
mov
xor
std
mov
sub
pop
imul
cmp
mov
popf
movs
ret
into
pop
push
sti
mov
(bad)
sub
loopne
out
in
test
or
xchg
sbb
scas
mov
and
call
(bad)
bound
bound
mov
aas
sbb
lea
pop
pop
rcl
nop
movs
jecxz
call
push
and
scas
stos
xchg
ins
pop
ret
inc
mov
stos
sbb
add
push
icebp
bound
cmc
mov
mov
jp
shr
test
stos
mov
xor
jge
or
jecxz
sbb
adc
(bad)
pop
cs
repnz
push
push
scas
(bad)
ret
retf
sti
mov
hlt
mov
xor
push
ja
cmp
out
xchg
cmp
or
jl
jmp
pop
push
inc
inc
lea
sbb
or
jmp
(bad)
jno
das
xor
outs
jns
movhps
cs
push
clc
jae
push
fst
mov
mov
ret
jmp
and
add
retf
int3
(bad)
cld
adc
fstp
inc
xlat
cli
push
mov
sub
stos
push
ds
inc
sar
frstor
jne
xchg
and
ret
inc
mov
test
mov
pop
mov
or
jge
(bad)
retf
dec
lock
and
dec
jle
das
retf
xor
push
jns
in
gs
mov
pushf
std
inc
std
lock
and
mov
aad
pop
sub
push
out
dec
dec
jmp
sbb
pop
int
call
int3
add
cmc
addr16
lds
das
sub
add
outs
test
call
sub
shld
test
in
mov
and
inc
adc
xchg
dec
pop
shl
pop
mov
in
test
xchg
sbb
push
cmp
mov
mov
inc
and
mov
jmp
mov
cli
and
xlat
in
add
cwde
pushw
repz
into
lahf
and
(bad)
mov
outs
cmp
sub
pop
mov
movs
cli
mov
enter
sub
push
mov
out
nop
adc
push
sbb
inc
aas
loop
addr16
clc
mov
scas
or
nop
add
daa
movs
mov
mov
les
dec
mov
adc
lods
add
push
lea
rcr
test
xor
xchg
call
jg
loop
clc
neg
xlat
fnsave
out
and
iret
adc
fld
mov
ret
xor
pop
fabs
loopne
push
push
(bad)
cmp
hlt
movs
out
aad
retf
mov
nop
xchg
mov
les
dec
lock
add
mov
push
mov
call
pop
mov
add
mov
mov
test
adc
in
ins
inc
int3
sbb
retf
xchg
shl
jae
push
cmp
iret
cmp
repnz
jns
in
pop
shl
jns
les
outs
ins
and
aad
mov
sub
das
fwait
lahf
xchg
jp
jno
sub
lock
push
inc
(bad)
and
out
iret
cld
push
push
or
adc
int3
mov
jmp
add
fwait
sub
data16
int3
out
or
adc
xchg
repnz
push
inc
not
lods
jmp
xchg
or
sub
xor
(bad)
fdivp
and
jae
push
into
mov
and
out
cmp
mov
adc
jmp
jmp
call
mov
out
test
add
jge
dec
loopne
aaa
cmp
xchg
sar
pop
inc
cwde
into
pop
add
imul
icebp
jmp
jns
call
in
loop
mov
outs
out
aad
xchg
popf
push
test
rcl
leave
xor
jb
xor
imul
shl
cmp
push
sbb
adc
jo
add
adc
sbb
add
into
xchg
fimul
inc
sub
or
addr16
xchg
add
mov
xor
mov
(bad)
mov
add
mov
push
xchg
sub
xor
shl
aad
push
pop
jg
cmp
popa
nop
xlat
dec
loopne
rcl
cmp
jne
inc
xor
daa
loop
mov
mov
add
sub
adc
xchg
inc
dec
jae
cmp
lods
aas
xlat
aam
sub
push
lods
push
leave
dec
cli
jne
dec
jle
cdq
into
daa
dec
xor
clc
js
xor
arpl
fbld
dec
lods
add
dec
daa
fiadd
lock
adc
add
sbb
dec
inc
into
(bad)
scas
or
xor
es
sub
and
out
adc
jae
push
jo
adc
push
shl
call
mov
inc
in
call
daa
retf
jns
aaa
mov
jb
lds
cld
xchg
mov
test
mov
lods
shr
mov
jmp
mov
ins
mov
mov
fldcw
(bad)
mov
pop
mov
enter
cdq
outs
mov
ja
inc
dec
mov
and
mov
jge
push
add
addr16
jo
enter
enter
int3
jp
adc
addr16
pusha
in
mov
mov
jo
mov
inc
(bad)
in
enter
cmp
dec
ret
sbb
sahf
(bad)
cmc
mov
jo
cmps
scas
mov
ins
(bad)
clc
fnstenv
push
or
jb
inc
mov
pushf
addr16
and
and
outs
xchg
mov
scas
pop
pop
mov
jecxz
scas
sbb
sub
xchg
adc
inc
into
and
retf
xchg
cmps
and
pop
ss
push
jbe
mov
(bad)
dec
inc
add
sub
add
arpl
cli
ja
xor
sub
cs
addr16
enter
or
adc
aaa
loop
pop
and
ror
push
(bad)
in
pop
test
jne
dec
sub
movs
sbb
push
fs
sahf
sub
adc
test
pushw
push
adc
jp
ins
jle
pop
dec
ins
adc
lock
(bad)
cmp
or
dec
inc
push
lock
jae
pop
xchg
pop
or
das
mov
dec
outs
pop
or
add
nop
stos
xchg
inc
int
(bad)
daa
in
lahf
stos
add
stc
outs
xor
leave
dec
sti
cwde
(bad)
fbstp
adc
pop
cdq
adc
adc
neg
cmp
ins
mov
cwde
cld
retf
test
mov
pmaxub
pushw
movs
dec
sub
cwde
std
push
aaa
pusha
mov
fwait
fwait
xchg
xchg
xchg
add
jns
inc
call
add
movs
push
add
addr16
sbb
pop
fmul
hlt
add
daa
dec
push
sub
xchg
sbb
cmp
push
xchg
out
mul
cmp
ret
mov
scas
add
mov
ss
mov
out
jge
jmp
push
sbb
clc
iret
aaa
xchg
je
pop
jg
fdiv
cli
or
mov
repz
mov
mov
sbb
cvttps2pi
mov
shl
jmp
pop
aaa
mov
mov
xchg
add
and
push
pop
(bad)
and
inc
call
and
mov
shl
push
retf
imul
(bad)
inc
adc
sahf
ja
cli
iret
push
sub
mov
(bad)
leave
inc
mov
aas
movs
pushf
int
mov
push
cmp
sbb
out
ds
push
add
mov
and
jge
mov
sub
xchg
and
mov
ja
popf
out
push
pop
ror
pop
dec
push
es
xor
hlt
cmp
xchg
(bad)
in
add
int
and
mov
xchg
cs
scas
das
shl
xor
fimul
sub
jg
xchg
adc
hlt
adc
std
xor
sar
mov
mov
hlt
cld
or
sbb
out
fstp
mov
pop
das
sbb
ret
sub
sub
pop
push
test
fld
pop
cld
mov
mov
add
jne
xchg
hlt
dec
pop
stos
ins
int3
add
test
pop
xchg
dec
mov
aaa
push
xchg
out
jecxz
fisttp
xlat
outs
stc
push
mov
mov
mov
xchg
in
mov
xchg
inc
push
mov
leave
test
xchg
and
push
cmp
mov
int3
mov
pop
mov
rcr
cmp
mov
ja
jcxz
cmp
xchg
push
outs
add
fsub
xchg
mov
cmps
addr16
jmp
xlat
(bad)
mov
daa
fadd
push
out
jno
(bad)
push
dec
pop
pop
push
sahf
sti
mov
sub
(bad)
mov
nop
ss
shl
sub
loop
xchg
and
inc
xchg
xor
fadd
lahf
sbb
in
into
push
adc
pop
xor
mov
cwde
mov
int
mov
inc
pop
xchg
xchg
xchg
cmps
pop
mov
repnz
in
push
(bad)
int
mov
lea
adc
add
dec
cmp
int
fcomp
in
xor
push
in
mov
dec
sub
cmp
lods
stos
stc
in
add
shl
pop
pop
imul
lods
cmp
adc
gs
mov
dec
pushf
jno
sbb
xchg
(bad)
and
or
gs
mov
in
ds
jl
dec
fwait
sar
xor
lods
gs
popa
sbb
push
cmp
jo
push
rcr
xchg
inc
ror
adc
jae
aaa
les
push
xlat
jecxz
dec
jae
cld
test
bound
sbb
test
sti
cmp
push
loopne
dec
pop
icebp
sbb
icebp
jp
ss
push
cmp
test
push
push
sahf
xor
inc
xchg
dec
call
fdiv
adc
scas
mov
push
enter
inc
jmp
cdq
and
adc
mov
(bad)
mov
add
fmul
mov
pop
mov
loop
jno
push
inc
fdivr
int3
dec
mov
jl
and
enter
hlt
mov
lahf
push
in
fdivr
loopne
popa
out
or
and
test
cmp
scas
inc
add
out
rcl
cdq
push
pop
and
icebp
pop
shl
pop
pop
mov
sbb
xor
cld
fadd
dec
iret
fadd
ins
int
ss
push
cmp
ins
std
jecxz
outs
xlat
or
enter
push
sti
add
add
dec
inc
lock
mov
jnp
jmp
dec
lods
ds
dec
and
mov
or
dec
sub
mov
xor
xchg
ja
sti
lock
pushf
jne
daa
pop
xchg
aas
sub
push
jno
ret
sub
and
fidiv
in
and
and
or
sti
in
mov
fcmovnb
and
mov
repnz
clc
xchg
mov
xchg
aad
test
outs
popa
push
cmp
test
jmp
sbb
ins
ret
add
lods
mov
and
cmp
mov
cmp
dec
jns
xchg
pop
xor
xchg
or
scas
repnz
int3
adc
pusha
retf
cmps
inc
dec
imul
mov
bound
bound
push
or
cmp
sub
fwait
cmps
mov
sti
mov
mov
adc
mov
retf
inc
movs
sub
les
fnstcw
jl
repnz
call
fcom
push
xchg
pop
mov
add
cmp
push
das
rcr
icebp
call
(bad)
outs
pop
call
xlat
dec
xor
sbb
and
pop
sbb
fmul
imul
jne
sbb
mov
pusha
addr16
rcl
adc
inc
xor
call
lods
inc
xor
pop
test
cmc
int3
inc
stc
sar
jge
xchg
inc
in
xor
in
dec
jge
xchg
les
in
call
sub
stos
imul
cwde
push
ins
mov
inc
or
call
push
or
in
and
test
clc
mov
pop
movs
push
cmp
add
test
inc
sbb
jl
mov
into
sbb
push
mov
inc
ret
aaa
pusha
ja
adc
cmps
addr16
jecxz
lods
daa
popa
fiadd
or
mov
mov
inc
int3
call
add
jbe
fsubrp
lahf
xchg
jns
jmp
rcr
or
mov
dec
mov
add
jns
mov
inc
push
mov
ror
and
ret
movs
retf
push
je
int
xor
cli
cmp
dec
mov
pop
jb
in
aaa
pop
sub
xor
mov
xchg
test
add
mov
ss
ss
sub
cmp
jge
pop
or
dec
test
add
iret
jbe
jmp
test
dec
xchg
mov
push
mov
or
jle
shl
pop
ficom
jl
mov
mov
adc
aad
fadd
dec
adc
sub
rcl
xor
xor
cmp
sub
xchg
xor
mov
jmp
jle
repz
pusha
jg
ds
mov
imul
xchg
xchg
push
add
test
push
ret
and
or
dec
adc
xchg
mov
sub
ss
movs
mov
sahf
loop
pop
std
rcr
adc
push
dec
mov
mov
data16
pop
sbb
mov
stos
push
lods
xor
clc
adc
pusha
cmp
fisubr
out
ins
cmp
sub
aaa
rcr
jl
shl
push
inc
cmps
(bad)
mov
ret
mov
in
dec
jle
sti
popa
in
or
test
xor
cmp
sbb
cwde
fmul
ret
cmp
pop
out
jno
or
(bad)
pop
inc
lods
mov
das
not
aad
or
mov
push
cs
sub
test
jge
test
mov
dec
jmp
arpl
movs
stos
pop
mov
push
add
stos
and
inc
lods
fistp
loope
mov
idiv
mov
push
xchg
out
push
sub
push
ins
xchg
sahf
lahf
mov
inc
push
scas
test
scas
push
dec
push
cmp
jb
out
pop
push
cwde
mov
mov
pop
repz
mov
stos
aam
sub
xchg
jae
jmp
lea
fmul
test
or
pop
mov
fsub
mov
or
mov
xor
cmc
lahf
sub
fcom
xchg
and
out
outs
stos
cmp
push
xchg
aas
repz
ja
icebp
sub
mov
dec
and
sub
ss
loope
fidivr
dec
imul
inc
sub
pop
and
ret
pop
out
and
push
mov
pop
push
je
out
jge
adc
or
sar
and
data16
push
addr16
in
cmp
cmp
fld
loope
das
adc
sbb
shl
js
and
push
aaa
add
mov
shl
pop
icebp
sub
pop
imul
mov
mov
in
in
ds
pop
or
pop
cdq
inc
fwait
adc
dec
sub
sub
call
push
scas
(bad)
and
jmp
xlat
inc
jge
mov
inc
test
inc
pop
ret
(bad)
fist
retf
mov
push
rcr
add
cld
test
addr16
(bad)
out
int3
(bad)
cmp
or
or
cmp
cmp
push
jmp
ror
jo
mov
in
jno
in
leave
adc
cmp
inc
jns
sbb
(bad)
stc
iret
out
stos
leave
(bad)
arpl
cmps
inc
mov
jg
mov
call
inc
push
and
jle
mov
(bad)
mov
psubd
mov
pop
and
xchg
sbb
ret
loopne
jge
popf
xchg
clc
loop
add
mov
stos
xchg
test
push
test
imul
xchg
lods
es
add
outs
sbb
dec
call
mov
into
ror
adc
mov
xchg
pop
retf
sbb
popf
jl
sbb
(bad)
jb
ins
sti
not
sar
add
add
(bad)
sub
adc
sbb
icebp
out
retf
out
lods
mov
fsub
fmul
jge
mov
es
inc
jb
dec
pop
pop
jnp
mov
jne
cmp
mov
les
lock
repnz
sbb
mov
or
jecxz
call
(bad)
mov
sub
jae
stos
loope
adc
jns
in
add
push
int
add
fimul
mov
inc
nop
fist
repnz
fsubr
jno
rcl
les
cmp
movs
pop
jmp
jle
pop
mov
mov
sbb
adc
sub
dec
jno
jno
dec
cmps
xor
shl
fcmove
xor
mov
je
pop
inc
adc
out
jno
inc
sbb
or
call
jle
mov
inc
jp
add
or
mov
int3
adc
popa
out
sbb
jmp
imul
daa
(bad)
ins
imul
mov
dec
scas
pop
int3
and
ret
iret
addr16
loop
cmc
adc
jbe
mov
push
ja
nop
daa
push
test
pop
push
pop
pop
or
out
in
jmp
mov
movs
in
or
cmp
adc
nop
mov
test
stos
lea
sub
std
in
sar
es
jmp
push
les
mov
popa
mov
mov
sar
xor
out
mov
cdq
inc
imul
retf
sbb
mov
les
or
out
(bad)
lods
or
lock
retf
jp
loopne
ins
sub
rol
imul
and
ins
daa
jne
pushf
bound
sub
lods
rcr
test
add
pop
xchg
jle
test
aad
mov
xchg
dec
cmp
mov
leave
hlt
rcr
aad
or
sbb
cmp
movs
sub
into
daa
pop
add
and
push
add
push
adc
movs
aad
mov
retf
push
sbb
jb
mov
sub
pop
add
test
mov
mov
cld
inc
cld
clc
cmps
sbb
mov
mov
aaa
dec
xor
in
and
add
icebp
(bad)
fistp
fstp
push
push
stc
adc
ds
push
(bad)
pop
jbe
fbstp
hlt
pop
or
and
and
das
jb
and
daa
add
inc
xor
fisubr
loop
jg
jae
mov
test
movs
in
and
(bad)
out
rol
ret
lods
ds
mov
sbb
sbb
xor
imul
inc
je
retf
popf
push
jecxz
pusha
push
jl
mov
mov
aas
fprem
add
mov
cmp
enter
nop
add
xor
std
sbb
dec
jge
push
bound
lea
stos
xchg
jne
cld
mov
imul
adc
and
mov
mov
lahf
dec
jmp
xor
mov
sub
retf
test
mov
sub
retf
ins
out
mov
and
lea
dec
jle
and
pop
adc
mov
icebp
es
jae
pop
sbb
fwait
mov
mov
lock
inc
sti
or
inc
cmp
xor
je
les
aad
out
mov
or
clc
xor
inc
test
xor
idiv
arpl
dec
cdq
clc
sar
ins
or
std
test
pop
stos
div
aam
in
sahf
pop
cmc
push
imul
xor
pop
jmp
mov
dec
in
push
push
js
sub
mov
dec
daa
sub
mov
sub
cdq
sbb
adc
mov
not
popf
clc
lock
jmp
xchg
popf
gs
push
dec
dec
ror
and
cs
rcl
jl
xchg
repnz
lods
cdq
rcl
add
lods
and
pop
mov
movs
gs
pop
lods
jo
sbb
leave
sub
push
and
pushf
stos
mov
mov
lahf
adc
cmp
ficom
or
mov
push
jns
push
dec
test
add
call
jge
pop
inc
cmp
mov
mov
cs
psubb
nop
sub
mov
push
or
cmps
add
mov
xlat
loope
jns
add
shl
test
data16
out
cli
test
fmul
push
in
movs
pop
out
xor
adc
sbb
sub
push
push
in
dec
shr
loope
inc
test
call
lds
cld
js
not
ret
xchg
pop
or
add
scas
push
cdq
(bad)
lods
pushf
ror
es
mov
cld
and
mov
or
mov
and
ja
xchg
cwde
xchg
xchg
ret
ins
jg
imul
jne
or
int
mov
shl
xchg
cmp
cmp
inc
call
sub
cli
in
cmp
xchg
dec
xchg
sahf
add
cmp
loope
mov
push
push
movs
emms
jp
mov
icebp
mov
in
enter
push
call
jecxz
or
xor
cmc
inc
pop
mov
repnz
inc
cmps
movs
fdiv
jbe
add
sub
or
or
mov
icebp
leave
(bad)
packssdw
in
inc
dec
push
dec
mov
rcl
inc
jns
jbe
aad
and
pop
mov
and
push
imul
xchg
call
and
pop
cmps
outs
adc
jnp
out
sahf
xor
push
ss
je
cdq
mov
xchg
jmp
jnp
je
jno
sub
jno
int
das
push
adc
paddsw
or
push
mov
sbb
xchg
add
inc
pop
out
xchg
int
shl
jle
jnp
push
out
shl
jle
push
cmp
lock
cdq
mov
sub
cmp
aam
scas
rcl
test
js
xchg
bswap
pop
mov
and
addr16
imul
repz
add
movs
mov
add
inc
inc
and
sbb
cs
movs
movs
cmps
or
fnsave
pop
ins
mov
imul
xor
pop
jle
loop
imul
adc
add
out
outs
add
fistp
std
mov
dec
mov
lea
xor
push
pop
push
xchg
lea
sbb
daa
jns
in
scas
stc
fbstp
dec
ret
(bad)
cli
rcr
loopne
add
inc
out
gs
fst
gs
ss
lods
mov
mov
daa
cli
jb
xor
cli
sar
ja
stc
imul
pusha
cmp
sbb
xchg
lods
and
nop
arpl
xchg
aad
push
stos
jnp
ret
idiv
loop
inc
add
mov
ficomp
sub
arpl
ret
test
gs
sti
jae
test
add
cmps
push
add
push
push
and
jb
push
dec
or
mov
gs
cli
xchg
fmul
mov
xchg
xchg
in
cmp
jb
scas
cli
or
mov
push
sub
lea
inc
mov
retf
fst
jb
mov
fld
cmps
cwde
jno
cmp
loop
sbb
aam
ins
pop
pop
pop
ds
jge
test
nop
sub
aad
jecxz
cmp
inc
jae
ret
xchg
inc
sbb
mov
jns
jl
push
inc
jg
inc
outs
xchg
ins
pusha
(bad)
fnstenv
sub
cs
mov
pop
xchg
(bad)
je
push
lods
mov
mov
add
cmc
test
xor
jne
mov
push
xchg
(bad)
sbb
scas
add
pop
not
loope
ja
lods
call
adc
enter
cmps
push
out
js
mov
xchg
call
sub
nop
pop
scas
inc
cld
and
ficom
aas
fcom
add
fdivr
inc
xchg
cmc
cmps
mov
std
repz
arpl
(bad)
mov
aaa
pushf
sub
mov
(bad)
aas
shl
jo
pop
ficomp
jge
and
stos
xchg
mov
outs
(bad)
sbb
cmp
fistp
mov
xchg
adc
(bad)
jns
rep
mov
sbb
pop
jg
inc
scas
cwde
jb
std
sti
sub
aad
or
xchg
mov
pop
jno
sub
xchg
cdq
outs
push
div
test
in
and
scas
xor
cdq
xor
pop
inc
jno
(bad)
bound
inc
bound
jne
(bad)
push
sar
fbld
out
and
scas
jge
or
xor
mov
xchg
inc
imul
push
or
cmp
push
inc
out
xchg
arpl
test
jmp
in
mov
and
push
adc
cmp
lock
add
add
xchg
xor
mov
xchg
neg
dec
nop
inc
iret
pusha
int
or
stos
ds
stos
mov
xlat
inc
pushf
jl
cmp
sti
cmp
ins
mov
push
outs
test
push
lock
sahf
add
jbe
mov
(bad)
pop
pop
mov
rol
out
mov
arpl
in
push
adc
sar
rcr
int3
or
mov
mov
jne
add
bound
pop
in
cld
and
dec
cmc
mov
jp
loopne
mov
bndstx
inc
dec
sub
sbb
test
in
dec
and
ret
aaa
pop
dec
and
pop
add
mov
cmp
test
test
sar
mov
jae
pop
cdq
mov
cmc
jmp
cmp
add
adc
(bad)
push
pushf
adc
inc
jae
add
inc
jl
jno
mov
gs
lds
pop
push
jge
jle
imul
or
loope
push
cmps
sub
test
mov
pop
xor
aad
jmp
add
idiv
mov
dec
cs
adc
rcr
std
cmp
stos
mov
ret
sbb
jno
pushf
xor
int3
scas
mov
mov
push
mov
push
sub
icebp
xlat
bound
jge
dec
das
sar
in
add
or
sbb
xchg
xchg
add
shr
ins
pop
jb
sbb
stos
shr
fdiv
add
jmp
punpckhwd
das
imul
cmp
es
mov
jmp
imul
push
xor
mov
scas
dec
pop
mov
push
mov
dec
dec
add
or
rol
xchg
retf
addr16
jmp
push
pop
mov
call
xchg
mul
popf
out
and
push
and
popf
xlat
je
cmps
adc
add
inc
jmp
mov
sahf
jg
imul
mov
ficom
add
add
clc
fmul
in
xor
sub
push
push
jmp
out
jg
mov
jno
ret
ss
repz
std
ret
lahf
inc
cvtdq2ps
mov
add
lahf
jmp
out
push
data16
adc
loope
xchg
loope
mov
xor
das
lods
in
out
lahf
dec
pushf
sub
xlat
sahf
int
dec
xor
sti
loope
lods
add
or
aaa
mov
push
pop
and
iret
rol
inc
xchg
jo
aaa
retf
das
loop
mov
xlat
(bad)
mov
enter
add
arpl
jnp
hlt
test
push
xchg
fsub
mov
mov
mov
mov
adc
inc
xor
sahf
call
push
pop
aas
mov
stos
fadd
neg
fcomp
addr16
mov
cmp
and
inc
jmp
push
lahf
push
loopne
cmp
arpl
inc
cld
mov
inc
lds
ins
lods
add
pop
sbb
popf
xor
add
add
jg
loop
nop
mov
(bad)
sti
sqrtps
push
stos
call
ds
ret
dec
mov
cld
dec
jg
mov
inc
cdq
inc
lea
cmc
jnp
iret
pop
in
dec
inc
aaa
pop
repnz
jo
add
fmul
add
xchg
xor
int
sub
dec
sbb
or
test
mov
mov
xchg
mov
pop
jns
pop
js
mov
lds
in
inc
jne
outs
adc
xchg
idiv
cld
xchg
into
inc
seta
pop
jno
sbb
je
xchg
outs
mov
rcl
dec
mov
fistp
fild
xor
xchg
pop
ins
mov
pop
in
movs
ds
add
cli
ins
push
dec
int
stc
pop
mov
(bad)
adc
add
cmp
mov
sahf
xchg
jle
dec
sbb
data16
inc
imul
fwait
stos
jno
outs
inc
lock
movs
dec
mov
ds
(bad)
jb
mov
push
sub
scas
aam
outs
jo
dec
ror
dec
add
push
and
ret
pop
fwait
mov
pop
adc
pop
dec
out
dec
outs
pop
ficomp
int
call
pop
xchg
push
sub
ja
mov
push
and
sbb
and
push
dec
loop
xchg
adc
add
xchg
or
and
mov
mov
loope
pop
sub
cdq
loop
dec
scas
jmp
cmp
aas
stos
sar
push
stc
add
es
popf
sahf
ficom
mov
pushf
sahf
aaa
mov
int3
or
jnp
fidiv
mov
imul
je
jg
test
sub
xor
adc
mul
push
inc
inc
int3
test
xlat
stc
sub
jmp
in
add
push
icebp
rol
push
jmp
arpl
gs
nop
push
pop
xchg
or
push
mov
jae
jnp
or
call
push
add
lahf
push
shl
into
jl
jecxz
jmp
jle
dec
clc
mov
ret
les
ss
add
pop
push
and
pushf
repnz
retf
push
das
dec
test
shl
or
sar
stc
jno
jp
adc
or
xchg
dec
mov
or
emms
push
bound
sub
pop
rcl
xchg
mov
movs
out
ja
add
pop
mov
into
xchg
pushf
sub
into
fild
push
push
stc
gs
adc
push
stc
in
test
sar
shl
jno
lods
jns
mov
inc
gs
aad
popf
cld
ds
inc
or
aad
sbb
mov
mov
into
(bad)
test
mov
(bad)
ins
cdq
pop
nop
dec
xor
inc
test
shl
repz
push
jg
clc
addr16
sbb
pop
mov
cld
test
adc
push
adc
lods
inc
rcr
dec
pop
push
xchg
add
push
out
sub
push
cmc
ret
cwde
hlt
cmp
xor
pop
and
in
loope
bound
mov
mov
sar
inc
mov
inc
gs
mov
(bad)
xchg
and
pop
mov
mov
jo
dec
out
(bad)
cli
dec
data16
cmps
repz
mov
add
jmp
fdivr
fbld
data16
cmp
pop
data16
mov
lds
xchg
push
xor
test
movs
shr
aaa
stc
repnz
sbb
add
jecxz
or
xor
(bad)
xor
call
es
adc
in
sbb
call
mov
xchg
jg
xor
test
mov
mov
mov
push
jns
sbb
lods
cs
mov
in
repz
pop
fs
xor
scas
xchg
test
(bad)
cmp
xor
hlt
rcr
and
inc
sahf
loop
nop
addr16
(bad)
int3
les
fdiv
push
xor
lods
mov
dec
cmp
(bad)
dec
movs
out
pop
imul
or
sub
stc
cmp
(bad)
lock
adc
imul
cmp
push
sti
das
and
addr16
stc
xchg
in
xadd
fnsave
pusha
xchg
movs
sub
and
call
(bad)
jo
pushf
and
arpl
fadd
push
push
mov
mov
cmp
ins
ret
jmp
add
xor
sub
pop
ret
sub
sbb
sbb
pop
xchg
cld
ja
imul
mov
je
jno
enter
shl
bound
cmp
cli
sub
mov
arpl
pop
icebp
fstp
add
or
stos
sub
mov
fiadd
mov
test
sub
test
jecxz
cmp
in
xor
and
xor
xchg
mov
jno
fs
pusha
test
mov
(bad)
push
push
lea
es
mov
sbb
(bad)
cld
outs
push
scas
dec
sub
push
cld
and
push
and
sahf
sahf
(bad)
sbb
(bad)
push
stc
sbb
or
push
mov
pop
(bad)
ficomp
std
cmp
les
push
pushaw
dec
jmp
sbb
rcr
(bad)
(bad)
adc
in
xor
lods
sub
xor
scas
jg
adc
pop
out
cmp
repz
mov
(bad)
pop
int
leave
xchg
jmp
cwde
push
mov
leave
sub
mov
rcl
push
iret
or
repz
mov
jbe
xchg
and
aaa
ret
push
aam
ins
fidiv
aad
sbb
push
rcr
adc
(bad)
sbb
push
loop
or
inc
aaa
xor
rol
xchg
push
lahf
clc
inc
xchg
cmp
sub
popf
xchg
pop
or
cli
xchg
mov
dec
sub
in
outs
add
dec
and
mov
pop
data16
loop
adc
jo
mov
add
pop
enter
shl
(bad)
out
mov
dec
jmp
mov
into
push
dec
jmp
and
push
sbb
clc
mov
push
test
test
jge
mov
mov
mov
xor
cmc
dec
repnz
sbb
jp
xlat
ins
leave
jg
jge
add
stc
(bad)
iret
jb
aas
scas
mov
mov
mov
lods
mov
or
jl
xor
(bad)
out
pop
xor
(bad)
mov
jnp
adc
pop
pop
std
int
adc
xchg
sahf
xor
lods
mov
fcomp
(bad)
addr16
ror
(bad)
cmc
push
inc
xor
or
into
movs
int3
mov
(bad)
mov
adc
xchg
cmp
lds
inc
cmps
or
inc
sbb
(bad)
idiv
mov
shr
rcr
out
push
cmp
stc
test
imul
rcr
dec
es
js
pop
mov
sar
(bad)
sti
xor
and
inc
inc
cmp
mov
pop
out
gs
pop
pop
xor
inc
lods
inc
jmp
lea
xchg
shl
dec
push
jno
iret
jnp
pop
or
popa
inc
dec
jbe
sub
test
mov
sti
repz
push
icebp
cmc
bound
sub
push
call
sbb
xchg
out
pop
movs
mov
xlat
std
lea
repz
cmc
add
inc
push
xchg
sub
retf
loope
test
rcl
rol
retf
jne
outs
fdivr
jnp
test
cmp
out
inc
push
cdq
idiv
(bad)
scas
sbb
and
movs
or
popf
sub
push
ins
int
or
push
jns
mov
lods
es
mov
je
xor
jne
push
aam
mov
dec
icebp
or
aam
and
ja
cmp
fidivr
das
mov
or
inc
xor
les
scas
(bad)
push
dec
mov
fmul
jge
aaa
movs
mov
(bad)
call
stc
ins
xor
inc
inc
mov
ror
hlt
cmc
(bad)
mov
lds
mov
sti
pop
cmovge
push
mov
(bad)
push
jbe
xor
daa
or
popa
mov
or
pop
mov
sub
and
inc
pusha
mov
jmp
lods
xor
ins
mov
inc
call
in
or
ins
push
sti
pusha
or
stc
(bad)
mov
stc
sbb
sahf
xchg
sbb
into
adc
fild
sub
out
xor
pop
loope
test
sub
mov
dec
(bad)
addr16
jb
pop
dec
loop
(bad)
mov
cmp
rcr
aad
das
and
sbb
daa
jle
in
sub
imul
dec
jecxz
jmp
add
cmp
add
sbb
(bad)
rol
mov
adc
das
and
adc
rcl
mov
test
and
aam
dec
add
mov
stos
cli
pop
and
les
pop
and
inc
test
add
xor
xchg
or
jae
xor
jle
fsubrp
push
ss
in
cmp
sbb
jae
int3
inc
push
pop
sbb
iret
inc
sbb
imul
ror
mov
(bad)
fst
cmp
push
mov
dec
mov
push
pop
sti
pop
or
test
aad
cmp
cmp
dec
mov
xchg
js
(bad)
(bad)
ss
int
scas
dec
adc
mov
sub
and
bswap
sub
lock
jmp
sbb
retf
js
xchg
and
mov
xchg
inc
out
ret
fbstp
and
dec
loope
mov
cmp
jmp
ins
mov
xchg
and
pop
dec
mov
and
mov
popf
adc
ins
cmp
ins
aam
xchg
xor
xor
movs
nop
(bad)
jecxz
(bad)
mov
cmps
mov
les
dec
or
dec
jge
inc
in
mov
stos
add
and
jmp
mov
jae
lods
in
fimul
cmp
xor
inc
ds
lahf
movs
je
fcom
mov
jbe
push
(bad)
ror
mov
dec
pop
mov
xor
sbb
adc
sti
fmul
jmp
(bad)
fcos
cwde
out
jg
push
enter
scas
pusha
ss
jp
test
push
mov
sub
not
xchg
outs
mov
fwait
leave
out
inc
adc
cs
ds
push
(bad)
stos
ins
push
ja
cmp
out
xor
mov
pop
sti
clc
cmp
xchg
jle
jmp
(bad)
cmp
not
adc
lods
lea
mov
je
(bad)
aas
aad
hlt
xor
and
mov
repnz
aaa
push
inc
mov
sbb
jp
(bad)
or
sbb
adc
push
mov
stos
mov
repz
outs
push
xlat
mov
in
dec
inc
dec
fdivr
mov
mov
sbb
add
adc
fstp
mov
xchg
fst
fistp
jg
push
mov
adc
adc
stos
mov
mul
adc
push
shl
push
push
ja
ss
pop
scas
test
push
call
lods
cmps
shl
cmp
pop
ror
js
mov
push
xor
mov
add
jg
sub
call
xor
dec
out
pop
mov
fld
or
fdivrp
cwde
and
dec
or
int3
ins
imul
dec
daa
inc
hlt
mov
lods
and
(bad)
sub
xor
xor
xchg
xchg
pop
test
xor
mov
dec
inc
(bad)
icebp
xchg
lahf
(bad)
adc
xlat
dec
pop
pop
add
push
in
mov
mov
cs
fisub
(bad)
rol
fnstsw
xor
lods
xchg
movs
lods
arpl
pop
ds
dec
pop
loop
dec
js
mov
push
dec
ss
ins
std
xchg
add
mov
shr
push
or
mov
mul
mov
push
xchg
push
adc
inc
rcl
or
lahf
fwait
ja
ins
jp
call
int3
adc
pop
sub
dec
adc
pop
or
jmp
inc
add
outs
ret
sbb
jnp
add
mov
or
add
xchg
jmp
sub
data16
shr
dec
inc
ins
or
ds
dec
les
out
mov
sbb
mov
sar
push
pop
and
ret
jae
stc
clc
dec
scas
repnz
retf
mov
sbb
mov
and
stos
jecxz
std
mov
aaa
mov
sar
inc
dec
mov
shl
xlat
jbe
mov
and
inc
loopne
in
and
mov
cld
jne
movs
dec
mov
mov
shr
and
mov
pop
je
mov
cmps
sar
or
jmp
ds
fild
rcl
inc
jmp
inc
setbe
sub
xor
cmp
mov
adc
xchg
mov
popa
xor
mov
push
aad
dec
jle
aas
aaa
pop
push
xor
popa
ret
adc
outs
test
inc
fist
mov
or
add
sub
loope
(bad)
imul
ret
sbb
xor
add
push
mov
sub
jb
cs
mov
mov
lods
fs
cdq
out
add
add
jmp
fnstcw
ficom
or
jbe
(bad)
scas
push
loop
daa
push
mov
sbb
inc
push
push
pop
and
push
pop
ror
xlat
jb
xchg
and
dec
push
leave
ffree
aam
mov
adc
cmp
jo
mov
addr16
test
(bad)
neg
inc
nop
imul
lea
jno
aaa
out
sbb
ret
pop
push
aam
jge
aas
lock
sub
dec
sbb
sub
mov
cmps
xor
(bad)
aaa
push
mov
cmp
shl
je
cmps
mov
test
icebp
mov
mov
shl
mov
sub
dec
and
sar
jb
inc
ret
lock
and
lahf
and
lock
out
sbb
(bad)
test
das
stos
ret
pop
xchg
nop
mov
in
in
push
cmc
cmp
call
push
sar
imul
fisub
enter
or
cwde
mov
mov
ins
sub
sbb
xor
cld
aad
aas
push
movs
shr
mov
mov
ds
pop
pop
test
ins
xor
jge
or
fcomi
mov
aaa
mov
imul
je
cld
sbb
jno
jle
xchg
pop
cdq
add
mov
pop
ficomp
inc
push
push
arpl
es
pop
xchg
adc
mov
cmp
inc
call
xor
lods
add
and
popf
or
pop
pop
mov
sbb
shr
sbb
ret
stc
mov
rcr
dec
int
adc
lock
faddp
sbb
cmp
cmp
adc
mov
aas
xor
(bad)
ins
ficom
xchg
ss
mov
adc
lock
mov
mov
shl
retf
hlt
outs
pop
pop
lods
ret
mov
jne
add
jbe
fstp
mov
mov
xor
xchg
jg
outs
mov
mov
inc
adc
jp
(bad)
mov
mov
dec
dec
xor
mov
xor
push
mov
cmp
sbb
inc
mov
iret
sbb
out
jmp
adc
cli
mov
dec
or
ret
lock
ins
adc
popf
sbb
loop
(bad)
xchg
sbb
(bad)
movs
(bad)
in
push
push
icebp
cmps
inc
or
sti
mov
mov
jbe
fisttp
dec
shl
add
movs
xchg
cmps
cli
mov
jecxz
cmps
(bad)
enter
jnp
cs
pop
mov
dec
cs
fnstenv
sbb
test
mov
sbb
gs
ss
dec
and
sbb
test
sub
enter
pop
pusha
pop
ficomp
dec
pusha
outs
aad
push
xchg
loope
(bad)
and
xor
push
aas
stc
and
iret
ret
adc
and
jmp
sub
xor
sbb
jbe
sbb
scas
and
cmps
gs
aad
popa
pop
jb
mov
sti
push
adc
jp
je
lods
push
cmps
cmp
sbb
push
mov
add
enter
out
mov
push
sub
sbb
mov
(bad)
sti
mov
popf
jmp
add
push
xchg
aad
xchg
and
outs
rol
sahf
push
push
ror
jne
int
dec
dec
xchg
out
xchg
sub
sbb
scas
add
jno
loop
mov
mov
or
and
outs
or
fs
scas
movs
ret
(bad)
hlt
mov
sub
ss
dec
mov
neg
(bad)
(bad)
cmp
and
inc
mov
mov
mov
jle
cdq
aaa
dec
mov
add
mov
add
and
scas
sbb
mov
sub
rcl
push
sbb
clc
mov
pop
fistp
outs
jp
mov
mov
pop
mov
or
pop
mov
jecxz
call
test
ret
ret
adc
push
dec
test
xchg
or
inc
aaa
imul
repnz
cs
xor
push
and
mov
test
jb
mov
inc
cwde
jp
inc
mov
xlat
aad
sub
test
inc
mov
xchg
mov
or
inc
add
dec
aaa
jmp
xor
jb
outs
outs
xchg
shl
fst
mov
or
pop
adc
xor
dec
or
shl
mov
outs
and
repz
cwde
cmp
push
ins
or
fwait
aas
fs
je
mov
cmp
or
or
xor
mov
mov
sbb
mov
ret
pop
push
cmc
rcl
dec
call
ins
lock
mov
rcl
lahf
push
fdiv
jmp
sbb
sbb
sbb
out
ins
or
add
rol
xchg
rol
test
movs
lea
dec
mov
jb
xchg
int
mov
inc
ret
cmp
or
push
ret
int3
scas
xlat
xchg
cmp
cmps
xor
xchg
je
mov
clc
sbb
dec
ret
lds
(bad)
jmp
scas
retf
scas
cld
out
push
xchg
lahf
out
dec
xchg
or
cmp
sbb
inc
sar
pusha
xor
push
xchg
sbb
sbb
push
(bad)
mov
inc
sub
iret
cs
sti
adc
pop
push
or
retf
mov
mov
inc
sbb
fcom
push
jne
xchg
cmc
pop
inc
push
cmp
adc
or
stc
cmps
cmc
cmp
mov
mov
cmp
mov
mov
or
pop
pop
fdiv
rcr
retf
popa
rol
or
stc
icebp
push
enter
and
jle
xor
(bad)
xchg
jne
sar
mov
and
pop
sub
pushf
mov
popf
rcl
cmp
int3
in
xor
shl
inc
mov
mov
push
jp
inc
scas
dec
cmp
icebp
inc
(bad)
sbb
xchg
shl
cli
out
into
iret
and
inc
ds
add
(bad)
cmp
mov
mov
mov
sub
and
stos
dec
or
mov
fwait
cmp
mov
xchg
and
aad
or
lea
pop
mov
mov
push
mov
das
mov
push
ror
clc
push
cli
mov
aam
add
sbb
lods
pop
lds
push
xor
add
cmp
leave
mov
je
pushf
pop
mov
shl
std
jb
lods
es
jle
dec
sbb
mov
jecxz
jle
add
imul
scas
clc
rcl
mov
dec
bswap
mov
cmp
xlat
inc
aam
jecxz
pop
push
mov
inc
out
nop
lea
jnp
xor
std
aaa
jp
lea
xchg
xlat
int3
rol
cli
dec
adc
(bad)
sahf
(bad)
in
das
lahf
cdq
stos
inc
outs
popf
and
mov
leave
mov
cmps
inc
mov
push
jmp
xor
in
mov
test
push
mov
mov
pop
mov
in
mov
pop
push
mov
push
or
mov
cdq
xor
mov
out
dec
es
pop
add
(bad)
jno
sub
mov
xchg
fldcw
dec
stc
daa
addr16
(bad)
jge
retf
(bad)
pop
stos
sar
fdivp
cwde
sub
mov
into
fcmovbe
push
leave
mov
fild
mov
mov
fimul
push
scas
lods
adc
jns
adc
call
aaa
xor
cld
cdq
leave
loopne
fcomp
xchg
aam
push
repz
in
jmp
dec
inc
ins
sub
mov
in
repz
stc
xor
and
repz
sub
xchg
test
and
(bad)
(bad)
pop
sbb
pop
mov
sub
or
sub
(bad)
mov
sbb
stos
cmp
aas
sub
jmp
in
into
lea
cmp
push
rcl
sub
mov
add
test
ss
mov
int
cmp
push
sbb
das
(bad)
ja
sbb
int
adc
mov
mov
sub
sbb
mov
(bad)
retf
test
push
in
and
call
rcl
ins
dec
inc
push
lods
sub
jmp
push
xchg
retf
and
dec
popf
lahf
outs
outs
push
push
jne
mov
loopne
or
mov
test
pop
shl
mov
add
sbb
(bad)
fdivr
ins
into
and
fldlg2
pop
pop
push
sub
adc
dec
pop
sbb
jmp
or
mov
mov
repz
sub
and
pop
mov
ins
adc
mov
inc
(bad)
mov
push
cld
ret
dec
sbb
pop
mov
rcl
cmp
rcr
in
mov
dec
ins
aaa
xchg
cld
popa
jo
dec
(bad)
jmp
idiv
imul
xchg
mov
(bad)
add
dec
xor
test
test
or
test
mov
add
rol
pop
add
inc
or
sub
lods
add
jecxz
mov
test
lahf
mov
ds
xor
in
jne
cmp
mov
popa
fnstcw
cwde
lds
dec
xor
fisubr
rcl
dec
xor
std
mov
jb
(bad)
in
dec
jecxz
jl
inc
test
adc
inc
mov
sub
sbb
call
aam
sub
cmc
out
or
ret
lods
inc
movs
outs
adc
cmps
jbe
movs
add
lahf
mov
push
pushf
fild
rcr
ret
adc
push
fstp
fwait
popa
(bad)
push
xlat
dec
mov
(bad)
jne
int
fdiv
in
scas
ins
pop
add
inc
mov
rcr
retf
nop
push
xor
pop
popa
imul
push
mov
dec
lods
mov
pop
test
aaa
adc
ss
iret
mov
xchg
xchg
hlt
loop
lods
xchg
dec
shr
jle
jns
sbb
jmp
aaa
adc
sahf
mov
retf
not
rcr
inc
setg
xchg
and
or
mov
cmc
adc
push
fistp
scas
pop
jo
mov
fwait
ret
xor
test
retf
fmul
xchg
not
dec
and
add
mov
lock
outs
mov
sbb
imul
dec
jp
or
retf
les
stos
sbb
mov
cdq
and
sub
mov
mov
pop
mov
adc
jl
sbb
xor
imul
fisub
xchg
ret
adc
hlt
jno
inc
dec
in
push
sti
jp
mov
dec
jo
push
iret
push
(bad)
add
dec
iret
(bad)
scas
rol
scas
xor
into
xchg
mov
mov
cld
cld
addr16
add
in
rcr
(bad)
(bad)
pop
jbe
retf
sbb
(bad)
push
sub
enter
adc
retf
enter
cmc
(bad)
int3
outs
jne
fmul
sbb
test
jmp
mov
fdiv
ins
push
retf
scas
push
pop
mov
xchg
xor
popf
and
add
adc
cmp
rol
imul
lods
pop
inc
ret
dec
jbe
jge
fincstp
rcr
sub
mov
inc
imul
add
cwde
or
mov
cmp
pusha
test
cmps
imul
ror
ss
jmp
push
push
je
jb
dec
push
pop
sbb
mov
jmp
cld
call
out
rcr
pop
adc
add
les
push
or
mov
popf
data16
and
fs
in
inc
int
pop
popa
(bad)
mov
mov
movs
(bad)
push
test
xchg
mov
test
mov
(bad)
or
outs
fwait
sbb
shl
xlat
add
mov
mov
push
inc
jns
adc
pop
sbb
push
sub
sbb
in
dec
(bad)
pop
or
fnstenv
loop
or
aam
or
in
mov
push
icebp
xor
(bad)
stos
stos
imul
data16
ror
neg
pop
aad
cmps
pusha
xlat
pop
mov
int
adc
push
sar
into
leave
push
in
sbb
or
daa
or
sub
push
adc
inc
fwait
mov
and
xchg
sar
mov
(bad)
bound
and
je
arpl
rep
push
scas
push
(bad)
xchg
xchg
test
adc
std
jae
push
(bad)
mov
dec
addr16
mov
daa
inc
pop
jl
adc
sar
fnstenv
or
lods
movs
(bad)
pop
sti
cmps
std
out
dec
movs
jecxz
inc
outs
dec
scas
mov
mov
jmp
imul
mov
add
push
or
rcr
iret
cs
push
int
call
in
xchg
ror
mov
or
xlat
repz
dec
xchg
cdq
push
iret
inc
sar
fnstenv
inc
rol
dec
sbb
lock
nop
add
dec
pop
add
push
dec
test
jl
pop
clc
pop
xlat
add
js
sub
pop
pop
dec
sbb
adc
std
inc
dec
cmp
inc
lahf
xor
mov
push
mov
push
out
gs
loope
lahf
movs
adc
xor
and
inc
push
jno
jbe
test
push
dec
jle
and
push
out
cdq
push
push
outs
fst
(bad)
push
std
fld
jns
mov
repz
jg
nop
xor
xor
movs
dec
jg
add
xchg
or
(bad)
clc
aam
cld
pop
or
mov
repnz
movs
mov
test
cwde
mov
mov
add
test
jbe
add
(bad)
inc
stos
dec
bound
pop
mov
sub
mov
stc
mov
inc
mov
xor
sub
pop
push
or
jns
inc
or
lock
dec
sbb
mov
push
xchg
fimul
ja
mov
or
dec
ret
xor
out
fiadd
xor
int
jmp
xor
shr
icebp
gs
or
or
adc
(bad)
pop
lods
into
xchg
div
shl
sahf
mov
dec
in
jne
and
xchg
and
aaa
push
arpl
test
movs
xor
addr16
aad
jns
xor
loop
or
stc
xor
ret
push
sbb
data16
pop
lock
das
fmul
(bad)
fistp
mov
xor
cmc
add
or
xchg
rol
popf
inc
mov
sbb
or
mov
xor
add
jae
cmp
adc
aam
sbb
add
jle
repz
mov
lahf
inc
adc
adc
add
inc
or
movs
adc
out
js
cmp
scas
adc
sbb
call
inc
mov
test
sahf
aam
dec
ins
xchg
pop
clc
dec
sub
sub
jg
inc
dec
add
dec
pop
and
adc
jo
fnstenv
stos
mov
jge
cmp
xchg
jl
sub
lods
jg
or
lds
and
adc
dec
xchg
lahf
push
shl
cmps
adc
xchg
addr16
push
sbb
push
js
(bad)
adc
xchg
inc
repnz
mov
or
inc
mov
clc
inc
(bad)
call
pop
retf
lods
xor
pop
aad
(bad)
push
xor
dec
pushf
repnz
lods
mov
cmp
add
jecxz
outs
stc
lds
inc
out
gs
retf
dec
mov
xor
ins
mov
pop
push
inc
cdq
mov
loopne
pop
ror
lahf
push
jl
cmp
or
jl
ret
data16
inc
aaa
dec
jns
and
pushf
mov
push
pop
inc
stos
out
sub
jne
repnz
popf
jmp
out
cmp
xchg
pop
jae
add
sub
test
into
imul
add
push
xlat
push
les
repz
in
call
push
(bad)
mov
mov
pop
xlat
mov
pop
mov
retf
mov
mov
leave
push
scas
mov
inc
hlt
bound
and
and
mov
movs
mov
add
and
xchg
jno
and
or
mov
mov
lock
pop
push
in
repnz
test
add
gs
dec
pop
jle
mov
scas
std
adc
add
pop
scas
out
das
xor
pop
cmp
push
ret
aam
cmc
fsub
js
push
cmc
mov
loopne
pop
aaa
mov
mov
js
dec
dec
out
fwait
test
fiadd
bound
jne
sbb
xor
sti
pusha
pop
ror
jge
sub
(bad)
hlt
mov
stc
cmp
add
xor
lea
jle
imul
cli
jno
cdq
cld
dec
push
out
xchg
pop
lods
xor
mov
mov
and
push
retf
ja
mov
(bad)
retf
(bad)
frstor
push
(bad)
int3
xchg
aam
gs
jle
pop
mov
sbb
icebp
jne
aaa
shl
into
dec
mov
pop
shl
ds
repnz
mov
mov
test
mov
sbb
and
add
mov
jecxz
dec
daa
jb
push
inc
retf
xchg
adc
cli
xchg
es
cmp
fld
gs
add
mov
cld
cmp
stos
dec
imul
pop
dec
mov
jle
jno
xchg
sbb
push
cmps
and
outs
stos
cmps
rcl
mov
and
retf
nop
mov
cli
call
test
mov
jmp
and
pop
and
out
das
add
and
in
and
cmc
lahf
xor
frstor
xchg
ror
cmc
clc
xchg
hlt
sub
int
dec
adc
jle
xchg
lahf
mov
outs
dec
add
pop
cmps
jae
inc
cmp
mov
scas
dec
sub
repz
inc
and
mov
fisttp
jl
shl
dec
inc
inc
lods
je
mov
out
stc
mov
dec
ds
ret
push
retf
jne
inc
stos
xchg
(bad)
mov
loop
sub
fdivr
test
cdq
mov
mov
xlat
xor
in
sbb
mov
mov
inc
cdq
fstp
outs
dec
rcr
push
inc
(bad)
cli
push
sub
sbb
push
imul
mov
add
enter
add
fwait
enter
xchg
(bad)
mov
push
addr16
in
xchg
cmps
cmps
sub
jmp
test
iret
pop
clc
shr
mov
imul
div
movs
jmp
or
rcr
xchg
xchg
popf
and
xor
scas
mov
dec
cmp
sub
mov
stc
sti
ins
xchg
enter
xor
push
add
cmp
push
aas
jnp
sti
in
stc
pop
dec
jns
mov
ficom
inc
pop
aad
cmc
push
dec
fistp
sti
pop
inc
jle
jmp
(bad)
pop
push
sbb
mov
pop
(bad)
mov
cmp
fisub
jge
adc
inc
test
add
shr
fdivrp
repz
sub
inc
sub
clc
out
inc
mov
lock
jg
adc
rol
mov
pop
pushw
aam
xor
rol
jecxz
mov
and
mov
pop
test
xchg
jo
mov
fsub
aam
rcr
sub
push
in
mov
das
into
xchg
mov
xor
mov
rcr
push
ror
xchg
pop
test
shl
dec
or
js
mov
push
dec
and
and
sbb
mov
sub
pop
test
hlt
jmp
sahf
mov
sub
pop
cmp
leave
jecxz
in
call
adc
mov
add
jbe
jle
sub
lds
nop
dec
lock
shr
add
das
xchg
fwait
xor
and
sub
(bad)
repnz
pop
rol
jle
fwait
and
test
jecxz
retf
out
clc
mov
shr
outs
cmp
or
cs
push
lds
lods
mov
adc
adc
dec
test
popf
int3
xor
enter
jg
int
mov
sub
add
test
mov
mov
iret
lea
pop
dec
js
add
adc
xchg
icebp
sub
(bad)
or
or
sub
dec
std
arpl
inc
rcl
inc
cld
cwde
cmp
cli
sbb
mov
inc
push
inc
cld
packsswb
repnz
fimul
fsubr
mov
fsub
sbb
pop
sbb
or
lds
pop
push
push
aas
add
dec
or
adc
push
inc
mov
loopne
out
movs
paddusb
int
stc
shl
or
in
leave
mov
and
add
fisttp
nop
inc
repz
sbb
push
pop
imul
outs
mov
fdiv
xchg
dec
mov
call
and
mov
addr16
mov
loopne
clc
mov
hlt
outs
scas
(bad)
jecxz
cmp
ja
mov
aaa
iret
xchg
rol
mov
not
mov
fnstsw
scas
call
mov
xchg
dec
inc
aad
inc
je
sbb
sbb
nop
adc
and
and
in
inc
(bad)
and
push
mov
push
int3
adc
or
jg
imul
(bad)
leave
jnp
xor
jmp
test
fmul
daa
sbb
imul
pop
retf
ins
jmp
(bad)
ins
loopne
pushf
cmp
jo
cli
cmps
lea
clc
mov
cmps
jbe
dec
fwait
add
aad
jnp
cwde
mov
loope
rol
scas
fistp
outs
fidiv
ds
jmp
stos
mov
idiv
push
sub
cmc
push
outs
sbb
jno
imul
out
adc
xlat
repz
adc
push
dec
add
mov
push
jno
es
xor
(bad)
in
lds
nop
loopne
push
test
mov
test
out
adc
mov
retf
sub
add
ins
and
cmp
test
xor
push
pop
fdivr
adc
fistp
enter
out
or
lahf
retf
mov
inc
or
pop
ins
mov
push
data16
ficomp
push
push
rcl
xchg
in
push
xchg
add
or
icebp
xor
jl
iret
mov
rcr
mul
jg
pop
sbb
inc
leave
call
xor
sbb
sar
jns
pusha
xchg
cmp
push
mov
pop
mov
dec
cmps
or
inc
clc
ins
dec
xchg
mov
test
pop
test
(bad)
out
sar
ja
jp
(bad)
mov
fbstp
(bad)
popf
ds
scas
pop
cmp
test
jmp
adc
push
iret
mov
mov
sub
xor
stos
adc
jnp
jg
xchg
push
sbb
push
mov
mov
les
pop
mov
scas
and
jle
lds
sub
pop
xor
add
xchg
out
xchg
jne
retf
rcr
popa
call
xchg
sbb
cmp
imul
mov
xor
in
ret
add
adc
ins
and
inc
call
jmp
add
ins
mov
stos
test
pop
das
push
mov
jnp
movs
add
push
or
fwait
movs
xchg
push
inc
scas
cdq
mov
cmps
sti
cmc
shr
or
jmp
call
xchg
(bad)
outs
dec
mov
push
fcmovnbe
jno
addr16
repz
xchg
fs
xchg
xchg
xor
in
idiv
jg
jp
mov
jbe
or
xchg
push
bound
mov
pop
mov
mov
or
xchg
pusha
xchg
xchg
cmc
or
or
mov
ret
(bad)
adc
jo
add
sub
dec
cmps
mov
xor
xor
inc
ds
movs
sbb
scas
add
call
rol
call
mul
and
outs
or
fidivr
pop
xchg
inc
dec
inc
sbb
mov
out
fnstenv
aas
ja
mov
out
xor
mov
adc
cdq
push
repz
lea
mov
mov
test
leave
call
retf
lahf
es
add
or
dec
mov
sub
mov
clc
add
sbb
sub
jp
jmp
ret
inc
xlat
push
into
add
(bad)
rcl
out
(bad)
fadd
popf
iret
loop
jmp
js
in
data16
scas
addr16
jmp
xchg
mov
jle
bound
cmp
jge
stos
mov
jns
jle
cld
fcmovne
adc
inc
inc
jg
ins
(bad)
out
(bad)
jg
xor
sbb
rol
push
and
dec
test
stc
mov
dec
fsub
cmp
push
mov
jecxz
fwait
jmp
xchg
sbb
loopne
add
outs
inc
(bad)
neg
cmps
cmp
xor
sub
shl
mov
movs
mov
movs
lahf
xor
dec
sbb
(bad)
fist
dec
pop
or
xchg
inc
pop
lods
cwde
dec
inc
dec
pop
cmp
pop
ins
ret
dec
or
les
push
and
in
(bad)
mov
cmp
inc
aad
(bad)
call
cmps
or
jo
push
sti
or
jl
test
jae
sub
sub
mov
test
and
stc
dec
test
shl
push
dec
pop
add
xchg
add
mov
adc
ins
aam
fidivr
mov
movs
jae
int
and
mov
enter
pop
dec
ror
dec
xchg
push
push
dec
or
xor
push
in
mov
add
jbe
or
xchg
add
or
int3
imul
dec
test
push
jg
cmp
push
lea
mov
out
int
pop
mov
sub
(bad)
outs
mov
mov
retf
jl
sar
add
dec
cmps
sub
jl
mov
mov
adc
(bad)
ja
jno
xor
stc
enter
call
test
gs
or
sbb
mov
lods
add
test
pop
shl
add
scas
push
dec
jne
lahf
mov
jg
mov
mov
je
push
daa
adc
adc
call
pop
mov
add
add
jo
shl
jg
div
ins
or
das
sub
dec
imul
mov
xchg
add
pop
mov
js
push
sbb
mov
pop
jne
sub
sub
jge
or
ss
arpl
lock
adc
fwait
leave
xchg
add
scas
data16
ss
mov
cmp
or
inc
cs
cmps
xor
pop
jns
mov
gs
sbb
jecxz
outs
add
xor
in
dec
sti
pop
imul
add
cmp
xchg
xchg
sbb
icebp
or
and
sbb
push
fistp
(bad)
fcom
hlt
dec
out
in
aad
aad
fwait
(bad)
adc
adc
cmp
loopne
jg
push
and
or
mov
sbb
pop
js
xor
shr
daa
movs
not
daa
or
adc
mov
add
ret
inc
das
aaa
pop
pusha
adc
cdq
cmp
sub
fldcw
mov
stos
sbb
sbb
push
or
rsqrtps
jbe
dec
ds
adc
nop
push
loop
imul
shr
dec
mov
rol
xchg
ret
test
push
or
dec
scas
aaa
das
shl
dec
cmp
xchg
xchg
das
pop
addr16
call
cmp
dec
repz
gs
add
xchg
push
lfs
mov
jmp
pusha
leave
jmp
pop
mov
mov
dec
out
test
retf
push
fdiv
xchg
sub
retf
jb
in
pop
int
cdq
or
and
add
mov
call
fwait
lods
lods
shr
jg
into
(bad)
mov
jb
jmp
test
cli
movs
sbb
js
pop
inc
in
cs
das
mov
xchg
pop
adc
sbb
cld
lahf
adc
pop
loope
int
es
push
xchg
xlat
shl
sbb
push
push
scas
cdq
pop
dec
out
jae
lock
mov
mov
jno
sbb
shr
cmp
inc
stos
pop
fbld
xchg
enter
or
les
cmp
sbb
leave
push
pop
mov
sub
(bad)
sbb
push
ret
jmp
push
adc
popf
or
adc
inc
sub
dec
loope
outs
stc
jno
fimul
add
jo
adc
ss
lds
daa
xchg
mov
cld
sar
ins
outs
mov
iret
xchg
or
fidivr
icebp
mov
sbb
jae
adc
mov
lods
cld
push
(bad)
push
repz
jl
leave
mov
js
imul
dec
mov
pop
jp
pop
not
stc
or
ret
adc
shr
outs
lahf
dec
dec
inc
mov
mov
iret
sub
jmp
retf
push
adc
repz
inc
ja
inc
(bad)
mov
dec
shr
outs
in
push
inc
or
out
and
enter
and
ficom
das
int3
and
pop
retf
pop
es
mov
push
jl
in
adc
or
pop
sbb
retf
push
jb
cmps
sahf
(bad)
div
jmp
cdq
fild
icebp
mov
add
sbb
ds
mov
push
pop
das
out
(bad)
fs
sub
cmp
push
jmp
and
adc
push
or
mov
cwde
out
fwait
bound
xlat
stos
call
and
mov
cmps
ret
jae
jl
imul
sub
adc
cli
pop
les
jp
mov
retf
movs
in
cld
fisubr
cwde
rcr
jp
pusha
push
inc
push
bound
mov
sar
icebp
xchg
data16
push
(bad)
push
arpl
pusha
movs
xor
and
sub
pop
or
jge
enter
loop
cmp
xchg
popf
pop
rol
sbb
cmp
outs
icebp
in
xchg
into
xchg
push
cmp
nop
xor
xor
jnp
ret
(bad)
aad
sbb
sti
movs
or
or
dec
es
das
bound
jno
adc
scas
repnz
data16
cmp
das
cmp
hlt
or
das
aas
sar
cmps
xlat
sahf
loop
or
xor
cmps
jmp
aad
jge
outs
or
mov
hlt
les
and
enter
mov
mov
mov
add
cmps
pop
add
shr
ds
mov
(bad)
inc
and
icebp
pop
daa
stos
dec
shr
jg
jp
(bad)
mov
xor
pop
sub
adc
sbb
sbb
cmp
xor
pop
push
fld
aad
pop
dec
inc
and
cwde
xlat
loope
dec
jmp
jp
cmp
cmps
inc
mov
xchg
test
pop
adc
nop
pop
movs
push
fucomi
into
cmp
cmps
stc
jp
mov
cmps
test
lahf
jl
int3
and
std
xchg
out
pop
jo
rol
loop
div
jbe
out
xor
sbb
sbb
jnp
xor
dec
xchg
in
into
imul
(bad)
mov
test
lock
sbb
xchg
adc
enter
push
shl
loope
jno
xlat
mov
pop
adc
cmps
pop
loopne
test
in
movs
fst
outs
jg
dec
std
fistp
inc
add
push
nop
push
pop
ds
or
mov
adc
outs
pop
scas
int3
mov
imul
movs
mov
(bad)
pushf
movs
(bad)
dec
cmp
les
jns
pop
clc
fst
popw
cmp
into
pop
in
pop
loop
test
pushf
aaa
movs
inc
fnstcw
sbb
push
jae
add
sti
stos
jl
iret
mov
mov
jno
inc
int3
dec
aam
mov
test
pop
sbb
or
mov
(bad)
popa
jne
pop
sub
push
es
nop
mov
cs
cdq
sti
ficomp
retf
ins
mov
cmp
sbb
push
inc
jb
add
dec
lds
and
add
ins
adc
cmp
std
jecxz
jle
div
cmps
mov
adc
aam
xchg
push
mov
xchg
sbb
or
repz
cs
aam
cmp
neg
mov
aam
add
dec
or
enter
outs
imul
mov
adc
mov
add
jecxz
test
add
fnstsw
stos
mov
fwait
int3
pusha
cmps
outs
out
jp
ds
ds
sub
sub
inc
mov
cmps
jmp
arpl
xchg
out
dec
enter
push
add
fs
fs
cdq
in
js
ret
mov
cmp
stc
ins
sub
jmp
sub
(bad)
xchg
imul
mov
jmp
push
adc
jb
dec
(bad)
je
(bad)
fucomp
in
popa
sbb
or
push
xlat
push
sti
movs
cmpps
fisubr
sub
sbb
out
fwait
out
pusha
ins
mov
xchg
pushf
jmp
sub
add
mov
loopne
jle
mov
xor
iret
ret
(bad)
loop
stos
mov
cld
lea
xchg
xchg
retf
mov
out
xchg
and
dec
xchg
rcl
sti
jp
adc
ret
hlt
and
addr16
fs
lds
cmp
clc
xchg
aaa
scas
in
mov
mov
test
dec
jle
lea
js
js
pusha
xor
pop
sbb
dec
xor
xchg
nop
hlt
cs
cli
mov
int3
retf
inc
cmps
into
aas
or
push
jmp
xchg
test
and
xchg
cwde
(bad)
es
in
sbb
pop
loope
mov
call
mov
mov
inc
jo
xchg
sbb
add
mov
mov
sub
adc
or
cmps
push
push
jae
adc
es
imul
jg
cmps
outs
xchg
gs
inc
loop
lock
mov
add
mov
popf
stos
outs
scas
rol
(bad)
sub
rol
fmul
xor
jne
or
pusha
mov
sti
imul
ror
pushf
sti
std
ror
repnz
xchg
stc
and
xchg
mov
inc
int3
push
stos
push
adc
scas
mov
dec
mov
cs
push
mov
mov
jg
repnz
pushf
add
shr
psrlq
dec
push
push
mov
pusha
cmp
push
push
add
and
retf
fstp
je
inc
outs
out
pusha
sar
ret
adc
stos
cmp
cli
add
call
cmps
add
inc
sub
mov
sub
dec
hlt
inc
cmp
dec
mov
and
inc
dec
push
test
arpl
push
nop
cli
cmps
test
lds
(bad)
bound
fdiv
lds
icebp
ins
and
dec
test
mov
adc
cli
icebp
aaa
daa
mov
arpl
test
sub
scas
add
or
sub
aam
das
mov
adc
dec
gs
jp
sti
(bad)
lds
mov
mov
dec
icebp
adc
xchg
mov
jle
sti
data16
retf
fdivr
ret
in
mov
ror
or
xlat
inc
push
jnp
call
xor
jge
fsubr
jnp
mov
repnz
call
jge
(bad)
jl
ja
jo
pushf
or
jns
test
enter
loop
cs
std
xchg
ds
mov
jb
cmp
lea
mov
pop
shl
pop
dec
dec
xchg
or
sti
ret
daa
ja
or
xor
and
pusha
xlat
xchg
or
(bad)
lds
(bad)
dec
and
dec
aad
aad
int
or
sub
fcomp
pop
into
shr
jmp
sar
enter
jmp
mov
inc
and
ins
jne
add
daa
test
jbe
test
or
push
push
inc
sysret
adc
xchg
test
cmp
cld
cmp
inc
fst
sub
stos
popf
inc
xchg
in
cmp
cmc
popf
dec
sar
int3
sti
sti
stc
xchg
push
inc
mov
lock
in
cmps
and
mov
dec
popf
test
xor
pop
ror
test
dec
icebp
aas
out
(bad)
mov
cwde
and
and
xor
das
rol
mov
push
sbb
loopne
fucomip
std
je
ins
loop
ret
pop
(bad)
jne
jae
(bad)
imul
retf
xchg
xor
lds
mov
xchg
les
jg
test
xor
out
cmp
fs
lds
pop
dec
rcr
add
test
test
cld
xor
xchg
out
mov
mov
jmp
jp
sub
jns
pop
sbb
sub
mov
movs
add
cld
push
cmp
cwde
mov
nop
cmp
cmp
lahf
sahf
cmp
add
push
adc
int
mov
(bad)
cmps
into
mov
cmp
and
sub
test
or
xor
ds
mov
mov
push
cld
inc
sub
nop
jo
xchg
mov
clc
xor
or
add
pop
lahf
mov
(bad)
ins
cmp
or
popf
lahf
cmps
jp
cmp
aad
mov
xchg
and
cdq
and
icebp
sahf
stc
cmp
cmp
cmp
cmp
jmp
jnp
pop
mov
pushf
lds
and
push
or
sbb
pop
dec
cmp
faddp
ins
(bad)
lea
sub
adc
sub
ins
imul
stos
repnz
rcl
jle
mov
mov
jnp
jmp
sbb
(bad)
scas
sub
push
test
or
jmp
jmp
mov
loop
leave
add
xchg
jg
and
or
shl
loop
xchg
jl
adc
aam
fs
call
mov
rcl
push
add
jg
loope
(bad)
imul
test
sbb
sub
xor
fild
aas
mov
cmp
mov
fld
mov
mov
sub
jl
jmp
(bad)
push
adc
push
pop
mov
stos
adc
loopne
xchg
mov
fimul
lds
jmp
sbb
add
pop
xchg
mov
xor
sub
cs
js
or
arpl
cmp
outs
add
ret
push
adc
mov
add
data16
mov
push
dec
jne
shr
lock
xor
lds
(bad)
mov
dec
add
inc
retf
jbe
pop
mov
xchg
dec
xchg
int
mov
lods
fcomp
lods
and
or
mov
adc
mov
mov
scas
push
dec
iret
in
xor
scas
dec
ins
mov
mov
outs
rol
push
jns
sub
movs
outs
inc
ins
pmovmskb
mov
pop
fsubr
xchg
sub
cwde
pop
jp
and
xchg
or
movs
mov
mov
adc
test
xchg
inc
xor
sub
inc
sbb
sub
sub
pop
mov
fild
fistp
push
mov
int
sbb
icebp
test
jmp
pop
cmps
call
sbb
mov
jo
out
(bad)
ja
jne
jne
pop
dec
adc
jbe
lahf
xchg
jae
mov
jne
pop
aaa
inc
cmps
pusha
ins
push
data16
in
and
fst
xlat
jmp
stos
out
pop
fsubr
or
call
add
mov
test
addr16
out
xor
nop
retf
movs
inc
sbb
adc
mov
in
ror
mov
cmp
lock
mov
out
pop
ja
cmp
jns
leave
bound
add
aam
mov
mov
adc
mov
dec
aam
sahf
xor
dec
or
inc
jo
jmp
mov
cmp
push
hlt
cwde
popa
int3
or
leave
jl
cmc
nop
or
lods
adc
mov
stos
pop
dec
add
es
xchg
aam
pop
leave
(bad)
sbb
lea
jmp
cmp
xchg
inc
addr16
(bad)
push
pop
cli
ss
push
adc
and
pop
dec
js
cli
cwde
mov
inc
std
cmc
cld
xor
aas
mov
mov
das
(bad)
jnp
(bad)
dec
into
loop
sub
xor
imul
xchg
fisub
adc
sbb
mov
inc
jle
popf
jne
xchg
jbe
fmul
jnp
sbb
data16
xchg
xor
imul
jle
adc
dec
pop
cmp
and
sub
ja
mov
popa
push
je
add
imul
add
sbb
mov
dec
mov
movs
push
jmp
bound
sub
mov
push
lds
out
fcom
cdq
(bad)
xchg
push
pusha
(bad)
(bad)
xchg
push
fwait
mov
out
push
jecxz
dec
int
mov
cmps
mov
sub
xchg
add
sub
into
xchg
pop
retf
xchg
or
cli
repnz
mov
scas
daa
sbb
mov
cwde
mov
mov
push
jecxz
dec
mov
mov
push
popa
(bad)
sub
dec
lds
xchg
push
jno
(bad)
push
outs
mov
jb
sbb
xchg
jne
lea
ins
inc
fcos
xchg
pop
clc
aas
jbe
test
add
sbb
push
jecxz
jl
mov
fistp
out
and
in
test
xor
and
lahf
pop
add
in
adc
jo
xor
xchg
adc
rol
dec
stc
mov
push
dec
mov
cmc
pop
sub
(bad)
mov
hlt
(bad)
dec
and
popf
xchg
jle
sub
mov
lock
imul
mov
ins
xchg
add
lods
mov
imul
jmp
add
inc
jo
add
in
and
repz
push
ins
jl
push
popf
xor
inc
xchg
lahf
popf
sbb
gs
jo
scas
xchg
jb
and
dec
movs
xor
jp
or
mov
jns
jg
xchg
int
loope
iret
ins
mov
imul
dec
fild
popf
test
add
fidiv
adc
inc
cs
(bad)
lods
jg
add
push
retf
xchg
push
(bad)
icebp
stos
retf
xor
aam
push
in
and
sbb
sahf
aaa
dec
in
aad
aaa
jmp
test
or
sahf
mov
cmp
clc
pop
adc
sub
jge
sbb
add
bound
ins
xor
cmp
rcl
mov
and
adc
mov
sahf
int
js
(bad)
jge
and
push
lock
in
adc
or
stos
push
aaa
retf
(bad)
out
cmp
retf
(bad)
push
jmp
out
jmp
rcl
clc
out
fsubr
jnp
inc
push
gs
(bad)
xor
inc
mov
mov
mov
pusha
adc
(bad)
xlat
push
dec
adc
cmp
mov
dec
inc
jae
add
push
inc
pop
das
cld
daa
in
lahf
in
lock
lock
dec
in
jle
adc
shr
sbb
shr
xchg
jmp
mov
push
test
cmps
ret
inc
xchg
jp
dec
cmp
ds
mov
ret
cmc
pop
xlat
inc
stc
enter
jns
push
add
jbe
xchg
add
call
dec
xor
outs
add
xchg
stc
mov
jmp
xor
fdivr
mov
push
add
call
out
jno
inc
clc
ret
shl
jle
out
inc
(bad)
mov
loopne
pop
or
fiadd
aaa
sbb
aam
out
clc
scas
fs
jnp
jge
(bad)
gs
add
and
int
movs
xor
pop
xchg
sub
ds
push
cmp
inc
xchg
arpl
fist
es
repz
cld
pop
mov
mov
xor
dec
or
and
ss
and
lods
pop
popf
arpl
mov
sti
popf
dec
(bad)
push
or
imul
popa
adc
out
adc
sub
cmp
inc
addr16
push
mov
aam
inc
out
xor
clc
es
movs
outs
ins
lahf
cmp
or
movs
push
jae
fisub
xchg
mov
push
jbe
pusha
sti
loope
loopne
ins
and
cs
inc
mov
jp
xchg
jno
mov
call
fmul
fnstsw
pop
push
jne
push
jge
add
mov
shr
cld
rol
sub
aam
fwait
xchg
out
ins
leave
ja
mov
pushf
push
xor
pop
inc
pop
cli
or
xchg
aas
ds
data16
imul
push
push
pop
sub
outs
test
mov
lods
cmp
lahf
shr
xor
cmps
fild
jae
cwde
imul
add
retf
xor
jae
je
out
into
arpl
repnz
fldcw
adc
inc
inc
data16
inc
adc
push
sahf
push
movs
repnz
mov
or
xor
jae
mov
inc
dec
hlt
(bad)
repnz
inc
add
xchg
xchg
inc
jp
mov
mov
retf
dec
push
(bad)
fst
xor
pop
stos
inc
jmp
dec
mov
inc
std
xchg
ins
sub
popa
adc
repz
loope
or
push
mov
add
shl
sar
dec
push
jne
sub
neg
js
mov
outs
lahf
xchg
(bad)
mov
mov
ins
xor
loopne
out
xchg
imul
stc
or
jp
imul
ja
fidivr
mov
pop
js
add
mov
sbb
(bad)
loopne
addr16
pop
push
iret
addr16
mov
jmp
sahf
(bad)
ds
adc
xchg
mov
cld
arpl
push
adc
lds
bound
cmps
(bad)
ret
out
stos
pop
or
xchg
je
xor
into
cmps
sub
inc
inc
hlt
sub
loope
cmp
fdivrp
mov
sbb
popf
inc
sub
fcom
(bad)
fistp
sahf
dec
dec
sub
jg
mov
leave
cmp
fsubr
and
pop
(bad)
fimul
mov
sbb
stc
test
in
push
fwait
jns
jne
pushf
mov
xor
cmps
sub
scas
mov
addr16
popa
leave
dec
loope
rcl
jge
ret
lods
mov
xor
dec
shrd
(bad)
in
push
jle
icebp
adc
mov
lock
mov
inc
inc
sbb
mov
jecxz
imul
mov
dec
xchg
inc
or
call
add
int3
dec
mov
lods
jle
popa
jmp
add
xchg
(bad)
div
cdq
retf
cmp
into
push
add
jmp
mov
fst
jmp
in
scas
sbb
lahf
add
cld
cmp
pop
fcmovbe
push
outs
mov
and
inc
imul
mov
cmps
jo
dec
(bad)
push
lea
jno
mov
and
xchg
stc
dec
sbb
stos
and
mov
cmp
test
cmp
cmps
xlat
jae
sub
dec
shl
popf
adc
rol
shl
(bad)
in
mov
mov
push
retf
test
mov
mov
int3
cdq
jae
mov
jbe
sti
mov
mov
ja
fsubp
lahf
out
push
ins
xchg
cmp
call
add
sub
mov
add
inc
pop
(bad)
fiadd
jae
std
cmp
daa
dec
in
packssdw
dec
js
ss
sahf
cmp
in
and
mov
inc
jb
adc
nop
cmp
mov
ss
fisubr
in
xor
mov
test
popa
pop
cmp
mov
adc
pop
jns
jns
in
cwde
jnp
xor
mov
pusha
xor
jne
and
outs
shr
mov
cmp
mov
loope
cmp
lds
arpl
push
pop
push
sbb
push
stos
adc
fwait
mov
(bad)
xchg
mov
scas
xor
xor
cmps
sbb
sbb
pop
lahf
imul
pop
jmp
or
ins
scas
(bad)
or
and
add
(bad)
(bad)
loop
cmp
movs
jae
fsubr
mov
mov
loop
bound
out
pop
movs
pop
ss
repnz
test
(bad)
cmp
out
mov
mov
mov
outs
popf
pop
mov
mov
mov
jbe
adc
cmc
push
jo
aas
add
movs
stos
dec
inc
xor
xchg
xor
pop
frstor
cmp
mov
jle
jo
mov
inc
scas
mov
out
push
stos
jmp
sub
push
mov
enter
mov
rol
push
cmp
mov
stos
imul
push
mov
sub
sbb
sub
inc
dec
test
mov
ret
add
sub
aad
movs
pop
sub
fsub
push
jae
sar
adc
in
dec
lods
imul
aas
in
or
aas
imul
adc
call
in
jmp
mov
pop
cs
stc
es
mov
loopne
movs
pop
retf
hlt
xor
push
or
cmp
mov
add
pusha
imul
pop
pop
retf
fmul
jb
js
add
push
aaa
pop
es
hlt
je
lods
stc
inc
jns
jnp
inc
test
test
mov
cmp
shl
adc
cmps
jns
les
aaa
sub
stc
mov
out
mov
ins
pop
outs
sbb
sub
jns
push
inc
ret
jl
in
push
out
add
out
ds
and
push
cmp
enter
adc
jo
inc
cmps
(bad)
xchg
leave
fsubrp
sbb
into
in
push
in
jb
mov
sbb
and
addr16
int3
arpl
ror
outs
pop
add
lods
scas
inc
arpl
sar
adc
in
xchg
and
neg
mov
ret
pop
call
clc
mov
jbe
int3
in
jb
mov
ret
retf
cli
xchg
mov
pop
adc
outs
mov
lds
mov
iret
inc
lds
mov
int3
aaa
cmp
or
inc
jge
clc
push
adc
fcmovbe
pop
test
mov
lods
gs
pop
cld
mov
mov
enter
movs
mov
stos
mov
cmp
ss
div
adc
stc
retf
sub
pop
mov
loop
pop
(bad)
and
pop
jnp
in
mov
mov
int
pop
or
in
mov
mov
test
sbb
sbb
(bad)
lods
lea
dec
jns
jb
cdq
in
fnstenv
xchg
aas
inc
loop
mov
out
lea
bound
cld
retf
add
or
stos
mov
jns
rcl
(bad)
(bad)
fst
cdq
or
pop
push
sbb
bound
adc
lds
scas
or
sub
cmp
outs
push
out
mov
xor
mov
push
scas
in
movs
cdq
jno
imul
cld
outs
dec
jle
gs
outs
mov
pop
cs
js
dec
mov
push
popf
fnstsw
ss
(bad)
lahf
das
xchg
daa
cmp
loop
xor
xor
cs
aaa
jnp
lahf
push
daa
adc
std
fs
sbb
shl
in
mov
leave
cmp
les
pop
mov
ja
pop
xor
mov
xchg
adc
not
xor
add
push
sbb
ret
cmp
dec
cmps
and
jns
ficomp
shl
jbe
scas
inc
bound
inc
pop
call
inc
scas
retf
fs
cmp
aaa
mov
cdq
mov
push
ret
shl
fist
nop
fisttp
scas
arpl
cmps
xchg
ins
mov
jmp
dec
cmp
sbb
es
or
(bad)
pusha
shr
cmp
pushf
push
movs
mov
iret
fsub
xor
push
push
cld
mov
(bad)
pushf
ja
dec
inc
pop
inc
ins
adc
adc
push
jae
add
and
retf
leave
xor
add
jno
or
jae
add
jmp
sub
xchg
movs
jmp
dec
aaa
push
mov
les
pusha
or
movs
pop
popa
fldenv
mov
mov
mov
mov
scas
test
pop
lds
ins
ror
arpl
mov
scas
add
and
add
cmp
nop
dec
push
mov
xor
dec
and
dec
mov
cmps
not
adc
mov
fs
(bad)
cmp
add
fwait
repz
(bad)
jmp
rcl
adc
xchg
repz
mov
adc
imul
inc
add
lds
mov
outs
push
cmp
mov
ret
mov
pop
xlat
xor
sub
jle
push
iret
xchg
fistp
inc
ds
xchg
ret
sbb
mov
icebp
pop
imul
inc
dec
lea
sub
mov
jmp
dec
cmp
fiadd
iret
mov
ror
cmp
xchg
jnp
push
fisttp
jp
test
shr
mov
add
movntq
out
and
pusha
add
add
cmp
xchg
out
cmc
jl
sbb
in
or
and
ins
(bad)
shl
scas
add
fnstcw
xchg
shl
mov
test
les
retfw
inc
jbe
das
adc
lods
jge
jb
cmps
xor
pop
jmp
aaa
push
daa
sbb
dec
and
pop
mov
hlt
push
sub
xchg
shl
dec
aas
xchg
stos
push
ud0
mov
ins
inc
jg
sbb
and
retf
cmpxchg
xchg
loope
cmp
(bad)
pop
popf
xchg
pop
sbb
loop
repz
ret
sub
lods
cmp
push
cmp
out
mov
cmp
test
mov
fcomp
aad
icebp
inc
mov
sti
pop
adc
out
cmp
hlt
cmp
pop
imul
mov
test
shr
mov
mov
jne
dec
add
and
in
gs
push
das
sbb
jmp
outs
mov
leave
fidivr
dec
fistp
int
popa
cmp
cld
add
pop
ret
fnstsw
mov
xor
add
test
adc
adc
test
mov
sbb
call
ss
repz
mov
repnz
inc
out
push
leave
pushf
ins
adc
lods
(bad)
cmps
arpl
in
sar
je
add
outs
ror
jmp
clc
jb
mov
fisttp
je
jne
fist
jnp
mov
add
daa
jmp
test
push
jbe
test
dec
jl
jno
mov
dec
in
int3
loopne
dec
(bad)
push
enter
adc
retf
mov
jp
hlt
mov
sub
imul
pop
loop
push
enter
arpl
leave
jmp
mov
jno
or
and
arpl
mov
aaa
in
retf
pop
aas
add
(bad)
jge
jl
sbb
xchg
sbb
mov
in
sub
add
jg
xchg
retf
xchg
jmp
mov
mov
pop
pop
xchg
daa
inc
or
loop
mov
test
ret
fs
icebp
cli
dec
jmp
jnp
in
mov
nop
dec
cmp
shl
cmps
push
into
lea
xchg
and
mov
pop
sbb
dec
fdiv
stc
movs
(bad)
fwait
or
inc
aad
or
mov
inc
lods
(bad)
mov
sbb
pushf
sub
xor
lds
or
push
or
lods
push
mov
ret
ins
sti
lahf
lea
push
push
fst
fdivp
cmp
add
sbb
cwde
fld
or
pop
sahf
push
or
sbb
or
and
rdmsr
ret
retf
sub
push
jmp
dec
test
add
movs
xchg
mov
cmp
test
dec
jb
int3
pusha
bound
dec
jg
cmp
repnz
mov
movsx
sahf
(bad)
call
cmp
mov
dec
enter
inc
aaa
retf
ja
dec
retf
fadd
mov
inc
inc
jl
popf
xor
adc
repnz
pushf
ss
push
xlat
jp
mov
cli
xchg
les
mov
mov
idiv
xchg
jnp
retf
rol
mov
mov
sahf
(bad)
and
call
push
mov
popf
sbb
dec
and
fsub
fnstsw
push
xor
retf
mov
or
mov
mov
call
das
outs
dec
mov
int3
add
loope
dec
inc
aam
mov
adc
lds
mov
add
mov
or
xchg
cs
aad
xor
add
movs
xchg
mov
iret
adc
adc
bound
xchg
imul
fisttp
sub
mov
and
das
cmps
inc
cdq
hlt
mov
jecxz
fstp
sub
sbb
inc
mov
and
mov
scas
mov
in
shr
xchg
mov
push
lahf
add
call
dec
adc
in
jl
lds
pop
add
push
addr16
mov
into
xchg
lea
in
mov
call
je
dec
cmp
add
adc
jae
inc
(bad)
(bad)
jne
adc
js
add
dec
ret
clc
stc
push
push
jae
mov
inc
aaa
cmp
pop
out
cli
cli
mov
jo
mov
mov
mov
jns
dec
inc
adc
add
and
dec
sub
imul
fcomp
ins
test
aaa
push
out
dec
mov
je
dec
mov
sub
and
(bad)
aam
add
jg
pop
test
mov
pop
lea
pop
test
jp
imul
sbb
jl
dec
push
jnp
xchg
pop
aaa
stos
aam
sub
(bad)
imul
jge
jo
mov
sbb
add
out
ss
imul
xor
mov
rcl
cmp
jg
dec
in
inc
jnp
add
test
add
xor
scas
push
mov
mov
adc
pop
fst
movs
xchg
imul
dec
stos
(bad)
stos
and
imul
ss
shr
into
adc
and
shrd
arpl
jmp
or
fmul
mov
gs
mov
(bad)
mov
movs
push
mov
aam
mov
fld
dec
sbb
pop
(bad)
add
in
mov
mov
dec
repnz
mov
out
adc
jle
cmp
mov
mov
mov
mov
push
ficomp
mov
xchg
mul
cmp
aad
mov
mov
hlt
xchg
inc
fistp
js
adc
mov
aaa
fidiv
sub
sub
or
dec
outs
sbb
(bad)
push
enter
fnstsw
jmp
and
pop
mov
cmp
push
(bad)
scas
test
and
jp
iret
sub
int
mov
pop
jmp
mov
repnz
not
(bad)
icebp
jno
inc
jp
mov
fiadd
or
add
unpckhps
pop
pop
out
xchg
jns
xor
dec
fs
aaa
sbb
adc
jnp
xchg
and
jno
out
lods
inc
xor
jmp
imul
(bad)
and
dec
out
mov
add
mov
icebp
pop
sbb
test
jnp
jmp
xchg
shr
mul
xchg
mov
adc
adc
jnp
ror
xchg
xchg
cld
cld
stos
jo
cmp
jg
jle
rcl
xor
leave
sbb
jne
push
push
scas
sti
mov
cmp
enter
cdq
shl
sbb
adc
lahf
imul
movs
pop
jbe
pop
ins
mov
jecxz
call
stc
icebp
pop
test
not
data16
imul
(bad)
call
std
dec
xor
inc
(bad)
cmc
adc
pop
std
dec
pop
pop
inc
std
in
xchg
div
enter
add
subps
ret
aam
adc
in
push
fs
test
pop
mov
inc
push
and
jmp
jg
pop
pop
mov
daa
retf
and
inc
fild
loope
ss
adc
sub
mov
in
(bad)
imul
lea
adc
retf
add
iret
lahf
(bad)
stc
pop
pop
sbb
leave
jmp
das
cmp
icebp
test
in
jo
in
xor
jp
stos
mov
int
mov
push
xchg
cmp
lods
jmp
pop
int3
push
jmp
adc
shl
imul
pop
inc
sbb
mov
test
mov
loope
retf
sub
addr16
(bad)
sar
or
out
sbb
ret
enter
int3
call
sbb
hlt
mov
dec
jmp
sbb
cmps
adc
push
sar
test
ret
cmps
mov
lods
and
ss
in
inc
adc
mov
pop
mov
pop
push
xlat
mov
lds
out
je
ss
jmp
inc
data16
(bad)
(bad)
retf
jno
(bad)
in
jge
jne
(bad)
push
xlat
sub
in
inc
push
stc
pusha
xor
(bad)
mov
call
lea
xlat
ins
(bad)
mov
jbe
shr
cwde
inc
adc
arpl
enter
pop
sbb
int3
sub
pop
outs
mov
lahf
xchg
dec
out
cmp
mov
mov
gs
jmp
ror
xchg
mov
cmc
or
dec
hlt
mul
pop
imul
leave
cmp
cmps
mov
fmul
cmps
aam
lahf
pop
xor
jae
jns
pop
mov
jnp
xchg
xchg
pop
jo
ret
mov
cmp
(bad)
dec
mov
mov
xchg
lods
or
sbb
push
add
mov
leave
sbb
in
in
lahf
neg
jmp
movs
lods
int3
retf
mov
mov
retf
fbld
shl
movs
dec
jecxz
(bad)
jp
mov
fwait
in
jmp
cmp
ror
push
sub
aaa
outs
mov
pop
fnstcw
pop
mov
xchg
xchg
int3
xor
add
and
into
mov
aam
lds
sti
cld
jecxz
jle
xchg
add
mov
fsub
push
jns
movs
cmc
pop
pop
cli
cmps
imul
pop
lock
push
js
dec
movs
fimul
cmp
mov
adc
aam
std
pop
add
mov
leave
mov
(bad)
int
mov
mov
into
jno
and
cli
imul
icebp
dec
jns
mov
ror
ret
push
inc
movq
sbb
push
sahf
jg
fstp
sub
ins
jmp
mov
inc
xchg
cmp
fldz
cmc
xor
lods
lock
sub
xor
xchg
ja
add
xor
ins
mov
jge
jns
cmp
xchg
lds
push
ja
jne
jns
sbb
pusha
cmps
dec
fmul
js
clc
test
sahf
xor
movs
jnp
test
nop
dec
xor
xchg
out
adc
sub
push
out
test
and
icebp
xchg
imul
add
test
push
mov
pop
bound
in
ud0
cmp
test
inc
mov
inc
inc
jo
mov
pop
aam
cwde
mov
mov
ins
cmp
fisttp
xchg
pop
pop
test
sar
out
shr
inc
lea
sub
ret
scas
jbe
hlt
mov
push
inc
mov
cwde
aad
hlt
sbb
hlt
cmp
mov
sbb
jo
mov
ds
jae
ja
add
inc
jae
xor
adc
add
or
xlat
call
(bad)
jge
adc
push
mov
jo
test
ret
or
popa
rol
cmp
data16
push
cld
xchg
pusha
bsf
add
push
pushf
jo
push
aad
push
les
and
aaa
inc
aaa
sub
lahf
out
bound
dec
test
scas
mov
push
or
mov
loope
jns
pop
out
xor
lahf
cmp
popa
jo
jno
and
stc
push
retf
mov
mov
ror
ins
xchg
sbb
retf
mov
jo
sbb
test
cmp
sub
test
jmp
rcr
stos
in
add
std
xchg
cmp
movs
dec
push
and
pop
cmp
cs
ja
dec
or
cmps
cwde
pop
retf
xchg
in
add
sub
push
cld
cdq
or
xchg
loopne
mov
lods
leave
sub
ja
repz
bound
dec
cwde
mov
push
das
cmp
dec
jmp
cmps
mov
jo
sbb
out
jo
stc
in
and
clc
lahf
jno
(bad)
and
cmp
loope
not
push
sar
sub
js
dec
aad
fs
sbb
lods
test
out
test
jl
add
sub
or
xor
test
jne
imul
dec
add
or
sbb
inc
ja
adc
adc
mov
cs
cmp
xchg
fidiv
fisttp
push
cwde
jno
adc
or
sbb
adc
ins
ret
or
leave
push
xchg
xlat
lahf
ja
shl
(bad)
mov
pop
cs
mov
push
call
sbb
repnz
rol
sub
call
dec
cmc
push
mov
loop
cmp
pop
out
sar
xchg
add
fisubr
mov
loope
push
ret
sti
pop
test
int
jmp
loop
aam
push
loop
test
daa
mov
pop
fimul
test
fimul
sub
and
mov
cmp
(bad)
shl
jmp
jb
ds
pop
push
cmc
xchg
push
sbb
pop
mov
ret
leave
into
out
and
aaa
mov
jecxz
ret
idiv
stos
mov
sahf
mov
fistp
inc
xor
scas
adc
jle
jmp
dec
in
ds
jmp
(bad)
(bad)
mov
mov
ja
nop
sar
test
out
in
mov
rcr
inc
jecxz
movs
pop
and
inc
mov
sub
js
out
lea
inc
jne
retf
sbb
jae
data16
mov
or
outs
out
jecxz
lock
xor
xchg
in
adc
fidiv
call
imul
jne
and
pop
lds
cmp
hlt
sahf
xchg
icebp
add
rcr
loop
adc
jecxz
pop
sub
inc
mov
mov
scas
ficom
adc
xlat
aad
scas
sbb
jne
add
push
inc
push
xlat
inc
js
push
aam
sub
in
out
shl
(bad)
adc
dec
test
retf
add
jl
mov
xchg
and
dec
jne
ret
call
mov
cmp
stc
xchg
loope
adc
aas
mov
aaa
pop
fidiv
sub
mov
mov
hlt
out
cmp
cld
les
push
out
cmps
pop
mov
cmps
jge
shl
scas
clc
jmp
inc
cmp
mov
in
add
rcl
add
lods
xor
add
mov
jae
dec
(bad)
add
mov
pop
sub
push
ja
test
or
or
sbb
pop
(bad)
hlt
lea
cmps
stos
mov
adc
in
pop
lahf
adc
mov
je
mov
jno
jae
adc
into
(bad)
jmp
sbb
inc
in
(bad)
lock
lods
mov
mov
shr
cld
fnsave
scas
push
stos
int
mov
pop
fist
pop
cmps
xchg
sub
and
push
push
dec
mov
jno
jns
and
fsubr
movs
adc
int3
push
out
cmp
scas
adc
xchg
dec
mov
shr
lock
out
rol
xchg
mov
cmp
ins
add
mov
lods
pop
stos
inc
scas
mov
push
ja
inc
add
lahf
mov
js
sub
mov
xor
stc
fisubr
pop
and
fild
scas
cmps
rcr
lock
ds
in
sahf
jge
fisttp
repz
cmp
pop
(bad)
outs
pop
lods
addr16
adc
inc
repz
add
inc
shr
dec
add
cmp
xchg
popa
mov
scas
sar
mov
(bad)
push
mov
(bad)
push
outs
xchg
or
ror
mov
cmps
fcmovbe
mov
sbb
aad
scas
repnz
dec
mov
pushf
and
sbb
(bad)
paddq
lods
sbb
xlat
pop
jmp
jns
std
pop
jl
cs
jno
std
fs
xor
mov
inc
hlt
sub
pop
stos
adc
cdq
fwait
iret
out
mov
retf
push
lods
xor
sub
sub
jmp
ins
mov
adc
pop
fwait
push
cmc
std
dec
mov
repz
sahf
test
daa
ret
dec
add
xor
mov
ja
sub
mov
in
push
mov
mov
imul
iret
inc
leave
sbb
jb
loope
sbb
repz
jne
mov
xchg
mov
xor
aad
shr
add
inc
mov
cmps
into
call
jmp
lods
push
mov
or
push
pushf
rcr
mov
add
jnp
push
(bad)
mov
pop
xor
ret
outs
js
mov
ret
and
(bad)
mov
scas
add
xor
lock
xlat
dec
push
sbb
xchg
fld
push
scas
add
scas
jle
sub
mov
sub
lds
in
lds
std
loop
pop
add
repz
jg
sbb
iret
xchg
(bad)
or
jle
loop
js
pop
push
jmp
and
pop
jo
icebp
inc
push
jno
cmps
fsubr
jne
inc
dec
xchg
xlat
add
inc
add
xchg
adc
jp
jb
adc
rol
or
xor
fidivr
pop
imul
or
rcl
lods
xchg
pop
push
fsub
paddw
mov
ins
and
rcr
fcomip
dec
pop
iret
cmp
hlt
push
(bad)
rcr
inc
gs
mov
bound
xor
jne
jmp
ror
push
cld
pop
bound
jmp
in
mov
lods
inc
in
pop
or
mov
or
fwait
adc
xchg
fisubr
xchg
adc
pop
push
xor
shl
fidivr
dec
(bad)
mov
rcl
xchg
fisub
and
jl
cmp
add
stos
jl
mov
stos
scas
pop
clc
xchg
inc
ss
mov
(bad)
xchg
sbb
out
mov
and
mov
mov
mov
mov
mov
out
repnz
push
pop
or
add
sub
cmps
dec
or
cmp
sbb
cs
es
push
les
shl
push
icebp
dec
ins
mov
(bad)
jp
cli
in
lods
(bad)
std
dec
cs
test
and
sbb
mov
push
(bad)
bound
pop
cmc
adc
jle
sub
mov
sub
movs
addr16
xor
or
pushf
mov
repnz
cmp
or
jecxz
pop
jp
pop
lods
xchg
sub
mov
mov
rol
ret
js
cli
stc
and
xor
cmp
pop
(bad)
hlt
stos
dec
iret
cmps
ins
mov
xchg
ins
mov
mov
imul
inc
mov
adc
mov
ret
dec
outs
xchg
imul
cld
mov
repz
pop
jbe
add
sbb
push
cmp
sbb
push
cmp
retf
mov
popa
add
xchg
pop
fimul
test
xor
addr16
(bad)
mov
daa
movs
mov
xchg
pop
mov
xor
inc
jo
pop
leave
not
mov
xchg
pop
test
cmps
mov
xchg
hlt
fidiv
(bad)
imul
int3
scas
in
inc
sar
fistp
jbe
cmp
jo
test
fsubp
mov
pop
rcl
arpl
test
repz
xor
and
dec
(bad)
fstp
pusha
int3
into
call
pop
xadd
ins
out
jns
cmp
and
pop
cmp
mov
jne
or
dec
loop
xor
sbb
adc
test
in
pop
and
fild
push
fwait
mov
jl
cmp
and
mov
push
or
sbb
dec
in
out
test
sbb
lods
imul
mov
mov
aaa
fsub
sbb
arpl
dec
rol
mov
mov
jmp
or
jecxz
retf
fstp
sub
fcom
adc
mov
xlat
(bad)
imul
fcmovu
das
fiadd
imul
ret
das
dec
lods
and
dec
je
dec
mov
sar
jp
jb
sub
add
adc
push
addr16
imul
inc
mov
pusha
sub
(bad)
scas
mov
mov
xchg
mov
jg
pop
push
add
push
cmp
movs
add
inc
xlat
dec
popa
add
cmp
adc
push
int3
mov
pop
jge
sti
jg
adc
es
call
add
xor
mov
dec
dec
je
mov
sub
rol
loop
mov
fsub
sub
inc
std
sbb
cs
mov
out
pop
push
or
fld
fucom
adc
sub
inc
mov
cmp
and
cmps
out
mov
pop
mov
inc
jae
or
jmp
fidivr
xor
dec
fdiv
add
je
pop
call
cmp
stc
gs
popa
and
mov
xor
push
mov
lds
ins
cmps
jae
(bad)
mov
mov
bswap
test
adc
xacquire
lahf
(bad)
cmps
adc
lds
sub
shl
shr
daa
sbb
pop
rcl
dec
pop
or
out
pop
inc
or
xchg
push
out
(bad)
into
sahf
cmp
jl
sahf
xor
sub
adc
das
sub
out
push
(bad)
rcl
stos
(bad)
test
xor
xor
jb
ffree
cli
dec
add
push
mov
idiv
and
imul
add
cmp
ret
sbb
mov
dec
dec
cmp
frstor
pop
aad
scas
outs
or
pop
or
mov
adc
mov
or
loope
popf
stos
mov
add
sbb
sub
jb
test
mov
and
rcr
sbb
jo
leave
loop
enter
xor
aam
sar
bound
sub
fmul
aam
test
jmp
shl
loope
mov
(bad)
adc
not
jmp
or
push
cwde
jne
add
icebp
call
push
push
or
(bad)
out
mov
jp
not
pop
or
test
inc
sbb
repnz
sub
mov
test
or
shr
rcl
mov
aam
in
push
pushf
xor
push
test
popa
and
mov
aaa
add
ins
push
push
adc
xchg
aad
jb
out
dec
sbb
dec
retf
ficom
ins
mov
je
sub
and
fsub
add
and
scas
sbb
test
fs
repnz
jle
mov
scas
mov
lods
and
mov
pop
cmc
mov
dec
pop
dec
shr
or
rol
addr16
dec
sub
cmp
cli
mov
pop
hlt
pop
lods
xchg
(bad)
adc
jmp
xor
call
out
or
mov
call
add
imul
or
sar
inc
loopne
fs
fistp
cwde
sbb
mov
lods
call
scas
dec
adc
push
fdivr
push
test
and
stos
popa
cmp
inc
aad
jmp
or
push
arpl
mov
cmp
out
xor
xor
pop
jmp
mov
retf
out
sbb
out
aas
fiadd
xor
push
and
inc
ss
mov
and
jecxz
psubq
push
inc
mov
fadd
pop
dec
pushf
push
jno
inc
sahf
xchg
sub
jno
dec
cmp
cli
push
fcmove
ja
mov
clc
sar
mov
and
movs
cmp
cwde
xor
dec
out
iret
fist
cmp
pop
clc
mov
push
retf
sbb
jbe
pop
or
pop
mov
jbe
mov
push
xor
stos
test
lock
xchg
mov
fistp
imul
xor
inc
pop
mov
xchg
in
in
int3
mov
jmp
xor
out
xchg
mov
pop
rcr
dec
(bad)
sar
imul
or
pushf
dec
xchg
pop
push
or
shr
loope
das
popa
movs
pop
ret
scas
cs
scas
out
jae
js
sub
push
cmp
jg
in
arpl
lods
sti
sbb
and
not
mov
dec
stos
lods
mov
sbb
aas
xchg
inc
mov
mov
in
and
outs
mov
push
ja
daa
sahf
rcl
(bad)
xchg
movs
and
stc
xchg
rcr
pop
clc
pop
xchg
les
xchg
push
lods
cli
inc
stos
fwait
cmp
rcl
push
jb
aam
jmp
jo
mov
cmp
ret
dec
pusha
or
push
jge
pop
lahf
lods
ds
jae
push
and
mov
fs
addr16
je
jmp
iret
lock
retf
sub
xor
push
xchg
std
ins
mov
pop
mov
sub
shl
xlat
int3
sub
les
(bad)
faddp
les
sub
pop
mul
jle
fdivr
mov
clc
inc
aam
js
aad
addr16
loop
pop
pop
jns
add
nop
out
jnp
mov
mov
ds
inc
arpl
jmp
fidivr
(bad)
or
cmps
in
cmps
add
pop
fild
cmp
mov
ret
xchg
in
(bad)
jmp
gs
adc
cmp
sub
and
mov
pop
mov
cmp
adc
mov
pop
retf
adc
cmps
pop
pop
cwde
inc
popa
sbb
stc
aam
pop
mov
xlat
sbb
aaa
pop
pusha
ss
push
add
xor
and
imul
imul
scas
cmp
mov
ret
aam
cmp
movs
or
adc
pop
mov
addr16
dec
xor
cmp
loope
es
sbb
stos
sub
ret
add
call
mov
add
test
outs
mov
rcr
je
sub
sti
adc
retf
xchg
ja
cdq
popa
sub
add
loopne
loopne
push
mov
out
fist
add
jl
dec
cmp
or
fist
and
cdq
xor
mov
xchg
adc
push
mov
sbb
or
cmc
push
inc
dec
int
mov
mov
xchg
adc
jge
jae
imul
jnp
pop
sbb
inc
sub
nop
xor
cmp
in
mov
cmp
xchg
fcmovne
inc
xor
sub
mov
pop
pop
iret
rol
xchg
mov
lods
inc
pusha
test
loope
scas
cmc
lock
mov
xchg
and
pop
je
jnp
xor
scas
stos
jle
push
push
jns
and
(bad)
jne
into
pop
inc
cs
cdq
push
push
fist
jae
in
aaa
xlat
mov
adc
into
hlt
sbb
(bad)
ror
xchg
mov
inc
mov
fwait
lock
jns
push
loopne
jmp
mul
xchg
mov
mov
mov
mov
sbb
js
int3
stos
sbb
cmp
test
or
(bad)
push
push
popf
fidivr
ins
dec
sbb
es
or
or
cmps
inc
fs
mov
aad
cmp
xchg
pusha
test
jno
jl
popf
bound
push
xchg
jne
jp
mov
cmp
fnstenv
mov
push
adc
jmp
scas
push
nop
xchg
daa
fsin
mov
scas
sub
pop
hlt
ins
stos
hlt
(bad)
leave
call
and
inc
ret
nop
mul
mov
and
dec
cmp
loop
mov
xchg
cmp
push
arpl
jmp
cmp
mov
fadd
add
popf
std
sub
aaa
xor
adc
push
xchg
pop
out
adc
push
jnp
arpl
sub
add
mov
pop
cmps
dec
aas
sbb
cmp
call
dec
push
sar
cmp
push
xor
add
(bad)
sub
and
lahf
jmp
hlt
(bad)
mov
loope
rol
test
sbb
int
sbb
jae
lock
or
popa
imul
popa
sahf
es
adc
adc
call
mov
sub
or
(bad)
fs
int3
lods
xchg
push
jecxz
push
fidivr
enter
xor
mov
mov
mov
push
rcl
sti
pop
add
(bad)
movs
jle
test
pop
xchg
push
int
ins
mov
jne
jmp
or
sbb
or
aam
cwde
repz
(bad)
xchg
mov
mov
dec
out
pop
jmp
cmp
sbb
jl
aad
jle
mov
push
inc
js
jmp
xchg
xor
push
mov
cmp
test
mov
jl
repnz
sub
repnz
cmp
jbe
movs
dec
jb
xchg
jo
sbb
aas
jecxz
push
cmp
ss
dec
jns
frstor
xchg
add
je
fucomip
dec
out
stos
clc
adc
test
sub
sbb
inc
dec
dec
rcl
sbb
jmp
push
(bad)
leave
dec
mul
ss
push
data16
push
test
inc
adc
inc
sub
mov
cdq
push
lods
outs
jbe
je
inc
aas
sti
mov
hlt
loop
add
sbb
aad
push
imul
test
jle
inc
out
adc
jg
or
out
pop
stos
test
xchg
aam
inc
loop
out
into
rol
or
shr
int
lea
stos
(bad)
sub
imul
add
add
(bad)
adc
xlat
or
(bad)
mov
outs
jns
outs
jno
mov
add
jp
mov
jb
adc
test
add
mov
ins
pop
add
jg
dec
movs
jecxz
ins
imul
jnp
add
push
cmp
inc
inc
pusha
jne
stos
and
lds
and
cvttps2pi
aam
ss
push
push
(bad)
fisub
out
jb
mov
rol
or
popa
fadd
aad
loopne
sbb
pop
sbb
outs
xchg
mov
jae
or
fwait
jmp
inc
mov
pop
(bad)
lahf
js
(bad)
xor
ret
lods
pop
mov
dec
mov
sbb
push
inc
clc
outs
lea
adc
jne
movs
fsub
and
adc
jmp
inc
cs
xchg
not
cmc
push
mov
push
push
aad
inc
push
mov
lahf
ret
dec
fiadd
sar
push
imul
aaa
in
push
and
add
mov
jno
aam
movs
dec
rcr
xchg
ret
xor
sbb
test
inc
fnsave
arpl
or
not
mov
das
adc
test
mov
adc
test
xchg
les
add
(bad)
lahf
inc
das
jns
test
add
rol
(bad)
fadd
imul
outs
mov
mov
push
mov
lods
xlat
arpl
push
call
es
movs
(bad)
sbb
add
and
test
xor
jg
mov
sub
stos
add
push
scas
and
aaa
ret
sub
sub
cli
mov
push
pusha
jmp
repnz
sbb
push
xor
sbb
mov
lods
adc
in
add
test
jnp
xor
movs
jmp
cmp
sub
pop
xor
icebp
and
(bad)
(bad)
movs
sti
dec
mov
adc
das
pop
push
test
fldcw
mov
and
lds
addr16
pop
out
pop
xor
xor
clc
sti
mov
test
jo
xchg
rol
dec
pop
ss
(bad)
je
sbb
scas
movsx
loopne
add
jnp
fadd
hlt
lods
and
clc
jns
ficom
outs
cli
ss
test
aaa
cmps
scas
pop
jecxz
adc
mov
clc
push
mov
addr16
push
(bad)
and
mov
pop
mov
(bad)
xchg
sbb
addr16
jp
push
xchg
xchg
mov
cmc
lods
xor
xchg
pop
scas
jno
jmp
mov
sbb
shr
xchg
sub
rcl
jns
sbb
rcl
cdq
in
pop
iret
jle
xchg
es
push
popf
inc
jnp
inc
add
mov
retf
test
mov
dec
clc
sbb
adc
fisttp
add
icebp
(bad)
mov
push
out
jno
sbb
(bad)
jns
mov
dec
add
addr16
add
dec
and
bound
push
lahf
cmp
xor
push
fisttp
dec
lds
and
sub
push
mov
inc
clc
shl
mov
pop
mov
xchg
add
mov
jle
imul
cli
and
cmp
lock
xchg
jne
mov
pop
jo
or
enter
mov
test
jnp
aad
fbld
mov
add
fwait
cmp
mov
into
add
inc
outs
xchg
or
das
daa
les
(bad)
pusha
ins
ror
scas
in
pushf
pop
scas
xchg
cmps
push
and
sub
lds
or
jge
xchg
das
std
jae
sbb
adc
pop
mov
mov
jbe
add
jg
(bad)
rcl
push
fucomp
inc
jmp
jb
das
dec
mov
sbb
add
jl
adc
mov
nop
sub
jo
(bad)
lods
and
mov
dec
test
jmp
pop
lods
dec
pop
sbb
and
push
push
int
cli
xchg
outs
dec
sbb
xchg
dec
inc
fstp
cmp
cmp
pop
stc
inc
lods
xchg
cs
sbb
push
dec
xchg
push
mov
and
push
cld
iret
in
mov
cmp
cdq
aaa
pusha
push
or
cmps
aas
ret
pop
(bad)
scas
(bad)
aas
rcl
jbe
lds
push
scas
rcl
xchg
and
cmovo
jmp
repz
jmp
cmp
pop
xlat
rcr
dec
lock
test
enter
inc
inc
adc
jae
movs
(bad)
mov
xchg
pop
mov
fcomp
mov
and
dec
push
or
dec
sahf
loope
push
retf
pop
addr16
or
mov
movs
(bad)
(bad)
imul
jge
cmp
out
mov
mov
add
xchg
push
pop
mov
mov
xchg
repnz
int
cmp
imul
movs
std
jp
xlat
int
pop
pop
jmp
stos
std
sbb
add
das
(bad)
push
(bad)
mov
dec
jns
mov
into
fwait
data16
push
aaa
xchg
mov
add
or
add
lock
xor
xchg
scas
in
imul
ins
or
dec
call
int3
retf
adc
shl
je
and
inc
push
leave
imul
ror
stc
and
sbb
and
and
fs
adc
sbb
add
sahf
ds
pop
call
mov
arpl
repnz
sub
xor
add
mov
sbb
shr
dec
fs
ins
test
loopne
cwde
inc
cmp
out
repnz
arpl
jnp
push
int
mov
cli
lds
ret
mov
ins
xchg
stc
loopne
adc
mov
push
fwait
enter
sbb
arpl
fisttp
mov
fmulp
mov
or
jo
pop
rcl
ins
mov
lahf
push
sbb
pop
into
aam
push
mov
pop
jecxz
push
clc
mov
setno
test
imul
lods
mov
outs
jbe
ss
cmp
mov
daa
inc
push
push
jbe
cmp
bound
inc
es
adc
arpl
test
mov
leave
inc
pop
arpl
add
or
mov
xor
in
clc
aam
fcmovu
cld
jnp
inc
loope
fwait
ja
push
in
div
mov
imul
xchg
mov
xchg
mov
add
or
sbb
cmps
mul
in
push
inc
jge
adc
pusha
dec
push
sbb
mov
xchg
fdiv
adc
push
rcr
cmp
sbb
mov
ss
imul
mov
xor
mov
inc
mov
dec
in
imul
call
pop
mov
fild
cmps
stc
into
inc
(bad)
push
pop
xor
push
pop
mov
jb
mov
mov
cmps
dec
or
pusha
popa
sub
ror
push
lock
adc
(bad)
movs
mov
cmp
or
fwait
mov
jmp
leave
dec
lds
leave
fidivr
sbb
aam
call
fst
dec
add
mov
mov
push
adc
sahf
mov
std
xchg
push
dec
jl
mov
mov
enter
ds
sahf
popa
mov
push
enter
add
adc
sti
or
jno
not
jb
ficom
inc
ror
frstor
fwait
cmps
xlat
es
(bad)
into
dec
or
xlat
adc
mov
mov
cs
jp
sti
jg
pop
aad
call
sbb
push
push
stos
lods
mov
push
aas
push
cdq
lahf
fcomp
stc
sbb
xor
lock
xchg
scas
fstp
cdq
push
inc
aas
lahf
add
addr16
fst
loop
fs
jle
and
jbe
cwde
xor
outs
xchg
jle
dec
mov
lds
jmp
mov
cmp
inc
sti
or
shl
xor
or
mov
test
rcr
movs
and
imul
dec
mov
test
fucomp
stos
mov
inc
jecxz
sbb
ds
(bad)
inc
push
cwde
leave
repz
mov
or
test
das
sub
xor
stc
jge
jbe
in
lea
xor
push
push
mov
or
jge
js
not
sub
mov
adc
xchg
sub
add
icebp
jae
inc
hlt
jno
dec
ins
out
rcr
test
xchg
or
(bad)
adc
mov
cmp
xchg
cmp
xor
aaa
imul
or
or
push
pop
outs
mov
jnp
cld
out
xchg
leave
mov
push
std
sbb
shl
fidiv
or
frstor
or
js
cmp
mov
mov
test
jno
loop
mov
aam
push
xor
out
add
mov
imul
popa
dec
imul
mov
out
add
pop
mov
adc
xchg
xchg
and
ins
fimul
or
and
rcl
(bad)
(bad)
(bad)
jg
mov
push
lods
cmp
sbb
retf
shl
xor
cmp
and
mov
push
and
sub
add
cmp
fs
jecxz
fnstenv
and
inc
and
scas
test
dec
cmps
inc
dec
sub
mov
xchg
mov
into
imul
js
sbb
mov
popa
sub
in
jmp
lds
mov
lds
mov
sar
(bad)
sub
sub
dec
mov
adc
xchg
add
mov
(bad)
rcl
gs
xor
xor
(bad)
retf
(bad)
pushf
pavgb
retf
aad
push
xchg
(bad)
jg
ins
and
sub
mov
cld
mov
cmps
push
inc
les
sub
cwde
push
imul
icebp
sub
in
push
js
and
inc
gs
jge
and
fdivr
or
fisub
mov
sbb
stc
aad
test
cmp
sar
mov
mov
(bad)
(bad)
cmp
cmps
in
xchg
jecxz
mov
add
es
dec
cmp
lods
and
cld
arpl
ds
rcr
mov
xchg
je
(bad)
call
(bad)
lock
inc
mov
inc
push
mov
jg
xor
sub
and
jecxz
imul
jp
mov
mov
inc
and
cmp
mov
pusha
xchg
mov
push
cld
std
or
lahf
gs
dec
xor
stos
hlt
imul
or
std
fcmovnb
and
dec
xchg
sar
ja
push
push
push
aad
test
popa
inc
test
xor
push
loope
xor
icebp
inc
inc
mov
addr16
xchg
xchg
je
dec
daa
inc
sbb
arpl
xor
pusha
pop
xor
retf
test
dec
les
add
cmp
ins
push
loopne
in
jb
ror
jo
and
call
(bad)
push
jle
xor
mov
mov
ror
mov
stos
pop
mov
xor
data16
enter
inc
fistp
cmp
mov
ffree
or
rol
dec
and
ja
jae
or
rcl
test
dec
popa
sbb
jnp
push
mov
cmp
dec
stos
int
cmp
(bad)
adc
call
jne
int
(bad)
mov
or
jp
cli
ins
push
or
stc
pop
mov
cdq
xchg
icebp
out
aaa
test
jl
js
in
pop
add
pop
stc
dec
jg
mov
stos
jge
mov
fdivr
outs
stc
sbb
jb
pop
ss
out
mov
dec
sbb
arpl
xchg
push
cwde
cld
sar
mov
adc
sub
es
ins
ja
mov
out
fild
stos
cmc
imul
mov
jle
or
mov
adc
(bad)
out
cmp
fcomi
sub
ss
push
push
ror
mov
fistp
mov
fisttp
dec
(bad)
int
enter
dec
test
(bad)
inc
and
ss
aaa
sbb
inc
fbld
xchg
pop
aad
ins
clc
sbb
pop
xor
inc
fst
dec
in
sbb
leave
aaa
xchg
mov
outs
loop
test
jmp
loope
(bad)
mov
jmp
sub
mov
or
int
pop
sub
xchg
ret
out
imul
popa
cmp
adc
sbb
int
and
cmc
inc
pusha
mov
jne
add
fidiv
push
popf
inc
es
cli
xor
repz
lods
fsubr
jmp
frstor
mov
jmp
sub
inc
cli
cwde
stos
cmp
sub
add
fwait
mov
pusha
add
add
movs
cmp
xchg
dec
or
int3
xlat
mov
and
dec
add
sub
sahf
and
lods
mov
dec
and
push
test
or
lea
add
xchg
stc
daa
mov
mov
mov
dec
xchg
jmp
in
popa
adc
add
sbb
cld
mov
mov
jecxz
inc
jmp
xchg
sti
pop
mov
mov
test
dec
out
fcmovb
sbb
bound
cmc
adc
mov
push
add
mov
js
lods
mov
cwde
fidivr
push
mov
push
mov
pop
jno
mov
ds
dec
jb
(bad)
xchg
push
lock
xchg
xor
pop
sar
(bad)
sbb
outs
cdq
inc
jbe
lock
xchg
inc
imul
inc
inc
inc
ds
addr16
out
test
jne
movs
xor
xchg
cwde
popa
jo
jnp
jns
and
sub
aam
push
or
sub
cmp
clc
rcr
push
fcmovnu
fdivrp
cmp
or
sbb
hlt
test
lods
imul
cmp
fsub
sar
arpl
jmp
add
and
cs
mov
and
sub
rcr
add
jo
xchg
adc
popf
jo
and
dec
sub
(bad)
mov
pop
pop
push
(bad)
ret
and
inc
cld
or
inc
cmc
mov
sbb
imul
or
mov
test
sbb
aam
nop
sub
cmps
push
push
imul
add
pop
push
stc
cmp
jae
pushf
dec
cmp
sub
dec
aas
inc
shr
lods
dec
cmc
mov
jnp
add
retw
add
jns
gs
or
push
bts
icebp
adc
data16
in
and
adc
jno
jecxz
cdq
sub
cmp
cmp
inc
or
and
inc
pop
or
push
scas
push
hlt
jno
jle
cld
jmp
out
xor
in
xor
xor
sar
sub
add
lds
pop
ret
or
sub
push
fist
cmc
cdq
jg
scas
mov
and
in
adc
js
test
call
xchg
nop
jmp
sbb
pop
cld
mov
mov
jecxz
inc
inc
mov
xchg
adc
add
fstp
and
test
jmp
adc
pop
or
(bad)
popa
add
mov
imul
into
sbb
mov
(bad)
xlat
adc
stc
inc
es
in
fmul
pop
lahf
cmp
sub
ret
xchg
out
xlat
retf
xor
(bad)
push
mov
mov
inc
outs
push
pop
and
and
mov
mov
pop
movs
push
push
idiv
daa
ret
sbb
addr16
mov
adc
outs
mov
setge
and
lahf
fstp
push
xor
call
and
or
sbb
jmp
lock
sbb
xor
adc
xor
jg
shr
jae
cdq
inc
sub
mov
cmp
ficom
fstp
xchg
sti
movs
pop
popf
out
inc
cld
outs
dec
sub
mov
pop
mov
mov
mov
(bad)
xchg
jecxz
fsubr
pop
add
lods
push
xchg
jb
sar
push
xchg
cdq
xchg
mov
xchg
cmps
mov
sub
push
or
jns
mov
lahf
or
xor
push
ret
xor
push
dec
adc
outs
test
inc
aaa
cmps
inc
xchg
ins
shld
stos
push
retf
sar
sub
sbb
cwde
inc
retf
jb
mov
cmc
xchg
dec
loope
mov
clc
mov
dec
iret
daa
(bad)
jmp
ds
xchg
test
retf
clc
xchg
mov
in
pushf
ffreep
inc
ja
mov
scas
ss
or
jo
in
minps
imul
push
xchg
sub
aad
sahf
jnp
dec
iret
test
pop
test
ins
jmp
outs
ins
fcom
fisubr
inc
xchg
mov
jl
add
inc
jp
inc
pop
lods
adc
mov
pop
call
mov
cmp
mov
add
jl
and
dec
mov
pop
dec
out
mov
sub
or
xor
pop
fisubr
mov
jge
mov
pop
iret
cld
pop
dec
mov
push
imul
mov
sub
sti
xchg
leave
shl
push
mov
push
xor
(bad)
mov
jb
mov
in
cs
fdivr
iret
sub
aas
iret
stc
ror
mov
bound
rol
xchg
cmps
adc
in
int
imul
loopne
into
clc
inc
mov
mov
inc
or
(bad)
push
or
inc
neg
icebp
lods
lods
or
xchg
push
mov
jp
js
inc
xchg
pop
ja
scas
add
cmp
fist
ds
ss
outs
jno
mov
push
test
data16
ret
adc
cmp
dec
mov
sbb
arpl
sbb
icebp
cmp
xchg
movs
movs
ficomp
add
aam
mov
js
mov
mov
movs
add
push
jb
ret
inc
(bad)
(bad)
adc
jb
jp
or
(bad)
arpl
adc
(bad)
sub
ins
pop
mov
xchg
xchg
sub
add
sub
stc
push
ins
fld
popf
jne
imul
mov
test
fdiv
in
add
jl
push
jno
ins
dec
xchg
mov
icebp
fimul
mov
push
mov
mov
mov
pop
hlt
enter
dec
icebp
jmp
nop
test
mov
aas
sub
add
inc
mov
adc
in
xor
sbb
adc
into
popa
xchg
mov
adc
call
sbb
jge
jns
push
adc
lods
xchg
int
mov
mov
test
cmc
std
push
popa
pop
mov
(bad)
sar
mov
dec
scas
jbe
jno
dec
or
inc
frstor
jmp
sbb
sbb
mov
mov
and
nop
inc
sub
mov
fidivr
add
dec
pop
pop
(bad)
xlat
pop
push
mov
shr
mov
sub
fidiv
repnz
popf
out
rol
sbb
mov
iret
fld
xor
je
fidiv
call
and
mov
fdivr
into
stos
push
arpl
xor
out
lds
sub
or
rcl
xchg
mov
test
(bad)
lock
out
push
or
neg
push
fwait
or
jne
jo
retf
xchg
sar
loope
clc
ins
or
cmps
les
in
rcl
loop
lock
popf
gs
push
mov
shl
arpl
test
sub
mov
adc
pop
fcmove
outs
cmp
je
jle
or
jne
fxch
add
bound
jmp
hlt
pop
mov
stos
mov
push
dec
or
(bad)
mov
addr16
push
shr
pop
or
les
pusha
add
mov
or
cwde
test
push
es
push
ret
sub
loopne
gs
leave
in
popf
push
add
jbe
push
jns
in
jmp
cmp
popa
mov
fs
out
popa
test
cs
add
dec
xchg
pop
dec
sub
mov
leave
movs
xchg
(bad)
push
mov
push
cmps
(bad)
idiv
or
sub
push
nop
neg
je
shl
les
and
cmps
xor
nop
jle
dec
mov
xor
mov
inc
cmps
int3
mov
mov
or
pop
or
pop
mov
sbb
hlt
and
pushf
sbb
push
push
mov
adc
pop
push
ja
or
mov
cwde
ins
cmp
inc
mov
jbe
dec
jo
mov
imul
adc
or
jp
cli
cmps
pusha
push
popa
mov
xchg
add
xchg
and
cmps
gs
fistp
add
dec
mov
js
jne
in
xor
imul
or
mov
inc
xchg
arpl
sbb
dec
and
cld
push
aam
ret
adc
les
mov
sbb
mov
scas
pusha
aad
inc
je
stc
pop
cwde
test
(bad)
fdiv
and
fcom
jae
mov
mov
push
popa
dec
pmaxub
or
sbb
(bad)
sub
sbb
loope
hlt
inc
pop
mov
xor
mov
dec
or
(bad)
mov
or
adc
pop
xchg
in
cmps
test
cmp
addr16
div
es
cmp
cli
ds
aas
and
fldenv
or
dec
in
and
mov
fcmovu
pop
daa
les
les
sahf
call
jne
out
cmp
test
cmc
movs
mov
xor
xor
lahf
add
push
gs
repz
sub
(bad)
mov
mov
add
loop
mov
in
adc
jne
jp
fnstenv
imul
dec
push
leave
xor
add
dec
mov
scas
add
jmp
cwde
outs
cmp
cs
data16
cmp
cmp
imul
mov
xchg
lahf
fcomp
adc
imul
ret
cwde
je
adc
push
or
jmp
clc
shl
js
mov
xchg
in
or
jns
jp
mov
mov
dec
mov
mov
cmp
rcr
pop
pop
mov
jg
aam
adc
ret
js
add
or
and
jne
sbb
xchg
push
xchg
jg
jmp
sub
hlt
hlt
dec
stos
aad
shl
loop
add
or
jge
test
xchg
cmp
xor
xor
pop
hlt
(bad)
push
(bad)
stos
xchg
dec
mov
or
js
cmp
push
or
inc
xor
(bad)
sbb
imul
xchg
sub
scas
inc
dec
ss
sbb
rol
lods
ins
pushf
sub
test
xor
mul
jno
cs
mov
pop
and
sub
repnz
cli
rcr
adc
or
aas
shl
add
(bad)
int3
jmp
call
adc
scas
repz
pop
cdq
int
mov
jg
ret
movs
cld
xchg
call
push
adc
xchg
pop
or
jo
aaa
scas
jmp
ins
jmp
xchg
cmc
fiadd
push
div
ins
cmp
imul
mov
popf
or
popa
ja
xlat
pop
xchg
out
cmc
jmp
xor
data16
dec
sub
in
retf
inc
mov
push
push
push
mov
rcr
shl
and
dec
sbb
idiv
out
clc
rcl
and
xchg
stos
movs
cmc
jns
call
imul
aas
pop
(bad)
push
mov
fild
push
sub
push
loopne
mov
push
scas
pop
cmp
lock
xchg
mov
xor
pop
cmp
fwait
sbb
(bad)
mov
xchg
mov
dec
(bad)
fsubr
jecxz
dec
push
out
outs
loope
loopne
pop
addr16
pop
mov
mov
pop
test
adc
test
aad
es
cmp
mov
jbe
int
inc
inc
arpl
(bad)
jl
mov
and
in
mov
xchg
rcl
test
jb
aas
cli
jne
add
sub
push
outs
retf
or
daa
or
push
stos
stc
mov
mov
je
mov
fsub
int3
call
out
rcl
mov
loopne
(bad)
cmc
cmp
jp
dec
pop
inc
sbb
jmp
mov
xchg
pop
out
dec
mov
mov
sar
lods
cmc
mov
mov
inc
push
xchg
and
loopne
push
and
test
cmp
fimul
test
mov
(bad)
jae
or
and
jb
and
adc
(bad)
ss
adc
int
stc
sub
std
repnz
ins
mov
jg
push
mov
aam
add
shl
cmp
sbb
rol
pop
or
push
fadd
push
and
(bad)
xchg
sahf
jnp
mov
add
aaa
pop
aas
sti
mov
and
inc
loopne
xchg
cmp
pop
sar
(bad)
(bad)
or
(bad)
sub
ss
xchg
aad
enter
xchg
test
xor
into
add
mov
ins
inc
fldcw
jp
jmp
imul
xchg
in
stc
mov
mov
data16
and
(bad)
jp
adc
xchg
ins
or
inc
pop
fcomp
les
icebp
adc
inc
ss
add
mov
lods
out
xor
(bad)
call
inc
outs
fnsave
push
test
ds
cmps
stos
xor
loope
stos
jp
and
movs
(bad)
clc
xchg
sti
and
(bad)
xlat
lds
and
bound
ins
xchg
imul
call
not
mov
int3
leave
test
ror
xor
outs
add
mov
retf
and
outs
aas
popf
lea
mov
in
not
stos
push
cmp
push
xor
(bad)
enter
sbb
mov
jmp
repz
xchg
daa
adc
loop
lock
shl
shl
add
mov
xchg
jmp
sbb
loopne
mov
push
push
repnz
pop
jge
pop
jle
mov
xor
jp
pop
test
adc
int
push
jo
adc
fadd
fidiv
pushf
fisttp
xchg
jne
adc
leave
pop
add
xchg
pop
(bad)
pop
sub
cmp
daa
dec
jmp
out
dec
in
jmp
(bad)
pop
sti
ret
leave
out
push
cmc
scas
mov
ins
movq
scas
shl
xor
xchg
loope
xchg
call
(bad)
out
xchg
jmp
scas
ficomp
inc
das
jl
dec
and
jecxz
test
lea
and
arpl
xchg
add
imul
sbb
xchg
xchg
xor
fdiv
mov
or
int3
sub
pusha
jae
mov
inc
lds
mov
push
jnp
ja
outs
(bad)
aas
sbb
xor
xchg
jb
loop
push
sub
mov
pop
not
ja
inc
mov
sub
aad
(bad)
xchg
cli
dec
inc
loopne
movs
repz
les
(bad)
out
add
xlat
fwait
aam
int
leave
cmp
je
out
pop
jge
icebp
inc
mov
dec
cmp
scas
or
stos
fadd
out
jae
jg
out
in
lods
add
jecxz
nop
mov
clc
and
les
mov
mov
fwait
pop
fnstenv
stos
jp
adc
inc
repz
(bad)
in
pop
mul
icebp
pop
pop
jecxz
dec
jp
pop
ret
push
popf
out
loope
jmp
mov
cli
push
xchg
mov
and
push
and
es
and
out
repz
inc
jmp
pop
call
enter
lods
fadd
imul
add
stc
push
(bad)
mov
mov
inc
cmp
adc
mov
add
mov
call
test
or
fnstcw
or
xchg
outs
stos
adc
icebp
call
mov
cdq
mov
dec
add
les
adc
sbb
les
aad
cmps
add
outs
pushf
jle
and
mov
cwde
add
repnz
sahf
add
jle
stos
lea
add
cld
and
(bad)
fisubr
pusha
test
stos
cdq
test
call
in
adc
or
sub
mov
ret
add
in
mov
cld
test
neg
cmps
fiadd
retf
out
xor
out
push
pop
rcl
add
pop
ins
xor
fcom
inc
xor
adc
xchg
cs
inc
dec
aaa
mov
fidiv
jmp
jne
lock
sbb
outs
stos
push
mov
cmp
jmp
arpl
jne
stos
xchg
inc
and
cmp
push
sub
aad
dec
mov
pop
data16
cmp
icebp
test
cmps
bound
adc
mov
(bad)
sub
mov
stos
ret
jno
(bad)
fcomp
adc
je
and
(bad)
push
mov
inc
and
enter
push
jge
and
jnp
sub
sbb
pinsrw
or
shl
cwde
sahf
cmps
fs
xchg
pop
es
inc
push
data16
cmp
inc
xlat
inc
data16
xchg
mov
jecxz
test
mov
aam
mov
in
adc
adc
outs
imul
into
and
sub
cmps
pavgb
(bad)
imul
adc
and
mov
cmp
mov
mov
jp
mov
inc
cmp
lahf
add
scas
mov
(bad)
xchg
mov
dec
in
enter
sbb
or
jbe
leave
sbb
dec
jae
and
jne
fwait
fs
mov
dec
test
push
or
inc
shl
lahf
int
push
jnp
xchg
mov
imul
imul
int3
jae
fwait
gs
das
push
sti
retf
and
pop
and
cmp
les
xchg
mov
lods
push
ss
mov
outs
icebp
addr16
mov
mov
ror
adc
fisub
xor
push
movs
ficomp
add
fadd
je
iret
bound
add
in
dec
xchg
mov
sahf
cwde
call
out
sub
mov
int3
mov
mov
into
jb
cmc
push
call
out
outs
pop
jae
in
push
rol
scas
scas
add
test
popf
inc
and
aas
psubsb
loopne
pop
cmp
push
clc
push
jl
pop
ds
or
stc
mov
cmp
jbe
dec
xor
ficom
popa
dec
out
pop
and
mov
mov
jg
aas
fmul
mov
sti
sbb
movs
or
fisub
sahf
ror
xchg
test
test
fnstenv
out
gs
mov
hlt
iret
dec
add
jp
add
pop
sub
inc
(bad)
(bad)
mov
cmovge
ds
outs
mov
das
push
push
je
push
retf
push
mov
xor
into
pop
(bad)
xor
mov
out
jp
popf
or
outs
test
jne
push
add
(bad)
cmp
sbb
sub
pop
xchg
xor
test
push
add
fwait
into
ja
or
fdivr
aam
dec
inc
int
dec
ror
neg
adc
xchg
push
push
das
data16
jnp
push
retw
es
fwait
xor
call
sub
fstp
cmps
out
(bad)
shl
add
add
retf
call
fs
dec
cmc
stc
push
rcr
sbb
or
mov
push
mov
ins
in
mov
lahf
cmp
test
push
(bad)
push
daa
punpcklbw
xor
push
data16
cld
cmps
mov
mov
mov
neg
loop
aam
cmp
mov
mov
out
adc
test
loop
mov
adc
fnop
ins
lods
daa
and
push
cmp
call
push
hlt
mov
push
jl
aaa
invd
cmc
ror
dec
cmps
loope
test
push
je
inc
imul
std
mov
adc
dec
xchg
dec
shl
(bad)
cmp
ss
xchg
clc
sbb
jne
sbb
mov
xchg
lahf
ret
ins
sub
(bad)
fimul
cmp
sub
push
mov
and
xor
gs
xchg
lahf
jmp
xor
ds
xchg
pop
inc
jns
mov
lock
int
mov
add
int
mov
sbb
xor
inc
xchg
cdq
mov
test
xor
xchg
mov
movs
ret
aam
cwde
aam
dec
pop
add
ret
pop
dec
sbb
addr16
les
(bad)
cmp
repnz
xchg
pop
rep
shl
mov
mov
jmp
mov
adc
daa
cmc
jmp
push
xor
or
aam
sar
mov
xchg
push
jb
xor
add
cmp
sbb
shl
fstp
and
mov
fwait
arpl
int
jmp
hlt
inc
or
dec
jb
sub
repnz
mov
dec
gs
xchg
sub
push
ret
in
shl
rcl
add
mov
ins
sub
pop
adc
dec
fidivr
add
pop
int3
cmp
jmp
inc
jl
add
pop
in
xor
xchg
out
in
push
out
dec
sub
sub
mov
mov
into
(bad)
pop
repz
mov
xor
add
or
or
popa
pop
fst
inc
add
dec
jnp
mov
aad
mov
jbe
push
push
jle
(bad)
cmps
in
mov
lods
dec
cmp
leave
dec
call
sub
inc
stos
shl
pop
(bad)
mov
sbb
jle
and
sub
fadd
fcomp
movs
aaa
and
pop
aam
mov
clc
lods
fsubr
fst
mov
jbe
in
jnp
mov
pop
shl
mov
xchg
clc
and
mov
sti
outs
sbb
retf
outs
inc
div
(bad)
ins
ror
push
sbb
ins
in
pop
push
scas
inc
pop
sbb
not
xor
arpl
test
fwait
inc
jmp
and
mov
xor
fisubr
outs
mov
outs
das
xor
in
rcl
cmps
popa
icebp
inc
push
cmp
push
in
xchg
das
ja
pop
cmp
dec
jbe
mov
call
test
or
or
mov
loop
cmps
(bad)
dec
lods
pop
lds
push
inc
mov
xchg
xor
nop
sbb
jg
jnp
fmul
jnp
xchg
mov
mov
mov
ret
hlt
retf
and
inc
arpl
inc
sub
pop
inc
(bad)
adc
js
xor
dec
mov
push
pushf
push
(bad)
add
add
xor
ds
inc
jmp
and
xor
rcr
imul
cmp
sbb
xor
xchg
icebp
enter
mov
lds
jbe
mov
xchg
movs
jne
out
retf
push
test
xor
or
jae
not
in
gs
pop
mov
das
push
(bad)
pop
mov
dec
jl
cmps
and
sbb
xchg
inc
jbe
div
jns
add
sbb
xor
cmps
popf
sub
shr
loop
push
call
jmp
(bad)
and
int
add
(bad)
jmp
sub
cmp
ficomp
ret
mov
dec
repz
imul
jl
fnstcw
daa
push
popa
push
pop
jg
cld
addr16
mov
mov
repz
sar
call
test
inc
jbe
enter
loop
mov
lock
jg
sbb
push
xor
mov
sbb
jge
and
(bad)
mov
add
jge
jl
mov
xor
push
sub
cld
sti
js
ja
arpl
push
nop
mov
aad
ds
push
mov
xlat
cwde
test
mov
adc
arpl
das
add
xchg
mov
hlt
ja
pop
in
test
pushf
or
adc
mov
mov
cmps
dec
mov
mov
dec
and
dec
add
sub
cdq
xchg
test
iret
pop
aad
(bad)
jnp
pushf
mov
(bad)
fld
aam
fld
jp
shl
jmp
mov
sub
inc
cwde
sbb
les
cdq
pop
xchg
dec
push
mov
sub
ror
adc
cmp
mov
pusha
cmp
mov
mov
popf
das
pop
push
ss
fisttp
popa
inc
cli
add
dec
mov
pop
repz
(bad)
push
call
in
pop
es
xlat
mul
rcr
or
push
loope
int3
or
cld
push
mov
add
pushf
je
cdq
sub
push
jnp
jae
sbb
loopne
out
mov
aam
mov
in
stc
movs
jnp
out
mov
leave
dec
lods
test
es
shl
ja
jae
stos
loopne
cmp
pop
out
jl
(bad)
sbb
in
stc
jp
jbe
push
xchg
adc
int
lahf
xchg
sar
je
cmp
pop
cmp
movs
test
xor
(bad)
push
and
add
ret
push
push
nop
mov
outs
arpl
sbb
pop
sbb
pop
dec
sbb
(bad)
scas
xchg
retf
xor
adc
es
inc
hlt
pop
(bad)
cld
cs
adc
jno
daa
repz
das
ja
retf
inc
jge
cs
sahf
lds
dec
adc
repz
xchg
mov
outs
shl
cmp
jecxz
fstp
in
dec
fild
jbe
das
dec
xchg
ror
mov
out
lods
cld
cmps
sub
mov
add
js
mov
add
in
xchg
mov
mov
shr
push
mov
adc
fdiv
test
add
inc
(bad)
cld
push
jb
out
add
daa
or
push
xchg
and
pop
jle
ss
cmp
call
lds
inc
inc
out
aaa
leave
xchg
push
or
pop
push
movs
je
gs
(bad)
fbld
push
test
rol
mov
stos
jg
xor
int
mov
retf
dec
mov
sar
and
push
repz
mov
and
(bad)
sub
fcomp
xor
push
fimul
sbb
mov
inc
jmp
(bad)
cmp
sbb
cmp
push
test
jmp
xchg
sar
cmps
xchg
mov
mov
(bad)
mov
add
mov
and
add
push
mov
add
out
nop
jns
adc
sahf
stos
scas
dec
xchg
xchg
fmul
ins
call
ror
movs
call
mov
call
scas
pop
push
(bad)
fs
outs
mov
lahf
inc
sbb
add
aad
bound
popf
loop
and
leave
cmps
mov
(bad)
push
xor
cmps
outs
inc
popa
cmp
xchg
sti
jns
mov
mov
in
lahf
jne
or
inc
xchg
(bad)
inc
pop
cmp
ja
jnp
xchg
ror
cmp
jnp
(bad)
cwde
jo
xchg
ffreep
inc
jl
jnp
and
adc
lahf
and
and
ins
mov
cmp
pop
jmp
mov
fidivr
mov
mov
pop
xchg
sbb
xchg
sbb
dec
push
add
pop
fwait
out
dec
lods
dec
push
les
in
fst
hlt
sub
inc
aaa
dec
pushf
retf
cmp
jbe
sub
xor
mov
in
out
xlat
push
or
das
in
pop
pop
neg
pop
call
shr
aaa
(bad)
out
jl
in
mov
cmp
push
mov
mov
addr16
add
pop
dec
popa
loop
push
mov
pop
cwde
ins
jmp
sbb
pop
mov
(bad)
mov
ins
das
push
cwde
mov
call
vzeroupper
jo
loop
xchg
hlt
xor
enter
int
mov
movs
imul
xchg
inc
and
or
ins
sub
jo
ds
jl
cli
cs
in
call
icebp
jmp
pop
outs
stos
iret
(bad)
std
push
pop
(bad)
sbb
dec
or
pop
pop
jmp
stc
popf
cdq
push
and
mov
retf
shr
mov
push
int
pop
cli
ret
inc
push
(bad)
les
hlt
dec
je
popf
lahf
mov
popa
out
sti
lea
ret
push
sub
in
sbb
add
jmp
pop
inc
or
inc
(bad)
fdiv
cmps
xchg
dec
add
aas
jmp
or
pop
dec
add
hlt
ins
mov
push
leave
das
xor
or
jnp
push
imul
les
cdq
jnp
bound
fs
rol
mov
jnp
ds
or
or
icebp
test
test
xor
nop
xor
cwde
push
dec
hlt
push
fs
pop
pop
add
push
or
test
push
ja
sar
inc
mov
sub
xor
pop
cld
jo
je
mov
push
push
jbe
fild
sbb
and
popf
out
cmp
and
es
sub
imul
add
in
inc
not
add
loop
adc
hlt
xchg
loopne
cmp
pop
add
retf
ret
and
jbe
push
xchg
add
jne
movs
jno
inc
pop
test
in
pop
adc
ror
fs
xchg
cmp
sbb
out
jne
lock
dec
adc
add
(bad)
inc
lods
mov
retf
jp
or
add
mov
jns
fld
dec
mov
jmp
cmp
movs
dec
xor
pop
inc
xor
mov
fstp
mov
fcom
fstp
xor
xchg
es
(bad)
and
pop
xchg
jno
sub
sub
xchg
test
pop
jmp
and
sahf
sub
push
or
fild
(bad)
je
sbb
mov
pop
sbb
xor
dec
push
cld
cli
push
adc
cmps
mov
sbb
and
imul
iret
inc
scas
les
sub
mov
aad
in
cwde
push
into
sbb
adc
xchg
push
stos
or
or
xchg
xor
jno
movs
test
test
js
test
jo
ja
and
push
push
xchg
repz
mov
prefetch
repnz
out
jp
popf
imul
sbb
scas
int
xchg
add
ss
cmp
xchg
add
or
scas
ss
cmp
mov
test
mov
int
test
xor
cmp
cmp
in
or
pop
int3
jg
jl
addr16
mov
outs
daa
lock
(bad)
leave
sub
and
out
and
popf
fs
mov
pop
jg
inc
mov
mov
add
pop
out
bound
dec
sbb
sub
xchg
jns
(bad)
movs
mov
and
enter
in
dec
or
sub
scas
xchg
add
unpcklps
cmp
icebp
dec
mov
out
aad
xor
scas
sbb
push
(bad)
sbb
lds
outs
(bad)
mov
cmp
in
xor
jno
arpl
adc
test
iret
add
mov
jmp
jle
clc
je
retf
pop
cmp
cld
jnp
outs
dec
push
cmps
loop
or
int
(bad)
stc
mov
xor
sbb
movs
psadbw
test
and
nop
adc
les
cdq
dec
div
adc
mov
xchg
mov
mov
push
lods
push
in
xchg
ss
pop
push
mov
hlt
sbb
sub
add
scas
sbb
repz
jae
out
jo
fstp
loop
arpl
fcmovne
mov
jmp
stos
rcl
addr16
inc
scas
sahf
or
cmp
pop
nop
jb
mov
icebp
sub
out
sar
test
add
ins
aaa
pop
test
jns
(bad)
push
lods
cld
jae
mov
fstp
jno
call
popf
add
stos
repz
inc
mov
daa
out
(bad)
jae
add
add
icebp
cmp
lahf
mov
push
pop
push
js
cmp
sbb
int3
xchg
sbb
das
sub
rol
inc
sti
add
cmp
call
sti
or
sub
pop
imul
and
ret
popf
dec
(bad)
cli
dec
gs
add
js
cdq
shr
mov
sbb
test
cmp
mov
inc
xor
leave
int
xlat
test
stos
scas
jmp
add
(bad)
sbb
aad
push
pop
push
or
sbb
sub
adc
sbb
cld
out
jmp
aaa
push
jnp
mul
adc
sbb
adc
mov
xor
pop
outs
fist
push
idiv
mov
adc
or
add
scas
enter
mov
and
(bad)
or
into
fdiv
cmp
xchg
push
data16
jmp
add
jae
loopne
mov
aam
or
das
xor
ret
add
inc
fstp
lahf
imul
arpl
mov
sub
in
movs
fcomi
aas
jae
push
aas
inc
stos
rcl
std
mov
sar
out
sub
inc
in
jmp
jno
push
mov
dec
sub
add
sub
test
sbb
cmp
arpl
pop
or
jge
xor
jb
cmc
and
daa
(bad)
jge
jns
add
or
mov
(bad)
and
push
or
cmc
mov
imul
outs
jae
mov
pop
pop
test
popa
jo
sar
imul
retf
cmps
sahf
sub
pop
jle
xor
pop
xor
addr16
shl
adc
jno
push
bound
sbb
sbb
stos
fidiv
fstp
pop
xchg
ss
stos
shl
dec
movs
in
out
cwde
ja
xlat
aaa
and
push
test
fbld
int
ret
ja
inc
or
(bad)
gs
clc
inc
xchg
lock
neg
sysret
mov
test
inc
into
inc
enter
sahf
jnp
mov
in
push
rol
je
fcomip
mov
ds
mov
dec
xor
dec
xchg
outs
ret
and
or
iret
mov
sub
mov
cmp
int
imul
sbb
xor
push
test
call
pushf
cmps
mov
jmp
mov
adc
dec
clc
xchg
inc
fld
das
retf
pop
pop
fmul
inc
sub
cmp
cmps
push
test
sub
push
ret
leave
ret
inc
xor
or
jo
and
fisttp
lods
push
stos
xor
out
scas
jg
test
pop
push
xchg
mov
jmp
lods
pop
mov
and
xor
sub
enter
nop
ins
mov
test
aam
das
mov
enter
inc
push
clc
fsub
mov
cs
mov
mov
adc
cmp
xor
mov
mov
pop
and
cmps
je
paddusw
out
mov
test
(bad)
gs
push
jl
push
(bad)
out
loop
loope
sbb
sub
sti
mov
cmp
imul
fcomp
cmc
adc
enter
mov
cmc
jb
cmp
or
pop
loopne
dec
pop
movs
cmc
xchg
lods
jp
lods
pop
mov
push
retf
ja
jno
cmp
fst
daa
mov
jmp
pop
xchg
outs
movs
mov
mov
mov
mov
jecxz
ds
call
inc
loop
sbb
sub
cmp
scas
mov
les
mov
and
mov
or
and
loop
jmp
div
mov
pop
(bad)
arpl
out
outs
lea
(bad)
and
inc
add
inc
aad
outs
sbb
aad
fdiv
psrld
dec
pop
outs
in
stos
cmp
xor
out
and
push
shr
call
(bad)
and
and
jl
imul
cmp
sbb
cwde
mov
mov
lods
or
int3
sbb
daa
sbb
mov
mov
fsub
adc
adc
jb
xchg
sti
push
lahf
ss
mov
or
inc
mov
icebp
adc
scas
xchg
fimul
stc
push
imul
mov
dec
add
mov
xor
ja
aas
mov
lea
push
xor
stos
out
out
loop
mov
jg
jns
fidiv
or
arpl
ret
daa
xor
iret
sbb
out
ret
daa
xchg
out
xor
xchg
pop
in
arpl
pushf
xchg
scas
stc
lods
popa
dec
mov
imul
imul
hlt
mov
cld
lods
cmp
push
lea
mov
mov
fucomip
movs
arpl
mov
pop
nop
icebp
mov
mov
rcr
fdiv
(bad)
outs
sahf
mov
dec
or
lock
and
ins
pusha
adc
add
jl
into
and
push
xor
rol
mov
add
adc
fiadd
mov
jmp
push
pop
jmp
out
or
clc
(bad)
psubq
inc
mov
es
data16
stos
les
pop
arpl
enter
jns
ret
ror
mov
rcr
mov
and
stos
push
call
xor
out
(bad)
jns
push
mov
repnz
jne
and
cmps
mov
cmp
jo
sbb
out
cmp
shl
inc
push
dec
outs
cmps
dec
ins
add
daa
fldcw
adc
mov
fcomp
shr
sub
shr
into
push
push
pusha
xor
cmps
mov
xchg
mov
cld
adc
mov
sti
sub
xchg
repnz
mov
sub
ret
xor
push
(bad)
lea
fisub
xchg
in
nop
cmp
xor
inc
aaa
and
mov
lods
inc
dec
cmp
or
(bad)
leave
loope
dec
gs
aaa
inc
imul
pop
mov
jae
test
mov
(bad)
jo
mov
sub
cmp
mov
leave
and
cmp
cmp
pop
shl
jo
fs
xchg
cs
rcl
rol
in
mov
push
push
retf
lds
inc
jl
lock
fsub
push
repz
fdivr
ss
test
dec
mov
push
adc
stos
cmp
push
xchg
test
jle
jmp
les
loopne
repz
jp
and
inc
int
aad
sti
stc
mov
fild
hlt
mov
pop
xchg
mov
cmp
cld
js
inc
daa
retf
out
jmp
lods
xchg
mov
jecxz
call
cld
or
bound
arpl
cmp
mov
cmp
bound
stos
xor
int
sbb
fmul
xchg
int3
jge
mov
mov
push
bound
cld
cmp
shl
xor
dec
lods
test
xor
lds
fsubr
test
add
les
xlat
sbb
clc
in
sbb
jmp
mov
cmps
iret
xor
and
fdivp
add
xchg
jno
sbb
aam
test
or
inc
push
addr16
std
sbb
lods
pop
ins
inc
inc
sbb
xlat
xor
ins
xor
nop
(bad)
imul
hlt
mov
mov
jne
int3
or
rcr
cmp
add
push
inc
lods
jns
inc
pop
dec
sahf
imul
(bad)
test
mov
icebp
leave
xlat
cdq
xchg
stos
inc
push
mov
(bad)
jmp
clc
cmp
outs
scas
jecxz
and
cmpxchg
call
sbb
sar
add
sahf
mov
jg
or
adc
jecxz
push
cmp
mov
addr16
xor
mov
xchg
int3
imul
jo
inc
in
pop
pop
mov
mov
jle
xor
jno
retf
repz
cmp
rol
sub
adc
pop
sub
pushf
test
sahf
aas
sub
xchg
into
xor
mov
adc
aad
out
push
jo
ins
jo
fdivr
mul
add
jo
jo
sbb
fcmovnb
cmp
mov
inc
ss
dec
add
clc
pusha
inc
aad
add
add
or
xor
sub
(bad)
pop
mov
push
pop
inc
not
mov
dec
xchg
jb
mov
dec
ds
fcomi
inc
dec
dec
jbe
xchg
mov
sub
sar
mov
and
or
retf
ror
dec
enter
cli
mov
mov
(bad)
jge
shr
cld
addr16
adc
jp
mov
add
mov
dec
or
adc
in
sub
xor
call
mov
mov
and
dec
xchg
test
(bad)
out
jmp
gs
add
or
jae
in
loop
sahf
test
fwait
imul
pop
aad
jae
pop
mov
sub
or
(bad)
dec
cwde
pop
out
mov
fisub
dec
pop
jbe
nop
(bad)
loopne
cmp
fninit
ja
mov
sti
out
and
out
ret
(bad)
bound
jl
push
ja
call
xor
nop
xchg
arpl
repnz
cmp
push
call
fist
sbb
scas
pop
(bad)
mul
data16
rep
ins
push
cmp
dec
and
cmps
cmps
test
jae
(bad)
jg
sub
xchg
pop
rcr
mov
movs
jge
xchg
pop
mov
inc
xchg
mov
xor
int
cmp
idiv
inc
sub
xor
mov
sar
mov
push
sub
and
mov
cdq
dec
mul
add
lods
cmp
push
mov
je
rol
add
adc
jno
or
adc
out
scas
ror
int
popf
mov
(bad)
mov
inc
mov
je
scas
sar
jecxz
push
sar
cmps
xor
clc
jb
call
aas
push
push
pop
minps
cmp
xchg
mov
jne
jmp
xchg
cmps
es
and
pop
test
xor
out
hlt
bswap
lock
in
inc
sahf
sar
xchg
sbb
into
inc
cmp
lahf
out
dec
mov
push
popa
lods
data16
(bad)
jbe
pop
pop
mov
stos
or
mov
rol
dec
call
mov
int
sub
out
scas
je
xchg
lods
sub
out
adc
lods
rcr
cmp
sbb
movs
xchg
push
sbb
jb
std
jp
(bad)
push
mov
test
pop
cli
stos
mul
call
iret
mov
mov
(bad)
(bad)
sbb
sti
sti
sub
push
das
adc
xor
or
lea
stos
jp
and
ins
in
xor
adc
mov
xor
fstp
inc
mov
in
sub
sbb
adc
xchg
push
sub
ins
fadd
std
loop
pop
sub
stos
lds
inc
dec
xchg
dec
dec
cld
ds
push
push
mov
mov
data16
ret
push
xchg
shl
mov
iret
jo
and
sar
movs
popf
mov
imul
cli
push
or
mov
add
es
mov
ficomp
push
sbb
imul
inc
jecxz
add
ret
push
out
add
pop
loop
(bad)
test
xchg
scas
dec
dec
pop
repz
icebp
inc
inc
pop
pop
in
nop
in
das
push
jnp
(bad)
call
fwait
or
pop
push
aaa
jle
cdq
add
xchg
mov
mov
pop
retf
in
je
fs
and
in
je
inc
push
mov
push
add
pop
js
(bad)
and
cdq
cdq
mov
inc
sub
fst
lods
repz
test
popa
imul
mov
push
cmp
dec
retf
lea
ds
jbe
pop
dec
lods
sbb
jne
sub
mov
lahf
es
dec
fldcw
ret
fs
add
jno
inc
pop
inc
jmp
fist
sub
shl
sbb
xor
icebp
ss
into
test
xor
cmp
pop
bound
mov
aas
jo
jecxz
dec
mov
mov
cmps
fwait
and
test
push
push
add
cmp
rol
pop
lock
repz
adc
mov
outs
sbb
jns
sub
das
sbb
cld
out
mov
mov
mov
in
dec
repz
push
mov
std
push
lods
test
xchg
jge
mov
sub
xchg
mov
icebp
shl
outs
out
cmps
xchg
jmp
xor
(bad)
bsf
imul
and
in
scas
add
dec
jae
test
mov
push
cmps
repz
pusha
cwde
imul
and
call
adc
movs
call
cmp
mov
and
stos
sbb
psllq
mov
inc
fisttp
sub
fisttp
cli
ins
push
xchg
pop
retf
sar
pop
mov
sar
gs
ds
cmc
into
(bad)
fdivr
ins
xor
push
stc
add
cmp
cmp
es
mov
pop
mov
ret
lfs
jns
lea
pop
sbb
mov
sub
fld
scas
xor
stc
inc
bound
fs
mov
mov
jb
dec
or
icebp
aam
pop
aas
jge
cmp
xor
dec
dec
pop
and
enter
adc
mov
int3
aas
lea
sub
lahf
fcmovbe
call
cmp
int
daa
ins
mov
ins
mov
stos
sub
jno
or
pop
jae
or
loope
fcmovne
xchg
call
and
sbb
data16
out
call
jl
pushf
hlt
mov
data16
cli
bound
outs
test
inc
jb
cmps
sub
arpl
loopne
sbb
mov
adc
dec
pop
add
cmp
test
dec
pop
call
xor
xchg
pop
sbb
cmp
pop
xlat
repz
pop
arpl
outs
retf
and
xor
inc
scas
push
icebp
dec
nop
mov
cmp
ret
adc
push
sbb
mov
push
pushf
jmp
adc
dec
add
pop
or
add
sbb
arpl
lods
xchg
mov
inc
inc
stos
mov
jbe
ucomiss
or
out
add
hlt
sbb
pop
nop
xor
or
or
sar
test
loope
fist
dec
jp
xchg
jmp
pop
outs
jbe
fdiv
and
inc
push
das
mov
inc
out
je
jecxz
or
dec
pop
pusha
mov
fmul
into
call
jecxz
add
(bad)
inc
stc
adc
jecxz
rcr
and
fistp
dec
sbb
mov
push
dec
out
cmp
ins
jb
rcr
mov
pop
pop
imul
rcr
ss
lahf
loop
pop
pushf
add
inc
xchg
mov
das
fst
in
rdpmc
into
lods
jle
cmp
nop
add
out
je
jae
in
out
jno
add
les
mov
xrelease
mov
repnz
out
in
mov
data16
icebp
mov
pop
jge
and
or
add
in
add
icebp
pop
cmp
xchg
pop
and
test
push
mov
nop
les
test
mov
and
lods
jge
dec
int
pop
sar
loop
fnstcw
pop
and
movs
mul
out
add
retf
sbb
push
push
js
pusha
inc
push
inc
fdivr
inc
xchg
mov
ficom
cmp
pop
call
xor
leave
call
fidiv
leave
inc
(bad)
xchg
in
cmc
rcr
ja
ins
mov
bound
popf
jg
cld
in
inc
mov
jecxz
push
push
ss
sbb
popf
xchg
xor
add
xchg
call
rcr
jne
cli
jns
cmps
push
adc
in
cmps
push
shl
mov
mov
sub
mov
and
fldcw
dec
dec
pop
addr16
popa
adc
or
ret
and
push
and
std
cmp
pop
cdq
ins
push
mov
sub
push
jl
xor
pushf
xor
hlt
push
push
jno
pop
enter
sbb
sub
and
push
inc
lock
daa
sar
lds
out
lock
sub
lock
inc
(bad)
jmp
fimul
movs
push
push
popf
mov
xchg
jmp
and
cmp
out
inc
in
pop
ret
jmp
pop
xchg
adc
js
arpl
loope
jecxz
dec
sub
xchg
pop
adc
inc
aaa
imul
xchg
ret
orps
jo
rcr
imul
lock
in
or
mov
jo
inc
repz
lods
sub
jns
sbb
lods
or
das
push
and
iret
sti
lods
pop
and
push
test
lods
push
cmp
scas
ins
mov
inc
cmps
daa
adc
rol
iret
jp
mov
jnp
jmp
aam
cld
sbb
or
les
call
push
sub
mov
xchg
(bad)
pop
mov
clc
jb
lock
mov
ds
cwde
adc
stos
aas
xor
ficomp
sti
imul
mov
shr
repz
jmp
stos
ficomp
rcr
sbb
mov
rcr
js
call
ret
add
xor
sti
into
(bad)
jecxz
mov
in
adc
mov
daa
loope
das
pop
push
xchg
ins
mov
or
or
call
xor
clc
daa
rcl
mov
cmp
and
rcl
bound
mov
pop
sbb
jno
lods
xor
xor
data16
mov
mov
mov
sbb
outs
xchg
pop
pop
push
push
xchg
(bad)
push
pushf
fist
ret
ins
pop
imul
cmp
mov
inc
and
push
outs
in
lds
leave
js
ins
aas
rol
stc
retf
fstp
cmps
stc
jno
push
imul
push
lea
jecxz
ret
sti
inc
pop
pop
sbb
fsubr
mov
pop
push
mov
je
xchg
mov
test
imul
mov
test
pop
call
mov
mov
leave
jno
pop
test
pop
mov
sub
dec
sbb
loope
enter
rcl
mov
fisttp
add
dec
xchg
adc
xchg
mov
cmp
mov
seto
cmp
enter
push
outs
dec
hlt
xor
push
push
arpl
test
mov
(bad)
int
loopne
ror
mov
call
scas
sahf
jb
mov
loopne
sub
repnz
jle
imul
pop
out
mov
(bad)
jb
les
sahf
push
or
add
sub
ins
push
repnz
jle
pop
xlat
(bad)
movs
pop
push
adc
and
jge
sub
mov
repnz
pop
cmps
add
int
(bad)
mov
push
sub
lock
test
aam
imul
xor
push
pop
es
mov
xor
push
inc
inc
cmp
(bad)
fwait
push
or
imul
retf
retf
daa
mov
dec
dec
inc
repz
jge
add
fmulp
push
arpl
inc
push
add
pop
mov
pop
test
std
mov
push
xor
mov
sub
mov
mov
test
mov
dec
jnp
mov
cmps
repz
aaa
lods
movs
leave
ins
cdq
ficom
scas
dec
mov
ds
out
sbb
adc
mov
mov
test
cmp
pop
and
mov
pop
iret
shl
leave
(bad)
shl
aam
scas
pop
mov
arpl
dec
int
fwait
outs
xchg
aad
setbe
rcr
pop
mov
jno
ss
push
ins
jecxz
dec
jo
dec
adc
hlt
and
leave
sbb
inc
mov
mov
sbb
imul
inc
fldenv
ficomp
jo
jb
pop
test
fwait
jle
icebp
lds
pop
ret
mov
js
sub
pop
or
(bad)
jne
ret
scas
popf
push
mov
enter
into
imul
lods
iret
cmp
movs
frstor
or
xchg
in
dec
lods
cmp
mov
fistp
and
retf
leave
xchg
daa
cmc
jmp
sahf
call
inc
pusha
jo
icebp
cli
mov
(bad)
imul
adc
ins
adc
or
or
add
fwait
or
stos
and
fisub
mov
cmp
les
loop
popf
jmp
xchg
pop
cmp
jb
jg
xchg
inc
dec
add
pop
jmp
push
lds
jecxz
adc
ins
mov
test
cli
(bad)
mov
sub
fisttp
jb
test
and
or
(bad)
sub
jmp
xchg
imul
adc
rol
sub
idiv
sbb
clc
push
dec
vprotw
dec
push
outs
dec
aas
addr16
test
xlat
mov
add
sbb
xor
mov
cmp
in
or
ins
dec
jae
cmp
fsubr
and
mov
cmps
imul
jno
dec
xor
adc
dec
dec
call
xor
call
jbe
jb
sub
aad
xor
fld
pop
outs
sub
pop
in
pop
test
outs
imul
xor
sub
daa
push
test
or
add
(bad)
mov
push
inc
stos
mov
imul
sahf
stos
and
out
test
xchg
inc
rcl
jmp
push
and
sub
sbb
mov
dec
xor
cmp
ret
inc
jns
sti
lahf
mov
scas
sti
or
ror
xor
rol
pop
inc
iret
dec
dec
sub
sti
gs
enter
jmp
jmp
rcl
push
cmps
sahf
sti
mov
mov
stos
out
push
mov
sar
sbb
sub
cmps
call
xchg
int
dec
mov
inc
mov
jmp
cmp
xchg
les
inc
mov
and
fwait
std
call
pop
jmp
or
clc
jno
outs
jne
imul
mov
sbb
jp
pop
mov
sbb
xchg
pushf
mov
add
fs
js
fist
das
xchg
dec
push
ret
jg
push
or
dec
mov
nop
sbb
js
sub
and
jmp
div
xor
in
int3
push
fcmove
mov
les
or
das
xchg
int
mov
out
psubd
cmc
mov
imul
mov
lsl
ret
mov
dec
(bad)
loop
ret
aaa
jmp
adc
lea
repnz
stos
inc
adc
jns
bound
mov
push
sub
push
sub
jnp
sub
out
sar
ins
push
add
ins
inc
test
stc
mov
retf
es
and
ins
and
das
loop
lods
jmp
xchg
cli
or
jg
cdq
fnstenv
ss
gs
ror
adc
or
push
bnd
retf
xor
fst
ins
pop
mov
stos
and
mov
movs
call
inc
(bad)
ins
adc
inc
ret
js
fidiv
cmp
fistp
icebp
mov
mov
es
popa
bound
pusha
sbb
dec
mov
adc
push
xchg
cmc
out
aaa
mov
repz
stc
inc
dec
mov
sbb
push
std
push
cmps
stos
pop
gs
enter
adc
mov
(bad)
loopne
lea
mov
jmp
pop
or
push
inc
aam
mov
cld
jmp
scas
jnp
cld
lea
scas
(bad)
sub
rcr
movs
inc
fisttp
dec
or
mov
test
jo
aaa
fidiv
sbb
leave
jg
arpl
and
push
pop
add
arpl
xor
cmc
adc
cmps
jmp
inc
jo
imul
jbe
ja
and
push
pop
jecxz
fimul
cmp
shrd
pop
daa
(bad)
idiv
inc
or
mov
cmp
and
iret
inc
retf
pushf
fdivr
fst
test
out
test
push
popf
fistp
sub
or
pop
and
xchg
(bad)
or
jbe
fistp
adc
add
dec
mov
lock
cmp
loopne
jecxz
inc
dec
lds
push
sub
push
dec
aad
gs
js
sbb
ret
cmc
mov
mov
outs
outs
std
sub
mov
push
inc
call
mov
call
mov
mov
sub
call
and
inc
(bad)
cmp
xchg
sub
scas
ins
xchg
outs
pop
sub
imul
adc
int
leave
repz
ds
pop
mov
aad
mov
out
add
leave
lahf
test
fadd
mov
mov
stos
or
retf
xchg
mov
nop
addr16
sub
pop
(bad)
scas
sub
popf
xchg
out
les
inc
sub
pop
mov
retf
mov
inc
lods
inc
mov
shr
pop
cmc
or
xor
mov
cmp
cmp
stos
ds
jno
popa
mov
gs
add
imul
fcmovb
aam
ja
jbe
popa
cpuid
xchg
xor
inc
mov
popa
push
out
mov
or
into
dec
push
jbe
mov
or
xchg
test
(bad)
in
mov
push
and
mov
inc
enter
out
jne
mov
ror
ja
jecxz
mov
es
and
pushf
xor
idiv
cmp
cmps
cmp
daa
mov
(bad)
push
mov
mov
fnsave
in
daa
adc
dec
dec
out
sbb
in
cmp
jecxz
cmp
xchg
data16
cmp
sbb
cld
xor
ds
add
sahf
sbb
mov
pop
mov
cmp
scas
(bad)
dec
in
push
or
and
and
in
call
cmp
xchg
test
scas
fdiv
(bad)
sahf
xchg
ins
or
outs
sub
inc
js
popa
fstp
pop
retf
push
bnd
adc
jg
rol
cmps
mov
test
inc
int
scas
pop
sub
loope
pop
(bad)
jle
mov
dec
jmp
xor
dec
jae
jg
jecxz
ffreep
add
ins
(bad)
cmp
mov
je
stc
je
sbb
les
js
div
inc
xor
mov
jmp
call
enter
aad
in
sub
push
adc
int3
retf
aad
jne
dec
ds
lock
icebp
aas
pusha
repnz
mov
inc
out
adc
popa
xchg
(bad)
imul
addr16
inc
mov
sub
outs
call
cs
cwde
pop
je
shl
cmp
das
push
dec
retf
pop
daa
ins
mov
fbstp
addr16
daa
pop
paddusw
nop
pop
fisttp
push
neg
lahf
push
adc
cdq
sub
retf
adc
xor
std
das
pushf
push
xchg
push
test
mov
inc
inc
(bad)
mov
scas
sub
(bad)
idiv
jae
jmp
out
aas
sub
sahf
shr
shl
cmp
div
arpl
xor
out
sub
nop
add
aas
push
jl
xchg
cmp
jl
and
fild
shr
pop
and
movs
cmp
outs
test
ja
movs
sub
sti
mov
call
rcl
fnstsw
sti
or
pushf
mov
jp
sub
jl
repnz
mov
mov
idiv
ds
push
xor
test
loopne
shl
movs
cs
mov
inc
or
mov
stos
push
outs
adc
sub
add
cs
sbb
scas
sbb
pop
dec
pop
adc
(bad)
div
(bad)
sbb
jmp
jb
add
add
inc
ds
ins
sub
sar
push
jle
lock
(bad)
bt
jmp
dec
mov
mov
sub
fcomp
stos
adc
jmp
in
repnz
into
lods
int3
hlt
pop
sbb
retf
and
stos
(bad)
fst
jb
sbb
push
in
int3
inc
fs
jmp
xchg
jmp
adc
mov
xchg
lahf
mov
xlat
sub
xchg
cdq
and
call
aas
loop
add
add
cdq
cs
push
push
adc
out
and
cmps
fimul
rcl
repnz
dec
xchg
push
push
sbb
jbe
add
or
push
add
mov
jmp
or
sar
sub
cmp
xor
shl
aam
adc
inc
fcomp
mul
test
ja
xchg
add
mov
popf
push
and
jge
hlt
dec
loopne
in
addr16
sbb
mov
push
push
les
add
sbb
ja
ror
repz
add
add
mov
out
pop
or
or
xchg
mul
xor
push
dec
loopne
cmc
clc
mov
or
shl
jmp
and
in
sbb
std
sbb
xor
arpl
movs
pop
cli
and
push
clc
(bad)
fwait
stc
inc
pop
(bad)
xchg
jl
mov
mov
or
adc
adc
cmp
jne
mov
adc
jmp
mov
test
lea
leave
jmp
mov
ins
pop
dec
shl
test
sar
call
add
xlat
(bad)
push
sbb
or
push
pusha
or
add
sbb
fdivr
push
jmp
sub
ds
pop
cli
jp
fnstsw
cwde
call
cwde
inc
push
nop
pop
loop
pop
mov
call
dec
cdq
push
out
push
push
cdq
mov
dec
inc
mov
and
mov
sbb
rcr
sub
mul
xchg
nop
test
in
sti
and
(bad)
fs
vmptrst
jnp
xor
lods
(bad)
stc
iret
mov
std
jb
iret
rol
loope
into
pop
aas
pop
fnstcw
test
adc
lods
xchg
or
pusha
in
or
gs
xor
mov
push
in
dec
cmp
scas
jge
mov
mov
fwait
outs
xchg
inc
adc
lahf
lock
cmp
mov
lds
adc
push
cmp
ds
fisttp
not
xchg
dec
not
mov
sub
jl
xchg
sbb
cmp
test
retf
enter
sbb
or
loope
loop
sti
jnp
dec
imul
mov
retf
inc
or
stos
icebp
stos
cmp
cli
jb
jmp
cli
cmc
inc
jae
xor
mov
sub
mov
push
sbb
data16
ficomp
out
jae
cs
push
(bad)
fadd
mov
dec
push
mov
add
addr16
es
jmp
int
data16
mov
out
clc
push
xor
retf
scas
int
aaa
pop
(bad)
aam
mov
push
(bad)
xor
mov
fld
xchg
daa
aam
jb
sahf
cdq
sub
fdivr
retf
cld
ja
loopne
shr
inc
cmp
add
and
scas
push
stc
inc
pop
push
lods
xchg
mov
push
scas
aad
iret
xor
pop
push
loope
ds
xor
and
pop
add
sub
push
retf
lahf
and
adc
neg
cmp
push
push
jae
lea
test
push
dec
pop
and
mov
push
push
retf
adc
mov
sub
pop
call
imul
add
test
jno
mov
imul
hlt
cmps
inc
ja
dec
jecxz
cmps
xchg
data16
sti
sub
jmp
dec
daa
jge
sub
add
gs
cmp
inc
aam
sub
cmc
inc
xor
je
pop
cmc
out
(bad)
aam
mov
jne
and
mov
xor
sub
lea
sbb
jnp
ins
lods
cmp
xchg
adc
dec
add
and
mov
xor
rol
stos
jp
add
lahf
imul
lea
pop
cmp
xchg
aad
rol
nop
xchg
(bad)
test
jp
push
movs
sub
sahf
test
jecxz
test
test
ret
push
imul
sbb
mov
adc
inc
pop
stos
mov
xchg
jne
daa
into
cmp
or
jae
adc
cwde
(bad)
cli
out
out
ds
dec
aam
mov
mov
pusha
pusha
or
cmp
jae
popa
and
cmp
es
mov
jmp
dec
hlt
movs
stos
outs
mov
mov
cmp
outs
ja
mov
dec
push
mov
inc
nop
clc
dec
lahf
std
outs
jbe
fild
out
in
icebp
xor
jg
mov
sub
popa
ret
mov
inc
call
xor
sub
pop
mov
fld
addr16
inc
mov
sbb
loope
ins
mov
scas
fistp
outs
enter
sub
jg
cmp
sub
jne
fdivr
mov
pop
movs
inc
test
repz
push
or
push
sub
ror
ficomp
inc
std
lds
ins
dec
mov
mov
inc
dec
ror
out
in
scas
jne
sbb
in
mov
neg
daa
jns
mov
inc
pop
inc
add
mov
lods
inc
cmp
movs
fmul
mov
and
mov
push
sub
inc
fisubr
ret
lods
mov
leave
sbb
and
leave
lahf
enter
fdivr
ror
mov
int
add
scas
add
lods
lods
pop
push
sub
and
jns
test
cmp
inc
xchg
cmp
adc
test
push
test
or
aaa
xor
adc
sbb
mov
lods
retf
int3
or
out
int3
xor
(bad)
add
data16
pop
fisub
sub
ret
sbb
ja
push
cmps
push
inc
mov
pop
fild
mov
mov
dec
les
add
das
imul
push
mov
cmp
cmp
or
leave
xchg
in
mov
pop
int3
dec
shl
push
dec
test
inc
rol
pusha
pop
mov
rol
mov
nop
clc
ds
iret
cmc
xchg
pop
inc
adc
jle
test
or
and
and
sbb
pushf
push
pop
mov
das
out
test
fstp
(bad)
jo
jns
jp
clc
das
push
push
mov
rol
jae
push
mov
iret
std
jne
mov
cdq
(bad)
call
pop
dec
mov
mov
aad
push
lock
rcr
mov
in
or
jmp
mov
adc
add
xchg
and
les
push
imul
loop
jmp
push
icebp
sub
lods
mov
or
and
mov
test
xchg
inc
lea
xor
int
shl
push
icebp
xor
jno
mov
paddsw
scas
lock
cmc
cmc
aaa
int
sub
in
pop
outs
mov
pop
cmp
retf
outs
popf
mov
cmp
ins
adc
hlt
(bad)
ja
stos
lods
dec
xchg
iret
pop
and
cmp
push
cli
imul
pop
sub
inc
inc
pop
pushf
fwait
ret
jp
xor
mov
(bad)
stos
test
cwde
mov
cld
leave
repnz
sub
sahf
es
mov
mov
hlt
mov
sbb
das
imul
std
ret
mov
rcl
daa
icebp
jle
fiadd
aam
push
pxor
in
xor
mov
sub
aam
ja
push
lods
adc
rcl
int3
push
loope
inc
push
jnp
sbb
mov
push
out
mov
fild
sub
int
xor
jmp
cmp
dec
sub
or
dec
or
pop
adc
xchg
stos
jp
push
push
xchg
ja
ja
fwait
and
sub
dec
xor
mov
jmp
push
sbb
push
daa
inc
cmc
mov
ja
xor
and
xchg
jmp
fcom
mov
ins
clc
sbb
ja
jecxz
fild
(bad)
xchg
or
call
sub
cdq
sbb
nop
test
ret
jmp
jg
lahf
icebp
inc
in
pop
xlat
or
test
pushf
loopne
repz
cmp
mov
push
addr16
pusha
cmp
mov
pop
sub
push
push
arpl
movs
je
cli
xor
jle
and
cli
out
test
push
test
popf
shl
lea
adc
jge
pop
or
dec
ficom
(bad)
sub
and
and
test
mov
xchg
ss
mov
js
data16
leave
pop
cdq
in
jo
xor
ret
adc
jne
adc
jno
addr16
xchg
stos
push
(bad)
jle
xor
inc
dec
loopne
lahf
fs
push
jae
call
push
dec
mov
adc
push
cmp
mov
inc
rcl
clc
sub
clc
cmp
call
push
push
(bad)
mov
pop
xchg
leave
out
popa
adc
mov
dec
mov
fcmovu
int3
inc
push
pop
sub
std
xor
cmp
push
shr
xor
inc
jg
mov
mov
jmp
loope
and
test
and
jecxz
or
jmp
inc
pop
jle
jecxz
std
retf
cs
stos
or
mov
outs
inc
icebp
js
and
xor
and
jno
rol
sub
xor
dec
mov
sbb
out
daa
fist
inc
stc
inc
cwde
push
ret
xor
aad
dec
dec
fisub
sub
mov
pop
push
add
es
inc
dec
adc
sub
sbb
bound
fstp
cmps
(bad)
enter
loope
mov
mov
adc
dec
das
jl
pop
dec
xchg
aas
and
clc
mov
sbb
cmp
and
lock
in
cli
jmp
xor
xchg
jnp
jl
cs
adc
jmp
mov
ja
out
sub
test
(bad)
je
rcr
push
(bad)
mov
add
mov
add
fstp
cmp
inc
push
imul
dec
cdq
fs
mov
cmp
cld
push
push
test
jne
pop
sub
popf
rol
outs
js
add
pop
mov
adc
dec
dec
rol
movs
imul
mov
(bad)
xlat
sbb
popf
mov
(bad)
jno
xchg
cmp
pop
retf
or
movs
inc
test
sbb
mov
push
or
cmp
jo
jbe
in
sbb
icebp
lock
in
dec
(bad)
jbe
sar
xchg
mov
(bad)
jg
sbb
mov
dec
shl
movs
imul
jge
jns
(bad)
pop
sbb
push
cmp
in
and
(bad)
pusha
shl
repz
dec
cs
push
scas
push
mov
ja
cli
push
mov
stos
xor
sub
pop
fild
push
dec
or
ins
push
iret
pop
das
adc
test
inc
lods
push
mov
cmp
xchg
sub
jmp
mov
adc
or
push
call
push
or
scas
call
cli
adc
adc
cli
outs
sub
shr
pushf
jbe
xor
add
push
add
inc
fisub
push
out
xor
jmp
mov
out
mov
xor
push
mov
int
cdq
add
dec
dec
popa
cmps
loopne
push
imul
je
retf
inc
add
pop
inc
scas
call
test
mov
xchg
mov
push
aad
mov
sub
(bad)
shl
stc
jne
sbb
popa
push
jecxz
mov
ret
test
ins
scas
pop
(bad)
jno
lock
xchg
mov
scas
aam
mov
sbb
or
(bad)
in
scas
ret
cmp
shl
pop
(bad)
jecxz
mov
dec
sbb
jmp
jbe
push
stos
cmps
in
push
lahf
int3
lahf
jno
inc
pop
pop
and
out
and
cmp
ja
into
sbb
(bad)
and
movs
pop
pusha
retf
lods
push
pop
cdq
cwde
rep
ret
int
mov
add
in
dec
cmc
rcl
cmp
stc
leave
stos
adc
rep
jmp
es
xchg
pop
in
mov
sub
imul
push
outs
mov
or
loope
mov
push
ins
scas
out
cmp
test
dec
inc
mov
or
cmps
ins
mov
int3
mov
add
nop
shl
xchg
aas
sahf
sbb
aad
mov
imul
add
add
out
sub
pop
out
stc
test
or
add
cmc
fild
mov
sbb
in
push
fdiv
(bad)
ss
mov
fwait
popa
push
mov
mov
pusha
jmp
push
mov
adc
pop
imul
or
test
push
cwde
xchg
ret
shl
shl
loopne
into
add
imul
dec
aaa
add
rcl
xor
ret
mov
cs
nop
sbb
xor
inc
mov
pop
int
dec
rcr
loope
mov
cld
repz
push
ja
fdiv
inc
ret
xor
pop
das
aas
arpl
imul
les
lea
and
and
loopne
xchg
jbe
imul
outs
mov
dec
jmp
aam
jno
xor
lds
ror
push
not
daa
mov
jb
and
cmps
cwde
mul
and
mov
mov
pop
jb
je
gs
push
rcr
in
or
(bad)
mov
fimul
sub
outs
jmp
imul
stc
retf
int
shl
fs
sbb
or
pop
outs
jbe
loop
cmps
je
cwde
mov
sub
adc
inc
or
mov
pusha
out
sbb
call
sub
cmp
aas
push
cdq
sub
mov
fs
imul
mov
mov
add
(bad)
adc
mov
xor
sub
aam
jge
mov
dec
cmps
cmp
adc
xchg
movs
sbb
add
ins
hlt
or
xchg
or
cmc
and
leave
or
cmp
sahf
add
fldenv
and
pop
xor
adc
dec
fwait
stos
scas
out
sub
push
pop
sbb
xlat
outs
cwde
jo
sub
mov
sub
sbb
jns
sbb
pop
push
jp
gs
mov
fimul
jo
inc
mov
and
in
xor
les
mov
jmp
sbb
or
sub
jecxz
jnp
add
xchg
lds
and
and
test
ja
sbb
xor
aad
sub
into
inc
ficom
and
mov
rcl
and
loope
push
cmps
ficomp
(bad)
neg
(bad)
xor
jl
sti
pushf
retf
jns
xchg
jmp
in
dec
pop
arpl
movs
push
jmp
xor
dec
div
sub
xlat
adc
xchg
xchg
imul
je
adc
inc
js
pop
pop
mul
je
sub
cmp
lds
neg
xchg
fcomp
pop
dec
popf
mov
les
xchg
jae
das
call
aaa
sbb
xchg
mov
push
xchg
jmp
cli
js
pop
lds
in
loopne
xchg
pop
xchg
out
sub
mov
inc
cmp
inc
shr
enter
or
cmp
mov
add
popf
mov
arpl
and
sub
ret
shl
nop
or
stos
test
popf
jmp
pop
sub
push
push
cmp
cmp
adc
cmp
inc
jno
aad
sub
cmp
sub
mov
mov
mov
(bad)
call
aad
ds
rcl
push
push
xor
pop
mov
jnp
imul
jmp
test
stc
mov
and
push
sub
sbb
jl
aad
(bad)
and
add
retf
lods
cwde
jae
ins
xchg
adc
dec
mov
mov
add
xchg
xchg
adc
pop
push
call
pop
or
fldenv
in
ret
pusha
mov
cmp
cli
push
cdq
add
outs
stc
rcl
out
add
std
sub
popa
push
rol
outs
ins
out
dec
mov
push
iret
movs
ret
sbb
stc
fwait
rcl
cwde
loope
mov
dec
or
xchg
out
scas
stos
push
leave
or
retf
mov
ins
or
pcmpeqw
xor
add
mov
int3
fdivp
cmps
adc
pushf
sbb
mov
outs
mov
jbe
or
ja
pop
sub
iret
bound
out
ret
pop
sub
and
pop
pop
and
fist
cld
arpl
mov
cmp
push
cmp
or
cmp
(bad)
inc
rcr
mov
push
or
jo
fld
popa
mov
rcr
mov
xor
bound
(bad)
mov
inc
jae
fwait
cmp
pop
arpl
jmp
mov
mov
leave
fnstsw
jo
retf
or
in
loope
ins
ds
mov
mov
inc
loopne
inc
mov
add
jnp
int3
stos
stc
fild
xchg
es
and
mov
push
rcl
cmp
and
pusha
push
mul
and
inc
movs
cmp
push
mov
pop
ja
push
lock
adc
cmp
xchg
repz
dec
loopne
cli
(bad)
cld
jl
sub
pop
icebp
push
xchg
out
push
xlat
das
and
sub
adc
jnp
out
mov
mov
xchg
or
mov
and
or
lock
popf
and
pop
or
scas
add
loope
add
icebp
cld
lock
pop
mov
xchg
adc
jnp
inc
push
dec
cmp
mov
add
ret
sub
popf
movs
add
fdiv
mov
cmp
arpl
(bad)
into
hlt
in
cmp
int3
movs
adc
adc
or
dec
or
pop
pop
pop
pop
add
rcr
pop
imul
lea
push
adc
fcomp
mov
mov
mov
inc
xchg
sub
jle
fbld
scas
mov
int3
xchg
adc
cmps
mov
mov
push
inc
mov
cmp
ror
sbb
mov
add
enter
jp
jmp
mov
test
jnp
cmovge
jg
mov
dec
ret
adc
cmc
rcl
inc
add
cmp
mov
cld
mov
call
int
test
test
mov
(bad)
cmp
dec
add
and
out
ins
mov
mov
mov
sub
cdq
dec
jp
fisttp
jbe
icebp
mov
xor
rol
inc
shr
and
sub
fisttp
xchg
das
pushf
or
outs
mov
adc
test
int3
dec
fcmovu
add
add
mov
icebp
push
je
cs
icebp
outs
test
inc
xchg
cwde
in
into
outs
sub
mov
loopne
jns
pop
or
adc
(bad)
(bad)
cld
and
lods
xchg
mov
inc
inc
stos
dec
and
stc
jbe
xor
add
imul
ror
loop
xor
dec
dec
sub
inc
adc
dec
mov
sar
xor
test
ret
fdiv
inc
mov
loope
jno
xchg
(bad)
fld
mov
push
inc
sbb
out
rol
js
sbb
adc
scas
add
cli
or
sbb
mov
sub
je
mov
ss
cmp
mov
inc
lods
xchg
pop
dec
mov
pop
popf
adc
xor
dec
pop
inc
js
bound
das
add
loopne
jne
push
cwde
push
into
and
dec
xchg
inc
lds
cmc
push
jmp
shr
fbstp
pushf
fcom
cli
mov
xchg
scas
loope
int
xchg
je
push
sub
icebp
and
rcl
adc
cmp
lock
xchg
inc
(bad)
cmc
pop
test
jg
xchg
add
inc
sub
scas
add
add
out
mov
sub
out
fstp
cmp
dec
adc
mov
jp
data16
xor
les
jno
jo
inc
mov
or
and
sbb
mov
cmp
sbb
data16
sbb
mov
and
and
movs
jne
imul
cmp
movs
lods
xchg
ret
pop
xlat
add
sbb
add
sbb
push
cmc
sub
js
pop
push
ror
sub
inc
int
cmps
sub
jg
cdq
jb
test
out
fld
lods
mov
mov
jmp
je
cmps
lods
mov
mov
pop
jecxz
rcr
popf
xchg
int
dec
into
pop
aad
jg
jl
nop
xchg
dec
cmp
sbb
mov
mov
mov
sti
cs
jp
out
pop
mov
out
jmp
push
shl
xchg
cmp
mov
pop
dec
mov
repnz
ret
push
bound
jg
inc
push
in
rcl
mov
sbb
les
cmp
(bad)
mov
lods
(bad)
mov
hlt
les
(bad)
push
sbb
cwde
dec
popa
inc
jnp
(bad)
shl
cmc
dec
sub
repz
js
cdq
cmp
mov
sub
xchg
xor
out
push
xchg
xor
inc
push
jmp
xor
add
fnstcw
mov
or
cdq
mov
pop
and
(bad)
jae
mov
jb
jp
pop
repnz
mov
jg
shr
into
mov
fist
ss
fisub
xchg
pop
ins
xchg
xor
cmp
mov
mov
push
movs
loop
fild
into
ret
imul
(bad)
sbb
popf
lods
mov
enter
sub
mov
into
loopne
sbb
mov
test
hlt
and
fist
popf
arpl
pop
(bad)
xchg
xchg
pushf
jae
inc
(bad)
cld
and
ja
in
mov
add
ja
call
pop
fcmove
jmp
les
push
mov
sahf
adc
sbb
retf
call
cwde
aaa
jb
mov
ins
cmp
inc
popa
pushf
dec
jle
mov
jge
inc
daa
pop
dec
inc
imul
pop
inc
in
daa
test
add
movs
mov
sub
repnz
sub
(bad)
mov
adc
lods
fcomp
test
sub
out
jecxz
push
inc
inc
inc
mov
outs
sub
(bad)
push
dec
inc
xchg
mov
mov
clc
cwde
imul
xchg
jo
pusha
xchg
and
ret
aaa
dec
jne
mov
in
sbb
mov
fdiv
(bad)
stc
adc
pop
mov
sub
sub
sbb
xor
ja
or
xchg
push
in
dec
repz
mov
nop
je
jnp
pop
pop
cmps
mov
pop
mov
mov
pop
mov
leave
inc
push
mov
out
outs
call
mov
cmp
mov
rol
or
mov
sbb
adc
test
clc
mov
pop
fcmovb
mov
add
jecxz
xchg
das
jno
adc
or
sub
rcl
ins
pop
xor
aaa
lea
aaa
mov
fdiv
jl
and
adc
adc
sub
adc
xlat
sar
bound
(bad)
in
cwde
outs
and
les
inc
inc
xchg
loopne
sbb
push
add
inc
inc
popa
shr
and
mov
mov
stos
push
mov
popa
pusha
push
pusha
std
jne
retf
mov
pop
sub
jg
jmp
jl
das
mov
and
jge
push
rcl
xchg
mov
(bad)
call
imul
mov
fwait
mov
xchg
jp
fsubr
mov
push
shr
aas
push
sahf
jne
mov
fnsave
jmp
std
(bad)
mov
loopne
mov
or
out
call
dec
fist
xor
mov
fwait
in
add
dec
test
cli
cli
in
out
(bad)
mov
test
inc
add
fldcw
fcmove
pop
xor
and
xor
gs
cmps
xchg
dec
xchg
ffree
adc
enter
mov
adc
or
iret
xchg
cmps
mov
jnp
xor
jne
dec
sub
and
mov
stos
or
push
push
lock
out
and
hlt
xchg
popa
push
mov
pop
ficom
push
push
rcl
enter
cmps
jle
mul
or
(bad)
pop
sbb
push
lock
push
fwait
std
nop
inc
fnstcw
rol
shl
mov
jmp
and
clc
dec
add
mov
pop
inc
and
(bad)
jg
sti
sub
scas
jp
ret
xchg
adc
rcl
mov
outs
mov
mov
(bad)
push
pop
dec
mov
pushf
fucom
(bad)
pop
and
jno
push
mov
xor
clc
inc
cmps
and
mov
push
push
imul
jge
inc
xchg
aad
pop
xor
fsub
mov
fwait
pop
jge
sub
cli
pop
adc
arpl
pop
popa
test
fdivr
mov
pop
out
cs
fidivr
mov
push
rcl
(bad)
jge
in
loope
enter
push
or
adc
enter
ret
(bad)
imul
push
retf
nop
sahf
push
add
mov
dec
mov
or
jmp
arpl
cld
cs
cwde
enter
push
call
rcr
and
cmp
mov
jae
pop
fst
ffree
xchg
fild
sbb
idiv
adc
mov
xchg
push
iret
push
pop
mov
sbb
adc
jno
rcr
jo
bnd
popf
sub
iret
push
jmp
mov
cmp
not
add
pop
sub
call
inc
outs
into
mov
stc
mov
aad
mov
mov
cmp
push
cmp
out
add
cld
jo
dec
xchg
inc
push
std
xchg
xor
ins
cld
add
and
ffree
xor
push
mov
outs
test
inc
cdq
scas
dec
cmp
lock
mov
mov
pop
dec
dec
jns
pop
mov
int
adc
dec
imul
daa
pop
jl
xchg
cdq
pusha
sbb
pop
outs
lahf
adc
jns
mov
cwde
daa
add
imul
stc
icebp
push
cmp
mov
aaa
imul
shr
dec
and
iret
jg
outs
sahf
imul
pop
adc
popf
sbb
in
aas
test
mov
sub
retf
and
call
mulps
add
das
aaa
(bad)
cdq
loopne
or
xor
and
shl
sbb
xchg
mov
mov
nop
sbb
push
sub
sub
cmp
sub
and
arpl
sbb
ror
fild
mov
mov
cmps
nop
sbb
outs
icebp
xor
lea
pop
test
xor
lock
mov
out
cld
sbb
or
mov
ins
dec
lahf
mov
xchg
mov
call
sbb
into
sar
stc
jns
sub
mov
xchg
mov
cdq
push
out
pop
push
push
and
adc
lock
sbb
shr
ror
rcl
adc
jb
ds
cdq
and
stos
cmps
sbb
jg
(bad)
push
xchg
mov
pop
pop
imul
adc
jns
fadd
sbb
or
mov
mov
pop
cld
test
lea
imul
test
xchg
ins
push
in
pop
jno
std
fwait
mov
out
mov
int3
pop
mov
std
retf
push
shl
push
int
gs
and
jle
jmp
shld
cmps
into
sub
and
pop
or
inc
daa
popa
mov
xor
push
neg
xchg
(bad)
adc
mov
inc
shl
mov
and
xchg
enter
inc
xchg
stc
lods
in
out
loop
inc
dec
adc
in
stc
jp
mov
jg
ins
stos
mov
mov
inc
icebp
in
jge
mov
retf
cdq
retf
mov
outs
and
xchg
sbb
hlt
mov
mov
jnp
repnz
dec
mov
pop
js
xlat
push
and
jecxz
cdq
cmps
clc
or
ror
in
jg
loop
ds
jge
es
jl
push
mov
sbb
push
mov
or
daa
push
mov
or
mov
jae
xchg
mov
pop
dec
xchg
push
adc
sbb
add
mov
or
push
pop
mov
enter
cmps
fdiv
xchg
mov
outs
into
mov
aam
and
hlt
repz
mov
pop
imul
add
mov
ret
fadd
cmp
lock
cmps
out
fsub
sub
sub
push
(bad)
jge
call
pop
int3
ret
dec
dec
ret
sbb
aad
xchg
mov
(bad)
std
sti
sub
adc
jmp
mov
in
cmp
cmp
retf
or
out
push
mov
and
in
inc
clc
lea
dec
pop
mov
or
cld
int3
and
fs
add
push
mov
fdivr
in
scas
jmp
adc
stos
jecxz
jno
dec
(bad)
jno
pop
xchg
fcmovbe
test
(bad)
rcr
(bad)
daa
mov
mov
sbb
pushf
or
xchg
fcomp
mov
mov
fmulp
xor
sbb
and
ins
pop
ss
arpl
cwde
ja
es
mov
sahf
lods
adc
push
loop
xchg
ins
pusha
jecxz
repnz
jno
comiss
cli
mov
in
cmp
sti
(bad)
jae
jecxz
lods
xchg
test
cmps
inc
std
dec
or
mov
daa
movs
cmp
loopne
loop
stos
ja
and
sar
(bad)
sti
stos
mov
dec
(bad)
in
mov
push
pop
popf
dec
out
xor
repz
or
and
xor
push
repz
push
fdivr
inc
aas
aaa
loope
ss
add
aas
(bad)
retf
rcl
push
(bad)
jp
push
cmp
pop
push
sbb
cwde
lds
jne
test
mov
cmp
into
cmp
pop
push
cmps
dec
mov
bswap
mov
retf
jne
jecxz
sub
enter
std
push
pusha
rol
mov
shl
sbb
mov
adc
fldcw
sar
pop
stos
xlat
xrelease
cmp
inc
jno
push
xchg
jmp
sbb
out
lea
dec
cdq
and
sub
pop
stos
loope
push
pusha
or
mov
lods
xor
repnz
add
push
in
movs
inc
stc
xchg
retf
inc
js
xor
pop
call
test
add
and
or
bound
push
sbb
(bad)
aam
sbb
cld
(bad)
in
and
rcl
sbb
outs
mov
xchg
leave
fstp
pop
fimul
cmc
stos
adc
dec
fisub
ss
push
adc
lods
retf
dec
xchg
xchg
in
(bad)
jp
adc
int3
add
mov
pandn
nop
stc
imul
xchg
and
xlat
inc
mov
jg
fs
inc
movs
cdq
mov
sbb
(bad)
xchg
xlat
cmc
cmp
in
xchg
push
in
add
test
and
push
jbe
gs
jns
lahf
or
pop
mov
jne
(bad)
lods
retf
fdiv
js
movs
cmp
repz
dec
push
mov
nop
mov
mov
int
and
mov
cmp
mov
outs
sub
push
mov
inc
pop
in
inc
xlat
push
mov
test
rcr
in
fimul
data16
out
rcl
sahf
mov
cmp
inc
push
mov
pop
mov
call
xlat
mov
xor
mov
in
lods
cmc
xchg
fucomp
push
loope
stos
fsubr
popf
mov
das
push
daa
pop
xchg
ss
loopne
cmp
adc
ds
int
rcr
loop
and
or
in
mov
sysret
adc
leave
ficom
cmp
inc
nop
stos
mov
xchg
adc
mov
dec
stos
push
lods
sub
mov
sti
or
cmc
sbb
pop
add
adc
arpl
lock
xlat
mov
bound
jnp
mov
inc
xchg
into
in
sbb
fist
xchg
xlat
mov
(bad)
inc
(bad)
mov
hlt
xor
imul
fs
pop
dec
aam
xchg
pop
jmp
and
pop
mov
lahf
imul
push
pushf
repz
pop
data16
xchg
mov
pop
pop
movs
stos
dec
xor
pop
mov
and
(bad)
pop
push
push
test
xlat
inc
add
ficom
cdq
fimul
repnz
jb
mov
xor
aaa
ret
mov
mov
push
(bad)
sub
fwait
(bad)
dec
sbb
push
sub
test
cmps
or
xchg
rol
mov
mov
pop
movs
jmp
cld
icebp
sbb
shl
sub
out
addr16
jmp
or
push
cmp
pop
ret
ins
in
push
loope
iret
pminsw
loopne
shr
push
test
or
xor
pop
and
loopne
cmp
mov
fwait
repnz
ja
cmps
ds
dec
retf
and
fstp
test
mov
mov
bound
inc
pop
mov
jl
xchg
mov
test
neg
ins
xchg
and
pop
cmp
mov
mov
mov
xchg
aaa
mov
push
push
and
dec
or
push
sub
pusha
mov
shr
mov
adc
or
fisub
addr16
cwde
ror
push
out
mov
clc
inc
mov
mov
sahf
(bad)
mov
or
cmp
dec
dec
sbb
pusha
scas
hlt
scas
pop
mov
xchg
sbb
and
mov
adc
sub
fld
popa
jge
scas
mov
pop
retf
adc
cwde
int3
data16
loopne
(bad)
dec
out
out
cmp
cli
mov
mov
push
pop
push
hlt
jecxz
jecxz
addr16
pop
xchg
(bad)
imul
add
add
xchg
pop
out
arpl
test
sbb
mov
int3
xchg
mov
das
jecxz
repz
xchg
jo
mov
mov
in
cmps
cwde
xchg
mov
fisttp
sti
jb
mov
ins
inc
jae
and
cmps
(bad)
mov
cs
sti
and
and
dec
fldpi
cmp
push
(bad)
pop
or
bound
xor
dec
mov
dec
ds
pop
and
std
stc
in
mov
jnp
pop
jle
lods
jg
jg
lock
cld
retf
mov
mov
sub
pop
rcr
adc
call
cli
ja
mov
ins
pop
xchg
pop
imul
lds
ins
stos
add
mov
and
hlt
hlt
and
les
fcom
loope
int3
xchg
ror
cmc
pop
cli
ins
or
sar
sbb
sbb
cmp
div
add
aam
add
inc
xor
inc
and
cmp
sahf
inc
addr16
repnz
stos
dec
ffreep
inc
movs
add
idiv
clc
xchg
fldenv
(bad)
sar
inc
mov
mov
and
xor
(bad)
scas
push
mov
rol
push
push
in
push
xor
in
in
jne
lods
clc
fldpi
sub
retf
leave
push
dec
xor
fwait
stc
mov
add
int3
bound
xchg
mov
jb
xor
dec
pop
ss
rcr
(bad)
jle
add
jnp
mov
pop
mov
cdq
sub
jge
rcr
test
pop
(bad)
sub
xlat
mov
xor
dec
or
pop
enter
mov
or
hlt
out
adc
xor
cmc
xchg
cdq
jb
mov
repnz
stc
mov
pop
and
xor
xlat
cmp
dec
sub
dec
or
jge
(bad)
pop
add
dec
ret
addr16
and
cmp
into
imul
xchg
iret
inc
xor
pop
call
jl
push
addr16
movs
sub
adc
mov
iret
mov
imul
jae
jo
mov
ror
jbe
mov
inc
jecxz
pop
gs
adc
xchg
imul
inc
mov
inc
test
push
xchg
push
adc
cmp
mov
mov
cld
jne
daa
shl
cmp
mov
jecxz
or
cmp
mov
sub
mov
rol
add
gs
lods
pusha
xor
and
xchg
pcmpgtd
cmp
inc
jmp
push
fs
inc
aad
add
test
outs
mov
xlat
or
adc
mov
xchg
mov
lock
adc
xchg
jnp
sahf
leave
loope
fbstp
mov
shl
push
(bad)
push
out
pop
pop
retf
inc
aad
in
jecxz
dec
jmp
add
or
push
inc
fisubr
popa
fisubr
imul
pushf
jle
ins
and
pushf
xchg
(bad)
jno
stc
ret
rcr
clc
jne
fist
popf
arpl
outs
jno
pop
cmp
fs
ret
ins
add
sbb
and
dec
cmps
(bad)
dec
mov
sbb
sbb
push
sbb
mov
je
jecxz
inc
sub
test
pop
sbb
push
pop
jbe
jl
popf
stc
scas
rol
popa
test
ja
jl
movs
popf
or
cmc
call
xchg
out
test
repnz
mov
cwde
daa
jg
xor
imul
shl
ja
mov
cmp
rcl
nop
mov
test
jg
mov
mov
sbb
sar
mov
sar
repnz
mov
mov
in
ret
sbb
or
mov
neg
cmp
(bad)
or
sub
pop
xchg
xor
imul
sbb
rcr
xor
and
imul
xchg
and
add
lods
mov
jmp
pop
mov
inc
jmp
mov
add
cmp
ficomp
push
cmps
setns
test
stos
cs
dec
fmul
jnp
into
(bad)
mov
ja
cmp
fsubr
push
clc
jns
arpl
inc
mov
ins
rcr
int3
adc
lods
repnz
cli
test
movs
aad
xchg
int
mov
pop
jg
fdiv
mov
or
lea
pushf
jle
(bad)
test
outs
mov
shl
aad
inc
sbb
sub
mov
in
jbe
inc
pop
or
push
push
mov
test
add
(bad)
or
jae
addr16
sbb
shr
pop
ins
pop
add
data16
cmps
dec
xchg
xchg
ret
cdq
out
bound
push
es
xor
scas
dec
fwait
or
fadd
fnstsw
addr16
inc
dec
add
adc
push
push
pop
fild
inc
mov
push
(bad)
jns
iret
lock
jae
adc
(bad)
lea
pop
and
sbb
sbb
ret
sbb
inc
pusha
mov
mov
loope
fldz
pop
lahf
push
cmp
mov
inc
xchg
ins
mov
or
add
and
lds
pop
test
lods
js
retf
pusha
add
retf
adc
sub
test
int3
cmps
sub
pop
or
inc
push
pop
(bad)
xor
xor
pop
pushf
dec
ins
loope
and
adc
cmc
loopne
aam
lahf
stos
cmp
pop
(bad)
sahf
xor
data16
lock
fcomi
lahf
retf
arpl
jmp
pop
in
fs
mov
shl
mov
sub
lahf
jmp
in
test
je
push
gs
imul
xor
xchg
or
sub
std
push
jecxz
out
in
(bad)
dec
stc
and
adc
fistp
fs
xchg
mov
mov
aas
xor
sub
mov
mov
jnp
jle
add
inc
and
cmp
arpl
dec
stc
mov
(bad)
or
xor
test
pop
daa
push
call
push
fcmovb
(bad)
enter
js
jno
jle
add
push
int
fisubr
clc
iret
adc
jg
(bad)
cmp
adc
int3
aad
sbb
pop
(bad)
adc
in
lock
xchg
lods
dec
pop
sub
sti
lahf
inc
pop
stc
push
(bad)
jne
inc
mov
dec
fwait
inc
clc
arpl
cmp
popf
scas
add
(bad)
ins
push
push
jmp
(bad)
pop
sahf
mov
push
cmps
or
aam
gs
aad
cmp
icebp
jbe
in
sahf
iret
mov
gs
fs
xchg
adc
out
mov
push
and
clc
fscale
dec
dec
ret
stos
mov
xor
ins
xor
and
mov
inc
mov
and
fisubr
es
stos
pop
(bad)
and
mov
lds
out
mov
jno
ss
lahf
jnp
pop
pushf
jae
jg
das
sbb
(bad)
mov
fld
mov
mov
adc
adc
mov
push
push
and
(bad)
lahf
arpl
jmp
xchg
enter
mov
ss
int
mov
pop
clc
std
or
retf
push
pushf
out
mov
xchg
push
das
jmp
sbb
clc
pusha
and
lahf
jb
lods
dec
nop
add
or
xor
and
sub
leave
and
imul
add
dec
shl
or
dec
loopne
xchg
fwait
icebp
ror
add
pop
cmp
xor
sbb
sahf
fwait
inc
pushf
sar
enter
jmp
es
dec
push
xchg
push
push
fmul
popa
push
mov
jge
aam
cmp
repnz
cmp
dec
in
out
pop
inc
or
stc
xchg
jns
or
push
pop
mov
jbe
cmp
loope
ja
dec
ins
jl
sbb
outs
neg
push
xchg
outs
push
cmps
fmulp
mov
mov
hlt
xchg
add
pop
pop
test
or
fadd
jge
loope
pop
call
ss
aad
lock
js
sbb
mov
cwde
dec
shl
adc
xchg
dec
test
imul
ins
inc
sbb
lea
retf
xchg
loopne
nop
jbe
hlt
pop
ret
ds
jno
or
xor
or
lods
mov
mov
mov
cdq
les
aas
int
xchg
fisttp
jmp
shl
dec
sub
loope
mov
call
jge
jne
(bad)
jecxz
mov
cmp
xchg
popf
adc
nop
into
jecxz
aaa
jle
cmps
xor
lock
push
sbb
dec
and
lea
jge
mov
or
leave
addr16
cmp
sbb
or
es
call
das
pop
mov
pop
mov
or
bound
mov
xchg
mov
mov
sub
or
and
out
cmc
bound
add
test
or
mov
xchg
les
call
lahf
jb
movs
push
or
loope
push
cmc
neg
push
pop
inc
into
ffreep
ja
call
stos
out
add
dec
mov
ror
xchg
popf
fdivr
(bad)
bound
pushf
mov
jg
sub
push
aad
fcmovnb
and
or
jecxz
inc
xchg
call
mov
xchg
mov
popf
and
push
adc
retf
sub
outs
into
and
jns
adc
xlat
mov
outs
aam
adc
and
sub
mov
cmp
add
jmp
xor
xor
sub
mov
pop
cmp
xchg
fcomi
and
mov
loope
aaa
jmp
jae
sti
cwde
and
xor
or
ss
(bad)
mov
sub
shl
mov
xchg
cmps
cmps
jg
inc
(bad)
stos
test
sbb
idiv
mov
test
mov
cmp
retf
mov
(bad)
shr
push
(bad)
jo
jbe
sub
(bad)
jmp
push
cwde
add
push
retf
idiv
pop
and
mov
xchg
mov
(bad)
adc
ins
(bad)
retf
xor
and
ds
jl
xor
xchg
scas
cmps
mov
sbb
scas
pop
fistp
std
dec
add
nop
add
cmp
mov
imul
in
mov
cmp
pop
xchg
and
pop
and
pushf
push
cmps
pop
mov
out
xchg
lods
inc
or
pop
cmp
adc
inc
sub
mov
cmp
popa
mov
mov
xchg
fmul
mov
inc
(bad)
push
lods
out
mov
xor
dec
cs
mov
add
sbb
hlt
mov
rcr
call
pop
inc
and
push
movs
sub
in
jp
call
sub
mov
es
popf
cmps
cmp
fcom
ret
pop
aad
rcr
xor
retf
jo
aas
sub
and
push
dec
mov
push
cdq
mov
sbb
pop
jne
ret
loopne
jae
stc
ins
push
and
xor
cmp
push
push
or
push
adc
js
daa
cmc
adc
xchg
and
pop
or
lds
jmp
mov
dec
sub
mov
push
inc
dec
addr16
xor
adc
mov
stos
push
hlt
cs
and
cs
cmps
cmc
sub
and
cmp
jmp
fnsave
adc
sbb
int
cmp
and
mul
sti
sbb
cmp
(bad)
cmps
mov
and
lock
std
cmp
in
jns
add
shl
jae
xchg
aad
lea
mov
mov
xor
test
xchg
dec
pop
jne
sti
adc
pusha
lea
test
push
imul
sub
jmp
sub
icebp
sbb
sti
adc
add
lods
fld
mov
push
xlat
into
jae
jge
mov
ss
cmp
idiv
fwait
or
(bad)
fdiv
cmp
push
pop
jb
(bad)
lds
inc
aad
retf
xchg
jae
xchg
mov
adc
xor
ret
lea
sahf
pop
fistp
pop
xchg
dec
popa
dec
mov
or
or
inc
in
fidivr
(bad)
jge
lods
sub
ret
jb
fadd
cmc
add
xchg
(bad)
mov
cdq
sub
xchg
mov
cmp
jmp
sub
pop
inc
nop
xor
jno
mov
push
dec
ds
xor
pusha
sub
in
fld
jmp
or
jle
mov
in
push
lods
data16
mov
xor
mov
xor
js
dec
(bad)
mov
in
sbb
jmp
push
pop
add
sbb
mov
shl
dec
jge
(bad)
lock
and
inc
mov
nop
xor
and
and
push
pop
fisttp
bound
les
test
sub
push
lods
push
sbb
add
and
cli
fbld
pop
cmp
(bad)
mov
or
(bad)
push
and
sbb
dec
mov
(bad)
outs
bound
or
outs
adc
pop
pop
cmp
pop
jmp
sbb
add
adc
pop
mov
push
(bad)
jge
call
mov
out
pusha
or
push
das
(bad)
pop
stos
mov
cmps
add
push
jno
cmp
fmulp
stos
or
gs
xor
jne
test
or
and
or
pushf
sub
stos
add
or
icebp
mov
mov
sub
jp
iret
sbb
xchg
pop
stc
neg
and
pop
mov
jmp
bound
lods
in
or
xor
dec
cmc
mov
mov
mov
repnz
outs
inc
mov
xor
les
mov
std
imul
xchg
in
repnz
jg
in
adc
cmp
cmps
pop
and
xchg
fcomp
xor
and
aam
or
xlat
lea
cwde
cmp
xor
sub
mov
dec
jno
jg
popf
test
mov
dec
jb
xchg
or
xchg
rol
mov
jmp
sub
fs
cmp
mov
jmp
hlt
mov
aam
mov
jg
push
mov
call
xchg
push
sub
js
shl
adc
sub
ror
ins
jge
test
sub
and
jb
pop
sub
add
cmp
int
aad
pop
jno
jne
cdq
and
sbb
(bad)
jne
adc
pusha
jecxz
jbe
rol
out
retf
and
sub
ror
(bad)
xchg
jge
add
int
test
popf
clc
dec
jne
cmc
test
pop
fisttp
dec
aaa
ret
pop
daa
xchg
dec
xor
xor
popf
and
cdq
push
add
pop
outs
mov
mov
adc
(bad)
jno
cli
xor
gs
xchg
sub
shr
sahf
sbb
sti
pushf
movs
pop
ins
mov
pop
bound
pop
xor
push
sbb
ins
add
ret
imul
pop
push
xchg
iret
cwde
jmp
pop
sar
scas
outs
retf
xor
jae
outs
adc
or
jbe
xlat
bound
dec
lock
dec
jns
pop
out
in
and
xor
jno
repnz
not
xchg
add
push
scas
jmp
cdq
(bad)
cmc
adc
adc
mov
dec
test
and
xor
and
inc
mov
clc
pop
cmps
sbb
and
jmp
jae
inc
jbe
sbb
inc
pop
push
sti
or
xlat
sbb
pop
lock
mov
jp
sub
xchg
cmp
lods
cmp
popf
add
or
adc
in
out
stos
shl
(bad)
je
lds
mov
mov
push
nop
mov
cmp
pop
mov
xor
mov
aad
pop
pop
or
ins
sbb
pop
icebp
(bad)
mov
stc
xchg
rcr
cmps
add
mov
ror
mov
aas
movs
sbb
daa
jle
inc
inc
loope
lods
jmp
dec
push
ret
jae
sub
mov
and
loope
scas
hlt
push
jp
outs
xor
cwde
jns
mov
cwde
in
push
adc
cmps
jno
cmps
sti
fdivr
dec
jae
or
mov
cmp
mov
les
retf
loope
or
(bad)
mov
xlat
jne
mov
sbb
jp
cmp
pop
inc
push
mov
inc
fsubr
leave
pop
push
fstp
cmps
call
and
pop
mov
mov
call
imul
loop
nop
inc
jo
test
idiv
xor
jne
jbe
cmps
push
cs
sbb
mov
mov
push
push
push
push
mov
jmp
sub
retf
push
retf
push
ds
sbb
jb
mov
sahf
mov
daa
sub
jl
pop
rcl
ret
mov
retf
mov
call
inc
in
jp
or
lds
mov
jg
(bad)
push
not
cli
lea
mov
ins
or
dec
gs
pop
pop
mov
mov
or
and
xor
cmc
or
into
push
movs
ds
fimul
ins
dec
aaa
shr
mov
int
adc
xor
mov
call
scas
inc
push
outs
jmp
pop
das
inc
push
push
jne
jb
cli
ret
je
(bad)
mov
sub
push
mov
dec
stos
(bad)
dec
stos
pop
xchg
enter
popf
test
add
add
in
push
ret
push
shl
shl
jle
je
into
inc
adc
idiv
in
fiadd
std
sub
aad
xchg
fs
push
movs
std
lahf
mov
lahf
push
or
int3
movs
mov
mov
ins
sti
sbb
mov
popf
jnp
add
mov
inc
enter
(bad)
adc
mov
loop
push
xchg
loop
out
add
int3
jle
(bad)
xlat
xchg
hlt
dec
scas
push
mov
push
xchg
or
xchg
jo
sbb
fs
rol
dec
leave
or
jmp
movs
call
xor
retf
inc
pop
xor
(bad)
sbb
out
movs
mov
inc
xchg
cwde
fld
push
push
cs
fnstsw
add
sahf
sbb
sbb
cld
xchg
pop
lahf
in
int3
mov
xchg
sub
push
into
xchg
inc
lahf
and
xlat
mov
fidiv
ds
adc
stos
mov
sbb
jb
aam
test
aas
pop
xor
xchg
xlat
mov
jg
adc
das
lods
in
iret
sar
ja
mov
lds
dec
pop
pop
jmp
mov
sbb
push
mov
jne
and
mov
les
and
lock
xor
outs
shr
lock
int
icebp
cmp
je
scas
mov
sbb
sahf
aaa
push
inc
ins
out
mov
imul
lahf
mov
mov
xchg
fwait
out
push
lds
sbb
aaa
add
das
scas
mov
or
cmp
repz
sub
pop
adc
cmp
xchg
outs
aad
jb
not
lahf
cdq
push
mov
mov
jl
ret
push
pop
push
scas
fld
(bad)
aam
pop
fdiv
adc
lock
fcom
pop
fmul
cmp
ja
cwde
aas
and
es
push
inc
pop
ret
nop
(bad)
popa
jo
dec
sub
cmp
dec
loop
cmp
ja
stos
stc
mov
add
mov
xchg
ror
test
loopne
adc
mov
out
add
push
sar
lods
scas
(bad)
sbb
aam
iret
popa
pusha
inc
mov
enter
mov
cmps
xchg
stos
cmc
loopne
adc
jne
or
daa
aam
mov
loopne
sar
jbe
cdq
dec
and
xchg
(bad)
pop
call
ja
mov
mov
(bad)
pusha
mov
pop
pop
jmp
leave
xor
dec
(bad)
pop
adc
mov
mov
popf
push
xchg
repnz
sar
and
retf
(bad)
pop
cmps
dec
gs
aad
out
(bad)
fisttp
aad
add
(bad)
mov
es
mov
arpl
mov
xchg
push
dec
in
jecxz
(bad)
jmp
mov
shr
sar
xor
mov
iret
jp
pop
pusha
(bad)
daa
mov
pop
stos
cli
hlt
adc
mov
sahf
sbb
xchg
push
ja
or
push
fs
mov
inc
mov
retf
call
or
xchg
mov
stc
outs
jge
jge
stos
and
jne
into
jno
dec
in
push
data16
(bad)
jne
cmp
mov
xor
adc
loop
mov
stos
adc
ja
xchg
adc
push
sahf
sub
sub
cli
fwait
arpl
mov
xor
data16
and
push
mov
dec
arpl
inc
and
mov
aam
adc
pop
push
(bad)
pop
es
repnz
es
push
int
xchg
xchg
xor
test
add
sbb
movs
(bad)
jo
adc
cmp
cdq
sbb
pushf
loope
mov
jno
es
sub
call
sbb
neg
or
iret
out
(bad)
adc
fld
add
sbb
int3
or
inc
inc
cmp
sub
js
push
repz
xchg
cmp
bound
mov
fcmovne
sbb
outs
jbe
jne
mov
fdivr
retf
mov
jp
fs
out
(bad)
cmovs
jmp
int
out
jecxz
mov
mov
ins
inc
cmp
test
(bad)
cmp
data16
dec
mov
movs
dec
test
mov
shl
cwde
or
pushf
pop
stos
xchg
scas
pusha
icebp
push
(bad)
(bad)
sub
adc
xor
pop
jp
jg
push
ret
lods
sub
clc
(bad)
xchg
inc
sbb
pop
jae
xor
cmc
or
or
imul
push
fdiv
mov
cmc
jno
stos
pop
repz
into
add
xor
sbb
adc
sbb
sbb
loop
mov
push
mov
es
(bad)
test
cld
ds
pop
xor
ins
adc
sbb
jnp
cmp
jge
mov
mov
jne
sbb
cmp
and
jae
inc
pop
fstp
es
std
gs
mov
test
mov
retf
enter
jns
inc
sub
inc
mov
cmp
mov
mov
xchg
dec
mov
frstor
add
hlt
fidiv
call
xor
stos
ds
pop
mov
pop
add
add
cli
mov
test
mov
je
mov
sbb
push
int3
fisttp
push
out
loope
jmp
imul
cmps
cmp
push
lahf
loopne
jo
rcr
xor
jmp
lods
xchg
lock
add
adc
push
lods
inc
loop
nop
mov
adc
xchg
push
pop
shr
sbb
(bad)
mov
dec
scas
and
bound
jg
ss
dec
cli
out
pop
in
dec
jmp
rcl
in
fwait
addr16
cmps
iret
sbb
fdiv
shl
cmp
xor
xchg
jae
stos
shl
pushf
pop
mov
rcr
stc
fimul
dec
cvttps2pi
mov
lock
jno
in
dec
and
lahf
sbb
movs
fadd
xor
sub
popf
outs
and
xchg
adc
test
call
inc
ds
sub
jno
jmp
pop
jno
call
or
fisubr
jmp
mov
push
mov
scas
call
jne
xor
and
cmps
or
cmp
call
or
mov
mov
fnstcw
and
sub
inc
in
imul
add
pop
dec
pushf
stc
jl
sbb
push
sar
retf
repnz
call
inc
push
repnz
inc
imul
in
scas
mov
mov
sub
test
scas
lock
sbb
rcr
leave
pop
shl
rcr
out
adc
(bad)
dec
mov
mov
ins
inc
adc
xor
outs
dec
adc
xchg
mov
adc
xchg
repz
dec
rcl
sbb
aam
nop
les
or
sbb
shl
rcl
rol
sub
cld
xchg
cmps
jp
mov
cmp
xchg
in
test
jge
adc
mov
mov
mov
inc
iret
add
add
push
fdiv
xor
nop
adc
fnstcw
push
jecxz
rol
jl
lds
mov
aad
int3
mov
sbb
push
ds
icebp
or
clc
or
rol
fbstp
das
ror
imul
mov
add
sbb
jge
jmp
xchg
sub
daa
fld
shr
ret
out
or
xchg
pop
inc
nop
in
imul
test
cmc
or
shl
xor
adc
rep
sbb
and
xchg
push
cmc
(bad)
mov
mov
sbb
(bad)
fnstsw
jg
jmp
pop
daa
cmp
add
ret
xchg
add
dec
ins
loopne
jno
jmp
pop
in
adc
adc
adc
push
(bad)
je
mov
xor
bound
pop
call
(bad)
cld
loopne
jne
ret
les
adc
push
es
loopne
addr16
sbb
jp
xchg
out
loop
xchg
jae
out
pop
dec
mov
dec
pop
xchg
ss
fistp
adc
cmp
push
push
ins
arpl
dec
test
lock
and
sbb
add
js
ffree
cmp
xchg
pop
leave
jmp
enter
shr
imul
add
imul
pop
outs
push
ja
fwait
push
xchg
add
mov
out
std
xchg
push
sbb
mov
(bad)
fisubr
dec
cmps
jge
xchg
popf
inc
rol
mov
aaa
data16
sub
out
ja
lods
in
mov
dec
je
addr16
mov
test
popa
shl
(bad)
sub
sbb
or
call
outs
mov
outs
pop
das
adc
mov
sbb
dec
gs
and
and
jmp
pusha
and
adc
popa
lahf
xor
mov
andps
and
dec
icebp
adc
movs
push
test
dec
dec
(bad)
repz
jp
addr16
mov
int
clc
scas
jo
dec
inc
shr
call
ret
lds
ins
repnz
loopne
or
loop
mov
dec
retf
pushf
cmp
mov
mov
jp
sahf
jb
stc
into
push
inc
xchg
push
pop
loope
jnp
mov
mov
cs
mov
jb
sbb
mov
dec
and
xchg
test
mov
fsub
mov
fwait
sub
jl
ds
sub
ins
outs
loop
push
jl
inc
adc
scas
arpl
seto
popa
ja
xchg
dec
pop
test
daa
cmp
out
mov
push
cmp
icebp
sub
movs
mov
or
ret
jbe
jp
inc
ffree
mov
mov
test
ins
das
cwde
popa
test
push
xor
test
fdiv
lock
leave
clc
xlat
arpl
sti
adc
pop
ins
mov
imul
popf
mov
cmp
in
mov
outs
sbb
and
pop
enter
jbe
ror
cmps
xor
pushf
adc
sbb
inc
dec
mov
(bad)
call
aam
data16
add
scas
xor
data16
in
xor
mov
or
push
popf
retf
sbb
xor
pop
and
fisub
ret
dec
cmps
pop
stc
ds
pop
jns
and
jecxz
fwait
sbb
push
ja
in
rol
xchg
xchg
pop
fidiv
or
dec
pusha
xor
pop
xchg
sbb
popf
sub
cld
pop
jp
dec
inc
mov
test
xchg
es
imul
and
lods
push
and
sub
jmp
pop
loope
sbb
ja
push
stos
es
fst
add
xchg
push
xor
dec
nop
xor
jb
test
jp
adc
retf
out
les
inc
out
enter
movs
push
xor
push
dec
outs
addr16
ja
or
mov
jp
ins
and
rcl
movs
mov
ftst
popa
mov
push
cmp
test
push
xor
popa
stos
add
loopne
inc
xchg
jg
pop
nop
retf
and
aaa
adc
movs
mov
out
nop
pop
jnp
loop
and
mov
xchg
jno
dec
(bad)
stos
pop
inc
xor
mov
cwde
adc
mov
jecxz
popa
jl
push
xchg
retf
idiv
pop
mov
jno
aam
adc
(bad)
cdq
add
sti
xchg
call
aam
popf
pushf
add
stc
inc
mov
jp
test
or
xchg
jbe
xor
mov
enter
add
popa
(bad)
sub
push
cmp
cmp
mov
mov
xchg
ds
mov
push
add
jp
pusha
push
enter
sbb
scas
add
hlt
rcl
mov
neg
cmp
dec
or
xchg
cld
jge
xchg
mov
mov
or
rcr
fs
push
lahf
jno
daa
or
aaa
sbb
or
dec
push
and
dec
mov
imul
sbb
xor
js
addr16
xor
jne
int3
inc
test
out
pop
into
inc
pop
ret
ins
fmul
shl
cmc
push
leave
dec
mov
push
dec
sbb
adc
sbb
mov
sbb
repnz
nop
and
pop
jb
stc
sbb
aad
sahf
adc
(bad)
adc
inc
ja
xchg
(bad)
xchg
(bad)
xor
pop
pop
(bad)
add
lea
mov
jge
fidivr
xchg
mov
push
pusha
(bad)
sub
pop
fidiv
sub
aaa
in
and
dec
sar
xchg
rcr
cmp
test
inc
in
push
dec
sub
sbb
loop
adc
bound
(bad)
call
ficom
add
sbb
sti
lock
sbb
aad
or
or
xchg
xor
jns
inc
jp
stos
mov
(bad)
inc
or
inc
ja
push
xor
cwde
inc
lods
lahf
xor
aas
xor
push
nop
sahf
push
sbb
lods
push
mov
popa
pop
xlat
jmp
jle
retf
mov
pop
pop
test
mov
mov
sub
xor
push
lods
test
dec
and
fmul
rcl
xor
xchg
xchg
(bad)
and
cmps
loop
push
das
ja
jg
bound
pop
aad
push
fimul
add
es
cmp
(bad)
jae
mov
rcl
sub
test
gs
mov
sbb
cmp
and
cmp
jl
cmc
bound
jl
enter
push
inc
inc
pop
adc
aas
xor
sti
inc
mov
mov
ror
mov
out
pop
iret
test
shl
in
xlat
shl
or
xchg
ret
mov
imul
icebp
retf
jne
hlt
mov
or
test
pop
push
cmp
and
adc
push
scas
mov
neg
cs
shl
jge
adc
adc
pop
push
std
ret
mov
lahf
faddp
mov
enter
out
jns
push
movs
jnp
mov
inc
jl
xchg
mov
or
push
test
jecxz
mov
push
out
aaa
jmp
inc
call
daa
cli
push
aad
shr
outs
jmp
retf
xchg
add
fldenv
xchg
cwde
in
push
push
cwde
mov
mov
outs
mov
adc
adc
(bad)
out
pop
pop
shl
jmp
aas
mov
(bad)
cdq
push
movs
jb
jmp
je
inc
cmp
movs
clc
cs
fsubr
push
jno
pop
nop
sar
xor
adc
cmp
push
mov
xor
fist
push
jp
xor
mov
sub
inc
data16
je
loopne
dec
int
inc
outs
jnp
push
and
fild
add
pushf
pop
and
inc
dec
int
sahf
cmp
push
pop
sub
xchg
nop
js
push
mov
jg
clc
mov
push
(bad)
cli
gs
in
test
mov
(bad)
jmp
mov
test
xchg
ds
(bad)
lods
daa
nop
cmps
ret
in
sbb
add
js
movs
(bad)
push
mov
rcr
jnp
(bad)
ss
mov
repnz
icebp
add
and
xor
cmp
jno
sub
test
mov
dec
hlt
cmp
loopne
cmps
(bad)
mov
aad
mov
aam
shr
fsqrt
test
loope
xor
xchg
mov
mov
sbb
outs
scas
ret
and
mov
jnp
fiadd
cmps
dec
cmp
jno
dec
and
in
adc
mov
test
mov
mov
sub
mov
cs
leave
mov
jb
push
adc
call
pop
stc
inc
arpl
dec
(bad)
nop
cld
fs
stos
call
pop
dec
xchg
pop
pusha
add
mov
(bad)
clc
or
mov
or
xchg
aam
psubd
mov
retf
jmp
popa
out
leave
out
cmp
nop
inc
(bad)
addr16
jecxz
ret
add
mov
arpl
and
(bad)
rol
frstor
xchg
add
data16
loopne
les
sub
bound
in
test
pop
dec
jle
lds
movs
mov
jnp
dec
pop
ja
xchg
xchg
push
adc
inc
xchg
xlat
mov
mov
nop
mov
cli
pop
aam
out
mov
std
imul
ret
test
clc
jecxz
lock
mov
push
push
jl
mov
xor
fcomp
pop
cmp
sbb
push
int3
xchg
pop
sub
std
in
mov
and
cmp
std
and
les
mov
add
dec
ja
test
sub
div
lahf
lea
mov
sbb
pop
out
nop
imul
dec
in
lods
fcomp
ret
push
cmps
pop
jns
int3
(bad)
mov
out
xchg
mov
jne
in
nop
mov
pop
mov
push
cdq
xchg
and
les
(bad)
jle
add
scas
sbb
or
ja
and
cmc
jne
sar
push
ja
pop
xchg
jmp
fidivr
push
test
cmps
test
add
loope
out
mov
imul
pop
jne
push
inc
mov
or
or
cwde
fmul
out
mov
xchg
push
add
jbe
jae
fld
cmp
movs
mov
fisttp
dec
mov
cwde
adc
shrd
(bad)
dec
dec
jnp
inc
nop
push
out
cmp
sub
cli
test
retf
out
cmp
es
scas
add
arpl
mov
aad
call
test
repz
xchg
repnz
push
sbb
sti
aam
iret
popf
cmp
in
out
sbb
mov
shl
in
(bad)
out
outs
sahf
pop
into
loop
mov
or
hlt
mov
rol
sub
and
cmp
rol
sub
push
cmp
mov
jl
jae
pop
(bad)
test
cmp
jns
sub
ss
(bad)
ins
and
pop
mov
cmp
cwde
imul
sti
stos
push
int
pop
jae
in
jmp
jle
dec
dec
in
daa
je
aam
je
js
movs
pcmpgtw
jmp
ret
test
addr16
xor
push
dec
jbe
daa
xchg
ins
xor
and
dec
jecxz
(bad)
pop
mov
call
mov
fstp
or
(bad)
stos
test
mov
out
shr
addr16
sbb
jno
pop
push
pop
fld
loope
sti
sbb
mov
jg
pop
jl
dec
mov
xor
scas
test
or
ins
sbb
mov
push
or
pop
xchg
in
in
in
xor
scas
idiv
mov
jl
cmp
call
xchg
pop
movs
dec
sbb
sub
sahf
push
push
or
push
je
cmp
cmp
add
out
cmp
jnp
rol
mov
jl
in
adc
jmp
xchg
stos
data16
in
or
aas
push
or
movs
mov
test
cmc
aam
mov
stos
dec
mov
pop
xor
sub
outs
xor
loope
test
or
std
mov
pop
cmp
dec
in
add
cld
retf
adc
or
scas
test
outs
cmp
aaa
xchg
sub
or
ret
sbb
jae
jbe
ins
xlat
xlat
jmp
sti
ret
in
loope
repz
mov
jae
pop
mov
retf
dec
xlat
pop
jge
sahf
ret
jmp
and
pop
hlt
sub
aas
lods
clc
ss
xor
jnp
mov
inc
addr16
jecxz
xchg
push
leave
cmp
loopne
xor
xchg
test
test
and
mov
cvttps2pi
popf
push
dec
cmp
push
in
loope
sar
leave
add
add
xor
sbb
retf
fild
pop
shl
cmp
(bad)
sbb
pop
mov
cmp
cmc
outs
stos
push
or
lea
xchg
lock
or
cld
sub
dec
inc
push
mov
int3
mov
adc
pop
mov
xlat
hlt
sbb
inc
jnp
out
sub
and
pop
xchg
cmp
(bad)
iret
push
retf
mov
in
mov
mov
jo
and
mov
mov
loope
or
icebp
cmp
in
test
or
fs
aam
mov
xchg
mov
test
mov
test
data16
out
dec
out
out
pop
scas
mov
xchg
jle
dec
mov
jecxz
pop
scas
loopne
xor
mov
js
sbb
xor
mov
clc
mov
and
or
jl
arpl
imul
iret
icebp
rcl
fadd
jmp
sub
push
mov
sub
cld
dec
pop
sahf
outs
hlt
cmp
(bad)
popf
aad
nop
aaa
push
outs
jb
lds
test
push
xor
and
aad
into
iret
(bad)
cdq
stos
xchg
das
enter
push
mov
lds
xlat
cs
adc
loopne
call
lods
sub
inc
and
or
sub
cmp
mov
jo
push
push
add
pop
aaa
das
(bad)
pop
cmp
mov
(bad)
call
jno
repz
push
add
mov
adc
retf
jl
mov
sub
inc
inc
(bad)
mov
or
push
aam
push
mov
mov
jne
mov
jp
cwde
icebp
imul
test
scas
or
sbb
jmp
rcl
xlat
push
inc
push
into
jbe
mov
cs
xchg
xlat
mov
movs
dec
dec
js
fdiv
shr
dec
mov
in
ss
in
out
mov
push
sti
jp
and
inc
mov
adc
fldenv
stc
bound
cwde
mov
inc
ret
loop
xor
cld
lea
and
daa
pop
sbb
or
int
add
jmp
lods
call
int
push
fcomip
mov
jae
das
ins
adc
cwde
jmp
mov
push
push
mov
mov
jno
lahf
mov
cmp
inc
mov
dec
inc
test
outs
loope
adc
sbb
scas
les
mov
(bad)
fs
sbb
pop
repnz
push
or
test
cmps
aad
stos
jnp
ja
adc
movs
pop
(bad)
jae
cmp
push
jno
and
inc
imul
push
inc
or
push
or
add
fs
es
mov
adc
mov
lock
test
mov
mov
dec
mov
mov
push
aad
daa
or
mov
xchg
jb
push
and
mov
sub
jmp
push
push
push
inc
fidiv
es
fbstp
movs
mov
and
or
cli
(bad)
adc
out
into
sbb
mov
jnp
aam
shr
loop
fs
not
and
or
stos
lea
sbb
(bad)
dec
addr16
sub
jmp
mov
inc
dec
xchg
ins
dec
retf
adc
mov
xchg
mov
xor
xchg
add
retf
sar
sbb
sub
ins
mov
mov
push
pushf
pop
jl
scas
mov
mov
shl
adc
adc
dec
aam
in
mov
push
pop
imul
out
std
mov
push
mov
out
cmp
sbb
xchg
and
push
mul
inc
lods
sahf
leave
in
dec
shl
in
in
cmp
pop
jbe
lods
loope
jl
in
outs
sbb
data16
cmc
das
inc
push
movs
sub
in
add
and
and
mov
jns
mov
cmps
push
mov
les
fmul
add
add
sub
pop
xor
cmp
std
push
out
jns
lock
jb
add
(bad)
shr
cmp
into
fidiv
xchg
mov
aam
push
aas
rcr
stc
rcr
sub
(bad)
jae
in
cmc
dec
adc
pushf
dec
bound
jg
idiv
std
sub
repnz
sbb
in
push
sub
inc
not
lds
test
sbb
es
inc
std
les
out
sub
hlt
aas
xor
icebp
ret
xor
fdivr
adc
and
push
les
into
nop
ds
test
push
xchg
hlt
icebp
jns
(bad)
cmp
push
push
xor
jno
popa
in
movs
mov
mov
popf
lock
ror
shl
mov
inc
pop
(bad)
jmp
dec
out
mov
mov
mov
push
clc
cmp
mov
or
cld
jne
sub
loop
loopne
add
in
sti
stos
pop
dec
mov
jecxz
rol
xchg
std
inc
inc
sbb
movs
loope
inc
inc
jno
add
jnp
mov
add
neg
shr
ins
mov
xchg
mov
inc
aam
fmul
test
loope
add
inc
clc
pop
loope
mov
lock
mov
cmps
sub
imul
adc
adc
pop
test
ss
retf
(bad)
hlt
cmp
fld
(bad)
arpl
sub
jle
jns
or
mov
sub
mov
push
aam
shl
fcom
into
add
cdq
cs
mov
pop
in
cdq
cs
push
mov
and
sub
dec
jae
pop
cs
imul
into
xchg
push
xchg
cmp
fst
xor
neg
sbb
cmp
loop
dec
mov
ja
and
xor
popa
inc
pop
sbb
hlt
adc
mov
or
xchg
mov
xlat
in
lods
fs
cmp
cmp
imul
pop
dec
mov
sbb
adc
les
mov
out
js
scas
shl
arpl
out
pop
iret
aas
mov
sub
iret
cdq
ret
dec
push
fbld
adc
cmp
(bad)
mov
xchg
inc
jae
add
add
mul
jge
stos
cmp
popf
pop
loope
fwait
sar
lods
(bad)
cmp
inc
fwait
aad
or
fsubrp
cmp
aaa
adc
sub
fistp
das
sbb
mov
loope
push
fadd
scas
inc
dec
gs
ror
mov
out
mov
popa
xor
inc
test
dec
xchg
cdq
or
repz
pop
jnp
dec
jne
pop
int3
shl
add
les
scas
xchg
jne
ins
pop
mov
movs
out
dec
ficomp
loope
cmp
sub
sbb
fwait
and
sbb
fs
jne
add
adc
xchg
cmps
xlat
push
in
ins
adc
std
lods
pushf
loopne
push
div
(bad)
das
call
je
or
mov
inc
out
add
push
icebp
(bad)
cli
mov
xlat
add
pop
clc
test
movs
aaa
sbb
std
out
stos
mov
pop
imul
add
jge
cmc
retf
mov
jmp
movs
pop
inc
jns
je
rcl
loope
add
jl
push
out
lahf
rcr
xor
pusha
xchg
xchg
loop
fwait
mov
xor
sti
xor
pop
arpl
xchg
or
adc
xchg
popa
adc
out
out
push
mov
jbe
add
mov
cmp
dec
rol
fisub
in
mov
inc
es
mov
fidiv
adc
adc
cmp
popa
cmp
xchg
or
add
mov
js
inc
push
dec
mov
ret
xor
je
adc
xchg
fmul
mov
popa
(bad)
hlt
sbb
adc
push
sbb
ror
sub
call
outs
fidivr
enter
jo
jb
and
sub
and
test
xor
sub
mov
cli
std
pop
inc
mov
fcmovu
push
jbe
adc
push
xchg
sub
mov
mov
pop
stos
in
cmp
cli
repz
dec
mov
adc
mov
call
lea
jecxz
lock
outs
xor
jae
(bad)
scas
shl
jo
xor
lods
(bad)
sbb
xor
addr16
add
jno
enter
in
add
call
ret
scas
dec
pop
inc
inc
push
mov
xchg
mov
mov
adc
push
inc
addr16
shl
rcr
or
jbe
add
adc
or
push
adc
xor
mov
test
out
and
sub
repnz
or
sub
xchg
mov
sub
pushf
cld
sahf
leave
cmc
ins
cmp
std
mov
test
stos
xchg
inc
into
cmps
push
(bad)
fmul
xlat
lods
ins
imul
clc
fisttp
(bad)
data16
js
xchg
push
add
xchg
jns
(bad)
push
ins
pop
scas
mov
mov
aaa
mov
iret
cmps
pop
movs
je
cmp
imul
fs
pusha
mov
lock
inc
push
mov
sub
push
call
mov
pop
mov
jecxz
repnz
adc
mov
sub
(bad)
test
fbld
push
leave
xchg
add
jp
xchg
xchg
jmp
sti
sub
mov
xchg
add
sbb
adc
push
sub
jno
into
or
adc
sbb
xlat
adc
retf
rol
imul
or
call
dec
pop
mov
jb
xor
ret
(bad)
or
scas
rol
or
mov
ret
add
cli
aam
aaa
movs
dec
cdq
or
or
fdivr
dec
cs
(bad)
sub
adc
push
cmp
and
movs
mov
pop
in
or
mov
imul
xor
push
sbb
sub
sysexit
std
fisttp
mov
mov
jecxz
aaa
in
and
mov
leave
sbb
fadd
rol
(bad)
cmps
in
pop
inc
(bad)
sbb
pushf
pop
shl
mov
aad
mov
(bad)
ds
push
mov
and
pop
shl
mov
pop
adc
push
lock
cmps
adc
sbb
imul
jl
call
pop
mov
fst
pop
xchg
xchg
test
and
mov
test
sbb
pop
test
jg
or
inc
mov
aam
imul
xor
ins
arpl
cmp
sbb
pop
ins
addr16
ins
cmp
dec
test
add
pop
jmp
xchg
pop
sub
fld
mov
lds
and
dec
push
(bad)
out
(bad)
outs
int3
xor
mov
shr
aas
inc
sti
mov
ss
dec
(bad)
cld
sub
pop
push
xor
(bad)
jmp
or
shl
dec
repnz
cdq
jno
pop
xchg
xor
xchg
lods
mov
sub
ffreep
xchg
rol
jb
(bad)
cmp
and
jge
(bad)
loopne
inc
std
or
dec
cmc
imul
xchg
mov
inc
mov
dec
mov
xor
and
push
cwde
push
lahf
push
jl
and
sbb
inc
(bad)
lock
jbe
sub
mov
fld
lods
mov
and
aam
jmp
pop
or
inc
sub
mov
mov
(bad)
sub
push
cwde
xchg
ins
add
dec
rol
inc
gs
xchg
out
mov
or
sbb
pop
gs
jmp
cwde
aas
cwde
scas
pusha
push
jae
jg
xchg
lock
cmps
std
sbb
ins
jecxz
cli
pop
leave
pop
out
jmp
mov
imul
or
mov
daa
(bad)
std
or
js
inc
mov
sti
lahf
cmp
xor
xor
dec
rcr
mov
mov
push
push
mov
fistp
in
inc
dec
hlt
and
add
sbb
push
dec
mov
pop
add
sbb
adc
xor
jg
(bad)
fcomp
mov
xchg
push
scas
retf
mov
and
sbb
enter
sub
lods
movs
mov
and
adc
cmp
lods
cwde
and
fdiv
js
jo
aaa
mov
aad
inc
push
(bad)
xor
call
(bad)
xor
mov
(bad)
jo
fidivr
mov
(bad)
xor
sbb
sahf
push
loop
xchg
bound
(bad)
push
aad
jno
dec
or
fstp
in
lahf
jmp
loope
jb
ins
mov
sbb
or
mov
sub
xlat
call
retf
xor
push
and
mov
push
jbe
xchg
mov
test
retf
lods
xchg
jle
fwait
lahf
pop
pop
iret
push
dec
out
mov
cmp
clc
mov
call
or
cmps
out
push
in
inc
mov
repz
test
int3
pop
add
add
pop
jbe
dec
out
sbb
out
(bad)
aas
out
cmp
xchg
xchg
mov
cmp
jmp
xchg
or
dec
(bad)
aad
add
int
adc
mov
cs
daa
std
lds
or
inc
les
xchg
mov
cs
push
or
or
pop
jl
cmp
bound
sbb
jns
and
loope
mov
xchg
pop
dec
enter
push
xchg
inc
int
xor
loop
data16
jnp
jns
mov
dec
xor
xchg
push
mov
fwait
pop
loopne
inc
jbe
add
mov
adc
xchg
pop
mov
xchg
sub
xor
aam
mov
add
pop
(bad)
pop
mov
mov
les
popf
xor
mov
popa
or
sti
pop
call
rcl
(bad)
push
movs
pop
fnstenv
jle
cmps
movs
add
add
adc
sbb
push
pop
outs
fs
push
inc
lahf
mov
cmp
retf
aad
inc
inc
mov
test
inc
or
aad
repz
push
fistp
mov
dec
jo
test
jl
(bad)
cmp
lods
ja
fsubr
mov
or
aas
xor
test
movs
ins
icebp
adc
add
jmp
mov
inc
pusha
add
ret
ins
loope
add
or
jl
fisub
in
xchg
in
retf
in
push
fwait
pusha
jbe
retf
leave
lds
lea
xchg
out
mov
js
sbb
sar
ss
syscall
test
popa
nop
inc
xchg
dec
mov
test
nop
ret
sub
jns
gs
mov
mov
outs
and
out
jne
jp
int
rcr
xchg
jmp
out
mov
scas
(bad)
outs
int3
push
or
push
icebp
push
xor
sub
and
mov
leave
push
ins
leave
ja
sbb
mov
add
jle
(bad)
sub
mov
lock
out
pop
mov
enter
int3
sti
or
xchg
jbe
aad
dec
test
neg
ret
inc
push
add
pop
or
daa
adc
fwait
mov
dec
adc
(bad)
into
fidiv
(bad)
or
ins
xor
in
xor
mov
(bad)
pop
mov
mov
mov
push
xor
addr16
test
lods
jecxz
push
stos
fisub
vandps
(bad)
test
add
arpl
dec
fimul
test
push
fdiv
mov
aad
xchg
cwde
jp
mov
lds
cmp
(bad)
mov
jge
pop
sahf
(bad)
pop
mov
mov
sub
rol
pop
fldcw
sub
shr
push
cli
inc
push
xor
fmul
add
rol
jae
inc
(bad)
xchg
js
fcom
pop
cmp
inc
push
lea
stos
inc
mov
or
mov
and
and
fild
xchg
out
add
xor
dec
mov
jmp
es
dec
dec
pushf
stc
shr
mov
and
les
xlat
inc
ja
pop
xchg
sahf
data16
mov
dec
sti
xor
and
push
ins
xchg
sub
in
popa
frstor
jb
sar
add
xor
pop
or
push
inc
sub
adc
xor
fs
das
inc
mov
dec
icebp
jae
cmp
imul
arpl
pop
in
mov
push
pop
push
test
inc
mov
mov
repz
jge
enter
push
fsub
fsub
mov
aaa
fwait
jne
sub
mov
mov
push
push
cmp
not
mov
sub
lahf
loope
sub
or
rcr
(bad)
(bad)
retf
int3
sar
sub
jnp
movs
cmp
outs
xchg
jmp
push
push
lds
ds
jmp
mov
mov
or
out
pop
mov
loope
push
cmps
mov
jl
cli
out
cdq
in
adc
cmp
pop
push
mov
stc
jbe
mov
dec
mov
cmc
ds
sub
pop
fcom
jle
dec
dec
or
movs
imul
jmp
sti
push
mov
ret
mov
jl
adc
iret
mov
in
adc
cs
inc
in
cdq
mov
pop
pop
stc
icebp
push
in
les
outs
(bad)
retf
sbb
outs
aaa
add
cmp
and
int
add
leave
leave
fwait
inc
jb
call
shl
test
dec
daa
push
dec
mov
mov
pop
adc
(bad)
fdiv
xor
scas
or
mov
stos
pop
lahf
inc
ret
mov
xor
lahf
jo
enter
jmp
test
cmp
adc
in
in
dec
ror
dec
and
mov
jns
add
adc
cmp
(bad)
jl
not
repnz
xchg
push
ret
movs
stc
loopne
xor
pop
shr
cmp
test
loopne
sar
aas
mov
add
(bad)
pop
ins
mov
mov
and
popf
pop
aam
icebp
sub
(bad)
clc
push
cmp
mov
xor
xor
enter
push
inc
les
shl
mov
add
ja
data16
and
cmp
xor
mov
add
and
in
pop
std
icebp
dec
gs
mov
and
cs
dec
mov
ret
loop
daa
jbe
xchg
mov
dec
(bad)
xor
pop
mov
mov
std
cmp
adc
pop
sbb
shr
dec
mov
pusha
xchg
push
fisubr
cwde
ret
mov
xchg
iret
adc
sbb
je
inc
call
jle
ret
jb
push
push
je
sub
out
jmp
dec
dec
gs
mov
add
jmp
xchg
fbld
(bad)
bnd
loopne
out
dec
and
imul
sti
pop
push
cmp
fnsave
pop
aad
jge
shl
and
jecxz
push
jbe
sar
push
cmp
test
int
test
enter
test
dec
test
xor
mov
xor
repnz
ficom
std
or
test
xor
fwait
and
push
sub
cmc
xchg
add
les
mov
mov
call
fidiv
jae
mov
call
cli
idiv
(bad)
std
sub
pop
dec
std
dec
adc
push
add
ja
lods
xchg
(bad)
movs
push
sahf
mov
je
sbb
mov
ror
xchg
mov
mov
or
mov
fmul
enter
xchg
mov
mov
pop
jmp
or
mov
or
and
xchg
call
fisubr
xor
mov
shl
push
xor
hlt
ret
xchg
jne
retf
pop
push
sbb
fdivr
mov
out
xchg
inc
hlt
fdivr
jg
mov
add
aad
jl
ucomiss
mov
or
xchg
sti
out
mov
imul
dec
rol
xchg
sbb
sub
out
push
gs
push
push
outs
sub
xchg
jb
mov
lahf
xor
mov
sar
es
and
adc
sbb
adc
dec
jae
push
and
xor
inc
and
xchg
and
xlat
es
int3
data16
lods
inc
cmp
rcr
lahf
push
sub
mov
gs
in
mov
test
xchg
jg
xchg
mov
and
popf
cmp
adc
jbe
daa
fdiv
outs
cmp
loope
add
adc
and
jae
fldenv
mov
ret
add
pop
fidivr
xor
mov
ror
fidivr
lods
adc
sub
imul
dec
xchg
adc
inc
arpl
xchg
cmp
fstp
int3
pop
jb
adc
test
or
dec
jmp
sub
(bad)
out
fild
inc
cmp
fisttp
scas
mov
jmp
sbb
xchg
mov
iret
pop
retf
xchg
aas
push
xchg
fwait
rol
push
aaa
pop
test
adc
xor
sti
mov
and
scas
add
mov
adc
out
sub
inc
or
push
push
fcmove
cmp
inc
ins
test
call
call
mov
or
hlt
jo
jne
push
cdq
jge
leave
sub
sub
adc
mov
dec
jbe
ss
or
stc
outs
repz
(bad)
or
(bad)
out
pop
jmp
dec
into
pop
retf
pop
push
xchg
or
mov
(bad)
and
xor
mov
mov
mov
std
mov
and
mov
stos
mul
sbb
push
es
mov
sahf
inc
mov
inc
mov
lea
leave
test
xchg
rcl
test
les
push
pusha
add
cmp
push
push
retf
bound
inc
mov
in
cli
sub
ror
dec
push
pusha
rol
movs
jo
sub
repnz
sti
scas
stos
add
cdq
les
inc
(bad)
sar
ret
imul
nop
xchg
lea
pop
sub
jle
nop
int3
(bad)
fdiv
mov
lods
mov
dec
sti
mov
retf
xchg
stos
jnp
outs
in
pop
popa
mov
inc
fistp
mov
popf
ret
ins
call
or
xor
pop
cmp
mov
jle
add
inc
mov
les
push
mov
ins
and
sbb
(bad)
dec
(bad)
arpl
and
jb
or
push
add
cmp
and
jg
xchg
inc
xchg
neg
aas
shl
and
xchg
les
add
xchg
test
cmp
inc
stos
ret
jge
daa
stc
or
scas
cli
fist
arpl
xor
(bad)
cmp
fsub
xor
fldenv
push
out
or
add
int
adc
sar
mov
movs
mov
sub
nop
sbb
sub
jmp
and
(bad)
mov
cmp
scas
and
push
or
test
jg
movs
inc
or
jb
lahf
jmp
or
sub
mov
retf
maskmovq
not
push
(bad)
fld
ficom
fld
mov
sti
inc
(bad)
sti
pushf
mov
pop
or
push
xchg
call
inc
sub
xlat
shl
clc
stc
adc
mov
cmp
mov
ror
inc
ucomiss
cli
add
xchg
je
add
inc
(bad)
mov
sub
dec
pop
mov
out
das
leave
clc
inc
xchg
dec
xchg
daa
fistp
hlt
imul
jns
jno
sub
or
ins
mul
icebp
mov
out
cs
mov
and
addr16
nop
iret
jp
adc
cmps
(bad)
and
retf
das
jmp
dec
ret
test
in
push
and
mov
or
loope
fidivr
xor
mov
jbe
pusha
mov
pop
cli
stos
push
out
retf
push
imul
pushf
cmp
xchg
pop
fsubr
cmp
sub
cmp
xlat
dec
lea
pop
sbb
aaa
mov
add
adc
cmp
jge
and
popa
sub
inc
mov
sbb
(bad)
mov
std
int
mov
retf
cmps
movs
adc
fld
cwde
push
xchg
mov
jne
outs
push
push
call
sub
sbb
(bad)
jae
jo
xor
mov
hlt
pop
xchg
lea
adc
(bad)
(bad)
(bad)
mov
push
or
sti
test
in
into
shl
sub
inc
arpl
mov
call
retf
sbb
mov
enter
mov
aam
cmp
jae
xchg
loopne
jg
and
jo
inc
lds
sahf
jb
imul
and
(bad)
repz
mov
adc
dec
sbb
add
leave
test
push
addr16
xor
(bad)
out
rcl
aam
stos
jnp
bound
jmp
add
inc
jecxz
xchg
shr
jo
cwde
dec
and
mov
mov
and
rcr
sbb
fs
sub
mov
mov
aas
inc
jge
int
sbb
bound
push
pop
aas
adc
xchg
repz
push
retf
sbb
xchg
pushf
ret
ss
out
xor
pop
aad
jmp
mov
lahf
cs
mov
cld
cdq
and
repz
xor
or
xchg
retf
xchg
js
jnp
daa
xchg
sub
sar
aam
data16
mov
test
sar
fmul
mov
mov
or
pop
xor
sub
or
mov
xor
mov
fld
sbb
push
cmp
mov
adc
cmp
dec
shl
fnstenv
cmp
in
js
xchg
and
and
push
in
fidivr
adc
mov
sti
push
in
neg
js
add
mov
into
jno
mov
push
cmps
inc
jns
repz
mov
xor
mul
shl
fiadd
cdq
add
call
jns
pop
test
sbb
cmp
nop
ja
movs
adc
or
repz
sbb
adc
test
mov
ret
test
pop
std
pop
movzx
mov
inc
xchg
popa
mov
mov
adc
inc
data16
inc
ins
sti
mov
xor
out
cmp
in
outs
xchg
xchg
shl
scas
push
in
sbb
jo
sti
or
xchg
jge
push
add
and
test
sbb
shl
mov
sar
jle
mov
scas
sbb
push
cmp
in
mov
popf
pop
inc
mov
leave
jo
mov
xchg
pop
ja
cmp
fldenv
cmp
jo
jo
in
jmp
mov
add
nop
test
mov
scas
aad
cmp
sub
je
mov
xchg
inc
jmp
mov
add
lods
dec
mov
xchg
je
nop
ins
xor
cmp
shl
jmp
(bad)
rcl
pop
jmp
ret
adc
fmul
dec
aad
push
inc
pop
(bad)
cs
lods
pop
dec
cwde
fdiv
inc
xor
jne
movs
jg
lds
xchg
xchg
fadd
(bad)
out
ins
push
cmp
imul
aad
shl
dec
mov
dec
ret
adc
jmp
ds
and
dec
cmps
push
fstp
mov
pop
retf
adc
(bad)
rol
add
stos
mov
je
mov
aas
push
adc
cmp
sbb
ss
mov
in
jbe
leave
push
movs
aam
sub
mov
iret
mov
mov
add
mov
push
mov
(bad)
imul
mov
sbb
and
jle
mov
test
adc
hlt
inc
or
cld
call
clc
pushf
jae
inc
(bad)
push
mov
jb
leave
xor
hlt
retf
mov
(bad)
mov
push
gs
ret
into
imul
add
or
xor
jle
aam
cmps
(bad)
js
inc
scas
dec
test
(bad)
repnz
sbb
or
mov
es
ins
mov
adc
pop
fistp
xchg
retf
mov
jge
mov
mov
into
clc
inc
call
aaa
adc
es
cmc
xchg
add
es
push
adc
dec
mov
imul
xchg
scas
and
inc
sub
add
mov
bound
pop
lods
fs
pop
xor
jge
int
mov
cmps
jmp
rol
fcmovu
out
mov
enter
fcomp
cmp
iret
inc
lock
loop
add
cmp
adc
aam
xor
or
pop
repz
inc
pop
xlat
jle
xor
fbld
jp
sub
imul
lea
mov
sbb
rep
add
retf
push
and
jge
mov
adc
xchg
mov
mov
test
jnp
mov
push
inc
mov
out
sti
mov
mov
hlt
lahf
mov
dec
jp
xor
std
imul
inc
xor
cs
mov
loop
pop
jge
(bad)
jecxz
xor
push
add
iret
or
lods
scas
add
xor
lods
sti
mov
inc
outs
test
pop
inc
dec
call
data16
and
xchg
cmps
shr
je
adc
stc
lea
test
adc
xchg
icebp
in
scas
imul
inc
add
dec
out
inc
adc
movs
retw
inc
movs
pop
xor
clc
call
add
dec
in
(bad)
sbb
sub
mov
or
call
sbb
cmc
retf
mov
fdivr
cld
shr
push
xor
mov
add
pop
icebp
dec
mov
(bad)
jmp
sub
ss
std
call
call
ds
in
aad
outs
xor
aam
je
outs
data16
push
inc
xor
push
mov
jl
mov
push
jb
or
mov
xor
shl
inc
sahf
mov
mov
sub
fisubr
ret
mov
mov
and
mov
adc
(bad)
repnz
add
mov
add
adc
pop
jl
or
mov
enter
cmps
stc
leave
ret
mov
jp
dec
lods
pop
int3
iret
xlat
xor
and
rol
leave
rol
int
cmp
repz
inc
inc
pop
xchg
(bad)
cmp
xor
cmps
xor
push
cmps
cmc
call
cdq
in
test
cli
fimul
xor
rcr
xchg
mov
mov
xchg
arpl
inc
std
mov
(bad)
sbb
mov
(bad)
arpl
jmp
add
repz
add
cwde
push
out
mov
into
adc
add
dec
mov
call
outs
enter
out
xor
ds
icebp
add
dec
lods
pushf
cmp
adc
cs
and
or
sti
adc
fimul
(bad)
test
push
in
add
inc
cld
adc
retf
push
shl
xchg
icebp
imul
movs
call
adc
fist
js
inc
pop
div
dec
mov
or
enter
cdq
mov
in
push
adc
mov
fistp
mov
js
push
fcmovnb
xchg
xchg
js
cmps
outs
mov
push
cmc
or
mov
ds
push
xchg
and
stos
sti
test
push
rdmsr
(bad)
jge
pop
ds
test
sub
aas
mov
jg
scas
add
loop
mov
call
cmp
adc
and
pop
cld
nop
cmp
or
or
iret
int3
stc
cmps
stos
pop
arpl
inc
jmp
add
out
jecxz
fs
xchg
retf
add
xor
jnp
and
jo
in
scas
sbb
cli
fcomp
sub
lods
int
rcr
jae
mov
fdiv
movs
rcl
mov
in
out
ret
pusha
inc
stos
lock
mov
lahf
aad
out
push
fnstcw
icebp
addr16
ins
pop
mov
and
std
rcl
in
aam
jne
mov
int
dec
dec
shl
aam
and
xor
shl
movs
or
and
and
stos
repnz
mov
xchg
ret
dec
imul
ss
mov
lea
push
add
dec
sti
sub
in
mov
xchg
push
shr
mov
das
(bad)
icebp
jp
or
push
sbb
inc
rcl
add
neg
xlat
retf
stc
(bad)
scas
cmc
jno
loop
push
sahf
sub
test
sbb
inc
mov
mov
sar
sbb
sahf
rol
cld
es
es
jns
popa
gs
and
in
(bad)
sub
inc
or
jbe
cmp
dec
sub
xchg
mov
sbb
and
sbb
mov
xchg
add
jno
std
xchg
xor
nop
jno
xchg
or
pop
test
or
mov
sbb
enter
rcr
mov
mov
aaa
sub
cmps
loop
jnp
jle
jecxz
mov
xchg
lods
dec
repz
pop
or
fdiv
outs
fstp
xchg
fisubr
adc
mov
mov
mov
(bad)
aaa
ret
pop
and
adc
jmp
shl
push
pop
xchg
pop
rcr
call
xor
je
adc
push
dec
loope
push
push
jp
mov
in
jp
inc
sub
xor
data16
jle
sub
inc
fprem1
outs
mov
or
sbb
adc
pop
scas
fmul
mov
or
out
push
je
pop
test
sbb
loope
and
rep
nop
bound
mov
push
push
inc
xchg
ds
cmc
add
sub
fld
imul
into
mov
fcomp
lock
out
mov
test
outs
call
pop
push
shl
shl
push
pop
or
xor
jno
scas
retf
jmp
aam
ret
and
ret
and
lock
jmp
cmp
and
ds
ss
movs
xlat
pushf
mov
outs
fcomp
xchg
fcom
inc
fnsave
inc
and
xor
inc
call
push
retf
int
xchg
and
push
(bad)
xchg
xchg
call
and
inc
adc
hlt
pop
adc
aam
bound
mov
sub
fistp
dec
rcr
fldenv
xchg
in
inc
or
pop
xlat
mov
clc
pop
loope
out
fisttp
dec
mov
loopne
sub
jne
nop
lods
and
sti
jae
adc
sti
sti
push
bound
mov
(bad)
in
mov
push
rol
out
movs
aam
cmp
aaa
lods
pushf
sub
shr
push
ret
(bad)
mov
inc
loope
xchg
gs
xor
movs
pop
push
lahf
outs
dec
dec
mov
sti
loope
and
inc
(bad)
in
xor
sbb
ds
push
or
inc
xchg
fwait
iret
and
push
rol
mov
(bad)
mov
or
mov
push
dec
clc
xor
cmp
sbb
scas
add
ja
int3
adc
fild
add
push
adc
pop
xchg
jbe
adc
adc
pop
inc
push
ret
cs
enter
inc
mov
fdivp
pop
ss
scas
pop
and
push
pop
sub
int
ficomp
movs
xchg
push
xor
or
icebp
into
or
xchg
pop
cmp
in
dec
pushf
dec
mov
xor
stc
jmp
mov
shl
mov
dec
mov
xor
push
cmp
mov
sti
lods
or
std
movs
sub
mov
stos
hlt
bound
mov
mov
cmp
(bad)
(bad)
adc
imul
iret
mov
cmp
xlat
in
mov
cmp
imul
and
retf
(bad)
in
xchg
loopne
xor
cmps
dec
scas
and
inc
aas
lods
mov
mov
mov
cmp
mov
mov
pop
test
push
dec
xchg
sub
(bad)
sbb
outs
aad
push
sbb
int3
pop
ror
add
rol
into
jno
int3
mov
mov
cmp
addr16
inc
push
cvtps2pd
sub
cmp
div
jl
ss
addr16
rol
and
stos
retf
and
dec
push
pusha
xchg
test
pop
pushf
adc
arpl
add
stos
and
jl
mov
add
mov
lock
lea
popa
hlt
and
pop
inc
jo
adc
sbb
adc
mov
pusha
dec
or
and
cld
mov
push
(bad)
xor
dec
(bad)
or
jns
iret
lds
mov
mov
retf
adc
pop
dec
out
jmp
and
xchg
jecxz
or
push
js
(bad)
or
push
addr16
movs
push
xor
inc
dec
jae
sbb
pusha
push
pop
(bad)
xchg
sahf
mov
xor
data16
jl
pop
or
pop
sbb
xchg
shr
jnp
popa
push
sub
pop
sub
dec
pop
push
mov
or
sub
push
or
es
aaa
inc
pop
fcomp
fld
ror
mov
fimul
push
out
cmp
mov
clc
mov
sub
lods
repz
sub
sub
mov
adc
in
(bad)
cmp
sar
sbb
inc
xchg
ss
iret
xadd
dec
add
jb
pop
pop
push
loop
lods
push
mov
push
es
dec
inc
fist
or
mov
aam
jl
out
and
imul
lods
and
cs
jnp
rcl
xor
xor
xor
repnz
add
jmp
int
pop
aam
test
stos
dec
jp
pop
cli
sub
jmp
sbb
mov
pop
push
or
push
xchg
pop
cli
fcomi
cmp
dec
or
call
jle
mov
fbstp
aaa
push
xchg
rcl
leave
jge
mov
dec
leave
or
push
aaa
push
jle
inc
mov
jbe
cmc
movs
rol
mov
ins
ja
sbb
stos
cmp
leave
in
mov
out
adc
stc
inc
sub
mov
fstp
lahf
pop
jb
pop
mov
(bad)
in
loopne
aam
xor
jae
(bad)
shl
dec
jnp
add
cs
out
sbb
hlt
imul
jbe
mov
ins
push
rcl
pop
pusha
or
mov
pop
mov
adc
xchg
add
jmp
arpl
ret
adc
aam
icebp
mov
jno
fwait
adc
in
inc
and
mov
outs
inc
mov
es
sbb
add
mov
loope
jnp
fisttp
cli
sahf
mov
(bad)
gs
jb
jge
enter
ficom
test
mov
test
in
xlat
inc
hlt
paddsb
push
jo
pop
int3
hlt
xchg
push
(bad)
outs
jb
sub
jnp
inc
pushf
mov
ja
jae
dec
adc
adc
ffree
aas
repz
or
rcl
mov
enter
add
sub
mov
adc
jle
outs
jno
test
mov
xchg
and
ja
inc
and
retf
pandn
push
jecxz
sub
(bad)
fcom
loope
mov
mov
pop
push
sbb
dec
xor
push
pop
lahf
shl
sti
pop
cdq
out
div
pop
pop
xchg
dec
dec
and
ret
(bad)
adc
add
mov
xor
lea
xor
xchg
sbb
mov
xor
lods
sub
jo
bound
jp
add
out
jg
jp
mov
push
push
jb
or
(bad)
repz
xchg
cmp
sub
adc
iret
and
aam
add
push
jp
xchg
aas
pop
xor
pop
inc
lods
ds
stc
mov
mov
ds
jne
clc
mov
cmp
or
jns
ins
cmp
adc
add
mov
lods
jecxz
mov
leave
add
mov
ins
mov
adc
das
and
call
popf
call
lsl
xchg
test
int
clc
dec
les
ret
ins
or
jbe
out
(bad)
jmp
push
or
mov
jmp
(bad)
xchg
test
mov
cmp
jmp
lock
push
push
dec
leave
sti
int3
pop
shr
mov
inc
lods
pushf
cmp
je
mov
pop
pop
sbb
add
jb
push
mov
retf
call
mov
addr16
and
aas
cmp
lahf
pop
ja
pop
sub
lods
int3
push
sbb
stos
mov
in
pop
je
push
mul
push
stos
es
out
or
arpl
push
push
stc
xor
adc
retf
daa
in
fs
popf
lea
(bad)
cmc
inc
and
(bad)
popa
out
pop
and
stos
push
out
mov
scas
or
add
and
rcr
les
xchg
mov
sbb
xchg
les
push
dec
add
ror
mov
sub
scas
sub
mov
xor
pop
pop
push
je
test
(bad)
fild
jecxz
(bad)
(bad)
jl
xchg
test
jno
push
stos
es
mov
int
cmps
inc
loope
inc
sbb
add
add
call
(bad)
push
mov
es
xchg
ins
popa
addr16
mov
sti
mov
jmp
sub
in
mov
xchg
arpl
js
jo
pop
inc
fs
imul
inc
xchg
dec
movs
in
sbb
xor
adc
xchg
jp
shl
les
dec
stos
pop
or
je
sbb
inc
iret
mov
(bad)
pop
jge
aaa
lahf
mov
xor
shl
mov
ret
ret
xchg
ins
enter
ins
adc
sar
mov
clc
leave
mov
push
test
mov
dec
and
shr
lahf
cmps
xchg
lods
ror
xor
mul
fst
stos
neg
in
mov
int
outs
sub
xor
dec
pop
addr16
xor
jbe
and
add
data16
xchg
inc
push
adc
pop
movs
lea
sbb
sbb
xchg
push
sub
in
cmp
aaa
fsub
xchg
add
xor
neg
add
jno
cld
cli
or
addr16
fimul
movs
ins
add
adc
data16
(bad)
push
add
sub
clc
les
dec
add
add
pop
ins
pop
or
cmp
sbb
mov
mov
dec
repnz
jp
cld
inc
inc
push
out
xor
mov
pop
dec
clc
pop
mov
dec
or
in
pop
mov
loop
mov
ins
clc
inc
push
mov
mov
mov
mov
fimul
mov
out
mov
ins
popf
dec
(bad)
mov
adc
lods
es
jle
mov
mov
in
cli
leave
dec
lods
call
mov
sub
pop
mov
push
add
mov
out
inc
retf
call
sti
push
pusha
pop
movs
mov
stos
pushw
xlat
xchg
dec
add
aaa
jnp
adc
mov
adc
stos
xchg
and
sub
in
rcl
icebp
dec
aaa
sar
cs
lahf
mov
xchg
jo
retf
adc
add
cmp
adc
jbe
out
ja
aad
pop
push
add
ins
and
sbb
sub
cld
enter
and
out
jmp
fsub
cmp
jo
stos
out
imul
adc
adc
neg
cs
mov
pop
inc
sub
js
lods
shr
jmp
push
enter
mov
xchg
xchg
mov
stos
dec
cmp
imul
inc
in
push
and
and
adc
inc
mov
jle
ret
dec
mov
mov
lds
mov
arpl
(bad)
xor
xor
not
mov
xlat
lods
jo
and
push
and
fwait
shr
jge
pushf
xchg
or
fild
repz
xor
or
scas
or
sub
cmp
(bad)
push
rcl
or
fild
scas
mov
push
push
shr
xchg
js
ins
jns
ins
and
je
pop
les
ja
repnz
and
fwait
ins
sti
jecxz
bound
adc
sub
and
add
xchg
sar
leave
jno
iret
retf
cld
(bad)
dec
repz
inc
pop
mov
inc
xchg
jnp
or
push
push
jl
repnz
in
sub
pop
sub
pop
fdivr
mov
lock
jmp
out
mov
push
or
pop
lds
mov
fs
das
or
jp
add
dec
cmp
push
imul
xlat
stos
sti
jns
jp
retf
mov
xchg
in
loope
mov
jmp
scas
mov
mov
cmp
fldcw
iret
je
pop
xor
dec
adc
inc
(bad)
cmp
mov
jg
or
fisub
and
ss
dec
cwde
xor
xchg
lods
push
shl
jo
fist
loop
mov
je
jbe
dec
inc
jge
popf
and
push
rcl
sete
cmps
lahf
int
xchg
and
ret
push
lds
lods
gs
rol
fdiv
pop
arpl
pop
popf
cmp
(bad)
sbb
xor
push
jnp
(bad)
loopne
mov
cwde
xor
es
lahf
and
mov
je
mov
cmps
sub
pop
push
add
mov
mov
mov
mov
dec
sub
pop
and
push
push
stos
inc
into
div
and
pop
mov
jge
xor
test
loope
push
push
addr16
dec
sahf
mov
push
icebp
fcomip
sbb
dec
loope
or
stc
xchg
mov
ret
out
cmc
adc
es
adc
or
movs
mov
cdq
jne
sbb
aaa
mov
push
in
(bad)
cs
and
bound
retf
mov
mov
jle
test
stos
mov
aam
bound
dec
push
fidivr
outs
call
lods
mov
in
adc
(bad)
jne
mov
(bad)
test
sbb
das
loop
ja
pop
int3
lock
dec
push
pushf
lds
shl
leave
std
cmp
scas
out
push
cmp
out
addr16
rol
shl
shl
in
lea
pop
add
inc
dec
test
mov
jns
add
mov
mov
test
(bad)
(bad)
xor
fwait
retf
xchg
mov
or
dec
cwde
jbe
test
jb
push
or
sub
sbb
frstor
inc
test
mov
int
sti
(bad)
mov
cmc
xlat
das
pop
cmps
std
mul
gs
sub
es
push
mov
pop
xor
pop
shl
mov
inc
pop
aas
test
(bad)
dec
pop
push
mov
ficomp
rcl
dec
sahf
fnstsw
jbe
(bad)
sbb
jmp
sbb
and
xor
sub
stos
xchg
sub
mov
jns
out
or
pop
dec
sbb
and
push
mov
mov
jecxz
lea
lods
jmp
mov
sbb
sbb
jecxz
mov
xchg
push
jmp
nop
or
push
cmp
mov
mov
mov
push
(bad)
sahf
jb
adc
xchg
xor
iret
jmp
in
jmp
rcl
pop
cmp
xchg
clc
dec
add
or
loope
dec
addr16
leave
push
out
mov
sbb
out
retf
dec
shl
or
dec
jb
test
mov
push
test
jnp
mov
lods
cwde
jne
pusha
cdq
or
mov
fcom
test
xchg
dec
(bad)
xlat
das
xchg
mov
pop
xchg
into
bound
ds
dec
test
(bad)
stc
gs
ret
nop
movs
pop
and
scas
inc
pop
in
mul
mov
shr
xchg
inc
sbb
in
es
loope
mov
popa
add
and
dec
jo
xchg
fdivr
mov
sub
shl
aaa
fwait
jbe
call
frstor
(bad)
cmp
jecxz
mov
add
sbb
mov
mov
sub
mov
sbb
xchg
fnstsw
cmp
pop
iret
or
dec
mov
clc
ins
inc
add
jecxz
cmp
(bad)
and
test
clc
clc
lock
mov
aad
test
pop
xchg
cmp
xor
dec
add
ret
(bad)
lahf
mov
in
add
inc
pushw
shl
sbb
pop
cmp
or
loop
lea
pop
aam
cmp
sbb
ins
int
outs
jns
xchg
int
(bad)
push
clc
(bad)
aad
fdiv
stc
in
lock
dec
inc
sub
mov
push
pop
or
movs
mov
ret
sub
out
hlt
repnz
xchg
mov
inc
jle
dec
pop
ins
scas
fisttp
inc
inc
sbb
inc
sbb
not
xor
or
ins
ins
lods
inc
push
adc
jp
test
sub
scas
mov
adc
out
cmp
mov
lahf
adc
lods
fnstcw
jge
and
mov
cmp
cmp
fsubr
mov
(bad)
repz
add
movs
or
push
inc
inc
iret
xor
dec
xchg
add
push
push
dec
xchg
and
and
fs
mov
cmp
pop
pop
push
push
add
xchg
mov
shl
adc
push
sbb
stc
mov
mov
cmp
adc
xchg
dec
mov
sub
mov
out
in
popa
aad
dec
xchg
lock
(bad)
cmp
(bad)
(bad)
jns
sbb
xchg
ror
and
pop
outs
xor
adc
test
xchg
mov
push
adc
add
mov
loop
fimul
clc
clc
mov
jno
lock
xchg
push
cmp
stc
std
adc
jl
pop
mov
add
ds
and
mov
and
adc
lods
or
jmp
jb
and
out
cmp
push
in
retf
in
sbb
mov
test
mov
iret
outs
sbb
ins
and
retf
mov
ss
xchg
cmps
js
dec
jae
sbb
push
clc
add
jno
cmp
retf
lds
ret
out
psllq
das
xchg
cmp
pop
push
mov
mov
adc
push
inc
jp
scas
mov
mov
mov
sti
sub
mov
shl
lods
xchg
sbb
ficom
xor
push
and
ret
push
lahf
inc
or
jbe
loope
cmp
pop
pop
(bad)
daa
shl
dec
gs
or
movs
(bad)
mov
jg
cmp
adc
mov
shr
lea
xchg
ror
ret
cmps
daa
pop
push
ins
and
xchg
pop
test
aad
jp
jge
hlt
jecxz
test
outs
push
imul
inc
mov
dec
push
(bad)
fmulp
jmp
xchg
push
(bad)
aas
retf
sub
xchg
in
dec
and
dec
in
lock
btr
cmp
add
inc
pop
imul
icebp
test
dec
scas
and
mov
imul
push
(bad)
bound
or
and
add
sub
(bad)
fistp
mov
inc
cmp
fdivr
push
mov
daa
push
sahf
scas
aaa
adc
dec
mov
imul
dec
inc
mov
cmp
cmp
mov
test
(bad)
std
sub
xor
jb
sbb
inc
and
cli
iret
in
push
scas
dec
or
mov
shr
add
xchg
or
mov
and
push
and
mov
mov
dec
out
dec
call
mov
or
imul
repz
xchg
test
stos
sub
fst
ins
out
or
pop
xchg
mov
addr16
retf
es
sbb
add
jns
loopne
mov
dec
inc
cld
xchg
shr
lahf
pop
imul
(bad)
in
xchg
pmulhw
mov
or
xchg
mov
xchg
jo
imul
outs
or
fimul
sahf
mov
xor
push
enter
and
jg
enter
shr
pop
xchg
inc
mov
aas
out
test
leave
jg
mov
mov
stos
mov
stc
shl
and
rcl
or
jecxz
jb
push
in
sub
pop
repnz
fdiv
push
test
xor
cli
(bad)
dec
popw
mov
xor
mov
mov
out
cli
adc
cld
in
sbb
mov
or
call
mov
mov
mov
inc
cmps
and
jae
cmp
data16
cmp
dec
(bad)
jnp
(bad)
div
test
cld
pop
and
pop
hlt
jno
xor
jne
sbb
xor
jbe
outs
imul
xchg
cmp
icebp
jg
fidivr
pop
inc
mov
xor
xchg
in
xlat
sbb
mov
xchg
cmp
jns
inc
jno
bound
mul
cmp
push
imul
test
cmp
adc
add
daa
mov
fnstenv
outs
and
into
not
scas
retf
in
icebp
movs
in
mov
pop
or
out
cmps
sldt
cmps
call
adc
imul
mov
loopne
or
aas
call
cmp
xchg
adc
push
mov
sub
adc
lahf
retf
mov
cmp
mov
push
loope
mov
mov
cwde
cmp
jge
lds
jmp
fwait
in
fcom
sbb
cmp
xchg
xor
je
mov
adc
push
or
addr16
lds
sar
div
pop
jno
sub
add
jecxz
(bad)
fnstcw
je
inc
inc
jmp
into
sbb
xor
ret
sub
cmps
movs
pushf
jmp
cmc
and
popa
out
cmp
cwde
inc
mov
loop
sahf
push
pop
inc
cmp
js
call
out
arpl
push
pop
loopne
shr
(bad)
shl
xor
or
shl
pop
add
pop
dec
mov
clc
and
and
(bad)
xchg
push
mov
inc
xchg
sbb
dec
adc
daa
(bad)
add
or
lods
sar
cwde
adc
test
pop
scas
retf
cmp
aaa
scas
cmp
das
mov
in
sub
stc
aad
push
aaa
add
mov
das
cmps
sar
ror
jp
xchg
jno
cvtps2pd
push
loope
shl
mov
adc
xor
push
inc
gs
test
cmps
add
push
xchg
mov
inc
sbb
cmp
inc
iret
sahf
or
retf
pop
mov
ret
fst
daa
jb
aam
aaa
xor
pop
mov
out
mov
jp
aad
cmc
les
jmp
enter
leave
xchg
and
ins
push
push
popf
sbb
xchg
cmps
pop
fidivr
pop
dec
jno
sbb
xor
jecxz
or
pop
mov
mov
mov
frstor
pusha
rol
daa
mov
repz
or
or
sub
xchg
jnp
dec
jbe
push
(bad)
inc
iret
outs
aaa
test
adc
mov
fist
fist
cli
push
icebp
xor
jno
call
xor
int
sub
and
test
scas
test
(bad)
and
sbb
xlat
dec
pop
not
jmp
add
push
imul
xchg
test
or
daa
gs
mov
mov
sbb
retf
jns
sahf
jge
sub
adc
int3
xor
xor
pop
sbb
jle
jns
and
je
rol
daa
pusha
stos
pop
movs
ds
mov
jle
popa
pop
xchg
sub
ins
sub
das
jmp
xchg
hlt
sub
dec
fcomp
push
fistp
test
pop
enter
sysenter
xchg
(bad)
sbb
and
push
out
leave
jle
popa
out
ds
loope
daa
sahf
jge
enter
dec
mov
jecxz
xor
mov
jno
jbe
xor
into
xchg
inc
loopne
xchg
sub
scas
jg
popa
or
cmp
(bad)
fs
mov
mov
neg
out
mov
out
lds
jno
ret
stos
sub
fidivr
ficom
push
adc
fmul
cmp
pop
mov
jmp
cdq
inc
mov
adc
cmps
adc
clc
jnp
pop
adc
mov
jb
xor
sbb
or
inc
pop
call
or
sbb
(bad)
sub
pop
xor
adc
icebp
pop
sub
pop
mov
shl
nop
xlat
dec
inc
cld
test
lods
or
imul
mul
jmp
add
mov
ret
imul
pop
mov
pop
sub
scas
pop
in
out
xlat
fld
(bad)
aaa
xchg
adc
in
popf
pop
outs
mov
mov
xchg
ja
mov
push
leave
and
xor
mov
cmp
push
stc
nop
mov
repz
scas
mov
(bad)
lahf
dec
test
mov
(bad)
movs
hlt
daa
sub
pop
or
test
es
movs
retf
dec
add
inc
fdiv
iret
inc
pop
jmp
aam
push
stos
cmp
add
dec
iret
stc
arpl
adc
adc
xchg
push
(bad)
jno
mov
js
adc
out
out
lahf
rcl
xchg
sub
cld
jo
test
push
daa
in
jne
fiadd
add
in
cdq
or
pusha
jp
in
jae
stos
enter
inc
stos
adc
pusha
(bad)
in
call
mov
or
inc
pop
sbb
push
add
retf
adc
nop
pop
movs
retf
mov
or
jp
mov
push
dec
test
les
movs
dec
imul
mov
scas
rol
idiv
outs
jb
retf
xor
out
pop
test
cwde
cmp
push
cld
fsub
push
mov
(bad)
shl
sahf
jl
std
fstp
cld
(bad)
adc
jo
pop
sahf
sbb
xchg
mov
aad
mov
rol
pop
push
in
outs
xor
icebp
movs
add
dec
dec
out
xchg
and
xchg
cld
inc
adc
mov
jo
(bad)
or
pusha
or
adc
add
mov
repz
pop
mov
add
scas
stc
(bad)
repnz
jge
pop
movs
clc
retf
pop
mov
xor
mov
fstp
mov
xchg
jo
jno
and
xor
std
mov
test
xchg
dec
sub
inc
jg
or
imul
lods
in
cmc
sti
push
sbb
dec
shr
call
es
fisttp
jg
inc
sbb
imul
push
jnp
mov
je
add
sbb
pop
xchg
sub
pop
sub
push
lea
jae
std
aam
pop
push
mov
aas
xchg
retf
fsin
sbb
pop
cmps
js
les
cmp
loop
xor
push
test
inc
xchg
ret
shr
iret
pop
cmp
test
xchg
loope
sub
xor
xchg
sti
inc
sahf
ret
or
ins
icebp
sbb
or
repnz
inc
cdq
retf
fist
repnz
cmp
dec
sub
sub
(bad)
stc
fisub
push
rol
repz
jmp
bound
mov
jecxz
sub
daa
and
mov
imul
mov
mov
stc
pop
jmp
mov
jmp
push
push
ret
push
addr16
inc
dec
fistp
inc
ficom
(bad)
sbb
add
cmp
stos
mov
and
xchg
stos
in
out
gs
ret
stos
or
xchg
shl
ss
fldcw
call
dec
cwde
cs
ret
sbb
push
dec
mov
or
sbb
push
mov
loope
out
sbb
jns
test
add
sub
xor
rcl
sub
sbb
dec
pushf
pop
cmp
call
mov
adc
adc
jmp
outs
dec
sub
imul
push
pushf
jne
and
retf
fwait
mov
jne
and
sbb
pop
out
stos
jae
test
scas
rol
mov
inc
sbb
ss
cmp
mov
clc
sub
test
rol
lock
arpl
push
mov
inc
and
in
jne
mov
jmp
mov
rcl
loop
ja
sub
cs
movs
pop
inc
mov
xchg
enter
xchg
repnz
adc
cld
push
retf
dec
(bad)
mov
push
and
retf
pop
lods
enter
adc
xchg
test
xor
mov
add
rcr
xchg
inc
movs
sub
cmp
fisttp
cld
mov
or
or
aad
std
xchg
data16
fs
add
adc
add
retf
call
cmp
dec
xor
imul
dec
retf
rol
daa
fild
idiv
(bad)
(bad)
call
ror
jge
shl
mov
call
sbb
cmp
push
mov
xlat
repnz
jbe
xchg
in
jmp
rcr
jle
stc
add
test
stc
mov
pop
cdq
movs
cmp
iret
adc
push
movs
icebp
outs
xchg
sbb
and
scas
in
or
adc
and
dec
mov
jmp
xor
ja
xor
dec
loopne
sbb
xchg
ja
addr16
mov
daa
xor
pop
or
call
loopne
add
movs
test
inc
xor
sar
mov
test
cli
loope
ins
mov
add
loop
loop
imul
mov
add
outs
mov
int
mov
arpl
popa
nop
xchg
ret
imul
aad
jmp
mov
cmp
mov
sub
mov
cmp
pop
pop
aam
retf
pop
out
jecxz
cmc
xlat
adc
retf
xchg
cmovg
dec
mov
cmc
lock
aad
pop
jae
push
rcl
fs
imul
pop
lahf
fist
outs
mov
inc
mov
or
int3
ja
and
call
repz
fsubr
or
inc
pop
sbb
gs
adc
lea
fstp
xchg
lods
out
or
lds
repz
fdiv
call
pop
mov
mov
aaa
daa
sbb
xor
ret
js
xor
test
(bad)
or
pop
cmps
and
cli
iret
inc
jo
retf
aaa
push
mov
loopne
ret
lahf
aam
test
mov
xchg
shr
jbe
inc
mov
mov
cmp
inc
scas
ret
add
aam
repz
xor
lock
pop
test
xchg
or
test
popa
shl
jg
cmp
add
inc
add
(bad)
adc
movs
pusha
iret
mov
popf
mov
ror
cmps
fisttp
loop
add
and
retf
xor
jg
xchg
cmps
dec
jmp
jp
loope
mov
xchg
jo
das
and
sub
(bad)
push
out
dec
popf
push
sub
dec
xchg
outs
xor
stos
adc
in
test
stos
dec
push
mov
dec
icebp
jno
inc
(bad)
ror
out
clc
dec
push
in
std
add
and
movs
mov
aad
add
outs
mov
fsubr
sub
xchg
jnp
jp
das
jecxz
(bad)
punpckhwd
dec
imul
int
int3
xor
lods
cwde
loope
outs
mov
jg
mov
xor
jnp
dec
repnz
scas
jmp
mov
(bad)
loopne
mov
and
dec
adc
popa
repz
lea
test
mov
inc
fiadd
cmp
sub
movs
das
mov
test
xor
push
ss
arpl
popf
fsubr
mov
mov
jl
xchg
inc
std
xchg
fbstp
inc
and
xchg
mov
xor
mov
or
sar
out
dec
mov
xlat
rcr
xor
inc
pusha
std
mov
ja
inc
aam
sub
mov
shl
in
jle
sbb
sub
and
cmps
in
dec
ja
sbb
icebp
dec
jle
sbb
cmp
fisubr
jecxz
popa
jns
and
mov
sub
xchg
inc
call
aaa
or
stc
sti
mov
scas
sub
sbb
inc
jmp
ret
xor
out
add
sub
xchg
mov
fstp
outs
aad
mov
shl
cmp
mov
cdq
scas
or
or
jl
pop
sbb
xlat
ins
nop
popa
addr16
dec
sti
xchg
jmp
inc
push
xor
sbb
inc
es
mov
adc
(bad)
fdiv
js
mov
push
daa
mov
int
lahf
pop
pop
rcr
test
xchg
mov
call
sbb
scas
pop
and
push
mov
xchg
pushf
mov
xchg
or
dec
lds
jl
sub
movs
or
aas
jle
leave
fcomp
mov
popa
push
jnp
adc
fs
ins
xchg
sbb
(bad)
cmp
xchg
les
in
pop
ret
in
inc
lods
and
aaa
pop
or
das
dec
xchg
sub
es
dec
imul
sbb
mov
xchg
mov
xchg
cmp
outs
cmp
imul
inc
aaa
in
pop
adc
push
dec
int
int
loopne
pop
fscale
inc
data16
movs
stos
sbb
mov
cmp
pusha
xchg
xchg
inc
in
stc
aam
cs
loope
cmps
imul
xchg
jbe
in
out
mov
cmps
xchg
pop
xchg
and
shr
inc
push
push
cli
repnz
int3
xor
xor
adc
das
lods
pop
mov
cdq
aad
or
jmp
or
lock
cdq
aas
aaa
push
adc
call
or
cmp
jmp
pop
mov
fldenv
aas
sahf
ror
jmp
hlt
or
jne
out
mov
xchg
pop
jae
inc
push
loop
add
mov
gs
xchg
xor
cmp
mov
pop
inc
nop
lock
sbb
jnp
call
sub
mov
jle
pop
mov
arpl
adc
add
fist
into
stc
sub
sbb
aas
daa
cmps
pop
inc
and
sub
push
push
or
mov
adc
push
gs
add
ja
mov
mov
retf
mov
xor
jnp
inc
aas
or
push
aaa
sbb
jmp
cmp
(bad)
cmp
push
(bad)
aas
pushf
cwde
loop
adc
sbb
int3
pushw
pop
daa
mov
pop
add
adc
aam
jae
push
xchg
jns
ss
(bad)
or
in
lods
pushf
inc
jge
inc
dec
div
lahf
gs
mov
push
xor
mov
and
add
aaa
and
cmp
dec
lahf
stc
out
scas
xor
pusha
xchg
jmp
adc
lods
sahf
es
dec
add
sbb
xlat
inc
mov
sub
push
and
sbb
call
mov
test
movs
frstor
rcl
cs
out
xchg
push
ret
cmps
push
(bad)
or
cmps
mov
xor
mov
fyl2xp1
and
dec
fisubr
mov
mov
je
xor
pop
call
rol
xchg
adc
xor
pop
and
gs
xor
shr
cmp
dec
sub
pusha
call
sub
psubsw
pop
pop
mov
push
out
sbb
add
dec
(bad)
retf
mov
fdivr
(bad)
sub
out
lock
xor
sahf
retf
xchg
xchg
sar
sar
pushf
adc
ds
or
push
ret
daa
fisubr
xchg
fst
mov
ss
and
lock
int3
cmp
outs
inc
mov
les
and
cmp
out
(bad)
out
xor
lock
xchg
sub
shl
cli
das
in
inc
mov
sbb
sbb
popf
dec
and
sub
pop
test
int3
pop
push
dec
adc
dec
(bad)
adc
(bad)
add
ss
iret
inc
dec
pop
cld
sbb
aad
xchg
push
repnz
or
out
pop
mov
ret
sub
inc
dec
pop
scas
popf
jecxz
jmp
adc
cwde
push
dec
pop
test
cmp
jmp
addr16
pop
jecxz
mov
jecxz
push
sub
and
loopne
pop
and
es
sbb
fiadd
nop
adc
pop
xchg
ficomp
cmp
daa
push
cmc
mov
jo
pop
in
push
push
add
lock
scas
fwait
aaa
leave
fild
fmul
jae
ds
mov
pushf
das
mov
jge
sti
cdq
mov
in
mov
xchg
inc
jp
pop
mov
or
pop
xchg
cmps
adc
out
popa
setae
gs
push
xor
xchg
pop
cld
cdq
push
retf
dec
(bad)
inc
in
mov
jbe
inc
test
mov
popf
mov
repz
out
fisttp
pop
jmp
push
leave
dec
rol
and
mov
pop
mov
jl
sahf
and
xlat
in
pop
mov
and
out
fnstcw
jb
fs
inc
inc
adc
icebp
adc
ds
xchg
adc
cmp
neg
pop
sahf
cmc
hlt
ins
and
scas
out
mov
push
or
pop
mov
or
mov
pop
mov
push
fistp
loopne
outs
pusha
(bad)
test
sub
daa
inc
pop
fisttp
xor
cs
rcr
add
cmp
ret
or
mov
adc
js
test
dec
loope
popf
dec
das
js
jle
test
mov
jg
stos
mov
xor
push
or
jecxz
and
aaa
jle
rcl
dec
lahf
xchg
pop
js
pop
addr16
jp
and
mov
cmp
push
mov
dec
pop
call
cmp
ja
das
scas
nop
aam
int
ret
or
pop
xchg
xchg
cmp
jp
push
pop
dec
inc
aas
outs
pop
fcmovne
pop
loop
add
rcr
(bad)
dec
movs
pop
mov
push
and
stc
adc
push
loop
xor
in
adc
mov
mov
(bad)
adc
(bad)
sub
mov
enter
mov
mov
and
mov
or
test
stos
out
call
or
sar
or
push
cmp
fisub
mov
pop
jle
mov
and
push
arpl
in
fild
mov
in
jo
lahf
into
(bad)
adc
rcr
aam
jbe
(bad)
(bad)
push
stos
cmp
repnz
inc
in
mov
jne
dec
jge
push
(bad)
xlat
and
into
test
or
inc
sub
pop
adc
add
jp
and
cmp
dec
mov
inc
icebp
je
xchg
cwde
dec
arpl
jge
cdq
shl
lds
sbb
xchg
ret
(bad)
add
sbb
mov
test
dec
ret
inc
sahf
pusha
cmp
cmp
test
push
mov
fst
in
dec
mov
adc
idiv
into
sub
add
cmps
cli
int3
jb
es
cmps
jns
sub
icebp
rol
fstp
les
and
or
enter
outs
jmp
mov
call
addr16
add
jb
jl
pop
inc
icebp
rol
fisubr
xchg
mov
push
pushf
movs
jmp
push
in
daa
add
adc
xchg
out
sub
add
cmps
xor
mov
(bad)
jmp
sbb
push
push
stos
and
ret
mov
ss
cmp
pop
clc
pop
in
xor
adc
test
mov
push
sbb
xchg
sbb
mov
jb
int3
cmp
dec
retf
cmp
mov
pop
jp
jns
add
dec
mov
ds
add
pop
jmp
xlat
loop
sbb
dec
push
push
fdivr
pop
sub
fdiv
mov
shl
mov
pop
mov
add
cli
mov
push
into
mov
add
mov
fwait
sub
(bad)
and
cld
retf
out
stc
jg
mov
xchg
ds
and
lods
sub
out
dec
lds
push
or
(bad)
inc
or
and
jnp
ror
inc
stos
push
(bad)
in
imul
in
inc
mov
dec
mov
jne
ds
xchg
add
sar
add
mov
into
push
not
retf
ror
sub
ja
imul
js
dec
jnp
pop
or
imul
xor
mov
pop
test
dec
mov
into
mov
das
sbb
pop
out
stos
pop
and
iret
outs
add
mov
mov
test
mov
fld
jmp
mov
clc
aam
push
inc
into
pop
inc
adc
dec
dec
adc
cmc
jae
in
push
xchg
pop
inc
cmc
jge
ins
cmp
loopne
lods
call
mov
ss
fwait
or
in
push
xor
jmp
xchg
sbb
jbe
cmps
add
and
xchg
sahf
sbb
out
mov
mov
mov
pop
je
ret
sub
dec
xlat
or
fist
and
or
xor
cmc
int
push
pop
mov
div
rol
ret
mov
jmp
cmps
call
call
test
mov
xor
sbb
js
sub
pop
xor
stos
or
repnz
loop
dec
and
mov
cmp
ss
cli
int
pop
fist
jg
out
mov
jmp
inc
xor
add
out
scas
addr16
imul
adc
cmc
pop
jge
push
into
aad
inc
cmp
mov
jge
or
nop
js
push
jbe
outs
pusha
xchg
(bad)
fst
pushf
jp
mov
adc
repz
fnstcw
fwait
mov
xor
stos
mov
aas
jl
mov
cld
(bad)
das
mov
(bad)
xchg
fwait
test
in
into
inc
idiv
mov
pop
xor
test
out
jmp
daa
push
mov
cmp
sbb
imul
ret
mov
xchg
inc
mov
shr
sub
mov
int3
pop
inc
sbb
aas
out
sub
inc
outs
pop
dec
pusha
add
xor
cmp
cld
stc
jbe
or
jne
fs
xor
mov
push
sbb
lock
repz
push
cmps
or
and
ja
adc
cmp
test
not
add
loopne
dec
jnp
ja
mov
aas
js
rsm
xchg
movs
ins
icebp
(bad)
sbb
or
in
and
pop
add
xor
fwait
into
inc
xor
adc
mov
clc
push
retf
hlt
outs
and
outs
mov
std
cwde
add
mov
mov
cdq
cmp
sbb
inc
scas
and
push
cmp
out
dec
out
jge
sbb
xchg
adc
mov
daa
xlat
dec
loope
inc
les
dec
mov
(bad)
pop
(bad)
lods
inc
push
ins
add
push
mov
into
adc
pop
jo
and
push
cmp
dec
cld
(bad)
outs
test
inc
(bad)
popa
sub
sub
dec
daa
cwde
cdq
push
arpl
push
jg
sbb
inc
mov
push
push
(bad)
cmps
repz
lock
call
pop
stc
xchg
std
xor
jae
enter
movs
xor
push
cmp
int
out
and
dec
fdiv
cld
lds
es
scas
call
inc
outs
stos
cmp
mov
inc
int3
(bad)
cmp
cmp
adc
loope
bound
shl
mov
add
and
cdq
popf
jnp
jbe
push
cmp
fimul
cmp
fbstp
mov
mov
sub
xchg
jmp
inc
mov
not
push
ret
test
out
js
cmp
jge
mov
(bad)
cmc
pop
xor
fs
adc
lahf
sub
repnz
aas
xor
jmp
and
xor
xor
inc
jno
jge
ret
mov
lea
aam
lods
retf
loop
(bad)
sti
out
pop
mov
xchg
iret
mov
sub
shr
mov
into
jle
adc
imul
sar
outs
movs
addr16
clc
push
popf
js
in
dec
stos
pop
cmc
daa
das
jp
pop
pop
sti
pop
jno
xchg
(bad)
call
jno
pop
push
into
sub
pop
lea
mov
or
mov
shl
shl
in
lds
xor
stos
sub
jmp
mov
mov
or
push
mov
stc
sti
xchg
adc
out
and
fs
jecxz
push
inc
lahf
jo
scas
test
xchg
fcomp
xor
aad
xchg
push
mov
sbb
push
pop
and
mov
aad
push
pop
inc
push
sub
sbb
xor
call
cmps
and
push
sub
repz
xor
jae
cdq
(bad)
dec
or
dec
arpl
add
sub
aam
and
arpl
daa
retf
and
lea
adc
pop
in
retf
sbb
dec
and
fs
and
xchg
sub
xor
cmp
rol
mov
out
or
(bad)
test
xor
and
(bad)
cmp
mov
cmps
icebp
repnz
in
dec
pushf
into
dec
mov
pop
std
mov
les
in
hlt
daa
mov
sbb
push
sub
sub
fs
mov
sbb
jne
sbb
mov
adc
cmc
ds
push
(bad)
leave
mov
movs
pusha
ins
sete
sbb
outs
inc
push
mov
ret
jge
pop
add
pop
test
pop
mov
dec
push
add
push
inc
sub
mov
pop
push
pop
push
cmps
rol
pop
(bad)
cli
jno
fucomi
jo
xor
mov
fnstsw
cmp
ss
mov
push
and
pop
arpl
xchg
sbb
repz
outs
pop
int
pop
(bad)
and
setnp
lock
imul
mov
js
ror
sahf
das
jne
fbstp
mov
enter
test
inc
jns
add
jg
lahf
push
or
adc
mov
jb
loopne
fcmovbe
adc
lahf
out
out
mov
leave
pop
stos
xchg
jecxz
fcmovbe
into
push
jo
fs
or
sub
lods
sahf
retf
add
xchg
adc
or
(bad)
enter
pusha
cmp
pushf
dec
fstp
mov
imul
test
cmp
mov
push
out
or
cmp
pop
pop
imul
sub
mov
or
out
dec
xchg
in
pop
imul
jge
sbb
retf
fnsave
pop
push
and
int3
cmps
dec
dec
xchg
int3
xor
add
cmc
xor
inc
jo
mov
jle
stos
in
retf
adc
add
scas
inc
mov
fldenv
(bad)
jbe
dec
sar
mov
ja
lds
jns
out
cs
sbb
mov
nop
out
fidiv
xchg
in
inc
sbb
fs
pop
xchg
int
int
mov
sbb
xchg
mov
cli
sbb
xor
sbb
je
inc
lahf
loope
dec
movs
je
in
jnp
mov
pop
mov
push
inc
mov
pop
add
(bad)
jmp
xor
ins
ja
mov
mov
jmp
lods
(bad)
aas
sub
pop
mov
mov
add
jle
xor
pop
cmps
icebp
and
leave
push
jnp
push
xchg
mov
out
jb
inc
(bad)
fldl2e
ror
and
push
cmp
data16
rol
push
cmp
or
sbb
outs
adc
lock
mov
xchg
push
(bad)
shl
retf
mul
clc
js
sar
repnz
pop
das
stc
jno
inc
aaa
jle
imul
sbb
bswap
inc
fwait
out
(bad)
adc
jl
mov
(bad)
xlat
clc
mov
(bad)
pop
iret
mov
call
mov
pushf
scas
jmp
vhaddpd
sbb
dec
js
mov
push
adc
pop
or
aaa
in
lods
sub
lahf
les
popa
mov
(bad)
aad
xchg
mov
jmp
mov
pop
fcmovb
dec
iret
inc
daa
xor
mov
push
lods
inc
jae
lods
dec
pop
mov
js
inc
fnstsw
push
retf
xchg
jae
mov
mov
mov
mov
test
fwait
mov
and
xchg
dec
das
imul
cld
jmp
lock
daa
push
repz
add
retf
sub
test
aaa
sar
jae
sub
test
aas
cmc
leave
or
jg
and
lods
push
hlt
test
movs
daa
mov
pop
sub
pusha
ins
pop
out
xchg
repnz
or
not
cmp
jmp
mov
mov
stos
out
cmp
dec
mov
(bad)
hlt
push
push
pop
dec
xchg
sub
mov
xchg
out
jg
scas
fwait
das
inc
mov
mov
cmp
inc
das
fisttp
push
imul
or
js
mov
push
lahf
jb
inc
clc
sub
sub
sub
mov
inc
lock
pop
mov
adc
call
ins
inc
ss
fwait
xchg
ss
ficomp
lods
ins
inc
outs
popf
pop
xchg
jns
xlat
xchg
mov
cmp
ins
addr16
cld
pop
xchg
in
push
dec
sar
jmp
dec
stc
das
sub
push
xchg
pop
adc
jmp
inc
cwde
(bad)
stos
cmp
out
(bad)
fcom
inc
xchg
mov
cli
mov
jp
scas
and
push
test
xchg
sbb
xor
pop
push
add
les
test
movs
in
add
fld
aad
push
add
dec
mov
int3
das
jmp
pop
ds
inc
mov
or
add
std
icebp
lds
daa
push
pop
popa
jo
jne
out
push
and
xchg
and
push
std
aam
xor
shl
fdivr
push
shl
mov
inc
jg
ror
adc
mov
cmp
adc
cmp
sbb
in
(bad)
sbb
scas
add
shr
add
push
jns
ss
out
xchg
push
xor
sbb
call
fs
ja
repnz
jp
aaa
ins
cld
or
inc
ss
jo
(bad)
clc
mov
sub
mov
add
sub
fidivr
push
or
mov
add
inc
mul
dec
pop
jne
add
jecxz
jno
and
add
sbb
mov
sub
int
or
cmovnp
xchg
in
jmp
test
loop
stc
in
pop
scas
int3
jmp
rcr
xchg
ins
jp
stc
cdq
and
cmp
push
into
ins
cmps
je
fwait
xchg
push
fs
mov
gs
or
out
and
xor
dec
ins
rol
push
mov
dec
inc
(bad)
sbb
je
xor
loope
jl
sbb
mov
add
in
cmp
stos
mov
aad
xchg
mov
adc
pop
es
mov
pop
mov
loop
mov
fcom
cwde
mov
mov
push
xchg
jmp
frstor
mov
dec
add
mov
and
push
mov
(bad)
dec
inc
cmps
push
pop
out
movs
cdq
xchg
lahf
mov
ret
cmp
push
push
repz
push
repnz
rcr
loopne
enter
pop
repz
fcomp
pop
js
fimul
mov
inc
mov
call
movs
leave
pop
jmp
fsqrt
out
test
and
imul
stc
pop
sbb
ret
dec
push
push
mov
jnp
push
mul
xchg
jae
mov
ds
int
sub
call
sbb
xchg
mov
loope
pop
jbe
push
and
pop
into
cld
rcr
or
(bad)
pop
cmp
or
(bad)
adc
fnstcw
or
xchg
or
adc
pop
xor
test
sbb
and
movs
cmp
inc
aaa
push
xchg
push
adc
nop
fcomp
xchg
cmp
pop
test
fcmovu
les
jnp
xchg
or
mov
xchg
mov
pop
xor
or
pop
mov
into
lds
arpl
xchg
out
xchg
ret
adc
cwde
mov
je
mov
js
push
lea
and
loop
lock
jg
cmp
fbld
jb
sub
sub
mov
xchg
fbld
ss
(bad)
sbb
xor
inc
push
fld
ret
mov
adc
and
push
mov
pop
mov
cmp
ret
add
dec
dec
movs
sub
(bad)
fisttp
out
sti
std
aad
ret
icebp
sbb
das
sbb
mov
pop
inc
jno
lea
mov
xor
mov
jnp
jmp
mov
or
(bad)
jbe
ja
add
aam
sbb
int
xor
dec
or
mov
stc
fidiv
adc
int
fst
outs
test
jg
lds
push
lock
xor
daa
push
sbb
call
xor
lods
inc
fcomp
jmp
dec
adc
pop
sbb
mov
xlat
cld
rol
xchg
(bad)
call
inc
repz
out
cmc
lock
shl
dec
(bad)
mov
cdq
push
neg
or
push
xchg
pop
scas
dec
aas
sbb
dec
ins
sub
(bad)
lock
mov
movs
adc
cmc
test
dec
lahf
pusha
fild
push
inc
gs
cdq
cs
cs
adc
sbb
dec
sbb
repz
pop
lds
test
push
leave
popf
mov
(bad)
fcomp
lods
fisubr
enter
xor
add
dec
cmc
pusha
mov
cmp
in
cld
imul
iret
lock
loopne
cs
sub
mov
mov
sub
ins
out
scas
or
mov
push
lods
es
pushf
cld
jge
lods
add
rcl
jl
int
xchg
jmp
jne
dec
call
push
or
xchg
mov
fist
fstp
add
pop
jl
(bad)
and
xor
and
sub
es
jae
or
js
xchg
sub
jb
mov
movs
icebp
sbb
dec
sub
jmp
cli
jmp
cmp
and
mov
les
shr
iret
int3
inc
mov
sub
add
xor
leave
pop
ins
(bad)
fwait
pop
lahf
or
xchg
push
shr
mov
dec
mov
and
lods
clc
xor
pop
fs
xchg
pop
mov
cmp
xchg
inc
mov
test
or
pop
jg
and
pop
and
(bad)
adc
mov
or
out
push
test
dec
outs
sub
pop
push
inc
or
pop
push
mov
dec
adc
pop
sbb
or
push
add
adc
mov
mov
sbb
mov
adc
xor
in
push
adc
mov
or
cmp
and
pop
sbb
out
sub
dec
sub
(bad)
(bad)
stc
lahf
retf
mov
int3
call
mov
aaa
mov
lods
cld
mov
add
pop
or
add
jns
mov
test
xor
std
add
cmps
sub
jge
pop
mov
or
mov
(bad)
jmp
cmps
sub
js
or
psubq
or
and
js
xchg
sbb
push
dec
mov
test
sahf
jne
add
or
and
or
inc
(bad)
(bad)
test
cmp
push
call
std
icebp
rcl
into
dec
dec
mov
cmps
jnp
xchg
push
cmp
and
mov
sti
das
arpl
aad
sbb
adc
lock
jbe
clc
addr16
inc
out
xor
mov
push
xchg
mov
push
adc
pop
das
enter
inc
sti
adc
aad
outs
xor
inc
jnp
stc
xchg
xchg
xlat
and
(bad)
loopne
fcmovnb
lock
xchg
cmp
(bad)
dec
call
jns
ret
pop
or
pop
push
mov
pop
fist
pop
imul
in
push
rcl
in
popa
ror
push
pop
out
sub
jl
lods
mov
ja
in
jg
dec
ds
cmp
and
rcl
call
lea
inc
sbb
fnsave
xchg
add
pop
fidivr
xor
cmp
movs
pop
fnsave
icebp
out
mov
out
fstp
mov
scas
dec
mov
pop
dec
dec
inc
push
add
jmp
fsubr
rol
push
xchg
inc
jp
adc
add
mov
mov
test
sbb
icebp
test
test
add
cmp
mov
push
in
mov
les
adc
mov
das
push
xor
xor
daa
call
jnp
mov
retf
xchg
out
daa
or
stos
mov
push
push
into
adc
dec
inc
pop
(bad)
in
int3
pop
mov
stos
xchg
pop
push
lahf
cdq
hlt
data16
xchg
cs
or
dec
enter
into
add
neg
je
fs
leave
(bad)
std
and
xchg
sbb
add
scas
es
stc
bound
jmp
xor
fstp
fnstenv
out
fst
push
call
or
pushf
sbb
mov
cmp
fsubr
push
inc
mov
fmul
mov
(bad)
popf
mov
mov
dec
mov
push
pushf
(bad)
adc
mov
retf
dec
dec
inc
in
cmp
scas
ficom
lea
test
ret
cld
xchg
pop
mov
pushf
cmp
and
fs
xchg
sbb
jns
repz
push
mov
aaa
retf
sub
xchg
mov
sti
ins
les
ror
hlt
lahf
ds
mov
ja
mov
and
sysexit
fsubr
mov
fimul
sbb
ds
xchg
test
xor
cmp
cmp
test
mov
xchg
out
and
lock
xor
pop
scas
xchg
xchg
add
xor
jge
inc
in
pop
adc
cmp
mov
cmp
jnp
jnp
mov
sub
imul
xor
outs
mov
xchg
add
shl
inc
sbb
and
push
div
jl
mov
(bad)
or
cmps
fidiv
loop
xchg
in
push
imul
xchg
cmp
push
push
icebp
cmc
fidiv
mov
jae
mov
mov
mov
pop
xchg
aam
cwde
jmp
iret
ret
or
push
int3
aad
in
test
call
push
icebp
in
xchg
sbb
in
sub
jmp
(bad)
lods
fcmove
stos
xchg
jmp
sub
or
pop
xor
adc
icebp
xlat
mov
add
loope
sub
or
sub
or
daa
adc
and
xchg
pop
test
jg
scas
pop
int
daa
je
mov
shl
movs
jne
popf
cmp
adc
or
add
cmp
fdiv
xor
sar
mov
je
retf
jecxz
sbb
ins
dec
sti
out
das
xchg
jmp
leave
xor
or
daa
or
repz
in
mov
pop
outs
int3
repnz
jg
jmp
lods
or
mov
cmp
mov
(bad)
pop
jne
mov
cs
pop
inc
mov
pop
jno
fild
inc
mov
add
sbb
sti
adc
dec
push
mov
loop
js
je
lea
push
mov
sub
stos
inc
sbb
cdq
jmp
jle
xchg
sub
lds
dec
popf
sub
stos
or
sar
jl
into
pause
xlat
std
mov
mov
loope
xor
out
out
aam
sbb
sbb
cli
fild
fst
js
push
add
pop
(bad)
xor
push
(bad)
xor
pop
fsubr
stos
in
retf
sbb
mov
out
in
ja
movs
push
adc
cmp
in
pop
adc
jnp
push
cmp
loop
xchg
(bad)
cmp
mov
in
adc
xchg
out
sbb
fcmove
cmp
mov
or
ror
jae
bound
mov
cs
idiv
enter
mov
sti
mov
xchg
out
jns
mov
jle
dec
pusha
mov
cmp
jmp
sbb
cli
jb
add
inc
and
test
ins
xchg
outs
and
push
dec
sbb
mov
out
int
repnz
dec
push
cmps
sub
jle
je
cwde
ss
popf
sbb
stos
push
rol
rcl
std
push
xchg
imul
cdq
mov
shl
push
stos
(bad)
push
sbb
jmp
cmps
mov
xor
push
mov
inc
retf
push
lea
push
(bad)
std
jecxz
xor
fcomip
(bad)
sbb
and
std
jmp
xchg
fistp
fs
stc
in
js
not
out
inc
(bad)
cwde
ret
shr
jo
ja
stos
shr
xchg
scas
jmp
aam
or
sub
jp
and
vmovq
inc
push
jnp
mov
inc
std
push
pop
cwde
jns
add
push
stos
mov
stc
mov
shl
mov
enter
mov
pop
inc
jbe
xor
das
mov
stos
addr16
es
mov
xchg
sub
xchg
popf
adc
outs
adc
or
loopne
mov
out
push
sub
pop
xor
inc
std
test
xchg
scas
sbb
fld
imul
xlat
push
scas
cdq
in
ror
push
mov
sbb
push
mov
fisttp
mov
sub
jmp
push
mov
sub
mov
mov
in
je
adc
ret
mov
outs
mov
push
push
stos
xchg
pop
fs
in
fisub
sti
(bad)
xor
jo
mov
retf
iret
jmp
sub
or
adc
xor
dec
les
js
out
mov
je
ins
popf
or
or
inc
out
sbb
mov
fs
jmp
add
mov
push
jl
pushf
pop
push
sub
iret
xchg
add
inc
loope
mov
add
std
loope
retf
push
je
(bad)
adc
(bad)
(bad)
lock
test
mov
loopne
fldpi
sbb
enter
pop
fimul
icebp
xchg
fcomip
shl
cwde
jg
enter
out
pop
mov
push
arpl
pop
fst
cli
push
pop
mov
mov
or
or
xor
in
stos
ds
push
in
cmp
mov
pop
mov
mov
dec
sub
ja
outs
jnp
mov
cmp
repz
sub
mov
add
xchg
call
xlat
cmp
rcr
outs
cwde
stc
add
pop
rol
nop
or
push
push
call
jne
xor
out
mov
out
into
sub
stos
add
xchg
push
inc
idiv
(bad)
mov
sbb
je
mov
sbb
sbb
push
fdiv
mov
call
jae
and
xchg
cmp
cmp
adc
add
inc
dec
mov
call
scas
or
inc
ins
ss
inc
popf
pop
mov
jb
pop
push
mov
addr16
loopne
jmp
or
and
cdq
dec
loopne
jne
jmp
inc
(bad)
clc
std
cmp
fs
xor
ret
lahf
imul
push
shl
jae
popa
xor
cmp
pop
aas
xor
or
mov
xor
add
mov
aas
int
(bad)
inc
mov
add
and
(bad)
out
push
jbe
xor
lahf
xchg
in
cmp
loopne
adc
sbb
cli
cld
(bad)
movs
jbe
dec
ja
lock
and
push
fs
dec
lahf
in
pop
in
stc
scas
sbb
ficomp
xor
add
xchg
push
inc
aaa
(bad)
xchg
jno
mov
imul
fdiv
lods
jle
or
xor
cmp
ret
ret
xchg
and
movs
sub
mov
inc
push
addr16
push
push
pop
stos
pop
pop
call
mov
cmp
aam
push
test
ins
inc
lods
cmp
stos
add
fisubr
and
fs
aaa
sbb
xor
adc
movs
adc
jmp
fdiv
dec
sti
jo
imul
push
xor
jns
daa
ins
lahf
scas
mov
bound
out
out
cmps
dec
inc
cmp
sub
(bad)
fstp
pusha
cwde
jl
test
push
mov
ins
dec
dec
aad
jmp
sub
jne
in
xor
into
bound
mov
sbb
cwde
arpl
and
neg
test
addr16
outs
xor
outs
mov
jecxz
leave
dec
aam
push
int3
xor
or
mov
in
push
mov
bnd
movs
aaa
inc
loope
imul
shl
aam
lahf
outs
mov
add
add
popf
call
je
bound
mov
inc
jae
or
fimul
not
pushf
mov
push
mov
aam
pop
cs
sbb
in
(bad)
cmp
mov
inc
jns
xchg
pusha
xor
adc
jo
xchg
daa
jl
iret
repnz
xor
dec
cmp
dec
jb
push
jecxz
pop
leave
int
cmp
ret
add
sub
call
ret
aas
scas
add
adc
xor
mov
sbb
mov
mov
les
push
clc
mov
lods
mov
xor
mov
adc
or
int
call
movs
mov
inc
xor
ja
popa
stos
inc
outs
shl
inc
adc
mov
mov
retf
call
push
fstp
jecxz
mov
lea
mov
inc
push
ds
stc
sar
mov
addr16
aas
clc
dec
int
sub
call
stc
cmps
inc
push
sbb
push
mov
or
and
mov
test
enter
adc
bound
lock
scas
and
es
mov
mov
ins
ret
loop
inc
add
loopne
(bad)
push
mov
test
repz
and
dec
xchg
pusha
into
or
xchg
mov
lods
loopne
xchg
(bad)
jg
call
mov
fs
cmp
lods
mov
(bad)
jns
gs
ret
mov
in
stos
test
adc
sub
call
cwde
push
retf
fisttp
mov
push
jb
pop
retf
(bad)
rcl
das
ds
mov
push
jg
sbb
std
imul
(bad)
(bad)
mov
push
ss
xchg
and
mov
xlat
and
sub
movs
popf
in
out
or
adc
push
imul
rol
fisttp
sub
mov
js
or
pop
inc
sbb
shr
sbb
(bad)
call
push
xchg
addr16
lds
add
lods
and
add
pop
xchg
fmul
ficomp
xchg
dec
mov
cmps
and
outs
je
pop
mov
and
xchg
inc
mov
mov
jle
sti
sbb
push
inc
mov
mov
mov
fdiv
sbb
pop
mov
loopne
js
mov
dec
sub
test
push
enter
dec
sar
iret
push
sbb
push
xchg
or
outs
stos
rcl
or
fcomp
jmp
mov
and
cmps
clc
shr
adc
push
clc
call
adc
outs
add
jns
add
jg
mov
mov
lock
not
jge
not
mov
sub
and
(bad)
outs
cmp
jecxz
or
(bad)
rcl
dec
inc
mov
cmp
jge
adc
dec
jnp
les
inc
call
fsubr
pop
into
sti
fdiv
xor
aas
xrstors
test
push
out
sar
xchg
xchg
jge
dec
scas
cwde
cwde
popa
inc
adc
icebp
cvtpi2ps
adc
or
cwde
and
repnz
ja
fcomp
and
dec
push
adc
fld
and
cdq
ss
dec
fld
shr
dec
fsincos
xchg
adc
outs
add
sub
xchg
(bad)
loop
in
pushf
popa
scas
add
sbb
mov
cmp
ret
mov
dec
cmp
cmp
in
bound
stos
mov
cs
test
sti
pop
adc
iret
imul
pop
jge
(bad)
cli
sbb
sub
cli
and
xor
retf
int3
or
pop
popf
rcr
cmp
and
(bad)
jg
aam
test
fdivr
arpl
mov
pop
lock
clc
nop
sub
es
cmp
cmc
mov
mov
mov
outs
mov
sub
in
dec
(bad)
sbb
mov
jmp
shl
inc
pop
sbb
bound
push
es
std
mov
push
jle
leave
fnstcw
cmc
inc
dec
add
je
or
imul
jns
cmp
imul
(bad)
push
daa
jecxz
mov
cwde
cmp
adc
mov
cs
fdiv
aas
scas
jbe
xchg
fnsave
sahf
xor
nop
cwde
pop
adc
fsubp
enter
dec
mov
add
aam
pop
push
jecxz
cmp
cmps
cli
das
or
cdq
sub
sub
dec
popa
loope
fidivr
cmc
xchg
xor
jno
bnd
push
push
or
sti
das
rol
inc
dec
pop
mov
ins
fwait
ror
dec
aaa
inc
stos
mov
push
inc
test
mov
mov
mov
test
mov
outs
dec
mov
mov
adc
mov
push
js
add
jmp
rol
dec
mov
pop
ss
push
xchg
mov
shr
and
into
jns
in
ret
data16
mov
addr16
std
daa
mov
iret
lock
daa
or
call
ret
adc
ficom
retf
xchg
sahf
mov
retf
jmp
mov
pop
pop
inc
ins
loopne
retf
ss
pusha
les
fdiv
fsub
or
(bad)
mov
pop
arpl
mov
cmc
bound
sub
test
mov
lods
or
fimul
arpl
aad
pop
das
pop
inc
pushf
pop
std
ud0
(bad)
sti
mov
sbb
mov
jne
stc
les
cmc
sub
scas
inc
(bad)
ror
cld
ja
mov
dec
dec
cmp
push
cdq
mov
push
scas
pop
dec
push
out
fisubr
jle
mov
dec
mov
dec
cli
cdq
mov
or
pop
popf
arpl
mov
sbb
shr
ja
add
(bad)
movs
push
sub
je
(bad)
shl
push
add
add
mov
and
mov
frstor
ins
adc
xlat
mov
push
and
dec
ds
mov
lahf
dec
jns
fsub
daa
cmp
arpl
adc
mov
gs
inc
iret
ds
arpl
aam
jo
sub
imul
xor
out
sbb
or
shl
(bad)
lea
scas
sub
mov
cmp
adc
aam
dec
jnp
mov
jno
or
pop
pop
fcmovne
shr
push
outs
add
jg
das
rol
imul
pop
mov
mov
fprem
aas
push
jno
adc
ret
ret
pop
std
inc
test
inc
xchg
jns
in
rcl
pop
lahf
xchg
and
mov
popf
dec
jne
pop
dec
rcr
xor
add
sub
clc
mov
mov
js
ret
mov
out
jnp
pop
ss
fs
xchg
mov
shr
jecxz
scas
lea
call
mov
mov
mov
add
mov
inc
cdq
and
test
sbb
retf
shr
(bad)
or
xchg
add
in
inc
aam
mov
jmp
fldcw
cmp
pop
ja
das
push
mov
mov
loopne
in
jns
pop
inc
ror
out
sub
lods
mov
mov
out
inc
out
xchg
loop
fwait
and
cli
sbb
pusha
inc
sbb
xor
test
daa
inc
addr16
cli
scas
nop
mov
rol
mov
add
xchg
pop
(bad)
pop
repz
ficomp
stos
out
pusha
jle
movs
mov
outs
scas
mov
mov
clc
call
jecxz
fdivr
imul
mov
cmps
imul
push
or
cld
jne
jno
imul
sbb
dec
cmps
mov
mov
xor
repnz
mov
cmp
dec
pop
lock
mov
mov
lea
jne
aad
inc
jns
pop
or
stc
xchg
push
fld
cmp
xchg
xor
and
lds
pop
retf
jns
or
icebp
dec
sub
fadd
cld
cmp
dec
adc
dec
sahf
dec
xor
xchg
sar
das
jne
add
arpl
xchg
call
je
retf
dec
sub
jle
lahf
ins
inc
dec
fs
nop
fcomp
sti
fcomp
mov
jne
aas
mov
and
fmul
mov
adc
mov
sub
enter
xor
and
or
or
jmp
mov
or
inc
stc
sbb
lock
(bad)
fwait
jo
xchg
out
push
mov
in
dec
push
mov
dec
mov
mov
pop
lods
push
outs
cmp
jle
scas
dec
aam
cli
fneni(8087
cmp
(bad)
pop
rcr
jecxz
mov
fmul
(bad)
mov
nop
or
push
cmp
mov
sub
aaa
mov
cmp
out
call
adc
mov
fisub
xchg
inc
xor
mov
sti
test
mov
sar
test
test
push
inc
icebp
xor
xchg
movs
add
or
and
inc
mov
(bad)
addr16
popa
cmc
scas
fisub
outs
mov
popa
or
lods
movs
imul
adc
dec
enter
inc
nop
rol
dec
cmp
xchg
push
std
bound
fwait
dec
push
push
mov
sbb
or
jmp
pusha
out
ret
movs
(bad)
jae
iret
xchg
mov
push
push
adc
btc
ins
int3
in
push
mov
mov
retf
or
call
push
ret
mov
xor
sahf
imul
pop
mov
in
jl
lock
jmp
(bad)
call
cwde
cmp
jnp
mov
add
mov
jmp
mov
push
or
into
stc
in
scas
mov
nop
mov
outs
jmp
push
ror
inc
push
retf
jb
mov
stc
xchg
sbb
popf
adc
je
mov
aas
loop
or
push
xchg
push
adc
sub
shl
in
jl
sub
xor
loopne
lock
mov
mov
int
ins
push
inc
movs
add
cmps
out
jmp
cmp
xchg
movs
imul
and
lock
mov
mov
xor
mov
mov
cmp
lea
(bad)
out
sbb
or
bound
xor
and
push
pusha
out
arpl
pop
das
inc
sahf
jns
sub
add
fcmovne
dec
add
addr16
mov
aad
jbe
jge
stos
mov
xor
ret
sub
loop
and
adc
mov
das
shr
jne
(bad)
ds
popa
jae
movs
(bad)
div
jns
inc
mov
(bad)
mov
imul
xchg
int3
push
jb
in
mov
jnp
dec
dec
bound
scas
or
leave
adc
fist
mov
imul
pop
aaa
loop
lods
lods
dec
das
mov
dec
jne
sahf
sbb
or
shr
(bad)
jbe
adc
ds
sar
mov
fnstenv
pushf
push
stos
xchg
repnz
adc
cmp
mov
cmp
pop
in
pop
fmul
sub
cmc
push
xlat
repz
or
aad
repz
in
fstp
sub
and
fcomp
(bad)
adc
loope
ret
pusha
in
xor
jecxz
dec
leave
push
push
imul
das
rcr
ss
mov
aaa
js
pushf
inc
int3
sar
xchg
push
pop
(bad)
cmps
fs
cmp
cmp
in
arpl
cli
fs
les
xchg
push
jmp
and
popa
rol
jnp
jns
cmp
jnp
idiv
xor
(bad)
iret
aam
mov
enter
(bad)
and
adc
or
cdq
cmps
arpl
adc
jp
add
and
pusha
loopne
mov
cdq
mov
pop
div
xchg
xor
push
cmp
pop
mov
inc
(bad)
pusha
sub
iret
stc
pop
mov
sahf
inc
push
pop
mov
adc
int
in
pop
xchg
cdq
xchg
xor
mov
test
in
mov
pop
xchg
pop
sub
sub
lea
data16
rol
lods
dec
or
mov
clc
xchg
add
lods
cmp
lock
sub
rol
movs
or
popf
aam
icebp
mov
inc
int3
stos
jno
test
(bad)
enter
sbb
mov
dec
sub
pop
aad
xchg
adc
pop
fcom
fisttp
fcmovb
push
add
mov
xchg
cmp
cmp
pop
ficom
mov
mov
sbb
lock
inc
or
movs
(bad)
(bad)
xchg
jge
leave
pop
fs
rol
fwait
int3
not
fiadd
call
repnz
js
xchg
ss
cmp
fwait
data16
daa
push
add
xor
xchg
out
fwait
loope
rep
xor
cwde
sub
scas
pop
addr16
jmp
mov
std
mov
cmp
and
inc
push
dec
jp
xchg
mov
pop
mul
das
imul
xor
loopne
sub
xor
pop
jle
out
cmp
repz
sub
inc
and
add
call
loop
and
out
mov
xchg
pop
and
bound
cmps
mov
add
sbb
test
pop
inc
loop
arpl
dec
inc
lods
arpl
inc
nop
or
mov
cmp
mov
adc
jo
dec
xchg
jmp
sub
std
mov
xchg
ins
adc
cmc
jo
mov
push
shr
and
adc
cmp
das
enter
lahf
jnp
int3
test
fbstp
cmovno
std
push
pop
xor
inc
sub
xlat
ds
(bad)
xchg
or
dec
add
add
mov
imul
mov
scas
or
out
sub
test
mov
cs
movs
out
stos
ret
sbb
daa
ds
push
mov
push
sahf
jl
stos
jmp
fnstenv
out
aaa
and
inc
dec
or
or
pusha
fbstp
dec
jecxz
mov
std
js
mov
mov
stos
nop
sub
and
int
xchg
ficom
sub
jb
cmp
push
and
pop
cmp
aad
jecxz
lahf
lea
inc
xor
aam
pop
mov
out
mov
mov
mov
nop
pop
popa
pop
pop
fiadd
sbb
ja
or
inc
js
inc
test
mul
mov
mov
add
cmp
sub
js
adc
(bad)
adc
fsub
add
or
jecxz
out
add
pop
adc
sub
test
ret
mov
lock
data16
dec
jne
mov
aas
mov
ja
or
push
cld
loop
out
sub
(bad)
xor
imul
xor
mov
mul
mov
ds
and
push
xchg
shr
xchg
ret
sbb
into
popf
push
cmp
shl
sub
std
xchg
adc
push
inc
mov
or
dec
mov
fldcw
adc
mov
adc
call
sbb
mov
retf
std
stc
mov
pop
jmp
jae
mov
mov
test
sbb
dec
retf
ret
loop
lds
xor
(bad)
sbb
das
inc
stc
fs
mov
pop
fidiv
mov
xor
inc
jns
dec
inc
ret
popa
ins
adc
repz
jb
jmp
dec
out
mov
pushf
faddp
or
xchg
mov
ret
push
adc
aad
out
cmps
cmc
xchg
cli
scas
or
or
arpl
xchg
in
inc
jp
mov
mov
mov
arpl
jo
xor
adc
inc
sti
xor
mov
mov
xchg
pop
jl
mov
ret
sti
inc
lea
aas
dec
dec
xchg
dec
es
mov
mov
jle
shl
mov
jb
mov
xchg
mov
jmp
xchg
fbstp
mov
fldcw
jae
jmp
inc
xchg
pusha
sbb
xchg
xchg
ss
dec
ja
and
push
add
sbb
mov
leave
aad
mov
aam
mov
cmps
out
out
dec
xchg
jge
cwde
je
push
xchg
pop
push
in
jmp
inc
push
add
cmps
and
xor
pop
xchg
sbb
(bad)
dec
jp
mov
js
or
jmp
xor
retf
fisttp
pop
xchg
in
or
pop
mov
repz
inc
xchg
pop
jo
sub
shr
test
out
popf
loopne
scas
inc
shl
or
adc
mov
(bad)
mov
cld
dec
retf
adc
add
cli
data16
cmp
dec
dec
adc
les
retf
mov
cmp
or
rcr
adc
lock
sbb
dec
inc
ins
push
push
jns
clc
leave
enter
cli
jbe
xchg
mov
add
shr
leave
sub
in
mov
push
push
imul
outs
(bad)
push
cli
jg
test
in
sbb
popa
cmps
or
mov
xchg
les
hlt
inc
inc
hlt
outs
fldenv
push
(bad)
xor
inc
ror
enter
add
retf
adc
and
mov
push
(bad)
data16
icebp
push
popa
cmp
jns
mov
mov
cdq
(bad)
cmp
paddb
xchg
mov
scas
bound
ins
(bad)
cld
mov
into
stc
and
(bad)
icebp
(bad)
push
call
aas
ins
rol
test
loopne
jns
jmp
cmp
addr16
pop
lods
out
out
cmp
jo
out
rcl
inc
cmp
xlat
bound
(bad)
(bad)
das
leave
add
jnp
outs
and
shr
inc
add
(bad)
fcom
jae
mov
xchg
pop
ja
mov
(bad)
ds
and
mov
mov
imul
out
dec
arpl
fstp
aas
ja
dec
sbb
lahf
xchg
and
sub
cmps
mov
dec
test
imul
test
test
xchg
sti
jle
fst
(bad)
mov
fimul
and
mov
fwait
repnz
loop
call
sbb
push
mov
enter
push
jns
fnstenv
jl
adc
cli
adc
repz
cmp
and
loopne
popa
movs
inc
cmp
iret
pop
jae
cli
iret
les
fcomp
inc
jnp
sub
loopne
add
cwde
loop
lods
or
add
imul
imul
fs
rcr
leave
jmp
pop
add
inc
mov
sbb
in
rcr
inc
mov
jmp
ins
(bad)
pop
adc
hlt
les
sbb
ins
cmps
out
or
sbb
lock
dec
mov
dec
(bad)
test
push
ja
or
mov
mov
cmp
adc
jl
(bad)
ins
push
outs
ror
inc
adc
inc
js
and
sub
or
cmp
sub
hlt
test
adc
lock
inc
(bad)
sbb
nop
mov
arpl
fiadd
inc
ror
or
xchg
mov
leave
push
xor
add
call
out
leave
repnz
les
les
cmps
stos
test
lea
pushf
ret
scas
loope
mov
mov
adc
mov
movs
loopne
sub
dec
xchg
push
pop
popa
ins
ds
add
sub
ja
jmp
mov
in
out
inc
push
inc
fild
test
bound
(bad)
mov
dec
mov
not
mov
test
hlt
jmp
pop
test
pop
xor
imul
push
(bad)
lock
jae
shl
jecxz
out
loopne
ins
inc
cmps
ss
test
call
mov
and
outs
cdq
int
add
hlt
inc
cmps
mov
mov
xchg
or
jle
add
mov
out
dec
sub
push
xchg
push
stos
test
xchg
es
mov
jbe
fistp
movs
xchg
movs
in
mov
ja
mov
mov
xchg
sub
ret
rol
xchg
pop
pop
loop
adc
imul
mov
push
pop
add
mov
inc
inc
arpl
or
or
or
mov
stc
into
sub
cmp
pusha
sub
(bad)
fild
sub
test
add
cmp
pop
jb
test
(bad)
and
out
adc
sbb
pop
mov
jmp
leave
(bad)
fist
lock
into
in
push
mov
aad
or
push
dec
add
mov
enter
lods
cdq
hlt
add
sbb
push
loopne
jl
scas
inc
dec
mov
xchg
mov
icebp
jnp
mov
call
or
ss
jbe
div
mov
add
push
push
sub
stos
mov
push
sub
dec
xchg
cmp
and
addr16
repz
mov
pop
sub
lods
into
mov
push
cld
cmp
jle
idiv
add
imul
les
push
and
stc
mov
pusha
xor
and
je
repnz
out
xchg
xlat
xchg
popf
or
sbb
mov
addr16
into
sar
scas
movs
not
mov
adc
xchg
and
cs
mov
cmp
pop
aas
sub
dec
sbb
push
cmp
(bad)
and
pop
enter
xor
jg
mov
rol
int
cmc
xlat
je
or
push
js
mov
nop
lods
cs
shr
push
test
cmp
out
add
inc
xor
pop
lock
repnz
ins
retf
cmp
fs
push
mov
xchg
sub
cmps
cmp
mov
mov
retf
fs
retf
sub
repz
fwait
lea
xchg
fwait
push
in
or
jne
int3
or
and
pop
fld
enter
adc
sti
out
jle
dec
xchg
idiv
xor
fmul
mov
xchg
sub
repnz
adc
imul
sub
imul
das
int
call
cmps
(bad)
outs
jmp
out
je
inc
into
push
sti
lods
aam
dec
jnp
xor
fst
cmp
xor
sbb
stc
imul
push
in
daa
and
fstp
into
cmp
inc
push
xor
lock
and
mov
lea
xor
mov
out
ins
push
nop
jmp
fnstsw
cli
jp
sbb
mov
test
xlat
mov
push
cmp
fst
jmp
or
test
and
mov
scas
cmp
xor
das
xor
inc
fdivr
adc
imul
ins
push
push
mov
arpl
scas
mov
jno
xchg
das
and
xchg
inc
dec
mov
adc
sub
repnz
sbb
jle
lods
push
xchg
test
cmps
pop
ss
inc
dec
adc
ret
dec
sub
lds
mov
fisubr
enter
call
jmp
xchg
in
sbb
sbb
addr16
jne
fld
push
and
(bad)
out
adc
push
das
mov
xor
mov
loope
aas
add
mov
clc
pop
sar
out
aad
stos
aas
pop
ss
sub
xor
cmova
push
ret
push
les
shr
cli
xlat
call
xchg
popa
das
jo
adc
fstp
or
mov
push
cmp
(bad)
dec
mov
add
pushf
adc
mov
xor
xchg
mov
std
sti
mov
cs
(bad)
outs
push
pop
imul
add
xor
adc
jp
fwait
jp
jnp
inc
jl
test
jl
cmc
dec
cmp
cmps
inc
push
jle
sbb
adc
call
pop
dec
push
xchg
enter
or
sti
mov
mov
sbb
dec
sbb
xor
push
jg
jg
cmp
pushf
and
or
clc
in
dec
in
and
push
loope
cs
outs
cwde
push
jo
xchg
push
jo
pop
sbb
inc
inc
push
bnd
cmp
cmp
add
sub
adc
jmp
adc
xchg
and
mov
and
aad
call
jecxz
dec
add
mov
push
inc
sub
xor
pop
in
xchg
outs
mov
outs
push
aaa
aam
sbb
hlt
loop
mov
sahf
(bad)
in
jle
push
adc
test
adc
sbb
mov
sub
push
idiv
hlt
dec
adc
mov
sub
jg
outs
xlat
popa
cmovle
and
sahf
in
sub
aas
fadd
cmp
sub
xchg
dec
repz
loop
aas
jg
enter
mov
inc
xchg
adc
loope
mov
mov
xlat
pop
out
mov
jnp
or
sbb
lock
mov
movs
and
iret
sbb
rcl
cmp
sbb
cmps
fnstsw
push
int
jns
(bad)
xor
jg
sbb
and
mov
pop
xlat
fs
cli
dec
and
arpl
mov
ficomp
(bad)
push
push
fs
xor
shl
ja
dec
movs
mov
dec
cmp
fisub
xor
test
jns
loope
sahf
ret
or
out
and
mov
jg
(bad)
(bad)
adc
mov
push
lods
add
add
push
loopne
in
mov
inc
xchg
inc
mov
ins
shr
ja
cmp
ret
js
jo
lock
rol
pop
jb
pusha
sbb
or
aad
cli
mov
mov
mov
test
sub
bound
dec
test
mov
jmp
mov
xchg
pop
nop
mov
outs
bnd
sub
push
xor
inc
and
mov
retf
xchg
sub
add
in
adc
and
cdq
jecxz
addr16
cdq
jge
mov
jge
mul
jl
inc
sbb
movaps
inc
ret
jg
adc
pop
and
loopne
movs
jno
popa
rcr
sar
js
mov
pusha
je
shl
mov
cli
iret
ins
cs
jge
daa
inc
adc
stc
jecxz
sub
imul
ror
loopne
xor
or
cmp
pop
sbb
adc
popa
mov
shl
aad
sbb
mov
loop
sub
or
push
mov
inc
pop
(bad)
(bad)
push
adc
popa
and
adc
pop
mov
pop
scas
cmp
adc
dec
lds
test
and
aas
or
and
xchg
xor
popa
xchg
retf
inc
sub
and
sub
data16
mov
jecxz
mov
jle
sub
out
adc
add
lahf
out
inc
rol
ror
(bad)
repnz
mov
les
or
(bad)
mov
or
addr16
inc
push
cdq
cdq
or
lahf
fld
fcmovnb
adc
mov
mov
ficom
dec
xchg
xchg
pushf
jbe
mov
imul
push
ds
inc
daa
push
sub
xchg
ror
mov
sbb
xor
ror
rol
pop
outs
mov
nop
aam
test
repnz
pop
sub
dec
dec
pop
push
fidivr
mov
or
lea
pop
jnp
jecxz
lock
inc
and
imul
inc
push
or
stos
je
dec
mov
call
(bad)
fisubr
fs
std
pop
jl
scas
inc
out
sub
add
cmps
and
popa
mov
sbb
xchg
xor
into
mov
xchg
cli
retf
pop
loopne
test
pop
or
inc
aas
lock
mov
dec
xor
js
mov
push
pop
mov
jl
pop
ins
mov
or
pop
push
cmp
cwde
sbb
aas
sbb
sbb
scas
jp
jecxz
sbb
adc
adc
push
dec
push
dec
xlat
inc
add
mov
add
push
sbb
mov
jno
xor
sub
sub
mov
outs
sbb
jo
into
push
ret
inc
es
daa
mul
pop
push
sbb
sbb
adc
rcl
imul
push
sub
outs
pop
fsub
add
or
jge
pop
add
js
mov
ins
push
dec
xor
lods
cmc
pushf
mov
out
adc
lods
ficomp
fwait
sub
(bad)
daa
mov
imul
call
inc
sub
xor
(bad)
int3
cs
xchg
jge
daa
jle
inc
ja
xor
outs
push
std
mov
adc
xchg
xor
test
pusha
cmp
pushf
push
dec
jb
(bad)
sti
je
aas
mov
imul
fstp
cli
and
js
into
add
das
or
(bad)
mov
lods
xchg
sbb
xchg
retf
adc
out
in
scas
stc
inc
dec
jns
(bad)
in
cmps
les
add
inc
cmp
add
imul
je
inc
ret
ja
pusha
bound
sahf
jg
shl
repz
call
in
outs
mov
rcr
pushf
xchg
retf
ja
in
mov
jge
pop
cdq
xor
inc
repnz
xchg
sub
(bad)
mov
xor
sahf
mov
push
adc
seto
pop
inc
scas
clc
or
dec
dec
dec
retf
push
xor
add
icebp
dec
mov
sbb
push
cli
aaa
sti
dec
mov
cdq
sbb
aad
or
push
add
(bad)
and
das
lds
xor
jp
adc
and
imul
pop
pushf
popa
das
in
cld
adc
ja
mov
sub
cli
test
mov
es
cmp
and
push
adc
adc
cli
inc
xlat
rcr
and
xchg
leave
inc
push
and
enter
aad
inc
mov
pop
nop
adc
ds
(bad)
xor
pushw
mov
mov
loopne
xchg
adc
rol
xlat
jmp
and
call
js
aad
jbe
inc
arpl
sbb
lods
pop
mov
jnp
inc
dec
adc
adc
out
popa
cmp
jae
dec
xor
mov
shl
sub
or
ins
arpl
sti
ror
push
jnp
pushf
xchg
(bad)
jne
lods
fdivr
pop
xor
mov
sbb
inc
shr
adc
nop
imul
inc
or
ror
ss
jne
out
aaa
add
leave
xchg
call
dec
push
icebp
mov
mov
mov
jecxz
stc
xor
(bad)
imul
mov
push
das
mov
repnz
int
sti
scas
or
fild
add
inc
leave
arpl
sub
mov
push
cmp
shr
mov
dec
add
cdq
mov
(bad)
sub
ret
mov
retf
adc
push
xchg
loope
leave
cmp
sub
call
inc
fdiv
pop
sysenter
add
loop
shr
or
xor
popa
bound
clc
(bad)
(bad)
jae
pop
push
mov
or
in
retf
fnstsw
fisubr
(bad)
shr
pop
rol
mov
movs
xchg
(bad)
popa
stos
xor
add
mov
nop
lock
lock
repnz
loope
scas
cmp
repz
ins
fs
adc
lods
and
enter
inc
jle
psubsb
xchg
scas
fs
call
mov
jns
dec
sbb
(bad)
mov
pop
xchg
loopne
jle
in
ffree
fst
mov
in
mov
mov
jmp
(bad)
in
cmp
(bad)
and
sub
sbb
fmul
add
pop
enter
push
mov
jns
adc
jecxz
imul
xabort
xchg
push
popa
inc
fsubr
push
call
rol
fwait
call
aam
pop
ret
out
inc
ins
mov
mov
xor
xchg
mov
fldenv
(bad)
mov
es
bound
fcmovne
jno
xchg
ins
push
inc
out
lock
cs
inc
in
shl
add
sbb
gs
push
jmp
outs
sub
inc
clc
(bad)
lock
mov
jmp
adc
enter
mov
aaa
xchg
push
push
mov
je
inc
mov
mov
inc
push
and
or
jg
adc
ins
js
out
mul
sub
out
pop
adc
test
repnz
es
push
stos
cmp
adc
call
jg
in
movs
mov
cmp
and
ins
es
mov
pushf
test
bound
xchg
inc
imul
sbb
rcr
pop
out
jmp
and
push
jge
cmp
(bad)
sbb
adc
pop
jmp
xchg
dec
push
ror
loope
(bad)
jmp
cwde
scas
stos
pop
cmps
mov
mov
mul
call
inc
or
and
pushf
fnstsw
mov
jne
out
xchg
mov
and
stos
aaa
mov
add
mov
dec
mov
mov
sbb
or
(bad)
daa
xor
clc
dec
mov
movs
gs
or
rcr
cdq
aaa
scas
mov
hlt
or
push
test
sti
les
sbb
mov
popf
ret
mov
cmp
mov
loope
mov
add
inc
or
dec
stos
mov
or
mov
dec
ror
(bad)
(bad)
jle
push
and
shl
adc
xchg
test
push
dec
pop
ret
lock
aaa
push
dec
out
jp
(bad)
and
push
pop
retf
sbb
or
ja
aam
pop
div
ss
ins
cli
nop
repnz
shl
hlt
test
pop
sbb
fcmovne
mov
sbb
leave
in
nop
jo
in
(bad)
mov
push
(bad)
xor
ret
std
pop
xchg
retf
scas
cmp
cwde
xor
adc
lods
push
jno
scas
add
push
sub
fidiv
xchg
cmc
inc
es
dec
and
repnz
xchg
in
jmp
fcmovbe
in
cmp
jecxz
push
adc
(bad)
fimul
int
pmulhuw
push
pop
adc
push
sub
xchg
pop
pop
das
add
sahf
push
xlat
push
push
add
xor
pop
push
adc
sahf
dec
out
jnp
mov
sub
leave
push
xor
jl
xchg
pop
stos
test
jg
sbb
imul
xchg
xlat
cmps
sbb
inc
scas
rol
(bad)
not
mov
js
or
in
daa
lea
sub
mov
cdq
das
stos
push
cmps
jae
scas
pop
mov
in
aam
and
dec
scas
push
retf
in
(bad)
xor
fld
rcr
jae
pop
movs
in
mov
test
cmp
mov
pop
inc
aaa
lea
fisttp
sub
dec
add
aad
cld
pop
dec
jmp
xchg
jmp
cs
adc
push
xchg
sub
inc
mov
cmp
hlt
ins
jne
jge
jns
int3
mov
xchg
call
repnz
in
lods
(bad)
adc
mov
(bad)
iret
stos
jno
or
sub
cmp
sbb
xor
sbb
retf
es
test
ficomp
push
das
rcl
int
inc
inc
sbb
xor
cmp
add
jae
jbe
pop
dec
xor
hlt
mov
fiadd
out
rcl
imul
ret
and
sbb
in
adc
sbb
mov
mov
dec
out
std
test
jne
into
mov
ror
out
sub
test
movs
pushf
loope
sub
adc
les
mov
vmovaps
cmc
jb
ja
jecxz
jne
jno
xchg
add
sub
ja
addr16
dec
jl
sub
sti
lods
hlt
pop
sbb
sub
mov
xor
es
lahf
stos
mov
fmul
shl
cwde
dec
sbb
push
mov
jg
add
movs
inc
sub
or
or
sbb
sbb
dec
pop
popf
xor
mov
add
nop
hlt
xor
rcr
push
mov
(bad)
cli
xchg
xor
xor
hlt
pop
jl
retf
das
popf
aad
in
sub
js
sub
pop
sbb
mul
ins
fwait
bound
shl
xchg
mov
mov
pop
bnd
pop
or
jp
sub
out
scas
gs
jp
jno
sub
call
out
and
dec
fcomp
not
in
mov
xchg
mov
or
sbb
push
mov
test
push
fimul
inc
mov
lds
bnd
ret
leave
ss
(bad)
retf
pop
aam
xor
add
or
adc
or
fwait
and
adc
mov
mov
ja
xchg
inc
cld
mov
sbb
std
js
fmul
in
test
mov
jbe
and
jmp
sbb
or
enter
add
cmp
jge
push
ds
xor
mov
and
pop
out
sbb
add
aam
clc
(bad)
pusha
push
or
xor
dec
sbb
jge
dec
movs
nop
push
retf
mov
cdq
in
xor
fstp
sbb
(bad)
and
xor
mov
leave
add
jl
shr
sbb
scas
pop
sbb
inc
popa
(bad)
jmp
js
loop
out
mov
pop
bound
ins
adc
mov
adc
and
or
ret
out
push
outs
(bad)
push
imul
push
inc
push
xchg
mov
or
lods
punpcklbw
mov
(bad)
sbb
mov
dec
mov
mov
pusha
jnp
push
aad
outs
jle
fld
ror
sbb
dec
(bad)
cli
or
pop
fld
pop
and
fnstcw
test
sub
cmp
cld
into
scas
lock
mov
and
fistp
std
stc
in
leave
push
stos
pop
test
jl
leave
aas
xor
jae
inc
or
jb
jo
and
lds
pop
or
push
iret
dec
dec
or
rol
or
sub
fisttp
push
adc
push
push
in
out
enter
xchg
popa
cmp
push
enter
aas
ss
std
add
movs
sbb
shl
into
not
cs
dec
cwde
(bad)
jnp
pop
test
shl
pop
or
jnp
and
mov
cmp
retf
mov
dec
(bad)
mov
into
movs
xchg
stos
aad
ret
adc
ret
inc
pop
mov
data16
pop
ja
es
pop
ret
pop
mov
xchg
push
js
cmp
clc
stos
or
rcr
push
imul
mov
xor
xor
push
(bad)
in
popf
mov
int3
sbb
pushf
adc
push
cmps
in
jge
adc
cmp
xchg
and
fld
dec
ret
adc
shr
mov
adc
xor
sbb
xlat
(bad)
sbb
jae
test
jae
stos
sahf
xchg
jns
sub
cld
loopne
inc
pushf
call
test
or
dec
outs
mov
mov
data16
in
mov
push
stc
ja
xchg
push
out
push
into
dec
push
cld
adc
iret
adc
loop
call
mov
repz
xchg
cmp
mov
mov
push
push
fisttp
in
(bad)
(bad)
jbe
add
test
jp
mov
dec
ret
add
sub
jae
inc
cs
and
xchg
bound
mov
bnd
fld
dec
cmp
jl
and
jno
pop
jmp
push
(bad)
out
xor
sbb
mov
lods
xor
add
sub
sub
sub
pop
scas
lea
mov
push
sbb
jno
lock
adc
jb
mov
out
mov
lods
adc
sbb
ds
enter
sbb
mov
aas
sbb
and
dec
gs
out
arpl
cld
push
mov
call
jmp
pop
cmp
into
call
fiadd
retf
mov
daa
mov
mov
xor
stos
sub
jecxz
sti
cmp
sbb
mov
pop
dec
scas
fild
enter
aaa
pop
and
push
fwait
in
cmps
cmp
ss
sub
adc
and
nop
movs
pop
inc
test
out
bound
aam
pusha
sub
fucomi
jg
je
es
mov
and
das
sub
movs
jnp
mov
jge
xor
pop
or
and
cmp
aad
dec
pop
mov
and
jg
pop
mov
mov
add
push
jecxz
mov
push
outs
fbld
ins
mov
popf
xchg
cmp
scas
out
rol
repz
xchg
adc
(bad)
push
push
(bad)
mov
pusha
mov
push
jb
ficom
mov
pushf
sbb
sub
jl
les
cmp
and
jbe
ret
ror
push
scas
je
xchg
shl
or
xchg
lock
mov
test
xor
pop
mov
and
or
xor
repz
outs
bnd
pop
or
jg
ins
adc
cwde
adc
push
les
addr16
into
out
jle
das
es
mov
add
jb
mov
aas
mov
or
call
aaa
cmp
push
pop
or
mov
push
or
mov
mov
cmp
pop
sbb
add
lahf
xor
or
inc
push
cli
and
nop
jmp
pop
std
mov
add
dec
dec
mov
shr
pop
ds
jo
xor
loope
push
jge
jp
jle
jbe
in
cmp
imul
cwde
lea
xchg
jge
lods
xor
add
aas
jmp
cdq
xchg
push
pop
mov
jecxz
mov
dec
fisub
fcmovu
and
push
mov
imul
mov
pop
js
mov
hlt
jmp
test
xchg
add
inc
data16
cld
ins
add
sub
push
popf
fimul
loop
sub
jbe
lea
xlat
(bad)
and
aaa
daa
(bad)
lock
(bad)
jle
enter
mov
pop
and
shl
sub
das
mov
data16
xor
dec
cmp
cli
(bad)
enter
xchg
add
xchg
mov
add
mov
mov
ins
or
div
mov
add
pop
mov
(bad)
or
xchg
mov
lods
push
xchg
add
mov
jnp
js
or
enter
test
jp
sahf
test
retf
dec
inc
pop
xchg
mov
mov
and
lods
(bad)
pop
add
xchg
push
iret
push
jno
rcr
fbstp
or
jp
push
xor
pop
ret
pushf
ins
out
sub
movs
add
das
push
or
and
add
pop
iret
and
mov
cwde
sti
js
sbb
mov
jo
(bad)
popa
dec
push
dec
inc
cmp
outs
(bad)
rol
xor
inc
and
je
adc
xchg
xchg
loop
test
gs
xchg
lods
int3
mov
push
push
jp
cs
(bad)
popf
push
jge
add
ret
nop
pop
mov
mov
jl
push
inc
sti
fnstenv
fs
jne
dec
stos
stc
cdq
xor
mov
dec
frstor
xor
not
mov
iret
push
cld
jae
sbb
ins
jmp
scas
test
or
xchg
movs
repz
call
or
retf
pop
movs
mov
xor
pop
and
loope
lods
adc
sbb
nop
xlat
test
and
mov
(bad)
jo
mov
call
push
enter
or
sbb
in
loopne
sub
cli
fstp
in
pop
jg
xor
mov
(bad)
and
enter
jne
xor
xor
hlt
jl
or
mov
out
xchg
push
outs
(bad)
cmp
push
pop
pop
xor
sbb
(bad)
mov
leave
jp
pop
add
add
adc
dec
mov
fistp
push
xor
call
mov
cmp
shl
xlat
mov
(bad)
packuswb
sti
push
lods
fisttp
sub
out
mov
cmp
lock
xchg
out
loop
fwait
stos
xchg
pop
sub
jae
(bad)
adc
push
xchg
fbstp
push
dec
mov
jg
fnstcw
push
repnz
cmp
pop
mov
aam
cwde
(bad)
out
mov
or
pop
cmps
mov
movs
and
jge
mov
aad
cmp
sbb
sahf
or
test
and
or
push
aad
cmps
aaa
mov
imul
adc
imul
out
shl
dec
cmps
mov
(bad)
xchg
mov
add
lods
jge
mov
mov
add
push
jb
cs
pop
mov
fcmovnbe
push
push
(bad)
loop
enter
jo
cmp
dec
loopne
or
pushf
imul
dec
les
xlat
shl
movs
push
popf
jp
aam
jg
sbb
call
(bad)
and
popa
mov
call
sbb
loope
add
cdq
and
xchg
lods
ins
jae
test
jecxz
jmp
cmp
hlt
and
inc
push
xchg
aas
lahf
iret
aaa
mov
retf
test
and
xchg
mov
sbb
aad
pushw
scas
clc
lds
iret
inc
es
movs
pusha
push
mov
pop
jl
ins
cmp
xchg
scas
mov
shl
lods
sbb
xchg
loop
lods
push
out
popf
mov
imul
daa
pusha
jge
popf
cs
push
pop
test
shl
scas
xchg
inc
add
mov
int3
loop
and
mov
ffree
cmps
ins
js
mov
cmp
cmp
int3
mov
das
shl
repz
pop
jmp
sub
mov
push
(bad)
stos
(bad)
xchg
mov
(bad)
lods
iret
and
hlt
test
ds
mov
and
fwait
and
loop
push
arpl
or
push
push
in
in
sub
sbb
fistp
push
or
cmps
pop
mov
test
xchg
test
ror
ins
mov
aad
mov
mul
aam
pop
mov
add
xchg
(bad)
inc
std
and
dec
movs
pop
adc
pop
inc
out
js
add
mov
sahf
sub
lods
jecxz
push
mov
mov
xchg
cwde
ja
cmc
pop
xor
pop
retf
jmp
pop
push
add
fdiv
out
push
add
int3
jmp
pop
dec
adc
sbb
cmp
mov
pop
adc
fiadd
das
(bad)
hlt
cmps
cmp
cmc
or
push
jmp
xor
out
std
and
pop
sbb
call
js
(bad)
cmp
add
ins
jge
frstor
test
and
adc
and
ss
or
pop
(bad)
pop
xchg
add
shl
and
addr16
jl
movs
mov
ins
pop
js
pop
cmp
dec
lahf
and
xlat
sub
mov
test
add
xchg
sub
into
outs
jmp
(bad)
(bad)
(bad)
stos
cli
in
mov
xchg
fucom
dec
cmp
mov
aam
mov
ds
test
pop
ins
shr
retf
sar
inc
shr
mov
ins
push
imul
jp
outs
jg
dec
jmp
or
jns
push
js
sub
jo
xor
fwait
sub
mov
sbb
pop
or
xor
loop
mul
stc
les
lahf
dec
or
shl
push
hlt
mov
sub
fcom
or
in
cli
jb
outs
in
push
jno
out
jo
push
cdq
outs
rol
xor
mov
push
rcl
xor
mov
fisubr
push
dec
frstor
push
sbb
je
adc
ins
shl
fst
add
fs
xor
inc
cmp
mov
dec
std
adc
outs
inc
and
(bad)
shr
adc
pop
cmc
mov
iret
fdivr
mov
sub
cmc
jg
and
inc
cli
call
dec
or
popa
imul
mov
jecxz
mov
sbb
clc
sbb
push
cmp
jmp
cmc
les
pop
or
fadd
dec
cmp
and
rcl
aam
mov
or
(bad)
pop
sub
jne
dec
cmp
js
repz
fisubr
xlat
xchg
jp
pop
pop
pop
movs
out
je
sbb
movs
leave
data16
addr16
out
scas
jle
xchg
pop
mov
inc
fld
and
mov
inc
cmp
and
or
fsubr
adc
mov
push
adc
ds
test
lock
out
mov
test
movs
out
out
repnz
lods
push
push
cmps
pop
int3
mov
imul
push
mov
rcl
arpl
das
shl
add
dec
xchg
xchg
xchg
inc
imul
inc
dec
stc
outs
addr16
aaa
push
mov
mov
mov
aaa
stos
aaa
stos
ret
je
jns
xor
(bad)
push
mul
pusha
call
push
dec
(bad)
pop
cmp
jecxz
and
pushf
mov
add
jns
cmp
test
xor
stc
ret
es
pop
cmp
mov
mov
hlt
mov
fst
loopne
inc
add
sub
sbb
int3
pusha
stos
div
pop
nop
or
push
xchg
jno
stos
ret
push
div
mov
mov
xor
test
mov
je
fisubr
rcr
sbb
rcl
sub
xlat
mov
aam
jge
mov
ror
or
push
push
or
jb
jg
retf
push
mov
dec
ins
scas
pushf
stc
out
dec
add
mov
inc
ss
and
imul
sub
lods
test
call
movs
add
out
sub
retf
jae
hlt
leave
jne
sub
and
inc
retf
cli
lds
and
scas
pop
fld
sbb
fstp
(bad)
jbe
mov
add
loop
jmp
xchg
dec
ficom
and
add
repnz
inc
hlt
ret
popa
pop
and
cs
pop
cmp
xlat
xchg
pop
cli
call
ret
and
mov
pop
and
cmp
add
hlt
sub
fmul
test
xor
arpl
pop
clc
add
add
lahf
add
add
adc
fcomp
psllq
pop
xchg
pop
mov
inc
sbb
mov
cmp
mov
cdq
sbb
clc
xor
outs
pusha
dec
xchg
fisub
pop
xor
push
inc
xchg
mov
jo
push
inc
sub
arpl
ins
cdq
cs
call
call
int3
pop
jae
mov
cli
mov
dec
jp
aam
ja
loope
or
sbb
call
dec
pop
xor
ins
cmove
or
mov
and
xchg
ret
hlt
sub
in
cmp
repz
push
mov
(bad)
addr16
jg
inc
inc
mov
cli
or
rol
mov
jne
(bad)
ds
dec
fsubr
pop
(bad)
fnstcw
pop
jb
jbe
jge
loope
jge
mov
xor
add
mov
(bad)
ficom
ror
shr
(bad)
jmp
ds
sbb
pop
xchg
sti
push
xor
push
fs
jecxz
mov
and
sbb
dec
cmp
stos
ret
add
ror
sbb
fdivr
test
out
sub
and
ins
inc
cmps
imul
outs
push
mov
movs
adc
imul
cmc
fs
pop
mov
add
jl
cmp
stc
push
into
cmc
jp
mov
hlt
das
push
or
popa
add
shl
cld
mov
push
aam
adc
cli
dec
mov
(bad)
loop
jl
sbb
mov
data16
inc
mov
scas
popf
push
push
pusha
xchg
push
fstp
sub
sub
ret
je
scas
inc
jbe
push
xchg
ret
jbe
mov
jecxz
sub
pop
jbe
cmp
add
repz
pusha
jge
je
or
aam
pop
inc
xor
cdq
jae
out
sbb
sub
bound
out
clc
dec
pop
jmp
(bad)
jbe
add
push
jle
jp
cli
call
sub
push
xor
(bad)
pop
dec
enter
enter
pop
int
outs
adc
adc
iret
and
xchg
js
jmp
outs
(bad)
ret
popa
sbb
dec
inc
das
and
clc
pop
adc
sti
ret
dec
xchg
xchg
out
sbb
repnz
mov
mov
jcxz
mov
mov
add
lock
xor
daa
mov
jbe
iret
lahf
and
pop
sbb
outs
cmp
(bad)
scas
ror
cmp
mov
mov
out
mov
cmps
jp
js
aaa
lods
nop
push
cmp
xchg
into
pop
add
call
fild
adc
cli
sub
jge
xchg
push
or
sbb
sub
scas
jo
popf
cmp
push
dec
test
adc
scas
sbb
callw
sti
out
ret
add
stos
mov
ficomp
xchg
aam
dec
mov
sahf
mov
sub
push
xor
test
je
gs
mov
stos
xchg
xor
sbb
jg
inc
jne
daa
cmp
cmp
dec
rol
test
in
ret
add
or
xor
sub
stc
call
mov
ret
ds
mov
repz
xchg
mov
xor
mov
pop
or
(bad)
clc
dec
mov
add
dec
jno
mov
xchg
jmp
jle
inc
cld
rol
cmps
repz
in
shr
jmp
ja
and
icebp
pop
mov
push
push
cdq
push
push
cmp
aam
push
lods
in
adc
push
and
sbb
(bad)
xlat
out
mov
aas
mov
or
shl
shl
mov
pop
xor
cdq
xor
loop
fistp
pop
mov
add
jg
lods
or
lods
jnp
les
and
test
dec
hlt
add
sub
jle
mov
or
test
lahf
fs
ret
xchg
(bad)
(bad)
sbb
nop
jne
inc
aaa
push
scas
sub
jne
test
lods
mov
mov
dec
xor
push
js
je
mov
lea
sub
daa
movs
cmp
and
cld
(bad)
mov
test
cld
add
push
clc
adc
mov
push
getsec
or
ret
test
mov
xor
out
or
je
(bad)
mov
adc
mov
or
mov
xchg
jbe
pop
mov
cmp
(bad)
add
push
pop
sbb
add
fcmovne
cli
sbb
sbb
sbb
cld
out
jg
jl
or
cdq
inc
cmps
loopne
gs
dec
sar
setge
or
xor
cmps
push
repz
lock
jecxz
jo
clc
sbb
dec
imul
imul
push
cld
out
push
mov
call
inc
es
push
test
clc
and
nop
aam
pop
scas
nop
sbb
jp
pop
jbe
mov
push
ficomp
cmp
mov
test
inc
jp
push
mov
mul
hlt
test
mov
pop
lock
pop
fcomp
jo
xchg
rol
mov
xchg
mov
out
xchg
jl
cmp
sub
icebp
leave
test
sbb
jnp
fild
dec
pop
pusha
test
push
and
mov
fsubr
dec
cmps
mov
pminub
pop
stos
popf
sub
jmp
sub
ror
repz
jp
test
shl
fld
sbb
add
mov
jbe
pop
(bad)
jmp
test
iret
sahf
add
mov
(bad)
ins
xchg
loop
hlt
mov
mov
mov
das
sbb
pop
aaa
fnstenv
fnstenv
and
gs
and
pop
movs
loopne
loopne
arpl
test
mov
xchg
lods
mov
ins
mov
sahf
push
daa
in
loopne
add
add
cmp
cmps
push
pop
outs
xchg
aas
gs
fild
inc
jge
into
inc
xor
add
loopne
cmp
jp
adc
push
add
pop
inc
jbe
js
cmp
vpmadcswd
pop
or
or
pop
push
cmps
push
(bad)
(bad)
push
outs
inc
pop
xlat
aaa
dec
or
add
int
rcl
shr
adc
or
aas
mov
sahf
jg
(bad)
stos
jnp
fwait
sub
pop
ins
aas
dec
lock
test
mov
fcomp
mov
sahf
(bad)
pop
jecxz
sub
cmp
or
pop
pop
inc
mov
pushf
ret
lahf
jne
or
repz
inc
add
lods
cmp
or
neg
stc
fdivrp
cdq
sti
inc
jg
jp
jne
das
pop
rcl
retf
lods
aad
xchg
popf
add
retf
int
adc
xchg
push
scas
loopne
inc
(bad)
(bad)
into
outs
jo
sar
mov
das
loop
inc
cli
sysret
mov
jbe
js
loopne
adc
xor
aaa
dec
and
cmps
lods
pusha
cmp
ins
or
loopne
pop
push
sub
out
xchg
rcl
pop
pop
add
jmp
sbb
pop
lds
sbb
fldz
out
repnz
cwde
mov
clc
jae
aad
jecxz
or
aad
stos
xor
jl
jmp
inc
mul
dec
popf
dec
je
ret
out
xlat
sub
cmps
retf
cmps
dec
fwait
cmp
sbb
or
push
xor
fprem1
shr
cmp
push
push
jno
scas
bound
jo
(bad)
jb
iret
cdq
vpinsrw
xor
stos
imul
jmp
jnp
jno
outs
fsubp
call
imul
xchg
sub
lahf
shl
lock
push
outs
fisttp
sbb
aaa
push
add
loopne
or
outs
sbb
(bad)
lods
nop
out
aas
and
rol
into
pop
call
iret
out
or
sub
or
mov
xchg
outs
cmps
add
jb
sub
adc
inc
and
ficomp
(bad)
int
imul
(bad)
cmp
hlt
dec
or
cmp
jno
mov
mov
or
xor
push
pop
fild
and
add
mov
mov
cmp
ficom
bound
es
mov
xor
(bad)
sbb
jmp
ds
jno
cmp
mov
or
or
xchg
mov
xchg
adc
cmp
fwait
loop
data16
mov
aaa
retf
je
sbb
adc
test
mov
push
push
mov
add
gs
push
stos
cwde
mov
pop
mov
mov
lods
pop
out
fs
shr
ins
in
test
sbb
inc
ja
iret
adc
or
cmp
push
es
push
cld
xor
and
aad
daa
mov
xchg
or
xor
int
es
fstp
mov
adc
ds
shl
stos
in
mov
inc
iret
adc
(bad)
scas
mov
arpl
aaa
dec
iret
rol
or
ret
in
ins
lods
or
cmp
arpl
mov
xchg
sub
jp
into
and
add
mov
daa
loope
jne
je
cli
adc
shl
jns
push
ins
inc
mov
sub
sahf
aas
pop
sub
mov
xchg
adc
ficomp
cld
push
add
inc
jne
push
sbb
loop
xchg
push
and
xlat
push
cmp
cmps
jge
cli
dec
call
add
pushf
ror
movs
cmps
sbb
in
arpl
adc
xor
xor
mov
mov
out
pusha
dec
pop
outs
dec
pop
push
fcom
fidiv
pushf
mov
leave
xor
ss
jo
xor
add
fist
adc
das
test
arpl
aas
and
jle
mov
and
(bad)
push
mov
aaa
sub
dec
dec
pop
sti
mov
mov
cli
(bad)
fsub
sbb
mov
add
mov
dec
and
pop
loope
ret
mov
rol
fimul
lds
(bad)
leave
jns
jo
cdq
jae
and
add
not
xchg
bound
cdq
outs
shr
sbb
jns
bound
clc
jbe
adc
ds
out
dec
rcr
jb
scas
ds
lods
xor
jnp
xor
mov
outs
out
inc
adc
inc
jbe
jl
stos
dec
popa
stos
pop
shr
push
lock
loop
inc
cmp
gs
cmps
pusha
xor
mov
pop
or
int
sbb
or
mov
aaa
sub
lds
jmp
xor
fs
ret
inc
sub
sete
inc
dec
je
mov
fucomi
jecxz
pushf
adc
mov
push
aas
and
frstor
ret
mov
bound
mov
xor
(bad)
lea
or
test
xchg
(bad)
or
pusha
xchg
mov
push
mov
sti
adc
push
push
push
xor
cdq
mov
stos
repnz
fimul
sahf
inc
sti
shr
movs
ss
push
push
mov
shr
mov
push
xchg
sbb
(bad)
in
(bad)
iret
mov
shr
outs
push
sahf
scas
loope
jmp
mov
mov
jns
scas
or
fsincos
push
jmp
cmp
test
nop
pop
inc
jmp
jno
lods
push
cmc
or
mov
jmp
test
sbb
in
ins
adc
stos
jmp
cmc
es
inc
jmp
mov
inc
mov
retf
sbb
push
in
ror
into
cli
adc
cld
push
sbb
lahf
or
mov
push
push
mov
in
mov
std
mov
push
and
gs
mov
cmp
mov
in
mov
out
mov
lods
fistp
push
popa
jae
call
add
cli
sbb
mov
cmps
cmp
mov
push
aam
mov
sub
nop
aaa
test
mov
add
nop
stos
jne
mov
adc
pop
pop
ja
pop
push
(bad)
push
repnz
jae
mov
xchg
dec
sub
in
(bad)
rol
rcr
pop
add
rol
in
dec
or
push
pusha
jns
mov
xor
jecxz
mov
push
push
movs
push
mov
jnp
imul
bound
sub
adc
and
push
cmps
sbb
and
fwait
cwde
enter
adc
dec
popa
fsubr
push
pusha
das
sbb
xchg
repz
into
add
call
dec
jmp
inc
xchg
push
pop
outs
fsubr
jbe
(bad)
and
jo
push
lock
add
rcl
ror
imul
lea
sbb
pop
inc
(bad)
icebp
icebp
mov
push
adc
dec
mov
push
or
push
clc
xor
clc
push
cmp
jmp
push
inc
jmp
ins
pop
cmc
das
out
loop
jae
mov
out
out
scas
pop
(bad)
push
jo
cmp
ret
outs
rcl
popf
mov
retf
xlat
pop
repnz
fist
iret
stos
out
test
xchg
xchg
pop
xor
mov
aaa
xor
mov
mov
(bad)
jg
and
cmp
mov
xor
pop
out
push
cmc
repnz
sahf
push
add
icebp
mov
jmp
adc
imul
cs
mov
(bad)
ds
icebp
mov
jmp
rcr
adc
and
sub
bound
ins
mov
jns
jle
(bad)
ror
pop
inc
aad
cmp
pop
out
xor
pushf
mov
shr
aaa
ficomp
mov
xchg
add
push
and
cmp
mov
jle
inc
and
push
jns
xor
(bad)
fnstenv
mov
cld
ds
fs
push
(bad)
clc
mov
mov
sbb
add
cmps
xlat
rcl
or
in
pop
lea
movs
lds
adc
sbb
lods
bound
push
push
inc
cmp
jnp
js
clc
dec
call
je
inc
add
test
lahf
jae
(bad)
int3
ss
popf
test
neg
clc
in
xchg
loopne
jg
or
jns
add
loope
sub
xchg
and
scas
dec
xlat
push
cmp
jne
sub
mov
add
imul
and
sub
xchg
add
sbb
dec
mov
push
or
sub
(bad)
and
cs
jp
(bad)
retw
stc
and
outs
xor
jb
pusha
daa
jmp
cmp
outs
ins
shl
aaa
mov
add
(bad)
paddw
das
pop
out
iret
push
jnp
sti
mov
or
mov
movs
push
xchg
cs
mov
inc
mov
xchg
jne
mov
jnp
pop
inc
inc
mov
adc
jns
ret
dec
push
cmc
popa
loop
out
cmp
sbb
imul
mov
push
ds
outs
xchg
pop
scas
dec
fistp
jp
sub
retf
lea
call
movs
jb
icebp
inc
xor
pop
adc
xchg
scas
pop
repz
or
call
dec
sbb
xor
lock
int3
mov
enter
lock
gs
or
mov
push
mov
div
xchg
adc
jnp
adc
or
lock
mov
push
jbe
ret
cwde
xchg
inc
mov
push
sbb
mov
and
pop
push
jnp
xor
(bad)
push
(bad)
jnp
test
fwait
cmp
ret
gs
cmps
mov
cmp
mov
cmp
xor
xchg
lock
int
aaa
in
jo
jg
fisttp
jnp
std
sub
and
repnz
mov
mov
out
repnz
jo
sbb
outs
(bad)
push
cmps
retf
fs
adc
mov
mov
cld
scas
(bad)
pop
add
repz
fadd
pop
and
sbb
dec
rol
es
or
retf
imul
mov
xchg
std
push
push
je
xchg
ror
rol
sub
div
aam
retf
jmp
mov
add
lahf
push
mov
scas
in
bound
gs
into
cmp
in
nop
rcr
jns
mov
add
popf
pushf
sub
shl
enter
sbb
dec
rol
loope
test
scas
dec
inc
pop
aas
inc
jecxz
jnp
daa
movs
xchg
jae
sub
outs
cdq
std
pop
popf
xor
and
mov
lds
(bad)
cli
adc
enter
inc
xchg
mov
shr
jecxz
aad
sbb
jmp
add
inc
mov
gs
and
adc
xchg
inc
push
dec
jg
jmp
(bad)
rol
sbb
jns
inc
ss
leave
leave
mov
ds
dec
mov
mov
lods
loop
dec
mov
inc
mov
jbe
pop
pop
pop
(bad)
dec
mov
xor
xchg
inc
loop
jl
xlat
sub
push
mov
mov
push
cdq
fst
adc
movs
js
into
jns
in
fs
or
lds
ds
shl
jmp
jmp
push
or
mov
mov
mov
call
stos
push
push
xchg
out
pop
mov
dec
imul
outs
imul
lods
nop
xchg
add
cld
(bad)
jb
pop
not
push
std
cs
out
add
and
mov
xchg
or
push
(bad)
xor
push
sub
push
push
push
test
call
test
cmp
add
sub
(bad)
push
stos
or
mov
out
int3
hlt
and
xchg
push
addr16
pop
push
dec
cmps
jns
sbb
sub
les
mov
(bad)
xchg
inc
sbb
xchg
js
mov
fs
mov
adc
pushf
lea
mov
dec
xchg
cmps
in
test
lea
sbb
fs
mov
loop
sub
jmp
jne
adc
or
pop
mov
arpl
ret
sti
rcl
mov
mov
shl
dec
jnp
fstp
mov
fnstsw
jge
cmp
mov
jmp
fs
push
xchg
lds
xchg
clc
push
push
ins
mov
push
dec
shl
fimul
hlt
inc
add
sbb
mov
mov
outs
scas
add
jecxz
cld
sub
inc
in
pusha
ror
loop
sahf
adc
push
retf
je
adc
dec
mov
push
in
sub
(bad)
mov
jg
les
and
jl
mov
ins
les
sbb
(bad)
arpl
enter
outs
sbb
mov
cdq
lods
and
add
sar
outs
mov
inc
mov
mov
setg
inc
jmp
dec
sbb
dec
or
pushf
and
mov
mov
rol
pop
fldlg2
movs
inc
mov
mov
jno
add
loop
outs
inc
add
fild
adc
add
movs
mov
mov
mov
sub
inc
movs
outs
and
or
add
rcl
mov
cmp
add
in
nop
ret
out
fild
sub
mov
push
add
pop
sub
and
cwde
les
jl
sbb
fdiv
push
sar
jo
loopne
mov
sti
xchg
xchg
stos
jg
sub
add
inc
js
jbe
pushf
pop
cld
aam
sub
ss
mov
test
sti
cli
xchg
ret
sub
jecxz
or
fst
jne
mov
jecxz
mov
mov
addr16
imul
xchg
sub
jmp
sbb
retf
pop
mov
sub
int3
cmps
neg
ficom
daa
cmp
jle
ret
iret
xchg
scas
gs
int
cmp
mov
enter
pushf
and
adc
jmp
xchg
iret
std
js
jmp
push
xor
sbb
dec
ins
jle
fldcw
std
xchg
jecxz
adc
stc
mov
repnz
mov
(bad)
adc
fnstenv
sub
idiv
jg
inc
scas
sbb
sub
dec
or
or
mov
mov
test
pop
std
xchg
xchg
div
shr
(bad)
or
repnz
or
fisubr
cmp
xor
movs
jg
mov
imul
lods
adc
mov
fs
cld
and
push
repnz
je
lods
xchg
loop
ins
sbb
adc
fidiv
push
int
xchg
sahf
fmul
mov
jg
xor
mov
adc
sbb
leave
inc
hlt
mov
repnz
xchg
add
push
xor
cld
mov
sub
dec
repz
daa
xor
mov
xchg
movs
out
xlat
sbb
dec
mov
scas
add
aas
dec
arpl
cmp
push
frstor
jb
cwde
stc
jns
test
sub
mov
fsubr
pop
fisubr
adc
push
movs
sbb
or
ds
retf
add
sbb
and
popf
into
fist
cs
addr16
push
push
lock
or
inc
fisub
pushf
sahf
cmp
or
cmc
mov
loop
pusha
xchg
xor
lea
fucomi
mov
stc
push
push
adc
mov
jne
hlt
pop
mov
jmp
add
jmp
arpl
out
fnstenv
push
push
hlt
sbb
repnz
xor
adc
dec
pop
daa
pusha
fsub
out
push
test
out
fcmovnb
(bad)
je
inc
ja
add
mov
(bad)
cld
mov
inc
rcl
push
(bad)
aam
retf
xor
or
lds
mov
jns
cmp
addr16
mov
or
add
adc
inc
cmp
pushf
dec
or
mov
mov
xor
int3
cmp
cmp
add
and
jae
fsub
xor
ins
js
jnp
jmp
jle
(bad)
dec
rcr
(bad)
xor
mov
and
fidivr
dec
push
adc
lock
les
sbb
xor
and
mov
push
ins
pop
push
in
sub
rol
cmp
xchg
push
or
pop
pop
xchg
cdq
cmc
push
adc
xchg
in
lds
mov
mov
push
jle
jae
mov
ret
push
push
jb
test
mov
adc
pop
popa
ds
inc
xchg
pop
cmps
push
push
or
cmp
sbb
test
push
sbb
jae
pop
inc
cmp
arpl
(bad)
jnp
jne
les
mov
jg
sahf
add
jl
sbb
mov
movs
pushw
inc
inc
cmp
out
adc
cmps
fisub
aam
push
jbe
rcl
outs
aam
ret
scas
pop
mov
es
dec
das
inc
sub
sti
push
cmp
test
stos
dec
jmp
stc
icebp
adc
jo
dec
out
sbb
jg
mov
lds
jge
add
ins
lds
out
popa
ss
(bad)
int
rol
call
out
mov
iret
ror
dec
dec
inc
mov
xchg
fxam
cs
inc
popa
dec
xchg
outs
ror
mov
xor
icebp
jo
push
daa
mov
xchg
aam
inc
lahf
iret
dec
xchg
in
sti
sbb
or
pop
dec
mov
or
cs
test
cli
das
retf
jmp
jge
rcr
or
or
cmp
jl
xchg
mov
jo
adc
mov
jb
xor
jp
js
clc
into
imul
addr16
cmp
inc
rcr
or
leave
lahf
clc
jae
icebp
dec
cwde
jbe
inc
daa
shl
cs
lods
pusha
shl
sub
adc
in
cwde
xchg
test
nop
push
and
popa
test
rol
sub
push
cmp
cs
jl
xchg
arpl
pop
aaa
push
fcomp
es
ror
(bad)
outs
and
movs
or
adc
test
cdq
xor
in
dec
sub
test
jp
(bad)
inc
iret
imul
test
lea
pop
mov
mov
popf
mov
stos
popa
mov
and
retf
jo
xchg
add
(bad)
fld
addr16
and
cmc
fidiv
push
cld
in
sbb
mov
ins
movs
lods
outs
xor
std
les
mov
dec
ret
(bad)
jge
pop
cmp
pop
cmp
stc
ins
inc
ds
and
push
movs
lea
sar
dec
ss
fdiv
icebp
add
test
fild
pop
sbb
mov
ds
out
xchg
add
dec
xchg
mov
fs
shl
dec
ss
xchg
mov
mov
dec
ror
jnp
inc
fidiv
(bad)
fldenv
fisttp
sti
je
out
jge
retf
frstor
lock
sub
out
mov
push
mov
mov
movs
dec
cmp
fidivr
jnp
shl
test
jns
ret
xor
popf
xchg
dec
mov
pop
lea
cdq
in
mov
or
mov
imul
cmp
shl
ins
aas
jo
ror
adc
ss
pop
sub
add
out
std
cmp
push
js
pop
sub
cmp
shl
aas
push
push
jge
pop
out
xchg
dec
inc
mov
dec
leave
out
js
hlt
sbb
cwde
or
xchg
adc
(bad)
xchg
pop
pop
mov
iret
or
(bad)
sbb
fidivr
sar
movs
les
xchg
sbb
fiadd
ss
ss
add
mov
inc
les
int3
mov
mov
int
out
jle
out
push
popa
jmp
add
add
scas
inc
mov
loopne
mov
push
in
test
xor
jnp
hlt
cs
icebp
cmc
test
test
lods
and
lea
jmp
xchg
jmp
xor
add
sbb
mov
jg
or
fsubrp
loop
scas
cmp
lods
(bad)
stos
xchg
shl
arpl
(bad)
mov
and
xchg
ret
adc
push
cmp
xchg
sub
sub
dec
add
lods
scas
mov
in
adc
addr16
or
inc
mov
je
mov
dec
cmps
pusha
hlt
jae
enter
mov
stc
adc
mov
xchg
dec
nop
pop
cmp
inc
inc
inc
imul
nop
mov
rcr
sbb
mov
xor
iret
add
popf
mov
gs
adc
imul
int3
adc
fidivr
movs
jl
inc
shl
pusha
inc
pop
mov
scas
cmp
mov
push
pop
pop
inc
(bad)
pop
mov
push
scas
loopne
xchg
jp
std
pop
cmps
push
cmp
ins
cli
add
mov
shr
test
pushf
jo
sbb
gs
loopne
lahf
mov
lods
adc
movs
cmc
dec
ins
mov
sub
pop
aad
pop
push
arpl
push
add
fwait
pop
repz
adc
push
jmp
cmp
arpl
fmul
es
std
imul
inc
mov
add
aam
cli
push
int3
cmp
retf
inc
lock
cwde
cmps
jg
outs
add
repnz
add
mov
pop
mov
xor
mov
out
rol
dec
sbb
push
xor
dec
sub
cmp
mov
mov
(bad)
ins
cmp
fsubr
mov
inc
dec
scas
pop
rcl
jne
(bad)
mov
pop
imul
or
test
popa
dec
cwde
sbb
leave
cmp
stos
pop
pusha
sbb
and
mov
add
gs
mov
jmp
out
push
loop
dec
cmp
pop
lahf
repnz
jmp
or
adc
inc
mov
fsubrp
xchg
xlat
sub
push
jno
btc
add
jne
jno
xor
fidivr
xchg
xchg
jecxz
hlt
pop
dec
mov
and
xchg
iret
or
js
shl
dec
push
xchg
push
arpl
fisubr
dec
fdivr
in
sub
iret
retf
fiadd
xchg
inc
jg
adc
daa
out
fist
clc
cmp
pushf
and
retf
mov
xchg
int
cmps
(bad)
rcr
(bad)
or
mov
ret
fidiv
jecxz
sti
ret
fneni(8087
loope
(bad)
dec
out
popa
test
into
jl
xchg
inc
lods
dec
or
mov
rol
jmp
icebp
pop
sbb
cmc
xor
add
retf
js
nop
xchg
adc
mov
and
inc
xor
jmp
sbb
adc
xor
(bad)
sub
cmovg
mov
cmc
sahf
hlt
adc
movs
mov
mov
sbb
add
sti
cmp
sti
add
mov
xchg
jo
scas
in
cwde
adc
test
dec
inc
int
jmp
sub
adc
mov
jmp
dec
std
out
mov
sbb
in
sti
adc
or
jmp
movs
jmp
xor
cmps
add
movs
stos
jnp
fmul
hlt
jmp
pop
inc
jp
xor
mov
inc
icebp
jp
adc
fstp
jmp
scas
loope
adc
lods
and
mov
int
ret
dec
jbe
mov
aas
mov
cmp
cmp
(bad)
push
mov
dec
pusha
fadd
enter
jnp
fs
adc
mov
in
xor
out
pop
push
in
xchg
pop
pop
mov
test
lock
jmpw
push
test
pop
(bad)
dec
jbe
scas
push
hlt
popf
dec
in
mov
loop
mov
lock
add
inc
shr
inc
dec
retf
ret
jbe
xor
test
mov
retf
dec
lods
pinsrw
test
add
and
push
call
gs
jb
jmp
xor
dec
push
dec
imul
sbb
push
sti
in
daa
rol
call
jo
xchg
movs
int
nop
leave
inc
mov
and
and
mov
lds
fcomp
ret
call
cmp
sahf
aas
bound
pop
inc
hlt
loopne
int
iret
(bad)
icebp
xor
inc
pushf
or
fisubr
iret
data16
fcomi
sub
or
add
mov
test
dec
adc
loope
dec
jbe
sub
xchg
inc
sti
clc
xor
out
pusha
or
fisttp
dec
dec
call
xchg
push
int3
pusha
jl
ficomp
cwde
je
cmp
in
popf
cmp
stc
pop
push
out
imul
or
mov
fldenv
adc
fwait
icebp
pop
dec
fst
fldenv
dec
pop
xchg
iret
lahf
outs
pop
ja
pop
dec
into
xor
jg
sub
or
push
jg
inc
mov
xchg
xor
retf
sbb
cmp
cld
cmp
mov
cwde
push
xor
outs
(bad)
test
pop
fstp
push
mov
leave
ds
push
aam
dec
leave
dec
scas
and
arpl
addr16
dec
xchg
mov
jnp
sub
mov
xchg
dec
stos
adc
int3
mov
sub
or
add
add
cmp
enter
fwait
pop
and
add
in
add
dec
sub
nop
mov
arpl
mov
iret
mov
push
(bad)
pop
dec
cmps
or
cmc
pusha
out
div
int3
jmp
mov
daa
iret
fs
push
push
fucomp
jg
scas
adc
pop
adc
das
mov
pop
or
(bad)
jl
mov
data16
inc
test
ret
pop
ds
mov
stc
pop
mov
int3
xlat
dec
pushf
fs
lock
popa
xchg
imul
inc
sub
sub
aam
arpl
jecxz
mov
cmp
cmps
mov
jns
push
outs
cmc
mov
pop
dec
ins
repz
test
cs
and
ret
nop
je
(bad)
popf
int3
cdq
fcmovbe
pop
dec
fstp
xor
fs
xor
cli
inc
and
aam
in
xchg
rol
mov
loopne
adc
(bad)
ins
cs
iret
fnstenv
das
movs
or
dec
mov
xor
adc
mov
jmp
test
and
adc
and
xor
jo
inc
das
fisttp
cmp
push
fiadd
cmp
mov
data16
cmp
int
xor
ins
mov
call
mov
jb
adc
fwait
sub
mov
fistp
sti
std
jnp
jecxz
sbb
push
call
into
psubb
mov
jb
shl
sbb
fnstenv
xchg
xchg
xchg
aas
ret
dec
mov
loopne
test
dec
mov
mov
fcomp
xchg
in
fiadd
test
ret
gs
sub
std
pusha
adc
call
xchg
sar
push
or
retf
call
mov
pusha
push
pushf
xor
in
test
jno
sbb
mov
jns
jmp
xchg
cdq
mov
push
enter
pop
in
addr16
mov
sbb
push
aam
cld
add
mov
sub
repnz
rol
fist
or
out
inc
jge
mov
xor
int3
inc
loop
je
mov
mov
cmp
mov
stos
adc
cld
ret
(bad)
push
aas
cmps
movs
jg
mov
mov
cmp
nop
push
push
pop
test
(bad)
lods
push
push
std
pushf
inc
xor
fisttp
xchg
push
add
aas
sbb
dec
pop
mov
stos
xchg
jmp
jnp
inc
cmps
repnz
push
mov
nop
dec
mov
mov
push
dec
fs
dec
fwait
pop
lahf
xchg
sbb
add
add
scas
add
adc
test
std
xor
push
jae
mov
pop
shl
mov
dec
dec
stc
out
dec
mov
ss
mov
jmp
push
cmps
mov
test
xor
retf
jnp
(bad)
in
pusha
gs
dec
mov
mov
test
test
inc
ret
add
(bad)
pop
repnz
sbb
rcr
pop
cmps
or
frstor
pop
icebp
jns
not
xchg
ins
push
lock
mov
jge
movs
xchg
mov
push
je
stos
sub
in
aaa
in
cmp
enter
lds
jb
mov
add
sub
add
in
mov
mov
imul
xor
pop
pop
cld
repnz
and
pop
and
fcomp
adc
scas
cmp
add
jns
test
in
(bad)
mov
into
push
in
xchg
inc
adc
shl
adc
inc
in
nop
inc
or
nop
pop
push
leave
and
dec
mov
mov
adc
(bad)
cmc
and
sbb
shr
repz
pop
pop
mov
jg
pop
dec
dec
xlat
mov
or
in
adc
mov
xchg
scas
lock
nop
cmp
daa
xchg
test
dec
pushf
test
lock
pop
inc
ret
jp
mov
movlps
sub
out
mov
cmp
jmp
fwait
daa
dec
popf
mov
int3
stos
or
shl
(bad)
xchg
loopne
pop
inc
inc
fild
pop
lds
mov
cmp
lea
popa
add
dec
and
inc
lods
cwde
cmp
fsubr
fidiv
loopne
dec
sub
push
lods
test
jb
push
cmps
les
fstp
mov
ins
jge
pop
outs
adc
xchg
push
js
mov
ins
push
adc
enter
adc
push
add
mov
dec
enter
push
pop
loope
or
(bad)
adc
aas
rcl
mov
test
cmps
daa
not
jge
jecxz
jns
inc
xchg
or
xor
popa
mov
in
cmp
(bad)
push
movs
ins
xchg
adc
les
mov
dec
mov
rcl
les
test
dec
ficom
push
sbb
mov
pusha
test
inc
pushf
sub
sbb
mov
nop
push
xor
(bad)
inc
dec
cld
mov
pop
xchg
push
das
sub
punpcklwd
repnz
xor
xor
lock
inc
dec
jg
jmp
push
ins
sbb
dec
mov
ds
ficomp
into
push
sub
cmp
adc
fsub
repz
(bad)
fcom
inc
(bad)
stos
jo
enter
cmp
leave
cld
jge
ret
mov
ins
ja
push
mov
adc
mov
stc
stc
xor
dec
dec
cdq
adc
loopne
ret
mov
pop
pop
sbb
mov
movs
inc
and
or
cmc
fsubr
sub
dec
sbb
imul
shr
(bad)
out
or
fidivr
dec
and
ficomp
(bad)
loop
pop
ins
(bad)
xor
popa
jmp
dec
popa
fwait
adc
mov
and
test
mov
sbb
std
stc
inc
mov
inc
popf
sti
enter
mov
cmp
inc
fsub
cmc
mov
shl
jp
rcr
test
pop
loope
call
(bad)
cmp
imul
sahf
pop
mov
mov
cwde
lahf
pop
xchg
mov
ss
out
lock
ins
or
mov
push
(bad)
fistp
in
push
push
mov
hlt
xchg
(bad)
shr
int
pop
cmp
ret
sub
hlt
mov
nop
push
lds
push
adc
outs
popw
out
and
xchg
mov
cmp
repz
pop
ins
and
clc
ins
push
and
cs
not
push
mov
or
mov
fstp
xor
mov
xchg
into
cs
popa
push
ja
or
loope
ja
jge
add
cmps
xchg
cmp
push
push
scas
scas
mov
xchg
push
clc
add
cmp
arpl
test
add
ret
jnp
in
(bad)
popf
cmps
xchg
mov
mov
pop
mov
out
cmc
out
into
jl
xchg
and
mov
inc
jns
ret
clc
ror
sub
xchg
jb
inc
cmp
sbb
xchg
jno
rcr
sbb
xor
adc
jmp
mov
scas
arpl
inc
(bad)
loopne
fsubp
ja
push
stos
sub
lock
or
xor
mov
pop
adc
jbe
mov
fldenv
fadd
xchg
push
rcl
pop
pop
xchg
cmps
js
daa
mov
(bad)
jb
add
add
retf
dec
xor
and
test
nop
xchg
cmp
xor
jne
or
call
hlt
xor
jno
inc
push
ss
fs
xlat
fsub
fisubr
and
jg
mov
dec
or
mov
inc
mov
scas
je
mov
por
xchg
int
cdq
dec
and
mov
or
cmp
leave
inc
dec
leave
or
jb
xor
les
cs
push
aaa
ins
stos
mov
xchg
in
mov
ins
daa
mov
add
dec
mov
fiadd
push
inc
aaa
pop
xor
dec
dec
jge
test
(bad)
jbe
pop
and
int
push
sub
or
add
mov
xor
ins
sbb
data16
adc
mov
enter
pusha
test
xchg
cld
mov
stos
mov
mov
sub
addr16
in
jno
lods
lock
loop
cmps
dec
test
jecxz
cmp
xchg
movs
aam
mov
lock
jo
jl
add
ret
push
das
lock
lea
enterw
sub
or
scas
xlat
mov
popa
test
imul
sub
mov
mov
dec
xor
in
or
and
lods
mov
dec
push
(bad)
addr16
sub
(bad)
addr16
xor
iret
retf
sub
xlat
icebp
aas
pop
div
int
mov
mov
mov
inc
aad
mov
jnp
xor
std
jge
iret
add
pop
mov
pop
mov
jle
xchg
and
adc
retf
sbb
in
pusha
push
outs
cmps
(bad)
ja
cmp
add
sub
add
xor
and
ret
daa
not
outs
push
push
clc
cld
mov
popf
stos
xchg
cmp
sub
push
push
jbe
pop
arpl
or
in
or
mov
shrd
sbb
dec
adc
xor
(bad)
movs
daa
adc
std
and
pop
xor
pop
imul
and
mov
scas
int
jp
xchg
xchg
add
sub
nop
jbe
ret
lods
adc
push
cmp
pusha
imul
mov
rcr
add
and
jmp
stos
push
mov
test
jbe
jae
mov
pop
jecxz
sbb
adc
xor
call
in
push
mov
add
sahf
add
mov
fisub
mov
stos
xchg
mov
popa
fadd
xor
mov
and
add
mov
sahf
mov
cli
push
in
inc
mov
xor
pop
jl
jg
push
(bad)
and
aam
and
fldpi
add
add
daa
mov
add
mov
pop
mov
imul
repnz
cmp
sub
das
sbb
xchg
xor
jge
fbld
xchg
retf
mov
outs
inc
push
(bad)
pop
mov
ret
jecxz
mov
stos
bound
cmp
mov
xchg
adc
add
dec
mov
ins
ror
sub
pop
imul
mov
popf
fst
nop
pop
popa
sbb
sti
mov
xlat
movs
mov
test
int
(bad)
cmps
mov
call
jo
push
jmp
xlat
push
sub
push
(bad)
dec
mov
cdq
int3
in
stos
pop
fistp
fwait
in
push
es
or
sbb
iret
or
call
test
mov
test
gs
test
test
sbb
xchg
(bad)
in
fwait
lds
shl
jnp
js
sbb
push
jl
iret
sub
and
adc
loop
test
loop
cmp
retf
sub
sub
pop
repnz
lds
ficom
rep
mov
inc
add
dec
jo
iret
sub
fs
imul
imul
push
retf
jns
(bad)
dec
mov
xor
cli
bound
inc
mov
push
cmp
dec
jb
xor
ret
xor
shl
loope
add
fdiv
mov
das
sbb
or
mov
adc
dec
xchg
push
stos
(bad)
arpl
repz
and
retf
push
cmp
inc
cmp
push
adc
fistp
mov
ret
mov
jne
loope
(bad)
or
jecxz
xchg
sub
ss
sar
shl
(bad)
jp
fcomip
(bad)
fcomi
test
mov
or
sub
xchg
pop
pushf
pop
sub
add
neg
stc
or
xor
hlt
fcom
mov
loop
jp
scas
mov
xchg
loop
push
imul
pop
call
icebp
adc
out
and
jge
ror
pop
jb
cmp
add
call
push
cli
push
loop
sahf
sub
imul
dec
enter
dec
or
and
inc
push
mov
jmp
cmp
xor
sahf
daa
push
sbb
test
sti
(bad)
add
or
int3
add
cwde
call
or
ret
punpckhdq
test
xor
cdq
adc
and
(bad)
adc
int3
mov
aas
mov
xchg
fild
add
pop
add
test
pop
mov
iret
or
or
add
in
add
mov
iret
out
add
es
adc
int3
mov
ja
dec
jns
jmp
out
cwde
push
mov
or
aas
xchg
popa
dec
cmp
cld
in
push
pop
sbb
scas
mov
mov
pushf
add
pop
(bad)
mov
mov
call
or
mov
pmaddwd
inc
aad
mov
mov
jnp
xor
pushf
(bad)
mov
adc
xchg
adc
push
sbb
sub
xor
repz
mov
cmc
and
or
pop
adc
call
xor
sbb
xchg
push
pop
ror
xchg
test
and
(bad)
imul
or
lods
fmul
jae
mov
hlt
xor
and
push
adc
stos
cmp
ror
int
add
jns
jo
push
cwde
mov
lds
sbb
pop
or
cdq
(bad)
aad
fnstenv
fiadd
in
jo
jb
fwait
push
pushf
rcl
mov
xor
lods
loop
xchg
test
aaa
lods
or
pop
dec
cld
jge
mov
scas
ja
ja
add
fidivr
jne
imul
xchg
sbb
int
(bad)
jge
push
(bad)
mov
cmp
div
cmp
int
(bad)
std
or
or
mov
pushf
idiv
fnsave
or
pusha
inc
jb
jb
mov
leave
loopne
movs
out
aas
xchg
adc
pusha
and
dec
or
mov
push
js
sbb
jecxz
xchg
dec
pop
enter
cld
rcl
jge
test
cmp
jg
add
jbe
xor
pop
into
mov
sbb
and
hlt
push
push
adc
inc
xor
dec
or
test
into
int
and
add
dec
out
cmp
fs
pop
xchg
iret
xor
cs
pop
add
lea
pop
add
or
pop
out
push
jmp
adc
xchg
xor
stos
dec
pop
push
xor
leave
test
fdiv
push
push
jecxz
enter
aad
data16
cmp
jo
loopne
gs
fs
retf
xchg
xchg
mov
dec
push
dec
bound
xchg
pop
jns
push
mov
fdivr
mov
mov
mov
and
fild
jp
sbb
das
aad
push
cmp
je
sbb
test
mov
jns
xor
mov
inc
mov
push
lahf
arpl
dec
jmp
mov
icebp
or
xchg
xchg
jl
fsub
sbb
push
mov
mov
lods
pop
movs
stc
not
and
push
aam
mov
sub
cdq
sub
in
cmp
pop
push
outs
fs
mov
pop
pop
jo
mov
sub
push
ins
inc
or
stc
add
or
pop
inc
test
xchg
xor
data16
loop
repnz
mov
out
push
int
mov
test
jnp
pusha
imul
out
inc
cdq
(bad)
jmp
out
mov
ret
mov
rcl
pusha
iret
(bad)
xor
and
and
mov
jge
mov
push
push
call
mov
adc
in
inc
mov
mov
xchg
int3
jmp
movs
jne
imul
mov
mov
jmp
mov
mov
test
xchg
adc
or
imul
sub
ret
loop
or
jno
pop
sar
adc
mov
icebp
or
pop
jo
leave
movs
inc
in
xchg
adc
mov
xchg
shl
test
sbb
retf
sbb
xor
test
jmp
aas
mov
push
jb
inc
push
out
imul
dec
imul
jmp
or
ins
into
push
cmp
fst
stc
lahf
xchg
dec
sbb
push
fdivr
push
mov
(bad)
loop
pop
call
dec
push
xor
mov
inc
add
jae
push
ins
mov
push
outs
rol
dec
jp
mov
jns
movs
stos
push
jmp
sbb
sbb
lahf
xchg
scas
cmp
js
test
push
jle
dec
add
dec
out
ficom
mov
mov
loop
push
in
push
jbe
push
ds
mov
retf
dec
push
mov
mov
mov
jo
lahf
fs
cmp
clc
jl
and
(bad)
push
les
mov
and
pop
add
push
mov
jno
push
jmp
fcom
sti
xchg
imul
and
dec
add
lods
or
cmp
jge
addr16
fdivr
das
mov
adc
je
xchg
int3
repz
xor
outs
push
cld
add
stos
loope
mov
call
scas
sub
push
pusha
mov
enter
mov
imul
xor
push
mov
sub
ds
outs
leave
stos
mov
adc
mov
jae
dec
movs
inc
arpl
leave
jg
cmp
inc
xchg
pop
in
jno
jne
pop
xchg
retf
shl
test
out
pop
inc
dec
jge
xchg
xlat
ret
sar
or
dec
xchg
lea
jb
jb
mov
mov
sub
int
and
xchg
(bad)
(bad)
imul
inc
mov
jb
outs
aaa
mov
mov
in
out
movs
(bad)
jae
add
stc
shl
sub
outs
mov
mov
pop
or
dec
mov
dec
push
inc
dec
outs
lahf
fild
dec
faddp
xlat
mov
lock
imul
enter
push
stc
pop
repnz
mov
test
popf
into
mov
and
add
pop
push
sub
icebp
mov
cmp
lods
mov
sbb
mov
xchg
jmp
jb
std
mov
cmovnp
cs
ret
jno
out
cmp
cdq
inc
aam
pop
inc
ret
cmp
pop
mov
jo
adc
pop
or
pop
mov
xor
push
xor
(bad)
xor
pop
popf
push
div
add
xlat
ss
mov
in
or
aas
sub
sbb
dec
sub
cmps
push
es
aaa
pushf
inc
mov
aaa
and
pop
dec
rcl
gs
or
int
(bad)
(bad)
jge
cmp
jnp
or
xor
adc
(bad)
xchg
sbb
data16
add
mov
fs
or
or
ret
(bad)
pusha
cmp
and
and
cmps
jmp
or
mov
popa
outs
jae
ror
mov
inc
mov
mov
pop
fst
mov
xor
ss
mov
mov
fadd
mov
ret
jbe
(bad)
push
nop
loop
jmp
or
retf
cmp
test
sti
stos
jecxz
pop
fldenv
and
outs
pop
in
xor
mov
xlat
dec
sbb
sbb
ss
mov
rcl
mov
lock
clc
lods
push
sbb
fxch
jg
xor
into
iret
adc
xchg
pop
lods
rcl
adc
push
xlat
add
pop
jge
js
mov
and
or
cmp
stos
or
(bad)
sbb
enter
and
inc
pop
cmp
mov
jg
pushf
psllq
xchg
jge
loopne
xor
cmp
ror
shrd
loop
push
fldenv
pop
mov
fnstsw
in
xor
popf
push
icebp
ret
je
jno
stos
lock
mov
inc
fwait
dec
in
xchg
in
popa
pop
movs
out
or
retf
mov
jp
inc
call
lds
lahf
xor
xchg
pop
inc
retf
fucomi
retf
mov
fst
addr16
cmp
sub
adc
cmc
and
push
loope
jbe
aad
xchg
(bad)
cmp
or
cmc
pop
xchg
gs
pushf
pushf
popf
out
leave
outs
push
mov
push
data16
or
int
data16
mov
inc
push
sub
inc
or
sbb
fist
fdivr
cmps
xlat
push
inc
xchg
scas
inc
(bad)
dec
or
or
ins
movs
stc
jbe
cdq
jns
xchg
out
stos
repz
sbb
fidiv
push
pushf
in
and
test
sar
sbb
sahf
aad
push
and
in
or
addr16
shr
dec
cs
adc
outs
adc
rcl
xor
push
mov
(bad)
sar
mov
dec
outs
xlat
nop
gs
call
xor
pop
mul
jmp
push
lea
and
and
out
arpl
inc
pop
adc
sub
leave
out
rcr
aas
shl
movs
imul
dec
or
adc
adc
inc
das
fcom
sub
leave
inc
or
ror
daa
out
cs
in
aam
jns
(bad)
and
push
cmp
ret
aaa
retf
push
rol
push
mov
fdiv
test
(bad)
jmp
mov
adc
cwde
stc
mov
adc
aam
sbb
dec
loop
rcr
sub
jbe
rol
or
pop
add
jb
dec
and
push
rcl
sbb
mov
and
test
dec
fstp
adc
xor
stos
pop
pusha
call
cs
sbb
mov
arpl
scas
xchg
imul
loop
in
xor
js
dec
cmps
cmc
sti
cmp
outs
clc
addr16
test
stc
jl
pop
in
ret
sbb
mov
jecxz
mov
pop
pop
pop
repz
hlt
dec
nop
(bad)
clc
ins
int
outs
push
mov
and
adc
mov
xchg
jecxz
(bad)
xchg
cmps
pushf
mov
loop
xchg
add
jne
ficom
ror
add
aad
popa
call
or
push
pop
div
icebp
gs
sbb
fsub
or
cdq
clc
mov
outs
push
xor
xchg
jle
push
mov
jnp
or
stos
clc
cwde
clc
mov
jo
rcl
mov
bound
ret
adc
(bad)
pop
and
mov
jle
test
push
aad
pop
aas
fmul
push
adc
loop
ds
push
jmp
mov
pop
mov
sbb
(bad)
outs
ror
leave
nop
aam
out
and
and
dec
xchg
clc
sub
cli
push
ss
in
into
cld
dec
push
jecxz
pop
xlat
pop
or
(bad)
mov
fnstcw
mov
pop
into
adc
fbld
iret
mov
inc
lock
push
sub
pop
add
les
xor
iret
jge
jge
aaa
sub
mov
sahf
push
ins
lahf
push
shr
and
movs
sahf
cmp
hlt
cld
mov
xor
cwde
sub
pop
jnp
push
inc
cmp
xchg
pop
cs
dec
sti
rol
mov
cmp
loope
adc
daa
xor
pop
cmp
xchg
idiv
fsub
hlt
pop
loopne
lahf
aas
and
(bad)
out
pushf
jmp
sub
sub
std
rol
lods
(bad)
icebp
and
cld
es
mov
cmp
xchg
fcom
(bad)
push
add
xchg
pusha
or
adc
jno
xchg
lods
jmp
mov
inc
mov
aaa
sbb
std
(bad)
fbstp
clc
cli
sbb
mov
daa
stos
repnz
push
das
(bad)
and
es
arpl
ror
push
or
mov
bound
aaa
jmp
or
mov
mov
add
data16
push
inc
or
xchg
mov
push
pop
xchg
aaa
mov
jno
push
je
rol
imul
lds
xchg
scas
xchg
or
cli
cli
mov
mov
mov
bound
shr
push
lea
cmps
mov
inc
xor
shl
push
or
push
ds
dec
dec
outs
adc
xchg
and
mov
mov
cwde
inc
retf
es
and
push
outs
cmc
fstp
pop
fimul
test
jle
enter
adc
int3
jg
sub
push
shr
ror
cmp
sti
ss
inc
push
add
pop
or
data16
jp
inc
movs
push
xchg
dec
int
retf
iret
fild
dec
movs
fadd
fadd
cdq
xor
cmc
sahf
mov
adc
leave
xchg
inc
pop
mov
stos
stos
nop
je
cmp
sti
inc
xor
dec
out
jnp
add
push
xchg
inc
test
xchg
mov
mov
xor
int3
ins
test
sub
pop
rol
or
repnz
pusha
movs
xchg
mov
std
mov
hlt
mov
push
mov
adc
cmc
push
inc
retf
push
out
stos
add
sbb
mov
in
push
into
(bad)
push
push
or
fmul
mov
or
fnstenv
lods
adc
lahf
ret
jnp
pop
sub
stos
cmc
jmp
add
adc
test
jo
test
pop
dec
iret
and
movs
call
stos
cmc
mov
outs
stos
dec
sbb
test
in
sahf
movs
call
jl
bound
retf
fcom
test
stos
cmp
fmul
pop
ds
push
mov
in
int3
xor
mov
call
out
neg
fist
pop
iret
out
cli
(bad)
xchg
jmp
and
or
inc
mov
inc
sbb
(bad)
push
cwde
mov
ja
inc
inc
(bad)
jb
(bad)
sub
inc
mov
repz
outs
sbb
sbb
inc
sub
call
in
pop
fisub
int
(bad)
dec
out
or
jo
out
arpl
xchg
sbb
rol
neg
ret
jb
imul
imul
fsubr
xor
jne
xchg
push
mov
mov
or
pushf
shl
cmp
xchg
icebp
push
cld
cmp
fild
repz
jnp
dec
ret
pop
out
sbb
scas
push
iret
inc
call
aas
clc
xor
fsubr
sub
in
mov
nop
cld
dec
aaa
bound
xchg
mov
pushf
push
retf
adc
pop
jno
aad
mov
test
repz
mov
lds
cmp
adc
leave
push
push
cmp
xchg
in
daa
(bad)
stc
scas
mov
adc
add
clc
hlt
les
call
ds
repz
(bad)
lds
orps
in
dec
ror
and
add
mov
jb
loop
fistp
pusha
mov
adc
mov
xchg
fmulp
pop
ins
fidiv
addr16
mov
jns
mov
movaps
push
fs
(bad)
clc
xchg
or
adc
enter
popf
aam
mov
pop
jmp
dec
xchg
das
arpl
and
add
and
mov
std
in
pop
dec
movs
pop
push
pop
add
jl
fs
aaa
mov
(bad)
out
mov
jg
popa
xor
fcomp
pop
(bad)
daa
xchg
(bad)
xor
dec
es
mov
mov
aad
in
imul
push
mov
lods
and
push
call
mov
popa
adc
repnz
ret
sub
or
retf
xchg
mov
pop
push
mov
push
call
sbb
in
fbld
or
(bad)
push
xchg
jg
std
push
mov
rcl
loopne
adc
popf
imul
mov
mov
sub
mov
jne
add
inc
add
xchg
out
mov
cmp
fnstsw
lods
cmp
adc
jnp
mov
retf
mov
add
sbb
adc
lea
push
cld
adc
push
retf
pop
mov
push
retf
enter
(bad)
stos
(bad)
fcmovu
sub
rcr
aam
rol
scas
inc
jl
les
je
out
mov
int
xchg
mov
adc
sbb
ja
jge
add
sub
fcomp
out
jbe
pop
sub
or
aas
add
or
xor
lds
dec
jmp
inc
mov
in
in
das
mov
xor
push
int3
pop
push
ja
cmp
ret
add
call
loope
cmp
shl
fmul
jle
into
push
or
dec
aaa
pop
shl
mov
jle
(bad)
mov
jns
ds
mov
xchg
xchg
or
adc
mov
mov
adc
nop
xchg
(bad)
cs
push
and
inc
xchg
jmp
mov
mov
dec
adc
pop
cmp
mov
xor
popf
xor
mov
push
outs
or
push
fimul
sub
repz
sar
sub
inc
push
mov
xchg
cmps
xor
scas
inc
sar
je
mov
mov
(bad)
dec
jnp
call
sub
inc
jmp
ret
(bad)
aaa
and
stos
mov
sbb
push
leave
jp
dec
push
iret
test
push
punpckhdq
in
addr16
push
mov
add
aas
jg
out
pushf
cld
fdiv
or
pop
test
into
mov
xchg
lea
test
mov
sbb
loopne
mov
ins
push
fiadd
xor
imul
inc
ja
mov
ja
sub
pop
(bad)
xor
scas
xchg
pop
sbb
repz
cmp
xor
pop
fidiv
(bad)
jns
sbb
xlat
nop
adc
in
jmp
int
adc
push
lds
rcl
in
in
stos
add
adc
cs
cmp
pop
adc
imul
popf
lods
mov
pushf
js
and
sub
dec
pop
lods
mov
repz
ins
dec
loop
pop
pushf
daa
data16
pop
cmps
and
clc
sti
adc
lahf
push
cmp
cmc
add
inc
jns
stos
adc
pop
sti
cld
in
clc
(bad)
aas
retf
jge
mul
scas
push
(bad)
mov
sub
adc
mov
jmp
dec
js
repz
daa
hlt
aas
in
fdivr
xchg
stos
mov
sub
shl
jge
push
fdivr
pop
imul
fsin
jnp
mov
je
pop
fs
ficomp
adc
mov
or
mov
jmp
xchg
fnstenv
jnp
inc
cmp
or
jmp
jmp
xor
(bad)
outs
jg
sub
imul
xchg
cmp
or
xchg
arpl
shl
mov
xor
loopne
dec
loop
stc
stos
sbb
cmp
inc
pop
sbb
out
aas
sub
push
add
sti
pop
loopne
sub
ret
popf
sbb
ret
pusha
and
xor
and
xor
mov
adc
sub
adc
sbb
pop
fisttp
fcom
mov
xchg
sub
adc
stc
dec
xchg
pop
fld
push
test
lahf
addr16
cld
mov
xchg
sbb
in
aaa
xchg
shl
xchg
out
jmp
mov
or
hlt
inc
in
bound
(bad)
jg
pop
iret
sub
sub
pop
outs
add
push
pop
imul
into
pop
hlt
cmp
rol
out
mov
jnp
fsubr
mov
loopne
les
ffreep
pop
loope
dec
pop
xor
mov
inc
rol
jmp
cmp
aad
scas
int
sbb
mov
in
pop
mov
outs
jb
clc
inc
inc
pop
test
jmp
cmp
sbb
add
mov
in
dec
(bad)
ins
mov
fst
lea
jns
imul
loop
dec
repnz
and
sar
int3
or
fnstcw
or
cmp
loopne
cmovnp
sahf
es
cmps
ret
cmps
test
add
push
cld
addr16
xor
fmul
mov
shl
ror
int
inc
jl
ss
popa
dec
mov
ret
dec
mov
fidiv
push
sbb
xchg
sub
in
mov
ffree
outs
dec
stc
ret
lods
movs
in
mov
mov
jp
xchg
outs
xor
or
xchg
bound
sbb
sub
stos
jle
inc
imul
push
jb
cwde
xchg
aaa
(bad)
rcr
leave
gs
fidivr
nop
push
push
shr
add
ss
pop
jo
fyl2xp1
js
mov
inc
inc
outs
imul
mov
or
sub
mov
aad
jecxz
test
sbb
(bad)
adc
cmp
aaa
mov
push
push
sub
test
aad
sbb
fld
test
cdq
and
or
lds
ds
xchg
sub
ret
scas
dec
stos
idiv
jo
pushf
pusha
test
lods
push
jnp
mov
push
inc
test
xchg
mov
repnz
stc
cwde
sub
div
xchg
pop
xor
lods
pop
movs
push
dec
and
cmp
cmp
imul
jle
cmp
les
sbb
lds
jne
add
call
hlt
sar
mov
or
xor
pop
mov
add
sub
mov
fistp
adc
inc
leave
sbb
mov
clc
div
repnz
xor
pushf
cmp
push
mov
or
cmp
pop
mov
mov
mov
sbb
gs
xchg
inc
jp
xor
mov
dec
iret
or
add
cwde
mov
xor
mov
jno
adc
pushf
aad
in
xor
loop
in
jne
xlat
call
sbb
mov
fimul
lods
add
out
inc
fwait
xor
arpl
xchg
repnz
lahf
jp
fs
cmp
cmp
sbb
mov
test
mov
les
jmp
jo
or
sub
pop
mov
pop
enter
pop
stos
call
cmp
(bad)
adc
xor
nop
add
cmc
ror
push
mov
lods
push
xchg
or
push
push
jmp
cmc
jg
fild
ja
mov
jns
ror
das
cmp
jl
sbb
daa
pop
fmul
les
mov
adc
cmp
and
push
xor
mov
gs
leave
push
inc
pop
scas
scas
sub
mov
mov
and
dec
addr16
test
hlt
pop
outs
enter
imul
(bad)
xchg
mov
clc
sub
pop
mov
mov
sub
int
nop
or
mov
inc
add
mov
cli
test
test
mov
in
or
enter
sar
icebp
gs
xchg
scas
into
je
in
in
adc
scas
out
xchg
aaa
test
sbb
cmp
or
stos
(bad)
icebp
xchg
loop
add
xlat
inc
call
movs
movs
out
push
or
jns
dec
push
cmps
sar
xchg
pusha
inc
nop
sub
das
lods
xor
into
gs
outs
leave
movs
cli
bound
ins
inc
inc
out
test
xchg
sbb
fnstenv
and
pop
fld
pop
dec
mov
push
xchg
shl
push
sti
or
loop
aaa
ja
pop
pop
cmp
pop
or
adc
and
or
cmc
fbld
push
xor
sub
pushf
jnp
shl
stos
pop
movs
mov
cwde
jl
pop
retf
inc
mov
xchg
jno
test
ret
fcomip
mov
jecxz
sbb
sbb
popa
cmp
(bad)
je
xor
dec
mov
fist
xchg
dec
xor
sub
adc
into
out
jno
aas
mov
sbb
sahf
fbstp
jmp
scas
dec
inc
lods
lea
fsub
inc
dec
cld
mov
dec
scas
sub
mov
mov
jecxz
(bad)
shl
call
test
jg
push
int3
xchg
cmp
sub
test
pop
dec
xor
mov
adc
movs
adc
add
add
sub
hlt
push
jae
push
int
in
std
adc
rcl
inc
sbb
jo
retf
xchg
push
loopne
xor
push
pop
mov
fidivr
add
imul
in
push
add
cmps
rcl
mov
and
gs
mov
pushf
out
rcl
popa
popa
(bad)
and
mov
and
lahf
dec
sar
aas
sbb
and
pushf
sub
dec
sahf
mov
add
mov
sbb
(bad)
jmp
add
mov
cmp
mov
cmp
lock
mov
inc
imul
sub
sar
inc
push
xchg
fidivr
pusha
jmp
inc
inc
pop
cs
cld
fidivr
xchg
rol
aam
out
mov
mov
leave
pop
mov
jo
pop
xchg
and
or
cmps
stos
test
sbb
cmps
mov
test
push
mov
jbe
push
or
ja
push
mov
xlat
neg
in
inc
or
pusha
int3
call
mov
adc
xor
cs
mov
fs
push
mov
pop
test
ret
imul
sbb
xor
jp
or
addr16
xor
scas
xor
push
mov
loop
mov
adc
call
push
out
add
xlat
cmps
out
(bad)
xor
sub
xor
mov
fwait
(bad)
cmc
cmc
pop
inc
jle
add
imul
data16
das
ret
mov
pusha
sbb
xlat
out
pop
sbb
ins
in
xchg
mov
xchg
inc
into
dec
mov
loop
sub
jno
pop
shl
mov
(bad)
(bad)
test
bound
dec
xchg
lock
cwde
mul
lods
imul
out
clc
cmp
adc
icebp
(bad)
fwait
mov
pop
and
cmps
jg
dec
iret
fistp
mov
mov
(bad)
cmp
xor
in
daa
retf
test
push
pop
adc
ret
jae
or
adc
xor
iret
stos
leave
push
jecxz
jle
cmp
mov
enter
mov
push
cwde
(bad)
sub
mov
mov
fwait
lods
retf
adc
call
bnd
xlat
mov
enter
scas
pushf
mov
call
mov
test
xchg
ss
lahf
xchg
cwde
jns
repnz
pop
pop
fs
lds
jmp
mov
inc
(bad)
jle
push
stos
fistp
daa
sbb
mov
or
fdivr
mov
mov
xchg
lds
pushf
cmps
xchg
lea
loopne
xchg
sahf
jl
outs
pop
test
pop
push
cmc
mov
adc
test
aas
sahf
(bad)
cmps
in
pop
test
adc
mov
scas
or
cld
push
pusha
test
sub
movs
cmps
inc
xor
adc
mov
aam
cmps
mov
bound
or
jb
xchg
sub
es
mov
dec
loopne
cmps
mov
xchg
daa
cwde
loop
js
ds
enter
ins
aad
mul
lods
xor
(bad)
dec
mov
jg
or
call
pop
test
add
sub
sar
stc
in
cmps
fsubr
pop
mov
popa
bound
clc
(bad)
stc
xor
pop
(bad)
hlt
int
inc
adc
leave
rcr
mov
and
jmp
jle
dec
test
jo
or
sbb
adc
imul
jle
push
dec
mov
sbb
popf
jmp
xor
les
cwde
jnp
int3
cmp
std
and
mov
in
sahf
stos
pop
adc
in
jmp
jno
jecxz
stc
fdivr
xchg
inc
sbb
push
std
or
ins
jl
mov
mov
mov
xor
inc
push
mov
sub
jb
pusha
test
stos
pop
push
test
mov
inc
mov
cli
outs
aas
xor
xchg
out
cli
scas
xor
mov
jne
mov
cmp
and
sbb
fcomp
cmp
and
ins
popf
jge
int
fcmove
inc
test
xor
or
and
retf
push
add
in
shr
imul
ret
in
jl
std
pop
jb
pop
mov
sbb
test
(bad)
out
or
scas
or
mov
xor
push
arpl
or
fld
test
cli
inc
mov
fcmovnb
dec
bound
add
fadd
stos
sahf
(bad)
push
cmps
mov
rol
push
push
adc
leave
dec
movs
gs
call
dec
test
add
scas
xchg
fdiv
add
shl
mov
pushf
sbb
adc
lahf
rcr
fmul
xchg
lods
into
ja
mov
call
inc
sahf
inc
leave
push
aaa
sub
ror
mov
xchg
fldcw
adc
sub
ja
jae
jmp
(bad)
cwde
inc
daa
xchg
sbb
stc
xchg
and
dec
stos
outs
adc
mov
cmp
or
jl
and
fisub
test
mov
cmp
sahf
outs
(bad)
pop
sbb
mov
(bad)
dec
xor
xchg
scas
pop
mov
pop
cs
call
push
sbb
loopne
mov
cdq
jnp
pop
push
stos
std
hlt
add
dec
dec
adc
pop
out
(bad)
cmc
in
shl
or
inc
pop
sbb
popa
sbb
jo
xchg
add
sub
popa
ret
addr16
mov
jbe
mov
das
in
and
cmc
xchg
jg
es
cld
adc
mov
into
sbb
div
popa
fdiv
sbb
lods
sbb
xchg
lods
sub
mov
or
fdiv
mul
fs
rcl
call
mov
aad
cdq
inc
pop
repnz
xor
cdq
test
sbb
sbb
pop
gs
add
jl
inc
call
test
cmp
leave
add
mov
push
inc
dec
mov
mov
shl
cmc
mov
data16
adc
push
pop
and
cdq
stos
xor
ins
sub
ins
outs
or
(bad)
xor
mov
pushf
rcl
add
xchg
mov
icebp
lods
adc
push
je
add
jg
sub
scas
cmc
imul
or
push
push
outs
sub
sahf
mov
xor
and
inc
mov
popf
push
adc
sub
xchg
xchg
mov
xor
dec
mov
popa
arpl
jne
mov
or
jecxz
sub
push
(bad)
clc
cmp
push
and
aam
out
retf
aas
pop
imul
xor
cmp
aad
sub
jns
ins
sbb
cmp
sti
stc
fs
xchg
shl
xor
xlat
lock
xchg
mov
push
push
add
dec
sbb
clc
adc
pop
sub
or
xchg
in
mov
cdq
pop
pop
dec
cmp
(bad)
int
cmp
jo
int3
aad
pushf
in
stc
adc
retf
xchg
(bad)
mov
in
xor
or
addr16
(bad)
push
ds
mov
nop
imul
daa
push
sar
mov
mov
rol
nop
hlt
je
aam
push
mov
(bad)
mov
lods
pushf
cmp
fisub
sub
out
push
dec
retf
(bad)
dec
movs
mov
add
mov
inc
adc
or
aam
sbb
in
(bad)
push
cdq
inc
inc
imul
xchg
or
fcmovnu
jns
mov
cli
jnp
xchg
loop
xchg
jmp
in
mov
arpl
add
mov
mov
test
jle
add
push
jp
test
mov
jmp
in
dec
pop
adc
fiadd
push
ror
imul
push
pop
pusha
iret
fs
add
adc
leave
cmp
lock
test
cli
jg
xlat
fidivr
neg
adc
push
cmp
stos
ret
and
cmp
pusha
ja
sbb
push
cmc
out
or
jae
push
or
push
jl
jns
cld
arpl
mov
inc
ds
mov
sar
adc
adc
inc
mov
cmps
std
stc
push
adc
jo
dec
mov
lods
pop
pop
push
mov
scas
push
pushf
fisttp
push
push
mov
cmps
pop
add
push
popf
out
add
and
hlt
push
mov
push
sbb
aam
mov
sub
ror
jl
or
outs
and
push
in
ja
mov
xlat
pop
mov
push
inc
rol
cld
inc
mov
clc
add
jle
outs
mov
jmp
sub
clc
ins
loope
adc
mov
cmp
push
mov
movs
mov
xchg
cmp
cmp
fs
or
mov
adc
frstor
xchg
pop
add
and
cmp
add
shl
imul
jle
outs
cmp
ret
cld
mov
push
int3
xchg
xor
inc
sbb
or
fs
outs
jno
(bad)
out
cli
mov
mov
mov
pop
iret
out
nop
dec
daa
or
mov
rcl
test
and
mov
mov
(bad)
lahf
push
stc
or
add
xor
rol
pop
lods
mov
aam
xor
and
rol
(bad)
jns
mov
push
rcr
mov
jbe
push
add
sub
or
retf
fcomip
gs
das
pusha
inc
xchg
inc
adc
fnstsw
fbstp
inc
and
mov
xor
jmp
movs
jb
xchg
pop
mov
pushf
push
fdiv
ss
loopne
ss
arpl
lods
push
mov
fst
pop
gs
mov
fild
mov
(bad)
in
scas
adc
sub
ret
inc
jp
pop
dec
nop
push
push
xor
mov
adc
repz
jl
inc
ds
fiadd
imul
push
jmp
jne
rcl
iret
(bad)
cmp
daa
xor
adc
scas
aaa
lea
xor
cmps
mov
xchg
jno
mov
je
mov
arpl
jne
mov
jb
mov
sbb
das
movs
add
jp
mov
mov
fild
cs
fs
add
fld
adc
add
cwde
cli
or
add
jb
pop
mov
adc
mov
pushf
jecxz
dec
aaa
cmp
jns
or
push
inc
push
fcomp
sbb
push
mov
aam
pop
adc
cmp
in
mov
imul
cmps
xor
out
adc
jb
pop
dec
mov
mov
jne
sbb
sbb
push
repz
out
pusha
in
loopne
lods
repnz
xlat
mov
cld
int3
xchg
fmul
das
mov
lds
xchg
iret
and
mov
daa
jp
addr16
shl
mov
sahf
fs
mov
or
scas
(bad)
cwde
jg
vmovups
jnp
(bad)
ror
pop
call
jle
xor
lds
pop
or
sub
repnz
adc
out
push
inc
loopne
stc
dec
cmp
lods
test
les
repnz
push
mov
cli
popf
shl
sub
or
(bad)
xor
jmp
inc
xchg
sbb
xor
sub
enter
sbb
or
in
jl
retf
inc
dec
cmp
fild
pop
and
jb
fsubrp
movs
outs
mov
dec
les
or
ds
add
movs
iret
sbb
lock
test
dec
mov
imul
push
pop
inc
cmp
xor
mov
or
ins
aam
es
shr
fdivr
push
sub
add
bound
bound
mov
mov
(bad)
jp
pop
jno
lock
inc
out
or
push
in
push
add
int
jl
dec
aas
cmp
scas
and
in
mov
xchg
xchg
mov
shr
jns
cli
xor
pusha
push
and
sub
in
sbb
div
jl
cmp
dec
ret
cmp
mov
or
mov
push
sahf
adc
je
xor
psllq
dec
mov
mov
shr
pop
jo
nop
jmp
xchg
mov
aas
rol
add
fcmovnb
call
enter
cmps
inc
adc
lea
mov
in
cmps
repz
xchg
js
pop
jmp
push
jnp
xor
mov
fisubr
and
adc
or
push
in
shl
sub
test
or
sbb
test
fsubr
fild
ja
mov
nop
add
inc
bswap
fild
add
sar
or
ret
mov
pusha
sahf
rcl
outs
jmp
or
xchg
js
cmps
dec
sub
movs
mov
jg
cmp
out
scas
cmps
es
nop
sbb
je
mov
jl
pop
dec
push
daa
jno
inc
lock
adc
pop
cld
pushf
xor
mov
stc
test
mov
mov
test
es
les
inc
aas
pop
push
mov
pop
imul
shr
into
test
pusha
mov
and
mov
ja
pop
outs
mov
pop
cmps
pop
fdivr
stc
jnp
call
mov
rcr
scas
dec
stos
imul
or
mov
push
sbb
xchg
repnz
add
mov
adc
cmp
popa
stc
inc
inc
dec
add
sbb
rol
add
enter
push
ss
sbb
mov
add
cwde
mov
mov
repz
push
and
xchg
test
pop
xchg
pop
cmps
inc
daa
stc
sbb
dec
fwait
dec
sub
or
shr
enter
adc
popa
sbb
add
stos
call
(bad)
push
push
inc
loopne
ror
popf
cwde
bswap
(bad)
out
mov
cmp
retf
fld
(bad)
into
pop
movs
ret
dec
jecxz
dec
fmulp
xchg
push
repz
xor
shl
in
mov
sti
jb
in
adc
or
lods
retf
enter
jecxz
repnz
or
mov
add
sub
inc
or
push
push
jl
xchg
imul
jle
adc
mov
jle
adc
dec
arpl
jno
sbb
aas
mov
test
xchg
pcmpgtb
sub
sbb
cmp
mov
lea
adc
cmc
jp
jmp
dec
sbb
adc
pop
addr16
(bad)
xor
dec
inc
mov
movs
sbb
pop
mov
mov
cmps
in
sbb
repnz
push
sti
jno
xlat
fistp
mov
out
aad
pusha
sub
rol
mov
lods
jb
jge
cdq
sub
pop
(bad)
cs
lock
mov
ss
pop
pop
mov
loopne
adc
sub
cmc
xor
rol
ins
adc
jge
xchg
sub
cwde
test
push
test
lds
std
stos
adc
and
jg
sti
jnp
or
xor
stos
cs
in
and
jg
cmp
push
or
xchg
jo
jg
sub
and
cld
leave
adc
push
jecxz
dec
mov
les
(bad)
repz
ror
movs
idiv
(bad)
fmul
dec
xchg
frstor
xor
add
into
icebp
jbe
sub
in
pushf
jecxz
leave
cmp
push
loope
jns
call
xchg
(bad)
sti
cmp
or
sub
fld
fisub
stc
or
adc
inc
aas
mov
inc
lods
fnstcw
cld
dec
loop
mov
es
push
icebp
cmc
aad
add
jne
jge
repz
inc
lahf
or
mov
std
jno
xor
inc
mov
test
sbb
xchg
ss
sub
xchg
mov
ret
in
mov
es
push
addr16
js
sub
push
out
xor
mov
fwait
jo
jnp
out
mov
adc
popa
or
mov
xchg
xchg
arpl
outs
test
cmc
sbb
inc
inc
bound
xor
cmps
fld
pop
call
(bad)
retf
adc
out
sub
fisubr
pop
adc
adc
ret
push
xchg
inc
fwait
mov
stc
sub
and
int3
or
sub
into
xor
cmp
and
pop
or
jnp
jp
test
sub
xor
jmp
pop
lahf
cvtpi2ps
push
push
jne
daa
or
les
in
(bad)
loope
cmp
jl
rcr
das
push
pusha
add
(bad)
push
xchg
sbb
jne
sub
sub
pop
or
lods
outs
dec
adc
adc
int3
or
std
clc
push
push
xchg
sub
lds
fadd
xor
dec
sbb
clc
mov
add
repz
lds
add
call
or
or
(bad)
movs
fldcw
aad
test
dec
shl
pop
jmp
lods
xlat
add
sub
stos
push
xor
scas
cmp
jge
push
jne
movs
cmc
and
(bad)
cli
sbb
mov
push
(bad)
ins
xor
pop
fsub
xor
inc
adc
cmp
mov
xor
sbb
push
(bad)
adc
or
gs
xchg
lea
loopne
fild
clc
add
les
push
pusha
sbb
jae
shl
outs
movs
test
fmul
xchg
xchg
movs
pusha
popf
push
out
mov
sbb
and
adc
mov
call
arpl
jns
xchg
arpl
xchg
sbb
shl
add
jge
or
shl
mov
xor
mov
cmp
add
pushf
inc
(bad)
cmp
daa
mov
rol
div
mov
rcr
xchg
inc
dec
js
pop
jmp
dec
sub
fadd
pushf
aaa
sahf
sub
jmp
and
sbb
xchg
iret
xchg
dec
push
pusha
adc
pop
fild
or
js
adc
call
xor
sbb
pop
mov
inc
xchg
stc
dec
lahf
jmp
pop
push
and
ds
inc
imul
retf
fild
sbb
cmc
or
add
adc
dec
sub
adc
and
ja
scas
(bad)
dec
aad
jmp
sbb
cmc
cmove
cmp
sbb
je
mov
cmp
push
push
loopne
or
(bad)
dec
frstor
sbb
xchg
loop
cmp
add
movs
and
mov
xchg
adc
fisubr
mov
inc
jle
mov
packuswb
call
dec
mov
cmp
mov
into
fnsave
(bad)
inc
jnp
(bad)
jge
and
sti
mov
inc
mov
mov
add
lea
push
pop
enter
pusha
shl
xchg
xchg
aad
jl
not
add
jmp
sbb
xchg
pop
popf
push
or
pop
(bad)
std
xchg
addr16
push
ins
mov
mov
or
adc
pop
xchg
test
sub
ja
dec
dec
out
pop
jecxz
test
add
repz
jp
jae
jmp
xor
adc
mov
inc
mov
aas
adc
add
jo
add
jecxz
and
clc
stos
mov
mov
lods
addr16
xor
and
mov
add
ret
ss
sbb
sub
mov
leave
in
addr16
inc
in
movs
pop
ret
cmps
sub
sub
push
cmp
stos
or
outs
clc
inc
mov
scas
test
je
shr
(bad)
lock
pop
lea
pop
mov
push
cwde
cmc
lods
mov
leave
shl
or
sbb
sar
std
hlt
push
add
fnstcw
mov
mov
mov
retf
lea
call
xor
xor
test
cmp
out
push
and
test
rcr
adc
jbe
gs
scas
push
mov
sbb
pop
inc
(bad)
rcr
xchg
push
mov
cs
or
into
in
imul
mov
ficom
fs
idiv
popf
out
(bad)
sbb
jae
mov
div
sbb
jb
or
mov
xor
dec
aam
inc
daa
cmp
mov
ret
hlt
shl
(bad)
cmps
xor
rol
fild
lds
jbe
sub
sar
sbb
test
(bad)
push
pusha
jp
mov
inc
lea
std
or
enter
movs
ins
aaa
jecxz
inc
std
arpl
mov
sbb
mov
inc
cs
jne
push
mov
mov
enter
push
mov
sbb
mov
ret
adc
add
movs
xor
sbb
sub
pop
out
mov
sahf
xlat
cmp
dec
jecxz
test
cld
jge
push
jmp
int3
sbb
or
xor
and
add
cmp
add
or
push
xchg
xor
sbb
push
sbb
fisttp
xchg
mov
call
out
xchg
adc
xchg
mov
icebp
imul
mov
push
inc
repz
sar
mov
dec
retf
test
js
jge
mov
lods
sahf
jmp
repz
bound
mov
jecxz
dec
xlat
aas
repnz
push
iret
or
clc
xchg
pop
jmp
mov
mov
sbb
scas
jecxz
sbb
mov
mov
std
ins
add
out
pop
add
(bad)
sbb
mov
or
lods
xor
popf
aaa
loope
pop
inc
mov
jmp
bound
lds
outs
fwait
jl
cli
aaa
push
daa
adc
jne
or
repz
repnz
cdq
xor
sub
call
cs
dec
pop
sub
or
add
mov
(bad)
adc
push
fucompp
mov
sub
cli
add
movs
(bad)
lods
pop
or
dec
(bad)
mov
dec
jmp
(bad)
mov
push
dec
dec
stc
rol
imul
rol
push
dec
out
mov
sbb
(bad)
lods
mov
sub
sub
pop
in
xchg
out
fwait
xor
xchg
call
out
mov
loope
pop
rol
js
add
clc
in
cmps
push
mov
xchg
stos
mov
adc
lods
adc
inc
retf
xor
(bad)
loopne
xchg
adc
adc
xchg
mov
dec
mov
sub
pop
inc
xor
and
movs
mov
aam
out
add
inc
inc
or
sub
iret
clc
mov
fdiv
loopne
imul
inc
jle
sub
(bad)
sti
pop
push
movs
fidiv
test
jns
out
test
aaa
in
in
fstp
jge
cwde
dec
push
sub
xchg
mov
inc
cmp
push
inc
mov
aas
imul
xchg
hlt
nop
push
or
in
mov
jae
pusha
inc
add
movs
into
pop
xchg
push
push
pop
mov
ins
pop
je
inc
pop
mov
out
dec
aam
sbb
movs
sub
dec
jbe
adc
push
hlt
jge
dec
add
jns
and
ss
push
pop
lahf
and
mov
fstp
sbb
cmp
arpl
mov
and
aad
sub
outs
inc
dec
mov
in
fmul
xor
clc
sbb
sub
lea
add
pop
inc
mov
dec
jo
fisub
add
(bad)
and
xchg
int3
mov
mov
lods
dec
daa
push
test
out
int3
xlat
add
in
call
push
ret
mov
jnp
and
int
loopne
mov
scas
ins
mov
sub
xor
das
popf
aas
fisubr
and
cmp
push
mov
or
cmp
mov
jmp
adc
imul
push
cmp
out
dec
or
fdivrp
add
outs
dec
jns
icebp
xor
mov
push
stc
inc
das
ins
adc
pop
stos
push
push
inc
shl
aam
in
dec
sar
fdivr
and
call
popa
les
aas
enter
cvtpi2ps
inc
test
inc
outs
test
push
in
mov
fmul
ret
repz
xchg
mov
mov
inc
jle
or
push
in
imul
sahf
or
stos
ins
add
sbb
(bad)
push
mov
ficom
in
int
test
ret
cmps
cld
pusha
or
(bad)
int
push
dec
xchg
push
loope
inc
int
mov
fcomip
xlat
cmp
ja
sbb
adc
iret
push
test
sahf
push
out
js
repnz
iret
leave
mov
xor
cwde
cld
fild
fisubr
cld
cmp
or
(bad)
jbe
(bad)
leave
test
add
iret
movs
data16
cmps
fstp
loop
xor
adc
mov
jl
lds
ins
es
popa
jns
cmp
push
pop
inc
aas
xchg
enter
out
mov
mov
movs
cmc
push
add
or
mov
inc
mov
sahf
inc
pop
(bad)
mov
jo
push
mov
inc
lds
popf
repnz
aas
inc
ins
jne
sub
cld
les
jecxz
popf
outs
sub
outs
ror
mov
mov
(bad)
outs
mov
jecxz
outs
xlat
retf
into
mov
rol
or
data16
ret
(bad)
or
popf
shr
add
fistp
dec
inc
sub
dec
fcomp
push
stos
out
push
cdq
mov
scas
xchg
push
xchg
das
cld
call
jns
test
popf
(bad)
cmp
xor
push
sub
scas
jb
push
xchg
lea
fs
cmova
iret
inc
pop
jg
test
xchg
jl
(bad)
inc
cmc
frstor
sti
movs
mov
jnp
sub
mov
push
out
jb
int3
push
cmps
or
das
or
int
inc
fdivr
jl
outs
mov
push
inc
push
jns
mov
int3
push
leave
jns
sub
pop
fimul
push
(bad)
loop
pop
xchg
rol
push
leave
sahf
mov
mov
xor
popa
dec
in
call
sbb
pop
push
jp
jno
jns
das
mov
sub
inc
jnp
sbb
es
dec
sbb
adc
icebp
jmp
xchg
mov
(bad)
aam
repz
leave
out
sub
xchg
mov
lds
jno
adc
repnz
adc
jns
movs
es
cli
ficomp
aad
in
xor
and
lods
push
mov
call
and
mov
mov
pop
rol
dec
xor
mov
pop
test
cmps
int3
mov
xor
nop
(bad)
cs
arpl
ja
push
cmp
aad
(bad)
cmps
xor
std
js
push
stos
mov
xchg
mov
push
les
mov
and
mov
fwait
loope
pop
mov
cdq
inc
add
ffree
mov
pop
push
leave
cmp
inc
outs
mov
mov
cmp
leave
dec
cmp
fwait
or
sub
cmps
sti
je
das
arpl
push
test
out
shr
es
(bad)
jl
jb
pop
or
loop
aaa
lahf
ins
jo
cli
adc
arpl
iret
mov
mov
(bad)
sbb
adc
test
adc
add
lahf
mov
pop
jl
stc
jg
mov
sub
sub
sahf
xor
(bad)
call
adc
pop
dec
jno
push
pop
ror
dec
sub
mov
pop
popa
shl
lods
test
psubb
mov
aas
scas
xchg
adc
int
or
pop
jne
neg
movs
and
fild
popf
aas
push
arpl
test
xor
push
adc
mov
jle
ss
ret
adc
mov
test
and
(bad)
inc
xor
pop
lods
jno
dec
shl
punpckhbw
jne
cli
cdq
pop
and
jns
stos
aad
ret
ins
sub
push
enter
lods
cmp
pushf
clc
xlat
sahf
(bad)
in
dec
stos
sub
scas
xor
jp
mov
retf
arpl
inc
call
or
jnp
mov
sbb
sbb
inc
mov
in
fild
mov
(bad)
mov
xlat
lds
in
mov
or
add
(bad)
mov
add
movs
or
out
add
push
test
repz
dec
and
lods
jnp
ret
fimul
jo
int3
adc
test
jle
and
jg
and
inc
ins
cmps
or
(bad)
push
xor
or
push
repnz
or
push
adc
sub
out
jns
dec
jae
jb
jmp
clc
retf
push
mov
or
jnp
mov
or
test
(bad)
out
mov
or
jp
sub
dec
sbb
xchg
adc
stc
scas
inc
jb
xor
call
cwde
out
call
aam
dec
mov
add
sub
iret
dec
out
retf
adc
pcmpeqw
lahf
jmp
iret
and
add
fsubr
lahf
jo
dec
les
imul
loop
and
mov
call
aad
push
mov
cmp
scas
sbb
xchg
xor
xor
pop
mov
cmp
outs
pop
sub
iret
cmp
retf
jbe
sahf
retf
dec
mov
test
push
pop
jb
and
repnz
hlt
aad
inc
jno
cwde
pop
fild
mov
pusha
fnstsw
adc
inc
pop
jbe
jns
xchg
pop
pop
inc
movs
xchg
test
xchg
cmp
jl
sbb
mov
ret
clc
stc
repnz
sub
push
rcr
adc
(bad)
jmp
push
mov
inc
mov
dec
scas
aad
popa
(bad)
ins
addr16
sahf
push
jecxz
cmps
jle
(bad)
inc
inc
sub
push
mov
sbb
pop
fcmovnb
mov
sahf
pop
xchg
sbb
adc
outs
pop
out
xchg
or
pop
pop
mov
lods
outs
push
ins
dec
(bad)
xor
aam
push
add
(bad)
push
fsubr
pop
lock
arpl
adc
sub
stos
cmp
cmp
push
jo
js
pop
push
idiv
inc
rcr
data16
imul
lods
mov
int3
sub
pop
push
sub
leave
sub
pop
sub
mov
mov
aaa
fmul
add
mov
mov
mov
push
(bad)
pop
push
addr16
aad
retf
inc
add
scas
sub
or
lds
hlt
push
mov
fisttp
dec
inc
xchg
loope
push
scas
push
xchg
ficom
jmp
add
jmp
jae
int
dec
dec
jb
sbb
popa
mov
jbe
stc
xor
int
push
ins
jo
mov
retf
xor
mov
push
mov
popa
mov
add
dec
outs
js
movs
pop
lock
and
push
imul
and
call
mov
mov
iret
xor
std
fsub
or
aad
enter
dec
inc
addr16
sbb
fnsave
xchg
loop
int
mov
inc
jge
jb
jmp
(bad)
sti
outs
in
inc
icebp
jmp
push
rol
sub
or
(bad)
cmp
cmp
jbe
iret
or
mov
sub
stc
and
retf
imul
in
push
gs
mov
mov
push
bound
test
inc
aas
or
mov
cmp
inc
call
loope
cmp
sbb
push
push
and
adc
push
push
cmp
push
pop
in
and
sbb
shl
push
aam
add
mov
mov
adc
mov
imul
dec
and
gs
(bad)
adc
dec
sub
jb
pop
test
mov
unpckhps
int
int3
cs
stc
jne
mov
jl
out
(bad)
lds
xor
lods
xor
mov
inc
pop
mov
mov
popa
aam
inc
popa
jo
push
sub
lea
out
retf
dec
mov
jbe
jns
jg
fstp
arpl
out
jb
sar
adc
mov
test
jnp
xor
test
ret
adc
push
stos
mov
xchg
jae
sub
mov
aas
sbb
ds
loope
hlt
jecxz
xchg
bound
stos
in
cs
ss
lods
sub
sub
jle
cli
retf
sahf
(bad)
(bad)
rcr
adc
sti
ficomp
aad
movs
daa
jo
in
mov
add
cmp
adc
inc
xor
ret
sub
fdivr
add
jle
ins
adc
and
xchg
pop
popf
fadd
loopne
add
hlt
jge
es
rcl
fcom
(bad)
loop
and
adc
xchg
fwait
loope
mov
inc
xor
mov
fimul
stos
and
(bad)
mov
(bad)
ror
cmp
ins
mov
xor
mov
sub
loop
adc
cwde
add
hlt
pop
sub
adc
mov
cdq
and
adc
push
xlat
repz
fwait
add
sbb
fs
or
(bad)
fmul
jl
icebp
jno
mov
sub
in
xor
fisttp
jg
lods
loopne
into
push
cmp
push
inc
pop
call
xchg
ja
pop
adc
lock
push
jp
jb
push
mov
inc
pop
scas
rcr
arpl
repz
inc
or
mov
shl
sbb
scas
(bad)
scas
psubusw
mov
or
sub
jl
jae
clc
fcom
fnstsw
jb
sub
inc
pop
dec
cmps
aaa
push
in
sub
pusha
cmps
aaa
arpl
cmp
hlt
loop
xchg
lea
jo
ins
add
neg
aam
leave
movs
aam
fiadd
dec
mov
xchg
ins
dec
rol
mov
fldenv
test
aas
out
xor
dec
scas
push
test
jp
(bad)
scas
fwait
(bad)
xor
(bad)
icebp
lahf
call
cmp
lds
and
add
or
ds
lds
jl
fsubr
inc
pop
push
jecxz
int
test
mov
scas
dec
pop
inc
cmp
mov
mov
push
push
js
cmp
movs
pusha
repz
test
xlat
sub
fiadd
pop
pop
xor
movs
popf
mov
not
add
ds
sbb
std
dec
int3
dec
mov
push
cmps
icebp
mov
(bad)
(bad)
pop
rol
ret
cmp
std
inc
sbb
(bad)
je
imul
push
push
es
scas
ins
lea
mov
xlat
imul
bound
stc
ins
inc
pop
cli
mov
cmp
fdivr
stos
mov
lock
outs
add
setne
nop
sub
push
push
into
push
lods
rcr
sahf
pop
jno
arpl
iret
leave
inc
cmp
das
cld
(bad)
repz
(bad)
fcomip
pop
xchg
jle
cwde
cwde
mov
mov
test
mov
imul
mov
mov
jge
into
movs
in
retf
je
adc
inc
scas
in
adc
cmps
xchg
in
jg
out
daa
inc
stc
inc
or
stos
inc
mov
jmp
iret
ss
mov
mov
les
arpl
sub
mov
ds
pop
outs
outs
sbb
mov
pop
sbb
xchg
lahf
mov
test
sbb
inc
cli
punpckhdq
fist
aas
loop
mov
ds
mov
push
aaa
ss
push
mov
loope
jo
out
(bad)
mov
icebp
mov
addr16
push
xlat
es
ss
and
push
mov
stos
jl
xchg
sbb
mov
or
sar
add
mov
adc
or
or
xor
add
out
outs
mov
jl
cmc
jnp
(bad)
push
dec
jg
fstp
mov
test
cs
stos
push
inc
bound
dec
xor
outs
pop
aaa
pop
bound
mov
mov
cmp
aad
mov
mov
test
xor
sub
scas
mov
lock
push
repz
cmp
cmps
sbb
ror
in
inc
sub
adc
sbb
xor
add
sbb
jo
mov
aam
les
repz
or
add
xor
xchg
fwait
mov
inc
test
sbb
mov
out
mov
jb
xrelease
rol
push
test
mov
adc
push
lahf
mov
sti
js
mov
jbe
test
xchg
sti
imul
data16
mov
jo
dec
rcl
jle
lea
add
sub
xor
xchg
in
mov
cmp
mov
shr
adc
inc
add
pop
sbb
scas
aad
out
sahf
xor
cmc
mov
lock
in
enter
inc
push
xor
jmp
imul
pusha
push
dec
test
pop
xor
(bad)
(bad)
mov
or
add
outs
dec
jo
inc
test
inc
jno
addr16
test
out
and
adc
cmp
fstp
push
sub
stos
push
pop
dec
pop
sbb
pop
aas
dec
dec
loope
arpl
inc
cmp
mov
retf
jne
push
lahf
push
clc
popa
push
pop
hlt
xchg
mov
sbb
(bad)
sub
and
fs
retf
and
jmp
push
shl
fst
in
lods
scas
cmc
xchg
test
mov
test
cmp
push
retf
pop
mov
push
out
cmps
(bad)
mov
(bad)
cs
loope
(bad)
mov
pop
jo
push
cmp
xchg
dec
pusha
xor
or
stc
pop
bound
fs
cmp
push
add
cmps
and
sub
mov
push
inc
cli
int
ffreep
scas
mov
test
cli
not
test
pop
dec
daa
mov
in
jns
xchg
dec
dec
mov
or
mov
xor
test
adc
loopne
dec
or
and
sub
cmp
out
inc
outs
out
add
xor
dec
ins
shl
hlt
fprem1
scas
adc
or
dec
push
inc
call
test
inc
sbb
push
mov
sub
out
pop
je
fbstp
aaa
mov
ins
jo
out
div
inc
aam
pop
fstp
aam
adc
jb
add
or
pop
and
in
cmc
ror
sbb
jbe
imul
(bad)
ror
std
or
test
das
es
das
sub
mov
ss
cmp
not
cli
popa
mov
cmp
mov
dec
pop
inc
clc
test
fimul
in
or
jb
retf
jbe
enter
(bad)
mov
out
imul
xor
mov
sbb
fadd
jg
fisub
pushf
sub
inc
push
cwde
push
and
lock
xor
inc
jbe
or
stos
leave
jnp
shl
loop
add
sahf
cmps
bound
imul
popa
mov
or
(bad)
into
fucomp
and
je
pop
rcl
mov
mov
jnp
(bad)
dec
push
ror
pushf
mov
xchg
add
loop
(bad)
mov
outs
adc
jmp
xor
sbb
inc
lds
mov
pop
jnp
or
jp
call
mov
xchg
sbb
xlat
fs
xchg
sbb
pop
jb
rcl
inc
cmp
aas
add
dec
add
in
(bad)
mov
mov
cwde
(bad)
and
int
or
(bad)
mov
push
xchg
dec
pop
adc
jns
data16
lahf
(bad)
or
xor
retf
jp
call
xlat
nop
cmp
pop
lds
pop
or
cmp
mov
call
stos
inc
test
popa
loope
adc
pop
add
or
in
inc
pop
mov
sub
push
and
push
inc
popa
aas
or
test
push
push
mov
cmp
fsub
sahf
fcmovnbe
out
jecxz
hlt
int
cmp
or
pop
addr16
js
push
pushf
mov
lea
(bad)
or
jns
test
add
xor
mov
dec
fcomp
jle
and
push
add
push
xchg
pop
pop
inc
mov
ja
adc
or
mov
jge
jo
scas
pop
sbb
sti
dec
xor
aad
dec
jbe
jnp
jno
xchg
stos
pusha
je
mov
adc
push
fnstsw
ds
mov
(bad)
pop
shl
add
push
repnz
jg
pop
add
retf
cli
es
xchg
jg
ins
sbb
push
aaa
nop
push
pop
lahf
add
stc
add
imul
pop
inc
adc
mov
les
adc
idiv
fnstenv
inc
and
shl
xor
xor
movs
js
and
xchg
mov
pop
(bad)
ret
push
push
jb
inc
pop
jno
mov
pusha
shr
scas
mov
dec
neg
jge
cmps
mov
xor
add
inc
mov
push
dec
dec
aaa
adc
mov
xor
loopne
movs
aaa
jge
ret
and
pop
or
scas
(bad)
mov
sub
arpl
mov
and
fiadd
fadd
xor
aaa
dec
push
dec
fcom
dec
aad
daa
in
xor
adc
add
mov
into
aad
test
jo
call
mov
pop
js
in
dec
xor
and
xchg
test
mov
mov
jne
dec
mov
cli
inc
xor
call
in
pop
je
pop
cmp
mov
out
fs
scas
retf
mov
outs
cdq
pop
push
js
loop
cmp
ins
xor
xchg
xor
sub
je
jp
sub
or
leave
stc
or
sar
out
mov
(bad)
pop
cld
addr16
or
pop
dec
stos
sbb
outs
sub
xchg
jae
ficomp
cmp
out
sti
mov
pminsw
imul
mov
lock
aad
fdivr
stos
in
ror
xor
cmp
sbb
repz
pop
retf
cmp
hlt
fs
outs
xor
out
scas
jle
gs
xchg
in
sbb
mov
mov
rcl
mov
aad
scas
cs
cmp
mov
xchg
adc
das
fwait
mov
cmps
js
test
mov
aaa
cmps
leave
leave
in
and
ins
daa
push
fs
sub
mov
out
in
xchg
push
test
into
cmp
xchg
sub
mov
sub
mov
cwde
pusha
jae
add
pop
or
popf
add
mov
stc
cmp
arpl
inc
push
xchg
bound
and
and
sar
and
xchg
out
leave
jg
cmps
in
mov
je
test
mov
ffree
xchg
inc
call
clc
daa
jecxz
add
jnp
dec
sbb
scas
mov
retf
cmp
jns
or
adc
ficom
out
pop
out
stos
push
ficomp
mov
aam
xor
and
xlat
push
adc
test
test
push
push
mov
aam
hlt
mov
push
jge
lods
cwde
push
sub
sbb
ret
adc
aam
lea
stos
aas
and
stos
das
rcl
test
lods
xchg
xor
out
pop
push
sbb
push
(bad)
push
mov
push
inc
pop
test
ss
xlat
cmps
xchg
add
or
push
push
outs
rcr
in
cmp
dec
loop
dec
cmp
jl
add
inc
ret
(bad)
fisub
or
retf
push
cmp
loope
int
out
or
imul
mov
int
pop
sahf
ss
or
cld
ja
push
push
adc
cdq
and
jo
mov
(bad)
xor
movs
shl
sub
xchg
rcr
xor
or
js
imul
hlt
pop
xchg
mov
inc
mov
sub
fbstp
sbb
faddp
loope
lea
inc
rol
shl
and
aad
inc
and
or
cmp
retf
jb
loopne
push
jnp
mov
lea
loop
ins
xchg
push
sahf
icebp
mov
bound
cli
push
cmp
xchg
movs
arpl
and
hlt
push
cwde
push
cli
dec
cld
clc
xor
not
push
fst
cmp
test
and
sti
cmp
shl
popa
adc
push
cmp
pop
xchg
add
lock
daa
jl
mov
lods
pop
adc
loopne
and
repnz
push
je
push
mov
mov
jmp
test
push
lods
xchg
aas
add
test
adc
mov
fldenv
push
dec
fidivr
out
dec
in
sbb
rcl
inc
cli
pop
mov
pop
cmc
in
add
mov
xor
cmp
sub
in
xchg
add
pop
aaa
retf
fadd
pop
xchg
or
sub
aad
imul
mov
lods
cmp
inc
rol
dec
inc
dec
xor
cs
cmc
jne
out
dec
into
or
mov
bound
test
leave
dec
fcmovu
movs
leave
fmul
add
jmp
or
fistp
jp
cmp
dec
cmp
in
dec
movs
test
sbb
lods
inc
cmc
call
mov
push
mov
(bad)
jne
mov
xchg
mov
pop
adc
sbb
les
mov
xchg
xor
inc
mov
adc
jne
repz
dec
cmp
adc
das
inc
add
xor
arpl
mov
push
or
idiv
mov
and
in
sbb
pop
les
outs
cmp
arpl
mul
sub
push
add
push
test
pop
pop
jge
(bad)
pop
popa
mov
fsubr
mov
fdivr
clc
jl
movs
cdq
data16
test
imul
fwait
leave
and
(bad)
mul
fcmove
or
jl
or
rol
sub
stos
sbb
std
jmp
outs
js
sub
cmp
in
xor
mov
cmp
inc
jmp
ja
pop
and
dec
add
mov
mov
cmps
or
fstp
xchg
repnz
pop
or
push
gs
mov
sbb
outs
into
jno
clc
cmp
and
daa
jp
inc
mov
aam
cmp
push
js
or
jbe
adc
mul
pushf
adc
sub
outs
out
scas
push
shr
inc
mov
jge
(bad)
mov
sbb
xlat
(bad)
fld
sub
sub
pop
jmp
neg
(bad)
call
push
loope
int3
retf
popf
ins
jmp
push
gs
jp
call
push
xchg
cmps
push
lods
(bad)
jecxz
mov
adc
fsubp
jno
cmps
sti
mov
loope
push
out
mov
mov
sti
test
lods
inc
pop
add
ret
scas
inc
mov
aad
xchg
xor
push
aaa
ret
dec
cli
fistp
fst
mov
jp
xor
bound
jle
out
fiadd
xchg
or
xchg
bound
inc
xchg
out
cmps
nop
sub
in
jnp
(bad)
mov
jmp
push
(bad)
pop
fistp
inc
push
xchg
push
pop
jae
adc
jne
xlat
push
dec
add
call
out
mov
sar
push
icebp
(bad)
dec
push
int3
scas
jg
dec
retf
push
inc
push
ret
in
in
sti
jl
xchg
ret
jae
test
mov
jp
outs
imul
(bad)
jp
fadd
loope
dec
rcr
mov
mov
jno
sahf
mov
cmp
sti
xor
sbb
fisubr
fwait
retf
fmul
and
jmp
push
fld
test
or
xor
xchg
or
data16
int3
or
test
mov
in
or
stc
jbe
loopne
jmp
inc
adc
or
sahf
ffreep
leave
scas
adc
aam
cmp
mov
shl
fcmovb
xchg
and
pshufw
jl
sub
repz
mov
and
inc
imul
pop
jo
jbe
aad
mov
outs
pop
test
outs
outs
rcr
dec
adc
xchg
jecxz
aad
(bad)
test
dec
mov
adc
ins
dec
mov
pop
push
cmps
daa
aaa
dec
push
pop
cmps
mov
sub
test
inc
sahf
add
cld
jnp
imul
cmp
jb
jp
jge
outs
mov
or
and
xor
push
fdivrp
cdq
and
jo
rcr
es
inc
xchg
add
arpl
sar
mov
cmps
adc
push
shl
jle
xor
cmc
pop
loope
push
inc
jno
lods
or
xor
retf
ret
mov
xchg
jge
outs
or
mov
cmp
jmp
xchg
aam
repz
movs
sbb
adc
pop
push
xor
push
clc
add
xor
mov
(bad)
loope
inc
add
jmp
xor
jae
loop
cmp
mov
ja
je
push
mov
jmp
ret
jae
sbb
jmp
mov
sub
sub
outs
and
enter
fdivr
inc
lahf
sbb
jnp
call
sahf
xchg
pop
outs
dec
xchg
or
loopne
xchg
jae
int3
pop
or
inc
in
dec
cdq
into
cmp
retf
icebp
ret
adc
jnp
ret
jo
mov
jecxz
leave
hlt
mov
ficomp
in
pop
fldcw
loop
push
dec
sbb
scas
push
gs
push
(bad)
out
pushf
sbb
mov
or
mov
adc
cmovb
ret
inc
ror
stos
ins
sub
inc
test
out
stc
mov
adc
pop
pop
dec
nop
xchg
sbb
sar
xor
xchg
jae
pop
lds
or
ret
mov
int
mov
icebp
sahf
fwait
cmp
add
cld
pop
lods
push
cld
test
adc
jb
xchg
shl
xor
or
adc
xchg
push
pop
mov
xchg
inc
arpl
shl
or
ds
inc
gs
pusha
cdq
pop
cmc
ret
out
les
push
outs
sub
into
xor
mov
repnz
mov
mov
mov
jb
sub
mov
cmps
sti
call
sbb
jge
pusha
push
scas
inc
mov
push
pop
jno
(bad)
xchg
in
mov
into
in
sbb
pop
sbb
xchg
cmp
xchg
js
jg
es
adc
sbb
xchg
jecxz
scas
add
jb
aas
cmp
std
adc
pop
or
jno
ins
call
hlt
fisub
inc
and
pop
xor
fcom
add
push
hlt
ret
jo
inc
outs
movs
jg
add
je
jae
gs
or
outs
adc
dec
mov
repz
imul
stos
and
xchg
cld
ins
call
outs
out
jmp
fwait
pop
das
xor
popf
hlt
jmp
into
inc
je
into
add
cmps
sbb
call
scas
(bad)
popf
xchg
stc
and
sub
adc
add
in
sbb
rcr
int
lea
or
pop
fcom
xchg
sar
sub
mov
repz
outs
test
test
lods
dec
pop
pop
es
aad
jbe
call
rcr
adc
mov
push
xchg
mov
pop
retf
pop
cmp
push
add
rol
lock
aam
xchg
inc
xlat
cmps
or
lahf
mov
cmp
mov
and
push
pop
int3
dec
sbb
xchg
jmp
xor
mov
test
int
popf
lea
ret
arpl
sti
outs
fidiv
sub
mov
xor
ret
gs
sbb
aam
sub
sbb
or
es
xor
mov
xor
daa
leave
repnz
pop
mov
jnp
jno
pushf
sbb
sbb
out
push
scas
mov
sub
xchg
xor
mov
push
mov
sbb
aas
int
or
mov
jmp
inc
cmps
cdq
push
test
lahf
popf
push
add
pusha
pslld
sub
sub
pop
shl
push
jge
aaa
mov
fbstp
cmp
loope
push
js
push
icebp
cdq
dec
sbb
icebp
xor
cmp
rol
adc
ret
push
out
mov
or
hlt
pop
xchg
pop
test
pop
sbb
int
retf
and
loopne
pop
push
push
dec
mov
adc
repnz
scas
sub
xchg
fwait
mov
pushf
fldenv
push
mov
pop
mov
pop
rcr
call
clc
sbb
cwde
sub
adc
push
fs
les
mov
mov
retf
aam
mov
mov
mov
ret
xor
retf
mov
out
mov
mov
pop
bound
rcr
ja
adc
clc
or
in
xchg
pop
mov
(bad)
pop
out
mov
or
pop
movs
jecxz
xor
imul
cmp
cdq
retf
test
js
fucomip
test
clc
and
aam
mov
add
rol
retf
jecxz
inc
cld
push
ret
mov
xchg
test
call
movs
push
or
or
xor
sub
inc
pop
push
xchg
pop
and
xchg
pop
or
xor
mov
enter
sub
mov
jg
inc
adc
rol
pushf
mov
fst
fst
adc
loopne
mov
sbb
jbe
push
xor
int3
fld
ret
ins
cld
js
retf
fcmovne
in
into
pop
in
test
push
jae
aas
fs
mov
aaa
sbb
cmp
icebp
inc
(bad)
stos
dec
rol
xchg
push
mov
push
ss
mov
and
daa
(bad)
fsubr
push
mov
dec
es
rol
stos
les
ds
sbb
stos
mov
cmovno
jg
jbe
dec
daa
jp
pop
sbb
cmp
mov
loope
add
cmps
push
and
and
in
out
xor
inc
test
int3
sub
jmp
inc
sahf
cmc
popf
(bad)
movs
ins
jns
push
and
iret
test
cmp
cwde
(bad)
and
ja
adc
or
ss
sbb
fadd
popa
gs
jb
lods
mov
stos
fild
arpl
jmp
stos
mov
fnstcw
inc
cmp
enter
and
in
cmp
xor
loop
les
jno
icebp
cmc
inc
stc
mov
xchg
hlt
pop
sbb
xchg
repnz
popf
mov
sti
outs
push
xchg
(bad)
cmp
fisttp
rcl
mov
or
add
xchg
jle
or
repnz
in
mov
cmps
mov
repnz
lods
mov
pop
xchg
retf
jmp
out
(bad)
pop
repz
mov
test
jl
xchg
mov
jno
pop
in
cmps
inc
dec
mov
inc
mov
dec
xchg
retf
pop
inc
daa
ror
jbe
daa
clc
push
xor
je
arpl
jb
jp
and
fsub
jno
mov
add
hlt
jns
dec
mov
(bad)
repnz
inc
or
or
aad
std
jge
call
mov
mov
cli
xchg
ins
clc
pop
pop
loopne
mov
pop
test
rol
pop
cmp
mov
jb
rcl
dec
imul
in
sub
mov
xor
arpl
mov
pop
in
pop
call
(bad)
cld
dec
ret
jmp
cdq
aam
test
and
push
and
jo
mov
sbb
sbb
test
stos
movs
out
mov
test
jmp
sahf
hlt
fnstsw
mov
test
push
mov
lock
add
cs
mov
arpl
rcl
imul
mov
mov
arpl
outs
rcr
and
or
inc
dec
push
div
iret
mov
add
fcmovnu
mov
aas
push
and
scas
ins
inc
in
pushf
push
ss
jb
hlt
pop
in
push
jno
xchg
fmul
(bad)
(bad)
xchg
xor
sub
retf
in
pop
adc
call
add
xchg
and
push
ja
retf
inc
xchg
mov
iret
and
inc
jo
mov
hlt
jbe
stos
dec
mov
outs
scas
int3
js
or
cmp
ficom
jl
push
(bad)
mov
cs
test
stos
mov
push
clc
add
js
and
cmp
jecxz
mov
stos
xlat
or
repz
jbe
hlt
mov
add
in
mov
add
mov
mov
scas
fist
icebp
push
mov
lods
push
sbb
jg
in
push
xor
test
cmc
adc
mov
mov
cli
jle
fisttp
adc
push
or
xchg
pop
xor
in
call
call
inc
mov
inc
daa
pop
xchg
push
pusha
sbb
jae
in
fisub
cmp
mov
scas
jns
mov
pop
cmps
clc
jno
add
out
call
lahf
jg
pop
ds
push
dec
hlt
and
(bad)
arpl
push
xor
sbb
stos
adc
cmps
adc
out
jb
int3
jns
les
dec
sub
cmp
fbstp
ret
mov
sbb
push
cmp
(bad)
cmc
sbb
adc
xchg
cmp
mov
std
in
pop
mov
icebp
(bad)
(bad)
lods
mov
xlat
pop
daa
mov
adc
call
ja
fs
mov
cmc
pop
adc
scas
sub
inc
pusha
nop
mov
push
push
xchg
shl
push
xchg
or
int
push
shl
leave
ror
js
outs
mov
jns
out
aas
movs
lods
push
movs
clc
cmp
lock
lahf
pop
arpl
adc
inc
dec
sbb
in
sub
mov
ja
call
loopne
xchg
jmp
dec
and
stc
xchg
shr
(bad)
aad
es
popf
or
mov
lods
in
sbb
fild
fwait
inc
(bad)
repz
movs
pop
xchg
or
ins
test
mov
clc
jns
int
and
icebp
xor
data16
lock
cmp
sti
cmp
dec
fistp
push
scas
fistp
add
mov
pop
xlat
pop
in
je
daa
cmp
push
or
jmp
movs
out
scas
ret
jo
hlt
loop
inc
xchg
in
xor
dec
push
xor
dec
adc
repz
cmps
enter
mov
inc
jp
fisub
fs
add
adc
cld
fidiv
mov
cli
jno
dec
out
icebp
addr16
adc
je
xor
addr16
adc
ja
or
push
(bad)
push
repnz
aas
sub
adc
adc
aad
test
dec
call
inc
ds
sbb
je
fldl2e
out
out
ins
out
movs
cmp
sbb
mov
mov
sbb
dec
xor
inc
lods
mov
sub
add
pop
lods
int3
fdiv
mov
jecxz
imul
pop
mov
out
jbe
(bad)
xchg
cli
sub
inc
pop
jbe
jne
xchg
sbb
inc
std
ja
loopne
push
push
mov
out
movq
dec
ret
inc
push
push
fucomi
dec
mov
jns
cld
sbb
(bad)
ficomp
mov
mov
dec
cs
cmp
cld
xor
and
adc
xor
sub
jnp
aam
pop
fwait
sti
pop
and
xchg
or
stc
xchg
dec
fisub
dec
dec
rol
push
dec
das
xchg
mov
outs
std
and
mov
sub
jo
xchg
mov
push
sbb
mov
pop
cdq
je
xchg
shl
test
cmp
xor
inc
pushf
sub
outs
je
mov
lea
enter
cmp
mov
outs
pop
loopne
or
mov
les
inc
lods
xchg
xchg
and
out
inc
fdiv
das
and
mov
sbb
add
loop
push
inc
sub
sar
aad
int3
xchg
mov
dec
push
mov
pop
and
pop
mov
adc
xor
imul
aad
and
movs
(bad)
mov
stos
fisttp
mov
fiadd
mov
add
enter
int
ins
push
inc
movs
cmp
retf
pusha
cld
mov
push
add
push
cs
imul
movs
jnp
inc
xor
call
loop
(bad)
mov
adc
adc
push
adc
and
push
mov
xchg
push
mov
fiadd
les
push
vcvttsd2si
icebp
cmps
pop
sub
xchg
dec
ret
ja
mov
xor
imul
or
jl
push
adc
das
aad
(bad)
in
icebp
add
xchg
jnp
cdq
sbb
fwait
test
shr
push
xchg
shl
pop
std
shl
dec
cli
push
ret
push
fs
in
jle
iret
shl
pop
sbb
xchg
xlat
in
test
sub
pop
xchg
xchg
pusha
adc
lahf
das
add
loopne
test
(bad)
xor
sub
adc
cmp
push
xchg
mov
out
ror
(bad)
out
sbb
cmp
stc
pop
out
into
pop
clc
xor
and
mov
mov
add
or
push
jmp
int3
or
cmp
retf
cmp
in
fwait
mov
nop
add
and
xchg
scas
mov
repz
inc
mov
sbb
mov
adc
sbb
xchg
cmps
out
pop
(bad)
shl
dec
adc
outs
sbb
repnz
pop
test
ja
movs
sbb
dec
int
outs
pop
sub
mov
mov
les
(bad)
cmp
imul
inc
shl
int3
mov
jecxz
jbe
sbb
iret
rcr
stos
cld
popf
repz
cmp
pusha
fcmovne
push
dec
ds
push
je
mov
leave
sbb
out
scas
mov
sub
mov
daa
gs
xor
pop
adc
and
push
fs
mov
std
loopne
loop
sbb
pop
nop
xlat
mov
cmp
inc
sti
fistp
jmp
or
mov
or
outs
add
gs
inc
dec
and
xor
bound
repnz
imul
adc
mov
enter
inc
sbb
jge
add
movs
dec
xor
mov
aad
mov
arpl
jge
pushf
mov
and
jne
(bad)
mov
(bad)
xchg
(bad)
test
aas
push
push
push
add
cmp
fisubr
mov
sti
fisub
popf
fwait
test
imul
inc
jno
(bad)
and
or
jns
(bad)
(bad)
aaa
out
ss
mov
jb
or
jae
xchg
test
out
mov
ins
add
add
mov
ins
dec
ins
cwde
xor
and
outs
mov
and
gs
adc
xchg
ja
fucomp
or
jmp
sbb
push
jnp
dec
out
xchg
sub
nop
inc
push
add
(bad)
not
nop
cmp
dec
mov
jg
push
cmc
mov
sub
hlt
jno
mov
xor
xor
cld
pop
jb
inc
jbe
les
sti
out
mov
xlat
ss
mov
das
repz
or
bound
movs
jae
jae
lods
mov
sar
lods
test
sbb
dec
inc
stos
dec
cwde
int
xlat
sub
push
movs
movs
and
sbb
jmp
lods
aam
ins
icebp
ret
and
push
jne
jae
cmp
and
push
sub
mov
repnz
in
cs
fimul
add
cmp
inc
inc
mov
add
jecxz
nop
mov
xchg
(bad)
jmp
mov
add
pop
aam
aad
repz
sar
ja
test
cmps
pop
aad
enter
outs
xchg
(bad)
jo
push
into
fwait
cmps
call
xchg
in
cdq
sub
dec
add
icebp
inc
adc
sub
mov
and
push
dec
jns
sbb
out
fisubr
pop
aas
adc
mov
fcomp
jmp
cmp
pop
mov
push
mov
aas
jo
push
push
popa
lahf
pushf
sub
xchg
inc
push
inc
mov
add
xlat
pop
xor
dec
cli
xor
jne
call
pop
xchg
pop
jns
sbb
sbb
xor
pop
or
pop
push
push
std
mov
inc
neg
and
jo
leave
loope
xchg
jecxz
test
jl
adc
sbb
xchg
outs
jl
ret
fstp
sbb
add
adc
push
sub
inc
fcomp
jle
xchg
repz
and
imul
pop
xor
nop
cmp
mov
shl
test
cmp
retf
cld
scas
test
mov
aad
stos
in
les
adc
jo
std
imul
ds
sub
add
push
icebp
cmp
jbe
pop
je
push
pusha
setns
push
add
or
pop
std
in
stos
icebp
or
jmp
sub
adc
pop
pop
push
inc
jge
push
sub
dec
loopne
and
stos
xchg
cmps
or
pop
xchg
aaa
add
push
mov
outs
ror
cmp
mov
push
pushf
or
adc
pop
push
or
inc
repz
fst
dec
outs
bound
out
add
lea
xor
(bad)
popf
push
pop
retf
push
dec
js
dec
rol
xor
fld
mov
pop
sbb
lock
dec
xor
int3
mov
adc
xchg
aad
into
xor
pop
js
cld
and
adc
ja
mov
or
or
pop
pop
in
stos
stos
sub
jnp
jp
into
adc
lds
fnsave
in
pop
adc
sbb
adc
xor
jno
shr
in
aad
xchg
push
nop
jne
das
es
lods
inc
aad
and
cmp
cmp
pop
pop
retf
add
mov
je
xor
add
cmc
jno
mov
imul
leave
xchg
movs
fisttp
mov
imul
dec
mov
sbb
ja
dec
nop
mov
and
stc
sub
out
and
cli
mov
sub
and
out
mov
mov
iret
push
or
sub
or
fbld
retf
test
pop
or
mov
pop
aas
sbb
jmp
int
cdq
dec
jo
pop
inc
mov
call
jg
mov
and
jns
je
mov
inc
and
js
enter
repz
push
retf
stc
addr16
fcom
cdq
hlt
and
stc
jne
test
dec
or
rol
xchg
mov
mov
(bad)
pushf
sbb
jb
push
(bad)
in
out
add
or
jl
cdq
lea
xlat
inc
ror
ret
mov
add
push
mov
adc
push
stc
mov
sub
popf
jae
das
outs
stc
and
or
adc
aaa
(bad)
fnstcw
cli
daa
(bad)
inc
sahf
in
or
pusha
pop
xchg
int
or
xor
xor
fwait
dec
and
pop
pop
outs
es
adc
jge
rep
loopne
(bad)
cs
into
das
das
pusha
popf
dec
stc
test
dec
push
or
(bad)
cld
mov
push
and
mov
call
pop
fbstp
leave
aaa
gs
sahf
in
nop
or
add
xor
mov
inc
jnp
sbb
sbb
add
mov
sbb
loope
das
sub
call
sbb
dec
xchg
retf
ret
out
add
mov
push
mov
pushf
add
mov
mov
cli
xor
jl
dec
inc
or
and
xor
gs
and
mov
pusha
js
(bad)
out
loope
fs
pop
sub
test
loop
nop
or
jb
es
xchg
stos
xchg
and
pop
pop
aad
xchg
and
(bad)
jge
add
imul
or
retfw
xchg
sub
mov
jb
cmp
jle
iret
fnstcw
xlat
idiv
out
fidivr
mov
out
mov
dec
dec
mov
mov
jecxz
xor
in
or
mov
call
add
xchg
mov
sahf
mov
fbstp
xchg
mov
das
hlt
mov
sbb
jmp
push
mov
pop
push
(bad)
imul
xlat
jbe
mov
xor
push
test
fwait
popf
inc
lahf
out
push
(bad)
sub
in
aas
dec
lea
lea
mov
xor
pop
push
mov
scas
mov
mov
sbb
test
loope
lds
sti
xchg
sar
out
pop
jne
lea
shr
mov
shr
push
dec
ins
inc
and
stos
pop
das
fstp
cmp
or
int
int
cmp
add
cmp
xchg
nop
lods
mov
mov
(bad)
data16
fisttp
push
adc
jo
and
xor
lods
not
rep
inc
fs
cmc
add
add
cmp
call
mov
dec
xchg
test
cmp
imul
jae
div
xor
sub
xchg
mov
out
adc
cmp
pop
mov
dec
xchg
mov
fnstcw
cwde
inc
call
lods
dec
fdiv
fnstenv
add
pop
adc
scas
(bad)
mov
dec
jb
dec
mov
lods
mov
or
xchg
inc
mov
shl
pop
dec
faddp
mov
pop
or
jge
cmps
mov
(bad)
loope
sub
push
loopne
push
jbe
das
sbb
xor
hlt
mov
jg
cmp
mov
in
imul
(bad)
mov
xlat
iret
stos
pop
sub
xor
push
jge
inc
sbb
mov
sub
sbb
lock
daa
push
xor
in
inc
and
adc
pop
neg
adc
aas
test
icebp
loopne
pop
movs
jae
in
daa
aaa
mov
pop
inc
ins
call
enter
call
shl
(bad)
push
mov
outs
fst
add
(bad)
xchg
xchg
sub
fbld
adc
fnsave
out
sbb
int
ja
cmc
jle
loope
push
in
cli
nop
adc
into
fdiv
(bad)
ja
pop
scas
push
add
rcl
jecxz
add
retf
lea
xor
in
xor
mov
out
mov
cld
fimul
mov
jmp
and
pusha
(bad)
mov
cdq
pop
sbb
jecxz
call
or
and
ret
inc
and
jno
test
mov
inc
push
in
enter
mov
mov
sbb
sub
push
pop
aaa
enter
or
in
dec
jb
stc
and
pusha
(bad)
inc
lds
outs
mov
push
bound
scas
push
jb
fisubr
cmps
xlat
call
retf
pop
cmp
mov
xchg
stos
ret
enter
outs
dec
iret
mov
jnp
jle
cli
das
mov
das
popf
xor
xchg
std
dec
cmp
mov
test
adc
clc
xlat
add
mov
add
mov
sbb
inc
or
loope
inc
add
sub
and
inc
popf
cmp
fs
(bad)
push
cmp
inc
out
iret
add
(bad)
cmps
sbb
push
imul
aam
jg
xor
scas
scas
adc
cmp
into
or
pop
cli
xor
fidivr
xchg
and
inc
lock
scas
cli
or
pushf
test
mov
dec
add
xchg
xchg
lahf
fnsave
int3
push
or
cs
hlt
fist
repnz
int3
mov
out
mov
xchg
sahf
sub
dec
dec
lahf
leave
aad
ficom
xor
xchg
mov
pop
addr16
inc
out
add
inc
jmp
jecxz
pop
int3
iret
adc
jge
je
in
mov
sub
in
retf
dec
dec
in
sbb
xor
movs
es
jl
cmp
mov
ja
fwait
pusha
sub
pop
sub
fnstcw
cli
jmp
push
shl
pop
xchg
jmp
add
out
xchg
nop
mov
fs
pusha
mov
icebp
adc
xchg
sar
jns
dec
or
jmp
and
and
pop
cmp
add
in
dec
xlat
sub
ficomp
fld
and
sub
push
xchg
scas
mov
mov
jle
pop
jge
das
lds
ins
xchg
adc
dec
mov
jecxz
jns
movs
cmp
popf
inc
xchg
sar
daa
push
call
out
and
jle
or
xchg
xchg
daa
cs
add
or
push
ret
bound
mov
add
cmp
mov
mov
out
nop
mov
and
adc
dec
add
add
sbb
(bad)
mov
push
pop
push
xchg
mov
xchg
fwait
dec
mov
and
dec
inc
shl
movs
fld
in
bound
xor
retf
or
test
aaa
cwde
mov
aad
pop
clc
daa
jno
imul
jnp
mov
test
adc
push
pop
clc
or
loope
fnsave
xor
adc
call
stos
inc
in
xchg
xchg
jno
mov
pusha
xchg
cmp
push
or
nop
movs
push
stos
or
fstp
xor
fisttp
and
inc
ror
push
fisub
shl
mov
jle
dec
mov
jmp
out
push
mov
lods
enter
jl
pop
mov
stos
adc
addr16
mov
mov
dec
jo
cmps
(bad)
cmp
jno
scas
cmp
iret
pop
outs
pop
sahf
dec
cmps
push
jbe
cmp
pop
and
(bad)
mov
lahf
xor
inc
sbb
pop
xchg
repz
or
inc
adc
sbb
push
sbb
adc
inc
es
mov
dec
jmp
aaa
cld
mov
ins
mov
std
adc
test
pop
dec
xor
sbb
pusha
retf
mov
dec
ss
shl
xor
and
or
ja
pop
inc
pop
jp
sub
cmps
stc
jmp
dec
sub
fistp
and
xor
call
add
in
daa
enter
int3
repnz
add
sbb
sub
inc
(bad)
fdiv
and
ja
dec
pop
push
clc
add
fs
xor
xor
pop
fld
mov
xchg
(bad)
jns
pushf
xchg
jno
and
rol
ins
inc
mov
sub
inc
in
jecxz
dec
inc
or
jge
dec
inc
inc
pop
jae
neg
add
dec
lahf
dec
pushf
or
bound
das
mov
movnti
test
mov
sbb
mov
das
push
xchg
mov
xchg
xor
in
std
in
sub
jo
loope
push
repz
xor
inc
mov
dec
and
push
pop
cld
lods
imul
clc
sbb
push
int3
dec
fdiv
out
imul
call
push
cmp
and
lea
jg
mov
(bad)
test
jbe
and
push
nop
xlat
xchg
or
fs
leave
xor
cdq
in
cdq
or
(bad)
xor
call
xchg
cmp
in
les
sub
stos
mov
icebp
(bad)
adc
(bad)
js
lahf
xor
inc
adc
jb
push
retf
jl
cmp
cmps
out
dec
ins
mov
outs
mov
das
sbb
or
js
clc
lds
enter
nop
aaa
cmp
shl
mov
loopne
push
inc
jmp
push
scas
jge
sbb
ds
push
ja
repnz
mov
pop
out
xcrypt-ecb
cmps
mov
(bad)
(bad)
pushf
in
cwde
push
cmp
add
repnz
rcr
and
jb
xchg
cmp
add
dec
mov
mov
fldenv
pop
dec
mov
hlt
push
test
jge
shr
in
push
pop
xlat
jl
les
xchg
inc
movaps
xor
retf
loop
adc
dec
mov
mov
jmp
cs
daa
or
retf
ja
and
xchg
add
push
push
fsub
aaa
mov
int3
mov
push
imul
mov
pop
push
ds
xchg
in
je
pop
scas
rol
push
xor
mov
inc
and
fidivr
sbb
gs
(bad)
fdivp
mov
xchg
add
xor
aad
(bad)
cmp
xor
mov
cmps
lea
inc
sbb
(bad)
mov
outs
push
cmp
repz
inc
mov
jns
(bad)
cli
pop
nop
fdivr
pop
ja
xchg
dec
ss
add
adc
pop
stos
xchg
xchg
push
aas
mov
pop
push
cdq
add
(bad)
movs
inc
pop
pop
xchg
add
xor
ja
jno
mov
ss
jae
out
xor
sub
cmp
daa
and
fmul
aam
clc
xor
push
sub
adc
dec
mov
ret
aas
sub
cmp
pop
adc
inc
or
je
and
cmp
inc
xchg
and
pop
add
jo
(bad)
loop
outs
push
mov
repz
push
pop
push
test
loope
inc
ficom
adc
dec
imul
mov
rcl
icebp
aam
push
and
xlat
cmps
mov
xchg
sbb
shl
je
out
out
add
mov
rcr
jno
(bad)
fidiv
cmp
sub
inc
mov
jle
sub
stos
cmps
mov
test
aas
mov
xor
iret
xchg
pop
dec
lea
lahf
(bad)
xchg
xchg
scas
loop
scas
push
pop
imul
div
stos
aad
int3
mov
lea
push
shl
inc
cdq
jmp
repz
pop
js
mov
xchg
adc
pop
enter
jle
shr
shr
pop
out
fcomp
test
cmp
dec
dec
mov
(bad)
bound
push
int3
std
and
or
push
(bad)
in
jg
nop
fisttp
jmp
cld
pop
dec
rcl
ror
loopne
jp
(bad)
ss
sbb
fwait
dec
jl
cld
nop
repz
loopne
jo
push
sbb
lock
clc
jl
push
mov
out
in
add
add
or
(bad)
sbb
jecxz
cmp
aad
mov
ins
out
pop
adc
dec
ret
add
sbb
cmp
or
mov
dec
arpl
pop
push
mov
dec
lods
pop
sbb
retf
or
dec
(bad)
sub
in
imul
mov
pop
inc
pop
aaa
mov
(bad)
pop
pop
imul
xchg
inc
mov
call
pop
loop
stos
jb
icebp
mov
mov
adc
scas
stos
fs
push
or
sub
scas
mov
pop
rcl
lods
neg
shl
mov
sub
pusha
mov
pop
leave
(bad)
xchg
push
lahf
pop
dec
sub
imul
sahf
xchg
fcom
ds
imul
call
in
jg
neg
push
xchg
inc
aas
cmps
in
sbb
pop
mov
std
or
sub
pcmpgtb
jnp
push
repnz
rol
xchg
aas
xor
in
xor
adc
lods
inc
in
out
mov
or
pop
pop
cmp
dec
inc
out
xor
sbb
pop
inc
and
and
jbe
in
or
(bad)
dec
lock
jo
mov
leave
sbb
mov
xchg
or
mov
pop
mov
cmp
aad
or
add
mov
loope
jecxz
jbe
jmp
pop
xchg
pop
push
(bad)
rcl
sub
das
push
sub
add
jmp
imul
push
mov
lods
inc
popa
aam
push
mov
jl
fimul
jb
mov
cmp
sbb
cmc
leave
(bad)
inc
mov
xchg
data16
fisubr
push
push
cmp
mov
ret
jl
jge
and
cmp
in
ror
pop
mov
jbe
mov
or
adc
mov
jp
pop
movs
(bad)
pop
jb
fadd
leave
cmc
ins
mov
(bad)
(bad)
mov
fadd
push
ss
ffreep
xor
xlat
stos
jne
adc
push
jecxz
clc
mov
in
cwde
add
nop
out
fistp
sub
lock
cmp
and
int3
movs
lds
ss
(bad)
sbb
outs
dec
mov
fsubr
xor
or
cld
(bad)
ds
stos
mov
es
adc
mov
movs
mov
ins
das
js
mov
sub
fnstenvw
mov
hlt
inc
jb
sbb
popf
movs
adc
push
gs
or
ins
pop
shl
cmp
shr
jbe
loopne
xor
sbb
push
aad
cmps
add
test
inc
push
stc
jmp
out
add
pop
pop
sub
xor
sub
ins
xchg
fidivr
cmp
jecxz
fwait
test
hlt
cmps
cmp
jecxz
sub
add
cwde
xchg
add
out
dec
shr
and
push
jmp
icebp
jecxz
mov
push
pushf
inc
in
fsub
xchg
std
dec
sub
mov
sbb
outs
cmp
mov
or
out
inc
cmp
mov
test
retf
xor
sub
retf
pop
sub
push
inc
fiadd
and
(bad)
and
fucomip
mov
sar
or
fcomp
inc
call
dec
adc
imul
push
fadd
dec
fs
rcr
(bad)
jg
lods
cmp
bound
add
cdq
cmp
mov
out
pop
call
jmp
push
pop
push
xor
sbb
push
fsubr
or
int3
ficomp
je
xchg
stos
pop
mov
arpl
or
(bad)
and
push
call
add
sahf
inc
xchg
(bad)
fisttp
xor
sbb
add
leave
jno
mov
(bad)
mov
xchg
jmp
jmp
pop
xor
xchg
sbb
mov
or
xor
out
(bad)
arpl
mov
(bad)
pusha
cmp
sub
loopne
(bad)
sar
lds
sbb
sbb
dec
mov
cmp
cmp
call
ficom
into
popf
(bad)
pop
jmp
(bad)
adc
cmps
push
fcmovb
mov
retf
mov
shr
es
push
sub
(bad)
push
aas
outs
jle
mov
data16
fild
push
cmp
jg
js
fstp
int3
shl
ins
loop
mov
sub
and
jbe
(bad)
mov
fstp
mov
sub
mov
bound
cmps
fadd
pop
mov
inc
or
out
mov
or
push
or
ja
out
jb
inc
or
jo
inc
inc
jp
sbb
stos
mov
mov
les
jnp
aad
movs
sub
or
pusha
sahf
or
sahf
sti
inc
inc
mov
cmp
fadd
rcl
mov
stos
pop
jb
mov
jno
das
dec
jp
ret
aad
xor
jno
add
(bad)
aas
dec
les
dec
fucomip
pop
fmul
fidiv
out
iret
cmc
xchg
dec
out
jnp
and
scas
or
or
fnstenv
jg
lock
(bad)
xchg
jno
mov
cmc
mov
inc
js
cdq
cld
rol
adc
mov
adc
cmp
push
inc
inc
and
dec
xchg
add
or
mov
in
xor
xor
dec
jno
push
mov
in
push
cmp
fincstp
xchg
das
push
mov
jmp
std
push
call
mov
mov
dec
mov
ror
push
xlat
xchg
cmps
and
cmp
inc
pop
mov
cmp
js
hlt
push
mov
mov
push
test
pop
adc
jno
(bad)
jecxz
movs
dec
rcr
bnd
cmp
pop
dec
xor
mov
or
fdiv
adc
push
icebp
loopne
aam
sub
and
xor
stos
pop
inc
or
sbb
and
and
inc
aad
sub
fsubr
loopne
fs
je
(bad)
jmp
jb
sub
js
pop
sbb
(bad)
lods
dec
div
lea
and
cld
adc
sbb
out
aaa
dec
sub
add
mov
mov
pop
cmps
jne
jp
pop
fisubr
push
js
mov
(bad)
ja
cld
jg
xor
call
mov
pop
jno
xlat
mov
add
cmp
inc
shr
jnp
stc
xchg
sbb
(bad)
and
scas
pop
xchg
jmp
call
dec
xchg
out
in
lds
fwait
dec
dec
lock
adc
jo
das
sbb
cmp
aas
cld
imul
dec
pop
cmp
shr
rol
dec
vpsrld
std
sbb
frstor
inc
loope
fstp
adc
pop
fmul
pop
adc
js
cmp
ja
or
aas
call
inc
adc
inc
sub
cmp
addr16
ret
jmp
(bad)
push
jno
mov
add
addr16
data16
test
or
add
mov
jp
(bad)
int
inc
inc
imul
enter
rcr
jae
inc
repz
dec
adc
jmp
fistp
pop
xchg
push
stc
mov
movs
sub
stos
pop
bound
outs
comiss
jl
jno
in
and
xchg
mov
int3
js
imul
cmp
cmp
mov
add
push
sbb
jmp
adc
or
pop
aad
pop
adc
mov
or
out
push
jp
mul
or
sub
dec
sbb
adc
adc
ds
add
add
pop
mov
dec
sbb
pushf
gs
cmp
mov
jno
mov
inc
rep
add
and
mov
jmp
mov
dec
xor
cld
and
loop
xchg
and
jl
push
sar
test
xchg
jge
pop
mov
mov
mov
fiadd
jns
mov
or
push
cld
gs
fst
push
enter
jp
cmp
add
push
jb
mov
and
adc
mov
lds
aad
lea
cmp
inc
push
jae
div
mov
fnstenv
or
mov
cmc
test
mov
xchg
add
sti
pop
fdiv
adc
mov
mov
xchg
rcr
mov
push
pop
mov
mov
sar
jnp
mov
push
mov
sahf
jge
push
xchg
xchg
mov
push
push
inc
inc
hlt
xor
movs
(bad)
repnz
and
add
arpl
or
fisttp
push
pushf
mov
aaa
push
cld
or
xchg
push
call
adc
jnp
jg
jmp
push
call
stc
adc
iret
iret
ret
mov
call
jp
push
ss
pop
xor
adc
loop
inc
sub
xor
add
imul
cwde
daa
mov
div
pop
ins
xor
sub
nop
retf
dec
jae
mov
repnz
clc
call
aas
mov
test
(bad)
push
pusha
dec
adc
pop
mov
push
xor
stc
jns
mov
dec
xchg
pushf
movs
pushf
rcr
mov
jae
fild
addr16
loop
ror
sub
test
test
cmp
lock
xor
sahf
pop
dec
and
outs
je
cmp
leave
dec
mov
mov
lock
or
push
data16
sbb
ins
bound
leave
ins
mov
out
and
inc
ins
addr16
or
dec
arpl
or
inc
jnp
(bad)
and
movs
mov
repnz
mov
dec
push
inc
jmp
not
xor
or
imul
popa
cmp
xchg
mov
enter
jg
mul
aas
sbb
pop
xlat
popf
xor
ror
xor
and
mov
lods
sar
pop
inc
add
popf
neg
(bad)
repnz
pop
bound
push
xchg
outs
arpl
in
ret
xor
and
push
pushf
fs
leave
out
test
xchg
push
(bad)
pop
mov
and
jmp
push
jl
shl
out
mov
xchg
ret
cmps
mov
mov
sbb
push
mov
inc
pop
scas
mov
imul
jbe
push
mov
outs
mov
sub
mov
xor
out
movs
imul
jno
mov
dec
rol
inc
push
push
sub
sbb
ss
add
adc
call
fisttp
rol
outs
pop
into
pop
mov
or
mov
mov
jp
test
loopne
dec
jb
movs
icebp
add
fstp
and
test
or
into
jmp
or
mov
cs
clc
ins
out
rcr
jmp
outs
push
sbb
gs
push
mov
mov
or
aaa
popf
xor
rcr
xor
inc
repnz
and
out
call
mov
push
std
jb
movs
jae
cmp
call
sub
in
cmp
mov
mov
pop
adc
push
ins
cmps
xchg
mov
add
mov
sub
test
into
sti
(bad)
retf
sbb
adc
dec
cs
push
dec
lahf
lods
mov
jecxz
and
mov
sbb
lahf
or
and
in
(bad)
in
inc
mov
push
xor
adc
loop
cmps
movs
in
mov
xchg
mov
mov
fwait
adc
sbb
popf
push
in
dec
test
cld
scas
push
sub
inc
mov
in
mov
jmp
cmps
neg
retf
add
mov
sub
ss
test
pop
xor
and
adc
(bad)
xor
inc
fwait
retf
fnstsw
jmp
test
or
pop
push
or
dec
popf
adc
ss
fnstenv
push
fwait
xchg
push
xchg
movs
ins
(bad)
jl
scas
jmp
lods
xchg
in
jmp
in
not
imul
or
movs
iret
lahf
mov
outs
(bad)
pop
stos
add
ret
gs
aas
arpl
sbb
or
and
push
mov
and
cwde
sbb
fwait
sbb
adc
imul
inc
(bad)
cli
lock
jle
nop
mov
push
dec
pop
sbb
int3
fwait
adc
out
imul
mov
xchg
pusha
popa
int3
add
sbb
aad
dec
inc
cli
mov
cld
je
xor
sahf
push
xor
add
or
(bad)
ja
and
jno
push
xor
xchg
adc
outs
sahf
jno
mov
ja
pop
in
xlat
mov
loop
ret
sub
adc
retf
push
loop
movs
imul
sbb
mov
xor
push
and
push
cmc
cmps
push
and
cmp
retf
shl
mov
push
jmp
call
cmp
gs
dec
pop
pop
pop
jb
iret
cmc
aam
push
loope
out
mov
or
adc
test
scas
pop
cmp
test
fdiv
mov
mov
movs
stos
iret
or
mov
add
push
cli
daa
jecxz
stos
jle
add
push
push
jecxz
mov
cs
xchg
in
jl
rcr
cwde
les
frstor
loope
js
mov
sub
lds
les
out
(bad)
cmp
mov
xchg
inc
or
cmovp
jno
inc
push
sbb
jne
xor
jge
and
dec
fwait
test
push
or
test
js
or
add
inc
and
push
xchg
xchg
rcl
mov
push
idiv
ret
push
mov
adc
in
push
inc
stos
sub
(bad)
fcom
sbb
pop
dec
pushf
out
xor
adc
mov
cmp
cdq
icebp
adc
out
and
or
jb
retf
fcom
(bad)
(bad)
lods
and
mov
sbb
push
mov
xor
and
call
mov
pop
mov
jl
icebp
xchg
dec
sub
outs
shr
or
jle
(bad)
jecxz
or
sahf
mov
cmp
jge
cmc
sub
ret
bound
cld
dec
loope
es
xor
pop
add
or
stc
mov
jae
je
sbb
cli
into
test
sbb
mov
and
mov
test
test
sub
dec
sbb
sub
cmp
adc
scas
movs
mov
frstor
cdq
shl
lahf
mov
jae
sbb
ret
or
ret
loope
imul
dec
das
xlat
fsubr
(bad)
jae
movs
mov
xor
nop
push
loope
adc
shl
pop
xchg
icebp
nop
sbb
sbb
xchg
or
mov
aas
in
xchg
hlt
sbb
dec
jmp
adc
jae
fs
sbb
pop
shl
jmp
scas
fst
xchg
sar
jle
sub
hlt
pop
das
ja
popf
pop
dec
pop
jle
inc
xlat
movs
in
or
inc
outs
inc
nop
out
ins
pop
sub
jb
ffree
or
rol
inc
mov
test
aas
int3
xchg
jns
enter
iret
in
push
cmp
jle
ret
bound
mov
popa
out
pop
lods
xor
inc
imul
in
add
call
inc
test
repz
sbb
cmp
popf
cli
out
jp
pop
inc
outs
ins
mov
cmp
popa
sub
or
xor
fcom
ret
xchg
or
lods
inc
fcmovnb
push
fnsave
push
(bad)
cmp
(bad)
push
jnp
leave
hlt
dec
sbb
jne
daa
int3
in
jge
movs
popf
add
jae
lock
stc
add
dec
mov
aaa
xchg
sub
scas
and
or
jp
inc
sbb
ins
pop
push
mov
and
enter
ja
xchg
iret
jecxz
std
ret
mov
retf
mov
into
cwde
inc
test
cwde
cwde
xor
aam
lods
xchg
mov
clc
stos
mov
ror
and
or
and
push
jns
sahf
outs
retf
frstor
out
jl
popa
inc
repnz
ret
lods
repz
sbb
mov
outs
and
pop
sub
nop
mov
lea
into
xor
jge
mov
add
mov
ins
sub
inc
pop
fst
fisub
gs
dec
ins
adc
push
mov
inc
aaa
sar
out
imul
inc
mov
adc
push
fwait
jns
dec
push
bound
ds
xlat
sti
inc
mov
xor
adc
or
(bad)
inc
inc
xor
std
sub
push
stos
sbb
or
mov
int3
pop
push
xchg
arpl
jmp
dec
ret
inc
bound
stc
shl
mov
or
div
adc
and
jo
add
dec
pop
cs
add
out
cdq
pop
jns
mov
daa
popa
iret
mov
sahf
jl
shl
je
cmps
sbb
push
fdiv
or
clc
dec
in
adc
jmp
xor
jl
jmp
pop
(bad)
pop
movs
xchg
mov
clc
cmp
jb
loopne
add
imul
inc
ret
aas
xor
sub
std
les
ffreep
sub
sbb
fisttp
xor
fdiv
dec
das
mov
cmp
std
inc
scas
sub
imul
in
idiv
mov
sbb
adc
sub
jmp
fcmovnbe
out
out
pop
cmc
cmp
mov
inc
stos
dec
fistp
inc
pop
add
fmul
(bad)
es
arpl
inc
mov
pusha
or
pop
stos
lods
aas
jnp
cld
mov
push
add
pushf
cmp
and
das
pop
or
mov
pop
sbb
rcl
pusha
popf
or
inc
pop
sbb
push
jb
cs
cli
ret
jb
inc
cmps
pop
xchg
je
(bad)
xchg
or
ret
jb
xchg
das
ds
popa
mov
add
gs
enter
add
test
lock
push
pushf
or
dec
pop
loopne
sar
std
test
sbb
xchg
retf
fucomip
(bad)
lea
outs
mov
pop
aam
retf
fiadd
in
mov
or
push
inc
shl
adc
dec
dec
mov
sar
or
call
jle
call
repz
pusha
pop
jge
inc
jb
cwde
push
xor
mov
jno
stos
data16
mov
cmp
mov
pop
call
sub
into
stos
mov
or
xlat
lods
xchg
mov
movs
inc
call
cmp
or
dec
out
pushf
xchg
int3
mov
lea
xchg
cld
pop
cmp
outs
mov
out
aaa
push
push
repnz
cdq
xor
xor
sub
clc
fisttp
or
cmps
shl
push
or
add
adc
psadbw
cdq
out
clc
adc
int
mov
pushf
adc
push
cmps
iret
push
(bad)
pop
(bad)
and
jl
or
or
ins
into
mov
push
or
push
pop
xchg
xchg
jmp
mov
add
and
xchg
shl
pop
test
ss
or
jne
shl
cmps
and
pop
mov
out
jne
repnz
jnp
and
push
aad
push
xchg
sahf
push
mov
mov
fist
scas
jns
rcr
jmp
sub
dec
jecxz
adc
ret
mov
sbb
or
push
dec
mov
inc
test
push
pushf
popa
adc
ins
cmc
popf
sub
imul
dec
xchg
xchg
imul
push
jns
movs
push
in
xchg
dec
add
push
lods
retf
out
popf
or
xor
fidiv
out
shr
(bad)
imul
or
rol
xchg
retf
pop
aam
ret
fcomp
popf
or
mov
sub
pop
test
mov
loop
(bad)
out
fist
cmps
mov
push
imul
test
mov
jecxz
dec
sub
aas
jb
adc
add
sub
es
jecxz
neg
jp
test
pop
lods
leave
rcr
mov
push
add
pop
(bad)
outs
or
jl
es
imul
and
cmps
push
pusha
xor
adc
mov
out
inc
cmps
or
xor
out
mov
inc
cmp
jno
and
lods
or
mov
fist
sbb
mov
push
int
es
cmps
call
pusha
xor
mov
enter
loop
or
sbb
sbb
pushf
in
jle
and
sub
jo
addr16
dec
loope
inc
loope
pop
loop
jge
movs
movs
jle
and
or
jnp
fwait
pop
test
adc
pop
cmp
xchg
push
lock
dec
add
aad
test
or
mov
ds
je
in
sbb
dec
scas
repnz
loopne
ss
loop
inc
(bad)
mov
(bad)
adc
push
movs
lahf
clc
in
cld
mov
(bad)
leave
out
dec
xchg
iret
mov
retf
not
sbb
sub
xlat
dec
bound
int3
leave
(bad)
fwait
gs
cmp
or
retf
(bad)
in
and
xchg
stc
inc
ror
(bad)
int3
jnp
mov
retf
dec
mov
outs
mov
jl
mov
jmp
cmp
inc
outs
pop
pushf
stc
pop
mov
aas
xchg
in
lahf
cmps
movlps
adc
add
sti
das
dec
test
bound
mov
(bad)
jecxz
(bad)
ins
mov
iret
sbb
inc
stc
push
gs
ret
jl
inc
cmps
sub
mov
fsubp
pushf
inc
add
aad
dec
push
cmp
xlat
cmps
and
xchg
mov
movs
sar
and
mov
adc
in
fdivr
test
xchg
mov
push
cld
mov
shld
je
setge
cmp
lods
fwait
jmp
(bad)
call
push
repz
xor
mov
icebp
sbb
hlt
jbe
dec
outs
pop
call
icebp
inc
lock
add
sub
in
dec
in
inc
cmps
pop
shr
addr16
dec
das
adc
stc
call
mov
xchg
fild
out
out
iret
pop
or
ror
inc
mov
ja
fcomp
(bad)
xchg
in
cld
imul
(bad)
loopne
sbb
pop
push
adc
mov
pop
adc
call
fwait
push
xor
push
and
aam
mov
dec
xchg
(bad)
(bad)
xor
stos
out
fidivr
imul
fadd
xor
out
jno
inc
stos
movs
test
std
cmp
add
lods
je
je
call
mov
mov
outs
and
sbb
and
fcomp
int3
pop
out
in
dec
test
imul
push
cwde
cmp
or
xchg
(bad)
cmp
cmp
fld
push
cwde
rcl
inc
imul
add
sbb
xchg
dec
mov
add
ret
lea
fnstsw
push
inc
mov
outs
inc
scas
xor
mov
mov
sub
xor
push
pop
push
nop
leave
cmc
lahf
add
cs
jmp
int
dec
fs
pop
sbb
les
adc
xlat
fild
aas
dec
out
or
adc
cmp
and
jmp
enter
in
cmp
int3
adc
push
jbe
ds
fcmovb
ds
cmp
adc
push
jo
jnp
jae
ja
imul
push
cmp
lds
inc
or
sub
clc
mov
addr16
ret
sbb
mov
inc
adc
xor
dec
add
inc
mov
ins
lock
das
rol
mov
ins
gs
jae
in
enter
push
bound
imul
loopne
and
je
fxam
push
jg
xchg
les
mov
mov
jbe
push
sbb
push
cwde
cli
xor
pop
test
popa
dec
cld
or
mov
les
aas
lods
push
mov
sbb
fidiv
push
mov
xor
sahf
ficom
xchg
repnz
(bad)
aam
pop
ds
lods
mov
xchg
ficomp
loope
pop
out
(bad)
xchg
cmp
inc
(bad)
lock
cld
std
jo
mov
xor
mov
cmp
and
cmp
xchg
xchg
test
mov
cmp
das
(bad)
or
ins
popa
add
(bad)
bound
xor
add
mov
push
xor
adc
mov
jmp
cwde
test
mov
fisub
and
pop
jnp
mov
mov
inc
sbb
pop
outs
ficomp
xor
ret
xchg
xchg
sbb
sbb
mov
jb
push
fwait
xchg
jp
call
ins
mov
cmp
push
inc
into
cwde
jae
lahf
dec
dec
fild
inc
jecxz
dec
sub
mov
mov
inc
add
imul
inc
inc
dec
bound
cmc
sbb
mov
cmps
fdivr
fidiv
popf
mov
fsubr
dec
(bad)
xchg
inc
sub
sbb
cmp
dec
adc
call
mov
test
enter
cwde
mov
bound
dec
sahf
adc
push
jnp
pop
mov
cmp
xchg
pop
(bad)
jno
mov
fs
imul
mov
cld
cld
cmp
fisub
iret
rcl
lods
ret
cmc
pop
mov
and
test
mov
gs
push
or
jmp
push
sbb
fnstsw
mov
lock
sbb
into
inc
push
cmp
cmps
es
mov
dec
inc
shr
xchg
jne
xchg
in
ins
xchg
sub
jmp
enter
cmc
inc
cmp
punpcklbw
pop
cwde
sbb
popf
aas
jo
lock
not
sub
or
gs
outs
repz
adc
scas
mov
mov
mov
loopne
sbb
lods
and
fdivr
cdq
dec
dec
mov
dec
mov
movs
push
sbb
mov
ins
adc
je
push
cmc
es
pop
mov
cmp
pop
cmp
cmps
cmp
and
mov
jle
mov
dec
data16
scas
aad
xor
pusha
(bad)
loopne
sbb
and
pop
or
xchg
pop
loopne
add
clc
(bad)
mov
in
mov
adc
jb
or
ins
add
xchg
xchg
sahf
arpl
loop
inc
inc
push
mov
adc
(bad)
and
xchg
mov
dec
scas
push
imul
sub
jle
xchg
pop
add
sbb
ss
sahf
pop
add
inc
pop
test
daa
pop
jno
pop
outs
lods
data16
add
jp
fist
movs
(bad)
fsubr
push
retf
and
pop
aaa
xor
or
ror
dec
jg
dec
add
and
ins
mov
dec
shl
cmp
scas
adc
mov
rcl
cdq
jno
(bad)
xlat
inc
xchg
test
sub
dec
dec
mov
in
repz
test
sbb
pop
lods
pop
std
call
inc
dec
xchg
repz
gs
inc
into
das
mov
out
jecxz
les
add
inc
xchg
popf
(bad)
mov
clc
nop
push
cwde
test
push
adc
lods
mov
inc
lods
movs
xor
aad
leave
lods
and
push
les
fwait
movs
in
(bad)
stc
dec
mov
push
inc
or
rcr
(bad)
hlt
sbb
aam
cmps
sti
ins
lock
call
sbb
inc
fisub
movs
mov
dec
push
sub
xchg
or
add
or
leave
and
xchg
sub
cmps
pop
icebp
add
cmp
outs
aaa
jp
or
mov
cld
dec
inc
pop
mov
dec
jno
and
vmwrite
push
mov
add
adc
bound
sti
mov
inc
cmps
rcr
and
fisttp
(bad)
data16
shl
fisttp
mov
xchg
das
das
stos
adc
fidiv
dec
or
icebp
in
addr16
cmp
vucomiss
js
and
pop
add
adc
or
sub
xlat
cmps
leave
mov
dec
loope
fs
out
adc
popf
push
aam
inc
pop
and
imul
hlt
or
push
ins
jg
test
and
pushf
mov
pop
fstp
addr16
inc
sub
int
les
xor
sub
pop
leave
push
jns
jno
sub
ja
cmps
into
xor
inc
cmps
jl
inc
inc
addr16
push
pop
(bad)
jns
or
add
gs
xor
lea
or
popf
xor
lds
repnz
jmp
aam
dec
out
adc
adc
mov
sub
sub
mov
(bad)
pop
inc
inc
mov
js
pop
movs
and
dec
popf
cmp
cdq
sub
xor
xor
push
cmp
cdq
sub
push
ins
mov
jno
dec
cmp
ret
sub
inc
mov
push
adc
dec
test
in
shl
cdq
or
(bad)
dec
rcl
xor
call
jo
inc
(bad)
(bad)
sub
xlat
cmps
mov
mov
add
inc
pop
cmp
cmp
movs
sbb
gs
cmp
mov
cwde
push
dec
sahf
lods
ror
fxch
fidivr
sbb
jp
int
push
adc
cmp
adc
jo
mov
cmp
dec
bound
push
sub
xchg
js
or
int
jno
(bad)
repz
xor
dec
fmul
repnz
jge
pop
xchg
stos
inc
ja
mov
(bad)
and
cs
pop
(bad)
mov
push
pop
or
jg
stos
sahf
pop
cwde
repnz
mov
sub
std
pop
js
push
jno
mov
cli
js
aaa
loopne
or
mov
xor
xor
jmp
dec
and
not
lahf
jns
lds
adc
cmpxchg
mov
cs
stc
mov
or
pop
or
ficomp
add
pop
sub
xor
cmps
jne
ficom
in
jecxz
inc
dec
push
test
pop
test
outs
mov
movs
push
ret
out
push
sar
cmp
cmp
sbb
mov
movs
sbb
ss
cmc
dec
jne
nop
cmp
mov
loopne
mov
jmp
loope
jge
mov
adc
ja
test
adc
js
or
clc
mov
shl
es
sub
dec
xor
dec
sbb
dec
daa
fucomip
xchg
pop
div
xlat
pop
push
cmp
sub
ds
fucomi
ja
add
jns
xchg
or
pop
ficom
je
jns
mov
adc
and
xchg
xchg
push
inc
loop
sar
cmp
push
sti
iret
sub
inc
imul
xor
data16
and
xchg
mov
mov
push
enter
dec
das
push
in
jo
dec
div
loopne
loopne
jns
add
push
xchg
test
push
ss
leave
out
pop
xchg
popf
adc
cmp
ja
leave
jb
out
(bad)
fstp
outs
sub
ds
cmp
xchg
mov
iret
lds
ins
in
mov
loopne
inc
push
je
sub
mov
(bad)
push
add
xor
fs
mov
pushf
xchg
xchg
dec
pop
ins
movs
aaa
adc
loope
inc
sahf
mov
cmps
call
int3
js
stos
retf
call
cmp
fsubrp
adc
dec
push
and
cli
dec
or
add
call
leave
popf
sub
pop
(bad)
mov
push
cvtps2pd
pop
sbb
sub
jmp
sbb
adc
sbb
pop
mov
int3
out
push
or
enter
popf
adc
int
push
adc
cmp
adc
and
fdiv
popa
inc
clc
bound
xchg
shr
sbb
push
jp
mov
(bad)
shr
jp
xchg
jbe
sahf
dec
nop
popf
movs
pop
and
pop
jno
movs
(bad)
mov
fdivr
das
or
pop
movs
loope
int3
retf
inc
add
push
jno
in
(bad)
cmc
mov
test
stc
shl
adc
xor
or
sti
inc
lock
lea
inc
and
es
fs
scas
popf
adc
ret
addr16
adc
mov
mov
hlt
pop
scas
xchg
sbb
rcr
js
jg
jns
fisubr
pop
cmp
ins
xchg
jns
push
push
sbb
push
(bad)
cwde
movs
jb
ins
dec
test
xchg
jle
retf
cmp
scas
mul
stos
dec
or
popa
ja
scas
inc
test
shl
icebp
jl
mov
add
xor
xor
push
push
mov
mov
pusha
mov
icebp
push
mov
pop
and
out
cmp
cwde
outs
(bad)
mov
shl
leave
and
jo
jae
add
mov
jg
mov
pop
xchg
fisubr
sub
cdq
and
xchg
cmp
pop
data16
retf
repnz
retf
lock
(bad)
(bad)
adc
jg
(bad)
or
push
(bad)
and
jnp
std
ins
lods
and
rcl
pop
int3
and
or
adc
xor
mov
outs
shr
push
jmp
arpl
fcomp
aas
inc
or
ret
idiv
into
or
mov
mov
icebp
jae
pop
adc
fstp
enter
pop
jno
lea
adc
sahf
jmp
retf
xchg
adc
pop
addr16
push
or
int3
scas
icebp
mov
jle
push
jmp
test
inc
nop
or
xchg
mov
in
dec
push
and
and
push
jle
imul
xchg
aas
xchg
pop
ins
mov
xor
aam
imul
push
fcmovnb
rol
bound
mov
xchg
and
sub
int3
push
daa
fiadd
popa
push
xchg
daa
out
xchg
in
push
pusha
mov
rol
sar
inc
mov
inc
and
and
xchg
push
xchg
push
hlt
xchg
(bad)
pop
inc
mov
aaa
and
dec
into
pushf
lahf
fadd
data16
xchg
cmp
pop
ss
(bad)
(bad)
cmp
and
adc
mov
xchg
mov
add
ds
ja
or
outs
or
mov
into
mov
xor
popf
pop
retf
xor
popf
adc
and
mov
inc
or
push
pop
mov
out
hlt
push
repnz
push
ins
les
fwait
jmp
jg
call
inc
xor
cmc
ror
dec
fs
push
jmp
(bad)
ficom
scas
fdivr
addr16
je
push
mov
stc
mov
fld
lea
jbe
cdq
xchg
mov
and
imul
pop
test
syscall
arpl
mov
(bad)
mov
outs
shl
dec
mov
outs
cmc
shr
inc
xchg
and
sub
outs
iret
xor
(bad)
je
nop
lock
push
int
jae
call
pop
push
out
sub
pop
push
lock
pop
rol
and
loope
retf
lock
and
int
int
lahf
add
mov
cmp
ret
dec
mov
mov
xchg
(bad)
cmp
xor
fs
and
cmp
mov
dec
fcmovbe
or
pop
(bad)
jmp
sub
dec
les
and
outs
cdq
mov
stos
sub
inc
clc
aam
fnsave
or
mov
mov
in
stos
hlt
push
outs
sbb
adc
jmp
dec
(bad)
ret
out
les
(bad)
imul
mul
xchg
mov
and
and
cmp
loope
xchg
and
and
push
repz
mov
outs
jmp
jns
cmc
movs
and
js
ficomp
mov
fild
call
mov
mov
sbb
repnz
lods
fnstenv
mov
sbb
sub
xlat
sub
mov
lahf
mov
(bad)
jmp
(bad)
pop
mov
inc
in
add
sub
add
(bad)
ret
das
mov
fbstp
add
fwait
or
jo
stos
shl
outs
add
pop
adc
pop
stos
jb
pop
sbb
cdq
and
sbb
popa
or
jbe
xor
lock
sbb
push
mov
mov
rol
cmp
retf
push
mov
enter
movs
and
xlat
retf
nop
sbb
popa
lods
test
mov
cdq
cmp
sbb
mov
and
xchg
stc
pop
leave
test
lock
pop
adc
aaa
ja
shl
loop
inc
add
mov
std
loope
or
mov
in
cld
scas
xor
sahf
xor
pop
dec
dec
pop
cmp
xchg
fcom
in
mov
inc
dec
ins
push
inc
xor
adc
outs
mov
je
shr
ins
bound
retf
mov
sub
sub
sbb
xor
leave
iret
push
aad
lods
xchg
(bad)
rcl
(bad)
xchg
lahf
in
(bad)
cdq
cmp
into
jo
ret
repz
and
mov
retf
mov
pop
push
aas
jae
xchg
add
fs
dec
jge
fild
jle
mov
adc
and
pop
add
push
mov
sub
cmp
lock
rcr
xlat
cmp
rcl
inc
xchg
ds
jle
adc
push
movs
sti
inc
mov
arpl
dec
adc
jge
int
mov
or
fnstsw
jmp
ds
dec
or
add
sbb
mov
cmp
enter
in
imul
mov
call
cwde
imul
fsubr
mov
test
inc
jp
add
mov
sbb
(bad)
sbb
and
jmpw
lahf
pop
xchg
xor
iret
adc
xchg
sub
hlt
push
mov
lods
enter
pop
hlt
pushf
(bad)
ins
lock
push
loope
test
movs
adc
inc
add
mov
xor
mov
xor
mov
fwait
jge
dec
in
shl
gs
and
add
sbb
into
mov
mov
sbb
out
mov
stc
lock
cmp
idiv
and
imul
ret
retf
cmp
xchg
sub
and
nop
xchg
push
pop
cmc
dec
data16
movs
out
mov
adc
jo
cld
test
cmp
fimul
stos
loop
push
int3
dec
ret
cmc
int3
call
nop
lea
add
mov
or
and
les
mov
imul
mov
inc
sub
and
xchg
in
push
mov
adc
stc
neg
jg
or
pop
ins
in
fbld
xor
fldcw
pop
movs
or
dec
inc
dec
mov
dec
xchg
push
xor
add
push
stc
pusha
mov
mov
dec
enter
fsub
enter
xrelease
push
mov
mov
sbb
xchg
loope
adc
cwde
(bad)
cmp
mov
(bad)
xchg
ret
aaa
in
(bad)
je
cdq
jo
inc
mov
cmc
(bad)
(bad)
and
xor
cmp
(bad)
aas
(bad)
movs
(bad)
sahf
daa
pusha
and
mov
pop
mov
and
(bad)
popf
int3
scas
sti
xchg
div
push
pop
adc
xchg
outs
in
add
ja
cs
inc
mov
add
leave
lahf
es
cmps
jne
pop
push
mov
mov
cmps
xchg
jne
retf
and
ss
ficomp
clc
and
dec
ins
outs
jno
mov
into
jnp
push
sahf
das
xor
dec
or
cld
xor
fmul
int3
lds
ret
mov
das
fdiv
in
lahf
je
sub
push
xchg
outs
mov
push
call
inc
(bad)
xchg
arpl
push
test
jg
adc
dec
lods
sbb
jb
aam
cdq
nop
mov
ss
push
(bad)
sub
and
inc
sub
in
dec
push
jb
(bad)
cmps
ds
aam
or
movs
pop
imul
ja
les
xlat
jno
mov
or
jnp
shr
pop
pusha
ja
add
pop
mov
or
dec
adc
mov
xor
jg
(bad)
mov
pushf
aad
adc
inc
movs
retf
xlat
mov
push
stos
aaa
out
vfrczsd
dec
imul
repnz
ds
test
repnz
mov
rcr
xchg
daa
in
or
(bad)
cld
sub
sbb
mov
adc
bound
ss
and
ja
cmp
dec
jmp
or
xor
(bad)
movs
mov
cmps
in
add
cld
or
pop
(bad)
in
lods
daa
fisttp
pop
test
(bad)
jb
jmp
xor
loopne
xor
out
mov
cmp
push
fsub
les
dec
mov
mov
cmp
in
jmp
cmps
stos
clc
jp
ja
mov
xchg
xchg
ins
mov
cmp
jne
outs
mov
test
mov
lahf
and
push
xchg
aam
test
pop
inc
in
mov
cwde
fild
ficomp
test
aas
stos
inc
mov
dec
loop
movs
inc
sbb
je
jg
nop
xor
das
les
pop
jg
mov
mov
xlat
sti
clc
xchg
out
mov
push
(bad)
lods
fsub
faddp
cld
jae
imul
rcl
dec
adc
ins
or
stos
jns
mov
push
shr
enter
xor
dec
mov
jl
mov
cmps
clc
sbb
sub
sub
add
mov
aaa
shr
mov
push
aaa
adc
lahf
mov
lahf
es
cmp
sbb
jle
add
in
and
xchg
push
les
fst
cld
mov
stc
jp
pop
push
std
lds
jmp
mov
xor
ins
sub
loop
pop
push
mov
fsub
arpl
int3
fs
xor
retf
pop
iret
or
scas
jmp
mov
loop
adc
mov
or
ss
mov
mov
mov
lods
xor
xchg
rcr
or
sbb
jmp
inc
neg
mov
das
jecxz
jnp
push
mov
cmc
xor
pop
addr16
stc
shl
mov
jmp
loope
mov
jle
cmps
mov
test
sub
adc
push
ds
enter
div
cmp
inc
add
fisub
xor
add
popf
sbb
pop
cmp
mov
imul
aaa
cdq
sbb
inc
retf
add
xchg
test
lods
mov
xor
rcl
in
aas
adc
iret
xchg
fisubr
in
mov
fstp
jmp
pop
int
cld
push
and
and
push
mov
adc
pop
in
retf
mov
std
iret
rcr
mov
add
movs
pop
or
neg
jae
cmp
push
add
push
mov
or
inc
fsub
aam
mov
ds
aaa
xchg
sub
dec
repz
test
pop
(bad)
outs
movs
sar
out
and
out
scas
adc
or
cmp
or
mov
in
js
das
pop
ret
or
psubsw
xchg
stc
xchg
mov
pop
inc
scas
adc
sar
push
xchg
icebp
test
jo
jecxz
loopne
xlat
mov
push
fcom
lods
mov
and
push
test
push
gs
call
std
jb
xchg
cmp
out
mov
je
and
add
mov
sahf
push
movs
cmp
push
iret
fs
and
imul
js
dec
xchg
ja
sub
sub
test
call
test
aaa
xchg
fdivr
into
and
mov
retf
aas
pause
fld
adc
push
mov
ins
cdq
jns
pop
adc
jp
mov
pop
in
rcl
push
mov
cld
dec
dec
push
dec
enter
jmp
js
jecxz
push
sub
push
sub
rcl
(bad)
das
jmp
jge
pusha
dec
ret
sub
mov
je
loopne
pop
sbb
int
push
mov
push
js
std
mov
push
cmp
sbb
fcom
xor
aad
adc
mov
sub
xor
imul
aas
pop
jns
ja
inc
and
call
rcl
dec
loopne
imul
mov
in
sub
pop
and
add
mov
aad
add
lahf
jmp
clc
sbb
sahf
iret
add
lock
jno
clc
(bad)
out
lods
push
cld
call
mov
mov
inc
(bad)
dec
sti
pop
xchg
mov
xor
inc
in
push
adc
xor
mov
(bad)
jge
fnstsw
jge
jl
inc
lock
(bad)
ins
dec
mov
jne
mov
pusha
dec
push
push
cmc
mov
or
and
(bad)
aad
gs
mov
and
add
inc
call
inc
fist
add
fistp
repz
out
fadd
(bad)
test
sub
inc
jno
push
jae
cld
jg
pop
adc
mov
je
mov
sub
ds
movs
inc
add
jecxz
fdivr
scas
aam
hlt
cmp
scas
pop
lahf
fild
(bad)
push
ins
or
or
cmc
cs
pushf
cmps
push
mov
lods
mov
add
jecxz
jae
and
outs
push
sbb
jmp
push
das
into
xchg
inc
adc
mov
fwait
popf
out
mov
push
cmc
cwde
ins
mov
add
mov
hlt
cmp
jge
pop
into
addr16
fldcw
rol
jmp
inc
lock
call
(bad)
sar
or
lods
cld
inc
xchg
lds
mov
xor
emms
xor
clc
out
lea
repnz
pop
hlt
xchg
scas
push
cmc
(bad)
jmp
adc
pop
cwde
inc
jne
add
adc
cli
aam
les
mov
push
sub
out
fld
push
lock
stc
fs
mov
cmps
dec
sub
push
mov
sub
pop
jmp
(bad)
repnz
call
xor
das
or
in
daa
fwait
mov
or
cld
add
fdivr
and
leave
fld
fld
(bad)
icebp
fisttp
mov
ja
mov
idiv
sbb
out
mov
mov
adc
popa
stos
ja
pop
mov
outs
leave
dec
dec
push
pop
adc
mov
(bad)
sub
test
ret
jmp
inc
jae
inc
or
xor
jne
cwde
xchg
test
add
mov
mov
stos
pop
adc
sti
sub
push
sub
sahf
xchg
dec
jmp
adc
imul
shl
ja
ins
(bad)
mov
aam
pop
out
adc
or
ss
daa
add
push
add
in
add
out
mov
ret
fisubr
mov
xchg
push
cli
rol
test
mov
adc
fbstp
dec
out
cmp
pop
sub
mov
xchg
out
sahf
jle
xchg
mov
retf
mov
outs
outs
mov
mov
sbb
sub
aaa
pop
xchg
sar
pop
dec
aam
jne
sbb
scas
out
add
dec
mov
out
push
loope
call
movs
sub
lea
cmp
dec
jno
loop
pop
mov
popf
sahf
test
pop
cdq
fisubr
in
push
jmp
jmp
cmps
add
xchg
aam
and
lahf
stos
xchg
jle
rcr
xor
inc
aam
sbb
pop
add
aam
mov
mov
cmp
cmp
pop
aad
xchg
xchg
pop
jae
test
out
out
jne
pop
nop
into
call
out
push
or
sub
pop
imul
loopne
fcom
cli
imul
mov
mov
into
jg
std
out
div
(bad)
imul
jbe
daa
push
cli
ret
sbb
cmps
xchg
mov
shr
movs
dec
inc
pop
pop
mov
mov
mov
aaa
mov
add
and
mov
mov
out
push
stc
popf
leave
xchg
ret
(bad)
mov
inc
xor
imul
inc
das
jns
pop
fdiv
ss
mov
std
aad
pop
dec
pop
or
xor
cmp
popf
jae
cs
out
gs
xchg
cmp
rcl
jb
jg
adc
(bad)
loop
jbe
arpl
stc
mov
call
movs
movs
mov
mov
xor
inc
mov
mov
cld
pop
push
and
jp
cmp
jbe
sub
push
imul
pushf
mov
cmp
dec
out
shl
sbb
loope
shr
out
push
pop
ret
or
pop
iret
scas
das
sbb
(bad)
ror
call
inc
adc
sbb
mov
push
or
out
ret
gs
imul
adc
mov
jnp
test
test
outs
call
or
inc
pusha
xchg
(bad)
or
jne
mov
fcmovnbe
(bad)
lods
hlt
fdivr
push
jo
(bad)
rcl
sahf
mov
jb
iretw
push
rol
(bad)
xor
jae
push
fldcw
fsubr
icebp
out
push
fist
sbb
jge
mov
fwait
adc
loop
pop
rcr
inc
sub
xchg
pop
sub
ret
rol
mov
push
xchg
pusha
fisttp
call
clc
int
lock
pop
pop
xor
in
cld
jle
jg
xchg
sub
pop
in
pop
add
test
jo
jmp
call
fild
stos
stos
or
add
push
rol
clc
sub
in
cmps
cld
adc
lahf
mov
push
xor
or
pop
mov
add
or
sbb
pop
out
mov
jns
jmp
ret
sub
sahf
call
add
adc
pop
cmp
std
(bad)
jbe
ss
inc
jl
enter
inc
pop
cs
and
loopne
nop
push
hlt
and
sub
cmp
cdq
in
test
or
cmp
div
fnsave
adc
or
cmp
pop
in
sbb
cmp
and
jecxz
inc
ror
sbb
test
dec
rol
or
inc
(bad)
cmp
mov
neg
xor
mov
add
jg
mov
cs
pop
xlat
adc
repz
scas
outs
push
pop
fstp
lods
popa
in
je
sub
xchg
lea
out
inc
xchg
in
repnz
std
jno
call
es
pop
scas
jmp
jns
lock
mov
add
cmc
push
jno
sub
mov
inc
(bad)
mov
push
or
or
test
push
add
add
sub
js
adc
cdq
sub
(bad)
jle
add
std
std
jmp
fstp
push
inc
stos
mov
jnp
fnstenv
arpl
shl
mov
dec
cmp
repz
xchg
es
xchg
push
dec
xor
xor
xchg
iret
mov
mov
(bad)
div
add
and
stos
js
imul
mov
xchg
cwde
imul
sahf
ds
jp
xchg
les
outs
jp
stc
repz
std
int
or
in
sbb
sbb
xlat
leave
(bad)
leave
fbld
clc
loopne
retf
jno
(bad)
mov
fcomp
adc
push
adc
loope
mov
or
add
cmp
xor
rcr
dec
iret
inc
inc
jp
push
loope
sbb
shl
fiadd
pop
push
dec
mov
test
sub
(bad)
and
and
retf
cmc
adc
xlat
sar
fs
pop
sub
enter
jno
jg
push
xor
in
cmps
xor
jno
xchg
imul
arpl
retf
leave
sbb
or
icebp
fcomp
std
es
jns
adc
inc
sbb
or
cdq
mov
adc
jno
imul
sbb
sbb
adc
stos
dec
mov
lahf
cmp
sar
ret
push
sbb
mov
popa
mov
pop
add
xor
pop
data16
popf
or
xchg
mov
add
push
cs
outs
push
les
mov
or
fisub
in
pop
stos
in
pop
js
mov
pop
and
inc
(bad)
in
hlt
cwde
loope
pop
sub
in
clc
adc
mov
popa
loop
rol
ins
ja
dec
jmp
adc
mov
or
div
add
sub
(bad)
cmp
iret
ins
out
jecxz
outs
loopne
daa
xor
loopne
mov
sbb
fstp
sbb
fadd
xchg
pop
fwait
nop
add
popa
jl
lea
mov
sar
call
add
or
ins
lahf
mov
(bad)
std
adc
cmp
scas
movs
adc
push
in
inc
lea
inc
or
popa
ss
lock
ins
mov
inc
pop
and
test
shl
inc
cli
push
push
sbb
sub
pop
mov
in
das
push
scas
xor
js
fidiv
mov
jnp
push
std
push
rol
sahf
jle
sbb
jae
imul
clc
inc
push
mov
pop
popf
sub
test
(bad)
sar
mov
popf
xor
popf
bound
push
aam
dec
retf
sbb
hlt
xor
nop
aad
aas
or
js
pop
pop
jbe
xadd
mov
in
or
add
popa
cmp
xchg
repnz
stos
xchg
jl
push
adc
add
pop
sti
data16
loopne
pop
mov
and
dec
ins
mov
fmul
les
fnstenv
stos
shr
test
jp
push
inc
movs
jns
test
les
mov
sbb
rcr
push
jecxz
adc
aam
mov
xor
loop
ja
sbb
or
ds
xor
push
ja
movs
inc
lds
test
cwde
cwde
fmul
mov
pop
mov
xlat
mov
test
out
cdq
fmul
adc
in
jl
sbb
dec
adc
pop
repz
(bad)
ins
push
push
scas
das
cmp
mov
ins
mov
cdq
mov
inc
and
pop
sti
mov
jecxz
sbb
or
aaa
je
inc
push
int
push
mov
bound
fstp
dec
adc
pop
and
in
popf
pop
push
add
or
adc
fdiv
jbe
and
nop
xchg
sub
cmps
cli
mov
add
test
stos
xchg
lock
call
xchg
mov
mov
lods
outs
inc
and
dec
mov
sbb
cmp
inc
ja
and
ret
(bad)
pop
imul
mov
nop
sahf
pandn
or
test
sahf
out
jnp
cmp
scas
push
dec
mov
std
push
ja
shr
mov
stos
addr16
jbe
mov
push
in
jns
inc
popf
sahf
es
int
and
add
sub
dec
cli
cs
mov
xlat
test
xchg
lock
movs
sbb
movs
adc
shr
nop
and
push
sbb
iret
pop
push
push
fist
in
adc
fcom
adc
inc
cs
or
sbb
adc
push
jp
cmp
sahf
inc
test
mov
add
sub
push
push
shl
push
ins
and
fcomp
xchg
xor
sbb
pop
lods
push
inc
in
repnz
mov
adc
out
xchg
or
mov
lods
jge
push
mov
mov
mov
iret
mov
into
call
arpl
neg
retf
inc
or
call
movs
enter
call
and
cdq
xor
sbb
mov
dec
mov
mov
mov
mov
aad
push
dec
iret
sub
sar
jno
xor
mov
push
lahf
sbb
xlat
int
out
nop
icebp
push
adc
les
push
dec
out
pop
in
pop
loopne
mov
mov
xchg
out
stc
fmul
in
jo
add
sub
cmp
ja
mov
int3
jecxz
cmp
push
pusha
cdq
cmp
mov
fcmovnb
mov
fldcw
(bad)
(bad)
mov
call
adc
lods
pop
push
ja
les
pop
retf
dec
push
imul
mov
mov
or
pusha
sub
lods
jp
push
mov
into
js
push
mov
sar
pop
fisttp
inc
pop
mov
in
jg
test
int
movs
adc
jo
inc
fs
popa
bound
in
out
(bad)
lods
and
(bad)
lea
push
xlat
clc
scas
loope
addr16
xchg
mov
pop
dec
jns
bound
aaa
loop
dec
repnz
mov
inc
lea
stos
fistp
(bad)
mov
cmp
sysexit
(bad)
cmps
test
and
pop
loope
mov
enter
cmp
push
adc
xor
mov
shl
fwait
test
(bad)
mov
rcr
dec
add
adc
cs
int
imul
movs
pop
movs
xchg
mov
lds
mov
ins
mov
sub
cmps
push
hlt
scas
arpl
call
sub
mov
inc
ins
jmp
inc
in
add
pop
call
stos
sbb
and
add
retf
loopne
mov
leave
adc
pop
enter
jp
push
xor
out
jne
sbb
dec
xlat
clc
xchg
gs
cmc
sbb
mov
enter
add
dec
inc
or
dec
xchg
cmps
nop
(bad)
ror
dec
in
in
mov
push
pop
inc
aad
dec
dec
bound
gs
(bad)
daa
pop
adc
mov
dec
jo
gs
sbb
or
outs
push
or
pushf
fcom
popa
add
cld
fmul
inc
xlat
call
retf
mov
jecxz
das
push
push
(bad)
gs
clc
and
inc
jle
mov
dec
shl
(bad)
xchg
mov
mov
(bad)
push
into
shr
jg
ret
(bad)
and
ss
or
xor
cmp
sub
fiadd
and
lahf
inc
mov
fcom
push
xchg
test
retf
hlt
(bad)
xchg
rcl
pop
mov
sbb
stos
push
das
jb
jns
xchg
mov
adc
call
xlat
push
out
nop
sbb
add
stc
sbb
adc
out
pop
or
adc
imul
sti
add
add
icebp
push
adc
ja
sub
arpl
lock
popf
cdq
repz
dec
push
fisttp
rol
and
cli
sub
adc
cmps
and
or
shl
iret
mov
or
movs
pop
xor
in
adc
adc
(bad)
fcmove
test
xor
xchg
mov
(bad)
int3
dec
adc
es
mov
xor
pop
in
mov
cdq
push
imul
js
mov
jmp
aad
dec
nop
in
inc
arpl
cmps
mov
mov
out
aam
mov
sub
test
cmc
fcmovne
or
mov
mov
int
sbb
mov
retf
test
push
leave
out
fbld
addr16
cli
mov
push
sub
xlat
xor
(bad)
and
dec
cwde
jmp
aam
mov
cdq
or
pop
add
or
sbb
test
retf
mov
stos
jno
push
ret
adc
outs
aad
dec
pusha
icebp
test
lahf
mov
sbb
sub
ror
test
sbb
mov
and
jge
mov
push
add
sub
fldcw
addr16
out
xor
aas
lea
sub
jo
iret
sbb
cmp
mov
sub
(bad)
cld
pop
outs
push
cli
inc
dec
ret
jle
dec
arpl
fiadd
cmp
xor
test
out
rcl
scas
sbb
sub
add
mov
push
rol
out
(bad)
pop
push
les
(bad)
call
out
test
les
std
mov
xchg
sub
(bad)
cmp
cld
imul
mov
pop
dec
ds
call
(bad)
sbb
xchg
(bad)
lock
xor
fimul
mov
xchg
inc
push
sub
add
jle
stos
cmc
xor
int
dec
outs
mov
cmp
cmp
bound
nop
cdq
adc
inc
shl
push
popa
out
jb
out
xchg
mov
jg
push
in
cmp
sbb
rcr
movs
and
inc
push
(bad)
test
mov
adc
push
inc
or
fistp
fild
enter
mov
sbb
inc
test
std
lock
mov
cmp
mov
sub
dec
adc
pop
xlat
jg
mov
inc
cmp
mov
fnstenv
push
adc
push
jg
xchg
dec
jae
ss
int3
and
hlt
pop
xor
cmp
dec
push
fimul
cs
sbb
jno
aad
jb
pop
xchg
and
(bad)
hlt
mov
cmovns
mov
cmp
retf
cmp
sbb
mov
pop
adc
xor
data16
and
lods
mov
mov
out
arpl
or
xor
lods
jle
or
mov
pop
and
pusha
push
imul
clc
into
sbb
stc
xchg
stos
lods
add
mov
icebp
cli
xchg
jnp
dec
into
ins
outs
pop
inc
ficom
or
pop
jae
add
jb
and
stos
cmp
inc
sub
ficomp
sub
xchg
push
sti
repz
mov
jmp
push
test
pusha
cmps
xchg
outs
lods
xor
lds
inc
in
mov
sbb
out
xchg
rcl
ficom
rcl
pop
movs
cli
mov
adc
push
sbb
cmp
das
cmps
mov
pop
xlat
inc
stos
addr16
jmp
in
or
sbb
add
or
loopne
mov
rcr
bound
test
xor
mov
xor
jecxz
mov
repnz
jmp
adc
data16
inc
retf
arpl
out
(bad)
jno
inc
imul
in
pop
cs
cs
aas
cmp
xor
ja
mov
dec
adc
icebp
ds
cmps
in
xchg
loopne
mov
into
push
aas
dec
out
add
jle
ss
sub
aam
mov
jge
add
pop
cld
ror
scas
sbb
ins
or
sahf
retf
inc
cmps
out
mov
pushf
and
cmp
cmp
jmp
cmp
add
xchg
xlat
imul
aam
mov
test
shr
dec
(bad)
mov
or
jmp
shl
stos
mov
test
or
xchg
cmp
mov
repnz
cmp
push
mov
jae
or
inc
(bad)
outs
pop
stc
clc
or
shl
lods
jne
lds
fsub
mov
mov
push
mov
xor
test
(bad)
lea
xchg
push
movs
dec
mov
cmc
es
retf
call
mov
lahf
rol
fidivr
sub
mov
xor
sbb
movs
jg
jl
xchg
lods
adc
mov
arpl
adc
push
mov
jne
xchg
rcr
and
cmp
mov
mov
cli
test
and
into
call
or
scas
or
pop
js
rcr
fnstenv
and
xchg
ins
nop
and
xchg
xchg
mov
inc
adc
int
lahf
sbb
push
inc
aad
sbb
ss
jmp
dec
js
inc
mov
ins
rcl
push
mov
shr
sbb
outs
jns
mov
mov
cwde
xor
test
loope
int3
pop
and
xchg
clc
fs
mov
jecxz
jecxz
addr16
mov
dec
gs
pop
mov
push
pushf
test
sbb
inc
clc
pusha
lds
cli
pop
sbb
in
stc
sbb
jbe
or
jle
xchg
ds
test
icebp
in
mov
loopne
popf
adc
outs
adc
ins
int
and
rcl
adc
xchg
mov
popf
lds
push
aad
or
retf
or
jae
dec
xchg
xor
in
adc
outs
mul
add
pop
mov
mov
fisttp
ja
sub
repnz
jecxz
int3
add
test
test
jge
or
adc
mov
addr16
pop
sbb
adc
mov
xchg
mov
mov
add
mov
lock
(bad)
clc
loopne
stos
idiv
xor
mov
mov
inc
push
imul
sbb
sbb
pop
gs
int3
inc
pop
inc
and
lahf
jl
cmp
push
jnp
fucomp
sub
cmps
mov
jne
jge
out
and
dec
sub
inc
fnstsw
cdq
or
nop
call
mov
and
jbe
bnd
or
jmp
popa
jo
cmps
pop
mov
mov
cdq
retw
call
pop
mov
mov
lds
nop
add
inc
pop
pop
pushf
mov
inc
fcmovnb
cmp
retf
sbb
vpcomb
scas
xchg
dec
cmp
mov
mov
add
jge
mov
pop
adc
gs
inc
and
push
mov
xchg
scas
jbe
idiv
xor
es
sbb
pop
cmps
and
mov
mov
imul
or
fs
sbb
dec
out
push
jp
sub
scas
sub
jmp
cli
push
inc
aam
pop
js
cmp
jne
lock
fcomp
mov
ss
jae
or
mov
adc
add
xchg
out
call
sub
call
jbe
jnp
push
jne
add
mov
jmp
or
imul
add
ds
hlt
mov
xor
and
aaa
pop
gs
push
dec
or
imul
pop
aad
sbb
mov
clc
out
(bad)
in
pushf
aam
xor
mov
or
jbe
push
xchg
mov
call
mov
and
jmp
jg
dec
cmp
or
movs
or
mov
dec
int
in
test
push
inc
jmp
shl
ss
bound
sbb
lahf
test
push
push
jmp
(bad)
int
sub
cmp
in
add
pop
adc
fbstp
bound
out
hlt
push
push
mov
out
cmc
or
add
mov
aad
cmp
stos
movs
inc
fwait
push
arpl
add
xchg
ins
outs
mov
xor
and
xor
mov
loop
add
inc
mov
fsub
pop
sbb
outs
daa
jnp
pop
push
shr
jmp
add
scas
inc
in
jbe
cdq
pop
loope
clc
cmp
mov
mov
(bad)
dec
mov
mov
add
test
sbb
mov
xor
mov
cli
xlat
das
xchg
out
or
outs
rcl
jb
xchg
xchg
inc
cmp
or
rol
call
lods
xor
push
sbb
cwde
push
cmp
lds
dec
loop
inc
mov
fldlg2
in
cmp
jmp
xchg
shr
(bad)
ja
xchg
cmc
and
cmp
call
push
cmp
cmp
in
out
aam
in
ja
inc
push
xor
fisttp
ret
adc
push
or
sbb
pop
fs
mov
jmp
ins
sub
mov
and
loopne
cwde
mov
dec
popf
int3
daa
add
push
jne
cmp
mov
jp
mov
hlt
adc
out
clc
in
xor
imul
leave
add
int3
add
ins
xlat
xchg
mov
sbb
arpl
repnz
push
loope
lods
xor
push
js
ds
and
call
sbb
cmp
int
add
cmp
push
adc
ds
fiadd
xchg
push
jnp
push
aam
movs
push
pop
and
sub
or
call
or
in
pop
sub
add
xor
lock
les
stos
inc
lds
pop
dec
stos
cwde
pop
push
in
data16
pushf
pop
retf
or
mov
push
dec
jne
pop
in
fdiv
cmc
fisttp
dec
and
add
popf
inc
jb
ret
popa
dec
adc
clc
dec
rcl
in
pop
es
btr
(bad)
mov
push
dec
int3
jecxz
(bad)
adc
push
jmp
out
mov
cmp
mov
and
sti
mov
inc
inc
cmp
test
jge
mov
movs
mov
sub
jmp
pusha
adc
push
or
movs
mov
std
sub
cmps
sar
jmp
(bad)
or
outs
je
mov
pop
cmp
jbe
dec
mov
movs
adc
cmp
jle
sbb
cmps
pop
xchg
mov
mov
jmp
sahf
cmp
xchg
test
pop
mov
sub
jge
pushf
scas
xchg
ins
mov
out
mov
dec
or
cmp
movs
fdivr
push
mov
test
outs
jp
cmp
add
fst
ror
mov
movs
dec
cmp
jmp
dec
add
xor
ins
push
mov
cwde
rcl
xor
jmp
push
lea
jb
mov
mov
retf
sbb
sbb
test
cmp
call
and
adc
js
loope
outs
cmp
cmps
in
addr16
dec
test
push
xchg
cwde
call
sahf
fiadd
dec
aas
shl
and
enter
mov
scas
jne
pcmpeqb
pop
loop
push
jmp
xor
pop
in
dec
dec
shl
fsub
push
sub
pop
loope
jne
lods
bound
retf
jmp
in
pop
sub
add
mov
xor
sbb
xchg
fwait
popf
mov
xchg
test
mov
shl
push
jno
mov
sub
pop
pop
sbb
dec
jg
adc
fs
enter
out
inc
add
cbw
sbb
and
mov
test
push
pop
dec
in
scas
lea
inc
or
hlt
cvtdq2ps
and
xlat
das
std
ret
inc
pop
sbb
mov
ds
cmp
push
dec
jg
cmc
fisttp
jnp
popf
mov
and
sti
jge
bts
cmps
cdq
push
jecxz
nop
icebp
or
fisttp
xchg
hlt
mov
sbb
ja
into
mov
test
pop
pop
mov
mov
daa
push
mov
sub
xchg
mov
push
lea
nop
pop
jge
ins
neg
pop
sti
push
aas
mov
xor
cs
jae
cmps
mov
sbb
(bad)
sub
jp
mov
or
inc
mov
cmp
js
rcl
out
into
mov
and
aaa
test
out
mov
iret
pop
ss
test
sub
cmp
mov
pop
in
in
int3
out
pop
rol
call
test
push
out
mov
xchg
js
xchg
(bad)
jmp
xchg
scas
pop
xchg
mov
adc
adc
fistp
fs
push
mov
icebp
data16
cmps
les
jne
sbb
cmps
xor
mov
(bad)
js
rcl
ss
or
aaa
xor
sub
loope
pop
and
pop
inc
stos
nop
sub
add
outs
fsub
lods
das
(bad)
mov
les
jg
gs
sub
lds
pop
pop
mov
retf
shl
jno
jmp
mov
imul
jne
ds
or
push
cmp
dec
fiadd
fcomi
mov
xchg
pop
sub
arpl
loopne
push
call
cwde
dec
jno
add
cmc
movs
rcr
mov
nop
jne
mov
add
mov
cmc
test
loope
jae
imul
and
xchg
nop
stos
gs
aam
sub
adc
pusha
test
mov
stos
pop
sbb
ds
mov
daa
dec
sbb
int
or
test
sub
jae
shr
push
rcr
adc
mov
ret
fnsave
mov
fucomi
(bad)
fs
xlat
jne
imul
sbb
nop
pop
pop
jno
jg
rol
test
leave
mov
inc
test
push
int
loopne
sbb
cmps
pop
iret
xor
jnp
repz
dec
jbe
or
lock
mov
scas
push
xor
xchg
pop
rcr
loope
dec
sbb
mov
jmp
cmps
lea
lods
and
lds
fwait
adc
jbe
stos
rcl
jp
clc
loop
out
bound
cmp
adc
ds
cmp
push
or
out
out
cld
rcr
out
addr16
cld
mov
jmp
ret
pop
or
mov
add
sbb
mov
push
adc
test
in
xor
xlat
cmc
cli
mov
cmp
stos
movs
imul
or
mov
arpl
dec
pusha
or
xchg
push
in
cdq
mov
data16
mov
loopne
pop
sub
push
or
int3
out
pushf
not
fwait
cld
jnp
mov
stc
aad
(bad)
and
imul
arpl
pop
sub
out
sbb
inc
lahf
dec
neg
scas
inc
shr
mov
sbb
pop
xor
test
xor
xor
ret
vaddsubpd
jbe
movs
jge
movs
je
lods
fmul
stc
daa
cmp
pop
jg
pop
imul
sti
and
(bad)
push
mov
inc
xchg
cmps
out
inc
pop
xchg
xor
jmp
cmc
jnp
out
mov
pop
repz
xlat
jae
fbstp
mov
mov
mov
fiadd
sti
sub
cmp
loop
adc
mov
aas
cmc
popf
pop
inc
icebp
pop
loope
int
popa
aam
adc
inc
aas
in
jg
dec
(bad)
ins
mov
ror
jno
setbe
fwait
outs
inc
sub
adc
and
and
and
imul
pushf
jmp
cld
lahf
push
cwde
cmps
push
xchg
mov
stc
outs
jo
pop
jb
aam
inc
mov
mov
pop
dec
test
lahf
push
ror
shl
clc
movs
ja
nop
repz
(bad)
shr
jno
arpl
scas
mov
mov
push
inc
aas
loope
bound
hlt
xchg
lods
jnp
pop
imul
and
cmp
fist
(bad)
xchg
in
dec
lods
xor
cdq
outs
ja
dec
daa
xchg
sar
push
daa
mov
icebp
jne
mov
test
cmp
xor
stc
jbe
or
push
movs
jns
cmp
mov
add
xchg
jae
and
fmul
push
pop
inc
loope
outs
push
ss
test
push
xchg
hlt
sub
out
sbb
(bad)
add
pop
and
mov
sbb
hlt
aaa
mov
out
xchg
mov
fcmovnb
clc
sbb
pop
inc
fiadd
sbb
(bad)
ja
mov
lea
sub
aas
fdivr
push
inc
ins
push
mov
int3
test
xor
push
mov
jg
inc
inc
dec
xor
jne
cmp
xor
mov
imul
sub
inc
bound
call
lds
cmp
inc
cmp
mov
or
inc
xchg
ds
adc
retf
xor
in
ss
push
pop
inc
mov
ins
pop
dec
push
fidivr
mov
movs
loopne
cld
jae
repnz
dec
push
xchg
mov
retf
ds
outs
repnz
aam
retf
bound
xor
pop
(bad)
popa
mov
and
pop
call
add
push
js
adc
mov
mov
in
push
ins
sbb
ds
mov
cwde
dec
add
sahf
aam
fs
leave
xchg
enter
(bad)
pop
or
pop
(bad)
gs
jnp
cli
push
adc
leave
cmp
add
jnp
mov
cld
xchg
cmp
inc
les
not
mov
jne
mov
das
pusha
cmps
call
imul
ja
jle
shr
fucomi
jmp
scas
inc
stos
test
movs
loop
xchg
sar
inc
popa
pushf
stc
out
aad
sti
push
mov
mov
repz
add
sub
or
sbb
outs
ss
cmc
push
(bad)
stos
cs
(bad)
ins
cmp
dec
or
je
addr16
fidivr
jmp
mov
int
pop
je
ss
mov
dec
or
fwait
pop
cmp
jmp
retf
and
xchg
ds
int3
xchg
sbb
xchg
cwde
jle
mov
push
dec
or
mov
ss
iret
sub
shr
fwait
inc
pop
xchg
sub
sub
aad
dec
xchg
lock
shl
(bad)
adc
jg
(bad)
out
les
scas
es
fs
fucom
fild
mov
mov
fs
mov
cdq
mov
and
cmp
pop
arpl
adc
cmp
leave
mov
mov
(bad)
push
push
sti
sbb
sub
test
mov
mov
out
xor
mov
idiv
xor
loopne
xchg
mov
jle
loope
mov
test
es
xor
inc
xchg
xchg
sbb
mov
aas
xchg
clc
neg
or
mov
div
xchg
xchg
out
pop
xchg
or
scas
sub
adc
xor
xor
mov
sbb
inc
daa
push
nop
cmp
js
jne
jb
xchg
movs
jmp
pushf
(bad)
lock
mov
adc
xchg
pop
push
or
pop
dec
retf
cdq
cli
mov
lea
int
inc
loope
inc
or
mov
jbe
mov
or
xor
push
(bad)
shl
push
pop
dec
inc
cmc
cmp
pop
dec
aas
push
mov
lock
adc
stos
fstp
arpl
fcomp
lock
mov
test
rcl
mov
pop
xchg
das
lods
xchg
fcmovbe
inc
aaa
pop
ret
cmp
inc
or
(bad)
xchg
pop
into
(bad)
sub
pop
add
and
call
or
sbb
in
fist
xor
mov
in
ret
and
and
sar
sub
mov
fnstcw
adc
pop
int
xor
dec
hlt
mov
ja
cmps
push
adc
retf
test
dec
arpl
push
push
pop
and
(bad)
xchg
and
push
les
pop
outs
lock
push
scas
int
out
dec
repz
mov
in
jb
mul
retw
xchg
mov
pushf
jb
xlat
int
mov
push
cmp
cld
adc
rcr
(bad)
repnz
(bad)
fadd
cli
fucom
repnz
push
push
movs
push
(bad)
push
mov
dec
inc
and
ret
mov
sbb
adc
add
pusha
les
mov
out
fnsave
daa
xor
cs
pop
sub
inc
aaa
test
retf
(bad)
xchg
add
jae
call
ror
dec
mov
addr16
inc
push
in
hlt
lea
out
push
pushf
inc
fs
pusha
in
mov
or
das
call
jl
xor
cmp
and
sahf
xor
jnp
sub
and
fadd
xchg
adc
push
xor
adc
add
pop
fwait
cmps
jge
mov
mov
int
fs
sub
addr16
js
clc
pop
std
inc
pop
xchg
aaa
popf
mov
imul
push
add
fisttp
popf
sbb
sub
mov
shr
nop
ret
jb
out
or
outs
jno
fcmovb
pusha
(bad)
pop
scas
scas
mov
adc
(bad)
dec
jmp
dec
lock
daa
mov
icebp
xchg
cmc
lods
push
nop
pop
xchg
push
aas
or
(bad)
mov
push
add
dec
xor
div
jns
mov
out
and
iret
xchg
dec
xchg
mov
movs
xor
repz
lea
sbb
pop
xchg
inc
inc
jge
mov
add
jb
mov
push
push
dec
leave
arpl
push
and
shl
jmp
(bad)
hlt
je
sahf
bswap
jle
movs
sub
test
jl
xchg
in
xlat
movs
adc
in
out
mov
icebp
lods
pusha
fwait
mov
pop
in
mov
jno
aam
mov
cmc
outs
jecxz
jge
call
sahf
or
add
add
stc
mov
sbb
in
push
push
imul
pop
lock
cmp
and
sbb
int
add
hlt
mov
cmp
sub
fstp
jp
ins
nop
jo
jecxz
aam
imul
xor
mov
push
ins
push
jnp
(bad)
xchg
sti
test
xchg
xchg
and
retf
data16
sbb
fwait
mov
out
add
das
and
retf
cmp
aad
jecxz
sbb
imul
cld
ror
call
imul
mov
lods
enter
pop
mov
jbe
xor
mov
add
dec
xsave
pop
dec
addr16
ret
sub
retf
les
push
test
push
out
cmp
push
test
rcr
lahf
dec
sub
jae
fnstsw
pushf
jl
out
je
fiadd
pusha
mov
movs
ja
jns
shl
pop
(bad)
scas
sti
sbb
xor
mov
xchg
inc
addr16
shl
dec
xor
(bad)
adc
add
daa
and
and
and
inc
pop
mov
xchg
setnp
push
retf
xchg
inc
and
retf
push
fwait
or
add
addr16
hlt
retf
leave
inc
mov
mov
cmp
sar
scas
inc
mov
pusha
inc
ret
lods
imul
jns
mov
test
sub
push
fcomp
pushf
adc
sub
pop
nop
in
or
cs
pop
inc
or
hlt
inc
push
or
(bad)
cld
xchg
sbb
pop
sar
inc
lods
pusha
outs
js
cmps
or
iret
in
mov
(bad)
push
test
push
push
dec
mov
cwde
mov
or
imul
jge
fs
inc
sub
pop
shr
pushf
fnsave
int3
inc
and
int3
fld
push
mov
add
cli
and
jl
push
hlt
pop
fidivr
mov
div
rcl
imul
adc
loope
push
xor
(bad)
pusha
cmc
and
fldcw
pushf
sbb
and
dec
mov
fwait
push
adc
or
adc
out
cwde
mov
mov
add
sahf
dec
int
imul
dec
(bad)
add
xchg
les
adc
(bad)
dec
and
pop
or
cmc
dec
mov
movs
(bad)
xlat
sub
jmp
cmps
and
call
adc
scas
xchg
sbb
pop
pop
jae
jo
lock
repnz
dec
out
cs
test
fisttp
sbb
(bad)
xor
sub
scas
jmp
push
es
inc
pop
add
sub
ins
adc
sub
clc
(bad)
repz
cmc
shlx
call
cmp
cmc
sbb
daa
packsswb
push
and
jle
popa
dec
leave
cmp
fbstp
jbe
ins
dec
es
mov
push
mov
add
xchg
xchg
adc
test
fcomp
add
mov
inc
sar
cwde
inc
jmp
mov
or
(bad)
leave
pop
pusha
push
frstor
into
into
js
or
cmps
cmp
cmp
or
das
jae
addr16
je
xchg
mov
jmp
dec
xchg
(bad)
neg
mov
pop
int
xchg
add
push
pop
sub
cs
nop
ja
popa
in
inc
adc
cmp
sub
or
mov
(bad)
mov
mov
and
test
cmps
(bad)
fild
rcr
sbb
test
sbb
sahf
int
(bad)
not
in
and
push
scas
jmp
fcom
jno
and
mov
lock
in
ja
repnz
xlat
arpl
jecxz
inc
movs
shr
mov
sahf
jp
ret
pop
in
xchg
psubd
add
(bad)
add
call
idiv
add
mov
jge
dec
jb
repz
(bad)
fisttp
cmp
rcl
test
(bad)
cdq
sbb
xchg
fs
mov
or
fcomp
jae
jmp
bound
sbb
jle
pop
shr
scas
in
fsub
cld
pop
xchg
or
jle
push
out
xor
sbb
aas
mov
rol
jle
jbe
jne
jb
stc
jl
jle
test
aaa
jmp
sub
arpl
int3
and
jbe
rcr
stos
out
cmc
add
jge
addr16
mov
inc
(bad)
mov
and
stos
pop
pop
test
or
(bad)
cmps
mov
push
cmp
mov
repnz
pop
mov
push
push
stos
fisub
sub
enter
lods
dec
mov
test
push
inc
aam
sub
outs
mov
jmp
xor
pop
add
inc
icebp
xor
xchg
test
cmp
mov
sbb
lods
jmp
mov
icebp
sbb
mov
mov
mov
dec
aas
inc
pop
arpl
adc
xchg
jle
push
and
repz
(bad)
pop
jo
fcomp
icebp
push
imul
add
jbe
in
js
mov
inc
imul
or
stos
popf
imul
cmp
into
js
hlt
jb
pop
lahf
dec
xlat
and
sti
push
fbstp
jnp
mov
adc
dec
push
clc
sub
fisub
sbb
pop
xchg
loope
mov
into
dec
cmp
pop
arpl
dec
mov
mov
movs
xchg
xchg
and
ins
retf
jg
jmp
jae
xor
or
mov
dec
pop
adc
out
push
fcomp
retf
ds
adc
xchg
inc
clc
add
add
(bad)
xchg
push
push
ret
mov
mov
shl
pop
xchg
sahf
add
enter
call
push
ja
hlt
jmp
cld
xlat
jl
push
(bad)
sbb
in
xor
add
lods
xor
mov
pop
cmps
sub
add
add
mov
movs
in
push
jns
and
cwde
loopne
in
out
sub
ret
xor
retf
dec
in
adc
inc
push
outs
inc
jg
mov
fwait
sub
mov
sahf
and
pop
ins
mov
std
retf
xor
pop
jns
dec
movs
jle
fisttp
cmp
dec
popf
adc
imul
pop
ins
aam
scas
jge
adc
cmp
jne
xor
pop
out
icebp
jae
sti
xor
lea
and
fcomi
add
into
mov
jb
xchg
sub
imul
sbb
shl
add
xchg
and
data16
push
pop
xor
test
mov
in
mov
xchg
adc
fmul
mov
dec
xchg
cwde
lock
frstor
repnz
div
jecxz
mov
popf
imul
cmp
in
addr16
sahf
xlat
(bad)
sbb
sbb
dec
jns
loop
or
aas
aaa
call
hlt
and
aad
pop
jnp
mov
jmp
or
pop
mov
dec
jnp
stc
(bad)
repz
dec
fiadd
rol
ja
neg
inc
sub
cmc
cmps
pop
or
mov
pusha
xchg
dec
dec
adc
jl
xor
mov
xchg
pop
jle
mov
mov
(bad)
in
scas
bound
(bad)
and
ret
das
mov
test
cmp
mov
mov
in
mov
inc
add
dec
das
push
inc
inc
aaa
push
and
pop
nop
or
jnp
inc
mov
outs
inc
mov
pusha
xchg
sub
outs
imul
dec
xchg
xchg
leave
cmc
push
or
cs
imul
mov
inc
arpl
dec
cmp
dec
outs
retf
mov
ds
xor
xlat
repnz
jl
ins
loop
or
lock
or
xchg
jecxz
ja
ins
and
jno
mov
dec
mov
sbb
ja
sbb
imul
push
or
cmc
inc
(bad)
cld
mov
mov
jo
xor
jmp
sar
mov
cmp
pop
imul
das
in
adc
and
scas
adc
dec
xchg
sub
fcom
stos
add
mov
inc
xchg
int3
jne
into
scas
sbb
in
add
je
adc
xchg
out
adc
adc
dec
cmp
(bad)
cwde
adc
dec
xchg
lods
fadd
and
jecxz
sbb
cmp
pop
in
inc
les
shr
int3
and
nop
hlt
rol
fimul
adc
aas
movs
inc
xchg
jecxz
std
sbb
cmp
mov
and
jns
xlat
bound
or
(bad)
jp
sar
sub
sub
inc
dec
cmp
arpl
push
mov
test
pminsw
and
retf
sbb
jnp
rol
push
jl
sbb
(bad)
retf
in
mov
icebp
stos
dec
mov
pop
add
xchg
(bad)
outs
pop
lods
cmps
push
dec
pop
fucomi
mov
mov
dec
inc
xor
sub
mov
xor
stc
jb
ds
in
popf
imul
jbe
add
sub
and
adc
xor
int3
inc
sub
and
cdq
mov
enter
push
dec
or
in
push
and
test
and
fsubr
mov
inc
fnstsw
into
add
popf
addr16
in
or
imul
fs
jbe
and
mov
sti
ret
pop
aas
adc
jne
aam
adc
popa
ss
icebp
call
inc
xchg
sbb
sti
xchg
lock
mov
mov
gs
iret
ds
mov
add
sbb
(bad)
repz
dec
lds
mov
fs
sub
add
mov
dec
push
aaa
inc
pushf
inc
cmp
push
inc
cmp
dec
mov
add
mov
stos
fadd
lds
mov
dec
pusha
cli
pop
mov
adc
shl
in
dec
pop
xchg
jge
je
and
loop
push
mov
cmp
push
mov
mov
mov
ss
retf
and
ror
cmp
out
mov
int3
xlat
lods
xor
cmps
fs
inc
stos
mov
ficom
adc
cmp
sbb
xchg
xchg
xor
mov
dec
repnz
sbb
dec
inc
push
push
inc
jg
jecxz
adc
aad
mov
pop
int
test
imul
sub
(bad)
and
psrlw
fild
mov
adc
call
icebp
xchg
pushf
push
sbb
mov
leave
dec
push
xchg
out
push
stos
fwait
lods
fadd
or
sbb
aad
xchg
xchg
cmp
aaa
mov
dec
fwait
pop
out
(bad)
and
lods
out
out
sbb
fld
out
and
add
(bad)
push
sub
jg
mov
jge
sti
xor
test
mov
leave
fidiv
fbstp
jl
pushf
and
cmp
sub
mov
dec
adc
cli
and
inc
pushf
int3
xor
cmp
sti
loopne
fs
fbstp
fistp
push
add
shr
(bad)
fstp
adc
mov
sbb
pushf
mov
ins
adc
add
ja
bswap
je
repz
out
ror
mov
ja
cmp
mov
daa
xor
push
loopne
out
stos
pop
mov
mov
rcr
sub
arpl
add
xchg
inc
dec
jnp
ror
sbb
pushf
retf
adc
jbe
ror
cld
ins
jl
cmps
pop
into
mov
fisttp
pop
push
adc
jbe
shr
add
cmps
mov
inc
rcr
sub
inc
and
rol
movs
enter
repz
outs
push
dec
cli
in
inc
mov
pop
push
ds
dec
mov
nop
xchg
out
scas
xor
and
int
push
pop
lahf
adc
retf
mov
mov
xchg
icebp
mov
sub
dec
clc
add
fcom
sbb
idiv
push
test
xchg
add
shr
adc
std
test
scas
(bad)
lods
dec
aad
mov
sbb
jne
and
test
lods
ret
in
sub
mov
xor
cmc
loopne
mov
rol
loop
movs
inc
xor
mov
cmp
mov
push
int
out
dec
fld
add
and
jb
loope
inc
outs
xor
xor
outs
lods
push
ins
push
outs
lds
cld
pop
outs
mov
je
retf
mov
push
(bad)
imul
movs
out
pop
test
test
xor
sbb
mov
(bad)
dec
outs
dec
pushw
(bad)
jnp
aad
loopne
sbb
(bad)
pusha
cli
bnd
adc
xor
mov
retf
or
movs
push
push
sbb
test
fiadd
leave
and
nop
pop
hlt
(bad)
adc
xchg
jecxz
jmp
jo
dec
adc
stc
add
stos
daa
fadd
jo
lock
xchg
mov
call
ins
fwait
mov
daa
and
push
sub
adc
jae
retf
xor
mov
fbstp
outs
mov
outs
add
xchg
pop
inc
xor
cmps
lahf
jl
(bad)
or
add
sbb
push
mov
inc
mov
xchg
ficom
aam
test
or
add
in
adc
iret
out
mov
aam
xchg
pop
push
pushw
fcmovnu
not
mov
out
call
xor
push
dec
mov
xchg
xchg
inc
(bad)
inc
imul
cld
das
xlat
sub
and
rol
pop
call
leave
mov
xchg
movs
xlat
sub
pop
fnop
dec
fs
jge
out
scas
xchg
repnz
push
loop
leave
mov
hlt
push
in
pop
out
jns
js
sbb
mul
aaa
cmp
sub
mov
outs
ss
ret
mov
sub
movs
push
rcr
jmp
adc
dec
jb
xor
fdiv
popa
sub
push
push
cli
inc
loope
sub
not
push
inc
mov
ret
inc
daa
prefetchnta
aam
xor
mov
ficomp
test
add
mov
ror
cmps
loope
xchg
out
cmps
(bad)
cld
dec
adc
mov
ret
adc
add
push
cld
fwait
scas
xchg
fxch
jl
mov
sub
or
and
pop
ins
cmp
or
stos
pop
mov
in
out
and
sbb
push
movs
sub
out
inc
jne
fcomp
mov
mov
outs
adc
xchg
std
xchg
jns
xor
enter
fsubr
push
sub
outs
sbb
mov
mov
out
lods
outs
push
in
cmps
xchg
fidiv
fs
test
inc
inc
adc
cmps
ss
pop
pop
into
clc
lahf
jmp
popa
mov
jle
or
lods
dec
and
push
xor
sahf
mov
sub
xor
jne
rcr
pushf
mov
and
push
xchg
loopne
add
sub
outs
outs
lods
into
sub
xlat
cli
cdq
adc
sub
and
and
or
outs
push
test
mov
sbb
retf
and
mov
in
xchg
mov
sbb
pop
pop
in
inc
cmp
fwait
or
inc
mov
into
mov
inc
or
inc
pusha
ss
inc
mov
iret
aaa
mov
push
cmp
ins
fnstcw
sub
leave
and
aas
cmps
retf
cs
add
pop
xchg
test
or
sar
loopne
mov
inc
inc
jo
adc
cmp
test
mov
pop
popa
mov
dec
dec
jl
xchg
inc
mov
lahf
retf
popf
mov
add
loope
xor
and
jo
xchg
push
add
xchg
push
std
cmp
imul
push
test
test
push
cli
mov
sbb
pusha
and
outs
inc
xor
dec
or
cdq
scas
mov
or
push
jno
jle
and
pop
add
xor
mov
int3
jo
hlt
icebp
mov
fiadd
movs
outs
stos
mov
shl
adc
ja
dec
lds
mov
sub
sbb
int
fcom
push
or
out
push
mov
mov
lock
push
cs
dec
das
js
sub
jnp
push
pop
inc
adc
sbb
mov
sbb
ins
data16
push
es
int3
push
out
(bad)
xchg
(bad)
xor
inc
in
inc
xor
xchg
and
jecxz
and
mov
pop
cmp
arpl
pop
iret
cdq
fbstp
xchg
fisub
int
enter
cld
mov
int
and
jo
mov
or
outs
js
ret
hlt
jno
jle
sti
push
ins
popf
fs
push
iret
mov
dec
and
fisttp
retf
push
test
popa
les
add
daa
scas
mov
sbb
or
push
into
cs
cs
mov
pop
sti
xor
push
inc
dec
sub
push
(bad)
movs
sbb
cld
jnp
xor
ficomp
clc
sbb
in
sbb
or
mov
mov
lahf
lea
pop
dec
ins
je
popf
fistp
mov
sbb
xor
dec
mov
aaa
mov
lea
sbb
aad
cli
mov
test
mov
inc
sub
and
or
lock
and
stc
ficomp
enter
addr16
jns
neg
ret
and
pop
push
int
mov
leave
ret
dec
pusha
call
push
movs
mov
mov
sbb
adc
sti
inc
mov
test
pop
fcom
mov
leave
and
hlt
pop
mov
popa
sbb
mov
push
out
or
adc
push
hlt
push
ret
les
or
fild
pop
cli
mov
mov
mov
push
aam
retf
xchg
test
shl
inc
fidiv
mov
mov
push
cwde
and
jecxz
xchg
in
stos
loope
jns
sti
jae
push
mov
daa
imul
sti
dec
bound
out
add
xchg
into
ins
and
sub
jg
lods
pop
push
sub
jmp
dec
sub
adc
inc
or
stos
jo
mov
jmp
or
lock
xlat
(bad)
push
daa
mov
ja
jge
ficomp
les
sub
pop
fst
sbb
inc
xor
mov
xchg
das
stc
pop
adc
xor
pop
xchg
sbb
scas
push
cmc
imul
ja
movs
int
sub
sub
ins
add
fidivr
inc
call
sahf
mov
add
mov
lods
push
adc
dec
out
cmp
add
or
in
pop
xchg
fscale
fcmovbe
mov
icebp
ins
xor
test
pop
push
jae
aam
ins
jge
fwait
imul
and
inc
lds
xlat
sbb
fld
mov
sar
adc
pop
inc
fdiv
mov
mov
sub
xor
xor
ds
aad
aaa
aas
pop
inc
loopne
div
movs
inc
(bad)
or
jmp
adc
cmp
out
push
push
cmp
cs
pop
xchg
mov
fnstsw
push
pop
adc
hlt
inc
xchg
jl
and
mov
(bad)
rcl
adc
pop
jne
(bad)
fidivr
mov
push
jle
mov
xchg
outs
pop
lods
idiv
hlt
sbb
add
pop
dec
gs
jmp
mov
call
test
mov
addr16
fld
dec
and
cli
jb
ja
jle
mov
mov
push
sub
inc
out
pop
stos
fwait
inc
xor
mov
jbe
xlat
jb
(bad)
xor
jge
je
and
jae
inc
inc
mov
mov
mov
int3
jmp
(bad)
stc
cmp
in
cmp
xlat
aad
mov
jecxz
test
addr16
(bad)
bound
fsubr
aam
sbb
adc
mov
or
sub
sbb
mov
xchg
pop
cmps
inc
xchg
into
mov
loop
add
das
lods
shl
sub
(bad)
call
sbb
(bad)
adc
ret
sbb
(bad)
jnp
dec
and
adc
lock
and
jecxz
mov
pusha
sbb
xlat
jne
lods
mov
popf
dec
sbb
or
(bad)
inc
jp
dec
es
out
lds
pop
inc
push
inc
hlt
push
mov
mov
(bad)
lock
cmps
(bad)
dec
imul
nop
in
mov
push
imul
rcr
in
aas
shr
pop
bound
repnz
push
jmp
out
push
(bad)
hlt
rcr
clc
jo
mov
cmp
fsubr
outs
sub
cmp
out
jb
sbb
ins
push
mov
js
fld
mov
adc
iret
mov
sub
add
retf
jmp
sti
fwait
int
rcr
imul
mov
stos
cdq
popf
faddp
push
(bad)
jp
add
cmp
and
push
clc
movs
(bad)
inc
bound
push
inc
mov
pusha
jge
and
out
jmp
mov
jecxz
or
mov
mov
movs
cmp
adc
inc
mov
ret
icebp
pop
jl
sbb
es
or
aam
add
test
ficom
cmps
cli
add
(bad)
fisub
stos
shl
call
dec
cld
jnp
mov
in
adc
in
inc
jbe
pop
add
jmp
fcomi
cmps
xchg
mov
jmp
leave
jle
stos
cmp
mov
pop
sti
mov
mov
fucom
xor
xor
stc
mov
cmp
int3
fwait
jp
mov
(bad)
fsubp
sub
ins
sbb
imul
pop
js
rcr
das
pop
pop
jecxz
int
es
shl
mov
push
jl
dec
dec
(bad)
jecxz
add
cmp
fild
xchg
pop
push
je
js
shl
daa
movs
dec
lods
and
dec
(bad)
pushf
mov
mov
stos
ss
icebp
mov
sbb
sub
rep
add
imul
aas
xchg
jne
int
cmp
ror
mov
or
mov
mov
sub
add
sbb
xchg
rcl
push
or
cld
mov
(bad)
sbb
cmps
mov
out
xchg
cmp
push
(bad)
push
pushf
sub
mov
mov
fs
jne
movs
adc
fcom
les
popa
push
push
pop
outs
push
movs
cmp
pop
adc
(bad)
test
jne
mov
repz
sub
adc
sub
inc
push
add
xor
retf
out
or
sbb
mov
shr
mov
js
jo
clc
hlt
outs
xchg
pop
lds
inc
xchg
aaa
push
stos
adc
fild
fnstenv
sbb
jmp
std
cli
dec
add
clc
stos
xchg
mov
dec
hlt
out
test
fidiv
inc
call
retf
int3
pop
lds
cwde
add
outs
pusha
scas
jnp
mov
mov
jmp
xchg
jb
mov
or
mov
test
add
sbb
fnsave
jge
adc
mov
inc
sub
data16
jo
pop
jge
and
dec
or
jecxz
clc
inc
mov
stc
ja
test
retf
mov
loope
sub
mov
sub
and
and
mov
lods
dec
or
jge
test
jg
bound
div
bound
jecxz
lahf
mov
pop
hlt
stc
or
in
test
inc
enter
push
mov
aas
xchg
xchg
jl
sar
loope
jl
(bad)
je
nop
mov
dec
cmp
dec
pop
cwde
cli
iret
ficomp
pop
popa
mov
xchg
mov
adc
sub
push
dec
int3
adc
xchg
cwde
dec
pusha
mov
xchg
iret
mov
jne
loope
es
push
imul
jmp
fwait
test
fistp
repnz
retf
jns
or
stos
stos
(bad)
mov
adc
and
cwde
popf
aaa
xchg
mov
(bad)
dec
sbb
dec
mov
aad
add
out
or
out
mov
mov
scas
imul
add
jo
dec
adc
out
push
pmulhuw
cmp
movs
clc
and
(bad)
or
addr16
lahf
loop
sub
jae
mov
in
cmp
and
jle
add
sub
inc
add
mov
adc
xchg
push
push
or
add
repz
stos
pop
push
retf
mov
sbb
jno
pop
test
and
pop
aam
ret
inc
inc
push
outs
cmp
ror
arpl
or
lahf
cmp
js
rol
repnz
mov
stc
fisub
or
lahf
js
ins
movs
push
or
ficomp
mov
ins
and
stos
xlat
ja
inc
xor
movs
(bad)
mov
mov
mov
lock
xor
jle
test
adc
xor
sbb
ffreep
jae
push
pop
push
icebp
push
sub
xchg
cwde
cmp
xchg
aad
lea
ds
mov
mov
adc
test
xchg
aam
push
sbb
stos
and
or
add
dec
add
outs
fmul
out
sbb
cli
jne
xor
push
hlt
push
mov
imul
aad
xchg
lods
lds
or
dec
loope
shr
scas
pop
or
mov
test
add
add
add
inc
fild
jmp
pcmpgtd
dec
jae
sub
repz
sub
xchg
add
cli
add
inc
or
retf
mov
fimul
mov
out
cmp
push
lds
mov
out
xchg
mov
inc
xor
add
in
pop
cwde
sbb
lock
icebp
syscall
jge
mov
cmp
lods
sar
stc
inc
add
mov
mov
daa
push
ds
adc
xchg
adc
mov
ss
xor
ss
imul
stos
scas
outs
popa
pop
xlat
ja
clc
mov
nop
sbb
dec
std
aam
cmp
icebp
jno
stc
push
mov
and
sub
cmp
cdq
aaa
imul
add
mov
add
stc
aaa
jl
and
push
fistp
test
dec
fidivr
fild
das
or
sahf
mov
repnz
ror
(bad)
and
rol
rcl
stos
sbb
(bad)
jmp
cld
sub
imul
push
add
sbb
adc
or
or
dec
jecxz
mov
push
enter
test
xor
imul
mov
adc
retf
adc
in
test
pop
add
or
push
rcr
jae
cmc
mov
call
daa
(bad)
loope
dec
retf
(bad)
cmp
aam
es
xor
jl
push
cmp
retf
(bad)
fisubr
pop
popa
push
jmp
pop
ja
icebp
sub
dec
xlat
scas
xor
pop
inc
loop
shl
pop
dec
ror
fsub
dec
out
aam
hlt
(bad)
dec
mov
and
sti
jae
sar
clc
xor
jmp
add
inc
popa
aad
cmps
sbb
ds
ds
mov
cmp
imul
cmc
fadd
popf
cmps
sahf
push
test
inc
mul
xchg
aaa
ror
mov
xor
mov
out
(bad)
push
icebp
loop
jns
push
jg
inc
cmp
xor
int3
jmp
pop
jge
mov
xchg
mov
xchg
adc
sbb
lock
jp
mov
pop
push
push
sbb
pop
repnz
adc
aad
lock
icebp
mov
mov
call
jp
aaa
jle
fsubr
lahf
dec
pop
push
clc
jmp
hlt
ret
pop
out
cmp
or
sub
(bad)
mov
mov
mov
shr
mov
pop
(bad)
iret
inc
mov
fwait
jl
jb
and
fwait
pop
xor
jmp
xor
cli
sub
mov
jb
dec
jo
pushw
adc
stos
ins
push
fs
or
push
dec
add
fnstsw
ins
ds
inc
jmp
inc
aas
cwde
(bad)
push
call
push
push
pop
hlt
cmp
test
je
add
fwait
xlat
pop
stc
and
out
mov
xor
movs
bound
sbb
cmp
lds
mov
inc
lahf
xchg
daa
xor
sub
dec
pop
sub
xor
mov
cmp
mov
jbe
sbb
cs
int3
sub
mov
pop
pop
sub
add
push
lods
dec
lea
or
ja
outs
mov
mov
add
jg
push
(bad)
cmp
hlt
in
arpl
mov
add
cmps
pop
cs
sub
mov
xlat
sbb
scas
lock
mov
dec
cmp
mov
(bad)
dec
pop
adc
dec
fld
dec
(bad)
shr
add
dec
int3
dec
test
or
jmp
test
jp
xchg
push
repnz
xor
js
cmc
and
out
sti
sbb
stos
push
push
stos
test
dec
pushf
mov
xchg
ret
sbb
mov
sti
dec
mov
loop
mov
iret
cmp
icebp
add
outs
fcmove
add
lock
scas
push
sbb
rol
mov
pop
cmps
cli
adc
retf
adc
push
inc
mov
popf
fstp
arpl
xchg
fild
retf
jo
sub
out
scas
test
les
mov
cmc
call
push
sbb
psrlq
loopne
xor
int3
pushf
xchg
dec
(bad)
lea
cmp
adc
mov
push
js
mov
push
mov
adc
shr
loopne
sub
xchg
fistp
inc
cmp
rol
mov
cmps
in
pop
dec
add
inc
inc
lods
daa
or
jno
inc
dec
push
imul
mov
(bad)
and
sbb
fisub
mov
shl
(bad)
aaa
movs
add
dec
fidivr
fimul
pop
into
or
jbe
repz
shl
and
cmp
cmps
inc
stc
mov
je
movs
jae
scas
xchg
rcr
rcl
imul
jge
jae
xor
(bad)
pop
push
mov
(bad)
xchg
es
sbb
(bad)
cmc
ss
inc
push
jecxz
push
(bad)
jmp
mov
mov
push
out
and
push
push
sar
mov
cmps
jnp
fwait
xor
sub
sub
mov
push
fld
mov
pop
or
sub
test
aas
jp
lea
fs
repnz
xchg
enter
rep
push
pop
hlt
jg
pop
sbb
mov
dec
outs
pop
mov
popf
push
aas
adc
sub
test
das
lods
je
xchg
fwait
sbb
jmp
jns
int
imul
xchg
cs
shr
sub
int
gs
mov
mov
jbe
jo
dec
mov
psubq
js
lods
push
fisttp
lock
cwde
jb
sbb
(bad)
xchg
aas
iret
jnp
(bad)
inc
mov
mov
mov
pop
mov
test
adc
cmc
xor
out
push
(bad)
test
inc
lock
xchg
xchg
retf
rcr
mov
imul
ror
fxtract
fs
ins
cld
inc
arpl
push
sbb
bound
mov
mov
push
sub
call
fisubr
push
out
std
push
fwait
in
arpl
fild
cwde
not
xor
mov
mov
sbb
dec
sar
(bad)
xor
clc
jg
sbb
(bad)
mov
pop
sub
(bad)
and
jp
cwde
inc
and
push
dec
popf
jge
les
popa
rcl
movs
xchg
push
push
xchg
add
mov
mov
inc
shr
jp
rol
sub
(bad)
jnp
hlt
leave
fldenv
jb
adc
and
pop
out
dec
sahf
dec
fisubr
shl
jp
iret
xchg
pop
jb
dec
mov
mov
push
mov
popa
sbb
rcl
icebp
sbb
fs
(bad)
std
sub
out
leave
pusha
mov
out
shr
inc
sti
mov
imul
inc
sar
enter
add
int3
scas
retf
sub
ret
xchg
mov
xchg
cmp
ret
popf
add
retf
rol
jg
cmp
cmp
icebp
xchg
mov
pop
adc
sbb
mov
jnp
jge
sbb
xchg
dec
add
mov
push
call
hlt
shl
mov
sti
call
jno
popa
aas
sub
dec
pop
repnz
xchg
jg
jle
jle
sbb
outs
or
cmps
cdq
mov
adc
sbb
in
dec
movs
mov
ror
gs
xlat
shr
cli
sbb
add
add
mov
push
cs
sbb
and
cmp
cli
rcr
ret
lahf
sub
ds
enter
push
jmp
in
sub
call
sub
adc
repz
in
or
fsub
and
add
movsx
pop
push
stos
and
test
mov
xchg
test
and
test
inc
pop
cli
xchg
jmp
push
faddp
shl
push
loop
ins
mov
mov
clc
(bad)
sbb
(bad)
lods
loope
jge
lds
rol
daa
push
jo
jae
mov
jmp
sahf
arpl
xchg
xlat
in
in
in
cmp
sub
mov
mov
sahf
xchg
inc
arpl
sub
jl
cmp
and
mov
push
dec
std
mov
push
push
sub
push
xchg
shl
add
das
out
loope
or
shr
mov
std
scas
add
shl
sbb
xchg
pop
cmps
retf
out
mov
hlt
ret
std
into
xchg
lea
jne
push
xor
add
iret
cmc
push
adc
mov
test
in
pop
fcomp
daa
cmp
pop
lods
ret
clc
dec
aaa
aas
pusha
std
sbb
or
mov
adc
fcomp
sbb
push
mov
sti
inc
sahf
pop
shr
hlt
call
cmp
es
pop
fstp
mov
fcmove
daa
or
xor
xchg
jns
xlat
inc
popf
pop
jle
and
loop
mov
xor
and
lods
fldenv
jo
in
cwde
lea
(bad)
xor
and
arpl
inc
cmc
into
lock
add
mov
pop
or
sub
(bad)
jp
cmp
faddp
jnp
dec
outs
fs
cmp
push
inc
xchg
push
push
pop
adc
jmp
cmp
adc
jmp
retf
push
sub
loope
or
(bad)
ja
(bad)
jne
lahf
punpckldq
cdq
fimul
cmp
xlat
inc
leave
repnz
add
ja
popf
in
and
or
pop
jp
mov
stos
push
add
lods
mov
scas
sti
test
push
mov
sub
divps
pop
mov
iret
dec
mov
imul
push
rcl
or
pushf
(bad)
cli
and
jne
das
shr
xor
jae
test
adc
adc
cmp
push
sub
jne
inc
jmp
bound
cdq
lock
ret
fld
pop
or
rcl
repnz
ret
or
mov
movs
das
pop
sub
xlat
mov
stos
fimul
push
call
loop
ins
(bad)
call
(bad)
aad
pushf
hlt
jmp
mov
xor
push
sbb
add
lock
or
loopne
je
popa
pushf
in
test
and
loop
mov
test
mov
(bad)
out
fcomp
mov
call
outs
push
mov
loopne
jmp
cmc
xchg
xchg
jmp
push
jecxz
dec
test
or
fs
aas
test
out
enter
push
jmp
mov
mov
cdq
dec
popa
add
jo
jns
mov
(bad)
movs
lds
mov
lahf
ss
je
xor
xchg
push
loope
or
or
gs
cmps
call
or
fcomp
cmp
rcl
in
pop
sbb
imul
add
dec
dec
xchg
loop
inc
shr
pop
push
(bad)
(bad)
lock
aam
mov
dec
inc
out
ins
cwde
mov
rol
ins
xchg
cmc
ror
lods
sub
mov
(bad)
cdq
cmp
bt
ss
in
dec
nop
mov
xor
or
loope
jmp
mov
and
push
mov
pop
fcmovbe
pop
pop
ins
pop
pushf
and
push
das
mov
scas
not
inc
imul
mov
mov
retf
pop
data16
push
xchg
scas
pop
out
sbb
dec
lds
mov
jge
bound
mov
push
js
mov
rcl
hlt
dec
ins
imul
xchg
mov
outs
mov
loop
dec
les
xchg
mov
xor
int
pop
(bad)
fimul
sub
adc
push
test
(bad)
mov
adc
xchg
add
and
or
mov
add
pop
lock
inc
aas
cld
jg
sub
push
vmovaps
push
mov
xor
pushf
movs
in
out
test
inc
adc
jnp
mov
fsub
push
lahf
daa
pusha
cmp
test
mov
sbb
call
rcr
into
ins
outs
sub
add
mov
adc
retf
cmp
adc
sub
scas
cs
aam
sbb
mov
mov
push
jno
xor
xor
mov
inc
ret
sub
stos
add
xchg
into
xor
or
arpl
fcomp
pusha
push
clc
cmp
inc
shr
je
jo
(bad)
shl
in
(bad)
sbb
int
add
shl
pop
loopne
push
mov
(bad)
mov
xor
xchg
xor
cmp
fcmovbe
clc
int3
dec
scas
lock
inc
rcr
popf
push
in
cmp
stos
pop
lds
lds
fldcw
jne
imul
outs
in
std
sahf
repnz
push
int
push
or
cmp
xchg
add
mov
mov
add
push
enter
dec
sbb
lea
xlat
imul
clc
mov
cmps
pop
pop
cmp
test
sub
pop
pop
xchg
push
pop
jae
sub
and
adc
(bad)
push
adc
aam
pop
xchg
(bad)
mov
adc
cmp
js
shl
stc
les
mov
call
fld
dec
pop
mov
fisubr
stos
jecxz
pop
leave
push
cmp
add
and
stos
inc
fild
fwait
and
jae
push
cmps
movs
sub
and
dec
fst
call
xor
mov
dec
cli
rol
popa
mov
popa
adc
xor
dec
pop
mov
shl
mov
gs
aam
pop
xchg
sub
xor
das
ret
mov
cmp
xor
loop
push
aas
mov
mov
pusha
(bad)
out
or
sub
rol
ficom
fidiv
inc
push
sbb
pop
test
in
mov
pop
idiv
inc
(bad)
push
xor
adc
aam
add
popf
loope
mov
daa
push
push
dec
xor
sub
gs
mov
movs
xchg
cmp
sbb
sbb
stos
push
outs
shl
pop
jo
aad
push
adc
loopne
shl
aas
fidivr
in
in
cmps
sub
adc
cmps
jmp
inc
jecxz
and
movs
loop
inc
push
mov
mov
mov
cmp
retf
scas
not
int
rcl
fldz
int3
bound
call
jo
clc
pushf
jl
or
mov
iret
jmp
loope
outs
dec
or
xchg
jmp
cmp
sbb
mov
mov
pop
adc
pusha
lods
sub
lods
xchg
adc
or
lock
ds
call
jle
nop
(bad)
mov
xlat
jmp
aad
test
les
lds
dec
imul
dec
dec
jno
jmp
fild
fwait
loop
leave
scas
pusha
repz
mov
(bad)
and
das
call
xor
js
mov
fnstenv
inc
arpl
iret
mov
push
in
popa
add
repz
nop
xchg
xchg
dec
jl
pop
retf
fist
int3
add
pushf
loope
adc
xchg
sbb
dec
mov
shl
rcl
xor
adc
adc
and
inc
push
cmps
jo
add
pop
test
push
clc
je
sbb
add
(bad)
out
(bad)
pop
cli
mov
cld
shl
mov
clc
aaa
mov
xor
sub
out
sub
sbb
popa
gs
outs
jmp
fcomi
shl
jmp
push
jl
cmp
cmp
cmp
pop
mov
xor
xor
aam
lods
sti
out
jmp
int3
clc
pop
cmovno
popa
xor
outs
sbb
push
pop
xor
test
mov
mov
enter
push
test
fstp
in
arpl
shl
add
push
xchg
push
mov
or
mov
fisub
push
test
mov
xchg
mov
movs
jmp
fsub
pop
popw
js
adc
test
rcl
jmp
mov
mov
xchg
or
sbb
jmp
popf
scas
fldcw
jle
jecxz
scas
jnp
pop
clc
loope
fldcw
ins
fstp
or
pop
mov
sub
sar
out
cmp
(bad)
cmps
or
dec
sbb
(bad)
mov
xor
pushf
out
mov
enter
xchg
fiadd
pop
movs
add
cmp
inc
int3
inc
loopne
pop
or
xchg
mov
int3
je
jae
adc
fadd
jnp
xchg
adc
mov
fistp
enter
(bad)
mov
pop
jnp
lahf
enter
lock
lock
xor
cmc
dec
lods
call
sub
pop
nop
lods
push
jb
xchg
jecxz
xchg
jbe
js
sbb
xchg
fnstenv
or
in
sahf
cmp
fdiv
sub
aas
popf
ss
or
std
push
fnstsw
pop
cmps
jmp
pop
xor
lock
popf
adc
out
jmp
test
push
popa
push
inc
adc
or
(bad)
mov
mov
adc
repnz
ret
out
pop
out
xlat
and
inc
das
cdq
out
or
sbb
mov
aad
push
outs
mov
xlat
call
inc
gs
pop
in
adc
int3
ja
in
add
in
(bad)
out
shr
adc
(bad)
(bad)
jge
and
jne
jge
mov
je
push
cmps
mov
dec
adc
in
sub
neg
sub
and
jnp
jecxz
and
mov
mov
mov
mov
dec
push
sub
dec
adc
mov
loop
inc
mov
jne
rcr
out
mov
stos
mov
sar
enter
out
into
mov
xchg
add
pop
sahf
retf
dec
gs
pop
pop
push
pop
or
jo
mov
mov
inc
lea
pop
ss
lods
sub
je
jno
jbe
out
clc
enter
stos
sbb
cli
and
daa
push
(bad)
mov
push
mov
jp
xor
xor
ds
push
lods
ins
adc
mov
packuswb
sub
dec
mov
imul
(bad)
mov
mov
jb
les
mov
mov
leave
inc
pop
es
pop
rcl
inc
push
(bad)
push
sub
or
loope
loope
pop
inc
adc
inc
cmp
fs
add
jg
and
out
push
(bad)
push
cli
and
mov
ds
xor
sti
int
movs
fdiv
inc
and
mov
out
sbb
inc
xchg
jmp
xchg
leave
push
outs
fwait
cmp
xchg
(bad)
jne
ja
shl
retf
pop
inc
add
icebp
ins
(bad)
fwait
mov
and
push
(bad)
les
pushf
cmp
push
push
scas
inc
imul
fisttp
retf
pop
ficom
fucomp
fwait
les
mov
lock
call
inc
xlat
outs
dec
inc
mov
ins
cmps
pop
push
xchg
fldcw
clc
add
adc
out
into
dec
out
jne
sbb
repz
jb
lahf
loopne
jle
stos
mov
mov
test
cwde
test
jecxz
aad
mov
mov
mov
daa
pop
cmp
test
idiv
cmps
xchg
into
cmp
push
push
call
cli
jno
sub
adc
pop
sub
cli
cmp
imul
mov
les
test
dec
hlt
mov
mov
push
out
in
bound
sub
inc
movs
repnz
and
lds
cmp
scas
jle
jbe
pop
jmp
outs
iret
jecxz
jmp
jnp
xor
hlt
adc
frndint
pop
mov
push
mov
pop
sbb
outs
inc
test
mov
xchg
inc
and
aam
mov
xor
pop
loope
test
leave
and
sahf
xchg
push
iret
or
test
sbb
or
push
and
ins
scas
cmps
push
mov
(bad)
and
aad
and
ror
fstp
and
push
push
cmp
push
scas
sub
sbb
popf
mov
(bad)
das
pop
and
aam
push
inc
mov
mov
inc
sbb
(bad)
inc
add
pusha
(bad)
outs
fld
movs
dec
popf
xchg
ret
push
sbb
ins
or
aam
pop
pop
and
rcl
popf
adc
push
xchg
scas
(bad)
mov
daa
imul
bound
(bad)
mov
shl
in
adc
pmulhw
std
(bad)
jns
pop
sub
es
movs
pop
xchg
adc
int3
les
dec
ins
jmp
aaa
popf
pusha
in
jecxz
cmp
iret
xor
mov
inc
bound
jge
mov
out
in
movs
adc
cld
mov
mov
jmp
jle
test
out
sbb
cmps
pusha
add
xchg
jmp
in
out
dec
mov
test
push
fcomp
xor
xor
mov
ss
pop
scas
jmp
cmp
sbb
xlat
out
call
push
or
js
cwde
nop
add
and
lods
test
mov
inc
jecxz
dec
mov
out
pop
repz
int3
jecxz
jmp
ret
mov
or
lods
ins
dec
vmaxps
add
aas
cli
arpl
aaa
push
retf
int3
cmp
adc
or
or
sub
fimul
push
xchg
cmp
sub
imul
das
xchg
dec
clc
(bad)
movs
add
push
icebp
mov
mov
jnp
shr
sub
push
int
push
or
jnp
jbe
add
sub
fdivr
out
stos
or
push
push
movq
mov
sbb
add
push
or
and
and
stos
jmp
bound
mov
pusha
pop
xor
lds
fs
in
jne
stc
mov
xor
xchg
leave
call
ret
(bad)
xor
jne
hlt
push
mov
cdq
add
repz
pop
cli
js
ins
inc
jmp
push
xchg
sbb
xor
cli
jg
in
cmps
out
dec
out
lods
aad
push
or
xchg
iret
int
push
test
aam
jae
into
aam
inc
retf
push
fadd
ret
test
(bad)
sub
pop
iret
pusha
cmp
stos
xor
xchg
je
add
sbb
in
mov
or
xor
xchg
or
cli
int3
xchg
inc
fstp
clc
push
sub
pop
retf
and
les
and
cmp
xchg
xchg
dec
xchg
bound
adc
push
dec
xchg
sbb
test
ret
cwde
dec
pop
(bad)
sbb
dec
js
add
push
xchg
pop
sub
xor
test
add
sub
mov
(bad)
pusha
scas
mov
push
mov
leave
xor
(bad)
fdiv
mov
in
jmp
test
jg
pop
lock
out
mov
inc
cmp
cmp
lahf
mov
lods
loop
dec
cmc
idiv
push
cmps
fdivp
push
gs
fistp
push
gs
scas
clc
rcr
push
add
xchg
dec
adc
aas
cmp
ja
daa
ja
call
push
inc
mov
or
pop
pop
push
jecxz
(bad)
repz
rcr
add
ret
std
shl
enter
hlt
mov
add
add
in
xor
dec
push
jbe
and
mov
sbb
mov
cmps
(bad)
or
push
loop
xchg
and
imul
int3
cmp
rcl
or
mov
repnz
mov
lock
mov
div
mov
ret
cmp
cs
add
stos
cli
xor
les
push
lock
pop
adc
daa
js
mov
rcr
add
fwait
cs
icebp
lea
adc
sbb
adc
mov
fwait
pop
jge
sbb
(bad)
or
sbb
dec
mov
dec
xlat
lds
loop
stos
pop
loopne
fist
jb
mov
nop
inc
jo
mov
dec
mov
es
jl
(bad)
sahf
(bad)
pop
cli
push
mov
out
adc
inc
retf
sub
retf
aad
mov
retf
enter
push
outs
js
shl
in
nop
loop
or
cmps
adc
sbb
mov
in
mov
pop
sbb
stos
add
(bad)
jb
ret
call
in
adc
fdivr
fbstp
xchg
pop
ret
in
aam
or
pusha
xor
sub
sub
cmp
pushf
pop
jecxz
dec
aam
aam
ins
cmp
xchg
out
mov
fldenv
in
and
popf
adc
push
out
jle
fist
mov
lahf
imul
aad
mov
and
sbb
(bad)
mov
mov
mov
call
pop
outs
mov
and
lea
cmovp
imul
sub
cli
xchg
nop
jge
mov
in
cmp
ja
(bad)
jmp
add
jae
iret
ss
jb
dec
in
repz
jbe
xor
cmp
or
sbb
mov
into
or
mov
hlt
sar
ss
sbb
call
xchg
leave
(bad)
add
aad
push
aas
lea
icebp
mov
jecxz
push
lahf
mov
nop
dec
mov
pop
rcr
and
outs
xchg
addr16
mov
or
push
or
movs
bound
sub
mov
inc
cmps
jp
loopne
mov
fcomp
xor
jp
or
out
not
dec
les
pop
cmps
xor
movs
fdiv
call
mov
cmps
fst
lock
cmp
and
mov
stc
push
movs
jb
sub
loopne
adc
jne
iret
ds
add
sub
loopne
scas
lds
aaa
inc
rol
jmp
jg
(bad)
jo
int
retf
shl
xor
(bad)
or
xchg
shl
cmp
mov
dec
mov
dec
sbb
aam
and
(bad)
xor
inc
inc
pop
in
pusha
in
cmc
sbb
cmp
mov
lds
mov
test
and
movs
jns
test
push
fisubr
mov
int3
cmp
mul
adc
push
pushw
xlat
push
sbb
add
jno
jmp
mov
sub
push
(bad)
adc
mov
sbb
xchg
(bad)
loope
add
fwait
or
int
les
call
jp
call
sub
fimul
and
lds
inc
cmp
jne
xor
dec
mov
fwait
leave
mov
scas
cmp
test
fimul
aaa
fimul
addr16
(bad)
fdivr
push
imul
lock
(bad)
dec
das
adc
mov
or
out
pushf
jmp
xor
mov
iret
das
ins
sti
jno
mov
mov
fwait
jg
cli
call
rol
cmp
mov
sbb
in
iret
stc
out
pop
fiadd
cmp
out
cmp
es
adc
(bad)
xchg
mov
cmp
std
sub
popa
pop
cs
xchg
cli
add
gs
out
call
cmp
sbb
ficom
lods
hlt
cmp
inc
and
inc
pop
je
cld
fimul
xchg
cmp
nop
adc
mov
and
rcr
xchg
in
(bad)
cld
rcl
in
and
popf
mov
sar
in
mov
xor
lds
addr16
mov
mov
mov
sahf
xchg
and
xchg
push
dec
(bad)
mov
jae
fild
or
pop
jne
out
lock
adc
add
outs
cmp
dec
retf
dec
ins
or
xchg
cld
mov
adc
int
repnz
dec
xor
retf
fcomip
add
ja
stos
mov
ins
mov
gs
and
jmp
std
cmps
stc
mov
(bad)
pop
out
rol
hlt
jp
sar
call
int3
inc
mov
repnz
je
sbb
jnp
push
cmp
ffreep
je
fild
and
bound
xlat
xor
pop
pop
mov
inc
call
jnp
stc
fsub
int
adc
movs
call
les
imul
pop
cld
add
or
cli
frstor
lods
add
pusha
pop
lods
cmp
jle
adc
xor
fbstp
cld
or
clc
or
and
addr16
int
call
iret
jp
push
and
lock
xchg
mov
push
inc
int
sbb
xor
push
test
ret
inc
in
jns
pop
or
in
mov
xchg
push
dec
jmp
xor
aaa
mov
into
mov
sbb
repnz
fisubr
mov
dec
xchg
movs
test
push
push
repz
fiadd
test
retf
lahf
sbb
jp
xor
(bad)
in
ds
rol
adc
inc
bound
mov
dec
jmp
nop
fidiv
cmp
dec
adc
mov
xchg
and
mov
jne
retf
pop
or
mov
(bad)
cmp
sahf
mov
pop
dec
lea
and
cmps
cmp
call
mov
ins
add
mov
arpl
adc
jg
dec
shl
dec
dec
mov
call
cmp
out
bound
test
dec
arpl
jno
pop
lds
ror
sar
mov
and
lods
(bad)
mov
loop
ins
push
pop
pop
mov
jb
mov
repnz
mov
fidivr
rcl
sub
popf
dec
sub
das
out
mov
in
mov
ret
ror
dec
sti
scas
and
sbb
push
xor
call
add
in
push
add
shl
inc
xchg
xlat
repz
addr16
call
fnsave
cdq
std
int
std
outs
add
push
mov
adc
jmp
aam
call
std
dec
push
cmp
aaa
xchg
mov
ins
cmps
push
dec
xchg
test
out
loope
adc
mov
sbb
add
adc
cmp
mov
fst
or
(bad)
daa
pusha
jmp
jecxz
cdq
cmp
fst
xor
ins
retf
mov
xchg
sbb
hlt
adc
adc
loope
xchg
es
mov
js
ins
int3
test
clc
ins
sub
sbb
jae
cmp
sti
push
push
pop
outs
shl
adc
push
xchg
or
not
aas
mov
xchg
sbb
sub
push
(bad)
scas
or
popa
imul
loope
hlt
lock
adc
ds
and
jae
ins
or
mov
and
push
mov
retf
enter
mov
xchg
idiv
popf
lods
push
rol
mov
adc
mov
inc
xchg
movs
mov
aad
cmps
fcom
pop
stos
shr
push
and
outs
stc
(bad)
mov
popa
xor
xor
icebp
xchg
call
pop
call
mov
push
in
int
ret
test
sbb
pop
dec
ret
and
dec
mov
jmp
(bad)
pop
jp
rcl
jp
xlat
out
jmp
(bad)
shr
(bad)
sbb
lods
lahf
mov
lahf
jo
xchg
mov
and
xchg
je
sub
dec
nop
pop
mov
fwait
pop
in
mov
pop
test
arpl
addr16
daa
sbb
mov
adc
stos
dec
push
fucomi
lahf
pop
test
test
in
adc
retf
inc
jmp
jmp
les
aas
int3
loopne
jno
test
inc
push
arpl
retf
xor
xchg
pop
mov
in
inc
lock
push
mov
sbb
adc
aaa
lock
adc
mov
aaa
pop
(bad)
mov
add
test
pop
ins
shl
scas
adc
xor
in
popf
xchg
xlat
pop
loope
pop
je
scas
sbb
adc
add
xor
rol
lock
ja
sar
mov
push
pop
add
mov
sub
call
xlat
movs
pop
adc
lahf
cmps
call
enter
loopne
pop
inc
cmp
mov
(bad)
sbb
xchg
mov
adc
pop
test
adc
in
(bad)
cmps
out
pushf
jae
jmp
dec
into
(bad)
cmp
jmp
cmp
shr
xor
add
or
jmp
pop
sar
lea
sub
lahf
outs
xor
sahf
(bad)
in
push
repz
sub
pop
and
and
ror
add
dec
mov
sbb
arpl
and
jns
and
push
push
cmp
jns
mov
jl
add
sub
or
lds
adc
cli
adc
adc
fist
unpckhps
or
sub
adc
(bad)
cs
in
inc
in
push
mov
loope
xchg
fwait
clc
jecxz
call
mov
in
test
push
ret
call
and
sub
jnp
xchg
shl
pushf
jb
xor
push
xlat
ds
outs
inc
test
add
pop
pop
push
pop
inc
mov
or
rcr
push
xchg
adc
mov
in
pop
stos
es
out
scas
jb
inc
fist
(bad)
(bad)
fcom
mov
dec
xor
in
mov
inc
or
and
ret
out
dec
push
stos
mov
aam
jecxz
sbb
shr
pop
ror
call
pusha
fnstsw
xor
repz
stos
in
repnz
imul
jg
push
or
in
pop
movs
nop
mov
lods
sbb
pop
cmp
dec
outs
and
xchg
(bad)
push
adc
mov
fwait
jne
ficomp
in
add
fsubr
mov
cmps
adc
push
add
cdq
pop
iret
dec
mov
mov
test
and
dec
arpl
movs
jp
jecxz
push
int
pop
pop
imul
sbb
mov
mov
or
nop
lods
stos
xchg
add
jmp
jl
scas
add
inc
gs
push
add
dec
xor
mov
push
ins
repnz
mov
fmul
mov
test
idiv
push
push
bound
cmp
inc
ds
inc
(bad)
retf
fcom
inc
and
not
cmp
test
and
sbb
bound
fcmovnu
add
imul
and
mov
mov
das
test
ret
mov
jmp
add
inc
cmp
inc
xor
sahf
mov
ja
js
jnp
clc
jmp
fld
pusha
push
je
popf
test
test
mov
and
mov
xchg
es
add
jb
aas
jcxz
ins
sub
and
je
sub
lea
push
cdq
fcmovb
out
xchg
fidivr
dec
and
jno
enter
or
in
dec
or
aad
inc
fadd
test
mov
sbb
push
dec
ret
aas
jmp
mov
in
scas
loope
mov
jl
loopne
jmp
pop
pop
test
fimul
call
outs
leave
(bad)
fwait
mov
mov
sbb
cmp
pop
jle
test
push
ret
jno
gs
push
sub
push
or
daa
fs
xchg
daa
and
push
(bad)
stos
test
clc
in
imul
sti
jnp
fisttp
jg
sub
sbb
in
or
fstp
addr16
xchg
(bad)
rcl
pop
das
int3
pop
and
retf
std
iret
mov
adc
(bad)
fdiv
sbb
push
dec
cwde
mov
ret
sub
add
into
and
sbb
adc
dec
call
xchg
mov
les
or
lahf
fimul
lods
jge
jo
je
add
pop
xchg
sti
mov
pop
lods
repz
push
icebp
arpl
jb
xor
outs
adc
mov
nop
ficomp
movs
mov
and
pop
test
push
and
repnz
icebp
repnz
nop
cld
or
or
xor
mov
jbe
and
pop
mov
cmp
popf
call
fisub
sbb
dec
imul
xchg
inc
test
lods
mov
lock
or
loope
pop
pop
(bad)
mov
pop
call
loopne
iret
push
jo
aaa
xchg
aam
cdq
adc
pop
cmp
jmp
fild
cmp
dec
mov
rcl
and
ret
int3
outs
int3
pop
ins
div
test
pop
retf
aaa
pop
mov
in
pusha
ret
jmp
sti
dec
sar
outs
shl
stc
mov
inc
jmp
cmp
neg
xor
push
pop
pop
mov
pop
pop
and
adc
addr16
add
cwde
mov
neg
ja
fsubr
in
adc
push
sbb
ja
adc
dec
outs
or
add
test
sbb
push
mov
cmps
push
push
add
jmp
fimul
or
or
cmp
jb
cmps
hlt
mov
repz
mov
sar
xor
jo
xchg
cli
push
mov
test
mov
mov
sbb
jmp
xchg
cli
push
mov
push
jl
push
xor
rcl
cmp
sar
pop
dec
add
mov
xchg
mov
mov
mov
mov
adc
stos
repnz
dec
shl
stos
sub
sub
sub
lods
mov
int3
mov
xor
mov
and
(bad)
mul
call
xor
adc
adc
pop
fstp
push
jle
mov
add
mov
mov
cwde
sti
(bad)
or
clc
das
inc
mov
push
out
add
push
mov
fsub
rol
leave
stos
dec
sbb
cmps
aam
stos
sub
stc
pop
pop
pop
fisttp
push
int
(bad)
shl
fwait
lods
loop
xchg
test
mov
inc
cli
xchg
aas
jnp
mov
shl
or
or
or
adc
mov
retf
inc
jns
add
jge
dec
aas
xor
push
jnp
cmps
push
sub
jle
pop
cs
pop
aam
fmul
mov
xor
imul
add
xchg
sub
cwde
pop
pusha
pop
rcr
fdiv
push
mov
scas
mov
jge
dec
repz
sbb
fst
sbb
mov
pushf
dec
clc
adc
mov
dec
mov
ret
mov
pushf
(bad)
in
dec
xor
pop
mov
mov
scas
dec
fisubr
cli
imul
mov
and
xchg
test
dec
adc
cli
push
jecxz
dec
sub
movs
jnp
aad
xchg
and
sbb
call
cmp
(bad)
pop
test
jnp
test
out
xchg
jae
push
rol
mov
mov
sbb
jne
cmp
sbb
jmp
shl
popa
sti
(bad)
sub
test
xchg
ret
popf
sub
mov
lods
data16
push
and
loopne
add
jmp
adc
fs
lahf
imul
fmul
mov
(bad)
mov
cmp
xor
pop
std
and
lds
aas
push
ss
jns
ret
cld
push
sti
sub
(bad)
mov
int
or
xchg
ror
pop
jnp
fst
or
pop
and
arpl
dec
sahf
lds
aam
adc
cs
sub
andnps
clc
or
or
sahf
sub
mov
cmps
jae
mov
scas
popf
cmc
push
xchg
pop
mov
xchg
adc
push
idiv
dec
mov
hlt
or
pop
sbb
cmc
ret
jl
lods
jge
adc
xchg
stc
or
(bad)
xchg
push
fmul
bound
push
ja
dec
pop
cmp
aam
push
(bad)
ror
and
call
rcl
cmps
out
sub
not
mov
icebp
cdq
xchg
or
mov
rcr
test
or
add
fmul
xchg
dec
sub
retf
in
inc
mov
(bad)
in
mov
inc
xchg
push
jno
lahf
outs
add
adc
mov
fsub
fisttp
lock
pop
or
mov
cmp
add
sub
adc
icebp
push
js
repz
cmp
cdq
mov
fcmovne
not
(bad)
popf
outs
jno
sbb
sbb
mov
ret
ss
lods
in
stos
cmps
(bad)
fcomip
mov
push
retf
std
int
dec
loopne
jge
repz
popf
sub
inc
mov
mov
pop
scas
(bad)
adc
outs
jbe
(bad)
and
ror
jge
xlat
push
pop
sub
push
jae
mov
xchg
(bad)
ins
pop
xchg
dec
pop
test
or
sub
daa
dec
cli
dec
jno
fwait
adc
pop
sub
dec
not
mov
push
mov
cmps
inc
jmp
dec
xchg
sub
or
jne
jns
mov
cmps
int3
inc
jmp
pop
in
nop
push
and
dec
and
xchg
mov
mov
push
dec
sbb
push
add
inc
repnz
inc
fcomp
sbb
jmp
mov
sbb
scas
test
lea
mov
fadd
xor
mov
lock
and
(bad)
add
pop
pop
push
mov
js
movs
push
pop
js
(bad)
pop
dec
pop
test
cmp
sbb
cmc
sub
sub
inc
test
cwde
jns
and
movaps
xor
push
jmp
xor
xor
pop
adc
lahf
push
cld
sbb
cs
stos
imul
pushf
mov
test
pop
jo
jo
jo
rcr
xchg
jmp
jae
arpl
add
mov
push
aaa
xor
mov
(bad)
aaa
jb
cwde
mov
retf
fnstsw
(bad)
icebp
mov
mov
cmp
push
dec
inc
sbb
jnp
test
push
add
loopne
mov
push
jg
(bad)
ja
out
(bad)
jno
stos
imul
iret
adc
sbb
pop
or
push
mov
cmps
arpl
lds
fimul
adc
(bad)
jmp
push
xor
mov
dec
(bad)
push
enter
add
es
shl
loopne
jmp
lahf
gs
jnp
mov
mov
lods
adc
call
inc
inc
sub
shl
fwait
or
loop
add
push
lock
push
and
sbb
ror
inc
adc
lock
push
into
pop
out
mov
out
in
movs
xor
xor
xchg
sahf
gs
fiadd
lea
lea
test
(bad)
jo
xor
pop
inc
sub
repz
sbb
mov
pop
lahf
jbe
xor
hlt
jecxz
stc
cmc
pop
xchg
adc
adc
push
adc
fyl2xp1
test
or
outs
xchg
sub
mov
mov
sahf
xor
jbe
out
sub
mov
mov
es
stos
pop
sub
and
mov
and
movs
ds
popf
(bad)
loopne
inc
sbb
fwait
push
mov
(bad)
rcr
pop
cmps
pop
inc
inc
int
lds
dec
pop
mov
xchg
(bad)
call
sub
cmp
inc
cli
xchg
mov
sar
jle
mov
dec
fst
sbb
push
ins
xor
adc
mov
jecxz
sub
imul
xor
out
mov
lods
imul
ret
xlat
jmp
imul
pop
sub
ins
dec
(bad)
xchg
(bad)
aam
daa
mov
sub
(bad)
xor
push
ret
inc
test
dec
(bad)
mov
repnz
in
push
retf
pop
inc
sbb
mov
int3
lock
pop
imul
retf
outs
xor
repnz
loope
std
adc
pop
in
mov
(bad)
nop
jae
sbb
pop
out
mov
fwait
imul
test
cmps
jnp
movs
sbb
cmp
inc
popf
sub
mov
fnop
push
xchg
les
lods
sub
(bad)
outs
scas
mov
push
retf
fstp
jno
retf
mov
sbb
jns
test
push
cld
sbb
pop
or
add
inc
mov
adc
fidiv
inc
push
pop
or
adc
dec
mov
dec
mov
loope
pop
jnp
dec
stos
jns
fisttp
lods
stos
in
pop
mov
or
mov
xor
(bad)
in
or
adc
push
jecxz
aas
outs
or
div
inc
jbe
jbe
int
stc
add
aam
pop
mov
cmp
scas
ins
sahf
xchg
icebp
and
xor
lock
std
imul
adc
jnp
dec
xor
and
icebp
ror
mov
dec
test
cs
scas
popa
in
popa
jecxz
inc
std
jmp
cmc
mov
div
pop
mov
fs
movs
xlat
rcr
(bad)
mov
ret
pop
stc
dec
shr
push
or
iret
call
inc
inc
in
or
fld
xlat
push
lea
cmp
sar
jb
mov
sub
(bad)
retf
cld
outs
sub
test
push
xchg
dec
add
mov
imul
sub
call
cmp
call
mov
(bad)
shl
inc
jmp
inc
xchg
jns
imul
mov
in
sbb
mov
or
xor
test
jne
mov
inc
mov
in
add
push
pop
fadd
and
mov
xlat
pop
hlt
xor
loop
mov
out
test
or
(bad)
adc
fisttp
movs
add
in
ins
jbe
sub
xor
sbb
and
rcr
mov
pop
or
aaa
mov
or
mov
daa
shr
sbb
adc
in
sti
cli
cs
adc
ss
neg
popf
bound
nop
mov
pusha
aas
adc
pop
jge
imul
and
and
arpl
into
ror
outs
mov
test
stos
push
mov
ja
retf
push
pop
adc
movs
mov
xor
xchg
sbb
xchg
scas
dec
dec
in
push
adc
add
push
and
out
sub
cmp
out
fistp
mov
pop
arpl
inc
aas
xchg
mov
mov
cmp
dec
pop
push
sub
add
or
or
cld
push
cld
or
cld
push
xchg
pop
xchg
adc
fadd
jnp
in
sar
jnp
xchg
push
inc
mov
cmp
mov
lods
daa
ret
xor
aam
mov
stos
xor
add
fisttp
xor
dec
sbb
mov
leave
dec
das
mov
mov
push
out
call
dec
xor
pop
and
(bad)
ficom
ret
cwde
(bad)
xor
shl
xor
add
lahf
push
or
(bad)
pop
repz
push
mov
rcr
outs
sub
pop
fistp
xchg
xor
mov
push
xchg
push
or
jle
mov
sub
push
(bad)
adc
lahf
(bad)
mov
adc
push
jp
movs
call
mov
arpl
sub
push
add
xchg
jle
sub
jmp
inc
jb
pop
xchg
(bad)
mov
and
xchg
mov
stos
or
pop
fcom
movs
mov
pop
nop
xor
jp
cmp
pop
push
ror
shr
out
loop
jle
outs
xor
test
push
mov
add
fs
ja
cmp
xchg
mov
sub
add
cmc
xchg
das
add
inc
mov
xchg
ret
icebp
aaa
sub
push
gs
mov
cmp
sub
mov
mov
les
and
add
fs
gs
aam
in
dec
fst
push
in
arpl
mov
test
leave
jno
jns
pop
fs
mov
push
fisubr
inc
loopne
je
leave
aam
adc
sub
pop
test
cmp
jb
push
inc
cmps
iret
mov
mov
jno
cwde
mov
cmp
xchg
xchg
(bad)
out
mov
rcl
imul
lock
(bad)
and
sbb
and
pushf
push
lahf
test
or
sbb
or
ret
mov
jp
fwait
scas
xchg
cmp
retf
dec
mul
cmp
mov
loop
mov
cld
sub
jbe
pop
popa
cmp
cmp
sub
mov
les
lea
xchg
xchg
cwde
pop
ss
adc
loope
sbb
push
pushf
jnp
test
dec
and
sti
sub
es
mov
push
loope
out
pop
in
adc
lea
mov
cmp
sub
mov
imul
std
in
xor
or
xchg
jmp
inc
mov
lods
xor
retf
add
fsub
test
or
mov
mov
push
mov
mov
mov
adc
dec
adc
dec
mov
xor
hlt
cli
lods
add
out
push
mov
dec
test
pushf
stc
ret
pop
aad
push
push
jmp
jno
nop
fiadd
aad
mov
cmpxchg
loope
in
sub
mov
and
out
lods
adc
movs
mov
dec
fbstp
adc
leave
(bad)
jle
vucomiss
sub
add
push
push
mov
(bad)
out
loopne
push
dec
adc
sbb
push
pop
xor
fwait
mov
push
out
aam
fbld
mov
out
mov
(bad)
mul
out
and
int
jo
push
jl
dec
mov
retf
outs
or
push
jno
xor
inc
ss
lods
sbb
int
aam
jno
js
es
lahf
gs
or
adc
imul
xchg
pusha
iret
cdq
fcmovbe
into
adc
loopne
stos
add
sub
call
data16
imul
scas
inc
pop
cld
leave
pop
xor
daa
xchg
push
jne
pop
cmp
repz
inc
inc
mov
lods
jbe
push
inc
jl
rol
sub
xchg
popf
dec
addr16
cmp
or
fiadd
pop
hlt
and
xor
jb
nop
clc
dec
not
scas
ja
mov
push
mov
push
mov
popa
in
cmp
fadd
mov
push
popa
sbb
jae
sar
(bad)
jmp
xor
ret
leave
cmp
jmp
dec
(bad)
jnp
stos
jbe
inc
push
loopne
fcomp
fbstp
jbe
jg
adc
push
jecxz
mov
rcl
test
jle
dec
retf
(bad)
iret
xor
dec
pop
jno
jnp
xchg
jg
(bad)
daa
sbb
push
sahf
push
mov
mov
push
clc
mov
and
and
pop
aam
add
push
lock
out
mov
std
jne
rcl
sub
push
xchg
xor
jb
push
and
mov
sub
dec
push
scas
fisubr
and
sbb
cmp
push
push
mov
mov
in
pushf
jecxz
lea
test
cs
xchg
mov
dec
cmps
and
mov
mov
mov
mov
xchg
stc
cmps
mov
jbe
(bad)
cmp
cdq
hlt
jns
xchg
icebp
sbb
mov
in
jge
cmp
cmps
movs
jbe
rcr
lea
rcr
sbb
mov
imul
mov
cmp
sbb
cs
push
fisttp
cmps
inc
fwait
sub
rcr
les
les
call
mov
adc
lds
cmp
pop
pop
mov
movs
adc
mov
cmp
jecxz
repz
push
jne
cmp
test
sub
fndisi(8087
into
lods
das
cmc
add
mov
or
mov
movs
aam
cmps
lock
mov
retf
cwde
push
out
(bad)
xlat
push
jp
imul
in
sub
xchg
rcl
mov
inc
and
mov
ja
loopne
std
pop
add
fnsave
pushf
jg
div
add
sbb
hlt
and
xor
(bad)
push
xor
imul
pop
(bad)
shl
jmp
add
push
je
add
mov
ret
mov
ja
cmp
mov
retf
int3
cmc
or
aaa
or
(bad)
fimul
mov
movs
outs
adc
sahf
sbb
gs
int3
or
hlt
arpl
sbb
movs
lods
or
inc
(bad)
dec
xor
clc
iret
jmp
std
loop
aaa
(bad)
and
mov
cmp
xor
ins
mov
imul
and
pop
push
dec
call
shl
sub
loopne
mov
sbb
movs
rol
ds
inc
cmp
out
xlat
cwde
adc
loop
(bad)
and
(bad)
xchg
fist
xor
jmp
lods
sbb
or
and
mov
into
jns
jp
jne
jnp
imul
loop
cmc
mov
push
test
dec
adc
adc
arpl
sub
jmp
mov
sbb
or
stos
retf
inc
mov
mov
mov
mov
adc
repz
pop
mov
push
mov
pop
cmc
sbb
out
inc
jmp
and
mov
push
int
xor
sbb
shr
sub
inc
pop
push
mov
inc
inc
push
add
mov
cmp
mov
fnstsw
popa
(bad)
mov
and
cmp
sbb
aas
sbb
pop
push
loope
cli
movs
inc
mov
shl
jmp
fcmovbe
jae
xchg
repnz
arpl
(bad)
adc
out
mul
sub
xchg
aam
lock
mov
cmps
jl
loopne
or
jo
xchg
mov
cmp
jg
cdq
push
mov
push
loop
ss
and
stos
push
icebp
cmc
ja
dec
ror
(bad)
bound
jns
outs
retf
shl
push
scas
repz
movs
mov
xchg
mov
or
xchg
shl
out
xor
dec
jl
fst
lea
in
cwde
sub
mov
pop
movs
fwait
jp
ret
xchg
sar
xchg
movs
lahf
stos
mov
dec
mov
loopne
cmp
bound
stos
mov
enter
fmul
cmc
mov
inc
pusha
adc
xchg
in
jecxz
inc
push
mul
jmp
sub
xor
push
xor
sbb
jecxz
adc
inc
cdq
dec
mov
ins
outs
adc
inc
sbb
add
or
pop
sub
mov
cmp
sahf
jae
xchg
dec
(bad)
adc
cdq
cli
jmp
adc
cdq
jbe
sbb
pop
cmp
or
aaa
and
arpl
or
ins
pop
mov
inc
jns
and
rcl
inc
mul
jmp
popf
daa
inc
lahf
ret
mov
in
mov
iret
cli
jl
jo
das
sbb
ja
jl
jae
fsubp
mov
and
push
xchg
jae
loope
(bad)
sub
dec
dec
ja
mov
dec
mov
cmp
mov
add
bound
mov
xchg
mov
fwait
(bad)
addr16
xchg
pusha
(bad)
shl
xor
mov
pop
jg
dec
push
cmps
mov
arpl
xlat
xor
adc
fild
icebp
jno
clc
cs
pusha
mov
push
xchg
mov
popf
dec
xor
fbstp
and
push
fild
mov
popa
(bad)
xor
cwde
(bad)
leave
push
mov
cwde
(bad)
in
fisttp
out
mov
adc
out
(bad)
lods
outs
fidivr
clc
clc
fisub
fs
int3
leave
jbe
inc
dec
xchg
iret
or
pop
cmp
cmp
sub
(bad)
icebp
cmp
jp
jp
or
pop
call
mov
pop
call
jbe
mov
sbb
lea
iret
aad
ret
jle
fs
pop
std
push
aad
pop
outs
jo
pop
sti
fmul
ja
jle
call
sahf
in
inc
jo
js
inc
xchg
and
xchg
test
or
xchg
daa
mov
inc
shl
mov
das
xor
(bad)
in
or
mov
scas
scas
xor
pushf
add
sub
push
xor
xor
rcr
or
fnstsw
mov
aaa
xchg
fmul
fldenv
and
and
add
sub
imul
adc
mov
add
mov
loopne
scas
test
cmps
mov
xlat
(bad)
dec
(bad)
mov
inc
add
pop
into
loop
xchg
push
sub
sbb
data16
mov
push
cmp
push
jns
loope
inc
cwde
aaa
(bad)
jmp
mov
ds
push
jmp
ror
mov
stc
pushf
mov
xor
add
out
inc
js
es
push
loopne
enter
ds
repz
cmps
clc
call
fmul
loope
(bad)
xlat
cmps
dec
das
div
and
jecxz
and
add
dec
out
push
fwait
sbb
(bad)
jl
neg
mov
aad
cmps
xchg
or
cs
(bad)
aas
stc
in
push
movs
dec
aad
mov
xchg
mul
or
xchg
mov
mov
pop
xchg
wbinvd
mov
sub
mov
mov
loop
daa
pop
or
adc
aad
mov
std
push
jno
pop
fxch
aad
sub
adc
add
cmps
and
retf
mov
cmp
pop
mov
loop
push
repnz
lods
popa
mov
pusha
repz
int
add
cmps
cmp
jmp
inc
push
enter
xor
mov
push
push
pop
out
and
pop
jl
dec
nop
popa
xor
(bad)
les
ret
ret
inc
add
les
jmp
lock
movs
clc
cmps
inc
mov
scas
aas
pop
fdivr
(bad)
jmp
xchg
cmp
dec
stos
pop
fwait
loope
ss
jle
inc
sbb
sbb
and
xchg
dec
jo
push
xchg
xchg
add
lahf
cmp
and
in
xchg
cs
mov
and
sbb
iret
dec
jg
fdivr
xchg
in
mov
mov
jbe
cmp
dec
int
ss
jno
and
and
daa
add
xor
out
or
xlat
cdq
data16
cmp
ja
dec
fwait
xchg
cmp
push
lahf
(bad)
je
bound
imul
enter
mov
xchg
jmp
bound
pop
cmp
retf
dec
dec
nop
mov
mul
cmps
add
ror
dec
fst
dec
cvtdq2ps
je
call
aas
jecxz
sub
mov
sbb
push
cmps
xor
sbb
int
test
or
dec
and
mov
inc
fnsave
jecxz
jmp
fwait
sbb
mov
add
mov
cmps
outs
sub
xchg
test
inc
ins
xor
mov
add
ins
(bad)
sbb
scas
repnz
call
stos
out
xor
push
cmp
mov
add
jo
imul
popf
arpl
push
inc
pop
popa
out
es
cmp
cmp
add
xor
sar
ret
enter
nop
iret
dec
sbb
add
and
shl
inc
pop
aas
in
enter
dec
pop
xchg
xchg
or
shl
xchg
mov
push
mov
pop
call
int3
leave
cmp
mov
mov
mov
cmp
stos
jne
add
imul
mov
ds
or
outs
jge
pop
(bad)
stc
test
inc
inc
add
test
scas
push
test
fistp
push
call
jg
leave
sbb
or
sti
lahf
jbe
test
test
data16
adc
xchg
mov
sub
mov
(bad)
mov
push
cmp
lock
mov
mov
(bad)
jne
pop
cld
xchg
mov
repz
scas
clc
ror
mov
ret
sub
or
in
enter
neg
out
mov
jl
mov
add
add
(bad)
movs
jb
mov
push
pop
jb
inc
inc
scas
cwde
mov
sub
aas
(bad)
cli
push
ret
mov
neg
ret
mov
lock
jmp
cmp
out
pop
(bad)
retf
int
push
jnp
add
mov
xor
push
jg
mov
pop
push
popa
cmp
sub
dec
or
retf
ss
(bad)
mov
mov
push
pushf
in
mov
lods
ins
push
outs
or
aam
repz
imul
test
imul
mov
pusha
adc
mov
stos
and
fnsave
je
cmp
xchg
aam
push
pop
and
(bad)
sub
mov
movaps
inc
inc
dec
sti
(bad)
sbb
lods
test
push
scas
rcl
mov
sbb
jge
adc
pusha
das
imul
jns
push
cs
fwait
movs
inc
(bad)
dec
(bad)
rcr
mov
xlat
cli
jl
call
cmp
lock
jbe
lods
loop
jno
mov
add
and
xchg
jg
xchg
sbb
test
int3
cmps
jmp
cs
mov
adc
mov
sti
daa
repz
mov
ins
lods
(bad)
div
clc
int3
mov
jmp
test
adc
sbb
test
cmp
pop
or
lahf
dec
sub
push
fxch
mov
aaa
dec
repz
cmp
js
aam
pop
sbb
push
lea
push
inc
(bad)
adc
cmp
pop
push
sbb
jle
outs
push
sub
std
and
shl
push
dec
pop
inc
(bad)
fidiv
or
sub
enter
into
jnp
stos
fwait
int
mov
pop
loop
push
sbb
push
hlt
jle
outs
push
or
out
lods
movs
std
test
dec
sbb
xor
mov
mov
sar
push
sub
rol
mov
xchg
popf
push
shl
push
push
or
cs
sti
inc
sbb
in
mov
xor
xor
pop
clc
lods
lahf
cli
or
inc
out
push
inc
add
or
cmps
inc
mov
ret
sub
adc
(bad)
test
adc
jg
ficomp
(bad)
stos
jmp
(bad)
shr
push
out
ror
pop
mov
js
add
aad
jae
cmp
dec
rcl
call
adc
xor
and
xor
call
mov
scas
cmp
jbe
imul
adc
cmps
xor
loopne
clc
retf
pop
hlt
mov
test
shr
repnz
in
jge
lahf
lds
or
pop
sub
cmp
push
(bad)
xlat
and
cmp
add
and
dec
ror
and
ror
xor
sub
pop
in
loop
sbb
jmp
loopne
ds
xchg
or
fldcw
stos
hlt
popa
pusha
popa
nop
and
mov
pop
stc
jno
xchg
loop
jmp
btc
sbb
mov
rcl
xor
mov
inc
jge
inc
lea
(bad)
push
dec
jb
pop
xor
jmp
inc
stos
icebp
into
cmc
and
ficom
and
add
push
dec
js
and
fld
(bad)
test
pushf
(bad)
aad
xor
dec
or
mov
fsub
adc
inc
cmp
retf
lock
popf
adc
das
scas
test
nop
mov
mov
jl
imul
outs
leave
pop
jbe
mov
rcl
imul
mov
sub
cwde
mov
push
sbb
retf
(bad)
jno
jle
jp
js
repnz
test
(bad)
lahf
dec
ret
and
fiadd
daa
add
lock
mov
sbb
mov
push
fistp
xlat
(bad)
enter
cmp
inc
or
ret
pop
xchg
fdiv
clc
sbb
jbe
in
add
jle
inc
adc
test
and
push
xlat
ror
lea
test
repnz
inc
ja
mov
pop
dec
lahf
xlat
call
pop
cmp
aaa
lock
inc
jb
rcr
jp
fbstp
xchg
test
or
fstp
sti
pop
in
shr
xchg
(bad)
jae
sub
call
in
aas
out
imul
push
test
and
in
aad
ins
pusha
aad
dec
cwde
fisttp
pop
ret
mov
xchg
rol
sub
and
inc
das
cmp
std
jp
or
and
gs
fdivr
xor
sbb
mov
mov
ins
jmp
stc
mov
push
adc
retf
push
cld
sar
push
outs
arpl
nop
pushf
ffreep
jecxz
mov
lods
out
stos
fcomp
adc
fstp
int
fild
clc
jg
inc
cmps
fadd
jp
loopne
pop
xor
mov
jae
add
lods
cmp
sti
test
inc
mov
pusha
ret
cmp
test
sbb
test
push
lods
mov
pcmpeqw
mov
inc
jnp
daa
mov
pop
mov
dec
pusha
sub
mov
icebp
sbb
call
mov
xchg
mov
neg
cdq
cmp
out
das
faddp
pop
cmp
pop
push
shr
mov
(bad)
push
mov
dec
loopne
pop
fs
ja
push
clc
sar
loopne
ins
and
retf
call
mov
xchg
outs
mov
sbb
or
push
test
dec
sbb
push
in
cli
mov
xchg
scas
xchg
fidivr
mov
mov
and
mov
dec
(bad)
faddp
pop
out
xlat
dec
aam
movs
mov
int3
into
jmp
push
push
popf
or
or
pop
xchg
inc
popa
pop
pusha
aas
mov
xchg
mov
push
stc
inc
cdq
ret
das
into
mov
pop
sub
pop
stos
pushf
outs
mov
stos
jle
mov
lods
sbb
jle
mov
into
cmp
hlt
(bad)
sbb
(bad)
sar
repz
sub
ins
mov
add
add
mov
or
xor
cmp
mov
jmp
dec
push
in
xor
xchg
cmps
mov
arpl
lods
ins
push
shr
stos
xor
out
enter
(bad)
cmps
inc
(bad)
pop
xchg
inc
les
pusha
out
adc
jns
jne
pusha
hlt
push
(bad)
les
cld
cmp
dec
test
sbb
imul
in
mov
mov
and
(bad)
xchg
jns
pop
sbb
xchg
fcomp
mov
out
ins
call
add
lea
rcr
leave
xchg
add
dec
adc
sub
sbb
cmp
sub
or
in
xchg
ins
jmp
cmp
ret
cmp
int3
sbb
aad
out
xor
ret
je
cdq
in
jmp
add
aad
cmps
iret
push
test
push
ins
mov
add
not
jp
test
lock
test
ficom
push
mov
xor
dec
les
inc
aas
shl
inc
out
or
sub
xchg
lahf
pop
aas
or
(bad)
push
mov
outs
dec
pop
repz
sti
cmps
nop
lods
adc
push
add
sub
dec
cli
push
(bad)
pop
call
pop
ins
inc
stc
aam
add
add
test
idiv
mov
(bad)
mov
aas
pop
mov
add
cwde
rcl
xchg
xchg
rcl
mov
push
fisub
out
loop
jmp
pop
sub
popf
ffree
cmc
stos
mov
add
sub
sbb
push
idiv
test
dec
fild
(bad)
imul
cmps
add
je
enter
xor
shl
push
daa
fild
push
adc
inc
mov
jbe
das
div
add
cmp
push
lock
xor
or
shl
mov
arpl
int3
jno
or
test
xor
and
cmp
out
push
cwde
sub
lods
leave
imul
or
dec
and
push
jbe
popa
push
or
pusha
add
mov
ds
ja
(bad)
mov
test
nop
ror
xlat
nop
pop
out
push
out
sub
sbb
cmp
cmp
sub
bound
jl
mov
add
push
ja
inc
jae
inc
mov
ins
outs
xchg
push
cmps
das
xchg
enter
mov
mov
push
pop
sar
fwait
bnd
iret
jle
stos
xchg
jecxz
test
jg
lahf
inc
mov
(bad)
sub
pop
adc
dec
scas
cmps
sbb
in
popf
mov
xchg
inc
fucom
outs
push
pop
imul
adc
pop
(bad)
jae
hlt
into
in
std
jle
mov
cld
ret
adc
out
inc
(bad)
xchg
dec
push
out
stc
js
pop
jg
pop
jmp
cmp
int
out
test
(bad)
mov
xchg
es
mov
xlat
push
adc
popf
mov
cwde
inc
imul
pushf
and
aam
ins
xor
push
outs
and
cmp
adc
pop
(bad)
icebp
sahf
fidivr
jno
popf
xor
out
shr
loop
int3
ret
push
add
(bad)
mov
int
sbb
push
iret
cld
int
test
iret
dec
lock
sbb
adc
stos
cli
into
lahf
out
mov
push
mov
data16
je
ret
mov
(bad)
dec
or
lods
lds
cs
je
test
es
lods
and
push
mov
in
push
and
imul
xor
leave
test
push
outs
mov
bound
xchg
fucomi
(bad)
aas
push
out
test
pop
push
cmc
retf
cmp
inc
rcl
adc
mov
call
sbb
push
jne
addr16
adc
loop
retf
(bad)
loop
xor
add
mov
pop
sti
pop
jnp
xchg
ficom
scas
(bad)
mov
sub
test
xchg
(bad)
repnz
adc
dec
cmp
adc
cmps
add
pop
shr
or
(bad)
rcl
add
and
fadd
pop
push
fidivr
xor
xlat
fmul
test
stos
push
sahf
out
out
or
enter
mov
test
gs
push
push
movs
dec
cli
mov
push
aad
int
aas
out
call
push
iret
add
aam
sub
stos
mov
xchg
cmp
and
cwde
sub
les
je
cmps
adc
inc
push
(bad)
jne
pop
add
push
xchg
(bad)
repnz
enter
fnstenv
add
adc
into
add
arpl
lods
push
sub
fbstp
mov
pop
push
in
pop
(bad)
fisubr
aad
(bad)
jne
sub
lea
push
and
loop
and
fmul
xor
lahf
push
mov
ror
in
mov
rcr
xlat
scas
sbb
add
pushf
mov
add
sahf
inc
inc
pushf
mov
mov
loope
sub
xor
dec
pop
pop
imul
cmps
adc
jle
shl
jb
and
out
mov
sbb
push
cmp
add
out
int
pushf
mov
jg
mov
pop
fisub
dec
sub
xor
push
in
fist
mov
(bad)
jmp
fisub
dec
stos
mov
fwait
prefetcht2
sub
add
scas
inc
add
xor
xor
push
repnz
cmc
mov
fcom
ret
inc
iret
mov
(bad)
xor
das
ror
xchg
out
sahf
fdivr
cmp
call
adc
mov
test
cwde
cmc
test
mov
addr16
push
test
sbb
mov
dec
cdq
or
xchg
xor
je
cmps
mov
(bad)
jb
das
sbb
push
and
in
retfw
add
cmc
movs
mov
enter
fdivr
ins
push
inc
and
xor
scas
dec
fist
jnp
loop
push
or
fisttp
(bad)
shl
mov
jg
fdiv
and
loope
mov
outs
loop
jmp
mov
outs
xchg
leave
cmp
fdivr
pop
jo
add
xchg
jl
push
jmp
cmp
and
sub
int
sub
test
loopne
retf
jo
mov
mov
out
dec
pop
(bad)
in
xchg
push
movs
adc
push
jbe
sahf
in
inc
pop
in
inc
stos
sbb
inc
lea
adc
popf
shl
jns
mov
mov
dec
cmp
int3
jne
push
aas
in
mul
sub
pop
test
mov
sbb
and
aam
test
pop
dec
adc
in
shl
or
jmp
test
(bad)
(bad)
sbb
push
iret
ror
dec
pop
loope
jle
or
xor
sti
cmp
xor
mov
cmp
push
fisub
pop
fild
fdiv
sti
pop
js
adc
std
cmp
retf
add
in
dec
fstp
sub
bound
idiv
xchg
fbld
std
(bad)
pop
pop
sbb
iret
push
pop
out
push
xor
pop
xchg
imul
jmp
sub
mov
jno
aaa
rcl
ret
push
in
mov
(bad)
int
sub
or
cmps
pop
xchg
lahf
and
and
test
cld
xor
(bad)
push
pop
loopne
pop
mov
retf
dec
les
adc
or
dec
mov
icebp
test
mov
nop
int3
lods
sbb
bound
push
lods
imul
push
dec
dec
mov
out
sbb
shr
out
sub
mov
ja
push
push
jecxz
push
mov
or
sub
pop
popa
jg
push
lock
pop
sub
fmul
xchg
neg
imul
arpl
and
cli
fnsave
add
cmps
pop
stc
mov
push
push
mov
cmp
lods
jmp
loope
cmp
adc
mov
shl
mov
out
sbb
test
push
xor
mov
pop
enter
pop
jecxz
inc
sub
cmp
je
push
popa
fwait
push
xchg
shl
mov
loop
add
xchg
inc
sub
test
xlat
mov
mov
mov
push
(bad)
jnp
cmc
ss
mov
jne
rcr
sbb
jg
jl
mov
jle
imul
nop
std
mov
mov
mov
fdivr
or
shl
cmp
push
cwde
or
mov
sub
push
mov
sbb
xchg
dec
movs
int
mov
inc
ins
lock
js
xor
call
out
push
repz
xor
dec
cmps
mov
jmp
pop
call
clc
mov
outs
std
dec
jmp
sub
mov
and
call
xor
jmp
jl
inc
pusha
xor
test
sbb
sbb
cwde
shl
push
gs
leave
cli
mov
xor
push
out
push
xor
jb
loopne
sti
pop
ins
mov
lock
fisttp
push
je
pushf
popa
ds
call
stos
mov
mov
cmp
add
aad
lods
add
in
pop
in
xchg
repz
jbe
xchg
mov
cmp
fiadd
mov
fild
adc
or
lods
in
xor
or
std
loope
or
pop
fs
mov
clc
mov
jle
cmc
sub
std
inc
test
in
neg
call
sub
scas
dec
and
ja
das
inc
push
and
imul
int3
fsub
and
aas
jmp
inc
xlat
mov
xchg
in
jns
test
add
xchg
cmps
push
lock
cwde
and
movs
push
jns
bound
dec
cmp
xor
loope
add
jmp
call
aad
and
inc
cmps
repz
pop
mov
in
inc
ss
xchg
push
mov
and
nop
popf
mov
scas
xchg
nop
mov
xor
push
imul
xchg
jle
pop
loopne
push
inc
shl
inc
mov
mov
inc
loop
xchg
sub
push
xchg
pop
lods
test
addr16
push
(bad)
push
mov
int3
pop
inc
fbstp
sub
jnp
arpl
cs
(bad)
xchg
ins
fstp
mov
push
lahf
push
cmp
push
imul
ret
leave
jmp
mov
mov
daa
push
into
jmp
push
mov
xchg
hlt
hlt
std
mov
mov
or
shl
inc
(bad)
mov
lods
xor
mov
xchg
xchg
out
fnstsw
(bad)
ds
push
push
popa
adc
fidivr
lahf
arpl
sbb
push
lea
dec
in
dec
push
fld
xor
in
imul
stos
push
jno
add
mov
jne
xor
ja
adc
popf
mov
outs
or
or
mov
out
sub
retf
jae
pop
dec
dec
lock
sbb
icebp
sbb
push
push
mov
pop
retf
push
ds
pop
inc
int
sub
sub
push
dec
pop
iret
pop
sbb
ror
inc
inc
inc
aaa
xchg
sub
push
gs
sub
lds
cmps
leave
push
in
push
retf
xor
adc
pop
inc
add
cmc
inc
mov
addr16
int3
dec
mov
clc
inc
shl
pusha
xchg
loop
push
fcomp
xchg
sbb
sbb
icebp
popf
xchg
dec
sub
jbe
mov
mov
or
test
or
sbb
sub
daa
or
mov
out
jmp
rcl
(bad)
ret
rcl
cmp
or
pop
jbe
in
repnz
cld
fmulp
loop
pop
inc
inc
mov
clc
ss
add
cs
scas
or
xchg
lock
pop
mov
and
sahf
sbb
mov
cmps
sub
pop
imul
pop
ja
stos
sbb
inc
add
pop
or
test
jmp
push
push
(bad)
enter
xor
mov
imul
dec
sub
into
xor
push
mov
sub
js
push
push
icebp
outs
adc
dec
shr
mov
jle
xchg
mov
sbb
mov
nop
out
cwde
pushf
cmps
inc
pushf
leave
pop
jle
rcr
call
mov
cmps
hlt
popa
push
(bad)
fmul
inc
mov
ret
ret
lds
repz
scas
add
jns
int
in
or
iret
outs
rol
shl
cld
or
jo
mov
push
mov
ja
je
sub
xchg
push
cmp
loop
mov
jae
loop
xor
(bad)
push
or
adc
dec
xor
push
loopne
popa
ret
lods
addr16
cmps
pop
mov
dec
jb
ds
call
popa
repnz
jae
jnp
cmp
dec
int
or
jb
xor
(bad)
mov
mov
mov
mov
test
xlat
out
hlt
ds
imul
movs
pop
call
push
dec
fdiv
fcom
lods
clc
cmp
jns
sbb
in
xchg
mov
ror
push
mov
pusha
leave
fsub
sbb
stc
jb
jae
jle
imul
lods
popf
mov
jne
cmp
(bad)
jno
movs
out
pop
inc
cdq
dec
inc
mul
imul
in
jecxz
adc
call
stos
xor
loope
cmc
(bad)
(bad)
js
cmp
loope
stos
jbe
inc
pop
punpckhbw
mov
sub
xchg
push
pop
sti
lea
mov
scas
in
inc
or
movs
push
jbe
aaa
cwde
or
jmp
xor
dec
out
loop
add
(bad)
lods
mov
cmp
xlat
pop
sbb
mov
mov
(bad)
mov
ret
pop
fadd
mov
xchg
je
push
and
ret
sub
aam
xchg
push
jns
pop
or
push
movs
xchg
in
cmc
ss
pop
inc
sbb
imul
ja
out
adc
mov
xor
pop
mov
test
dec
popa
pop
xor
js
in
test
out
mov
cdq
pop
mov
and
jno
push
gs
jmp
sar
les
repnz
icebp
sub
int3
xor
dec
test
inc
ret
jno
sbb
cmp
sbb
inc
hlt
mov
hlt
ffreep
xor
call
lea
outs
popf
stc
xchg
in
pop
shl
out
jns
mov
sbb
in
jecxz
mov
aas
popf
adc
adc
mov
xor
pop
cmp
popf
and
push
push
jb
icebp
in
je
ret
leave
pushf
sahf
xor
nop
dec
adc
cmps
and
and
cmp
push
jg
(bad)
popa
js
or
call
pop
add
in
or
and
cmp
cmc
mov
movs
arpl
pop
(bad)
fadd
enter
adc
sbb
push
fdiv
jns
add
dec
mov
cmps
xor
shl
(bad)
push
rol
aad
mov
sub
outs
inc
inc
iret
imul
xlat
xchg
mov
adc
sub
outs
sbb
push
in
xchg
call
pop
xchg
and
call
jmp
dec
dec
mov
sbb
arpl
iret
push
mov
and
out
mov
loope
mov
stos
xlat
sub
sbb
push
cdq
adc
pop
ja
sar
inc
call
jp
std
dec
out
or
data16
(bad)
and
inc
dec
cdq
in
sub
push
xor
in
mov
add
xchg
(bad)
mov
rcr
out
test
lea
jns
or
pop
cmp
sub
adc
cmp
mov
inc
lods
inc
add
xchg
les
jmp
inc
in
call
pop
mov
dec
fstp
xchg
(bad)
pop
stc
or
adc
cmc
pop
push
jge
inc
sub
mov
mov
pop
jp
imul
out
dec
repz
mov
jae
sbb
je
std
dec
aaa
xlat
jl
jbe
rol
adc
fisubr
or
sti
lea
or
jnp
dec
jp
loope
jnp
(bad)
lods
fadd
scas
and
xor
add
or
sbb
add
test
test
pop
int
sbb
add
sub
adc
push
mov
mov
cmps
inc
jl
push
ins
in
dec
cmp
and
rol
retf
mov
or
mov
mov
cmps
inc
cmp
jnp
push
jmp
das
lods
(bad)
std
mov
xchg
mov
jnp
test
sahf
dec
addr16
stos
(bad)
xchg
sub
std
movs
mov
push
clc
xchg
xor
or
push
mov
es
jno
mov
lahf
hlt
dec
xor
fadd
rcr
push
push
mov
outs
les
cmc
not
dec
imul
mov
inc
repnz
dec
jmp
in
sub
ds
mov
cmp
push
stc
jne
adc
pop
jp
loopne
jl
jb
jbe
sti
push
out
pop
mul
mov
jne
sti
dec
daa
inc
jb
add
mov
fsub
ds
stos
pop
sar
test
fdiv
aas
and
in
fcomp
sbb
cmp
jns
and
outs
imul
jmp
or
mov
or
or
pshufw
scas
pop
cmp
pusha
cwde
xchg
xchg
ficomp
pushf
mov
mov
nop
dec
call
retf
xchg
out
adc
cmps
jne
fwait
mov
cmp
sbb
pushf
push
cmp
gs
jge
(bad)
outs
sub
fistp
cs
mov
fidiv
retf
mov
cmp
add
mov
xchg
jg
push
repz
sahf
jbe
mov
dec
lds
xchg
nop
inc
or
leave
leave
outs
xchg
jg
addr16
and
je
pop
lods
neg
fisub
push
mov
dec
fld
jns
xlat
jns
sub
out
fldenv
sub
enter
pop
call
mov
call
pop
jp
sti
pop
adc
mov
jle
ins
jmp
jmp
retf
mov
scas
xor
jle
ds
adc
enter
add
mov
push
lahf
jmp
dec
test
sbb
pusha
dec
daa
cmc
dec
jae
push
loope
test
in
add
sbb
xor
ss
daa
inc
out
imul
adc
retf
arpl
test
into
cmp
fst
fisubr
js
imul
retf
push
jns
test
call
daa
inc
or
xlat
add
or
shl
add
dec
aas
fild
into
pop
or
adc
into
cmp
mov
aaa
dec
aad
cmovl
std
pushf
mov
inc
out
call
sub
ss
or
xchg
inc
pushf
outs
sti
push
and
mov
add
sar
(bad)
cmp
int3
xor
mov
sbb
cmp
cmp
pop
and
xchg
ja
xor
push
mov
fdiv
loopne
mov
jbe
shr
pop
js
mov
xor
inc
scas
and
(bad)
pop
adc
scas
xchg
ds
dec
into
add
and
aas
xchg
fisub
mov
movs
test
(bad)
clc
rcl
push
cmp
mov
fsub
mov
retf
sbb
xchg
push
mov
inc
lods
(bad)
cmp
cdq
dec
out
loop
add
out
mov
sub
out
cli
cmps
xchg
stc
dec
mov
jmp
cmp
ret
jmp
mov
and
or
mov
aad
dec
inc
jl
sbb
lds
out
jbe
push
(bad)
jae
and
pusha
gs
sahf
enter
push
mov
and
(bad)
(bad)
jo
inc
and
mov
loope
inc
mov
mov
xor
mov
sbb
or
mov
out
fsubr
mov
inc
fistp
jecxz
mov
cmp
mov
in
sbb
sub
jg
mov
fstp
fild
mov
aaa
ins
das
cmp
pop
clc
(bad)
in
add
test
push
xor
dec
cmp
inc
adc
movs
cmp
test
repz
stos
dec
lds
inc
pop
inc
cmp
popa
popf
pop
add
and
jl
cmps
cld
pop
test
sub
cmp
ins
xchg
clc
adc
pop
sub
sbb
add
push
test
adc
sahf
mov
(bad)
xchg
fcomp
xchg
jo
or
shr
movs
aaa
retf
in
loop
push
pop
dec
or
fs
inc
adc
ds
neg
jg
ds
rol
dec
jecxz
cmp
es
mov
in
mov
and
aas
rol
cli
jno
cli
mov
mov
pusha
and
icebp
push
sahf
inc
test
cwde
ss
jmp
dec
dec
mov
movs
cmp
fwait
shr
ss
xlat
call
inc
aaa
(bad)
leave
mov
(bad)
push
or
mov
jmp
cmps
fadd
popf
sub
dec
popa
mov
pop
or
inc
push
xor
jo
hlt
sbb
xchg
jmp
and
dec
mov
inc
or
mov
out
imul
pop
(bad)
jmp
call
daa
dec
and
movs
add
test
cmps
sbb
ror
pop
call
repz
(bad)
sub
punpckhbw
or
sub
push
add
push
imul
int3
and
dec
xchg
and
das
fs
mov
pop
out
pop
and
and
xor
mov
lods
retw
sbb
les
outs
adc
sub
retf
xor
pop
mov
lock
mov
xor
outs
pop
rcr
push
jbe
lahf
jns
mov
add
out
lods
jge
lahf
inc
fistp
mov
and
ss
dec
(bad)
mov
dec
data16
or
or
adc
sub
ins
mov
fbstp
in
sub
iret
mov
out
call
rcl
xor
inc
nop
les
stos
adc
sbb
out
aam
imul
(bad)
sbb
and
cmps
mov
xor
jns
into
pop
mov
dec
mov
jl
sub
add
inc
rcl
mul
inc
test
cmp
mov
fsub
pop
test
int3
mov
push
mov
mov
(bad)
or
call
loopne
retf
inc
sbb
call
or
mov
mov
inc
mov
arpl
ins
test
sub
xor
xchg
xchg
jae
fdivr
sti
out
mov
cmps
dec
imul
icebp
push
movs
mov
inc
fldcw
cmp
mov
push
neg
jecxz
sbb
out
enter
(bad)
out
jecxz
mov
push
jno
ja
and
sub
mov
pusha
dec
cwde
xor
pop
out
lahf
dec
ret
mov
repnz
inc
fst
jo
fs
ret
lock
sub
xchg
mov
mov
in
push
jmp
std
pop
jo
ret
movs
imul
pop
clc
cmc
lds
lds
cwde
rol
out
pop
movs
cmp
fcom
and
jge
mov
cmps
cmp
inc
jno
jl
cmp
cli
loope
xchg
and
jecxz
iret
push
mov
pushf
mov
jl
cmp
test
sub
clc
mov
mov
iret
ficom
push
mov
mov
lock
mov
aam
push
rol
das
mov
enter
sub
pop
pop
test
adc
lods
inc
xchg
ds
test
jno
dec
clc
movs
cmp
daa
test
test
xchg
push
mov
jp
dec
je
int
jnp
xor
movs
sbb
jmp
mov
bound
inc
out
jno
nop
and
xlat
and
cmc
pop
adc
pop
mov
(bad)
xchg
sar
pop
add
repnz
cmp
and
or
icebp
mov
ss
jo
ss
pop
xchg
ret
icebp
xchg
dec
gs
push
je
xchg
ret
xor
(bad)
out
xor
jmp
jmp
shl
sbb
stos
adc
ins
adc
xlat
add
cmp
mov
cs
jecxz
mov
nop
dec
add
test
xor
dec
jmp
jmp
fdiv
icebp
ins
push
ss
ror
scas
jo
add
pusha
outs
jno
out
pop
inc
sub
mov
xor
xor
test
adc
imul
test
cli
mov
cli
push
ror
bound
push
adc
mov
mov
jns
je
lds
add
add
mov
stc
add
or
js
sbb
es
mov
in
mov
int3
xor
repnz
bound
mov
xchg
stos
and
int3
sub
leave
ficomp
test
imul
cdq
jno
into
loope
cmp
hlt
mov
push
fisttp
es
mov
sbb
cmps
mov
cmp
outs
je
inc
push
pop
es
pusha
pop
mov
sub
loop
jmp
mul
dec
xor
dec
mov
call
popf
test
xor
xchg
retf
shl
mov
or
scas
scas
xchg
xor
push
scas
jns
or
movs
and
pop
sbb
push
movs
adc
adc
aas
fstp
dec
jge
inc
push
pusha
mov
lahf
rcl
mov
leave
sbb
mov
and
shr
or
pop
icebp
mov
adc
sub
xor
arpl
ins
or
popf
in
ror
inc
and
xor
xor
pop
test
inc
mov
fdiv
lea
mov
les
adc
xor
add
js
jns
stc
pop
pop
and
lds
inc
cdq
retf
rcl
ror
pop
xor
mov
or
imul
push
aad
cmps
in
gs
jecxz
mov
mov
in
lds
inc
jecxz
and
je
test
adc
xchg
and
sub
or
test
loop
nop
(bad)
push
neg
push
out
leave
das
mov
push
pop
mov
xchg
aad
sbb
inc
mov
or
cli
inc
stos
shr
mov
fimul
jmp
mul
(bad)
out
neg
jb
pop
mov
cmp
pop
retf
mov
pop
popa
add
mov
jo
inc
xlat
and
add
xchg
ret
fld
es
xchg
int
ja
ds
imul
mov
inc
ins
in
es
jge
cmps
push
cmp
mov
hlt
mov
mov
push
xchg
sub
retf
retf
(bad)
mov
sbb
xor
mov
add
das
pop
mov
and
adc
retf
push
xor
jae
jne
in
rcl
inc
xor
add
mov
mov
lock
test
jns
jp
sub
loop
outs
into
lea
mov
iret
clc
(bad)
xlat
jo
gs
pop
xlat
mov
aam
scas
fnsave
fldenv
xor
call
stc
jge
jmp
mov
lods
jmp
push
imul
ficomp
dec
adc
jg
dec
xchg
fst
loopne
rol
and
dec
cmp
dec
pop
push
stos
sub
popf
fimul
mov
xchg
call
fimul
shl
mov
sbb
inc
int3
aam
and
sub
mov
(bad)
int3
xchg
push
xchg
adc
fisubr
push
popa
addr16
or
xor
xor
icebp
adc
xchg
les
pop
(bad)
in
xchg
jne
cmovp
shl
mov
jb
lock
xor
mov
ret
mov
retf
aas
jl
loope
adc
(bad)
xor
mov
mov
test
out
(bad)
test
mov
lods
xchg
aad
push
in
out
(bad)
ja
jo
call
shr
jbe
gs
hlt
sbb
cmps
xor
lods
xchg
mov
scas
ja
daa
add
and
adc
dec
dec
cdq
nop
call
sub
xlat
scas
adc
(bad)
cld
push
mov
xchg
push
icebp
pop
push
xchg
pop
mov
cwde
retf
and
sbb
adc
inc
addr16
push
xlat
jle
xchg
or
ds
rol
sub
dec
outs
sub
inc
lea
out
repz
sub
jle
iretw
and
xor
int
pop
sbb
mov
adc
ja
punpckldq
mov
or
jmp
jns
sbb
xchg
and
xlat
mov
mov
inc
and
pop
push
inc
ins
call
in
in
jge
cmc
lds
dec
xor
mov
lock
inc
cld
jp
into
jle
clc
pop
xor
(bad)
out
adc
leave
(bad)
fld
test
ficomp
mov
xor
push
arpl
fldcw
repz
pop
or
inc
pop
inc
mov
scas
inc
jmp
nop
and
pop
pop
ins
out
fild
pop
inc
xchg
loop
xchg
mov
fcomp
mov
sub
cdq
out
movs
repz
fst
inc
(bad)
add
jle
fsubr
sub
or
aaa
or
repz
cs
lods
jp
and
enter
push
ret
shr
jle
ss
dec
psubusb
jb
shr
sbb
pop
or
sbb
mov
call
mov
test
mov
sub
add
in
fisub
fsubr
mov
out
lahf
pop
ret
mov
and
sbb
aaa
repnz
jl
sub
dec
out
adc
mov
call
jnp
mov
jbe
fs
xor
sub
adc
popa
nop
push
test
mov
iret
mov
pop
adc
rcr
sahf
cmp
xchg
ss
inc
retf
push
aad
pushf
lods
or
ret
sub
cmps
in
jno
scas
inc
mov
dec
push
push
push
cmp
xchg
and
imul
jge
sub
ds
push
pushf
pop
sbb
adc
and
sti
mov
cmp
mov
inc
or
daa
inc
retf
pushf
and
pop
pusha
outs
add
add
xchg
aam
xor
or
in
ins
fwait
daa
sub
popf
lds
mov
inc
div
adc
add
fs
xchg
stc
adc
inc
into
dec
dec
pop
loop
out
out
fs
xchg
xchg
mov
and
push
push
scas
inc
repnz
cld
js
test
add
cmc
div
dec
and
out
test
stos
or
fadd
inc
add
sbb
jle
imul
retf
lahf
mov
jbe
mov
or
mov
(bad)
ins
test
push
fsub
scas
pop
rol
popa
nop
xor
call
cld
movs
push
mov
jb
outs
outs
pop
out
int3
int3
sub
mov
(bad)
push
cli
mov
inc
jge
mov
add
call
or
xor
pop
jb
out
sub
cmp
xchg
pop
inc
pop
test
adc
sub
mov
mov
movs
xor
shl
(bad)
and
jl
xchg
mov
xchg
cld
addr16
sbb
xor
add
cmp
adc
mov
cdq
into
std
movs
add
sub
dec
rol
xchg
je
pop
ret
rol
arpl
inc
mov
je
js
sbb
jecxz
gs
mov
push
ret
sub
mov
mov
ret
(bad)
repnz
call
fadd
xchg
sti
repz
test
(bad)
add
out
mov
sbb
xchg
push
shl
push
fcomip
out
call
and
xor
sub
sub
mov
mov
mov
jbe
mov
pop
inc
cli
ret
mov
push
cmps
ret
lods
push
adc
aaa
fisttp
(bad)
rdtsc
push
or
inc
jp
cmc
jg
fild
jns
jmp
(bad)
popf
mov
jnp
or
pushf
pop
jle
cwde
adc
sbb
(bad)
jecxz
cmp
inc
sbb
ja
add
in
rcr
sahf
adc
repz
or
aad
jmp
pop
sub
pop
xchg
std
movs
in
xlat
mov
adc
(bad)
jmp
test
repz
imul
push
clc
push
add
xor
adc
fidiv
jge
scas
pop
jnp
dec
test
pop
xchg
mov
jno
mov
jg
xchg
nop
in
call
stc
hlt
pusha
mov
jo
mov
ins
xor
mov
mov
push
pop
inc
cmp
stos
loopne
das
inc
fidiv
jmp
shl
xchg
inc
sub
imul
rcl
or
pop
xchg
aam
jmp
add
arpl
cld
in
stc
cwde
mov
nop
call
xchg
lds
movs
or
inc
sbb
rcr
push
out
push
xchg
and
mov
nop
ins
mov
xchg
daa
inc
std
jecxz
inc
hlt
loopne
mov
mov
fstp
jbe
xchg
pop
leave
sti
loop
and
and
add
ins
stc
ja
shr
dec
dec
out
ins
push
in
or
jge
out
and
packsswb
fs
ficom
call
movntps
js
push
cld
dec
jbe
test
or
cmp
pop
jo
retf
jne
imul
fsub
fadd
xor
inc
dec
jno
and
jbe
aaa
mov
add
popa
das
pop
scas
or
jbe
retf
jle
ss
pop
outs
cmp
movs
ins
mov
pop
mov
retf
popa
jp
cmp
cld
mov
mov
(bad)
jne
ror
or
dec
ins
cld
bound
adc
dec
jbe
sar
into
test
mov
lds
lahf
mov
cmp
add
outs
push
loopne
dec
popf
add
sbb
dec
adc
xor
retf
mov
inc
pop
sbb
sahf
xchg
adc
xor
outs
fisub
dec
pop
fwait
inc
stc
add
test
xlat
mov
(bad)
ins
inc
xor
dec
jmp
cwde
add
jno
and
pop
fist
inc
mov
into
xchg
retf
mov
clc
jnp
sbb
jae
mov
push
call
pop
mov
cmc
push
xchg
retf
stos
mov
in
mov
scas
outs
out
leave
xchg
test
and
in
cmps
lea
inc
add
(bad)
repnz
out
mov
mov
xchg
sub
ret
adc
dec
sub
and
or
inc
ds
scas
loopne
xchg
shl
pop
jge
mov
daa
out
jg
pop
outs
and
mov
sub
sub
je
push
fmul
and
lock
ret
das
gs
js
and
enter
icebp
cli
ds
cmp
popa
jno
test
cmp
aaa
adc
je
jo
cmp
jp
outs
xor
loope
fisttp
jmp
push
mov
fisttp
inc
loopne
push
and
mov
ja
mov
je
add
inc
mov
jnp
sbb
push
xor
dec
cmp
out
addr16
or
(bad)
jb
gs
or
les
iret
hlt
adc
xor
and
mov
in
call
std
cmc
std
dec
and
in
add
cmc
mov
fst
jb
(bad)
(bad)
xchg
add
imul
aad
jmp
repnz
xchg
push
movs
push
xor
(bad)
cmp
stos
mov
or
fucomp
lds
jp
call
mov
test
add
(bad)
and
mov
push
aad
idiv
pusha
pop
call
aas
jg
sub
into
jl
and
or
scas
and
pushf
inc
jp
je
pop
jp
pop
(bad)
in
mov
jno
sar
inc
dec
sub
mov
inc
scas
push
cmp
nop
add
and
inc
clc
ror
lock
push
pop
aad
xchg
xor
or
lods
cmp
aad
(bad)
or
test
cmp
jbe
jmp
inc
mov
pop
lock
(bad)
jns
xor
scas
add
or
icebp
cmp
lods
inc
or
addr16
sti
mov
loop
stc
push
sti
fldcw
xor
in
sahf
mov
xchg
push
pop
ja
push
adc
es
cmp
mov
jle
ret
sub
std
xchg
push
cld
cmp
sub
outs
push
call
bound
push
outs
pop
cli
scas
sub
jb
mov
jmp
pop
or
xchg
dec
mul
mov
sbb
pop
retf
add
jmp
out
mov
or
gs
xchg
fstp
inc
loop
jnp
daa
lahf
adc
sub
arpl
pushf
(bad)
cli
cmp
pop
cmp
jbe
push
mov
lods
and
push
push
imul
outs
sbb
adc
mov
push
bound
neg
cmp
rcl
xor
rol
out
jmp
jl
xchg
enter
or
int3
rol
add
push
inc
inc
add
dec
dec
out
mov
and
popf
ret
test
inc
lods
add
(bad)
mov
leave
xchg
mov
add
mov
out
xchg
ror
gs
sahf
and
leave
je
in
inc
add
push
jmp
or
push
(bad)
push
ds
imul
and
mov
out
cmps
aas
mov
test
js
mov
pop
sar
and
clc
sub
mov
int3
cs
inc
sbb
(bad)
arpl
test
mov
test
or
mov
in
sub
mov
ds
xchg
pop
(bad)
mov
je
mov
scas
clc
loopne
cwde
inc
imul
mov
add
es
stos
out
mov
add
and
int
ficom
cmp
jl
jae
xchg
jo
call
outs
fld
mov
repnz
xor
pop
pop
xor
aas
outs
retf
adc
mov
xchg
addr16
mov
cmp
pop
jbe
push
ss
cld
and
cs
(bad)
pop
inc
into
dec
or
test
add
cli
or
inc
fdivr
scas
ins
jl
retf
cmp
or
ret
sbb
fs
in
xor
int
add
mov
fstp
push
std
sbb
add
mov
fistp
dec
cmps
push
(bad)
jns
jbe
imul
jecxz
stos
push
test
fsubr
xchg
clc
pop
adc
ds
dec
fdivr
pop
ret
jg
mov
fst
fnstenv
dec
sti
jo
sub
mov
das
jb
xlat
retf
pop
pushf
fnstsw
fstp
cmp
xor
stc
in
mov
(bad)
xor
loope
not
pop
mov
xchg
(bad)
push
inc
add
adc
dec
movs
sbb
invd
hlt
repz
pop
jecxz
jne
and
push
ss
stos
(bad)
aas
sbb
cli
inc
mov
loop
out
icebp
inc
fstp
call
mov
adc
xchg
and
mov
inc
adc
xchg
sub
lea
movlps
jle
jge
mov
or
xchg
xchg
xchg
retf
aam
inc
fstp
outs
cmps
xchg
xor
adc
mov
jns
sub
inc
xchg
fs
push
pop
push
and
nop
sub
adc
xor
fs
dec
adc
test
sbb
mov
mov
ret
push
mov
dec
xchg
jp
sbb
mov
push
cmp
and
push
scas
test
sbb
xor
sbb
and
sbb
push
sbb
dec
sar
mov
fbstp
mov
js
mov
cwde
cmps
(bad)
push
dec
pop
push
(bad)
jmp
rcl
sub
pop
dec
push
dec
mov
pop
inc
and
mov
fisttp
mov
adc
inc
cmp
xor
movs
jb
das
sbb
dec
and
xchg
ficomp
fwait
test
xchg
mov
xor
push
imul
add
bound
jmp
stos
pop
out
xor
mov
push
scas
dec
adc
stc
pop
or
daa
sar
out
test
sbb
fld
xchg
enter
jmp
and
jg
bound
in
stos
retf
mov
iret
push
pop
sbb
ret
loope
inc
xchg
lahf
jne
js
idiv
mov
int3
pcmpgtb
jnp
stc
outs
aam
hlt
mov
fistp
push
jmp
inc
inc
mov
jmp
ret
loop
mov
jg
loopne
xor
mov
(bad)
fsubr
pusha
mov
xor
in
popf
and
dec
push
shl
mov
cmp
ins
(bad)
int3
inc
std
ror
xor
pop
mov
push
bound
fcomip
mov
add
add
jp
inc
push
pop
cdq
(bad)
adc
les
stos
add
fdivr
int
xor
push
mov
or
sub
inc
loope
(bad)
repz
inc
pushf
pop
adc
jmp
adc
test
jp
sub
outs
aas
lods
lds
jge
adc
repz
loopne
pusha
push
loop
sbb
aas
call
stc
(bad)
shr
jns
ret
mov
mov
loop
push
mov
in
xor
int3
rcr
int
push
fs
rol
(bad)
pop
mov
call
cmp
push
daa
jmp
das
jne
xchg
inc
(bad)
cld
pushf
out
pop
cmp
and
lock
mov
sbb
sub
xor
push
dec
inc
mov
fwait
pop
jne
push
and
mov
mov
mov
es
jle
aam
cli
loope
shl
lds
cmp
arpl
sub
xor
or
and
out
es
sbb
repnz
xchg
mov
mov
jmp
std
jecxz
jg
jmp
out
out
sbb
mov
push
inc
or
shr
jl
cli
stc
inc
mov
fidiv
into
fnstcw
jno
sub
mov
push
les
xor
adc
ret
push
(bad)
popf
fwait
pop
fwait
jge
mov
jnp
out
jg
iret
scas
mov
rol
icebp
jns
inc
test
(bad)
mov
pushf
(bad)
adc
loop
pop
fwait
repnz
(bad)
mov
mov
mov
cmc
pop
cmp
imul
xor
cli
(bad)
sbb
push
add
mov
xchg
ins
retf
daa
mov
retf
pusha
sub
pop
xchg
out
inc
int3
lods
pop
adc
inc
dec
mov
(bad)
push
or
adc
sbb
pop
stos
jbe
bound
push
mov
lods
outs
sbb
pop
aam
cmovno
and
xchg
ret
cs
loop
shl
push
fidivr
push
ficomp
jne
sbb
sub
xor
stc
mov
pop
pusha
mov
mov
int
outs
in
and
ret
ins
cmp
adc
pusha
xchg
call
pop
(bad)
sub
adc
ret
fcomi
stos
lahf
into
ror
sbb
mov
(bad)
in
mul
test
cdq
pop
push
int
pop
mov
sub
iret
push
lock
pop
fnstsw
nop
sub
dec
mov
test
retf
push
push
movs
jmp
imul
outs
jp
dec
loopne
sub
ret
scas
inc
or
mov
loop
mov
cli
iret
pushf
daa
imul
jno
(bad)
mov
mov
jmp
xchg
sbb
mov
cld
std
inc
push
xchg
in
movs
fwait
arpl
adc
je
loop
adc
(bad)
mov
and
scas
and
sub
(bad)
xchg
xchg
mov
push
pop
and
adc
push
scas
pushf
stc
sbb
or
mov
jl
mov
cli
jle
mov
sti
rcl
pop
test
add
call
nop
ss
popa
mov
lock
mov
lock
push
cmp
mov
and
popf
cmp
ds
add
cmp
adc
imul
fwait
test
loope
xchg
adc
je
sub
add
leave
adc
fs
cmp
jno
int
cmp
neg
mov
adc
or
adc
xor
ror
mov
dec
out
clc
out
pop
mov
xchg
pop
and
mov
xor
rcl
add
mov
add
push
(bad)
push
(bad)
ins
fdivr
jbe
pop
call
add
test
dec
mov
sahf
dec
mov
pushf
out
call
test
enter
add
aad
and
std
mov
push
cdq
out
and
mov
mov
mov
and
cmp
in
xchg
xor
jmp
mov
add
cld
pushf
dec
(bad)
fnstsw
sbb
adc
mov
xor
jmp
sub
lods
fcomp
or
cmp
jge
sub
xchg
pop
xchg
jp
movs
jp
sub
xchg
mov
add
mov
fld
sbb
xor
dec
(bad)
lds
sub
xchg
repz
mov
jno
sub
clc
sbb
loop
imul
push
fdivr
add
sub
ret
jl
out
pop
or
loopne
dec
dec
push
test
xchg
inc
fld
and
pop
cdq
test
cs
ror
cld
cmps
(bad)
aam
(bad)
cdq
mov
inc
mov
dec
inc
dec
cmp
xchg
cmp
in
fiadd
dec
cmp
cmp
or
(bad)
fstp
jo
cmp
sbb
xor
push
mov
retf
mov
adc
or
fild
data16
repz
jns
or
dec
pop
cmps
inc
jne
test
sbb
mov
pop
inc
jle
ficom
inc
sub
and
ins
push
jae
ins
loop
pop
aam
fist
loop
pop
mov
sub
jmp
cld
xor
add
icebp
add
fidiv
addr16
mov
iret
dec
dec
mov
jnp
sub
sub
mov
pop
into
mov
adc
aad
scas
or
jns
fsubr
jg
cmps
arpl
adc
inc
sub
ss
xchg
xlat
fst
cmp
push
(bad)
and
adc
ins
xchg
xor
sub
cmp
dec
inc
xchg
cmps
aas
mov
cld
retf
sahf
inc
cmp
std
pop
fwait
sub
push
and
xchg
push
mov
fadd
dec
dec
jns
pop
in
mov
push
pop
mov
icebp
mov
into
outs
inc
lods
ror
mov
pusha
test
xlat
jp
(bad)
xchg
adc
jbe
or
pop
pop
repz
jge
ret
cmps
adc
jne
and
(bad)
in
cmc
loop
ins
out
and
jl
(bad)
popf
jmp
add
inc
scas
adc
mov
jge
in
xchg
int
adc
inc
lahf
sbb
xchg
mov
retf
fmul
xor
lods
adc
add
inc
dec
jns
add
inc
out
pop
sbb
cmp
popa
pop
mov
mov
scas
add
pop
xchg
cmps
or
xchg
xlat
mov
out
imul
outs
shl
jns
xchg
mov
dec
push
xor
mov
dec
stc
dec
stos
mov
enter
jne
mov
das
or
xor
inc
push
lods
sti
ror
ins
data16
push
pslld
pop
dec
push
scas
(bad)
clc
std
add
push
jmp
xor
test
mov
add
into
mov
cmp
sub
das
ret
leave
outs
iret
xor
daa
xchg
cs
push
ins
out
ins
xchg
pop
and
add
push
ret
jmp
cdq
enter
shr
ja
or
mov
adc
dec
jle
dec
dec
out
mov
ja
add
out
ins
dec
inc
pushw
das
fbld
xchg
pop
dec
addr16
(bad)
jmp
ret
dec
fdivr
mov
ins
mov
mov
lock
xor
cmps
cmova
xor
daa
sub
cmp
ins
out
inc
dec
xlat
pop
(bad)
jecxz
pop
fcmovnbe
jns
aam
lds
push
imul
xchg
dec
bound
xchg
pop
cmp
xchg
in
pop
fdiv
jp
mov
lahf
aaa
cld
test
imul
cmp
xchg
push
mov
or
mov
sub
jg
adc
push
and
jae
iret
cmc
aaa
pop
sti
call
not
in
out
sbb
out
test
pop
dec
jo
xchg
ins
sbb
xchg
sub
std
push
xor
and
jecxz
push
std
je
(bad)
in
sub
fidiv
fidivr
mov
mov
pop
mov
push
in
or
out
gs
js
jno
retf
pusha
dec
arpl
push
std
pop
dec
aam
sub
test
sbb
repz
push
in
fisttp
jmp
inc
(bad)
xor
fstp
out
mov
mov
enter
imul
ret
and
cmp
dec
addr16
aaa
dec
or
push
sbb
inc
xchg
jnp
repz
retf
fldcw
outs
pusha
mov
or
je
call
pop
aam
inc
loopne
(bad)
pop
das
(bad)
retf
popa
sar
inc
(bad)
pop
xchg
push
daa
(bad)
out
sar
ins
pop
ins
sub
inc
jle
push
call
pop
jne
imul
pop
sub
lahf
sbb
jo
xchg
cmps
sub
mov
ins
mov
xor
jmp
fisubr
inc
arpl
inc
(bad)
mov
xchg
mov
(bad)
fucomip
xchg
xchg
cmp
mov
mov
mov
es
test
sub
cmp
xchg
mov
or
aas
sbb
call
pop
xchg
jg
or
dec
shl
and
inc
or
jb
jae
or
lea
push
imul
mov
and
scas
adc
aam
das
xchg
adc
repnz
cmp
mov
ficomp
cmp
and
dec
add
mov
mov
cs
stc
pop
or
test
adc
(bad)
xor
mov
add
mov
cmp
rcl
(bad)
jns
imul
jecxz
pop
pop
sbb
ds
or
jp
data16
xchg
sbb
cs
cmp
loope
cmps
test
xor
push
mov
push
in
xor
cmp
retf
aas
das
imul
xchg
xchg
xchg
jp
fnstcw
imul
inc
or
add
mov
or
jle
or
mov
add
xchg
ret
sub
sub
outs
sbb
int
sbb
mov
popf
lea
or
sbb
mov
add
mov
push
mov
out
xor
inc
das
data16
jg
push
mov
xchg
jle
ret
xor
adc
mov
imul
push
(bad)
jmp
push
mov
arpl
test
mov
pop
js
icebp
sbb
or
test
leave
bound
xchg
fsub
daa
enter
inc
pop
repnz
stos
jp
cmp
inc
mov
or
jle
or
test
loop
sahf
mov
fisttp
jae
nop
jns
or
lds
xor
in
pop
mov
loopne
jae
dec
test
aas
push
sahf
je
mov
add
in
add
cwde
fisub
jbe
test
movs
jo
rol
fcomp
push
paddw
aad
pop
loopne
in
not
sbb
xor
jge
scas
loope
inc
add
add
(bad)
sbb
push
scas
pop
cmp
fdivr
arpl
xor
dec
xchg
stos
dec
fnstcw
inc
les
xchg
adc
mov
cmp
xchg
loop
push
nop
pcmpeqd
ins
jl
or
and
retf
mov
push
xlat
sbb
out
mov
xchg
adc
jl
rcl
lds
xchg
pop
pop
pop
dec
ins
pop
(bad)
fimul
or
test
imul
or
nop
or
fnstsw
cmp
aas
scas
std
xor
xor
or
into
sbb
xchg
inc
(bad)
movs
sub
lahf
adc
lahf
arpl
dec
and
aaa
sub
in
test
xchg
push
mov
sar
pop
add
sti
into
cmc
push
push
mov
gs
repz
push
mov
mov
das
mov
and
jmp
mov
rcr
dec
cmp
sbb
inc
lea
jns
popf
inc
jmp
in
sub
sub
pop
jle
ins
les
push
xchg
adc
gs
sbb
fcom
in
sar
repz
repz
push
inc
adc
and
mov
pop
mov
cld
add
push
dec
xor
pusha
adc
das
sbb
jbe
push
stos
cmp
fld
xchg
sub
and
shl
pushw
and
xor
cwde
adc
int
inc
fcmovnu
(bad)
jmp
outs
loopne
pop
cmps
test
not
lock
pusha
jmp
add
dec
add
icebp
cmps
add
push
mov
movs
inc
mov
gs
push
xchg
int
cmp
sub
mov
(bad)
sub
jnp
jmp
test
ret
aam
xrelease
inc
or
and
les
in
bound
cli
dec
sar
push
mov
lahf
and
mov
cmp
pop
pushf
cmp
xchg
arpl
sahf
clc
ins
inc
mov
push
and
(bad)
repz
push
and
or
add
add
popa
sub
inc
add
in
jp
lods
jae
xor
xchg
xchg
in
jae
inc
or
mov
pusha
xor
mov
ret
inc
jbe
cmp
xchg
add
mov
cs
aaa
(bad)
test
mov
aaa
or
lahf
call
pusha
adc
ins
data16
loopne
sub
fnstcw
loopne
pop
xor
imul
jg
(bad)
cli
jae
aam
or
jae
mov
adc
xchg
cmc
gs
inc
data16
sbb
pushf
test
cmp
jns
sbb
mov
pop
jbe
cmps
mov
fnstenv
xchg
data16
loopne
pop
bound
lea
fld
cmp
jno
xchg
sti
pop
dec
les
cmc
adc
inc
sbb
jp
xor
cmp
fistp
int
xchg
cdq
js
xchg
jno
ins
inc
mov
rcl
out
aad
xor
lea
(bad)
fincstp
xor
ja
xor
scas
mov
repz
je
or
nop
jecxz
jne
or
push
cmps
cmp
mov
repnz
fcomp
cmp
pop
(bad)
aaa
call
cmp
adc
add
int3
shl
ss
mov
shl
mov
(bad)
xor
or
adc
push
retf
test
push
ret
imul
dec
cmps
sbb
into
jecxz
das
into
add
js
clc
mov
add
pop
xor
lahf
dec
lock
int3
enter
cli
aam
inc
xor
mov
and
xlat
cld
mov
xchg
iret
mov
mov
out
mov
movs
dec
inc
call
outs
int
pop
(bad)
xchg
data16
mov
adc
mov
sbb
sub
mov
pop
retf
out
add
sub
rcl
imul
test
adc
add
popf
sbb
scas
pop
dec
adc
adc
fcmovu
shl
mov
sbb
and
xor
push
adc
pop
test
mov
sub
dec
mov
xchg
inc
push
push
ret
addr16
les
adc
mov
or
pop
pop
int3
jle
inc
fldcw
inc
shr
add
xchg
sbb
pop
call
repz
pop
jbe
mov
add
or
cmp
cmp
movs
call
xor
movs
mov
daa
inc
mov
js
scas
mov
test
in
add
or
pop
pop
aam
fwait
imul
iret
clc
pop
outs
loopne
or
cdq
add
test
nop
xchg
data16
pop
or
push
fadd
aaa
sbb
cli
and
inc
mov
adc
jp
sbb
aam
push
or
retf
push
pop
ficomp
fst
mov
and
ds
fisubr
inc
push
jb
pop
js
dec
(bad)
jo
push
outs
les
cdq
ins
in
cmp
mov
push
mov
jmp
and
dec
je
xchg
mov
mov
pop
movs
and
or
or
sbb
jbe
fidivr
jp
adc
add
jmp
ror
mov
lods
sbb
stc
xor
jecxz
mov
pop
and
cwde
push
mov
sbb
loop
xchg
or
aas
inc
add
push
jne
repz
leave
jb
or
(bad)
sbb
(bad)
jns
movs
and
xchg
shr
sbb
fwait
mov
repnz
cwde
in
jo
repnz
popf
xor
or
fnsave
pusha
dec
scas
dec
pushf
or
int
ds
or
and
cwde
lea
xchg
pop
in
shl
xchg
dec
and
xlat
push
or
inc
test
pusha
jae
xchg
mov
(bad)
xchg
leave
pop
(bad)
mov
in
hlt
out
adc
pushf
fs
pop
jno
fucom
(bad)
sbb
mov
xchg
cmps
cld
and
(bad)
add
pop
test
lea
cli
shr
shl
dec
adc
pop
sub
push
call
inc
in
movs
jp
adc
xchg
and
setle
call
sub
jno
cmp
mov
cmc
fbld
cmps
push
pop
mov
mov
lds
jno
das
hlt
inc
out
xor
je
cmp
push
push
push
cli
xchg
fsub
je
(bad)
sub
pop
gs
out
outs
push
inc
xor
and
xchg
repz
pop
dec
xchg
mul
lods
xchg
cdq
xchg
(bad)
cmp
in
std
cdq
dec
or
pushf
pop
fst
out
in
fstp
loope
movs
push
outs
pop
or
movs
xchg
jne
inc
mov
xor
jne
cmp
loope
retf
std
push
jmp
aaa
jnp
loope
jmp
movs
mov
jp
push
jne
mov
cmp
cmp
test
adc
mov
mov
dec
aas
inc
xor
div
xor
(bad)
push
hlt
cs
cmps
in
add
mov
inc
mov
mov
out
mov
icebp
fst
sub
adc
push
lea
fs
dec
inc
data16
ret
ret
aam
pop
cmp
lods
into
movs
or
add
das
aas
adc
sbb
fcomi
cmc
jno
pop
sahf
shl
pop
les
mov
lds
test
mov
out
loopne
(bad)
jo
jae
pop
xchg
xchg
fs
mov
adc
jo
sub
sub
xchg
sbb
les
movs
ss
clc
ins
popa
mov
xor
aas
xchg
(bad)
ins
mov
loop
dec
mov
cwde
adc
rol
jb
mov
jo
sbb
and
inc
test
add
leave
sahf
and
repz
mov
jle
cmp
inc
loope
xor
dec
ret
(bad)
out
test
adc
mov
pushf
jb
enter
rol
push
sub
outs
and
adc
outs
xchg
jo
and
retf
mov
dec
sbb
out
add
inc
xor
inc
cmc
arpl
xchg
(bad)
cdq
mov
push
inc
(bad)
push
lock
push
fiadd
jne
fwait
inc
mul
pop
jp
mov
out
cmp
movs
jns
or
mov
outs
sbb
mov
mov
ror
jmp
(bad)
pop
cli
and
je
inc
aam
xchg
xor
add
lds
inc
cmp
xchg
pop
or
mov
inc
push
or
repz
cld
xor
pop
in
(bad)
sbb
(bad)
inc
(bad)
xor
xchg
mov
out
imul
inc
jno
jl
idiv
mov
pop
pop
push
aas
pop
scas
xchg
sbb
push
dec
clc
sbb
gs
mov
movs
add
push
jmp
jmp
adc
sub
jmp
mov
pop
xchg
gs
jecxz
in
and
jo
adc
int
into
and
das
jne
pushf
lahf
inc
jp
or
pop
sti
daa
jno
xchg
and
cwde
cmp
jae
jae
lods
mul
pop
sbb
iret
jp
jmp
test
or
scas
mov
shl
pop
dec
popa
je
xchg
xor
and
ins
jecxz
sub
sbb
shl
push
mov
jl
mov
push
retf
inc
repnz
cmp
fstp
dec
dec
push
loope
int3
jg
stc
popa
cs
sub
shl
push
rcl
jmp
xor
setl
fdiv
(bad)
fidiv
mov
mov
movs
and
push
outs
or
cmc
fs
add
sub
test
pusha
psllq
dec
dec
jae
inc
mov
dec
stos
fiadd
sub
xchg
sbb
mov
into
(bad)
sahf
inc
mov
cmp
(bad)
hlt
jae
push
and
movs
inc
in
push
dec
cmp
stc
fsubr
and
or
aas
idiv
inc
dec
inc
outs
test
pop
jl
call
push
enter
cli
mov
push
mov
cmps
ret
nop
jl
stos
out
outs
stc
fwait
jg
xor
neg
xchg
adc
add
pop
push
icebp
xchg
cmps
adc
jl
mov
sahf
cmp
push
mov
push
cld
nop
out
sub
inc
mov
and
cmps
out
cmp
or
mov
pushf
mov
cmp
into
add
or
cs
sub
pop
test
ret
dec
xor
clts
cmps
ss
(bad)
dec
mov
xchg
ja
loope
xchg
test
xchg
jo
fwait
cld
dec
sbb
enter
bound
ret
ret
pusha
or
cld
(bad)
aam
cmp
cmc
pop
xor
sbb
pop
loopne
push
out
aas
xlat
inc
cmps
int
xor
pop
call
cli
js
ins
loop
ins
sbb
das
mov
(bad)
cwde
jge
pop
iret
xor
jle
loope
imul
cmp
add
and
out
fadd
rol
in
adc
mov
sar
sbb
inc
sbb
movs
test
push
test
icebp
cld
jnp
sub
cmp
inc
fldz
fsub
or
sub
or
addr16
test
shl
dec
test
add
mov
inc
pop
cdq
push
dec
jecxz
jne
inc
enter
cs
mov
aas
inc
adc
das
fadd
mov
jbe
jne
add
fbstp
call
hlt
clc
dec
xor
and
mov
into
and
lods
sbb
fsubr
ret
call
or
sub
adc
dec
sub
popf
jge
dec
pop
mov
xor
or
dec
lahf
es
dec
mov
pop
xor
xor
or
and
xchg
(bad)
add
push
aaa
mov
out
or
stc
push
fistp
push
inc
(bad)
jbe
(bad)
fs
adc
mov
(bad)
adc
cmps
out
dec
movs
mov
lods
adc
imul
and
inc
mov
cdq
shl
xor
pop
xor
nop
xchg
aas
das
cli
daa
mov
ins
dec
out
imul
or
xchg
fadd
mov
jmp
(bad)
sbb
jns
std
fmul
jnp
add
repz
jnp
push
test
pop
xchg
xchg
aaa
mov
or
and
jp
push
lock
mov
xchg
xchg
lahf
add
outs
call
iret
pop
out
(bad)
mov
and
outs
cwde
mov
sbb
lock
cdq
cmps
jnp
push
xchg
ret
sbb
and
cmp
test
xor
dec
out
jp
jnp
push
inc
mov
jge
inc
add
sub
jle
retf
jmp
push
lea
(bad)
fadd
retf
lea
and
adc
adc
jmp
cld
into
fdivr
mov
ror
repnz
(bad)
mov
ins
popa
inc
dec
and
xor
sti
addr16
and
and
push
jmp
mov
fld
add
push
jne
test
jge
fstp
xchg
data16
add
lea
sbb
pop
sbb
cmps
cmp
jmp
push
and
push
in
loopne
ror
call
ins
add
fwait
sub
mov
xchg
push
inc
icebp
push
mov
mov
add
add
jg
mov
jbe
xchg
pop
lods
js
cli
and
scas
mov
idiv
mov
cli
fldenv
in
mov
addr16
into
and
jmp
test
pop
(bad)
cdq
jl
xchg
cmp
mov
xor
aad
mul
xchg
mov
pop
int3
ss
in
push
and
mov
pop
loop
adc
movs
or
mov
pop
push
jnp
xor
xchg
cmp
mov
addr16
loop
imul
xor
js
mov
cmps
cmc
xchg
call
sub
jmp
mov
dec
shl
jbe
jae
jno
lea
push
jbe
xchg
jo
mov
mov
jbe
dec
sub
mov
pop
pop
sub
cld
fadd
nop
daa
xor
mov
pop
push
sbb
ins
sub
mov
cdq
in
and
adc
jb
aas
xor
aas
sub
mov
xchg
lods
pop
repz
mov
push
out
push
sub
aam
dec
cli
mov
cdq
popf
mov
ja
sti
push
add
pusha
in
les
add
aad
xor
inc
sbb
jnp
cmp
push
jmp
sub
mov
add
arpl
mov
clc
(bad)
(bad)
jl
lahf
aam
inc
mov
pop
test
and
out
pop
mov
sub
jno
push
push
xlat
out
adc
xor
mov
pop
cmc
or
push
hlt
fstp
lock
jmp
push
sbb
mov
adc
shl
jb
cs
xor
mov
cmps
mov
or
jp
sub
mov
and
mov
out
pusha
mov
jle
pusha
sub
frstor
shl
(bad)
pusha
push
jb
lods
sbb
jo
sub
nop
lea
enter
fidivr
jl
leave
dec
cld
add
inc
mov
pop
adc
in
mov
lods
movs
div
xchg
sbb
stc
cmp
sub
push
jne
loop
pop
fbld
sub
retf
adc
sub
into
pusha
and
loopne
push
sahf
jmp
sbb
inc
jmp
inc
in
xchg
cmps
(bad)
stos
cmps
mov
jae
inc
dec
mov
add
jbe
bswap
dec
fld
sub
add
test
lock
pop
rcr
dec
idiv
xchg
lods
add
mov
push
jmp
sar
adc
out
mov
rol
inc
loop
sbb
stos
ret
fimul
popa
fs
out
adc
scas
sub
jg
sbb
xchg
cmp
test
in
sub
add
out
adc
enter
mov
xor
sbb
mov
repz
popa
inc
(bad)
retf
sub
and
repz
inc
sub
xchg
fimul
mov
pushf
and
cwde
es
aam
jge
jo
(bad)
jo
std
xchg
xor
into
scas
in
mul
test
adc
mov
and
cmps
(bad)
jge
dec
sbb
jmp
scas
push
push
retf
rcr
imul
pop
cwde
add
gs
cmp
sahf
clc
mov
mov
les
sub
add
pop
pop
add
xor
or
fsubr
loopne
rcl
add
clc
test
in
inc
or
mov
loope
mov
in
mov
sahf
lods
outs
add
arpl
mov
add
mov
dec
outs
popa
xchg
pop
mov
fisub
sub
stos
dec
jecxz
test
es
call
sub
inc
test
es
push
inc
mov
neg
test
(bad)
rol
xchg
dec
nop
ja
pop
shl
into
and
mov
pop
xor
xor
in
mov
mov
cmp
movs
jge
jmp
out
push
dec
push
in
dec
sub
push
loopne
sbb
test
push
pushf
iret
lahf
jb
pop
ss
and
mov
push
fwait
jb
or
and
leave
outs
sub
out
and
out
loopne
mov
jae
and
mov
(bad)
sbb
aad
xchg
cwde
lods
(bad)
loop
dec
mov
inc
xor
jg
pop
lods
cwde
daa
movs
mov
call
add
loopne
xor
pop
in
xchg
inc
ror
xchg
repz
pop
push
mov
ficomp
push
(bad)
sub
inc
lock
adc
xchg
dec
loopne
ja
xchg
leave
add
enter
in
loopne
mov
(bad)
fsub
xchg
xor
mov
sub
adc
inc
and
ins
cmp
arpl
cmp
arpl
fsubr
or
movs
or
mov
xor
aam
sub
test
fnstsw
das
push
fwait
mov
sbb
jmp
rol
jp
push
cmp
aas
shl
and
neg
jb
cmp
js
cwde
test
mov
pop
ret
cmp
mov
(bad)
sbb
jbe
dec
add
xchg
jne
cwde
lods
push
pop
jae
das
mov
fwait
addr16
retf
test
aas
iret
icebp
inc
inc
push
pop
nop
pop
js
adc
push
cmps
outs
pop
repnz
xchg
sar
mov
icebp
int
mov
imul
or
aam
cdq
imul
xor
mov
data16
push
scas
ret
cli
pushf
sub
ins
and
adc
movs
jae
shl
scas
(bad)
or
loope
jmp
push
popf
mov
pop
sub
rcl
fstp
ficomp
neg
clc
pop
stc
stos
ret
adc
pop
inc
pop
loopne
xor
xor
lea
dec
sbb
pushf
stos
xor
mov
mov
dec
mov
lahf
mov
add
dec
call
mov
push
dec
mov
repnz
and
and
push
xor
jbe
and
push
jae
xchg
(bad)
lock
out
movs
popa
mov
jmp
inc
sub
(bad)
or
pop
out
(bad)
sbb
inc
mov
adc
leave
fadd
mov
iret
pop
push
xchg
sbb
xlat
sbb
stos
fwait
add
add
mov
or
xlat
je
js
xchg
popf
iret
adc
dec
(bad)
pop
xor
fwait
(bad)
mov
inc
in
xchg
out
test
in
cmps
sar
xchg
scas
loopne
mov
shr
out
hlt
iret
jbe
outs
jecxz
stos
pushf
popf
push
jmp
retf
rcl
jb
mov
dec
xor
cmp
cwde
ffreep
mul
pushf
add
cmps
imul
push
mov
inc
mov
jmp
push
mov
mov
shl
outs
mov
mov
fnstcw
lods
(bad)
int
outs
push
hlt
clc
popf
int3
mov
fadd
pop
or
ins
stos
dec
in
add
push
sbb
jecxz
arpl
push
pop
out
xchg
sub
cmps
xchg
dec
mov
push
lods
in
jle
xor
dec
xor
mov
daa
repnz
mov
sbb
retf
push
add
add
push
clc
sbb
mov
sub
imul
call
test
out
jecxz
rcr
jp
(bad)
or
imul
jecxz
pop
mov
mov
mov
test
sti
xchg
xor
stc
fistp
in
das
xchg
rcr
push
sahf
dec
pop
ror
out
enter
sbb
sbb
neg
out
lea
icebp
or
mov
push
xor
inc
and
cli
push
mov
stc
in
cdq
fild
push
movs
scas
fs
and
(bad)
icebp
add
mov
lds
jns
aaa
(bad)
mov
xchg
fld
rcr
inc
movs
xchg
aas
pop
xchg
dec
loopne
scas
ins
daa
int
jle
int3
shr
add
xor
jbe
jmp
adc
mov
sahf
adc
push
loopne
adc
jae
push
scas
mov
rol
xchg
sbb
jmp
jmp
rcl
or
clc
jl
fsub
mov
mov
lods
outs
xor
sbb
dec
xor
fist
in
jmp
sbb
(bad)
aam
inc
(bad)
cmp
xchg
popa
scas
jae
mov
retf
adc
cdq
xchg
ds
mov
jge
xchg
ins
adc
lock
jmp
mov
pop
add
rcr
sti
movs
popf
xor
push
je
outs
jo
xchg
icebp
push
dec
sub
cmp
sbb
add
arpl
cmc
pusha
out
mov
mov
test
retf
in
stc
push
inc
shl
pusha
call
stos
mov
sti
mov
adc
iret
mov
pushf
cmp
jge
mov
adc
popa
push
pop
dec
cmps
xchg
rcr
mov
or
add
pushf
out
(bad)
shl
test
push
shl
leave
loope
int3
test
ja
je
loopne
movs
sbb
or
data16
ficom
popa
js
push
fnsave
not
imul
cmp
test
inc
sbb
sbb
ja
addr16
jns
cmps
cmp
lahf
test
popa
push
inc
addr16
repnz
ss
ja
and
call
push
rcl
fistp
adc
cmp
pusha
xchg
mov
in
pushf
xlat
sub
adc
jmp
xchg
mov
imul
dec
cmc
adc
add
ss
inc
sbb
ins
or
jnp
xchg
add
retf
adc
mov
les
mov
in
leave
and
leave
scas
in
adc
repnz
lock
out
and
pop
add
dec
rol
push
das
mov
in
(bad)
int
mov
xchg
mov
or
dec
sub
out
or
ins
add
jl
xchg
push
mov
mov
out
and
xchg
std
(bad)
mov
sub
test
mov
(bad)
jne
fidiv
rcl
cmp
aad
(bad)
pop
data16
or
jge
pop
ret
aas
xor
and
jno
retf
push
cmp
rol
dec
cdq
das
dec
sbb
lods
or
add
add
repz
jmp
mov
mov
adc
mov
xor
movs
mov
jne
pop
mov
repnz
shl
add
data16
push
jmp
jae
fs
push
adc
out
jmp
sysret
adc
cld
stos
xchg
inc
(bad)
in
cmc
push
lock
call
push
mov
xor
in
stos
mov
mov
add
inc
xchg
test
outs
inc
mov
sbb
xchg
and
adc
cs
inc
mov
inc
stos
and
dec
lahf
mov
jns
pop
sbb
xchg
jno
test
mov
cmp
add
dec
sub
jg
add
mov
jl
sahf
sbb
xor
fwait
repnz
imul
sbb
neg
mov
mov
pop
loop
push
sbb
cwde
cmp
pop
mov
xchg
jl
test
jb
jge
out
and
xchg
retf
jnp
pop
pop
fistp
stos
adc
movs
inc
aas
outs
jge
vcmpss
pop
push
xor
dec
xchg
fcmovbe
cmp
(bad)
or
jmp
push
pop
or
xor
jne
(bad)
or
and
data16
adc
pusha
lahf
mov
xor
mov
ds
mov
rcr
int
push
pop
sahf
inc
aaa
adc
pushf
sbb
pop
pushf
xor
jno
dec
push
(bad)
in
jne
xchg
jle
xchg
inc
inc
push
out
mov
mov
ror
mov
pop
mov
pushf
bound
jg
clc
sti
call
dec
(bad)
mov
dec
pop
in
push
imul
adc
sbb
popa
push
dec
out
stc
neg
ret
aam
dec
fmulp
add
and
call
pop
add
fs
jnp
adc
dec
jo
pop
retf
xchg
outs
or
sbb
mov
xchg
ds
cdq
xchg
stc
stc
pusha
mov
sub
mov
ror
sbb
js
adc
cmc
jne
mov
add
and
fild
jae
xchg
popa
xor
push
cld
outs
dec
sbb
loopne
cmp
mov
mov
mov
cmp
mov
dec
cdq
into
retf
mov
jge
and
ret
ins
cmp
sbb
dec
jge
sub
pusha
cmps
or
cmp
mov
test
mov
inc
nop
jecxz
cmps
aad
iret
je
dec
sub
cmc
aam
xlat
xor
add
push
ret
mov
mov
or
fbld
add
and
jno
adc
xor
sbb
sbb
pop
cmps
mov
out
dec
dec
rcr
sbb
call
inc
cmc
push
xor
call
adc
pop
aam
adc
mov
iret
dec
mov
xchg
xchg
enter
pop
cdq
retf
shl
jo
xor
aad
clc
push
je
sahf
ins
push
push
mov
int
lea
or
neg
jge
mov
sub
mov
loope
lea
inc
inc
fs
xchg
inc
in
pop
and
test
retf
out
in
mov
mov
loop
cmp
pop
jae
pop
mov
pop
call
les
scas
test
stc
test
in
aaa
sbb
movs
das
fld
outs
and
inc
xchg
or
dec
hlt
mov
mov
stos
push
call
mov
(bad)
pop
push
push
push
movs
push
and
dec
push
or
xchg
mov
lahf
xor
sub
add
mov
mov
retf
nop
pop
sub
xor
retf
stos
stos
es
imul
cmp
jb
pop
clc
repnz
mov
mov
bound
xor
lock
sub
lds
xor
xlat
imul
add
xor
cmp
sar
loop
and
lahf
or
xlat
cmp
jnp
pop
dec
sub
add
jno
rcl
ret
dec
sub
or
xchg
(bad)
sbb
mov
(bad)
xor
mov
imul
fcomp
(bad)
ins
and
(bad)
rcl
xchg
bound
pop
mov
test
ds
retf
dec
shl
mov
jnp
ins
in
out
(bad)
fmul
int3
and
mov
mov
add
dec
jae
ss
mov
gs
and
inc
dec
int3
mov
lea
std
fs
mov
(bad)
push
inc
(bad)
dec
pop
inc
cdq
xor
or
aam
imul
jae
push
add
imul
and
xchg
fld
inc
pop
outs
xor
sub
es
out
aas
iret
or
fcmovne
idiv
and
add
das
daa
lods
mov
mov
or
nop
xchg
movs
addr16
jmp
pop
bound
aas
mov
leave
imul
dec
sub
imul
loope
aad
ins
cmp
ins
xor
lods
mov
cmp
mov
sbb
or
add
test
shufps
les
xchg
retf
jns
je
inc
jl
add
popf
mov
inc
add
das
loop
mov
test
div
outs
ds
clc
or
fucomi
add
mov
call
in
movs
jmp
jbe
int3
daa
call
sub
jmp
cdq
mov
mov
xor
mov
sbb
mov
dec
sbb
popf
xchg
out
sahf
dec
out
fwait
lods
adc
xchg
ins
leave
adc
xchg
inc
shr
cwde
dec
cld
data16
or
imul
mov
dec
xchg
adc
xor
shr
inc
inc
sub
sub
mov
fs
cmps
sti
mov
push
cmps
das
xor
adc
jle
and
(bad)
fst
lds
in
mov
mov
push
test
adc
adc
and
sub
ret
int3
mov
mov
fist
adc
mov
or
int
add
add
mov
aam
dec
xor
push
aaa
push
or
pop
fidivr
inc
ret
add
loope
push
test
lods
clc
jmp
mov
mov
mov
lods
cld
mov
dec
xor
icebp
adc
jmp
xor
mul
test
mov
test
pusha
xchg
push
sbb
sub
gs
pop
jge
pop
xor
test
int
lods
inc
nop
enter
out
out
sbb
mov
(bad)
jmp
mov
sahf
jne
push
mov
inc
fnsave
xchg
mov
shr
sbb
retf
jmp
test
pop
pop
(bad)
clc
pop
push
pop
push
cmp
inc
dec
mov
out
inc
dec
stc
xchg
adc
mov
jle
into
into
mov
xchg
jg
jmp
push
sbb
mov
retf
daa
loop
sbb
mov
dec
sbb
ret
ins
xchg
jecxz
fs
addr16
mov
jle
push
mul
sub
outs
std
push
mov
xor
mov
int
rol
stos
mov
or
xchg
das
and
push
xchg
sbb
cmps
dec
bound
inc
cmp
sbb
pop
sub
fidiv
and
push
fdiv
loop
in
sub
(bad)
lock
test
das
cmp
push
mov
mov
sbb
push
ret
mov
or
cmp
in
add
popf
(bad)
aad
xchg
pop
aaa
mov
or
adc
add
out
scas
mov
adc
sbb
hlt
inc
and
xchg
movs
int
inc
mov
xor
popf
sub
xchg
pusha
xlat
pop
add
loopne
fdivr
mov
pop
lods
xor
ds
mov
cmc
mov
outs
fild
xor
mov
ins
xchg
mov
add
call
xchg
push
inc
dec
fwait
scas
stos
pop
jp
ja
cwde
sub
mov
xlat
cmp
push
and
xor
jecxz
not
popa
inc
pop
jne
rol
push
rol
aad
inc
sbb
and
ror
dec
dec
and
jmp
pop
lods
shl
(bad)
and
lock
cmp
mov
jae
out
push
push
jno
imul
jmp
dec
fcmovu
das
add
pop
pop
jb
das
add
or
sbb
mov
xor
mov
xchg
hlt
popf
or
test
mov
daa
add
jb
ret
mov
icebp
fmul
mov
sbb
pop
in
dec
rep
clc
dec
test
xchg
xchg
js
inc
xor
xlat
adc
xchg
jl
or
jb
sbb
js
scas
dec
jo
dec
imul
dec
mov
dec
pushf
mov
mov
ins
cwde
pop
lds
aam
clc
stos
pusha
jl
adc
clc
fdiv
retf
aam
nop
gs
pop
outs
cmp
pop
push
leave
lods
fidivr
sub
mov
test
xor
mov
sbb
inc
jo
ret
loop
test
sar
cs
fucomip
dec
pop
(bad)
(bad)
push
adc
add
pusha
adc
in
and
xchg
aas
paddusw
shl
aad
dec
cmps
push
dec
repnz
repz
mov
add
imul
mov
enter
xor
xchg
sahf
push
jge
adc
sbb
sub
out
out
sahf
retf
rol
jnp
jg
add
stos
in
out
push
sub
fdivr
xchg
sub
imul
rcl
inc
(bad)
in
call
adc
dec
js
sbb
jae
shl
inc
cmp
sub
fwait
mov
movs
mov
xchg
inc
fidivr
test
mov
imul
fmul
cli
xchg
repnz
cdq
ret
out
cmp
push
repnz
jp
xor
rol
loopne
lahf
loopne
not
aas
nop
mov
xor
adc
dec
mov
xor
imul
cmp
loop
shl
and
out
or
pop
leave
outs
je
cmp
std
std
mov
jg
jbe
out
push
cli
inc
loope
loopne
pop
add
stos
mov
adc
pushf
pop
popa
jle
push
cmp
(bad)
cmp
pop
inc
(bad)
dec
movs
push
fidiv
lahf
shr
aad
sub
mov
pusha
mov
sbb
adc
xchg
cdq
ds
shl
push
call
repz
xchg
call
sbb
mov
mov
adc
sub
mov
mov
ret
fdivp
push
lahf
sub
fild
outs
mov
and
repz
loopne
imul
dec
xor
arpl
test
cli
sub
sbb
jle
(bad)
push
pushf
fnstenv
mov
sbb
add
mov
mov
fs
ret
xchg
sbb
lods
popf
push
mov
retf
dec
add
sar
mov
in
in
inc
ror
pop
dec
dec
daa
in
push
jns
sbb
xchg
jbe
ret
scas
ss
inc
dec
sbb
in
sahf
mov
xor
pop
aaa
shl
mov
fld
mov
mov
in
jg
ds
rol
rcl
les
jo
icebp
pop
push
imul
test
sub
pop
pop
in
xchg
hlt
(bad)
push
idiv
add
arpl
add
mov
inc
pop
xchg
fdiv
cmp
mov
lahf
aad
je
xor
jno
cmp
xchg
adc
mov
xchg
loope
inc
stc
push
push
mov
pushw
loopne
mov
pushf
xchg
mov
or
xchg
mov
jmp
call
sub
loope
int
lds
movs
ror
bswap
aas
xchg
adc
jp
jbe
stos
imul
cmc
and
dec
das
push
fsubr
mov
xchg
xor
jp
retf
adc
data16
data16
add
sbb
fs
add
pushf
mov
mov
add
test
and
pop
mov
int3
hlt
jo
jno
call
xchg
sub
push
jmp
xchg
imul
pushf
lds
add
cmp
test
in
in
and
test
mov
cwde
inc
push
or
jmp
(bad)
stc
movs
xor
push
idiv
jmp
add
inc
aam
cdq
xor
outs
(bad)
test
fidiv
adc
push
mov
sahf
or
movq
push
ret
sbb
sbb
mov
jno
mov
sub
push
retf
dec
pop
mov
fisubr
dec
mov
out
cld
xor
push
add
or
add
scas
jmp
ret
test
loop
out
int
js
in
in
pusha
(bad)
jp
adc
stos
out
xor
mov
fst
push
int3
mov
push
loope
pop
sub
xchg
cwde
popa
jns
mov
jmp
mov
bound
mov
lahf
sub
add
outs
(bad)
outs
jne
mov
and
daa
popa
inc
lock
fs
cmp
mov
pop
test
(bad)
sub
mov
sar
pop
sbb
cs
mov
leave
idiv
pop
fcomp
(bad)
mov
inc
xor
mov
dec
cmps
mov
jge
call
push
out
ins
cmp
mov
jl
push
scas
das
pop
sbb
and
loopne
test
fmul
stc
movs
mov
mov
fstp
add
popa
test
loop
(bad)
stos
(bad)
xchg
movs
mov
loope
adc
cwde
sub
out
sub
pop
sub
scas
pop
(bad)
push
add
shl
adc
pop
xor
fbstp
cmp
and
es
xchg
pop
cdq
sub
cmp
cmc
lds
std
xchg
pop
inc
or
cmp
pop
and
movs
aam
mov
jb
mov
jmp
or
mov
cdq
arpl
xor
daa
movs
push
mov
push
ss
push
jno
loopne
leave
aas
scas
sub
ret
add
sbb
mov
sbb
jmp
mov
test
xor
fld
(bad)
xchg
addr16
mov
popf
arpl
mov
retf
repnz
icebp
stos
cli
sar
mov
sub
inc
cli
mov
ret
out
hlt
lock
movs
lock
sub
xor
ret
jbe
imul
repnz
cwde
add
arpl
ret
adc
mov
xchg
mov
bound
lds
mov
adc
std
mov
in
repnz
cmps
xchg
in
repnz
push
push
mov
repz
adc
ret
cmp
cmp
push
lahf
js
mov
inc
test
or
add
jae
push
imul
sub
scas
cmp
push
and
pop
mov
inc
mov
aas
nop
and
cmp
stos
in
xor
pop
(bad)
movs
ret
fld
mov
inc
pop
sti
dec
mov
test
xchg
dec
or
ins
mov
push
mov
mov
out
mov
mov
cmps
mov
std
sahf
mov
aaa
ds
daa
(bad)
pop
push
or
stc
dec
mov
outs
in
(bad)
outs
pusha
fisubr
add
(bad)
sub
ror
mov
jg
bound
(bad)
xlat
xchg
mov
mov
and
bound
jns
push
jle
call
enter
mov
pusha
(bad)
ins
(bad)
retf
jp
and
idiv
(bad)
sahf
rol
popf
xor
mov
cmc
ja
mov
cs
pop
arpl
dec
jge
ror
push
std
sub
jmp
inc
inc
mov
and
or
fidivr
popa
and
pop
mov
xor
les
adc
out
leave
mov
sub
push
shl
test
(bad)
sbb
jns
xor
add
(bad)
loop
pop
dec
aad
mov
add
push
xchg
aad
lds
adc
sub
stos
add
mov
jnp
rcr
or
in
movs
push
in
fadd
fisttp
fs
jecxz
jge
ret
fsub
repnz
pop
and
sub
sti
inc
fsubp
cs
add
add
icebp
mov
adc
ins
test
aaa
outs
stos
dec
dec
push
nop
cmp
xchg
or
retf
push
inc
xchg
(bad)
hlt
loope
es
fs
adc
sti
out
pop
sbb
cmp
scas
mov
sbb
mov
mov
into
cmp
mov
sbb
nop
xchg
add
inc
outs
and
adc
or
jnp
xlat
in
or
or
cmps
mov
lds
das
mov
and
jmp
jns
mov
jle
(bad)
adc
dec
ss
gs
aaa
ins
ror
fstp
dec
leave
add
ficomp
imul
push
ror
cs
xor
pop
adc
loopne
mov
scas
mov
xchg
rcr
xor
(bad)
cmps
scas
sahf
cdq
pop
pop
mov
cmp
ficomp
out
push
and
mov
sbb
push
(bad)
in
data16
mov
xor
mul
cli
repnz
sbb
pop
cmp
mov
int3
pop
xchg
popf
jg
outs
ss
out
fld
xor
mov
xlat
sar
std
fidivr
mov
test
mov
jnp
test
sub
jecxz
or
push
add
adc
add
push
cmp
cmps
ret
rcl
fwait
xor
clc
fucomp
or
xor
sub
jae
mov
mov
dec
dec
ds
cs
add
push
idiv
fsubr
outs
mov
arpl
or
sbb
dec
scas
jb
inc
jl
ins
js
cmps
xchg
sub
ja
and
call
mov
adc
push
out
outs
int
call
inc
jo
mov
dec
add
sbb
jmp
jnp
mov
cmp
xchg
lods
or
mov
repz
or
adc
inc
or
xchg
out
cdq
xchg
lea
or
into
jnp
mov
or
or
xchg
add
jne
and
or
adc
push
stos
test
out
loopne
xor
mov
aad
and
fsub
push
sub
jmp
dec
bound
scas
test
push
mov
dec
add
in
inc
ret
mov
jmp
in
outs
jg
xor
mov
je
push
jp
jge
mov
std
sbb
jb
xchg
cld
adc
xor
jbe
sahf
jno
into
retf
(bad)
out
aaa
arpl
cmp
add
pop
mov
push
popf
in
(bad)
ret
scas
adc
lds
stc
mov
ds
clc
cmp
(bad)
aad
pop
aam
jb
into
push
sub
sbb
imul
cmps
add
and
jb
inc
das
mov
inc
lea
aaa
jge
mov
sub
cmp
mov
std
add
cmp
jae
lahf
clc
cwde
dec
pop
pop
jmp
cmp
enter
cdq
cmc
jg
test
or
adc
xchg
inc
outs
ins
les
jns
inc
test
add
xchg
mov
xchg
out
xchg
and
clc
jo
aas
in
js
cs
inc
inc
push
je
mov
mov
movs
aam
inc
pop
xor
sub
hlt
mov
pop
mov
mov
sub
fadd
jmp
arpl
pop
fild
push
and
jle
and
ja
test
call
push
rcl
aaa
dec
dec
mov
xchg
add
dec
mov
aad
inc
sub
lods
jb
pop
call
inc
xchg
jno
cmps
ds
js
int
fdivr
cwde
frstor
daa
jo
les
pop
dec
sub
shl
enter
jne
sub
fsub
ss
cmp
out
mov
or
stc
sbb
popa
fsub
div
mov
push
add
imul
into
jge
js
out
int
rcr
out
mov
jl
or
mov
sbb
add
xchg
pop
xor
pop
jg
jo
push
cmp
je
(bad)
pusha
cmp
mov
mov
rcl
sub
ficom
fnsave
sub
sbb
mov
xchg
mov
lea
dec
mov
ja
mov
push
mov
outs
fdivr
jmp
les
shl
movs
dec
push
test
(bad)
jmp
xchg
ins
adc
retf
jb
(bad)
or
(bad)
sbb
repnz
cmps
push
sbb
ds
stos
lea
adc
inc
loope
jge
dec
xchg
cmps
sbb
stos
outs
in
retf
lahf
gs
and
mov
ret
add
hlt
mov
and
popf
cld
mov
mov
xor
inc
jbe
add
mov
movs
aaa
dec
rcl
jmp
test
sbb
(bad)
test
fs
sbb
fcomip
out
gs
or
pop
cld
xor
xlat
test
sar
sbb
leave
pop
gs
test
xor
ret
stos
xor
lods
mov
xchg
imul
(bad)
adc
jg
sti
into
es
js
pop
sub
and
mov
lods
add
mov
retf
ror
and
enter
or
lds
push
enter
test
adc
sub
add
adc
mov
outs
les
or
or
jg
rcr
shr
add
sub
dec
mov
out
loop
mov
inc
lods
icebp
je
push
push
ins
add
aad
mov
push
popf
mov
jg
jb
ins
sbb
push
cmp
call
(bad)
sub
cmp
in
(bad)
arpl
add
fimul
jne
sub
movs
push
xchg
inc
mov
add
fs
xor
cmp
sub
mov
mov
rcr
loope
and
jge
js
jmp
jbe
lods
cmp
pop
mov
lock
popaw
inc
sub
adc
inc
dec
mov
sub
sub
mov
in
ja
bound
xor
mov
out
daa
and
ins
push
mov
mov
mov
aas
iret
sar
push
in
stos
pop
jmp
jb
inc
clc
das
movs
jge
xlat
cmp
dec
cmp
and
sbb
or
mov
call
pop
push
xchg
xor
jp
mov
jecxz
mov
les
sar
aaa
icebp
lods
cli
rcr
movs
mov
out
mov
ss
jp
ins
dec
ins
and
aad
ja
add
add
jecxz
je
in
adc
mov
test
dec
jno
sbb
pop
jnp
fsubr
out
mov
ror
scas
loopne
mov
mov
sub
sti
jne
inc
inc
inc
adc
das
cmp
mov
push
in
adc
and
(bad)
cmp
mov
push
ins
rcl
(bad)
retf
sar
leave
pop
jle
inc
sbb
mov
popa
ins
push
add
retf
jge
sti
cmp
loope
ret
repz
aaa
aas
jmp
ins
int
ins
outs
cmp
xchg
pop
in
mov
jle
jne
cmps
cmp
adc
xor
xchg
mov
fdivrp
arpl
into
sbb
cmp
lods
and
call
xchg
inc
in
(bad)
div
daa
mov
jecxz
mov
cmp
sbb
cs
inc
fs
push
(bad)
test
call
sbb
sahf
into
iret
mov
push
pop
xchg
mov
mov
cmp
cdq
scas
xor
adc
fstp
dec
stc
jb
or
mov
sub
jb
jl
(bad)
sar
sbb
jo
mov
jmp
xlat
ficomp
adc
aaa
inc
daa
mov
repnz
and
xor
sbb
pop
fistp
int
outs
pop
adc
and
cwde
cld
inc
test
mov
and
hlt
and
inc
lods
sahf
imul
mov
repnz
jmp
in
push
call
stos
cmp
mov
(bad)
mov
mov
ss
mov
and
int
cmp
or
fldcw
in
in
fwait
shl
scas
mov
or
pop
in
sub
jno
cmpps
dec
mov
push
ins
xchg
pusha
clc
xor
add
out
loopne
dec
mov
mov
(bad)
lea
(bad)
fmul
mov
xchg
call
ds
cli
sub
adc
jns
addr16
jl
inc
mov
jle
xchg
enter
repz
push
(bad)
cmp
jle
je
rcl
daa
call
(bad)
movs
xchg
test
or
ja
lods
push
jo
fst
test
mov
fisttp
pop
jp
aad
dec
es
(bad)
(bad)
out
sar
jne
dec
adc
pop
sar
mov
jae
add
stos
sti
mov
dec
cmp
stos
xor
cmp
pop
jge
fsubr
loop
cmps
int3
inc
inc
call
je
xchg
stc
push
loopne
fsub
out
dec
inc
rcr
xor
inc
inc
adc
add
in
push
int3
cli
emms
cwde
(bad)
out
(bad)
(bad)
sti
popf
adc
pop
fs
fdiv
push
js
movs
test
mov
mov
mov
push
shl
fsubr
imul
mov
enter
je
mov
idiv
or
stos
mov
or
xchg
(bad)
mov
test
inc
cmp
mov
aam
fisub
mov
or
inc
daa
or
jae
call
cmp
mov
xchg
push
or
inc
adc
add
dec
cmp
cli
sub
retf
pop
mov
or
rcl
pop
dec
ds
lds
idiv
stos
xor
ss
add
cmp
sti
sub
idiv
mov
add
fnstenv
clc
cmp
outs
push
shl
lock
xor
fiadd
or
xchg
lea
add
xor
mov
inc
mov
sub
push
in
lds
rcr
xchg
sar
fiadd
loop
push
pusha
pop
adc
stc
cmp
repz
aas
out
lock
jb
mov
sub
adc
inc
xor
cwde
or
sti
icebp
outs
adc
test
in
sbb
mov
rcr
movs
or
cs
mov
fldz
in
sub
pop
cmp
(bad)
dec
rol
push
adc
and
pop
xchg
out
sti
adc
cmps
mov
xchg
test
jae
or
sahf
(bad)
out
cld
jle
popf
popa
xchg
xchg
(bad)
scas
adc
pop
mov
in
add
fiadd
jns
inc
sbb
push
mov
sar
int3
imul
or
pop
inc
fs
or
dec
iret
(bad)
es
icebp
repnz
jle
xor
mov
aad
mov
cld
div
mov
mov
push
sub
xchg
repz
mov
xchg
fdiv
ret
mov
mov
in
push
xchg
xchg
dec
fwait
rcl
jge
push
je
push
pushf
fs
mov
fist
rcr
jmp
jnp
les
vmread
js
mov
fist
or
inc
scas
shl
mov
xor
rol
adc
scas
retf
jecxz
neg
in
aas
mov
rol
loope
and
sbb
aaa
add
mov
push
sahf
pop
ret
cdq
mov
mov
inc
or
pusha
hlt
mov
and
fyl2x
idiv
cmp
mov
das
or
mov
lahf
cmc
push
sub
mov
mov
ja
int3
leave
xchg
mov
retf
dec
stos
ins
or
(bad)
mov
rcr
cmp
xchg
mov
cwde
push
mov
cmps
dec
loopne
xor
cmp
mov
xchg
lahf
(bad)
call
icebp
fistp
ret
movs
cmp
xor
shl
(bad)
jp
and
es
pop
cwde
add
shl
rol
xchg
std
test
and
sbb
sbb
sub
adc
movs
inc
push
xor
loop
cmp
xor
mov
hlt
icebp
pop
jecxz
lods
jle
(bad)
push
inc
popa
imul
jo
xor
imul
int3
mov
push
sti
mov
lahf
shr
or
int3
loopne
sub
enter
faddp
pop
xor
cmp
loop
aad
sbb
fld
add
iret
push
push
ins
dec
retf
inc
jno
adc
push
(bad)
std
outs
mov
xchg
dec
ret
shr
sub
sub
(bad)
cs
mov
test
sbb
outs
subps
jmp
xchg
inc
mov
dec
push
sub
jecxz
std
mov
mov
add
push
adc
push
sbb
pop
shr
push
mov
imul
stos
push
imul
dec
push
test
pop
sbb
test
mov
push
repnz
mov
loop
mov
cmp
rol
movs
add
shl
outs
inc
ins
sub
inc
lds
mov
inc
ins
mov
dec
jmp
dec
mov
push
inc
cld
icebp
(bad)
jo
clc
dec
mov
and
dec
sub
inc
pop
fwait
or
and
rcr
loop
out
jns
call
sbb
push
imul
nop
xor
push
(bad)
aaa
(bad)
mov
sbb
jp
pop
or
cmp
mov
pop
mov
fist
jns
jmp
(bad)
mov
dec
cld
pop
sub
repnz
push
shl
popf
add
nop
ret
jnp
test
mov
enter
pop
fs
xor
sbb
mov
stos
mov
or
xchg
lods
cs
jecxz
add
pusha
sub
dec
inc
call
inc
cmps
ficom
mov
fstp
or
das
xor
(bad)
mov
and
mov
call
pop
movs
sar
cmp
inc
sbb
pop
mov
sbb
movs
sub
pop
ins
mov
mov
dec
and
cmp
nop
jae
popf
xchg
mov
jb
xchg
jb
shr
sti
not
push
inc
pop
fld
mov
xchg
ds
(bad)
and
lea
clc
cmc
add
inc
and
outs
icebp
xchg
xchg
xor
mov
int3
add
add
pop
cmp
sub
rol
and
or
jmp
dec
icebp
pop
fnstcw
ins
lock
dec
dec
stc
sbb
dec
mov
fldenv
fs
mov
add
loopne
and
call
sbb
add
loop
rol
ret
or
inc
(bad)
mov
jge
out
add
sbb
xor
push
mov
pushf
lahf
jl
xor
out
cmp
scas
or
out
call
push
cmps
scas
loop
fsub
fsubr
aaa
rcr
(bad)
mov
(bad)
repz
scas
fcmovnb
cmc
cmp
out
sbb
mov
xor
shl
fnsave
shl
jp
push
in
cmps
pop
pop
in
add
ins
inc
lock
push
lods
fsubr
xor
ror
or
fild
jge
sbb
adc
loope
mov
or
add
lea
cld
into
xor
add
xchg
stc
sti
jbe
out
and
iret
cdq
(bad)
mov
pop
lock
test
jb
in
pop
xchg
outs
pop
scas
lahf
or
aad
stos
je
cmc
adc
mov
sbb
popa
or
int
es
cdq
retf
xor
sbb
or
push
ins
outs
ds
popf
fs
or
or
mov
xchg
cmp
or
xchg
jge
sbb
cmp
mov
xor
mov
xchg
adc
sub
imul
mov
or
xchg
inc
add
xlat
fxch
mov
dec
push
call
pop
jmp
imul
and
pop
sbb
jne
or
fidiv
and
push
in
jmp
dec
je
fdiv
mov
test
fld
inc
add
xor
and
leave
xchg
mov
jle
add
mov
shl
stos
pop
outs
jle
xor
adc
push
mov
inc
push
xchg
sti
pop
loopne
push
or
outs
jo
jp
(bad)
push
cdq
xchg
dec
adc
jg
hlt
pop
mov
fnstenv
push
outs
mov
aad
push
cmp
lods
inc
nop
std
jbe
push
(bad)
in
xchg
hlt
and
adc
gs
pop
xor
sbb
jbe
loope
xor
jmp
lds
(bad)
inc
movs
mov
fild
cmc
mov
pop
pop
outs
pop
sar
add
jne
popa
sub
pusha
loop
xor
push
push
ds
scas
les
sbb
leave
movs
xchg
cmc
lods
in
mov
jl
mov
jge
jmp
add
adc
mov
jnp
test
push
pop
mov
and
push
and
cdq
jno
test
or
out
sub
mov
stos
inc
push
inc
int
jmp
xchg
xchg
ss
repnz
das
xor
clc
jg
clc
dec
int3
push
jo
aas
mov
test
xor
jmp
pop
lock
xlat
fst
shr
pop
daa
mov
jns
outs
(bad)
add
or
addr16
int
mov
cmp
cmp
dec
pop
inc
std
outs
outs
pop
aam
adc
xor
imul
ins
cld
and
jne
loope
out
int
adc
mov
pop
add
or
dec
adc
aas
pop
xchg
imul
push
loope
mov
imul
(bad)
jnp
test
enter
repnz
mov
xchg
and
xchg
xor
adc
loop
aaa
mov
mov
lods
mul
pop
cdq
push
cmps
cdq
int
shl
mov
ja
stc
jbe
sahf
shl
nop
adc
nop
in
sub
loope
mov
stc
push
in
push
push
add
sbb
inc
mov
or
pop
dec
outs
ret
pop
inc
xchg
sahf
dec
mov
pop
inc
cmp
movs
fisubr
retf
adc
or
mov
(bad)
mov
xor
mov
fwait
push
push
pop
adc
rol
dec
lods
call
and
jae
mov
or
ins
sub
sub
jle
div
lock
fdivr
(bad)
fmul
fsubr
xlat
xor
ror
aaa
pop
(bad)
xchg
sub
jns
pop
ds
mov
nop
test
add
(bad)
dec
repz
adc
std
pop
lock
inc
sub
stos
sub
jmp
xchg
mov
jbe
add
rcl
fcom
jmp
out
cdq
imul
sbb
movs
fdiv
mov
ins
push
out
mov
inc
sbb
nop
mov
mov
push
dec
loopne
(bad)
std
mov
jmp
add
mov
js
inc
mov
fcom
fsub
inc
in
enter
push
dec
lods
or
jmp
xchg
ds
pop
jo
jbe
pop
gs
adc
test
ins
out
push
cwde
push
mov
mov
push
jmp
call
jo
repz
cmps
test
lods
les
mov
cmp
scas
or
mov
(bad)
mov
push
mov
mov
(bad)
xor
pop
mov
jecxz
lea
and
(bad)
mov
(bad)
and
jp
mov
call
pop
inc
sbb
xchg
pop
call
loopne
mov
jns
pop
xchg
pusha
sub
mov
outs
sub
jl
adc
shl
jl
sbb
cmp
aam
push
cmps
jle
or
test
test
mov
scas
push
cwde
movs
cdq
mov
test
or
mov
sub
fsubr
sub
cmp
jle
inc
adc
cmovbe
pop
movs
push
mov
sahf
es
jno
daa
popf
repz
loopne
xor
call
cdq
add
ror
rcr
jecxz
(bad)
outs
sbb
cmc
sbb
adc
add
mov
or
xor
mov
iret
mov
mov
jmp
sar
mov
lods
sub
push
mov
fst
clc
ja
loop
push
inc
jb
pop
cmp
dec
cli
mov
rol
mov
sbb
sar
adc
pop
fs
xor
popa
add
xchg
bound
add
mov
loopne
adc
add
leave
pop
out
mov
shr
lock
hlt
out
jecxz
mov
sbb
jno
(bad)
fimul
pop
scas
ret
xor
add
imul
out
xor
inc
jnp
mov
adc
mov
xlat
pop
adc
in
or
ret
test
retf
arpl
jp
aam
push
inc
sar
inc
cld
jge
or
pop
inc
les
cwde
out
fmul
movs
xor
or
imul
cld
and
les
unpckhpd
pop
aam
inc
(bad)
in
neg
pop
stos
nop
bnd
frstor
inc
fstp
jl
call
das
push
inc
ja
inc
sbb
rcr
scas
pop
push
movs
retf
es
cli
lods
cwde
xchg
imul
add
mov
inc
inc
dec
iret
mov
pop
(bad)
dec
lods
inc
std
xchg
hlt
or
sub
sbb
jne
call
neg
pop
dec
repz
lods
add
inc
ret
jne
sbb
sbb
xchg
inc
inc
call
xor
add
cdq
popa
fwait
push
ss
mov
ins
adc
cmc
xor
aam
push
push
add
js
cmps
sbb
mov
and
mov
lods
sahf
mov
gs
xor
xchg
sahf
inc
sbb
and
pop
mov
std
pop
out
ret
mov
shl
hlt
inc
shl
out
sbb
icebp
push
cmp
dec
jb
aas
std
cmp
in
and
sub
sub
mov
repz
dec
pop
aad
mov
adc
mov
movs
sahf
pop
inc
cmps
lock
stos
stos
mov
sbb
xor
jnp
(bad)
adc
mov
fs
add
sbb
adc
mov
or
cli
stc
add
mov
repz
stos
loop
stos
add
push
ds
xchg
into
or
mov
das
push
js
out
mov
jb
mov
push
mov
pop
fucomi
int3
or
rcr
inc
cmp
add
pop
or
mov
ret
mov
shl
out
mov
test
arpl
lea
sbb
retf
xchg
int3
daa
es
cmp
inc
adc
mov
or
imul
iret
jle
push
cld
les
fld
(bad)
out
fisttp
dec
mov
cmp
cmps
adc
sub
push
dec
aas
jbe
inc
std
mov
fidivr
mov
jl
movs
inc
iret
outs
ret
fstp
mov
lods
push
cmp
xchg
lea
js
jg
fild
ficom
ss
fwait
mov
or
int
fst
pop
out
popa
inc
es
xlat
pop
ja
inc
lods
cmps
cdq
inc
arpl
dec
and
mov
xlat
stc
jg
test
add
jle
(bad)
jnp
ret
std
and
add
les
mov
inc
std
in
or
dec
sbb
stc
jge
jg
or
in
xchg
pop
scas
dec
in
inc
dec
sbb
xor
jo
push
inc
cli
pop
stos
pop
push
xchg
ins
add
mov
jp
mov
mov
call
and
(bad)
mov
xor
js
cmp
out
lahf
xor
in
std
dec
fimul
pop
loop
push
repz
fst
fnstcw
mov
scas
and
scas
(bad)
retf
lods
cmps
cmp
sub
dec
in
inc
jp
dec
jecxz
jne
xor
shl
adc
jno
xchg
adc
rol
adc
test
imul
popf
or
loop
fimul
les
sub
push
inc
sub
and
cld
adc
popa
popa
stos
bound
push
out
clc
and
mov
sub
sub
push
repz
test
int3
imul
adc
pop
add
cs
push
(bad)
clc
xor
scas
jne
ja
call
mov
dec
xchg
loopne
jbe
repz
mov
add
cmp
and
mov
push
dec
retf
out
inc
aad
repz
rcl
pop
(bad)
je
xor
mov
fild
je
and
xor
add
aad
lods
stos
retf
xchg
ret
inc
jns
nop
dec
or
sub
push
dec
pop
push
mov
sbb
inc
push
loop
dec
popa
inc
or
mov
lds
inc
jo
repnz
inc
mov
jp
and
test
les
jne
mov
sti
and
mov
call
inc
ss
sub
ficom
sub
mov
mov
sti
dec
ret
(bad)
clc
and
pushf
cmp
mov
iret
pop
mov
clc
sub
fldenv
popf
push
xchg
jp
jp
stos
pusha
cmps
sub
inc
xchg
pop
or
mov
ret
or
and
and
scas
jg
inc
ret
les
add
enter
fimul
hlt
ror
add
lods
outs
xor
pop
sub
adc
push
jge
jne
ret
test
sub
pop
push
sbb
inc
dec
xchg
in
aam
jl
gs
shl
shr
pop
mov
dec
shl
push
dec
das
cld
cld
cld
cmp
or
sub
cmp
movs
aad
inc
ds
jno
fldenv
pop
or
jge
cdq
mov
aas
push
jg
out
ins
enter
icebp
fldenv
pop
pop
sub
mov
push
mov
cmc
fcmovne
repnz
mov
cs
adc
pop
mov
mov
jbe
es
push
jecxz
in
enter
jg
cmp
sub
fs
(bad)
fnstcw
cmp
aaa
aas
call
sub
shl
xchg
loopne
sar
dec
xchg
and
fnstsw
sub
pop
or
loopne
(bad)
repnz
(bad)
imul
push
ret
mov
mov
add
xor
mov
push
inc
pop
cmp
std
(bad)
cmp
jp
fwait
xor
sub
mul
cmp
out
sub
mov
aas
dec
mov
push
mov
movs
data16
lods
out
mov
shr
or
pop
clc
lahf
sbb
cs
cmps
dec
fwait
in
out
sub
in
stos
sub
sub
(bad)
loop
cmps
aaa
pushf
xchg
jl
pop
lods
pop
iret
push
cmps
mov
jae
push
idiv
xchg
in
jno
xchg
ja
cmps
or
add
gs
xor
adc
cli
call
out
mov
and
mov
mov
mov
lods
es
jg
xor
add
push
inc
mov
jle
imul
pop
ins
pop
sti
out
aam
(bad)
ror
iret
mov
in
and
out
repnz
sbb
jge
lds
add
and
aam
jbe
mov
in
xchg
(bad)
xchg
test
cmp
out
das
jae
mov
mov
or
cmc
pushf
aaa
cmp
push
fisttp
fbstp
or
dec
jns
dec
div
cmp
test
add
imul
(bad)
xor
adc
lea
ins
sar
jle
push
hlt
pop
je
std
sti
xchg
pop
stc
aas
cmp
rcl
dec
fsub
pop
mov
fwait
xor
scas
and
xchg
mul
in
and
sub
dec
xor
sub
cld
pop
bound
imul
inc
test
lods
pop
fst
movs
rol
sub
les
xor
aad
push
cwde
(bad)
and
mov
jbe
cld
or
into
ins
xor
gs
dec
scas
and
fcomp
icebp
pushf
inc
jp
fidivr
dec
mov
hlt
xor
sub
ret
cmc
pop
pop
in
lds
sub
es
cmp
loopne
call
out
mov
out
les
pop
jmp
xchg
in
out
sbb
outs
jge
cld
ins
jmp
cli
popf
push
mov
fidivr
adc
daa
dec
call
inc
push
bound
ja
inc
aaa
scas
sbb
cmp
movs
jge
sbb
inc
sub
vpsraw
mov
adc
xor
xor
cmp
cld
into
sbb
aaa
icebp
lahf
or
aaa
mov
outs
xor
mov
test
mov
das
mov
mov
imul
out
pushf
es
stos
das
xchg
xchg
std
mov
fadd
sub
retf
fidivr
stos
dec
jle
cmp
lds
imul
mov
mov
jl
lock
(bad)
jo
mov
enter
push
or
push
xchg
(bad)
shl
lea
mov
out
fmul
and
dec
nop
jecxz
and
test
imul
std
and
cwde
in
mov
js
jge
sbb
and
out
je
cmp
fidivr
mov
jle
rcl
and
xchg
jbe
scas
das
sbb
jae
popa
cmps
sti
xor
inc
xor
test
iret
cs
cld
pop
scas
sahf
loopne
jae
and
xchg
inc
jmp
sbb
lods
leave
push
cmp
inc
cli
add
movs
fnsave
ds
repnz
sahf
fwait
iret
xor
or
cmp
or
and
mov
popa
push
jno
popf
(bad)
mov
push
cwde
jmp
mov
pop
push
add
aas
pop
and
or
imul
jge
adc
mov
outs
in
(bad)
in
iret
aas
pop
iret
clc
js
movs
movs
popa
or
popf
fdivr
xchg
leave
sbb
dec
pushf
shl
fcmovbe
dec
mov
fcomp
jb
imul
inc
xchg
loop
retf
shl
daa
mov
xor
mov
(bad)
mov
jo
add
xchg
sbb
xlat
mov
(bad)
adc
iret
adc
xchg
test
call
int3
add
and
cli
mov
lea
leave
jge
ret
inc
cs
push
sub
mov
ret
mov
push
fs
mov
(bad)
idiv
cmp
pop
xchg
je
inc
cmp
movs
aaa
div
and
jns
enter
cmp
sbb
xchg
and
(bad)
out
inc
stc
movs
fist
inc
in
cmc
push
scas
loop
push
fdiv
pop
test
(bad)
xor
test
or
inc
xchg
imul
jmp
out
(bad)
and
sahf
aas
scas
add
jg
sub
fdivrp
data16
pop
call
xchg
mov
push
or
std
xchg
push
jbe
pop
jno
inc
into
cmp
pop
dec
call
add
sub
loopne
call
mov
xchg
pop
xor
sbb
jnp
and
xchg
cmp
sar
icebp
or
push
ret
xchg
dec
shl
jmp
pop
mov
sbb
inc
push
jnp
and
ret
cwde
in
call
sub
(bad)
ja
in
aad
add
retf
std
adc
dec
outs
sbb
mov
cmc
out
xchg
jno
inc
push
push
jmp
jle
inc
out
xchg
dec
ins
pusha
pop
js
aam
imul
add
sub
and
les
mov
pop
mov
pop
push
jmp
das
stos
mov
rcr
sbb
inc
and
jp
and
fidivr
jns
mov
pop
and
push
sti
and
lea
out
dec
jl
push
cmps
pusha
sti
pop
nop
cmp
mov
jbe
cs
daa
push
add
mov
xor
in
mov
push
xor
retf
mov
jg
mov
mov
in
jle
cs
mov
rcr
mov
or
xor
push
cmc
push
ja
emms
add
fwait
in
sbb
or
adc
push
icebp
sub
add
imul
inc
test
xor
xchg
retf
push
push
fild
and
mov
adc
xchg
and
cmps
mov
push
push
jne
popa
dec
xchg
add
addr16
cmp
jae
push
addr16
mov
dec
(bad)
adc
inc
sub
fcom
cs
inc
lods
add
push
sub
mov
dec
iret
pop
movs
jecxz
push
adc
stos
jbe
pop
inc
pop
add
std
pop
sub
daa
cmps
ins
mov
cli
jge
adc
mov
out
dec
sub
mov
pop
fcomp
test
les
push
jecxz
sub
aad
out
lods
out
clc
retf
push
pop
jb
popa
add
and
aad
add
hlt
ins
loope
sti
dec
adc
ins
(bad)
ss
dec
lods
push
out
push
add
xchg
dec
out
ror
rol
sbb
(bad)
call
adc
sbb
push
pop
cli
cld
xor
xchg
pusha
idiv
ret
push
adc
and
jle
push
popa
(bad)
out
sbb
nop
mov
test
fst
and
scas
or
xchg
fst
nop
pop
mov
push
cmc
sbb
js
cmc
adc
mov
test
push
push
sar
xor
lods
dec
dec
iret
cmp
cwde
popa
pop
push
mov
xchg
inc
rcr
push
(bad)
adc
push
ins
add
pop
pop
rcl
mul
push
(bad)
mov
xor
xor
unpcklps
adc
mov
fcom
pop
outs
and
pop
fbld
mov
adc
sub
pop
adc
or
pop
ror
loope
cmp
imul
pop
and
mov
adc
mov
and
add
mov
pusha
inc
dec
cmp
(bad)
push
cmps
push
push
lea
lds
dec
jb
in
rcr
fwait
and
pop
pushf
daa
cwde
stos
jmp
ficomp
add
xor
and
mov
mov
dec
sub
ret
cdq
dec
js
lahf
rol
ins
jmp
jge
adc
and
push
movs
jae
mov
add
jbe
in
fnstenv
mov
aam
add
sub
jmp
lods
vpaddsb
ror
rcr
push
or
jmp
ds
outs
in
xlat
mov
bound
mov
sbb
xor
sbb
iret
cmp
mov
cmc
into
cs
aam
popf
and
add
pop
jb
scas
je
fist
(bad)
xchg
sbb
test
adc
fistp
or
cmp
mov
mov
lock
mov
dec
or
test
add
xor
mov
cmps
arpl
sub
call
retf
mov
shr
mov
and
aas
rcr
ret
lahf
jmp
add
rcr
cdq
sbb
xor
mov
mov
out
mov
call
dec
movs
cmp
inc
jbe
xor
fwait
mov
lods
neg
mov
arpl
sub
cwde
popa
xlat
mov
jae
popf
mov
cli
cmc
ss
data16
dec
mov
aad
jp
sbb
repnz
gs
jnp
jmp
mov
push
and
into
popf
inc
in
and
pop
cmp
mov
pop
in
add
pop
test
mov
sbb
lock
clc
lods
aas
dec
jbe
jne
pushf
js
repz
loope
(bad)
imul
dec
lods
dec
jns
ret
cmp
add
push
into
adc
loope
ret
mov
inc
cmc
jmp
int
jle
shl
stos
lahf
ins
mov
pusha
xor
cmp
pop
repz
jg
pop
cli
test
xchg
shl
inc
xor
adc
pop
jae
sub
in
nop
pop
(bad)
or
dec
jmp
cs
in
fnstcw
mov
inc
mov
add
push
adc
in
xchg
lods
lods
aad
stos
ja
jl
aas
idiv
xchg
dec
pop
clc
rcl
cmp
jmp
mov
scas
xor
add
movs
sub
pop
pop
jns
adc
lods
jg
mov
in
and
inc
mov
sbb
ja
out
mov
sbb
loope
ror
(bad)
or
fisttp
sub
sbb
mov
mov
dec
pusha
(bad)
xchg
adc
sub
add
pop
pop
(bad)
jo
jne
jl
sub
or
ss
sub
or
and
std
push
(bad)
in
adc
mov
mov
shl
xchg
push
addr16
(bad)
mov
(bad)
retf
xor
imul
push
pop
pop
adc
repz
test
or
mov
jle
xor
inc
and
(bad)
(bad)
pop
mov
inc
mov
(bad)
jmp
les
(bad)
test
(bad)
mov
push
xchg
dec
jl
cli
aaa
pop
add
fcom
mov
icebp
nop
lea
in
push
push
jmp
mov
add
movs
sub
jae
rcr
mov
mov
sbb
xor
and
mov
xor
aad
iret
movs
jg
or
push
xchg
and
nop
loope
cmp
sahf
mov
sbb
out
cmp
int
outs
out
arpl
sar
ja
jnp
ror
jge
call
pop
xchg
mov
cwde
nop
xchg
ficom
and
in
mov
popf
mov
inc
mov
fidiv
pushf
adc
out
mov
xchg
xor
(bad)
enter
jbe
xor
iret
sti
dec
adc
jae
cmp
jb
add
mov
dec
ins
sbb
pop
pop
sbb
popf
ss
sbb
call
pop
js
add
mov
push
sbb
data16
pop
mov
add
mov
je
icebp
aam
mov
dec
push
in
and
sti
loopne
loope
call
(bad)
jmp
xchg
mov
pop
xchg
test
add
dec
ja
(bad)
lds
std
ins
lock
movs
push
in
dec
mov
ret
sahf
jno
cmps
push
ret
inc
test
arpl
nop
dec
test
push
jecxz
in
call
adc
jae
hlt
adc
pop
imul
jns
cli
frstor
cmps
xor
ds
xchg
push
out
es
fild
inc
call
test
(bad)
or
push
fdivr
push
cmp
inc
fs
add
dec
mov
scas
push
xor
mov
ja
aas
ret
ror
pop
jge
stos
lods
daa
(bad)
ds
jne
cmp
pop
dec
leave
xchg
inc
pop
ins
imul
jge
xor
stc
out
ret
adc
lods
adc
enter
shl
es
or
or
es
mov
dec
mov
cdq
mov
sbb
xchg
daa
or
or
jp
push
mov
dec
and
sub
mov
std
adc
sub
xchg
jo
dec
cmps
sbb
mov
inc
mov
outs
adc
add
fs
outs
cdq
fild
pushf
cmp
and
add
(bad)
stc
dec
pop
mov
pop
push
rol
or
pop
pop
sub
xor
outs
pop
fild
(bad)
movs
mov
sbb
sub
test
sub
xor
ss
jnp
mov
push
inc
xor
aad
add
mov
shl
fidivr
mov
int
in
cmp
pop
jae
push
add
jl
rcl
lods
sbb
dec
stc
cli
pop
clc
sbb
xchg
xchg
std
rcl
xlat
xchg
lahf
cwde
or
adc
test
je
pop
out
and
movs
in
mov
mov
shl
jne
pop
gs
pusha
in
sahf
xchg
mov
stos
leave
loop
xchg
jmp
cld
loope
sbb
stos
mov
mov
jnp
in
jp
xchg
push
rol
add
mov
sub
jno
arpl
neg
xchg
test
jne
push
xlat
cmps
and
dec
cmp
jg
aam
lods
xchg
jmp
popf
in
and
pcmpgtd
dec
pop
mov
sbb
inc
push
aad
add
hlt
scas
arpl
xor
inc
dec
cmp
xor
dec
rcr
loopne
jmp
(bad)
repnz
push
in
enter
ret
sub
imul
push
stc
sar
and
call
dec
arpl
test
lock
add
mov
nop
das
pop
xor
lods
shr
inc
lds
cmp
sbb
outs
sub
adc
sub
pop
mov
sar
std
mov
cmp
push
push
outs
sub
push
jg
stc
mov
(bad)
loope
jl
adc
ja
daa
mov
int3
jecxz
cli
xor
mov
mov
arpl
xor
dec
sub
nop
ds
fisubr
bound
pop
mov
(bad)
(bad)
add
js
or
icebp
mov
mov
push
repz
mov
and
dec
push
mov
scas
enter
cs
fdivr
les
adc
gs
je
sbb
sbb
repnz
int3
arpl
fadd
mov
popa
mov
fs
(bad)
in
fwait
test
or
pop
hlt
mov
fdiv
push
mov
out
cmp
inc
xchg
clc
pop
sub
mov
mov
adc
mov
xchg
lds
fsub
cmp
in
push
idiv
lahf
ins
or
and
call
sub
sahf
mov
xchg
dec
ss
daa
adc
fisttp
out
sub
std
sbb
sub
les
add
outs
inc
sahf
add
fiadd
ds
cmps
loop
imul
sub
ins
push
sub
loopne
std
jne
or
sbb
push
inc
bound
lds
(bad)
int
pop
cmc
pop
sar
ins
lods
jecxz
ins
jg
cmc
cmp
xor
inc
stos
(bad)
mov
add
ins
sbb
sti
outs
inc
mov
nop
stos
sar
push
ds
(bad)
adc
scas
mov
rcl
and
aad
sbb
fdivr
lods
into
push
xchg
pushf
mov
mov
test
mov
xor
adc
clc
push
icebp
clc
in
pop
test
ret
push
mov
xchg
jae
gs
and
dec
dec
adc
xlat
jbe
xchg
retf
push
out
int
aaa
sbb
xchg
ins
inc
adc
retf
icebp
bound
mov
mov
call
cmp
in
mov
fwait
rol
xchg
jns
bound
jecxz
scas
inc
adc
inc
mul
(bad)
cmp
ret
lds
les
in
add
and
xor
jb
adc
dec
pushaw
fimul
adc
pusha
push
pop
add
add
xlat
jl
jbe
retf
jb
dec
xlat
dec
das
add
fnstsw
cmc
shl
imul
inc
cmc
mov
inc
inc
mov
adc
out
pop
adc
cli
icebp
push
jp
xor
push
ins
fsubr
mov
add
and
push
xlat
pushf
sbb
sahf
jp
and
dec
popf
sub
mov
sub
xor
imul
mov
mov
aaa
push
in
stos
xchg
imul
cs
(bad)
pop
pop
push
iret
(bad)
xor
and
xor
mov
jo
mov
sahf
jmp
stos
jge
mov
jmp
cmp
mov
sub
pop
jg
call
pop
ficomp
mov
push
fcmovnbe
fdivr
adc
jp
popa
sbb
jo
aas
std
xchg
(bad)
fnstsw
cmps
inc
xor
test
push
mov
(bad)
leave
retf
rol
out
outs
nop
xchg
js
pop
(bad)
cmc
mov
stos
inc
adc
jmp
fbstp
ins
mov
mov
and
xchg
and
dec
movs
stos
jo
data16
int3
xchg
cmc
mov
xchg
cld
fild
stos
repz
dec
int
adc
adc
and
xchg
call
aad
adc
jg
loop
mov
cld
cmp
jb
push
sub
inc
fsubr
xchg
xor
fstp
mov
add
jbe
hlt
add
adc
lds
xor
or
and
frstor
sub
popf
pop
cmps
and
stos
jmp
es
inc
push
cdq
dec
sbb
out
imul
inc
jno
xchg
call
add
mov
xchg
xchg
and
dec
mov
lock
mov
cs
mov
jl
pop
inc
ror
repz
scas
outs
icebp
sub
jl
cdq
or
add
push
cmp
scas
and
bound
sbb
xor
mov
loope
ret
jae
mov
int3
aad
pop
lods
enter
add
(bad)
pop
add
or
retf
iret
test
jg
pop
hlt
sar
scas
repnz
adc
bound
fucom
imul
fistp
mov
push
xchg
fwait
dec
(bad)
jmp
pushf
jle
xchg
clc
xor
test
es
mov
xchg
sbb
adc
int
cmc
ss
cmp
aas
dec
cmp
sub
scas
adc
pop
call
ret
sub
push
mov
test
pop
sbb
(bad)
and
mov
xchg
pusha
push
inc
dec
aam
xchg
in
daa
clc
sub
mov
cmc
out
pop
les
enter
icebp
aaa
ss
xchg
and
cmps
dec
fiadd
mov
dec
pop
retf
stc
mov
(bad)
shl
or
adc
inc
xor
lea
mov
(bad)
pusha
push
mov
dec
es
mov
rcr
xchg
ret
or
push
mov
xchg
xor
mov
mov
mov
pop
sbb
das
sbb
pop
dec
(bad)
out
movs
xlat
xchg
mov
and
stc
daa
xchg
adc
repnz
das
sti
lods
lea
and
fwait
(bad)
pop
outs
push
vmovddup
ins
jbe
jae
pushf
cmp
test
fdivr
loope
jmp
mov
pushf
ds
imul
call
lods
and
push
stos
(bad)
or
hlt
rol
cmp
movs
mov
add
cwde
inc
add
xor
or
and
adc
sbb
jno
fisub
ret
stc
push
arpl
arpl
aad
popf
dec
and
mov
xor
pop
cmp
push
fidivr
xor
mov
test
or
add
push
dec
push
movs
cdq
xor
jmp
mov
div
loope
adc
or
aas
push
fldcw
dec
and
xor
ins
mov
popf
inc
adc
(bad)
dec
cmp
sbb
cmp
jmp
cmp
bound
push
pop
push
pushf
add
xchg
or
fild
pop
pop
out
cdq
xchg
push
pop
mov
in
pop
jmp
pushf
(bad)
and
push
mov
les
and
in
int3
adc
jmp
in
fdivrp
push
leave
or
jle
jnp
cmps
xchg
dec
aas
int3
pop
cmp
push
xor
push
out
inc
jno
(bad)
dec
jb
int
jne
cs
adc
mov
xchg
xchg
mov
loopne
dec
cmp
jge
mov
xor
inc
jns
fld
xchg
and
pop
shr
cs
and
push
add
push
mov
test
ins
jmp
sbb
fldz
push
mov
add
push
cli
and
cmc
aas
mov
mov
dec
aaa
fist
daa
int
repnz
add
and
lds
aaa
push
dec
xchg
call
out
mov
push
adc
mov
jmp
out
out
mov
xor
cmp
gs
gs
ret
or
mov
adc
adc
cmps
sbb
add
out
fnsave
je
das
out
(bad)
mov
mov
dec
mov
into
fst
or
je
in
sbb
lds
bnd
ret
push
mov
inc
rcr
bound
mov
xchg
push
pusha
or
lods
sar
lea
cmp
jge
mov
in
or
test
retf
mov
scas
int3
shr
sub
lods
imul
push
sahf
(bad)
shl
mov
in
arpl
call
cwde
(bad)
in
idiv
push
mov
aas
div
pop
(bad)
aaa
xor
add
dec
mul
jl
stos
dec
push
call
xor
cmp
aaa
dec
call
sub
mov
test
mov
(bad)
inc
in
push
or
pusha
mov
idiv
jg
add
mov
(bad)
outs
push
jg
cmps
or
jp
jmp
pop
fldcw
arpl
rcl
adc
cdq
dec
push
leave
mov
ret
(bad)
iret
inc
sub
loop
rol
mov
in
out
repz
sbb
push
inc
and
sub
cmc
fwait
mov
rcl
imul
ret
mov
cli
lds
cmp
sub
lods
das
cmc
jns
push
int3
mov
pop
mov
lods
mov
jmp
shr
jnp
xchg
add
xor
cmp
xchg
push
call
xor
fimul
lods
lods
push
xor
push
xchg
or
ds
(bad)
mov
clc
clc
jecxz
data16
mov
or
std
jg
jne
rol
mov
in
push
leave
call
outs
pop
cld
test
test
fs
dec
jae
xchg
mov
or
jmp
adc
jne
jmp
adc
push
push
ins
lods
in
outs
and
and
call
mov
out
jmp
adc
mov
scas
or
adc
aaa
inc
pop
jb
xor
pop
addr16
and
inc
bound
push
inc
retf
or
adc
stos
inc
out
imul
js
push
xlat
inc
lahf
in
rol
add
push
mov
fs
mov
fcmovnbe
inc
xchg
sbb
(bad)
scas
mov
or
inc
inc
popf
jne
out
out
adc
out
add
and
aam
push
dec
popf
lahf
cmp
add
dec
dec
xor
aaa
scas
in
aaa
cmp
xchg
adc
imul
adc
scas
mov
test
mov
addr16
xor
nop
inc
jmp
xchg
adc
(bad)
push
retf
ja
ds
mov
xor
xor
imul
movs
xchg
or
lds
popf
in
out
xchg
pop
xchg
pushf
add
mov
or
cli
test
ds
mov
in
or
push
mov
and
cmp
ins
xor
pop
dec
xchg
adc
stos
mov
dec
cmp
or
pop
mov
sub
cli
mov
xchg
nop
push
add
fucomp
bound
mov
xor
inc
xor
push
enter
xor
jbe
ror
outs
pop
cmp
push
pop
mov
mov
mov
and
das
call
scas
in
mov
inc
pop
mov
fdivr
xor
xchg
mov
enter
lea
jmp
loopne
sub
(bad)
ret
xchg
pop
sti
sbb
int
sar
jl
inc
dec
mov
in
dec
push
sahf
retf
rcr
fwait
jmp
mov
inc
sub
popf
dec
ja
(bad)
std
add
ins
dec
dec
pop
fcmove
das
fidiv
call
stos
ds
add
(bad)
clts
adc
int
pop
xchg
mov
sub
cmps
xor
ficomp
mov
sub
int
test
jecxz
push
in
fs
(bad)
test
sbb
fs
mov
jmp
ret
add
test
(bad)
loope
mov
inc
dec
test
aas
fs
sub
fucomp
xchg
push
sbb
cmps
cmp
add
add
inc
ds
lds
(bad)
leave
or
mov
scas
fdiv
sbb
inc
fs
mov
mov
(bad)
inc
push
sbb
jmp
repnz
loop
mov
fnstcw
sbb
sbb
inc
hlt
push
fmul
push
je
add
sub
push
cmp
adc
les
in
cmp
retf
adc
jne
dec
test
in
sbb
lds
test
jmp
mov
jg
mov
imul
mov
loope
movs
outs
mov
cdq
aas
movs
movs
jp
push
xor
fcom
int3
inc
cs
retf
cs
or
mov
mov
dec
loope
jae
in
hlt
and
pop
jg
xchg
cdq
bound
(bad)
cmp
push
jmp
cmp
popa
add
hlt
dec
loopne
iret
mov
mov
push
xlat
cwde
mov
bound
adc
rcr
pop
or
sub
cmp
jno
dec
bound
pop
jle
pushf
arpl
out
jl
js
and
sbb
or
test
jbe
add
pop
or
mov
loop
or
jg
or
cmp
in
out
(bad)
mov
mov
fstp
or
mov
push
pop
hlt
jb
jae
dec
mov
and
and
add
das
dec
add
or
fadd
aam
push
popf
add
jae
and
lods
cs
ror
xor
mov
adc
dec
mov
or
(bad)
sbb
lahf
sub
pop
out
movs
mov
call
lods
cmps
and
add
ror
nop
imul
fldcw
pusha
mov
and
retf
shl
movs
mov
aam
sbb
lods
imul
pop
clc
push
lahf
popf
mov
in
inc
push
cmc
pop
ss
(bad)
std
push
sub
pandn
add
call
xlat
jae
cmp
or
lods
(bad)
pushf
jb
sbb
sub
pop
mov
xor
and
xchg
cmp
add
cmp
xor
jns
xchg
fadd
mov
popa
dec
xlat
inc
icebp
push
and
std
inc
xchg
adc
les
scas
lods
push
or
pop
cdq
test
sbb
add
fist
cmp
pop
mov
push
adc
inc
mov
lds
sti
fxch
and
xchg
or
mov
aam
add
or
ret
dec
fst
mov
sub
stos
adc
xor
pop
fucomip
mov
mov
cli
jno
xchg
jne
xlat
and
pop
aad
pushf
outs
jmp
imul
and
and
push
nop
in
mov
popf
imul
arpl
inc
inc
idiv
cwde
cmps
fxch
(bad)
mov
in
jns
imul
pushf
pop
push
mov
retf
(bad)
ds
dec
rcl
push
(bad)
int3
stos
add
xchg
stos
pop
mov
xchg
pushf
mov
loopne
int
jb
and
ss
dec
je
inc
push
pop
data16
test
out
dec
xchg
stos
inc
rcr
mov
retf
cld
rcr
dec
adc
enter
mov
pop
scas
sub
into
jmp
push
mov
adc
ficom
jno
sbb
xchg
dec
jmp
sub
push
mov
mov
sahf
retf
inc
dec
sbb
repnz
sub
(bad)
sbb
out
int
mov
jmp
lods
movs
stc
cmc
int3
cmp
push
aad
mov
add
sbb
push
fsubr
mov
shr
pop
cmps
jmp
fistp
dec
push
repz
lods
or
ss
jmp
sti
cli
popa
cmp
pop
mov
out
xchg
pop
enter
mov
retf
sub
or
dec
jl
aam
dec
js
dec
pop
fwait
mov
js
cld
imul
sbb
ds
(bad)
cld
jns
dec
mov
mov
sub
pop
and
xchg
aaa
adc
sub
dec
out
hlt
push
add
call
or
sar
and
add
gs
push
cwde
pop
mov
mov
loopne
push
jbe
arpl
ret
push
mov
adc
inc
xor
setg
cs
icebp
jge
fnstsw
cmp
lds
xchg
sub
test
pop
dec
cmp
add
pop
inc
pop
clc
inc
bound
jo
lea
xchg
xchg
xchg
mov
fucom
adc
mov
pop
repz
cmps
int
cmp
out
int3
xor
lods
mov
jmp
fs
pop
lods
push
adc
lahf
iret
push
aad
std
xor
call
sbb
mov
xchg
lds
jmp
jmp
cs
mov
dec
add
arpl
xchg
xor
inc
or
adc
(bad)
mov
and
mov
mov
add
mov
mul
(bad)
push
std
into
add
inc
and
bound
mov
fwait
popa
fwait
add
and
pop
pop
stos
adc
jecxz
xlat
imul
inc
fs
int3
psubusw
(bad)
push
test
popf
inc
sahf
test
lods
in
cmp
lea
mov
aas
pop
pop
daa
test
mov
mov
adc
imul
scas
mov
jae
xchg
lods
dec
fistp
inc
xchg
and
test
adc
and
inc
mov
test
adc
in
or
mov
lods
fwait
test
inc
or
ins
inc
cwde
mov
ffreep
cli
mov
sbb
shl
popf
sub
or
out
jg
das
add
cld
xor
movs
inc
and
ss
mov
call
push
sbb
(bad)
call
pop
jle
inc
sbb
adc
dec
push
cmps
movs
jne
sahf
loope
cs
mov
xor
add
inc
jg
xor
enter
xchg
(bad)
int3
mov
mov
fsubr
cwde
mov
outs
or
mov
loop
aas
inc
cmp
xor
xchg
or
pushf
js
mov
sub
test
inc
push
sbb
loopne
or
fs
push
fisubr
cmp
sbb
std
mov
cmp
in
sbb
aad
and
jp
ja
or
jns
pop
aaa
xchg
lods
ret
(bad)
mov
jbe
pop
lea
pop
(bad)
aaa
fcom
int
jp
mov
add
stos
lahf
mov
mov
pop
fadd
loopne
dec
ins
hlt
dec
dec
cmp
dec
push
sti
or
mov
pop
xor
jg
dec
mov
mov
dec
lea
mov
stc
xchg
sub
ja
gs
push
xor
pop
pop
push
mov
cld
sahf
cld
add
inc
xchg
mov
out
movs
(bad)
stos
aad
xlat
jno
leave
dec
pop
push
add
and
or
retf
sub
mov
pusha
mov
outs
jge
push
add
cwde
mov
mov
jg
adc
xchg
lahf
fldcw
ret
ret
icebp
sbb
cmp
pop
fcmovnbe
es
mov
mov
jmp
jmp
and
movs
mov
xchg
mov
jl
scas
out
int
pop
imul
scas
mov
out
(bad)
test
fst
jno
or
cmp
sub
clc
outs
ret
jb
or
jae
jmp
ins
nop
mov
cli
mov
jo
cld
mov
cmp
adc
pop
scas
sti
cmps
leave
inc
mov
lds
iret
push
retf
cs
push
pop
mov
cmps
dec
lds
sbb
push
movlps
xchg
mov
ds
jg
add
sahf
push
adc
push
or
jb
int
cmps
fst
aas
and
test
ret
dec
call
test
sbb
push
lock
push
out
popf
xchg
cmps
xor
adc
and
js
sub
mov
mov
cmp
outs
in
ss
mov
push
jbe
mov
out
mov
mov
sub
xor
xor
imul
cmp
shl
psrlq
stc
push
rcr
or
push
or
inc
arpl
in
pop
mov
adc
cmc
cwde
sbb
mov
jb
repnz
xor
test
xchg
push
call
cmp
gs
mov
push
out
loopne
inc
stos
jns
push
inc
les
push
jmp
xor
repnz
adc
out
loop
mov
outs
cdq
test
push
add
js
mov
out
mov
mov
js
cwde
mov
imul
hlt
pop
sahf
add
xchg
mov
test
leave
pop
cs
dec
sbb
popa
push
xor
mov
xor
int3
jle
xor
imul
jae
adc
dec
mov
sub
leave
mov
popw
push
dec
fs
and
mov
xchg
and
js
pop
repz
cld
fisttp
enter
add
mov
hlt
retf
or
cmp
xchg
adc
in
sub
stos
adc
and
daa
lods
xchg
inc
and
mov
sbb
pop
adc
pop
xchg
add
mov
mov
icebp
clc
xchg
mov
scas
jl
stos
add
mov
jecxz
jns
dec
add
test
xchg
and
and
push
cld
add
and
aaa
int
adc
jle
cmp
and
mov
dec
daa
inc
adc
imul
(bad)
loop
test
outs
dec
mov
pop
mov
mov
test
sub
loopne
sbb
test
(bad)
or
push
stos
movs
rcl
xlat
jb
xchg
imul
adc
add
aad
jmp
iret
push
jg
fstp
xchg
rcr
cmp
dec
mov
fistp
mov
test
mov
mov
repnz
add
jle
sbb
inc
push
add
sub
mov
or
loope
cwde
or
outs
push
pop
or
stos
clc
fist
ds
popa
jmp
push
sub
rdmsr
call
cmps
pop
sbb
and
shl
jp
loope
mov
mov
sub
xor
mov
mov
sub
adc
jno
inc
call
shl
cmp
pop
push
and
cmp
sahf
iret
call
push
xor
mov
dec
test
cmc
inc
inc
cld
sahf
jo
pop
in
sbb
test
out
sub
(bad)
movaps
jl
les
movs
movs
xchg
adc
sub
out
dec
mov
jl
lods
cmp
xchg
rol
js
lea
and
add
mov
icebp
mov
(bad)
(bad)
retf
jl
mov
jp
push
or
outs
(bad)
cs
and
inc
push
xchg
sub
cmps
dec
fdecstp
shr
lock
and
xor
rol
sbb
push
fscale
in
test
pop
loop
lock
idiv
or
push
dec
in
call
sub
and
lock
and
jns
dec
xchg
retw
push
hlt
inc
(bad)
and
jnp
sti
dec
pop
stos
pop
(bad)
jo
xlat
dec
or
push
mov
inc
lods
cdq
cmps
and
cmps
clc
int3
out
sub
call
cwde
or
push
sbb
dec
mov
(bad)
aam
mov
mul
shl
dec
pop
js
mov
fsub
scas
call
xor
sub
icebp
pop
div
stos
dec
pop
clc
clc
sbb
add
unpcklps
dec
xchg
cmc
je
xchg
and
(bad)
(bad)
cli
retf
dec
ss
xchg
sbb
cs
gs
test
and
push
mov
les
sar
in
je
mov
or
retf
lds
shl
sub
pop
xor
xor
jp
lods
add
mov
sbb
sub
push
fdiv
mov
mov
push
mov
xchg
pop
dec
fcmove
scas
inc
jne
rcr
mov
es
lea
push
jge
mov
xlat
hlt
and
xchg
pop
add
adc
ret
xor
pop
int3
inc
dec
lock
add
(bad)
popa
stc
daa
int3
pop
push
cmps
push
(bad)
sub
mov
fs
dec
loope
retf
mov
call
and
mov
pop
fiadd
neg
mov
add
in
and
dec
retf
neg
sub
retf
ds
jae
int3
xchg
int
rol
imul
push
sbb
and
cmps
fstp
cmp
out
fistp
pop
dec
mov
mov
push
mov
clc
inc
xchg
fild
or
fldcw
data16
std
adc
fs
(bad)
loop
call
out
jmp
dec
fisub
cli
sbb
out
loopne
rcr
rcl
cmps
nop
stc
sub
sti
sub
or
js
xchg
(bad)
sbb
test
clc
mov
or
(bad)
push
sar
sbb
push
or
rol
fistp
push
mov
cmp
pop
scas
(bad)
in
mov
pop
rcl
movs
pushf
jge
cld
cdq
sub
pushf
sub
or
mov
dec
retf
in
cmps
lds
outs
mov
xchg
inc
scas
or
sbb
or
adc
push
int
or
xor
cmp
imul
ret
lahf
push
add
pop
js
add
enter
push
xchg
and
icebp
push
aaa
cmp
mov
inc
xchg
loopne
jno
inc
sti
imul
sub
mov
mov
sar
mov
cmps
sub
pop
xchg
repnz
and
call
sub
cmps
sbb
dec
adc
sub
gs
movs
add
push
push
inc
arpl
retf
adc
popf
sub
icebp
cmp
jmp
rol
fldenv
dec
or
(bad)
stos
out
push
out
ret
inc
pusha
mov
(bad)
xchg
in
inc
sahf
xor
pop
inc
call
call
loope
lods
sub
fild
pop
jno
sub
shr
movs
rcl
gs
sub
aaa
sub
aaa
cmc
in
loop
jbe
or
pusha
jecxz
ins
jne
xor
int3
xchg
pop
outs
dec
dec
xchg
cmps
mov
aam
xchg
in
mov
enter
mov
xchg
ins
mov
mov
cmp
push
ficomp
mov
mov
js
push
repnz
out
jo
dec
adc
add
push
lods
gs
(bad)
ds
sub
lods
adc
cmp
pushf
es
xchg
pop
js
xchg
(bad)
push
and
sahf
jge
in
ins
in
dec
push
add
sub
lods
aas
out
mov
and
pop
ds
inc
js
lds
inc
rcr
add
jo
push
mov
nop
ja
data16
push
adc
pop
aaa
loope
je
or
pop
clc
or
cs
sbb
popa
cmps
jmp
cmp
das
jb
mov
test
mov
mov
js
movs
sub
mov
ins
not
sub
ja
cmp
out
and
sbb
(bad)
fsub
push
pop
xor
clc
sahf
dec
icebp
pop
add
xchg
(bad)
mov
mov
mov
jge
pop
retf
ins
(bad)
and
fild
outs
mov
and
sbb
mov
add
into
enter
or
mov
pop
sahf
push
out
mov
hlt
mov
mov
outs
adc
fs
ja
jnp
pop
stos
mov
sub
mov
inc
(bad)
jl
mov
jno
rcpps
gs
push
cli
retf
push
pop
pop
mov
pop
cmp
frstor
jns
call
add
out
mov
pop
add
inc
mov
dec
mul
jno
dec
fnstsw
inc
aam
xor
mov
mov
xor
dec
sub
out
jle
adc
mov
stos
test
adc
aas
mov
out
push
sub
dec
jmp
pusha
mov
cmp
cmp
cmc
in
rcr
jp
ins
xlat
mov
xchg
inc
dec
jb
bound
movs
hlt
leave
push
push
in
push
sbb
push
mov
nop
pop
xchg
bsf
adc
std
cmp
sub
sub
add
dec
cwde
movs
nop
dec
outs
leave
fs
push
jno
inc
int3
(bad)
push
and
lea
rcr
push
xchg
shl
inc
and
fdiv
ja
xor
ror
inc
test
pushf
pop
or
test
pop
xlat
sub
enter
xchg
add
xchg
fnstcw
mov
retf
mov
mov
inc
push
enter
jge
in
push
jns
ror
sbb
cmp
xor
jecxz
dec
add
push
bound
in
fnstsw
jg
mov
push
mov
es
nop
mov
icebp
in
bound
jmp
leave
jp
int3
push
aas
xor
mov
or
jb
aaa
mov
les
fadd
adc
fucomip
push
pop
sub
out
test
rdmsr
cmps
adc
in
sti
adc
xchg
in
gs
das
sub
(bad)
daa
dec
aam
mov
inc
jp
mov
iret
daa
mov
push
ss
sbb
loope
out
sub
mov
pop
rcr
call
cmp
xchg
pop
test
cmp
loop
and
push
movs
sbb
mov
arpl
(bad)
in
push
cmps
xor
and
mov
call
dec
dec
pusha
inc
sub
out
ja
mov
mov
mov
(bad)
sub
xor
mov
jns
inc
fist
pusha
push
inc
adc
es
test
or
mov
jmp
(bad)
fild
mov
mov
clc
dec
pop
iret
shl
int3
dec
fstp
data16
out
cmps
scas
cmp
mov
mov
xchg
dec
mov
pop
adc
mov
pop
(bad)
jnp
dec
cdq
in
xor
(bad)
pop
test
push
add
and
cmp
sub
test
cmp
mov
repnz
and
es
ds
lea
out
and
(bad)
xchg
mov
clc
cmp
adc
aas
push
sbb
inc
push
cmps
call
repnz
dec
popa
and
mov
dec
mov
(bad)
mov
fsubr
dec
hlt
xor
lds
imul
or
inc
outs
repz
repnz
in
mov
jnp
test
mov
fmul
repz
iret
adc
or
xchg
jl
dec
adc
mov
cmp
xor
or
jb
stc
(bad)
push
stos
push
cld
jo
mov
push
in
iret
push
inc
sbb
xor
dec
cmps
or
xor
jmp
je
push
cdq
stos
mov
mov
cmp
out
fnstenv
jg
push
mov
xchg
sahf
retf
add
(bad)
aas
pushf
das
mov
mov
xor
sub
mov
xor
mov
and
mov
push
and
and
xor
adc
dec
jnp
pop
scas
repnz
adc
inc
xchg
fistp
sub
add
jecxz
mov
mov
pop
mov
gs
push
jmp
int
inc
xlat
and
push
xchg
mov
pop
add
ffree
cmps
sbb
mov
pop
clc
movs
pop
stos
jae
sub
in
cmp
xor
mov
pop
pop
adc
loope
jmp
out
push
jmp
jae
mov
test
and
mov
mov
mov
lock
mov
jnp
xor
loopne
into
and
inc
and
sti
jnp
int3
jnp
mov
ins
xchg
imul
rcr
pop
add
ins
int3
repnz
mov
iret
mov
mov
mov
mov
aam
mov
movs
lods
pop
div
xor
out
movs
movs
push
cmp
xchg
adc
pop
jg
das
xchg
gs
and
mov
retf
imul
lea
mov
jl
out
pusha
and
add
sub
lock
fwait
dec
iret
dec
cmps
mov
cli
sahf
les
mov
std
gs
and
int
pop
lods
mov
sub
or
push
inc
adc
out
xor
in
sar
icebp
pop
and
mov
xor
ficomp
inc
cld
add
push
cmp
xor
mov
lahf
mov
js
mov
movs
neg
les
aam
mov
adc
(bad)
push
mov
fmul
je
pop
fmul
std
test
add
mov
jl
sbb
loop
adc
jmp
xor
xchg
dec
xchg
push
jge
and
sub
jne
adc
rcl
in
aas
mov
mov
cmp
adc
sbb
addr16
pop
mov
into
cmp
lds
mov
rcl
push
push
retf
or
sub
or
add
movs
pop
add
(bad)
cmp
jmp
add
imul
push
stc
sbb
dec
fstp
imul
enter
xor
jg
push
clc
jmp
dec
xchg
pop
mov
or
mov
cmp
sahf
mov
es
iret
cld
mov
jo
mov
inc
test
inc
cwde
inc
xchg
dec
sar
jbe
sbb
lods
fwait
xchg
mov
cmps
push
inc
cs
add
sbb
adc
and
imul
cld
and
sub
dec
xchg
sub
push
scas
stos
(bad)
loope
out
(bad)
outs
shl
xchg
loop
(bad)
cmp
jnp
je
jl
test
test
sti
dec
pop
(bad)
movs
es
ficomp
dec
dec
mov
mov
cld
aam
push
(bad)
mul
aas
cmps
pop
mov
adc
or
cs
dec
dec
mov
mov
sbb
bound
push
adc
sbb
and
push
inc
pop
pop
int
xor
mov
and
xor
das
arpl
ins
(bad)
repnz
inc
cmp
jne
sub
icebp
inc
scas
fwait
add
daa
inc
sbb
sub
push
sti
fsub
xor
sub
dec
push
es
add
ret
repz
movs
dec
adc
out
fs
in
cld
ins
adc
jo
dec
test
aas
mov
test
clc
sbb
test
cmp
das
cwde
sbb
movs
xchg
(bad)
out
enter
adc
test
xor
push
and
xchg
cs
dec
pop
pop
pop
cmc
inc
lahf
in
or
lods
dec
popa
dec
(bad)
pop
add
call
sbb
outs
outs
and
out
out
jns
add
mov
mov
xchg
mov
xchg
leave
xchg
cmp
push
stos
and
xchg
mov
dec
dec
aam
call
sbb
(bad)
fld
iret
jbe
jge
mov
xchg
pop
mov
loopne
call
push
in
rol
or
dec
xor
and
mov
jb
cmps
pop
pop
xchg
mov
stos
test
push
fnstenv
adc
cmp
mov
hlt
arpl
mov
xor
imul
sahf
ret
out
jae
cwde
sbb
jecxz
in
mov
repz
int
pop
mov
(bad)
jp
addr16
inc
in
cmp
mov
push
rep
jae
inc
daa
inc
inc
pop
jo
icebp
xchg
jg
fs
sbb
int3
cmp
inc
mov
idiv
adc
fimul
aas
inc
arpl
jbe
shld
mov
sbb
test
stos
inc
mov
stos
lods
pop
cmps
mov
pop
fcomp
mov
jns
les
sub
cdq
nop
add
lahf
push
dec
shl
(bad)
and
std
rep
ret
aad
inc
xorps
sbb
inc
cwde
fnstsw
mov
cwde
mov
dec
ror
cs
loopne
fs
xor
retf
out
fld
icebp
pop
pop
cmp
pusha
retf
aaa
sbb
adc
outs
jno
ret
pop
dec
and
fmul
push
pop
bound
dec
push
out
sub
into
jbe
adc
add
dec
mov
sub
and
jp
push
daa
aaa
dec
stc
or
int3
(bad)
sbb
movs
jb
loop
xchg
mov
aas
aam
xchg
cmps
inc
imul
ins
pop
dec
cmps
test
jge
mov
shr
(bad)
shl
sbb
cwde
lods
cmp
add
imul
sub
push
mov
sbb
lock
jl
ja
test
jmp
fwait
in
pushf
mov
and
xchg
mov
xchg
lds
sub
and
nop
(bad)
xchg
nop
repnz
mov
xor
push
addr16
dec
and
leave
or
adc
call
xchg
movs
xor
call
out
out
sub
or
das
arpl
das
test
imul
xor
inc
add
pop
jmp
retf
inc
pop
in
mov
sbb
sar
pusha
add
push
je
ror
sbb
mov
add
shl
cdq
mov
xchg
lds
dec
push
xlat
inc
add
into
leave
aaa
movs
mov
push
dec
aad
mov
ins
daa
fsub
ja
jg
mov
in
add
pop
and
mov
dec
dec
mov
and
aaa
in
sub
sti
jmp
pop
shl
or
xor
das
or
sbb
lods
inc
adc
and
xor
lods
pop
int
scas
ins
daa
out
dec
pop
test
sbb
(bad)
and
xchg
cmp
sub
lahf
jp
iret
sbb
sub
out
add
xchg
and
dec
mov
add
mov
sahf
pop
fs
stos
je
inc
jnp
dec
dec
gs
loop
xor
xchg
add
cs
bnd
nop
dec
in
inc
fsub
in
jbe
fisttp
mov
jl
cmp
jnp
pop
dec
ss
cmp
mov
fwait
xor
js
inc
jno
mov
and
dec
jmp
popa
jge
xor
xor
jae
in
or
xor
mov
arpl
test
pop
xchg
adc
sub
data16
mov
aaa
push
adc
mov
inc
int
jnp
push
sub
mov
jnp
dec
xchg
arpl
cmp
jo
xor
jecxz
test
loopne
outs
fs
sbb
retf
outs
jno
pop
(bad)
in
stos
lds
jne
sub
mov
stos
test
add
sbb
jmp
sbb
jmp
clc
adc
aas
je
jne
sbb
popa
sub
xchg
xchg
icebp
inc
loope
fadd
sti
add
in
lods
cwde
inc
dec
xchg
mov
cmp
int
push
jecxz
jge
xor
mov
push
pop
test
pop
dec
jo
test
inc
pushf
or
jae
dec
ins
gs
test
lods
aaa
adc
nop
mov
mov
pusha
mov
lahf
bnd
sub
push
dec
f2xm1
das
sahf
scas
cmp
icebp
lahf
lds
adc
mov
stos
add
ins
dec
xor
jl
in
(bad)
mov
add
sbb
xor
cmps
jg
aas
push
mov
retf
shl
in
xchg
adc
push
pop
cmp
(bad)
arpl
jnp
mov
pop
push
idiv
popa
mov
lahf
(bad)
push
dec
imul
cdq
xchg
jle
cmps
xchg
push
sar
or
or
test
inc
mov
jne
fild
sbb
mov
outs
push
or
sub
cli
mov
xchg
cmp
js
js
nop
pop
mov
push
mov
pop
ret
inc
call
dec
sbb
fdiv
shl
adc
add
jbe
sub
add
(bad)
test
into
daa
mov
mov
fs
bound
mov
mov
cmp
in
jecxz
mov
into
das
in
ins
enter
jmp
adc
leave
in
fnstsw
push
jmp
cwde
jbe
addr16
and
sub
das
cmc
mov
push
fsubrp
mov
xor
out
add
pop
into
mov
inc
add
adc
dec
and
cmps
and
inc
call
cld
xor
jp
pushf
xor
lds
fs
add
inc
cmps
or
daa
lock
loop
shl
and
adc
jns
mov
xchg
loopne
lods
pop
aad
outs
xor
jmp
sub
test
cld
arpl
cdq
jle
sub
fcmovbe
adc
sub
xchg
pop
hlt
aam
movs
pushf
xor
ret
(bad)
ror
mov
inc
xchg
jae
adc
ins
pusha
ds
mov
push
jno
sub
call
stos
inc
imul
mov
sti
sub
sub
adc
sbb
div
and
arpl
inc
das
cmp
in
mov
push
add
lods
sbb
hlt
fimul
and
mov
or
push
cld
xor
outs
mov
xchg
in
fcomp
lahf
or
arpl
imul
movs
pop
mov
dec
cmp
popf
xchg
push
inc
daa
int3
cmc
mov
sbb
xlat
sti
cmp
push
jmp
sbb
mov
js
ret
fdiv
mov
mov
add
frstor
lods
ins
enter
shl
adc
inc
imul
add
pop
mov
daa
sbb
or
out
lea
sahf
in
jp
in
iret
je
bound
shr
mov
fimul
dec
ror
out
jbe
adc
mov
aad
jl
cli
(bad)
cwde
push
xor
mov
jmp
sub
scas
rcl
aaa
push
xlat
int
std
sahf
call
mov
in
enter
lods
lea
xlat
(bad)
lea
std
or
loop
jns
out
pop
xchg
(bad)
rcl
ret
popa
mov
nop
push
ja
out
scas
dec
lock
neg
mov
cmp
xor
add
push
fild
push
pushf
icebp
add
mov
cmp
dec
(bad)
jecxz
outs
dec
popa
out
stos
ins
(bad)
icebp
fsub
les
mov
mov
mov
dec
fadd
stos
push
and
(bad)
in
adc
jmp
xor
xor
add
or
int3
(bad)
jp
loopne
mov
es
fild
lock
test
pop
pop
je
movs
xchg
mov
mul
ja
sbb
(bad)
mov
jns
push
jo
mov
arpl
cmp
inc
xchg
pushf
nop
ss
jg
mov
rcr
and
and
retf
add
ret
cld
mov
int3
call
loopne
adc
aas
mov
loope
cmp
ror
pop
pop
jno
sti
scas
dec
mov
fnstenv
lods
(bad)
adc
mov
mov
scas
sub
jne
ja
fld
psubsb
and
sahf
push
and
sub
sbb
push
jo
ss
imul
(bad)
sub
or
adc
fiadd
lds
mov
retf
not
test
mov
sti
sub
pop
outs
push
xchg
stos
test
cmp
(bad)
movs
movs
ins
fcom
inc
aam
test
jge
jmp
jnp
mov
mov
js
ret
pop
bound
aam
push
mov
cli
jecxz
test
in
cmp
loopne
and
jl
jle
dec
in
rcr
adc
fistp
int3
sbb
mov
fmul
in
iret
sysret
or
sub
fsubr
lock
jmp
push
xchg
ret
jmp
sub
xchg
jmp
(bad)
xchg
cmp
movs
repz
pop
mov
jmp
out
push
sub
repz
inc
sti
xchg
xlat
adc
mov
gs
cmps
adc
xchg
jg
aas
psraw
test
mov
outs
and
sbb
lock
fisttp
imul
cwde
into
inc
dec
mov
test
pop
punpckhwd
outs
add
(bad)
lock
retf
mov
pusha
pop
mov
xchg
scas
adc
push
inc
ja
dec
lock
in
clc
or
(bad)
jne
xor
pop
call
xchg
int3
test
(bad)
add
aad
cmp
outs
sar
into
jecxz
ins
ror
push
stc
shr
mov
adc
pop
test
int
call
inc
dec
adc
inc
push
std
push
mov
xchg
push
lock
leave
dec
or
push
or
pushf
mov
popf
push
data16
xchg
sti
push
pushf
sbb
dec
add
es
lods
ret
xchg
icebp
pop
or
call
or
jg
mov
jnp
sub
dec
sub
pop
or
mov
inc
lods
fnstcw
ins
add
shl
push
popa
aas
cwde
(bad)
jmp
out
pop
ror
leave
mov
or
pop
dec
lock
stos
xor
pop
adc
movs
add
cmp
int3
pop
mov
push
mov
and
int3
add
in
cmp
pop
aaa
sub
fistp
jl
mov
ins
outs
mov
or
adc
gs
sub
scas
mov
xchg
cmps
sub
jo
or
xchg
stc
nop
les
ins
pop
xchg
push
out
(bad)
and
scas
das
and
mov
push
mov
inc
gs
int
call
in
int3
add
(bad)
sbb
in
mov
jbe
fsubr
pop
daa
stc
(bad)
push
sub
mov
repz
out
call
outs
push
push
icebp
dec
fisubr
imul
xchg
jns
and
add
pop
jo
test
int3
aad
scas
push
or
out
fs
ret
push
lods
xor
jnp
loopne
sbb
inc
js
xchg
lods
or
loopne
(bad)
mul
idiv
or
pop
xor
into
adc
mov
push
repz
pop
cmps
sbb
jl
jmp
mov
out
lea
repz
or
lods
lahf
pop
dec
pop
bound
fcmovbe
clc
and
scas
in
dec
fld
sub
lahf
cmp
add
and
enter
shl
cmp
cwde
fcomp
xor
ret
fistp
inc
(bad)
inc
mov
sbb
and
mov
and
pop
es
dec
cdq
sub
cli
cli
xchg
xchg
push
sbb
loop
cmps
cwde
xchg
dec
cdq
in
or
pop
(bad)
mov
inc
test
cmp
mov
pop
mov
xchg
adc
pushf
mov
inc
test
js
jb
cmc
mov
pop
sub
pop
mov
jae
cmp
ret
jge
mov
or
es
mov
mov
and
xchg
sbb
mov
mov
(bad)
(bad)
addr16
dec
inc
and
retf
in
xchg
lock
push
test
add
sbb
sub
outs
mov
icebp
stos
stos
mov
outs
retf
out
jp
push
pop
xchg
mov
sahf
arpl
cmp
int
jae
or
ins
push
int3
sub
icebp
lock
retf
pop
cwde
xor
jb
sub
dec
xchg
lds
dec
push
outs
mov
mov
xor
pop
pop
xchg
mov
movs
sbb
outs
mov
mov
mov
leave
dec
mov
xchg
loope
cmp
mov
shl
int
(bad)
dec
mov
jmp
ins
dec
mov
hlt
fidiv
xchg
jmp
shl
popa
or
rol
lahf
mov
dec
fsub
jns
stos
add
pop
mov
and
push
pop
ss
push
xor
push
sbb
pop
add
jmp
rol
movs
std
das
or
call
test
cmc
cwde
nop
push
mov
sbb
sbb
pop
pop
cmps
pop
mov
retf
outs
lahf
jo
sbb
pop
inc
and
sub
adc
and
ror
popa
pop
push
xchg
das
sbb
enter
aam
into
call
mov
lods
mov
sbb
jmp
ds
loope
mov
dec
sub
sub
xor
mov
scas
mov
leave
stc
ror
adc
(bad)
push
mov
sti
push
bound
es
loopne
mov
sar
mov
adc
pop
ror
ret
into
std
mov
rcr
sub
xor
jp
cmp
jae
dec
(bad)
cmps
xchg
push
xlat
nop
loop
mov
clc
movs
fld
xchg
pop
xor
inc
push
shl
stos
dec
outs
sbb
mov
xchg
lds
fdivr
push
cmp
neg
jae
cmp
xchg
adc
or
cmp
sahf
inc
jl
cs
sbb
jne
les
mov
inc
je
sbb
sbb
fistp
mov
sbb
int3
cdq
std
and
movs
xor
dec
jno
mov
pop
jo
xchg
fsubr
sti
jmp
loope
es
jge
addr16
mov
jecxz
push
aam
gs
sbb
pop
xchg
lea
mov
daa
fcomp
jmp
hlt
aaa
das
stos
outs
inc
pop
(bad)
pop
xchg
ja
mov
addr16
jno
ret
xor
loop
test
in
xchg
nop
aad
xacquire
test
pop
(bad)
xor
loopne
add
aam
rcl
sbb
retf
and
shl
jge
enter
imul
cs
scas
adc
or
out
mov
adc
or
retf
and
sar
imul
jl
xchg
dec
sub
push
jo
ja
ret
inc
sbb
rcr
dec
pop
jmp
cmp
ins
add
xchg
adc
xchg
loopne
mov
xchg
gs
outs
mov
jno
mov
xchg
push
or
retf
enter
js
inc
jl
call
and
ss
or
inc
xchg
jno
mov
rcr
jl
sbb
sub
call
and
rol
jmp
pop
xchg
inc
xchg
enter
or
popa
mov
adc
loope
cmp
dec
xor
in
jns
xchg
rol
mov
dec
add
pop
push
int3
push
mov
xchg
dec
mov
jmp
lea
cmp
inc
sti
mov
jg
out
mov
lods
adc
loopne
pop
adc
sar
xor
ja
outs
push
push
repnz
push
inc
les
femms
add
xchg
int3
ret
shr
dec
pushf
aad
aam
outs
js
movs
pop
sbb
cdq
(bad)
fstp
or
add
ss
leave
pop
mov
fimul
and
icebp
packsswb
ror
lds
aas
pusha
push
mov
hlt
cmps
mov
xor
leave
fcmovu
neg
jl
inc
leave
ins
fwait
nop
pop
call
loop
pusha
ret
sbb
mov
js
xchg
imul
lea
enter
test
mov
popa
add
or
jne
ret
cdq
mov
dec
fcmovbe
cld
pusha
and
(bad)
out
jno
sub
out
add
pop
popa
xrelease
ja
push
push
xor
loop
fwait
inc
imul
mov
adc
dec
or
ficomp
(bad)
data16
rcr
rol
pop
into
push
add
loopne
push
outs
adc
fs
retf
pop
rcl
cmp
retf
arpl
push
cwde
test
push
adc
jne
call
ss
jp
ror
push
cmps
mov
mov
xor
mov
mov
in
fnstenv
pop
stos
inc
es
xlat
sti
sub
and
test
mov
mov
out
add
mov
and
fwait
fs
(bad)
mov
cmp
xchg
adc
mov
ja
mov
test
addr16
out
dec
movs
repnz
push
inc
adc
push
pop
sub
(bad)
and
test
mov
sahf
push
setge
bound
pop
push
xor
sbb
adc
sbb
cwde
out
pop
daa
pop
jae
popf
and
fdiv
lods
call
push
inc
js
push
inc
repnz
mov
aaa
(bad)
sbb
jg
ja
cmp
inc
mov
adc
inc
mov
(bad)
out
xchg
mov
xchg
and
fcomp
sbb
jo
inc
popa
add
push
mov
push
push
mov
jae
das
out
mov
dec
and
and
repz
cld
aam
push
out
mov
fidiv
fsubr
dec
(bad)
data16
stos
adc
std
push
dec
and
pusha
adc
cmps
aad
or
mov
loope
lods
or
mov
push
pushf
xchg
xor
xchg
jmp
lods
xchg
ja
mov
cdq
pop
xor
mov
adc
(bad)
popa
and
lods
int3
or
pop
and
sub
(bad)
and
sub
sub
test
fs
add
cli
cwde
test
sub
out
adc
and
xor
aad
lods
ret
and
mov
lods
cmps
call
or
xor
mov
ja
stos
mov
dec
push
cwde
adc
sbb
sub
jo
outs
push
inc
jnp
je
mov
push
adc
cmp
popa
push
or
lods
fs
xchg
cmps
pop
cmp
mov
xchg
mov
inc
sbb
dec
and
jl
outs
fisubr
sub
mov
loope
cmps
push
mov
iret
jp
mov
outs
and
mov
fisub
call
push
fwait
stc
stc
push
ret
(bad)
mov
add
sub
mov
test
or
(bad)
fstp
(bad)
out
jae
jg
jge
dec
dec
mov
pop
xchg
mov
sub
shr
repnz
mov
(bad)
adc
xor
and
pop
jmp
fwait
loope
inc
push
jmp
inc
adc
aas
pop
push
xchg
xor
shl
es
xchg
in
ror
or
or
lods
dec
xchg
test
jge
loop
or
adc
fst
fsubr
sbb
jno
ret
hlt
jns
mov
push
and
int3
(bad)
mov
aad
push
out
jmp
in
cmps
dec
push
retf
adc
enter
pop
test
cwde
les
push
aas
xchg
add
mov
sbb
repz
sbb
test
iret
ret
test
sub
std
fdivr
and
cmp
imul
repnz
sbb
dec
push
jmp
push
mov
adc
(bad)
imul
jbe
sar
cmp
movs
aaa
cld
adc
dec
ret
stc
fsubr
inc
cld
and
sub
sub
xchg
xchg
dec
add
je
(bad)
shr
sub
xchg
ja
mov
dec
inc
mov
movs
adc
fdivr
add
dec
(bad)
rcr
mov
sub
xor
jne
mov
ret
jl
inc
cdq
out
xor
cmps
push
xchg
mov
xor
add
je
test
int
clc
push
outs
ret
jae
fs
data16
xchg
jnp
push
mul
std
int
stos
add
jecxz
pusha
int
and
xor
sbb
sub
out
clc
xlat
ins
pusha
jl
dec
in
pop
lock
pushf
jp
movs
idiv
dec
bound
dec
ficom
pop
gs
sub
jo
sbb
cmps
(bad)
push
push
imul
(bad)
lock
mov
xchg
je
jne
std
fmul
push
add
or
pushf
pop
xchg
cmps
test
push
mov
xchg
adc
add
xchg
push
mov
sub
pop
pop
mov
push
and
or
and
adc
mov
sub
aam
ret
(bad)
retf
call
call
xchg
mov
sbb
imul
fnstsw
lods
cmp
adc
out
inc
pop
clc
sub
pop
mov
xlat
imul
(bad)
imul
mov
arpl
addr16
cdq
cmc
inc
cvtdq2ps
repz
mov
fst
(bad)
std
into
and
dec
hlt
arpl
data16
repz
mov
not
dec
es
xlat
fwait
(bad)
movs
cmps
xor
int3
jns
jb
mov
mov
mov
dec
sub
cmps
test
clc
mov
mov
cmp
(bad)
rcl
pop
add
sub
jle
or
retf
cli
mov
jecxz
ins
mov
test
push
xchg
dec
lea
sub
add
pop
rol
jae
(bad)
aad
xchg
push
inc
lea
mov
daa
shl
jns
stos
and
xor
mov
maskmovq
imul
push
xlat
imul
dec
lods
inc
push
fsubr
inc
and
stc
mov
rol
pop
sbb
cmp
push
(bad)
cmp
lds
fs
(bad)
sbb
bound
inc
mov
arpl
xor
sub
dec
push
retf
xchg
jmp
out
dec
or
or
jmp
pop
mov
cwde
fwait
inc
addr16
pushf
ins
mov
cld
pop
adc
and
inc
xor
push
sub
mov
sahf
push
stos
bnd
out
adc
and
jo
jg
lods
xor
mov
sub
in
(bad)
jmp
cmp
mov
repnz
in
adc
adc
mov
lock
mov
xchg
dec
sub
and
cmc
xor
scas
(bad)
jb
adc
sbb
xchg
icebp
xchg
jno
cmps
and
sub
lods
repz
in
xchg
sub
cmp
add
sub
jmp
jb
adc
or
lods
mov
cmp
mov
dec
push
push
iret
(bad)
movzx
xchg
loop
daa
out
mov
fwait
psrlw
rcr
loop
sbb
ss
scas
add
inc
mov
xchg
test
dec
dec
ja
inc
xlat
out
scas
fidivr
adc
inc
je
pop
icebp
and
ins
pop
push
or
movs
inc
ja
pop
imul
cwde
cwde
aam
or
dec
movs
and
mov
(bad)
ins
out
lods
psrad
test
fmul
rcr
adc
ds
xchg
xchg
stc
fisub
arpl
in
or
dec
jne
sbb
shl
out
cli
pop
inc
mov
gs
rcl
push
inc
arpl
mov
fistp
pop
loope
push
mov
stos
fwait
mov
mov
rcr
xchg
or
lds
mov
cmps
sub
cs
and
sub
adc
push
cmp
cmp
aas
mov
xor
das
mov
adc
jl
(bad)
imul
sub
cmp
mov
dec
fs
mov
clc
stc
in
sub
mov
ret
inc
mov
es
pop
mov
mov
ror
data16
fwait
aas
xor
outs
into
ss
xor
lods
sbb
aam
test
cmc
outs
(bad)
dec
push
sub
or
mov
add
(bad)
cmp
ret
idiv
retf
fsubp
aas
pop
lods
movs
(bad)
popf
lock
fistp
dec
push
out
and
sbb
add
iret
push
ficom
pop
jns
xor
pop
push
cmc
cmp
jg
dec
shl
jge
push
xlat
fld
fs
sub
sar
repz
cmp
retf
(bad)
mov
xor
mov
lea
dec
xchg
inc
aam
iret
ja
in
int
jg
or
mov
inc
ficom
repz
jnp
rol
jno
push
sbb
jno
lock
jecxz
lds
mov
je
aad
push
mov
outs
jle
lea
mov
mov
or
out
shl
mov
xchg
xchg
push
mov
adc
add
cmp
jmp
cs
sti
jmp
psubq
retf
aam
sub
test
ds
xor
idiv
(bad)
jg
mov
(bad)
jns
mov
in
jl
call
outs
test
push
sbb
sub
inc
mov
jp
jo
lds
mov
js
jle
or
dec
xchg
push
movs
and
cmps
fbstp
repnz
test
test
cmc
fwait
jle
adc
add
ret
inc
mov
lock
add
scas
nop
adc
jae
xor
mov
mov
sbb
dec
imul
xchg
dec
inc
mov
repnz
int
mov
call
push
scas
imul
daa
cli
sub
xor
or
lock
hlt
out
xor
pop
das
xor
jo
scas
icebp
push
or
adc
pop
add
out
enter
sbb
mov
adc
mov
sbb
xchg
cmp
iret
loop
shl
ss
jnp
lods
(bad)
sub
inc
mov
(bad)
repnz
rcl
mov
addr16
lea
icebp
mov
add
out
mov
or
add
sbb
idiv
ins
dec
adc
push
or
and
cmp
xor
jecxz
xor
je
pop
enter
or
ret
scas
push
sbb
ins
stos
clc
cld
lock
sub
push
add
and
and
fidiv
pop
push
fwait
mov
(bad)
call
xor
xchg
es
test
sbb
push
cdq
div
push
ins
stos
(bad)
es
cmp
xor
mov
xor
sub
jge
inc
mov
(bad)
aas
push
jbe
inc
sbb
push
mov
mov
or
jo
xor
sbb
adc
lea
add
fist
push
inc
cdq
add
or
imul
and
jg
mov
mov
in
mov
push
push
es
hlt
add
lods
lds
retf
jl
js
jb
or
xchg
js
retf
fwait
aad
sub
test
or
jecxz
pop
jns
bnd
sub
sub
pop
and
std
call
outs
jb
ret
mov
dec
test
mov
clc
lods
or
aaa
pop
and
jbe
ins
dec
mov
pop
push
repz
idiv
ror
(bad)
popa
sbb
sub
mov
add
pop
adc
jne
cmp
ins
cmp
jo
icebp
xchg
int
popf
(bad)
int
mov
cmp
dec
add
shr
push
jne
hlt
xor
jp
retf
repz
mov
adc
(bad)
sti
sub
sub
pushf
add
jo
mov
xor
stos
or
jno
xchg
mov
mov
aaa
call
sahf
pop
ret
mov
mov
push
jnp
(bad)
xchg
or
fs
lahf
or
repz
fwait
cmp
or
inc
ins
inc
mov
and
xchg
in
adc
stos
lods
cmp
sbb
aaa
adc
cmp
mov
adc
iret
movs
dec
adc
jb
adc
in
clc
es
aaa
das
scas
inc
jae
les
bound
fistp
stc
cmp
aas
mov
test
push
ins
stc
jmp
scas
xor
jg
cmp
out
push
add
jecxz
leave
sti
mov
mov
in
xchg
das
mov
call
inc
jbe
adc
cmp
sub
sub
cdq
push
out
out
repz
xchg
es
stos
cmp
daa
jnp
sti
cmp
cwde
sar
test
push
popf
dec
and
mov
add
rcl
in
inc
dec
arpl
sub
jecxz
loop
leave
dec
pop
aas
jecxz
mov
les
(bad)
fcomp
hlt
sub
sbb
test
enter
xor
addr16
pop
mov
xlat
cld
test
inc
test
and
bound
rol
mov
mov
pop
jae
mov
push
xor
mov
addr16
test
inc
icebp
mov
(bad)
jp
jne
xor
pop
mov
inc
xor
mov
(bad)
inc
pop
out
jno
pop
mov
sbb
sub
pop
push
mov
pop
mov
repnz
dec
div
popa
jnp
cdq
mov
xor
(bad)
test
scas
xchg
add
call
in
(bad)
aas
leave
je
xchg
imul
out
jge
and
mov
retf
test
in
xchg
xchg
(bad)
int3
xchg
cli
popf
mov
out
xchg
pop
paddsw
cmp
jp
mov
sbb
push
loopne
fstp
push
push
pop
es
mov
or
mov
adc
cmps
jo
imul
xchg
cmp
and
sbb
(bad)
stos
stos
lahf
fsubr
call
and
cmp
mov
adc
call
sti
(bad)
xchg
sub
retf
loopne
mov
mov
fst
xchg
hlt
inc
pushf
mov
and
pushf
les
jnp
cmc
rol
jae
pop
sahf
and
mov
push
dec
pop
enter
mov
fadd
imul
lea
bound
fsub
aas
lods
or
dec
cmp
int3
inc
add
aas
mov
sub
imul
xchg
xchg
and
les
mov
jl
mov
mov
cmp
xchg
das
jecxz
sbb
dec
and
xor
and
fstp
repz
test
xor
xchg
rcr
stc
inc
ins
(bad)
fcom
sub
xchg
adc
mov
pop
xchg
push
adc
mov
in
loope
xchg
and
lds
mov
jmp
jle
(bad)
hlt
test
xchg
push
push
retf
dec
das
in
mov
or
inc
and
es
xchg
leave
es
popa
fsub
push
and
scas
mov
jp
test
fst
adc
pop
lods
mov
push
enter
call
rcr
and
xchg
clc
pop
dec
stos
xchg
and
pop
mov
cmp
push
xor
jne
jmp
(bad)
adc
leave
stos
pusha
xchg
xor
fstp
cs
mov
ja
int
push
push
inc
sbb
or
jne
push
mov
lods
icebp
sbb
out
pop
dec
mov
loopne
adc
mov
xchg
or
cmp
pop
repnz
and
in
test
aaa
xor
mov
fidivr
cmp
les
ss
cmp
out
xor
xchg
aam
clc
adc
aad
ret
imul
mov
aam
inc
xchg
(bad)
cmp
and
call
xchg
mov
inc
and
pop
xchg
push
out
inc
push
push
mov
add
jge
fild
dec
popa
repz
mov
nop
sahf
repz
pop
test
(bad)
movs
(bad)
jp
mov
dec
pop
clc
cmps
jg
mov
in
pop
mov
dec
xor
rcl
pop
sbb
jmp
shl
and
imul
mov
ds
out
fnsetpm(287
cmc
out
pop
jl
out
or
cmp
aaa
(bad)
jecxz
add
not
push
add
aad
repnz
std
or
xor
or
ficomp
data16
ds
rol
sbb
mov
adc
jp
add
xchg
test
ror
retf
aad
mov
xchg
pop
inc
and
cmp
sub
mov
adc
mov
sbb
mov
fst
pusha
icebp
push
repz
pop
or
(bad)
adc
push
cli
add
(bad)
loopne
mov
and
retf
mov
rcl
enter
data16
lahf
bound
scas
adc
not
pop
into
jno
out
loopne
imul
movs
daa
mov
loop
or
addr16
mov
inc
arpl
mov
aaa
xchg
mov
sub
add
test
mov
add
inc
inc
xor
js
pop
repz
bound
adc
(bad)
lea
or
push
in
sti
or
dec
sbb
xchg
push
inc
xor
mov
stos
xchg
les
idiv
sub
mov
ficomp
mov
sbb
pop
cs
push
mov
stc
or
into
mov
push
push
bound
ror
jo
jge
pusha
mov
add
imul
adc
mov
push
int3
lds
pop
jp
xor
fstp
loope
mov
aam
sar
push
aaa
neg
add
mov
and
fdivr
mov
outs
sub
fild
ror
jae
leave
mov
mov
jbe
or
(bad)
mov
push
xor
data16
in
stos
cmp
cld
xor
adc
(bad)
xchg
xor
enter
adc
data16
xor
xor
push
xchg
xor
lods
pop
popa
ins
sahf
fdivr
xchg
ror
fwait
xchg
retf
fcmovnbe
sub
dec
add
aaa
gs
inc
cmc
cmc
push
and
call
repz
mov
dec
mov
(bad)
rcl
inc
aad
push
pop
xlat
sbb
je
icebp
out
cwde
jo
sub
jmp
lahf
scas
sbb
imul
daa
ret
add
and
lahf
test
mov
ins
fsubr
push
pushf
cmps
pop
mov
popf
int3
push
rol
inc
(bad)
pop
push
mov
retf
adc
inc
lea
sub
leave
and
outs
adc
lods
lods
call
cmps
jmp
add
xchg
jmp
mov
icebp
inc
mov
nop
adc
std
dec
add
fcomp
sbb
xchg
xlat
pop
xchg
mov
push
stos
xor
add
sti
jnp
cld
hlt
cs
jns
stc
icebp
jge
retf
mov
jns
(bad)
(bad)
out
hlt
fwait
aam
or
pop
add
mov
cmp
dec
dec
(bad)
lock
repnz
out
or
or
push
(bad)
and
xchg
or
popf
dec
sbb
sbb
and
(bad)
into
scas
cmp
call
loop
mov
mov
xchg
into
dec
pop
ror
cmps
stc
dec
inc
pusha
cmp
les
in
out
pushf
(bad)
jmp
mov
stc
sbb
idiv
fcomp
inc
je
xor
xchg
bound
into
xor
out
mov
stos
pop
push
ror
mov
std
sbb
shr
pop
or
add
aas
setns
mov
loop
cdq
sub
and
int3
adc
aam
mov
hlt
xor
inc
popf
call
int3
add
push
retf
pop
cs
retf
mov
sbb
cmps
in
imul
xchg
in
cld
loopne
aam
or
adc
adc
(bad)
sti
adc
jmp
or
cdq
mov
jle
pop
and
cmc
aaa
dec
retf
hlt
push
mov
retf
in
push
dec
ret
xchg
or
jns
in
cli
xor
imul
jmp
(bad)
push
add
jmp
add
mov
sub
sahf
hlt
mov
xor
add
push
xchg
dec
xor
(bad)
aas
mov
mov
pop
dec
retf
test
dec
aas
stos
or
mov
loope
paddsw
jmp
sub
pop
xchg
shl
es
mov
or
mov
rcr
adc
jae
mov
dec
xchg
pop
cmc
mov
out
stc
test
mov
fmulp
popf
push
push
mov
inc
jge
push
and
cmp
and
xor
pop
cli
cmp
add
hlt
pop
pop
int3
(bad)
fldcw
loopne
idiv
(bad)
mov
pop
or
add
or
pusha
imul
push
mov
push
jne
ficom
ss
stos
mov
pushf
or
pushf
and
repz
mov
adc
enter
call
xor
mov
rcl
outs
xchg
push
lods
(bad)
cmc
dec
(bad)
out
sbb
mov
addr16
and
and
inc
mov
add
fisub
mov
push
cmp
jl
pop
adc
mov
inc
clc
pop
fistp
xchg
int
xor
xchg
popf
inc
push
loop
pop
xor
push
es
mov
dec
in
clc
dec
fdiv
inc
test
loope
xchg
and
pusha
inc
xlat
adc
fcomp
push
loop
pusha
xor
out
fdivp
fldcw
and
adc
mov
js
ins
ja
pop
mov
out
fcom
pop
icebp
ja
out
or
xchg
adc
int
(bad)
call
cmp
or
aas
push
mov
out
outs
js
sub
test
mov
adc
adc
pushf
pop
popf
push
out
or
mov
mov
mov
push
mov
cdq
mov
(bad)
cli
shl
fwait
jns
xor
ins
(bad)
inc
out
int
dec
(bad)
mov
dec
fstp
enter
inc
inc
xor
jnp
vsqrtss
mov
movs
ds
mov
sar
inc
pop
int3
out
cwde
or
push
aas
sbb
pusha
ja
inc
xchg
or
jge
das
inc
xchg
jg
push
jp
pop
pop
lock
test
fistp
pop
pop
mov
xchg
pop
cmp
in
pop
xchg
xchg
xchg
scas
sbb
das
dec
aad
mov
inc
xor
xor
pushf
adc
cmps
movs
and
pop
test
fs
pushf
outs
pop
cmp
test
enter
add
inc
icebp
ret
dec
sbb
cmp
ret
(bad)
imul
and
push
add
push
inc
cmp
cld
idiv
mov
(bad)
movs
scas
retf
or
or
sahf
xor
fsub
test
and
lahf
(bad)
ss
jmp
fucomi
xor
sub
int3
into
fldcw
mov
add
mov
add
sahf
mov
arpl
mov
daa
pushf
sbb
pop
xchg
xchg
jmp
pop
aaa
addr16
mov
xor
stc
aad
push
push
scas
std
mov
test
retf
lds
loopne
jne
dec
std
xchg
mov
test
ret
retf
adc
sub
in
xchg
fst
int3
dec
add
mov
push
ss
or
sub
mov
call
adc
pushf
xor
movs
and
imul
mov
or
jne
sbb
push
lock
xchg
outs
ret
mov
mov
mov
lahf
add
sbb
fisub
dec
adc
pop
ds
mov
pop
imul
fld
imul
xor
dec
out
pop
adc
popa
sub
loopne
mov
movs
loop
add
adc
(bad)
shl
lahf
xchg
pushf
or
lods
push
(bad)
out
sahf
mov
mov
xchg
inc
loop
fwait
mov
push
fbstp
xchg
and
and
adc
lods
inc
adc
(bad)
fwait
xor
or
ja
sbb
sahf
xor
inc
jbe
jae
adc
pop
adc
test
rcr
push
shl
mov
inc
xchg
cdq
imul
mov
jle
cmps
jp
inc
pop
cli
and
hlt
adc
jle
cmps
rcr
rcr
jae
inc
into
outs
int
cmc
push
push
pop
jae
add
inc
inc
aam
stos
mov
outs
test
jae
adc
adc
popa
movs
and
in
arpl
not
inc
out
inc
pop
test
dec
bound
pusha
pushf
fidiv
jp
push
xor
mov
or
adc
mov
mov
aas
or
and
sbb
pop
je
xchg
sahf
aam
ds
xor
das
fsubr
mov
jne
les
mov
and
loop
push
pop
stos
(bad)
adc
mov
icebp
in
xchg
sub
daa
inc
jns
dec
mov
ret
mov
cli
or
sub
mov
mov
jecxz
push
mov
xchg
fbld
jecxz
int
add
lods
sar
sub
aad
or
jb
hlt
fisubr
scas
movs
js
daa
imul
cmc
rcr
imul
inc
dec
fwait
xchg
(bad)
push
jmp
inc
inc
loopne
inc
in
and
mov
lods
call
pushf
mov
fucomi
test
sbb
mov
and
cmps
mov
stos
or
add
sub
jg
ret
test
mov
add
fiadd
adc
inc
js
jp
gs
shl
adc
mov
xchg
xchg
cmp
push
and
ror
scas
addr16
jge
pop
mov
jnp
jle
loopne
cmp
xor
imul
in
ror
fmulp
sbb
fst
push
push
mov
push
inc
cs
cmp
jg
icebp
pop
dec
out
and
(bad)
loop
pop
arpl
dec
inc
inc
add
stos
call
test
out
mov
dec
clc
sub
dec
test
sbb
repnz
sbb
out
pop
div
rol
ins
xor
call
mov
std
xchg
cwde
and
out
out
repz
cs
jmp
test
push
xchg
dec
mov
test
xlat
retf
or
fimul
xchg
mov
nop
jbe
sbb
pop
sub
inc
sar
shl
mov
pop
imul
adc
test
dec
call
cmp
mov
xchg
sti
add
and
loope
test
xor
pop
sub
test
test
popf
loope
cmp
dec
sub
popf
int3
mov
jmp
jbe
and
shl
cmp
mov
or
fnsave
icebp
js
and
cmp
mov
mov
jmp
xor
cmp
mov
xchg
ror
test
test
ja
jge
and
mov
push
mov
xor
mov
aad
clc
inc
mov
sub
lahf
pop
lahf
mov
sahf
jge
enter
mov
retf
xchg
rcr
mov
and
sbb
in
hlt
mov
ds
push
movs
test
add
xor
push
fwait
nop
daa
dec
test
hlt
jmp
mov
jle
enter
(bad)
in
xor
push
ret
rcl
loope
dec
jg
pop
sbb
adc
stos
aam
mov
jae
add
lods
imul
sub
arpl
mov
or
sbb
push
mov
xor
sub
sbb
call
scas
jl
mul
cld
sbb
movs
test
sub
stc
ds
sbb
xchg
push
xor
or
cld
addr16
scas
xor
push
add
fmul
mov
je
aaa
xor
fld
mov
mov
ja
xor
jg
sub
jge
cwde
jmp
nop
mov
int3
adc
repnz
xchg
pop
(bad)
enter
fucom
retf
idiv
movs
sbb
push
daa
xchg
mov
mov
test
lods
inc
stos
sub
je
cmp
push
fidiv
mov
shl
shr
mov
xor
jge
pop
adc
fistp
xchg
jl
xor
sub
mov
mov
loop
leave
test
sbb
inc
or
xchg
scas
push
mov
(bad)
mov
cmp
shl
or
pop
mov
in
jo
mov
xchg
sti
fwait
lahf
add
ror
xchg
in
and
push
js
sbb
inc
sti
adc
mov
push
inc
cmp
pop
sub
mov
push
xlat
aam
pop
cld
dec
mov
fs
mov
iret
stc
gs
or
sbb
mov
adc
ja
(bad)
sbb
jnp
mov
xchg
jne
call
into
inc
clc
das
cld
shl
jl
add
dec
(bad)
out
clc
push
adc
dec
mov
mov
inc
xchg
cmp
xlat
dec
test
cld
jns
imul
jp
xor
(bad)
pop
pop
cmp
fs
xor
and
pop
ins
adc
pop
mov
adc
inc
cwde
(bad)
adc
in
movs
pop
dec
loope
movs
cmp
sub
popa
(bad)
fs
ss
mov
jb
pop
push
sub
push
pop
sub
cmp
adc
cs
xchg
out
data16
(bad)
ss
movs
sbb
pop
mov
pop
push
mov
pop
cld
mov
lahf
data16
lahf
jbe
movs
les
mov
ret
stos
mov
retf
sti
popa
xchg
loope
(bad)
pop
sbb
aaa
fs
cs
push
rol
ja
pop
add
dec
std
pop
cmps
ret
mov
pop
or
jp
xor
adc
inc
sub
xchg
cwde
movs
(bad)
movs
mov
dec
jnp
popa
inc
adc
imul
sub
pusha
gs
xchg
scas
adc
sub
sub
cmp
mov
jge
push
das
jle
mov
pushf
mov
outs
mov
dec
loope
outs
add
int
inc
adc
sub
mov
cmp
xchg
push
dec
ja
pop
and
cmp
aam
or
int
xor
imul
inc
jnp
pop
aam
or
in
adc
es
adc
sahf
pop
test
shr
mov
rcr
adc
sbb
pop
mov
mov
and
js
xor
push
push
enter
imul
push
xchg
xor
cwde
push
stos
mov
ins
lock
popa
mov
test
push
imul
inc
jp
shr
push
xchg
out
ds
add
jp
xor
inc
popa
(bad)
push
aas
adc
call
retf
xor
dec
mov
dec
adc
hlt
adc
test
push
in
adc
or
out
sub
xor
movs
sub
push
test
mov
into
ss
aaa
mov
fsubrp
xor
pop
mov
adc
sub
push
loope
or
push
inc
out
popa
(bad)
fldenv
out
push
mov
adc
rcr
scas
retf
mov
adc
out
cmp
fidivr
stos
(bad)
aas
mov
mov
(bad)
mov
icebp
int3
dec
pusha
mov
icebp
mov
sub
rcr
out
push
mov
and
aam
les
mov
and
mov
outs
out
out
aad
xor
(bad)
inc
pop
pop
stos
outs
add
adc
inc
stos
and
mov
dec
inc
out
push
dec
in
loop
ins
stc
pop
lea
xor
mov
mov
mov
adc
mov
ja
pop
mov
jae
adc
push
pushf
ret
aaa
mov
pop
fdiv
stos
push
jnp
and
jno
jns
into
pop
out
mov
repz
push
or
xchg
sub
xchg
push
sbb
lds
cmovb
shr
xor
call
adc
push
daa
pusha
mov
xchg
gs
sahf
jb
mov
sub
xchg
lods
cs
xchg
std
in
sti
nop
xchg
sub
cmp
cmp
sbb
shl
sub
add
sbb
popf
mov
mov
mov
shr
repnz
outs
jbe
push
pop
pop
lods
lock
inc
xchg
mov
add
stos
jbe
jg
sub
or
add
test
mov
inc
in
push
int
imul
adc
daa
push
mov
fisttp
outs
fst
ror
popa
inc
jmp
mov
mov
or
nop
cwde
jb
jb
sahf
inc
retf
(bad)
mov
vreduceps
ret
fwait
and
cmp
test
mov
lds
mov
add
or
pop
add
jns
sahf
lods
add
lea
cld
inc
pop
in
lods
adc
sub
in
imul
hlt
pop
call
mov
jne
imul
cli
pop
and
inc
outs
and
push
inc
ficomp
mov
and
and
pop
ret
sub
cmp
retf
sub
enter
fisubr
mov
stos
sbb
sar
das
(bad)
test
jle
ret
neg
test
out
dec
div
mov
repnz
inc
and
ret
xchg
mov
nop
in
std
mov
jae
data16
add
and
inc
ret
sub
jle
cs
mov
push
xor
movs
cmp
mov
xchg
or
mov
ror
xchg
call
cmp
xlat
aad
jbe
ret
mov
xchg
jmp
mov
jmp
sbb
jg
mov
xor
jl
int3
jecxz
jns
jno
test
dec
(bad)
jae
mov
fidiv
cmps
sahf
jns
jno
pop
pusha
push
jnp
retf
ins
lods
(bad)
xor
or
inc
repnz
jno
test
mov
lods
inc
add
nop
inc
jp
out
jne
jg
jb
and
(bad)
aad
ss
pop
push
jge
inc
ret
push
sub
push
jmp
ja
gs
push
and
mov
add
mov
ficom
inc
add
fst
fcom
add
retf
bnd
mov
dec
stos
aaa
rcr
clc
mov
jae
pop
aad
ins
les
stos
push
inc
mov
push
setnp
push
iret
retf
xor
mov
in
xchg
jmp
ficom
jns
fdiv
xor
push
jp
jmp
in
inc
repz
dec
cmp
test
jmp
add
ss
out
ins
mov
adc
mov
in
pushf
out
inc
jne
aad
jmp
aad
mov
adc
loopne
xor
sbb
cli
cmp
push
xor
sub
outs
push
sub
xchg
loop
pop
dec
xchg
hlt
je
arpl
sbb
jnp
ja
dec
xor
inc
adc
lea
mov
cmp
push
out
xchg
sub
ins
out
sub
pop
lahf
jmp
cli
sub
and
fucom
add
ins
or
mov
inc
jmp
xor
mov
cdq
clc
push
mov
data16
add
cmp
(bad)
ja
mul
into
(bad)
leave
popf
clc
ins
addr16
outs
in
mov
xor
dec
call
jl
adc
je
pop
in
xlat
dec
and
cli
add
mov
fwait
pop
mov
mov
sbb
shl
addr16
fistp
arpl
push
imul
cmp
inc
xchg
outs
fimul
push
pushf
pop
xor
fistp
js
jnp
call
and
enter
int3
cmc
clc
(bad)
push
dec
jl
cmp
pop
jo
xchg
mov
add
cmp
or
(bad)
push
loopne
cdq
mov
and
(bad)
mov
(bad)
xchg
test
fimul
in
and
mov
cdq
aad
ret
stc
fdivp
test
(bad)
aad
(bad)
stos
scas
mov
repnz
xor
jae
xchg
pusha
inc
loopne
lock
mov
push
lds
lahf
xchg
pop
cmp
test
pop
call
xor
out
add
mov
cmp
mov
(bad)
jnp
iret
mov
xor
call
mov
jae
adc
cmps
jmp
retf
adc
pop
add
cmps
out
mov
or
mov
push
lods
shl
xor
jbe
mov
xchg
and
jecxz
jb
mov
jbe
sub
xor
jmp
in
pop
into
cmp
mov
pop
cmp
lods
mov
sbb
cld
pushaw
ins
and
jmp
js
loope
sbb
aas
cwde
fnsave
test
or
shr
bound
pushf
add
stc
sahf
call
mov
jmp
dec
imul
stc
mov
push
xor
adc
push
fdivr
(bad)
inc
stos
dec
sub
out
inc
and
out
add
push
inc
mov
inc
test
pop
imul
sbb
shl
xor
(bad)
(bad)
xchg
fild
popa
mov
fist
mov
ja
mov
out
adc
dec
mov
lea
push
leave
push
mov
in
or
rol
ins
cmp
rcl
push
sti
into
xchg
nop
pop
cvtps2pi
jo
(bad)
ja
push
bound
jl
adc
cmp
adc
adc
pop
dec
pop
adc
(bad)
dec
into
xor
aaa
sub
mov
inc
inc
sub
imul
inc
(bad)
and
cld
or
pusha
push
xlat
xlat
jp
jnp
xchg
sbb
or
gs
add
mov
(bad)
out
ss
and
jns
sbb
jne
ret
test
fs
push
jae
(bad)
mov
mov
ja
or
xchg
adc
outs
or
inc
es
in
pushf
(bad)
mov
nop
gs
xchg
imul
dec
(bad)
fdiv
addr16
xor
sub
pop
cwde
adc
mov
jae
jp
or
sti
fwait
enter
sbb
xchg
pavgb
loope
inc
push
ds
cld
xor
call
mov
fidiv
inc
rcr
xor
lods
add
sub
test
je
xchg
icebp
or
into
cdq
jg
sbb
inc
call
cmp
fst
mov
sahf
div
aaa
int
mov
std
lea
cmpxchg
jge
icebp
out
cmp
mov
mov
pop
push
mov
jg
call
inc
or
cwde
push
add
daa
jno
(bad)
jl
out
jmp
sahf
cmp
push
es
mov
pop
sbb
aad
push
cmp
mov
cmps
add
jmp
rol
les
xchg
mov
mov
sbb
jg
test
in
mov
ins
xor
ret
inc
sub
(bad)
lods
int3
fistp
aas
aas
sub
jle
inc
xchg
inc
xchg
mov
mov
jne
std
in
fs
rsm
mov
lock
ss
sbb
popa
arpl
test
fcmovb
cmp
imul
sbb
ss
ja
ret
stos
adc
and
push
adc
outs
out
test
adc
or
test
mov
inc
lods
outs
push
adc
scas
lahf
jmp
cwde
or
push
mov
repnz
mov
pop
dec
mov
call
jbe
cmc
inc
ins
in
push
or
mov
push
outs
jg
sub
pop
fwait
sbb
jecxz
sbb
push
cdq
(bad)
in
loop
or
imul
xor
ins
dec
mov
cmps
inc
ret
xchg
ins
(bad)
jmp
fsub
es
mov
sbb
jl
adc
mov
add
mov
mov
ja
push
mov
and
out
call
mov
dec
aaa
push
jne
pop
pop
test
arpl
in
mov
es
cdq
xor
and
jecxz
aas
ins
inc
sbb
out
inc
retf
sbb
bound
mov
mov
jmp
das
arpl
xchg
or
fild
mov
push
pop
mov
pop
and
jno
jg
push
lds
leave
push
sub
shr
xchg
mov
mov
movs
inc
loop
je
pop
dec
sub
popa
test
dec
xor
jae
dec
in
or
lea
mov
jae
xchg
in
sub
sub
sbb
push
(bad)
out
test
mov
and
cs
iret
and
push
bound
push
js
cld
fwait
mov
clc
sub
js
call
cli
inc
gs
xchg
out
std
fisubr
daa
addr16
sti
adc
and
or
pop
pop
mov
xlat
xlat
mov
xlat
add
popa
and
xor
cli
pop
pop
cmc
mov
mov
adc
out
test
(bad)
rcl
psraw
xor
xchg
lods
or
jecxz
sub
inc
push
push
jp
cmp
pop
rcl
cmp
sbb
movs
das
rcr
fdivr
sub
movs
dec
inc
xchg
ficomp
xor
fild
mov
test
mov
push
pop
int3
mov
jecxz
cmp
add
test
xor
das
inc
inc
jl
xchg
iret
jns
xchg
addr16
mov
add
cwde
cmp
mov
mov
fimul
push
daa
loop
xlat
int
xchg
push
test
scas
cmp
xor
sbb
or
xchg
mov
(bad)
retf
call
inc
mov
inc
mov
int
rol
test
leave
cmp
xor
add
and
sar
fbld
adc
rcl
push
loopne
push
cmp
jns
dec
bound
xchg
fldenv
or
ds
cmp
stc
pusha
lods
movs
mov
add
dec
call
movs
inc
mov
pop
in
sbb
loop
int
inc
es
nop
and
ja
pop
test
ret
cmp
hlt
aam
jle
sub
pusha
ficom
mov
sub
imul
cmp
mov
mov
xchg
imul
jmp
fild
and
push
sub
add
ficomp
inc
push
test
nop
out
ret
jp
cmp
jo
out
mov
sbb
sub
sbb
(bad)
mov
ds
dec
push
std
jge
mov
cmp
mov
dec
cld
jl
mov
jp
cmp
xchg
popf
add
movhps
push
jnp
adc
adc
push
jmp
mov
stos
test
mov
xchg
jno
shl
repz
hlt
nop
xchg
inc
aas
dec
out
mov
sub
mov
(bad)
xchg
or
fld
push
lahf
stos
ja
pop
(bad)
sub
pop
mov
pop
xor
scas
call
daa
jle
call
xchg
outs
dec
xor
adc
mov
lods
sub
add
test
pop
rcr
in
and
nop
mov
mov
(bad)
hlt
cmps
jb
cmp
popa
das
shr
scas
fcom
jae
and
enter
ja
xchg
es
xor
push
fisub
pushf
aas
aaa
push
in
pop
test
es
jp
jl
call
fisubr
pushf
out
out
int
xchg
cmc
inc
sub
sbb
xchg
cmp
ins
mov
mov
rcr
pusha
fcmovnbe
xchg
fcomi
jo
mov
jp
jmp
test
int3
imul
mov
adc
sbb
ins
mov
and
lods
dec
mov
push
arpl
sbb
fwait
sub
fdivr
xchg
mov
pushf
nop
sbb
(bad)
out
xor
xchg
or
mov
sub
repz
adc
dec
out
or
mov
adc
leave
jae
mov
ja
mov
adc
dec
cmp
push
pop
or
mov
jmp
ror
lds
cmp
in
leave
mov
popf
sahf
mov
ins
fdiv
scas
mov
or
mov
xchg
dec
xor
in
or
add
jo
xchg
(bad)
xor
or
push
dec
push
retf
sbb
mov
mov
icebp
ins
hlt
mov
xchg
sub
sub
pop
cmp
cs
test
jmp
lock
movaps
mov
mov
imul
jl
ss
xor
retf
mov
aad
mov
mov
popa
mov
or
push
lock
daa
pusha
push
rcl
ret
lods
(bad)
mov
cdq
add
sahf
mov
push
test
push
adc
ret
les
imul
mov
retf
leave
adc
fcomip
dec
sahf
fcom
(bad)
jle
lea
cmps
test
mov
jo
inc
mov
and
xor
addr16
mov
cmp
pop
mov
daa
mov
inc
aad
jg
xlat
retf
sub
ds
test
mov
pop
cmp
jmp
or
ficom
js
(bad)
test
mov
jge
aaa
cmc
cmps
push
ficom
mov
fmul
call
rcr
inc
mov
inc
add
fisubr
inc
inc
loop
repz
push
add
sub
test
mov
aas
dec
cmp
jmp
dec
xlat
and
or
sbb
int
add
lock
or
and
std
mov
jbe
test
sbb
dec
or
adc
xchg
imul
div
push
jp
cmp
dec
(bad)
popa
jns
push
cld
push
pop
xchg
pop
das
lods
call
daa
pushf
ss
mov
ror
push
xchg
inc
in
and
mov
mov
mov
popf
aas
out
fbld
out
enter
xchg
adc
and
ror
xchg
movs
sbb
push
sub
mov
sub
mov
ins
ret
or
test
mov
push
or
xor
push
mov
pop
mov
ds
inc
sahf
test
aas
sub
daa
mov
test
mov
dec
push
ror
in
and
pop
clc
daa
push
fldz
add
inc
pop
imul
and
push
jns
sbb
sub
mov
xchg
gs
cwde
mov
leave
out
push
lods
xchg
popf
cs
lahf
push
test
fisttp
stos
jne
fwait
xor
push
cmp
add
sbb
jmp
push
pop
int3
push
shl
out
gs
test
dec
mov
aas
add
shl
shl
int
push
sahf
inc
jecxz
xor
cmc
lea
adc
sbb
leave
movs
outs
in
gs
sbb
hlt
aas
out
daa
xlat
cdq
clc
sbb
sub
jnp
lahf
movs
jno
sbb
jnp
jbe
shl
outs
in
hlt
mov
adc
sti
fst
ror
jae
mov
or
ins
test
or
push
jne
(bad)
sub
jb
or
pop
cmp
in
shl
ret
xor
mov
or
mov
xlat
repz
xchg
pop
add
dec
sub
mov
lds
add
mov
jecxz
xchg
cmps
mov
(bad)
inc
sub
repz
push
retf
xchg
stc
xor
and
pop
inc
sub
mov
mov
jg
lods
dec
push
test
jne
jo
push
fstp
or
loop
pushf
adc
ja
xchg
xlat
fcomip
int3
sub
inc
adc
pop
sub
jne
mov
outs
lea
push
cmps
test
fcom
ja
js
jp
sbb
pusha
mov
add
jmp
jbe
fisttp
dec
fisubr
into
(bad)
jle
jecxz
mov
imul
je
lahf
adc
or
dec
mov
mov
xchg
fucomp
pop
push
mov
lock
cmps
push
push
loopne
ins
stos
inc
aam
leave
push
jb
cli
adc
js
inc
mov
xchg
lock
les
call
aaa
push
aam
scas
inc
inc
xor
or
idiv
loopne
cmp
mov
mov
jo
jp
or
rol
pop
push
pushf
and
ret
test
test
or
daa
push
and
lahf
push
dec
pop
cdq
mov
gs
out
out
mov
adc
xor
mov
sar
clc
xor
jg
cwde
xor
or
xor
xor
retf
leave
jmp
jl
adc
adc
dec
rol
and
and
xor
push
outs
iret
push
jbe
mov
shl
add
inc
cli
ss
mov
lods
sub
xor
cwde
stos
je
adc
and
inc
retf
add
stc
shr
xor
lods
outs
dec
scas
stos
and
mov
mov
sub
mov
jmp
fs
sub
cmps
inc
loope
cld
push
jo
(bad)
dec
cs
dec
pop
mov
dec
fistp
sbb
outs
push
repnz
push
je
test
sbb
pop
pop
push
scas
xchg
fcomp
in
push
xchg
sti
jle
fcmovbe
test
mov
jge
sub
cmc
pop
and
retf
push
in
jmp
outs
loopne
stos
adc
ret
movs
sti
dec
jg
sbb
mov
sbb
fldcw
sbb
and
in
in
or
and
aad
aaa
inc
push
adc
add
mov
or
dec
jmp
xchg
xchg
jmp
movs
pusha
lea
loopne
mov
xor
repnz
or
or
inc
cdq
xchg
test
jns
jge
icebp
int
leave
cmp
push
mov
jp
jg
push
inc
mov
test
add
push
icebp
je
call
xchg
jne
push
xor
cld
shl
push
aad
rcr
adc
sub
sub
cdq
mov
or
or
es
clc
xchg
jl
mov
pop
mov
leave
mov
loope
jmp
ret
stos
or
fdiv
mov
push
dec
data16
scas
cli
sahf
or
call
mov
ins
push
int
lea
outs
out
add
pop
xor
nop
add
shr
cwde
sti
push
repnz
test
iret
jg
aas
pop
fbstp
dec
and
sub
iret
cwde
loopne
aam
cmp
cs
ins
xchg
addr16
ins
dec
adc
or
neg
xchg
pushf
cmps
(bad)
push
mov
xchg
sbb
mov
sub
mov
adc
lds
jae
mov
push
mov
int
inc
jns
add
inc
pop
mov
ds
jmp
out
xchg
aas
pcmpgtd
or
sub
(bad)
cmc
jmp
jbe
out
daa
mov
mov
mov
and
scas
cld
stos
shr
test
repnz
cmp
sub
xor
retf
sbb
icebp
imul
sub
xor
mov
call
lods
xor
ins
les
data16
imul
xor
shl
mov
xor
or
mov
xchg
sti
aam
ret
inc
xabort
aaa
frstor
mov
inc
adc
aaa
pop
push
xchg
jns
push
inc
mov
lahf
cmp
or
clc
cmps
dec
sub
(bad)
sti
hlt
dec
lods
mov
jecxz
mov
xchg
fsub
cwde
loop
add
fisub
sbb
push
mov
(bad)
sbb
xor
sub
pop
pop
imul
jecxz
mov
or
mov
in
mov
dec
outs
(bad)
sub
ins
push
mov
dec
dec
mov
and
ins
push
inc
dec
inc
in
sub
adc
cmps
popf
lods
cli
sub
mov
mov
pop
pusha
stos
cmp
push
pop
mov
gs
sbb
shr
push
push
repnz
adc
dec
fnstcw
or
add
mov
cmp
shr
aad
in
pop
dec
nop
add
sbb
sub
int
fisub
xor
ret
sbb
sub
in
or
cdq
dec
(bad)
shr
push
cmp
out
pop
mov
stos
push
out
xor
int
les
add
adc
cli
jbe
stos
fist
call
pop
shl
push
mov
jne
mov
ror
popa
call
fs
xchg
or
call
push
stos
hlt
fld
neg
shl
mov
jmp
mov
fs
or
mov
cmp
pop
or
aam
sahf
movs
into
pop
(bad)
cmps
clc
cld
cmp
mov
fmul
and
(bad)
adc
push
add
jp
jae
xchg
mov
push
sbb
aad
imul
push
mov
out
and
and
(bad)
ficomp
pop
loopne
mov
inc
dec
mov
and
xchg
adc
jl
aad
add
adc
ss
icebp
adc
pop
inc
rcr
cdq
pop
scas
ret
out
mov
fidivr
inc
add
lds
fsubr
jp
jns
enter
jge
in
push
data16
mov
ins
mov
fistp
pop
popa
push
sub
mov
outs
nop
push
adc
push
jp
(bad)
fcmovu
inc
push
mov
test
pop
pop
arpl
(bad)
xlat
or
jmp
inc
mov
gs
sub
fdivrp
call
cmc
push
adc
daa
hlt
jns
repnz
pop
cmp
pop
fadd
ja
sub
fcmovnu
adc
pop
mov
daa
test
sub
and
mov
fwait
in
mov
stc
or
cld
hlt
in
std
jo
xor
fild
mov
retf
clc
xchg
and
sub
(bad)
imul
test
les
pop
inc
movs
sub
pop
xchg
xchg
jns
sub
loop
inc
or
xor
jns
jb
ret
cld
ret
sahf
jbe
dec
xchg
das
push
cmps
sub
outs
cld
dec
repnz
mov
and
clc
sub
inc
fdiv
repnz
dec
pop
jmp
outs
mov
sbb
fist
out
xor
cmp
adc
jae
loopne
ret
pop
sbb
int3
xchg
retf
and
xchg
pop
push
or
cdq
in
adc
cmps
mov
dec
xor
push
iret
jo
mov
add
outs
popa
cmc
mov
mov
out
cld
sti
push
xchg
(bad)
out
nop
sbb
popa
adc
inc
mov
pop
bnd
sub
mov
(bad)
xor
cmp
xchg
or
das
jno
aas
xor
aaa
sahf
fdivr
inc
push
popa
jl
pop
(bad)
mov
jb
pop
add
ins
or
push
(bad)
push
sub
mov
sbb
ret
loop
xchg
popa
xchg
adc
dec
pop
jbe
mov
sbb
popf
or
(bad)
nop
lock
cmp
add
movs
fcom
xor
cdq
add
or
(bad)
cld
mov
int3
xor
or
pop
out
and
adc
jae
dec
pop
push
xchg
movs
xor
std
(bad)
jo
test
jns
bnd
mov
and
ins
cmp
repnz
in
mov
popf
cmps
add
xor
adc
jp
add
cmp
lock
mov
into
xchg
fisttp
lea
popa
cld
mov
or
inc
xchg
add
nop
lahf
cli
adc
ja
dec
stos
out
mov
or
je
push
add
cmps
xchg
mov
std
movs
loopne
add
outs
or
stos
sbb
pop
shl
ins
sub
fisttp
mov
in
sar
pop
test
outs
sbb
pop
xor
in
sub
sti
fidiv
pop
pushf
ret
mov
or
and
scas
mov
jno
sub
mov
or
cs
jne
mov
cmp
xchg
cs
aad
dec
mov
(bad)
pop
outs
sti
(bad)
out
mov
in
push
das
cmp
aaa
mov
push
cmp
cmp
pop
(bad)
cmp
add
outs
ss
or
jo
leave
and
and
mov
bound
jns
cld
jl
mov
sub
(bad)
mov
adc
xor
mov
adc
adc
js
push
or
mov
pop
or
cmp
cmp
(bad)
test
std
pop
lea
adc
fcmovnbe
stc
fistp
ds
cmp
aaa
ins
xchg
sahf
jge
mov
lock
inc
cmps
mov
lods
fisttp
xor
lahf
xchg
lods
sub
mov
adc
cmp
or
in
jmp
mov
mov
in
jl
xor
mov
or
add
mov
ror
leave
mov
sti
cdq
aas
shl
outs
retf
mov
call
push
push
inc
xor
test
cli
sub
mov
jne
push
jmp
int3
cmp
sub
pop
xchg
sbb
lea
or
cmp
add
xchg
xchg
fucomip
dec
sub
xor
es
jecxz
xor
das
jnp
cld
and
(bad)
adc
aaa
aaa
and
or
shl
rcr
out
call
fsubr
int
int
and
mov
xor
pop
mov
or
inc
sub
loop
push
or
xchg
out
sbb
mov
pop
stos
xor
jae
mov
adc
jno
data16
mov
inc
add
xchg
adc
add
hlt
loope
sub
retf
pop
std
and
loop
jns
imul
rcr
mov
push
scas
or
mov
pop
sbb
icebp
daa
inc
add
xor
stos
sar
mov
call
int
mov
aaa
pop
mov
cmc
push
jns
dec
out
mov
cmp
mov
fnstenv
cmp
les
lods
vrcp28ps
pop
icebp
scas
add
adc
out
add
pop
xor
sub
(bad)
shl
sub
pop
cmp
mov
xor
je
leave
jo
cli
popw
data16
das
leave
mov
pop
mov
mov
aad
scas
(bad)
es
inc
push
mov
leave
pop
pop
enter
jne
mov
or
nop
jmp
addr16
into
bound
push
neg
mov
addr16
aaa
(bad)
es
cli
test
ret
mov
push
(bad)
ds
in
ins
(bad)
mov
bound
ja
pushf
inc
xor
fcmovb
lds
push
cmps
inc
int
je
shl
mov
lods
dec
mov
pop
push
scas
(bad)
aas
lock
data16
cmp
add
dec
xor
add
shl
ret
xchg
test
dec
lods
mov
js
fstp
ret
mov
mov
cmps
mov
stc
fsub
and
inc
aas
movs
pop
mov
mov
push
or
or
push
aam
jg
enter
xchg
mov
ins
je
inc
sar
pop
inc
sbb
and
add
ss
mov
or
sbb
cmps
mov
repnz
add
mov
dec
das
loopne
ins
dec
fisttp
inc
mov
mov
enter
pop
lahf
call
adc
icebp
adc
push
rcr
add
cmp
aad
xchg
ret
aam
test
pop
mov
ss
push
mov
(bad)
dec
push
test
push
mov
stos
and
fwait
sbb
out
mov
inc
aam
cmps
mov
jnp
gs
inc
sub
mov
mov
out
jns
movs
add
jno
lock
stc
mov
les
mov
aad
retf
(bad)
fist
or
xchg
or
add
xchg
scas
sub
jp
sub
sub
cmp
jno
inc
xchg
es
loope
cs
add
retf
mov
cs
out
mov
mov
icebp
ror
(bad)
fmul
or
inc
push
aad
les
cs
or
adc
ja
neg
dec
cmp
dec
xor
sub
(bad)
push
jae
mov
cmp
cmp
mov
(bad)
pop
mov
push
jbe
ja
push
ror
push
repnz
jmp
sub
bnd
(bad)
fmul
mov
mov
and
push
mul
dec
xchg
sbb
adc
add
mov
ins
hlt
in
and
mov
ja
add
sub
lea
pop
call
call
ret
lds
sbb
cld
jl
cmp
repnz
dec
fst
call
lock
loop
sub
imul
pop
int
xor
addr16
enter
test
xor
ret
out
push
mov
adc
out
cs
mov
shl
mov
rcr
jns
cmc
mov
jno
pop
jle
ror
and
add
jl
dec
mov
mov
xlat
ds
(bad)
fisub
stos
sub
imul
sahf
je
cmp
add
pop
retf
cmp
mov
cmp
test
lods
mov
fistp
movs
xchg
int
cmc
std
xor
stos
lds
jnp
jge
popa
pop
lea
movs
mov
pop
dec
retf
out
xchg
xchg
cmp
mov
movs
sub
out
adc
xchg
dec
aas
mov
mov
cmp
movs
mov
push
test
test
pop
pushf
mov
pop
pop
inc
loopne
daa
dec
adc
jb
inc
pop
inc
fs
xchg
xchg
pop
xchg
retf
or
push
jmp
mov
dec
lea
scas
mov
in
imul
pop
test
repz
dec
adc
pop
out
pop
je
fstp
scas
and
lods
pop
js
call
pop
ins
(bad)
rcl
dec
jp
cmp
and
jl
push
or
int3
push
and
sub
xchg
into
dec
outs
(bad)
fidiv
pop
dec
inc
xor
sbb
outs
imul
add
test
out
lods
xor
add
add
or
or
mov
dec
scas
into
cmc
mov
add
ins
push
jg
cmp
xchg
stos
xchg
sbb
lock
sub
gs
lahf
pusha
add
add
shl
xor
jmp
pop
mov
or
(bad)
dec
xor
pushf
add
cmps
xor
popf
int
mov
cld
jmp
adc
fnop
int
movs
xchg
imul
sub
mov
push
test
(bad)
pop
rol
xchg
retf
stos
adc
div
fwait
cmp
loopne
mov
dec
cs
data16
mov
movs
sub
push
frstor
cdq
mov
fisubr
and
pop
mov
cmp
sub
fldenv
sti
xchg
call
ss
out
xor
pop
aaa
aad
sub
sbb
fwait
push
mov
jnp
mov
in
bnd
or
adc
xor
cmps
jecxz
fwait
jg
mov
outs
cmp
jnp
cwde
ins
mov
sbb
or
loope
pusha
in
jns
sbb
xchg
out
inc
aad
push
or
data16
loop
loope
lds
pop
sar
pop
daa
dec
lods
add
adc
fadd
sub
mov
pop
xor
inc
mov
in
push
cwde
and
in
cwde
dec
mov
pop
das
dec
pusha
sub
mov
xor
imul
aas
lahf
jp
dec
mov
enter
stos
(bad)
out
xor
bnd
and
dec
in
mov
fwait
inc
push
xchg
rcl
enter
xor
daa
ficom
pop
push
xchg
outs
xchg
aad
int3
cli
lea
mov
push
shl
push
mov
push
sub
mov
jbe
or
imul
pminsw
xor
pop
cdq
lods
sub
sub
push
call
pop
mov
add
mov
jnp
mov
addr16
adc
cli
inc
mov
imul
idiv
push
and
fadd
cdq
jae
cs
xchg
rcl
push
mov
push
fdiv
mov
mov
jbe
rcl
sub
daa
inc
or
imul
and
(bad)
mov
int3
cli
arpl
int
mov
inc
int
hlt
mov
fs
pop
movs
rcl
mov
xchg
xchg
lea
repnz
jne
cmc
mov
in
dec
add
(bad)
mov
jae
loopne
sub
loopne
xor
out
push
shl
(bad)
sub
cmps
inc
pop
xor
xor
mov
aaa
add
imul
mov
lock
leave
and
add
movs
cmps
push
mov
push
adc
pop
ret
dec
cmp
rcr
test
repnz
xchg
inc
xor
sub
push
or
push
mov
lods
add
pop
cmc
mov
mov
out
push
jbe
cdq
retf
jne
clc
add
fist
jecxz
sub
cli
dec
adc
jnp
mov
and
mov
hlt
or
cmp
test
and
sar
mov
shl
sbb
push
xchg
cmp
in
xor
sbb
inc
test
mov
add
add
xchg
and
loop
repz
je
(bad)
sbb
pop
sub
sbb
jecxz
lahf
ss
mov
cli
jmp
and
push
stos
lahf
push
pusha
and
into
(bad)
dec
push
in
fcmovb
push
and
push
out
jbe
aas
mov
dec
pusha
aam
dec
bound
into
cli
push
aad
pop
into
mov
fisubr
into
scas
pop
cmp
fs
out
sbb
and
jecxz
icebp
and
jae
rcr
out
jae
xor
ret
sub
or
aas
cs
imul
iret
rol
test
bswap
shl
cmp
mov
jbe
jns
sahf
mov
mov
repnz
and
lods
cmps
xchg
hlt
je
mov
add
pop
push
push
icebp
sub
sbb
cld
and
mov
ja
jno
aas
and
xchg
loope
xor
mov
xchg
(bad)
cmps
push
cmp
jmp
out
rcr
inc
sbb
test
test
xlat
sub
ds
push
sub
mov
mov
adc
mov
ret
and
sar
shl
js
aaa
xchg
jnp
push
jmp
mov
fdiv
in
inc
lds
cli
jbe
xchg
jle
adc
mul
pop
(bad)
icebp
jle
inc
dec
or
in
inc
xor
cld
add
jle
cmp
xchg
stc
dec
mov
movs
fdiv
cmps
pop
aam
dec
sbb
and
aas
push
inc
mov
test
leave
and
out
xchg
mov
aad
retf
and
ret
ja
or
inc
pop
add
jmp
fcom
or
loope
jge
jb
jecxz
lahf
arpl
jl
fisttp
pop
sbb
inc
sbb
lds
cmp
pushf
in
gs
cmp
xlat
adc
jge
pop
outs
popa
jmp
test
and
fmul
mov
cmp
loopne
sbb
fistp
add
sti
call
rol
je
movs
jmp
xchg
dec
add
xchg
test
popa
pop
int
cmps
add
add
pop
imul
jne
sbb
or
outs
iret
jns
dec
push
sbb
dec
(bad)
fadd
jno
mov
dec
loopne
fild
pop
cld
mov
jo
pusha
lods
das
pop
pushfw
push
xchg
jmp
add
and
or
jbe
test
fisttp
cld
mov
add
inc
xor
es
ins
cli
inc
inc
jle
mov
sub
ins
push
cmp
sahf
daa
cmp
mov
outs
mov
push
loop
inc
adc
or
pop
popf
jle
jmp
scas
jo
add
push
xor
push
jo
bound
jo
mul
fwait
or
loopne
out
popf
pop
ins
mov
add
ins
lods
pushf
mov
lods
and
mov
xchg
ror
ds
call
jmp
das
mov
add
(bad)
imul
push
pop
lahf
ins
ds
daa
dec
add
push
pop
xchg
mov
dec
dec
movzx
in
into
pop
or
xor
xchg
cs
mov
pusha
xchg
dec
jle
ins
cld
push
mov
cmc
iret
jne
arpl
imul
in
inc
push
shr
int3
aam
pusha
loop
add
es
and
jp
movs
jmp
add
add
fwait
aam
mov
sbb
retf
clc
fimul
rcr
mov
(bad)
(bad)
repz
ret
fs
mov
mov
add
xchg
jmp
test
add
or
in
pusha
leave
retf
arpl
dec
inc
xchg
data16
outs
mov
ja
pop
sub
push
pusha
sbb
or
bound
mov
pop
dec
es
pop
add
or
adc
(bad)
loop
push
cmp
lds
pop
or
dec
test
cs
push
jne
popa
shl
frstor
xor
and
sti
test
and
dec
sub
mov
fbld
ja
test
add
jecxz
inc
xchg
and
dec
jle
mov
push
bound
push
ds
scas
xchg
pushf
xchg
scas
inc
pushf
retf
inc
int
(bad)
mov
pop
sbb
ret
stc
ffree
sbb
add
mov
cmps
fiadd
call
iret
inc
or
add
adc
repz
jae
lock
(bad)
mov
push
dec
xor
sbb
jecxz
sbb
add
mov
leave
push
fsubr
daa
xor
mov
mov
mov
and
or
test
dec
pop
iret
xchg
fwait
push
pop
jecxz
gs
xchg
or
out
mov
mov
pop
das
jge
xor
cmp
daa
(bad)
std
add
ret
fcomp
outs
sub
or
sub
sub
xchg
call
pop
xchg
imul
addr16
enter
sbb
in
clc
int3
loopne
pop
aad
and
aam
mov
push
pop
dec
enter
xchg
(bad)
lods
popa
aam
adc
sbb
repz
fld1
es
mov
sar
mov
pop
xor
adc
dec
xor
mov
das
imul
mov
cmp
fstp
fstp
fwait
loope
(bad)
ror
movs
sbb
pop
or
es
pop
into
aad
push
popf
dec
aaa
jo
xchg
xchg
dec
stos
and
pop
fimul
push
jl
inc
push
aas
nop
push
push
jb
adc
push
rol
or
cmps
enter
addr16
jmp
fwait
mov
repz
bswap
cmp
mov
ds
dec
or
push
mov
lods
sub
iret
xchg
mov
mov
mov
sar
popf
or
inc
mov
outs
cld
lods
cwde
jmp
hlt
pop
fild
xchg
mov
test
adc
xor
add
xchg
pusha
icebp
(bad)
retf
xor
cdq
pop
sbb
mov
cmp
out
sahf
wbinvd
test
nop
sub
add
jns
movs
leave
add
leave
popf
add
out
xchg
jecxz
sahf
int3
cmp
ins
cdq
mov
retf
pop
add
lahf
in
sti
lods
in
mov
pop
pop
jo
push
(bad)
cmp
adc
sub
rol
enter
add
add
outs
mov
fdivr
cmps
loope
rep
dec
inc
pop
jmp
pop
out
jle
iret
cmc
lods
dec
les
or
std
test
adc
cmp
cmc
sbb
xor
neg
cli
pop
push
icebp
fisubr
out
or
cmc
jmp
pop
(bad)
or
and
jmp
hlt
add
cs
adc
aam
add
xlat
cmps
xchg
icebp
scas
dec
cmp
push
out
in
stos
cmp
sub
shl
nop
jmp
stos
inc
loope
inc
push
scas
call
imul
(bad)
push
outs
and
pop
and
or
cli
out
sahf
or
wbinvd
ror
jns
xor
jne
dec
xchg
cmp
mov
loopne
bound
aam
test
sahf
mov
jnp
ja
ins
(bad)
cli
popf
add
sbb
jecxz
jecxz
sub
sbb
stos
mov
cld
popa
or
pop
js
call
(bad)
mov
add
lods
in
shl
leave
mov
aas
push
lahf
sbb
movs
mov
fidiv
and
outs
jecxz
jp
or
mov
sbb
sar
xor
shl
push
mov
(bad)
cmp
mov
xchg
test
gs
test
push
shr
adc
sbb
push
out
in
xchg
outs
in
mov
inc
out
sbb
mov
jb
push
inc
inc
mov
int3
mov
jne
or
enter
std
inc
cmp
ret
(bad)
cld
sbb
cs
sbb
adc
loope
push
xor
jns
add
mov
push
dec
jp
retf
sub
fcom
pop
mov
aam
jmp
not
sub
pop
add
loop
daa
(bad)
mov
out
xchg
sbb
cmps
(bad)
out
jne
and
hlt
lea
sahf
push
jmp
pop
in
xchg
xchg
jl
add
push
fst
adc
mov
imul
xor
inc
add
pop
ins
xor
and
mov
cmps
jl
jmp
daa
jmp
movs
or
pop
or
cmp
mov
xor
pop
inc
sub
cmc
jge
push
movs
cli
push
cmp
fisub
mov
mov
or
arpl
loop
xchg
jle
ret
or
jne
cdq
rcl
and
pushf
pop
aad
imul
mov
or
xor
mov
dec
aam
jne
jmp
and
add
add
jb
imul
pusha
into
rcr
dec
repz
mov
adc
ret
cmc
xor
push
dec
jmp
lods
aaa
cmp
pop
inc
rol
push
jmp
repnz
sub
mov
jmp
xchg
icebp
aad
not
fbstp
cmp
imul
loopne
cmps
push
inc
in
ret
loopne
(bad)
mov
or
push
xchg
(bad)
dec
shl
fist
xor
xor
ret
cmp
inc
pop
dec
inc
jns
sbb
fmul
push
ret
push
mov
fldenv
imul
mov
push
fbld
jl
imul
lahf
adc
adc
shl
push
xchg
sbb
mov
cmp
dec
in
jmp
xor
outs
aas
fadd
les
jmp
fldcw
cli
pop
pop
pop
int3
push
fsubr
xchg
xlat
xchg
pop
ret
jg
jae
mov
aad
rol
adc
cs
pop
or
lahf
mov
sub
hlt
jmp
add
call
sub
cmp
inc
cmp
lods
data16
lahf
xchg
pop
xor
sub
bound
rol
pusha
pop
clc
mov
cld
sbb
jecxz
in
lods
pusha
in
jnp
sub
(bad)
iret
add
lods
retf
lds
lods
in
data16
ds
push
mov
outs
rcr
ins
inc
pop
stos
test
mov
js
sub
mov
push
jne
pop
jns
adc
jmp
and
pop
jle
mov
push
sub
cdq
pop
push
dec
inc
fiadd
mov
add
push
adc
dec
and
xchg
mov
pop
push
jg
or
int3
xlat
test
jp
mov
ret
nop
daa
lods
push
mov
push
xor
das
repz
sub
jnp
inc
cmp
es
cmp
(bad)
clc
inc
icebp
dec
and
mov
mov
es
sbb
inc
add
out
jp
in
das
arpl
frstor
test
aam
mov
mov
inc
mov
stc
aam
out
dec
cmp
pop
dec
test
(bad)
clc
jmp
mov
je
pop
shl
xor
push
mov
inc
mov
sub
adc
(bad)
cmp
fyl2xp1
test
cmps
sbb
ret
sahf
(bad)
xor
arpl
jg
std
sub
in
or
adc
jae
cmp
in
dec
jg
mov
cmp
int3
adc
or
int3
jg
jbe
ss
outs
in
xor
leave
ror
adc
in
push
ins
pop
int
cli
and
fmulp
pop
or
or
stc
adc
jns
pop
inc
xchg
fldenv
cmp
cmc
imul
(bad)
mov
sar
test
lods
repz
mov
es
popf
mov
mov
movs
jbe
(bad)
sbb
mov
sti
cmc
(bad)
aam
lea
jp
pushf
fcmovne
imul
fdivr
add
mov
jno
movs
lea
stos
ret
dec
dec
mov
shr
sbb
add
xchg
loope
sbb
mov
mov
clc
ret
les
out
out
aam
(bad)
mov
adc
(bad)
mov
cmp
outs
jbe
adc
jmp
in
popf
(bad)
(bad)
js
popf
ret
dec
jae
mov
dec
es
push
xor
jo
aas
aaa
lahf
jl
mov
pushf
call
mov
aam
shr
and
cdq
lds
mov
aad
inc
psubusb
nop
sub
push
cwde
lock
leave
dec
setnp
add
dec
pushf
js
mov
jne
out
movs
mov
es
cmp
fiadd
dec
leave
outs
pushf
or
mov
mov
sar
jae
jo
jns
icebp
mov
or
inc
inc
test
and
mov
daa
rcr
movs
lea
mov
pop
movs
mov
mov
pop
cmp
repnz
cld
jne
sub
test
xchg
push
cdq
ins
jecxz
bound
shr
ret
cli
or
aaa
adc
mov
mov
cdq
mov
dec
xor
mov
xchg
fcomp
mov
xchg
dec
cmps
push
mov
fsubr
and
jmp
rcl
mov
stc
into
fsubr
push
inc
call
push
fnstcw
push
loope
in
mov
push
fstp
hlt
js
push
and
cmp
inc
push
push
and
cmp
push
adc
mov
cwde
cmps
adc
movs
js
pushf
div
test
xlat
jle
adc
mov
jmp
mov
aaa
enter
lahf
in
or
adc
ret
mov
hlt
js
loop
wbinvd
jo
pushf
ror
test
add
sbb
mov
xchg
mov
dec
xor
adc
mov
xchg
sub
sbb
rol
bound
inc
gs
jo
push
into
xor
pop
shl
and
push
sub
fcomp
sbb
dec
cmp
retf
sub
jle
mov
mov
ficom
dec
outs
mov
cdq
adc
sbb
sub
mov
xor
rep
jae
pusha
ret
inc
pop
xchg
ror
cmp
(bad)
leave
xor
ret
pushf
ret
mov
or
int
je
mov
sub
cmc
jecxz
jo
stos
push
mul
dec
mov
and
iret
push
adc
gs
sbb
jne
xor
movs
imul
test
mov
dec
sbb
mov
sub
jg
mov
jl
mov
add
sub
aam
add
loopne
xchg
push
aas
jmp
(bad)
imul
sub
lods
sbb
idiv
sub
imul
pop
mov
push
std
sbb
sti
push
xchg
pop
pop
out
mov
out
int3
xor
(bad)
cmps
pop
dec
cld
push
sub
test
(bad)
loope
bnd
sub
out
add
daa
cmp
imul
inc
pop
xor
fist
mov
repnz
pop
pushf
call
or
int3
fist
ret
loop
inc
pop
lock
dec
cmp
mov
cmps
mov
movs
cli
es
push
sbb
in
pop
pop
int3
pop
mov
push
imul
push
es
lea
add
sbb
dec
stc
xor
icebp
dec
imul
sub
je
(bad)
jmp
jl
inc
movs
or
pop
mov
test
jmp
test
shr
fidiv
cmc
inc
lods
das
jecxz
add
(bad)
popf
ds
pop
sbb
xchg
pop
jecxz
retf
adc
cli
mov
bound
fnsave
stc
xor
mov
loop
push
jne
cmp
dec
mov
fisttp
mov
call
addr16
cmps
cld
fistp
lds
mov
movs
pop
je
xor
or
ss
je
arpl
dec
lea
clc
fnstcw
pop
call
sbb
cld
mov
xchg
ja
mov
imul
or
mov
test
loop
sbb
xchg
daa
jb
loopne
aam
pop
arpl
mov
mov
mov
(bad)
pusha
hlt
inc
xchg
xchg
ffree
dec
sub
dec
test
or
jae
into
jecxz
js
push
sub
imul
xchg
arpl
stos
mov
cld
mov
sub
clc
cdq
inc
xor
fwait
jno
outs
sub
aam
ficomp
loopne
ins
push
xor
pop
mov
pop
lods
xchg
stos
fmul
(bad)
pushf
xor
imul
loop
mov
mov
cmp
mov
and
xchg
xchg
sahf
xchg
aas
ins
in
jbe
out
(bad)
test
xchg
push
addr16
leave
ins
jg
(bad)
std
mov
pusha
jo
das
xlat
xchg
ds
outs
sbb
sbb
cmc
movs
jbe
scas
inc
stos
dec
ja
ja
fmul
dec
loopne
mov
std
cmp
gs
cmp
dec
xchg
les
loop
jo
mov
cmp
adc
mov
mov
(bad)
mov
jb
fcomi
jo
mov
mov
div
ja
xchg
cmp
popf
mov
bound
cli
cmp
pusha
test
add
dec
add
arpl
sbb
push
and
adc
and
aad
aaa
xor
popf
mov
in
add
or
iret
imul
mov
retf
push
sub
adc
outs
(bad)
test
outs
inc
fimul
jbe
xor
fbld
inc
imul
es
out
xor
inc
mov
data16
outs
or
inc
mov
mov
stos
into
(bad)
nop
cmp
cmps
fdiv
mov
push
cmps
sbb
mov
cld
fs
xchg
xor
ins
xchg
loope
enter
shr
call
test
ja
retf
add
shl
jno
(bad)
out
dec
dec
adc
std
das
push
sar
xchg
cmp
inc
pop
mov
jle
clc
jmp
loop
sub
xchg
scas
lods
pop
inc
adc
add
adc
adc
dec
std
jecxz
push
ins
add
hlt
repz
mov
or
enter
mul
adc
inc
(bad)
cmp
mov
cdq
xchg
jb
outs
pop
ins
ins
fimul
inc
gs
outs
out
ss
push
xlat
inc
pop
jle
shl
aaa
mov
sbb
push
mov
test
xchg
dec
in
mov
in
in
inc
and
adc
xor
popf
fiadd
xor
dec
or
mov
adc
add
outs
int3
addr16
in
cmc
in
push
loop
jl
jno
mov
cwde
std
inc
or
mov
xchg
es
ret
cmp
jg
mov
mov
sub
xchg
mov
mov
(bad)
dec
dec
fld
icebp
out
jae
dec
pop
jb
call
mov
and
out
mov
fdiv
test
jp
push
cld
xchg
xor
cmp
jmp
in
push
adc
xor
add
es
push
cmp
add
cmps
lock
sbb
jmp
cmps
test
rcr
and
or
add
jno
jmp
dec
or
or
mov
push
sub
or
adc
sub
aas
ret
add
adc
add
ins
nop
push
or
lea
in
cmp
cmp
popa
pop
push
xchg
jecxz
push
addr16
xlat
fwait
mov
loope
mov
fild
xchg
push
in
pop
leave
test
lods
data16
pop
xchg
ss
and
into
pusha
dec
stc
lahf
inc
repnz
stos
push
xchg
mov
cmp
(bad)
sub
pop
sub
cmps
scas
jp
fsubr
loope
jnp
fidivr
in
popf
inc
stos
pop
ret
aaa
adc
cmp
imul
inc
sbb
mov
pop
and
stos
or
and
mov
nop
mov
es
adc
push
aad
mov
jmp
xor
mov
sub
xchg
adc
jnp
mov
sahf
mov
inc
mov
rcl
and
jb
cmc
pop
adc
dec
les
mov
je
gs
repnz
ins
imul
dec
clc
mov
(bad)
xchg
dec
mov
call
sbb
mov
mov
and
leave
mov
inc
add
(bad)
enter
clc
jae
pop
repz
add
sbb
and
mov
into
aam
mov
ret
movs
rcl
adc
xchg
arpl
adc
push
sar
and
pop
shl
pusha
in
sbb
add
pop
xchg
lds
pop
xor
cmp
mov
mov
outs
mov
jbe
dec
jg
mov
sub
or
or
sub
and
mov
retf
pushf
pop
repz
fistp
leave
dec
sahf
mov
sbb
mov
and
aad
test
jns
jno
adc
dec
push
sub
dec
dec
call
xor
mov
mov
js
push
stos
ss
sti
test
repz
push
pushf
add
inc
adc
cmps
and
daa
les
push
cmps
xlat
popf
mov
xor
pop
lea
bound
or
lock
call
pop
ret
data16
mov
push
push
mov
xchg
jmp
jbe
pushf
int3
data16
arpl
outs
push
push
pushf
pop
and
cwde
rol
push
repz
add
add
dec
loopne
inc
cwde
fadd
(bad)
pop
fucom
mov
jmp
add
lds
call
mov
push
imul
and
pop
shl
add
xor
sbb
inc
inc
scas
in
loopne
or
adc
and
xchg
lock
xor
iret
stos
mov
mov
or
fist
adc
push
add
std
mov
xor
outs
repz
sbb
mov
imul
pusha
adc
daa
in
cwde
iret
cs
push
xchg
mov
shl
ss
sub
xor
inc
sub
nop
or
jl
sub
xchg
mov
(bad)
loope
dec
xchg
adc
rcr
cmp
add
test
fisttp
lods
pop
js
mov
adc
pop
fs
cwde
add
push
dec
cmp
dec
sub
out
loope
pusha
mov
cli
dec
rol
pop
xchg
or
pop
push
in
jnp
ins
jl
nop
lds
icebp
test
cs
push
sub
int
lods
adc
and
and
loop
adc
sbb
aad
sub
sub
std
lahf
inc
adc
mov
lea
or
mov
cld
xor
rol
push
inc
mov
mov
stos
and
test
bound
repnz
loope
mov
aaa
test
cdq
mov
mov
nop
cli
xchg
fwait
test
and
sar
(bad)
daa
(bad)
shl
pop
mov
and
jmp
jge
loopne
aaa
stos
mov
and
push
cmp
xor
sub
dec
jns
ret
lds
cmps
sub
add
inc
pop
push
repnz
stc
jae
jbe
pop
push
adc
pop
loop
add
retf
inc
dec
dec
test
nop
es
push
stc
in
iret
ffreep
mov
jb
cdq
outs
imul
or
pop
jnp
ret
mov
out
cmovne
es
mov
mov
outs
pop
push
jnp
xor
xor
pop
cmps
mov
sub
cmc
cmp
inc
mov
jmp
jecxz
loope
xchg
sub
lock
cmp
dec
mov
sbb
pop
ins
and
pop
push
cmp
add
ret
jbe
call
imul
gs
adc
cmp
mov
xlat
std
sub
add
outs
scas
mov
imul
inc
leave
add
pop
pop
cmps
js
cmps
sbb
ss
push
in
out
ret
in
xchg
dec
and
or
pop
sub
mov
cmp
or
sub
and
shl
inc
out
mov
scas
ror
add
movs
mov
cwde
cmp
adc
push
sbb
loop
adc
mov
and
sub
add
or
sbb
dec
xchg
sar
mov
mov
rol
cmp
fldl2t
cwde
push
rol
mov
loope
xchg
pop
jl
ins
mov
pop
fist
in
xchg
sbb
mov
jp
les
mov
mov
cmp
pop
popa
enter
mov
bound
mov
mov
adc
jno
pusha
lods
mov
scas
ret
jnp
(bad)
out
outs
dec
ror
leave
xchg
jae
sbb
lea
mov
and
sbb
arpl
(bad)
push
out
les
enter
aas
sub
das
mov
xchg
lds
jo
leave
int3
and
pop
stos
jg
xchg
cmp
int3
or
ret
mov
dec
xor
imul
jmp
adc
div
xor
mov
call
call
push
je
aam
mov
mov
(bad)
mov
and
(bad)
bound
lea
sbb
pop
cmps
sub
mov
popf
pop
add
sbb
xchg
sbb
xor
fldenv
(bad)
in
stos
jb
inc
push
inc
jne
jp
movs
xchg
adc
cmps
mov
mov
ins
mov
fnstenv
and
aas
cmp
aas
ja
sbb
scas
pusha
sub
add
xchg
outs
adc
(bad)
xchg
cmp
sbb
das
jmp
icebp
mov
test
xchg
fcomp
pop
xor
frstor
xchg
dec
bound
add
nop
ds
jbe
dec
inc
sti
jne
jl
jecxz
in
inc
cmp
std
leave
mov
movs
ss
int3
pop
xchg
cmp
pop
xor
repnz
mov
fs
mov
loop
mov
ror
lahf
jne
dec
mov
loope
imul
or
cs
mov
or
bound
call
loopne
mov
inc
xchg
push
aam
jl
mov
jmp
add
scas
lds
cld
mov
fimul
pop
retf
rcl
shr
push
outs
mov
(bad)
sti
fwait
xor
cmps
adc
xchg
inc
sbb
xlat
xchg
(bad)
fcom
data16
mov
fwait
es
mov
jecxz
popa
stos
sub
pop
out
dec
mov
xchg
dec
inc
push
adc
movs
adc
stos
cmp
and
ss
jl
mov
cmp
loop
test
xchg
repnz
jo
bound
repnz
enter
cwde
mov
cmp
clc
call
sub
sub
out
adc
add
cmp
imul
in
mov
sub
jmp
push
cmp
rol
inc
jmp
sahf
xor
push
push
sbb
retf
aas
pusha
mov
dec
cwde
and
mov
repnz
aas
test
pop
jp
pop
les
xor
dec
in
cmp
fcom
mov
(bad)
rcr
int
push
dec
dec
lock
mov
das
adc
ja
push
fwait
icebp
pop
add
xchg
or
dec
mov
jo
pop
fistp
or
sub
aas
push
int3
rdtsc
adc
retf
jl
movs
in
adc
sbb
std
ror
je
or
dec
ds
in
push
scas
xchg
dec
call
mov
pop
mov
sub
mov
mov
xor
push
dec
push
ds
pop
sbb
cmp
dec
push
and
mov
or
sbb
aas
push
test
adc
daa
fdivr
(bad)
xor
fwait
cmp
test
call
test
mov
mov
sar
xchg
fs
inc
(bad)
fpatan
lea
cmp
jne
and
cmp
out
out
mov
inc
or
inc
mov
out
or
call
in
pop
push
sbb
fmul
inc
mov
push
fidivr
ficomp
popa
clc
leave
inc
xchg
test
xchg
aas
xor
nop
inc
data16
mov
pushf
shr
gs
imul
xchg
mov
xchg
je
fdiv
(bad)
sbb
(bad)
dec
mov
and
sbb
jle
pusha
dec
stos
jb
push
push
inc
clc
ja
das
mov
push
sbb
xchg
in
mov
into
add
rol
add
rcl
js
xor
out
push
cmp
mov
xchg
shl
cmp
fcmovu
test
and
jg
inc
out
push
push
inc
and
jnp
pop
xchg
cmps
stc
xor
mov
jo
dec
add
dec
push
scas
rol
jmp
xchg
inc
idiv
add
adc
adc
sar
add
aaa
pushf
mov
push
mov
ffreep
aaa
add
pushf
movs
adc
retf
cmp
cmp
(bad)
xchg
leave
fimul
sub
iret
xchg
lods
xchg
push
mov
js
int
and
mov
adc
inc
push
pop
loop
cmp
sub
inc
sbb
pop
xlat
fldcw
out
mov
sub
sbb
(bad)
push
rcl
jbe
or
push
pop
jmp
sub
out
dec
pop
dec
clc
cmp
or
mov
retf
cdq
mov
fadd
dec
pop
cld
cmps
or
stc
or
sahf
and
or
in
mov
sbb
pop
sbb
test
mov
test
push
addr16
pop
ror
jecxz
xchg
inc
and
mov
test
je
loopne
fsub
sahf
and
std
sub
jns
jmp
add
dec
push
mov
pop
add
and
fimul
div
ja
outs
es
shl
push
adc
inc
mov
iret
add
sti
lock
out
sbb
pop
pop
mov
push
xor
mov
pop
and
outs
fistp
imul
sbb
push
add
cmp
fiadd
adc
(bad)
sub
mov
sti
aad
dec
loop
sbb
push
pusha
ret
(bad)
icebp
push
xchg
data16
push
les
add
pop
add
lds
leave
or
add
mov
inc
imul
cmp
mov
(bad)
mov
in
mov
adc
test
and
mov
int3
or
scas
xor
sub
fst
lds
xchg
mov
xchg
xor
pusha
inc
outs
jl
mov
pusha
jmp
or
inc
xchg
add
adc
mov
scas
mov
pop
add
lods
repz
cmp
push
cmc
leave
leave
call
retf
test
iret
mov
mov
jl
(bad)
fcom
scas
sti
jmp
pop
sbb
shr
push
sbb
mov
scas
mov
adc
int3
adc
sub
jbe
enter
loopne
add
inc
std
out
sbb
test
or
mov
xchg
iret
inc
enter
inc
jnp
nop
xchg
add
daa
shr
bound
(bad)
mov
mov
aam
adc
sbb
in
retf
stos
sti
xor
test
clc
xlat
or
push
ins
dec
mov
sub
add
xlat
dec
sub
jno
push
add
dec
or
adc
cmp
imul
(bad)
mov
leave
jns
cli
imul
dec
xchg
cmps
jae
push
outs
data16
pusha
gs
loopne
fldenv
int
sub
pop
test
enter
repnz
sbb
pop
call
mov
sbb
in
jno
mov
cld
mov
push
sub
adc
scas
pop
sar
dec
cwde
imul
je
outs
cld
mov
repz
(bad)
sub
inc
je
popf
adc
lods
hlt
jge
or
inc
cmps
mov
pop
ja
ss
and
les
ret
test
jecxz
enter
adc
scas
es
clc
ds
inc
sub
xchg
jl
sar
outs
fs
mov
push
inc
aam
jmp
(bad)
fisttp
adc
xchg
lea
fsub
(bad)
nop
(bad)
out
(bad)
clc
mov
loope
sti
sbb
je
mov
mov
jnp
inc
or
outs
xor
xor
add
push
fidivr
dec
es
or
mov
fdiv
xchg
(bad)
mov
fiadd
jbe
je
xor
pop
mov
push
adc
add
xchg
rol
shr
arpl
push
adc
out
adc
adc
sar
enter
in
in
popf
popa
sub
mov
sub
mov
fld
pop
xor
cmp
shr
daa
and
push
lds
mov
retf
adc
cmp
repz
ds
add
loop
mov
pop
pop
mov
sbb
push
cmp
sbb
clc
sbb
mov
dec
fidiv
movs
xor
les
cmps
cmp
in
mov
cmp
pop
pop
mov
(bad)
mov
pop
loop
mov
neg
push
mov
loopne
jno
das
sbb
mov
and
mov
adc
sub
dec
scas
test
or
add
mov
jmp
pop
(bad)
call
xor
mov
sub
xor
mov
inc
dec
push
retf
push
cli
xor
mov
repnz
int
fild
dec
aas
sar
sub
fild
xor
xchg
aam
outs
pop
mov
lods
jmp
mov
mov
rol
retf
in
xchg
stos
stos
fsubr
cs
loopne
inc
jge
test
adc
aas
xor
call
ja
xchg
mov
xcrypt-ctr
cmps
fldcw
jle
in
jge
(bad)
(bad)
out
lahf
xchg
ja
xor
mov
mov
bound
daa
push
and
test
jno
fadd
xchg
or
lock
dec
loop
pop
pusha
jge
jp
icebp
inc
cmp
dec
fmul
ins
leave
stos
cmc
push
fcom
(bad)
adc
pop
push
js
fwait
cmp
inc
cmp
xchg
pop
test
sub
cmps
jecxz
inc
pop
or
or
retf
repnz
sbb
es
popa
sbb
(bad)
xor
and
cmp
jp
stos
cmp
adc
sub
cdq
enter
xchg
inc
mov
pusha
out
iret
imul
jnp
lds
jns
icebp
pushf
xchg
fs
in
mov
(bad)
cmp
xchg
fild
pop
(bad)
test
(bad)
adc
popa
mov
scas
retf
pushf
inc
jmp
dec
dec
and
push
js
ins
ja
xor
cdq
out
xchg
(bad)
inc
xor
aaa
sub
popf
rol
jb
or
fimul
pop
mov
push
into
cwde
call
(bad)
pop
adc
mov
mov
mov
jmp
icebp
in
sbb
sbb
xor
inc
imul
(bad)
dec
sbb
jp
pop
fld
pop
inc
ins
xor
sbb
popf
ret
jmp
ja
inc
pop
test
mov
lock
aas
mov
jb
rcl
push
call
pop
push
xchg
rcr
xchg
fistp
push
dec
push
out
lods
mov
adc
setnp
pop
(bad)
cmp
dec
out
adc
mov
and
jnp
pop
mov
push
inc
idiv
xor
(bad)
in
ds
pushf
mov
and
aas
mov
shr
fisttp
ins
sbb
pop
xchg
xchg
fstp
out
hlt
and
add
lock
push
sbb
stc
(bad)
fstp
cmp
or
pushf
add
sub
retf
pop
mov
aad
into
shl
jmp
stos
mov
add
adc
into
call
in
mov
not
inc
jne
push
jo
int
and
aam
dec
xchg
clc
mov
and
sbb
dec
mov
inc
imul
mov
mov
(bad)
stc
aaa
fldenv
rol
jp
aaa
pop
mov
cld
sub
call
daa
push
call
push
pop
test
and
mov
ror
jb
push
popf
ficom
jnp
cmp
xor
dec
call
jb
cmp
inc
das
iret
cmps
lods
movs
imul
rcr
sub
or
rol
pop
cmp
jo
loope
(bad)
in
fstp
or
sbb
sub
imul
sub
ins
sti
jae
or
push
sub
jge
cmp
int
mov
adc
and
pusha
mov
outs
cmc
pop
jns
and
push
retf
lods
scas
push
mov
repz
add
iret
aaa
mov
cmp
fnstenv
inc
fild
mov
sub
push
ret
adc
pop
adc
jnp
outs
add
(bad)
sbb
xor
mov
idiv
arpl
dec
fcmovnu
or
pusha
lea
adc
mov
fwait
add
pop
repz
xlat
or
inc
lock
adc
aas
js
cmc
lods
xor
xchg
adc
ja
dec
mov
aad
cmp
mov
sbb
adc
hlt
shl
mov
jae
pop
xor
sub
leave
mov
adc
aaa
les
or
shl
xor
or
int
and
inc
retf
xor
je
xchg
xchg
out
dec
mov
cmp
jmp
lea
retf
aas
cmp
jmp
inc
xor
xchg
cmp
jb
outs
cmps
test
push
loope
rol
adc
adc
push
add
and
outs
pop
popa
pop
sub
daa
ret
in
inc
in
sbb
mov
shr
jae
jl
xchg
into
das
ja
sbb
mov
mov
call
add
jns
imul
dec
jae
cmp
lock
in
es
or
xchg
jp
inc
xlat
aam
push
gs
push
imul
sub
enter
dec
repz
mov
iret
xchg
pop
in
xor
into
std
push
shl
test
push
xchg
and
sbb
jmp
pushf
test
mov
fisubr
popa
loopne
cld
pop
sete
mov
pop
paddd
jecxz
sub
shl
in
scas
or
mov
mov
or
cmp
sub
bndstx
pop
xlat
out
mov
test
xlat
adc
and
out
adc
loope
mov
sbb
lods
jg
pop
in
sub
jmp
adc
dec
sbb
enter
add
fcom
mov
mov
xchg
sub
push
inc
lods
into
inc
or
mov
jecxz
inc
inc
call
mov
cmp
sub
pop
mov
lock
and
xchg
sub
in
or
sub
push
push
mov
mov
mov
jbe
inc
or
ds
(bad)
test
std
and
pop
ret
enter
pop
movs
dec
lods
lods
or
mov
outs
gs
int3
lds
adc
call
or
addr16
add
sub
outs
jmp
std
mov
jae
pop
mov
enter
popf
shr
adc
pop
dec
fs
pop
popa
pop
popf
movs
call
sbb
iret
lea
sub
adc
je
cmps
adc
retf
jmp
les
pop
adc
push
out
jmp
mov
sub
mov
adc
mov
sbb
inc
and
fcmovnb
retf
or
add
rcr
test
fcos
xchg
cmps
or
ja
dec
fst
je
sbb
pop
hlt
inc
clc
lods
clc
repnz
arpl
mov
jae
(bad)
das
push
leave
aas
mov
ja
mov
pop
push
push
or
rol
push
pop
jbe
shr
xor
xor
cmp
and
mov
and
mov
mov
push
jmp
jmp
test
push
mov
pop
hlt
xlat
outs
push
push
dec
pop
mov
xchg
aas
jp
int
into
stc
jmp
sub
pop
test
out
lods
push
and
pop
cmp
mov
mov
popa
fdivr
cmc
adc
add
cmps
pop
(bad)
in
fmulp
or
call
push
or
iret
in
mov
mov
jo
retf
(bad)
xor
dec
aad
call
and
loopne
cdq
jbe
ds
out
mov
movs
pop
icebp
pop
sahf
push
je
cmp
adc
cmp
cdq
push
shl
sbb
inc
test
pop
retf
mov
inc
imul
mov
(bad)
hlt
jle
outs
mov
cmp
dec
dec
sbb
sbb
inc
xchg
jno
(bad)
ja
dec
retf
inc
fs
xor
adc
std
(bad)
and
fsub
mov
mov
fldcw
in
fucomp
xchg
and
scas
stc
sub
dec
ror
mov
mov
jae
adc
mov
cs
aas
xor
popa
sbb
bound
add
sti
lock
xor
inc
imul
push
xchg
scas
cli
cld
out
mov
adc
cld
cmp
cmp
sbb
shl
daa
push
sti
cmp
push
mov
jb
jle
mov
shl
adc
sahf
(bad)
cmp
jo
xchg
outs
cmp
pop
xchg
ret
sub
cmps
mov
pop
ins
aaa
xor
mov
popa
shr
jbe
mov
imul
sub
loope
or
fcom
rcl
and
cs
gs
in
jmp
into
movs
in
sbb
add
xchg
pop
push
dec
loopne
xor
adc
jmp
add
mov
mov
rcr
pop
arpl
inc
and
and
mov
(bad)
loope
movs
stos
call
mov
sub
add
cmps
retf
pop
and
jae
ret
xor
pushf
push
push
push
pusha
popa
adc
shl
or
fs
jmp
repnz
shl
fwait
mov
les
out
sbb
jmp
(bad)
lds
jg
jmp
fcmovnu
xchg
mov
push
inc
inc
mov
fstp
sbb
push
aaa
lds
add
scas
dec
lods
xchg
add
mov
js
test
cwde
inc
jp
sub
fimul
add
jns
or
das
call
add
enter
add
sti
jnp
lods
shr
sti
(bad)
push
jle
xchg
sub
rcr
inc
mov
mov
call
in
push
inc
sahf
popf
gs
sub
sti
sbb
enter
pop
outs
(bad)
mov
cmp
int
stos
jle
sbb
loope
adc
and
les
mov
jmp
mov
cmp
(bad)
icebp
inc
fdivr
bound
lock
mov
and
adc
mov
sub
imul
jnp
inc
stc
push
rcl
sub
fstp
test
loop
push
retf
test
ss
push
mov
adc
sub
fsub
or
and
or
jmp
fwait
xchg
pop
movs
je
cld
inc
push
mov
popf
adc
out
lock
stos
xor
scas
or
outs
iret
push
enter
sbb
push
cmp
je
es
jns
mov
das
jmp
push
(bad)
cld
jl
lds
pop
imul
sub
jo
add
bound
add
xchg
in
cmp
sbb
ins
jne
jb
imul
mov
lea
dec
cmps
push
cmps
push
daa
icebp
inc
sti
repnz
jae
hlt
and
and
out
movs
pop
mov
loop
pop
and
shl
jae
idiv
pop
shl
sahf
and
je
jge
in
mov
in
sub
jmp
adc
dec
xchg
pop
adc
jae
inc
imul
pop
fbstp
jae
add
dec
mov
inc
mov
pop
aad
sahf
les
daa
mov
mov
fdivr
mov
das
mov
std
movs
fninit
mov
pop
or
adc
sub
ret
cmp
sbb
stos
ret
dec
lea
cmp
or
fwait
ret
lea
(bad)
aad
mov
pop
sub
movs
call
int3
sbb
into
hlt
lahf
pop
and
punpckhdq
dec
(bad)
jl
pop
add
jecxz
es
xchg
add
sub
inc
sub
scas
sub
xor
and
xor
ins
mov
jb
addr16
mov
adc
je
push
push
popa
es
adc
push
inc
xchg
repz
es
inc
cdq
xchg
and
pushf
cdq
loope
jp
retf
fistp
mov
mov
add
or
cmp
lock
dec
call
rcl
ss
fcom
adc
inc
adc
shr
out
push
loopne
cmp
jo
mov
psraw
sbb
adc
js
add
les
and
jl
out
out
iret
jmp
stc
repz
mov
adc
(bad)
cld
push
aad
in
neg
pop
xor
neg
xchg
mov
int3
test
mov
pop
(bad)
out
lahf
(bad)
cli
sub
push
mov
and
or
or
aaa
cmp
xlat
nop
push
test
not
out
sbb
xchg
fwait
dec
xor
mov
out
push
stc
jns
inc
fst
pop
imul
enter
ret
fs
ja
jle
dec
lea
mov
mov
sbb
adc
jp
fdiv
lods
adc
stos
ins
int
dec
inc
and
and
sbb
mov
xor
push
rcl
mov
test
cmp
dec
dec
sbb
mov
push
or
in
pop
mov
aam
jmp
mov
cmp
stc
xor
push
(bad)
hlt
xchg
xor
and
ror
rol
cwde
or
pop
xor
mov
pop
add
inc
loope
push
in
std
sbb
xor
mov
mov
fbld
scas
adc
ficomp
push
cdq
inc
in
mov
jbe
rcr
cmp
add
fstp
pop
inc
and
movs
xchg
jle
popf
aad
push
sbb
fs
xor
xchg
xor
stc
jmp
pusha
pop
outs
cdq
enter
or
mov
movs
imul
jnp
or
out
mov
xchg
push
sub
in
pop
mov
outs
cmps
add
out
adc
test
cdq
jno
push
mov
add
sbb
dec
or
movs
fcom
mov
ret
jecxz
and
xchg
cwde
cmps
inc
imul
pcmpgtb
mov
scas
inc
mov
sub
in
dec
imul
(bad)
cmp
mov
pop
scas
cmp
jecxz
push
addr16
push
cmp
mov
imul
scas
aad
jecxz
or
adc
jecxz
sub
mov
dec
int3
lock
(bad)
fistp
push
call
js
or
add
mov
scas
cmp
sub
es
inc
inc
inc
leave
push
push
cmps
adc
mov
pop
cmp
nop
fidivr
mov
out
push
repz
jmp
adc
adc
mov
adc
int3
inc
lds
movs
cmp
imul
iret
pop
xchg
ret
xor
hlt
push
sbb
adc
sbb
xor
push
jmp
jae
(bad)
fstp
adc
add
outs
js
or
cmp
aad
dec
movs
movs
sbb
bound
cmc
stos
sbb
mov
or
push
stc
mov
cmp
ins
xor
ret
mov
stc
jae
imul
lahf
sbb
jp
scas
cmp
jo
lods
push
or
cmp
jmp
jnp
imul
mov
sti
cs
push
div
sar
cmps
test
pop
cmp
push
outs
xlat
cld
mov
loopne
adc
jmp
retf
xor
test
sti
inc
shl
push
xchg
aam
xor
sbb
add
jnp
and
and
cld
ret
xchg
imul
call
add
push
fcmovne
in
cmp
xor
ret
mov
or
mov
xor
adc
sub
nop
arpl
and
or
xchg
jge
bound
inc
in
xor
jle
shr
jecxz
pop
sbb
mov
cs
cld
adc
sqrtps
cld
add
adc
xchg
pop
inc
fist
and
call
xchg
xlat
jo
pop
push
mov
jecxz
data16
stc
cmp
sbb
and
mov
retf
pop
in
out
dec
test
jbe
hlt
rcl
cli
push
dec
lods
test
mov
and
jnp
and
cmc
mov
imul
xor
test
idiv
mov
jl
not
aad
jno
or
lea
repz
stos
jo
and
mov
push
inc
cmp
enter
mov
mov
inc
scas
mov
shl
out
repnz
dec
in
xor
cmps
fwait
jecxz
rcr
js
add
xlat
mov
test
mov
xchg
out
das
xor
gs
mov
pop
mov
mov
popa
or
repnz
xchg
mov
xchg
cli
cwde
fcmovnbe
push
(bad)
out
pop
xchg
jo
sar
mov
and
adc
dec
xchg
or
rol
xor
test
push
cmps
lahf
ret
gs
mov
sub
or
push
mov
(bad)
mov
push
adc
push
bound
sbb
call
pop
sbb
neg
(bad)
xchg
pop
neg
mov
daa
in
xchg
push
inc
add
fdivr
ds
or
shl
cmp
pop
fdiv
adc
scas
dec
adc
aaa
jp
cmp
test
sbb
aad
hlt
movs
push
scas
mov
mov
jae
jmp
jmp
jbe
inc
leave
loopne
repz
xor
inc
or
push
pushf
pop
lahf
pop
mov
xor
nop
xchg
out
dec
inc
add
mov
in
gs
inc
cwde
rcl
push
stc
jb
mov
adc
adc
ret
push
dec
les
enter
je
mov
mov
sbb
movs
cmp
cmp
dec
xor
popa
sar
repz
shl
xor
cmps
xor
lea
and
outs
fcom
popa
add
or
pop
and
dec
fidiv
out
jge
adc
(bad)
sub
mov
mov
lods
lea
adc
xor
inc
stos
ss
inc
ja
rcl
push
fcomp
dec
je
loopne
fstp
in
and
icebp
imul
sbb
ds
bnd
repnz
jo
imul
leave
or
xchg
pop
addr16
popf
retf
and
or
fild
xchg
mov
push
(bad)
push
jle
cli
aaa
fs
cdq
push
mov
hlt
add
in
jg
les
cmp
push
test
fimul
retf
movs
and
(bad)
or
cli
pop
add
add
outs
rcr
mov
inc
cwde
push
push
icebp
sub
or
push
pop
jno
aad
mov
sti
pop
inc
mov
js
loopne
mov
imul
(bad)
std
mov
sbb
pop
imul
sub
sbb
mov
into
jns
adc
outs
and
shl
push
sbb
pushf
xor
jbe
hlt
stos
out
and
adc
(bad)
pop
(bad)
lock
(bad)
sbb
sti
arpl
dec
add
cmp
sub
cmp
xchg
and
mov
dec
(bad)
aad
jmp
fnstenv
dec
sbb
loope
cmp
push
ins
mov
pop
xor
arpl
push
nop
jns
add
cmps
jb
xchg
jne
mov
lods
xchg
xchg
mov
and
or
sub
sbb
dec
movs
imul
jecxz
test
out
shl
movs
sbb
pop
cli
xchg
psrlw
retf
sub
out
or
xchg
xlat
pop
push
punpckldq
sub
add
rcpps
or
sbb
pop
ins
xchg
es
fisubr
adc
ja
mov
test
int3
mov
jo
inc
mov
cdq
je
in
scas
and
jp
loope
jle
test
xor
jnp
imul
xor
sbb
adc
xchg
nop
push
adc
out
jae
idiv
adc
pop
aam
dec
mov
inc
mov
mov
inc
fldl2t
push
add
cmp
pop
xchg
or
cmp
bound
stos
fistp
outs
xchg
ins
in
(bad)
push
xchg
inc
imul
lock
push
pop
dec
out
lahf
sub
dec
sub
push
or
inc
aam
jmp
mov
adc
lock
sbb
xor
add
loop
into
mov
pop
faddp
retf
test
repnz
inc
inc
lods
outs
fs
rol
scas
push
(bad)
xchg
push
mov
cmp
test
push
mov
fsubr
nop
les
add
add
ds
push
mov
push
pusha
mov
xor
in
cmp
or
adc
outs
mul
lea
add
bound
lods
mov
mov
mov
adc
lgs
or
data16
and
mov
pop
lock
jge
sbb
cmc
rcl
out
mov
pop
mov
and
push
xchg
mov
jb
push
scas
push
push
repz
enter
push
cmps
shl
jp
stc
mov
adc
mov
xor
pusha
pop
dec
rcl
lea
push
inc
add
xor
(bad)
mov
jecxz
in
mov
clc
popa
lods
jmp
imul
test
xchg
arpl
adc
adc
imul
sti
dec
sahf
jns
dec
repz
push
idiv
cmp
pop
xor
inc
iret
cmp
out
xchg
(bad)
fnstsw
rcr
aad
pop
mov
es
xor
int
addr16
xchg
std
aam
bound
lock
sub
aaa
out
adc
xchg
push
xchg
jbe
fadd
test
jl
cld
fcmovbe
pop
rcr
dec
mov
sbb
fcos
add
rol
push
push
jmp
adc
mov
mov
pop
adc
add
xor
(bad)
(bad)
lods
push
out
inc
(bad)
jnp
pop
movs
push
or
cli
and
mov
out
rcl
push
cmps
sar
sub
(bad)
cdq
es
ret
loope
js
push
ins
cmp
jb
mov
ss
fwait
mov
mov
adc
cmp
pop
dec
in
enter
sbb
dec
cmp
add
stos
mov
jmp
in
movs
retf
xchg
jmp
jne
sbb
push
imul
pop
sub
jl
into
popa
xor
loopne
fdivrp
adc
xchg
bound
jmp
fnsave
pop
or
sar
fld
shr
nop
call
inc
xor
push
cs
arpl
stos
stos
test
lods
(bad)
pop
in
cmp
movs
test
out
push
xor
test
sti
retf
scas
add
xor
(bad)
inc
aaa
adc
ja
(bad)
and
call
inc
es
xchg
xor
sar
test
ficom
dec
sahf
jmp
cld
pop
pop
cmp
push
(bad)
pushf
into
xchg
pop
adc
inc
adc
pop
push
xchg
lds
cmp
fwait
xchg
or
push
mov
sahf
fdiv
and
push
outs
loop
rcl
ret
mov
mov
adc
or
and
inc
clc
ror
sar
ins
mov
cwde
lock
push
dec
das
cwde
cmps
push
mov
pop
push
cmps
loope
popa
xchg
popf
sub
adc
push
and
push
ret
dec
add
pop
ja
adc
xor
mov
call
in
dec
inc
outs
mov
and
call
xchg
jbe
xor
enter
(bad)
int
dec
pop
movs
cwde
popa
rol
jmp
repz
push
dec
xor
mov
dec
(bad)
mov
dec
jg
pop
jmp
fs
repz
dec
jb
popa
and
xchg
std
dec
cmp
mov
mov
comiss
out
stos
fmul
sub
push
or
pop
add
pop
imul
jnp
gs
push
cmp
dec
sub
xor
int3
jnp
rol
sahf
pop
std
pop
and
or
push
mov
imul
mov
sub
xchg
xchg
int3
imul
dec
ins
push
clc
xchg
retf
pop
dec
dec
std
loope
test
xor
in
add
adc
pop
cmp
cmp
aam
fwait
pop
add
ds
call
push
inc
mov
xchg
inc
or
fst
stos
sti
jge
mov
push
jns
pop
daa
fild
js
xchg
mov
enter
xor
js
bound
repz
mov
xlat
mov
in
out
cdq
cmp
xchg
push
rcr
pusha
(bad)
into
jg
inc
adc
mov
je
(bad)
int
inc
mov
add
or
(bad)
stc
mov
mov
xchg
jae
jmp
fldcw
adc
rcr
add
jg
xor
xchg
or
(bad)
out
pop
push
jns
xchg
and
aas
loope
mov
xlat
mov
cmp
adc
add
movs
fs
hlt
push
cmps
fcomp
sub
les
jnp
popf
adc
inc
out
mov
fs
inc
jmp
xchg
mov
push
lea
lods
mov
lahf
in
hlt
int3
add
retf
scas
and
mov
stos
repz
add
pop
movs
sub
or
mov
addr16
xlat
cwde
or
jb
enter
adc
jo
sub
jbe
or
ins
nop
and
fld
pusha
js
sbb
or
xchg
inc
jmp
das
pop
int3
mov
pop
and
adc
fst
xchg
push
ins
(bad)
jbe
xor
cmp
into
shl
pusha
dec
arpl
jnp
enter
or
lods
out
(bad)
sbb
sbb
ins
cmp
popa
pop
hlt
cmovp
cmps
loop
pop
int3
stos
dec
cmps
mov
inc
jmp
cmp
xor
cmps
xor
fwait
lahf
jns
(bad)
enter
in
mov
jae
icebp
mov
mov
xchg
mov
sub
and
mov
das
enter
add
mov
lods
sahf
or
mov
cmps
push
or
sub
pop
pop
test
aam
div
aad
push
add
push
shl
adc
rcr
sbb
xchg
gs
retf
(bad)
cmps
xor
shr
cli
inc
es
cmps
enter
mov
cmp
push
sahf
add
pop
pop
xor
sbb
mov
and
movs
clc
mov
inc
mov
xor
ret
adc
jb
pusha
mov
icebp
dec
jl
movs
cmc
jo
push
loopne
sbb
ret
outs
lods
cmps
dec
ja
sbb
or
(bad)
sub
jecxz
aas
out
jmp
and
cs
imul
rcl
ss
(bad)
pop
dec
arpl
add
mov
shl
(bad)
in
fwait
mov
mov
xchg
ins
cmps
pop
shl
rcr
call
retf
aad
sbb
aaa
(bad)
jp
repnz
mov
or
xor
jae
call
ja
pop
pop
mov
bound
inc
jbe
pop
repnz
out
dec
cs
stos
ja
stc
cmp
dec
mov
inc
sub
xchg
adc
dec
push
inc
test
xor
pusha
xchg
mov
popf
pop
fimul
test
ds
jl
sbb
lds
add
dec
imul
dec
mov
jg
sub
cmc
data16
outs
nop
gs
jg
into
adc
movs
lods
aas
xor
fbstp
call
push
cwde
lods
addr16
add
cmp
ds
adc
push
mov
ins
call
ret
(bad)
(bad)
icebp
xor
add
cdq
sbb
mov
je
dec
out
jmp
adc
aad
shl
mov
and
add
cdq
daa
fwait
cmc
enter
sbb
add
add
or
iret
(bad)
jl
xchg
test
push
outs
push
in
and
cmc
jp
inc
les
aam
fs
xor
lahf
inc
(bad)
mov
or
and
repnz
mov
imul
push
xchg
jb
mov
mov
cmps
pop
in
adc
div
xchg
rcr
nop
(bad)
push
adc
ds
and
mov
and
cmp
pop
lods
sub
jg
cli
cmps
mov
outs
add
cs
sub
ss
in
test
cmp
loop
ins
pop
mov
stos
xchg
adc
mov
cmps
lahf
out
sub
xchg
aam
mulps
cvtps2pd
or
imul
dec
ret
call
imul
shr
mov
das
fld
lock
dec
adc
mov
xor
push
xchg
and
adc
fmul
stos
fadd
push
stos
cmp
cmp
fsubr
push
xchg
pushf
shr
or
div
push
add
ins
iret
mov
fs
xor
repz
ins
push
or
xor
sbb
and
and
idiv
push
aas
jecxz
psadbw
leave
jbe
movs
ja
leave
sahf
js
and
xchg
je
imul
iret
push
sub
scas
jae
cmps
inc
adc
lahf
repz
jnp
adc
outs
sbb
lds
jbe
hlt
mov
arpl
aas
mov
and
push
adc
stc
inc
js
(bad)
add
push
rcr
clc
pop
pop
mov
ds
nop
xor
fcmovbe
ret
mov
aam
movs
xor
ins
sbb
les
cmp
sahf
addr16
adc
movs
fisub
jl
ins
mov
push
add
hlt
fstp
pop
int
inc
popa
cmp
cmp
rep
aam
sbb
test
shl
sub
out
sbb
or
(bad)
test
add
lods
dec
out
fstp
cmp
fistp
outs
mov
jae
lods
data16
inc
shl
shl
call
jmp
and
ret
lods
push
ja
(bad)
aas
pop
imul
sub
push
xchg
call
(bad)
adc
in
outs
xor
inc
push
lahf
data16
outs
inc
stos
cmps
dec
ficomp
shl
fucomi
mov
jbe
into
or
outs
dec
jo
xchg
jb
pop
pop
cmp
dec
mov
dec
pop
lods
fiadd
mov
std
push
(bad)
dec
stc
out
dec
ret
mov
pop
jae
sar
cmp
pop
inc
sbb
enter
push
test
xchg
lods
mov
je
addr16
aas
sbb
pop
aad
mov
mov
xor
int3
jg
pusha
push
adc
mov
xor
mov
aad
loope
mul
(bad)
push
pusha
retf
int3
paddq
fist
mov
test
(bad)
sti
lods
stos
test
mov
and
xchg
and
(bad)
sbb
inc
retf
cmc
inc
test
mov
cmp
stos
popf
mov
gs
les
inc
jmp
adc
xor
daa
pop
xchg
and
rol
jb
test
mov
mov
adc
adc
adc
mov
sub
neg
jb
outs
aam
(bad)
xchg
and
dec
dec
icebp
sub
popf
or
dec
popa
sahf
pushf
stos
add
test
stc
das
dec
fdiv
sub
push
stc
leave
jne
inc
jp
in
pop
enter
cs
inc
mov
ret
push
jp
pop
ins
rcl
push
and
xor
sub
xor
jb
cmp
jp
movs
sbb
jmp
ds
pop
jge
mov
std
repnz
fistp
sbb
mov
jo
pop
adc
aad
jmp
pop
js
add
add
sar
retf
fisub
mov
fst
into
gs
imul
mov
dec
pop
std
lahf
icebp
jmp
pop
mov
in
add
(bad)
xlat
push
mov
jmp
ins
into
push
outs
fnstsw
pop
mov
sbb
fst
cwde
fisttp
jecxz
cdq
pop
mov
xchg
or
and
fwait
aaa
mov
push
xor
jno
lods
push
mov
daa
cmp
js
sbb
xchg
lds
mov
in
sbb
pop
imul
push
lea
test
dec
adc
sbb
hlt
jns
mov
cli
cmp
cmps
cmp
loope
outs
and
out
repnz
lds
imul
dec
and
fiadd
cmp
mov
popa
retf
out
dec
inc
inc
mov
outs
pushf
popa
(bad)
mov
jo
call
out
mov
sbb
ins
mov
movs
fsub
(bad)
jne
mov
xchg
call
jo
sub
je
jmp
out
loop
push
iret
aad
mov
pop
fwait
xor
add
cmp
xchg
call
(bad)
cmp
in
cmp
mov
jle
aaa
adc
sub
mov
mov
jns
jnp
ss
sbb
bnd
nop
daa
pop
push
inc
pop
not
pop
inc
sub
lea
push
sbb
out
data16
or
add
xchg
rcr
dec
jb
cmps
xor
and
lods
push
add
jbe
clc
xor
cmp
fidivr
inc
xchg
jb
inc
xchg
xchg
inc
jle
sub
(bad)
or
add
adc
push
xchg
ret
dec
fcomp
dec
stos
push
fs
mov
ret
out
inc
pop
fistp
jns
adc
mov
mov
ja
test
push
pop
sub
mov
sub
cmp
adc
clc
add
jecxz
sub
push
pop
push
lds
push
cld
lahf
bound
outs
xchg
inc
push
sar
inc
out
ds
int3
fist
xchg
dec
fcom
fadd
ret
dec
lahf
pop
into
cld
dec
leave
sub
inc
aam
xchg
inc
out
mov
popa
xlat
xchg
cmp
pop
lods
or
je
cs
jecxz
out
add
inc
imul
jnp
out
popa
cmp
popa
mov
or
mov
in
leave
retf
cmps
leave
fimul
out
fcmovnb
fld
mov
push
(bad)
(bad)
jo
pop
icebp
sbb
inc
ds
cmps
xor
add
cmp
inc
cmp
sbb
shl
repnz
jmp
mov
jae
mov
aad
pop
in
sbb
inc
imul
pop
xchg
ret
mov
(bad)
(bad)
cmp
nop
pop
sub
jge
pop
jnp
clc
inc
mov
or
shr
jno
dec
mov
hlt
mov
xor
loopne
dec
pop
xchg
outs
sti
xchg
mov
mov
out
rol
in
jmp
loope
scas
xchg
dec
xor
add
push
sub
mov
push
mov
imul
aaa
mov
mov
mov
test
pop
adc
jge
push
jnp
ins
pop
call
mov
lea
movs
sub
cli
jp
lahf
in
push
loope
out
cli
js
jns
add
out
mov
stos
jne
pop
cmc
shr
movs
pop
xchg
xchg
pop
std
cmp
mov
sub
pop
fdivr
and
dec
sbb
jge
or
or
jle
mov
imul
cmp
shl
enter
clc
mov
cmc
xchg
jle
int
pop
inc
jge
cli
mov
rol
dec
inc
adc
push
std
enter
and
ss
mov
jl
aas
xor
xchg
icebp
push
cmp
iret
adc
fisub
jmp
imul
mov
addr16
retf
adc
push
push
sbb
add
push
mov
out
pop
out
scas
rcl
ret
call
pop
sbb
outs
repnz
xor
or
and
fist
mov
xchg
and
aaa
push
ficomp
xchg
mov
fucomp
shr
mov
(bad)
mov
add
bswap
aas
cmp
xchg
imul
jno
ret
mov
sub
sub
inc
lea
aas
fdivr
cli
outs
push
sti
in
xor
push
bound
mov
(bad)
sub
cld
out
pusha
scas
xor
dec
push
dec
lock
lds
mov
jg
daa
ss
sub
repz
mov
pop
fdivp
test
lahf
(bad)
sbb
pop
jmp
jl
xor
aaa
mov
mov
xor
hlt
mov
pushf
lock
aad
jb
shl
pop
(bad)
jmp
sub
sbb
mov
inc
cld
(bad)
int3
outs
cmps
test
or
dec
mov
pop
or
nop
outs
xchg
adc
loopne
arpl
out
nop
lods
ret
loopne
inc
sti
mov
cmp
sub
fstp
(bad)
in
in
pop
cs
sbb
and
loope
adc
ins
in
inc
cli
repnz
mov
out
mov
xor
pop
push
in
push
jge
xor
jl
jle
mov
aaa
jo
inc
and
push
sbb
loop
in
bnd
jle
hlt
shl
bound
cmp
xor
pushf
imul
mov
inc
(bad)
imul
or
std
push
pop
jb
cld
inc
fs
popa
ret
push
pop
stc
or
ficom
add
and
test
push
push
sub
test
cmps
mov
loop
shl
push
xchg
jmp
fsubr
push
clc
push
test
cli
cmc
fwait
mov
stc
xchg
test
leave
sub
pop
sbb
icebp
ss
scas
out
pop
inc
test
mov
fld
mov
mov
push
int3
fistp
dec
nop
cs
in
sub
cld
pop
cmp
and
aas
retf
les
rcr
sub
mov
add
mov
add
adc
or
clc
test
xchg
enter
push
test
or
es
cmp
jns
push
push
stos
sbb
leave
add
(bad)
mov
movs
adc
or
adc
mov
shl
mov
std
pop
jle
add
pop
mov
movs
jb
or
xchg
mov
(bad)
cli
and
out
jp
mov
mov
inc
imul
jbe
into
xor
daa
popf
lahf
in
gs
jns
push
pop
ds
shr
jle
test
mov
cmp
xor
mov
test
(bad)
push
dec
pop
or
add
loopne
inc
stos
jg
int3
test
jbe
cwde
jecxz
cmp
push
fldcw
aas
imul
popa
mov
or
sub
and
ret
icebp
adc
ja
jecxz
ins
call
mov
xchg
mov
dec
mov
jmp
aaa
pop
rcl
mov
mov
ret
mov
cmp
xchg
loop
in
lock
xchg
push
mov
xor
mov
dec
dec
pop
adc
push
mov
add
pop
bsr
sub
mov
push
inc
inc
push
sub
cs
jmp
sub
cmp
jle
dec
jnp
jne
push
aad
movs
push
jns
loopne
ja
dec
sub
pop
nop
mov
ja
test
out
lahf
jmp
sub
ror
and
pusha
push
pusha
jecxz
mov
das
aas
pmaxsw
aad
or
ins
mov
(bad)
adc
jmp
outs
jmp
scas
call
(bad)
or
pop
ficom
arpl
mov
ret
repnz
xor
je
not
mov
stc
ror
lods
sub
jo
rol
aas
loopne
popa
push
xchg
ja
test
jmp
jmp
gs
clc
pop
popa
xor
add
add
jle
xlat
enter
scas
dec
fisubr
adc
sar
pop
pop
fs
push
mov
lods
dec
xchg
add
in
inc
popa
das
add
pop
(bad)
cmp
push
in
and
xor
dec
jae
dec
cmp
jmp
retf
xor
mov
mov
mov
je
call
stos
nop
ret
enter
xchg
ss
int3
iret
or
adc
(bad)
jmp
repz
div
pop
dec
xchg
out
enter
sbb
sahf
mov
push
lods
jae
imul
stos
ja
xchg
ins
fs
mov
sub
pop
inc
add
mov
int3
dec
ret
inc
int3
nop
dec
pop
adc
push
jg
or
or
pusha
mov
sub
push
data16
repz
inc
loope
jmp
in
cwde
sti
cli
fstp
outs
cmp
xor
or
ror
pop
(bad)
fcom
xor
push
push
pop
retf
dec
or
and
in
in
std
test
push
and
mov
sar
pop
jne
out
(bad)
xchg
mov
push
xchg
aad
mov
jne
or
fidiv
jo
lock
inc
div
fistp
adc
push
sbb
mov
push
xchg
jg
jmp
nop
clc
gs
dec
jl
mov
out
xor
dec
test
inc
jae
(bad)
ins
sbb
fbld
frndint
mov
or
jle
out
and
sbb
call
fst
(bad)
test
and
call
sbb
sbb
xor
retf
cld
dec
mov
aad
aad
sbb
por
out
mov
lock
enter
sbb
jecxz
xor
and
hlt
jns
mov
mov
out
mov
add
ror
out
(bad)
mov
popa
jns
jbe
fmul
pop
test
jmp
outs
mov
or
sbb
sub
sbb
vmread
(bad)
retf
rol
mov
push
jo
push
(bad)
rcr
dec
push
mov
mov
or
sti
mov
cmps
das
sub
mov
movs
add
shl
test
mov
or
and
jo
or
mov
ficomp
mov
mov
pop
scas
int3
pop
jmp
cdq
enter
jle
mov
call
out
ret
mov
and
xor
das
jae
jnp
dec
sub
add
mov
and
inc
bound
or
in
rcl
retf
out
fbstp
jg
aad
sbb
fistp
sti
push
push
inc
xchg
aaa
dec
and
cld
mov
xor
jle
dec
in
mov
cmps
cwde
push
in
mov
inc
dec
inc
(bad)
push
mov
xchg
repnz
xchg
(bad)
mov
aam
push
in
test
out
aas
ja
call
dec
sub
sub
pop
inc
out
mov
shl
in
mov
or
(bad)
mov
inc
sub
inc
jle
cmps
cmp
pop
cmp
and
sbb
scas
and
cld
xchg
in
repnz
movs
add
sub
fs
je
add
push
stc
in
inc
cmp
jecxz
aam
adc
inc
or
movs
fsubr
sti
in
fdiv
leave
mov
inc
loopne
add
stos
pop
mov
pusha
cmc
clc
adc
enter
int
imul
dec
loope
daa
xor
repz
stc
and
adc
movs
retf
mov
jne
retf
call
xchg
jmp
nop
xor
aad
leave
imul
jmp
mov
rcl
call
repnz
mov
cmp
fcmove
xchg
pop
repz
leave
outs
sbb
and
cmps
cmps
dec
into
pop
imul
(bad)
mov
jle
cmps
scas
push
mov
bound
mov
leave
cdq
ret
fsub
hlt
fstp
adc
arpl
sub
sub
std
movs
movs
cdq
out
and
push
pop
pop
outs
loopne
mul
sbb
aam
pop
inc
push
jl
repz
into
in
dec
outs
cdq
pop
or
fadd
out
int
pop
fs
fwait
loop
mov
repz
je
into
scas
sbb
dec
push
lahf
mov
push
stos
and
mov
add
jecxz
(bad)
int
int
popf
and
out
scas
adc
mov
sbb
leave
das
(bad)
sar
push
cld
mov
sub
dec
mov
cmp
in
int3
sbb
jbe
mov
fdivr
pop
(bad)
std
(bad)
sub
or
add
and
mov
mov
mov
mov
jl
retf
jbe
or
sub
mov
dec
stos
loopne
jmp
sub
div
repnz
pop
dec
xchg
lea
popa
push
(bad)
mov
les
xor
aam
push
pop
cwde
or
(bad)
mov
xchg
push
or
xchg
and
je
outs
adc
dec
pop
rcr
jmp
in
sub
and
scas
pop
push
inc
mov
push
xchg
je
sub
arpl
sub
ins
jp
pop
ja
jbe
add
mov
push
or
pushf
das
mov
aad
mov
int
xor
add
shl
in
add
outs
pop
mov
mov
push
retf
into
or
mov
ficom
sti
jl
in
sbb
sub
iret
add
mov
inc
xchg
xor
sub
mov
cld
call
xchg
xchg
xor
xchg
setae
cld
mov
sar
cmp
rcr
(bad)
sbb
nop
inc
das
cli
push
daa
sbb
dec
inc
jp
push
adc
aad
mov
and
daa
test
push
loop
push
or
fwait
out
xor
cdq
daa
arpl
mov
std
jae
add
add
xchg
mov
nop
daa
sbb
jae
adc
fmul
in
pop
loope
(bad)
and
sti
data16
push
in
icebp
sbb
jl
popa
dec
out
cmp
pop
adc
lea
aaa
adc
dec
std
(bad)
cmp
jge
ins
out
jle
fld
cmps
xlat
popa
add
xor
int3
test
or
xchg
aad
push
jg
mov
rcr
mov
ret
pushf
(bad)
and
(bad)
movs
in
out
adc
(bad)
fcomp
mov
scas
retf
ficom
push
cdq
adc
mov
aad
clc
cmp
test
mov
loop
xlat
push
lahf
xchg
adc
push
push
push
or
sbb
mov
sub
mov
mov
dec
push
xchg
popf
lahf
mov
mov
xchg
pop
stos
addr16
pusha
jg
fwait
mov
jnp
jno
cmp
rol
push
das
pop
add
mov
mov
cs
call
jp
xchg
outs
push
out
cdq
dec
push
mov
gs
xchg
jne
push
mov
mov
mov
fs
xchg
and
sub
shr
hlt
icebp
adc
in
int
mov
and
jg
push
dec
popa
inc
leave
mov
aam
jg
jnp
cld
and
push
sbb
pop
push
cmc
push
mov
mov
sbb
dec
pop
data16
push
jae
push
fdiv
jb
sbb
dec
mov
mov
bound
dec
xchg
out
out
iret
in
jnp
in
or
xchg
(bad)
imul
push
jp
popa
mov
cmp
push
xor
es
int3
(bad)
cmp
(bad)
div
jge
daa
sbb
cli
(bad)
pop
push
fisubr
push
shl
jge
cmp
loopne
xchg
push
les
sbb
pop
mov
shl
lea
lahf
popf
and
dec
mov
mov
adc
loope
and
mov
mov
jmp
mov
cmp
cs
rcr
bound
cmp
push
sbb
fs
mov
push
loop
punpcklwd
jae
outs
repz
bound
stos
in
push
dec
adc
sub
xchg
sbb
cld
dec
mov
sti
xlat
test
pop
push
mov
push
jne
outs
les
lods
sub
rcr
movs
mov
mov
and
dec
mov
xor
pusha
push
stc
sahf
ja
adc
retf
jecxz
inc
js
jle
and
xlat
pop
cdq
xor
pushf
pop
mov
cmc
mov
fnsave
lock
mov
pop
std
xor
mulps
cmp
loopne
xor
js
pop
daa
jecxz
add
out
mov
sub
imul
add
pop
dec
imul
and
ins
mov
popa
dec
repnz
aaa
add
stos
rcl
dec
sti
movs
or
stos
ss
test
dec
xchg
call
mov
push
xchg
movlps
or
stos
xchg
add
es
xchg
ss
sub
push
jg
mov
lahf
lock
(bad)
lea
mov
lods
xchg
mov
inc
std
add
bound
loop
call
outs
jae
adc
push
sub
and
add
loope
xchg
mov
jg
out
lea
dec
lds
xlat
push
dec
lahf
je
fcomi
rcl
daa
jle
fs
pop
pop
cmc
cmps
inc
cmc
(bad)
jp
pop
test
fimul
enter
data16
adc
je
lock
pop
pop
hlt
push
inc
cmps
xor
sbb
sbb
xchg
adc
adc
push
popf
(bad)
cmp
push
inc
fistp
sbb
jp
arpl
pop
lods
inc
sar
les
lods
fmulp
ror
cmp
pop
repnz
inc
test
mov
mov
pop
mov
mov
mov
enter
cmp
in
and
pusha
or
fld
inc
dec
mov
not
or
aad
ins
and
jecxz
xor
stc
mov
popa
sbb
and
cmc
push
fs
adc
lea
sub
push
fbstp
aaa
scas
xchg
or
gs
add
out
jno
lds
sbb
imul
inc
sti
cmp
jl
inc
aad
out
xor
into
or
sahf
mov
push
fadd
dec
adc
mov
pop
lock
test
les
push
ret
mov
cmp
jns
dec
mov
pop
jmp
xchg
rol
enter
xor
push
adc
clc
dec
int
int
xor
nop
mov
fistp
cmp
and
movs
lods
stos
mov
mov
push
mov
xor
icebp
cwde
push
xlat
lock
lock
inc
js
mov
and
jbe
jo
sbb
mov
out
into
jnp
gs
mov
sub
mov
(bad)
int
sub
ds
imul
pop
call
jns
pop
cs
push
fiadd
ins
pop
dec
sub
test
arpl
jl
sahf
paddusb
adc
mov
int
pop
jbe
pop
push
das
mov
inc
pop
shl
adc
clc
jnp
fcom
mov
movs
loopne
std
stos
jmp
mov
xchg
sbb
mov
lock
test
aam
push
jno
aam
mov
add
jmp
push
leave
sahf
cmp
movs
jle
adc
repz
sub
dec
cmp
sbb
inc
xor
cld
popf
push
add
dec
xchg
push
fisubr
ins
dec
jae
hlt
int
ins
mov
cld
aas
mov
movs
int
pop
sub
jbe
pop
or
add
das
push
mov
mov
push
pop
push
lahf
adc
cmp
js
pop
loopne
fs
pop
in
mov
mov
and
fsubr
ret
(bad)
dec
or
add
mov
xor
inc
pusha
fnstenv
or
sbb
dec
fisttp
loope
cld
pusha
push
dec
adc
mov
cmc
sub
retf
repz
jp
clc
loop
arpl
imul
jp
add
xor
sbb
jmp
fwait
or
inc
cmp
daa
nop
cmp
mov
inc
sbb
xor
mov
mov
leave
dec
and
mov
ins
jle
dec
fwait
sub
jmp
cdq
xor
mov
add
cmps
clc
adc
dec
jecxz
repnz
inc
stc
or
sahf
cmps
stos
test
push
cwde
xchg
aas
mov
pop
addr16
es
pop
or
outs
jo
pop
and
arpl
test
jnp
mov
xchg
leave
add
(bad)
xor
into
sbb
stos
sub
jge
retf
jb
test
jo
jbe
sahf
jnp
nop
sahf
shl
and
jno
pop
cmp
mov
fs
cmp
cmp
mov
or
add
lods
push
or
or
push
lods
xchg
sub
mov
xor
mov
mov
inc
push
jo
xor
(bad)
dec
and
stos
aas
mov
lods
xchg
sbb
js
test
add
stos
jmp
xor
pop
or
clc
add
scas
jmp
xchg
cmp
add
in
les
xchg
push
mov
sbb
loope
mov
ficomp
out
ret
or
pop
adc
xchg
jle
jne
push
call
cmp
sub
enter
cmp
ja
inc
in
(bad)
frstor
and
dec
jae
lds
jne
imul
inc
mov
cmps
lods
xchg
pop
int3
mov
call
loopne
add
clc
xchg
jge
ja
cmp
loop
sub
test
sti
bound
push
out
and
adc
push
lods
sahf
pop
(bad)
and
lahf
daa
and
(bad)
cli
jne
dec
repz
lods
adc
mov
(bad)
pushf
or
arpl
mov
out
mov
push
jl
sub
ss
pop
sub
mov
(bad)
stc
mov
xchg
add
retf
int3
ja
mov
xor
mov
movs
pop
ss
sub
repz
inc
imul
cmp
inc
add
xchg
push
push
call
cli
ja
or
das
(bad)
in
or
bsr
lods
mov
mov
mov
mov
mov
arpl
fist
dec
scas
loop
lock
mov
jb
mov
push
mov
jbe
(bad)
jo
retf
push
pop
in
mov
into
sub
xor
scas
xchg
std
mov
pop
shr
push
mov
push
mov
ret
int
cmp
jno
cmp
jg
sti
aaa
lds
sub
fdiv
inc
lock
xlat
icebp
call
pop
lock
jb
scas
push
or
(bad)
sbb
mov
cs
adc
or
std
retf
dec
cli
push
jbe
jno
jg
jno
(bad)
xchg
sbb
mov
loope
in
lds
fstp
xchg
push
neg
push
(bad)
jmp
(bad)
(bad)
(bad)
iret
cmp
stos
leave
or
sbb
repnz
(bad)
iret
cwde
inc
adc
out
jecxz
add
fstp
addr16
je
pop
iret
adc
push
cli
add
popa
push
das
jge
xor
retf
mov
icebp
out
cmp
mov
outs
scas
jmp
jo
inc
jge
mov
lea
ret
add
jge
mov
pop
scas
mov
mov
jmp
mov
push
jmp
es
mov
lods
and
mov
test
ds
or
(bad)
and
and
cdq
mov
add
mov
pop
mov
or
cmp
push
cmp
jmp
arpl
or
jb
in
xor
push
xor
pop
sahf
stos
dec
cmp
scas
adc
adc
sbb
dec
sub
mov
push
sub
cmps
or
bnd
xchg
rol
jns
push
mov
jmp
sbb
cmc
sbb
xchg
jnp
pop
xchg
mov
mov
or
ret
rol
add
rol
hlt
mov
(bad)
mov
add
cmp
pop
retf
int3
leave
mov
pop
out
or
pop
lods
lea
xor
xchg
fmul
xor
push
enter
lahf
cmp
repz
cmp
fsub
cmp
aaa
pop
enter
jbe
pop
int3
push
les
ds
js
jmp
fwait
ja
sub
(bad)
out
pop
pop
je
sti
jo
data16
push
jle
fucom
movs
(bad)
icebp
pop
inc
sub
inc
mov
stos
loop
add
scas
cmp
xor
repnz
sbb
cmps
popa
dec
hlt
(bad)
inc
xlat
les
mov
int
jb
jge
mov
in
push
mov
hlt
pusha
pusha
(bad)
test
js
dec
jns
imul
adc
mov
push
fld
ror
xchg
aad
test
imul
cmp
inc
ret
adc
cmc
js
ret
loop
mov
arpl
fistp
test
rol
mov
call
iret
cli
and
push
pop
cmc
pop
popf
pop
dec
jge
mov
add
enter
pushf
push
pusha
sar
or
nop
inc
pop
sti
add
add
mov
jecxz
and
xlat
jo
cmp
gs
cli
stos
mov
xchg
xchg
or
clc
inc
dec
adc
lahf
dec
inc
pop
xor
daa
pop
stc
fs
(bad)
mov
sar
clc
mov
call
es
adc
sub
push
mov
mov
loopne
fs
ret
add
call
ds
dec
loopne
mov
push
jns
adc
imul
pop
jne
dec
test
(bad)
stos
mov
xor
xchg
inc
pop
int3
jp
sub
scas
xor
out
jecxz
into
and
sub
fwait
shl
aas
fistp
test
(bad)
mov
add
xchg
mov
adc
xor
in
es
sub
sub
jae
ret
and
std
inc
xchg
and
push
sti
test
mov
imul
enter
or
inc
(bad)
mov
mov
xchg
xchg
inc
inc
xchg
cmp
adc
mov
xchg
push
xor
pop
xlat
inc
and
jns
jecxz
bound
pop
test
aaa
mov
call
ins
mov
fsub
adc
and
fldcw
add
fwait
outs
addr16
iret
cli
aad
stos
xchg
mov
fmul
sahf
enter
pop
lods
repz
clc
(bad)
and
scas
push
mov
adc
xor
hlt
jne
(bad)
daa
mov
fs
cli
cmp
add
lods
mov
cli
(bad)
fdiv
pop
xchg
jle
mov
cmp
lods
out
aam
enter
call
fcom
pop
pop
cs
clc
xlat
dec
sbb
sub
mov
jne
cs
pop
dec
(bad)
mov
loop
inc
adc
mov
rcr
imul
int3
xchg
mov
movs
loopne
lock
xor
mov
loopne
pop
(bad)
fnstcw
dec
mov
push
pop
inc
cmp
and
outs
cld
ins
pop
jns
stc
add
rcr
mov
jno
and
lahf
ja
bound
dec
(bad)
jmp
pop
enter
call
call
jmp
cmp
mov
(bad)
sub
enter
ret
aaa
gs
iret
fst
add
mov
mov
pushf
pop
std
xor
mov
push
jmp
aaa
std
retf
pop
(bad)
out
mov
test
(bad)
int3
stos
inc
jae
sub
rcr
mov
xchg
int3
cmp
daa
and
push
imul
add
icebp
es
xchg
test
push
cmc
inc
imul
in
fisubr
pop
pop
hlt
loopne
mov
mov
es
retf
loop
and
ins
arpl
or
adc
or
inc
stc
xchg
mov
xor
xor
icebp
inc
inc
push
ja
imul
mov
push
sub
xor
adc
sbb
mov
inc
push
mov
ror
inc
es
sbb
mov
call
nop
iret
retf
pop
(bad)
sbb
sti
js
xor
mov
push
push
dec
mov
(bad)
adc
cmp
in
aaa
push
fmul
call
dec
mov
out
stos
mov
adc
inc
mov
or
push
jnp
sub
cmp
and
or
xor
and
repnz
mov
pushf
outs
shl
inc
dec
jmp
imul
xchg
add
add
push
(bad)
push
or
cmp
loope
jae
inc
sub
stos
jbe
push
movs
test
sbb
es
test
dec
xchg
or
movs
add
loop
inc
lea
stos
(bad)
pop
cmp
cmp
test
push
pop
cmp
pop
pop
pop
mov
inc
xchg
push
push
movs
xlat
scas
mov
fs
loop
lods
fld
jno
sbb
xchg
movs
rcl
push
mov
mov
cli
test
xor
cmp
xor
push
cmc
sub
aas
jmp
jl
in
pop
jl
out
popa
(bad)
jae
in
cld
loopne
ja
dec
jl
sub
mov
pop
inc
inc
mov
xor
push
jge
or
(bad)
mov
retf
dec
push
mov
sbb
inc
adc
mov
mov
outs
clc
stc
xchg
push
lahf
shl
sti
rol
test
(bad)
dec
cmp
mov
inc
jmp
add
push
int3
sbb
sub
leave
sub
push
xchg
(bad)
inc
dec
lods
sahf
ins
inc
or
jge
mov
pop
loopne
popa
xchg
push
dec
xchg
and
or
daa
mov
lahf
dec
mov
imul
xchg
xchg
add
cmps
jno
push
sbb
std
or
scas
test
cmp
lahf
mov
cmp
add
jne
mov
sub
not
jo
mov
add
test
popf
lods
retf
mov
sar
or
inc
sbb
mov
push
xchg
iret
jp
retf
imul
movs
adc
push
ins
mov
push
adc
cmc
loopne
jo
xlat
mov
repnz
(bad)
and
jle
xchg
pusha
ja
inc
sub
repnz
stc
enter
aam
shr
bound
sahf
xchg
fidiv
cli
lahf
pop
data16
pop
lahf
fild
pop
and
movs
sbb
pop
test
arpl
cmp
sbb
cli
sub
int
(bad)
cli
ja
sti
fmul
add
mov
sbb
stos
je
popf
xchg
pop
adc
addr16
loopne
mov
jns
sub
cmps
js
out
xor
pop
add
add
sub
das
pop
rol
push
out
bound
jae
push
fcmovbe
xchg
daa
vmulpd
push
sbb
and
popf
imul
or
repz
mov
mov
retf
scas
icebp
mov
pop
das
push
pop
mov
icebp
inc
mov
mov
sub
shl
jp
gs
sbb
fs
stos
pusha
dec
pop
fcom
aaa
push
xchg
test
ds
dec
fmul
xor
push
out
xlat
xor
cmp
mov
pop
sbb
or
(bad)
aam
mov
sub
xchg
jge
loope
xchg
adc
and
pop
dec
xor
jmp
mov
int
ds
pop
fs
push
int
xor
das
pop
xchg
fstp
test
jmp
in
sub
or
stos
and
sahf
mov
mov
popa
cmp
pusha
mov
test
or
mov
adc
lea
push
data16
outs
mov
test
out
dec
jo
sub
cmp
mov
loope
int3
pop
push
jno
adc
test
clc
mov
in
jae
repz
sub
js
cs
fistp
mov
das
je
mov
dec
test
adc
cli
fsubr
retf
adc
pop
pop
mov
fsub
fucomi
mov
inc
adc
mov
aam
mov
test
in
ss
es
fdiv
push
mov
jnp
das
jbe
fldcw
mov
call
sub
push
pop
pop
stos
pop
sbb
push
jmp
loop
(bad)
xor
xchg
std
adc
dec
mov
mov
cmc
mov
mov
sub
shl
jl
cmps
add
jne
add
sub
xchg
add
enter
push
jae
dec
push
push
fwait
and
sub
or
ins
add
and
jo
push
adc
push
pushf
push
clc
mov
mov
mov
lods
pop
and
cmc
xor
jmp
lds
jmp
mov
sbb
repz
sbb
or
(bad)
fcomp
push
int3
sbb
jb
push
call
sbb
sbb
xor
jno
xchg
sbb
add
or
mov
ds
push
mov
icebp
repz
jae
fwait
mov
mov
mov
sbb
loop
xor
dec
addr16
push
test
clc
and
test
push
movs
mov
xor
lea
or
dec
ficom
or
sbb
cs
push
dec
adc
xchg
or
or
popf
hlt
adc
add
sub
jecxz
jle
lahf
ficomp
push
rcl
cmp
fcomp
mov
pop
js
xchg
xlat
push
sahf
push
loop
lahf
lock
outs
jmp
ror
mov
pop
and
es
pop
(bad)
jno
arpl
xchg
cmp
cmp
and
test
mov
div
ror
imul
popf
hlt
push
xchg
push
and
dec
mov
(bad)
loopne
sub
inc
cmp
pop
call
ror
test
push
mov
retf
xchg
aad
jnp
pop
ds
enter
cwde
aas
cmp
mov
jg
jl
es
xchg
mov
imul
fwait
and
ret
sar
jnp
cmp
test
ret
add
into
push
pop
adc
xchg
mov
jns
fcmovb
and
in
mov
dec
push
int3
pop
repnz
loope
mov
sahf
jmp
jmp
(bad)
aad
jno
mov
cmp
inc
add
leave
int3
aad
dec
movs
fsub
mov
adc
mov
pop
push
(bad)
mov
jno
jg
push
add
repz
cmp
pop
jno
in
hlt
jge
or
push
sahf
shr
ins
jno
add
push
aam
push
jbe
outs
xor
adc
sar
sbb
sahf
in
lock
sbb
mov
add
xchg
or
fidiv
fst
push
(bad)
shl
adc
inc
popa
cmp
mov
adc
fst
sub
je
fld
dec
addr16
mov
cmp
ret
hlt
adc
mov
jae
push
pop
gs
jmp
hlt
xor
lds
xchg
rep
pop
sbb
mov
shl
and
in
jmp
add
in
mov
dec
and
dec
mov
call
xchg
neg
sbb
sub
jo
imul
das
test
clc
(bad)
jge
mov
push
in
in
movs
jmp
sub
sti
cmp
dec
iret
add
add
ror
mov
movs
add
and
push
int
and
mov
std
lock
or
pop
ins
jl
adc
and
into
xchg
push
lds
popf
adc
inc
cmp
mov
std
aad
mov
mov
test
(bad)
cmps
gs
in
and
fnstsw
inc
jge
xchg
adc
jle
sub
outs
push
cmp
or
adc
push
dec
jge
push
cld
xchg
xor
inc
stc
imul
fimul
xor
push
imul
mov
scas
and
or
add
push
sub
and
push
cmp
push
push
pop
push
or
mov
ja
sub
mov
outs
arpl
sub
xchg
arpl
sub
daa
out
not
add
mov
mov
sbb
and
call
std
rcr
push
ret
fidivr
push
ss
fidiv
out
jmp
scas
fist
test
jmp
mov
stos
data16
ss
mov
push
jp
mov
mov
jno
frstor
lods
out
mov
xchg
xor
push
push
idiv
jmp
in
jl
sbb
ror
jnp
dec
sbb
es
ret
sbb
sub
imul
pop
js
ret
imul
lock
add
and
mov
cmp
in
mov
jae
adc
xor
jecxz
icebp
into
test
xor
add
mov
pop
inc
cmp
mov
cmp
lods
(bad)
push
out
(bad)
rcl
xor
and
retf
or
mov
push
ds
push
inc
xlat
add
loope
outs
(bad)
out
shr
xchg
out
mov
mov
mov
jno
push
inc
mov
xchg
jecxz
xchg
loope
xchg
outs
mov
mov
pushf
stc
mov
and
mov
cmp
dec
movs
movs
ret
ror
push
mov
loope
test
push
es
movs
je
lock
push
dec
xchg
jecxz
xchg
push
jmp
cmp
jmp
dec
rcr
push
dec
imul
add
or
test
outs
and
xchg
test
cld
adc
mov
inc
push
dec
(bad)
cld
xor
mov
adc
mov
sub
ja
jns
adc
push
es
lock
xlat
dec
test
test
scas
fistp
test
push
cmp
or
scas
enter
loop
dec
inc
or
adc
push
outs
loopne
jnp
cmp
or
pop
mov
gs
fwait
repnz
lods
mov
jl
mov
pop
sub
sub
leave
or
sbb
(bad)
lods
and
retf
xchg
xor
inc
scas
int
xchg
dec
add
sub
sbb
data16
push
and
mov
hlt
ret
inc
(bad)
and
leave
imul
add
dec
add
rcl
inc
rcl
dec
sbb
ds
movs
jle
sti
inc
cmp
call
push
data16
cmp
js
pusha
icebp
inc
stos
icebp
mov
out
sar
jl
sbb
popa
arpl
lea
xor
xchg
loop
aaa
or
loop
dec
mov
(bad)
stc
sar
mov
test
daa
add
pop
fist
mov
call
push
mov
cmps
pop
ss
pop
inc
sbb
and
cmp
xor
push
sti
retf
inc
cmps
xchg
lods
add
and
jle
pop
pop
lock
cmp
rcl
mov
push
mov
dec
mov
push
mul
(bad)
aaa
mov
fstp
ss
and
pop
les
(bad)
fmul
add
sbb
mov
stos
or
ret
and
or
test
pop
(bad)
dec
xchg
add
std
add
shl
push
xchg
xchg
dec
push
(bad)
pop
jmp
daa
and
xchg
or
add
movs
push
addr16
jmp
rcr
xor
push
gs
in
push
rol
inc
shr
and
inc
inc
repz
jno
push
jo
lds
push
nop
mov
dec
pop
pop
outs
sbb
shr
pop
or
push
dec
dec
or
xchg
std
rcl
push
cmp
call
ins
dec
adc
ins
push
hlt
mov
repnz
and
xlat
call
into
pop
mov
ret
or
mov
test
out
push
inc
jae
add
sub
ret
jmp
jo
sub
out
call
inc
mov
lods
push
lahf
xchg
shr
push
dec
addr16
sub
xchg
xchg
mov
leave
stos
mov
int
scas
daa
sub
mov
inc
loope
das
mov
mov
sub
movs
sub
jo
in
pop
out
ret
clc
sbb
sar
outs
sub
push
aaa
stos
mov
mov
push
jne
jecxz
jbe
cs
pop
xchg
mov
ret
test
fdivrp
inc
les
fistp
fldcw
jae
mov
xchg
imul
pusha
jae
ins
push
repz
rol
pop
sti
sbb
sub
lds
mov
xchg
fsub
push
ins
mov
div
sbb
mov
imul
cmp
cli
fwait
fwait
sbb
fcmovnbe
dec
and
push
and
in
jne
fadd
neg
shr
in
push
cs
cmp
shl
in
jge
nop
sub
lock
sti
mov
and
mov
add
(bad)
xlat
sti
pop
jno
jecxz
mov
adc
out
adc
xchg
cli
push
jmp
mov
push
mov
pop
int3
add
loope
mov
push
push
sar
fidiv
xchg
loop
jnp
lock
pop
adc
scas
jmp
inc
adc
in
push
popf
pushf
push
ret
lock
push
push
sbb
xor
inc
lods
mov
lods
or
out
rcl
rcr
cdq
inc
inc
out
push
scas
mov
fcomi
jno
and
scas
mov
adc
sub
or
lahf
cwde
mov
adc
mov
(bad)
sbb
mov
mov
push
push
(bad)
sub
lock
test
sbb
push
les
sar
pushf
jg
adc
std
cld
pop
cmp
shl
pop
push
ss
and
repz
cli
(bad)
sbb
repz
mov
stos
movs
adc
or
mov
push
(bad)
mov
out
out
inc
clc
pop
stos
mov
inc
in
mov
dec
dec
or
mov
test
clc
add
push
cmp
add
jb
div
mov
adc
and
daa
push
ret
stos
and
sbb
out
xlat
jae
push
xchg
jae
and
rol
push
fisubr
mov
inc
aas
xchg
outs
dec
dec
mov
jb
retf
loope
mov
xor
jbe
jl
mov
and
or
jne
pop
clc
cdq
mov
mov
mov
push
or
inc
jmp
aas
cmp
les
inc
int3
out
xor
jnp
scas
pop
xchg
outs
leave
pop
sub
stc
or
dec
add
xchg
sbb
xor
or
pop
cmp
test
dec
adc
mov
dec
mov
cmc
hlt
pushf
cmp
out
xchg
in
push
popf
and
pop
mov
sub
sub
mov
ins
rcl
or
add
mov
movs
mov
repnz
push
push
imul
dec
in
mov
cdq
(bad)
inc
push
or
dec
scas
cli
mov
sub
pushf
mov
mov
xor
mov
ror
sahf
mov
lods
retf
push
fisubr
aas
jge
sub
jle
adc
dec
add
repz
mov
cmp
or
mov
sbb
out
or
(bad)
or
shl
mov
int3
mov
sbb
xchg
cmps
or
pushf
sbb
jb
int3
and
cmp
or
dec
fmul
movs
repnz
int3
sbb
jns
das
and
retf
(bad)
pop
cld
call
lahf
cmp
and
push
mov
pop
dec
popa
mov
ss
adc
pushf
lahf
dec
add
sub
call
push
push
aaa
(bad)
sub
ins
sub
int
(bad)
sahf
push
out
sbb
das
sub
sbb
ret
not
pop
(bad)
pop
imul
(bad)
push
dec
mov
mov
loop
dec
out
mov
pop
mov
and
xor
int
mov
sbb
adc
int3
jp
out
cs
push
sub
popa
jmp
std
loop
jns
aad
scas
xlat
movs
icebp
xor
mov
mov
adc
or
shl
cld
jge
push
mov
movs
(bad)
loop
jbe
cmp
push
jge
enter
rol
dec
add
lahf
add
xchg
xchg
inc
cwde
sub
fldenv
push
mov
fcomp
adc
das
xor
repnz
mov
aas
pop
mov
cmps
xor
push
loop
inc
pop
lea
cmp
aas
sub
inc
mov
and
add
and
mov
sar
inc
lock
clc
pushf
fucomip
sub
sbb
sub
xacquire
daa
fucomip
loope
cmps
das
neg
or
stos
rcr
jno
dec
int3
mov
sbb
jnp
lods
inc
mov
add
adc
or
mov
rcl
es
addr16
stos
or
shl
sub
inc
add
add
jecxz
movups
jnp
pushf
lods
loope
push
stc
adc
or
dec
(bad)
inc
fwait
sub
fimul
sub
jmp
movs
cmp
inc
sbb
daa
cmp
shl
andnps
ins
xor
sub
in
push
or
mov
sub
sbb
cmp
in
not
adc
cmps
or
les
sbb
mov
int3
pop
outs
mov
gs
lods
push
push
jns
inc
(bad)
out
add
push
pop
or
cmc
mov
push
sub
sar
cmp
sbb
out
jge
pop
(bad)
fst
sbb
jge
jae
ja
mov
xchg
or
sbb
jl
pop
dec
ds
mov
gs
dec
sbb
lahf
lea
aad
aad
ret
jmp
out
sub
cmp
xor
int3
cmp
sahf
popa
(bad)
int
out
mov
adc
or
pop
push
addr16
xor
and
jmp
mov
pushf
dec
push
ss
mov
sub
stos
call
xchg
pop
xor
jl
imul
pop
pusha
push
jae
inc
loop
mul
mov
sbb
sbb
test
and
div
(bad)
jp
adc
or
pop
icebp
jb
mov
sub
in
push
scas
push
pop
mov
(bad)
push
push
cmps
hlt
jne
pop
push
mov
scas
jg
repz
push
mov
pop
in
cmps
ret
shl
add
inc
movs
into
icebp
out
call
(bad)
mov
and
sub
iret
aad
(bad)
jne
xchg
int
test
jmp
mov
sub
repz
xor
cli
cmp
sti
lock
cmp
add
mov
bound
xchg
or
xlat
xor
dec
dec
add
call
jmp
adc
push
into
add
push
stc
push
push
mov
hlt
mov
mov
push
cwde
std
mov
and
mov
push
icebp
(bad)
ss
(bad)
dec
and
imul
xor
xchg
xor
(bad)
ret
sbb
fwait
xor
outs
ins
add
loope
ret
and
xor
cmp
push
mov
scas
in
rol
bound
cmp
cmps
out
sub
mov
jbe
xor
mov
loope
ficom
lds
cmp
or
push
arpl
retf
inc
push
xchg
pop
dec
push
add
not
rcr
test
push
mov
jmp
gs
adc
mov
fist
cld
mov
loope
loopne
sbb
push
dec
mov
or
sub
shl
out
adc
mov
cmc
adc
push
repnz
(bad)
and
add
(bad)
inc
push
xchg
out
cli
adc
cmp
or
mov
stos
xor
xor
(bad)
push
popf
dec
pop
cmps
and
les
int3
xor
out
neg
jg
scas
mov
test
out
or
into
(bad)
and
cmp
cmp
pop
dec
cmp
mov
aaa
in
lahf
dec
or
ret
mov
aaa
ins
push
and
test
ins
sub
ins
inc
ins
add
xchg
jbe
xchg
mov
mov
push
and
not
shl
cs
or
in
pop
mov
mov
cmp
icebp
scas
arpl
sub
jns
mov
aaa
mov
int3
sar
ss
ss
stos
fiadd
or
call
lea
xchg
mov
mov
and
pop
or
fst
mul
cmp
xchg
lahf
in
out
sub
ror
fsubr
or
es
jbe
mov
mov
mov
sub
pop
xlat
or
clc
mov
pop
daa
push
loop
mov
es
lods
sbb
retf
imul
es
push
and
das
fisttp
dec
xor
mov
xchg
nop
xor
cmp
mov
xchg
in
adc
pop
repz
or
mul
pop
jae
mov
sbb
sub
in
push
xlat
fisubr
test
aaa
mov
sbb
add
in
mov
in
pusha
inc
mov
adc
ds
add
mov
inc
std
jg
jns
mov
in
in
test
into
xchg
sub
xchg
data16
adc
push
cdq
lea
loope
adc
fcom
inc
pop
push
push
icebp
push
mov
fmul
adc
jns
in
xchg
retf
mov
xchg
sub
mov
mov
(bad)
das
sub
or
cld
adc
call
pmuludq
lahf
enter
dec
rcr
cld
bound
xor
lods
adc
push
fld
jb
cmp
cli
(bad)
jbe
es
stc
hlt
cmp
sub
lahf
(bad)
push
lahf
mov
aad
test
xor
mov
scas
fisub
rcl
mov
or
and
mov
leave
cld
inc
ds
fimul
cld
push
leave
mov
mov
cmps
sub
cs
mov
xor
ror
xor
push
jb
sub
hlt
neg
repz
in
iret
outs
cmc
dec
or
mov
in
push
mov
add
pop
pop
loope
xor
push
rcl
xor
outs
test
int
std
or
neg
sbb
data16
ins
cmp
push
add
jbe
inc
jb
shl
ret
mov
adc
lods
cld
and
and
repz
push
ret
cmp
ins
retf
ins
push
inc
xchg
cmovae
test
cmp
jp
add
pushf
ss
inc
and
pop
pop
mov
pop
iret
clc
ins
jb
popf
and
icebp
mov
and
or
retf
sub
aad
nop
scas
xchg
sbb
hlt
mov
test
mov
mov
or
stc
mov
sub
popa
jp
loopne
loope
and
(bad)
and
push
sub
setns
mov
fcom
in
stos
and
out
adc
jno
(bad)
push
mov
addr16
fisubr
add
movs
(bad)
xchg
sbb
and
mov
and
je
cdq
cmp
loope
std
xor
std
xor
sbb
or
pop
jns
cmps
test
test
addr16
aam
dec
adc
or
mov
cmc
mov
mov
push
ftst
cmc
loopne
mov
dec
and
popa
cmps
fild
aas
jae
outs
scas
dec
dec
leave
arpl
mov
sub
data16
rol
shl
sbb
mov
mov
repnz
mov
fsub
ds
loop
jmp
in
pop
mov
xor
push
(bad)
call
dec
adc
pop
or
and
jmp
les
jl
mov
aam
sub
mov
xchg
cmps
shl
xchg
lea
add
cwde
lea
icebp
lea
adc
repz
shr
jbe
pop
rcr
add
(bad)
imul
stc
mov
int3
cmp
enter
mov
push
leave
adc
lock
cmp
cmp
cmp
jnp
int3
sti
sbb
enter
pushf
add
xor
loopne
inc
adc
mov
test
xchg
cmp
inc
mov
ins
fidiv
dec
or
(bad)
mov
lea
add
retf
scas
dec
xchg
push
push
push
std
sub
pop
jbe
adc
push
js
ret
shr
add
push
push
jp
or
std
rcr
mov
lods
sub
dec
cdq
jg
xor
test
gs
mov
xor
out
mov
das
or
call
test
pop
test
pushf
pop
aas
mov
xchg
call
mov
mov
shr
add
mov
les
dec
aaa
nop
inc
sub
mov
shl
and
jl
dec
call
stos
xchg
lods
in
cld
loop
lods
ins
jno
add
sub
dec
push
xchg
mov
pop
mov
cs
sbb
sub
pop
jnp
push
or
sbb
inc
sub
pop
jle
push
cmp
mov
adc
cwde
shr
sbb
call
rcr
or
xor
adc
outs
xor
dec
lea
sub
(bad)
test
dec
test
cmp
sbb
pop
sub
inc
fidiv
fucompp
cmp
scas
pop
inc
loope
sub
jo
retf
add
retf
add
popf
jo
inc
mov
enter
push
xchg
retf
ret
push
inc
adc
div
clc
cmps
or
mov
cs
leave
int
mov
std
jmp
and
movs
les
fcom
(bad)
shr
imul
mov
jmp
cli
addr16
outs
adc
fistp
sub
out
(bad)
mov
mov
push
sub
loop
mov
repz
rcr
mov
fild
jno
es
mov
inc
add
pop
mov
mov
sti
dec
xor
pop
mov
add
ror
in
dec
inc
addr16
jo
test
cmc
xor
cmps
fistp
aam
cmp
jmp
daa
sahf
popa
retf
dec
pop
mov
or
repnz
(bad)
cdq
out
jmp
mov
mov
in
sub
and
sbb
arpl
add
aas
(bad)
push
push
fs
mov
in
dec
push
adc
and
cmp
mov
(bad)
xchg
jbe
retf
inc
ret
popf
loope
cmp
test
xor
fs
add
popf
icebp
pop
loope
pop
pop
test
not
in
dec
aam
cmp
outs
shr
mov
push
and
cs
cs
jle
cmp
inc
mov
outs
dec
adc
jmp
or
jns
mov
std
mov
push
mov
jae
push
adc
ss
inc
pusha
add
inc
mov
inc
or
add
mov
push
pop
mov
push
mov
push
test
and
adc
mov
push
aam
ins
mov
call
iret
fbld
arpl
push
int
lds
cwde
mov
xchg
push
ja
fistp
leave
scas
or
mov
mov
mov
test
out
sbb
and
pushf
inc
xchg
jnp
sub
out
out
push
dec
jmp
push
rcl
xchg
jno
(bad)
sub
jns
int3
mov
mov
dec
xchg
xor
dec
outs
ret
push
(bad)
adc
xchg
add
fsubr
stc
es
cld
ss
mov
jmp
jge
leave
mov
ror
mov
dec
jmp
inc
fadd
in
pusha
sbb
xchg
leave
retf
or
sar
cli
lahf
call
test
adc
call
mov
retf
mov
cmp
ror
scas
imul
add
sbb
not
les
cmp
cs
lea
iret
je
sbb
xchg
cmps
push
push
clc
popf
sub
bound
call
or
test
or
mov
jae
pop
and
setno
pushf
fdivp
lock
mov
and
sub
sbb
dec
and
adc
(bad)
push
shl
in
test
rcl
sub
push
xchg
pop
xlat
cmp
jmp
cmp
out
cmc
mov
mov
fdiv
and
arpl
push
ficomp
pop
cwde
pop
or
jo
push
std
push
ins
shl
jne
test
mov
out
loop
jmp
cmp
les
test
pop
add
mov
(bad)
bound
(bad)
fistp
or
and
pop
mov
mov
movs
mov
shl
in
sub
inc
dec
sub
adc
mov
or
ret
xchg
ins
push
add
mov
mov
out
imul
icebp
sub
lock
mov
pop
jg
xchg
jg
pushf
ins
loope
dec
(bad)
popa
add
sbb
cmps
cmp
dec
push
into
and
scas
jne
sub
dec
add
push
sbb
adc
scas
js
cwde
lds
ds
mov
ins
jno
das
pop
ds
xor
lods
add
std
rcr
and
cs
push
out
push
sub
lea
dec
ja
pop
ret
xchg
pop
xchg
mov
push
xor
jnp
out
sub
push
popf
inc
add
fild
setno
rcl
retf
enter
add
sub
xor
dec
jmp
inc
in
int3
les
cmp
xor
jge
lahf
das
out
sub
adc
out
lods
dec
mov
test
call
cmp
pop
or
sti
pushf
call
xor
xchg
int3
mov
push
pop
shr
or
add
inc
lds
ds
outs
mov
repz
or
xlat
cld
mov
retf
ja
es
sbb
repnz
cwde
in
aas
daa
xchg
xor
ret
mov
je
test
cmps
push
cmc
pop
inc
shl
dec
gs
pop
clc
es
jb
repnz
xchg
or
stc
jae
xchg
dec
lock
out
fnstenv
ret
pop
mov
adc
fidiv
cmc
inc
aaa
and
inc
add
(bad)
push
xchg
dec
(bad)
pop
in
dec
stc
daa
out
adc
push
sub
mov
shl
jns
imul
xchg
push
pop
outs
mov
mov
and
cwde
rcr
mov
sub
loop
daa
cmc
(bad)
inc
xchg
adc
lock
stos
(bad)
leave
data16
test
xchg
pop
xor
popa
xchg
sub
sbb
mov
jp
inc
or
call
push
sahf
icebp
or
inc
push
clc
and
imul
in
in
in
push
retf
cwde
mov
jl
jecxz
arpl
std
cmc
jg
ret
fcomp
scas
leave
stc
adc
jno
push
icebp
loop
push
add
ret
jecxz
jg
outs
dec
xor
rcl
or
call
aad
jo
retf
dec
sub
pop
jle
mov
lahf
xchg
push
ret
push
fcom
push
pop
xor
daa
aaa
adc
inc
pushf
ds
aad
pop
mov
dec
inc
std
data16
ins
xchg
mov
mov
or
sub
sub
mov
stos
cmp
pusha
cmc
push
sub
pop
mov
out
sar
loope
call
outs
cdq
push
arpl
adc
or
sbb
fadd
jo
shl
adc
pop
mov
add
fild
push
mov
loopne
cmp
pop
add
adc
bnd
sar
pop
inc
sbb
in
inc
jns
call
es
lea
rcl
cmp
retf
sub
(bad)
push
test
dec
mov
or
xchg
lods
stos
jno
dec
loopne
xchg
jae
mov
es
aam
mov
inc
clc
lods
(bad)
cmp
cmp
(bad)
sahf
adc
mov
je
or
add
push
inc
lahf
push
(bad)
cmp
lods
lahf
lods
jns
jns
retf
(bad)
push
out
xor
and
add
(bad)
(bad)
mov
lea
in
retf
les
sbb
retf
in
sub
jg
rcr
cmps
xchg
adc
mov
inc
sbb
pop
xor
ins
jmp
in
mov
shr
add
xor
sub
xlat
xor
dec
mov
imul
fwait
loop
pop
out
jns
mov
pop
push
inc
xchg
(bad)
pop
(bad)
call
push
sub
mov
sbb
jl
add
sti
or
stos
pop
outs
and
iret
test
sub
pop
test
sahf
sbb
bound
sub
outs
and
clc
cmc
movs
movq
xchg
mov
les
sar
push
and
jns
pushf
fadd
repz
xchg
add
out
rcr
sub
mov
pop
xchg
test
push
jbe
ret
or
xor
pop
mov
pop
dec
mov
mov
adc
movs
xlat
cmp
cmp
mov
pop
cwde
ds
push
and
adc
jge
xchg
in
pusha
or
ins
loope
xor
popf
xchg
sub
mov
stos
cmp
jecxz
adc
xor
or
or
pop
mov
fst
pushf
mov
subps
jbe
aas
es
ret
addr16
add
jno
add
adc
push
(bad)
sub
std
jmp
pop
sub
stos
icebp
loopne
dec
leave
int
movs
xchg
outs
jo
das
cdq
ss
cwde
jle
mov
rcl
sbb
adc
jo
stc
leave
push
sbb
inc
cmp
mov
daa
xchg
out
sbb
ja
or
fdiv
sub
sahf
js
or
fcmovnu
pop
test
cwde
and
push
mov
push
cmps
mov
jp
jo
test
mov
push
and
sti
push
xor
mov
xor
xchg
cwde
ins
loopne
sbb
xchg
pusha
arpl
lods
aaa
cmp
out
loop
rcr
stos
rol
sbb
jg
push
sahf
inc
popf
push
add
jns
push
sbb
js
mov
mov
inc
xor
mov
cdq
ds
not
pop
scas
call
or
popa
pop
movs
jmp
adc
pop
cli
into
dec
iret
ja
ja
adc
outs
movs
sbb
and
test
inc
jmp
lock
sub
rcl
or
xor
sbb
dec
ror
popf
shr
outs
das
mov
push
inc
(bad)
aad
call
out
xor
ror
dec
push
dec
pop
and
add
add
mov
push
leave
jb
cmp
(bad)
jle
clc
add
sahf
sahf
sub
jmp
pop
push
jnp
test
adc
pop
dec
js
xlat
leave
add
add
into
pop
rol
(bad)
(bad)
out
xchg
and
xor
fcmovnbe
popa
in
hlt
jne
inc
and
cmp
stos
xchg
nop
mov
xchg
movs
pusha
adc
sbb
dec
std
pushf
(bad)
(bad)
and
push
xor
xchg
das
pop
hlt
xchg
test
fwait
gs
cmp
jns
into
pop
cdq
jmp
and
add
mov
stc
lods
pop
or
adc
fsubrp
std
xchg
aaa
(bad)
fsubp
push
add
cmp
imul
adc
pop
adc
xor
je
dec
das
lods
xchg
leave
jecxz
sub
pop
push
je
push
test
popf
stos
mov
ja
jmp
clc
mov
sti
out
mov
xor
fistp
sbb
loopne
or
in
push
dec
mov
push
popa
pop
mov
mov
sub
sub
retf
or
data16
pop
pop
dec
out
sub
nop
out
mov
rcl
add
mov
dec
mov
cmovp
rol
fdiv
jg
stos
jb
xchg
push
push
mov
lds
jmp
dec
retf
cmp
ds
adc
push
cmp
movs
mov
retf
jge
xchg
xor
sub
xchg
in
pop
cmp
shl
inc
mov
retf
in
sub
or
int3
jecxz
mov
jno
jno
out
movs
sbb
in
mov
lods
shl
and
cli
lods
in
xlat
cmps
cmp
pop
jle
call
outs
xor
into
dec
xlat
mov
ror
outs
pop
pop
nop
mov
sar
aam
adc
bound
les
in
lods
aam
sbb
inc
dec
and
mov
jo
pop
in
pushf
dec
(bad)
daa
jne
cmp
lods
mov
jp
add
or
fstp
pop
(bad)
xchg
daa
xchg
lods
xsave
retf
(bad)
(bad)
and
sub
xor
xchg
jecxz
fnsave
icebp
sbb
cmp
jecxz
fist
dec
dec
into
lods
mov
jae
xchg
cwde
lods
add
mov
das
iret
add
jne
push
dec
mov
aad
or
mov
ins
mov
adc
int3
mov
cmc
cmp
ret
fcmovnu
in
scas
jno
cmp
adc
shr
xchg
adc
pop
test
rol
adc
and
retf
push
stc
mov
adc
ds
loopne
leave
in
add
div
rol
ret
call
mov
inc
out
adc
push
outs
mov
rol
xor
xor
cmp
push
outs
fimul
or
mov
cmp
mov
aas
fidivr
xchg
loop
fimul
shl
mov
in
jno
push
pop
add
push
add
xchg
cmovle
sub
sub
push
stos
movs
xlat
mov
sub
dec
jl
lds
push
dec
mov
dec
or
repnz
cmp
jae
or
xchg
lock
(bad)
aad
jecxz
add
cs
pop
xor
cwde
outs
or
lods
in
dec
jge
shl
rcr
adc
mov
xchg
or
and
(bad)
dec
pop
inc
fistp
aad
cmps
cmps
repnz
lods
out
mov
leave
ins
or
sahf
dec
inc
sbb
imul
fwait
test
loop
and
mov
xlat
clc
adc
addr16
(bad)
inc
cmc
mov
sbb
jns
cmp
das
movs
or
(bad)
push
js
movs
call
lea
push
rol
into
and
data16
cli
out
or
lahf
mov
shr
pusha
jo
outs
in
push
cmp
fsub
les
jb
sub
push
sbb
jge
leave
push
push
in
icebp
cld
test
aam
mov
retf
dec
test
bound
inc
fnsave
pop
fcom
inc
call
ret
psubw
jmp
pop
xor
lods
cwde
popf
cld
adc
or
adc
cmp
push
pop
adc
(bad)
adc
js
rol
or
push
pop
ss
inc
xor
or
jbe
lods
xlat
mov
add
jp
scas
xor
sub
mov
inc
stos
mov
(bad)
bt
(bad)
sbb
jmp
xchg
test
lods
fidiv
cmp
pop
or
cdq
mov
sub
inc
ja
mul
or
ret
(bad)
lods
mov
out
sbb
mov
sbb
enter
pop
shr
mov
push
sbb
or
inc
js
or
arpl
js
push
pop
jbe
dec
dec
and
scas
push
sti
icebp
sub
imul
adc
scas
rol
movs
pusha
cmps
mov
test
les
cwde
pop
mov
(bad)
aad
push
xchg
mov
mov
jo
inc
aad
xor
sbb
ins
push
jno
push
adc
or
push
mov
outs
or
pop
shl
mov
push
sbb
sub
mov
nop
fisub
and
test
inc
int3
and
test
cmp
pop
leave
call
ret
jo
sbb
dec
sub
mov
dec
xchg
fwait
pop
inc
push
dec
repz
fisttp
cmp
adc
pop
mov
cmps
pop
inc
lods
inc
xchg
mov
gs
push
sub
mov
fwait
sub
add
push
imul
push
inc
fwait
adc
stc
adc
sub
dec
xor
adc
xchg
jnp
(bad)
dec
icebp
adc
out
mov
(bad)
sar
loopne
add
movs
lock
iret
adc
adc
xor
shl
rol
pop
cmps
addr16
imul
dec
cmp
jmp
add
lock
mov
pop
out
or
jp
mov
mov
jae
out
fsubr
dec
and
mov
dec
iret
mov
pop
stc
jecxz
pusha
add
or
mov
addr16
fxch
push
or
data16
std
addr16
xchg
dec
clc
adc
inc
ds
jns
pushf
sbb
cmp
xor
mov
sbb
dec
jnp
cmp
pop
jmp
fcom
cli
stos
aas
and
inc
mov
lds
pop
xchg
cmp
stc
mov
pop
add
lahf
jp
cdq
(bad)
sti
in
loopne
mov
(bad)
retf
pusha
lahf
jbe
ffree
jmp
fisub
push
sti
jge
daa
inc
retf
push
cs
jne
push
ret
add
sub
imul
iret
lods
sbb
ins
xchg
shr
push
adc
inc
dec
hlt
imul
jbe
mov
push
lods
aaa
int3
cmp
cli
dec
add
mov
mov
dec
dec
cmps
inc
sbb
dec
jmp
dec
js
pop
ror
xor
push
add
std
imul
cmps
mov
jmp
xor
test
mov
sti
test
dec
mov
sbb
jmp
fldenv
jl
mov
les
cmp
jecxz
arpl
sbb
xchg
push
mov
mov
mov
jae
fsub
mov
imul
or
out
maskmovq
test
pop
xchg
adc
repz
inc
hlt
loope
add
push
gs
(bad)
call
hlt
sub
scas
add
daa
test
and
rcl
push
stos
add
mov
mov
retf
out
jmp
stos
push
mov
mov
pop
lock
xor
push
pushf
mov
stc
repz
test
out
imul
push
push
inc
clc
stos
push
rol
xchg
enter
dec
pushf
pop
je
xchg
pop
ins
pop
retf
pop
ror
stos
or
sub
adc
int3
sub
sbb
lock
jl
and
outs
das
mov
jecxz
push
xor
sti
std
sbb
pop
mov
cmp
pushf
ret
cmp
inc
mov
xchg
in
add
fiadd
fistp
pop
inc
ss
pop
pop
lea
adc
jecxz
pop
jno
or
adc
cmp
pop
out
(bad)
les
adc
es
inc
mov
call
repz
dec
and
and
inc
dec
(bad)
stos
test
mov
mov
shl
sti
mov
jecxz
mov
ret
push
ror
clc
sub
stos
mov
jg
jecxz
cmp
adc
leave
int
mov
ds
mov
rcl
mov
fdivr
aaa
or
mov
sub
add
cmp
dec
arpl
arpl
in
ja
in
enter
or
pusha
dec
jo
jg
mov
into
fdiv
js
out
aaa
adc
pusha
mov
test
les
xor
pop
repz
fld
mov
arpl
outs
lods
or
hlt
in
push
xchg
and
rol
inc
xor
loop
fimul
movs
cmp
enter
popf
mov
shl
cmp
sub
std
inc
mov
sahf
test
in
xor
add
test
or
and
add
add
and
jbe
xchg
inc
inc
out
sbb
rol
xor
fs
(bad)
pop
std
xchg
nop
out
pop
cli
push
cdq
or
aaa
jb
rol
imul
jmp
pop
(bad)
pop
dec
lds
ds
ret
fucomip
sub
and
lock
dec
arpl
xor
int
js
dec
pop
lds
je
bound
lea
mov
add
imul
pop
push
or
sub
xor
ds
adc
sar
or
cmc
jge
xor
test
(bad)
js
nop
or
lds
not
shl
fistp
xor
(bad)
test
push
sub
test
and
call
or
jmp
dec
(bad)
ss
cld
popf
icebp
test
or
mov
mov
mul
lea
jge
inc
sbb
ds
das
cli
mov
adc
adc
cmc
les
aaa
adc
mov
mov
pop
in
cmp
fild
shl
outs
push
jb
pusha
call
xchg
or
mov
cli
jbe
adc
pushf
and
repnz
xchg
or
sub
ret
add
sbb
cwde
popf
adc
std
icebp
sbb
sub
sbb
out
ins
int
dec
rcr
sub
mov
jae
adc
sbb
cmc
cmp
and
or
sar
or
test
shr
sub
mov
mov
pop
and
fcompp
mov
pop
mov
loopne
mov
(bad)
das
jmp
mov
mov
mov
xchg
xor
inc
push
or
(bad)
mov
movs
xor
adc
cmp
sti
mov
ret
fstp
dec
mov
xchg
movs
and
cwde
arpl
call
cmps
mov
or
push
dec
fwait
mov
addr16
sbb
addr16
xchg
mov
push
sbb
or
out
(bad)
int3
and
cbw
mov
les
scas
int3
test
daa
ins
fsub
stc
adc
adc
or
out
aad
mov
pop
sti
gs
dec
inc
retf
retf
test
fwait
iret
inc
in
mov
pop
(bad)
(bad)
or
mov
or
(bad)
fimul
pop
scas
mov
add
pusha
in
cmc
pop
inc
add
inc
cli
jp
arpl
or
(bad)
pop
sub
add
(bad)
ss
add
scas
sbb
enter
add
loope
scas
dec
mov
cmp
jae
push
mov
test
aas
xchg
xchg
adc
in
fisubr
inc
aaa
push
pop
push
or
fdiv
cmc
sbb
iret
not
and
pop
aaa
call
cmp
inc
outs
mov
inc
sub
sbb
jg
xor
cmps
adc
stc
rcl
jmp
test
(bad)
push
sub
sbb
jl
fcom
aaa
and
(bad)
loop
(bad)
xor
and
jmp
adc
stc
or
daa
shl
call
test
sbb
fucomp
je
imul
inc
mov
mov
jno
aas
pop
cwde
js
sub
or
pop
push
jae
jle
xlat
aas
cmp
mov
pop
jmp
sti
loope
cmp
inc
pop
clc
out
add
ins
sbb
gs
int
pop
xchg
fisub
mov
les
dec
mov
repz
xchg
pop
dec
xchg
data16
arpl
cmps
sahf
ins
retf
js
push
mov
push
popf
pop
pop
mov
sar
xchg
scas
mov
in
aam
sbb
mov
add
dec
push
es
sub
fld
shr
xchg
xchg
mov
xchg
rcl
repnz
mov
push
in
jns
in
pop
cli
sub
test
dec
shr
or
mov
mov
sub
and
ins
push
pop
pop
ret
inc
add
xchg
stos
xor
dec
pop
xchg
ins
mul
push
xor
mov
or
daa
mov
retf
dec
sbb
pushf
std
aaa
mov
push
cld
cmps
in
in
or
push
mov
or
mov
push
lahf
pop
mov
xchg
or
dec
xor
mov
dec
sub
push
push
dec
(bad)
mov
push
or
and
fimul
test
jle
pop
xchg
jg
test
fsub
pop
(bad)
push
scas
in
add
call
jmp
cmp
cmps
and
jg
pop
(bad)
jl
ret
cmps
popf
push
jbe
jl
dec
sub
jmp
(bad)
sub
pusha
test
test
(bad)
pop
daa
(bad)
call
sar
jb
retf
int
sbb
mov
test
inc
add
cmp
adc
dec
nop
out
scas
pusha
inc
pop
push
fcmovnu
sar
sub
into
les
jge
sbb
and
out
fstp
or
cmp
sub
pop
push
and
push
xor
and
fld
loop
xchg
cmc
enter
cld
dec
(bad)
dec
jns
inc
sub
cdq
jb
xchg
pop
and
pop
fcomp
aam
dec
jb
outs
out
cs
sub
sub
adc
nop
cmp
or
out
iret
bound
xlat
xchg
mov
fsub
push
or
or
repnz
cmp
cmp
ins
aaa
mov
inc
cmp
cmp
outs
test
dec
cli
mov
mov
inc
and
call
std
daa
dec
pop
je
xchg
mov
sbb
scas
or
pop
shl
adc
jecxz
dec
mov
mov
mov
std
jmp
xchg
in
mov
push
nop
bound
push
adc
cmps
int
cmp
sub
retf
cmp
jb
dec
sub
mov
xchg
sub
xchg
in
inc
out
imul
cdq
jo
(bad)
and
arpl
js
cmp
les
fdivr
fst
test
shr
pop
mov
sbb
jmp
xchg
xchg
rcl
lea
adc
pop
mov
aad
(bad)
ror
xchg
enter
cdq
push
jnp
mov
mov
pop
push
sbb
sbb
mov
xor
mov
xchg
mov
hlt
mov
dec
mov
stc
add
inc
arpl
mov
pop
mov
xchg
out
stos
push
fwait
imul
pop
hlt
sbb
dec
cmp
xchg
jg
and
test
call
xchg
std
aad
outs
cmp
popa
sbb
test
or
outs
test
mov
enter
xor
stc
subps
pop
bound
in
jp
jg
mov
(bad)
cwde
(bad)
dec
cld
jl
popa
inc
rdmsr
mov
jmp
jno
fimul
add
(bad)
and
shl
lea
retf
jmp
pop
xor
add
push
push
xlat
pop
adc
jbe
repnz
in
pushf
iret
ss
test
sub
jmp
cmp
sub
fcmovnbe
(bad)
jp
cli
pminub
xor
(bad)
out
pop
dec
and
repnz
movs
stos
adc
mov
dec
mov
pushf
sbb
jns
mov
pusha
sbb
dec
pop
sub
adc
(bad)
hlt
cld
in
jmp
sub
sub
mov
mov
or
jns
xor
pop
out
and
mov
lods
ss
and
mov
adc
pop
add
adc
mov
push
adc
fwait
rol
mov
or
cmc
lock
data16
out
jp
add
push
and
dec
push
mov
outs
rol
xchg
sub
icebp
push
gs
cdq
xchg
(bad)
shl
sti
mov
mov
mov
push
cmp
arpl
ds
fnstsw
mov
aad
cmp
in
cmp
inc
inc
(bad)
lock
mov
addr16
outs
lahf
push
(bad)
or
cmp
and
fisttp
stos
cs
mov
xor
shl
(bad)
inc
js
cdq
fidivr
addr16
dec
xor
adc
mov
mov
cmps
out
mov
xor
cmp
push
pop
xor
ja
popf
and
mul
fiadd
sbb
ss
mov
cmp
les
movs
xchg
cmp
jno
add
or
mov
fucomi
aaa
sti
enter
retf
dec
fs
je
mov
fild
nop
or
int3
dec
loop
movs
jnp
sbb
inc
loopne
or
dec
sub
mov
imul
mov
sub
lahf
adc
fistp
push
cmp
pop
lds
jge
mov
(bad)
iret
inc
das
es
or
movs
out
or
iret
push
cld
add
shl
push
dec
cmp
push
pop
lahf
in
cs
inc
pop
mov
dec
dec
xchg
pop
in
in
and
cwde
cdq
sub
inc
mov
outs
cli
cwde
or
lods
mov
jb
or
dec
cmp
cmps
push
mov
fsubr
xchg
ds
mov
shr
out
sbb
push
mov
add
xor
in
pop
movs
and
bound
lea
mov
jge
jg
sbb
pop
scas
dec
int
fs
fmul
xor
movs
mov
(bad)
movs
pop
push
xchg
cdq
jne
int
sbb
pop
test
mov
jl
mov
pushf
les
mov
ss
xchg
xor
jmp
ins
imul
gs
rcr
pusha
popa
add
popa
jl
repz
xor
jns
mov
jbe
retf
inc
mov
sub
int3
scas
cmps
push
jg
mov
jmp
inc
add
dec
test
mov
arpl
sub
jmp
aam
jecxz
test
jge
jne
ds
in
test
or
xchg
adc
xchg
imul
cmp
mov
xor
sub
dec
jmp
stos
adc
lock
bound
(bad)
mov
inc
push
call
add
ret
test
nop
and
cld
inc
inc
gs
aad
inc
out
mov
sbb
push
mov
pop
push
inc
dec
retf
jl
(bad)
in
sub
loop
inc
popf
retw
jp
ins
mov
and
push
arpl
pushf
lods
int
jne
or
outs
mov
dec
sbb
enter
dec
adc
ds
add
jmp
pop
fmul
cmps
mov
pop
in
mov
mov
push
leave
adc
cwde
mov
sub
xor
mov
div
cmp
pop
ins
mov
dec
mov
in
shl
call
mov
cmp
xor
jmp
push
lods
js
lods
mov
mov
push
bound
add
push
rcl
dec
nop
cmp
stos
out
add
dec
outs
dec
pop
or
dec
adc
push
(bad)
pop
mov
push
ja
cmps
add
fistp
nop
add
mov
pop
pop
fild
mov
ffreep
or
and
sub
in
pop
mov
xchg
pop
mov
adc
shr
cdq
push
das
jno
xor
cmp
shl
je
cwde
mov
mov
cmp
xor
sub
mov
xchg
neg
adc
fisub
ins
call
movs
xchg
push
fbstp
mov
ret
pop
int
cmp
aam
test
mov
pop
test
and
bound
jns
add
xor
sub
cmps
mov
mov
shl
pop
mov
mov
scas
adc
jae
idiv
adc
lds
xchg
push
mov
push
leave
call
mov
movs
cli
fist
push
scas
into
shr
or
push
pop
popa
push
lds
in
les
jge
movs
ss
imul
pop
jnp
dec
inc
jns
push
es
out
add
stos
call
les
adc
fndisi(8087
pusha
mov
mov
cmp
mov
mov
or
cli
(bad)
mov
xlat
mov
arpl
mov
cmc
stos
sbb
aam
inc
jg
shr
push
cmc
xor
in
or
push
lea
sbb
cmp
xchg
jmp
in
sbb
pop
pop
xlat
adc
sub
stos
ficomp
mov
xor
jge
data16
jo
iret
lds
int3
push
ja
push
out
jmp
cs
cmp
adc
in
popa
mov
(bad)
or
outs
(bad)
leave
leave
icebp
std
xor
leave
imul
es
push
inc
ret
dec
sub
inc
jne
daa
out
sbb
mov
xor
and
test
mov
push
push
push
or
mov
loopne
imul
xor
sub
pop
mov
or
adc
mov
dec
test
test
ins
push
les
int
test
wbinvd
sti
(bad)
ins
test
aad
in
sahf
test
dec
xchg
int3
mov
(bad)
push
repnz
adc
jae
daa
dec
ins
pop
xchg
cmp
mov
inc
cmp
xchg
sahf
mov
les
in
sub
enter
or
push
popa
xor
ja
fldenv
xchg
mov
dec
push
ret
cmp
add
cld
not
pushf
mov
xchg
fiadd
mov
sahf
dec
test
jmp
and
daa
jecxz
ror
sub
lock
jno
cmc
call
sbb
push
ror
out
lahf
pop
pop
or
pushf
dec
push
dec
sub
xchg
ins
icebp
xchg
mov
daa
mov
adc
add
sahf
jae
mov
popf
out
addr16
icebp
adc
push
sbb
pop
and
test
add
lods
popf
sbb
jne
jge
test
mov
sub
jmp
mov
js
mov
xchg
xor
hlt
or
and
jbe
cmp
cmp
and
stos
lods
adc
or
xor
stc
test
sub
mov
fs
fidiv
mov
jno
and
adc
sub
pop
sub
sub
sbb
push
idiv
arpl
hlt
inc
sbb
inc
rcr
pop
aam
sub
xchg
push
inc
adc
mov
cld
popa
mov
xchg
aas
nop
mov
push
ins
inc
imul
adc
add
mov
mov
nop
pusha
and
inc
js
cmp
outs
push
fistp
pop
jno
xchg
xchg
in
add
add
bound
or
or
call
inc
enter
dec
mov
(bad)
out
or
mov
jae
adc
push
or
fisttp
ret
int3
sub
jbe
imul
retf
push
mov
shl
pop
fiadd
in
lods
jmp
(bad)
data16
pop
stos
sbb
sub
mov
lods
push
dec
push
(bad)
mov
rcr
adc
xchg
lea
dec
dec
pop
shl
cdq
les
push
sqrtps
mov
arpl
cmp
ja
ror
popa
rcl
pop
jl
arpl
dec
xor
addr16
jg
repnz
jge
or
(bad)
popf
leave
jae
xlat
cmc
cmp
test
inc
stos
cmp
stos
fwait
jl
(bad)
int
movs
dec
pop
cs
nop
sbb
pop
adc
in
dec
repnz
inc
push
test
sbb
les
xchg
add
jmp
out
push
add
mov
jl
adc
fsubr
mov
pop
retf
pushf
mov
jp
pop
mov
cs
xor
ds
shr
aas
pop
inc
mov
sub
ins
ret
adc
out
loope
mov
call
xchg
(bad)
leave
enter
movs
(bad)
clc
inc
cs
lock
and
or
bound
adc
pusha
inc
add
jp
aaa
cli
pop
enter
nop
mov
adc
mov
out
sahf
retf
mov
dec
add
lods
rol
shr
push
or
sbb
(bad)
repz
in
enter
inc
cs
test
fld
(bad)
cld
mov
lahf
cmp
xchg
sbb
data16
inc
push
sub
frstor
ret
jo
xor
inc
dec
sub
mov
mov
jmp
mov
or
dec
fstp
iret
jl
mov
addr16
or
addr16
dec
xor
jmp
ret
push
fld
rcl
lds
(bad)
pop
movs
mov
mov
xor
jmp
jno
push
icebp
sbb
stc
cmp
je
movs
mov
out
pushf
xlat
sbb
jmp
mov
inc
pop
loopne
je
add
retf
cdq
int3
add
lods
inc
fs
test
mov
and
mov
(bad)
shl
sbb
jmp
mov
fmul
adc
mov
lock
cmp
mov
mov
push
sub
hlt
lods
jb
(bad)
hlt
stos
mov
mov
inc
mov
into
push
mov
and
cwde
rcl
fdiv
(bad)
into
xor
int3
imul
xchg
pop
aam
sbb
mov
mov
aad
aam
add
add
ret
xchg
neg
jmp
xchg
cdq
test
jmp
pop
shr
sti
push
cmps
sub
mov
mov
test
pop
mov
sub
xchg
ret
js
imul
push
cmp
xchg
mov
mov
cmc
pushf
shl
pop
xchg
adc
and
and
pop
push
push
cld
cmp
jbe
stos
push
sub
xchg
lds
repz
pop
in
pusha
xchg
mov
daa
fiadd
clc
pop
mov
sti
xchg
and
add
cmc
dec
shl
js
adc
add
jb
add
dec
push
gs
push
cmp
xchg
lods
fwait
dec
or
retf
xlat
les
retf
xchg
loopne
push
punpcklwd
push
cmp
add
xchg
dec
xor
pop
cmp
mov
mov
ds
mov
outs
das
aam
mov
push
xor
and
lods
inc
and
push
(bad)
jp
xchg
mov
add
add
mov
movs
(bad)
scas
jp
cmp
sbb
sar
sbb
adc
std
cmp
push
jle
les
(bad)
jmp
dec
cmp
lea
dec
push
loopne
adc
dec
pop
aas
(bad)
enter
movs
pop
and
test
jg
cmp
jmp
call
mov
call
push
out
jo
fist
or
mov
jmp
mov
or
jp
mov
push
stos
repz
cmp
call
fldcw
aad
push
adc
sti
mov
cmps
xor
push
mov
add
in
mov
jp
mov
in
stc
int3
or
or
lea
test
data16
stc
cmps
mov
mov
lds
push
lock
stc
test
xchg
xchg
add
arpl
xchg
jmp
sub
(bad)
cli
adc
mov
shl
repz
xchg
xor
mov
cdq
aas
aaa
jl
aad
push
pop
sbb
ins
out
gs
jg
mov
cmp
adc
hlt
adc
(bad)
jne
jnp
push
(bad)
in
hlt
mov
aam
jo
mov
and
cdq
lods
outs
adc
push
enter
mov
jns
das
sbb
pop
movs
pop
aas
int
jmp
dec
int3
jne
jnp
test
add
shl
jecxz
mov
mov
(bad)
mov
je
and
pop
(bad)
test
arpl
dec
push
imul
push
imul
xchg
push
push
cmps
repnz
fnstenv
shl
pop
jmp
je
lock
add
test
call
xchg
adc
ja
jl
cld
mov
sbb
sbb
fwait
push
dec
or
mov
cs
inc
push
cmps
cwde
mov
movs
push
lahf
es
scas
lods
std
fwait
scas
int
aaa
or
adc
or
cmp
pushf
rol
in
ret
pop
into
loop
cmp
aad
addr16
add
lock
push
pop
test
ret
xchg
cmp
mov
mov
pop
push
or
shl
xor
data16
loopne
mov
cmps
mov
mov
out
dec
fimul
xchg
and
pop
aam
cmp
xor
pushf
pushf
fistp
test
cwde
inc
js
mov
sbb
jb
int3
cmps
mov
xor
shl
ja
iret
xchg
pushf
dec
dec
adc
add
jb
add
xor
and
outs
popf
gs
cmp
push
adc
in
ss
and
jp
xlat
mov
mov
sbb
or
pop
retf
aaa
sub
sub
dec
cmp
mov
dec
ins
enter
addr16
push
and
and
mov
bound
in
push
adc
sbb
repz
retf
dec
pop
jmp
imul
sbb
mov
adc
mov
outs
lea
jb
mov
icebp
movs
push
or
jge
ja
sub
comiss
lods
cmp
dec
jno
enter
push
xchg
jmp
icebp
push
shl
inc
(bad)
or
in
(bad)
pop
mov
mov
lods
sub
adc
pop
xor
or
retf
push
xchg
xchg
mov
pop
mov
add
test
and
or
ins
mov
mov
push
ins
mov
clc
mov
adc
pop
sub
loope
and
(bad)
mov
or
shl
aaa
repnz
cmp
in
scas
int
loop
and
sub
imul
cmp
out
cli
lods
outs
sbb
cmps
mov
gs
mov
lods
lock
add
fld
ja
xchg
mov
ret
into
in
jo
push
ss
pop
dec
lahf
fwait
ret
ret
outs
rcr
rcr
addr16
shr
jo
add
mov
mov
push
arpl
vmwrite
mov
outs
jl
fs
inc
pop
pop
ins
sbb
sub
or
hlt
xadd
pop
ret
enter
dec
and
test
cmp
popa
mov
and
pop
mov
loop
inc
inc
rol
ficomp
es
mov
adc
push
stos
(bad)
mov
ss
inc
dec
stc
nop
(bad)
sbb
js
dec
enter
xchg
mov
sbb
sub
stos
jb
add
movs
adc
push
adc
mov
test
xchg
jb
clc
fs
test
xlat
push
(bad)
test
into
push
shl
pop
jae
in
adc
(bad)
lock
jns
out
mov
xor
and
mov
lea
add
les
shl
(bad)
cld
xchg
adc
adc
repnz
mov
push
and
or
shl
lods
xchg
cmc
dec
(bad)
sub
loope
pop
push
jnp
xchg
int
loopne
(bad)
cmp
movs
pushf
test
sar
fistp
mov
sub
test
mov
pop
test
ss
push
fsub
jg
test
and
push
nop
lods
movs
sbb
clc
retf
ss
xchg
or
aam
shl
adc
cld
popf
jge
stos
rol
fnstenv
jbe
mov
outs
push
jle
add
pop
push
(bad)
scas
jbe
lock
cmp
rol
pop
inc
mov
scas
jb
lock
in
dec
and
dec
data16
ins
push
in
push
mov
test
and
jp
add
sub
jne
call
out
nop
xchg
fwait
mov
ds
and
and
add
hlt
cwde
in
into
ficom
retf
xor
mov
lock
jnp
push
push
imul
gs
pop
aad
adc
add
outs
rcr
jl
cs
jmp
ror
add
pop
push
sub
push
(bad)
call
sbb
nop
inc
push
in
dec
repnz
jmp
idiv
sub
push
outs
ret
cs
lea
mov
cmps
mov
add
cmp
repnz
leave
pop
arpl
popf
loop
aaa
fucomp
mov
adc
(bad)
pop
(bad)
ss
mov
add
pop
inc
push
sub
xchg
inc
cdq
push
rol
mov
dec
mov
cmps
pop
dec
test
repnz
imul
inc
bound
push
scas
mov
sub
fwait
(bad)
and
add
jmp
dec
add
addr16
arpl
fsub
add
popf
dec
push
lock
sub
scas
rcl
outs
cld
int3
and
test
push
cmp
clc
repnz
das
fwait
stos
rol
mov
push
add
xor
or
(bad)
out
push
ds
cmps
fwait
push
leave
dec
mov
xchg
jb
cs
adc
mov
push
jb
and
push
loopne
cld
push
xor
jp
inc
xor
enter
icebp
jecxz
ror
xchg
fiadd
(bad)
ds
add
mov
xor
mov
shl
or
les
out
mov
or
inc
iret
dec
jg
fs
dec
xor
fcmovnb
cmp
pop
dec
sub
aam
neg
xor
movs
dec
enter
sar
(bad)
xlat
(bad)
aas
dec
jo
dec
mov
push
push
add
in
add
in
mov
(bad)
cmps
and
and
fcomp
enter
inc
pop
or
dec
xor
addr16
out
fs
daa
fdivr
pop
aad
mov
push
call
stos
cmps
sbb
popf
std
mov
mov
sbb
out
xchg
adc
inc
mov
inc
outs
mov
or
jl
in
imul
les
mov
test
cmp
ds
inc
mov
lahf
sti
fprem1
lea
xchg
mov
mov
jnp
cmp
sub
jge
rcl
out
bound
popf
iret
sbb
inc
push
icebp
int
shl
stos
imul
jp
pushf
xchg
(bad)
push
aas
inc
mov
adc
mov
stos
xchg
dec
dec
add
dec
mov
or
mov
or
mov
xor
adc
stos
adc
mov
dec
repnz
stos
rcr
add
adc
loop
sbb
mov
xlat
and
stc
nop
cmp
mov
(bad)
dec
pop
movs
add
outs
loop
hlt
loope
jae
adc
test
adc
cmc
cld
sbb
mov
int3
pop
mov
dec
and
rol
cmps
sub
(bad)
add
dec
pop
adc
and
daa
add
xor
or
mov
sbb
std
dec
pusha
enter
in
cmps
jp
xor
mov
pusha
out
xor
dec
push
adc
pusha
adc
dec
cli
rcr
(bad)
retf
push
les
out
imul
aam
mov
shr
jp
pop
cmp
mov
shr
hlt
inc
xchg
push
adc
or
push
sbb
xchg
mov
cs
cdq
mov
fs
jge
ret
int3
xor
sti
mov
retf
shr
push
stos
xchg
mov
cmps
rol
inc
into
and
adc
push
push
xor
mov
mov
popa
lahf
(bad)
sbb
pop
push
mov
add
add
lock
call
lods
nop
dec
std
jg
repz
and
mov
test
add
mov
stos
les
mov
es
stc
jp
sbb
repz
ja
xchg
dec
mov
mov
mov
mov
pop
push
cli
jno
inc
mov
ins
imul
jns
je
movs
and
pop
mov
push
pop
frstor
loope
fwait
not
jmp
ins
es
fwait
xor
jae
je
jnp
jae
leave
mov
stos
and
sbb
cs
fisttp
js
xor
sub
cmps
(bad)
movs
sahf
add
addr16
pop
cmp
loope
outs
(bad)
movs
fstp
loopne
cmp
push
stos
inc
inc
call
data16
xchg
mov
aam
imul
inc
pop
in
frstor
mov
jno
dec
out
popf
push
outs
jo
sahf
pop
les
inc
div
into
sar
mov
fldcw
mov
and
lods
pop
call
aaa
xchg
fs
pop
mov
(bad)
(bad)
pushf
add
sahf
push
or
and
lahf
sbb
ret
push
mov
mov
mov
inc
fsubr
xor
movs
(bad)
mov
pop
add
mov
(bad)
fwait
mov
ins
or
outs
das
push
jg
(bad)
rol
push
mov
cmp
pop
aad
cmp
lahf
mov
test
sbb
fild
push
sub
bound
stos
movs
mov
cdq
sub
push
mov
cmps
push
jne
xor
xchg
mov
dec
pop
jae
push
adc
and
cmp
mov
repnz
sbb
gs
sub
ss
push
sbb
mov
sub
loopne
jae
sbb
clc
fcmovne
(bad)
(bad)
mov
jbe
adc
scas
repnz
sti
jecxz
addr16
adc
xor
push
inc
inc
lods
cmps
in
fcmovb
daa
mov
shl
sub
cdq
fs
push
adc
mov
cs
movs
sub
test
inc
jecxz
out
int3
sub
movs
outs
loope
sub
inc
(bad)
repz
cmp
mov
out
shl
mov
aaa
scas
stos
fucomi
xchg
popf
movs
test
xchg
jno
mov
or
repz
cmps
add
test
fwait
mov
mov
ror
lock
jno
mov
jge
inc
dec
push
sub
xchg
shr
mov
sub
jns
(bad)
cmc
dec
xor
xchg
repnz
or
mov
inc
dec
add
pop
mov
pusha
cmp
icebp
and
addr16
adc
lds
inc
pop
add
lds
push
pushaw
push
xchg
ja
adc
stos
pop
xchg
imul
mov
cdq
sahf
push
sbb
call
enter
adc
jl
xlat
jnp
lods
adc
adc
(bad)
mov
or
jbe
mov
pop
add
fwait
mov
xchg
stc
add
inc
add
sub
xor
or
int3
iret
lahf
add
scas
ret
mov
jge
je
popa
xchg
pop
xchg
fstp
popa
or
push
lea
lods
push
out
es
jmp
adc
ficomp
mov
inc
cmp
dec
or
test
pop
sub
jns
call
or
mov
retf
ret
jg
inc
pop
pop
dec
dec
push
fisttp
pop
pop
xchg
cmps
mov
push
inc
mov
sbb
fsub
in
xlat
fadd
ds
sar
cmp
pop
into
pop
cdq
ret
cmp
sub
fstp
push
or
xchg
setne
ins
loop
outs
push
in
pop
hlt
xor
or
xchg
ds
jle
push
call
jae
xchg
enter
int3
sub
push
sub
xlat
mov
mov
push
xchg
pop
xor
xor
out
je
sbb
mov
cmps
popa
stos
aaa
add
mov
div
sbb
inc
fldcw
dec
js
pop
cmp
das
or
scas
xchg
lds
jp
xchg
cmp
inc
arpl
pop
nop
cmc
or
xor
mov
sub
xchg
push
mov
adc
push
sub
push
(bad)
(bad)
adc
cmps
test
or
sbb
stos
ja
ret
sub
or
(bad)
ins
lods
aam
xchg
sbb
adc
retf
jns
cmp
sahf
movs
xchg
pop
push
sbb
imul
cmovne
fwait
mov
sub
sahf
push
lods
push
scas
in
xchg
sub
cmp
test
es
std
call
out
mov
clc
sub
xchg
adc
cmp
(bad)
sbb
mov
fwait
xor
dec
or
mov
pop
fisub
in
imul
add
jmp
or
and
inc
leave
xor
cmp
sub
test
xor
xor
push
ret
sar
arpl
dec
jmp
movs
ds
mov
sub
add
ret
lods
xchg
add
and
test
push
test
xor
mov
ret
dec
pusha
dec
loop
jle
push
add
xor
mov
add
call
cmp
repz
add
pop
xor
and
loop
lds
addr16
push
test
aam
mov
ret
ret
popa
mov
adc
cli
pop
push
sbb
jns
xchg
sahf
inc
push
or
jnp
popa
fild
mov
stc
dec
movs
test
add
dec
or
push
jbe
sub
and
mov
sbb
inc
add
lds
jns
cwde
call
mov
aam
add
mov
das
lahf
inc
cmp
or
mov
pop
test
xchg
ds
popa
cmps
test
inc
pop
add
sub
and
div
in
popa
xlat
mov
loop
aas
inc
pop
shr
push
pop
sahf
adc
repz
dec
push
sub
xchg
aam
and
retf
jle
dec
(bad)
test
xchg
scas
sbb
(bad)
out
mov
xchg
inc
int3
clc
pop
out
movs
xor
sub
mov
icebp
(bad)
loop
inc
(bad)
gs
mov
int
aam
ja
test
pop
and
push
sbb
and
and
adc
in
pushf
lods
cdq
sub
(bad)
push
jecxz
sti
xor
cmc
dec
repz
add
or
shl
rcl
inc
jae
cmp
mov
pop
int
daa
repnz
inc
in
sbb
lods
mov
adc
dec
inc
dec
xor
cdq
add
scas
jle
shl
xlat
mov
mov
(bad)
repnz
in
xor
movs
rcl
retf
(bad)
repz
ins
fcom
mov
push
dec
mov
test
push
rol
adc
fist
push
adc
scas
jecxz
daa
iret
mov
repz
jecxz
and
sbb
and
push
out
jle
(bad)
dec
sub
jmp
push
add
dec
(bad)
mov
outs
jmp
stos
shl
stos
xchg
jbe
sub
xor
pop
shl
xchg
cmps
mov
cmp
push
mov
fwait
imul
das
cmp
adc
mov
adc
and
adc
lock
pop
dec
and
in
fcomp
add
loopne
fnstcw
in
fiadd
(bad)
jo
test
or
ss
inc
cli
pop
mov
fst
(bad)
out
mov
ins
push
dec
scas
lods
idiv
inc
aad
xchg
ds
or
loopne
jle
sbb
rol
cwde
xchg
or
sbb
mov
jnp
cmp
sbb
cmp
add
mov
icebp
mov
mov
data16
repnz
pop
cmp
mov
add
or
out
imul
mov
push
or
jp
mov
ins
jno
sahf
pushf
sbb
daa
pop
cmp
adc
shl
stc
mov
dec
out
repz
push
sbb
dec
push
(bad)
mov
into
xor
dec
mov
neg
push
cmps
std
jecxz
push
inc
aas
jge
push
js
jl
mov
jmp
loopne
sbb
ins
rol
arpl
add
add
std
add
adc
(bad)
mov
out
jl
or
(bad)
jge
push
push
in
xchg
mov
retf
xor
xor
stos
sbb
loop
call
pop
ror
pusha
aaa
mov
popf
xor
inc
stos
(bad)
sbb
scas
out
lods
push
and
rol
aaa
add
sub
mov
(bad)
jmp
mov
mov
push
jnp
shl
std
push
jmp
adc
add
inc
ds
xor
fmul
(bad)
xchg
jne
fs
nop
arpl
adc
adc
pop
xchg
jle
jge
fsubr
inc
adc
sbb
mov
aas
test
dec
repz
jno
push
mov
push
xchg
mov
(bad)
jnp
push
call
and
push
pop
mov
and
pushf
mov
out
and
(bad)
lods
iret
cmc
clc
add
dec
test
test
sbb
ror
mov
mov
imul
mov
in
xchg
adc
cmp
fsubr
jmp
shl
jge
movs
(bad)
mov
dec
xor
mov
or
inc
outs
xchg
cmps
dec
xchg
jo
pushaw
out
test
cmp
jecxz
xor
adc
add
push
into
mov
mov
xchg
push
fisttp
pop
ins
add
and
xor
pop
sbb
pop
xor
and
lock
add
daa
or
xchg
mov
xchg
xor
xor
add
and
fst
jp
imul
ret
mov
mov
ret
cmp
mul
das
or
ror
mov
loopne
out
inc
pop
jecxz
push
inc
mov
xchg
pop
fstp
mov
sub
int
pop
dec
jecxz
sbb
xchg
sub
loopne
push
xchg
jae
out
sbb
out
cs
jb
shl
jns
call
mov
or
and
adc
das
arpl
movs
xor
or
pop
test
mov
xchg
addr16
scas
fstp
mov
jg
stos
(bad)
movs
repz
fidivr
and
add
sub
iret
pminsw
mov
xor
pop
xor
rcl
out
arpl
(bad)
int3
dec
pop
mov
mov
movs
push
xor
adc
push
aad
mov
loop
pop
aam
cs
jmp
mov
push
call
sub
fsub
jne
dec
jg
jb
xchg
adc
in
dec
cmp
xchg
ins
or
cmps
xlat
lahf
sub
fidivr
pusha
ret
loop
call
retf
loop
mov
pop
sahf
jmp
mov
(bad)
jmp
push
repz
adc
call
cmp
das
(bad)
pusha
(bad)
test
xchg
lods
sbb
outs
call
mov
outs
mov
or
sbb
mul
jns
pop
icebp
loopne
inc
jmp
stos
sub
xchg
xchg
addr16
xchg
sub
pop
dec
clc
push
data16
ins
loope
dec
sub
push
retf
pushf
adc
enter
test
out
pop
mov
dec
ja
fmul
pusha
add
(bad)
ret
mov
hlt
movs
fbld
sub
push
jle
(bad)
(bad)
in
fcmovne
mov
shl
and
neg
fsub
dec
xchg
div
iret
ret
adc
int3
fdivp
mov
ja
loope
lock
sub
daa
js
dec
in
out
xchg
stos
repz
jne
jnp
shl
int
inc
pop
pop
xor
sub
push
or
push
retf
or
imul
mov
data16
mov
push
push
mov
inc
ds
arpl
pushf
push
sti
in
cmp
inc
mov
push
xchg
add
lods
push
aam
pushf
jecxz
push
xchg
bound
xchg
scas
lds
inc
call
xchg
mov
int
cmc
int
push
or
sub
(bad)
les
cdq
xchg
mov
xchg
shl
adc
imul
ret
bound
and
dec
movs
pop
aas
je
xchg
rol
sbb
(bad)
mov
jnp
dec
inc
adc
fisubr
mov
scas
pop
fsub
mov
mov
mov
mov
cmp
pop
enter
mov
sub
pop
shl
add
mov
stos
adc
call
sbb
pop
mov
dec
cmp
(bad)
mov
ret
xchg
xor
ja
call
pop
push
retf
dec
hlt
aad
sub
sbb
cmp
test
push
or
neg
fsub
ret
loope
cmc
dec
mov
leave
dec
cmp
and
inc
sub
xor
push
add
es
fwait
test
(bad)
jno
je
or
mov
rol
add
pusha
sbb
mov
aas
mov
mov
or
mov
sbb
sub
xor
push
push
test
adc
stos
pop
and
or
jmp
lahf
jg
mov
pop
data16
or
push
aas
sub
add
cmp
cmp
pop
push
dec
jecxz
mov
xchg
outs
mov
mov
sahf
adc
sahf
mov
mov
dec
inc
cmp
dec
shr
jnp
cmp
cmp
aas
retf
adc
mov
les
inc
push
add
mov
in
xor
loop
or
out
(bad)
inc
dec
add
sbb
jnp
les
aam
mov
scas
cmp
repz
out
cmp
xor
mov
push
fild
ins
xor
push
cmp
adc
pop
arpl
addr16
cmps
movs
or
mov
pushf
or
out
add
and
mov
leave
out
hlt
xor
mov
mov
lods
mov
xor
not
xchg
and
sbb
fimul
int
jl
pop
inc
push
scas
add
popa
push
sbb
mul
data16
push
out
call
icebp
push
push
adc
lods
loopne
outs
mov
fist
(bad)
lods
fs
mov
cmc
inc
mov
inc
mov
jae
dec
outs
cmp
push
(bad)
ins
sbb
mov
rcr
mov
or
adc
in
inc
ror
(bad)
gs
aas
ins
call
and
retf
retf
into
sub
xlat
pop
les
jbe
cmp
inc
pushf
and
mov
and
shr
loop
scas
jp
out
test
jge
rcl
cmp
loope
pusha
mov
dec
mov
push
popa
jle
stc
add
xchg
cmp
cmp
inc
push
add
jae
mov
mov
daa
mov
adc
inc
(bad)
sahf
inc
fiadd
jne
sub
cwde
sbb
out
jae
sahf
dec
shr
fdiv
mov
push
aam
and
dec
fist
stos
xchg
mov
retf
jmp
es
int
xchg
jp
dec
ret
mov
ficom
mov
xor
mov
(bad)
mov
jmp
pop
lock
ins
das
outs
fnstenv
outs
(bad)
fimul
jo
sbb
sbb
std
repnz
dec
mov
jmp
scas
push
dec
mov
clc
call
pop
popa
imul
xor
xor
mov
iret
pop
mov
adc
rcr
hlt
daa
dec
push
dec
xchg
(bad)
ror
setno
mov
data16
push
jbe
mov
shl
ja
cmp
dec
shl
jno
adc
icebp
loope
stos
xchg
dec
jg
cmp
shr
cmp
(bad)
cmp
xchg
movs
test
add
mov
xchg
xor
cmp
ret
mov
dec
mov
sbb
lock
push
les
cmps
call
wbinvd
xlat
outs
imul
fsub
mov
push
test
dec
enter
sub
pop
ret
and
mov
dec
pop
icebp
jb
movs
add
sahf
das
cmp
sub
and
aaa
pop
cli
fsubrp
mov
sti
(bad)
dec
jge
in
jl
iret
jp
pop
push
ror
iret
loopne
push
mov
xor
shl
pop
shr
xchg
cwde
jmp
jno
retf
mov
mov
xchg
cld
dec
push
cmp
dec
cwde
xchg
(bad)
push
stc
jmp
inc
(bad)
call
jecxz
xchg
sahf
pop
(bad)
outs
ja
aaa
call
dec
cmp
clc
movs
push
jns
imul
pop
aaa
fistp
pop
jno
(bad)
repnz
test
out
lea
add
repnz
mov
jne
mov
xor
dec
push
loop
inc
mov
xchg
pusha
fwait
ror
pop
sti
ds
mov
outs
mov
mov
leave
push
jecxz
mov
sbb
rcr
(bad)
nop
hlt
pop
sbb
jbe
add
pop
icebp
sub
xchg
mov
leave
cmp
ss
xchg
xchg
sub
fld
into
adc
push
push
ja
shl
cmp
js
andps
pop
lock
jno
ins
and
or
add
and
xor
sub
xchg
push
retf
pop
fdivr
mov
(bad)
stc
cdq
pop
mov
clc
and
sbb
int3
dec
into
fldcw
xlat
iret
push
call
lahf
jge
pop
cmp
pop
add
jne
mov
cdq
xchg
pop
adc
sbb
sub
or
pop
sbb
push
mov
cli
fbstp
inc
lahf
sub
test
inc
mov
scas
mov
cdq
fadd
and
jno
repz
(bad)
(bad)
and
cmp
mov
out
stc
pop
add
arpl
mov
scas
out
nop
or
ja
sti
fisubr
lock
dec
pop
xor
jb
movs
outs
pop
cmovle
or
dec
cmp
ins
push
mov
pop
das
(bad)
xor
scas
or
mov
or
bound
pop
ret
in
jno
cmp
dec
cmp
push
sar
rcl
pop
push
out
repz
mov
scas
xchg
push
mov
in
in
dec
mov
in
test
xchg
push
fs
arpl
lea
xchg
adc
stos
push
or
hlt
jae
pop
shl
test
(bad)
enter
fsub
mul
dec
xor
clc
jo
fcomp
mov
mov
add
shl
pop
jle
(bad)
ins
int3
movs
push
lock
inc
retf
fisttp
and
and
test
out
xor
inc
pop
inc
aaa
pop
and
nop
adc
lods
mov
in
dec
or
or
jae
adc
cdq
jmp
ja
ret
jne
adc
lds
dec
loop
(bad)
in
cld
std
sub
inc
std
mov
sub
dec
daa
xor
push
sub
std
in
out
movs
arpl
outs
sub
daa
retf
adc
sub
neg
mov
sbb
dec
sahf
push
test
das
jno
imul
call
mov
push
xor
(bad)
push
repz
sbb
pop
jg
push
mov
outs
in
aam
gs
sub
mov
sub
pop
stos
cmps
cmps
or
test
shr
jae
fs
outs
cmc
ror
(bad)
mul
cmp
sar
add
test
in
jmp
mov
dec
loopne
xlat
jae
jge
lds
inc
ds
mov
loopne
inc
inc
add
fild
jmp
mov
mov
cmp
adc
push
imul
mov
clc
retf
adc
fsubp
dec
lods
fstp
mov
push
mov
cmp
mov
aam
out
mov
xchg
jle
jb
daa
pop
mov
or
loop
movs
ret
pop
mov
adc
xchg
pushf
or
arpl
jb
fstp
pop
cmp
dec
cmp
mov
inc
inc
cmp
es
retf
mov
xchg
mov
stos
dec
or
jp
outs
test
jae
add
bound
sbb
int
mov
mov
fisttp
rol
mov
hlt
mov
jmp
jge
add
sbb
and
push
or
out
jno
push
cmp
or
fnsave
out
and
mov
xor
adc
dec
xor
push
and
fst
aas
pop
gs
into
pop
(bad)
(bad)
std
push
fcmovne
xor
cmp
(bad)
(bad)
outs
dec
enter
aaa
ins
xchg
cmp
and
repz
and
into
jmp
shr
push
cmc
cmp
out
xlat
xor
mov
lock
stos
call
test
mov
es
lods
push
int3
ja
lods
call
mov
ins
(bad)
fcom
popa
lock
mov
mov
mov
xchg
pusha
sub
sti
mov
dec
inc
push
and
mov
push
mov
or
ror
test
pushf
jmp
sub
jns
shl
imul
cmps
mov
xchg
iret
pusha
loope
inc
push
push
lods
pushf
ja
xchg
adc
xchg
inc
pop
jnp
or
(bad)
pop
mov
int
shl
sub
mov
inc
cli
inc
pusha
es
fisubr
(bad)
cmp
adc
push
arpl
fxch
cmp
jle
mov
xor
adc
pop
dec
scas
adc
jl
mov
mov
xchg
pop
xor
xor
test
push
push
sbb
xor
add
mov
lds
jg
jl
(bad)
test
mov
clc
mov
mov
ss
sti
dec
xor
sub
push
test
push
dec
(bad)
sub
cmps
not
mov
mov
inc
push
stc
lahf
pop
pop
and
in
pushf
jno
aam
push
ror
jmp
(bad)
hlt
icebp
mov
xor
add
adc
pop
xchg
call
gs
sub
mov
push
ror
xchg
loop
mul
aaa
dec
out
cmp
xor
mov
xchg
add
pop
mov
icebp
int
pop
stos
outs
pop
ret
sbb
out
ja
push
or
cmps
stos
pop
daa
repnz
cs
jp
xchg
pop
pop
push
jo
push
xor
stc
mov
mov
mov
push
out
lods
xchg
in
int3
push
mov
ret
pop
lods
dec
fld
data16
xor
add
shr
leave
nop
ret
shl
pop
and
call
pushf
or
pop
adc
fwait
xchg
cwde
nop
dec
mov
inc
daa
(bad)
pop
xlat
mov
inc
dec
mov
xlat
arpl
dec
sub
les
bound
push
pop
jmp
inc
int
out
aaa
xor
xchg
push
(bad)
scas
int
(bad)
fiadd
stc
fs
sbb
inc
bound
inc
mov
imul
(bad)
jmp
movs
dec
enter
ror
pop
adc
fild
fld
sub
dec
dec
mov
mov
xchg
loop
jb
jl
mov
mov
mov
xchg
lock
or
lods
pushf
jmp
stos
mov
mov
sub
push
add
push
adc
(bad)
push
sahf
pusha
inc
mov
pop
in
sub
ins
cwde
fstp
or
dec
push
sar
push
retf
aaa
imul
mov
lds
adc
mov
mov
lods
push
int3
dec
jnp
jge
lods
repz
push
dec
ss
call
add
daa
or
clc
popa
xor
or
mov
jbe
je
inc
mov
add
sbb
dec
xchg
pop
shl
ins
add
loopne
call
fidivr
retf
sbb
pop
inc
pop
jbe
out
sbb
stos
out
lods
stos
arpl
sub
retf
jb
es
out
ins
xor
loop
scas
pop
lea
or
xor
adc
cs
ror
enter
(bad)
sbb
adc
ud0
add
dec
mov
dec
aam
sbb
lods
mov
es
bound
into
jl
(bad)
mov
adc
jno
cmp
push
movs
push
out
add
(bad)
jmp
jle
push
sub
jle
rcl
pop
sti
(bad)
clc
xchg
sbb
rcr
mov
push
ss
add
(bad)
pop
adc
mov
add
dec
sahf
cdq
mov
xchg
or
fisttp
call
ret
jl
adc
cmp
inc
sub
bswap
add
cmp
mov
cmp
ja
inc
out
movs
mov
out
test
call
xchg
lea
or
push
pop
dec
lahf
xor
inc
lods
or
data16
das
xchg
cmp
js
add
dec
or
cmp
push
lods
xchg
dec
outs
sub
add
(bad)
sbb
dec
cdq
xchg
scas
and
inc
das
imul
call
jno
out
mov
or
stos
xor
stos
push
mov
pop
push
push
sbb
jbe
data16
(bad)
imul
cmp
nop
aas
imul
retf
leave
jb
adc
frstor
and
push
push
enter
pusha
(bad)
sahf
(bad)
cmp
pop
mov
adc
ret
rcl
ins
pop
xlat
repz
movs
pusha
xchg
fld
sbb
js
imul
mov
cmps
xchg
and
mov
jmp
fnstcw
fbld
mov
and
mov
cmp
xor
out
jle
xor
sub
xchg
adc
je
cld
dec
pusha
jle
xchg
sbb
inc
dec
in
out
leave
sbb
test
mov
jns
pop
mov
imul
or
repz
push
dec
and
jp
cld
(bad)
fucom
pmuludq
les
mov
add
pop
cs
movs
sub
or
int
jb
iret
dec
fadd
cld
sbb
mov
test
and
fidiv
dec
xchg
loopne
jge
mov
xor
pop
xor
sbb
mov
cmp
jb
imul
xchg
or
inc
icebp
fisubr
mov
push
into
sti
sub
cdq
dec
lds
mov
dec
or
bound
push
and
cdq
call
movs
mov
xor
pop
or
leave
iret
test
fidiv
mov
add
cmp
add
in
add
(bad)
mov
dec
jmp
and
jbe
mov
add
pop
out
outs
in
clc
mov
out
xor
mov
push
fwait
rcr
int
pop
jl
push
ja
pop
or
shl
je
pop
movs
xchg
ret
push
mov
dec
fs
add
jp
push
push
xchg
aad
scas
leave
inc
test
adc
push
dec
mov
mov
leave
mov
stos
xor
mov
cdq
xchg
adc
cmps
sub
sub
fcom
pusha
ret
and
sbb
retf
push
dec
sub
test
sbb
call
loop
mov
hlt
jle
lock
out
xchg
cmp
sub
cmp
adc
imul
div
fcom
jb
xchg
popa
pushf
cmp
and
ret
adc
xor
out
dec
dec
inc
rol
xchg
test
adc
in
aam
aad
sbb
es
mov
test
aaa
sbb
jbe
adc
jbe
pop
mov
les
jp
inc
in
mov
sbb
xor
in
in
and
in
mov
or
sub
mul
icebp
mov
out
mov
shl
inc
nop
cdq
adc
sar
aam
mov
jae
add
push
mov
cmps
test
imul
dec
push
xchg
cdq
jbe
add
test
test
sbb
adc
add
inc
or
(bad)
jp
push
call
mov
(bad)
jl
stos
test
mul
push
mov
outs
sti
pop
addr16
in
jae
pop
push
ss
sbb
or
sahf
mov
enter
push
sbb
nop
ret
push
sbb
stc
fst
pop
es
jno
call
rcl
sub
xchg
ret
fsubr
(bad)
hlt
dec
pusha
cdq
sbb
dec
sbb
pop
cmp
retf
in
loope
imul
jo
add
jl
cmp
out
gs
sub
add
sub
sub
adc
js
ror
mov
cmp
test
loopne
test
imul
mov
imul
mov
loop
cs
jmp
xor
aaa
xor
cmp
and
sti
lea
out
jmp
xchg
jno
push
pop
ret
inc
and
and
pop
dec
add
adc
lods
xor
xor
sbb
arpl
stos
inc
xchg
shr
pop
pop
jmp
(bad)
cld
lock
mov
in
cmps
pop
cwde
mov
movs
loope
in
cmp
mov
adc
add
push
jge
nop
out
or
hlt
outs
outs
mov
adc
add
call
mov
out
jnp
stos
scas
out
inc
or
or
dec
dec
or
mov
cmp
cmp
adc
cld
ins
(bad)
pop
ror
ss
aaa
dec
mov
aas
jp
imul
das
pop
retf
pop
stos
in
pop
cdq
bound
scas
mov
pop
cmps
sub
pop
jp
jns
mov
icebp
xchg
xchg
mov
sub
and
jp
pushf
hlt
popf
std
aas
pusha
rcl
lea
fdiv
cwde
nop
repnz
js
sbb
push
fisttp
cmp
aad
js
fld
test
aam
inc
sub
jle
pop
out
loopne
jmp
loopne
inc
xchg
cwde
sbb
xlat
repz
dec
xchg
or
aam
out
mov
iret
jne
ds
cwde
xchg
out
mov
jno
mov
xchg
cmc
out
repnz
imul
mov
adc
gs
push
mov
or
sbb
and
ins
fwait
rcr
in
xor
out
shl
movs
add
inc
sbb
mov
fwait
ja
xchg
mov
nop
mov
add
in
call
jns
stos
hlt
out
jge
movs
inc
adc
cmp
(bad)
outs
cld
mov
fdiv
mov
or
add
mov
xchg
pop
cmp
push
(bad)
xchg
sub
mov
xor
or
jecxz
test
or
ja
sub
or
mov
xor
in
adc
push
mov
ins
mov
xchg
cmc
sbb
dec
adc
bound
and
dec
jae
fdiv
mov
xchg
bound
jl
inc
test
jp
sub
pushf
leave
in
iret
dec
xor
mov
cmp
or
stos
in
xchg
jmp
pop
inc
xlat
jb
mov
jmp
add
mov
imul
outs
xchg
js
stos
jp
outs
loope
inc
mov
jl
inc
mov
test
jnp
jle
loope
cwde
pop
push
add
jmp
test
mov
popa
aaa
stos
cdq
sbb
xchg
and
in
stc
mov
lock
nop
mov
std
sbb
sbb
adc
retf
push
cmc
fild
movs
es
or
cli
mov
inc
in
mov
out
cs
lea
add
enter
push
jb
cmps
loope
repz
test
mov
fild
pusha
jl
(bad)
and
mov
repnz
outs
fs
push
mov
and
cmps
sbb
mov
xchg
and
push
or
retf
pop
sti
shr
mov
jno
jecxz
ror
adc
int3
shl
call
bound
or
outs
pop
pop
sub
sub
mov
arpl
xchg
push
je
mov
sub
sbb
mov
mov
ret
or
inc
ins
adc
rcr
xor
test
sub
fdiv
cmp
pop
jmp
in
daa
add
fdiv
xchg
xlat
inc
adc
loop
and
inc
add
dec
ins
add
int
ror
test
outs
xchg
gs
ss
(bad)
dec
inc
ret
cmps
aam
mov
shl
pop
int
iret
(bad)
or
pop
aad
je
mov
add
cmp
adc
push
add
iret
adc
ins
sar
mov
pop
jns
dec
aaa
xor
mov
test
jo
hlt
push
xchg
sub
cmp
mov
adc
aam
sub
pop
and
shl
arpl
xchg
test
and
sbb
dec
js
cmp
arpl
arpl
div
(bad)
enter
sbb
popf
stos
mov
ja
icebp
fadd
mov
retf
pop
cmp
sub
rcl
rcl
test
retf
cmc
mov
inc
adc
push
inc
pop
add
push
mov
stc
pop
aad
in
and
dec
je
ret
ficomp
dec
lock
jmp
mov
adc
dec
cmp
es
pop
test
xchg
stos
ja
addr16
test
iret
into
leave
and
stos
mov
push
ds
inc
mov
xchg
dec
or
pop
aaa
es
sti
push
(bad)
push
xor
into
es
outs
ficomp
cmp
(bad)
mul
jecxz
outs
or
sub
cmp
popf
arpl
das
pop
int3
dec
pop
add
mov
in
outs
(bad)
push
paddsw
cmp
push
loope
cmp
popa
aam
dec
bound
sahf
loop
out
ins
(bad)
push
dec
xlat
push
dec
daa
mov
shr
or
pop
test
push
hlt
push
shl
aaa
mov
iret
sub
cmp
adc
mov
xor
cmps
push
sbb
mov
popa
xor
lock
cmc
or
dec
xchg
dec
xchg
jmp
pop
xlat
xor
inc
or
or
movs
jmp
or
jecxz
or
push
push
mov
pushf
xchg
sub
or
test
xor
xor
and
mov
adc
movs
imul
retf
in
shl
test
mov
push
sub
xchg
mov
push
pop
and
(bad)
lock
and
mov
faddp
push
outs
aaa
xlat
shl
jl
neg
jno
mov
aam
call
add
jp
(bad)
shr
test
js
scas
inc
fsubr
jo
jae
push
add
or
push
xchg
jle
call
mov
shr
and
popf
mov
cbw
xor
rcl
ins
enter
lds
cmp
test
cmp
or
xchg
das
out
mov
mov
in
sti
jns
pop
cmc
mov
inc
sub
and
int3
mov
adc
mov
out
cwde
add
arpl
cli
cld
mov
jl
mov
dec
push
shl
xchg
iret
(bad)
push
icebp
pop
and
mov
cs
jmp
pop
push
outs
std
fld
pop
cmp
test
pop
xchg
ret
ret
sub
pop
scas
dec
xor
push
dec
fs
sub
sbb
pop
cld
inc
dec
adc
jno
inc
inc
pop
inc
or
xchg
sub
loop
push
adc
das
and
jmp
(bad)
in
push
adc
jmp
test
int3
push
es
inc
daa
sar
ins
cmp
clc
and
mov
fiadd
test
push
xchg
push
jno
push
fwait
xchg
sbb
pop
inc
cmp
lods
cmp
mov
lahf
mov
scas
pusha
popf
fidivr
stc
fucomp
mov
inc
pop
call
pop
mov
xchg
jo
push
adc
mov
sbb
mov
pop
int3
xor
jl
cmps
xchg
(bad)
ins
fstp
out
cli
icebp
cmp
xchg
pop
mov
push
fwait
push
mov
and
push
fbld
mov
cmp
movs
jae
jbe
sahf
sub
mov
rcr
repz
jecxz
sbb
jo
movs
mov
push
mov
(bad)
mov
pop
dec
and
arpl
mov
pop
add
aas
cmp
cmp
xchg
into
lahf
xor
xor
(bad)
pushf
fdivr
pop
stc
and
sar
rol
inc
and
sbb
sahf
mov
add
mov
push
jg
movs
clc
inc
outs
adc
cmp
je
sbb
loopne
leave
dec
mov
ins
xor
add
pop
stos
pop
dec
das
cwde
test
add
xchg
scas
scas
(bad)
cmp
jmp
aad
dec
or
neg
inc
mov
jnp
pop
cmp
jg
ss
test
in
push
xlat
clc
sahf
mov
lods
cli
mov
lods
jg
rcl
lea
adc
and
scas
inc
popf
and
mov
pop
and
ins
retf
push
fmulp
mov
fidivr
fsubr
cmp
sbb
or
fsub
imul
inc
rol
adc
inc
mov
or
xchg
jmp
mov
or
sahf
mov
ficom
(bad)
push
fdiv
std
and
ror
jns
sahf
dec
xchg
cmp
or
xchg
mov
stos
dec
push
aaa
dec
xchg
inc
adc
mov
sub
loop
push
cdq
pop
sub
aaa
add
jmp
lock
call
push
int
and
inc
imul
mov
and
jle
sbb
das
rcr
int
xchg
or
mov
pop
in
sbb
cmps
mov
push
hlt
add
outs
(bad)
mov
adc
inc
es
aam
mov
cmp
pop
xor
or
lock
gs
jecxz
dec
cmovbe
dec
lahf
cld
popa
push
pop
(bad)
stos
aad
adc
fcomp
test
jns
or
adc
mov
fld
jl
(bad)
mov
mov
sbb
and
cmps
dec
(bad)
scas
icebp
jae
pushf
pop
nop
or
lock
push
dec
mul
pop
jns
dec
xchg
cmps
cmp
jp
add
ficom
cld
sbb
dec
or
pop
shr
and
iret
push
jp
ds
push
push
push
pushf
fucomi
retf
xchg
mov
stos
pop
mov
push
fadd
jle
and
fnstsw
mov
or
icebp
in
mov
loop
mov
fld
cmc
sbb
outs
repz
sahf
or
jne
mov
pop
stc
ror
inc
xor
xchg
push
not
int3
test
xor
cmps
sti
cld
fldenv
repnz
inc
pop
jmp
jns
xchg
pushf
sbb
push
push
or
xor
inc
mov
repz
sub
pop
push
sbb
les
jne
mov
xchg
ja
jmp
mov
(bad)
out
pop
iret
int3
push
push
inc
push
rcl
ins
popf
mov
movs
test
inc
jge
stos
pop
or
or
loopne
xor
cdq
xchg
add
dec
lods
xchg
sub
fistp
push
cmps
add
fstp
push
xor
hlt
out
add
or
fst
ficomp
mov
pusha
cmp
cwde
pop
dec
xor
bndldx
or
arpl
loop
mov
xchg
das
cmp
aad
test
mov
imul
and
xor
loop
dec
mov
enter
mov
add
cmc
fsubr
sbb
push
pop
sbb
leave
scas
or
dec
clc
mov
or
repz
(bad)
fwait
pop
push
xchg
dec
push
aam
jge
fimul
(bad)
mov
pop
call
icebp
popa
xchg
push
or
mov
lahf
stc
std
mov
jns
or
imul
adc
cmp
pushw
fwait
sub
xchg
cmp
mov
or
movs
shl
add
jmp
mov
sub
lea
(bad)
sti
imul
mov
out
push
and
lahf
mov
or
lods
jge
xchg
xchg
or
pop
push
shl
ror
sub
(bad)
push
sub
push
and
push
sub
xor
sub
dec
mov
pop
sbb
ror
jecxz
mov
sbb
js
pop
sbb
ret
mov
(bad)
cmovne
and
mov
mov
dec
fistp
into
mov
sub
xchg
ins
cmp
out
push
add
mov
loope
inc
push
fiadd
or
scas
dec
push
mov
popa
fcmovnbe
addr16
sub
inc
daa
xchg
jecxz
mov
jbe
cmp
ins
fistp
fnstenv
xor
mov
in
dec
out
out
xlat
clc
test
xchg
cdq
mov
add
pop
xor
movs
cs
adc
rcl
das
(bad)
jg
jp
mov
jns
mov
ret
repz
ds
inc
jo
pusha
aaa
mov
bound
mov
mul
jns
cmps
push
ss
dec
sbb
inc
add
movs
sub
in
mov
js
pop
sbb
xchg
retf
scas
mov
adc
mov
push
dec
or
sub
arpl
cmps
repnz
cld
lahf
push
aad
inc
adc
rol
xchg
cmp
stos
inc
sbb
arpl
push
clc
push
scas
xchg
fadd
ds
sub
(bad)
lock
cmp
aas
inc
daa
sti
xchg
repnz
sahf
out
loop
jle
or
or
mov
imul
cmp
fisubr
ins
jb
dec
jmp
cmp
sub
repnz
jg
pop
push
js
xchg
pop
repz
(bad)
retf
jl
mov
stos
in
pop
(bad)
lds
adc
cs
js
(bad)
mov
imul
dec
add
loopne
push
xor
xor
stos
imul
ret
mov
pop
es
inc
xor
adc
sub
inc
or
lods
cdq
pop
(bad)
ss
fidiv
hlt
and
(bad)
int3
xchg
popf
rcr
add
jno
jl
pop
and
data16
fcom
jb
cdq
sar
nop
or
add
xor
loopne
cmp
pop
sub
or
into
rol
jmp
out
out
arpl
push
mov
inc
test
data16
push
repz
mov
fild
vsubps
mov
pop
inc
adc
js
jbe
inc
xor
mov
stos
lds
out
pop
mov
dec
xchg
nop
lock
mov
ror
pop
adc
shl
jmp
icebp
mov
pop
shr
lods
add
fdiv
in
pop
mov
dec
inc
shl
andps
sbb
mov
scas
mov
inc
loopne
popf
push
ins
and
pop
add
pusha
sbb
scas
cwde
aam
adc
mov
popf
jp
pop
fisubr
cmps
cwde
es
test
adc
cmc
arpl
repnz
pop
mov
lea
retf
mov
cld
or
push
xor
int3
(bad)
call
out
mov
jg
sahf
cdq
sub
movs
lahf
dec
push
cmps
jg
xchg
mov
repz
mov
pushf
jg
ss
jle
sub
shr
movs
(bad)
mov
xor
test
js
or
pop
push
push
xor
cld
out
add
and
xchg
mov
lock
fdiv
dec
cmp
into
mov
xchg
(bad)
gs
shl
test
shl
jmp
jecxz
sbb
cmps
sahf
in
xor
mov
addr16
mov
(bad)
push
mov
out
dec
std
adc
xor
mov
push
inc
repz
(bad)
xchg
in
jne
or
cmp
das
dec
sub
or
iret
int3
mov
stc
mov
pop
jg
add
pop
add
sbb
pusha
and
dec
pop
scas
or
pop
(bad)
bound
jmp
imul
push
push
add
push
pop
fsubr
add
pushf
pop
xchg
out
pop
adc
arpl
pop
rcl
aad
dec
icebp
not
ficom
sbb
pushf
sbb
push
pusha
imul
adc
inc
cs
dec
push
aas
xchg
out
xchg
sub
jmp
scas
outs
cli
les
pop
jg
iret
xchg
push
mov
test
icebp
pushf
cmps
xlat
push
sub
cld
mov
in
stos
stos
in
in
scas
jmp
iret
jae
dec
mov
xor
test
pop
mov
mov
cs
xchg
inc
or
pusha
inc
mov
sbb
xor
or
jge
or
dec
ss
and
cdq
in
jmp
in
daa
dec
and
dec
push
ins
push
xchg
jp
shr
xchg
pop
sti
cmp
mov
int
push
inc
nop
inc
scas
or
adc
lods
aad
frstor
(bad)
(bad)
cwde
jae
fiadd
in
outs
jo
jns
xor
and
mov
add
adc
pop
add
or
daa
mov
or
inc
cli
popa
retf
adc
mov
adc
jb
push
(bad)
xchg
adc
or
icebp
cdq
(bad)
xchg
popf
shl
fmul
and
in
pop
or
adc
mov
mov
(bad)
es
pop
mov
sbb
pop
adc
add
dec
call
or
movs
mov
pop
and
mov
push
mov
fs
xor
adc
bt
dec
mov
in
mov
sbb
rcr
into
fincstp
pop
retf
push
ins
add
hlt
mov
stos
test
lods
xor
sub
retf
repz
arpl
adc
mov
sti
mov
lds
int
jno
xlat
cmp
dec
inc
mov
cmp
push
retf
push
sub
outs
fstp
loope
mov
dec
scas
hlt
imul
mov
push
sub
loope
pop
int
fldenv
mov
sub
shr
or
ins
cmp
rcr
add
inc
xor
icebp
jbe
pop
mov
mov
pusha
add
call
cdq
pop
lock
fdiv
es
jl
and
or
js
sbb
smsw
pusha
push
xchg
neg
mov
adc
stc
jnp
test
popf
dec
inc
dec
xchg
int3
mov
in
adc
fild
add
dec
jnp
jo
retf
rol
mov
fstp
sub
mov
lock
inc
repnz
xchg
jecxz
jmp
bound
inc
adc
cmp
add
mov
pop
add
jnp
fidiv
pop
adc
xchg
fld
sub
push
in
out
cmp
out
test
push
(bad)
sub
inc
test
aad
sbb
add
adc
push
xchg
sar
or
popa
outs
mov
nop
dec
or
mov
and
jne
xchg
mov
scas
and
xchg
imul
and
sub
xchg
loopne
sbb
pop
xchg
(bad)
pop
cmp
movs
and
loope
add
mov
pop
mov
nop
lock
pop
xchg
cmps
jbe
push
mov
cmp
ds
or
dec
push
xchg
daa
sbb
or
add
push
bound
mov
mov
and
pop
push
mov
inc
add
stos
inc
outs
push
or
cs
mov
sub
and
mov
xchg
imul
(bad)
or
jbe
jmp
inc
jl
shr
test
pop
sub
(bad)
outs
iret
int3
xor
int
push
dec
loope
aam
fucomi
mov
imul
or
imul
add
test
retf
mov
pushf
jp
mov
je
adc
cli
or
test
mov
jg
retf
(bad)
js
std
push
retf
fcom
xor
and
xlat
bound
jo
ret
int3
xor
enter
add
or
push
pop
popf
int
inc
jge
mov
fadd
sbb
xchg
mov
cwde
jbe
jg
xor
push
and
pop
mov
jmp
aas
outs
fwait
sub
jno
pusha
mov
push
and
outs
clc
shr
and
pushf
(bad)
pushf
jmp
fidivr
sub
shl
js
and
jmp
lahf
retf
cli
cmp
xchg
jnp
mov
dec
pop
push
cmp
cmc
clc
fnsave
add
stc
and
in
out
mov
rcr
push
pop
loop
call
jnp
inc
outs
into
out
mov
les
sub
jmp
popf
loopne
das
(bad)
jge
cli
(bad)
sub
or
adc
repz
inc
movs
sub
jbe
mov
mov
add
pop
pop
inc
and
inc
lods
rcr
dec
fsubp
leave
fdiv
inc
push
pop
and
sub
aam
popa
inc
cmps
daa
mov
(bad)
movs
push
cmp
dec
inc
pop
add
sbb
xchg
or
out
pop
pop
xlat
dec
lods
ret
dec
inc
in
stc
jns
pop
das
call
lahf
push
jmp
mov
pop
lods
repnz
sbb
mov
dec
hlt
leavew
das
mov
(bad)
adc
in
cld
(bad)
dec
jl
xchg
jo
pop
lock
and
test
mov
jecxz
dec
stos
pop
loopne
(bad)
xchg
test
shl
mov
jb
dec
shl
add
out
and
adc
mov
or
xlat
aas
shr
jmp
sub
inc
js
push
mov
or
div
ret
(bad)
cld
retf
add
imul
aaa
in
and
xchg
or
fist
enter
push
mov
inc
pop
stc
cld
fld
out
imul
xor
xchg
test
call
loope
retf
out
(bad)
dec
into
and
in
and
add
xor
xchg
clc
fdiv
fisubr
mov
leave
icebp
daa
aad
add
out
or
jge
clc
popa
sbb
sub
sti
and
jns
call
aam
cmp
or
push
sbb
jo
int
inc
inc
fld
fsub
sbb
xchg
mov
clc
call
cdq
pop
lods
and
cmc
or
lods
jl
xchg
jo
sbb
arpl
das
lea
fsubr
sbb
mov
jnp
xor
addr16
cs
adc
lods
fcmovne
jmp
pop
add
aas
xor
pop
pop
mov
shr
enter
fld
jg
xchg
mov
fwait
add
pusha
mov
cdq
or
mov
pushf
sub
data16
movs
adc
xchg
add
loope
stos
adc
and
jg
sbb
ins
inc
jge
cmp
jo
mov
jle
fnsave
mov
inc
mov
stc
push
inc
cmc
mov
mov
mov
xchg
add
pop
xchg
xchg
pop
cmp
popa
xchg
cmp
je
dec
push
sbb
es
mov
retf
mov
xchg
mov
fild
call
mov
les
test
sub
xor
lock
sbb
xor
js
cdq
inc
adc
repz
(bad)
push
dec
sub
mov
pop
in
xchg
aas
jp
fstp
and
je
movs
xor
pop
lods
mov
aas
jmp
int
shr
idiv
push
mov
addr16
mov
inc
(bad)
adc
mov
repz
fsub
dec
xor
pop
pop
jno
xchg
and
std
cmp
or
add
shl
jmp
inc
mov
xor
std
xor
mov
daa
repnz
sbb
sub
stos
fidiv
xor
mov
fstp
push
push
mov
fdiv
(bad)
dec
ret
and
xchg
and
stos
arpl
mov
dec
jo
or
out
test
push
cdq
pop
lea
push
scas
mov
xlat
add
jo
push
test
adc
inc
jmp
cmp
lods
cwde
mov
sbb
or
adc
push
dec
push
inc
and
and
mov
dec
sbb
fld
out
movs
push
mov
or
and
dec
jbe
inc
mov
fst
jle
jle
and
lods
cs
cmp
jb
outs
in
mov
loop
jmp
add
add
fist
mov
and
pop
pop
(bad)
packuswb
cmp
adc
jp
pop
mov
rol
mov
out
mov
xor
shl
sbb
mov
movs
shl
sbb
sbb
mov
lock
add
pop
int3
pushf
jo
(bad)
in
scas
fimul
shl
push
sub
add
loope
sub
int
aas
enter
push
add
mov
sti
dec
xchg
jmp
aas
mov
xchg
mov
cdq
or
xchg
lods
adc
pop
aad
dec
cmp
in
cmp
pop
ficomp
mov
inc
mov
imul
and
sbb
adc
outs
sbb
jl
pop
test
sub
shl
lahf
xor
push
bound
and
xchg
cwde
inc
cmp
push
fnstsw
int
loopne
dec
or
stc
stc
push
out
enter
xor
dec
jmp
or
cmp
stc
(bad)
out
or
push
(bad)
mov
add
or
(bad)
jg
inc
push
mov
pop
jge
fcmovu
xchg
out
mov
dec
mov
lock
movs
loope
in
pop
test
push
pop
push
inc
out
jle
sahf
mov
jp
push
addr16
lahf
loopne
sub
mov
jo
(bad)
(bad)
dec
add
adc
movs
mov
lods
gs
call
in
sub
or
cmp
fldl2e
hlt
ror
adc
sbb
jge
ret
adc
sub
(bad)
enter
fidiv
outs
cmp
icebp
xchg
adc
mov
out
push
xor
mul
iret
loopne
push
push
or
adc
enter
xor
mov
mov
or
lods
push
rcr
loope
cmp
xchg
add
daa
int3
sub
sar
cld
rol
xor
imul
lds
mov
pop
fwait
sahf
movs
lds
sbb
push
mov
cli
mov
fwait
mov
cmp
aam
loop
sub
mov
out
loope
test
cmp
mov
call
stos
or
ret
enter
movs
mov
dec
test
adc
stos
mov
sub
mov
push
or
cmp
mov
sti
or
jp
inc
pusha
stc
xchg
push
loopne
(bad)
and
iret
(bad)
fs
arpl
stc
jns
sahf
mov
xchg
(bad)
inc
xchg
xor
sbb
xchg
cmps
cmc
cmp
xchg
xchg
mov
pop
mov
lods
lods
aad
cld
retf
dec
pop
sub
or
inc
aad
cmc
pop
jecxz
mov
or
pop
ror
xchg
jb
sbb
scas
jbe
adc
pusha
fwait
outs
and
mov
sub
stos
inc
loopne
int
daa
xor
movs
inc
and
lahf
push
movs
inc
ror
cld
ret
or
sub
shr
loope
jne
inc
dec
jle
rcl
fsub
xchg
push
fistp
mov
into
aaa
hlt
je
retf
dec
enter
lock
dec
addr16
cmps
ss
xor
xchg
mov
icebp
push
mov
pop
push
sub
sub
cld
and
sqrtps
dec
clc
mov
enter
mov
(bad)
icebp
out
lea
test
cmp
and
jnp
and
cmp
xchg
cdq
cwde
push
push
outs
rol
inc
cmp
data16
inc
nop
ret
sbb
mov
ret
cmp
cdq
sar
js
pop
int3
sbb
push
mov
xor
sbb
or
adc
loopne
je
nop
inc
pop
mov
mov
push
pop
inc
stos
jnp
xor
lds
inc
(bad)
out
sahf
or
rol
inc
or
pushf
dec
xchg
sub
js
mov
addr16
jne
hlt
cld
outs
adc
loop
dec
cwde
in
cmp
adc
sbb
dec
adc
and
fisubr
test
test
popf
pop
scas
pop
iret
sub
add
jae
(bad)
and
loope
mov
ficomp
or
rcr
pop
push
mov
sbb
(bad)
sub
add
sbb
popa
call
popf
fist
lock
cmp
lods
dec
sub
movs
retf
ret
movs
inc
mov
sbb
outs
shl
sbb
ret
jb
retw
movs
(bad)
xor
sub
not
rcl
cmp
jae
xor
adc
es
xor
pushf
loopne
arpl
leave
arpl
sub
cmp
jle
rcr
jne
aaa
test
push
out
icebp
pusha
outs
ret
pop
adc
mov
add
jbe
(bad)
inc
mov
cdq
dec
aam
xlat
jnp
scas
inc
in
dec
ror
ror
push
ja
pop
mov
mov
scas
sub
jecxz
sub
jb
scas
or
rol
aas
das
xchg
retf
(bad)
repnz
aas
cmps
inc
aaa
(bad)
addr16
jno
lock
lods
fnstsw
inc
mov
xchg
dec
push
dec
mov
ror
icebp
xlat
ret
jnp
or
mov
push
cwde
add
or
mov
adc
mov
inc
int
loopne
or
xor
push
jns
scas
sub
xchg
pop
cmp
(bad)
jmp
mov
pop
push
adc
mov
push
pop
sbb
adc
shr
scas
jne
loope
add
and
rcl
iret
dec
add
int
jo
mov
addr16
nop
mov
xchg
mov
xchg
jmp
enter
into
add
cld
adc
adc
add
pop
jmp
sbb
pushf
jno
jne
out
sub
pop
sub
mov
mov
repnz
scas
or
push
mov
jl
pop
lahf
jp
retf
data16
jle
cmp
imul
test
enter
sub
jle
ds
out
dec
inc
iret
aaa
call
movs
test
cmp
push
push
hlt
daa
sub
je
cmp
fdivr
ret
lods
in
inc
mov
and
enter
lock
mov
sub
jg
sbb
inc
mov
popa
push
vmwrite
fdivr
imul
mov
stc
icebp
(bad)
mov
ins
jns
neg
popf
mov
rcl
adc
mov
or
push
dec
test
pusha
cmps
xor
rol
sbb
rcr
xlat
xchg
ins
pop
mov
or
jbe
xchg
mov
cmc
sbb
push
xchg
cmp
mov
mov
dec
mov
and
mov
movs
dec
call
popa
sahf
adc
push
adc
mov
cmc
rol
pop
addr16
ins
aaa
dec
idiv
outs
xchg
in
mov
or
push
outs
jge
jo
jmp
rol
call
sbb
cmp
pop
xchg
scas
push
js
jecxz
jecxz
loopne
fild
(bad)
jae
cmps
out
mov
push
cld
cmps
out
shl
inc
add
test
xchg
ja
inc
cmps
mov
shr
movs
push
jmp
sbb
in
call
push
and
leave
cwde
dec
(bad)
mov
xor
es
or
inc
aas
pop
and
fbstp
fst
sub
rcr
sbb
in
pop
xchg
les
into
add
mov
pushf
adc
cmp
and
test
mov
movs
lods
mov
daa
xlat
xchg
sbb
imul
ins
rcl
repz
lahf
sbb
sahf
out
int
sahf
daa
fisubr
into
hlt
or
sbb
jle
cmp
test
sub
or
xchg
cmp
pop
retf
lock
jno
ds
jmp
idiv
inc
mov
test
dec
mov
fbstp
cmp
enter
(bad)
(bad)
mov
(bad)
and
test
sub
cmp
push
lds
mov
cmp
xor
adc
mov
jne
mov
test
mov
popf
or
push
adc
das
jecxz
and
call
loop
cmp
stos
aaa
in
(bad)
loop
enter
add
inc
cld
(bad)
xchg
bound
ror
and
mov
test
div
ds
frstor
add
leave
sahf
(bad)
repz
xor
and
sub
fucompp
sub
adc
dec
(bad)
sub
xor
test
bound
ds
(bad)
iret
xor
pusha
in
sbb
adc
jns
int3
mov
inc
test
xor
lds
xchg
dec
xchg
push
loop
push
ret
jne
mov
inc
push
push
xor
sbb
sub
imul
mov
jl
jae
push
xor
sar
sub
jmp
mov
cmp
rcr
je
es
sbb
mov
pop
loopne
or
mov
xchg
cmps
add
retf
hlt
ins
sbb
and
gs
mov
push
pop
sbb
add
pop
pop
lahf
mov
in
pop
dec
cld
test
jno
fsubr
jb
test
jmp
and
sub
ds
outs
nop
pop
(bad)
sahf
jmp
ret
pop
mov
push
outs
jl
cmps
or
fiadd
dec
push
outs
jbe
jmp
jl
test
dec
sub
je
movs
adc
adc
shl
pop
cmp
and
mov
popa
jbe
pop
jno
das
mul
cmp
mov
out
push
jbe
loopne
mov
nop
not
xchg
inc
addr16
inc
pop
icebp
push
mov
daa
jmp
lahf
xchg
jle
sbb
inc
xchg
test
sbb
leave
push
jns
add
jmp
pop
test
(bad)
outs
mov
bound
cli
mov
jg
add
mov
push
ss
mov
shr
test
push
call
es
or
jno
pop
test
test
add
hlt
nop
pop
clc
repnz
dec
jmp
ins
pop
add
sub
inc
or
call
(bad)
mov
es
xor
push
nop
jle
hlt
loop
jl
pop
or
ins
fdiv
repz
sbb
mov
movs
mov
mov
and
fisttp
jae
aas
pop
call
or
fld
mov
push
mov
sub
enter
lock
fiadd
inc
adc
test
cwde
gs
xor
jle
hlt
push
adc
addr16
mov
data16
sbb
jmp
mov
sub
scas
je
lahf
add
stos
push
out
xchg
sbb
pop
sub
mov
stos
mov
adc
dec
in
cwde
sbb
xchg
push
dec
popa
xor
(bad)
lods
(bad)
fdivr
inc
out
out
dec
jne
ins
test
and
cmp
addr16
jp
or
(bad)
and
fs
arpl
ins
test
lahf
mov
xchg
sbb
in
adc
test
ds
jno
mov
or
add
jp
or
int
sbb
pop
xchg
push
jb
outs
inc
js
fwait
lods
movs
and
clc
inc
sbb
and
xor
pop
mov
xor
aas
(bad)
jp
mov
jns
aam
mov
push
pop
push
or
jae
fidiv
in
arpl
cmp
pop
push
ja
sbb
or
cs
in
sub
sar
adc
dec
push
push
cli
dec
inc
mov
jo
ds
popa
jge
pusha
cmps
mov
fwait
test
bound
fdivr
add
test
and
movs
scas
xor
repz
jmp
test
push
not
inc
scas
dec
sub
mov
add
or
out
cmps
inc
lods
(bad)
std
nop
imul
call
mov
cli
xchg
mov
cmp
cmp
jge
cwde
dec
ficom
scas
iret
hlt
ins
lods
jmp
stos
retf
xlat
sbb
(bad)
int
sbb
mov
pop
adc
sahf
stos
outs
and
jl
es
dec
add
mov
into
cmp
or
shl
inc
cmp
int3
or
data16
ja
icebp
out
push
fimul
mov
mov
arpl
xor
adc
cmp
inc
cmp
retf
jns
xchg
(bad)
(bad)
push
cmp
sbb
xchg
mov
retf
push
into
mov
push
xor
bound
jne
pop
cmp
or
retf
lods
(bad)
lock
mov
vmovsldup
add
sbb
xchg
sti
scas
dec
lea
push
inc
inc
xchg
add
sbb
rol
jno
mov
mov
jno
loopne
or
and
xchg
loop
call
or
mov
add
jg
cmp
xor
fnstenv
cmp
push
popf
push
push
fsub
fmul
(bad)
cmc
xchg
inc
mov
sar
jo
sti
pop
jle
rcl
(bad)
fst
pushf
adc
popa
aas
xchg
cmp
mov
or
mov
mov
mov
inc
push
inc
data16
mov
fadd
call
push
test
mov
js
dec
xchg
pop
xlat
dec
fldenv
imul
leave
xor
daa
cmc
test
cld
mov
push
or
push
movs
jo
data16
xlat
mov
xor
les
mov
push
push
pop
push
xchg
mul
jmp
test
or
mov
das
xchg
sahf
or
add
out
(bad)
push
out
dec
mov
fcomp
cmp
(bad)
xor
xor
mov
or
sahf
mov
adc
xchg
call
cs
and
shl
jnp
shr
or
stos
iret
ja
out
xchg
cmp
jb
sub
or
cmp
aas
sar
jb
repnz
addr16
out
das
jnp
jnp
xchg
jns
pop
call
movs
inc
ds
mov
sub
lods
or
js
mov
movs
inc
sbb
std
in
xchg
jns
xchg
and
(bad)
cs
cmp
fwait
dec
lods
adc
mov
jl
xlat
jl
cmp
push
push
xor
rol
dec
xchg
fcomp
pop
dec
or
ret
cmp
stos
xchg
js
sub
in
or
in
jo
cdq
push
stos
inc
lds
stos
mov
sbb
out
scas
in
xchg
xchg
shr
iret
aaa
sti
repz
mov
mov
dec
or
inc
sbb
arpl
xchg
scas
push
(bad)
loope
sbb
in
out
imul
repz
cmc
xor
dec
dec
add
mov
cmps
adc
jno
sti
cmp
mov
in
xor
adc
push
lods
push
add
pop
sub
leave
jbe
int
js
retf
sbb
and
aad
sbb
xchg
pushf
xor
gs
fs
xchg
cmp
adc
loopne
scas
push
sbb
lea
inc
(bad)
sti
inc
movs
mov
xchg
mov
out
bound
lahf
inc
jno
xchg
xchg
push
out
jle
mov
mov
xchg
dec
push
ins
mov
mov
cmps
add
xor
mov
xor
mov
stc
xlat
adc
test
popf
mov
mov
retf
(bad)
je
xor
scas
pop
jbe
jne
clc
test
popf
push
push
loope
ret
adc
cld
ins
inc
out
icebp
and
cdq
xor
js
mov
in
push
push
stos
adc
xchg
pop
out
push
stc
mov
aas
jmp
loopne
xchg
pop
inc
jle
not
dec
add
in
loopne
mov
or
xor
adc
jbe
fsubrp
sub
push
cmps
idiv
cmp
cdq
shl
and
mov
std
ja
mov
retf
inc
cmp
xchg
jns
in
and
pop
dec
push
mov
in
imul
(bad)
dec
cmp
stos
out
aas
fcmovne
jecxz
mov
or
push
or
in
(bad)
call
arpl
mov
sbb
xchg
ins
mov
dec
jge
lea
xchg
add
sar
cld
xor
xchg
pop
and
aas
jbe
jle
add
aad
scas
dec
adc
mov
jl
or
sbb
out
aas
test
pop
ret
mov
sar
sbb
jo
sub
fs
in
xor
pushf
adc
jp
pop
mov
xchg
sbb
imul
inc
lahf
mov
pop
push
mov
mov
mov
jecxz
sub
dec
or
std
inc
mul
lock
push
out
inc
mov
shl
mov
icebp
jmp
cmc
ins
stos
mov
stc
mov
pop
inc
dec
jp
jno
(bad)
(bad)
sub
jae
stos
push
clc
into
jae
jae
outs
addr16
jmp
or
fcmovbe
enter
scas
fidivr
jecxz
ins
ins
fs
dec
jae
fwait
sti
scas
ret
ret
sbb
pop
jbe
loop
jl
ficomp
sbb
mov
cmp
cmp
xlat
mov
jmp
into
dec
xchg
std
sar
(bad)
fisubr
dec
inc
xor
or
ins
cmp
inc
pop
pop
dec
mov
sar
sahf
jmp
xor
sub
sbb
and
je
enter
push
int
mov
fs
ret
dec
dec
or
inc
jmp
int
div
les
mov
sub
mov
hlt
push
ror
pop
sar
mov
pop
clc
dec
push
into
and
xchg
jmp
(bad)
in
cmp
xlat
fld
stos
or
movs
out
mov
or
xchg
jnp
fisubr
jne
inc
add
pop
cmp
inc
outs
enter
je
sbb
adc
mov
push
cmp
sbb
and
test
mov
xor
pop
cmps
leave
or
fsub
ins
adc
in
mov
les
jne
jmp
mov
add
jno
or
(bad)
xchg
ror
cs
sub
outs
neg
repnz
es
cmp
out
mov
sbb
xacquire
imul
int3
div
mov
enter
cmps
push
imul
mov
mov
fisttp
or
dec
int3
adc
sar
jmp
mov
jmp
jecxz
retf
push
stc
pop
mov
jbe
or
scas
jnp
cmps
mov
(bad)
jp
call
push
xlat
fabs
imul
dec
retf
(bad)
fs
cmp
sti
fidiv
push
aam
fwait
push
sub
pop
fcomp
and
pop
mov
add
daa
push
jb
sbb
adc
cmp
cmp
mov
xchg
jo
out
pop
jl
ret
add
scas
stos
mov
mov
out
out
cmps
mov
out
call
or
loopne
mov
mov
dec
or
mov
jno
mov
and
xchg
arpl
fst
dec
xchg
adc
enter
ins
jp
dec
xchg
ins
sbb
stos
popa
ins
mov
lahf
inc
scas
mov
sub
mov
add
ret
adc
mov
(bad)
sti
imul
cs
repnz
pop
lahf
jmp
lahf
xor
mov
sub
ret
and
xchg
in
arpl
ret
xor
pop
xor
ds
imul
sbb
(bad)
leave
repnz
jp
loop
ss
mov
(bad)
dec
jp
iretw
mov
pop
cmp
xchg
inc
fdivr
mov
mov
es
jge
ror
dec
add
sub
xchg
out
imul
push
sbb
stos
inc
loope
sub
mov
pop
mov
sbb
push
xchg
mov
push
shl
or
mov
mov
lods
inc
(bad)
outs
push
jecxz
adc
xchg
movs
fsubr
cmp
out
loopne
inc
jmp
xlat
pop
fdivr
sbb
mov
jmp
fs
imul
mov
fdivrp
dec
inc
sahf
dec
lahf
push
adc
aam
sbb
rcr
add
es
inc
sub
bound
jmp
jne
mov
rol
outs
mov
or
bound
sub
bound
or
xor
movs
and
xor
sbb
icebp
jne
loopne
mov
sbb
das
xchg
popf
and
adc
stos
cdq
in
shl
outs
dec
push
xor
loop
ss
in
jno
lea
into
into
mov
pop
jl
mov
out
std
mov
pushf
xchg
mov
dec
adc
pop
mov
mov
ficom
or
pop
mov
jno
push
push
(bad)
jmp
iret
shl
popa
push
jo
push
push
fcom
mov
div
mov
pop
or
dec
mov
lods
and
int3
(bad)
cld
cwde
sbb
popa
jl
in
push
mov
push
test
push
es
pop
mov
add
dec
dec
xchg
mov
ret
dec
cwde
lods
fldenv
inc
or
inc
test
cmp
loopne
mov
cmps
push
les
cli
test
sbb
outs
add
sbb
and
mov
adc
or
mov
mov
jg
out
inc
xlat
test
outs
dec
jmp
jb
push
mov
iret
sub
push
mov
retf
jmp
sub
dec
scas
(bad)
loopne
addr16
lahf
out
pushf
int
sahf
dec
jg
adc
add
mov
push
mov
into
cli
mov
cmps
ror
lock
imul
mov
mov
and
aad
pop
add
repz
ret
loop
push
ins
jb
call
ret
imul
int
cmp
popf
gs
pop
or
ins
inc
sahf
(bad)
(bad)
std
stc
cmp
in
jno
stc
xchg
xchg
mov
push
std
push
pusha
inc
inc
and
test
and
aam
xchg
mov
pop
pop
cmc
retf
test
pop
fptan
popa
fcom
test
pop
in
nop
sbb
push
pop
or
ds
outs
mov
xor
pop
mov
add
adc
mov
inc
inc
push
out
jl
inc
imul
pop
push
add
push
or
cmc
push
xchg
int3
fnstcw
or
test
adc
rcl
mov
iret
lahf
push
mov
xlat
push
dec
pop
add
jp
or
push
call
fnstcw
in
pop
mov
cdq
inc
xor
repz
popa
out
cdq
nop
imul
test
in
aam
push
sub
dec
aad
daa
stos
(bad)
push
enter
cmp
ja
jp
xchg
cmp
aas
test
sub
add
ins
or
dec
mov
call
dec
push
bnd
sub
push
aam
out
hlt
pop
push
das
xchg
jle
lds
mov
ja
jg
inc
pop
dec
in
cs
movs
(bad)
mov
mov
pop
stos
ins
out
jle
push
jnp
es
and
leave
and
sub
adc
movs
or
pop
xchg
mov
sub
sbb
pop
mov
jo
adc
add
jmp
and
and
movs
cmps
movs
dec
xor
repnz
inc
(bad)
dec
mov
jnp
jnp
fstp
pop
pop
(bad)
int3
adc
pop
test
jmp
sbb
mov
and
mov
xchg
lods
rdpmc
repnz
adc
fistp
push
mov
pusha
jns
dec
mov
pop
cmp
js
sar
inc
mov
inc
in
out
push
not
arpl
pusha
add
int
add
out
ds
sbb
stos
pop
cli
mov
cld
mov
daa
loope
cwde
shl
jmp
and
rcr
pusha
arpl
sub
mov
and
push
xor
shl
push
fst
dec
mov
xor
sti
pop
mov
xor
inc
cmp
cmp
add
cmp
out
pusha
cmp
cwde
in
imul
bound
push
or
sar
shl
sar
(bad)
push
add
sbb
pushf
push
call
add
daa
in
pop
pop
clc
add
jmp
add
sbb
outs
jae
push
cmp
sub
loope
and
rcl
jns
mov
push
mov
adc
jg
jnp
test
and
daa
out
xlat
ins
or
mov
sub
and
sbb
xor
push
out
or
jmp
cmp
or
das
push
or
cmps
lahf
jle
dec
mov
cli
or
aaa
xor
push
mov
inc
inc
sahf
out
mov
pop
loope
js
bound
cld
mov
mov
pushf
pop
sti
jbe
fs
sbb
inc
xchg
out
inc
mov
stos
jmp
aad
(bad)
pop
sbb
mov
push
out
push
sbb
xor
std
aad
dec
add
fiadd
xchg
es
cwde
xchg
not
fnstenv
out
fyl2x
data16
push
call
test
lods
test
mov
mov
mov
sbb
sbb
jmp
loopne
sbb
pusha
pop
xor
sbb
fs
inc
out
and
jo
push
dec
mov
rcr
mov
outs
repz
push
jno
mov
(bad)
popf
sbb
xor
enter
xor
clc
xchg
pop
mov
dec
(bad)
sub
or
ins
and
out
adc
push
add
adc
bound
fs
mov
inc
dec
loopne
mov
in
dec
cli
mov
lahf
aad
mov
aas
repnz
adc
loope
imul
jecxz
dec
push
fisubr
jne
les
xchg
xchg
dec
pop
mov
push
retf
repnz
xor
push
dec
mov
ins
ret
sbb
mov
mov
lods
mov
cmp
pop
cmp
dec
sbb
cld
shl
pmulhuw
sub
add
outs
fcomip
sbb
inc
(bad)
fwait
mov
ins
jl
cmps
pop
(bad)
cmp
adc
retf
mov
sbb
(bad)
push
jle
or
xchg
std
les
shl
jne
mov
cmp
push
add
sahf
mov
push
and
xor
mov
adc
in
adc
clc
cmc
loopne
arpl
fcomp
lahf
bound
outs
cdq
outs
leave
lds
ins
sar
in
sbb
outs
sar
jno
shr
sub
(bad)
cmp
data16
adc
aaa
bound
aam
or
jl
scas
js
mov
imul
sahf
in
ins
retf
or
jnp
loop
mov
or
mov
sub
out
(bad)
retf
pop
adc
ja
jnp
push
dec
popa
mov
nop
call
push
mov
call
div
inc
ret
sti
movs
fistp
jmp
mov
mov
lods
jl
mov
adc
mov
jae
inc
xchg
adc
sub
retf
shl
push
std
push
(bad)
mov
sub
lock
adc
aam
imul
mov
enter
mov
nop
dec
sbb
mov
pop
imul
add
jns
pop
xor
test
push
out
push
push
push
das
pop
xchg
cmps
in
xor
jmp
jbe
xor
push
clc
dec
or
push
ror
xchg
daa
sub
in
test
xchg
ret
adc
test
pop
cmp
and
pop
push
xchg
push
xlat
sti
stos
fadd
leave
fcmovnu
pushf
jae
movs
push
push
aaa
(bad)
iret
add
sub
movs
stc
test
movs
add
cwde
js
sbb
les
push
lods
mov
jno
jmp
mov
and
mov
mov
stos
and
mov
dec
gs
loope
mul
sub
push
(bad)
popa
in
push
pop
shl
mov
ret
dec
test
sub
loope
mov
jmp
aad
fst
jns
jle
mov
jmp
test
shl
pop
xor
xor
dec
in
inc
pop
enter
or
out
xchg
fld
xor
mov
jb
sbb
sbb
adc
mov
pop
ins
push
nop
ror
scas
sahf
sbb
adc
stos
fmulp
xchg
xchg
jne
pop
pop
aas
(bad)
call
add
sub
scas
xchg
pop
mov
xor
cmp
jne
and
pusha
and
jmp
sbb
fld
ficom
test
nop
add
sub
add
cmp
push
dec
xor
xchg
dec
test
mov
and
fdiv
cmc
inc
xchg
ins
sub
pop
jge
xchg
push
out
or
inc
sbb
mov
mov
and
xor
sbb
xchg
inc
jns
jp
adc
mov
add
sti
add
leave
xlat
cmp
outs
or
jmp
mov
int
pop
lods
xchg
sbb
adc
push
and
lods
scas
push
cld
pop
out
cwde
push
pop
xrelease
in
or
outs
jns
cmp
ins
dec
(bad)
pop
and
ins
mov
test
cli
add
adc
sti
loop
adc
retf
pop
fadd
push
inc
cs
inc
movs
fistp
pop
xor
mov
sub
inc
cmovle
adc
icebp
in
xor
je
add
dec
stc
jno
(bad)
cmc
(bad)
sbb
jno
xor
dec
sub
xor
sbb
xor
adc
and
sbb
out
outs
out
and
cmp
sahf
xor
inc
mov
mov
dec
cmp
cdq
pop
and
push
mov
mov
cld
cmp
sar
add
jne
xchg
stos
xor
iret
fdiv
call
add
mov
jae
push
js
jl
ret
idiv
xor
aas
adc
sub
mov
ret
repz
fadd
sub
xlat
stc
add
add
and
jmp
mov
jl
xor
jg
inc
cs
or
jae
cmp
(bad)
dec
dec
jecxz
out
icebp
cmps
and
xor
cmp
jbe
jo
iret
xor
jmp
adc
lods
xchg
sar
cmp
sbb
lods
inc
imul
das
dec
in
or
sub
mov
pop
xchg
enter
test
xchg
pop
call
mov
outs
(bad)
pop
mov
and
mov
adc
jle
xor
aas
mov
fstp
(bad)
jae
(bad)
enter
push
inc
pop
ror
inc
sbb
jbe
call
cmps
xor
nop
xchg
sahf
cwde
push
mov
mov
lfs
pop
rol
mov
hlt
shr
mov
mov
not
xchg
test
es
repnz
stos
push
xchg
popa
dec
cmp
jmp
popf
sub
xchg
sub
loop
fimul
sbb
adc
inc
loop
mov
and
sbb
pop
xor
out
add
push
xchg
push
jb
mov
cs
push
sbb
pop
push
push
mov
rcl
mov
pop
push
cmp
stos
push
mov
inc
xchg
aas
test
xor
stos
ds
int
push
mov
test
jge
test
xchg
mov
mov
sbb
push
sbb
inc
int3
mov
or
test
mov
test
dec
outs
or
int
mov
(bad)
push
and
inc
outs
inc
and
cmp
mov
sub
lods
adc
lahf
hlt
jg
pop
inc
inc
out
push
jge
mov
mov
retf
sbb
xlat
jbe
inc
scas
out
jecxz
pop
imul
dec
int
cmps
and
int
call
jb
adc
aam
enter
cmps
cmps
in
adc
jmp
cmp
cmp
addr16
jecxz
in
or
xchg
fld
fcmovbe
loop
int
inc
stos
test
xchg
or
repnz
ss
jmp
test
ins
ret
adc
jnp
adc
test
mov
push
sti
scas
dec
aas
dec
adc
xchg
call
or
jl
jnp
sub
mov
(bad)
imul
jne
scas
(bad)
mov
push
jno
rcr
pusha
adc
sahf
sub
lock
lods
push
shl
popf
mov
xlat
jmp
pop
popa
push
stc
pop
aad
mov
int
adc
movs
xor
xor
sbb
add
(bad)
repnz
cmp
pop
adc
mov
cmps
mov
daa
sbb
retf
pop
and
pop
dec
xchg
les
mov
jge
adc
fmul
je
adc
inc
mov
sub
rol
lds
lock
push
outs
repz
stos
pusha
sbb
rcr
push
nop
shl
push
out
ret
int
jg
sahf
inc
iret
push
sub
stos
out
mov
push
pop
stc
stos
rol
sub
jle
inc
xchg
pop
fsub
loop
cmc
sahf
pop
jmp
int
xor
xlat
pushf
fadd
cmp
movs
inc
das
stos
jl
xchg
jmp
lock
jp
imul
add
mov
pop
in
lods
mov
adc
push
ins
loop
push
mov
and
call
xchg
fiadd
lock
pop
stc
pop
aam
loop
sub
inc
push
sub
retf
sti
jmp
mov
mov
cdq
arpl
mov
cmps
dec
loopne
(bad)
push
mov
sbb
(bad)
add
push
inc
(bad)
gs
sbb
inc
xchg
pop
push
mov
pop
dec
lock
xchg
cmp
in
rcl
jns
sub
jae
pop
cmps
mov
mov
repz
xchg
add
and
das
and
dec
sbb
sub
mov
xor
jp
in
fsin
jo
fmul
adc
adc
das
xor
mov
or
add
cmp
mov
cmp
mov
sub
jnp
sbb
out
(bad)
nop
mov
push
das
mov
movs
cmp
xchg
sub
repz
xor
ret
mov
sti
fnsave
call
fwait
out
(bad)
out
(bad)
inc
mov
outs
scas
gs
popa
fwait
es
mov
jne
cmps
repz
xchg
aaa
cwde
or
mov
sbb
dec
inc
adc
in
std
mov
dec
stc
scas
ror
pop
sub
scas
mov
mov
std
or
enter
clc
jbe
jmp
test
or
cmp
jmp
mov
jmp
dec
push
movs
repz
sub
fs
jmp
sub
or
jnp
sbb
movs
jg
mov
mov
mov
pop
sbb
mov
or
jecxz
ret
mov
lods
xor
inc
fucomp
fidivr
mov
cmc
pop
add
pop
bt
xchg
cmc
inc
dec
xor
clc
sub
xchg
je
repz
sub
jmp
sahf
into
and
ins
js
mov
shl
hlt
jbe
mov
mov
or
fnsave
inc
adc
add
cld
es
inc
cmp
adc
lods
in
inc
stc
ret
jae
nop
and
mov
pusha
ror
or
xor
rol
xchg
inc
adc
cmps
dec
sub
mov
push
(bad)
push
fdivr
mov
outs
sbb
adc
cmc
xor
xchg
sbb
inc
test
fild
scas
push
sbb
dec
fld
cli
test
retf
jle
jnp
into
test
icebp
adc
adc
jle
push
sar
in
les
lods
xchg
push
out
pop
daa
adc
jns
enter
push
jne
test
dec
cmp
retf
pop
sbb
pushf
cld
mov
or
mov
ret
sbb
dec
xchg
mov
cmp
sar
cs
nop
xchg
into
into
adc
lods
cli
es
add
push
ret
mov
cli
ins
scas
loope
fs
sahf
mov
and
dec
jns
pop
or
push
jp
cli
or
pop
xor
dec
js
jnp
repnz
int
nop
lahf
nop
daa
into
mov
(bad)
xor
add
js
icebp
std
in
cdq
lahf
sub
inc
mov
and
pop
adc
add
sahf
adc
retf
pop
mov
mov
pop
pop
push
jne
dec
(bad)
daa
cmp
cmps
(bad)
in
test
cli
retf
pop
xor
cmc
icebp
push
sahf
adc
imul
adc
mov
or
xor
neg
push
dec
movs
ins
popf
pop
jge
mov
mov
shl
push
sub
push
push
movs
jmp
fstp
(bad)
call
nop
js
movs
ret
xor
shl
aad
dec
xchg
sbb
je
and
stos
loope
fsubrp
daa
cmps
sub
test
dec
loop
xor
movs
mov
mov
jp
stos
in
pop
loop
(bad)
(bad)
sbb
ds
mov
loop
lea
jb
jl
lea
and
and
nop
cld
ins
jo
jo
mov
sbb
mov
jle
arpl
(bad)
jg
pop
inc
xor
dec
fisttp
push
inc
xchg
scas
fild
or
xchg
outs
rcl
call
push
(bad)
in
(bad)
shl
xchg
and
sbb
cmps
push
add
inc
retf
pop
std
push
ss
fld
out
mov
popa
or
mov
int
les
lea
enter
into
jne
call
mov
fwait
in
fs
push
adc
xor
dec
cmp
push
mov
or
or
sbb
xchg
pop
mov
(bad)
fistp
sbb
xchg
jle
jmp
ficomp
sub
retf
dec
fild
stos
dec
adc
fwait
out
icebp
sti
call
adc
call
fnsave
jmp
(bad)
cmp
push
mov
xor
stos
sub
mov
jo
popa
fs
inc
(bad)
xor
xor
add
xchg
nop
xor
out
aas
shl
cmp
push
mov
call
movs
xchg
mov
loope
cmps
out
ins
or
pop
pop
jg
mov
mul
pushf
pop
and
int3
inc
sbb
out
jmp
je
dec
or
sbb
pop
out
call
aam
mov
pop
loope
in
fisub
in
xchg
sub
ins
jbe
push
push
ror
pop
push
fstp
sar
fcmove
adc
add
inc
mov
sub
pop
add
and
xor
aad
add
ss
sahf
cmp
or
mov
adc
sub
stos
stos
lods
sub
shl
xchg
(bad)
jmp
push
mov
ins
xchg
fwait
ds
inc
mov
push
jmp
mov
pop
loope
xchg
xor
and
(bad)
add
das
out
lock
mov
jecxz
jbe
cmc
pop
cmp
dec
add
loopne
imul
movs
and
scas
fcmovb
adc
cmp
sar
push
push
jnp
xchg
adc
dec
aad
sbb
inc
push
mov
or
mov
push
loope
jae
dec
lods
mov
mov
cmp
jl
shl
les
dec
out
cld
add
pop
lahf
xor
jecxz
xor
jnp
aaa
int3
js
cmps
div
xchg
shl
(bad)
or
shl
mov
test
xchg
aas
ins
mov
cmp
ins
ins
mov
mov
adc
jg
leave
loopne
fisttp
jns
push
jo
rcl
pop
cmps
cmp
mov
mov
into
ret
icebp
stos
cmc
mov
inc
push
stc
hlt
int
jne
sub
out
retf
mov
call
xchg
daa
jne
test
sbb
sbb
ror
xchg
repnz
int
adc
jmp
mov
loopne
add
push
int
arpl
out
fst
pushf
mov
jle
pushf
imul
enter
inc
shl
out
cmp
popa
and
(bad)
lea
pop
adc
xlat
mov
mov
pusha
clc
dec
fimul
or
push
xor
dec
inc
xlat
push
lock
inc
pop
scas
xor
sbb
pusha
inc
iret
pop
lahf
mov
gs
lahf
dec
mov
jae
mov
push
mov
mov
mov
cmp
das
sub
ins
int
pop
xchg
sbb
not
mov
xor
sub
ins
cmps
adc
xor
outs
sub
xlat
data16
scas
leave
fldl2e
test
fsubrp
bound
and
idiv
xor
pop
mov
out
mov
cmc
ficomp
xchg
adc
and
dec
mov
add
xor
push
mov
sub
pop
mov
dec
pop
inc
(bad)
fst
stos
movs
mov
div
add
loopne
je
outs
adc
inc
dec
(bad)
push
push
cdq
sbb
dec
data16
lods
shl
adc
sbb
data16
or
pop
(bad)
mov
aaa
mov
add
xor
add
pop
sbb
test
and
mov
add
push
sahf
mov
in
xor
xchg
jl
or
xor
les
pop
les
dec
jge
or
pushf
jle
add
retf
ds
movs
fild
cmovp
dec
mov
inc
out
push
scas
sub
inc
xchg
inc
mov
mov
pop
jp
mov
xchg
dec
repnz
xchg
pop
shl
xchg
inc
ins
push
mov
jmp
or
add
xor
push
cdq
loopne
inc
icebp
popa
mov
xor
out
data16
or
push
xlat
jge
sub
mov
xor
push
jnp
ds
jge
test
test
sbb
xchg
je
fst
cmp
xlat
mov
inc
push
jmp
push
mov
loope
push
sub
jne
xchg
std
mov
in
add
sub
sub
(bad)
leave
sub
dec
pop
out
jae
pop
xchg
sbb
dec
jbe
cld
adc
repnz
(bad)
or
sbb
adc
push
jmp
test
loop
fsubr
stos
jle
mov
(bad)
int
inc
sahf
fwait
add
jp
cli
cmp
or
sbb
pop
int3
fisub
ss
in
add
mov
xchg
ss
push
les
mov
dec
fcmovnu
out
int
add
pop
dec
sub
ds
inc
pushf
loop
xchg
adc
addr16
clc
mov
push
and
adc
(bad)
jbe
inc
aad
xchg
cs
lods
jecxz
sub
ret
int
cmp
fld
jmp
out
add
das
les
leave
adc
or
cmp
xor
xor
pop
sub
xchg
cmc
sub
cld
xchg
or
mov
das
sbb
daa
rol
out
or
inc
mov
retf
iret
and
sti
jns
hlt
cmp
pop
pop
(bad)
pop
mov
and
sub
jle
lods
jbe
inc
rcl
movs
add
pusha
xor
mov
hlt
test
pop
lahf
call
arpl
adc
leave
fld
adc
mov
and
xor
jp
scas
sub
cmc
add
sti
mov
cmc
shld
xor
rcr
cmps
scas
loope
fistp
sahf
mov
ss
pusha
shl
fsubr
fisub
cmp
add
mov
iret
push
mov
adc
jmp
or
sbb
inc
cmps
lods
xchg
mov
fsub
inc
pusha
sub
jp
icebp
clc
xor
ins
ret
jmp
add
adc
mov
test
(bad)
fsub
daa
inc
mov
in
mov
push
sub
sbb
ja
(bad)
fcom
addr16
in
sub
push
push
int
or
ret
ret
cdq
mov
repz
ficom
sbb
rol
rol
dec
loopne
mov
ja
inc
push
xor
outs
sub
test
mov
imul
cmp
into
push
lods
xchg
or
(bad)
scas
fwait
mov
in
ins
adc
pop
(bad)
idiv
les
xor
loope
pop
into
ss
sbb
pop
sti
xor
lock
sbb
add
dec
(bad)
ins
test
dec
fild
mov
xor
aad
dec
scas
fwait
mov
push
leave
xchg
je
and
int
test
push
push
shr
jg
jno
sbb
in
cs
ins
push
std
fs
es
pop
or
adc
int
xor
pop
cmp
stos
add
fiadd
push
icebp
into
jb
call
iret
push
mov
push
dec
push
sbb
add
and
test
jl
cli
xchg
xor
addr16
xor
in
hlt
enter
cmp
mov
jno
scas
mov
es
pop
dec
inc
leave
ret
pop
jge
push
sbb
adc
mov
dec
js
pop
es
push
cmp
outs
xchg
xor
loop
sub
cmp
mov
and
and
out
jp
cmp
add
dec
rcr
add
push
inc
lods
les
or
(bad)
ds
sub
mov
xchg
xor
push
outs
cmc
and
and
or
jbe
popa
retf
shl
faddp
popa
jg
pop
lods
std
sub
das
inc
shl
adc
mov
out
sbb
cdq
inc
(bad)
dec
sub
in
cmp
cmps
cmp
retf
pop
mov
and
jne
cli
loopne
les
in
in
or
in
jl
xchg
dec
sbb
push
inc
inc
out
xchg
sahf
cmp
clc
clc
xor
cmp
push
xor
sub
adc
(bad)
lock
inc
dec
mov
leave
pop
dec
in
fistp
rep
xchg
iret
mov
pop
and
test
rol
sub
push
add
and
add
aaa
pop
ds
jp
push
or
fistp
adc
fsubr
mov
les
adc
xchg
mov
push
xor
cmp
popf
ins
mov
xchg
cmps
test
and
pop
cmp
int
lds
sbb
or
jne
dec
xchg
arpl
lea
shr
adc
add
call
sub
inc
or
xor
pop
mov
imul
into
sub
mov
scas
lea
dec
loop
sbb
sub
icebp
sbb
cli
out
mov
scas
inc
out
add
sub
pop
scas
rcl
popa
sbb
scas
dec
(bad)
fnstcw
mov
mov
test
(bad)
pushf
vhaddpd
cmp
or
mov
enter
out
xor
dec
imul
int
inc
pop
jmp
mov
sbb
mov
sbb
call
aam
add
dec
mov
imul
mov
push
push
xchg
bound
sahf
dec
jno
mov
retf
leave
mov
mov
dec
cli
stos
add
pop
sbb
pusha
push
mov
test
bound
ja
or
out
loop
call
push
cmc
cmps
or
inc
pop
sbb
mov
call
loope
jo
cli
lahf
repnz
xchg
fidiv
sbb
frstor
push
mov
cwde
pop
nop
das
mov
shl
mov
pop
jmp
add
loop
mov
mov
push
and
and
mov
movs
fs
daa
jmp
ins
xchg
std
aas
out
mov
(bad)
mov
rol
jo
mov
push
jmp
or
stos
cmp
mov
movs
int3
and
mov
(bad)
cmp
xchg
pop
jne
loop
mov
(bad)
lods
sub
adc
pop
jno
mov
mov
add
ja
ffreep
cmp
shl
enter
mov
outs
mov
ins
loop
mov
or
and
test
xchg
cmp
je
arpl
pop
dec
push
mov
je
jnp
fadd
pushf
push
xor
adc
push
(bad)
out
push
(bad)
lods
outs
rcl
jp
nop
rdtsc
mov
push
pusha
pop
repnz
sbb
fild
data16
inc
in
std
scas
sub
xor
test
cmp
inc
movs
stos
and
mov
out
sub
es
xchg
cmp
xchg
jmp
push
xchg
(bad)
out
jb
cmp
pop
jbe
mov
out
pusha
(bad)
cmp
adc
call
fs
xchg
outs
add
movs
inc
push
std
dec
cmps
or
jmp
jae
cmps
sbb
push
jmp
and
mov
add
pop
or
stc
in
sub
ja
or
cmp
loopne
xchg
adc
sub
or
(bad)
call
mov
cmp
pop
xchg
shl
aam
dec
mov
xlat
sub
pop
xchg
or
fcomi
add
loope
cmp
outs
jecxz
in
mov
inc
add
mov
scas
lods
fsubr
stc
(bad)
popf
mov
dec
mov
fucomi
xchg
or
adc
xchg
push
sbb
mov
dec
or
mov
test
out
cmp
les
add
pop
mov
xlat
mov
sbb
retf
arpl
test
fcmove
cmp
mov
push
lods
aas
cs
(bad)
jl
sbb
xor
in
out
xor
test
jmp
repz
push
aam
xchg
cmps
movs
std
cmp
cmp
sub
test
mov
retf
mov
iret
movs
inc
aad
stos
movs
test
mov
(bad)
neg
push
push
add
(bad)
into
mov
cdq
push
ds
jg
loopne
mov
fsubr
xchg
fsubr
cmps
xor
or
cdq
out
sbb
cld
cmp
gs
mov
daa
pop
std
cmp
lea
add
push
jmp
sbb
dec
ror
out
inc
loopne
in
retf
jae
cmps
or
and
adc
rol
adc
scas
xchg
ret
jecxz
mov
pusha
xchg
mov
das
addr16
jge
sub
dec
xchg
repnz
and
mov
daa
std
in
das
int
sar
ss
xchg
mov
retf
not
mov
pop
mov
out
xchg
clc
arpl
push
push
retf
sub
mov
aad
lea
cmp
inc
pop
add
gs
adc
inc
pop
cmp
sbb
repnz
cmp
cmp
jle
icebp
push
rol
sub
loopne
outs
sti
mov
adc
mov
fcomp
sub
jge
push
ret
in
in
int3
push
adc
push
dec
or
mov
push
sbb
inc
push
xchg
sbb
rol
dec
(bad)
push
and
loopne
push
mov
aad
or
pop
scas
jmp
std
mov
mov
test
and
adc
and
adc
jg
xor
imul
jle
mov
js
jmp
mov
mov
jns
fdiv
out
(bad)
jne
sub
lea
inc
xchg
call
cmp
call
cmps
mov
jle
adc
adc
xor
push
pop
scas
dec
into
bound
(bad)
out
mov
arpl
pop
jnp
inc
into
dec
pop
stos
bound
ror
adc
and
jle
cmc
sti
out
std
ret
scas
shr
es
mov
in
aad
test
fimul
push
mov
and
fwait
push
and
enter
movs
shl
or
pop
xchg
test
or
popa
clc
(bad)
jmp
ja
scas
cmp
arpl
and
inc
outs
scas
stc
cmp
pop
scas
test
sahf
repnz
repz
adc
imul
or
pop
sahf
sub
test
sahf
jmp
(bad)
repz
out
enter
retf
jp
aaa
ror
mov
add
pop
pop
sbb
clc
cmc
bound
fs
push
sbb
jo
mov
jp
and
jmp
pop
stc
and
lods
cwde
call
pop
pop
cli
mov
call
icebp
lods
ret
enter
pop
push
jne
inc
pop
popf
lahf
or
int3
dec
cmp
arpl
mov
popa
test
rcl
xor
lahf
cli
mov
push
cs
mov
je
push
das
std
out
scas
push
scas
cmp
jnp
(bad)
sub
and
(bad)
(bad)
loop
push
call
adc
ja
stc
dec
adc
fwait
test
add
cmp
pop
add
repnz
es
jne
xor
dec
push
xor
adc
xlat
(bad)
scas
xchg
mov
pop
clc
and
movs
dec
pop
sti
mov
and
or
jne
imul
mov
adc
xchg
push
mov
repnz
add
adc
loopne
pop
call
and
aam
cmp
mov
inc
cmps
outs
test
cli
dec
add
or
add
ins
cmp
repnz
out
scas
lods
repz
sbb
pop
stos
repnz
pop
outs
arpl
cmps
mov
push
pop
jmp
pop
mov
in
and
outs
mov
jle
mov
sbb
lods
xor
imul
xchg
mov
xor
or
or
dec
inc
iret
ins
int3
nop
add
(bad)
test
mov
sahf
aam
outs
aaa
inc
cmp
fwait
pop
mov
pop
mov
inc
ficom
icebp
(bad)
fiadd
fidivr
clc
cmp
mov
jnp
push
sub
sbb
int3
mov
test
aad
sub
out
jae
out
in
xchg
int3
cwde
cmps
inc
jae
sbb
rep
loopne
int
data16
fwait
pop
sbb
fucomip
jle
retf
scas
inc
imul
pop
mov
mov
jg
fcomi
push
out
(bad)
and
adc
jge
sbb
movs
inc
clc
enter
rcl
scas
push
(bad)
dec
out
scas
fwait
add
dec
jno
aaa
sub
or
push
icebp
mov
std
in
jmp
jnp
adc
ror
pop
daa
inc
mov
movs
cld
aas
add
mov
jmp
jge
jle
lock
dec
cld
rcr
push
push
rcl
lock
cmps
inc
out
pop
fisttp
in
and
aam
sub
mov
mov
xor
inc
shl
and
pop
mov
pop
xor
dec
push
je
hlt
xchg
in
pop
in
adc
jge
lds
sub
lahf
pop
test
or
fwait
and
(bad)
retf
cwde
aaa
mov
js
movs
mov
cld
shl
shld
xchg
in
(bad)
xor
jmp
enter
test
mov
jecxz
xchg
mov
loop
jmp
add
and
pop
test
cmp
fidiv
imul
adc
pop
adc
dec
xchg
loopne
lods
mov
jo
jmp
loopne
(bad)
mov
xchg
imul
jb
js
jne
pop
pop
xor
inc
loopne
push
pop
jl
int
stos
push
xchg
sahf
(bad)
jmp
sahf
jl
mov
add
adc
push
xchg
or
adc
adc
xlat
jo
push
mov
or
imul
addr16
pop
push
add
fdivr
dec
or
popf
fcomp
dec
push
sub
xlat
xor
push
xchg
das
dec
pop
sub
dec
xlat
les
jg
or
xor
fisubr
inc
and
ficom
retf
popf
sbb
add
stc
sub
ds
jo
or
jno
retf
mov
lock
mov
dec
dec
dec
push
int
sbb
test
or
pop
mov
pop
push
in
in
push
cmp
xor
call
jbe
iret
cld
xchg
xchg
cld
rcr
js
push
sbb
test
xchg
xor
in
cmc
lods
rcl
adc
or
dec
push
pop
jae
mov
retf
(bad)
outs
test
fldcw
inc
fwait
movs
ja
add
lock
adc
or
jmp
inc
repz
ins
and
jl
inc
dec
xlat
ret
fdivp
cdq
ja
sub
xor
test
push
lahf
les
pop
repnz
push
cli
sub
stos
push
add
ds
mov
adc
mov
xchg
hlt
xchg
iret
and
shl
mov
out
mov
inc
adc
cli
jb
adc
jno
sar
inc
ds
push
int3
jecxz
xchg
lahf
xchg
(bad)
inc
pushw
sbb
mov
fnsave
fsub
(bad)
mov
out
test
ds
sub
std
or
and
fwait
push
cs
dec
data16
mov
pop
jb
in
mov
and
adc
sub
test
add
stos
xchg
sbb
in
dec
jbe
pop
ret
pop
pop
pop
cmc
push
int
punpckhdq
and
mov
lods
and
cs
ss
mov
push
sub
sub
jl
fidivr
sub
push
fidiv
sbb
add
mov
mov
sbb
jecxz
(bad)
sbb
test
fwait
das
std
leave
jl
ss
pop
scas
jle
xchg
or
lahf
sbb
dec
or
xchg
and
sbb
xor
fdivr
in
mov
cmp
(bad)
out
ret
outs
sbb
xchg
retf
enter
cmp
test
pop
add
mov
sar
retf
cdq
je
(bad)
jb
inc
sbb
xchg
cwde
enter
push
jns
push
add
enter
mov
pop
je
outs
sub
mov
add
mul
pop
xchg
inc
jmp
mov
adc
stos
ffreep
mov
pushf
sub
push
adc
jae
movs
or
push
add
adc
ret
mov
add
ins
and
cmc
add
and
bound
pop
mov
jge
movs
jmp
push
cs
add
push
(bad)
xlat
aam
add
jmp
adc
jle
or
out
adc
sub
cmp
and
and
les
fnstsw
add
adc
fisubr
(bad)
fcomp
movs
cld
mov
mov
loopne
mov
cmp
or
out
xor
sbb
and
cmpxchg
mov
loop
dec
repnz
mov
xor
or
jo
mov
mov
ror
sbb
push
and
rcl
cs
data16
cmp
add
sbb
mov
retf
ins
idiv
mov
and
xchg
cs
xchg
cmp
dec
jbe
adc
jno
jb
lods
inc
dec
pusha
inc
or
adc
mov
mov
jbe
sbb
fld
ja
jmp
shr
inc
jno
movs
add
adc
lods
cmp
xlat
ins
loope
imul
xchg
jbe
rcl
inc
shl
inc
or
sar
fisttp
jnp
sbb
pushf
dec
fisttp
mov
(bad)
iret
sbb
data16
popa
int
or
sbb
imul
cmp
add
pop
sahf
push
outs
and
dec
xor
fldcw
xchg
not
aam
outs
mov
push
jns
loop
or
jmp
jg
mov
inc
lock
ins
add
sub
daa
push
out
(bad)
xchg
les
jp
js
add
or
cwde
inc
div
cld
stos
xchg
imul
sub
jbe
sub
jp
jnp
lds
mov
inc
fcomi
xlat
adc
fld
clc
js
pushf
outs
adc
out
int
jp
enter
mov
mov
jp
and
mov
push
and
adc
mul
enter
gs
cld
lods
sahf
adc
test
and
ficomp
xor
xor
sar
push
retf
jns
inc
pop
cmp
xor
jmp
pop
pop
sbb
sub
repnz
mov
dec
add
leave
aam
shl
mul
and
(bad)
call
sbb
sbb
cld
outs
cld
adc
inc
cmp
les
lahf
cld
scas
adc
inc
call
mov
inc
int
dec
in
in
xchg
push
inc
lea
dec
mov
dec
mov
xchg
cmp
push
ja
add
cmc
dec
mov
scas
xlat
dec
(bad)
add
push
cmp
jmp
pop
inc
and
jle
leave
es
rcr
aam
jp
jno
xor
and
or
add
inc
sar
push
mov
test
call
jp
mov
add
ror
or
dec
(bad)
nop
cmp
les
cmc
cli
test
lods
xlat
jbe
push
idiv
aas
jns
cli
out
pop
inc
xlat
jecxz
je
rol
repz
xchg
ja
lods
fld
pmaxsw
mov
call
movs
cmps
jne
pop
out
retf
mov
inc
and
cmp
inc
dec
pop
cmp
pop
cmp
dec
bound
pop
gs
fmul
fcom
inc
fld
fstp
cwde
add
stos
ds
dec
int
rcl
aad
out
inc
sub
jno
dec
shl
icebp
and
movs
movs
daa
repnz
movs
pushf
loop
dec
fisttp
push
sbb
(bad)
xlat
mov
cmp
lahf
fcom
hlt
data16
out
and
int
cmc
xor
pusha
xor
mov
out
jne
dec
sbb
setle
jbe
push
jp
jmp
fcmovb
(bad)
sub
shl
sub
mov
mov
fcomp
inc
adc
stos
shl
jnp
mov
(bad)
jecxz
and
pop
jb
outs
cmps
jmp
es
mov
xchg
(bad)
fldcw
pop
test
loopne
outs
and
into
sub
sub
popa
aam
inc
lods
add
std
pop
or
cmp
jmp
sbb
nop
leave
out
sbb
je
push
xchg
sbb
adc
sbb
xor
jl
mov
cmps
out
fstp
fadd
push
call
jno
aad
fld
xchg
inc
psubusw
mov
test
mov
xor
dec
mov
in
not
call
ret
sar
sbb
lea
sub
jno
sbb
movs
cmp
addr16
fst
inc
test
retf
pop
add
jp
mul
xor
jge
mov
fimul
and
push
cmp
dec
je
sbb
and
(bad)
jnp
out
repz
ret
pop
cmc
stos
jb
dec
test
and
mov
cwde
nop
add
sahf
pop
add
cmps
pusha
jne
cmp
addr16
xchg
loope
sbb
and
adc
cmps
imul
inc
cmp
popa
loopne
fwait
sbb
clc
clc
mov
mov
jge
retf
repnz
stos
add
inc
repnz
popa
inc
mov
jno
into
int3
dec
lods
in
and
mov
cmps
hlt
int3
jecxz
jmp
push
(bad)
(bad)
js
push
push
lea
xchg
int3
and
and
std
lea
inc
jns
adc
lahf
push
fcomp
scas
sbb
cmp
enter
mov
scas
aam
sub
adc
xor
ins
test
pop
cli
inc
mov
and
cwde
push
mov
cmp
imul
into
retf
mov
rcl
nop
fistp
or
inc
dec
or
mov
push
mov
pop
xchg
imul
mov
fsub
sbb
jmp
sub
inc
mov
push
movs
jmp
shr
sub
xchg
je
out
jle
cwde
loope
addr16
mov
js
sti
test
sub
push
je
mov
jecxz
or
mov
nop
imul
push
push
(bad)
jmp
(bad)
adc
ret
rol
or
bound
(bad)
pop
(bad)
arpl
mov
inc
cwde
aam
les
jno
push
fimul
push
mov
fsubr
pop
xor
test
stc
dec
arpl
add
adc
pusha
mov
ins
xor
mov
cmp
or
inc
add
fstp
daa
mov
fadd
push
push
sub
outs
retf
(bad)
jnp
push
jge
dec
jno
arpl
sbb
xlat
call
dec
pop
mov
das
cmp
rol
jnp
js
out
push
push
je
repz
retf
dec
xor
xor
inc
retf
fwait
and
je
mov
in
(bad)
jb
sub
int
sub
into
push
xchg
lahf
xor
dec
or
dec
jle
jb
mov
data16
test
test
xor
icebp
(bad)
dec
pop
pushf
jb
adc
es
movs
and
fild
cs
push
ss
cmp
xchg
adc
cmp
clc
clc
fimul
(bad)
dec
cmp
fsubr
cli
dec
inc
cs
loopne
iret
xchg
xor
mov
sub
adc
inc
in
adc
push
in
sub
icebp
js
and
cmp
(bad)
cmps
fadd
add
mov
jo
dec
test
in
loop
jle
scas
lods
mov
daa
cmc
sub
cmc
cmp
or
movs
xor
test
xchg
ins
sub
retf
cli
js
ja
enter
mov
movs
xlat
std
xor
push
inc
in
fild
and
pop
sub
and
and
or
jmp
mov
rol
adc
mov
inc
and
sub
arpl
mov
pop
js
pop
inc
shr
sbb
xchg
bnd
dec
outs
int
movs
or
mov
out
sahf
mov
dec
jns
pop
mov
push
jmp
xor
fdiv
in
adc
jns
mov
xchg
or
daa
movs
push
(bad)
arpl
cmp
ins
cmp
repz
pop
lea
and
push
mov
or
rcl
jge
mov
xchg
push
popa
and
push
mov
pop
jnp
sub
jmp
inc
mov
cmp
adc
xor
add
jge
sbb
mov
in
movs
adc
sbb
je
jb
and
ss
cwde
add
cmp
ret
and
sti
dec
je
dec
cmp
sub
mov
jo
cmp
rol
inc
pop
dec
(bad)
push
or
push
test
test
add
push
jle
push
xchg
icebp
sub
int
call
ins
add
movs
add
addr16
jecxz
sbb
in
fmul
(bad)
jmp
sar
(bad)
cmps
rol
fcomp
sub
jge
mov
mov
aaa
test
mov
not
enter
fst
ins
popf
pop
and
sbb
jl
xlat
dec
and
pushf
lea
jae
mov
retf
aaa
dec
stos
push
call
mov
jbe
ds
push
mov
dec
or
mul
mov
addr16
add
jg
push
sub
arpl
fistp
or
mov
add
push
sbb
leave
imul
inc
xor
jg
mov
push
popf
adc
pop
clc
inc
je
xor
xor
(bad)
int3
mov
popa
lea
or
mov
cmps
int
das
mov
test
scas
jae
mov
out
add
in
les
sub
daa
fdiv
and
jecxz
pop
les
xlat
(bad)
loopne
xor
das
add
add
xor
sti
push
in
rcr
retf
mov
daa
inc
inc
cwde
cmc
test
loop
scas
stc
pop
loopne
mov
and
jb
xchg
inc
or
loop
repz
mov
cld
dec
push
add
pusha
fld
push
mov
mov
push
call
and
ds
cmp
pop
lds
xor
pop
data16
inc
(bad)
cmc
retf
jno
inc
scas
mov
push
test
mov
mov
sbb
cmps
jno
sbb
jae
int
mov
in
clc
inc
and
and
ss
hlt
cmp
mov
movs
cmps
mov
mov
push
movs
in
daa
mov
dec
xchg
sub
dec
pop
(bad)
cli
fcomp
scas
cmp
xchg
cli
movs
push
sub
cli
sbb
sti
add
xor
gs
add
xchg
jb
lods
jmp
inc
ret
ss
adc
mov
sbb
jo
add
cmps
popa
gs
xchg
fisubr
(bad)
inc
mov
mov
xchg
pop
pop
push
dec
pop
scas
sub
out
data16
ins
xor
jle
add
push
pop
stc
mov
xchg
inc
aaa
sub
ins
test
push
add
push
or
inc
xor
pop
xchg
mov
mov
sti
inc
jne
sub
ror
les
es
xor
cmp
aaa
adc
shr
mov
sub
movs
add
push
cwde
cmp
mov
lea
push
push
js
enter
mov
fdivr
jae
cmp
mov
inc
jo
sub
jae
xor
mov
(bad)
sbb
pop
(bad)
mov
sbb
jge
call
movs
popa
bound
push
sub
inc
adc
dec
jecxz
test
adc
jo
fwait
xor
adc
enter
inc
sbb
sbb
ja
mov
jp
fiadd
sbb
dec
outs
repnz
mov
div
sub
push
and
xchg
test
pop
hlt
lock
outs
fstp
cmp
jno
test
(bad)
cmp
mov
mov
inc
sbb
adc
or
xchg
cmp
push
xchg
mov
shl
or
mov
xor
test
and
scas
pop
mov
das
cwde
int
test
pop
xchg
xrelease
fisttp
jg
mov
in
sbb
adc
leave
lods
xor
mov
add
xchg
hlt
or
and
adc
aaa
dec
mov
mov
adc
data16
jne
pop
mov
neg
or
xchg
dec
lahf
jge
(bad)
mov
push
mov
(bad)
in
ja
dec
mov
gs
fild
push
sub
(bad)
repz
int
in
mov
in
rcl
cmps
mov
in
push
xor
pusha
sbb
adc
inc
lods
test
fmul
movq
add
ret
inc
jmp
and
std
xor
sub
cmps
and
enter
into
loopne
cmp
adc
mov
pop
pop
(bad)
stc
stos
jmp
aam
int
jecxz
test
test
and
cmp
cmp
sub
imul
jns
lods
js
dec
ror
cmc
ror
fadd
mov
fisubr
or
jo
fdiv
out
sub
lock
pop
or
cdq
jne
sbb
ins
(bad)
jecxz
add
scas
test
xchg
or
test
adc
pop
push
jg
(bad)
sbb
(bad)
stos
jne
sbb
push
repz
pusha
xchg
and
xchg
add
push
out
and
sbb
mov
sar
scas
xchg
addr16
cdq
fadd
sbb
sbb
test
into
(bad)
mov
nop
mov
jmp
pop
add
lds
loop
repnz
jg
pop
and
ret
shl
(bad)
cmps
inc
xor
or
push
test
pop
mov
out
pop
xchg
ins
ins
adc
jne
fbstp
cld
sbb
shl
fistp
push
in
ja
pop
dec
mov
xchg
sar
std
ins
inc
xchg
loopne
test
jne
mov
sub
sbb
mov
scas
sbb
test
pop
je
retf
mov
mov
cmp
mov
inc
aaa
fyl2xp1
adc
jnp
and
sbb
stos
hlt
dec
stc
push
xchg
sbb
ja
dec
int
dec
test
popf
sub
adc
inc
xor
mov
je
aad
popf
clc
fwait
popa
add
xor
jbe
push
and
es
fs
xor
jno
pop
jo
(bad)
push
xchg
je
cmc
dec
dec
bound
mov
popa
mov
xor
scas
sub
(bad)
and
ja
lea
cmps
mov
(bad)
gs
push
js
pushf
fsubr
add
push
lods
push
xchg
(bad)
inc
pop
jg
inc
cmp
xor
jns
pop
mov
mov
retf
sahf
or
rol
rcl
bound
jmp
mov
mov
in
xchg
and
mov
add
cmp
enter
cs
mov
xchg
mov
dec
movs
xchg
sub
imul
mov
retf
mov
out
(bad)
push
popa
test
call
xchg
fstp
mov
jle
cdq
pusha
mov
xchg
adc
dec
leave
cdq
pop
push
inc
pop
(bad)
int
cdq
(bad)
mov
mov
test
loope
in
movs
sahf
cmp
xlat
cmp
bound
(bad)
(bad)
pop
pop
pop
mov
mov
outs
ret
add
dec
pop
sbb
repz
push
xor
adc
sbb
pop
dec
sar
repz
mov
or
sub
adc
xor
sbb
out
cwde
daa
sub
mov
inc
mov
ja
lock
xor
popf
jle
rol
jg
daa
adc
mov
push
lahf
pop
dec
and
xchg
and
jp
xor
mov
jae
cwde
lea
mov
dec
ins
inc
inc
fs
sub
aas
sahf
loopne
pop
xor
or
test
dec
ds
and
add
xchg
pop
test
repz
and
fwait
adc
mov
jl
movs
das
xchg
pop
push
jb
push
xor
fst
or
dec
inc
inc
push
rcl
mov
push
cmp
fld
adc
(bad)
cmp
sub
aaa
adc
call
aam
pop
pop
push
outs
cmc
push
push
push
sahf
jae
or
add
xchg
cmps
add
pop
or
pushf
std
cmp
adc
cdq
mov
pop
and
xor
iret
inc
adc
jae
push
lock
movs
pop
ds
mov
xchg
jns
dec
jmp
stc
inc
cmp
mov
js
fdiv
adc
xor
mov
les
das
pop
adc
imul
cmp
les
xchg
and
popa
cld
pop
lds
mov
xchg
mov
test
xor
mov
mov
jmp
nop
sub
cmp
sti
popa
cli
cmp
lea
dec
jo
jns
push
add
aaa
icebp
jge
and
imul
jae
pop
ins
xlat
or
sbb
les
rcr
adc
sti
mov
in
fcmovnbe
jle
mov
aas
(bad)
dec
call
push
sbb
sbb
sbb
pop
mov
pop
jecxz
pop
ds
inc
mov
addr16
mov
mov
jp
cmps
or
pop
jmp
sti
or
mov
retf
cmp
shr
sub
test
fisub
dec
call
jge
retf
pop
add
cmp
dec
and
cmp
ss
push
dec
push
cmp
fcmovne
outs
jo
sbb
pop
jo
xchg
jo
xor
fldcw
xchg
into
push
stc
or
popa
das
mov
pop
mov
and
xor
push
retf
add
xor
fdivr
in
fsub
lods
nop
mov
or
cmp
mov
(bad)
jae
imul
xor
sbb
retf
dec
stos
pop
ret
aad
sbb
adc
das
(bad)
pusha
ret
pop
fs
dec
shl
dec
mul
jmp
or
mov
cmp
loopne
leave
or
fnstsw
add
cmps
add
shr
ret
aad
pop
xchg
and
cmp
(bad)
sub
xchg
sbb
retf
or
dec
jns
mov
mov
adc
jg
inc
push
push
out
jle
lahf
inc
sub
(bad)
out
cmp
add
xor
imul
cmps
lods
mov
dec
mov
xchg
push
repnz
call
add
sub
(bad)
call
adc
popa
mov
mov
scas
mov
jge
in
cmp
mov
hlt
jmp
in
adc
push
jl
add
imul
sub
hlt
xlat
outs
sub
imul
pop
jmp
cmp
push
adc
pusha
push
xor
pop
ror
out
adc
push
cdq
sub
loopne
rcl
ss
and
pusha
and
xchg
dec
dec
inc
nop
xor
push
imul
or
jge
gs
xchg
adc
mov
shr
imul
fwait
push
rcl
or
lea
mov
cld
push
pop
mov
mov
sub
lahf
dec
inc
lods
push
or
arpl
pop
push
pop
add
and
jg
sub
lahf
dec
scas
add
jbe
jnp
inc
hlt
jnp
test
push
or
add
lods
(bad)
push
sbb
mov
dec
xchg
dec
mov
fsubr
and
loop
out
add
clc
sub
push
call
(bad)
sbb
jge
popf
lods
or
ins
in
inc
jae
in
pop
push
cmp
jb
ja
ins
jmp
test
popa
jle
jge
inc
mov
xor
popa
mov
dec
mov
sub
out
cmps
mov
aas
in
xor
mov
imul
mov
push
mov
adc
dec
mov
jno
fadd
neg
mov
xor
ja
mov
push
cld
call
mov
test
xchg
xor
jmp
mov
in
push
cmp
mov
inc
sub
test
inc
loop
xor
or
pop
fcmovu
int
fwait
push
imul
(bad)
aaa
call
movs
les
xor
int
stos
into
push
cmp
aaa
push
aaa
out
dec
mov
sbb
add
in
jle
jae
mov
sbb
je
cli
mov
or
xchg
sar
enter
adc
(bad)
enter
add
popa
imul
sbb
xor
mov
push
in
in
sar
cmp
mov
xchg
dec
popa
dec
in
pop
mov
jl
stos
mov
test
push
out
je
xlat
cmp
(bad)
sub
push
or
push
aad
outs
dec
mov
(bad)
dec
aas
popa
loope
das
dec
pop
rol
(bad)
loopne
(bad)
adc
mov
pmuludq
enter
aaa
and
pusha
inc
lods
stos
inc
lods
in
fmul
push
leave
outs
push
mov
cmps
popf
jg
jb
dec
dec
retf
jbe
out
cmovo
adc
sub
icebp
lock
sar
aam
fimul
mov
inc
jnp
inc
fs
daa
mov
repz
sbb
retf
lahf
mov
xchg
into
(bad)
cld
jb
sbb
sub
in
sbb
cmp
ret
mov
inc
xchg
rcr
leave
test
and
pop
mov
lea
dec
jmp
int3
popa
jge
int
test
ss
ret
test
jne
cmps
and
jo
popa
and
pusha
cmp
test
rol
push
sub
outs
mov
outs
and
add
scas
sub
(bad)
inc
mov
xchg
sub
mov
shr
or
mov
jmp
add
mov
adc
dec
sub
test
adc
dec
ret
pusha
and
enter
outs
push
cmp
sbb
push
cmps
repz
sti
in
out
cmc
dec
mov
pop
mov
outs
cmc
out
dec
or
jno
scas
test
and
cmps
push
jns
les
cmps
push
mov
xchg
push
fs
mov
xchg
(bad)
pop
mov
out
push
out
cmp
int
cdq
clc
xchg
pusha
push
xchg
push
enter
adc
jmp
sbb
or
and
enter
iret
daa
dec
(bad)
mov
mov
clc
inc
and
cmovl
(bad)
int3
ret
sub
mov
test
imul
test
jo
cmp
fs
std
pop
add
in
call
ds
repnz
inc
xor
xchg
mov
pop
mov
xlat
test
fwait
push
adc
movs
in
adc
int
push
mov
adc
cwde
inc
cld
cmp
in
hlt
mov
outs
fisubr
shr
fsub
stos
popf
clc
pop
push
inc
inc
in
sbb
push
cwde
jnp
mov
call
mov
(bad)
cmp
repnz
mov
pop
stos
xchg
imul
mov
fidivr
pop
push
pop
test
xlat
push
lds
ins
cli
push
aas
or
pop
repz
push
mov
xchg
and
add
fwait
sub
pop
ret
xchg
jg
pop
mov
fcomp
outs
inc
push
cmp
jne
jb
outs
sar
add
cmp
cmp
jb
add
dec
jecxz
out
out
mov
ins
dec
mov
mov
lods
dec
mov
not
adc
movs
scas
xor
or
jecxz
fwait
retf
inc
adc
aad
lods
cmp
fs
inc
leave
push
daa
test
cmps
dec
cmp
dec
dec
jl
pop
mov
inc
sbb
jecxz
dec
add
adc
jmp
ja
retf
(bad)
(bad)
aad
cmp
or
dec
xlat
test
sar
add
mov
add
mov
out
rol
dec
adc
xor
xlat
mov
xor
bswap
cs
mov
sub
sahf
fcom
popf
outs
mov
int
fwait
jmp
adc
xlat
jns
data16
push
pop
and
xchg
fwait
clc
sbb
push
test
push
icebp
jge
addr16
jns
or
push
cmp
mov
sbb
nop
in
mov
test
mov
adc
rcl
and
mov
call
xor
sbb
ds
jb
pop
repz
ja
popa
push
ret
popf
xchg
ss
pop
retf
and
mov
clc
dec
mov
push
cmc
mov
ja
push
xlat
push
pop
js
mov
mov
jb
add
inc
cdq
adc
dec
ds
jns
shl
nop
test
and
loope
xchg
jbe
mov
es
pop
fidivr
fwait
hlt
lahf
mov
aas
mov
dec
(bad)
cmps
in
mov
pushfw
jp
imul
jp
sbb
out
add
retf
xchg
mov
sub
mov
aaa
fs
rcl
int3
mov
pop
and
mov
and
jle
fsubr
mov
jbe
pop
test
jge
stos
les
jl
retf
and
pop
push
aas
fisub
mov
shl
sub
add
inc
std
arpl
outs
xchg
ror
cmps
lahf
jmp
ss
(bad)
pop
imul
enter
sbb
ja
cwde
xor
xchg
and
mov
pminub
hlt
and
outs
cmp
(bad)
fwait
imul
fstp
jbe
add
movs
xchg
mov
xor
aam
dec
pop
mov
in
iret
and
mov
push
xor
adc
shl
mov
xchg
dec
or
das
xor
sub
dec
sbb
ja
pop
cmc
dec
cmc
scas
push
loop
push
ficomp
jmp
(bad)
jge
outs
and
push
(bad)
adc
push
or
retf
jbe
and
jg
mov
inc
dec
popa
and
inc
xor
jp
ret
xchg
push
xor
mov
ret
pop
cmp
xchg
fisttp
dec
js
pop
pop
call
add
lods
sub
cmp
into
sbb
cdq
aam
adc
push
test
gs
in
movs
lds
movs
inc
push
bound
inc
sti
push
nop
(bad)
cmp
inc
lock
xchg
push
pushf
cdq
fisttp
inc
mov
mov
je
jns
icebp
leave
ret
mov
fnstenv
fsubr
mov
pop
and
adc
xor
lahf
mov
adc
loope
in
mov
xchg
imul
(bad)
das
mov
xchg
dec
adc
iret
je
cmp
fsubrp
mov
out
out
xor
ins
sub
jmp
sbb
test
dec
dec
lahf
repnz
cmp
loopne
aas
shl
or
sub
cmp
push
cdq
mov
out
imul
adc
stos
in
and
sbb
mov
aas
nop
jmp
loope
ds
rcr
or
scas
daa
es
xor
ss
or
xchg
xchg
xlat
movs
add
inc
test
nop
xor
iret
sub
mov
adc
and
or
inc
mov
mov
mov
stc
push
cmp
or
popa
add
imul
mov
fdiv
and
cmps
add
test
out
bound
out
std
xchg
push
fcmove
int3
add
lahf
push
mov
cdq
ins
(bad)
sub
pop
in
pushf
sub
ret
ret
dec
or
jge
mov
(bad)
xchg
inc
pushf
stc
movs
adc
test
sub
mov
aam
pop
rcl
inc
xchg
push
push
xchg
loop
out
pop
add
call
xchg
pushf
ins
and
xchg
fild
pop
je
dec
jo
jecxz
jnp
lods
dec
sbb
dec
mov
mov
xchg
(bad)
in
lock
sbb
fnstsw
retf
in
js
jo
lock
xchg
xchg
mov
(bad)
imul
jl
inc
dec
int3
push
push
cmp
mov
push
lds
pusha
jne
push
popa
inc
out
test
dec
sub
outs
or
pop
(bad)
scas
ja
ja
lea
sub
push
das
inc
sub
jnp
mov
adc
jns
rcl
sub
push
inc
cmp
cmps
mov
and
sub
popa
jecxz
sub
mov
cld
lock
stos
fs
mov
jecxz
dec
cmp
aas
xchg
jge
or
(bad)
nop
add
(bad)
sub
shl
enter
aaa
and
mov
xchg
sub
(bad)
jmp
mov
jg
ins
hlt
pusha
xlat
mov
mov
xchg
add
idiv
sub
stos
mov
xor
ins
sub
retf
mov
cli
cmps
cmp
arpl
cmps
out
idiv
mov
gs
lea
jg
xor
imul
push
push
lahf
mov
sbb
xchg
mov
xchg
mov
inc
test
sub
mov
aaa
push
or
das
fstp
push
mov
ins
icebp
hlt
daa
sub
in
xor
pusha
lea
pop
jns
dec
and
je
ins
or
jns
mov
inc
push
mov
or
aas
pop
test
rcr
or
inc
jmp
sub
das
or
fisubr
lea
data16
jp
fsub
movs
inc
mov
fidiv
int
and
cmps
std
jp
(bad)
cdq
ins
nop
in
cmova
xchg
dec
ret
inc
call
sar
pop
mov
in
mov
shr
pop
fstp
jns
pop
mov
imul
mov
push
xor
push
sub
xor
xchg
test
add
sub
or
repz
add
dec
jnp
out
sbb
outs
push
xchg
mov
inc
push
mov
retf
aad
cs
xlat
aas
jo
iret
sbb
cli
dec
mov
and
cmps
lock
fld
jno
xchg
sbb
daa
pop
inc
sbb
cmp
cs
dec
cmp
pushf
shr
cld
pop
pop
xchg
inc
in
stos
xchg
jge
push
xor
rep
mov
call
mov
xor
fdiv
adc
out
cmp
fmul
retf
jg
scas
iret
call
leave
inc
jo
(bad)
cmps
and
jecxz
inc
pusha
pop
leave
cwde
dec
das
sar
ror
adc
dec
fstp
daa
push
xor
clc
call
ret
aad
cmp
aad
push
test
ss
js
mov
pop
jle
out
test
aaa
sahf
fidiv
sar
sti
inc
mov
and
inc
loopne
mov
mov
mov
mov
adc
mov
fmul
push
ds
ret
cmp
in
or
mov
leave
dec
xchg
(bad)
jmp
js
push
icebp
inc
jae
cmps
jne
xchg
sub
pop
es
adc
fndisi(8087
test
or
xchg
push
jmp
in
lahf
lahf
inc
ds
sar
je
adc
not
pop
aad
push
shl
popf
in
jmp
in
outs
cmp
call
lds
cmp
cmp
pushf
sub
stos
adc
jg
mov
arpl
and
inc
add
test
inc
add
pop
push
adc
cdq
movs
or
sti
jno
xchg
out
dec
imul
jl
(bad)
push
in
mov
les
push
adc
add
and
fsub
push
pop
or
sub
ror
inc
jl
jmp
inc
out
add
and
mov
(bad)
sbb
fidiv
sbb
cmc
clc
pushf
cmp
inc
lods
xchg
sub
sub
mov
sub
mov
rcl
sub
jge
mov
xchg
xor
sub
fwait
mov
lods
shr
mov
cmp
sub
fst
and
pushf
dec
cmp
and
jnp
cmc
addr16
xor
int
inc
rcl
or
jb
std
out
push
inc
xchg
pop
jle
imul
or
stc
not
xor
mov
cmp
cmp
xchg
xor
xor
mov
jmp
setg
into
bound
cmp
idiv
xchg
and
jp
nop
daa
clc
sbb
jg
popf
stos
push
neg
push
arpl
enter
mov
sbb
fidiv
es
xor
xor
ficom
cmp
adc
ds
push
fdivr
sub
and
pop
aad
int3
jmp
jg
neg
repz
shl
xchg
sbb
and
jle
mov
mov
xchg
imul
test
iret
xchg
inc
je
cmps
mov
xchg
mov
bound
add
and
add
div
loope
imul
lock
(bad)
mov
sbb
mov
xchg
cmp
aaa
xor
mov
add
nop
imul
into
cmc
jl
sub
lock
xor
add
dec
stos
movs
add
push
jno
mov
xor
and
std
cmp
adc
or
repz
out
outs
sbb
add
imul
and
add
jge
xor
mov
dec
lods
shr
inc
cmp
mov
jle
mov
loop
push
test
ror
sub
or
aam
sub
add
cmp
sbb
mov
and
pop
jnp
into
adc
jae
dec
sub
pop
or
or
inc
movs
fld
int
add
cmp
xchg
and
outs
and
enter
dec
dec
rcl
call
sbb
icebp
dec
and
ficom
inc
cmp
pop
ret
in
js
xchg
and
lods
inc
ds
sbb
scas
inc
test
mov
push
in
fwait
sub
push
ja
push
xchg
inc
call
repz
or
or
sub
lock
xchg
aas
xchg
push
and
popf
and
loopne
test
jge
add
ret
mov
and
push
or
sbb
rol
loop
jae
ror
sub
movs
stos
int3
adc
xor
dec
cmp
jo
push
arpl
xchg
test
and
jb
pop
or
cmp
pop
into
cmp
jbe
call
mov
ja
jmp
add
lock
pop
rcl
sbb
xor
test
scas
fcomp
cmp
jo
mov
sti
pop
fld
ins
ret
jbe
ja
jns
and
xor
mov
shl
imul
fdivr
add
aam
push
add
jne
leave
jge
(bad)
jg
fbld
fcmovb
jo
mov
dec
clc
ret
mov
inc
movs
jle
ja
sahf
hlt
xchg
jp
adc
dec
fadd
ror
push
test
test
xchg
fisttp
adc
push
scas
jecxz
inc
shr
js
clc
outs
in
sub
jbe
mov
inc
xor
dec
dec
mov
lahf
out
push
out
fist
push
lods
xor
sub
cwde
int3
stos
ss
xchg
and
test
int3
push
mov
mov
xor
loopne
(bad)
mov
add
popa
rcr
fmul
mov
rcl
fst
fnstsw
fwait
mov
shl
mov
xlat
xor
mov
adc
sub
in
in
shl
loopne
addr16
or
or
stos
popf
jp
shr
out
ret
ret
data16
pop
test
loope
dec
mov
stc
into
popa
jnp
jl
gs
lahf
inc
or
sti
adc
pop
das
push
inc
xor
xlat
or
push
dec
add
bound
dec
push
cli
call
mov
(bad)
mov
pop
(bad)
xchg
dec
aam
stc
push
outs
sub
test
xchg
or
test
lock
and
mov
icebp
add
add
mov
mov
fwait
in
dec
push
in
push
neg
leave
add
or
jmp
xor
sub
lods
dec
test
int
nop
and
call
xchg
imul
lock
fprem1
ja
dec
test
push
ror
mov
test
pop
jb
xchg
repnz
pop
out
sub
pop
or
movs
jb
add
fadd
dec
adc
mov
aad
sbb
xor
in
push
fld
fwait
test
mov
jb
arpl
push
shr
pusha
xchg
fmul
add
xchg
add
loop
retf
in
int3
fisub
movs
adc
sub
xlat
mov
arpl
mov
cmps
fisub
sub
and
out
xchg
enter
fcomp
push
jmp
ss
ficom
and
pop
sub
inc
xchg
push
and
je
stos
sub
cmp
retf
enter
movs
stc
icebp
add
lods
push
and
push
dec
outs
sbb
pop
in
adc
lahf
icebp
adc
stos
inc
(bad)
mov
outs
mov
sub
pop
pop
inc
fwait
les
cs
sbb
pop
popa
jg
push
pop
adc
and
lds
mov
pusha
outs
mov
adc
popf
(bad)
out
loope
and
cmp
repnz
mov
shr
inc
xchg
mov
fst
ins
in
mov
mov
jns
in
lea
data16
ss
(bad)
jecxz
movs
dec
push
dec
mov
movs
loop
mov
adc
je
mov
idiv
and
sub
pop
xor
push
call
std
mov
imul
jbe
retf
xchg
aaa
into
xchg
aaa
mov
xor
arpl
xchg
xchg
dec
mov
sbb
dec
hlt
out
icebp
sub
xor
outs
jg
push
repnz
mov
rol
cmps
jb
dec
sar
shr
mov
dec
jns
sub
mov
clc
push
xchg
jno
dec
push
(bad)
pop
mov
mov
inc
sahf
mov
dec
jg
inc
stos
push
or
sub
(bad)
paddsb
jl
mov
jo
sub
cmps
or
mov
cwde
pop
sti
test
xchg
leave
ret
jnp
push
shr
stc
nop
repnz
ins
fld
inc
ss
add
inc
jb
int3
popf
mov
ret
pop
mov
adc
outs
xchg
cmps
mov
loop
js
gs
aas
sub
mov
ret
cdq
push
enter
loop
stos
push
fistp
mov
add
into
pop
(bad)
add
add
mov
push
call
sub
test
enter
ja
ins
shl
xchg
mov
adc
mov
(bad)
xchg
add
dec
mov
das
mov
jnp
pop
inc
icebp
js
push
ins
jno
out
xchg
in
and
mov
rcl
nop
data16
(bad)
mov
pop
(bad)
std
and
call
push
and
push
pop
sbb
outs
and
fcomp
or
pop
dec
jp
call
dec
ret
mov
and
popf
pusha
lea
and
icebp
setle
mov
out
push
mov
(bad)
push
xor
pushf
hlt
in
scas
stos
jge
xchg
cli
sbb
add
call
push
in
shr
lahf
adc
cmps
ins
mov
ss
je
adc
pop
out
mov
cmps
xor
out
xor
jg
popf
lods
sahf
test
test
in
into
ret
das
adc
retf
adc
mov
in
jecxz
addr16
push
adc
xor
push
pop
xchg
jnp
mov
sar
xchg
push
or
imul
std
jae
pop
add
test
xor
jnp
and
repnz
push
ins
and
mov
xchg
es
mov
ret
dec
sbb
mov
add
ds
retf
call
or
and
mov
push
add
in
ds
sbb
(bad)
and
es
test
xchg
jae
xchg
adc
or
mov
rol
pop
shl
lock
sbb
inc
mov
call
mov
sub
in
mov
xor
adc
pop
inc
pop
or
sub
dec
int
stos
jns
cli
cmp
mov
mov
retf
cmps
mov
or
jmp
jae
cli
shl
pusha
dec
adc
cmps
sbb
xchg
stos
jne
mov
mov
test
clc
test
mov
sub
dec
cmps
or
or
ss
mov
push
add
ret
pop
into
inc
and
into
and
scas
paddq
add
push
pop
sti
pop
sti
push
pop
xor
aas
pop
shl
je
mov
sub
push
pop
mov
sbb
(bad)
xchg
mov
int3
call
mov
adc
ror
sub
into
rol
push
(bad)
popa
test
mov
mov
mov
icebp
and
adc
xchg
mov
nop
outs
xchg
rol
sub
call
or
inc
pop
jmp
ds
sbb
fmul
clc
lods
popa
rep
stc
call
fwait
sub
and
imul
pop
out
push
fsub
mov
outs
dec
cmps
aad
shl
(bad)
dec
(bad)
clc
pop
jnp
int3
int
sbb
aaa
inc
in
movs
nop
jmp
xchg
adc
outs
xchg
dec
sub
lahf
push
repz
popa
test
retf
add
in
jnp
lea
sub
cld
pop
jmp
and
inc
mov
ins
lods
push
retf
add
xchg
mul
(bad)
xor
adc
(bad)
cli
je
outs
in
std
adc
inc
adc
mov
jmp
adc
inc
rol
nop
jno
and
push
mov
ss
es
scas
cmp
nop
fsubp
inc
fnstsw
push
(bad)
pop
or
add
jg
cmp
cmp
sub
lea
dec
dec
lds
xchg
xchg
pop
push
mov
cmp
or
mov
sbb
mov
mov
(bad)
and
xor
push
jecxz
in
cmp
xchg
jge
retf
fdiv
sub
cmps
jne
cmps
cmps
jo
mov
dec
ds
sbb
std
jmp
xchg
je
dec
jle
ja
jmp
mov
mov
sub
sub
jp
xor
and
sub
mov
lods
cmps
shr
cmp
jl
lock
inc
fdivp
jp
cwde
test
push
int3
push
out
pop
in
neg
pop
std
popa
cdq
(bad)
cld
dec
movs
push
ins
loope
test
push
out
inc
cld
sub
cwde
sub
xabort
adc
push
pop
sahf
rcl
in
adc
daa
pop
shl
xor
cmp
push
pop
test
xchg
or
test
jno
push
popf
inc
dec
xchg
sub
mov
cmps
or
stc
in
pushf
iret
adc
popf
and
xchg
and
mov
pop
push
int
fst
and
leave
popf
stos
cdq
in
pushf
dec
mov
call
mov
or
test
adc
xchg
ja
shl
mov
push
ins
mov
pop
pop
dec
fcmovb
push
jbe
sub
pop
cmp
jbe
sti
push
push
(bad)
test
inc
cmp
mov
aam
stos
mov
in
je
jae
ret
adc
es
cmp
xchg
dec
hlt
out
pushf
xor
outs
inc
push
and
call
je
stos
lahf
pop
data16
ins
dec
xchg
dec
xchg
jne
sub
ret
call
jno
mov
es
inc
pop
test
jmp
mov
mov
out
push
push
imul
adc
fimul
push
push
out
add
outs
js
xchg
into
push
and
add
add
add
jl
xchg
or
jmp
lock
popf
int3
and
cmp
mov
sub
inc
mov
xor
xchg
cmp
(bad)
fisubr
dec
or
lahf
das
ret
(bad)
mov
or
pop
xor
dec
push
popf
mov
rcl
jle
bnd
retf
mov
xor
jmp
mov
mov
dec
dec
popa
push
mov
push
gs
nop
jb
outs
js
mov
add
movs
rcr
movs
retf
nop
mov
xor
or
mov
lods
scas
loope
or
and
shl
cmps
fst
loopne
loopne
push
add
out
lds
rcl
jo
sub
xor
das
pushf
das
adc
dec
in
push
add
mov
and
pop
mov
push
push
(bad)
push
mov
push
mov
mov
inc
sub
mov
jae
iret
xor
xor
mov
cmp
mov
into
pop
movs
test
pop
pop
jne
xchg
jle
mov
pop
cmps
das
mov
movs
sbb
lea
adc
mov
pushf
push
jmp
xchg
jmp
mov
inc
test
cmps
pop
mov
and
mov
icebp
adc
adc
std
sub
push
mov
adc
jmp
mov
pop
xchg
movs
sub
dec
nop
pop
pop
sbb
jns
cmp
xchg
rcl
jecxz
sbb
or
(bad)
cmc
mov
ret
mov
sha1rnds4
cmp
in
repz
gs
lds
les
shl
cmps
dec
(bad)
push
iret
call
std
clc
inc
fdivr
dec
pop
cmps
pop
pushf
arpl
repz
and
and
ds
mov
daa
stos
adc
aas
sti
add
adc
mov
dec
or
pop
cli
and
xor
lock
mov
inc
sbb
pop
outs
mov
std
div
std
ss
imul
xchg
or
scas
adc
jne
test
bound
xchg
jl
cs
(bad)
sbb
mov
jo
pop
(bad)
inc
xchg
mov
jle
ins
frstor
outs
(bad)
(bad)
retf
imul
cmp
(bad)
ficomp
dec
xchg
sahf
and
jg
jge
jnp
jbe
mov
xchg
cmp
jnp
or
sar
inc
mov
mov
clc
dec
mov
xor
(bad)
cld
in
sbb
shl
imul
jmp
adc
mov
cmp
cmc
and
and
das
xor
cmp
fcomp
push
mov
mov
out
jno
xchg
or
retf
inc
addr16
xchg
test
and
loop
shl
int
sub
mov
(bad)
shl
data16
mov
pop
or
stos
push
push
xchg
mov
push
aas
inc
jns
and
stc
sti
pop
clc
mov
sbb
fisub
sti
inc
mov
scas
cwde
adc
ror
cmc
pop
fmulp
push
mov
fbstp
add
mov
es
jp
pop
jno
dec
sub
popf
in
ds
xchg
clc
inc
mov
xchg
ficom
mov
sar
mov
fs
add
dec
or
pop
shl
dec
mov
lods
cwde
xor
xchg
ins
mov
jg
icebp
pop
xchg
js
sbb
sub
js
std
int
loop
fcom
pushf
cmp
(bad)
jmp
cmps
push
dec
cmp
arpl
test
mov
cmc
arpl
test
cmp
dec
stos
pop
leave
dec
mov
fild
adc
pop
pop
xchg
inc
retf
int
mov
movs
sub
enter
into
hlt
mov
cmp
sti
bnd
pop
sbb
aaa
mov
inc
fadd
or
xchg
imul
jbe
sbb
jge
loop
pop
ds
jb
mov
cld
enter
dec
xor
xlat
es
xchg
loopne
cmp
nop
add
icebp
mov
fmul
jb
aas
jo
xor
dec
jl
int
lods
fisub
xchg
lods
pusha
mov
repz
pop
mov
adc
shl
mov
repnz
ret
mov
iret
mov
dec
retf
jg
shr
push
loopne
fnsave
adc
xchg
add
ja
push
addr16
scas
xchg
xchg
scas
fwait
inc
pop
clc
popf
add
mov
mov
(bad)
adc
add
aad
loopne
lea
ds
cmp
xchg
jae
cmp
sub
jnp
cld
push
mov
and
or
fucomip
push
dec
sbb
popa
outs
pop
add
bound
in
retf
fisttp
cli
inc
movaps
mov
out
cmps
and
inc
mov
inc
push
xchg
out
mov
cli
sbb
fnstcw
aas
fstp
mov
addr16
movs
push
mov
into
mov
(bad)
int
mov
jg
call
loopne
pop
jnp
dec
rol
add
inc
icebp
push
(bad)
popf
mov
js
jl
jae
mov
pop
loopne
sbb
jmp
gs
ret
lock
(bad)
mov
dec
pop
inc
jge
ret
xchg
and
adc
icebp
imul
jge
scas
out
jge
pop
xchg
cs
adc
(bad)
adc
pushf
pop
jbe
rcl
push
ror
ret
sub
and
and
out
adc
push
loop
(bad)
scas
jne
xor
mov
cmp
push
cmp
clc
and
jne
std
pop
js
(bad)
mov
dec
cld
cmp
add
jecxz
pusha
arpl
cmp
mov
cld
jg
imul
sub
adc
or
lahf
add
jecxz
out
xchg
loop
sub
(bad)
mov
dec
test
pop
ficomp
pop
and
je
mov
mov
in
aas
mov
call
test
iret
sbb
jns
mov
retf
sar
mov
enter
lea
cld
aam
imul
ja
push
clc
mov
test
add
(bad)
cmps
lods
fistp
dec
aas
loop
xor
pop
daa
arpl
jno
sysenter
rol
fs
outs
inc
loopne
xor
add
das
int
daa
neg
pushf
or
sahf
aam
xchg
or
ret
xor
cmp
sti
pop
sub
jg
out
mov
xchg
inc
cmps
push
jmp
dec
ja
popf
xor
sub
xor
dec
std
aaa
adc
or
iret
in
sub
push
push
inc
mov
jo
retf
push
pop
ret
rol
rsm
pop
cmps
and
addr16
push
fdivr
mov
sub
sbb
xchg
lock
out
mov
int
add
and
xor
sbb
jge
mov
aad
sub
lock
inc
adc
repz
(bad)
shr
out
ss
mov
or
aad
addr16
outs
scas
mov
xor
cmc
imul
adc
sbb
push
popf
outs
inc
in
fisub
pusha
sub
xchg
jbe
xor
ret
mov
ja
fwait
inc
jl
mov
sub
push
xchg
mov
sub
scas
(bad)
pop
adc
sar
shl
xor
call
or
mov
(bad)
movs
pop
fcomp
sbb
xchg
ins
es
das
add
mov
push
mov
cmps
aam
stos
lods
fs
adc
retf
jb
inc
je
retf
popa
call
call
cmps
scas
imul
lea
or
dec
leave
aas
mov
mov
fadd
in
inc
cmp
fidivr
push
push
or
jno
nop
xor
aam
lock
mov
xchg
mov
sbb
enter
aas
sti
dec
(bad)
scas
xchg
shl
mov
xchg
mov
sub
xor
cld
stos
dec
pop
sbb
dec
jbe
stc
mov
mov
fwait
into
fmul
movs
popf
xchg
adc
dec
jne
xor
and
ret
scas
pop
jl
hlt
loope
jge
inc
or
adc
pop
mov
std
es
sub
clc
data16
jle
(bad)
adc
loop
test
pop
bound
xchg
nop
out
mov
push
dec
mov
test
pop
adc
ret
pushf
data16
sbb
dec
and
icebp
push
in
cld
xchg
cmps
call
(bad)
sahf
iret
test
jmp
push
jmp
daa
mov
dec
fwait
adc
fisttp
rcl
ins
push
dec
in
jecxz
cmp
sbb
ror
shr
push
cmp
test
out
pop
into
(bad)
sbb
xor
imul
xchg
push
ja
lea
lea
cmp
ja
int
in
push
jmp
retf
outs
fs
and
add
enter
std
inc
mov
in
cld
stos
xchg
loopne
cmovae
mov
call
fdivr
in
call
loope
adc
jb
fstp
push
jp
mov
sahf
sub
sbb
sbb
retf
add
(bad)
cli
icebp
mov
jle
or
pushf
jbe
jns
cmp
xchg
pop
fsubrp
mov
push
dec
jno
mov
js
fldl2e
ins
sbb
movs
call
cld
in
ins
pop
shl
out
push
jno
lahf
lods
mov
xor
jge
ret
xor
push
xor
jne
cmp
ins
imul
mov
repz
cmp
mov
push
test
sbb
adc
dec
call
or
div
and
and
push
stos
neg
push
dec
push
add
test
pop
dec
(bad)
(bad)
gs
push
imul
and
stos
imul
mov
(bad)
and
sahf
sbb
inc
in
add
rcl
fcom
in
out
xchg
shl
stc
jbe
sar
scas
mov
xchg
and
dec
mov
adc
mov
fucomp
ret
(bad)
es
sub
adc
adc
cs
ficomp
cmp
mov
mov
jecxz
imul
jae
fs
xor
mov
fistp
jne
jle
push
push
add
lea
push
std
retf
mov
or
push
sub
mov
stc
sar
mov
pop
dec
push
retf
pop
mov
iret
and
call
push
pop
loope
lock
push
jb
ins
or
sub
retf
add
adc
dec
sti
mov
arpl
gs
lock
and
in
leave
arpl
ds
inc
sahf
(bad)
es
cmp
push
jg
mov
pushf
sar
mov
sub
mov
aam
stc
add
leave
xor
sahf
repnz
cs
lahf
ds
mov
daa
dec
imul
cmp
fs
bound
xor
imul
ja
in
arpl
xchg
xlat
sub
or
arpl
xchg
cmp
and
mov
jg
pop
scas
jecxz
mov
xor
pusha
popa
or
dec
xor
fidiv
bswap
outs
dec
adc
xor
popa
ret
mov
inc
popf
lea
sbb
cli
push
mov
mov
pop
shl
movs
push
jecxz
into
mov
mov
fcomp
lock
push
ja
pop
jg
xor
or
sub
retf
cmc
lods
sbb
inc
mov
inc
in
dec
xchg
pop
mov
mov
push
aaa
pop
xlat
cdq
(bad)
idiv
inc
pop
into
fdiv
push
pusha
sbb
adc
adc
dec
js
nop
add
mov
mov
fs
pop
addr16
push
xor
xor
jns
and
push
fs
ficom
fldenv
shl
aas
popa
push
lock
shl
push
xchg
adc
mov
sub
rcr
pop
(bad)
fwait
rol
or
mov
iret
or
(bad)
(bad)
jg
imul
sar
out
sbb
add
ret
(bad)
mov
dec
inc
shl
or
or
and
mov
fs
js
jl
cmp
dec
cli
jg
fucom
fdiv
push
sbb
or
cmp
adc
ins
push
aad
aas
jae
or
jecxz
push
mov
pop
cdq
pusha
or
and
push
push
and
lds
cmp
into
jae
pop
std
or
and
call
es
imul
lahf
stos
xchg
or
xchg
rcl
pushf
mov
adc
pop
dec
mov
leave
sub
shl
loop
jb
mov
movs
shl
mov
aam
out
add
push
push
mul
mov
cmp
fidiv
pushf
pop
and
fstp
or
cdq
shr
in
loop
mov
iret
inc
int3
xchg
mov
mov
out
rcl
cmp
mov
inc
idiv
jmp
cmps
aas
pop
sti
rol
push
(bad)
test
push
fnstsw
es
push
mov
dec
or
mov
imul
clc
xor
push
out
xchg
bound
stos
imul
pop
ss
push
or
in
fmul
inc
cmc
xchg
pop
mov
loope
push
addr16
or
pop
int3
data16
stos
mov
shl
push
xlat
sub
or
mov
fdiv
mov
scas
lds
mov
add
and
inc
clc
sub
jne
retf
inc
pop
shl
dec
dec
outs
int3
mov
add
sti
or
mov
xchg
(bad)
jno
inc
sbb
stos
lods
stos
rcr
cdq
sub
idiv
fwait
mov
neg
adc
cmc
rcr
std
cmp
ins
push
int
fdecstp
and
sbb
aas
mov
adc
inc
cmp
mov
cmp
inc
stos
push
cmps
aam
imul
push
dec
dec
mov
cmp
fiadd
cmp
xchg
jecxz
or
xlat
cmp
or
xchg
fisttp
retf
(bad)
sbb
cmp
ret
imul
pop
mov
mov
lahf
shr
adc
jecxz
adc
test
out
mov
ret
add
mov
pop
jl
push
ins
jnp
xor
sub
add
into
jnp
fstp
(bad)
dec
mov
out
jle
fsubr
fsubr
or
adc
sbb
cs
fadd
fwait
lock
icebp
ja
dec
inc
test
xchg
pop
call
mov
cmp
xchg
push
xor
leave
loopne
pusha
push
pop
adc
inc
sub
pop
jb
fsub
xchg
sub
push
pop
or
into
test
push
mov
jne
mov
aaa
jecxz
cmc
mov
retf
dec
sar
adc
loope
shl
mov
inc
xlat
or
xor
cmp
das
aam
xor
lock
or
div
push
and
jae
sub
push
jo
lods
mov
mov
int3
ds
jg
mov
fist
mov
dec
or
add
mov
push
data16
std
sub
rol
test
int
clc
jecxz
bnd
and
jno
push
scas
lods
repnz
loopne
or
jne
data16
movntps
sbb
or
sbb
(bad)
imul
shl
mov
sub
sbb
stos
fsubr
push
stc
out
jl
repnz
dec
out
xchg
adc
xlat
out
ja
in
inc
ret
sub
or
inc
xchg
cmp
dec
dec
push
ret
sbb
mov
test
test
jne
repz
hlt
jo
repnz
mov
inc
sar
adc
mov
(bad)
iret
mov
movs
push
and
jb
fwait
stc
fidiv
repz
xor
add
mov
and
or
adc
pop
inc
sbb
push
cmp
or
loopne
shl
jmp
into
ror
arpl
popf
scas
and
cs
shl
imul
bound
mov
ss
gs
xchg
jo
sub
(bad)
(bad)
jne
jb
mov
xor
mov
repnz
inc
sub
and
repz
enter
test
retf
cwde
sub
pop
pop
xor
cmp
pop
outs
test
mov
fst
adc
push
jl
mov
call
sar
call
xchg
enter
int3
outs
jae
pop
bound
push
and
jg
movs
(bad)
fwait
cld
ins
js
mov
xor
adc
and
jmp
dec
dec
xchg
dec
pushf
dec
nop
mov
fsub
mov
dec
mov
push
dec
in
dec
daa
mov
addr16
in
rcl
aaa
lea
dec
outs
cmp
dec
(bad)
mov
stc
mov
aam
out
ja
je
jno
xchg
bound
lahf
mov
cmps
(bad)
lods
cmc
into
add
mov
pop
xchg
dec
or
pop
inc
movlps
jne
or
jmp
fistp
mov
aas
push
mul
mov
add
and
cwde
addr16
pop
mov
iret
repz
mov
pusha
mov
dec
out
mov
sub
dec
mov
dec
sub
jno
outs
xchg
arpl
(bad)
fsub
(bad)
lock
jp
push
call
icebp
clc
inc
pop
pop
or
out
cmp
adc
fstp
and
leave
cmps
fistp
jns
and
add
jge
lods
xor
mov
ds
mov
and
push
je
out
sub
popa
and
outs
test
ret
leave
jb
inc
fucomp
ret
adc
adc
shl
idiv
cmp
dec
pusha
pop
jl
push
inc
cs
mov
dec
fwait
inc
cmps
jae
mov
stc
sbb
inc
mov
loopne
inc
xchg
xlat
jmp
outs
es
data16
mov
mov
ins
fs
cmp
mov
xor
cmps
cs
imul
jp
dec
sub
lds
sub
pop
and
or
xchg
mov
ds
adc
lods
int
and
(bad)
adc
je
cmp
retf
in
cli
fst
xchg
int
mov
mov
loop
stos
push
add
xchg
push
mov
jae
in
jbe
lods
jmp
call
mov
imul
and
adc
mov
and
inc
ins
xchg
sub
push
adc
jo
sbb
pushf
mov
mov
push
jnp
retf
mov
and
sub
dec
stos
imul
dec
cmp
xchg
loop
xchg
outs
dec
push
aad
(bad)
stc
mov
fs
xor
jno
pop
les
mov
and
mov
xlat
jmp
sub
(bad)
cld
and
sahf
adc
adc
mov
js
pop
fdiv
cmp
dec
xchg
cld
in
imul
dec
in
xchg
xchg
pop
fs
scas
add
inc
jnp
pop
dec
ror
out
adc
jno
mov
popf
sti
xor
je
repnz
or
and
int3
mov
inc
retf
test
xor
pushf
mov
mov
rol
xor
dec
jb
mov
call
std
cdq
std
and
popf
jge
dec
pop
add
jp
pop
nop
mov
test
or
pop
and
je
shr
cmp
or
imul
shl
scas
cli
cld
sub
cdq
adc
pop
add
call
jne
cwde
dec
pop
ss
mov
in
cmp
clc
ss
ins
push
fimul
mov
xor
inc
(bad)
pop
and
vmovddup
bound
(bad)
jae
inc
adc
push
dec
popa
pop
ins
pop
jmp
inc
scas
int
dec
push
or
jmp
movs
push
dec
(bad)
jae
dec
jecxz
sub
or
jmp
add
and
inc
jge
cwde
es
inc
loop
pushf
retf
adc
lods
(bad)
push
sbb
ds
mov
(bad)
mov
push
fiadd
(bad)
xor
pop
sbb
add
data16
scas
push
icebp
cmp
fadd
hlt
lods
int
xchg
sub
cmp
adc
xchg
in
jmp
sti
xchg
(bad)
mov
cs
ins
pop
fmul
sbb
(bad)
neg
jns
and
dec
xor
les
pop
and
pop
adc
jl
(bad)
cmps
jg
dec
ficomp
mov
test
dec
mov
imul
xchg
inc
jbe
ja
rcl
dec
ins
fcmove
retf
lods
push
xor
mov
inc
cli
pop
mov
gs
cmps
or
mov
stc
fmul
addr16
cmp
inc
push
shl
jnp
out
sub
mov
cmpxchg
adc
fild
dec
and
in
std
and
mov
ret
sub
xchg
enter
mov
cmps
das
cmp
xor
push
lds
add
movs
std
int3
jl
push
inc
xor
xchg
ss
cmp
shr
mov
mov
mov
and
pop
mov
jne
hlt
sahf
mov
in
pop
jnp
into
cmc
int
sbb
inc
or
or
sbb
stos
xchg
imul
neg
xchg
cmp
sar
iret
pop
ja
xor
sub
push
xor
(bad)
cdq
add
mov
push
adc
cs
iret
or
mov
in
test
aaa
push
dec
add
dec
sub
cmovns
adc
push
sahf
shl
push
fdivr
adc
or
in
lea
rol
pop
pop
or
outs
stc
pop
mov
mov
sbb
(bad)
js
repz
cmps
sbb
outs
idiv
(bad)
push
mov
retf
xor
aad
jl
xchg
mov
xor
lds
mov
xchg
or
mov
jo
sar
repz
pop
(bad)
fiadd
loop
inc
cli
or
out
adc
or
and
fstp
push
shr
lods
cmps
mov
xor
cmp
test
mov
and
loopne
dec
cwde
dec
adc
lods
push
(bad)
loop
cmc
gs
or
fnstenv
fsubrp
(bad)
shl
stc
fnsave
dec
(bad)
push
aam
dec
and
arpl
mov
mov
jmp
push
add
adc
ret
adc
mov
push
mov
dec
fs
mov
ss
adc
ja
out
pop
dec
ss
fist
sub
cmp
sti
or
mov
push
aaa
hlt
sbb
ins
push
pop
js
dec
dec
js
leave
pop
nop
mov
cmp
call
shr
test
push
ins
push
es
sbb
adc
sti
push
out
clc
fisttp
xchg
and
jnp
xor
gs
or
arpl
xchg
sbb
(bad)
outs
lahf
xlat
pop
gs
mov
jb
scas
aaa
nop
pop
sub
and
and
pop
sti
pop
je
(bad)
out
in
aas
ret
fldenv
jns
ins
cmp
push
fild
lods
(bad)
adc
ds
add
lods
or
cmps
dec
adc
fwait
addr16
pop
outs
pop
ret
pop
cli
fisttp
jbe
loopne
fnsave
pop
ds
xabort
std
xchg
icebp
sub
(bad)
out
in
adc
xchg
repz
add
das
pop
loope
mov
aas
push
dec
fidiv
pop
xlat
sub
jnp
and
inc
jbe
mov
neg
pop
pop
jge
out
int
push
jmp
pop
cld
adc
adc
and
adc
sub
je
cmps
pop
cmps
pop
ss
pushw
in
daa
ins
sti
or
mov
dec
and
pop
jg
mov
and
sub
inc
xlat
out
loop
sub
or
sbb
int3
mov
call
aad
leave
movs
pushf
mov
movs
push
les
fnsave
sbb
xor
xchg
(bad)
and
sahf
mov
(bad)
adc
jle
dec
add
add
or
xchg
popa
mov
dec
and
mov
jl
dec
mov
mov
sbb
pop
aas
pop
pop
rcr
fnstcw
sahf
jb
mov
rcr
jge
mov
adc
or
push
retf
push
jns
jae
ret
jbe
adc
dec
adc
sbb
xchg
fldcw
outs
cs
ja
int
imul
stos
or
cmps
lods
adc
mov
cld
sbb
repz
aas
and
jno
adc
sahf
inc
inc
jmp
(bad)
dec
jae
pop
sbb
adc
jge
test
ror
daa
mov
ss
icebp
pop
adc
jbe
out
ins
xor
fwait
mov
dec
sub
and
jecxz
imul
adc
jmp
lds
xchg
fwait
pop
xchg
jne
jmp
push
mov
out
sbb
pop
xbegin
cmp
mov
dec
mov
sbb
std
fcomp
shl
icebp
inc
lock
push
adc
jl
out
ins
mov
mov
in
adc
popa
dec
dec
cdq
cld
mov
xor
sbb
push
cmp
mov
cmps
not
inc
imul
xor
push
fimul
rol
inc
pop
adc
lea
stc
jb
push
mov
fisubr
push
aas
(bad)
sbb
fisttp
clc
hlt
pop
in
cmps
jg
sub
inc
dec
arpl
mov
mov
movs
iret
js
sub
jnp
enter
inc
push
sbb
xor
inc
mov
std
mov
gs
fs
imul
push
sbb
xor
inc
sub
mov
and
inc
(bad)
out
mov
push
add
mov
clc
jmp
sub
cmps
inc
ret
(bad)
ins
dec
xchg
pop
pop
sti
jns
and
sahf
and
mov
mov
or
lods
gs
jmp
int3
out
movs
mov
lds
test
and
test
or
pop
fidiv
dec
dec
out
arpl
pop
jae
clc
cmp
sbb
cmp
mov
xchg
nop
mov
push
sbb
inc
aaa
(bad)
inc
mov
mov
xchg
cmc
outs
push
add
(bad)
push
iret
or
loope
and
xor
dec
das
xor
icebp
push
retf
mov
(bad)
sar
retf
pushf
adc
or
mov
sti
dec
inc
jmp
mov
and
or
mov
mov
adc
xor
(bad)
xor
adc
mov
inc
call
mov
pop
add
sbb
mov
mov
dec
mov
(bad)
sar
fisubr
or
(bad)
cwde
loope
bound
xchg
mov
(bad)
aaa
jnp
pop
jge
jmp
jmp
jl
out
test
inc
inc
lods
cdq
je
leave
xchg
call
mov
jae
add
pop
inc
stos
cmp
shl
test
xchg
ds
out
dec
adc
jmp
push
test
or
adc
xor
pop
fucomp
xchg
xchg
loope
vpsllw
cmc
or
cdq
in
loop
loop
jne
jns
or
inc
mov
pop
push
add
mov
and
and
jle
push
idiv
scas
jmp
sbb
pusha
je
fist
jg
pop
repnz
push
sub
imul
loope
in
xor
add
pop
int3
mov
xor
out
cmps
pop
or
dec
inc
popa
or
pop
mov
add
sbb
fwait
sub
scas
push
stos
leave
shl
bound
and
out
stos
inc
adc
(bad)
cdq
adc
sub
dec
daa
xchg
add
mov
mov
js
bound
add
mov
scas
push
dec
cs
and
jp
pop
aaa
or
cmps
or
(bad)
add
mov
pop
daa
div
mov
xor
out
sbb
int3
mov
aas
dec
scas
mov
pop
outs
movs
lods
int
std
mov
adc
xor
pop
cmp
stos
push
inc
inc
jae
and
add
inc
xchg
fnstenv
hlt
mov
and
cmp
cmp
retf
dec
jno
rcr
mov
xor
push
jp
xor
push
mov
jmp
cli
std
push
add
or
jb
sub
aaa
push
xchg
push
sub
and
fs
imul
xchg
addr16
ret
ficom
lods
xor
ss
cmp
lds
sub
ds
fcmovnu
stos
push
mov
outs
jge
mov
dec
pop
mov
loopne
dec
cmps
push
idiv
jmp
xor
xchg
xchg
xor
mov
cmp
and
cmp
jp
xchg
fild
push
mov
jge
ds
mov
hlt
inc
xchg
fcom
xor
dec
addr16
pop
les
mov
pop
push
scas
pop
in
iret
cdq
jb
adc
lea
loop
cdq
sbb
xor
push
mov
inc
and
int
jbe
in
add
or
xchg
mov
and
aaa
mov
jl
ror
pop
sbb
sbb
mov
sub
nop
sub
repz
sbb
push
jp
lods
popa
mov
leave
xchg
xchg
push
sbb
jmp
fs
xchg
sahf
push
out
xor
icebp
in
rcl
push
and
add
mov
and
es
cmp
pop
xor
leave
(bad)
push
dec
xlat
faddp
cli
ins
mov
stos
je
retf
xchg
and
out
sbb
or
pop
ss
cs
dec
shrd
xchg
out
inc
retf
mov
leave
sbb
push
sbb
and
xor
jbe
or
loopne
mov
xchg
mov
mov
leave
cmp
add
es
rcl
mov
mov
sar
je
mov
repnz
mov
retf
cmc
xchg
push
out
cmps
repnz
jo
sbb
xchg
mov
retf
cli
test
sbb
das
retf
movs
jmp
imul
sbb
ins
ins
jmp
xchg
mov
push
idiv
mov
mov
not
int
inc
fmul
repz
jno
pop
loopne
ret
mov
pop
aam
dec
ret
push
dec
jne
fwait
dec
jns
xchg
rcl
cmp
or
(bad)
xor
neg
mov
and
add
mov
and
clc
push
xor
inc
adc
dec
mov
and
sub
repz
mov
push
repnz
and
mov
call
(bad)
je
sbb
and
movs
add
aaa
and
xchg
clc
add
jb
out
sbb
repz
or
push
pop
hlt
lea
or
adc
mov
jge
data16
sti
(bad)
clc
bound
jecxz
pushf
ja
mov
inc
js
scas
les
sub
call
test
ins
es
ret
popa
enter
push
into
js
(bad)
pop
adc
mov
jne
push
push
es
lds
adc
xchg
sbb
fs
pop
fcom
sahf
push
adc
adc
cmps
pop
mov
add
jb
out
or
adc
sbb
lahf
loopne
rcr
(bad)
cdq
rcr
test
jmp
mov
cmp
fstp
pop
loope
aad
sub
arpl
adc
xchg
pop
outs
sbb
arpl
jmp
xchg
loopne
fwait
jmp
push
std
(bad)
lock
sar
adc
in
das
cmc
aaa
mov
lea
out
lea
loop
lds
das
pop
aaa
pop
or
js
mov
std
mov
and
test
xor
jo
cmps
test
aas
(bad)
cmp
sbb
test
ins
ins
xchg
jb
dec
jae
pop
jno
dec
xchg
sbb
test
mov
repz
xlat
test
test
aaa
and
sbb
adc
arpl
sub
out
ret
cmp
sub
sub
dec
jns
enter
loop
mov
mov
and
jge
(bad)
fdiv
lock
test
push
(bad)
sub
jmp
push
mov
jb
pushf
inc
mov
pusha
sbb
mov
jecxz
pop
call
mov
mov
sub
sti
xlat
push
in
xchg
cmp
bound
int
out
cmp
add
mov
jle
out
mov
rol
sti
sbb
pushf
fs
adc
inc
imul
sub
inc
sti
lods
inc
mov
arpl
fidiv
sar
sub
xlat
into
in
mov
xor
dec
fs
xchg
mov
jbe
loop
ret
in
movs
dec
test
inc
jmp
fnsave
pop
retf
mov
dec
push
lock
add
or
add
bound
and
stc
daa
mov
add
dec
sub
fldcw
jae
lea
stc
mov
int
push
fld
adc
movs
jb
loope
mov
fcom
imul
inc
ins
push
inc
test
ds
(bad)
jp
ret
inc
mov
imul
cmp
(bad)
mov
push
sbb
or
or
retf
sub
inc
or
je
and
aam
aaa
data16
xchg
and
shl
(bad)
call
cli
mov
rcl
or
cmc
adc
loop
pop
cmp
pop
and
push
mov
ins
sub
fisub
iret
push
pop
xchg
adc
lods
mov
(bad)
outs
std
sbb
fs
aaa
mov
(bad)
mov
dec
cmp
in
mov
jge
and
mov
cmp
pop
jecxz
jl
fs
jmp
pop
fstp
push
cli
pop
fwait
pushf
cmp
(bad)
out
add
jg
repz
push
movs
push
xchg
fcom
in
aaa
xchg
out
push
and
out
jp
cmp
bound
add
dec
sbb
adc
in
push
enter
xchg
xor
mov
add
pop
lods
stos
mov
jmp
ret
cli
bound
mov
adc
sub
loop
dec
bnd
push
shr
js
cmp
mov
pop
mov
adc
push
jb
orps
fwait
daa
xlat
cmp
pop
cli
or
das
cmp
jb
and
inc
popf
movs
pop
ja
cmp
and
lock
jns
jecxz
sahf
jnp
aad
mov
in
mov
xor
cmp
cld
and
jae
push
(bad)
push
jge
push
mov
cmp
fs
mov
dec
ret
clc
daa
les
stos
mov
jae
stc
mov
int
fnstcw
xor
aam
push
test
push
push
inc
add
sbb
or
sub
cmp
sub
sbb
adc
xchg
loope
adc
ds
mov
dec
inc
jecxz
sbb
(bad)
adc
mov
shr
mov
mov
int
fidivr
dec
jp
arpl
adc
xor
mov
mov
loopne
xchg
rcr
movs
xchg
or
movs
or
int
(bad)
lock
jno
das
fs
adc
stos
ja
loopne
and
mov
xor
es
adc
dec
lds
mov
lea
sub
call
and
cdq
push
cmp
push
mov
mov
dec
cs
and
push
aaa
jg
dec
and
cmps
cmp
(bad)
add
mov
push
popa
in
cmp
mov
sahf
and
inc
sub
inc
call
adc
sbb
iret
dec
pop
mov
pop
mov
scas
mov
ds
or
jmp
cmps
fsubrp
jnp
xchg
push
cmps
pusha
xor
fstp
hlt
add
stc
dec
mov
add
push
pop
gs
pop
div
retf
pop
xchg
arpl
mov
mov
fldl2t
and
jg
jmp
xchg
nop
dec
scas
mov
daa
jns
jmp
loop
jl
gs
iret
in
mov
add
fs
out
sar
push
inc
or
and
sub
inc
data16
(bad)
aad
aad
xor
push
push
adc
mov
bound
call
stc
fwait
in
adc
movs
mov
xchg
mov
(bad)
out
cmps
daa
and
pusha
fsub
cmps
inc
sub
icebp
arpl
xchg
jbe
rcr
adc
enter
out
push
or
in
mov
pushf
xchg
or
repnz
or
mov
(bad)
xchg
pop
sbb
sbb
adc
popa
inc
adc
adc
and
ins
int3
dec
push
out
add
mov
add
mov
int
out
test
ins
jmp
mov
add
mov
ins
(bad)
lods
pop
pop
sbb
sti
les
dec
out
cmp
fisubr
aad
(bad)
dec
cli
inc
or
jo
cli
ds
int
test
out
jns
and
imul
stos
jg
jge
and
repz
mov
push
ins
jle
(bad)
jno
ins
push
(bad)
mov
test
mov
lock
cwde
ins
cmp
stos
ds
push
or
push
jecxz
cmp
sub
inc
retf
cmp
pop
pop
(bad)
mov
xor
nop
pop
dec
test
stos
bound
inc
shr
xchg
and
jmp
popa
sti
ja
mov
loop
imul
sub
in
sbb
mov
pop
pushf
lds
push
jno
mov
jl
dec
xchg
add
adc
ds
jge
sub
out
pusha
xchg
push
dec
out
inc
cwde
loope
jmp
push
add
(bad)
aam
js
fbld
gs
or
fiadd
ficom
adc
push
dec
sub
add
push
pop
outs
xchg
sub
das
sbb
adc
add
add
add
add
por
cmps
cwde
xchg
mov
call
xor
mov
push
leave
andps
cmp
jmp
std
add
jle
fcom
shr
in
stc
nop
mov
sub
pop
ins
add
and
and
xor
push
jne
pop
outs
xor
push
inc
hlt
mov
cmp
nop
pusha
xor
aad
movs
cmp
push
inc
xchg
pop
inc
call
sbb
xor
fstp
ret
mov
push
dec
cmp
retf
ret
mov
adc
gs
and
mov
in
cmp
dec
push
int
push
inc
inc
pop
es
sbb
dec
fisub
in
stc
outs
std
out
cmp
mov
inc
loope
cmp
retf
jl
retf
jmp
data16
pusha
sar
popa
push
and
and
sti
call
cmp
inc
jns
lods
jle
push
sub
stos
mov
add
rol
sahf
sub
sbb
loope
add
jnp
xchg
dec
and
mov
ja
sbb
pop
push
sub
mov
pusha
cmp
and
or
sub
icebp
mov
jbe
mov
jo
pushf
push
push
out
xchg
or
push
in
test
mov
fisubr
dec
or
es
(bad)
mov
shl
pushf
out
addr16
gs
retf
xchg
ficomp
out
jnp
retf
xchg
xchg
in
mov
stc
scas
or
jnp
imul
mov
lock
fisub
stos
mov
fabs
xor
ja
shr
fnsave
xchg
pop
cld
ret
sub
out
push
xor
or
xchg
pop
cwde
add
xor
sub
das
sub
sub
and
fist
hlt
xchg
xchg
popf
sub
mov
jno
stos
rol
call
repnz
or
mov
push
rol
cmps
mov
dec
dec
ret
pop
xor
(bad)
jbe
loopne
mov
scas
mov
shl
dec
mov
lock
sahf
jp
mov
cs
test
xor
addr16
(bad)
xchg
sar
dec
loope
gs
loope
add
pop
and
cmp
mov
cmp
mov
stos
dec
fcom
int
jge
jne
ins
(bad)
and
jae
out
dec
ss
pop
inc
xor
adc
mov
inc
push
inc
add
adc
lock
arpl
and
push
push
xor
arpl
pop
mov
stos
test
or
adc
icebp
push
in
and
pop
jmp
je
in
mov
aam
xchg
dec
addr16
shl
dec
out
xor
xchg
or
ret
pushf
test
xchg
retf
jge
cmps
push
push
pop
and
push
repz
xor
dec
push
imul
adc
jmp
jmp
mov
inc
lahf
(bad)
push
jecxz
daa
cmc
adc
cli
pop
mov
mov
popa
fld
add
or
arpl
add
movs
xchg
xor
mov
fcomip
ds
pop
popf
mov
idiv
mov
test
mov
jecxz
imul
xlat
rep
pminsw
xchg
pushf
fld
out
mov
jae
nop
lods
std
sti
mov
jl
fiadd
dec
dec
jmp
add
inc
(bad)
xor
ins
push
jns
(bad)
push
minps
xor
push
sahf
inc
push
pusha
pop
movs
push
popf
add
out
test
mov
jae
inc
enter
or
mov
or
sbb
inc
add
mov
add
or
sub
shl
cmps
jne
jmp
or
pop
adc
or
das
repnz
push
pop
cmc
loop
adc
cmps
ror
jno
jg
mov
add
cwde
ficomp
or
std
xchg
in
and
sub
aas
cmps
jo
cld
jecxz
clc
mov
jmp
retf
ror
into
cwde
mov
mov
(bad)
push
dec
push
sbb
adc
mov
movs
adc
lods
sbb
inc
ss
add
mov
pop
jmp
div
adc
cdq
inc
add
add
inc
jl
rol
dec
push
adc
(bad)
cli
jno
inc
mov
and
aas
imul
dec
xlat
fld
pop
inc
or
mov
fldenv
pop
rcr
push
push
jg
pop
inc
jge
shr
inc
neg
in
cmp
int
mov
cmp
and
test
xlat
stos
(bad)
pushf
mov
inc
mov
cmc
dec
adc
and
mov
shl
fwait
push
jmp
aam
mov
fs
call
enter
jl
loope
mov
sbb
iret
in
push
adc
lods
test
fstp
mov
push
idiv
dec
sbb
ret
push
test
mov
jae
mov
mov
adc
adc
into
pop
dec
ret
mov
fldenv
movs
(bad)
jge
mov
mov
add
in
(bad)
xchg
pusha
outs
(bad)
mov
mov
xchg
or
cmps
push
add
shl
mov
cmp
popf
in
push
xchg
fisttp
jl
jmp
test
iret
shl
dec
push
xor
je
pop
cwde
imul
aad
mov
cwde
add
xchg
out
sub
fisubr
adc
retf
retf
adc
mov
inc
xbegin
das
gs
push
or
rcr
stc
shr
retf
jnp
ficom
sbb
push
enter
xor
cld
xchg
or
shr
and
shl
leave
and
xor
mov
add
pop
and
sbb
mov
cdq
shr
ja
rol
out
fidiv
out
sbb
lahf
adc
push
je
fnstcw
jns
mov
push
js
inc
jns
data16
mov
sbb
shl
xor
cmps
mov
adc
inc
fbstp
adc
push
jmp
dec
not
dec
scas
aas
popa
sahf
in
stc
sti
jnp
aaa
jmp
cmp
sub
or
push
jmp
xor
ror
push
push
adc
xchg
add
jns
mov
jo
jnp
ins
mov
jne
fnstcw
or
and
mov
adc
push
jbe
pop
test
pop
or
int
mov
js
sub
icebp
pop
or
mov
and
scas
fidiv
daa
cmp
sbb
adc
inc
mov
sar
mov
aam
xchg
push
jge
push
ja
iret
lods
sub
cmp
xor
adc
outs
nop
jb
(bad)
rcl
add
lahf
mov
ins
push
mov
jbe
push
ja
ret
int3
pmullw
jecxz
sar
dec
pushf
push
movs
cwde
shr
dec
sbb
pop
fcomp
cmp
pushf
mov
sub
fs
(bad)
adc
or
dec
das
mov
ror
test
mov
cmp
retf
mov
adc
pop
lods
out
pop
ret
imul
dec
(bad)
adc
mov
mov
fst
mov
call
pop
jns
sub
(bad)
adc
mov
push
outs
mov
adc
cmps
sbb
jb
test
aad
lds
rol
fwait
lods
cs
call
cld
push
mov
push
bound
pop
pusha
ja
adc
out
mov
pop
retf
push
push
sub
movs
inc
cld
popa
and
mov
sbb
xchg
inc
in
mov
icebp
cdq
cmp
je
dec
mov
mov
lahf
scas
(bad)
cld
or
sub
mov
in
fadd
pop
sub
fidiv
sbb
adc
sbb
loop
mov
data16
cmps
dec
add
je
jmp
xor
loopne
lds
sbb
ds
neg
add
push
gs
xor
mov
cmc
jne
mov
dec
mov
fs
push
sub
push
loopne
mov
pop
mov
cdq
jmp
sbb
add
push
inc
jo
xchg
scas
mov
push
call
pop
mov
out
fistp
(bad)
xor
cmps
push
(bad)
lahf
cmp
ds
jmp
xchg
repz
jo
mov
xlat
(bad)
call
shr
in
jmp
jae
mov
std
mov
adc
xchg
push
mov
fidiv
daa
aaa
mov
push
inc
fcmovnbe
xor
jb
(bad)
in
ret
jbe
popf
ds
xchg
xchg
pop
jecxz
popf
or
sub
mov
repz
jmp
push
(bad)
adc
ds
stos
sti
mov
mov
outs
outs
mov
hlt
test
lock
cmp
sub
inc
add
test
push
mov
mov
mov
pop
test
test
aaa
jbe
arpl
push
out
add
mov
xor
jo
cli
xchg
mov
jno
cmp
les
ja
pop
imul
pop
ret
(bad)
sub
push
mov
push
xor
xor
or
pop
xchg
mov
(bad)
push
jo
mov
jecxz
adc
add
retf
not
test
repz
(bad)
push
xchg
ret
mov
push
pop
cmp
jge
add
dec
test
mov
(bad)
adc
movs
int
(bad)
or
outs
inc
mov
and
xor
dec
lea
sub
loop
(bad)
out
out
out
outs
stos
fsub
popf
xchg
push
imul
push
jno
out
sub
test
lds
mov
ficom
and
add
std
loope
stos
int3
jle
sar
mov
or
ret
mov
mov
fisttp
and
cmp
sub
and
aam
rol
sub
xchg
std
mov
fidivr
xchg
xor
mov
inc
push
dec
mov
add
(bad)
xor
sub
gs
out
scas
cmp
jbe
test
xchg
clc
push
and
fiadd
fst
mov
gs
stos
std
inc
mov
enter
ror
movs
cmp
int
inc
call
jnp
(bad)
jmp
jae
in
mov
retf
rcl
push
retf
dec
(bad)
cmc
lock
cmp
add
popf
std
dec
adc
mov
cmp
mov
idiv
xlat
push
or
jecxz
psubb
fcmove
jne
(bad)
push
aam
push
pop
faddp
mov
comiss
ror
mov
in
add
int
sbb
push
mov
xor
shl
fistp
in
xchg
dec
push
loop
in
jbe
sub
and
jecxz
cdq
and
and
ja
add
xor
xor
push
pusha
and
mov
push
sar
mov
sbb
es
sub
xor
into
dec
call
cmps
jecxz
inc
sbb
add
arpl
adc
cmp
jmp
push
jb
xlat
retf
push
cmps
dec
xor
pushf
leave
lds
fst
mov
xchg
daa
jp
pop
rol
das
loop
leave
aas
jmp
ds
iret
lock
dec
xchg
lds
mov
(bad)
and
movs
imul
in
mov
mov
push
and
fwait
xor
fsubr
jge
add
inc
enter
jb
cdq
arpl
data16
aad
inc
ds
idiv
push
mov
sahf
fimul
or
sub
cwde
jle
adc
add
(bad)
jnp
jmp
outs
outs
ja
push
ret
dec
and
jg
inc
pop
pop
xchg
add
pop
(bad)
cmps
outs
sub
fwait
or
jno
cmps
push
and
aam
cmp
sbb
lea
outs
nop
sbb
dec
shl
sub
bound
sub
aaa
loopne
push
mov
imul
lds
mov
sbb
mov
jne
fcos
fisubr
inc
lods
add
xchg
jmp
xor
xlat
mov
les
pop
outs
jg
and
pop
stos
addr16
or
xor
adc
pop
icebp
inc
or
xchg
mov
imul
call
mov
mov
and
ret
and
ins
adc
out
jnp
jne
rcr
add
pop
push
pop
lds
out
jle
stos
dec
cmp
pop
lea
icebp
pop
push
mov
enter
outs
sub
mov
retf
xor
fiadd
cld
into
(bad)
loope
fisttp
aas
scas
data16
cwde
lods
mov
movs
les
clc
lahf
jp
scas
add
mov
mov
shr
jmp
jmp
cmps
lock
leave
repz
shr
xor
xchg
cmps
and
adc
mov
ins
push
adc
int
mov
lds
push
sbb
stos
retf
adc
stos
pop
repz
ins
xor
xchg
(bad)
fst
sbb
jl
mov
lock
loop
xchg
add
pop
xchg
in
adc
fistp
idiv
jmp
fs
mov
retf
into
pusha
adc
rol
cmp
je
int3
add
outs
jp
or
sti
into
into
(bad)
sbb
push
or
fucom
push
out
mov
fwait
popa
adc
gs
pop
sub
out
retf
cli
xchg
iret
push
pop
call
dec
xchg
add
jge
xchg
stos
fnstenv
and
or
aad
bswap
jnp
sub
lahf
mov
lods
je
fdiv
out
push
dec
fs
jmp
adc
adc
mov
inc
lds
and
aam
cmp
sub
aam
popa
lods
bnd
iret
movs
mov
iret
addr16
out
jne
xor
into
jbe
ja
cmp
or
xchg
pop
pop
(bad)
std
imul
dec
jmp
pop
popa
repz
retf
mul
daa
aaa
ficom
pop
clc
xlat
mov
or
sub
jae
stos
out
xchg
test
in
popf
xchg
pop
mov
call
cs
jp
sub
mov
hlt
cmps
enter
fdivr
in
pop
fisttp
mov
sahf
jecxz
dec
and
cmps
scas
ja
(bad)
push
das
mov
fimul
test
or
cmp
sub
das
call
mov
push
mov
add
cmp
sub
jmp
jno
iret
retf
fisttp
call
in
stos
int3
mov
and
arpl
mov
inc
xchg
ror
std
push
loopne
xchg
cmpxchg
arpl
fidivr
sub
fmul
jmp
dec
mov
stos
(bad)
imul
jmp
retfw
push
div
adc
scas
push
out
aaa
cs
pusha
pop
or
arpl
adc
ja
jle
dec
add
inc
adc
mov
xor
(bad)
mov
test
arpl
inc
repz
cli
out
test
and
mov
mov
je
loopne
jmp
cli
out
aaa
xor
lods
jnp
test
ja
(bad)
cmp
dec
jns
in
test
std
aaa
mov
inc
stos
iret
aad
xor
loope
add
adc
stos
or
repnz
in
maxps
movs
mov
xor
dec
(bad)
xor
sbb
xchg
adc
and
loope
stos
ins
mov
shr
xchg
push
dec
les
mov
pop
sub
push
push
jmp
mov
fucomp
jecxz
aaa
cmp
test
hlt
lea
popf
add
adc
out
fwait
cdq
xchg
cmps
sbb
mov
or
and
xchg
imul
test
std
push
xchg
sahf
mov
pop
mov
pop
xchg
jo
push
jmp
mov
das
imul
mov
push
cdq
stos
in
enter
push
jne
imul
repz
mov
cmp
icebp
push
jb
sti
stos
int3
mov
mov
adc
and
jecxz
rcr
div
mov
jne
iret
mov
dec
fdiv
xchg
jns
fiadd
mov
(bad)
fldenv
call
push
mov
mov
movsx
mov
jnp
dec
fdivr
dec
jmp
dec
xchg
pop
lods
je
mov
xor
iret
out
leave
ret
mov
(bad)
fbld
scas
jp
mov
rcr
push
mov
test
movs
or
adc
push
jge
dec
je
sub
loopne
movs
stos
pop
dec
or
adc
cmp
jecxz
mov
mov
dec
xchg
(bad)
test
inc
push
xchg
je
imul
pop
pop
fisubr
test
test
dec
in
xor
inc
test
arpl
mov
jmp
mov
enter
fbld
mov
sub
movs
adc
cli
div
outs
imul
cmp
test
cmp
sub
mov
push
mov
add
mov
lods
pusha
xor
mov
add
or
pop
push
fidivr
or
mov
add
fiadd
sub
xchg
cmp
jno
mov
pop
dec
arpl
sub
jns
or
cmovne
add
inc
sub
and
fldln2
push
jns
jne
movs
cmp
cs
pop
movs
sbb
add
and
jns
fwait
jle
pop
inc
cdq
xchg
fidiv
outs
cmp
lods
imul
mov
ret
aam
pushf
xchg
frstor
add
adc
pop
cld
aas
sub
mov
xchg
mov
or
leave
cmp
(bad)
movs
leave
jge
(bad)
ret
out
pusha
stc
pop
xor
dec
mov
push
jecxz
pop
bound
cmps
or
lock
ret
and
mov
hlt
jb
setle
dec
cmp
add
jnp
adc
movd
sub
add
xor
je
adc
jo
mov
mov
and
jg
cmp
or
dec
int
push
dec
cmps
shl
xor
dec
adc
in
or
inc
and
(bad)
rcl
adc
inc
std
pop
sub
pop
adc
loop
cmp
les
xchg
call
sbb
cmp
leave
cmp
sub
(bad)
adc
lea
dec
sbb
jae
data16
nop
xor
in
add
out
add
push
pop
cmp
pop
icebp
mov
xor
mov
xchg
nop
cmp
ds
mov
jle
das
inc
test
mov
out
inc
jnp
add
ins
fs
(bad)
jns
pop
not
push
scas
jecxz
dec
into
xor
mov
data16
stos
jno
push
bound
mov
idiv
dec
mov
and
xor
cmp
repnz
ds
outs
jno
mov
or
stos
pop
sbb
rcl
push
xchg
inc
mov
test
call
icebp
cdq
adc
call
jmp
push
imul
cmp
call
retf
xchg
cmps
mov
js
dec
les
jmp
std
mov
(bad)
jecxz
ins
fld
inc
xlat
leave
mov
mov
aad
dec
mov
jns
and
in
ds
nop
dec
dec
and
fucom
fucom
pop
jge
loopne
jge
outs
xchg
imul
popa
sub
rcr
stos
xlat
dec
fild
fisubr
nop
in
aad
xor
push
inc
into
adc
adc
pop
bound
push
cwde
and
xchg
pop
(bad)
fnstenv
or
xor
adc
mov
adc
push
in
xlat
mov
add
(bad)
faddp
and
leave
xchg
imul
lods
sti
pop
ret
cmp
jo
loope
(bad)
dec
inc
movs
les
or
lock
dec
daa
pop
add
add
jno
dec
ss
xor
mov
pop
adc
std
popa
bound
movs
movs
jp
cmp
lea
(bad)
in
pop
adc
fs
dec
ror
jb
sub
mov
jge
loopne
adc
jl
shl
shr
adc
mov
leave
ja
and
dec
ficom
in
imul
inc
xchg
dec
add
imul
lds
cmps
(bad)
call
or
push
icebp
lods
daa
in
imul
xor
rcl
ffree
js
sub
cmp
inc
mov
out
iret
out
push
or
lods
sbb
xchg
adc
dec
mov
mov
dec
jbe
or
mov
jb
imul
jns
push
add
outs
cmc
(bad)
mov
ficomp
inc
std
cmp
jecxz
in
(bad)
int
mov
loope
dec
hlt
outs
jl
mov
out
sbb
es
jne
loop
push
xchg
jmp
dec
(bad)
jg
pop
dec
dec
sar
fistp
cdq
xchg
and
xor
mov
lock
out
test
rcr
push
bnd
jne
into
fisub
pop
test
sbb
cwde
jge
ins
nop
push
lods
mov
lock
adc
je
or
cs
add
push
into
bound
sbb
xchg
fidivr
sub
xchg
popf
dec
sbb
sub
xchg
jmp
ins
out
std
push
sbb
inc
sub
add
jle
out
push
mov
cmp
bswap
xor
push
xchg
repnz
and
cmps
jle
add
jno
mov
pop
mov
push
sub
jne
test
gs
adc
out
dec
test
aad
fadd
xchg
clc
dec
and
jle
jne
xchg
and
popf
fnstsw
fild
test
into
je
imul
push
xchg
dec
sti
daa
(bad)
iret
sbb
push
or
cmc
push
loopne
inc
sub
sub
add
mov
cmps
xchg
mov
arpl
scas
aam
xchg
dec
(bad)
loop
in
mov
popf
icebp
mov
push
inc
cmps
popf
xor
popf
push
scas
ret
mov
dec
mov
aam
mov
xor
xchg
shl
add
cmp
push
pop
cmp
hlt
inc
shr
jae
and
fsubr
ss
iret
and
jnp
mov
dec
push
xor
ins
pop
sbb
retf
in
lods
stos
jns
fs
add
out
ficom
lahf
cmp
xor
mov
loope
dec
xchg
add
xor
and
sbb
inc
jnp
mov
sbb
shr
ret
jg
jp
sbb
push
sub
mov
pushf
xor
out
mov
mov
xor
mov
fmul
ins
syscall
jle
mov
dec
sbb
cdq
and
es
add
iret
ret
mov
add
ret
xchg
iret
sbb
scas
sbb
cld
jp
mov
jae
xor
dec
ins
popa
out
cmp
lock
cli
push
stc
enter
cld
jl
lods
shl
ins
cmps
adc
mov
mov
jp
jg
xchg
pushf
addr16
cmp
mov
scas
(bad)
sar
repz
out
pushf
cdq
push
dec
sbb
(bad)
xchg
adc
add
jno
jnp
aas
mov
and
gs
add
test
int
pop
xchg
sub
inc
sbb
jbe
in
loope
mov
pop
ror
mov
sbb
mov
jg
fs
add
adc
pop
jmp
sub
xchg
or
leave
mov
bound
daa
(bad)
das
adc
popf
jmp
or
mov
into
jecxz
in
jns
mov
mov
dec
fld
mov
jb
push
scas
cdq
cmps
fiadd
cmp
jb
sbb
scas
daa
sti
jge
test
add
mov
mov
mov
and
sar
popf
xchg
sbb
push
pop
mov
jo
dec
cmps
loop
push
ja
fistp
scas
lahf
into
dec
aas
cmps
and
fsubr
jns
jne
test
jno
add
xor
jne
aas
mov
cmp
stos
adc
sbb
xchg
test
mov
hlt
mov
xchg
stos
sbb
jecxz
stos
int
js
mov
jae
ret
in
adc
mov
pop
ds
jl
mov
inc
pushf
mov
push
das
jo
or
or
sub
pop
xor
mov
hlt
(bad)
std
(bad)
neg
push
sbb
sbb
and
pop
mov
movs
or
jmp
inc
les
inc
int
push
popf
dec
mov
mov
add
cmc
jb
sahf
mov
mov
in
push
aaa
popa
mov
sub
(bad)
and
leave
shl
xchg
std
adc
push
mov
pop
sub
sub
push
cs
adc
sbb
or
sub
jae
jne
dec
push
push
mov
lea
aaa
dec
mov
jne
dec
sbb
inc
jle
sbb
fcmovnbe
clc
push
ss
adc
sbb
sbb
lods
mov
or
ror
dec
shl
push
inc
mov
adc
test
fist
repnz
inc
sbb
daa
cs
dec
adc
push
out
adc
outs
scas
add
xchg
adc
retf
iret
push
scas
mov
or
cmp
pop
mov
and
sub
cmps
idiv
adc
add
stc
push
xor
pop
dec
pop
push
sub
xchg
cmp
sbb
push
das
retf
cli
and
mov
pop
adc
mov
push
icebp
ja
xchg
clc
outs
aam
stos
dec
stc
cmp
xchg
cmp
sbb
pop
enter
ins
pop
repz
xor
shl
xchg
fcomp
imul
and
mov
xchg
test
push
xchg
outs
hlt
cld
bound
enter
sub
icebp
cld
cld
jle
nop
cmp
das
push
xor
popa
pop
loop
loopne
jg
mov
dec
mov
sub
cli
iret
popa
sbb
sub
mov
(bad)
call
(bad)
test
add
jle
into
mov
(bad)
cli
sub
popa
and
pop
aad
inc
mov
adc
xchg
ins
aas
imul
xlat
and
and
lods
add
jae
or
jns
rcr
daa
(bad)
or
mov
mov
mov
xor
jnp
xchg
pusha
mov
dec
lods
call
sar
std
shr
mov
imul
adc
adc
pop
mov
or
stc
dec
push
adc
(bad)
adc
jbe
xchg
mov
cmp
mov
mov
stos
xchg
add
lock
push
retf
dec
ffree
mov
push
retf
inc
jge
push
fwait
arpl
cwde
cmp
push
cmp
add
mov
inc
push
dec
sti
add
jge
cdq
dec
xchg
shl
dec
lds
dec
mov
movs
jle
jo
xor
push
jns
push
iret
inc
and
sahf
mov
das
into
and
je
test
out
imul
jmp
int
or
in
pop
fwait
int
test
aam
push
sbb
push
ins
xchg
push
loop
jb
lahf
mov
vmread
cdq
outs
jle
dec
mov
mov
cmps
push
jbe
lea
bound
imul
jp
cmp
adc
lea
sti
or
jae
outs
sbb
shl
dec
int
xchg
mov
mov
xchg
xchg
adc
pop
mov
xor
cmps
add
adc
daa
mov
dec
sbb
mov
mov
jb
scas
cmps
sub
fiadd
add
cmp
inc
mov
stc
mov
(bad)
adc
dec
xchg
pop
adc
nop
cmp
retf
ja
aam
pop
dec
(bad)
icebp
xchg
add
loop
in
jo
mov
xchg
call
loopne
sub
dec
jle
mov
cli
pushf
inc
aam
mov
sub
sub
pop
scas
xchg
pop
aas
jbe
cmps
mov
pusha
adc
ins
sub
mov
ret
add
sub
and
pop
cmps
pop
jp
fst
xchg
loop
sub
gs
imul
fnstcw
pop
int3
jmp
xchg
mov
xchg
xchg
or
rcl
cwde
bswap
mov
bound
or
outs
and
mov
stos
sub
ds
push
and
mov
out
push
add
xor
fisubr
add
test
push
jmp
btr
call
mov
sbb
call
cmp
jl
adc
cmc
iret
jbe
icebp
(bad)
sub
xor
cli
fadd
xlat
ret
lock
xchg
xchg
jecxz
ins
(bad)
jle
jo
mov
pop
inc
push
sar
int3
sbb
mov
mov
imul
inc
movs
mov
daa
and
dec
push
mov
jmp
mov
shr
cmp
fisttp
mov
(bad)
add
jbe
aas
popa
pop
mul
and
and
sub
and
loopne
xor
icebp
mov
adc
iret
movs
sbb
sahf
(bad)
(bad)
daa
test
mov
xchg
pop
movs
inc
xchg
pop
loope
inc
iret
mov
fistp
inc
shl
inc
rcl
mov
leave
sub
movs
ins
mov
cmp
adc
scas
push
adc
fiadd
xor
adc
lods
mov
ja
adc
push
test
mov
pushf
push
sbb
clc
cmp
loope
mov
inc
bound
pop
mov
push
mov
adc
ficomp
pop
sub
xor
jne
jmp
add
ffree
dec
scas
test
cmc
retf
repz
mov
outs
inc
push
in
(bad)
adc
jns
(bad)
push
adc
jmp
outs
fs
jmp
scas
add
mov
jl
test
push
sbb
rol
and
(bad)
push
mov
mov
xchg
xor
sbb
jmp
cld
dec
shl
imul
or
inc
mov
jp
and
cwde
jbe
jl
pop
mov
xchg
pop
inc
fcmovnbe
xchg
adc
leave
adc
inc
js
xor
es
cmp
mov
lods
xchg
jg
pop
lds
clc
stos
jae
xchg
inc
iret
xchg
inc
lds
sub
aad
clc
adc
rcr
mov
loop
int
and
test
jecxz
cld
addr16
add
inc
dec
inc
push
fdiv
add
pop
xlat
ror
and
in
retf
scas
pusha
ins
xor
out
add
inc
scas
push
mov
lds
push
daa
fist
pop
mov
jno
push
jmp
jecxz
push
dec
lods
sbb
sub
arpl
out
jle
lds
inc
in
cmp
cwde
mov
and
psrad
scas
adc
inc
jb
movs
dec
fucom
sbb
push
pusha
hlt
outs
jmp
jns
(bad)
sahf
xchg
xor
mov
mov
ret
or
jne
add
inc
movs
or
push
xor
xor
ret
ja
int
inc
pop
mov
pop
js
push
aas
inc
adc
fwait
xchg
sbb
enter
jbe
and
mov
mov
inc
lods
inc
loop
sub
cmp
ss
xchg
addr16
hlt
jp
rcr
test
cmp
popa
push
mov
hlt
cmp
jp
pop
mov
popa
pop
nop
pop
dec
(bad)
out
fidiv
iret
mov
les
pop
cmp
div
mov
push
xor
in
mov
add
in
add
inc
pop
jge
xor
mov
call
add
xor
out
jecxz
es
xor
lahf
inc
cmps
sbb
and
inc
into
jne
xchg
(bad)
xor
dec
sbb
frstor
sub
and
xchg
leave
push
add
sti
pop
int
mov
aaa
or
icebp
(bad)
popf
or
and
xor
mov
fwait
retf
shl
jmp
xor
jmp
test
jge
addr16
aas
popa
js
stos
stos
fstp
cld
in
std
adc
rol
lock
outs
leave
adc
sti
dec
add
ins
pop
imul
or
adc
dec
stos
stos
sub
ror
cdq
add
jbe
xor
push
xchg
xchg
mov
push
aam
loope
push
add
es
cmp
repnz
mov
jb
cmp
jno
dec
jnp
push
xor
mov
xor
fstp
sub
or
je
pop
push
mov
jmp
and
pop
sub
pop
ror
cmp
jmp
lea
push
mov
sar
dec
jns
lea
loope
jle
das
mov
pop
inc
cli
cs
cli
mov
mov
inc
add
sti
inc
or
fimul
mov
mov
les
fcom
mov
je
push
dec
mov
fild
popa
mov
inc
hlt
jno
mov
cmc
push
shl
fcomp
fsub
xor
xchg
retf
fisubr
adc
jbe
sbb
or
scas
out
push
in
jle
mov
aad
sbb
add
mov
adc
sub
icebp
mov
jmp
iret
sbb
es
sub
jno
adc
fsubrp
adc
stos
popf
adc
ins
popf
lds
or
ins
adc
ret
pop
jb
ret
ror
aam
pop
pop
test
imul
add
inc
int
pusha
adc
push
daa
push
inc
(bad)
mov
mov
hlt
pop
mov
test
xor
inc
enter
scas
aam
xchg
jge
mov
sub
jmp
mov
xchg
mov
add
je
push
popf
cmps
or
xchg
call
iret
and
dec
shr
pop
and
jnp
loopne
push
add
lods
dec
cmps
jl
xchg
inc
push
add
mov
ins
shr
sbb
adc
(bad)
or
fs
cmps
fistp
aaa
add
retf
push
and
retf
shr
xchg
mov
pop
cmps
mov
cmp
cmp
aam
lds
cli
jb
adc
sbb
cs
mov
int
and
jmp
mov
mov
and
(bad)
cmp
call
ret
mov
cmp
mov
jno
push
test
push
xchg
sar
ds
popa
test
enter
mov
inc
out
push
push
sub
pop
imul
bound
pop
pop
inc
(bad)
push
sbb
adc
jge
sbb
pop
cmp
mov
cmp
push
fdiv
xchg
push
add
jl
stc
cmp
mov
retw
add
call
popa
mov
fwait
jae
bnd
sbb
xor
push
jle
jae
cmp
adc
dec
mov
push
es
mov
sar
sub
shr
jbe
jae
adc
dec
fsubr
ror
xchg
ret
icebp
inc
xchg
sub
loop
retf
pop
aaa
xor
xchg
mov
cdq
mov
push
cmp
mov
adc
jmp
out
das
call
lods
(bad)
retf
jge
jnp
mov
cmp
add
daa
popa
xchg
shr
and
test
inc
test
outs
(bad)
adc
lds
mov
ds
vsubss
outs
push
in
and
fldenv
out
add
pusha
ret
xor
iret
(bad)
popf
loope
adc
add
pop
sti
xlat
cld
shr
dec
aam
ins
cwde
sub
(bad)
xchg
pop
sbb
mov
loop
push
fbld
xchg
mov
add
adc
push
xchg
mov
std
mov
adc
pop
add
adc
mov
mov
mov
loopne
(bad)
mov
mov
pop
inc
inc
out
cmp
cmps
xchg
xor
dec
jo
fwait
aas
dec
scas
xchg
repnz
stos
and
and
in
sub
and
dec
daa
fimul
cli
aad
push
push
push
jne
sbb
inc
adc
bound
mov
sti
leave
and
cmp
xchg
scas
outs
jbe
xchg
sets
mov
rcl
mov
icebp
jecxz
jns
lock
outs
jb
pop
les
pop
les
jg
fnstcw
xor
movs
and
jecxz
xchg
ja
push
mov
pop
dec
in
test
push
scas
xor
clc
daa
scas
cmp
dec
loopne
rcr
add
inc
xchg
gs
push
stos
retf
das
lods
stc
mov
add
jne
push
xor
or
stc
pop
and
repnz
mov
aam
std
rol
sbb
dec
xchg
jp
aam
call
jne
xchg
arpl
ss
push
dec
jp
sub
sub
int
xor
popf
test
sub
mov
ins
jo
inc
ja
and
xcrypt-cfb
sub
lock
fnstsw
or
lock
lds
dec
jl
or
jecxz
dec
cdq
les
lds
iret
aas
lds
out
in
mov
cwde
inc
in
sbb
sahf
aam
cmp
daa
mov
xlat
cli
es
dec
sub
add
push
(bad)
add
inc
loopne
ret
inc
xchg
daa
dec
or
mov
push
jae
mov
jno
call
int
xor
and
and
sub
jae
mov
xchg
push
pop
es
adc
pusha
xlat
ja
mov
fcom
cs
pop
xchg
add
(bad)
jmp
mov
mov
add
inc
shl
sub
xor
(bad)
and
js
inc
sbb
mov
int
call
test
mov
sbb
cmp
ins
mov
enter
fidivr
es
jbe
stc
mov
fdivr
sub
es
repz
dec
mov
icebp
dec
and
jecxz
shl
loopne
aam
pop
shl
repz
in
not
sbb
lahf
cmp
sub
pop
call
mov
sbb
xchg
js
retf
fild
mov
mov
sbb
jmp
sbb
retf
add
les
bound
inc
and
call
loop
ss
xor
jne
or
jbe
xor
int3
mov
jecxz
mov
sbb
add
sub
cmp
or
add
pop
push
int3
mov
and
pop
shr
or
push
adc
adc
adc
out
cmp
xor
retf
retf
mov
or
cmp
daa
iret
dec
loope
outs
out
xor
adc
fiadd
js
sti
test
jl
outs
sub
pop
mov
xor
das
icebp
bound
push
pop
clc
dec
sbb
or
stos
push
nop
push
adc
xor
xchg
psubusb
out
ins
test
mov
ins
or
mov
pushf
ins
sbb
mov
loop
xchg
mov
inc
fsub
xchg
movs
or
imul
or
adc
mov
(bad)
add
mov
outs
gs
loopne
cmps
(bad)
test
jbe
je
jmp
xor
(bad)
sti
xchg
xchg
jge
stos
pop
imul
mov
in
jno
mov
dec
in
std
jb
inc
pop
sub
xchg
(bad)
call
stos
jnp
adc
cmp
jp
shr
sub
hlt
xchg
and
push
out
add
push
out
fistp
and
movs
enter
push
jae
cdq
rol
mov
jns
movs
mov
jb
fidiv
fmulp
push
jl
fisub
push
aam
into
cwde
sbb
retf
jge
or
mov
or
mov
push
mov
retf
sub
jg
loopne
call
jns
movs
mov
push
xchg
jecxz
and
enter
jle
add
mov
add
stos
idiv
inc
push
push
sub
aaa
jmp
xlat
neg
mov
cmc
gs
hlt
stos
and
ret
xchg
cmp
dec
jnp
in
ffree
aaa
adc
cmp
pusha
aaa
sbb
lea
fwait
push
dec
push
or
jge
jae
cmp
out
adc
aad
jbe
add
inc
in
sbb
or
mov
or
jns
or
test
add
mov
out
imul
pop
xchg
ja
jmp
jmp
ins
and
inc
mov
inc
scas
out
aas
pusha
mov
xchg
int
adc
loopne
xor
popa
aam
jns
les
pop
push
jns
pop
movs
nop
ins
mov
cmp
loopne
out
mul
push
(bad)
mov
movs
pushf
inc
sub
popa
iret
mov
add
cmc
xor
retf
daa
das
add
xchg
sar
mov
cmp
les
adc
and
and
icebp
and
test
inc
jne
jb
push
and
jecxz
ret
cli
mov
inc
xor
cmp
test
cdq
and
xchg
jne
into
sti
mov
pusha
aad
retf
jp
jb
outs
sub
dec
aam
adc
push
xchg
cdq
jbe
push
push
dec
sti
icebp
sub
jge
addr16
add
inc
cwde
test
arpl
mov
ret
mov
aas
jmp
cmp
dec
aas
adc
jge
outs
push
or
mov
xchg
shl
movs
dec
movs
sub
call
pop
(bad)
inc
adc
cmp
test
aas
out
mov
xor
xor
fwait
add
mov
jle
dec
sub
aas
imul
cdq
ret
dec
pop
sbb
int3
ret
xchg
jge
add
ins
xchg
push
add
in
nop
pushf
jns
or
popf
push
shr
push
in
pop
jge
dec
mov
mov
cdq
push
das
daa
jmp
push
sub
adc
jecxz
(bad)
cmps
mov
enter
adc
push
jle
xlat
lea
jecxz
rcr
aaa
xchg
dec
push
std
sti
lock
popf
aam
jmp
fmul
jb
cs
adc
scas
cwde
xchg
xor
mov
mov
mov
push
or
inc
pop
ret
enter
nop
sahf
aam
stos
sbb
and
and
add
push
les
es
bnd
add
mov
out
arpl
sub
jmp
xor
mov
stos
scas
xor
pop
repnz
push
imul
outs
dec
sahf
or
pop
in
and
xchg
sub
jmp
shl
in
mov
fmul
jmp
or
lea
mov
dec
jmp
mov
mov
jbe
call
pop
push
mov
fsubr
daa
and
dec
arpl
cs
adc
cmp
daa
test
sbb
cmp
push
outs
test
xor
and
pop
scas
scas
sub
dec
mov
mov
pop
pop
fadd
arpl
fwait
sub
ja
xchg
dec
cld
pop
out
mov
das
cmp
and
jo
(bad)
test
mov
pop
mov
in
add
dec
pop
jae
fmul
xchg
add
push
dec
adc
cmp
psubb
cdq
imul
push
jmp
cmp
js
fiadd
pop
shl
aam
add
nop
scas
daa
imul
xchg
jge
(bad)
fwait
xor
ret
or
shl
sub
and
iret
add
jmp
push
push
pop
clc
xor
mov
in
(bad)
fstp
je
mov
imul
cmc
adc
and
or
inc
mov
xor
xchg
call
push
mov
dec
add
xchg
lods
mov
bound
daa
rol
cdq
rcr
(bad)
fcomp
fist
ja
enter
mov
xchg
fild
sbb
inc
daa
xchg
xor
push
in
jno
xor
repnz
push
ficomp
scas
inc
mov
mov
scas
test
add
out
or
mov
push
ror
jns
rcl
jp
or
fwait
lahf
push
loopne
in
repnz
pusha
adc
dec
mov
push
aas
pushf
adc
ss
cwde
(bad)
mov
out
shl
pop
mov
adc
mov
adc
jne
and
ins
jge
xchg
(bad)
pop
cwde
cmp
mov
cmp
pop
loope
pop
sbb
(bad)
outs
xor
pop
ins
adc
jno
pusha
push
fsubr
adc
cmp
addr16
mov
mov
scas
out
lea
sub
mov
imul
popa
stos
dec
jno
stc
shl
add
jmp
sbb
shr
cwde
adc
int
loope
(bad)
cmp
stos
sbb
outs
jne
retf
ins
sar
cli
out
add
pop
ret
and
test
stos
hlt
jno
jmp
inc
push
inc
push
xor
je
pop
aas
push
(bad)
in
mov
repz
jecxz
rcr
push
mov
aad
das
dec
lods
dec
into
add
push
jo
mov
and
cmp
bound
(bad)
sbb
in
ror
stos
jecxz
mov
and
sbb
jbe
leave
and
imul
nop
push
sahf
ror
or
ja
or
mov
jl
je
mov
xor
adc
loope
xor
sub
jb
lods
adc
test
jmp
cdq
lds
test
xor
mov
lds
push
mov
cli
bound
sub
sti
xchg
jmp
cmp
iret
test
icebp
dec
mov
cmp
mov
test
repnz
pop
test
adc
dec
fidivr
push
and
je
dec
test
mov
mov
pop
jl
hlt
dec
mov
xor
test
jns
lods
xor
jb
pop
ret
mov
push
xchg
fidivr
cmp
pusha
and
adc
mov
sbb
jne
cmp
xor
mov
(bad)
scas
leave
stos
mov
xor
xchg
push
fild
xor
xor
pop
and
xchg
inc
out
in
inc
and
mov
rcr
aaa
arpl
int3
jle
in
mov
int
mov
fisub
add
int3
or
arpl
jmp
cmc
pop
std
lods
aad
out
jae
(bad)
retf
ss
add
in
mov
cs
aaa
jne
pop
mov
cwde
or
pop
or
call
imul
and
(bad)
and
xor
jge
cmp
adc
fs
loop
mov
pop
outs
mov
stc
push
push
mov
push
test
cld
jnp
sar
jecxz
xor
outs
addr16
sar
test
rcl
xchg
retf
xchg
fnstenv
repnz
and
mov
test
int
(bad)
ins
push
xchg
stos
push
outs
rcr
nop
sub
xor
sub
adc
jb
mov
xor
xor
xor
xchg
jecxz
rcl
push
data16
pop
mov
cmp
in
and
bound
push
sar
pop
xor
cmps
std
add
or
out
je
mov
outs
cmps
mov
stc
inc
sub
sbb
bound
imul
pop
pop
test
outs
xor
xor
pop
jg
test
jg
(bad)
jecxz
pushf
xchg
and
lahf
and
(bad)
pop
icebp
mov
bound
adc
in
out
sub
mov
adc
or
test
jno
pop
cmp
or
(bad)
fiadd
jno
xchg
push
pop
sbb
jecxz
aas
(bad)
sahf
sbb
scas
push
ret
jno
call
inc
push
push
aas
mov
jne
in
(bad)
or
aad
pushf
rcr
into
mov
je
dec
fiadd
jne
inc
cwde
hlt
loop
push
shl
ror
push
pop
inc
stos
mov
and
outs
popf
(bad)
cmp
or
cmp
aad
ss
data16
sar
call
mov
sub
push
cmp
call
jmp
aaa
pop
loop
xchg
or
or
xchg
mov
rcl
mov
into
lods
xchg
addr16
cdq
enter
scas
addr16
cmps
or
sub
sub
cmp
cmp
pop
push
cmps
ret
mov
ja
pop
scas
cli
xlat
fild
repz
pushf
sahf
mov
shl
cli
dec
jb
cdq
loope
wbinvd
fucomp
cmp
adc
jmp
sbb
cmps
push
pop
cmps
add
cmps
adc
xchg
adc
aad
dec
push
mov
or
pop
or
out
jmp
iret
jge
pop
call
popa
jl
xor
xchg
scas
scas
sub
add
jg
into
std
xor
dec
dec
xchg
push
loop
je
icebp
add
jne
std
std
or
lahf
rol
dec
pusha
sbb
addr16
xchg
loop
add
je
(bad)
add
sti
lods
repz
adc
int3
and
jl
mov
pop
mov
fcmovnb
mov
push
ret
xchg
retf
out
aad
push
push
mov
push
xchg
js
or
push
rcr
adc
ror
rol
ss
cmp
in
stc
daa
sub
adc
dec
sti
mov
xchg
adc
out
sbb
pop
test
cmps
push
add
inc
fisub
add
mov
inc
pusha
es
push
cld
lock
add
imul
stos
mov
add
scas
cwde
test
add
mov
xchg
test
test
push
ss
add
shufps
add
xchg
nop
dec
cld
fwait
inc
pop
int
xor
pop
push
daa
cmp
imul
nop
ret
or
stc
cdq
pop
pushf
push
shr
popf
lds
lds
loope
shl
(bad)
jl
mov
loopne
pop
repz
jmp
hlt
retf
jl
jmp
xor
pop
(bad)
and
jnp
cs
and
ficomp
pop
or
cs
xlat
xchg
mov
fiadd
std
into
inc
add
mov
idiv
fild
xor
test
(bad)
mov
mov
pop
loop
repnz
add
movs
jno
(bad)
repz
cmp
leave
loopne
push
adc
mov
sub
lds
mov
jnp
leave
scas
test
push
mov
in
out
inc
fst
jns
das
aaa
pop
xchg
test
shr
dec
pusha
js
repnz
mov
add
lahf
(bad)
clc
mov
leave
sub
std
xor
dec
jl
rcr
mov
lahf
popf
int3
cmps
xchg
cmp
repz
pop
enter
inc
mov
lea
inc
xor
adc
mov
jmp
cmc
stos
loopne
pushf
inc
xor
cli
mov
mov
inc
pop
rol
inc
cdq
inc
inc
fisub
out
cs
pushf
retf
xchg
ret
pusha
pushf
inc
cmps
fisubr
cwde
adc
and
ins
add
fsub
cli
retf
call
mov
shl
ds
jbe
mov
cld
rol
mov
retf
and
aam
push
push
fmul
jae
dec
(bad)
and
out
mov
ins
outs
push
arpl
cmp
out
fdivr
mov
jnp
inc
mov
pop
lods
test
add
xor
dec
cmps
fcom
in
push
mov
add
mov
mov
pop
adc
mov
mov
mov
inc
fadd
push
sbb
add
or
cwde
ja
jge
or
fbld
mov
(bad)
lea
lds
mov
lahf
xchg
call
clc
in
pop
(bad)
push
mov
in
ins
mov
or
(bad)
jb
jmp
mov
push
inc
push
pop
push
cmps
pop
pusha
xor
mul
jno
(bad)
and
outs
scas
shl
and
cmp
adc
and
iret
dec
jno
and
pusha
outs
pop
test
xor
jmp
out
mov
rcr
enter
popf
fdivr
daa
retf
cmp
pop
cmp
clc
icebp
cmc
or
mov
add
sub
(bad)
or
imul
dec
cmps
cmp
scas
jnp
jnp
pop
pop
xchg
cld
fsub
add
imul
pop
stos
pop
push
and
scas
sbb
lahf
pop
dec
jmp
pop
dec
xchg
test
imul
repnz
add
pop
mov
pop
arpl
xchg
jo
add
sbb
test
and
mov
mov
mov
daa
dec
dec
dec
test
add
popa
lods
dec
ja
imul
sti
xor
sub
in
out
push
outs
arpl
cmp
pop
ror
test
jbe
(bad)
pop
push
xor
add
mov
inc
mov
inc
xchg
jecxz
ds
cmp
pop
xlat
xor
sti
dec
sbb
call
jecxz
lods
jno
xlat
addr16
cmp
loope
cmps
push
dec
imul
jl
test
ret
jbe
sub
or
sbb
aad
les
movs
jg
and
xchg
mov
push
ja
ins
dec
int
pop
ret
sub
retf
sahf
mov
cwde
push
inc
xchg
fnstenv
cs
ss
push
adc
call
shl
xor
jp
lahf
subps
xchg
fstp
pop
(bad)
and
and
adc
test
gs
or
sub
das
call
lahf
and
shr
xor
addr16
sub
stos
fstp
bound
add
movs
repnz
(bad)
cmp
mov
lea
retf
push
movs
dec
cwde
cmps
daa
fscale
add
imul
inc
pop
aaa
ins
fadd
xchg
jnp
and
cdq
arpl
(bad)
sub
push
out
cwde
xor
mov
dec
cmp
inc
loopne
mov
ror
mov
xchg
mov
cmp
das
pop
test
imul
fs
sbb
test
stos
imul
nop
sbb
popa
inc
enter
mov
add
lods
sub
aaa
adc
inc
pop
es
pop
test
lahf
mov
retf
xchg
cmp
jg
sub
inc
(bad)
data16
lods
sub
and
test
imul
int3
sub
pop
xor
xor
jo
lea
lods
jmp
ret
cmp
xor
mov
inc
loope
sub
loopne
movs
xchg
xchg
push
and
xor
inc
jnp
jbe
pop
sbb
imul
mov
cmp
or
and
add
sbb
(bad)
fild
cs
dec
dec
das
add
es
movs
sub
(bad)
rcl
rcr
cdq
xchg
push
mov
dec
inc
or
mov
jnp
out
add
out
femms
icebp
mov
jns
movs
sub
cmp
ds
cmps
dec
cmc
xchg
stos
cmp
pop
mov
adc
cmc
inc
sbb
int
test
fidivr
sub
outs
dec
repz
inc
call
(bad)
aaa
and
(bad)
fmul
in
and
or
stc
aad
mul
das
xchg
jge
idiv
push
jns
and
add
sar
sbb
mov
or
call
pop
or
ds
or
pop
dec
adc
inc
outs
int
and
inc
test
mov
sti
lahf
and
scas
retf
mov
push
repz
test
mov
pop
xchg
push
sub
frstor
scas
in
lea
dec
push
adc
ins
scas
pop
inc
push
sbb
fdivr
mov
push
fsub
jno
loope
push
mov
xor
fisttp
push
adc
je
mov
lods
or
out
add
and
jmp
cld
jmp
out
cmp
and
fcomi
push
lods
ror
shr
jo
and
jne
pop
(bad)
dec
lea
adc
dec
mov
or
push
in
cmp
jg
jg
pop
test
je
sbb
ss
imul
sar
nop
test
out
cmp
lods
pusha
jp
pop
ret
cmp
pop
inc
bnd
pop
mov
mov
dec
jmp
aas
cmp
dec
push
xchg
adc
enter
add
push
in
shr
das
mov
ins
adc
and
mov
bound
inc
adc
(bad)
jnp
lods
(bad)
push
ja
cmps
mov
jno
xor
lock
xchg
mov
in
jbe
mov
outs
pop
mov
call
retf
fwait
xchg
lea
adc
fadd
push
out
xchg
rcr
fistp
cmp
jp
aas
mov
enter
add
push
fdivr
add
jg
inc
cmps
push
js
sti
mov
std
xor
mov
aad
xchg
dec
ss
lds
retf
and
fcomp
inc
repnz
push
jl
jg
dec
xlat
jmp
xor
popa
jge
dec
jp
pop
cmp
(bad)
movs
pop
dec
jnp
adc
mov
xchg
cmp
ins
test
(bad)
shl
fdiv
iret
xchg
mov
adc
xchg
pop
popf
pop
mov
mov
movs
inc
inc
sar
call
out
or
ret
int3
test
sub
inc
push
hlt
fsubr
mov
mov
imul
mov
pop
xor
out
sub
movs
arpl
imul
xchg
ret
pusha
pop
les
shl
mov
das
jmp
mov
loope
neg
into
jmp
mov
jle
inc
stos
pop
iret
lods
xor
mov
sub
and
ins
in
and
into
adc
and
(bad)
in
jg
(bad)
cmps
fwait
in
test
imul
pop
mov
aam
in
stos
dec
cmc
(bad)
jno
loop
inc
(bad)
xor
mov
int
mov
inc
inc
test
mov
sbb
loopne
jg
rol
or
in
(bad)
and
shr
shl
in
retf
ss
adc
stc
js
jle
outs
pop
and
frstor
fld
adc
add
and
ret
mov
adc
mov
add
push
xchg
jg
out
in
mov
mov
call
mov
push
test
sub
aas
ret
into
mov
adc
push
fwait
imul
xchg
and
sub
iret
test
inc
bound
dec
or
in
sti
leave
jmp
out
mov
pop
fwait
not
add
call
mov
jbe
pop
sar
ins
repnz
cdq
cmp
jne
fcomp
fisub
adc
xor
bound
ror
mov
mov
inc
push
test
iret
and
das
movs
mov
push
cmp
mov
icebp
mov
xchg
mov
call
gs
push
xchg
push
aaa
cmc
push
cmps
jo
pop
call
out
xor
repz
pop
fwait
mov
add
jae
sbb
jecxz
fld
sub
rcr
retf
std
test
aam
cdq
dec
fdivr
mov
push
push
push
stc
add
or
fbld
frstor
cmp
fs
fidiv
push
out
mov
or
ror
shl
and
fist
mov
dec
loop
retf
push
jb
dec
mov
shr
cmps
in
out
and
and
ret
clc
jae
imul
in
nop
call
xchg
out
xor
and
into
sbb
xor
les
in
jnp
ins
jno
xor
fisttp
out
test
sub
xchg
push
std
mov
mov
cmp
mov
pop
sbb
(bad)
push
push
jmp
std
sbb
in
(bad)
call
or
pop
in
mov
xor
pop
and
xchg
addr16
mov
out
dec
cli
push
lea
cdq
lds
call
jnp
jo
and
push
and
std
add
call
or
repz
add
cmc
xor
push
sub
cmp
repz
sbb
sti
jmp
pop
mov
xchg
mov
dec
mov
les
ret
mov
pop
push
mov
lods
pop
repz
idiv
dec
outs
sar
lds
and
sti
or
aaa
pop
adc
inc
cs
or
and
ror
dec
sti
jno
push
dec
outs
mov
hlt
movs
stc
sbb
in
call
shl
rcl
in
lods
cmps
sub
rcl
push
leave
aas
pop
idiv
pop
cli
mov
push
in
iret
stos
lea
(bad)
xor
jp
or
daa
fld
dec
ret
nop
fsubr
(bad)
xlat
add
mov
mov
xor
cld
add
add
cmp
sar
sbb
(bad)
int3
lock
push
cmps
lock
test
push
jle
cwde
sub
leave
xor
call
call
and
rol
jle
dec
cmp
mov
jmp
mov
cdq
sbb
add
mov
nop
mov
cmc
pop
mov
cmp
lahf
in
push
movs
(bad)
sar
jg
repnz
aad
movs
or
or
out
xchg
xor
in
and
test
popf
sub
xor
setl
or
xchg
mov
arpl
sbb
sub
pop
mov
inc
inc
ins
dec
repnz
mov
push
(bad)
xchg
inc
inc
in
jns
or
test
sbb
shl
sbb
mov
sbb
mov
sub
jno
test
add
sub
and
dec
or
jmp
ins
es
ins
data16
sbb
repz
jecxz
aad
sub
fisttp
sbb
std
or
jmp
sub
pop
imul
jmp
adc
inc
sbb
shl
cdq
frstor
shl
cwde
outs
rcl
addr16
or
outs
add
int3
mov
movs
cmp
add
mov
mov
push
dec
sbb
mov
mov
inc
int
retf
pop
pop
xchg
xor
mov
sub
adc
das
sbb
cmp
mov
add
cmp
stos
clc
call
cmp
sbb
popf
scas
fstp
mov
jnp
sbb
nop
and
xor
dec
aad
mov
adc
leave
scas
inc
push
pop
dec
sbb
cld
jl
adc
jns
xchg
inc
repnz
jge
or
in
fst
lahf
ds
push
ins
and
les
cmps
hlt
gs
sub
ja
push
adc
pop
mov
dec
outs
mov
in
sbb
mov
repz
xor
mov
jo
mov
adc
(bad)
cmps
scas
push
xchg
imul
xchg
ins
clc
sbb
and
test
pop
popa
fdiv
data16
add
xchg
je
nop
pop
hlt
call
cmp
sbb
int3
mov
in
fdivr
repz
pusha
ins
and
jge
xchg
inc
sub
in
lods
xchg
stc
or
dec
push
adc
retf
arpl
xchg
mov
dec
popf
fs
xchg
or
idiv
xchg
mov
in
add
push
retf
cmp
int
cmp
in
ds
sub
fwait
mov
sub
int3
daa
repz
test
push
or
or
mov
fisttp
ret
repz
out
icebp
cld
inc
lds
add
fcmovu
sbb
js
test
jmp
cs
ror
gs
and
adc
dec
aam
repnz
movs
adc
push
jg
imul
cs
inc
aam
dec
bnd
or
xchg
jge
pop
ror
cmps
data16
in
mov
push
dec
sti
test
inc
xor
push
or
imul
fsub
fidiv
sbb
jae
repnz
dec
and
mov
push
xchg
data16
setp
stc
loop
adc
push
cwde
cs
and
mov
aas
clc
jecxz
stos
adc
movs
faddp
xor
retf
stos
arpl
movs
sbb
loope
(bad)
aaa
sub
adc
mov
adc
sbb
(bad)
jecxz
sub
jmp
out
mov
xchg
or
jle
cmps
push
or
xchg
add
int3
mov
sbb
cmp
mov
ret
xchg
repz
shl
jl
dec
aam
push
ins
push
bound
rcr
mov
sahf
push
in
pop
pop
dec
push
outs
xor
pop
mov
lods
stc
call
jb
xchg
ret
push
mov
pop
retf
jp
cwde
push
jb
shl
setb
(bad)
sub
comiss
enter
cmp
xchg
cmp
jnp
ror
(bad)
pop
pop
inc
xor
jae
and
ins
loopne
adc
sbb
aad
pop
mov
mov
cdq
rol
mov
in
push
test
jmp
pop
aas
xor
mov
shl
fld
add
adc
les
jne
cmp
stos
push
add
movs
stc
dec
dec
int3
imul
mov
or
push
fldenv
xlat
xor
push
dec
pushf
mov
addr16
lahf
push
jno
jmp
mov
mov
push
xchg
and
pusha
repz
je
push
mov
jnp
cmp
pusha
jae
mov
pop
inc
and
loope
sub
xchg
jecxz
inc
les
(bad)
mov
mov
pop
std
sbb
jno
std
push
test
xor
pop
sahf
pop
outs
push
push
nop
into
and
mov
dec
fbstp
fld
pop
xchg
push
into
test
ins
(bad)
(bad)
fwait
and
push
sub
jp
sbb
nop
cmp
pusha
or
push
ins
fld
pop
sub
lahf
xor
je
mov
push
outs
sub
rol
sbb
dec
push
dec
jns
mov
fcomp
call
sahf
sbb
pop
mov
cmp
xchg
inc
mov
aad
add
fldz
arpl
add
fsub
inc
inc
cdq
xor
sahf
or
inc
ins
loope
xchg
pop
or
cdq
and
sub
fidiv
sahf
inc
xor
retf
aaa
daa
cwde
pop
xor
test
out
mov
inc
js
xor
data16
cmc
add
inc
xchg
es
push
push
add
retf
push
loope
dec
call
and
loop
mov
cmp
mov
hlt
cwde
dec
es
sbb
ja
imul
int
mov
cmps
inc
hlt
pop
fstp
sbb
loope
push
xchg
push
outs
add
inc
add
and
or
test
retf
push
sub
and
(bad)
jns
mov
xchg
cmp
cwde
in
xchg
test
mov
ret
(bad)
call
je
inc
call
pop
mov
mov
and
jmpw
inc
adc
loope
cmp
mov
mov
gs
push
mov
jne
adc
cmps
xchg
dec
mov
or
xor
push
and
cs
les
xchg
push
xchg
or
pop
and
and
dec
mov
clc
and
imul
ins
js
push
int
or
test
cs
add
call
es
ret
pop
dec
inc
call
movs
cmp
push
ret
jl
pushw
xlat
hlt
dec
dec
scas
iret
xlat
jge
xor
xor
mov
mov
push
adc
icebp
and
dec
dec
add
xchg
aam
push
or
loope
cld
jns
push
stc
jns
shl
mov
lock
xlat
mov
xchg
cmp
mov
dec
mov
xor
and
popa
sti
call
stos
add
cli
sbb
inc
push
iret
jnp
pop
pop
mov
jl
cmp
or
in
push
mov
rcl
movs
mov
aad
adc
add
aaa
add
pop
inc
mov
push
mov
cdq
cmp
cwde
cmc
or
inc
dec
loope
in
sub
xchg
(bad)
out
mov
faddp
mov
push
pusha
mov
mov
jb
pop
push
add
aaa
or
or
retf
scas
jl
fld
sbb
loopne
mov
and
cmp
push
xlat
jmp
jp
dec
mov
jle
push
pop
ficom
push
add
enter
jmp
in
dec
or
adc
inc
(bad)
dec
push
dec
cmp
bound
daa
int3
stos
mov
scas
xor
outs
push
push
sar
aas
dec
rol
in
retf
lahf
mov
dec
idiv
call
aas
jle
and
(bad)
stos
test
sbb
out
mov
jg
mov
mov
adc
and
and
pop
test
fs
xchg
ja
fsubr
test
imul
pop
add
loop
mov
stos
scas
addr16
enter
ds
fs
cmps
inc
jmp
test
retf
mov
mov
sbb
push
sub
ficom
addr16
out
out
out
test
out
int
dec
xchg
mov
mov
mov
push
pop
rcl
add
and
xor
ins
cli
jns
or
div
add
mov
push
mov
nop
jl
pushf
out
dec
retf
dec
mov
pop
mov
mov
dec
neg
jo
sbb
rcl
dec
mov
jb
add
outs
inc
out
sbb
ss
ja
movs
push
mov
inc
(bad)
sahf
cmps
mov
dec
les
popf
(bad)
stos
outs
xchg
int
fnstenv
cmp
adc
cmp
jmp
test
enter
dec
arpl
sbb
(bad)
xor
jbe
mov
sub
or
test
mov
bound
jl
scas
or
jns
popf
xor
mov
repnz
(bad)
mov
xchg
not
dec
cmc
mov
jecxz
shl
xchg
fnstenv
enter
out
inc
push
mov
ret
dec
push
mov
sar
push
sbb
push
sub
cdq
ret
cmc
or
stc
outs
add
dec
cmp
retf
mov
jp
jnp
ficom
es
fdiv
imul
or
inc
jo
add
jl
sbb
push
lods
mov
jne
add
sahf
jg
mov
mov
movs
jo
repnz
add
and
xchg
adc
repz
mov
jmp
shr
dec
cmps
int3
push
or
leave
les
(bad)
cwde
ds
sbb
cmc
add
sub
jae
xlat
les
les
jge
enter
pop
nop
inc
in
in
inc
mov
jmp
and
xchg
xor
popa
cmps
mov
inc
pop
pop
es
aaa
int3
mov
adc
mov
add
loop
addr16
or
pushf
add
pop
out
dec
lds
push
mov
and
bsr
push
std
dec
fwait
jne
imul
cmp
xchg
and
mov
sbb
aam
and
pop
hlt
xchg
sbb
cli
push
aaa
push
lods
je
and
cwde
aas
inc
add
movs
mov
add
sbb
std
sti
rcl
push
fld
jb
cmc
sti
ja
xchg
shr
clc
mov
push
test
mov
dec
test
pusha
sub
sbb
pushf
movs
call
addr16
pop
add
dec
(bad)
fiadd
mov
xor
sub
jns
jle
int
xor
add
and
sbb
das
push
js
push
jecxz
inc
je
iret
pusha
es
pusha
lods
out
or
cmp
cmp
add
or
in
push
mov
and
and
jne
outs
shl
inc
imul
iret
bound
popa
xchg
jmp
mov
out
fmul
pop
mov
adc
cmp
or
sub
call
int
repnz
xor
mov
xchg
sub
jp
not
(bad)
(bad)
adc
cdq
push
jbe
push
jne
push
lds
pop
pop
ret
scas
enter
mov
and
dec
sbb
sbb
and
xchg
lds
xchg
std
jp
add
pusha
jge
stc
push
test
xchg
mov
repnz
or
and
jl
pop
cli
xchg
cmp
sub
out
lahf
add
mov
adc
cmp
fwait
jno
int
mov
dec
les
loope
adc
xchg
aam
(bad)
cmp
scas
pop
scas
popf
add
sahf
mov
test
pop
jae
adc
inc
jg
fs
cmps
xchg
push
cmps
retf
ins
pop
xchg
add
and
jne
lods
fdiv
outs
jmp
sti
sbb
inc
dec
mov
mov
repnz
and
les
lea
xchg
(bad)
daa
out
jae
push
jmp
ins
jecxz
push
stc
jo
(bad)
add
ins
cmp
(bad)
test
push
idiv
mov
aas
(bad)
icebp
mov
dec
or
sti
fwait
mov
xchg
adc
in
mov
scas
sbb
push
mov
adc
aad
xlat
mov
sbb
inc
pop
xor
(bad)
and
cmp
test
(bad)
push
movs
popf
sbb
dec
int3
pop
cmp
jp
mov
jle
retf
and
pop
and
repnz
cmps
sbb
xor
mov
push
ret
push
mov
adc
mov
or
sub
inc
sub
rol
xlat
jnp
loopne
add
xchg
push
mov
sub
sub
jnp
test
iret
cs
fcmovnbe
aas
sbb
lds
es
xchg
cmp
push
mov
aaa
pop
pop
(bad)
(bad)
(bad)
xchg
je
pop
(bad)
cli
pop
sahf
sub
jmp
(bad)
dec
sti
mov
inc
ret
push
lds
loope
jns
push
int
test
inc
adc
fucom
lods
dec
xor
mov
jle
adc
xchg
jmp
mov
call
fcomp
(bad)
call
mov
sub
mov
in
add
icebp
push
ror
adc
fcmovu
mov
inc
aaa
xor
imul
xchg
inc
push
add
dec
or
test
xor
mov
mov
dec
retf
and
cmp
cmp
arpl
xchg
fidivr
aad
add
or
mov
xchg
dec
adc
inc
lds
or
outs
mov
adc
(bad)
push
paddusb
fsubrp
inc
leave
jecxz
sbb
inc
dec
js
in
mov
call
into
jmp
outs
mov
dec
and
jg
pusha
int
adc
out
sar
outs
fs
push
arpl
sub
outs
dec
test
inc
and
pop
xchg
sahf
lahf
inc
adc
sub
xor
sahf
mov
jmp
sahf
pushf
rol
mov
push
repz
push
or
jno
jnp
cdq
icebp
push
dec
jbe
sbb
add
mov
ficom
stc
dec
mov
(bad)
sbb
pop
and
cs
sub
call
nop
fcmovnb
jae
dec
cdq
xor
out
arpl
(bad)
or
lods
jns
xchg
dec
ds
icebp
cmp
aaa
mov
(bad)
xor
shl
ja
(bad)
cmps
(bad)
push
retf
test
cdq
pop
mov
idiv
or
clc
or
sbb
push
hlt
pop
into
or
xchg
pop
cmp
push
test
jg
xor
add
mov
dec
(bad)
xlat
ret
movs
mov
sbb
inc
mov
push
xchg
xor
cmp
das
jecxz
inc
cmp
or
sar
dec
jg
sbb
jb
mov
aad
je
sub
cmp
fwait
xchg
movs
and
cmp
loope
cdq
sbb
int
pop
div
lods
daa
aam
aam
cmp
sbb
sar
pop
pop
jo
xchg
mov
hlt
sub
and
(bad)
not
in
dec
and
inc
shl
pop
mov
fs
cmc
xor
mov
cmps
add
call
sub
mov
nop
cli
lods
popa
xor
cmp
ds
xchg
jl
pop
popa
push
out
lods
sbb
mov
pop
pop
and
pop
pop
cmps
jge
test
lock
dec
and
xchg
pop
out
mov
pop
jmp
and
jae
mov
test
imul
inc
adc
mov
nop
and
sub
xchg
xchg
xor
jo
pop
imul
cmp
sub
inc
ror
aas
loopne
pop
jne
popa
and
sbb
mov
push
xchg
scas
ja
dec
or
je
in
sub
shl
repnz
xor
add
mov
es
aam
sbb
test
dec
clc
mov
jnp
imul
pop
pop
ss
iret
sbb
jle
jmp
inc
jge
inc
xor
dec
add
mov
fiadd
daa
pop
sub
stos
mov
jns
xor
or
dec
pop
adc
cmp
lea
hlt
ret
adc
push
ss
xor
xor
cmp
mov
pop
imul
jge
std
jg
push
ret
aaa
scas
lods
fbstp
test
std
pop
pop
push
cmp
mov
out
mov
push
inc
xchg
ffree
into
push
outs
push
push
xor
inc
ret
(bad)
dec
pop
adc
addr16
leave
ja
fs
retf
retf
out
lods
outs
pop
push
and
adc
dec
dec
xor
cwde
adc
jmp
rcl
cmp
mov
lods
xchg
nop
stc
xchg
in
cdq
xor
or
lods
sub
pop
jle
jl
retf
pop
push
(bad)
xchg
sbb
fsubr
fist
or
mov
jp
lahf
adc
scas
lock
cmc
xchg
cmp
dec
push
std
cs
dec
add
scas
aas
ins
(bad)
sbb
repnz
retf
mov
icebp
xchg
call
scas
inc
dec
mov
xor
add
data16
cmc
mov
sbb
sar
push
mov
lock
sbb
push
arpl
fld
push
adc
sbb
pop
hlt
adc
retf
dec
es
mov
ret
retf
jmp
jb
pop
out
add
xchg
test
mov
inc
push
xchg
dec
aaa
stc
xchg
ss
cdq
fld
adc
call
inc
loopne
sub
sub
loopne
retf
jmp
pop
scas
(bad)
mov
nop
add
movs
or
pop
push
sbb
sbb
outs
dec
mov
or
ins
sti
sub
aas
inc
out
pop
jge
dec
sar
adc
rol
or
xchg
dec
(bad)
jle
repz
loope
test
mov
cld
pop
(bad)
in
dec
stc
mov
(bad)
push
int
push
mov
push
jge
add
div
lahf
sub
jmp
repnz
fsubp
pop
push
cmp
pop
iret
cs
sub
mov
sbb
jp
sub
and
fstp
adc
retf
mov
add
push
fist
cli
shl
addr16
ret
mov
adc
les
jne
cmp
push
int3
and
inc
sbb
and
out
fidiv
adc
inc
pop
cmc
sbb
bnd
inc
jecxz
iret
fimul
mov
enter
int3
mov
arpl
es
and
jo
fist
aam
sbb
dec
mov
dec
fld
and
jmp
xchg
into
lock
xor
out
or
mov
mov
xlat
mov
rep
cld
or
cmps
cdq
(bad)
(bad)
sbb
cmps
inc
(bad)
hlt
xchg
sbb
movs
inc
arpl
fs
add
vcomisd
and
xchg
sub
imul
mov
cmp
mov
bound
sbb
in
pop
push
rol
mov
adc
fisttp
sub
lds
sub
sbb
push
mov
test
inc
sub
jmp
mov
aam
mov
add
xor
sar
(bad)
clc
mov
retf
clc
xchg
(bad)
icebp
das
adc
sub
mov
repnz
cld
in
rcl
add
sbb
and
and
sbb
(bad)
and
cs
repz
cmp
lods
jle
inc
mov
ja
ror
lock
clc
xor
dec
pop
int3
sbb
nop
fistp
and
xchg
jmp
aam
data16
adc
aas
add
imul
lods
jns
cmp
fisub
inc
popf
lahf
mov
in
test
mov
jmp
push
jne
fdiv
dec
(bad)
retf
sahf
clc
cld
xchg
and
les
adc
out
aas
mov
mov
pop
pusha
adc
popa
push
fxch
jbe
dec
mov
dec
push
mov
js
je
mov
fwait
je
nop
popa
inc
or
inc
call
punpckldq
stos
jnp
in
popa
mov
fdivr
cwde
xlat
adc
jle
scas
jnp
dec
cmp
pop
(bad)
pushf
shr
arpl
xor
shl
out
dec
cmp
xchg
inc
ins
mov
arpl
out
push
aaa
xor
sub
and
pop
inc
retf
xor
pop
loop
fidivr
stc
cwde
es
hlt
popf
dec
inc
repnz
lds
push
sbb
aaa
ss
push
xlat
xchg
xchg
dec
jb
inc
shl
adc
loope
pop
xlat
retf
push
mov
adc
mov
jl
mov
inc
inc
cmp
addr16
add
ins
out
popf
and
sar
out
outs
pop
imul
cmc
push
jnp
test
popa
mov
xlat
push
sbb
ret
pop
inc
repnz
inc
dec
pusha
out
jmp
or
cli
sar
in
cwde
mov
pop
enter
test
(bad)
arpl
xchg
test
mov
vpsrlw
popf
mov
jl
cmp
inc
cdq
mov
inc
add
cmp
stc
ficomp
lods
pop
cs
mov
loope
xchg
xchg
repnz
mov
cs
das
cmps
pop
xchg
and
and
cmps
jge
sbb
out
adc
lds
les
popf
dec
mov
push
fistp
mov
xor
movs
or
bound
xor
xchg
or
or
cli
rcr
movs
cmp
or
retf
mov
call
stc
in
mov
or
adc
(bad)
adc
retf
shl
out
adc
sti
aas
popf
xchg
mov
daa
xchg
cmp
sub
out
jno
enter
inc
adc
sbb
push
in
in
xchg
mov
mov
adc
cld
vpcmpgtw
mov
int
std
ds
loopne
test
or
push
mov
adc
pop
mov
cmp
mov
out
ins
ins
loopne
fisub
fld1
int
xchg
shufps
sbb
mov
shl
mov
sub
cmp
in
shr
mov
mov
pop
add
jl
and
loop
jl
push
mov
pop
add
jmp
adc
aaa
dec
mov
movs
inc
cmps
mov
sbb
ss
call
lods
int3
movs
(bad)
call
je
repnz
mov
pop
and
fwait
or
gs
mov
das
(bad)
icebp
enter
cmps
xor
out
mov
fcomip
aad
lock
mov
test
add
cdq
(bad)
rcl
push
in
aaa
inc
sub
outs
cdq
pop
xor
es
hlt
push
mov
push
jbe
ds
stc
push
call
popf
mov
mov
test
sbb
and
test
xor
jle
sub
fwait
pop
sar
mov
sub
ret
xor
inc
mov
inc
pushf
je
dec
pop
sbb
pop
rol
mov
popf
je
or
aam
addr16
or
iret
jg
test
(bad)
aam
pop
or
inc
jmp
(bad)
dec
(bad)
(bad)
pop
test
fcmovnbe
pop
dec
mov
jae
sahf
mov
mov
mov
retf
repz
lock
push
push
(bad)
push
pop
shr
cmps
fcom
push
fldcw
out
lods
pop
mov
inc
xchg
fild
out
add
xor
dec
dec
pop
adc
shr
vprotd
outs
dec
std
jl
fcmovu
inc
sub
sbb
mov
sbb
jl
adc
ds
add
sti
loope
sub
add
retf
adc
vmwrite
rcr
ficomp
bound
xlat
imul
in
push
(bad)
xlat
dec
xor
push
xchg
mov
mov
dec
cmc
loope
dec
sbb
jmp
fwait
(bad)
in
je
sub
mov
xchg
xchg
xor
outs
push
cs
movs
fisub
pop
xor
stos
inc
(bad)
or
sar
(bad)
shr
dec
sar
sub
je
mov
test
dec
fldenv
and
adc
mov
jae
imul
sub
stc
imul
jnp
out
and
loope
jnp
out
mov
jnp
mov
repnz
add
fisttp
mov
mov
sub
daa
pop
adc
pushf
inc
test
cmp
imul
inc
jns
sub
std
fs
sti
jl
sbb
xor
mov
xchg
inc
shrd
cld
mov
xchg
ins
pop
je
mov
mov
call
push
cmp
fcmovbe
movs
lock
and
dec
xchg
sbb
xchg
(bad)
cmp
sbb
aad
fisubr
xchg
fs
inc
sahf
or
mov
mov
pop
ret
repnz
stos
ins
lods
jmp
xchg
or
add
ss
mov
mov
fld
pop
iret
stos
cmps
inc
push
stos
mov
xor
repnz
pop
cwde
add
inc
imul
and
add
mov
jle
push
inc
pusha
repnz
jbe
xchg
mov
jmp
in
adc
jno
pusha
enter
pop
int3
lods
jne
inc
(bad)
jne
lock
lea
inc
mov
push
movs
(bad)
out
dec
push
push
push
icebp
arpl
jb
sbb
push
shl
neg
icebp
push
jp
mov
adc
xchg
out
out
call
xlat
mov
cmp
xor
cmp
and
fwait
stc
and
ret
jecxz
das
jle
ins
push
mov
and
sbb
mov
dec
sbb
mov
mov
out
fst
sub
xchg
mov
xor
jmp
jb
jmp
shl
out
cmps
mov
push
fwait
dec
adc
cmp
data16
adc
mul
add
stc
dec
xor
int3
jo
cmc
leave
neg
ret
mov
jno
jl
cwde
fs
not
inc
xor
paddsw
xchg
cmp
sbb
cmp
test
push
loopne
mov
shl
imul
(bad)
sub
mov
adc
cmp
xor
nop
jnp
div
fwait
mov
cmp
clc
cmp
cmps
aam
dec
hlt
sbb
jmp
scas
cmp
rol
stos
cmp
inc
add
dec
cmp
mov
rol
mov
mov
icebp
nop
adc
add
out
fnstenv
call
into
sar
xchg
pop
ins
fstp
dec
push
push
call
sbb
dec
cmp
sub
mov
(bad)
arpl
and
cmp
ret
test
dec
das
xor
sti
repnz
mov
in
push
sub
or
lds
stos
sbb
pop
inc
imul
push
add
dec
jmp
(bad)
repz
jae
std
mov
or
xchg
push
aam
rcl
jmp
adc
add
ds
xchg
ror
test
cs
sub
jns
add
test
mov
test
aas
xchg
sbb
lahf
push
sbb
fdivrp
push
pop
aas
fs
scas
out
fwait
hlt
cmps
daa
jo
jnp
in
adc
(bad)
imul
add
arpl
jl
xor
jle
fwait
rcl
mov
add
push
jp
push
repz
sbb
jbe
jmp
or
jmp
sbb
iret
mov
xor
mov
cmp
das
inc
xor
fild
mov
xlat
push
and
mov
into
fisub
arpl
cdq
adc
cdq
jo
xchg
aaa
(bad)
je
adc
xchg
mov
adc
data16
es
out
pop
mov
inc
inc
out
and
loop
xchg
jmp
xor
inc
or
push
cmp
mov
repnz
cdq
mov
enter
jmp
test
lods
stos
or
xchg
pop
mov
out
mov
daa
push
je
inc
rcr
mov
or
int
pop
inc
inc
(bad)
adc
mov
dec
inc
std
sbb
pop
mov
enter
mov
mov
pop
mov
sbb
and
cs
sub
sbb
xor
sahf
addr16
retf
fwait
data16
lds
add
cmp
or
in
lds
in
dec
das
retf
inc
in
out
das
mov
add
fldenv
push
int3
cld
pop
fs
ss
sahf
xor
fs
mov
das
mov
sbb
sar
xchg
mov
xchg
ins
cwde
psubusw
sub
pop
xchg
and
dec
movs
mov
cmps
jb
js
fucomi
mov
pop
mov
mov
pop
outs
lods
dec
add
(bad)
call
sub
popf
and
cmp
sub
retf
(bad)
push
rcl
xchg
inc
add
les
fucom
add
(bad)
sahf
sti
setle
pop
fistp
and
pusha
fsub
test
sahf
aas
mov
ja
mov
cmp
imul
mov
mov
mov
xor
inc
cs
mov
cmps
and
rcl
dec
lahf
bound
ds
bound
lea
adc
in
repz
and
and
jmp
in
rcl
js
out
xchg
in
movs
hlt
inc
js
iret
pop
sbb
mov
fwait
xor
and
call
mov
hlt
xchg
ret
xor
jb
(bad)
xor
mov
dec
hlt
sbb
pop
shl
dec
test
mov
pop
mov
jge
pop
add
fidiv
outs
inc
nop
mov
pop
dec
std
mov
arpl
dec
sub
push
xchg
stos
mov
and
jmp
cmp
(bad)
pushf
enter
jnp
or
(bad)
and
mov
fs
subps
ins
cmps
mov
push
repnz
add
call
push
nop
cmp
xchg
(bad)
aad
jg
add
(bad)
in
lock
and
sub
xchg
add
mul
icebp
push
fmul
retf
mov
jmp
xchg
ror
or
cmps
add
out
jmp
sub
(bad)
in
outs
nop
cmp
out
cmp
out
xor
gs
mov
pop
jnp
pop
rol
mov
dec
cmp
movs
popf
mov
call
sub
sahf
int3
repz
jae
inc
or
pop
out
mov
scas
lods
daa
push
inc
out
cwde
sub
inc
cmp
test
sbb
jne
inc
pop
das
loopne
mov
inc
inc
cmps
mov
xor
std
mov
dec
movs
mov
or
hlt
or
ret
ja
cli
lods
stos
dec
enter
outs
jge
add
cld
push
sub
into
sbb
push
shl
jno
loop
xchg
or
leave
cmp
pushf
fld
lock
jecxz
push
test
jne
ret
cmp
pop
(bad)
(bad)
xchg
cs
or
jmp
movs
inc
mov
and
cmc
retf
push
add
bound
mov
push
aaa
addr16
repz
mov
mov
loope
mov
jo
jmp
loope
stc
cmp
xchg
mov
xor
cmps
(bad)
push
jmp
push
mov
pop
inc
cwde
add
mov
arpl
add
stc
mov
mov
arpl
adc
push
mov
jl
cli
sbb
repz
adc
in
pop
aas
test
stos
retf
arpl
ss
data16
cmc
jmp
shl
sbb
pop
lods
hlt
and
and
(bad)
mov
sbb
jp
mov
imul
fdivr
lock
shr
jg
cmp
daa
dec
cmp
jne
mov
xchg
fstp
gs
shl
mov
push
sub
hlt
mov
jae
mov
xor
push
add
jg
mov
sti
(bad)
push
arpl
sub
in
js
cli
push
xchg
mov
outs
xor
cmp
mov
cwde
out
std
inc
jp
and
and
sbb
push
push
push
mov
mov
or
xor
movs
dec
retf
in
stos
inc
push
clc
sub
nop
mov
push
arpl
dec
xchg
pop
je
pop
sbb
and
pop
mov
mov
xchg
out
mov
movs
les
jbe
sub
cdq
jmp
retw
adc
fs
call
push
dec
mov
test
add
and
and
pop
and
push
aaa
ja
into
cs
nop
bound
inc
cmps
inc
fiadd
add
adc
int
call
add
in
jno
cmp
ret
mov
push
iret
mov
pop
nop
mov
dec
ins
xchg
movs
xchg
int
in
cdq
gs
mov
fwait
movs
fwait
push
or
stos
leave
pop
mov
mov
out
xor
xchg
(bad)
cmp
jp
cld
adc
jmp
iret
cli
add
jecxz
pop
stos
sub
in
ss
stos
cdq
push
xchg
sub
xchg
jae
dec
leave
daa
sub
or
cmps
jae
pop
iret
std
mov
dec
test
test
pop
lds
aaa
int3
mov
in
call
fidivr
jge
jle
dec
shl
mov
fcom
outs
call
test
nop
dec
dec
icebp
inc
sbb
push
jbe
inc
xchg
mov
out
repnz
xor
sub
sub
dec
sub
shl
fsub
rol
nop
xor
inc
xor
push
xor
add
fdivr
(bad)
retf
test
xchg
add
xchg
sbb
ret
mov
shr
add
cdq
and
xchg
cmc
setge
sbb
mov
aaa
mov
cmp
jmp
test
xor
ins
pusha
clc
adc
mov
pop
retf
fisub
ret
push
and
enter
icebp
out
jbe
mov
shl
lea
add
dec
stos
lock
and
ficomp
or
cmp
out
push
fadd
or
inc
ret
mov
sbb
dec
pop
and
pushf
pop
out
xor
or
lea
jmp
lods
call
nop
xor
(bad)
outs
jge
and
ret
sub
dec
and
iret
in
leave
pusha
pop
(bad)
loopne
mov
jp
int
(bad)
adc
das
adc
js
test
fisub
lea
inc
inc
retf
xlat
mov
ins
test
add
xchg
mov
mov
add
push
es
mov
sbb
cmp
(bad)
adc
jbe
jp
jmp
or
call
add
cmp
in
fdiv
sbb
mov
pop
push
xchg
jle
in
xchg
leave
daa
dec
in
add
shl
pop
iret
pop
xlat
xor
in
sti
jns
mov
inc
test
dec
mov
cdq
popa
(bad)
pop
mov
test
enter
inc
add
push
aaa
daa
jmp
jno
jae
and
mov
outs
jge
inc
lock
pop
push
cmc
adc
cmp
ja
sar
pop
sbb
sub
gs
and
dec
inc
les
iret
(bad)
xlat
push
inc
sub
sbb
rcl
xor
adc
outs
aad
ret
xlat
test
(bad)
je
shl
pop
mov
pop
push
jne
aam
or
imul
(bad)
out
out
inc
imul
(bad)
push
mov
or
xchg
fild
push
fld
pop
mov
sbb
xor
dec
cld
push
int
mov
out
pop
shr
and
mov
ja
hlt
jo
les
jbe
xchg
xchg
inc
outs
jp
dec
hlt
xchg
lds
leave
jp
adc
lods
inc
aam
inc
sbb
or
or
cmp
and
sahf
and
inc
popf
jle
mov
jg
fwait
mov
(bad)
push
mov
push
jo
aas
repz
in
xchg
xchg
imul
ds
jae
sbb
stos
push
or
test
inc
jle
mov
bound
(bad)
pop
mov
push
loop
jns
sar
scas
mov
cmp
mov
mov
xchg
dec
push
in
mul
lock
dec
inc
mov
sbb
std
xchg
xlat
(bad)
sti
adc
jae
sbb
lock
bnd
fdivr
xchg
jg
mov
mov
cmp
ja
inc
daa
js
int3
(bad)
fld
(bad)
fwait
mov
dec
dec
inc
ret
adc
imul
out
and
xchg
mov
jbe
pop
lahf
fidiv
push
je
popf
cdq
inc
or
push
in
ds
mov
pusha
add
std
shr
xor
xchg
loope
xchg
repnz
sbb
xor
jp
jp
mov
dec
jg
push
ds
in
aad
mov
sar
sub
(bad)
ins
cmc
inc
mov
jecxz
inc
scas
ins
in
pop
bound
and
xchg
and
in
stos
call
lods
add
in
cli
pop
mov
mov
add
inc
or
bound
pop
ja
das
inc
inc
sbb
addr16
mov
dec
jle
sub
xor
nop
jae
fist
jae
fsub
hlt
fs
stos
stos
retf
ror
cld
outs
dec
cmps
xchg
scas
cmc
mov
mov
and
jnp
xor
arpl
xchg
int3
adc
sub
stc
push
mov
sub
daa
int3
ins
cmp
sti
jbe
mov
mov
mov
bound
jo
sub
std
test
add
fprem1
fiadd
movs
cld
pop
ins
stc
cmp
xor
std
sbb
dec
xor
fild
cmp
mov
mov
inc
ret
sbb
push
movs
mov
mov
in
cwde
mov
(bad)
jmp
lahf
jbe
ins
shr
mov
pop
jp
(bad)
or
aaa
fadd
mov
aad
jge
test
andps
inc
xor
or
cmp
xchg
scas
lds
lock
sub
clc
add
repz
adc
or
out
push
mov
mov
retf
pop
adc
outs
xchg
imul
in
jno
stos
bound
sub
sbb
push
jle
add
(bad)
adc
fs
dec
shl
(bad)
jecxz
sbb
xchg
cmps
mov
sub
xor
inc
inc
jae
fsubr
or
sbb
jne
xor
pop
ret
dec
push
xchg
or
clc
jnp
stos
add
cmc
pop
inc
jnp
nop
xor
pop
pop
ins
cld
das
cmps
inc
adc
add
ins
mov
int
mov
int
je
and
xor
sbb
push
jns
call
inc
pop
fucompp
mov
inc
pusha
jbe
lods
jmp
lds
cdq
add
(bad)
mov
adc
adc
cmp
scas
sbb
and
and
pop
pop
dec
or
inc
xor
push
pop
(bad)
loop
movs
ss
pop
retf
push
test
cmp
mov
cli
mov
aaa
inc
jns
outs
xchg
out
lods
fs
js
push
call
push
xor
mov
push
in
in
mov
mov
hlt
dec
into
inc
jl
mov
call
cmc
add
push
and
inc
mov
cmp
jmp
lods
aad
sbb
scas
pop
in
dec
movs
repnz
xor
and
inc
sbb
push
xchg
fistp
cmps
in
fdivr
retf
adc
push
shl
rcr
inc
pop
es
jl
jns
lds
add
repnz
pop
imul
dec
inc
(bad)
pop
dec
or
iret
jne
mov
mov
cld
jle
into
sahf
and
in
inc
clc
add
ficomp
xchg
mov
pop
loopne
sub
out
jmp
sub
dec
aaa
push
loope
push
mov
enter
setae
scas
cmps
ins
repnz
inc
jmp
xchg
aas
retf
sub
mov
sahf
add
or
push
lds
cs
(bad)
imul
test
loop
pop
mov
dec
ss
pop
push
sahf
mov
sub
sbb
and
cwde
cmp
std
dec
dec
inc
sub
ins
lods
out
adc
sar
push
in
add
mov
(bad)
push
ret
mov
jge
pop
push
pop
outs
imul
ins
inc
mov
cmp
push
call
outs
out
sub
inc
je
ror
in
(bad)
into
(bad)
sub
or
jmp
stc
loope
jae
dec
in
inc
stos
xor
xor
mov
mov
mov
out
hlt
adc
hlt
imul
push
inc
pavgb
call
inc
mov
mov
lock
cmps
ror
mov
daa
lahf
fnstenv
add
icebp
sub
fiadd
add
outs
jp
add
imul
gs
sub
or
(bad)
xchg
fstp
inc
nop
mov
or
xchg
iret
sbb
xchg
mov
fimul
sub
out
xor
int
jp
mov
iret
jne
mov
and
lods
inc
addr16
ins
in
pop
jno
repnz
fdiv
in
retf
push
dec
cmp
les
icebp
aam
push
(bad)
clc
mov
fs
(bad)
aas
xlat
inc
sbb
xchg
pop
or
mov
imul
mov
(bad)
js
movs
cmp
xchg
daa
sbb
jbe
test
push
inc
fcom
xlat
movs
test
stos
jl
add
add
sub
mov
cs
pop
pop
ficom
imul
mov
pop
cmp
add
fnstenv
mov
addps
dec
cmp
xor
lea
fstp
xchg
mov
fst
or
push
stos
fild
out
popa
xor
scas
test
pop
cmp
sub
ret
lea
and
dec
lods
out
aaa
out
mov
ret
cwde
fdivr
dec
call
sbb
sub
sbb
mov
adc
out
cmp
cmp
das
jns
rcl
aam
gs
sub
or
ror
push
cmp
frstor
or
in
daa
in
movd
imul
xchg
in
retf
adc
pop
shld
sub
fcmovu
js
cld
sahf
and
stos
and
out
mov
cdq
clc
lock
idiv
repz
nop
out
pop
in
int
mov
xchg
xchg
stos
fwait
mov
cdq
xor
mov
xchg
rcl
cmp
call
sbb
gs
ror
pop
ret
(bad)
out
dec
in
push
lea
sub
mov
lock
pop
retf
iret
mov
xor
mov
push
mov
test
dec
adc
fs
pusha
sbb
mov
loopne
jecxz
cmc
pushf
jno
les
dec
and
out
movs
arpl
pop
ins
mov
inc
xchg
jge
ret
inc
sbb
dec
dec
push
mov
lds
and
or
les
imul
xchg
fsub
sbb
cdq
sbb
jnp
dec
jbe
pop
mov
pop
inc
mov
inc
scas
add
pop
inc
mov
dec
inc
leave
ins
scas
fs
mov
push
rol
or
sbb
ret
and
loopne
lods
xchg
mov
retf
xchg
mov
test
mov
xchg
cmovg
cmp
out
aad
mov
add
push
and
mov
adc
cdq
or
in
mov
inc
jae
iret
mov
mov
sub
or
sub
jne
fisubr
aaa
jp
xchg
jbe
or
iret
ja
outs
xor
fsubr
cmp
fldcw
adc
push
mov
xchg
shr
sub
push
test
dec
mov
clc
xlat
mov
mov
push
xchg
mov
aas
inc
ss
xlat
out
and
ret
sbb
pop
xor
aaa
cmp
adc
sbb
dec
push
lods
das
or
add
sbb
outs
fwait
(bad)
or
gs
pusha
mov
fucomip
aam
not
push
pop
cmps
pop
lods
xor
pop
stos
inc
xchg
adc
pop
out
inc
rol
pop
adc
jbe
das
ins
addr16
fisub
jmp
mov
push
daa
cmp
cmp
lahf
scas
jl
mov
or
sub
mov
jp
inc
loop
sub
rcr
stc
mov
push
lods
mov
mov
mov
mov
xor
(bad)
pop
int3
cmps
(bad)
fisub
inc
ret
int
ret
push
retf
xchg
gs
mov
dec
fwait
mov
mov
arpl
jl
je
fst
xchg
ret
std
mov
add
push
mov
dec
jle
(bad)
bound
mov
out
push
popa
out
mov
cmp
push
test
and
xor
dec
(bad)
jge
add
adc
adc
mov
push
fstp
push
jmp
(bad)
mov
pop
xor
push
mov
je
add
arpl
dec
fisttp
out
jge
inc
test
and
jne
sub
adc
mul
jmp
or
adc
mov
inc
sar
push
mov
aad
adc
push
mov
inc
xchg
test
adc
add
mov
add
jmp
sub
scas
sbb
or
enter
jmp
sti
not
dec
outs
movs
add
add
add
jnp
and
in
faddp
push
xor
out
xchg
mov
cmps
addr16
out
scas
inc
aad
push
sub
lock
mov
sub
aaa
jl
retf
xor
data16
nop
aas
jns
call
pusha
jae
cmp
or
out
repz
sub
scas
jnp
jmp
push
push
cmp
(bad)
inc
dec
mov
jl
rol
dec
ror
inc
les
dec
cmp
pop
mov
lock
sbb
loop
mov
out
fdivr
sub
clc
aad
add
mov
mov
rcl
pop
xchg
xor
fwait
jae
add
mov
div
sbb
sub
or
stos
rol
sbb
in
xlat
ror
mov
fdivp
inc
sahf
and
and
idiv
jb
cmc
dec
xor
xchg
lea
xor
pop
leave
je
xchg
gs
cli
ss
xchg
add
out
sub
fild
das
(bad)
cli
scas
cmps
pushf
sbb
xchg
pcmpeqw
lds
sbb
imul
push
(bad)
sbb
dec
ins
cdq
(bad)
mov
mov
push
jbe
or
adc
adc
mov
and
je
sbb
aaa
popa
and
scas
(bad)
mov
out
sti
xchg
sar
xchg
pop
jbe
push
mov
dec
push
adc
daa
bound
adc
retf
xor
xor
cmps
adc
jmp
push
call
adc
adc
jp
mov
mov
mov
adc
test
cmc
dec
(bad)
sti
cld
push
icebp
(bad)
shr
jno
retf
mov
or
mov
dec
aam
rcl
cmp
xor
mov
call
xrstors
mov
pop
adc
lock
xchg
inc
sti
sub
adc
stos
clc
sar
stos
xchg
inc
pop
fisubr
add
pop
out
adc
mov
(bad)
add
and
fld
and
dec
xor
pop
mov
pop
(bad)
imul
(bad)
mov
jne
inc
ret
push
sbb
or
cmp
fidiv
mov
xor
(bad)
lods
test
xchg
in
(bad)
aad
in
mov
adc
pushf
pusha
jb
in
das
lods
sbb
sti
int3
mov
adc
pop
nop
inc
int3
loope
jmp
test
aaa
xor
outs
add
xchg
cmc
sub
push
sub
add
shl
sub
xchg
inc
mov
es
inc
jmp
mov
dec
sub
fstp
sti
sub
xchg
ins
in
dec
hlt
(bad)
jmp
pop
ins
iret
mov
xchg
call
ficomp
shr
adc
cmp
mov
dec
(bad)
mov
cmps
and
lods
jne
(bad)
cld
xchg
jp
push
push
sbb
pop
(bad)
and
xor
cmps
xchg
outs
inc
fcomip
out
repz
jnp
hlt
arpl
jl
sbb
mov
retf
cmc
clc
xor
adc
retf
sbb
sbb
sbb
inc
ss
push
fadd
(bad)
out
inc
dec
ficomp
mov
jge
sar
retf
mov
dec
or
xchg
std
sti
pop
mov
int3
pushf
nop
sub
inc
cmps
repz
(bad)
sti
bound
inc
add
mov
or
cmp
dec
pop
(bad)
pop
gs
int
adc
cmp
cmp
bound
cdq
jne
push
mov
and
mov
movs
imul
imul
je
pop
aas
imul
jmp
addr16
cmc
add
cli
jo
cld
or
cmp
mov
sub
inc
out
movs
push
jmp
mov
sbb
xor
xlat
pop
add
int
movs
loopne
aaa
jecxz
movs
sub
arpl
sahf
pop
pop
inc
arpl
pop
jnp
jno
loope
push
mov
push
ins
or
rol
and
jecxz
jnp
fidiv
scas
rcr
out
sub
xor
add
jecxz
stos
(bad)
std
test
adc
and
js
push
cmp
dec
inc
idiv
jb
les
xlat
cmp
lods
add
lock
push
mov
lock
rcr
add
rcr
jns
mov
fbstp
(bad)
xor
lea
xchg
sub
test
sbb
mov
cmps
mov
jge
sbb
scas
cmp
add
or
pop
and
cmps
inc
xchg
fdiv
add
je
inc
cmp
xor
xor
cmp
das
loope
push
mov
add
(bad)
and
mov
push
inc
pop
lock
jnp
ror
push
dec
loope
sub
mov
fidivr
repz
jge
push
xchg
and
clc
push
imul
std
jns
sub
xchg
daa
jbe
sub
sub
push
(bad)
rcl
pop
call
jg
sub
scas
iret
call
lahf
iret
fadd
pusha
cmp
js
sub
jmp
fucomi
cmp
shl
rcl
aaa
out
leave
mov
jg
or
fs
xchg
push
push
inc
js
in
cld
(bad)
push
nop
jmp
imul
leave
mov
daa
and
imul
or
cmp
fnstcw
mov
pop
mov
jmp
ins
ss
ins
retf
jle
mov
repnz
mov
inc
bound
xchg
jns
mov
mov
in
out
sbb
mov
lods
arpl
aam
(bad)
(bad)
test
cmps
ret
inc
inc
dec
in
es
sbb
enter
jmp
rcr
rcr
mov
gs
rcl
adc
jl
cld
push
push
sub
mov
push
dec
mov
and
aas
cmc
jmp
pusha
shl
adc
push
cli
imul
add
pop
add
adc
jl
rol
dec
push
jmp
cmps
add
mov
sub
mov
inc
js
pop
push
fwait
cmps
rcl
and
jmp
pop
xor
data16
sbb
movs
movs
xlat
push
cmp
arpl
xchg
pop
push
mov
xlat
cld
adc
jno
cdq
int3
mov
int
ins
jbe
fwait
xchg
pushf
fdiv
es
(bad)
jb
mov
sbb
pop
out
scas
dec
pop
push
aas
cwde
xchg
ds
sahf
cmp
in
mov
mov
add
push
pop
fiadd
mov
push
lods
mov
xchg
psubsw
clc
aas
lea
cmp
loopne
imul
mov
popf
pop
mov
not
aam
push
retf
repz
push
and
cdq
dec
jo
adc
dec
enter
adc
stos
leave
xor
shl
inc
xchg
mov
push
sahf
inc
adc
(bad)
cwde
imul
adc
jbe
or
ret
xchg
(bad)
jl
in
mov
sbb
jmp
adc
(bad)
add
inc
xor
xchg
das
cmps
xor
jno
sbb
add
retf
rcl
cmps
imul
cli
in
mov
ja
leave
icebp
shl
and
xor
popa
fwait
sub
pop
dec
dec
mov
sahf
pop
lods
xor
les
jmp
sbb
jl
cmp
int3
js
fisttp
sti
loope
in
dec
sbb
ss
sub
xchg
mov
jle
dec
div
push
cmp
mov
push
mov
add
pop
hlt
js
ds
sub
or
clc
push
push
or
cmc
test
lods
adc
xor
imul
xor
cmp
aaa
xchg
xchg
retf
mov
dec
and
xor
test
dec
dec
xchg
sti
push
shl
cmp
inc
fst
pop
in
daa
mov
dec
scas
jmp
push
fwait
and
push
xchg
dec
pop
cli
cdq
addr16
sub
mov
mov
inc
cmp
retf
popa
push
test
xchg
repnz
jns
mov
test
cmp
jae
adc
jecxz
int
ins
jo
shl
in
jge
dec
and
cmp
lods
cmps
xor
jbe
and
fcomip
xchg
lahf
mov
add
scas
jb
mov
inc
add
stc
rol
dec
inc
mov
in
inc
in
movs
jns
xor
mov
aam
test
enter
and
push
test
or
dec
add
pop
mov
push
jae
pop
(bad)
xchg
les
adc
xchg
jno
sub
jmp
jne
cmp
jecxz
sbb
inc
xchg
add
pop
stc
or
fisub
fldcw
ret
mov
icebp
popf
and
cmc
fadd
scas
cmp
xor
sub
inc
pop
inc
lods
mov
mov
aaa
xor
dec
repnz
dec
jns
or
aad
fadd
aas
or
add
fcmovne
mov
pop
jl
jnp
movs
dec
cmp
add
jno
into
xor
cld
jbe
fmul
push
jecxz
(bad)
ins
fiadd
fldenv
fisub
cs
adc
mov
mov
jl
lahf
aaa
ds
jnp
clc
lods
mov
mov
mov
in
cmp
sub
xchg
enter
sbb
adc
push
cs
adc
or
fcomp
retf
mov
(bad)
aaa
hlt
ja
mov
movs
pop
jmp
mov
cmp
bound
mov
add
daa
xchg
and
mov
sub
xchg
loopne
mov
pop
push
xchg
inc
aad
hlt
dec
push
mov
xchg
mov
push
mov
and
or
hlt
ret
push
shl
scas
out
sbb
stos
jmp
in
test
cdq
xor
leave
xor
xchg
or
inc
out
cld
aam
adc
push
imul
cmps
mov
iret
jmp
adc
dec
xchg
mov
gs
sbb
ror
(bad)
mov
add
mov
pop
pop
jmp
ja
add
mov
aas
and
or
shl
movs
sub
data16
movs
mov
dec
add
pop
lods
pop
mov
and
xchg
sar
mov
dec
aaa
dec
ja
bound
adc
pop
mov
or
cli
addr16
mov
mov
or
(bad)
pop
in
cli
add
loope
not
out
test
repnz
imul
mov
cs
loop
add
jge
pop
stos
push
push
fs
shl
ins
adc
jp
ss
ins
ret
mov
iret
inc
sub
inc
add
(bad)
loope
test
sahf
xchg
pop
mov
dec
(bad)
outs
mov
jbe
mov
sbb
and
loope
xchg
shr
clc
sub
nop
add
fsub
aas
sahf
pop
or
or
mov
xor
scas
sbb
xor
and
pop
dec
fmul
scas
adc
push
aam
inc
mov
loopne
scas
fild
dec
cmps
cmp
xor
bound
std
mov
mov
mov
ret
or
sub
lods
sbb
sub
pushf
gs
sbb
pusha
cld
jl
mov
push
cmps
jno
iret
xor
loopne
cmps
es
repnz
shr
loopne
(bad)
aad
xchg
call
push
addr16
push
sti
mov
and
jl
adc
call
add
push
test
out
fwait
aaa
push
in
inc
xchg
xor
ret
sbb
push
mov
xor
push
adc
push
mov
xlat
mov
push
call
fdiv
aaa
pop
aas
sub
push
fxch
sbb
pushf
ja
cld
ror
cmps
jbe
dec
xchg
lock
and
retf
cmps
int3
jne
sub
pusha
(bad)
lahf
loope
push
adc
loope
fwait
cmp
les
and
popa
(bad)
cmp
add
iret
das
xor
adc
imul
sub
in
test
push
pop
movs
or
iret
sub
or
test
add
lds
inc
out
sbb
add
jle
add
fdivr
xor
test
mov
test
dec
xlat
movs
ror
dec
sbb
addr16
scas
test
pop
sub
inc
out
(bad)
xlat
ds
adc
adc
lock
dec
pop
push
cmps
jnp
out
or
in
sbb
mov
in
or
test
jo
cld
ffreep
je
push
cld
mov
jbe
repz
bound
fwait
es
or
push
ja
fdivrp
out
popa
adc
mov
sbb
cwde
sbb
ins
retf
push
loop
je
pop
push
clc
or
les
mov
pop
sub
pop
mov
daa
aaa
mov
cmp
mov
dec
shl
jmp
in
popa
fwait
ret
lea
adc
je
int3
dec
sbb
in
jp
ja
addr16
aam
and
in
xor
fs
jne
sub
pusha
jmp
imul
and
call
das
mov
pop
ror
mov
mov
pop
jmp
mov
xor
adc
xor
dec
xor
or
push
retf
out
mov
sbb
push
inc
and
cmps
add
int
retf
stc
add
enter
into
xlat
jmp
shl
push
jb
sbb
enter
mov
sub
push
inc
cmovne
and
and
out
push
out
pushw
lods
dec
leave
ins
std
cmp
ins
mov
movs
cmp
pop
stos
adc
cmp
xor
mov
fiadd
cmp
pop
xor
outs
inc
cli
sub
in
xor
iret
(bad)
mov
mov
mov
ins
mov
mov
xor
jle
mov
cmp
mov
mov
push
xchg
mov
cmps
adc
pop
out
mov
dec
and
enter
push
(bad)
les
mov
xor
push
pushf
leave
popa
rcl
pop
mov
xchg
(bad)
push
scas
cmp
add
adc
(bad)
xchg
sbb
outs
(bad)
pushf
dec
xor
or
jle
inc
mov
sbb
mov
cmp
mov
test
jb
push
dec
jo
mov
sar
cs
mov
xor
adc
sbb
in
pop
mov
inc
gs
lock
in
(bad)
add
push
xor
cmc
inc
shr
fisttp
or
cmp
jl
xor
add
xor
(bad)
rcl
ins
mov
idiv
out
jl
icebp
(bad)
in
mov
dec
into
sub
retf
mov
sub
jne
mov
jae
(bad)
push
inc
stos
lahf
sub
push
daa
jmp
lahf
add
fwait
ss
outs
push
cmps
mov
bound
xchg
pop
loopne
push
push
xor
stos
lahf
popa
fwait
gs
sbb
sub
out
sbb
inc
xor
cmp
mov
pop
stc
add
mov
and
xchg
movzx
add
xor
sub
shr
mov
mov
inc
or
xchg
mov
sub
push
mov
fwait
data16
test
mov
dec
xchg
mov
in
mov
ja
in
or
(bad)
xchg
add
inc
mov
xchg
cmp
and
stos
xor
mov
jb
push
fdiv
mov
fld
mov
sbb
cwde
fbld
sti
imul
dec
bound
mov
add
mov
fisttp
pop
pop
popf
xlat
cmp
in
pop
push
int3
cmp
cmp
or
dec
(bad)
or
test
push
imul
repnz
jp
add
jp
fcom
mov
sbb
xor
imul
loop
jb
sti
repnz
lock
adc
mov
int
bound
and
into
or
inc
pop
lds
jp
dec
xor
sbb
scas
pushf
mov
mov
fs
xchg
pop
and
push
cmp
shl
repz
adc
call
sahf
and
into
movs
data16
xor
popa
pop
imul
aaa
call
loop
xchg
in
ins
xchg
push
aas
mov
pop
mov
sbb
inc
inc
aam
jecxz
mov
cmp
xor
adc
lds
pop
addr16
inc
mov
pop
dec
cs
in
mov
cdq
mov
xchg
shr
pop
aas
push
into
hlt
dec
xchg
mov
lahf
(bad)
sbb
mov
out
ss
push
xchg
mov
jmp
rcr
scas
je
(bad)
xchg
cmps
shl
div
jb
mov
push
repnz
stc
push
fiadd
jecxz
ja
and
sub
jge
pop
stc
mov
mov
add
inc
or
stc
scas
jno
sub
call
sar
outs
jo
inc
retf
jecxz
das
and
loop
(bad)
inc
xchg
mov
add
sub
cmps
mov
call
int
push
and
ret
int
ss
retf
outs
adc
sbb
or
outs
dec
cmp
gs
push
sbb
pop
push
add
and
jne
nop
sbb
ret
iret
push
js
imul
lods
into
sub
or
mov
cmps
stos
mov
loopne
dec
mov
pop
into
or
jbe
xor
xor
cdq
nop
sub
adc
xchg
shl
dec
push
aam
xchg
lock
not
or
aas
test
push
iret
inc
cmp
mov
retf
ret
out
inc
lods
jge
mov
mov
add
clc
adc
test
stos
mov
mov
push
sbb
mov
shl
movs
leave
mov
add
jg
jmp
shl
jg
repnz
mov
and
ja
aad
(bad)
fisubr
push
cmp
cmp
and
xchg
xor
pop
retf
dec
rsm
add
adc
or
sbb
cmp
xor
add
repnz
push
dec
ret
das
cmc
jl
test
add
xchg
repnz
push
mov
or
and
into
ror
pop
fsubr
movs
sbb
inc
xor
(bad)
outs
sbb
ins
mov
hlt
(bad)
out
(bad)
or
mov
ret
cmp
sahf
lock
mov
stos
inc
pusha
lea
adc
and
pop
fwait
popa
loope
cli
dec
ret
and
daa
inc
push
lock
sub
dec
and
or
hlt
scas
sahf
dec
pop
xor
ficomp
btc
imul
hlt
xchg
xlat
xlat
imul
(bad)
into
cmp
(bad)
gs
add
mov
xchg
(bad)
push
sbb
xchg
pushf
hlt
xor
sar
hlt
adc
stos
scas
pop
cmp
sbb
mov
jmp
mov
imul
push
mov
ret
scas
cwde
sbb
sar
out
out
dec
inc
loop
ror
xor
mov
test
dec
in
cmp
inc
jg
dec
sti
mov
and
movs
dec
adc
pop
fdiv
dec
cmp
push
mov
sar
xlat
sahf
sbb
mov
xchg
movs
push
jnp
jmp
ret
pop
fiadd
imul
call
cmp
jmp
or
out
aam
lds
sub
or
lock
mov
inc
loop
fistp
ins
pop
or
mov
rcl
inc
pushf
xchg
(bad)
out
arpl
sbb
jb
movs
call
jae
pop
std
dec
dec
pop
push
push
aam
cmc
cmps
jg
xlat
jg
lds
mov
add
fist
fsubr
lock
cmps
add
dec
add
mov
dec
jp
vpcmpgtd
push
dec
sar
xor
into
push
push
dec
xchg
imul
jnp
jnp
push
aad
fsub
scas
repz
call
fucomp
(bad)
mov
neg
and
sub
xchg
dec
and
je
idiv
dec
int
mov
add
pop
cmps
dec
push
xor
stos
imul
mov
jbe
std
sub
iret
sbb
sbb
out
xchg
iret
ret
inc
enter
mov
adc
outs
mov
jmp
out
add
dec
xchg
or
or
call
out
pop
pop
push
xchg
jmp
ret
lods
mov
or
mov
add
adc
(bad)
cmp
jmp
fst
xchg
call
and
xchg
into
retf
and
adc
imul
pop
sbb
inc
out
in
ins
out
pop
ja
xor
cdq
int
pop
pop
jb
bound
in
fidiv
inc
cmp
test
push
xchg
rcr
or
pusha
ds
in
sti
xor
jge
push
push
imul
sub
sbb
adc
jle
inc
push
xchg
xor
sbb
(bad)
sub
arpl
leave
and
out
repz
sbb
dec
gs
jle
hlt
jnp
ja
mov
imul
pushf
add
leave
stc
loope
adc
fcom
mov
(bad)
jb
dec
adc
aas
or
es
jg
mov
js
pop
adc
jle
std
es
sbb
jo
jbe
(bad)
mov
shl
pop
cmp
sbb
ins
lods
jo
jecxz
push
pop
jg
outs
push
and
(bad)
sti
sbb
sub
leave
and
adc
ret
ficomp
sbb
cmp
ja
dec
pop
dec
dec
push
cmc
push
aad
fisubr
je
and
dec
(bad)
out
pop
cdq
mov
mov
mov
loope
inc
cli
adc
adc
je
push
adc
adc
xchg
outs
iret
push
jae
sub
mov
cmp
xchg
jg
inc
mov
jg
(bad)
jns
test
cs
sub
cld
sbb
movs
sbb
das
sub
xchg
(bad)
popf
pop
cmp
jno
loope
add
retf
dec
xchg
adc
cmp
in
inc
les
inc
fidivr
lea
daa
ds
jmp
std
leave
movs
push
sbb
mov
pop
and
xchg
and
sbb
jp
rol
call
mov
movs
fdivr
pop
scas
in
and
cmp
jo
stos
in
into
jb
sub
sub
pop
adc
dec
popf
dec
dec
inc
vsubsd
fimul
stos
fxch
mov
sub
shl
test
lock
clc
shr
adc
adc
add
mul
sub
add
or
nop
repz
dec
add
jo
fisttp
jecxz
arpl
or
xchg
rdmsr
into
sbb
(bad)
pop
lods
mov
retf
pop
fimul
idiv
ret
cmp
mov
xchg
fnstenv
sbb
sbb
mov
mov
nop
add
xor
in
cmp
je
lods
aad
add
mov
sar
and
mov
and
xor
push
dec
sbb
mov
(bad)
sbb
jl
lds
fmul
loope
pushf
loope
and
xor
pop
lods
aas
jmp
xchg
dec
xchg
or
push
jmp
retf
xlat
rcl
vmread
push
adc
fistp
fist
pop
shl
dec
call
sbb
xchg
pop
test
in
push
and
pushf
pop
aad
icebp
js
mov
mov
dec
dec
(bad)
lds
xchg
push
sbb
push
lods
cli
xchg
scas
aam
jge
idiv
icebp
add
test
xchg
pop
add
sub
xor
cmp
sahf
(bad)
sub
xor
data16
pop
lock
push
inc
in
cmps
movs
arpl
cdq
xchg
out
(bad)
lods
mov
loop
bound
or
mov
push
xchg
cli
shr
xchg
es
test
mov
or
add
mov
push
imul
nop
cs
sub
pop
scas
aad
inc
lock
icebp
mov
rcr
cmp
add
div
fmul
fsub
inc
or
mov
pusha
pop
sbb
pop
push
jecxz
jmp
retf
mov
jne
(bad)
mov
push
shr
add
ror
inc
push
push
mov
inc
jns
sub
retf
dec
or
addr16
inc
mov
fbstp
jns
fisttp
adc
jae
mov
pop
fcom
jmp
repz
adc
and
(bad)
pop
ss
cmp
mov
cwde
loopne
stos
repnz
and
(bad)
or
out
push
rol
nop
jae
jp
psubq
dec
dec
xor
xlat
cmp
jmp
adc
ror
push
lods
cdq
sbb
cmp
inc
inc
jns
outs
mov
and
sbb
jbe
fdiv
mov
das
shr
icebp
jnp
repz
and
sahf
(bad)
sbb
dec
dec
fld
adc
adc
mov
stos
test
xlat
pop
xor
cdq
cmp
add
mov
push
test
or
loope
adc
push
in
sbb
and
dec
push
pop
bound
int
pop
sub
aaa
pop
push
cld
mov
(bad)
int3
mov
mov
push
je
repnz
cli
into
inc
imul
or
pop
sub
dec
sub
(bad)
push
cmp
xchg
mov
jmp
xchg
cmp
ror
pop
popa
outs
inc
cld
iret
push
push
cmps
out
or
jg
cmp
mov
js
loope
pop
push
out
push
jl
and
popa
test
int3
dec
add
mov
sub
out
push
push
mov
push
and
mov
popf
xchg
nop
inc
pop
ins
cli
pop
fdivr
jl
hlt
inc
xchg
out
cmps
xlat
adc
sahf
inc
sbb
sub
lods
or
mov
push
(bad)
repnz
call
jno
jb
mov
adc
jmp
sub
sub
ret
ss
int
mov
mov
add
add
jmp
cwde
mov
and
scas
js
mov
in
aam
push
inc
add
ss
fwait
dec
cmps
push
aas
mov
push
or
movs
nop
les
mov
add
jle
push
ins
lea
or
(bad)
je
mov
jns
int
sbb
xor
mov
pop
add
pop
or
jmp
xor
(bad)
hlt
pop
pushf
jle
push
inc
das
push
sub
mov
and
cmp
rep
mov
mov
call
inc
cmp
ror
and
ret
nop
adc
js
je
sub
add
jl
mov
sub
xchg
push
into
popa
retf
in
aad
dec
test
in
cmp
fsubr
sbb
sbb
fwait
inc
popf
or
xchg
sbb
xchg
push
jge
jmp
shl
das
test
inc
stc
mov
push
xchg
inc
movs
or
push
xor
retf
fadd
repz
cmp
div
sub
xchg
in
outs
test
shl
push
xor
xor
adc
mov
dec
mov
xlat
sti
ins
and
push
xor
adc
sti
cld
rcr
ja
adc
xor
and
or
sbb
hlt
lods
test
mov
push
xchg
mov
add
mov
out
or
jl
push
pop
test
jg
and
dec
fcmovbe
and
mov
(bad)
das
mov
pop
cmc
sbb
dec
xchg
or
fld
mov
and
pop
cmp
ins
mov
push
or
jo
std
pop
push
cli
scas
mov
test
or
(bad)
out
repnz
ror
or
fnstcw
cmps
cmp
fild
add
pusha
outs
or
ja
std
imul
xchg
mov
enter
test
fdiv
mov
sbb
xchg
mov
sbb
pop
or
mov
or
cmp
fsub
mov
(bad)
xchg
xchg
inc
jno
or
iret
sub
xor
mov
jge
mov
sub
jl
add
mov
imul
jp
enter
mov
test
sbb
jge
sar
std
mov
dec
push
dec
mov
or
cmps
mov
int3
(bad)
clc
bound
cli
fwait
jnp
sti
jne
popf
jnp
dec
ror
and
lea
add
sbb
dec
cmc
cs
enter
(bad)
mov
or
inc
mov
mov
or
pop
sub
data16
jnp
jnp
sub
pop
imul
mov
mov
jo
lahf
ret
jl
in
push
mov
shr
sti
inc
dec
inc
jle
push
adc
push
inc
shl
jecxz
and
xor
add
(bad)
mov
movs
fnsave
pop
les
std
aas
adc
into
call
setb
mov
rol
stc
fcmovne
mov
out
fchs
mov
fs
jl
test
inc
pop
mov
leave
cmp
jp
lds
popa
out
mov
fimul
pushf
xchg
(bad)
stos
xchg
pop
mov
(bad)
push
ret
sbb
(bad)
sub
rol
jmp
jmp
mov
push
hlt
sbb
adc
mov
gs
mov
pop
inc
inc
add
shld
xor
data16
jns
sahf
mov
cmp
(bad)
push
fsub
out
(bad)
push
stc
mov
jns
arpl
jns
or
mov
test
jb
and
push
inc
sub
bound
addr16
mov
cmc
or
test
or
pop
pop
mov
jmp
and
push
push
out
(bad)
adc
sbb
in
mov
addr16
or
mov
cmc
scas
dec
jne
sbb
lods
jge
test
cmp
adc
or
ret
int
cmp
adc
(bad)
aaa
aad
das
sub
fs
and
mov
cmps
fidiv
cmp
mov
push
int3
pop
daa
inc
aas
add
scas
adc
test
ins
mov
add
xchg
cmc
aam
data16
aam
mul
sub
xchg
xor
loope
gs
jp
(bad)
pop
lea
mov
addr16
and
pop
sbb
out
dec
cs
scas
(bad)
fimul
push
mul
ror
pop
push
push
popf
jno
or
pop
dec
ds
sbb
dec
push
dec
xchg
dec
add
pusha
cmp
mov
jp
and
or
inc
inc
dec
fidivr
fisub
inc
arpl
adc
xor
dec
dec
push
sbb
jno
cli
cs
jp
out
loopne
cdq
pusha
add
mov
cmc
and
in
inc
mov
mov
call
mov
mov
push
or
sti
jo
aam
pop
jge
ja
rol
in
cld
sbb
ins
mov
dec
pop
pop
jne
mov
cmp
sub
sbb
icebp
cmps
jmp
cli
(bad)
div
fcomp
add
sub
mov
ss
js
sub
retf
and
gs
sahf
repz
mov
fmul
add
dec
mov
(bad)
xor
mov
adc
mov
std
cmps
nop
enter
add
sub
loop
ins
arpl
aam
and
push
add
outs
mul
loopne
call
mov
xchg
js
retf
aas
loop
pop
(bad)
pushf
inc
adc
sbb
xchg
push
jmp
dec
cmp
je
pop
dec
dec
sbb
mov
and
mov
movs
aam
lea
mov
pop
cmps
inc
in
retf
add
scas
ficomp
push
adc
out
and
ret
and
and
imul
push
jl
loop
leave
mov
xlat
(bad)
loope
jmp
rol
xchg
leave
mov
int3
dec
inc
dec
and
jns
dec
daa
hlt
or
xchg
(bad)
cli
sbb
jle
xor
cmp
je
rcr
(bad)
out
push
out
cmp
pop
mov
add
cmp
mov
mov
mov
clc
push
sbb
daa
cmps
popa
sub
iret
cmp
push
or
sub
mov
std
xchg
jnp
cmp
aaa
neg
stc
sub
xchg
repz
mov
out
arpl
popf
dec
push
stc
sub
xor
aas
or
xchg
inc
jp
ins
popa
or
ja
pop
fcom
jbe
shl
and
(bad)
pop
sub
cwde
(bad)
aad
mov
fild
jmp
jge
arpl
repnz
and
bound
shl
loop
inc
in
adc
fisubr
jl
rol
jmp
sti
fsub
stos
out
or
retf
and
adc
mov
enter
ins
hlt
shr
out
rcl
scas
out
adc
inc
outs
es
mov
js
jbe
in
and
rcl
rcr
push
xchg
sub
cmp
retf
adc
xchg
gs
or
or
dec
jle
pop
pop
dec
cmps
adc
arpl
sub
cdq
xor
push
in
test
into
pop
sti
add
popa
imul
dec
sbb
xor
cs
and
loopne
mov
xchg
push
mov
jg
retf
adc
push
lea
jmp
out
dec
mov
pop
out
aas
fstp
loop
js
cli
mov
int3
mov
leave
mov
add
jmp
mov
jge
push
sar
push
cmp
nop
cs
mov
sub
jle
jmp
add
xchg
fld
imul
mov
mov
fcom
mov
mov
push
test
(bad)
imul
dec
out
push
rcr
xchg
mov
sub
jo
call
mov
jecxz
xchg
push
dec
dec
mov
mov
mov
ds
neg
scas
mov
imul
aas
cld
test
add
inc
in
xchg
push
outs
cmps
mov
loope
out
loopne
sahf
movs
jne
icebp
xor
mov
ds
sub
scas
ins
repnz
popf
mov
xchg
mov
jmp
mov
in
arpl
push
adc
movs
mov
mov
dec
ficomp
xor
xchg
jbe
sub
add
sub
xor
aam
loopne
loop
arpl
sti
fisub
xchg
xchg
jmp
dec
stos
xchg
fild
sti
mov
popf
pop
sahf
retf
mov
dec
(bad)
mov
mov
neg
rcl
xchg
jns
in
fcomi
outs
dec
rcr
je
jmp
in
in
fwait
stc
xchg
cmp
mov
jmp
jnp
ins
scas
lahf
jmp
mov
push
pop
imul
into
addr16
adc
sub
xchg
daa
sub
leave
jno
cmp
aad
jmp
adc
imul
or
cmps
xchg
adc
mov
xchg
push
repz
scas
jge
jae
ret
or
cld
bound
mov
cdq
icebp
or
dec
adc
jl
adc
cmp
(bad)
bt
and
pop
mov
(bad)
in
inc
inc
(bad)
das
(bad)
mov
ret
adc
dec
mov
movs
not
mov
xchg
in
xor
mov
cmp
mov
push
pushf
sbb
pop
gs
not
mov
push
mov
cwde
push
repnz
outs
dec
stos
xchg
mov
(bad)
out
mov
add
inc
cmps
lds
jg
xor
xchg
or
add
js
mov
adc
mov
clc
mov
and
mov
cmps
iret
cmp
pusha
jp
fnstenv
add
jl
cmps
popf
cmp
push
sbb
mov
jbe
les
push
(bad)
jb
pusha
or
mov
jmp
mov
jmp
and
mov
push
cdq
pop
add
dec
lods
ret
inc
push
cmps
xchg
xor
rcr
(bad)
cmp
mov
xchg
(bad)
pop
pushw
bnd
push
les
or
adc
in
mov
push
or
outs
js
scas
(bad)
sub
pop
adc
lds
imul
or
test
mov
xor
add
or
adc
movs
cmp
xor
lods
ror
mov
dec
jg
pop
rcr
std
cdq
xor
and
psubd
mov
pop
popa
imul
push
(bad)
jo
test
push
sbb
lods
fs
int3
(bad)
call
xchg
retf
adc
inc
mov
mov
inc
retf
call
xchg
inc
aam
mov
lock
outs
xor
repz
inc
stos
out
retf
sub
les
mov
lds
jmp
inc
sbb
fisttp
movs
pushf
xchg
test
xor
mov
push
cmp
cli
push
pop
test
xor
ds
lea
fnstsw
leave
mov
je
imul
sti
add
or
popf
arpl
cmp
xchg
imul
loope
mov
(bad)
cmc
adc
pop
js
xor
in
xchg
out
or
ss
xchg
adc
dec
int3
movs
sub
push
gs
push
aad
nop
aas
or
outs
(bad)
adc
nop
movs
inc
add
mov
iret
adc
out
aad
dec
pop
dec
pushf
repnz
in
mov
jg
push
test
and
in
stos
mov
ins
xchg
fisub
xchg
test
cdq
int
add
ins
and
adc
pop
adc
ds
jb
cwde
or
jmp
sub
xchg
jge
jnp
jae
pushf
add
scas
dec
add
or
jns
dec
and
pusha
sbb
pop
not
xor
inc
fild
icebp
push
jmp
xor
jmp
sbb
push
jmp
(bad)
pop
xchg
test
gs
(bad)
pop
sbb
mov
sbb
icebp
mov
mov
xor
lahf
mov
gs
call
out
jmp
outs
push
mov
mov
pop
mov
xor
or
shr
adc
mov
hlt
sar
jecxz
or
push
cmps
jg
or
mov
in
push
jns
stos
sbb
sbb
mov
inc
nop
or
push
test
xchg
movs
mov
out
out
sub
mov
mov
shl
and
sbb
cmps
idiv
xchg
lock
jnp
pop
and
cmp
retf
fidiv
movs
mov
push
or
adc
add
inc
mov
xor
stos
outs
test
lods
shl
hlt
cdq
inc
ds
mov
mov
popf
lahf
(bad)
js
ror
es
pop
mov
dec
xor
test
xlat
mov
sub
and
xchg
pop
pushf
inc
xchg
jae
lds
mov
fwait
bound
js
imul
fimul
jp
inc
push
clc
adc
retf
and
aaa
sti
lds
pushf
add
imul
lahf
out
xchg
dec
fcomip
xchg
mov
les
into
shl
or
xchg
aad
call
out
int
inc
mov
imul
sbb
cmp
push
mov
mov
cli
pop
pushf
push
popa
sbb
and
xchg
fdivr
stc
jns
int
scas
test
mov
call
mov
in
cmp
xchg
mov
out
(bad)
xor
xor
mov
pop
popa
in
cmp
pop
mov
sbb
mov
jp
lea
sub
sbb
bound
pop
or
(bad)
and
call
fdiv
inc
imul
dec
push
jbe
xchg
push
int3
daa
cmp
hlt
cld
clc
inc
js
js
gs
sbb
mov
and
pop
adc
push
adc
and
lods
jne
out
test
imul
adc
(bad)
push
repnz
ss
pop
xchg
jmp
inc
(bad)
xchg
dec
ret
popa
jne
fdivr
mov
xchg
sub
cmp
or
mov
shl
push
inc
(bad)
lock
loopne
adc
fist
fnstenv
pop
inc
cmc
pushf
arpl
and
cmp
sub
inc
mov
add
jb
mov
or
mov
sbb
pop
sar
leave
xchg
and
mov
jl
test
fdivr
and
mov
(bad)
std
jnp
fs
outs
mov
dec
ss
pop
loopne
push
bound
mov
mov
xor
fcom
mov
lods
xor
jp
sbb
aad
loop
xor
pop
xor
mov
or
mov
sti
adc
lods
fwait
or
jl
inc
repz
iret
mov
cmp
popa
xchg
cmp
adc
xchg
push
mov
pushf
push
pop
xchg
add
xlat
fcmovnb
iret
lock
(bad)
sub
mov
into
dec
xchg
inc
cli
and
outs
gs
iret
in
jmp
add
push
dec
nop
(bad)
pop
cmp
inc
sub
lock
dec
cmp
sti
xchg
sbb
bound
jne
sbb
jb
(bad)
cmp
push
cwde
cdq
xchg
ja
pop
jge
pop
adc
inc
aad
mov
mov
repz
iret
ss
neg
mov
js
xchg
icebp
out
jl
or
sub
dec
xor
std
inc
imul
test
push
test
not
ss
xor
mov
stc
pop
in
aam
xchg
sub
cmp
pop
stc
inc
sbb
mov
sub
repz
repnz
lea
jae
nop
repnz
sti
xor
daa
pusha
js
loope
jecxz
test
iret
pusha
xchg
sysenter
fisub
ja
shl
dec
mov
xchg
push
xor
push
push
imul
sahf
js
adc
dec
out
jo
call
cmp
mov
(bad)
push
loope
inc
lahf
fadd
call
cs
add
(bad)
push
inc
pop
pop
std
push
js
cmp
lods
stc
pop
jmp
xchg
mov
scas
jno
push
inc
pop
lods
mov
repnz
mov
dec
dec
nop
sbb
movs
mov
call
shl
adc
xorps
jge
cwde
dec
xor
mov
add
push
ins
push
adc
in
daa
push
stos
dec
inc
xor
ss
mov
xor
scas
push
mov
xlat
mov
lods
pop
ds
sbb
(bad)
loop
les
inc
mov
sub
into
test
neg
lahf
daa
rcl
sbb
pop
xchg
mov
call
dec
test
jmp
jmp
xchg
leave
or
scas
div
jne
lods
iret
movs
push
adc
push
adc
inc
push
jb
fsub
mov
scas
das
dec
dec
jmp
adc
xchg
pop
adc
sbb
sbb
lods
xor
and
sbb
arpl
cdq
jmp
shl
jmp
dec
outs
pop
call
pop
add
sbb
push
adc
jmp
xor
aas
xchg
and
inc
push
fisubr
int3
dec
mov
inc
(bad)
cwde
mov
jmp
(bad)
in
pop
stc
pop
shr
(bad)
outs
push
cmp
jp
add
mov
push
xchg
jmp
jecxz
xchg
jo
jg
int
daa
stos
cmp
retf
cmc
push
call
dec
adc
call
cmp
pop
fsub
js
stc
push
push
xor
adc
aam
inc
test
retf
sahf
loopne
shl
clc
mov
mov
mov
mov
bound
(bad)
test
dec
popa
mov
jp
xchg
dec
icebp
dec
and
mov
add
jns
dec
or
cmps
mov
push
jae
push
(bad)
(bad)
pop
stos
mov
cmp
cdq
ins
(bad)
lods
add
ds
sbb
ins
fnstsw
out
ss
xchg
mov
sahf
cmp
scas
ins
sub
mov
adc
jmp
iret
rcl
test
inc
xchg
retf
ds
test
div
fldcw
xor
mov
cmps
add
adc
test
or
inc
pop
xlat
test
push
imul
cmp
pop
das
pop
mov
daa
xor
inc
out
adc
pop
repz
jp
and
cld
mov
jmp
ja
mov
mov
pop
push
or
stos
sub
inc
ret
(bad)
in
cmp
jae
nop
xor
adc
addr16
loopne
retf
jmp
jne
in
jb
or
sub
lds
sbb
mov
int3
out
dec
sub
dec
setno
xchg
mov
inc
or
shl
mov
inc
lds
out
std
dec
ficomp
push
xor
ins
int3
jbe
shr
sbb
aaa
jl
push
icebp
loopne
shr
mov
cmc
je
dec
test
cmps
fisubr
sbb
inc
sbb
sbb
push
xor
call
je
out
sbb
call
mov
xlat
ret
nop
xor
push
mov
pop
add
jmp
push
icebp
das
jno
cmc
outs
test
or
pop
cmp
fwait
pop
aad
cmp
(bad)
(bad)
push
mov
dec
and
cmp
(bad)
pop
enter
dec
(bad)
popa
push
push
and
mov
inc
pop
push
jmp
mov
push
and
ins
cmc
inc
xor
es
popa
int3
repz
ret
xchg
ds
dec
scas
enter
repnz
fadd
rol
cs
inc
test
adc
jmp
and
pop
adc
push
mov
retf
cmp
and
std
pusha
push
(bad)
add
jbe
push
(bad)
jmp
mov
sbb
or
adc
enter
mov
jge
aaa
mov
pop
data16
inc
lods
lock
adc
pop
sbb
hlt
bound
mov
repz
in
stos
call
aaa
mov
cmp
and
imul
push
mov
stc
mov
mov
cmps
cmp
adc
fs
in
fmul
adc
jnp
or
dec
stos
mov
outs
push
mov
(bad)
xor
pop
arpl
aas
push
(bad)
sbb
pop
sub
sar
call
jmp
(bad)
stc
cmps
enter
in
stos
push
fwait
xlat
enter
xor
dec
js
out
arpl
adc
out
daa
cdq
add
cmp
stos
and
sub
call
ja
mov
popf
pop
sar
into
jmp
jg
les
or
xor
stos
xchg
bound
mov
mov
adc
push
shr
stos
cdq
shl
ss
loope
in
pop
test
(bad)
jb
popa
lahf
mov
push
gs
sbb
lods
outs
push
dec
jb
popa
mov
scas
adc
loope
sbb
imul
shl
dec
fs
inc
cli
(bad)
mov
push
je
ror
call
sete
cmp
(bad)
lods
fwait
clc
xchg
imul
xchg
(bad)
sar
inc
mov
add
sub
cmps
inc
pusha
sub
inc
outs
bound
add
call
fsub
push
jmp
jle
push
imul
std
sbb
push
pop
pop
dec
mov
dec
add
jg
(bad)
dec
pop
lea
(bad)
ficomp
call
jg
(bad)
aas
pop
test
scas
cmp
dec
or
mov
stc
lea
or
sub
mov
imul
or
gs
adc
mov
sub
(bad)
and
bound
(bad)
outs
xchg
loopne
mov
jnp
cmp
out
aam
jo
ret
inc
mov
mov
pcmpeqw
nop
jp
out
dec
(bad)
xor
mov
adc
call
jns
push
dec
shl
jg
jno
sub
xchg
fcmovnu
fadd
call
mov
xor
cmp
sbb
or
and
or
sub
mov
inc
ror
push
pop
add
out
mov
and
int
leave
and
pop
call
xchg
cmps
rcr
xchg
enter
dec
retf
sub
jns
push
xchg
sbb
jp
out
jmp
repz
cmp
dec
pop
retf
loopne
mov
inc
adc
mov
mov
sar
cmc
js
or
xor
or
jecxz
not
es
fisub
test
sahf
pop
into
popa
jne
outs
or
int
mov
imul
xchg
out
push
stos
jecxz
outs
scas
iret
fucomp
imul
xchg
shl
push
pop
inc
push
lods
sub
icebp
xchg
jmp
add
mov
cmp
and
xchg
fnstsw
in
nop
push
xor
imul
mov
loopne
aam
push
mov
in
call
push
adc
lea
sbb
fwait
mov
popa
mov
jno
push
pop
test
das
push
or
test
outs
bound
(bad)
std
mov
das
cmc
cmp
fsubr
pop
pop
jne
nop
test
cmps
fwait
out
dec
aam
xchg
pop
pop
in
dec
mov
ja
xchg
std
push
es
scas
cmp
std
das
sbb
mov
(bad)
xlat
retf
mov
enter
inc
pop
out
das
or
dec
outs
das
iret
repnz
shr
sahf
xor
call
pop
test
test
pop
ds
dec
inc
leave
daa
(bad)
and
(bad)
ss
mov
xchg
mov
fidiv
mov
rol
or
xor
sbb
aam
xchg
mov
repz
aad
inc
imul
xlat
pop
mov
mov
cmp
push
jmp
inc
cwde
sub
int
jmp
js
xchg
mov
pop
movs
fsub
movs
repnz
lea
stc
lds
ds
dec
out
add
cmps
nop
cli
sub
or
(bad)
mov
test
enter
repz
pop
inc
jmp
inc
stos
sub
xor
test
cmps
je
pop
int
add
adc
lods
div
sbb
push
adc
int
(bad)
sbb
je
or
sub
push
and
mov
mov
out
add
adc
fisttp
adc
jnp
lock
(bad)
cli
mov
xchg
sub
jge
movs
shl
ret
add
fnstsw
sub
retf
pop
mov
and
jns
push
xor
pop
xor
mov
call
stos
xchg
mov
sub
pop
dec
mov
(bad)
retf
hlt
cmp
jb
push
call
xchg
xor
shr
sbb
add
sub
ss
inc
retf
test
in
shl
dec
fisub
stos
xlat
sti
mov
inc
aas
or
das
xor
xor
int3
call
mov
mov
push
pop
test
div
je
mov
and
lahf
hlt
call
data16
mov
mov
clc
xchg
mov
lds
sahf
cs
mov
daa
inc
jg
stc
jmp
jg
mov
inc
fild
out
cmp
cs
sub
pop
inc
mov
add
adc
push
jae
retf
lahf
dec
xchg
xor
xor
xor
fistp
popf
retf
xor
inc
jne
cdq
adc
push
jmp
test
cld
sub
fild
mov
lds
sti
pop
add
pop
adc
cmp
mov
inc
(bad)
(bad)
pop
mov
push
in
cld
jg
xchg
loope
enter
shl
cmc
dec
popa
and
mov
mov
sub
or
arpl
sbb
mov
test
pop
bnd
enter
jne
pop
xchg
mov
sar
xor
xchg
fdiv
add
pop
into
dec
mov
mov
xor
mov
mov
cs
inc
pop
push
push
sub
mov
clc
or
popa
push
push
test
pop
pop
push
mov
popa
sbb
rcl
ret
cdq
cmp
mov
cwde
push
pop
jmp
xor
mov
ret
xor
ror
(bad)
mov
or
or
jl
mov
cmp
in
xchg
add
mov
xchg
cmp
and
leave
cmpxchg
jns
dec
push
call
retf
dec
adc
dec
xor
popf
mov
mov
pop
pause
sbb
ret
pop
ficomp
cli
out
sub
imul
aaa
dec
lods
sbb
std
ins
out
jl
dec
mov
fist
sbb
nop
sbb
inc
aaa
js
push
leave
mov
or
mov
or
mov
pusha
(bad)
fnop
cmp
sahf
pop
jns
adc
pop
pop
repz
lods
(bad)
fadd
and
mov
inc
mov
dec
inc
loop
push
lods
and
jg
mov
fidiv
rcr
push
call
sub
pop
sbb
in
movs
fidiv
into
jg
xor
jl
pop
sbb
dec
or
xor
mov
xlat
gs
pop
enter
inc
adc
xchg
movs
inc
test
dec
or
or
sbb
ins
cmp
mov
les
sbb
enter
outs
ja
scas
bound
dec
mov
mov
mov
test
inc
cmps
aaa
or
mov
jne
ret
fwait
add
pop
sti
sbb
push
rcl
or
fld
sub
cmc
jp
adc
mov
dec
arpl
xor
pop
xchg
imul
sbb
jle
jo
sub
dec
js
(bad)
ds
inc
cld
xchg
repnz
jecxz
dec
push
mov
fnstcw
xor
xlat
leave
push
push
mov
mov
outs
outs
push
test
loop
es
stc
add
ficomp
fwait
pusha
mov
es
not
or
in
mov
fidiv
arpl
mov
push
icebp
test
mov
xchg
fnstenv
ret
ja
repz
shl
repz
aam
out
(bad)
pextrw
fs
jg
rcr
lahf
xchg
add
call
fild
cmp
mov
stos
xor
and
outs
and
xchg
shl
bnd
mov
lahf
test
sbb
dec
aad
test
inc
les
and
mov
jecxz
pop
xchg
not
push
inc
and
cdq
test
push
ret
inc
ss
push
ins
aad
cs
or
cli
cmp
inc
push
bound
nop
into
call
add
pushf
sti
push
fst
push
popf
inc
xchg
aad
sub
pop
jns
mov
stc
test
jge
jno
aad
pusha
loop
mov
pushf
jno
mov
fdiv
pop
mov
xlat
popf
aaa
ficom
aad
cmps
std
xchg
push
into
sbb
jg
jnp
sub
mov
cmp
(bad)
mov
icebp
enter
mov
jbe
out
pop
repz
es
out
in
jecxz
and
xchg
jmp
lds
outs
cld
jle
(bad)
in
ins
mov
jb
sbb
fs
push
push
push
and
retf
and
test
mov
mov
and
test
fimul
dec
in
out
adc
push
or
pop
add
jno
and
rcr
xlat
mov
stos
fidiv
jmp
pop
cs
sbb
xlat
jg
jl
pop
shr
mov
mov
mov
das
push
or
xor
pop
mov
pusha
movs
push
sbb
popa
in
push
mov
sub
imul
pushf
test
pushf
test
mov
out
popf
mov
xor
add
fiadd
rcr
aam
mov
ins
ja
mov
popa
iret
sbb
xchg
push
fistp
stos
push
sbb
sub
imul
adc
push
fimul
dec
cdq
aas
aaa
xchg
icebp
pop
cmp
rol
test
jns
repnz
xchg
xor
pop
jmp
aas
ret
dec
jbe
push
jbe
fisubr
inc
or
push
cmps
call
test
xchg
iret
and
adc
pop
sub
jge
pop
lea
jle
shr
stos
jge
ror
mov
fild
fisttp
adc
cmp
or
dec
jo
sbb
jmp
lods
adc
shl
jg
loop
scas
lock
in
arpl
mov
mov
in
dec
mov
jae
adc
adc
pop
mov
ret
cdq
sub
sub
dec
sub
ret
sahf
cmp
fmul
pop
xor
pop
rcl
xchg
enter
push
add
mov
arpl
nop
repnz
jnp
xchg
dec
inc
xchg
sti
adc
inc
mov
xchg
inc
sbb
aaa
cmp
mov
ins
enter
push
mov
test
jl
jne
and
fwait
imul
push
jmp
mov
cld
dec
and
das
mov
ins
jo
rcr
ins
adc
ret
sub
push
hlt
add
jae
das
push
cwde
dec
iret
mov
mov
addr16
lods
cli
aad
xor
jecxz
sub
gs
and
inc
adc
sbb
mov
add
adc
push
loopne
mov
cmps
or
or
and
retf
mov
jb
(bad)
cmp
retf
gs
daa
push
adc
outs
mov
jmp
adc
push
sbb
dec
ret
ficomp
aad
popf
mov
or
stc
inc
xor
cmp
inc
mov
int
lahf
mov
fwait
mov
sub
xor
lods
gs
fld
dec
repz
sub
mov
sbb
or
and
inc
mov
mov
dec
xor
call
push
fndisi(8087
fbld
pop
shr
stos
mov
les
xchg
pushf
xchg
dec
add
push
push
cmp
cld
sahf
ins
mov
and
lock
dec
push
loopne
out
movs
adc
mov
es
(bad)
loop
icebp
lods
add
mov
push
jg
xor
sar
and
fcomi
cld
aam
stc
movs
(bad)
(bad)
cmp
jb
inc
(bad)
mov
daa
test
out
sub
jl
or
stos
mov
xor
mul
cld
lods
xchg
ins
inc
sub
aam
pop
fisub
mov
pop
cmc
cmp
fstp
mov
ror
(bad)
hlt
je
lahf
outs
clc
or
push
lock
pop
adc
repz
cmp
lahf
pop
in
pushf
repz
mov
aad
pop
in
fistp
dec
jmp
xor
push
cmp
not
cs
jmp
adc
pushf
inc
cld
pop
push
cmp
call
pop
mov
mov
cmp
lock
mov
mov
cmps
pop
dec
add
xlat
pushf
mov
hlt
mov
int3
inc
mov
lock
(bad)
(bad)
adc
jo
bound
pusha
or
or
bound
pop
rcl
call
push
adc
es
fmul
iret
xchg
sub
sub
neg
inc
pop
mov
push
adc
add
mov
xor
iret
ret
xchg
push
push
and
mov
xchg
or
dec
xchg
dec
dec
mov
jnp
(bad)
std
xor
xchg
(bad)
imul
adc
gs
ret
cmp
xchg
cmp
push
sar
shr
xor
mov
add
lea
mov
xor
iret
je
in
ins
xchg
mov
jp
push
and
xchg
sbb
mov
xchg
cmp
xchg
cmp
les
or
lods
inc
(bad)
jmp
add
jge
cmp
gs
adc
or
xor
int
xor
fs
jecxz
dec
pop
add
out
ins
xor
fxch
dec
fsub
ins
sar
mov
pushf
fidiv
ret
jg
in
stos
inc
jp
dec
jne
sbb
nop
and
xor
adc
xor
jecxz
cmc
mov
aas
icebp
jecxz
push
ret
je
jbe
mov
cmp
fadd
xor
nop
cmc
mov
pop
sub
and
(bad)
adc
movs
xor
ins
test
call
outs
arpl
sbb
pop
xchg
push
hlt
jmp
add
das
lock
xor
imul
int3
es
fs
jle
popf
ret
ret
ins
adc
adc
xchg
lock
ja
add
test
jge
ja
loopne
hlt
push
ja
jns
retf
pminsw
in
mov
fs
mov
fcmovne
rcl
mov
push
sbb
jle
fadd
je
inc
dec
jae
jmp
sub
mov
sbb
hlt
loopne
call
rol
jmp
pop
js
jl
sbb
xor
aad
mov
movs
mov
xchg
dec
jbe
adc
iret
imul
nop
stos
push
test
mov
test
or
scas
mov
scas
mov
(bad)
xchg
sbb
test
lods
iret
push
test
mov
rol
add
jno
jge
enter
daa
ret
and
mov
jo
cwde
sub
push
add
mov
dec
jge
enter
stc
in
or
jnp
cmps
paddsb
movs
xchg
ja
cli
jl
fsubr
mov
stc
mov
cld
fstp
jo
or
cmp
(bad)
and
xor
inc
nop
aad
leave
lds
fwait
aam
(bad)
test
pushf
mov
das
jle
mov
dec
fdivr
or
and
cdq
jo
jp
dec
repnz
mov
xor
(bad)
ins
mov
push
pop
out
js
push
inc
frstor
xor
mov
mov
ins
push
push
inc
pop
jbe
test
popa
pop
push
das
hlt
push
loope
mov
jne
int3
fcmovnbe
push
aam
mov
test
aad
and
pop
fidiv
and
stc
or
lock
inc
hlt
test
aaa
es
or
mov
into
out
inc
pop
stc
aam
dec
xor
adc
cmp
push
cdq
mov
adc
outs
outs
mov
jp
nop
xchg
ss
pop
test
leave
ja
scas
mov
mov
lods
js
int
ins
and
enter
adc
or
out
retf
or
jae
outs
xor
push
cwde
xchg
addr16
pop
in
loop
add
and
pop
or
imul
retf
inc
xlat
mov
cld
cli
enter
in
push
outs
or
shr
push
(bad)
addr16
jo
jne
inc
es
stc
rcl
aam
(bad)
in
cs
int3
not
ins
icebp
cmps
xor
mov
pop
mov
out
mov
xchg
xor
add
mov
sub
shl
(bad)
jmp
cmp
int
fnsave
aas
mov
mov
push
xor
and
outs
xor
outs
mov
stc
cdq
lea
inc
xor
fisttp
cmp
jno
imul
xchg
jge
xchg
adc
div
pop
xor
jg
add
sti
mov
dec
test
iret
fmul
xor
and
cmp
iret
xor
sbb
xchg
mov
mov
test
sbb
(bad)
inc
pop
ins
mov
popf
addr16
fsubr
fwait
bound
mov
test
add
pop
push
loopne
pusha
dec
clc
loope
xchg
lock
sbb
sub
repz
fstp
call
push
pop
cmps
mov
adc
cmp
add
mov
push
retf
inc
xlat
movs
mov
sub
les
rol
xor
jae
xor
cmp
cs
jne
shl
mov
ror
sbb
out
mov
fisub
inc
bound
es
jnp
push
pop
add
(bad)
out
shl
jmp
sar
jns
sub
sahf
xchg
and
mov
int
loope
mov
or
or
cs
in
xor
aaa
push
dec
call
cld
xor
call
xchg
sbb
jo
call
test
inc
xor
out
jb
in
scas
jno
and
adc
sub
neg
xor
ficomp
fistp
pop
enter
add
test
mov
push
fwait
les
je
pop
and
pop
shl
pushf
sbb
pop
push
sub
mov
js
mov
push
sbb
mov
pusha
xor
out
int3
lods
pop
sub
xchg
push
push
sub
xor
outs
mov
mov
out
xor
dec
inc
xchg
mov
sbb
add
daa
dec
adc
and
or
inc
ins
gs
fnstcw
xchg
cmc
cmps
(bad)
mov
(bad)
imul
sub
outs
push
data16
enter
or
adc
movs
push
sahf
cs
mov
sbb
in
pusha
(bad)
test
jns
push
mov
push
sti
push
scas
rep
adc
xchg
in
dec
push
stc
cmps
shr
cmp
sahf
adc
fimul
jge
add
pop
push
mov
sub
xor
push
arpl
dec
imul
dec
popa
outs
ins
cmp
retf
add
sbb
ss
out
pop
mov
popf
xor
mov
sub
mov
pop
fstp
cmp
jae
stos
fsub
dec
xchg
push
pop
imul
arpl
pop
cld
xor
fs
test
cmp
mov
mov
dec
push
mov
repnz
and
cli
cli
adc
and
dec
dec
jecxz
cs
cwde
test
push
jg
test
rcr
sbb
pop
mov
or
retf
pop
setle
xchg
outs
(bad)
jbe
pop
mov
pop
sbb
scas
es
sti
jle
in
sbb
dec
mov
push
xor
push
pop
cwde
inc
ins
cmc
sbb
xor
or
jne
dec
ret
rol
pushf
fwait
sub
adc
mov
mov
add
into
cld
repz
retf
cmc
sahf
pop
sbb
cmp
stos
outs
push
cmps
cmps
sbb
or
mov
cmp
sar
out
mov
imul
xchg
xchg
ret
adc
add
sbb
cmp
sti
cmc
inc
(bad)
stos
lods
mov
pop
in
add
sbb
jae
outs
xchg
push
fs
mov
or
and
aas
xor
(bad)
in
xchg
jbe
jmp
dec
push
jle
inc
addr16
dec
mov
mov
out
push
sub
repz
sub
or
jmp
xchg
push
repz
adc
daa
shl
add
ds
repz
imul
sbb
mov
and
xchg
enter
sub
cld
pop
mov
loop
xchg
shl
cmp
dec
inc
cmc
pop
ds
test
call
mov
add
ss
jg
sbb
retf
jecxz
push
and
popa
and
xchg
movs
fs
mov
rcl
hlt
pop
mov
add
push
cmp
pop
adc
xor
push
iret
push
imul
into
xchg
pushf
sub
(bad)
(bad)
pop
shr
xchg
lock
sbb
fyl2xp1
idiv
xlat
cmp
dec
inc
inc
mov
inc
pop
push
xchg
mov
shr
js
out
and
shl
aam
sbb
iret
enter
rcl
repz
mov
lods
cmp
(bad)
fwait
mov
icebp
test
fsubp
movs
leave
dec
xchg
jno
sti
jb
sub
popa
gs
mov
jge
stos
lahf
mov
ret
fdivr
jns
arpl
neg
retf
mov
fidiv
mov
mov
fdivr
mov
aad
mov
sbb
or
sub
push
aaa
sti
lds
mov
dec
out
sbb
xor
or
jne
mov
enter
or
fwait
push
clc
shl
jecxz
jbe
xchg
cmp
js
xor
add
pusha
dec
adc
push
scas
in
add
mov
leave
in
push
js
mov
xchg
nop
aad
push
inc
clc
fsubr
or
fincstp
(bad)
adc
std
aaa
dec
or
push
mov
loopne
out
inc
repz
add
mov
retf
jle
fwait
mov
test
(bad)
push
cmps
mov
pop
jns
iret
lods
in
std
repnz
clc
aam
cmp
cmc
or
mov
jno
sbb
lds
cmps
mov
call
imul
adc
xchg
fadd
pop
and
enter
ins
(bad)
div
out
add
ror
mov
and
outs
dec
fbstp
sbb
add
retf
pop
lock
test
push
jmp
aaa
leave
and
pop
jge
mov
in
and
mov
(bad)
or
cwde
test
je
add
adc
clc
mov
dec
xor
or
mov
loopne
gs
xchg
stc
push
jl
mov
mov
sub
cli
xor
cdq
rcl
loope
inc
addr16
mov
cli
inc
push
inc
cmc
leave
push
out
out
mov
sub
out
xor
pop
cs
sbb
imul
sbb
mov
ja
add
inc
cdq
cmp
loope
mov
shl
inc
cmp
and
in
xchg
nop
or
gs
ins
mov
pop
das
sub
sub
push
mov
xchg
jnp
ds
mov
je
mov
aaa
enter
jge
cmp
sbb
lods
xchg
pusha
sub
jno
int
push
xchg
add
loopne
popa
sub
cmp
int3
xor
lods
xor
sahf
xlat
(bad)
mov
fsub
lds
mov
xlat
xchg
cmp
test
movs
mov
cmp
dec
add
adc
scas
adc
std
rcr
inc
push
in
shl
or
call
enter
inc
or
je
adc
js
dec
std
inc
jb
movs
retf
retf
das
ins
cmp
sub
sbb
arpl
je
or
ins
pop
sbb
out
or
(bad)
xor
nop
xor
retf
adc
add
dec
and
mov
mov
and
inc
(bad)
dec
lods
dec
xchg
mov
add
xchg
adc
xor
push
adc
jo
imul
cmp
aam
pop
and
sbb
je
pop
mov
pop
jmp
mov
lock
push
clc
jno
or
push
push
adc
xchg
and
jg
jbe
je
dec
adc
push
cwde
pop
clc
dec
arpl
sbb
adc
out
or
cmp
xor
call
fidiv
neg
fidivr
adc
xlat
add
xchg
aas
jmp
jp
inc
or
mov
and
pop
rcr
add
mov
dec
dec
ja
div
push
pushf
dec
sub
scas
bound
mov
(bad)
push
out
pop
and
cdq
pop
in
jb
push
sbb
push
sub
popf
in
adc
fucomip
and
cdq
loopne
push
push
push
fsub
cmp
jp
and
jge
xor
ins
clc
lods
push
ds
xchg
gs
fwait
or
jge
dec
out
adc
test
xchg
es
push
loopne
sbb
sub
fdiv
neg
ss
mov
lock
and
add
cmp
fwait
inc
sahf
mov
xchg
dec
sub
adc
inc
out
(bad)
sub
or
adc
cmp
mov
adc
push
or
loopne
cmp
lock
push
lods
and
push
out
fnstsw
(bad)
pop
stc
ret
sar
jle
retf
inc
(bad)
xchg
jb
test
pusha
add
aas
fwait
mov
bound
aas
adc
out
xchg
xchg
add
shr
fcom
add
retf
test
xchg
ret
push
jo
mov
inc
mov
jbe
mov
xlat
mov
or
xchg
pop
daa
xor
sbb
adc
outs
adc
in
pop
add
dec
xchg
out
push
cmc
and
sar
or
xor
cs
sub
daa
or
into
mov
dec
sbb
pop
xchg
add
inc
xlat
mov
add
jbe
lods
add
add
adc
dec
daa
sbb
fisub
jl
cli
or
mov
jp
leave
and
sbb
mov
and
lds
pop
inc
stos
xchg
jl
int
std
sbb
jmp
pop
mov
ins
pop
sbb
xchg
std
mov
sbb
(bad)
mov
pop
(bad)
inc
sbb
stos
(bad)
int3
xchg
into
fdiv
cli
dec
lods
sub
jg
(bad)
lods
and
(bad)
cmps
or
push
aad
in
jne
repnz
loope
into
cdq
dec
and
stc
and
mov
pusha
mov
mov
pop
outs
pop
pop
pop
jmp
mov
and
inc
into
cli
outs
mov
jmp
cmp
inc
xchg
mov
mov
fcomp
push
cld
arpl
js
ss
bound
xor
mov
(bad)
cmp
xor
ret
mov
and
sub
(bad)
js
pop
adc
cmps
js
push
xor
popa
fistp
aad
push
jp
xor
inc
fstp
loop
add
sbb
imul
mov
sub
(bad)
and
nop
aad
enter
mov
jmp
mov
in
pop
xchg
and
jg
rcl
loop
push
loop
adc
push
pushf
mov
mov
leave
imul
ds
stos
lahf
lods
pop
arpl
iret
int
and
add
(bad)
ins
push
mov
pop
je
rol
cmps
(bad)
cld
push
jl
test
call
sub
push
jnp
mov
cs
(bad)
(bad)
inc
sub
jmp
inc
sbb
ffreep
ins
stos
ret
dec
mov
jp
dec
xchg
mov
pushf
and
xor
ret
cdq
xchg
xchg
xor
nop
push
sub
pop
dec
addr16
cmp
mov
mov
iret
and
mov
push
lea
pop
jno
push
cmp
xor
ss
xchg
test
jecxz
inc
add
adc
or
or
(bad)
cmp
daa
aam
out
cs
sub
in
and
xchg
lea
mul
mov
fld
push
adc
scas
mov
xor
ror
ds
int
xchg
dec
mov
ret
(bad)
mov
sahf
fidiv
adc
out
ror
xchg
mov
repz
cmps
dec
adc
mov
ret
pop
inc
idiv
or
pop
mul
push
mov
or
jns
or
neg
sbb
mov
call
adc
push
sbb
(bad)
jae
mov
pop
add
xchg
ins
adc
loop
jnp
or
jle
rcr
push
add
push
ror
push
bnd
sbb
or
jmp
call
aas
stos
dec
stos
jbe
cmp
mov
jl
stos
int
scas
popa
or
xchg
dec
sbb
or
jne
ins
pop
jmp
push
pop
cmp
pop
pusha
add
(bad)
xchg
pop
lds
mov
or
fnsave
das
sbb
clc
mov
pop
test
popa
jecxz
mov
ins
mov
mov
sbb
outs
pop
push
jmp
jge
test
jnp
movs
les
push
sbb
sub
push
mov
jmp
ss
cld
mov
pop
int3
mov
inc
fwait
nop
data16
je
cmps
sahf
shr
mov
jnp
outs
or
xchg
inc
mov
push
add
inc
mov
jb
add
shl
fstp
jl
cmp
pop
loopne
push
and
lea
or
dec
shr
leave
scas
mov
xchg
sub
int3
jae
jl
call
stos
dec
pop
jmp
xor
test
adc
les
out
dec
mov
in
sahf
push
cwde
xlat
cmc
push
out
cmp
fisubr
int3
aaa
push
shl
pop
pop
cmc
mov
dec
push
or
mov
mov
sbb
inc
mov
outs
rcr
scas
arpl
cmps
sbb
ret
xchg
mov
xchg
rol
test
add
cmp
sti
sub
icebp
int3
lods
cli
fsub
cmp
jno
mov
daa
loope
stos
aam
or
in
push
ds
nop
stc
scas
jmp
pop
adc
cmc
leave
dec
fmul
fld
dec
in
cmp
jmp
sub
and
(bad)
imul
cmps
cs
(bad)
scas
fnstcw
adc
repz
pushaw
fxch
adc
push
jo
mov
jl
xchg
push
adc
xor
dec
aad
fcmovne
adc
arpl
je
dec
movs
mov
aas
bound
mov
or
adc
(bad)
jge
js
cmc
(bad)
mov
rcr
nop
scas
adc
xchg
pushf
jecxz
xchg
es
aas
sub
rol
je
(bad)
cld
mov
dec
xor
pop
push
call
fs
adc
jcxz
lds
(bad)
jge
xchg
aam
out
sbb
or
xor
push
fcmovne
jbe
test
cmp
div
shr
add
and
inc
or
and
jecxz
ja
jg
jae
xchg
out
pop
sbb
std
jb
outs
out
iret
xchg
push
and
bound
dec
mov
cmp
jne
jmp
lods
fstp
add
aad
and
adc
jle
xchg
shl
icebp
(bad)
mov
retf
inc
push
push
loopne
test
jae
icebp
lock
adc
imul
lock
jmp
dec
fldenv
xchg
and
sti
mov
inc
fdiv
hlt
sbb
shl
loope
jae
int
pusha
sub
pop
inc
loope
int
sbb
icebp
in
mov
inc
sar
es
sub
sbb
popa
pop
repnz
mov
test
mov
les
(bad)
cmp
lds
popa
in
into
mov
sub
sar
pop
push
popa
pushf
in
test
leave
in
and
add
arpl
mov
mov
add
movs
loopne
repnz
addr16
cmp
(bad)
adc
sub
nop
mov
mov
mov
jmp
or
inc
leave
inc
inc
movs
scas
cmp
retf
xchg
sbb
nop
mov
ins
mov
inc
mov
dec
mov
mov
push
inc
lds
je
cmp
call
pop
mov
ins
jbe
test
je
lods
sbb
loopne
(bad)
in
or
lahf
pop
adc
js
or
js
sbb
mov
arpl
ss
sahf
outs
xor
jns
ins
cmps
xchg
popa
inc
dec
cdq
add
sahf
xchg
sub
(bad)
mov
mov
push
dec
(bad)
push
sub
sbb
jmp
xchg
inc
add
call
xchg
aad
lock
xchg
test
push
inc
push
call
sti
sbb
pop
sbb
inc
es
push
imul
cmp
stc
in
sub
lahf
imul
mov
and
xor
rcr
(bad)
xchg
and
sbb
aaa
hlt
push
xor
mov
add
inc
xlat
out
sub
xchg
inc
cmc
mov
jns
out
mov
pop
and
(bad)
pop
add
xor
int3
enter
xchg
cmp
movs
adc
rol
mov
idiv
push
mov
xchg
lea
adc
mov
push
mov
out
pop
push
pop
jb
pusha
dec
mov
retf
in
mov
(bad)
popf
fucomi
std
sbb
rcr
mov
cmp
mov
pop
sub
xor
aaa
mov
pop
lahf
mov
pop
cmp
add
or
rcr
and
dec
icebp
dec
pop
mov
test
pop
xor
push
in
cmc
or
nop
push
lds
pop
mov
jmp
dec
adc
mov
jns
(bad)
repnz
ss
arpl
mov
pop
jmp
mov
fld
xor
jnp
add
mov
sub
shr
pop
imul
ds
push
xor
(bad)
iret
push
and
add
push
mov
sbb
je
dec
lock
in
xchg
xchg
in
or
and
and
aaa
sub
pop
adc
jnp
sbb
inc
cmp
add
jge
mov
call
idiv
mov
jo
jp
arpl
in
pushf
add
mov
imul
jne
mov
inc
jne
lock
ja
mov
repz
or
imul
rol
fstp
test
or
sbb
mov
lock
call
or
nop
add
jne
jg
pop
pop
add
ror
xlat
jnp
adc
mov
arpl
adc
ret
and
fldz
add
cli
and
mov
out
test
pop
adc
or
cmp
cmp
xchg
sar
imul
sub
in
popf
cmp
sub
jmp
mov
cmp
fst
stos
mov
push
push
stos
mov
jbe
xchg
sub
dec
pop
inc
or
inc
in
dec
lods
sahf
test
push
fwait
mov
out
jl
lods
pop
sbb
fnstsw
sar
jmp
push
inc
jno
dec
xchg
nop
sbb
outs
inc
call
and
(bad)
and
nop
test
int
imul
pop
pop
adc
clc
adc
xor
jmp
das
fidiv
loope
pop
dec
hlt
jb
ss
add
xchg
adc
sbb
out
stc
in
jae
xor
aam
out
cli
push
test
mov
bound
mov
repz
rol
push
sbb
(bad)
cld
push
push
test
xor
lock
xlat
mov
scas
or
mov
pop
mov
in
mov
popa
jnp
fcomp
mov
sbb
sub
cmp
out
(bad)
inc
inc
and
sbb
add
rcr
dec
sbb
lea
mov
call
sbb
and
fimul
mov
stos
retf
mov
jmp
fisubr
pusha
jle
arpl
mov
sar
push
mov
push
les
je
inc
das
adc
jge
add
ret
fucomp
push
jecxz
cmp
sbb
jbe
adc
(bad)
jp
repz
dec
inc
cdq
adc
jp
mov
mov
pop
(bad)
and
repnz
mov
sar
push
xor
(bad)
bound
dec
add
dec
(bad)
ds
xor
sub
dec
aad
jb
mov
sub
xchg
xchg
jmp
adc
clc
test
sti
adc
inc
xchg
ss
out
push
push
add
pop
xlat
xor
or
sbb
jge
jle
or
loopne
outs
or
imul
push
xor
xchg
cmp
push
jg
mov
dec
cmp
pusha
push
lds
cs
jp
repz
cli
push
imul
imul
xchg
(bad)
jne
shl
fimul
pop
rcl
mov
retf
(bad)
loop
mov
mov
lea
xchg
(bad)
cdq
lds
mov
(bad)
xor
and
xor
call
mov
add
lock
inc
dec
mov
adc
or
ds
adc
pop
xor
mov
mov
arpl
and
dec
lahf
enter
fimul
sub
mov
lods
mov
leave
add
clc
aad
and
sbb
lods
dec
xchg
in
sub
leave
xchg
push
push
pop
xlat
sub
aam
mov
movs
or
xchg
loope
push
pop
mov
iret
aaa
call
punpcklbw
cmp
push
aaa
pop
fmul
jmp
(bad)
ret
xor
shl
and
adc
fmul
je
mov
push
ja
int
xchg
retf
stos
mov
add
test
ins
jno
sub
(bad)
jmp
ss
out
bound
dec
adc
fs
pop
leave
mov
sub
ins
movs
sub
sub
stc
pop
clc
dec
clc
push
and
outs
mov
sbb
jne
scas
cli
stos
jmp
test
fld
dec
xlat
sbb
inc
stc
arpl
imul
dec
mov
rcl
dec
mov
in
addr16
adc
mov
ja
test
push
or
add
frstor
scas
push
into
ins
jns
cwde
cli
push
jmp
gs
mov
addr16
mov
sub
inc
test
jl
jmp
mov
bound
push
or
push
and
add
inc
std
jns
ss
jge
mov
push
add
neg
into
ins
outs
sbb
jecxz
push
xor
mov
jbe
cmp
bound
out
pusha
push
test
add
sub
retf
jae
adc
or
cmp
call
shl
cli
into
push
adc
sbb
inc
mov
dec
push
mov
je
popf
jecxz
xchg
pushf
test
dec
hlt
add
loopne
in
xor
es
inc
sub
call
outs
(bad)
in
jne
jle
out
clc
shr
cdq
cmp
out
popa
and
ror
jecxz
movs
stos
mov
lods
(bad)
bound
cs
movs
push
loop
jno
mov
aaa
mov
and
xchg
lock
call
cmp
mov
fild
inc
in
sbb
jnp
push
inc
cwde
cmp
xchg
xor
add
shl
and
test
sar
inc
jle
enter
add
movs
je
nop
mov
(bad)
pop
dec
dec
sub
das
lahf
leave
(bad)
stos
adc
cmp
or
gs
in
repnz
jo
pop
loop
push
test
sbb
mov
iret
sbb
imul
mov
call
push
mov
xchg
lea
pop
sub
jno
mov
xchg
(bad)
(bad)
sub
xor
mov
pop
(bad)
xlat
jns
inc
add
shr
add
mov
idiv
push
fs
lods
aas
ret
xchg
ret
lock
hlt
inc
cdq
jae
fs
inc
fnstcw
cmc
fstp
pop
sbb
into
dec
ins
cmp
ds
mov
leave
pop
jmp
xor
stos
dec
jns
das
inc
push
mov
movs
aam
mov
adc
add
dec
xor
adc
(bad)
cmps
inc
imul
fwait
imul
imul
fld
jmp
and
in
xchg
xchg
mov
outs
jbe
scas
pop
fistp
imul
xor
pop
xchg
push
cmp
cmp
rol
cmp
jno
(bad)
setg
pop
daa
int
push
bound
js
pop
aas
fcomp
add
dec
out
stos
cs
mov
outs
sti
out
lea
mov
daa
xchg
int
test
cmc
cdq
addr16
fcom
push
xor
cmps
clc
retf
sub
dec
xchg
add
enter
loopne
bound
imul
cwde
bound
daa
sbb
out
xor
aaa
xlat
fist
leave
fucomip
pop
pop
ja
shl
inc
sub
lea
cmp
and
or
pop
xchg
imul
out
fld
iret
pop
push
call
addr16
movs
(bad)
mov
mov
pop
or
stc
inc
cs
lods
enter
mov
fist
sbb
cmp
xchg
call
sbb
push
add
lods
aad
in
lods
iret
scas
add
and
data16
test
int
mov
cmp
adc
adc
pop
loopne
xor
mov
and
inc
mov
mov
or
fwait
test
fimul
and
mov
mov
dec
xor
js
sbb
jnp
popf
clc
jae
sti
enter
fwait
mov
mov
fs
nop
lods
call
in
inc
div
jmp
(bad)
ins
std
push
jns
into
push
fs
xor
popf
nop
sub
js
pop
test
repz
push
xchg
sti
lods
push
pop
fadd
adc
dec
sti
test
xchg
jnp
js
fldcw
fist
mov
lods
out
aas
jnp
dec
es
int
mov
jmp
and
out
jp
xchg
sti
mov
push
jg
cld
or
sub
mov
add
imul
or
cld
fnstsw
xchg
or
jno
or
fist
dec
push
pop
fdivrp
(bad)
jo
mov
fidivr
lods
pop
imul
cwde
lea
dec
shl
fs
push
cmp
xor
xchg
sahf
imul
xchg
pop
cmp
jnp
push
dec
ficom
aam
and
fisttp
xchg
cs
les
jne
mov
add
mov
pop
(bad)
rcr
scas
cmps
dec
push
fst
test
jge
push
(bad)
push
mov
push
add
mov
lock
lahf
sbb
cmps
popf
mov
enter
into
xor
retf
or
inc
adc
hlt
ret
cwde
retf
sbb
or
pop
bound
pop
arpl
rcr
cmp
or
jmp
or
not
call
or
and
pop
jle
lods
adc
mov
jg
mov
inc
sti
ret
mov
icebp
add
int3
cwde
aam
inc
mov
dec
pop
inc
push
adc
jbe
xchg
ud0
cs
into
adc
xchg
push
adc
jns
mov
pop
test
pop
and
pusha
cmp
lea
dec
cdq
push
mov
idiv
fs
push
dec
push
push
sbb
mov
push
xor
out
imul
fwait
(bad)
int3
verw
xor
jmp
mov
popw
cmc
pop
xor
mov
jecxz
or
add
aaa
dec
add
mov
mov
mov
sub
pop
xchg
pop
cmp
or
(bad)
mov
(bad)
scas
cli
xchg
mov
cmp
mov
cwde
sub
cli
ret
test
inc
inc
xchg
call
aad
pop
inc
adc
pusha
cmp
mov
cmc
add
mov
nop
(bad)
lods
ds
cli
jmp
pop
sbb
cmp
mov
push
and
adc
rcl
xchg
or
cmp
xchg
inc
jl
mov
xor
mov
sub
push
ds
jmp
loop
sub
pop
js
inc
(bad)
test
outs
adc
shr
sub
xor
pop
jecxz
retf
mov
adc
int3
in
and
adc
adc
leave
jle
xchg
call
clc
jae
pop
push
fucomi
movzx
mov
mov
mov
mov
outs
into
in
xchg
mov
xchg
stos
sbb
cmps
sar
ja
out
jnp
jne
xchg
xor
sbb
stc
imul
ficomp
lahf
loope
add
int
dec
pop
es
call
lahf
pushf
fld
int
jle
lods
or
inc
movq
jg
lahf
xchg
dec
pop
mov
and
jmp
cwde
std
jge
mov
shr
cli
not
xchg
sub
pop
call
dec
sbb
popa
push
shl
dec
adc
pop
ja
inc
inc
mov
bound
or
mov
out
jp
push
pop
sahf
cmc
fiadd
jns
sbb
and
cli
jo
leave
jne
fwait
pop
ret
push
adc
clc
pop
cmps
jo
mov
lods
shl
leave
mov
repnz
stc
xor
sbb
retf
push
cs
fdivr
stos
mov
sbb
in
out
test
and
into
sbb
rcl
call
repnz
std
jae
jecxz
rcr
pusha
ret
hlt
xor
mov
scas
jmp
loop
push
jl
enter
(bad)
fst
mov
repnz
std
lock
nop
mov
outs
push
pop
push
retf
ret
jmp
addr16
movs
icebp
mov
or
sti
in
add
retf
dec
sahf
clc
mov
aas
cdq
hlt
jb
cld
ins
mov
ret
shl
fstp
cmps
mov
fndisi(8087
shl
mov
adc
call
fnsave
cdq
sti
dec
push
cs
jmp
xor
imul
inc
ror
xchg
out
fnstenv
mov
hlt
cmc
out
aam
retf
int3
mov
xor
mov
jne
sbb
fiadd
sub
xor
sbb
add
fstp
pop
shl
repz
dec
push
push
mov
fisub
popa
push
sbb
or
dec
loopne
add
jbe
xchg
clc
mov
fwait
pop
mov
and
div
pop
retf
cwde
xchg
popa
adc
jns
(bad)
stos
adc
mov
(bad)
xchg
sub
outs
pop
or
das
sbb
or
shr
cmp
dec
aaa
dec
mov
push
imul
(bad)
jmp
popf
push
add
jno
push
and
ss
cld
popa
xor
inc
cmp
dec
pop
mov
mov
inc
imul
out
outs
inc
mov
push
xor
add
pop
jae
xchg
ficom
pop
push
aad
cmps
cmp
mov
jp
repz
push
sub
or
pop
sub
nop
ret
cmp
xchg
inc
in
out
aas
mov
nop
ret
xchg
mov
cld
mov
repz
pop
mov
mov
xor
jle
ja
pmovmskb
push
(bad)
int
outs
lods
jne
addr16
mov
test
adc
jbe
and
cmp
stos
add
aas
and
loop
lahf
pop
sub
inc
dec
adc
test
imul
jge
jnp
dec
mov
jb
mov
xor
call
mov
pop
add
sbb
leave
sub
les
mov
enter
xchg
mov
push
int3
push
vcvtss2sd
mov
xor
addr16
jp
imul
inc
jb
test
js
xchg
mov
dec
mov
xor
mov
jg
dec
stos
xor
add
movs
sub
xchg
in
repz
cld
ds
mov
jns
aam
repz
je
data16
push
(bad)
call
inc
aas
cli
xor
pop
movs
div
les
or
jp
dec
cwde
or
pshufd
add
add
or
xor
xlat
test
xlat
push
sar
and
push
cwde
repz
into
xor
push
jne
push
pop
cmp
repz
inc
cmp
fistp
fisubr
fs
and
js
jne
(bad)
in
cdq
pop
and
sbb
div
jb
es
rol
jg
sub
das
xor
and
adc
aad
es
mov
xchg
ror
xor
pop
mov
xsaves
adc
mov
mov
jns
in
in
sub
or
cwde
sbb
sub
pop
(bad)
jmp
dec
out
fadd
and
mov
outs
adc
mov
and
mov
and
and
stc
daa
pushf
sti
jae
aam
cwde
xchg
mov
adc
pop
push
push
mov
pop
cld
jg
push
dec
cmp
and
xchg
sub
(bad)
jle
or
sahf
and
push
xchg
sbb
mov
loop
ins
cs
xchg
outs
push
jmp
and
dec
out
sub
retf
pop
out
sbb
into
daa
vpmulhw
movs
(bad)
mov
mov
sti
js
test
call
xor
push
lock
icebp
ins
pop
push
jmp
mov
lods
xlat
ror
into
arpl
sar
xor
stos
add
outs
push
retf
mov
fnstsw
repnz
or
(bad)
adc
push
inc
jae
test
xchg
sub
adc
and
push
add
gs
stos
popa
xchg
mov
sbb
xor
sbb
jle
push
xchg
scas
stos
rcl
adc
inc
jns
mov
js
bnd
jmp
and
xlat
(bad)
dec
xor
push
sub
aad
ret
ds
les
cdq
dec
shl
pusha
sbb
push
ss
clc
(bad)
outs
xchg
stos
dec
cmp
and
or
jg
jo
pop
jns
stos
xlat
out
stos
cwde
jns
push
(bad)
lock
imul
xor
push
pop
mov
push
rol
clc
xchg
mov
pop
and
repnz
fwait
jae
or
sar
mov
(bad)
jg
mov
pop
xchg
fdivr
push
mov
add
xor
stos
xor
dec
cmp
jmp
(bad)
fmul
dec
sti
retf
enter
push
(bad)
pop
xchg
or
jns
test
dec
lds
mov
retf
retf
add
(bad)
daa
sar
arpl
lock
dec
jl
pop
rol
jmp
xlat
xchg
movs
std
push
adc
cvtps2pd
or
pop
push
dec
mov
add
mov
shl
pushf
xor
push
imul
mov
fdiv
fiadd
xchg
mov
test
inc
add
rcl
cli
sbb
adc
(bad)
lock
inc
mov
pop
dec
je
dec
sbb
push
aas
add
or
push
retf
mov
sbb
iret
or
jbe
mov
dec
(bad)
int3
adc
add
dec
shr
in
iret
push
push
pop
xchg
(bad)
adc
test
lock
adc
mov
inc
pop
movs
call
and
stc
fidiv
push
fsubr
mov
mov
enter
or
jp
sub
sub
(bad)
icebp
mov
xor
push
frstor
dec
add
dec
and
push
idiv
lock
pop
bound
rcr
lahf
push
je
pop
jo
sar
push
mov
and
adc
mov
stos
bound
test
retf
cmp
loop
mov
add
jge
je
out
js
mov
shr
push
and
sbb
push
test
das
adc
fs
(bad)
cmp
aad
lahf
daa
inc
ja
into
shl
and
dec
ja
mov
and
nop
jbe
mov
ror
cmps
sbb
je
cmp
shr
mov
adc
and
mov
or
lods
cmp
sub
adc
or
mov
pop
or
adc
dec
int
stos
out
aam
dec
(bad)
sub
add
emms
cmp
and
cmp
xor
add
adc
or
mov
stos
mov
pop
push
rol
(bad)
dec
or
inc
pop
addr16
xchg
ins
pop
sub
loope
rcl
mov
or
or
mov
push
xor
sbb
adc
mov
ins
leave
fwait
cwde
jb
(bad)
xchg
gs
aaa
in
test
mov
stos
xor
cmps
xchg
hlt
jle
push
test
lahf
mul
aad
push
add
std
dec
lods
rcl
les
rcl
sbb
sar
jb
rcl
(bad)
adc
in
mov
push
xor
cmc
daa
div
out
rep
ins
int
jp
jge
faddp
out
mov
mov
cmp
rol
xor
jmp
dec
(bad)
aas
shl
sub
mov
popf
mov
popf
es
inc
jbe
adc
xor
test
cmps
test
xchg
ds
lea
inc
pop
and
inc
retf
mov
jg
lods
xor
add
pop
xchg
mov
sbb
push
mov
les
pop
push
lahf
mov
aad
daa
aad
and
mov
and
pusha
add
outs
movs
pop
dec
int
push
sbb
xchg
mov
cmp
sti
ret
push
pop
mov
(bad)
jno
in
mov
fstp
pusha
mov
jae
pop
int3
mov
mov
inc
and
in
or
push
imul
jo
lock
mov
xor
jnp
xor
inc
lds
jo
or
dec
rol
xchg
xchg
push
lea
sbb
mov
into
int3
xor
pop
mov
outs
movs
retf
adc
jecxz
frstor
push
stos
mul
mov
and
or
and
sbb
scas
mov
adc
aad
jmp
or
mov
test
mov
push
mov
sub
fwait
mov
push
pop
push
sahf
inc
aad
xor
aam
mov
mov
in
lahf
(bad)
ins
pop
lds
mov
mov
mov
dec
sahf
in
xchg
or
push
stc
ror
sub
int
pop
fisubr
xor
sahf
inc
ins
(bad)
or
es
pop
bound
in
repz
sub
push
jmp
pop
lds
and
jno
push
mov
jno
sbb
dec
mov
je
dec
fnsave
fwait
mov
and
aas
fild
pop
xor
inc
xchg
(bad)
mov
mov
jne
fisub
div
repnz
out
sti
ret
mov
popf
sub
pop
fcmovu
and
sub
cmp
stos
in
or
lods
push
xor
das
mov
cmp
push
popa
and
leave
xchg
mov
pushf
stos
sar
jne
sbb
pop
pop
cli
mov
pop
add
out
sub
add
jo
sub
retf
mov
mov
ja
test
add
call
movs
enter
mov
mov
cld
(bad)
sub
add
add
int3
gs
xchg
std
and
push
pop
movs
dec
fwait
mov
sub
xchg
or
mov
retf
mov
rcr
xlat
mov
pop
push
lods
jae
fld
push
or
push
inc
(bad)
(bad)
pop
in
outs
add
popf
test
js
mov
sub
ret
adc
jne
push
and
cwde
aaa
sbb
mov
mov
lea
scas
jg
stos
pop
into
aaa
je
in
pop
inc
jecxz
ins
mov
sbb
cmp
ins
jno
inc
shl
push
in
sbb
lock
mov
cmp
imul
es
fisub
gs
outs
cmps
cmps
popf
mov
nop
pop
cmp
xchg
adc
loope
cmp
data16
pop
stos
cmps
ins
inc
movs
cwde
dec
cmp
sar
xchg
add
add
test
mov
mov
dec
dec
gs
std
stc
dec
sbb
add
leave
arpl
aad
jae
or
mov
fwait
sub
mov
or
sub
dec
fild
sub
(bad)
in
lods
dec
inc
pop
adc
arpl
adc
loope
inc
dec
retf
mov
mov
jp
xchg
dec
arpl
xor
cmp
inc
add
call
mov
sub
out
add
mov
push
imul
fild
sub
sbb
mov
ja
pop
out
mov
jg
aas
fcom
xor
mov
xor
mov
jns
and
int3
popf
out
les
cmp
xchg
cmp
pop
sub
js
std
pop
pandn
aas
xchg
in
sub
mov
pop
sbb
daa
popf
xor
iret
fdivr
loop
and
mov
mov
push
gs
push
and
mov
push
sub
xor
dec
cwde
mov
cmp
pushf
mov
add
clc
push
xchg
(bad)
xlat
imul
cmps
xor
push
mov
imul
in
pushf
xor
xchg
lock
inc
jp
mov
mov
jnp
imul
js
das
loopne
or
and
test
imul
shr
and
inc
add
push
cs
mov
ins
(bad)
mov
(bad)
ins
aaa
(bad)
add
out
mov
fcmovu
and
mov
cmp
(bad)
aas
icebp
(bad)
fisubr
test
push
push
sub
jp
inc
mov
and
stc
inc
push
pop
jmp
popf
call
ret
gs
dec
lods
ror
pop
dec
imul
and
mov
imul
js
and
xor
ins
aas
inc
imul
jne
std
repnz
mul
mov
sbb
adc
xor
ret
fld
xor
push
(bad)
jb
test
cmp
das
pop
mov
xor
xchg
push
popa
or
mov
fdiv
test
je
xor
mov
xchg
outs
xor
nop
xor
aas
pop
inc
cli
int3
dec
and
mov
ss
mov
or
pop
jmp
int
mov
data16
adc
or
dec
mov
sbb
jle
jno
int3
add
mov
bound
xor
cmps
and
dec
jo
jns
std
cmp
int3
jne
xchg
dec
push
retf
adc
fistp
and
jb
aaa
movs
xchg
or
xlat
inc
retf
adc
outs
jge
jle
xor
ins
aam
xchg
test
fcomip
jo
sbb
mov
cdq
int
sahf
(bad)
hlt
mov
pushf
dec
mov
test
repz
test
outs
call
pop
pop
les
jle
ss
push
test
sbb
mov
lods
mov
sahf
ret
or
adc
or
es
xor
es
cmps
mov
adc
fwait
cld
scas
pop
ja
test
enter
sbb
movs
add
cmp
es
pop
jne
add
cmp
mov
lahf
out
add
stos
push
mov
(bad)
mov
sub
or
repz
push
push
loop
test
(bad)
stos
arpl
cmp
adc
dec
adc
popa
in
ds
fcmovbe
loopne
cdq
adc
js
sub
bound
inc
aad
push
jbe
adc
fstp
ret
scas
(bad)
xor
pop
cmp
std
adc
and
jbe
mov
jno
lods
test
xchg
push
pop
inc
jl
mov
dec
xchg
shr
add
push
dec
add
sbb
jmp
imul
repz
ret
adc
xchg
dec
mov
(bad)
sbb
push
add
mov
jne
ss
inc
(bad)
loope
fiadd
jno
pop
test
movs
push
fwait
push
scas
push
arpl
jae
jmp
mov
inc
rcr
inc
push
popa
aad
xor
fwait
push
dec
imul
mov
nop
arpl
int3
dec
jnp
jno
sahf
call
outs
pop
jg
adc
jl
adc
push
rcl
lahf
or
dec
sbb
push
push
push
jmp
inc
or
imul
push
xchg
dec
mov
dec
data16
xor
jmp
cmp
xor
sub
mov
idiv
mov
mov
adc
inc
pop
sub
pop
add
mov
stos
(bad)
icebp
pushf
mov
pop
adc
dec
xor
sbb
xchg
push
cmp
sub
jg
je
inc
aam
push
adc
jb
and
ja
mov
cmp
add
repnz
scas
mov
jne
inc
mov
jge
cdq
in
pop
cmp
jbe
adc
dec
mov
mov
test
ins
enter
add
neg
pop
add
scas
out
call
xor
bound
mov
sub
push
or
mov
or
shl
sub
repnz
aad
fs
iret
push
xchg
adc
retf
push
dec
pop
fwait
xor
pop
out
loopne
imul
jle
mov
push
les
test
data16
out
xchg
and
adc
xor
stos
mov
lea
aad
jae
xchg
fdivr
sbb
jb
sub
fwait
xchg
pop
outs
in
lock
shr
mov
cmp
sbb
mov
cmp
inc
ret
lahf
and
pop
rcr
vaddps
cmp
and
push
pop
call
dec
sbb
sti
in
int
push
sub
out
dec
push
lods
cwde
push
aad
out
mov
outs
loop
xchg
cld
dec
adc
xlat
into
jne
fcomp
jno
sub
sub
and
jmp
int3
jp
mov
(bad)
int
outs
enter
jge
call
add
add
outs
jno
pusha
test
cmp
sbb
test
test
add
xchg
fisubr
sbb
or
push
dec
ins
rcl
and
hlt
stc
and
aad
pop
pop
jno
lock
shr
call
fwait
into
push
pushf
sbb
sar
fst
rcr
mov
sbb
jecxz
movs
mov
hlt
not
mov
xchg
cdq
shl
adc
pushf
push
sbb
push
scas
mov
and
adc
aas
fcomp
test
repnz
or
(bad)
call
aam
loopne
jle
sub
and
cwde
icebp
mov
inc
jo
sbb
or
fdivrp
mov
stos
imul
dec
inc
stos
ja
jbe
or
aas
out
dec
imul
mov
popa
fisubr
jmp
and
call
movs
and
push
sub
ja
movs
jp
int
dec
cmp
hlt
loope
mov
and
dec
stos
f2xm1
cmp
mov
ss
dec
in
shl
push
dec
xchg
push
movs
pop
fdivr
sub
ror
sbb
inc
ds
js
jmp
and
jae
imul
push
repz
ins
test
xor
dec
push
(bad)
xor
das
push
or
jp
lds
xchg
or
inc
mov
sbb
mov
pop
jmp
and
mov
dec
sub
jbe
call
mov
cmp
and
xlat
aaa
nop
mov
iret
idiv
imul
xchg
jns
push
dec
addr16
push
sub
cmp
pop
jmp
dec
and
or
je
mov
push
mov
(bad)
stos
sub
shl
xchg
das
ret
cmp
outs
test
sbb
adc
into
jl
jp
imul
in
out
mov
cdq
push
icebp
jl
add
xchg
jns
imul
mov
jo
mov
les
xchg
rol
mov
das
movs
fidiv
inc
sbb
mov
xor
lahf
rcr
outs
icebp
pop
adc
cmp
fbstp
mov
jl
xor
jns
mov
aad
lods
in
adc
dec
push
cld
mov
outs
(bad)
(bad)
popa
fst
mov
dec
test
(bad)
repnz
mov
je
stos
adc
mov
jg
mov
add
xor
push
enter
mov
test
dec
call
imul
ror
pop
mov
mov
jb
bnd
adc
stos
push
jo
int3
adc
xor
adc
cmp
hlt
in
ja
mov
cmp
fadd
sbb
pop
xor
push
mov
dec
into
push
sahf
dec
xchg
pushf
jno
loopne
jnp
inc
pop
out
or
fisttp
icebp
jns
sbb
dec
mov
cmp
cs
loop
inc
push
jp
xlat
jecxz
adc
leave
sbb
fidivr
mov
nop
imul
jb
xlat
pop
lahf
mov
add
in
mov
cmp
sub
popa
cld
pop
cmps
sti
push
add
xor
fpatan
pop
or
add
fs
fist
js
ins
push
aaa
xor
xchg
js
xchg
add
stos
xchg
adc
scas
mov
jp
inc
test
cmp
dec
jnp
lock
push
cmp
repnz
iret
adc
gs
cdq
sbb
shr
inc
repnz
hlt
add
or
or
out
inc
retf
fidiv
jmp
(bad)
pop
jne
xor
xchg
xor
jge
sti
inc
adc
and
pop
enter
(bad)
sti
mov
push
pop
out
xlat
cdq
inc
mov
lods
dec
outs
push
mov
sub
dec
xchg
sar
lods
test
push
retf
xchg
sbb
sbb
std
jecxz
dec
imul
push
(bad)
fsub
fcom
push
xchg
sahf
loopne
sub
retf
les
cmp
jbe
jmp
sbb
push
sub
retf
imul
mov
imul
xlat
into
cld
push
or
mov
leave
shl
jge
dec
push
xchg
loopne
in
xchg
sub
push
es
inc
add
cmp
xchg
call
hlt
push
xor
das
add
iret
inc
push
mov
add
sub
mov
iret
dec
ficom
inc
push
clc
retf
iret
mov
xchg
jecxz
cdq
mov
xor
fidivr
arpl
ret
pop
pop
cmp
adc
and
in
gs
jge
(bad)
shr
hlt
push
sbb
aaa
cmps
rcr
adc
stos
scas
mov
cmp
jo
mov
inc
test
repnz
fmul
cmc
test
inc
or
das
das
pop
rcr
sub
inc
mov
pop
cmp
jns
repnz
pop
mov
pop
mov
xlat
cmp
jne
jo
pop
sub
jns
add
push
in
pusha
jno
push
and
adc
mov
push
scas
out
stos
(bad)
mov
and
lods
movs
jbe
(bad)
movs
std
lods
sub
repnz
fwait
lods
in
push
adc
movs
scas
mov
xor
lea
jno
mov
xchg
jb
mov
(bad)
jl
iret
cmps
je
(bad)
xchg
jno
sub
sbb
cmp
cmp
movs
jbe
sahf
in
(bad)
jmp
xchg
add
or
mov
adc
cwde
pop
inc
jmp
and
mov
call
push
jns
or
sub
es
mov
add
aam
inc
mov
(bad)
pushf
push
xor
adc
sub
rcr
add
push
and
xor
(bad)
jge
pop
fild
stos
rcl
enter
mov
mov
mov
or
das
mov
add
dec
rol
and
fld
scas
cmc
aaa
and
sbb
push
outs
add
jecxz
mov
es
pusha
or
fwait
clc
and
push
pop
inc
ins
mov
sub
adc
dec
xlat
sub
or
lock
gs
out
bound
xor
(bad)
ret
push
mov
pushf
in
ja
nop
sbb
push
push
xlat
jns
and
cmp
pop
add
and
sbb
mov
adc
xchg
or
cmp
sub
imul
or
repz
or
sbb
es
nop
jns
je
push
mov
cmp
mov
and
jae
sub
mov
(bad)
(bad)
cmc
pop
mov
push
jae
test
xchg
add
(bad)
cmc
out
xlat
(bad)
xchg
mov
mov
aas
push
lock
pop
xchg
xchg
loopne
mov
pop
sub
inc
std
dec
js
imul
loope
mov
sub
inc
js
mov
fistp
icebp
or
cdq
addr16
xchg
pop
or
outs
in
xchg
jp
fadd
xchg
jne
(bad)
(bad)
mov
out
out
cmp
shl
lahf
mov
jne
and
pusha
pop
inc
cmp
iret
cmps
mov
sahf
or
sub
pop
sbb
sbb
cmp
or
add
dec
xor
outs
dec
jne
test
xchg
dec
xchg
or
dec
ret
jb
and
sbb
xor
jae
inc
arpl
add
fistp
in
js
pop
inc
pop
mov
or
adc
xor
xor
jecxz
mov
int3
add
push
sub
xchg
xor
scas
push
dec
int3
repz
and
lods
jb
lods
out
xlat
cld
scas
inc
scas
adc
cwde
(bad)
push
jmp
push
cli
mov
rol
dec
repz
pop
iret
add
fcmovbe
es
xchg
frstor
mov
aam
cmp
mov
not
dec
push
fidivr
mov
pop
lock
je
inc
xlat
push
repz
xor
in
add
or
fistp
das
xor
test
add
mov
cld
retf
shl
(bad)
pop
aaa
outs
loopne
pop
loope
cmp
aad
push
mov
scas
inc
fs
aaa
adc
repnz
stos
popf
xchg
scas
stos
enter
jns
adc
imul
jbe
loop
arpl
fisttp
mov
sub
out
push
mov
(bad)
ins
push
cmp
stc
mov
xchg
push
data16
mov
add
test
cmp
int3
call
fnstenv
jg
mov
adc
in
jmp
pop
repnz
or
cmp
fidivr
jne
xor
ja
cmps
sbb
dec
(bad)
retf
lds
(bad)
pop
movs
add
imul
push
ficom
pop
jp
jbe
int3
mov
lods
and
jmp
mov
(bad)
fisub
xlat
ror
repnz
cmp
cmp
shr
stc
jge
mov
(bad)
(bad)
mov
inc
adc
jns
outs
sub
jl
mov
push
adc
scas
ja
test
mov
inc
pusha
popf
clc
dec
mov
in
mov
and
jge
inc
push
and
sar
sbb
(bad)
sbb
retf
dec
or
shr
xchg
or
sbb
pop
clc
mov
test
jl
xlat
cmp
pop
xor
test
iret
les
mov
lods
imul
pushw
push
xchg
invd
adc
pop
jecxz
(bad)
bnd
pop
dec
enter
mov
mov
xor
(bad)
stos
cmps
call
lods
add
and
cmp
imul
sbb
in
pop
cmp
add
jmp
aaa
pushf
bound
xlat
leave
mov
(bad)
jge
or
jp
hlt
add
jp
pop
aad
sub
jl
xor
pop
push
cwde
push
xchg
inc
push
sub
nop
(bad)
in
jp
xchg
stos
xor
mov
(bad)
cli
repz
adc
aad
sbb
sub
inc
push
mov
dec
inc
lock
xchg
and
xchg
movs
xor
not
aad
cmp
adc
das
inc
inc
xchg
lahf
pop
jae
dec
lods
(bad)
rol
adc
mov
jecxz
xchg
jmp
inc
imul
std
dec
mov
inc
push
xchg
call
push
cmp
(bad)
ret
or
(bad)
and
pushf
nop
adc
xchg
repnz
sub
rcr
out
outs
bound
test
mov
xchg
clc
loope
fs
loope
add
in
loop
dec
repnz
mov
push
ret
rcl
mov
lea
inc
adc
ror
adc
fdivr
xor
cwde
inc
lods
jecxz
(bad)
or
xchg
jp
sti
jbe
(bad)
cmp
mov
jmp
stos
dec
popf
sub
shl
mov
xor
shl
xchg
push
js
repnz
mov
jno
aas
imul
sub
idiv
mov
aam
stc
xlat
dec
test
inc
or
jle
mov
adc
adc
(bad)
(bad)
sti
shl
xor
xchg
pop
test
mov
outs
shl
push
add
cmc
fidivr
clc
mov
cmp
jo
jnp
outs
xor
cmp
mov
pop
push
adc
adc
int3
fdiv
mov
mov
pop
mov
(bad)
pop
push
movs
call
hlt
jmp
test
pop
ret
cwde
ins
sub
dec
push
mov
outs
or
and
ds
and
fisttp
cld
mov
movs
push
cdq
xlat
shr
sar
push
mov
aas
(bad)
jnp
pop
dec
jbe
stc
int3
mov
mov
adc
cmp
dec
dec
stos
inc
cmc
add
fscale
sbb
out
je
stc
dec
repnz
popa
retf
js
stc
jo
fdiv
pop
dec
into
scas
arpl
es
in
pop
hlt
in
neg
neg
clc
add
ja
sbb
dec
jae
mov
(bad)
jmp
sub
xor
xor
pop
sar
rcl
aaa
push
mov
push
cmp
ror
sub
and
mov
push
add
mov
cld
jns
add
popa
outs
cmp
fst
mov
imul
cmp
jl
stc
scas
mov
sub
push
pop
test
std
sti
iret
push
sbb
push
cld
mov
mov
mov
cmp
dec
sub
shr
jae
push
addr16
push
dec
xor
shl
mov
dec
cmp
jae
jp
mov
mov
jmp
mov
mov
sub
jbe
mov
adc
or
pop
dec
pop
add
jno
cmp
std
adc
jne
sub
mov
jp
fstp
cs
cmc
ds
in
jge
add
add
pop
jle
scas
fdiv
mov
cmps
loope
mov
add
out
loopne
xor
push
retf
(bad)
sbb
xchg
push
daa
jg
sbb
ds
(bad)
call
sahf
fwait
mov
and
or
mov
retf
les
call
sub
sbb
add
dec
(bad)
xor
inc
adc
sub
cmp
jae
dec
ins
fsub
sbb
test
sahf
test
aad
cmp
pop
rcr
stc
out
mov
aaa
dec
sub
in
ds
mov
es
call
adc
mov
xchg
(bad)
cdq
push
gs
dec
jae
mov
outs
mov
dec
sub
(bad)
lods
(bad)
pop
hlt
fs
sbb
and
(bad)
in
jl
loopne
iret
xchg
loop
test
test
repnz
dec
in
dec
cli
inc
mov
imul
xchg
cmps
dec
je
xor
ret
leave
dec
in
and
(bad)
sar
add
cmps
sub
or
and
int
arpl
inc
sbb
xchg
pop
pop
retf
push
mov
(bad)
pop
inc
rcr
xor
mov
fisttp
sar
test
cmp
addr16
mov
sub
cs
dec
pop
push
ins
mov
xchg
add
aas
xchg
jae
xor
cli
out
jp
sbb
pop
push
aam
and
adc
cmp
inc
out
pop
jmp
pop
movs
iret
loop
cmp
cmp
out
or
or
repnz
pop
xor
mov
jecxz
not
ret
push
call
jle
mov
popf
stc
bound
or
(bad)
into
(bad)
ror
jmp
aam
add
lds
and
mov
lods
xor
test
movs
dec
cdq
mov
cmp
rcr
or
mov
jle
fcomp
das
adc
push
inc
mov
inc
mov
(bad)
adc
push
mov
adc
retf
dec
xchg
add
fdivrp
mov
cmp
cmps
mov
xor
or
xchg
xchg
pop
jbe
push
jae
out
inc
jb
lea
movs
test
iret
sar
push
dec
aam
je
push
test
adc
xor
popa
(bad)
shr
xchg
test
stos
push
cmp
daa
(bad)
and
or
loope
add
mov
adc
int
movs
mov
mov
bound
jmp
cmp
xor
or
lock
test
(bad)
fwait
shl
pushf
es
shr
out
xchg
ror
hlt
xor
push
inc
adc
or
int3
mov
or
adc
add
movs
mov
(bad)
or
inc
sbb
not
cmc
mov
cwde
mov
jmp
ret
pop
xor
js
jno
fs
dec
sub
jno
adc
xchg
addr16
retf
cmps
push
not
pop
int
sti
test
das
loopne
(bad)
lds
and
neg
push
sbb
ins
mov
or
mov
sbb
lods
xor
cli
mov
add
pop
inc
test
pop
rcr
dec
xchg
inc
jbe
cmp
sbb
ret
mov
push
mov
cs
stos
stc
or
adc
rol
dec
ins
xor
cmp
arpl
rcl
pop
cdq
(bad)
fadd
fs
popa
loopne
xor
mov
dec
mov
or
mov
add
outs
imul
sahf
lock
and
push
shl
add
popf
mov
popa
stos
pop
pop
retf
mov
pushf
push
jno
pop
add
dec
fcom
shl
repz
add
sbb
dec
jl
sbb
jnp
imul
retf
fsubp
xlat
add
push
dec
ins
cmp
add
mul
(bad)
mov
repnz
int
mov
cdq
pop
cli
cmp
jge
out
and
mov
inc
cmps
xor
mov
in
adc
dec
pop
cmp
pop
mov
imul
mov
xchg
xchg
inc
and
xchg
mov
shr
call
pushf
or
pop
xchg
add
cmps
pop
stos
(bad)
mov
sbb
sar
xchg
inc
lock
imul
jmp
out
mov
aam
mov
adc
loopne
and
addr16
jo
pop
outs
sbb
movs
and
pop
mov
push
push
movs
test
call
jecxz
push
mov
and
nop
icebp
stc
mov
je
xor
xor
add
mov
mov
add
pop
fiadd
pop
mov
mov
adc
xor
xchg
or
adc
fiadd
out
dec
imul
xchg
retf
or
retf
mov
ret
or
fist
call
es
push
sub
test
push
fadd
jl
mov
add
and
shl
sbb
mov
mov
and
xchg
mov
mov
and
push
arpl
add
xor
lds
hlt
out
xchg
sahf
cmc
fucomi
mov
mov
jmp
jns
sahf
test
add
aaa
cmps
gs
fmul
fs
push
and
cmp
pop
call
sub
xchg
jp
frstor
sbb
xchg
in
xor
pop
push
xchg
(bad)
xlat
sbb
push
lods
mov
dec
movs
add
cmc
cmp
cmp
cmp
mov
repz
mov
mov
ins
jae
mov
adc
push
push
out
xchg
jnp
xchg
add
adc
enter
es
mov
cmps
lods
mov
(bad)
pop
aad
jg
sub
push
(bad)
mov
mov
cmp
cli
daa
addr16
mov
push
(bad)
fwait
push
sbb
enter
enter
adc
push
jb
in
int
(bad)
and
mov
ja
adc
add
outs
fsub
push
movs
ss
dec
xor
aas
mov
jo
les
fstsw
xchg
(bad)
in
rol
and
data16
and
sub
dec
shr
xor
sub
neg
add
test
and
std
push
and
inc
fmul
jp
sbb
mov
dec
cmp
inc
mov
adc
xor
mov
pop
retf
loop
outs
sub
mov
pop
loope
mov
scas
mov
loope
fistp
cli
pop
icebp
cwde
ja
pop
push
pop
mov
sbb
into
outs
into
cmp
mov
stos
xchg
add
scas
dec
loopne
imul
sbb
outs
in
pop
ret
inc
scas
fcom
cmp
push
xchg
sbb
cdq
cmp
push
not
xchg
rcl
test
jo
rcr
sub
sub
jmp
mov
sub
inc
(bad)
clc
sub
xchg
pushf
call
pusha
push
lods
mov
(bad)
outs
jae
cmps
dec
stos
xchg
push
adc
xor
or
bound
adc
lahf
inc
mov
(bad)
lock
cmc
sbb
cmp
xchg
pslld
(bad)
and
adc
stos
pop
nop
into
sbb
sub
fidiv
jbe
push
jge
test
dec
push
mov
or
pop
add
mov
popa
mov
xlat
or
loope
push
cmps
mov
ins
adc
test
outs
pop
sub
jge
push
inc
sbb
cli
(bad)
(bad)
xchg
mov
into
popa
jno
es
call
pop
mov
dec
icebp
pop
stos
sub
push
hlt
mov
add
(bad)
xor
nop
xchg
xchg
mov
je
xchg
ins
leave
and
nop
inc
sub
(bad)
mov
gs
mov
or
push
sub
adc
mul
dec
and
ret
mov
mov
repz
add
cmps
push
pop
or
test
in
sar
std
jl
or
xor
jle
cs
addr16
out
adc
ins
addr16
xchg
stos
push
or
adc
xchg
setle
lods
movs
mov
repz
push
popf
jle
xchg
dec
add
outs
push
mov
push
cmps
or
mov
lea
ins
test
cli
xor
or
clc
push
ss
call
lods
xchg
mov
in
jns
mov
sahf
(bad)
sub
addr16
(bad)
adc
fistp
lea
fsub
leave
aad
mov
stos
jp
pop
mov
sbb
leave
mov
js
xchg
jmp
fwait
ins
pop
(bad)
jg
js
and
popf
fist
mov
js
inc
retf
(bad)
jl
in
sbb
pop
push
jno
or
stc
xchg
cmp
ret
gs
push
mov
adc
and
outs
aam
xchg
out
mov
mov
add
add
icebp
(bad)
adc
ret
pop
push
ins
inc
ins
clc
jno
aas
loope
jmp
sub
mov
jo
in
movs
inc
xor
loopne
push
ret
stc
idiv
mov
sbb
jmp
shl
or
inc
pop
(bad)
dec
mov
xchg
scas
aam
sbb
out
mov
xchg
pop
aaa
cli
pop
add
into
in
mov
ins
xchg
adc
shr
call
ficomp
sub
mov
mov
mov
int
and
in
(bad)
dec
sbb
xor
xchg
sahf
jno
mov
imul
shr
leave
cld
inc
or
add
mov
lods
fldenv
imul
push
dec
lds
in
mov
ss
sub
sbb
mov
lds
cmps
retf
mov
cmp
shl
push
push
test
dec
fidiv
or
and
mov
shr
pop
mov
or
push
mov
fisttp
enter
pop
xchg
popa
(bad)
out
stos
in
mov
lock
jg
mov
movs
cmp
mov
vmptrst
retf
mov
mov
jmp
in
jp
mov
cmc
adc
xchg
xchg
jo
push
lods
adc
cli
adc
cmp
mov
mov
xlat
and
pop
in
push
cmp
push
icebp
xor
jno
push
ret
(bad)
leave
xchg
sti
sahf
mov
mov
mov
cmp
out
add
inc
fiadd
hlt
pop
push
inc
cmps
pop
pop
jae
jmp
xor
adc
adc
retf
shl
jmp
test
fsub
lahf
scas
jo
jns
outs
idiv
cmps
sbb
popa
stos
arpl
mov
mov
xchg
ins
and
cli
dec
add
jmp
xchg
je
xchg
push
or
xor
ins
jl
pop
int
xor
dec
add
mov
gs
cs
cli
or
jbe
jnp
dec
sbb
or
xchg
lahf
mov
lahf
dec
icebp
pop
mov
add
mov
arpl
mov
movs
fs
xchg
xchg
lods
pop
jae
frstor
sub
mov
popf
pop
xor
adc
xchg
scas
in
sub
out
pop
rol
xchg
pop
ror
mov
or
pop
out
std
ds
ds
(bad)
sbb
(bad)
fld
ret
jne
push
rol
in
or
loope
mov
ss
(bad)
mov
mov
inc
test
into
xor
fidiv
jmp
push
dec
ret
dec
test
xlat
push
jbe
push
mov
imul
jl
jge
aam
xchg
movs
add
test
xor
xor
dec
dec
inc
dec
les
add
pop
es
fcomi
icebp
enter
lock
mov
scas
int3
fidivr
sbb
rol
jnp
cmp
shl
imul
push
cld
fimul
js
cmc
in
mov
leave
loop
in
fistp
push
fcom
rcl
aaa
xor
dec
(bad)
push
mov
mov
push
xor
jno
lock
jmp
sub
ficomp
scas
cmp
mov
int
pop
adc
int3
xor
adc
pop
pushf
(bad)
jae
xchg
push
jmp
popa
push
push
sub
jg
xchg
cli
push
cs
lods
push
jg
dec
in
clc
and
arpl
mov
stc
mov
fsub
mov
jnp
enter
test
leave
cld
pop
xchg
jmp
mov
out
(bad)
xchg
push
xor
xlat
mov
pop
ror
shr
(bad)
sbb
push
sub
fidivr
mov
xchg
and
jae
ins
lds
xor
mov
call
sub
scas
shr
and
xchg
sub
adc
in
fwait
(bad)
xor
pop
into
js
movs
jmp
jo
in
xchg
popa
hlt
inc
cmp
gs
js
xchg
or
mov
jne
aaa
sti
or
scas
pop
push
push
xchg
nop/reserved
test
xor
pop
mov
sbb
arpl
in
and
jmp
ins
sub
(bad)
shl
outs
imul
retf
rol
fcomp
pop
(bad)
xchg
xor
std
cli
test
pusha
adc
aam
inc
movs
push
scas
add
mov
cmp
ins
fisubr
je
inc
inc
mov
fldln2
mov
jle
hlt
js
mov
nop
hlt
lahf
mov
jno
addr16
retf
mov
jg
les
jp
fcom
mov
push
adc
or
or
mov
dec
out
add
fisub
push
lea
xor
xchg
out
push
imul
lahf
mov
fstp
push
imul
push
movs
xor
cmps
cli
adc
cli
adc
sub
lods
or
jo
dec
or
xor
call
out
ins
scas
inc
dec
in
aaa
cmps
adc
adc
sub
and
lahf
rol
hlt
ins
fidivr
sti
mov
pop
stc
lock
in
jg
cmp
mov
dec
sbb
add
test
mov
fimul
mov
or
(bad)
loope
mov
or
inc
jns
call
xor
pop
or
xor
push
sahf
iret
or
int
repnz
test
movs
lahf
call
lods
cdq
mov
xchg
jmp
push
mul
call
lea
in
(bad)
sub
xlat
xchg
xor
adc
xor
pusha
dec
repz
cmp
cs
(bad)
sar
and
adc
in
mov
test
mov
out
enter
cmp
ret
leave
or
mov
ja
(bad)
out
movs
bound
jnp
outs
cdq
daa
mov
adc
inc
xor
(bad)
push
mov
inc
add
add
mov
out
or
mov
pop
loope
xchg
jl
outs
lea
fwait
stc
popa
push
repz
clc
dec
add
adc
jmp
stc
add
repz
mov
push
jnp
push
jge
icebp
add
ret
shl
add
mov
das
in
adc
les
(bad)
out
sub
sbb
test
jno
aas
mov
lds
mov
or
(bad)
mov
inc
mov
fbld
inc
cdq
xchg
hlt
pop
into
rol
loope
es
add
test
sub
adc
push
call
lods
sti
rcr
adc
dec
pop
(bad)
xor
std
xor
rol
mov
cmc
or
jnp
mov
cli
or
test
retf
push
loop
imul
rcr
fld
ret
sbb
(bad)
push
mov
add
repnz
sahf
push
sub
enter
sbb
les
lock
dec
cs
xchg
movs
pop
pop
cmc
pop
mul
sbb
add
xor
xchg
xchg
push
jmp
xlat
(bad)
aam
dec
jb
adc
sbb
outs
adc
fwait
inc
shl
scas
aam
(bad)
pop
pusha
xor
mov
scas
push
idiv
xor
jmp
cmp
aaa
push
(bad)
pushf
mov
xor
and
(bad)
fdivr
sbb
xchg
std
mov
cmp
mov
sar
push
aas
call
mov
fnop
jbe
in
pushf
cmp
mov
(bad)
rcl
push
movs
ret
pop
xlat
xchg
int3
and
ret
jno
lea
dec
pushf
jae
lds
cmp
xor
push
cmps
xchg
sbb
push
es
fnstenv
and
or
cmp
jns
jb
rcl
movs
mov
xor
aas
cmp
sub
les
std
movs
sub
cmps
mov
dec
add
loop
fs
cmp
les
call
cs
add
push
cmp
out
movs
xchg
in
xchg
shl
out
push
xor
jb
xchg
sbb
jge
aas
dec
ret
push
imul
loope
test
stos
adc
jnp
sub
je
enter
sbb
scas
adc
in
pop
xlat
jecxz
xchg
fsubr
and
mov
xchg
cmps
call
lds
daa
push
(bad)
das
popf
pop
xrstor
adc
mov
pop
inc
pop
inc
mov
or
mov
fsubp
mov
dec
sub
add
xor
sahf
retf
shl
jo
fadd
or
in
lods
or
stos
jae
fst
mov
retf
fmul
dec
sbb
outs
adc
fsubr
in
xchg
push
add
test
aad
outs
loope
cmps
nop
cmp
cmp
sub
mov
adc
fdivr
(bad)
and
and
shr
dec
jmp
scas
xchg
fwait
imul
and
pop
test
adc
dec
mov
adc
sub
in
pop
dec
pop
mov
mov
xchg
repnz
jge
sub
test
and
retf
mov
push
imul
cmps
dec
sbb
shr
and
pop
add
in
stc
test
jae
int
mov
lods
retf
rcl
push
ret
jbe
out
outs
test
mov
cmp
inc
das
jnp
stc
pop
inc
adc
cmc
bound
shr
xchg
jo
push
int
jmp
mov
repz
cld
fldcw
add
dec
loope
popf
sahf
sbb
xchg
in
in
jle
and
js
add
mov
fnsave
cmp
pop
iret
retf
and
fucom
cmp
movq
ds
stos
jo
push
sub
retf
popf
scas
lahf
jae
mov
add
cmp
(bad)
sti
push
aad
jge
xchg
add
push
xchg
sbb
repnz
cmp
cmc
inc
cdq
xchg
mov
test
xor
(bad)
push
mov
dec
mov
out
sub
ficom
(bad)
mov
lea
ret
inc
lahf
leave
mov
fmul
cdq
sahf
dec
or
jbe
push
jns
push
inc
retf
mov
arpl
inc
add
add
stc
jae
call
scas
(bad)
test
jp
or
xchg
imul
inc
hlt
mov
cmp
mov
das
adc
fmul
push
mov
pop
jo
stos
stos
cld
call
mov
mov
fdivr
mov
pop
xor
repnz
int3
scas
pop
(bad)
lock
icebp
gs
add
test
aaa
pop
lods
jmp
mov
les
movs
push
xor
les
and
pop
cmp
lods
pop
lahf
mov
popf
ss
aaa
loop
sar
js
add
imul
jg
(bad)
pushf
cdq
add
adc
and
sahf
cmp
mov
add
and
iret
cmp
xchg
mov
out
add
cmp
or
ret
pop
inc
and
jne
call
jle
sub
mov
repz
dec
test
call
lock
fidivr
adc
lock
icebp
loope
push
stos
inc
pop
repz
or
push
adc
imul
pop
ins
pop
mov
and
das
pop
aaa
mov
jl
mov
ficom
inc
mov
int3
mov
aam
inc
push
jo
xor
and
xor
leave
sahf
movs
and
hlt
jne
cdq
push
les
jbe
sti
jb
push
call
dec
jle
loope
int
adc
mov
add
pop
hlt
inc
and
fidivr
mov
out
scas
mov
mov
test
mov
mov
jo
pop
inc
jp
sub
pop
pop
add
lock
sahf
aas
bound
dec
out
mov
jp
retf
shl
aad
nop
pop
inc
retf
or
data16
jmp
jmp
(bad)
sbb
cmp
outs
mov
cwde
pop
and
jo
push
xor
jmp
pop
sub
dec
mov
aam
popa
inc
icebp
test
cmp
or
test
pop
mov
fst
mov
inc
xchg
mov
add
cmp
mov
fwait
mov
retf
out
mov
adc
test
dec
mov
out
mov
aas
sub
fadd
xlat
scas
pop
clc
ror
popa
ret
xchg
pop
jne
jg
cmp
mov
in
lea
sub
scas
xchg
sbb
enter
cmp
sbb
sbb
arpl
sti
adc
cli
mov
movs
jecxz
mov
movs
loopne
(bad)
fld
ins
mov
inc
xor
ins
lods
sub
ret
inc
jne
fdivr
adc
xchg
pusha
rcl
jge
mov
idiv
dec
xor
add
les
pushf
cmc
push
test
daa
add
scas
pusha
popf
test
jp
mov
add
pop
scas
lock
add
dec
push
cmc
push
test
sbb
jbe
sahf
call
movs
pop
push
jne
punpckhbw
fimul
mov
popa
cli
xlat
stos
outs
and
aam
idiv
ss
cwde
mov
retf
fstp
das
(bad)
in
or
and
stos
(bad)
jmp
inc
xor
jecxz
pop
mov
scas
jmp
popf
fild
sub
cli
daa
xor
mov
mov
shl
cmp
dec
arpl
popa
cmps
in
test
stos
cmps
shl
mov
in
sbb
nop
add
pop
addr16
ror
ficom
cmp
shl
popa
ins
xor
pop
pop
or
loop
jae
pop
daa
pop
ja
jl
pop
jle
shl
sub
dec
pop
xchg
popa
pusha
movs
jne
out
daa
jmp
(bad)
xchg
scas
mov
and
sub
inc
mov
sahf
rcl
and
sbb
sbb
jb
mov
inc
xchg
scas
add
pusha
mov
sbb
dec
aad
jns
daa
arpl
mov
dec
cmps
jno
ins
fcmovu
jns
inc
or
cwde
mov
and
cdq
mov
and
ficomp
mov
daa
not
and
push
test
adc
xor
sbb
inc
pop
jmp
xor
jnp
das
imul
loopne
mov
adc
fadd
add
inc
xor
xchg
call
mov
hlt
loopne
shl
imul
pop
(bad)
xchg
mov
popf
xchg
cdq
push
jns
int
adc
movs
nop
sar
clc
std
cmps
int
dec
inc
pop
loope
ins
cdq
inc
push
data16
cmp
mov
jp
(bad)
into
inc
cwde
ret
mov
add
mov
clc
add
arpl
adc
popa
retf
lock
mov
jo
inc
sub
or
push
shl
out
shr
movs
push
out
push
sub
scas
mov
repz
dec
or
and
jle
fmul
xchg
add
je
mov
gs
mov
cmps
fstp
xchg
push
mov
mov
push
stos
(bad)
jmp
movs
rol
push
fwait
add
add
add
adc
pusha
pop
push
cmp
mov
(bad)
xlat
add
lea
mov
sbb
jmp
popa
sbb
mov
pop
stc
cli
call
aad
cmp
mov
outs
sti
(bad)
mov
sbb
push
inc
cwde
in
(bad)
dec
outs
loop
sub
dec
shl
dec
sbb
add
adc
enter
mov
ds
inc
xchg
sahf
cmp
xchg
(bad)
push
fwait
ins
pop
gs
mov
fucomip
ret
push
pop
xor
mov
outs
cmp
mov
nop
add
xchg
dec
jmp
mov
xchg
movs
pop
jp
test
int
fcom
adc
fs
aam
in
ins
(bad)
dec
jecxz
es
mov
sbb
lock
rcl
lahf
dec
ret
js
test
or
out
retf
(bad)
mov
cs
mov
mov
fcomp
jo
jno
mov
dec
xchg
leave
mov
dec
sbb
xchg
jmp
call
push
xchg
or
sub
dec
fsin
xchg
mov
xor
aad
(bad)
bound
jle
pop
push
xchg
fisttp
jmp
xlat
mov
imul
out
mov
cmc
jge
ficomp
fdivrp
and
dec
pop
inc
outs
sub
push
sbb
imul
out
add
and
ror
aam
movs
hlt
mov
xor
loope
pop
dec
or
jmp
cmp
jno
inc
ror
and
(bad)
(bad)
and
cli
data16
mov
xchg
and
mov
movs
sbb
push
mov
movs
jmp
xchg
lahf
cdq
push
iret
das
or
mov
ret
leave
mov
retf
xor
cmc
cmp
mov
bound
push
push
or
or
in
adc
or
test
fcomp
int3
call
sub
in
pusha
jge
sub
lods
pop
dec
icebp
daa
stos
mov
cmps
repnz
add
ja
mov
sahf
xchg
sub
test
dec
cmps
test
mov
jmp
or
jbe
daa
enter
sbb
push
js
(bad)
jmp
or
call
fisttp
loopne
jo
fwait
mov
sub
jg
in
mov
out
xor
sbb
jg
mov
outs
icebp
rcl
and
std
jmp
or
je
aad
xor
retf
mov
jns
adc
mov
and
pop
lods
jns
imul
pop
sub
pop
ret
out
dec
sub
xchg
pop
sub
pop
or
scas
out
popf
xor
sbb
out
std
push
popa
cbw
mov
js
mov
pop
test
sbb
mov
dec
or
xchg
dec
mov
lods
xor
push
xchg
push
xor
xchg
inc
imul
dec
call
xchg
sbb
xchg
sti
mov
lock
js
les
cs
xchg
cld
dec
out
call
inc
or
iret
mov
cmp
or
cmp
loop
sbb
icebp
sub
inc
jle
dec
cmp
cmp
cmp
rcl
call
cmp
fldcw
ins
inc
mov
and
es
cli
(bad)
retf
jb
into
fs
lock
xor
sahf
inc
mov
iret
xchg
mov
adc
push
frstor
sbb
push
jae
xchg
aad
(bad)
sub
enter
cmps
data16
mov
popf
sbb
retf
inc
pushf
xchg
cmp
mov
cdq
push
xor
iret
jne
mov
dec
add
mov
in
cmp
jle
(bad)
jl
push
add
pop
popa
sbb
jmp
adc
aam
stos
mov
jo
push
sub
dec
xchg
(bad)
pop
mov
(bad)
and
or
(bad)
in
retf
psubw
or
mov
jb
mov
pop
in
scas
mov
mov
inc
and
mov
call
sub
inc
push
in
cwde
mov
jmp
adc
in
aad
sbb
les
mov
in
(bad)
das
fwait
outs
cmps
push
out
cmp
arpl
mov
sbb
gs
push
push
call
pop
xor
mov
in
stos
or
pop
(bad)
test
mov
jne
xlat
mov
hlt
fs
jns
mov
xor
leave
push
cmp
jmp
scas
add
pop
jns
cmp
mov
retf
call
out
cmp
mov
mov
mov
xor
mov
not
xor
adc
push
lahf
jp
stc
inc
cmp
cmp
jbe
mov
lock
xlat
daa
(bad)
call
fnsave
cmc
mov
leave
push
lahf
or
dec
or
and
and
les
mov
xor
fwait
cmp
xor
adc
cli
into
cmp
or
mov
jecxz
push
daa
(bad)
jge
sub
mov
test
ror
xchg
das
cwde
les
test
push
and
inc
out
mov
cwde
movs
mov
sub
mov
call
adc
je
(bad)
sbb
pop
scas
mov
ret
dec
jge
aad
add
jl
sub
fcom
and
mov
xchg
dec
jne
jmp
and
mov
std
rol
xor
es
inc
pop
cli
sub
adc
ins
sub
jnp
iret
scas
div
stos
or
lahf
dec
and
pop
jb
fwait
jo
ss
sub
xlat
or
(bad)
mov
push
stc
mov
and
dec
in
push
(bad)
xchg
enter
or
add
sbb
jp
mov
loop
push
push
cli
mov
xor
mov
and
jmp
mov
call
and
xlat
mov
je
pop
mov
scas
inc
iret
mov
pop
mov
sub
xchg
aaa
jecxz
inc
xor
add
mov
xor
aam
ss
pop
and
ror
pop
jmp
push
aas
jne
dec
retf
pop
xor
or
or
mov
and
pop
cld
dec
mov
mov
addr16
das
das
fs
xor
inc
gs
push
call
loope
nop
int
gs
rcr
stos
mov
dec
pop
xlat
jg
icebp
mov
xchg
pop
jge
test
inc
fadd
jge
adc
aad
pop
adc
inc
dec
int
xor
dec
test
add
pop
rcl
sbb
loope
das
movs
cmp
sub
mov
pop
fwait
stc
mov
cmp
cmps
out
out
dec
pop
or
adc
sbb
out
mov
in
cmp
imul
fsubr
jnp
arpl
mov
adc
pop
and
fwait
addr16
std
fs
jmp
into
add
movs
stc
xor
test
mov
pop
jmp
ret
loope
add
sub
frstor
mov
xor
imul
shr
cmp
xchg
xchg
pop
jb
mov
add
dec
sub
cmc
xor
sbb
mov
lods
jo
and
outs
(bad)
xchg
retf
mov
or
jns
repnz
cld
ret
sti
mov
dec
ss
ins
xor
test
sbb
xchg
daa
pop
push
cmp
loope
and
jns
ret
cmp
ds
dec
sahf
je
sub
or
cmps
cli
cld
and
fild
mov
(bad)
neg
inc
mov
fldenv
std
fiadd
ret
jmp
loop
shl
mov
jge
jge
push
pop
cmps
push
stos
inc
mov
add
xor
xchg
mov
cmc
mov
jmp
clc
mov
xchg
xor
outs
mov
je
in
xor
and
xor
ins
xchg
push
sub
push
mov
xchg
cmps
mov
mov
xchg
fwait
xchg
(bad)
stc
out
sahf
add
call
push
aaa
sub
dec
retf
jno
xor
fidivr
mov
inc
outs
add
xor
stos
jne
std
push
xchg
cmp
xchg
add
xor
sti
cs
movs
push
and
dec
and
cdq
cmc
or
sub
ins
sbb
adc
(bad)
fbstp
jmp
jle
adc
or
or
retf
mov
cmp
mov
loopne
pop
mov
push
jl
test
xor
inc
int
xchg
pop
hlt
dec
xor
and
mov
pop
addr16
icebp
add
enter
push
add
(bad)
jmp
js
mov
out
in
outs
out
lock
and
jns
outs
cld
and
das
mov
dec
jge
sahf
(bad)
cmp
outs
xchg
lods
and
out
std
into
int3
dec
xchg
retf
retf
ss
sbb
in
cmp
or
cmp
sub
cli
mov
ins
test
cmp
bound
jp
or
xchg
xor
sbb
mov
mov
int3
xchg
cmp
popf
and
iret
add
outs
lock
int3
sar
and
jmp
cmp
mov
xchg
test
push
scas
jl
or
cmp
imul
scas
test
push
jns
call
hlt
fimul
popf
mov
arpl
pop
xor
jmp
in
scas
fcmove
in
loope
outs
je
repnz
mov
pop
xchg
stos
(bad)
call
pop
push
push
fnstcw
sbb
or
or
mov
loopne
xchg
imul
jbe
jne
jg
lock
add
push
dec
mov
loop
dec
loopne
jle
xchg
jno
inc
dec
push
inc
or
fucomip
push
in
retf
mov
jmp
or
xor
rol
mov
imul
daa
(bad)
in
push
jb
outs
push
mov
mov
dec
sar
jne
call
stos
inc
int
ficom
mov
test
dec
jne
push
pop
sbb
dec
scas
scas
out
mov
mov
rcl
push
push
sbb
dec
pop
lods
sbb
les
je
aam
ret
in
mov
mov
mov
mov
inc
(bad)
(bad)
xor
iret
cs
sbb
fidiv
push
mov
popa
inc
aas
ja
mov
seto
add
mov
pop
mov
aas
mov
aam
jbe
sti
nop
test
ins
pop
ss
and
xor
fdiv
out
inc
pop
xchg
pushf
repz
push
mov
loop
test
fisttp
daa
cld
stos
fnstenv
out
aam
xchg
frstor
xchg
cmps
push
pop
add
mov
loop
iret
xor
scas
jecxz
daa
push
add
mov
jae
daa
(bad)
daa
or
addr16
xchg
xor
adc
sbb
lahf
inc
xchg
mov
push
cld
xchg
push
mov
es
ficom
ins
mov
repz
adc
sbb
pop
inc
sbb
xor
pop
push
or
loopne
xchg
mov
je
jbe
pop
dec
cmp
fnstenv
rol
rcl
sbb
retf
imul
jmp
mov
pop
mov
push
and
mov
xor
or
jp
lods
jmp
inc
scas
jl
adc
jle
mov
adc
fucom
jge
dec
movs
fbstp
call
xor
mul
cmps
call
dec
clc
inc
stos
mov
adc
add
loop
out
dec
outs
ret
adc
jp
call
into
cmp
(bad)
inc
test
stc
sbb
mov
xchg
loop
cmps
push
imul
les
xchg
lock
mov
cmp
mov
ror
mov
pop
pop
or
sub
xor
fnstenv
fdivr
push
lahf
fild
inc
test
xchg
int3
retf
loope
push
mov
pop
retf
cmp
jl
push
mov
inc
sub
inc
outs
jmp
fist
add
fldcw
add
jp
call
pop
xchg
clc
dec
xor
pop
jge
mov
add
repnz
mov
cmps
repz
or
aad
inc
movs
xor
xor
mov
ror
dec
frstor
rcl
dec
pop
call
test
dec
outs
clc
(bad)
stos
dec
xlat
shl
clc
test
scas
(bad)
mov
imul
fwait
xor
daa
xchg
sbb
sub
dec
xor
lea
fidiv
sar
stos
int3
jge
dec
(bad)
mul
or
mov
jns
mov
add
pop
xor
mov
sub
or
fbld
jae
into
movs
jmp
rep
cmc
sar
ins
mov
pop
in
cwde
(bad)
ss
(bad)
cdq
xlat
xchg
or
mov
in
mov
call
push
js
and
pop
mov
inc
push
xor
lods
repnz
dec
push
ret
add
inc
push
clc
lods
in
repnz
xchg
push
mov
cmp
nop
ret
lock
adc
mov
cli
aam
cmp
fwait
icebp
cmps
push
cmps
sub
dec
outs
xor
ret
sub
rcr
and
mov
push
pop
mov
xor
(bad)
push
or
xchg
fidivr
xor
xchg
mov
loope
add
aas
and
jo
fnstcw
cmp
push
sbb
or
lea
jne
dec
(bad)
int
sub
les
jmp
mov
mov
call
fs
iret
jno
dec
mov
mov
std
dec
in
jecxz
clc
fild
fwait
ins
or
ret
(bad)
repnz
and
ins
and
xor
cs
mov
out
inc
adc
retf
xor
fstp
sub
jo
repnz
pusha
cld
xor
scas
inc
cs
mov
xor
push
pop
cmp
(bad)
mov
int3
data16
jbe
ret
adc
ins
test
aas
xchg
xchg
cdq
je
popf
jae
or
xor
or
mov
dec
sub
std
lea
push
jnp
pusha
les
stc
mov
loope
dec
push
push
xchg
rep
push
push
outs
in
repz
mov
xor
fist
fwait
and
xchg
xchg
adc
cmp
add
pop
stc
loopne
in
call
bound
push
aad
mov
int
push
inc
lods
lahf
(bad)
pop
addr16
movs
outs
int3
jbe
xor
jmp
cmp
xor
sahf
pop
std
stos
retf
shl
js
cwde
adc
iret
cmp
or
mov
jae
mov
imul
sbb
cmp
push
jno
shl
sbb
jecxz
sbb
adc
repnz
mov
sahf
(bad)
xchg
add
xor
add
adc
inc
imul
cmp
arpl
add
out
jmp
test
dec
inc
mov
push
mov
ins
sub
movs
jbe
bound
fistp
xchg
xchg
cmp
add
in
push
cmp
cdq
nop
and
ret
push
inc
fld
out
imul
dec
mov
es
mov
movs
inc
ja
adc
in
and
add
sub
mov
mov
sbb
lds
popf
fcom
mov
je
mov
dec
stos
imul
pop
fnsave
dec
sbb
enter
fwait
stos
sub
fild
(bad)
sbb
mov
ror
dec
add
ins
bound
pushf
outs
pushf
loop
jno
movs
leave
xchg
stc
(bad)
lods
retf
cmc
scas
and
add
ds
pop
call
scas
inc
adc
jns
scas
imul
jmp
call
inc
add
mov
stos
add
lds
out
dec
pop
sub
jmp
rol
imul
jp
inc
outs
daa
push
pop
add
into
push
add
adc
push
mov
push
mov
jge
stos
mov
out
les
aaa
or
mov
xchg
xchg
pop
test
push
jmp
mov
mov
inc
(bad)
jmp
sbb
adc
ja
fsubr
pop
add
xor
enter
jge
mov
or
rcl
inc
mov
data16
adc
icebp
pop
mov
sub
fadd
pop
inc
jp
leave
arpl
bound
int3
adc
mov
xor
test
xor
sahf
cmp
cld
stos
mov
xchg
push
mov
mov
pop
push
in
mov
add
pop
xor
dec
int3
(bad)
shl
push
sub
fisub
inc
(bad)
push
daa
mov
scas
call
xor
dec
push
rcr
mov
scas
sub
xor
cli
fidiv
pop
xchg
push
or
pop
sub
arpl
sbb
add
adc
lock
test
stc
push
(bad)
or
jg
add
add
and
mov
(bad)
scas
jmp
pop
rcl
jbe
adc
mov
sub
cmp
cdq
jbe
mov
push
mov
jne
dec
hlt
das
sti
push
xchg
cmp
push
or
inc
test
in
(bad)
mov
dec
fild
xor
fnstsw
aam
cs
shl
inc
pusha
inc
push
test
mov
mov
std
add
mov
add
or
sub
dec
mov
xor
repz
jmp
das
push
repnz
ds
loope
int3
out
fld
stos
(bad)
loopne
mov
lea
fnstcw
pop
xchg
xlat
ins
mov
fisubr
push
xchg
out
(bad)
mov
dec
loop
jnp
sub
add
shr
push
fmul
mov
push
cmc
xchg
pop
pushf
sar
imul
mov
retf
inc
mov
enter
les
xchg
adc
mov
or
cmp
int3
xchg
inc
cmp
cdq
inc
push
jge
fldcw
mov
xchg
mov
(bad)
sahf
and
xor
repnz
xchg
das
jmp
je
ret
pop
pop
add
hlt
add
push
and
ds
enter
outs
movs
call
aad
(bad)
pop
js
or
cmp
mov
bound
test
sub
movs
jge
push
daa
mov
push
sbb
stos
and
inc
or
imul
xor
cli
jb
imul
or
into
jmp
aas
adc
push
lods
(bad)
push
jge
retf
push
out
sbb
fmul
adc
adc
and
iret
outs
dec
adc
ror
test
and
jecxz
and
sub
test
mov
imul
pop
lock
andps
jl
cmp
call
mov
test
nop
mov
mov
xor
popf
inc
mov
div
lods
js
stos
sub
scas
adc
mov
retf
cmps
xor
std
fsub
or
jnp
cmp
dec
bound
movs
repz
mov
iret
nop
in
stos
dec
sahf
cmc
xlat
add
ror
pop
inc
outs
loope
lds
cmps
cmp
or
scas
jle
int
adc
dec
or
pop
push
jmp
ret
scas
arpl
sbb
scas
pusha
xchg
sbb
(bad)
cmp
mov
push
stos
cmc
mov
(bad)
cli
fsub
pop
pop
push
addr16
pushf
mov
(bad)
ins
and
add
cmp
fidiv
int3
push
shl
xchg
jo
daa
pusha
jb
and
jg
xchg
cmps
or
jmp
scas
pop
popf
neg
aaa
jne
fstp
jle
pop
fadd
push
mov
xor
or
mov
mov
call
and
sbb
stc
cmp
cmp
jo
jp
jmp
lods
and
cmp
sbb
nop
adc
aam
ds
jo
out
mov
rcl
cmp
mov
int3
add
mov
inc
xchg
or
or
mov
mov
mov
push
mov
pushf
imul
xor
adc
add
leave
jmp
or
pushf
rcr
shl
mov
fsubr
das
jle
pusha
int3
adc
sub
cli
fbld
jmp
push
ror
scas
lock
jmp
dec
xchg
adc
or
pop
and
(bad)
sub
mov
xor
lds
nop
clc
xor
das
dec
dec
ss
in
push
mov
imul
loopne
xchg
frstor
icebp
pop
xchg
push
loop
jecxz
cmps
in
xlat
in
mov
lock
xchg
(bad)
nop
imul
mov
scas
ins
jp
(bad)
adc
pop
dec
mov
jns
rcl
pop
sbb
leave
fptan
in
pusha
xchg
icebp
lods
sbb
ja
push
ja
push
push
call
sbb
cmps
pop
or
push
mov
int3
bsf
pushf
mov
push
ficomp
aam
mov
cld
and
sbb
fidiv
xchg
mov
and
(bad)
icebp
or
or
jmp
mov
sub
pusha
movs
cmp
daa
jle
mov
sbb
mov
dec
xchg
jecxz
sti
dec
stc
mov
inc
out
or
xor
cld
jne
push
iret
dec
mov
(bad)
adc
cmc
xor
or
(bad)
adc
xchg
mov
outs
pop
hlt
xlat
sar
mov
mov
xchg
fwait
jmp
arpl
outs
push
leave
dec
mov
pop
jb
jb
mov
sbb
cmp
jb
pop
inc
jmp
pop
ret
add
pushf
and
pop
pop
daa
shl
movs
mov
lea
test
lea
fidivr
aaa
pushf
fld
es
cmc
or
hlt
out
cld
pop
mov
cwde
sahf
shr
jb
imul
dec
cld
dec
fs
cmps
mov
mov
xor
rol
js
push
add
aad
jg
aam
je
add
scas
xor
adc
cld
scas
ret
sub
hlt
in
retf
popf
je
fs
clc
mov
pushf
leave
dec
aas
out
aad
push
test
bound
addr16
jle
imul
adc
loop
dec
in
ins
shr
gs
das
ins
in
mov
inc
inc
ins
push
dec
ins
sbb
pop
dec
mov
xor
repz
xor
mov
sar
xchg
jge
jnp
push
push
xchg
fstp
and
cli
mov
sar
pop
jns
pop
call
jmp
fld
iret
pop
out
push
jmp
retf
push
sbb
add
dec
cmps
repz
stc
dec
mov
fcomp
pop
push
jp
test
dec
mov
fs
push
dec
adc
outs
push
sbb
mov
sbb
in
push
dec
cmp
arpl
sub
jge
popf
imul
cld
push
and
mov
jg
dec
pop
and
adc
shl
and
leave
xlat
lea
fidivr
push
outs
jbe
adc
ins
test
mul
mov
cmp
sub
mov
cmp
mov
dec
mov
and
(bad)
and
call
push
and
scas
dec
fldcw
mov
dec
retf
movs
int3
mov
loopne
push
sbb
loope
test
sub
ret
jmp
push
loopne
lahf
mov
cmp
sub
and
pop
push
cmp
jnp
fsub
inc
pop
retf
jae
outs
sbb
(bad)
and
push
cmp
jb
lods
(bad)
mov
nop
xor
hlt
loopne
(bad)
or
das
mov
dec
xchg
jp
sbb
mov
pop
mov
cmp
shl
inc
ret
(bad)
push
push
xchg
push
push
sbb
sub
mov
sub
rol
je
shl
(bad)
sbb
pop
sub
and
fwait
ss
daa
xchg
rol
jecxz
adc
imul
lock
push
movs
and
bound
pop
adc
cmps
pop
add
arpl
cwde
test
dec
push
dec
aam
rcr
test
dec
jo
inc
call
dec
mov
xor
cli
add
call
std
lods
pop
jae
mov
push
stos
mov
call
jbe
cmps
popf
pop
cmp
les
ins
repnz
mov
mov
cld
add
into
int3
shl
jl
in
(bad)
adc
mov
std
fwait
cvtps2pd
pop
stos
hlt
je
dec
sub
out
mov
rcl
cli
inc
jl
push
inc
in
push
jl
jmp
popa
mov
xchg
add
js
xchg
adc
jle
cdq
or
mov
js
inc
into
and
fsubr
pop
outs
fdivr
dec
push
enter
mov
and
cld
fwait
mov
or
mov
leave
adc
(bad)
or
pop
and
les
or
adc
popa
sub
adc
es
mov
enter
ds
test
dec
mov
xchg
pop
jno
lock
fnstenv
and
pop
mov
jle
push
imul
pop
and
push
jmp
jb
ror
aaa
rcr
or
ret
xchg
adc
and
retf
xor
sar
hlt
and
mov
rcr
mov
dec
add
xor
or
in
add
fcomip
mov
jbe
jnp
mov
and
sub
jmp
scas
dec
sub
and
or
in
ins
push
out
cdq
push
inc
mov
sbb
call
(bad)
test
sub
lahf
push
into
cwde
pinsrw
ss
adc
loopne
(bad)
test
xchg
mov
leave
inc
cmp
std
cli
cmps
cmp
int3
test
arpl
push
cmp
ss
adc
mov
icebp
xchg
loop
sub
in
mov
adc
and
retf
out
jle
mov
xor
addr16
mov
ror
lds
nop
in
mov
gs
div
adc
xor
xor
out
fild
movs
cmp
cmp
ficom
cmp
add
scas
xchg
push
ret
cmps
dec
xchg
out
imul
das
jne
or
push
cmp
mov
mov
pop
add
pop
in
xor
sub
mov
mov
pop
mov
mov
sbb
push
add
jo
stc
test
xchg
inc
cmp
test
not
cli
loop
ja
aas
mov
jnp
out
or
repz
and
das
popf
and
ja
iret
or
in
mov
push
sbb
imul
inc
mov
daa
(bad)
jmp
xchg
sub
ret
cmp
mov
push
ja
stc
lock
or
into
xor
scas
imul
rcr
sahf
clc
inc
jg
xor
setae
add
(bad)
xchg
add
xor
aaa
in
scas
loop
mov
lea
enter
aam
jae
push
hlt
movs
or
leave
mov
dec
test
xor
mov
movlps
fwait
dec
mov
push
pop
mov
lods
xchg
out
xchg
loope
mov
add
xchg
and
js
enter
ins
xor
jnp
inc
sub
cmp
sbb
in
jp
push
mov
cli
sub
out
push
push
dec
in
lock
jb
fucomip
jp
(bad)
xchg
popf
xchg
mov
pop
hlt
and
outs
xor
lahf
shl
pop
das
jne
rcl
jg
pop
(bad)
adc
inc
sahf
push
sar
cmp
in
push
retf
mov
pop
mov
stos
pop
cli
inc
pop
pop
push
aas
xchg
xor
hlt
les
pop
lods
adc
jmp
mov
or
lahf
jmp
sub
clc
lods
fs
int3
adc
int3
mov
sbb
dec
loope
mov
cmp
inc
add
int
repnz
(bad)
leave
push
lock
or
jg
cmp
pop
nop
push
prefetch
pop
inc
mov
cmps
and
sbb
add
xchg
sbb
add
lods
add
adc
cwde
imul
xor
lods
add
jg
push
sbb
lods
mov
sub
add
aas
mov
sbb
adc
mov
mov
jno
xor
add
retf
ds
sti
sub
ss
and
int
mov
out
pop
push
mov
pop
and
push
out
mov
dec
mov
shl
pop
mov
fcom
xor
in
out
pop
jae
inc
(bad)
in
je
jecxz
popa
sub
jae
cli
sbb
in
mov
fdiv
clc
test
out
cwde
add
push
sar
bound
aas
inc
jnp
sbb
hlt
shr
cmps
jo
pusha
ins
xchg
into
fild
fist
add
ins
inc
test
sbb
adc
push
pop
pop
mov
fsubr
lock
fbstp
sbb
stc
pop
adc
aam
clc
or
lds
retf
lds
gs
push
mov
jne
stos
ds
mov
cmp
pop
push
add
jno
lea
shl
(bad)
retf
push
pop
jp
stos
mov
sti
or
add
add
inc
leave
or
inc
in
cmps
xchg
ds
psubw
or
mov
in
inc
bound
inc
inc
and
bound
ins
mov
mov
out
lahf
pusha
mov
movs
aas
or
in
inc
mov
ret
inc
je
dec
cdq
call
adc
push
int
and
xor
mov
mov
cmp
push
mov
ret
cmp
pop
int
rol
outs
jmp
mov
mov
ins
push
adc
jbe
std
or
gs
dec
adc
ss
pop
pusha
adc
loop
in
cwde
mov
popa
inc
push
test
or
adc
inc
dec
push
icebp
daa
scas
xlat
repnz
and
xor
inc
dec
push
das
in
mov
inc
adc
imul
push
in
or
js
js
dec
mov
shl
fdiv
push
stos
mov
stos
mov
mov
jns
push
clc
fadd
or
xchg
cmc
sbb
ret
out
rcl
xchg
dec
loope
in
xchg
dec
scas
mov
stos
test
cmc
les
in
sub
ror
cmc
aad
daa
jbe
ins
adc
push
jae
xchg
mov
mov
add
adc
mov
popf
loopne
mov
push
cwde
add
push
ret
inc
sbb
jnp
jg
jo
inc
pop
xchg
xchg
shl
ss
daa
or
ds
pop
sbb
std
mov
shl
fidiv
sbb
ss
jne
(bad)
outs
jp
mov
data16
xor
ss
and
push
add
fwait
xor
aad
fisubr
jo
leave
pop
stc
shl
add
pop
pop
or
push
pop
jl
fisttp
in
imul
cs
inc
lods
mov
out
mov
add
mov
mov
or
cmps
jnp
dec
adc
pushf
test
dec
arpl
aaa
adc
dec
ins
pop
mov
call
jp
(bad)
fsub
xchg
jbe
stc
mov
outs
js
mov
int
fcomp
popf
sahf
fwait
loope
(bad)
cmc
cmp
scas
stc
nop
cs
push
jp
jle
cdq
jnp
enter
xchg
arpl
imul
add
sbb
cld
xor
ds
pop
pop
sbb
push
sbb
dec
and
push
xor
out
inc
dec
cmp
xchg
iret
xor
imul
ja
pop
bound
fwait
fwait
push
js
iret
mov
clc
fidivr
xor
push
stos
and
or
adc
std
in
pop
jbe
jo
mov
add
inc
arpl
mov
lods
fidiv
mov
(bad)
les
lahf
mov
shr
in
mov
nop
push
loopne
jb
je
xor
mov
inc
and
jmp
nop
pop
sbb
or
(bad)
mov
xchg
mov
or
dec
imul
or
aam
xor
iret
test
sbb
(bad)
shl
into
into
dec
out
outs
stos
cmp
inc
xchg
adc
jo
xchg
inc
int3
daa
xchg
popf
aam
mov
(bad)
adc
xor
in
call
push
(bad)
push
add
das
ror
and
push
xchg
fdiv
sbb
add
jns
mov
inc
fwait
mov
adc
(bad)
into
push
test
movs
jbe
jl
scas
out
push
push
mov
pop
jns
jmp
lea
or
sub
lods
push
jmp
push
jbe
loope
arpl
cmp
outs
mov
call
inc
inc
imul
pusha
(bad)
fnstsw
aaa
mov
paddsb
nop
adc
inc
xchg
cmps
js
push
(bad)
fwait
xchg
sub
add
fdivr
hlt
(bad)
cmp
adc
jmp
ret
sbb
adc
fcmovne
(bad)
(bad)
inc
ds
aas
hlt
adc
mov
cdq
pop
js
daa
retf
scas
(bad)
or
call
mov
mov
push
pop
(bad)
and
push
lea
push
fisubr
out
mov
mov
jne
cmp
cs
inc
mov
push
ror
mov
imul
adc
inc
adc
ret
fdiv
mov
jae
push
cld
pushf
or
sbb
outs
pop
and
aaa
test
sahf
adc
aad
or
dec
cli
aam
or
icebp
dec
dec
jne
add
pop
dec
cmp
xor
jge
in
jmp
imul
les
enter
pop
xor
jnp
sub
push
retf
pop
jae
ins
(bad)
(bad)
fwait
cli
cmp
les
and
inc
es
pop
push
xchg
inc
sbb
dec
std
int
out
cmc
es
pop
add
fisubr
lahf
ja
fcmovnu
idiv
xor
rol
jo
outs
in
pop
out
mov
xor
bound
or
test
sbb
jo
js
imul
stos
jo
jp
int3
mov
mov
lock
xor
jg
sahf
xchg
(bad)
outs
mov
stos
jno
movs
test
psubsb
add
jne
cli
lds
arpl
fwait
dec
int
cmovne
cmp
jno
movs
pop
leave
in
ret
(bad)
stos
imul
push
imul
loop
movs
cdq
xchg
and
mov
or
int3
leave
or
jbe
fmul
pop
mov
jnp
or
rol
or
and
rcr
outs
(bad)
adc
xchg
in
mov
test
shl
and
pusha
imul
or
ficomp
je
loope
clc
jno
xor
stos
popf
add
out
aas
es
cmps
pop
hlt
jb
mov
sbb
addr16
shr
cmp
and
mov
mov
push
movs
xchg
inc
mov
loope
dec
test
pop
xor
ja
rol
dec
mov
(bad)
pop
inc
jnp
sahf
mov
adc
and
outs
cmc
fstp
ret
xor
enter
jo
sbb
mov
dec
enter
jb
cmp
mov
cmp
push
scas
jo
loopne
dec
ret
xor
out
inc
pop
ss
inc
inc
push
adc
push
fistp
aas
mov
sysexit
out
aam
shl
mov
jp
mov
int
jg
jmp
cmp
dec
cmp
gs
pushf
and
sbb
ret
pop
push
popf
cmp
out
jl
sub
shr
mov
loope
sub
pop
jecxz
sbb
mov
and
inc
dec
jecxz
into
into
loopne
or
repz
scas
sub
cwde
push
in
jae
push
or
fisttp
in
ret
and
mov
jle
sahf
and
call
lds
and
mov
fnstsw
xor
dec
mov
jmp
pop
pushf
mov
or
mov
outs
scas
xor
dec
push
inc
test
mov
add
movs
mul
(bad)
stos
sbb
push
adc
jb
icebp
add
fnsave
fnstsw
push
mov
idiv
jno
adc
outs
sub
repz
xchg
mov
sub
add
mov
fwait
mov
(bad)
rol
(bad)
add
ret
leave
and
gs
sahf
xchg
add
inc
push
jecxz
popa
jnp
adc
scas
mov
inc
icebp
mov
sar
test
jge
leave
lea
inc
mov
outs
movs
add
inc
and
dec
lahf
or
xchg
adc
inc
jno
loope
cmc
repnz
xchg
out
stc
xor
sbb
lea
cmps
imul
or
fs
push
adc
push
pop
jl
fistp
jae
fwait
mov
lahf
rol
je
es
aas
and
rol
sbb
dec
add
rol
xor
jp
and
or
dec
pop
and
repz
or
or
sub
inc
and
es
lea
ins
push
dec
pop
jg
lahf
mov
ins
cwde
push
ror
lahf
push
xor
les
sub
xor
ss
leave
lods
push
cmp
popa
rol
int3
je
inc
loope
jbe
cmc
dec
mov
pop
sub
dec
movs
or
or
jmp
add
popa
(bad)
and
iret
lds
jmp
inc
repz
rcr
das
push
test
pop
pop
int
mov
retf
xor
mov
leave
add
and
dec
aaa
push
js
daa
jge
push
sbb
sbb
clc
scas
(bad)
ficom
loope
inc
inc
aam
or
dec
sti
add
loope
test
push
cmp
scas
cmps
jbe
loopne
xchg
dec
test
adc
imul
push
add
and
movs
call
ins
dec
rol
in
rcl
xor
adc
daa
in
ins
std
pop
test
sub
xor
pusha
mov
xor
sbb
enter
dec
js
cmp
inc
bound
shr
and
mov
call
mov
pop
(bad)
mov
xchg
dec
pop
repz
adc
icebp
mov
rsm
dec
xor
push
shl
jmp
ja
fs
mov
lds
pop
xrelease
repnz
sbb
aad
int3
lock
xor
ret
push
xchg
aad
mov
xlat
loope
sbb
sar
xchg
jnp
popa
push
add
dec
ret
pop
pop
jbe
push
cdq
mov
jmp
js
jmp
or
jns
js
out
ret
xor
pop
push
(bad)
std
into
dec
lock
in
xor
push
push
cld
sbb
push
and
lahf
jns
push
scas
out
ror
xchg
pop
or
rcl
in
dec
add
push
lds
mov
mov
mov
sahf
out
cmc
cmp
mov
repnz
lahf
cwde
sub
push
mov
dec
popa
jmp
cmp
push
mov
test
sub
test
jge
repnz
xor
lahf
jecxz
fst
les
daa
xor
inc
clc
es
fcmovne
or
xor
arpl
mov
and
push
jo
loope
mov
sbb
or
sub
mov
je
ins
mov
in
mov
arpl
data16
pop
xchg
arpl
sub
inc
mov
xor
cdq
nop
push
aaa
adc
out
scas
jno
push
scas
dec
test
pop
xchg
cmps
push
cli
imul
pop
in
bound
jb
lock
push
mov
sbb
fdiv
bound
mov
outs
ret
pop
and
mov
push
sub
add
iret
or
xor
xor
cmp
sub
sti
inc
dec
dec
sar
and
or
push
lods
stos
outs
add
movs
rcr
or
nop
mov
rcl
nop
scas
jns
push
bound
or
mov
pop
stos
sti
fcmovu
jl
pop
dec
sub
adc
retf
mov
repnz
pop
xchg
xchg
jl
adc
shl
arpl
xor
fcom
cmp
loopne
xor
add
icebp
add
sahf
xor
(bad)
fadd
xchg
fisttp
and
push
mov
(bad)
adc
adc
ret
lods
ins
sbb
popa
in
add
push
jne
nop
sbb
cmp
adc
jecxz
and
adc
inc
push
adc
repz
jmp
loope
push
and
adc
or
adc
xor
rcl
mov
imul
inc
data16
push
push
or
sub
xchg
or
dec
xchg
pop
cmps
jne
jne
sbb
jmp
mov
loopne
pushf
sub
dec
mov
mov
sbb
pop
pop
cld
pop
xor
mov
(bad)
aaa
out
pushf
inc
sbb
mov
call
cmp
cmc
test
ja
cmc
scas
push
int
jno
aam
inc
call
pop
add
inc
ret
(bad)
inc
mov
fcom
fisub
add
inc
sbb
ret
lds
fwait
ins
add
or
jmp
or
xor
lds
cmps
imul
inc
sub
in
xor
imul
test
mov
in
jecxz
xor
jmp
mov
cmp
ds
mov
shr
adc
push
addr16
ds
popa
popa
xchg
in
fs
push
inc
cmp
mov
jecxz
jmp
mov
popf
add
les
sti
icebp
ja
cmp
stos
jbe
sub
mov
or
dec
inc
xchg
dec
adc
sub
mov
xchg
push
mov
cmps
movs
push
or
stc
lock
popf
test
ja
in
jp
pop
cmp
add
mov
jnp
xor
mov
or
test
push
test
add
int
pop
mov
cmps
mov
(bad)
imul
jno
add
inc
jne
movs
jb
sbb
movs
(bad)
add
das
ret
mov
inc
mov
or
jo
mov
pop
jge
(bad)
bnd
pop
out
mov
std
mov
and
daa
mov
jg
pop
xchg
cmp
jmp
lods
or
pop
mov
sub
test
fisttp
push
mov
sub
sub
push
mov
and
dec
bound
pop
and
jmp
fild
sub
pop
xor
jle
imul
js
repz
iret
scas
pop
inc
add
fild
jecxz
cld
test
les
xor
mov
imul
pop
cmp
or
cs
push
iret
sar
push
pop
sbb
or
mov
jne
xchg
adc
mov
and
mov
imul
pop
in
xchg
xchg
adc
push
push
mov
cmp
idiv
jb
xor
lock
jmp
add
in
cdq
cmp
sub
dec
loope
cs
jo
cmps
jne
enter
fs
jns
fisubr
cmps
in
aas
aad
repnz
dec
or
ret
add
push
xor
adc
(bad)
cmp
jne
shr
add
adc
xchg
fisttp
ret
sbb
je
into
dec
into
pop
iret
sbb
jg
(bad)
rcr
(bad)
out
outs
iret
sbb
inc
add
inc
lods
mov
jno
mov
(bad)
adc
into
addr16
dec
sub
stos
adc
cli
mov
bound
int3
cld
shl
cli
(bad)
push
pushf
xor
push
jge
pop
inc
shl
jle
stos
es
push
add
push
popf
fcom
gs
ja
xlat
je
jbe
mov
push
rcl
pop
aad
mov
push
adc
or
repnz
aas
mov
ret
adc
imul
bound
movs
fs
cli
xor
sub
mov
inc
outs
xor
add
test
sahf
jne
(bad)
mov
and
movd
clc
dec
dec
stos
imul
dec
das
and
cs
arpl
add
inc
dec
jns
cdq
test
(bad)
xchg
inc
icebp
xchg
jp
ret
push
dec
shr
sahf
or
test
push
loopne
(bad)
pop
push
inc
mov
stos
mov
cmp
jl
lods
add
loope
das
shl
(bad)
cwde
pop
mov
pop
test
in
cmp
jnp
or
adc
mov
out
jbe
scas
and
xor
out
fstp
rol
out
leave
and
movs
into
xchg
xor
jg
inc
icebp
add
or
inc
cmps
add
fwait
xor
lock
out
arpl
push
jnp
neg
adc
das
xchg
jecxz
imul
inc
cs
push
add
movs
int
retf
outs
jne
imul
pop
push
stos
xor
pop
pop
bound
jg
lahf
sbb
rol
call
rcr
(bad)
push
pop
loope
push
nop
movs
mov
cmp
lods
pop
inc
mov
adc
mov
out
push
stos
scas
or
mov
(bad)
cli
jns
jae
(bad)
test
pop
mov
sub
mov
jo
pop
dec
mov
out
sbb
jno
mov
push
xor
xor
imul
mov
pop
icebp
test
or
dec
and
add
fld
jb
pop
push
pushf
(bad)
ficom
xor
jg
cmp
or
and
daa
retf
push
push
or
hlt
aam
mov
xchg
adc
jno
add
stc
rol
movs
out
(bad)
dec
lea
add
xor
xchg
jp
and
cli
jb
fimul
mov
or
pusha
data16
pusha
iret
push
add
xchg
call
adc
push
pop
into
mov
mul
xchg
out
inc
xlat
test
pop
movs
(bad)
out
stos
call
xor
out
cmovns
jnp
sbb
adc
(bad)
ss
sub
jnp
lock
popf
xlat
fucomp
cli
je
xor
pusha
xchg
xchg
mov
dec
dec
xor
jno
and
cmc
cld
mov
pop
inc
adc
sbb
xchg
and
mov
std
xor
sbb
mov
or
in
data16
lock
and
imul
mov
mov
mov
adc
pop
jno
cmp
outs
call
fs
sub
mov
ficom
jo
cmp
aaa
jnp
loopne
or
adc
inc
mov
mov
cld
cld
mov
jno
fstp
cwde
cmp
repnz
daa
fs
ficomp
int3
mov
rcr
adc
sub
loop
xchg
xchg
movs
mov
inc
rcr
push
leave
js
push
test
sbb
jns
test
repnz
inc
je
jge
fisttp
pusha
sbb
test
sub
leave
mov
pusha
outs
jbe
mov
sbb
jns
jns
xchg
fsub
xor
add
mov
ret
pop
loop
mov
ret
daa
and
push
imul
mov
mov
mov
into
in
and
das
add
loopne
add
es
imul
outs
xchg
sar
in
cwde
jg
push
rol
pop
dec
or
dec
les
dec
(bad)
mov
inc
iret
gs
jmp
xchg
mov
mov
or
dec
scas
mov
xor
xor
mov
(bad)
clc
cmc
test
mov
popa
jecxz
add
push
mov
scas
fimul
mov
inc
jg
inc
ss
repz
jecxz
mov
jo
add
(bad)
jmp
xor
add
jo
or
sahf
sub
pop
sbb
jb
idiv
cmps
pop
xchg
(bad)
fimul
inc
sub
inc
cmp
mov
adc
imul
sub
jecxz
clc
in
xchg
mov
outs
loopne
push
cld
or
and
add
int3
sub
pop
clc
inc
jbe
push
xchg
mov
mov
mov
test
movs
cmps
push
movs
call
push
adc
test
pop
adc
sahf
leave
add
push
retf
push
jmp
jmp
(bad)
cmp
out
lods
pop
push
jns
push
lahf
push
dec
xor
pop
out
mov
dec
fs
stos
adc
mov
and
dec
jp
(bad)
cmp
std
and
pusha
mov
sub
(bad)
cmc
dec
inc
add
or
mov
fisttp
ja
xchg
mov
push
or
repz
scas
rcr
ins
(bad)
les
lds
sti
ja
jge
stc
add
sub
in
movs
ds
add
mov
or
sub
cli
push
scas
sbb
push
mov
jge
cs
(bad)
ins
repnz
xchg
sub
push
xchg
popf
xor
(bad)
mov
imul
clc
inc
ret
mov
jae
add
xor
int3
add
mov
xor
inc
daa
repz
jl
popa
popa
mov
rol
xor
in
sub
jae
inc
xchg
cli
mov
add
push
jp
cmp
mov
push
mov
mov
arpl
dec
call
inc
adc
dec
xchg
xor
fwait
dec
dec
in
jb
adc
out
test
loopne
sub
xor
fst
cld
inc
xor
sbb
push
lea
sub
lea
movs
movs
xchg
push
jg
fwait
aad
add
pop
fild
fild
nop
or
iret
ja
add
outs
div
sbb
mov
push
xchg
test
mov
pop
add
inc
das
inc
sub
leave
fcom
add
add
clc
jnp
sub
inc
cld
sub
mov
dec
test
(bad)
ret
and
call
js
rol
lods
ins
and
repz
enter
inc
dec
hlt
test
fcmovbe
xchg
push
sub
mov
cli
lahf
dec
mov
dec
pop
test
sub
and
inc
mov
mov
cs
and
fnstenv
push
add
and
stos
dec
sub
adc
jmp
jg
(bad)
icebp
sahf
xor
mov
dec
aaa
mov
jmp
pop
cmps
inc
push
sbb
pop
inc
push
mov
mov
mov
or
push
not
inc
call
ja
jl
xor
push
ficomp
dec
push
push
pop
fdiv
sub
push
inc
repnz
inc
mov
out
pop
sbb
dec
cmp
es
xor
push
dec
lahf
sbb
fisubr
pop
sahf
repnz
fsubr
dec
and
jb
enter
jbe
imul
sub
cmps
scas
jns
lock
mov
adc
cmp
loopne
mov
add
and
mov
imul
nop
fsubr
adc
mov
daa
cmp
mov
inc
add
push
inc
jmp
jl
jns
retf
std
xor
icebp
xchg
adc
xchg
inc
lods
sbb
mov
mov
jp
and
cmp
js
outs
sub
inc
sub
and
repnz
sub
(bad)
(bad)
push
movs
repz
and
in
push
push
sub
ins
out
loope
inc
inc
in
call
scas
and
adc
movs
mov
inc
cmp
adc
jle
pushf
dec
loopne
jne
icebp
sbb
dec
push
movs
inc
mov
ins
mov
clc
imul
(bad)
and
scas
add
push
jp
xchg
mov
mov
ss
popf
imul
pop
jno
lock
cld
into
xor
ins
es
mov
xor
loopne
or
popa
add
test
dec
cmp
add
popa
inc
push
inc
cs
in
dec
adc
in
int
fist
mov
fwait
dec
and
and
cmp
xchg
jle
xlat
xor
loope
mov
pop
dec
mov
push
lahf
cmp
mov
aam
rol
cmps
cli
shl
sbb
sub
and
daa
adc
iret
ja
ja
pop
out
stos
bound
in
inc
xchg
out
aas
xchg
retf
or
and
sub
test
stos
scas
enter
loopne
sbb
clc
cmp
pop
retf
lods
cmp
adc
gs
adc
cdq
popa
sub
pop
jl
and
cmps
mov
jbe
shr
(bad)
xor
fs
xor
mov
mov
or
cmp
xchg
pop
inc
jmp
shr
pop
inc
loope
and
movs
lock
sbb
jb
push
mov
sbb
mov
add
jae
scas
enter
jne
cmp
stos
repz
not
inc
mov
pop
adc
xchg
mov
and
mov
xlat
push
mov
lea
mov
or
xchg
nop
es
xor
pop
std
cwde
jmp
enter
movs
lea
loope
loopne
mov
mov
lahf
js
repz
fst
aaa
test
aam
iret
ja
dec
imul
or
add
ins
push
retf
sbb
sbb
mov
mov
neg
jae
movs
lods
pop
mov
retf
mov
sbb
xor
jle
xchg
jb
call
popa
xchg
adc
xchg
and
or
sbb
cli
cmp
popf
retf
test
push
aas
inc
(bad)
movs
xchg
pop
outs
mov
pop
popa
cmp
add
repnz
loopne
adc
mov
and
mov
dec
ins
mov
rcr
and
jb
cs
fst
and
cs
jb
and
xchg
pop
and
pop
pop
fiadd
js
and
and
push
and
sub
ficom
push
ret
dec
movs
cmp
bound
mov
imul
jno
mov
and
repnz
cld
in
mov
lods
fst
push
into
jp
call
jns
jl
jnp
dec
jecxz
std
sub
push
cmp
jl
xchg
push
push
push
movs
pop
pop
je
add
mov
test
inc
cmp
ror
adc
ins
adc
and
mov
jl
pop
pop
or
adc
fbld
(bad)
lods
in
xchg
pop
fild
fcom
arpl
or
popf
je
xchg
push
inc
iret
sbb
jmp
stc
cld
std
test
xor
aaa
or
mov
mov
not
hlt
jno
pop
inc
mov
mov
adc
jl
pop
inc
ja
add
test
cli
mov
inc
inc
mov
(bad)
xchg
retf
out
phsubd
jne
imul
fisubr
(bad)
or
jno
ret
bound
ret
jmp
dec
dec
out
mov
mov
daa
xlat
rcr
xor
add
test
in
shl
enter
xor
adc
arpl
pushf
mov
sub
pop
f2xm1
xor
icebp
js
and
ins
pop
xchg
loope
mov
lock
xor
loopne
das
int3
(bad)
sbb
mov
ror
cdq
ret
dec
cwde
lds
xchg
xchg
and
dec
fild
mov
je
jle
jl
les
add
rcr
cmp
std
xchg
fadd
or
rol
sbb
dec
mov
ret
mov
dec
daa
popf
es
out
and
aas
cld
mov
popf
cmp
cmp
sub
mov
fsub
mov
int
int
es
xchg
xchg
mov
xor
loop
mov
jae
in
loopne
cmp
lods
push
dec
repz
(bad)
mov
int
mov
iret
push
dec
arpl
pop
mov
pop
(bad)
call
repnz
cld
xchg
idiv
iret
mov
pushf
pop
arpl
cwde
jp
cmps
clc
je
test
imul
jae
gs
psubq
jmp
sub
je
lock
push
pusha
hlt
div
cld
xchg
out
in
mov
mov
dec
xor
xchg
aas
loop
or
repnz
lahf
inc
lock
clc
push
cmpxchg
(bad)
pushf
mov
jnp
outs
dec
(bad)
mov
dec
in
xchg
sbb
xor
dec
ret
push
aad
mov
add
cld
jno
or
and
cli
xchg
cmps
xchg
test
daa
or
movs
mov
ss
cmp
jmp
push
cdq
movs
(bad)
fs
fs
outs
test
ins
sbb
xchg
aaa
mov
ins
or
mov
daa
stos
mov
daa
nop
or
pushf
out
dec
add
out
rcl
or
ficomp
stos
adc
cdq
inc
mov
icebp
jecxz
xchg
xchg
stc
pop
in
movs
jge
test
sub
xor
sbb
daa
stc
leave
cmp
adc
fadd
sbb
in
enter
sahf
push
std
pushf
js
js
push
cmp
sahf
aad
sbb
inc
loope
sub
lods
call
je
std
retf
sbb
lea
daa
push
sar
sub
out
jae
fwait
inc
and
repnz
jb
pop
fwait
vpmovqd
lds
scas
sahf
movs
dec
cld
pop
icebp
push
mov
(bad)
cmp
jge
xlat
fst
pop
jns
shl
fidiv
inc
jnp
nop
inc
stos
ins
lds
(bad)
sub
ss
adc
stc
(bad)
lds
cmp
mov
pop
pop
mov
mov
stc
mov
lds
mul
fnstcw
mov
js
(bad)
push
mov
pop
jl
mov
pop
(bad)
fucomip
adc
mov
sbb
std
out
push
enter
stos
cmp
repz
ins
ret
pop
ja
mov
xchg
jo
xlat
jg
lds
es
adc
aam
add
dec
stos
sar
setns
pop
retf
and
mov
adc
scas
mov
xchg
fcomp
lods
sub
fs
scas
je
retf
in
add
retf
jnp
adc
xchg
ja
fsub
mov
dec
pop
dec
xchg
fisttp
stos
stos
inc
cmps
test
es
or
fucomip
es
ret
in
into
test
aaa
ds
pop
fisub
std
outs
xchg
mov
int
(bad)
xchg
xchg
ds
pop
mov
pop
sub
add
daa
fcmovnu
push
and
ret
je
(bad)
bound
fcom
mov
lahf
cwde
loop
mov
cdq
xchg
mov
hlt
test
popa
mov
(bad)
mov
mov
inc
icebp
movs
mov
sub
push
inc
in
xor
jno
(bad)
bnd
or
pop
sub
cmc
cmp
mov
aad
dec
cmp
fwait
sub
sbb
mov
shl
ins
push
cli
ror
dec
xor
icebp
jecxz
cmp
pop
or
xchg
loop
push
int
xlat
cs
xchg
lock
out
retf
gs
xchg
sub
mov
stos
stos
pop
pop
push
xchg
loope
outs
fucomip
xchg
add
retf
ja
adc
mov
cmp
pop
and
jne
fist
mov
not
pop
mov
outs
ficom
clc
cdq
icebp
or
sbb
fsub
xchg
je
mov
push
cmc
retf
xor
cmps
push
inc
outs
fprem
dec
mov
mov
sub
inc
or
mov
jne
xor
inc
(bad)
frstor
fadd
xchg
arpl
out
xor
and
mov
ins
push
jae
iret
mov
inc
and
adc
xchg
test
sub
mov
or
hlt
sub
and
xor
stc
jle
mov
mov
movs
push
ffreep
pop
jecxz
das
data16
icebp
jne
lock
sbb
mov
repnz
arpl
loope
addr16
loop
mov
cmps
mov
and
mov
sub
icebp
push
clc
xchg
cs
push
jmp
xor
push
pusha
dec
add
cs
outs
xchg
xchg
cmp
cmp
out
adc
adc
out
das
retf
repnz
stc
imul
mov
enter
push
fs
mov
add
test
inc
mov
jno
in
adc
stos
iret
mov
lods
mov
cmp
test
enter
or
lahf
inc
inc
and
ins
scas
movs
mov
jg
mov
scas
dec
adc
sti
loopne
(bad)
inc
and
mov
scas
push
xchg
inc
add
push
push
enter
sbb
fwait
xchg
cmp
and
ret
lods
cmp
cmp
cmc
xor
cs
or
push
push
push
sti
or
xchg
fild
jge
fs
loop
in
out
inc
inc
cmp
aas
ret
sar
cmc
and
xor
adc
inc
mov
add
inc
shl
cmps
cmp
or
movs
or
sbb
dec
ins
aaa
jbe
in
xchg
xchg
out
fadd
ss
xor
jne
cmp
xlat
add
mov
push
xchg
inc
or
shl
pusha
xchg
mov
mov
mov
mov
stos
lods
je
xor
dec
inc
cld
or
sub
xchg
retf
cs
dec
cdq
jle
sub
push
xor
cmp
and
mov
pop
push
dec
cmc
push
jp
ds
cmps
in
into
xchg
jle
mov
pop
retf
xchg
mov
js
xchg
dec
ins
sub
jmp
adc
push
out
outs
fwait
je
imul
les
push
mov
stos
mov
cmp
iret
mov
sbb
or
dec
(bad)
cs
mov
daa
xor
(bad)
jmp
jl
jle
mov
mov
push
stos
stos
mov
mov
es
fwait
dec
inc
pop
jmp
pushf
aaa
dec
mov
dec
mov
jae
jmp
sbb
add
mov
push
mov
movs
mov
mov
adc
add
push
cmp
add
int3
jo
adc
ret
pop
nop
pop
sbb
mov
jnp
adc
push
mov
pop
mov
rol
jg
stos
daa
sti
cli
shl
pop
inc
call
dec
sub
mov
retf
or
(bad)
and
pop
pop
(bad)
fimul
fdivr
popf
arpl
push
push
add
lock
dec
dec
(bad)
push
retf
pop
cdq
cld
aad
and
cmp
shl
fwait
jnp
mov
stos
or
(bad)
(bad)
out
lods
lock
lahf
aam
jg
dec
inc
frstor
pop
dec
leave
rol
ret
sahf
or
add
and
loope
aad
(bad)
outs
mov
push
mov
pop
pop
in
cld
cmp
(bad)
movq
cmps
out
das
push
pop
jae
xchg
and
test
push
push
aas
jne
clc
push
sub
mov
imul
nop
or
ret
out
jae
rcl
mov
test
xor
xchg
enter
aas
js
(bad)
js
stc
pop
adc
sub
xchg
sar
call
sbb
sti
inc
inc
mov
mov
sub
xor
mov
aaa
in
mov
sub
or
push
pop
sub
jg
div
push
inc
out
lds
in
mov
xor
jno
rol
cmp
xchg
sahf
arpl
test
pop
mov
lahf
cmp
gs
dec
or
jmp
dec
add
xor
mov
add
fidivr
iret
stc
sub
mov
dec
dec
js
xor
sahf
ret
inc
inc
xor
sbb
nop
xchg
shl
sub
jmp
in
test
pushf
or
and
rol
jo
cmps
inc
movs
js
ret
outs
retf
push
call
jmp
dec
cmp
(bad)
jl
repnz
mov
sahf
test
xchg
sub
add
pop
or
das
push
and
test
push
daa
aaa
mov
jo
ja
sbb
ret
push
shl
mov
pop
dec
leave
outs
jmp
or
call
fimul
cmp
shl
mul
push
push
sub
lea
dec
cmps
jno
add
stc
out
mov
dec
shr
cs
or
and
shr
cs
mov
aaa
(bad)
jge
pop
dec
xchg
dec
shr
dec
xchg
cmp
mov
aad
jmp
or
stos
data16
retw
clc
mov
into
xor
std
int3
out
les
dec
imul
pop
add
call
lea
inc
inc
push
sbb
nop
(bad)
aaa
js
xchg
pop
adc
std
inc
pop
pop
pop
int3
dec
pushf
les
or
(bad)
jl
jnp
loopne
repz
xchg
inc
test
cmp
or
in
adc
popf
inc
sub
push
lock
ror
cmc
sub
mov
and
push
or
lods
add
faddp
call
call
push
mov
jae
pop
shl
je
mov
aad
cld
cmp
cmp
adc
and
ss
mov
cmc
repz
clc
adc
jo
or
push
lahf
push
and
(bad)
div
loope
bswap
sar
inc
xchg
pop
lods
and
xor
mov
mov
ret
sub
pop
js
loop
mov
xor
(bad)
adc
sub
mov
test
popf
stos
retf
retf
jg
inc
fs
and
das
cmps
(bad)
adc
cmp
jmp
xchg
push
mov
fwait
leave
icebp
out
add
cmp
xlat
mov
imul
cmp
fisttp
lea
repnz
xchg
cwde
inc
clc
jmp
inc
or
stos
xor
loope
test
clc
dec
test
aas
int3
mov
or
icebp
inc
dec
stc
test
inc
shl
xchg
jb
jne
mov
mov
push
mov
adc
cwde
fwait
lods
adc
popf
adc
jp
or
sbb
dec
dec
or
push
arpl
scas
and
jae
xor
imul
pusha
aam
shl
call
pop
std
jmp
cmp
pop
jle
dec
retf
loop
sub
gs
pushf
nop
(bad)
pop
xchg
sar
jmp
push
xor
mul
inc
mov
fsub
lahf
ja
outs
adc
es
push
fadd
lods
scas
sub
ds
sbb
mov
mov
hlt
cmp
sbb
push
scas
sbb
mov
inc
xlat
push
xor
in
xor
iret
jnp
call
push
out
inc
or
(bad)
jmp
push
or
aas
jne
sub
mov
test
(bad)
mov
mov
and
mov
cld
scas
xchg
mov
adc
mov
mov
xor
or
inc
lahf
mov
and
scas
in
inc
(bad)
add
mov
cmc
cli
fmul
movsx
or
ins
shl
enter
js
das
pusha
mov
and
ret
sub
push
xor
fwait
jle
push
xchg
scas
std
add
adc
inc
and
inc
xchg
xor
(bad)
lock
mov
shr
push
sahf
pusha
sub
xchg
stos
pop
jo
xchg
(bad)
push
out
repnz
and
sbb
mov
xor
fdiv
iret
pop
push
or
xor
sub
or
or
imul
into
cmc
xor
stos
add
in
aam
inc
fdivr
cmp
add
or
sub
jge
jno
popf
xor
inc
pop
in
mov
cmc
dec
neg
imul
pop
cmc
imul
mov
jmp
jmp
aas
xchg
xchg
test
psllq
dec
icebp
aam
add
test
int
sub
or
pop
nop
push
pandn
test
gs
adc
jle
sub
int
cmp
lahf
iret
pop
dec
rol
cmp
cwde
and
cld
sbb
jl
cmp
mov
lock
push
jp
rcr
push
jbe
retf
sahf
push
cli
ret
xor
lods
fs
jnp
add
or
xor
or
sbb
scas
pop
xchg
fwait
stc
les
cmps
ins
fiadd
ret
std
shr
scas
dec
clc
pop
adc
pop
mov
packssdw
fiadd
jmp
(bad)
ins
imul
xor
cli
mov
imul
cdq
daa
in
ror
ret
xchg
cmc
pop
imul
pop
cdq
inc
xchg
or
pop
mov
or
add
inc
jmp
outs
dec
jae
mov
mov
clc
mov
jp
dec
loopne
(bad)
int
xchg
retf
ins
jmp
fcomp
ss
add
bnd
push
mov
dec
mov
fwait
ja
aad
cmp
icebp
in
call
dec
cmp
pushf
in
jl
fs
jb
sub
and
inc
mov
fs
and
xor
jb
cmc
test
cmp
sbb
push
adc
scas
repz
(bad)
hlt
jp
fidiv
inc
mov
jmp
push
aad
sbb
pop
xor
push
shl
ins
pop
push
bound
call
xchg
data16
pop
bound
dec
inc
push
iret
sub
scas
fucomi
mov
sbb
movs
sbb
cwde
xor
out
dec
jnp
scas
loop
jae
ja
xor
popf
ret
rcl
sbb
pop
mov
jg
and
adc
and
pop
add
test
cmp
inc
add
pop
in
pushf
dec
out
enter
mov
in
push
in
push
xchg
push
nop
inc
add
or
xchg
jecxz
imul
mov
icebp
fcomp
add
xor
jmp
imul
out
int3
(bad)
(bad)
jmp
sbb
dec
sbb
dec
movs
mov
pop
imul
pop
pop
fs
jae
in
rol
jo
mov
jbe
(bad)
(bad)
icebp
adc
xchg
sub
push
js
pop
out
inc
jno
out
or
or
je
and
jmp
add
push
je
adc
mov
or
in
fnstsw
ss
jmp
(bad)
push
or
cmp
lds
sub
inc
add
in
mov
inc
or
xacquire
mov
or
ins
jmp
adc
(bad)
scas
sub
popa
adc
ins
push
add
ins
imul
jmp
cmps
ret
push
aaa
cmp
cmp
lahf
fsub
jnp
shl
push
add
dec
into
test
retf
popa
sbb
inc
in
out
ss
or
mov
and
cmps
int3
clc
xchg
lds
cmp
shl
fdivr
pop
(bad)
jecxz
cld
push
cmp
push
mov
xchg
sub
pop
sbb
or
test
push
outs
in
lock
movs
xchg
or
ret
jg
fidiv
inc
imul
sti
in
(bad)
jb
call
fisubr
scas
popf
test
pop
cmps
pusha
sahf
push
cmp
mov
mov
sbb
adc
xor
pusha
xchg
ja
or
and
pop
retf
xchg
loope
sar
inc
repnz
mov
adc
jno
cmp
imul
(bad)
into
push
dec
in
lock
(bad)
ret
addr16
adc
stc
mov
ins
mov
retf
pusha
mov
mov
xor
jmp
test
push
push
idiv
stos
sbb
or
les
je
test
fsub
mov
pop
gs
(bad)
sub
jne
mov
aam
ins
call
mov
push
sbb
xor
push
aad
mov
out
push
cmp
jmp
out
sbb
ss
stos
sti
mov
fiadd
aam
xchg
imul
sbb
xor
ds
mov
add
xchg
and
mov
cwde
mov
arpl
cwde
enter
arpl
pop
lods
pop
adc
xchg
stc
add
sahf
push
ja
in
pushf
lods
inc
mov
push
or
xor
into
push
(bad)
push
pop
sbb
jb
jb
int
mov
push
outs
mov
into
and
adc
jnp
xor
addr16
add
call
data16
mov
dec
mov
out
inc
sbb
dec
inc
or
sti
repz
leave
ja
iret
fdiv
(bad)
pop
pop
(bad)
fiadd
xchg
fs
ds
push
retf
sub
mov
push
loope
neg
dec
inc
cwde
out
jg
cmp
icebp
outs
pop
lock
add
xchg
bound
mul
xchg
sbb
fadd
idiv
inc
retf
(bad)
push
or
jae
mov
add
sub
test
xchg
lahf
aam
or
scas
dec
stos
sub
sub
or
lea
in
or
in
add
pop
in
push
push
inc
jge
pop
test
in
mov
loop
and
pop
repnz
inc
adc
xchg
add
ret
or
idiv
out
push
xchg
cld
test
in
or
and
movs
into
dec
xchg
or
mov
pop
xchg
pop
jno
pop
mov
enter
cmps
mov
movs
aam
es
mov
sbb
in
mov
test
xchg
xor
rcr
lods
push
pop
jnp
stc
inc
add
scas
mov
mov
ins
or
std
dec
fwait
imul
or
aas
cmp
nop
dec
gs
xor
or
inc
dec
retf
pop
add
xchg
outs
test
xor
ret
push
xchg
xchg
dec
and
in
div
inc
pop
sbb
fdiv
fld
mov
test
push
adc
stos
sbb
and
aaa
popa
shl
fmul
jnp
cld
xor
pop
fmul
sub
xlat
icebp
mov
mov
addr16
(bad)
aad
jnp
inc
retf
lahf
inc
movs
mov
push
inc
cmp
and
hlt
mov
push
cs
xor
adc
inc
imul
mov
hlt
mov
stos
mov
adc
test
fisttp
ins
gs
xchg
or
cmp
and
xor
mov
inc
xchg
aam
jecxz
sub
ds
aaa
cmp
add
adc
stc
call
into
aam
or
sub
xor
call
mov
pop
mov
mov
arpl
xchg
neg
or
bound
and
rcl
mov
pop
adc
arpl
icebp
out
cmp
pop
mov
xchg
xor
retf
in
call
call
dec
push
setae
sub
sub
fcomp
in
arpl
cmp
add
cmc
dec
mov
xor
cmp
and
data16
mov
loop
xor
adc
cmp
xor
and
sub
inc
shl
mov
enter
arpl
or
stos
call
mov
(bad)
repnz
cmps
stos
xor
aas
inc
jnp
xchg
or
adc
dec
cmp
jno
cmc
dec
jnp
pop
sbb
inc
and
into
xlat
jno
les
mov
inc
ins
mov
nop
js
movs
test
sahf
xchg
cld
xchg
push
and
addr16
jno
repz
test
ins
pop
fist
cmp
add
in
ins
adc
hlt
call
gs
jge
addr16
retf
push
bound
pop
push
rcl
xchg
adc
ja
mov
pop
pusha
fcomp
retf
lods
lock
out
and
fucom
(bad)
xchg
sbb
sub
mov
ss
iret
jnp
das
xchg
fimul
mov
loop
inc
fwait
test
jl
xor
test
(bad)
stc
test
scas
and
jb
jo
into
enter
aad
neg
cwde
sti
(bad)
xor
sub
data16
mov
jecxz
leave
enter
popa
stc
fnstenv
loope
mov
push
adc
out
fcom
cmp
dec
iret
pop
imul
aas
mov
cdq
or
jecxz
scas
jns
ret
retf
mov
test
ins
movs
dec
jne
(bad)
stos
(bad)
int
imul
mov
cmp
sbb
mov
or
pop
jecxz
and
in
jl
in
inc
sub
jg
ficom
(bad)
movs
pop
xchg
sar
xchg
mov
mov
popf
mov
retf
enter
ret
xor
cmp
cmp
mov
cmps
xchg
(bad)
test
push
mov
xor
out
sbb
pop
stc
popa
hlt
inc
sbb
xchg
int3
dec
mov
cdq
jecxz
cmp
sahf
or
inc
iret
out
retf
scas
sbb
mov
sub
pop
imul
adc
bound
xchg
arpl
mov
aaa
ja
or
js
fwait
ret
lds
aaa
mov
(bad)
aas
mov
cwde
pop
mov
push
sub
jno
cs
mov
into
mov
and
xchg
hlt
push
add
imul
inc
aam
fisttp
out
int3
in
mov
cmp
sub
jae
mov
(bad)
mov
aas
mov
inc
loop
movs
lea
push
pop
in
and
test
lods
adc
add
jg
add
jbe
(bad)
out
mov
arpl
jmp
ret
dec
scas
(bad)
push
(bad)
jnp
xchg
popf
ror
mov
call
dec
dec
fistp
pop
adc
mov
pop
es
sbb
inc
sahf
or
push
push
or
mov
push
inc
mov
xor
repnz
in
cmc
mov
pop
clc
fnsave
inc
push
icebp
jmp
pop
cdq
or
add
clc
in
xor
and
dec
jb
mov
mov
or
xlat
(bad)
or
sbb
sbb
xchg
ds
add
nop
add
push
in
jns
lods
outs
mov
repz
addr16
inc
data16
in
sbb
aaa
inc
adc
repnz
pop
adc
and
dec
lahf
cmc
push
jmp
adc
push
int
je
push
inc
mov
jp
jg
fisttp
sub
ret
xor
fs
inc
pop
mov
movs
mov
cld
fwait
iret
iret
mov
mov
(bad)
in
jb
xchg
ret
ret
jns
cmp
xchg
cmc
add
pop
dec
les
sti
cdq
or
mov
stos
lods
xor
scas
adc
mov
jb
clc
jmp
inc
jne
fisttp
retf
xor
cmp
xchg
pop
inc
es
adc
std
and
cmp
mov
inc
or
repz
movs
stc
dec
xor
push
aam
lahf
or
arpl
sub
cmp
bound
repnz
cmp
shl
xchg
mov
xchg
mov
inc
push
inc
adc
jbe
ss
popf
jmp
adc
aad
xchg
dec
jno
xchg
dec
mov
mov
test
sub
push
aad
mov
shl
xlat
sbb
or
xchg
xchg
xchg
(bad)
sub
add
mov
call
les
push
jmp
stos
popw
aam
push
mov
int3
adc
sar
push
test
pop
je
inc
pop
push
xchg
inc
adc
jmp
in
xchg
stos
push
and
int3
nop
jmp
inc
push
or
mov
pop
repnz
js
lods
repz
cmps
mov
lea
inc
or
dec
jl
int3
dec
mov
inc
ja
inc
xor
add
fwait
xchg
xchg
cli
xchg
cdq
ins
dec
add
mov
mov
sahf
dec
jns
iret
out
iret
fs
xchg
stc
std
sbb
inc
push
sub
js
ins
fcom
out
jecxz
lods
mov
and
cs
scas
int
shr
fwait
add
int
or
inc
pushfw
mov
xor
dec
ret
(bad)
sub
outs
and
and
repz
add
mov
outs
test
jmp
(bad)
repnz
mov
test
cmps
mov
loop
loope
xchg
sub
mov
push
out
mov
jl
cwde
adc
mov
cld
call
push
inc
daa
shl
xor
clc
imul
dec
lahf
(bad)
add
pushf
into
xchg
add
jmp
mov
push
mov
push
xor
movs
jle
repz
fs
aad
sbb
cmc
sub
pop
(bad)
enter
mov
sbb
mov
mov
push
adc
inc
pop
jae
ret
(bad)
outs
in
(bad)
cli
ds
je
cmps
scas
mov
dec
dec
pop
js
imul
shl
xor
lahf
cld
dec
add
movs
out
inc
sbb
sub
and
dec
xchg
in
xchg
enter
push
add
mov
mov
lock
cmp
pop
test
and
js
out
call
retf
or
inc
stos
fimul
retf
and
add
sbb
cli
push
adc
jl
push
repz
out
int3
xor
sub
cmps
scas
nop
mov
fisub
push
gs
cmc
push
scas
add
stos
das
cmp
call
mov
mov
pusha
cmc
mov
(bad)
push
jo
test
and
and
fisttp
popf
mov
or
rcl
shr
paddusb
inc
sbb
sbb
mov
aas
xchg
sub
(bad)
dec
sub
adc
(bad)
xor
xchg
js
mov
into
cmp
sub
imul
xchg
push
ins
mov
cmps
adc
mov
test
xchg
adc
xchg
adc
lods
add
fdivr
mov
dec
jbe
xchg
(bad)
pop
popa
sub
in
inc
add
push
out
and
cmp
mov
add
ins
sbb
lods
sbb
pop
lock
push
sti
in
in
movs
add
inc
or
bound
or
lods
popf
lock
and
pop
fs
adc
daa
inc
push
xor
cld
and
pushw
fwait
and
popf
js
movs
sbb
mov
movs
in
outs
test
and
xlat
jge
or
push
es
aaa
mov
nop
or
sbb
lock
icebp
mov
pop
xor
fwait
mov
sub
stc
in
imul
cmp
pop
mov
in
frndint
mov
push
xchg
pop
mov
or
ror
sbb
out
jnp
sbb
data16
and
mov
call
xor
mov
sbb
ror
and
out
add
sub
call
jns
fwait
jg
mov
mov
popa
(bad)
mov
fnstsw
jne
cmc
pop
adc
inc
inc
enter
cdq
ficomp
out
add
test
sti
mov
sub
pop
and
jecxz
shl
or
(bad)
inc
mov
push
in
mov
popa
push
fsubr
mov
pop
hlt
sub
jb
cmp
cmp
rol
es
in
sbb
ins
out
test
bound
cmp
repnz
adc
xor
xchg
mov
pop
pusha
mov
sbb
(bad)
test
or
clc
jge
int
ret
popf
ror
test
outs
jno
repnz
sar
enter
gs
(bad)
in
in
das
fidivr
fadd
cdq
and
fs
mov
test
sub
sbb
fsubr
retf
pop
or
aas
xlat
mov
ror
test
sub
push
fisubr
dec
xchg
mov
outs
inc
xchg
dec
xor
loope
mov
imul
(bad)
or
inc
mov
sbb
mov
cmp
mov
jns
pop
xchg
outs
fsubp
sub
add
xchg
outs
adc
pop
inc
mov
mov
loope
jmp
mov
mov
out
iret
push
stos
outs
js
pushf
cs
fwait
cmp
add
data16
arpl
mov
retf
xor
int
xor
cmp
cmps
out
hlt
iret
shr
stc
push
les
ss
add
sub
loope
scas
inc
lea
and
pop
jnp
push
and
dec
in
in
inc
stc
fsub
addr16
jl
(bad)
int
sbb
mov
fmul
mov
jmp
popf
inc
pmaxub
lods
xor
sbb
not
and
inc
pop
enter
stos
xchg
outs
push
cmp
push
sbb
add
clc
mov
push
jns
mov
je
pusha
(bad)
nop
les
cmp
lahf
es
pop
cli
pop
popa
mov
sahf
jo
xchg
push
xor
jb
push
je
xchg
jg
call
add
mov
xchg
jmp
mov
repnz
outs
jle
ja
dec
ins
dec
fst
loopne
push
setae
cmp
xchg
fcomp
dec
lock
ja
icebp
(bad)
dec
adc
inc
jnp
pop
in
fistp
dec
cmp
aam
mov
jmp
mov
dec
mov
inc
cmps
loope
xor
scas
mov
pop
fisubr
dec
in
popf
clc
sbb
popa
faddp
sub
xor
add
and
push
mov
and
jmp
cmp
pop
inc
inc
mov
into
shl
mul
mov
push
add
or
fdiv
mov
rol
fcomp
dec
jmp
scas
xlat
pop
sub
fild
in
xor
lods
stos
push
inc
popa
int
(bad)
loopne
mov
push
push
mov
retf
rol
mov
add
lock
add
mov
pushf
cwde
repz
js
das
in
mov
xlat
jle
jge
test
dec
into
int
pop
push
repz
sbb
cmp
js
shr
sub
inc
xchg
jmp
push
(bad)
ror
fnstcw
cmp
bnd
xchg
mov
push
aad
xchg
int3
pop
sub
pop
cmp
add
push
mov
xor
fld
push
or
sub
sahf
movs
add
mov
daa
popa
push
and
aam
jne
test
adc
add
jbe
gs
pop
push
shr
jmp
int3
and
(bad)
sbb
call
retf
(bad)
scas
stos
cmps
push
mov
jmp
cmp
jmp
jo
lock
pop
or
sbb
and
scas
jl
inc
jecxz
mov
shl
mov
js
pop
xlat
ds
push
or
and
sub
ins
adc
sbb
test
(bad)
jge
cmp
push
xor
in
jno
imul
arpl
sti
mov
jmp
inc
call
add
cmp
jp
lahf
pop
inc
and
repz
jbe
inc
in
cli
xchg
dec
scas
and
out
scas
leave
xchg
into
arpl
fidiv
dec
or
in
or
rol
pop
ins
imul
mov
daa
into
out
mov
mov
pop
push
sbb
and
dec
xchg
mov
sub
popa
nop
es
fsub
xchg
xor
and
retf
cmp
mov
mov
hlt
jnp
sub
ja
lods
or
sub
jecxz
dec
dec
sbb
inc
jg
xchg
arpl
sub
cmps
imul
mov
fcom
div
leave
push
(bad)
cmp
jg
int3
loope
bound
lahf
popf
call
xor
mov
inc
iret
and
xor
arpl
mov
mov
or
jl
pop
ud1
inc
ds
or
mov
xlat
cld
xlat
fld
jb
mov
mov
push
das
(bad)
repnz
mov
div
(bad)
mov
mov
inc
loope
xchg
and
xor
aad
inc
or
call
in
test
and
xor
dec
test
mov
div
fdiv
gs
xor
cmps
lods
add
outs
sub
test
inc
scas
xor
les
fs
out
xchg
in
inc
into
mov
jo
lods
fdivrp
retf
jmp
and
repnz
test
xlat
xor
outs
in
pusha
pop
push
pop
shr
dec
arpl
rcr
sub
add
xor
ret
or
js
clc
push
pop
out
lods
or
jmp
stos
push
cli
in
arpl
gs
mov
add
or
iret
xchg
inc
test
inc
enter
xchg
mov
cs
adc
fimul
mov
add
sbb
dec
and
pop
scas
dec
pop
adc
pop
pop
(bad)
lods
cld
les
pop
mov
leave
mov
je
sti
sbb
mov
rcr
scas
call
push
fadd
int
jl
out
add
(bad)
in
push
add
mov
pop
and
daa
sub
xchg
lods
std
das
mov
(bad)
adc
arpl
loopne
pop
sahf
mov
inc
and
out
jecxz
(bad)
xchg
daa
mov
inc
push
pop
adc
ret
dec
jmp
adc
mov
sbb
aas
pop
or
dec
sti
loop
jg
sbb
sub
mov
or
add
jo
cmp
mov
ins
movs
dec
cmp
xlat
popf
pop
(bad)
and
cmp
adc
inc
jb
push
sbb
sub
or
shl
outs
sub
add
jbe
cmp
aas
cmp
pop
jge
mov
cmc
sbb
pop
adc
dec
(bad)
jecxz
sbb
fnsave
loop
xchg
sar
push
fsub
fnstsw
rcr
and
jns
sbb
xchg
mov
int3
xchg
jo
push
imul
sar
in
push
cli
or
stos
call
data16
cmp
push
std
fs
cdq
pop
inc
stc
loopne
movs
movs
ss
xor
pop
inc
jmp
shl
pusha
jg
jg
mov
push
repnz
cmp
(bad)
jnp
jae
je
jno
adc
shl
sbb
out
xchg
loope
int3
enter
sbb
int3
stos
inc
add
and
mov
(bad)
(bad)
(bad)
lahf
and
rcl
inc
add
adc
mov
sbb
sar
cmp
repz
cmp
lods
push
movs
xor
call
bound
dec
jnp
stos
sar
(bad)
in
mov
rcl
repz
jne
scas
fwait
pop
test
mov
nop
add
push
and
jo
dec
xchg
jp
std
sub
add
lock
xchg
sbb
ja
dec
inc
cmps
(bad)
jmp
lahf
repnz
popa
sbb
ja
inc
je
jnp
fmul
fwait
mov
add
and
add
xchg
cwde
mov
data16
sti
cmp
push
les
pop
push
and
clc
sar
dec
add
inc
xchg
sbb
add
call
xchg
xchg
test
push
cmp
clc
aam
mov
xor
loopne
les
jg
mov
int3
test
cmps
mov
fwait
shl
nop
mov
shl
retf
pop
cmp
sahf
xchg
and
retf
je
and
adc
loop
lock
fdivr
push
mov
jns
scas
jle
imul
(bad)
mov
and
out
jmp
fnsave
sbb
cmp
mov
iret
sbb
das
xchg
call
(bad)
jne
adc
inc
pop
sbb
xchg
pop
fdivp
ret
jmp
ret
sub
out
inc
daa
es
cmps
inc
push
inc
outs
clc
cld
lock
dec
mov
mov
or
inc
cdq
cmp
push
jo
sbb
aad
retf
cmp
les
mov
add
sub
loope
cmp
push
pop
rol
xor
std
je
add
add
lea
out
mov
mov
aaa
sti
popf
pop
aas
daa
jg
scas
sbb
mov
iret
push
sub
nop
sub
lods
adc
aas
mov
mov
mov
push
or
sahf
dec
push
xchg
pop
jecxz
stc
jmp
rcr
mov
shl
adc
fist
cmp
jg
xor
repz
shl
jbe
test
sbb
xchg
mov
imul
push
hlt
mov
adc
cdq
lods
push
and
stc
xchg
mov
mov
mov
dec
sar
imul
lods
push
and
bound
xor
repz
wrmsr
lds
rol
push
mov
fbstp
sub
scas
sahf
js
jge
daa
dec
repnz
pop
cmps
mov
add
jno
mov
out
daa
mov
lahf
int
or
dec
and
cmps
mov
cmps
int3
add
pop
jge
sbb
add
(bad)
icebp
std
sbb
or
movs
pinsrw
lea
icebp
bound
xor
shl
push
jbe
sbb
mov
stc
pop
hlt
xor
sbb
cmp
sbb
lock
pop
jmp
cmp
xor
out
mov
fnstcw
xchg
add
into
sbb
(bad)
or
jnp
call
and
popa
leave
mov
lock
or
mov
xchg
jns
shr
pop
sub
sbb
push
inc
sahf
xor
pop
push
jb
inc
jns
sbb
pop
mov
push
inc
sub
or
mov
inc
push
into
cmp
imul
in
xchg
ins
mov
outs
movs
clc
inc
push
or
cmps
push
mov
shr
ds
mov
jns
sub
mov
add
xor
add
jb
test
or
jl
xchg
scas
pushf
bound
retf
sbb
xchg
sbb
lds
push
pop
test
std
pop
aas
cld
retf
ret
aam
mov
in
es
sub
out
xchg
stos
jne
push
pop
adc
pusha
stos
call
cmp
pushf
or
cmp
daa
xchg
pop
adc
(bad)
(bad)
mov
xchg
push
ins
aad
hlt
adc
jb
pop
int3
xchg
or
mov
jle
xor
inc
fistp
arpl
push
fmul
in
dec
push
nop
cmps
sub
pop
int3
or
xchg
bound
outs
addr16
imul
mov
jecxz
(bad)
out
push
mov
rol
or
dec
outs
stc
xor
stos
shr
test
(bad)
aad
adc
out
rcl
fmul
cmps
rcl
mov
or
sbb
rol
stos
pop
jb
adc
or
daa
jbe
shl
mov
je
cmp
push
pop
push
daa
push
stos
test
jle
add
sub
and
stc
jecxz
das
mov
leave
xor
rol
(bad)
fcomp
push
outs
inc
dec
xchg
jg
mov
dec
jbe
cld
repz
sbb
sub
ror
dec
push
sbb
push
ret
imul
icebp
cli
(bad)
shr
loop
popf
icebp
xchg
push
add
mov
stos
stc
cmp
inc
iret
jo
test
push
xor
sar
pop
pop
mov
sub
ss
jae
push
dec
or
rcl
rcl
cmp
mov
mov
imul
xlat
mov
int
in
cmps
inc
adc
cld
ss
mov
adc
and
rcl
clc
test
add
test
mov
push
sbb
in
clc
frstor
mov
xchg
cmp
jp
(bad)
call
fadd
push
and
daa
ret
or
arpl
ret
js
out
fsubr
xor
inc
xchg
mov
jle
jecxz
jae
jno
fdiv
cmp
push
sahf
and
aas
cs
jl
(bad)
pusha
out
push
add
test
sbb
lahf
jge
mov
jae
or
movs
popf
add
adc
jne
out
loopne
retf
cmp
add
ja
inc
fst
push
push
or
mov
rep
push
add
ret
mov
in
les
push
inc
pextrw
test
call
push
mov
sbb
pop
aas
mov
test
imul
add
add
scas
jne
clc
pushf
fistp
js
sbb
jo
imul
lods
adc
into
inc
adc
(bad)
mov
dec
cmp
xchg
add
pop
xchg
addr16
xchg
dec
push
mov
push
movs
nop
cmp
mov
lods
clc
inc
packssdw
mov
nop
xor
cmps
jbe
scas
pop
xor
cld
loop
bnd
push
jg
or
cli
jmp
add
popa
jbe
ja
fst
pushf
pop
ror
stos
dec
and
push
ret
or
(bad)
jns
(bad)
shl
aas
test
add
xchg
add
call
mov
add
pushf
inc
lea
inc
pop
cmp
shl
(bad)
icebp
std
dec
mov
mov
inc
outs
mov
pop
sbb
fs
jg
iret
pop
cmp
fwait
pop
and
mov
clc
test
je
clc
sub
ds
das
test
push
jl
std
call
and
adc
dec
scas
mov
(bad)
fstp
es
jle
push
mov
xor
cmps
dec
scas
enter
pop
scas
jnp
imul
in
inc
and
mov
push
fild
add
sub
pop
sbb
jmp
add
sub
outs
and
pusha
sub
mov
mov
ja
jmp
cs
jl
push
inc
adc
inc
aad
pop
repz
cdq
retf
pop
lds
add
scas
xchg
rcr
call
jns
enter
ja
cdq
inc
repnz
inc
inc
pop
and
sub
rol
mov
daa
cli
outs
fimul
and
fsubrp
bndstx
inc
push
out
mov
scas
jmp
add
pop
push
push
ficomp
xor
jl
psllw
pop
leave
cdq
push
push
jne
pop
jmp
shl
jb
push
retf
push
outs
pop
pushf
minps
mov
pushf
inc
jns
popf
aam
adc
imul
(bad)
pushf
and
bound
pop
in
or
(bad)
in
mov
cmp
xor
in
fst
xor
(bad)
out
cs
or
jp
mov
addr16
push
addr16
mov
repz
xchg
fsub
add
stos
mov
dec
lahf
rol
out
jge
jmp
adc
outs
mov
jae
add
inc
and
fist
loopne
mov
push
cmps
pop
and
jmp
jo
jmp
pop
dec
xor
mov
sub
fwait
push
and
hlt
mov
mov
shl
aas
leave
(bad)
test
add
loope
div
fnstenv
in
aaa
mov
out
xor
ins
inc
lds
xor
daa
in
mov
movs
imul
loopne
inc
inc
pop
push
push
push
xor
mov
imul
(bad)
push
mov
pop
mov
aad
fs
jl
cmps
and
addr16
in
hlt
fwait
shr
add
shl
push
mov
lods
push
mov
pop
adc
js
mov
inc
xchg
adc
movs
ret
fwait
cmp
je
loop
push
ret
jmp
fisubr
mov
or
out
mov
mov
cmp
cmc
mov
test
mov
pop
jae
cmp
pushf
pop
pop
int3
sub
out
sub
mov
out
out
push
pop
jmp
retf
outs
lahf
xor
xchg
scas
cmp
fld
jp
xchg
inc
clc
xchg
mov
xchg
addr16
inc
jo
or
dec
dec
xchg
or
cmc
push
mov
jb
sbb
(bad)
aad
xchg
out
movs
in
test
adc
adc
adc
sahf
fbstp
lods
and
push
loope
cdq
sahf
pop
cmp
push
popf
out
loope
in
test
adc
dec
stc
add
ret
pop
xchg
imul
cmc
jno
repnz
icebp
pusha
div
jb
cmp
or
pop
mov
push
cmc
pop
pop
push
dec
nop
movs
imul
jge
retf
loop
mov
jmp
aad
jns
sub
inc
mov
fcmovnbe
call
fcmove
dec
add
aam
adc
inc
mov
repz
xchg
sub
call
lock
pop
xor
(bad)
rcr
adc
adc
pop
inc
xor
mov
mov
jmp
mov
(bad)
jne
out
add
test
leave
ror
dec
mov
mov
mov
or
sub
or
(bad)
sbb
aaa
adc
cmps
cmp
xchg
jmp
ss
cwde
cmp
loope
adc
mov
int3
js
inc
add
xor
lahf
pop
ret
xchg
inc
sahf
loop
pop
pop
jns
sub
lea
jb
imul
xor
popa
dec
sbb
cli
dec
sbb
jne
dec
jb
push
push
xchg
ds
mov
and
aam
cmp
call
mov
ret
inc
xchg
push
std
xor
hlt
jmp
and
div
into
mov
(bad)
cmp
push
imul
cdq
(bad)
addr16
loop
mov
inc
out
mov
fwait
test
cmp
or
mov
lea
dec
or
cmc
not
mov
mov
adc
sbb
mov
push
add
shr
cmp
sub
dec
xor
xchg
jns
pop
mov
sbb
xchg
xlat
mov
fild
mov
test
(bad)
or
mov
sahf
fdivr
push
adc
nop
cld
or
mov
jns
aaa
pop
lahf
dec
test
dec
and
nop
mov
pop
adc
daa
and
ret
xchg
sub
imul
push
xchg
and
clc
and
es
and
scas
pop
sub
dec
cmps
or
adc
shr
js
inc
sbb
push
dec
sbb
test
add
bound
cdq
cmps
push
sahf
push
(bad)
lock
xchg
(bad)
push
adc
shr
adc
pop
add
lahf
mov
lahf
jg
int
xor
pop
dec
movs
cmp
dec
movs
dec
jne
outs
cmp
jae
jno
rcr
icebp
mov
(bad)
fdivr
mov
popw
mov
bound
add
ins
jg
fisttp
add
or
test
xchg
out
mov
call
or
adc
mov
mov
in
ins
mov
(bad)
ss
cwde
cmps
movs
mov
mov
stos
in
pop
sub
in
mov
fild
je
cmp
leave
loop
add
scas
push
loope
daa
mov
mov
dec
fcom
push
jle
jae
or
sahf
fcmovb
mov
test
aaa
adc
mov
lahf
fist
retf
pop
or
pusha
push
mov
xor
and
jnp
ss
in
lahf
xlat
mov
sar
ficomp
fs
loop
sbb
ins
or
lds
hlt
data16
retf
out
popa
sbb
scas
sbb
enter
shl
ret
cmps
shl
xchg
test
dec
in
test
dec
jge
ret
or
mov
dec
ror
out
and
out
dec
pop
cmpps
lea
sbb
sbb
lea
mov
cmps
mov
cmp
inc
pop
mov
xchg
mov
and
sub
cs
jno
jbe
mov
pushf
cmp
repnz
dec
mov
jno
int3
mul
std
jno
gs
or
aam
mov
and
aaa
dec
push
ja
jnp
or
sbb
repz
jmp
pusha
push
xor
and
push
aas
push
mov
(bad)
jl
adc
xor
cmp
mov
lds
add
clc
fsub
inc
xchg
stos
bound
mov
ss
xor
sbb
or
das
sub
dec
imul
lods
pop
or
inc
aam
std
cmp
pop
and
frstor
ret
ss
repnz
sti
add
fisttp
mov
push
test
xchg
(bad)
mov
pushf
mov
inc
mov
scas
cdq
and
lahf
outs
repz
dec
jns
mov
xchg
jmp
push
pop
mov
iret
or
mov
dec
jge
jl
stos
pop
and
xor
scas
popf
mov
xor
out
stc
pop
dec
call
sbb
clc
imul
or
inc
adc
lock
or
inc
enter
pop
inc
push
scas
xchg
add
pushf
jmp
mov
nop
mov
out
xchg
fimul
loop
dec
sub
out
inc
leave
data16
mov
sti
fld
ret
and
jne
loop
inc
int3
test
test
jmp
jo
outs
or
jmp
sub
inc
xor
jo
sbb
adc
ror
xchg
out
pop
mov
stos
loop
xor
mov
push
mov
(bad)
sub
fdivr
retf
pop
mov
push
cwde
daa
loope
adc
out
out
xchg
mov
mov
out
cmp
mov
lea
lock
sbb
mov
movs
pop
adc
out
jl
aam
xchg
push
pop
enter
and
std
inc
jbe
cld
sbb
mov
lods
stos
mov
aas
xor
cwde
mov
push
dec
test
dec
adc
mov
jmp
or
iret
cmp
hlt
aad
dec
mov
mov
ret
movs
pop
jle
dec
cmp
fst
fld
fs
pop
(bad)
ins
cmps
cmp
bound
sub
leave
cld
push
addr16
ror
mov
cld
fst
scas
jnp
lea
xor
aad
push
jmp
cli
enter
pop
jl
imul
mov
pop
cmp
popf
pop
jno
or
mov
aas
js
int3
jmp
sub
aam
clc
sti
fstp
scas
or
outs
mov
scas
lahf
dec
inc
pop
jp
mov
cmps
std
mov
in
scas
loopne
jmp
lock
int
xchg
sar
adc
and
movs
or
add
dec
aam
xor
(bad)
sahf
mov
mov
mov
(bad)
arpl
loope
es
bound
loop
scas
stc
push
movs
mov
ror
mov
inc
(bad)
stc
add
cld
sar
das
sub
lods
ins
lock
imul
pop
mov
pop
push
and
ins
movs
xchg
movs
int
sbb
sub
adc
not
sub
(bad)
mov
ret
xor
mov
iret
mov
inc
scas
retf
cmp
dec
add
jb
push
call
dec
out
fiadd
sti
lock
xor
mov
xchg
in
addr16
out
aas
test
stc
cli
dec
nop
sub
repz
xchg
pop
(bad)
pop
into
in
imul
sbb
dec
stc
dec
in
mov
mov
sbb
cwde
jecxz
arpl
sub
xlat
add
pop
cmp
(bad)
jmp
push
xchg
lock
mov
aad
cs
(bad)
ror
pop
cmp
fisub
imul
sbb
adc
stos
jmp
iret
dec
shl
and
xor
dec
fs
clc
pusha
mov
cmp
leave
ds
sub
addr16
add
mov
movs
mov
xchg
fbld
jnp
or
(bad)
aas
mov
add
sbb
cmp
std
sub
cmp
cdq
adc
push
test
pusha
jmp
or
sub
sbb
fsub
mov
jecxz
mov
int3
call
call
mov
shr
clc
loopne
and
pandn
dec
or
in
adc
inc
inc
sub
adc
xchg
movs
addr16
push
test
or
mov
popa
lea
fidiv
mov
xor
push
das
mov
sbb
sbb
pop
je
stos
fbld
or
adc
adc
cmp
sub
or
or
push
jecxz
hlt
aas
push
add
mov
inc
mov
outs
pop
pop
lds
nop
gs
test
push
out
lds
mov
cmp
lea
js
dec
stos
xorps
inc
jmp
fdivr
out
adc
scas
out
les
popa
push
push
pop
ret
or
test
pop
fistp
and
dec
cmps
adc
xor
fs
aas
or
retf
lahf
shl
or
das
cli
loope
and
sub
xchg
enter
push
add
xchg
inc
push
pushf
xor
sbb
jmp
or
jb
mov
fwait
mov
ss
xor
daa
mov
xor
ins
jns
(bad)
dec
and
fiadd
xchg
push
sbb
les
das
clc
loop
mov
inc
fs
sar
cmp
call
repz
pop
adc
or
and
pop
sahf
dec
or
movs
and
enter
pop
mov
je
push
std
out
aaa
adc
push
xchg
inc
xchg
pop
jp
cmp
fcomp
sub
cmps
mov
pop
adc
shl
jecxz
(bad)
call
ffreep
pushf
xor
sub
push
cmps
ins
ret
mov
mov
xor
shl
fwait
idiv
inc
scas
inc
fwait
inc
cmp
mov
jl
bswap
mov
jae
(bad)
movs
imul
add
hlt
lock
fidivr
dec
imul
gs
mov
cmc
sub
je
or
xchg
popf
push
aaa
adc
js
push
test
nop
(bad)
add
sbb
dec
mov
sub
and
mov
mov
adc
cmp
mov
adc
std
inc
sbb
mov
cli
xchg
(bad)
push
cli
jg
stos
popa
mov
or
xor
xor
(bad)
cli
leave
stc
mov
popf
stos
sub
out
or
pop
jo
test
add
pop
xchg
mov
stos
add
xchg
mov
adc
mov
jne
and
aad
mov
in
jmp
out
ss
mov
inc
cwde
rol
pusha
mov
push
iret
ret
repz
pop
ret
inc
ins
(bad)
push
ret
pop
xchg
pop
test
inc
mov
stc
push
and
add
sub
retf
pop
inc
or
inc
cmps
in
ins
sti
cld
mov
aam
xor
pushw
scas
add
inc
mov
jg
add
inc
test
sbb
jno
sti
data16
movs
and
ds
ror
sub
dec
adc
pop
movs
push
dec
push
fmul
ficomp
lahf
repnz
push
xchg
xchg
sub
clc
in
cmp
pop
popa
pop
fadd
test
push
add
jl
add
out
mov
pop
jle
sbb
cmp
or
sti
bound
jb
adc
inc
sbb
clc
push
bound
mov
rcl
xor
dec
outs
sti
xchg
pushf
in
add
cmp
push
mov
push
mov
sub
adc
rcl
jns
adc
sub
mov
lods
mov
arpl
icebp
add
sbb
repz
pushf
ja
dec
cmps
sar
out
pusha
fistp
mov
adc
add
add
js
xlat
outs
cmp
xchg
push
adc
sub
sub
imul
andps
mov
cwde
mov
das
pop
or
lds
test
int3
je
pop
(bad)
frstor
cmp
ror
xor
dec
sub
cmp
jo
cwde
in
push
xor
xchg
rcr
jmp
in
xchg
jbe
xlat
mov
loop
mov
stc
sbb
idiv
int3
mov
std
pusha
cmps
push
mov
stos
aas
test
call
jns
mov
cmps
pop
jne
jl
pop
popf
mov
and
add
push
bound
mov
sub
js
mov
enter
clc
sbb
dec
test
or
ja
sti
enter
cmp
inc
sub
sti
cld
push
pop
or
ror
push
add
mov
sub
inc
mov
push
mov
std
jmp
push
inc
das
mov
data16
sti
push
xor
rcl
push
fs
or
dec
xchg
dec
push
mov
mov
adc
push
mov
popa
inc
adc
and
jbe
(bad)
(bad)
popa
adc
xchg
pop
cmps
xor
push
dec
pushf
pop
cwde
das
movs
xchg
pop
push
xor
dec
or
and
dec
stos
aaa
scas
dec
inc
shl
jl
xchg
fwait
scas
or
in
mov
nop
mov
pop
jecxz
call
cmp
push
push
shl
sbb
pop
adc
lahf
sbb
jmp
cmp
push
push
daa
mov
cmps
jle
enter
push
jle
mul
inc
xor
out
scas
popa
push
lock
dec
fiadd
daa
mov
mov
(bad)
lock
push
in
mov
enter
(bad)
stos
or
push
dec
dec
cmp
sbb
repz
int
sbb
aam
clc
xchg
aad
ins
pop
cmps
jp
imul
rcl
cmp
data16
mov
mov
mov
mov
jmp
mov
aas
push
stos
shl
inc
mov
mov
aaa
adc
test
ret
lods
(bad)
cwde
dec
(bad)
jmp
xchg
adc
push
or
mov
mov
call
cmp
xchg
icebp
nop
jge
movq
cmp
bound
adc
pop
stos
out
shl
test
inc
jno
adc
hlt
sub
push
xchg
sub
cld
xchg
mov
imul
xchg
shl
popf
cmps
add
loopne
dec
outs
dec
push
jne
repz
add
adc
div
pop
jo
scas
or
jg
mov
cld
mov
lea
cdq
arpl
sub
movs
pop
jo
addr16
xor
pop
sbb
xchg
adc
jnp
mov
ret
cld
cmp
ror
jo
sub
fistp
inc
addr16
ret
shl
mov
mov
or
rcl
ins
xchg
pop
fisub
push
xor
stos
movs
pop
cmp
inc
xchg
popf
fidivr
aas
push
push
cmps
inc
xchg
pusha
jbe
push
inc
outs
mov
fidivr
scas
test
shr
lds
sub
lds
mov
fadd
mov
(bad)
mov
int
pop
bound
mul
pop
adc
fisttp
dec
pop
(bad)
or
sbb
mov
imul
sub
stc
lea
ds
(bad)
stc
ror
cdq
lods
pop
into
xor
add
push
adc
out
add
adc
mov
ret
jns
dec
call
cmp
lods
js
je
in
clc
test
cwde
sub
addr16
pop
push
mov
or
push
xchg
leave
test
mov
and
push
pop
ds
int3
jae
outs
jmp
xlat
repz
ja
loope
sub
mov
xor
aam
and
add
or
adc
sbb
dec
push
jge
push
adc
inc
arpl
mul
xchg
cmp
nop
adc
into
adc
and
ins
mov
mov
loopne
or
pushf
add
xchg
mov
inc
arpl
dec
retf
and
clc
xor
jmp
xor
dec
cmps
or
adc
cmp
sbb
fsub
inc
repnz
push
aam
mov
imul
or
jl
and
loopne
cld
ja
jne
add
adc
push
xor
test
push
adc
xlat
shr
aam
cmc
and
inc
cdq
lds
xchg
ss
(bad)
int
iret
sub
outs
pop
clc
pop
into
mov
pop
lods
call
mov
(bad)
std
push
xchg
or
call
sahf
push
inc
cmovno
sbb
ret
xchg
movs
pop
in
retf
and
pop
inc
js
push
jge
dec
out
aam
stc
jno
add
push
ins
sub
stos
cli
inc
sub
scas
loop
jbe
cli
or
out
dec
cmps
mov
mov
test
mov
dec
fadd
leave
inc
test
stos
pop
xor
push
dec
and
dec
sub
dec
pop
jnp
xchg
adc
mov
stc
in
lds
retf
push
cmp
xor
pop
push
jecxz
xor
das
cmp
das
popa
pop
and
add
mov
(bad)
sub
add
xchg
mul
inc
jno
mov
shl
ret
sbb
rcl
mov
add
xor
xchg
pop
mov
adc
inc
dec
cmps
dec
ret
mov
xchg
std
cmps
add
push
xor
stc
xlat
lea
inc
jno
xor
shl
pop
push
fs
lds
outs
aam
(bad)
(bad)
and
push
rcr
jns
cld
popf
test
jne
push
cdq
loop
js
leave
jmp
cmps
mov
and
retf
xchg
(bad)
sbb
not
std
pusha
mov
retf
xor
or
inc
out
std
xchg
ja
mov
mov
out
dec
adc
mov
adc
push
lea
adc
aad
sbb
daa
(bad)
inc
add
xchg
test
stc
fsubr
push
push
mov
jno
rcl
add
fwait
xor
push
sub
xor
imul
popf
loope
xchg
mov
mov
mov
ror
je
sub
sub
pushf
outs
call
jle
jb
stc
es
add
add
out
pop
pop
sub
dec
jmp
aam
ds
xchg
push
addr16
jge
xchg
aaa
lock
jle
cmp
inc
jmp
jg
in
out
in
pop
mov
aas
jecxz
adc
popf
repnz
push
scas
mov
sbb
sbb
lock
jle
rol
sub
popa
(bad)
and
cmp
mov
dec
leave
xchg
cmp
pop
mov
rcl
fst
mov
adc
inc
clc
inc
or
push
fidivr
adc
pop
fs
cs
in
jmp
cmp
and
cmp
fstp
push
sub
lods
inc
or
cmp
shr
sbb
adc
cmps
add
sar
repz
jns
cmp
xor
scas
fidivr
jp
cs
pop
mov
hlt
pop
aam
in
aam
aaa
rcl
outs
jle
fcomip
in
push
push
jg
push
ss
mov
imul
add
out
icebp
mov
clc
xchg
xor
lods
jns
xchg
ins
jae
lock
and
clc
ins
fistp
adc
ror
jb
inc
pushf
and
or
cmp
and
(bad)
xor
lahf
jne
mov
pop
mov
sar
movs
adc
jmp
sbb
call
stos
push
es
mov
sbb
adc
lods
xchg
inc
mov
loop
call
cmp
mov
ins
jmp
retf
mov
cmp
pop
mul
jns
mov
jbe
sub
mov
test
sub
jmp
call
fadd
xor
int3
enter
std
jns
fstp
pavgb
loop
outs
pushf
lds
push
cmc
xor
xchg
pop
in
dec
icebp
hlt
out
rcr
jp
adc
sbb
pop
int
lds
jl
jb
les
sub
mov
adc
sub
dec
sbb
dec
xchg
test
cld
pop
ss
loop
add
clc
xor
shl
pop
test
mov
dec
sbb
jnp
ret
sbb
jae
cmp
ret
dec
(bad)
cld
jg
ins
inc
xchg
cdq
aas
(bad)
fcmovnb
rcl
inc
xlat
retf
inc
div
inc
adc
add
pop
iret
fild
pop
movs
push
mov
mov
ror
pop
push
test
xor
adc
call
popa
mov
fnsave
inc
and
(bad)
fisubr
in
ror
(bad)
cmp
das
imul
pop
rcl
addr16
in
mov
jge
mov
xchg
sbb
xlat
repnz
dec
pop
fst
(bad)
sub
scas
mov
add
adc
dec
sbb
jmp
(bad)
push
(bad)
imul
inc
inc
fild
xor
outs
and
loope
test
js
(bad)
jge
push
pop
nop
mov
mov
dec
jns
daa
fidivr
push
jl
mov
fcom
rcr
cmp
lods
or
and
mov
or
rol
mov
div
cmps
retf
clc
sbb
(bad)
pop
cs
daa
sbb
mov
jns
fxrstor
push
inc
(bad)
fidiv
lods
dec
outs
mov
out
not
mov
xchg
sbb
dec
adc
(bad)
jne
push
mov
jg
int3
xor
push
mov
xchg
ret
das
sub
inc
enter
test
cld
das
pop
jecxz
loopne
push
mov
retf
loop
xor
mov
out
inc
clc
cmc
and
pop
sbb
xor
sub
out
push
ror
push
outs
inc
inc
mov
cwde
xchg
jbe
sub
pop
mov
les
or
icebp
mov
xchg
neg
pushf
xor
or
es
xchg
mov
and
pusha
mov
jns
pop
bswap
addr16
and
xor
jl
je
int
sub
mov
mov
pushf
loopne
sbb
arpl
sbb
sub
xor
mov
rcr
mov
mov
xchg
mov
shl
imul
xor
mov
jnp
push
stc
aaa
rcl
sahf
mov
add
sub
into
into
out
push
mov
xchg
xor
jp
cli
xor
or
ja
mov
dec
mov
mov
mov
xchg
adc
popf
fstp
adc
in
fimul
fld
or
mov
leave
jg
xchg
adc
dec
fisubr
sub
adc
dec
call
and
fsub
in
in
pop
cli
mov
push
loope
xchg
xor
sub
fidivr
jns
xor
jbe
push
inc
call
dec
jmp
lock
and
sub
mov
mov
add
call
push
mov
or
push
push
test
lds
jecxz
jno
fwait
sbb
adc
out
adc
outs
fisubr
js
jb
ret
pop
push
xlat
mov
xor
jmp
aam
mov
xchg
adc
push
aam
sub
push
sbb
or
rcl
test
and
mov
xor
(bad)
cmp
jmp
ds
pop
movs
push
sbb
adc
jl
xlat
or
sbb
and
std
dec
and
push
and
jns
(bad)
into
pushf
push
mov
fisub
bound
mov
push
mov
nop
adc
jmp
add
mov
inc
pusha
xchg
xchg
les
jae
iret
adc
adc
mov
mov
push
fnstcw
jmp
test
pusha
jno
bnd
pop
push
inc
test
int3
sub
pop
(bad)
(bad)
mov
cdq
xor
or
adc
mov
shr
sub
push
stos
(bad)
fisubr
add
bound
jecxz
mov
add
pop
loope
mov
mov
daa
les
xor
jno
sub
inc
repnz
xchg
mov
ror
fdiv
or
ds
mov
jne
xor
sbb
mov
jmp
inc
test
xor
inc
iret
xchg
add
stc
aaa
cdq
fadd
and
stos
push
stos
cmp
imul
mov
test
js
aaa
nop
stc
outs
push
loop
adc
nop
xor
lds
inc
mov
mov
dec
mov
imul
mov
div
jns
enter
xchg
in
dec
push
or
lea
pop
lock
(bad)
imul
cld
jbe
jae
arpl
repnz
sub
push
sbb
les
pop
in
ja
cmp
cmps
mov
xor
fwait
daa
clc
iret
adc
fsub
push
adc
call
jmp
cld
pop
(bad)
not
cmp
out
mov
fistp
mov
mov
mov
xchg
pop
test
and
xor
ja
jle
xchg
in
popa
add
pop
enter
fdivr
xor
add
pop
(bad)
dec
and
jmp
mov
cmp
test
mov
or
leave
test
cmp
dec
aad
push
aam
mov
mov
mov
xor
cmp
adc
mov
ss
cdq
jno
kmovb
in
xchg
push
js
mov
(bad)
(bad)
movs
mov
xor
jnp
sbb
gs
push
js
not
sbb
xchg
cmp
stos
movs
mov
pushf
mov
jno
pop
je
pop
push
dec
js
lods
ds
test
push
xchg
or
add
mov
ret
jp
pop
push
cmps
out
add
mov
shr
sub
xor
dec
(bad)
aam
cmp
aas
jb
(bad)
stc
pop
jl
and
dec
aas
scas
ret
movs
leave
mov
cmps
cmp
cmp
call
into
xchg
inc
(bad)
xchg
jnp
adc
pop
ror
add
aaa
mov
mov
dec
sub
dec
(bad)
jmp
jbe
loopne
cdq
mov
mov
dec
je
mov
cmps
inc
sahf
daa
hlt
and
pusha
cwde
inc
sub
gs
inc
add
and
mov
mov
sub
add
in
cmc
popa
inc
test
add
xor
iret
adc
add
and
dec
sub
outs
ret
fnsave
mov
xor
daa
or
and
add
jp
push
retf
ins
cld
in
add
fadd
sbb
(bad)
retf
jl
mov
push
test
push
jne
popf
xchg
clc
sahf
mov
or
add
sub
push
jge
js
sbb
mov
adc
or
and
retf
fld
loope
out
sbb
or
pushf
or
mov
push
push
icebp
mov
cmp
out
fucomi
out
nop
jae
std
mov
mov
std
into
int3
(bad)
add
add
mov
mov
rcr
(bad)
cwde
mov
and
mov
je
sbb
clc
dec
ret
push
das
ins
pop
cmc
push
inc
cmp
sub
sbb
cs
inc
mov
adc
xor
sbb
popf
loopne
ret
push
mov
mov
jg
arpl
lods
in
gs
or
das
adc
mov
js
jl
lahf
data16
test
xor
(bad)
idiv
cmp
xchg
push
xchg
and
sahf
xor
xchg
jg
into
gs
jecxz
pop
ds
inc
cmps
pop
cli
stc
movs
pop
fiadd
scas
xor
add
dec
inc
cmp
call
jmp
fxch
cmp
lods
arpl
cwde
scas
ds
movs
ffreep
mov
iret
(bad)
xor
push
jmp
dec
stc
inc
dec
lods
cmp
lds
aaa
dec
dec
jnp
mov
dec
sub
add
jmp
js
mov
mov
retf
lods
movsx
fwait
stc
loope
(bad)
adc
daa
in
dec
cwde
addr16
sbb
(bad)
and
outs
iret
mov
call
out
ins
or
mov
call
mov
cmps
out
dec
aam
push
mov
mov
fdiv
daa
int
xchg
xchg
jae
ds
mov
fist
pop
ds
rcl
test
mov
(bad)
loopne
inc
dec
dec
scas
inc
in
loop
mov
xchg
cs
imul
pop
ins
cmps
mov
mov
dec
xor
mov
call
cmp
adc
ins
mov
sub
dec
cmp
or
cmp
popa
jp
mov
xor
mov
or
inc
fisttp
imul
sar
dec
pop
push
(bad)
jae
or
pop
xchg
(bad)
into
es
jp
push
das
mov
neg
pop
xchg
push
dec
mov
cmp
jmp
cdq
adc
xchg
jmp
retf
(bad)
cmp
clc
pop
add
cmp
fisttp
cmp
dec
sbb
sbb
retf
sub
add
jle
xchg
xchg
iret
sub
call
pop
std
scas
adc
loope
cmps
pop
and
sbb
jle
mov
jne
jle
sub
fld
shr
and
xchg
outs
inc
sub
dec
jno
fist
inc
inc
jne
mov
xor
jg
dec
cs
sub
mov
fnsave
sbb
fs
dec
repz
out
imul
mov
movs
lods
ins
outs
cwde
dec
dec
imul
loopne
faddp
fcmovnu
(bad)
aas
adc
cs
imul
add
pusha
xchg
retf
popf
push
cwde
jp
xchg
jg
mov
xchg
inc
add
aas
add
cmps
xchg
pop
and
ret
pushf
je
pop
mov
mov
in
mov
xor
push
out
sub
pushf
nop
mov
xor
fsubr
lods
jmp
jb
ins
push
enter
push
lock
xchg
(bad)
xlat
dec
lds
nop
add
jbe
rol
push
call
mov
xchg
push
call
cmp
pop
mov
mov
movs
jmp
aam
lods
dec
inc
icebp
div
idiv
dec
sbb
mov
xor
call
and
cmp
or
jno
stos
and
mov
gs
add
pop
sub
or
mov
shr
push
cmps
or
inc
add
jnp
sbb
pop
ror
data16
cmp
xchg
xor
mov
inc
cmp
loopne
cmp
cmp
mov
sub
sbb
xor
dec
and
dec
mov
add
push
jecxz
ror
add
cli
sti
in
xlat
repz
psubsb
mov
mov
sbb
jle
js
sub
fsub
pop
jl
sub
fisttp
dec
imul
lock
jl
mov
std
popf
jnp
pop
ja
inc
inc
push
jge
push
(bad)
push
jo
mov
iret
inc
test
fcom
cmp
push
cmp
xchg
mov
adc
into
jmp
sti
imul
lds
xchg
call
fwait
pop
xor
fucomp
mov
cmp
pop
or
adc
int
lds
pop
mov
aaa
scas
arpl
cmc
sub
or
add
pop
dec
jbe
ja
mov
lock
movs
cmps
scas
ins
ins
inc
js
cwde
push
mov
leave
pop
ret
jne
lea
push
cmp
cmps
(bad)
pop
mov
fild
lods
jne
fisttp
inc
fwait
mov
scas
(bad)
and
jle
xchg
ins
pushf
clc
iret
jl
jge
sbb
imul
cmp
adc
fisub
pop
jnp
xor
(bad)
rol
cld
fs
jb
aas
stos
repnz
cmp
add
or
mov
mov
mov
sar
mov
in
rol
inc
(bad)
ror
mov
pop
(bad)
mov
sub
jne
inc
inc
inc
(bad)
test
sub
mov
xchg
dec
in
lods
jp
mov
xchg
push
in
push
xor
or
pusha
cmp
jmp
push
xchg
mov
or
or
jmp
xor
in
cmp
xor
popf
loope
sbb
ret
xchg
sbb
or
out
imul
call
jnp
xor
inc
mov
test
xchg
test
imul
cld
cld
xor
cmp
xchg
push
int
inc
jbe
pop
pop
mov
sub
jmp
push
jle
data16
fmul
cmp
push
leave
dec
lea
xchg
and
in
lea
push
or
mov
xor
sahf
jmp
pop
mov
mov
or
pop
pop
xchg
push
sub
sbb
rol
xchg
push
jmp
dec
imul
popa
or
push
in
lds
sub
jecxz
mov
data16
sti
push
mov
(bad)
fst
mov
push
cmp
xchg
xor
ds
fmul
adc
add
imul
imul
pop
jecxz
retf
inc
(bad)
cli
mov
push
sub
(bad)
std
cmps
mov
add
mov
dec
jmp
xor
jb
pop
aam
ret
mov
or
pop
sub
mov
push
scas
sub
fwait
out
or
(bad)
sbb
in
xchg
sbb
je
push
out
mov
add
(bad)
in
sub
cmc
sub
xchg
clc
sub
test
fdiv
stc
std
or
sub
test
cwde
push
push
xlat
mov
adc
ficom
dec
fs
inc
cmps
xor
jae
inc
sahf
iret
push
xlat
sbb
iret
push
out
sbb
cli
fwait
cmps
ror
lock
fincstp
adc
movs
mov
pop
daa
mov
mov
mov
jo
adc
or
jp
fistp
sbb
out
sar
fstp
mov
sbb
(bad)
xchg
jg
push
mov
mov
pop
mov
sbb
dec
dec
call
popa
outs
adc
lahf
sub
xchg
or
leave
push
inc
sbb
aaa
push
in
data16
sti
sub
lods
adc
xor
mov
cwde
mov
call
push
(bad)
loope
das
les
scas
inc
mov
xchg
(bad)
daa
call
sbb
jl
sbb
out
loope
lds
sub
mov
inc
lahf
mov
pop
pop
movs
xor
mov
lds
mov
mov
pop
cmps
push
add
fbld
paddd
mov
or
jmp
mov
outs
hlt
imul
sbb
ret
lds
pop
ja
cli
cmp
int
cmp
push
js
dec
inc
push
int3
mov
ret
mov
or
and
jb
js
or
mov
test
push
mov
cmps
rcl
test
cmp
aaa
jg
sbb
lahf
inc
aam
pop
cmc
pop
mov
mov
leave
dec
dec
(bad)
jmp
adc
mov
mov
and
retf
test
push
jecxz
push
div
into
stos
fwait
dec
aas
sbb
aas
sbb
icebp
hlt
sbb
or
loop
daa
(bad)
fucomip
pop
popf
mov
add
lea
mov
fwait
scas
imul
int
dec
adc
pop
jmp
add
lds
bound
sub
mov
inc
mov
xor
mov
ins
popa
jle
mov
push
mov
mov
in
mov
cmp
test
inc
xchg
xlat
fmul
(bad)
iret
sbb
mov
aas
(bad)
test
fcmovne
adc
adc
push
push
leave
aad
inc
repnz
mov
jecxz
jno
loope
(bad)
jo
adc
nop
call
inc
std
jmp
inc
ret
outs
jge
lock
or
and
pop
push
jb
sbb
inc
adc
ins
jo
push
ins
pop
mov
xor
xor
cmps
je
xor
or
mov
inc
jno
push
sub
aas
ja
lds
fmulp
jmp
pusha
and
jmp
adc
sub
lock
scas
cwde
out
js
and
pop
jg
fnstcw
cmp
jnp
jnp
dec
xlat
xchg
(bad)
adc
mov
lods
call
repnz
pop
fidiv
shl
xor
mov
cmp
ds
fsubr
adc
mov
call
arpl
aam
jno
arpl
or
sbb
and
lahf
je
or
fsub
popa
das
scas
jg
fisub
movs
sub
mov
repz
mov
leave
rcr
add
dec
outs
push
ret
and
hlt
pop
adc
out
adc
das
int
test
shr
pop
movs
add
mov
push
leave
shl
pop
ficom
and
and
cmps
xor
jg
cmps
push
pop
xlat
mov
imul
and
mov
adc
and
jmp
pop
ds
push
xchg
sbb
mov
loopne
xor
fisttp
cmp
cmp
fmul
dec
gs
fist
cmp
pusha
cmp
or
push
test
add
mov
jmp
popa
and
std
cmp
jnp
(bad)
mov
ins
xlat
adc
push
gs
movs
sbb
lods
fdivr
in
movntps
aad
cwde
hlt
ds
loopne
cmps
and
sub
stos
retf
jmp
cmp
adc
push
mov
les
xchg
push
jmp
nop
pusha
inc
sub
mov
pusha
sub
cmc
call
inc
pushf
xchg
cs
lahf
movs
mov
push
mov
(bad)
aaa
inc
rcr
outs
mov
adc
sub
in
into
jp
or
(bad)
stc
dec
rcr
lods
xor
jno
(bad)
push
sti
jecxz
mov
xor
mov
bound
and
xchg
rol
or
imul
cwde
call
and
pop
std
clc
xchg
repz
mov
ret
cli
cmp
imul
fild
(bad)
sub
mov
inc
sub
arpl
dec
sub
in
out
stc
xchg
sbb
loope
or
scas
pop
pop
mov
mov
iret
leave
mov
out
xchg
loop
les
(bad)
mov
int3
or
push
in
movs
lods
and
mov
call
cld
push
nop
jns
mov
fmul
dec
inc
xchg
inc
(bad)
sub
ss
inc
add
imul
call
int
and
inc
shl
cmps
push
dec
adc
and
lahf
bound
push
mov
dec
pop
out
mov
mov
jl
popf
in
popf
(bad)
in
in
and
dec
leave
pop
add
cwde
or
jg
int
sar
sub
rcr
int
adc
fwait
mov
aam
sahf
jmp
mov
aas
add
add
cmp
push
add
xchg
jge
popf
sti
pop
cmc
dec
or
dec
loop
in
push
call
cld
(bad)
mov
mov
nop
dec
push
and
(bad)
(bad)
jb
out
je
dec
aad
sbb
mov
(bad)
lahf
addr16
jo
push
jo
mov
and
call
mov
aad
xor
ja
adc
cs
sub
fistp
scas
or
pushf
pop
and
or
(bad)
sub
jmp
outs
add
cmp
arpl
ja
jmp
push
xlat
inc
lock
out
fnstcw
dec
mov
adc
adc
mov
dec
adc
rcpps
out
call
scas
dec
jns
repz
loopne
fsub
and
call
mov
test
int
push
xor
outs
mov
push
xor
dec
sub
jle
push
aaa
jb
xor
jb
mov
imul
adc
inc
sub
ja
outs
jle
inc
xchg
or
ret
or
dec
movs
outs
or
inc
or
in
dec
popa
ja
stc
frstor
lds
mov
ins
mov
mov
or
iret
shr
fs
repz
scas
push
xor
dec
retf
sbb
dec
sbb
cmp
inc
push
arpl
ja
and
dec
xor
mov
imul
iret
dec
mov
outs
in
push
in
xor
in
test
mov
lea
iret
or
ss
bound
mov
cmc
jns
(bad)
repz
retf
push
scas
fwait
daa
mov
pop
pop
out
or
test
loop
sahf
ja
mov
inc
cdq
cmps
test
leave
adc
outs
sub
stc
pop
lea
aaa
in
mov
cmc
sahf
xor
shl
bound
sbb
pop
xchg
shr
mov
sbb
mov
or
fucomi
loop
in
mov
aas
mov
icebp
test
movs
(bad)
das
mov
dec
daa
mov
and
xchg
push
mov
(bad)
fnstenv
mov
cld
movs
cmp
xchg
push
cmp
mov
push
outs
clc
mov
push
inc
call
sub
pop
xchg
ins
jnp
ss
sub
xchg
inc
lea
mov
push
scas
adc
test
(bad)
(bad)
dec
add
hlt
jg
std
mov
pop
(bad)
repz
cmp
lds
mov
jo
add
mov
out
sub
xchg
pop
pop
jne
xor
add
retf
ins
shl
sbb
push
(bad)
xchg
push
mov
sub
call
in
fs
not
or
(bad)
fimul
mov
cwde
scas
arpl
daa
xor
cwde
adc
fild
cmps
push
pop
adc
xchg
push
pushf
adc
hlt
pop
hlt
cwde
mov
jo
mov
push
cmp
not
xchg
add
adc
jno
mov
jmp
push
int
and
std
xchg
out
push
aas
pushf
xchg
(bad)
fadd
out
push
pop
icebp
mov
out
pushf
adc
pop
and
fidiv
mov
ror
adc
cmp
into
hlt
pop
ret
aad
aam
sub
aad
and
or
dec
mov
adc
daa
stc
fdiv
mov
jl
adc
or
stos
imul
fcom
out
fsubp
inc
repz
cmp
lock
sbb
out
mov
add
scas
movs
push
sub
jne
neg
lods
es
mov
call
push
sbb
out
cs
popf
cld
es
sti
test
repz
adc
jmp
dec
jno
pop
in
scas
jae
ja
sbb
jae
dec
fild
cmp
cmp
fwait
and
(bad)
fstp
push
xchg
shl
add
in
fnstcw
int
mov
mov
icebp
inc
and
test
jmp
mov
dec
scas
add
inc
pushf
fs
ror
cmp
adc
adc
push
ds
std
add
inc
push
in
cmp
push
mov
cmp
(bad)
inc
ins
daa
outs
cmp
xchg
mov
mov
or
sub
jmp
stc
es
test
cmc
je
or
fs
fwait
cmp
and
ss
push
bound
dec
mov
mov
das
pop
stc
les
pop
lods
(bad)
lods
jbe
fwait
inc
jb
rcl
or
imul
pop
xchg
push
inc
inc
cld
ret
in
arpl
es
push
loope
lock
jo
pop
jp
(bad)
xlat
inc
xor
push
push
jae
xchg
rol
je
ffree
xchg
jno
addr16
outs
xchg
jmp
sub
and
aas
push
mov
xchg
shl
xchg
dec
xchg
add
or
push
pop
and
shl
les
xlat
mov
sub
and
loope
mov
call
iret
jns
(bad)
lock
push
lods
cmp
or
mov
cmp
lahf
jno
popf
test
xchg
xchg
and
lods
icebp
cmp
jle
test
mov
pop
fstp
ror
jae
add
ja
pop
out
add
aam
aas
rcr
in
pop
pushf
mov
mov
out
sbb
jb
mov
xor
xchg
iret
mov
scas
cmc
push
(bad)
cmp
cwde
outs
sbb
pop
cs
dec
or
push
fstp
and
repnz
lahf
test
adc
xchg
out
sti
jns
xor
sub
shl
mov
xor
imul
fadd
cdq
sar
pop
dec
lock
mov
mov
out
sub
xchg
inc
jne
dec
es
add
aad
cmps
sbb
dec
and
je
mov
xor
or
movs
fwait
icebp
(bad)
and
fnstenv
xor
inc
lods
cdq
pop
imul
pop
cmp
push
neg
(bad)
inc
pusha
inc
inc
das
cmp
mov
sub
rol
cmp
push
sub
movs
cld
mov
das
(bad)
fimul
pop
jge
adc
xchg
imul
push
jp
mov
xchg
inc
xor
mov
stos
pop
es
push
add
std
jl
xchg
dec
bnd
jge
stos
xchg
inc
sub
mov
inc
pop
jl
dec
xchg
mov
mov
push
or
inc
out
sar
jns
cld
push
add
inc
int3
sub
xchg
jp
lock
gs
mov
dec
xchg
ret
iret
adc
push
sub
sub
mov
xchg
shr
pushf
out
sar
mul
aas
js
ja
lahf
in
rcl
retf
popa
xlat
xchg
bound
(bad)
push
jmp
xlat
sub
gs
pop
out
xchg
push
(bad)
cmps
jae
push
and
jno
push
dec
and
inc
dec
pop
xor
inc
call
fcomp
xchg
aam
and
jge
fsubr
xor
pop
cs
ds
xor
jb
cmp
jns
test
lods
and
test
add
mov
movs
or
adc
pop
fldcw
xor
jns
les
adc
or
retf
fwait
shl
mov
lods
or
push
fdivr
ins
cmp
push
mov
sub
fs
fld
ja
enter
outs
out
ins
pop
int3
fstp
dec
inc
or
call
icebp
dec
or
out
jg
ror
(bad)
pop
fnstenv
and
in
leave
xchg
imul
sub
add
and
cdq
fs
ss
and
movs
xor
mov
push
test
mov
fdivr
xchg
dec
std
push
dec
sub
mov
gs
xor
ret
fwait
push
aad
cmc
pop
xchg
xchg
test
mov
fnstcw
push
std
cdq
into
daa
out
cmps
push
mov
dec
add
lock
stc
xchg
pop
inc
cmc
or
cmc
shl
pop
int3
lds
mov
jae
stc
js
lods
mov
outs
sub
cmps
or
aas
fisttp
movs
jle
adc
rol
sbb
xchg
cld
call
int3
adc
dec
call
jne
pop
xchg
xor
shr
nop
jl
test
xor
pop
jae
and
lods
cmps
mov
repz
push
jp
and
jne
shl
scas
sub
cld
mov
dec
xacquire
mov
inc
fcmovnu
cdq
and
outs
cdq
call
xchg
fbld
test
cmp
aam
mov
dec
sub
and
(bad)
retf
jge
adc
mov
outs
cwde
loop
pop
leave
push
pop
cmps
add
cmp
sbb
in
adc
(bad)
xor
adc
pop
add
add
add
test
ss
scas
add
mov
push
mov
and
xchg
stc
push
xchg
pop
int3
add
sar
sar
lahf
cs
jne
int
mov
or
imul
xor
mov
jmp
out
dec
ins
sahf
leave
mov
xchg
lahf
js
xchg
mov
and
mov
icebp
mov
inc
call
xchg
sahf
jb
stos
rol
lock
call
mov
iret
ja
mov
loope
pop
pop
aam
mov
push
or
lods
dec
mov
mov
dec
jns
mov
sub
daa
cwde
add
sbb
fiadd
and
sub
adc
clc
dec
mov
add
pop
xor
mov
mov
imul
push
mov
nop
mov
ret
idiv
jb
jns
xor
jno
adc
push
mov
cmp
jb
xchg
adc
test
xchg
in
loop
int
das
fisttp
sbb
sbb
rcl
icebp
cmps
xlat
lds
cmp
mov
fadd
clc
lahf
std
jl
lods
sbb
xor
push
jns
loope
dec
enter
xchg
mov
sbb
and
lea
xchg
in
popa
mov
cmps
mov
ins
retf
shl
hlt
mov
fcmovnbe
dec
or
sub
pop
sar
and
fs
cmp
(bad)
call
fnsave
pop
pop
je
das
pop
sbb
mov
hlt
jge
and
aaa
lea
add
ja
ins
xchg
int
dec
sbb
sar
cmp
aad
cdq
mov
adc
adc
jmp
dec
fidiv
and
fstp
cmp
add
lock
pop
jp
mov
shl
into
adc
fs
dec
in
cmp
mov
add
xchg
clc
(bad)
pop
lods
mov
call
add
ror
cs
imul
shr
mov
cmp
(bad)
scas
neg
dec
ins
sbb
mov
xor
jge
ffree
cmp
jnp
fwait
or
cmp
sub
outs
or
in
daa
push
imul
in
pop
loope
fcom
jp
inc
mov
stos
movs
enter
xlat
mov
adc
ja
(bad)
iret
pop
mov
std
jmp
push
xchg
loopne
outs
push
dec
cmp
clc
and
repz
outs
push
fsubrp
push
mov
pop
les
push
aad
loope
dec
leave
dec
fbld
movs
fcomp
push
shl
add
mov
mov
mov
cmp
fwait
mov
xor
in
pop
out
popa
dec
cs
mov
jecxz
inc
test
and
fld
xchg
repnz
inc
and
popf
fnstenv
xchg
or
fimul
aad
and
jns
mov
xchg
mov
pop
gs
mov
fimul
jnp
out
pop
jbe
movs
and
retf
sub
js
(bad)
lock
into
sbb
xchg
in
xor
das
sbb
pop
scas
or
mov
ja
sbb
jmp
sahf
or
xor
scas
pop
jnp
xchg
jbe
loope
jnp
scas
shl
xor
sbb
or
xor
in
adc
dec
jo
push
aaa
(bad)
mov
in
mov
mov
xor
adc
addr16
mov
xchg
adc
adc
mov
mov
dec
mov
pop
loop
std
push
jle
cld
mov
daa
movsx
aad
pop
iret
sub
mov
xor
jbe
sbb
and
push
add
and
push
repz
cmp
add
scas
mov
test
mov
xlat
sub
scas
out
cld
pop
jne
add
jle
dec
js
out
call
(bad)
jg
dec
cmc
enter
loopne
inc
cwde
xlat
cld
(bad)
cwde
mov
fist
jp
add
imul
xor
and
sub
cli
xchg
ss
push
test
and
adc
jmp
cmp
jmp
fist
or
js
jns
xor
test
adc
push
aaa
dec
shl
cs
pop
scas
sbb
cmp
mov
leave
pop
pop
fcmovu
lds
mov
mov
push
pop
call
in
int
iret
inc
push
sar
add
push
lods
cmp
retf
and
es
cmp
aad
ds
fucomp
mov
outs
stc
fisubr
xor
xchg
lds
sahf
jp
xor
cmc
int3
or
pop
lods
nop
dec
lahf
jecxz
lea
sahf
loop
fiadd
add
fidiv
sub
jg
push
std
rol
(bad)
jmp
jmp
xchg
lock
ins
ss
or
int
call
popa
inc
push
ret
xor
popa
sbb
push
fs
aaa
mov
out
cmp
xor
(bad)
loope
cli
or
and
addr16
mov
stos
xor
lock
cmp
xchg
call
and
cmps
and
into
fidivr
jbe
xchg
shl
loop
fsub
clc
pop
add
leave
ret
mov
nop
mov
int3
push
aas
push
les
nop
and
pop
pop
jbe
cmp
xchg
cdq
add
xor
sbb
cmp
adc
mov
jg
sbb
dec
mov
mov
mov
repz
xchg
stos
xchg
les
or
xchg
cmovg
pop
mov
cmp
and
inc
or
cdq
cmp
sub
lahf
(bad)
imul
stc
popf
shr
mov
shl
sbb
mov
inc
fidivr
cmps
fdiv
xchg
stos
mov
test
sub
sub
sub
out
shl
data16
sub
xchg
jnp
in
into
push
xchg
in
pop
push
jmp
jns
dec
push
icebp
mov
sbb
lods
fs
cmp
dec
(bad)
ja
cli
lods
int3
mov
cwde
mov
sub
sub
rcl
mov
xchg
jmp
fild
pop
jo
pop
dec
ja
add
pop
pop
mov
test
dec
popa
pop
stos
push
jle
pop
jle
(bad)
and
cmp
push
or
dec
xchg
retf
add
adc
add
retf
dec
neg
push
outs
jmp
enter
inc
push
pop
adc
mov
jg
and
push
mov
js
je
mov
jecxz
mov
mov
cwde
mov
out
pop
adc
lea
retf
ret
pop
push
hlt
mov
out
fistp
sub
push
adc
or
je
or
jae
faddp
cli
outs
dec
push
sbb
cmp
imul
cld
(bad)
jg
push
push
ret
loopne
pop
add
mov
mov
mov
lods
cmp
xchg
(bad)
dec
mov
push
(bad)
hlt
pop
cdq
jns
add
les
xor
mov
add
scas
push
push
test
out
(bad)
out
mov
stos
das
xchg
(bad)
addr16
test
(bad)
dec
mov
mul
pop
sub
mov
pop
cmp
ds
fadd
add
(bad)
mov
xor
imul
ins
cmp
jp
push
gs
loope
sub
sbb
(bad)
cmp
dec
add
xchg
dec
ins
xchg
into
and
and
aas
retf
mov
jmp
pusha
add
add
inc
cmps
leave
ret
data16
arpl
jle
or
sbb
sub
adc
add
pop
or
mov
pop
cmp
arpl
sbb
mov
ret
popf
test
shl
rcl
mov
ins
dec
rol
inc
mov
and
lock
dec
aam
pushf
mov
popf
retf
xchg
shl
psllw
push
push
sub
jno
adc
cli
int
and
jns
fimul
jmp
adc
out
add
test
mov
mov
mov
mov
(bad)
nop
and
daa
jmp
push
mov
jge
inc
push
xor
int
jp
enter
add
or
daa
repnz
(bad)
iret
ficom
xor
xchg
xor
repnz
ins
daa
sbb
xchg
mov
retf
in
adc
jle
shl
das
pop
sbb
and
xchg
mov
loopne
sbb
jb
xchg
(bad)
ins
sbb
scas
aad
push
pusha
dec
iret
das
bound
xchg
pop
sbb
jns
xor
movs
fs
in
jno
adc
in
and
pop
cmps
leave
clc
mov
inc
not
call
test
ins
fnstsw
ins
mov
retf
pushf
mov
cdq
jbe
pop
sub
xor
jb
add
repz
push
xor
inc
pushf
push
dec
sub
ret
sbb
mov
push
cld
sbb
lds
movs
or
push
sahf
jp
cmps
and
jbe
mov
cld
ret
and
adc
mov
pop
dec
shr
loop
push
aaa
lock
ds
inc
sub
jg
or
xchg
cmps
xchg
mov
push
ins
mov
and
(bad)
sub
hlt
mul
dec
out
and
fisub
add
xchg
cmp
mov
cmps
sub
aas
test
hlt
xchg
aam
mov
or
imul
(bad)
mov
cld
push
inc
ret
dec
ins
mov
mov
enter
mov
and
in
inc
jp
adc
cmp
and
or
inc
adc
push
or
stos
sub
das
call
add
mov
inc
fadd
ret
jmp
sub
cmp
scas
movs
push
lock
mov
cld
ja
test
in
xchg
and
fbstp
out
mov
repnz
outs
mov
push
mov
test
sub
and
fsubr
movs
popf
ss
div
jnp
enter
lgs
mov
int3
ja
mov
outs
xor
imul
ds
out
and
call
cmp
jmp
outs
in
sub
loopne
clc
out
sub
sbb
jg
cmp
add
retf
pop
mov
fstp
dec
stos
and
es
fldcw
push
call
arpl
test
movs
popa
sbb
(bad)
(bad)
and
sbb
les
fs
inc
and
push
push
jl
sub
push
out
hlt
mov
mov
sub
rcl
xor
and
stos
and
shl
pop
mov
xchg
stc
nop
lock
rcl
dec
repnz
out
aad
xor
push
aam
push
push
scas
data16
aaa
adc
push
xchg
jo
cmp
push
int
jo
scas
sbb
icebp
xchg
and
loope
mov
mov
pop
sub
dec
cmc
push
aam
fimul
or
out
idiv
data16
sbb
push
push
mov
mov
test
push
popa
ficom
dec
popa
repz
dec
aaa
xor
ror
dec
mov
into
mov
mov
enter
pop
mov
pop
jg
xchg
lods
dec
push
and
mov
pop
les
push
les
push
stos
cli
push
repz
sar
adc
test
mov
fwait
(bad)
hlt
ret
sub
pop
sbb
jo
push
dec
icebp
(bad)
cdq
mov
and
sbb
add
repnz
mov
xchg
lods
bound
pop
retf
mov
or
jne
pop
xchg
pop
movs
ficom
sbb
shl
adc
daa
outs
push
cmp
loopne
aas
fistp
in
leave
movs
leave
fst
jp
sub
mov
push
mov
inc
in
push
loope
inc
adc
lods
xor
mov
dec
enter
inc
mov
dec
dec
pop
pop
repz
mov
jb
dec
push
mov
std
push
cmc
inc
push
loope
xchg
sbb
xor
xchg
(bad)
push
loop
sar
cmp
setge
xchg
push
call
out
fs
nop
sbb
pushf
ja
out
rcr
or
push
call
shl
jg
hlt
inc
dec
in
les
sbb
call
imul
mov
adc
je
aas
test
call
ds
push
adc
outs
jmp
cmps
jmp
pushf
int
push
cpuid
(bad)
loopne
jl
js
fucomp
push
and
out
jb
mov
js
mov
out
xlat
xor
fucomp
cmp
jo
or
inc
mov
aad
test
fild
cmc
pop
xor
je
leave
add
inc
inc
retf
ja
and
pop
add
lea
adc
repz
outs
add
stc
inc
or
in
mov
jle
inc
jle
test
mov
adc
and
scas
push
js
add
out
pop
sub
addr16
mov
pop
mov
stc
jecxz
call
aam
and
or
mov
push
sbb
mov
pop
xchg
fwait
or
jp
mov
pop
fild
or
lahf
iret
sti
xlat
test
inc
mov
jb
sub
ss
jg
pop
or
add
fdivr
adc
fmulp
das
fmul
and
popa
push
xchg
cmp
cmp
outs
pop
out
sub
cwde
jge
mov
mov
pop
dec
pop
std
xor
push
test
cdq
imul
jge
out
push
outs
mov
pop
(bad)
mov
test
shr
jle
and
xor
mov
xchg
rcr
outs
sbb
push
enter
fptan
jns
adc
ret
fdiv
inc
retf
jmp
movs
fs
jne
cdq
add
aad
dec
add
sbb
stos
cmp
pop
inc
jbe
adc
pop
push
lods
setb
jo
loop
adc
add
lahf
rcl
gs
mov
sub
int
xor
std
sti
in
sahf
mov
or
repz
jnp
aaa
ss
mov
(bad)
add
ss
pop
jmp
sub
lahf
icebp
and
(bad)
hlt
adc
or
neg
shl
cmp
jns
xchg
jp
arpl
mov
cmps
inc
inc
xchg
lods
outs
(bad)
push
mov
adc
mov
ja
dec
int
pop
xchg
fdivr
or
pop
cmp
lock
out
sub
xlat
push
sub
or
int3
addr16
pop
add
pop
and
mov
mov
scas
jno
cmp
mov
jmp
pop
xor
jnp
dec
popf
jecxz
icebp
push
sbb
retf
jl
pop
xor
mov
sbb
pusha
adc
aam
sub
sub
cmp
jno
xchg
push
scas
adc
fidivr
mov
push
xacquire
inc
in
nop
lods
jnp
sub
setbe
add
xchg
adc
mov
add
pushf
push
les
mov
fcmovnu
mov
sahf
xchg
xlat
into
jmp
cmp
loope
mov
jp
add
ror
scas
call
repz
ret
or
inc
push
sub
mov
sti
mov
aam
jo
cld
or
dec
out
dec
push
aad
mov
repnz
adc
push
inc
dec
jmp
imul
dec
scas
jnp
adc
call
push
xor
loop
aam
push
cmps
pop
fs
xchg
ffreep
jbe
cwde
test
lock
mov
movs
addr16
sbb
jl
out
daa
adc
std
jp
rol
lock
jno
jmp
nop
xor
(bad)
and
and
xlat
(bad)
and
scas
mov
test
xor
mov
xchg
cmp
ja
(bad)
pop
push
stos
cmp
test
jle
pop
xor
jmp
mov
arpl
jg
jno
xchg
or
ret
sub
popf
frstor
loope
add
push
cdq
mov
push
xor
hlt
test
jmp
gs
and
adc
retf
iret
cmps
cmp
mov
xor
sar
xlat
in
imul
bt
cmc
lock
sbb
pop
fstp
mov
xchg
adc
mov
add
add
jg
xchg
or
jae
movs
jp
test
sub
pop
inc
mov
jae
adc
ds
mov
repz
sahf
cmps
rcl
jne
nop
imul
out
mov
jnp
dec
pop
pop
fs
repz
cld
clc
in
inc
mov
pop
pop
sub
icebp
xchg
lods
inc
inc
mov
ss
cmps
inc
std
stos
lahf
push
xchg
sub
push
unpcklps
lea
xchg
icebp
sub
fs
dec
dec
cmc
je
cmp
(bad)
aad
ds
call
arpl
out
and
add
mov
mov
pop
jno
inc
out
cmc
jnp
xchg
sub
pop
xor
imul
inc
retf
(bad)
pop
add
(bad)
fcomp
xchg
or
pop
mov
sbb
mov
rcl
inc
lock
xor
aam
inc
call
jae
fisttp
fst
stos
xor
push
mov
xchg
mov
aas
xor
xor
in
sub
inc
call
test
aas
gs
movs
(bad)
and
sti
fidivr
add
sub
mov
sbb
xchg
or
out
lods
dec
or
and
jg
addr16
push
test
das
mov
or
dec
adc
mov
add
scas
movs
cmp
xchg
mov
lods
mov
je
call
fld
pop
push
lock
add
enter
out
mov
int
or
and
adc
sar
dec
icebp
xor
sub
paddsw
es
sub
mov
push
mov
xchg
mov
das
push
push
push
dec
ins
enter
xchg
ins
push
retf
jns
iret
and
shl
sbb
mov
pop
je
(bad)
in
dec
bound
call
mov
mov
cli
stos
test
xor
pop
cmp
in
mov
jmp
hlt
imul
push
cs
xor
pop
sbb
scas
xor
xlat
ror
adc
dec
dec
cmp
retf
repz
out
leave
leave
retf
push
dec
push
adc
scas
aaa
sub
fimul
xchg
add
stos
addr16
test
cld
adc
jns
sbb
lods
stos
dec
mov
repz
jno
xchg
sbb
and
in
xor
xchg
or
sbb
xor
movs
push
pop
inc
stos
xlat
shr
or
xchg
frstor
cld
jmp
mul
jno
outs
adc
push
shl
adc
mov
ins
mov
push
dec
cmps
(bad)
retf
mov
clc
shr
fsqrt
xlat
jb
xchg
out
sbb
inc
fld
fiadd
fisub
imul
iret
mul
ins
push
sbb
mov
sub
pop
sbb
popf
mov
inc
mov
mov
dec
(bad)
cmps
(bad)
add
xlat
dec
pop
movs
push
je
xor
test
pop
cmps
and
push
add
sub
sbb
inc
test
stos
xchg
push
retf
mov
loopne
nop
outs
add
mov
cmp
xor
push
pop
pop
add
cmp
ss
aad
inc
or
repz
std
out
xchg
enter
out
sbb
push
push
jae
ror
test
aad
les
scas
rcl
mov
sub
jnp
jno
jns
cmp
cwde
cmp
scas
mov
xchg
imul
repnz
mov
mov
lods
xor
mov
out
mov
or
mov
add
or
xor
out
mov
ss
jmp
aad
in
mov
(bad)
jnp
and
mov
inc
adc
mov
jbe
ss
aaa
or
mov
or
pusha
xchg
into
fstp
xor
mov
xor
jae
mov
push
rcl
mov
add
jg
std
mov
and
pop
sub
pop
inc
inc
test
xchg
sub
sub
pop
mov
lahf
imul
push
fdiv
rcr
std
adc
mov
sahf
data16
stos
ror
aas
lahf
stos
cmp
sahf
cwde
mov
push
cmp
mov
mov
pop
adc
imul
sbb
or
xor
ja
or
push
lds
push
aas
jo
mov
inc
pushf
pop
mov
push
cli
lods
inc
sbb
jl
dec
jg
mov
pusha
aam
lods
mov
or
mov
rol
std
inc
sbb
sub
jo
jg
loopne
and
adc
clc
sar
data16
pop
sub
add
(bad)
scas
lock
xchg
ror
popf
test
add
rol
xchg
fcomp
jo
jno
enter
ins
jp
call
(bad)
pop
addr16
mov
aam
imul
xchg
cmps
cmp
mov
xchg
or
dec
neg
into
xor
cmp
loope
sbb
ds
cmp
repnz
lods
xor
pop
xchg
addr16
dec
sub
retf
inc
popf
pushf
fsubrp
jge
aas
ss
push
test
inc
aam
jno
or
push
add
aam
ins
hlt
fdivr
adc
lea
adc
push
fld
xchg
in
xchg
push
mov
repnz
sub
test
shl
inc
je
jl
push
pop
fldcw
aad
mov
jmp
mov
ror
mov
and
xor
lock
popf
lods
sub
push
mov
pop
ja
cld
dec
jmp
add
arpl
sub
pop
mov
stos
dec
xor
and
or
test
or
inc
rol
jl
mov
push
xlat
sbb
xor
add
inc
cmp
cs
mov
add
gs
js
aad
inc
add
sahf
jg
enter
clc
pop
fs
pushf
push
pop
jl
mov
pop
sbb
or
push
(bad)
dec
outs
inc
mov
addr16
sbb
dec
inc
retf
fbstp
and
mov
and
ror
jbe
pop
imul
adc
or
cli
loope
jecxz
popa
not
and
mov
dec
sbb
mov
test
popf
(bad)
sub
in
outs
leave
outs
mov
xchg
iret
push
jge
cdq
add
nop
sub
xchg
mov
stc
xor
inc
cmp
jmp
std
sbb
jmp
stos
call
sbb
jecxz
push
xchg
or
push
test
and
je
sub
fdivr
dec
call
(bad)
gs
cmp
into
out
mov
ins
jne
hlt
or
leave
xchg
mov
nop
mov
cmps
cmp
stos
mov
out
cs
push
or
retf
xor
rcl
mov
sbb
ins
(bad)
es
pop
scas
pop
pop
xor
xor
lea
dec
mov
pusha
in
add
mov
jl
fnstsw
add
imul
fstp
repz
das
jno
xor
xor
or
ror
loope
sub
push
pusha
or
arpl
fwait
or
mov
cwde
ja
mov
ror
mov
out
cmp
int3
addr16
add
cmp
sub
xchg
xor
xchg
rcr
fs
push
push
mov
pop
std
out
sti
mov
sub
add
mov
ins
mov
mov
repnz
mov
stc
inc
shl
sbb
xchg
dec
ja
in
jmp
fiadd
stos
aad
fldln2
sub
ds
(bad)
shl
lahf
test
pop
or
jae
sbb
jns
mov
out
hlt
movs
aas
(bad)
push
push
in
div
int
aad
and
push
div
mov
jmp
out
add
sub
xchg
daa
addr16
sbb
imul
bound
xchg
(bad)
sub
(bad)
xchg
sub
push
cwde
inc
jne
dec
mov
inc
dec
and
rcl
cli
in
or
inc
inc
fstp
out
mov
(bad)
gs
icebp
idiv
(bad)
jl
dec
sbb
xor
cmp
out
lods
cmp
mov
loop
adc
pop
add
mov
stos
mov
and
(bad)
sub
fcomp
and
sub
sbb
iret
push
inc
(bad)
js
cmps
test
push
loopne
mov
dec
push
in
dec
scas
mov
jp
(bad)
dec
sub
sub
gs
pushf
in
mov
sti
aas
fwait
and
mov
call
sub
imul
test
dec
js
daa
jg
stc
and
push
or
cwde
fld
out
xchg
mov
and
dec
xlat
movs
jmp
dec
jbe
in
mov
mov
inc
outs
daa
jb
test
outs
dec
jae
icebp
and
mov
mov
dec
scas
or
stc
(bad)
js
mov
sub
mov
cmp
in
loope
daa
mov
mov
imul
add
xchg
sub
in
call
add
shl
cmps
shl
or
adc
xor
stos
mov
sbb
dec
mov
xor
(bad)
mov
pop
arpl
hlt
dec
mov
xchg
jmp
dec
push
loopne
and
retf
jmp
leave
push
(bad)
out
repz
dec
mov
shl
das
(bad)
push
add
mov
cmp
xchg
cmp
push
mov
push
aad
and
fisubr
fwait
in
pop
mov
test
pextrw
mov
pop
and
xchg
rcl
imul
test
jbe
and
dec
add
ja
pop
push
scas
jle
push
sub
jmp
push
ret
inc
xchg
add
daa
popa
(bad)
fnsave
loop
cmp
gs
pushf
mov
pop
push
mov
movs
daa
push
fisttp
aad
bound
and
pop
ror
sti
fstp
mov
jns
or
lds
pop
and
sbb
mov
and
sub
sbb
cmp
xor
mov
push
out
sbb
sbb
out
in
dec
sub
adc
mov
sub
sti
lods
fcomp
push
sbb
lds
add
je
call
adc
adc
inc
popf
or
ret
call
or
xchg
sub
adc
fsubr
in
cmps
pushf
ret
xchg
cli
cmp
jg
inc
repnz
mov
std
ds
imul
stos
pop
sbb
jl
loopne
aaa
cmps
mov
and
lea
and
sti
gs
mov
cmps
movs
retf
cmc
adc
sbb
and
mov
sti
mov
xor
push
sbb
jecxz
pop
pop
cmp
pop
ss
and
dec
les
stos
pop
cdq
loop
or
add
inc
repz
hlt
ret
mov
sub
(bad)
push
fs
test
push
nop
dec
je
jae
retf
add
cmp
jle
jge
mov
mov
or
mov
jno
movlhps
pop
dec
out
test
out
inc
sub
lods
or
mov
push
imul
jbe
adc
repnz
fnstenv
stc
dec
xchg
das
nop
mov
pop
jbe
out
jb
add
pop
push
pop
or
and
jmp
ret
xor
jbe
jns
push
cmp
in
and
mov
retf
scas
mov
sbb
dec
or
dec
out
xchg
and
mov
jns
xlat
in
cmp
push
leave
inc
and
push
cmps
or
std
dec
jmp
icebp
xor
mov
je
clc
jg
pushf
retf
cmp
repz
fwait
push
xchg
cs
shr
cmp
sbb
cs
xchg
and
into
dec
ins
int3
push
pop
(bad)
jle
mov
aas
jmp
ds
inc
dec
push
rdpmc
ret
fisttp
(bad)
lods
pop
out
call
stos
(bad)
ss
shl
xchg
xchg
stos
push
cmc
pop
add
aad
jbe
inc
sub
xor
dec
jg
dec
xor
adc
rcr
push
jl
mov
push
(bad)
(bad)
dec
push
inc
xor
inc
enter
add
and
iret
jg
adc
mov
jl
lea
cmp
push
pop
inc
mov
icebp
(bad)
(bad)
jle
cmp
mov
push
in
ds
mov
cs
push
outs
sti
test
sub
call
mov
js
cdq
dec
lds
lea
fisubr
sub
enter
xor
mov
push
(bad)
inc
add
ds
and
not
das
cdq
movs
inc
sar
mov
jl
cld
jne
add
jmp
iret
xchg
jb
mov
jle
jo
sub
bound
out
iret
(bad)
call
shl
sub
jns
adc
jl
test
cmp
in
push
into
mov
sub
xor
add
stos
(bad)
bound
out
jo
daa
mov
push
push
test
mov
pop
fistp
inc
mov
cmp
inc
fisub
(bad)
jl
imul
jo
push
shl
or
sbb
pop
xchg
jb
pushf
inc
sahf
mov
cld
(bad)
movs
add
movs
mov
div
or
inc
int
mov
xor
xor
sar
xchg
push
popf
push
cmp
sub
sbb
cs
loop
lods
fidivr
and
jp
fwait
and
sub
push
or
jb
test
rol
in
cdq
das
fdiv
(bad)
mov
fidivr
call
dec
popa
sub
lods
pop
(bad)
inc
xchg
inc
mov
xchg
mov
test
sbb
ja
(bad)
ds
jmp
or
jne
cs
loop
and
rcpps
fcom
or
xchg
mov
in
push
pop
mov
jnp
lea
or
retf
stos
cmp
aaa
pop
sub
jle
(bad)
push
or
sub
inc
data16
mov
and
jb
adc
lea
imul
(bad)
jmp
xchg
in
int
bound
popa
and
adc
mov
ss
test
cs
lds
jno
xor
jl
xor
shl
lods
mov
pop
jb
xchg
pop
sub
pop
loopne
lods
inc
outs
mov
test
dec
add
cmp
add
into
mov
or
adc
ins
mov
push
das
jnp
cmps
(bad)
frstor
jecxz
sub
sbb
lods
or
bound
dec
push
fwait
bndmov
mov
push
js
enter
lea
sbb
sbb
ins
fidiv
jge
mov
nop
cmp
pop
popf
imul
adc
fdivr
in
ins
loope
mov
call
sbb
in
push
mov
adc
loope
push
in
push
movs
movs
in
stos
and
ret
pop
adc
jae
jne
pop
sbb
inc
cmp
stos
loope
pop
cmp
mov
shl
(bad)
lahf
jle
pushf
cdq
jae
ror
mov
mov
xchg
mov
pop
sti
cld
imul
daa
and
jno
popa
call
adc
mov
add
fwait
lahf
loope
loope
out
aam
jno
or
popa
pop
jmp
call
aad
ret
push
fild
cmp
push
das
pop
sbb
or
dec
ss
or
stos
sbb
dec
ret
adc
mov
dec
pop
add
pcmpgtw
push
and
movhps
jmp
call
outs
sub
pop
shr
or
icebp
inc
cmp
sbb
aad
sub
pop
dec
mov
jp
cmp
xchg
add
in
int
stc
shr
push
inc
push
in
push
fldenv
stc
int
cmc
sub
or
and
jp
sub
sub
sub
movs
sub
(bad)
sbb
dec
mov
xor
mov
push
ret
test
push
xor
fs
fwait
sub
inc
jmp
cli
fdivr
jo
dec
hlt
pushf
push
scas
ja
mov
xor
mov
or
or
mov
pop
fwait
lahf
mov
dec
jo
adc
mov
mov
dec
lds
jno
in
xchg
add
xchg
push
outs
test
pop
and
loope
in
add
mov
add
movs
push
jb
enter
inc
dec
pop
jae
sbb
popf
pop
lahf
mov
std
sbb
test
in
fwait
aam
imul
out
mov
push
push
outs
lods
mov
or
add
icebp
jecxz
scas
pusha
xor
je
cmc
mov
push
xchg
pusha
inc
add
mov
(bad)
and
mov
sbb
sub
leave
adc
lds
jno
mov
xchg
(bad)
fucom
push
hlt
push
ret
mov
sbb
dec
div
pushf
les
cmp
(bad)
icebp
es
xor
push
jno
inc
mov
xchg
es
push
test
push
sahf
sbb
pop
ss
pop
jmp
into
xchg
les
or
repz
pop
dec
push
in
jb
or
mov
pop
aas
pusha
(bad)
rcr
fisubr
test
rol
ret
and
(bad)
cmp
mov
sbb
into
xchg
sbb
faddp
retf
adc
xor
cmc
push
(bad)
xchg
jp
push
mov
icebp
scas
pop
dec
scas
adc
scas
pop
sbb
fwait
aas
inc
xchg
movs
cmp
ror
inc
inc
pop
xor
mov
xor
and
rcl
dec
inc
dec
std
fdivp
xchg
xor
mov
mov
dec
out
(bad)
push
xchg
xchg
inc
pop
mov
rol
mov
cmp
clc
add
inc
mov
retf
xchg
int
aas
arpl
test
pop
mov
es
sub
inc
out
cld
popa
imul
ret
jecxz
dec
popa
cmps
mov
je
lds
xor
add
cmp
aas
ins
(bad)
xlat
lds
lahf
popa
mov
cdq
dec
hlt
out
test
jbe
xchg
enter
mov
std
jp
mov
add
or
add
jmp
test
in
xchg
movs
inc
nop
fdiv
mov
mov
dec
call
push
push
sub
pop
hlt
xor
movs
push
inc
xor
popa
push
sub
adc
(bad)
outs
xor
xor
cs
call
ins
cs
pop
(bad)
xor
scas
sbb
cld
fidiv
mov
cld
aaa
adc
neg
mov
in
sub
mov
ficomp
mov
sti
lods
test
mov
fwait
scas
xchg
cmc
cmp
out
popa
mov
inc
in
or
in
pusha
lods
pop
icebp
push
jle
mov
jmp
mov
sub
fs
lds
sub
imul
mov
movs
dec
sub
cmc
ret
push
cmp
pop
(bad)
stc
hlt
pop
add
xchg
and
inc
xchg
dec
outs
sbb
inc
mov
mov
jns
push
bound
(bad)
and
loope
inc
xor
int3
inc
xlat
adc
push
(bad)
shl
pushf
pop
push
cmp
rol
adc
adc
cld
and
dec
xchg
out
ins
xchg
mov
dec
inc
(bad)
mov
cwde
push
cmp
sbb
stos
pop
dec
cdq
inc
mov
inc
loopne
xor
test
sub
pop
mov
and
inc
aas
js
xchg
mov
xchg
inc
hlt
push
(bad)
and
out
iret
imul
shl
mov
push
push
xor
or
rcr
cmp
cdq
push
adc
ins
adc
cmp
inc
jl
jle
adc
je
sbb
je
outs
es
add
pop
and
movs
test
mov
cmp
cmp
push
jge
cmp
mov
movs
(bad)
jmp
mov
pushf
imul
add
adc
sub
pop
das
jnp
add
mov
mov
mov
(bad)
cmc
and
imul
test
add
cmp
xor
jb
in
mov
(bad)
jmp
cdq
ret
std
leave
and
cmp
sbb
ja
out
out
xor
mov
mov
xchg
mov
popa
icebp
rcl
push
dec
xchg
out
test
ins
mov
jge
loopne
xlat
sub
mov
and
jmp
dec
push
mov
cdq
std
sub
dec
mov
mov
ds
(bad)
push
ss
xor
sub
out
aam
(bad)
sub
test
cmps
sbb
push
sbb
mov
push
dec
add
repnz
test
in
push
push
dec
pop
imul
sub
sbb
xor
or
clc
jp
jne
push
inc
shl
add
fwait
or
xlat
inc
rcl
(bad)
and
out
aas
add
pop
cmp
(bad)
xor
add
xor
fs
xchg
cld
imul
adc
fdiv
push
loope
xchg
or
out
cmp
or
push
ret
inc
mov
push
mov
fst
add
pop
(bad)
clc
aaa
xchg
sub
xchg
inc
rcl
sti
and
cmps
xor
sub
dec
shl
mov
(bad)
in
push
out
pop
pop
test
sub
sbb
cli
mov
mov
add
ret
inc
mov
test
jp
sbb
adc
aam
jo
cmp
adc
adc
lods
sub
in
ins
add
sbb
mov
xor
mov
mov
push
(bad)
sub
inc
mul
data16
retf
adc
int3
bound
hlt
aaa
out
sub
cli
out
das
loope
jmp
jno
(bad)
daa
fnstenv
add
pop
lds
xchg
movs
or
cmp
jge
mov
jp
mov
add
arpl
imul
outs
xchg
popf
xchg
test
mov
icebp
inc
retf
mov
mov
out
fchs
push
push
arpl
ror
jae
imul
popa
scas
clc
out
and
rcr
retf
call
fcom
jae
lds
mov
iret
mov
jp
fwait
ins
mov
hlt
leave
fsub
lock
out
cdq
int3
push
xchg
xchg
loopne
add
sar
int
mul
(bad)
cmp
into
in
cli
fstp
js
jg
xchg
mov
inc
dec
adc
jmp
popa
xchg
retf
int
test
and
sub
cld
cmc
hlt
mov
dec
xchg
push
push
cli
sbb
es
fdivp
nop
sub
add
cli
sub
jbe
or
and
fcmovne
mov
dec
sbb
pop
inc
sahf
stc
jmp
and
in
cmp
xchg
(bad)
and
push
stos
pusha
setbe
cmp
push
(bad)
aaa
ds
push
stos
icebp
mov
or
cmc
dec
mov
sbb
cmc
xchg
add
inc
push
or
xchg
popf
movs
lods
and
jno
into
(bad)
jmp
int3
lds
and
xor
sub
push
sbb
mov
mov
pop
xchg
out
lahf
mov
sar
pop
add
xlat
jno
pop
mov
(bad)
xor
xchg
ins
lahf
(bad)
xchg
aaa
add
stos
ja
and
dec
xchg
mov
test
movs
or
ss
retf
lods
sub
pop
je
push
lock
dec
ret
in
(bad)
mov
loop
test
sbb
push
sbb
mov
outs
sti
idiv
jbe
das
fwait
or
cmp
test
std
cmp
push
ret
inc
mov
rol
(bad)
mov
lahf
imul
jecxz
lahf
mov
rcr
xchg
and
call
xchg
push
cld
mov
jp
lods
pop
push
xor
fsubr
xor
and
sahf
push
pop
and
jp
xchg
add
test
(bad)
imul
pop
ret
(bad)
jmp
outs
fldenv
xchg
cmps
jg
movs
jno
dec
dec
mov
dec
mov
gs
and
mov
add
and
pop
adc
adc
sbb
sub
retf
movs
cmp
pop
stos
dec
lds
(bad)
shr
pusha
dec
mov
pusha
dec
clc
outs
inc
lods
mov
daa
retf
add
popa
sbb
pop
add
inc
xchg
ss
push
jnp
inc
imul
mov
mov
loopne
imul
sbb
nop
jmp
call
add
jg
mov
push
add
hlt
lds
lods
dec
mov
and
in
jmp
or
retf
ror
popa
push
cmc
out
sub
push
iret
cmps
fistp
mov
push
rol
pop
mul
jle
sbb
cmc
jb
outs
cwde
cmp
jmp
adc
mov
xchg
pop
cmps
dec
jo
fisttp
pop
add
xor
pop
div
dec
dec
mov
rcr
xchg
dec
popa
xor
das
mov
xchg
or
and
in
les
mov
mov
stc
popa
mov
lods
in
push
(bad)
fiadd
fcom
and
leave
adc
call
dec
int3
dec
xchg
xchg
or
cmps
scas
mov
push
sar
int
cmp
cmp
cmc
outs
gs
sub
mov
jl
mov
vpshuflw
clc
xchg
jno
xor
test
jnp
scas
fstp
jbe
inc
in
cs
clc
mov
sub
mov
popf
push
mov
and
fdiv
repz
retf
mov
mov
aas
retf
mov
out
and
fisubr
push
pop
(bad)
mov
mov
sahf
xchg
xchg
in
ja
movs
inc
push
and
mov
add
mov
push
iret
ss
mov
lds
(bad)
addr16
xchg
das
push
sbb
sahf
ss
int
dec
daa
xor
ja
mov
mov
pop
outs
imul
push
inc
ds
test
jae
stc
mov
mul
test
(bad)
xchg
mov
fild
mov
mov
out
call
mov
mov
and
out
fistp
gs
xor
mov
in
push
push
pop
outs
sti
jmp
pop
imul
push
aam
into
(bad)
movs
cmc
cmp
and
adc
sbb
test
test
in
cmp
xchg
jmp
sub
adc
aam
(bad)
and
fucom
in
pop
mov
movs
scas
test
dec
add
(bad)
xchg
test
pop
scas
lea
loop
xor
xchg
aaa
push
(bad)
fdivr
lahf
das
rcr
sub
cmps
xchg
push
adc
cmp
xor
sbb
sbb
cdq
and
shl
(bad)
cmp
stc
cmps
pop
add
jae
jnp
repnz
cwde
sti
aam
sahf
xchg
data16
cmps
jmp
mov
gs
mov
cld
iret
push
jbe
sub
xchg
mov
(bad)
xchg
fwait
jmp
enter
push
add
and
arpl
inc
(bad)
movs
sahf
mov
and
(bad)
fst
call
daa
sbb
mov
or
push
push
jbe
inc
loope
mov
pop
mul
mov
sub
test
xchg
fwait
cmp
and
add
outs
cmps
neg
inc
xor
push
shl
stc
sub
add
aas
lods
sar
loop
inc
pop
mov
pop
mov
xchg
ret
jb
mov
jnp
(bad)
in
test
in
pop
rcr
inc
mov
sub
adc
fisttp
pop
in
xchg
pop
inc
out
iret
(bad)
push
adc
ja
push
test
fcmovb
xor
dec
push
or
push
out
pop
pop
pop
int3
jle
sti
mov
adc
ss
jg
push
das
xor
inc
and
out
js
imul
sub
dec
adc
jmp
lea
js
sub
fwait
jp
mov
addr16
mov
(bad)
or
ss
mov
inc
inc
cwde
sbb
out
cli
cmps
cmp
jp
retf
gs
dec
sti
pusha
shl
sub
cmps
jb
adc
mov
adc
mov
ret
sbb
adc
pop
fsub
xchg
push
jl
xchg
fnsave
lods
pop
popa
nop
test
and
mov
mov
aam
(bad)
inc
loop
fisubr
icebp
mov
xchg
inc
mov
js
jmp
xchg
jecxz
repz
xor
pop
js
aad
fst
outs
sbb
dec
sub
cmp
cmp
sbb
enter
cmp
push
retf
and
mov
xlat
pop
mov
cld
lea
cmp
out
xchg
ficom
inc
cli
test
push
ins
pcmpeqw
cwde
or
xchg
sbb
(bad)
push
cdq
out
xchg
out
shr
sub
jp
pop
xchg
lds
jle
in
(bad)
call
lods
iret
pop
aam
push
push
pop
ret
or
icebp
ret
lock
jmp
jb
or
mov
arpl
xchg
inc
lods
imul
aam
outs
loope
jl
icebp
sbb
jae
dec
inc
sbb
cld
loopne
mov
pop
dec
mov
adc
mov
add
sub
neg
dec
and
inc
(bad)
jb
pop
iret
lock
das
and
loop
loope
jecxz
jp
xor
cli
fst
das
xor
repz
lods
xor
std
add
add
mov
fucomip
fs
and
adc
push
stos
nop
xlat
sub
lock
mov
iret
lock
mov
jnp
mov
pop
fnstsw
fcmovnbe
mov
sub
jecxz
jecxz
pop
popf
mov
cmp
add
pop
outs
adc
repnz
lahf
push
loope
sub
ror
sub
and
sbb
mov
sub
lea
add
in
push
sti
adc
and
jb
fwait
adc
jno
into
arpl
mov
inc
mov
xchg
(bad)
dec
pop
aad
gs
loopne
sbb
fdiv
(bad)
xor
jnp
push
retf
or
es
fild
fnstsw
xor
mov
ds
adc
mov
xchg
bound
adc
test
pushf
lods
and
push
test
jo
add
pop
rol
and
add
pusha
(bad)
sub
and
aad
inc
in
dec
xchg
dec
movs
mov
jae
int3
cmp
inc
xchg
push
mov
retf
(bad)
mov
lods
mov
adc
bound
test
push
mov
movs
sahf
jle
dec
addr16
cmp
jmp
adc
mov
retf
push
sub
rcl
stc
xlat
push
lods
jns
adc
leave
cmps
mov
push
iret
jl
lea
push
mov
mov
xchg
adc
into
cwde
lock
pop
ret
pop
sub
pusha
mov
sbb
movups
fsubr
pop
lock
repnz
inc
retf
jbe
stos
push
jge
sbb
jbe
pop
ins
cmp
sbb
mov
lock
scas
pop
sbb
movs
inc
fld
cmp
xchg
and
retf
push
xlat
cdq
cmps
outs
pusha
jo
shl
pop
jae
or
movs
push
add
xchg
or
cmp
lahf
cmc
or
xor
xchg
lock
xor
and
outs
inc
mov
call
jle
jecxz
fiadd
and
add
pusha
test
sahf
imul
xchg
stc
test
push
pop
mov
push
add
xchg
pop
mov
adc
pop
dec
test
rcl
jmp
addr16
cmps
and
rcl
fldenv
or
fwait
and
test
push
adc
xchg
jo
mov
mov
or
or
push
test
out
cmp
in
adc
jmp
xchg
ins
std
sub
mov
sub
adc
(bad)
jae
xchg
mov
push
or
jae
ins
mov
cmp
(bad)
lahf
imul
cmp
jbe
cmps
sub
mov
sub
aas
shl
(bad)
dec
hlt
jnp
mov
pop
std
in
shl
xchg
jecxz
jbe
and
inc
lds
mov
xor
icebp
adc
fdivr
push
loope
xor
sbb
imul
test
lahf
jns
xor
(bad)
push
bnd
or
push
ret
sbb
mov
cwde
movs
int
or
out
cmp
ins
xor
movs
pop
and
cmps
push
idiv
mov
iret
ds
mov
pop
test
leave
push
(bad)
popf
pop
jecxz
loope
adc
mov
cmp
pop
xchg
(bad)
xchg
dec
push
(bad)
inc
sbb
rcl
imul
pusha
mov
loop
add
lods
sar
jecxz
xor
and
loop
xchg
and
mov
cs
test
sub
xor
int3
aam
lds
sbb
pusha
xor
ret
addr16
pop
push
mov
pop
test
test
adc
das
or
adc
ins
cmp
or
std
mov
mov
jns
adc
or
frndint
xor
adc
mov
cs
xlat
ins
hlt
sbb
lahf
ins
call
cmc
fadd
mov
xlat
(bad)
xor
jl
hlt
mov
or
movs
mov
sub
loopne
sbb
mov
shr
jecxz
gs
fsubp
jno
pop
mov
sbb
cmps
dec
pop
jbe
(bad)
ret
ja
push
or
xor
dec
movs
mov
enter
inc
ss
sbb
or
lahf
mov
aaa
leave
cmps
add
aam
sbb
mov
mov
xchg
je
push
adc
sbb
aad
pop
cli
neg
in
js
jmp
or
inc
lea
je
fs
out
or
add
pusha
leave
bound
rcr
jl
jp
xchg
cmp
mov
jae
dec
inc
cli
dec
loop
pop
or
and
sbb
cmps
mov
jne
retf
enter
and
inc
sbb
jb
sub
push
xor
push
push
inc
adc
jbe
gs
dec
sti
ja
pop
adc
xchg
mov
jo
ins
xchg
dec
mov
mov
sub
sbb
in
xor
sub
dec
xchg
clc
loop
(bad)
out
iret
shl
cmp
pop
out
push
or
dec
sbb
sbb
or
pusha
mov
sti
ss
ss
iret
mov
aad
movs
into
(bad)
adc
retf
dec
hlt
(bad)
fiadd
mov
leave
pop
sti
idiv
pop
int3
push
leave
jg
cmp
stc
out
movs
addr16
xor
mov
mov
sbb
jg
mov
outs
mov
cmp
cmc
retf
(bad)
call
mov
mov
sub
xchg
shl
test
sub
pop
loope
ss
push
xor
(bad)
inc
jns
inc
sbb
mov
cli
dec
movs
test
out
dec
test
clc
out
scas
mov
jl
xor
xor
lods
loop
outs
fsubr
ss
popa
in
push
outs
or
ret
push
mov
push
addr16
and
frstor
mov
in
mov
sbb
push
push
loopne
adc
fadd
adc
cmp
add
sbb
xor
pop
js
std
outs
and
cs
iret
fwait
sub
adc
add
push
in
xor
mov
xlat
push
iret
sbb
scas
outs
sbb
daa
and
mov
mov
add
scas
adc
stos
sbb
add
dec
pop
mov
mov
and
xchg
call
jb
xchg
dec
into
sar
out
lods
mov
and
clc
mov
cmp
push
mul
add
out
pop
push
mov
cmp
fld
sbb
or
or
retf
aas
fmul
sub
iret
shr
inc
popa
div
ret
mov
push
js
cwde
pushf
test
sbb
adc
jge
cmp
and
fcmovnu
shl
push
jbe
mov
(bad)
inc
cmps
ret
cli
mov
pop
ins
and
jno
je
inc
stc
cmp
inc
mov
xor
xchg
fmul
dec
dec
push
and
cmp
adc
imul
cmp
pop
push
out
fsubr
add
ins
test
call
inc
hlt
das
(bad)
bnd
and
retf
inc
into
jae
lea
pop
dec
int3
xchg
inc
mov
push
mov
push
mov
jg
sbb
mov
fmul
arpl
jnp
loope
adc
dec
mov
repz
inc
stos
xchg
pop
inc
cmp
jb
jno
mov
ins
jl
mov
scas
adc
dec
pusha
mov
aad
in
cmp
retf
xchg
inc
adc
sub
call
pop
cmc
out
les
enter
clc
xor
lahf
mov
add
mov
sub
mov
ds
adc
and
jno
cs
jb
mov
stos
push
cmp
or
pusha
add
sbb
shr
mov
in
es
push
imul
(bad)
mov
or
xor
inc
sbb
shr
pop
cmps
bound
sbb
sub
stos
fmul
mov
sub
xchg
rcr
inc
leave
fidivr
jle
push
and
sub
fst
lds
mov
jb
enter
test
scas
es
ins
adc
mov
rcl
sti
(bad)
clc
add
pop
and
ret
push
test
loop
repnz
scas
inc
sub
sub
les
aas
pop
xchg
(bad)
cmp
inc
sub
lds
push
mov
and
in
lock
cmps
cld
loop
inc
pop
jge
daa
jne
pop
sub
sub
pop
loop
mov
in
mov
cmp
xchg
clc
xchg
sub
gs
pop
xchg
cmp
leave
je
stc
rcr
sub
sti
xchg
jbe
xor
(bad)
sbb
pop
lods
pop
(bad)
xor
imul
sbb
loop
(bad)
ja
loope
cs
mov
ret
stos
xchg
outs
(bad)
cmps
fdivr
inc
in
sbb
sti
xchg
rcr
icebp
pop
xlat
enter
mov
(bad)
mov
fcmovbe
xchg
sahf
jo
call
loope
jmp
ror
hlt
push
jl
inc
sbb
mov
dec
(bad)
add
movs
xchg
bound
cmp
xchg
xor
js
xor
xchg
cmp
mov
push
stos
xchg
and
push
mov
neg
mov
aas
push
imul
mov
jae
loop
mov
mul
enter
hlt
add
enter
add
xchg
or
retf
or
sub
or
cmp
xor
in
fbld
mov
jg
mov
or
movs
int3
add
add
push
enter
jmp
call
data16
fsubr
mov
push
int
aam
mov
jmp
push
stos
nop
in
or
gs
pop
pop
out
retf
xor
loopne
sbb
cmp
(bad)
jne
xor
call
repz
(bad)
cld
push
inc
mov
retf
or
les
push
add
stos
idiv
or
aaa
jo
cmp
cmps
pop
sub
or
cmps
push
mov
cld
push
jae
mov
int
pushf
test
or
gs
sbb
push
loopne
xchg
int
pop
or
dec
ds
dec
cmp
rcr
xchg
and
dec
test
in
mov
sbb
xchg
movs
pop
fadd
push
xchg
scas
outs
add
push
ret
inc
pop
cmps
cs
dec
das
in
aam
adc
shr
lahf
inc
repz
mov
mov
sbb
(bad)
call
sub
int
xchg
(bad)
movs
call
lock
xchg
cs
inc
jge
je
push
cmc
pusha
stos
lds
mov
inc
cmps
loopne
and
dec
add
addr16
jo
inc
cmp
xchg
add
(bad)
mov
fld
jg
inc
jl
and
push
inc
dec
mov
imul
(bad)
sbb
or
stos
dec
jge
bound
dec
sbb
and
adc
mov
pushf
pop
lods
sub
inc
shr
and
dec
add
mov
cmp
mov
and
addr16
leave
jmp
and
pop
jno
mov
sub
dec
or
iret
dec
mov
mov
pop
cdq
sbb
pop
xlat
ret
mov
push
imul
mov
push
cld
cdq
mov
mov
lods
into
cmps
arpl
jmp
lds
push
call
and
movs
dec
sbb
iret
xor
fcomp
mov
add
xchg
and
push
pop
cmp
sub
test
(bad)
js
js
(bad)
jae
out
mov
and
cmc
jb
jno
stos
mov
adc
in
stc
add
xchg
adc
xor
in
gs
or
mov
jecxz
mov
sbb
fisttp
mov
sti
dec
addr16
xchg
mov
in
mov
dec
sti
(bad)
mov
push
clc
jae
outs
jl
div
(bad)
sti
xor
add
repz
ficom
test
add
ins
add
leave
dec
test
mov
cwde
mov
shl
movs
dec
jl
dec
push
xor
and
outs
xor
pop
xor
pop
inc
xor
aad
pop
cmps
aad
or
pop
aaa
out
pop
scas
nop
mov
dec
mov
enter
cmc
xor
aad
cmp
push
mov
pop
ret
stos
rcr
xchg
jns
adc
aam
push
imul
mov
stos
pusha
sbb
int3
js
loop
cli
pop
sbb
(bad)
jae
xchg
xor
mov
inc
pop
cmc
jns
imul
adc
out
in
cmp
fisub
jmp
mov
mov
rol
out
push
pop
or
mov
call
ficom
je
sbb
outs
mov
or
lock
cmps
sub
mov
xchg
lods
jno
pushf
mov
inc
leave
mov
sbb
cld
outs
add
stos
movs
jbe
shr
div
and
jbe
pop
jmp
repz
xchg
into
retf
dec
(bad)
into
xor
(bad)
sbb
lods
lds
aaa
iret
add
push
fnstenv
cmc
stos
add
cmp
es
repnz
enter
rol
retf
mov
frstor
jae
xlat
dec
out
shl
push
shl
inc
dec
jg
outs
sub
loop
sbb
rol
add
cmp
loopne
jb
inc
mov
dec
loopne
and
idiv
in
ss
mov
loopne
sbb
add
test
xchg
mov
xchg
jo
mov
cwde
xor
cdq
out
push
shl
and
push
repz
xchg
or
lds
lea
mov
ror
and
pop
daa
fistp
cdq
and
mov
shr
int3
mov
xor
jmp
adc
cmp
jp
jnp
mov
ja
mov
inc
jo
iret
mov
repz
pop
ret
or
adc
shl
je
mov
adc
inc
mov
mov
push
lods
mov
fld
test
ret
push
xchg
fidivr
push
lock
xchg
push
sub
imul
adc
out
aad
sbb
push
out
push
fadd
call
pop
xor
and
mov
repnz
ret
scas
mov
scas
ins
and
jg
mov
mov
dec
sahf
jmp
pop
call
pop
sub
push
xchg
mov
popf
pushf
cmp
ja
or
fdivr
les
movs
add
add
mov
aad
jmp
cmp
cmp
inc
pop
push
cmp
push
jo
(bad)
lahf
jns
cld
jmp
imul
mov
das
pop
out
cwde
mov
imul
(bad)
ror
inc
sub
and
(bad)
lock
out
jo
inc
adc
mov
lds
mov
out
sbb
xchg
das
dec
pop
pop
faddp
imul
or
fcmovbe
jno
jge
push
jbe
mov
fldenv
jmp
out
adc
inc
jmp
xchg
and
pop
cwde
ds
sar
dec
lahf
add
inc
es
sub
add
fdiv
mov
imul
pop
stc
mov
jb
scas
ret
call
imul
ror
frstor
jo
adc
frstor
sub
pop
ss
xchg
xchg
mov
loope
ret
(bad)
xchg
adc
das
pop
clc
pop
cli
mov
ins
pop
mov
in
push
daa
icebp
or
movs
mov
xchg
shr
outs
mov
adc
dec
shl
pop
arpl
mov
daa
inc
sahf
sti
push
addr16
test
(bad)
arpl
(bad)
icebp
cmp
mov
pop
cmp
push
add
jnp
aad
xor
push
sub
ret
cld
pop
popf
addr16
adc
or
jmp
fs
mov
in
push
jle
inc
sub
movd
call
mov
(bad)
(bad)
adc
adc
dec
jp
xchg
cmps
cmp
sbb
mov
jbe
fcom
sbb
cs
xor
xchg
(bad)
out
add
fnstcw
pop
lds
mov
dec
rcl
push
(bad)
jae
test
mov
enter
ficomp
push
inc
dec
cli
sbb
and
push
(bad)
adc
mov
and
call
and
sub
rcr
iret
rcl
add
push
dec
jle
mov
dec
pop
ins
movs
dec
xor
dec
pop
jl
scas
dec
xchg
je
mov
loop
fstp
mov
clc
in
(bad)
in
cmp
icebp
leave
icebp
pop
inc
cli
ja
sar
movs
xor
dec
(bad)
mov
in
pop
pusha
shld
sbb
cwde
or
mov
add
mov
mov
(bad)
out
nop
out
adc
mov
add
test
rcr
and
pushf
inc
mov
stos
sahf
push
iret
cmp
(bad)
mov
pushf
aad
push
inc
rcl
das
int
adc
daa
jmp
repz
aas
push
(bad)
xor
and
stc
push
ins
pop
(bad)
out
or
das
mov
aaa
out
mov
rcr
das
cmp
push
cmc
pop
outs
mov
add
popf
push
inc
clc
mov
cwde
jl
cmp
mov
pop
or
out
cdq
fst
inc
cmp
adc
sbb
pinsrw
pusha
mov
aad
(bad)
imul
and
daa
hlt
fsubr
xor
fisubr
mov
dec
mov
dec
cmc
arpl
sti
lea
dec
mov
es
xor
int3
xor
scas
inc
push
mov
xlat
xor
into
adc
call
xlat
or
xor
fwait
test
mov
call
cld
cld
loop
loop
je
fld
pushf
clc
out
lea
retf
retf
sub
inc
inc
mov
push
jmp
push
repnz
or
push
xor
outs
fcomi
aaa
jle
cmp
es
mov
fimul
(bad)
int
outs
mov
rol
sti
dec
or
inc
xchg
(bad)
fdivrp
movs
mov
ret
xor
mov
popf
inc
jecxz
fcmovne
xchg
mov
push
mov
pushf
not
in
push
js
in
mov
adc
dec
jb
sbb
enter
cli
inc
jo
xor
out
adc
(bad)
fcom
test
jbe
js
cmp
mov
or
mov
lods
sbb
js
lods
cmps
push
call
sti
pop
sbb
aam
cmp
mov
data16
dec
inc
jecxz
or
ret
dec
ret
sub
pop
add
call
shr
push
xor
rol
stc
dec
into
sub
mov
ins
popf
repz
and
enter
test
repnz
sbb
push
adc
in
out
mov
repz
outs
rcl
push
daa
dec
pop
les
lea
and
mov
ins
mov
add
dec
repnz
aad
into
fs
dec
addr16
adc
mov
ins
adc
mov
inc
mov
dec
lds
lds
jp
pop
pop
dec
dec
xor
and
js
push
xchg
sbb
sub
cmp
fdivr
in
sbb
inc
sbb
aaa
pushf
lock
mov
daa
out
fnsave
mov
add
out
push
or
mov
pop
mov
push
lahf
jno
ret
(bad)
gs
mov
and
ja
xor
cmp
and
push
sbb
lahf
dec
out
push
sbb
adc
pop
pop
stos
pop
adc
jo
sar
js
cwde
pop
outs
call
push
test
test
push
es
pushf
push
int3
or
icebp
cwde
pop
mul
inc
add
bnd
ins
or
dec
stos
mov
retf
jbe
xor
test
lods
sbb
stos
xchg
cmp
mov
sti
xchg
outs
cdq
ror
push
sbb
dec
aaa
jnp
pusha
fidivr
pop
jl
sbb
or
mov
fdiv
call
sti
mov
out
fstp
push
ins
lock
shl
cmp
xchg
test
fwait
adc
or
out
jb
ret
sub
popf
push
ficom
mov
lea
fcmovu
lock
jae
fnstcw
(bad)
fs
fdivr
aad
cs
ret
and
jge
rol
xchg
retf
cmps
mov
add
sub
rcr
int
fs
(bad)
xlat
call
jge
mov
loop
je
mov
iret
and
cli
jmp
lds
daa
xchg
sar
mov
ret
sub
popa
jp
inc
enter
mov
mov
lods
push
out
sbb
jmp
hlt
mov
jg
xor
rol
sub
pop
dec
ficomp
mov
or
or
or
ins
xchg
fcom
fimul
bound
nop
push
and
call
stos
pop
push
popa
data16
push
xchg
mov
out
(bad)
es
mov
loope
jmp
scas
mov
pop
mov
mov
stc
out
cmp
out
jge
loope
mov
pop
int3
inc
inc
dec
pop
and
test
fs
les
sahf
or
xchg
sti
mov
mov
les
clc
cmp
sbb
cmc
(bad)
repz
sbb
sbb
pop
jge
ret
dec
pop
mov
push
ins
movs
inc
mov
data16
aaa
pop
popf
sbb
dec
mov
outs
(bad)
lea
lods
sbb
sub
jo
cmp
xor
mov
aam
adc
leave
scas
add
jno
jne
push
xlat
mov
xor
pop
dec
packuswb
push
jns
outs
push
and
jecxz
ss
rcl
add
shl
mov
ins
mov
and
jno
push
pop
adc
jno
aad
cmp
int
push
mov
inc
aam
test
bound
jo
jb
mov
test
mov
xor
call
and
cdq
inc
sbb
(bad)
ficomp
mov
loop
daa
add
cwde
pop
sub
dec
adc
pop
add
pusha
loopne
pop
fldcw
adc
stc
jb
sbb
aad
sub
cld
inc
pop
sbb
mov
push
repnz
or
mov
stc
pop
sub
scas
sbb
pop
mov
mov
cmp
hlt
jne
dec
pushf
stc
xchg
xchg
mov
or
xchg
cmp
or
xor
sub
out
adc
leave
lahf
adc
fs
mov
shr
rcl
add
xchg
xor
rcl
pushf
cmps
rcr
das
stos
xor
imul
retf
xlat
mov
(bad)
sbb
push
mov
scas
movs
fistp
popa
pop
mov
in
mov
cmp
into
add
das
enter
rcr
jnp
mov
mov
dec
lock
xchg
int3
dec
nop
leave
lods
fisttp
add
rol
in
not
push
jp
push
add
and
jne
retf
fsub
shl
cwde
jmp
dec
xchg
inc
loop
fs
add
scas
and
scas
push
aas
or
pop
sub
ror
bound
cmc
or
jne
mov
les
pop
bound
inc
inc
xor
ja
jb
xlat
sub
mov
sbb
inc
gs
xchg
cmp
dec
jnp
mov
ja
cmc
ficom
inc
jb
retf
mov
fiadd
ret
jb
retf
icebp
push
aad
test
psraw
stos
pop
mov
sbb
and
iret
es
inc
lock
out
cwde
add
or
jb
add
push
mov
gs
mov
xlat
mov
sbb
test
cmp
shr
addr16
aad
add
add
sbb
mov
cmp
nop
jmp
sbb
cmp
fidiv
xchg
and
ins
jns
xor
sbb
sub
mov
cdq
sbb
push
into
shl
jp
ror
add
xchg
sub
sbb
cmps
lea
pop
std
jns
cmp
fs
push
cmp
stos
pop
cmp
add
cli
inc
das
inc
rol
ds
(bad)
sub
jb
dec
lea
cmp
push
push
jb
and
aas
lahf
push
inc
xchg
in
mov
(bad)
std
fmul
adc
adc
and
mov
fisub
jg
icebp
lock
and
sub
je
pop
or
push
cmp
ins
ins
lods
fcmovbe
cwde
sub
retf
out
loopne
jp
jno
faddp
push
pop
xchg
outs
arpl
mov
leave
es
sbb
sbb
and
mov
jne
(bad)
into
(bad)
sub
fsubr
outs
or
js
pop
jmp
push
add
adc
stc
inc
mov
lahf
cmp
jmp
jl
test
test
sub
cmp
(bad)
mov
mov
loop
jmp
inc
les
push
cmp
(bad)
call
fdecstp
test
mov
les
or
sahf
out
or
mov
lahf
rcr
jne
push
mov
sbb
cmc
dec
cdq
adc
jne
mov
fdivr
mov
sbb
mov
sar
jo
rol
xchg
fsubr
lods
lods
add
mov
mov
popa
in
sbb
mov
es
lea
div
add
pop
fs
jmp
es
xor
std
call
shl
cwde
add
dec
sub
push
mov
jmp
fmul
mov
rcl
mov
pop
hlt
js
mov
xor
outs
sub
push
frstor
rcl
dec
les
cli
sub
repz
pop
stos
adc
add
into
and
retf
movs
push
shl
rcr
test
cmp
leave
or
push
sti
jne
in
call
(bad)
jge
xchg
mov
fwait
dec
popa
icebp
xchg
pusha
add
pop
push
cdq
push
leave
loop
xor
push
fmul
xchg
clc
mov
xchg
shl
add
or
shr
les
test
sbb
dec
hlt
inc
ins
add
cwde
stos
(bad)
imul
retf
mov
daa
in
rcr
cmc
jge
inc
in
bound
jbe
test
hlt
call
inc
loope
dec
sub
add
cmp
or
sbb
or
or
mov
mov
jg
popa
ins
pop
mov
int3
push
out
in
push
jne
outs
imul
cmp
jns
movs
mov
repnz
xchg
inc
cld
cmp
sbb
mov
movs
movs
cld
dec
push
bound
call
sub
push
call
(bad)
aam
in
mov
in
clc
mov
add
lods
mov
fdiv
cmp
cmps
ja
les
cli
mov
popf
push
xchg
or
popf
retf
inc
cdq
cmps
jle
(bad)
xor
adc
out
jb
jns
adc
push
dec
push
out
aad
arpl
cwde
push
sbb
push
lahf
and
jb
jns
bound
push
enter
mov
adc
jp
int
dec
adc
mov
sbb
sbb
mov
mov
push
xchg
rcl
xlat
in
and
mov
(bad)
jmp
xchg
pop
je
cmps
loop
pop
pop
or
in
dec
dec
call
adc
daa
shl
int3
es
cli
(bad)
pop
pop
imul
aam
fadd
stc
gs
movs
(bad)
out
dec
stc
pop
scas
sub
call
pop
dec
push
cld
mov
mov
mov
add
(bad)
(bad)
clc
out
inc
jg
or
and
scas
xchg
xchg
pop
pop
push
mov
mov
dec
mov
xchg
gs
adc
xor
iret
and
adc
aad
adc
lds
sahf
in
lods
cmc
call
mov
out
popa
lods
jno
push
out
cmp
mov
xlat
imul
aam
fdiv
shl
jno
mov
xchg
sti
enter
xor
mov
out
xchg
xchg
jp
(bad)
jecxz
and
(bad)
(bad)
pusha
jno
xor
mov
pop
fchs
outs
int
jns
dec
mov
int3
xchg
cmps
jmp
loopne
push
mov
adc
jmp
aam
cdq
test
sahf
mov
clc
sub
xor
lods
adc
fisub
ja
not
add
add
xchg
popf
imul
pop
push
dec
cmps
mov
or
mov
push
imul
adc
push
call
out
lahf
aas
jmp
xor
xchg
pushf
add
pop
paddusb
jmp
outs
jns
scas
mov
sbb
inc
out
daa
sbb
pop
(bad)
sbb
dec
test
test
hlt
pop
xor
dec
jp
movs
dec
test
xchg
and
ja
aaa
xchg
leave
movs
add
xchg
mov
inc
dec
lahf
(bad)
out
jns
cmp
fcom
fsub
mov
sbb
xor
push
(bad)
add
or
into
xor
les
cdq
jnp
mov
sbb
pop
mov
cmp
data16
pop
mov
push
pop
cmp
cs
xchg
jno
adc
imul
inc
movs
or
and
mov
jnp
or
scas
imul
and
stos
xor
retf
popf
lock
jae
add
nop
mov
lea
push
imul
mul
stos
mov
imul
in
sti
xor
xchg
or
cmps
mov
pop
pop
dec
test
call
mov
jne
pop
mov
adc
push
inc
pop
int3
mov
dec
dec
test
adc
add
sbb
sbb
sub
sbb
mov
jbe
clc
in
or
add
jne
xor
(bad)
jecxz
cmp
pop
mov
movs
or
sbb
mov
scas
mov
call
xor
iret
je
jo
jge
pop
jg
mov
fcom
mov
xor
jns
scas
pushf
call
cmps
push
cmp
xchg
xchg
arpl
and
cmp
push
jno
dec
adc
jp
mov
xchg
sub
test
xor
(bad)
fcomp
sbb
ret
fistp
out
fisttp
test
pop
loopne
lods
lock
lds
and
rcr
jo
push
mov
or
ss
mov
jne
fdiv
push
xchg
xor
inc
(bad)
in
pop
dec
hlt
jmp
dec
mov
icebp
sub
in
xor
mov
sub
and
aad
dec
push
scas
mov
popa
es
loope
mov
ret
jle
mov
xor
icebp
or
pop
aas
mov
dec
and
add
std
out
cmp
cld
or
pop
sbb
cwde
fwait
lea
mov
push
cmps
maskmovq
not
test
pop
mov
jbe
shl
add
test
push
sbb
scas
dec
fstp
jmp
cmp
xor
adc
pop
jbe
inc
test
aas
shl
jne
xor
xor
pop
pop
jb
pop
pop
in
std
xor
aad
(bad)
lds
addr16
shl
stos
pop
(bad)
popa
imul
xlat
std
mov
mov
jl
or
and
test
xchg
add
xchg
dec
jns
or
sar
and
sar
pop
xor
pop
mov
pop
les
lods
or
pop
cmps
mov
nop
pushf
jge
and
jmp
aaa
test
and
shl
jmp
std
mov
jno
stc
sub
outs
sbb
call
frstor
jbe
mov
test
mul
loopne
cdq
jg
pop
cmp
push
cmp
push
lods
ret
fnstsw
aam
cmp
jp
stos
or
cmp
outs
test
sub
cli
adc
dec
fist
outs
shr
mov
jae
push
cmc
pop
repnz
dec
inc
jnp
push
sub
jnp
or
loope
pop
and
imul
out
das
add
add
mov
mov
ret
push
push
inc
ins
push
retf
fmul
push
ret
adc
in
mov
stos
jne
(bad)
dec
imul
fbstp
jbe
or
dec
and
mov
lss
add
xchg
or
add
(bad)
pop
pop
mov
push
mov
add
aam
jo
outs
bound
sahf
outs
pop
xchg
loop
jmp
push
fwait
dec
addr16
push
push
push
aam
jg
mov
inc
xor
out
push
mov
mov
ficomp
ret
test
daa
push
aas
fstp
mov
inc
or
sub
in
pop
jne
mov
aam
out
pmaxub
xor
js
cmp
mov
loope
xchg
lds
shl
inc
mov
jl
test
cld
adc
jmp
repnz
pop
cs
xchg
dec
cmp
ficom
mov
call
push
inc
mov
out
lahf
div
mov
movs
into
fs
pop
xor
mov
(bad)
and
mov
retf
mov
push
lds
mov
jl
test
jae
icebp
push
xchg
dec
jl
mov
and
bound
fwait
imul
mov
mov
sbb
test
sahf
or
jns
jl
add
pop
cmc
mov
lea
imul
data16
je
es
mov
push
sbb
fisub
cmp
mov
mov
sti
push
out
stc
pop
f2xm1
fcom
leave
jecxz
ret
adc
sub
fisttp
lea
jecxz
sbb
dec
push
and
(bad)
icebp
jne
add
or
sbb
mov
shl
(bad)
sub
push
popf
xchg
data16
lock
dec
dec
in
ds
out
mov
adc
das
aam
jno
out
outs
out
sub
das
jle
and
push
jp
jns
ins
push
daa
out
cdq
and
sbb
call
xor
scas
aaa
out
and
mov
scas
dec
jne
mov
inc
push
mov
pop
psubsb
push
outs
xchg
and
sahf
retf
add
mov
sub
mov
mov
mov
je
in
daa
int3
mov
jg
push
pop
mov
aad
shr
iret
cld
imul
inc
mov
(bad)
cmp
shr
mov
xchg
mov
pop
cmc
sub
ret
dec
mov
int3
sbb
int3
or
mov
loope
imul
or
fnsave
inc
mov
push
cmp
aaa
mov
aas
dec
ins
leave
add
jnp
fwait
sub
lds
xor
cdq
pop
cmp
mov
pop
dec
fwait
test
outs
push
fbstp
xor
leave
(bad)
mov
ins
ins
ja
jg
mov
add
icebp
dec
test
int
cmp
in
cld
push
fld
jp
aaa
imul
cli
add
or
mov
inc
adc
popa
jnp
xchg
inc
fsubr
dec
cmc
mov
lods
sahf
jmp
mov
arpl
inc
test
inc
into
ins
xor
mov
leave
mov
and
inc
jbe
cmp
stos
pavgb
mov
xchg
mov
xor
repnz
dec
cmp
dec
xor
xlat
daa
dec
test
pop
xor
xor
mov
inc
or
sar
(bad)
out
int
loope
jnp
dec
xlat
out
jl
pushf
movs
push
cmp
pop
mov
and
and
loope
lods
mov
jb
retf
pop
sub
enter
ins
xchg
js
adc
and
(bad)
jmp
loope
mov
push
cmps
loopne
pop
daa
sbb
inc
and
jl
xor
mov
or
aas
cld
adc
ja
leave
test
push
add
popa
adc
fbld
rcr
mov
fyl2xp1
adc
dec
jecxz
mov
int
pop
movs
mov
in
sub
cmp
xchg
cmp
es
iret
out
add
mov
cmc
add
sbb
sar
fcmovu
test
push
xchg
cmp
outs
jno
mov
jmp
cs
repnz
iret
imul
jb
jb
jnp
imul
imul
or
dec
xlat
das
adc
loope
or
fld
dec
aad
or
std
arpl
mov
inc
out
and
in
mov
cs
pushf
fnsave
xor
imul
imul
ret
leave
pusha
rol
dec
mov
add
xor
mov
icebp
push
cli
js
sub
inc
jg
in
adc
test
push
sbb
push
inc
xchg
pop
scas
cld
add
scas
xchg
aaa
sti
push
ins
jecxz
jecxz
mov
(bad)
sub
sub
mov
pop
sbb
dec
mov
mov
mov
xlat
aas
mov
or
cmp
add
mov
outs
stc
adc
cmps
es
push
sbb
lods
sub
push
pop
cmp
and
loopne
cmp
ret
pusha
div
mov
cld
pop
(bad)
clc
cmp
dec
test
scas
xor
arpl
imul
in
jge
dec
mov
push
bound
mov
scas
xor
pop
aam
rol
jle
sub
push
imul
into
in
xchg
adc
pushf
add
bound
sub
lock
mov
add
(bad)
scas
das
jmp
push
test
neg
not
add
je
test
inc
mov
ret
adc
popa
in
jae
outs
or
cdq
jg
retf
retf
fcom
xor
mov
and
mov
jp
retf
imul
js
leave
int3
push
leave
fcomp
cdq
in
dec
push
cmps
(bad)
pop
jb
stc
or
fstp
or
mov
jns
das
(bad)
les
lods
mov
fs
adc
mov
in
pop
xor
sti
xchg
inc
adc
sub
adc
sbb
(bad)
enter
lock
outs
mov
sbb
mov
inc
xor
dec
retf
movs
inc
push
ins
dec
adc
pop
(bad)
ffreep
push
mov
adc
push
inc
push
or
js
lds
aam
fistp
mov
or
(bad)
fmul
in
fcmovb
push
daa
xor
pop
lahf
adc
push
(bad)
retf
(bad)
sub
push
mov
push
retf
pop
or
shl
in
mov
in
jg
xchg
fld
jmp
sbb
bound
push
push
ds
push
(bad)
addr16
push
mov
(bad)
xchg
jg
js
sub
or
mov
xchg
and
rol
mov
fmul
fcomip
or
enter
fstp
es
loope
xor
jecxz
pop
addr16
int
dec
out
mov
add
jmp
xchg
add
cmp
sub
cmp
loope
push
xor
jnp
dec
ja
movs
cli
repnz
ins
mov
int3
data16
lds
cs
enter
pop
dec
sahf
mov
push
in
cld
sbb
pop
sahf
adc
outs
pop
inc
es
push
mul
dec
pop
or
hlt
mov
lock
mov
test
fstp
sub
jmp
adc
test
add
pop
xchg
xchg
jbe
xchg
push
and
push
fisubr
aad
jbe
(bad)
leave
jp
add
push
in
cdq
sbb
mov
mov
or
mov
add
(bad)
lods
shl
mov
daa
mov
add
fist
pushf
xor
sub
call
pop
xor
mov
mov
adc
shl
mov
push
sbb
stos
xchg
repz
idiv
sbb
iret
sub
stc
mov
cmp
mov
jl
pop
ins
repz
cmp
cmovnp
out
add
test
das
xor
add
loopne
push
sub
cli
or
or
inc
enter
mov
sbb
fdivr
mov
int3
mov
push
pop
retf
push
aaa
(bad)
and
xchg
mov
mov
mov
push
(bad)
xor
jmp
mov
aam
fcom
fsubr
repz
lock
cmps
add
mov
loopne
xchg
scas
jge
xchg
ja
ret
and
or
or
cwde
lods
sub
push
ja
inc
adc
fs
sbb
mov
and
addr16
jno
dec
sbb
loope
dec
das
ficom
inc
jg
setg
sbb
repnz
mov
inc
add
cmp
out
jle
mov
imul
pusha
and
mov
(bad)
mov
sbb
data16
scas
sub
aam
mov
lahf
inc
cmp
neg
jns
mov
add
icebp
mov
cmp
mov
fldcw
int
jnp
in
jae
or
xor
mov
xchg
shl
pop
repz
popa
mov
push
in
push
push
in
or
jns
sub
fld
test
retf
out
cld
xor
sub
sahf
(bad)
iret
out
cwde
xchg
lods
mov
test
and
sahf
ror
pop
xchg
mov
dec
call
xchg
in
fist
xchg
and
dec
mov
jp
icebp
lods
jl
cmc
leave
mov
movs
push
sub
pop
sub
int3
mov
dec
pop
fild
sub
adc
pop
icebp
pop
js
jnp
mov
add
ret
aam
pushf
adc
cld
dec
jecxz
dec
cld
dec
adc
inc
adc
push
sub
or
lods
les
cmp
mov
adc
(bad)
or
stos
(bad)
jle
cmp
fcomp
sbb
in
gs
dec
loop
hlt
add
repz
aam
and
jmp
out
(bad)
fcom
push
mov
aas
(bad)
sar
inc
jmp
mov
int3
scas
popa
ret
(bad)
fsub
and
dec
cs
dec
mov
shl
popf
stos
bound
inc
xchg
xchg
ret
sub
les
js
bound
and
sbb
xchg
dec
mov
jbe
scas
rol
lahf
jle
xchg
dec
hlt
mov
cmp
xor
push
ficom
scas
int
push
(bad)
mov
or
inc
or
xchg
arpl
xchg
jge
repnz
or
jne
mov
xor
mov
ja
test
jne
pushw
(bad)
fdiv
dec
in
imul
cmp
std
jecxz
dec
stos
out
leave
mov
xchg
jo
add
xchg
(bad)
xor
mov
ror
fsub
push
(bad)
int
ja
je
and
in
popa
je
movs
dec
nop
pop
mov
hlt
out
outs
and
push
fsubr
aas
cmps
add
(bad)
xor
and
sub
pop
inc
out
mov
push
pusha
call
mov
pop
mov
outs
or
sbb
enter
shr
xor
in
loopne
xchg
sar
sahf
aaa
mov
cmp
push
ficom
inc
lods
push
jle
mov
out
(bad)
add
push
mov
pop
xor
out
mov
stos
bswap
jne
sub
retf
ficom
jl
push
sahf
mov
mov
adc
repnz
adc
push
cmps
pop
ret
push
fs
fmulp
mov
xor
les
enter
mov
cmps
aas
jecxz
mov
adc
loop
cmc
std
and
xor
inc
popa
push
cmp
pop
lahf
aaa
mov
neg
xor
pop
aaa
mov
mov
leave
jns
and
(bad)
pop
sub
sub
push
dec
stc
outs
adc
scas
das
add
xor
sti
add
add
xor
bound
and
test
sub
dec
test
arpl
stos
xchg
arpl
mov
test
sub
cs
and
push
aaa
or
sub
push
stos
xchg
fs
adc
xchg
and
jb
cmp
push
inc
mov
nop
xchg
or
gs
mov
repz
mov
(bad)
cmp
dec
adc
push
pop
cmp
fcom
xchg
dec
pop
lahf
ins
pop
out
sub
fld
imul
xchg
cwde
dec
adc
(bad)
mov
leave
dec
adc
xchg
xor
add
pop
fwait
icebp
fist
mov
loope
cmc
lods
das
cmps
sub
loopne
and
aad
stos
lds
pop
mov
icebp
jle
cmc
movs
in
add
cmps
inc
jle
ret
lods
outs
push
push
cwde
cmp
pop
outs
frstor
xchg
mov
cmc
xor
imul
int3
test
nop
les
daa
cmps
or
sub
aam
xchg
into
jp
mov
jp
sbb
jp
adc
nop
push
sbb
and
adc
sub
arpl
fsub
jg
xchg
sbb
std
les
icebp
repz
cmp
mov
outs
cmp
mov
xchg
shr
rcl
rol
sub
xchg
fcom
outs
ss
les
test
mov
ins
mov
inc
mov
jne
mov
mov
popa
cdq
loope
mov
cmc
xlat
xchg
adc
jbe
movs
adc
idiv
mov
mov
dec
test
jle
aas
aam
pop
test
out
nop
ret
into
fcmovu
stos
add
pusha
sar
inc
ds
repnz
jne
cmps
adc
cmps
shl
mov
in
mov
movs
xlat
xor
mov
pop
mov
add
popa
or
push
adc
fdiv
cmps
call
(bad)
push
in
push
mov
dec
icebp
frstor
ret
sbb
mov
sbb
das
dec
ret
jno
sub
in
ins
pop
sub
aaa
jne
push
sub
out
jmp
out
xor
retf
call
ret
inc
sbb
das
clc
xor
add
pusha
(bad)
mov
(bad)
jbe
adc
sub
call
jbe
push
jmp
push
xchg
push
sbb
or
push
push
add
out
xchg
push
in
xchg
ins
ins
pop
jno
dec
inc
inc
ficom
inc
cld
test
pop
inc
add
inc
sub
cdq
dec
stos
iret
int
out
adc
cmp
dec
or
repnz
cmp
mov
jae
fist
and
push
and
mov
in
aas
scas
(bad)
mov
mov
cmp
mov
in
xor
inc
add
jle
mov
jecxz
push
sub
test
xor
retf
push
and
dec
mov
sbb
(bad)
dec
imul
dec
xor
(bad)
inc
xor
(bad)
ds
bound
adc
rcr
push
add
jne
cmp
aas
and
pusha
fsin
push
xor
cdq
xor
jl
ja
mov
fimul
int3
sbb
xor
cdq
ror
jne
jae
mov
clc
sub
xchg
lods
aas
mov
adc
stos
jbe
inc
adc
ret
loopne
push
shl
adc
add
ret
xor
and
cwde
xchg
xchg
pop
jmp
test
test
int
outs
or
xchg
dec
test
fstp
jle
call
ret
les
(bad)
xchg
mov
push
sbb
into
xchg
icebp
and
pop
inc
hlt
dec
jg
mov
push
push
sub
xor
adc
js
in
jno
retf
cmp
mov
sbb
mov
jecxz
enter
aad
add
test
and
mov
cmps
jg
jp
pushf
clc
add
xchg
out
rcr
leave
js
cwde
fucom
aad
inc
addr16
cdq
loope
aam
scas
leave
aam
imul
or
cwde
pop
mov
xchg
pop
sahf
ds
mov
addr16
jns
pop
into
movs
iret
jbe
movs
pusha
jne
and
push
mov
cli
cmp
imul
sbb
scas
(bad)
lods
sub
push
dec
js
cmps
inc
push
adc
lods
les
shl
inc
sub
pop
lock
mov
push
xlat
jmp
clc
aam
retf
cmp
cs
adc
fisubr
jae
pop
xchg
jne
mov
pop
sub
ss
xlat
add
bound
cmc
pop
xchg
jnp
lahf
sbb
fimul
pop
cmp
arpl
leave
mov
cmp
aaa
pop
iret
sbb
dec
cmc
(bad)
pop
mov
test
mov
fnstcw
sbb
pop
shl
aad
inc
fistp
scas
xchg
add
lds
fidiv
mov
pop
jp
push
and
adc
out
out
xchg
jg
cmc
in
mov
aaa
cmp
jae
mov
mov
ret
cmp
test
add
imul
pop
mov
pop
or
test
jno
jns
pop
xchg
xchg
ins
mov
cmp
loope
sbb
enter
(bad)
pusha
jno
and
call
mov
mov
or
jbe
in
mov
sbb
mov
xchg
ds
inc
jp
test
dec
test
lods
dec
mov
test
call
push
gs
pop
fstp
int3
scas
cmp
pop
neg
in
jb
adc
mov
loopne
scas
mov
mov
out
call
cdq
jae
mov
fs
inc
xor
in
fstenv
dec
cld
int3
push
test
ret
shl
cmp
mov
jl
mov
les
push
loope
shl
fnstenv
mov
mul
xchg
daa
mov
push
mov
retf
or
jg
mov
repz
into
mov
adc
dec
sub
add
jno
pop
jo
sbb
push
(bad)
shl
sub
test
mov
aam
daa
(bad)
cs
fs
cs
shr
popa
lea
int3
loop
mov
pusha
rol
call
push
ss
dec
inc
or
test
jl
and
pop
loop
jb
xchg
std
inc
div
adc
bound
xor
lods
in
and
cli
dec
dec
daa
jmp
cmc
lea
fsub
pop
test
fnsave
xor
outs
pop
repz
pop
js
lods
and
sub
call
movs
sub
xlat
sbb
loopne
dec
and
or
sub
adc
jmp
outs
imul
or
retf
popa
je
lock
mov
xchg
lahf
adc
jnp
(bad)
jmp
push
mov
and
sahf
xchg
ror
mov
jnp
mov
clc
out
ja
idiv
hlt
adc
cmp
push
lock
xor
mov
jne
adc
pusha
sub
mov
mov
cwde
out
retf
lea
nop
sub
jae
and
cmp
(bad)
pop
outs
icebp
mov
jge
sbb
inc
inc
adc
shl
in
cmp
cmp
and
out
test
out
pop
popa
jp
mov
fimul
mov
fsub
std
daa
mov
std
dec
fld
jnp
mov
push
push
add
aaa
data16
inc
loop
(bad)
fsub
fxch
gs
adc
push
lods
ins
rol
mov
loop
hlt
xor
outs
aam
das
enter
inc
ret
push
out
fidivr
(bad)
mov
daa
mov
sar
push
push
pop
mov
dec
test
mov
inc
loop
mov
mov
mov
arpl
retf
or
jb
cld
sub
inc
mov
ss
fidiv
mov
xchg
xor
pop
or
sub
loopne
cmp
jo
xchg
aaa
icebp
mov
fsubr
sbb
xor
ror
ffree
mov
jne
test
cmp
inc
pop
mov
cmp
ret
dec
jl
jecxz
mov
and
add
(bad)
lahf
loope
pop
mov
pop
sbb
call
push
pop
mov
add
and
sub
and
mov
push
lea
sbb
in
fstp
loopne
(bad)
push
loopne
inc
test
cdq
fnstsw
sahf
xchg
mov
inc
mov
outs
and
pop
pop
lea
gs
mov
nop
fild
mov
or
sub
jnp
ja
int3
mov
imul
enter
ret
mov
inc
sub
iret
pushf
jmp
xchg
or
call
lds
(bad)
mov
loopne
fld
rcl
pop
es
(bad)
jl
in
test
aas
imul
jno
sub
mov
clc
add
and
cmc
(bad)
hlt
add
jo
int3
mov
paddusw
sbb
or
retf
ins
cmc
cmp
ins
cmc
movs
test
mov
adc
lock
daa
and
icebp
xchg
xchg
rol
pusha
adc
call
in
(bad)
outs
pop
push
cmps
or
bound
and
adc
pushf
test
stos
and
add
mov
ins
jp
pop
ins
cmp
adc
cmp
int
std
add
xor
stos
push
fdiv
lock
fcomp
mov
call
ss
cmp
cld
loopne
imul
mov
jo
inc
popf
inc
mov
ror
lea
inc
adc
icebp
ds
cmp
mov
dec
xlat
push
jbe
cmp
mul
jmp
inc
call
dec
add
xor
stos
cmps
(bad)
in
cmps
jmp
test
mov
xchg
in
cli
fdivr
cmp
or
push
fdiv
imul
loop
mov
jae
pop
in
pop
(bad)
xchg
neg
leave
mov
jecxz
lock
outs
dec
test
dec
ja
mov
outs
dec
scas
int3
mov
cmp
dec
add
lahf
je
lock
in
rcr
push
push
iret
stc
xchg
xchg
mov
cmp
xchg
retf
pop
inc
pushf
clc
xor
fistp
dec
jnp
dec
mov
scas
arpl
fsubr
and
cmp
push
push
fwait
or
retf
cmp
in
push
cmp
dec
jecxz
loop
xor
ret
outs
inc
cmp
jmp
imul
test
shl
jne
sub
popa
bound
(bad)
mov
mov
lock
rcl
in
cmps
into
cmps
mov
bound
retf
movs
xor
pop
and
xlat
adc
sbb
das
ret
fwait
enter
push
ins
cwde
pop
push
jle
and
nop
jns
push
dec
fs
jns
popa
push
push
xor
or
cmp
inc
clc
ins
(bad)
fcom
fs
dec
xor
mov
jmp
out
xchg
mov
sub
and
gs
mov
aas
adc
jmp
fiadd
(bad)
ins
out
jge
in
xchg
sar
pop
jno
hlt
add
mov
xchg
(bad)
in
xchg
xchg
fs
loope
adc
push
sbb
pop
jmp
add
pop
cmps
or
adc
cmp
pop
mov
cmp
hlt
stos
xor
xchg
nop
xor
inc
in
out
(bad)
or
push
cmp
mov
rcr
inc
repz
aad
mov
adc
sbb
adc
jle
lods
mov
xchg
repnz
pusha
pop
aas
ret
mov
sbb
mov
push
and
ret
mov
mov
cmps
mov
jbe
icebp
dec
enter
addr16
dec
movs
data16
fmul
jecxz
push
adc
push
js
mov
mov
push
push
loopne
(bad)
jmp
mov
add
mov
inc
mov
jb
push
aas
push
jno
pop
sbb
int
(bad)
out
fisubr
cmp
xor
enter
ins
retf
and
jg
popf
data16
sub
stos
mov
stc
mov
mov
mov
inc
dec
jb
cwde
sbb
(bad)
ficom
scas
xor
outs
xchg
pop
adc
push
jno
fadd
xor
pop
push
inc
dec
cs
cmp
loope
mov
add
call
mov
or
sbb
in
jge
pusha
sbb
bound
repnz
ror
push
ins
cmp
stos
sti
mov
xor
out
icebp
(bad)
add
outs
dec
lahf
xor
jp
push
dec
fmul
call
pop
dec
jmp
mov
cwde
jmp
cs
pop
jmp
mov
aad
jge
cmp
cli
out
(bad)
sahf
push
ins
iret
pop
mov
les
pop
rcl
stos
and
fisub
add
(bad)
outs
loopne
mov
adc
inc
rep
dec
sub
and
enter
jb
dec
repz
add
sub
ret
test
addr16
(bad)
loop
stos
jae
sbb
lds
in
sbb
cmps
sub
loopne
popa
jno
push
stos
in
(bad)
fld
mov
push
mov
xchg
into
rcr
fdivr
sti
cmp
out
int3
pushf
movs
pop
push
or
mov
mov
sbb
inc
dec
mov
cmps
in
mov
mov
int
(bad)
push
adc
xchg
aaa
fcom
jmp
or
push
inc
jl
mov
retf
sbb
inc
cmp
sbb
jnp
xchg
xor
pop
sub
out
sbb
mov
sbb
sti
pop
scas
lea
dec
outs
fnsave
xor
(bad)
sar
clc
sub
jns
pop
out
in
popf
outs
(bad)
pop
out
adc
int3
out
aam
xchg
xor
inc
cmp
push
push
out
or
jmp
pop
cmp
ja
add
stos
ins
adc
das
cmp
sti
sbb
cdq
jp
in
inc
pop
sub
arpl
fnstsw
test
inc
push
jecxz
retf
or
bound
dec
dec
sahf
pushf
mov
and
push
sahf
push
xchg
push
addr16
into
xchg
and
rol
leave
outs
mov
push
cmp
adc
and
inc
fdiv
mov
pop
sub
ror
repnz
fwait
sbb
sbb
xchg
xlat
dec
dec
clc
stos
xor
xlat
mov
push
jo
movs
pop
add
iret
(bad)
int3
jmp
cmps
adc
mov
sti
mov
add
lahf
and
mov
sbb
sub
pop
inc
movs
ror
rcr
mov
jbe
adc
mov
sahf
add
das
xchg
xor
mov
outs
sub
pop
fidivr
xor
ins
in
addr16
mov
or
out
cmp
push
mov
popa
pop
dec
outs
in
sbb
push
loopne
fs
inc
(bad)
hlt
cmps
repnz
nop
mov
cmc
aaa
repnz
scas
std
aad
std
adc
shl
mov
pop
retf
and
dec
call
push
hlt
add
jl
or
push
nop
xor
retf
arpl
repnz
retf
das
shl
push
ins
addr16
loopne
int
js
js
pusha
add
cmps
aad
or
xor
mov
es
inc
mov
jbe
ds
test
(bad)
push
pop
loope
mov
gs
jo
pop
aaa
aas
xor
fimul
push
pop
and
ret
cmp
jnp
outs
jmp
fistp
sub
ja
mov
rol
bound
adc
mov
mov
jbe
aaa
pop
pushf
jmp
and
repnz
call
inc
or
adc
mov
cdq
jecxz
push
jmp
call
es
cmps
pop
cmp
ins
mov
dec
stos
lods
in
mov
(bad)
sbb
sti
imul
stc
retf
adc
in
nop
cmps
arpl
dec
fdiv
out
mov
outs
mov
adc
(bad)
int
lahf
lea
sbb
inc
rep
pop
(bad)
nop
add
cmp
dec
cmps
pop
das
arpl
in
jle
pop
idiv
mov
push
adc
cli
cwde
add
inc
inc
loop
or
pop
test
sahf
jmp
(bad)
in
lods
inc
aas
mov
stos
dec
sahf
jae
cmps
pop
fmul
sar
and
aas
sub
jnp
popf
push
pusha
leave
inc
test
push
mov
enter
outs
jmp
xlat
pop
in
shl
jb
in
imul
xchg
and
or
sub
cld
jb
add
mov
enter
stc
test
out
test
(bad)
dec
and
aam
les
add
cld
mov
(bad)
and
cmps
adc
cmpps
sub
sub
pop
adc
aas
iret
and
pop
stos
ds
add
std
repnz
dec
push
and
jo
xchg
jne
std
clc
lock
dec
mov
bound
mov
or
pop
adc
and
xor
mov
adc
retf
xor
push
inc
test
jge
dec
or
into
jmp
lock
hlt
movs
push
in
sbb
xchg
test
cmp
cli
loope
cmp
and
xchg
jmp
outs
add
bound
push
xlat
ret
jns
loop
jmp
fist
cmp
mov
mov
fistp
mov
jns
lea
push
les
mov
outs
outs
inc
jno
jnp
or
sub
xlat
pop
or
xor
cmp
inc
pop
sbb
sbb
cmp
jg
ret
xchg
bound
jae
inc
(bad)
(bad)
jno
and
jb
xchg
add
xchg
mov
lock
sub
sbb
test
cmps
xchg
cs
je
xchg
fwait
add
push
adc
lods
aam
adc
or
xchg
add
je
clc
nop
cdq
popf
inc
aad
and
lods
js
jnp
mov
dec
and
outs
rol
ins
(bad)
pop
in
pop
arpl
movs
dec
mov
push
mov
mov
not
mov
sub
popf
(bad)
sbb
cmp
lea
(bad)
cmps
add
inc
push
mov
jb
or
xor
sbb
fldenv
or
int3
repz
jae
and
cli
cmp
lods
in
mul
stos
dec
cmps
inc
imul
loope
lahf
fsubrp
fwait
mov
dec
ja
rcl
and
and
and
dec
popf
mov
jge
aam
mov
inc
int3
je
cmp
jne
pop
adc
inc
sub
sbb
adc
ror
in
add
and
xchg
call
repz
loope
xlat
or
jmp
(bad)
jge
cmc
and
lds
mov
in
cmp
sub
and
cmp
pxor
pusha
mov
fimul
or
clc
mov
jb
pushf
aam
adc
jae
jnp
sahf
repz
lahf
fld
mov
push
xor
imul
dec
mov
cmps
std
mov
push
repnz
div
fnstenv
mov
add
pop
icebp
push
sar
nop
ret
add
(bad)
lds
jnp
xor
mov
xor
stos
push
dec
leave
mov
adc
pop
popf
pop
call
xchg
xlat
xchg
call
pop
xor
fwait
mov
jnp
and
jnp
mov
sbb
pop
retf
and
adc
and
movs
cmp
dec
mov
sub
and
push
mov
or
stos
outs
pushf
xchg
jp
bound
jp
jnp
mov
and
mov
cmp
(bad)
dec
sub
cdq
sub
mov
and
mov
jno
add
sahf
mov
xchg
fnstcw
sub
cmp
mov
adc
xor
jbe
outs
ss
arpl
push
mov
std
lahf
sbb
pop
push
push
mov
movlps
test
add
test
jns
jbe
test
fdiv
push
daa
movs
cmp
cmp
xchg
xchg
call
fnstcw
sub
movs
jmp
xchg
sub
stos
and
pop
sbb
adc
jb
xor
je
not
jmp
adc
or
aad
jp
push
adc
(bad)
lods
sbb
fidiv
jg
pop
or
imul
cmp
scas
packuswb
fsub
ret
in
mov
xchg
or
jge
mov
in
aam
test
cmp
loope
mov
popa
jo
xor
jae
in
cmp
imul
fstp
iret
inc
add
push
in
or
push
mov
mov
mov
mov
cmps
dec
jne
movs
(bad)
ss
dec
hlt
retf
jbe
test
and
rol
sbb
imul
ja
xor
leave
ja
js
xor
loope
sbb
xchg
call
out
shl
xor
jnp
mov
movs
mov
ss
add
mov
mov
out
imul
pop
mov
dec
push
fsub
ds
cmps
mov
in
jl
fistp
out
das
mov
mov
dec
pop
lahf
mov
mov
add
(bad)
xchg
test
cli
jge
cmc
xor
stos
in
push
sahf
stos
fisttp
xchg
mov
aas
dec
adc
add
pushf
scas
inc
neg
sub
movs
pop
sahf
lahf
cmps
out
adc
cmps
or
sub
(bad)
lods
shl
jno
retf
daa
int3
jge
mov
xor
inc
inc
jg
pop
sub
jg
dec
inc
jmp
in
outs
jg
rcr
adc
inc
add
mul
mov
out
push
pop
nop
int3
(bad)
mov
inc
ret
adc
xchg
nop
push
pop
sbb
mov
mov
or
mov
scas
rol
stos
dec
jp
neg
in
jns
push
mov
adc
mov
test
push
sbb
mov
pop
mov
mov
fmulp
pop
jnp
xchg
movs
mov
sub
sbb
sbb
cmp
ins
mov
sbb
fldcw
mov
mov
and
mov
jae
dec
sti
ja
add
push
mov
sub
aad
xor
jne
rcl
jl
sub
mov
cmp
(bad)
pop
inc
(bad)
adc
mov
cmp
sbb
ins
mov
das
sub
sti
pop
test
push
pop
xchg
imul
dec
push
lock
into
sbb
mov
popa
xor
pop
dec
fs
dec
aam
and
mov
or
std
add
xchg
rol
dec
in
sub
movs
in
mov
push
xacquire
fnstenv
fs
add
fldcw
jle
mul
or
push
mov
cdq
jnp
cwde
cld
xchg
mov
jns
xchg
push
lods
push
add
fs
rcl
fist
mov
int3
and
stos
sbb
xor
cs
mov
js
xor
xchg
bound
pop
mov
jbe
outs
addr16
push
nop
rcl
mov
loopne
mov
test
jae
aas
and
push
jbe
rcl
mov
fld
dec
clc
inc
jae
fstp
xor
repnz
shl
ficom
push
pop
stos
(bad)
frstor
outs
mov
std
mov
jp
xor
ret
(bad)
pop
add
mov
rol
push
inc
mov
push
pop
addr16
xchg
(bad)
lock
out
ins
addr16
inc
dec
movs
or
fdivr
push
sbb
in
jge
or
addr16
outs
mov
and
sar
push
add
inc
neg
mov
ss
retf
or
sbb
cmc
cmps
popf
sub
adc
mov
push
mov
pop
loope
xchg
sub
test
jne
xchg
std
dec
stc
xor
push
stc
ror
or
icebp
out
adc
(bad)
test
add
fwait
shl
mov
sub
xor
xor
mov
cwde
cmc
fstp
cmp
aaa
sub
push
je
les
push
call
mov
cli
dec
sub
adc
in
and
pop
out
sub
nop
ficom
mov
out
test
push
imul
ins
jge
inc
dec
pop
cdq
jb
and
dec
movs
dec
cmps
std
and
shl
pop
fwait
int3
and
clc
mov
repz
jecxz
add
jmp
loop
mov
sub
in
shl
xor
sub
imul
dec
push
xor
shl
outs
pop
inc
cmp
(bad)
sti
popf
mov
add
pop
mov
sub
stos
or
int3
aad
nop
cmps
mov
inc
mov
or
jnp
xchg
cmps
(bad)
mov
push
or
adc
adc
aam
push
or
iret
leave
cwde
imul
ja
mov
mov
je
leave
scas
das
out
dec
or
or
das
mov
out
cli
je
mov
in
xor
pop
(bad)
test
popf
(bad)
adc
adc
idiv
pop
cmc
out
inc
or
mov
fsubr
dec
fadd
push
vphaddbd
int
mov
mov
(bad)
xchg
xor
fld
jmp
dec
dec
cli
cmp
and
mov
adc
mov
push
mov
or
mov
xchg
add
popa
dec
stos
push
push
dec
test
jle
mov
dec
cmp
fcomp
daa
popa
push
mov
jge
adc
mov
loope
ret
cli
or
xor
xchg
ins
fisttp
in
mov
or
aam
test
pop
jle
mov
inc
imul
add
rcr
iret
sahf
clc
fisubr
jg
mov
sub
xchg
push
gs
mov
sub
jne
push
xlat
in
fidivr
shl
aaa
add
jo
fild
(bad)
mov
adc
fist
rcl
push
jmp
test
dec
fwait
ds
in
enter
dec
ins
add
adc
call
xchg
sbb
lea
mov
popa
mov
push
cli
lods
gs
icebp
sbb
(bad)
sahf
mov
dec
ins
dec
test
out
sub
xchg
push
and
shl
xchg
pop
adc
outs
aas
sbb
xor
out
add
out
jmp
(bad)
stos
and
xor
jno
mov
sbb
hlt
ins
pop
rcl
pop
xchg
lahf
xor
(bad)
jecxz
inc
mov
push
push
js
icebp
jecxz
dec
xchg
aas
mov
inc
push
stc
aaa
inc
pushf
scas
adc
adc
in
(bad)
stc
mov
adc
shl
popf
adc
xor
imul
push
nop
pop
daa
sbb
jle
mov
stc
ret
or
arpl
add
mov
ret
mov
fwait
sbb
test
adc
pop
fcomp
sar
sub
call
test
or
sub
leave
adc
inc
sar
mov
ror
xchg
das
jge
adc
xchg
sub
(bad)
in
daa
and
outs
fstp
sub
outs
or
test
inc
fmulp
inc
xchg
and
in
mov
or
jle
pop
push
test
dec
push
aad
and
mov
dec
jb
mov
aad
or
dec
ins
push
push
xchg
enter
adc
xchg
sbb
xchg
jg
pop
sbb
outs
xchg
sub
dec
cwde
lods
fcomp
push
(bad)
bound
cmc
(bad)
fmul
sub
inc
test
addr16
mov
xchg
bound
push
xlat
js
cmp
mov
inc
jmp
enter
ss
stc
push
dec
neg
sahf
(bad)
rcr
clc
add
xchg
pop
dec
retf
gs
lea
xchg
pop
sbb
into
pop
xor
dec
add
pop
inc
les
dec
inc
dec
test
fwait
push
clc
xchg
lea
push
loop
mov
sbb
add
je
popa
adc
cmps
push
adc
or
sbb
nop
outs
repnz
dec
data16
mov
cmp
push
or
lds
fs
sub
mov
pop
push
mov
in
neg
lods
push
sbb
jge
fmulp
outs
into
scas
jae
icebp
outs
test
pop
in
test
push
sub
sub
leave
retf
and
retf
xor
pop
bound
jnp
(bad)
movs
jp
pop
ret
ror
dec
mov
dec
mov
xchg
sbb
ja
call
xor
and
mov
fisubr
sti
lea
xor
inc
mov
and
xchg
jns
pop
xor
inc
test
icebp
mov
cmc
in
push
(bad)
jbe
stos
int3
sub
pop
push
iret
test
add
vmwrite
dec
or
fimul
xor
mov
cmp
clc
jo
and
fstp
iret
mov
pop
cs
mov
cmps
cdq
xor
xchg
jle
add
bound
ret
inc
push
dec
test
cmp
cdq
mov
push
repnz
f2xm1
xor
into
movs
mov
test
inc
dec
popa
mov
clc
mov
lea
pop
shl
jle
outs
cmps
mov
sub
xchg
mov
xor
jp
push
scas
ds
(bad)
pushf
in
aas
repz
xor
mov
sbb
mov
(bad)
lahf
jp
mov
cmps
mov
aaa
rol
add
cwde
jg
mov
icebp
and
fnsave
in
push
mov
inc
pop
leave
xchg
fbld
or
inc
scas
lea
pushf
or
aam
xchg
jecxz
or
(bad)
sbb
cmps
into
push
xor
adc
add
dec
retf
or
je
add
jae
dec
add
sbb
mov
and
or
adc
cli
add
in
movs
sub
test
jne
pop
mov
inc
and
ja
fstp
lahf
(bad)
mov
scas
inc
fwait
mov
xor
imul
and
push
pop
int3
push
sub
xor
scas
dec
inc
cmps
fiadd
or
xchg
xchg
jne
jmp
pop
or
mov
imul
mov
fstp
out
lock
and
mul
clc
jno
jmp
retf
out
cmc
dec
push
data16
cli
cmp
pushf
aaa
sub
pop
add
or
cmp
jmp
cmp
fbld
das
inc
sub
es
ins
sbb
and
aaa
inc
(bad)
data16
dec
leave
mov
sbb
mov
movs
sbb
add
jmp
add
jle
jb
adc
push
stos
cmp
jle
pop
pop
mov
fcomp
rcr
mov
rol
and
popf
test
or
adc
addr16
cmp
cmp
ret
push
data16
pusha
pushf
pop
lds
sub
add
pop
cmp
scas
fist
dec
jecxz
(bad)
iret
jecxz
popa
adc
sub
pop
xchg
mov
pop
rcr
push
fistp
into
ds
mov
mov
xor
xchg
iret
push
(bad)
mov
call
lods
sub
dec
lods
sub
sahf
jmp
aaa
(bad)
lock
mov
cmp
pop
cli
mov
hlt
(bad)
lods
fwait
call
imul
push
aaa
and
dec
push
call
shl
fbstp
into
in
adc
cwde
mov
cmp
cwde
arpl
xor
(bad)
repnz
inc
mov
rcl
loope
ror
out
jo
inc
aaa
mov
imul
in
pop
dec
xchg
aad
xchg
scas
movs
aam
jp
fdivr
icebp
fild
repz
psllw
sub
fucomp
push
jb
jo
and
jne
(bad)
div
mov
jne
fild
es
add
(bad)
out
mov
cs
loope
imul
fdiv
jmp
js
pop
jle
mov
(bad)
out
sahf
jmp
mul
rol
stos
retf
not
mov
icebp
sbb
cmp
and
cs
mov
jmp
pop
xor
pop
hlt
pop
(bad)
aad
xchg
into
push
cmp
inc
fs
inc
lods
fnsave
and
sahf
adc
sub
add
js
ror
and
fcmovnbe
xor
out
xchg
sub
shl
pushf
gs
mov
cmps
add
sub
xchg
sub
(bad)
out
loop
dec
(bad)
aas
int3
sbb
push
xchg
dec
arpl
inc
jmp
ds
mov
mov
ror
and
xchg
jmp
ret
in
cmps
jmp
xlat
inc
cmp
push
xchg
sar
jmp
cmp
cmp
push
shr
pop
out
dec
dec
mov
jo
dec
or
repz
icebp
jns
push
dec
pop
or
cmp
sub
inc
mov
pop
in
scas
rcl
xchg
mov
xchg
mov
mov
jns
loopne
lahf
pop
add
inc
inc
retf
xchg
add
dec
ja
jp
stc
inc
cld
inc
cdq
mov
setp
stos
xchg
outs
xchg
jmp
imul
cmp
and
inc
xchg
jp
add
(bad)
jecxz
iret
shl
adc
mov
sbb
repz
fstp
ja
loope
pop
cmc
push
out
mov
sar
and
push
stos
add
or
cmps
fisubr
push
adc
mov
jb
js
or
imul
dec
outs
shl
pop
mov
ret
in
mov
mov
mov
cli
rcl
cs
sub
sbb
movs
fcomp
push
jge
xchg
stos
xchg
out
arpl
call
cmp
mov
jo
jmp
in
add
test
enter
push
cmp
inc
xchg
sub
or
mov
and
sub
loopne
dec
(bad)
jmp
outs
or
dec
pusha
jb
test
fldenv
pop
call
add
inc
addr16
call
mov
movs
jp
inc
and
aaa
(bad)
adc
out
hlt
fidivr
and
adc
cmc
ins
jo
mov
cmc
call
fwait
jp
rcr
jb
in
movs
int3
mov
dec
paddq
sti
repz
sbb
es
inc
imul
jne
and
repz
out
ss
mov
scas
mov
jbe
mov
xlat
fimul
js
sbb
dec
in
xchg
adc
cs
jae
movs
jae
mov
cmps
push
cli
ins
mov
fisttp
xor
adc
cmc
xchg
popf
xor
and
lods
mov
xchg
pusha
sbb
inc
xchg
int3
cmp
or
push
nop
and
jae
pop
in
les
cmps
inc
adc
push
inc
dec
sub
jl
lds
jmp
and
ret
sub
push
adc
xchg
jbe
mov
xor
shr
imul
adc
rol
mov
std
cmps
mov
ret
push
add
and
xchg
mov
add
call
(bad)
lea
and
bound
add
adc
icebp
and
cmp
data16
shl
(bad)
xchg
push
or
pop
xchg
xchg
std
lock
mov
mov
cmp
mov
cs
shr
add
lds
mov
(bad)
xor
lea
call
jle
mov
xor
mov
push
arpl
(bad)
neg
sbb
mov
pop
pop
adc
(bad)
ret
mov
add
mov
mov
in
aam
inc
bound
push
mov
or
out
xchg
fsub
shr
xchg
fsubp
xchg
push
mov
out
cdq
fist
and
cmps
xor
sub
scas
imul
bnd
lods
mov
mov
pop
pop
or
mov
sub
stos
aaa
jbe
fsubr
popa
retf
inc
in
out
push
and
(bad)
in
pop
cli
mov
fchs
sub
fsubr
pop
xchg
cmp
test
cmp
aam
call
in
(bad)
outs
and
xor
movs
mov
rcr
cmp
sbb
pop
int3
scas
retf
out
push
pop
xor
iret
in
lods
loopne
inc
loopne
scas
pop
mov
cmp
push
addr16
gs
sahf
std
iret
mov
rcl
mov
jne
pop
js
outs
aas
push
into
jmp
inc
xchg
stos
neg
push
jmp
mov
test
xor
push
repz
dec
sub
aas
pushf
push
loope
pop
hlt
imul
mov
popf
dec
lock
(bad)
xor
dec
outs
daa
popa
mov
aaa
js
sbb
mov
test
inc
jo
in
jbe
adc
mov
xchg
rcl
les
push
out
fistp
mov
icebp
mov
jp
popa
mov
rol
(bad)
cmp
jmp
movs
lahf
imul
aad
or
push
(bad)
(bad)
les
xor
fiadd
int3
in
inc
sbb
imul
xchg
mov
sti
test
ja
in
push
fidivr
xchg
aas
stos
mov
or
daa
hlt
jno
push
sti
jo
fldenv
aas
cmp
jle
xchg
movs
mov
scas
or
mov
lea
or
fnstenv
mov
test
sar
test
test
xchg
call
lods
stc
pop
mov
pop
ja
mov
mov
jmp
xor
ror
cwde
inc
mov
xor
sub
xchg
cmp
cmps
nop
dec
and
retf
je
shl
adc
push
jne
xchg
scas
xor
aam
lds
popa
xchg
test
sub
cmps
adc
shr
out
lods
and
mov
mov
cs
retf
or
adc
sbb
inc
daa
out
fisttp
dec
(bad)
(bad)
sub
js
iret
ja
sbb
enter
ret
xchg
fld
shl
push
sub
int3
scas
test
mov
call
(bad)
popa
xchg
jecxz
add
jbe
(bad)
das
pusha
push
sub
fisttp
enter
xchg
fcmovne
fs
scas
add
jmp
add
fistp
lods
cdq
dec
out
mov
jl
cld
mov
cld
fbstp
xor
xor
enter
cmp
cmps
or
es
aaa
push
das
aad
push
mov
pushf
mov
int
xchg
pop
cli
push
shl
sahf
call
inc
mov
push
mov
js
clc
stc
mov
retf
mov
mov
sbb
mov
push
ret
push
pop
sbb
(bad)
adc
add
inc
cmp
xchg
test
inc
mov
stos
jno
sti
mov
or
pop
push
pop
add
daa
xchg
out
xchg
nop
push
xor
xchg
(bad)
popa
jmp
sbb
aas
push
sahf
add
cmp
push
add
xchg
ror
jo
jl
dec
iret
jbe
pop
add
out
int3
jo
rol
or
cmp
mov
push
xchg
mov
mov
aad
mov
ror
push
aad
std
ficomp
mov
xchg
pop
lea
je
pusha
or
test
data16
mov
cmp
pushf
(bad)
rcr
xor
aas
fimul
mov
and
int
(bad)
ins
xchg
mov
in
sbb
pop
xor
repnz
lds
mov
push
daa
lea
iret
dec
mov
fstp
stos
leave
push
jno
sub
pop
pop
sub
fld
xchg
sub
iret
push
hlt
sub
sbb
adc
mul
dec
dec
pushf
mov
pop
cdq
and
adc
lods
adc
in
ss
jb
xor
jg
test
ds
ret
mov
mov
or
mov
and
jns
movs
es
xchg
sbb
ret
mov
out
jns
pusha
nop
jo
jle
cmp
adc
push
(bad)
je
sar
push
dec
mov
or
mov
aam
bound
lods
lods
imul
sub
mov
bound
add
aas
mov
sbb
shl
push
daa
in
out
mov
mov
imul
cld
arpl
jg
call
xchg
call
jne
push
stos
jne
pop
fs
aas
mov
pop
or
add
push
test
mov
xchg
jg
retf
cmp
inc
cwde
pop
fwait
das
jbe
test
stos
ds
sbb
mov
(bad)
popf
xor
dec
dec
in
gs
retf
(bad)
sbb
or
pop
lahf
sub
adc
cld
leave
jbe
adc
rol
(bad)
pushf
aam
imul
jl
add
mov
and
jnp
or
rcr
fiadd
mov
out
leave
ja
mov
shl
fs
push
nop
add
fs
or
nop
xor
bound
ror
(bad)
daa
lods
popa
adc
cmp
push
mov
mov
sti
daa
bound
jg
movs
xlat
cmp
mov
and
add
push
sub
mov
and
sbb
into
fild
fxch
inc
std
jge
push
sar
add
retf
dec
inc
scas
xchg
mov
mov
cmp
push
sbb
fistp
clc
jmp
xchg
adc
mov
stos
push
adc
jb
into
ins
idiv
add
pop
cli
lahf
sbb
pop
movs
out
pop
jl
clc
out
ins
jmp
mov
pop
call
movs
in
adc
sub
cs
dec
adc
rcr
leave
jmp
sti
loop
jecxz
arpl
fisttp
call
pop
add
inc
call
fucomip
xchg
call
xchg
fimul
imul
mov
sub
ss
sbb
leave
mov
or
xor
ins
mov
mov
imul
jo
xor
rcr
sub
and
cmps
(bad)
popa
push
or
mov
dec
add
cs
js
test
adc
add
jnp
pop
or
xchg
cmc
inc
in
dec
inc
inc
inc
in
clc
add
push
xchg
cs
add
bound
sub
push
inc
out
iret
dec
xor
mov
pusha
or
mov
xchg
xor
adc
mov
aas
jle
pop
adc
call
mov
mov
xchg
scas
hlt
out
sti
dec
sbb
pop
inc
mov
sbb
cld
push
xchg
clc
sub
lahf
std
lds
jo
cld
out
sub
adc
stc
dec
dec
mov
mov
and
call
aaa
int
pop
cmp
jnp
xchg
or
repz
pop
scas
dec
ja
xor
push
stc
dec
and
pop
clc
hlt
mov
xchg
fnstcw
push
add
(bad)
cmp
pushf
or
aam
xlat
(bad)
sub
mov
jmp
jae
ds
cmps
fild
and
enter
loopne
call
fidivr
pop
data16
mov
fldcw
mov
xchg
push
cmps
js
push
sar
out
(bad)
std
scas
cli
enter
mov
push
shl
mov
push
je
push
add
stos
mov
and
mov
mov
push
bound
xor
adc
test
sbb
test
or
into
add
xor
add
dec
add
cmp
pop
inc
out
lods
jmp
inc
aad
lock
dec
adc
enter
das
imul
bound
jno
ss
leave
mov
test
jge
outs
and
dec
push
mov
test
out
cmc
ins
pop
add
jmp
sub
into
outs
test
mov
les
inc
outs
push
xchg
shl
ins
pop
mov
ins
sbb
imul
jmp
or
mov
loopne
push
aas
in
fs
xor
adc
push
in
mov
mov
fsubr
pop
ja
bound
es
mov
xor
jp
push
fbstp
jmp
push
adc
(bad)
cmps
cmp
jl
xchg
xchg
cmp
pop
inc
pop
add
scas
mov
jmp
push
pop
shr
mov
jmp
mov
fidiv
cmp
mov
pop
dec
cwde
mov
xchg
imul
inc
sbb
mov
fdiv
sub
lahf
je
push
repnz
popf
and
jo
push
pop
adc
fsub
push
or
pop
rol
xor
or
loop
jecxz
test
sti
xlat
loop
icebp
mov
pop
jne
arpl
test
pusha
sub
pop
gs
cmp
mov
cmp
jo
mov
movs
mov
in
sbb
mov
add
cmps
lods
cmp
call
jp
mov
fst
mov
push
aam
or
sbb
dec
pop
cmp
das
fwait
lods
mov
jbe
pop
pop
ror
and
shl
sar
neg
fs
pop
cdq
push
imul
and
std
(bad)
pop
stc
xchg
and
push
add
fild
gs
sbb
aam
ret
cmp
adc
test
fdiv
out
or
push
ss
cmc
pop
fxch
lods
sbb
ret
mov
jmp
aam
fucom
dec
mov
pop
mov
stos
and
test
lds
loop
(bad)
xchg
cli
lahf
lds
dec
pusha
scas
adc
xor
mov
pop
rcl
mov
ret
repnz
cmc
jle
mov
dec
rcr
push
sbb
jbe
ds
and
mov
shl
xor
test
clc
and
jl
mov
imul
push
leave
mov
test
cmp
in
pop
dec
mov
xchg
sub
cmp
movs
add
jo
icebp
xlat
jns
imul
nop
cld
mov
xor
ds
(bad)
cld
(bad)
push
aas
ret
retf
jecxz
or
or
ss
lahf
sub
mov
es
push
in
push
push
push
retf
mov
jge
push
push
arpl
gs
retf
add
into
es
out
add
(bad)
ficomp
jecxz
in
xor
dec
xor
clc
call
sbb
in
push
div
mov
mov
je
jns
ins
sbb
mov
mov
stc
loope
inc
xor
pop
dec
jae
jae
xchg
movs
and
push
jmp
addr16
xchg
movs
cmp
mov
adc
fstp
addr16
das
pusha
jae
adc
mov
jle
loop
pop
push
xchg
xchg
xor
in
int
adc
jnp
or
iret
mov
mov
mov
js
in
mov
xchg
mov
aam
cmp
stos
jmp
es
or
repnz
add
xor
popf
test
sub
jmp
inc
adc
xchg
xor
pop
es
mov
pop
adc
es
aaa
in
sub
mov
inc
mov
test
sub
pop
hlt
mov
pop
fwait
not
cmps
and
or
aam
shr
in
dec
dec
cmps
mov
dec
push
push
shr
sub
(bad)
outs
ror
xchg
sbb
mov
test
mov
sahf
out
es
retf
cs
mov
lods
and
pop
or
ret
lahf
icebp
scas
(bad)
xchg
fdiv
jmp
out
xor
inc
ficom
cmp
js
dec
xchg
fmul
pop
test
jbe
popf
pusha
rol
pop
add
cmc
xor
mov
pop
xor
pop
sbb
rcr
test
dec
dec
out
call
or
push
mov
or
stos
mov
lock
xchg
push
ja
std
repnz
push
cmp
js
xchg
les
mov
idiv
jge
(bad)
inc
test
jg
adc
test
inc
sub
popf
arpl
je
push
in
jmp
aad
mov
ficom
loop
sub
push
fwait
out
and
gs
loopne
jmp
cmp
add
push
adc
mov
adc
sub
xchg
cmp
pop
xchg
sbb
sbb
test
gs
neg
mov
mov
fs
dec
add
int3
js
(bad)
js
loop
call
jg
push
repnz
or
(bad)
fidivr
lods
and
mov
mov
inc
adc
imul
mov
xor
inc
dec
xor
mov
jbe
fdivr
stos
xor
mov
jbe
pop
xlat
mov
hlt
aad
sbb
sbb
sbb
repnz
pop
neg
xchg
in
or
shl
xchg
(bad)
daa
cld
test
ffreep
or
fstp
or
ds
inc
dec
sbb
mov
cmps
jge
push
mov
in
int3
cmp
mov
push
mov
pop
xchg
test
sbb
push
out
loop
add
jmp
xlat
sub
sub
adc
jmp
scas
pusha
jb
pushf
adc
and
xchg
(bad)
leave
retf
xor
xchg
push
jp
push
cmps
mov
add
out
cmp
outs
bound
mov
test
out
xchg
cmps
mov
jne
scas
xchg
sbb
add
loop
and
arpl
add
lods
sbb
ja
push
pusha
outs
sbb
sbb
int3
fst
or
fisubr
jbe
add
push
dec
or
stos
scas
cmp
mov
sbb
shl
push
ja
in
movs
loop
cwde
dec
jbe
daa
and
pushf
push
dec
shl
in
mov
push
xchg
mov
sahf
pop
movs
cdq
add
pop
stos
add
pop
inc
and
xlat
repz
je
push
dec
icebp
scas
leave
sbb
adc
sub
lods
in
les
cld
outs
mov
mov
mov
fnstenv
cmps
call
movntps
push
(bad)
imul
and
cdq
jmp
into
jmp
shl
lods
sub
aam
rcr
hlt
xchg
pop
retf
into
sbb
scas
cmp
ficomp
dec
mov
pusha
jle
and
clc
cwde
fisub
fidiv
mov
lock
mov
out
mov
push
xchg
mov
add
add
jge
cld
add
xchg
xchg
vrcp14pd
push
js
shl
sqrtps
movs
mov
dec
cli
outs
mov
mov
add
mov
cmps
dec
or
xchg
leave
cdq
cmp
sar
dec
es
adc
xor
push
aam
inc
into
cmp
data16
pop
enter
mov
popf
ret
adc
imul
xchg
and
sub
cld
ds
out
inc
call
pop
loope
loope
or
icebp
mov
adc
and
mov
push
stos
inc
fdiv
and
test
aas
mov
mov
mov
adc
and
pop
enter
push
shl
xchg
dec
sar
ins
push
add
mov
ret
sar
clc
lds
dec
mov
clc
mov
and
xor
addr16
mov
das
mov
jno
(bad)
jmp
cdq
push
inc
sbb
xor
mov
mov
int3
xchg
cmp
fwait
ins
das
jb
inc
out
jbe
ss
mov
fdiv
dec
mov
retf
sub
mov
cmps
add
sub
sbb
xchg
xchg
rol
outs
or
lods
mov
das
sti
jmp
jge
push
mov
cmp
push
push
pop
pop
into
and
sahf
jb
nop
adc
pop
or
fwait
int3
fcomp
inc
stc
pop
shl
mov
test
cwde
sbb
mov
inc
xor
inc
pushf
stc
fwait
jae
push
cmp
loop
xchg
gs
inc
inc
xor
push
sbb
xchg
jl
outs
rol
mov
adc
loop
out
cmp
fs
pusha
jecxz
out
loop
sti
jg
jno
sahf
mov
sub
lods
sbb
sbb
pushf
and
mov
lock
jg
mov
loopne
icebp
popf
sbb
adc
out
inc
(bad)
int
fs
push
adc
mov
xlat
add
out
fild
dec
sub
mov
inc
arpl
addr16
push
mov
outs
js
jmp
mov
jae
jo
adc
mov
jge
inc
ret
cmp
loopne
add
and
xlat
mov
lods
and
in
shl
ss
mov
jecxz
nop
ret
push
gs
push
mov
fnstsw
and
call
aaa
bound
xor
pop
mov
paddsb
aam
pop
mov
ret
(bad)
or
xchg
leave
lods
std
sbb
sbb
xchg
mov
dec
mov
add
xchg
arpl
jmp
mov
test
(bad)
lock
push
scas
sub
loope
retf
pop
icebp
iret
test
mov
jmp
dec
hlt
sahf
push
or
inc
lahf
dec
push
movs
dec
pop
lods
cmp
and
push
ficomp
mov
inc
mov
push
outs
sub
shl
mov
mov
icebp
adc
ror
mov
push
and
ret
rcl
pop
mov
and
xor
jp
pop
push
call
retf
and
fld
sahf
add
adc
lods
mov
cs
iret
mov
aad
jne
push
das
sbb
jo
ficomp
es
jl
cmp
mov
xchg
xchg
stos
les
pop
rcl
add
push
xor
cmps
jo
call
or
adc
data16
test
or
cmp
fstp
xchg
outs
add
(bad)
leave
sub
mov
sar
retf
repnz
es
pop
outs
sar
jl
int
sub
push
(bad)
shl
push
dec
cmp
and
test
pop
fiadd
add
xchg
sub
fwait
mov
xchg
int3
jo
icebp
(bad)
sar
pop
daa
jg
in
mov
aaa
sub
mov
ds
arpl
mov
imul
jl
sbb
mov
pop
loop
mov
jae
daa
iret
ret
ja
(bad)
jmp
or
mov
movs
xlat
adc
jge
or
fwait
mov
xchg
mov
mov
ins
ret
repz
push
pop
mov
or
mov
mov
int3
dec
xchg
sub
jge
sbb
xchg
out
dec
adc
push
or
aad
and
jns
push
cmp
je
jmp
into
jbe
jo
add
call
xor
or
xor
mov
push
mov
ins
arpl
dec
add
mov
jne
xlat
sub
scas
mov
xchg
ins
sbb
jns
repz
iret
test
hlt
sub
sti
xor
sub
jge
(bad)
jl
dec
or
cwde
ins
jmp
xchg
adc
out
adc
and
jecxz
cmps
cmps
sar
add
mov
lods
push
sub
retf
ds
out
(bad)
fs
call
int3
ficom
cmp
(bad)
aas
push
jno
loop
ror
popf
xlat
retf
adc
shr
jbe
add
add
dec
out
(bad)
cmps
rcl
test
inc
lock
imul
out
aam
jg
mov
outs
in
dec
push
stc
mov
xchg
fistp
dec
sbb
push
dec
xor
jle
scas
push
in
inc
pop
popa
test
adc
lods
or
mov
sbb
mov
add
push
add
lods
sub
push
inc
stos
sub
mov
or
clc
and
and
pop
mov
and
pop
(bad)
(bad)
jmp
lods
aad
jl
jecxz
pop
inc
push
mov
cmp
loopne
jge
les
cwde
pusha
ret
addr16
lock
adc
mov
out
fwait
add
cmp
pop
jae
hlt
jno
jne
imul
fisub
mov
cmps
loopne
lods
push
das
push
stos
pop
jmp
(bad)
das
inc
addr16
xchg
retf
dec
dec
mov
call
(bad)
cwde
mov
sahf
mov
and
or
mov
mov
loope
xchg
int
fsub
push
movs
movs
test
fcom
add
nop
leave
cmc
ror
jnp
pop
test
xor
fld
ret
pushf
in
sub
int
hlt
into
test
jmp
daa
icebp
xor
pop
shl
sbb
mov
pop
inc
loop
in
adc
xchg
inc
ret
sub
popf
add
xchg
sub
mov
into
pop
sub
jns
cmovb
aad
push
lods
jo
xor
ins
or
inc
retf
int
pusha
sbb
dec
pop
leave
cdq
xchg
xchg
cmc
mov
and
js
xchg
in
ss
in
xchg
outs
sub
jecxz
pop
push
add
sti
and
cmp
jo
repz
mov
(bad)
aam
sub
into
jmp
mov
cmp
imul
mov
aaa
push
dec
mov
sub
fimul
mov
xchg
stos
jno
xchg
sbb
xchg
add
out
push
ror
cmps
mov
push
movs
shl
cs
icebp
push
xor
jmp
push
mov
icebp
scas
sbb
movs
lods
enter
mov
icebp
sbb
daa
call
nop
lock
add
(bad)
fstp
jmp
cmovs
adc
mov
sbb
sub
sahf
(bad)
test
fucomp
outs
arpl
jg
in
test
enter
out
out
jle
sbb
out
call
add
imul
and
push
push
add
addr16
push
pop
stos
popa
sbb
and
jmp
loope
xchg
mov
add
jmp
and
mov
es
dec
and
cmp
add
cli
(bad)
push
imul
inc
cwde
push
out
fwait
in
xlat
sbb
psubq
sbb
lock
and
fidivr
stc
xor
into
scas
sub
lods
sub
movs
out
fs
xchg
jl
loope
mov
mov
and
ins
xchg
aas
xor
out
les
retf
pop
xlat
mov
or
bound
add
imul
mov
(bad)
pop
shl
jmp
aam
fnstcw
xor
add
push
xor
xchg
lods
sbb
jnp
mov
shl
stc
cwde
aaa
jge
sbb
and
push
fdiv
stos
test
sub
fwait
adc
pop
mov
dec
xchg
or
enter
stc
cs
aas
cmp
sub
dec
ja
lock
push
mov
imul
ja
(bad)
jo
push
sub
xor
dec
inc
pop
shl
call
mov
sti
out
sbb
scas
and
push
daa
clc
xor
cs
pop
shr
addr16
jno
jns
xor
jnp
sbb
div
xor
stos
jmp
dec
push
cwde
sbb
jecxz
shr
add
cli
mov
mov
jbe
hlt
push
pop
rcr
loope
xchg
aam
in
and
jne
cdq
ret
push
push
aam
sbb
adc
popf
inc
aad
nop
mov
xchg
test
repz
ins
or
int
pop
mov
sbb
xor
fisub
push
popf
dec
aas
aam
(bad)
in
inc
cmp
inc
push
mov
mov
mov
jnp
mov
xor
pushf
mov
clc
push
mov
(bad)
sbb
jecxz
mov
adc
lds
lods
cmp
aam
mov
cwde
and
mov
int
cmp
scas
cdq
dec
or
mov
sbb
enter
retf
dec
push
and
mov
mov
scas
mov
gs
push
scas
mov
rcl
jns
scas
gs
lods
sub
push
push
and
xor
cli
push
pop
fsub
xchg
jno
mov
sub
mov
lock
pop
xchg
jb
mov
mov
out
movs
(bad)
jp
mov
in
iret
xchg
jecxz
stc
stos
inc
rcl
push
sbb
outs
inc
loope
and
inc
scas
cmp
dec
(bad)
mov
sbb
rcr
fiadd
rol
(bad)
xlat
scas
and
inc
loope
dec
cli
int3
jbe
sti
xchg
outs
(bad)
cmp
(bad)
push
enter
dec
mov
(bad)
in
or
jmp
sbb
push
push
pop
rcr
xor
iret
nop
out
sbb
xchg
lods
cmp
sub
add
out
add
jmp
jl
pop
das
add
cs
nop
mov
mov
add
retf
and
xor
pop
into
and
xchg
mov
clc
push
vcvtsi2ss
jmp
cli
bound
jl
mov
lods
imul
cmp
sbb
or
adc
mov
xchg
jl
cmc
imul
aaa
pop
pusha
mov
sub
(bad)
in
xor
cmp
mov
mov
popf
mov
test
xchg
std
xor
mov
inc
mov
adc
mov
sar
push
inc
mov
cmp
aas
lea
enter
cs
inc
fwait
cmp
adc
cmps
push
push
jmp
xor
clc
loopne
popf
push
ds
xor
add
cmps
shl
xchg
inc
popf
gs
and
mov
cmps
mov
call
jns
xchg
xor
xor
pop
cdq
mov
cmps
xor
out
adc
test
or
inc
in
out
adc
test
imul
xchg
fstp
fiadd
repnz
enter
or
push
popf
mov
test
cs
mov
mov
rol
cli
movs
xchg
or
jbe
jo
jl
xchg
test
or
cmp
cmp
pop
dec
shr
cmp
push
repnz
fldcw
fs
cmp
xchg
adc
dec
push
test
mov
push
dec
pop
cmp
je
dec
push
cmp
inc
adc
sahf
add
and
inc
or
mov
js
xor
xchg
aam
ret
out
add
inc
(bad)
cmc
lods
jae
test
test
call
jb
sbb
lods
add
test
das
in
xlat
mov
or
lods
popf
in
xchg
inc
sahf
in
fstp
sub
push
stos
nop
loopne
jno
loop
dec
test
lods
call
inc
out
movs
leave
mov
and
or
xor
xchg
ret
fidiv
sub
xor
sub
cdq
add
std
in
lods
enter
inc
jecxz
iret
add
xchg
(bad)
cmc
jmp
mov
dec
push
stos
leave
inc
mov
pop
mov
enter
rol
neg
aam
invd
sti
xchg
adc
xchg
sub
outs
add
sbb
pop
jle
mov
xchg
shr
ss
mov
fdivr
pop
(bad)
shr
mov
inc
mov
ret
sbb
aaa
aas
in
mov
test
and
inc
pop
arpl
pop
adc
inc
xor
pushf
xchg
add
pop
int3
lahf
mov
ds
jnp
and
inc
test
ss
jg
xor
adc
std
dec
mov
gs
mov
xchg
inc
adc
xchg
jno
(bad)
repz
push
or
xchg
mov
mov
cmp
jmp
mov
(bad)
ds
out
shl
fild
cmp
daa
mov
inc
sahf
pop
retf
dec
aam
js
movs
mov
lods
nop
iret
xor
push
pop
adc
sbb
in
sahf
int3
dec
pusha
xchg
leave
jno
jbe
mov
popa
retf
shl
movs
ret
mov
cmp
xor
sbb
lds
push
fadd
imul
xor
loope
lods
out
dec
mov
dec
jmp
jmp
sahf
mov
call
xchg
jbe
dec
repz
jge
(bad)
aas
xor
aaa
pop
xchg
pop
inc
test
jae
sub
iret
jge
dec
(bad)
(bad)
mov
and
movs
std
repnz
ds
mov
arpl
and
or
push
call
imul
ror
pop
pop
cmp
rcr
xchg
adc
sbb
dec
adc
mov
or
lock
(bad)
dec
test
and
test
daa
cmps
movs
add
test
imul
rol
ror
popf
or
lock
pop
inc
hlt
xchg
xor
fst
in
mov
and
loope
mov
test
mov
jbe
lods
mov
sub
dec
pop
and
sub
pop
cmp
sub
dec
daa
popa
and
sub
and
fld
lock
fld
mov
pop
rcl
mov
inc
(bad)
or
ret
mov
pop
popf
mov
sbb
push
push
fsubrp
into
push
test
les
test
retf
inc
xchg
clc
lea
test
mov
loop
dec
rcl
mov
hlt
jl
test
and
jae
dec
stos
jbe
inc
cmp
push
mov
mov
mov
mov
sub
sub
lods
lock
xchg
cli
dec
retf
mov
jo
aad
and
addr16
out
push
gs
sahf
mov
pop
out
push
mov
repz
bound
jnp
inc
fdivr
adc
gs
add
outs
movs
out
dec
sbb
cdq
call
and
pop
and
fs
mov
mov
dec
shl
out
cmc
into
inc
mov
jb
dec
add
sti
sub
jo
mov
inc
das
mov
lods
aam
stc
cmps
aaa
push
fs
dec
repz
or
int
push
sub
movs
fsub
xchg
sub
add
retf
sub
push
and
js
inc
jmp
jne
add
in
(bad)
aad
dec
dec
jl
mov
inc
dec
xchg
ret
(bad)
in
mov
add
and
adc
mov
sub
sbb
jnp
jo
push
sbb
sti
xor
jle
lea
xor
jae
dec
xor
adc
xchg
sbb
aad
and
jne
call
push
hlt
mov
push
movs
cmc
hlt
addr16
scas
sbb
imul
adc
jp
mov
aaa
movs
inc
mov
dec
xchg
cli
shl
jmp
sub
dec
mov
mov
mov
shr
sub
jle
mov
mov
push
enter
jb
or
push
mov
test
sub
pop
ins
mov
jnp
xchg
bound
pop
jmp
pop
repz
std
mov
push
imul
add
pop
cmc
push
push
pop
and
and
jp
shl
popf
aad
imul
mov
sub
daa
pop
fwait
or
mov
retf
xor
push
sub
sbb
ins
jo
sahf
(bad)
stos
(bad)
(bad)
adc
aad
xor
add
pop
ins
mov
xchg
push
icebp
out
jmp
imul
xchg
inc
nop
aad
enter
add
cmp
pop
pusha
mov
pop
sti
xchg
jmp
cmp
cmp
jae
ror
inc
ins
inc
or
xlat
mov
aam
cmovns
retf
and
mov
(bad)
mov
ja
push
iret
fs
or
add
and
dec
int3
xchg
jae
jmp
mov
test
cmp
mov
gs
rol
movs
(bad)
ins
cmp
and
mov
call
jl
pop
jle
sub
cdq
mov
pop
test
push
aad
sub
or
pop
mov
mov
(bad)
jno
sar
call
neg
inc
sbb
int
mov
movs
outs
pop
scas
jnp
or
sbb
test
sbb
mov
sahf
lods
push
push
or
dec
dec
xor
pop
lods
lock
mov
mov
imul
popf
fsub
sub
mov
sbb
cmps
pop
mov
data16
sbb
mov
inc
xor
pop
xor
test
mov
fcmovne
fst
jnp
add
ja
enter
(bad)
bound
imul
nop
aam
jp
pop
fild
add
pop
lds
in
out
nop
pusha
hlt
mov
fsubr
sub
mov
xor
cmp
cmp
xor
jecxz
fmul
ret
pushf
mov
sub
mov
or
dec
in
mov
pusha
retf
xor
dec
rol
movs
das
mov
jno
push
ins
test
ret
gs
scas
ins
pop
mov
fmul
out
retf
or
sbb
jmp
cmc
daa
mov
es
test
push
mov
xlat
es
in
pop
mov
call
call
adc
jmp
inc
sahf
retf
imul
cdq
dec
out
leave
sub
stos
scas
xchg
lock
cwde
std
dec
call
and
add
mov
inc
imul
add
das
pusha
dec
inc
fcomip
sub
je
retf
add
shl
xchg
xor
es
std
sbb
daa
push
std
xchg
adc
cmps
adc
and
mov
pusha
sar
inc
or
xchg
repz
movs
push
inc
sbb
pop
pop
add
mov
inc
push
xchg
push
lds
inc
xor
or
sub
xchg
sti
push
sbb
xchg
(bad)
mov
pusha
mov
rol
adc
leave
cmps
cmp
sub
and
(bad)
and
xchg
and
mov
enter
(bad)
into
mov
inc
sar
mov
fs
sbb
xor
xchg
(bad)
cmp
xchg
fidivr
stos
sti
push
jecxz
int
repz
push
adc
sbb
mov
das
jecxz
pusha
or
call
or
addr16
cmc
mov
jns
pop
fsubr
mov
out
add
mov
and
jp
or
cli
mul
retf
sbb
movs
xor
jl
mov
push
jecxz
xchg
rcr
cmp
xchg
sahf
(bad)
bound
neg
inc
loopne
or
jbe
sbb
call
test
daa
repz
je
inc
push
inc
movs
xor
ds
imul
imul
push
mov
aas
jmp
mov
imul
arpl
mov
inc
mov
fwait
add
sub
outs
mov
ss
call
dec
bound
rcr
sub
ins
inc
sbb
scas
cmp
push
pop
cmp
(bad)
mov
mov
lea
mov
pop
mov
sbb
pop
lock
cmp
nop
enter
xor
xor
jmp
loop
sub
lods
loope
pushf
jmp
add
stos
jp
or
pop
add
sub
ret
jo
fisub
jo
sbb
mov
daa
cmp
inc
mov
test
hlt
or
in
bound
inc
adc
sar
push
rcr
pop
popa
pop
das
and
cwde
sub
sbb
push
into
mov
ins
bound
loope
aad
pop
ret
js
xchg
inc
pop
and
mov
jmp
or
pop
jnp
push
(bad)
(bad)
jmp
jl
(bad)
jo
arpl
scas
in
out
pop
mov
ins
retf
add
in
ror
cmp
dec
push
rol
jmp
idiv
scas
mov
hlt
and
inc
ja
inc
(bad)
retf
ret
sbb
movs
addr16
fld
(bad)
ds
retf
adc
cmps
push
cmp
pop
jmp
mov
xchg
xlat
adc
jge
xor
xchg
add
or
(bad)
in
xor
lds
addr16
mov
mov
out
cmp
fmul
mul
mov
in
xor
scas
stc
or
imul
repz
cmps
sar
pop
inc
mov
pushf
xchg
or
test
mov
dec
pop
or
xor
sbb
and
lods
push
push
jmp
mov
out
outs
push
inc
inc
push
(bad)
dec
sbb
clc
add
repz
push
sub
jo
jne
ror
js
cwde
or
push
aam
gs
pop
popa
cmp
xor
xchg
loopne
and
jbe
xchg
jo
jnp
scas
in
pusha
mov
(bad)
out
mov
icebp
push
scas
cs
gs
push
clc
push
sub
xor
scas
jmp
add
push
jmp
addr16
int3
aaa
test
mov
cmps
arpl
push
das
into
dec
call
cld
cwde
mov
je
push
or
xchg
push
popf
imul
push
mov
enter
mov
sbb
cmps
sbb
cwde
dec
fdivr
jmp
jge
mov
sbb
fdivp
cld
ret
call
ret
push
push
jp
stos
dec
mov
inc
data16
sbb
mov
lea
stc
sub
cmp
mov
or
dec
pusha
sbb
fucom
sbb
sar
xor
je
cld
movs
jecxz
jns
push
aaa
repz
mul
xchg
in
test
cmp
push
dec
dec
inc
jmp
daa
mov
adc
dec
sub
outs
and
int
or
inc
add
xor
xchg
push
and
dec
call
mov
aaa
in
jo
ss
fdiv
call
scas
out
sbb
arpl
pop
pop
shl
xor
imul
in
int
pop
xchg
add
xchg
pusha
rol
or
jecxz
cmp
jne
outs
push
jle
(bad)
mov
out
mov
mov
sub
ror
leave
push
xchg
adc
mov
jnp
and
ret
cmp
pop
pop
outs
dec
dec
(bad)
mov
sbb
xor
pop
dec
iret
mov
loopne
bnd
loope
cmp
sub
adc
das
or
dec
fld
sub
push
push
fwait
xchg
pop
push
mov
repz
and
mov
jo
enter
sbb
ror
xchg
cmp
lods
jmp
les
push
fmul
aam
in
cmp
and
or
jle
lods
push
jnp
je
dec
fwait
mov
inc
scas
adc
ficomp
xchg
int3
jle
(bad)
popa
(bad)
mov
push
in
jns
loope
ror
scas
pusha
xchg
adc
test
push
pop
sbb
repnz
jle
ins
mov
lods
mov
std
test
ror
lea
and
dec
xor
push
mov
dec
add
(bad)
in
movs
cmp
add
outs
inc
fimul
aaa
and
push
cmps
sub
daa
pop
lock
xchg
jnp
jnp
shl
dec
ins
outs
jecxz
cli
add
sbb
retf
adc
aad
pop
test
mov
cwde
lods
jns
loop
pushf
dec
jmp
mov
sbb
call
cwde
fbld
(bad)
ret
push
aas
mov
stc
xor
ret
in
pop
push
(bad)
mov
in
mov
xor
aad
mov
iret
pop
mov
mov
jns
(bad)
push
stos
xchg
and
xor
and
test
inc
sbb
scas
mov
div
pop
xchg
arpl
mov
adc
push
adc
pop
mov
nop
mov
out
mov
mov
cmps
outs
xor
adc
pop
pop
sbb
(bad)
cmp
dec
pusha
cmp
retf
or
adc
or
or
stos
out
call
cs
mov
dec
adc
push
inc
cwde
jecxz
mov
pop
pop
mov
xchg
call
mov
mov
ins
xor
dec
pop
stc
add
jle
mov
dec
mov
or
fadd
push
cmp
pop
loop
mov
les
xchg
add
add
cld
inc
fs
dec
(bad)
jge
not
lock
icebp
inc
scas
cmp
out
xor
mov
mov
loope
ins
add
(bad)
sahf
or
xchg
adc
ret
xor
arpl
fs
(bad)
mov
into
inc
test
sbb
inc
inc
mov
mov
and
or
dec
(bad)
outs
retf
push
cdq
xchg
mov
fst
add
out
pushf
mov
add
fdivr
sbb
jmp
mov
add
mov
out
add
je
daa
int3
dec
sub
push
push
add
xchg
bound
adc
(bad)
xchg
stos
dec
sub
push
xchg
mov
or
dec
lods
loopne
or
out
push
mov
call
cmp
int3
js
lahf
or
push
cmp
push
push
push
pop
pop
cmp
sahf
daa
inc
js
adc
or
mov
imul
popf
lds
(bad)
lock
hlt
out
lahf
mov
rcl
ret
sbb
lahf
pop
cmps
cwde
ret
pop
add
(bad)
cwde
push
dec
mov
hlt
adc
(bad)
daa
cmp
cmp
mov
push
das
lahf
add
sub
push
je
push
pop
dec
mov
loop
clc
out
xlat
cmc
stos
xor
ja
ret
xchg
mov
emms
push
pop
imul
in
ret
shr
jp
push
sub
enter
push
cmc
or
icebp
mov
jns
addr16
sbb
pop
sub
je
lock
inc
xchg
dec
push
xor
adc
inc
xor
test
movs
sbb
daa
mov
fs
ficomp
outs
mov
adc
loop
dec
jb
imul
sbb
or
stos
mov
lock
cmp
aad
aaa
les
sbb
jl
cmp
jl
push
pop
dec
test
inc
mov
jae
mov
es
ss
and
ins
jo
lds
mov
add
adc
not
cwde
mov
pop
xor
ret
mov
out
lea
cwde
loop
push
fs
das
pop
adc
jmp
add
or
test
in
dec
dec
ret
or
mov
xor
popa
jne
cmps
(bad)
cmc
xor
in
ficomp
test
lahf
push
ret
mov
lock
(bad)
iret
pusha
mov
daa
mov
mov
pop
dec
(bad)
sti
(bad)
xchg
mov
mov
dec
ror
mov
or
dec
ror
scas
or
xchg
or
cmp
les
int3
scas
push
cmp
inc
mov
push
push
pop
mov
pop
scas
jecxz
jns
xchg
adc
dec
xchg
push
mov
xor
shl
adc
jmp
and
mov
and
inc
imul
xchg
jae
icebp
cmc
xor
inc
cdq
adc
pop
out
mov
imul
(bad)
mov
dec
add
push
or
mov
pop
push
jo
pop
fist
inc
test
sahf
mov
pop
sub
pop
pushw
sbb
test
in
loope
xlat
mov
mov
pop
in
retf
mov
mov
les
scas
out
in
ins
das
xor
or
(bad)
(bad)
jbe
jg
and
daa
mov
inc
es
ins
stc
inc
adc
jno
cmp
push
shr
push
cmp
andnps
hlt
add
sub
(bad)
lods
fld
xlat
das
pusha
aam
ss
rcr
cmp
jo
jge
jg
sub
ins
push
aad
cmp
cmp
jbe
scas
ins
or
xchg
(bad)
retf
mov
push
sbb
shl
scas
hlt
pop
loopne
jnp
sbb
push
arpl
jb
pop
or
cmp
dec
cld
cmp
hlt
into
gs
popf
not
xchg
fcom
mov
sub
xor
jnp
xor
cwde
fsub
cmp
xor
xchg
sbb
jp
push
jg
cmps
in
inc
addr16
scas
pusha
test
lods
mov
mov
ds
fnsave
mov
jne
add
test
jg
ds
and
leave
loopne
mov
idiv
mov
push
inc
sbb
pop
in
sub
and
mov
mov
out
push
mov
lods
out
pusha
mov
retf
sub
pop
inc
xchg
push
mov
jge
adc
jne
out
dec
out
xchg
adc
test
cmp
ss
std
cmp
xchg
xchg
retf
adc
xor
xor
jns
jle
or
sub
pop
loope
push
fnstsw
daa
inc
retf
jo
sbb
imul
sbb
mov
imul
push
les
jnp
es
inc
rol
mov
scas
rcl
and
mov
add
adc
lods
inc
push
faddp
(bad)
popf
loope
pop
sbb
dec
ds
faddp
aaa
xlat
pop
ret
mov
sbb
add
fs
cli
adc
push
jbe
sub
outs
and
cmp
out
cmc
les
cld
aam
pop
mov
mov
pop
mov
jmp
or
push
inc
ja
xor
xchg
call
outs
pop
scas
scas
or
mov
mov
call
ins
xchg
popa
jo
ds
(bad)
std
push
mov
jnp
aaa
pusha
xor
mov
xchg
inc
mov
gs
pop
push
lea
cmc
add
push
or
cmp
jb
arpl
inc
ret
mov
pop
mov
movs
adc
and
in
in
mov
ret
fisttp
sahf
push
fst
js
aad
cld
xor
test
xchg
mov
cmp
push
dec
adc
(bad)
js
pop
mov
adc
mov
aad
jae
cmp
in
fsubp
das
ret
xor
push
and
pop
adc
sub
fnstsw
sbb
add
mov
cmps
or
xor
aas
mov
fst
fwait
jnp
mov
and
mov
mov
fstp
imul
cwde
cmp
adc
stos
rcr
jae
out
jle
fcom
pop
cdq
pop
lea
imul
xor
push
and
fwait
ror
(bad)
ds
ficomp
jb
sub
int
sub
add
lods
mov
cld
pop
pushf
mov
cmp
lock
add
inc
mov
mov
sub
cdq
adc
cmp
mov
outs
in
push
fstp
(bad)
mov
rcl
(bad)
std
test
cmp
mov
popa
div
cmp
sub
pop
fadd
out
imul
aam
cli
sbb
jb
pop
ret
jp
and
por
add
(bad)
mov
call
dec
ret
xchg
fidiv
and
xchg
fwait
cmc
mov
js
(bad)
lea
xchg
stos
pop
scas
pop
movs
pop
pop
repz
or
jno
(bad)
lods
mov
cdq
fild
jne
pop
mov
aad
cli
push
outs
pop
mov
lods
out
add
mov
mov
dec
loopne
inc
xchg
fimul
cmp
inc
jae
xchg
(bad)
cmp
lahf
sub
mov
pop
push
jno
add
xchg
(bad)
daa
ret
scas
shl
in
rol
push
mov
xchg
ds
aaa
dec
loopne
test
sbb
and
mov
das
xor
imul
inc
xor
arpl
ins
loope
cdq
pop
cwde
jg
mov
mov
inc
out
outs
and
test
mov
and
xlat
(bad)
popf
xchg
(bad)
div
sbb
aaa
pop
fcomi
mov
or
popa
pushf
dec
(bad)
push
and
adc
je
imul
dec
cmp
inc
inc
mov
pop
inc
int
iret
aaa
dec
stos
dec
cmps
cmp
pop
pop
or
aad
fstp
loop
pop
cdq
popa
das
test
ds
inc
fisub
pop
cmp
nop
call
jg
sar
mov
jecxz
popf
repz
(bad)
mov
lahf
lahf
adc
dec
xchg
and
push
or
es
or
add
popf
mov
jge
aam
sub
cld
cmc
inc
into
mov
lahf
(bad)
stos
fistp
add
adc
mov
ss
ret
jecxz
dec
pop
mov
leave
xlat
jmp
outs
push
sub
cs
push
loope
dec
icebp
call
pop
cmp
inc
dec
mov
ror
push
jle
xor
imul
in
sbb
sub
or
inc
ds
ds
push
pushf
jecxz
jmp
mov
mov
jo
clc
ret
xor
loope
push
adc
movs
pop
cmp
into
out
xchg
jae
or
loope
dec
es
xchg
and
shl
fst
mov
fist
sbb
lahf
add
add
std
lahf
fadd
or
rcr
or
adc
not
mov
cmc
fisttp
lock
add
rcl
int
inc
sbb
or
adc
push
pop
jne
xchg
les
out
rol
ins
add
inc
retf
sbb
outs
sub
lahf
cli
mov
adc
mov
fwait
inc
into
in
jno
das
sbb
lods
or
loop
fcmovnb
cwde
sbb
out
std
inc
loop
int
nop
xor
xchg
test
mov
(bad)
and
xchg
pminub
adc
repnz
push
and
cli
pop
dec
daa
sbb
cwde
jp
pop
in
mov
xchg
outs
inc
mov
cmps
mov
mov
adc
ret
sar
sahf
push
jle
dec
xor
sub
ret
(bad)
sahf
jb
cdq
int
pop
xchg
rcr
ret
or
cmps
or
push
std
dec
cmp
ins
dec
fld
ror
js
jae
aad
pop
and
mov
in
ret
das
dec
fadd
jnp
xchg
or
mov
jnp
mov
adc
and
movs
adc
sahf
cs
mov
adc
test
push
nop
xchg
lea
sbb
iret
stc
(bad)
fwait
xor
jmp
and
mov
call
mov
sbb
mov
fldenv
cmp
or
in
or
jecxz
xor
pushf
inc
int3
out
sub
adc
jnp
(bad)
jmp
xlat
lahf
sbb
inc
dec
inc
add
das
mov
inc
lods
mov
adc
(bad)
fmul
mov
and
loopne
into
loop
inc
mov
bound
in
mov
je
mov
sbb
in
xchg
sbb
stos
jmp
hlt
int3
mov
pop
mov
or
shl
les
dec
imul
cmp
push
or
mov
enter
icebp
shl
(bad)
push
push
loop
out
iret
mov
fcomi
out
adc
pop
push
xlat
retf
sbb
aas
stos
jne
adc
data16
or
cmp
mov
push
int3
loopne
inc
fidivr
loop
xchg
sbb
push
xchg
jne
cdq
aad
inc
stos
push
mov
sbb
or
jp
sbb
dec
movs
aas
mov
add
jp
in
add
jp
rol
inc
push
cmp
popa
jb
lds
sbb
inc
aaa
ins
clc
dec
add
sbb
aam
test
dec
or
mov
popa
fstp
daa
mov
in
add
xchg
movs
inc
out
or
enter
aaa
or
icebp
test
dec
cmp
add
jnp
dec
xor
ret
xchg
ret
add
rol
out
adc
xchg
push
lods
out
sbb
movs
mov
pop
ss
(bad)
fild
push
jl
popa
cmps
outs
retf
dec
dec
js
or
mov
loopne
cmp
cdq
mov
dec
dec
mov
popf
inc
sti
xor
(bad)
pop
nop
push
out
jecxz
je
(bad)
mov
pop
adc
jmp
push
cmc
pop
mov
xchg
(bad)
cmp
xor
push
fnsave
stc
scas
adc
test
(bad)
inc
or
(bad)
scas
pop
jmp
inc
lea
mov
lods
and
jmp
clc
add
push
xchg
mov
add
pusha
fbld
cwde
in
mov
or
push
ret
scas
adc
shl
and
loope
adc
nop
imul
out
xchg
or
dec
lock
lahf
fwait
xchg
xor
jmp
mov
call
test
int
retf
xchg
or
mov
out
test
ret
push
inc
and
fadd
push
ss
(bad)
popa
sti
repnz
pop
xlat
pop
stos
push
cmp
movs
jmp
outs
and
sub
inc
jmp
stos
pop
mov
mov
xor
xchg
mov
sub
cld
xor
mov
mov
and
lods
aam
adc
jp
sbb
sahf
das
cmp
add
xchg
mov
adc
fsub
xchg
jmp
idiv
or
sbb
inc
pop
push
pop
sbb
or
fxch
ins
imul
ret
push
inc
iret
dec
inc
scas
scas
(bad)
xor
xchg
ja
cli
push
mov
movs
xchg
je
imul
dec
and
fstp
(bad)
cmc
dec
xor
mov
mul
xchg
(bad)
test
std
sub
pop
mov
sbb
dec
jnp
out
push
xchg
mov
push
xchg
pop
les
or
cdq
sti
(bad)
es
mov
sar
cld
xchg
jne
xchg
(bad)
mov
xor
and
cmc
or
aam
mov
cli
xchg
pop
mov
push
imul
in
dec
pop
fmul
mov
push
mov
cwde
stc
aaa
add
cmp
(bad)
pop
pop
adc
test
sub
jbe
scas
mov
pop
and
jmp
idiv
adc
xchg
stc
xchg
stc
inc
daa
mov
mov
ja
dec
aaa
jno
sub
lock
out
push
sub
fld
sbb
sbb
out
and
xor
xchg
add
or
push
repz
xchg
inc
ins
pop
fcomp
lock
mov
jno
mov
popa
jmp
add
rol
clc
mov
repnz
pop
repnz
shr
push
arpl
mov
fwait
leave
loop
xchg
cmp
fimul
mov
add
int
cmc
mov
std
popf
mov
aaa
mov
fnstsw
into
bnd
je
gs
dec
mov
cmp
inc
sbb
cmps
mov
mov
sbb
xor
cmp
sti
push
lea
xchg
xchg
dec
out
pop
cmp
or
lods
jnp
(bad)
mov
leave
pop
sbb
popa
mov
(bad)
xchg
jmp
mov
fmul
cli
int
mov
ret
add
mov
retf
and
cmps
mov
fisubr
js
xor
cmc
retf
shr
dec
lock
mov
cmp
and
jecxz
push
gs
and
fs
jae
push
loopne
adc
sub
icebp
fstp
adc
clc
rol
bound
dec
pushf
icebp
je
dec
or
pop
popa
xchg
(bad)
jbe
mov
das
ins
dec
test
push
retf
adc
retf
(bad)
fdiv
jl
aam
push
adc
dec
ins
pop
pop
pop
mov
jecxz
dec
(bad)
stc
fidivr
stos
add
in
shl
mov
leave
push
add
jb
stc
aam
adc
inc
and
cmp
cmp
xor
cs
xchg
sbb
dec
jb
jmp
add
sub
inc
mov
cmp
sub
mov
jge
push
cs
retf
dec
loop
out
scas
mov
or
push
xchg
out
bound
cmp
cmp
sub
push
xchg
stc
test
and
in
fcom
pop
xor
ss
dec
dec
mov
push
cwde
into
ja
xchg
xchg
sub
stc
add
ss
push
fsubr
pop
sar
xchg
mov
jmp
stc
inc
pop
stc
bound
lahf
sbb
cwde
jo
fsub
xchg
dec
mov
enter
mov
rcr
fcomp
aam
mov
cmp
test
scas
aad
jbe
mov
lock
jns
push
enter
inc
dec
xlat
lock
dec
fdiv
dec
shl
sbb
(bad)
loopne
in
shl
adc
andnps
adc
dec
push
or
xor
push
neg
lea
and
cmp
dec
loopne
imul
enter
addr16
xchg
jne
mov
jns
mov
jae
dec
mov
mov
fwait
sub
cmps
pop
sub
add
and
les
aad
xchg
or
push
add
call
dec
pop
into
ret
dec
and
mov
pusha
dec
lea
jno
adc
cmp
fbld
jns
daa
pop
inc
adc
popf
mov
push
jg
inc
jns
test
jae
repz
and
(bad)
push
in
xor
cdq
xlat
fisttp
cdq
sahf
push
sub
scas
jmp
daa
adc
ins
xchg
inc
pop
mov
imul
mov
movs
ror
ror
sbb
pop
sub
inc
mov
cmp
add
loope
loope
cwde
test
jne
retf
outs
(bad)
push
(bad)
dec
xchg
scas
push
cmp
dec
mov
ss
and
jnp
sahf
push
add
mov
add
shr
jg
dec
adc
mov
clc
loope
mov
ret
xchg
xchg
clc
dec
ins
cwde
push
sub
mov
fs
sti
jb
loope
(bad)
sub
mov
movs
int
fdivr
dec
pop
imul
xor
cmp
adc
inc
rcr
jne
jge
mov
(bad)
call
clc
(bad)
dec
loop
mov
jbe
(bad)
jp
call
push
imul
fcom
movs
aam
push
jbe
xlat
pop
movs
xor
repnz
in
lock
aam
push
fisttp
mov
clc
loope
jae
xlat
aaa
and
mov
repnz
jns
sbb
mov
inc
cmp
jmp
lods
repnz
in
retf
pop
mov
out
inc
push
xor
add
js
mov
int
ret
cmps
jle
sbb
sub
jb
push
mov
xchg
loop
fadd
imul
adc
adc
push
xchg
cmps
cdq
sub
fnstsw
mov
push
jp
rcl
into
test
movs
nop
in
pop
dec
cmp
sub
dec
(bad)
fnstcw
nop
mov
sub
pop
cmp
mov
and
shl
sub
mov
sub
and
rcr
lock
push
dec
addr16
cmp
rcr
inc
sbb
mov
hlt
scas
enter
inc
pop
push
out
out
xchg
mov
ret
fild
iret
jns
add
mov
aaa
xchg
jns
push
popa
lods
je
mov
aaa
dec
push
jae
not
inc
das
mov
ret
out
xlat
mov
push
not
in
fwait
das
dec
sbb
sub
retf
inc
mov
mov
add
sbb
mov
lock
xchg
jge
mov
ds
dec
lds
scas
mov
cmps
pusha
add
out
popf
shl
xlat
adc
add
test
movs
push
xchg
loopne
push
inc
out
in
xchg
pop
sub
cmp
mov
sbb
add
loopne
xor
lods
sbb
call
mov
int
mov
in
push
add
ja
sbb
lock
mov
mov
aaa
push
sbb
sub
repnz
mov
cmp
dec
icebp
pop
mov
cmps
mov
loop
rcl
mov
pop
ja
(bad)
pop
push
cli
pop
iret
rcr
add
sub
gs
mul
ror
push
repnz
push
mov
inc
ret
push
lds
call
pop
leave
mov
xor
inc
or
call
jle
sub
into
shr
inc
sub
sub
mov
les
cwde
push
mov
jg
cdq
enter
inc
test
mov
jbe
call
dec
popa
mov
dec
or
in
xor
pushf
push
imul
mov
popa
ins
sbb
retf
push
mov
popf
add
mov
(bad)
cmp
inc
mov
dec
xchg
add
cdq
into
adc
mov
ret
push
sahf
sub
jae
dec
(bad)
jno
test
xchg
jge
aam
mov
and
xchg
in
adc
ret
xor
out
pop
int
nop
sbb
pop
sbb
pop
mov
or
mov
jb
je
sbb
mov
stos
shl
lods
in
imul
in
scas
(bad)
lods
in
jb
ins
(bad)
adc
and
adc
fwait
xchg
pop
mov
pop
or
add
mov
aaa
aam
mov
ds
and
test
neg
bndmov
xor
sub
outs
cld
loopne
lock
add
inc
xchg
and
sbb
mov
popa
jmp
mov
xchg
repz
mov
sub
mov
adc
fiadd
data16
pop
test
and
pop
jmp
sahf
sar
cmps
hlt
shr
push
aaa
fild
pop
movs
cwde
cli
enter
xor
repz
xchg
mov
test
push
mov
cmps
sub
or
test
cmc
mov
fmul
adc
mov
mov
add
jns
jnp
mov
ds
mov
jb
push
sti
adc
add
fisttp
jb
aaa
sub
add
ficomp
mov
addr16
mov
lock
pop
xchg
mov
adc
jl
xlat
jge
mov
mov
retf
outs
add
fldcw
xor
push
loopne
mov
mov
inc
sahf
shl
push
dec
or
dec
fstp
dec
imul
cmp
xor
ins
fisttp
sub
cmp
mov
scas
dec
sub
ins
out
fdivr
scas
xchg
shr
shl
fild
jecxz
xchg
xor
dec
pop
(bad)
lea
in
xor
in
cmp
push
and
inc
pop
ret
sbb
and
xchg
mov
ja
and
repnz
test
test
mov
mov
outs
out
(bad)
and
mov
push
je
cmps
nop
or
push
idiv
movs
jmp
in
in
cmps
mov
(bad)
fimul
cmc
test
not
xlat
arpl
pop
scas
adc
cli
ins
imul
mov
ss
or
or
add
dec
pop
dec
adc
int3
add
mov
or
(bad)
shr
pusha
ja
mov
mov
cmp
(bad)
adc
enter
lea
out
xchg
push
sar
add
imul
inc
(bad)
dec
sar
push
mov
andnps
rcl
mov
test
fnstenv
sub
lock
adc
push
ins
sub
arpl
mov
test
sub
test
out
dec
rcr
or
sub
in
xchg
fs
mov
cmps
pop
mov
adc
hlt
cmp
in
xchg
sahf
fsub
fnstsw
sbb
push
in
stos
(bad)
sbb
pop
ins
stc
cs
je
iret
(bad)
sbb
ss
mov
pop
cwde
sub
outs
mov
fisub
inc
cmp
icebp
int
mov
and
sbb
adc
mov
pop
and
dec
mov
inc
in
mov
iret
imul
add
test
inc
movs
jno
sbb
out
dec
fimul
lods
es
xor
add
test
push
stos
dec
jno
(bad)
mov
dec
fstp
aad
bound
sub
pop
xor
push
rcl
mov
lods
inc
sbb
adc
cld
dec
cli
mov
cmp
enter
dec
mov
cld
jmp
movs
int
aad
sub
popa
add
dec
out
sbb
push
daa
fild
ud2
jmp
mov
or
bound
pushf
call
mov
xchg
dec
in
idiv
loope
pop
fucomi
mov
test
out
push
sub
xchg
and
std
jb
mov
jbe
outs
push
mov
sbb
dec
icebp
call
xor
mov
mov
fcomp
lods
sbb
and
pop
mov
in
call
outs
ss
or
push
jl
inc
push
ja
mov
mov
ret
cmp
cmp
adc
jmp
retf
sbb
add
adc
sar
pop
add
popf
lods
mov
pop
xchg
xchg
fsub
sbb
pop
cmc
push
sub
add
pop
repnz
sub
inc
and
jle
pusha
movs
fidivr
rol
pop
push
popa
mov
mov
movs
mov
xor
ret
stos
jmp
xchg
js
push
sahf
sbb
pop
xchg
cmp
mov
sub
(bad)
sbb
mov
jmp
lds
dec
mov
pop
mov
sub
aas
imul
ret
enter
ja
iret
inc
sbb
jae
inc
inc
and
lea
xor
ss
xchg
sbb
scas
clc
inc
push
gs
nop
mov
sbb
repnz
test
ja
add
ins
fcomp
data16
adc
test
sahf
jg
int
and
jmp
pop
xchg
or
dec
push
mov
xor
mov
dec
fst
or
ins
nop
test
mov
repnz
sbb
lea
fucompp
sbb
jmp
cs
in
cmps
cli
cmp
mov
and
aad
mov
add
inc
xchg
repz
jnp
je
popf
sbb
fnstsw
jmp
das
fidiv
or
daa
imul
sbb
jb
and
jmp
jmp
js
mov
xor
sub
ficom
and
add
inc
retf
retf
add
enter
pop
inc
and
shl
inc
mov
lock
or
ja
lock
cmp
pop
out
dec
int3
jle
cmps
pushf
test
ficomp
movs
in
inc
sub
sbb
xor
xlat
jmp
dec
dec
mov
ret
cld
aad
rcr
mov
sti
dec
mov
popa
mov
and
push
pop
cmc
ds
adc
inc
or
add
fidiv
sub
sbb
sti
dec
ds
mov
mov
cmp
sbb
rol
imul
bound
xor
fld
dec
sub
stos
push
add
push
ret
cmc
jp
out
imul
lea
lods
retf
push
pop
cmp
mov
dec
cmp
inc
imul
call
xor
push
pop
xchg
or
mov
cwde
lock
addr16
pop
sbb
aaa
and
adc
icebp
push
jmp
in
pop
push
adc
repz
mov
push
adc
xchg
lods
cmp
xlat
lea
in
or
mov
adc
push
ins
mov
push
jmp
pop
or
pop
adc
(bad)
movs
jns
sahf
mov
mov
cmps
lods
push
cmp
xor
movs
jmp
out
imul
cdq
test
jge
inc
ret
push
daa
into
and
jle
cld
hlt
pop
movs
fadd
rcr
sbb
(bad)
lods
ror
jle
aad
aaa
xchg
sub
imul
(bad)
aam
sbb
cmp
xor
pop
jl
jg
sub
mov
std
mov
dec
mov
mov
mov
lahf
pop
mov
test
mov
and
in
loope
fsubr
mov
jns
in
mov
fcomp
repnz
popa
pop
popa
aaa
les
(bad)
into
jne
ins
sbb
icebp
fsubr
push
test
jno
icebp
cmp
not
cmp
popa
add
mov
popf
pop
test
pushf
in
or
pop
inc
aam
and
or
jmp
or
cs
dec
lods
mov
inc
cs
jbe
mov
inc
mov
shl
add
es
cmc
std
enter
xor
clc
imul
fdiv
std
lods
ret
mov
adc
(bad)
pop
idiv
mov
(bad)
stc
aas
gs
fstp
push
lods
cdq
push
dec
lods
jecxz
mov
adc
nop
lds
pop
sbb
xor
mov
push
mov
push
(bad)
loopne
sub
cmp
inc
adc
sar
movs
add
inc
mov
mov
lahf
sbb
sahf
jl
xchg
adc
jl
jno
dec
test
iret
call
mov
xchg
sub
clc
mov
fwait
mov
stc
push
sub
outs
inc
ja
(bad)
xor
xor
js
xor
mov
add
jmp
and
mov
mov
mov
pushf
sbb
aam
jle
mov
and
mov
jle
cmp
leave
inc
movs
sahf
adc
loope
movs
jg
jnp
or
xchg
adc
ret
loope
push
repz
add
xor
dec
stc
xor
pusha
adc
fs
mov
(bad)
js
(bad)
inc
int3
pop
dec
repnz
and
rol
imul
mov
(bad)
stos
cwde
out
xor
fild
cmp
jmp
xchg
lock
fisubr
mov
out
cmp
rcl
iret
lahf
adc
mov
scas
cmp
aad
mov
call
mov
pop
add
or
cmp
cs
test
pop
arpl
adc
das
push
movs
in
aas
mov
sub
ret
add
movs
ss
outs
pop
sub
pop
icebp
out
lods
cmp
in
jae
shr
out
or
daa
inc
dec
(bad)
jecxz
push
or
mov
mov
movs
sbb
(bad)
xchg
jmp
retf
faddp
ins
and
mov
pop
mov
cmps
sbb
lock
sbb
loope
in
ins
(bad)
aaa
sbb
jb
loope
push
enter
push
clc
or
retfw
inc
call
and
push
dec
clc
sub
test
jle
addr16
outs
fwait
popa
cld
scas
jnp
xchg
sbb
sbb
ficomp
movs
cs
icebp
aas
sub
mov
dec
mov
gs
into
sahf
sar
pop
test
int3
cmp
jns
jae
iret
dec
push
pushf
in
xchg
icebp
ds
neg
xchg
test
add
mov
pusha
add
mov
outs
sar
jnp
dec
mov
stos
imul
dec
out
shl
dec
or
xchg
enter
fwait
retf
mov
jne
jae
out
repz
inc
fistp
xlat
cli
repz
cdq
sub
push
mov
rol
ss
pop
je
xchg
sbb
lds
fst
in
lahf
rcl
les
jmp
leave
jnp
mov
inc
sbb
jo
fbld
loop
mov
out
push
push
jmp
je
fimul
loope
std
mov
bound
int
fld
jl
repz
cmp
xchg
jne
out
ds
movs
add
mov
pop
push
movs
or
xchg
jbe
inc
jbe
stos
inc
push
(bad)
mov
ret
pop
data16
xor
arpl
mov
lods
sbb
iret
repz
es
xchg
sbb
fldenv
into
adc
es
das
adc
outs
or
(bad)
repz
jecxz
mov
test
in
hlt
and
and
xor
mov
imul
(bad)
sub
mov
call
cmp
sti
mov
jbe
ss
sbb
mov
lds
and
xchg
test
add
les
dec
lahf
jle
scas
xor
xchg
fwait
mov
sub
arpl
cwde
lods
sbb
out
xor
loopne
sub
popf
arpl
jns
fild
mov
jmp
outs
mov
in
mov
xor
lods
mov
mov
and
mov
jmp
or
ss
scas
dec
xor
scas
cmp
nop
dec
out
inc
lods
push
test
fxch
push
and
and
(bad)
fisub
out
je
loopne
dec
cld
push
into
sub
stc
fistp
repnz
bound
mov
adc
pop
sti
xor
push
(bad)
pusha
mov
mov
imul
mov
(bad)
sbb
mov
lods
cmp
mov
xchg
retf
(bad)
xlat
pop
movs
xchg
mov
or
cmps
shl
adc
push
or
pop
cdq
scas
nop
or
(bad)
mov
sar
jge
xor
lods
(bad)
adc
and
sbb
mov
sub
pop
movs
add
sub
jb
cmp
mov
stos
into
xchg
jns
or
pop
imul
dec
jne
fwait
mov
and
xchg
(bad)
xor
jmp
(bad)
mov
std
add
fist
xchg
xchg
add
ins
cli
mov
push
push
push
adc
jnp
out
test
cmp
dec
add
fsubr
mov
ja
js
cmps
ja
fcom
adc
hlt
inc
popa
ficom
inc
sbb
shr
cmp
mov
pop
arpl
or
cmp
ficom
mov
or
dec
call
imul
jle
xchg
out
out
loope
cwde
mov
js
or
mov
sbb
loopne
jge
dec
inc
adc
cmp
imul
mov
fs
add
movs
adc
js
retf
mov
mov
fldenv
xchg
inc
(bad)
(bad)
aad
inc
cwde
into
jl
daa
ret
pop
int
out
jno
xor
into
jno
inc
std
outs
xchg
mov
ins
add
stc
loope
call
dec
fld1
add
xlat
xor
mov
and
jbe
push
inc
nop
lea
dec
and
movs
push
mov
and
clc
xchg
stos
mov
ja
ret
cmp
mov
stc
and
arpl
sbb
leave
imul
or
cwde
sub
jle
xor
sbb
stc
push
xchg
(bad)
sub
jle
sub
cmc
mov
out
popf
mov
in
add
sub
mov
xchg
jecxz
cmp
outs
and
fst
icebp
cwde
push
fdivr
sahf
fwait
cld
ss
ret
imul
dec
pop
loop
ds
cmp
adc
sub
mov
std
in
mov
out
test
hlt
cmp
add
lock
jne
out
adc
adc
or
scas
and
sbb
dec
mov
rol
iret
sub
mov
lods
xchg
loop
cli
test
leave
pop
stc
jae
aas
fs
xchg
jl
xchg
and
jmp
enter
into
aaa
add
ds
cmps
ja
dec
sbb
inc
pusha
sti
into
aam
or
push
xor
cmp
loop
iret
dec
cmp
loope
(bad)
out
sti
cmp
mov
mov
nop
add
ss
inc
and
xor
cmp
cdq
mov
iret
sub
lods
sub
inc
test
xor
fucomip
jae
aam
pop
mov
mov
or
pop
mov
leave
jle
stc
xor
adc
and
lahf
add
mov
out
movs
inc
int
ret
shl
mov
inc
fldcw
push
(bad)
sbb
xchg
xchg
in
fld
cmps
pop
movs
push
sbb
mov
lock
inc
rsqrtps
dec
jp
movs
jmp
in
dec
cld
pusha
stos
hlt
les
jecxz
popa
sub
pusha
dec
jmp
ror
ds
rol
cmp
add
xchg
cmp
es
sahf
dec
sub
xor
rcr
ins
iret
fmul
inc
mov
ret
lods
and
cmp
dec
push
les
mov
dec
sbb
in
cli
test
inc
leave
lock
sti
add
xor
pop
jae
cmp
dec
dec
adc
sub
lea
repnz
push
xor
jecxz
jecxz
sbb
stos
add
push
xchg
lods
push
mov
or
aaa
(bad)
mov
lods
or
cs
mov
ja
dec
jl
ja
imul
jae
(bad)
mov
inc
sbb
mov
sbb
and
pop
retf
cmc
dec
dec
(bad)
push
cdq
mov
jp
jnp
aam
cmp
stos
(bad)
pop
(bad)
cmp
adc
jns
popf
mov
xor
int
iret
xchg
adc
mov
stos
and
mov
cli
push
data16
adc
mov
scas
mov
in
dec
pop
jae
dec
cmc
jmp
hlt
or
jecxz
loopne
xor
retf
sar
movs
xlat
(bad)
xor
mov
inc
loopne
adc
pop
push
loopne
mov
sahf
xor
jl
mov
daa
jle
movs
fdiv
aas
pop
sub
jg
das
scas
mov
adc
mov
sub
arpl
mov
push
push
jmp
bound
sar
sbb
dec
dec
repz
mov
jnp
lods
or
outs
cmp
arpl
aam
call
inc
and
loop
in
int3
mov
inc
pop
sub
cli
inc
(bad)
int
aaa
inc
std
clc
add
std
push
loope
cmps
daa
fdiv
aas
loope
in
les
int3
mov
shl
mov
sub
or
ins
xor
clc
addr16
mov
pop
add
sbb
mov
cmp
sbb
xor
xchg
xor
jne
dec
jmp
pop
cwde
loopne
rcl
ret
adc
js
icebp
shl
mov
ret
std
sub
sbb
sub
iret
(bad)
aad
jo
xchg
push
inc
xor
push
cmp
mov
inc
sub
je
in
sbb
fidiv
and
push
dec
pop
cwde
out
or
inc
dec
fistp
dec
push
addr16
push
int
and
stos
sbb
(bad)
mov
dec
jl
mov
aaa
jns
mov
ds
stos
xchg
mov
in
sbb
ret
sbb
cmps
enter
adc
stos
retf
in
cmp
inc
loopne
(bad)
push
mov
adc
nop
push
pop
retf
push
sub
dec
sbb
mov
aaa
push
in
daa
aam
add
mov
ret
sub
shl
sbb
or
test
call
mov
std
mov
sbb
je
gs
inc
outs
mov
and
mov
test
mov
shl
push
inc
sub
adc
xor
cwde
(bad)
stc
int3
popa
imul
icebp
cli
sub
mov
das
ss
scas
not
bound
and
push
sub
test
xchg
jg
rcr
adc
mov
retf
xor
lock
mov
push
mov
rol
or
xor
fidivr
cdq
pop
ins
stc
rcr
ins
sbb
push
adc
jp
clc
shr
and
fsubr
xor
call
xchg
inc
jae
jb
pop
test
pop
icebp
mov
mov
sbb
mov
pop
adc
pop
cmp
and
popf
aad
(bad)
jmp
loope
push
jge
xchg
pop
mov
pusha
sub
xchg
push
arpl
push
rcr
retf
cmp
lahf
in
stc
je
jmp
fiadd
ins
adc
es
lods
ret
or
sub
xchg
sbb
dec
mov
lock
cmc
dec
jmp
xor
shl
daa
push
push
sub
cdq
popf
inc
sti
adc
inc
mov
test
pop
int3
out
popf
xor
or
push
cmps
shr
cmp
xor
push
dec
out
jg
mov
adc
xchg
cld
stc
fwait
fs
lods
fmul
sub
xchg
and
and
cld
ret
sub
pop
jne
pop
mov
jge
loop
int3
inc
dec
xor
add
cmp
and
dec
adc
das
repnz
add
test
(bad)
into
push
xor
mov
aad
les
gs
sti
xor
cld
adc
mov
lahf
cdq
mov
or
cld
div
daa
stc
imul
pop
pop
adc
pop
jp
fnstcw
jp
mov
xchg
adc
mov
gs
inc
jae
mov
popf
or
and
and
in
imul
arpl
sbb
lea
rcr
ins
daa
loopne
paddq
out
mov
repnz
test
(bad)
sahf
and
iret
cmp
mov
cmps
mov
push
stos
inc
mov
pop
cli
add
rcl
mov
jmp
lock
into
sub
xchg
jecxz
push
xor
imul
sub
dec
xchg
lahf
nop
ret
jne
out
shl
sub
jb
scas
push
push
pop
cwde
or
mov
pop
ret
pop
outs
or
jae
and
clc
std
or
ror
push
add
mul
lea
out
dec
out
push
aam
cmp
ret
jl
push
ins
icebp
cmp
ss
mov
fst
scas
jnp
and
daa
mov
xor
adc
cmp
(bad)
(bad)
std
cmp
cmc
clc
pop
xchg
jmp
(bad)
and
add
sub
ret
cmp
xlat
mov
push
sbb
push
and
int
cdq
movs
mov
dec
mov
ds
jle
daa
pop
xchg
push
(bad)
cmp
mov
add
lods
lahf
ret
rcr
mov
xchg
push
stc
out
shr
fstp
inc
inc
inc
or
js
and
mov
icebp
gs
pop
dec
or
dec
mov
or
mov
push
jo
add
in
or
dec
add
loopne
adc
push
mov
pop
xchg
pop
clc
xor
aas
jno
mov
push
sahf
jge
pop
inc
and
fisub
jo
ror
aas
push
xchg
test
sbb
dec
push
mov
mov
ja
mov
dec
sub
arpl
call
mov
and
mov
ret
dec
mov
call
test
sbb
xchg
or
lock
add
(bad)
mov
mov
inc
loope
inc
jg
movs
jg
add
(bad)
pop
test
sti
inc
ja
bound
mov
xor
hlt
inc
js
retf
jnp
test
stc
dec
arpl
mov
mov
sub
test
pop
add
sub
mov
mov
xchg
loope
out
cwde
addr16
mov
popf
cdq
dec
sbb
stc
and
sar
(bad)
and
std
stos
fisubr
and
aam
rep
xchg
lods
ret
jbe
mov
cli
nop
ins
aas
mov
stos
add
fnstcw
xor
pop
pusha
push
cmp
xchg
mov
out
stos
ret
aam
xchg
popa
adc
out
fsub
ret
cmps
push
adc
mov
xchg
push
sub
addr16
sar
sar
pop
ja
in
adc
mov
cmps
enter
xor
imul
xlat
xor
xchg
loop
les
into
sbb
push
push
movs
mov
push
sub
jbe
add
lods
shl
jbe
xchg
xor
out
fisubr
dec
dec
sub
and
lea
aas
cmps
(bad)
ds
or
xor
icebp
sbb
pusha
fcom
cld
popa
jmp
push
test
mov
leave
inc
jae
cmp
mov
not
retf
pop
jb
outs
loope
adc
popf
cmp
xlat
cmp
test
mov
call
in
xchg
push
retf
mov
pop
das
mov
fldenv
jmp
dec
inc
pop
cmps
pop
push
pop
adc
pop
mov
ret
imul
data16
frstor
sbb
mov
pop
sbb
jnp
add
cld
jmp
aad
je
retf
pop
cmp
xor
loop
pushf
push
xchg
inc
jge
xchg
dec
iret
std
imul
test
cmp
jle
inc
mov
adc
xchg
jp
xlat
pop
jl
push
xchg
xchg
inc
fadd
mul
xor
or
or
aaa
mov
mov
mov
push
xchg
ret
inc
in
or
dec
jecxz
push
mov
loopne
xor
xor
and
stos
mov
inc
mov
pop
ins
movs
xchg
jns
xlat
mov
cmp
sbb
dec
cmps
(bad)
dec
jo
les
fcom
pop
push
jnp
gs
call
mov
das
or
mov
adc
dec
imul
test
int3
daa
ret
out
aad
or
neg
inc
mov
(bad)
loope
adc
sub
jge
lods
xchg
xor
scas
inc
ins
push
cs
pop
sti
adc
xchg
cmp
loop
daa
loop
sbb
pop
push
adc
outs
(bad)
or
sbb
sbb
adc
sbb
push
test
cmp
jp
loop
popf
addr16
dec
adc
add
fidivr
movs
mov
(bad)
adc
test
add
jge
bound
mov
(bad)
movs
mov
into
mov
fldcw
mov
jg
mov
test
or
mov
mov
and
jl
cmp
inc
inc
adc
xor
fadd
and
(bad)
bound
retf
imul
xlat
xchg
dec
and
mov
jb
shl
jns
push
xor
xchg
mov
mov
sbb
(bad)
(bad)
adc
pop
jae
ins
rcr
mov
sbb
lods
scas
ret
aam
gs
popf
repz
cmc
or
scas
add
push
inc
popa
aas
jg
xor
fs
xlat
lock
and
ins
es
test
pusha
fwait
inc
fidiv
lahf
or
fdivr
test
repnz
xor
xor
xchg
popa
sub
shl
adc
mov
fucom
(bad)
dec
scas
jl
add
fwait
stos
cmc
leave
ins
loope
out
iret
rol
out
add
xlat
sbb
push
movs
in
loope
int
int3
retf
call
mov
add
es
mov
inc
cmp
outs
ror
mov
cmp
inc
cmp
imul
inc
adc
out
into
sbb
jns
loope
inc
and
fisttp
repnz
or
and
fcmovbe
adc
call
rcr
adc
jmp
jmp
push
bound
stos
dec
cmps
ret
cmp
pop
mov
push
mov
pop
xchg
dec
fwait
pop
jae
xchg
arpl
jmp
(bad)
mov
jl
les
add
jmp
data16
imul
cdq
jns
dec
fmul
xor
push
stos
inc
mov
jg
xchg
loop
pop
dec
cmp
xor
inc
mov
dec
cmp
cwde
(bad)
movs
xor
cmps
inc
xchg
stos
dec
int3
inc
cmp
lods
iret
or
loop
and
repz
inc
ja
cdq
loop
pusha
jle
lods
shl
(bad)
lds
sub
jle
mov
add
jmp
inc
xchg
xor
mov
mov
je
sbb
jb
dec
mov
into
add
mov
push
pop
mov
rcl
pop
xor
sahf
fiadd
push
mov
jnp
ins
test
adc
ins
test
gs
mov
xchg
and
outs
dec
cwde
mov
sub
mov
sti
adc
clc
imul
loope
mov
jge
outs
add
(bad)
xor
cmp
fdiv
aam
inc
std
out
lahf
mov
pop
je
inc
(bad)
gs
jp
(bad)
ret
xchg
or
dec
push
js
out
sub
push
xor
jbe
push
(bad)
fiadd
xor
sub
sbb
xchg
or
xchg
push
jmp
xor
cwde
dec
adc
jns
clc
sub
cmps
cmps
lods
fdivr
adc
pop
push
mov
jbe
sbb
push
cmps
jle
aam
data16
adc
out
jmp
in
sbb
aam
push
add
(bad)
mov
cli
popa
add
jmp
push
and
jae
adc
in
add
js
call
lods
lods
pop
call
shl
scas
jl
xlat
pop
movs
mov
inc
inc
ffreep
jns
inc
stos
retf
mov
sbb
or
fs
ins
jo
data16
std
mov
mov
int3
push
mov
mov
xor
mov
call
ficomp
xchg
(bad)
cld
or
movs
popa
inc
aam
test
push
mov
iret
jne
outs
jmp
cmps
pop
nop
sub
mov
aas
int
or
cmp
test
cmps
or
mov
jmp
pop
leave
scas
rcl
test
jg
std
nop
loopne
mov
push
and
pop
enter
imul
xlat
aas
adc
gs
cmps
mov
add
les
rcr
cmp
rcr
mov
icebp
outs
jae
push
cmps
lock
rcr
mov
dec
and
ret
sar
add
sbb
mov
rdtsc
aam
lea
or
cmps
add
mov
es
add
cld
repz
ret
mov
cmp
jg
sar
push
loope
xchg
sahf
es
xchg
sub
in
sub
jbe
cs
pusha
push
cmp
ret
inc
sbb
jbe
dec
push
ss
imul
cdq
bound
rol
or
sti
xor
pop
cmp
rol
xor
test
jbe
adc
shl
cld
int3
mov
cs
pop
xor
repz
xor
xchg
not
loop
int3
sub
cmps
jbe
xchg
fidivr
xchg
mov
sbb
loopne
push
inc
and
push
loop
jb
pop
scas
xor
call
cs
dec
inc
inc
icebp
(bad)
jnp
jnp
out
ds
hlt
leave
push
scas
test
in
les
mov
aad
test
sub
and
push
push
fwait
pop
xchg
push
mov
inc
mov
mov
sub
add
je
cmp
mov
jg
cmp
cli
aaa
mov
ret
dec
bound
imul
mov
aam
pop
into
xchg
or
ja
dec
repnz
pop
pop
xchg
cmp
xchg
test
xchg
jl
nop
adc
jo
std
jp
fwait
mov
aas
dec
dec
rol
lods
sti
dec
out
add
mov
push
push
mov
jae
mov
mov
retf
cli
sti
mov
mov
sbb
mov
xor
mov
(bad)
pop
add
dec
or
enter
stos
std
adc
pop
std
pop
loopne
fwait
push
mov
ret
aas
lds
sti
gs
(bad)
add
les
or
call
gs
and
or
scas
mov
daa
cwde
test
xchg
(bad)
and
mov
mov
(bad)
mov
aaa
or
fcmove
sahf
lods
bound
(bad)
sbb
jb
retf
adc
cdq
sbb
push
imul
jge
lods
nop
mov
addr16
mov
out
pop
lods
int
push
xor
adc
pusha
xor
cmp
dec
xchg
mov
(bad)
push
push
aaa
jg
les
dec
push
mov
inc
into
ret
xchg
(bad)
cmp
fsubr
cli
fnstcw
test
xchg
jne
cld
and
xor
in
cli
cmps
mov
inc
sbb
mov
popf
xchg
cmps
jl
jp
mov
arpl
adc
xor
fld
ret
xchg
pop
mov
lock
and
adc
adc
js
popa
clc
lods
jno
push
adc
push
leave
mov
ins
xchg
push
jnp
mov
mov
rcl
inc
xchg
cli
test
in
out
jle
sti
dec
pop
jae
pop
cmps
jg
popa
fst
data16
inc
and
in
int3
mov
cli
cmp
test
std
inc
and
fwait
push
arpl
mov
pop
sbb
lds
fstp
data16
add
inc
je
pop
sti
inc
sahf
or
inc
addr16
cwde
fsub
inc
add
arpl
jge
shl
mov
iret
push
addr16
fdivr
movs
push
sar
pop
js
movs
leave
in
adc
popa
sub
jmp
mov
out
inc
pop
jnp
fimul
inc
cdq
retf
inc
push
mov
push
cli
jnp
push
leave
fisub
inc
and
and
push
ins
mov
jp
(bad)
nop
xor
out
and
push
leave
mov
into
pop
sbb
leave
pop
cmp
cli
sub
mov
cmc
jl
or
mov
out
xchg
repz
push
mov
iret
call
push
push
ret
xchg
dec
and
lock
sar
lock
fld
pop
xchg
es
mov
lock
retf
outs
shl
adc
push
push
xor
xchg
sti
fistp
cmps
jmp
call
mov
cmps
pop
xchg
mov
adc
out
jl
fnsetpm(287
add
push
fs
push
xchg
ins
push
(bad)
adc
lods
imul
aad
(bad)
cmp
inc
call
into
jb
stc
out
mov
dec
jg
add
(bad)
hlt
sti
lea
xchg
shl
out
add
adc
dec
test
lods
mov
sahf
mov
sbb
jb
jmp
scas
fwait
stos
mov
pop
ja
aam
xor
xor
pop
nop
(bad)
retf
push
jmp
fisttp
cmps
sbb
push
dec
sbb
ins
cli
out
and
mov
out
lods
and
gs
lods
shr
std
jle
push
rcl
stc
push
mov
mov
ficom
pop
std
fcompp
mov
adc
shl
xlat
icebp
fidiv
scas
sahf
mov
xor
(bad)
and
push
jle
push
out
pop
fs
stos
mov
in
out
sub
add
jmp
arpl
and
xor
push
pop
fadd
xor
cmc
std
sub
(bad)
xchg
jg
mov
xor
retf
xchg
mov
int3
jmp
out
mov
repz
mov
scas
and
in
outs
push
jmp
sbb
add
mov
adc
addr16
fisubr
adc
lahf
movs
or
imul
je
pop
cwde
and
pop
add
stos
popf
push
mov
pop
stos
pusha
addr16
adc
ficom
sub
imul
movs
xchg
cli
push
daa
mov
push
sbb
out
jmp
mov
cmp
call
sar
(bad)
scas
fs
or
pop
sbb
push
sub
inc
jg
mov
aas
sahf
pop
jge
push
dec
push
xchg
(bad)
dec
jecxz
cmp
mov
or
jge
inc
pop
pusha
popf
push
and
inc
cmp
dec
movs
sub
movs
rcl
pop
mov
shl
sub
loop
ins
not
xor
mov
test
rol
mov
mov
inc
push
cs
inc
gs
in
adc
or
outs
mov
outs
mov
shr
sub
xor
mov
outs
mov
push
mov
xor
sbb
ret
cli
mov
mov
js
ror
loopne
ja
jmp
popf
test
jecxz
js
retf
mov
sahf
(bad)
dec
push
std
popf
test
stos
hlt
pushf
mov
int3
push
dec
js
fmulp
pop
mov
mov
inc
fstp
out
push
add
ret
pop
or
jmp
add
mov
and
cmps
or
test
jecxz
into
or
xor
push
js
jb
retf
jp
push
(bad)
push
xchg
add
inc
popa
movs
cmovs
lahf
add
pop
ins
jecxz
push
das
or
pop
sbb
jle
cwde
xor
in
push
(bad)
leave
outs
inc
push
imul
in
push
xor
mov
mov
lods
cli
jnp
inc
clc
mov
cli
and
dec
retf
rcl
sti
cmp
sti
in
lods
retf
enter
xchg
shl
push
inc
pop
jle
adc
repnz
add
jns
addr16
cli
adc
xchg
fwait
retf
xchg
das
pop
(bad)
inc
test
dec
ret
out
in
sahf
mov
(bad)
push
dec
mov
sbb
cmp
push
pop
aaa
call
test
push
das
xor
movs
int
fnstsw
sahf
aaa
inc
sbb
sub
scas
div
mov
mov
into
fdivr
dec
or
xchg
imul
std
and
adc
push
cmp
rcr
cmp
jl
loope
(bad)
sub
add
out
test
dec
inc
mov
stos
adc
iret
or
cld
je
shr
mov
mov
ss
(bad)
(bad)
je
test
test
push
jg
pop
jp
jo
push
dec
inc
pop
popa
jo
stos
sbb
int3
mov
push
inc
pushf
xor
mov
scas
sbb
(bad)
cld
adc
jae
or
mov
das
push
fidivr
ja
jb
dec
popa
int
int3
inc
pop
ins
jb
pop
mov
add
jo
out
cmp
add
sbb
ror
in
push
xor
js
or
pusha
repz
adc
outs
push
cmps
jnp
xor
push
js
hlt
pop
hlt
push
adc
add
mov
ja
out
data16
mov
cwde
dec
adc
mov
in
retf
mov
xchg
mov
push
test
leave
lods
retf
and
cmps
je
int
int3
les
arpl
add
hlt
nop
fsubr
sub
clc
call
pop
gs
mov
pop
popa
xchg
sub
and
sar
div
jmp
add
fs
add
pop
adc
inc
aam
sbb
addr16
push
sub
lock
rol
out
or
cmp
jne
sbb
push
and
pop
or
(bad)
jmp
in
push
std
scas
loopne
push
cdq
dec
pop
push
or
call
xor
ins
jmp
cwde
jmp
sub
xor
mov
mov
loop
jbe
pushf
mov
push
and
aas
sub
sub
pushf
sbb
daa
xchg
jecxz
mov
retf
sub
aam
inc
cmps
test
fwait
inc
mov
sub
cmp
push
jmp
sbb
scas
adc
cmp
mov
mov
cmp
push
js
or
fistp
adc
dec
and
ja
mov
out
call
mov
in
shl
pushf
(bad)
ja
jns
mov
inc
mov
cwde
mov
test
mov
sub
out
adc
cwde
fbld
mov
rcr
sub
lds
cmp
shr
mov
das
jmp
ds
mov
js
pop
sbb
idiv
dec
xchg
cmp
push
pop
or
mov
adc
cmp
fadd
jge
sbb
sub
add
sti
add
jmp
pop
lods
stos
and
mov
test
lods
xchg
mov
dec
(bad)
mov
or
mov
loope
jg
cli
mov
test
xchg
xchg
mov
lods
push
push
xor
xchg
lahf
push
loopne
mov
push
xchg
cmp
pop
sub
cmp
cmp
add
and
(bad)
cmps
jbe
mov
ret
mov
mov
jae
or
dec
pop
pop
inc
(bad)
shl
rol
aam
in
imul
rcl
cli
cld
out
sbb
pop
sub
push
xlat
inc
mov
add
jb
jle
xlat
push
ja
xchg
mov
xchg
add
adc
or
sbb
xchg
pushf
ds
xor
test
jmp
pushf
test
movs
in
das
sub
add
jb
loopne
in
(bad)
xor
inc
or
cmp
fucom
and
jl
mov
jns
jnp
cmp
xor
outs
adc
test
mov
xchg
xchg
cld
jne
push
aad
push
push
daa
fstp
sbb
mul
xchg
(bad)
lahf
cmp
mov
pop
jae
push
ds
push
imul
push
inc
pop
mov
cli
jmp
or
aas
lock
popa
push
call
in
neg
jecxz
dec
sub
or
ja
push
dec
mov
les
test
pop
mov
gs
fnstenv
(bad)
push
mov
mov
inc
push
ret
int3
dec
dec
(bad)
(bad)
std
cmp
xlat
call
(bad)
in
jge
fsubr
into
cmp
shl
jb
push
xor
pop
mov
jl
or
fcom
repz
mov
daa
xor
push
shl
int
cmp
xor
mov
fs
lods
jle
nop
sti
jae
dec
cwde
popa
in
call
xchg
retf
xor
lods
inc
mov
outs
add
outs
cmp
arpl
cmp
adc
push
in
cmp
cli
test
adc
sub
cwde
push
imul
pop
or
fild
mov
movs
inc
fwait
mov
into
mov
aad
jns
sub
push
rcr
pushf
ja
mov
shl
and
or
aaa
ds
jle
push
call
in
sti
ja
push
sub
mov
or
adc
ret
pop
and
in
mov
(bad)
daa
adc
dec
dec
mov
cmps
lahf
test
or
dec
stos
mov
push
mov
xor
js
sub
or
out
inc
in
(bad)
push
ins
pop
sub
inc
pop
inc
mov
lods
test
dec
jmp
inc
jge
out
out
hlt
mov
xchg
lds
cmp
xchg
ds
stc
stos
rol
dec
mov
mov
hlt
adc
add
out
sbb
sbb
push
scas
or
iret
pop
(bad)
pop
or
sub
fcompp
jmp
pop
shl
call
jns
mov
mov
enter
jecxz
ds
pop
movs
mov
addr16
ins
push
ins
nop
mov
push
pop
int3
sub
aam
rcl
fcom
aad
leave
mov
aad
adc
jecxz
mov
aas
pop
jns
jge
add
sahf
push
movs
add
repz
pop
cmp
sub
(bad)
adc
sub
cs
int3
loop
fsub
push
je
(bad)
jae
sahf
inc
push
cmp
arpl
popa
in
sbb
push
out
xchg
scas
jp
ja
push
popa
aaa
bound
scas
fdiv
fidivr
cmp
mov
int3
cmp
leave
sbb
sbb
stos
inc
xchg
dec
mov
xor
mov
push
push
adc
fcomp
icebp
jmp
mov
movs
shl
cmps
cmc
popf
pop
mov
xor
cld
or
adc
mov
adc
push
lahf
in
jl
xchg
fiadd
sbb
scas
imul
adc
das
ret
outs
jns
mov
sbb
jnp
inc
pop
(bad)
call
adc
(bad)
leave
mov
aad
jle
aaa
out
mov
xchg
mov
fisub
cmps
loope
dec
push
jnp
ficom
pop
add
das
push
adc
push
inc
add
stos
arpl
scas
mov
repz
adc
fdiv
shl
mov
fwait
lahf
outs
cdq
cld
xchg
xor
shl
fnstcw
retf
cdq
or
retf
or
jo
jne
nop
in
retf
loopne
xchg
mov
mov
in
or
mov
not
mov
push
popa
fldenv
(bad)
mov
add
push
inc
loopne
ds
mov
jmp
jae
or
cli
scas
cwde
in
xor
stc
ins
or
add
mov
popf
aad
loopne
sub
idiv
or
cmp
or
in
shl
xchg
push
add
call
arpl
repnz
xlat
sub
jns
ins
push
and
pop
outs
das
hlt
mov
xlat
div
dec
test
or
inc
js
out
in
sbb
add
add
jnp
out
sahf
jne
movs
xor
and
push
scas
cmp
retf
stc
test
cli
ja
or
int3
adc
jle
push
dec
dec
xchg
dec
jmp
jle
jl
stos
ret
xlat
jae
mov
addr16
push
pop
push
pop
rcl
and
mov
call
leave
aas
loope
xchg
lock
in
mov
nop
je
mov
push
rol
or
push
stc
das
ins
lahf
xor
mov
jo
pop
add
cdq
xor
ss
repz
xchg
xchg
sbb
ret
and
repnz
xor
addr16
mov
daa
loop
(bad)
fild
mov
cmps
int
outs
push
xchg
xchg
and
je
pop
inc
xor
xchg
mov
inc
jne
loopne
jo
add
and
out
imul
test
cmc
je
inc
xchg
and
inc
xchg
out
iret
aam
shl
lods
or
outs
ret
cmps
out
inc
rep
jno
or
mov
pusha
jg
dec
(bad)
cmp
mov
sub
test
mov
dec
inc
sar
push
in
cmp
xchg
imul
fldenv
cs
inc
aad
popf
adc
sub
jp
retf
inc
jmp
cmps
dec
inc
mov
std
(bad)
es
in
cli
add
pop
cmp
movs
call
aaa
int
outs
sbb
aad
dec
or
mov
and
cmp
in
pop
sub
sub
movs
pop
adc
movs
xchg
imul
and
inc
sub
pop
dec
(bad)
daa
and
cli
ret
cld
sbb
or
xor
out
mov
xchg
shl
test
fwait
sahf
xchg
outs
movs
pushf
adc
imul
aaa
sbb
sbb
mov
cs
mov
arpl
push
jnp
sbb
mov
sub
dec
dec
int3
xlat
stc
je
(bad)
xor
in
dec
cli
or
test
mov
add
mov
ins
outs
push
sub
cmp
bound
jecxz
jbe
aaa
inc
test
xor
out
call
pop
jnp
cmps
test
into
mov
or
into
fadd
mov
out
fwait
push
inc
push
mov
rcr
and
outs
mov
mov
sahf
sahf
retw
ja
(bad)
ds
cmp
mov
pop
inc
icebp
adc
cli
popf
dec
adc
push
(bad)
sti
addr16
(bad)
jle
or
daa
pop
out
push
ficom
jae
dec
sahf
in
dec
outs
inc
push
pusha
dec
and
les
jmp
sub
fwait
cli
stos
push
mov
es
adc
mov
xor
idiv
in
mov
jno
jns
mov
mov
mov
jge
stos
fdiv
into
addr16
leave
ror
cmp
nop
mov
sub
sbb
jecxz
or
test
mov
push
and
mov
int
sub
outs
mov
repz
arpl
or
push
xchg
rol
or
shr
popf
add
and
adc
je
dec
adc
and
(bad)
(bad)
fistp
and
mov
call
sbb
pop
xor
cli
xchg
fwait
dec
xlat
les
sti
add
adc
out
mov
into
push
mov
in
cmp
sub
fidiv
aad
inc
push
xor
or
sub
dec
pop
mov
dec
add
and
(bad)
jne
and
and
repz
fmul
cld
dec
jno
mov
mov
icebp
cmc
inc
pop
jb
mov
stc
test
movs
jne
xchg
adc
and
sub
int
mov
aam
in
push
fmul
or
push
mov
push
dec
jp
test
fiadd
shr
mov
adc
test
mov
inc
sub
xchg
push
cmp
adc
sar
out
add
shl
jecxz
(bad)
mov
xchg
ins
retf
out
jle
test
add
icebp
bound
lock
loopne
jge
cmps
inc
sbb
adc
cmp
xchg
sub
enter
daa
push
xor
fist
in
pop
ficom
cmp
jne
sbb
in
mov
retf
aad
stos
stc
lods
xchg
loopne
ins
(bad)
mov
shr
out
mov
jae
shl
fs
dec
fstp
sub
dec
sub
inc
stos
jl
xlat
mov
(bad)
and
push
scas
call
add
sbb
gs
ror
ds
cmps
sub
jge
jg
int3
push
pushf
nop
lods
mov
sbb
pushf
mov
mov
mov
in
sub
gs
xor
mov
mov
mov
je
ret
mov
jmp
xor
inc
gs
cs
adc
mov
fmul
or
lock
adc
push
jae
cmp
sbb
(bad)
std
pusha
data16
imul
loope
sub
mov
cmps
bound
nop
gs
adc
outs
popf
xlat
retf
lahf
movs
sbb
dec
cmp
xlat
inc
xchg
mov
jp
rep
nop
outs
(bad)
movs
gs
pop
stc
loopne
jecxz
jb
inc
ficom
push
(bad)
retf
popf
sbb
test
test
repnz
add
jmp
add
and
xchg
jl
fistp
aam
dec
test
popa
mov
xchg
xor
fwait
mov
fld
ins
stos
loop
xor
ins
int3
imul
xchg
push
test
dec
pushf
adc
movs
shl
sbb
movs
mov
das
out
jmp
aam
std
mov
mov
push
lock
int3
pop
mov
sbb
ins
out
sub
retf
fwait
push
les
mov
mov
mov
test
xchg
dec
or
int
enter
xor
ds
retf
and
iret
mov
jmp
inc
sbb
mov
mov
inc
sbb
jp
scas
aaa
push
add
cmps
mov
mov
pusha
repnz
movs
xchg
dec
inc
dec
mov
or
ret
push
mov
loop
aaa
and
pop
mov
fdivr
adc
mov
je
stos
adc
sub
scas
sbb
or
lock
mov
dec
mov
shl
shl
aaa
ret
push
or
inc
ja
mov
sbb
and
enter
lea
jnp
cmp
mov
fimul
ficomp
int3
dec
add
imul
xchg
inc
lock
jno
gs
jb
lahf
outs
mov
mov
or
fnsave
fwait
sub
add
dec
push
mov
inc
jl
sbb
(bad)
sub
pop
in
pop
mov
fs
mov
jl
dec
pop
inc
inc
cmp
mov
dec
pushf
mov
ins
and
clc
clc
add
sbb
out
cld
in
jmp
inc
imul
add
fsubr
inc
lock
and
into
out
(bad)
sub
or
lahf
cmp
sbb
ret
aas
mov
lods
mov
lock
dec
cdq
sbb
sub
popa
bound
pop
jle
psllq
clc
push
xlat
(bad)
ja
adc
inc
sbb
imul
xor
aam
adc
push
hlt
lods
jo
sbb
scas
xor
fld
mov
adc
adc
sub
jmp
arpl
lods
xchg
inc
fdiv
pusha
pop
push
inc
push
pop
fisubr
dec
push
fild
fimul
mov
adc
fwait
sbb
mov
ja
pop
in
push
cwde
addr16
pop
jg
mov
push
fwait
iret
aad
mov
cmp
sahf
test
mov
sub
fwait
addr16
jmp
retf
mov
mov
and
jge
mov
mov
shl
push
outs
das
pop
sbb
into
push
push
loope
push
dec
fistp
adc
or
fimul
test
scas
push
add
mov
in
(bad)
cmps
fdivr
sub
gs
mov
rcl
inc
mov
cmp
dec
imul
cs
adc
arpl
xor
add
ja
dec
jle
out
cld
push
retf
clc
and
push
sub
jge
in
shr
dec
std
fmul
mov
mov
sar
xor
and
mov
les
stc
mov
and
int
(bad)
cmp
inc
push
aad
adc
or
xchg
cmc
test
mov
nop
mov
sti
mov
shl
js
push
test
add
inc
call
xor
sub
rcr
(bad)
fild
leave
stos
inc
sysenter
push
push
imul
dec
xor
sub
pop
stos
(bad)
sub
sub
mov
mov
xchg
and
push
mov
fdivr
jecxz
in
jg
outs
xchg
mov
ds
xchg
jmp
adc
cmc
mov
out
push
and
push
repnz
test
outs
sub
fs
add
addr16
mov
mov
out
arpl
push
(bad)
popf
enter
xor
stc
sub
or
mov
(bad)
ret
pop
or
stos
icebp
mov
inc
call
jnp
add
hlt
loope
or
jg
mov
mov
or
and
adc
std
inc
arpl
push
cmp
xor
(bad)
cld
stos
pop
or
montmul
cmps
test
cmp
(bad)
cmc
adc
add
mov
mov
jecxz
out
(bad)
fisub
ret
xor
jbe
push
ret
or
test
xor
stos
pop
loopne
fisub
dec
jmp
mov
pop
int3
mov
rcl
sub
mov
enter
test
std
ret
call
mov
scas
rcr
jmp
add
cmps
xor
cmps
add
movs
cdq
sub
cs
out
cs
jecxz
and
jmp
push
shl
push
sbb
pop
movs
inc
jae
neg
xlat
pop
enter
jl
push
cwde
aad
inc
scas
xchg
lods
push
int3
aam
sbb
ss
adc
es
ja
sub
lods
mov
outs
lds
mov
cmp
in
outs
jns
dec
(bad)
mov
fisub
dec
pop
lods
ret
xlat
jl
xor
out
popf
cmp
cmp
add
cmp
je
sub
hlt
mov
test
call
mov
popf
sub
aas
inc
aam
test
sahf
jbe
and
pop
adc
cmp
cmps
shr
lods
inc
mov
push
sub
dec
aaa
sub
cmp
and
int3
mov
add
retf
sti
loope
cli
adc
sub
jo
and
xor
jg
push
cmp
jmp
aad
cmp
sub
pop
jb
dec
(bad)
fidivr
inc
ins
into
lea
pop
inc
add
aas
in
mov
fcomp
xchg
jle
adc
cdq
xchg
mov
out
(bad)
mov
adc
mov
sub
mov
gs
scas
jle
jns
xchg
and
popf
jnp
adc
dec
aas
pop
pop
icebp
in
enter
int3
fisub
mov
dec
movs
and
jp
pop
mov
push
or
movs
pop
xchg
call
lea
outs
scas
push
ret
cwde
popa
loopne
or
repnz
sub
pop
gs
sbb
test
xchg
int3
lahf
push
xor
add
int
jmp
fldln2
out
imul
pop
rcl
cmps
test
out
arpl
dec
push
stos
mov
mov
add
cmp
jnp
call
jno
call
dec
imul
ja
and
and
aam
jmp
dec
inc
and
adc
cmc
(bad)
and
cmp
in
push
pop
xor
cwde
push
jge
imul
adc
sub
pushf
or
adc
gs
lahf
rcl
and
stos
mov
jg
mov
or
cld
sub
scas
ins
push
xor
out
sub
in
adc
sub
popf
sub
ds
mov
mov
pop
push
jnp
sub
rol
ret
cmp
imul
and
sub
mov
ret
ins
push
xchg
fs
dec
fnsave
push
mov
lea
call
mov
in
ror
icebp
xor
xor
iret
cs
fstp
jle
aad
inc
or
in
je
adc
push
dec
mov
inc
out
imul
pop
xchg
inc
in
stos
dec
mov
mov
add
clc
cmp
add
cwde
fdivr
stc
xchg
xchg
pop
shl
mov
ficomp
(bad)
(bad)
xchg
imul
xlat
xor
rol
call
or
dec
inc
inc
pop
fsub
pop
add
push
adc
mov
dec
neg
mov
out
(bad)
jmp
scas
sbb
lahf
dec
(bad)
or
add
in
imul
jo
adc
faddp
popf
test
iret
pushf
mov
jnp
ret
dec
movs
adc
add
xchg
pop
xor
mov
aam
cmp
repnz
test
xor
pop
ret
ror
cmps
inc
mov
test
retf
push
push
pop
ins
out
ret
xchg
sbb
int
mov
pop
scas
xor
push
jmp
inc
mov
(bad)
in
shl
push
movs
xchg
(bad)
rcr
lahf
xchg
sbb
fmul
pop
inc
mov
ret
sahf
mov
out
or
xor
xlat
jo
sub
xlat
and
push
rcl
jbe
push
ins
or
add
jb
sti
xchg
movntq
out
es
lds
mov
and
test
(bad)
movs
dec
or
imul
or
push
cmps
iret
add
stos
cmp
pop
push
idiv
lods
jl
retf
aas
mov
inc
imul
ficom
cld
fs
xor
push
adc
xchg
sbb
mov
jecxz
data16
push
mov
jmp
pushf
dec
(bad)
jg
std
(bad)
scas
xchg
imul
scas
mov
je
dec
mov
pusha
in
cmp
inc
jb
and
addr16
inc
fisubr
rcr
test
xchg
icebp
jbe
pop
push
rcr
popa
pop
xchg
scas
stos
sub
and
and
cwde
cmp
mov
jb
push
ins
sub
xor
xor
fwait
sub
icebp
(bad)
shl
bound
fwait
popf
aam
es
daa
sahf
xchg
pop
dec
push
or
gs
movs
aaa
sar
xchg
mov
dec
mov
sub
data16
retf
data16
mov
xor
ficom
and
and
mov
xchg
jl
fdivr
jl
mov
stc
xor
jg
and
fisubr
push
push
icebp
inc
aas
inc
dec
popf
out
test
xchg
repnz
sbb
sbb
repz
popa
jle
nop
mov
std
out
and
inc
dec
leave
jl
imul
fimul
cmp
add
lahf
daa
add
mov
rcl
std
pop
mov
loope
add
mov
repnz
push
mov
pop
lods
enter
xchg
xchg
mov
lods
popa
dec
pop
leave
mov
xor
aas
fidiv
test
int3
daa
in
xchg
and
add
in
jmp
cli
add
add
xor
push
dec
imul
out
mov
dec
sub
and
push
pop
cmp
sub
cli
and
sbb
int3
mov
push
mov
dec
add
cmps
addr16
sbb
mov
add
adc
jns
sub
mov
or
pusha
test
scas
rcr
call
or
faddp
and
cmps
xchg
leave
aaa
dec
in
mov
and
add
xchg
lods
dec
dec
and
mov
lahf
lock
mov
fst
mov
jecxz
enter
inc
push
pop
jnp
into
lods
cmp
xor
mov
adc
xor
jle
punpcklbw
or
push
xor
pop
adc
mov
jge
scas
int
mov
aas
or
lods
pop
mov
add
rcl
fst
mov
sahf
jne
scas
adc
std
loope
js
out
test
(bad)
jge
mov
adc
je
xchg
adc
rcl
ret
mov
lahf
and
aad
and
xchg
fdiv
ds
(bad)
enter
lods
lahf
arpl
push
add
xchg
push
sbb
loop
inc
outs
inc
and
xor
ds
push
mov
fadd
bound
dec
add
jo
sbb
scas
scas
mov
mov
sbb
or
popa
inc
test
mov
(bad)
sar
scas
int
stos
mov
adc
les
push
repnz
jp
icebp
pop
loope
add
popf
push
(bad)
outs
pop
lahf
xor
lods
pop
cmp
stos
mov
test
mov
dec
jns
ins
push
xor
xchg
jge
mov
and
xchg
ret
pushf
aam
mov
cs
cmp
sbb
pop
cmp
push
xor
outs
xor
pop
adc
rcr
xchg
mov
and
setne
ja
aad
lock
cld
pop
sub
lea
ds
jmp
out
jmp
push
cmps
adc
mov
lods
add
add
add
leave
lock
out
loope
test
mov
push
sti
int
in
cmp
cld
xor
push
mov
out
cli
ret
xor
test
popf
xor
mov
xchg
mov
mov
shl
je
sbb
mov
mov
and
xor
into
mov
push
fld
fld
xor
iret
xor
mov
stos
xor
repz
add
dec
or
or
int
test
in
pop
pop
cmp
xchg
inc
pop
pop
xor
or
aad
add
lahf
pop
and
or
(bad)
jmp
or
mov
imul
sahf
sbb
dec
mov
push
xor
xchg
jge
push
aas
fs
xchg
mov
push
int
dec
push
addr16
mov
xor
rcl
dec
pop
stc
scas
push
mov
mov
dec
mov
popa
mov
xchg
out
push
jbe
xchg
lea
xor
pop
loop
inc
sbb
or
ret
daa
cmp
mov
aaa
ror
es
int3
jnp
arpl
cmp
add
xlat
or
mov
mov
and
clc
lahf
xchg
xchg
fiadd
adc
in
sbb
stos
xchg
jb
aaa
cmp
and
mov
call
adc
shl
xchg
jbe
and
rcl
cmps
and
cdq
lds
lahf
or
mov
loop
dec
sti
into
out
sbb
mov
cmp
sahf
push
bound
push
aas
call
gs
inc
je
xchg
cmps
leave
imul
imul
mov
add
push
or
ror
sbb
mov
repnz
sub
clc
das
and
in
jo
ds
jb
adc
adc
mov
es
mov
sub
mov
data16
stos
out
leave
imul
jbe
btc
(bad)
lahf
jecxz
js
lods
dec
outs
fist
test
jl
push
lock
retf
daa
frstor
pushf
cs
add
(bad)
mov
dec
dec
xchg
cmp
das
data16
xor
mov
cmp
fwait
pop
push
xchg
sbb
mov
call
pop
int
dec
lds
mov
or
jmp
sub
mov
cmc
dec
cmp
or
test
(bad)
imul
or
or
inc
xchg
scas
xchg
add
outs
aad
mov
or
jae
scas
or
jle
ret
dec
inc
jno
rcr
stc
add
mov
cmp
xor
sbb
scas
and
dec
pop
lea
arpl
sqrtps
out
xchg
test
ds
stc
push
dec
mov
mov
fadd
retf
sbb
mov
lahf
rcr
cmc
adc
div
dec
dec
(bad)
dec
sbb
inc
out
jns
or
ret
sbb
int
scas
or
xchg
add
retf
pop
cli
stos
test
jns
lock
cmc
mov
mov
sub
mov
sahf
inc
bound
ss
cmp
xchg
sti
inc
mov
out
xlat
mov
ins
ins
inc
rol
mov
clc
rcl
xlat
int3
dec
stos
scas
sbb
shl
(bad)
ret
add
movs
test
cmps
cli
cwde
jl
push
aas
sbb
jmp
mov
clc
pop
dec
or
inc
ds
mov
and
outs
(bad)
mov
jmp
push
mov
mov
sub
popf
sti
test
test
mov
add
jae
cmp
rcl
xor
into
xchg
adc
popa
lock
out
shl
loop
shl
dec
sub
retf
shl
pop
test
ins
pop
test
xor
add
outs
fstp
out
push
pop
xor
xor
pop
mov
jo
jge
mov
in
outs
fs
mov
int
repz
not
bound
imul
xor
repnz
test
jl
xlat
mov
jp
dec
jno
mov
push
adc
xor
in
dec
push
ss
aas
mov
aam
fwait
add
addr16
jl
dec
sbb
movs
jmp
out
sbb
(bad)
or
imul
mov
cmps
out
ror
and
outs
data16
test
je
mov
or
or
mul
and
es
retf
adc
fisttp
daa
xchg
cmp
mov
or
push
push
and
movs
je
jle
pop
out
(bad)
pop
outs
pushf
(bad)
adc
add
dec
inc
retf
dec
inc
sar
jecxz
scas
mov
inc
jle
mov
mov
sub
dec
or
push
outs
push
sub
cs
int
push
mov
imul
nop
jmp
sti
mov
dec
ss
mov
lds
lods
push
sub
fwait
lods
inc
jnp
jp
add
jge
and
add
and
das
pop
ja
cmp
stc
(bad)
stos
add
popa
enter
push
adc
or
pop
loope
push
int3
jmp
sbb
stc
push
leave
xchg
add
pop
inc
leave
fsub
retf
sbb
out
(bad)
pop
inc
test
daa
xchg
fisubr
adc
call
je
retf
xchg
pop
arpl
xchg
aam
adc
ins
and
or
rol
pusha
fsub
into
lds
enter
in
xchg
mov
pop
fisttp
imul
(bad)
mov
fmulp
mov
mov
retf
cmp
jae
mov
xlat
pop
xchg
loopne
pop
div
jo
push
jl
or
push
je
cmp
mov
mov
bound
ror
jle
test
add
sub
mov
sub
pop
(bad)
pop
adc
cs
adc
scas
(bad)
clc
pop
and
icebp
je
mov
leave
cld
pop
mov
xchg
dec
sbb
or
xchg
mov
pminsw
inc
cmp
ja
aad
pop
push
pop
and
mov
xlat
ins
iret
xchg
cmp
fld
mov
(bad)
mov
in
mov
adc
pop
and
imul
xor
add
add
sbb
scas
pop
pop
fidiv
or
jo
lock
enter
js
jle
push
xchg
or
mov
sub
data16
mov
mov
loop
leave
hlt
imul
fcom
mov
enter
add
adc
push
sub
out
pop
sbb
and
cmp
out
arpl
push
or
sbb
sub
inc
std
iret
lea
bound
add
inc
mov
dec
outs
sbb
sbb
mov
and
sbb
add
rcl
in
dec
test
push
stos
push
into
sahf
cmp
sti
lock
fs
adc
mov
ja
and
retf
jns
dec
out
adc
xchg
mov
out
sbb
add
int3
aas
aam
sub
dec
sub
and
arpl
sub
stos
mov
int
mov
ja
pop
add
bound
iret
jno
adc
add
loope
sbb
mov
jmp
in
sahf
fstp
sahf
shr
call
pusha
loope
into
pop
retf
cmp
add
in
lds
sbb
mov
leave
rcl
pop
cdq
popa
push
jle
lods
jb
aam
movs
aad
into
add
push
jecxz
or
dec
(bad)
sbb
inc
cdq
loop
xchg
outs
add
jo
sahf
ins
cdq
rcl
mov
mov
xor
sbb
ins
rcr
pop
xchg
gs
push
imul
test
jmp
add
popf
xor
iret
(bad)
fwait
push
int3
push
add
retf
cmc
and
jne
movs
sbb
lds
xchg
xchg
mov
mov
push
pop
cmps
bound
rcl
dec
inc
icebp
jl
mov
xor
std
push
aaa
fcom
mov
mov
adc
test
mov
mov
xor
jmp
push
ret
dec
mov
out
mov
dec
fstp
mov
jb
stc
call
sub
aad
pop
bound
out
mov
icebp
inc
shl
or
sbb
mov
jle
inc
movs
imul
cmp
(bad)
dec
jge
int
jo
inc
out
iret
fistp
inc
xchg
imul
mov
retf
and
xchg
loope
mov
idiv
in
icebp
add
repnz
sbb
xlat
addr16
je
lods
iret
add
and
and
adc
push
(bad)
sbb
popa
into
scas
sbb
jo
adc
push
nop
in
pushf
xchg
pop
xlat
dec
add
push
retf
aam
dec
cld
imul
mov
push
xchg
jne
retf
cli
les
retf
dec
pusha
ss
cmp
sysret
pop
xchg
test
inc
xchg
xor
test
mov
pop
aad
aad
jecxz
clc
lea
pop
shl
je
add
inc
ins
adc
movs
mov
push
cmps
stc
push
inc
pop
idiv
icebp
and
ror
or
lds
jae
jecxz
mov
pop
mov
ror
cld
sti
(bad)
mov
jl
xor
mov
icebp
sbb
sbb
outs
repnz
adc
push
mov
cld
push
retf
out
xor
mov
test
fdiv
jle
aas
repz
shl
loopne
das
push
mov
stc
mov
mov
cmp
into
das
xchg
jae
mov
in
adc
and
icebp
pop
adc
fadd
xor
pop
popf
mov
jne
sbb
pop
xchg
push
ret
mov
mov
sub
pop
pop
loopne
cmps
sub
sub
mov
ret
fld
jge
hlt
cmp
xchg
(bad)
xchg
pop
sbb
movs
fild
shl
cmp
mov
pop
push
or
mov
js
inc
cmp
xor
and
or
stc
mov
mov
cli
mov
shl
sar
cmps
push
sar
loopne
jecxz
jl
mov
and
mov
cmp
scas
dec
jg
mov
push
mov
sub
cs
xchg
inc
imul
es
sub
bound
dec
mov
push
in
test
and
xor
shl
pop
gs
stos
(bad)
xlat
fisttp
add
std
or
mov
popf
out
dec
inc
shl
(bad)
push
shr
xor
outs
inc
dec
jle
push
outs
pavgw
mov
fcom
dec
inc
ret
rol
(bad)
xor
jnp
movnti
out
push
dec
loopne
xor
mov
pop
fs
jecxz
test
in
fmul
mov
sub
cld
int
cmp
psrad
out
mov
mov
aaa
jmp
jae
or
bound
arpl
fcmovnu
sub
retf
jnp
cmp
ja
mov
inc
popa
or
imul
adc
dec
mov
push
into
ins
dec
xor
and
xor
xchg
sub
xchg
adc
fld
mov
mov
cmp
push
movs
or
dec
sbb
in
loope
inc
fsub
dec
imul
aad
jae
jae
aas
(bad)
cmps
mov
scas
test
xchg
add
or
mov
loop
xlat
loopne
imul
out
imul
shl
sbb
mov
std
dec
pop
sbb
bound
push
shr
xchg
jle
xor
aaa
jae
enter
xor
xchg
sahf
cmp
icebp
cmp
shl
in
rcl
cdq
ret
dec
shr
jp
(bad)
iret
sub
or
and
and
repnz
shl
jge
cmps
sbb
cmp
add
pop
and
dec
adc
and
rol
mov
dec
jb
xchg
adc
cmp
xor
aaa
or
and
fild
(bad)
fisubr
xchg
bound
shl
or
cli
xchg
push
jo
pop
movs
or
adc
rol
sub
sub
pop
dec
mov
xor
fdiv
mov
stos
xchg
adc
add
stos
push
inc
pop
mov
sub
push
(bad)
in
lods
gs
push
xchg
inc
xchg
xchg
fwait
mov
cmp
jnp
arpl
mov
addr16
add
jb
stos
xor
jg
adc
jge
sub
cmp
popa
sbb
and
shr
xchg
push
mov
xchg
push
out
jp
fwait
sub
(bad)
push
add
inc
out
mov
loopne
jns
sahf
jmp
aad
(bad)
sbb
cmp
test
adc
xchg
push
es
jo
push
jno
shl
sub
mov
leave
ret
mov
stos
jle
shl
mov
aad
add
or
ror
lds
inc
xchg
aaa
pop
mov
mov
jne
and
mov
and
sub
in
pusha
cs
stos
sbb
int
icebp
or
imul
fist
ins
xor
ret
call
xchg
dec
sub
mov
mov
sbb
push
and
mov
ins
arpl
mov
jmp
repz
push
mov
push
push
adc
cmps
mov
mov
cmp
adc
ret
sub
adc
sub
icebp
je
je
pop
jae
jmp
sub
fs
inc
mov
jo
inc
cmp
mov
cs
les
cmp
cmp
xchg
add
daa
xchg
mov
jno
mov
push
hlt
adc
sub
gs
ja
cmc
jmp
dec
js
or
and
cs
iret
jl
xchg
push
or
(bad)
mov
cmp
std
pop
fsub
aas
xor
adc
cld
mov
push
push
in
bound
out
lods
push
sub
add
dec
xchg
sti
(bad)
inc
data16
xor
pop
pop
shl
mov
leave
xor
xor
jae
in
dec
mov
mov
cdq
jecxz
outs
rcl
sbb
xor
inc
daa
pop
sub
out
stc
inc
fld
sbb
mov
inc
add
sbb
pop
sbb
fidiv
fdiv
push
pop
int
add
repnz
xchg
push
cmp
jbe
iret
scas
or
pop
mov
pop
xlat
sub
sahf
adc
out
dec
sub
clc
daa
cmp
mov
xor
cmp
ss
ficom
sbb
(bad)
jbe
mov
push
mov
loopne
dec
test
sub
loop
or
xchg
pusha
cmp
pop
movs
fstp
aas
sbb
rcr
pop
adc
mov
shr
mov
in
dec
(bad)
pusha
xchg
inc
cmp
pop
arpl
fnstcw
cwde
pop
mov
xor
cmc
(bad)
sub
ja
sti
sbb
push
mov
jbe
sub
shl
(bad)
test
or
cld
inc
out
jge
cmp
mov
jno
cdq
rcr
shr
cmp
xor
mov
xor
add
retf
stos
add
sub
jne
xor
adc
outs
mov
ins
mov
jno
loopne
movs
inc
cmp
push
jbe
movs
xchg
cmps
das
adc
mov
pop
xor
cdq
retf
push
(bad)
sub
loop
fistp
gs
xchg
dec
jle
mov
sub
(bad)
mov
inc
ins
adc
push
push
shr
cmp
xchg
fwait
sahf
add
shl
data16
mov
loop
jo
xor
popf
repnz
loop
adc
sub
fcom
enter
dec
cdq
stos
pop
ds
test
adc
stc
jnp
out
push
lock
xchg
lahf
int3
cmp
imul
adc
icebp
ins
(bad)
xor
push
std
outs
xchg
imul
adc
ficom
dec
adc
out
cmp
jmp
xchg
outs
or
or
jg
mov
sbb
pextrw
fs
push
cld
sub
jge
mov
stc
(bad)
xlat
mul
mov
mov
(bad)
neg
fcom
push
aam
scas
sub
inc
xchg
push
imul
xor
js
retf
xchg
arpl
cmp
push
dec
das
sar
pop
out
cmps
not
(bad)
pop
cmp
stos
popa
rcl
mov
adc
and
aad
fidiv
daa
mov
mov
cmp
sahf
mov
lods
fs
dec
jae
dec
or
scas
dec
mov
sub
test
sar
and
scas
push
not
mov
icebp
jnp
push
dec
std
call
mov
or
jp
dec
mov
shl
cdq
js
cmps
out
push
movs
leave
enter
pop
addr16
mov
lods
mov
mov
mov
sub
jecxz
cmp
in
fistp
or
imul
js
sbb
sbb
call
jmp
dec
dec
and
pop
loope
in
jl
mov
adc
mov
pop
push
mov
pop
xor
js
loop
xlat
in
xor
cs
imul
sbb
int
pop
pop
jo
cdq
xchg
mov
fisubr
(bad)
enter
xchg
xchg
dec
dec
push
xor
xor
aas
xchg
xchg
pxor
add
into
(bad)
fstp
sub
add
and
cmps
pop
mov
mov
and
sahf
sbb
mov
stos
sbb
data16
push
mov
mov
sti
shl
jge
arpl
pop
mov
xor
jge
sub
inc
sub
xlat
mov
int
add
mov
jne
jmp
cmp
js
loop
pop
mov
in
sti
add
fisttp
push
xchg
dec
jmp
ds
jmp
inc
sub
mov
not
jae
cwde
scas
mov
iret
inc
ror
mov
inc
inc
mov
add
fidiv
push
test
jge
xor
pop
and
and
adc
mov
xor
cld
in
clc
push
outs
adc
cmp
add
mov
mov
dec
inc
push
cmp
mul
lahf
sbb
dec
pop
mov
scas
scas
in
sbb
nop
(bad)
cmp
enter
mov
test
fxch
lods
and
bound
xor
add
int
(bad)
push
fld
sub
fistp
or
or
imul
movs
test
test
fidivr
(bad)
sub
scas
(bad)
mov
add
out
pop
pop
dec
scas
cli
sahf
out
stos
hlt
int3
(bad)
ins
mov
(bad)
jne
repnz
iret
push
daa
cmp
test
xchg
shl
add
or
in
xlat
pop
dec
ins
dec
repnz
sub
std
pusha
jnp
and
out
mov
ins
into
loopne
xchg
cmp
popf
outs
lds
mov
sub
loope
mov
fistp
sub
jl
sbb
les
gs
jecxz
xor
sub
jmp
push
jb
xor
fst
dec
call
pop
mov
add
ret
cwde
icebp
imul
xchg
fs
xchg
out
sbb
jno
push
push
mov
bound
adc
pusha
ret
or
mov
inc
mov
aam
xchg
adc
xor
hlt
mov
neg
in
pop
loop
mov
push
or
mov
inc
arpl
in
jae
neg
xor
(bad)
cmp
push
in
ins
jecxz
mov
aaa
imul
retf
retf
out
scas
or
je
mov
jl
into
mov
xchg
mov
test
mov
adc
and
fisttp
xlat
mov
jae
sbb
inc
push
dec
push
push
push
adc
pop
adc
sub
and
push
mov
inc
mov
adc
repnz
and
jno
cmps
and
xchg
call
jmp
cmp
hlt
jecxz
or
outs
or
gs
adc
mov
mov
mov
std
in
aaa
repz
bound
aaa
mov
in
push
rol
loope
and
xchg
add
fcom
jmp
lea
jg
jmp
addr16
push
push
fidivr
jecxz
popa
pusha
popa
sar
nop
clc
shl
mov
xchg
stos
sar
jle
dec
out
pusha
xor
and
pop
or
cwde
adc
in
repz
adc
adc
cld
and
dec
std
cmps
adc
test
xchg
mov
jl
push
ret
adc
cdq
aaa
rcl
add
mov
push
je
jmp
and
pusha
ror
popf
cmc
enter
mov
(bad)
xchg
out
push
fs
js
mov
stos
jbe
imul
inc
push
in
in
xchg
icebp
fs
push
jno
fist
jl
pop
push
sbb
movs
mov
adc
lahf
leave
jno
mov
nop
in
cmp
inc
pop
mov
cmp
jge
xchg
xchg
mov
push
cmp
ret
xor
std
je
xchg
xchg
daa
popf
mov
mov
fcom
sbb
xor
stc
and
pushf
mov
stos
cmp
jmp
pop
cmps
jns
call
test
jne
call
mov
sub
mov
inc
enter
dec
neg
lock
scas
xor
xchg
pop
or
(bad)
nop
cmp
addr16
xor
jg
ins
or
gs
push
xor
js
mov
or
xor
mov
nop
cmp
xor
test
xchg
lods
pop
pop
adc
jp
dec
jnp
mov
addr16
or
stc
sti
ja
sbb
retfw
aas
xor
mov
fdiv
test
push
cs
ss
ror
sbb
out
loopne
outs
push
gs
lahf
dec
lods
jg
mov
adc
ins
fcomp
mov
inc
inc
(bad)
sub
cdq
ja
jo
mulps
lea
fadd
aas
fnstcw
(bad)
pop
das
push
fs
cs
xchg
pop
add
push
out
mov
cmp
xor
in
shl
pop
aam
pop
adc
pop
push
xchg
pop
inc
push
hlt
jp
add
sbb
sub
jge
dec
mov
add
dec
fisubr
les
retf
out
fstp
sub
(bad)
sub
pushf
mov
(bad)
js
push
imul
fadd
ror
mov
pusha
div
mov
sbb
add
cmps
daa
adc
(bad)
call
mov
bound
scas
jo
mov
push
mov
hlt
repnz
xor
repnz
hlt
shl
inc
clc
jl
xlat
and
lea
inc
pop
jne
dec
call
or
shr
cmp
dec
inc
add
adc
jb
cli
jle
push
clc
jae
sub
add
cmc
(bad)
das
in
xchg
mov
into
push
das
in
test
iret
aaa
or
push
jecxz
mov
retf
repnz
cmp
fwait
cmps
ja
cmps
inc
hlt
repnz
cmp
mov
mov
jle
add
xor
aad
es
loope
fsubr
add
stos
cmp
xchg
lds
mov
lods
jns
mov
jae
ss
mov
xchg
adc
xchg
xchg
ins
pop
add
sub
dec
mov
retf
inc
adc
jne
sub
(bad)
aaa
mov
lar
mov
(bad)
call
adc
jno
sahf
ret
fwait
pop
xor
adc
or
mov
fs
mov
rol
pusha
int3
push
scas
sbb
cmp
(bad)
sub
jne
ins
sbb
aaa
mov
or
mov
aad
ror
cmps
iret
icebp
add
cmp
add
ret
cmp
int
in
adc
movs
adc
js
out
test
pop
push
ficom
call
cmp
imul
mov
inc
aam
inc
mov
test
test
cmc
(bad)
aam
aas
iret
mov
mov
mov
add
or
into
push
xlat
jp
leave
aad
retf
add
push
aam
cwde
sub
xchg
or
loope
dec
hlt
sbb
xchg
mov
in
loopne
mov
fimul
movs
ret
leave
or
xor
das
sbb
pop
dec
scas
inc
and
into
mov
popf
(bad)
in
inc
iret
int
ja
fcom
or
addr16
pushf
xor
pop
cmp
add
xor
in
inc
push
loope
cmp
std
imul
xchg
sbb
(bad)
push
pop
dec
push
imul
int3
xchg
pop
out
jp
or
pop
push
pop
cmp
outs
mov
popf
xchg
test
jmp
adc
xor
outs
cmp
pusha
je
pop
pop
repz
ret
push
dec
pop
lods
cmp
push
sub
lds
jle
in
std
inc
cmp
add
cwde
cs
adc
mov
loop
sahf
sub
pop
imul
cmps
ror
xor
add
or
push
jo
mov
in
je
and
scas
add
test
or
sub
mov
outs
sub
test
sub
pusha
mov
xchg
push
adc
xor
mov
sbb
lahf
dec
push
adc
adc
sar
push
arpl
jg
and
xchg
push
add
fiadd
loopne
test
inc
or
inc
outs
jmp
mov
sub
aaa
(bad)
sub
ins
xchg
jp
aam
jbe
xor
test
out
push
xor
and
mov
sbb
sbb
or
jp
test
out
inc
add
jno
dec
shl
xchg
retf
call
pop
enter
scas
scas
push
mov
adc
push
push
jno
psrld
push
pusha
cli
retf
cmps
fimul
inc
jg
mov
and
adc
pop
mov
lea
pop
jle
arpl
mov
ss
fistp
mov
(bad)
xchg
cmp
addr16
daa
pop
and
lahf
ss
loope
popf
out
ret
mov
xor
aaa
(bad)
mov
ror
mov
sub
(bad)
int3
cmc
into
push
dec
push
hlt
pop
or
sbb
cmp
sbb
push
jp
mov
inc
popa
jo
sahf
std
xor
(bad)
jle
inc
push
and
out
xchg
(bad)
mov
dec
add
cmp
sbb
(bad)
imul
sbb
sbb
mov
adc
mov
rcl
inc
popa
fcom
xchg
sbb
xchg
adc
ffreep
xor
pop
mov
and
add
mov
loopne
ins
xlat
mov
fld
xchg
addps
inc
xchg
pop
push
add
push
cmps
cmp
pop
inc
jl
add
sbb
pop
mov
into
and
jb
sahf
push
jnp
ss
push
mov
mov
cli
rcr
inc
sbb
loopne
in
push
std
mov
sahf
push
and
add
and
test
movs
dec
jmp
dec
mov
fs
add
jl
push
and
dec
cmp
dec
aam
xlat
call
xchg
sub
int3
je
pop
add
rcl
push
movs
or
sbb
scas
mov
add
das
xor
cli
pop
or
pop
mov
inc
out
jge
dec
call
fwait
aad
push
push
(bad)
sub
mov
int
call
loop
jl
stos
sbb
inc
mov
lahf
clc
jb
ficomp
in
lahf
pop
mov
fisub
push
push
fwait
div
(bad)
ret
fsubr
push
aaa
int3
fst
lods
scas
inc
push
mov
hlt
and
mov
call
xor
int3
int3
push
sub
sub
imul
mov
clc
mov
xor
es
(bad)
push
mov
mov
jne
mov
lods
test
outs
inc
jmp
frstor
out
ins
(bad)
hlt
dec
test
jp
push
or
mov
loop
movs
pop
imul
movs
in
dec
or
sub
xor
or
mov
(bad)
scas
mov
fisttp
rol
mov
cmp
ja
test
dec
cmc
jge
mov
sti
imul
nop
rcr
sahf
js
adc
mov
stos
xchg
dec
cli
ror
mov
fst
push
js
stc
cmps
out
pop
jae
jno
mov
(bad)
or
call
inc
mov
stc
mov
inc
fistp
and
pop
or
fucompp
mov
xor
xchg
push
or
mov
cmp
aaa
aaa
jmp
nop
stos
out
mov
shl
add
cmp
cmps
sbb
dec
in
xchg
cwde
addr16
pop
daa
xchg
pop
push
aad
lods
pop
sub
repnz
xchg
out
(bad)
std
test
in
in
call
das
lea
fistp
adc
jecxz
std
mov
dec
imul
push
adc
inc
xor
xchg
mov
pop
mov
jns
push
out
push
ins
and
jbe
dec
mov
fwait
lea
push
pop
sbb
aas
inc
lock
mov
xor
imul
jno
adc
and
ret
dec
es
cdq
sbb
jnp
scas
mov
pop
sti
push
adc
out
xor
mov
jne
mov
xchg
jns
mov
aas
gs
pop
inc
nop
push
jg
adc
(bad)
or
or
jbe
sti
repnz
in
(bad)
iret
lds
repnz
mov
shr
pop
out
(bad)
neg
jno
loope
stos
cmc
xchg
in
xor
add
jp
and
jmp
xchg
loop
fadd
pop
jo
movs
(bad)
popf
xchg
dec
ror
nop
adc
arpl
cdq
cs
(bad)
(bad)
enter
mov
(bad)
sti
aam
xlat
imul
push
xor
fcomp
pusha
jl
pop
mov
sar
pop
int3
sbb
out
sbb
pop
sar
xchg
fwait
sbb
xor
lock
jnp
adc
rcl
cmp
aas
fld
int
mov
aad
lock
mov
sbb
(bad)
arpl
mov
adc
sub
call
out
xchg
mov
retf
push
xchg
jnp
adc
xchg
call
fs
pop
repnz
push
and
fs
movs
add
cmp
mov
jo
sub
movs
pop
cli
adc
add
and
xchg
mov
mov
(bad)
dec
adc
dec
and
aas
adc
fisub
arpl
or
stc
sub
stos
mov
push
cs
ins
test
and
push
in
jge
xchg
hlt
cld
iret
xor
mov
bnd
lods
dec
xlat
add
cmp
movs
popa
retf
rcr
cld
push
(bad)
loopne
mov
pop
ins
es
mov
mov
out
sbb
movs
or
mov
retf
cmc
pushf
popf
div
mov
fst
add
mov
stos
ja
call
sar
xchg
ret
add
inc
push
inc
mov
not
push
mov
pop
daa
test
push
mov
push
(bad)
fmul
mov
idiv
dec
xor
stos
dec
push
sbb
hlt
mov
pushf
mov
call
inc
or
cdq
fisubr
not
bound
jp
add
mov
inc
or
ins
aad
sub
push
push
cmp
dec
inc
jle
add
ss
pop
cmps
ja
mov
ror
aam
mov
outs
test
jbe
stos
(bad)
xchg
je
ret
je
add
retf
repnz
clc
lock
push
mov
aaa
sub
xchg
xor
or
jmp
dec
cmp
push
imul
loope
jbe
dec
daa
push
repnz
ds
icebp
sbb
cmp
pop
push
mov
jae
sub
xchg
dec
xchg
rcr
and
mov
sbb
js
push
xchg
gs
mov
movs
scas
pop
mov
shr
shl
cmp
and
jbe
mov
lahf
inc
sbb
sahf
mov
(bad)
jmp
push
popf
cmp
mov
in
gs
in
out
je
cmp
push
cli
push
adc
mov
xchg
add
cmp
inc
push
jbe
or
add
addr16
les
and
addr16
movs
pop
mov
repz
dec
mov
mov
sbb
mov
adc
mov
inc
out
daa
dec
and
ror
(bad)
and
mov
mov
(bad)
stc
push
bound
push
inc
xchg
rsqrtps
movs
mov
aas
fnstsw
lds
or
mov
cmp
mov
adc
lea
cmc
pop
fistp
icebp
xchg
sub
es
hlt
les
jge
ret
add
jae
fld
push
jg
mov
sub
outs
adc
cdq
outs
lea
out
add
mov
dec
out
cmc
push
lods
repnz
mov
shl
mov
inc
jb
cmp
and
(bad)
pop
cmp
cli
pop
fld
and
adc
mov
push
jno
jge
aas
ins
call
cmps
pop
xor
jne
retf
sub
outs
cmc
or
add
les
push
add
loopne
sub
ror
gs
mov
maxps
and
in
retf
add
push
loopne
das
push
pushf
push
(bad)
push
dec
cwde
cmp
push
cwde
pop
sub
pop
dec
jl
lds
cmps
sbb
dec
adc
pop
dec
into
int
hlt
addr16
dec
jle
mov
(bad)
in
dec
cmps
out
rcl
shl
sbb
adc
xor
test
dec
call
adc
lock
pusha
addr16
outs
pop
mov
adc
mov
fldenvw
push
call
popf
mov
(bad)
icebp
outs
ja
push
es
out
add
and
fisubr
or
out
push
mov
pop
push
push
adc
mov
dec
xor
xchg
repnz
test
mov
sub
jb
push
xchg
dec
mov
jbe
jmp
lahf
out
pop
stos
lea
inc
loop
xchg
push
or
push
xor
in
mov
sub
jns
fcom
int3
jb
xchg
aas
add
ds
mov
add
inc
add
adc
in
scas
aaa
jle
mov
inc
mov
cmps
clc
inc
sub
add
dec
push
sar
ja
(bad)
jg
adc
mov
add
sti
sbb
pop
out
faddp
sub
jnp
popa
lahf
sar
test
cli
sub
inc
sub
lea
mov
je
or
mov
dec
fsubr
enter
loop
out
mov
daa
shl
sub
mov
jae
aas
mov
lock
adc
outs
mov
sbb
dec
movs
mov
sti
sbb
add
sbb
or
xor
mov
ins
inc
pop
je
cdq
enter
repnz
pop
out
mov
mov
push
imul
lea
aad
push
pusha
in
cmps
or
push
sbb
(bad)
jb
push
frstor
pop
jne
sti
rep
sub
fwait
and
cs
and
std
sahf
xchg
imul
sbb
data16
mov
adc
bound
imul
aas
out
ins
lds
jae
and
jl
inc
jge
sub
pop
int3
xchg
cmp
jo
pop
ins
mov
ja
jne
push
cmc
ins
(bad)
xchg
inc
add
xchg
(bad)
outs
(bad)
mov
cmp
sbb
or
nop
or
cmp
js
cld
or
loopne
dec
jne
xor
adc
leave
cmp
(bad)
rcr
outs
outs
or
jmp
xchg
jge
lods
jge
jl
mov
or
and
inc
jg
xchg
mov
jns
loop
mov
push
mov
das
adc
loop
ror
pop
adc
(bad)
or
and
lahf
inc
cmp
popf
add
sub
cmp
and
jg
xor
sbb
ins
jnp
rcl
pop
cmp
xlat
push
dec
faddp
loop
aam
in
mov
adc
fdivr
imul
push
daa
cmps
mov
(bad)
push
sti
inc
ins
loopne
fdivr
xor
cli
add
in
and
inc
push
cmp
outs
push
and
dec
sub
push
fidivr
push
xchg
sub
int3
ret
jno
xor
outs
aad
idiv
ror
mov
push
sub
dec
cmc
stos
add
pop
fs
ror
xchg
mov
cdq
mov
popf
daa
pop
es
cmp
cmp
push
shr
add
mov
cmp
dec
stc
(bad)
sti
adc
nop
mov
jnp
rol
lahf
data16
xchg
in
stc
sar
addr16
push
ret
dec
mov
sbb
mov
jnp
sub
pop
fs
mov
in
sbb
fsubr
ja
adc
pop
int3
push
in
rcl
stos
adc
jg
js
inc
mov
mov
adc
sbb
int3
aam
jmp
pop
out
ins
dec
popa
ret
(bad)
mov
pushf
sbb
(bad)
cmp
xlat
cmp
int
les
or
xchg
or
sbb
js
pop
push
loop
pushf
dec
popf
mov
das
mov
mov
cmp
jg
ret
fmul
out
jo
fst
dec
xchg
mov
sbb
pop
add
or
clc
dec
popf
stc
dec
loop
cmp
cs
jb
fwait
popf
or
iret
rcl
leave
sub
add
jbe
cmps
retf
mov
fdiv
cmp
cmp
mov
ja
xchg
(bad)
sub
add
arpl
mov
sbb
gs
push
inc
in
jge
sti
fwait
imul
jge
scas
xchg
push
das
out
(bad)
dec
dec
and
and
ror
dec
out
sbb
mov
repnz
repz
pushf
and
pop
cwde
test
xor
(bad)
outs
mov
jb
jnp
inc
dec
in
push
int3
dec
adc
ja
jg
sub
aam
pop
push
or
dec
addr16
mov
push
lods
sub
adc
sbb
arpl
dec
xchg
mov
pop
push
cs
fcomp
or
jns
cdq
imul
push
fisttp
push
les
jo
push
cmp
clc
cmp
shr
enter
fmul
pop
push
int3
pop
popf
outs
dec
jnp
dec
aaa
mov
cmp
mov
pop
ins
jno
mov
ins
out
mov
out
mov
xor
inc
icebp
xchg
in
mov
dec
or
dec
bound
cmc
dec
ror
les
push
das
ins
jecxz
cs
daa
call
cs
inc
add
xchg
ret
fistp
mov
mov
enter
inc
imul
xor
je
mov
ss
mov
sbb
ficom
add
push
test
retf
imul
or
add
xchg
jmp
mov
pop
pop
xchg
jle
fs
push
out
and
ds
sbb
inc
sbb
mov
and
int
fmul
add
ss
cmp
lea
shr
fwait
add
ret
pop
mov
xor
or
xlat
add
ja
and
mul
loope
cmp
movs
sub
mov
test
mov
nop
xor
and
jge
xor
imul
mov
xor
mov
xchg
adc
in
aaa
xchg
adc
loop
popa
jae
fcomp
or
or
pop
xor
(bad)
mov
(bad)
jmp
lea
mov
cmp
je
dec
or
cmp
(bad)
or
or
sahf
adc
and
mov
adc
xor
mov
jae
mov
xchg
mov
ss
stos
imul
loopne
popa
cmp
mov
push
adc
leave
(bad)
movs
test
jmp
aaa
scas
call
(bad)
adc
nop
pushw
into
arpl
dec
or
sub
xor
movs
pop
mov
sbb
mov
iret
int
pop
push
and
ins
sbb
lods
cmp
stos
jns
int3
pop
stc
push
mov
imul
sbb
out
into
adc
(bad)
jp
cmp
test
daa
lods
fs
cmc
or
ss
inc
inc
jno
inc
cmp
(bad)
mov
adc
pushf
pop
adc
dec
mov
cs
jp
lea
jle
lock
jecxz
mov
jbe
mov
xchg
inc
or
dec
sub
dec
fnstenv
inc
mov
xor
add
shl
stos
or
sbb
xchg
inc
test
neg
imul
xlat
pop
add
imul
sub
aam
mov
mov
xchg
xchg
movs
clc
pusha
jo
das
adc
cdq
mov
push
mov
mov
or
mov
xchg
sub
dec
loop
lea
lds
cmp
dec
mov
push
cs
mov
xor
shr
fcomi
mov
(bad)
and
adc
or
cdq
add
jle
or
hlt
movs
dec
sysexit
push
sbb
mov
push
xor
icebp
or
enter
push
(bad)
stos
sub
sub
mov
shl
add
je
jge
add
sub
fdivr
mov
aad
jmp
dec
aad
xor
fist
push
inc
fild
pop
div
pop
mov
push
fcomi
stos
fwait
movs
sbb
lahf
mov
add
(bad)
mov
pop
push
push
pop
add
fs
(bad)
push
fiadd
xchg
ja
(bad)
ins
cld
jmp
mov
fwait
imul
dec
push
neg
xchg
fs
or
mov
jns
in
jae
xchg
push
dec
gs
outs
or
sahf
div
push
dec
jmp
push
ds
(bad)
js
or
jbe
movs
cmp
inc
mov
mov
repnz
mov
cs
lea
inc
dec
xchg
mov
call
mov
icebp
test
dec
loopne
lds
sub
pushf
push
je
add
shl
push
add
test
pop
js
mov
mov
dec
xor
sbb
repnz
push
pop
pop
out
sbb
shl
fucomp
pusha
and
and
addr16
js
jp
fild
out
cmp
imul
aaa
repnz
xor
je
jmp
out
add
enter
in
movs
scas
cmp
imul
stc
and
dec
push
ja
lea
retf
std
jns
cmps
or
imul
jb
sub
in
test
in
enter
gs
inc
sbb
das
inc
lock
dec
ins
popf
xor
and
add
xchg
jae
or
cmp
xor
or
mov
xchg
add
leave
call
imul
push
mov
sbb
pop
outs
mov
sbb
or
cmps
out
sub
stos
push
xchg
daa
push
jo
call
push
mov
mov
in
iret
mov
outs
jmp
sbb
cmp
mov
stc
mov
dec
lods
add
sbb
push
and
enter
xchg
adc
stc
(bad)
cs
fstp
lods
movs
jmp
mov
sahf
push
clc
daa
mov
and
xor
loope
jnp
mov
js
mov
fistp
dec
icebp
test
dec
iret
xchg
jmp
cmp
add
and
mov
js
mov
arpl
or
imul
and
es
or
cmp
sbb
cmp
rcr
scas
sub
(bad)
nop
mov
push
loopne
inc
ret
repnz
mov
mov
sar
or
xchg
sub
mov
add
push
out
or
mov
sti
sub
push
adc
pop
mov
and
fldenv
out
inc
(bad)
lock
loopne
ins
cmp
inc
inc
fcmovnu
pop
iret
repnz
(bad)
popf
xchg
xor
jmp
mov
push
das
inc
aam
out
pop
test
dec
(bad)
xchg
or
shr
rcl
aam
dec
(bad)
nop
loopne
and
add
push
neg
cmp
add
sub
lds
int3
push
shl
pop
aad
inc
mov
sub
xor
xlat
repnz
test
mov
mov
addr16
mov
out
(bad)
cs
jnp
jae
mov
int3
mov
cmp
js
dec
lds
jbe
mov
sti
stos
cmp
sbb
popf
push
push
idiv
nop
xor
jns
mov
ss
addr16
in
push
arpl
add
sbb
adc
xor
mov
out
clc
enter
retf
(bad)
push
jne
jo
sbb
dec
jge
ins
cmp
stos
je
ret
inc
mov
dec
push
cli
ror
mov
fld
push
cmps
xlat
fldcw
inc
icebp
clc
mov
nop
stos
inc
mov
je
sbb
mov
lahf
pop
ds
pop
sbb
repz
bound
sbb
test
fstp
mov
mov
dec
ret
xlat
cmc
scas
in
jge
and
sub
(bad)
add
iret
xor
add
cmp
and
push
add
xor
dec
scas
mov
xchg
mov
mov
xor
sbb
xor
cmp
push
mov
and
cdq
add
xchg
rol
(bad)
in
cmp
jle
test
xchg
aaa
sub
inc
cmc
mov
test
mov
jmp
int
aaa
retf
xor
push
int3
outs
out
push
pop
jno
or
mov
lock
and
ins
inc
and
cwde
jae
xor
mov
pop
pop
movs
sub
int
mov
std
aaa
push
popf
dec
mov
pop
call
ficomp
aas
js
adc
sub
push
jl
scas
sahf
fstp
icebp
cmps
adc
jno
cmp
cs
push
cs
icebp
mov
jle
pop
daa
jle
into
loopne
je
div
ret
mov
cld
pop
inc
mov
fdiv
inc
bound
inc
cld
push
jle
ins
dec
mov
xor
cwde
adc
push
xor
movs
jp
gs
lock
(bad)
xor
and
jns
sub
cmc
out
mov
(bad)
loopne
aam
je
int
mov
cmp
or
lock
(bad)
int
inc
test
cld
mov
mov
push
in
sub
dec
ficom
mov
call
mov
sub
or
test
dec
pop
dec
cmps
sub
cwde
push
pusha
retf
push
jge
sub
fldenv
daa
and
mov
ret
push
(bad)
sbb
push
(bad)
clc
adc
push
iret
retf
(bad)
jmp
adc
jecxz
mov
jno
cmp
adc
call
aaa
xchg
call
call
mov
ret
adc
push
and
mov
les
int
ins
dec
fisttp
pop
push
jmp
push
xchg
int
shr
sar
mov
imul
mov
repz
call
or
test
sub
jne
(bad)
out
frstor
and
xchg
lods
outs
cmp
ss
jecxz
push
mov
aad
ja
jnp
push
stos
add
mov
ins
xor
lds
add
call
cmp
repz
shr
ret
jmp
and
lock
in
mov
clc
push
fnstenv
cmp
dec
fldenv
fwait
popf
sbb
daa
in
icebp
xor
mov
cmovle
enter
push
cld
fs
cli
mov
ins
mov
or
cmp
mov
cmc
fucom
jmp
inc
push
mov
cwde
push
outs
icebp
aam
or
sar
sub
jecxz
mov
sub
test
pusha
loop
cli
push
popf
movs
jmp
movs
inc
lea
mov
pop
fbld
mov
stos
je
jnp
into
jns
mov
ss
outs
push
push
dec
movs
xchg
push
mov
cmc
cli
adc
mov
stos
xchg
vmwrite
jnp
movs
pop
adc
cmp
jle
mov
test
out
movs
out
sub
cdq
pop
jge
sti
dec
call
sub
mov
adc
push
gs
ins
mov
mov
cli
jge
xor
shl
push
mov
mov
sbb
pushf
or
dec
repz
jnp
pop
aaa
in
mov
in
adc
xchg
das
jbe
push
xor
ins
cmp
daa
sub
(bad)
call
cs
dec
test
push
inc
or
push
ds
push
ja
shl
pop
push
cld
jno
xchg
xchg
push
and
and
sbb
ret
jo
mov
pop
jp
into
mov
inc
pop
int
xchg
lods
int
imul
nop
pusha
sbb
rcr
xchg
adc
outs
mov
and
or
cli
jg
jle
pop
sub
xor
ja
in
and
pop
out
popf
cwde
add
fs
xchg
mov
ss
jbe
aam
mov
scas
mov
shl
jo
outs
mov
mov
xlat
push
pop
sub
clc
sbb
mov
inc
or
gs
jp
shl
enter
mov
(bad)
into
xor
ja
arpl
add
mov
cmps
lock
add
pop
xchg
push
mov
jge
jle
es
jmp
push
add
jmp
(bad)
adc
cmp
pop
xlat
jo
das
into
dec
xor
ret
mov
sbb
(bad)
stos
lods
pop
push
(bad)
mov
jns
sub
or
xchg
jecxz
add
push
(bad)
rcl
xor
and
mov
loope
arpl
jge
cmp
(bad)
in
in
inc
sti
mov
dec
jmp
das
out
mov
aad
sbb
test
jbe
enter
jne
shl
adc
movs
lods
scas
arpl
mov
push
cmc
ret
xchg
mov
in
dec
enter
pop
jp
loopne
dec
and
mov
dec
cmp
ins
nop
mov
mov
daa
fild
addr16
(bad)
inc
cs
xchg
es
icebp
out
sub
and
leave
and
stos
push
or
fld
out
in
out
sub
mov
lds
rol
mov
or
mov
test
pop
aaa
jmp
cld
jle
jbe
mov
pushf
inc
mov
out
push
aad
dec
scas
and
push
adc
inc
(bad)
cld
dec
shl
mov
push
and
sbb
cli
jb
push
jns
mov
sbb
xchg
xchg
jns
sbb
push
bound
and
jo
jmp
aad
popf
cmp
ja
xchg
add
daa
dec
jns
out
iret
ret
push
in
or
mov
lods
cld
in
xchg
xor
xchg
xor
or
in
popf
lea
push
out
lea
mov
push
daa
jo
mov
out
mov
mov
call
sub
lahf
push
adc
and
jne
or
iret
push
jne
hlt
or
sub
sbb
dec
inc
jp
test
and
add
out
not
call
daa
inc
mov
pop
mov
xchg
sub
arpl
or
sub
mov
iret
sub
lds
pop
push
aad
call
mov
sub
or
pushf
mov
adc
cmp
xor
pop
test
jbe
cld
dec
jmp
push
lds
xchg
(bad)
sub
ins
lea
stos
ins
aam
ins
sbb
and
jns
data16
ror
and
or
sbb
mov
leave
inc
adc
loopne
(bad)
xchg
cli
fstp
es
cs
addr16
call
into
imul
add
adc
sub
add
dec
pop
js
jecxz
in
sub
iret
test
cmp
int3
popf
les
cmp
mov
pop
pop
pop
movs
mov
fst
jge
jbe
out
sahf
out
mov
and
cmp
push
fimul
imul
sbb
lds
mov
sbb
push
jo
dec
jecxz
cmp
sbb
imul
sbb
pushf
shl
out
std
fadd
xor
mov
stc
ret
xchg
int
int3
push
cmp
mul
and
rol
sub
inc
jae
lods
mov
mov
repz
test
rcr
out
inc
mov
bound
adc
mov
ss
inc
retf
daa
inc
mov
lahf
(bad)
(bad)
sbb
(bad)
rol
xchg
cmp
aad
movs
cmps
jns
add
lea
pop
and
jle
(bad)
mov
cmps
das
sbb
pusha
popf
add
cmc
lock
mov
ror
jns
dec
push
push
xor
in
sbb
mov
push
inc
pop
pop
popa
add
into
loopne
mov
out
xor
jns
and
int3
jnp
jge
inc
loope
and
das
ror
and
enter
arpl
and
outs
pop
sbb
repz
mov
in
sbb
add
arpl
dec
rol
test
cmp
cdq
div
pop
mov
idiv
push
xor
leave
sbb
gs
ds
inc
and
addr16
test
addr16
adc
jmp
push
mov
and
cmp
add
or
aas
push
arpl
je
or
xchg
(bad)
sahf
inc
jnp
rol
out
fwait
loop
mov
retf
xor
pop
pop
jne
inc
jecxz
mov
xchg
mov
adc
xchg
repnz
jmp
hlt
inc
sbb
enter
test
cli
aaa
pop
imul
ret
adc
xor
pushf
add
arpl
into
mov
pcmpeqw
sub
inc
push
mov
mov
outs
test
push
lea
inc
pop
neg
pushf
xchg
adc
sbb
mov
inc
xchg
sbb
mov
fistp
lods
xor
es
retf
mov
lods
push
xchg
mov
leave
sahf
in
xlat
inc
pop
ins
jb
inc
js
js
sub
pop
cdq
(bad)
pop
imul
pop
nop
add
cmp
pop
xchg
ins
push
cmp
mov
jbe
ret
adc
dec
xor
not
cs
adc
inc
ins
push
mov
pop
xchg
dec
or
arpl
mov
loopne
mov
sahf
xor
jno
sub
lods
in
ins
repz
popa
add
pop
fidiv
mov
mov
dec
lods
mov
cwde
(bad)
leave
test
cmc
cmps
les
push
jmp
ret
cmc
and
inc
stos
cld
xchg
dec
les
pop
imul
inc
push
aaa
imul
inc
int3
ss
push
sub
jbe
adc
sbb
mov
inc
mov
nop
pop
adc
popf
pop
das
jecxz
mov
cs
das
sahf
pop
cmc
stos
or
and
jo
mov
push
mov
lock
push
imul
dec
mov
(bad)
push
les
push
je
jecxz
pop
cmp
xor
(bad)
imul
adc
pusha
push
cmp
mov
dec
xor
test
in
mov
sbb
in
mov
mov
adc
push
repz
or
pusha
sbb
rcr
int
mov
fs
addr16
es
mov
jbe
test
or
push
les
aaa
sbb
arpl
inc
jb
fldenv
sub
iret
in
gs
mov
inc
xchg
jae
dec
xor
arpl
imul
jne
push
jmp
jge
popa
popf
inc
test
icebp
sti
mov
xor
mov
push
mov
xchg
sub
mov
repz
outs
pop
sub
dec
mov
stc
adc
imul
xchg
in
or
add
jmp
cdq
cs
lods
xor
imul
xlat
stos
push
jl
adc
xchg
xchg
stos
jb
test
aad
pop
test
ror
sub
xor
cmc
fnsave
ins
leave
sar
(bad)
shr
mov
xor
jns
popa
bound
in
pop
add
clc
mul
imul
and
push
mov
sbb
push
je
push
mov
shr
hlt
jns
int
fisttp
loope
mov
aad
mul
and
or
and
xor
jno
mov
call
dec
cld
rol
(bad)
xchg
ja
xchg
inc
ja
and
das
mov
dec
fisubr
(bad)
popf
add
(bad)
mov
imul
lock
stc
inc
pop
les
lea
fmul
inc
pop
stc
xchg
jge
les
mov
mov
mov
cmp
nop
movs
push
aam
add
fild
sub
dec
outs
in
call
xor
jbe
hlt
add
inc
in
icebp
adc
cmps
lock
xchg
xchg
cld
in
add
(bad)
stos
mov
and
ficomp
mov
jmp
sub
out
ins
cmp
mov
fistp
ret
push
mov
into
xor
leave
inc
cdq
cwde
xor
imul
mov
dec
les
dec
aad
fdiv
jb
inc
pusha
push
cmp
bound
test
pop
mov
adc
lds
xchg
pop
fnstsw
mov
rcr
mov
fwait
mov
es
(bad)
adc
xlat
push
mov
adc
fisttp
mov
lods
shl
mov
dec
xchg
adc
jae
cwde
sub
popa
xor
dec
pop
pusha
inc
adc
int3
(bad)
popf
repnz
xchg
call
daa
int
inc
mov
les
jle
xchg
loop
and
enter
sub
mov
pop
mov
retf
cmp
add
into
inc
adc
sbb
rol
push
cmp
out
add
inc
jne
mov
sub
in
loope
stc
fld
fs
lahf
movs
gs
cmp
aas
ds
out
sub
and
inc
and
or
dec
push
sti
stos
or
push
loopne
xchg
adc
lds
or
sbb
cwde
push
mov
aaa
ja
es
aas
xor
fs
(bad)
fisub
adc
popf
lds
(bad)
mov
int3
pop
mov
xchg
pushf
clc
push
push
add
aam
pop
int
cmp
ins
jp
retf
icebp
or
push
and
stos
pop
and
fidivr
cmp
sbb
iret
pop
fadd
jl
and
les
xchg
es
in
add
pop
sub
dec
inc
cmps
dec
or
hlt
and
(bad)
dec
in
aad
(bad)
(bad)
les
in
repnz
iret
std
push
cmp
xchg
fcomp
jb
xor
add
xor
outs
and
fsubr
stos
and
movs
scas
jo
mov
ficomp
outs
in
ins
mul
mov
stos
hlt
mov
mov
mov
stc
cmps
out
addr16
add
sub
xor
xchg
daa
stos
jbe
(bad)
lahf
pushf
cmp
mov
inc
dec
sub
add
adc
clc
adc
inc
adc
lea
pop
adc
dec
(bad)
push
ins
jmp
movs
fcomip
mov
sub
sbb
mov
mov
xchg
dec
jne
or
fisttp
shl
mov
cs
sub
std
ret
out
bound
inc
push
mov
mov
xor
dec
push
and
inc
leave
loope
cmp
add
and
xor
mov
test
mov
jmp
cmp
and
lds
adc
jmp
iret
sar
ins
loopne
aaa
call
xor
mov
fisub
(bad)
xchg
adc
dec
pop
mov
aaa
out
pop
inc
jg
push
mov
lea
shl
pop
fs
sub
xor
push
lods
hlt
dec
je
fucomip
xchg
sub
adc
mov
push
jmp
cmp
pop
and
(bad)
ficomp
sti
pop
mov
les
test
mov
mov
out
xor
mov
sbb
jmp
mov
jl
inc
loope
mov
sub
cmc
mov
in
aaa
jo
mov
pop
enter
sub
(bad)
popa
cmp
pop
ins
xor
inc
ret
pop
into
dec
xor
es
into
ds
mov
inc
push
mov
jnp
imul
xchg
adc
mov
mov
sbb
mov
cmp
sub
movs
mov
scas
mov
jecxz
clc
enter
sbb
jecxz
mov
ror
jbe
xor
mov
stc
(bad)
(bad)
movs
push
pop
test
cwde
scas
dec
or
and
clc
lods
and
pusha
call
dec
or
aas
mov
xchg
jl
mov
xchg
sub
out
and
mov
ret
fild
mov
jge
cmp
sub
jmp
xlat
addr16
dec
in
jmp
(bad)
pusha
int3
movs
sub
pop
push
test
call
out
cli
dec
jo
cli
imul
repz
ret
mov
stos
mov
mov
add
pop
movs
add
mov
mov
fwait
sbb
jo
enter
retf
aaa
loopne
popa
dec
push
sub
or
div
cmp
cwde
mov
sbb
imul
fnstcw
cdq
test
pop
inc
inc
push
mov
call
mov
ss
sbb
mov
mov
ret
pop
stc
xchg
sub
lods
push
fist
cmp
outs
xchg
pop
(bad)
ror
imul
lock
cld
sub
jle
jno
out
or
popf
push
inc
adc
cmp
dec
jg
(bad)
test
inc
add
xor
push
and
or
lods
movs
and
jmp
ins
ret
dec
ret
push
pop
xor
stc
imul
and
xor
and
mov
cmp
xor
int3
mov
dec
sbb
rol
mov
sub
fisubr
sar
test
test
cmp
cmps
retf
jno
pop
rcr
enter
stos
sti
dec
daa
sub
xor
add
out
fcom
mov
push
popa
(bad)
outs
mov
test
pushf
mov
mov
and
ins
xchg
cld
adc
jns
add
inc
movs
mov
leave
mov
daa
jns
out
mov
adc
test
(bad)
pop
and
or
or
or
arpl
stos
dec
iret
or
ret
xchg
sub
out
inc
mov
je
and
cmp
jg
and
and
inc
cpuid
(bad)
jle
les
jp
loop
add
xlat
add
call
cwde
inc
mov
dec
mov
sbb
mov
cmp
and
inc
jne
jmp
es
inc
jmp
dec
inc
shl
or
mov
into
aad
sbb
aad
movs
dec
adc
cmp
cdq
retf
sub
xchg
cld
sbb
inc
imul
dec
push
xchg
push
mov
outs
lock
mov
daa
scas
les
or
test
xchg
jl
adc
xlat
scas
jbe
mov
push
pop
hlt
(bad)
xlat
retf
dec
adc
shl
or
push
shr
ret
jne
rep
std
mov
into
shr
mov
sar
dec
int3
push
mov
jae
jmp
mov
bound
sbb
fwait
icebp
xchg
mov
std
push
push
out
mov
dec
out
jb
in
cmps
aam
(bad)
fs
call
xor
clc
lods
push
push
dec
mov
rol
pop
pop
dec
clc
mov
les
mov
or
mov
cmp
dec
iret
fstp
daa
mov
loop
mov
clc
mov
aas
outs
jg
cwde
fnsave
aaa
int
pop
call
cdq
std
dec
sbb
ins
call
in
fcomp
sub
sub
imul
ins
dec
test
xor
int3
inc
in
bound
jmp
sub
mov
inc
hlt
mov
add
mov
push
add
sub
mov
jle
fcom
in
je
mov
and
stos
lock
add
outs
jl
or
sbb
xchg
inc
ds
fmul
lods
cmps
imul
ins
ds
sub
fcomip
cwde
push
lods
mov
add
push
pop
xchg
fwait
adc
in
retf
into
sub
(bad)
loop
fmul
test
and
stos
xchg
xlat
data16
xor
mov
adc
stc
xchg
repnz
bound
movs
jg
push
adc
pop
inc
inc
rcr
fsub
cdq
jge
xchg
mov
(bad)
(bad)
xlat
inc
sbb
rcr
shr
jne
push
aas
dec
ror
pop
mov
inc
jg
or
call
xlat
mov
imul
xor
icebp
xor
dec
jp
push
or
cld
lods
sub
and
fstp
repz
adc
mov
xchg
jmp
in
adc
mov
sub
or
movs
shl
call
loope
std
cmps
(bad)
dec
daa
mov
movs
test
push
mov
push
test
stc
cmp
sbb
and
call
mov
(bad)
in
jne
lods
or
jmp
fisub
pop
sbb
pusha
pop
jnp
xor
xchg
pop
or
xchg
dec
adc
(bad)
xchg
popf
iret
(bad)
or
pop
sbb
(bad)
inc
mov
add
into
xor
push
mov
jge
addr16
jne
sub
sbb
dec
push
add
cwde
pop
pop
xchg
mov
ss
xchg
cmp
sub
mov
pop
mov
std
cmp
pop
sub
sub
mov
mov
cmp
imul
gs
lods
popa
xchg
mov
cmp
or
sbb
xor
mov
mov
ret
rol
push
imul
dec
gs
outs
mov
mov
xchg
scas
leave
push
mov
xchg
push
mov
ror
scas
cmc
or
pop
sub
jnp
cwde
jne
mov
mov
mov
pusha
ds
lahf
and
mov
dec
pop
mov
inc
jae
out
push
push
mov
sbb
xchg
push
ficom
dec
push
inc
or
call
loope
mov
jmp
ror
imul
repnz
loope
lea
adc
and
(bad)
cld
dec
mov
adc
stc
pop
pop
repnz
clc
xchg
mov
cmp
sbb
mov
xchg
jo
mov
jmp
mov
and
and
xor
outs
push
mov
cmp
mov
jnp
cmp
in
and
mov
inc
stos
pop
clc
int
add
sbb
push
pop
shl
stos
fisub
(bad)
and
fucom
sahf
lahf
arpl
cmp
aas
xlat
xor
ins
movs
movs
sub
and
dec
idiv
push
inc
mov
lea
pop
dec
sbb
int3
jne
jecxz
mov
cld
xchg
retf
test
or
cs
popf
sub
mov
pop
mov
lods
popf
or
rol
xor
jbe
sbb
jns
mov
pusha
test
adc
or
push
inc
sub
loop
dec
(bad)
shl
and
into
stc
sub
add
jns
retf
mov
mov
rcr
jmp
shl
push
ret
fucomi
dec
(bad)
cdq
push
push
push
xchg
fisubr
jne
test
cmps
adc
cld
loopne
lods
pop
sbb
pop
into
rcr
in
aas
loope
and
ror
xchg
inc
inc
push
je
sahf
cdq
cmp
mov
repz
mov
inc
call
cwde
test
popf
or
retf
pushf
jae
jmp
sbb
and
cmp
adc
lahf
pop
push
in
shl
xor
and
or
int3
aad
jmp
jo
jnp
xor
jae
cmps
sub
mov
dec
xchg
sub
dec
ss
fs
fldenv
(bad)
xor
popa
mov
gs
cs
stos
mov
imul
imul
pop
cmp
call
dec
adc
sub
fsubr
mov
scas
and
int3
mov
fcom
xchg
rol
sub
sti
xchg
nop
pusha
inc
stc
inc
enter
push
mov
mov
pusha
inc
and
or
xchg
shr
push
xchg
mov
mov
mov
sar
(bad)
leave
mov
and
pop
in
arpl
adc
dec
inc
fcomp
mov
mov
leave
popa
popf
push
xchg
cmp
cmp
pop
push
into
xor
scas
test
int
inc
fwait
mov
push
dec
mov
popf
das
push
ins
xchg
pop
pop
push
and
jmp
mov
mov
cdq
lds
pop
stc
fadd
repz
jmp
call
or
pop
push
and
dec
xor
xchg
jbe
pop
add
sbb
(bad)
ds
cli
mov
loop
or
push
mov
push
sbb
daa
vpavgw
in
adc
mov
cwde
mov
inc
(bad)
aas
not
pop
nop
mov
sbb
repnz
add
or
mov
mov
lock
aad
lahf
add
push
pop
aam
inc
pop
or
jge
cmp
pop
mov
pop
pop
movs
push
test
aam
xchg
add
mov
iret
fdivr
add
fs
push
test
out
dec
iret
hlt
add
dec
xor
xchg
stc
es
cmp
lahf
sub
jmp
cwde
xchg
popa
mov
push
or
fwait
gs
sub
adc
iret
shr
loop
adc
pusha
push
jp
movs
in
cmps
aaa
sbb
in
xor
and
push
cmp
pop
xchg
sub
shl
rcl
stc
call
jns
retf
daa
push
xchg
xor
dec
and
or
int
inc
adc
es
fsubr
cmp
jecxz
fsub
sbb
test
xchg
hlt
lds
mov
mov
test
(bad)
(bad)
repnz
(bad)
cmp
mov
ret
daa
sub
fwait
inc
adc
movs
inc
das
sbb
xor
xor
stc
(bad)
stos
fld
adc
mov
ficom
cmp
adc
imul
jg
mov
imul
or
stc
hlt
cli
and
and
daa
inc
push
mov
add
cli
aaa
and
retf
push
adc
cmp
aaa
xchg
fcomp
pop
aad
mov
cwde
aaa
sbb
cld
ja
mov
imul
(bad)
stos
ins
push
out
sti
call
gs
add
movs
stos
jo
enter
out
rol
sub
loopne
sar
cmps
inc
and
jnp
pop
dec
and
push
sub
mov
mov
inc
inc
ret
mov
mov
xchg
lahf
fild
rcr
pop
ret
in
lods
les
adc
mov
shl
fimul
aam
sub
rcl
jmp
and
pop
lock
jmp
pop
lods
fst
mov
cmc
pop
cmps
pop
and
sahf
jmp
pop
js
lea
das
xchg
movs
mov
enter
adc
or
fisttp
and
cmp
sub
lahf
leave
fistp
ror
pop
cwde
add
je
mov
jae
mov
mov
jb
sbb
fidivr
jne
aaa
push
jg
add
pop
fcom
neg
pop
jbe
outs
bound
(bad)
push
scas
out
mov
(bad)
je
dec
mov
cmp
addr16
xchg
mov
mov
iret
in
ins
jl
jge
(bad)
ficomp
sub
or
jl
fisub
cmc
mov
sbb
add
das
xor
inc
pop
fidiv
mov
and
scas
test
xchg
(bad)
cmp
jae
add
and
inc
stos
es
lods
in
mov
cmp
fdiv
xchg
sti
test
adc
or
and
int
leave
jns
or
fmul
push
mov
dec
push
lea
cmp
bound
sub
mov
je
pop
or
mov
jnp
lods
mov
aas
int
aam
mov
ja
test
sub
fwait
enter
dec
or
jno
(bad)
dec
dec
inc
or
jb
ins
lock
out
rol
add
addr16
rcl
cmc
jo
lock
mov
mov
rol
cmc
add
sbb
lods
(bad)
jbe
data16
mov
adc
pop
int3
rcr
ficom
jo
sbb
xlat
and
fistp
hlt
test
cmp
or
sbb
aas
pop
jg
jno
jp
js
retf
sub
ss
pop
or
movs
fst
mov
retw
popf
shl
jp
sbb
jge
sbb
sbb
aad
test
cmp
jecxz
and
inc
cmp
pop
inc
mov
fcomp
and
xchg
mov
jae
xor
into
not
cdq
cmp
dec
rol
sahf
test
out
inc
mov
lea
daa
and
mov
ret
dec
call
test
or
inc
sbb
xlat
mov
mov
loopne
rcl
shr
push
pop
inc
jle
cmp
pop
xchg
add
sub
nop
je
stos
xor
inc
mov
jmp
add
popa
xchg
pop
cdq
dec
jo
add
xor
jo
inc
in
xor
ja
sahf
jmp
mov
in
xchg
adc
es
dec
loopne
or
aad
imul
push
mov
(bad)
mov
mov
sbb
mov
push
jo
call
imul
inc
jae
mov
adc
(bad)
outs
xor
cld
dec
mov
mov
cmc
mov
inc
leave
pushf
dec
pop
gs
sbb
pop
dec
jge
inc
fidiv
and
cdq
or
lds
inc
mov
add
ins
push
fidivr
and
fcmovnbe
or
and
icebp
mov
pop
pop
sahf
jmp
cmps
lods
mov
es
dec
test
push
les
push
retf
mov
mov
xchg
cmp
(bad)
pushf
dec
sub
dec
mov
cmps
je
fdiv
jge
aas
mov
cld
ds
dec
mov
ins
ins
cmps
punpcklwd
dec
cmps
xchg
add
or
jp
es
std
imul
cmp
fimul
call
mov
movs
sahf
fsub
mov
jmp
adc
jge
enter
and
jb
push
out
sbb
pop
dec
xor
push
and
nop
inc
jg
cmp
or
mov
adc
test
mov
adc
inc
xchg
push
cdq
dec
xor
(bad)
jnp
call
xchg
inc
cmp
mov
inc
and
out
les
pop
push
dec
int
out
loopne
jbe
adc
sub
xor
dec
aam
sti
or
and
mov
std
ss
dec
sbb
sbb
fdiv
in
retf
jle
add
je
mov
(bad)
push
sbb
jnp
jnp
lds
push
pop
repz
aam
dec
cs
loope
mov
mov
push
ret
push
outs
xchg
and
outs
imul
ja
cmps
icebp
lods
rcl
push
fild
and
and
inc
lock
dec
mov
xchg
pusha
sub
push
paddq
or
lods
sbb
fdivp
push
mov
div
(bad)
push
(bad)
sub
cmc
mov
icebp
pop
mov
int3
ds
(bad)
cmp
pop
sub
cmp
and
push
addr16
mov
push
or
push
dec
add
mov
dec
in
mov
and
xchg
outs
sbb
mov
lahf
add
neg
xchg
jle
push
cmps
shr
fwait
dec
mov
sti
out
add
push
sub
cmp
and
cs
(bad)
jnp
movs
add
dec
test
xor
cmp
popa
push
scas
mov
mov
xor
and
lock
imul
push
sbb
push
dec
push
xchg
mov
mov
or
fisttp
pop
inc
push
xchg
mov
push
fisub
fisub
mov
add
icebp
push
cmc
jmp
cli
test
movs
repz
xor
sub
int
mov
cmp
inc
es
mov
sub
call
xchg
cmc
or
rol
or
(bad)
cmps
sub
outs
mov
fcmovnbe
adc
adc
sub
aaa
(bad)
mov
outs
cmps
lock
call
push
inc
int3
in
out
(bad)
bound
mov
pop
cmp
jecxz
dec
sahf
or
cmp
ror
xchg
repnz
mov
addr16
ficom
out
fimul
xor
mov
and
dec
xchg
xchg
jp
pop
mov
jl
adc
bound
cmp
lods
in
mov
test
add
fcmovne
sbb
mov
out
aaa
xchg
mul
adc
bt
iret
inc
and
xchg
cdq
jnp
repz
mov
sub
mov
cmp
push
xor
jne
or
xor
div
outs
test
add
inc
lahf
movq
and
imul
call
sub
mov
in
retf
ret
push
stos
cli
xchg
icebp
add
rdtsc
and
imul
ret
or
xchg
mov
cdq
(bad)
mov
jmp
es
inc
or
or
push
mov
out
aad
div
gs
out
and
or
jmp
dec
xchg
xchg
lahf
ins
jle
fistp
clc
inc
repz
fdivp
int3
fisttp
ins
into
jb
or
daa
xor
mov
mov
aad
sti
rcr
dec
jecxz
in
jno
push
push
xchg
out
cmc
retf
push
jb
aas
lds
fidiv
icebp
movs
cdq
aam
mov
cmp
aam
push
ja
jle
jecxz
jb
cmps
xor
aad
push
iret
xchg
(bad)
popf
mov
mov
daa
mov
xchg
cld
jecxz
push
inc
loopne
vmovaps
xor
outs
pop
mov
mov
mov
push
out
mov
stos
dec
pop
push
sub
sub
pop
outs
mov
xchg
inc
mov
and
int3
aad
mov
mov
(bad)
lds
push
inc
jno
jns
sub
mov
push
push
xchg
les
pop
mov
dec
ss
call
xlat
dec
jmp
push
pop
popa
aaa
(bad)
pop
fnstcw
mov
retf
jns
mov
inc
fcom
jg
je
mov
sbb
add
xchg
pop
test
fcmove
mul
add
push
add
repnz
push
pop
pop
pushf
mov
cld
mov
push
mov
or
jle
cmps
cmp
aad
mov
push
hlt
aaa
loopne
cmp
dec
aam
pop
sub
(bad)
xor
js
ror
or
and
dec
icebp
push
aas
pop
xchg
dec
dec
loopne
(bad)
push
lea
imul
push
pop
adc
sub
mov
cmps
lahf
xchg
sbb
jg
inc
adc
mov
aam
arpl
dec
or
mov
ret
sub
fs
(bad)
jecxz
test
(bad)
fst
inc
push
push
or
add
sbb
or
(bad)
sub
test
outs
jno
jp
sub
mov
xchg
pop
pop
pushf
cmps
shl
out
jl
cmp
mov
adc
push
xor
leave
cmp
mov
lea
rcr
aad
pop
scas
(bad)
aad
lock
mov
ret
cmp
aad
xchg
jnp
lahf
fidivr
mov
cwde
test
sete
cmp
imul
xchg
sub
mov
xchg
sub
mov
inc
fwait
in
(bad)
push
cmc
push
bnd
fidivr
addr16
push
xchg
aas
mov
mov
dec
mov
in
ins
test
sbb
jne
mov
mov
dec
jp
aas
sbb
sub
add
mov
xor
stos
lahf
jp
cmp
mov
xor
adc
pop
aam
test
scas
cmp
(bad)
ins
scas
ret
dec
mov
push
dec
cmp
or
sub
aaa
xor
mov
mov
fisttp
jmp
xlat
std
sub
loop
pop
enter
push
stc
enter
outs
add
ins
ficomp
addr16
popw
sub
out
fxtract
lods
js
or
adc
pop
cs
jno
mov
imul
pop
sti
push
test
shr
inc
pop
or
xchg
fidivr
mov
stos
pop
xor
push
dec
push
xor
adc
fisttp
xor
push
mov
inc
jno
hlt
in
inc
push
sahf
add
sbb
push
push
pop
cmp
sub
sub
ins
pop
jge
mov
push
dec
call
test
sbb
jno
cmp
call
popa
inc
xor
retf
jnp
movs
jns
(bad)
cmp
xchg
movs
xchg
loopne
fstp
jae
test
add
dec
sti
lods
shr
mov
outs
scas
test
mov
je
pop
loope
push
jmp
pop
mov
lds
xchg
addr16
mov
fnsave
movs
in
int3
push
stos
sbb
add
xchg
aas
jmp
sbb
cmp
adc
test
pop
cmps
iret
dec
xchg
scas
hlt
push
pop
bound
sahf
dec
jne
mov
arpl
mov
mov
enter
fistp
pop
sahf
xor
push
adc
xchg
stos
loope
dec
outs
ja
sub
sub
in
xchg
sbb
cmp
pushf
mov
push
adc
ins
xchg
in
cmps
(bad)
and
fs
xor
push
repz
cmp
clc
sub
add
dec
(bad)
sbb
fsubr
inc
(bad)
enter
jmp
sti
push
leave
inc
cmp
xchg
bound
cld
adc
cmp
sti
pop
(bad)
imul
dec
ja
daa
lahf
aam
fsub
cmp
pop
loop
xlat
(bad)
call
dec
loopne
xchg
lahf
xchg
retf
sub
lahf
jbe
sbb
scas
cmps
sbb
test
das
call
int
add
out
xchg
xabort
repz
or
push
daa
sub
fnstcw
jmp
in
push
pop
sti
pop
inc
ss
add
rcl
jecxz
loope
push
mov
scas
fcomip
push
stos
stc
push
cmc
test
mov
pop
pop
push
add
sbb
scas
jmp
outs
xchg
js
shr
mov
shl
gs
xlat
adc
or
sbb
cmp
push
(bad)
iret
xor
(bad)
mov
lea
xor
jmp
hlt
xlat
addr16
lds
pop
rol
mov
adc
mov
pop
cmc
or
or
inc
daa
data16
add
mov
lods
imul
ins
leave
(bad)
in
mov
mov
xor
es
sbb
sbb
adc
fidivr
push
sbb
(bad)
loop
(bad)
adc
stos
inc
or
dec
mov
in
sahf
lods
lods
and
(bad)
out
icebp
lods
dec
es
in
popa
add
jmp
ja
mov
jp
aaa
int3
out
jb
inc
fiadd
stos
mov
xchg
and
std
(bad)
fldenv
outs
cmp
jne
lds
out
imul
sahf
xor
cmp
jbe
or
lea
and
xor
arpl
test
aaa
leave
lods
cmps
pop
cmp
ja
or
add
jg
js
scas
cli
mov
sbb
xor
sar
call
(bad)
into
movs
push
sbb
sub
xor
test
jle
push
xchg
add
cld
jmp
nop
rcr
out
cmp
adc
mov
into
enter
mov
icebp
(bad)
cmp
mov
pop
and
(bad)
push
mov
jns
repz
cld
sub
inc
loopne
sbb
xor
xor
mov
cmps
inc
rol
sbb
or
aad
and
dec
retf
push
pop
adc
test
mov
jecxz
fcom
rcr
outs
movs
lods
(bad)
sub
fdivp
pop
ins
pusha
mov
imul
mov
jg
jbe
inc
dec
jnp
adc
jno
pop
jnp
in
fnstcw
sub
and
sbb
(bad)
repnz
add
fdiv
je
xor
mov
js
data16
adc
and
fidiv
xor
jle
fscale
scas
add
xchg
hlt
lds
mov
inc
nop
stos
dec
xchg
cmps
fst
pop
dec
mov
gs
aam
jmp
add
cmp
test
mov
or
xchg
jge
adc
lds
lahf
rcl
push
pop
add
les
neg
sub
jl
xor
out
(bad)
je
add
fisubr
test
xchg
aas
pushf
ins
fs
jecxz
xchg
in
cs
or
mov
and
into
jle
fucomp
fisttp
lods
pop
mul
fadd
or
int3
fist
jnp
push
mov
or
mov
loope
pmaddwd
jmp
popf
mov
inc
mov
inc
int3
jle
loopne
cmc
loopne
jg
pushf
pop
sar
adc
div
fwait
or
inc
or
add
sar
scas
retf
pop
jne
mov
or
sbb
popf
inc
inc
or
mov
sub
icebp
ins
sar
inc
push
xchg
adc
mov
sub
adc
and
xor
push
xor
and
imul
inc
leave
sub
cmp
mov
push
jg
dec
jecxz
push
dec
push
xor
fldenv
bound
ficom
fcom
push
dec
mov
fs
leave
jnp
outs
cmc
je
lds
dec
arpl
adc
mov
mov
sub
xor
or
mov
pop
fsubr
and
movs
mov
test
icebp
mov
add
call
shl
mov
add
sahf
leave
popf
pop
test
loopne
add
(bad)
leave
jp
push
jmp
enter
mov
(bad)
out
push
adc
cdq
(bad)
lods
rol
and
shr
fisttp
rcr
ja
popa
sahf
jns
xchg
jmp
in
push
ret
je
in
mov
xchg
add
cmp
mov
jmp
dec
pop
add
and
hlt
sub
ins
repnz
les
imul
pop
(bad)
push
(bad)
(bad)
mov
cli
inc
pop
shr
push
mov
fist
stos
pop
or
les
ins
cmp
add
loopne
test
push
js
nop
xchg
push
cwde
adc
push
lea
inc
or
je
mov
(bad)
sbb
popa
push
pop
cmps
je
sbb
adc
scas
push
fdiv
leavew
xor
add
sub
xchg
leave
fs
xor
xor
pop
push
(bad)
sar
cmp
rcr
retf
test
fnstsw
inc
dec
cwde
out
ins
fwait
nop
sub
push
ret
cdq
add
inc
dec
cmp
bound
jne
cmp
dec
push
inc
(bad)
fs
lds
inc
enter
xchg
stos
sbb
add
or
jbe
mov
ds
xor
and
andps
xor
cmp
test
sub
adc
push
dec
push
xor
popa
jns
stc
call
mov
xor
in
rcl
mov
inc
(bad)
xor
cmp
add
in
or
je
dec
aam
cmp
mov
push
mov
mov
push
in
jo
cmp
or
xchg
int3
int
xlat
ds
jmp
xchg
test
lahf
pop
sub
into
push
sar
mov
stos
ds
pop
push
pushf
jnp
xlat
push
add
mov
sbb
lahf
pop
dec
push
cmp
or
rcl
push
aas
fwait
pop
inc
adc
or
xchg
in
xchg
aaa
cmp
retf
adc
jbe
mov
sbb
enter
stos
mov
call
mov
sbb
stos
mov
sub
pop
inc
push
push
mov
xor
ins
pop
leave
gs
fmul
mov
(bad)
fnsave
lods
clc
jge
mov
xchg
int3
sar
push
or
pop
nop
pop
sbb
icebp
push
sub
cdq
xchg
movs
and
(bad)
inc
dec
shr
sti
or
inc
je
inc
iret
fwait
dec
pushf
jns
or
pop
or
or
inc
js
push
test
sub
cmp
pxor
dec
mov
fist
jae
or
push
mov
enter
sahf
out
aas
lods
xchg
lahf
or
pop
js
or
pop
inc
mov
ss
jb
inc
dec
(bad)
xlat
pop
cli
shl
xchg
mov
icebp
dec
mov
pop
test
add
sub
test
(bad)
fwait
mov
xchg
or
sub
and
jae
xor
push
dec
ja
inc
lock
enter
imul
xor
adc
retf
ds
mov
bound
sbb
rcl
(bad)
stc
mov
retf
pop
(bad)
es
sbb
jl
bound
mov
sar
pop
lods
jmp
or
mov
out
dec
add
int
jge
sub
inc
cwde
cdq
xchg
xchg
test
into
sbb
adc
out
xor
mov
cmp
pop
jno
fcom
inc
jecxz
dec
add
icebp
push
push
xor
mov
jl
push
in
cmc
sbb
lock
sbb
adc
push
les
leave
push
add
or
xchg
outs
ss
dec
call
cmps
dec
pop
inc
pop
in
mov
push
push
daa
cmp
pop
sub
push
test
dec
aam
sbb
xchg
ret
jnp
ret
scas
xchg
sar
cmc
mov
fisubr
xor
ret
mov
inc
imul
jbe
pop
add
mov
das
xlat
cwde
cwde
jl
pop
lods
add
repnz
enter
xchg
dec
cmps
push
mov
sub
enter
mov
pop
ins
int
retf
and
retf
scas
sub
pop
mov
add
stc
sbb
repnz
scas
pop
shr
push
mov
(bad)
pop
mov
and
bound
stos
xchg
rcr
ins
adc
dec
inc
jne
outs
sbb
dec
iret
mov
jmp
loopne
enter
js
loope
push
mov
cmp
jb
(bad)
jle
aad
push
push
mov
or
stos
adc
push
jnp
ret
adc
outs
fiadd
retf
int3
jg
mov
dec
aam
adc
in
test
and
sub
fnstenv
fstp
mov
cmp
shl
xchg
xor
cdq
in
in
or
jg
(bad)
jmp
loop
sub
in
xchg
mov
es
xor
xor
(bad)
shr
mov
lahf
popf
ss
into
inc
pop
imul
xchg
retf
int
and
pop
push
ins
es
sub
adc
ss
mov
xor
out
popa
ins
mov
dec
scas
inc
fs
inc
pusha
pop
mov
mov
jbe
and
or
int
dec
sbb
(bad)
in
rcr
pop
xor
shl
call
sub
dec
and
jge
pop
inc
repnz
shl
xchg
movs
cmp
int
or
aaa
sub
mov
or
out
daa
in
adc
stos
inc
dec
inc
pop
mov
nop
push
loope
cmc
retf
push
pop
fnstsw
fcom
cmp
and
addr16
pop
fldenv
xor
push
sbb
jle
test
pop
je
sbb
addr16
nop
push
loopne
adc
stos
cmc
mov
dec
cmps
cs
mov
jecxz
adc
xor
(bad)
add
xchg
loope
test
inc
idiv
mov
xor
mov
int3
push
cmp
add
ret
ins
mov
imul
sbb
mov
cmps
cs
adc
bound
push
aaa
(bad)
sar
pop
sub
ins
mov
retfw
and
(bad)
dec
paddsb
in
in
add
adc
stos
dec
mov
push
mov
mov
add
mov
push
push
leave
and
xlat
imul
scas
jno
sahf
stos
(bad)
imul
repnz
jl
(bad)
lahf
in
inc
sub
test
jnp
les
jo
add
jno
jecxz
or
in
(bad)
or
retf
cli
das
lock
clc
mov
lahf
sbb
ss
pop
in
push
rcl
nop
ror
cwde
hlt
jl
paddd
push
sahf
imul
mov
in
int
pop
jecxz
div
sbb
out
sbb
loope
ja
stos
mov
xchg
ret
in
jnp
cmps
or
shl
fist
mov
pushf
adc
imul
ja
lock
aad
(bad)
shr
enter
adc
xor
lods
cmp
sbb
adc
or
enter
int
mov
or
inc
je
repnz
pop
call
loopne
(bad)
int3
push
adc
aas
inc
scas
mov
test
fmul
sub
cmp
mov
xor
ds
push
sbb
xor
dec
adc
pop
sbb
lock
mov
sub
lahf
fs
pop
jmp
jp
cmp
dec
out
dec
rol
push
cmp
mov
push
xor
les
enter
aam
xchg
or
mov
adc
popf
push
fs
out
xchg
sbb
jo
xchg
jae
retf
out
fs
cs
sub
mov
stos
sub
xchg
dec
frndint
call
inc
mov
in
cmp
jle
pop
dec
add
mov
mov
loopne
out
ins
retf
or
imul
dec
stos
test
jmp
sub
mov
dec
js
jb
mov
dec
repnz
add
and
scas
xchg
mov
xchg
loope
pinsrw
xor
hlt
shl
mov
xcrypt-cbc
cmps
aam
loopne
loop
imul
dec
xchg
imul
pop
mov
test
mov
mov
lods
ds
inc
and
stos
neg
popf
push
sub
int
pop
aam
mov
clc
loope
inc
inc
mov
mov
outs
add
jl
daa
push
xor
fld
test
mov
xor
xor
or
push
sub
dec
sub
pop
inc
dec
xor
jmp
or
cld
jo
xlat
push
sbb
stos
mov
push
mov
xchg
ret
push
ss
inc
push
call
cmp
mov
outs
es
xchg
adc
xchg
push
dec
pop
repz
retf
jmp
push
clc
fld
mov
mov
push
mov
les
lahf
pop
or
inc
dec
test
sbb
cwde
loop
loope
popa
pusha
je
xchg
stc
push
movs
add
es
out
inc
dec
in
adc
loope
jbe
nop
mov
mov
add
cmc
inc
adc
mov
inc
cmp
aad
sti
lods
xchg
push
xor
scas
xor
cs
xchg
and
out
out
and
dec
fnstsw
pop
stc
inc
pop
push
out
test
or
fidiv
dec
mov
test
xchg
push
lds
pop
in
(bad)
fstp
add
scas
pop
ror
pop
pop
dec
das
inc
(bad)
sub
rcr
or
(bad)
and
pop
mov
jne
unpcklps
pop
pop
cmp
xchg
mov
mov
jl
dec
repz
adc
cmps
dec
ret
inc
mov
es
ins
adc
enter
xchg
sbb
into
mov
retf
sub
push
aam
scas
jl
adc
add
sbb
data16
ror
xchg
lahf
lea
jno
gs
dec
or
dec
and
pop
cmp
ss
mov
cmp
lahf
fxch
jb
ror
cmps
and
popf
ror
stos
inc
jmp
pop
mov
std
repz
shr
lods
vxorpd
shl
mov
xor
fadd
mov
inc
popf
mov
push
cmp
iret
push
mov
cmp
retf
mov
push
cdq
repz
(bad)
add
sti
cs
jne
rcl
jns
add
push
push
sbb
jno
sbb
mov
fdivr
add
jns
mov
xor
jp
test
xbegin
xor
mov
pop
daa
mov
cmp
dec
sbb
pop
sbb
retf
pop
or
cmp
outs
loop
inc
rcr
xor
jmp
stos
jns
jl
in
cmp
adc
jecxz
mov
inc
cvttps2pi
jnp
ror
dec
jnp
sbb
mov
or
pop
scas
popa
adc
enter
ins
inc
push
into
dec
xor
and
aad
inc
outs
or
pop
adc
xor
imul
aad
ficomp
pop
fisub
jle
imul
(bad)
dec
mov
sbb
sub
jmp
popf
imul
fist
cmps
dec
dec
sbb
xchg
mov
imul
pop
sub
pop
or
lahf
iret
movs
mov
lds
ror
cmp
lahf
test
fstp
fwait
pop
popf
add
std
sub
xchg
mov
test
push
out
int3
dec
cmp
fidiv
jmp
(bad)
idiv
xlat
daa
push
or
cmp
adc
int
fimul
mov
ret
push
fadd
push
retf
das
inc
pusha
pop
loopne
add
(bad)
sti
inc
pusha
mov
push
cmp
fnstsw
mov
and
add
aas
pop
push
ja
sar
lea
es
call
(bad)
rol
retf
aas
or
inc
xor
mov
lds
out
mov
jg
scas
addr16
cmp
push
mov
addr16
loope
or
loope
fdiv
and
xor
adc
lea
add
and
inc
mov
mov
daa
xchg
cmp
and
xor
test
dec
popf
mov
(bad)
loope
fidiv
pusha
pushf
xchg
sub
sub
xchg
add
or
xchg
mov
jne
idiv
jae
mov
jl
pop
in
jb
js
mov
xchg
adc
sub
dec
rcl
or
das
aam
out
adc
adc
push
dec
cmps
fst
outs
call
xchg
cdq
or
pop
and
cli
jns
enter
outs
pop
loop
xor
neg
jecxz
pop
jnp
hlt
repz
pop
add
fadd
push
pusha
mov
mov
movs
dec
js
inc
sbb
sbb
mov
xchg
shr
jecxz
cli
int
mov
sbb
dec
std
pusha
sub
inc
xor
pop
ficom
push
sti
cmps
mov
popa
lahf
fistp
add
(bad)
out
retf
dec
ror
mov
retf
mov
fidiv
popf
pop
fs
mov
es
shr
ins
leave
mov
or
stos
jbe
cwde
fwait
add
or
and
test
scas
jo
sti
dec
into
or
arpl
addr16
sbb
sar
shl
or
out
push
mov
or
mov
xchg
and
call
xor
push
retf
imul
cmp
out
sub
outs
push
jle
jo
cmp
sbb
adc
or
or
pop
mov
and
and
(bad)
scas
test
(bad)
gs
cmp
test
aaa
mov
sub
(bad)
pop
mov
(bad)
or
gs
test
test
inc
mov
xchg
and
cmps
adc
test
in
ins
jbe
jge
pop
xchg
xchg
addr16
(bad)
shl
inc
mov
sbb
pop
cmc
and
push
jge
ins
ja
stos
pop
pop
loope
mov
and
fwait
dec
push
mov
jno
in
mov
aad
add
xchg
aas
adc
adc
stc
xchg
jmp
imul
repz
or
ret
and
add
mov
add
sahf
jge
ja
pop
cmp
lea
into
imul
(bad)
mov
inc
pop
jns
in
retf
lock
push
and
add
inc
mov
and
mov
pop
(bad)
sub
xor
mul
and
sbb
cmps
add
jb
pop
aad
push
leave
dec
test
stos
call
mov
xchg
imul
cmps
jb
push
outs
std
retf
jl
pop
scas
data16
and
jl
movs
jae
js
xor
test
hlt
in
cmc
idiv
xchg
adc
sub
dec
js
(bad)
data16
retf
ins
data16
mov
mul
pop
push
and
clc
ror
xchg
imul
into
inc
jmp
cmps
dec
and
xchg
jb
mov
fldcw
and
loope
sbb
ret
(bad)
push
scas
lods
lods
push
hlt
lock
cs
gs
mov
int
mov
and
fwait
stos
push
xor
and
je
sub
out
xchg
and
xor
inc
retf
sbb
neg
inc
rcr
or
jl
xor
and
jmp
dec
(bad)
frstor
jge
test
pop
xor
dec
sub
cmps
dec
sbb
adc
ficomp
dec
push
dec
dec
mov
sahf
repz
les
test
dec
cmp
shr
mov
iret
ds
into
xor
add
dec
add
dec
out
jp
xor
add
pop
stos
dec
(bad)
push
jne
shr
pop
(bad)
ja
mov
or
sub
jae
and
cmps
sub
cwde
pop
outs
pop
push
or
imul
(bad)
ins
in
mov
lods
mov
lahf
mov
fsubr
and
arpl
mov
dec
mov
mov
cmc
xchg
adc
pop
inc
in
fiadd
or
push
mov
mov
out
scas
out
outs
or
cmps
push
jmp
repz
jmp
test
rol
push
shrd
mov
sub
mov
rol
and
jnp
sub
mov
pop
push
sahf
test
daa
retf
clc
jnp
and
in
push
fldenv
repz
(bad)
mov
push
pusha
push
xor
mov
push
repnz
movs
push
push
addr16
outs
pop
mov
cs
hlt
pop
loope
sub
xlat
add
or
jnp
ret
push
cmps
add
dec
loope
ja
pop
mov
out
xchg
and
mov
xchg
cs
fst
push
adc
fcom
addr16
adc
movs
xlat
rcl
call
rol
adc
mov
pop
(bad)
mov
mov
jge
xchg
dec
mov
scas
bound
inc
mov
xor
dec
pop
sub
ret
neg
movs
ret
not
lahf
jmp
(bad)
shl
daa
xor
push
or
test
repz
icebp
test
imul
fnstcw
push
and
xchg
daa
mov
inc
pop
aas
adc
(bad)
fsubr
jmp
inc
or
lods
jae
sbb
cmps
lahf
retf
xor
dec
jb
add
push
sti
mov
ins
cmps
xchg
mov
aam
mov
dec
push
stos
in
or
and
stos
(bad)
(bad)
fwait
sar
aas
(bad)
jecxz
xchg
mov
push
in
jmp
nop
push
jge
or
fcomp
jg
sbb
in
or
popa
test
adc
arpl
dec
cmps
push
pop
popf
outs
je
push
inc
ss
and
add
push
daa
in
push
xchg
adc
inc
mov
add
jae
add
jne
xor
je
imul
jne
dec
jp
jmp
cmp
mov
clc
inc
imul
jb
shl
pop
ja
das
das
inc
ret
mov
or
push
xor
cmps
movs
dec
mov
mov
jnp
adc
daa
mov
out
shl
popa
cmp
pop
mov
jae
inc
add
cmc
push
dec
shl
je
lea
hlt
push
jae
mov
inc
fistp
rol
ds
add
xor
pop
xchg
and
mov
dec
jmp
xchg
repz
mov
(bad)
mov
sub
push
xchg
adc
mov
dec
js
cmp
sbb
fistp
movs
loop
cmp
and
adc
push
imul
pop
mov
les
pop
mov
jb
fcom
jns
(bad)
cmp
cmps
xor
test
test
mov
dec
mov
mov
jns
dec
inc
(bad)
mov
retf
adc
je
add
arpl
das
loop
xlat
fcom
push
sbb
pop
sub
(bad)
mov
pop
ret
sub
push
or
rcr
mov
je
dec
jne
js
or
retf
outs
pop
cmps
or
ja
push
add
pop
dec
dec
aam
retf
jne
xchg
jmp
xchg
jecxz
adc
and
inc
dec
sbb
push
in
hlt
cmp
imul
push
mov
mov
and
cmp
sti
add
mov
mov
lock
fidivr
sub
(bad)
adc
jne
xor
test
xchg
popf
hlt
mov
lods
lahf
dec
(bad)
inc
and
push
dec
cmp
jle
add
dec
scas
push
mov
aad
or
cmps
cwde
les
mov
daa
mov
lea
pusha
push
inc
outs
ret
movs
xchg
mov
in
in
or
(bad)
push
call
xchg
out
ins
cmp
jbe
ss
adc
fcomp
push
mov
mov
test
in
add
in
mov
xor
hlt
into
pop
out
ror
gs
mov
fmul
push
ret
or
(bad)
out
jne
arpl
outs
push
leave
inc
dec
clc
(bad)
scas
leave
outs
mov
push
fdivr
aad
int3
fwait
jecxz
jp
cs
sbb
pop
lea
or
test
sub
or
retf
(bad)
out
xchg
(bad)
clc
dec
pop
add
xchg
mov
ins
cwde
xchg
adc
dec
test
out
dec
scas
lods
jb
mov
div
nop
test
das
pop
push
inc
jno
or
push
jecxz
sub
mov
sbb
push
fcos
mov
in
es
pusha
pop
and
adc
test
or
in
pop
jge
xor
repz
mov
sbb
xor
pop
inc
cmp
rcr
call
leave
loopne
pop
mov
lock
in
mov
inc
push
jmp
xchg
dec
retf
cdq
mov
xchg
add
daa
jns
jge
aas
dec
push
iret
test
lods
jo
cmp
sar
sub
shl
push
inc
iret
loop
mov
retf
out
add
pop
sub
in
adc
mov
movs
sub
fldcw
inc
push
hlt
bsf
dec
adc
mov
or
cmc
xchg
(bad)
(bad)
pop
mov
test
sub
(bad)
not
add
cmp
dec
out
shl
into
mov
or
cdq
daa
arpl
mov
outs
inc
or
push
mov
add
dec
mov
pusha
adc
inc
lock
shr
stos
sbb
inc
push
dec
xchg
daa
xor
hlt
je
lock
(bad)
mov
lahf
fild
mov
stos
inc
in
jmp
pop
mov
pop
imul
jo
scas
in
fwait
jno
enter
shl
stc
mov
imul
sub
jo
pusha
out
cdq
sbb
repz
scas
in
mov
imul
jmp
(bad)
add
adc
xor
ins
rcr
dec
hlt
loopne
pop
icebp
mov
int
test
mov
arpl
leave
icebp
jp
stos
rol
nop
leave
repz
dec
mov
stos
adc
push
inc
or
mov
xchg
jae
ss
dec
test
jae
test
mov
sbb
adc
add
fistp
mov
mov
cmp
sbb
sbb
xor
xor
cdq
cmp
cdq
pop
pop
cmp
mov
cs
push
xchg
scas
dec
int
scas
movs
mov
sub
and
dec
ficomp
hlt
sbb
pop
in
and
(bad)
aam
jg
lea
movs
clc
or
imul
jne
cmc
je
add
popa
xchg
and
lods
aam
jge
push
gs
and
outs
clc
sbb
sub
or
sbb
retf
adc
mov
inc
jae
mov
mov
or
je
jecxz
jmp
cmc
retf
out
push
retf
outs
aam
test
mov
xor
loope
sti
loopne
pop
dec
imul
push
jae
aad
dec
add
push
sbb
xor
es
fidivr
lock
dec
jne
mov
add
es
call
cmp
and
xor
mov
stos
xor
sub
fcmovne
in
dec
pushf
scas
aad
xchg
cli
dec
stos
lods
fimul
rcl
aas
push
mov
push
ret
fs
ins
ins
inc
les
jno
pop
sbb
es
push
sub
sti
in
inc
xor
(bad)
jmp
ret
lock
ja
pop
inc
and
in
xchg
outs
sbb
pop
mov
or
out
in
mov
mov
sub
inc
retf
jo
xchg
inc
jmp
xor
sar
addr16
push
inc
popa
loop
cmps
(bad)
ds
fsubr
xor
mov
xchg
sub
mov
add
cmps
sbb
mov
repz
inc
adc
lods
cmps
inc
ret
popf
nop
sbb
retf
sbb
outs
icebp
ror
repnz
pop
arpl
gs
(bad)
xchg
imul
(bad)
sti
aad
pop
xor
dec
sbb
add
es
xlat
mov
or
inc
mov
int3
popf
jle
sub
xor
cmp
jne
inc
mov
(bad)
and
pop
repnz
xchg
jl
mov
pop
sbb
daa
sbb
add
loope
hlt
dec
ss
in
xchg
sti
inc
pop
xchg
out
xor
pop
stos
scas
fld
push
sbb
xchg
and
fiadd
outs
adc
(bad)
lock
push
push
and
mov
xchg
stc
stc
out
outs
adc
adc
xchg
loop
sbb
cmps
push
inc
adc
lods
mov
xchg
scas
cdq
xchg
inc
mov
jne
dec
add
sbb
or
mov
sbb
fxch
adc
repz
iret
stos
inc
mov
adc
jle
and
(bad)
retf
(bad)
repz
rol
xchg
or
leave
arpl
cdq
dec
clc
inc
xor
push
fs
pusha
mov
push
std
popa
imul
and
ret
aaa
test
or
sub
jmp
shr
pusha
sbb
or
sahf
mov
add
je
adc
jecxz
mov
inc
mov
sub
test
jle
jb
cmc
sub
and
dec
popa
jl
bound
push
mov
xor
and
out
int3
inc
jae
jmp
dec
scas
inc
daa
lods
xlat
test
mov
fs
retf
pop
retf
or
mov
or
push
sbb
and
mov
jmp
(bad)
mov
hlt
xor
mov
shl
mov
dec
leave
rcr
(bad)
fwait
aaa
fcom
mov
les
jg
sub
imul
push
sub
mov
mov
lods
movs
mov
mov
push
sbb
lahf
(bad)
das
fsubr
sahf
pop
fwait
sub
or
xchg
mov
loope
sub
jle
test
mov
and
cmp
jo
in
retf
push
rcr
adc
inc
cmp
push
mov
je
sbb
and
(bad)
cmps
mov
cdq
mov
jecxz
outs
in
cdq
mov
ds
push
xchg
movs
test
add
imul
adc
mov
aaa
cmp
test
es
enter
mov
add
cmp
sub
ret
nop
inc
loope
imul
mov
adc
lods
xor
jecxz
inc
push
leave
mov
dec
xor
add
jl
(bad)
push
xor
arpl
test
pop
idiv
int3
std
inc
jp
jge
and
(bad)
jbe
out
pop
sbb
lea
cmps
cdq
xor
gs
ds
sbb
xchg
inc
jmp
mov
pop
je
jge
dec
sbb
xor
mov
cdq
adc
test
je
inc
sbb
mov
xor
ins
movs
mov
dec
test
movs
outs
jnp
or
push
bswap
pop
popf
mov
aas
mov
inc
and
sub
retf
dec
pusha
push
xor
aad
cld
loopne
mov
add
mov
xor
add
rcr
jae
fisubr
das
cmps
ds
mov
adc
call
sbb
xchg
mov
push
cmc
mov
scas
stos
popf
xchg
pop
cmps
adc
stos
mov
mov
fs
movs
test
xor
leave
fidivr
push
mov
addr16
movs
sbb
mov
jmp
shr
sbb
or
cli
and
dec
sbb
aam
add
or
ret
retf
sbb
cdq
xlat
ins
xchg
xchg
adc
mov
ror
stc
mov
xchg
arpl
ror
push
sub
cmps
and
cld
xchg
push
sub
dec
cmp
cmovb
xchg
xor
mov
pop
(bad)
sbb
call
stos
mov
mov
push
jbe
push
inc
xchg
sbb
pop
das
add
in
jo
inc
dec
adc
int3
fidiv
test
mov
push
mov
xchg
aaa
mov
aas
jle
and
sub
int3
call
cli
pop
sub
add
je
pop
cmp
pop
inc
pop
or
daa
outs
xchg
jp
rol
iret
call
pop
fbld
fwait
cmps
jmp
arpl
jmp
xchg
div
sti
cmp
shl
fcmovne
imul
outs
mov
sub
and
push
std
adc
push
fs
ret
shl
lock
xchg
jo
xchg
cld
sbb
cmp
jecxz
mov
adc
push
bts
mov
xchg
jb
adc
sbb
mov
shl
mov
fidiv
sub
je
cld
lahf
cld
cli
mov
or
cmp
push
dec
fcmove
sub
hlt
repnz
jae
jmp
or
jbe
xchg
jp
push
dec
mov
aam
idiv
xor
xchg
jo
mov
adc
or
out
movs
sub
mov
stos
mov
dec
mov
pop
les
pop
push
pusha
cmc
xchg
jns
iret
mov
repnz
jg
mov
js
or
out
mov
jns
pop
or
pop
out
pop
int3
pop
es
cmc
xlat
mov
rol
or
fisub
cmc
aam
dec
fdivr
mov
sbb
sub
jno
dec
in
movs
rol
call
cmp
inc
stos
call
xor
mov
mov
mov
sub
int
test
inc
xchg
lods
jne
fs
retf
mov
shl
rol
cdq
jecxz
xchg
jbe
call
in
xchg
into
es
dec
das
and
pop
int3
sub
pop
jno
push
repz
sub
xor
out
(bad)
cmps
in
imul
fcom
add
inc
rol
popf
sti
jecxz
ffreep
sahf
xor
push
dec
inc
jl
aas
ror
adc
imul
add
mov
sbb
popa
pop
arpl
out
mov
mov
addr16
xor
les
aam
xchg
std
out
pusha
xchg
cmp
dec
div
stos
cdq
sbb
and
lods
jmp
repnz
ss
push
mov
inc
cmp
push
xor
cmp
sub
inc
out
lods
iret
sub
jecxz
add
or
push
mov
rcl
test
mov
push
dec
inc
lock
and
mov
lea
jae
imul
test
iret
jae
stc
adc
cmp
fadd
imul
and
mov
mov
ja
lock
cmp
retf
icebp
lahf
or
loope
pop
std
xchg
(bad)
fimul
xor
or
jmp
jnp
xor
jle
gs
add
mov
and
stc
mov
jmp
stos
pop
fs
scas
sub
adc
or
or
lds
arpl
pop
(bad)
ja
mov
scas
imul
lahf
push
ret
ja
or
pop
jns
loope
ja
fiadd
enter
xor
fisttp
(bad)
fld1
pop
call
fidivr
add
cmp
mov
cmp
xchg
push
mov
mov
fidiv
xor
push
call
inc
outs
in
push
jbe
inc
and
inc
cmp
mov
gs
out
xor
shr
cmp
das
adc
movs
pop
out
fld
push
inc
(bad)
pop
aaa
jecxz
mov
(bad)
jmp
sar
sbb
leave
pop
mov
xlat
push
cmps
push
jb
movs
into
mov
mov
inc
in
mov
aaa
xchg
cdq
sbb
mov
cld
mov
push
data16
ds
push
ja
aam
mov
sub
pop
test
call
lds
mov
int3
sub
push
es
in
sti
sbb
neg
or
(bad)
xchg
cli
pop
lea
cld
pushf
cmp
mov
test
lds
mov
pop
hlt
jo
add
cmp
inc
pop
sbb
dec
(bad)
in
inc
xor
push
xor
test
pop
mov
loop
sub
jns
jae
inc
add
xchg
pop
test
dec
pusha
inc
xchg
(bad)
aad
pop
out
adc
fsubr
int
lahf
push
and
or
xor
pop
test
ret
in
push
inc
pop
xor
arpl
leave
mov
pop
mov
ret
pop
adc
js
cmps
cmp
push
ror
mov
cmovb
pushf
mov
call
sbb
pop
(bad)
jl
outs
dec
jle
leave
and
lahf
and
or
imul
popa
es
fcmove
sub
push
inc
sub
sub
popf
push
inc
test
(bad)
or
mov
fild
shl
loope
repnz
call
push
nop
jne
pusha
xchg
std
and
jno
push
inc
cmp
push
test
imul
gs
call
xor
jp
je
mov
retf
push
inc
mov
push
mov
push
shl
test
enter
jb
and
pop
retf
pop
inc
cmp
mov
inc
imul
cmps
mov
sbb
push
and
outs
lds
or
ds
xchg
pusha
adc
imul
or
arpl
xor
jae
push
adc
test
mov
aam
dec
scas
add
adc
mov
js
xor
cmp
mov
out
mov
outs
daa
push
dec
popf
push
push
nop
pop
push
fs
mov
(bad)
fnstsw
sub
mov
sbb
dec
cmps
aas
icebp
mov
ins
push
fs
(bad)
mov
push
in
mov
lds
repnz
xor
std
xor
ja
mov
cmp
stos
fsubp
push
cmps
mov
pusha
and
or
test
inc
das
adc
cmp
movs
mov
xchg
cmpxchg
test
leave
push
cmp
mov
cmp
dec
sub
inc
nop
lock
sub
add
pop
mov
rcr
lahf
push
rol
test
or
fistp
loop
xchg
in
xlat
xor
pop
dec
fild
sbb
cdq
push
adc
(bad)
movs
or
jnp
mov
push
mov
and
mov
stos
dec
mov
adc
lock
(bad)
shl
lds
clc
sbb
jmp
icebp
sub
fs
and
popa
rcr
sub
bound
xchg
adc
rcr
rcr
pop
repnz
or
adc
xchg
push
sahf
mov
stos
add
xchg
sub
cdq
clc
pop
inc
mov
pop
retf
jg
jno
into
mov
add
adc
pop
gs
lahf
sub
xor
inc
pop
lods
pushf
or
adc
dec
mov
mov
inc
or
repnz
cwde
hlt
mov
dec
in
into
pop
pop
adc
inc
hlt
inc
push
mov
cmp
pop
das
loope
pop
dec
cs
xor
pop
mov
mov
pop
imul
stos
into
mov
in
cmps
jne
push
add
dec
xchg
dec
adc
in
cdq
xchg
pop
xchg
shl
fiadd
mov
cmp
sar
iret
push
cmp
pop
or
or
nop
pop
mov
or
mov
daa
fs
cmps
call
mov
inc
aaa
mov
and
pop
and
sub
fcmovnu
xchg
pusha
imul
in
sbb
pop
aad
sub
mov
jbe
xor
in
test
fbstp
inc
(bad)
(bad)
jle
push
fucomp
pop
in
fld
shl
test
add
out
mov
into
pop
mov
sub
mov
out
neg
leave
xlat
popf
stc
pop
(bad)
ret
pop
xchg
jmp
mov
neg
sahf
jnp
push
mov
cli
add
sar
pop
pop
jae
test
add
sub
xor
or
hlt
adc
sbb
loopne
xchg
xchg
dec
fwait
iret
push
loop
arpl
mov
es
loop
or
imul
mov
lods
in
cmp
cdq
sbb
rol
call
and
sbb
aas
dec
jecxz
mov
call
loop
sbb
pop
xor
sbb
int3
aam
add
inc
mov
push
leave
adc
scas
sub
pusha
in
scas
cmp
xlat
cli
push
push
out
dec
addr16
mov
loopne
btc
adc
push
jbe
add
loope
pop
outs
lock
idiv
pop
mov
test
outs
inc
cmp
ss
popa
leave
inc
add
aaa
rcl
int3
jle
fstp
cmp
xchg
xchg
pop
mov
push
fnstenv
add
pop
call
sub
push
ja
jo
push
cmps
and
inc
jns
pop
in
hlt
call
aas
cwde
cmps
xor
mov
or
push
xchg
div
add
cmps
xchg
jo
adc
mov
stos
dec
cld
and
push
mov
xor
xor
cmp
and
add
dec
dec
cmps
cmp
push
fdivr
repz
imul
dec
icebp
xlat
cmp
mov
imul
icebp
call
xchg
in
outs
adc
jo
jb
jle
idiv
or
jmp
push
fldcw
out
mul
inc
test
test
aad
test
retf
out
xchg
jo
cmp
into
rcr
mov
(bad)
lahf
mov
add
repnz
out
xchg
pop
sbb
loopne
sbb
(bad)
or
retf
push
adc
inc
cwde
push
jno
and
pop
int
lahf
out
loop
dec
push
imul
add
or
mov
(bad)
(bad)
push
jge
sti
dec
and
(bad)
in
imul
add
lahf
xor
and
sti
enter
rcl
cs
inc
(bad)
aaa
pop
inc
jno
repnz
rcr
loop
(bad)
mov
pop
std
inc
push
add
pop
xchg
in
fist
hlt
stos
jle
(bad)
adc
mov
jno
(bad)
aam
lods
idiv
les
pop
dec
push
es
jmp
jge
cli
retf
jecxz
lock
push
xchg
psubusw
jl
adc
loope
test
in
test
dec
pop
cmp
inc
popa
and
jecxz
mov
jnp
lods
xchg
xlat
lea
imul
(bad)
mov
add
sar
imul
push
add
add
out
xor
cmps
xchg
aas
or
xor
cmp
adc
sub
push
jle
js
test
and
clc
stos
(bad)
xor
mov
fidiv
sub
imul
in
jae
push
adc
loope
xor
test
and
sub
mov
in
mov
fdivrp
test
dec
xchg
jmp
jg
imul
retf
mov
xor
jbe
stos
add
xchg
repz
mov
bound
cmp
push
dec
scas
fiadd
pop
mov
inc
dec
enter
jbe
jmp
out
cmp
mov
je
cmp
iret
enter
mov
adc
loopne
pop
fmul
mov
mov
out
inc
dec
jo
jnp
pusha
or
(bad)
xlat
loope
push
sar
add
fdivp
call
ror
out
fstp
inc
mov
jb
xlat
sub
rcr
out
inc
pusha
jne
inc
jmp
stos
sahf
ret
lea
sub
jp
ja
and
add
test
inc
out
sahf
fs
push
mov
aam
out
test
pop
iret
loop
push
mov
in
mov
or
jmp
xor
push
add
arpl
dec
push
adc
jb
sbb
call
push
add
add
xchg
pushfw
cmc
int
add
mov
imul
sbb
retf
gs
cld
in
ins
js
mov
xchg
lods
push
jns
call
test
cld
mov
scas
or
adc
add
ret
shl
mov
fscale
pop
adc
and
rcl
or
jp
mov
push
aad
inc
or
test
sbb
pushf
mov
dec
adc
xor
ror
jae
cwde
(bad)
cs
stos
or
push
aaa
or
les
call
push
mov
mov
stos
inc
cmps
mov
pop
mov
mov
sub
mov
int3
push
out
leave
mov
inc
xor
sets
jmp
dec
jne
in
dec
daa
mov
repnz
mov
fist
inc
mov
adc
or
dec
jo
adc
mov
inc
inc
pop
mov
mov
(bad)
(bad)
push
sub
push
sub
daa
outs
sbb
shr
in
fsubr
xchg
je
push
xor
add
in
cmps
rcl
ss
in
sbb
inc
cmp
dec
into
inc
cmp
push
jl
push
lods
and
xchg
mov
fisttp
mov
sub
mov
sar
stos
fisubr
push
push
push
(bad)
bound
xchg
adc
sbb
fs
jb
repnz
mov
(bad)
sar
xchg
pushf
xor
push
(bad)
adc
inc
or
cmp
fwait
outs
test
push
or
retf
sbb
add
cld
shl
cmp
push
ins
out
cdq
sub
sti
out
cmp
fcmovbe
cmp
movlps
push
retf
add
enter
inc
pop
sti
and
inc
push
mul
mov
sti
jecxz
scas
xchg
int
jge
movs
push
xchg
sub
jnp
sub
mov
clc
adc
push
and
pop
cmc
mov
arpl
cdq
mov
cdq
and
xor
call
pop
adc
mov
jl
pop
aas
xchg
outs
(bad)
sub
hlt
ret
outs
mov
cmp
popa
add
mov
pop
rol
and
cmp
pop
into
mov
jns
jle
and
inc
mov
(bad)
sti
ss
sub
push
adc
inc
int3
in
call
mov
inc
ds
loopne
fsub
aad
push
dec
outs
dec
xchg
adc
aad
or
mov
jns
clc
and
mov
xchg
xchg
out
icebp
mov
and
rcr
fisubr
jo
xor
lock
aaa
sub
(bad)
dec
lods
fnsave
jns
adc
or
dec
or
arpl
push
sub
in
mov
mov
test
dec
test
ror
sbb
lock
(bad)
jne
jbe
inc
fld
cmps
inc
push
pop
rol
or
xor
jns
pushf
and
pop
ins
add
mov
loop
sub
test
add
ins
js
enter
and
dec
clc
adc
inc
mov
ud2
cwde
in
pop
inc
movs
enter
add
push
cmc
movs
jle
test
mov
test
out
sub
lods
not
pusha
cmp
(bad)
imul
cwde
les
movs
(bad)
jno
mov
je
xor
sbb
jno
mov
test
jns
sbb
mov
fist
add
clc
in
out
mov
jo
test
out
cmc
pop
aas
mov
jnp
adc
movs
xchg
mov
fnstenv
lds
arpl
out
outs
sbb
sbb
aam
icebp
push
sbb
jno
movs
sub
das
stos
and
pop
mov
push
mov
in
push
jg
or
ret
ja
xchg
(bad)
in
jle
dec
inc
and
das
or
cmp
shr
push
movlps
enter
pusha
mov
mov
mov
test
retf
stc
mov
or
icebp
lds
hlt
movs
jb
add
in
retf
cmp
jl
(bad)
retf
cmp
shl
fstp
cli
adc
push
and
add
add
inc
and
lahf
sub
push
pop
imul
mov
jmp
push
sti
(bad)
fistp
mov
js
xor
jbe
cmp
mov
call
jbe
out
fistp
push
push
sub
(bad)
sbb
inc
push
mov
shr
rol
fstp
leave
mov
sahf
ret
sbb
mov
and
scas
fwait
pop
mov
and
cmp
div
and
mov
stos
dec
cs
xchg
retf
xchg
pop
xor
adc
mov
lods
mov
sete
popa
(bad)
out
shl
cmp
fucomp
(bad)
dec
mov
add
sbb
js
or
and
inc
adc
adc
dec
push
dec
add
xchg
xchg
or
add
imul
rcl
add
add
pop
into
sbb
sbb
sub
xlat
mov
je
fsubrp
in
xor
push
adc
jg
data16
aaa
pop
mov
sub
jno
cmc
pop
jmp
jl
lods
or
sbb
add
lea
lods
ds
push
fbstp
push
mov
mov
dec
nop
fisttp
xchg
call
or
retf
fwait
pop
jnp
into
loope
inc
mov
ins
je
cmps
jecxz
(bad)
lods
or
jno
mov
jmp
into
cdq
aaa
cmp
hlt
es
icebp
push
pop
xor
mov
xor
or
fstp
(bad)
loopne
aad
ret
popa
xchg
xor
xchg
jb
stos
add
add
dec
cmp
(bad)
cmc
inc
add
xchg
mov
repnz
mov
leave
adc
mov
sbb
push
jge
test
mov
sbb
sub
mov
push
mov
sub
(bad)
fs
enter
call
push
mov
das
cmp
adc
mov
int
popf
mov
sub
sbb
lods
scas
ja
mov
int3
loop
std
imul
dec
jb
mov
imul
stos
stos
jp
push
mov
(bad)
cwde
out
or
aaa
(bad)
push
pop
sbb
sar
cmps
xor
dec
push
in
pop
xchg
dec
sub
push
add
inc
add
push
and
push
loope
adc
dec
inc
push
cmc
(bad)
push
pop
mov
ins
dec
ret
mov
cmc
mov
xchg
cmp
sahf
jb
pusha
pushf
sbb
sbb
ss
jmp
xor
out
in
push
inc
popf
cmp
push
cmps
jge
pop
pop
call
xor
push
jl
scas
and
jmp
or
sar
adc
lods
inc
mov
cmp
mov
daa
repnz
jmp
jae
test
out
fdiv
aas
mov
and
in
neg
ud0
dec
and
mov
xchg
popa
addr16
ret
les
sbb
in
dec
push
adc
xchg
jp
xchg
ds
iret
imul
adc
sbb
xchg
add
jo
stos
mov
add
pop
(bad)
rol
in
sti
xor
dec
ss
mov
sub
scas
xor
and
mov
ss
sub
sub
jns
xchg
stos
pop
mov
neg
repz
movs
add
jmp
popa
je
(bad)
pop
mov
pop
or
(bad)
ja
ret
adc
ja
imul
push
cmp
push
or
hlt
xor
movs
xor
fst
mov
pop
enter
sysenter
and
adc
rcl
pop
cmp
dec
stos
mov
sahf
dec
lock
aas
cld
rol
inc
adc
cmp
cmp
mov
movs
cmps
add
jo
xchg
jle
or
icebp
sub
and
imul
pop
pop
mov
or
push
fnstenv
or
and
enter
push
aam
addr16
out
(bad)
sub
ins
jmp
inc
push
cmps
inc
xor
jecxz
and
fcmovnu
jno
jb
into
or
ror
xchg
pop
jne
mov
mov
xor
enter
adc
inc
loope
push
(bad)
gs
xor
and
xor
movs
sbb
xchg
call
xchg
xchg
imul
add
jmp
xchg
dec
repnz
aad
inc
adc
ror
leave
cmp
lods
test
shl
pop
loop
ja
or
jp
sbb
and
or
(bad)
arpl
sbb
cmp
arpl
pushf
xchg
in
test
out
in
xchg
push
call
std
fmul
inc
pop
mov
je
sub
lds
aam
loope
pop
xchg
sub
push
aam
jmp
sub
inc
mov
xchg
imul
stc
aas
jo
mov
jo
sti
add
aam
aam
cmp
xchg
outs
clc
retf
out
jecxz
into
aam
in
mov
mov
mov
mov
repz
popa
sahf
xchg
mov
aad
mov
jb
jbe
loop
cmp
or
daa
sar
push
cli
cmps
or
dec
ins
pop
popa
sub
and
mov
dec
fnstsw
(bad)
dec
jge
mov
lock
jp
test
xchg
stos
sub
push
pop
add
push
xchg
repz
cmp
sbb
xor
mov
rcl
jmp
scas
or
add
mov
popa
sub
sub
push
mov
or
cmps
hlt
sbb
icebp
(bad)
mov
xchg
xor
hlt
jbe
cmp
aas
cmp
inc
jmp
xor
stc
jmp
cli
ja
mov
mov
push
inc
push
dec
movs
fs
inc
sbb
ret
inc
pusha
cmp
xchg
movs
jmp
mov
dec
shl
push
(bad)
stos
cmp
inc
mov
add
inc
fimul
pop
add
lods
mov
fistp
stos
jge
push
push
sbb
repz
loopne
jnp
xchg
add
push
shr
xchg
jp
xchg
jae
aad
jle
je
xor
cs
lods
cmp
adc
aad
js
cmp
ins
int3
jo
dec
or
sub
inc
loopne
iret
retf
mov
xor
xor
jmp
adc
jno
xor
movs
jmp
lds
movs
and
push
push
lds
add
das
mov
adc
jae
fild
(bad)
test
push
adc
ins
cwde
stc
jmp
call
push
jmp
gs
rcr
add
lods
ins
push
ds
pop
or
adc
dec
pop
jle
or
xor
retf
jb
or
adc
and
pop
mov
sub
pop
cmp
jb
imul
stos
lods
xchg
out
out
cs
jle
rcr
inc
(bad)
pop
or
(bad)
jb
sub
sbb
sub
inc
sbb
and
into
mov
arpl
mov
cmp
push
inc
out
mov
jecxz
xchg
dec
xchg
adc
add
or
pop
adc
stos
(bad)
xchg
sbb
mov
xchg
out
sub
ror
sub
pop
hlt
add
inc
xor
or
xchg
dec
inc
push
adc
mov
adc
nop
mov
mov
sahf
or
adc
(bad)
jmp
sbb
in
popf
scas
stos
aad
cmp
pop
add
rep
out
imul
cmp
out
sbb
dec
fcomip
xlat
test
retf
fs
sub
mov
push
jmp
retf
stos
pop
and
es
sbb
jge
aam
outs
stos
or
fnstcw
bound
push
lds
into
mov
test
popa
shl
pop
adc
push
pop
jno
adc
pop
push
inc
std
xchg
mov
in
push
adc
shl
mov
dec
mov
xor
mov
adc
aad
pop
push
inc
mov
mov
sub
pop
mov
scas
imul
push
(bad)
push
ja
imul
out
seto
lea
lock
push
pop
fisttp
push
rol
sti
movs
lods
add
fmul
inc
mov
outs
out
inc
xor
sbb
cmp
gs
mov
dec
iret
sub
jg
push
out
jmp
sub
std
mov
push
stos
sti
int3
add
lods
jne
mov
rcr
arpl
fmul
ins
(bad)
lock
sahf
imul
xor
ds
mov
dec
jbe
sbb
lods
out
ret
xchg
mov
mov
dec
imul
jae
sub
popf
mov
je
mov
imul
arpl
shl
push
mov
das
mul
adc
popf
outs
pop
and
inc
pop
mov
enter
push
out
mov
cwde
mov
sbb
outs
adc
mov
in
int3
loop
pop
or
mov
pop
pop
dec
sti
pop
shl
cli
das
or
pop
je
repz
jle
mov
cs
inc
movs
inc
xchg
jmp
lods
(bad)
movntq
mov
pop
inc
mov
std
popf
ret
pop
sbb
or
sbb
scas
add
add
mov
fmul
inc
and
lods
ficom
lds
ins
not
push
das
sub
leave
imul
lods
aam
add
sbb
pop
pop
or
lahf
xchg
xchg
xchg
inc
in
dec
lock
xor
add
or
out
add
inc
int3
xor
add
push
pushf
enter
pusha
call
cmc
jbe
fld
inc
es
push
jmp
pushf
push
add
inc
repz
test
rol
pop
or
push
xchg
js
fwait
inc
(bad)
lahf
mov
cs
popa
fisubr
dec
adc
pop
mov
hlt
scas
call
(bad)
jbe
push
fild
adc
jmp
sub
fidiv
add
ja
pusha
cld
jb
dec
push
pop
(bad)
out
cmp
jg
cmp
retf
push
cdq
pop
jl
aad
clc
neg
sbb
gs
push
lahf
pop
stos
lods
adc
hlt
or
jmp
sbb
nop
lods
fwait
xor
call
mov
hlt
jl
and
fwait
dec
inc
inc
mov
iret
inc
xor
fwait
pop
pop
cmp
xor
scas
xor
retf
dec
cmps
aas
xchg
movs
xchg
cmp
pop
(bad)
push
push
pop
mov
scas
mov
popf
mov
fmul
stos
int3
dec
in
leave
retf
div
and
pushf
sbb
leave
lods
lahf
mov
(bad)
jne
and
enter
inc
mov
(bad)
shl
mov
or
sbb
ja
ret
loop
adc
or
xor
xor
shr
mov
jae
shr
(bad)
sub
(bad)
(bad)
out
or
xor
pop
or
ins
movs
dec
mov
stos
clc
sahf
out
call
in
(bad)
stos
mov
add
enter
addr16
int
pusha
cs
mov
scas
cwde
mov
pop
lods
repnz
enter
shl
dec
aad
add
mov
mov
stos
std
cmp
xor
mov
sbb
scas
sbb
adc
mov
push
xchg
push
mov
adc
ds
fucomp
sub
xor
outs
mov
aaa
jp
fimul
and
outs
sahf
dec
daa
xchg
cmp
cdq
call
fidiv
loopne
add
out
add
mov
stos
cmp
jge
xchg
add
xor
mov
mov
cmp
(bad)
jnp
xlat
xrelease
call
mov
aam
xchg
hlt
or
pop
pop
mov
pop
ins
mov
repnz
test
sbb
xor
gs
mov
iret
jmp
xor
movs
cmps
or
or
xchg
(bad)
call
test
es
mov
test
adc
neg
loopne
add
sub
push
jmp
addr16
fsub
outs
ror
dec
push
and
sub
dec
pop
xchg
cli
shr
frstor
or
enter
or
sub
push
cmovnp
lock
pop
pop
push
rcl
inc
sbb
ror
push
es
push
dec
stc
xor
retf
mov
ror
not
pop
jb
je
or
jae
pop
mov
and
add
add
nop
inc
mov
mov
or
xchg
add
mov
pop
xchg
imul
jnp
xor
sbb
leave
in
push
xchg
xchg
out
xor
jp
cmps
xor
add
inc
test
pop
sti
in
mov
push
fcmovnbe
outs
mov
in
data16
xor
imul
inc
std
inc
xchg
out
icebp
retf
je
movs
or
pop
(bad)
add
jo
int3
mov
sbb
cmp
mov
push
xor
add
mov
test
test
xor
adc
xchg
jg
jmp
add
xor
sub
sub
int
sub
pop
outs
mov
jle
jnp
repnz
add
mov
add
add
sbb
retf
loop
jecxz
stc
(bad)
or
enter
mov
imul
aam
dec
sti
stos
outs
scas
mov
xor
xchg
push
retf
xor
push
outs
mov
mov
cmps
or
cmp
and
int3
mov
pop
dec
sbb
or
ss
mov
fiadd
jecxz
fs
adc
ds
dec
and
jle
or
xor
adc
outs
dec
clc
pop
push
adc
es
es
or
jo
outs
jle
jmp
jmp
mov
in
pop
add
dec
mov
sar
das
arpl
pop
xchg
jmp
(bad)
mov
sti
mov
pop
sbb
cmp
jno
paddsw
mov
in
outs
shl
(bad)
test
faddp
cmps
mov
inc
and
pop
mov
loope
add
inc
das
ins
sar
or
out
ret
push
jns
xor
sbb
mov
imul
mov
push
outs
imul
jne
inc
arpl
aad
xchg
push
cmp
inc
or
ds
sbb
inc
fwait
add
std
ret
xor
inc
mov
iret
xchg
jg
and
das
inc
push
out
cwde
add
retf
fisubr
popa
cmp
aad
adc
or
fadd
jnp
pop
xor
sub
pop
hlt
sub
and
add
and
bound
nop
retf
push
aam
mov
cwde
cmp
ss
ja
daa
cdq
sbb
mov
or
mov
pop
and
movs
daa
cvttps2pi
jge
rcr
in
pop
or
hlt
ja
scas
inc
jb
aam
inc
sbb
add
mov
jp
mov
pop
jns
jae
or
cli
lock
add
mov
mov
jne
shl
mov
fmul
and
add
cmp
cmp
xchg
and
lahf
scas
(bad)
in
jnp
das
mov
lods
ret
inc
(bad)
and
fldl2t
inc
xor
enter
stos
loop
cdq
add
div
adc
lea
mov
inc
cmp
pop
icebp
retf
xlat
cdq
lods
cli
or
leave
and
das
cmp
inc
inc
mov
adc
jg
push
cdq
or
(bad)
lods
js
mov
popf
adc
movs
movs
ss
xor
test
push
mov
mov
inc
(bad)
cli
jnp
jmp
or
add
jae
push
inc
sub
xor
xchg
imul
sub
in
call
movs
shl
lods
aas
test
inc
and
dec
xchg
popa
dec
mov
les
int3
sti
and
push
lods
sub
xchg
cld
mov
mov
fistp
add
rcl
mov
aas
call
cwde
lock
fs
in
inc
cmps
sub
jbe
into
dec
and
mov
push
push
loope
mov
pop
mov
xor
xchg
das
les
mov
enter
cld
mov
cmps
mov
mov
add
and
add
icebp
adc
shl
sub
xor
test
nop
stos
sti
lock
nop
std
addr16
xchg
cmp
retf
jmp
xchg
lods
mov
sbb
retf
fwait
fs
cmp
sbb
test
xchg
out
push
mov
sbb
jae
cmp
mov
mov
fnstenv
shr
mov
movs
xchg
jmp
pushf
jae
mov
push
clc
adc
ss
add
xchg
(bad)
sub
pop
cmp
(bad)
sub
pop
aad
xchg
aaa
pop
push
push
xchg
pushf
shl
xchg
mov
sub
jnp
addr16
fxam
push
addr16
dec
jo
adc
push
pop
jecxz
sbb
mov
nop
mov
aaa
mov
sti
mov
call
loop
sbb
(bad)
es
lea
lock
dec
ins
clc
sub
and
mov
pop
mov
mov
addr16
xchg
js
movs
ss
ds
mov
aam
xor
mov
cmc
cli
ltr
xchg
in
xor
mov
sub
jmp
sbb
test
jns
add
xchg
xchg
cmc
ins
pusha
fstp
or
out
sub
gs
in
stos
stos
xlat
inc
imul
pop
fist
out
aam
stc
in
jl
ds
cmps
daa
loopne
fadd
sbb
or
xor
push
lahf
mov
xor
pushf
pop
cmp
cmp
(bad)
stos
out
inc
jae
daa
xchg
pusha
cdq
lds
xchg
xchg
sbb
mov
adc
add
cld
cmp
inc
into
stos
inc
lods
mov
xlat
xchg
push
xor
push
xchg
or
mov
std
nop
mov
ret
xor
stos
jmp
imul
lods
pop
xchg
adc
rcl
cmc
xor
sub
dec
shr
pop
push
sar
xlat
and
icebp
push
stc
adc
adc
popa
jno
ds
ins
and
rcl
add
aaa
cmp
cwde
stc
js
fimul
(bad)
fidiv
inc
jne
jecxz
lds
dec
and
mov
ss
sub
es
ss
push
pop
imul
popf
(bad)
add
mov
arpl
das
sub
cmp
leave
sub
or
jnp
call
dec
cli
(bad)
pushf
dec
ds
inc
outs
inc
gs
mov
pop
jmp
pushf
inc
adc
push
push
cmp
adc
arpl
jnp
adc
sub
aad
mov
ret
outs
xlat
xchg
mov
add
xchg
xchg
bound
pusha
xor
(bad)
repnz
stos
cmps
cld
rol
xor
and
hlt
mov
mov
or
addr16
dec
mov
cmp
add
adc
jmp
jo
enter
ret
js
lea
in
jge
pop
xchg
jl
xor
pop
shl
push
lds
dec
les
xchg
xor
push
pop
push
xor
aaa
cmp
cli
or
adc
adc
push
xchg
xchg
pushf
popa
aam
xchg
lods
or
out
iret
jno
mov
mov
jnp
rcl
in
sar
dec
sbb
mov
dec
cmp
in
add
test
ret
push
inc
add
jb
or
stos
jne
mov
xor
dec
mov
lds
fsubr
fidiv
call
push
dec
mov
ret
test
inc
arpl
jae
cmc
cmc
(bad)
fisub
mov
pop
outs
out
call
test
dec
sub
je
sar
add
(bad)
shl
mov
lea
push
out
cmp
inc
popf
outs
lds
out
or
jl
cmp
int3
or
pop
bound
jae
rol
xchg
pop
in
pushf
push
or
xor
hlt
nop
icebp
jl
or
push
or
mov
stc
or
sub
ins
add
mov
adc
outs
xlat
push
mov
pop
push
inc
cmps
icebp
je
cmp
loope
cmp
cli
cmp
std
cmp
movs
sbb
idiv
mov
xor
or
lock
pop
mov
ss
shl
mov
(bad)
mov
pop
scas
mov
xlat
cmp
or
mov
inc
loop
in
jb
push
push
div
popf
retf
and
sub
push
jnp
cmp
cwde
(bad)
js
cmp
mov
adc
and
(bad)
cmp
sub
test
fisttp
mov
enter
inc
push
sbb
ds
out
jnp
mov
imul
or
push
mov
push
adc
sbb
pop
adc
adc
fisttp
fist
enter
push
xchg
pushf
mov
packssdw
cmp
imul
lds
popf
push
and
loop
xchg
mov
xchg
fimul
pop
pop
or
bound
jns
mov
push
mov
push
popa
popa
inc
(bad)
mov
sub
mov
push
push
jmp
xchg
jb
pop
sub
dec
ins
rol
call
test
or
into
ins
mov
cmp
jmp
mov
jb
adc
xchg
clc
ret
inc
sub
mov
xchg
push
dec
push
inc
popf
xchg
mov
mov
dec
pop
jo
push
push
jmp
movs
push
nop
push
rcl
dec
pop
xor
push
xor
mov
push
es
mov
pop
(bad)
sbb
sub
into
push
in
jg
jg
leave
push
or
inc
adc
ja
out
enter
fxch
push
cmp
xlat
idiv
sahf
cdq
arpl
cmp
sub
mov
jmp
lds
or
inc
(bad)
in
pop
push
cmp
adc
in
imul
mov
pop
shl
arpl
xchg
fcmovnb
dec
xchg
push
rol
call
mov
in
inc
scas
jg
retf
rcr
mov
and
test
addr16
fimul
ins
adc
or
dec
enter
pop
sahf
cli
cmps
sub
jmp
icebp
ret
sar
aas
inc
xchg
mov
fiadd
jnp
cs
or
lock
imul
icebp
cld
fild
mov
in
sub
sub
fwait
ds
push
jge
jg
xor
jae
pop
test
cmp
clc
mov
xchg
lahf
and
dec
push
mov
inc
or
cld
sbb
shl
cmps
stos
lods
cwde
xchg
inc
mov
mov
les
inc
inc
push
std
test
jo
inc
mov
cmp
sub
xchg
push
sub
stc
push
idiv
and
add
es
fnstsw
push
xor
xor
sub
out
adc
or
loop
data16
stos
jge
fdiv
jo
add
and
fadd
mov
mov
out
dec
mov
ret
outs
mov
leave
and
pop
ficom
add
lods
jns
cmp
in
icebp
xor
test
cs
mov
mov
sbb
call
and
lods
dec
jle
jp
sub
fst
xchg
loopne
mov
mov
pop
pop
pop
test
mov
(bad)
mov
mul
enter
scas
or
sbb
jb
jne
mov
jne
scas
inc
or
or
clc
inc
pop
stc
nop
iret
(bad)
add
ins
js
cmps
iret
xor
jns
mov
xchg
loop
enter
dec
xchg
in
jecxz
mov
mov
jmp
sbb
pop
movs
xchg
div
xchg
lock
(bad)
int3
jne
frstor
or
mov
jbe
jg
cmp
adc
jmp
lahf
cs
test
sbb
je
mov
nop
or
outs
(bad)
sti
movs
or
aam
push
mov
out
jnp
(bad)
mov
sar
inc
loop
mov
in
in
jmp
pop
push
add
mov
or
les
xchg
sbb
push
cmps
fbstp
cmp
cdq
cwde
aaa
test
cmc
sar
fld
cwde
loop
mov
jmp
fsub
mov
sub
ret
sub
sbb
fcmovbe
in
dec
mov
sub
cmp
cmps
mov
out
push
xchg
pop
xor
xor
sub
mov
out
ficom
jae
pop
sbb
mov
push
les
xchg
jge
push
adc
mov
dec
pop
shl
cmp
xor
dec
pop
jne
loopne
or
dec
sub
enter
xor
mov
fstp
pop
mov
out
xchg
mov
push
and
inc
push
mov
in
jg
(bad)
pushf
into
mov
jb
dec
fs
xor
xor
in
rcl
xchg
test
mov
pop
into
mov
sbb
or
xchg
adc
ror
lahf
fcmovbe
fwait
imul
or
(bad)
shr
fst
xor
test
fisubr
inc
push
jge
sub
mov
push
mov
mov
cs
test
xor
push
js
(bad)
dec
xchg
jae
cwde
xor
cli
jno
mov
icebp
sub
nop
xor
sub
sub
sar
dec
ins
push
mov
sub
pusha
xchg
addr16
mov
jecxz
jo
push
pop
and
std
popa
fdiv
jbe
jge
ins
xchg
adc
mov
xchg
es
jbe
(bad)
(bad)
adc
aad
push
dec
add
adc
fmul
imul
pop
adc
cmp
leave
pop
or
fs
adc
iret
xor
aaa
or
mov
lods
sbb
and
inc
sbb
sbb
repnz
iret
in
test
mov
(bad)
cwde
sbb
call
dec
hlt
xor
mov
push
stos
call
mov
xor
stc
test
dec
ror
cli
pop
push
inc
scas
cdq
dec
outs
dec
pop
pandn
inc
div
sahf
inc
in
mov
rol
sub
xchg
das
push
stc
into
cwde
cmc
fst
xchg
mov
call
add
pop
inc
popa
sbb
aam
ja
jne
sahf
stos
les
and
repz
scas
hlt
push
mov
mov
mov
sbb
sub
pop
dec
pop
mov
fwait
mov
cmp
sbb
xchg
fidiv
xchg
adc
mov
popa
addr16
xchg
xor
test
jb
enter
ret
aad
and
add
or
loopne
popa
push
ins
push
mov
test
lods
and
out
(bad)
jnp
int
dec
inc
(bad)
or
cmp
pop
jns
mov
(bad)
stos
sub
fild
mov
and
stos
std
add
scas
cs
loop
mov
mov
out
xchg
shr
sub
or
jns
shr
mov
xchg
xchg
jecxz
neg
fnstenv
mov
xchg
push
jae
push
movs
sub
add
std
idiv
data16
jg
add
call
popa
ret
pop
hlt
repz
pop
(bad)
enter
and
sub
rol
mov
arpl
lds
add
retw
sub
(bad)
ins
popf
neg
xor
xchg
or
arpl
jnp
jecxz
test
dec
jg
mov
sbb
push
lea
sbb
scas
and
push
stc
(bad)
lahf
xor
(bad)
sub
or
dec
(bad)
and
movs
dec
sbb
pop
pop
lds
push
inc
push
mov
test
jmp
scas
in
sar
mov
pop
xor
dec
inc
adc
repnz
(bad)
fistp
or
(bad)
mov
sbb
test
out
ficom
inc
popa
test
(bad)
aad
and
sub
mov
rcl
cwde
push
sbb
adc
loopne
enter
cmp
inc
push
mov
loope
sub
div
sub
xor
in
imul
test
inc
je
cs
dec
fst
std
pop
es
cwde
sbb
cmps
cmp
stos
jb
fadd
(bad)
fistp
xor
xchg
test
xchg
adc
int
cmovnp
push
mov
inc
and
pop
mov
add
or
dec
clc
clc
sbb
cmp
mov
ja
mov
mov
mov
add
mov
stos
(bad)
jl
sar
jne
sub
adc
mov
shr
push
cmps
popa
test
push
lods
data16
aas
pop
sbb
and
ss
js
push
movs
sub
xor
aad
inc
(bad)
jmp
mov
pop
mov
(bad)
(bad)
xchg
sbb
(bad)
sub
add
inc
pop
pop
stc
test
pop
cdq
adc
(bad)
pop
sub
outs
and
out
mov
xor
and
cmp
sub
xchg
les
(bad)
hlt
push
scas
and
cmps
int
mov
add
cmps
scas
dec
retf
dec
ficomp
in
lea
sbb
aaa
jecxz
xlat
cmp
pop
push
and
jp
retf
sub
leave
pusha
popa
or
pop
imul
mov
pop
xchg
gs
push
out
and
pop
(bad)
mov
adc
mov
add
setle
dec
and
loopne
fadd
sbb
int
cmps
dec
jbe
pop
jle
push
repnz
fimul
inc
in
inc
lods
jmp
sub
or
push
push
imul
aam
cwde
mov
dec
mov
xchg
test
mov
cwde
rcl
ja
outs
sbb
(bad)
xchg
xor
jmp
in
repz
shl
aad
and
js
js
(bad)
push
out
push
adc
rcr
push
mov
sub
xchg
test
or
shl
add
dec
xor
out
pop
dec
call
inc
mov
aad
lods
out
arpl
shl
das
cmp
shl
pop
retf
mov
mov
and
and
and
cld
ret
xlat
or
sub
test
(bad)
xchg
dec
add
ret
inc
cmps
js
mov
mov
dec
jle
repnz
jnp
ficomp
clc
jnp
out
pop
inc
pop
or
cdq
inc
mov
and
js
int
mov
dec
or
push
or
or
sub
mov
leave
and
or
outs
mov
pop
xacquire
sbb
jle
(bad)
in
push
mov
inc
(bad)
inc
aas
add
loope
(bad)
(bad)
cmp
mov
int3
jp
in
cmp
mov
sub
jno
out
repnz
xor
movs
dec
in
or
iretw
mov
cmp
xchg
xchg
xchg
mov
ins
out
inc
jo
sar
arpl
jns
fcom
pop
and
fsub
xchg
push
jle
xchg
sahf
lods
inc
sar
(bad)
xlat
xor
xor
loopne
lods
out
in
(bad)
cmp
mov
popa
loope
xor
aaa
xchg
mov
mov
cwde
rcr
cld
mov
pop
mov
retf
sar
add
outs
jmp
adc
push
jb
stos
xor
mov
fsub
push
test
inc
leave
aaa
mov
mov
jae
sub
mov
or
sbb
push
(bad)
sub
ss
or
lods
mov
cdq
or
mov
xchg
push
mov
pusha
ret
inc
pop
test
test
adc
xchg
or
stos
pop
xlat
loopne
sbb
(bad)
lods
add
xchg
clc
dec
inc
cdq
addr16
nop
mov
add
mov
loopne
mov
and
hlt
xor
dec
fld
nop
xor
adc
in
or
mov
ret
sbb
mov
rol
mov
pop
push
(bad)
xchg
xor
or
push
adc
mov
sahf
(bad)
sar
test
cmps
loopne
push
imul
adc
test
aam
inc
scas
inc
sti
push
and
shl
pop
enter
adc
imul
inc
fistp
sti
sbb
sbb
ret
inc
push
adc
loopne
aas
push
inc
inc
push
sbb
mov
add
call
add
and
adc
push
fwait
hlt
sub
and
test
sub
jp
rcl
jl
cmp
sti
cwde
(bad)
fdiv
loopne
loope
call
mov
add
mov
je
outs
lods
adc
sbb
sbb
ret
imul
shl
cmp
add
ins
pusha
push
jecxz
mov
lds
out
les
mov
cmps
pop
leave
aam
mov
enter
adc
pop
jmp
ret
mov
rcl
or
mov
push
or
cmp
sbb
movs
iret
leave
pop
jl
cmp
sbb
(bad)
mov
or
jp
stos
xchg
pop
and
mov
pop
stc
jmp
jns
hlt
cmp
and
push
(bad)
sub
adc
push
dec
mov
add
es
rep
loop
mov
cmp
sti
sub
cmp
push
rcl
xor
enter
mov
lds
xor
mov
hlt
cwde
cld
repnz
inc
pop
das
cmc
inc
(bad)
clc
dec
stos
stc
(bad)
stos
mov
mov
jae
xchg
fxch
xor
or
sub
push
mov
(bad)
add
dec
fdiv
xchg
mov
cld
fs
mov
daa
nop
pop
iret
dec
cs
loopne
fistp
lock
inc
lods
lock
sahf
addr16
adc
into
test
test
xor
xor
outs
cmp
(bad)
lods
(bad)
push
lds
dec
mov
retf
adc
test
sbb
ror
cmp
arpl
arpl
div
(bad)
je
sbb
mov
inc
jnp
xor
mov
add
repz
cli
jae
jmp
shl
test
mov
inc
cmp
push
les
push
enter
sbb
pop
(bad)
in
xchg
push
cmp
mov
jbe
jbe
sbb
std
ret
ss
fldenv
inc
mov
stc
loope
jns
inc
dec
and
jnp
push
cld
inc
loop
dec
push
push
fldcw
xor
ins
hlt
cmp
push
mov
out
pop
outs
jle
jp
in
addr16
cmp
sbb
clc
ss
inc
cmp
popw
fild
dec
je
gs
test
or
mov
cmp
inc
scas
pop
inc
sbb
mov
mov
adc
not
pop
inc
ds
aad
xor
push
out
test
pop
or
enter
inc
aas
xor
lods
adc
mov
jmp
mov
outs
and
out
dec
push
jns
push
inc
xchg
sti
jmp
je
xchg
lds
in
dec
pop
das
mov
addr16
fistp
mov
pusha
in
push
dec
jp
adc
mov
add
sub
mov
rcr
jmp
adc
jg
loopne
mov
and
dec
out
fnclex
loop
xchg
aad
cmp
lahf
out
mov
or
mov
inc
xor
sahf
sti
or
sar
mov
mov
sub
test
sbb
push
in
ins
dec
(bad)
dec
ins
retf
add
out
lods
(bad)
addr16
js
mov
pop
sub
cwde
xor
sbb
lea
adc
cmps
xchg
inc
and
ins
inc
or
dec
ds
mov
fbld
mov
xchg
ret
imul
into
ficom
or
fisub
test
sbb
push
pop
shl
jno
sbb
xchg
iret
push
mov
dec
xor
or
daa
sahf
lods
pushf
jb
jns
cli
fidivr
nop
repz
sbb
mov
push
mov
(bad)
jno
and
xchg
and
icebp
or
hlt
mov
psrlq
dec
loopne
fld
je
push
jno
shl
xor
jo
scas
fs
icebp
jo
lahf
retf
jmp
xchg
mov
ds
xchg
scas
jl
outs
ret
xchg
sbb
jbe
inc
dec
or
mov
rep
(bad)
sbb
or
clc
cmps
ffreep
sbb
xchg
test
mov
adc
jnp
jle
lock
sub
pop
mov
pop
imul
pop
jb
sbb
fidivr
mov
xchg
add
push
jmp
stc
pop
inc
push
popa
test
cmp
jbe
ins
pop
adc
push
cmp
ror
or
rcr
mov
cmp
ja
and
xchg
adc
in
jmp
test
nop
dec
adc
mov
push
scas
out
fidivr
mov
push
mov
pop
cmp
fcomp
lds
jmp
pop
es
hlt
fimul
cld
test
rol
cmp
jecxz
aas
jo
sbb
dec
les
ret
nop
sti
stos
mov
repz
sbb
sbb
sub
dec
icebp
inc
xor
adc
repz
out
and
call
fdivr
loope
gs
(bad)
repz
pop
cs
enter
push
push
mov
movs
rcl
jecxz
stc
inc
ret
mov
xor
dec
popa
cmps
adc
push
mov
inc
push
xchg
pop
pusha
adc
sub
(bad)
jbe
cs
add
scas
dec
cmp
mov
mov
les
inc
inc
in
and
sbb
jle
sbb
call
or
add
dec
jp
fcmove
(bad)
cmps
imul
leave
push
les
or
cli
int3
std
scas
xlat
push
movs
xor
fbstp
jge
sbb
bound
xchg
push
cmp
ja
in
jmp
nop
mov
loopne
mov
dec
imul
cli
jne
int
lods
es
cdq
add
jmp
in
push
mov
adc
into
cmp
adc
mov
and
xor
and
dec
scas
xchg
sub
inc
mov
xchg
call
mov
push
lahf
cmp
mov
into
ins
cmp
add
push
imul
pop
retf
(bad)
fs
gs
pop
jle
leave
imul
lock
clc
icebp
mov
adc
jg
(bad)
push
les
retf
test
push
clc
mov
mov
enter
out
mov
pushf
cmp
ja
mov
fnstenv
or
in
xlat
shr
adc
aaa
outs
(bad)
aaa
ins
mov
or
pushf
mul
mov
sbb
or
sub
je
rol
pop
lods
movs
mov
iret
mov
or
pop
out
pushf
(bad)
push
or
cmp
adc
sub
mov
out
xor
cmp
popa
pop
mov
cs
fistp
adc
nop
(bad)
lahf
repnz
xchg
call
inc
lods
movs
(bad)
push
sub
(bad)
fbld
sub
and
or
jecxz
push
adc
pop
cwde
mov
outs
out
push
mov
es
in
jmp
mov
pop
shl
(bad)
(bad)
out
pop
mov
jmp
shl
in
sub
and
aam
lds
sahf
sbb
pop
adc
jmp
loop
imul
fistp
sbb
push
loope
jb
es
clc
cmp
sti
loop
stos
fidiv
push
ins
lods
mov
adc
(bad)
fwait
jns
ss
xor
sbb
mov
clc
xchg
push
dec
cwde
loope
pop
mov
not
pop
(bad)
xchg
jo
in
jl
jno
sahf
mov
jae
nop
inc
fadd
in
ds
sub
ret
sbb
dec
push
xabort
sub
inc
dec
mov
pushf
xchg
rcr
dec
cdq
aaa
mov
test
push
mov
mov
pop
lods
sbb
fwait
in
and
dec
mov
scas
lods
inc
fist
xor
test
push
out
int3
inc
dec
out
inc
inc
push
std
arpl
neg
mov
or
add
push
imul
mov
adc
and
aad
mov
mov
lock
adc
movnti
inc
add
fs
sub
bound
mov
outs
aas
jmp
mov
cmp
aam
and
add
in
pop
sub
mov
inc
popa
div
fmul
stos
scas
mov
enter
loop
mov
sub
xor
and
mov
pop
mov
or
mov
(bad)
jne
sub
lock
or
push
ror
ins
inc
fcom
xor
pop
mov
add
dec
push
xchg
loope
inc
jmp
mov
(bad)
sub
jge
imul
or
xor
add
sub
out
or
inc
stos
sar
sbb
add
cmps
mov
add
jbe
pop
in
aad
pop
retf
adc
xchg
loopne
mov
shl
cmp
frstor
shl
mov
mov
xchg
mov
push
pop
addr16
jp
dec
push
aam
outs
(bad)
out
dec
cmp
mov
jg
and
retf
or
div
arpl
pop
into
sti
xor
pop
stc
fist
not
test
push
stos
push
stc
xor
retf
mov
add
cmp
jg
jg
dec
or
(bad)
sar
mov
test
pop
dec
fld
mov
ret
pop
js
hlt
jbe
stc
pop
shr
ja
mov
mov
sub
add
push
jmp
pop
jnp
sar
js
jle
push
push
aaa
adc
scas
les
and
clc
sub
in
sar
jp
ror
scas
pop
imul
aaa
cmc
imul
nop
xchg
pop
fist
fstp
adc
sub
loop
sbb
dec
cmp
dec
cdq
cmps
aam
sbb
mul
pop
or
jmp
shl
into
adc
sbb
icebp
(bad)
xchg
jb
mov
jae
(bad)
cmps
jns
inc
cmps
ins
push
sub
sub
hlt
fs
hlt
aaa
jmp
loope
xlat
push
movs
std
or
mov
push
ins
rol
in
pop
je
cmp
cmp
inc
adc
xor
sub
or
mov
cmps
into
push
test
(bad)
sbb
fninit
inc
push
pop
xchg
mov
xor
push
xor
xor
cmp
or
mov
pop
and
pop
dec
xlat
sub
rcl
jl
mov
sub
sub
xchg
mov
es
and
xchg
push
adc
mov
jl
sbb
lahf
dec
and
jg
gs
ins
pop
int3
mov
dec
ret
(bad)
dec
xchg
ins
jmp
mov
inc
sub
std
jmp
xchg
out
push
in
into
in
mov
arpl
daa
push
int
and
outs
pop
pop
lods
xor
pop
out
mov
data16
xchg
shl
dec
push
xor
arpl
xchg
pop
retf
cli
ins
dec
outs
mov
sbb
pop
ror
or
xor
call
pop
xchg
mov
mov
pushf
repnz
or
mov
arpl
sub
inc
lods
std
mov
push
mov
add
jbe
push
movs
loop
sti
add
sbb
into
addr16
adc
sbb
iret
push
cmc
xlat
sti
fwait
clc
mov
push
pop
fimul
jecxz
cli
jge
es
pusha
or
iret
jbe
add
pop
pop
mov
fild
jns
arpl
(bad)
mov
cld
(bad)
adc
fdivr
sbb
rcr
je
enter
bound
mov
loop
sahf
(bad)
jmp
and
stc
nop
sub
push
pop
(bad)
xor
clc
outs
ss
test
mov
dec
xor
push
jmp
cmp
ds
fs
cs
and
cmps
xor
inc
movs
push
in
adc
test
jmp
sub
mov
ret
jle
leave
cld
cmps
out
jne
inc
pop
add
lea
mov
sub
push
push
push
pushf
push
dec
adc
(bad)
or
pop
ds
mov
sbb
jmp
jns
ret
mov
and
jmp
sbb
adc
mov
push
xchg
aam
xor
jg
add
xchg
pusha
jp
mov
or
adc
push
into
or
or
movs
jp
movs
mov
xor
gs
jns
push
xlat
push
leave
enter
jne
adc
cmp
pop
dec
fstp
loope
mov
mov
push
jecxz
pop
ret
gs
mov
inc
jmp
jo
out
outs
imul
mov
ins
mov
lds
push
and
sbb
retf
fiadd
hlt
adc
push
repz
and
or
cmp
test
sub
adc
cmp
(bad)
in
(bad)
xchg
cld
cmp
cwde
xor
jo
mov
mov
pop
push
call
mov
ret
and
clc
enter
adc
ret
jmp
fdivr
pop
addr16
or
imul
push
test
(bad)
push
vdivsd
jb
je
mov
push
mov
xor
fldenv
pop
cdq
or
dec
aam
xchg
dec
mov
in
aaa
in
push
dec
call
jo
js
mov
inc
outs
jae
pop
pushf
adc
test
ins
sub
mov
cmc
push
(bad)
addr16
sbb
and
xor
jp
inc
sbb
xchg
rcl
xchg
jle
sti
retf
dec
pushf
sbb
jmp
push
adc
jmp
fucomip
or
push
xor
aad
xor
ja
and
imul
loopne
xor
retf
sub
xor
add
stc
mov
out
popf
cmp
sub
arpl
(bad)
pop
aad
outs
leave
mov
xchg
int3
and
int
push
stos
jb
sbb
inc
in
sub
xchg
or
lods
cmp
pop
sub
jno
jg
adc
div
ins
je
mov
adc
and
mov
pop
(bad)
pop
push
stos
arpl
xlat
xor
adc
cwde
das
adc
ins
imul
fwait
and
cmp
push
sbb
fwait
lds
mov
leave
(bad)
xchg
inc
int3
shl
outs
dec
icebp
(bad)
daa
adc
sub
les
lods
cmp
inc
arpl
add
pushf
jl
iret
xchg
inc
cmp
xchg
test
adc
sar
sbb
nop
inc
xchg
pop
mov
sbb
gs
inc
cld
pop
or
arpl
inc
cdq
jge
jp
(bad)
je
loop
pushf
(bad)
pushf
jecxz
pop
sbb
movs
push
sub
fwait
jbe
and
stos
dec
gs
add
test
xchg
pushf
and
ds
adc
mov
repz
les
ins
jg
cmp
popa
jno
fwait
je
(bad)
jnp
jo
mov
pop
mov
jle
cs
loopne
mov
xchg
fmul
aam
ins
adc
retf
pop
lds
xchg
inc
rol
and
jle
push
xor
add
call
pop
adc
sub
les
les
imul
pushf
aad
mov
adc
push
inc
arpl
pusha
unpckhps
jnp
jb
mov
and
leave
sub
inc
scas
lahf
and
mov
mov
mov
sahf
cld
or
cmp
push
fadd
data16
xchg
popf
and
adc
icebp
adc
push
mov
sbb
mov
neg
mov
pop
push
shr
mov
adc
outs
cmp
fld
xor
out
in
fnstsw
ficom
or
cmp
cmp
int
xor
dec
and
out
pushf
sub
in
or
mov
jecxz
addr16
push
sub
mov
sub
daa
iret
push
push
aas
fmul
mov
popa
xor
push
ins
(bad)
dec
xchg
sti
call
shl
pop
sbb
dec
xor
je
mov
xchg
movs
mov
adc
pop
fs
mov
jno
xchg
cmc
repz
pop
js
fdiv
call
stos
or
daa
mov
jl
jecxz
add
cmps
iret
add
stc
popa
int
sub
sti
inc
outs
es
dec
in
arpl
das
and
cmp
jae
popa
(bad)
xchg
lds
cli
lock
mov
xchg
in
inc
add
mov
add
inc
mov
loopne
arpl
sbb
fwait
add
int
fst
dec
shl
movs
pusha
xor
inc
and
dec
xchg
jno
sbb
rcl
and
or
test
adc
cdq
call
in
push
adc
adc
pop
loope
mov
or
pop
sbb
jb
in
std
stc
xchg
pop
push
ja
inc
jecxz
sub
sar
movs
aas
dec
ss
fist
sbb
and
ja
lock
cmp
and
(bad)
iret
jo
lods
or
retw
enter
cmp
sbb
fst
dec
mov
hlt
cmp
sbb
add
rcr
aas
(bad)
mov
and
mov
or
ja
xchg
cmp
sub
sbb
pop
and
pusha
xor
jge
mov
mov
sar
aam
xor
in
aad
push
push
cmp
jae
and
repnz
add
lods
aaa
mov
jae
pop
(bad)
rcl
pop
out
cdq
sub
in
mov
sbb
cmps
ret
sti
jmp
jmp
mov
add
xor
mov
and
in
or
jp
mov
or
and
daa
scas
pop
gs
push
imul
add
pushf
cmp
mov
inc
sbb
pop
pop
mov
ds
add
loop
sbb
dec
hlt
movs
fs
jg
(bad)
mov
mov
add
mov
xor
jge
pop
lods
or
push
into
dec
sub
cli
in
adc
loope
stos
call
xor
in
addr16
(bad)
(bad)
sub
ja
adc
jbe
jne
(bad)
jp
popa
jae
cmp
mov
mov
jae
ss
int3
mov
test
aas
hlt
pop
aaa
ror
xchg
ret
ror
jle
mov
nop
or
sbb
ja
test
dec
sub
gs
sar
vphaddwd
push
ins
and
std
mov
scas
adc
jno
cmps
pushw
outs
arpl
movs
aas
inc
es
int3
scas
xor
es
dec
jge
jae
loopne
dec
(bad)
not
push
mov
mov
xchg
gs
jae
inc
xchg
imul
cmp
inc
cmc
and
std
popf
pop
xor
stos
cmp
out
xchg
aam
inc
mov
popw
push
xor
loope
neg
jl
sbb
xchg
pop
xor
dec
leave
jb
rcl
in
pop
retf
ds
fwait
dec
lods
push
sub
xchg
push
cmps
jle
pushf
xchg
cmp
fs
scas
outs
push
xchg
mov
lods
inc
(bad)
sub
in
jnp
push
mov
adc
cmp
inc
push
leave
jg
imul
xchg
push
jecxz
adc
ins
arpl
rcl
sti
lods
cmp
xlat
out
inc
push
aas
jns
fsub
aas
outs
std
test
cmps
fnstsw
jmp
jl
in
imul
pcmpgtd
dec
xor
push
mov
movs
arpl
arpl
xchg
dec
in
fwait
cmp
lahf
in
jp
cmp
out
add
dec
jmp
inc
or
cmp
je
in
retf
jbe
cmp
idiv
arpl
lock
loopne
sahf
xchg
pop
stc
cmps
leave
in
cmp
dec
dec
jbe
add
aad
xchg
lahf
lds
mov
(bad)
sub
das
(bad)
lock
out
or
or
mov
rol
xchg
sub
ins
mov
mov
push
or
dec
mov
out
add
(bad)
stos
retf
pushf
cmp
lods
fdivr
add
cdq
push
mov
ja
mov
jb
imul
xor
pop
mov
mov
push
or
jmp
jmp
mov
mov
dec
cmps
sub
jge
sub
add
inc
pop
xlat
int
into
xchg
mov
mov
test
lahf
xchg
add
jl
mov
sbb
cmp
out
gs
pop
xchg
add
scas
(bad)
ds
and
stc
push
sub
or
cld
jge
xchg
hlt
nop
inc
call
sbb
inc
es
push
inc
inc
sbb
xchg
repnz
dec
jns
or
mov
or
inc
mov
in
cmp
push
cmp
lods
push
popa
mov
pop
aas
inc
xor
and
sbb
add
push
fcmovb
push
jge
shl
and
push
retf
push
call
xor
add
retf
hlt
or
inc
inc
test
repnz
jae
imul
mov
js
cmp
iret
and
enter
clc
fisttp
push
sbb
movs
ficomp
mov
xor
xchg
dec
scas
lea
and
ja
push
xlat
dec
or
xor
ja
cmp
pop
ins
and
enter
movs
fwait
and
push
js
push
imul
dec
pop
jmp
jecxz
mov
or
pop
push
scas
fnstsw
sub
in
xchg
mov
rol
and
sar
sti
cmp
dec
pop
sbb
cli
push
(bad)
xlat
sbb
inc
movs
adc
fdivr
inc
mov
movs
int3
pop
inc
xor
rcl
dec
mov
setl
outs
push
and
(bad)
jno
call
rcr
inc
sbb
and
push
enter
mov
mov
inc
sahf
js
call
aad
xor
dec
mov
sbb
mov
xchg
cmp
or
stos
cli
adc
mov
addr16
movs
ins
push
xlat
aaa
out
dec
jl
fist
movs
fsubr
(bad)
lock
out
pop
adc
ret
dec
dec
dec
xchg
pop
cmp
out
ss
jb
xchg
(bad)
in
jge
mov
adc
loop
stos
jle
jge
inc
aam
fdivp
mov
sbb
leave
dec
shl
inc
mov
mov
(bad)
repz
sub
and
pop
cld
neg
dec
cmp
pushf
cmp
rcl
bound
push
sbb
ficom
cdq
xchg
lods
test
ins
add
test
clc
jle
cmps
mov
xchg
arpl
in
jmp
fs
and
jbe
or
push
in
fwait
ds
ret
lods
loop
ret
push
das
xor
je
out
fwait
aaa
in
stc
sti
jp
movsx
sahf
stos
add
xor
cmc
pop
mov
enter
cmc
inc
inc
fiadd
test
xchg
repnz
mov
addr16
mov
retf
push
iret
xchg
pop
add
imul
sub
or
mov
ja
imul
xor
call
movs
mov
sub
and
mov
add
jnp
je
sbb
inc
ret
inc
scas
jmp
ret
test
addr16
jp
mov
push
cmc
push
mov
icebp
fist
movs
cmp
mov
push
leave
movs
ins
push
lahf
mov
and
dec
sbb
add
push
es
nop
inc
repnz
pop
ret
clc
(bad)
push
cmp
cmp
mov
xchg
fcom
imul
xor
sbb
pop
out
or
(bad)
ins
jl
fstp
push
test
jbe
mov
fcomp
pusha
sti
push
sub
out
push
sbb
or
mov
mov
fmul
mov
mov
mov
loop
ins
jne
mov
addr16
adc
test
cwde
sbb
jae
mov
sbb
mov
and
ja
loop
adc
mov
add
xchg
in
je
add
lock
cdq
inc
cmps
adc
cmc
(bad)
fld
add
mov
leave
mov
sub
xchg
xchg
mov
cmp
retf
add
adc
loopne
mov
cmc
add
push
loope
cdq
mov
jmp
dec
call
add
ins
fwait
outs
xor
and
ret
xchg
add
adc
in
add
popa
dec
or
(bad)
and
mov
(bad)
fwait
mov
lock
iret
(bad)
hlt
cld
into
push
add
aaa
mov
mov
shl
xor
shr
das
movs
jnp
ret
add
jne
mov
inc
in
jp
sbb
dec
xchg
xor
and
(bad)
mov
les
sbb
pop
dec
ror
cmp
pop
sbb
cmps
jecxz
jbe
mov
fisub
out
leave
test
xchg
mov
add
ja
mov
jbe
enter
fnstsw
dec
push
adc
into
jp
sbb
mov
cmc
movs
cld
cmp
xor
or
jl
and
ret
xchg
mov
lock
scas
cmp
xor
ror
inc
cs
pop
jge
jmp
xchg
mov
mov
and
cmp
jmp
imul
in
stos
enter
dec
cwde
fild
popa
cmp
js
int
nop
push
fs
dec
xchg
enter
jmp
mov
mov
mov
out
pop
push
adc
bound
fnstcw
mov
aad
dec
jne
cmp
popf
push
lock
aam
xchg
test
sbb
xchg
xlat
push
stc
shl
inc
sbb
sbb
dec
pusha
mov
jecxz
push
adc
fbstp
mov
cmps
js
jge
jecxz
jmp
cmp
xchg
xchg
dec
icebp
rcr
inc
dec
out
sahf
cmp
stos
cmp
das
test
dec
inc
test
mov
enter
push
and
sub
inc
push
push
bnd
mov
push
cmp
(bad)
jmp
ror
stos
out
cmc
adc
inc
(bad)
push
or
bound
push
stos
les
(bad)
stos
rol
icebp
pushf
stos
pusha
inc
mov
dec
sub
adc
and
inc
(bad)
xchg
and
rcl
xchg
mov
dec
sbb
and
mov
sub
lahf
and
loop
setbe
adc
push
call
ror
inc
xchg
les
test
out
iret
adc
mov
(bad)
mov
push
and
in
out
and
push
cld
cmps
lahf
sub
push
out
or
rcl
idiv
cmp
lds
add
push
rcl
iret
adc
js
(bad)
adc
ja
(bad)
pop
xchg
push
fwait
inc
inc
lahf
rcr
test
aaa
jo
or
iret
add
loopne
push
inc
(bad)
lods
sub
mov
jb
jns
fisubr
adc
jmp
sti
jbe
popa
std
std
imul
outs
and
cwde
leave
fs
push
jnp
nop
inc
xchg
retf
mov
pop
jp
cmp
sbb
mov
push
popf
lds
inc
mov
movs
pop
mov
push
mov
add
add
clc
pusha
out
fdiv
sub
dec
jns
push
cs
dec
icebp
(bad)
iret
or
stos
inc
cwde
das
jbe
mov
ficomp
sub
mov
nop
vmread
xchg
mov
mov
out
stos
xor
cmp
es
or
das
in
inc
(bad)
call
lds
(bad)
sahf
fwait
xor
mov
scas
cld
stc
aaa
mov
stos
xor
cmp
adc
outs
std
sbb
gs
pop
jns
dec
ss
xchg
mov
pop
stos
mov
and
jg
xor
es
(bad)
clc
psllw
cli
cmp
fisubr
hlt
sub
fcom
lahf
daa
inc
scas
es
cmp
lea
xchg
sub
push
les
(bad)
mov
fst
aaa
sbb
mov
js
push
pop
jecxz
cmps
jo
mov
ins
mov
or
mov
fmul
cmp
mov
ds
(bad)
sub
jmp
test
ss
or
js
cmp
cdq
and
dec
fsubr
xor
out
push
ficom
sbb
fist
sahf
push
das
push
mov
movs
pop
cmp
das
lea
cmp
nop
push
mov
push
mov
ins
aam
cmp
aaa
into
push
and
push
je
pop
push
hlt
ss
push
jecxz
cs
sub
sbb
adc
out
add
adc
xor
imul
xchg
(bad)
std
mov
cdq
repnz
stc
jne
retf
loopne
add
rcr
or
xor
test
mov
sub
sbb
xor
dec
push
or
inc
stos
cmp
mul
(bad)
iret
int
or
outs
mov
(bad)
cld
js
fldenv
hlt
xor
dec
call
jl
add
adc
xchg
cld
cwde
and
clc
int
inc
inc
ret
(bad)
imul
pop
lea
dec
mov
or
and
cmp
nop
sub
pop
sbb
cmps
outs
sbb
dec
cmp
adc
inc
stc
xchg
push
jnp
pop
out
adc
jae
jl
pop
imul
xchg
cmp
pop
lods
inc
fdivr
cmp
fwait
lock
inc
mov
fs
sub
and
or
push
mov
mov
ja
or
push
pop
sahf
mov
pop
and
jae
je
mov
xchg
sub
cmp
test
jle
xor
movs
es
test
cli
adc
adc
pusha
mov
xor
add
jecxz
mov
call
xchg
or
adc
sbb
or
sti
mov
push
pop
jae
aam
dec
retf
adc
xchg
inc
(bad)
mov
dec
enter
sbb
aas
push
add
or
fnsave
inc
hlt
adc
pop
xchg
mov
ins
inc
xor
addr16
pop
adc
cmps
and
or
push
jns
dec
jbe
fs
add
xor
mov
lock
mov
mov
jns
out
imul
adc
xchg
pop
pop
jmp
mov
push
idiv
jno
retf
sbb
mov
xor
aas
xor
sti
dec
sti
cdq
adc
sub
sub
jmp
cmp
inc
je
dec
xor
out
sub
mov
mov
mov
std
daa
pop
pop
ror
into
data16
push
fiadd
test
test
loopne
fstp
jp
xor
fcomp
popa
(bad)
jmp
clc
dec
lea
aas
retf
or
test
loope
cmp
dec
test
sbb
mov
dec
inc
and
ins
and
and
fisubr
ror
cwde
pop
or
or
inc
test
mov
adc
jnp
mov
push
mov
aad
push
test
and
out
pop
push
xor
adc
add
test
adc
jnp
add
inc
push
inc
(bad)
and
inc
fnstenv
jmp
push
das
adc
sub
test
xlat
inc
loop
xor
xor
in
lds
popf
push
in
dec
push
pop
mov
add
sub
xor
cmp
jnp
popf
inc
ja
loopne
outs
add
mov
push
test
scas
cmp
sti
and
sub
xor
mov
adc
and
rcl
cmps
test
(bad)
mov
mov
lds
pop
xchg
es
call
xchg
nop
fwait
xor
out
shl
sbb
shr
(bad)
cs
aam
repz
nop
push
mov
xchg
lods
xchg
pop
push
loop
xor
add
push
add
push
or
nop
xor
loop
cmp
xchg
push
add
std
add
jmp
mov
jecxz
push
inc
leave
inc
pushf
sbb
ins
pop
xchg
mov
inc
ficomp
ins
and
(bad)
stc
add
sbb
shl
sti
cmc
mov
(bad)
es
loopne
dec
xor
shl
ficomp
cli
inc
out
pusha
xchg
arpl
cmp
in
adc
test
and
pop
fidiv
movs
pop
mov
lods
jmp
stc
or
xor
sbb
call
jg
stc
xchg
and
sub
and
push
stos
mov
pop
sti
or
jge
cmp
inc
and
adc
iret
inc
popf
sbb
push
into
xor
mov
push
shl
sbb
mov
cmp
mov
push
xor
sub
add
int
mov
stc
nop
jg
sbb
pop
mov
rcl
sub
fiadd
jg
add
out
leave
xchg
jg
imul
dec
xor
sbb
fsubr
cwde
inc
hlt
and
cmps
loop
inc
adc
mov
add
pop
push
mov
ret
push
es
daa
jne
push
(bad)
dec
add
dec
cmp
mov
mov
xor
ret
or
jl
lahf
cmc
push
mov
sub
pushf
xchg
outs
mov
test
cs
sar
(bad)
fiadd
mov
mov
ins
pop
inc
push
or
loope
inc
xor
repz
pop
or
fstp
push
std
push
sub
xor
popf
sbb
lock
pop
fadd
cmp
or
jne
or
adc
das
dec
test
adc
lods
mul
int
fnstsw
lock
(bad)
ret
pop
dec
movs
mov
in
adc
dec
in
adc
out
pop
dec
cdq
inc
loope
lea
dec
add
add
out
lea
cwde
int3
test
addr16
fldenv
push
shr
addr16
inc
cwde
cmp
xor
or
cmp
aad
push
retf
xchg
dec
js
test
mov
mov
pop
or
mov
or
sub
leave
int3
test
mov
xchg
frstor
inc
inc
(bad)
xchg
fcomp
jl
icebp
outs
cmp
jp
dec
(bad)
or
sbb
or
aad
adc
or
mov
xchg
xor
ret
cmp
pop
pop
mov
mov
retf
mov
sub
das
scas
ins
call
or
mov
or
mov
fs
mov
mov
aas
mov
or
push
pop
ret
pop
xor
xchg
dec
mov
arpl
icebp
cld
cmp
(bad)
inc
pop
mov
jne
add
inc
pop
mov
sbb
fbstp
mov
xor
add
scas
mov
scas
in
movs
(bad)
sub
jbe
xchg
dec
fnsetpm(287
add
out
pop
int3
xchg
outs
jno
lock
jbe
pop
jge
icebp
cmps
mov
xchg
dec
icebp
pop
cs
jg
dec
pop
cdq
cmc
pop
outs
rcr
pop
(bad)
shr
add
jp
test
js
jnp
mov
mov
and
jns
jmp
push
lods
lahf
xchg
mov
aam
mov
adc
mov
jnp
jmp
(bad)
jmp
sub
pushf
inc
sub
mov
mov
or
jp
push
jns
aad
scas
sti
stos
popa
or
jmp
mov
sbb
jb
add
cmps
pop
(bad)
mov
xchg
mov
enter
aaa
lods
fidivr
stos
hlt
push
imul
jmp
adc
inc
push
sub
sahf
bnd
pusha
dec
and
sbb
mov
or
mov
and
out
mov
cmc
push
push
xchg
xlat
js
or
jmp
pop
cmp
(bad)
or
imul
jne
fcmovu
fnstcw
shl
and
add
jnp
popf
cli
jno
jae
fcmovnbe
cld
jne
push
cmp
fwait
rcr
jmp
ror
dec
push
scas
mov
sub
enter
ror
add
push
in
ret
je
imul
test
cmovnp
cmp
jle
shr
movs
add
out
sar
ds
rol
out
inc
pusha
jecxz
pop
dec
jo
xchg
cmps
mov
jge
dec
inc
inc
push
or
inc
enter
pop
aas
cmp
cmp
xchg
mov
or
push
sbb
mov
mov
(bad)
mov
mov
push
and
jnp
scas
jp
mov
jne
push
pop
or
(bad)
jg
lea
adc
add
add
ds
and
daa
inc
imul
std
and
sbb
aas
sub
test
scas
mov
cmp
mov
(bad)
mov
pop
aaa
sub
test
fsubr
add
and
or
and
and
pop
std
and
pushf
jno
xchg
enter
jp
mov
arpl
sahf
jp
fsubrp
lds
inc
lds
out
je
jo
movs
sbb
pop
or
xchg
mov
pop
add
push
and
pusha
mov
dec
or
bound
shl
push
stos
add
shl
repnz
stc
inc
sbb
pop
pop
mov
and
jae
in
mov
test
rcl
push
mov
rol
bound
neg
inc
(bad)
push
icebp
shr
loop
mov
sub
dec
adc
jmp
jae
add
imul
scas
and
ror
fdiv
out
adc
enter
cmp
mov
addr16
dec
cmps
sub
push
sar
pop
add
add
xchg
call
sbb
xor
xchg
mov
fs
inc
pop
push
cmp
adc
add
jb
dec
sub
adc
rcl
inc
mov
dec
dec
xchg
mov
and
bound
aad
push
jmp
std
and
test
mov
inc
in
out
dec
sbb
sahf
mov
adc
call
sbb
push
pop
push
adc
stos
and
hlt
bound
add
mov
pop
adc
mov
cmp
push
or
push
addr16
daa
aas
(bad)
loop
lds
mov
mov
fnstenv
and
xchg
lea
jb
cdq
mov
fldenv
cmp
rol
adc
in
or
sbb
inc
jl
push
xor
push
xchg
mov
pop
pop
sbb
and
lahf
shrd
inc
(bad)
fnstsw
cmp
sbb
popa
jbe
cmps
ret
dec
inc
loope
pop
and
bound
push
cmp
or
cld
scas
xor
mov
call
popa
inc
aad
inc
fnsave
push
ret
popf
push
dec
lods
or
mov
scas
cmp
jmp
dec
dec
cld
stc
leave
add
out
mov
add
(bad)
mov
pushf
sub
adc
adc
or
ror
xchg
int3
lahf
in
icebp
jge
(bad)
test
pop
ret
imul
(bad)
or
(bad)
mov
inc
fsubr
popf
or
(bad)
inc
test
stc
mov
push
arpl
mov
sbb
cmp
inc
cmp
loope
push
inc
adc
sahf
pop
fistp
cmps
jo
call
lods
ss
movs
dec
mov
test
xchg
rcr
aad
jne
out
arpl
mov
aam
iret
or
add
sbb
cmp
hlt
mov
push
clc
fistp
sar
out
add
lahf
jne
or
mov
dec
mov
inc
jp
(bad)
stos
sub
jg
add
faddp
movs
mov
mov
push
imul
inc
test
jo
imul
or
adc
cmp
push
jge
xor
push
jl
loope
(bad)
pop
cmp
inc
sub
vmptrst
loope
xlat
test
call
aad
aaa
jnp
out
jae
sub
push
xlat
push
mov
test
sbb
test
add
rol
mov
les
mov
popa
push
jno
lock
dec
push
mov
push
or
rcl
mov
inc
bound
lods
sub
dec
mov
pop
cmc
pop
or
sbb
add
cmp
out
or
sub
dec
and
ficom
test
pop
out
push
fadd
or
aaa
xor
sub
adc
lahf
les
and
push
mov
and
dec
and
jmp
(bad)
sbb
retf
in
mov
push
or
xor
rcl
mov
sbb
cli
aam
add
xchg
push
test
and
cmp
mov
pop
jae
stos
xchg
pop
cmc
arpl
xor
push
xlat
mov
adc
popf
inc
(bad)
sbb
cmp
dec
xor
jmp
mov
mov
jmp
cmp
mov
inc
pop
and
gs
lock
sub
lods
cld
mov
inc
enter
add
bound
push
mov
and
loope
inc
cdq
fs
aas
cmp
inc
xchg
inc
push
push
mov
sahf
xchg
add
rol
test
out
or
icebp
frstor
rol
imul
test
push
sub
dec
mov
repz
(bad)
lds
push
je
mov
stc
dec
mov
push
mov
or
mov
into
hlt
lods
add
test
es
(bad)
fstp
pop
outs
adc
adc
push
scas
pop
mov
addr16
sbb
and
xchg
ror
arpl
imul
xchg
pushf
cmp
sahf
mov
lahf
stos
cwde
loop
push
cdq
popf
repnz
pusha
cmp
jno
fst
cwde
cmp
fadd
inc
ja
popa
and
or
xchg
jo
fs
or
test
push
inc
cld
dec
fstp
sub
aas
out
dec
sbb
sub
inc
jmp
xor
adc
mov
movs
js
out
pop
jo
mov
iret
ret
scas
add
add
(bad)
in
pusha
in
gs
pop
mov
retf
and
mov
(bad)
push
retf
cmps
and
nop
sub
xchg
xchg
jne
int
and
inc
jl
sbb
lock
scas
add
inc
mov
jbe
or
jmp
lock
cmp
jbe
inc
push
aaa
xor
xchg
and
cmps
fdivr
mov
jg
mov
arpl
not
jecxz
pushf
jmp
loopne
xchg
sahf
ds
jg
and
lock
popa
cmp
mov
jno
shl
nop
pushf
sub
pop
lds
movs
(bad)
cmc
inc
pop
adc
xor
std
add
aas
ret
sbb
ud0
cmp
scas
pusha
jnp
scas
dec
or
adc
inc
xchg
push
adc
call
sub
or
lds
adc
mov
push
nop
aad
(bad)
pop
(bad)
pop
dec
jne
fcom
test
jnp
(bad)
outs
and
mov
fwait
cmp
push
push
inc
or
cmp
inc
call
xor
push
push
cmps
push
fisttp
push
cmp
jae
je
mov
cmp
adc
add
das
fdivr
inc
in
mov
(bad)
adc
addr16
iret
stos
rcl
stc
jl
cmps
retf
or
cld
adc
icebp
jo
popa
(bad)
sti
adc
mov
dec
mov
jp
mov
xor
mov
adc
add
sahf
cmp
ret
das
jno
jmp
pop
cld
aas
dec
and
icebp
ja
or
xor
cmp
(bad)
xchg
or
cmp
mov
aad
imul
in
loope
pop
repz
add
shr
outs
hlt
add
out
adc
(bad)
les
fsub
lea
test
mov
fldenv
cmp
leave
sti
jae
mov
cs
repz
sbb
rcl
pop
push
in
stos
cmp
mov
movs
mov
ret
dec
push
xchg
mov
imul
mov
mov
mov
outs
fsubr
jno
loop
sub
cmp
in
cs
xor
xchg
gs
xor
xor
stos
dec
push
push
push
push
or
lds
sub
mov
add
inc
daa
mov
data16
cwde
jno
ret
das
jp
(bad)
cmp
or
pop
pop
lock
and
test
jg
aam
retf
(bad)
loope
in
mov
fist
jo
push
inc
sbb
loop
cdq
fidivr
hlt
inc
dec
mov
les
cmp
inc
mov
mov
gs
xlat
iret
fnstcw
xor
pusha
cmc
pop
pop
mov
jg
sbb
scas
fs
dec
sub
les
sbb
push
test
push
adc
je
rol
adc
adc
adc
push
stos
cwde
std
push
jns
cmc
mov
hlt
outs
mov
dec
gs
xchg
dec
(bad)
loopne
sbb
aad
xchg
in
addr16
xchg
cli
in
(bad)
fadd
mov
in
lahf
push
xchg
in
push
inc
xchg
adc
mov
dec
mov
xchg
push
in
test
pusha
push
(bad)
int
pop
lock
jb
fsubr
cmps
shl
or
mov
or
js
ret
shl
cld
mov
dec
mov
repz
xchg
ins
call
mov
movs
jmp
mov
jg
mov
repz
aad
pushf
mov
dec
or
adc
cmp
(bad)
xchg
(bad)
and
aaa
jne
push
mov
jno
dec
stos
mov
push
pop
inc
xchg
cwde
lods
sbb
popa
or
repz
mov
into
xchg
sub
pop
sbb
inc
mov
jle
and
mov
retf
mov
mov
fs
jno
and
xor
dec
pop
xchg
cmp
sub
mov
std
and
mov
or
sbb
jecxz
jecxz
rep
fcomi
or
ss
add
jae
push
mov
sub
inc
xor
xchg
mov
(bad)
sbb
and
imul
adc
lds
(bad)
xchg
shr
movs
dec
mov
fs
pop
retf
xchg
ja
mov
out
adc
adc
jecxz
pop
push
(bad)
sti
push
jmp
mov
sbb
add
ds
arpl
fs
mov
out
mov
es
or
lods
add
jg
xor
mov
xchg
adc
push
jmp
imul
int3
js
jns
sbb
push
repz
scas
int3
gs
mov
ins
dec
jns
movs
pop
add
push
mov
add
out
sub
imul
jge
dec
stc
daa
into
add
stos
sub
pusha
xchg
pop
dec
cmps
xchg
inc
test
daa
cwde
and
pop
loopne
ins
loope
cli
xchg
(bad)
bound
cmp
add
inc
dec
popf
fsubr
in
int
mov
add
dec
sbb
pop
bound
(bad)
ror
or
jge
arpl
popf
cli
repnz
and
xchg
sbb
int3
fs
or
add
jae
mov
fisub
xor
cmps
les
jnp
test
mov
out
cmp
push
leave
ins
xor
xchg
ret
jmp
cmp
xchg
icebp
in
(bad)
and
pop
call
sbb
push
xchg
mov
cmps
and
push
sub
or
sub
push
or
lds
adc
or
les
mov
or
mov
shl
(bad)
cmp
pusha
push
mov
push
mov
dec
arpl
(bad)
nop
outs
xchg
retf
xor
mov
std
push
call
lods
add
ret
adc
lods
(bad)
les
call
dec
inc
or
rol
jmp
jecxz
imul
cwde
push
jge
fistp
add
out
xor
sar
xor
mov
mov
in
xor
sbb
bound
cmp
loope
movs
pop
rol
mov
xchg
or
cmp
push
sub
mov
mov
test
bound
inc
(bad)
ja
sub
bound
mov
mov
push
gs
loopne
(bad)
and
bound
call
lahf
bswap
cmp
sub
loop
ins
iret
xchg
into
inc
dec
out
ficom
movs
test
add
jl
retf
popf
fmul
in
bound
aas
xor
dec
push
add
cmp
mov
loopne
neg
xor
add
mov
ins
xchg
mov
sbb
rcr
inc
sti
shl
pop
sub
imul
mov
or
push
mov
xor
ss
mov
or
xchg
repz
or
iret
xor
sti
mov
nop
adc
jo
pop
adc
jmp
push
out
cmp
inc
lock
test
xor
rcr
mov
sub
cld
movs
pop
xchg
jmp
js
and
rcr
(bad)
sub
sub
inc
(bad)
js
mov
mov
adc
idiv
sub
rol
(bad)
xchg
push
inc
cmps
aam
sub
test
nop
fisttp
rdrand
mov
pop
(bad)
jae
inc
fadd
or
xor
fs
xchg
loopne
mov
mov
add
xchg
dec
bound
shl
pop
mov
dec
sub
jp
std
(bad)
xchg
dec
(bad)
call
jp
cmp
push
jb
loope
pop
pop
(bad)
and
(bad)
mov
xor
add
fwait
sbb
fcom
in
xor
jb
popa
mov
je
mov
ret
xor
sahf
iret
mov
loope
repz
popa
jbe
or
retf
retf
xor
inc
mov
aad
test
jo
mov
ins
pop
pop
add
sub
out
hlt
mov
dec
and
fiadd
cs
stc
or
mov
push
mov
push
and
stos
xchg
pusha
cli
mov
jno
pop
fadd
mov
shl
jnp
repz
xchg
out
add
inc
sub
cmp
pusha
or
test
popa
push
test
lods
inc
daa
mov
movs
inc
movs
adc
ret
scas
pop
or
scas
jecxz
(bad)
fdivr
fcomp
mov
cmp
loopne
std
pop
sbb
mov
arpl
inc
scas
xor
ret
mov
gs
(bad)
leave
jno
mov
jge
xor
sbb
jmp
dec
pop
(bad)
scas
(bad)
outs
(bad)
jbe
test
addr16
inc
adc
or
es
stos
add
push
dec
push
or
mov
mov
retf
enter
dec
es
jecxz
pop
and
add
jno
mov
or
into
add
adc
jo
emms
inc
(bad)
and
inc
mov
(bad)
push
popf
imul
fistp
xlat
jmp
lods
xchg
adc
pop
shr
or
pop
or
adc
mov
fwait
cld
in
pusha
ret
add
(bad)
add
fs
sti
jb
scas
cmp
jo
pop
hlt
(bad)
jmp
xchg
fist
inc
aas
mov
mov
or
cmps
call
lods
(bad)
sbb
fldpi
(bad)
cmp
les
shl
data16
ins
adc
(bad)
mov
or
sub
mov
push
fisubr
sub
dec
cli
in
inc
cs
repz
lds
fdivr
int3
arpl
fwait
inc
pop
mov
cdq
jno
aad
or
aam
(bad)
or
ret
(bad)
in
nop
seta
jb
outs
lahf
mov
xchg
mov
cmp
je
aaa
scas
pop
popa
cli
xor
and
pusha
add
enter
sbb
scas
fisubr
ins
outs
gs
lods
int
adc
mov
or
xor
cmp
(bad)
push
lahf
pop
and
mov
jmp
mov
pop
xchg
pop
data16
dec
mov
jbe
and
jmp
pop
pop
sbb
pop
or
xor
push
fist
loopne
arpl
jl
test
scas
cs
add
mov
fmulp
fs
fbld
xor
aaa
arpl
in
cdq
lods
cmp
je
mov
xchg
sbb
adc
add
xchg
out
and
lds
enter
scas
rcr
addr16
and
test
(bad)
xchg
sbb
and
lds
and
pop
push
or
int3
cmp
ror
mov
outs
mov
ds
push
xchg
and
por
jnp
pop
clc
add
popa
fadd
jbe
pop
mov
and
push
mov
ds
mov
neg
int
ss
sub
ss
and
enter
push
les
xlat
pop
xor
repnz
popf
idiv
shl
pop
mov
ins
add
inc
in
dec
lods
inc
fmul
cmp
rcl
aam
cmps
fdivr
ficom
add
add
adc
cmc
cmp
(bad)
mov
xor
mov
je
in
jae
mov
mov
jne
mov
pop
imul
cmp
sub
or
pop
xchg
push
mov
sub
stc
push
cmp
scas
aas
jg
outs
mov
sub
cmp
in
popf
xchg
xchg
push
retf
(bad)
gs
push
pop
or
shl
and
stc
aas
scas
stc
and
jne
iret
scas
ds
fstp
das
(bad)
xlat
movups
fdivp
int3
(bad)
xchg
cmp
dec
(bad)
dec
(bad)
mov
mov
les
pop
cmp
pop
and
pusha
pop
pop
jbe
jae
jecxz
xchg
cmps
js
(bad)
out
enter
test
fwait
lods
push
int
cmps
cwde
sbb
test
ds
cmp
xchg
jg
cwde
mov
and
js
adc
(bad)
cmp
test
cld
lea
sti
int3
cmp
ror
dec
xor
repz
push
jl
ror
pop
mov
pop
fs
int3
popa
add
cmp
pop
mov
sbb
retf
pmaddwd
xchg
mov
repz
mov
mov
xchg
push
data16
iret
xchg
add
and
test
ins
out
dec
sub
stc
ins
adc
inc
xchg
xor
imul
lods
shl
xor
ficomp
jge
cmp
jl
sahf
xor
xchg
cwde
sahf
mov
pop
mov
(bad)
test
mov
pop
push
inc
xchg
dec
mov
test
lahf
shr
std
jo
push
sbb
inc
xor
lds
cmp
pop
sti
adc
add
(bad)
jo
mov
es
pop
packssdw
xor
(bad)
fs
dec
or
mov
loope
fs
sbb
clc
dec
ins
ss
mov
std
out
mov
add
mov
dec
mov
retf
push
call
lds
pop
mov
je
cld
mov
mov
call
mov
mov
push
bound
cs
fild
xchg
arpl
dec
jmp
loopne
lock
retf
sub
(bad)
andnps
xchg
mov
icebp
mov
mov
sub
add
mov
xchg
pop
aaa
sti
sbb
fcomp
mov
mov
inc
mul
sub
mov
cmp
popa
call
pusha
xchg
xlat
es
aas
fist
xchg
pusha
test
inc
sub
inc
push
repnz
push
jae
push
imul
xchg
adc
xchg
pop
mov
(bad)
call
ss
adc
adc
pop
jo
pop
test
sbb
mov
les
mov
mov
loopne
les
adc
push
mov
xchg
call
mov
sbb
jle
push
mov
pop
xor
mov
xchg
daa
sub
jnp
mov
scas
pusha
xchg
push
int3
aaa
pop
mov
cmps
bound
push
jae
xlat
pusha
or
and
lea
ficomp
mov
xor
les
jo
(bad)
fnstenv
mov
(bad)
leave
mov
lods
pusha
icebp
ja
scas
jl
inc
push
lock
jle
jne
mov
pop
in
xchg
sub
xchg
sub
push
jne
mov
jns
adc
push
dec
dec
mov
dec
sub
push
or
ins
xchg
jnp
jae
adc
xor
and
pop
lods
aam
push
inc
retf
inc
je
adc
push
sub
xor
sbb
rcl
pop
loope
jmp
dec
sub
mov
loop
ins
es
fwait
mov
shl
fcomp
cmp
xchg
mov
mov
in
aaa
add
inc
jbe
cmps
sti
cmp
cmp
call
mov
adc
mov
jbe
leave
xchg
and
pop
jp
adc
fwait
dec
addr16
enter
cmp
xchg
cmp
lods
inc
pop
popa
mov
mov
js
test
(bad)
dec
push
cdq
sub
mov
add
mov
in
js
fwait
xchg
(bad)
sbb
jno
adc
fiadd
sahf
mov
bnd
cmp
inc
mov
outs
leave
fimul
shl
and
lods
daa
mov
ds
(bad)
mov
mov
stos
xchg
cli
xor
ins
mov
sahf
in
or
hlt
mov
hlt
shl
lods
fsubr
fimul
addr16
xchg
cdq
imul
ins
cmp
rcl
sub
arpl
mul
mov
sbb
fcom
pop
mov
xchg
sub
sbb
fcom
fwait
jns
ins
pop
mov
inc
xor
(bad)
mov
lods
xor
cli
in
pop
mov
aam
xor
cld
je
pop
dec
sbb
sub
scas
xchg
sbb
les
sub
sbb
fmulp
mov
add
or
sbb
and
jne
and
leave
lods
stos
pop
ins
mov
xchg
fwait
test
mov
shr
nop
dec
pop
cdq
iret
ret
arpl
sub
iret
in
lods
xor
inc
lea
aaa
mov
and
xor
jo
aaa
dec
mov
imul
js
and
push
ret
call
xchg
xchg
lods
mov
pop
sbb
cwde
fsubr
sub
lock
retf
out
and
shr
cmp
jae
call
jecxz
cmps
sar
dec
xor
mov
lods
repnz
push
fiadd
fmul
dec
into
cdq
hlt
mov
cmp
scas
jle
adc
test
cmps
inc
loop
and
pop
sub
pop
mov
inc
push
dec
jns
mov
jns
into
jl
mov
xlat
into
sbb
ret
and
pushf
loopne
and
fwait
fs
and
push
adc
sti
and
jnp
inc
jg
pop
fild
dec
loop
fst
lea
ret
pop
and
or
pusha
shl
in
lods
pop
cmp
mov
xchg
in
fdivr
movs
jnp
sbb
into
mov
std
xor
dec
cmps
cs
or
fstp
sbb
xchg
pop
mov
adc
xor
push
adc
lods
jns
jnp
scas
jbe
push
or
es
jmp
sub
cmp
lods
das
pop
movs
(bad)
mov
jns
push
push
jae
jno
dec
stos
outs
and
stc
(bad)
outs
call
dec
add
push
push
stc
mov
jmp
inc
add
push
movups
add
add
lods
and
jg
lods
(bad)
out
mov
cmc
and
sbb
mov
mov
in
sbb
xchg
dec
cmp
mov
dec
push
call
je
xchg
or
mov
adc
scas
test
mov
stos
lods
daa
xor
gs
retf
jle
sar
adc
(bad)
jge
hlt
loopne
mov
das
push
adc
aaa
js
pushf
add
mov
mov
test
mov
push
lods
or
aaa
push
adc
and
repz
repnz
test
or
test
push
out
sub
fcmove
jmp
js
or
outs
dec
mul
pop
cmp
xlat
and
dec
aad
cli
fcmovne
cmp
aaa
push
sahf
xchg
les
mov
retf
dec
jl
loope
and
xor
clc
js
adc
inc
xor
xlat
daa
in
inc
out
retf
mov
jle
pop
ds
sar
ret
movs
jecxz
stc
fs
lea
or
int3
(bad)
retw
push
inc
push
and
sub
add
in
cdq
inc
pop
arpl
pop
fisubr
sbb
xchg
ins
jbe
or
adc
mov
(bad)
jp
mov
out
sete
into
pop
(bad)
movs
pusha
and
fild
sbb
mov
cwde
(bad)
(bad)
or
sub
pop
inc
dec
xor
and
pop
mov
(bad)
repnz
fsubr
(bad)
sar
loope
inc
in
pop
pushf
cli
mov
add
ja
fisub
or
call
jge
inc
test
dec
sub
sti
jae
mov
stos
movs
push
(bad)
fisttp
movs
jecxz
(bad)
shl
call
ret
mov
cmp
fdivr
mov
dec
xlat
and
outs
adc
pusha
cdq
rcr
cmp
jno
mov
xchg
mov
pop
xchg
ret
int
ret
nop
cmps
add
pop
xor
and
aam
js
sbb
add
hlt
or
xchg
push
pop
retf
bound
cli
cld
dec
in
iret
ds
mov
mov
xchg
jae
fcomp
rol
popf
mov
inc
cmp
inc
dec
and
int
sbb
cmp
popa
cmc
pop
(bad)
loope
rcl
and
sub
ins
shr
rcr
inc
lods
add
dec
jnp
xor
test
aam
mov
dec
ins
jg
aam
pop
sub
(bad)
mov
ins
cmps
nop
mov
jae
(bad)
xchg
std
mov
xchg
addr16
rcl
rol
jae
jl
das
push
push
js
mov
cmp
data16
xchg
ror
and
push
inc
push
mov
lods
popa
jns
outs
aam
loop
adc
mov
xchg
movs
xchg
mov
inc
(bad)
fsubr
xlat
xor
inc
out
mov
retf
and
push
aad
outs
rcl
and
in
mov
push
cmc
jle
sbb
ins
pop
cwde
pop
cmp
push
or
cmp
in
loope
cmp
adc
stos
test
neg
ss
cmp
and
arpl
mov
mov
out
pop
cdq
adc
popa
xchg
dec
cmp
push
cmp
or
xchg
pop
jo
pop
aas
cld
mov
aaa
mov
sbb
dec
jbe
adc
(bad)
fcomp
pop
cdq
scas
mov
mov
or
test
lock
int3
sbb
xchg
xor
ror
jmp
mov
cdq
mov
mov
(bad)
pop
cmp
dec
retf
int
add
pusha
(bad)
fdiv
sub
into
dec
(bad)
mov
dec
dec
xor
enter
iret
std
mov
mov
adc
scas
add
mov
mov
dec
(bad)
dec
inc
mov
lods
lods
jo
mov
(bad)
pushf
and
push
movs
xor
jle
dec
jbe
pop
out
sbb
or
sbb
nop
or
call
inc
adc
xchg
push
clc
dec
sbb
jl
(bad)
in
fucompp
jp
add
shr
fldenv
sub
push
adc
xlat
sti
mov
loop
je
mov
mov
mov
fld
xchg
add
mov
sbb
sti
(bad)
fxch
xchg
hlt
call
in
nop
xor
stos
int
jae
ds
js
mov
cmp
ins
ja
mov
ss
js
and
lea
inc
sub
sub
call
ss
inc
cli
inc
sub
out
gs
dec
mov
inc
idiv
jecxz
xchg
scas
inc
push
dec
sub
fist
jmp
dec
adc
into
cmp
jne
ins
lds
xor
out
xor
or
push
mov
cmp
push
test
add
push
stos
in
jne
pop
push
sub
mov
mov
enter
sbb
fadd
ja
or
call
retf
dec
dec
xchg
mov
out
pop
add
adc
movs
dec
in
(bad)
out
aaa
jb
inc
or
in
push
or
les
bound
retf
mov
mov
cwde
fstp
push
addr16
cmps
enter
dec
mov
pop
inc
add
push
pop
pop
scas
into
popf
cmp
cmps
aas
sub
adc
outs
cs
sub
mov
cmc
mov
jno
xlat
fist
push
dec
ins
imul
pop
fst
out
shl
dec
push
sub
icebp
pop
cmp
pusha
shl
mul
or
xchg
mov
imul
cmp
cmp
in
jle
or
call
nop
cmp
dec
je
call
jmp
jmp
xchg
outs
scas
push
mul
das
dec
xor
arpl
xor
and
gs
imul
cmp
pextrw
mov
mov
add
or
inc
out
scas
cmp
lahf
fild
je
out
mov
push
dec
retf
adc
dec
xor
ins
mov
jecxz
or
cli
add
or
(bad)
pop
dec
push
push
es
mov
shr
aad
push
stos
mov
mov
arpl
shl
mov
push
jge
or
(bad)
test
push
or
lea
pop
mov
or
pop
push
mov
sub
add
div
and
pop
outs
jge
sbb
inc
mov
mov
ret
(bad)
div
iret
adc
inc
retf
cmp
mov
test
fiadd
sti
fsub
idiv
pop
in
add
xchg
repnz
jae
or
int3
pop
(bad)
das
mov
push
jecxz
ret
push
sbb
sub
repnz
or
addr16
shl
fst
inc
pxor
xchg
sub
cld
(bad)
not
pop
cmp
sbb
cmp
push
pop
ficomp
fidivr
xchg
or
inc
adc
rcr
gs
gs
xchg
adc
mov
mov
cs
aam
sub
test
xchg
jo
nop
mov
adc
cmp
fwait
adc
sahf
or
rcr
rep
mov
or
xor
xchg
mov
inc
adc
sbb
pop
xchg
repnz
pop
xlat
aas
jg
into
leave
add
and
fdivr
push
inc
xor
mov
scas
or
adc
xchg
mov
xor
xlat
aas
jmp
inc
xor
push
js
fdiv
lock
int
xchg
xchg
stos
and
push
adc
mov
adc
lods
mov
mov
mov
std
and
mov
mov
mov
fisttp
aam
lahf
loopne
ins
test
lahf
fcmove
ins
in
pop
stc
ds
mov
jmp
(bad)
fist
je
ja
mov
pop
mov
jb
(bad)
popa
sahf
or
jmp
jnp
pop
push
cmp
and
mov
gs
js
inc
repz
pop
pop
dec
jo
ds
mov
add
out
xor
xchg
lods
add
jae
lds
cmps
enter
lods
jns
std
jg
repz
adc
pop
mov
cmc
jl
pop
or
cmp
scas
xchg
dec
(bad)
retf
mov
aas
mov
hlt
jge
ds
jg
pop
sub
fcomp
shl
and
inc
cmp
dec
fwait
test
call
sub
adc
cdq
in
push
scas
jne
jg
pusha
jns
(bad)
jo
xor
dec
pop
xor
stc
sbb
popf
addr16
idiv
jbe
sub
jb
cmp
add
and
leave
in
cwde
push
mov
mov
xchg
pop
mov
imul
jo
pushf
pop
int
movs
outs
xor
outs
or
xor
movs
add
mov
in
and
cmp
sub
add
or
test
cs
xchg
dec
pop
mov
sub
outs
ss
and
mov
daa
(bad)
aam
cmp
jp
push
mov
je
data16
test
push
aad
arpl
mov
inc
adc
push
sub
or
mov
cmp
dec
repz
or
mov
fs
and
mov
(bad)
daa
inc
cmp
loope
cdq
lods
or
loopne
out
jmp
mov
mov
or
movs
not
xchg
dec
xchg
rol
push
fisubr
cmp
fisub
jle
les
push
int
xchg
(bad)
into
sub
jnp
add
xchg
xchg
cwde
pop
mov
in
aad
pop
inc
jmp
or
push
cld
retf
call
sbb
xchg
loope
imul
and
inc
sub
aas
xchg
sar
inc
shr
ds
mov
popf
jno
dec
xchg
adc
aam
jmp
les
xchg
popa
jno
xchg
cmp
leave
scas
adc
xor
inc
enter
into
or
loope
xchg
mov
shld
push
clc
repz
test
add
push
loop
(bad)
jmp
push
cmp
inc
cmp
fisub
mov
pushf
xchg
test
add
dec
mov
enter
push
fs
cmps
dec
in
jl
test
pop
mov
xchg
rcr
add
or
pop
lds
xlat
adc
mov
mov
retf
push
mov
mov
add
test
dec
xchg
mov
popf
cmp
sbb
cmps
into
fwait
jno
xor
push
mov
stos
xchg
movs
dec
fldcw
fcomp
and
pop
sbb
lds
rol
ficom
les
outs
jo
dec
jmp
push
xchg
dec
addr16
add
mov
mov
mov
into
dec
add
cmp
popf
mov
and
shr
es
xchg
rcl
shr
popf
mov
fild
stc
pop
ss
dec
cli
jb
adc
cmps
shl
add
rcr
xchg
inc
mov
repz
push
push
dec
jns
fild
mov
jg
inc
inc
bound
dec
mov
rol
dec
and
imul
loope
sub
popa
adc
test
scas
sbb
mov
(bad)
pop
add
retf
inc
movs
sub
sbb
sar
outs
cwde
repnz
inc
pop
ficomp
xchg
pop
xor
in
pop
mov
dec
test
mov
dec
lahf
test
aas
in
push
gs
or
mov
inc
es
call
inc
jbe
shl
xchg
test
jne
pushf
sub
icebp
fld
mov
int3
adc
sub
xlat
outs
cmp
repnz
arpl
in
pop
push
dec
adc
outs
or
push
loop
adc
mov
scas
in
push
sub
gs
ret
psllw
adc
cmp
xchg
push
sbb
in
lds
sub
pop
je
cmp
stc
int3
fld
sti
pop
mov
into
inc
hlt
cld
loope
mov
mov
or
clc
xchg
ds
dec
push
pop
loop
add
test
dec
arpl
add
inc
data16
ror
cwde
mov
fisub
lods
enter
xlat
push
fs
mov
in
push
nop
push
rcl
adc
jae
pop
sar
xchg
sub
sub
movs
push
cmp
sar
pop
stc
sbb
imul
cmps
mov
cdq
dec
jg
mov
mov
data16
mov
ror
mov
mov
sbb
outs
mov
outs
inc
ins
sub
inc
shl
cdq
dec
ds
cli
stos
mov
mov
push
out
xlat
sar
aad
push
and
sti
xchg
sub
clc
sbb
cmps
das
lock
lods
or
mov
push
in
mov
xor
ret
mov
pop
sub
cmp
rcr
xor
sbb
pop
les
mov
in
imul
cmp
mov
sar
jne
xor
cmps
xchg
fcmove
sub
mov
cmps
aas
sbb
in
loop
fcom
sub
fwait
call
imul
pop
ret
rep
mov
not
test
mov
shr
xor
jns
and
cmps
stc
rcr
rol
call
xchg
jmp
push
sbb
shl
or
push
pop
pop
pop
ror
inc
daa
fstp
jbe
test
xchg
mov
add
cmp
dec
mov
mov
inc
in
mov
xor
push
js
cmps
jl
cld
add
xchg
or
adc
es
loope
xchg
outs
fld
jns
pop
outs
popa
popf
scas
push
aaa
icebp
cmp
jo
call
movs
movs
popf
sbb
sbb
fistp
mov
inc
sar
mov
aad
jns
loopne
pop
push
or
xchg
lahf
test
push
mov
add
mov
jae
dec
sysexit
adc
outs
sbb
loopne
pop
sub
sar
aad
sub
fwait
mov
adc
pusha
inc
sub
cmps
in
(bad)
mov
sbb
fisub
cmp
lock
mov
push
xor
in
mov
pop
retf
pop
bound
push
cmp
ja
push
push
cmp
stc
aad
icebp
mov
adc
mov
das
or
(bad)
mov
scas
add
fistp
sub
aaa
iret
ja
jne
xor
xor
push
push
add
adc
cmp
jo
or
dec
pushf
cld
mov
cmp
sbb
and
shl
cmp
les
in
lods
(bad)
mov
jge
cmp
and
clc
or
ins
mov
push
repnz
lahf
fs
fidiv
pop
pop
push
push
ins
mov
sar
mov
(bad)
pop
cmps
jb
cdq
ss
pop
pop
xor
push
cli
gs
in
mov
lea
ror
retf
push
jo
imul
cmp
mov
mov
push
xor
jecxz
xor
test
mov
dec
je
add
loop
ds
adc
jp
push
xlat
stos
aas
fs
mov
ja
and
das
pop
sbb
je
mov
push
jns
int
mov
rol
mov
xchg
(bad)
jno
out
cld
cmc
aad
and
inc
dec
js
ret
push
loope
jp
sbb
(bad)
int3
lahf
loopne
data16
idiv
ret
pop
cmp
out
mul
repz
add
and
sub
cmc
xchg
or
xor
lock
shl
cwde
fstp
mov
mov
inc
dec
xchg
enter
xlat
or
clc
outs
arpl
and
js
push
aad
call
and
stos
addr16
fst
add
rol
es
stos
out
mov
pop
jp
and
jmp
popa
lahf
int3
dec
dec
mov
cmps
and
inc
gs
pop
add
cdq
pop
call
sbb
sahf
mov
cmp
rol
xchg
inc
push
cmp
fidivr
mov
dec
push
call
xchg
xchg
(bad)
scas
pop
into
mov
ins
in
cmp
outs
pop
fucomi
ret
inc
dec
mov
pusha
adc
imul
(bad)
scas
xor
mov
xor
fwait
mov
rcl
dec
jmp
imul
ins
out
inc
aas
adc
cmp
dec
add
std
jl
ins
mov
mov
mov
push
in
lea
pop
mov
push
cmc
adc
imul
aad
xchg
pop
sub
dec
ret
xchg
pop
jle
fidiv
pop
shl
xchg
icebp
(bad)
adc
loope
in
lock
popf
push
mov
jg
inc
out
scas
mov
pop
xlat
jno
cmps
pop
cmp
push
push
das
xor
xchg
jb
mov
out
jge
xchg
clc
sub
ror
in
addr16
mov
dec
rcr
pop
push
adc
mov
hlt
fcmovnb
or
mov
test
retf
js
dec
(bad)
mov
(bad)
add
sbb
sbb
jo
cmps
cwde
jg
and
jb
cmp
rol
sub
xor
lods
mov
adc
cmps
or
xchg
mov
bound
(bad)
and
dec
cmp
movs
movs
mov
pop
mov
xor
xchg
out
xchg
pop
and
in
adc
imul
push
sahf
test
adc
cmps
mov
sbb
jne
inc
clc
sbb
cmp
enter
repnz
stos
xchg
xor
mov
retf
movs
(bad)
xchg
stos
out
sub
mov
stos
fisub
push
sub
scas
ds
movs
lea
nop
mov
mov
mov
sbb
lahf
shl
cmp
shl
ret
outs
retf
inc
push
mov
je
mov
mov
ret
sub
test
dec
sub
and
mov
iret
sbb
dec
adc
cli
std
pop
or
cmps
cmp
in
in
test
push
clc
enter
sbb
push
daa
fiadd
retf
mov
push
mov
xor
add
aaa
push
mov
daa
or
loop
push
cmp
jl
fwait
pushf
pop
and
cmp
jbe
sub
ja
xor
push
lds
(bad)
mov
sbb
lods
pop
repnz
aam
xchg
cmp
dec
pushf
push
aas
mov
ins
push
test
mov
arpl
jl
addr16
mov
jg
dec
dec
shr
add
mov
mov
(bad)
out
jo
ss
loope
mov
add
jecxz
les
lods
xchg
cmp
add
mov
xchg
es
push
jmp
es
jge
sub
dec
mov
imul
cmp
or
mov
dec
(bad)
pop
mov
mov
mov
pushf
retf
jmp
adc
fldenv
mov
mov
ret
sub
daa
or
mov
pop
mov
jno
mov
mov
dec
adc
sbb
mov
fst
outs
pusha
jnp
(bad)
in
mov
rcr
arpl
mov
and
dec
mov
out
xor
daa
aas
rcl
fucomp
jae
loope
mov
pop
out
scas
nop
cmp
add
dec
jg
(bad)
loopne
cli
imul
sub
adc
jb
loop
push
ja
mov
inc
psrlw
push
jmp
adc
xchg
push
pop
jg
dec
mov
lods
aam
outs
pop
iret
cmps
adc
dec
clc
cld
mov
adc
test
or
jns
push
fs
scas
pop
xchg
mov
pop
popa
icebp
test
xor
mov
cmc
push
rcl
inc
(bad)
stos
data16
mul
out
les
mov
xchg
jecxz
push
jns
je
or
cmp
or
ja
xor
xor
push
add
xor
sbb
xor
xor
mov
ins
pushf
push
pop
pushf
test
cdq
loop
test
mov
sub
cwde
mov
repz
in
cmps
push
inc
pop
sbb
out
inc
inc
bound
(bad)
push
push
pop
inc
mov
jbe
sub
sub
xlat
push
movs
mov
cld
jg
mov
les
xlat
ja
add
aaa
jno
retf
test
ins
pop
int
loope
mov
es
sbb
mov
in
or
sbb
mov
mov
jb
arpl
sbb
dec
add
mov
dec
xor
mov
call
mov
pop
(bad)
jmp
ins
xchg
mov
mov
dec
outs
out
movs
mov
repz
sbb
ja
and
sbb
dec
xor
movs
sub
stc
mov
pop
fisttp
outs
adc
leave
clc
jecxz
xchg
push
pop
push
xor
push
dec
mov
pusha
sub
outs
js
sub
cli
sub
scas
js
repz
out
or
mov
push
out
mov
inc
(bad)
fdiv
stos
mov
dec
es
loopne
fst
into
mov
cmps
outs
dec
xor
shl
pop
jl
mov
in
add
(bad)
mov
xor
dec
daa
lock
iret
dec
xor
call
idiv
pop
push
push
push
out
add
jecxz
or
push
xchg
sbb
add
jl
pop
out
sub
cmp
stc
pop
and
xchg
pop
neg
cdq
and
jecxz
jmp
jo
sbb
test
xor
jnp
out
loopne
int3
stos
test
(bad)
cmp
or
aas
or
pop
mov
mov
int
out
push
jno
div
adc
sub
adc
mov
mov
pop
jp
jno
jg
cwde
lahf
fmul
xlat
out
movs
lods
fcomp
mov
sahf
cmps
cmp
loopne
xor
fdiv
cli
add
push
adc
and
xor
cmp
adc
push
pop
inc
sbb
add
jle
aas
stos
adc
jno
inc
imul
popa
int3
adc
add
mov
jne
jmp
dec
inc
fsub
push
mov
(bad)
push
leave
xchg
xchg
xchg
mov
jl
ficomp
push
loop
loop
xlat
mov
sub
mov
es
add
push
aas
fldl2t
or
fld
jg
push
sar
js
pop
pop
adc
mov
rcl
xchg
rep
dec
repz
cmp
mov
sbb
(bad)
arpl
add
xchg
inc
xor
xchg
in
jecxz
(bad)
mov
inc
cmp
in
add
mov
test
mov
pop
mov
mov
pusha
jae
and
mov
(bad)
icebp
or
xlat
adc
xchg
xchg
mov
fs
jp
ret
mov
repz
ror
and
mul
sar
gs
xchg
leave
jo
xchg
pop
xchg
sbb
jne
push
inc
into
pop
sbb
popf
add
cmp
push
cmps
test
pop
imul
inc
pop
test
aaa
jbe
mov
test
adc
daa
das
pop
out
(bad)
in
shr
push
jne
in
jne
xor
adc
(bad)
fisubr
jle
aam
jp
xchg
imul
push
add
jmp
sbb
xchg
fcom
push
jne
sbb
jecxz
jmp
ret
test
xchg
or
or
popa
add
inc
jmp
out
sub
add
stos
dec
cs
push
sub
imul
jns
(bad)
daa
xlat
cs
fcomp
add
test
push
lea
xor
inc
pop
jbe
sbb
dec
in
repnz
push
sbb
pop
pushf
neg
dec
jmp
es
rcr
pop
sub
movsx
mov
and
repnz
arpl
xchg
fidivr
mov
cmp
in
dec
sub
inc
sub
lods
out
xor
imul
imul
cmc
push
sub
jge
test
cmp
popf
cld
adc
jge
loop
add
(bad)
fisttp
adc
dec
das
enter
jae
cmp
sbb
mov
jno
pop
xchg
sahf
mov
jnp
jmp
cmps
ins
in
jne
(bad)
cmps
clc
sahf
les
xchg
pusha
mov
ficomp
or
push
xor
lahf
aas
mov
jne
dec
adc
repnz
xchg
push
add
test
mov
mov
add
or
push
xchg
outs
aad
add
ins
pop
loop
out
mov
and
cmp
sub
call
inc
imul
movs
iret
test
bsr
mov
cmp
ret
push
sbb
sub
bound
fiadd
mov
cmp
xchg
ret
jecxz
aad
push
sub
fsubr
popf
imul
sbb
icebp
dec
xor
daa
mov
and
xchg
inc
adc
xor
mov
mov
std
cmps
inc
and
xchg
loop
jl
into
pop
mov
pop
retf
xchg
retf
cdq
jmp
push
or
xor
jp
test
jo
cmp
add
mul
inc
and
add
jmp
int
dec
stos
xor
hlt
push
sbb
cli
or
movs
ret
gs
imul
mov
out
shl
jb
pop
inc
cmp
push
std
mov
in
sbb
or
or
xchg
call
mov
fbld
add
lock
shr
out
and
fwait
cmp
jo
shr
imul
mov
jecxz
enter
out
sahf
push
cmp
pop
jns
neg
adc
call
loopne
std
outs
cmp
stos
and
fidiv
cmp
inc
ja
mov
bnd
(bad)
sub
adc
add
leave
jb
fmul
jne
or
mov
xchg
sub
cld
sar
cli
xchg
jle
sbb
sub
add
sbb
inc
push
adc
ins
cli
and
mov
dec
jg
js
stos
mov
pushw
adc
mov
inc
mov
jecxz
(bad)
push
pop
and
into
(bad)
stc
sbb
mov
push
(bad)
inc
in
call
(bad)
cs
jo
sub
xor
das
data16
out
(bad)
push
adc
movs
push
jo
add
in
out
mov
rcl
pop
mov
add
scas
fbld
cdq
scas
adc
repnz
scas
nop
dec
push
pop
xchg
mov
xchg
dec
(bad)
mov
and
mov
(bad)
shr
push
sub
in
sahf
cmp
dec
inc
out
push
aam
test
pop
mov
adc
xor
fs
jg
fcom
into
and
sar
mov
ins
jecxz
mov
ss
mov
xor
cmp
push
mov
mov
mov
mov
add
ja
and
mov
xchg
pop
out
femms
sbb
ins
add
dec
enter
stos
lea
es
pop
xchg
mov
jns
outs
push
jp
push
and
std
jb
rcr
(bad)
movs
(bad)
nop
paddq
sub
and
or
shr
mov
mov
rcl
inc
inc
dec
fldenv
mov
imul
mov
(bad)
adc
mov
scas
cmp
dec
pop
popf
mov
and
test
cmp
jmp
sbb
arpl
sbb
push
xchg
call
adc
daa
scas
push
or
cmps
jg
sar
shl
stc
cld
dec
adc
sub
push
adc
sbb
sbb
sub
dec
or
sbb
sub
xchg
ror
adc
fwait
inc
and
pushf
cmp
or
std
fld
inc
int
xor
iret
mov
pop
in
or
test
(bad)
mov
stc
sub
leave
leave
push
dec
stos
(bad)
aad
les
jae
je
dec
mov
mov
retf
pop
cwde
pop
cdq
inc
mov
push
pop
push
mov
test
xchg
(bad)
in
dec
(bad)
sub
mov
enter
fld
retf
push
pop
cmp
lea
dec
imul
aas
je
gs
loopne
mov
mov
(bad)
jne
in
sbb
sub
push
jle
clc
adc
mov
rol
jmp
lea
iret
mov
sbb
adc
push
jp
imul
outs
push
(bad)
stc
cs
inc
data16
jge
out
push
fdecstp
out
lea
daa
ficom
ret
push
in
mov
mov
rcl
arpl
cld
xor
mov
nop
js
sub
sbb
mov
sbb
cli
inc
mov
sbb
xor
jns
xor
jno
cld
sub
les
adc
fsubr
xor
cmc
sbb
jge
sub
outs
repz
adc
pusha
(bad)
jno
or
(bad)
jnp
cmc
adc
repnz
pop
int
mov
lods
push
pop
or
or
imul
aad
push
retf
jmp
or
jp
mov
jmp
jne
stos
pop
cmp
loop
in
cwde
retf
iret
pop
push
or
in
imul
jmp
stos
jb
test
aad
xor
mov
lods
mov
add
jbe
mov
jbe
cmp
pop
(bad)
movs
mov
cmc
lods
inc
mov
pop
(bad)
fimul
push
stc
jo
adc
sbb
xchg
and
jg
mov
pusha
ins
inc
mov
jmp
ins
addr16
loop
lds
jmp
cwde
or
unpckhps
and
fcomip
test
stc
movs
cs
pop
pop
inc
cmp
movs
movs
clc
shl
mov
dec
in
ds
repnz
pop
sti
jnp
mov
pop
lahf
std
in
cmp
enter
retf
cdq
pop
fistp
adc
add
aad
aaa
das
test
clc
pushf
adc
cmp
and
adc
fwait
pop
or
push
mov
xchg
inc
inc
mov
pop
sbb
adc
push
dec
outs
pop
mov
imul
nop
loopne
lods
sbb
push
jl
aam
hlt
pusha
mov
ins
test
sbb
sub
jns
pop
xor
add
push
adc
pop
adc
xor
popa
mov
pushf
jo
rol
adc
mov
retf
mov
xchg
(bad)
(bad)
in
pop
or
mov
push
dec
(bad)
add
mov
pop
test
push
fidiv
mov
fst
setp
mov
mov
xor
loope
or
hlt
outs
and
dec
mov
jge
mov
jo
push
and
or
adc
xor
out
shl
xor
ins
jecxz
lock
ss
addr16
aas
sub
int3
lea
ss
pop
fdivr
ret
jns
popf
xor
out
call
mov
add
xor
mov
inc
scas
stos
lea
scas
jmp
pop
cmp
push
aam
fsub
pop
stos
adc
and
mov
sbb
dec
out
out
repnz
inc
add
mov
sar
mov
bound
xchg
fsubr
into
and
xor
pop
sub
mov
mov
add
cmp
mov
je
pop
mov
in
les
or
bnd
adc
test
pop
pop
idiv
or
sar
add
movs
shl
cmp
add
fldcw
jnp
gs
jmp
xor
ja
movs
fdivr
rcr
push
xchg
js
add
imul
pop
adc
push
mov
fs
iret
xor
pop
jge
mov
call
cmp
mov
inc
jle
(bad)
cmps
lock
jnp
inc
or
movs
sbb
add
in
(bad)
jg
sbb
aaa
fisttp
add
nop
xchg
jb
xchg
aad
sub
loop
sub
sbb
fimul
scas
div
cmp
push
repz
inc
nop
push
xchg
jmp
or
xchg
jnp
fbstp
or
add
pop
inc
and
(bad)
retf
xor
call
out
loopne
sub
jb
js
jge
leave
inc
sub
(bad)
sbb
mov
les
inc
les
mov
out
push
mov
push
cmp
sub
mov
add
in
pusha
ds
mov
movs
imul
and
pop
(bad)
(bad)
popf
fcom
shl
xchg
enter
inc
ins
inc
jbe
call
mov
xchg
test
js
inc
adc
hlt
xlat
or
jns
lea
inc
mov
xlat
cmps
lahf
sub
add
mov
loopne
(bad)
dec
es
shl
sti
push
test
mov
shl
inc
inc
mov
enter
pop
cmp
ja
mov
jge
sub
cld
mov
push
push
mov
mov
mov
movq
xlat
fist
outs
push
mov
cmp
adc
jmp
mov
cmp
in
retf
sub
jbe
outs
and
xchg
es
cmp
out
jmp
movs
push
push
dec
and
mov
mov
fwait
and
out
repnz
sbb
mov
push
push
imul
sbb
sbb
arpl
mov
out
adc
fst
inc
inc
loopne
pop
lea
dec
cli
fadd
outs
sahf
xchg
jb
and
ins
sbb
lods
imul
int3
(bad)
push
hlt
add
jo
fcomp
movs
retf
and
sbb
test
add
add
es
mov
inc
xchg
jns
rcl
mov
rep
xlat
jbe
add
inc
(bad)
push
pop
dec
cwde
jb
xor
cmp
cmp
(bad)
int3
fstp
(bad)
std
dec
and
jo
cmps
push
push
jno
aam
ins
pop
mov
cmp
aaa
std
push
dec
es
lea
data16
test
cmps
adc
xchg
mov
jl
push
out
mov
adc
in
jg
outs
bound
ins
mov
push
dec
add
adc
ret
ins
in
mov
aam
outs
mov
push
push
mov
add
mov
push
in
jle
clc
call
lods
push
scas
sbb
enter
out
push
jg
retf
sbb
lea
adc
jle
int
jae
mov
dec
sbb
popa
lods
mov
jp
mov
push
cmp
bound
push
jecxz
jp
les
xor
test
add
jecxz
xchg
push
pop
clts
aaa
fisubr
popa
fsub
dec
pusha
push
adc
mov
xchg
lahf
xchg
sub
inc
and
sbb
jmp
bound
xchg
and
sub
pop
xchg
mov
xchg
mov
call
cdq
push
cmp
shl
test
bound
fwait
call
mov
and
inc
pop
add
pop
sbb
or
jmp
std
stos
out
cmps
aam
push
lods
mov
daa
xor
mov
cmps
imul
ss
or
pop
sbb
add
stos
ficomp
clc
ss
gs
out
sahf
dec
fadd
xor
aaa
push
cvtps2pi
fild
inc
push
ret
out
adc
(bad)
cmps
fwait
sar
xchg
movs
fidivr
outs
sar
rol
jge
js
(bad)
jno
mov
pop
and
lahf
push
push
daa
and
lds
gs
imul
adc
cmc
sbb
outs
mov
jecxz
mov
mov
fld
je
in
add
aam
pop
ror
dec
xchg
dec
add
sbb
dec
or
ret
adc
xor
sbb
jo
cmp
cld
imul
cmp
div
fs
sbb
lahf
xor
sub
ret
add
mov
fisub
jp
jg
or
lods
pop
loope
xor
mov
cmps
push
rcl
data16
or
xchg
push
popf
push
loop
mov
cmc
mov
mov
lock
ror
mov
std
mov
or
mov
clc
mov
jne
pop
sbb
movs
inc
and
xchg
push
in
pop
inc
jb
mov
sbb
(bad)
fstp
pop
xor
sub
jb
inc
stc
jne
pop
pop
hlt
es
add
mov
es
dec
jo
fdivr
mov
dec
xchg
dec
arpl
push
cwde
sahf
push
ja
lock
(bad)
lock
rol
or
dec
inc
(bad)
lahf
add
xor
or
xchg
cmp
imul
addr16
aad
das
jmp
and
mov
sbb
mov
mov
mov
popf
into
repz
cmps
pop
movs
pcmpgtb
add
jnp
mov
popf
pop
clc
fdiv
jg
jle
ror
mov
retf
inc
cdq
and
push
add
cmp
cdq
jnp
sbb
in
stos
adc
idiv
cmp
addr16
lock
in
int
sbb
clc
and
xchg
retf
dec
cs
cdq
mul
fiadd
(bad)
sar
loopne
cmp
inc
cmp
test
jle
fcomp
std
fidiv
inc
or
outs
adc
mov
cmp
cmc
ins
xlat
pop
test
add
dec
sbb
inc
into
clc
mov
mov
xor
clc
std
and
mov
cli
rol
ins
mov
and
not
mov
xchg
fcmovnu
ds
out
into
jle
into
imul
adc
pop
test
enter
inc
sar
mov
(bad)
sbb
xchg
push
hlt
mov
mov
test
adc
xor
push
dec
mov
pop
or
add
jnp
mov
push
pop
mov
add
add
fstp
call
or
or
stos
popa
and
xlat
call
stos
sahf
retf
push
mov
stos
cdq
xchg
or
push
pop
cmp
inc
or
imul
add
push
jae
clc
mov
add
pop
out
fild
ror
in
add
js
fstp
dec
xchg
dec
dec
push
stos
call
imul
jp
in
inc
push
adc
push
adc
pop
jge
les
inc
adc
pop
rcl
or
ja
mov
xor
les
cmps
dec
lock
mov
rcr
jge
pop
push
fidiv
ins
adc
mov
pop
nop
sub
(bad)
(bad)
mov
popf
xor
mov
stos
mov
mov
xor
xchg
shl
dec
aad
leave
scas
push
cmc
adc
stos
fistp
fwait
xchg
xchg
or
imul
bound
mov
dec
cs
or
ins
dec
nop
sub
vfrczps
clc
int
push
or
ss
daa
pop
icebp
add
lea
sub
lods
ins
pop
arpl
fld
or
rol
mov
int3
imul
hlt
mov
dec
(bad)
test
hlt
iret
aas
sti
mov
mov
jnp
mov
xchg
dec
fnstcw
arpl
call
out
clc
test
add
xor
xor
rol
jbe
jle
adc
mov
mov
dec
mov
es
and
mov
adc
mov
ror
add
push
sub
sub
mov
and
inc
inc
jp
and
or
add
in
clc
or
inc
or
xchg
xchg
(bad)
or
dec
xor
fst
mov
sbb
jno
fimul
xchg
and
and
(bad)
cwde
(bad)
lock
fs
and
push
inc
test
dec
jns
mov
pop
dec
xchg
lods
mov
daa
leave
sbb
jecxz
xor
std
(bad)
fadd
and
cmp
sub
and
mov
loop
ret
inc
iret
xor
adc
stc
gs
jnp
mov
dec
pop
shl
xchg
retf
add
and
in
and
sbb
or
call
mov
push
cmps
stc
xchg
inc
imul
push
dec
sub
add
retf
lea
jmp
sahf
rcl
inc
push
sti
ins
mov
rol
enter
arpl
ret
es
jl
movs
or
movs
in
idiv
xor
gs
cld
xor
lds
adc
jmp
(bad)
pushf
dec
fs
loopne
rcr
fwait
lahf
leave
lea
inc
push
dec
and
cld
dec
push
or
iret
cdq
adc
aam
mov
mov
mov
mov
mov
xchg
or
nop
stc
or
push
ror
xor
sti
dec
pop
sbb
mov
push
dec
cmp
jmp
dec
inc
jnp
or
jmp
push
loop
mov
sub
in
mov
loope
add
mov
es
xor
cmp
add
jmp
out
inc
dec
mov
stc
int
sbb
sti
adc
push
fwait
jo
arpl
mov
sahf
inc
clc
push
test
mov
mov
test
out
inc
ins
movs
adc
push
adc
in
add
sar
mov
pop
jmp
xor
push
mov
pushw
ins
pop
lods
dec
pop
add
ss
jmp
inc
fsubr
imul
leave
ficomp
cmp
int3
and
mov
pushf
arpl
(bad)
test
mov
ss
xor
cld
sub
outs
push
inc
cmp
jmp
mov
add
push
add
clc
or
dec
push
mov
and
popf
sbb
adc
fidivr
nop
cmps
sbb
dec
jmp
mov
sub
xchg
mov
mov
cmps
(bad)
ja
sbb
scas
mov
mov
cs
inc
mov
rep
cmp
test
dec
xchg
ss
das
test
adc
xor
xchg
out
jl
movs
in
pusha
or
shl
mov
or
lahf
push
mov
cmp
adc
stc
ja
test
pop
xchg
or
dec
pop
mov
and
ret
push
mov
out
and
int
mov
cmp
push
test
dec
call
inc
or
or
adc
iret
sti
adc
sahf
and
xchg
cmps
xchg
sub
retf
stc
push
pop
pop
xor
pop
lahf
or
inc
mov
cwde
add
sti
imul
sbb
or
ds
mov
fmul
mov
push
outs
and
repnz
sub
sti
sar
jp
pop
loope
pop
shl
mov
push
jge
in
sbb
(bad)
pop
adc
outs
adc
mov
ret
mov
enter
xchg
jmp
adc
jmp
jns
repnz
je
loop
inc
adc
cmp
adc
aam
cmc
jg
(bad)
ins
aas
xor
cli
push
push
xor
addr16
call
int3
sahf
dec
cmp
and
es
sub
push
or
sti
cmps
ds
inc
int3
jmp
je
add
sub
add
push
and
push
sbb
movs
push
jno
mov
cmp
loopne
adc
push
imul
out
sub
in
call
and
dec
xor
jecxz
je
jnp
div
retf
scas
outs
jmp
popa
aam
jb
pop
push
jge
dec
push
loop
or
pop
pop
in
call
cmps
fstp
push
addr16
(bad)
xchg
inc
fld
sar
mov
stos
movs
test
std
mov
icebp
aad
adc
cmp
cmp
cmp
sub
ja
or
iret
pop
sbb
ja
fistp
aam
jmp
cmp
jns
xlat
mov
cmp
dec
xchg
or
test
rcl
popa
jae
sahf
inc
cmp
and
push
in
cs
outs
mov
stos
je
pop
xor
mov
fisttp
dec
mov
mov
(bad)
loopne
enter
daa
xchg
out
jl
es
jae
dec
loop
inc
mov
aaa
mov
inc
mov
jmp
dec
mov
retf
lds
pop
mov
stos
adc
xchg
add
sar
cmp
imul
cmp
loop
push
push
and
test
std
push
test
push
adc
fwait
mov
xor
adc
movs
pop
jo
loop
adc
mov
popf
pop
repnz
cmp
mov
fisttp
adc
icebp
fwait
cmp
cwde
cmps
inc
(bad)
push
jmp
(bad)
add
push
outs
stc
loop
lods
pop
pop
push
pop
sub
nop
dec
in
mov
cmp
sbb
outs
xor
and
cmps
imul
or
pushf
xchg
shr
mov
dec
dec
cmp
lahf
or
dec
adc
retf
lods
adc
fld
or
push
adc
cmp
mov
and
or
idiv
adc
mov
mov
push
xchg
stos
nop
push
dec
repz
movs
sti
dec
mov
sbb
and
outs
mov
rcr
or
aaa
xor
pusha
stos
cmp
sub
mov
outs
daa
push
scas
sbb
adc
sbb
mov
push
jb
fdivr
popf
mov
inc
movs
ds
loope
enter
push
stos
mov
(bad)
pop
fwait
push
sbb
cld
addr16
ffree
add
xchg
movs
les
mov
mov
std
aaa
jmp
arpl
or
and
mov
mov
repnz
inc
dec
xor
jl
(bad)
int3
jnp
xchg
mov
pop
jmp
pushf
ins
adc
stos
ins
stos
fs
push
lea
aaa
fcmovnu
fs
shl
adc
mov
push
inc
cmps
inc
(bad)
iret
and
xchg
dec
and
in
mov
sbb
sbb
test
sbb
adc
xchg
std
push
jns
adc
(bad)
mov
jo
pop
dec
test
test
or
or
shl
call
out
imul
sbb
pushf
cld
xchg
xor
gs
ds
popf
inc
movs
jmp
push
inc
pusha
into
cmp
xor
movs
stos
imul
retf
dec
in
inc
outs
sbb
fimul
cld
dec
fwait
push
loope
popf
inc
xchg
in
(bad)
ret
pop
push
out
stc
xchg
inc
xor
fild
lock
ret
cmp
and
in
inc
adc
xchg
jns
cmc
shl
fcomp
add
jl
mov
gs
cmp
in
icebp
mul
adc
iret
push
sti
push
push
sti
(bad)
adc
cs
movs
or
fs
dec
retf
lock
cwde
fdivr
push
sti
sub
call
outs
mov
and
scas
or
sar
psubsb
fistp
out
rol
xlat
xchg
cld
jmp
lods
scas
mov
inc
xchg
iret
pop
outs
popf
dec
and
push
push
bound
or
outs
jns
pop
and
xchg
(bad)
lds
jl
fisub
shl
inc
aam
xchg
sub
ins
pop
(bad)
clc
push
jb
iret
mov
sbb
(bad)
sahf
cmp
fs
push
add
and
cmc
pop
in
push
pop
jle
mov
cld
leave
bnd
stos
mov
arpl
fmul
or
sub
pop
xchg
lds
lds
gs
cmp
pop
mov
test
(bad)
xchg
sbb
or
dec
cmp
and
jae
aam
popa
dec
aaa
bound
sbb
pusha
imul
dec
loop
hlt
sub
jmp
and
(bad)
mov
sbb
mov
xchg
dec
clc
cmc
movs
aad
lods
in
mov
jp
int
fisttp
mov
cmps
push
xor
add
not
inc
jo
ror
xor
adc
int
xor
imul
lahf
hlt
and
repz
mov
ror
pop
pop
std
xlat
in
cmp
mov
cli
test
daa
dec
into
arpl
adc
cli
fisub
(bad)
sbb
mov
in
pushf
hlt
add
inc
add
xor
dec
ja
pop
sub
jns
outs
popa
mov
pop
push
fs
xor
inc
adc
std
cwde
rol
xchg
add
cmp
jne
xchg
inc
test
mov
or
(bad)
fistp
sbb
mov
cdq
lea
sbb
in
dec
jae
xchg
(bad)
mov
movs
scas
je
push
inc
mov
retf
int3
cmps
stc
cmp
popf
inc
add
shl
fimul
pop
push
mul
jbe
fwait
pop
ret
cmp
loope
mov
ins
cmc
sar
xchg
mov
arpl
cmp
sbb
ins
push
(bad)
mov
xchg
jp
(bad)
dec
movs
(bad)
mov
cmc
mov
(bad)
and
loope
jmp
in
and
mov
mov
jge
jno
pop
test
or
jae
jle
cmp
jle
pusha
xor
std
inc
cmps
and
pop
push
jo
(bad)
(bad)
jecxz
xor
xchg
add
xor
adc
(bad)
jo
jne
adc
ret
test
pop
icebp
arpl
cwde
sbb
stc
sbb
or
mov
ins
leave
imul
inc
push
mov
js
or
jmp
cmc
dec
ds
adc
out
fistp
test
dec
test
test
fsub
or
inc
push
scas
pop
fidiv
or
adc
mov
pop
aaa
pusha
rcr
addr16
sahf
xchg
xor
xor
dec
scas
sbb
neg
add
imul
push
iret
sahf
js
push
popf
jmp
cmc
push
mov
leave
int3
(bad)
fimul
fwait
data16
xchg
xchg
stos
adc
mov
jno
fstp
ret
xchg
cmp
add
icebp
les
dec
add
sub
bswap
mov
mov
imul
retf
or
imul
jo
dec
out
lds
jb
ficomp
and
ds
rcl
jle
loop
xchg
in
daa
fs
outs
movs
jge
mov
inc
dec
lahf
(bad)
mov
and
nop
cld
xor
imul
fwait
push
aam
stos
push
mov
and
jnp
adc
clc
lds
int
cwde
inc
push
push
in
jp
cmp
sub
or
aaa
out
stos
(bad)
bnd
(bad)
or
jl
aaa
iret
sbb
in
lds
jecxz
ja
fadd
bound
push
jl
sti
sar
inc
fadd
add
mov
fiadd
or
mov
std
bound
pop
fild
inc
mov
shr
mov
cmp
aas
mov
out
lods
xor
ins
in
dec
mov
(bad)
(bad)
push
inc
add
mov
pop
pop
ds
mov
jnp
sti
xchg
xor
sahf
aaa
and
pop
fldcw
fmul
enter
and
add
lock
xor
test
fadd
in
ret
mov
fnsave
(bad)
pop
jge
jl
or
cmc
push
fcom
xchg
inc
test
or
cmp
data16
push
or
leave
scas
jg
stos
lods
gs
jecxz
jle
in
jo
mov
and
retf
outs
in
call
outs
sub
add
(bad)
push
in
sti
pusha
(bad)
cdq
push
or
sahf
xchg
sbb
lods
cs
jg
or
xor
ins
inc
push
fld
cmp
mov
lods
repz
cmps
xchg
push
(bad)
cmp
xor
and
shr
jecxz
xlat
cdq
adc
lods
aad
hlt
pop
xor
push
call
sub
push
pushf
xor
movs
or
jg
mov
(bad)
cmp
aad
icebp
add
leave
ror
mov
lahf
mov
pop
(bad)
sbb
inc
pop
lock
es
das
adc
fs
das
push
scas
sbb
ins
jo
dec
fs
pop
inc
test
lock
mov
(bad)
pop
sub
rcl
setg
ds
adc
pushf
add
cli
imul
cmc
hlt
xor
cmp
mov
scas
push
or
pop
pop
push
ret
mov
iret
aas
loopne
xor
cmp
sti
inc
push
xchg
cmps
out
mov
scas
movs
shr
ins
adc
(bad)
outs
adc
mov
clc
cmps
ins
xchg
and
loopne
stos
cmp
pop
adc
or
mov
lods
js
imul
sub
stos
xchg
push
dec
sbb
mov
rol
js
push
das
adc
not
add
xor
inc
add
push
xchg
add
mov
inc
inc
not
inc
fsubr
cmc
fucomi
mov
jle
stc
jae
pop
ror
jmp
cmp
sub
out
cwde
ret
popf
dec
lock
and
fdivr
cmp
pop
rcr
push
loop
gs
sub
fnsave
cmp
sar
mov
push
push
push
mov
or
pop
adc
icebp
(bad)
mov
push
pop
lea
int
push
mov
jp
out
leave
(bad)
in
shr
mov
loopne
cdq
cmps
aam
loop
shl
cld
and
cmp
movs
mov
dec
pop
inc
test
xchg
mov
std
xchg
mov
popf
adc
clc
call
repz
rcr
pop
lahf
out
push
push
ror
lds
push
adc
adc
and
ret
popa
(bad)
and
imul
inc
sub
push
mov
or
adc
data16
adc
ds
leave
add
in
mov
ins
icebp
mov
pop
fs
sbb
jo
push
nop
push
inc
inc
dec
xchg
push
arpl
fiadd
leave
cmp
sti
leave
add
mov
and
call
je
xor
push
(bad)
jnp
push
inc
xchg
add
mov
popa
pop
sbb
cmp
pop
jns
(bad)
cmp
jbe
das
jge
fisttp
mov
(bad)
lahf
aas
jnp
xchg
shl
das
loope
sbb
ror
test
dec
pop
outs
dec
jmp
xchg
push
mov
sbb
movs
popf
enter
neg
sub
ret
and
(bad)
jns
scas
fs
mov
fsubrp
mov
gs
mov
lods
hlt
mov
movs
loope
shr
retf
fnsave
or
sar
fistp
dec
mov
cmp
lea
push
ins
repnz
sti
add
int3
test
mov
push
cmps
push
add
mov
pusha
push
pop
pop
test
push
pop
int3
fidiv
mov
(bad)
out
arpl
sub
sbb
cmp
out
arpl
inc
in
or
mov
mov
jbe
out
(bad)
xlat
pop
mov
call
mov
mov
push
vpmacsdql
jne
push
enter
stos
int
mov
jecxz
and
out
mov
push
pusha
pop
and
mov
xchg
imul
imul
lea
mov
mov
(bad)
mov
pusha
inc
fcomp
fisub
pop
ret
pop
and
adc
(bad)
call
lods
mov
pop
rcr
inc
xor
jb
mov
test
lock
mov
sbb
xor
xchg
inc
dec
jge
ret
ret
setl
or
and
mov
call
or
jl
lods
pop
icebp
(bad)
lock
outs
jle
xchg
xor
cmp
jmp
inc
bound
pop
mov
js
xor
loopne
aaa
bound
inc
cmovp
pop
enter
sbb
out
mov
mov
inc
inc
pop
clc
popa
adc
inc
jae
mov
add
mov
xchg
xchg
mov
or
push
(bad)
cmps
jbe
aaa
gs
stc
je
outs
push
sbb
sar
and
pop
int
xor
cmc
sub
lds
pop
and
mov
pop
pusha
jo
pop
repnz
in
jg
fild
inc
test
inc
xchg
add
iret
jo
aas
pop
cld
dec
(bad)
mov
stos
lds
jecxz
dec
jmp
imul
imul
in
es
dec
add
adc
xor
jns
movs
push
or
dec
sbb
std
popf
adc
inc
rcl
scas
ins
mov
mov
mov
sub
(bad)
lds
push
jmp
fadd
dec
mov
xor
push
ss
sub
add
ret
fs
mov
fadd
ja
adc
mov
aam
lock
push
xor
inc
push
xor
mov
add
and
lods
pop
push
xor
cmps
pusha
mov
cmc
adc
jle
add
rol
pop
cmp
imul
xor
test
pop
ja
stos
cmp
rcr
sbb
sbb
sub
mov
xchg
out
imul
aam
fwait
lods
retf
adc
repnz
xlat
jg
mov
mov
add
or
lods
push
retf
nop
mov
in
ja
or
pushf
pop
dec
pop
repz
test
and
popf
xor
mov
push
ins
in
or
xchg
ret
mov
jl
ret
add
lock
mov
lock
or
pop
test
stos
and
popa
repz
fbld
cli
nop
push
push
repz
xchg
push
adc
(bad)
pop
xchg
cmps
ret
mov
test
mov
sub
inc
sbb
push
xor
mov
stc
add
jle
pop
leave
mov
adc
jp
fcom
adc
sub
aam
mov
test
mov
xor
mov
mov
fdivr
cmp
(bad)
jmp
push
aam
pushf
xor
mov
mov
shl
inc
mov
sbb
sub
pop
inc
xchg
addr16
pop
and
dec
jl
outs
xor
xchg
in
dec
cwde
lods
mov
mov
cli
pusha
div
std
lds
je
push
cmp
mov
aam
or
test
jmp
int3
cs
clc
ret
push
inc
cmp
cmp
cwde
in
inc
add
push
jmp
jns
push
mov
sbb
jge
pop
mul
out
ss
or
test
jp
mov
out
imul
popf
inc
sbb
push
ins
fdivr
add
loope
sahf
push
call
push
xchg
jno
scas
xor
out
xchg
scas
lea
push
or
out
out
dec
adc
mov
cmp
ror
xor
push
(bad)
aad
data16
in
iret
xchg
or
test
bt
or
mov
(bad)
mov
mov
mov
cmp
popf
dec
adc
movs
push
fidiv
and
cmps
fcmovnu
in
mov
pop
shl
int
lods
dec
pop
mov
and
jp
ror
and
retf
sub
cmp
inc
je
ret
cmp
and
inc
add
jg
dec
in
repnz
outs
into
cmps
and
(bad)
pop
push
sbb
sub
or
and
inc
adc
jb
std
data16
jmp
mov
clc
pop
shl
mov
dec
and
add
out
pop
rcl
pop
pop
movs
mov
mov
outs
rcr
pop
repnz
cdq
and
addr16
add
add
(bad)
push
jbe
dec
(bad)
rcr
mov
sbb
nop
cmp
lock
sub
retf
pop
jmp
push
or
inc
or
clc
or
push
popa
add
scas
sar
dec
jle
fisttp
cmc
ss
adc
mov
test
cwde
in
dec
pop
xlat
xchg
lock
addr16
fmul
push
test
aaa
aaa
sahf
cs
jle
inc
push
das
mov
jnp
push
fild
cmps
lock
test
retf
out
cwde
call
mov
enter
inc
mov
jbe
dec
jmp
mov
mov
out
adc
mov
out
dec
lods
add
cmp
adc
dec
xchg
or
out
mov
fnstenv
imul
stos
pop
mov
jae
mov
cld
retf
add
jmp
add
ds
jne
mov
aad
(bad)
inc
cli
dec
dec
loop
clc
aad
jno
or
inc
call
push
sbb
and
mov
dec
sub
cmps
add
test
ss
xor
and
jecxz
push
enter
dec
in
push
(bad)
dec
sub
(bad)
fcomp
or
mov
pop
xchg
adc
add
adc
mov
push
sbb
rol
mov
leave
mov
adc
cmp
sub
arpl
sub
cld
int
int3
retf
aaa
dec
dec
loop
sbb
es
pushf
cmp
aas
retf
lods
int
xor
add
popf
xor
call
cmp
xchg
push
xchg
nop
ins
inc
sub
out
loopne
aas
cmp
xchg
bnd
sti
mov
(bad)
call
mov
add
(bad)
mov
movs
mov
or
test
pop
add
je
xor
stos
dec
into
cmp
inc
fistp
dec
sbb
add
sbb
mov
mov
jge
add
scas
pop
pop
rcr
ja
test
or
lahf
int
cmp
mov
sbb
push
js
ror
in
retf
enter
push
or
(bad)
jl
or
(bad)
mov
xchg
or
xchg
and
daa
and
sahf
jge
jb
jbe
imul
fstp
ret
and
dec
mov
mov
stos
mov
lock
add
scas
xor
mov
js
(bad)
int
leave
dec
lea
leave
adc
jns
gs
mov
jnp
cmp
or
adc
jae
dec
xor
mov
rcr
xchg
lds
(bad)
imul
pop
out
sbb
call
cmp
mov
fdiv
es
lock
cli
xchg
or
(bad)
sub
jp
mov
pop
jbe
pusha
test
mov
sub
cwde
cmp
sub
jmp
fimul
stos
ror
lds
stos
imul
retf
shr
fsub
adc
mov
dec
js
icebp
clc
cmp
aad
jl
xchg
dec
or
js
pop
in
jmp
inc
ror
push
(bad)
cmps
pop
or
cmc
fbstp
push
fsubr
push
(bad)
retf
adc
in
(bad)
repnz
mov
jae
inc
jbe
pop
sahf
clc
mov
mov
ins
rol
ror
int
sub
(bad)
sub
test
call
dec
sub
xor
cs
and
outs
sti
pop
xchg
mov
fsubrp
outs
shl
inc
mov
and
cmp
mov
jae
movs
in
inc
jmp
(bad)
dec
push
loop
mov
mov
sub
sub
dec
ins
les
ret
or
adc
fwait
and
(bad)
push
ja
stc
dec
cmps
pop
(bad)
call
and
fistp
adc
imul
jecxz
xchg
out
mov
ins
mov
dec
jno
pop
lahf
inc
mov
sbb
inc
xor
and
jp
mov
xchg
cmp
push
mov
jecxz
add
daa
rcl
xor
out
adc
in
test
idiv
dec
stc
mov
arpl
mov
retf
call
ins
je
std
pushf
inc
mov
adc
fadd
sub
mov
outs
push
nop
in
cli
mov
jno
sub
mov
push
int
jp
js
lods
ins
mov
mov
cmp
jno
mov
repz
pop
repnz
lods
push
out
add
sub
jnp
hlt
mov
outs
(bad)
jecxz
pop
xchg
pop
mov
jno
out
sbb
scas
jmp
stc
mul
jle
das
jle
inc
imul
outs
cmp
imul
add
mov
(bad)
fsubr
scas
mov
test
jl
pop
mov
fild
mov
popf
xor
add
movs
shl
lods
mov
add
in
sahf
in
dec
jno
scas
popa
sub
jmp
adc
iret
out
test
ins
mov
mov
adc
rcl
fadd
cmc
add
scas
loope
inc
and
jae
inc
adc
stc
mov
inc
test
ds
push
fidiv
jl
mov
adc
in
pop
stos
test
xchg
out
add
lds
sbb
addr16
xrelease
into
jno
rcl
rsm
mov
jmp
jle
jo
call
xor
rcl
out
popa
adc
sbb
mov
in
enter
mov
and
jae
retf
jmp
sti
mov
jbe
retf
pop
shr
or
jmp
sbb
push
in
popf
arpl
dec
inc
pusha
push
stos
imul
pusha
vmovntdq
call
mov
cs
lahf
test
sbb
cmp
stos
lahf
cmp
(bad)
mov
lods
push
mov
in
in
xchg
shl
shl
add
mov
pop
ss
call
jbe
(bad)
sub
cmp
dec
xchg
rcr
xlat
pop
pop
adc
or
loop
rcr
cmps
aad
fidiv
and
add
or
xchg
ja
scas
xchg
pop
inc
ret
mov
inc
es
push
pop
pop
adc
jo
imul
pop
xor
stos
(bad)
(bad)
pop
jecxz
or
inc
js
mov
ins
dec
pop
les
add
ss
jbe
cdq
into
stos
mov
pushf
inc
rol
pop
shl
jne
push
repz
sbb
mov
inc
xchg
cmp
jle
imul
pushf
adc
loopne
cdq
sbb
push
call
dec
pop
fs
cmp
pushf
dec
int
mov
fwait
sub
inc
sbb
mov
pop
pmullw
xchg
cmps
call
ss
add
pop
add
jmp
popf
xchg
fisttp
jne
or
add
sub
inc
imul
push
mov
add
pop
sti
popf
hlt
xor
xchg
cwde
mov
xor
push
scas
stc
jge
int3
cmp
stos
stos
adc
cmp
add
ins
sar
push
lea
pop
dec
push
aas
test
pop
pop
inc
sbb
test
arpl
add
xor
mov
sbb
mov
push
mov
mov
add
cmps
arpl
sbb
or
push
dec
movs
stc
xlat
stos
dec
mov
out
add
sbb
push
push
stos
add
pop
pop
lea
push
jne
push
nop
test
shl
not
sbb
inc
xchg
pop
inc
and
push
jp
or
out
imul
xchg
xchg
pop
inc
les
nop
lods
and
inc
dec
aam
jne
add
or
mov
sar
loopne
or
or
mov
retf
xor
div
jge
idiv
jne
test
xchg
cs
pop
jbe
ret
push
retf
std
cmp
mov
and
jmp
mov
imul
jmp
mov
cmp
fisub
mov
dec
mov
cmps
jae
xor
sahf
movs
xchg
jns
mov
xchg
push
sti
push
or
fadd
jnp
rcr
sbb
into
pop
or
mov
add
mov
stos
jle
pop
mov
jno
(bad)
call
ja
and
lea
pop
loope
fisub
imul
ins
jbe
mov
fnstsw
les
sub
xlat
and
cmp
inc
cmc
iret
fwait
pop
xchg
dec
inc
arpl
cs
jmp
nop
and
retf
in
push
hlt
mov
and
inc
dec
sub
inc
push
push
jo
lds
ins
call
sub
add
in
pop
ins
test
push
cmp
mov
loop
add
popf
outs
mov
and
movs
sub
push
add
jl
int
test
jmp
pop
es
dec
mov
std
jo
jle
sub
lds
arpl
sub
cmc
mov
xchg
adc
fwait
jne
jb
cs
or
(bad)
(bad)
mov
dec
add
test
ds
xchg
pusha
in
sub
shl
(bad)
cli
jno
jne
mov
clc
jl
cmp
in
std
addr16
fild
adc
or
adc
pop
cmp
cs
mov
cmp
mov
pop
fnstsw
mov
pop
and
and
test
dec
mov
(bad)
mov
loop
add
test
das
popa
stos
xchg
ins
inc
fsubr
into
pop
pop
adc
pop
(bad)
push
popa
cdq
in
clc
stos
pushfw
inc
bsf
xor
fwait
inc
es
mov
je
pop
jae
enter
adc
pop
fld
cld
xor
rcl
inc
or
cmp
ins
xchg
loope
ins
or
repnz
aas
dec
mov
pop
(bad)
fadd
outs
fmul
push
aas
xchg
pop
rol
xor
leave
mov
movs
mov
leave
adc
push
dec
adc
sub
mov
test
and
sub
sub
mov
push
jmp
pop
retf
loope
stc
popa
into
arpl
mov
std
outs
fidivr
dec
ret
push
or
pushf
ins
xor
imul
call
pop
and
leave
inc
cmp
cdq
shr
out
xchg
cmp
outs
add
pop
fdiv
pop
jne
daa
std
push
fnsetpm(287
repnz
cdq
es
aam
fs
push
div
xchg
pop
pop
cmovae
jno
add
cdq
mov
push
or
loopne
adc
dec
inc
and
cdq
adc
gs
add
std
repz
pop
fucomi
mov
(bad)
dec
(bad)
arpl
je
not
aam
xor
sub
cmps
fs
jge
mov
sbb
or
fsub
jne
xor
loop
outs
adc
(bad)
dec
xor
mov
cmp
nop
mov
sbb
out
mov
pushw
xchg
sub
mov
mov
aas
je
std
cli
sub
cmps
lock
sbb
add
arpl
mov
js
jp
lds
push
adc
leave
popf
and
xor
pop
jno
int3
jl
ror
pop
std
dec
icebp
retf
add
ins
adc
ss
adc
mov
sbb
inc
cld
sti
cmps
inc
dec
dec
fwait
retf
popf
xchg
and
cmp
cmp
xor
data16
mov
xchg
push
stc
sub
leave
call
add
push
jns
cld
xchg
scas
ins
push
or
add
xor
xchg
mov
popa
pop
stos
pop
stos
call
pusha
aam
lods
dec
mov
cmp
push
mov
data16
pop
pop
stos
sbb
inc
lods
jg
enter
dec
mov
scas
add
ficomp
xor
or
lods
and
jge
aam
mov
imul
mov
push
gs
repz
cli
je
into
push
jecxz
dec
(bad)
xchg
loope
adc
or
inc
pushf
xlat
push
fs
loope
adc
test
sub
icebp
push
aam
mov
sbb
xchg
fs
pop
xor
iret
fist
hlt
cmp
push
pushf
movs
jae
dec
loopne
xor
ins
and
mov
add
pop
leave
mov
(bad)
lods
(bad)
cwde
xor
mov
pop
mov
dec
ret
push
gs
mov
pop
push
outs
inc
iret
mov
movs
xchg
sar
jecxz
je
aad
in
sub
lea
sar
ror
pop
inc
add
(bad)
test
fdivr
adc
mov
xor
mov
cmp
mov
js
pop
sbb
mov
dec
mov
(bad)
loopne
icebp
pop
mov
repnz
xor
or
leave
inc
sahf
jmp
mov
(bad)
int3
aam
pusha
push
add
xchg
sbb
jns
lods
sbb
mov
js
jl
inc
ins
cli
lods
dec
lea
or
jmp
lea
inc
jmp
mov
scas
pop
cmp
(bad)
leave
std
inc
mov
popf
and
jg
cmovne
mov
mov
fdiv
cmp
xor
aas
imul
inc
shl
cmp
mov
jbe
or
mov
add
clc
shl
fcomip
daa
fmul
sahf
stc
add
or
jle
inc
sahf
jle
inc
and
mov
add
cmc
mov
jecxz
es
retf
and
aam
adc
out
test
mov
out
push
and
in
out
es
xchg
push
jecxz
into
push
push
out
add
mov
in
aad
inc
xchg
and
and
xlat
sub
mov
mov
mov
or
into
pusha
iret
inc
inc
ja
out
sbb
je
mov
ins
je
hlt
mov
aad
xchg
add
or
mov
and
daa
sub
pop
xchg
aaa
xchg
inc
adc
mov
and
loope
and
jmp
cmp
scas
fidiv
sbb
ret
mov
pop
ffree
neg
ins
dec
or
cwde
add
mov
cmp
pushf
sbb
sub
push
dec
and
mov
push
xchg
dec
xchg
jb
das
fwait
gs
call
scas
lock
setae
push
jbe
push
dec
popf
test
or
dec
cmp
add
repz
mov
adc
lock
mov
call
mov
arpl
mov
stos
fucomip
nop
mov
mov
das
in
cmp
bound
pop
mov
mov
mov
push
ret
mov
aam
(bad)
in
mov
shr
cmp
lahf
stos
or
push
sbb
sbb
mov
mov
int3
mov
push
fld
xor
stos
push
jle
lahf
std
std
pop
add
ja
jno
push
in
xchg
jbe
dec
mov
and
cmc
ins
mov
jne
je
jp
std
in
out
stos
and
outs
icebp
mov
jns
push
rol
jae
into
jbe
mov
xor
add
je
pop
les
push
scas
adc
ss
mov
adc
cli
xchg
mov
call
xor
jo
mov
and
mov
jl
pop
mov
jmp
sbb
fcomp
sub
(bad)
jmp
mov
popa
div
lds
je
jb
add
gs
sbb
out
enter
out
fnstenv
cmp
jns
(bad)
push
rcl
xor
add
xor
dec
jae
mul
std
outs
adc
daa
jl
div
ins
dec
or
cwde
xchg
pusha
jmp
jns
mov
jmp
repz
mov
ja
retf
push
loope
xchg
inc
add
fisub
ins
imul
push
cmp
leave
push
mov
xchg
cmps
xor
ficom
cmps
mov
or
js
inc
les
push
mov
inc
jmp
mov
mov
push
data16
sub
mov
inc
and
push
sub
(bad)
sahf
(bad)
test
dec
pop
gs
lds
xor
sub
mov
lods
or
mov
fucomip
lea
gs
sub
aam
push
and
inc
int
sahf
pop
or
mov
test
add
out
jge
shl
fs
and
cli
clc
je
sbb
sahf
push
dec
push
dec
sub
sub
outs
sub
mov
pop
sub
imul
dec
xchg
xor
arpl
sbb
lods
ins
les
test
push
push
mov
std
inc
sub
sub
push
xor
jns
push
scas
data16
in
xlat
leave
out
daa
sbb
sbb
xlat
in
or
adc
mov
cdq
adc
mov
jno
shr
xor
jg
adc
jne
sub
aas
fcmovbe
ret
dec
jo
cdq
out
mov
xchg
or
call
push
rol
leave
mov
out
std
outs
loope
jnp
cmp
jge
and
mov
adc
call
mov
sub
add
fistp
mov
lods
movs
mov
lock
mov
jp
stos
imul
icebp
or
out
out
mov
cmp
leave
(bad)
sti
push
sahf
mov
cmp
aas
dec
xchg
xor
mov
push
jns
scas
(bad)
call
cwde
cdq
xchg
mul
lea
ret
arpl
adc
aaa
push
cli
pop
cli
iret
cmps
push
cli
int
movs
sahf
(bad)
jno
ret
adc
icebp
ret
ret
mov
pop
mov
jecxz
stc
mov
xchg
ins
mov
xchg
cmp
dec
sbb
sub
xlat
not
in
lods
(bad)
push
push
ds
jbe
imul
idiv
cmp
call
xchg
dec
ins
xor
pusha
mov
xchg
pop
xchg
adc
push
dec
pop
pop
stos
mov
addr16
(bad)
sub
add
fdivr
pop
mov
xor
cmp
inc
and
fiadd
adc
out
cmp
call
cmps
inc
add
push
daa
xor
ret
push
mov
push
mov
dec
pop
clc
shl
sar
gs
popa
ds
add
shl
gs
sbb
fistp
dec
jo
adc
lea
cld
lock
and
cmps
push
out
push
mov
loopne
test
sahf
stc
out
adc
faddp
(bad)
loope
sub
retf
mov
lods
push
inc
iret
aad
dec
dec
mov
lahf
mov
mov
iret
sbb
and
pop
mov
test
inc
shl
data16
out
jg
jle
jno
in
push
dec
leave
xchg
pop
mov
jae
pop
or
rol
ins
outs
jecxz
out
(bad)
rcr
sbb
mov
jecxz
(bad)
lahf
pop
sub
xchg
ret
cdq
dec
hlt
add
add
sub
mov
(bad)
dec
mov
loope
inc
xor
movs
test
xchg
aad
js
int
jp
dec
pop
jbe
sub
or
pop
sbb
or
aas
push
push
and
cmp
dec
push
lea
xchg
sbb
cmp
in
in
push
pop
ss
push
sbb
mov
jns
mov
mov
and
pop
imul
cmp
stos
cmp
call
lahf
div
add
cmp
add
mov
ins
sti
cmp
retf
je
lods
jmp
sbb
(bad)
(bad)
mov
jae
fist
aam
jl
aad
cmp
fs
jae
sbb
and
imul
je
loop
cs
sahf
dec
aaa
cmp
aam
fsubrp
cmp
(bad)
cmp
and
mov
out
adc
nop
pop
scas
pusha
in
fadd
jl
inc
scas
les
scas
cdq
iret
ss
add
push
add
ret
or
xchg
pop
retf
gs
jmp
push
mov
mov
adc
and
adc
add
xchg
and
mov
mov
sar
mov
das
inc
cmp
and
cmp
ja
icebp
popa
scas
mov
inc
xor
outs
idiv
(bad)
jecxz
fincstp
xchg
shl
gs
mul
and
inc
pop
shr
xor
icebp
pminsw
daa
test
aas
data16
mov
je
sbb
pop
inc
pop
mov
loope
jne
or
lods
xchg
xchg
sar
push
call
mov
lods
loopne
repnz
inc
push
mov
add
mov
xor
dec
fstp
xchg
mov
inc
mov
dec
nop
dec
mov
mov
repz
pushf
xchg
or
mov
enter
and
jmp
mov
shr
aas
repz
or
popf
enter
inc
lock
inc
or
mov
rol
ins
adc
add
mov
fstp
aas
mov
add
sbb
mov
loop
sub
or
rcr
jp
gs
mov
push
mov
or
xchg
jp
mov
shr
or
test
ins
mov
pusha
cmp
xor
cwde
mov
outs
in
push
inc
shr
sub
ins
daa
(bad)
(bad)
sar
retf
jae
xor
pop
fdiv
dec
js
xor
fidivr
jno
daa
cs
and
stc
mov
inc
bound
shl
stc
je
xor
jbe
rol
sar
mov
jbe
(bad)
xchg
mov
inc
rcr
int3
cmc
lods
iret
add
addr16
in
pop
gs
and
div
adc
aaa
es
enter
jmp
push
es
out
push
xchg
inc
mov
imul
mov
or
push
push
mov
pusha
adc
adc
push
(bad)
fs
cdq
es
pop
sub
push
pop
mov
sbb
adc
inc
test
mov
pop
sub
aas
cmp
mov
mov
int
add
push
aaa
and
js
jecxz
dec
test
mov
pushf
icebp
mov
mov
sbb
icebp
dec
pusha
ins
mov
jns
and
cwde
mov
loop
in
xor
adc
sbb
mov
jbe
cld
fidivr
xor
sbb
pop
add
xor
test
outs
or
sti
pop
rcl
add
daa
es
push
cwde
jne
xor
sar
jns
xor
cli
mov
dec
sub
mov
pop
ss
mov
hlt
pop
xchg
(bad)
xchg
je
sahf
aam
mov
outs
pop
pop
int3
add
mov
add
pop
jno
fild
aam
neg
sub
adc
ss
sbb
test
aad
sub
retf
mov
jae
enter
pop
cdq
pop
(bad)
push
neg
xchg
stc
lahf
cmp
repnz
call
stc
mov
cmps
pop
aad
rcr
(bad)
jp
movs
outs
or
or
aas
inc
pop
mov
pop
loope
mov
js
movs
cmovbe
ret
int
data16
jmp
mov
loopne
in
cmp
(bad)
fild
adc
xor
or
mov
sbb
xor
(bad)
lock
mov
jb
mov
jmp
mov
(bad)
std
cwde
sbb
scas
frstor
jle
lods
mov
mov
test
xor
jbe
je
adc
xor
sub
mov
loope
clc
(bad)
clc
push
popa
inc
adc
inc
jno
push
jmp
lock
jge
pop
mov
xchg
retf
or
cmp
rcl
or
repz
sbb
fwait
dec
and
call
in
fs
das
outs
sbb
adc
pop
mov
jp
popa
mov
inc
mov
mov
loop
xor
sahf
imul
push
push
lods
inc
ret
jle
mov
test
lods
fsubr
std
popa
add
mov
mov
mov
rcl
cmc
loop
enter
xor
xor
xchg
out
cdq
and
dec
jl
cmp
dec
es
leave
retf
jmp
mov
out
xor
imul
ds
mov
inc
pop
outs
in
test
dec
lods
pop
pop
inc
out
ss
sub
add
fsubr
xchg
mov
lock
jl
jl
or
ins
mov
loop
test
pushf
sbb
sub
sub
mov
arpl
cmp
cli
inc
or
in
jbe
sub
jb
sub
mov
iret
ja
popa
test
call
push
or
inc
mov
daa
fimul
rol
jbe
mov
jns
mov
jo
(bad)
cmp
mov
outs
adc
call
push
loope
xor
retf
xor
xchg
sti
push
mov
inc
xor
sar
std
sub
mov
retf
dec
mov
out
inc
sub
mov
lods
es
xchg
and
inc
test
call
pusha
lahf
popf
scas
or
lods
hlt
movs
lods
test
shl
arpl
xchg
jmp
rcr
inc
mov
inc
sub
dec
shr
inc
sti
fnstsw
aam
jmp
jl
imul
fimul
pop
rol
or
adc
mov
cdq
mov
ficom
(bad)
and
pushf
sub
sbb
or
xchg
or
clc
pop
in
mov
and
fisub
mov
jge
dec
and
xchg
or
mov
int
dec
scas
cmp
mov
jmp
xchg
pop
add
aaa
frstor
clc
push
(bad)
pop
pushf
es
sbb
jo
lods
add
lods
leave
scas
add
loop
sbb
es
clc
subps
push
mov
jns
iret
dec
(bad)
cli
ret
rcl
mov
sbb
aad
leave
pop
or
jmp
lods
push
push
jno
jp
sbb
imul
gs
fstp
das
cmp
imul
(bad)
popa
sbb
mov
mov
fnstsw
mov
push
jne
mov
inc
xor
sbb
mov
jne
daa
fs
shl
jp
pop
adc
ja
je
mov
ds
mov
sbb
dec
inc
jmp
jle
or
leave
aaa
pop
enter
(bad)
jbe
dec
daa
jp
xchg
pop
cmps
lods
cs
cwde
push
(bad)
retf
jmp
push
jno
mov
test
repnz
or
repnz
hlt
loope
call
sbb
mov
into
out
cmp
js
stos
push
stos
pop
cmp
xor
xchg
push
outs
pop
les
ret
hlt
pop
mov
(bad)
loop
pop
jp
or
sbb
xor
mov
shl
jns
test
adc
arpl
into
push
or
data16
daa
xor
push
pusha
adc
sub
mov
test
pop
xchg
arpl
mov
out
jp
sbb
jns
push
arpl
mov
in
or
mov
(bad)
and
or
ror
xchg
daa
pop
inc
es
push
dec
sub
in
repz
lock
mov
jl
(bad)
push
int3
dec
sahf
dec
cdq
mov
movs
add
jnp
inc
inc
mov
adc
cli
bound
and
ror
lods
mov
cld
xor
push
ss
aas
pop
push
add
mov
fwait
xor
in
bound
xchg
mov
retf
repnz
push
or
xor
je
out
sub
call
in
je
push
cs
add
fsubr
ror
nop
stc
dec
fidiv
je
out
mov
jle
jmp
inc
ret
xchg
ja
and
inc
iret
cli
push
xor
repz
sbb
loope
pop
xor
add
push
out
std
inc
or
cmps
js
jp
imul
xchg
xchg
into
jae
jne
dec
jo
sub
stos
adc
push
mov
shr
dec
mov
sar
xchg
cwde
loope
retf
scas
or
stc
xchg
imul
fistp
jle
cdq
xor
outs
ds
mov
mov
push
rol
adc
mov
out
adc
sub
leave
fsub
mov
enter
pusha
lods
sbb
in
stc
jbe
inc
push
jg
not
xchg
pop
retf
xor
cld
adc
push
mov
cmp
das
push
mov
movs
jge
adc
jns
cs
inc
dec
mul
cmp
pop
mov
dec
lods
scas
and
ret
and
dec
add
fistp
test
cmp
je
dec
lods
stos
cld
or
push
push
mov
call
cmps
pop
adc
mov
push
sub
loopne
into
(bad)
push
jmp
popf
jmp
dec
int3
mov
(bad)
jns
cmps
pop
mov
pop
fcmovnu
lds
pop
mov
sub
(bad)
js
and
adc
out
jg
pop
outs
mov
mov
cmp
cmp
idiv
xchg
jne
div
lods
push
mov
div
dec
push
ja
jne
sti
add
les
mov
(bad)
jne
sti
cli
bound
sub
pop
cmp
sub
push
sub
xchg
adc
aam
fadd
fs
and
lods
mov
idiv
div
jno
dec
(bad)
fcom
jg
out
out
xor
loope
aad
or
pop
je
pop
pusha
les
and
cmps
nop
xchg
or
dec
dec
jo
pop
inc
jae
outs
dec
rcr
sbb
push
xchg
out
mov
adc
inc
add
push
aaa
xor
jecxz
scas
repz
dec
jg
jp
mov
mov
fs
shl
pop
mov
sbb
or
mov
adc
stos
out
add
mov
out
ja
sbb
mov
leave
jge
fs
ins
sahf
and
pop
dec
loop
movs
sar
mov
mov
or
sub
out
ds
mov
ficom
inc
fld
iret
arpl
mov
xchg
push
cmp
push
sahf
lods
mov
(bad)
loope
arpl
stos
adc
mov
or
mov
rcr
in
scas
pop
cmc
dec
add
xchg
inc
jl
lea
xor
and
xor
sub
inc
jmp
xchg
pop
retf
jnp
test
das
rcl
(bad)
dec
mov
(bad)
js
shl
cld
jae
pop
jecxz
int3
or
push
lods
das
sub
popa
xchg
in
sub
mov
mov
fist
(bad)
div
in
or
push
inc
mov
arpl
(bad)
in
cmps
mov
or
or
aas
add
or
push
xlat
movs
xor
pop
adc
xchg
scas
rcl
add
xchg
xor
inc
add
enter
xchg
outs
pop
push
cli
fs
icebp
mov
adc
out
fs
pop
jne
clc
xor
jb
mov
dec
mov
dec
in
mov
xchg
ds
int3
lds
test
jo
jo
push
(bad)
outs
mov
jmp
cmps
xchg
mov
ins
jo
and
jp
xchg
jne
lods
test
cwde
outs
or
pop
ins
pop
pop
in
push
imul
adc
pushf
push
mov
das
lods
fld
and
nop
fwait
mov
and
inc
ss
inc
mov
dec
xor
cmps
mov
xor
mov
das
adc
loope
leave
rcr
fild
dec
js
push
mov
cmp
add
sub
mov
cmp
std
pusha
(bad)
jns
outs
imul
push
mov
adc
jl
mov
adc
push
mov
stos
cmp
push
out
mov
mov
rcr
inc
mov
sbb
ins
sub
leave
cmp
cwde
sti
mov
rcl
add
mov
repz
or
ins
into
jb
sub
ins
fnstenv
pop
xor
leave
data16
cmp
inc
call
pop
call
add
push
int3
pop
jno
sar
aaa
cld
xchg
add
ret
mov
and
xlat
scas
push
and
dec
and
retf
gs
or
mov
xchg
dec
adc
gs
push
mul
and
dec
sbb
loope
add
fcmovu
imul
dec
imul
sbb
cmc
mov
mov
adc
mov
call
out
iret
pop
cmc
add
mov
ja
add
dec
ror
and
xchg
clc
out
das
out
mov
inc
in
scas
adc
mov
or
and
mov
mov
pushf
jno
and
jo
sbb
or
outs
jg
inc
arpl
mov
mov
mov
imul
push
repz
aad
inc
jo
int3
adc
sar
pushf
jbe
sub
jb
in
arpl
(bad)
or
(bad)
iret
cmp
mov
xchg
dec
sbb
fwait
xchg
fwait
or
sbb
enter
pop
call
pop
adc
std
mov
pusha
pop
xchg
(bad)
fistp
aam
lock
xchg
mov
ror
aam
test
xor
loope
xchg
(bad)
pop
fmul
lahf
cmp
xor
jge
sti
jle
mov
mov
push
dec
xor
dec
pop
and
push
in
repnz
cdq
ins
adc
xchg
mov
or
pusha
sub
retf
mov
out
out
retf
cmc
push
iret
xchg
call
fabs
push
push
int
xchg
cmc
xor
rol
enter
pop
mov
cmp
out
or
ins
cli
dec
stos
scas
sahf
lods
test
pop
cdq
fdivr
pop
out
xchg
jnp
and
rcr
sbb
xor
or
sbb
fwait
cwde
out
push
mov
cmc
jae
pop
cdq
cmp
push
mov
xlat
scas
retf
jmp
iret
cwde
pop
sub
mov
movs
arpl
out
imul
adc
fst
adc
rcr
cli
xor
adc
xor
pop
cmp
and
daa
test
xor
push
in
bound
mov
mov
push
xor
out
xor
xchg
push
sub
clc
and
add
test
pop
mov
pop
cdq
call
es
sbb
pop
mov
sbb
out
into
retf
(bad)
push
push
xor
mov
or
inc
push
(bad)
or
in
or
fcom
fimul
loope
or
fidiv
xchg
(bad)
out
mov
icebp
fcomi
ror
ins
outs
push
ss
push
out
push
mov
cdq
inc
jno
xor
sbb
inc
fs
hlt
scas
inc
adc
ror
sub
push
jns
xchg
sar
lock
inc
dec
retf
shl
je
scas
sbb
sub
imul
out
into
test
add
hlt
or
and
mov
mov
sub
cmps
xchg
pop
fcmove
jae
xchg
push
or
push
aaa
fsubr
or
pop
test
cs
jno
int3
cdq
outs
(bad)
mov
xchg
jb
mov
es
jbe
xchg
in
push
add
push
fsqrt
adc
fstp
jae
aas
pmaxub
mov
inc
jae
shl
lds
iret
fs
or
inc
push
adc
push
dec
not
dec
dec
mov
inc
pop
fucomp
push
jl
adc
icebp
lahf
mov
vpshlq
test
and
inc
jp
ja
(bad)
int
jns
pop
jns
xlat
outs
aad
out
daa
mov
jmp
cld
xchg
mov
hlt
mov
and
sub
data16
adc
push
dec
adc
adc
dec
enter
jne
xor
xor
repz
pop
movs
cmp
leave
pop
add
in
xor
aas
jle
dec
mov
gs
ret
stc
ins
push
dec
sub
push
sbb
out
mov
cmp
std
sbb
sub
sbb
push
or
xchg
shr
in
jg
xchg
rcr
add
cwde
lods
cs
sub
mov
jge
call
ins
sti
push
js
scas
lea
mov
add
push
inc
dec
sbb
cld
loope
mov
adc
outs
mov
pop
mov
ins
mov
int
scas
bound
mov
retf
dec
sub
jl
dec
(bad)
(bad)
mov
inc
pop
dec
jno
dec
rcr
nop
stos
dec
add
xor
dec
aam
mov
outs
aam
ret
in
ds
sbb
bound
das
mov
cld
lahf
movs
xchg
lds
scas
repz
mov
add
inc
(bad)
outs
lock
mov
jle
mov
fnstenv
sahf
inc
and
fiadd
push
xchg
sbb
and
dec
(bad)
aaa
enter
out
adc
stc
outs
jbe
fwait
je
jne
push
add
bnd
adc
dec
in
fcomp
lock
cmps
xor
call
cmp
xor
xchg
test
push
jmp
lea
sbb
or
(bad)
js
pop
daa
push
push
in
pop
sbb
outs
loop
arpl
xchg
jl
movs
pop
pop
mov
cmp
xor
lock
jmp
xor
or
push
iret
in
xchg
xchg
ds
cmp
idiv
push
xchg
push
and
cli
adc
or
inc
cmps
push
fisttp
mov
sub
ret
mov
sub
enter
pop
pop
or
push
leave
dec
(bad)
mov
or
and
xchg
adc
add
xchg
scas
ja
add
icebp
mov
mov
pop
aam
xchg
adc
add
mov
cmp
mov
jl
cmp
and
out
push
lds
cwde
cmp
jbe
into
aam
xchg
mov
or
movs
pop
or
sbb
imul
repz
inc
add
jg
cmps
(bad)
mov
scas
int3
mov
(bad)
daa
xchg
arpl
dec
je
push
fwait
arpl
mov
enter
leave
cmp
mov
movs
or
pusha
xchg
pop
xchg
xchg
sbb
bound
sti
jl
sbb
imul
(bad)
ja
push
ins
sar
jne
into
sti
pop
push
mov
push
movs
and
outs
push
mov
xchg
jp
int
xchg
leave
pop
sar
and
jns
cli
ins
pop
idiv
mov
inc
inc
cmp
loope
outs
xor
(bad)
scas
lods
sub
mov
sar
push
aad
cmp
push
fwait
mov
xor
inc
scas
imul
fdiv
pop
jae
sbb
(bad)
jp
arpl
popa
and
aaa
xor
(bad)
ja
ret
mov
push
add
jbe
or
ds
pop
mov
pop
retf
add
cmp
inc
adc
mov
out
popf
mov
mov
dec
cmp
fst
xchg
push
data16
sub
pop
dec
out
(bad)
aam
push
cs
mov
lahf
push
fimul
call
and
imul
mov
and
test
inc
retf
add
dec
jne
arpl
ret
jbe
rcl
and
jnp
in
hlt
rcr
pushf
sub
ins
ja
(bad)
push
mov
push
fcomp
mov
ret
call
pop
inc
mov
cmps
js
pop
jae
add
cmp
inc
inc
and
out
pop
sar
call
sub
jl
sahf
mov
ffreep
add
dec
add
inc
outs
jmp
cli
leave
push
sbb
icebp
rcl
pushw
sbb
or
ss
fcomp
sahf
in
mov
es
fcomp
and
and
push
ja
or
cmp
xor
in
pop
dec
jne
or
or
jne
stos
fstp
(bad)
fisttp
lds
dec
fnstsw
fxch
jecxz
jne
sub
repz
xor
jl
daa
jl
mov
inc
(bad)
mov
ret
inc
lods
cmp
mov
loope
sbb
pop
psadbw
cmps
mov
in
shr
ret
shl
imul
cmp
xchg
stc
fstp
fadd
out
push
inc
lea
stos
repnz
cmp
(bad)
cdq
sub
adc
in
pop
cmc
cs
and
call
inc
adc
or
ja
jae
adc
cld
mov
mov
mov
aas
je
aam
mov
ins
in
shl
adc
push
out
call
js
in
push
test
stos
mov
popf
dec
out
push
push
inc
or
sahf
sub
ret
xchg
outs
xchg
ins
loope
jb
rcr
cmp
neg
sti
jg
adc
dec
or
mov
jle
adc
sub
pop
xchg
mov
movs
xchg
push
std
mov
xchg
cli
pop
or
out
add
cmps
mov
jns
pop
cdq
aaa
push
sub
pop
enter
add
mov
cs
mov
cmc
mov
jle
repnz
inc
push
pusha
(bad)
lahf
mov
jmp
lea
ss
pop
ins
jmp
xlat
popa
push
jg
int
fisub
dec
lahf
(bad)
rcr
nop
aas
jmp
cmp
jmp
xlat
lods
xchg
ret
mov
adc
mov
sub
mov
into
stc
cwde
and
mul
pusha
leave
dec
stos
or
xor
inc
sub
jae
mov
mov
std
xchg
fisub
loope
xchg
sahf
push
cmp
mov
(bad)
in
push
xor
adc
cwde
jb
int
ins
dec
loop
mov
jmp
and
popf
mov
push
jns
les
jmp
mov
xor
call
out
or
pcmpgtb
pop
out
and
outs
dec
stc
in
mov
push
xor
mov
mov
xchg
dec
lods
inc
jecxz
mov
test
jnp
imul
push
sbb
imul
ret
push
fstp
push
(bad)
sbb
jno
out
inc
scas
pop
into
es
pop
test
jb
dec
nop
push
cli
dec
inc
or
jo
movs
or
push
add
xor
jbe
movs
push
sbb
das
mov
push
mov
pop
mov
mov
shl
mov
jo
aam
hlt
xchg
outs
dec
dec
test
fwait
lock
fs
sti
int
mov
dec
rcl
loop
shl
enter
pop
ror
pop
cs
mov
out
mov
popf
jecxz
sub
xchg
aaa
xchg
mov
xchg
xchg
fnstenv
xor
pop
in
in
inc
push
dec
inc
add
mov
push
mov
push
xor
(bad)
or
push
enter
xlat
stos
scas
ins
movs
sbb
add
sahf
add
gs
loopne
scas
movs
shl
jmp
jmp
nop
outs
pusha
pop
dec
xor
sbb
adc
push
ret
jae
dec
aad
inc
fisubr
bound
mov
test
shrd
inc
popf
push
dec
mov
pusha
or
mov
gs
pop
jecxz
shl
or
outs
or
dec
cmp
xchg
popf
or
std
mov
pushf
retf
cli
into
inc
mov
inc
in
sar
shr
ja
add
aam
fs
jp
aaa
ret
fnstsw
xchg
push
fdivr
cld
jecxz
pop
jb
cmps
jmp
push
push
add
loopne
mov
nop
xor
jle
jnp
(bad)
int
in
or
lock
dec
repnz
call
test
not
adc
(bad)
sbb
sti
push
pop
lea
push
lock
mov
sub
lods
out
xchg
cld
mov
pop
xor
jecxz
imul
inc
adc
pop
mov
int3
or
mov
inc
cmp
div
sub
sub
jl
into
stos
or
inc
push
sub
jp
repnz
test
mov
iret
mov
sub
ins
push
cmp
jle
cmp
pop
mov
mov
mov
(bad)
cld
mov
mov
rol
in
jbe
pop
mov
push
pusha
xor
arpl
out
cmp
xchg
scas
out
jb
jmp
and
int3
cmps
adc
add
fcomp
push
cli
and
in
push
mov
xchg
lea
mov
pop
sub
pop
mov
std
test
xor
ins
sbb
mov
imul
and
sbb
sbb
mov
fistp
daa
mov
mov
jmp
adc
push
div
ins
pop
and
into
mov
mov
xor
js
daa
add
add
aas
xchg
adc
sub
or
ja
out
lods
shl
jmp
clc
(bad)
mov
nop
or
popa
cmps
jp
push
or
inc
fstp
rcr
inc
mov
add
xchg
or
test
pushf
sahf
in
pop
stc
ret
mov
movs
lods
push
mov
loop
sbb
repz
sub
inc
test
mov
(bad)
popa
popa
mov
scas
xchg
mov
and
sub
call
stc
sbb
and
jns
fwait
aam
ret
push
sub
ffreep
stos
dec
mov
push
movs
mov
dec
and
retf
hlt
(bad)
out
stos
cmp
mov
mov
fs
imul
cli
mov
(bad)
adc
daa
clc
leave
xchg
add
popa
(bad)
sub
je
or
out
push
jno
xor
cld
mov
add
xor
fdivr
adc
aaa
jns
push
push
mov
inc
je
or
out
mov
jmp
in
data16
in
jae
fdiv
mov
pop
out
and
mov
sbb
and
jl
jmp
inc
mov
lods
and
scas
mov
(bad)
pop
mov
les
xor
test
popf
(bad)
sbb
retf
push
pop
pop
xor
fidiv
or
aam
(bad)
xor
push
pop
call
push
paddb
sahf
xchg
cmp
mov
pop
ins
clc
jg
(bad)
or
mov
push
or
int
mov
push
std
adc
xchg
sbb
psrad
stos
loope
sub
sar
mov
pop
push
pop
arpl
adc
cmc
ja
sbb
pop
xchg
add
scas
xchg
mov
ja
pop
fs
std
push
xchg
jo
adc
push
mov
daa
add
mov
cmp
lahf
(bad)
fadd
dec
lods
lds
call
add
fs
movs
or
xor
imul
dec
ret
sub
cmps
or
and
or
xor
repnz
stos
and
or
mov
mul
(bad)
pop
aas
cli
test
scas
das
in
xchg
ficomp
inc
stos
push
add
cmp
stc
sbb
sbb
add
in
out
dec
lds
(bad)
sar
pop
pop
ret
out
scas
mov
inc
iret
sbb
jmp
aad
iret
mov
jg
mov
pop
inc
jg
sahf
dec
inc
or
test
push
inc
mov
sub
out
inc
stos
(bad)
rcr
lds
retf
cmp
cs
push
in
dec
std
std
or
mov
mov
cmps
sti
movs
call
stos
push
push
xchg
mov
cwde
lea
je
mov
mov
sub
mov
inc
mov
mov
dec
int3
pop
retf
fcom
maxps
test
cmp
sub
ins
std
inc
(bad)
mov
mov
jle
pop
sbb
js
je
xor
test
mov
mov
pop
push
out
out
cmp
mov
jp
mov
call
pop
xchg
sub
pop
inc
mov
(bad)
jmp
sahf
mov
and
and
stc
or
icebp
stos
sti
fsub
xchg
clc
fisub
jmp
push
ja
jge
or
jmp
pop
or
lods
mov
(bad)
mov
jl
sbb
adc
mov
inc
mov
popa
push
clc
cmps
jmp
shl
ror
sub
inc
test
pop
das
jne
outs
mov
and
dec
aaa
mov
out
jg
inc
push
push
add
push
adc
sbb
mov
movs
pop
ja
xor
push
scas
out
sbb
sbb
mov
lods
dec
inc
cmc
xor
daa
mov
imul
imul
jecxz
enter
xor
inc
pop
fistp
mov
scas
cmps
lds
repnz
jge
ret
mov
jo
dec
push
test
ss
jmp
jno
sbb
and
lea
daa
inc
sti
adc
cli
jle
pusha
and
inc
mov
ja
movs
test
out
out
icebp
and
adc
test
test
out
or
fmul
dec
dec
icebp
pop
jb
jg
fwait
cmc
loop
xchg
adc
jecxz
jae
sub
js
retf
repz
sub
lods
xchg
xchg
dec
push
imul
push
cmp
lods
mov
(bad)
leave
jno
mov
push
add
inc
xor
repz
xchg
(bad)
pop
push
xchg
pop
push
push
add
out
jg
mov
fsub
sub
adc
stc
pop
or
into
xchg
mov
push
add
push
(bad)
in
jmp
push
mov
sbb
ror
retf
or
dec
pop
dec
add
pop
xchg
pop
std
repz
into
inc
mov
or
mov
repnz
daa
test
popf
rcr
arpl
addr16
or
cmp
mov
lock
pop
cwde
loopne
repnz
mov
fcomp
gs
add
fwait
movs
inc
xchg
mov
lahf
mov
sti
pop
mov
pop
ss
jg
mov
xor
lds
cmc
mov
imul
xchg
inc
les
inc
retf
xchg
out
jmp
fiadd
clc
sahf
push
or
mov
cmc
jmp
mov
shl
icebp
push
push
and
out
cs
mov
clc
pop
xlat
or
cmps
and
in
mov
rol
clc
stos
sbb
clc
sub
or
lock
in
push
das
aam
jg
xchg
push
jmp
ja
clc
jg
push
leave
sar
cwde
imul
dec
mov
sub
adc
lahf
ins
dec
add
sar
std
add
loop
xor
cmp
sbb
sub
data16
jmp
add
push
push
jp
xchg
or
int3
adc
test
inc
mov
call
mov
mov
sbb
push
loop
loop
inc
add
(bad)
out
in
mov
xor
jmp
push
dec
mov
test
inc
add
test
pop
sbb
call
mov
sahf
push
daa
aam
ret
ins
jle
push
iret
mov
lahf
or
adc
adc
addr16
mov
popf
out
inc
or
xchg
jecxz
ds
jo
adc
sub
pop
lahf
retf
aam
adc
into
and
(bad)
and
inc
push
dec
xchg
ins
sbb
jae
ret
retf
xchg
push
or
adc
lods
fwait
ins
test
loopne
add
xchg
and
and
or
jge
adc
iret
push
in
pop
ins
jg
(bad)
cdq
xchg
stos
mov
jnp
xchg
push
daa
popf
int3
das
inc
movs
inc
out
test
outs
(bad)
jg
jmp
out
ins
mov
js
push
out
cmp
je
in
mov
adc
out
adc
mov
jb
xor
mov
cmc
mov
pusha
xchg
rcl
xchg
pop
mov
lahf
test
jecxz
dec
push
arpl
cmp
out
or
pop
cmp
mov
inc
mov
xchg
inc
pop
jle
and
cmp
push
sub
jo
retf
sbb
jmp
js
call
out
dec
icebp
push
scas
out
mov
test
pop
mov
adc
lods
cwde
cmp
jnp
add
jo
xlat
dec
cld
aad
in
and
fs
ja
lods
cld
cmp
clc
test
sub
pusha
(bad)
dec
aad
add
xlat
in
inc
inc
sub
stc
call
ds
dec
cld
test
cwde
dec
loop
pop
push
fsub
aad
out
lahf
test
pop
neg
mov
xchg
xchg
(bad)
push
pop
xchg
pushf
lock
mov
mov
lea
jmp
je
bound
xor
jg
lock
pop
or
xchg
in
lock
add
stc
pop
fiadd
(bad)
and
ss
inc
popf
inc
or
pusha
icebp
push
leave
es
xchg
(bad)
cmp
xor
jp
aas
adc
pop
stc
std
mov
jns
mov
iret
popa
cwde
sbb
(bad)
mov
repz
in
add
mov
addr16
add
dec
inc
inc
and
aad
xchg
push
or
mov
bound
movs
sub
inc
pop
mov
dec
jae
mov
mov
les
inc
(bad)
push
or
adc
lea
mov
nop
jecxz
inc
scas
lods
(bad)
mov
jne
xor
sub
cs
xchg
scas
stc
out
mov
add
mov
sbb
call
les
jnp
shr
sub
addr16
sbb
xchg
(bad)
push
xchg
ret
cld
dec
xor
push
xor
push
sub
cmp
xchg
push
das
jnp
dec
xchg
aam
push
aam
fwait
(bad)
push
loop
xchg
retf
xor
jmp
stos
inc
adc
adc
test
mov
adc
jge
mov
sahf
jno
mov
cld
xor
and
push
mov
xor
mov
jb
mov
ss
jg
(bad)
adc
cmp
imul
xor
or
xchg
retf
cli
mov
movs
add
and
test
adc
sub
xchg
enter
icebp
push
cdq
ss
pop
xor
stos
or
add
jns
xor
or
js
into
mov
xor
push
mov
test
stos
hlt
addr16
xchg
aas
mov
jp
push
cmp
loopne
push
mov
mov
ret
popf
rcl
inc
jmp
xor
cli
cmps
and
xchg
imul
int3
mov
cmovg
es
out
in
sbb
sub
xchg
sub
mov
pop
push
and
mov
adc
mov
mov
ud1
mov
and
jecxz
pop
inc
arpl
les
jl
sub
in
sbb
or
scas
rcr
bound
mov
lahf
mov
ins
test
mov
cdq
mov
leave
xchg
jl
jne
retf
daa
sub
lea
xchg
fnstcw
mov
mov
retf
retf
ret
daa
mov
dec
out
gs
mov
fwait
push
or
cmp
fdivr
inc
popa
dec
movs
sbb
out
mov
add
cmp
idiv
mov
inc
xchg
inc
mov
pop
inc
adc
js
mov
push
adc
lds
sbb
movs
inc
jb
mov
xchg
test
dec
adc
out
cmp
int
jbe
jmp
or
cmp
mov
pop
pop
les
imul
push
xor
push
mov
(bad)
jge
or
dec
hlt
ret
lods
mov
scas
sbb
sub
push
push
movs
mov
jp
jl
mov
mov
jle
mov
pop
sahf
push
les
push
cmp
cmps
fbstp
inc
xor
inc
mov
out
mov
aam
adc
pop
xor
sbb
pop
rcl
mov
jmp
xchg
iret
ss
mov
sahf
mov
jne
fwait
les
inc
lods
(bad)
push
xchg
int
neg
cwde
mov
adc
rcr
dec
nop
pop
mov
add
cmps
jmp
mov
stos
mov
retf
(bad)
pop
pop
pop
mov
aas
mov
pop
cmps
stc
add
adc
mov
arpl
inc
ins
das
fsubr
ss
lods
push
out
lahf
int
(bad)
mov
push
int
test
mov
icebp
rcr
(bad)
(bad)
adc
and
cli
adc
sub
sub
mul
sub
or
int3
xor
cmp
sub
jns
dec
fimul
(bad)
fld
or
(bad)
(bad)
or
sub
add
icebp
in
fld
jbe
mov
jle
push
adc
movs
xchg
jmp
popa
pop
xor
dec
cli
mov
lds
movs
mov
xchg
add
imul
ror
pop
pop
dec
je
sbb
xor
rol
and
or
arpl
push
aad
or
fstp
push
sti
repz
ds
in
loopne
jns
icebp
scas
imul
(bad)
dec
fadd
inc
imul
ret
sub
aaa
push
pop
imul
push
cdq
or
push
xor
xchg
jle
xor
in
inc
test
pop
loop
in
pushf
dec
mov
test
jmp
loop
push
mov
ins
sub
ss
popa
jno
nop
and
jp
jle
jl
push
mov
call
retf
jecxz
cdq
xchg
loop
mov
push
mov
push
ss
cmps
in
ret
pop
stos
addr16
dec
ins
xor
sub
mov
mov
inc
mov
jl
fdiv
ret
loope
push
mov
push
jne
fimul
jb
dec
movs
int
cmp
mov
out
mov
je
(bad)
mov
lods
hlt
cmp
sti
xor
mov
rcr
fs
pop
dec
mov
push
jnp
inc
dec
cmp
inc
dec
out
outs
sub
retf
xor
test
int
jmp
pusha
mov
je
sub
pop
clc
iret
enter
aad
jb
call
icebp
imul
jg
fcmovne
add
ret
retf
and
leave
sbb
pop
(bad)
hlt
add
sbb
mov
push
outs
adc
fisttp
xor
fsubr
call
xchg
cmp
int
sub
cld
cmp
out
and
sahf
in
mov
arpl
pop
jbe
aam
or
pop
scas
sub
popa
sbb
ds
xor
push
bound
iret
loopne
push
(bad)
dec
out
add
mov
mov
mov
cmps
and
xchg
mov
or
je
sub
aam
mov
adc
dec
pop
popf
aad
dec
fisttp
xor
lea
retf
cmps
cdq
test
aam
cmp
iret
div
test
push
or
icebp
int
enter
aad
iret
out
sar
(bad)
(bad)
scas
frstor
inc
cmp
xchg
retf
call
sbb
inc
dec
mov
fstp
jne
dec
bound
mov
or
pop
shl
xor
mov
jo
rcl
cmc
int3
jno
popf
pop
rol
inc
pop
pop
call
xchg
sub
xchg
jnp
aaa
mov
push
int3
bnd
jb
sub
jnp
sub
pushf
inc
xlat
pop
lock
mov
mov
in
jne
enter
scas
retf
scas
scas
popa
fwait
ins
sub
repnz
fisttp
stos
mov
dec
jge
shr
jmp
add
push
dec
and
test
push
xor
(bad)
inc
xor
or
mov
adc
ins
sbb
test
or
cmp
push
(bad)
sub
mov
(bad)
jmp
je
mov
ja
and
push
push
push
add
xlat
jge
stc
ins
mov
ins
mov
cmc
int
mov
mov
mov
dec
mov
leave
test
add
gs
adc
cmp
jg
cmp
repnz
shl
pop
fdivr
shl
shr
cmps
aas
or
push
sub
pop
sbb
(bad)
in
push
imul
nop
sti
ds
int3
or
ins
inc
clc
and
ds
or
out
sbb
cmps
xchg
es
div
(bad)
cmp
rcl
pop
pop
(bad)
stc
add
jecxz
pop
jl
test
xchg
add
cdq
ficom
out
dec
mov
repz
jmp
int
scas
mov
stc
add
jmp
enter
sub
cmp
pop
push
into
add
sbb
mov
xor
mov
jmp
inc
test
jl
cmp
mov
out
sbb
fstp
cdq
cmc
in
push
xchg
pop
mov
rol
lods
data16
inc
inc
fisub
inc
ja
mov
inc
aaa
mov
pusha
outs
push
mov
sub
loop
xchg
call
je
rcl
pop
xor
rcl
and
scas
ss
adc
lock
inc
loop
sbb
adc
mov
psubw
(bad)
mov
and
pop
cmp
lock
(bad)
sbb
jne
in
inc
pop
sahf
push
idiv
mov
je
cli
daa
pop
mov
mov
xchg
in
dec
cli
inc
sub
cmp
fild
lods
pop
pop
clc
inc
jae
mov
adc
inc
outs
enter
sub
add
xchg
(bad)
mov
xor
out
and
rcr
jno
cmp
inc
test
fsubr
xchg
pop
jecxz
shl
mov
sbb
mov
(bad)
in
lahf
in
and
xchg
sbb
retf
sub
aad
fisttp
pop
add
push
cwde
dec
xchg
loope
cmp
fild
cwde
jmp
and
push
push
sub
and
push
iret
inc
and
sbb
ret
xor
cmc
push
aad
push
jmp
clc
stos
mov
push
cmps
daa
mov
jbe
loope
pop
lahf
mov
inc
dec
out
dec
movntq
ja
adc
sub
mov
pcmpeqb
cli
test
and
hlt
cld
(bad)
inc
add
sbb
lahf
aaa
pop
mov
push
sub
pop
jo
push
inc
icebp
mov
mov
aam
sbb
cmp
pop
std
in
xchg
es
sub
dec
cmp
jl
xchg
and
sub
adc
ret
add
(bad)
rol
popf
or
pop
xchg
or
pusha
or
icebp
enter
dec
scas
adc
mov
fisttp
ja
mov
fcomp
jo
adc
xchg
inc
push
fsubr
push
jge
push
and
inc
mov
fmul
jge
mov
push
rcr
mov
shr
or
pushf
mov
addr16
loopne
(bad)
adc
mov
jle
push
(bad)
jbe
loopne
sti
adc
sbb
inc
push
test
inc
xchg
push
loop
mov
call
fs
dec
mov
int
cdq
xlat
sbb
cdq
call
push
in
(bad)
lock
adc
test
ror
test
sub
mov
mov
or
jg
fnstcw
iret
push
jno
leave
pmuludq
pop
pop
fimul
dec
mul
dec
add
outs
popa
mov
xchg
cwde
loop
sbb
scas
mov
and
dec
dec
push
push
fmul
dec
shr
push
jge
in
bound
push
xchg
shr
scas
mov
xor
push
push
mov
sti
test
ret
and
mov
mov
das
lods
test
das
imul
mov
xchg
out
(bad)
retf
jge
push
movs
(bad)
shl
jns
pop
fadd
inc
xor
add
fcmovu
clc
aas
std
inc
xor
test
xchg
mov
test
(bad)
push
nop
sbb
push
mov
jmp
xor
mov
test
or
sub
(bad)
cmps
cmp
pop
xor
push
(bad)
mov
mov
push
mov
jae
js
ret
sub
aam
mov
dec
mov
pop
jmp
dec
adc
rol
xlat
fist
mov
mov
xchg
pop
sbb
adc
and
xor
mov
mov
lds
sub
into
in
std
(bad)
scas
test
mov
xor
mov
je
out
add
sub
test
data16
dec
dec
sbb
aaa
mov
sar
mov
mov
arpl
fwait
pop
std
xchg
or
es
mov
out
test
mov
add
pop
fs
xchg
dec
daa
push
mov
movs
mov
nop
jmp
std
jnp
xchg
xor
pop
jg
sub
test
cmc
loop
test
lods
fadd
sub
pop
add
scas
bound
inc
jmp
cwde
ins
and
ins
push
xor
xor
enter
inc
hlt
loop
push
add
xchg
ret
or
mov
cmp
push
push
in
pop
fwait
sub
shr
cld
data16
enter
push
js
push
add
or
mov
aaa
sahf
scas
add
mov
xor
xchg
sub
cmps
shl
jmp
mov
adc
sub
pop
push
mov
jmp
test
xchg
adc
mov
adc
push
inc
test
dec
stos
jne
pop
adc
call
repnz
push
jae
shl
xchg
mov
inc
inc
push
adc
sbb
je
sub
and
fsub
sbb
fidiv
pop
ror
sbb
xchg
pop
in
adc
sti
push
push
and
cwde
mov
loop
push
jle
add
sub
mov
mov
sar
pop
push
ins
ret
sbb
push
adc
(bad)
cmp
movs
inc
inc
retf
xor
fld
loopne
cld
add
es
and
cmps
(bad)
scas
push
add
sbb
mov
lods
(bad)
mov
int
hlt
gs
fcmove
dec
adc
jg
(bad)
out
jmp
dec
ss
xor
add
cmp
add
cdq
imul
mov
hlt
and
adc
lock
inc
inc
aad
add
repnz
and
and
adc
cmp
add
jbe
add
mov
div
mov
ja
shr
aad
cmp
inc
rcl
popaw
test
arpl
pop
gs
(bad)
pop
in
xor
fidiv
mov
inc
fistp
pushf
dec
xor
push
pushf
mov
jp
int3
(bad)
or
inc
jecxz
mov
popa
stos
rcl
xchg
in
fld
and
pop
push
xchg
mov
mov
add
jg
jae
or
mov
aam
xchg
jbe
pop
jecxz
push
cmp
lea
arpl
and
dec
test
mov
int3
inc
ss
pop
add
push
dec
push
in
mov
jmp
jnp
and
push
fmul
jns
arpl
fwait
pop
test
adc
adc
pop
imul
dec
daa
lahf
out
push
shl
pop
sbb
popa
mov
in
jge
jbe
cmp
pop
out
ret
out
push
xchg
dec
add
mov
inc
or
cmps
imul
mov
mov
push
sbb
push
and
sub
dec
inc
push
cmp
faddp
cmp
repnz
xor
test
adc
gs
dec
dec
ficom
(bad)
pop
imul
(bad)
and
or
fidiv
je
in
test
pop
xchg
mov
or
mov
xor
mov
(bad)
lds
push
inc
hlt
and
popa
xor
xor
or
scas
ja
push
sub
xor
xchg
jbe
sahf
dec
movs
neg
jns
and
xlat
cmp
mov
fld
aad
inc
sbb
mul
xchg
jbe
loop
push
shr
push
pop
dec
xlat
xlat
int
xor
iret
dec
pusha
mov
mov
(bad)
or
or
adc
push
fnstenv
pop
mov
(bad)
inc
in
call
je
xor
push
inc
shl
test
lock
arpl
push
jmp
sbb
js
dec
sbb
add
test
jae
mov
mov
push
push
push
xchg
cli
add
dec
jae
dec
mov
lods
add
dec
jle
jae
push
inc
push
lds
inc
cmp
clc
mov
icebp
or
push
jmp
push
cli
mov
jno
jle
xor
mov
adc
sub
sbb
mov
cmp
hlt
or
rol
fs
sub
mov
dec
push
fsubr
(bad)
int3
loop
xchg
gs
dec
icebp
out
in
cmc
in
fcomp
mov
dec
cmc
sbb
mov
out
into
stc
aaa
stos
addr16
fst
inc
ins
enter
stos
or
inc
aam
sbb
ficomp
repnz
adc
mov
mov
(bad)
(bad)
das
adc
inc
out
addr16
push
(bad)
sti
div
add
or
xchg
test
stos
js
jne
jbe
cmovnp
call
jmp
shr
movs
pop
das
cmp
clc
cdq
jae
je
and
cld
data16
imul
mov
mov
and
dec
or
cs
scas
mov
dec
in
add
sbb
popa
push
push
mov
rcl
sub
mul
or
inc
pop
(bad)
outs
test
cmp
sar
pop
mov
pop
cmc
dec
bound
push
cld
call
xchg
shl
add
in
jne
fstp
cs
fstp
dec
adc
and
push
clc
sub
je
stos
fnsave
mov
in
out
imul
pop
adc
xchg
aam
mov
hlt
pop
(bad)
test
dec
neg
neg
stc
push
ds
aam
jbe
stos
test
iret
and
add
ret
(bad)
(bad)
gs
stos
pop
idiv
jp
or
pop
inc
hlt
sbb
and
jmp
ret
daa
stos
jmp
sbb
mov
cmp
out
sbb
xor
retf
hlt
sbb
call
and
add
or
jne
adc
cli
fwait
mov
cdq
pop
int3
xor
sbb
movs
jns
sbb
sub
mov
fcomp
push
sbb
inc
outs
inc
xchg
(bad)
in
sti
in
dec
shl
add
or
ffreep
dec
fadd
jmp
call
push
in
icebp
mov
mov
mov
add
das
bnd
xchg
(bad)
mov
rcl
jmp
pop
xchg
push
inc
and
fbld
mov
outs
mov
shl
js
inc
(bad)
in
mov
je
inc
cwde
push
mov
pop
repz
and
push
cmps
mov
nop
jecxz
(bad)
pop
lds
cmp
cmc
add
outs
shl
sub
jne
repnz
push
int
loope
adc
imul
mov
mov
or
xlat
fnsave
dec
fwait
sbb
mov
inc
adc
cmps
mov
lock
aaa
pop
(bad)
(bad)
adc
out
test
lock
call
push
inc
cmc
xchg
add
push
sub
add
repnz
jno
cs
push
std
dec
pop
loop
mov
nop
push
mov
or
xchg
pop
in
and
sub
aaa
fs
sqrtps
(bad)
std
jle
popw
add
or
scas
lock
and
inc
or
movs
or
pop
stos
push
repz
sbb
std
add
int
jmp
enter
sahf
mov
ins
hlt
push
and
cs
pop
out
in
sub
in
mov
ja
sub
loopne
test
(bad)
or
sar
daa
jl
(bad)
mov
or
(bad)
repz
sbb
sub
aam
jae
sub
xchg
stos
sbb
cmps
aam
stc
jns
push
mov
jmp
lahf
mov
or
xchg
push
dec
je
mov
scas
or
mov
cmps
cli
in
push
loopne
in
push
mov
inc
xchg
enter
imul
(bad)
hlt
in
xlat
shl
les
lods
movs
lds
cmp
or
pop
rcl
push
retf
gs
xchg
xchg
gs
jge
repnz
test
jb
(bad)
sub
mov
cmps
imul
test
mov
lock
ret
repz
outs
repz
fild
xchg
inc
nop
dec
hlt
or
inc
dec
xchg
(bad)
jmp
adc
leave
jmp
add
mov
in
outs
mov
and
stos
sar
js
cmp
mov
rcr
adc
cmc
(bad)
leave
(bad)
sti
dec
movs
sbb
inc
sbb
bound
ds
push
data16
icebp
loope
sbb
popf
loopne
popa
aaa
mov
xor
out
inc
dec
sub
xlat
std
push
imul
cmp
shr
inc
fs
out
sti
mov
pop
mov
(bad)
adc
and
cdq
rcl
mov
sbb
inc
and
cs
scas
sbb
or
mov
xor
into
adc
or
push
mov
(bad)
mov
dec
sbb
shl
cmp
inc
and
and
outs
cdq
add
pop
inc
sub
pop
out
jmp
pop
jns
pop
sbb
ins
pop
loopne
inc
pop
pop
inc
mov
lods
sub
dec
inc
jbe
rcr
sub
mov
adc
fmul
ret
sub
(bad)
cmps
add
mov
(bad)
aam
out
dec
cmps
push
cmps
jecxz
stc
jge
jb
or
jns
pop
(bad)
sbb
das
daa
adc
dec
inc
push
nop
dec
jo
repnz
loopne
out
dec
adc
rcr
and
sahf
std
cmp
inc
out
jb
es
mul
dec
mov
bound
xor
lock
mov
cdq
fadd
push
mul
or
(bad)
pop
dec
mov
popf
test
repz
fst
popf
movs
out
pop
sub
loopne
pushf
popa
push
stos
inc
rol
aaa
sub
loope
push
mov
fist
add
pop
cmp
sbb
push
(bad)
scas
sbb
lock
(bad)
jecxz
lods
or
mov
cmp
in
js
inc
gs
aaa
or
out
jmp
push
push
xchg
pop
das
push
add
rol
popa
or
ror
data16
(bad)
jo
mov
les
adc
and
xchg
pop
pushf
(bad)
pop
push
xchg
adc
xchg
into
jns
outs
iret
jmp
scas
inc
jmp
std
push
push
push
fst
mov
not
fbld
or
(bad)
cmc
and
nop
ret
jg
sar
out
xor
aad
dec
inc
push
inc
xchg
mov
add
out
adc
mov
clc
(bad)
aas
fstp
or
push
popa
adc
xchg
mov
es
cld
outs
mov
or
pop
hlt
cdq
dec
add
add
or
jo
adc
mov
jb
push
out
cmp
scas
add
jbe
jns
or
sub
ret
cli
ror
jge
inc
jo
repz
jnp
xchg
loop
pop
fistp
mov
mov
mov
pop
pop
push
lods
dec
retf
mov
mov
pusha
repz
jns
(bad)
jns
xchg
dec
pop
mul
repnz
xchg
add
mov
jecxz
jmp
sbb
(bad)
jecxz
jb
fwait
dec
mov
sbb
das
popa
cmp
fadd
dec
cmps
pop
add
inc
(bad)
outs
pop
std
shl
cmp
xchg
xchg
and
(bad)
shr
push
in
outs
test
sub
out
sbb
xlat
dec
and
and
mov
sub
adc
mov
(bad)
push
jg
dec
and
clc
ins
push
loopne
sbb
rcl
inc
mov
mov
xor
popf
cmp
int
jmp
sbb
pop
call
cmps
test
jno
std
push
aas
cdq
xchg
loopne
pop
sub
xchg
cmp
enter
cdq
ret
inc
cmp
imul
into
xchg
pop
(bad)
movs
cmps
jae
mov
jno
inc
cmps
cli
jp
cmp
inc
addr16
mov
sub
lds
mov
pop
dec
jle
jp
xchg
inc
dec
inc
imul
dec
inc
jns
scas
scas
aaa
jnp
add
xchg
in
into
cs
test
cmp
or
mov
cmp
scas
jne
mov
and
je
call
ror
sar
fistp
xchg
mov
out
aaa
pop
nop
lahf
sti
pop
jnp
nop
fdiv
xlat
push
push
(bad)
mov
mov
cld
in
inc
adc
stos
std
adc
ins
imul
pop
icebp
jo
into
cli
or
push
inc
adc
enter
push
repz
hlt
xchg
sbb
sub
call
jl
popa
aad
and
inc
adc
adc
pusha
jne
jg
bound
lock
repz
xor
int3
retf
xchg
gs
push
pop
jo
test
rcr
outs
mov
loope
fisubr
push
mov
cli
bound
pop
scas
movs
pop
and
mov
dec
xlat
jge
push
out
rcl
push
stos
popa
cmp
push
dec
rol
(bad)
invd
test
sub
sbb
mov
mov
xchg
int3
clc
shl
loopne
in
sbb
lock
or
pop
inc
push
push
test
mov
adc
add
mul
and
pop
sbb
gs
or
loope
adc
in
scas
cli
add
push
sub
scas
fcomp
shl
adc
repnz
ret
xchg
arpl
(bad)
repnz
mov
lea
in
or
scas
shl
push
retf
mov
jmp
stc
xor
xchg
pushf
jb
vpshaq
fs
cmp
ins
mov
cmp
lahf
pusha
iret
iret
fs
call
xor
add
loope
mov
push
dec
cmp
movs
retf
sahf
fdivr
dec
out
dec
mov
dec
add
imul
retf
and
int
or
mov
pop
inc
mov
gs
int3
in
outs
mov
mov
mov
shl
clc
sti
aas
ds
push
sub
lock
dec
push
mov
adc
fwait
xchg
cmp
fmul
pop
cwde
sub
dec
popf
ret
jge
daa
loope
daa
xchg
mov
ret
rcl
mov
sti
add
add
sbb
inc
cs
cld
mov
push
lea
add
ins
ins
mov
test
mov
in
adc
inc
imul
cmp
retf
pushf
pop
(bad)
xor
bound
pop
movs
inc
adc
bound
adc
or
push
jnp
loop
xchg
sub
sub
jnp
jno
test
into
dec
push
call
and
call
or
fadd
jns
movs
dec
idiv
not
fst
sub
sar
adc
lods
sbb
(bad)
and
nop
sbb
xor
cmp
jb
mov
push
mov
idiv
xor
inc
cld
inc
fld
lahf
out
or
ss
pop
add
fimul
cdq
ins
dec
inc
jbe
rcr
out
fs
mov
outs
dec
pusha
sub
pop
(bad)
lods
out
fdivrp
ins
push
aaa
pop
xor
je
push
pop
idiv
call
fisubr
stc
inc
test
dec
add
and
cmp
mov
inc
xchg
jb
adc
xchg
dec
scas
and
cmp
inc
aad
pushf
in
jbe
or
mov
push
dec
aas
or
inc
xor
test
mov
daa
fdiv
dec
cmc
movs
inc
test
xchg
das
loop
and
jmp
xchg
data16
push
jae
icebp
pop
mov
or
movs
jmp
(bad)
(bad)
fbld
push
(bad)
mov
test
dec
lods
call
mov
xlat
jbe
lods
cmp
mov
inc
mov
mov
mov
je
add
clc
imul
mov
ret
out
push
mov
pop
stos
aas
pushf
es
dec
in
int
es
xchg
int3
popa
shl
inc
test
int3
retf
add
ret
in
or
add
je
(bad)
jp
xor
(bad)
pusha
cmp
cmc
mov
mov
xor
pop
or
fwait
xchg
movs
cdq
pop
xor
adc
xchg
adc
(bad)
cmc
cmp
imul
lahf
clc
ss
fist
jmp
icebp
mov
xor
jo
push
ret
fidiv
pop
in
fst
mov
das
mov
mov
pop
nop
jo
icebp
pop
fs
add
sub
xchg
arpl
ret
sbb
out
mov
and
shl
hlt
call
popa
daa
je
loope
cmc
sbb
je
or
sub
sbb
push
jmp
push
movs
pop
imul
jne
dec
stos
or
xchg
movs
cmp
(bad)
in
aam
or
das
ret
sbb
push
sbb
push
rcr
out
pop
stos
cmps
pop
mov
fisub
in
sbb
lock
pop
push
movs
aad
xchg
xor
movs
pop
loopne
or
sahf
mov
dec
ret
xchg
sbb
push
mov
adc
mov
push
neg
push
enter
daa
pop
push
push
outs
mov
into
movs
push
shl
jnp
mov
adc
rcl
sub
or
loope
inc
cli
out
test
stos
dec
getsec
push
push
sbb
or
aad
xor
push
shl
push
mov
push
sub
scas
sbb
div
div
lods
push
jmp
jecxz
imul
(bad)
or
pusha
sti
jns
pop
and
jnp
xlat
or
push
enter
jl
outs
bound
in
xor
mov
adc
pop
sub
sbb
xchg
adc
fild
pop
dec
mov
inc
push
pop
call
les
or
jno
loopne
inc
sar
mov
jg
aam
hlt
push
adc
mov
push
je
cmp
loopne
inc
int3
pop
ins
loope
clc
mov
inc
popa
mov
sub
into
jl
mov
xor
mov
sub
icebp
xchg
stc
jg
xchg
push
outs
mul
pusha
arpl
push
mov
lods
dec
fdecstp
jno
push
mov
sub
scas
add
gs
sub
cmp
jnp
adc
cld
jg
cmp
lahf
inc
cdq
cmp
pop
test
xchg
adc
sub
(bad)
sbb
out
ret
mov
icebp
xchg
inc
mov
mov
push
dec
pop
dec
pop
les
int
add
fcomp
mov
test
xor
jno
cmp
push
pusha
lds
popa
pop
test
pop
fwait
ret
fdivp
shr
xlat
enter
retf
mov
(bad)
loopne
stos
icebp
sbb
push
in
xor
retf
mov
gs
xchg
loopne
or
fidiv
and
xor
mov
inc
push
push
fcmovne
imul
or
xchg
push
jno
les
in
xlat
cmc
ret
in
int
addr16
pop
pop
push
mov
shr
mov
or
mov
mov
push
fldenv
or
or
cmp
push
pop
mov
loopne
imul
and
out
cdq
pusha
xchg
lea
xchg
popa
ins
xchg
shl
test
arpl
outs
sbb
push
arpl
mov
mov
cdq
mov
mov
outs
outs
inc
scas
shl
mov
fidivr
jne
int
idiv
movs
sub
test
loope
dec
or
lods
cmp
mov
jg
add
pop
daa
sbb
jns
ret
inc
xchg
mov
mov
lock
js
repz
xchg
mov
add
ins
mov
cmp
imul
jmp
dec
in
in
sub
mov
mov
out
test
sbb
fisttp
into
mov
mov
test
fdivr
leave
push
out
loop
push
mov
dec
jle
push
sahf
or
lea
ins
mov
dec
jmp
cld
mov
mov
jae
mov
pop
inc
sub
inc
daa
ja
fild
aam
std
cdq
test
shr
dec
adc
sbb
sub
pop
lea
jecxz
mov
sub
mov
out
fwait
cmps
mov
clc
les
cmp
sbb
imul
pop
mov
jl
ins
lods
jge
jae
pop
xchg
sbb
out
lods
ins
or
fistp
and
sti
xchg
daa
outs
les
sbb
imul
aam
mov
mov
push
mov
movs
call
xlat
imul
mov
jbe
jg
adc
popa
test
jo
popa
inc
das
push
push
mov
fmulp
jp
int3
in
not
dec
push
push
cs
(bad)
retf
int
sahf
mov
mov
dec
push
jae
push
cmps
nop
mov
call
mov
das
pusha
cdq
pop
je
xchg
ins
jne
cmp
popa
sahf
fldpi
or
jnp
xor
mov
repnz
or
pop
out
repz
rep
lea
adc
inc
pop
pop
mov
nop
cmc
hlt
shl
pop
and
pushf
mov
cmp
in
shr
adc
jbe
scas
fmulp
adc
jecxz
test
arpl
jecxz
(bad)
lea
sub
fs
jbe
mov
jle
cmp
(bad)
push
sub
icebp
and
imul
or
ds
(bad)
cmp
xchg
addr16
out
mov
or
into
mov
neg
imul
les
xchg
int
add
xor
cdq
sar
cli
add
jne
add
imul
popf
(bad)
and
jl
cmp
sbb
push
dec
inc
jns
out
sub
int
dec
ret
xor
or
sub
repz
dec
popa
sti
retf
xor
jge
dec
or
test
xchg
jnp
in
sbb
and
ficomp
mov
movs
daa
fadd
test
int
sbb
cwde
mov
xchg
das
sub
stc
scas
add
sti
mov
rcl
sub
(bad)
retf
je
cmps
(bad)
call
push
icebp
sub
sub
fs
add
retf
cmp
cmc
(bad)
bound
pop
add
inc
les
jg
outs
cmps
sub
lds
rcr
std
imul
cmp
loope
dec
dec
das
dec
data16
ficomp
mov
sub
mov
je
or
inc
pusha
inc
shr
mov
popf
fist
sti
les
neg
inc
sub
push
push
ja
mov
daa
(bad)
rol
int
adc
in
out
mov
leave
mov
lods
inc
mov
fild
jmp
inc
jo
inc
xchg
popa
sbb
adc
aaa
mov
pop
in
sub
rol
aad
xor
ins
cmps
pop
adc
xchg
fnsave
lahf
mov
int
inc
scas
fimul
mov
xchg
or
sti
or
fs
bound
dec
out
push
inc
mov
push
add
dec
fsub
arpl
xor
popf
hlt
add
mov
cmp
mov
sbb
aam
leave
dec
scas
jb
sub
jge
and
add
push
add
pop
ret
(bad)
popf
aas
std
lock
xor
stc
in
xchg
dec
add
dec
dec
pop
inc
sti
or
loope
jne
icebp
ins
fcomp
in
rol
je
pop
pop
mov
pusha
jmp
icebp
ins
sub
jmpw
mov
popf
cmovp
mov
loop
bound
pop
shl
cmp
inc
lods
daa
inc
and
mov
cdq
retf
add
sbb
sub
sub
jecxz
sbb
outs
jmp
enter
push
aas
adc
(bad)
in
into
inc
dec
fwait
jp
push
mov
push
repnz
pop
mov
pop
test
(bad)
in
pop
jle
dec
xor
dec
mov
xchg
and
les
leave
repz
sbb
and
cmp
adc
cld
sub
xchg
js
cmp
ins
pop
jge
daa
mov
xor
adc
dec
mov
cdq
fistp
daa
xchg
repnz
jo
jg
lods
loope
xor
fdivp
retf
sbb
popa
sti
sub
xchg
lods
pushf
inc
mov
inc
int
fmul
int3
jle
jl
data16
jb
pop
sbb
es
inc
mov
shl
push
and
jl
ret
pop
mov
lods
pop
ror
fsub
mov
mov
pop
sub
cmp
mov
xor
cmps
inc
retf
dec
leave
or
inc
jmp
popf
(bad)
stos
jne
les
fwait
in
daa
retf
cld
inc
jne
push
and
xor
je
sbb
mov
or
sti
int
jno
pop
pop
cmps
adc
mov
add
js
sub
shr
adc
shl
imul
ret
xchg
mov
loop
push
sub
and
and
xchg
xchg
daa
cmp
rol
mov
jne
fcmovne
aam
pop
xchg
mov
or
stc
dec
cmp
push
into
mov
jae
and
paddd
push
mov
dec
dec
ins
enter
aaa
imul
push
or
cmp
cli
in
call
in
mov
sub
mov
(bad)
out
repz
call
inc
(bad)
adc
fld
sub
mov
mov
dec
dec
push
pop
fcom
or
push
mov
sbb
rol
sbb
leave
dec
add
jle
rcl
cmps
rol
test
cmp
pop
fucomp
mov
das
push
jecxz
inc
sub
xor
jle
mov
lahf
test
int
fiadd
cmp
mov
es
ss
mov
inc
mov
mov
div
xor
mov
sub
jno
fdivr
xchg
(bad)
out
mov
test
and
repnz
sub
fld
ror
dec
sub
inc
ficom
int3
je
push
fucom
repnz
aas
ror
into
lahf
sub
pop
adc
jno
popa
daa
shl
sub
bnd
(bad)
xchg
mov
iret
xchg
or
icebp
and
pop
push
paddd
in
xchg
loopne
sbb
stos
xchg
add
aam
jo
retf
popf
jmp
scas
jbe
push
inc
xor
inc
loopne
mov
daa
sbb
sub
sub
cmp
arpl
mov
mov
dec
jb
test
sar
movs
add
fs
jno
pcmpeqd
out
push
ins
loop
lahf
cmps
cmp
pop
mov
imul
pop
jb
fdivr
adc
push
into
loopne
or
mov
sbb
rol
or
loope
push
imul
sar
jge
jb
and
dec
out
movs
xor
dec
int
dec
adc
cs
div
xchg
aad
ret
pop
mov
mov
inc
fs
fld
adc
int
lea
(bad)
enter
sar
cmp
add
add
jmp
lock
mov
push
cdq
or
pusha
cmp
or
mov
popa
push
jmp
bound
mov
jle
out
ins
push
in
fst
je
arpl
pop
fsub
retf
loopne
popf
lds
pop
call
jmp
xchg
shl
ret
lods
push
or
(bad)
jle
loope
cmps
test
ja
push
xor
nop
cdq
call
xchg
inc
xlat
fadd
jg
mov
out
adc
mov
leave
mov
inc
xor
inc
sbb
lea
jnp
or
ins
cmp
rol
xor
mov
or
xchg
or
icebp
push
push
jmp
add
xor
ret
or
push
(bad)
in
push
mov
shl
call
push
mov
daa
leave
mov
or
daa
test
in
pop
jg
inc
sbb
das
sbb
rcr
sub
(bad)
mov
push
es
aaa
call
ja
test
lds
xor
outs
into
mov
loope
jmp
cmp
jmp
fwait
aam
xor
pop
sub
(bad)
aaa
aaa
jb
lods
int
aaa
mov
add
add
(bad)
push
mov
(bad)
retf
lds
(bad)
stc
adc
add
or
add
cmp
mov
inc
pop
(bad)
call
ja
icebp
sahf
pusha
xchg
in
jmp
push
pop
pushf
popf
sub
je
jl
jnp
loope
int3
cmc
mov
sbb
jbe
aam
mov
mov
xchg
adc
inc
in
sbb
xchg
test
jl
xor
mov
je
popa
mov
mov
xchg
push
into
(bad)
shr
loop
mov
sbb
les
fsubr
cld
push
pop
xor
pop
adc
sub
push
pop
lock
jmp
in
out
inc
rol
movs
shr
push
push
mov
pop
in
in
and
rol
xchg
jb
outs
sbb
retf
sahf
sbb
rcr
mov
fist
push
inc
cmps
aam
ret
pop
into
cmps
push
fstp
movs
jl
loope
jp
sub
inc
pop
push
sbb
jbe
jecxz
or
popf
and
push
fcomp
iret
(bad)
sti
mov
ret
mov
pop
mov
in
mov
jno
rcr
jle
aaa
mov
mov
ror
mov
(bad)
rcr
test
ror
in
xchg
mov
xchg
and
cmp
ds
dec
pusha
mov
fld
or
je
jmp
movs
jnp
push
in
jmp
cmps
fnsave
fs
dec
adc
ja
xlat
outs
dec
call
mov
les
inc
xchg
into
pop
(bad)
push
cmp
sub
test
inc
sub
push
enter
inc
xchg
dec
je
pop
clc
or
(bad)
sub
sbb
shl
push
pop
iret
mov
jge
iret
inc
xor
push
in
inc
add
cmp
mov
stc
and
stc
(bad)
shl
jg
xchg
clc
xchg
pop
xor
dec
dec
enter
push
pop
mov
xor
adc
movs
cmp
aad
outs
ret
or
mov
pop
cmp
dec
aam
xchg
(bad)
aaa
ja
(bad)
sbb
lods
loopne
adc
test
movs
push
pop
jo
movs
outs
mov
aad
mov
dec
xor
nop
loopne
or
mov
xor
cli
mov
jo
ds
or
pop
fidivr
inc
movs
push
xor
mov
xchg
dec
push
call
mov
call
inc
(bad)
and
sahf
retf
adc
dec
es
(bad)
mov
jl
ret
loope
cmp
mov
leave
push
mov
push
cmp
adc
mov
dec
aas
and
repz
int
or
adc
sti
adc
mov
in
mov
mov
add
das
rcr
aas
out
stos
aam
dec
into
xchg
jo
push
in
mov
pop
jge
adc
in
push
bound
pop
fucomip
sbb
xor
dec
inc
fs
cmp
test
pop
pop
lods
mov
in
pop
pop
lock
lods
(bad)
xor
test
test
mov
push
in
outs
out
(bad)
aaa
mov
movs
in
xchg
or
jg
sub
mov
imul
jae
pop
mov
mov
mov
jl
ins
add
pop
cmp
into
xchg
mov
cli
push
addr16
arpl
neg
sub
xchg
(bad)
push
and
rcr
push
retf
shl
test
dec
pop
add
ja
xchg
pop
movs
mov
push
jno
(bad)
and
(bad)
inc
or
ja
stos
sub
test
jmp
retf
xor
in
jge
scas
xchg
push
fisub
outs
pop
lea
dec
mov
push
push
retf
sbb
and
mov
or
pop
push
icebp
adc
fsubr
xor
ror
pop
rcr
jmp
pop
jo
jno
sbb
sbb
retf
cmp
es
xor
ins
mov
add
jns
xchg
int3
lods
das
pop
or
out
push
addr16
mov
in
stc
fstp
popa
jecxz
fsub
push
aad
add
movs
pop
hlt
in
cmc
lock
inc
mov
ds
fnstenv
xor
mov
ror
jg
mov
sub
mov
or
jg
and
loope
or
nop
(bad)
loopne
shr
jle
test
les
adc
js
mov
cmc
and
inc
into
jl
ins
int3
sbb
pop
xor
sbb
xchg
iret
repz
adc
mov
out
or
out
mov
xor
jmp
clc
ror
inc
xchg
int3
cmp
pop
jbe
jge
sbb
and
jne
jg
fdivr
stc
popf
test
pop
xchg
mov
dec
jg
test
pop
ds
xchg
ret
pushf
jge
mov
and
inc
ret
shl
rcl
sub
dec
ins
enter
mov
sahf
xchg
cdq
neg
sbb
mov
dec
xlat
xchg
sub
pop
sbb
lods
mov
jle
fwait
inc
xchg
jg
scas
cli
sbb
fwait
sbb
outs
sub
out
fcomip
inc
fistp
xchg
sbb
shl
jns
jmp
xor
mov
je
out
mov
data16
push
aas
fistp
daa
aaa
push
scas
jg
sub
sbb
mov
imul
dec
mov
dec
scas
pop
in
stos
bnd
jne
pop
mov
jg
and
mov
loop
adc
jl
inc
push
cmp
mov
imul
mov
rol
ins
mov
(bad)
not
popa
out
xchg
jmp
push
add
loop
xchg
jbe
xchg
pushf
push
or
or
sub
cwde
cmps
int3
les
sbb
stos
cmp
out
loope
jp
cmp
xor
adc
rol
mov
sar
mov
aad
push
add
(bad)
xchg
bound
cmp
lds
xchg
inc
xchg
mov
gs
movs
sbb
test
dec
dec
iret
iret
xlat
scas
je
ret
in
retf
mov
jge
xchg
mov
out
outs
daa
scas
push
push
data16
hlt
adc
xchg
lea
in
dec
or
repnz
js
cwde
and
(bad)
loop
adc
outs
pop
sbb
adc
adc
dec
jo
xor
mov
adc
cmovnp
and
pushf
sti
loop
setb
jge
sbb
push
mov
mov
and
cmp
retf
pop
xchg
cdq
cmps
push
(bad)
mov
mov
mov
jge
cmps
push
cli
adc
or
or
inc
cmc
xchg
ins
clc
int
xor
jl
mov
fwait
or
test
mov
test
sbb
out
sub
sbb
ror
mov
sbb
retf
test
mov
mov
or
sbb
mov
repnz
imul
test
pop
scas
xchg
shr
xchg
push
jle
out
test
pushf
adc
push
fsubr
push
jnp
call
sbb
mov
fiadd
and
retf
sub
mov
fcom
push
(bad)
gs
sbb
xchg
rcr
jecxz
js
icebp
xchg
test
lahf
push
cmps
push
fcmovu
mov
movs
lods
rol
gs
jl
sub
stos
xchg
inc
fstp
push
dec
adc
mov
test
cs
add
and
fcmovbe
pushf
dec
lds
int
push
das
cmp
cdq
mov
shl
addr16
movs
test
dec
and
sbb
mov
(bad)
push
adc
rcr
enter
dec
out
fwait
mov
mov
ret
push
enter
xor
addr16
test
cmc
mov
sbb
daa
cld
pop
push
inc
cdq
cmp
inc
push
jne
dec
xchg
sub
imul
jae
ds
sub
mov
sub
mov
retf
pusha
outs
adc
ret
in
mov
retf
dec
xor
mov
push
aam
jg
adc
sbb
and
mov
add
jne
test
test
(bad)
aad
in
add
mov
aad
cmp
adc
jnp
push
add
div
mov
retf
popa
cmps
cmps
or
pushf
into
xor
xor
inc
mov
push
pop
data16
push
mov
cmp
cli
(bad)
jmp
pop
mov
outs
or
in
cdq
rcl
sub
fwait
adc
(bad)
aas
cwde
cmps
loopne
add
daa
(bad)
xchg
fdivrp
lods
and
loope
int
pop
cmp
in
fadd
inc
mov
stos
rcl
fisttp
ret
aam
pop
mov
jl
xchg
idiv
dec
mov
push
mov
cmps
adc
cwde
xlat
js
test
lahf
or
mov
stos
push
fidiv
(bad)
call
(bad)
jmp
das
div
jl
xor
push
in
iret
add
lods
outs
dec
fild
paddsw
sar
xor
data16
shr
dec
in
pusha
mov
mov
mov
jl
(bad)
leave
ds
sub
sub
bound
bound
mov
in
mov
ins
ja
xchg
jmp
and
scas
push
add
in
hlt
xor
pop
xchg
sbb
and
shl
(bad)
jns
jne
adc
call
pop
(bad)
xchg
jns
push
loopne
aas
rol
inc
mov
pop
outs
aas
test
std
stos
jne
test
loopne
les
imul
add
pop
and
ins
mov
xor
add
(bad)
loop
mov
inc
add
jecxz
sbb
xor
(bad)
jo
jo
xor
test
push
ja
inc
repz
arpl
imul
dec
jle
add
sar
push
mov
test
lds
(bad)
cmp
enter
nop
ins
jmp
les
adc
push
out
and
mov
repnz
mov
test
emms
ins
or
dec
mov
inc
xchg
jmp
or
jmp
ja
adc
and
imul
jmp
dec
jp
add
sbb
ins
ror
sbb
adc
inc
add
fisub
jle
mov
ret
mov
and
or
(bad)
sbb
lea
stc
test
int3
inc
cmp
out
iret
ins
pop
jb
sbb
in
and
mov
jg
fld
mov
mov
pop
mov
fcomp
sahf
ins
cdq
sub
xchg
(bad)
mov
scas
xchg
or
mul
mov
mov
sub
out
sti
jp
addr16
sbb
xchg
adc
scas
shr
xor
jno
scas
jmp
cmp
sbb
cdq
add
xor
test
sar
mov
stos
icebp
pop
cmc
jno
imul
and
cmps
mov
shr
dec
(bad)
mov
add
aas
pop
mov
fisttp
test
ficom
int
fnstsw
push
push
(bad)
jne
(bad)
pop
mov
retf
xchg
dec
pop
popf
push
lods
stos
out
xchg
int3
sub
xchg
js
(bad)
mov
xor
xchg
cmp
das
sahf
lock
lods
rcr
mov
mov
dec
add
adc
and
idiv
cmps
test
mov
and
fldcw
pop
lods
jp
outs
and
adc
mov
stos
(bad)
xchg
push
jp
mov
mov
dec
add
rcr
cmc
jg
xchg
les
(bad)
pop
jecxz
aad
xor
add
fmul
daa
or
aaa
cmp
in
cwde
hlt
xchg
xor
add
cmp
std
push
adc
jbe
add
or
sub
mov
sar
pop
mov
xchg
mov
sar
pusha
aam
xchg
adc
test
mov
js
xor
jno
cmp
push
push
push
outs
sbb
adc
dec
jne
daa
mov
rcr
mov
cmp
mov
and
and
jmp
add
sbb
xchg
ret
std
ja
sbb
push
add
cli
mov
pop
adc
inc
jmp
cmp
sbb
push
xchg
hlt
es
imul
aaa
and
stos
ret
cmp
mov
adc
xlat
imul
mul
(bad)
push
retf
or
pop
cli
aam
int3
xlat
(bad)
mov
out
sbb
sub
jmp
(bad)
int3
loopne
push
push
(bad)
dec
mov
ja
or
cmp
pop
cmp
(bad)
icebp
test
pop
adc
ja
out
sbb
stos
mov
popf
(bad)
pop
adc
mov
add
inc
and
outs
inc
outs
mov
fmul
ins
cmp
out
add
std
fs
int3
xor
scas
(bad)
dec
push
mov
inc
inc
push
mov
call
add
dec
(bad)
fisttp
xchg
enter
fdivr
mul
std
loopne
push
lahf
adc
adc
enter
xchg
or
and
call
inc
in
mov
ret
add
cmc
call
add
xor
das
aaa
test
adc
mov
sbb
add
mov
pop
arpl
adc
sub
fisubr
(bad)
mov
pop
test
ret
rol
sub
inc
fistp
pop
cwde
cmp
jg
xor
je
jecxz
adc
loop
imul
push
jbe
movs
clc
cld
xbegin
fistp
mov
cmp
mov
cmps
stc
cwde
int
xor
je
xor
sbb
ss
xchg
sbb
lods
xchg
xchg
mov
sbb
pop
mov
add
sbb
dec
add
inc
test
je
jae
mov
push
fdiv
mov
pop
mov
or
push
xor
bnd
ins
imul
(bad)
cmp
xchg
nop
(bad)
out
jp
fild
push
adc
inc
leave
dec
sbb
jb
fdivr
inc
retf
mov
push
sub
scas
lds
xchg
mov
ret
shl
mov
pop
inc
mov
mov
dec
icebp
stos
inc
sahf
loopne
adc
daa
cdq
fist
or
loope
test
jns
movs
mov
add
shl
loop
fsub
push
out
jmp
jo
cli
push
xchg
pop
add
clc
fsubr
dec
retf
mov
mov
xchg
ss
pop
scas
cld
mov
movs
mov
add
pop
mov
(bad)
int3
adc
int
or
jp
xchg
mov
(bad)
jno
mov
mov
xor
cdq
mov
mov
out
repnz
mov
inc
mov
test
ret
fstp
dec
xor
xor
xor
dec
vpand
pop
add
pop
and
cmp
iret
jo
jecxz
mov
sub
shr
push
cmps
bound
push
sbb
mov
addr16
es
add
icebp
cmp
or
mov
inc
sub
sub
adc
cs
mov
pop
hlt
xor
adc
mov
pop
aaa
jmp
mov
and
push
shl
xchg
leave
repnz
jge
stos
das
stc
push
ror
or
jecxz
adc
in
repz
jmp
sbb
xchg
bound
jmp
or
or
pop
(bad)
jmp
sbb
inc
fisttp
outs
scas
fdiv
cli
push
xchg
imul
mov
mov
fisubr
inc
lods
outs
aas
mov
sbb
je
cdq
movs
call
xor
nop
inc
and
out
cld
push
sti
dec
dec
jl
jmp
mov
mov
iret
push
push
pop
adc
sar
das
xor
or
mov
inc
mov
xor
iret
xor
sar
(bad)
cs
inc
mov
push
push
add
inc
fiadd
jl
jmp
lock
xchg
dec
ins
jge
sar
xor
(bad)
sub
dec
adc
int
or
ds
mov
cmp
xchg
jl
loopne
add
lods
push
cmp
jecxz
xor
bound
add
hlt
lea
cmps
pop
sbb
pop
add
aad
cli
ins
imul
cmc
pusha
test
add
fidiv
adc
icebp
pop
mov
data16
cmps
xor
into
cmc
xchg
xlat
pop
dec
add
cdq
aam
cld
call
btr
pop
xor
out
icebp
jne
cli
sahf
nop
pop
add
fwait
call
pushf
scas
es
or
lods
pop
mov
inc
dec
lods
fadd
mov
cmps
fcomp
cmps
add
push
adc
sbb
or
sbb
push
mov
es
lods
mov
mov
les
xchg
rcr
xchg
addr16
dec
jb
cmp
mov
and
fistp
add
sbb
pop
inc
(bad)
imul
or
cmps
mov
cmp
sbb
je
push
retf
movs
scas
xchg
cdq
cmp
cmp
sub
fbstp
jbe
and
add
xor
jmp
pop
or
cld
push
jle
sbb
imul
pusha
out
mov
jno
and
(bad)
cmp
sbb
fld
outs
xchg
daa
leavew
addr16
pushf
pushf
cmps
sbb
jns
in
dec
sub
cmp
test
jne
mov
(bad)
cmc
jo
xchg
bound
in
push
retf
outs
leave
sub
pop
jmp
jbe
mov
(bad)
leave
dec
into
fistp
jmp
sbb
les
fsub
inc
sub
out
scas
nop
scas
outs
cmp
or
add
dec
xchg
xor
push
cmps
data16
test
xchg
clc
add
mov
iret
sub
pop
mov
les
sbb
jae
cmp
mov
inc
es
in
jmp
push
repnz
cmc
jge
bound
scas
inc
imul
mov
loope
sub
adc
xchg
or
out
inc
arpl
xor
pop
inc
mov
dec
iret
or
xchg
scas
and
jbe
add
jmp
pushf
xchg
jno
lds
fistp
xlat
stc
out
mov
shl
sahf
scas
test
jae
(bad)
fstp
sti
(bad)
cmps
dec
jns
jno
mul
cs
cmc
aam
xchg
sub
jbe
fwait
mov
aad
rcl
adc
xlat
pop
push
dec
fs
pop
inc
mov
shl
mov
cmps
mov
mov
mov
lods
lock
pop
call
(bad)
data16
ja
dec
movs
push
call
mov
into
sti
frstor
cmp
mov
fwait
data16
cs
xchg
aas
push
fild
jmp
ss
and
imul
std
loope
mov
out
test
dec
ffree
cmp
adc
dec
stc
lods
outs
retf
xor
mov
(bad)
std
outs
mov
pop
jle
out
pop
popf
push
xchg
pop
and
push
fwait
push
mov
int
std
(bad)
push
push
push
sti
ficomp
mov
mov
nop
xlat
int3
jnp
mov
push
call
add
out
je
jecxz
cmp
call
xchg
dec
jecxz
dec
jmp
pop
mov
je
leave
das
dec
mov
scas
ss
sti
or
fs
lods
mov
ins
jo
fmul
loopne
mov
rcl
lahf
shl
pushf
and
and
sub
int3
(bad)
in
cli
and
dec
pop
mov
shl
int
cmp
nop
xor
loopne
push
stos
sub
jae
dec
or
out
scas
ret
mov
or
xchg
xor
rol
stc
neg
fs
push
xchg
or
or
call
das
out
repz
hlt
xchg
push
and
hlt
test
mov
stos
xchg
xor
mov
pop
jmp
mov
or
ret
pop
and
xor
push
rcr
loop
xchg
adc
out
(bad)
mov
aas
loope
mov
fs
push
mov
mov
mov
iret
into
adc
and
shr
cmp
dec
and
mov
shl
(bad)
fidiv
js
(bad)
dec
cmp
xadd
and
int
js
stos
mov
into
pusha
dec
stc
add
cs
pop
add
stos
(bad)
fist
stos
mov
cmps
imul
ins
pusha
push
dec
pop
int
fs
aam
daa
fadd
jl
cwde
adc
ins
push
mov
push
jo
mov
les
pop
dec
sbb
call
pop
dec
mov
mov
icebp
and
sub
jbe
pop
jb
std
add
adc
inc
pop
ja
movs
ds
mov
sub
scas
jns
fmulp
jge
cmp
jno
cmp
ins
dec
into
test
fwait
and
cmps
mov
adc
add
stos
sbb
xor
xlat
pop
fcomip
jns
outs
daa
dec
loopne
xchg
test
test
pop
repnz
imul
or
cmps
adc
repnz
push
xchg
jecxz
mov
xchg
mov
inc
xor
fwait
push
push
out
shl
jl
mov
fld
xchg
add
mov
push
and
hlt
scas
dec
xchg
inc
push
xchg
mov
test
fnstsw
lahf
iret
test
rol
dec
mov
mov
add
push
or
fnsave
xchg
or
dec
fidiv
in
cmps
xchg
mov
xchg
clc
mov
jecxz
popa
push
fld
inc
pushf
push
push
pop
cmps
or
arpl
stos
jb
cs
mov
xlat
jne
push
stos
xchg
jae
iret
sbb
mov
sbb
cdq
xchg
(bad)
mov
lds
xchg
xchg
lods
jbe
xchg
or
sbb
pushf
and
cld
in
xchg
add
test
jecxz
shl
xchg
fcmovnb
ror
dec
or
mov
jecxz
jp
jp
mov
std
ja
(bad)
xor
adc
mov
mov
fsub
xchg
outs
mov
nop
lods
arpl
aaa
movntq
push
inc
outs
push
sbb
xor
mov
(bad)
in
or
rol
fisttp
mov
outs
mov
xchg
in
xor
cmps
cwde
pop
nop
sbb
push
adc
scas
scas
(bad)
add
cmps
iret
jo
add
lods
inc
mov
mov
lahf
add
shr
cmp
das
jg
add
xor
js
mov
mov
in
mov
ds
push
dec
cmp
popa
mov
and
ja
adc
inc
call
xchg
je
mov
fiadd
mov
pop
xchg
add
div
mov
mov
cmp
enter
aad
xchg
add
movs
jg
in
jmp
sbb
mov
and
mov
jecxz
out
pop
test
aas
cmc
ins
adc
cs
cmp
imul
and
js
(bad)
les
pop
cmp
jne
pusha
loope
or
inc
inc
(bad)
daa
pop
or
aas
cmp
(bad)
fwait
rcr
mov
cld
fcmovu
sahf
adc
or
jg
int
cmp
xchg
and
or
mov
push
mov
js
ins
mov
or
mov
sbb
ins
test
in
push
sbb
xchg
les
xlat
add
inc
in
xchg
mov
add
or
xchg
clc
int3
sub
jl
mov
(bad)
in
push
sbb
fsubp
xor
out
pop
pop
mov
fxch
movs
sbb
mov
mov
push
ins
mov
cmps
or
pusha
repnz
mov
push
mul
es
fdivr
xor
cmp
stc
jb
mov
mov
scas
sbb
xchg
or
aas
lahf
adc
in
dec
pop
leave
pushf
(bad)
movs
push
fsubr
dec
xchg
ss
mov
ret
adc
push
stos
mov
mov
sub
mov
lods
loopne
jge
int
cwde
loope
in
jl
imul
push
daa
push
retf
std
xchg
sub
jo
in
push
out
jge
pop
or
pop
sahf
leave
pop
and
test
add
ja
call
jle
add
fwait
pop
ja
mov
das
push
enter
mov
loope
mov
adc
lock
sbb
stos
(bad)
jb
mov
dec
inc
(bad)
mov
outs
scas
xchg
or
jns
in
shr
iret
add
lods
mov
cs
mov
mov
cmp
jne
mov
loopne
cdq
sub
mov
push
push
stos
icebp
sahf
sbb
pop
jecxz
shr
or
mov
jmp
xor
add
ss
retf
jg
dec
mov
jg
cwde
cld
in
clc
dec
jmp
stc
cmp
xchg
add
jno
pop
mov
cmp
or
inc
sti
adc
cs
xor
js
push
fadd
jae
xor
cmp
inc
test
call
ret
pop
jae
ins
mov
lea
sub
inc
inc
(bad)
call
jge
cmp
mov
xchg
cmps
repz
popa
cs
push
scas
jo
ds
add
mov
jo
or
nop
mov
pop
pop
push
sbb
in
jmp
div
dec
fild
sub
fs
lods
leave
mov
int
nop
and
leave
cmc
xchg
ret
and
imul
adc
shl
mov
aad
(bad)
mov
in
inc
loopne
retf
jae
stc
pop
retf
fwait
sbb
add
ret
test
and
rcl
mov
cmp
fild
jp
inc
pop
add
pop
pop
test
pop
js
iret
jnp
fsubr
mov
fisub
hlt
fwait
and
hlt
fs
xchg
xchg
inc
sub
jnp
out
jecxz
mov
call
shl
dec
mov
mov
dec
jno
pop
xchg
jno
or
cmc
pop
das
(bad)
push
dec
mov
mov
adc
push
jle
or
dec
dec
jmp
paddsw
add
inc
mov
mov
icebp
pop
out
jo
pop
ret
push
adc
mov
gs
jmp
fiadd
nop
dec
scas
(bad)
fisubr
repz
test
mov
ret
adc
bound
push
aam
js
mov
sbb
push
mov
adc
js
idiv
ret
sahf
jae
mov
stc
xchg
imul
lahf
adc
sti
(bad)
ins
mov
inc
cmc
jle
pop
mov
push
inc
imul
mov
imul
repnz
fnstsw
mov
jo
cmp
repz
vcvtss2sd
mov
in
add
xchg
dec
inc
pop
inc
sbb
repz
scas
mov
jno
sub
fbld
jnp
sbb
or
push
fdivr
fidivr
imul
popa
push
imul
test
jae
loope
cmp
add
rcl
pop
inc
jmp
sbb
ficom
ror
pop
pop
outs
repnz
(bad)
xchg
or
ror
repnz
ins
pop
xchg
cmp
cs
nop
(bad)
aaa
jmp
and
fs
shl
rol
inc
imul
jecxz
mov
into
fist
and
jb
add
movs
imul
ins
(bad)
push
shl
mov
lahf
test
pop
stos
sti
push
add
xchg
push
call
je
fild
scas
div
scas
push
(bad)
aad
mov
leave
xchg
(bad)
aam
xchg
adc
sbb
jne
pop
(bad)
pop
xor
arpl
enter
mov
dec
inc
xor
sbb
data16
mul
add
pop
xchg
mov
mov
and
push
movs
lock
fstp
cmp
or
inc
repz
jp
ret
nop
pop
retf
xor
loop
test
lea
sub
mov
bound
fnstenv
jl
jne
mov
loopne
leave
into
mov
sbb
jo
rcr
and
imul
cmp
inc
in
fld
outs
push
or
xchg
jmp
ret
mov
or
add
jno
mov
sti
retf
jle
loope
and
push
sub
jge
lods
mov
dec
cdq
int
cmc
jp
les
inc
out
push
ror
inc
scas
mov
inc
mov
push
clc
fdiv
(bad)
clc
push
js
mov
xlat
cdq
adc
xor
push
add
loopne
retf
or
out
pop
movs
xor
hlt
dec
adc
sub
xor
movs
ror
push
icebp
mov
stc
out
mul
loop
leave
and
fadd
xchg
test
fst
dec
pop
sbb
test
lds
dec
or
nop
fist
xchg
dec
dec
or
adc
xor
je
xchg
sbb
ds
xchg
stos
stos
cmp
pop
mov
cmp
mov
and
std
std
dec
jbe
cmp
mov
xor
cmp
loop
shl
fiadd
inc
xor
sti
jmp
mov
and
mov
lods
push
test
stos
(bad)
xor
retf
into
hlt
add
stos
sbb
inc
lahf
in
das
enter
fs
fnstcw
lahf
sbb
call
dec
cs
shl
mov
pop
jmp
sub
sysexit
fnstsw
jl
imul
push
jg
xchg
fst
clc
(bad)
movs
push
mov
mov
jl
push
add
sti
enter
dec
daa
fst
call
push
rcl
or
jns
cmps
test
test
inc
scas
fdivr
jns
mov
fsub
out
mov
jecxz
pop
or
push
cmps
fidivr
retf
pop
or
pop
adc
repnz
out
inc
movs
and
inc
pop
dec
jmp
scas
cmc
adc
popa
scas
scas
jo
bnd
push
jmp
in
js
and
test
pushf
mov
adc
inc
mov
call
cdq
fnstsw
(bad)
push
stos
js
or
push
adc
push
mov
sbb
loopne
and
cmps
fadd
jmp
pop
mov
aad
fs
fnstenv
in
pop
xor
push
pop
fisttp
les
adc
pop
adc
addr16
(bad)
push
mov
iret
mov
adc
jg
popa
gs
enter
div
jnp
xor
push
xchg
sbb
test
cli
or
add
test
call
cmps
out
rcl
sar
lahf
push
cmp
int
cli
out
mov
sub
push
dec
sub
test
aam
or
dec
(bad)
out
repz
mov
or
mov
fwait
test
mov
mov
enter
fisttp
dec
std
xchg
xor
mov
mov
fbstp
retf
(bad)
add
in
add
cmp
arpl
sbb
mov
cmp
into
fimul
push
mov
or
aam
add
(bad)
ins
inc
cdq
dec
cmp
pop
gs
pop
cli
je
inc
icebp
mov
outs
or
mov
mov
add
xchg
sbb
sbb
add
fidiv
std
inc
sbb
(bad)
pop
ret
mov
cmp
loope
or
sub
mov
(bad)
jnp
push
dec
push
(bad)
xor
std
push
(bad)
push
push
and
fdivr
mov
mov
std
leave
int3
push
test
fnstsw
mov
add
test
cmp
dec
cmc
inc
es
loopne
or
add
jg
add
dec
adc
in
mov
jp
mov
stos
cmp
jp
stc
sbb
or
addr16
sub
xchg
sbb
push
xor
out
scas
add
popa
inc
into
into
shr
lea
sbb
cmps
ficomp
sbb
push
test
jo
leave
scas
loopne
jle
popf
push
out
and
ds
sub
jns
std
xchg
mov
fnstsw
inc
outs
push
cld
retf
inc
pop
mov
or
pop
test
fwait
dec
in
(bad)
pop
out
xor
icebp
adc
jns
stos
fs
xor
xor
push
into
shl
sbb
adc
retf
xor
das
jo
mov
jmp
jne
pop
jnp
or
jge
dec
pop
jmp
(bad)
ins
pushf
adc
ss
clc
or
pushf
test
sbb
inc
lods
cmp
sub
sub
add
push
push
cmp
dec
push
test
sbb
loopne
adc
xor
xchg
cmp
and
loop
sbb
xchg
(bad)
mov
sub
(bad)
xor
retf
aas
mov
cmp
jecxz
add
push
adc
cwde
lods
inc
mov
dec
leave
jg
fisub
add
arpl
pusha
ss
pop
stos
and
mov
es
sub
std
cmp
nop
std
jnp
mov
jnp
ret
test
and
adc
cmp
push
pop
data16
sub
cmp
xor
lds
aam
test
into
(bad)
mov
jae
push
icebp
ffreep
call
inc
push
scas
ror
jnp
mov
pop
dec
push
mov
dec
fld
and
or
mov
sbb
nop
sbb
pop
sub
fwait
mov
or
push
mov
loope
cmp
or
pop
add
xor
fnsave
mov
cmps
jnp
cmp
push
pop
mov
pop
fs
inc
retf
sub
scas
xchg
lahf
ins
cmp
call
mov
and
cs
adc
lahf
dec
repnz
test
inc
sbb
bound
lods
mov
inc
add
push
xchg
nop
jae
fs
sub
push
push
jge
add
leave
xchg
pushf
test
xchg
or
int3
(bad)
sbb
and
movs
mov
stc
mov
fadd
in
test
pop
imul
pop
xlat
fsubr
mov
stos
jns
dec
pop
mov
daa
(bad)
mov
mov
aaa
jmp
mov
ins
mov
jg
pop
and
shr
jg
outs
icebp
arpl
inc
pop
jl
and
jne
cmp
cwde
jmp
sub
movs
nop
es
in
fdiv
mov
movs
push
mov
sahf
add
xchg
(bad)
jae
mov
push
shl
loope
cs
mov
sub
xor
stos
jo
adc
adc
add
mov
sahf
xchg
inc
(bad)
and
hlt
stos
or
adc
jne
out
stos
call
stc
lock
jnp
pmaddwd
push
add
mov
mov
gs
mov
pop
in
arpl
lds
and
jnp
stc
mov
fucom
mov
mov
jae
stos
push
bound
mov
popa
mov
arpl
and
aad
push
mov
pusha
cdq
mov
in
or
rol
rol
or
int
test
adc
sbb
fisubr
jbe
cmp
cld
or
jmp
jae
dec
fwait
pushf
stos
lock
sub
call
ds
xor
jmp
sub
and
imul
mov
movs
mov
xor
pop
pusha
push
aas
lock
xor
not
cmp
repz
jno
pop
pop
push
int
cmp
xchg
mov
xchg
push
scas
nop
mov
pop
lea
shl
rcl
fild
cmc
mov
retf
div
mov
or
and
mov
outs
scas
mov
pop
jnp
jmp
xor
ror
mov
out
ins
mov
push
fist
sbb
xchg
call
arpl
ja
add
push
push
or
(bad)
xchg
movs
mov
cmp
sbb
retf
loopne
aas
xchg
fidivr
jg
into
(bad)
loopne
jecxz
sbb
popf
adc
jae
sahf
sub
stc
cmp
lock
push
sbb
enter
pop
push
inc
sub
fmul
push
pusha
push
cmc
icebp
xchg
ins
fs
fidiv
ja
ins
dec
(bad)
mov
rep
jp
push
rcr
cmps
sar
neg
(bad)
stos
dec
xchg
(bad)
jp
cmp
ja
out
adc
adc
hlt
das
xchg
sub
xor
sbb
sahf
adc
mov
sub
jne
iret
lock
pop
inc
pushf
aas
cld
test
xor
xor
imul
lock
mov
mov
movs
pop
dec
and
daa
enter
iret
sub
mov
scas
aaa
int
inc
cmp
call
pusha
shl
mov
into
adc
out
outs
dec
adc
pop
adc
and
out
mov
jle
(bad)
mov
inc
xor
test
xchg
push
jnp
cmc
stos
cld
xchg
loope
jmp
xor
stos
xor
mov
mov
stc
mov
adc
out
stos
mov
fadd
inc
ret
ja
movs
repz
pop
repnz
sub
jnp
jl
ror
imul
and
enter
icebp
addr16
repnz
sbb
dec
in
iret
out
stos
jns
shl
jp
test
inc
aas
js
or
sub
cli
hlt
add
ret
fiadd
adc
shr
out
out
fild
cmp
addr16
fs
or
(bad)
cmps
lods
dec
dec
jle
test
mov
dec
test
pop
cwde
dec
pop
sahf
retf
push
mov
push
sub
leave
mov
adc
and
call
mov
adc
and
mov
mov
pop
inc
push
or
ud1
shr
adc
jbe
dec
lock
(bad)
out
xchg
adc
xor
popf
shr
sub
mov
rol
lea
in
loop
adc
call
fnstsw
test
push
das
and
jnp
rcl
xchg
xor
imul
add
lds
inc
sar
sbb
stos
pop
or
aaa
outs
push
mov
scas
jns
push
mov
xor
push
pusha
ret
or
cmps
jp
daa
sbb
sbb
mov
jp
cmp
sahf
push
test
inc
cmp
mov
xor
inc
ret
cmc
push
retf
push
(bad)
mov
or
adc
jne
lock
xor
or
nop
not
push
push
cmps
popa
stc
adc
mov
outs
hlt
js
xchg
push
fbstp
iret
mov
dec
sar
out
in
dec
sar
rcr
or
or
ds
pop
popf
and
push
fsubr
(bad)
mov
cmps
adc
cwde
sub
dec
push
dec
out
out
cmp
xchg
and
lods
pop
adc
jmp
dec
push
pop
imul
cdq
loopne
jbe
jle
and
test
scas
and
repnz
addr16
mov
enter
jmp
movs
mov
xor
mov
into
or
popf
lahf
inc
jae
in
clc
fild
dec
shr
sbb
pop
shl
dec
std
leave
lds
add
mov
dec
or
dec
icebp
cwde
pusha
add
fisttp
stos
imul
add
jbe
adc
cli
push
xchg
sub
sbb
jp
int
mov
push
pop
mov
push
push
cdq
rol
fwait
lea
add
pop
cwde
retf
nop
in
sti
pop
enter
retf
pop
push
mov
add
or
je
es
sub
add
mov
sahf
jae
mov
mov
sbb
ret
mov
int
addr16
sub
ss
push
pop
bound
add
sbb
add
mov
ins
fs
sub
fsub
cli
cmp
or
inc
mov
(bad)
(bad)
mov
scas
in
into
add
add
mov
mov
fld
jbe
call
xchg
out
je
stos
jg
inc
add
call
loopne
mov
mov
nop
push
xor
je
lahf
mov
ret
add
cwde
punpcklwd
push
pop
test
ja
fsubr
and
sub
jo
loop
out
mov
test
popa
(bad)
bound
adc
iret
mov
ds
adc
jmp
or
push
inc
(bad)
std
mov
out
sbb
dec
shr
sahf
jnp
adc
mov
jb
jg
test
xor
mov
sub
cmp
arpl
dec
push
pop
sti
sbb
adc
cmp
mov
icebp
adc
(bad)
xor
xchg
movs
pop
sub
outs
ins
mov
cmc
push
aam
ds
sbb
mov
adc
fstp
add
out
out
out
mov
mov
pop
fdivr
int3
and
xor
pop
jl
(bad)
call
mov
inc
xchg
dec
inc
icebp
mov
std
push
add
xchg
ins
mov
or
adc
mov
jmp
adc
retf
scas
call
add
push
cli
sub
movs
add
mov
and
jnp
scas
(bad)
xchg
dec
dec
lea
jb
int
or
in
in
fisub
cmps
dec
cwde
sub
mov
inc
aad
xchg
sti
ror
shr
mov
jmp
lds
push
sahf
cld
addr16
js
adc
inc
sbb
fs
mov
mov
or
retf
movs
cwde
cmp
cmp
cmp
and
gs
imul
push
ror
cwde
fnsave
loopne
push
and
rcl
outs
in
jge
mov
cmps
in
sbb
or
(bad)
fst
add
lods
es
jno
jecxz
retf
xchg
jle
rcr
in
enter
cmp
inc
and
das
shl
clc
mov
xor
inc
jbe
cmps
dec
xor
aam
nop/reserved
jg
fcmovnu
in
cdq
fisub
jb
stos
xor
add
or
xor
aad
cmps
dec
push
call
pop
sbb
sub
test
daa
pop
in
mov
mov
pop
jmp
adc
push
retf
and
pop
mov
pop
mov
push
pusha
jecxz
bound
imul
adc
aas
pop
mov
sub
repz
dec
jmp
mov
aad
stos
pop
xchg
cs
pop
scas
test
or
jg
test
pushf
fild
repz
les
mov
push
pop
test
fcmovb
std
lds
push
dec
push
les
popf
xchg
mov
dec
gs
bound
mov
jne
sbb
pushf
pop
sbb
sbb
pop
jns
jne
ret
gs
rol
xlat
lods
add
add
(bad)
(bad)
repz
dec
cmp
in
inc
cmp
test
sbb
mov
push
dec
lea
sbb
cmp
xor
shr
jne
mov
cmp
lea
leave
add
repz
daa
sbb
fisub
push
sbb
mov
push
mov
or
shl
push
adc
add
popa
lods
cld
stos
xlat
jg
jecxz
push
mov
test
add
jno
or
sahf
jnp
mov
fild
adc
(bad)
push
in
dec
cmps
mov
pushf
lahf
int3
sti
aaa
std
dec
mov
fwait
ins
add
add
mov
fs
pushf
push
out
retf
or
fisub
enter
xor
jecxz
mov
jle
ins
sbb
out
adc
push
movlps
call
fild
popf
pusha
out
clc
rcl
push
aad
sbb
sub
mov
test
push
in
sub
mov
fs
daa
inc
dec
call
xor
out
stos
clc
push
cmp
mov
sbb
or
sub
rcl
or
cmp
aam
mov
call
(bad)
or
fidivr
test
pop
xchg
add
fdivp
push
adc
cmps
mov
in
jo
mov
in
dec
shl
lea
xor
sub
and
sub
push
inc
pop
xchg
dec
fadd
sbb
mov
pushf
sbb
dec
ror
jae
js
aad
iret
pop
pop
sub
jge
(bad)
push
enter
sub
in
xor
jne
(bad)
arpl
or
cmp
out
add
add
in
xchg
std
nop
pop
pusha
lods
fnstenv
loopne
cmp
js
into
pop
test
jle
push
xor
ror
sub
in
dec
push
mov
leave
pop
std
std
push
push
test
xchg
mov
adc
gs
push
inc
mov
nop
fistp
pop
jnp
xor
ja
lahf
retf
fidivr
cmp
imul
ffree
adc
adc
or
ror
sbb
cmp
out
xor
fstp
data16
push
jle
ret
sbb
ins
repz
ins
xor
inc
scas
xchg
push
repnz
dec
and
mov
lahf
loope
ret
or
fldcw
aaa
sbb
stc
loope
sti
lods
adc
mov
push
pushf
je
sti
xchg
scas
xchg
mov
sub
xchg
shr
and
fnstcw
ds
mov
daa
fidiv
pop
(bad)
jae
repnz
pop
inc
adc
ror
ss
call
rcr
scas
sbb
rol
dec
(bad)
imul
push
xchg
adc
aad
mov
mov
sar
retf
out
xchg
mul
in
out
cld
mov
adc
jp
push
and
add
mov
js
pushf
cmp
pop
cmp
mov
cmp
jmp
addr16
adc
fbld
push
or
stos
xchg
jecxz
aas
nop
enter
daa
(bad)
(bad)
inc
inc
aaa
push
pushf
sub
mov
retf
mov
add
scas
jmp
lock
sub
sub
sti
inc
cdq
or
push
add
popf
mov
ret
clc
xchg
retf
pop
sub
pop
stos
add
xor
inc
bound
loope
fdivr
push
das
bound
aas
lock
es
mul
add
xor
test
inc
inc
jbe
adc
jbe
enter
pop
fstp
fsub
and
jp
rcl
push
and
push
sub
cli
xor
sbb
sub
leave
dec
in
pop
(bad)
mov
adc
push
shr
int
or
pop
xor
xchg
mov
sbb
out
push
xor
shr
push
cmp
stc
inc
mov
adc
ss
sbb
lock
sbb
cli
outs
pop
fs
inc
loope
test
aam
test
iret
stos
xchg
sub
pop
sbb
repnz
mov
imul
lods
pop
push
xor
icebp
aad
jbe
dec
int3
test
inc
push
adc
jl
pop
mov
dec
popf
icebp
xchg
fstp
add
(bad)
imul
or
loope
test
fst
lods
mov
add
and
ins
ret
sar
inc
sbb
test
(bad)
out
loop
enter
xchg
js
sbb
inc
rol
jnp
call
les
add
ja
arpl
mov
xchg
sbb
and
sbb
mov
sets
scas
sub
jecxz
add
mov
add
popf
lods
imul
and
sub
or
test
popf
sub
cmp
mov
ret
and
and
es
pusha
in
inc
mov
addr16
cmp
dec
repz
sbb
iret
sbb
enter
arpl
inc
shl
push
push
and
cmp
inc
(bad)
inc
nop
fstp
out
shr
lods
stos
add
or
dec
xor
jg
shl
sub
ins
int3
sub
(bad)
ins
mov
inc
int3
jnp
jae
out
daa
retf
movs
aad
pop
nop
ins
mov
repnz
and
out
sbb
adc
ss
lods
dec
imul
jbe
adc
jns
and
push
fistp
arpl
cmp
sbb
and
mov
or
mov
and
and
mov
les
cmps
mov
(bad)
mov
push
out
test
push
ret
ins
jl
sub
sbb
daa
arpl
adc
call
jp
mov
sbb
sub
(bad)
sbb
ins
sub
mov
adc
(bad)
push
sbb
xchg
repnz
push
test
lods
or
jmp
cmc
or
pop
add
das
sub
push
mov
jge
push
fs
sub
cdq
fidivr
arpl
xlat
sbb
lahf
mov
jbe
inc
test
dec
lea
(bad)
inc
xor
fwait
mov
mov
push
ins
mov
fstp
iret
stos
push
popf
or
fist
mov
test
inc
or
inc
call
in
mov
addr16
icebp
test
rol
jne
jne
enter
and
xchg
push
shl
mov
fcmove
hlt
pop
(bad)
push
(bad)
or
daa
mov
fist
ret
mov
cld
jmp
pusha
out
js
sbb
or
add
nop
xchg
inc
cmps
jg
aaa
je
dec
clc
mov
mov
das
std
cmp
mov
mov
and
mov
mov
in
jg
adc
in
loope
mov
rcr
popf
sub
fstp
test
xor
icebp
test
stos
xchg
cli
loopne
nop
fstp
bound
mov
outs
adc
xchg
lahf
imul
imul
cmp
jle
fcmove
sar
adc
mov
add
in
clc
sub
or
(bad)
outs
not
jno
(bad)
hlt
scas
cmp
push
aaa
stos
test
sbb
loopne
dec
stos
sub
pop
mov
cs
arpl
in
ret
xchg
pop
add
bound
mov
cmp
out
pop
mov
das
in
jp
xchg
clc
bound
idiv
and
cwde
xor
dec
ret
pushf
es
mov
jecxz
lods
mov
in
lds
and
cmp
aaa
xor
sub
dec
add
pop
dec
or
cmp
inc
in
outs
cdq
cmp
aas
pop
cdq
ds
xchg
cli
cdq
xchg
push
push
aad
call
mov
mov
fdivrp
inc
dec
mov
sti
sar
jo
out
cmps
xor
dec
in
inc
enter
in
dec
imul
adc
cmp
sub
adc
pop
jl
stos
push
loopne
and
js
push
jg
xchg
jle
and
xor
sbb
test
mov
mov
sar
scas
push
xchg
xchg
popa
lods
cmp
jl
fwait
int
pop
mov
push
pop
push
cdq
lods
jl
iret
xchg
outs
es
test
or
movs
out
mov
sar
cmps
stos
cmps
xor
adc
xlat
push
inc
aad
mov
cmps
jge
cwde
stos
push
mov
test
fdiv
mov
mov
fsubr
inc
mov
push
(bad)
xor
jnp
gs
(bad)
rcl
inc
lds
inc
inc
pop
stos
enter
jbe
lahf
ins
adc
pop
sub
popf
daa
ss
xlat
int
out
in
xor
push
mov
inc
retf
pop
pop
sbb
cmp
xchg
xchg
call
out
xchg
aad
out
test
into
cmp
lock
adc
test
cld
(bad)
sbb
sub
dec
xchg
sub
cwde
es
xchg
ret
fwait
ins
fadd
xchg
mov
jnp
sar
movs
mov
jb
pop
inc
mov
js
sbb
fcomp
xor
int3
(bad)
(bad)
jmp
stos
fidiv
dec
mov
das
popa
sbb
pop
sahf
xchg
imul
xchg
loop
mov
call
push
push
jecxz
cli
call
out
mov
push
jb
xlat
call
retf
cmp
jmp
mov
hlt
adc
xchg
loop
(bad)
jmp
loop
sbb
add
neg
nop
scas
mov
and
dec
jbe
dec
or
neg
shr
cmc
xlat
(bad)
gs
cmp
ins
pop
adc
dec
ret
stc
aam
lea
push
xchg
std
or
cmp
inc
bts
inc
cdq
pop
cmps
add
xor
fisub
nop
ss
pushf
adc
(bad)
bound
xchg
push
daa
mov
mov
jp
mov
inc
push
js
push
adc
xchg
dec
(bad)
out
jns
inc
push
xor
ins
or
add
adc
jne
and
add
sbb
cmps
mov
loope
ja
jmp
mov
pop
jmp
or
fisub
stos
xor
xlat
sti
pop
jns
dec
pop
sub
pop
pop
retf
mov
cmps
icebp
sar
fs
call
movs
repnz
ins
fidiv
jae
cmps
hlt
mov
stos
or
xor
dec
arpl
add
call
mov
xlat
(bad)
in
pop
xchg
pop
or
add
jae
cld
les
int3
not
(bad)
cli
sbb
sub
inc
hlt
push
pop
mov
xchg
sub
lods
fldenv
lock
inc
inc
jns
mov
in
gs
or
cmps
repnz
cmp
in
sbb
mul
inc
mov
mov
or
push
mov
mov
out
jp
mov
shl
lods
(bad)
dec
xor
test
and
outs
shl
dec
mov
retf
std
std
inc
(bad)
aad
nop
clc
es
out
mov
lea
movs
xchg
repz
pusha
movs
ret
add
fcomp
out
and
sbb
lahf
cmp
add
rol
cmps
pop
xchg
or
pop
inc
stos
mov
(bad)
stos
pop
jle
shl
(bad)
jg
mov
sbb
jmp
sub
ins
and
in
push
nop
popf
js
xor
(bad)
jmp
inc
push
outs
cmp
jae
mov
cmp
push
pop
mov
and
scas
shr
into
fcomip
fidivr
adc
jbe
jecxz
jnp
mov
push
pop
pop
pop
mov
inc
out
retf
fld
retf
xor
mov
jno
test
je
scas
xor
dec
or
pusha
(bad)
js
pop
sub
pop
cmp
add
lahf
xor
xor
ret
ret
mov
daa
sbb
cli
fld
popf
mov
dec
cwde
in
jp
ds
jmp
and
lahf
or
fldcw
mov
aad
stc
fisttp
popa
add
rcr
repnz
ins
je
add
pushf
test
mov
mov
shr
(bad)
mov
fldenv
mov
test
inc
les
cmps
or
es
popf
inc
jbe
ja
pop
inc
and
iret
sahf
mov
push
push
or
leave
test
dec
popa
div
push
sub
shl
push
push
mov
ds
arpl
and
addr16
jmp
shl
dec
add
fs
push
sub
dec
sar
jne
mov
icebp
scas
lods
js
lds
je
pop
jg
jmp
jge
pop
arpl
inc
lods
scas
or
repnz
shl
sbb
shl
pop
retf
ficom
pop
add
mov
pop
pop
fst
(bad)
jnp
xchg
out
shl
je
xor
iret
movs
xchg
movs
adc
jne
jecxz
inc
xlat
shr
push
aas
and
dec
fs
pop
hlt
jnp
and
sahf
stos
rcr
movs
aaa
lds
xor
aam
sbb
lahf
or
sub
fndisi(8087
sbb
adc
mov
hlt
sub
repnz
aad
in
jnp
mov
mov
and
das
and
xchg
sub
xchg
lods
xchg
retf
mov
(bad)
shl
inc
push
adc
adc
push
test
or
outs
enter
mov
mov
adc
in
cmp
sbb
inc
popa
inc
ds
fld
add
std
outs
and
cmps
dec
hlt
sub
clc
into
(bad)
movs
or
out
mov
(bad)
scas
cli
jb
out
loope
loop
rol
add
stc
inc
adc
clc
mov
in
jno
sub
pusha
mov
daa
and
cmc
ja
or
mov
imul
cmp
pop
(bad)
jp
addr16
mov
out
addr16
sub
and
push
sub
std
add
jo
inc
pusha
in
sub
stos
jno
rcl
and
fwait
hlt
lods
setno
rcr
inc
outs
pusha
mov
xchg
icebp
mov
leave
cmp
movs
test
ret
js
mov
and
xlat
mov
test
les
mov
mov
frstor
pop
in
pushf
mov
push
mov
mov
inc
cmp
and
pusha
loop
int3
(bad)
xchg
xor
mov
push
shl
dec
or
xor
pop
and
or
and
shr
jmp
xchg
pop
sub
pop
xor
(bad)
cmp
and
pop
mov
xchg
sbb
popf
xchg
sbb
mov
cmp
pop
test
lods
ror
icebp
out
icebp
rcl
sub
pop
dec
pop
xchg
pop
xchg
pushf
push
sbb
movs
sbb
retf
sub
mov
(bad)
sti
fs
in
sbb
pop
xchg
fbstp
sti
mov
in
inc
sub
xchg
mov
dec
bound
rcr
sahf
loopne
movs
test
or
inc
pcmpgtd
nop
stc
mov
sub
mov
jb
push
pop
out
jnp
in
nop
fadd
mov
inc
inc
sbb
push
xor
ss
icebp
das
push
inc
jp
aad
mov
mov
xchg
scas
mov
inc
push
fst
adc
ret
stos
outs
pop
xchg
xchg
mov
mov
add
repz
popf
pop
cwde
aaa
aam
jo
xchg
sbb
add
push
xor
dec
and
jle
jne
icebp
xchg
jmp
and
rcl
mov
retf
jb
jne
or
cld
jo
sbb
jns
cdq
test
(bad)
icebp
jnp
adc
dec
jecxz
cmp
cmp
fdiv
je
outs
and
inc
fdivr
xchg
pop
rol
stos
dec
xor
lea
enter
call
push
test
sub
xchg
mov
popf
mov
sbb
or
inc
mov
arpl
jbe
sbb
pop
inc
icebp
out
(bad)
xor
(bad)
js
adc
pusha
pop
mov
mov
pop
dec
mov
ror
jno
add
test
sub
cmp
jecxz
ret
test
test
push
xor
xchg
add
push
add
xchg
inc
dec
cdq
xchg
add
dec
iret
sbb
xchg
mov
xor
das
lods
mov
xchg
sbb
scas
les
pop
push
mov
dec
bound
popa
jae
ret
pop
inc
xor
mov
add
aad
pop
test
and
inc
arpl
movs
mov
ins
imul
shl
test
add
push
inc
inc
sub
js
clc
push
xchg
stos
add
js
sub
retf
stc
pop
test
dec
sbb
sub
adc
jp
push
cmp
arpl
dec
call
sub
inc
sbb
dec
push
retf
das
pop
neg
ret
mov
ret
mov
sub
and
call
repz
dec
js
hlt
ror
pop
and
popa
cmps
and
retf
adc
popa
mov
pusha
ret
stos
pusha
xor
or
es
out
mov
sub
adc
sbb
sbb
pop
or
adc
cmp
mov
xor
mov
dec
pop
xchg
shl
test
lock
out
xchg
ror
jmp
and
pop
jno
adc
lock
imul
das
jo
in
xor
dec
pop
xchg
out
cs
cmp
jp
lock
in
jl
pop
jmp
repz
push
add
aam
ins
add
or
cmp
out
pop
mov
adc
sbb
cmp
rcl
adc
ins
mov
cmp
sahf
(bad)
sbb
call
xchg
add
sub
ja
loopne
adc
ds
sbb
xchg
shr
(bad)
stc
sub
dec
fsub
fisttp
outs
aad
ret
out
mov
adc
sub
loopne
adc
rcr
sub
das
sub
jmp
outs
std
inc
repz
mov
cwde
adc
repz
mov
xor
cmps
lods
scas
mov
pop
or
mov
mov
and
xchg
outs
mov
mov
loope
std
test
repnz
outs
mov
cmp
aaa
add
cmp
mov
ins
push
xor
in
gs
repnz
mov
in
xor
jb
sub
(bad)
out
les
(bad)
mov
fnsave
and
jmp
gs
ret
jle
fadd
inc
addr16
jae
add
jecxz
xor
inc
outs
fnstsw
out
je
in
aad
mov
sbb
cmps
pop
icebp
call
ror
(bad)
lods
sbb
pop
or
rcr
mov
aad
cmp
scas
dec
push
or
test
jbe
dec
mov
push
inc
ficomp
push
in
loopne
idiv
and
pop
outs
fs
push
adc
ret
add
retf
dec
sub
mov
arpl
(bad)
ins
mov
xor
dec
add
mov
mov
or
adc
fist
icebp
mov
fwait
xchg
cmp
gs
sahf
rcr
cmc
(bad)
cli
dec
sbb
sub
mov
push
sub
imul
icebp
dec
test
or
(bad)
cmps
arpl
sbb
xchg
jnp
dec
mov
cwde
mov
test
sbb
std
lods
fstp
inc
std
pop
sub
jg
push
sub
and
loopne
imul
pusha
(bad)
icebp
std
call
pop
xchg
xor
shl
push
dec
cmps
addr16
nop
add
jae
push
push
imul
sbb
fnstsw
(bad)
in
xchg
outs
pop
mov
add
and
bound
dec
jmp
mov
sbb
nop
sbb
stos
sahf
and
adc
inc
sbb
fsubr
les
cmps
(bad)
pop
push
mov
or
pusha
jecxz
test
dec
cmp
adc
adc
cli
(bad)
stc
mov
pop
adc
retf
mov
outs
sar
loope
aam
shl
mov
fcomp
into
dec
pushf
add
or
mov
inc
clc
div
add
cmp
push
ret
or
jbe
push
retf
lods
stos
sub
xchg
pushf
nop
pop
daa
std
add
sbb
or
loopne
push
ins
je
pusha
ins
mov
push
mov
rol
cmp
and
addr16
in
cvttps2pi
mov
movs
int3
and
jne
inc
fwait
and
mov
pop
dec
ss
and
rol
jge
add
mov
mov
cmp
cmc
ret
inc
sub
jbe
mov
push
cmp
add
mov
(bad)
mov
out
and
in
test
inc
adc
push
xchg
pop
icebp
or
jnp
stc
scas
add
or
mov
ds
jecxz
xor
pop
jo
cmp
mov
adc
popa
(bad)
je
mov
or
inc
ins
shl
ins
aaa
div
mov
div
jg
mov
sub
lahf
adc
cmp
hlt
aam
lods
loope
ins
push
xor
jge
iret
ins
xor
sub
les
cmps
repz
xchg
pop
adc
adc
js
dec
jmp
add
in
push
clc
add
jecxz
mov
shl
fisubr
fistp
sub
jge
in
mov
fwait
in
mov
scas
xchg
outs
repz
xlat
push
push
pop
pushf
pop
add
lea
adc
xchg
scas
(bad)
fisttp
test
mov
or
and
ins
bound
sti
pop
jecxz
adc
mov
xor
push
jecxz
cmp
addr16
pop
inc
push
into
and
xchg
and
xchg
push
inc
in
addr16
push
fst
xchg
cld
jb
dec
out
or
mov
fcomp
arpl
pop
fdivr
fwait
pushf
cmp
jg
fsubp
mov
cmp
cmps
inc
(bad)
mov
ins
mov
call
dec
or
cmc
jbe
sub
in
mov
xchg
push
inc
sub
mov
dec
test
jne
cmps
ret
std
repz
rcl
add
hlt
inc
or
cmp
mov
call
or
in
mov
scas
int
movs
xor
jmp
repnz
in
(bad)
idiv
xchg
xor
sub
jmp
lds
jo
jmp
jns
fs
xor
push
adc
adc
fstp
js
pop
cmp
pop
adc
fimul
cmp
xchg
cmps
(bad)
sub
xor
icebp
cli
mov
cli
fist
dec
xor
cmp
ins
sbb
and
cli
and
cdq
cmps
sub
mov
xchg
dec
adc
cmp
mov
retf
rcr
dec
xchg
jmp
xor
(bad)
mov
mul
repz
shl
xor
les
ficom
push
inc
xor
int
stos
mov
sbb
data16
add
jnp
pusha
or
mov
inc
mov
add
dec
fdivp
outs
int
mov
cmc
jae
cwde
and
je
and
outs
icebp
cmp
push
pusha
mov
jge
push
in
fst
lahf
gs
push
push
jo
stos
push
and
mov
sub
add
xchg
xlat
shl
test
int
inc
fcmovbe
mov
stos
(bad)
dec
add
pop
ja
xor
je
outs
push
ss
mov
push
and
jp
aas
outs
jl
ret
mov
icebp
pop
mov
and
std
mov
std
out
dec
mov
cli
or
jg
mov
cmp
nop
add
jbe
mov
add
xchg
pop
jl
cmp
jbe
and
nop
mov
add
jo
xchg
mov
jo
mov
jae
cmps
mov
add
jge
fst
cmps
inc
jg
not
pop
cld
pop
mov
jmp
xor
pop
push
rcr
pusha
jns
hlt
mov
jne
jo
test
rcr
addr16
add
outs
add
nop
aam
icebp
xchg
into
dec
rcl
or
xor
hlt
setns
in
inc
in
jb
cmp
les
mov
adc
and
xor
test
int
xor
ins
mov
mov
xor
icebp
xor
mov
lahf
pop
push
lods
jmp
push
jo
jle
loop
repz
outs
repnz
adc
out
cmps
lods
dec
fisubr
mov
inc
dec
addr16
or
add
jbe
pop
lea
aad
mov
loope
and
jo
les
int
sbb
add
clc
fdivrp
gs
lock
(bad)
pop
popf
and
and
add
inc
push
mov
(bad)
je
mov
adc
jmp
test
adc
vpunpcklbw
push
jle
loope
stos
dec
adc
test
pusha
inc
in
push
lock
int
repnz
adc
mov
popf
je
pcmpeqw
rol
repz
sbb
mov
les
fild
dec
adc
and
mov
jge
sbb
cli
mov
pop
push
std
mov
outs
mov
shl
jp
aas
out
retf
test
mov
adc
jmp
cmp
shr
lods
mov
(bad)
xchg
gs
jmp
inc
out
dec
push
mov
retf
sub
fsub
pop
int
xchg
int3
stos
cmp
imul
mov
leave
mov
pop
inc
ficomp
rcr
xchg
mov
fsubr
mov
or
mov
int3
add
inc
ret
or
xor
sbb
mov
in
dec
push
jmp
daa
add
gs
mov
and
outs
repnz
fild
jnp
test
cmp
sbb
cmps
cmps
aaa
lods
inc
pop
repz
dec
mov
loopne
les
push
ror
movs
mov
jg
aam
data16
add
(bad)
inc
les
add
mov
mov
test
inc
push
or
jo
or
bound
and
iret
xchg
pop
and
and
je
push
cmp
mul
inc
enter
jmp
and
test
inc
cdq
cmp
rcl
(bad)
test
fmul
mov
jno
je
add
je
jp
or
adc
sahf
cld
jb
dec
cld
and
iret
add
fnstcw
ret
retf
rcr
xor
repnz
cwde
push
mov
mov
jmp
aam
out
dec
mov
dec
push
int
sti
mov
inc
pushf
xchg
loopne
hlt
or
or
fwait
adc
mov
test
arpl
addr16
mov
shl
lea
rcr
push
int
cld
shl
(bad)
sbb
popa
sub
pop
icebp
mov
je
mov
call
mov
mov
iret
dec
push
test
hlt
jnp
pushf
stos
mov
ins
mov
lods
aaa
push
in
xchg
jnp
xchg
cs
popa
xor
outs
test
xchg
stos
adc
fst
xchg
cmp
sub
stos
std
outs
data16
mov
popa
dec
stos
sbb
sar
pop
fmulp
inc
(bad)
daa
cmps
or
mov
cmc
cmp
out
or
add
ret
pop
and
stos
add
dec
mov
cmp
adc
xchg
mov
arpl
imul
icebp
sar
int3
int3
xchg
in
je
cmps
mov
dec
jmp
adc
dec
sub
adc
pop
js
jle
cmp
dec
loopne
iret
cmp
adc
xlat
mov
and
push
xchg
sub
(bad)
ret
test
in
jns
test
scas
cs
sub
int3
test
sub
sbb
vpmuludq
xrelease
inc
mov
not
push
lea
fisttp
fmul
repz
or
xchg
xor
mov
sbb
mov
rcl
cwde
push
jns
inc
test
pop
in
add
xor
pop
pop
(bad)
out
sbb
pop
mov
rcr
(bad)
jmp
and
(bad)
xor
push
add
pop
xor
sbb
data16
(bad)
inc
fidivr
pop
lock
and
leave
out
dec
mov
fstp
jmp
jb
stos
and
cmps
adc
cmps
fmul
cli
and
dec
adc
xor
xchg
cmc
in
sbb
icebp
fimul
inc
jle
icebp
jbe
xchg
mov
mov
and
mov
pop
ret
enter
jge
inc
mov
push
mov
cwde
cmp
push
jecxz
push
push
movhps
pusha
loop
loope
add
js
dec
adc
mov
dec
push
mov
jnp
dec
sbb
sbb
and
call
arpl
adc
rol
daa
xor
outs
inc
jmp
retf
sbb
adc
add
xchg
sti
xlat
push
cld
jae
pop
repz
out
stos
std
addr16
out
cmp
out
ffree
jp
xlat
es
lahf
repnz
xchg
call
rcl
bound
cmp
jae
mov
aam
fldcw
hlt
in
and
add
test
popf
fs
cdq
test
and
(bad)
pop
xor
mov
popf
jmp
aam
int
or
rcr
adc
pop
ret
jl
add
jnp
loope
xor
mov
lods
mov
ror
cmp
lea
mov
stos
mov
sbb
xor
cmp
int3
jle
or
lods
mov
lahf
repz
adc
push
leave
and
rcr
fdivp
jecxz
xchg
push
xor
lds
jecxz
test
imul
or
and
inc
push
call
pushf
sbb
out
ins
mov
cli
nop
ins
mov
nop
aas
out
mov
push
cld
sbb
cmps
add
outs
shr
aaa
push
call
sub
test
xor
sub
push
inc
xlat
mov
xchg
mov
or
cmp
retf
imul
daa
pop
loop
jmp
push
sub
add
ret
nop
inc
push
sahf
pop
(bad)
push
inc
jecxz
push
ds
add
aaa
out
mov
inc
mov
xchg
xchg
and
jp
cdq
lahf
daa
adc
scas
sahf
or
add
addr16
les
bound
jno
jbe
xchg
loopne
push
outs
pop
cli
in
push
cmps
add
xchg
jle
cwde
adc
sub
push
mov
inc
xchg
or
aad
dec
jp
popa
push
sti
and
cmp
loope
mov
mov
jne
or
cli
mov
cmc
and
cmp
out
fdiv
cmp
pop
xchg
jecxz
call
pop
int
dec
or
in
pop
sbb
pop
add
addr16
pop
test
push
ss
daa
or
idiv
test
loop
in
add
pop
add
adc
xlat
jp
or
push
push
aad
inc
ins
xor
adc
aam
add
inc
stc
fimul
inc
push
sub
ror
mov
sbb
fidivr
jmp
aaa
into
jp
adc
(bad)
xor
mov
and
shl
jns
xchg
test
mov
fwait
jmp
repnz
cmc
fld
stos
lock
push
cmp
(bad)
scas
stos
or
add
mov
cmp
test
xor
or
push
and
and
xchg
vandnpd
and
cld
xor
lock
and
jns
jl
sbb
jmp
add
cmp
arpl
rol
fbld
inc
mov
lea
movs
outs
test
push
retf
mov
sbb
cmp
jle
sbb
pop
cdq
pushf
cmp
repz
mov
push
clc
frstor
xchg
jb
sub
lods
outs
dec
out
mov
jge
stos
sub
push
out
enter
jl
mov
xor
xchg
push
fild
dec
jg
jecxz
enter
push
pusha
pop
sub
dec
inc
dec
adc
popa
push
rcl
jecxz
and
(bad)
popa
xor
out
mov
xchg
ins
mov
imul
jle
and
adc
mov
mov
adc
jno
lahf
mov
movs
repz
iret
int
into
dec
cmp
daa
(bad)
(bad)
pop
sub
mov
or
sbb
pop
int
ror
aam
mov
dec
pop
dec
pop
lahf
push
shl
pusha
push
ror
je
stos
ja
imul
out
or
jmp
sbb
add
cmp
rol
mov
cmp
movs
xchg
inc
xchg
pop
daa
sbb
or
nop
out
sub
dec
aam
es
in
int3
xchg
and
mov
(bad)
fisub
in
adc
xor
adc
ret
push
and
push
mov
retf
rcr
mov
cmp
setle
push
jmp
loope
adc
sahf
fimul
sub
clc
mov
fbstp
loope
ror
rcr
stos
cdq
jo
scas
fsubr
(bad)
lock
mov
dec
in
cmp
add
push
or
lods
inc
xor
(bad)
stos
loope
mov
jmp
jmp
stos
call
rol
mov
scas
mov
mov
clc
xchg
imul
mov
jo
popf
xor
mov
retf
or
or
mov
cdq
leave
xor
push
aad
pusha
cmp
std
mov
int
outs
ins
outs
pop
mov
in
or
sbb
fmul
and
jecxz
jns
sbb
cs
not
pminsw
mov
sbb
movs
cmp
bound
sbb
retf
loop
into
pop
icebp
sub
inc
lock
movntps
jl
cmps
les
mov
loop
gs
leave
add
adc
scas
cmp
push
pop
sbb
clc
xor
sbb
sbb
inc
push
fisub
call
lods
rol
sbb
sub
movs
stos
jmp
sub
sub
stos
push
pop
and
lods
mov
or
xchg
clc
dec
adc
dec
les
(bad)
stc
ins
pop
adc
or
pop
cmp
sbb
and
jmp
lahf
inc
xchg
and
pop
mov
in
lahf
cmp
aas
popa
adc
retf
mov
bound
iret
or
out
xor
mov
repz
add
sub
inc
ja
or
repz
xchg
pusha
jo
adc
mov
adc
sahf
(bad)
in
ins
pop
je
inc
mov
jb
inc
cdq
or
gs
cmp
add
imul
das
dec
mov
and
xor
mov
pop
sbb
repnz
xor
loopne
jae
mov
ins
dec
clc
adc
mov
mov
scas
aad
and
movs
push
mov
ds
loope
aas
out
lahf
add
dec
clc
adc
jg
or
in
pop
push
mov
sub
adc
or
div
lock
out
and
inc
and
inc
sbb
std
stos
pushf
dec
std
push
sar
adc
lods
sbb
adc
popf
call
(bad)
and
aam
or
ret
mov
mov
fwait
pop
(bad)
mul
cld
xchg
cmp
xor
ins
xlat
dec
retf
loopne
(bad)
pop
or
cmp
sub
or
and
cli
mov
pop
idiv
js
sub
add
sar
push
nop
or
xor
inc
jmp
adc
repz
fcomp
std
sar
aaa
fist
sub
sub
les
add
adc
sub
inc
ins
int
mov
int3
(bad)
popf
jmp
and
call
into
xchg
cli
sub
test
adc
mov
xor
fwait
shl
sar
ret
push
sbb
retf
add
popa
out
in
es
fs
push
inc
push
mov
in
xor
xor
test
dec
imul
or
inc
mov
aas
out
push
call
popa
sbb
cmp
adc
test
fist
sub
xchg
sub
aaa
in
mov
nop
sbb
nop
push
stos
les
mov
jo
clc
lods
dec
das
(bad)
cdq
cmp
mov
fninit
movs
loope
inc
scas
das
jp
xchg
mov
imul
hlt
pop
inc
mov
fs
aad
vandnps
add
mov
repz
fcomp
and
and
mov
sbb
add
lods
fistp
adc
and
or
xor
and
pop
xchg
xor
or
dec
inc
add
push
mov
xor
add
sub
ret
dec
mov
jb
loopne
popa
jge
out
add
and
xchg
call
sub
add
ficom
aad
gs
call
cli
sub
mov
inc
fistp
mov
jl
jne
push
sbb
js
add
xor
movs
and
xor
inc
cmp
mov
fdivr
push
add
jns
sti
shl
cdq
xor
int3
pop
popf
push
in
pop
adc
push
rol
or
out
lds
push
movs
lds
test
loopne
and
leave
loop
mov
call
call
adc
adc
add
adc
mov
mov
mov
test
push
imul
sbb
fwait
push
(bad)
cmp
inc
mov
pop
jecxz
add
sahf
pop
cli
xor
inc
rcr
mov
pop
ret
sbb
je
push
mov
mov
retf
test
mov
and
mov
ret
or
push
dec
pop
add
sbb
xchg
mov
pop
dec
adc
fwait
sub
or
adc
jnp
mov
xor
xchg
fnstcw
(bad)
in
push
pop
adc
xor
in
notrack
cmp
and
sub
dec
or
les
xchg
mov
cld
xchg
popa
test
jle
(bad)
xchg
xchg
es
fcomp
or
cmp
xchg
cmp
clc
and
test
mov
mov
test
jne
das
push
mov
sar
aaa
aad
test
fcmovbe
imul
pop
call
fild
fst
cmc
leave
sub
js
jecxz
jecxz
in
dec
pop
jle
daa
and
ins
pushf
push
push
inc
pushf
call
xor
in
push
das
lock
push
mov
addr16
jbe
rol
xchg
jp
jmp
pop
into
push
fiadd
enter
xchg
jge
fadd
cdq
push
shl
xchg
rol
mov
mov
test
fdiv
push
inc
jne
cdq
inc
fisttp
add
int
loop
pop
and
inc
out
call
sar
les
cli
push
push
fcomp
ret
test
(bad)
mov
cmp
imul
sbb
add
retf
cmps
mov
in
fisubr
mov
imul
fcmovne
push
sbb
and
mov
fnstcw
or
mov
add
pop
xchg
es
xor
stc
cmp
mov
xor
loop
daa
rcr
or
adc
sub
add
(bad)
cmps
call
repnz
xor
jl
loope
jmp
or
test
push
xlat
xor
push
jp
inc
or
adc
push
mov
fs
les
shl
sbb
stc
popa
ja
movs
xor
mov
mov
sti
adc
in
ret
cmc
int
xchg
xchg
mov
mov
mov
mov
scas
cmps
inc
in
pop
jecxz
pop
jmp
pop
fisttp
addr16
mov
add
out
mov
fisttp
and
mov
rcl
cmp
inc
mov
and
jnp
sbb
jo
adc
dec
and
add
jle
push
scas
adc
rcl
stc
cld
and
jno
cmp
dec
push
movs
sbb
jb
mov
inc
jns
mov
inc
aaa
repnz
dec
shr
jp
mov
in
xor
das
cmp
cld
jno
xchg
ret
leave
sar
movs
outs
ret
fistp
div
pop
in
push
xor
cmp
ret
paddusb
adc
ret
loope
push
xchg
enter
mov
daa
adc
or
or
xchg
mov
adc
es
int
and
jmp
shl
(bad)
repz
push
dec
imul
mov
push
cmps
sub
ins
repnz
fnstsw
and
adc
shl
dec
inc
dec
adc
add
dec
mov
gs
dec
jae
and
and
cmp
daa
sahf
xor
mov
add
and
mov
push
repnz
adc
inc
xchg
inc
add
add
ret
pushf
inc
jbe
nop
dec
inc
inc
lock
out
add
lahf
or
cmp
mov
inc
popa
dec
inc
cmp
gs
mov
add
mov
or
pop
mov
xor
xor
cdq
rcr
rcl
mov
push
adc
(bad)
loopne
aam
jno
xor
retf
aas
push
outs
daa
js
xchg
xchg
push
in
jmp
fistp
push
fnstcw
pop
dec
fnstsw
mov
dec
lods
loop
lods
mov
in
sar
mov
shr
in
xor
xor
jnp
ret
fisttp
mov
nop
pop
xor
add
pop
dec
inc
and
mul
mov
ja
fs
sub
mov
into
pop
mov
xlat
jbe
clc
cmp
or
cs
sbb
pop
aaa
inc
cmps
mov
in
out
(bad)
mov
jbe
rol
inc
cmp
lods
cmp
call
pop
imul
rol
leave
mov
shl
addr16
pop
mov
mov
dec
mov
loop
inc
loopne
sub
popf
push
fwait
inc
and
pop
sub
dec
pop
inc
xchg
ret
movups
not
mov
push
stc
jne
ficomp
out
push
ins
(bad)
into
jo
shr
inc
or
dec
xchg
push
shl
xchg
lods
outs
add
mov
adc
sub
fldcw
adc
sub
inc
fild
cmp
xlat
out
movs
shl
mov
dec
inc
xchg
fld
in
ret
inc
push
add
mov
xlat
gs
in
repz
inc
xlat
jg
das
cmp
xor
shl
mov
(bad)
pop
pop
(bad)
test
retf
inc
and
xchg
aaa
adc
cmps
cmp
pop
mov
inc
xchg
dec
nop
xor
xchg
add
movs
push
sbb
or
pop
and
bswap
int3
stos
test
jmp
retf
iret
pop
mov
mov
cwde
jp
(bad)
jecxz
inc
add
and
out
shl
pop
push
fild
adc
jmp
xchg
sbb
out
shr
mov
mov
fimul
pop
inc
push
mov
cmp
hlt
sub
adc
cwde
test
out
dec
xlat
ins
call
mov
icebp
je
and
push
jns
adc
addr16
adc
rcr
sbb
sti
loopne
shl
mov
std
in
pop
or
and
int
xchg
lds
adc
pop
cmc
clc
mov
ins
xchg
das
push
setnp
ret
nop
in
out
repnz
fdivr
gs
cmp
lods
pop
sbb
inc
ja
cli
or
mov
pop
shl
shr
addr16
inc
fiadd
loope
or
rcr
shr
adc
dec
jmp
dec
xchg
inc
nop
in
xchg
pop
xchg
iret
adc
adc
je
ins
xor
es
sub
xor
mov
in
pop
mov
push
fidivr
pushf
test
push
mov
cmp
add
mov
xchg
mov
push
les
test
int3
pop
add
mov
cmp
rcr
(bad)
retf
inc
out
outs
sbb
or
sub
into
pop
or
cmp
or
or
je
aas
push
and
into
ret
mov
push
in
ret
cmc
adc
call
push
xlat
cmp
ins
ret
stc
mov
(bad)
mov
popf
jmp
and
mov
sub
xchg
jmp
cmps
mov
sub
inc
push
jl
mov
sbb
mul
xor
inc
jne
ins
jno
xchg
mov
mov
les
mov
ficomp
test
mov
fwait
pop
adc
pop
add
cmp
push
push
mov
in
pop
pop
xor
push
push
rcr
adc
das
and
adc
sub
into
pop
mov
jmp
cdq
enter
jnp
aad
mov
cvtps2pi
icebp
add
push
ret
add
cmp
pop
mov
push
add
sahf
mov
je
retf
xchg
add
pop
fnsave
or
jo
pop
mov
jp
into
mov
adc
cmc
add
cmp
sub
into
cmp
das
jo
neg
dec
pop
jno
scas
rcl
popa
aam
fs
xchg
movs
mov
cmp
cmps
rol
dec
mov
mov
in
sbb
jle
push
xchg
sbb
mov
movs
or
test
mov
js
into
mov
repnz
in
loopne
leave
cmp
ret
dec
xor
mov
jns
js
daa
rcr
jg
pop
and
mov
dec
ss
cmp
sub
outs
cld
add
div
xchg
mov
xchg
in
mov
mov
inc
(bad)
or
pushf
(bad)
and
xchg
mov
xchg
aam
test
sub
imul
mov
mov
out
scas
xor
or
das
add
cmp
xor
(bad)
mov
fbld
fild
pusha
stos
dec
daa
mov
sub
scas
ror
(bad)
loop
dec
push
cli
mov
ja
fnsave
outs
sbb
adc
and
pop
mov
leave
fisttp
icebp
leave
jns
jns
mov
mov
imul
adc
je
xchg
mov
sub
std
sub
test
mov
or
ins
cmp
not
aam
fild
mov
xchg
adc
pop
and
cdq
daa
in
jmp
adc
xchg
mov
retf
adc
icebp
in
mov
aaa
mov
ins
data16
arpl
fadd
cli
cwde
cmp
jecxz
movs
daa
fbld
retf
inc
clc
mov
mov
fiadd
xchg
out
cwde
mov
pop
add
add
sub
and
push
pop
mov
xor
adc
cs
popf
mov
(bad)
mov
add
test
cmp
add
mov
in
fs
inc
push
push
lock
std
inc
call
stos
jne
jp
mov
lock
dec
push
jnp
pop
xchg
jno
(bad)
push
pop
aaa
add
jg
cmp
push
mov
scas
clc
add
xlat
mov
sub
jne
push
or
lea
dec
mov
xor
retf
(bad)
dec
jp
das
inc
pop
inc
std
lds
scas
addr16
das
sti
ds
inc
outs
stc
fxch
fwait
mov
jl
jge
shr
stos
popa
outs
pop
push
pop
fisubr
leave
push
and
xchg
pusha
int
push
xor
sub
jecxz
cmps
test
mov
pop
call
icebp
mov
push
push
ret
cmc
sub
sub
xor
sub
mov
adc
shl
cmps
pop
cmc
pop
pop
adc
popa
add
add
(bad)
cli
sub
icebp
test
adc
stos
jge
mov
pusha
or
adc
jne
gs
aaa
and
add
push
std
dec
in
jns
shr
sbb
adc
shl
push
mov
rcl
fbstp
mov
and
jnp
test
push
nop
shr
xchg
mov
xor
stc
out
inc
movs
pusha
pusha
xchg
mov
inc
out
clc
call
aas
jecxz
stos
fisub
addr16
sub
shl
fnstenv
cmps
std
idiv
or
push
add
test
jp
pop
outs
shr
dec
pop
pop
pop
test
pusha
pusha
dec
fdiv
and
dec
aas
sbb
imul
jp
nop
ins
pop
pop
jns
repnz
mov
jge
add
dec
add
sbb
inc
iret
arpl
cdq
retf
xchg
jae
int3
add
ins
mov
fdiv
jns
test
and
and
jecxz
cld
shl
aam
xchg
(bad)
xor
cdq
add
mov
push
lods
pop
pop
jbe
push
in
fistp
(bad)
scas
iret
adc
loop
test
adc
xor
pop
cli
shl
pop
int3
push
fwait
add
repnz
fadd
retf
aaa
dec
es
jbe
or
adc
add
sbb
js
call
cmc
and
and
into
jle
dec
xchg
mov
imul
in
cmp
jmp
jmp
xor
mov
jg
xchg
xchg
lods
cli
pop
test
or
or
pop
jmp
adc
adc
call
mov
jnp
inc
push
dec
jle
into
cli
xchg
rcr
cwde
mov
mov
into
popf
leave
sbb
fldenv
mov
jmp
mov
push
cwde
dec
ds
je
or
div
pop
les
cs
xchg
mov
rcr
sti
enter
inc
sbb
push
ja
push
lock
dec
jmp
rcl
mov
jecxz
and
push
and
shl
aam
inc
and
mov
in
adc
adc
sub
mov
mov
push
aas
stos
push
sub
push
xchg
mov
(bad)
ins
push
scas
rcl
lahf
jbe
sbb
loop
fldl2e
xchg
ss
cmps
in
and
push
retf
in
mov
hlt
xchg
dec
test
push
add
xchg
dec
mov
dec
mov
add
sbb
in
pop
aam
dec
xchg
fstp
scas
and
fincstp
cmp
xor
dec
ins
or
inc
aam
pop
mov
push
in
(bad)
call
dec
fisttp
es
jnp
jle
lahf
movs
cmp
test
imul
mov
xor
cli
sub
mov
in
jbe
(bad)
mov
pop
mov
scas
mov
stc
in
sbb
xchg
dec
mov
daa
pop
rcr
push
sub
sub
cmp
test
jo
add
mov
dec
mov
cmp
loopne
repnz
out
fcmovb
mov
imul
jmp
add
pushf
aaa
inc
mov
inc
jmp
inc
inc
adc
int
mov
cmp
dec
daa
add
or
jp
cmps
mov
(bad)
jb
in
stc
(bad)
jo
mov
xchg
mov
adc
rol
jmp
fiadd
adc
fstp
sub
in
lds
(bad)
fist
xchg
adc
adc
int
add
push
pop
repnz
std
and
cmp
mov
mov
sbb
push
xor
(bad)
mov
jmp
sbb
sbb
aam
into
clc
or
jne
dec
hlt
mov
push
or
push
test
or
cmp
mov
push
cmps
mov
xchg
xor
cmp
int3
in
mov
shl
adc
stc
loope
and
es
dec
sub
inc
fidiv
inc
sbb
loope
(bad)
jl
or
ret
sub
popf
or
imul
push
shld
(bad)
jmp
jae
repnz
xchg
rcr
jne
cmp
push
lahf
sbb
and
xchg
adc
imul
fwait
pop
mov
pop
inc
aaa
fistp
or
xchg
sbb
xchg
jl
cmp
std
aam
pop
stos
test
push
push
cmp
retf
sub
lods
rol
mov
out
in
sti
xchg
div
enter
push
imul
lahf
shl
shl
jo
adc
fcmovb
and
repz
es
outs
fnsave
push
add
add
les
jae
or
repnz
jb
cdq
dec
push
mov
pop
mov
cmp
dec
mov
cmp
push
jbe
adc
loop
inc
cmp
popf
and
out
ret
or
aam
xchg
xchg
jo
fsubr
xor
inc
xor
mov
dec
cmps
inc
retf
dec
cmp
or
ss
(bad)
shl
stos
jb
mov
int
pop
imul
mov
push
inc
or
or
out
dec
fwait
lock
rcl
inc
add
push
xchg
jp
lds
stc
sbb
mov
adc
push
cmp
sahf
push
sub
push
adc
mov
push
adc
in
es
rcl
call
mov
lods
xor
rcl
fcomp
out
dec
mov
xor
and
jnp
mov
and
loopne
sub
stos
lods
push
out
pushf
mov
push
aaa
js
jmp
and
fadd
add
popa
cli
inc
fucom
sub
or
fisub
inc
out
xor
movs
adc
adc
cmp
adc
lock
imul
movs
out
rcl
pop
in
enter
dec
test
or
push
xor
test
in
aaa
lods
scas
movs
scas
jmp
sbb
push
sbb
test
push
cpuid
cmp
xchg
into
xchg
inc
daa
cmps
enter
iret
std
sbb
add
jne
nop
je
pop
mov
test
ins
pop
push
daa
test
mov
mov
fs
imul
push
jl
lds
ror
pop
mov
outs
test
stos
sbb
sahf
sbb
or
aad
lods
mov
popf
xor
xchg
out
clc
fs
mov
cld
(bad)
stos
pop
fwait
les
aad
dec
fsub
xchg
neg
mov
sub
push
sub
dec
(bad)
pop
mov
add
jmp
ins
xchg
je
call
pop
jmp
leave
jnp
mov
std
dec
enter
adc
mov
test
push
fsub
fimul
andps
push
pop
cli
dec
sub
xor
mov
dec
push
push
fistp
aad
mov
into
mov
xchg
add
out
outs
div
loopne
inc
out
or
das
test
xchg
push
push
(bad)
sbb
inc
jns
jns
xchg
(bad)
jo
in
inc
outs
lahf
loopne
(bad)
fldlg2
repz
xchg
(bad)
lock
outs
ins
push
push
mov
(bad)
and
mov
dec
mul
sti
xchg
mov
inc
movs
iret
std
fcomp
jae
inc
push
dec
lahf
(bad)
pop
sar
sub
mov
popa
hlt
xor
mov
jle
in
push
dec
cmp
mov
push
sub
xchg
repnz
outs
cmp
inc
push
adc
adc
mov
(bad)
jge
and
nop
daa
pop
add
xor
pop
neg
(bad)
iret
aad
ror
mov
out
mov
push
es
sbb
push
jmp
clc
lea
mov
cmps
adc
lock
popf
mov
xchg
div
cmp
je
test
out
ret
add
int3
(bad)
sbb
jmp
cmc
retf
mov
cmp
adc
add
scas
sbb
mov
cwde
in
mov
add
jb
(bad)
data16
enter
pop
jo
push
adc
push
pop
adc
jl
push
xchg
enter
mov
js
xor
mov
jp
mov
mov
inc
pop
fcmove
repnz
inc
out
sbb
ret
call
push
dec
xor
cs
mov
xchg
movs
aam
inc
and
xor
int
mov
or
sub
movs
jecxz
jecxz
lods
mov
icebp
dec
push
into
fadd
pop
cmc
adc
mov
xor
and
cdq
movs
mov
pop
mov
jp
push
and
neg
cmp
xchg
mov
jl
lods
data16
mov
sbb
scas
(bad)
retf
mov
mov
dec
out
call
aad
cmp
inc
push
lods
stos
push
push
outs
push
adc
or
or
pop
adc
add
sbb
and
push
fstp
rcl
(bad)
sub
cmc
xchg
fsub
xchg
mov
arpl
bound
adc
jle
inc
jns
pop
data16
or
jbe
jne
mov
pusha
in
mov
xor
pop
cmp
xchg
add
jmp
push
movs
pop
leave
ret
mul
mov
mov
adc
loopne
(bad)
pop
cmp
dec
div
sub
jnp
adc
daa
ins
test
mov
jl
adc
fwait
push
or
dec
mov
mov
jne
sti
cmp
and
mul
jp
sti
enter
lock
push
fadd
inc
adc
pop
mov
mov
cmp
cmc
xchg
aaa
xchg
xor
cli
xor
dec
xlat
maskmovq
inc
icebp
(bad)
jecxz
es
data16
add
inc
outs
popw
or
mov
icebp
xor
mov
mov
div
add
inc
aas
std
(bad)
outs
mov
idiv
sar
rcl
ror
dec
imul
mov
or
popf
sbb
es
jmp
call
or
add
enter
std
pop
dec
xlat
adc
leave
and
pop
adc
arpl
add
cmp
in
or
retf
idiv
sbb
retf
fwait
inc
test
cdq
lods
xchg
jne
xchg
mov
mov
sub
retf
lods
mov
imul
fsubrp
jle
cwde
xor
enter
pop
pop
call
sbb
mov
push
mov
repz
xchg
xlat
or
push
adc
aas
rcl
jae
out
push
xor
pop
ret
cmp
add
jg
(bad)
in
jb
retf
jl
sbb
xchg
ja
mov
movs
xchg
pop
icebp
push
(bad)
loopne
mov
lea
push
popf
add
pushf
xchg
std
cdq
push
sub
push
jbe
push
jge
in
das
or
iret
clc
mov
lock
je
inc
cmc
push
fisub
or
pop
retf
xchg
push
jmp
pop
(bad)
sar
push
jo
repz
or
loopne
xchg
mov
inc
xor
add
in
add
int
les
mov
pop
xchg
in
and
xlat
mov
ja
xor
or
jae
test
or
pop
push
pop
ret
dec
sbb
lods
sub
push
mov
add
nop
stc
leave
fcmovu
mov
xchg
nop
ins
stos
ror
(bad)
mov
dec
pop
mov
leave
nop
pop
cs
lods
and
pop
jns
sbb
das
xchg
and
jmp
cmp
loop
out
jns
jnp
jmp
xor
inc
push
or
dec
in
inc
scas
sar
mov
push
fistp
cmps
sub
and
mov
xlat
or
es
popa
(bad)
add
push
(bad)
lds
jns
icebp
push
xchg
jg
cmp
jge
outs
or
scas
and
mov
in
inc
das
pusha
xor
iret
pop
or
add
outs
sbb
xchg
push
into
lds
and
xchg
adc
jno
(bad)
mov
sub
in
movs
fs
jmp
mov
or
or
mov
mov
or
jge
enter
jae
ss
xchg
pusha
fidiv
nop
mov
dec
ror
cmp
pop
jecxz
not
daa
mov
lods
inc
cs
adc
sub
push
mov
cmp
dec
push
push
jp
(bad)
mov
or
pop
sbb
repz
xor
call
mov
sbb
sbb
sbb
xor
fadd
mov
lahf
fwait
(bad)
or
outs
dec
into
jne
or
jb
sbb
jmp
in
inc
push
loopne
or
loope
cmp
jmp
fwait
dec
mov
mov
in
imul
ins
push
cmp
lock
stos
arpl
(bad)
jae
(bad)
into
inc
stc
lahf
int
in
or
and
push
mov
retf
pop
mov
dec
sub
retf
inc
daa
(bad)
mov
pop
jecxz
dec
ret
jp
mov
cmp
pop
adc
repnz
or
nop
fcom
fistp
sbb
add
dec
add
mov
mov
std
push
aas
int
jno
adc
imul
jns
jnp
adc
jmp
push
repz
sbb
push
mov
fdiv
or
mov
push
retf
fistp
not
xchg
loope
sbb
push
xor
push
mov
out
cdq
mov
sub
clc
aas
fsubr
xor
movs
repz
mov
retf
or
into
mov
ret
mov
mov
xor
push
stc
aam
cmp
aas
inc
retf
mov
ins
imul
out
in
daa
and
scas
test
fs
mov
pop
adc
retf
cmp
jmp
shr
jecxz
stos
adc
mov
adc
retf
dec
push
aam
cmp
int3
icebp
push
mov
mov
mov
shr
jl
xchg
mov
push
jmp
dec
arpl
xor
xor
imul
push
xor
(bad)
dec
cmc
xchg
scas
aad
retf
dec
dec
adc
rcr
dec
jecxz
xchg
scas
adc
sbb
cmp
enter
in
xchg
and
lods
pop
in
dec
inc
mov
mov
mov
mov
pushf
push
or
or
dec
mov
mov
mov
xchg
and
xor
es
call
mov
iret
or
test
mov
outs
out
cld
or
inc
scas
test
mov
mul
cmp
js
push
outs
popa
sub
jp
sub
enter
mov
daa
pushf
mov
mov
imul
adc
out
cld
add
xor
push
inc
test
ret
cmp
(bad)
push
daa
pop
cmp
xchg
pop
je
jmp
sti
(bad)
ins
adc
pop
inc
adc
mov
scas
and
ins
addr16
jno
es
addr16
push
stc
fadd
xor
ror
ret
or
adc
loopne
arpl
mov
xor
cmp
scas
out
or
adc
ins
movs
icebp
cmp
pop
in
xchg
cmp
test
cmp
jecxz
jle
inc
mov
call
mov
mov
xchg
ret
cs
mov
clc
rcr
cmp
in
es
lea
sbb
jbe
aam
aas
outs
mov
aas
push
sbb
cmps
adc
jmp
inc
inc
mov
test
loope
rol
aaa
sub
popf
mov
add
pop
pop
leave
repz
jbe
push
pop
stos
sbb
pushf
sub
cli
popa
mov
jle
out
aaa
dec
fldenv
data16
add
cli
dec
push
push
aad
dec
fldcw
mov
rol
mov
cmp
push
js
jmp
xchg
xchg
sahf
jmp
aas
push
aad
push
mov
push
inc
mov
jmp
adc
push
mov
fwait
sub
leave
xchg
add
cs
aaa
lods
stos
inc
inc
add
movs
es
mov
dec
xor
add
cmc
xchg
xor
xor
lds
jmp
ror
mov
sub
inc
out
xor
imul
loop
mov
mov
ins
pop
and
xor
shl
scas
jmp
sub
repz
retf
into
xchg
call
pop
inc
jbe
pop
sar
out
loope
push
in
inc
dec
cmc
and
and
(bad)
jge
xchg
nop
dec
xchg
mov
imul
std
push
pop
ret
loopne
mov
cld
out
mov
outs
and
mov
mov
clc
jns
xchg
cdq
div
mov
aas
sub
lods
xor
lock
mov
push
ins
cmp
pop
cdq
dec
(bad)
out
and
sub
fbld
dec
jecxz
rol
jge
push
rcr
popf
xchg
add
pop
adc
(bad)
push
ja
pop
xchg
xor
sub
icebp
adc
test
dec
sub
inc
loop
shl
std
sbb
jle
mov
lock
push
(bad)
sahf
ins
gs
lods
in
imul
mov
xor
adc
pop
out
cmp
adc
cwde
inc
imul
cs
pop
dec
retf
jae
fsubp
xchg
cmp
(bad)
bound
fstp
and
or
adc
xor
ds
hlt
or
jmp
mov
jne
ror
lods
xchg
fwait
jb
adc
loopne
cli
fbstp
xor
inc
test
jl
test
out
and
stc
mov
or
fincstp
(bad)
push
int
inc
add
sub
sbb
pop
aaa
shr
push
(bad)
pusha
popa
mov
cli
lods
lods
push
sub
add
xlat
cmp
int3
scas
int
xor
(bad)
or
sbb
pushf
popf
(bad)
sbb
and
out
jg
jmp
fld
dec
nop
fwait
add
aad
fs
pop
jb
js
xor
cs
sbb
add
or
jo
jmp
jmp
out
mov
into
add
jp
out
in
les
cdq
retf
mov
inc
sub
mov
movs
xchg
xor
loope
add
in
pinsrw
pop
mov
int
stc
mov
mov
dec
fild
push
ja
xchg
ficom
lds
push
dec
jg
xchg
and
jae
icebp
out
inc
pop
adc
xchg
aad
pop
aas
test
ins
mov
jmp
call
xchg
inc
xor
arpl
cwde
inc
mov
mov
cmps
sbb
xor
adc
sbb
test
sar
jge
or
clc
ja
fld
mov
jno
out
test
or
aas
mov
jae
lods
(bad)
mov
lds
inc
jmp
dec
scas
or
pop
and
popf
jp
mov
lock
repnz
repz
add
shl
imul
add
pop
in
xlat
sbb
sub
nop
test
push
xor
stos
shl
es
imul
test
fdiv
jl
dec
lods
lea
imul
mov
inc
iret
pop
daa
inc
mov
inc
lods
mov
cmp
ds
xor
mov
add
fcmove
xor
movs
mov
xchg
push
aaa
pushf
fistp
loopne
popa
inc
add
daa
pop
iret
fs
pop
pop
lea
push
lods
imul
out
jge
arpl
add
push
je
test
sar
xchg
rcr
dec
inc
rdpmc
mov
mov
pop
bswap
pcmpeqw
sub
inc
stc
aaa
add
sbb
cmp
xchg
rcr
push
inc
(bad)
dec
movs
cmc
jnp
mov
fnsave
push
repnz
fisub
adc
dec
in
add
popf
add
mov
test
imul
push
jmp
or
leave
aas
mov
lock
mov
stos
aaa
push
jmp
xor
push
cmp
sub
enter
and
xchg
or
jmp
test
repnz
pop
test
mov
gs
retf
bswap
sub
mov
push
sbb
xor
pop
(bad)
mov
mov
bound
sub
shl
xchg
pop
(bad)
and
pop
cmpxchg
add
(bad)
repz
sbb
jecxz
dec
adc
pop
fcompp
dec
sti
std
and
rol
shl
mov
fst
cmps
sbb
or
div
adc
mov
jae
add
lods
xor
dec
lea
mov
fwait
mov
dec
retf
mov
sbb
retf
enter
retf
icebp
add
xchg
adc
adc
xchg
mov
push
lahf
cli
(bad)
std
add
test
pop
sbb
xor
addr16
cmps
call
leave
and
repz
dec
mov
push
pop
daa
xchg
lods
push
fdivr
and
movs
push
and
into
and
mov
icebp
pop
cld
adc
fldenv
dec
outs
jmp
ja
mov
(bad)
mov
xchg
gs
inc
push
shl
mov
(bad)
or
push
leave
mov
and
mov
jo
not
lea
cmc
pusha
shl
add
inc
pop
jp
data16
adc
sub
sbb
popa
cld
jnp
sahf
add
addr16
into
not
test
dec
sub
aaa
xor
loop
dec
(bad)
inc
cs
pop
push
scas
inc
dec
or
xor
mov
dec
lock
jp
push
dec
add
pop
pushf
clc
mov
inc
loope
aad
pop
cmp
test
jne
push
sti
dec
pop
ret
mov
popa
sbb
fisub
or
mov
fldenv
lods
or
cmps
stos
rcr
bound
push
jnp
add
in
(bad)
sbb
mov
mov
adc
fs
lds
out
pop
mov
(bad)
xlat
inc
leave
cmp
ror
adc
cmp
dec
xlat
mov
or
(bad)
imul
jns
mov
ret
pop
fiadd
push
into
out
pop
push
ds
or
prefetch
or
nop
test
cmc
xchg
add
push
or
popa
inc
addr16
pop
out
mov
in
mov
ss
mov
cmc
jmp
push
aas
fsubr
aas
adc
mov
jle
call
mov
mov
ficomp
cmc
gs
dec
clc
xchg
pushf
jl
js
cmp
das
or
pop
and
(bad)
jo
fsub
push
hlt
push
cmp
sub
jge
jg
and
lods
lods
sti
cmp
movs
fs
ss
inc
pop
mov
jp
daa
xlat
pop
jecxz
ss
les
cld
push
pop
xor
lods
dec
call
into
mov
mov
imul
mov
ret
pop
sbb
cmc
jmp
push
or
pop
xchg
add
das
or
shr
loope
pop
xchg
pushf
or
cmp
int3
push
fadd
iret
inc
sub
push
bound
sub
pop
in
mov
pop
and
rol
cmps
fcmovne
mov
push
lods
cmc
pop
jb
pop
jle
sub
xor
pushf
sbb
add
sbb
and
push
sub
ja
sub
cmp
fld
leave
and
dec
js
mov
and
jg
jmp
test
jl
pop
push
push
xchg
shl
dec
stc
jle
xchg
aas
das
inc
add
out
in
sbb
imul
inc
dec
lods
icebp
jmp
test
retf
addr16
inc
mov
xor
mov
push
(bad)
cli
je
es
xchg
cmp
cmps
cdq
cmp
outs
stos
sub
inc
cmps
hlt
inc
lds
adc
sub
lods
jecxz
cmc
inc
jbe
and
and
pop
out
sub
sbb
lds
or
jmp
xlat
fidiv
rol
fmul
adc
and
push
cmps
daa
shl
dec
cs
paddsw
out
cmc
adc
or
cmp
fdiv
call
xchg
jp
test
inc
or
ds
or
ins
rol
iret
add
imul
ins
fs
inc
dec
fnsave
xlat
sbb
arpl
cmp
stos
hlt
mov
jecxz
sbb
(bad)
adc
cs
push
add
(bad)
jmp
fild
in
mov
pop
sahf
das
aam
cmp
or
push
dec
fs
pushf
repnz
out
lods
call
mov
pop
sub
mov
jne
inc
jo
mov
xchg
stos
xor
pop
loopne
adc
shufps
out
or
cdq
dec
in
lds
fstp
xchg
dec
jecxz
jge
xchg
push
mov
fist
inc
push
pop
(bad)
fwait
mov
sub
pop
push
mov
pop
push
mov
pop
sbb
aaa
jnp
fwait
adc
jecxz
dec
imul
pop
cmp
aas
mov
xchg
int
inc
push
ficomp
pop
and
(bad)
sbb
mov
mov
xchg
cmp
mov
pop
push
or
sub
cmps
ins
xchg
imul
imul
jmp
loope
out
xor
jecxz
les
and
dec
sub
ds
bound
inc
adc
setnp
int
fs
xchg
push
jmp
xchg
popf
popf
add
in
jb
pusha
add
jg
(bad)
and
popf
jbe
dec
cmp
adc
in
xor
pop
lea
out
xchg
mov
push
xor
push
inc
cmp
sar
xor
ins
or
add
daa
(bad)
jge
cmps
imul
mov
imul
fcmovnu
das
iret
aad
mov
add
jp
add
add
inc
sahf
aam
shl
xlat
movs
dec
mov
push
mov
hlt
cmp
or
xlat
jno
xchg
loopne
push
lods
in
cmp
dec
sbb
cmp
test
out
or
hlt
imul
sub
mov
popf
in
mov
jo
mov
inc
cmp
outs
push
ucomiss
(bad)
xor
pusha
neg
xchg
fadd
daa
fistp
stos
inc
pop
and
jb
mov
fs
ret
out
jb
call
mov
push
lods
out
(bad)
shr
mov
jmp
adc
cmp
iret
call
call
(bad)
and
inc
sbb
icebp
aad
test
mov
mov
icebp
out
xchg
aas
out
rol
test
or
scas
ja
pop
jo
(bad)
mov
neg
inc
add
push
pop
pop
sub
inc
push
mul
jmp
std
cmps
mov
jmp
mov
popa
mov
sub
pusha
mov
sbb
adc
pop
loop
(bad)
repz
xor
fs
jnp
adc
aaa
xchg
sbb
push
jno
sbb
or
push
or
loopne
pop
inc
jmp
dec
cdq
mov
inc
push
jl
gs
call
mov
out
mul
into
add
lods
fisub
in
dec
and
lea
and
sbb
dec
inc
push
pop
ror
scas
retf
mov
pop
mov
sti
push
add
jge
cld
xlat
movs
pop
mov
neg
mov
dec
xchg
push
test
(bad)
mov
ins
push
call
ret
mov
lea
push
xchg
lahf
das
cmc
mov
(bad)
push
add
sar
mov
pop
or
jb
std
ror
into
leave
aam
ins
call
aad
int3
cmp
lods
dec
mov
add
pop
gs
or
add
aas
cs
and
push
fsub
out
or
jmp
pusha
loope
jmp
popf
or
mov
(bad)
and
push
mov
push
jmp
les
aam
fnstsw
mov
sub
xor
sbb
mov
pushf
add
aam
and
hlt
enter
or
push
and
mov
pop
data16
int
bound
jmp
jbe
push
retf
cdq
inc
mov
repz
cmp
fild
ret
jg
mov
jnp
mov
into
pop
inc
mov
ins
inc
mov
pop
out
push
mov
dec
pop
cld
aad
mov
push
scas
bound
int3
sub
sbb
sub
lahf
jae
pop
mov
das
lods
push
popa
stos
hlt
pusha
add
jmp
or
lds
xchg
sbb
test
scas
jo
cmp
push
call
mov
or
cli
sub
sub
dec
std
or
ret
push
repz
push
or
ins
push
pop
jo
pop
in
sub
rcr
add
ja
push
jb
sbb
pop
std
or
test
imul
sahf
test
outs
pop
dec
fcom
dec
(bad)
or
dec
cmp
leave
inc
stc
bound
cmp
(bad)
push
fadd
ds
(bad)
mov
and
sbb
iret
sub
mov
test
or
frstor
mov
stos
or
push
mov
mov
das
dec
es
sbb
mov
movs
popf
fdivr
cmp
mov
pop
and
inc
xor
arpl
add
adc
pop
sub
ret
mov
jno
daa
cmp
cmps
push
test
pop
mov
(bad)
or
lods
cwde
push
fst
das
pop
mov
imul
adc
jp
test
xor
dec
jmp
push
dec
pop
ins
inc
out
adc
ja
dec
mov
or
cmc
jo
mov
outs
dec
pop
(bad)
inc
mov
dec
or
pop
push
mov
rcr
data16
dec
fiadd
in
add
push
sbb
mov
mov
jo
retf
xchg
push
and
mov
xchg
cwde
pop
cmp
mov
jl
fadd
(bad)
int3
jne
pop
push
or
ins
xchg
pop
pop
loop
xor
dec
outs
jns
fcom
pop
xor
mov
mov
shr
xor
lds
pop
cmp
xchg
sub
fwait
mov
push
dec
and
mov
aad
sbb
mov
fldenv
fwait
bound
push
shl
and
cmp
sub
sahf
outs
xor
hlt
popa
outs
lods
gs
pushf
cmp
lahf
vpsrad
mov
inc
cmp
in
sub
cdq
or
pop
fild
daa
jo
ficomp
pop
push
add
pop
pop
inc
fimul
push
int
pop
and
inc
pusha
push
pop
and
mov
add
dec
retf
pop
ret
and
jo
fbstp
sahf
xchg
xor
jb
jnp
std
out
sub
(bad)
xchg
jmp
jae
retf
xchg
in
or
sub
mov
pop
ja
mov
out
unpcklps
fmul
cli
mov
sub
mov
add
mov
cmps
mov
in
jne
pop
xor
lods
jae
pushf
aad
cmp
sbb
dec
dec
ins
aad
sbb
rcr
aad
rcr
inc
cld
cwde
iret
repz
pop
and
imul
mov
arpl
loope
pop
dec
retf
lds
fisttp
repz
scas
inc
adc
inc
sub
add
imul
jl
sub
jp
lahf
pusha
shr
stos
sub
sbb
fst
(bad)
dec
xor
sbb
loopne
jecxz
mov
movaps
jl
call
cmps
loopne
cmp
repz
dec
lds
cdq
cmp
add
sbb
imul
test
sub
sbb
add
add
add
daa
push
or
sahf
fs
fs
inc
push
sbb
rdmsr
mov
sub
add
jmp
add
not
push
or
das
adc
and
das
mov
lds
outs
jno
jo
fcomp
dec
sub
mov
arpl
jne
mov
cmc
repz
push
sbb
xor
push
or
icebp
and
mov
jp
stos
jp
rcl
pushf
sbb
dec
sbb
push
jno
and
sti
fisttp
in
ss
pop
add
push
std
inc
popf
adc
sub
in
push
adc
xchg
mov
clc
add
out
div
push
scas
xchg
icebp
adc
mov
sub
rol
mov
dec
outs
scas
dec
xor
push
push
adc
arpl
outs
inc
xchg
and
mov
add
adc
lock
jmp
call
mov
cmp
xlat
sub
out
jne
add
ins
retf
(bad)
out
or
inc
adc
dec
loopne
pop
jo
cmp
jb
sbb
xlat
in
daa
ja
repz
in
and
and
retf
sti
and
inc
sahf
out
enter
or
sahf
inc
inc
sub
xchg
mov
ret
mov
jl
jns
adc
js
sub
je
jp
out
inc
lahf
das
jnp
stos
popa
cmp
ja
inc
dec
in
push
push
std
js
sbb
retf
aam
adc
sbb
sbb
add
ja
mov
in
jbe
(bad)
jbe
es
sbb
scas
cmp
div
mov
cmp
jmp
ret
loopne
aaa
cmp
leave
push
xor
loopne
(bad)
(bad)
cmc
and
imul
lods
pop
xchg
rcr
sub
adc
in
adc
push
ret
mov
xchg
dec
ror
add
cmp
mov
add
arpl
push
adc
lahf
add
push
xor
pop
mov
mov
je
stos
mov
pop
push
sbb
popf
cwde
pop
mov
push
je
hlt
cmp
enter
lock
adc
xchg
outs
lods
call
or
mov
fcmovnu
mov
sbb
aas
or
imul
add
ss
and
mov
adc
mov
jnp
mov
jl
push
movs
pop
cmc
xchg
mov
(bad)
cli
xchg
fisttp
push
sub
push
pop
add
xchg
cmps
loope
mov
xchg
stos
mov
repz
xor
ins
pushf
mov
ins
or
imul
push
adc
loop
or
int3
jb
neg
cmps
loop
arpl
popa
sar
xchg
jl
sub
dec
int
shl
and
test
pusha
jne
jl
mov
add
mov
mov
clc
cld
sub
xchg
leave
and
pop
das
or
add
xchg
inc
retf
sbb
in
and
xchg
inc
pop
mov
mov
fstp
pop
jg
mov
cmps
pop
pop
mov
adc
loop
and
inc
mov
cmc
push
add
mov
inc
clc
pop
nop
pusha
and
mov
mov
and
fistp
hlt
or
mov
sub
add
sti
push
mov
repz
push
sub
rol
sbb
cmp
mov
stos
and
or
cdq
or
adc
jle
dec
push
mov
pop
out
mov
cmp
xor
(bad)
enter
out
pushf
mov
lods
es
add
push
ins
imul
retf
pushf
scas
mov
(bad)
mov
sub
add
jmp
and
mov
outs
retf
(bad)
mov
cwde
lods
shl
adc
mov
sbb
lock
iret
shl
mov
pop
dec
push
fwait
mov
mov
add
imul
xor
cmp
pop
mov
jge
mov
add
out
movs
cmp
in
ret
fcomp
inc
std
sbb
enter
push
mov
cmps
or
and
sbb
and
jmp
xchg
mov
sub
push
mov
ret
mov
adc
pop
or
mov
push
and
inc
pop
push
xchg
retf
test
jae
stos
cmp
in
jp
push
xlat
pushf
in
jecxz
addr16
lock
dec
mov
mov
cmp
xor
lds
mov
shr
jp
mov
pop
shl
push
xchg
adc
sbb
(bad)
shl
sets
cwde
dec
xchg
loopne
jl
jp
adc
test
mov
sub
xchg
fnsave
fwait
mov
cmp
inc
test
test
dec
cmp
cs
jo
ror
or
int3
dec
xchg
std
xchg
sub
shl
xchg
jl
(bad)
shl
sub
or
cld
pop
jg
outs
xor
add
idiv
xchg
icebp
jae
outs
sub
pop
out
std
int
cs
pushf
push
aas
xchg
fwait
scas
retf
pop
and
or
cmp
ficomp
jle
xor
test
aas
shl
jnp
sbb
sub
cs
push
sub
sbb
ja
enter
mov
jne
and
call
rcl
popf
(bad)
cmc
frstor
cdq
sub
dec
clc
test
fs
sbb
test
mov
frstor
pop
jmp
xchg
in
pop
cld
jecxz
push
sbb
push
jecxz
adc
mov
pop
cmp
inc
enter
lock
ss
jnp
jmp
into
out
daa
mov
mov
mov
mov
daa
frstor
aad
push
psrad
lahf
data16
sti
test
shl
je
jge
add
(bad)
js
jg
repz
mov
mov
sbb
mov
int
movs
pop
jae
or
inc
mul
mov
mov
sub
mov
xchg
addr16
or
mov
fiadd
fistp
icebp
ror
adc
fwait
mul
loop
xchg
push
std
mov
ins
loop
inc
imul
xchg
repz
lahf
aaa
mov
ss
add
sub
cs
mov
xor
push
xor
in
xchg
push
xchg
shl
fsub
aad
je
mov
jo
mov
imul
sar
(bad)
aad
jno
pushf
jae
xchg
imul
mov
pusha
jno
or
push
add
repnz
std
pop
cmp
adc
lds
(bad)
xor
pop
enter
or
not
add
cwde
xchg
jmp
dec
add
cmps
aaa
xchg
inc
ins
test
pop
jmp
aaa
jnp
pop
fwait
or
and
ins
mov
aas
cli
test
ret
pop
gs
and
inc
mov
ss
pop
pop
sub
jmp
mov
and
fimul
push
jmp
fisub
je
pusha
mov
jle
test
clts
aaa
mov
sub
(bad)
aas
data16
mov
adc
icebp
cmp
fiadd
dec
pop
mov
retf
xchg
in
rcl
pop
mov
sbb
inc
clc
das
dec
inc
jg
sar
fisub
inc
out
int
test
xor
shr
js
gs
cmps
pop
pushf
(bad)
lock
fild
cmp
lods
pop
jbe
mov
ja
sahf
daa
leave
xor
(bad)
jne
shl
hlt
add
dec
xchg
popa
mov
(bad)
push
fstp
sub
sub
(bad)
fsub
ins
sbb
loop
mov
add
int3
fld
add
adc
fs
(bad)
xor
xchg
or
pop
daa
cmp
shl
jmp
(bad)
nop
loope
sub
lods
clc
cli
clc
pop
push
les
sub
mov
les
add
into
mov
(bad)
add
lods
jg
sub
sub
or
test
mov
add
out
mov
outs
into
xchg
shr
clc
movs
mov
mov
add
and
or
test
push
fisttp
repz
sti
aam
push
out
dec
xor
jle
cmc
pop
sub
retf
xchg
imul
enter
jg
in
pop
push
repz
repnz
mov
(bad)
cld
iret
je
add
dec
aad
and
loop
mov
ss
je
test
push
test
(bad)
fdivr
and
push
push
inc
setp
(bad)
add
pop
fmul
repz
inc
(bad)
xchg
cmp
test
or
mov
jmp
pop
mov
outs
cli
xor
xchg
jb
mov
jno
fldcw
in
cmp
(bad)
retf
test
xor
in
push
(bad)
test
js
ds
rcr
push
mov
push
xchg
pop
cmp
and
jg
cmp
ins
imul
mov
out
and
ins
or
jmp
cmps
xor
or
rol
mov
xor
xor
sahf
xchg
pop
sub
mov
loop
add
sbb
inc
pop
sbb
inc
mov
xchg
xor
and
clc
fidiv
pusha
dec
out
fcmovb
into
inc
bound
pop
ss
ret
ror
push
pop
in
push
(bad)
leave
pop
inc
jo
(bad)
or
cmp
sub
(bad)
or
dec
pop
imul
fsubr
inc
lods
outs
xchg
mov
mov
mov
imul
imul
sbb
fisttp
fucom
dec
shl
push
std
inc
popa
inc
mov
sub
cmc
into
js
test
jge
jns
mov
cmp
mov
cld
(bad)
fwait
and
adc
lock
sahf
cs
sbb
add
adc
ret
and
sbb
push
push
mov
jge
xchg
imul
imul
or
(bad)
out
jge
mov
push
add
aad
jmp
js
int3
mov
pop
jb
mov
pushf
lds
push
add
stc
mov
les
jnp
in
mul
jl
sbb
das
jp
ss
outs
mov
dec
fs
push
or
and
pop
repz
js
(bad)
xor
jg
push
jbe
jmp
stos
ins
jmp
in
mov
and
mov
sub
imul
xchg
cmp
addr16
jmp
sbb
clc
pushf
xor
push
mov
jo
mov
jbe
mov
test
pop
ins
dec
dec
or
adc
pop
stos
and
cmp
scas
xor
push
and
aaa
bnd
das
adc
sbb
pop
xchg
pusha
lahf
(bad)
enter
sar
inc
xchg
xor
push
push
xor
xchg
loopne
adc
jge
pop
xchg
cmp
jno
outs
mov
pop
or
cmc
pop
jmp
repnz
lock
push
and
mov
mov
mov
pushf
or
adc
shl
dec
mov
cmp
pop
rcl
fnsave
movs
push
jnp
out
enter
mov
jae
mov
sbb
lds
push
mov
add
not
bound
xchg
lock
jecxz
inc
ja
ss
int3
jge
inc
xchg
repnz
div
jle
xor
sbb
cwde
dec
hlt
inc
outs
test
mov
jmp
add
seta
sub
ret
mov
mov
mov
xchg
pop
mov
mov
xor
dec
scas
mov
arpl
sbb
xor
mov
cmp
jbe
xchg
loopne
mov
in
xor
lods
sar
shr
mov
std
cli
sbb
into
pop
ins
xchg
and
push
lods
ficomp
ins
pusha
cmp
xor
popf
mov
scas
sub
or
div
and
jmp
test
dec
mov
iret
cmp
mov
aas
lea
lods
adc
(bad)
sbb
ds
or
pop
test
lods
in
lea
fild
jg
dec
les
xchg
imul
sbb
nop
aad
jns
out
push
pop
je
mov
outs
mov
adc
mov
sub
in
arpl
popa
in
mov
inc
cmp
dec
cmp
pushf
mov
sbb
push
stos
sbb
jmp
leave
out
push
(bad)
pop
jmp
mov
bound
add
mov
dec
jnp
outs
outs
adc
dec
pop
(bad)
cli
mov
push
iret
or
pop
sbb
cdq
div
dec
mov
dec
bound
in
inc
push
lea
cld
dec
jmp
sbb
cmp
push
cwde
dec
pop
imul
inc
daa
sub
stc
jecxz
movs
or
jno
lea
or
or
or
stos
xchg
push
sub
sub
jg
or
loop
cmp
inc
push
lods
fild
daa
sub
ja
stos
mov
shl
in
jp
inc
addr16
popa
sbb
xor
cmps
fmul
iret
add
sub
lods
scas
xor
xchg
jnp
mov
test
movs
pop
imul
jp
and
mov
push
add
fidiv
cmp
loope
clc
dec
pop
popa
into
xor
movs
and
in
or
mov
dec
ss
scas
neg
movs
ds
mov
gs
(bad)
fcmovu
cmps
inc
push
pushf
inc
cli
ror
std
add
sar
mov
test
fild
pop
add
push
sar
push
je
pop
shr
fisubr
mov
push
mov
scas
push
fcomp
mov
loop
pusha
cmps
scas
cs
inc
sbb
or
adc
xchg
cmp
pop
pushf
adc
xor
enter
iret
push
sbb
xchg
cmp
int
push
gs
or
mov
pop
test
jmp
sbb
in
mov
add
lahf
cmp
and
dec
shr
sub
mov
shr
xchg
adc
push
int
pushf
and
mov
(bad)
(bad)
add
inc
loope
jl
mov
sar
out
or
out
jne
sbb
sahf
(bad)
lds
(bad)
in
sbb
or
xlat
or
jno
cs
fst
dec
call
adc
rol
mov
lahf
push
jge
sti
inc
enter
int3
out
mov
inc
push
dec
cs
push
aam
push
shr
int3
fcom
not
rol
inc
add
jne
jg
mov
rcr
mov
rcl
cmp
(bad)
push
gs
xchg
jge
mov
(bad)
add
dec
pop
sub
push
cmps
inc
cmp
je
xchg
test
dec
and
mov
imul
add
xchg
mov
cmp
push
stos
call
js
mov
or
rol
ss
jge
loope
outs
add
test
jg
movs
xchg
sbb
sbb
and
int3
xchg
cmc
sbb
out
stos
addr16
dec
sbb
and
sahf
(bad)
icebp
jae
mov
hlt
sbb
inc
xor
les
jle
dec
add
fisub
push
psubw
popa
sti
inc
cmp
mov
adc
lds
cmps
jno
jmp
xchg
sar
(bad)
bound
rol
and
call
cmc
shl
sub
add
je
loope
scas
mov
cdq
jp
push
lods
or
loope
inc
jmp
movs
sbb
pop
sub
pop
push
xchg
mov
popa
sar
aaa
inc
arpl
sub
ss
mov
es
test
out
sbb
or
repnz
cwde
mov
jmp
pop
lods
pop
push
jle
push
mov
cmps
add
adc
js
ins
adc
pop
hlt
pop
add
inc
in
fs
push
lds
mov
xor
or
or
sbb
pop
xchg
scas
mov
(bad)
cld
test
test
aad
mov
mov
or
lods
lock
sbb
cli
and
adc
adc
mov
dec
addr16
pop
and
push
test
jp
fist
sbb
push
lds
rcl
(bad)
sbb
dec
xor
(bad)
sbb
adc
dec
hlt
mov
xchg
clc
fistp
or
test
scas
loope
hlt
mov
out
lods
dec
fstp
test
jle
std
or
or
sbb
sbb
xchg
data16
(bad)
cmp
push
fadd
rol
inc
xor
pop
push
pop
mov
push
fsubr
into
xor
mov
add
stos
jae
int3
xor
clc
fldl2t
out
fisubr
sbb
push
hlt
xor
cmp
jecxz
scas
pop
(bad)
mov
dec
sub
retf
movs
dec
mov
xor
ret
xor
sub
mul
jmp
popf
and
add
push
mov
adc
int3
sub
and
jmp
mov
pop
mov
add
mov
push
sbb
(bad)
popf
dec
cmc
jg
sti
sub
std
clc
stos
cmps
stc
mov
and
int
mov
mov
gs
iret
pop
lea
pop
pop
add
sbb
mov
cmp
sti
in
dec
in
xchg
xchg
sbb
jmp
aas
lods
lods
jl
xor
(bad)
push
mov
inc
sbb
pusha
mov
add
jl
fsubr
add
sbb
jns
pop
(bad)
push
push
sbb
sbb
es
lods
cmp
fldcw
lea
push
push
retf
(bad)
inc
fwait
sub
mov
and
sub
push
mov
or
sub
dec
mov
ins
les
shl
les
cli
jp
sub
jge
ficomp
xchg
add
mov
cld
xor
or
jge
and
movs
xchg
xor
adc
pop
push
cli
gs
fadd
xor
inc
cmp
jmp
rcr
fist
call
scas
mov
push
push
pop
in
jns
sbb
pop
add
mov
adc
movs
int3
dec
repz
imul
mov
not
pusha
out
je
xchg
sti
sbb
and
mov
fild
pop
add
dec
xchg
push
cmp
xor
mov
xchg
sbb
stos
pop
(bad)
push
sub
mov
ret
in
cmp
popa
dec
jp
jg
mov
test
mov
out
dec
lds
and
push
or
mov
mov
rcl
scas
adc
pushf
mov
pop
sbb
call
stos
aad
gs
push
fxam
or
outs
lods
mov
sub
add
adc
scas
(bad)
out
jne
adc
int3
mov
idiv
mov
mov
mov
stc
rcl
mov
test
mov
nop
iret
jecxz
mov
xchg
leave
out
pop
inc
mov
mov
pop
add
leave
shr
pushf
loopne
xchg
fiadd
mov
push
xchg
push
xor
xchg
push
inc
addr16
pusha
in
mov
jle
cmp
retf
sub
fs
call
mov
sub
push
sbb
adc
aam
jbe
sbb
jmp
and
inc
mov
std
sub
xchg
sbb
mov
push
push
ins
lds
gs
fsub
sbb
nop
pop
sbb
jb
(bad)
jmp
test
mov
scas
dec
imul
push
push
aam
sub
inc
repz
sbb
inc
jmp
jnp
mov
and
movs
test
cli
js
fdivr
dec
push
ficomp
(bad)
mov
je
and
add
and
inc
push
pop
adc
push
loop
hlt
rcr
xor
cmp
mov
stc
push
pop
xchg
jno
fptan
loop
cmp
and
cli
(bad)
sub
movs
out
mov
pop
daa
lahf
xchg
out
jbe
ja
push
pop
sti
mov
gs
inc
mov
jo
popa
je
xor
into
int3
fisub
test
mov
enter
rcr
movs
sbb
adc
xchg
jb
cmps
and
dec
in
dec
pop
sbb
mov
(bad)
pop
fisubr
xchg
fimul
inc
mov
ret
mov
imul
adc
adc
int
rol
dec
xchg
adc
or
xor
add
push
sub
int3
pushf
or
mov
push
pop
cs
add
inc
or
push
mov
pop
inc
loope
and
das
cmc
call
scas
jno
add
sti
out
idiv
push
lods
and
aam
push
add
mov
or
mov
sbb
aas
add
test
sbb
cmp
icebp
push
cld
aam
pop
shr
xchg
movs
pusha
jb
add
cmp
jno
push
dec
(bad)
push
xor
mov
int3
jnp
in
dec
fidivr
rol
pop
stos
test
xlat
dec
mov
test
lods
lods
in
lds
out
retf
add
leave
cmovg
dec
xor
aad
xor
xchg
pop
daa
into
mov
int
and
and
sahf
sub
sbb
mov
aam
inc
jp
xchg
mov
imul
mov
cld
jecxz
xor
sbb
pop
lods
sbb
aas
enter
cmp
and
xchg
movs
xchg
pop
xchg
gs
cmp
ins
mov
js
pop
xlat
jo
or
mov
(bad)
mov
imul
repz
sbb
push
mov
and
pop
shl
adc
and
pop
int3
scas
xchg
ins
ins
cmps
mov
xor
cmp
imul
jmp
addr16
mov
mov
(bad)
movs
ins
scas
jp
(bad)
in
xchg
pop
int
sbb
adc
xlat
pop
sbb
fld
push
movs
push
enter
push
or
mov
call
int
cmps
int3
sbb
test
arpl
daa
xor
xchg
loop
xchg
and
in
cmps
mov
xlat
or
add
dec
cmp
inc
(bad)
cmp
xchg
push
jg
or
jecxz
div
rcr
les
stos
je
xor
or
jecxz
jns
ins
push
fs
push
pop
pop
mov
sbb
sar
add
shl
xchg
inc
or
inc
sti
hlt
out
addr16
jmp
xchg
mov
lahf
mov
out
pop
or
mov
inc
sbb
(bad)
test
fisubr
add
enter
fcomip
pop
pop
push
fstp
dec
push
fcomi
cli
jge
cmp
lods
shr
icebp
stos
push
sti
mov
cmps
ror
out
dec
fdiv
fsub
pop
neg
fs
pop
cmp
jbe
push
xchg
pop
adc
pusha
jle
mul
xor
out
es
mov
push
mov
or
cmp
dec
ret
rcr
xchg
mov
adc
in
add
mov
jne
in
xor
test
fs
test
ffree
arpl
je
and
inc
arpl
sub
jl
clc
outs
inc
addr16
inc
mov
mov
in
xchg
mov
mov
xchg
push
jb
pop
xor
arpl
xor
push
jge
jmp
push
pushf
retf
mov
loop
inc
call
loop
fistp
pshufw
int3
sub
add
outs
pop
loop
and
retf
pop
and
dec
es
iret
mov
(bad)
xor
ja
int3
imul
cmp
jge
xor
lahf
sbb
push
push
sbb
cmps
and
mov
pop
mov
cmps
or
js
bound
sub
lods
jno
pop
mov
movs
adc
adc
retf
rcl
push
int3
jg
ret
mov
pop
pop
div
cmc
jmp
push
arpl
jne
stc
aad
add
bnd
call
jl
dec
fnstsw
shr
push
std
or
clc
icebp
jge
dec
movs
mov
sub
jmp
adc
jbe
pusha
xor
cmp
push
ret
addr16
or
and
pop
inc
clc
mov
add
and
pop
jp
sub
sbb
sbb
push
pop
repnz
mov
(bad)
bound
stos
jb
(bad)
and
mov
mov
or
cli
and
scas
imul
out
popf
outs
clc
test
gs
or
mov
mov
pusha
mov
retf
pop
in
cmp
dec
les
mov
jae
xor
enter
outs
push
adc
cld
je
fwait
sbb
jecxz
sysexit
nop
and
imul
scas
addr16
ret
inc
push
sar
mov
mov
sahf
jmp
repnz
jle
cmps
xor
mov
dec
aad
push
xchg
and
push
cmps
mov
or
add
and
mov
inc
fidiv
sti
jmp
mov
fwait
jb
cmp
mov
mov
retf
lea
inc
loop
mov
add
outs
fistp
cld
and
sub
xchg
push
jmp
xchg
push
jecxz
jb
outs
jp
(bad)
or
mov
pop
cmp
xchg
out
pop
ins
dec
pop
sti
lods
pop
jae
fdivr
pop
or
push
clc
mov
lods
fcom
jb
int3
push
out
or
dec
xor
add
outs
xlat
ret
(bad)
add
stc
mov
and
xchg
mov
retf
out
mov
jbe
add
push
jbe
bound
repnz
jno
mov
stc
adc
pop
sbb
dec
neg
jle
out
retf
jne
adc
nop
scas
stc
pushf
push
mov
dec
push
cmps
mov
xor
mov
push
aad
loope
push
pop
xor
add
nop
add
sbb
sub
push
mov
sbb
xor
add
pop
mov
inc
xchg
rcr
xor
sbb
aas
mov
xchg
out
lods
xor
pop
aam
pushf
jl
int3
js
imul
xor
mul
test
cmp
cmp
inc
xchg
fidiv
sar
adc
or
or
loop
ins
fcom
push
jo
cmp
es
jno
in
adc
nop
xchg
std
sub
jg
add
push
mov
cmp
mov
or
fdivr
clc
clc
repz
jmp
call
fs
mov
loopne
leave
inc
nop
sub
(bad)
stos
das
int
call
je
pushf
in
ret
or
rcr
jg
push
stos
out
ins
jne
jecxz
inc
xor
sbb
xchg
retf
mov
js
jge
or
movs
sbb
fisttp
test
ds
fsubr
add
add
inc
push
xor
xor
inc
fidivr
(bad)
and
jmp
push
mov
adc
adc
inc
xchg
imul
stc
(bad)
mov
(bad)
ficom
aas
jns
aaa
(bad)
xchg
(bad)
or
loope
jne
adc
sub
aaa
dec
cdq
das
and
fld
jg
ret
sub
(bad)
cmc
dec
sub
sbb
push
popa
clc
mov
aas
aaa
mov
push
fcom
mov
sbb
and
scas
mov
mov
test
lock
inc
push
aam
les
cmp
mov
inc
pop
mov
mov
pop
push
mov
or
add
out
mov
out
xchg
xchg
xchg
inc
(bad)
mov
fld
pop
(bad)
adc
pop
lods
cs
add
fldenv
xchg
jmp
sub
das
jmp
frndint
test
xchg
xor
fcom
dec
mov
mov
xor
ins
test
nop
jmp
adc
jne
sub
push
aas
push
fild
mov
mov
mov
jo
mov
sub
lods
leave
enter
hlt
fst
call
push
mov
aad
push
cli
ins
popf
fist
aad
aaa
(bad)
mov
in
int3
repz
add
xor
(bad)
out
pop
add
add
pushf
outs
jge
sbb
bnd
lds
inc
xchg
sahf
imul
mov
xchg
push
mov
cmps
lods
test
add
movs
bound
add
dec
stc
add
push
call
and
in
jnp
jo
(bad)
fs
test
pop
or
add
cmp
shr
scas
sub
in
push
sahf
in
pop
or
repnz
push
mov
(bad)
in
xchg
ins
add
pop
inc
sub
xchg
jge
iret
sti
mov
fwait
neg
mul
pop
daa
cli
mov
sbb
int3
cmp
adc
xor
(bad)
jp
xor
(bad)
outs
add
test
jno
sub
lahf
push
push
mov
cmp
push
pusha
xor
das
call
mov
xchg
(bad)
push
paddusb
aad
inc
and
aaa
pop
jne
pop
cli
inc
pop
pop
icebp
sub
inc
mov
mov
lods
in
(bad)
(bad)
or
push
jl
movs
mov
test
(bad)
mov
addr16
fadd
shl
or
ret
sbb
cmp
jns
cwde
mov
ret
sar
bound
pop
pop
outs
pop
clc
cmp
cmp
or
mov
dec
(bad)
icebp
jmp
push
xor
ret
ds
bound
pop
mov
cmp
cmps
shr
cmps
inc
push
(bad)
call
adc
neg
cmc
outs
loop
cmc
in
(bad)
stos
enter
push
in
bswap
mov
dec
push
mov
inc
jecxz
add
lds
push
mov
call
jns
out
cmp
push
pop
cmp
js
mov
xchg
arpl
or
cmp
cli
inc
int
xor
add
sub
mov
ret
sbb
cmp
lahf
inc
or
or
hlt
push
lock
cmps
add
vmovaps
inc
(bad)
imul
test
sbb
push
xchg
and
dec
lea
test
fcos
inc
push
jmp
push
and
jnp
xor
cmp
sub
out
call
push
mov
or
pop
sbb
xchg
sub
xchg
mov
ins
lods
adc
test
es
pop
pop
retf
push
sbb
xchg
ds
adc
stc
inc
loopne
test
out
mov
cmp
pop
inc
fwait
ds
cmp
xlat
xor
mov
mov
aas
lock
xor
pop
sbb
push
inc
cmp
pop
and
and
out
int3
pop
lea
mov
xchg
mov
dec
jne
pop
stc
data16
cmp
jg
cmp
and
test
mov
jg
bound
jmp
mov
stos
pop
sbb
mov
lods
adc
adc
imul
sub
xchg
lods
sub
jecxz
mov
imul
cmp
lahf
cmp
or
movs
addr16
test
or
sub
jno
test
dec
push
out
sub
popa
inc
inc
js
mov
loopne
pop
out
or
pop
push
or
test
push
in
mov
nop
imul
(bad)
dec
add
push
or
inc
fild
clc
int3
(bad)
jmp
call
xchg
cmps
fstp
cmp
push
mov
sub
sar
inc
jecxz
mov
or
stos
aaa
shr
(bad)
shl
adc
and
mov
loopne
pushf
leave
jp
cmp
push
add
sar
loop
dec
out
test
(bad)
add
add
loope
adc
or
test
jo
cld
arpl
loop
call
fidiv
daa
cmp
sbb
pop
in
add
enter
pop
cld
pop
pop
or
loope
inc
and
adc
pop
not
sub
(bad)
not
lock
loop
sub
xchg
nop
mov
sub
mov
xchg
data16
arpl
ret
pop
shl
cmp
outs
aad
jae
lahf
cmc
daa
ret
sbb
mov
cli
push
mov
arpl
stc
push
mov
dec
push
leave
nop
enter
push
ss
cmp
xchg
ss
mov
(bad)
int
faddp
loopne
sub
cs
mov
cld
sti
and
cwde
mov
push
add
scas
xchg
mov
mov
pop
inc
mov
(bad)
call
fist
sub
dec
cli
dec
in
popf
inc
sbb
stos
mov
inc
push
(bad)
repnz
test
xchg
in
dec
inc
mov
and
push
ret
xchg
mov
test
stc
jmp
shl
loopne
sub
ja
push
push
xor
popf
dec
adc
adc
clc
fimul
mov
mov
mov
mov
arpl
sub
or
retf
push
pushf
dec
ins
shr
sar
cmps
mov
cmp
pop
jmp
pop
push
pop
lods
fcomip
call
daa
hlt
ficom
push
sbb
cmp
cmp
inc
xchg
je
mov
scas
inc
cmp
and
sbb
push
mov
fmul
test
adc
rcr
mov
push
inc
clc
popa
out
mov
xchg
imul
jns
adc
push
xchg
add
mov
mul
push
lods
mov
sbb
lds
xor
lds
cmp
mov
shl
sub
sbb
in
enter
clc
ja
push
je
les
inc
or
mov
mov
mov
jg
pop
scas
(bad)
idiv
xchg
xlat
shl
sahf
mov
es
sbb
mov
mov
test
or
pop
call
mov
loopne
bound
fxch
or
adc
fadd
dec
mov
ror
cmp
sub
xchg
add
xor
movd
sbb
fidivr
mov
sub
and
pusha
push
shl
jnp
or
cmp
aas
nop
mov
mov
stos
mov
test
bound
xor
dec
popa
clc
sar
jge
call
add
rcl
ss
int
scas
iret
fcom
mov
push
inc
dec
dec
add
sbb
out
icebp
jnp
sub
xchg
enter
pop
or
retf
out
mov
leave
jne
xor
daa
pop
push
cld
xor
pop
adc
das
out
mov
nop
xchg
xchg
xchg
cdq
dec
and
push
loope
(bad)
scas
arpl
mov
mov
xchg
adc
nop
in
aad
cmps
sahf
(bad)
lds
ja
mov
movs
scas
repnz
ss
test
test
rol
adc
add
pop
or
nop
ss
lods
mov
mov
mov
mov
and
push
dec
test
mov
xchg
test
inc
mov
ret
adc
mov
jmp
fadd
lea
test
ss
mov
jb
sbb
jle
cmp
mov
lds
mov
sub
(bad)
cmp
push
js
sbb
sti
fisub
add
mov
or
mov
fstp
mov
dec
retf
sbb
loop
mov
pop
cmp
cmp
mov
or
jmp
and
cmc
fcomip
mov
aaa
loope
pop
xor
fiadd
outs
add
or
rol
dec
out
xchg
push
and
iret
dec
pop
cmps
or
call
cmps
xor
pop
jae
pusha
jmp
pop
fwait
mov
lea
dec
aas
sub
jmp
cmp
jg
mov
ds
rcl
mov
(bad)
and
sub
and
aas
xlat
je
or
pushf
cmps
inc
in
xchg
dec
mov
fmul
cmps
psubq
mov
dec
xchg
stc
mov
aaa
push
scas
add
rcl
cmovb
pop
call
push
push
xor
or
jle
es
(bad)
mov
repz
push
ficom
xor
xchg
sub
nop
mov
mov
int3
mov
ja
jecxz
in
push
jl
jmp
cli
ror
icebp
and
movs
add
or
xchg
cmp
stos
add
fwait
jno
into
scas
and
jb
mov
les
shr
sbb
std
xchg
or
xchg
test
pop
int3
adc
add
cmc
push
adc
push
cmp
pop
dec
jae
xchg
shl
cmp
cmp
pushf
std
repz
pop
mov
dec
dec
push
dec
clc
inc
lods
jno
lahf
inc
push
add
sbb
cmps
pop
fimul
enter
ror
xchg
movs
in
xchg
in
cmps
or
jnp
pop
fisub
stc
mov
adc
mov
fisubr
add
inc
popf
data16
add
es
(bad)
push
repnz
iret
cmps
test
or
out
push
int3
ja
in
(bad)
push
fnstenv
sub
and
mov
sbb
sub
adc
das
outs
movs
jbe
adc
fild
leave
dec
sub
or
sub
(bad)
sub
mov
imul
in
jne
sub
(bad)
retf
dec
jo
fist
ror
cmp
xor
add
sub
inc
dec
mov
daa
xchg
(bad)
ffreep
mov
ins
dec
jo
jp
mul
jp
inc
outs
fcomp
lahf
and
je
sbb
xor
or
ins
fadd
scas
xchg
das
in
fstp
fwait
adc
jmp
in
int3
addr16
cmp
mov
ja
fcomp
int
fwait
pusha
sbb
test
pop
add
sbb
xlat
or
rol
jmp
sub
popa
jae
lahf
ror
scas
jmp
das
ss
jo
inc
shl
xor
shl
fidivr
repz
mov
(bad)
fistp
xchg
out
in
inc
in
adc
ficomp
or
push
dec
jp
or
mov
(bad)
jno
inc
push
lds
xor
jge
pop
mov
mov
pop
je
mov
ja
iret
pushf
jecxz
jmp
cmp
cmps
mov
cmps
std
or
cmc
or
fbstp
cld
dec
jp
daa
mov
stos
inc
jl
xchg
or
jns
pop
outs
lods
test
movs
(bad)
fdivp
std
jnp
mov
mov
test
jp
mov
dec
dec
movs
fidiv
and
ds
or
das
pushf
jne
sub
cmp
and
outs
add
mov
add
out
out
mov
push
fwait
out
xor
out
inc
mov
xchg
ds
cli
pushf
addr16
jne
adc
mov
clc
inc
aaa
jnp
stc
adc
(bad)
lods
jb
repnz
loop
xchg
and
ins
arpl
xor
in
iret
(bad)
xchg
cmc
jae
cmp
test
xor
loope
lds
ins
dec
adc
inc
mov
dec
popa
mov
fxch
sbb
jmp
inc
js
xor
mov
jecxz
ror
add
cmp
and
test
sbb
aam
add
aam
sar
pop
ds
jb
aaa
jmp
out
mov
push
lods
xchg
push
ss
cmp
xor
test
je
in
jbe
mov
lods
push
ins
into
mov
aam
int3
sub
arpl
mov
outs
test
mov
mov
sub
ds
inc
mov
and
ret
xchg
ret
retf
gs
jno
test
ret
xor
sti
ds
fwait
test
sub
mov
pop
jne
xchg
mov
mov
cmp
xor
sub
mov
shl
inc
jle
add
rcl
push
or
(bad)
sbb
jnp
je
jle
jmp
push
cmps
xchg
add
inc
retf
(bad)
lea
or
cmp
popa
cmp
pop
xchg
jb
mov
in
dec
pop
or
inc
ret
cld
int3
xchg
xor
sub
jge
xchg
xchg
rcr
out
mov
adc
xor
cmp
into
ror
sbb
fwait
pop
fsub
movs
cmp
inc
add
lds
cmp
in
jmp
mov
adc
mov
cwde
pop
xor
sar
sti
div
mov
sub
mov
fcmovnu
dec
add
(bad)
xchg
mov
scas
(bad)
pop
jbe
outs
or
adc
inc
retf
or
sbb
test
ins
mov
lods
pop
mov
mov
int
test
stc
ja
push
ins
dec
mov
ret
jecxz
push
aad
scas
jne
cmp
mov
xchg
jle
mov
loopne
sahf
outs
stos
mov
mov
cli
ret
stos
xor
test
push
aad
mov
or
sbb
mov
pop
adc
jb
int
mov
mov
sahf
sbb
shl
mov
out
out
add
inc
pusha
cmps
cld
sbb
lock
xchg
mov
pop
dec
jae
jp
cmp
inc
enter
jb
imul
mov
cmp
sahf
mov
test
loop
pushf
mov
sbb
mov
xor
js
pusha
adc
ins
mov
repz
lods
cmp
out
or
xchg
enter
sbb
fsub
call
or
les
mov
and
cwde
xchg
repnz
cmp
cdq
pcmpgtb
push
push
and
mov
into
pop
inc
ret
call
hlt
pop
cmp
sub
mov
or
mov
or
inc
inc
rcl
adc
rcl
add
mov
iret
(bad)
shr
inc
xchg
(bad)
bswap
mov
call
scas
enter
imul
inc
cwde
test
mov
clc
pop
jmp
pop
dec
mov
arpl
jmp
jo
clc
xchg
icebp
mov
repnz
je
adc
jbe
push
sub
das
retf
cmps
add
ror
call
mov
sub
pop
rol
cli
mov
(bad)
fs
movs
inc
and
add
and
imul
adc
in
popa
jo
add
into
dec
sbb
sahf
jo
push
rol
jge
fwait
push
es
push
dec
jmp
in
pop
jmp
jne
dec
ds
int3
dec
xchg
sub
(bad)
test
sub
pop
sbb
push
dec
inc
or
sub
xchg
adc
shl
(bad)
fild
shl
test
test
xchg
adc
or
cmp
dec
sbb
jne
dec
xor
lods
xor
mov
xor
jecxz
clc
lods
cmps
or
add
into
and
test
or
mov
in
mov
xchg
sub
outs
das
aam
sub
mov
push
sar
outs
mov
add
push
lea
ret
sub
jg
and
iret
les
or
cmp
cmc
dec
sub
rcr
or
loope
arpl
hlt
repz
lods
gs
and
xchg
lahf
or
arpl
jmp
xchg
or
push
fidiv
daa
ffree
push
inc
jnp
in
ins
push
mov
(bad)
fidiv
inc
cmp
(bad)
and
je
in
iret
xor
outs
mov
cwde
aas
mov
aam
push
or
and
cmp
sbb
add
test
(bad)
jbe
and
(bad)
sti
inc
jmp
js
jg
jl
and
nop
cmc
fistp
into
lds
fstp
outs
shl
xchg
sbb
aad
dec
popf
fstp
loope
iret
or
(bad)
jp
fwait
add
shr
in
mov
and
ret
test
lods
leave
adc
sbb
mov
jns
jg
jp
pusha
push
popa
xor
push
aaa
in
cwde
cmc
jns
test
aad
das
pop
ret
lock
adc
pop
movs
cld
xchg
mov
mov
inc
adc
mov
push
lahf
add
mov
and
pusha
enter
ins
fsubrp
inc
ins
pop
data16
xor
lds
fwait
daa
stos
cmp
push
push
mov
in
jmp
inc
adc
sub
ds
in
out
test
dec
cs
jle
out
mov
mov
push
pop
fcom
push
xchg
aas
fdivr
pop
mov
repz
stc
push
mov
xor
gs
jb
cmps
mov
sub
jb
cdq
or
loopne
bound
addr16
je
lock
movs
dec
fmul
xchg
jl
dec
push
retf
call
test
lds
iret
out
add
push
call
stc
and
pop
or
fst
out
hlt
sbb
mov
ja
or
loope
icebp
stos
(bad)
repz
xchg
sbb
retf
jmp
or
pop
cld
fisttp
mov
outs
hlt
out
or
pop
mov
je
add
test
add
lods
imul
fwait
and
push
adc
pop
inc
iret
dec
xchg
cli
or
call
adc
(bad)
fsubr
sbb
mov
aas
es
fst
ret
sbb
bound
je
mov
out
mov
xchg
les
pop
add
or
fwait
and
add
cmps
and
dec
add
outs
cmp
add
lock
sbb
mov
cwde
fsub
jnp
push
out
xor
pop
(bad)
(bad)
scas
inc
repz
scas
stos
popa
jecxz
xor
adc
stc
mov
rol
call
aaa
adc
mov
shr
mov
jecxz
cdq
cmp
push
fild
adc
push
add
push
or
xlat
jg
cdq
jns
inc
inc
adc
mov
cmp
xchg
call
mov
fild
ret
hlt
pop
mov
xchg
inc
jns
sti
pop
pmaxsw
xor
cmp
(bad)
fmul
jmp
lods
or
sub
jmp
cmc
xchg
das
out
push
push
retf
into
pop
test
inc
shl
push
call
lods
test
pop
mov
rcr
push
(bad)
gs
hlt
pusha
push
adc
jo
xor
jmp
jp
sbb
les
leave
jmp
lods
adc
mov
fbld
enter
call
adc
mov
dec
cmp
lea
lock
repnz
jmp
gs
shl
mov
and
les
add
repz
int
or
and
pop
mov
fdivr
push
cli
dec
mov
push
cmps
pop
jl
out
xchg
loope
add
rcl
push
and
out
loope
(bad)
retf
mov
loope
(bad)
(bad)
xor
and
into
loop
imul
addr16
pop
pop
ins
out
xor
arpl
je
add
add
or
adc
test
mov
cmp
and
xchg
jbe
jl
cmp
mov
mov
sbb
into
sahf
cmovns
daa
imul
dec
sahf
mov
(bad)
cld
add
mov
push
repz
(bad)
int
aam
cwde
mov
mov
ret
rcl
in
or
sub
clc
push
test
stos
sub
push
es
adc
xchg
movs
and
cmp
int
and
sbb
shr
inc
dec
mov
or
fxch
jle
xchg
sub
and
sub
push
icebp
scas
inc
neg
mov
or
fnsave
rol
xor
ja
repnz
int3
ds
rcr
pop
ins
int3
in
mov
icebp
push
stc
call
das
mov
in
sub
and
movs
repnz
or
int
and
add
xchg
pop
outs
lods
xchg
adc
mov
jae
sbb
push
stc
xchg
gs
hlt
inc
mov
in
int
and
stos
xor
dec
xor
push
call
pop
pushf
mov
xor
xlat
dec
fs
sbb
jmp
test
push
pushw
xchg
mov
ret
jle
cli
add
mov
mov
daa
sub
jge
dec
xor
xchg
adc
ret
mov
or
pop
inc
adc
and
lds
in
cmp
(bad)
js
addr16
mov
jb
jae
and
ret
mov
sub
fmul
cmps
adc
jecxz
jae
inc
mov
arpl
(bad)
ja
mov
sbb
lods
in
test
mov
push
push
loopne
(bad)
arpl
inc
not
aas
add
push
add
cmps
pop
jns
pop
pop
in
outs
adc
lods
dec
mov
retf
xchg
or
test
pop
fwait
addr16
jnp
dec
in
xchg
lea
ja
retf
dec
dec
retf
mov
fsub
retf
je
jae
mov
push
mov
and
data16
xchg
std
mov
dec
mov
fldcw
inc
test
popa
cmp
push
xor
sub
je
jge
jno
mov
sbb
loopne
inc
xchg
cmp
push
ret
mov
dec
sub
pop
pop
cdq
jmp
sbb
ror
mov
pusha
mov
in
std
aas
icebp
sti
jo
mov
adc
pop
outs
out
inc
nop
adc
fbstp
fwait
jecxz
not
mov
inc
and
imul
xchg
sub
and
mov
stos
ss
(bad)
jns
fld
ins
retf
sbb
ss
jnp
add
add
sahf
sub
call
jb
push
imul
cdq
mov
push
sbb
retf
scas
xchg
jb
pop
inc
rcr
sub
ror
and
iret
xchg
mov
bound
pop
out
shl
loope
pop
ja
retf
inc
into
stc
fsubr
or
outs
fsubr
add
clc
mov
fnstsw
add
push
mov
repz
cmps
mov
mov
sbb
aam
iret
dec
fdivrp
mov
call
in
sbb
cld
jl
fcmovnbe
das
dec
cs
outs
cmp
jnp
cmc
xchg
sbb
and
into
js
dec
cmps
mov
jp
jne
pop
mov
fwait
jbe
jmp
shl
pop
mov
cmc
test
mov
loopne
div
mov
(bad)
adc
sub
sub
inc
dec
and
punpckhbw
lods
fstp
stos
dec
jl
movs
jns
dec
or
cdq
es
cmps
lock
jbe
or
mov
nop
xchg
mov
stc
jb
(bad)
inc
rol
mov
rol
mov
cmps
hlt
ja
test
cmp
sub
popa
call
or
fs
mov
std
add
mov
fwait
jb
mov
test
lea
mov
test
cmc
adc
jle
loope
call
add
js
jecxz
xor
loop
xchg
or
push
mov
mov
pushf
ret
mov
adc
lods
add
mov
fwait
xor
mov
cld
add
jmp
aam
inc
sti
repnz
sahf
cmp
ror
ret
xchg
shl
jle
adc
in
(bad)
dec
dec
into
lods
cmps
cmp
(bad)
mov
mov
mov
test
in
xor
aas
dec
pop
inc
adc
test
push
addr16
scas
push
(bad)
je
sahf
or
popa
je
clc
fisubr
or
sti
add
test
sti
cmps
cmp
inc
mov
adc
ret
xor
dec
mov
cs
cmp
pop
push
scas
mov
push
xlat
daa
xchg
jle
in
dec
mov
pop
in
and
adc
jno
dec
cmp
cld
mov
jnp
dec
imul
loope
add
xchg
or
addr16
es
je
jnp
jmp
call
gs
cs
mov
mov
in
loope
jl
xchg
mov
outs
loope
sar
add
adc
xchg
inc
xchg
jb
sti
mov
clc
jae
or
aaa
mov
add
aaa
je
es
dec
rcl
push
dec
push
push
arpl
dec
cwde
das
push
mov
xlat
dec
test
imul
inc
stc
scas
(bad)
mov
js
mov
sub
lods
push
jg
hlt
in
in
dec
xchg
xor
stc
std
(bad)
sub
das
pop
xor
lea
push
repz
xor
jae
shl
mov
pop
mov
ja
mov
icebp
or
es
int
pusha
mov
mov
cmp
outs
pusha
push
sub
aad
mov
and
jnp
sbb
push
out
pop
addr16
xor
xor
jle
popf
xor
mov
stos
gs
sbb
stos
pusha
xchg
cli
add
cmp
mov
mov
xchg
and
or
ret
xor
ret
ret
sbb
cld
imul
push
and
(bad)
xchg
dec
mov
and
stos
push
or
jp
sbb
ja
and
loope
ret
dec
mov
push
mov
das
dec
stos
pusha
add
mov
pop
dec
pop
jg
or
and
test
fdivr
jne
je
pop
lods
dec
inc
push
scas
push
mov
fild
mov
mov
jbe
mov
dec
enter
cld
xor
sub
nop
cmp
xor
pushf
push
sbb
ss
inc
jge
ret
xor
stos
sub
fcmovnu
mov
cmp
call
idiv
loopne
mov
sub
into
dec
xchg
scas
sbb
int3
pushf
or
test
clc
xor
jle
fstp
jae
push
cmp
mov
xchg
mov
add
ror
mov
inc
sbb
ret
(bad)
jle
imul
cdq
jno
pop
dec
mov
cmc
int
mov
mov
push
adc
rol
inc
mov
push
xchg
inc
jmp
adc
sti
div
or
sbb
ins
jmp
fdivr
pop
push
adc
into
mov
fdiv
pop
sub
out
xor
dec
popf
in
jge
mov
in
jnp
and
push
ins
daa
(bad)
fimul
aaa
cmps
adc
mov
imul
sar
pushf
inc
fmul
mov
out
repnz
push
mov
rcr
and
mov
mov
outs
jge
jnp
pop
jb
dec
repz
mov
dec
fild
push
(bad)
data16
retf
jg
ds
cmc
inc
inc
mov
cmps
std
fidivr
ror
addr16
cmc
das
inc
mov
dec
jnp
or
loope
retf
dec
inc
dec
xchg
out
popf
mov
mov
out
ret
in
fistp
fld
icebp
sar
mov
add
mov
sub
sbb
sub
mov
adc
data16
arpl
fdiv
lahf
pop
rcr
mov
or
fs
inc
out
sbb
aam
clc
dec
cmps
mov
int
mov
pop
jle
addr16
sbb
cld
xchg
cdq
pop
sahf
add
dec
add
inc
cmp
(bad)
jmp
adc
mov
jns
inc
add
shl
or
popa
pop
into
movs
cwde
sub
sar
lea
fadd
jb
cdq
inc
pop
jmp
fmul
pop
cs
xchg
loopne
retf
push
mov
and
mov
and
push
imul
jp
and
mov
dec
xor
cdq
mov
movs
adc
outs
lock
ja
dec
(bad)
xor
bound
(bad)
mov
mov
retf
mov
push
addr16
push
jo
repnz
xchg
fwait
clc
popf
js
aaa
jne
(bad)
adc
adc
xchg
out
cwde
sbb
je
popf
jl
adc
mov
jmp
cmp
sbb
mov
xchg
push
sub
in
repz
dec
xchg
mov
dec
jno
and
push
dec
clc
adc
stos
je
mov
or
call
push
es
mov
fcmovbe
push
sbb
gs
jmp
fisub
ret
popa
push
pop
test
and
es
pop
sbb
mov
scas
in
fwait
dec
pop
inc
cli
iret
fbstp
pfrcp
mov
lock
mov
rcl
cs
lods
sahf
outs
sub
pop
cmc
rcr
jl
inc
ins
popa
dec
enter
inc
gs
xchg
outs
xlat
retf
push
jmp
jmp
aaa
mov
mov
or
or
adc
sbb
test
mov
dec
sub
cmc
pop
dec
jmp
lds
pop
mov
imul
add
jno
imul
inc
addr16
in
std
into
jmp
repz
aas
lea
adc
call
aaa
je
out
pop
pop
push
ds
push
bound
pushf
out
xchg
pop
push
pop
clc
inc
stos
fs
imul
cmp
imul
aam
mov
sti
dec
xlat
sbb
lods
sti
ins
stc
add
push
adc
retf
jne
xor
fild
sbb
push
sahf
(bad)
sti
into
and
in
xchg
iret
ror
jno
outs
mov
jge
add
(bad)
popf
push
sti
xor
pushf
push
cmp
mov
push
imul
jno
leave
(bad)
call
push
and
cld
test
out
inc
pop
push
retf
sub
mov
call
mov
jnp
stos
mov
push
jecxz
fdiv
sbb
push
popf
xor
mov
sbb
sub
fcomi
imul
mov
dec
sub
dec
inc
xchg
sets
dec
jmp
dec
stos
and
jne
outs
pop
xor
imul
adc
test
fld
push
mov
sub
push
xchg
adc
sbb
repz
mov
fs
or
or
cmps
push
popa
les
inc
ret
(bad)
mov
xor
jnp
ins
add
lea
mov
movs
mov
xor
cdq
mov
sbb
clc
xchg
and
push
adc
sub
jo
out
add
and
adc
js
fsubp
or
mov
sbb
(bad)
adc
repz
shr
push
or
and
and
dec
dec
pop
movs
xor
ret
ret
jno
clc
ret
pop
popf
cmps
xor
dec
ret
mov
call
lods
or
and
sub
cmp
pop
ja
std
fidiv
dec
leave
mov
push
into
jmp
xor
xlat
push
int
jo
dec
inc
inc
xchg
jmp
xor
sbb
outs
sbb
mov
sti
xchg
int3
shl
je
or
pop
mov
dec
scas
fisub
add
aas
xor
mov
push
and
fisub
and
movs
dec
sar
imul
add
scas
(bad)
data16
and
out
and
adc
mul
and
nop
dec
lods
out
les
add
dec
push
mov
add
mov
and
push
xchg
fild
cmp
xchg
or
push
sub
stc
in
cdq
mov
out
or
push
daa
ja
lods
adc
add
out
jmp
js
ja
inc
in
int3
adc
imul
mov
jmp
dec
and
(bad)
fidiv
xchg
aas
(bad)
cld
stos
outs
enter
not
mov
or
aad
push
add
mov
retf
mov
add
sar
push
jmp
js
inc
lods
icebp
in
xor
fldenv
aaa
push
out
ins
pop
pusha
cli
aad
outs
xchg
leave
xchg
test
and
retf
xchg
xchg
sub
repz
jg
add
test
outs
mov
in
jl
or
xchg
(bad)
push
out
jle
jo
and
or
or
jns
pop
jp
xchg
nop
xor
ror
lea
cs
loopne
test
es
movs
cld
enter
les
mov
inc
in
jns
mov
cmp
lock
in
icebp
fidivr
nop
push
adc
xchg
lock
sbb
jo
(bad)
fwait
in
mov
imul
adc
cmp
xchg
rol
rol
cmps
in
imul
mov
mov
fwait
enter
lods
mov
push
xor
gs
xchg
xchg
cmc
ds
es
xchg
retf
call
xchg
add
pop
lods
mov
mov
mov
aad
cmp
jb
imul
inc
pop
pushf
dec
jp
loop
nop
mov
xor
cmp
outs
lods
jno
adc
icebp
adc
lds
leave
xchg
cmp
push
sbb
inc
jnp
jmp
mov
in
sahf
pop
sub
and
mov
(bad)
lock
cmp
adc
jno
add
sub
push
jno
imul
int
sbb
out
sub
xchg
retf
cdq
test
std
arpl
leave
or
jmp
fwait
pop
xchg
inc
sub
mov
dec
sub
fs
nop
add
rcl
cli
fsub
push
std
in
mov
dec
imul
jns
addr16
push
jle
push
xchg
xor
sbb
inc
rcl
mov
inc
movs
sub
(bad)
jg
pop
loopne
lahf
retf
jo
fs
or
out
mov
call
stc
xchg
shr
outs
ret
xchg
xor
push
and
jmp
(bad)
enter
fwait
mov
popa
clc
inc
push
add
aaa
push
test
push
fistp
popf
neg
sbb
enter
leave
adc
adc
or
and
xchg
inc
movs
rcl
add
ret
and
pop
sub
jp
iret
xor
cmps
and
(bad)
int3
sub
ret
dec
inc
shl
icebp
retf
pop
mov
cmp
je
pushf
cdq
jbe
sub
loopne
push
ror
adc
push
cmp
and
and
popa
mov
or
sub
push
cmp
inc
jae
push
adc
mov
cmp
iret
push
jmp
leave
adc
adc
sub
ds
push
in
sti
test
not
leave
or
xor
pop
in
cs
cmp
xor
mov
mov
push
dec
xor
cwde
stc
ja
add
stc
jg
cmp
mov
jecxz
pop
adc
jg
xchg
xor
push
add
sub
ret
mov
inc
inc
mov
shr
or
jle
lods
test
cmp
out
int
fadd
mov
cmp
mov
stos
popa
mov
mov
jno
retf
data16
das
inc
mov
out
not
jnp
push
repz
sti
xor
mov
test
pop
xor
push
cwde
inc
pop
and
xor
cdq
out
into
push
mov
cmp
in
icebp
sbb
or
fs
pop
loope
ins
imul
xor
mov
mov
adc
push
fs
outs
xchg
(bad)
sub
fadd
aas
loope
and
or
out
jecxz
scas
or
sbb
push
ds
add
dec
loope
xor
sub
mov
dec
sub
jl
sbb
adc
mov
jmp
add
push
adc
loop
repnz
cmp
jp
push
cwde
jmp
xor
leave
cmp
cmp
sbb
lea
and
aas
push
(bad)
pusha
std
in
stc
in
mov
jmp
pop
aas
movs
icebp
mov
xor
and
mov
stos
mov
pop
mov
loop
call
outs
mov
pop
add
mov
mov
nop
jns
comiss
out
adc
adc
dec
into
cdq
inc
xchg
push
js
and
xchg
out
aas
jmp
in
mov
or
xor
mov
outs
hlt
loopne
push
lea
mov
pop
ret
aad
in
jmp
in
clc
inc
retf
xchg
in
lahf
add
mov
shl
fwait
push
or
pop
int
scas
test
or
repnz
fld
(bad)
loop
fidivr
nop
mov
jecxz
mov
dec
in
jl
jbe
jo
psrld
adc
mov
push
inc
scas
lds
test
dec
mov
sub
and
(bad)
mov
pop
jno
mov
retf
movs
pop
pusha
je
xor
add
and
pop
push
mov
call
cli
jb
(bad)
movs
mul
rcl
das
pop
mov
push
xor
shr
jnp
and
xchg
vunpckhpd
(bad)
dec
add
add
jno
jmp
dec
xlat
out
push
ins
jno
pop
imul
repnz
(bad)
xchg
(bad)
push
fwait
cmp
dec
xchg
jnp
inc
fimul
inc
push
neg
xchg
xchg
pop
js
ins
lock
sbb
jno
mov
out
adc
ror
or
add
add
mov
fs
lahf
cld
movaps
ret
mov
movaps
shr
xor
sub
sbb
xchg
shr
test
mov
jmp
std
xchg
push
xor
xchg
and
inc
push
and
into
mov
test
sbb
pop
adc
pop
mov
jae
cs
cmp
xor
dec
xlat
scas
push
jno
aas
cmp
retf
popf
pop
push
mov
mov
cmps
mov
test
outs
je
push
popa
push
shl
jno
mov
(bad)
mov
dec
(bad)
into
dec
or
gs
xor
data16
into
shr
jp
imul
shl
mov
popa
das
adc
inc
(bad)
call
nop
pop
loop
sub
add
fwait
lods
add
(bad)
mov
aad
cmp
push
jb
xlat
xchg
push
test
mov
jmp
scas
sbb
out
aaa
pop
add
xor
shl
jge
and
test
lods
shl
push
stos
mov
scas
fs
fisub
inc
fmul
mov
or
repnz
pushf
or
pop
jle
cmp
fisttp
test
jp
mov
in
test
mov
in
stc
(bad)
div
xchg
pop
scas
pop
fcomp
outs
pop
(bad)
and
jbe
je
sbb
jne
xor
(bad)
and
push
mov
jmp
jmp
mov
out
xchg
imul
ss
adc
aam
movs
in
inc
push
adc
mov
(bad)
test
sbb
xor
retf
xor
mov
sub
mov
sbb
dec
out
and
cmpxchg
test
lock
popf
and
stos
and
xchg
pop
outs
icebp
aam
rol
in
test
in
adc
jmp
stc
jnp
jge
frstor
push
jmp
add
xchg
jno
psubw
cmp
outs
fcomp
jnp
sbb
lock
lahf
jge
sub
scas
punpckldq
dec
sbb
popa
pusha
or
rcl
dec
jo
xchg
cmp
stos
push
ror
sbb
dec
pop
mov
std
loop
arpl
test
std
test
jo
aas
jge
mov
imul
scas
into
fsubrp
loop
repnz
sub
sbb
or
fidiv
out
mov
in
lock
jmp
push
dec
retf
call
jae
scas
mov
sbb
js
aam
adc
inc
xchg
mov
loopne
mov
xchg
or
out
jge
dec
and
cmp
mov
push
or
xchg
into
clc
fadd
int
leave
push
sbb
xor
fldcw
jge
aas
call
call
cld
fiadd
mov
push
sbb
add
xor
sahf
fcom
mov
pushf
dec
dec
or
cmp
xchg
mov
pusha
cdq
dec
lds
mov
call
xchg
or
and
push
mov
xchg
dec
fsubp
inc
or
mov
inc
and
mov
mov
(bad)
test
lods
(bad)
rcr
mov
cmps
or
(bad)
sti
in
add
es
repz
sbb
lods
cmp
mov
mov
sub
popa
push
adc
in
add
jp
pop
lods
dec
inc
sti
neg
fdivrp
push
add
addr16
pop
dec
aas
dec
ins
push
pop
and
push
jg
js
retf
(bad)
xor
movs
jo
xor
xor
inc
retf
lods
add
in
xchg
test
ds
test
or
sub
inc
sbb
mov
test
movs
fistp
sub
imul
jb
mov
out
xor
inc
inc
mov
adc
adc
sti
push
sub
or
adc
into
adc
sub
test
cmp
mov
sar
loopne
mov
jmp
fcomp
int
ror
(bad)
out
ja
std
or
aas
mov
nop
and
push
dec
adc
clc
xor
jle
es
enter
test
arpl
adc
xor
push
out
cmps
jle
mul
or
les
cmps
or
std
inc
mov
jne
add
mov
popf
push
pop
leave
cmc
in
push
mov
dec
test
pop
mov
aad
fisubr
in
push
mov
shr
cwde
pop
stc
outs
lea
inc
mov
jb
out
mov
sbb
lahf
out
push
mov
mov
jmp
jno
pusha
fld
pop
cmp
jno
xchg
popa
xor
jecxz
mov
(bad)
lea
lds
mov
mul
pop
xchg
xlat
sbb
xchg
inc
pop
xor
jo
into
add
xor
aam
sbb
outs
sub
pop
pop
shr
idiv
mov
in
retf
jnp
push
cmps
nop
mov
ds
mov
shl
cwde
push
cmp
xchg
sub
aad
outs
mov
xor
add
call
xchg
ror
or
inc
dec
xchg
fld
imul
sbb
inc
inc
xchg
leave
not
pop
(bad)
jbe
jmp
ds
gs
sub
dec
gs
stos
popf
scas
fwait
outs
xchg
mov
xor
inc
jno
bound
and
and
xor
push
lahf
add
ss
cmps
(bad)
mov
ja
test
xor
add
push
test
call
or
ins
push
lock
call
cmps
retf
or
push
ds
mov
push
es
rcr
cmp
(bad)
add
in
test
sbb
ja
add
adc
pop
inc
adc
mov
mov
dec
retf
or
ret
fxch
pop
xchg
add
jo
xchg
in
shl
(bad)
enter
inc
test
hlt
mov
push
sbb
jle
and
pop
jle
aam
out
cmps
mov
or
xchg
cmp
add
sti
and
out
xchg
or
xchg
add
pushf
pop
rcl
or
les
ret
inc
lahf
mov
push
add
cmp
push
mov
fisttp
(bad)
or
rol
push
jns
dec
daa
cld
or
imul
mov
das
test
scas
sti
inc
faddp
cwde
iret
xchg
adc
retf
ds
mov
cmp
out
mov
das
jo
dec
push
inc
cwde
sti
dec
ja
popa
call
xor
pusha
fs
cmp
lods
mov
(bad)
iret
inc
mov
daa
iret
fisubr
mov
jnp
pop
(bad)
adc
pop
out
mov
or
addr16
pusha
lock
xor
sub
adc
data16
jmp
pop
mov
mov
jo
cld
gs
add
scas
inc
das
inc
push
mov
push
mov
popf
mov
les
jp
out
in
mov
ss
in
sbb
jg
adc
and
std
(bad)
iret
push
or
cmp
je
push
mov
daa
add
pushf
fmul
add
mov
int3
shl
mov
inc
push
xchg
pop
test
pop
div
ror
or
popf
aad
in
movs
cmc
or
mov
ret
dec
cmp
inc
cmps
sbb
jno
stc
cmp
lock
jbe
retf
mov
shl
jne
mov
cdq
hlt
aaa
or
add
xor
addr16
stos
popf
and
stos
jbe
cmps
ret
pop
jae
mov
inc
xor
inc
and
aam
mov
add
adc
outs
std
out
pop
iret
lea
aam
mov
jbe
inc
or
nop
cs
mov
aad
xor
and
or
(bad)
xchg
sahf
(bad)
in
jp
pop
es
sbb
mov
jge
mov
mov
out
ror
addr16
jno
fnsave
leave
retf
mov
push
fisttp
test
add
pop
test
int
(bad)
adc
clc
stos
dec
sub
pop
repnz
sbb
ins
push
xchg
inc
(bad)
inc
jle
mov
sub
mov
pop
aas
mov
jmp
clc
jbe
pop
outs
cmp
in
pop
not
xchg
pushf
push
data16
dec
ins
pop
push
ins
adc
fistp
sub
adc
add
or
ror
push
or
or
jmp
aas
add
push
mov
ret
leave
push
js
jecxz
sub
movs
pop
and
loop
xor
and
(bad)
cmps
push
mov
pop
pop
in
dec
and
mov
push
jns
jmp
mov
jb
push
stos
lahf
inc
neg
fwait
inc
push
and
test
fiadd
inc
jb
ins
dec
icebp
out
sbb
gs
xchg
mov
adc
xor
ret
icebp
lahf
inc
addr16
in
jmp
xchg
jbe
pop
mov
sbb
and
push
mov
cmp
inc
jmp
aad
or
or
xchg
mov
cmc
fmul
test
xchg
shl
xor
(bad)
add
lds
ja
xchg
jno
scas
and
inc
sub
popa
dec
sub
xor
sbb
mov
sar
dec
jmp
xchg
sbb
jae
push
cmp
es
sub
popa
ds
cmp
mov
ins
mov
pop
pop
mov
and
call
mov
mov
(bad)
mov
nop
and
imul
leave
cmps
sub
dec
jb
mov
stos
fwait
adc
pop
mov
sbb
sar
push
(bad)
pop
loopne
sub
mov
sub
mov
jns
test
(bad)
outs
mov
dec
dec
pop
mov
mov
fbstp
mov
jb
cmp
or
lods
push
pop
shr
jae
jnp
scas
in
es
icebp
pop
data16
lods
sub
and
dec
jbe
cmp
xchg
ret
lods
pop
cmp
add
scas
mov
cmp
and
push
push
inc
xchg
mov
dec
pop
popf
imul
scas
xchg
sub
push
es
lahf
ins
neg
jae
or
pop
retf
xchg
test
mov
pop
nop
ror
stos
js
aam
dec
dec
out
int
push
in
sub
cmp
push
int3
mov
sub
and
xor
ins
(bad)
jne
movs
pop
sub
jge
add
sbb
lea
adc
ja
popa
iret
out
repz
mov
xor
mov
mov
in
daa
out
(bad)
in
fsub
mov
fisttp
mov
mov
cmp
mov
push
pop
jle
push
out
cwde
fwait
mov
inc
pop
test
push
pop
imul
and
sbb
mov
ins
push
test
mov
in
adc
mov
cli
int3
loope
dec
add
sbb
inc
popa
push
push
push
(bad)
loope
(bad)
cmps
scas
mov
xchg
xor
sbb
mov
(bad)
fs
xor
pusha
xchg
xor
nop
movs
cmp
pop
clc
cdq
mov
bound
std
ret
adc
into
aam
mov
loop
in
and
and
pop
idiv
leave
sub
or
xchg
shr
mov
lds
loop
mov
sbb
dec
call
xor
loop
mov
mov
or
sub
and
lahf
cmp
xor
sti
loop
sbb
ret
add
or
and
gs
(bad)
mov
in
test
aam
jae
mov
cmp
jmp
add
sub
ins
jmp
das
scas
aaa
push
or
aaa
add
outs
mov
sbb
push
dec
les
test
jae
mov
or
movs
adc
xchg
pop
movs
push
neg
cli
sbb
add
(bad)
xchg
mov
ret
iret
and
xchg
scas
inc
cmp
sub
mov
pop
rcl
jo
jns
retf
dec
mov
pop
fs
sbb
(bad)
add
jns
arpl
lea
sbb
repz
mov
cmp
or
xchg
lods
aas
clc
les
and
inc
scas
pushf
jbe
cld
scas
dec
push
mov
es
jns
aad
jae
cmc
cmp
adc
dec
out
add
jl
int
cmps
or
cmps
cs
mov
push
add
jmp
push
inc
ins
jae
adc
ja
loop
or
les
jmp
cs
out
mov
fcomp
mov
out
xchg
push
psrlq
cmp
ds
pusha
cmp
lods
ins
mov
addr16
xchg
cli
add
das
data16
ficom
data16
dec
imul
hlt
stc
shr
mov
push
lahf
int3
pop
sub
xchg
fcomip
inc
popf
mov
pop
sbb
fcmovnu
adc
loop
push
jb
cmp
add
cmp
sub
(bad)
std
mov
sti
nop
ficomp
jno
icebp
cdq
mov
xchg
aaa
aam
adc
mov
and
ficom
push
retf
std
inc
xchg
enter
mov
mov
mov
cwde
dec
pusha
add
cmp
mov
cdq
or
xchg
jnp
(bad)
ja
loop
jae
shl
xchg
sub
push
outs
lea
mov
pop
loopne
cdq
mov
mov
loop
dec
ja
and
out
ins
dec
xor
pop
retw
pop
out
daa
xor
ret
jmp
xchg
lods
pop
cwde
mov
jle
dec
stos
shl
imul
and
sbb
out
pop
inc
or
test
or
aas
pushf
aaa
dec
cmp
jecxz
mov
mov
nop
clc
vpandn
scas
sbb
repnz
xchg
mov
lods
xchg
jle
jmp
icebp
pusha
jmp
into
sub
fiadd
push
dec
jge
mov
add
mov
outs
adc
sbb
retf
cmp
push
stos
leave
push
or
repnz
je
and
repz
push
mov
xchg
int3
mov
push
(bad)
cmp
push
aaa
and
out
inc
mov
nop
xchg
in
mov
dec
add
pop
hlt
jmp
jg
test
lock
pop
dec
cs
int3
mov
idiv
arpl
mov
dec
pop
or
out
icebp
add
pop
jmp
push
pop
ror
xor
adc
das
push
inc
(bad)
(bad)
cmc
imul
cmp
ret
in
xchg
hlt
cmp
cmp
je
xchg
mov
dec
in
mov
xchg
ins
fisttp
cmp
and
test
icebp
and
and
push
jge
bound
dec
dec
push
je
outs
dec
jbe
mov
or
inc
in
mov
(bad)
mov
dec
inc
cmp
xor
and
jb
fst
pop
lahf
popf
gs
or
div
test
xchg
xlat
xchg
repnz
pop
test
dec
ret
data16
xor
bound
(bad)
and
mov
adc
retf
out
add
(bad)
hlt
lahf
aad
pop
clc
push
cli
outs
ds
(bad)
jge
fwait
jecxz
inc
mov
out
fcomp
jmp
cmp
in
cwde
xor
cmp
das
inc
sbb
out
out
cmp
pop
push
fdivr
jnp
push
test
jb
adc
cmp
movs
cs
mov
lods
dec
loop
xchg
hlt
fisub
std
shl
sar
(bad)
cmp
sub
pushf
xor
fmul
popa
pop
aaa
not
push
clc
mov
xchg
aam
mov
cld
mov
dec
mov
add
xlat
(bad)
adc
scas
push
bound
add
int
test
int3
fnstenv
sub
mov
mov
mov
jp
sub
fwait
push
jle
xchg
aaa
push
lahf
adc
pop
in
mov
(bad)
xor
(bad)
lods
and
cmp
cmp
cs
xor
xchg
xor
mov
les
ja
shr
cwde
arpl
cwde
mov
loop
lahf
dec
aaa
repnz
adc
lods
pop
mov
mov
fimul
lea
out
cmp
or
aam
jmp
ins
sbb
fdivr
sbb
sub
je
cld
dec
dec
xor
loop
in
frstor
inc
inc
fst
sub
jle
push
inc
fwait
(bad)
stos
enter
jb
push
jmp
dec
jne
out
cli
and
fld
xchg
int3
cmp
sti
test
test
xchg
enter
cdq
test
or
jl
xor
clc
cmc
rcr
mov
mov
jno
out
mov
and
js
pop
into
std
daa
jo
movs
sbb
stc
jo
cmc
test
jnp
sbb
mov
xor
in
dec
mov
lahf
jl
inc
int3
and
nop
mov
rol
enter
sbb
mov
je
push
push
jmp
cmc
push
repz
xchg
sbb
cwde
adc
call
nop
outs
sub
pop
mov
std
daa
sub
or
popf
adc
push
mov
sbb
mov
loope
jnp
loope
mov
mov
mov
in
inc
icebp
cmp
xchg
gs
add
jb
out
inc
push
mov
ss
shr
xchg
pop
arpl
call
lock
fisttp
das
mov
jns
aam
(bad)
retf
stc
pop
dec
inc
cli
retf
hlt
popf
jmp
mov
cs
adc
lock
sbb
shl
cwde
xchg
add
fst
mov
sub
clc
(bad)
mov
aas
mov
adc
or
(bad)
movs
in
and
lods
pop
push
lds
fs
ror
shl
pop
dec
mov
repz
adc
call
mov
xchg
xchg
and
ss
xchg
lea
add
inc
popf
push
in
jne
pop
aas
int3
cwde
dec
lods
push
mov
jmp
pop
adc
mov
(bad)
or
test
sar
jmp
cld
xor
inc
fs
(bad)
lds
retf
mov
xchg
xor
mov
cmps
into
jns
rol
pushf
outs
and
fidivr
retf
mov
pop
jecxz
cmp
sbb
in
pop
sub
cdq
(bad)
enter
imul
je
cmp
test
es
sbb
dec
js
xchg
xchg
les
cmp
sti
push
loopne
cmps
sahf
and
push
adc
hlt
xchg
movs
xchg
lock
std
mov
movs
xor
inc
call
pop
fiadd
dec
jnp
add
pop
movs
repnz
sub
cmps
scas
clc
cmc
add
les
outs
dec
add
ret
sbb
push
push
repnz
test
in
push
mov
and
imul
pop
ins
and
ins
neg
ror
or
in
cmp
or
inc
cmp
test
sahf
add
out
inc
push
jg
test
mov
mov
mov
jmp
popf
jge
scas
push
fsubr
add
ins
pop
sub
dec
dec
lea
scas
dec
xor
fidivr
jge
and
iret
ret
retf
loop
rcl
test
push
xchg
arpl
adc
sbb
fldenv
mov
fimul
retf
cld
jmp
cmps
jo
fnstenv
ror
inc
cmc
(bad)
or
bound
or
retf
and
xor
fldenv
push
add
add
cmp
dec
ins
mov
pop
push
mov
sub
pop
test
ror
ins
lods
jnp
mov
mov
xchg
mov
push
push
mov
jge
mov
push
xchg
test
aam
adc
dec
dec
xor
cmc
mov
out
icebp
fst
push
jmp
add
repz
test
out
cli
push
inc
mov
(bad)
jge
cmp
rcl
mov
leave
adc
and
mul
fidivr
xchg
ret
or
add
hlt
inc
out
xchg
mov
xchg
mov
and
loop
add
inc
mov
cmc
enter
sahf
mov
cs
mov
daa
retf
sahf
mov
pop
xlat
or
mov
dec
add
outs
lea
mov
mov
sub
mov
push
pop
jmp
ins
out
movs
cmp
fldcw
ret
sbb
adc
rcr
scas
xor
push
call
push
into
push
or
clc
div
fsubp
mov
or
xchg
pop
out
es
xrelease
lods
das
lea
inc
or
(bad)
mov
mov
and
fadd
pop
mov
xor
sbb
scas
fidiv
leave
fld
dec
dec
push
cmp
sbb
iret
movs
mov
stc
es
imul
jmp
mov
or
add
and
sub
mov
mov
fcmovne
mov
inc
ins
outs
pop
test
test
imul
shl
jb
fucomi
push
pop
fsubr
ss
fsubr
pop
mov
sbb
enter
adc
cmp
adc
jbe
ja
adc
ds
push
pushf
mov
adc
mov
xchg
cmp
dec
dec
inc
sub
ror
sub
jmp
std
inc
mov
push
cld
inc
mov
lock
sbb
call
ja
int
retf
sar
pop
iret
lods
nop
ss
in
pop
loopne
cmp
jge
fwait
mov
fnstenv
cmp
stc
inc
jnp
pop
mov
mov
stos
mov
add
fmul
push
sar
mov
fmul
mov
pusha
inc
xor
xchg
mov
div
cmp
arpl
and
les
sbb
fwait
aam
mov
mov
adc
repz
inc
mov
sub
xor
fiadd
pop
addr16
lods
mov
add
xchg
out
push
adc
mov
dec
enter
add
mov
inc
movs
and
jo
pop
(bad)
mov
fimul
sub
push
scas
jae
lock
push
imul
and
jg
scas
fldl2t
std
mov
push
sahf
or
mov
arpl
push
sub
js
fucomi
cmp
sbb
jmp
lods
aam
jecxz
jge
(bad)
push
add
imul
clc
dec
call
sar
mov
xor
outs
es
and
stc
cmps
nop
cwde
or
mov
cmp
and
popf
cmp
inc
ss
pop
ins
mov
enter
mov
inc
pop
fwait
cli
sub
sub
ja
pushf
and
mov
imul
mov
data16
adc
in
mov
sti
xchg
pop
mov
cmp
fisub
mov
aad
cs
les
inc
and
fsub
fwait
inc
lods
pop
and
inc
xchg
sahf
mov
xchg
mov
into
aam
pop
and
test
push
inc
arpl
fstp
cmc
loopne
pop
lock
ja
movs
jmp
loope
xchg
mov
fwait
push
in
lahf
sub
jno
adc
scas
pop
and
sub
adc
and
test
or
mov
imul
sbb
fisubr
daa
mov
out
mov
enter
xchg
adc
xor
or
stc
add
mov
pop
loop
dec
inc
xchg
mov
lds
jmp
add
xchg
test
addr16
(bad)
push
pop
(bad)
in
or
xchg
hlt
mov
xor
mov
stos
popf
mov
xchg
add
ficom
cmp
push
pop
or
fnstenv
and
sbb
jl
inc
cmp
xchg
dec
mul
lods
push
push
inc
xchg
ror
mov
or
call
mov
outs
jg
add
jns
arpl
test
mov
jno
and
push
stos
imul
mov
fadd
(bad)
adc
sbb
cmp
stos
fdivrp
push
stc
adc
xor
icebp
aam
add
dec
out
pusha
xor
pop
add
dec
add
and
std
mov
shl
ret
repnz
lods
xor
movs
pop
sahf
cmp
gs
leave
(bad)
or
addr16
and
aaa
cmps
sub
mov
icebp
stos
fwait
stos
pop
int3
out
mov
mov
xchg
into
imul
aaa
adc
mov
and
sbb
out
(bad)
mov
sbb
or
pop
cld
in
out
sbb
pop
jnp
int3
je
pop
and
pop
in
inc
cmp
sbb
int3
popf
pop
aam
jo
push
popf
and
cdq
sub
xor
lds
dec
dec
xor
es
push
outs
mov
mov
movs
(bad)
movs
scas
ss
mov
ds
(bad)
shr
cmps
inc
fs
push
(bad)
mov
jo
sub
out
xchg
xchg
push
repz
push
mov
fisttp
xchg
(bad)
or
jmp
inc
push
loopne
dec
nop
mov
jl
push
loop
push
sub
mov
push
sub
das
ficom
repnz
mov
adc
push
fmulp
std
sbb
mov
mov
mov
int3
and
or
(bad)
(bad)
js
in
and
sub
je
jmp
movs
sub
mov
mov
or
lds
push
pop
mul
add
add
inc
pop
mov
or
pop
leave
inc
xchg
push
fsub
dec
inc
mov
pushw
add
sbb
jb
call
xor
(bad)
fadd
cmp
or
dec
data16
xor
adc
loop
inc
imul
test
ds
inc
jbe
sysret
bound
mov
(bad)
mov
mov
push
inc
retf
or
sub
(bad)
cli
sbb
lahf
data16
mov
mov
not
add
test
in
retf
mov
aam
adc
out
adc
fcom
sbb
sub
jl
ss
pusha
xchg
icebp
mov
mov
(bad)
scas
adc
dec
popa
sub
mov
pop
add
dec
push
and
popa
les
add
aam
add
test
mov
(bad)
jg
cmp
xchg
adc
xchg
mov
vmread
test
inc
retf
mov
mov
pop
repz
rol
mov
add
loopne
iret
repz
pop
fwait
cmp
nop
mov
add
jg
int
xchg
xlat
sub
data16
(bad)
in
jmp
call
inc
jbe
out
xchg
push
mov
lods
lods
fld
cmp
hlt
mov
pop
sub
pop
xor
shl
jnp
adc
aaa
fs
in
jns
lds
cmc
fwait
rcl
repnz
xlat
inc
pop
cmc
push
push
xor
fistp
sbb
dec
aas
dec
xchg
dec
imul
out
stos
push
xchg
int3
jae
dec
jmp
xchg
and
lods
mov
sub
jns
mov
imul
adc
mov
mov
out
adc
sbb
and
movs
push
clc
test
dec
dec
out
push
jg
int
or
push
inc
cmp
retf
adc
loope
jl
push
jge
test
jl
push
or
movs
add
cdq
iret
mov
test
sub
pop
mov
pop
and
out
lods
je
push
lea
fs
jo
push
mov
leave
mov
gs
adc
ret
or
jbe
dec
(bad)
inc
scas
les
ja
cmp
pop
(bad)
dec
push
aas
dec
in
enter
fs
stos
icebp
adc
and
nop
gs
mov
popa
cmp
in
stos
pop
imul
sub
pop
jl
int3
add
dec
cmp
mov
(bad)
out
mov
mov
(bad)
mov
adc
inc
jge
test
or
shl
push
fs
mov
mov
out
mov
ror
stos
adc
mov
xor
xchg
xchg
add
xchg
out
xor
mov
cmp
sbb
rcl
jge
shl
out
jmp
sbb
dec
leave
inc
xor
outs
aam
nop
call
jge
mov
aas
xchg
mov
or
ss
add
xchg
loop
inc
bound
inc
mov
mov
jle
ja
popf
add
xor
fisub
and
dec
jmp
out
dec
pop
dec
mov
push
adc
inc
fistp
push
mov
dec
shl
mul
push
or
cli
pop
mul
sbb
test
cmps
jmp
jae
stc
sar
adc
test
ja
(bad)
mov
rol
retf
xor
pop
push
xchg
pop
pusha
dec
in
icebp
add
lahf
xor
jnp
jo
cmc
inc
sbb
add
mov
dec
jo
outs
dec
jo
jmp
test
push
mov
jle
xchg
call
sub
(bad)
push
cwde
adc
addr16
push
push
pop
add
xchg
mov
das
sub
cmp
sahf
or
sub
add
fidivr
cmp
fwait
xlat
push
aas
mov
adc
mov
sub
popa
mov
jecxz
scas
(bad)
int
adc
add
push
jp
lock
shr
xchg
cmps
inc
or
mov
jl
aaa
popf
retf
je
clc
or
imul
dec
loopne
repnz
stos
mov
hlt
mov
leave
push
popa
sub
retf
xor
sub
sbb
mov
push
lds
fs
aas
retf
mov
jno
mov
lods
pop
packsswb
pop
fndisi(8087
in
cdq
mov
jns
ins
call
or
xchg
loop
add
and
ins
fld
scas
jl
test
push
imul
daa
imul
cmp
pop
mov
jo
enter
mov
shl
repnz
scas
sub
iret
fisttp
cmp
aam
in
cmps
or
ficomp
mov
and
adc
movs
retf
stos
enter
push
leave
xchg
push
loop
das
lods
ss
mov
loopne
in
and
cmp
cmp
cmp
mov
repz
adc
hlt
and
leave
pushf
js
pushf
mov
fwait
call
or
cmc
xchg
es
mov
icebp
stc
pop
push
into
mov
(bad)
lar
jmp
adc
jnp
shr
ror
and
xchg
sahf
arpl
and
inc
sub
mov
cmp
jge
mov
aas
push
add
mov
pop
add
mov
fs
inc
aad
lods
sbb
repnz
scas
jnp
or
jo
add
loop
cld
cld
sbb
in
or
sbb
in
retf
and
ror
dec
sub
jmp
ins
push
data16
cmp
jnp
pop
sub
out
push
jno
lock
push
pop
loopne
cld
ret
outs
movs
call
jmp
shr
ficomp
mov
mov
and
mov
inc
sub
mov
and
cmp
xor
inc
jo
sub
or
es
add
(bad)
call
es
or
outs
cmp
movs
add
inc
sbb
movs
jo
clc
inc
or
jl
jno
jmp
add
or
aad
loopne
test
mov
call
scas
cmp
cmp
push
pushf
jno
hlt
mov
or
daa
outs
xchg
fcom
and
mov
add
jb
call
ins
repz
xchg
adc
cld
inc
mov
cmp
repz
nop
xchg
sub
fiadd
jb
sahf
and
rcl
lods
dec
hlt
es
call
pushf
mov
test
cwde
pushf
rcl
inc
xchg
stos
push
sbb
dec
xchg
mov
outs
mov
xchg
mov
popf
pop
add
rcr
(bad)
xlat
xchg
or
aas
add
popf
cmps
loop
jne
nop
nop
pop
mov
mov
(bad)
repz
loope
push
fwait
mov
adc
mov
cmps
mov
repz
pop
xor
int3
push
shr
cmp
and
outs
and
movs
call
push
mov
popa
or
cs
xchg
pop
push
push
pushf
out
call
pushf
or
pop
imul
xor
lock
sub
es
pop
movs
mov
inc
cmp
adc
mov
push
loope
ret
pop
dec
jmp
pusha
mov
pop
or
jns
pop
xor
xor
jo
cdq
pop
repz
dec
retf
stc
cmps
xchg
mov
sub
pop
pop
mov
adc
mov
in
call
pop
ds
xor
push
ror
adc
hlt
scas
push
jb
mov
jp
adc
je
cdq
shr
cmp
sub
or
sti
jbe
sbb
mov
imul
xor
out
in
sti
test
jp
push
mov
iret
jg
les
add
mov
inc
pushf
jl
ja
xor
jno
rol
push
jl
mov
movs
inc
rol
out
les
cmps
push
into
mov
xchg
nop
hlt
inc
xchg
push
sbb
nop
loop
ja
push
pop
(bad)
loope
xchg
scas
cs
es
ins
adc
jae
aas
(bad)
push
xchg
iret
push
cdq
push
cmp
and
and
sub
xchg
mul
xchg
jnp
adc
dec
and
aam
imul
sub
aas
ret
jecxz
jl
dec
mov
pop
out
mov
mov
and
pusha
(bad)
data16
repz
push
in
das
inc
dec
add
sbb
push
sti
shr
dec
xchg
shr
inc
jns
mov
mov
ss
jge
xchg
xchg
xchg
fwait
mov
mov
dec
shr
xchg
push
retf
sub
and
mov
fist
test
mov
jg
add
mov
jno
rol
jp
popf
pop
pop
sti
icebp
dec
pop
ret
push
mov
inc
shr
enter
fmulp
xor
sbb
xchg
push
(bad)
outs
push
(bad)
cmp
shr
ja
iret
add
inc
retf
stos
ficom
loopne
add
div
cmp
and
xchg
inc
aas
mov
adc
fwait
pop
mov
cli
push
mov
adc
jo
mov
int3
dec
loop
cmp
into
test
out
jmp
aas
ds
jno
inc
cli
rcr
cli
ret
in
xor
cdq
and
je
pusha
rcr
dec
cmc
das
cmc
mov
stc
test
js
add
adc
ret
pusha
and
inc
inc
mov
(bad)
call
out
cs
aaa
cs
xor
ins
(bad)
xor
jnp
jmp
xor
push
movs
jecxz
push
not
mov
hlt
cs
out
xchg
and
jne
shl
cld
xchg
xlat
cmp
push
push
dec
xlat
ds
test
push
icebp
xor
cld
adc
jne
add
xchg
sbb
ficomp
loop
stos
xchg
sub
lock
jnp
lds
inc
inc
out
popf
and
push
test
out
mov
aaa
int
fsubp
mov
mov
lods
lods
jnp
hlt
movs
icebp
fs
sbb
mov
push
mov
test
call
test
cmc
jb
dec
mov
(bad)
or
rol
or
mov
mov
loop
inc
int3
add
add
sub
loop
xor
ffree
outs
jg
into
sbb
nop
push
fbstp
cmp
cs
pop
sbb
sub
and
shl
loopne
cmp
cmp
test
add
pop
aas
in
loope
sbb
xlat
retf
and
mov
dec
mov
push
push
xchg
inc
cmps
mov
pop
(bad)
int
shl
popf
nop
repz
lahf
sahf
dec
jbe
dec
test
push
or
sbb
jo
popf
pushf
and
pop
mov
adc
imul
shl
mov
dec
in
inc
dec
push
out
jnp
mov
scas
dec
xor
and
jg
test
cli
fistp
xor
xor
jle
ja
xor
add
int3
cwde
adc
mov
cmps
push
mov
xchg
icebp
js
cmps
movs
retf
movs
scas
mov
data16
jl
bound
das
add
push
and
push
ins
hlt
adc
mov
sbb
out
loopne
push
or
ficom
pop
add
repnz
ret
call
inc
mov
cmp
stos
mov
cwde
addr16
mov
pop
cld
(bad)
iret
adc
pop
in
lahf
mov
dec
scas
lea
jbe
jp
std
ret
push
mov
push
ja
jg
mov
ja
stos
jecxz
stos
or
push
arpl
mov
test
fwait
lods
jnp
outs
add
cmp
lods
xchg
cwde
cmc
xlat
inc
in
mov
mov
push
sub
in
popf
or
mov
cmp
movs
loope
mov
inc
dec
cmp
jle
in
cld
add
adc
mov
jmp
xchg
jmp
xchg
outs
in
shr
icebp
leave
dec
pop
loopne
dec
xchg
dec
je
pushf
mov
retf
iret
dec
icebp
retf
jae
adc
rcr
(bad)
out
test
shl
sbb
ja
xchg
or
fld
adc
cmc
sti
enter
outs
into
in
or
push
pop
out
mov
jmp
add
cmp
cmc
outs
in
jge
mov
mov
addr16
inc
sbb
sahf
lods
jbe
pop
pusha
sbb
or
cmps
loop
inc
out
pop
std
popa
cwde
dec
ds
push
sub
(bad)
mov
lea
pop
and
mov
mov
mov
leave
int
push
shr
std
or
nop
and
aaa
jbe
leave
fisub
test
pop
adc
repnz
jbe
jne
shr
mov
xchg
cmps
or
adc
ret
xchg
arpl
js
push
out
push
lods
xor
cmps
push
jecxz
bound
push
movs
sub
imul
mov
aam
jmp
inc
neg
adc
dec
xchg
out
sub
(bad)
jnp
xchg
mov
xor
imul
je
imul
and
sub
xchg
inc
js
fild
mul
into
(bad)
sbb
sbb
push
xchg
push
fcom
sub
arpl
inc
add
(bad)
cmp
mov
push
int3
add
fdiv
push
fdiv
scas
outs
pop
sub
pushf
pop
adc
add
pop
mov
jo
addr16
lock
inc
push
loopne
ins
iret
pop
dec
xchg
mov
popa
mov
xlat
cmp
inc
call
dec
scas
sbb
pop
mov
out
in
jno
repnz
aas
push
sub
and
hlt
dec
fwait
sahf
inc
or
int3
into
jne
stc
cs
jo
pushf
jl
add
mov
push
mov
repz
inc
push
dec
daa
add
push
pop
mov
dec
and
mov
xor
xor
push
(bad)
mov
adc
pop
ins
mov
cmp
push
add
pop
xchg
out
daa
jns
and
inc
cld
add
popf
movs
popf
iret
cmp
mov
push
xor
dec
jge
cmc
scas
dec
xchg
fldenv
sub
sbb
cld
sub
pop
jae
mov
sub
sbb
sub
popa
mov
(bad)
fcmovb
fist
inc
xor
and
kmovw
and
fistp
add
test
es
mov
cwde
xchg
mov
xchg
lea
mov
fcom
xor
fmul
xor
mov
cmp
data16
jge
int3
jge
pop
mov
jno
pushf
sti
mov
sbb
push
pushf
sbb
mov
(bad)
pop
dec
(bad)
push
sbb
xchg
js
mov
lds
pop
jle
dec
cmps
outs
push
test
dec
lods
and
push
dec
xor
inc
outs
pop
out
addr16
dec
dec
pop
cmp
dec
xchg
or
mov
(bad)
inc
adc
jmp
mov
cmps
outs
and
test
add
lods
jge
popa
loopne
push
scas
xchg
fisubr
enter
dec
sub
pop
xchg
sbb
mov
cmp
jnp
cli
add
pop
pop
sub
call
in
mov
push
jg
mov
cmps
es
in
nop
dec
bound
pop
shl
mov
mov
call
loope
sub
fisttp
aam
mov
test
adc
and
or
mov
(bad)
sti
jmp
sahf
push
or
mov
jo
ins
inc
xchg
and
xor
repnz
arpl
inc
jne
mov
mov
movs
sbb
addr16
and
inc
call
add
mul
hlt
out
mov
ret
loopne
pushw
cmp
test
and
ret
dec
jmp
(bad)
mov
cmps
ins
jne
pop
push
fst
inc
int
cmp
rol
and
push
or
mov
add
xchg
cli
std
jne
imul
jne
lea
mov
ss
outs
mov
xor
sar
xor
(bad)
repnz
push
jb
enter
iret
out
pusha
cs
mov
std
test
add
dec
pushf
or
fbld
pop
pusha
inc
int3
jle
dec
or
mov
adc
inc
rcl
ins
mul
push
or
pop
cdq
jns
sti
js
mov
mov
shl
je
push
mov
mov
mov
out
xor
scas
mov
mov
adc
pop
mov
fsub
jmp
lea
imul
jmp
mov
ss
xchg
dec
lods
(bad)
pop
sub
sbb
fadd
push
in
push
adc
scas
scas
repnz
cmp
adc
adc
mov
or
aad
add
mov
popf
sub
fwait
jo
and
(bad)
aaa
loope
dec
(bad)
mov
ret
stc
xor
rcl
dec
or
jno
fwait
js
stos
jg
scas
dec
xor
shr
inc
jp
push
mov
mov
pop
fsubrp
repnz
ins
addr16
push
mov
pusha
sbb
rol
add
xlat
int3
fmul
or
aas
repz
and
mov
push
add
jae
jne
pop
and
nop
adc
lahf
inc
cld
pop
mov
jmp
lahf
jge
xchg
push
pusha
dec
sbb
rcr
or
ret
adc
es
jg
dec
(bad)
add
adc
loope
in
and
push
xchg
mov
sahf
jb
out
push
xchg
pop
ret
cmp
dec
mov
inc
stos
out
outs
call
or
ins
sbb
sbb
cmc
ror
ins
cmp
fmul
pop
cmps
mov
sahf
xor
inc
test
ins
shl
add
or
out
push
or
fld
push
jae
scas
add
jb
inc
mov
fcomp
int3
mov
mov
mov
jecxz
jno
lods
mov
inc
loop
mov
xchg
mov
cmp
cmp
pop
imul
sbb
mov
xchg
fmul
inc
mov
or
cmp
inc
in
imul
(bad)
addr16
sbb
inc
dec
aaa
lods
and
test
test
ret
mov
mov
arpl
imul
aaa
fisttp
test
retf
in
ds
jo
std
push
mov
in
and
inc
mov
dec
(bad)
push
mov
cwde
jle
cld
sti
xor
and
cmps
xor
cdq
sahf
or
(bad)
je
add
pop
mov
pop
mov
retf
xlat
outs
inc
jecxz
xchg
sahf
push
mov
and
(bad)
loopne
das
stos
xor
pop
sbb
sbb
adc
jb
(bad)
mul
bound
js
mov
inc
(bad)
nop
pop
hlt
mov
jl
sub
nop
sti
cmp
adc
test
push
adc
movs
xor
fimul
enter
xor
enter
pop
fs
mov
fs
scas
xlat
mov
and
in
dec
mov
xor
xchg
inc
call
inc
cwde
scas
pop
adc
adc
(bad)
jmp
enter
sub
dec
fs
pop
in
retf
adc
pop
inc
pop
(bad)
jbe
and
add
pop
sbb
popf
cmp
adc
sub
imul
mov
ins
push
cwde
jnp
xor
mov
js
in
xlat
add
jnp
mov
movs
sti
mov
jmp
cmc
ret
addr16
lods
mov
retf
jae
ficom
inc
ret
popf
loop
das
inc
scas
jge
arpl
pushf
popf
data16
call
out
repz
xor
test
test
scas
xor
jmp
lods
gs
cmp
int3
sahf
pushf
push
cmp
imul
sbb
sbb
ja
retf
loopne
imul
call
bound
movs
push
mov
jecxz
push
sub
mov
aaa
cwde
mov
dec
and
movs
mov
jle
aad
ds
addr16
jmp
xor
js
shl
sbb
dec
in
xchg
popf
sbb
outs
pop
cmc
repz
and
fisub
(bad)
mov
mov
jge
daa
retf
sub
clc
mov
in
jp
arpl
cmps
(bad)
ja
test
push
push
adc
mov
cdq
adc
in
inc
cmp
inc
mov
cmp
shl
pop
adc
jns
test
mov
ret
call
mov
inc
call
mov
xor
jb
fstp
mov
cmp
popa
push
sbb
cmps
or
lahf
xchg
retf
inc
inc
xchg
out
push
int
mov
test
lods
pop
sbb
xor
cmp
test
sub
mov
int3
and
mov
(bad)
cwde
nop
push
stos
xor
pop
mov
icebp
mov
test
pushf
jp
(bad)
int3
ret
xor
fs
push
std
retf
ret
call
and
push
xchg
jne
jp
jbe
cdq
cmp
sbb
cmp
into
pop
jns
ret
sub
xchg
mov
(bad)
outs
pop
sbb
push
mov
in
das
jo
in
pmovmskb
pusha
xchg
cmps
int3
cmps
xchg
rol
outs
dec
pop
push
sub
into
inc
cmp
aam
push
add
(bad)
loop
mov
jnp
mov
inc
stos
sbb
sbb
xchg
cmp
sar
push
and
mov
aas
pop
push
xor
outs
sub
imul
popf
outs
pop
mov
jno
xchg
mov
sbb
cdq
inc
xchg
mov
add
lods
push
movs
and
sahf
ret
ss
cwde
push
xlat
in
out
pushf
add
lss
or
les
outs
cmc
movs
sub
sbb
xchg
or
xchg
sub
bound
in
ins
stos
push
fist
cmp
push
test
dec
cli
loopne
ret
jne
jne
push
ins
push
rcl
mov
test
mov
and
mov
scas
outs
stos
mov
mov
or
push
inc
fisttp
sbb
test
lahf
es
dec
sub
and
and
or
(bad)
xchg
push
int3
ins
xor
jg
les
lahf
jne
popf
and
mov
sub
(bad)
call
inc
push
ins
dec
jp
iret
adc
shl
cs
(bad)
mov
fcomp
dec
je
push
adc
or
pop
push
inc
or
loope
(bad)
pop
mov
pop
imul
jle
fwait
leave
hlt
pop
mov
add
pop
mov
jecxz
jge
gs
or
sbb
cmp
sar
xchg
(bad)
outs
mov
jnp
xchg
jp
iret
cmp
dec
pop
pop
outs
sbb
je
int
ins
hlt
aad
daa
fcmovnb
pop
sub
mov
add
sbb
ret
mov
out
cmp
sub
(bad)
sub
add
ficomp
pusha
test
imul
clc
fisubr
jmp
xchg
mov
sti
pop
sbb
inc
sbb
xchg
sti
loopne
cmp
psadbw
add
movs
push
inc
dec
jp
aam
sub
xor
sub
ins
jo
mul
out
cli
and
xchg
je
mov
loope
jae
sbb
out
cmp
les
loop
inc
jae
jecxz
push
mov
mov
or
js
and
mov
outs
inc
inc
sbb
xchg
sbb
in
out
sahf
jmp
xlat
(bad)
pop
lahf
sub
mov
xchg
inc
mov
sub
shl
in
add
push
cmps
mov
jns
add
inc
pop
add
sub
pop
icebp
sub
jge
fwait
outs
xor
call
or
imul
lahf
ficomp
xchg
mov
xor
data16
dec
(bad)
std
push
bound
lock
aas
stos
sub
lock
mov
jmp
inc
and
push
mov
imul
retf
ja
xchg
sub
rcr
xchg
movhps
(bad)
ficom
clc
add
pop
add
and
mov
sub
and
fwait
cmp
imul
add
in
jmp
fdivrp
inc
pusha
jae
iret
ret
push
dec
in
jo
adc
iret
inc
jle
inc
jns
(bad)
lock
push
adc
mov
outs
cdq
je
and
iret
in
dec
push
fsubr
fld
pop
adc
into
rol
inc
sahf
pop
push
inc
mov
loop
loopne
sub
push
(bad)
sbb
les
jecxz
jne
cmps
cmp
xor
jecxz
dec
pop
(bad)
lods
cmp
mov
cmp
mov
fs
or
adc
repz
aad
bound
jmp
jle
mov
fild
fld
cli
or
imul
sbb
jbe
mov
xor
out
cmp
fsubr
in
pop
add
cwde
mov
cmps
test
or
sub
in
xor
stos
icebp
xlat
and
jmp
push
cli
sub
add
out
rcr
enter
mov
push
jnp
call
cmp
hlt
sbb
or
stc
push
in
add
jns
movd
jb
popf
nop
add
push
add
push
mov
mov
push
dec
mov
xchg
leave
cdq
jae
jae
imul
adc
ja
outs
push
pop
or
mov
push
mov
push
stos
pop
xor
outs
fadd
push
add
push
xchg
aaa
or
ret
popf
movs
das
jbe
lods
and
mov
ds
push
fisubr
xor
jmp
jnp
xor
mov
sub
mov
aaa
adc
mov
add
sub
std
xchg
enter
loopne
push
adc
pop
adc
jmp
jge
mov
inc
(bad)
jne
aam
mov
mov
stos
adc
cmp
push
aas
and
add
call
push
sub
mov
xchg
xchg
push
sub
xchg
mov
fwait
nop
(bad)
cmp
inc
mov
xchg
fldenv
(bad)
(bad)
cmp
pop
mov
or
ret
push
jae
pop
out
in
fcmove
out
xchg
pop
mul
add
xchg
das
outs
push
jnp
mov
xor
jp
lea
push
scas
mov
sub
jo
dec
pop
or
fidivr
fcom
cmp
dec
xchg
test
push
enter
mov
retf
add
add
test
xor
lahf
js
or
mov
add
das
scas
xchg
pusha
sbb
mov
imul
ror
aam
mov
test
mov
xchg
inc
cdq
cmp
dec
repnz
pop
scas
or
sub
or
int
mov
out
adc
repnz
and
cmp
and
cdq
ficomp
retf
cli
call
(bad)
and
movs
push
stos
xor
pusha
dec
and
dec
push
mov
add
outs
not
sti
retf
xchg
dec
xor
dec
fs
mov
ret
das
jmp
jne
test
mov
call
pop
int3
cmps
shl
rol
repz
push
ins
inc
out
fcomi
aas
jne
jecxz
in
icebp
or
push
mov
lods
retf
rol
jns
mov
push
aad
int3
repnz
mov
test
ins
gs
or
sbb
push
pop
cmp
pop
lahf
cmps
movupd
es
lds
std
pusha
cwde
mov
add
xchg
push
outs
rcl
dec
(bad)
mov
push
jl
mov
adc
enter
lahf
push
dec
dec
stos
pop
add
sbb
cmp
cwde
(bad)
cdq
push
in
fstp
cmp
mov
inc
push
add
jg
xchg
sets
neg
inc
mov
sub
mov
ds
pop
dec
in
out
test
movs
dec
jmp
pop
outs
out
adc
mov
sbb
mov
cmps
imul
cmp
lods
cs
cmp
sti
out
inc
inc
rcr
outs
test
sar
xchg
or
daa
pop
int3
rcl
rcr
xchg
adc
cmc
and
das
cs
jne
retf
sbb
mov
cmp
or
pop
and
in
pop
or
daa
or
loopne
(bad)
(bad)
xor
fwait
cdq
xchg
fimul
mov
fdiv
xor
jns
sub
add
bound
pop
xchg
and
sbb
loope
dec
in
in
imul
js
out
ds
cmc
fisttp
xchg
xor
mov
xchg
int
repz
stos
cs
mov
sub
xchg
mov
and
jb
iret
inc
ds
mov
mov
int3
xchg
and
mov
xchg
fwait
fs
stc
push
pop
cmc
fsubr
pop
maskmovq
nop
adc
int
mul
add
jae
mov
sar
jne
xor
scas
jp
xchg
or
test
and
(bad)
rcl
add
fist
stos
jp
cmp
push
or
repnz
mov
ds
rol
lock
lock
dec
dec
or
ret
or
jae
arpl
add
jo
and
arpl
mov
fwait
adc
xor
pop
mov
test
mov
jne
cmc
iret
jne
pop
mov
retf
arpl
lods
inc
cmp
dec
scas
arpl
xchg
lock
or
mov
das
sbb
std
mov
mov
shl
add
test
fstp
rol
mov
mov
mov
(bad)
into
cmp
xchg
add
into
int
sbb
sbb
fs
sub
scas
fmul
sbb
mov
xchg
outs
shl
lods
repnz
xor
ds
popf
repnz
dec
aaa
arpl
jg
std
inc
loop
xchg
xchg
inc
std
out
lods
xchg
out
cmps
push
mov
mov
dec
push
add
pop
xlat
sbb
lea
push
cli
sub
xchg
sub
sub
add
mov
push
mov
sti
aad
movs
sub
addr16
inc
rol
cmp
stos
and
jae
leave
dec
inc
leave
xchg
dec
(bad)
push
mov
cmp
pop
out
ins
sar
inc
jnp
stc
xor
mov
fistp
rol
mov
fsubp
adc
or
mov
mov
push
scas
xor
or
mov
xchg
mov
out
call
cmp
jg
test
into
jb
push
mov
and
je
mov
in
aam
dec
mov
push
jecxz
mul
adc
mov
xchg
sahf
es
adc
fs
push
jmp
cdq
mul
sub
ret
vpcmpgtw
jno
mov
iret
sbb
jnp
int3
mov
and
jg
cmp
and
dec
popf
adc
ret
and
xlat
pop
push
pop
mov
mov
mov
daa
mov
mov
mov
push
arpl
pusha
mov
sub
retf
or
mov
scas
pusha
jl
push
ds
sub
or
inc
xchg
adc
jecxz
mov
add
fstp
xchg
mov
ja
push
push
and
jge
mov
mov
cmp
imul
jae
addr16
cmp
ss
ins
fcmovne
in
mov
sahf
cmp
mov
xchg
imul
jb
push
in
mov
(bad)
fwait
cmp
repz
pop
leave
dec
adc
fs
hlt
scas
add
imul
shr
dec
rcr
test
sbb
stc
mov
xchg
fmul
adc
fild
fld
or
iret
cdq
push
inc
fcomip
sub
outs
movs
cmp
xchg
out
(bad)
icebp
leave
movs
sub
add
or
and
cmp
pop
add
sbb
jp
adc
adc
mov
push
clc
inc
fs
ins
(bad)
adc
or
push
fxch
and
dec
mov
jnp
mov
data16
mov
push
mov
stc
ret
in
iret
std
aas
setno
xchg
je
xchg
or
int3
stos
ds
or
push
mov
pop
popf
sub
pop
xchg
inc
inc
int
fcomp
fisttp
out
addr16
xchg
fcom
(bad)
je
and
fwait
pop
fstp
jmp
sub
mov
loop
pop
cmp
popa
jmp
mov
pop
aas
stos
int3
pop
pushf
adc
sub
lods
loope
ret
cs
mov
in
cmc
jae
push
jmp
xchg
cmp
and
not
mov
data16
jns
push
stos
ror
jne
mov
fisubr
push
mov
loopne
dec
sti
loope
mov
clc
not
(bad)
outs
stos
inc
push
retf
ins
stos
fidiv
fimul
jecxz
cli
inc
shr
iret
aas
test
stc
cmp
xor
in
aam
(bad)
lahf
das
call
mov
leave
es
jg
pusha
mov
inc
adc
(bad)
movs
mov
push
sub
enter
sub
fcomp
pop
sti
retf
inc
jl
(bad)
clc
retf
xchg
imul
int
xchg
push
inc
in
fs
sar
pop
in
scas
in
inc
enter
pusha
mov
mov
sub
ss
jns
scas
addr16
sbb
push
jo
popf
xchg
xor
sbb
sti
push
cmp
jmp
push
int3
scas
xchg
cdq
ds
xchg
stc
daa
pop
sub
push
pop
sub
sbb
stos
in
hlt
clc
sbb
out
sub
cmp
ficomp
ret
ss
push
jb
xor
cmps
xchg
jns
mov
call
or
cmp
dec
pop
mov
inc
xchg
jb
adc
fiadd
mov
pop
je
lds
mov
adc
add
xor
xchg
ins
push
pop
push
push
mov
into
movs
pop
xchg
mov
stc
retf
sub
call
push
jb
dec
jl
ror
pop
fs
cs
xor
retf
jae
mov
bound
jo
dec
dec
scas
xor
mov
dec
js
mov
pop
test
pop
call
loopne
mov
xchg
adc
pop
mov
pushf
cmp
push
inc
int3
sub
sbb
dec
repnz
sbb
jae
dec
or
or
pop
adc
dec
mov
repz
lods
cs
xor
mov
popa
fisttp
sar
scas
neg
cmp
arpl
ins
mov
cmp
xchg
in
sbb
mov
je
mov
jo
dec
jae
test
xstore-rng
cmps
les
or
std
scas
imul
mov
ins
ret
xchg
jmp
dec
cmp
test
lahf
ja
jle
mov
sub
fisttp
fisttp
pop
fsub
add
shr
lock
fcmovbe
shl
xor
pop
outs
leave
mov
fdivr
push
mov
mov
and
cmp
int
dec
mov
sbb
and
mov
push
call
fistp
icebp
jmp
je
call
(bad)
xchg
dec
push
mov
fst
lea
pop
xor
je
rcr
lods
dec
jp
ins
mov
mov
cli
hlt
dec
dec
ja
mov
cdq
leave
mov
inc
mov
fist
pop
adc
cmc
pop
mov
shr
cwde
mov
cmps
scas
test
sub
pop
cdq
xchg
call
add
xchg
aam
cmc
mov
xchg
add
pop
pop
ret
mov
lahf
xchg
sbb
ret
sub
std
or
sub
cmp
sbb
repz
or
int
xor
mov
adc
ins
icebp
jg
mov
mov
les
(bad)
pop
fimul
mov
ins
jmp
mov
(bad)
hlt
jno
inc
shr
rcl
call
pop
icebp
mov
adc
sbb
pop
fdivr
ficomp
mov
dec
mov
dec
cmp
fs
sbb
xor
cmp
push
add
xor
sbb
pop
and
nop
pop
out
outs
les
sbb
pop
fcmovnbe
dec
test
sbb
pop
xor
nop
jne
dec
push
test
fistp
lds
stos
jecxz
push
pusha
(bad)
jge
and
retf
test
xchg
repnz
aad
and
lock
test
mov
push
shl
pop
fist
imul
mov
sub
lea
cmpps
mov
pushf
adc
aaa
lods
(bad)
hlt
not
jo
addr16
call
movs
scas
sub
scas
jb
(bad)
jp
or
addr16
frstor
ja
xchg
adc
(bad)
sbb
out
xchg
dec
push
and
mov
pop
test
or
inc
push
pop
or
mov
and
fist
push
in
jg
das
aas
and
dec
adc
push
out
inc
retf
enter
lock
cmps
push
out
out
jbe
shr
and
xor
pop
xchg
add
retf
xor
mov
pop
mov
cmp
aam
jbe
test
dec
cmp
jp
fldenv
fs
jle
fwait
adc
sub
pop
xor
pop
movs
ss
test
arpl
and
dec
push
fwait
mov
push
xchg
das
or
lea
mov
sbb
test
test
les
push
sbb
fs
rol
in
push
mov
jge
(bad)
mov
jns
adc
mov
dec
sub
out
xor
loope
pop
(bad)
stos
mov
inc
push
mov
push
xor
push
dec
js
ficom
add
test
out
cmp
xor
js
fwait
mov
lahf
in
xor
cmp
int3
push
dec
mov
(bad)
lock
test
pop
cmp
adc
adc
pop
lods
fwait
mov
in
adc
inc
xchg
aad
add
cmp
inc
cdq
gs
repz
imul
push
xchg
jae
xor
mov
ror
mov
pop
add
enter
addr16
mov
loop
fcom
repnz
or
adc
les
push
mov
sub
adc
push
pop
mov
pop
xchg
imul
jmp
iret
lahf
pop
out
and
mov
inc
push
loopne
cmc
out
add
and
cli
mov
inc
lods
adc
fcom
cdq
iret
jl
sbb
sbb
push
mov
xchg
pavgb
xchg
popf
sbb
and
jns
and
xchg
out
sbb
pop
movs
gs
in
xor
inc
cwde
inc
mov
and
sub
mov
aam
pop
and
aad
arpl
call
ss
inc
mov
pop
mov
xor
lea
xchg
pushf
div
test
not
jae
add
repz
mov
pop
sbb
in
push
outs
in
xor
push
sub
stc
sbb
jb
fist
inc
pop
daa
rcl
xor
icebp
(bad)
imul
dec
(bad)
out
inc
movs
ret
nop
inc
mov
push
lds
xor
rol
push
arpl
jo
out
es
cmp
jecxz
mov
sbb
imul
pop
dec
mov
mov
pop
adc
cmp
test
push
(bad)
ret
cmp
dec
xlat
and
mov
bound
int
xor
out
and
out
mov
pop
outs
into
imul
mov
repz
and
inc
dec
cmp
sti
es
mov
mov
mov
pop
sbb
fdiv
sub
rcr
push
xor
arpl
sbb
push
xchg
int3
cmp
stos
sub
sbb
adc
retf
mov
rcr
test
cmp
es
cmp
ja
fldenv
hlt
mov
out
and
out
fiadd
xchg
lea
mov
ret
jb
rol
hlt
inc
gs
pop
push
cmc
mov
inc
stos
mov
or
sti
xchg
mov
push
push
das
push
jge
imul
cmps
dec
add
sbb
jg
leave
sub
inc
outs
pop
ror
pop
mov
jecxz
adc
jb
fild
ret
pop
mov
add
popa
in
aaa
loopne
out
or
ret
inc
mov
dec
scas
aaa
jle
sub
mov
test
and
and
sub
xchg
cmp
add
inc
(bad)
mov
in
into
jns
inc
jne
test
push
or
in
leave
(bad)
retf
in
inc
mov
mov
cmp
outs
(bad)
sbb
push
add
push
xlat
inc
or
mov
mov
push
mov
pop
mov
mov
mov
jno
jnp
mov
fcomp
cmp
scas
adc
mov
es
hlt
cwde
mov
inc
mov
xor
pushf
neg
fdivr
test
jl
dec
push
mov
pop
ss
xchg
pop
stos
sbb
add
push
gs
pop
adc
xchg
push
jne
popa
out
mov
or
cmps
xchg
sub
fstp
push
(bad)
bound
out
repz
jp
sti
pusha
sbb
add
test
lods
mov
sub
mov
dec
and
ins
xlat
ja
mov
fcom
sub
jae
pop
clc
xor
out
dec
fadd
icebp
ins
mov
sub
sub
mov
(bad)
adc
push
mov
jns
mov
dec
jp
int3
les
pusha
dec
rcl
and
inc
push
or
lods
div
(bad)
push
cwde
sbb
dec
loop
or
dec
mov
adc
jp
pop
add
mov
fidivr
cmp
xchg
mov
div
lahf
cmps
ret
and
sbb
xor
inc
mov
xor
test
cmps
or
xor
shr
mov
in
jbe
jmp
fst
add
in
out
fisub
xchg
fld
or
stos
mov
cdq
cdq
adc
bound
ss
sti
sbb
dec
out
cmp
jnp
xchg
add
and
or
iret
cmp
sbb
mov
mov
loopne
adc
jb
push
fsub
mov
(bad)
adc
in
push
cli
rol
aam
(bad)
mov
mov
mov
sbb
test
pop
push
clc
movs
jmp
fs
jge
xlat
xor
xor
jo
push
retf
push
pop
or
mov
call
adc
mov
es
xor
sti
xlat
cmps
into
fld
sbb
xchg
dec
mov
test
xchg
jmp
stos
push
enter
push
hlt
and
test
adc
out
add
scas
sbb
jo
add
rep
sub
imul
ja
mov
out
leave
movs
pushf
sub
lds
leave
ins
jmp
(bad)
lds
shr
sub
stos
xor
jmp
jae
test
xor
jmp
ror
cmp
out
imul
aad
loop
jne
mov
out
jg
cs
xor
test
stos
je
ss
js
cld
jle
cdq
xor
mov
shr
cmp
out
or
sti
mov
ror
addr16
jmp
xchg
dec
pop
or
cmp
cmp
jg
retf
imul
addr16
aad
xchg
and
jnp
in
mov
mov
ret
mov
jo
push
lock
addr16
call
in
mov
mov
mov
xchg
jmp
repz
push
mov
mov
mov
and
sbb
push
push
sub
clc
add
xor
pop
pop
shl
(bad)
icebp
add
imul
mul
call
gs
sbb
clc
mov
mov
mov
lods
mov
mov
mov
pop
lahf
jp
outs
pop
push
or
pop
push
inc
push
and
pop
hlt
pop
cmp
or
(bad)
sar
xchg
mov
cld
lahf
mov
push
pop
daa
sub
sti
ins
and
dec
ds
movs
cmps
jo
mov
mov
loopne
pop
pop
cmps
cmp
sbb
fidivr
push
cmp
test
jae
lock
int3
in
mov
push
int
inc
jo
cmp
sbb
ins
sbb
test
mov
daa
jne
in
ds
pop
pop
inc
loope
push
xor
outs
addr16
int3
enter
out
test
pop
(bad)
call
and
(bad)
push
inc
jbe
add
outs
dec
retf
pop
sub
daa
retf
jmp
outs
and
or
fs
jmp
cld
mov
sub
mov
push
push
push
adc
int3
mov
push
stos
int
cmps
mov
inc
mov
mov
es
test
sub
mov
xchg
mov
cmp
retf
sbb
adc
push
sar
sub
adc
clc
fisubr
adc
xchg
mov
cmp
push
and
sbb
mov
add
xor
outs
mov
out
ss
jecxz
jnp
dec
out
mov
sub
mov
mov
loopne
cmp
shr
in
add
call
pop
leave
cli
xchg
jae
pop
fsub
jmp
inc
(bad)
not
xor
movs
inc
mov
arpl
xor
test
bswap
movs
inc
pop
arpl
dec
sub
enter
loope
mov
cmc
dec
mov
(bad)
aam
fcmovnu
cmc
xchg
xchg
test
js
pop
into
xchg
xchg
xlat
retf
pop
cmc
sar
sub
(bad)
shl
dec
test
jb
add
fisubr
sbb
cmps
(bad)
(bad)
adc
pop
or
out
adc
sbb
mov
jno
push
rcl
lods
push
mov
xchg
ins
fidivr
cwde
popa
push
int3
pop
outs
mov
bound
sub
or
adc
add
mov
clc
fcompp
inc
clc
int3
jmp
(bad)
xchg
fs
jo
stos
cs
(bad)
adc
jmp
and
nop
stos
xlat
es
jne
imul
add
mov
sub
enter
lods
push
loopne
xchg
mov
ret
jne
add
aas
inc
sbb
imul
and
xlat
pop
rcr
sub
jo
jg
mov
or
cmc
std
scas
stc
add
inc
fs
aad
sbb
and
add
jb
mov
cmp
inc
sub
iret
ss
int
lds
popa
nop
aas
adc
pop
lock
jmp
mov
fld
sub
push
mov
fild
mov
bound
fidiv
cmp
fild
add
xor
pop
inc
fst
aam
jns
sub
add
out
xchg
push
hlt
sbb
scas
mov
scas
sub
and
retf
pop
test
sbb
pop
xor
lahf
mov
in
xchg
addr16
mov
mov
mov
retf
xchg
push
cs
jg
push
pop
clc
sti
mov
test
add
ret
test
adc
mov
stos
icebp
fnstsw
adc
pop
into
adc
sti
mov
test
xchg
xchg
fstp
test
fisttp
cmps
jecxz
rol
mov
xchg
mov
das
ror
repz
out
mov
sub
sbb
mov
jmp
aam
cmp
inc
adc
cmp
in
stos
mov
or
pop
sub
push
pushf
hlt
inc
pop
fsqrt
ss
cmp
push
mov
aaa
imul
mov
xchg
test
fidiv
cmps
adc
adc
jb
ret
dec
and
out
mov
xchg
mov
repnz
or
push
int
aas
pop
out
dec
or
sahf
in
imul
movs
push
lahf
mov
inc
retf
sahf
loope
dec
push
sbb
mov
dec
mov
jo
push
out
ficom
lds
sub
sub
mov
aad
xchg
sub
push
arpl
adc
mov
shl
jle
rcr
mov
outs
pushf
std
sbb
push
xchg
repz
fstp
aad
es
mov
mov
movs
jg
mov
iret
xor
pop
pop
add
in
outs
jmp
out
or
(bad)
test
mov
or
int
leave
jp
inc
inc
push
sbb
or
jl
fdiv
arpl
push
mov
pop
mov
fnstcw
mov
int
inc
lds
idiv
into
outs
rol
scas
aas
scas
jl
cmps
and
jne
sub
mov
clc
iret
daa
dec
sub
gs
inc
popa
or
or
dec
into
cmps
jbe
pop
fmul
pop
sbb
icebp
push
in
dec
popf
call
das
add
jl
mov
stos
inc
sbb
add
inc
and
jnp
sbb
lea
sbb
adc
mov
(bad)
mov
leave
rol
sbb
sahf
dec
xchg
mov
jne
and
sub
int
xchg
das
jp
lahf
pop
xor
xlat
xlat
ret
mov
cwde
cdq
xor
inc
fwait
(bad)
add
push
xor
arpl
push
pop
lahf
mov
adc
adc
sub
in
inc
test
mov
sbb
adc
in
or
cdq
adc
mov
dec
sbb
popf
imul
pop
aad
in
mov
or
popf
iret
adc
lahf
mov
cmc
das
add
es
cwde
lock
sar
out
jmp
(bad)
sbb
rcr
push
aaa
cmps
mov
ret
rol
fcmovbe
idiv
xchg
adc
sbb
adc
pop
adc
loope
sbb
push
sub
fld
mov
test
sub
nop
aaa
jne
or
data16
jecxz
neg
sbb
out
fild
mov
dec
sub
cmc
cwde
gs
xchg
push
xchg
push
or
movs
jmp
adc
dec
ss
and
add
or
or
pop
xor
inc
sub
out
and
int3
bound
repz
std
mov
stc
aas
push
push
xchg
shr
cmp
inc
ins
cmp
(bad)
test
add
inc
xor
and
mov
clc
jle
sar
imul
xchg
movs
cmp
mov
push
in
loopne
mov
scas
scas
fnstcw
mov
js
test
fistp
cmp
dec
jmp
stos
in
cmp
(bad)
mov
xchg
xchg
dec
mov
jno
dec
push
cmp
(bad)
adc
mul
pushf
adc
(bad)
scas
fdivr
cli
shr
mov
dec
outs
ins
(bad)
fld
xor
lods
outs
mov
aam
xor
fistp
push
cmp
outs
(bad)
cld
jmp
jmp
bound
fwait
push
sbb
jbe
xor
push
pop
std
adc
(bad)
mov
ja
rep
cld
mov
dec
test
inc
es
pop
adc
jmp
and
xchg
retf
call
fnsave
movs
jp
push
mov
daa
rcl
jae
stos
mov
mov
(bad)
pop
aam
push
popa
inc
push
repz
stc
jecxz
jl
cmp
push
mov
adc
stc
add
pop
mov
js
sub
mov
int
mov
sub
mov
neg
or
jnp
cld
mov
daa
push
retf
int
mov
fcmove
xchg
pop
sub
xchg
ss
jmp
jmp
mov
dec
push
sub
or
cmc
mov
mov
test
out
cdq
(bad)
es
call
dec
mov
(bad)
jb
jne
sub
pop
push
pop
mov
mov
sbb
sbb
pop
stos
pop
push
dec
je
pop
inc
dec
xchg
fwait
sub
xchg
ret
or
int
repz
inc
jmp
out
out
fdecstp
mov
inc
adc
ds
or
mov
cmp
mov
mov
repz
fwait
xchg
out
xchg
sti
(bad)
mov
or
popf
arpl
sub
jo
push
and
pusha
mov
and
(bad)
stc
idiv
arpl
fisttp
test
xor
lock
mov
push
lock
push
inc
and
lea
cmp
gs
test
loop
cmp
pop
xchg
sar
and
clc
shl
push
stos
lahf
adc
outs
mov
sub
mov
arpl
mov
and
fisub
sar
lds
xchg
push
cmp
push
mov
xor
shl
mov
(bad)
jo
int3
xchg
aaa
jae
sub
movs
mov
mov
mov
cmc
xor
lock
sub
and
sub
test
sub
and
mov
test
aam
rcl
jp
cmp
push
clc
push
and
cmp
sar
sbb
cdq
dec
fisttp
inc
cs
and
xor
push
rol
test
clc
mov
mov
pop
les
lea
test
aam
js
aaa
or
sub
repz
jmp
xor
lods
int3
outs
pop
pusha
sbb
dec
sbb
dec
pop
xor
add
xchg
lods
in
xor
jno
retf
xor
imul
mov
test
cwde
cmp
shr
dec
push
cld
xchg
cmps
cmp
out
fstp
adc
es
rcr
cmp
mov
mov
mov
xor
or
or
pop
push
or
xchg
mov
arpl
sub
sbb
outs
mov
imul
(bad)
imul
out
enter
ins
das
test
fwait
leave
cmp
test
pop
rdmsr
mov
dec
pop
sbb
and
mov
fs
cmps
cmp
inc
push
(bad)
das
aas
aas
(bad)
mov
out
push
ins
sbb
cmp
inc
mov
fstp
adc
clc
xchg
sub
jecxz
test
add
dec
push
inc
jo
pusha
inc
mov
clc
das
and
push
jge
or
shr
dec
inc
stc
inc
pusha
pushf
hlt
outs
nop
sub
pop
test
pop
test
mov
jae
punpckhbw
pop
adc
test
not
shr
movs
enter
sbb
and
dec
movs
mov
or
mov
data16
stos
idiv
call
push
aaa
mov
cs
fdivr
push
lock
xchg
jns
and
rcl
xor
cmps
jb
fcomp
jl
ret
jge
loopne
jae
dec
movs
stos
in
jg
scas
ins
outs
(bad)
(bad)
cld
push
cmps
sub
movs
pop
jno
fiadd
cmps
jmp
inc
xchg
xchg
mov
stc
mov
cmp
in
dec
xor
repz
pop
push
in
cmp
shl
shr
push
mov
add
fisubr
push
(bad)
jmp
bound
mov
dec
out
add
inc
sub
or
ret
pop
xor
pop
stos
jo
pushf
sbb
or
fwait
mov
jo
cdq
mov
mov
mov
sbb
das
pop
outs
test
add
mov
pop
ja
pop
movs
enter
fimul
mov
push
fild
js
mov
mov
mov
or
sub
push
or
add
cwde
mov
mov
imul
sub
cmp
add
shr
and
sbb
inc
cmp
hlt
sbb
(bad)
(bad)
scas
das
mov
jl
pop
pop
pop
xor
push
cmp
(bad)
dec
pop
mov
push
mov
cmc
jmp
mov
fst
dec
dec
shl
pop
add
or
push
je
mov
fwait
and
or
ins
xchg
adc
sar
imul
jo
inc
scas
mov
mov
xchg
or
or
fwait
push
inc
ffreep
jecxz
sbb
adc
(bad)
push
xchg
jmp
or
mov
arpl
popf
fidiv
fsub
cmovbe
add
inc
sub
sub
cdq
into
lods
xor
mov
ds
cmp
inc
jmp
clc
pop
arpl
jecxz
adc
loopne
das
aaa
mov
xchg
sbb
cmp
adc
jp
xchg
test
mov
mov
in
cs
xor
je
add
fld
push
int
jmp
hlt
pusha
xchg
mov
sub
xor
test
sub
nop
cld
cmp
(bad)
jmp
test
cmp
in
adc
in
sub
loope
sub
icebp
lock
push
aam
mov
add
xchg
inc
ja
add
add
xor
jl
dec
jl
(bad)
jp
push
sbb
in
sbb
arpl
cmp
cmp
outs
int
add
mov
dec
mov
cmc
pop
jae
mov
push
jmp
sub
sbb
loopne
jne
fimul
cmp
dec
pop
and
push
sub
mov
pop
push
sub
jbe
xchg
dec
fnsave
out
dec
inc
push
mov
mov
xchg
mov
and
mul
call
push
repz
cmp
xchg
sub
mov
sahf
pusha
cmps
call
and
mov
inc
jmp
xor
pop
xor
fwait
sub
push
xor
sahf
stos
mov
ret
aam
leave
test
arpl
adc
cmc
iret
fsubr
movs
mov
pop
int
dec
pop
clc
daa
jo
fimul
dec
and
stos
popf
pop
outs
daa
fs
push
sub
imul
xor
adc
ins
jecxz
mov
sub
dec
sub
mov
ror
sar
add
adc
push
adc
ret
mov
pop
in
ror
jg
inc
enter
test
popf
and
mov
cmp
pop
jge
nop
(bad)
jecxz
out
gs
sbb
ss
sti
pop
inc
mov
int3
outs
lahf
es
xchg
and
dec
mov
and
addr16
sar
aad
call
cmp
push
int
cmp
sbb
daa
or
dec
xchg
out
adc
push
dec
pop
rcl
jns
in
ror
mov
imul
das
loop
xchg
std
test
scas
mov
mov
pushf
scas
push
push
(bad)
les
mov
inc
in
fpatan
arpl
xchg
pushf
rol
rcl
lods
pop
call
xor
dec
xchg
inc
fwait
inc
jp
test
gs
xor
push
pop
int3
jne
(bad)
xlat
mov
jecxz
jmp
outs
jne
icebp
mov
mov
popf
xchg
and
jl
scas
scas
fisttp
add
cmp
xchg
ret
cld
cmc
inc
int
xor
xlat
mov
xor
mov
retf
int
xchg
arpl
(bad)
push
push
bound
int3
xlat
push
fld
mov
mov
movs
or
jb
hlt
int3
mov
int3
aad
sti
int3
xchg
ja
jle
and
push
lock
aad
(bad)
sahf
sbb
jmp
pushf
mov
jecxz
jns
loope
or
dec
dec
xor
sar
cmp
push
inc
imul
sub
pop
pcmpeqw
pop
mov
rcl
and
jnp
xor
(bad)
popf
xchg
jns
lea
adc
mov
mov
push
sti
push
cwde
jmp
jb
pop
aam
push
(bad)
push
icebp
dec
cdq
(bad)
push
xor
mov
xchg
pop
jo
sub
lea
add
sub
mov
push
test
inc
jl
or
scas
arpl
jmp
jmp
inc
jg
test
ficom
outs
into
call
test
das
dec
jbe
jb
out
and
aas
dec
add
xchg
dec
out
cmp
lahf
data16
or
jmp
and
scas
adc
cmps
dec
daa
or
push
shl
lds
adc
ret
pop
push
js
add
xchg
cmc
xor
scas
out
push
jne
add
popf
loope
inc
popa
lock
(bad)
(bad)
cmp
in
sub
scas
or
sbb
cmp
mov
sbb
out
aad
sbb
push
mov
dec
or
fdivr
mov
int3
nop
jmp
lds
mov
push
mov
ins
loop
jl
nop
inc
sbb
fdivr
mov
jmp
ret
pop
enter
(bad)
(bad)
sub
add
xor
pop
jne
inc
fisttp
xor
test
sbb
(bad)
outs
std
or
arpl
inc
push
dec
lds
(bad)
rcl
push
test
sbb
in
push
or
rol
push
and
lock
movs
push
push
cmp
in
dec
addr16
cmps
ja
pop
adc
jmp
mov
fbld
fwait
pop
fadd
jecxz
inc
movs
mov
mov
add
cmc
xchg
mov
inc
mov
pushfw
(bad)
fmul
(bad)
sub
int3
jmp
cmp
push
pop
retf
test
fwait
arpl
pushf
pop
jmp
mov
mov
ja
inc
jl
push
out
(bad)
jns
stos
xor
cld
hlt
pop
mov
push
sub
ret
dec
cmps
jno
(bad)
mov
aam
js
call
jp
xchg
or
push
(bad)
mov
xchg
mov
scas
scas
mov
xchg
mov
push
addr16
sbb
pop
nop
lahf
int3
cld
and
sub
test
add
jmp
sti
mov
mov
sub
cmp
outs
pop
or
add
add
adc
movs
sub
dec
push
and
dec
sub
outs
out
out
movs
mov
stc
aaa
dec
push
test
int
dec
mov
mov
pop
push
test
mov
mov
adc
jl
or
and
jns
out
add
mov
push
sahf
mov
nop
cmps
jecxz
sbb
hlt
push
test
mov
stos
std
cmp
inc
dec
(bad)
xchg
stos
ins
pop
dec
das
pop
push
(bad)
adc
loop
lods
call
and
les
pusha
mov
data16
pop
mov
mov
(bad)
xor
and
icebp
xor
sar
lahf
sahf
dec
jbe
xor
pop
lahf
lods
test
imul
adc
dec
(bad)
and
mov
cld
push
pop
sbb
sbb
test
push
retf
std
mov
fidiv
push
cmps
inc
retf
cmp
dec
or
sub
clc
pop
lahf
fwait
xchg
cmp
mov
and
sbb
inc
dec
mov
xor
rol
add
add
test
push
icebp
test
pop
stos
out
ins
jle
xchg
pop
fs
pusha
push
mov
push
ja
xor
addr16
movs
mov
xor
stos
mov
mov
mov
fcomp
fs
(bad)
sti
xor
imul
push
(bad)
pop
cmp
aad
xchg
jle
rcr
repnz
cmps
in
repnz
push
stos
xor
loopne
and
xor
fcmovnu
rcr
xchg
inc
mov
call
iret
jecxz
inc
pop
xor
cmp
xor
jnp
sbb
push
dec
aaa
(bad)
jne
in
add
les
sbb
dec
retf
add
fs
sbb
inc
dec
shr
xor
cmps
sub
jle
mov
int
into
loop
inc
inc
jno
cmp
xor
les
imul
inc
outs
inc
mov
lock
or
mov
jb
lock
lahf
sub
test
gs
fimul
push
rcl
or
mov
mov
aam
test
out
pushf
das
pop
call
push
cdq
clc
add
movs
push
and
in
loope
adc
push
or
(bad)
and
add
jb
out
ret
fidiv
pop
jo
aad
xchg
int3
out
les
jnp
cmp
dec
jb
jb
push
aaa
mov
mov
scas
xchg
inc
dec
pop
mov
push
popf
mov
pop
retf
fld
(bad)
ret
jnp
test
sub
add
sbb
sahf
xlat
sub
xchg
mov
mov
imul
and
jle
push
jns
mov
(bad)
pushf
ss
cli
mov
inc
xchg
mov
jbe
lea
inc
arpl
mov
cli
mov
(bad)
fdivr
loop
test
or
lds
lds
out
ss
mov
xchg
xor
ins
pop
push
rcl
in
into
adc
stc
hlt
mov
and
or
idiv
adc
push
xor
lods
in
mov
or
test
rol
pop
das
nop
push
dec
push
jne
xchg
mov
call
clc
std
cmc
cmp
(bad)
cmp
out
inc
fist
lods
es
mov
stc
mov
(bad)
fnsave
lahf
cmps
inc
or
lods
(bad)
xor
in
rcr
in
cmp
xchg
popa
and
mov
sub
jae
sub
pushf
fstp
hlt
or
in
das
mov
sahf
ins
sar
mov
aaa
movs
jmp
loop
or
nop
ins
inc
sub
or
jge
fcompp
pop
add
hlt
les
push
cmps
mov
mov
mov
adc
js
mov
inc
cli
imul
(bad)
mov
and
mov
push
pop
imul
ins
fnsave
cmp
fucomi
sti
pop
(bad)
cmc
sub
xchg
add
out
sub
mov
loopne
(bad)
jl
sub
jecxz
pop
push
pop
mov
cmps
aam
es
sub
(bad)
sbb
in
(bad)
xor
mov
in
jg
jnp
jle
mov
popa
jg
xchg
retf
cld
out
mov
ins
mov
ficomp
sbb
xchg
imul
xchg
ja
repnz
(bad)
mov
shr
hlt
xchg
lahf
cwde
push
cs
popf
or
movs
mov
mov
or
inc
sbb
mov
jns
stos
sbb
fwait
and
std
dec
fcmovb
sub
cli
sbb
pop
mov
jg
ret
lahf
jo
mov
imul
pusha
and
shl
cli
push
dec
es
mov
das
xchg
mov
movs
cmps
(bad)
out
jb
arpl
ja
pop
xchg
push
or
or
push
pop
repz
mov
sub
push
jnp
idiv
or
dec
dec
call
shr
jecxz
js
sub
(bad)
ror
mov
retf
das
xchg
dec
cs
mov
aaa
fisubr
push
cmc
mov
sbb
mov
idiv
jns
push
(bad)
mov
sti
in
clc
pop
mov
mov
cmp
jb
fst
fwait
cmp
add
lea
pop
mov
and
ret
dec
cmp
lods
icebp
pop
cmp
xchg
imul
jp
sbb
jns
adc
stos
(bad)
xor
iret
mov
rcr
pop
and
imul
shl
out
sub
mov
repnz
(bad)
cmp
ret
sbb
xor
push
adc
mov
inc
sub
sub
jmp
ret
adc
xadd
shr
es
sbb
sub
repz
push
push
ficomp
jbe
test
je
xchg
(bad)
mov
(bad)
dec
push
aam
mov
jecxz
ins
daa
jo
dec
imul
sti
aaa
repz
retf
jle
(bad)
and
fwait
add
cmps
mov
add
xor
push
push
mov
fldenv
imul
ins
pushf
jle
(bad)
pop
in
push
or
mov
pop
inc
jg
dec
fidivr
mov
adc
mov
call
int3
in
stos
adc
inc
test
add
xchg
in
call
pop
mov
dec
daa
stos
push
xchg
and
sub
repnz
and
xchg
inc
jecxz
mov
or
adc
push
lea
mov
das
daa
xchg
nop
cmp
fdivr
gs
pop
in
iret
add
stos
push
inc
and
test
mov
fs
jae
mov
outs
fnstsw
mov
inc
addr16
push
mov
(bad)
jl
into
addr16
mov
cmps
fnstsw
mov
mov
jp
and
cwde
add
test
outs
xor
cmps
mov
rcr
stos
lea
sahf
push
mov
retf
nop
xor
mov
sub
ss
mov
iret
jb
inc
xor
ficom
dec
mov
ds
dec
or
jb
daa
adc
mov
add
push
imul
loope
test
out
pushw
pop
xor
mov
dec
clc
out
pop
je
mov
cmps
in
fs
sub
mov
mov
inc
or
test
add
mov
sbb
jnp
pop
dec
xor
int
xchg
inc
mov
popa
shl
jne
adc
loop
aad
mov
sti
or
pop
not
jno
imul
mov
jmp
cmp
fs
dec
fld
retf
pop
cmp
inc
mov
ins
repnz
push
push
sub
loope
addr16
fstp
jae
rcl
cmp
sti
dec
xchg
lock
nop
pop
in
popf
sub
cdq
nop
imul
or
in
xor
imul
outs
sar
in
popf
cmp
cmc
xor
push
js
ret
xchg
nop
jnp
add
cdq
push
dec
out
jle
jmp
push
test
add
(bad)
mov
push
lods
mov
sub
cmps
scas
mov
out
dec
enter
add
stos
xor
adc
ret
cmp
retf
leave
fcomp
sub
jo
outs
rcr
mov
push
mov
stc
pushf
nop
sahf
icebp
in
mov
fnstcw
inc
push
mov
repnz
mov
arpl
je
mov
das
jb
shl
ret
repz
add
bound
inc
add
inc
adc
scas
xor
icebp
fnstsw
xor
nop
add
xor
das
add
and
cmps
dec
cld
or
push
iret
call
jle
xchg
mov
cli
sub
mov
sub
bound
inc
idiv
cmp
or
int
dec
xor
add
pop
and
gs
into
addr16
xchg
jmp
loope
or
in
lods
data16
into
dec
xor
jae
mov
mov
xchg
fnclex
or
shl
xor
sub
bnd
and
lods
addr16
fcomi
test
ret
outs
dec
mov
shl
push
int3
lds
pop
fadd
div
pop
jge
jmp
pop
inc
cmp
and
push
pop
pop
cmp
ss
lea
push
pop
sar
shr
enter
adc
sbb
jg
ss
in
jo
stos
rcl
sbb
sbb
lea
neg
sbb
pop
add
retf
mov
push
inc
fild
push
inc
mov
jmp
cmp
outs
sub
ret
fisub
xchg
pop
shr
jnp
add
sub
mov
test
and
ja
or
mov
scas
sub
or
sbb
and
dec
pop
cmp
jp
cs
mov
sbb
repnz
mov
pop
pop
popf
jmp
fmul
xchg
aaa
dec
loopne
inc
and
lods
pop
addr16
hlt
push
jp
and
dec
in
ja
lock
mov
adc
hlt
inc
add
lahf
xchg
or
or
je
sbb
mov
pop
jbe
fldcw
push
scas
cmp
mov
jb
or
les
cwde
test
mov
scas
push
iret
mov
mov
xor
bound
sub
pop
cli
jmp
addr16
xor
adc
mov
mov
sbb
fs
loopne
xchg
cs
jmp
mov
shl
fdiv
jl
xchg
imul
out
or
lods
add
mov
outs
fimul
outs
into
dec
ret
imul
or
in
mov
cli
sub
popa
pop
and
mov
shl
js
lds
nop
mov
das
push
ins
push
arpl
dec
imul
xor
(bad)
xchg
dec
std
enter
outs
movs
cwde
jnp
jmp
fild
test
fs
outs
mov
shl
inc
test
add
push
out
dec
icebp
call
es
add
sbb
xchg
push
jbe
xor
ret
loope
sub
stos
stc
mov
or
mov
jb
test
movs
shl
mov
mov
data16
in
in
sub
gs
test
sub
mov
xchg
out
cmps
cmps
test
call
inc
xchg
pop
jae
jae
dec
push
fisub
sti
sahf
leave
inc
mov
or
cli
mov
dec
mov
adc
dec
add
lock
xor
outs
aas
fs
pusha
cmc
push
aam
lahf
cmc
mov
xchg
sub
push
push
stc
mov
xchg
loopne
cs
sbb
mov
jp
dec
mov
adc
mov
or
push
mov
inc
mov
mov
movs
jae
ret
add
or
mov
fwait
and
into
pop
pop
cmps
sub
mov
xor
push
jae
idiv
cmc
xor
mov
sbb
mov
adc
pop
sub
shl
add
neg
addr16
dec
mov
lock
mov
add
retf
push
sbb
test
jbe
aad
cmc
jl
es
mov
mov
pushf
xor
xor
pop
test
mov
or
arpl
stc
call
jo
push
jb
stos
ror
mov
cmps
pop
test
xchg
ss
stos
fdiv
pop
sbb
inc
bound
push
mov
out
mov
add
and
sar
std
hlt
pushf
sub
pop
gs
add
xor
xchg
mov
xor
mov
pop
loopne
push
lds
sub
scas
movs
cs
sub
pop
js
cmps
mov
cmps
xchg
cmp
repz
sbb
shr
cmps
out
in
retf
pop
xor
push
inc
retf
mov
loope
sbb
adc
mov
test
mov
in
les
ins
cli
dec
mov
(bad)
das
cmp
mov
jnp
cli
push
jne
push
cwde
jbe
icebp
stos
xchg
arpl
mov
es
or
inc
mov
ins
pushf
inc
int3
xchg
arpl
dec
lock
leave
lock
jl
bound
adc
ds
dec
jbe
pop
fwait
xor
jbe
dec
sbb
push
mov
(bad)
mov
pop
mov
dec
add
push
shl
jle
mov
mov
js
int
pop
jl
sub
push
(bad)
stos
adc
inc
add
or
pop
add
fldenv
dec
jg
inc
popa
sub
lock
call
adc
or
lods
add
scas
jno
rcl
aad
jle
icebp
sbb
or
mov
mov
sti
mov
mov
sahf
test
sbb
push
sar
pop
xchg
subps
xchg
and
add
cmp
and
xchg
and
jp
or
jns
sbb
(bad)
shl
invd
adc
mov
out
jl
push
lds
addr16
hlt
loop
stos
mov
in
xchg
pusha
arpl
push
and
xor
mov
repz
and
iret
pop
aas
jo
xor
add
jae
mul
push
aad
xchg
xchg
mov
movd
dec
hlt
out
adc
cmp
int3
add
fistp
jae
pop
ret
retf
mov
push
dec
ret
mov
sbb
sub
inc
push
cmp
mov
add
sub
mov
(bad)
jp
shl
int
push
xlat
int
inc
iret
jne
pop
dec
sti
pop
retf
push
clc
test
popf
rol
lahf
out
adc
outs
aam
push
sbb
call
movs
ins
neg
aam
mov
adc
in
push
jno
gs
pop
outs
inc
cli
xlat
sbb
int3
and
jb
add
sbb
mov
das
icebp
jecxz
adc
(bad)
daa
inc
jb
sti
pop
out
mov
sbb
dec
jbe
push
shl
popf
jmp
call
push
adc
stos
imul
not
pop
(bad)
in
pop
aaa
xor
jno
mov
scas
mov
sub
dec
out
and
xor
mov
jmp
nop
jnp
mov
out
addr16
xchg
js
jne
fild
add
cmc
jmp
or
and
inc
int
mov
or
cmps
(bad)
mov
and
mov
mov
jo
lods
imul
pop
int3
imul
mov
cwde
jo
sub
rcl
mov
xor
mov
pop
(bad)
add
inc
mov
cli
icebp
fldcw
loope
movs
adc
inc
mov
aaa
int3
stos
inc
mov
test
test
mov
call
lahf
mov
or
dec
popf
iret
imul
or
jae
mov
sbb
mov
out
add
add
clc
inc
xchg
ror
sbb
xor
jne
mov
dec
mov
jl
and
xor
mov
xor
sbb
out
sti
push
mov
fiadd
pop
and
xchg
fild
in
mov
dec
repnz
push
in
lods
inc
pop
inc
shr
repnz
adc
test
vpaddsb
outs
sbb
and
bound
jne
push
test
nop
cs
mov
dec
mov
mov
aam
xor
call
push
and
dec
push
xchg
fadd
and
test
fistp
inc
push
call
sub
jae
mov
loop
adc
test
inc
cmp
xchg
mov
push
xchg
mov
push
push
add
cmps
add
mov
mov
xor
shr
fdivr
in
xor
into
pop
fcom
cli
pop
pop
or
mov
popa
xchg
loop
adc
in
pop
(bad)
adc
sub
mov
repz
push
pop
div
out
jb
mov
xchg
cmp
pop
mov
push
fcmove
movs
mov
dec
ret
je
and
xchg
push
sub
inc
fs
mov
pop
mov
jne
std
popa
push
xor
xchg
jne
sahf
xchg
fmul
mov
or
cmp
fs
div
and
movs
jge
pop
loop
jbe
xchg
adc
jl
sub
movs
lock
call
sbb
mov
fsubr
mov
dec
(bad)
out
or
std
test
push
and
ret
cmp
adc
or
ins
push
sub
shl
aas
xor
push
or
lahf
int3
ss
gs
inc
(bad)
pop
pusha
pop
sbb
out
fbstp
fcom
jg
push
ud1
pop
cmp
retf
lods
pop
pop
pop
adc
rcr
xchg
adc
inc
xor
xchg
nop
out
movs
daa
inc
call
enter
adc
lds
cmp
ret
jge
xor
or
inc
or
xchg
or
scas
ss
mov
mov
xor
test
out
pop
xor
mov
in
stos
cmp
push
inc
or
mov
sbb
sar
cmp
bt
push
nop
js
sub
lahf
mov
clc
aam
hlt
sub
xchg
inc
pop
jns
mov
jmp
(bad)
cmp
jbe
ins
pop
call
xor
(bad)
cmp
fdiv
ds
mov
in
shl
test
mov
sub
ss
mov
in
lds
push
int3
ins
call
xchg
pop
cmp
ss
das
xchg
mov
(bad)
arpl
adc
mov
out
lea
fcomp
repz
sub
inc
jne
dec
test
bnd
repz
scas
into
mov
test
jmp
push
jne
or
mov
out
cs
into
aad
xor
out
jns
and
icebp
mov
inc
xchg
movs
cmp
int
aam
icebp
popf
sbb
mov
cmp
sub
push
jnp
ret
aam
cmps
pop
out
fs
cli
or
in
sbb
aas
xchg
(bad)
into
loop
sub
pop
ret
sbb
sti
adc
mov
jne
mov
xchg
sbb
aaa
push
retf
xor
test
retf
mov
pusha
scas
fimul
sbb
add
ffree
int3
sbb
mov
mov
cmp
pusha
mov
fadd
xchg
sti
inc
retf
fild
xor
push
(bad)
not
jl
inc
leave
and
add
stos
gs
pushf
jmp
xchg
and
xchg
xor
ja
dec
lods
dec
mov
retf
mov
lahf
sbb
test
dec
sbb
das
and
add
out
dec
movs
xchg
ja
or
fimul
pop
sub
mov
sbb
je
pop
adc
scas
mov
mov
jno
add
xchg
jg
icebp
les
push
adc
xor
or
pop
or
inc
cmp
jecxz
outs
pop
test
ret
inc
sub
aaa
es
neg
dec
stc
sbb
add
imul
xchg
test
mov
or
into
xchg
ffree
fwait
mov
adc
sub
fild
in
push
mov
or
xchg
adc
lds
shl
hlt
aad
test
jle
adc
mov
shl
xor
fdivr
loope
mov
or
add
mov
sbb
cmps
adc
ret
mov
nop
xchg
jmp
callw
ja
int
fadd
hlt
xchg
push
mov
test
scas
daa
loop
push
mov
mov
out
lock
sar
arpl
add
adc
inc
mov
fistp
mov
ficomp
mov
daa
xchg
jnp
stos
je
lods
jge
ror
mov
scas
pop
jmp
sub
(bad)
cdq
jnp
dec
xor
sbb
pop
push
fist
push
xlat
mov
aad
sbb
movs
push
ret
scas
sti
sub
jb
popa
stc
retf
mov
cmc
mov
push
mov
(bad)
dec
lods
inc
cmp
int3
lds
add
adc
adc
shl
sub
inc
inc
test
pop
popf
xor
ficom
sbb
and
cmp
jne
dec
jae
popa
lods
imul
pop
std
jmp
xchg
int3
retf
sub
push
enter
inc
sbb
scas
in
sub
push
add
mov
dec
imul
mov
enter
test
les
gs
fisub
xchg
hlt
fbld
fwait
outs
xor
mov
mov
fisub
push
fldenv
adc
ds
in
mov
call
and
inc
cs
je
push
xlat
inc
out
popa
stos
mov
stos
mov
inc
aam
pop
adc
out
out
or
out
pop
enter
test
and
mov
xchg
jle
xor
cdq
std
mov
icebp
push
loope
test
out
pop
xchg
pop
cmp
mov
popa
test
and
inc
pop
jae
mov
adc
(bad)
out
js
push
inc
push
call
and
movs
into
mov
ins
mov
adc
stos
or
sbb
loope
adc
movs
sbb
daa
lahf
sbb
(bad)
out
push
xor
faddp
gs
outs
addr16
loop
dec
test
mov
in
jae
adc
push
dec
and
sbb
daa
pop
dec
sub
pop
loope
int
jo
sub
test
retf
jnp
adc
adc
mov
dec
mov
cmp
mov
sbb
jg
aam
jecxz
ins
adc
stos
and
or
cmp
inc
mov
sbb
into
data16
mov
xor
add
sahf
mov
mov
addr16
cmp
dec
cs
xchg
inc
jne
xor
pop
push
in
lods
cli
sub
sbb
mov
imul
(bad)
scas
pop
push
pop
in
test
loopne
dec
imul
cmp
xchg
daa
sti
pop
mov
outs
and
mov
stc
fistp
call
cmp
clc
(bad)
adc
mov
ss
sbb
sbb
idiv
lods
lds
(bad)
jmp
lods
cmc
lds
jo
xor
repnz
or
fld
idiv
movs
xchg
das
push
aam
push
inc
sbb
xchg
call
jno
jo
add
out
cwde
popf
data16
icebp
xlat
cmc
mov
(bad)
jle
into
sub
jbe
mov
neg
fisubr
jmp
cmp
popf
dec
mov
mov
jae
jg
cmp
je
int3
mov
(bad)
fwait
test
retf
stos
psubsw
cmps
pop
daa
inc
iret
adc
vpmulhuw
mov
(bad)
xlat
aad
cmp
dec
(bad)
push
aad
pop
aam
test
mov
push
mov
outs
push
test
xchg
and
xchg
adc
fdivr
loopne
mov
fcmovbe
push
push
mov
xchg
(bad)
xchg
add
test
inc
adc
gs
cmps
xchg
fmul
rcr
sahf
je
(bad)
xor
push
mov
arpl
cld
(bad)
aas
xor
call
jecxz
mov
mov
mov
mov
push
pop
xor
aas
pop
repz
add
dec
out
fistp
or
mov
cmp
mov
pop
pusha
not
ds
aad
push
cmp
xchg
pop
push
inc
inc
xchg
test
test
popf
imul
or
pop
(bad)
test
mov
stos
jae
imul
xor
fisub
test
aam
push
les
mov
int3
ss
inc
lahf
sti
or
mov
mov
mov
movs
dec
push
sbb
sar
mov
aam
iret
sub
pop
xor
into
mov
xlat
mov
jmp
cmp
pusha
mov
mov
push
xor
(bad)
ss
repnz
add
jb
pop
push
in
mov
xchg
xchg
xchg
inc
(bad)
rol
mov
aas
ja
pop
lods
iret
push
add
push
ss
add
xor
sbb
xor
mov
sub
cmp
xchg
movs
ret
out
in
pop
test
call
jmp
pop
push
ror
inc
xchg
in
jle
jge
icebp
es
mov
sbb
je
gs
loop
dec
ret
push
mov
sub
cmps
sahf
mov
pop
add
adc
mov
xor
pop
iret
cli
fcmovnu
mov
mov
icebp
cld
dec
add
jno
inc
in
aas
lds
and
sbb
pop
outs
fwait
stos
mov
and
push
sub
and
stc
sbb
movs
lods
aad
inc
push
push
iret
shl
and
hlt
jmp
xor
ds
lahf
jne
cmp
imul
out
fild
daa
(bad)
loope
sub
stc
(bad)
outs
es
shr
dec
push
add
out
fcomp
std
xchg
adc
jmp
dec
mov
dec
sub
in
test
repz
stc
mov
mov
xchg
arpl
push
mov
mov
sbb
xchg
jmp
rdtsc
mov
rol
mov
rcr
aad
xor
mov
xchg
jge
adc
xchg
(bad)
jge
ror
pop
xchg
mov
add
cmp
ja
clc
mov
mov
push
cmps
jecxz
cmp
je
lds
in
jbe
jns
xchg
bound
or
stos
dec
inc
ror
mov
mov
push
mov
(bad)
lea
mov
sti
push
(bad)
(bad)
stc
jb
sti
add
inc
mov
cmp
test
daa
bnd
sub
dec
fsubr
push
xor
pop
js
xor
mov
sahf
fiadd
fcomp
sub
cmp
inc
jl
pop
cmp
(bad)
cmp
jl
sub
or
dec
add
dec
xlat
cmc
cmp
adc
cwde
push
push
pop
js
(bad)
fdiv
clc
ins
or
push
ficomp
loope
retf
pop
mov
inc
xor
ret
cli
cmp
mov
pop
xor
push
pop
sub
mov
fcmovnb
xor
or
movs
jae
jl
cdq
xor
mov
fcom
out
jg
add
imul
push
shl
sbb
idiv
gs
je
pop
mov
inc
jns
test
cmps
loopne
imul
push
pop
and
push
pop
into
aad
push
mov
lods
lods
dec
mov
inc
xor
pop
adc
jno
lahf
int3
sti
jl
out
jb
int
fcom
sbb
cmp
jecxz
add
das
push
into
popf
cli
out
test
idiv
add
inc
stc
cmps
push
aaa
sub
mov
in
dec
xor
popf
cmps
ret
outs
repnz
mov
push
retf
bound
mov
sbb
dec
psraw
mov
out
mov
aas
fwait
inc
adc
and
ror
adc
les
add
arpl
(bad)
xor
mov
sbb
inc
fwait
adc
nop
pop
popf
mov
adc
jno
fisub
repz
mov
xor
lods
not
push
popf
mov
and
or
adc
fisubr
push
xchg
(bad)
sbb
cmp
xchg
or
adc
out
pop
fimul
push
cdq
mov
sub
lock
mov
or
mov
xlat
adc
aas
mov
sar
popa
pop
imul
dec
lods
pop
pop
in
adc
mov
cli
push
pushf
cdq
pop
test
fyl2xp1
sub
out
cpuid
cdq
inc
aaa
cmc
push
sar
out
sar
out
cmp
data16
and
adc
or
dec
imul
xor
lods
(bad)
(bad)
and
out
mov
push
xchg
enter
mov
dec
stos
(bad)
pop
dec
xchg
jnp
add
mov
lods
test
inc
call
cs
jge
cs
shr
mov
fsubr
sahf
scas
stc
ins
not
test
mov
les
dec
mov
ins
(bad)
loopne
int
popf
sub
std
aam
call
adc
mov
lods
push
int
in
in
shr
push
push
ja
pop
ret
loop
ds
loop
push
fbld
xlat
clc
les
and
dec
jp
inc
xchg
push
ret
in
add
jno
cmp
in
push
(bad)
push
test
daa
out
retf
call
adc
xchg
adc
ds
popa
or
pop
(bad)
mov
cs
fld
dec
jl
stos
sbb
jns
cmps
sbb
mov
aas
dec
mov
cmp
adc
jno
jge
mov
cs
out
shl
sub
jmp
lock
sbb
retf
daa
outs
add
cmp
(bad)
scas
mov
inc
xchg
bound
adc
(bad)
push
enter
jns
push
mov
and
mov
cli
adc
mov
test
push
push
retf
sbb
jmp
push
mov
dec
fisttp
lahf
aad
adc
ret
sub
rcr
shl
fstp
lods
loop
and
test
test
popa
mov
dec
jne
or
sub
pop
mov
lds
add
inc
mov
in
nop
loopne
sbb
mov
jns
and
shr
cmp
and
add
xchg
mov
push
call
cmp
mov
shl
xor
dec
or
xchg
(bad)
repnz
cs
add
stc
out
mov
sub
dec
mov
fcomp
mov
test
push
out
jmp
push
fwait
mov
sbb
stos
jne
jns
data16
lods
xchg
pop
clc
std
and
test
sbb
pop
inc
ds
setp
mov
(bad)
cmc
inc
in
add
xchg
rol
add
fwait
inc
adc
xchg
(bad)
jns
inc
pop
adc
and
in
sub
pop
pushf
iret
xor
cmc
je
inc
sbb
iret
cdq
and
or
sub
xor
or
retf
mov
ret
(bad)
pop
adc
(bad)
xor
and
sub
imul
ins
lods
loopne
in
mov
pop
int3
xchg
dec
fdivr
pushf
movs
adc
pop
fxam
sub
out
movs
lock
jge
lods
int3
dec
pusha
push
cmps
fldenv
inc
fidivr
xor
test
inc
dec
inc
stos
add
xchg
scas
jnp
add
call
icebp
fmul
mov
push
pop
xor
xchg
out
jecxz
pusha
in
mov
(bad)
(bad)
mov
lock
cmp
or
sub
test
out
int3
sbb
sub
out
pop
(bad)
retf
and
xchg
movs
or
iret
push
clc
mov
pause
clc
loopne
into
xchg
push
jns
mov
mov
fcomip
xor
lock
loope
popa
xchg
cmp
push
fcmovnb
add
out
and
dec
and
cmps
fs
jmp
fimul
lods
(bad)
leave
inc
test
das
out
movs
mov
pop
mov
mov
xchg
lahf
sbb
or
add
lock
push
xor
cmp
push
es
push
outs
mov
out
jp
jae
int3
xchg
gs
aam
mov
jp
and
sub
or
cmp
icebp
xchg
mov
nop
push
dec
and
imul
jmp
push
cmc
loop
leave
jno
push
xchg
clc
stos
jecxz
jne
popf
scas
and
cs
popa
fcomp
jnp
sub
dec
pop
aam
fstp
mov
int3
ret
and
pop
icebp
cld
xchg
add
adc
cmp
push
mov
adc
dec
cmp
call
lods
test
cmp
sbb
repz
pop
adc
test
mov
es
mov
aaa
dec
inc
jg
std
scas
nop
outs
(bad)
out
stos
mov
fcmovnb
mov
hlt
mov
leave
aam
and
repnz
mov
scas
int3
cli
addr16
stos
pop
and
(bad)
aas
add
or
ds
int
test
mov
das
or
jmp
jno
and
xor
jns
adc
sub
ins
add
ss
jg
jle
mov
ror
jb
xlat
test
data16
sbb
fiadd
ret
fild
cmp
add
xor
sar
or
mov
add
cmp
push
bound
jno
dec
mov
ret
das
into
inc
or
iret
popa
pop
xchg
mov
add
bound
dec
push
jge
push
xchg
das
adc
jne
inc
jmp
push
push
or
cwde
enter
fild
leave
stos
push
xor
mov
out
inc
xchg
and
inc
cmc
adc
adc
push
and
pop
mov
jl
out
(bad)
fstp
repnz
sbb
outs
popf
dec
iret
sbb
das
js
pop
retf
cmp
xlat
jno
sbb
je
lods
aaa
xchg
out
mov
dec
adc
ret
mov
out
in
pop
sub
xchg
pop
(bad)
test
mov
xor
sub
add
mov
inc
out
jae
cli
hlt
addr16
xor
adc
shl
fs
out
push
(bad)
mov
lods
movs
frstor
dec
sbb
(bad)
stos
jns
js
pop
enter
or
ins
mov
mov
cmp
xchg
shr
inc
ds
cmp
mov
xchg
jmp
add
dec
inc
repz
scas
imul
add
adc
jae
test
mov
xchg
sbb
lods
rol
mov
test
adc
adc
std
mov
cmp
outs
out
mov
dec
xor
xor
xor
xchg
xor
retf
sbb
jge
fsubr
fsub
fadd
pop
sub
and
das
dec
mov
loop
dec
ins
and
sbb
sub
jg
push
movs
mov
jbe
mov
loopne
clc
ror
pushf
xchg
jmp
and
push
push
dec
pushf
mov
and
ja
jbe
(bad)
aam
ret
adc
cdq
and
je
pop
pop
je
stos
xchg
sar
push
mov
mov
arpl
and
mov
jp
(bad)
fadd
sub
sbb
lods
ja
mov
mov
xchg
push
mov
sbb
in
stos
pop
clc
dec
mov
push
jns
push
jo
or
lea
push
or
shr
ja
push
cmps
jge
mov
loope
push
cmp
and
ss
xor
addr16
lds
daa
sub
or
mov
iret
sbb
cmp
das
sub
outs
and
cmp
xchg
xchg
sar
cmp
sahf
call
push
in
push
cmp
adc
sub
cmp
rcl
mov
lock
add
jnp
xor
xchg
ds
fdivrp
pop
push
push
jecxz
ins
push
mov
mov
mov
adc
add
inc
or
jmp
jnp
adc
es
and
test
mov
sbb
sti
sahf
loopne
loopne
into
xchg
(bad)
loopne
out
stc
mov
push
loope
cld
(bad)
sahf
dec
pop
das
bnd
jo
pop
adc
inc
movs
cmp
cmp
dec
popf
dec
nop
mov
imul
jmp
shl
imul
add
test
fisttp
aad
into
sbb
js
call
mov
jl
sub
clc
jge
push
test
in
pop
sub
dec
lock
xor
cmp
pop
jnp
in
or
pop
jne
adc
push
push
sbb
(bad)
sbb
(bad)
cmp
aad
jl
jl
xor
inc
push
and
rol
cmp
dec
fucomp
sub
xchg
mov
jae
mov
pop
mov
ja
or
pop
or
in
callw
cmp
mov
mov
mov
mov
ins
rcl
out
dec
mov
or
arpl
shl
xchg
inc
jecxz
or
sbb
addr16
dec
add
jns
movs
xchg
adc
movs
shr
jecxz
les
test
and
sub
shl
aaa
sub
gs
repnz
fimul
mov
jno
xchg
call
push
outs
ds
les
jmp
jbe
inc
daa
cmp
ret
(bad)
test
or
int3
sbb
adc
aas
hlt
dec
clc
out
nop
xlat
dec
mov
cmp
and
stos
or
xor
lods
movs
in
int3
dec
je
mov
movs
dec
push
cmp
jb
ja
and
adc
adc
js
lahf
pop
inc
xchg
jmp
lds
scas
ins
xor
pop
push
sti
mov
lock
or
popa
rcr
fimul
aad
sbb
xor
jle
xchg
push
scas
fcmovu
lds
inc
inc
jno
inc
dec
adc
aam
push
and
or
test
xlat
int
jno
push
jbe
mov
xor
dec
cmp
push
and
pop
sbb
aam
adc
mov
retf
dec
push
pop
adc
ins
xor
mov
and
ja
movs
fidivr
inc
inc
xor
sub
mov
sub
xchg
adc
mov
and
sub
hlt
(bad)
pop
inc
out
fsubr
cmp
add
mov
jmp
sub
inc
adc
and
out
loopne
aad
lock
fistp
out
std
ror
add
mov
(bad)
out
scas
push
mov
leave
dec
std
xchg
mov
ffreep
or
mov
leave
jne
hlt
sub
adc
fist
push
retf
scas
aam
and
mov
inc
mov
adc
jnp
in
pushf
test
dec
or
leave
add
popa
pop
cmp
or
not
pop
movs
sub
sbb
mov
jno
lea
sub
loop
pop
pop
cdq
jge
sbb
push
cs
popa
imul
scas
mov
xor
ret
xor
sub
push
(bad)
loope
inc
dec
int3
fcomp
xchg
clc
fwait
jg
inc
dec
sub
scas
test
je
mov
je
xchg
and
(bad)
xlat
dec
xchg
adc
pop
ds
mov
pop
mov
push
inc
inc
adc
xchg
mov
xchg
sbb
or
xchg
xor
adc
or
cmp
sub
fisubr
call
dec
in
sub
push
les
std
bound
pop
dec
adc
rcl
nop
aas
js
xchg
adc
sbb
fiadd
iret
pop
rep
sti
movs
mov
mov
(bad)
stc
mov
fucomi
add
add
aad
fsubr
xchg
inc
push
fisub
daa
or
push
frstor
xor
mov
into
push
fstp
retf
or
or
sti
jl
add
idiv
jbe
fnstsw
add
cld
aad
fdivr
or
or
lahf
sahf
mov
ins
imul
shl
retf
push
push
xor
lods
movs
mov
inc
pop
test
push
mov
lea
add
in
data16
neg
pop
or
retf
je
rcl
into
pop
pop
fadd
and
adc
add
fcom
(bad)
pop
dec
inc
lods
rcl
or
push
cdq
xor
mov
cwde
rol
xchg
push
xchg
mov
ins
aad
sbb
bswap
cmps
pop
arpl
stos
pop
mov
out
or
lock
xor
or
mov
cmp
or
out
cmp
out
(bad)
jmp
adc
pop
sahf
jecxz
or
clc
xor
adc
fwait
movs
dec
inc
test
mov
or
and
and
cld
fwait
jge
sbb
fsub
fstp
add
and
jae
cmps
pop
mov
and
adc
and
adc
mov
ja
jp
sub
mov
sbb
imul
add
inc
add
sti
push
bound
loop
loope
movs
mov
mov
adc
cmp
movs
jns
mov
shr
xor
cmps
lock
xchg
jmp
cli
and
fcmovnu
pop
cwde
add
push
mov
and
push
aaa
add
in
push
popf
push
sbb
sbb
pop
fwait
jmp
cmp
lods
(bad)
adc
ins
push
mov
pop
dec
(bad)
xor
push
dec
je
outs
and
in
jbe
xchg
(bad)
sub
or
fmul
push
jbe
aas
clc
xchg
ror
inc
sbb
cmp
dec
hlt
xchg
rcl
sub
(bad)
push
aam
dec
mov
clc
push
aam
and
mov
ror
sub
sbb
sub
addr16
stc
into
lods
push
pop
lods
out
sbb
mov
fdivr
pop
inc
loope
adc
ror
pop
retf
bnd
and
and
jmp
pusha
and
cli
ins
jge
outs
out
aam
dec
in
popa
sahf
sub
xchg
sub
cmp
jge
xchg
cmp
dec
sub
xchg
jle
arpl
je
or
mov
sbb
ucomiss
mov
ss
inc
xlat
inc
mov
mov
pop
lds
pop
call
mov
inc
lds
pop
imul
mov
mov
dec
mov
in
sbb
mov
cli
jmp
ds
dec
pop
mov
push
fwait
push
xor
mov
and
pop
aas
xor
stos
and
mov
(bad)
call
js
adc
cmp
adc
int
pushf
(bad)
cmp
fbld
xchg
push
inc
sbb
mov
inc
mov
cli
in
ins
push
out
push
fiadd
sbb
mov
xchg
or
and
add
push
aad
and
fwait
into
lock
mov
bswap
cmc
push
sahf
sbb
data16
mov
js
mov
xor
icebp
mov
and
inc
push
and
mov
hlt
lods
jo
lock
aam
adc
add
jecxz
adc
push
aam
sub
(bad)
pusha
lds
xor
or
mov
loopne
dec
sbb
sbb
sbb
inc
loop
test
sub
repnz
xchg
sbb
ss
xor
test
bound
rol
mov
or
mul
push
adc
xor
jl
xchg
ret
loop
xchg
inc
dec
clc
xor
cmps
lea
ror
fstp
fcomp
dec
mov
(bad)
fld
inc
cli
std
and
xor
and
call
mov
add
jge
jns
cmp
mov
mov
cmc
cmp
imul
fistp
iret
xor
dec
iret
addr16
inc
fcmovnb
sub
adc
in
stos
adc
ror
pushf
loopne
inc
test
movs
mov
xchg
or
test
inc
pop
mov
pushf
mov
leave
sub
jb
int
jbe
ss
pop
shl
ss
and
cmp
test
cdq
dec
jnp
push
mov
adc
push
rcr
mov
sbb
(bad)
dec
mov
add
xor
push
adc
sub
jae
and
data16
stc
leave
jno
pop
int
pop
outs
sbb
sbb
ret
mov
jge
push
rcl
jns
mov
(bad)
mov
xor
add
aam
jmp
sbb
shl
rol
adc
jmp
ins
inc
nop
fild
enter
in
aam
aad
push
pop
jnp
ret
push
cmp
call
jl
mov
ss
shl
ja
call
xor
cmp
mov
out
jp
movs
pop
cmps
jmp
sbb
stos
xor
cwde
shl
push
cmp
sbb
in
out
dec
xchg
cmp
add
pop
sti
xor
add
stos
cmps
cmps
and
stc
adc
pushf
and
xchg
push
in
out
or
fcmovnbe
fld
jmp
ret
call
pop
add
sbb
cwde
imul
dec
jo
out
fwait
outs
mov
xchg
mov
in
lds
(bad)
pop
imul
xchg
inc
ins
xchg
movs
repnz
in
inc
cmc
movs
push
adc
out
xchg
jae
not
push
fisubr
dec
out
pop
mov
and
scas
adc
call
pop
out
pop
mov
dec
dec
test
mov
into
xchg
sub
movs
fdivr
add
cmp
data16
adc
push
xchg
in
xchg
jp
pop
sub
mov
adc
adc
gs
jbe
popf
cmp
jo
call
pop
addr16
push
pop
repnz
iret
mov
mov
iret
sbb
bound
es
fidiv
jb
xchg
aad
test
not
lahf
mov
in
aad
jmp
fbstp
(bad)
mov
(bad)
in
add
xchg
or
adc
jge
jl
test
mov
ins
or
inc
int
sub
push
aas
in
adc
enter
jge
push
mov
push
xor
aam
shr
jecxz
dec
mov
push
fucomip
ret
mov
xchg
dec
or
aaa
mov
test
repnz
hlt
imul
cld
inc
jne
cmps
pushf
mov
mov
arpl
push
xchg
jge
dec
add
mov
shr
mov
jecxz
enter
adc
pop
and
call
pusha
mov
es
sbb
addr16
push
popf
(bad)
or
or
or
push
es
(bad)
(bad)
jecxz
mov
mov
xchg
push
stos
js
loopne
xchg
int3
pushf
mov
outs
shl
mov
xor
sub
sub
bound
cwde
(bad)
lods
mov
lds
push
neg
add
dec
and
(bad)
and
cs
sbb
add
inc
cmps
popa
jae
cmovno
pop
push
sti
mov
(bad)
sbb
xchg
adc
mov
dec
pop
push
stos
xchg
mov
sub
gs
test
aad
jo
rol
out
mov
js
verr
jae
sahf
push
aad
inc
and
jbe
call
inc
pushf
jl
push
inc
ja
daa
jge
jnp
pop
xor
xchg
or
repnz
not
push
inc
jmp
jo
cdq
sbb
rcr
out
loope
cmp
(bad)
or
jl
xchg
loope
mov
jbe
cmc
pop
adc
mov
(bad)
mov
jnp
(bad)
xchg
cmps
inc
jl
fisubr
cmps
mov
inc
pusha
outs
call
jmp
cld
cwde
cmp
jno
mov
inc
aaa
fst
mul
retf
cwde
cmp
stos
mov
xchg
jmp
push
pop
mov
lea
jbe
repnz
fisttp
cmp
jmp
jge
arpl
sar
addr16
imul
nop
bound
jecxz
pop
sbb
sbb
or
retf
push
mov
xor
pop
push
xor
pop
ins
or
pop
arpl
jns
add
inc
push
push
xor
cs
retf
and
fcmovnbe
mov
frstor
xchg
aam
stos
lods
cmps
int
sbb
xchg
mov
ins
and
jns
clc
mov
sub
and
pop
fdivr
cmp
push
out
xchg
sub
xchg
in
mov
sar
mov
js
test
jmp
jns
xchg
daa
mov
es
jmp
cmp
jl
xor
or
loopne
jle
xor
addr16
add
inc
retf
mov
xor
(bad)
sub
pop
aam
sub
imul
outs
sub
sbb
shl
(bad)
mov
cmps
xor
cmp
fadd
push
lahf
mov
and
retf
jmp
cwde
dec
cli
fadd
inc
xchg
ja
adc
cmp
cmp
je
cmps
xor
popf
jge
movs
jl
push
cmp
fild
push
sar
cli
or
sub
ds
lock
enter
mov
std
jnp
jecxz
xchg
je
push
and
xchg
mov
pop
dec
sbb
xchg
test
xor
inc
jl
loop
push
jnp
lods
loopne
dec
sub
mov
mov
sar
dec
pop
test
cwde
pop
in
jp
xchg
mov
call
mov
mov
mov
in
out
xchg
mov
xor
inc
(bad)
call
ret
adc
cmc
hlt
cdq
xchg
sbb
fadd
jge
(bad)
repnz
(bad)
out
sbb
push
cmps
repnz
dec
and
sahf
jae
or
mov
jge
dec
add
xchg
data16
and
jne
cmp
mov
mov
jno
mov
mov
jmp
dec
cmps
mov
pusha
adc
sub
jl
mov
cli
cmp
sbb
test
aam
int
ins
mov
dec
sub
shl
cwde
jae
push
jl
sub
mov
aaa
pop
mov
imul
stos
sub
xor
test
xor
in
mov
jg
push
shl
push
jnp
int3
cdq
shr
in
pop
xor
jmp
xchg
add
stc
stos
push
sub
push
and
addr16
cmps
retf
mov
jo
xchg
sub
jae
sbb
les
lods
stos
jno
movs
mov
sbb
nop
inc
fnstcw
mov
pop
jb
(bad)
push
div
pop
push
dec
push
xor
mov
aaa
and
cdq
cwde
outs
gs
loopne
push
sbb
pop
fsubr
in
sahf
xchg
sbb
call
xchg
mov
mov
add
enter
inc
mov
test
add
rcl
pop
and
sbb
dec
in
push
sar
pop
cmps
jae
iret
pusha
push
cwde
xlat
cmp
mov
pop
mov
jmp
retf
inc
fcom
dec
sub
sub
mov
mov
inc
std
gs
and
das
fwait
adc
ins
sbb
inc
push
sbb
mov
add
lods
(bad)
sub
std
ja
mov
outs
in
sub
push
test
mov
cmp
xor
push
cmp
(bad)
in
movs
pop
push
fistp
pop
sub
lea
add
jmp
add
test
pop
test
add
fiadd
loop
iret
aaa
call
xchg
or
dec
imul
ja
push
(bad)
lock
cs
stos
(bad)
imul
dec
pop
pusha
ins
mov
and
daa
popa
cmp
cmps
or
test
push
jns
cli
xor
aaa
nop
lds
ss
pushf
pop
mov
push
jl
xchg
mul
enter
add
cdq
xlat
or
xchg
mov
xchg
cbw
sbb
ret
dec
pop
mov
jno
and
cli
mov
mov
or
div
mov
fucompp
popf
push
jne
fst
fisttp
xchg
inc
add
(bad)
icebp
and
sbb
mov
add
ins
mov
pop
sbb
xor
loope
or
mov
sbb
mov
pop
ja
push
lea
xor
adc
or
int
fdiv
mov
outs
lods
lds
cmp
inc
cmc
inc
mov
lds
enter
push
addr16
cmp
outs
out
imul
daa
inc
and
shl
ins
adc
adc
ins
into
pop
jp
xor
or
aaa
sbb
jo
out
call
inc
sub
sub
inc
stos
pop
dec
xchg
sub
aas
xor
in
mov
push
xlat
mov
sbb
mov
inc
adc
in
mov
inc
int3
jmp
jge
mov
push
daa
ins
dec
mov
lds
push
push
not
push
inc
pop
outs
test
mov
mov
mov
int3
or
and
cld
mov
je
lea
add
(bad)
jmp
adc
ins
inc
jge
mov
sbb
pop
jae
ins
cmp
cmps
call
nop
icebp
mov
mov
cmps
jb
mov
mov
mov
stc
ret
stos
xchg
dec
sbb
popf
repz
adc
fcmovnb
sbb
xor
in
push
xchg
inc
cdq
mov
mov
fsubp
xlat
out
sub
mov
sub
adc
sar
xchg
jp
xor
cbw
add
(bad)
hlt
jne
(bad)
cmp
rcr
xor
gs
adc
jne
int3
iret
fisttp
out
mov
add
or
jmp
dec
sbb
mov
dec
lods
lahf
out
sahf
scas
mov
out
scas
sbb
std
push
je
xor
xchg
and
loop
(bad)
(bad)
sbb
call
into
xchg
mov
les
cmps
shl
call
retf
cwde
frstor
pop
inc
pop
gs
movs
mov
repnz
sub
xor
pop
loopne
(bad)
lods
rcr
mov
and
sub
mov
mov
inc
mov
mov
xchg
jmp
call
push
lahf
clc
fdiv
xchg
mov
in
and
fisubr
xor
xchg
(bad)
jb
icebp
test
(bad)
cmp
adc
cmp
jnp
call
repz
cmp
fdivr
int
dec
cmc
inc
fiadd
or
dec
movs
(bad)
movs
and
(bad)
out
sbb
daa
xor
jl
push
sti
lods
out
mov
loopne
jl
pop
sub
mov
fwait
outs
or
test
jbe
mov
das
repz
cmp
dec
cmp
mov
cmps
xchg
ja
inc
movs
es
xchg
cmps
lahf
retf
js
cmp
fild
test
pop
and
sbb
in
add
adc
jb
dec
cmp
popf
xchg
mov
fwait
inc
iret
lds
loop
push
imul
std
mov
(bad)
cmp
test
add
in
sub
call
dec
add
test
jmp
out
sti
int3
push
out
call
jbe
addr16
mov
cmps
push
lock
jge
dec
call
or
sbb
pushf
neg
mov
into
mov
inc
in
dec
clc
add
out
outs
test
les
add
fs
ss
jl
fwait
inc
and
inc
lea
scas
cmp
xchg
mov
jp
or
sbb
and
mov
adc
pushf
push
mov
inc
mov
add
(bad)
cmp
xor
push
fisttp
(bad)
sbb
mov
les
lds
jbe
ins
imul
aam
stc
enter
mov
stc
mov
stos
xchg
aas
ret
add
mov
shl
shr
xor
les
shl
pop
and
add
retf
lds
mov
pop
out
sbb
lea
mov
xor
movs
bound
ficom
pop
lock
mov
xor
mov
jmp
idiv
daa
mov
xchg
add
movlhps
mov
pushf
and
(bad)
pop
pop
test
enter
adc
test
mov
cld
sbb
test
cmp
stc
mov
push
or
xor
cmp
inc
mov
ror
ret
xchg
add
pop
into
inc
mov
dec
lock
out
or
mov
pusha
xlat
inc
imul
push
xor
sub
or
jle
popa
dec
cmc
push
jb
lahf
mov
fwait
ret
push
mov
(bad)
hlt
cmp
stos
jmp
outs
fisttp
add
sbb
dec
in
jbe
into
mov
push
xchg
ins
or
cmp
fnsave
or
add
aam
lods
sti
cwde
repz
cmp
adc
cmp
inc
and
(bad)
repz
or
add
sbb
inc
test
ror
cwde
and
mov
cmp
lock
adc
cdq
lock
movs
jns
xor
(bad)
fmul
scas
cli
push
push
stc
es
cmp
dec
pop
pop
and
into
mov
xchg
lock
sbb
scas
and
test
(bad)
push
ficom
mov
pop
(bad)
shr
aaa
jmp
cdq
imul
xor
sahf
mov
popaw
jb
stos
aad
sahf
sub
gs
sahf
popa
out
inc
cwde
inc
inc
adc
lock
mov
hlt
fsubr
jmp
inc
sub
(bad)
jae
xchg
push
cmp
sbb
scas
mov
pop
mov
push
aad
mov
jecxz
mov
push
mov
xor
arpl
repnz
int3
mov
adc
mov
dec
fs
hlt
xor
sbb
mov
cmp
jns
outs
push
fs
dec
pop
test
and
mov
loope
dec
mov
idiv
xchg
xchg
clc
sbb
loope
loope
cmp
pushf
(bad)
ins
push
pextrw
hlt
push
hlt
and
mul
repz
imul
movs
mov
pop
add
add
mov
jg
mov
push
jne
push
clc
pop
push
es
and
movs
std
iret
(bad)
sbb
jb
xchg
imul
stc
jge
sub
pop
inc
sahf
xor
mov
retf
xor
sar
loop
xchg
mov
movaps
and
adc
call
adc
push
sub
dec
popa
jae
inc
jmp
fnstsw
adc
fnsave
mov
scas
inc
mov
push
and
(bad)
les
sub
xor
xlat
mov
cmps
cld
push
nop
and
loopne
jmp
add
in
xor
mov
cli
and
cmp
adc
cs
movs
mov
fsubr
push
sub
gs
movs
pop
test
add
dec
jmp
test
sub
or
dec
ss
cmc
mov
mov
shl
mov
shl
push
xchg
pop
mov
sub
mov
pushf
nop
xlat
fwait
(bad)
push
stc
scas
repz
sti
inc
xor
adc
adc
lock
push
add
mov
ins
das
xor
inc
jge
mov
sbb
and
push
jp
cld
icebp
addr16
movs
imul
fst
call
push
jg
mov
ss
call
inc
fcomp
scas
aam
adc
dec
pusha
adc
test
xchg
mov
add
test
in
add
cmp
fsubr
(bad)
or
stos
jl
push
inc
stos
inc
rcr
fadd
pop
fidivr
movs
xchg
jecxz
leave
retf
in
iret
fwait
out
inc
dec
sti
icebp
rcr
sub
pop
in
std
sbb
sbb
push
(bad)
pop
mov
add
(bad)
jne
add
inc
mov
repnz
jns
mov
loope
push
sub
dec
out
sbb
or
mov
push
ins
xchg
repnz
cwde
and
cmp
add
sbb
and
mov
icebp
jg
xor
jp
cmp
push
add
push
aad
cmp
cmc
repz
dec
movs
mov
inc
ret
push
movs
shr
xor
pop
and
cwde
or
mov
mov
jmp
pop
into
adc
mov
shr
mov
jp
pop
pop
pop
or
addr16
(bad)
fs
pop
test
repz
sub
add
xor
inc
or
aas
mov
call
push
push
pop
sub
adc
pop
xchg
call
cmp
(bad)
mov
cli
fs
pop
dec
test
push
inc
sbb
mov
je
mov
stos
pushf
mov
cli
je
sub
fisttp
hlt
stos
mov
pop
dec
lock
mov
xchg
or
adc
xor
sub
xchg
jg
js
dec
or
into
push
dec
cmp
loop
xchg
rsqrtps
mov
cs
xchg
daa
mov
pushf
sub
fidivr
ds
xor
push
sub
lds
adc
inc
mov
pop
dec
mov
sub
std
out
pop
sahf
mov
sub
mov
push
push
jbe
fist
cmp
rol
jg
popf
nop
into
jb
loope
mov
lahf
data16
aaa
mov
sub
aas
(bad)
xchg
sub
push
arpl
mov
mov
lods
mov
pop
dec
push
mov
das
sub
or
mov
cmp
fdivp
popa
outs
add
lea
or
sbb
in
hlt
mov
fld
mov
retf
in
dec
xlat
cmp
popf
adc
or
into
jecxz
lea
cmp
mov
fiadd
sbb
push
out
sub
sub
mov
cmps
dec
mov
repnz
(bad)
loope
jecxz
ja
push
popf
movs
xchg
popf
mov
retf
sbb
repnz
data16
data16
out
(bad)
fcmovu
movs
pop
jecxz
frstor
nop
inc
sub
inc
call
scas
ja
adc
cmp
leave
pop
or
jg
out
cmp
inc
inc
push
adc
pop
cmovge
xchg
aam
adc
push
push
les
mov
xchg
jecxz
fistp
sti
in
sahf
cmp
int
inc
arpl
cmc
add
and
hlt
sub
shr
lahf
(bad)
jp
dec
cmp
inc
mov
dec
dec
push
stos
enter
mov
sub
adc
sub
pop
aas
sub
mov
mov
stos
fnstenv
pop
dec
dec
dec
aas
cmps
fwait
cdq
fwait
push
mov
sbb
xlat
sbb
outs
or
cmc
push
pop
ss
inc
or
retf
adc
ss
adc
or
daa
or
and
cmp
popf
inc
mov
call
mov
mov
lahf
movs
sbb
or
or
fadd
gs
mov
popa
ds
or
test
xchg
sub
jle
mov
jge
fs
ja
pop
jle
stc
(bad)
cmp
test
stos
cmps
xor
int
shl
push
mov
imul
push
inc
xor
mov
rcl
sbb
sub
dec
fsubr
lock
mov
push
out
leave
int3
push
fidivr
ss
lods
sub
xor
retf
push
ret
cs
loopne
mov
sbb
jno
sub
sub
mov
outs
add
call
jmp
iret
repz
icebp
fistp
sub
(bad)
stc
call
adc
lods
data16
mov
daa
out
fdivr
cli
cmc
dec
leave
cmp
xor
jo
shr
cmp
sub
jbe
xchg
inc
test
cli
cmps
adc
jge
mov
or
shl
jl
in
cdq
xor
inc
mov
lods
test
push
(bad)
rcr
push
or
add
das
xchg
fcom
mov
aam
loopne
pushf
jg
xchg
(bad)
jmp
xchg
or
sbb
mov
push
push
pop
jle
inc
ins
fsubr
lods
adc
or
xor
cmc
rcr
push
xchg
and
jl
out
jl
stos
sub
sub
push
sbb
adc
inc
(bad)
into
stos
sahf
inc
sbb
mov
or
push
mov
fimul
push
jl
imul
mov
xchg
nop
or
(bad)
pop
scas
sbb
cmp
test
push
cmp
dec
push
sti
cmp
ds
loope
ss
push
pop
jg
pop
fnstenv
adc
aad
daa
nop
sahf
aad
call
xor
sub
lds
cmp
cmp
xor
inc
sub
popa
clc
or
mov
pop
jbe
mov
jmp
pop
scas
or
add
push
fild
hlt
dec
not
xor
or
fchs
shl
je
dec
dec
add
pop
lea
inc
xor
sub
xchg
mov
dec
push
mov
leave
sbb
iret
cmp
xchg
ds
gs
movs
out
sti
push
das
out
in
(bad)
pop
add
inc
xchg
adc
cmps
dec
ror
pop
popf
push
fild
std
loopne
cs
dec
adc
fcmovnb
clc
in
lahf
xlat
(bad)
jmp
retf
add
stos
sbb
test
jge
data16
dec
ret
test
cmp
mov
ss
mov
ja
rcr
push
in
add
mov
test
mov
jae
pop
out
push
frstor
xchg
ja
jns
sbb
add
mov
repz
das
adc
data16
ss
(bad)
bnd
dec
and
repz
mov
fld
add
push
mov
popf
xor
push
push
mov
ja
jnp
xchg
cmp
fsubr
iret
mov
dec
mov
sbb
add
test
cs
and
adc
add
into
xchg
inc
pushf
jecxz
inc
test
fisubr
ret
xlat
call
dec
mov
out
sbb
sahf
sti
data16
mov
out
je
daa
pop
xor
cmp
mov
add
cmp
push
aaa
mov
lods
iret
imul
ja
outs
mov
jnp
mov
jmp
jp
pop
jmp
jno
sub
cmp
add
add
xchg
ss
xor
in
(bad)
fsin
xchg
mov
jmp
jbe
aam
icebp
pop
rcr
jne
imul
stos
jecxz
dec
fist
push
icebp
pop
sub
cmp
push
adc
imul
push
dec
sub
jp
cdq
mov
iret
icebp
dec
mov
bndldx
mov
je
pop
in
pop
push
sti
repz
dec
hlt
push
push
or
scas
out
cdq
jne
cmps
(bad)
jo
shr
or
push
pop
hlt
xchg
shl
inc
pop
imul
push
fs
mov
jge
repz
jo
repz
xchg
fistp
retf
loopne
mov
sti
imul
loop
push
jle
aas
xor
fs
stos
lea
xchg
ror
retf
jo
(bad)
mov
shl
jnp
push
sti
push
dec
cwde
jmp
rcl
dec
mov
int
outs
mov
leave
push
scas
cmp
mov
sub
enter
ret
mov
ins
and
dec
repz
in
loope
ret
push
xchg
cmp
add
push
cmp
call
push
movs
iret
outs
and
mov
adc
in
jbe
out
jl
in
fdivr
mov
aad
ins
or
jmp
mov
aaa
jnp
cld
test
sub
(bad)
jmp
in
xchg
xchg
fcmovne
mov
mov
pop
cwde
jnp
das
iret
fisttp
in
mov
adc
xchg
bound
cmp
iret
(bad)
pushf
push
push
fbstp
adc
xchg
and
cld
fprem
mov
(bad)
fcomp
aam
cmp
sbb
clc
xchg
dec
jns
or
sub
sar
pop
add
test
mov
movs
and
mov
sub
jecxz
out
pop
mov
shl
jae
lods
sbb
ins
mov
mov
retf
cmp
mov
or
lahf
in
cmc
mov
cmp
jge
jns
xor
push
movs
cmp
scas
ja
xchg
pop
push
dec
push
enter
or
mov
lea
xchg
mov
add
push
loope
cmps
jp
xchg
and
and
xor
std
aaa
xchg
cmp
and
bound
rcr
sub
or
mov
mov
shr
push
push
dec
ins
aas
ins
add
mov
lods
or
movs
jge
inc
xchg
push
leave
jo
lds
dec
cmps
jmp
ds
das
dec
pop
mov
rcr
pop
pop
pop
jecxz
cmp
imul
sub
adc
xor
mov
movs
out
pop
aam
outs
jae
ror
std
dec
fldenv
pop
popa
retf
dec
push
arpl
(bad)
lea
pop
dec
sbb
jbe
mov
push
inc
lods
int
std
(bad)
es
rcr
in
or
mov
jmp
mov
aas
jno
and
cmp
dec
rol
or
add
or
push
out
ds
jbe
sbb
push
push
push
mov
enter
std
ss
cmp
or
leave
or
lahf
push
jne
scas
pop
je
push
in
call
int3
mov
or
es
mov
les
mov
xchg
pop
inc
mov
cmp
in
add
daa
lahf
fisubr
xchg
aaa
or
inc
imul
mov
test
lods
add
dec
pop
leave
ret
and
frstor
hlt
iret
pop
scas
loope
cmp
or
push
mov
addr16
pop
js
jns
aas
(bad)
mov
adc
bnd
hlt
push
mov
xchg
sahf
mul
and
dec
int3
inc
mov
inc
mov
repz
mov
add
inc
nop
arpl
leave
jno
add
stos
out
fstp
xchg
xor
mov
pop
sub
(bad)
add
cmps
lahf
(bad)
adc
mov
mov
cmp
pushf
cld
inc
pusha
sub
inc
sahf
scas
mov
call
cmp
push
sub
inc
or
xchg
fwait
push
(bad)
pop
pusha
cmp
inc
leave
inc
scas
mov
nop
enter
mov
inc
arpl
fwait
push
adc
aam
(bad)
mov
stos
int
pop
je
and
jb
pop
add
out
cmp
dec
mov
aad
out
pop
xchg
dec
aam
or
cmps
leave
inc
push
and
pop
in
iret
push
(bad)
ja
dec
movs
stc
mov
popf
repnz
inc
and
jmp
ror
jae
movs
das
pop
cld
std
jb
dec
hlt
cli
setle
int3
jmp
xchg
mov
dec
jb
or
call
popa
mov
add
push
ins
retf
jmp
push
shr
push
ja
inc
sbb
shl
pop
enter
dec
fs
sub
js
or
aas
jno
gs
call
adc
pop
outs
xlat
or
int
movs
nop
dec
sahf
int3
inc
sti
and
pop
fld
call
aad
sbb
es
xchg
mov
fdiv
gs
sub
dec
inc
adc
jmp
mov
stos
push
xchg
ret
mov
xor
scas
pop
push
push
pushw
xor
mov
in
ins
push
mov
mov
mov
push
jns
cmp
imul
mov
pop
mov
pushf
add
or
loopne
mov
stc
ins
add
mov
sub
pop
cmp
jge
and
and
ror
push
adc
repnz
and
inc
es
inc
mov
or
or
movs
sahf
cmp
mov
sbb
shl
jae
lods
out
imul
ins
inc
sub
or
sti
mov
fucomip
test
stos
repnz
push
out
adc
div
sbb
hlt
dec
jmp
mov
imul
int3
aam
hlt
xchg
xchg
int3
or
shl
scas
fiadd
lds
out
iret
sbb
inc
xor
lea
dec
outs
jmp
repnz
into
imul
out
pop
or
cmps
adc
popa
jl
shl
mov
pop
push
mov
and
fdiv
dec
lock
dec
mov
lahf
test
jne
leave
jbe
cmp
fst
push
sar
fsub
or
(bad)
sub
mov
push
mov
mov
shr
mul
mov
mov
imul
sbb
or
test
ja
ret
add
(bad)
cwde
sbb
and
and
mov
fs
fmul
pop
out
sub
push
stos
(bad)
jl
fmul
(bad)
cmc
shl
ja
cmp
out
pop
mov
cmp
addr16
xchg
addr16
and
and
cmp
test
inc
pop
cmp
ins
and
mov
push
and
mov
out
int3
xor
and
and
rcr
xchg
pop
mov
jbe
in
jmp
mov
popa
sbb
sub
push
jg
xchg
sbb
add
out
mov
adc
call
pop
sub
mov
stos
leave
pop
and
clc
cmp
adc
xabort
jnp
mov
gs
adc
pushf
fs
int
jecxz
int3
das
add
fwait
outs
add
or
dec
mov
jg
cli
nop
and
or
pop
add
xchg
aam
aaa
cmps
add
out
movs
ds
in
pop
loope
ins
pop
sbb
pop
push
lds
lahf
mov
xchg
scas
fisttp
jnp
adc
pop
loop
(bad)
enter
fistp
dec
push
repnz
fs
sub
mov
xchg
in
mov
xor
sub
and
mov
in
jmp
jge
pop
and
in
iret
in
loopne
rol
retf
sbb
enter
stc
or
mov
mov
jb
hlt
jp
mov
jle
add
hlt
mov
out
push
sub
cli
and
pusha
mov
or
mov
and
push
or
mov
mov
fcmovnbe
jg
in
push
inc
in
dec
inc
dec
inc
inc
mov
and
mov
outs
or
dec
mov
(bad)
lods
dec
dec
pop
mov
fwait
sbb
mov
cmp
mov
int3
sub
pop
(bad)
aaa
xchg
xor
ins
push
dec
xchg
ins
int3
outs
jno
(bad)
cmc
jp
and
out
jno
sub
xchg
mov
out
les
ror
adc
neg
pop
and
dec
mov
repnz
push
stos
popa
arpl
mov
repnz
cmp
jo
outs
dec
sbb
ins
out
xor
cli
mov
cmps
jns
dec
sbb
jbe
div
mov
mov
setnp
xor
enter
jo
lds
or
sub
mov
mov
pusha
mov
cs
inc
mov
mov
bound
std
rcl
and
aaa
xchg
in
nop
xlat
mov
ret
popf
scas
mov
shl
fs
xchg
or
mov
mov
inc
mov
sub
cmp
sbb
imul
pop
mov
outs
push
xor
in
mov
dec
fucompp
addr16
jge
cmp
inc
and
xchg
popa
mov
jae
loopne
imul
enter
test
pop
call
dec
outs
xchg
rcl
loopne
stos
xor
and
mov
and
(bad)
sti
ds
aas
sar
jp
sub
inc
inc
nop
mov
pop
or
or
lds
lahf
add
xchg
mov
ds
or
out
mov
or
add
or
lahf
mov
pop
cdq
jb
pop
cdq
push
jb
and
int
cmp
mov
sbb
sahf
inc
div
xlat
push
or
out
addr16
push
clc
add
callw
(bad)
mov
lahf
fimul
cli
adc
dec
cwde
add
inc
sbb
and
push
and
xor
sahf
stos
or
dec
setb
pop
mov
pop
or
dec
add
xchg
lea
fadd
jg
daa
or
add
adc
js
pushf
cmp
push
pop
jnp
pop
adc
push
mov
mov
sub
and
or
xor
int3
es
scas
jp
jne
scas
cmp
push
xchg
pop
(bad)
sub
pusha
mov
mov
xchg
mov
sbb
sbb
dec
cmp
test
and
vpcmpeqw
xchg
mov
mov
stos
sub
cmps
sahf
fidiv
in
(bad)
or
sub
test
xor
das
stos
int3
sub
fimul
adc
pop
cmp
hlt
rcl
xchg
xor
(bad)
pop
fistp
cmc
or
jecxz
or
sbb
adc
test
mov
enter
xor
stc
xor
(bad)
mov
(bad)
das
mov
sbb
push
fcomp
mov
xor
xor
mov
inc
mov
cmp
sbb
fs
xchg
xchg
sbb
sub
mov
jb
inc
addr16
xor
loopne
mov
push
fs
enter
ja
fdiv
leave
stos
pop
(bad)
rol
cmps
loop
js
mov
popf
jmp
mov
(bad)
outs
jmp
pushf
sbb
ret
pop
daa
jecxz
dec
mov
fadd
sar
dec
pusha
arpl
rcl
adc
fidiv
jle
ror
sbb
mov
sub
ins
fs
movs
add
in
pushf
(bad)
in
xor
dec
fidivr
dec
js
jns
idiv
xchg
pop
dec
fucom
aaa
hlt
or
fdivr
mov
push
push
sbb
mov
scas
pop
mov
xchg
shr
aas
cmps
and
scas
mov
ins
inc
push
lea
fisub
lods
adc
dec
push
mov
cwde
repz
sbb
cmp
call
out
out
pop
hlt
pushf
dec
icebp
movs
dec
xor
sub
inc
sbb
ret
push
xor
mov
add
loop
push
(bad)
pop
(bad)
jns
mov
imul
mov
add
mov
shl
pop
cmc
sar
dec
lods
mov
mov
and
fsubr
jmp
mov
mov
test
or
jge
sub
inc
jle
push
jae
mov
std
xlat
ficomp
(bad)
pop
ja
repnz
data16
out
clc
mov
or
gs
aad
mov
shr
and
in
xchg
pop
xchg
cli
test
popa
push
jne
into
jo
xchg
lds
sbb
jp
or
mov
into
sub
stos
pop
shr
stc
aaa
retf
push
stos
pop
daa
xor
les
es
xchg
hlt
sub
mov
pop
jne
ficomp
mov
xlat
retf
mov
popa
or
adc
les
fisubr
fs
xchg
mov
dec
or
mov
jbe
popw
cmp
(bad)
out
(bad)
stos
xor
xchg
inc
adc
cmp
dec
push
jecxz
add
rcr
int3
scas
push
nop
inc
in
sub
mov
xchg
in
mov
sahf
cdq
les
lods
pop
repz
sub
jmp
mov
dec
xor
imul
test
and
push
out
jnp
ins
ins
ss
and
push
pop
or
cmp
adc
loopne
inc
inc
pushf
jno
dec
popa
imul
outs
lock
ret
fisub
ss
adc
ja
ja
imul
ins
mov
push
xchg
xor
jge
dec
xchg
or
jle
push
lock
inc
imul
mov
ficom
cmp
push
fst
mov
pop
push
shl
jl
cmp
or
sub
mov
inc
dec
mov
pop
jmp
ret
sbb
popa
out
fisub
retf
mov
sub
mov
ja
scas
mov
jo
loopne
stos
add
aas
add
dec
es
xchg
icebp
pop
iret
sbb
retf
inc
iret
add
addr16
stos
clc
mov
inc
fmul
mov
test
pop
adc
pop
jae
in
popa
push
mov
add
adc
aas
mov
push
enterw
and
xchg
jb
push
xlat
cmps
fwait
in
adc
cmp
(bad)
pop
leave
mov
cmp
mov
and
stos
jne
or
int3
cmc
adc
jo
adc
fsub
sbb
cld
rcl
add
pop
cmp
cmp
cmp
sub
rcr
outs
out
jge
bswap
fist
inc
jo
loop
add
scas
mov
pop
popf
cmps
in
sub
push
pop
ret
push
ja
push
mov
jp
jp
hlt
fchs
pop
xor
test
xor
mov
fst
(bad)
je
cdq
pushf
sbb
retf
je
adc
dec
jnp
lods
fdivr
rcr
mov
push
gs
push
mov
(bad)
sub
or
sbb
in
and
sub
jge
cli
mov
jp
inc
fs
push
stos
or
or
pop
test
xlat
adc
out
mov
repnz
cmp
mov
mov
cmp
ds
idiv
cwde
inc
jmp
jg
scas
add
add
xor
cld
daa
xchg
inc
nop
fcmovnbe
dec
dec
sub
or
pop
inc
rcl
arpl
call
dec
(bad)
jecxz
sar
cmp
pusha
jle
popa
sbb
xchg
popa
in
or
mov
call
dec
dec
cmp
sub
clc
sti
jge
outs
inc
push
pop
icebp
sbb
sbb
xchg
out
ret
test
xor
jne
fstp
lock
clc
pop
dec
jo
in
aam
inc
add
aas
or
cmc
pop
sar
jns
push
fwait
invd
adc
adc
call
outs
imul
es
ds
jnp
mov
inc
js
inc
add
ret
rcl
pop
fisttp
inc
cmps
rcl
and
ficomp
vmovlps
pop
jbe
push
cmp
dec
ja
pop
cmps
add
lea
dec
and
mov
or
inc
fs
out
cmp
mov
jle
push
pop
push
adc
jmp
ret
jmp
loop
retf
in
cmp
mov
inc
rol
std
into
jg
iret
xor
ins
fisttp
jo
xor
jbe
jns
pop
ret
test
stos
cmp
cmps
ins
xor
ret
ror
loop
cwde
inc
clc
sub
call
jno
pop
sahf
inc
push
sub
cmp
mov
out
xchg
rcl
mov
in
adc
jge
jnp
jae
pop
outs
xor
cmp
push
adc
es
xchg
pop
bound
xor
push
xchg
mov
xchg
shl
push
jp
ror
add
sub
out
scas
add
mov
ret
test
movs
sub
movs
mov
test
fnstcw
daa
mov
fidivr
std
lods
cmc
and
adc
push
pop
mov
or
xchg
pop
test
aam
(bad)
clc
or
and
mov
pop
out
add
(bad)
mov
cs
loopne
fisttp
cmc
push
pop
invd
xor
jmp
sti
out
mov
aaa
inc
lods
sub
daa
ja
adc
nop
sub
inc
jae
aas
push
hlt
push
loop
cmps
ss
loop
xchg
xchg
mov
out
jecxz
not
add
pop
inc
out
lahf
retf
hlt
jg
shl
or
inc
sbb
push
test
fisttp
int
daa
in
mov
out
mov
in
fnstenv
or
gs
inc
(bad)
mov
daa
jmp
jle
mov
outs
adc
xor
mov
pop
test
movs
adc
fidivr
dec
dec
test
adc
lahf
adc
pop
sub
arpl
sub
push
cs
mov
jno
and
adc
mov
sti
and
scas
mov
sbb
mov
test
jnp
and
sbb
mov
pop
jo
fadd
push
bound
or
inc
jbe
mov
push
in
sub
and
test
ret
dec
mov
mov
mov
or
sbb
jmp
retf
xor
mov
jecxz
pop
fcom
rol
call
jae
mov
jns
(bad)
xchg
retf
and
(bad)
out
xlat
push
pop
nop
xor
pop
cmps
xor
setne
es
icebp
(bad)
call
push
es
addr16
dec
cmc
mov
or
mov
xor
in
or
dec
xchg
loop
test
mov
imul
jae
and
retf
clc
or
mov
cli
and
pop
loopne
xchg
loopne
jns
call
fistp
fst
jnp
dec
inc
push
fistp
scas
aad
dec
add
sub
clc
jge
aad
fnsave
(bad)
ja
aam
mov
daa
addr16
lds
jmp
pushf
sbb
sbb
xor
dec
adc
push
mov
js
sar
das
test
fucomi
leave
mov
adc
inc
(bad)
ss
add
push
ins
test
mov
fistp
pusha
mov
in
dec
bound
nop
push
push
retf
clc
(bad)
fistp
or
lea
stos
ins
or
xor
jmp
imul
std
pop
ins
push
push
cdq
pop
jl
lea
push
out
mov
mov
(bad)
mov
shr
outs
push
out
sbb
int
and
or
inc
and
and
aad
fbld
mov
es
in
(bad)
das
sbb
pop
add
mov
push
(bad)
les
add
pop
push
push
std
xchg
mov
aas
pushw
adc
std
jo
or
dec
into
cwde
loop
pop
xchg
scas
lods
popf
adc
shl
xchg
xchg
stos
sub
jmp
mov
xor
pusha
stc
mov
(bad)
fbstp
push
push
adc
push
cld
or
cmp
mov
test
xchg
imul
retf
jmp
push
sub
in
sahf
hlt
push
enter
sbb
outs
jp
jbe
rol
jge
pusha
and
pop
movs
test
push
push
push
es
fwait
mov
mov
daa
push
jmp
xchg
pushf
or
pop
mov
repz
sar
sbb
cdq
mov
xchg
dec
mov
les
fcom
or
add
push
and
fstp
movs
inc
adc
fisttp
(bad)
popa
or
or
aas
inc
sub
(bad)
cmp
adc
jmp
add
mov
sahf
xchg
retf
fbld
aas
dec
sub
icebp
idiv
std
lods
js
push
and
cmp
je
pop
fsub
inc
retf
es
in
loopne
loop
push
jno
mov
add
imul
add
cmp
(bad)
stc
out
pop
or
mov
inc
mov
lds
inc
retf
mov
cmps
cld
mov
in
scas
je
ss
cli
out
mov
les
mov
in
inc
ret
movs
add
mov
in
loop
repz
aam
fnstsw
frstor
ret
iret
call
pop
fwait
cwde
out
and
stos
mov
dec
add
xchg
mov
test
mov
push
out
dec
ins
inc
push
push
call
add
ja
mov
movs
push
sbb
test
(bad)
ja
jb
xor
inc
inc
xlat
sub
pop
sub
pop
adc
push
mov
sub
jg
fcmovbe
outs
xor
mov
xlat
cmp
mov
int
mov
clc
push
and
ret
ret
mov
mov
test
add
(bad)
leave
or
int
fcomp
fwait
jge
stos
jg
int3
enter
push
aaa
test
mov
xor
xor
inc
dec
es
test
jno
xchg
and
nop
sbb
not
in
in
in
mov
jge
aaa
(bad)
xor
push
inc
xchg
mov
mov
aas
aaa
repnz
push
ror
dec
xchg
lds
inc
gs
test
(bad)
mov
mov
jle
push
mov
movs
outs
inc
mov
pop
xchg
retf
fs
ins
call
sbb
sbb
jecxz
mov
dec
or
xor
push
xor
dec
add
mov
dec
dec
mov
pop
adc
ret
push
jg
xor
mov
imul
stc
shl
add
cmp
push
cli
and
jle
mov
xchg
leave
stc
dec
mov
jns
test
(bad)
adc
dec
xchg
aam
ror
ret
sub
lea
push
add
sub
mov
pop
push
cmps
inc
repnz
rcl
arpl
lods
xor
cmps
mul
and
pop
mov
int3
add
cmp
(bad)
adc
mov
inc
xor
sub
push
fwait
cmps
jnp
push
mov
adc
iret
ret
sub
loop
repnz
call
cmps
gs
or
add
in
add
push
xchg
sbb
sbb
cli
(bad)
mov
inc
inc
sub
xor
add
cmc
and
push
lock
je
shr
add
jns
or
adc
add
cmp
mov
(bad)
outs
jg
fistp
(bad)
jno
cdq
aas
ja
adc
xchg
(bad)
jnp
push
sbb
out
jle
ror
enter
arpl
adc
bound
outs
pop
jnp
test
out
lahf
xor
mov
gs
push
in
sub
mov
jge
jae
stos
jo
int3
popa
jecxz
ret
xchg
push
loope
inc
sbb
and
push
lds
aad
ror
inc
std
xchg
mov
pop
jg
mov
or
ret
adc
das
popf
retf
jle
pcmpgtb
(bad)
xchg
stos
sbb
sub
rol
jmp
add
lds
lock
cwde
pop
iret
jp
lds
dec
inc
shr
sbb
mov
rcl
mov
lea
mov
mov
into
hlt
cmps
sub
(bad)
fst
movs
stos
ret
mov
dec
shl
sub
cmp
in
movs
test
sar
fidivr
retf
mov
out
xchg
mov
(bad)
dec
aam
sbb
fdiv
rcl
fsub
lea
shl
jg
dec
and
fwait
pop
es
(bad)
dec
aad
or
je
fild
or
jae
(bad)
dec
sub
fidivr
dec
jg
shl
test
std
pop
jmp
xor
es
dec
dec
dec
outs
push
nop
loopne
xor
xor
loope
das
movs
cmp
push
(bad)
jno
and
aam
xchg
add
inc
mov
jbe
xor
dec
test
pop
jb
or
cmp
bound
and
xchg
stos
xchg
lahf
mov
dec
push
bound
(bad)
cmp
jns
sbb
jecxz
movs
push
ins
cmp
cwde
pop
add
and
pop
jp
mov
(bad)
iret
shl
adc
mov
icebp
or
mov
stc
in
jmp
scas
xchg
jle
(bad)
jns
jo
mov
rol
call
inc
and
ficomp
test
addr16
test
stos
ins
out
xchg
push
ins
and
fldenv
ret
cmps
imul
lock
and
fmul
icebp
cmp
gs
stos
inc
adc
pop
bound
ss
mov
and
les
cwde
ficomp
inc
fst
dec
inc
lahf
jge
xchg
ret
xchg
das
lods
ret
sub
test
cdq
mov
inc
add
or
xchg
jp
clc
aas
fs
stc
hlt
out
mov
sbb
sub
xor
scas
fldenv
push
adc
cmps
hlt
pop
daa
js
push
xchg
ds
std
add
(bad)
nop
jecxz
and
shl
cmp
jle
out
xor
add
ficom
mov
(bad)
(bad)
mov
pop
xchg
ins
popf
cdq
push
rol
pop
ret
adc
fidiv
inc
add
push
hlt
push
mov
rcl
inc
or
xchg
mov
push
arpl
js
mov
mov
jno
(bad)
std
pop
pushf
push
sbb
adc
inc
inc
frstor
xor
fdiv
pop
sahf
test
mov
lods
jne
leave
push
ja
xlat
sbb
loope
rcr
popa
or
mov
sub
jo
mov
push
fstp
ins
mov
scas
xor
xchg
push
lock
add
pusha
loopne
mov
mov
cmp
cmp
mov
sbb
sbb
xchg
add
aad
sbb
leave
mov
in
sbb
imul
ror
lods
icebp
dec
mov
test
je
sub
pop
ins
repz
js
retf
js
(bad)
fimul
aas
fbld
xchg
mov
lods
scas
mov
gs
ins
dec
push
cdq
shl
scas
shl
rcl
out
pusha
retf
push
jns
ds
popf
pushf
mov
das
ds
cmp
adc
std
retf
inc
in
lea
mov
(bad)
repnz
mov
sbb
test
ret
into
lea
popa
movs
fwait
push
adc
inc
mov
or
loopne
cmp
xchg
(bad)
mov
inc
and
inc
call
sahf
jle
jmp
push
xor
pop
sub
add
sahf
sbb
xchg
sub
push
push
jbe
jmp
or
call
dec
fcmovne
jbe
js
in
add
shl
inc
cmp
ins
ds
js
push
pop
repz
imul
out
fidiv
inc
mov
xlat
fcom
dec
int3
mov
jns
xchg
aad
mov
and
ror
ret
out
lock
outs
xchg
loop
mov
mov
sub
and
or
cmp
add
sub
pop
dec
fistp
loop
sti
push
dec
xor
inc
ret
sub
fsub
out
cmps
mov
ficom
(bad)
add
test
mov
mov
xchg
inc
xor
aas
fldenv
jnp
sbb
sub
pop
ins
aam
retf
std
scas
mov
ja
movsx
jns
mov
mov
pop
stos
hlt
jns
jmp
xchg
add
arpl
push
xchg
inc
mov
xchg
jo
mov
fcomp
or
jb
jmp
movs
cmp
imul
fs
fcomp
lods
imul
cs
out
adc
pop
scas
pop
retf
xor
mov
xchg
pop
jno
lock
pop
jmp
inc
mov
mov
push
data16
push
jo
inc
leave
dec
mov
mov
(bad)
hlt
mov
xor
push
cdq
dec
jno
not
aad
f2xm1
pop
sti
aad
jg
push
add
outs
bswap
rcl
pop
mov
ds
mov
cld
scas
cmp
test
out
cmp
lods
xor
call
inc
dec
sti
jmp
mov
inc
scas
xchg
mov
adc
fmul
aas
(bad)
scas
sub
sub
mov
xor
pop
or
mov
(bad)
or
outs
adc
ins
int
fwait
xchg
loope
(bad)
jmp
push
je
les
clc
sub
daa
pusha
cmc
rol
mov
ss
shr
add
and
loop
mov
sub
mov
dec
iret
inc
cmp
test
add
sub
xlat
fwait
add
cs
pusha
imul
scas
push
mov
push
sbb
lahf
(bad)
dec
xor
rcl
out
fwait
mov
xor
xchg
sbb
leave
cmps
out
add
xchg
cs
jle
jmp
sub
lds
retf
inc
sti
imul
js
dec
rcl
mov
fbld
cmp
enter
dec
mov
mov
cld
xchg
aas
inc
leave
push
mov
xor
mov
pop
mov
cmp
test
inc
cmp
pop
pop
xor
pushf
xor
cmp
adc
adc
and
daa
or
sbb
scas
fdivp
xchg
in
cwde
inc
mov
and
xor
neg
inc
jp
mov
pop
xor
and
sub
mov
push
cld
fdiv
sub
push
dec
add
retf
cmp
and
inc
add
scas
cmp
dec
test
ss
jne
std
(bad)
nop
jb
cmps
sbb
aad
pop
cmp
xchg
(bad)
pop
or
inc
clc
mov
pop
addr16
mov
ss
fnstcw
bound
ins
inc
jle
lea
jmp
xor
jle
jns
pop
movups
mov
jp
adc
add
sbb
in
dec
movs
add
fisttp
in
enter
lds
jg
int
in
jae
lds
mov
shr
mov
or
mov
mov
inc
dec
jb
ja
dec
dec
dec
addps
dec
xchg
hlt
sub
cdq
scas
xchg
mov
mov
cmp
inc
push
ss
dec
mov
dec
aaa
adc
jo
(bad)
jge
cwde
enter
cmp
mov
call
fisub
sub
mov
icebp
add
les
mov
cld
sti
test
std
or
dec
lock
push
mov
shl
sti
hlt
int3
mov
push
div
and
rcl
add
mov
inc
xor
ds
jecxz
repnz
ss
cmp
mov
mov
mov
outs
in
and
in
push
cmp
sub
pop
stos
fadd
hlt
loop
push
dec
and
lock
stc
cmp
pop
dec
sub
cmp
pop
into
push
je
je
ret
pop
ds
xchg
mov
add
aam
aaa
repnz
test
popa
jnp
jmp
sbb
xor
dec
ja
dec
dec
pop
fdivr
in
jmp
adc
ret
lods
push
mov
jae
mov
aas
mov
mov
xor
mov
pop
mov
xchg
aad
pop
fiadd
jle
inc
fnstcw
gs
xchg
jno
inc
push
sbb
test
sub
outs
ja
and
lahf
clc
cmps
clc
sbb
pop
add
ja
mov
outs
xchg
sbb
(bad)
jg
(bad)
fwait
or
or
jp
lods
mov
pop
out
sbb
stos
jmp
shl
(bad)
sbb
jnp
les
mov
aam
repz
rcl
inc
or
sbb
sbb
pop
ins
sbb
out
dec
push
mov
nop
(bad)
test
stos
icebp
mov
sub
mov
scas
lods
dec
test
pop
addr16
adc
pop
inc
outs
mov
fsub
sahf
sub
mov
pop
mov
sub
sub
stos
push
sti
mov
addr16
shr
sbb
shl
and
xlat
call
sub
and
clc
ret
mov
cwde
push
or
add
xchg
pop
jmp
test
dec
pop
sbb
adc
rcl
aas
or
das
enter
scas
or
xchg
(bad)
call
sub
out
mov
inc
std
pop
adc
and
jns
lds
pop
out
out
int
jmp
inc
fsubr
push
imul
adc
and
dec
inc
repz
push
pushf
(bad)
movs
mov
mov
xchg
cmp
rol
jne
aam
js
push
aad
aaa
in
outs
ret
add
adc
or
dec
cmp
jbe
mov
mov
jg
inc
hlt
fsubr
fdivp
ja
leave
inc
fstp
and
pop
mul
lods
ror
add
pop
leave
test
dec
ins
movs
cmp
data16
mov
xchg
and
daa
xor
sar
lods
inc
scas
ja
icebp
ffreep
mov
movs
push
(bad)
out
movs
push
mov
sub
mov
inc
imul
dec
push
test
xchg
(bad)
push
lea
pop
(bad)
movs
(bad)
aaa
cmc
adc
pushf
outs
loope
mov
fnstsw
adc
adc
xchg
fadd
lods
mov
push
(bad)
cmps
mov
and
sbb
xor
add
retf
push
test
and
xor
or
aaa
dec
xor
cmp
pop
fisub
movs
out
add
xor
jbe
push
fdiv
mov
mov
pop
call
adc
retf
repz
(bad)
fldcw
and
sub
push
pop
inc
int
dec
cdq
xor
outs
push
lea
(bad)
out
mov
aaa
add
dec
call
xchg
cmp
rcr
add
and
bts
sbb
cmp
push
lods
inc
xor
sbb
mov
push
movs
frstor
pop
mov
fwait
jne
or
aaa
jnp
or
cmp
mov
enter
adc
repz
das
(bad)
mov
mov
adc
pop
cmp
lea
pop
inc
ins
jo
movs
mov
fild
adc
pop
jg
or
sub
xchg
ficomp
aad
mov
jle
push
stc
add
mov
fucomp
dec
xor
and
or
das
pop
jecxz
je
mov
out
and
hlt
pop
xchg
inc
aas
jp
aas
pop
not
jmp
call
add
cwde
cmp
aad
ins
clc
sbb
push
popf
sub
cwde
mov
inc
ja
pop
xchg
repz
bound
xchg
jp
ret
imul
andnps
xchg
jmp
pop
adc
sub
retf
in
jle
mov
popf
cmp
add
ret
adc
out
push
cmp
nop
xor
and
mov
js
aad
add
pop
mov
popa
shr
adc
mov
xchg
(bad)
pop
mov
and
jne
mov
xor
jmp
cmc
mov
mov
mov
repz
data16
ja
cs
inc
ss
dec
loopne
fmul
push
push
popf
push
jno
shr
jge
sbb
out
cmps
sub
or
xchg
mov
mov
mov
dec
test
into
add
xlat
or
inc
test
fwait
pop
sub
out
jp
das
mov
rcl
lahf
shr
fdivr
int
xor
call
or
mov
in
int3
add
lds
mov
pop
cdq
mov
enter
fwait
inc
add
idiv
xchg
xchg
xor
out
call
dec
int3
xchg
mov
dec
stos
test
aam
sbb
ret
(bad)
sub
int
jbe
ja
popa
hlt
repnz
or
jmp
cmps
and
jmp
push
push
les
mov
mov
je
jne
imul
pop
out
push
or
xchg
dec
push
push
stc
pop
ja
repnz
daa
bound
int
mov
cmp
add
data16
bound
push
mov
ror
lods
outs
cld
sub
clc
dec
ins
imul
shl
or
scas
enter
mov
sub
push
int3
jns
(bad)
pop
jmp
inc
cwde
repnz
inc
sbb
arpl
inc
js
jmp
lds
(bad)
mov
xchg
jmp
add
or
dec
or
stos
fst
inc
cmc
cmps
adc
sub
dec
cmp
adc
push
adc
out
add
adc
ja
out
pop
out
mov
mov
enter
mov
retf
or
or
pop
push
sbb
adc
lods
cli
fistp
sbb
fs
ss
mov
dec
fsub
jp
rcl
test
inc
cmp
xchg
mov
bound
scas
mov
mov
and
xchg
jp
adc
sbb
loopne
mov
in
cmp
push
push
lods
arpl
push
fistp
lods
loope
(bad)
pop
test
(bad)
in
mov
cmp
hlt
or
xor
lds
popa
mov
in
es
push
cmp
pop
dec
mov
jno
cdq
cli
imul
loope
adc
or
jl
dec
fstp
data16
retf
inc
call
ds
repnz
pop
jp
dec
mov
mov
mov
mov
adc
stos
retf
sub
pop
imul
jo
in
sub
out
lods
(bad)
jns
dec
daa
ficomp
popf
jp
ja
ret
mov
imul
addr16
das
mov
test
enter
jecxz
cs
mov
or
dec
jae
adc
adc
test
dec
dec
in
aas
inc
rcr
add
scas
int3
nop
aad
loop
ror
xchg
jno
outs
(bad)
push
mov
movs
xchg
adc
jbe
pop
cmps
test
xor
test
nop
push
out
arpl
xor
jle
jae
ss
fist
ret
xor
sub
scas
loope
cmps
adc
inc
std
inc
and
cdq
enter
(bad)
jae
jns
(bad)
fldl2t
test
mov
in
and
push
(bad)
bswap
and
cmp
idiv
mov
fist
dec
into
hlt
movs
cmp
mov
les
lock
sbb
xchg
mov
int3
and
icebp
test
stc
int
jp
fisubr
mov
stos
lods
mov
xor
inc
dec
jecxz
scas
cld
cmp
lds
aad
pop
mov
mov
mov
daa
push
rcr
cs
sbb
inc
add
cmp
popf
cmp
dec
push
push
mov
mov
push
jo
inc
cwde
push
lock
inc
fst
jae
jg
mov
iret
out
cwde
jp
scas
push
(bad)
daa
les
push
lods
jae
inc
push
mov
sar
add
out
fs
adc
mov
sub
js
inc
mov
mov
fucom
lock
call
fs
xor
sub
cmp
jmp
or
lods
fmul
adc
push
lods
js
ds
xor
pop
and
scas
xor
shl
mov
imul
pop
cmc
mov
sbb
ja
out
bound
adc
repz
adc
frstor
cdq
dec
pop
call
out
sbb
pop
inc
lds
pop
out
mov
pop
add
inc
movs
jne
xchg
test
cmp
dec
push
loope
jns
in
jb
data16
mov
add
mov
and
movs
stc
cmc
push
pop
daa
popf
(bad)
cmp
xchg
adc
outs
inc
jb
ss
faddp
push
sbb
jp
scas
cmp
jle
retf
fwait
call
fnsave
mov
add
xchg
xor
add
dec
or
or
in
hlt
cmps
sbb
sub
sub
fsubr
or
stc
ret
pop
dec
xchg
mov
cmc
xchg
(bad)
push
stos
(bad)
xchg
mov
pop
jmp
jmp
pushf
pushf
mov
pop
xchg
aaa
or
mov
movs
inc
add
mov
repz
push
(bad)
ins
jg
call
nop
nop
xor
sti
push
rcl
out
jmp
movaps
pop
movs
jg
or
or
sub
pop
add
aam
dec
mov
or
outs
push
jle
add
pop
in
push
inc
mov
pop
adc
aaa
mov
cmps
jae
sub
fsubr
cmp
retf
fistp
mov
cmp
inc
inc
jge
addr16
loope
push
and
shr
lock
out
mov
mov
or
inc
sbb
or
inc
jle
out
sub
fist
sar
xchg
pop
ret
mov
or
test
es
jmp
inc
in
inc
arpl
sahf
mov
shl
mov
inc
inc
cmp
nop
add
push
jbe
sub
adc
add
cmp
push
inc
jo
sub
mov
adc
xlat
jecxz
repz
jno
div
pop
and
out
cmps
outs
inc
dec
adc
int
imul
xchg
adc
mov
mov
push
push
scas
psllw
aad
mov
iret
sub
fucomi
outs
scas
jne
std
and
enter
cmps
add
inc
loope
aas
int3
mov
call
add
mov
add
cmps
and
pushf
jnp
sbb
xchg
mov
mov
push
sbb
jbe
out
out
push
sbb
frstor
jb
dec
pop
mov
push
sbb
leave
leave
and
push
or
push
popf
sti
dec
loope
enter
mov
call
pop
cmc
pop
pop
ja
sub
imul
enter
and
call
popf
rcr
ins
movs
fcom
sbb
xor
leave
ins
and
nop
add
jmp
push
shl
mov
shl
mov
jg
movs
cmp
in
mov
pop
add
out
adc
stos
shr
out
fnstsw
or
push
clc
mov
in
sti
fdiv
and
jecxz
jl
test
lock
dec
sub
std
pop
xor
movs
retf
add
push
pusha
or
repz
and
xchg
sahf
add
out
call
cmc
loop
mov
cmp
mov
cmp
mov
jmp
mov
cmp
sub
xchg
cmp
or
push
mov
dec
pop
mov
int3
pushf
pop
add
idiv
pop
add
jno
push
shl
call
xchg
push
scas
push
lahf
cmp
cmp
mov
dec
push
push
inc
pop
adc
push
inc
xchg
hlt
cmp
shl
mov
lock
and
sub
xchg
cmp
jo
cmp
shl
fiadd
cmps
jbe
xor
aad
stc
xor
fwait
push
push
adc
adc
hlt
stos
aam
xlat
mov
and
mov
push
pushf
into
mov
cmp
or
dec
fnstcw
or
dec
(bad)
stc
jbe
xchg
push
sbb
add
dec
jo
rcl
sub
xchg
sbb
cld
jmp
cmps
into
test
jnp
adc
pushf
mov
movs
xchg
imul
cmc
aas
cmp
mov
inc
mov
in
inc
loopne
clc
pop
pop
jle
ins
xor
aas
cmp
or
int
test
jo
test
adc
sub
test
sbb
cmps
dec
je
add
ret
es
clc
push
and
mov
test
pop
repnz
push
xchg
cmp
scas
sbb
cmps
pop
mov
xor
adc
leave
imul
loop
xchg
mov
pop
out
out
pop
fstp
cmps
int3
pop
add
das
and
pusha
sub
dec
sbb
jmp
jmp
cwde
cmps
enter
dec
mov
out
(bad)
into
ror
pop
mov
arpl
ins
ss
xor
popf
dec
rcl
dec
jbe
cli
int3
nop
jmp
lock
js
xor
fst
mov
xchg
cmc
cmps
pmulhw
aam
dec
(bad)
fs
out
pushf
cmp
addr16
dec
hlt
out
test
adc
or
retf
out
das
inc
push
lods
fs
sti
gs
mov
int3
push
shl
push
scas
sar
inc
cli
push
inc
retf
cmps
push
test
adc
ds
sub
mov
lods
dec
pop
xchg
mov
sbb
adc
xchg
dec
xchg
inc
fld
jp
mov
std
xchg
sbb
shl
or
arpl
outs
ins
lea
pop
arpl
outs
pop
pop
sbb
jp
jnp
fidiv
and
iret
pop
dec
aad
inc
adc
out
cmps
std
fiadd
dec
xchg
jb
inc
rcl
stos
adc
bound
cmp
aas
jp
dec
retf
dec
(bad)
cdq
sub
xchg
cmp
jae
adc
pop
jp
pop
movs
push
and
xchg
lods
xor
pop
mov
lock
nop
outs
sahf
xor
jg
data16
outs
je
adc
dec
data16
mov
push
out
ret
xchg
aam
xchg
dec
push
shl
mov
mov
out
mov
lahf
jo
shr
inc
sub
adc
ud2
xor
stos
arpl
adc
xor
shl
dec
xchg
fisubr
lods
ret
or
push
fst
idiv
jbe
leave
mov
mov
pushf
out
mov
movs
dec
and
sbb
pop
mov
stos
add
fdiv
jbe
pop
icebp
mov
xchg
jbe
adc
or
cdq
je
(bad)
mov
push
test
inc
and
outs
inc
or
push
leave
jl
repz
popf
popf
lahf
jecxz
sbb
in
fdivr
inc
pop
popf
jno
jae
imul
cmc
shr
mov
dec
xor
inc
pusha
dec
jmp
cld
imul
mov
sbb
shr
arpl
add
call
sbb
push
sbb
mov
jnp
or
test
xor
cwde
sub
shl
lahf
mov
call
cmp
mov
fwait
sbb
dec
push
(bad)
push
std
lock
sbb
fld
les
mov
clc
adc
jp
push
repnz
nop
fild
sbb
mov
xor
test
add
cmp
sbb
cmp
mov
mov
sbb
enter
les
mov
xchg
loop
cmp
or
adc
xchg
call
retf
jns
cwde
clc
scas
sub
dec
icebp
popf
outs
add
and
mov
and
(bad)
adc
jo
mov
lahf
or
pop
(bad)
mov
test
repz
inc
fsub
imul
adc
pop
cmp
mov
pop
movs
movs
push
pop
test
xor
dec
into
fs
xchg
rcl
cld
mov
push
xor
jno
push
fimul
int
push
jl
xchg
and
rol
out
arpl
or
retf
xor
add
scas
xchg
push
aad
push
mov
retf
pop
jmp
xchg
sub
jbe
pop
or
fld
xor
push
pop
into
push
push
pop
aaa
xor
int
xchg
adc
mov
dec
push
adc
and
imul
xor
xor
inc
inc
in
arpl
sub
adc
rcr
push
cld
retf
(bad)
in
test
adc
and
cmovg
test
movs
loope
call
inc
stos
xchg
push
(bad)
retf
adc
jbe
fistp
lock
bound
push
push
test
out
ror
push
add
psadbw
retf
loopne
xchg
pushf
push
mov
shr
ins
xchg
mov
push
mov
push
test
(bad)
int
inc
push
push
sbb
cmp
rcl
shl
lods
dec
test
add
sti
xchg
inc
xchg
jne
pop
xor
test
sbb
push
lock
mov
jle
jle
fwait
loop
(bad)
xor
and
dec
mov
add
(bad)
fldl2e
clc
push
int
shl
mov
test
retf
push
pop
scas
xor
push
test
loopne
dec
hlt
lods
cld
mov
pop
or
inc
mov
push
add
mov
lods
mov
js
jecxz
xchg
xor
xor
stc
adc
imul
shl
lahf
(bad)
adc
inc
sub
sbb
jg
mov
movs
mov
out
fsubrp
mov
test
(bad)
enter
cmc
aaa
push
or
push
fld
mov
dec
mov
sub
pushf
sbb
hlt
pop
movs
dec
test
dec
mov
add
xor
mov
or
ds
pop
adc
dec
pusha
push
xor
(bad)
je
sbb
sub
jecxz
repnz
push
test
ret
in
xor
outs
add
shl
mov
inc
cmps
rol
dec
xchg
inc
imul
push
pop
pop
(bad)
jae
(bad)
cmc
je
in
inc
jge
adc
into
inc
adc
inc
mov
xchg
js
fcmovne
jecxz
jnp
fwait
cli
ret
fst
(bad)
sbb
jle
add
jl
xchg
dec
popf
add
mov
cmc
aam
pop
pop
mov
xor
and
lods
sub
jge
pop
out
push
jb
adc
inc
push
pop
xor
pusha
mov
fwait
jmp
loop
mov
hlt
push
sbb
adc
call
mov
in
mov
int3
arpl
jmp
leave
cmp
retf
std
push
push
inc
mov
xchg
lahf
sub
rol
pop
adc
mov
add
daa
mov
push
pop
(bad)
mov
movs
inc
movs
int
inc
(bad)
shr
dec
in
jmp
fs
jmp
(bad)
inc
add
cmps
leave
(bad)
scas
loop
stc
ret
dec
pop
xchg
dec
jle
mul
dec
mov
call
mov
push
dec
cdq
push
dec
inc
in
add
mov
lds
jnp
out
aam
in
stos
stos
cld
sbb
xchg
pop
ins
pop
mov
mov
aam
int
stc
aas
ret
aad
je
ftst
add
hlt
retf
fwait
call
adc
repz
sub
sahf
push
icebp
out
jl
cld
and
mov
sbb
fs
mov
ror
jmp
jae
in
sub
scas
pop
test
push
in
(bad)
aaa
loopne
sbb
retf
xchg
loope
inc
(bad)
and
add
faddp
es
enter
jge
sbb
xchg
int3
mov
popa
shr
dec
call
outs
push
dec
and
adc
data16
sti
stos
mov
mov
adc
mov
gs
int3
cmp
daa
or
add
lock
inc
pusha
lods
cmp
add
daa
dec
mov
xchg
mov
push
xor
sbb
das
jno
clc
jae
imul
dec
mov
or
out
xchg
mov
fadd
push
dec
pop
aad
fiadd
mov
fs
je
push
(bad)
xor
adc
mov
int3
inc
lock
pop
xor
std
xor
mov
into
jp
push
or
jbe
xchg
mov
mov
pop
push
and
pushf
and
lahf
dec
jb
mov
es
imul
jo
js
xchg
call
xor
sti
pop
test
xchg
fld
push
ds
hlt
cmp
sbb
mov
mov
in
imul
sbb
cmp
cdq
add
std
inc
daa
pop
adc
jle
das
jae
add
xchg
sub
das
neg
gs
repnz
div
outs
dec
sub
retf
stos
repz
in
lahf
cmp
repnz
out
sub
pop
shr
imul
adc
hlt
and
push
icebp
adc
stos
pop
mov
push
lock
cmp
xchg
inc
les
adc
stc
push
pop
loop
ss
jmp
xchg
lods
leave
int3
mov
xor
scas
push
or
sub
xchg
repnz
scas
std
in
outs
xchg
into
enter
pushf
ret
xchg
xor
fs
inc
adc
mov
pop
inc
mov
retf
les
jb
cld
popf
adc
out
loopne
div
in
push
push
movs
mov
ret
mov
inc
mov
and
xor
jnp
lahf
and
fmul
aas
scas
jb
add
std
inc
mov
xor
adc
jmp
out
cwde
add
jo
sti
lds
sahf
fcom
adc
mov
leave
push
and
ror
push
pop
or
addr16
int
imul
lock
xchg
mov
popf
push
mov
jg
mov
call
loope
rol
ficomp
sbb
bound
cdq
mov
inc
inc
ficomp
jp
xchg
cmp
popa
add
retw
mov
loope
jmp
sub
cmp
push
jecxz
mov
xchg
pop
mov
dec
into
nop
jg
aam
pop
dec
push
int3
test
jns
call
std
dec
or
inc
mov
add
push
repnz
fild
pop
mov
add
push
mov
ins
sub
fsubr
dec
repnz
out
out
imul
adc
test
test
push
jg
pusha
dec
gs
gs
and
add
or
int3
das
adc
pop
(bad)
ror
sti
std
shl
iret
xor
loopne
aaa
or
les
nop
pop
add
jg
clc
neg
mov
sbb
(bad)
cmp
and
mov
jnp
push
and
add
sub
inc
fidivr
mov
cmp
cli
shr
sti
jge
ds
sar
std
dec
inc
mov
and
mov
mov
std
scas
js
(bad)
fsub
into
sub
jl
addr16
jg
inc
test
adc
js
mov
and
mov
data16
jb
out
jmp
sbb
lods
dec
jne
jns
lods
repz
gs
lds
fild
sbb
mov
cmp
and
ficomp
and
adc
cli
adc
mov
out
and
sbb
push
inc
dec
loopne
nop
xchg
xchg
stos
sahf
mov
lods
mov
popf
mov
iret
jbe
fbld
dec
xor
pop
xor
(bad)
clc
inc
popa
cs
out
add
jae
scas
xor
mov
xchg
mov
ds
shr
(bad)
(bad)
cmp
(bad)
and
xchg
sbb
lds
add
adc
test
mov
int3
data16
ret
neg
scas
cdq
rcl
out
cmps
pop
mov
loop
repz
call
and
adc
jbe
mov
cmps
cwde
mov
sbb
retf
arpl
mov
push
xor
adc
retf
push
std
pop
dec
mov
xlat
pop
xchg
mov
scas
outs
test
adc
jo
pusha
out
bound
xor
sub
xchg
call
sbb
cli
and
(bad)
loopne
sbb
dec
movs
movs
xchg
xchg
sti
out
mov
sbb
loope
adc
pop
xlat
cmps
adc
or
cld
ror
pop
jbe
inc
adc
jmp
or
pop
xchg
stc
jmp
add
pop
fld1
(bad)
call
outs
cdq
jg
xchg
fimul
ror
in
cmp
jmp
cmp
dec
or
dec
cmps
add
fsubr
popf
mov
xlat
retf
shl
xchg
lea
outs
xor
pop
cmp
mov
or
(bad)
xor
xchg
out
enter
sbb
jbe
mov
pop
add
xor
dec
iret
xchg
sub
repnz
inc
pop
frstor
cmp
popf
adc
fmul
add
xor
push
jno
and
sbb
pop
stc
call
sub
loopne
ins
sahf
inc
sub
xchg
jge
sub
mov
adc
cmp
mov
mov
bnd
iret
xchg
jecxz
clc
ja
dec
add
and
es
xor
jp
test
inc
fadd
pop
repnz
jne
cmc
jne
xchg
sub
sub
sbb
loopne
cmp
xchg
in
stos
mov
lock
data16
idiv
mov
pop
ja
or
lea
je
dec
inc
ins
pop
jle
xor
pop
enter
stos
sar
lods
and
out
jmp
push
js
and
arpl
and
mov
jl
leave
(bad)
jne
frstor
data16
(bad)
imul
or
sti
mov
gs
push
sbb
xchg
or
loope
mov
iret
sbb
ja
and
cwde
(bad)
and
dec
inc
pop
mov
and
cmp
lods
jle
(bad)
cmp
fnstenv
jo
sub
jmp
sbb
xchg
out
add
pushf
xchg
sub
jno
adc
fild
rcr
jns
jg
sub
push
addr16
xchg
add
adc
ss
scas
push
push
mov
push
xchg
into
push
adc
add
out
push
xor
adc
in
sub
mov
test
xor
ja
scas
in
frstor
stos
(bad)
push
mov
sbb
cmp
mov
xchg
xchg
mov
pop
xchg
repnz
aad
jnp
std
jno
mov
mov
jmp
shr
into
mov
bound
clc
in
mov
aas
cld
add
mov
hlt
mov
fadd
xchg
jae
sbb
and
sbb
inc
pop
inc
pop
movs
test
pop
neg
out
fmul
add
pop
cmps
std
push
sub
out
jle
test
cmps
mov
iret
mov
jge
pop
js
aas
cwde
xor
test
pushf
lahf
cdq
cld
sbb
mov
jo
lea
push
and
pop
mov
xchg
bound
out
sub
or
fld
sbb
xchg
not
jae
test
sub
sbb
cdq
retf
inc
aad
ret
mov
inc
stos
and
mov
fst
rcr
call
in
jmp
push
mov
fsubr
dec
js
jb
mov
push
jo
repz
sub
push
test
mov
fiadd
xor
int
ds
jno
or
cmp
mul
mov
fld
add
xor
(bad)
or
xor
cwde
call
(bad)
dec
sbb
(bad)
rol
sar
sbb
aaa
clc
dec
sub
jae
push
in
stos
shl
xchg
lahf
and
or
retf
call
or
push
lahf
sub
outs
neg
inc
ds
jb
jo
push
pop
sti
fnstenv
repz
or
mov
and
mov
add
repz
adc
outs
mov
leave
dec
pop
sbb
pop
or
cmp
push
xor
lods
es
pop
cmp
jl
mov
jo
adc
lods
push
mov
and
jmp
push
movs
pop
inc
(bad)
(bad)
mov
push
cli
cld
aad
pop
aam
xor
push
retf
mov
stos
sbb
movs
out
cdq
mov
sub
mov
pop
sbb
jmp
xor
add
call
sub
or
inc
pop
xchg
adc
mov
xchg
and
(bad)
pop
add
xchg
push
push
mov
scas
cld
ficom
push
xchg
dec
out
cdq
sbb
repnz
xor
fs
dec
in
jo
adc
es
cmp
or
jg
cld
xchg
adc
cmp
pop
mov
xor
inc
pop
sbb
loop
aam
push
mov
fst
mov
retf
fild
pop
jbe
cmps
mov
adc
mov
mov
or
aaa
call
cmp
repnz
sahf
fld
mov
fwait
lds
cs
stos
jg
or
popa
push
fidiv
popa
(bad)
add
out
cmp
fisttp
xchg
mov
test
jge
xchg
repnz
fwait
xor
icebp
push
jbe
nop
aaa
mov
cmc
xor
fcomp
dec
mov
pop
test
iret
dec
jno
lahf
test
dec
cmc
out
iret
imul
das
sar
fldcw
(bad)
bound
repnz
xchg
mov
sbb
add
pusha
and
inc
adc
mov
inc
fsubr
dec
and
xrelease
popf
test
out
cmp
outs
xchg
xchg
and
into
adc
popf
in
or
sbb
push
mov
adc
or
ds
cwde
les
mov
loop
outs
xchg
fisttp
test
push
fs
cli
jmp
cdq
sub
test
mov
aam
jl
ds
cwde
cmps
add
sub
sub
fdivrp
fidivr
hlt
xor
frstor
aad
(bad)
mov
or
fsubr
adc
xchg
dec
rcl
jl
pop
pop
lahf
(bad)
mov
je
mov
scas
fistp
inc
dec
(bad)
sub
stos
rcr
(bad)
repnz
mov
std
cdq
stos
std
jmp
sub
popa
adc
adc
xchg
mov
rol
pop
mov
jmp
je
or
sub
pop
push
stos
icebp
rol
cmp
cli
pop
sahf
ss
mov
push
cmp
in
clc
push
xor
(bad)
(bad)
mov
arpl
or
mov
sub
pop
scas
outs
inc
mov
xchg
add
push
sub
jl
or
(bad)
jno
mov
jo
rcr
cmp
mov
xchg
inc
mov
lahf
test
cwde
into
iret
xchg
movs
clc
popf
lock
mov
clc
cmp
sub
into
in
pop
xor
imul
pushf
and
popf
inc
inc
popa
mov
lds
outs
(bad)
pop
sti
outs
outs
call
xchg
out
fst
xor
xlat
xor
mov
popf
pop
adc
sar
stc
lods
sahf
retf
aad
push
popf
out
ret
pop
xor
jmp
sbb
xor
out
clc
in
bound
sbb
jecxz
mov
aam
cli
(bad)
popa
or
adc
aaa
mov
(bad)
hlt
mov
adc
aas
xchg
mov
mov
xchg
sub
hlt
mov
pop
out
xchg
mov
jae
xchg
mov
jno
sub
jnp
sar
and
and
add
ret
iret
mov
rcl
arpl
mov
push
push
inc
xor
fwait
outs
lds
fnstcw
fadd
jns
mov
push
mov
cld
aam
mov
loope
jge
dec
fcmovu
call
cmp
mov
pop
and
jl
pop
mov
add
xor
jg
jmp
mov
mov
cmc
dec
sbb
repz
pop
sub
mov
dec
and
push
jnp
sub
call
call
rcr
stos
test
(bad)
adc
push
and
icebp
pushf
clc
mov
loop
es
sbb
dec
add
adc
mov
push
nop
mov
cmp
xchg
stos
jmp
in
dec
xor
mov
sub
push
aad
or
jmp
pop
push
sub
sbb
mov
pop
adc
pop
cld
mov
push
push
das
cwde
cmps
sbb
(bad)
pop
pop
xlat
data16
jno
jbe
xchg
or
cmp
out
movs
mov
ja
call
fild
pop
jg
mov
mov
dec
sub
icebp
popa
loope
enter
xchg
push
cwde
jne
inc
rcr
fisttp
adc
inc
loopne
icebp
sbb
push
jae
scas
xchg
(bad)
add
fcmovu
push
or
test
mov
test
mov
bnd
mov
sti
jmp
mov
sbb
(bad)
and
mov
cmps
out
jae
es
mov
fisubr
or
pop
loopne
dec
test
mov
fisttp
mov
and
repnz
jne
fidiv
or
inc
xchg
jbe
pop
(bad)
add
outs
sar
fcom
loope
jo
mov
pop
es
int
stc
jns
and
mov
mov
lods
pop
push
mov
call
inc
push
mov
inc
(bad)
in
lea
jle
retf
add
cmp
icebp
shr
mov
out
ins
popa
push
call
cli
xchg
dec
and
scas
xchg
ficom
fistp
jge
idiv
ss
data16
mov
retf
in
mov
int
push
nop
add
jne
xchg
imul
push
push
shl
(bad)
sub
or
icebp
xchg
xor
sbb
idiv
adc
pop
stos
cwde
sar
mov
mov
ret
enter
mov
repnz
sub
shl
outs
push
scas
add
sub
gs
(bad)
adc
and
and
inc
mov
(bad)
cld
mov
loope
sub
popa
push
aas
sub
cmp
fadd
out
sub
cmc
aam
sbb
(bad)
pop
popf
xor
adc
mov
jb
cmp
dec
and
inc
jge
gs
mov
pop
in
mov
jnp
stos
cmp
push
xchg
inc
xchg
fwait
mov
xchg
inc
mov
imul
sti
lock
test
fcom
int3
sbb
outs
repnz
push
push
cmps
fs
ins
jecxz
add
dec
lock
es
mov
aas
int
imul
fmul
adc
inc
jle
cdq
push
mov
xchg
add
outs
in
xchg
dec
and
imul
adc
push
cmc
stc
xor
out
mov
int3
sbb
sbb
jmp
sti
movs
fisttp
pushf
fsub
scas
push
push
dec
out
in
nop
lea
sub
xchg
ss
cmp
imul
popf
mov
fwait
leave
or
ret
xor
fcomp
xor
mov
dec
stos
repnz
mov
aad
repnz
mov
ret
loop
jp
dec
mov
imul
mov
lods
inc
cli
aam
sub
pop
dec
(bad)
mov
fidiv
into
cmp
dec
dec
inc
stos
jmp
inc
push
retf
loopne
pop
push
jle
lods
call
pop
sar
mov
push
fnsave
or
sub
sub
add
cmps
test
mov
cmp
test
loopne
out
mov
sub
pop
pop
add
pop
and
sbb
inc
xor
shl
test
mov
aas
test
inc
pop
and
adc
sbb
bound
jp
lea
sub
mov
cs
jb
sbb
push
xchg
les
fstp
or
div
out
cmp
aam
inc
sbb
xor
push
scas
retf
fwait
xchg
stos
movs
inc
xor
(bad)
data16
std
xor
xchg
scas
jecxz
sti
or
ror
jo
mov
inc
add
fld
or
test
and
stos
xchg
jmp
add
jle
fisubr
ret
sub
xchg
arpl
adc
push
repz
adc
nop
or
mov
cmc
and
xor
scas
shl
movs
xlat
mul
and
mov
mov
jmp
add
sub
out
jmp
test
xor
mov
lds
icebp
push
sbb
in
dec
test
into
hlt
add
jo
mov
fs
push
sub
rcr
push
sti
mov
or
inc
sbb
js
jo
push
jns
hlt
cwde
clc
loop
push
mov
mov
sub
pop
shl
ffree
push
pop
int3
cdq
push
test
lock
test
mov
mov
jle
pop
push
xchg
stos
pop
and
lahf
jp
out
dec
les
sbb
mov
mov
in
mov
addr16
or
mov
mov
cli
test
pop
int3
ins
clc
out
and
mov
inc
or
mov
add
and
or
xchg
sub
pop
sar
add
pop
out
test
jge
sub
mov
sbb
daa
adc
(bad)
adc
pop
inc
in
popf
mov
push
arpl
xor
popf
push
xor
dec
mov
sahf
sub
js
cmp
sbb
sbb
rcr
adc
in
inc
pushf
inc
mov
retf
popf
aam
dec
cmc
dec
xchg
push
jnp
out
lds
push
jg
jle
std
test
mov
xchg
outs
outs
inc
pop
and
push
add
cmp
fadd
retf
jg
push
inc
bound
pcmpgtw
fcomp
imul
inc
inc
dec
jl
fld
rol
inc
sub
push
aas
pop
enter
cmps
mov
scas
in
jns
adc
push
cmp
sbb
pusha
sbb
lahf
in
into
xor
push
add
adc
push
xor
inc
sbb
cmp
ins
aam
or
push
js
fld
adc
or
add
inc
mov
push
push
sub
add
push
adc
sub
adc
add
adc
fwait
sub
not
jb
int3
jle
(bad)
pop
mov
(bad)
iret
or
rcl
mov
dec
test
xor
lahf
test
(bad)
cmp
adc
or
pop
push
push
adc
lods
push
or
mov
push
(bad)
push
xor
popa
pusha
inc
push
test
repnz
sahf
(bad)
adc
rcr
jnp
push
push
pop
cmp
mov
sbb
sbb
mov
and
je
inc
mov
je
dec
jp
iret
xor
fnstenv
dec
jmp
mov
in
sub
aaa
xchg
jl
inc
pop
out
xchg
xchg
sub
test
cmps
cmps
mov
push
xchg
or
push
push
sti
je
adc
arpl
cmps
(bad)
fs
sbb
push
cmp
dec
sbb
mov
push
out
in
nop
rcr
cmp
jb
fidiv
cs
xchg
(bad)
dec
pop
les
stos
cmps
stos
pop
dec
fdiv
sbb
loop
inc
test
fs
fisub
inc
mov
call
pop
push
cmp
adc
mov
sub
push
mov
xor
pop
rcr
and
xchg
in
jb
sub
lahf
xchg
ror
mov
lds
call
daa
repnz
fisttp
mov
(bad)
jge
nop
jecxz
aad
or
adc
mov
out
les
mov
dec
arpl
rcr
imul
pop
cmp
inc
test
stc
fld
stos
iret
test
jae
stos
arpl
mov
jne
adc
or
fsub
fadd
or
cdq
(bad)
jbe
jecxz
in
int
push
sub
nop
push
mov
scas
popf
stos
mov
fs
sti
movntq
out
aam
daa
or
xchg
sub
pop
add
or
sbb
stc
dec
add
shr
or
fdivr
mov
rol
cs
cli
xchg
ss
leave
mov
lds
popf
add
mov
cli
inc
test
sub
(bad)
xchg
add
dec
rol
ins
out
je
cmp
or
dec
mov
or
or
xchg
and
mov
gs
(bad)
jbe
sbb
mov
jge
mov
sub
not
inc
test
pop
jg
loop
inc
xchg
sbb
mov
imul
or
mov
pushf
lods
push
mov
mov
out
cmp
rol
js
daa
scas
aaa
pop
push
mov
mov
out
jmp
pop
xor
adc
adc
push
mov
sbb
or
mov
cmp
cmp
xor
push
mov
add
add
mov
stos
(bad)
jl
shr
les
retf
out
inc
les
jo
jb
scas
std
cdq
sbb
sbb
push
cli
jns
test
sbb
ss
test
fwait
cld
test
cmp
popf
lods
bound
mov
call
and
ret
(bad)
adc
out
repnz
push
mov
shr
nop
mov
add
mov
sbb
iret
and
push
cmp
movs
pop
imul
lods
outs
mov
dec
mov
sub
mov
mov
cmp
or
shr
cmp
mov
mov
jae
cwde
fldcw
dec
and
sbb
add
hlt
movs
sbb
inc
add
das
(bad)
jb
test
add
adc
out
jle
push
push
fild
mov
adc
inc
mov
in
xchg
pusha
dec
cli
push
int3
jne
pop
imul
mov
hlt
test
dec
mov
mov
loop
bound
retf
fbld
sbb
int3
cmp
sahf
add
outs
pop
xor
popf
mov
sub
or
xchg
or
test
cmp
aam
adc
fisubr
arpl
ret
pushf
mov
hlt
fmul
std
cld
rcr
mul
pop
pusha
mov
fs
aas
xor
dec
imul
fwait
pop
ja
in
sub
nop
mov
mov
and
test
pop
test
or
cmps
in
jae
lock
or
cmps
out
inc
push
into
rol
repz
add
mov
cmps
add
fdiv
ud0
mov
jle
dec
nop
or
mov
addr16
inc
sbb
in
fwait
je
mov
aam
aad
xlat
or
cli
in
test
sub
std
mov
push
mov
mov
(bad)
xor
pop
iret
push
mov
bound
imul
pop
xchg
pop
nop
cmp
mov
cmps
or
test
out
inc
icebp
mov
jno
push
cmp
iret
out
xlat
outs
popf
jnp
pop
pop
sahf
out
jle
add
push
out
stc
xor
lods
mov
cmp
ins
lea
and
(bad)
loope
xchg
cmp
jl
cld
outs
push
fdiv
movs
popa
xchg
dec
pop
xor
inc
loopne
sbb
mov
fdiv
xor
mov
inc
jno
lahf
cmp
jmp
add
lds
(bad)
cmp
frstor
scas
scas
stos
icebp
clc
add
pop
jne
mov
(bad)
ins
stc
dec
push
test
cmp
(bad)
mov
fdiv
mov
retf
bound
mov
jae
retf
or
or
cmp
sbb
cmp
jne
ret
cmps
jae
fisttp
sahf
int
jmp
or
je
outs
sub
out
inc
pop
je
xor
xor
mov
movs
pop
mov
shr
ds
retf
icebp
push
inc
pop
pop
jo
dec
pop
push
retf
xchg
shl
popa
sub
cdq
loop
jmp
xor
movs
mov
mov
jmp
cmps
(bad)
sbb
sub
(bad)
clc
and
test
add
jmp
(bad)
xchg
cmp
div
inc
jbe
jecxz
push
fs
inc
(bad)
aam
push
loope
fst
sbb
dec
or
inc
ret
or
pop
mov
mov
mov
clc
loope
call
jmp
(bad)
jge
push
push
cmp
dec
or
mov
(bad)
jns
(bad)
adc
cmp
dec
retf
fist
or
mov
xchg
outs
sbb
in
test
cmps
inc
fisub
mov
sbb
push
rcr
add
mov
xchg
clc
icebp
xor
std
aad
push
adc
add
mov
xor
cs
add
xlat
or
cdq
sbb
inc
push
fcomi
push
sub
arpl
jne
ins
ret
fwait
cmp
popa
sub
imul
sbb
jmp
clc
cmp
sub
movs
into
movs
push
pop
dec
xor
sub
stos
xchg
sbb
xchg
arpl
xchg
jmp
int3
mov
dec
pop
cld
push
push
push
mov
inc
hlt
jbe
clc
out
add
adc
pop
mov
mov
xchg
cmps
pop
adc
out
push
ins
fsub
sbb
(bad)
sbb
adc
mov
jae
xchg
pop
(bad)
cli
fst
pop
loop
movs
xor
pop
sub
int
jmp
xor
jne
adc
mov
pop
lea
pop
stc
pop
inc
inc
(bad)
hlt
push
xor
mov
pop
jmp
dec
pop
mov
sti
sub
pop
xor
lock
jmp
movs
cmps
nop
push
loop
lods
lods
loop
pushf
sbb
jl
mov
es
xor
out
mov
jmp
imul
mov
in
push
stos
cmp
or
inc
push
rol
rcr
mov
pop
loopne
jg
inc
xchg
cmp
mov
add
xchg
push
popa
mov
sub
mov
sar
jo
sbb
add
pop
rol
mov
aad
mov
xchg
xchg
jge
ror
jb
xchg
inc
dec
xchg
and
pop
mov
test
enter
and
jnp
mov
sub
pushf
cmps
div
ja
fldenv
mov
inc
fwait
dec
stc
xchg
push
xchg
jp
sub
mov
push
shr
xor
mov
pop
jmp
leave
popf
sti
jo
das
sub
std
arpl
out
pop
mov
rol
push
mov
pop
popa
(bad)
cld
repz
add
(bad)
and
paddusw
popa
adc
ss
outs
dec
mov
ret
jge
jbe
test
adc
sbb
dec
mov
add
pop
test
arpl
push
not
js
icebp
mov
pop
(bad)
mov
add
jb
xlat
ins
inc
in
mov
imul
push
je
loop
or
sub
pop
ds
jmp
or
scas
mov
(bad)
xchg
mov
mov
cmps
std
jmp
pushf
push
sub
mov
lea
cmp
or
push
loope
scas
pop
push
sub
adc
or
std
push
mov
retf
pop
jno
(bad)
cmps
call
sbb
or
jmp
mov
mov
test
adc
ficomp
push
std
xor
add
pop
xor
sub
test
(bad)
cmp
or
fst
or
aad
xor
test
jmp
retf
or
sub
scas
nop
add
pcmpeqb
fs
mov
test
xchg
lods
fdivrp
jb
icebp
cdq
fld
lods
test
scas
neg
add
cwde
xor
movs
call
aaa
mov
rol
imul
pop
(bad)
lahf
in
inc
jno
sbb
mov
int3
in
into
popa
dec
jne
daa
inc
cmps
add
mov
cmp
sbb
sub
xor
sbb
jb
jne
inc
inc
push
std
dec
add
call
adc
xlat
dec
outs
jno
(bad)
ror
pop
in
neg
fsubrp
test
fnstsw
mov
pushf
mov
(bad)
std
or
retf
add
imul
ins
xchg
loop
mov
das
sbb
jle
out
sbb
cmps
inc
pop
loopne
adc
scas
mov
push
pop
sbb
int
inc
pushf
repnz
pop
inc
sub
push
shl
mov
fld
mov
scas
fidiv
jl
and
cwde
sub
ja
pop
ret
imul
push
mov
add
bound
xor
cmp
ins
or
test
mov
sub
jnp
test
dec
ror
sbb
icebp
shr
inc
xor
in
call
mov
jp
xor
mov
mov
mov
pop
mov
dec
xor
shl
ss
aad
std
mul
jp
inc
pop
dec
push
les
iret
dec
mov
ins
popa
out
(bad)
cmp
xor
imul
icebp
cmp
fcom
cmp
clc
fcom
arpl
test
out
(bad)
arpl
and
xor
(bad)
test
ins
lods
(bad)
sti
js
stos
jmp
sub
fs
bound
inc
aaa
cmp
(bad)
outs
pop
jecxz
in
int3
hlt
jmp
(bad)
add
rcl
pop
adc
jl
adc
or
fidivr
shr
lods
push
icebp
js
jno
jge
lds
aas
lods
sbb
add
iret
inc
out
and
sbb
inc
int
loopne
xor
cmp
push
xor
icebp
outs
dec
inc
push
out
fwait
dec
(bad)
pop
jp
out
adc
ss
sub
jnp
push
jae
lods
xor
imul
les
ret
cmps
loopne
jl
inc
push
cwde
test
dec
jmp
ja
hlt
xchg
aam
sbb
outs
mov
leave
sub
out
jns
imul
inc
mov
sbb
add
inc
mov
xlat
lahf
mov
mov
(bad)
jmp
ficomp
pop
jp
xor
out
div
sbb
(bad)
jmp
xchg
xor
jb
sahf
xor
sbb
mov
cmp
jp
cmc
dec
movs
mov
movs
mov
dec
daa
push
mov
bound
test
test
mov
daa
(bad)
xchg
pop
sti
sbb
pop
dec
mov
fild
idiv
xchg
out
cli
cmps
mov
or
stos
popa
pop
pop
pop
mov
fwait
jae
shr
adc
adc
sub
push
mov
or
dec
mov
and
cmp
sahf
adc
cmp
adc
or
xor
xchg
js
mov
mov
push
popf
pop
loope
xor
sub
aas
dec
xchg
mov
loopne
add
pop
pop
push
sub
mov
(bad)
sbb
lahf
and
sbb
jno
sbb
repnz
loop
jge
inc
lods
add
ret
out
inc
push
iret
loopne
cld
mov
adc
aaa
movs
(bad)
mov
cmp
lods
sub
movs
mov
(bad)
je
push
jg
ss
push
inc
fwait
out
push
mov
call
inc
and
pop
push
stos
dec
mov
addr16
mov
mov
or
xor
pop
repnz
inc
mov
loop
sbb
sbb
inc
mov
(bad)
(bad)
leave
fst
out
int
dec
dec
je
dec
fld
inc
daa
fbstp
inc
or
arpl
fs
in
aad
cmp
(bad)
jmp
bound
xchg
mov
or
inc
test
das
jns
out
scas
add
in
mov
les
loopne
or
cmp
lea
pop
xchg
dec
hlt
(bad)
dec
(bad)
cmp
mov
retf
test
enter
shr
cmp
xchg
mov
jecxz
out
push
loope
jns
(bad)
mov
sub
js
mov
xchg
mov
cwde
rol
cld
mov
repz
or
and
arpl
arpl
push
je
outs
into
ins
aam
jnp
cmp
mov
fdiv
adc
mov
inc
mov
sub
add
shl
add
repz
adc
(bad)
mov
push
mov
pushf
(bad)
jbe
dec
mov
or
and
jmp
and
or
cmp
retf
xchg
xchg
xor
sub
(bad)
mov
outs
sbb
loop
fimul
mov
jl
mov
inc
daa
test
cmp
add
xor
cmp
outs
mov
sub
repz
in
jmp
imul
clc
sbb
jae
xchg
dec
push
cdq
xlat
dec
movs
ja
mov
call
call
(bad)
ds
or
leave
xor
clc
fild
xor
movs
jae
mov
fsub
shl
test
push
icebp
imul
rol
ror
call
psraw
pushf
leave
and
mov
iret
or
mov
ins
sahf
jp
int3
pop
push
add
fmul
ja
std
xchg
xchg
mov
mov
pop
ss
icebp
sub
pop
imul
or
imul
jo
in
pop
xchg
dec
hlt
mov
inc
retf
ds
imul
js
cmp
jne
ror
push
arpl
xchg
jl
retf
sub
push
enter
mov
shl
jp
lahf
std
loop
add
mov
push
adc
and
mov
pushf
arpl
xor
dec
jo
popf
pop
jno
scas
lds
jle
jp
mov
retf
rcr
and
mov
push
mov
test
adc
mov
(bad)
cld
lods
cmp
inc
ins
lock
fcom
adc
push
xchg
aas
adc
sbb
jp
and
aaa
scas
movs
and
fdiv
push
iret
inc
jno
push
jnp
loopne
imul
push
and
push
test
push
out
cmp
pusha
(bad)
(bad)
mov
and
add
and
sub
jge
movs
scas
fld
xor
mov
jl
stc
cmp
push
inc
xchg
shr
enter
mov
stos
shrd
push
sbb
xchg
pusha
pop
jmp
pop
or
ins
push
mov
dec
out
rcr
mov
mov
fsub
call
fadd
sub
jmp
repnz
push
cmp
inc
es
in
(bad)
pop
into
jb
stos
test
scas
loop
fsub
jg
pushf
pop
(bad)
mov
sbb
xor
sub
(bad)
sahf
add
es
sub
lahf
rcr
mov
mov
xor
jl
add
or
ficom
shl
mov
imul
movs
xor
jae
dec
inc
int
sar
(bad)
cld
pop
sub
(bad)
stc
xchg
clc
add
imul
or
cmps
fld
push
fwait
in
jns
stos
div
movs
mov
js
dec
inc
rol
sub
sbb
retf
sub
ds
retf
int3
cwde
pop
pop
ins
mov
shl
jne
push
mov
push
sbb
dec
push
(bad)
adc
mov
sbb
cmp
mov
mov
mov
xlat
inc
jno
mov
sub
outs
gs
mov
les
jg
adc
mov
mov
mov
das
ror
gs
dec
mov
push
add
xchg
jae
fstp
(bad)
fmul
test
inc
imul
test
and
mov
and
push
mov
shl
fwait
in
outs
and
push
loop
cdq
aad
loopne
adc
xchg
pop
mov
ja
jb
add
loopne
push
push
int
mov
test
imul
das
cwde
test
repnz
ins
lds
mov
aas
push
loope
push
fisttp
inc
scas
inc
pusha
(bad)
jnp
sub
nop
neg
arpl
es
fdivr
lahf
retf
sub
dec
mov
in
cli
cmp
bound
outs
retf
push
js
push
jmp
and
or
ja
inc
pop
shl
jle
mov
push
sub
daa
or
xchg
(bad)
popa
inc
in
xor
(bad)
dec
(bad)
hlt
es
scas
mov
test
inc
shl
fld
int3
rol
mov
adc
jmp
je
retf
sbb
arpl
ror
leave
leave
sbb
enter
push
int
movs
bound
push
data16
push
and
and
adc
test
fcom
adc
sar
mov
neg
cdq
mov
pusha
sbb
rol
push
lods
addr16
mov
ja
fwait
icebp
adc
push
xchg
idiv
jp
jle
iret
stos
sub
xor
push
movs
leave
mov
inc
je
daa
mov
retf
xchg
cmp
stos
adc
xor
pop
cmp
ficomp
out
and
or
out
sbb
adc
push
fcmovnb
int3
(bad)
push
or
cs
inc
nop
popa
sub
gs
xor
cmp
icebp
lea
fiadd
lods
mov
sbb
pop
sahf
mov
clc
adc
mov
scas
xor
sar
(bad)
frstor
sub
push
cmp
ds
daa
inc
jmp
(bad)
and
sbb
in
mov
out
and
inc
fidivr
sahf
or
jns
mov
jge
outs
out
aaa
shr
test
fldcw
add
cwde
jo
push
pop
mov
mov
xchg
data16
imul
sub
test
mov
cli
mov
jo
popf
int
mov
xor
ds
fs
pop
fdiv
stos
fbld
mov
iret
aam
sub
dec
sub
xor
cs
or
xor
push
xchg
inc
in
or
iret
xchg
inc
daa
jo
aad
test
leave
mov
pop
daa
fs
(bad)
sbb
sahf
out
xchg
out
mov
loopne
jl
push
in
clc
call
adc
ins
lahf
xor
sbb
add
outs
outs
rcr
sbb
leave
adc
xchg
xor
pop
xchg
aad
push
repz
sbb
jnp
mov
out
push
bound
fadd
mov
lock
loopne
mov
ds
xchg
push
data16
(bad)
jbe
ins
loopne
fwait
rcl
aaa
rcr
push
or
int
sbb
sub
or
add
mov
or
xor
jns
sbb
mov
cmp
mov
add
test
mov
sub
and
mov
(bad)
mov
(bad)
jp
into
mov
scas
sub
xchg
jge
pusha
jmp
(bad)
retf
enter
xchg
imul
enter
rcr
jbe
adc
sub
shl
fnstsw
pop
xchg
outs
and
outs
xor
pop
pop
pop
inc
sub
cmp
pushf
xchg
std
ins
fwait
mov
sar
push
setne
jo
test
(bad)
mov
dec
int
sbb
inc
mov
pop
adc
jo
jmp
and
or
or
nop
out
(bad)
pop
adc
or
cmp
cs
push
js
adc
enter
into
call
push
aam
mov
dec
mov
inc
stos
xchg
int3
cmp
dec
cmp
push
mov
out
outs
jbe
sbb
mov
