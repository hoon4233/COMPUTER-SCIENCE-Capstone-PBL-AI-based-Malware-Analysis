mov
mov
or
mov
xor
ret
nop
nop
nop
nop
nop
nop
nop
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
call
mov
lea
mov
call
mov
mov
lea
mov
mov
call
xor
mov
lea
mov
mov
call
or
mov
mov
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
call
mov
mov
xor
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
mov
mov
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
lea
call
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
lea
push
mov
call
mov
push
mov
call
mov
mov
add
or
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
mov
call
mov
push
call
mov
call
test
je
push
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
sub
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
pop
test
jmp
push
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
cmp
je
lea
call
test
je
lea
call
test
jne
lea
call
test
je
lea
call
test
jne
lea
call
test
jne
lea
push
lea
call
mov
mov
mov
call
test
je
mov
jmp
xor
mov
test
je
and
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
pop
je
call
mov
mov
mov
push
mov
call
jmp
call
mov
mov
mov
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
mov
push
mov
mov
mov
lea
mov
add
test
jne
sub
push
push
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
push
mov
cmp
je
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
cmp
mov
jne
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
push
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
lea
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
mov
call
mov
mov
mov
mov
push
push
push
lea
call
lea
push
mov
call
mov
push
push
lea
call
mov
push
push
lea
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
call
mov
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
xor
cmp
je
push
call
add
mov
call
mov
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
lea
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
call
mov
call
test
je
push
call
add
mov
mov
test
je
mov
call
jmp
push
call
mov
call
test
je
push
call
add
mov
mov
test
je
mov
call
jmp
push
call
mov
call
test
je
push
call
add
mov
mov
test
je
mov
call
jmp
push
call
mov
call
test
je
push
call
add
mov
mov
test
je
mov
call
jmp
push
call
mov
aad
pop
pop
sub
and
fst
jmp
enter
outs
fcomp
mov
(bad)
cmc
int3
in
jge
add
out
int3
sbb
add
cs
push
adc
movs
push
pop
neg
xchg
scas
movs
sub
gs
inc
dec
data16
call
add
jmp
lods
pop
sbb
sbb
(bad)
pop
dec
movs
pop
sub
or
jecxz
out
leave
adc
mov
les
sbb
or
jg
test
add
data16
push
(bad)
dec
mov
shl
rcr
sbb
sti
inc
adc
outs
jns
ins
pop
lds
pop
lods
loopne
add
xchg
pop
push
add
cs
lahf
pop
gs
cli
test
fadd
scas
mov
hlt
sub
cmp
pop
jge
inc
outs
jmp
lds
adc
mov
ret
in
rcl
arpl
popa
stos
adc
adc
xchg
(bad)
mov
or
loopne
cmp
push
mov
fsubp
ds
dec
ja
pop
inc
in
out
lds
mov
dec
jb
movs
dec
and
fimul
dec
and
dec
push
and
bswap
test
in
icebp
sub
pop
jb
jnp
ds
push
dec
punpckhwd
je
retf
rol
adc
ret
xchg
in
aam
pop
daa
mov
dec
ja
add
jl
lods
pop
inc
mov
fnsetpm(287
stos
pop
mov
gs
cmc
inc
inc
sbb
pop
xor
shl
leave
test
fistp
fnstsw
icebp
aas
in
push
jecxz
mov
ins
dec
scas
inc
lds
mov
test
jp
jne
pushf
and
push
inc
dec
xor
jg
dec
xchg
jmp
loope
sub
jecxz
dec
xor
mov
into
dec
cmp
scas
std
jnp
mov
mov
imul
in
cwde
sbb
arpl
push
dec
fadd
mov
std
cld
pop
pop
(bad)
mov
stc
(bad)
in
jns
in
hlt
xchg
add
int
shr
jno
or
jo
stc
push
les
jmp
and
mov
mov
xor
(bad)
xchg
stc
fadd
mov
push
mov
mov
xchg
stos
jnp
dec
loope
mov
dec
retf
in
mov
xor
ja
call
ss
push
push
or
outs
mov
in
add
lahf
test
sbb
and
mov
dec
mov
js
je
popf
mov
xlat
in
sar
jo
in
adc
aas
mov
push
pop
dec
je
(bad)
in
xchg
lahf
cs
imul
or
faddp
test
push
sahf
aaa
inc
dec
aas
sbb
mov
or
stos
(bad)
cmp
inc
adc
and
xchg
lods
jne
imul
pop
or
push
jle
movs
add
add
cmp
or
or
imul
adc
movs
enter
sbb
hlt
pop
push
les
pop
dec
jl
adc
popf
mov
mov
jo
je
test
xchg
cmp
xchg
dec
rol
mov
lods
loope
and
cld
aad
xchg
pushf
or
out
push
adc
bnd
jp
inc
cdq
test
pop
fidiv
movs
and
push
dec
and
test
fs
loopne
pop
jge
add
(bad)
adc
inc
nop
xchg
inc
pop
push
dec
idiv
sub
lock
dec
mov
lods
mov
ja
cld
cmc
xchg
add
cmps
add
imul
adc
mov
pop
test
inc
loop
neg
out
adc
pop
out
jmp
mov
ds
xchg
jmp
pop
ins
test
addr16
lock
cmps
mov
sbb
mov
movs
and
jp
cmp
pop
les
inc
or
gs
add
sbb
jg
out
mov
push
sub
aam
fcom
hlt
jnp
les
test
cld
sub
or
sub
cmp
mov
loopne
cmp
xchg
inc
in
pushw
test
mov
push
and
cmp
mov
adc
jne
(bad)
dec
jge
push
or
adc
test
shr
scas
dec
fisttp
movs
mov
int3
int3
ds
or
jle
mov
in
pusha
das
and
add
into
test
outs
fdivrp
add
cmp
mov
cli
nop
ss
adc
push
cmp
aaa
ins
pop
les
push
xchg
dec
out
mov
enter
cvttps2pi
sub
and
sub
sbb
rcl
inc
pop
fwait
loop
mov
rep
rcl
jl
mov
fadd
sar
stos
js
out
cli
movs
pop
daa
pop
xor
adc
pop
adc
inc
jne
jno
(bad)
btr
scas
leave
mov
cld
and
das
mov
pop
jmp
jbe
in
pop
mov
sbb
aam
(bad)
iret
adc
mov
push
in
dec
mov
xor
scas
jae
retf
pop
shl
inc
dec
xchg
mov
imul
(bad)
pop
jle
jp
bound
(bad)
sar
or
push
lea
and
lods
cmp
or
add
xor
fdiv
int
(bad)
cld
out
push
in
into
int
sbb
fs
(bad)
dec
in
push
loopne
adc
sbb
ds
shl
cmp
(bad)
jne
xor
xchg
stos
cmps
cmp
lock
and
stos
cs
call
outs
enter
out
ffreep
jl
movd
ret
movsx
cmps
and
push
dec
(bad)
icebp
or
xchg
fstp
in
outs
sub
lahf
add
mov
or
dec
(bad)
push
ins
fild
mov
fisttp
ret
cwde
cmps
push
xor
(bad)
movs
ss
mov
mov
cmp
retf
std
mov
add
fmul
cdq
loope
mov
push
pop
inc
push
jl
pusha
lahf
call
sbb
hlt
jmp
or
or
inc
and
out
mov
lds
dec
lock
std
pop
xor
arpl
in
fldcw
adc
mov
mov
jl
sub
movs
add
std
(bad)
shl
or
push
sbb
popf
mov
add
xchg
aam
inc
mov
push
std
rcr
and
(bad)
outs
pop
retf
cli
or
jbe
int3
and
shl
sub
sub
out
outs
sub
sub
movs
cmps
mov
push
in
xchg
or
sbb
leave
cmp
in
hlt
adc
push
std
pop
in
push
mov
sbb
add
and
outs
data16
mov
ss
lock
or
shr
ss
scas
and
mov
pop
test
xchg
clc
cmp
daa
jmp
test
in
repz
into
in
cmp
sbb
pusha
jmp
ds
mov
and
mov
rcr
jnp
xor
cmp
std
aam
std
or
mov
mov
js
push
jmp
(bad)
cmp
cmps
in
mov
sbb
fidiv
mov
loopne
sbb
jne
out
mov
mov
and
jle
cwde
xchg
pushf
mov
mov
into
ins
(bad)
and
movs
lahf
dec
aaa
cwde
sub
sar
xlat
rol
dec
inc
popf
push
sbb
dec
push
push
xlat
push
jmp
hlt
lds
shl
(bad)
out
dec
in
movs
xor
xchg
dec
pop
loopne
mov
cmovle
ins
sub
or
iret
imul
ins
add
repnz
scas
xchg
lahf
xor
push
and
imul
lods
jnp
adc
mov
je
aad
add
pop
ins
jae
jno
in
xor
push
xchg
dec
outs
cwde
ficom
inc
lods
mov
lods
arpl
xor
xchg
mov
sub
popa
jnp
test
imul
mov
jmp
sbb
sbb
and
dec
pop
mov
xor
cmp
jns
add
sahf
aaa
mov
mov
lock
ret
mov
xchg
out
test
jae
test
adc
sub
ja
xchg
inc
pushf
test
sub
(bad)
in
xchg
lods
push
(bad)
mov
psllq
xchg
ja
jbe
or
pop
movs
shr
retf
and
mov
sbb
lea
and
cwde
call
sub
xor
into
push
data16
neg
or
add
ins
popa
push
mov
mov
out
sbb
stos
xchg
scas
mov
std
lods
and
movs
or
mov
cmp
fs
jmp
pushf
sbb
scas
xchg
pushf
sbb
dec
(bad)
int3
xlat
scas
xchg
nop
icebp
cli
pop
aaa
pusha
inc
inc
pop
dec
mov
arpl
or
out
sub
sub
div
jmp
shr
call
fnsave
adc
pop
outs
push
mov
in
in
and
push
test
sbb
dec
pop
xor
xor
mov
and
and
ja
fs
int3
fiadd
push
fs
adc
je
mov
pop
pop
pop
cmp
mov
push
add
mov
es
pop
pop
sub
daa
push
push
in
mov
jp
push
leave
jg
(bad)
lds
push
loope
mov
aam
mov
cmc
cmp
add
cmp
fadd
jmp
sahf
sbb
sbb
rcr
push
outs
add
cld
dec
pop
imul
outs
cmp
sbb
jecxz
dec
movs
outs
movs
push
jg
mov
daa
pop
out
xchg
hlt
jae
mov
lea
rcr
shl
cmps
dec
jle
xchg
popf
cs
mov
les
nop
mov
cmps
rol
sti
cmp
dec
sti
dec
pop
(bad)
fs
mov
mov
aam
das
loope
loopne
xor
outs
je
cmps
test
mov
push
in
idiv
pusha
dec
jne
sti
mov
xchg
push
push
mov
into
sub
lods
xlat
lahf
xlat
push
movs
call
jbe
pop
jne
jle
pushf
out
lahf
ret
push
stos
imul
add
lods
in
inc
inc
inc
cli
clc
or
daa
outs
push
movs
imul
dec
push
jo
loop
mov
pop
cmp
cmp
(bad)
jmp
or
inc
xlat
in
jp
xor
sub
or
std
inc
adc
sbb
pop
add
test
jne
lahf
mov
mov
(bad)
stos
jg
or
outs
inc
rcr
rcr
push
les
push
in
mov
mov
xchg
repz
dec
test
cld
adc
jge
aaa
pop
call
ins
cmc
adc
jb
jns
pushf
mov
jle
mov
int3
sbb
sbb
add
fld
pushf
xlat
xor
out
int3
iret
jmp
mov
dec
mov
mov
cmp
mov
shr
dec
mov
jle
adc
cld
das
imul
adc
int
or
dec
mov
mov
dec
inc
loope
stos
out
adc
and
(bad)
out
mov
ret
cs
fist
mov
cmp
mov
fwait
aaa
sahf
mov
in
push
hlt
lods
ror
fist
jno
sbb
call
push
cwde
xchg
(bad)
cld
xchg
(bad)
xchg
ds
enter
fisttp
stc
pusha
into
ret
cmp
mov
cmp
adc
push
push
cli
xor
push
mov
cs
daa
mov
inc
jg
adc
scas
movs
push
fadd
fcomp
add
int
xchg
out
push
es
jle
pop
inc
mov
popf
xor
stos
fistp
or
add
push
(bad)
sub
dec
jbe
mov
push
add
out
faddp
test
int
add
jle
jp
mov
call
test
lods
dec
pop
test
shl
and
pop
push
add
jo
fdiv
in
push
mov
out
inc
mov
fcom
fisttp
mov
add
push
in
scas
aad
vpunpcklwd
cmp
cdq
out
test
fs
sbb
(bad)
mov
jle
test
les
xchg
in
(bad)
inc
jnp
sub
hlt
jg
ins
mov
xor
outs
add
jmp
cmp
push
jmp
push
fld
(bad)
push
sahf
pushf
lahf
cmc
xchg
push
cmps
mov
in
in
mov
ds
and
pop
fistp
jmp
cmps
dec
or
inc
into
out
jnp
mov
test
and
jg
ss
sub
int3
lods
stos
fild
mov
lds
jnp
xchg
push
sbb
inc
jle
in
fsub
inc
or
aas
ret
iret
(bad)
icebp
(bad)
xor
sbb
movs
lods
cmp
mov
in
mov
jmp
inc
and
add
in
cdq
push
pushf
(bad)
arpl
cmp
cmc
dec
movs
add
jle
cmc
cs
and
xor
mov
and
gs
add
pop
fistp
and
pop
or
push
mov
or
cmp
push
or
xor
sub
loop
mov
adc
ins
jmp
cmp
pop
xor
fmul
dec
sbb
jmp
in
scas
ss
ret
jle
push
adc
push
fwait
movs
lock
ds
xchg
rcl
mov
mov
in
in
push
aaa
and
jl
push
movs
pop
dec
sahf
(bad)
retf
test
das
fs
jecxz
in
push
add
adc
arpl
lock
jmp
xchg
mov
push
pop
movs
mov
leave
jmp
scas
stc
mov
scas
movs
pop
dec
pop
ja
imul
or
call
shr
xchg
mov
adc
sub
pop
das
lock
and
push
or
ins
adc
mov
sub
adc
dec
inc
enter
lea
and
pop
dec
jnp
in
out
repz
sbb
(bad)
(bad)
push
xor
stos
sbb
test
lahf
jae
push
cmp
imul
or
mov
hlt
mov
bound
into
pop
xor
unpckhps
sbb
gs
sbb
cmp
dec
sub
imul
into
fdivr
or
mov
retf
sub
cmp
test
mov
call
rol
cmc
mov
loopne
sbb
test
pop
stos
inc
xchg
inc
dec
sar
jl
jle
mov
inc
sbb
in
mov
or
push
jne
sub
into
inc
add
stos
repnz
std
mov
mov
fmul
add
or
push
cld
inc
lds
jno
aad
sbb
or
sbb
adc
cmp
sahf
ss
scas
jo
xchg
lock
jecxz
xor
fisttp
or
and
add
js
pop
push
lods
mov
clc
xchg
mov
iret
adc
les
mov
jp
mov
jbe
outs
add
jbe
pop
lds
mov
jmp
sub
popf
mov
push
xor
sahf
add
mov
xchg
lods
dec
pop
dec
cld
pop
mov
cmc
mov
dec
sub
dec
push
xchg
fist
cmp
pop
test
mov
(bad)
jl
mov
or
dec
push
mov
and
call
movs
fsubr
(bad)
fsubrp
js
out
jg
call
cld
(bad)
mov
fs
fmulp
and
into
in
enter
mov
imul
inc
sub
loop
scas
inc
push
jle
xchg
ins
push
or
cmps
pop
movs
popf
sub
gs
scas
(bad)
fdiv
scas
lods
ficom
scas
sbb
dec
gs
push
or
scas
push
iret
inc
sbb
(bad)
popa
fist
out
aas
jno
cdq
fs
mov
add
pop
adc
jmp
fimul
data16
ins
mov
sahf
and
add
test
nop
lods
(bad)
leave
mov
xchg
dec
and
dec
mov
pop
pop
scas
dec
popf
xor
xchg
int
in
or
dec
adc
jnp
pop
xchg
xor
mov
jne
ret
lods
and
aad
or
push
push
(bad)
loopne
push
push
jbe
mov
lods
pusha
mov
dec
inc
jge
pop
(bad)
mov
jo
cs
sbb
addr16
inc
pop
or
mov
fisttp
cmps
push
out
and
cmp
and
xlat
iret
pop
outs
enter
dec
imul
cmp
fcmovnbe
jb
xor
fucomp
inc
fistp
sub
pop
jbe
sahf
inc
movs
inc
mov
ins
sbb
mov
aaa
jmp
jbe
js
je
pop
fisubr
sub
out
outs
push
daa
(bad)
sbb
das
adc
sub
or
mov
fmul
test
out
leave
mov
dec
fild
bound
iret
daa
adc
add
fwait
cmp
mov
movs
adc
jne
(bad)
les
inc
sub
(bad)
in
ret
int3
lds
and
outs
popa
daa
sub
es
xchg
jno
inc
push
or
or
adc
hlt
(bad)
sbb
adc
or
bound
dec
into
out
sahf
mov
cwde
out
aam
hlt
mov
scas
ds
mov
inc
shl
call
movs
xchg
xor
imul
repz
jns
pop
cmps
ret
fsub
mov
dec
xchg
rol
lds
fisttp
loopne
pop
in
fiadd
pusha
movs
test
movs
lds
in
(bad)
push
xor
movs
sbb
sub
fisttp
repz
xor
add
mov
scas
jns
and
test
iret
(bad)
(bad)
and
pushf
sahf
out
stc
lds
xchg
adc
push
mov
jp
cs
push
pop
inc
push
ss
loopne
stos
aam
push
scas
xchg
or
call
xor
xchg
ficomp
pop
test
cmp
fwait
in
in
adc
push
stos
and
pop
or
inc
jnp
xchg
and
jg
repz
shr
ss
sbb
outs
inc
and
pop
test
dec
fs
daa
popa
nop
jecxz
outs
scas
cwde
xchg
dec
daa
add
rcl
adc
push
loope
movs
jmp
pushf
inc
ror
fiadd
(bad)
pop
shr
sahf
test
xchg
sub
xchg
or
dec
pop
mov
loopne
adc
neg
cmc
sbb
je
pop
out
ret
lea
jo
in
aam
cmp
push
fsin
shr
cmp
sbb
mov
pop
jg
and
(bad)
jp
mov
ror
call
mov
dec
arpl
es
ins
pop
xchg
je
xor
inc
xchg
or
js
xchg
dec
icebp
lds
mov
cld
sub
ins
das
fld
ficom
sub
in
fst
mov
out
and
sbb
dec
adc
mov
ficomp
xchg
movs
gs
(bad)
jno
dec
idiv
int
jo
movs
shl
jp
int3
(bad)
int3
inc
stos
dec
pusha
mov
out
call
into
pop
pop
stos
mov
jg
cs
ins
mov
push
ins
gs
call
fadd
(bad)
cmpxchg
xchg
add
pop
ret
mov
mov
imul
into
hlt
mov
xchg
int
mov
out
xor
add
jb
mov
out
cmp
outs
in
inc
stos
mov
shr
repnz
movs
and
push
sar
pop
mov
das
jp
add
push
mov
inc
mov
pusha
pushf
outs
mov
or
clc
ins
mov
pop
fcom
xchg
(bad)
lock
adc
in
sbb
lahf
jne
adc
add
cmp
xor
pusha
jge
movs
out
inc
mov
xlat
stc
mov
dec
sbb
adc
mov
dec
add
mov
dec
pushf
mov
rcr
(bad)
loop
fldcw
cld
xor
mov
adc
push
nop
mov
in
mov
jne
in
xor
push
add
push
movs
push
xchg
movs
mov
mov
sbb
into
jg
adc
cmp
pop
gs
dec
xor
xlat
mov
shl
cli
hlt
or
loopne
data16
movs
pop
mov
test
cmc
int3
inc
into
(bad)
fild
dec
add
sbb
dec
sub
sub
lods
arpl
(bad)
pop
pop
std
mov
push
ss
lods
cmc
es
push
jecxz
cmp
mov
scas
movs
scas
add
out
mov
push
ret
pop
imul
pop
dec
sar
movlhps
(bad)
lods
(bad)
adc
push
out
aas
aas
into
or
outs
fcomp
ror
add
leave
test
jnp
sahf
and
push
jne
lock
ss
std
div
inc
xlat
aaa
in
mov
in
pop
mov
mov
ret
stc
sub
out
sub
test
fcom
outs
stos
mov
and
sub
mov
addr16
jecxz
push
fdiv
movs
add
int
lahf
mov
xchg
js
icebp
movs
jnp
sbb
cmp
pop
sbb
or
fistp
mov
mov
aam
fisub
in
(bad)
scas
aaa
(bad)
push
imul
xchg
shl
cwde
xchg
cwde
shl
jl
cmp
hlt
icebp
and
or
jnp
inc
es
pop
add
outs
add
mov
(bad)
shl
cmp
call
adc
jo
test
outs
xrelease
jmp
ret
push
sub
sbb
retf
icebp
seta
xchg
mov
pop
arpl
fiadd
dec
cwde
popf
xchg
(bad)
mov
lods
ins
in
je
(bad)
jl
and
mov
sub
(bad)
dec
xchg
arpl
xor
xchg
(bad)
repz
mov
mov
inc
mov
pop
aad
push
mov
test
es
fcom
fcmovnbe
push
push
sahf
jg
ja
lds
sbb
push
cld
push
xlat
stc
jecxz
or
retf
or
daa
dec
xor
add
jle
ret
mov
test
in
mov
je
jmp
les
aas
pop
shr
add
pop
addr16
mov
jo
enter
push
sti
aad
sti
stos
jno
xor
pop
movs
test
ins
ins
lahf
gs
stos
mov
retf
cmp
dec
or
sub
xchg
cmps
mov
pop
(bad)
push
test
pusha
hlt
push
pop
jg
rol
cmp
inc
test
xchg
mov
dec
fcomp
cli
retf
adc
in
mov
and
xchg
pop
into
mov
lea
add
jmp
outs
mov
and
push
in
pop
(bad)
pop
adc
in
jbe
ret
adc
adc
sahf
inc
lock
add
inc
pop
les
push
push
dec
mov
jae
jbe
sar
pop
(bad)
xor
cdq
je
pop
jl
icebp
or
adc
ffree
and
(bad)
sahf
movs
adc
mov
dec
adc
pop
jge
add
mov
sbb
sbb
ja
jmp
inc
and
int
es
iret
lods
popf
cmp
pushf
lods
addr16
lods
cld
add
mov
dec
sub
test
jge
cld
mov
mov
lock
aam
xchg
test
test
and
dec
add
xchg
sub
xchg
aas
sub
out
jmp
mov
ja
push
or
sub
and
pop
dec
adc
xor
mov
dec
mov
or
or
adc
in
adc
aaa
pop
inc
xchg
mov
jns
outs
inc
pop
push
mov
push
sub
fsub
call
imul
xchg
pop
sub
(bad)
outs
inc
push
adc
rol
adc
dec
test
mov
dec
es
adc
jmp
(bad)
xchg
cli
aaa
aad
shl
(bad)
mov
sbb
cmps
cs
add
xor
(bad)
jg
xor
int
aam
fistp
or
outs
cmp
push
pop
sub
into
cmps
dec
sub
not
(bad)
pop
sbb
cmps
outs
out
dec
or
adc
dec
xchg
inc
pusha
cmp
push
in
movs
adc
sti
sbb
outs
sbb
pop
(bad)
sub
xor
mov
xor
adc
imul
fs
push
into
mov
sbb
into
ds
out
cmps
mov
std
jb
mov
mov
rcl
or
pop
ja
fnsave
cdq
push
inc
rcl
inc
fistp
jne
sub
ins
scas
cmc
adc
icebp
aad
out
jbe
ins
push
in
cld
xor
pushf
dec
or
aaa
mov
inc
aas
iret
cmp
(bad)
cmps
cmc
xchg
popf
xchg
cmc
add
nop
cmc
scas
movs
and
lock
inc
inc
add
mov
pop
jne
test
xor
cmps
pop
adc
out
push
mov
cmp
(bad)
dec
enter
and
leave
or
out
in
loopne
xchg
lea
dec
or
imul
push
xchg
mov
xchg
test
stc
sub
(bad)
rol
out
or
sbb
test
or
mov
loope
or
leave
cld
push
or
test
or
fidivr
mov
jge
in
dec
(bad)
sar
push
dec
or
or
stos
mov
pop
push
or
push
(bad)
and
enter
popa
cld
es
retf
sub
jle
push
sub
jg
imul
sbb
cmp
call
mov
xchg
ds
aad
sub
ds
lea
jge
inc
int
adc
sub
sar
mov
or
cmps
jne
not
cmp
inc
adc
xchg
sbb
sahf
mov
lea
outs
sub
dec
and
outs
lea
lods
fwait
xor
fild
loop
ja
cs
xor
scas
jl
outs
popf
cmps
dec
pop
data16
add
aaa
mov
mov
adc
popf
das
adc
inc
sub
inc
inc
mov
sbb
push
mov
and
mov
mov
push
mov
and
std
lock
test
jnp
ss
iret
and
ror
stos
cld
jne
dec
outs
xchg
jle
cmp
and
dec
push
in
mov
movs
std
test
into
push
in
aad
jne
sub
cmp
sub
fidiv
scas
push
mov
push
retf
cmp
in
or
ins
xchg
cmp
sub
xlat
icebp
aas
(bad)
jl
scas
fdivr
add
rcr
jne
push
js
sub
push
popf
das
gs
mov
add
mov
in
mov
sbb
unpcklps
test
xor
push
and
lods
and
(bad)
xchg
fisub
outs
cmc
add
or
mov
jle
pop
jge
add
mov
dec
sub
push
mov
push
scas
stos
inc
std
(bad)
fisub
jb
movs
jmp
scas
mov
fwait
mov
xchg
(bad)
ffreep
or
aad
dec
adc
scas
das
cmp
jp
mov
mov
and
jns
jae
out
ins
cmp
sahf
jmp
loope
mov
push
xor
pcmpeqb
scas
add
xchg
(bad)
das
jecxz
arpl
das
and
in
imul
inc
fistp
into
not
pop
jno
out
jne
adc
inc
dec
add
mov
fiadd
pushf
xor
jle
mov
push
(bad)
out
and
add
sub
xchg
fsubr
dec
scas
(bad)
not
inc
out
ret
pusha
retf
adc
mov
and
sub
sbb
pusha
cmp
out
(bad)
out
dec
adc
pop
pop
sub
pop
movs
ficom
neg
outs
mov
scas
(bad)
in
(bad)
in
icebp
or
ds
cwde
pusha
xor
dec
mov
lds
ret
stos
add
adc
mov
mov
mov
inc
rdpmc
repnz
xchg
jbe
imul
pop
aam
(bad)
adc
add
inc
jecxz
mov
jmp
xor
popa
jo
cmp
retf
xlat
icebp
aad
lds
test
xor
fisubr
mov
xor
stos
and
sbb
sub
ins
sbb
push
hlt
add
xor
aam
lods
out
jp
lahf
add
mov
outs
in
xor
dec
aam
or
std
mov
mov
js
or
fnstsw
sub
je
in
ds
out
rol
and
jecxz
aad
aad
les
out
out
pop
jno
pop
adc
jge
gs
inc
dec
fld
addr16
adc
aaa
mov
int3
push
mov
je
(bad)
sub
bnd
ss
rol
mov
into
outs
inc
push
cmc
cmp
out
movs
push
icebp
xchg
jne
pop
dec
jnp
aad
add
ins
xchg
fdivrp
leave
aam
pop
adc
outs
pop
test
(bad)
outs
lea
push
sbb
enter
std
inc
lea
xchg
sbb
int3
lods
push
adc
cmc
scas
cmps
popf
push
shl
pop
je
(bad)
js
js
mov
movs
mov
ret
jns
push
push
push
mov
fld
frstor
push
lods
repz
cwde
push
test
pop
outs
fwait
add
cmp
(bad)
pop
rol
cmp
aaa
add
push
push
loop
adc
jmp
hlt
cs
xor
pop
jne
outs
out
ds
xchg
cmps
sbb
push
lods
mov
icebp
or
aas
stc
xor
push
mov
outs
cs
sbb
dec
pop
sar
dec
adc
add
mov
fwait
adc
adc
in
xchg
out
xor
arpl
leave
and
push
out
push
daa
cmp
aaa
test
jae
pop
loope
push
dec
ins
xor
push
push
cdq
aad
pushf
(bad)
adc
add
ja
shr
mul
and
push
or
lahf
rcr
push
xchg
jmp
test
je
adc
dec
retf
popf
ins
push
(bad)
test
sti
out
adc
cmp
or
icebp
push
cmp
in
arpl
mov
mov
fnstsw
in
cli
cmc
outs
ror
jne
test
gs
sbb
imul
mov
imul
mov
dec
xor
dec
aad
jmp
xor
aas
mov
jbe
repz
rcr
test
jmp
hlt
stc
mov
mov
int3
pop
and
mov
add
mov
and
push
inc
enter
and
dec
es
push
push
call
out
out
jo
scas
or
xchg
int3
xor
enter
push
mov
outs
adc
aam
adc
mov
lock
stc
outs
stos
xlat
pushf
push
sub
xor
jecxz
mov
imul
clc
ret
mov
lods
(bad)
fwait
(bad)
hlt
push
xchg
dec
movs
pop
lock
and
aaa
das
pop
mov
into
lea
cmps
neg
not
pop
xchg
pop
xor
test
(bad)
(bad)
repnz
ret
icebp
bound
xor
jmp
(bad)
jp
dec
inc
xor
cmps
xchg
jne
sbb
sbb
movs
push
add
ins
mov
mov
popf
data16
fidivr
and
jns
hlt
in
or
inc
mov
cs
push
push
into
adc
scas
xchg
aam
inc
lock
push
(bad)
repz
mov
movs
push
outs
cs
popf
mov
jne
inc
pop
and
call
std
movs
ds
mov
hlt
dec
repz
pusha
push
cmps
xchg
jle
dec
mov
xchg
sahf
xchg
mov
ror
popa
and
pop
xchg
rcl
cmp
mov
imul
mov
imul
push
aas
test
or
jl
sub
je
cmp
and
rol
sub
stos
std
adc
inc
cmp
(bad)
jne
call
xchg
jb
rcl
inc
rol
(bad)
jmp
sub
(bad)
cdq
movs
stos
xchg
les
ins
push
(bad)
jne
stc
inc
cmp
lods
outs
arpl
sbb
(bad)
mov
inc
mov
jo
pop
add
into
adc
or
div
pop
mov
sbb
jmp
mov
push
fsubr
pop
ja
or
inc
pop
push
jno
mov
or
pop
fiadd
adc
pop
and
imul
jmp
pop
xor
inc
jne
popa
lahf
test
lahf
mov
outs
jle
pop
loopne
enter
cmp
lods
xor
sgdtd
inc
xor
mov
lahf
cdq
mov
mov
cmp
mov
mov
push
add
xchg
call
fs
ds
loopne
shl
pop
xlat
lock
stc
sub
xchg
push
shr
fadd
xchg
ror
add
and
mov
out
jns
into
js
jns
and
ja
fnstsw
je
push
or
out
lds
call
add
push
leave
aas
fld
or
je
xchg
push
in
push
(bad)
data16
lahf
dec
ins
lahf
jp
inc
neg
shr
pop
xchg
dec
push
pcmpeqd
adc
or
pop
mov
push
and
les
xchg
pop
and
mov
jmp
inc
sub
dec
gs
xchg
fimul
add
clc
pop
cmp
imul
xchg
jbe
mov
jmp
fdivr
cli
cdq
sahf
xor
movs
fld
sub
jle
jae
lea
jae
aaa
dec
xchg
cmps
cs
scas
sub
ucomiss
cld
ss
mov
loop
scas
daa
dec
push
mov
into
adc
adc
fsub
sub
je
lds
ficomp
dec
int
xlat
cwde
mov
push
mov
inc
sbb
or
ins
push
stos
or
loope
fiadd
mov
lahf
cs
and
xor
adc
lock
mov
dec
into
dec
jbe
in
mov
pop
sub
jg
cmp
xchg
adc
into
inc
and
dec
inc
fcomp
sub
mov
inc
push
retf
xlat
imul
jl
mov
int3
jno
sbb
std
stc
movs
outs
jbe
push
push
shr
xchg
iret
push
jne
jne
mov
(bad)
stos
xor
jl
mov
mov
push
call
jg
jecxz
(bad)
out
mov
ins
shr
scas
xchg
cs
adc
sbb
adc
xchg
sub
add
ret
sbb
test
jae
les
call
cmc
cmp
add
call
cmps
aam
test
jl
int
adc
mov
fs
push
es
pusha
cdq
lock
mov
loopne
dec
sbb
xor
pusha
mov
pop
inc
or
fld
sahf
repz
das
dec
inc
aaa
mov
sub
and
cli
(bad)
mov
sub
lahf
mov
lahf
(bad)
std
arpl
es
sub
das
dec
push
movs
mov
ror
jo
pop
(bad)
lods
push
dec
loopne
lea
xchg
jns
or
pop
jp
ds
xchg
xor
out
push
sub
(bad)
in
push
pop
out
or
mov
pop
pop
adc
cmp
jo
sahf
or
cmp
daa
pop
pop
out
jb
push
jnp
push
xchg
mov
daa
int3
mov
out
out
jg
or
inc
jno
cmps
xor
ficom
test
xchg
ja
pushf
mov
sahf
pop
enter
inc
jmp
xor
pop
push
dec
lods
pushf
jno
gs
sub
jle
imul
xor
out
xlat
xor
gs
push
inc
ins
jo
out
cmp
jge
hlt
lahf
and
rol
cli
enter
sbb
dec
mov
inc
mov
js
fdiv
cld
movs
jo
in
sub
mov
dec
les
inc
jg
ja
(bad)
push
jecxz
pop
pop
and
sub
xchg
add
sub
int
call
pop
push
xchg
popf
xor
pop
sub
cmp
ja
push
out
push
iret
lds
ins
pop
inc
fcomp
xchg
and
pop
pop
jge
not
and
adc
dec
pop
popf
mov
jg
js
inc
xchg
jmp
dec
popa
sbb
jg
(bad)
jmp
push
xchg
adc
pop
cs
dec
pop
xchg
jg
jne
rol
ja
aaa
xchg
shl
daa
xchg
push
loopne
or
cmp
sbb
mov
(bad)
in
repz
sbb
mov
cwde
xlat
jo
and
lds
dec
jnp
pop
in
adc
xchg
pop
dec
(bad)
sub
and
hlt
sti
push
xor
jae
(bad)
dec
xchg
mov
lds
adc
mov
outs
div
inc
gs
push
jo
or
add
(bad)
repz
or
fidiv
inc
and
lods
cmp
mov
iret
mov
jns
dec
mov
popa
mov
jo
fs
inc
std
mov
retf
xor
push
push
jge
pop
jns
test
jo
inc
mov
rcr
stos
xor
pop
inc
or
push
jne
int3
push
xchg
fimul
mov
cmp
in
adc
in
inc
rol
retf
clc
fidivr
popa
mov
add
pop
pop
in
cs
ror
fld
out
repz
mov
int
call
(bad)
pop
repz
mov
std
add
push
jbe
lock
lods
jp
mov
mov
sbb
mov
aad
and
sub
dec
in
mov
js
test
lds
mov
ss
adc
stos
or
cli
pop
arpl
imul
outs
add
retf
pop
xor
in
lods
mov
rol
stos
rcl
sub
pop
div
mov
call
push
sbb
(bad)
cmp
in
inc
cmp
adc
scas
mov
or
in
mov
xor
xchg
idiv
push
nop
popa
add
and
std
cld
out
pushf
jmp
adc
cmp
(bad)
adc
mov
sti
mov
push
mov
mov
mov
(bad)
bound
mov
cmps
cmp
popa
popf
dec
lea
jmp
outs
add
out
mov
and
inc
gs
xchg
call
ins
jge
add
mov
popa
lods
inc
jns
sub
jne
add
sub
or
ficom
fwait
jmp
or
push
push
inc
pop
adc
cmp
push
dec
(bad)
idiv
sti
and
mov
inc
cmps
mov
cli
sbb
adc
mov
and
cld
cmp
in
or
int3
stos
push
(bad)
shr
xchg
in
outs
jle
movs
cmp
push
ins
out
test
ss
mov
les
call
idiv
scas
mov
popa
jle
jg
test
xor
fwait
and
dec
hlt
retf
mov
lods
aam
sub
ds
pusha
test
pushf
div
and
stos
mov
out
jbe
adc
xchg
pop
push
xor
scas
call
(bad)
adc
pop
int
dec
mov
cwde
pop
add
jg
rol
jbe
mov
pop
xor
dec
scas
push
(bad)
adc
sbb
pop
mov
cmps
inc
(bad)
push
mov
xor
xor
fidiv
cli
pop
cwde
ret
dec
sub
mov
jl
pushf
(bad)
inc
inc
push
xor
mov
or
mov
cld
sub
inc
je
into
(bad)
fdivp
xchg
int
sahf
lock
rcl
movs
and
fisub
clc
dec
std
std
imul
and
nop
mov
cmp
pop
mov
xor
loop
leave
retf
xor
test
out
ins
sbb
sti
ret
fcomp
in
xchg
lds
and
jae
mov
imul
mov
sbb
adc
cli
out
stos
adc
gs
fisub
push
movs
ret
fdivrp
mov
jmp
sahf
add
ins
fs
dec
inc
(bad)
and
adc
arpl
aad
faddp
push
iret
pop
xchg
mov
daa
pop
mov
jl
cmc
xchg
mov
pushf
jno
mul
shr
cs
mov
pop
lods
clc
pop
mov
push
cmovo
in
mov
pusha
xchg
aad
in
loope
push
cmp
lea
inc
test
mov
mov
popa
push
loope
cmp
popf
shr
ret
xor
(bad)
es
sbb
fisttp
imul
shr
test
movs
dec
in
mov
mov
and
mov
stos
fs
push
loop
mov
adc
scas
loope
stc
and
inc
outs
add
call
lods
mov
std
lods
cmps
(bad)
sbb
icebp
ins
or
inc
pcmpgtw
mov
out
not
jnp
mov
repz
mov
scas
mov
enter
sbb
aas
sbb
cmp
(bad)
jbe
and
xchg
or
mov
pop
imul
cwde
pop
push
push
sar
and
lods
fptan
pmaxsw
adc
jg
push
mov
xor
xchg
sbb
add
les
jle
idiv
int
dec
xlat
push
repnz
lods
pop
lods
aas
xor
cmps
dec
ins
push
out
add
fdivrp
scas
sub
test
ror
sti
lods
or
sbb
xor
in
pop
jg
mov
pop
push
fisttp
ret
xchg
cmp
jne
xchg
xchg
test
das
ins
push
pop
ja
mov
pop
repnz
imul
inc
cmc
mov
(bad)
scas
test
jp
sub
dec
add
add
lock
(bad)
test
test
xor
dec
push
cmp
xchg
dec
mov
and
ficomp
ret
xor
mov
sub
fist
adc
js
xchg
jle
test
jno
rcr
fs
sbb
loop
add
mov
add
div
dec
fs
jmp
popf
mov
push
adc
cmp
in
bound
xor
jmp
fdiv
int
ficomp
outs
clc
dec
jae
out
inc
xor
retf
sub
ds
pop
in
(bad)
mov
push
in
push
pop
push
jo
pop
adc
(bad)
repz
fdiv
int
faddp
daa
xor
adc
adc
mov
mov
iret
mov
out
imul
xor
aas
inc
scas
(bad)
ins
xor
adc
stc
in
stc
icebp
pop
in
adc
mul
pop
and
cmp
(bad)
mov
(bad)
xchg
(bad)
fstp
add
imul
scas
fdivp
int3
jle
in
add
pop
mov
adc
mov
icebp
stos
add
fwait
jle
jg
test
mov
xor
js
outs
pop
fld
mov
sbb
cs
sub
xchg
mov
outs
xor
les
addr16
(bad)
sti
test
push
add
pushf
je
push
and
vmaxsd
add
sbb
push
fwait
pop
or
lods
pop
outs
sahf
outs
stos
mov
xchg
sbb
xor
ds
cmps
daa
outs
dec
lds
mov
mov
or
rol
cmp
xor
adc
call
push
inc
ja
test
fld1
into
les
xor
push
(bad)
cwde
xor
dec
and
push
adc
sbb
enter
loope
jno
out
iret
push
mov
jl
xor
add
jb
jmp
hlt
test
cmps
sahf
fsub
mov
cmp
push
adc
pop
mov
pop
mov
icebp
pusha
sbb
xchg
cmp
and
pop
dec
imul
jno
push
ror
fistp
pop
jmp
aam
stc
lahf
cmps
neg
pop
je
push
out
inc
iret
add
cdq
cmc
int
mov
and
aam
aad
hlt
aam
cs
jb
dec
jl
arpl
retf
jl
out
xchg
test
or
fadd
adc
push
je
xchg
and
lds
xor
out
push
mov
mov
sbb
fisubr
sbb
imul
hlt
test
neg
mov
movs
cmp
(bad)
(bad)
mov
pop
add
add
call
jo
jne
add
cld
adc
inc
adc
cmp
jbe
fs
push
lock
or
mov
jle
mov
fdivr
jo
imul
sub
into
mov
xchg
sar
jmp
push
pop
push
fs
popf
pop
lahf
xchg
xchg
fcomp
data16
lods
xchg
lahf
int3
or
push
gs
and
jl
jle
movs
dec
aas
sti
and
shr
fld
and
popa
ja
pop
xchg
pop
pop
test
int3
cmc
push
ret
jne
mov
jecxz
dec
test
xor
xor
pop
xor
mov
sub
je
sbb
aad
pop
jmp
push
pop
jmp
arpl
je
ja
lods
or
scas
fs
or
pop
(bad)
leave
aas
out
mov
push
dec
mov
mov
add
pop
pop
mov
mov
jno
sbb
(bad)
sub
xchg
sub
(bad)
xchg
push
lods
ds
(bad)
push
mul
or
or
or
mov
pop
idiv
(bad)
loope
loop
mov
push
out
arpl
inc
movs
fcom
stos
sub
ja
hlt
add
int
clc
mov
das
push
mov
stos
out
mov
push
or
mov
popa
jae
sub
fist
cmp
jae
jl
outs
jne
ret
inc
xchg
outs
dec
popa
rol
pop
sti
inc
xor
ds
imul
add
cwde
push
outs
je
ins
inc
cs
gs
mov
stos
test
inc
mov
into
bound
std
pop
in
adc
pop
lock
js
mov
add
ds
push
les
xchg
inc
dec
jne
sub
jmp
sbb
cmc
aaa
test
test
xor
inc
mov
mov
add
fsub
aaa
cli
xchg
outs
sub
inc
pop
and
aad
inc
jbe
fmul
in
cmp
push
push
pxor
push
scas
je
and
push
xchg
push
fldcw
or
xor
enter
std
loope
adc
sub
inc
push
sbb
jns
(bad)
outs
les
adc
std
cs
dec
in
loopne
sub
(bad)
scas
addr16
ins
aaa
mov
xchg
aas
adc
(bad)
neg
cmc
cs
or
sub
push
std
push
sbb
add
inc
aad
mov
pop
out
(bad)
mov
aas
or
hlt
popa
mov
xchg
mov
mov
sbb
enter
mov
mov
push
outs
aam
je
jbe
cdq
jmp
xor
add
or
push
int
xor
not
dec
loopne
outs
xor
imul
adc
cmps
les
movs
and
sbb
mov
or
in
in
xchg
and
dec
es
(bad)
mov
rcr
out
lods
cmc
push
cld
jo
and
push
jmp
xchg
cwde
stos
add
push
cmps
cmp
aas
cmp
mov
inc
sub
fs
ror
loop
push
push
fld
out
shl
push
push
dec
jns
jmp
fisub
out
shl
pop
push
sbb
gs
aas
xchg
ins
test
add
movs
or
imul
bound
jmp
jle
cwde
xchg
or
xchg
popf
push
popf
inc
xor
scas
sub
and
loop
adc
pop
push
mov
adc
hlt
jp
iret
adc
es
and
xor
in
test
or
or
stc
cli
or
inc
retf
xchg
mov
jnp
cmc
ds
movs
enter
out
fwait
dec
cdq
inc
popf
outs
leave
pop
stc
inc
adc
(bad)
cli
or
push
pusha
dec
es
pextrw
mov
adc
pushf
outs
mov
adc
add
jmp
jg
(bad)
add
test
aaa
dec
jge
pushf
jne
mov
push
add
call
and
hlt
dec
push
push
bswap
mov
(bad)
mov
xor
mov
push
das
sbb
adc
mov
popa
adc
pop
dec
stos
in
les
sbb
sahf
out
ja
out
ins
xchg
dec
push
inc
cmp
mov
dec
dec
sbb
pop
mov
push
mov
push
mov
or
pop
sar
adc
fdiv
cmp
(bad)
mov
jp
or
jb
xor
pop
test
test
imul
ds
pusha
outs
mov
jecxz
xor
adc
mov
fcom
out
pop
push
adc
add
inc
push
sbb
sub
xor
nop
mov
and
ror
test
es
inc
dec
mov
jmp
fcmovbe
aas
stos
pop
xchg
lods
cld
push
xlat
ins
in
adc
out
fstp
inc
inc
out
cmp
mov
int
outs
ja
cmp
out
jecxz
aaa
fbstp
mov
sbb
movs
pop
stos
scas
xchg
sbb
fiadd
stc
jo
mov
push
push
mov
and
mov
push
push
test
inc
mov
add
or
push
mov
jae
and
ds
lahf
jbe
xor
out
xchg
call
xchg
mov
mov
add
in
mov
xor
push
or
out
sbb
jl
dec
sub
cli
loope
add
and
sbb
dec
adc
xor
shl
std
call
pop
mov
hlt
mov
adc
(bad)
scas
es
inc
jg
ins
jne
gs
mov
inc
xor
mul
xchg
bound
jg
retf
je
mov
outs
call
pushf
xchg
test
lock
int3
ss
gs
mov
pushf
jo
and
sub
dec
mov
cmc
mov
mov
mov
mov
fistp
outs
jg
push
pop
cmc
into
sub
adc
mov
lea
or
ins
neg
add
(bad)
das
(bad)
pop
push
xchg
js
in
mov
aaa
ins
xor
jno
fwait
jb
cmp
cmc
or
clc
xor
cmp
and
lock
pop
not
mov
push
test
(bad)
sub
ror
es
mov
sub
inc
add
xchg
ins
mov
imul
scas
fstp
(bad)
pop
cli
mov
in
and
pushf
xchg
out
lods
scas
repz
push
pop
shr
or
or
and
fistp
fcomp
pop
xchg
(bad)
sub
cmp
inc
gs
mov
sahf
sub
add
or
outs
push
les
dec
lds
std
fcom
repnz
in
in
rol
lods
push
mov
bt
add
cmps
xor
outs
cmps
icebp
and
adc
inc
mov
(bad)
sub
leave
rol
scas
mov
xchg
repnz
js
push
fcmovne
adc
and
shl
adc
xchg
movs
stc
push
popa
shl
and
cmp
or
adc
xchg
fdivr
scas
or
into
test
xor
jp
mov
lods
sar
xor
je
and
loopne
or
xor
cmps
(bad)
leave
test
mov
add
mov
scas
cmp
add
movs
in
mov
or
lods
lahf
dec
or
pop
xchg
push
out
test
loope
ins
dec
dec
sahf
movs
fsub
adc
adc
push
xchg
jns
push
test
test
popa
push
inc
pop
mov
jmp
movs
and
cmp
in
movs
jp
inc
sbb
in
fwait
xchg
ins
add
cmp
xor
inc
add
dec
mov
pop
(bad)
ins
outs
jb
ja
mov
cli
cmc
fdivr
or
test
jne
or
xchg
fadd
popa
sub
sar
fsub
fist
lds
scas
sub
pop
adc
out
jns
xor
inc
(bad)
jne
pusha
(bad)
ds
test
gs
lds
lods
test
daa
adc
push
movs
je
fcom
cmc
mov
cwde
loopne
pop
scas
aad
push
dec
and
or
jne
push
pop
push
cmp
adc
xchg
and
mov
adc
cmps
cdq
ins
gs
in
iret
outs
data16
sub
push
pop
xchg
imul
push
lea
into
pop
jb
int
lea
push
xor
in
repz
or
pop
pop
scas
mov
sbb
cmp
aam
iret
add
sahf
stos
push
movs
jbe
pop
or
xchg
out
push
out
push
and
pop
mov
push
adc
stos
movs
sbb
fiadd
ja
out
(bad)
ror
jmp
cmp
and
xchg
jge
mov
or
jg
in
mov
std
mov
mov
mov
xor
and
fld
jo
mov
popf
test
shl
jecxz
adc
outs
jl
aam
dec
pop
in
xchg
mov
fidiv
(bad)
fwait
int3
out
mov
push
xor
xor
push
(bad)
(bad)
push
mov
cld
push
inc
jnp
test
adc
cmps
inc
jl
push
add
mov
daa
add
mul
xor
cwde
pop
in
xor
ror
mov
and
xor
mov
scas
loopne
movs
add
and
jmp
cmp
push
and
lods
ja
sub
jle
adc
cli
call
loopne
adc
cmp
dec
shr
retf
nop
aad
mov
aas
xchg
pop
and
and
mov
xor
fwait
push
mov
outs
mov
xchg
push
pop
xchg
push
das
(bad)
clc
iret
sbb
in
push
aas
mov
scas
aaa
add
int
jne
dec
mov
jne
aaa
push
ins
das
or
fbld
inc
or
pop
mov
xchg
ins
cmp
fdiv
push
rcl
ins
cdq
mov
xchg
nop
ins
sub
and
popa
mov
push
into
in
fsub
sti
jg
dec
jp
inc
pop
jne
sbb
cwde
pop
cld
pop
int
fbld
addr16
(bad)
and
jbe
xchg
fwait
hlt
out
ins
or
fsub
mov
mov
sub
ds
pop
sbb
iret
xor
sbb
mov
sahf
mov
outs
push
outs
(bad)
repnz
cmp
mov
mov
cmp
sub
jge
mov
xchg
into
mov
out
std
cmps
out
mov
add
iret
adc
stc
xor
sbb
or
xchg
mov
mov
bound
(bad)
push
jmp
xchg
or
iret
adc
je
popf
aaa
mov
mov
xchg
fmul
cmp
sbb
dec
mov
into
das
leave
cli
jle
rcl
aam
in
dec
pop
fcmovnb
fisub
inc
adc
mov
stos
je
aas
and
mov
ds
add
jns
vandps
fcomp
dec
(bad)
loopne
(bad)
pushf
push
lea
cmc
sahf
in
mov
xor
ds
pop
adc
bound
inc
popa
xor
mov
pop
jmp
addr16
repnz
xor
pop
test
xor
mov
(bad)
dec
loope
lea
cwde
cwde
push
pop
sbb
and
and
xlat
out
dec
cli
ret
inc
aad
rcr
push
das
dec
adc
mov
inc
mov
sbb
mov
dec
xchg
fs
mov
xor
lds
adc
loop
sahf
enter
mov
icebp
iret
dec
(bad)
js
add
add
jne
dec
or
ins
popa
xchg
lds
(bad)
jne
outs
aad
lock
sub
sbb
push
packuswb
dec
push
xlat
ins
jle
in
(bad)
aas
xlat
dec
jae
mov
das
pop
rol
or
push
mov
call
push
add
idiv
pop
xchg
or
sub
call
retf
aad
sbb
xor
iret
ja
pop
fnstenv
ds
pop
addr16
cmp
js
jmp
xor
js
dec
and
std
cli
in
or
lds
das
inc
cmc
in
imul
push
rol
movs
out
mov
or
ror
inc
call
in
add
xor
and
push
jge
xchg
mov
mov
clc
stos
in
outs
push
jbe
imul
outs
(bad)
jg
inc
(bad)
mov
mov
dec
adc
or
or
clc
pop
pop
inc
movs
lea
mov
addr16
mov
pushf
les
dec
pushf
call
mov
mov
mov
jne
jmp
not
pushw
or
cs
retf
mov
imul
pop
push
js
out
or
ins
sub
les
jecxz
jmp
sbb
pushf
sahf
ins
and
push
mov
out
xchg
jo
xor
arpl
int
adc
xor
(bad)
xchg
xor
(bad)
in
ror
fisttp
pop
xor
popf
popf
pop
call
dec
ins
or
ja
scas
nop
test
or
xchg
test
jne
add
fsub
dec
sub
jbe
mov
data16
enter
pop
mov
pop
in
inc
cli
ins
int
jnp
or
adc
shr
and
add
aaa
aad
je
mov
out
fmul
push
inc
xor
out
cmp
mov
cmps
pop
dec
dec
jnp
fst
dec
pop
mov
scas
ret
imul
mov
call
sbb
lock
inc
repz
stc
into
push
aas
mov
outs
ret
xchg
hlt
(bad)
bound
idiv
jl
xor
or
(bad)
cmps
cs
fild
xchg
jle
fst
mov
mov
fild
sbb
mov
and
xor
jb
xor
imul
out
jg
out
dec
pcmpeqw
sub
dec
in
rol
jb
in
pop
mov
loope
inc
cli
out
sub
in
movs
movs
xchg
(bad)
mov
addr16
jbe
jge
xor
push
rcr
scas
ror
xor
jmp
icebp
mov
sub
jmp
cmps
test
(bad)
cmps
mov
cwde
push
dec
iret
mov
pop
mov
test
fbld
stc
mov
jns
sbb
add
push
inc
(bad)
rcr
mov
stos
fbld
push
push
adc
icebp
ror
mov
mov
clc
cmps
push
mov
dec
repnz
(bad)
in
cli
sub
xchg
adc
pop
test
mov
xchg
(bad)
daa
mov
sbb
lods
mov
fistp
lahf
lds
and
pop
add
jbe
outs
mov
aam
mov
xchg
pop
dec
xlat
xchg
out
ss
mov
xor
and
inc
push
je
ror
or
das
xlat
ss
movs
and
mov
sti
in
jbe
clc
jmp
loope
mov
sub
xor
gs
jp
ds
aam
or
fs
or
fs
cmps
fbstp
xor
(bad)
cmp
cmps
mov
loop
push
aad
outs
push
loopne
shl
jae
stos
dec
mov
movs
mov
es
je
jb
and
pop
sub
int
daa
(bad)
mov
and
loope
test
xor
mov
addr16
jmp
les
mov
cmp
inc
xchg
aad
inc
ins
push
test
xchg
xor
scas
popf
into
lock
sub
inc
cmp
dec
mov
rcr
je
and
push
test
addr16
leave
push
fwait
push
pop
stos
mov
(bad)
inc
push
test
jae
xchg
adc
inc
cmps
dec
sbb
dec
mov
push
mov
fst
out
cmc
sahf
sti
(bad)
and
stc
test
mov
sti
sub
enter
jne
das
lock
mov
aad
scas
lods
fild
ja
cmps
hlt
repnz
dec
pop
pop
mov
jecxz
add
mov
shl
pop
(bad)
add
sub
sub
sub
add
xchg
rcl
test
jb
mov
push
lds
add
sub
jp
loope
lea
push
or
push
out
test
dec
adc
outs
jb
ds
pop
popf
dec
mov
popf
sar
ds
(bad)
cmps
std
lods
int3
stos
(bad)
ja
in
jmp
sbb
pushf
pop
hlt
fsubr
faddp
dec
sbb
jo
mov
push
clc
in
cmp
shl
sub
add
push
and
inc
xchg
sahf
add
lods
popf
pop
mov
(bad)
ds
or
sbb
out
out
lods
xor
test
dec
idiv
clc
(bad)
into
mov
sub
cmp
movs
mov
jmp
push
inc
cmp
sub
ret
pop
push
and
cmp
cs
and
jle
pop
dec
out
in
xor
xchg
fs
fsubrp
xor
lahf
jmp
pop
and
mov
into
movs
pop
pop
xchg
xchg
rol
fwait
es
fld
mov
inc
js
or
xor
call
push
imul
in
push
fiadd
add
dec
fnsave
lods
mov
mov
cmps
es
jae
jnp
or
addr16
push
bound
nop
in
push
sbb
jno
les
mov
add
sbb
retf
cmps
dec
pop
fdiv
pop
jg
mov
pushf
lods
mov
clc
cmp
scas
pop
add
or
and
jg
sahf
inc
cmp
outs
gs
div
mov
movs
add
jnp
daa
fldcw
dec
sub
jge
jmp
gs
or
add
mov
jl
test
outs
movs
ins
cmp
mov
pop
or
add
jmp
xchg
loop
aaa
adc
xor
pop
stos
retf
mov
and
imul
jecxz
jecxz
or
pop
arpl
pop
add
outs
mov
ret
sub
movs
out
in
dec
fmul
outs
out
jg
add
bound
jecxz
jb
in
repz
out
xor
xchg
stos
add
ss
xchg
jmp
cs
pop
inc
mov
sub
inc
mov
fwait
sub
ss
push
mov
cmc
outs
push
fldenv
xchg
dec
or
test
sar
outs
scas
test
dec
imul
or
xor
and
sbb
fwait
cdq
stos
inc
(bad)
and
pop
xchg
leave
aam
xlat
add
fnstenv
gs
fwait
into
test
cmp
in
push
movs
push
push
or
mov
xor
xchg
in
int
add
test
mov
and
scas
out
repnz
movs
mov
cs
test
jmp
push
std
shl
into
inc
aad
outs
jno
aaa
jg
sahf
(bad)
or
(bad)
stos
mov
imul
retf
inc
push
cmp
dec
jp
outs
lods
dec
and
cld
cmp
pop
(bad)
and
iret
jno
loope
mov
(bad)
sti
mov
ins
fbld
cmp
dec
xchg
retf
out
ja
iret
and
pusha
hlt
pop
mov
cs
xchg
fcmove
movs
and
pushf
js
adc
push
out
inc
lock
std
pop
mov
push
fwait
mov
jae
scas
stos
xchg
sbb
cli
loop
xlat
dec
xor
inc
jl
push
xchg
pop
cmp
mov
and
ret
and
push
push
(bad)
adc
jp
aas
ret
cli
and
push
inc
adc
cmp
in
mov
dec
push
or
jbe
lods
xchg
adc
retf
call
pop
pop
std
adc
outs
(bad)
repz
cmp
cmp
stc
test
retf
arpl
pop
sub
fwait
std
xchg
add
mov
adc
inc
in
out
jbe
fsub
int
test
ror
jge
ss
or
push
nop
stos
aas
fst
outs
es
cmp
dec
hlt
adc
dec
rcr
xor
inc
jb
lods
sti
nop
mov
lods
movs
xor
push
and
jno
push
and
push
fnstsw
enter
mov
lgdtd
sbb
sbb
lahf
fdivr
in
jbe
stos
jmp
adc
sub
cmps
jl
pop
gs
jne
gs
scas
sbb
retf
in
push
cwde
dec
or
and
in
std
push
jmp
cmps
push
mov
lea
inc
std
jge
jg
sbb
out
pop
adc
mov
dec
pop
lahf
call
fwait
mov
add
inc
dec
nop
xchg
out
retf
xchg
(bad)
pop
int
push
jns
xchg
xchg
dec
in
mov
das
test
cmc
(bad)
ja
or
and
gs
xchg
ret
inc
neg
into
popa
mov
or
adc
push
sbb
sub
jmp
sbb
pop
mov
jno
push
adc
add
aas
in
clc
adc
out
xchg
jp
iret
adc
inc
(bad)
out
inc
ins
pop
dec
adc
shl
ficom
mov
jl
or
jl
jae
(bad)
lahf
jle
dec
dec
xchg
je
test
lds
pop
fwait
call
es
test
jbe
add
lock
ja
sub
mov
(bad)
aam
xor
cmp
sahf
add
push
daa
(bad)
movs
inc
push
js
mov
aad
shl
or
xor
add
sbb
leave
outs
xchg
aaa
mov
scas
lods
pop
and
int
shl
lds
jns
xor
push
fcomp
cmp
mov
loopne
mov
or
pop
(bad)
cmp
xor
loop
push
sub
mov
fdivr
cmp
sub
cmp
stos
jg
pop
jg
cdq
(bad)
arpl
aaa
repnz
adc
or
fisttp
outs
(bad)
stc
call
jl
xor
mov
(bad)
fisttp
imul
mov
pop
adc
jecxz
sub
mov
test
(bad)
jns
cld
div
ficomp
test
cmp
mov
jne
inc
jp
js
mov
mov
retf
or
call
jmp
ret
or
dec
imul
or
outs
mov
dec
pop
adc
inc
mov
mov
mov
inc
and
push
jne
scas
cmc
or
add
xor
mov
(bad)
mov
inc
add
test
fistp
in
les
inc
ins
push
aaa
push
je
imul
lock
xchg
inc
cmp
(bad)
aam
push
jo
stc
ins
mov
lock
xor
ins
jle
mov
mov
and
scas
xchg
mov
fist
fld
push
jo
fisubr
mov
test
(bad)
lds
fwait
jnp
daa
or
sbb
push
fisttp
xchg
cmp
dec
inc
test
add
cmc
fwait
push
ror
shr
ret
mov
add
pop
cs
mov
pop
(bad)
fmulp
add
outs
jg
push
rcl
mov
jg
and
loope
fmul
cmp
fimul
push
dec
pop
mov
cdq
rol
adc
in
cli
sbb
jbe
push
push
mov
push
das
cmp
xor
pushf
and
int3
rol
adc
xchg
mov
adc
out
cdq
or
jmp
ret
jnp
das
or
jns
add
aam
ret
fsubr
rcr
sub
std
and
mov
pop
pop
xchg
arpl
cld
or
imul
das
in
push
pop
clc
mov
sbb
in
or
fs
sbb
lods
in
dec
ins
not
and
imul
nop
push
and
sub
fs
jne
cmc
test
sub
and
cmc
aam
mov
and
cmp
in
clc
out
dec
cld
(bad)
mov
int
fidivr
mov
fwait
lds
push
jae
int3
movs
sbb
inc
sbb
jo
aaa
xchg
xchg
popf
fsubrp
shr
je
inc
xor
fisubr
adc
jge
out
xchg
mov
mov
jmp
mov
adc
cmp
fcomi
mov
xor
adc
cli
imul
push
dec
test
push
pop
gs
cli
imul
pop
mov
loop
fisttp
loop
and
scas
jne
daa
into
jmp
lods
mov
cmp
es
out
xchg
aas
fimul
pop
mov
aam
aam
mov
mov
enter
cmp
sbb
ss
jl
sbb
movs
pusha
cli
dec
stc
(bad)
fimul
mov
stos
push
das
cmp
sbb
adc
jl
popf
mov
hlt
shl
cmp
pop
sbb
push
mov
push
retf
cmp
inc
push
mov
mov
je
fld
push
outs
push
cmc
lahf
aad
push
jge
(bad)
push
scas
add
retf
xchg
mov
and
jmp
outs
pop
push
adc
ficomp
jo
out
arpl
fistp
mov
test
fwait
out
in
lods
jae
fdivr
mov
xchg
adc
out
(bad)
ins
cmc
inc
ds
scas
lods
std
in
xchg
push
ins
mov
fnstenv
into
stc
pop
aad
(bad)
(bad)
fwait
dec
aas
or
gs
pmulhw
das
mov
and
dec
xor
sub
pop
sahf
adc
out
xchg
enter
mov
stos
clc
bound
sub
add
pop
je
or
push
add
jmp
mov
cmc
es
imul
cmp
dec
pop
dec
jnp
add
push
lea
pop
jo
dec
push
shr
xchg
popf
aaa
or
push
pop
lea
leave
xor
(bad)
fiadd
aas
and
fcomip
mov
data16
cdq
loope
pop
out
in
out
adc
daa
pop
dec
repz
dec
test
sti
mov
gs
lods
xchg
fwait
scas
jbe
mul
int
sub
push
imul
cdq
scas
xor
mov
into
pop
lahf
scas
add
add
ret
jmp
mov
dec
mov
sub
xchg
mov
sbb
test
push
inc
loope
cmp
pop
stos
pop
pop
and
pop
mov
scas
int
push
out
cmps
das
lea
cmps
inc
jno
jp
in
mov
mov
out
mov
sbb
nop
xchg
in
gs
jmp
es
cs
dec
push
out
push
pop
adc
push
or
icebp
bnd
int3
lods
jle
dec
pop
jmp
repnz
scas
inc
cld
push
popf
fs
xor
inc
xor
or
outs
pop
mov
pop
jle
in
mov
rol
hlt
les
fist
lea
jp
adc
(bad)
mov
mov
pop
xor
or
mov
repz
xor
std
jnp
fwait
in
out
or
push
push
jbe
jg
add
xchg
mov
lahf
(bad)
xor
cmp
addr16
jmp
inc
push
jb
bound
push
mov
xchg
into
outs
lods
cli
out
idiv
les
jg
sub
scas
ins
fsub
lahf
inc
sbb
pushf
xchg
test
ret
xchg
jne
adc
in
sbb
fadd
jge
xor
dec
adc
push
outs
add
add
inc
cdq
and
adc
data16
pop
imul
iret
cmp
adc
mov
jl
sahf
inc
rol
dec
in
popa
pop
push
push
inc
add
add
cmp
shr
or
les
(bad)
pop
aaa
clc
adc
imul
push
loope
and
int
jg
pop
jge
dec
int
sar
pop
iret
add
jne
xor
push
dec
cmps
add
gs
clc
xchg
scas
add
retf
in
lods
cmp
push
jge
fwait
and
clc
inc
mov
mov
or
es
cdq
inc
jl
xor
fiadd
dec
push
pop
sub
test
jmp
xchg
(bad)
stos
call
xchg
inc
inc
lds
or
mov
mov
fcomp
lds
mov
int
outs
retf
cmc
aam
ds
call
loopne
in
repz
pop
aaa
ins
shr
and
jne
add
push
cmp
jge
mov
es
rcl
xor
push
dec
xor
repnz
inc
outs
stos
jbe
outs
mov
out
inc
loopne
xchg
cmc
xor
pop
mov
leave
add
(bad)
jno
scas
jmp
mov
nop
push
xchg
(bad)
xchg
sbb
xchg
std
aaa
sbb
cmps
fcmovnu
push
outs
cmc
mov
and
jmp
adc
cmp
jl
bound
and
dec
push
xchg
push
mov
adc
mov
xchg
cmc
xchg
aaa
mov
mov
das
and
and
inc
daa
push
aas
outs
pop
sub
int3
data16
std
inc
es
js
sti
adc
arpl
icebp
repnz
fisttp
jno
xor
mov
fldenv
loop
fsincos
pop
(bad)
cmc
xchg
push
adc
xchg
and
jb
pop
mov
inc
dec
test
mov
inc
in
(bad)
dec
cmps
jmp
fidiv
dec
inc
mov
jle
fwait
dec
repnz
call
and
jbe
adc
(bad)
jl
add
push
stos
mov
ins
repz
jecxz
aam
sbb
lods
mov
idiv
push
out
mov
inc
ficom
cmp
xchg
test
mov
dec
xor
sahf
inc
data16
sub
outs
cmps
gs
arpl
out
cld
outs
loopne
mov
sahf
cmc
aas
es
(bad)
dec
mov
div
lds
clc
jecxz
repz
(bad)
xor
dec
or
pop
xor
mov
mov
stos
mov
movs
cmove
add
and
movs
movs
fcom
pop
dec
dec
js
scas
mov
stc
xlat
in
mov
pop
add
ds
mov
sub
imul
mov
scas
out
jge
xor
rol
movs
icebp
in
lea
jecxz
retf
jecxz
inc
pop
fbld
in
sbb
cmp
and
pusha
sub
inc
jae
sbb
test
or
repz
and
cmc
aam
dec
cmp
xor
std
enter
push
ficomp
mov
(bad)
cs
in
idiv
push
xchg
adc
mov
stos
cmp
into
fwait
jle
and
rcl
and
retf
sbb
hlt
cmc
imul
sbb
mov
iret
jnp
xchg
pushf
enter
(bad)
mov
mov
dec
dec
inc
fsubrp
stos
jecxz
fcomp
imul
cs
jns
push
call
scas
dec
jg
ret
mov
(bad)
std
jmp
add
iret
inc
pop
and
scas
ins
aaa
repz
xchg
push
fidiv
mov
rcr
dec
pop
inc
pop
or
loopne
push
push
sbb
popa
pop
loopne
int
(bad)
rcl
or
pushw
ins
and
dec
pop
adc
push
adc
sbb
push
je
ins
(bad)
mov
repnz
mov
cmc
jecxz
sbb
mov
mov
in
rcl
or
xchg
or
jg
movs
jg
pop
push
mov
in
xchg
mov
mov
jo
ins
test
cld
ss
pop
cmp
or
inc
mov
mov
out
mov
(bad)
data16
std
mov
inc
pop
mov
and
ins
or
sbb
sahf
enter
imul
push
(bad)
cmp
mov
ja
ds
xchg
xchg
retf
test
ds
stos
test
adc
lahf
pop
inc
mov
fstp
es
lea
pushf
jns
gs
mov
sbb
jmp
ret
inc
mov
aam
aad
aad
stos
pop
not
cmp
sti
lds
les
movs
pop
aas
mov
mov
inc
addr16
mov
xor
lds
xor
dec
jno
sub
mov
aam
inc
jnp
(bad)
jp
fsubr
ja
sub
sbb
xor
or
jne
out
inc
inc
mov
iret
lahf
int
mul
cmc
push
inc
inc
es
push
pusha
push
add
mov
xchg
inc
test
mov
inc
push
movs
mov
cmp
or
stos
xchg
push
(bad)
cmc
jle
push
stos
push
add
addr16
jle
mov
xchg
adc
add
loop
inc
in
or
outs
inc
and
into
mov
mov
lds
push
cmp
adc
es
hlt
stos
iret
loope
js
fidiv
mov
lods
add
cmp
cli
jle
call
nop
or
cwde
out
loopne
pop
adc
retf
gs
das
retf
test
xchg
into
movs
or
outs
imul
and
cdq
mov
xor
xchg
repnz
aas
lods
lock
sub
fimul
pop
mov
jle
aad
(bad)
sti
xchg
loopne
scas
and
in
rcr
xchg
das
mov
sbb
and
push
mov
aad
pop
dec
test
cli
sbb
jp
add
dec
xor
(bad)
dec
pop
push
nop
movs
jge
mov
out
xchg
mov
(bad)
mov
jo
inc
loop
sbb
inc
dec
into
pushf
jno
fwait
ret
out
aad
mov
mov
aam
jecxz
sbb
out
xor
mov
jge
ins
add
xor
cmc
movs
sbb
push
add
dec
push
stc
enter
popa
mov
lea
in
dec
pop
outs
lds
fisttp
dec
jp
adc
xor
mov
xlat
dec
loope
sti
(bad)
sti
test
add
inc
shl
and
push
loopne
retf
dec
xor
sbb
cwde
outs
std
add
mov
cdq
jb
mov
popf
sbb
pop
or
adc
sbb
jp
or
mov
push
cmps
pusha
and
cmps
fidivr
jmp
push
daa
pop
pop
jb
sbb
cmp
(bad)
pop
fcomp
mov
test
out
prefetchwt1
enter
xchg
in
add
xor
fcom
inc
mov
shr
xor
out
xchg
jmp
dec
enter
mov
outs
int
data16
sahf
jb
retf
cmp
sub
repz
fcom
(bad)
mov
aaa
sbb
mov
xchg
mov
(bad)
dec
stos
pusha
jne
mov
retf
adc
lds
adc
or
pop
cmp
mov
repnz
jae
addr16
add
mov
pop
fisub
xchg
mov
cmc
test
or
(bad)
sti
add
outs
and
fdivp
xor
xor
fadd
(bad)
iret
retf
mov
imul
test
push
ins
xor
pop
stc
js
cmp
aad
je
xchg
cs
jp
lahf
xor
jb
jns
cmp
mov
in
jae
pop
scas
add
(bad)
(bad)
mov
sub
dec
movs
jp
jecxz
mov
mov
es
xor
out
xchg
mov
inc
xor
daa
pop
adc
std
jb
arpl
xchg
mov
stos
enter
push
aad
(bad)
push
daa
(bad)
mov
xchg
out
das
push
test
dec
mov
dec
rcr
fstp
sbb
mov
call
cmc
jg
dec
mov
cmp
mov
in
cdq
sbb
xor
call
sub
dec
cmp
scas
out
test
mov
mov
popf
in
ret
mov
shl
(bad)
out
and
scas
fcomp
push
hlt
ss
in
leave
mov
xor
fist
add
mov
and
(bad)
out
push
adc
push
push
es
mov
jae
jb
scas
(bad)
stc
lea
fidivr
cmc
adc
push
or
adc
dec
jo
movs
mov
inc
jne
add
xor
scas
pushf
repz
xchg
loop
cli
xor
mov
pusha
pop
ret
push
push
xchg
xchg
popa
jp
xchg
jo
jbe
xchg
inc
mov
mov
rol
ret
movs
mov
push
imul
push
mov
mov
repz
push
mov
push
inc
fwait
push
sahf
mov
loopne
mov
or
sub
mov
add
or
pop
mov
inc
out
daa
shr
aam
in
ds
push
or
loop
cmp
inc
xchg
add
push
cmc
test
mov
retf
rcr
jb
jnp
pop
xchg
xchg
inc
cld
sti
mov
aam
nop
aaa
jb
jl
int3
sub
xchg
mov
and
cmc
popa
add
mov
icebp
mov
jg
std
fs
mov
add
or
pop
inc
jo
mov
sar
jo
fist
pop
inc
adc
sti
pop
push
out
mov
adc
inc
mov
inc
ds
xor
xor
or
jne
and
(bad)
mov
pusha
push
nop
call
ret
sti
outs
sbb
(bad)
xlat
int3
mov
push
lock
or
das
cmp
push
in
push
jg
sub
in
push
inc
jp
pop
push
repz
cmp
aad
(bad)
push
fistp
and
pop
mov
xor
loopne
or
dec
ror
std
mov
pop
jbe
sbb
popa
jge
mov
into
xor
retf
nop
rcl
dec
xchg
adc
aaa
and
cmc
mov
push
mov
test
xor
mov
dec
cmps
adc
mov
rol
test
dec
ins
call
cmps
lods
xlat
sahf
hlt
loopne
xchg
inc
in
or
add
cs
ins
add
cmp
jg
fadd
(bad)
clc
rcr
push
or
sub
dec
je
push
push
mov
xor
lock
pop
call
push
or
je
fmul
mov
stos
cmp
call
xor
sahf
movs
repz
dec
jmp
hlt
mov
mov
mov
and
scas
rol
inc
jmp
mov
adc
and
test
das
fmul
lods
mov
mov
repnz
aam
xchg
and
scas
daa
fsub
shl
jecxz
dec
cmc
dec
push
mov
les
or
gs
pop
push
push
ret
jge
xlat
pop
outs
push
mov
inc
adc
jmp
retf
jmp
les
js
xor
shl
(bad)
pop
add
int
repnz
mov
jmp
in
jno
sbb
push
xor
movs
(bad)
jg
xor
movs
dec
cmps
mov
xchg
scas
test
bound
pop
push
xor
icebp
jo
(bad)
out
in
and
lahf
fwait
pop
pop
arpl
inc
lea
leave
fist
xsha256
cmps
push
shl
in
cli
or
lods
push
cmp
aas
frstor
mov
pusha
aam
int
adc
fwait
add
jo
inc
sub
test
sahf
push
shl
mov
(bad)
in
shr
mov
jno
movs
lock
cmp
mov
es
nop
push
in
ret
addr16
ins
inc
mov
dec
inc
or
inc
adc
sbb
lea
or
(bad)
pop
jns
in
sbb
adc
inc
in
cmp
mov
jne
mov
daa
(bad)
leave
dec
jo
fild
xchg
adc
loopne
push
and
cdq
cmps
jge
(bad)
call
(bad)
cmp
not
(bad)
aam
push
adc
pop
adc
push
cmc
mov
idiv
push
idiv
(bad)
stc
mov
arpl
stc
in
je
outs
sahf
dec
pop
aaa
es
lods
push
sub
int
repz
icebp
pop
xchg
dec
jle
inc
push
in
fs
xchg
xor
jo
fstp
in
repnz
cmp
imul
into
aad
jmp
xor
push
adc
jge
fdiv
sub
cmps
xchg
adc
sbb
mov
mov
cmp
xor
xchg
outs
or
imul
or
sar
aam
push
sub
sub
push
int3
out
aas
scas
mov
push
(bad)
loop
out
cmp
(bad)
in
jne
xor
jecxz
mov
je
aam
push
cmp
sbb
xchg
cmps
mov
mov
push
inc
cmp
dec
inc
sub
sub
xchg
mov
inc
cmp
sub
aad
pop
inc
into
(bad)
xor
mov
sbb
jb
es
(bad)
pop
scas
sti
(bad)
mov
inc
hlt
mov
rcr
and
stos
in
mov
pop
jle
pop
fsubr
out
cmc
fstp
and
mov
dec
dec
retf
out
xchg
push
push
cwde
retf
push
mov
call
out
(bad)
push
cs
sub
push
pusha
lahf
pop
scas
jns
ror
lea
fmul
js
fadd
or
sti
mov
dec
loope
sub
aas
ins
pop
mov
into
sub
sti
xchg
retf
push
mov
jno
clc
pop
movs
jge
cmp
in
(bad)
aad
or
dec
ins
psubsb
and
inc
dec
dec
inc
mov
xchg
sti
inc
dec
xchg
out
add
je
mov
xchg
das
popf
aas
out
mov
scas
jo
rol
jmp
shr
ds
cmp
or
movs
icebp
mov
aas
test
repnz
adc
cmp
in
inc
sub
test
mov
popf
lds
sub
int3
add
mov
loopne
mov
pusha
mov
or
(bad)
fdiv
jmp
ins
push
(bad)
sbb
dec
aas
inc
daa
sbb
pushf
mov
sub
hlt
call
xchg
fcomp
dec
xchg
lock
push
dec
jns
dec
pushw
jb
test
ficomp
scas
out
cmp
dec
mov
push
and
xor
sbb
sub
mov
test
pop
cmps
(bad)
test
mov
sbb
(bad)
rcr
add
mov
or
int
dec
xlat
movs
hlt
push
aad
and
lock
pop
push
push
cmp
jg
lods
jecxz
repz
add
sbb
iret
mov
mov
and
add
push
cs
dec
arpl
je
add
lock
lahf
loopne
lds
add
push
adc
cmp
loopne
mov
add
sbb
pop
xor
mov
mov
js
cmp
sbb
sahf
imul
adc
xor
sub
out
mov
mov
mov
add
and
xor
sub
xchg
sbb
push
push
fiadd
fwait
dec
mov
(bad)
mov
cmp
popa
adc
punpcklwd
dec
pusha
cwde
fdivr
mov
imul
(bad)
clc
out
mov
movs
and
in
das
inc
in
pop
or
xchg
jge
inc
adc
rcr
mov
add
es
jne
inc
(bad)
bound
xchg
or
ja
sub
ins
xchg
push
std
sbb
dec
call
retf
xchg
mov
mov
mov
mov
aam
xchg
pop
mov
and
aas
popf
cmps
loopne
push
pushf
xchg
out
loope
popa
out
fld
inc
aam
hlt
out
cdq
ss
adc
retf
adc
cmp
out
push
stos
mov
push
jg
and
add
inc
mul
pop
mov
and
outs
add
jb
mov
cld
daa
adc
push
push
in
add
fwait
pop
je
ficomp
in
stos
gs
aam
aad
jbe
push
(bad)
call
cmp
pop
cdq
and
dec
adc
into
mov
lahf
ret
and
mov
pop
int3
ja
neg
mov
inc
pop
imul
sbb
inc
inc
es
or
jl
push
xor
test
scas
cmps
pmulhw
(bad)
dec
push
aad
mov
popf
or
fld
sbb
pop
iret
gs
or
pop
sub
test
repz
mov
mov
mov
push
aam
scas
out
cwde
mov
test
ins
repz
sti
pop
jne
mov
sub
pop
mov
jmp
jmp
out
pushf
mov
mov
je
rol
cdq
sbb
popf
add
std
ud1
pop
cmps
sbb
stc
adc
dec
in
sbb
xchg
cwde
mov
sar
hlt
jg
or
or
add
mov
inc
into
(bad)
jg
loop
fadd
and
aaa
xchg
out
add
add
and
cmp
(bad)
out
lea
arpl
data16
and
retf
fmul
pop
xchg
or
call
cwde
(bad)
fcmovnu
nop
and
and
sub
mov
nop
fwait
jmp
and
out
mov
or
adc
or
adc
mov
mov
jl
xchg
xor
add
adc
jmp
pusha
test
adc
xchg
scas
vpaddb
test
std
ins
fnstcw
xchg
dec
inc
jb
mov
push
and
mov
retf
test
sub
out
jno
jo
(bad)
(bad)
test
lea
and
int3
arpl
fld
xchg
mov
mov
nop
jnp
mov
fistp
jmp
rol
cwde
jecxz
fwait
sti
mov
add
mov
adc
mov
jno
cwde
sub
push
imul
pop
je
inc
cmp
outs
cmp
arpl
jno
pop
(bad)
lds
pop
sub
push
push
in
imul
fisttp
lods
in
pop
out
pop
pop
jl
sti
adc
xchg
adc
pop
jno
mov
or
sub
mov
sbb
mov
aam
in
add
scas
xchg
xor
push
pop
call
xchg
pop
lea
pop
xchg
mov
mov
movs
mov
mov
ins
lds
stos
push
or
mov
xchg
pop
nop
rcr
cs
push
inc
xlat
in
lea
mov
in
mov
adc
sar
xor
mov
inc
fld
mov
inc
imul
cdq
cmc
cmp
and
cwde
cdq
rcl
aad
lahf
mov
in
mov
adc
mov
mov
es
jg
mov
into
gs
fimul
mov
clc
lods
pop
fwait
add
sbb
cmp
and
push
cs
lods
and
adc
sub
cs
rcl
outs
bound
aad
jp
jg
jl
pop
xchg
lods
out
(bad)
out
aad
xchg
retf
les
push
out
rcl
inc
scas
pop
sub
rcr
sahf
push
and
les
or
test
enter
je
push
cmp
jne
in
(bad)
xchg
pop
xchg
dec
repnz
push
dec
xchg
scas
into
pop
jbe
mov
repz
push
cmps
xchg
mov
retf
or
rcl
sub
add
outs
sbb
lahf
sahf
add
mov
push
xchg
add
inc
sub
ret
jg
xor
pop
adc
add
xor
in
(bad)
retf
xlat
cmps
mov
jmp
ja
and
call
in
popaw
add
gs
cmp
mov
xchg
mov
outs
fsub
aas
push
jne
aad
in
pop
outs
jno
push
push
sub
fwait
mov
icebp
loopne
aam
out
mov
sar
aaa
sub
(bad)
sbb
dec
stos
cmps
aam
cmps
sbb
in
shl
shr
ja
inc
pop
xor
addr16
mov
sub
fld
loop
push
xor
(bad)
jg
xchg
retf
sub
call
fild
mov
mov
and
cmp
enter
sub
adc
xor
jae
xchg
sbb
or
daa
jle
outs
push
loope
shl
mov
xchg
mov
mov
icebp
mov
repnz
and
(bad)
fwait
dec
addr16
pop
push
fsub
sub
icebp
stos
pshufw
cs
repnz
mov
stc
jmp
xor
xor
xchg
add
lock
fdivr
or
out
sbb
jl
fnstsw
mov
outs
shl
in
aad
jmp
cmp
dec
lds
(bad)
mov
push
dec
hlt
dec
fistp
jne
push
push
sub
push
adc
clc
pop
je
fistp
cdq
jbe
or
sti
in
in
(bad)
mov
cmc
arpl
dec
enter
and
push
sub
push
out
xor
pop
pop
ins
sub
fidivr
in
jb
subps
mov
adc
xchg
and
ins
test
jge
mov
pop
(bad)
out
xchg
mov
out
sbb
out
cmp
fistp
mov
or
and
sbb
imul
adc
adc
or
movs
mov
addr16
mov
sub
fst
mov
push
pop
or
scas
or
mov
lds
mov
leave
int3
(bad)
std
mov
or
das
sub
mov
mov
int
sbb
mov
mov
data16
and
pusha
jle
pop
sahf
mov
mov
adc
jecxz
cmps
sub
and
or
das
sbb
in
mov
lods
cmc
mov
cmc
cmp
and
ds
adc
dec
outs
add
pop
fcom
mov
add
inc
ds
mov
push
in
in
cmp
out
mov
cmc
lock
mov
and
inc
fcomp
sahf
sbb
pop
retf
ss
mov
test
sar
pop
pop
push
xchg
or
aas
mov
jbe
imul
xchg
ror
push
pop
cmp
test
dec
fmul
jne
add
cld
push
mov
pop
sub
fdivr
mov
popa
adc
pop
not
jne
sub
out
pop
xchg
jge
inc
pushf
xor
hlt
nop
pop
dec
daa
(bad)
pop
inc
push
jbe
pop
pop
out
and
push
int3
pushf
(bad)
lock
aas
mov
std
push
lock
lock
push
and
ret
cmp
inc
test
inc
in
xor
ds
fcmovnbe
xor
dec
scas
mov
scas
dec
into
cmps
or
dec
xor
dec
and
xchg
mov
pop
mov
icebp
cmp
mov
cmp
lea
xchg
stos
dec
add
out
mov
in
(bad)
dec
sar
push
jbe
push
jmp
push
fldl2e
lea
pop
mov
loopne
test
movs
mov
je
fs
mov
jae
iret
push
pop
rol
lock
out
stc
addr16
add
jge
push
cmp
mov
mov
fnsave
out
mov
cmp
inc
stos
aad
pop
jecxz
mov
movs
ret
out
scas
clc
scas
neg
aad
ins
pop
jno
test
ins
cmp
mov
xor
scas
jo
dec
es
mov
lods
jl
dec
push
push
sbb
adc
ins
or
jmp
cs
push
adc
xchg
cwde
mov
lods
xor
push
or
mov
and
mov
lods
inc
mov
mov
and
dec
jg
push
ins
ja
(bad)
ror
and
rcr
cmp
mov
push
outs
in
cmp
lahf
pop
xchg
aad
pop
mov
(bad)
and
imul
stos
pop
add
push
xchg
push
popf
xchg
cmp
push
pop
in
push
jns
xchg
test
hlt
test
add
outs
and
inc
std
push
pop
popf
fwait
inc
js
cmp
push
push
adc
ins
movs
(bad)
fnstcw
std
test
mov
xchg
repz
dec
pushf
add
or
pop
mov
push
xor
movs
daa
pushf
inc
or
pop
fsub
loopne
lds
push
push
(bad)
xor
retf
jle
es
outs
je
repnz
jp
inc
mov
int3
cs
cmps
ds
out
pop
jnp
adc
sub
jnp
jecxz
out
fisttp
push
push
add
xor
add
add
pop
and
pop
adc
retf
mov
mov
push
fst
je
mov
sahf
and
fwait
push
leave
ret
xchg
pop
xchg
in
ins
out
sbb
rcr
sbb
ror
xor
inc
adc
pusha
mov
call
add
inc
xchg
push
xlat
fcmovu
call
pushf
pusha
add
sub
and
out
imul
mov
mov
xchg
and
mov
iret
scas
add
pop
inc
inc
retf
mov
out
or
mov
pop
mov
push
inc
pop
xchg
pop
cli
or
pop
jmp
rcr
jle
stos
inc
or
call
int
pop
xchg
and
cli
mov
pop
dec
xor
aaa
sti
jp
push
jbe
iret
lea
sbb
add
adc
gs
sub
xlat
popa
outs
mov
fs
mov
dec
mov
retf
push
(bad)
stos
sub
shr
sub
mov
mov
test
dec
ds
lods
retf
jb
shr
add
ja
mov
popa
aam
imul
dec
mov
jo
outs
add
into
in
fs
inc
jmp
loope
hlt
xor
sub
shr
out
leave
aas
int3
add
mov
test
pop
iret
jecxz
clc
push
jl
mov
lock
loopne
adc
and
sahf
pop
pop
shr
sbb
lds
add
cmc
in
inc
je
int3
mov
xor
out
pop
mov
stos
mov
mov
xor
push
pop
push
xor
dec
pop
inc
movs
cmp
or
mov
mov
fs
vmovups
push
pusha
test
mov
std
ror
ss
mov
repz
(bad)
(bad)
scas
fimul
push
retf
or
or
sbb
xor
fld
jae
cld
add
sbb
mov
outs
cs
xlat
or
out
test
je
shl
inc
int3
cmp
popa
xor
loop
in
xchg
mov
jo
dec
cmp
stc
mov
add
xchg
loopne
xchg
push
(bad)
sbb
test
cmc
dec
fs
mov
sbb
lahf
sbb
callw
sbb
jne
inc
push
mov
out
clc
sbb
test
out
aas
das
test
scas
or
push
lods
push
and
into
mov
mov
add
ret
in
enter
ins
enter
sbb
call
sub
jno
xchg
mov
pop
dec
xchg
or
and
mov
jns
lea
iret
mov
dec
outs
cmp
into
outs
mov
pop
adc
and
(bad)
xchg
sti
mov
xchg
lods
mov
mov
pop
hlt
inc
out
xchg
enter
jmp
jle
adc
test
sub
(bad)
sub
inc
or
or
mov
jo
inc
std
arpl
xchg
scas
fcmovnu
out
in
(bad)
mov
push
add
das
imul
jl
outs
dec
sbb
push
cmps
gs
mov
inc
arpl
jnp
test
cld
out
adc
out
fisub
int
js
add
or
add
sbb
aas
lea
neg
cld
daa
clc
or
fild
or
adc
mov
fs
xchg
jp
fwait
lods
pop
lods
mov
pop
adc
push
xchg
mov
push
and
dec
jp
out
cmp
lods
retf
mov
jecxz
mov
enter
push
(bad)
repz
xchg
inc
and
jg
dec
mov
push
enter
jb
in
mov
jns
lds
and
out
mov
push
xor
mov
adc
sahf
rcr
jmp
dec
aas
movs
jg
or
retf
xor
pop
(bad)
in
xchg
mov
xor
arpl
stos
movs
mov
rdtsc
adc
push
pop
cmp
mov
shl
std
rol
or
jnp
pop
gs
mov
aas
ja
loop
int
mov
push
xor
push
(bad)
fstp
jbe
mov
mov
mov
rol
in
cmps
pop
push
add
fstp
push
mov
jo
mov
add
icebp
sub
hlt
cli
sbb
xchg
mov
addr16
sub
in
aas
add
test
jb
lds
mov
xor
xor
cmc
dec
push
(bad)
addr16
jbe
xchg
push
(bad)
jb
imul
mov
loop
mov
ret
pop
nop
sbb
jbe
dec
ins
js
xor
push
in
(bad)
rol
jbe
push
jmp
int3
stos
push
sbb
fldcw
jmp
aad
or
xor
stos
add
jle
repnz
retf
pop
dec
jne
push
(bad)
cmp
pop
sti
sub
dec
shl
jns
and
lds
in
sub
loope
add
mov
pop
push
push
and
loopne
mov
movs
mov
and
cmps
pop
add
sti
mov
mov
mov
xchg
sub
xor
int
enter
xchg
jp
mov
int3
and
movs
out
and
sub
adc
icebp
fcom
(bad)
iret
cmps
gs
jo
jmp
cmp
scas
ins
movs
cmps
or
or
push
xor
aad
cmp
pop
test
dec
xchg
rol
test
in
mov
push
scas
xor
jo
outs
dec
outs
mov
xchg
scas
pop
fidivr
jmp
push
arpl
xchg
fstp
add
and
mov
test
ffree
fistp
push
dec
and
inc
mov
mov
fld
jle
mov
jnp
fs
cs
in
inc
pop
enter
add
rol
mov
std
dec
and
pop
sub
arpl
adc
fdiv
outs
add
iret
and
leave
pop
jne
lock
cmp
lods
or
add
xchg
es
dec
(bad)
std
dec
shl
cmp
fistp
and
push
mov
jne
gs
cld
xchg
test
xlat
repz
dec
ins
push
(bad)
cdq
imul
sbb
dec
icebp
xchg
pop
sahf
pop
popa
and
test
xor
inc
xchg
cmp
add
loopne
lds
cld
add
pushf
push
mov
push
jb
fild
bound
and
mov
xor
neg
dec
mov
or
jg
jle
int3
xchg
push
lds
xchg
add
cmp
inc
push
outs
mov
xlat
mov
dec
mov
mov
fisubr
vpunpcklwd
pop
bound
cwde
nop
mov
movs
(bad)
dec
int3
loopne
xchg
loopne
sbb
mov
call
mov
sbb
(bad)
shl
cld
xor
inc
and
call
jge
sti
iret
xchg
ins
je
xchg
sahf
test
stos
jne
pop
xchg
movs
aad
push
pop
mov
xchg
cs
pop
xlat
mov
adc
lock
mov
int3
stos
push
inc
sbb
and
mov
mov
in
adc
out
movs
mov
ret
pushf
dec
popa
jmp
fidiv
mov
mov
jbe
inc
cmps
js
push
(bad)
enter
mov
ss
sub
xor
cld
mov
cmps
add
push
mov
mov
out
loope
das
and
xor
xor
fucom
out
call
xchg
or
movs
pop
in
scas
sahf
pop
outs
add
xchg
scas
cmp
outs
imul
cmp
test
pop
jnp
mov
xor
xchg
in
cmc
pop
pop
jle
push
aam
xor
inc
inc
test
push
push
ret
dec
call
jns
sub
xor
pushf
pop
scas
imul
int
pop
out
(bad)
cld
movs
fdivr
shr
mov
add
mov
js
mov
mov
retf
test
cdq
lahf
xor
dec
jb
mov
cmp
mov
mov
xchg
dec
cmc
sbb
daa
sub
je
xor
rcr
xor
xor
(bad)
push
xor
and
hlt
push
icebp
pop
outs
outs
in
mov
out
mov
lds
mov
xchg
imul
pop
sub
je
call
ss
bnd
mov
pusha
sub
aad
push
loope
cmp
mov
xor
das
stos
out
and
sbb
mov
push
jmp
or
mov
sbb
xlat
cmp
fsub
(bad)
iret
jnp
sbb
jg
adc
sbb
test
jbe
in
xor
mov
(bad)
loope
push
inc
lock
fdiv
jns
cmp
sbb
repz
test
jmp
or
adc
lahf
aaa
leave
jno
(bad)
into
dec
pop
or
rsqrtps
test
data16
push
call
sub
scas
(bad)
ss
pop
jp
sbb
cmp
and
dec
sub
lock
ja
fisubr
ffreep
repz
rcl
fwait
jmp
push
out
fsubr
je
push
xchg
lahf
mov
in
push
scas
sahf
ss
enter
out
push
gs
mov
jae
cmps
adc
add
pop
bound
mov
add
sahf
data16
aaa
jmp
sti
push
sub
xchg
adc
mov
imul
je
mov
pop
cmp
movs
in
mov
dec
fsubr
or
dec
inc
iret
jae
xor
sbb
mov
jle
aas
push
jecxz
mov
cli
mov
aad
fisubr
ja
inc
cmps
xlat
outs
dec
aad
ret
imul
push
mov
jmp
pop
jbe
in
push
cli
inc
imul
jl
(bad)
push
test
in
mov
repnz
ins
lds
rcl
push
shl
adc
jno
adc
mov
push
loope
inc
imul
in
xor
sahf
addr16
aaa
cmp
or
push
sub
inc
cmps
mov
call
or
pop
stos
dec
cdq
xchg
gs
fdiv
call
loop
fsub
fisubr
dec
or
xchg
sbb
ins
cmps
mov
fucomip
popa
dec
clc
in
mov
or
mov
mov
push
pusha
add
and
push
sub
pop
xlat
out
lods
addr16
mov
lock
push
jno
mov
scas
in
dec
jne
mov
jp
aas
xchg
mov
movs
fnsave
in
inc
dec
jg
jne
lock
inc
add
ds
mul
out
sub
lds
jo
xchg
leave
push
loopne
push
fidivr
dec
mov
fisub
mov
mov
mov
outs
adc
jle
pop
aam
push
xchg
je
mov
dec
ins
and
pop
arpl
sbb
cmp
and
(bad)
mov
aad
bound
pop
pop
cmp
or
and
ja
loopne
cwde
mov
jge
das
cld
mov
lock
jmp
sbb
out
scas
xor
arpl
sbb
pop
mov
clc
mov
push
cmp
xor
pop
lds
(bad)
xchg
cmp
mov
in
xlat
add
xchg
sbb
mov
mov
or
or
xchg
sbb
movs
mov
(bad)
adc
scas
cmp
sub
cmc
ins
mov
jp
sbb
popf
mov
xchg
call
cdq
enter
push
das
mov
inc
outs
jle
out
in
cwde
xchg
or
(bad)
mov
out
es
sbb
js
fidiv
repnz
pop
add
sub
xchg
add
out
in
mov
in
mov
fcompp
xor
and
call
addr16
pushf
cmovl
into
jnp
ret
push
adc
and
pop
jge
dec
clc
lds
adc
adc
mov
xor
mov
call
loope
fnstenv
cwde
inc
(bad)
xlat
ds
jg
retf
(bad)
outs
adc
adc
iret
shr
push
xchg
dec
icebp
xor
cmps
add
sti
cmc
dec
leave
mov
test
add
xchg
dec
sbb
outs
popf
dec
outs
stos
je
sub
ss
leave
dec
jle
cmps
xor
dec
iret
test
repz
mov
fnstsw
adc
xlat
ret
jmp
sahf
jge
(bad)
xor
push
sub
pop
dec
jmp
dec
jne
xchg
mov
ss
pop
outs
adc
sub
lock
jg
mov
dec
xor
jae
shl
int3
dec
hlt
cmc
mov
std
xchg
jb
cdq
mov
dec
inc
(bad)
mov
clc
mov
leave
pop
(bad)
aad
leave
lock
jmp
sbb
shl
sbb
das
cld
mov
ins
xchg
dec
fldcw
pcmpgtb
stos
(bad)
loopne
mov
xor
dec
icebp
jmp
pop
cmp
pop
or
loop
daa
or
sub
scas
sahf
mov
jb
cmps
(bad)
loopne
xchg
cdq
sbb
out
movs
ret
(bad)
int3
ja
inc
fimul
pop
jb
adc
nop
sar
fs
dec
lds
push
retf
shr
pushf
shr
(bad)
lds
in
mov
mov
or
add
add
in
cld
fs
push
add
outs
pusha
dec
lods
jle
out
je
jge
arpl
stos
inc
fild
mov
scas
push
lds
cmps
sbb
push
inc
cdq
int
outs
js
arpl
es
push
(bad)
push
call
add
mov
dec
sahf
test
test
ds
mov
mov
sahf
push
mov
add
push
mov
mov
sub
cmc
pop
fadd
ficomp
into
arpl
and
jno
mov
mov
xor
faddp
jns
push
inc
cmp
sub
test
xchg
lods
sahf
jne
cld
fimul
out
(bad)
in
hlt
loopne
sbb
out
je
push
fmul
lock
inc
out
add
rcr
out
(bad)
in
jge
in
xor
ds
sahf
mov
xchg
ror
or
sahf
pop
aas
ret
inc
ins
les
outs
lods
adc
sar
jbe
jno
mov
es
xor
xlat
neg
adc
add
lods
cmp
jg
xor
or
or
jns
cmps
mov
rcr
mul
idiv
mov
jl
dec
fstp
movs
jbe
xchg
in
and
in
push
or
and
lds
std
sub
cmp
rcr
ins
ins
mov
or
sub
xchg
mov
shr
adc
scas
xchg
sbb
sti
dec
push
out
jae
mov
push
adc
stos
xor
pop
test
in
inc
push
lods
cmp
mov
imul
fnsave
rcl
push
and
and
and
sub
out
push
lahf
cld
test
and
fwait
jecxz
mov
push
sbb
enter
fwait
adc
popf
inc
imul
xlat
in
cmps
les
jno
adc
add
xchg
sub
xchg
cld
out
mov
xchg
call
adc
xor
inc
xchg
int3
adc
push
jbe
das
sti
sahf
test
push
fcomp
loop
jno
sub
xchg
inc
test
(bad)
xchg
mov
data16
cli
or
add
or
scas
popf
inc
iret
sets
ins
push
in
shl
(bad)
mov
lods
or
xchg
xchg
pop
adc
cmp
push
pop
jmp
mov
ret
add
inc
jp
enter
retf
mov
mov
pop
mov
or
pop
stos
and
jl
adc
out
std
loop
mov
dec
lods
sub
add
push
call
xor
sar
fucom
hlt
jnp
je
jbe
out
in
cmp
lods
inc
or
mov
mov
pusha
subps
cdq
inc
mov
add
mov
mov
or
ret
and
rol
ss
cmp
aas
sub
scas
mov
mov
or
sahf
loop
or
lea
xor
cmp
mov
xchg
dec
ja
std
rcl
(bad)
fsubr
jle
scas
test
mov
xchg
pop
inc
adc
pop
sub
jge
cmp
fstp
jae
outs
jne
mov
hlt
mov
imul
sbb
adc
add
das
bound
out
dec
fldcw
jecxz
and
adc
push
sahf
sbb
retf
pop
push
lods
mov
push
cmc
out
and
or
movs
loop
pop
sbb
test
adc
mov
pop
xchg
jmp
shr
jmp
jl
pusha
jno
arpl
push
push
jg
mov
jmp
mov
outs
cmps
enter
cmps
scas
fist
pop
and
push
lds
push
cmps
scas
movs
dec
imul
fld
int3
leave
push
mov
push
stos
cmp
lods
cs
adc
pop
push
xchg
pushf
(bad)
(bad)
into
mov
lds
test
inc
xor
scas
movs
ss
sub
mov
pop
mov
inc
fdivr
dec
nop
add
add
std
popa
pop
inc
test
retf
mov
jb
cmps
clc
push
push
mov
jg
dec
jae
pxor
pusha
pop
ins
jmp
or
jbe
sbb
ds
jno
push
xor
mov
jb
pandn
fisub
mov
push
in
cdq
pop
loope
xchg
test
popa
lods
mov
les
cmc
jo
cmp
fild
cmp
stos
retf
cwde
test
mov
and
into
aad
mov
dec
adc
jge
into
sub
(bad)
jns
adc
outs
cdq
mov
mov
dec
les
movs
sti
cmp
movs
fcmovnb
(bad)
rcr
push
inc
sbb
push
scas
addr16
loop
mov
nop
movs
mov
dec
stc
push
(bad)
add
movs
xor
out
add
movs
mov
loop
enter
cmp
adc
lds
cs
and
cmps
dec
mov
mov
mov
scas
icebp
push
loop
adc
cmp
scas
cli
out
sar
(bad)
mov
dec
mov
cmp
(bad)
xor
sbb
iret
jmp
push
push
dec
retf
push
iret
mov
test
mov
mov
jae
ins
addr16
mov
mov
aam
sub
loope
std
out
sbb
mov
dec
cmp
xchg
jbe
ins
pushf
rcl
cs
mov
sbb
int3
mov
retf
sbb
ins
imul
fadd
ficomp
xor
or
fsubp
and
movs
xchg
out
shl
gs
add
mov
push
fwait
or
cli
fwait
gs
ret
push
fidiv
pop
rcr
das
popf
movs
push
(bad)
call
(bad)
clc
mov
adc
push
in
outs
xchg
inc
scas
fild
out
mov
pusha
ret
inc
test
sti
push
push
sbb
jl
imul
dec
cli
icebp
jle
mov
sub
xchg
test
sbb
pop
push
(bad)
sbb
push
(bad)
push
jne
ds
or
mov
xor
scas
mov
fidiv
push
(bad)
mov
xchg
inc
fbld
fimul
je
aaa
pop
popa
das
mov
popf
and
mov
in
hlt
in
mov
add
add
out
mov
sbb
sahf
lods
out
mov
pop
aas
jns
and
jae
or
or
cmps
xor
inc
in
mov
scas
push
xchg
push
fild
enter
mov
jno
add
aam
iret
movs
jo
repnz
aas
jge
fadd
ds
xchg
and
outs
push
push
addr16
mov
mov
xchg
imul
inc
mov
xor
(bad)
aad
dec
mov
cmc
stc
mov
cmp
out
pop
pop
inc
mov
mov
mov
js
js
sbb
out
jno
test
imul
aad
adc
or
outs
ror
jnp
mov
fst
mov
sub
(bad)
mov
mov
and
sahf
mov
mov
sbb
mov
push
xor
mov
mov
or
adc
sahf
int
popf
xchg
call
adc
(bad)
mov
cs
aad
adc
sub
push
push
les
and
(bad)
fsubr
(bad)
cs
sub
xchg
dec
xchg
aaa
inc
adc
xor
jns
shl
out
jbe
xchg
mov
(bad)
hlt
sbb
sbb
pop
sbb
cmps
ret
or
lock
jp
xchg
addr16
pop
lahf
jmp
outs
bnd
inc
adc
sbb
ds
test
(bad)
fwait
cmp
adc
sub
scas
mov
jne
sahf
fld
test
fs
jbe
or
fidivr
dec
dec
pop
pop
test
fcom
in
imul
(bad)
cmp
pop
or
lock
xor
jecxz
pushf
hlt
fmul
(bad)
rcr
push
dec
or
ja
inc
inc
adc
xchg
push
pop
dec
pop
iret
in
lds
int3
neg
test
test
pop
pop
mov
(bad)
call
xor
cmps
into
shl
push
add
push
fild
dec
(bad)
in
xor
xor
or
cmp
or
mov
cmp
pop
ror
push
pop
cdq
jmp
or
jbe
into
mov
dec
aad
push
sti
loop
lea
vaddpd
mov
call
movs
mov
aaa
adc
add
dec
jge
push
imul
and
aad
xor
loope
mov
cmp
icebp
push
fisttp
pop
mov
xor
push
push
or
cs
jle
jae
or
inc
jge
mov
(bad)
lods
(bad)
adc
jle
retf
dec
repz
scas
add
nop
push
xor
mov
daa
repz
scas
mov
cmp
push
aam
fcmovb
mov
sub
in
hlt
cmp
in
mov
call
cwde
outs
(bad)
push
sbb
mov
aaa
mov
dec
loope
sbb
pop
adc
cmps
fidiv
in
sbb
popf
xchg
out
jnp
xor
stos
sbb
mov
mov
pop
pop
inc
(bad)
loope
fwait
or
adc
shl
mov
inc
gs
lahf
ins
(bad)
adc
std
mov
out
add
dec
mov
jo
cmp
pop
jne
jne
xor
jge
jmp
sbb
fcmovbe
scas
shr
xlat
add
and
aam
jg
(bad)
xor
mov
je
repz
mov
push
sbb
std
fmul
adc
add
shl
test
mov
vshufpd
jnp
stos
inc
push
xor
cmp
push
xor
imul
scas
aam
call
cmp
(bad)
gs
daa
and
sahf
pushf
fsub
pushf
lock
pop
jecxz
xlat
mov
popa
cs
cs
and
push
dec
or
dec
sbb
dec
into
movs
outs
jmp
into
(bad)
std
xor
jbe
add
sub
cld
aad
mov
sbb
enter
sub
cdq
adc
cmps
ds
xor
push
push
xchg
hlt
jp
imul
fs
jle
push
jmp
pop
jecxz
and
xchg
or
rol
in
std
aam
ret
mov
mov
dec
cmps
mov
not
daa
icebp
adc
ret
gs
aam
aad
fwait
adc
push
adc
sbb
gs
jmp
enter
and
test
cs
pop
pop
lds
es
jno
dec
outs
not
xchg
inc
(bad)
ss
test
xchg
aaa
pop
(bad)
out
dec
ja
hlt
push
dec
les
lahf
push
mov
shr
mov
out
and
xor
sbb
out
sbb
(bad)
or
sub
mov
jmp
dec
or
push
fdivr
push
adc
cwde
pushf
(bad)
jg
(bad)
cmps
push
leave
mov
push
mov
dec
stos
mov
jb
cwde
pop
jne
(bad)
mov
mov
cmps
and
cmp
mov
push
sbb
arpl
jg
mov
cmp
in
push
xchg
sbb
in
or
das
hlt
fmul
fst
jmp
movs
scas
mov
daa
jmp
fst
adc
pop
adc
sbb
sbb
push
cmc
add
xor
sbb
xor
mov
bound
rol
rcl
sti
add
xchg
mov
xchg
std
cmp
pop
mul
mov
je
mov
mov
cmps
or
or
(bad)
adc
hlt
inc
cmps
dec
sbb
shr
ficom
lea
dec
mov
xchg
std
sbb
add
xchg
aad
and
jbe
arpl
shl
(bad)
mov
sub
inc
test
xor
and
cmps
mov
out
jmp
lds
sbb
popa
out
mov
push
xchg
mov
xchg
mov
jbe
out
push
mov
pop
ja
sub
cmps
lds
cmp
iret
ins
add
test
dec
xchg
out
out
stos
aam
mov
cmp
push
retf
dec
(bad)
mov
jns
call
dec
cmc
push
cmps
mov
aas
icebp
jae
aaa
outs
dec
xor
dec
loop
add
mov
es
jbe
jge
cmc
es
mov
jmp
in
jne
or
loope
test
dec
je
cmps
mov
cld
aad
or
adc
call
sbb
mov
mov
mov
jmp
add
and
jge
push
out
lods
stos
xchg
push
or
cld
int
movs
cs
push
cmp
dec
stos
fsubr
jp
push
arpl
pop
mov
fmul
in
and
or
int
push
dec
lds
or
fisub
fcomp
sub
aaa
hlt
xchg
sub
pop
aad
inc
xchg
mov
fwait
dec
xor
pushf
mov
ror
ins
jae
pusha
xor
mov
cmp
sub
mov
mov
fadd
hlt
out
nop
cs
jge
pop
test
mov
ins
sub
pusha
push
mov
(bad)
sar
lock
repnz
jge
daa
jns
dec
mov
pop
add
ins
mov
nop
fist
add
mov
ins
push
loop
xor
ins
jmp
nop
fwait
loope
fwait
aas
cdq
dec
inc
(bad)
mov
inc
xor
dec
or
push
add
mov
ins
call
scas
mov
mov
out
repnz
lds
fdivr
movs
mov
test
push
cmc
sahf
fs
cmp
test
sbb
int
leave
imul
dec
sub
cwde
inc
adc
(bad)
(bad)
loope
adc
idiv
sub
jmp
lahf
dec
mov
cs
jo
fld
dec
xchg
xchg
dec
pop
int3
inc
in
jecxz
sti
pushf
xchg
sahf
sbb
pop
jnp
ins
inc
daa
jl
push
loopne
adc
mov
in
inc
xor
inc
(bad)
or
dec
jmp
aad
into
adc
(bad)
sbb
jg
xchg
mov
outs
inc
mov
in
scas
idiv
mov
sbb
ror
cmp
sbb
aaa
call
idiv
rol
push
jmp
mov
sub
ins
ret
ret
ret
mov
xchg
out
icebp
or
mov
ins
scas
scas
xor
push
push
mov
scas
or
jp
push
cmp
pop
adc
jg
div
scas
outs
fidiv
iret
or
jmp
sub
sub
dec
jnp
jle
dec
movs
test
adc
sub
lock
repnz
cld
push
ja
cmc
out
aad
les
push
mov
mov
and
adc
dec
mov
sub
in
adc
sbb
ins
cmps
aad
add
mov
popa
or
das
push
push
jae
jmp
repnz
xor
(bad)
mov
shl
nop
sar
aas
or
pop
sbb
add
xchg
xor
push
pop
cmc
retf
inc
imul
repz
shr
iret
mov
ins
jbe
mov
ss
aaa
ss
cmp
dec
fld
cwde
fist
push
sahf
idiv
mov
mov
rcr
sbb
mul
nop
xor
out
loope
cmc
cmc
jge
ja
or
cmp
scas
(bad)
sbb
jno
sub
sub
jne
into
cmps
push
sbb
in
cld
loopne
test
aam
jmp
adc
jb
jne
and
mov
iret
lahf
mov
cmps
(bad)
out
push
pop
push
movs
mov
adc
cmp
dec
xor
addr16
or
or
(bad)
xlat
jo
mov
out
inc
lods
arpl
cs
std
or
lds
cmp
xchg
nop
data16
xor
sub
dec
and
mov
(bad)
popf
jns
repz
xor
pop
jge
scas
push
adc
and
popf
or
mov
in
movs
and
or
into
mov
aaa
sub
arpl
loop
rol
xor
mov
dec
stos
push
rol
lea
int
mov
cld
mov
dec
dec
setg
out
mov
jne
aad
mov
stos
test
xlat
cmp
int3
out
out
aaa
push
jge
adc
push
popa
fcomip
cdq
push
and
pop
sbb
and
mov
push
outs
pop
pop
xchg
(bad)
pop
and
pop
or
xor
or
sahf
mov
mov
mov
fimul
int
hlt
mov
xchg
in
jmp
mov
or
(bad)
xchg
xor
ret
shr
outs
aaa
inc
add
mov
aaa
fcomp
ins
inc
in
call
or
inc
icebp
gs
xor
xchg
mov
fadd
mov
add
pop
mov
sar
jge
or
mov
call
dec
cmp
popf
popa
jns
mov
ins
jmp
xlat
inc
and
adc
dec
retf
pop
hlt
in
push
lahf
rcr
mov
movs
leave
aad
xor
arpl
push
and
dec
cli
in
jp
mov
add
xor
lds
and
mov
fidivr
pop
ins
cmc
mov
in
pop
xchg
popa
push
stos
popa
and
in
movs
adc
(bad)
in
push
dec
arpl
sub
retf
loopne
mov
mov
mov
pop
sbb
test
stc
clc
outs
cmp
push
mov
dec
(bad)
cmc
scas
inc
loopne
out
mov
ror
jne
gs
push
(bad)
sbb
pop
aaa
xor
pop
out
and
jne
adc
popf
inc
cmps
push
ja
pop
shl
cmp
sub
clc
enter
imul
(bad)
jle
adc
add
xchg
pop
in
mov
dec
outs
cmps
test
adc
or
movs
add
arpl
mov
inc
adc
loopne
mov
imul
addr16
je
loope
ret
movs
pop
and
inc
sub
cmp
jle
idiv
cwde
pop
cld
lock
rcr
add
push
jl
(bad)
clc
(bad)
repz
aad
add
(bad)
jmp
add
inc
ror
sbb
jbe
push
and
iret
or
adc
jns
cmp
or
(bad)
jg
mov
and
retf
fisttp
mov
aaa
data16
test
xor
push
mov
xchg
mov
test
(bad)
call
data16
push
cmp
inc
or
push
add
cmp
add
(bad)
jb
push
ficom
fwait
bound
lds
mov
xchg
stc
fcmove
(bad)
lahf
icebp
cmc
dec
loop
ins
jns
jp
aam
push
imul
inc
inc
pop
mov
add
andps
scas
mov
mov
adc
test
sahf
ins
retf
mov
jo
adc
sti
fcmovnbe
mov
sbb
and
shl
xchg
mov
(bad)
scas
and
(bad)
test
aad
and
push
ror
clc
cmps
iret
div
add
xchg
(bad)
xchg
jne
stos
iret
xor
(bad)
call
shl
or
jge
repz
xor
lock
out
push
mov
inc
cs
(bad)
sti
add
(bad)
sahf
repnz
std
sbb
out
mov
fisubr
xor
xchg
jmp
pop
xchg
cdq
mov
mov
sbb
(bad)
in
movs
clc
jns
add
mov
loop
sbb
xor
aam
(bad)
jmp
loopne
es
push
outs
lahf
cld
sar
mov
scas
daa
mov
call
push
push
pop
lea
inc
mov
outs
test
cwde
out
scas
dec
cmps
leave
cli
jbe
jl
mov
xor
es
dec
inc
adc
pop
xchg
xchg
div
aaa
fadd
push
add
aaa
mov
pcmpeqb
cmp
xchg
int
test
stc
and
inc
bound
mul
xchg
sub
enter
neg
pusha
in
push
cmp
xchg
or
rcr
xchg
cmp
les
stos
mov
adc
push
add
lea
dec
bound
adc
cmps
sti
sahf
cmp
mov
loop
call
out
xor
in
es
icebp
mov
inc
cdq
jne
mov
mov
cmp
push
cmc
mov
(bad)
mov
inc
jl
loopne
mov
shl
(bad)
mov
fmul
test
or
jno
int
or
aaa
and
lock
fist
mov
mov
movs
mov
adc
add
mov
lahf
ret
stos
(bad)
in
out
popa
pop
jo
and
adc
and
ret
xchg
fsub
add
and
sbb
xchg
movs
mov
cwde
shl
pop
dec
sti
outs
outs
fs
lock
nop
pop
iret
push
dec
or
std
xlat
inc
inc
mov
sbb
pop
mov
inc
(bad)
mov
ret
out
(bad)
fisttp
cmp
imul
ficom
jl
js
inc
(bad)
xchg
dec
push
xor
outs
mov
pop
aam
iret
mul
test
mov
add
xor
rol
sub
inc
repnz
lea
into
add
cli
jp
adc
xor
fs
cmps
mov
sbb
ds
xchg
iret
lds
maskmovq
loop
xor
mov
mov
adc
dec
popf
ror
fcmove
xchg
mov
out
push
jmp
sbb
jns
mov
ss
test
sbb
les
push
sbb
and
nop
adc
adc
jo
jns
lar
fwait
test
xor
not
jp
pop
sub
sahf
dec
(bad)
cmps
jo
dec
xlat
scas
les
ins
sub
lock
or
add
inc
movs
dec
movs
stc
mov
fisub
adc
dec
aad
test
xchg
xor
sub
stos
in
and
lea
mov
out
mov
push
sbb
mov
in
rol
pop
dec
fbstp
or
or
push
sbb
in
fdivr
cwde
sbb
les
xor
dec
sbb
jb
(bad)
jmp
or
xor
mov
pop
js
pop
push
or
icebp
pop
mov
dec
sti
(bad)
loopne
sti
mov
add
mov
xor
xchg
push
lahf
lods
lds
outs
in
inc
(bad)
mov
ds
aaa
(bad)
pop
pop
jl
pop
jo
test
mov
xchg
test
dec
jl
and
aam
and
(bad)
aam
jp
xor
pop
mov
test
push
leave
mov
push
cli
add
out
mov
mov
inc
outs
lds
and
sub
in
(bad)
mov
or
add
sub
(bad)
mul
les
pushf
push
jle
outs
outs
xchg
pop
stc
dec
idiv
dec
out
cmp
xchg
cmp
push
gs
(bad)
movs
mov
popa
arpl
ficomp
es
gs
jp
mov
adc
and
repnz
out
mov
out
mov
mov
outs
std
shl
enter
fwait
jns
test
mov
xlat
pop
leave
push
out
adc
xchg
pop
dec
mov
jle
pop
pop
dec
inc
iret
shr
adc
out
out
fcmove
cld
out
ins
xor
jge
outs
mov
adc
mov
loopne
pushf
push
dec
xchg
es
(bad)
in
add
les
stos
sub
int3
mov
xchg
pushf
icebp
mov
aad
retf
dec
bound
retf
dec
cmp
movs
mov
pop
push
mov
pop
jle
icebp
sbb
loopne
leave
popa
xor
xor
cmps
pushf
test
cmps
int3
adc
das
jae
sbb
movs
ror
xchg
mov
imul
test
aad
add
lock
data16
push
(bad)
shl
push
and
aad
jmp
xor
mov
sbb
ror
jg
mov
sti
int3
aam
xchg
into
les
cmps
mov
lea
dec
rol
stos
mov
cmp
out
outs
xchg
jne
push
cmp
nop
sbb
add
mov
hlt
pop
std
mov
push
push
in
icebp
xchg
push
xor
xor
loopne
jb
xor
push
cli
ss
scas
cmp
sub
push
mov
xor
mov
mov
rcr
inc
imul
mov
scas
repz
push
adc
and
fild
mov
inc
scas
mov
and
jge
sub
mov
sub
loopne
stos
xor
cmp
scas
fcmovu
mov
sti
xchg
mov
in
add
es
sti
xchg
pushf
mov
inc
popa
sbb
dec
mov
movs
mov
ds
xor
mov
lea
xor
add
pand
sub
mov
cmp
lock
adc
dec
rcr
into
gs
pop
jecxz
inc
jge
fs
sbb
xchg
je
and
adc
push
lods
(bad)
dec
cmp
pop
rcr
movs
jno
mov
jl
(bad)
sbb
call
xor
jo
sbb
scas
rol
aaa
and
add
loopne
push
stos
jmp
(bad)
sbb
sahf
sahf
jnp
cmp
daa
lods
push
push
or
pushf
not
test
out
mov
hlt
in
add
sub
test
xor
push
jno
pop
jb
mov
mov
add
je
pause
pop
mov
lahf
sub
xor
xchg
retf
push
pop
adc
jmp
push
jno
out
out
test
pop
push
lock
rep
ja
mov
mov
scas
dec
inc
dec
adc
ja
cmp
scas
data16
fs
and
mov
sub
int
fwait
aam
push
aad
js
sbb
(bad)
sbb
imul
shr
and
cmp
sbb
add
add
dec
inc
mov
dec
adc
and
lahf
and
into
test
and
jo
mov
xchg
or
and
mov
mov
mov
enter
in
and
imul
xchg
mov
cmp
(bad)
jo
pop
dec
int3
sub
mov
jle
(bad)
test
jnp
in
or
push
xchg
xchg
loope
pop
xor
sbb
int3
jle
iret
scas
xor
inc
add
jle
lods
call
arpl
(bad)
hlt
mov
jge
xchg
hlt
shl
jmp
push
sub
scas
fs
mov
mov
es
in
jmp
jne
fwait
outs
mov
xor
inc
jge
test
scas
movs
sub
mov
jmp
out
push
mov
rol
cmps
iret
cs
dec
mov
cmc
cdq
mov
dec
mov
aam
cmc
jbe
ins
cmp
pushf
out
sar
cdq
lds
sbb
or
std
data16
mov
cmp
push
int
mul
popa
pop
std
add
push
xchg
jle
inc
mov
lea
cmp
jo
leave
inc
or
and
gs
sub
int
fs
popfw
push
je
cmps
scas
hlt
xchg
mov
hlt
outs
aad
jno
fiadd
push
(bad)
adc
dec
push
(bad)
cwde
inc
pop
cmp
pop
mov
or
loope
test
adc
sahf
pop
pop
push
push
xchg
push
frstor
out
out
fiadd
cmp
and
mov
and
(bad)
(bad)
in
xchg
mov
es
add
in
cdq
retf
pop
mov
lods
jmp
test
adc
imul
sahf
pop
xchg
pop
adc
cmp
jecxz
test
mov
test
les
or
jne
lds
ficom
push
push
dec
adc
push
aas
ficom
push
xchg
iret
sbb
cmp
push
xchg
and
push
mov
add
or
mov
jecxz
sahf
dec
inc
ror
dec
fiadd
stos
ss
icebp
inc
xor
fs
sti
lods
mov
dec
pop
pop
jno
push
mov
iret
jnp
out
(bad)
aad
mov
js
int
retf
out
(bad)
fnstcw
add
add
sbb
js
jo
add
mov
aad
ins
push
cmc
sbb
jp
loope
out
lds
jae
add
fadd
xchg
idiv
test
rcl
out
cmc
pop
dec
call
jnp
repnz
and
scas
fs
fdiv
mov
test
xchg
std
add
jnp
inc
dec
aam
and
jne
sar
mov
js
nop
aas
jne
pop
cmp
push
cmc
fidiv
xchg
adc
or
cld
push
mov
inc
xor
push
add
mov
imul
popa
push
xchg
push
and
stos
mov
or
and
je
mov
dec
inc
push
sbb
out
cmp
lds
lahf
outs
scas
aas
inc
aas
mov
cmp
mov
dec
aas
inc
mov
xchg
mov
add
mov
sub
mov
push
(bad)
sahf
cmp
or
inc
inc
in
fst
inc
adc
scas
in
bound
int
ds
scas
fsubr
out
sbb
adc
lahf
sub
dec
sub
repz
(bad)
ds
xchg
cmps
out
xchg
ret
out
adc
fidiv
aad
mov
mov
test
jo
dec
pusha
mov
or
scas
lods
mov
xchg
push
inc
mov
das
jae
push
sub
pop
popa
gs
xchg
outs
ins
fcomp
fistp
sbb
mov
cld
inc
jbe
pop
or
lahf
in
xor
ins
cmps
sub
adc
bound
push
cmp
fnsave
push
cs
std
mov
test
mov
stos
pop
jne
(bad)
add
lds
mov
sbb
inc
jnp
and
mov
(bad)
fucomip
dec
dec
cmps
add
data16
leave
sub
fsubrp
xchg
sub
fnsave
iret
call
and
inc
js
outs
xchg
jmp
xchg
add
mov
sti
in
ds
ds
movs
cmp
and
and
mov
inc
sub
js
mov
shl
sbb
inc
cs
mov
(bad)
fwait
ret
sbb
inc
fxch
hlt
(bad)
sub
or
adc
push
fld
nop
scas
xchg
inc
nop
and
movs
ins
mov
fldcw
lods
fs
(bad)
lods
ins
int
in
mov
movs
push
cmp
pop
in
iret
mov
in
push
pop
scas
pop
sbb
mov
popa
cmps
jne
cmp
xchg
mov
cwde
pop
lgs
jle
jo
push
push
stos
inc
sub
xchg
call
and
or
dec
push
pop
jbe
add
cmp
mov
sahf
and
mov
jge
push
cmp
mov
cmps
ret
jo
and
cmp
push
push
jmp
jmp
xchg
jle
mov
or
sbb
jg
pop
jb
jle
mov
fsubp
repnz
in
ds
mov
push
out
(bad)
push
out
sbb
outs
outs
push
pop
dec
test
stos
and
push
or
and
ins
add
add
movs
jl
jno
shl
sahf
ds
lds
ins
ficom
cs
adc
pop
and
or
outs
dec
mov
out
pop
outs
js
and
pop
pop
inc
aas
adc
xor
sar
ss
push
add
mov
cmp
push
and
add
scas
xor
pusha
sub
jp
xchg
pop
xchg
mov
push
push
push
jno
sbb
popa
and
ds
fld
mov
pop
mov
lods
test
iret
jmp
sahf
hlt
int
call
je
cs
out
movlps
mov
dec
add
dec
in
and
add
les
inc
stc
(bad)
pop
jmp
std
mov
mov
push
mov
out
push
ds
adc
aaa
mov
xchg
outs
hlt
lods
xchg
into
add
mov
sub
mov
mov
push
mov
ret
xchg
fisubr
jbe
ret
imul
inc
leave
or
int3
pop
stos
repnz
fmul
into
lds
fs
jo
lock
sbb
push
xor
push
popf
ja
daa
inc
movs
mov
test
mov
gs
push
pop
or
dec
adc
jle
sbb
jae
fidivr
int
test
pop
and
mov
pop
dec
movs
cmp
push
outs
cmp
lea
sahf
xchg
adc
sbb
fs
aad
lods
cmp
inc
jle
push
mov
rcl
in
mov
stos
push
hlt
pop
int
sub
xchg
das
test
aam
and
sub
out
xchg
jmp
dec
mov
scas
push
push
mov
gs
pop
test
push
inc
and
icebp
movs
(bad)
scas
xchg
hlt
and
jge
inc
sub
pop
or
push
fcom
sub
inc
mov
xor
cmps
sub
popa
inc
jb
aas
icebp
jb
pop
sahf
adc
mov
shr
cld
icebp
push
ror
push
or
push
aad
mov
or
cmp
leave
cmps
and
mov
mov
adc
aas
pop
push
inc
ins
clc
dec
jg
add
sub
movs
enter
aad
xor
or
popa
retf
imul
mov
je
inc
aas
popf
inc
(bad)
ins
icebp
dec
jge
cmp
neg
les
outs
cmc
in
imul
sti
mov
push
mul
retf
aas
in
dec
ss
clc
movs
data16
and
cmps
jge
and
cmp
inc
cmps
or
in
ins
imul
sahf
push
and
bound
pop
push
scas
loopne
retf
jno
mov
mov
sub
jmp
in
mov
cmp
sub
push
outs
pop
out
sub
daa
mov
dec
mov
inc
jno
pop
addr16
pop
mov
pop
jbe
pop
push
imul
into
mov
cmp
into
adc
ds
retf
mov
inc
pop
and
sti
lds
push
lds
xchg
pop
leave
sbb
hlt
cmp
sbb
adc
inc
outs
mov
ds
mov
ins
jle
hlt
rcr
cs
retf
mov
int
inc
xchg
jg
loopne
adc
jmp
fs
pop
into
xchg
xchg
pop
ds
int
push
in
std
dec
fcmovnu
test
imul
int3
aad
and
xor
scas
(bad)
into
jge
cmps
into
and
lods
(bad)
mov
and
jecxz
in
ds
pop
jle
div
add
and
inc
adc
retf
call
and
sbb
jno
xor
fmul
out
mov
sahf
repz
(bad)
push
dec
fnstcw
div
cwde
add
jmp
sub
push
jle
cli
(bad)
adc
fdiv
push
fst
ins
jmp
in
jnp
(bad)
sbb
cmp
cmp
popf
test
fild
aad
jno
xor
push
stc
icebp
mul
aam
pop
jmp
jmp
iret
adc
ret
(bad)
pusha
cmps
mul
add
xchg
push
in
fnsave
xor
fst
sbb
or
inc
fidivr
mov
lods
mov
sar
sbb
adc
fidiv
and
ffreep
lock
loop
je
cmp
aad
and
xchg
push
out
sub
dec
xchg
push
mov
xlat
or
fistp
adc
sahf
sahf
inc
popf
gs
mov
pop
xor
sbb
(bad)
cld
(bad)
fisubr
sub
cmp
inc
jecxz
inc
aas
cmp
les
xor
pushf
jmp
js
cmp
cmps
stos
jbe
inc
fld
or
sbb
dec
mov
jne
inc
push
mov
scas
lea
sahf
cmp
adc
adc
xchg
outs
or
into
fsubrp
push
xchg
lea
dec
push
in
mov
and
int
and
(bad)
mov
movs
mov
or
shr
lock
adc
(bad)
in
ret
es
push
pop
jnp
or
mov
ss
movs
xchg
pop
fisttp
jle
scas
out
xchg
outs
sbb
ficom
xor
xchg
cmc
adc
cs
adc
stc
inc
sbb
push
imul
(bad)
(bad)
gs
mov
ja
pop
fild
movs
repnz
outs
aad
inc
fld
enter
mov
(bad)
mov
push
cmp
jmp
mov
mov
and
push
jp
mov
xor
addr16
pop
fld
fndisi(8087
(bad)
mov
call
out
dec
in
ins
inc
ds
inc
push
in
inc
pop
dec
mov
xchg
neg
loop
adc
retf
loopne
jle
dec
push
jae
es
add
lods
xor
int
cmc
leave
sub
scas
add
jmp
in
mov
(bad)
push
(bad)
ret
mov
out
ror
jne
and
stc
out
sti
and
dec
test
add
nop
(bad)
sub
xor
cmp
or
idiv
and
imul
xor
xor
jns
add
pusha
aad
cmp
movs
int
mov
mov
xor
rcl
data16
mov
push
push
cmc
das
imul
push
and
dec
sub
hlt
int
aam
in
mov
inc
fadd
rol
cmc
(bad)
call
test
inc
cli
in
and
stos
or
mov
jle
inc
fs
ret
mov
ja
leave
mov
cmps
xchg
aad
inc
sbb
lods
ja
push
lock
int
sbb
inc
lea
jge
xchg
mov
inc
jmp
pop
jge
scas
outs
push
js
jl
or
mov
test
(bad)
call
push
out
mov
scas
and
pop
mov
(bad)
lods
add
push
ja
or
push
popa
aam
inc
imul
or
inc
cld
das
test
clc
jmp
call
test
and
push
xchg
pop
and
lods
fcom
pop
(bad)
in
jns
xchg
push
or
fsubr
lods
das
and
add
ret
sub
dec
inc
pop
push
add
push
pop
sbb
sub
xor
ss
jo
pushf
fs
mov
ficom
adc
inc
xor
and
pop
out
xor
loopne
pushf
mov
fst
sbb
outs
cdq
pop
mov
mov
pop
dec
into
and
dec
xor
xchg
mov
cmps
daa
daa
addr16
icebp
leave
dec
std
cmc
arpl
cmp
in
push
sub
push
sbb
jbe
mov
adc
cmp
pop
in
mov
cmp
into
in
retf
js
cmp
cmps
push
addr16
mov
lea
loop
in
jb
ins
xor
cmp
cmps
int3
inc
cmps
pop
pop
int
jge
stos
popf
call
sub
mov
data16
xchg
xchg
pop
add
fmul
or
adc
movs
inc
cmp
nop
sti
inc
shr
sub
push
inc
lods
cmps
or
cmp
xor
xor
or
mov
jb
aaa
and
mov
sbb
mov
dec
sbb
cmc
jecxz
adc
add
dec
aaa
repz
sar
sbb
dec
jle
adc
pusha
jbe
div
xor
loope
movaps
jg
adc
std
add
test
sbb
and
inc
shr
xchg
cld
clc
jae
in
push
cli
inc
pop
jp
cdq
mov
not
lea
sti
retf
mov
ds
push
jmp
cld
xor
pushf
xor
in
or
(bad)
stos
movs
xchg
pop
cmovns
pop
aas
mov
mov
imul
pushf
pop
cs
sti
stos
push
sbb
in
sar
les
xchg
jmp
and
jecxz
push
mov
sub
jae
xchg
adc
jmp
(bad)
push
pushf
aas
into
adc
dec
leave
jnp
ins
inc
aad
ffreep
mov
(bad)
push
stos
out
(bad)
push
cmp
in
je
out
int3
xor
pop
aam
aaa
ror
retf
add
daa
cdq
leave
cs
outs
movs
or
les
push
mov
sbb
pop
rcr
frstor
jno
xlat
dec
jle
mov
dec
daa
and
push
(bad)
jle
in
mov
jmp
mov
movs
pop
out
retf
dec
rcl
call
push
das
jo
in
cmps
jnp
dec
(bad)
(bad)
aaa
scas
mov
fst
icebp
out
(bad)
mov
sbb
in
mov
(bad)
xchg
cmp
ins
xor
sub
loope
int3
(bad)
cwde
mov
xor
pop
int
outs
mov
mov
pushf
lahf
jmp
mov
cmp
es
out
idiv
xchg
jmp
scas
jmp
lods
pop
push
xchg
and
jp
dec
ss
pop
sbb
mov
scas
push
mov
mov
fld
mov
sbb
jl
pop
jne
sti
inc
js
jnp
sbb
shl
sbb
loop
sbb
movs
clc
outs
jae
dec
(bad)
mov
es
cs
dec
fimul
cwde
dec
xchg
jmp
jg
and
je
ds
ins
pop
gs
add
xchg
xchg
mov
push
xlat
jnp
arpl
ss
mov
and
pop
xchg
popa
mov
cmp
movs
cld
mov
mov
add
sub
neg
jp
push
ja
mov
dec
fmulp
loop
inc
in
loope
aam
add
in
(bad)
retf
imul
jmp
ret
mov
loopne
xor
cs
fmul
pop
dec
xor
bound
mov
inc
movs
(bad)
jge
das
add
out
cli
stos
push
sbb
outs
push
hlt
xor
(bad)
fld
retf
pop
daa
in
adc
push
xor
(bad)
pop
dec
xchg
push
nop
arpl
loopne
mov
inc
rcr
shl
push
loop
xor
inc
aam
jne
add
xchg
aas
push
add
adc
shl
ins
sbb
push
(bad)
div
pop
mov
push
mov
mov
in
sub
(bad)
add
or
mov
cmove
neg
loope
cmps
scas
jmp
(bad)
adc
rol
xor
adc
int
mov
std
shl
test
mov
movs
mov
push
mov
xchg
push
(bad)
push
ss
shl
mov
es
call
dec
scas
les
pushf
dec
cld
std
fcomp
mov
or
cmp
cld
es
lock
mov
push
stc
jge
pushf
inc
pop
scas
pushf
dec
jb
inc
push
(bad)
cli
sti
outs
mov
mov
cmp
(bad)
stos
fist
test
outs
scas
ja
pop
inc
retf
cld
aaa
inc
inc
scas
jno
xlat
jbe
enter
data16
lock
jo
out
cmp
mov
rcr
and
pop
jne
lods
sbb
xor
mov
push
call
mov
lahf
fadd
dec
movs
repnz
jne
mov
add
shr
fist
inc
and
neg
push
outs
lds
in
mov
jb
dec
inc
mov
and
ror
cmp
retf
mov
fs
mov
fisttp
das
std
mov
into
cmc
or
lahf
cmps
outs
mov
div
or
shl
(bad)
push
add
addr16
and
mov
or
idiv
cld
cmp
imul
sub
call
jno
jmp
(bad)
movs
mov
scas
iret
xchg
nop
or
mov
(bad)
lock
nop
xchg
nop
pop
pop
add
mov
(bad)
pop
or
das
rcl
sbb
inc
test
retf
inc
mov
jecxz
push
push
inc
inc
sahf
or
in
cmp
inc
in
mov
add
mov
inc
icebp
seta
or
mov
pushf
xor
stos
iret
push
adc
movs
test
fdivp
fisub
sbb
test
cmp
and
jle
into
gs
cdq
inc
sti
sbb
push
imul
les
ds
sub
imul
xchg
fcomp
jmp
imul
and
mov
xchg
or
mov
test
cmp
mov
add
pop
push
inc
inc
aam
out
lods
cmc
inc
dec
jle
jmp
sbb
add
pop
add
and
xor
and
into
jne
imul
ins
test
(bad)
stc
and
and
and
jbe
lock
fidiv
dec
sar
scas
mov
icebp
mov
(bad)
(bad)
rcl
fst
jbe
mov
ds
cwde
jecxz
cld
(bad)
xchg
push
loop
xor
jo
inc
js
pop
push
pop
mov
mov
mov
enter
and
inc
(bad)
or
sbb
sub
inc
xchg
mov
rcl
addr16
or
sbb
int
sbb
inc
repnz
mov
gs
push
jno
popf
mov
add
addr16
inc
push
add
cli
sub
ja
jae
std
jmp
lds
lea
and
icebp
cs
aas
test
and
stos
jle
dec
xchg
test
ror
std
and
nop
adc
add
xchg
jne
repz
aas
push
cmp
hlt
xor
pop
pop
push
mov
push
jl
stos
arpl
xor
mov
push
stc
mov
adc
outs
aad
jmp
ds
jnp
dec
xor
add
xlat
mov
aad
and
lds
lods
pusha
add
idiv
inc
dec
add
pop
jae
outs
push
push
cmps
mov
xor
push
lock
je
add
add
movs
ds
(bad)
out
rcr
cmp
push
rcl
sbb
ja
pmaxsw
cli
mov
cmp
xchg
loop
bound
jecxz
ds
aad
xchg
(bad)
jl
sub
idiv
scas
test
test
das
sbb
shr
repnz
cli
jnp
xor
je
nop
xchg
pop
xchg
dec
scas
mov
and
mov
bnd
push
add
sbb
xchg
push
sub
or
sar
fdivr
dec
sub
inc
sub
jge
nop
or
xlat
dec
pop
out
lods
in
ficom
push
push
loop
icebp
or
dec
xchg
xor
stc
int3
push
js
out
push
ins
mov
dec
adc
xor
xchg
pop
inc
inc
mov
xor
cmp
pop
stos
fistp
clc
cmp
jle
imul
(bad)
sar
cli
test
das
call
ds
sub
or
fist
scas
dec
xlat
ror
(bad)
cld
jmp
adc
jl
xor
xor
test
out
test
inc
or
pop
sub
aaa
movs
xchg
out
or
stc
pop
xlat
jle
cmp
cmp
imul
lahf
rcr
(bad)
pop
shl
aad
ds
mov
pop
aas
lock
push
dec
mov
lock
push
inc
jmp
push
jg
dec
mov
arpl
fwait
xchg
aaa
jmp
lock
or
sub
aaa
pop
inc
dec
sbb
add
sub
test
iret
mov
fbstp
cmp
push
xchg
fwait
pushf
pop
lds
push
sub
xor
jb
ds
out
jno
or
into
add
aaa
cmp
fs
push
retf
ins
ret
in
ror
jecxz
gs
js
push
push
sbb
xchg
bound
mov
inc
scas
jno
sub
icebp
rol
xchg
into
mov
pop
cmp
cs
fwait
pop
push
inc
add
sub
imul
dec
mov
cdq
inc
es
ins
out
push
pop
add
sub
popa
sub
mov
xchg
stos
xor
push
rcl
adc
and
test
scas
push
mov
mov
nop
outs
sbb
mov
xor
(bad)
fist
in
and
xchg
push
stos
add
sbb
inc
retf
dec
pop
add
std
cwde
cmp
inc
add
ja
lock
sub
and
scas
jecxz
ror
out
cmc
ds
clc
sub
pop
test
test
dec
xchg
mov
sub
mov
mov
pusha
lods
dec
ja
popf
mov
cmc
inc
call
sbb
xchg
rcl
xor
add
jns
data16
inc
push
pop
call
dec
imul
sar
sbb
shl
add
adc
push
jmp
mov
mov
jmp
inc
jle
idiv
push
ror
jae
jmp
cmp
fisubr
(bad)
ror
repnz
add
retf
dec
cmps
mov
jno
arpl
cli
ret
retf
add
lahf
arpl
pop
sbb
mov
es
test
lahf
pop
add
xor
jae
dec
test
mov
aam
mov
mov
cmp
loopne
dec
fist
add
dec
or
outs
and
dec
mov
mov
adc
repnz
mov
cmp
mov
in
mov
sub
pop
arpl
and
inc
jae
jne
push
mov
push
jbe
sbb
inc
mov
mov
cdq
(bad)
and
sbb
(bad)
in
fmul
xor
pop
fs
nop
leave
call
pushf
stos
stos
enter
lods
or
fs
in
cmp
mov
movs
nop
jno
rcr
repnz
(bad)
(bad)
rol
rcr
push
inc
push
addr16
dec
dec
sub
aad
pusha
or
cwde
(bad)
mov
cmp
sar
outs
sbb
inc
inc
push
push
bound
mov
test
mov
xchg
xchg
outs
in
cmc
mov
push
ret
pop
cmp
inc
push
outs
mov
and
jle
scas
mov
aam
fnstcw
jmp
jle
and
and
movs
jmp
inc
iret
inc
out
mov
outs
ret
clc
call
sbb
pop
lds
sub
in
cmp
pusha
pop
dec
mov
scas
pop
iret
add
sbb
push
and
(bad)
scas
popf
out
pop
mov
pop
test
scas
cmp
mov
loopne
and
push
dec
(bad)
mov
fmul
sbb
xchg
or
push
push
mov
jmp
dec
out
xchg
xchg
outs
mov
dec
repz
(bad)
fistp
les
inc
cs
push
(bad)
fwait
bound
xchg
into
test
mov
fdivr
push
cmp
jnp
cmp
in
and
(bad)
mov
(bad)
or
leave
fsubr
mov
jmp
jecxz
shl
jnp
push
lock
pop
dec
arpl
(bad)
rcr
lods
(bad)
(bad)
fucomi
jno
fwait
into
data16
scas
mov
mov
xor
neg
(bad)
std
test
adc
xchg
ror
gs
lahf
cdq
sahf
xchg
ret
mov
fld
shl
cmp
and
push
addr16
dec
out
adc
repnz
iret
(bad)
and
aaa
xchg
push
jp
jge
mov
jl
mov
lods
or
call
adc
in
dec
adc
cdq
pop
ss
sub
pop
cmp
sahf
loop
mov
mov
pop
pop
xlat
cmp
and
js
adc
mov
retf
sub
xlat
cmp
imul
cmps
adc
mov
push
xchg
(bad)
popf
push
loopne
dec
(bad)
stos
pop
dec
push
repnz
sub
cmp
and
aam
pop
and
mov
mov
jmp
jl
xor
add
xor
dec
dec
mov
lds
pusha
rcr
out
add
cmc
out
adc
sub
mov
pop
mov
cmp
mov
xor
add
sahf
test
jg
test
xor
jg
xchg
test
loope
loopne
sub
cmps
add
lds
push
pop
test
adc
bound
inc
outs
popf
xchg
loopne
mov
test
in
sbb
sahf
mov
xor
daa
fdiv
add
push
add
push
jecxz
loop
stos
adc
and
int
xor
sar
sub
(bad)
sub
mov
cld
and
add
mov
jle
prefetch
jecxz
mov
inc
movs
outs
push
imul
scas
stos
vpsrlw
sbb
pop
hlt
(bad)
sbb
dec
sub
cmp
cmp
cmc
faddp
pmullw
mov
in
cmp
sbb
addr16
jb
inc
stos
xor
jo
and
jmp
push
push
mov
aam
adc
pop
push
lahf
pop
sbb
push
scas
pop
xchg
sahf
mov
jb
dec
(bad)
sahf
cmps
hlt
pop
dec
add
xchg
nop
xchg
in
sbb
mov
fidivr
sub
inc
repnz
mov
inc
outs
outs
rol
mov
out
leave
jns
gs
cmp
outs
icebp
je
ficom
sub
scas
iret
fisub
call
sahf
inc
inc
adc
xor
out
hlt
push
or
add
xlat
inc
test
scas
gs
sbb
inc
push
les
push
ret
sti
mov
(bad)
(bad)
cs
out
hlt
xchg
cs
cdq
lods
pop
pop
test
mov
(bad)
jle
test
dec
pop
test
and
ret
cmp
mov
jl
sub
jl
loop
pop
dec
ret
jp
and
movs
movs
iret
pop
and
mov
jne
mov
ja
aam
mov
call
cmp
pop
pop
aas
xor
adc
cdq
xchg
scas
mov
and
xchg
loop
iret
movs
and
xor
push
dec
mov
popf
mov
mov
shl
adc
aas
sub
and
movs
push
add
xchg
cmp
pop
fdiv
inc
push
push
icebp
mov
mov
rol
mov
xor
test
cli
fs
push
lds
fimul
icebp
out
inc
jle
iret
add
aad
lds
pop
cmp
and
(bad)
push
pop
call
ret
push
xor
pop
dec
sbb
arpl
mov
push
jno
push
leave
test
test
xor
pop
cmp
jb
dec
ret
call
(bad)
push
outs
gs
(bad)
imul
xchg
and
xlat
xchg
ja
(bad)
jecxz
sbb
add
std
inc
push
or
and
cmp
mov
jns
scas
and
sahf
(bad)
leave
mov
push
ds
cmp
dec
dec
push
icebp
loopne
xchg
jl
xchg
scas
mov
gs
loopne
or
xor
or
fs
and
daa
popa
pop
leave
or
mov
scas
call
sub
inc
xchg
loope
ins
mov
(bad)
in
outs
das
test
and
(bad)
cmp
mov
inc
dec
dec
movs
adc
lods
clc
mov
ds
fcmovnb
jl
jmp
fsub
icebp
in
les
mov
inc
xor
loop
test
cs
mov
sub
jnp
or
and
test
mov
or
sbb
inc
jmp
cwde
or
out
in
dec
cmp
push
inc
fwait
call
xchg
jg
pop
mov
jge
test
jecxz
movs
scas
inc
dec
pop
fisttp
out
add
hlt
test
scas
sbb
adc
or
in
idiv
jmp
(bad)
in
loope
icebp
sub
mov
jmp
inc
jae
std
dec
clc
cmp
push
pop
xor
popa
clc
inc
mov
ror
pop
cld
inc
pop
jmp
cwde
pop
cmps
imul
pop
nop
pop
(bad)
stc
inc
fstp
in
or
sbb
mov
pop
push
pop
xchg
xchg
(bad)
jae
add
(bad)
fucomp
fisttp
mov
pop
vmovupd
jg
out
aad
inc
and
mov
xchg
into
test
push
mov
xchg
lahf
cmp
jle
pop
in
xchg
es
sbb
(bad)
out
movs
cmp
adc
test
dec
mov
cmp
stos
mov
or
jnp
adc
sbb
sub
pop
push
loop
dec
cmp
std
or
mov
pop
pop
fxch
outs
jmp
loopne
jno
adc
xor
scas
in
adc
add
cdq
inc
xchg
mov
mov
add
jmp
inc
or
jb
inc
jbe
jb
ja
pushf
call
push
adc
pop
and
add
mov
in
cs
jnp
push
push
inc
push
dec
mov
dec
dec
bound
ffreep
je
out
xor
int
adc
lahf
fistp
cmp
out
cli
ja
into
in
adc
neg
and
mov
jno
mov
inc
mov
pushf
sub
add
add
jmp
mov
pushf
data16
xchg
scas
cmp
movs
xor
or
mov
cmp
les
jge
ds
mov
inc
push
xchg
cmc
and
mov
add
xor
cmp
sahf
dec
jno
mov
xchg
push
leave
push
scas
js
pop
dec
(bad)
rol
adc
mov
scas
mov
sbb
push
syscall
(bad)
dec
or
cmc
in
inc
push
test
enter
adc
jl
add
mov
push
ret
pop
jo
fmul
adc
aaa
dec
ds
clc
dec
mov
xchg
das
push
mov
xlat
stc
int3
jecxz
add
loopne
ds
mov
(bad)
mov
cld
sub
fmulp
and
xor
popa
and
jb
(bad)
pop
pusha
pop
push
jmp
dec
lds
xor
rol
retf
pop
cld
and
jmp
mov
ror
test
aad
or
adc
mov
(bad)
(bad)
sub
xchg
pop
push
mov
ins
xchg
push
pop
mov
ret
sub
adc
fldenv
or
(bad)
(bad)
sub
dec
nop
mov
dec
pop
or
pusha
push
cmps
lds
xor
int3
adc
repnz
ror
dec
pop
mov
mov
adc
scas
stos
retf
sub
pop
loop
pop
add
aaa
cs
pop
imul
xchg
push
xchg
add
ror
int
(bad)
mov
push
inc
sub
test
mov
in
movs
cmp
lea
test
mov
pop
jae
mov
pop
xor
mov
ins
cmp
std
push
in
imul
push
bnd
mov
push
jne
call
pop
dec
sbb
mov
mov
dec
dec
mov
inc
jl
in
inc
outs
cdq
fdivrp
stos
imul
movs
cs
xor
and
sub
jmp
sub
lds
push
cmp
pop
pop
sub
outs
mov
or
cli
pop
push
mov
add
mov
into
popf
(bad)
lea
xchg
push
gs
mov
jmp
xchg
mov
xor
jp
inc
je
inc
push
stos
inc
or
push
fcmovu
jo
push
imul
les
lds
enter
add
dec
repz
xor
pop
jge
into
stc
outs
xlat
sar
cmps
cmc
fisubr
sub
pop
adc
gs
inc
stos
cmps
pop
jns
and
and
adc
cwde
in
sahf
push
enter
pop
aam
xchg
mov
shl
inc
sar
loopne
jmp
xor
into
inc
jle
push
xor
xchg
sbb
rcl
push
lds
cmc
jbe
pop
iret
push
or
cmp
inc
mov
adc
mov
mov
fst
outs
outs
cmc
push
in
xor
sbb
pop
cwde
mov
sub
push
aad
leave
(bad)
aas
pop
in
cwde
push
test
push
mov
xchg
dec
test
movs
pusha
xchg
or
push
cmc
xchg
xor
and
push
adc
lock
xor
bound
mov
add
(bad)
stc
loop
mov
xchg
retf
test
mov
xchg
test
shr
mov
div
cli
rol
pop
jecxz
dec
xchg
dec
scas
dec
mov
and
xchg
sbb
clc
jmp
test
lea
test
gs
rep
inc
iret
aas
xor
idiv
(bad)
adc
sbb
and
mov
test
mov
cmc
inc
mov
in
das
cmp
vmwrite
or
pop
mov
and
fcom
fdiv
inc
sar
wbinvd
jb
into
hlt
xor
(bad)
jb
push
mov
cmp
shl
xor
push
aad
adc
rcl
cmc
xor
enter
movs
adc
jge
push
aas
mov
cwde
out
call
pop
xor
inc
mov
rol
lock
jle
lods
jae
mov
sar
xchg
in
xlat
mov
and
jo
pop
push
jmp
mov
jmp
inc
pop
retf
arpl
aad
loope
jmp
xor
jb
and
fs
loop
xor
sahf
(bad)
mov
repz
xor
neg
and
je
adc
jb
outs
dec
push
mov
dec
and
stc
add
aam
repnz
test
mov
dec
pop
add
jmp
outs
cdq
jae
push
daa
lock
out
add
sub
scas
in
arpl
push
sbb
xor
jecxz
mov
cmps
cmps
and
mov
scas
mov
mov
das
arpl
sbb
and
call
xchg
adc
jno
cmc
call
pop
sub
jnp
mov
push
data16
pop
dec
jmp
js
xor
inc
in
jecxz
ins
loop
or
adc
das
stos
pop
fidiv
inc
leave
push
inc
sbb
test
iret
hlt
loop
out
stc
pop
inc
(bad)
inc
jbe
xor
in
je
es
push
call
test
leave
ds
fldenv
adc
jmp
add
add
jns
xchg
mov
cmp
mov
inc
jno
mov
cli
xor
xchg
inc
inc
fnstcw
je
leave
and
(bad)
mov
mov
leave
stc
fnstenv
dec
and
aam
sbb
test
push
mov
sahf
adc
mov
(bad)
mov
loopne
fdivrp
aaa
inc
sbb
lahf
sub
inc
outs
imul
pop
mov
je
aad
stc
out
hlt
aas
add
cmc
pop
xchg
aas
test
mov
jne
data16
gs
gs
and
ror
xor
hlt
ret
retf
add
pop
fs
je
push
xchg
dec
arpl
mov
and
icebp
adc
mov
and
lods
test
test
scas
clc
(bad)
xchg
mov
push
mov
out
cld
and
jbe
out
pop
and
mov
repz
pop
pop
out
mov
(bad)
iret
les
mov
rol
sub
mov
xchg
push
scas
fs
in
pop
lods
xlat
pusha
adc
adc
or
test
inc
mov
loopne
mov
jl
jno
xchg
pop
fsubr
and
dec
pop
retf
inc
in
jae
and
lock
mov
or
cmp
aad
and
pop
push
mov
cmp
inc
mov
dec
inc
aam
xor
adc
cmp
add
out
es
fild
stos
jbe
fisttp
mov
mov
stc
imul
jnp
scas
(bad)
jmp
and
dec
dec
sub
ror
and
xor
add
xchg
jb
test
inc
xor
xchg
mov
dec
sbb
mov
or
pop
add
and
mov
inc
clc
mov
imul
xor
sar
hlt
aas
in
jb
aad
sub
jmp
je
push
sahf
(bad)
lock
add
mov
or
jne
test
cmps
pop
add
adc
cmp
and
or
mov
push
test
mov
je
and
xor
or
hlt
jge
std
in
clc
sbb
push
xor
repnz
icebp
aas
out
stc
fcomip
push
inc
pavgw
retf
shl
jnp
push
or
xchg
sbb
lahf
jmp
sub
sbb
mov
outs
fwait
pop
inc
(bad)
jne
cmp
test
fst
dec
and
(bad)
jg
cmp
das
or
and
mov
mov
bound
cmp
sub
or
leave
pop
push
mov
jns
cmc
sahf
xchg
outs
cmps
gs
dec
std
xlat
push
lahf
pop
je
sub
jno
jl
cdq
mov
xchg
clc
lods
ja
loope
sar
mov
xor
add
aam
cmp
or
gs
cdq
dec
sub
lds
add
fwait
repz
dec
stos
pop
inc
bound
mov
add
fsub
pause
mov
retf
xchg
scas
jne
push
aas
hlt
pop
lds
jle
gs
mov
fnstcw
popa
pop
rcr
fcomp
fs
test
test
sahf
(bad)
xchg
add
mov
mov
sub
js
or
xor
mov
adc
jl
(bad)
fcom
mov
or
idiv
retf
cs
and
fs
mov
stos
inc
aad
add
and
sbb
jmp
fsubrp
nop
outs
pop
inc
mov
ficom
clc
sbb
lahf
fstp
push
sbb
add
and
push
scas
mov
adc
fisub
frstor
imul
shl
out
imul
mov
fiadd
push
and
sbb
inc
mov
pop
in
ja
cli
push
jge
mov
mov
icebp
push
or
mov
in
ins
and
in
aaa
push
mov
sbb
push
adc
dec
push
clc
push
inc
adc
verr
int3
pop
fs
push
mov
jl
call
dec
js
(bad)
lock
cli
in
lds
jp
jae
aam
push
cmp
dec
inc
mov
(bad)
dec
xchg
mov
inc
or
cmc
mov
or
jmp
outs
pop
dec
or
fwait
stos
jbe
pop
js
(bad)
sub
loope
sbb
neg
sub
dec
adc
mov
movs
call
pop
push
sub
xchg
icebp
in
adc
pop
xor
stos
cdq
(bad)
pop
mov
cmp
loope
push
sub
xchg
inc
dec
jo
pusha
shr
int3
push
mov
and
mov
shl
sub
mov
mov
sub
dec
retf
pop
sahf
sub
push
cmp
pop
in
add
lock
sbb
mov
dec
push
pop
jb
cld
out
cmps
adc
xchg
sbb
sbb
and
sbb
movs
sbb
stos
repnz
(bad)
mov
sar
outs
bound
and
adc
or
push
jne
jmp
ds
inc
push
push
pop
jno
jmp
pop
inc
mov
xor
imul
(bad)
sub
hlt
mov
and
sub
test
jge
adc
xchg
aas
mov
aam
adc
ss
cmp
mov
jbe
(bad)
aas
int
sub
add
xor
sbb
dec
int3
sub
loope
dec
add
(bad)
mov
mov
lahf
fdiv
ins
addr16
mov
ins
sub
push
test
pop
fld1
popa
imul
pop
pop
test
lds
addr16
push
sbb
imul
js
mov
or
push
and
and
xor
mov
(bad)
ficomp
in
iret
pop
xor
mov
mov
sbb
mov
sar
int3
mov
test
inc
or
xchg
or
or
loop
jno
mov
sub
jmp
mov
mov
call
aaa
push
test
mov
ja
sti
popf
dec
ins
mov
out
test
and
mov
push
xor
mov
dec
loop
test
push
popf
fwait
mov
loope
cmp
add
imul
pop
lods
jge
aad
xor
inc
js
sbb
or
add
push
add
sub
test
ror
(bad)
push
dec
arpl
pusha
push
add
(bad)
cmp
enter
repnz
call
xchg
dec
pop
inc
fidiv
and
or
cwde
aaa
test
lods
cld
mov
push
pop
leave
jns
div
sbb
pusha
and
push
lds
mov
retw
cmps
fistp
xor
cmp
inc
into
nop
adc
pushf
cmc
mov
(bad)
(bad)
xchg
xor
loope
add
jo
gs
cmp
(bad)
cmp
mov
mov
ficom
ret
push
pop
jp
add
addr16
mov
push
aas
adc
pop
pop
test
xchg
dec
movs
ret
movs
stos
and
and
fistp
mov
jnp
popf
mov
mov
(bad)
shl
les
jg
pop
test
or
push
add
sbb
fstp
in
xlat
xchg
cmc
loop
inc
aad
inc
cmp
sub
jne
test
in
scas
jb
imul
sti
cmps
jp
fmul
pop
mov
(bad)
xor
int3
mov
fs
mov
ret
fdiv
in
mov
mov
cmp
in
lahf
xchg
xchg
cmp
into
aam
(bad)
repz
sar
sbb
sub
xchg
cmc
nop
gs
retf
inc
mov
fcomi
(bad)
mov
in
rol
int
jo
and
(bad)
jns
sbb
xchg
es
movs
fcompp
into
fisubr
aam
repnz
fiadd
scas
movs
pop
or
aad
and
call
int3
ins
imul
aad
xchg
cmps
mov
fistp
aas
neg
sbb
and
sub
mov
(bad)
out
mov
mov
and
jle
sbb
and
mov
inc
lahf
jne
jge
xor
mov
inc
jle
dec
push
aam
loopne
int3
xchg
scas
loopne
adc
in
mov
cmc
rol
sbb
aas
call
ficomp
xchg
(bad)
cmps
dec
mov
ficom
dec
popa
jp
adc
mov
inc
jno
mov
or
test
add
popa
push
dec
fcom
mov
adc
inc
mov
add
push
xor
push
or
jnp
das
popf
jno
inc
xor
mov
push
or
pop
sbb
push
jmp
xlat
dec
lods
stc
mov
adc
(bad)
mov
inc
push
loopne
sbb
jns
pop
repz
movs
outs
std
je
dec
mov
(bad)
fld
fist
cmc
dec
hlt
inc
adc
adc
fist
rol
ret
mov
inc
inc
mov
pop
aad
adc
ror
sti
jle
lahf
xchg
or
mov
arpl
jno
adc
jl
and
inc
gs
and
outs
pop
sub
jb
pop
fistp
scas
push
jno
sub
or
xchg
cmp
inc
dec
inc
(bad)
ja
test
inc
sub
scas
je
cmp
(bad)
in
shr
mov
pop
dec
dec
pop
mov
mov
lds
outs
nop
(bad)
or
mov
in
mov
imul
mov
mov
push
sub
outs
call
cs
bound
jp
push
out
inc
jnp
mov
dec
mov
mov
and
pop
retf
xchg
pop
jbe
out
mov
xchg
test
push
scas
add
(bad)
cli
(bad)
(bad)
mov
mov
leave
int3
jmp
ficom
xchg
xchg
mov
loopne
leave
bound
inc
adc
dec
or
add
mov
call
cs
and
loop
aam
cs
push
pop
and
fld
mov
aad
(bad)
fsubp
sbb
adc
or
push
push
out
leave
jno
out
xchg
mov
mov
loop
(bad)
cmp
adc
and
adc
sti
in
jle
lahf
test
jl
mov
cmp
(bad)
hlt
outs
ins
or
push
jns
xor
popa
dec
sahf
pop
outs
out
adc
nop
inc
xchg
add
sbb
push
in
pop
fadd
in
inc
jle
ds
mov
das
lods
xchg
pop
fidiv
ficom
cli
adc
add
stos
fild
test
bound
mov
lds
inc
sbb
adc
sub
sbb
add
ds
cli
ret
and
stos
jg
jg
mov
les
sbb
pop
cs
test
pop
aad
fs
inc
xchg
sub
and
push
mov
test
adc
sbb
lods
adc
pop
test
out
(bad)
(bad)
lods
jecxz
inc
pop
add
jno
inc
pop
ins
xlat
jne
lds
jp
xor
sbb
mov
imul
in
add
or
inc
outs
out
mov
mov
adc
cmc
cmp
(bad)
mov
bound
cmp
cmp
mov
push
push
stos
rcl
sbb
fcom
sbb
cmp
mov
adc
leave
(bad)
sbb
jl
cmc
mov
stos
scas
sub
stos
xor
(bad)
mov
sti
dec
adc
pop
mov
stos
daa
inc
cmps
ret
(bad)
stos
pop
je
aaa
shl
fiadd
addr16
stos
push
pop
sahf
sbb
test
scas
out
sti
push
pop
(bad)
hlt
sahf
fadd
iret
sbb
dec
add
cwde
outs
rcr
pop
jg
and
call
push
pshufw
jne
push
inc
scas
je
jbe
mov
push
mov
inc
add
loopne
aaa
ficom
cdq
ja
jge
push
xchg
pusha
out
jge
imul
jnp
and
scas
mul
xor
inc
dec
dec
inc
movs
pop
dec
mov
push
mov
aad
adc
ficomp
adc
or
mov
push
xchg
adc
dec
xchg
outs
clc
xchg
out
mov
fisubr
push
call
adc
js
push
push
aad
sbb
lods
out
xor
jae
ds
call
sti
pop
and
sub
or
rcr
movs
push
enter
fwait
jecxz
cmc
xchg
outs
and
pop
rol
mov
xchg
scas
mov
in
fwait
mov
fdivr
ret
pop
mov
imul
enter
add
mov
fld
sahf
mov
iret
inc
dec
orps
aas
push
inc
imul
mov
int3
hlt
fdivrp
dec
xchg
(bad)
sar
dec
add
sub
sub
cmp
js
popa
fadd
mov
fisubr
and
cmp
mov
mov
jle
pop
push
jnp
sar
mov
jp
popa
sahf
lahf
rcl
cmp
sar
jbe
push
addr16
test
sar
add
or
call
push
xor
cwde
xlat
div
dec
rdtsc
sbb
mov
mov
lds
dec
ret
out
pop
xor
sbb
inc
cli
and
aam
stos
clc
retf
and
retf
jmp
inc
fsubr
arpl
or
lahf
pusha
imul
outs
test
push
data16
jo
pop
inc
pop
pop
push
outs
test
push
out
jp
in
mov
and
xor
outs
pop
into
nop
mov
stos
mov
ret
dec
mov
fwait
inc
cwde
inc
fidiv
xor
repz
fnstsw
jge
jno
rcl
pushf
inc
push
dec
test
sar
jae
or
movs
pop
mov
repz
popf
mov
xchg
repnz
add
cli
out
shr
push
fnstsw
iret
cmp
ins
pop
dec
fs
retf
loope
imul
into
stc
xchg
movs
cdq
or
adc
inc
mov
gs
sti
test
add
and
test
adc
cmps
mov
call
mov
ds
mov
shr
ins
dec
cmc
and
sbb
scas
ins
mov
dec
shl
outs
push
pop
stos
pop
lds
jbe
cmp
ss
idiv
and
jno
jnp
pop
push
xchg
dec
xlat
inc
and
cdq
cmc
test
les
dec
cmp
push
mov
mov
sub
dec
lods
cmps
ins
sar
dec
test
nop
push
sub
dec
add
in
enter
inc
push
or
call
sub
or
cmps
ins
lds
mov
or
cmp
or
ins
xchg
adc
sub
in
aam
dec
js
lds
and
or
jge
loop
mov
daa
in
in
mov
inc
or
mov
lods
mov
cmp
outs
ins
sub
repz
movs
mov
sub
fidiv
fstp
daa
sbb
cmp
mov
out
mov
xchg
pop
sub
(bad)
or
sub
pop
mov
(bad)
sub
mov
sub
test
mov
jnp
js
test
mov
sub
sbb
mov
pushf
dec
adc
mov
and
test
call
retf
add
sbb
mov
sub
in
or
adc
jge
fmul
and
std
outs
push
cmp
outs
mov
ror
sub
xor
cmp
mov
cmp
mov
test
pusha
mov
into
mov
ins
test
adc
mov
outs
dec
pop
in
mov
int
call
in
cmp
addr16
inc
mov
sub
loopne
mov
shl
jmp
test
mov
sub
outs
xor
popf
test
sub
test
sti
jmp
mov
leave
inc
pop
inc
aaa
mov
and
scas
add
jge
mov
mov
or
out
enter
cwde
pop
fsub
cmp
mov
enter
les
mov
push
push
xor
or
sub
dec
jne
pop
enter
xor
loopne
mov
cmp
cwde
sub
or
enter
loopne
js
inc
shl
cmp
adc
cmc
imul
jbe
sub
cmp
mov
sub
xlat
int
popf
call
add
mov
mov
jne
pop
test
loopne
enter
or
out
push
int3
or
mov
lods
jge
fs
pushf
adc
enter
ins
jmp
in
push
popf
cmp
cmps
loope
sbb
add
std
into
pop
aas
mov
pop
or
push
popf
mov
jne
adc
cmp
push
shl
mov
xor
add
jmp
inc
push
mov
fldenv
adc
cmps
pop
or
or
es
sbb
xchg
jmp
mov
xchg
nop
cmc
mov
pop
out
adc
cmps
xchg
cmp
nop
add
add
(bad)
or
cmp
add
jmp
xchg
popf
inc
push
inc
rol
popf
std
jmp
push
fcom
das
(bad)
sbb
wbinvd
shr
and
sbb
cmp
std
push
add
sbb
les
jne
bound
lea
jmp
push
pop
sub
sbb
pop
xchg
or
xchg
or
push
sahf
adc
mov
xchg
or
mov
pop
ret
adc
das
popf
repnz
push
lods
jle
mov
mov
dec
sbb
sahf
fxam
fsub
es
jbe
mul
lea
pop
cmps
dec
jg
mov
repnz
push
and
popf
xchg
mov
test
sbb
popf
xor
cmp
xor
shr
sub
xlat
pop
push
pop
fisub
fiadd
nop
adc
nop
sar
aam
mov
xlat
pop
sbb
cwde
(bad)
icebp
(bad)
fidivr
xor
imul
sbb
in
mov
rcl
pop
push
xchg
push
xor
fwait
repz
jmp
inc
aam
pop
xlat
fdiv
ret
xor
pop
adc
push
dec
pop
addr16
repz
jecxz
loope
mov
push
cmc
bound
xlat
xlat
int3
inc
pushf
mov
repnz
repz
bound
or
push
pop
jne
pop
rcl
jne
shl
push
aam
fsubr
rcl
push
adc
(bad)
sbb
xlat
stos
xchg
sub
mov
add
mov
push
adc
inc
xchg
dec
rcl
pushf
mov
xchg
xlat
sbb
mov
dec
xchg
dec
ret
push
hlt
movs
and
pop
fisubr
rcl
adc
mov
xchg
(bad)
movs
adc
pushf
sbb
xchg
fistp
mov
xlat
adc
pushf
outs
push
or
test
mov
push
pop
addr16
inc
mov
jmp
push
add
inc
arpl
addr16
adc
cmp
and
pop
int3
xchg
call
iret
xchg
pop
jecxz
pop
adc
push
rol
cmps
jecxz
pop
adc
dec
dec
jecxz
add
shl
lock
sbb
sar
(bad)
imul
jb
sub
add
sub
xchg
mov
inc
mov
shr
jecxz
xor
dec
hlt
or
jae
bound
mov
ja
cli
mov
ins
add
shr
inc
(bad)
cmps
(bad)
je
or
aaa
in
aaa
xchg
or
outs
inc
inc
push
scas
inc
inc
daa
lods
int
xor
xchg
xchg
mov
lods
mov
dec
out
dec
aaa
jno
dec
in
push
push
iret
fst
cmp
and
dec
sar
xchg
mov
xor
(bad)
xor
mov
fcmovb
xor
sub
add
jecxz
out
or
cmps
xchg
cld
mov
sbb
xchg
sbb
xchg
sub
xchg
daa
xor
or
aas
or
daa
jp
enter
es
jae
push
data16
adc
pop
ret
mov
mov
inc
int
jle
mov
repnz
pop
pop
jb
push
xchg
repnz
daa
push
clc
jle
xor
cmps
mov
lea
push
in
daa
push
das
repnz
dec
fistp
repz
xor
(bad)
cmps
adc
in
xor
cmp
mov
int
iret
es
jle
hlt
(bad)
xchg
sub
sti
xor
shl
cmps
xchg
out
stos
adc
mov
cmps
dec
cmp
cmps
in
imul
sar
cmps
xchg
outs
pop
pusha
mov
and
lahf
in
fdiv
aaa
xchg
push
xor
into
dec
push
(bad)
fld
cli
aaa
mov
add
test
loope
aas
dec
jae
sub
(bad)
xor
sub
cmp
jae
fiadd
inc
pop
mov
shr
push
dec
mov
or
(bad)
mov
lods
and
dec
sub
fild
sub
call
mov
enter
and
in
and
das
outs
ret
addr16
test
cmps
inc
scas
jecxz
and
xchg
mov
jg
test
push
repz
in
add
addr16
shl
out
fisub
das
lock
or
or
iret
mov
or
sub
xchg
mov
lahf
test
(bad)
inc
jo
dec
in
inc
movs
aad
cmp
ret
push
addr16
out
pop
inc
aad
push
loop
(bad)
or
mov
inc
xchg
jo
in
repz
test
dec
out
sub
test
cli
ds
jo
mov
jg
push
sub
inc
stc
sub
(bad)
dec
mov
sub
out
sub
inc
push
das
in
add
sub
cmp
push
retf
dec
sub
xchg
jbe
out
cli
cmp
iret
pusha
mov
and
cli
mov
or
adc
mov
mov
jg
xchg
push
sahf
rcl
jb
mov
stos
jbe
ret
pushf
vpcmpeqd
add
sbb
fisttp
data16
mov
cmp
or
scas
jbe
ret
and
imul
mov
xchg
sets
cmc
movs
je
jp
ss
sub
jbe
mov
mov
jbe
mov
and
out
loopne
fcomp
dec
jb
push
xchg
sub
sbb
sbb
out
push
push
sbb
dec
mov
cmp
cdq
mov
mov
sbb
stc
adc
mov
es
cmp
scas
sbb
stc
push
data16
cmps
test
dec
stos
or
jo
fldenv
jp
(bad)
stc
out
dec
sub
add
mov
mov
shl
adc
jbe
jbe
not
ins
jbe
ja
ss
jbe
mov
popa
xchg
push
mov
leave
mov
jb
je
mov
push
cdq
mov
xchg
ss
loop
(bad)
out
mov
leave
repz
stc
xor
faddp
out
sahf
mov
pop
cdq
fdivrp
mov
call
and
or
cmp
jo
mov
cmc
xchg
push
add
in
or
icebp
jbe
das
push
aas
mov
or
stc
neg
ss
mov
jbe
neg
ins
aaa
pop
jbe
idiv
mov
jne
dec
les
push
xchg
adc
stc
ss
cmp
div
and
cmc
and
enter
out
mov
repnz
ss
and
mov
pushf
sti
xchg
mov
and
loope
sar
pop
fstp
sub
jl
jl
lods
out
dec
pop
das
test
add
mov
mov
std
inc
push
cmps
dec
ins
aas
or
inc
sti
mov
out
out
and
int
es
int3
aas
dec
ret
aaa
neg
sub
xor
test
mov
movs
aaa
pusha
mov
dec
mov
sub
cmovl
shr
xchg
fcomp
and
pop
jl
and
cmp
lods
mov
sahf
in
cmps
jl
cmp
sbb
clc
ret
mov
js
xchg
sbb
push
and
sub
lods
aaa
retf
ja
idiv
pop
sub
(bad)
pop
mov
ja
mov
sub
mov
ret
lods
pop
xchg
lods
ins
pop
jl
std
jecxz
cmps
je
dec
out
ins
xor
xchg
pop
ins
xchg
ret
xchg
popf
xchg
lea
lock
dec
fisttp
icebp
lock
out
mov
ja
lods
shr
jl
lods
scas
lods
dec
ins
cli
or
lods
in
xchg
and
fs
adc
test
sub
fs
cmp
cld
test
mov
lods
in
xchg
jl
cmp
test
mov
in
in
aad
in
adc
cmp
jl
jl
popf
dec
mov
loopne
mov
jl
ret
jns
cmp
sbb
and
dec
cmp
ins
cmp
sub
sub
xchg
ins
pop
aam
out
daa
xchg
das
std
fs
jo
ins
sbb
sbb
ins
cmp
mov
xor
ins
dec
ret
sbb
outs
cmp
mov
sbb
ins
add
int3
xchg
sbb
cmp
into
or
ret
mov
sbb
mov
popf
inc
lea
push
leave
in
and
les
pop
les
mov
mov
in
ins
push
jge
fcom
push
loopne
rcl
(bad)
stc
add
mov
jmp
dec
jb
sub
inc
mov
lods
repnz
int
lods
inc
dec
mov
dec
sub
in
add
in
dec
leave
imul
adc
bound
dec
dec
dec
int
jmp
jo
adc
mov
loop
in
retf
sub
jo
sub
sub
dec
retf
jne
mov
sub
leave
dec
fisubr
mov
in
mov
movs
mov
mov
cdq
pusha
mov
add
mov
std
inc
dec
inc
sbb
enter
ins
mov
lods
mov
int
mov
ins
cdq
add
ret
cmp
fld
push
and
cld
jmp
inc
or
mov
test
dec
in
imul
int
cli
inc
sub
mov
mov
inc
jo
cwde
push
add
sub
pop
dec
mov
dec
cld
mov
lea
(bad)
stc
call
mov
lahf
mov
inc
jmp
addr16
aaa
pusha
mov
imul
enter
mov
test
mov
mov
mov
dec
add
int3
retf
xchg
pusha
dec
inc
sbb
jmp
xor
inc
and
retf
imul
sbb
loopne
sbb
and
(bad)
or
sub
pop
sub
or
jmp
test
xlat
loopne
shr
mov
xor
fadd
pop
test
cmp
push
popf
in
lock
sbb
ins
xlat
xchg
aaa
cwde
sub
rcr
xchg
leave
and
icebp
jo
(bad)
pop
push
dec
push
rcr
fwait
gs
enter
mov
rcl
out
daa
test
cmp
sbb
push
call
sbb
sub
or
imul
ins
stc
push
mov
in
mov
dec
stc
dec
cmp
call
mov
ins
mov
pop
fmul
add
sbb
test
fdivr
shl
out
fild
out
mov
add
xchg
ins
xchg
js
dec
or
pop
aaa
push
call
adc
dec
sbb
out
fsubr
push
std
dec
js
dec
jl
push
cmp
cs
mov
sbb
mov
enter
enter
dec
pop
dec
enter
jb
jns
adc
add
and
aad
call
fwait
gs
sbb
or
retf
clc
inc
sbb
sbb
and
inc
jge
fiadd
out
add
out
add
adc
mov
inc
ins
iret
out
add
dec
addr16
xor
mov
and
sbb
bound
cdq
imul
mov
cmc
pop
into
pop
mov
mov
dec
xchg
add
push
iret
adc
scas
into
push
ret
xchg
setno
mov
sbb
pop
mov
ja
ja
fistp
push
nop
xchg
les
out
xor
push
mov
push
pop
xor
push
push
jmp
dec
dec
adc
xchg
ja
push
retf
aaa
retf
push
mov
dec
mov
push
mov
dec
aad
imul
dec
loope
xor
das
in
ins
popf
jae
cmp
add
repnz
data16
gs
mov
dec
mov
push
mov
push
aam
aam
and
aam
adc
iret
add
movs
pop
movs
mov
pop
dec
cdq
cs
iret
sbb
ss
sti
sbb
mov
adc
xor
mov
ret
aaa
push
xor
aam
mov
adc
mov
push
mov
dec
or
push
fnstenv
inc
pushf
pop
test
add
jmp
popa
push
xchg
pop
scas
int3
(bad)
push
rcr
xchg
xor
idiv
neg
ins
add
mov
mov
test
dec
jns
into
adc
ss
test
sub
add
enter
pop
sub
pushf
lds
in
add
push
ins
fdivr
mov
scas
dec
pop
jnp
cs
push
jg
fs
add
lock
push
cwde
fsub
mov
in
nop
stos
ror
shl
or
jno
icebp
mov
ins
xchg
sbb
jb
push
mov
lock
ds
jnp
jb
out
mov
in
lods
push
and
stc
(bad)
repz
jae
dec
or
out
int3
call
leave
jae
pop
or
pop
int
(bad)
lods
std
aad
sub
sbb
sbb
pushf
mov
(bad)
fnstsw
aas
sbb
jo
dec
leave
pushf
pushf
sahf
xchg
repnz
jmp
sub
pop
sub
fbld
xor
sbb
out
in
fnstenv
dec
add
sbb
ret
int3
mov
mov
jnp
cmp
aam
mov
call
fs
push
push
dec
gs
test
pop
pop
sub
mov
call
aad
movs
test
xor
adc
bound
sahf
mov
in
jmp
mov
fsub
mov
xchg
(bad)
mov
in
sbb
ret
rcr
lock
(bad)
xchg
mov
leave
rcr
es
int3
out
out
sti
mov
xlat
(bad)
push
retf
or
into
out
(bad)
sti
iret
shr
std
cli
mov
shl
adc
mov
in
retf
adc
push
xchg
fsubrp
aad
popf
stos
xchg
(bad)
shr
fst
shl
(bad)
mov
out
ss
bswap
fdiv
rol
xchg
cmps
iret
retf
fsubr
mov
iret
xchg
sar
hlt
scas
ret
mov
dec
xchg
mov
xchg
mov
fld
adc
inc
les
shl
imul
fld
(bad)
or
loope
into
or
push
jnp
jnp
mov
ret
mov
jecxz
add
and
and
add
and
and
ret
add
and
and
add
and
add
jecxz
add
and
add
arpl
and
add
and
ret
add
and
push
add
add
and
nop
mov
or
cmp
adc
add
and
sbb
inc
inc
ins
gs
dec
inc
or
test
dec
jae
dec
push
add
jne
gs
lods
sub
add
adc
fs
push
ins
imul
ins
pusha
inc
arpl
jno
and
push
xchg
inc
push
push
inc
pop
push
push
pop
add
ret
inc
and
add
dec
xor
or
sbb
jnp
mov
or
jmp
dec
or
repnz
nop
adc
jmp
pop
cmp
not
sub
nop
rol
shr
push
push
mov
icebp
adc
fwait
xor
cmp
and
test
push
popf
inc
rep
mov
cs
jmp
inc
xor
dec
test
push
dec
(bad)
fcmovne
mov
in
call
xchg
xor
stos
cli
jns
sub
push
pop
push
ss
cmp
cmp
mov
mov
or
cs
pushf
mov
mov
imul
and
leave
jmp
jl
pop
add
retf
cli
mov
jl
mov
jmp
push
fmul
adc
mov
jmp
xchg
cmp
sub
mov
(bad)
mov
enter
pop
das
cmp
mov
dec
(bad)
aad
xchg
cmp
pop
stc
cdq
(bad)
test
ins
pop
push
sbb
call
bound
or
fnsave
sbb
jmp
adc
mov
leave
dec
cmp
or
cmp
fdivr
sub
jmp
fldcw
mov
mov
dec
lahf
out
pop
sti
sbb
imul
packssdw
mov
pop
or
cwde
jmp
jns
mov
ds
cmp
dec
jae
fimul
xor
jle
xor
push
(bad)
scas
test
es
pop
dec
sub
mov
movs
mov
adc
inc
adc
cmc
mov
pop
adc
xor
sub
push
inc
cmp
push
cwde
or
lahf
retf
retf
fcomp
pop
fistp
imul
cmp
mov
call
push
scas
mov
(bad)
fisttp
sub
scas
or
retf
dec
or
jmp
or
into
cmp
retf
sbb
sbb
push
stos
dec
ficomp
frstor
mov
cmp
jle
imul
mov
fwait
sbb
or
mov
lahf
ficomp
adc
fimul
retf
jmp
scas
cmp
push
mov
(bad)
fimul
push
push
pop
jl
cmp
sbb
xchg
fisttp
and
jmp
std
into
dec
jmp
outs
lods
cmp
dec
sbb
rcr
pop
sbb
pop
call
mov
std
cli
push
pop
sbb
cli
das
mov
and
dec
cmp
rcr
cld
mov
pop
cmp
pop
or
imul
into
iret
push
outs
dec
pop
ds
aam
xchg
sbb
adc
pop
pop
(bad)
pop
fnstenv
(bad)
cs
pop
(bad)
call
mov
fmul
or
mov
leave
ds
push
pop
fwait
cmp
cwde
movs
pop
movs
sbb
jmp
cmp
jns
pop
stos
mov
retf
mov
mov
sbb
dec
stos
mov
dec
fcom
fisttp
cmp
ret
sub
fstp
stos
(bad)
sub
daa
mov
cmp
push
scas
iret
adc
jp
fisttp
sub
aaa
call
pop
out
mov
xor
out
or
dec
int3
dec
fnstcw
add
fld
adc
les
adc
mov
pop
inc
mov
pop
ins
sub
stos
int3
jl
jge
add
iret
inc
mov
mov
xchg
dec
mov
pop
cmp
push
(bad)
push
vphadddq
mov
jmp
jle
ss
cmp
mov
mov
bound
xlat
pop
in
cmp
mov
(bad)
out
out
xchg
add
or
(bad)
fidivr
jge
xor
clc
mov
mov
or
out
pop
je
cdq
and
imul
pop
jl
(bad)
int3
xor
or
sub
push
shl
inc
pop
xchg
(bad)
call
xchg
out
push
push
inc
aam
aaa
imul
(bad)
sti
scas
sbb
add
fnsave
pop
fucomip
mov
in
sar
or
sahf
mov
sbb
sbb
es
cld
js
bound
push
lods
cmp
aaa
mov
pop
repz
imul
and
xchg
xchg
call
xor
sbb
dec
jp
std
std
push
mov
ins
xchg
or
xchg
mov
ins
adc
mov
xor
adc
sbb
jp
xor
in
dec
sbb
repnz
das
in
xor
xchg
mov
or
dec
adc
imul
jo
(bad)
jge
repnz
popa
cmp
and
dec
xlat
xchg
xlat
push
addr16
fdiv
pop
xchg
clc
int
(bad)
outs
aad
sbb
and
sahf
mov
shl
pop
daa
or
dec
push
ret
pop
adc
jg
loop
dec
sub
jle
or
(bad)
and
test
addr16
(bad)
jae
outs
(bad)
pop
jecxz
fisubr
and
dec
or
add
out
mov
pop
data16
(bad)
inc
cmc
retf
mov
and
cmp
xlat
and
sbb
test
in
mov
ja
pop
xchg
test
test
inc
and
call
cld
rol
sbb
stc
ins
or
xchg
popa
dec
loop
(bad)
addr16
pusha
aas
dec
adc
gs
test
mov
cmps
sub
xlat
imul
xchg
mov
mov
dec
pop
js
jns
cmps
ficomp
(bad)
pop
dec
push
push
xchg
sub
leave
test
mov
(bad)
loope
sub
icebp
ins
mov
xchg
enter
out
pusha
daa
pop
dec
jne
sbb
gs
and
(bad)
addr16
sub
addr16
dec
add
mov
mov
jae
push
or
popa
(bad)
test
retf
dec
aaa
es
cmp
(bad)
(bad)
cmp
js
dec
aaa
retf
out
xlat
or
aas
into
adc
xchg
add
adc
fstp
cld
pop
(bad)
xor
bound
enter
in
and
mov
mov
pop
add
lods
test
xor
in
or
pushf
inc
adc
mov
(bad)
push
cmps
rcr
nop
xlat
mov
enter
pop
ins
pop
push
fcom
repnz
sub
sar
sub
add
cld
in
shl
xchg
adc
mov
xor
xchg
mov
sbb
ins
es
out
daa
mov
call
ret
push
or
clc
les
and
sbb
es
xchg
mov
cmp
ret
jo
xchg
(bad)
jmp
sbb
(bad)
ret
test
aam
loopne
ret
xlat
shl
imul
sahf
add
and
add
dec
jo
mov
adc
or
shl
sub
loop
add
pop
rcl
push
sbb
sbb
sub
mov
adc
xchg
shl
addr16
popf
push
pop
xor
mov
call
(bad)
ret
mov
in
icebp
ret
loopne
or
jo
dec
cmp
xor
lock
fincstp
lea
(bad)
gs
inc
mov
shr
es
jmp
push
push
leave
add
push
xor
inc
imul
and
shr
cmp
and
bound
jno
sbb
out
pop
fsubrp
and
cdq
nop
pusha
dec
mov
es
add
aaa
jmp
addr16
or
and
sti
sub
cmc
mov
pop
imul
(bad)
cmc
and
xchg
xchg
int3
mov
ret
push
sub
add
push
test
adc
adc
jo
xchg
jbe
pop
add
sar
int3
pusha
test
call
dec
out
sub
mov
(bad)
aas
pop
rcr
pop
shl
arpl
xor
and
std
in
aam
sbb
test
in
retf
fisttp
out
inc
jle
pusha
cmc
push
or
dec
and
sbb
(bad)
or
adc
icebp
sar
leave
in
and
inc
or
jle
or
adc
add
(bad)
mov
shl
inc
call
jecxz
(bad)
es
repnz
aas
js
div
cmp
ror
pop
xchg
sbb
xchg
loopne
rcl
or
pusha
sub
or
cli
push
sbb
jmp
mov
cmp
fdivr
(bad)
sti
mov
push
sbb
pop
dec
out
test
popa
sub
stc
ss
rol
hlt
test
inc
and
jmp
mov
mov
dec
fadd
(bad)
jge
mov
call
ror
pop
stc
enter
sub
dec
mov
dec
stc
leave
mov
sbb
js
jb
imul
push
sbb
pop
inc
lods
pop
sbb
mov
cld
mov
pop
pop
aas
pop
push
movs
xsavec
enter
nop
push
outs
inc
sti
add
push
sbb
pop
stos
ror
push
imul
jmp
gs
imul
retf
dec
dec
dec
xchg
push
js
movs
or
in
popf
fcmove
push
pusha
daa
jle
imul
mov
xchg
or
mov
jns
sbb
clc
movs
sub
das
(bad)
sbb
js
push
test
push
stos
pop
jne
cmp
dec
popf
sbb
bound
stc
pop
daa
out
clc
sbb
mov
push
ss
xor
sbb
xor
add
(bad)
es
jle
push
out
iret
outs
inc
sbb
shl
and
(bad)
dec
and
adc
jp
mov
(bad)
fiadd
fwait
lock
sbb
dec
dec
popf
scas
dec
loope
test
pop
push
pop
pop
(bad)
in
adc
add
lods
mov
xchg
pop
(bad)
xor
and
jb
int
push
pushf
jae
mov
into
aam
int3
pusha
mov
mov
and
pop
inc
int
lods
jnp
ret
aas
sbb
cld
lahf
loope
dec
push
add
jmp
and
out
mov
movs
cs
es
int3
sbb
stos
jae
mov
popf
vmread
scas
dec
bound
jge
retf
int
adc
mov
push
xchg
push
mov
into
push
push
nop
scas
add
lahf
pop
mov
scas
push
pop
sbb
sbb
fmul
ja
mov
push
dec
lods
dec
shl
xor
cmc
xchg
ret
(bad)
mov
push
push
hlt
cmp
sub
adc
xor
cmp
xchg
es
icebp
mov
scas
lds
pop
add
xchg
add
out
jnp
mov
shl
ins
inc
mov
dec
sub
aas
aam
rol
popa
adc
loopne
into
mov
fisttp
out
inc
mov
mov
jnp
xchg
adc
ret
or
sub
adc
jle
scas
int3
mov
dec
icebp
out
ret
add
ds
into
loop
dec
pop
inc
ds
rcr
ret
into
leave
push
mov
inc
jle
movs
mov
sbb
paddusb
(bad)
and
jle
loope
and
cmp
ret
mov
inc
pop
dec
fmul
dec
ret
or
dec
ret
and
(bad)
cmps
cmp
jo
cld
and
leave
addr16
inc
sbb
rcr
ret
jne
add
inc
push
repz
pop
arpl
aad
cli
retf
daa
sbb
pop
inc
add
pop
sub
or
cmp
pop
les
cmp
loope
sti
(bad)
mov
popa
leave
adc
sub
(bad)
clc
test
pop
call
repz
sbb
add
dec
dec
cs
xor
or
and
dec
mov
push
ds
js
push
data16
test
lock
push
pop
int3
push
jae
adc
frstor
pusha
cmp
xor
mov
xchg
lahf
loop
or
jge
test
mov
mov
mov
repnz
out
ds
pop
inc
pop
gs
mov
sti
cmps
mov
jmp
or
mov
xor
adc
sub
ja
lods
and
lea
mov
jns
pop
xchg
inc
cmp
jge
fisttp
mov
pop
je
hlt
sub
or
mov
jmp
movs
pop
jmp
loop
mov
jne
icebp
cmp
or
in
xor
sub
sub
mov
sbb
mov
movs
(bad)
popf
add
mov
int
fsub
mov
sub
inc
pop
xchg
js
fbstp
aaa
movs
xchg
daa
and
adc
mov
imul
lea
adc
repz
add
adc
jmp
xchg
mov
or
jo
ret
sub
loope
jno
arpl
sub
inc
push
ret
rol
inc
adc
push
mov
add
scas
lea
popa
rcl
popa
inc
push
push
and
and
loop
test
sub
bound
ret
inc
adc
add
cmp
lods
mov
popa
push
add
jg
and
xchg
out
jp
cdq
push
jg
mov
pop
jmp
into
loope
lds
push
dec
(bad)
cmp
aad
xchg
cld
add
scas
xor
loope
popa
push
fwait
(bad)
and
lock
xchg
(bad)
xchg
ds
call
jno
push
je
sub
add
xor
and
fistp
adc
dec
xchg
push
inc
adc
repz
xor
lock
push
inc
mov
xor
jmp
into
jp
mov
(bad)
jle
mov
cmp
es
les
sub
mov
xchg
pusha
push
or
daa
pusha
jle
jne
out
cdq
cmps
shl
daa
add
adc
pop
loopne
jle
push
cmp
imul
fisttp
inc
sub
(bad)
dec
ficomp
fadd
mov
sbb
adc
xor
or
cmc
mov
jl
xor
movs
mov
adc
pop
xlat
or
and
mov
inc
outs
mov
or
mov
inc
push
xor
add
xchg
push
dec
std
mov
mov
(bad)
cmc
jg
adc
(bad)
mov
or
xor
out
fcmovnbe
in
add
sti
aas
cmp
xor
push
dec
shl
fild
iret
mov
fadd
push
mov
jge
inc
shr
cmp
sbb
clc
add
pop
das
in
fisttp
add
pop
movs
ror
add
mov
mov
aas
and
adc
lods
jl
mov
sub
add
in
xor
inc
and
jno
cmp
push
int3
push
dec
ins
stos
push
push
jnp
int3
mov
fisub
not
rcr
imul
ret
mov
test
cmp
inc
inc
in
je
out
call
mov
dec
inc
cmp
sbb
lods
push
jle
jg
push
sbb
mov
dec
adc
in
jmp
mov
rol
imul
ins
out
push
pop
xor
cld
test
push
xor
and
bound
arpl
or
pushf
aam
and
mov
test
fs
adc
add
dec
fstp
retf
pop
mov
xchg
sub
or
call
mov
imul
js
loop
std
pop
mov
add
push
xor
js
in
jmp
mov
fmul
imul
(bad)
mov
inc
jb
sahf
outs
stc
scas
push
jne
aad
push
mov
pop
cmps
les
fisttp
femms
and
push
inc
stos
jb
xchg
jp
in
mov
mov
out
sbb
das
lds
test
rep
xor
adc
inc
(bad)
into
add
jg
xor
cs
pop
xor
stos
js
gs
adc
mov
adc
xor
in
sub
int3
mov
fist
xchg
call
movs
mov
lock
rol
ds
fisub
push
add
dec
mov
jp
das
scas
xor
sbb
jmp
jg
(bad)
mov
addr16
pop
mov
jbe
stos
out
pop
push
fisttp
icebp
pop
cs
mov
aas
loop
add
mov
fistp
call
sbb
imul
mov
hlt
cwde
mov
fsubr
jne
inc
and
xor
repnz
sub
push
mov
mov
aad
jp
movs
push
xor
into
xchg
push
or
retf
popa
cs
call
dec
mov
mov
or
push
iret
imul
jmp
and
stos
mul
rcl
or
jmp
movs
ret
xlat
popf
xchg
aas
mov
loop
ds
gs
je
jecxz
xor
aad
aas
jne
test
adc
int3
ret
add
sub
adc
mov
add
into
xor
xor
stos
xchg
xchg
imul
(bad)
fsub
mov
icebp
sub
int
loop
pop
loope
aam
or
rcl
add
repnz
retf
cmp
call
inc
cwde
loope
clc
inc
xchg
push
or
xchg
mov
cwde
fbld
sti
test
mov
sbb
call
retf
mov
(bad)
not
fsub
stc
adc
std
repnz
and
scas
sbb
dec
loop
cli
jge
clc
shl
pop
add
cli
push
in
or
enter
test
xlat
fld
stos
repz
rcl
mov
popa
test
sub
frstor
and
mov
scas
push
sbb
outs
push
cmp
aaa
and
dec
lock
push
push
cmp
push
scas
adc
mov
data16
or
pop
inc
into
push
push
jecxz
repnz
mov
jp
dec
pop
cli
lahf
cmp
hlt
les
xchg
cmp
mov
add
jmp
dec
inc
dec
inc
cmp
jne
iret
mov
xchg
stos
hlt
retf
mov
(bad)
jno
dec
das
pusha
xor
test
inc
dec
or
pop
adc
rcl
adc
xchg
mov
movs
mov
jne
cmp
aaa
jb
pop
arpl
inc
repnz
cmp
aad
jle
loop
mov
fist
lds
or
xchg
bound
push
stc
jo
adc
call
dec
jl
popa
popf
mov
call
(bad)
sti
daa
pusha
loope
(bad)
enter
gs
jnp
cdq
pop
mov
push
adc
inc
fidivr
hlt
daa
xchg
sbb
pop
fcmovbe
stos
push
dec
dec
stos
rep
or
movs
jmp
cmps
mov
jne
add
jne
in
repz
push
and
cs
std
mov
pushf
xchg
push
jge
cwde
xor
mov
xchg
mov
imul
pop
lahf
ins
jmp
adc
fdiv
nop
ins
xor
add
push
fiadd
stc
and
xchg
pop
pop
pop
cld
shl
int
lds
pusha
ins
das
or
nop
dec
jo
jno
push
popf
cmp
clc
out
mov
mov
ret
(bad)
mov
out
cmp
cmp
jg
jle
fdivp
dec
mov
mov
aad
and
outs
cs
ret
push
daa
lds
sub
lods
lock
mov
jmp
jmp
add
inc
pop
push
gs
mov
scas
and
int
cmp
sbb
lock
cmp
or
shl
xor
ror
jo
out
xor
jbe
xor
or
gs
js
jmp
push
dec
icebp
pushf
mov
sub
lods
(bad)
mov
pop
mov
lods
(bad)
arpl
jmp
arpl
adc
sbb
aam
mov
or
lea
push
push
call
mov
call
mov
mov
sub
push
call
lea
add
mov
mov
lea
push
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
push
push
mov
call
mov
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
add
call
push
mov
push
push
lea
call
push
lea
push
call
mov
call
test
jne
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
push
push
push
jmp
mov
cmp
je
mov
call
test
je
mov
call
test
je
mov
call
test
je
call
mov
mov
push
push
push
mov
call
add
call
mov
push
push
push
lea
call
push
lea
push
jmp
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
lea
push
mov
mov
call
mov
call
lea
call
mov
lea
add
push
mov
call
mov
mov
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
mov
mov
call
mov
mov
push
push
mov
call
add
mov
mov
push
call
mov
call
mov
mov
call
lea
push
call
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
mov
mov
and
mov
fild
and
mov
mov
fild
mov
sub
lea
fchs
faddp
fdiv
fstp
push
push
push
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
call
mov
mov
add
push
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
lea
push
push
call
mov
mov
add
push
push
lea
call
call
mov
mov
push
push
mov
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
cmp
jne
mov
push
push
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
lea
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
lea
call
mov
call
movzx
push
push
push
lea
call
lea
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
cmp
jne
mov
push
push
push
call
call
mov
mov
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
jne
cmp
je
lea
call
lea
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
lea
call
mov
call
movzx
push
push
call
mov
push
lea
call
push
push
lea
call
mov
mov
mov
push
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
push
call
mov
call
xor
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jle
push
push
call
add
cmp
je
sub
sar
cmp
je
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
call
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
mov
mov
mov
push
push
push
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
mov
call
test
jne
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
mov
push
mov
call
mov
lea
push
push
mov
call
mov
call
mov
mov
cmp
setne
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
push
lea
call
mov
mov
mov
mov
lea
push
mov
push
push
lea
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
push
lea
call
mov
lea
push
mov
call
mov
lea
call
mov
call
test
je
mov
call
test
jne
mov
call
test
je
mov
call
test
je
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
lea
push
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
mov
push
push
call
add
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
cmp
je
push
call
mov
call
test
jne
mov
call
test
je
mov
call
test
jne
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
lea
push
mov
call
mov
mov
call
test
sete
mov
lea
call
cmp
je
lea
push
mov
call
mov
lea
push
mov
call
mov
lea
call
mov
lea
call
push
push
lea
call
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
push
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
push
push
push
push
lea
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
mov
push
push
push
call
add
mov
lea
call
mov
mov
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
call
mov
mov
push
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
push
jne
push
push
mov
jmp
lea
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
push
mov
lea
push
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
mov
add
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
je
lea
call
test
je
lea
call
test
jne
mov
lea
push
mov
call
push
push
lea
push
lea
call
cmp
jne
call
mov
mov
push
push
push
mov
call
add
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
pop
pop
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
mov
call
lea
mov
call
lea
lea
push
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
call
push
mov
call
call
mov
push
lea
mov
call
mov
call
mov
call
push
mov
lea
mov
push
mov
call
mov
mov
mov
call
call
mov
mov
push
push
push
push
mov
call
add
push
lea
lea
push
mov
call
lea
push
mov
call
lea
mov
call
mov
push
mov
call
lea
push
call
lea
mov
call
mov
push
mov
call
mov
call
push
mov
mov
call
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
lea
push
mov
mov
call
mov
call
lea
mov
mov
call
test
jne
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
mov
call
lea
add
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
call
test
je
mov
push
push
call
test
je
lea
call
mov
push
push
lea
call
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
lea
call
mov
push
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
mov
sub
push
call
add
add
mov
mov
lea
push
lea
call
mov
push
push
push
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
lea
call
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
lea
call
mov
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
mov
mov
pop
ret
mov
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
push
lea
mov
call
mov
mov
mov
mov
lea
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
call
test
jne
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
cmp
je
push
mov
call
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
push
call
cmp
lea
jl
cmp
jne
mov
mov
lock
mov
pop
pop
pop
ret
mov
mov
mov
push
push
mov
call
mov
test
jne
jmp
mov
mov
mov
add
push
add
push
push
lea
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
lea
push
mov
je
cmp
lea
jge
cmp
jge
push
call
mov
mov
pop
mov
pop
ret
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
call
add
mov
pop
pop
ret
call
cmp
je
call
mov
call
xor
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
push
push
mov
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
mov
je
lea
mov
add
sub
jne
cmp
jle
mov
push
lea
call
mov
mov
push
push
push
push
call
add
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
int3
push
mov
mov
push
push
push
mov
push
mov
mov
mov
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
xor
push
mov
mov
mov
mov
mov
push
push
lea
push
push
call
mov
call
mov
mov
push
push
lea
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
sub
mov
push
mov
call
add
add
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
lea
mov
push
call
add
cmp
mov
jne
pop
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
shr
push
mov
add
mov
movzx
push
push
push
call
test
je
push
push
push
call
mov
add
test
jne
pop
pop
xor
pop
pop
ret
movzx
call
push
push
push
push
push
lea
push
push
push
mov
call
mov
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
movzx
mov
push
push
push
push
push
mov
push
push
call
push
call
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
mov
pop
pop
ret
push
call
int3
int3
int3
int3
push
mov
push
push
mov
test
mov
jne
call
pop
pop
pop
ret
mov
test
jne
push
call
mov
mov
mov
push
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
mov
cmp
mov
push
ja
lea
push
push
push
call
jmp
push
push
push
call
add
test
pop
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
ret
int3
int3
push
mov
sub
mov
push
xor
cmp
push
mov
mov
je
mov
push
mov
xor
cmp
jle
mov
cmp
jne
test
jne
mov
mov
sub
mov
sub
sub
or
mov
jge
push
mov
call
mov
mov
mov
add
mov
lea
sar
cmp
jl
test
je
test
jl
mov
cmp
jg
mov
mov
mov
pop
mov
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
test
push
push
mov
jg
jl
mov
cmp
jae
mov
xor
jmp
mov
push
push
push
push
call
push
push
lea
mov
mov
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
add
mov
mov
adc
mov
cmp
jl
jg
cmp
jbe
push
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
push
mov
push
mov
test
je
mov
mov
mov
or
jne
mov
push
push
mov
call
mov
mov
push
push
mov
call
mov
pop
pop
ret
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
call
cmp
je
push
call
mov
call
push
push
call
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
mov
jne
jmp
lea
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
mov
lea
push
call
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
jmp
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
lea
add
cmp
je
cmp
lea
jl
mov
cmp
jne
push
call
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
push
lea
push
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
xor
test
setne
mov
test
jne
push
call
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
jmp
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
call
push
lea
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
jne
mov
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
cmp
jne
xor
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
test
setne
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
test
je
mov
call
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
call
mov
add
test
je
push
lea
call
mov
call
mov
push
push
push
mov
call
mov
add
lea
push
mov
call
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
mov
test
je
mov
push
push
call
add
cmp
jne
pop
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
sub
push
mov
mov
mov
mov
test
mov
jge
mov
push
call
add
add
add
mov
test
je
mov
push
push
call
add
cmp
jne
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
movzx
mov
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
je
lea
mov
add
sub
jne
mov
cmp
jle
mov
push
lea
call
mov
push
push
push
push
call
mov
add
test
jne
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
call
mov
push
call
mov
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
push
je
mov
push
push
call
add
cmp
jne
mov
push
push
call
mov
mov
push
push
call
mov
add
test
je
mov
push
push
call
add
mov
pop
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
push
mov
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
push
push
push
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
call
add
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
xor
push
mov
mov
call
mov
call
mov
push
push
lea
push
lea
mov
mov
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
add
lea
push
adc
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
push
call
push
push
mov
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
test
je
mov
add
mov
call
cmp
ja
jb
cmp
jae
call
mov
lea
push
call
mov
call
mov
mov
lea
push
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
push
push
lea
call
push
lea
push
call
mov
sub
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
pop
pop
mov
mov
pop
ret
push
lea
call
mov
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jmp
mov
movsx
push
lea
push
push
call
add
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
push
call
cmp
je
add
cmp
jle
push
push
call
test
je
nop
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
jmp
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
lea
call
mov
test
je
push
call
add
mov
mov
pop
xor
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
push
lea
call
test
setne
call
mov
mov
add
push
call
lea
mov
mov
movzx
mov
mov
push
push
push
push
call
add
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
cmp
jne
push
push
lea
call
mov
call
mov
mov
movzx
push
push
push
push
push
call
add
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
call
push
mov
mov
push
mov
call
mov
push
mov
mov
push
call
mov
mov
call
mov
add
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
jne
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
push
push
push
push
push
lea
push
call
test
jne
call
push
push
lea
call
push
lea
push
call
mov
lea
push
mov
push
push
call
test
jne
mov
mov
push
call
cmp
jne
call
push
push
lea
call
push
lea
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
push
lea
call
mov
lea
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
nop
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
push
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
push
push
push
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
push
push
lea
push
push
mov
call
mov
call
mov
call
mov
mov
push
push
push
mov
call
add
push
lea
push
lea
call
mov
call
mov
push
push
push
mov
call
add
push
lea
call
test
jne
call
mov
mov
push
push
push
call
add
jmp
push
call
mov
test
mov
jne
mov
call
mov
mov
push
push
push
push
call
mov
add
push
push
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
lea
call
test
jne
call
mov
mov
push
push
call
add
jmp
mov
push
call
test
jne
call
mov
mov
add
call
mov
push
push
push
call
add
jmp
lea
call
mov
push
push
lea
call
test
je
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
mov
call
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
mov
push
mov
push
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
mov
add
cmp
jl
push
push
call
add
test
je
sub
sar
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
jmp
push
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jle
mov
push
lea
call
mov
push
call
add
cmp
jge
call
cmp
je
call
mov
push
push
mov
call
add
jmp
lea
call
mov
call
movzx
push
push
push
lea
call
mov
push
push
push
push
call
cmp
jne
call
mov
mov
push
push
call
jmp
call
mov
mov
push
push
call
mov
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
pop
pop
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
movzx
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
call
push
push
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
push
call
lea
add
push
call
mov
lea
call
or
mov
lea
call
mov
mov
call
push
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
call
mov
mov
jmp
mov
push
mov
lea
call
mov
mov
mov
ret
call
push
push
lea
call
mov
push
mov
lea
call
mov
lea
call
mov
mov
mov
ret
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
mov
mov
mov
cmp
jge
push
call
mov
cmp
je
cmp
je
mov
lea
mov
lea
cmp
mov
jae
push
push
call
mov
lea
add
cmp
jae
mov
push
push
call
mov
mov
add
add
lea
push
mov
mov
push
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
cmp
jge
mov
cmp
je
mov
mov
call
cmp
jne
call
mov
mov
mov
call
mov
mov
lea
mov
push
push
mov
call
mov
jmp
mov
mov
mov
mov
test
je
mov
mov
call
test
jne
call
mov
mov
mov
call
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
push
je
jmp
lea
mov
cmp
je
mov
lea
mov
cmp
ja
sub
mov
mov
mov
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
or
mov
lea
mov
mov
mov
sub
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
or
add
jne
mov
cmp
jne
mov
cmp
jbe
mov
sub
cmp
lea
je
mov
push
call
add
cmp
ja
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
push
je
mov
push
push
call
add
cmp
je
mov
call
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
cmp
push
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
jmp
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
add
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
push
lea
push
lea
call
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
test
sete
test
jne
call
mov
mov
push
push
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
push
lea
push
lea
call
push
lea
call
lea
call
lea
call
test
je
push
push
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
add
push
call
lea
mov
mov
mov
add
push
call
lea
mov
mov
mov
mov
push
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
jne
pop
pop
pop
mov
push
push
call
call
mov
push
push
mov
call
add
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
mov
mov
push
call
mov
call
or
mov
mov
call
lea
push
mov
call
mov
add
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
push
call
mov
call
test
jne
lea
call
mov
mov
push
call
push
push
push
lea
push
push
call
add
lea
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
push
mov
mov
push
mov
call
mov
call
mov
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
jmp
lea
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
or
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
jne
mov
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
mov
jge
mov
cmp
je
push
call
mov
jmp
push
lea
push
lea
call
mov
call
mov
cmp
mov
jl
mov
lea
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
lea
call
push
lea
call
mov
mov
push
push
lea
call
mov
push
lea
call
test
jne
push
push
push
mov
push
call
add
test
jne
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
cmp
jle
mov
cmp
je
push
call
mov
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
call
add
cmp
jne
mov
push
lea
or
push
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
cmp
jne
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
lea
call
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
mov
push
push
push
push
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
mov
mov
add
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
push
push
push
push
mov
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
push
push
lea
call
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
lea
call
push
lea
call
lea
call
mov
mov
mov
push
mov
push
lea
call
test
jne
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
jmp
mov
push
mov
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
push
mov
mov
lea
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
mov
ret
mov
lea
call
mov
lea
call
mov
jmp
call
mov
mov
push
push
push
mov
call
add
jmp
call
mov
push
push
mov
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
call
push
push
push
lea
call
push
lea
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
call
test
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
call
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
push
add
call
add
cmp
jle
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
call
add
cmp
jl
push
call
add
cmp
jg
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
test
jne
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
push
mov
call
add
cmp
jne
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
call
push
push
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
lea
call
cmp
jne
mov
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
sete
test
sete
test
je
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
lea
push
push
push
push
lea
call
push
lea
call
mov
call
push
lea
mov
mov
push
call
mov
mov
push
push
lea
push
lea
call
push
lea
call
mov
mov
call
call
mov
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
pop
xor
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
push
lea
call
mov
mov
push
push
lea
push
push
call
mov
mov
add
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
push
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
jmp
mov
xor
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
add
mov
push
mov
call
add
mov
mov
mov
mov
add
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
call
mov
lea
call
mov
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
add
lea
call
lea
call
test
je
push
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
lea
call
push
lea
call
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
xor
test
setne
push
lea
push
push
push
call
mov
mov
add
lea
lea
mov
add
test
jne
mov
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
call
test
jne
pop
pop
mov
lea
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jge
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
push
mov
call
add
cmp
jl
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
mov
push
call
mov
push
mov
lea
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
lea
mov
mov
add
test
jne
sub
sar
push
lea
mov
push
push
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
push
mov
call
add
cmp
jle
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
push
push
lea
call
mov
mov
test
jge
push
call
movzx
cmp
jne
cmp
jge
push
call
movzx
cmp
je
push
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
mov
call
test
je
call
mov
mov
push
push
call
add
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
lea
push
push
lea
push
lea
mov
call
mov
lea
push
push
lea
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
lea
push
lea
call
mov
call
mov
call
mov
mov
push
push
push
push
mov
call
mov
add
push
push
push
push
call
test
je
push
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
push
call
add
mov
mov
test
je
mov
call
mov
jmp
xor
mov
lea
push
lea
call
add
mov
mov
push
push
mov
call
mov
mov
test
je
mov
jmp
mov
push
lea
push
push
push
push
push
push
mov
call
mov
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
push
push
call
test
je
mov
cmp
jne
push
push
push
push
lea
push
call
test
je
mov
sub
je
sub
je
sub
jne
push
call
mov
call
jmp
call
mov
call
jmp
mov
push
push
push
push
call
call
mov
mov
push
push
push
push
call
lea
push
call
lea
push
call
push
call
lea
push
push
call
test
jne
mov
push
push
lea
mov
call
mov
and
cmp
pop
je
cmp
je
cmp
jne
call
mov
mov
push
push
push
mov
call
lea
add
cmp
jne
call
push
push
push
lea
call
mov
push
mov
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
push
cli
mov
iret
push
popa
popf
mov
pop
push
add
pop
add
nop
nop
nop
nop
nop
nop
retf
popf
push
paddsb
jb
jmp
pop
inc
xor
sbb
aaa
mov
iret
sbb
sbb
push
jmp
out
popf
(bad)
push
jae
cld
inc
pop
test
clc
push
jmp
jmp
add
fcomp
jge
cmp
fucomi
mov
imul
fcom
hlt
add
jne
rcr
xchg
out
retf
cwde
push
cli
or
mov
retf
mov
push
sbb
xor
rcl
jmp
fs
add
lods
les
mov
jb
xrelease
test
pop
out
mov
daa
adc
xor
mov
lock
popf
fidiv
or
mov
cmp
repz
xchg
jg
mov
call
xchg
jb
adc
pushf
fnstcw
xor
clc
jmp
xchg
inc
inc
arpl
jnp
jmp
and
movs
jmp
jmp
jp
or
daa
inc
sbb
ror
mov
js
or
add
adc
push
mov
jmp
lea
xchg
and
xor
imul
lahf
jb
push
outs
div
jne
rcr
nop
std
mov
ror
adc
pusha
sbb
push
pop
repnz
adc
pop
fld
scas
pop
push
sbb
inc
pop
popf
adc
icebp
stos
jo
clc
jmp
(bad)
mov
das
mov
adc
es
mov
bound
aam
movs
repnz
push
popa
inc
push
or
inc
pop
xchg
jmp
mov
cli
mov
inc
push
pusha
bound
mov
jp
push
jmp
sub
push
repz
sub
clc
mov
adc
pushf
add
shl
jae
pop
push
sahf
push
jae
test
adc
cs
popf
lods
nop
mov
stc
movs
jae
pop
push
sahf
push
jnp
add
push
popa
adc
dec
cs
mov
popf
mov
mov
scas
xchg
div
pop
push
sahf
xchg
cmp
out
jo
xor
shl
jno
loopne
sbb
jbe
mov
adc
into
add
xchg
mov
popf
js
add
lods
call
jg
inc
jl
inc
add
xor
inc
sub
add
cli
jl
lahf
lods
xor
cmp
shl
jnp
push
sahf
out
or
mov
jl
xchg
mov
and
push
push
popf
mov
(bad)
push
iret
inc
add
repnz
mov
fs
jmp
push
or
test
lahf
ret
bnd
inc
sahf
cmp
jmp
into
and
test
sub
xor
mov
mov
pop
jmp
inc
lahf
retf
int3
xor
call
jns
(bad)
pop
pushf
mov
and
icebp
push
xchg
cs
fldcw
aaa
movs
sbb
pop
dec
inc
pop
pop
jae
call
xor
cmps
dec
inc
xchg
cmp
leave
daa
cs
adc
arpl
popf
(bad)
mov
jo
inc
ret
(bad)
lahf
fucomi
mov
popf
out
cmp
ins
shl
int
inc
add
sub
jmp
add
adc
mov
xchg
xor
xchg
sahf
pop
cli
mov
mov
sahf
cmp
inc
fst
stc
xchg
repnz
jl
jmp
scas
loop
mov
push
inc
into
lahf
mov
jmp
inc
popf
leave
sub
or
int
scas
sub
or
inc
inc
jbe
dec
mov
cmp
lods
ja
imul
leave
inc
adc
cmc
cmps
jne
pusha
mov
jns
pop
mov
mov
push
rol
fldenv
call
mov
test
or
push
scas
popa
popf
mov
rcr
or
push
popa
push
mov
ins
adc
push
retf
lahf
cmp
jmp
into
xchg
dec
lahf
stc
cli
adc
add
sahf
imul
retf
pop
push
hlt
cwde
adc
lods
dec
jns
sti
and
inc
sbb
aas
cmp
bound
jne
popa
test
cli
lods
movs
mov
jno
or
nop
and
icebp
pop
bnd
inc
adc
hlt
cwde
adc
fcomi
lock
cli
mov
mov
je
cli
icebp
pop
push
pop
push
push
pop
adc
pop
mov
xchg
mov
sahf
scas
jmp
add
inc
hlt
nop
adc
mov
and
inc
add
fnstsw
cmp
bound
(bad)
sbb
mov
adc
inc
xor
adc
push
bound
fldcw
lea
xor
mov
sbb
(bad)
mov
mov
cmp
repnz
scas
jo
pop
fstp
inc
mov
mov
scas
bound
mov
popf
in
dec
je
sti
popa
popf
mov
clc
jmp
mov
sti
cmc
mov
sar
add
push
mov
mov
popf
mov
or
jmp
dec
jmp
lods
sahf
push
leave
or
sbb
mov
inc
add
and
cmp
dec
xor
fld
ror
adc
ss
call
sar
pop
xchg
(bad)
mov
mov
mov
push
shl
pop
push
daa
fst
jnp
inc
pop
dec
push
add
popa
xor
sub
add
push
loopne
mov
leave
xchg
xchg
jb
adc
xor
movs
repnz
jae
es
add
pop
(bad)
shr
cmps
push
clc
jecxz
test
int
xchg
enter
test
push
movs
fmul
sbb
leave
imul
mov
adc
push
jg
cmovnp
popa
popf
mov
movs
(bad)
xchg
pop
cli
push
fld
in
enter
add
test
pushw
loope
das
scas
call
lock
push
aas
fdiv
lea
movs
repnz
fistp
mov
jl
xchg
mov
push
sbb
int3
mov
mov
jns
sti
xchg
inc
(bad)
xlat
sahf
jmp
in
aaa
push
pop
push
push
sub
push
rol
popa
(bad)
test
repz
jnp
sti
xchg
push
arpl
or
mov
mul
or
add
adc
aaa
mov
adc
mov
mov
icebp
lock
dec
lds
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
into
call
mov
lea
call
push
lea
call
push
lea
push
call
push
call
add
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
cmp
je
push
push
lea
call
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
call
mov
mov
push
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
cmp
mov
je
call
cmp
je
call
cmp
je
call
mov
mov
push
push
push
call
add
jmp
call
mov
mov
push
push
push
call
add
lea
push
push
mov
call
push
call
test
je
lea
push
push
push
call
mov
push
push
push
lea
push
push
push
mov
mov
call
push
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
mov
test
je
call
push
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
mov
call
mov
pop
and
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
push
lea
call
mov
call
push
push
lea
push
lea
mov
call
mov
call
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
call
mov
call
mov
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
mov
cmp
je
mov
cmp
je
push
push
lea
call
mov
mov
push
push
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
movzx
movzx
push
push
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
push
lea
push
call
mov
mov
push
push
push
push
mov
mov
mov
mov
call
push
push
push
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
add
mov
call
mov
xor
cmp
je
mov
mov
cmp
mov
mov
je
mov
jmp
mov
mov
mov
add
mov
jne
mov
cmp
je
lea
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
je
push
mov
mov
mov
mov
mov
mov
add
mov
mov
call
cmp
jne
call
mov
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
mov
pop
mov
pop
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
xor
cmp
jne
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
cmp
je
call
mov
call
push
lea
push
lea
call
mov
call
test
sete
cmp
jne
push
push
lea
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
jne
mov
cmp
jne
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
cmp
jne
call
mov
mov
push
push
push
call
push
call
add
mov
mov
cmp
je
mov
call
mov
jmp
xor
mov
call
push
mov
call
mov
call
call
mov
call
call
mov
mov
cmp
je
mov
jmp
xor
call
mov
call
mov
push
call
mov
cmp
je
push
call
mov
call
mov
cmp
je
push
push
push
lea
push
call
mov
call
mov
push
lea
mov
mov
push
call
mov
call
mov
mov
call
mov
lea
call
mov
cmp
je
call
mov
mov
push
push
push
mov
call
mov
add
push
push
call
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
mov
mov
push
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
lea
push
lea
call
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
add
lea
lea
push
push
push
lea
call
push
lea
mov
call
mov
mov
mov
mov
push
add
call
add
cmp
jle
call
mov
call
xor
test
setne
test
jne
push
call
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
mov
mov
call
add
mov
mov
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
mov
push
push
push
call
add
cmp
jl
push
push
call
add
test
je
sub
sar
cmp
je
mov
call
push
push
jmp
cmp
jl
push
push
call
add
test
je
sub
sar
cmp
je
mov
call
push
push
mov
mov
push
call
add
mov
push
push
mov
call
test
mov
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
test
mov
je
lea
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
push
push
mov
mov
xlat
xlat
jecxz
mov
lahf
jo
cmp
(bad)
mul
pop
add
pop
xor
push
xchg
not
in
push
push
gs
(bad)
(bad)
int
cmps
rol
hlt
mov
jmp
pop
outs
cmc
dec
pop
cmp
fisttp
cmps
retf
add
sbb
adc
pop
mov
test
dec
mov
les
cmps
in
mov
fsubr
push
xchg
push
mov
mov
xchg
adc
cmc
lock
dec
mov
das
and
xor
xor
and
mov
push
in
adc
mov
test
and
jno
dec
hlt
adc
js
cmps
pop
in
push
(bad)
je
jge
mov
das
dec
pop
mov
xchg
mov
shr
push
sbb
scas
add
ss
in
scas
lea
push
js
xchg
xor
xchg
jmp
ins
ss
adc
xor
loop
(bad)
icebp
outs
cmp
mov
push
cwde
or
aaa
fsub
loopne
and
icebp
fild
cmc
das
test
mov
pop
pop
lds
test
adc
scas
mov
push
nop
fsub
mov
ja
(bad)
lock
mov
jnp
pop
inc
xor
add
push
mov
fnstsw
xchg
push
das
or
inc
sbb
xor
scas
dec
jbe
push
shl
xchg
cmps
or
inc
and
test
adc
mov
add
push
cwde
cs
inc
pop
not
sbb
mov
in
(bad)
daa
xchg
aas
jle
jmp
jae
sbb
gs
rcl
daa
ss
lahf
aam
jecxz
icebp
inc
xchg
jns
sbb
xor
outs
mov
mov
test
in
scas
mov
adc
js
daa
fst
adc
movntq
cmc
int3
lahf
xor
ss
std
pop
jns
test
mov
icebp
arpl
scas
out
cli
aam
push
in
je
and
or
repz
adc
ins
jg
add
aas
inc
jp
aam
imul
fnstcw
out
out
mov
mov
pop
cmp
add
mov
repz
not
add
hlt
loope
xchg
xchg
test
adc
retfw
int3
sbb
in
dec
cmc
and
pusha
xchg
sbb
jns
call
mov
jg
pop
jbe
adc
hlt
mov
jecxz
and
xor
cld
mov
stos
push
lods
shr
cmps
mov
lahf
cmp
pop
rcl
and
inc
cmc
jbe
imul
or
hlt
push
retf
adc
jl
out
dec
dec
mov
mov
aaa
fsub
mov
pop
push
pop
in
mov
mov
sub
inc
push
imul
nop
dec
mov
adc
xchg
out
add
cmp
push
mov
sar
mov
dec
ds
pop
cmp
and
cmp
mov
jae
fmul
dec
and
push
ret
xchg
outs
sub
fstp
outs
pop
and
push
sbb
pop
(bad)
xor
icebp
and
jno
cdq
out
add
push
cmps
ss
xchg
fisubr
mov
imul
cmc
pop
test
xlat
push
pop
repnz
imul
sub
lahf
push
jno
ret
sbb
inc
ins
or
mov
lds
pop
jmp
in
pusha
mov
lea
es
cmp
and
jne
aad
cmp
ins
inc
cmp
xlat
add
or
fstp
xchg
(bad)
cli
(bad)
xchg
pop
unpcklps
push
mov
push
pop
cmc
push
push
ror
inc
dec
push
sbb
xchg
xor
xchg
test
dec
xlat
or
or
and
mov
jmp
sub
xor
or
icebp
inc
imul
push
mov
push
je
call
inc
ins
mov
xchg
mov
and
out
pop
xchg
adc
fbstp
int3
fst
out
cmps
and
fsub
(bad)
repz
mov
inc
pop
mov
jns
add
push
inc
sub
scas
fild
movs
(bad)
mov
popf
les
aad
ret
test
add
mov
jle
int
mov
imul
mov
das
fdiv
xlat
and
shl
lods
and
movs
push
add
inc
sub
out
mov
mov
lds
xchg
jle
ja
fisub
div
mov
aaa
mov
inc
xor
mov
mov
and
sar
inc
mov
test
(bad)
xchg
inc
push
cwde
sbb
add
scas
mov
out
out
ja
stc
cmps
pop
add
lock
push
mov
idiv
pop
cwde
aaa
loope
movs
inc
pop
out
jmp
shl
js
sbb
gs
sar
dec
pop
popf
outs
outs
pop
call
jae
inc
ja
fld
ds
(bad)
push
int3
test
xchg
addr16
test
inc
add
fnstenv
xor
push
lods
scas
adc
add
and
adc
xor
inc
lar
jecxz
daa
popa
and
cs
cmps
inc
test
mov
(bad)
push
sub
jp
xor
mov
mov
inc
imul
mov
jae
xor
movs
call
xor
cli
add
sub
pop
ds
out
enter
rcl
xchg
fwait
jecxz
rcl
jno
lods
arpl
int3
je
imul
dec
xchg
(bad)
jmp
in
pop
sti
div
sbb
cmp
push
add
mov
sub
je
movs
jnp
sti
cld
js
je
xor
inc
outs
sbb
pop
test
mov
rcr
inc
mov
gs
and
mov
jg
mov
or
(bad)
dec
mov
dec
adc
sub
add
mov
mov
stos
call
fs
retf
jg
cmp
nop
bound
and
xor
xchg
cmps
sbb
xchg
in
stc
fild
les
daa
dec
movs
push
outs
mov
add
sar
xor
test
iret
jae
adc
jbe
dec
dec
adc
or
pop
rol
add
ja
mov
loop
xchg
loop
dec
cld
test
and
add
push
das
jno
xchg
das
sbb
or
lahf
shl
ret
sub
jg
scas
mov
sub
jb
add
imul
in
pushf
pop
movs
jno
in
popa
pop
mov
push
inc
mov
aaa
add
xor
dec
ret
pop
add
dec
std
pop
jmp
pop
addr16
in
mov
test
shl
jge
push
pop
inc
test
and
sbb
in
xor
aas
inc
retf
mov
sbb
push
call
xchg
pop
aaa
in
xor
push
sub
in
mov
cmp
adc
inc
jnp
scas
test
sub
or
jae
xchg
daa
pop
popa
aad
scas
les
ret
imul
add
ja
xor
jno
jbe
dec
(bad)
fnstsw
icebp
pushf
movs
dec
outs
lods
test
xor
add
pop
xchg
daa
lock
lea
fimul
xchg
ja
or
lock
es
sbb
jg
(bad)
or
xchg
xchg
(bad)
add
xor
adc
xlat
pop
into
push
jmp
push
dec
adc
dec
(bad)
mov
mov
lods
cmp
loop
pop
push
mov
or
(bad)
loope
mov
xor
arpl
sbb
mov
rol
sahf
test
jmp
sahf
xlat
adc
call
pop
and
loope
or
sub
or
cld
fsub
jecxz
xchg
aad
cs
cmps
dec
mov
bound
mov
shl
jecxz
dec
xchg
push
movs
movs
leave
loop
cmp
and
out
xchg
cmps
es
inc
xor
bswap
xor
push
and
loope
sbb
mov
(bad)
ret
out
push
adc
cmc
jno
mov
(bad)
(bad)
inc
xchg
add
pop
hlt
dec
jle
pop
push
out
out
out
aam
loope
mov
inc
das
add
out
lods
sbb
add
push
add
dec
out
gs
mov
int3
shl
out
int3
in
fst
pop
inc
inc
(bad)
arpl
or
iret
test
and
out
movs
and
pop
call
pop
mov
int3
xchg
adc
and
shl
mov
inc
push
adc
inc
xchg
xchg
adc
test
add
hlt
je
jge
gs
into
inc
(bad)
jnp
ret
fcos
push
loopne
and
inc
jno
or
sub
xchg
inc
mov
mov
cs
mov
enter
cmc
mov
in
or
mov
ficomp
cs
or
or
fist
or
in
cmp
jb
xchg
neg
sub
(bad)
sbb
ja
and
aas
xor
add
test
cmp
jno
je
mov
enter
pop
mov
outs
add
xchg
out
adc
sti
(bad)
adc
pop
add
jg
sub
mov
xchg
jle
icebp
movs
in
or
xor
out
push
jl
inc
fisttp
gs
jno
add
xlat
inc
loop
rol
imul
arpl
add
fist
cld
es
jbe
loope
xlat
es
ffreep
in
push
shl
adc
sbb
in
je
mov
mov
pushf
inc
ds
in
arpl
in
ja
ret
cmps
jae
jo
push
cmp
movs
push
pushf
ss
xchg
in
xchg
pop
mov
hlt
pop
addr16
jmp
or
fwait
ss
dec
inc
call
outs
int3
pop
out
lods
popf
aam
fnsave
cmps
inc
out
int
scas
xchg
push
xor
pop
lods
scas
out
ds
xchg
push
das
sub
nop
jns
shr
xor
pop
sar
cli
(bad)
mov
cmp
test
hlt
inc
xlat
add
gs
lock
(bad)
fstp
sub
outs
mov
inc
push
les
xor
nop
mov
xchg
xchg
dec
lds
sbb
cld
mov
ins
jmp
mov
and
out
or
ror
mov
cmp
adc
xor
pmullw
mov
ss
jo
outs
jmp
ror
dec
xchg
or
mov
or
cdq
xchg
and
jge
std
mov
jne
shr
pop
cmps
xlat
jg
inc
xor
ror
sub
imul
sbb
imul
push
adc
add
push
arpl
(bad)
inc
lods
jno
les
test
jmp
ss
or
dec
adc
or
mov
xchg
cwde
call
jo
sbb
(bad)
jne
cmps
sub
mov
(bad)
stc
call
inc
(bad)
lea
add
icebp
mov
jle
leave
push
daa
nop
xor
popf
mov
enter
mov
xor
xor
add
xor
or
outs
inc
pop
in
fcomp
xor
push
sbb
cmps
jl
aaa
mov
inc
jne
int
test
sub
lock
movs
aaa
pop
in
call
inc
aad
xchg
ss
push
popa
aam
push
and
dec
jne
add
cmc
xor
pop
add
mov
inc
lds
mov
mov
call
adc
jo
pop
jae
(bad)
cmp
rol
push
cmp
int
push
mov
loop
xor
xor
adc
jnp
stc
pop
push
sbb
xor
mov
inc
je
int3
cld
adc
pop
cmps
jns
lds
or
adc
mov
jmp
mov
lods
adc
xchg
add
add
dec
xchg
add
daa
sbb
vpsadbw
lock
in
push
jne
lock
cmp
std
add
xchg
push
mul
loop
gs
cmp
popf
mov
cmp
push
scas
sti
(bad)
arpl
pop
sti
paddq
aaa
cdq
sbb
imul
jmp
mov
cmps
dec
or
or
add
push
(bad)
pop
mov
add
cmps
lahf
and
dec
adc
pop
lahf
gs
or
ds
sbb
outs
daa
xor
data16
(bad)
(bad)
lods
add
mov
sub
shr
cmp
push
and
ret
dec
jae
jne
ss
adc
iret
out
push
(bad)
loope
xchg
and
jo
icebp
push
(bad)
push
in
loope
out
jns
push
push
add
std
movs
test
jbe
xchg
mov
stc
sbb
cmp
xlat
not
cwde
inc
ss
aaa
call
(bad)
in
push
or
and
pop
adc
and
mov
ds
mov
mov
fistp
pop
daa
inc
pop
mov
hlt
push
mov
rcl
in
ss
push
cli
pop
push
(bad)
retf
int
sbb
test
mov
ja
aam
ins
adc
adc
inc
test
add
xchg
xchg
cmps
pop
or
add
jo
pushf
bound
(bad)
dec
fiadd
addr16
xor
push
pop
mov
xor
cmps
adc
stc
pop
lea
shl
out
(bad)
in
loopne
xlat
add
mov
xor
out
push
push
xlat
shl
adc
jmp
ficom
jp
xchg
pusha
int3
adc
ja
call
aad
stos
movs
out
xchg
rcr
shl
fwait
sbb
mov
or
add
pop
(bad)
jns
rol
je
(bad)
sti
repz
add
dec
cmc
push
cmp
scas
loop
rcr
push
stc
ja
movs
jl
inc
inc
addr16
cli
pop
imul
xchg
xor
jmp
xchg
aaa
sbb
and
call
fwait
sbb
lods
in
pop
outs
cmp
cmps
fisubr
mov
retf
sbb
ins
xor
mov
(bad)
mov
fnstsw
ret
test
sbb
mov
xchg
cmps
adc
in
xlat
fucom
outs
cmps
add
lea
inc
movs
test
daa
jl
test
sub
lods
dec
test
test
daa
sbb
cld
cld
add
pusha
out
leave
aas
(bad)
lock
sbb
xchg
scas
mov
not
into
push
xchg
in
pop
inc
test
adc
xchg
inc
push
fstp
mov
push
gs
or
aas
cmc
repnz
xor
sbb
int
mov
cmps
aaa
das
daa
cmc
inc
daa
dec
int
(bad)
aam
in
lahf
cmp
add
push
retf
add
dec
jecxz
cs
int
clc
mov
push
xor
daa
sub
mov
xchg
sub
test
jnp
sti
stos
(bad)
pop
jne
inc
cmp
lods
out
call
push
or
mov
sub
test
push
push
xor
aad
push
aaa
cmc
adc
pop
shl
jne
adc
movs
dec
pop
mov
pop
cld
(bad)
fsub
mov
jg
mov
das
fwait
daa
push
pop
pop
retf
mov
pop
test
mov
jae
mov
adc
cmc
jmp
in
cmps
xor
xor
mov
fld
loop
jg
ret
outs
dec
add
test
loop
jbe
xchg
nop
jecxz
inc
stc
dec
das
mov
test
arpl
les
or
sbb
mov
ror
out
mov
shl
and
cmps
lds
xchg
je
mov
xchg
pop
push
or
in
adc
addr16
pop
dec
call
sbb
pop
cwde
shr
dec
adc
inc
mov
jno
inc
mov
mov
aad
popa
add
lds
and
mov
sti
mov
mov
mov
arpl
inc
dec
popf
and
(bad)
push
test
inc
adc
movs
xor
pop
sub
or
popf
loopne
sub
pop
stos
lods
mov
cmp
adc
test
std
idiv
jmp
mov
(bad)
dec
pop
jno
xchg
jno
and
aaa
js
jle
test
mov
imul
data16
xor
pop
retf
push
sub
push
push
push
xchg
adc
and
sub
push
fld
inc
mov
push
jne
inc
or
inc
mov
iret
es
test
mov
int3
push
pushf
les
push
sub
xchg
xor
sbb
arpl
stos
mov
sbb
xor
mov
pop
repz
mov
ins
mov
pushf
inc
push
pop
mov
sub
push
and
or
retf
push
jmp
test
std
xchg
leave
ss
ret
xor
mov
cmp
cmp
pop
cmp
fld
inc
inc
(bad)
adc
cmp
les
cmp
mov
neg
pop
mov
or
cmps
cmp
daa
add
mov
out
aad
les
cmp
sub
jnp
retf
pusha
cmc
pop
nop
repz
lods
test
movs
xor
aaa
and
sbb
je
(bad)
es
mov
lock
fmul
ins
pop
mov
repz
lea
aad
push
mov
lds
es
je
sbb
pop
les
outs
in
fisubr
cmps
mov
pop
dec
xlat
xor
dec
pop
aam
and
lock
jecxz
xlat
dec
xchg
into
repz
aad
and
ds
add
pusha
xchg
mov
addr16
cmps
inc
mov
popf
(bad)
out
ds
and
and
push
neg
xchg
mov
push
cdq
mov
mov
jmp
rcr
mov
mov
ins
imul
push
mov
hlt
xchg
cmps
xlat
(bad)
push
mov
stos
ja
pop
cmps
hlt
sar
lahf
lods
repnz
cmp
je
pop
mov
mov
add
(bad)
rol
lds
jmp
stos
jecxz
loopne
mov
push
rol
(bad)
arpl
sbb
in
push
dec
jg
fdivr
ret
cli
mul
stos
ja
imul
mov
mov
add
xchg
add
inc
call
fwait
pusha
jno
addr16
add
adc
adc
movs
push
int3
and
pop
dec
add
and
pop
mov
adc
or
xchg
gs
xor
and
add
fbstp
or
inc
das
out
pop
arpl
adc
sti
aaa
loopne
dec
pop
jge
lods
inc
daa
push
jb
in
fdivr
mov
xchg
xchg
add
stos
test
mov
movs
ret
(bad)
mov
push
mov
xor
out
stos
pushf
aad
cmps
movs
movs
sub
ja
out
mov
or
add
es
pextrw
je
cmc
jge
xor
into
lods
shl
sub
sub
jae
inc
mov
ins
xlat
cmp
hlt
or
rcl
daa
clc
xor
sub
adc
and
or
je
push
xlat
mov
test
push
push
mov
mov
add
push
xchg
mov
lods
cmp
mov
inc
push
lds
xlat
call
pop
ficomp
jecxz
dec
int
jbe
out
xchg
sahf
pop
arpl
inc
push
outs
mov
mov
or
je
popa
xchg
or
sbb
cmp
inc
js
pop
imul
jbe
xchg
inc
or
fsubr
sti
push
aas
repz
mov
and
mov
mov
push
fwait
ret
ja
ins
dec
(bad)
adc
fist
and
std
push
mov
jmp
or
push
movs
and
and
jp
mov
popa
test
icebp
pusha
shl
out
lods
inc
pop
lock
out
rcl
sub
sub
enter
movs
sbb
xchg
movs
popf
push
mov
je
and
fisub
daa
adc
lds
jecxz
adc
(bad)
pusha
mov
out
jmp
pop
mov
int
(bad)
mov
test
pop
leave
stc
sub
mov
jbe
movs
jmp
shl
jmp
cmps
les
pop
out
in
out
push
stc
int3
(bad)
hlt
xchg
daa
adc
addr16
push
das
ret
inc
in
ins
mov
retf
leave
pusha
loop
or
mov
lahf
push
fucomi
jns
into
scas
cmc
mov
in
add
ins
fisub
orps
or
pop
mov
dec
std
pop
addr16
pushf
fnsave
xchg
mov
sbb
outs
jle
adc
pusha
out
xchg
loopne
jb
push
cmps
shl
sbb
dec
jno
int
add
adc
cld
xchg
je
sahf
inc
rcl
js
iret
inc
xchg
pop
call
inc
mov
push
xchg
mov
fbstp
cmps
mov
ins
out
mov
dec
fadd
std
jnp
push
ins
cmp
mov
lea
cmp
fdiv
sbb
or
mov
push
pop
push
add
sub
idiv
add
out
jp
data16
dec
je
test
das
sub
push
hlt
test
add
mov
outs
int
movs
sbb
jne
bound
inc
xor
or
push
js
hlt
imul
pop
ret
pusha
dec
mov
inc
lock
test
outs
jmp
jne
in
push
jne
xor
adc
cwde
jae
arpl
jge
inc
dec
fwait
aaa
out
add
add
mov
dec
mov
push
gs
and
jge
shr
ins
into
jbe
ja
lds
ret
adc
int
jmp
hlt
add
mov
mov
hlt
(bad)
xchg
imul
fiadd
into
ins
mov
and
(bad)
in
cmp
or
fnstenv
ins
push
fadd
mov
fdiv
ficom
cmp
sbb
(bad)
enter
into
pop
cmp
push
(bad)
pop
pop
(bad)
pop
jns
hlt
or
adc
mov
jne
xchg
mov
div
xor
push
push
mov
and
loop
mov
xchg
(bad)
cmp
gs
mov
mov
xchg
int3
cmp
and
push
pop
xor
xor
mov
out
jle
aas
jge
ds
add
pop
les
cmp
sar
ret
fidivr
xor
inc
or
xchg
test
mov
(bad)
fnsave
jnp
(bad)
lock
adc
jecxz
mov
data16
xor
add
adc
push
movs
shr
sub
inc
sub
lahf
mov
inc
ret
push
out
int3
out
mov
nop
adc
dec
out
inc
mov
mov
mov
pop
(bad)
mov
inc
movs
xchg
xor
imul
shl
jle
push
inc
aaa
push
cli
aaa
shl
inc
hlt
push
(bad)
aad
xchg
or
ficom
push
pop
int
aad
(bad)
retf
inc
push
lock
pop
imul
xchg
lds
mov
adc
out
pop
inc
js
ja
fiadd
pop
cmp
xchg
and
sbb
or
test
sbb
popa
pop
adc
xor
push
sub
mov
mov
(bad)
jae
sub
shl
pop
mov
inc
outs
push
daa
xchg
aas
cmps
shr
xchg
push
push
es
or
ja
mov
pop
imul
pop
daa
ret
in
inc
mov
mov
inc
scas
repnz
test
jecxz
jnp
rcr
scas
iret
add
leave
push
div
push
std
mov
cmp
push
xlat
retf
mov
inc
sti
cwde
jmp
div
sbb
push
int3
neg
mov
mov
popf
push
xchg
inc
mov
xchg
outs
sub
push
inc
and
xor
aas
xor
xor
push
sbb
ja
xchg
in
fidiv
movs
dec
xchg
mov
add
ins
stos
fild
int3
dec
iret
movs
inc
xchg
sbb
in
push
jp
xchg
xchg
shl
out
test
xchg
inc
shl
mov
sbb
fnstsw
adc
cmps
sub
ins
or
fidivr
sub
aaa
cld
ja
mov
mov
mov
setge
fild
leave
mov
fs
aam
pop
fldcw
inc
sbb
lds
neg
push
push
pop
jl
dec
movs
xlat
arpl
pop
cmps
inc
adc
(bad)
pop
jbe
inc
xchg
in
mov
mov
adc
cs
lea
fs
xchg
leave
aad
xor
mov
xchg
jns
xor
in
nop
das
xchg
addr16
sahf
xchg
mov
push
push
push
test
cmps
xchg
xor
cli
movs
xor
inc
lds
pop
pop
fimul
scas
jp
ins
in
adc
cmp
add
jecxz
(bad)
and
test
enter
imul
push
push
add
out
in
push
cmc
pop
std
movs
add
add
movs
mov
bound
hlt
mov
inc
inc
aaa
adc
aaa
cmps
jbe
and
push
fs
out
jle
les
or
(bad)
test
sub
lock
pop
je
cmps
inc
sahf
hlt
iret
or
cmps
xchg
sub
cmps
push
xchg
and
pop
movs
jns
lds
xchg
mov
nop
xor
ret
xor
cli
push
mov
aad
(bad)
iret
mov
xchg
cwde
xlat
xchg
push
(bad)
xlat
push
lds
adc
push
jne
data16
popf
lds
aad
sti
arpl
xor
adc
cmps
mov
jno
add
xor
std
stos
shr
dec
cmps
inc
ja
pushf
or
xchg
cs
fs
add
jo
gs
ss
and
jg
xor
popf
xchg
stos
cmp
xchg
mov
xchg
dec
mov
cwde
or
and
pop
dec
imul
cmps
fld
in
xor
inc
into
dec
call
push
fiadd
out
mov
xchg
stos
push
xchg
movs
inc
sbb
push
inc
out
mov
sub
and
les
ja
daa
test
and
adc
cld
in
cmc
cmps
aas
jb
mov
xchg
push
cdq
stos
cmp
aaa
ds
into
xlat
imul
mov
idiv
push
es
sub
fst
test
adc
stc
jb
and
outs
mov
mov
cmps
pop
addr16
mov
add
mov
jne
mov
in
ds
push
push
ins
jle
mov
mov
mov
and
aaa
out
fst
imul
cmc
ins
dec
(bad)
xor
push
mov
pop
and
jne
xchg
and
rcl
aad
jbe
pop
clc
imul
inc
dec
(bad)
das
or
fs
dec
cmp
shl
into
inc
add
mov
je
in
mov
pop
test
int
xchg
lods
fst
(bad)
push
lods
daa
ja
out
aad
inc
cmps
mov
add
stos
inc
jecxz
xchg
into
in
mov
iret
cmp
jno
daa
in
xlat
inc
cmps
(bad)
or
movs
ror
and
call
cmps
jecxz
xor
scas
out
cmc
shl
xchg
shl
push
sbb
div
xchg
ins
out
mov
inc
in
mov
sbb
cmp
popa
adc
jo
mov
gs
in
imul
fisttp
sub
movs
jmp
mov
mov
adc
and
xchg
dec
mov
mov
sbb
scas
mov
jmp
stos
outs
movs
dec
gs
inc
aad
sbb
and
add
mov
scas
cmp
xchg
cmp
retf
imul
jecxz
mov
out
(bad)
stc
mov
dec
ja
loope
xchg
retf
scas
pushf
add
xchg
or
in
aaa
mov
push
sar
cld
(bad)
jne
jnp
xor
ins
xchg
fcomp
pop
jne
inc
or
adc
mov
daa
repz
mov
push
inc
push
data16
mov
pop
lods
xor
mov
aam
gs
jle
(bad)
lods
mov
lea
test
loope
push
hlt
hlt
out
dec
jmp
mov
and
ins
retf
ja
jmp
stc
xchg
jge
xchg
out
leave
sbb
in
mov
mov
inc
hlt
es
pop
and
mov
ds
xchg
mov
push
xchg
test
out
retf
mov
pop
frstor
das
mov
mov
daa
add
sbb
inc
imul
jb
lods
fwait
cmps
stos
imul
add
sub
lahf
out
aaa
jmp
and
inc
cmps
and
xor
aam
mov
xchg
fwait
imul
into
or
jno
les
or
addr16
in
sbb
mov
inc
mov
rcr
xchg
sub
mov
mov
push
jne
imul
push
and
xchg
pop
inc
adc
jne
dec
test
xor
ins
add
push
out
cmp
pushf
cmc
inc
push
mov
xchg
arpl
ja
popa
(bad)
arpl
sub
inc
frstor
icebp
xchg
add
inc
ror
pop
dec
push
rcl
mov
movs
add
in
out
cmps
int
or
retf
cwde
(bad)
push
pop
sbb
(bad)
and
jb
inc
pop
push
(bad)
scas
test
(bad)
shl
xor
rol
jmp
ins
es
test
xchg
and
rcl
dec
pop
(bad)
outs
imul
push
pmaxsw
fst
mov
add
ret
push
in
and
and
in
push
pop
inc
inc
not
mov
mov
fsub
icebp
loopne
push
scas
lods
cmp
sub
in
mov
mov
in
cmp
mov
into
ins
cmc
jbe
pop
lock
inc
xchg
sub
jmp
jae
rcl
ss
add
push
repnz
cmp
dec
in
test
(bad)
aaa
out
lahf
jae
sub
cwde
cmc
sar
mov
shr
nop
daa
mov
ret
pop
xor
out
dec
sbb
mov
in
gs
push
adc
fist
frstor
xchg
arpl
jg
mov
lahf
push
scas
push
xor
mov
out
pop
push
xchg
mov
hlt
sub
out
std
aaa
xchg
test
(bad)
lea
mov
aaa
shl
cmp
inc
enter
addr16
mov
mov
(bad)
push
(bad)
push
out
xchg
dec
repz
mov
adc
add
movs
cmp
or
lods
jnp
and
push
cmp
inc
xchg
push
sbb
loop
(bad)
jo
pushf
(bad)
pop
(bad)
adc
ds
repz
jg
ror
cld
shl
imul
enter
aad
fisub
and
sbb
xchg
jmp
pushf
jne
xchg
xchg
loope
(bad)
pushf
or
jbe
jae
jle
les
rol
inc
push
and
add
data16
xchg
xchg
ins
cmps
out
gs
fistp
mov
pop
mov
fild
inc
retfw
test
xchg
mov
pushf
adc
inc
(bad)
and
aam
hlt
add
pushf
xor
repz
inc
lods
mov
sbb
test
loopne
push
dec
sbb
push
cmps
ins
pusha
push
dec
sahf
mov
jmp
movs
push
mov
(bad)
(bad)
rol
popf
movs
push
and
push
pop
scas
gs
push
mov
adc
in
jg
retf
pop
xchg
aam
stos
jo
lods
sbb
icebp
inc
daa
cmp
xchg
mov
retf
push
mov
inc
loopne
sub
push
ss
adc
ins
ficomp
sub
xchg
lods
mov
mul
pushf
aam
push
stc
data16
addr16
mov
or
push
inc
dec
mov
jne
adc
je
push
leave
into
mov
daa
jg
pop
xchg
out
push
(bad)
pop
sbb
shl
cmps
(bad)
cs
out
mov
xchg
adc
pop
mov
adc
adc
(bad)
cmp
mov
aad
cmp
jae
mov
mov
daa
xchg
add
push
mov
mov
xor
retf
iret
test
add
adc
repnz
stc
shr
adc
mov
daa
adc
add
fwait
xchg
sar
cmp
rcl
test
inc
cmc
movs
cmp
popa
push
ins
inc
mov
cmp
push
mov
add
mov
int
or
out
inc
pusha
cli
mov
push
add
dec
jg
daa
gs
cmp
cwde
jg
and
lahf
aaa
pop
or
push
inc
mov
jo
dec
dec
mov
adc
xor
sub
test
neg
jbe
xchg
and
stc
push
test
(bad)
fild
(bad)
inc
inc
stos
iret
sbb
(bad)
test
dec
popf
inc
leave
mul
mov
jbe
pop
jo
mov
and
aad
sub
lods
mov
and
addr16
fiadd
mov
mov
pop
popf
mov
pop
lods
and
or
dec
mov
mov
dec
cmp
jmp
fldcw
dec
sub
js
inc
es
jecxz
push
dec
and
je
imul
jnp
enter
sahf
scas
add
add
inc
lahf
aaa
mov
daa
ins
or
mov
xchg
pop
seta
(bad)
out
inc
cmc
push
(bad)
mov
sbb
aas
lds
pop
add
sub
jnp
adc
in
lods
movs
in
ret
jne
mov
cmp
outs
dec
lods
je
sub
mov
add
repnz
add
cdq
pop
push
fstp
jno
fwait
cmp
mov
and
mov
or
cmps
in
jl
int
sbb
mov
and
mov
dec
mov
test
lock
(bad)
dec
xor
aad
cmp
retf
mov
and
rol
mov
int3
mov
push
fcomp
mov
and
test
scas
add
dec
lock
sbb
dec
ret
mov
getsec
or
add
mov
shr
and
pop
xchg
pop
adc
out
int
or
push
add
add
add
mov
xchg
cdq
mov
cmp
outs
enter
js
jno
cmp
xor
loope
push
adc
inc
xor
add
or
lea
cmp
jmp
mov
repz
pop
pop
ficomp
inc
xor
enter
xor
int
je
loopne
retf
xchg
mov
ja
aad
mov
int3
movs
mov
or
test
sti
mov
add
xor
dec
push
adc
iret
shl
inc
mov
pop
adc
iret
inc
xchg
inc
dec
push
pop
cmp
daa
jle
pop
mov
gs
and
fst
ret
inc
and
ss
call
std
out
test
mov
loop
(bad)
or
add
(bad)
fwait
mov
test
and
cmc
stos
in
jle
pop
xor
mov
cmp
test
jb
and
and
xchg
adc
sahf
dec
test
ficom
aam
and
sbb
dec
cmps
mov
imul
repnz
lock
xchg
lock
pop
add
jns
xor
pop
cdq
cld
popa
jne
jle
xor
sbb
iret
aam
addr16
xchg
test
jmp
jne
imul
sub
(bad)
cmps
ja
mov
add
xor
adc
mov
imul
adc
mov
and
lds
mov
and
xchg
cmp
xchg
push
push
mov
jne
not
inc
jl
aam
jle
sbb
push
sub
mov
xchg
and
daa
int3
inc
adc
retf
jmp
sbb
jmp
inc
mov
mov
in
mov
into
aaa
xlat
sub
mov
jnp
fiadd
(bad)
out
mov
jmp
mov
sub
pusha
ret
cmps
jle
test
dec
cmc
xor
and
xchg
inc
out
adc
xchg
ja
es
rol
rol
fst
pop
imul
push
push
mov
and
xor
cwde
dec
mov
mov
aas
adc
imul
add
cdq
fidiv
test
cmps
xor
mov
retf
and
push
cmps
xchg
mov
les
xchg
pop
out
es
xchg
es
out
loope
es
cmp
jns
push
retf
fdiv
int3
push
sbb
daa
aad
test
lds
out
test
jbe
mov
sub
stos
jae
test
push
push
test
adc
aam
sbb
xchg
(bad)
aas
xor
leave
mov
pop
adc
push
icebp
jnp
jmp
push
mov
loope
adc
sbb
sbb
mov
pushf
xor
add
and
mov
jge
pop
xlat
rol
push
dec
mov
in
pop
xchg
sbb
pop
mov
gs
xchg
pop
cmps
es
or
push
and
sbb
paddusb
scas
cdq
mov
and
fwait
clc
push
pcmpeqb
sti
and
jp
cmc
sub
cdq
push
sbb
ins
fsub
and
cmp
xchg
or
stos
scas
jp
push
add
xor
ss
gs
or
mov
add
mov
mov
adc
sti
les
test
cmp
cmp
or
stos
out
les
push
jmp
hlt
pop
dec
aas
dec
and
rol
in
iret
inc
fimul
shl
loopne
and
ret
adc
inc
arpl
mov
sbb
jle
js
addr16
jno
lods
addr16
call
and
pop
fimul
mov
aad
jecxz
aas
clc
xchg
ins
sub
xchg
test
hlt
out
pop
test
pop
shl
dec
add
movs
sbb
fadd
mov
stos
xchg
jnp
jle
add
outs
or
(bad)
rcl
cmc
scas
inc
popf
or
cli
push
mov
call
test
test
hlt
and
lods
mov
dec
fsub
repnz
cmps
push
pop
test
and
ins
mov
inc
add
xor
adc
std
test
push
push
adc
mov
xchg
mov
sbb
cmps
sbb
sbb
xchg
xchg
movs
inc
cli
mov
mov
push
pop
shrd
clc
and
lods
addr16
aaa
(bad)
les
popf
pop
sti
(bad)
div
dec
and
(bad)
out
call
sbb
mov
(bad)
sti
sti
ins
rcr
mov
imul
repz
fdiv
inc
in
shl
mov
into
push
int3
aad
sar
test
and
and
ss
adc
arpl
push
ds
mov
mov
mov
(bad)
push
cmps
dec
ss
sbb
ret
into
xlat
mov
icebp
movs
cmp
aad
call
xchg
cmps
jns
add
or
adc
jb
xor
test
lods
fild
jmp
js
in
and
sub
in
and
inc
cmps
jne
les
adc
mov
leave
add
fidivr
xchg
and
scas
sbb
movs
ins
mov
lahf
aas
mov
rol
js
mov
mov
cs
xchg
movs
enter
(bad)
sti
les
popf
xchg
jns
aad
scas
arpl
lahf
push
mov
dec
imul
clc
(bad)
mov
(bad)
movs
dec
mov
xchg
xor
xor
and
mov
jg
jge
jb
xor
fisttp
cmps
push
jmp
mov
imul
and
vprotw
jo
xchg
jg
jae
push
xor
add
dec
(bad)
rcl
push
push
jne
xor
inc
out
fdiv
cmps
ffreep
inc
aam
xor
add
cmc
div
repz
repz
jecxz
xchg
ficom
adc
inc
adc
inc
shl
aad
mov
jmp
es
das
arpl
add
push
fild
cs
inc
or
out
in
pop
repz
idiv
jmp
push
out
in
cdq
mov
and
call
les
cmp
xlat
mov
mov
sub
hlt
enter
outs
ret
sbb
js
and
(bad)
mov
cld
push
mov
sar
sbb
out
fs
cs
push
xor
add
idiv
pop
and
movs
gs
int3
outs
arpl
inc
mov
add
pusha
adc
adc
loop
test
inc
call
xchg
push
lods
and
cmps
mov
pop
mov
inc
(bad)
dec
add
in
xchg
daa
data16
inc
(bad)
(bad)
ins
shl
pop
mov
sub
movs
dec
jl
and
cmp
je
inc
lea
push
add
mov
addr16
adc
push
in
out
fidivr
aad
mov
mov
cmp
js
mov
xchg
stos
pushf
pop
dec
jb
sub
cmps
adc
xchg
mov
mov
outs
mov
add
gs
retf
xchg
das
ret
or
movs
xchg
and
jl
cmp
out
test
not
mov
lds
mov
inc
mov
push
cmp
cmc
js
pop
fwait
retf
loopne
sbb
xor
aas
lahf
sub
retf
xchg
adc
inc
lds
xchg
rcl
mov
jmp
mov
sub
mov
repnz
movs
outs
mov
div
dec
xor
push
inc
ret
cmc
cmp
addr16
scas
jl
(bad)
aaa
xlat
pusha
pop
cdq
cmp
shl
rcl
add
adc
push
clc
mov
push
and
rcl
jge
neg
xchg
test
cmps
ja
cmc
xchg
jae
imul
mov
lea
jns
pop
pop
int
dec
aam
iret
xchg
and
push
in
cmps
adc
push
fsubr
addr16
inc
xchg
jo
mov
pop
adc
sub
pop
or
add
adc
push
call
xor
aaa
mov
mov
xchg
xor
daa
push
mov
xchg
xor
movs
test
and
aad
jno
mov
addr16
loopne
hlt
cmp
pop
mov
jge
test
mov
pop
mov
jbe
stos
ins
mov
mov
repnz
sub
inc
dec
add
test
and
std
stos
repz
test
in
inc
test
jns
pop
push
mov
add
dec
xor
and
mov
xchg
and
cmp
sub
div
mov
ret
mov
stos
jle
mov
ss
sub
push
dec
adc
leave
mov
test
fs
xchg
push
xchg
jnp
daa
or
scas
outs
aam
cmp
mov
push
ror
cmps
outs
jg
fs
or
inc
jmp
into
xchg
adc
std
daa
std
xchg
jmp
repz
xchg
mov
inc
or
dec
outs
push
outs
push
push
push
mov
inc
cmps
push
push
xchg
mov
or
dec
mov
sbb
xlat
jbe
mov
test
fidiv
pop
fwait
call
and
pop
mov
add
and
stos
es
xchg
inc
push
inc
daa
xadd
les
jbe
xor
mul
adc
push
mov
das
adc
xor
outs
movs
push
jmp
mov
(bad)
cld
repnz
mov
mov
adc
push
enter
icebp
lahf
xlat
cmps
lods
stos
push
push
aam
leave
mov
add
fsub
cmp
adc
(bad)
cmps
mov
xchg
cld
dec
push
push
ja
stc
popf
push
adc
xchg
lds
sbb
data16
cmp
xchg
and
and
pop
pop
test
movs
xchg
sub
mov
out
and
(bad)
daa
jl
imul
push
mov
xlat
lds
push
and
push
out
lahf
ins
push
je
dec
push
and
sub
xchg
and
test
sahf
pop
push
mov
and
cmc
mov
sbb
mov
pushf
cwde
jle
mov
xor
stc
add
repz
loopne
mov
fidiv
and
xchg
mov
call
pop
xchg
test
inc
fld
and
xor
stc
aam
std
scas
xchg
es
aad
dec
out
xor
mov
aad
fldenv
jns
shr
pop
fs
pusha
std
ja
nop
lods
adc
fild
cmps
test
or
mov
xor
adc
shl
add
pop
aam
xor
pop
sub
out
fistp
scas
pop
cmp
pop
xchg
sub
repnz
adc
movs
cmp
push
call
cs
adc
jo
jae
fwait
daa
mov
mov
add
int
gs
adc
dec
shr
(bad)
mov
adc
mov
retf
gs
test
cmp
mul
test
lds
push
sub
push
sbb
sub
or
add
xor
imul
cmps
ja
adc
adc
rol
fsubr
fs
pusha
or
mov
mov
adc
pop
cmc
inc
(bad)
pop
scas
rcl
cmps
dec
jbe
jnp
push
ja
(bad)
fnstenv
jp
push
sub
or
lods
ja
pop
pop
push
rcl
inc
mov
adc
dec
cs
sub
into
push
cmps
ins
sub
lds
aad
xor
adc
and
in
out
xchg
mov
add
add
lds
in
adc
xor
stos
mov
imul
mov
mov
pushf
mov
add
test
push
xor
xor
in
je
mov
mov
mov
mov
xlat
aam
shr
sti
je
lods
mov
data16
les
out
loopne
out
jecxz
add
(bad)
les
dec
dec
jo
cmps
(bad)
in
xor
mov
popf
loopne
or
je
xchg
inc
loope
xchg
dec
or
pop
jae
jb
(bad)
aad
pop
xchg
div
jno
lods
cwde
fisubr
jbe
lea
inc
mov
scas
in
add
enter
and
sbb
repz
lods
shl
test
xor
outs
out
rol
mov
jo
cmp
getsec
dec
or
out
inc
and
adc
mov
es
add
(bad)
lock
dec
mov
jle
jmp
les
sub
adc
icebp
inc
sbb
adc
imul
jl
idiv
dec
sbb
out
mov
dec
inc
fstp
dec
iret
inc
out
ss
out
mov
lds
mov
sar
pop
and
ret
pop
pop
mulps
mov
jbe
(bad)
cli
std
out
mov
mov
loopne
pop
cs
repnz
jne
mov
inc
cdq
push
sbb
std
hlt
mov
ror
shl
add
scas
xor
ror
jl
leave
dec
mov
cmps
shl
mov
jp
test
mov
sbb
ja
xchg
(bad)
mov
or
nop
fnstenv
es
mov
frstor
cmp
in
sbb
mov
xchg
dec
jno
popa
jle
jb
jnp
pop
and
pop
jbe
and
inc
repz
mov
cdq
pop
leave
jecxz
int3
and
add
xchg
in
inc
adc
out
imul
ret
iret
test
addr16
push
rol
enter
shl
in
arpl
ror
push
test
stos
(bad)
ds
mov
loop
push
pop
pop
popa
out
ss
loope
daa
jmp
(bad)
xlat
arpl
jne
xlat
inc
arpl
pop
sub
push
xchg
xor
inc
xchg
add
pusha
add
mov
out
movs
dec
dec
mov
xor
add
xchg
cmps
inc
or
pop
and
mov
or
(bad)
push
jl
xor
int
xchg
sbb
fdiv
fyl2x
adc
mov
xchg
sub
dec
mov
lock
retf
sub
pop
in
(bad)
xchg
add
std
repz
and
and
jp
stos
out
push
xchg
inc
mov
mov
stos
movs
addr16
and
cmps
and
add
adc
fld
or
inc
ja
inc
or
cmp
jb
and
xchg
inc
aad
xchg
adc
pop
je
xchg
mov
jbe
aad
pusha
mov
shl
pop
test
inc
pusha
ja
icebp
in
xchg
inc
daa
mov
xlat
xor
push
adc
shr
fs
iret
test
jge
mov
cmp
or
jl
xor
rcl
and
add
rcl
mov
outs
imul
inc
xchg
movs
xchg
push
pop
fsubr
adc
xchg
(bad)
mov
inc
or
test
xlat
jmp
jge
mov
xor
imul
adc
jo
hlt
loope
hlt
hlt
sbb
in
out
push
push
adc
jae
loop
rcl
pop
xchg
loope
je
add
loopne
sbb
gs
jno
cld
sub
jmp
les
cs
jbe
jle
jecxz
xlat
stos
pop
xchg
push
add
jmp
xchg
xchg
xchg
dec
rol
out
mov
push
scas
push
push
mov
cmp
fcom
in
hlt
dec
les
aaa
mov
outs
mov
je
xchg
sti
addr16
and
call
fidivr
xchg
pop
daa
(bad)
and
mov
pop
xor
mov
jae
jae
lods
jbe
jmp
jl
clc
cmp
div
iret
popf
in
loope
pushf
int
aad
sbb
aad
mov
xor
push
xor
mov
push
jns
jb
lahf
cmps
retf
pmaddwd
arpl
test
out
(bad)
dec
sar
xlat
in
lds
mov
mov
add
mov
pop
xchg
jno
xor
jle
dec
pop
imul
xchg
cs
les
push
mov
enter
jae
adc
push
adc
out
sti
jns
dec
shr
xchg
push
inc
and
inc
jno
push
clc
push
clc
add
int3
in
ret
outs
cmp
push
pusha
jmp
clc
adc
jb
mov
xor
jp
pop
sub
out
jg
xchg
gs
dec
sub
or
cmp
adc
rcr
aaa
jmp
push
arpl
push
out
jne
fwait
push
xchg
pop
inc
test
ret
clc
sbb
mov
adc
cdq
out
inc
arpl
ret
les
xor
std
(bad)
mov
popa
bswap
test
inc
add
xor
retf
push
sbb
add
adc
dec
imul
adc
and
sub
daa
sti
fistp
test
jb
rcl
and
mov
(bad)
push
push
inc
xor
pop
adc
mov
mov
pushf
inc
push
shl
movs
xor
mov
icebp
inc
daa
inc
test
cdq
test
inc
loop
hlt
xchg
hlt
dec
ret
push
(bad)
and
jne
adc
sub
lods
je
mov
sahf
xchg
cmp
les
call
je
(bad)
scas
out
das
gs
and
sbb
pop
mov
xchg
sbb
xlat
sub
mov
lds
or
mov
and
add
movs
xchg
mov
sbb
add
daa
or
xor
ins
jnp
fmul
pmullw
add
aad
dec
inc
inc
(bad)
cmc
ss
pushf
and
sbb
push
add
mov
shld
movs
data16
loop
test
lods
push
(bad)
jecxz
bound
out
pop
xchg
xlat
push
out
pop
pop
push
cwde
popa
adc
xlat
inc
or
mov
pop
daa
and
or
dec
ja
enter
or
sub
and
scas
(bad)
ins
mov
jge
(bad)
pop
adc
push
xchg
nop
xor
sub
les
xor
adc
ss
movs
add
popf
xor
sub
(bad)
(bad)
les
inc
(bad)
fadd
dec
out
lods
xor
in
test
lods
and
push
(bad)
xlat
int3
dec
sbb
movs
pop
jo
pop
(bad)
and
loop
call
(bad)
not
xchg
int
sti
fs
hlt
jne
xchg
arpl
repnz
ss
add
push
lods
xchg
mov
add
adc
mov
das
int
retf
push
cmp
push
pop
ins
sbb
dec
loope
add
sbb
cdq
mov
cmp
xor
inc
aas
lods
movs
mov
jmp
push
pop
pushf
xor
xchg
jo
nop
cmps
add
outs
ins
cld
mov
mov
aaa
sbb
pop
retf
idiv
lds
fld
sahf
rcl
in
xchg
je
push
xchg
xor
and
movs
dec
(bad)
in
adc
ret
rcl
popa
in
cwde
pop
hlt
mov
xchg
(bad)
daa
movs
cmps
dec
movs
jns
and
pushf
into
xor
dec
fisubr
xor
sbb
repz
fstp
adc
loope
cmps
into
add
sbb
lods
pusha
icebp
cs
icebp
pop
ret
xor
das
push
and
jno
fdivr
fs
outs
int
loope
or
add
ins
adc
adc
mov
push
inc
push
in
cmc
lds
push
mov
cmp
inc
push
je
sub
movs
xchg
cmp
addr16
add
pop
pop
cmc
push
inc
retf
push
push
jg
je
mov
pop
push
xor
mov
mov
popa
popa
and
mov
pop
shl
mov
inc
and
movs
rol
jge
inc
mov
hlt
outs
push
cmc
aam
jmp
popa
lods
aas
popa
cmp
jno
xor
mov
pop
dec
pop
mov
pop
pop
inc
push
out
shl
mov
pop
test
jnp
jae
or
popa
xchg
and
inc
mov
in
movs
in
and
repz
adc
clc
scas
dec
in
xor
movs
xor
cld
inc
push
fiadd
(bad)
and
ficomp
push
adc
ins
std
jge
outs
pmaddwd
mov
in
push
test
or
inc
movs
es
inc
push
sub
jno
mov
(bad)
fwait
fs
(bad)
mov
aas
scas
cmps
mov
xor
(bad)
popf
sbb
push
push
xor
imul
cmp
fild
out
push
pop
scas
mov
cwde
stc
add
pop
arpl
adc
push
jecxz
pop
fs
ds
cmc
retf
xor
movs
mov
retf
out
mov
push
adc
inc
mov
xchg
ds
adc
mov
(bad)
jae
and
imul
jne
outs
dec
enter
mov
jmp
inc
rol
add
push
jnp
inc
es
sub
jae
sbb
pop
mov
test
mov
xlat
add
mov
mov
add
ds
xchg
pop
inc
or
adc
add
mov
stos
(bad)
aam
scas
in
xchg
nop
ja
jno
fiadd
aam
jecxz
mov
movs
imul
cwde
call
jle
int3
(bad)
mov
pop
pop
sub
pop
jnp
icebp
xchg
jno
xor
adc
xchg
adc
xchg
mov
call
cmps
(bad)
xchg
jmp
je
pop
daa
xchg
pop
lea
or
inc
mov
or
mov
mov
push
mov
std
aam
imul
mov
mov
pop
push
(bad)
not
sub
add
xchg
xlat
aaa
push
xchg
push
test
add
dec
loope
enter
movs
push
shl
aaa
xchg
adc
stos
add
mov
maskmovq
sub
mov
push
sub
pop
icebp
adc
stos
mov
sbb
or
jnp
cli
or
(bad)
add
lea
jmp
ss
mov
leave
test
(bad)
and
stos
push
cvtdq2ps
(bad)
fs
outs
rep
in
adc
aas
movs
daa
jmp
pop
test
loopne
mov
inc
xchg
sti
adc
mov
ss
aas
ins
jge
xchg
and
daa
int
xchg
xor
aas
arpl
mov
and
rcl
leave
imul
popf
ds
loope
daa
retf
shl
mov
xchg
test
popf
(bad)
pop
test
mov
pushf
push
mov
loope
pushf
pop
cs
out
add
movs
or
sbb
cmc
inc
adc
push
lds
cdq
out
daa
jne
push
xchg
stos
mov
adc
or
xchg
ror
add
add
out
pop
js
je
and
fistp
xor
jne
pop
sub
ret
push
aad
inc
jne
scas
xchg
cmps
rcl
daa
cmps
aaa
pop
inc
mov
psubsw
rcl
mov
bound
movs
cmp
pop
jbe
hlt
dec
rcr
xor
nop
and
in
sti
jmp
das
adc
and
xor
cmps
ret
outs
scas
adc
inc
stos
rcr
mov
inc
pusha
mov
pop
sbb
loop
std
cmp
and
loope
xor
popa
inc
push
dec
icebp
iret
inc
test
xchg
popfw
push
ret
cmp
lods
cmp
add
mov
mov
pop
push
outs
add
fincstp
test
aad
or
in
xchg
jl
fcomp
fbld
enter
loope
add
pop
sbb
cmps
mov
lods
mov
ins
mov
jecxz
in
pop
push
or
adc
or
aas
cmp
dec
repnz
mov
in
add
inc
xor
mov
retf
adc
add
shl
xchg
add
pop
adc
test
ror
mov
rcl
jns
mov
(bad)
test
es
arpl
xlat
or
sub
retf
movs
xchg
and
inc
fild
shr
and
movs
mov
mov
pop
out
sar
popa
test
adc
fs
ror
retf
jbe
cld
xor
stos
outs
ja
popf
not
mov
out
(bad)
lahf
movs
or
out
out
int3
stos
push
mov
(bad)
jb
xor
(bad)
pop
add
jo
xchg
xchg
sbb
lods
cs
xlat
shr
std
xchg
ss
mov
repz
pop
rcl
add
pop
adc
test
not
dec
mov
adc
out
sti
mov
mov
ja
(bad)
mov
popa
mov
test
or
mov
idiv
hlt
xor
jnp
mov
inc
dec
and
aaa
jae
push
addr16
mov
lds
cli
retf
ins
stos
shl
rcl
sbb
(bad)
movs
cbw
pop
add
or
mov
test
xchg
inc
icebp
ins
mul
mov
js
dec
inc
bound
aam
inc
add
mov
(bad)
sbb
cmps
mov
ins
mov
mov
addr16
rol
std
jl
repnz
mov
cmc
mov
jle
fwait
adc
mov
out
fst
lahf
mov
mov
sub
xchg
pop
popf
(bad)
mov
xlat
and
(bad)
dec
call
shl
je
mov
xlat
adc
mov
mov
or
inc
(bad)
jmp
loope
cdq
int
jo
jnp
and
and
out
adc
loopne
xchg
aad
popf
test
aam
push
dec
sbb
pop
jmp
test
sar
jb
fnstsw
loope
stos
stos
adc
test
leave
mov
sar
inc
fcom
push
adc
mov
ins
(bad)
in
or
daa
sub
pusha
movs
(bad)
mov
daa
leave
test
adc
push
in
pop
push
xor
and
adc
mov
push
sbb
push
xchg
jge
jns
int3
cli
or
ret
mov
jecxz
fsub
ds
repz
xchg
ror
into
pushf
jmp
pop
cld
ins
sbb
push
adc
jnp
movs
dec
ret
idiv
in
xchg
sbb
not
imul
cmc
mov
out
cld
pop
cmps
sbb
out
jns
addr16
xchg
es
jl
jae
xchg
and
sub
xor
cmp
loope
(bad)
repz
push
fstp
jns
cdq
mov
inc
and
out
loop
adc
sub
rcr
jge
aaa
aam
mov
dec
scas
dec
cmps
and
jae
lock
xchg
mov
bound
mov
pop
div
pusha
xchg
test
xor
sbb
cmps
pop
push
jae
mov
clc
mov
xor
xchg
jge
ss
cmps
dec
ret
jno
push
dec
repz
mov
aaa
mov
and
jbe
scas
rsqrtps
pop
mov
js
pop
xchg
sar
sub
jmp
mov
mov
mov
cmps
sub
mov
pop
daa
jne
adc
cmp
adc
es
mov
ret
add
pop
js
cmps
jecxz
cmp
outs
stc
mov
aad
jge
jnp
xor
adc
(bad)
call
push
mov
hlt
movs
call
mov
dec
addr16
xor
(bad)
jnp
push
dec
inc
xor
inc
or
(bad)
loope
sar
pop
cwde
dec
fucomp
dec
das
push
not
fldcw
push
push
daa
jl
mov
enter
(bad)
std
repz
bt
test
fistp
jb
rol
les
or
push
bound
jo
ss
mov
int
mov
popf
inc
mov
mul
push
sub
jmp
xlat
cmc
rep
out
xor
push
xor
jnp
xchg
ins
push
push
and
mov
mov
ins
movs
das
(bad)
xchg
fisubr
sub
xor
daa
aam
sbb
sti
jns
lea
fwait
add
xchg
(bad)
dec
call
and
movs
mov
add
jg
mov
push
cs
stos
xchg
and
(bad)
push
inc
je
repnz
pop
push
leave
add
push
xlat
xchg
xchg
and
std
test
not
in
jo
(bad)
shl
scas
in
mov
or
and
push
loopne
xchg
mov
push
jmp
mov
popf
pop
mov
cli
cdq
enter
xor
cmovle
sub
cmp
ffree
std
mov
jb
arpl
cmp
dec
loop
push
in
addr16
jbe
inc
scas
enter
inc
cmp
aad
push
and
xor
jmp
mov
addr16
ret
cwde
sbb
(bad)
dec
jae
push
(bad)
xlat
cmps
xor
pop
jne
rol
sbb
pop
mov
cld
fidiv
xlat
aas
mov
movs
pusha
xor
(bad)
push
jne
push
test
mov
sbb
out
imul
jno
daa
and
test
adc
jmp
mov
mov
pop
imul
ja
ins
sbb
in
hlt
mov
jo
cmp
hlt
mov
xor
in
mov
push
pop
inc
out
push
div
adc
movs
ja
inc
add
mov
aam
xchg
jo
and
cmc
xchg
das
sub
popa
cmp
push
xchg
test
adc
push
std
xchg
add
mov
jmp
xchg
aam
and
push
jl
int
imul
ins
test
xchg
sti
dec
xor
adc
push
adc
fistp
(bad)
xchg
and
test
inc
inc
out
mov
add
xlat
(bad)
sbb
ret
jns
scas
push
xor
jae
out
jge
push
lods
sbb
inc
pop
loop
sub
cld
jne
mov
das
inc
jmp
adc
pop
inc
push
dec
aas
cmc
dec
inc
shl
jno
mov
test
aad
daa
dec
xchg
mov
cdq
xchg
push
jmp
cld
fs
xchg
leave
sbb
loope
or
fbld
daa
lock
inc
mov
xor
add
icebp
push
mov
and
imul
test
sub
push
cmc
inc
inc
daa
sbb
push
lods
jbe
je
out
push
or
or
pop
ret
and
push
and
ss
and
dec
xchg
jbe
mov
xchg
dec
(bad)
xor
movs
pusha
mov
call
jns
adc
in
ret
and
jns
jno
lds
jmp
lea
xor
loope
shr
retf
jo
push
daa
adc
test
xchg
test
ins
xor
mov
movs
aad
std
lock
and
adc
mov
or
jge
pop
mov
div
dec
add
dec
mov
mov
mov
xor
call
aad
cmps
das
test
inc
dec
xor
int
push
loopne
icebp
add
inc
xor
(bad)
fwait
inc
(bad)
ins
xchg
std
fldcw
add
xchg
aad
aad
xchg
dec
aas
(bad)
daa
test
xchg
ret
jge
je
jp
jne
jne
xor
add
push
push
cmps
or
js
xchg
lahf
ins
leave
popa
aad
leave
mov
dec
mov
fwait
jmp
xlat
mov
gs
mov
jae
cmp
addr16
push
push
ror
adc
in
cmp
outs
mov
push
call
ss
enter
and
mov
stc
pop
jecxz
xor
pop
cmp
add
pop
mov
(bad)
and
or
das
lea
lds
and
or
test
daa
(bad)
daa
iret
push
xlat
clc
sub
call
shl
test
mov
mov
mov
xor
mov
xchg
and
fild
push
and
mov
popf
mov
lods
es
iret
or
jmp
pop
and
gs
ja
and
je
sbb
push
jg
out
push
lahf
or
jge
dec
push
outs
adc
mov
push
(bad)
fist
jne
xlat
mov
adc
ins
sbb
jne
jg
xchg
nop
imul
in
fsubr
inc
jbe
add
xchg
mov
sub
shl
push
out
dec
stc
(bad)
mov
std
push
push
sbb
or
push
test
xlat
add
inc
dec
aad
dec
enter
sub
push
sub
xor
les
mov
sbb
add
cmp
gs
lds
pusha
lods
daa
adc
aam
adc
js
es
mov
mov
inc
adc
ins
adc
mov
sbb
xchg
shl
or
ret
mov
adc
fldenv
xor
dec
or
cmp
adc
jne
aad
fsubrp
cmp
frstpm(287
jbe
pop
add
mov
imul
push
cmp
inc
loope
(bad)
mov
mov
mov
cmc
je
test
pop
sbb
push
push
lea
test
jp
mov
dec
jno
cmps
std
enter
cmp
add
and
adc
jmp
sbb
lds
or
(bad)
stc
aas
repz
xchg
adc
sub
mov
mov
imul
outs
lahf
cwde
data16
test
scas
adc
add
je
push
(bad)
pop
add
rol
mov
je
data16
pop
or
sti
cmps
mov
pop
xor
test
push
jne
es
inc
inc
in
jne
cmp
pop
inc
lods
push
xor
adc
sub
jg
hlt
push
cmc
cmp
sub
cmp
in
xchg
ret
addr16
xor
fdivp
das
mov
shr
mov
xchg
aaa
push
stc
add
inc
out
xchg
push
ret
ins
(bad)
mov
test
xchg
jns
aam
(bad)
nop
mov
xchg
test
and
not
mov
adc
in
xor
sar
mov
(bad)
repz
fcom
fs
sbb
mov
jb
dec
mov
adc
in
lds
int
xchg
pusha
or
jecxz
ret
jmp
fcom
pop
xchg
aam
pop
cmps
push
loopne
or
xchg
xlat
cmps
cmp
cmp
inc
retf
add
out
jecxz
iret
jae
lahf
or
xchg
rcr
adc
or
push
sbb
mov
hlt
inc
xor
icebp
sbb
adc
data16
xchg
jmp
xchg
not
cwde
mov
aaa
outs
jns
push
out
lds
dec
jp
in
push
or
div
ins
push
xor
cmc
jg
ins
cmps
pop
jmp
cmp
add
cmps
adc
xchg
xchg
xchg
push
mov
aaa
push
in
and
sub
sbb
adc
dec
sub
jns
aad
les
ret
lahf
mov
adc
outs
fs
adc
ja
adc
cmp
loop
cwde
data16
push
pusha
push
mov
les
nop
inc
jb
(bad)
cmps
lods
shl
dec
outs
test
(bad)
les
or
dec
cmp
imul
mov
mov
inc
call
xchg
js
push
jns
sub
sub
mov
and
aam
cmc
xlat
cmp
cmp
jge
push
pop
jbe
xchg
(bad)
iret
sub
dec
aam
jge
mov
lods
cmps
and
mov
inc
shr
inc
out
and
inc
sahf
cmc
repz
mov
and
fisub
clc
dec
call
je
retf
add
mov
xchg
adc
jo
dec
ret
out
(bad)
mov
aas
frstor
pop
(bad)
fnsave
push
push
cdq
push
hlt
(bad)
out
push
mov
mov
sbb
dec
loope
ret
jne
push
popf
(bad)
push
imul
mov
dec
(bad)
mov
mov
push
and
xchg
adc
(bad)
push
mov
lea
adc
lea
gs
ins
push
xlat
(bad)
fsubr
inc
sbb
dec
fidiv
or
push
aaa
out
call
ret
int3
sub
xor
test
in
and
cli
int3
mov
je
jecxz
xor
(bad)
gs
pop
mov
cmp
and
movs
mov
jbe
inc
inc
mov
jmp
retf
mov
call
and
push
ja
xor
fs
aaa
jne
or
hlt
sbb
nop
mov
jmp
push
adc
or
push
ret
sub
pop
test
rol
sti
out
xor
xor
mov
inc
and
pop
xchg
out
adc
(bad)
jge
das
jmp
hlt
add
arpl
sbb
push
jae
in
ficom
and
out
cmp
inc
lds
adc
cmc
push
fsub
adc
cmc
not
aas
(bad)
cli
inc
lods
cmp
xor
pop
add
mov
arpl
out
out
cwde
sahf
icebp
jae
mov
jbe
and
mov
or
xor
add
jmp
mov
cli
sbb
xlat
jae
test
arpl
xor
(bad)
out
mov
mov
cmp
cmp
adc
cmps
mov
aas
or
(bad)
iret
jnp
mov
sub
push
sub
jne
(bad)
out
adc
(bad)
out
popa
hlt
fldenv
mov
movs
test
popf
pop
shl
xor
mov
lods
(bad)
out
out
adc
mov
pop
mov
mov
into
and
sub
loope
push
pop
mov
xor
xchg
xor
adc
test
cmp
adc
pop
xor
retfw
mov
fwait
les
out
mov
mov
dec
ins
fisubr
lahf
arpl
call
mov
es
aaa
cmp
in
test
shl
sub
(bad)
dec
adc
enter
cmp
shl
adc
das
fld
inc
(bad)
loopne
not
cmc
mov
jns
pop
jae
leave
aas
mov
push
ret
(bad)
and
push
jnp
gs
loop
push
test
push
xadd
jl
out
sar
pop
imul
add
imul
aaa
popf
gs
ret
push
sbb
jne
call
push
mov
mov
mov
xchg
js
and
xchg
cmp
in
xlat
mov
test
jge
(bad)
das
cdq
mov
repnz
and
push
jns
in
scas
imul
movs
xchg
xchg
or
inc
cmc
je
dec
push
xchg
dec
jmp
and
shl
mul
push
xchg
repnz
xchg
adc
cmp
sub
ins
dec
mov
test
adc
idiv
inc
mov
adc
xchg
add
mov
clc
sub
out
mov
repnz
inc
pop
les
fnstenv
test
mov
(bad)
mov
pusha
ret
cmp
mov
jne
add
inc
cld
adc
cmp
dec
fwait
movs
jbe
(bad)
pop
mov
mov
es
xchg
fisub
or
shl
lods
outs
int3
jns
add
jecxz
popa
lds
mov
add
movs
dec
jo
xchg
repnz
in
jne
and
retf
sbb
inc
jp
jo
jne
inc
sub
add
pusha
add
lahf
neg
fisttp
or
sbb
ins
out
(bad)
xor
push
idiv
jecxz
jge
inc
shr
(bad)
add
sahf
(bad)
(bad)
sbb
inc
dec
mov
push
dec
in
loope
push
les
inc
mov
movs
repz
jle
fst
rol
mov
fwait
sbb
inc
mov
in
push
mov
mov
jns
add
push
movs
sub
and
(bad)
xor
ret
xchg
mov
scas
mov
xchg
xchg
pop
mov
pop
(bad)
mov
push
adc
hlt
push
(bad)
mov
xor
cmp
or
lea
dec
jp
mov
stos
xchg
pop
ins
or
sti
add
push
shl
mov
sub
in
stos
xchg
push
rol
int
mov
adc
hlt
mov
aam
jb
or
scas
push
fnstenv
add
mov
ficomp
or
icebp
cmps
jge
inc
mov
into
mov
mov
xchg
sbb
ja
adc
mov
(bad)
cmc
leave
push
adc
cmp
xchg
xchg
aas
push
add
in
dec
mov
and
cmps
adc
push
stos
call
adc
mov
xor
xchg
push
push
push
in
fnstcw
inc
xchg
das
add
lods
repz
and
dec
test
adc
xchg
push
leave
in
cmp
and
in
xor
mov
pop
xchg
popf
les
shl
xchg
xchg
jg
mov
mov
out
int3
loop
inc
add
jmp
mov
retf
aaa
cmc
ret
add
sar
or
push
xlat
jne
cmp
imul
push
daa
or
mov
(bad)
iret
push
push
aaa
adc
jo
loop
xchg
and
add
hlt
xor
add
(bad)
push
test
add
lds
jne
test
add
in
xor
mov
sub
or
cmc
in
outs
aam
mov
aaa
add
addr16
sub
sti
pop
lahf
xchg
outs
xchg
ss
popf
out
xchg
xchg
push
mov
cmps
sub
fidivr
jns
lods
inc
push
movs
push
imul
or
sub
xor
sub
push
das
movs
mov
jb
and
lds
xor
fs
addr16
mov
(bad)
mov
shl
adc
cmps
imul
push
neg
or
out
out
push
fst
lahf
pop
jns
neg
movs
add
adc
mov
or
mov
mov
fnstsw
jmp
fwait
ret
gs
xchg
iret
(bad)
cs
add
adc
shl
test
inc
inc
push
call
mov
retf
xchg
rcl
test
mov
popa
ffreep
xor
mov
cmp
not
pop
lods
xor
(bad)
xchg
push
adc
sub
jp
jg
push
lahf
mov
dec
out
ins
icebp
sub
aaa
test
pop
shl
pop
mov
pop
xlat
push
push
into
daa
cmps
psllq
jb
pop
mov
mov
pop
int3
call
xor
cmc
inc
fistp
xor
(bad)
adc
jno
cmp
movs
lea
jmp
cmp
in
mov
pop
xor
mov
scas
mov
jl
or
xlat
retf
es
xchg
cmps
lea
stc
jo
test
jb
test
pusha
inc
fdiv
arpl
fcomp
pop
mov
xchg
fs
and
pop
mov
cwde
adc
retf
je
xchg
scas
icebp
xchg
sub
push
data16
(bad)
inc
ss
push
cmp
xlat
or
push
jnp
movs
daa
aaa
dec
add
xor
pop
push
test
mov
xchg
jno
and
xlat
adc
push
cmps
jae
cmc
push
(bad)
push
mov
adc
lock
push
inc
or
loope
or
mov
jl
retf
xchg
inc
push
push
lods
dec
and
push
sbb
dec
lds
sub
cli
mov
cmp
xor
fistp
pushf
ret
add
add
sbb
shl
movs
sub
imul
test
movs
loop
icebp
jae
aam
push
addr16
(bad)
xlat
(bad)
mov
ss
cli
mov
push
repz
movs
aas
shl
and
push
fcomp
adc
in
leave
and
mov
jecxz
call
add
gs
jb
xor
sub
mov
pop
mov
and
xchg
stos
sahf
mov
aad
dec
fst
dec
lds
retf
cmp
add
cmc
arpl
in
stos
xchg
mov
fwait
push
xor
cmp
and
test
aad
repnz
ins
jp
adc
inc
pop
add
mov
mov
(bad)
cmc
pop
mov
mov
dec
fcmovnbe
xor
loopne
jbe
shl
adc
mov
jmp
jge
xchg
enter
mov
test
xchg
sbb
mov
jbe
aad
mov
jne
inc
aam
fs
mov
and
hlt
inc
mov
inc
dec
stc
and
(bad)
xchg
ficom
fsubr
scas
xchg
mov
push
xor
popw
mov
inc
pop
xor
pop
(bad)
xchg
idiv
add
lock
or
adc
jb
jnp
bound
xor
cld
inc
inc
cmp
xchg
rol
fs
fstp
fnstsw
mov
loope
call
imul
out
xchg
xor
sub
aad
xor
or
addr16
mov
inc
and
mov
adc
out
sbb
cmpxchg
aas
lds
dec
mov
loope
mov
xlat
and
daa
push
jo
adc
cmps
push
push
or
addr16
add
stos
shl
jno
ja
xor
icebp
test
dec
lds
or
xor
or
inc
mov
and
cmp
pop
addr16
push
pop
pushf
xor
daa
bound
ja
mov
inc
jno
dec
in
mov
dec
(bad)
cs
xchg
bound
adc
lds
mov
aad
(bad)
fs
test
std
push
ins
pop
jecxz
sbb
aad
sub
push
push
ret
pop
das
hlt
jbe
adc
movs
sbb
pop
xchg
imul
xchg
or
add
pop
jbe
sub
movs
add
push
mov
retf
ffreep
lods
xchg
scas
jl
push
push
cmp
dec
mov
mov
dec
mov
out
lds
mov
mov
stc
xchg
adc
xlat
xchg
lods
(bad)
idiv
scas
mov
retf
pop
sub
ins
inc
loop
cmp
dec
mov
xchg
mov
repz
(bad)
retf
mov
mov
fbstp
mov
sti
test
movs
xor
add
cmc
test
mov
gs
inc
fs
fucom
lods
dec
repnz
leave
pop
cmps
inc
fstp
jecxz
retf
and
mov
ret
push
fwait
das
in
call
and
stc
imul
xlat
pop
push
lods
jo
push
mov
push
cmc
xor
loop
ficom
mov
es
dec
nop
push
int3
xor
push
push
shl
push
inc
ror
mov
movs
mov
popf
xlat
sub
in
push
cli
mov
test
out
dec
push
out
daa
test
mov
xchg
out
jne
pop
fcomi
push
xlat
movlps
push
mov
or
out
ror
stc
xchg
call
out
(bad)
fsubr
mov
pop
adc
ja
test
adc
and
pop
popf
inc
jmp
sahf
in
mov
ja
je
aaa
pop
cmp
fist
div
jp
daa
cmc
jne
sub
icebp
out
in
and
gs
cwde
ds
in
xor
aad
ror
test
bound
std
cmps
(bad)
fisttp
and
lea
mov
mov
cmc
sub
inc
and
test
add
stos
nop
dec
loop
pop
aas
in
fist
sbb
das
pop
fistp
dec
cmp
out
mov
mov
and
sbb
push
jmp
sbb
or
jmp
inc
lock
je
xchg
in
mov
xchg
lock
push
mov
xlat
dec
in
mov
inc
inc
rol
sub
pextrw
xor
jo
lock
vpaddq
xor
inc
in
loopne
xchg
xchg
xchg
xchg
(bad)
fs
push
movs
push
cmp
or
adc
imul
cmps
or
and
(bad)
sti
pop
mov
jecxz
jle
(bad)
out
movs
or
aas
nop
and
inc
movs
jne
popa
mov
xchg
pop
xlat
nop
mov
in
adc
push
add
in
pop
in
adc
in
aaa
stos
cmps
mov
enter
inc
cdq
imul
test
pop
jle
sbb
in
call
push
ret
mov
and
pop
mov
and
inc
mov
mov
(bad)
shl
inc
sti
fdivr
pop
gs
jo
xor
jae
xor
daa
(bad)
std
ja
shl
(bad)
xchg
aas
gs
sub
mov
movs
aaa
loop
and
xchg
mov
cwde
cmps
retf
aas
ret
mov
cmps
data16
mov
pop
xchg
cmp
mov
dec
push
retf
push
fwait
mov
dec
mov
data16
push
fistp
(bad)
fcmovnb
and
sbb
jg
movs
adc
add
sub
js
xchg
(bad)
mov
push
sub
fcomp
jg
jbe
ror
adc
xchg
ret
pop
retf
pop
inc
add
cmps
jb
mov
scas
test
je
pop
sti
cmps
in
adc
fisttp
xor
daa
cmp
cwde
cmp
push
movs
push
push
(bad)
call
mov
xchg
push
inc
add
xchg
mov
jae
cmp
les
cdq
sbb
arpl
cmp
ja
pop
and
cmps
in
js
mov
sub
ja
adc
shl
popa
inc
xor
bound
ja
push
mov
jge
jg
push
and
aas
mov
lds
xor
xor
aas
cmp
push
push
xchg
cmp
hlt
rol
mov
cmps
jo
stos
add
jl
test
sti
loope
lahf
xor
pop
ja
inc
fstp
add
ds
and
cmc
scas
xor
movs
cmc
movs
rcr
push
mov
adc
in
or
pop
test
cmp
dec
jp
js
xchg
fucomi
mov
sar
inc
xchg
std
mov
mov
and
test
jne
cs
mov
push
imul
add
jne
fnstenv
test
jl
popf
fbld
pop
xchg
pop
pusha
xor
or
mov
xchg
xchg
cmc
dec
loopne
aam
xor
cmps
jecxz
fucomi
adc
fidiv
cld
aaa
and
fwait
lds
ss
jne
and
sub
(bad)
jecxz
sub
cmp
das
and
dec
ins
sahf
xchg
and
inc
add
ss
loope
mov
test
jnp
cmps
add
inc
adc
das
sar
mov
cdq
xchg
pop
call
jge
dec
jmp
sar
jmp
push
fsub
pop
aam
fwait
xchg
add
mov
aam
pop
sub
clc
icebp
ds
push
out
rcr
pop
sahf
adc
xchg
xchg
push
xlat
aam
jecxz
xchg
lea
push
push
and
mov
xchg
mov
dec
mov
cli
xchg
std
jb
les
lahf
mov
adc
inc
loopne
jmp
sbb
(bad)
push
sbb
fs
inc
fst
mov
push
ficom
in
sbb
xchg
push
into
inc
xchg
shr
addr16
cmp
mov
mov
pop
stos
add
fstp
sub
arpl
xchg
repz
fcomi
movs
inc
add
pop
add
and
pop
adc
dec
add
add
sti
mov
pop
or
loop
jle
ret
fist
pop
pop
inc
rdpmc
popf
dec
xchg
mov
mov
jecxz
xchg
les
jp
call
out
imul
es
ja
cmp
mov
mov
or
lea
daa
mov
cli
and
hlt
xchg
xor
bound
ror
add
(bad)
in
stos
mov
sahf
push
fiadd
gs
pop
inc
push
aaa
rol
mov
push
movs
dec
aam
xrelease
in
xlat
dec
pop
ret
lods
ficomp
sub
or
mov
jns
jae
xor
into
fwait
xchg
lds
mov
sbb
xchg
lods
sahf
pop
fcom
out
mov
dec
xchg
cld
into
icebp
shl
fdiv
fdivr
ret
movs
addr16
mov
inc
push
imul
jmp
pop
not
xor
push
outs
pusha
adc
out
xchg
frstor
scas
mov
les
adc
int3
popa
jae
mov
pop
xor
jae
call
in
and
mov
dec
jmp
fwait
cld
and
cmps
imul
xchg
adc
mov
lds
jae
mov
out
inc
mov
icebp
mov
mov
fisubr
adc
add
jne
(bad)
push
xchg
push
addr16
loop
sub
(bad)
and
ficom
mov
arpl
fidivr
clc
push
jmp
(bad)
outs
mov
dec
test
adc
sub
(bad)
out
sbb
nop
mov
or
xor
pop
hlt
push
pushf
gs
and
imul
shl
and
cmps
shl
adc
ror
mov
mov
rcr
mov
mov
and
test
shl
xchg
sub
pop
adc
dec
repnz
ror
(bad)
add
cmp
(bad)
std
test
aam
das
ret
pop
stc
gs
pushf
xchg
lods
sbb
out
hlt
jbe
in
loope
xlat
add
adc
pusha
cld
xlat
jae
js
or
mov
jns
mov
push
xor
call
es
xchg
adc
aas
xchg
inc
push
and
fnsave
jne
out
lods
xchg
ret
mov
dec
imul
dec
lods
jmp
mov
leave
out
in
inc
dec
(bad)
in
and
jmp
mov
cmp
stc
inc
loope
xchg
je
xor
sbb
sbb
in
adc
mov
inc
jne
or
add
inc
out
dec
in
inc
daa
pop
xchg
dec
xor
dec
sbb
jo
in
xchg
inc
add
lods
jbe
cmc
add
push
repz
test
gs
fadd
out
mov
cwde
not
popf
lock
pop
push
(bad)
gs
mov
mov
arpl
dec
mov
and
sub
jmp
xchg
test
push
iret
pop
or
mov
pop
repnz
push
push
ins
jo
push
add
ret
(bad)
popa
hlt
adc
cld
cld
xchg
dec
std
push
inc
push
push
call
aad
pop
test
daa
mov
mov
jg
div
cli
or
movs
hlt
and
not
add
(bad)
shl
sar
movs
ss
cmp
xlat
out
repz
jg
test
rol
mov
scas
repz
xor
aaa
in
test
ja
jg
xchg
adc
mov
test
fistp
je
mov
and
stc
inc
cmp
or
lods
push
bound
mov
lea
jo
add
out
mov
jo
push
call
adc
(bad)
xchg
mov
stos
daa
test
leave
push
shl
pop
out
pop
lds
sahf
mov
push
xchg
xchg
add
jno
sub
jecxz
xlat
and
mov
jb
xchg
mov
push
enter
sbb
dec
mov
std
inc
rcr
pop
mov
xchg
mov
add
fld
mov
jbe
mov
std
test
aad
(bad)
sub
jecxz
pop
and
imul
popa
into
lods
outs
mov
test
fsub
daa
jle
mov
xchg
mov
xchg
addr16
push
gs
pop
retf
xchg
lock
xor
adc
lds
mov
push
test
xchg
jb
xchg
ins
xchg
out
fwait
push
jbe
lds
pop
add
push
add
aaa
pop
stos
popf
nop
daa
xchg
in
dec
jae
push
(bad)
mov
std
mov
sbb
adc
and
fild
and
sub
enter
icebp
scas
dec
iret
pop
pop
and
call
dec
test
mov
stos
mov
jecxz
push
jecxz
shr
in
adc
sub
out
cmp
jp
mov
std
cmp
xor
scas
jne
iret
inc
iret
into
sbb
mov
cmps
cdq
aam
shl
and
lock
dec
ret
and
and
push
shl
cli
and
mov
dec
test
cdq
mov
cs
dec
push
adc
inc
in
daa
push
pop
cmps
addr16
mov
add
movs
out
aad
xchg
mov
push
daa
cmp
cmp
and
push
pop
es
and
push
int
adc
fisubr
stos
pop
cmp
fidiv
jmp
loope
mov
ss
adc
jbe
dec
mov
mov
inc
test
mov
xchg
out
jo
push
xchg
adc
fisub
push
aam
movs
fisub
mov
pop
shr
add
iret
mov
jp
inc
sub
loopne
add
jecxz
adc
mov
je
adc
mov
cmp
mov
cmp
int
stc
mov
sub
jg
shl
sbb
pop
mov
fs
shl
sub
aam
xchg
jge
pop
in
add
xchg
out
xor
fwait
xchg
pop
stc
mov
xchg
or
fwait
ds
jne
inc
fnstsw
popa
vpunpckldq
xchg
pop
xchg
dec
arpl
adc
out
add
fisttp
jne
data16
or
jnp
and
test
xor
pop
ret
dec
xchg
hlt
stc
fdiv
or
xchg
js
push
mov
mov
push
scas
retf
push
inc
add
outs
adc
inc
jg
jb
pop
xchg
dec
adc
into
mov
addr16
jae
fisub
xlat
add
mov
mov
jbe
and
div
icebp
add
stos
sub
mov
mov
inc
sbb
aaa
enter
out
test
cmps
je
pop
add
icebp
sbb
sub
xchg
ror
cdq
jae
and
jo
inc
add
cmc
ja
movs
mov
outs
xor
and
enter
xchg
push
mov
mov
test
and
add
xor
push
fsubr
jbe
aas
call
push
mov
sbb
das
ja
mov
xor
iret
das
pop
mov
and
loop
lea
push
inc
movs
xchg
xor
cmp
adc
movs
xor
call
jbe
pop
mov
inc
iret
daa
inc
ret
sbb
xor
or
shl
call
mov
mov
xchg
xor
jbe
aam
pop
xchg
rcl
imul
sub
(bad)
in
jae
dec
mov
pusha
pop
shl
aaa
mov
and
inc
xor
fiadd
sub
sub
add
les
ds
cli
outs
fldcw
les
movs
xchg
daa
js
mov
adc
test
int3
(bad)
sub
sbb
js
add
cwde
mov
movs
(bad)
mov
fadd
xchg
xchg
into
jecxz
popf
xchg
loope
js
adc
pop
xor
dec
or
add
out
arpl
aaa
addr16
pop
cmp
xor
xor
mov
and
sub
popa
sbb
in
push
add
test
or
ret
outs
or
mov
pop
daa
adc
in
icebp
neg
sub
sub
call
add
pop
lods
test
into
les
mov
imul
mul
int3
mov
and
aam
pop
retf
add
add
jmp
jle
(bad)
in
xor
aad
int
inc
xlat
pop
outs
(bad)
pop
mov
sar
dec
sub
call
cmps
mov
mov
xchg
mov
ja
ret
fdivr
loope
bound
mov
pop
clc
mov
ins
adc
es
jmp
popa
not
xlat
addr16
out
out
repz
mov
test
xor
and
push
ja
and
shl
push
inc
(bad)
push
xchg
dec
mov
in
arpl
jp
outs
test
cmp
das
cwde
mov
mov
mov
pop
pushf
outs
not
add
bound
outs
xchg
test
push
inc
mov
gs
push
outs
je
aaa
pushf
out
(bad)
rcl
inc
cmps
aad
sti
cmp
and
push
adc
lds
inc
cdq
sub
lds
adc
dec
push
mov
or
(bad)
jp
mov
adc
or
cmc
xchg
fisub
aad
cli
inc
shl
out
pop
mov
xor
dec
int
je
addr16
dec
push
sub
xchg
dec
jne
pusha
or
test
mov
or
jno
dec
xchg
in
and
pushf
out
push
jne
xchg
sahf
or
gs
pop
out
div
jne
xor
pop
addr16
movs
(bad)
jbe
jmp
xchg
hlt
jne
push
xchg
xor
sub
ins
mov
sbb
dec
sbb
out
(bad)
xor
inc
ins
aas
shufps
movs
std
xchg
lods
dec
dec
pop
cmps
cmp
cli
push
fidivr
lds
dec
xchg
in
xchg
add
clc
(bad)
je
pop
sbb
std
push
mov
mov
xor
xchg
xchg
xchg
xchg
sub
push
es
add
fisub
je
cmps
in
pop
in
mov
bound
sub
dec
mov
popa
xchg
or
popf
sub
adc
mov
or
cmp
enter
hlt
lea
adc
push
add
test
adc
pop
mov
frstor
jp
and
das
sub
clc
repz
mov
sub
in
cmp
enter
ret
xor
lds
mov
aas
mov
lods
cmps
hlt
aaa
data16
pop
xor
fs
aam
inc
and
mov
or
fsub
sub
out
xor
pop
sar
push
xor
popf
shl
cmps
aad
rcr
(bad)
pusha
adc
pusha
sub
inc
and
jbe
pop
out
sub
mov
sbb
pusha
ins
movs
mov
pusha
mov
add
sub
inc
ror
mov
mov
stc
mov
and
(bad)
(bad)
mov
and
add
add
xor
movs
fld
not
inc
jge
xchg
sub
pop
mul
inc
xchg
xor
das
cli
lock
les
add
inc
in
(bad)
pop
push
mov
adc
inc
mov
clc
push
pop
movs
lods
xchg
mov
pusha
xchg
jne
push
xchg
jmp
jp
inc
cmp
xchg
jl
and
sbb
jbe
inc
xchg
inc
cmp
mov
pop
xchg
mul
ja
test
add
pop
ins
pop
jp
jne
je
push
push
sub
push
scas
popf
xchg
adc
pop
(bad)
(bad)
push
int
xchg
ja
adc
xchg
ins
aad
jmp
add
jne
sbb
pop
pop
sbb
jnp
and
sub
jbe
jecxz
push
mov
inc
push
and
inc
mov
aam
scas
push
push
mov
push
xchg
movs
addr16
and
cmp
(bad)
xchg
fld
mov
push
xchg
leave
and
pextrw
xor
cmps
dec
mov
jnp
adc
ret
je
enter
std
es
xchg
pusha
jmp
or
jae
xchg
add
hlt
mov
jl
jmp
xchg
mov
mov
xor
out
and
mov
sub
jbe
mov
and
ret
in
pusha
lods
in
dec
xchg
mov
dec
or
sub
push
push
int3
loope
je
rcr
mov
or
sub
test
xor
imul
cmps
mov
loop
cmp
ror
inc
push
and
pop
les
in
mov
add
mov
adc
aad
test
and
daa
call
cs
cli
gs
mov
(bad)
xor
(bad)
out
mov
cmpxchg
shl
inc
adc
dec
sbb
mov
pop
or
mov
xchg
pop
ficom
inc
inc
pop
stos
ja
or
mov
popf
stos
popf
repnz
lea
inc
push
dec
mov
(bad)
sub
cmc
push
mov
lds
pop
push
out
mov
xchg
mov
or
(bad)
pop
mov
inc
loop
sahf
outs
clc
adc
add
popa
test
sbb
ret
jg
retf
or
and
loopne
xchg
stos
mov
(bad)
gs
inc
inc
div
mov
add
movs
dec
mov
(bad)
cmp
dec
out
daa
iret
mov
iret
test
cmps
pop
test
adc
xor
cmps
hlt
pop
ror
aas
cmps
movs
add
dec
pop
pop
fucomi
aad
sbb
int3
xor
je
in
mov
and
mov
lock
add
inc
and
jbe
lahf
xchg
test
dec
(bad)
and
mov
test
imul
imul
(bad)
mov
in
xor
inc
ins
add
mov
adc
std
or
jbe
push
mov
std
inc
xor
xchg
cmc
push
mov
mov
frstor
jb
daa
add
ins
fldenv
cmps
inc
xor
ror
ret
mov
xor
les
push
outs
sbb
xor
xor
and
dec
push
bound
addr16
mov
dec
inc
push
push
add
jbe
data16
arpl
cmp
inc
test
in
and
push
or
pop
pop
xchg
adc
pop
inc
sbb
push
cmp
sahf
clc
(bad)
jno
in
jle
cs
(bad)
jg
inc
mov
test
bound
pusha
repnz
inc
jp
dec
pop
sbb
adc
pop
sbb
js
and
pop
das
xchg
stc
xlat
sbb
scas
lds
idiv
lahf
inc
mov
cmp
fcom
(bad)
and
dec
xchg
add
mov
iret
mov
mov
stc
push
jae
in
imul
fld
adc
jl
gs
jne
lock
or
dec
pop
fadd
jle
add
and
inc
dec
inc
lods
xor
mov
int3
mov
xchg
loope
xor
int
gs
std
sbb
jecxz
mov
and
jne
and
mov
in
into
not
pushw
mov
jecxz
daa
out
imul
push
(bad)
in
xor
popf
jns
sbb
mov
imul
(bad)
fisubr
ss
enter
cmp
and
xchg
push
in
mov
xor
xor
mov
adc
int3
sbb
(bad)
in
movs
and
dec
mov
push
fs
inc
repnz
(bad)
scas
mov
xchg
adc
leave
add
cli
retf
and
mov
jae
adc
mov
call
mov
jb
in
xchg
jp
les
mov
jecxz
and
arpl
(bad)
push
xchg
test
and
popa
fs
adc
jae
push
pop
(bad)
cmp
fwait
cmps
dec
mov
jl
adc
cmp
dec
loop
push
jl
sbb
cwde
ror
(bad)
and
in
add
sub
jp
dec
aam
jmp
xlat
int3
cmp
retf
inc
dec
shl
fst
cmp
movlps
add
enter
jbe
pop
call
pop
adc
mov
cli
cmps
push
cmps
mov
je
fwait
pop
in
add
test
jns
(bad)
lods
and
dec
mov
mov
xchg
adc
in
repz
jmp
pop
cs
xchg
fs
stos
aas
pop
add
shr
call
pop
retf
sub
or
xor
into
inc
call
mov
mov
or
inc
les
xor
idiv
ret
jae
scas
jne
cmps
xor
add
and
mov
push
jg
jno
inc
inc
popa
xor
jne
or
int3
cmp
(bad)
cmp
or
out
push
xor
shl
mov
jp
jbe
xor
inc
cmps
dec
pusha
lahf
xchg
mov
test
jmp
sbb
push
or
pop
les
push
mov
or
into
push
jno
inc
push
add
jg
mov
ficom
ja
xor
pop
jno
pop
ds
bound
push
mov
movs
push
mov
aaa
ins
or
add
jecxz
mov
or
adc
popa
xor
daa
fst
mov
adc
mov
dec
mov
sub
inc
adc
hlt
sar
ins
and
xchg
hlt
inc
push
jmp
mov
cli
xor
nop
sar
mov
aas
add
daa
in
mov
call
pop
into
add
and
cdq
xor
(bad)
xor
mul
inc
sbb
imul
test
in
sbb
mov
sbb
push
push
inc
adc
es
movs
stc
jmp
jnp
pop
mov
in
cdq
pop
add
bound
les
lods
icebp
fidivr
inc
fstp
cli
enter
xchg
xchg
sbb
loopne
xchg
addr16
mov
(bad)
xor
and
nop
sbb
std
fbstp
out
pop
in
je
sub
lds
aaa
movs
adc
and
cmp
retf
jbe
cli
pop
repz
and
gs
jp
aaa
jnp
inc
popa
push
push
cmps
add
push
jns
add
xor
dec
jp
stos
xor
js
(bad)
fld
inc
xchg
adc
sub
pop
jnp
and
ja
mov
fsubr
xor
dec
cmp
cmp
pop
adc
jno
lea
sub
out
mov
fscale
xchg
stos
pop
lds
int
outs
sti
mov
les
xor
or
mov
push
fsubp
pop
and
test
mov
mov
movs
xchg
pusha
pop
std
int3
cmp
out
jmp
icebp
cmps
pop
pop
add
cmp
push
mov
das
into
and
xor
cmp
and
fcom
movs
fimul
sbb
and
push
mov
pop
xchg
xchg
aad
(bad)
adc
inc
jmp
push
les
add
test
out
pop
std
sahf
and
pop
lds
mov
or
scas
popa
adc
xchg
ret
push
scas
push
push
mov
fidiv
lahf
fs
sub
(bad)
and
pop
ins
imul
fdivr
out
in
popf
sbb
jb
cs
nop
mov
fisttp
sbb
gs
out
cmps
sub
pop
loop
jae
test
add
popa
xchg
cmp
mov
das
sbb
lds
popf
std
outs
mov
lahf
xchg
ds
sub
(bad)
scas
mov
mov
es
jl
test
popa
and
cmp
jecxz
test
int
call
(bad)
into
test
aaa
push
and
(bad)
test
imul
jg
push
(bad)
cs
xchg
xor
nop
sbb
stc
push
jp
not
aad
xchg
call
fild
mov
data16
out
movs
aaa
push
pop
mov
cmc
sti
cmps
push
lea
int
xchg
cmp
mov
mov
test
mov
jmp
jno
fdivr
or
and
jmp
dec
xor
clc
push
cmc
mov
mov
xchg
cmc
mov
jle
mov
xchg
sub
mov
push
pop
dec
fiadd
in
outs
stos
or
repnz
and
inc
adc
pop
daa
mov
mov
adc
stc
fs
xlat
mov
xor
push
and
in
sbb
and
test
hlt
ja
stos
out
(bad)
cwde
cmp
aam
adc
loope
pop
arpl
repz
xchg
xor
push
push
nop
in
pop
and
xor
xor
pop
mov
lds
xlat
stc
clc
xchg
xor
adc
(bad)
pop
and
pop
adc
mov
ja
test
das
adc
dec
xchg
scas
mov
ins
xor
pushf
in
jl
dec
mov
fnclex
arpl
test
sub
(bad)
test
dec
and
xchg
js
int3
jae
xchg
or
aad
aam
xchg
aaa
aaa
mov
test
(bad)
inc
and
sub
xchg
mov
in
loope
sbb
in
pop
dec
adc
mov
sbb
mov
(bad)
daa
imul
pop
call
loopne
sub
and
(bad)
sbb
add
dec
xchg
hlt
push
lock
inc
push
add
xor
xchg
in
pop
xchg
outs
push
idiv
out
inc
mul
inc
dec
xchg
xchg
xchg
xor
and
jle
inc
mov
mov
cmc
popa
shr
inc
gs
je
add
mov
push
inc
les
int3
pop
sti
xchg
ja
movs
jne
imul
inc
test
mov
stc
retf
and
scas
jae
ret
push
and
sub
pop
ins
push
xlat
(bad)
fnstsw
jne
mov
aam
bound
or
cmc
ret
cli
ja
push
je
leave
lods
pop
xchg
and
loope
lds
lods
mul
fst
and
movs
in
jg
and
(bad)
int3
mov
sahf
ds
test
xlat
pop
mov
mov
mov
(bad)
xchg
test
repz
jg
test
add
(bad)
dec
add
jo
les
jp
or
(bad)
stc
inc
xchg
lahf
cmp
aam
(bad)
jne
push
rcl
inc
gs
outs
daa
scas
data16
sbb
jmp
gs
push
scas
ss
and
stc
add
and
fnstcw
mov
mov
mov
add
jmp
adc
loopne
sbb
or
hlt
push
mov
mov
das
(bad)
popa
xor
test
sti
fnstenv
mov
sbb
addr16
repz
mov
inc
pop
cmp
fs
push
inc
ja
lea
idiv
push
stos
in
movs
out
addr16
xchg
jle
sub
sbb
xor
push
push
xchg
pop
das
mov
add
popf
inc
jmp
cwde
mov
and
push
mov
mov
xchg
sti
xor
outs
xorps
add
jo
add
aad
pusha
push
sub
ret
ror
xchg
push
jp
xor
call
inc
int3
cwde
xchg
fs
add
loop
pop
jge
mov
sbb
outs
call
mov
je
bound
lods
push
push
mov
cs
push
icebp
fld
stos
mov
js
sbb
imul
lods
jne
add
xor
cmc
out
mov
add
popa
ja
test
hlt
pop
icebp
xor
cmp
das
cmp
xlat
or
cld
adc
and
add
xor
imul
pop
cmp
inc
add
gs
stc
mov
cmp
ret
xor
repz
shr
xor
retf
je
test
cwde
es
mov
je
lods
mov
mov
pop
inc
int
inc
pusha
fs
(bad)
jne
push
cmp
jo
xchg
sbb
push
fnstsw
jp
sub
mov
retf
imul
daa
imul
xlat
mov
daa
mov
xchg
add
jbe
pop
mov
lods
arpl
push
jecxz
xchg
add
repnz
es
retw
and
stos
adc
xchg
adc
movs
mov
cmps
xchg
scas
call
sbb
adc
pusha
mov
mov
jge
adc
and
mov
fisttp
sbb
jl
mov
mov
pop
leave
loope
jne
mov
add
add
sbb
xchg
not
daa
mov
retf
addr16
xchg
push
push
cmc
int3
not
xor
add
adc
outs
push
(bad)
out
xchg
push
xchg
dec
aaa
mov
sbb
jbe
adc
xchg
cld
sub
xor
xor
push
or
in
movs
out
inc
add
xchg
mov
sub
inc
out
xchg
cmps
inc
or
sub
js
cwde
mov
loop
in
test
mov
inc
pop
lods
(bad)
or
jecxz
rcl
fist
dec
loope
stc
dec
inc
rcl
in
xchg
push
mov
dec
cmp
(bad)
repz
push
mov
xchg
test
stos
(bad)
mov
(bad)
xlat
xor
out
retf
out
cmp
rcl
xor
fild
mov
mov
fld
movs
out
xor
call
cmp
xor
fild
fs
sub
or
jge
stc
imul
mov
xlat
pop
dec
loopne
push
pop
ret
add
in
add
xchg
or
test
sub
ror
push
leave
cmps
cmps
jnp
out
popa
cmc
xchg
imul
adc
xchg
out
cld
or
lods
pop
pop
test
imul
mov
cmps
inc
loop
into
mov
lods
test
sbb
mov
jg
push
or
sbb
ins
xor
and
sub
xlat
dec
cwde
daa
adc
ins
aas
pop
ret
loop
or
test
fisub
iret
ja
or
movs
pop
jne
test
loope
push
(bad)
loop
xor
cmp
jecxz
hlt
mov
mov
rol
sub
or
xlat
adc
xchg
je
movs
mov
pop
or
or
fsub
sub
sub
pop
xor
sti
sub
gs
add
xchg
jnp
mov
sub
ds
and
loop
sbb
xor
mov
inc
xchg
push
(bad)
pop
movs
jecxz
pop
mov
lods
jl
pop
pop
and
test
addr16
push
leave
adc
cmps
or
vcvtsd2si
dec
jmp
adc
cmps
nop
cmc
xchg
cmc
adc
daa
jmp
push
and
mov
adc
xchg
jb
pop
jb
xchg
push
mov
jecxz
rcl
lds
push
fldenv
mov
cs
shl
xchg
inc
leave
jg
es
movs
cs
jbe
dec
jne
or
dec
call
pop
and
xor
mov
inc
xlat
mov
psllq
stos
popf
mov
xlat
mov
jns
jne
inc
add
pop
dec
(bad)
imul
jne
jne
test
xchg
clc
out
imul
ficom
add
xchg
push
sub
inc
mov
and
pop
fmul
out
pusha
cmp
ror
pop
aam
out
popa
and
xor
adc
retf
sbb
pop
mov
xchg
test
out
fild
adc
xlat
xchg
ja
repz
pop
dec
xor
jb
out
leave
retf
inc
inc
movs
mov
jo
push
outs
inc
xchg
add
pop
not
sbb
fild
(bad)
mov
mov
or
jnp
cmps
repnz
movs
xchg
imul
xor
xor
mov
hlt
xchg
xor
xor
aas
adc
cdq
movs
(bad)
arpl
mov
sbb
addr16
xor
mov
shr
gs
scas
push
movs
call
cmp
in
pop
xchg
cmc
aaa
inc
mov
or
jb
vunpckhps
shl
adc
in
cmp
adc
inc
jnp
rol
xor
cmps
or
xchg
mul
es
cmps
bound
inc
sub
xchg
in
(bad)
adc
jo
inc
bound
pop
adc
xchg
movs
sar
xchg
mov
aas
mov
cmc
(bad)
out
sub
mov
push
es
lea
adc
push
gs
push
es
stos
adc
retf
dec
out
jb
vpmaddwd
pop
sub
sub
in
dec
xchg
ja
and
aad
dec
rol
mov
adc
mul
jmp
fst
xchg
dec
inc
inc
cmp
out
add
adc
mov
push
inc
scas
aad
mov
ins
fdivp
ss
mov
jae
and
push
jge
les
icebp
(bad)
xrelease
pop
popf
xor
(bad)
mov
and
xor
es
in
test
push
daa
dec
into
mov
ss
mov
mov
in
retf
int
std
call
jbe
not
and
adc
mov
jge
ret
inc
or
xor
jl
cli
cmp
add
inc
push
dec
cmp
pop
pop
retf
dec
sti
or
in
lds
cmps
push
xchg
inc
scas
movs
lock
mov
xor
xchg
adc
or
sub
hlt
and
pop
pop
fs
jmp
cmp
ret
and
(bad)
cwde
popf
pushf
xlat
push
adc
fistp
push
ret
xchg
test
icebp
fwait
retf
cmp
pop
cmps
or
sbb
pop
lock
loop
inc
int3
loope
adc
(bad)
xlat
lds
aaa
movs
fcmovb
mul
adc
cmp
mov
pop
fs
adc
pop
xor
or
shl
inc
in
dec
out
popa
cmp
loope
hlt
repz
div
ss
push
mov
imul
xchg
inc
scas
inc
mov
ja
inc
pop
scas
mov
pop
addr16
pop
leave
rcl
(bad)
stos
mov
jmp
xor
adc
les
out
arpl
inc
jl
jb
cwde
dec
daa
(bad)
lahf
push
mov
sbb
add
mov
aam
inc
jnp
fadd
mov
fisub
popa
add
xchg
dec
add
(bad)
mov
inc
add
icebp
sar
push
std
stos
and
cmps
(bad)
cmp
xchg
sub
popa
inc
mov
jns
cmps
cmc
xchg
mov
and
rcl
mov
mov
lds
mov
or
mov
pusha
xor
xlat
arpl
sub
add
xor
and
adc
fs
scas
ja
xor
push
sbb
and
mov
mov
adc
imul
ds
jo
and
rcl
mov
and
out
std
(bad)
not
in
ror
fs
cmc
push
pushf
pop
arpl
les
dec
jne
xchg
or
icebp
cmp
pop
push
pop
fs
dec
add
sbb
addr16
push
pop
mov
(bad)
into
jnp
xor
add
xchg
xor
push
les
push
push
sbb
jb
loopne
inc
xor
pop
jb
js
hlt
xchg
in
test
mov
movs
imul
inc
add
ret
loope
popf
cmps
push
(bad)
inc
out
xchg
inc
shr
rcl
jno
pop
addr16
xchg
push
add
les
lock
repz
icebp
and
in
or
inc
xchg
pop
cmp
mov
xchg
mov
les
in
(bad)
jl
test
cmp
mov
je
inc
test
mov
add
jae
push
retf
jno
mov
mov
mov
out
mov
ins
shl
repz
test
xchg
push
sti
mov
imul
stos
xchg
add
xchg
pop
imul
(bad)
(bad)
gs
push
fs
sahf
hlt
loop
cmp
les
inc
jnp
mov
and
imul
cmps
dec
push
lahf
ret
cmp
xchg
cmp
or
and
cmc
jmp
inc
leave
ss
mov
inc
sbb
cwde
xchg
adc
mov
and
ret
jp
push
(bad)
dec
in
mov
mov
in
mov
push
mov
daa
mov
and
ins
fisubr
das
adc
jg
adc
ror
mov
shr
sub
rcl
stos
sbb
fistp
xchg
daa
mov
sti
jb
mov
loope
icebp
cmp
xchg
dec
test
shr
adc
mov
gs
shl
dec
dec
and
call
xor
add
ret
pushf
pop
add
enter
fs
enter
div
lahf
cmps
inc
aad
and
retf
(bad)
xchg
dec
jno
cmp
sbb
mov
xlat
mov
call
aas
gs
(bad)
adc
add
inc
and
adc
jl
gs
mov
mov
and
pop
call
and
xchg
mov
gs
(bad)
mov
xor
hlt
cmp
in
rcl
cli
ins
stc
sti
mov
mov
outs
cmp
mov
jb
ss
in
out
out
lahf
inc
and
shl
scas
sbb
mov
xchg
aam
pop
aad
outs
fnstenv
and
out
arpl
ss
es
out
jmp
adc
inc
rcl
or
stc
push
adc
jmp
sti
and
loope
ret
inc
push
add
inc
retf
daa
add
daa
dec
mov
adc
imul
stos
push
or
add
iret
ja
cmp
(bad)
cmps
repz
aam
sub
enter
adc
cmp
xchg
xor
push
shl
add
ss
movs
sbb
inc
dec
les
loopne
add
lea
clc
cwde
xor
push
pop
aaa
push
xlat
stos
and
push
mov
std
ja
and
sbb
jne
ja
pop
in
mov
push
cli
bound
(bad)
xchg
cmps
adc
xor
ficomp
mov
mov
or
pop
out
gs
inc
xchg
sahf
adc
xor
sub
sub
les
popa
xor
xchg
hlt
pushf
out
cld
stos
xchg
inc
adc
mov
pop
xor
dec
call
in
push
xor
sub
mov
xor
dec
adc
pushf
rcl
pop
dec
es
cmps
xchg
pop
or
fs
jb
mov
xor
fld
nop
xchg
sahf
mov
sub
jg
popa
loope
and
pop
mov
dec
addr16
pop
xchg
and
jbe
push
(bad)
out
xchg
in
xor
push
cwde
xor
xor
aam
mov
adc
jbe
inc
cmps
adc
xchg
mov
icebp
add
inc
fucom
popa
xchg
xlat
mov
(bad)
push
and
lahf
fmulp
out
daa
cli
add
loop
add
ins
repnz
(bad)
enter
xor
out
outs
inc
test
xor
loopne
pop
pop
test
fild
mov
pop
les
and
inc
and
fadd
jecxz
lahf
or
das
rol
push
cmp
add
jmp
and
rol
div
div
test
xor
fldenv
idiv
mov
xchg
ret
xchg
push
fst
gs
xchg
outs
sub
std
cmp
xchg
pop
xlat
inc
push
mov
mov
gs
dec
dec
jle
ja
lahf
and
(bad)
retf
and
add
add
push
pop
jmp
mov
nop
popa
out
sub
sbb
jecxz
pop
ins
clc
xor
loop
retf
loop
je
fist
and
imul
test
lods
stos
lds
push
loope
es
xchg
addr16
lahf
cmp
dec
push
aad
movs
out
jno
dec
mov
sbb
xor
jmp
(bad)
mov
push
add
mov
mov
xchg
mov
push
xchg
or
jae
mov
fidiv
cli
jnp
pop
aad
call
jno
inc
mov
dec
int
mov
aas
jbe
lods
(bad)
push
scas
cmp
fld
test
ja
or
pop
xor
mov
jbe
push
jle
mov
mov
stos
cmp
mov
push
idiv
fs
adc
or
xor
aam
call
or
das
into
add
and
ja
aam
(bad)
lock
xor
cmc
in
lock
retf
in
cmp
fidivr
(bad)
cmc
int3
cmps
repnz
out
cmp
jb
popf
(bad)
lods
dec
inc
es
iret
sbb
mov
fisubr
inc
xchg
in
dec
int3
mov
dec
(bad)
push
pop
add
daa
push
fisttp
sbb
pop
mov
pop
pop
bound
out
stos
std
shl
in
sbb
stos
loop
fmul
fist
push
xchg
dec
pop
pop
jne
dec
div
test
mov
fsub
fxch
jmp
fnsave
mov
(bad)
enter
or
xchg
call
add
test
fwait
xchg
mov
lahf
cdq
mov
(bad)
mov
push
repz
push
inc
fsub
in
mov
mov
(bad)
je
not
loope
cdq
jmp
nop
data16
arpl
mov
std
stos
ss
or
fdiv
(bad)
(bad)
xor
mov
xchg
pop
cmp
popf
cs
jb
push
repz
aad
adc
and
and
dec
jb
jne
adc
adc
das
lods
mov
pop
(bad)
xchg
sub
xchg
push
cwde
mov
cmp
shr
mov
(bad)
mov
xor
inc
and
xchg
gs
xchg
pop
push
(bad)
rcl
mov
xchg
inc
aam
mov
cld
xor
xor
jne
xchg
aam
mov
add
adc
inc
lock
out
xchg
les
xchg
inc
fs
aad
(bad)
js
ja
ret
js
ja
lds
aaa
xor
push
mov
sti
adc
inc
push
shl
adc
xor
inc
pop
xchg
inc
push
mov
aaa
leave
sbb
jl
inc
push
cmc
inc
cmps
fstp
arpl
lds
xor
sahf
inc
scas
ja
aaa
call
dec
stos
rcr
sbb
cli
loopne
xor
loope
jns
fucomi
cld
jo
dec
arpl
jae
scas
retf
jne
cmps
push
movs
cmc
or
in
adc
xchg
sbb
or
cmps
and
cmp
test
jmp
ror
cmp
loop
push
shl
cmps
call
jno
aas
and
mov
dec
xor
in
push
(bad)
add
push
push
sbb
xor
jae
dec
popa
cmp
in
mov
xchg
xor
fild
mov
movntps
les
xchg
in
inc
js
sbb
add
mov
inc
sub
ins
lock
inc
add
xlat
(bad)
aad
jg
adc
sub
pop
jno
adc
aad
inc
gs
cmc
mov
cmp
mov
mov
mov
dec
add
mov
dec
jb
pop
push
xor
std
movs
cmps
pop
loopne
xchg
(bad)
data16
inc
xor
mov
ror
aaa
inc
mov
inc
xchg
cmp
and
(bad)
and
das
sbb
mov
fdiv
out
mov
sub
std
push
xor
mov
add
mov
sbb
pop
in
cmp
sub
iret
push
or
cmp
mov
imul
hlt
lock
popf
test
cli
in
shl
adc
dec
(bad)
cmp
pusha
and
mov
mov
test
clc
push
ror
pusha
daa
fsub
dec
mov
sar
or
ja
daa
adc
add
add
test
add
bound
in
push
(bad)
gs
test
xor
cmp
arpl
jb
xor
mov
push
inc
in
cmc
xor
fld
pushf
add
(bad)
push
sbb
mov
and
out
iret
mov
adc
aad
mov
pusha
jb
test
pop
(bad)
ss
inc
dec
test
cmps
dec
lea
jmp
or
inc
bound
out
jne
leave
sub
dec
rol
mov
(bad)
fnstsw
lds
mov
in
scas
out
jno
add
movs
xchg
fisub
adc
push
mov
sbb
aaa
xlat
mov
ret
adc
adc
dec
xchg
or
or
sar
cmp
or
sbb
add
loop
retf
shl
ss
or
push
or
add
mov
push
mov
js
in
sub
cwde
lds
adc
fbld
sbb
mov
outs
repnz
xchg
es
outs
mov
adc
push
pop
add
in
pop
pusha
sbb
adc
xchg
scas
call
dec
iret
mov
pop
test
pop
arpl
sahf
xchg
test
jns
arpl
inc
xchg
aam
push
jecxz
sub
and
add
imul
fistp
or
sbb
add
shl
loope
push
sbb
sbb
ret
xchg
cmps
and
loop
mov
movs
push
fisttp
push
cmps
push
xor
inc
out
lock
ss
mov
lahf
(bad)
(bad)
ja
mov
adc
les
daa
xchg
xchg
dec
mov
loopne
xor
div
faddp
mov
inc
push
daa
out
in
cmp
and
cmp
lods
pop
daa
aaa
add
stos
cwde
add
xchg
test
int
xlat
mov
push
loope
sub
in
inc
inc
xchg
mov
xchg
inc
jle
cmps
cld
inc
jns
inc
cmps
jl
iret
xor
fs
mov
jmp
or
xor
or
loop
add
mov
sub
in
lds
xchg
aas
xor
test
retf
fnstenv
dec
mov
xor
adc
call
fdivp
test
mov
out
js
jo
(bad)
out
in
pop
sub
fldenv
mov
addr16
xchg
in
inc
out
bound
fs
inc
push
jb
test
pop
sbb
adc
and
adc
gs
inc
(bad)
fdiv
iret
out
push
mov
xchg
xor
mov
ds
sub
popf
out
cs
jmp
adc
and
inc
test
mov
and
out
mov
out
ins
lods
dec
sub
mov
push
(bad)
gs
ret
ret
pop
mov
mov
jae
mov
in
jnp
mov
enter
and
push
rcr
ret
and
push
mov
les
push
inc
movs
cs
jbe
pusha
rcl
pop
aad
mov
out
sar
test
mov
ss
cdq
sbb
in
lds
jg
push
icebp
push
fild
and
mov
pop
xchg
jno
repz
jmp
mov
jmp
mov
scas
gs
sbb
inc
xor
jae
pop
outs
add
das
mov
mov
stc
sbb
stos
xor
shr
fnsave
jbe
daa
xchg
and
and
leave
popa
mov
les
fs
cwde
ret
call
or
pop
(bad)
push
cmp
mov
mov
ss
mov
xchg
test
adc
fisttp
fbstp
nop
ja
xor
mov
mov
inc
icebp
jo
dec
inc
ins
call
cli
sbb
stos
imul
mov
add
xchg
mov
jbe
popa
jge
sahf
aas
in
jne
out
into
je
sti
repz
push
aad
xchg
sbb
pop
jo
or
cmova
sub
imul
in
xchg
cdq
aad
mov
ins
cli
test
adc
jnp
mov
mov
sub
cmp
repz
adc
mov
in
test
push
ret
push
fld
es
addr16
and
xor
and
and
xchg
shl
repz
xchg
leave
xor
fadd
sahf
sbb
mov
cmp
pop
mov
push
call
jae
sahf
ret
push
hlt
xor
mov
(bad)
out
adc
movs
dec
retf
pop
enter
adc
stos
dec
mov
push
stc
cmp
out
pop
xchg
mov
xchg
addr16
daa
sub
push
scas
ja
fs
lds
call
pop
mov
cmp
loop
jecxz
bound
xchg
xchg
sti
sbb
cmp
push
cmp
popf
pop
movs
in
test
out
clc
(bad)
mov
mov
cmps
cmp
adc
mov
xor
cmp
cwde
sar
gs
sub
stos
dec
out
sbb
jno
stc
and
sbb
cmc
fs
pop
dec
adc
xchg
xor
dec
dec
movs
ds
bswap
push
xchg
inc
push
push
(bad)
adc
mov
push
bound
mov
call
(bad)
push
mov
dec
outs
mov
add
xor
and
ins
cmc
push
push
pop
mov
dec
fist
mov
push
fmul
mov
xchg
inc
xchg
xchg
sbb
pop
xchg
and
jp
mov
inc
jmp
cmp
daa
dec
cmp
push
jle
fld
pop
add
xor
or
daa
mov
sbb
add
add
test
sbb
inc
jno
mov
mov
adc
dec
push
adc
add
inc
shl
repz
mov
mov
mov
std
sbb
movs
pop
cmps
pop
movs
or
(bad)
cmps
mov
(bad)
sbb
(bad)
das
pop
pop
dec
ja
mov
cmps
dec
cdq
call
rol
or
mov
js
push
fs
(bad)
mov
movs
add
int3
gs
add
mov
aas
nop
call
cmps
clc
aam
cmp
sbb
retf
xor
and
inc
and
repnz
adc
leave
sbb
test
(bad)
fwait
xor
push
mov
popa
inc
mov
xchg
inc
cmps
inc
adc
jl
sub
mov
test
pcmpeqb
inc
(bad)
jne
jp
cmps
jb
cmp
pop
xchg
aam
inc
pop
xor
pop
xchg
xchg
shl
mov
push
lods
mov
inc
mov
xchg
dec
mov
dec
mov
mov
call
sbb
xchg
shl
(bad)
(bad)
loopne
fs
cmp
mov
mov
lds
push
sub
inc
loope
push
leave
popf
cwde
cmp
sub
pop
mov
mov
call
mov
jle
adc
mul
leave
cmps
pop
adc
les
(bad)
gs
int
cdq
dec
imul
push
daa
and
mov
cmp
loope
jmp
add
movs
leave
jns
lahf
out
nop
es
inc
pop
bnd
mov
aaa
sbb
mov
std
sahf
push
movs
or
mov
dec
mov
sbb
test
xchg
pop
add
mov
push
and
inc
mov
aam
not
xor
outs
cmp
and
sbb
in
lds
push
cmps
adc
push
out
inc
push
repz
jnp
adc
add
(bad)
adc
xor
test
add
or
and
push
scas
enter
(bad)
iret
xchg
leave
addr16
cmp
es
mov
pop
popf
jne
(bad)
das
mov
imul
(bad)
or
cmp
(bad)
scas
jge
(bad)
xor
mov
ja
push
cwde
push
mov
jne
aad
fisttp
and
and
rol
xor
mov
xlat
test
mov
pop
(bad)
loop
cmp
not
pop
lock
sahf
sar
cmps
addr16
loope
mov
mov
scas
xchg
lods
pop
adc
jg
or
scas
mov
sub
mov
popa
and
cmp
loope
dec
pop
syscall
loope
mov
mov
mov
inc
fcmovnb
gs
loop
fwait
adc
sub
icebp
cmps
jne
mov
lods
aas
movs
mov
fs
inc
outs
xchg
imul
mov
(bad)
dec
std
cmps
neg
retf
ins
cmp
mov
not
xor
cmp
lods
arpl
retf
aaa
and
adc
and
mov
std
adc
mov
sub
push
push
adc
test
mov
xchg
ficom
test
outs
mov
push
or
fs
xor
xchg
pop
popf
in
bsr
(bad)
xlat
ret
out
jno
ds
xor
adc
nop
(bad)
call
dec
outs
xchg
inc
aas
pop
stc
xchg
mov
xor
jno
inc
(bad)
test
xor
dec
jns
es
inc
icebp
sbb
xchg
(bad)
aam
mov
and
pop
aam
cmps
int
jmp
jns
(bad)
mov
cmc
dec
inc
xlat
lds
stc
not
cmps
cwde
jmp
and
fisub
xchg
pop
das
add
cmps
push
aaa
bound
int3
xchg
cmp
mov
add
pop
mov
mov
push
inc
lahf
xchg
(bad)
push
test
dec
xchg
xchg
movs
(bad)
pop
cmc
scas
les
aad
or
push
inc
and
outs
push
and
ins
push
mov
mov
(bad)
daa
sbb
adc
sub
pop
(bad)
adc
adc
test
addr16
daa
mov
arpl
pop
pop
pop
push
dec
fld
add
inc
loop
xor
adc
xor
(bad)
lea
cwde
(bad)
bound
adc
mov
aad
mov
sub
pop
push
xor
or
test
cmp
mov
mov
fnsave
adc
outs
inc
cdq
stc
pop
dec
xchg
mov
adc
test
push
scas
mov
fst
inc
mov
lds
jge
test
jge
jae
push
mov
or
mov
shl
adc
push
loope
jns
std
lods
inc
jne
in
mov
and
push
push
(bad)
js
inc
cmps
test
out
mov
sub
movs
rcl
jbe
fimul
or
hlt
dec
sbb
xor
mov
inc
pop
pop
fisubr
pop
or
sub
int
mov
aas
push
sub
jmp
(bad)
stos
or
push
jne
jmp
test
and
dec
test
and
push
scas
push
push
or
mov
test
stc
sbb
fwait
aad
pop
adc
pusha
xchg
retf
lea
inc
xor
add
mov
mov
mov
xor
mov
les
dec
xchg
and
and
ret
gs
mov
shl
mov
or
mov
into
add
in
mov
xor
and
out
cli
mov
cmp
xchg
mov
and
popa
and
sub
inc
jne
imul
fnsave
test
scas
mov
inc
scas
fs
ja
pop
(bad)
mov
out
adc
xchg
int
mov
pop
inc
jp
in
mov
addr16
dec
xchg
and
sub
mov
hlt
mov
and
sub
rcr
push
daa
ins
xchg
test
adc
mov
xchg
xor
dec
clc
arpl
xor
mov
inc
xchg
in
ror
jb
shl
mov
aam
xchg
out
shl
dec
xchg
ret
dec
fld
push
cmc
inc
or
jmp
cmps
jns
cmp
mov
xchg
popf
(bad)
in
out
stc
idiv
(bad)
mov
dec
sub
fidiv
add
jb
scas
sbb
jge
in
cmps
push
movs
aaa
ins
inc
jl
ficom
push
pop
not
stc
leave
lea
jo
jbe
push
cwde
lods
imul
mov
push
ffreep
or
call
push
iret
retf
and
and
cmps
loopne
mov
and
imul
pop
and
xchg
enter
xor
jg
test
and
mov
addr16
sub
loope
xor
cmp
xor
int
mov
sbb
jns
jns
add
loope
ror
out
mov
aad
mov
test
inc
cmp
push
adc
daa
push
gs
retf
mov
pop
aam
hlt
jle
mov
ja
(bad)
loop
lock
sbb
ret
shl
dec
ins
lock
daa
scas
or
cmp
mov
mov
ja
push
lahf
mov
mov
fild
jle
jg
mov
xchg
mov
mul
xchg
jp
or
fist
cmp
xchg
int3
adc
add
fadd
push
push
xchg
dec
sbb
fnstenv
(bad)
aad
rcr
imul
adc
movs
ss
and
clc
pop
inc
sub
sub
inc
mov
cmp
rcl
das
add
push
inc
fsub
adc
lock
xor
lock
sahf
shl
ds
daa
loope
outs
inc
add
or
and
adc
and
retf
jl
out
aad
mov
jns
mov
mov
cmps
gs
add
adc
inc
pop
pop
cwde
in
adc
xchg
mov
or
outs
xchg
or
daa
push
test
dec
out
mov
aaa
push
fimul
xchg
ret
outs
into
pop
push
fisttp
xchg
mov
jecxz
xchg
jb
pushw
sar
outs
cdq
cmp
jmp
jmp
or
push
pushw
loopne
mov
xchg
and
dec
not
xchg
jns
jecxz
or
xchg
xor
inc
and
loop
adc
ja
hlt
mov
and
clc
popf
jbe
inc
sar
push
int3
mov
cmp
sbb
aad
jge
pop
in
rcl
ss
and
movs
loope
in
xor
jecxz
ds
sbb
inc
test
mov
cld
aas
pusha
or
push
repz
ss
xchg
push
ins
push
and
ret
and
dec
cmps
xor
mov
and
jp
xor
push
and
dec
and
and
add
mov
add
pop
push
and
sbb
xlat
sub
in
sbb
pop
leave
mov
outs
(bad)
mov
add
xor
jno
frstpm(287
pop
cmps
add
aad
cmps
stos
pop
xor
outs
push
fwait
scas
jp
repnz
imul
daa
inc
fwait
jo
cmps
ss
xor
(bad)
mov
(bad)
std
aad
xor
cwde
shl
pusha
test
xlat
shr
rol
and
jg
test
fbld
push
repz
mov
rcl
ret
push
and
out
movs
mov
mov
fdivr
adc
lsl
xchg
loopne
push
cli
gs
mov
(bad)
jp
fstp
mov
and
adc
mov
mov
shr
and
inc
mov
inc
cli
gs
adc
ret
or
ret
push
out
test
push
cmc
and
rcl
xchg
jno
inc
mov
loope
daa
loop
cmp
test
aaa
jbe
inc
into
sar
scas
adc
je
mov
repz
rcl
push
add
xchg
arpl
xchg
or
or
hlt
jae
push
inc
push
arpl
adc
add
xor
sbb
(bad)
aad
jle
pop
jecxz
pop
ds
xor
and
jmp
ds
adc
pop
add
adc
int
ror
adc
and
mov
xchg
in
push
mov
mov
pop
rcr
outs
push
shl
and
popf
scas
xchg
iret
nop
enter
ja
xchg
aam
push
xchg
pop
fild
jp
int
adc
stos
xor
scas
aad
retf
and
test
pop
enter
inc
pushf
mov
daa
sbb
in
jbe
dec
(bad)
pop
push
xchg
sbb
cmc
imul
inc
xor
std
call
test
outs
and
aaa
out
push
add
jge
fst
(bad)
mov
clc
sub
mov
or
cmp
(bad)
jne
arpl
xchg
and
sbb
aaa
les
stos
sub
dec
ss
push
push
mov
rcl
mov
ja
mov
sbb
sub
pop
rol
popa
add
rcr
jnp
(bad)
pop
add
push
fs
cmc
sub
pop
movs
(bad)
daa
mov
mov
inc
lds
add
(bad)
movs
int
add
call
mov
and
shl
loope
leave
adc
and
push
xlat
popf
jge
mov
lds
rcl
mov
test
jae
inc
mov
arpl
sub
cmps
mov
jne
bound
lea
mov
loop
hlt
aad
xchg
push
sub
jg
popf
push
gs
gs
sub
jbe
imul
cli
jp
mov
mov
in
call
jne
pop
inc
mov
or
adc
in
and
inc
xor
fstp
pop
test
mov
mov
inc
pop
push
test
lahf
mov
ins
cmp
xchg
cli
xor
ins
cmp
sub
sub
push
mov
jmp
loope
mov
ror
fs
aam
stc
repz
in
xchg
cmp
xchg
jne
pop
push
push
adc
das
jg
fisub
and
mov
sub
and
fld
movs
xor
int3
push
scas
hlt
jo
test
and
sub
pop
and
adc
mov
mov
pushf
pop
sub
push
imul
cmp
not
(bad)
sbb
je
test
adc
fdivp
test
or
int
(bad)
addr16
xor
sbb
jae
inc
xchg
push
xchg
jmp
mov
repz
movq
inc
aad
(bad)
xor
jb
push
dec
mov
scas
stos
scas
lock
nop
jbe
inc
shl
movs
push
adc
lds
in
mov
div
inc
and
rcl
cmps
xchg
xchg
sbb
pop
(bad)
mov
data16
pushf
dec
xchg
fsub
and
lds
xor
xor
call
jle
movs
je
push
sub
dec
or
xchg
retf
pop
xchg
jg
das
pop
and
daa
popf
xor
hlt
dec
sub
imul
repnz
xchg
jo
das
push
adc
ja
mov
pop
pop
or
add
xor
xchg
pop
lds
call
push
das
inc
fdiv
cmc
and
mov
mov
mov
shl
(bad)
mov
xor
mov
mov
jne
and
popa
fisttp
rcl
sbb
mov
daa
je
call
shl
in
pop
adc
xchg
pop
mov
and
test
cmp
mov
pop
out
inc
rcl
push
inc
add
pop
or
in
les
addr16
int
pop
movs
mov
push
mov
inc
jne
add
das
cmps
fdiv
aad
mov
aam
cmps
cmp
pop
mov
add
es
rcr
push
xchg
fcom
test
(bad)
xor
and
leave
in
lock
sbb
inc
(bad)
mov
stos
cmp
ret
idiv
int3
gs
adc
cli
dec
out
out
xor
out
daa
pop
mov
cdq
(bad)
jae
hlt
in
mov
sbb
sbb
inc
mov
scas
lock
cmp
sahf
xchg
inc
in
ins
sbb
or
cmova
(bad)
push
dec
daa
pop
dec
aad
add
icebp
lods
adc
xchg
clc
and
les
or
xchg
push
shr
stc
sbb
sub
cmps
stos
or
lds
cmp
xchg
jno
lea
neg
xor
pop
cmp
xchg
inc
adc
xlat
ins
pop
(bad)
xlat
jmp
outs
or
cs
or
inc
call
gs
(bad)
imul
addr16
and
mov
mov
fnstcw
daa
or
jl
xchg
cli
gs
(bad)
scas
in
jno
(bad)
pop
inc
inc
lds
rol
in
push
(bad)
scas
icebp
call
repz
int3
movs
mov
test
rol
mov
imul
adc
sub
not
push
jnp
adc
push
in
icebp
lods
imul
sbb
cwde
cmps
in
mov
jb
scas
push
mov
jecxz
inc
rol
je
pop
and
imul
out
jno
es
xor
mov
daa
(bad)
rcl
xor
xchg
daa
daa
mov
outs
mov
jbe
imul
loope
cmp
test
push
xchg
xchg
cmp
hlt
dec
movs
mov
fidiv
outs
jbe
aad
jmp
ret
(bad)
inc
mov
cmp
mov
imul
jne
sti
xchg
xor
or
in
xor
cmc
xchg
xchg
dec
popa
mov
mov
pusha
shl
movs
mov
test
adc
sbb
aad
inc
inc
repnz
(bad)
sahf
jbe
pop
out
jne
imul
mov
and
in
push
dec
dec
jle
jb
imul
push
pop
adc
mov
inc
mov
mov
xchg
test
jo
in
fidivr
(bad)
les
jno
or
mov
pop
(bad)
call
sub
jae
sti
mov
fs
stc
ins
and
outs
adc
gs
cwde
pop
cmp
mov
mov
push
je
(bad)
or
loopne
les
fwait
test
(bad)
pop
in
cmps
sbb
int3
add
push
inc
jb
and
mov
xor
lea
xchg
test
(bad)
push
pop
ret
cdq
sub
jecxz
inc
xchg
ss
rcl
adc
jne
lods
arpl
inc
cmp
adc
stos
lds
fcmovne
push
sahf
mov
add
(bad)
shr
adc
data16
in
xor
movs
add
xchg
jno
cs
stos
xor
lock
or
add
out
xor
inc
fldcw
and
push
xor
xchg
xor
scas
lea
sub
push
rol
xchg
push
(bad)
mov
rep
test
movs
or
inc
shl
call
inc
jo
xor
test
pop
mov
lahf
les
popf
js
mov
pop
mov
xlat
hlt
dec
mov
cmps
sbb
hlt
push
sti
ret
or
adc
sbb
push
xchg
mov
js
cmp
shr
(bad)
shl
pop
xor
push
nop
in
call
adc
lods
mov
in
scas
push
cmc
in
sbb
xchg
xchg
imul
mov
push
mov
pop
inc
and
adc
inc
bound
xchg
dec
aaa
xchg
dec
add
cs
rol
xchg
lds
cwde
int3
lahf
push
lock
clc
(bad)
in
sbb
cmp
add
jle
neg
push
cmp
jb
aas
cmc
sub
fistp
stos
adc
jmp
mov
sub
ds
xor
fwait
sahf
pop
iret
dec
mov
test
pusha
fstp
ror
data16
int3
icebp
or
iret
sbb
inc
or
ror
in
int3
in
sbb
shr
jg
mov
add
mov
jnp
addr16
shl
inc
mov
cmps
mov
xlat
cmc
scas
fs
dec
test
aas
or
sub
jge
cmp
inc
push
push
lea
aad
mov
cmps
jno
pop
mov
lea
leave
adc
dec
cmp
adc
push
mov
inc
inc
inc
shl
push
mul
mov
std
push
mov
push
dec
xchg
es
icebp
xor
or
in
inc
enter
mov
aaa
pop
in
shl
sub
sbb
jg
int
jmp
mov
inc
xor
sub
jle
arpl
xchg
call
or
hlt
mov
sub
mov
fld
(bad)
fcomp
lock
push
test
push
dec
ss
jmp
xchg
call
int
hlt
jmp
aam
dec
jecxz
std
mov
gs
clc
hlt
sysexit
jne
mov
in
sub
adc
xchg
cmc
test
in
adc
loope
clc
pop
dec
push
xor
pxor
(bad)
cld
add
imul
jb
lods
mov
mov
dec
jge
loope
(bad)
cmp
xor
add
add
ins
xchg
dec
mov
rcl
add
out
ja
mov
inc
add
daa
add
or
hlt
pop
in
daa
in
les
pop
ja
add
aam
mov
mov
mov
pop
hlt
(bad)
fidiv
xor
test
push
mov
dec
add
or
cmp
mov
pusha
jmp
cwde
aaa
jo
xchg
adc
lds
push
push
xchg
mov
fst
sbb
inc
loop
sbb
repz
jge
ret
push
add
les
or
rcl
jbe
jns
xchg
xor
movs
hlt
(bad)
push
pushf
mov
jne
stos
adc
repz
ja
push
aas
adc
in
add
inc
cmp
mov
repnz
lds
adc
xor
pop
and
(bad)
cli
je
in
out
and
adc
push
add
and
mov
pop
dec
ss
gs
icebp
pusha
cmp
bound
xchg
mov
cmps
adc
dec
add
adc
aas
cld
push
aam
ja
or
icebp
popf
adc
xchg
fs
test
mov
idiv
cmc
xchg
jne
cmovge
std
inc
add
or
sbb
and
(bad)
aas
sub
lods
inc
fld
jmp
(bad)
or
bound
out
add
pop
push
push
and
ins
in
(bad)
xchg
cmc
mov
lahf
lods
enter
jbe
sbb
test
and
fwait
loop
(bad)
jmp
and
les
shr
movs
pop
adc
leave
jle
dec
and
mov
cdq
das
mov
ja
icebp
or
dec
fnstcw
inc
adc
cld
cmps
pop
xchg
imul
sti
inc
popa
pop
pop
data16
push
adc
pop
(bad)
mov
jb
ror
add
test
jge
mov
mov
popa
lds
pop
fs
mov
daa
lods
je
vshufpd
test
xchg
jb
nop
jae
shr
es
adc
pop
xchg
in
push
push
hlt
add
sub
gs
push
stc
arpl
pop
mov
imul
xor
add
jno
add
sbb
push
sub
adc
jae
das
into
xor
add
test
push
xlat
clc
or
pop
mov
xchg
cmp
xchg
push
xor
mov
pop
sbb
mov
and
jbe
pop
lods
jne
pop
mov
sub
or
aas
pop
int
mov
add
out
in
adc
data16
lods
mov
push
push
and
cdq
aaa
xchg
sub
int3
in
push
push
xor
dec
data16
mov
movs
out
mov
fsubr
inc
mov
pop
call
loopne
add
push
sbb
cmp
lods
(bad)
lock
(bad)
cmps
int
lahf
cmp
mov
jnp
cs
sbb
and
adc
mov
test
mov
mov
adc
xchg
add
inc
call
and
sub
out
sbb
cwde
mov
sub
push
push
mov
adc
xor
test
inc
xchg
jnp
cmp
mov
pop
mov
jnp
jbe
scas
mov
in
in
inc
scas
lds
div
xor
pop
ins
stc
fcmove
dec
ins
cs
mov
pop
out
cmp
loope
push
and
dec
add
ficom
sub
mov
xlat
add
es
int
scas
inc
in
imul
lods
jae
lahf
ins
neg
inc
ret
movs
jmp
shl
inc
scas
mov
sub
mov
push
std
inc
loopne
mov
or
aas
or
aad
arpl
movs
ret
mov
add
inc
out
pop
imul
xor
stos
ret
fstp
out
pop
mov
daa
aad
stc
sub
mov
xchg
loope
xor
(bad)
gs
jmp
jnp
xor
cmc
movs
cmp
adc
and
xchg
xlat
jns
imul
cmps
outs
aaa
cdq
iret
xchg
inc
aad
test
jne
lds
sbb
inc
test
movs
addr16
sub
cmp
imul
dec
inc
xchg
and
sti
push
jmp
mov
cdq
jecxz
test
daa
(bad)
clc
xchg
out
mov
aas
test
adc
aaa
cdq
daa
lds
inc
cmc
pop
movs
addr16
add
rcl
mov
and
ror
loop
push
stc
(bad)
jecxz
fst
leave
xchg
sbb
rol
xor
out
and
inc
in
mov
xchg
adc
popa
add
(bad)
(bad)
ja
(bad)
xor
dec
out
sar
aaa
test
(bad)
push
cmps
mov
out
pop
(bad)
adc
stos
xlat
sbb
add
pop
xchg
mov
xchg
lds
mov
xor
es
xchg
xor
neg
mov
mov
pop
std
mov
imul
cli
cmp
test
inc
clc
sbb
inc
pop
mov
lds
daa
mov
aad
mov
clc
(bad)
ins
ffreep
fprem1
cld
addr16
or
and
add
test
fadd
enter
mov
mov
aas
shl
test
addr16
push
loop
cs
jns
adc
stc
lock
sbb
push
jecxz
aaa
ins
jmp
clc
mov
js
mov
ret
pop
mov
mov
bound
add
xor
jb
fwait
in
push
lock
sahf
sub
dec
cdq
fwait
loopne
and
loopne
sbb
fidivr
sub
cdq
cmp
cmps
adc
test
rol
push
xchg
mov
fild
(bad)
jl
jmp
cmp
ss
jnp
mov
rcl
xchg
test
or
or
out
and
scas
aaa
fcmovnbe
mov
sahf
call
and
fnsave
repz
imul
xchg
xchg
repz
xor
sub
dec
ja
(bad)
or
rcl
mov
lds
outs
test
push
cmc
add
sub
xchg
ins
dec
test
and
mov
(bad)
pop
add
cmp
inc
push
jo
cmp
pusha
cmp
in
xor
cmp
adc
or
stos
out
addr16
pop
inc
or
add
mov
leave
xchg
xor
in
cwde
gs
xor
or
jno
adc
ins
lods
pop
mov
add
pop
test
jle
mov
sub
or
xchg
imul
mov
add
push
not
jmp
jmp
popf
xor
jno
mov
movs
add
mul
adc
shl
sbb
aaa
ror
rcl
repnz
xor
(bad)
and
sub
shr
not
xchg
mov
les
mov
fwait
mov
psrlw
adc
stos
dec
add
jo
fst
out
and
cld
sti
retf
inc
push
stc
out
sar
cmp
xchg
lods
xchg
adc
cmp
in
repz
fucomi
sub
sbb
sbb
pmaxsw
retf
sbb
mov
repz
loope
xor
mov
mov
pop
sub
call
aad
jmp
stos
sub
xor
pusha
in
imul
xor
pushf
(bad)
(bad)
aas
or
mov
xchg
movs
sub
out
test
fldenv
pop
push
jge
shl
pop
inc
js
bound
xchg
xor
sub
movs
sbb
push
mov
inc
movs
jnp
mov
es
jb
xchg
fidivr
xchg
cmp
ret
gs
mov
(bad)
xchg
icebp
gs
inc
into
leave
cmc
inc
test
xchg
(bad)
sahf
dec
imul
sub
or
mov
jne
cmp
xor
sbb
icebp
pop
shl
fdiv
or
out
fnstsw
xor
or
aam
in
xor
mov
pop
retf
and
adc
stos
xchg
xchg
inc
test
mov
lds
xor
pop
stos
add
push
cmp
mov
dec
lock
jmp
push
adc
cmp
inc
push
xor
and
mov
jg
out
pop
mov
adc
les
mov
inc
loop
add
test
arpl
cmp
imul
mov
fst
cmp
stos
and
loope
adc
aad
retf
push
adc
xor
jbe
inc
ret
je
push
mov
lea
push
add
iret
push
pop
mul
fwait
mov
cmp
jno
xchg
add
pusha
mov
fsubp
mov
stos
test
sbb
mov
adc
call
cdq
sar
sbb
mov
adc
pop
mov
ficomp
fisub
js
movs
sbb
pop
fiadd
jmp
adc
and
and
xor
fcom
pusha
test
loopne
test
jbe
mov
repnz
xchg
repz
add
cdq
shr
xchg
rol
aad
jno
mov
add
jecxz
pop
xlat
icebp
out
dec
mov
es
test
dec
mov
mov
jbe
and
ret
adc
sub
hlt
fwait
mul
sbb
push
jbe
aam
mov
inc
and
jno
call
stos
loope
fwait
push
stc
push
call
dec
rep
xor
iret
push
or
mov
mov
mov
movs
xlat
mov
(bad)
pop
inc
lds
ins
gs
dec
inc
jne
std
daa
or
(bad)
add
lock
sub
in
imul
add
movs
mov
push
sub
jge
xchg
jecxz
adc
in
xchg
cld
loopne
mov
adc
test
add
mov
push
mov
mov
push
sbb
mov
xchg
jmp
rcr
xchg
mov
mov
retf
in
push
cmps
push
sti
mov
mov
mov
stos
or
in
imul
sub
cmps
les
sbb
fs
mov
sbb
jge
gs
mov
(bad)
aad
(bad)
(bad)
xor
lds
add
pop
jne
inc
test
sub
ss
and
sbb
retf
aam
jns
xchg
not
jb
jmp
xchg
xchg
test
mov
data16
sub
sbb
xor
mov
inc
stc
test
push
aad
mov
cmp
xchg
adc
pop
aam
or
mov
mov
inc
cmps
mov
cmps
stos
repnz
outs
dec
(bad)
leave
xor
or
push
imul
arpl
daa
je
cdq
adc
addr16
sub
jns
ror
inc
jmp
rcr
mov
push
and
jg
test
lahf
ficomp
(bad)
adc
push
pop
cmc
add
(bad)
sti
and
test
and
cmps
cli
pusha
out
or
adc
mov
test
mov
in
pop
cwde
xchg
push
push
call
loop
xor
lock
imul
xor
pop
xchg
sub
and
push
(bad)
cmp
mov
sbb
(bad)
retf
arpl
mov
xchg
es
sub
movs
dec
test
popa
test
mov
std
es
or
add
mov
xor
xchg
mov
aam
outs
jle
jbe
retf
pop
cmp
in
cdq
cmps
cmp
mov
or
mov
out
or
imul
pop
and
xlat
jne
and
lahf
xor
test
pop
cmc
jmp
sub
lock
or
xchg
jae
mov
xor
inc
rcl
or
xor
push
xor
loope
xor
test
daa
xchg
adc
and
gs
adc
sub
and
scas
adc
les
bound
xor
outs
rcl
bound
add
mov
sbb
lods
lahf
pushf
scas
retf
stc
cli
lds
retf
jmp
push
(bad)
mov
inc
lds
xchg
or
sbb
and
imul
xor
add
jg
mov
imul
mov
aam
in
xchg
cmp
(bad)
in
adc
outs
push
cli
(bad)
cs
sub
or
mov
dec
inc
inc
inc
mov
test
cmps
and
ror
cmps
sar
cmp
imul
push
out
or
sbb
cmp
xchg
fadd
jbe
iret
mov
mov
mov
shld
mov
repz
mov
(bad)
mov
popa
jbe
or
dec
xchg
and
inc
lock
es
retf
rcr
cld
fs
mov
jo
add
xchg
stos
push
aad
mov
jae
and
repnz
cs
jmp
stos
push
ss
push
push
fwait
movs
cmps
xor
mov
test
sub
(bad)
data16
xchg
mov
xchg
(bad)
mov
pop
or
cmps
(bad)
retf
(bad)
jmp
sti
scas
pop
lahf
push
leave
lods
cdq
mov
hlt
lods
pop
mov
xor
and
outs
sub
out
push
les
iret
mov
scas
call
(bad)
cdq
loope
test
xchg
inc
inc
jno
je
dec
push
sar
ins
mov
xor
mov
sub
sub
dec
stos
adc
jne
sbb
cli
inc
(bad)
(bad)
xchg
movs
test
hlt
jno
in
add
xchg
les
and
inc
pop
jecxz
push
test
add
(bad)
mov
cmp
(bad)
adc
xchg
out
fld
xor
cmp
es
nop
rol
cmp
xor
js
aas
cmp
xor
test
out
cmp
sub
mov
dec
push
repnz
dec
mov
(bad)
xlat
push
int3
lods
cmc
mov
les
xor
or
inc
ja
mov
cmps
pop
jnp
loop
repnz
fsub
and
cli
push
push
sub
(bad)
adc
push
cmps
out
pop
mov
xlat
push
loopne
push
xor
xchg
pop
add
pop
jmp
pushf
scas
cmc
gs
push
xchg
jl
add
rcl
mov
test
iret
pop
out
xchg
imul
cmp
in
adc
jle
xor
dec
push
sbb
test
dec
pop
std
jo
cmp
inc
(bad)
aad
sbb
inc
push
test
jg
xor
push
push
stos
and
addr16
or
stos
pop
(bad)
xor
adc
push
mov
inc
mov
add
jbe
or
mov
mov
mov
rol
movs
hlt
add
xor
add
into
cmp
jae
(bad)
add
dec
or
mov
jne
in
arpl
aam
pop
aaa
les
dec
fcom
push
sub
je
movs
or
and
jno
xor
sub
popf
cmp
fmul
adc
(bad)
jmp
mov
adc
push
out
or
inc
call
and
inc
sti
mov
gs
mov
pop
jno
out
test
cmps
cmp
movs
jns
rol
cs
imul
hlt
fnsave
dec
mul
inc
jnp
mov
out
inc
shl
mov
xor
push
(bad)
mov
lea
pop
jecxz
div
xlat
(bad)
and
xchg
push
add
in
jp
scas
fsubr
sub
add
push
inc
movs
inc
aaa
test
cmp
out
mov
test
xchg
cmp
pop
ins
out
outs
cmc
mov
lods
add
seto
in
xor
(bad)
jmp
in
repnz
mov
test
and
sahf
mov
mov
movs
jns
jns
leave
adc
jnp
sub
jbe
rol
seta
mov
ret
mov
mov
xchg
sub
push
neg
in
movs
mov
fwait
xchg
push
sbb
ficom
addr16
inc
cmps
jge
mov
add
leave
and
pop
or
aaa
jae
fwait
movs
aad
sub
jae
cmp
or
fld
call
and
xrelease
mov
mov
cwde
and
mov
push
retf
pop
jno
cmp
mov
ss
in
in
aam
xchg
push
in
adc
mov
data16
cmps
push
ret
or
sbb
aam
cmp
or
mov
inc
aam
xchg
jae
mov
push
scas
nop
mov
(bad)
sub
adc
loopne
fs
movs
mov
push
in
pop
inc
pop
div
fwait
pop
dec
sub
xchg
out
cmp
cmp
or
in
jle
es
inc
retf
xor
fld
dec
inc
inc
sti
cwde
imul
push
repz
mov
gs
retf
out
div
sub
dec
inc
adc
or
cmps
test
push
cmp
gs
pop
daa
sbb
inc
jmp
mov
addr16
sub
or
xchg
mov
jne
xchg
sbb
jne
fs
push
cli
inc
imul
aaa
jne
sbb
lds
adc
fidivr
ret
gs
and
inc
mov
mov
and
cmp
imul
lock
(bad)
mov
imul
and
pop
or
in
je
inc
addr16
xchg
sbb
sub
push
lock
adc
mov
arpl
xchg
mov
(bad)
iret
scas
leave
ss
sub
pop
scas
pop
push
sbb
fwait
in
fcomp
sahf
call
(bad)
aas
movs
mov
cmps
aam
pop
pop
mov
cmp
adc
add
push
fdivr
aad
into
or
sub
fnsave
mov
xlat
clc
inc
stc
xchg
sar
test
push
xor
test
xchg
mov
mov
loopne
imul
imul
ret
xor
les
push
sbb
adc
xor
dec
movs
xlat
fs
mov
retf
adc
pop
xchg
adc
sbb
ss
aad
ds
(bad)
jmp
sbb
xor
xchg
outs
inc
push
out
sub
mov
jmp
mov
es
pop
mov
arpl
push
cmp
or
cmp
xor
aam
mov
rol
test
jo
bound
jg
gs
movs
inc
call
lahf
jne
js
fwait
mov
scas
or
cwde
movs
or
fsubr
leave
inc
imul
dec
inc
frndint
dec
gs
aaa
aam
pop
jnp
dec
mov
xor
mov
addr16
lds
js
sub
and
enter
jbe
and
cdq
and
and
gs
xrelease
add
inc
jae
mov
sti
push
sub
fdiv
mov
xchg
in
inc
imul
inc
cmp
pop
and
in
jg
lds
rcl
scas
clc
xlat
adc
test
imul
test
in
test
xor
mov
gs
xlat
daa
or
and
ja
addr16
push
(bad)
dec
sub
jne
add
pop
fwait
cmps
inc
pop
inc
out
aaa
cmc
daa
sbb
cmc
lea
push
push
xchg
xchg
std
mov
adc
pop
stc
xor
pop
pop
inc
pusha
push
outs
push
and
inc
gs
lds
lds
jge
lds
xchg
sbb
bnd
in
pop
cmp
lea
out
inc
adc
or
adc
push
(bad)
lds
dec
xchg
sbb
push
ss
addr16
or
cmp
jne
repnz
movs
cld
pop
jns
push
xchg
xchg
(bad)
push
and
in
push
imul
cmp
repz
sbb
(bad)
imul
(bad)
xchg
adc
push
sbb
ja
pop
add
push
add
fs
hlt
mov
sti
cs
hlt
int3
push
fadd
cmp
xchg
inc
pop
jmp
dec
fs
mov
adc
daa
clc
je
mov
mov
test
sub
aad
(bad)
dec
and
inc
mov
sti
mov
cmps
add
mov
mov
push
je
cmc
addr16
mov
mov
cwde
pop
jp
mov
push
dec
fistp
stos
jb
mov
test
hlt
mov
pushf
(bad)
push
mov
mov
retf
xlat
jmp
cmp
gs
mov
fsubr
cmp
xchg
mov
clc
shl
push
pop
leave
pop
push
mov
xor
xchg
fidiv
imul
daa
mov
int
pop
push
loop
shl
and
call
dec
inc
leave
dec
(bad)
in
sub
test
leave
push
cmp
inc
mov
cwde
arpl
out
xchg
movs
xchg
js
aas
pop
fisub
xchg
pop
push
int3
movs
sbb
mov
jbe
imul
ja
(bad)
shr
adc
jge
aaa
adc
xchg
sbb
js
cdq
lods
out
in
push
loopne
adc
(bad)
xor
retf
out
pop
fs
jecxz
jnp
dec
sbb
mov
dec
dec
test
rcr
or
or
sti
and
ret
jne
gs
xor
xchg
and
mov
fnstenv
out
lods
jle
mov
dec
mov
lods
jno
sub
mov
lods
(bad)
enter
xchg
add
and
mov
xchg
mov
and
(bad)
push
xchg
daa
xor
cmps
rol
neg
push
clc
or
icebp
cmps
adc
data16
and
fs
add
or
adc
aaa
xor
mov
fucomi
push
xchg
movs
mov
test
shr
(bad)
(bad)
ds
mov
or
hlt
out
pop
mov
cmps
sub
test
rol
mov
xchg
test
cmps
xor
scas
inc
inc
jmp
out
sub
mov
dec
hlt
adc
jbe
push
aam
in
mov
les
xchg
xchg
and
(bad)
fsubr
jne
hlt
mov
xchg
jno
mov
or
jne
dec
neg
cs
and
jbe
neg
cmp
es
repnz
jbe
inc
cli
pop
aad
test
xchg
cld
xchg
adc
inc
sub
dec
cmp
add
pop
jmp
test
mov
push
not
mov
mov
sub
dec
mov
or
mov
nop
cmp
jne
adc
call
or
mov
push
leave
adc
retf
retf
sbb
cdq
cli
xchg
pop
mov
mov
je
loopne
add
sbb
shl
outs
or
in
imul
gs
loop
mov
or
adc
stos
aad
leave
jecxz
pop
cli
mov
pop
in
pop
sbb
cmp
aad
sub
push
mov
pop
div
mov
lds
cli
jae
fadd
mov
test
jnp
addr16
out
push
inc
rcl
xchg
icebp
pop
scas
sti
shl
mov
push
xchg
push
cmc
mov
mov
cmp
je
stos
add
fld
retf
push
repz
int3
xor
fwait
dec
sub
sbb
xchg
and
loope
idiv
dec
(bad)
and
push
fnstcw
mov
pop
pop
xchg
jp
mov
test
rcl
enter
and
stos
xor
sub
imul
add
jmp
imul
dec
or
cmp
test
push
xor
push
adc
imul
or
sbb
xor
pop
mov
test
into
adc
jmp
test
pop
cdq
outs
sub
pop
xchg
cwde
cmps
sbb
mov
hlt
imul
les
stc
imul
cmp
cdq
sti
adc
addr16
jmp
aad
lds
push
enter
inc
jne
inc
sahf
cmp
inc
dec
sub
mov
(bad)
jns
js
lods
add
push
mov
cmp
mov
push
jns
push
push
push
call
mov
or
dec
in
inc
(bad)
mov
jae
xchg
mov
dec
cwde
mov
imul
les
rcr
mov
test
neg
jle
jnp
mov
sahf
xor
(bad)
repz
push
mov
leave
test
popa
sub
inc
dec
aaa
cmp
js
imul
add
test
div
push
fs
push
out
mov
cmp
mov
and
adc
je
fcom
adc
or
lds
inc
mov
test
leave
movs
jnp
enter
leave
jmp
inc
add
(bad)
sub
shl
daa
dec
bswap
xlat
mov
dec
and
lds
pop
add
(bad)
in
push
arpl
clc
mov
sbb
mov
sub
mov
cmps
div
ja
aam
pop
xor
repnz
aaa
icebp
sub
or
in
ins
ss
mov
mov
test
adc
mov
add
jmp
and
sbb
xchg
sbb
int3
sbb
pop
mov
add
call
push
or
lds
movs
xchg
imul
jb
and
jnp
xchg
xchg
or
and
rol
ja
inc
fcmovnu
in
sbb
fs
sub
scas
xor
cmp
dec
inc
aad
movs
sbb
not
(bad)
(bad)
rcr
mov
push
mov
add
ror
hlt
mov
push
stos
(bad)
push
xor
mov
shl
aam
out
push
inc
inc
js
adc
cmc
sbb
inc
test
mov
mov
mov
xchg
xlat
inc
cli
lock
loopne
sbb
pop
mov
mov
retf
inc
mov
push
stc
or
leave
xchg
mov
jle
retf
out
enter
push
jo
sub
imul
stos
and
sbb
scas
xor
out
retf
pop
mov
les
inc
aas
sbb
(bad)
xlat
jp
mov
xchg
pop
mov
inc
pop
rcl
sbb
add
inc
in
jmp
xchg
adc
inc
add
pop
inc
(bad)
int3
inc
loope
fldenv
sahf
lds
idiv
or
mov
call
hlt
mov
mov
dec
mov
push
xchg
adc
push
sub
(bad)
out
and
jno
xchg
inc
leave
push
popf
pop
movs
xor
xor
inc
add
ds
adc
leave
outs
adc
push
(bad)
neg
movs
ret
out
adc
cmc
mov
clc
inc
in
loop
add
ss
sub
push
or
cmps
je
inc
adc
data16
addr16
or
jae
dec
cmc
cld
movs
xchg
imul
push
das
aam
cli
jb
dec
je
test
or
imul
mov
aad
push
jb
(bad)
std
add
mov
xor
shr
mov
lgs
test
stos
mov
rcl
sbb
jecxz
jmp
add
shr
xchg
cmp
mov
push
inc
pop
in
xchg
and
loopne
and
pop
xor
mov
pop
mov
inc
jg
xor
iret
add
ds
jne
movs
imul
aaa
aad
adc
pop
shl
in
xor
sahf
cmps
enter
test
fdiv
lahf
mov
scas
mov
jne
mov
lods
jno
repnz
div
xchg
xchg
sbb
loopne
sbb
jmp
jbe
and
fst
jno
shl
out
adc
jnp
pop
mov
xchg
retfw
js
adc
outs
xchg
gs
sbb
xchg
aaa
movs
popa
nop
ja
movs
xchg
scas
aad
fst
bound
dec
cmc
mov
shl
adc
jae
and
pop
int3
aam
and
popa
mov
adc
fist
push
jmp
xchg
loopne
fadd
mov
mov
mov
sub
daa
xor
cmp
inc
mov
and
out
gs
add
add
push
out
jae
or
lods
inc
mov
in
hlt
inc
stos
jns
repz
mov
(bad)
jne
mov
pop
cmc
xchg
loope
xchg
lods
push
mov
cld
jbe
rcr
aam
test
xor
hlt
iret
adc
jno
loop
nop
inc
(bad)
pop
dec
fiadd
sbb
lds
adc
(bad)
imul
movs
dec
and
push
and
cdq
(bad)
hlt
bnd
fistp
xchg
dec
outs
out
adc
scas
ins
and
test
dec
add
imul
fist
gs
or
pop
or
jle
pop
cmps
push
mov
and
ret
inc
dec
test
aam
movs
xchg
jmp
or
cmp
jnp
aam
std
xchg
xor
stos
enter
imul
push
mov
mov
push
jb
jne
lods
mov
xchg
mov
jo
je
bnd
xchg
fs
jnp
fdiv
pop
mov
jns
into
push
in
push
rol
jno
fdiv
ret
not
or
or
adc
add
dec
sub
loope
xor
repnz
pop
sar
xor
fwait
pusha
stos
mov
(bad)
jno
(bad)
je
push
aam
xchg
je
ja
cld
enter
daa
or
ret
push
jb
addr16
lods
loop
(bad)
sub
imul
jmp
call
pop
xchg
cmc
test
cmp
adc
pop
sub
das
xchg
retf
dec
add
jo
lods
jg
sub
xchg
fwait
dec
repnz
out
add
out
xor
push
mov
fidivr
push
add
shl
call
mov
cli
fwait
scas
icebp
(bad)
in
retf
in
scas
push
mov
dec
inc
cmp
add
add
push
push
jmp
dec
cmp
aad
stos
adc
loop
sbb
cmp
jnp
jmp
mov
fsub
out
xchg
fidiv
shr
pop
push
xchg
and
gs
pop
pop
dec
mov
fwait
fs
out
sbb
push
xor
xchg
es
and
mov
aad
(bad)
xor
jne
loope
stc
call
jmp
fs
out
out
and
daa
xor
cli
mov
stc
xchg
daa
call
scas
jae
(bad)
jne
xlat
adc
xlat
retf
outs
iret
lods
cmp
movs
push
and
gs
add
in
stc
popf
cli
repz
mov
ret
push
cmc
test
or
es
push
jmp
jne
xchg
sub
fadd
sbb
mov
cmp
addr16
push
add
rol
ja
call
adc
cmp
daa
or
pop
xchg
(bad)
stos
sbb
mov
cmp
add
(bad)
xchg
das
jne
ds
inc
and
mov
mov
push
mov
fnstenv
scas
or
cmp
stos
add
jne
lods
ds
and
aaa
mov
jo
jnp
fstp
pop
sbb
push
push
test
mov
test
push
enter
push
add
aaa
lds
xlat
in
xor
jns
imul
aaa
pop
cwde
xchg
pop
sub
aad
fcom
jmp
adc
out
not
cmc
cmc
adc
pop
sti
and
stos
jp
in
clc
test
data16
sub
(bad)
retf
pop
in
xor
or
mov
gs
and
pop
jmp
cmps
pop
adc
xor
pop
mov
test
enter
push
les
cld
out
pop
or
xchg
cli
(bad)
push
outs
push
pop
adc
cld
ret
add
mov
adc
loopne
sbb
cmps
mov
(bad)
pop
ret
dec
sub
inc
push
adc
daa
push
inc
stos
mov
mov
jmp
div
push
or
inc
cmp
es
jecxz
sbb
(bad)
sub
dec
xor
pop
push
cmc
(bad)
sub
jg
mov
fprem1
movs
retf
ins
cmc
cmps
movs
lods
xchg
cmp
mov
addr16
arpl
js
mov
jb
outs
int
inc
stos
repz
push
adc
push
jp
call
mov
xor
fdivr
test
mov
mov
and
js
lahf
add
rol
sub
inc
jnp
adc
js
shl
mov
dec
sahf
or
out
sti
xchg
xchg
or
xchg
rcr
div
ficomp
adc
adc
jo
mov
jmp
rol
adc
test
cmc
cmp
pop
mov
sub
or
popf
add
jnp
imul
add
cmc
or
mov
fsubp
and
xlat
rol
push
inc
cmp
fsubr
fbld
ja
push
int
cwde
xchg
loopne
mov
(bad)
enter
inc
fisub
(bad)
mov
add
dec
mov
mov
ss
fist
fcmove
push
mov
js
cmp
mov
(bad)
sbb
add
ja
xchg
mov
xchg
ins
test
pop
add
repz
sub
cmc
cmp
mov
inc
(bad)
arpl
outs
rcr
in
repnz
xlat
and
pop
adc
pop
mov
movs
retf
test
popa
mov
stos
lock
xchg
sub
mov
or
xchg
repz
jns
enter
(bad)
into
loop
out
bound
xchg
test
in
inc
cmc
rcl
test
mov
cmp
in
into
or
xlat
aaa
ret
cs
mov
push
int
sub
inc
dec
mov
jmp
gs
inc
rcr
out
movs
call
add
cmp
test
jb
sbb
mov
xor
dec
mov
pop
ja
xchg
push
aad
and
push
jae
jbe
cmp
sti
and
cli
shr
and
pop
sub
popa
les
shl
fs
adc
test
dec
jbe
pop
push
fst
dec
inc
ss
fwait
aas
std
in
add
lods
or
stos
add
mov
sbb
cmp
mov
(bad)
and
sahf
mov
mul
movs
mov
dec
sbb
cmp
shr
fcmovb
shl
fstp
mov
and
and
sbb
rcl
shl
outs
leave
push
sub
es
ror
in
cmps
add
adc
xor
inc
lds
and
xchg
mov
jp
jle
adc
stos
push
out
xchg
aam
add
out
das
out
cmc
mov
daa
mov
jecxz
push
ret
shl
mov
mov
aaa
add
cwde
movs
inc
xor
(bad)
cli
push
mov
mov
xchg
sub
or
outs
push
push
dec
mov
fmul
dec
or
xor
xchg
and
leave
push
xor
loopne
(bad)
adc
addr16
mov
jnp
(bad)
nop
cmp
inc
cmps
cmp
push
adc
fdivr
shl
in
out
xor
pop
mov
and
stos
sbb
xlat
adc
jb
dec
push
aaa
mov
mov
adc
call
mov
push
popa
xchg
or
adc
mov
fs
call
push
nop
push
aad
jmp
xor
pop
mov
xchg
xchg
leave
fcmovu
retf
fnsave
lahf
push
or
push
retf
repz
pusha
or
sub
cmp
into
jmp
ret
cs
(bad)
cmp
mov
push
dec
adc
sti
mov
fnstenv
mov
pusha
pop
out
xchg
inc
mov
dec
idiv
dec
(bad)
out
push
imul
dec
mov
push
cmps
push
sahf
loop
add
mov
ror
mov
jmp
jmp
add
and
inc
dec
mov
xchg
js
or
shr
mov
shl
es
xor
or
retf
pushf
rcl
loope
adc
jb
retf
xor
loope
sub
mov
mov
inc
pop
mov
mov
nop
scas
rol
mov
ss
out
lods
inc
jecxz
test
outs
lahf
push
test
or
outs
pusha
xchg
daa
mov
sub
dec
xchg
sub
retf
xor
loope
adc
inc
pop
mov
retf
popa
inc
xlat
and
mov
mov
call
add
mov
adc
enter
mov
icebp
jg
mov
jne
xor
or
xor
imul
and
test
jne
xchg
sar
and
xor
xchg
and
pushf
jmp
mov
push
stos
jne
push
lock
cdq
mov
clc
adc
enter
mov
aaa
out
and
ins
push
add
enter
sub
xor
xor
cmc
sbb
cmc
mov
push
and
push
add
(bad)
repnz
inc
popf
jmp
aad
or
cwde
and
xchg
and
jno
pop
pop
xchg
mov
mov
jo
movs
mov
push
add
jb
add
and
dec
loope
push
mov
inc
ins
jmp
lock
ins
clc
and
ja
adc
pusha
movs
ret
pop
mov
mov
pop
mov
rol
lods
popf
cmp
cmc
xchg
aad
jl
jmp
jo
test
aam
sub
jle
imul
sub
scas
and
jbe
xor
mov
jno
push
loopne
dec
add
popf
test
fwait
push
mov
push
and
ins
jge
rcr
and
and
int3
in
mov
sar
in
dec
gs
in
mov
mov
outs
xor
loope
in
in
fld
sub
in
rol
mov
outs
dec
shl
(bad)
outs
outs
shl
out
sub
loop
inc
rol
hlt
and
adc
sar
pushf
adc
sub
lea
sub
movs
mov
and
mov
shr
mov
xor
in
mov
repnz
inc
rcr
xchg
shl
mov
mov
inc
rol
push
call
lods
call
ret
cmc
add
add
jne
lea
mov
add
dec
call
inc
rcr
add
in
xor
leave
mov
sbb
dec
in
cmc
mov
xor
test
inc
aad
cmc
dec
gs
lea
inc
sbb
adc
cmp
jne
sbb
jne
and
shl
add
sbb
out
cmp
mov
adc
mov
sbb
push
in
ins
inc
nop
outs
data16
dec
lea
cmp
jg
into
gs
dec
mov
jb
and
add
mov
or
arpl
cmp
pop
shl
in
in
in
mov
pop
(bad)
xchg
cmps
add
sub
iret
mov
mov
adc
imul
pop
jmp
push
(bad)
pop
pop
and
lock
stc
push
mov
lock
addr16
xchg
pop
fldenv
mov
popf
fst
sbb
ins
in
ins
in
leave
rcl
adc
push
or
sbb
pop
shl
pop
pop
test
sbb
sbb
jle
mov
pop
test
ficom
sbb
xor
sbb
jnp
stos
pop
xchg
sbb
shr
scas
sbb
pop
pop
clc
pop
lahf
pop
pop
pop
sbb
popa
loope
fcomp
pop
pop
ficomp
pop
ficomp
popf
add
jge
shr
scas
xor
addr16
jmp
push
cmps
fstp
ror
or
push
call
and
ror
mov
inc
frndint
jns
shr
es
sbb
stos
sar
adc
popf
xchg
pushf
movs
jge
sbb
dec
sbb
push
lods
call
pop
pop
mov
lods
sub
sub
or
stos
pop
rcr
pop
fnop
std
aam
fldcw
or
pop
call
dec
jmp
push
sbb
clc
shl
lds
jle
and
stc
mov
shl
push
mov
jnp
hlt
movs
cmps
add
movs
mov
jle
push
cmp
lds
inc
jnp
pop
inc
fsub
cmp
cmc
repz
mov
jae
repz
add
pusha
aas
cmp
stos
inc
adc
jl
icebp
xchg
sub
sub
popa
hlt
and
jl
repz
clc
icebp
xchg
hlt
pop
nop
mov
adc
rol
adc
hlt
inc
cmps
call
jle
icebp
clc
sar
and
and
jno
cmp
sub
mov
loope
test
mov
mov
mov
clc
sahf
mov
push
in
clc
retf
lods
or
fmul
rep
xor
adc
popa
mov
in
pop
sub
popa
clc
inc
sub
loope
inc
repz
movs
mov
xor
cmp
xchg
js
mov
call
adc
js
js
js
mov
loopne
mov
loope
popa
xor
sub
clc
pop
jne
inc
cmc
mov
or
add
inc
mov
xchg
pop
sbb
mov
add
jle
sub
clc
mov
nop
cmc
pop
mov
mov
call
mov
mov
mov
int
loope
cmp
hlt
movs
ret
and
in
sbb
mov
imul
shr
cdq
xchg
mov
adc
aas
mov
fwait
xor
in
jae
daa
(bad)
jg
repz
int3
dec
sahf
xor
fyl2xp1
shl
cdq
fadd
pop
(bad)
and
cmp
mov
jns
std
cld
repz
aas
cmp
mov
movs
and
sub
aam
daa
mov
dec
xor
fs
imul
xchg
push
ja
xchg
push
repz
and
cmp
mov
fist
ret
repz
and
jae
xchg
xor
daa
fcomp
sti
movs
repz
mov
mov
mov
sub
sub
(bad)
iret
stos
out
sbb
sbb
inc
push
dec
add
pop
fisub
nop
push
inc
jae
mov
ret
fcomp
pop
jle
in
retf
repnz
ds
cmc
(bad)
xchg
cdq
inc
mov
pop
cdq
cld
mov
ins
int
inc
adc
jmp
hlt
aam
cmp
add
mov
jnp
cmp
jae
jge
add
and
nop
(bad)
mov
lea
inc
jge
jns
push
push
cld
mov
aaa
mov
sub
aaa
inc
lea
sbb
jae
and
bound
div
pop
or
cmp
and
push
data16
inc
das
mov
test
cmps
aam
and
jmp
xchg
repz
test
ins
(bad)
hlt
data16
shl
js
in
arpl
ja
out
iret
jns
mov
test
push
arpl
fs
sbb
stos
mov
inc
dec
cmps
mov
out
cmps
mov
(bad)
addr16
nop
cmps
clc
fs
ja
dec
shl
movs
pop
inc
jle
outs
jecxz
mov
in
cmps
repz
aaa
pop
outs
inc
out
pusha
inc
test
addr16
xchg
enter
clc
lahf
in
sub
stos
xor
sub
repz
ja
arpl
cmp
jae
aaa
dec
xlat
sub
repz
mov
push
ja
cmps
adc
(bad)
(bad)
xchg
jnp
push
div
add
aaa
add
adc
pop
push
push
sti
inc
lods
(bad)
xor
pop
in
jmp
jbe
pop
mov
cmps
push
addr16
mov
or
out
sub
repz
in
outs
adc
inc
lahf
adc
cmp
lahf
jae
cmp
xchg
addr16
adc
out
fs
adc
mov
jns
jae
add
repz
adc
test
push
and
cmps
pop
gs
push
push
mov
(bad)
push
jbe
daa
sbb
mov
push
cs
in
rol
sbb
xchg
in
js
adc
mov
push
push
div
inc
xlat
test
ja
jle
popa
in
adc
sub
push
shl
neg
xor
(bad)
and
xchg
mov
cmps
push
out
lods
xchg
or
or
pop
sahf
fild
mul
sbb
ja
xchg
aas
mov
sub
iret
in
jnp
push
dec
pop
mov
stos
sbb
fistp
adc
mov
mov
call
xchg
stos
pop
mov
loopne
inc
adc
repnz
sbb
pop
add
xor
cwde
inc
pop
pop
or
mov
(bad)
jmp
rep
ror
aas
or
xor
sub
movs
pop
xchg
jg
or
jo
push
out
aad
push
sbb
jge
retf
xchg
dec
(bad)
or
pop
js
xchg
dec
add
adc
loope
push
nop
add
out
scas
and
fisubr
call
xchg
repz
nop
daa
pop
pop
push
inc
push
add
ret
retf
daa
pop
addr16
scas
sbb
fisttp
aas
sbb
push
jmp
inc
repnz
dec
je
sub
xchg
fisubr
or
adc
sbb
or
cmp
mov
mov
retf
inc
pop
sub
dec
rcr
pop
rep
sbb
mov
pusha
fist
jl
retf
dec
and
fwait
sbb
sbb
jmp
bound
cld
repz
pop
imul
das
sbb
retf
loopne
mov
sti
fisttp
pusha
sbb
sbb
pop
sbb
mov
fisttp
inc
sbb
push
jmp
push
in
fcmovnu
dec
xchg
sbb
(bad)
jmp
push
imul
adc
pop
imul
cwde
push
(bad)
fcmovnb
sbb
xor
call
cmp
inc
pop
cmps
mov
aas
inc
imul
dec
pop
xor
mov
(bad)
out
dec
and
rcl
cmp
aaa
xchg
imul
aad
cmp
or
sub
sbb
add
mov
xor
pop
fs
and
add
sbb
stc
in
push
frstor
lods
xor
lods
adc
pop
icebp
sbb
in
test
pushf
sub
lock
test
das
test
and
mov
mov
in
push
gs
mov
pop
or
xchg
jge
bound
mov
pusha
mov
sub
adc
(bad)
dec
dec
dec
hlt
add
push
lods
stos
mov
push
cmps
in
mov
lods
fcomp
inc
mov
xor
call
ret
clc
cmc
aam
out
inc
mov
lods
dec
jl
in
ror
jecxz
and
jno
fs
mov
pusha
xchg
test
lock
push
in
enter
and
int
test
fsub
jae
cs
push
shl
pop
sbb
jb
and
sbb
mov
loopne
int
jl
enter
add
or
sub
pop
inc
inc
add
mov
fs
sbb
and
inc
dec
lock
and
or
add
fld
loopne
pop
inc
imul
inc
popa
and
adc
cmp
add
add
(bad)
lods
inc
adc
mov
stos
and
nop
in
dec
inc
push
pusha
mov
sbb
pop
jmp
inc
adc
add
and
call
in
loop
push
popa
scas
lds
push
pop
add
push
add
test
xor
add
adc
popf
sub
in
in
pusha
js
inc
fs
loope
jno
or
cmp
push
int
cmps
out
scas
xchg
and
in
jg
push
aad
aam
pop
sub
gs
nop
movs
ret
mov
pop
out
mov
sbb
push
ror
nop
and
xlat
adc
cwde
add
test
movs
adc
cmps
ror
sbb
sbb
mov
xchg
push
test
sub
retf
xchg
and
sub
enter
ja
sub
dec
scas
adc
ja
call
sbb
adc
js
scas
nop
rcl
enter
idiv
push
pop
sub
fcom
pusha
nop
test
or
jg
dec
sahf
sbb
adc
xor
and
adc
jle
add
mov
dec
adc
scas
and
sub
loopne
clc
adc
movs
test
push
sbb
aad
fst
cdq
or
push
fstp
push
sub
adc
pop
sub
mov
jo
ja
xchg
scas
or
and
push
push
pop
add
adc
cmp
rcr
xchg
or
movs
adc
push
and
enter
and
or
cmp
dec
stos
cld
dec
shr
sub
add
mov
jecxz
imul
mov
xchg
imul
pop
push
fwait
cmps
xchg
xchg
mov
cmps
xchg
xchg
mov
cmps
xchg
xchg
mov
xchg
mov
inc
arpl
stos
xchg
icebp
aam
sub
and
in
imul
pop
cmps
xchg
xchg
mov
into
ds
pop
xchg
mov
mov
dec
ss
daa
cmps
xchg
jb
jmp
mov
adc
xlat
push
scas
mov
outs
dec
dec
or
or
outs
dec
dec
mov
dec
dec
or
or
outs
dec
dec
mov
dec
dec
or
or
outs
dec
dec
mov
dec
dec
or
or
outs
dec
dec
mov
dec
dec
or
or
xchg
mov
sub
mov
or
ins
and
leave
wbinvd
pop
cmp
pop
retf
mov
pop
xor
and
dec
sbb
test
mov
and
cmp
loope
js
fild
neg
cmc
mov
cmps
mov
jle
(bad)
cmp
sbb
dec
sbb
ins
mov
outs
dec
dec
jmp
daa
xor
mov
cmp
xchg
cmc
and
pop
clc
shr
jmp
retf
mov
cs
sti
dec
fisttp
aad
aad
aad
aad
push
(bad)
push
in
les
inc
retf
jnp
out
test
jp
push
jmp
ret
jb
jmp
push
jns
jge
(bad)
es
(bad)
push
out
(bad)
push
daa
xlat
inc
xlat
jp
pop
ror
sti
daa
xchg
aam
jmp
scas
pop
lahf
jnp
sti
imul
jnp
dec
mov
mov
daa
sahf
or
mov
cdq
adc
movs
push
xchg
dec
xchg
sbb
clc
sbb
sub
or
lahf
daa
xchg
push
sahf
int
jmp
mov
cdq
imul
push
test
or
xchg
cs
push
sti
out
jnp
push
scas
push
cdq
jp
cli
pop
sti
mov
sahf
fstp
js
pop
jmp
out
mov
pop
sahf
sti
ds
mov
sahf
or
xchg
cmp
pop
mov
movs
or
shl
daa
xchg
dec
mov
into
jb
mov
repnz
inc
sub
inc
push
pop
lds
jbe
sbb
mov
cwde
ins
enter
out
fistp
sysexit
mov
mov
jb
add
(bad)
and
bnd
outs
push
cli
xor
cmp
pop
or
retf
jnp
pop
xor
push
sbb
cmp
pslld
popf
or
xor
xchg
and
sbb
sub
add
jl
or
into
inc
add
pop
retf
cmp
sbb
pop
add
jge
outs
cdq
sub
maxps
or
cmp
xor
pop
outs
mov
xchg
or
sbb
popf
and
add
loope
sets
repnz
push
imul
sar
mov
mov
lahf
out
int
mov
xor
sbb
jg
leave
fwait
adc
sahf
neg
xor
dec
repnz
and
outs
xor
repnz
mov
mov
repnz
shr
ret
jmp
mov
jmp
aam
ret
jmp
and
mov
jle
dec
mov
lahf
push
retf
cmps
out
enter
test
sub
enter
sahf
out
jmp
enter
cdq
mov
movs
rcr
mov
add
call
cmp
mov
loope
fcmovb
mov
dec
sahf
xchg
(bad)
movs
xchg
lea
mov
clc
(bad)
mov
scas
loop
or
sahf
call
cmps
cmps
int3
mov
imul
dec
mov
cmp
xchg
and
jo
xchg
mov
lock
rcl
movs
cmp
jae
adc
stos
js
push
xchg
push
retf
movs
xchg
sub
cmp
fsub
inc
ins
dec
fs
sti
mov
pop
mov
xor
retf
fwait
mov
jmp
data16
push
outs
cdq
sti
call
adc
jnp
push
mov
pop
outs
jmp
and
push
int
js
iret
jge
jmp
pop
pop
stc
lods
outs
stc
call
adc
fisttp
ja
push
jl
cld
sbb
mov
or
(bad)
into
dec
push
add
or
jnp
dec
mov
mov
or
and
out
sbb
dec
cwde
enter
or
cs
mov
mov
add
clc
or
sbb
ins
sahf
jge
jg
outs
sub
pmaxsw
mov
ds
mov
fdivr
lea
out
dec
std
in
jmp
mov
mov
std
and
lods
jmp
nop
add
or
dec
mov
pop
lahf
outs
(bad)
sub
test
mov
test
sbb
int
in
pop
push
pop
inc
dec
mov
or
sbb
es
cmp
cmp
push
cmp
in
or
cmp
and
sti
mov
dec
outs
into
cdq
sbb
add
jmp
neg
sahf
imul
sbb
mov
popa
xchg
repnz
jmp
bound
xor
cmp
mov
xor
mov
pop
xchg
pop
jnp
or
jg
std
imul
int
int
dec
scas
cmp
dec
dec
mov
(bad)
pop
xor
popa
cld
jo
shr
xor
sbb
pop
imul
aas
enter
ins
sar
fwait
xchg
pop
fbld
repz
dec
sbb
aas
mov
mov
fadd
popf
mov
xor
idiv
jmp
(bad)
pop
xor
std
and
fisub
retf
(bad)
in
fnstsw
mov
ret
dec
inc
or
ficom
enter
clc
shr
inc
fst
sub
mov
dec
sar
repz
mov
jg
cmp
(bad)
push
inc
pop
mov
out
push
call
ret
sub
cmp
pop
movs
xor
imul
cmp
int3
lds
imul
pop
push
test
fld
pop
aad
les
dec
sar
cmp
mov
fisub
clc
or
movs
out
push
push
inc
sub
mov
xchg
call
repnz
jae
adc
cmc
(bad)
xchg
push
inc
push
mul
push
mov
xchg
test
test
aad
add
loop
mov
xchg
jae
adc
add
push
rol
xor
loopne
add
bound
adc
add
xchg
jecxz
xlat
gs
push
mov
test
mov
push
ret
(bad)
cmp
aaa
mov
ror
mov
add
or
pop
mov
aaa
mov
xchg
add
mov
push
mov
movs
xchg
aad
iret
in
hlt
(bad)
fwait
cmp
adc
fst
xchg
cs
inc
mov
mov
adc
mov
(bad)
rol
add
or
and
fld
mov
addr16
in
shl
inc
mov
addr16
adc
adc
jecxz
mov
addr16
scas
cmp
xchg
shl
mov
xchg
loope
push
shr
xor
sub
jge
stos
xchg
shl
cmps
cwde
movs
jg
neg
mov
mov
rcl
ins
cmc
ret
ja
adc
cmp
aam
jbe
mov
(bad)
push
(bad)
arpl
mov
shl
out
imul
xchg
sti
repz
jns
aaa
ds
push
and
xchg
cmp
arpl
jge
pop
xchg
jo
mov
shl
mov
and
enter
test
outs
xchg
movs
hlt
mov
and
push
fisubr
je
cmp
aad
in
xchg
pop
sbb
push
aam
jge
pop
cmc
mov
call
and
inc
call
outs
pop
sar
hlt
mov
add
pop
icebp
test
loopne
mov
aad
jmp
sar
pop
mov
(bad)
aam
or
push
imul
mov
jecxz
mov
mov
pop
sub
adc
push
or
dec
adc
fdiv
sub
enter
test
imul
dec
sub
(bad)
stc
adc
and
(bad)
cmp
stos
pop
cmp
test
adc
pop
sbb
push
aam
addr16
inc
das
push
xchg
test
dec
cmp
cmp
push
pop
sub
dec
daa
es
dec
mov
inc
leave
dec
out
push
dec
rcr
inc
cmp
enter
int3
dec
sbb
dec
push
iret
sub
mov
imul
imul
mov
fs
cmp
leave
push
mov
push
sbb
push
jnp
xchg
dec
shl
(bad)
mov
leave
dec
cmp
pop
enter
imul
sub
sub
dec
js
mov
fdecstp
(bad)
adc
jbe
dec
pop
jns
pop
enter
sbb
scas
fmul
test
jnp
jnp
lds
pop
jmp
fisub
daa
mov
daa
retf
int3
mov
sbb
sub
inc
leave
or
or
jp
mov
dec
repz
ins
fwait
mov
pop
mul
js
es
push
leave
les
push
jns
add
stc
call
fiadd
in
call
xor
cmp
push
lds
xchg
sbb
loopne
and
cwde
fsubr
in
mov
shr
xor
or
or
js
test
and
mov
xchg
mov
mov
pop
aaa
mov
mov
mov
push
jno
mov
or
xchg
sbb
xchg
or
(bad)
sbb
mov
nop
les
sbb
lahf
sbb
cmp
repnz
sub
stc
jne
inc
scas
loop
leave
outs
in
es
fisubr
or
xchg
push
xchg
call
pop
push
(bad)
push
push
fistp
or
call
xor
repz
adc
inc
jmp
popa
(bad)
xor
pop
call
dec
into
xchg
push
xchg
mov
push
cmp
jmp
xor
cmp
adc
or
adc
shl
mov
jmp
mov
xchg
sub
or
not
ds
clc
xor
mov
icebp
adc
mov
sti
push
xchg
rol
and
xor
pop
aad
daa
mov
out
push
ds
mov
out
popf
js
aad
mov
rcr
pop
add
iret
aam
xor
outs
lods
pop
loope
sbb
cwde
mov
adc
arpl
jae
push
pusha
mov
mov
in
lods
leave
addr16
pusha
jl
lahf
shr
leave
loopne
mov
mov
pop
xor
shl
std
ret
dec
rcr
mov
add
shr
int
push
shr
and
fcmovnb
mov
stos
pop
or
mov
and
cdq
cmp
xchg
imul
ja
sub
dec
dec
push
repz
popf
mov
retf
pop
mov
(bad)
mov
xor
es
pusha
mov
adc
mov
scas
rcl
push
mov
or
sar
adc
iret
shl
pop
mov
ret
inc
je
jmp
jns
adc
fadd
ins
mov
add
mov
int
push
push
add
in
ins
xchg
cld
das
and
push
lods
inc
jno
ins
jno
xchg
sbb
cmc
daa
movs
jg
xor
push
in
popf
into
adc
aaa
lods
pop
in
jb
mov
xchg
xor
mov
adc
icebp
mov
imul
sbb
in
out
mov
pushf
ror
sub
aas
ja
enter
test
sub
sahf
ja
test
call
xor
test
nop
fwait
mov
sub
xor
fwait
leave
push
pop
inc
stos
aas
mov
mov
aam
aad
xor
pop
xor
rcr
test
adc
data16
xor
or
icebp
sub
mov
data16
jmp
out
(bad)
dec
test
cmp
punpckhbw
xor
dec
mov
call
cmp
xor
adc
cwde
mov
cmp
dec
xor
and
jecxz
icebp
stc
mov
fbld
push
mov
dec
mov
or
sbb
jg
inc
mov
cmps
jns
pop
mov
xor
repz
sahf
mov
adc
add
das
sahf
mov
cwde
call
dec
pop
hlt
je
loop
push
mov
pop
fsubrp
cdq
dec
sub
cmp
xor
sahf
inc
push
fisubr
aad
ss
fisttp
push
aas
pop
ds
test
xor
fimul
and
jl
mov
outs
or
stos
int3
sub
bnd
jb
popf
dec
cli
imul
imul
jae
cmp
mov
inc
fsubr
pop
add
mov
retf
cmp
cmp
jl
adc
mov
or
mov
scas
jnp
jp
aaa
jnp
sub
or
pop
mov
pop
xor
jp
bound
adc
fcmovbe
popa
dec
mov
fild
hlt
sbb
pop
dec
push
pop
popf
fs
jmp
in
fsubr
jecxz
int
fnstcw
mov
fidivr
popf
xchg
cmp
cmp
or
aas
lds
cmp
push
fwait
cli
adc
cmp
movs
stc
sbb
push
stos
mov
or
hlt
mov
or
lds
fwait
xchg
jl
push
pop
sbb
mov
ffreep
stos
pop
pop
cli
mov
sub
inc
add
inc
adc
cmp
mov
lea
loope
loop
mov
mov
in
outs
int3
adc
sub
or
push
retf
iret
aad
int3
pop
push
inc
push
add
or
shl
cmp
test
mov
mov
pop
call
or
jns
xchg
cwde
js
sub
int3
push
rcr
nop
sub
je
je
clc
xchg
neg
neg
aaa
pushf
ja
or
or
push
mov
test
call
push
aaa
test
add
push
or
sahf
lea
adc
repz
not
sub
xor
iret
rol
push
xchg
mov
sbb
xlat
div
cmp
or
sbb
(bad)
in
rol
mov
jg
and
mov
popa
cmp
cwde
inc
lods
popa
frstor
jns
aad
cmp
xchg
jno
mov
pop
sub
push
repnz
push
sahf
jno
addr16
inc
enter
js
out
cmc
jge
pop
xor
ds
ror
sahf
loope
test
xchg
scas
push
ins
imul
mov
add
out
nop
inc
sahf
or
sbb
mov
not
lock
or
js
xchg
pop
jmp
shl
add
xor
into
xchg
retf
addr16
ins
adc
mov
add
push
std
dec
xor
sbb
std
(bad)
out
xchg
cmp
outs
lahf
adc
icebp
dec
test
jge
xchg
mov
adc
inc
call
pop
push
scas
mov
push
xchg
or
sub
jl
jno
jl
adc
or
retf
arpl
mov
enter
adc
push
fmulp
inc
push
shl
pusha
pusha
mov
xor
dec
pop
jbe
sti
push
test
mov
(bad)
dec
jle
and
fcom
mov
jge
outs
mov
xchg
fcom
fadd
or
xor
idiv
jne
rcr
repnz
adc
or
mov
mov
pop
pop
ret
push
das
repnz
jg
retf
inc
(bad)
gs
and
ds
pop
sub
das
push
cli
xchg
cdq
mov
sbb
xor
sub
sahf
test
fiadd
ins
sub
dec
sti
aam
sub
leave
ret
stos
xor
test
je
push
je
ret
and
std
(bad)
mov
cld
push
(bad)
retf
(bad)
int3
popf
loopne
sti
std
cmc
jns
call
pop
(bad)
jmp
mov
add
pop
outs
sbb
in
or
mov
push
fdivr
stc
dec
ja
aas
adc
addr16
pop
or
push
bound
std
das
push
cmps
out
rcl
call
(bad)
mov
es
wbinvd
dec
loopne
(bad)
div
fwait
mov
(bad)
fstp
or
jb
inc
aad
cwde
pop
pop
cld
cmp
movs
sar
frndint
and
loope
xchg
lods
int
and
(bad)
aam
lods
mov
ficom
push
hlt
outs
pop
xchg
gs
mov
and
js
fwait
pop
push
xor
sbb
call
push
pusha
push
loopne
jg
mov
fisttp
scas
jge
pop
ss
rcl
add
sub
repz
rcl
adc
mov
loop
retf
mov
or
push
iret
cmp
loope
ds
imul
cld
mov
cmp
dec
sbb
and
sbb
xor
mov
adc
test
lea
xor
jne
fs
mov
stc
push
pop
std
cmp
stos
add
call
pop
out
arpl
loop
(bad)
cmps
sbb
jmp
mov
cmp
lock
jg
enter
add
cmp
pop
stos
cmp
fsubr
jge
pop
mov
mul
cmps
xor
jmp
std
arpl
mov
ja
push
movs
xor
fld
push
pop
in
jge
pop
lods
cmp
shl
popa
shl
js
pop
scas
aas
scas
fisubr
ins
shl
jl
push
cmps
aaa
cmps
(bad)
data16
gs
xor
mov
fld
push
stos
cmp
pop
mov
cmc
gs
xor
push
fidivr
pop
test
jmp
scas
ds
pop
out
jle
pop
lods
cmp
shl
(bad)
mov
jo
push
mov
mul
movs
xor
push
in
ficomp
cmp
fisubr
jle
pop
lods
cmp
ins
(bad)
jl
pop
lods
xor
shl
jo
push
cmps
cmps
aad
hlt
pop
fld
jg
pop
scas
aas
scas
fisttp
movs
mul
or
mov
ret
sar
mov
push
inc
pop
mov
daa
rcr
retf
push
fwait
inc
adc
fwait
cmp
xchg
test
mov
cwde
dec
xchg
call
cld
mov
lods
dec
sub
jg
icebp
fwait
jge
xchg
in
mov
push
dec
retf
sar
push
pop
and
cmp
aaa
lds
data16
inc
cmp
sub
mov
sbb
addr16
hlt
or
sbb
mov
(bad)
movs
jp
in
inc
jge
call
jp
push
xchg
test
sbb
inc
cmp
dec
sbb
jmp
cmc
push
xlat
jmp
mov
inc
inc
in
test
xor
fbstp
push
mov
nop
retf
sub
push
jmp
or
lods
adc
sub
jge
push
jno
xchg
gs
mov
jg
call
fwait
push
mov
xchg
mov
jno
cld
mov
inc
scas
test
into
ret
pop
stos
cmp
call
stos
xlat
cmp
iret
adc
rcr
dec
sbb
or
fld
dec
cwde
ja
or
movs
dec
call
jge
add
js
jp
inc
ret
pop
pop
pop
sbb
es
cmp
jmp
mov
aas
cmp
pop
sbb
in
xor
add
mov
lds
ins
and
mov
push
cmp
loope
push
into
sar
sbb
sbb
clc
mov
gs
cmp
sar
cli
cmp
pop
sbb
sub
outs
pop
xor
push
pop
sbb
push
mov
inc
test
push
cs
mov
push
dec
test
pushf
push
pop
xlat
inc
or
daa
xor
test
jmp
sub
push
out
fisubr
out
arpl
mov
sar
add
test
xchg
adc
inc
push
dec
stos
cmp
or
(bad)
rcl
add
int3
or
data16
(bad)
mov
push
adc
xlat
test
popf
aam
and
fsub
push
dec
out
pop
pop
push
(bad)
aam
test
nop
add
jp
nop
inc
xor
mov
xchg
in
call
ja
out
clc
adc
popa
inc
ja
jge
ins
ret
inc
sbb
jns
push
out
sbb
gs
pop
xlat
(bad)
xor
xchg
cmp
out
and
xchg
pushf
aad
jbe
mov
add
jmp
sub
jo
addr16
jg
mov
out
(bad)
lds
(bad)
imul
or
mov
scas
fidiv
push
mov
push
mov
std
xlat
adc
sar
js
push
pop
aam
inc
and
das
cmps
push
leave
pop
outs
int
inc
sub
cmp
cmp
xchg
jne
stc
mov
movs
int3
icebp
call
cmp
mov
dec
jmp
push
jecxz
add
push
sbb
imul
sub
stos
mov
imul
inc
fsubr
jle
push
push
mov
jnp
sbb
ins
xchg
jno
lock
loop
idiv
imul
pop
(bad)
sti
aas
and
xchg
cmps
push
mov
int3
es
cmps
add
jo
(bad)
out
or
js
outs
jecxz
test
loopne
fwait
mov
add
repz
out
cmp
movs
dec
not
(bad)
sub
rcl
out
push
cmps
xchg
mov
push
out
out
mov
jg
or
inc
inc
fdiv
aaa
mov
or
sbb
test
ret
sbb
add
inc
cmp
sub
sti
pop
movs
out
pop
cmp
ret
popa
shl
mov
mov
loop
mov
or
xchg
xor
push
mov
mov
xchg
stc
(bad)
lock
aad
int3
jb
inc
(bad)
sub
xor
fsubrp
scas
movs
jl
mov
neg
ret
mov
and
dec
mov
(bad)
jae
xchg
xchg
cmp
outs
push
or
xchg
ja
jb
sbb
xchg
repz
push
call
mov
les
std
push
xor
pop
mov
int
jge
mov
sahf
cmc
xchg
jp
retf
jp
adc
in
cwde
push
push
aaa
and
xor
fist
ds
out
adc
push
adc
xchg
inc
cmc
out
mov
popa
add
push
mov
mov
neg
or
push
call
and
pop
mov
jmp
mov
call
mov
ret
mov
mov
test
jne
mov
or
test
je
mov
push
call
mov
jmp
mov
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
xor
cmp
jne
push
mov
call
mov
or
pop
cmp
jmp
mov
mov
mov
cmp
jae
mov
mov
imul
mov
add
mov
cmp
jbe
cmp
je
mov
cmp
jne
mov
add
and
lea
push
and
mov
add
mov
xor
push
push
push
mov
mov
push
add
movzx
push
push
push
movzx
push
push
movzx
push
push
xor
push
call
add
jmp
cmp
jne
or
mov
mov
mov
mov
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
lea
and
mov
add
mov
xor
push
push
push
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
push
call
add
jmp
cmp
jne
push
lea
push
lea
push
push
xor
mov
mov
mov
mov
mov
call
cmp
je
mov
jmp
cmp
je
mov
lea
movs
movs
movs
movs
mov
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
push
call
push
and
mov
call
pop
pop
jmp
lea
mov
and
lea
movs
movs
movs
movs
mov
mov
imul
mov
mov
mov
mov
add
mov
movzx
push
call
mov
push
lea
mov
dec
not
and
mov
lea
and
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
jmp
movzx
cmp
jne
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
jmp
mov
jmp
cmp
jne
inc
mov
add
cmp
jne
mov
lea
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
push
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
push
mov
add
call
add
add
mov
inc
mov
mov
jmp
cmp
jne
push
mov
call
test
mov
jge
xor
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
push
call
push
and
mov
call
mov
or
pop
pop
test
jmp
mov
mov
push
and
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
mov
xor
cmp
jne
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
jmp
push
push
push
call
push
push
push
push
push
call
mov
add
cmp
jge
push
call
pop
mov
push
mov
call
mov
or
pop
cmp
je
mov
push
call
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
mov
mov
lea
push
push
push
call
cmp
mov
jl
mov
mov
lea
push
push
push
call
test
jl
mov
lea
push
push
mov
mov
push
call
test
jl
mov
mov
lea
push
mov
add
push
push
call
mov
mov
push
call
mov
mov
push
call
push
call
cmp
pop
je
push
mov
call
jmp
xor
mov
mov
mov
push
call
mov
mov
cmp
je
add
push
push
call
push
call
cmp
pop
je
push
push
mov
call
jmp
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
cmp
mov
jbe
mov
jmp
imul
push
call
xor
cmp
setne
mov
cmp
jne
jmp
mov
imul
push
push
push
call
mov
add
call
mov
call
jmp
mov
cmp
jne
xor
jmp
mov
lea
push
lea
push
push
push
call
cmp
jl
push
lea
push
mov
call
or
push
lea
push
mov
mov
mov
mov
mov
mov
call
mov
or
push
push
lea
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jge
mov
mov
push
call
mov
jmp
mov
lea
push
xor
push
mov
mov
xor
push
mov
mov
mov
mov
mov
push
call
cmp
mov
jge
mov
mov
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
mov
jle
xor
push
call
pop
mov
cmp
mov
je
push
mov
call
jmp
xor
or
mov
inc
mov
mov
add
cmp
jl
mov
cmp
je
cmp
jle
mov
push
pop
add
sub
mov
mov
jmp
mov
mov
mov
cmp
mov
je
jmp
mov
lea
push
mov
add
mov
call
mov
mov
push
push
mov
call
cmp
jne
mov
call
mov
cmp
je
mov
push
call
add
dec
jne
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
je
xor
cmp
je
inc
cmp
mov
jl
mov
mov
mov
mov
mov
cmp
je
mov
cmp
mov
je
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
mov
xor
inc
cmp
jne
mov
mov
lea
push
push
call
test
je
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
push
push
lea
call
mov
mov
push
push
push
add
call
push
push
movzx
push
push
lea
call
mov
push
lea
call
movzx
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
lea
jmp
push
push
lea
call
push
mov
call
mov
mov
mov
mov
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
mov
call
push
call
push
call
mov
mov
lea
push
push
call
jmp
sub
je
sub
je
dec
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
mov
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
jmp
push
push
lea
call
mov
mov
mov
push
push
push
push
call
push
push
push
push
push
call
jmp
cmp
jne
push
push
lea
call
mov
push
mov
call
mov
mov
mov
shr
lea
push
push
push
push
call
push
call
add
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
lea
mov
call
or
lea
push
call
cmp
jne
inc
mov
add
add
cmp
jle
cmp
jle
mov
xor
call
ret
lea
cmp
jne
mov
mov
push
push
push
call
cmp
jl
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
mov
je
mov
imul
mov
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
cmp
mov
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
lea
push
mov
call
lea
movzx
cmp
mov
mov
jl
cmp
jle
cmp
je
cmp
jne
or
push
lea
call
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
lea
push
mov
mov
push
mov
mov
push
call
push
mov
call
or
lea
push
call
inc
add
cmp
jne
inc
mov
add
cmp
jl
mov
cmp
mov
je
lea
push
lea
call
mov
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
push
mov
push
call
test
jne
inc
xor
inc
cmp
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
mov
mov
push
call
cmp
jne
cmp
jle
mov
mov
push
push
push
push
call
mov
cmp
mov
jge
mov
mov
call
mov
jmp
mov
cmp
jne
or
jmp
push
mov
call
mov
push
lea
call
xor
cmp
mov
jne
mov
cmp
je
mov
xor
cmp
setne
cmp
jne
call
mov
xor
cmp
setne
cmp
je
push
call
mov
call
mov
push
mov
call
mov
mov
cmp
je
push
mov
call
push
push
call
mov
imul
push
push
push
mov
call
add
or
cmp
je
push
push
call
xor
call
ret
push
mov
mov
test
je
mov
test
je
push
call
push
mov
test
je
mov
call
push
call
pop
and
pop
cmp
je
mov
call
mov
test
je
and
mov
push
call
mov
test
je
and
mov
push
call
pop
ret
push
mov
sub
push
push
mov
mov
xor
cmp
push
jne
jmp
mov
cmp
je
mov
call
cmp
mov
je
push
call
neg
sbb
inc
mov
je
call
push
call
mov
lea
push
push
call
lea
push
mov
push
call
mov
sub
mov
cdq
push
sub
sar
push
push
push
mov
sub
cdq
sub
sar
push
call
mov
push
call
mov
mov
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
push
push
push
call
cmp
mov
jne
mov
cmp
jge
cmp
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
push
call
cmp
jl
mov
mov
lea
push
push
call
mov
mov
push
call
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
mov
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
push
call
mov
call
cmp
mov
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
mov
call
mov
or
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
mov
push
mov
call
add
mov
mov
call
ret
push
mov
call
mov
cmp
jne
push
call
pop
mov
mov
and
test
je
push
call
jmp
xor
or
mov
mov
call
call
ret
push
mov
mov
test
push
je
mov
mov
push
push
call
mov
mov
mov
call
and
mov
test
je
mov
mov
call
mov
push
mov
mov
mov
movzx
lea
mov
call
mov
mov
mov
push
push
call
mov
test
je
mov
mov
call
pop
pop
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
cmp
je
lea
push
push
mov
mov
push
call
test
jl
mov
cmp
je
push
mov
push
call
mov
mov
push
call
mov
mov
push
call
jmp
mov
mov
cmp
je
mov
cmp
je
mov
push
push
call
mov
mov
cmp
jne
lea
mov
call
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
cmp
je
push
call
push
call
pop
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
cmp
je
cmp
mov
jle
xor
mov
mov
mov
cmp
mov
je
lea
push
mov
mov
call
cmp
mov
mov
jne
mov
mov
call
mov
mov
cmp
je
mov
push
call
inc
mov
add
cmp
jl
push
call
mov
cmp
je
push
call
mov
cmp
je
mov
push
call
mov
call
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
or
call
call
ret
push
mov
push
push
push
push
xor
cmp
mov
mov
je
push
push
call
cmp
je
cmp
jle
mov
lea
push
call
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
cmp
jne
mov
cmp
jl
jmp
mov
imul
push
mov
call
jmp
cmp
jle
and
mov
mov
lea
cmp
je
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
test
jne
add
inc
cmp
jl
mov
and
jmp
call
xor
cmp
jle
mov
mov
mov
mov
jmp
mov
lea
push
mov
mov
call
mov
cmp
je
mov
test
jne
inc
add
cmp
jl
jmp
mov
imul
push
mov
call
pop
pop
pop
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
xor
mov
xor
mov
mov
cmp
setne
cmp
jne
call
xor
cmp
setne
cmp
je
lea
push
call
mov
push
pop
lea
push
push
mov
mov
call
cmp
jne
mov
lea
push
call
lea
push
call
jmp
mov
lea
push
push
mov
call
test
je
movzx
mov
mov
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
cmp
jne
push
mov
call
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
push
lea
mov
call
lea
push
mov
call
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
jmp
sub
je
dec
je
dec
dec
je
dec
je
dec
jne
lea
push
push
mov
call
test
je
movzx
push
movzx
push
movzx
push
movzx
push
movzx
push
movsx
push
lea
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
push
fstp
movzx
push
movzx
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
movzx
fstp
movsx
push
push
push
push
push
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
cmp
fild
jbe
dec
fdiv
jne
cmp
jne
fchs
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
add
mov
call
mov
lea
push
call
lea
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
mov
jle
mov
mov
imul
mov
test
je
mov
test
mov
je
mov
shl
mov
lea
push
mov
mov
call
mov
push
lea
push
push
mov
call
add
lea
push
call
and
cmp
je
mov
inc
push
lea
push
mov
call
push
lea
mov
call
lea
push
mov
call
lea
jmp
mov
add
mov
lea
mov
xor
inc
mov
mov
mov
mov
test
je
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
mov
push
call
and
cmp
je
push
call
cmp
je
push
call
cmp
je
push
call
inc
add
or
lea
push
call
cmp
jne
inc
mov
cmp
jl
and
xor
call
ret
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
cmp
jne
mov
mov
cmp
je
mov
call
push
call
pop
mov
call
push
lea
push
mov
call
push
mov
push
call
push
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
lea
push
call
mov
mov
jmp
mov
cmp
mov
mov
je
mov
jmp
mov
mov
cmp
je
cmp
je
mov
mov
push
push
call
push
call
mov
cmp
pop
je
mov
mov
mov
cmp
jne
cmp
je
mov
cmp
je
add
cmp
je
mov
mov
push
push
mov
call
mov
cmp
je
cmp
je
dec
lea
mov
call
mov
sub
call
or
mov
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
test
jne
xor
jmp
mov
test
jne
xor
jmp
mov
push
push
push
push
call
ret
mov
mov
test
je
push
call
test
je
xor
inc
ret
xor
ret
push
mov
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
xor
pop
ret
test
je
mov
mov
call
test
jne
mov
test
je
test
je
xor
inc
pop
ret
mov
test
jne
ret
mov
test
je
jmp
push
push
call
and
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
call
ret
push
mov
push
push
call
test
je
push
push
push
push
call
mov
call
pop
ret
push
push
mov
xor
test
je
push
mov
push
push
call
and
cmp
jne
cmp
je
push
mov
call
push
call
mov
push
push
call
test
je
pop
pop
mov
pop
ret
push
push
mov
test
push
je
mov
mov
push
push
call
push
call
mov
jmp
push
call
push
call
push
push
call
mov
test
je
cmp
je
mov
push
push
call
push
call
test
je
mov
push
push
call
push
call
mov
push
push
call
test
je
push
mov
test
je
push
call
test
je
test
je
mov
call
test
jne
push
push
push
jmp
mov
push
call
push
call
mov
test
jne
mov
jmp
push
push
push
call
mov
pop
mov
pop
pop
pop
ret
push
mov
test
je
push
mov
xor
push
mov
test
jne
mov
test
jne
push
call
push
call
test
jne
test
je
test
jne
mov
mov
call
call
push
call
cmp
je
push
call
test
je
pop
pop
mov
pop
jmp
pop
pop
pop
ret
push
mov
test
je
push
call
test
je
push
mov
cmp
je
mov
mov
test
jne
push
call
push
call
test
jne
jmp
mov
xor
test
je
cmp
jne
push
call
test
je
test
je
test
je
cmp
je
push
mov
call
test
jne
mov
push
mov
call
pop
pop
ret
push
mov
push
mov
call
test
jne
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
mov
mov
call
cmp
je
push
push
push
call
mov
test
je
cmp
jne
xor
pop
pop
pop
ret
mov
jmp
push
mov
mov
test
je
push
call
pop
ret
push
push
call
mov
neg
sbb
and
add
test
je
xor
cmp
push
setne
push
push
push
call
pop
ret
push
mov
test
push
je
push
push
call
test
jne
push
push
call
jmp
push
push
push
call
mov
test
je
mov
push
push
call
pop
pop
push
push
push
call
mov
test
je
cmp
jne
pop
pop
ret
mov
push
push
push
push
call
mov
shr
cmp
jne
movzx
jmp
xor
inc
ret
push
mov
push
and
push
mov
push
mov
push
mov
call
test
je
test
je
push
push
call
test
jne
push
call
pop
mov
mov
cmp
push
jne
test
je
test
je
push
call
push
push
call
mov
test
je
cmp
je
push
call
test
pop
je
push
jmp
push
push
jmp
test
je
push
call
test
pop
jne
test
je
cmp
je
push
push
call
test
jne
push
call
push
push
call
mov
push
call
test
pop
je
mov
call
test
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
push
mov
mov
call
test
je
mov
test
push
push
mov
je
mov
lea
lea
push
mov
call
mov
mov
test
je
mov
cmp
je
mov
cmp
je
cmp
jne
xor
pop
pop
pop
ret
push
mov
push
push
push
mov
test
jne
call
mov
and
test
mov
je
mov
test
je
mov
jmp
mov
test
je
push
call
push
push
call
test
je
push
push
call
mov
jmp
inc
cmp
je
cmp
jg
push
push
call
test
pop
pop
jne
push
mov
call
mov
test
jne
mov
call
mov
test
je
test
mov
mov
je
xor
test
je
cmp
je
lea
push
lea
call
cmp
mov
jne
jmp
mov
jmp
lea
push
lea
call
mov
mov
cmp
je
test
je
test
je
cmp
jne
mov
mov
lea
push
lea
call
mov
push
push
call
test
pop
pop
je
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
jmp
cmp
je
mov
mov
call
test
je
cmp
jne
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
push
push
push
push
call
mov
test
jne
mov
call
mov
test
je
mov
test
mov
je
lea
push
lea
call
mov
mov
test
je
cmp
je
cmp
je
call
cmp
je
cmp
jne
jmp
mov
xor
push
push
push
call
mov
xor
cmp
je
push
call
test
pop
je
mov
push
push
call
mov
cmp
je
cmp
je
mov
cmp
je
mov
jmp
mov
cmp
je
push
call
test
je
mov
jmp
cmp
je
mov
mov
call
test
je
cmp
je
cmp
jne
mov
inc
cmp
jl
xor
pop
pop
pop
leave
ret
call
int3
push
mov
call
mov
test
jne
and
jmp
mov
mov
mov
mov
mov
call
push
mov
call
mov
cmp
mov
jb
cmp
jbe
add
cmp
ja
test
je
mov
mov
cmp
jne
push
call
push
call
cmp
je
push
call
push
call
mov
test
jne
test
je
mov
test
je
cmp
je
mov
push
mov
push
call
test
jne
inc
jmp
cmp
je
cmp
je
cmp
jne
test
je
mov
test
je
mov
movzx
cmp
jne
test
jne
cmp
jne
test
je
xor
jmp
mov
push
xor
mov
call
and
mov
mov
sub
mov
je
dec
dec
je
sub
jne
cmp
jne
push
call
test
jge
cmp
je
push
push
call
cmp
jne
test
jne
movzx
cmp
jne
test
jne
cmp
je
push
push
push
call
test
je
mov
test
je
push
mov
call
jmp
push
push
call
movzx
cmp
jg
je
cmp
je
cmp
je
cmp
je
mov
test
jne
push
push
call
test
mov
je
mov
call
push
call
cmp
je
call
push
call
push
call
pop
push
mov
call
test
je
mov
call
push
call
push
push
call
pop
pop
push
call
test
je
call
push
call
push
push
push
call
mov
call
ret
test
jne
push
call
mov
xor
test
setl
mov
push
push
call
test
je
cmp
je
mov
mov
push
mov
call
jmp
mov
test
je
push
call
jmp
push
push
mov
call
mov
test
je
mov
and
push
call
push
push
call
pop
pop
jmp
cmp
jl
cmp
jle
cmp
jle
cmp
jne
test
jne
push
call
test
pop
je
mov
mov
call
jmp
push
call
xor
cmp
mov
jne
jmp
xor
push
push
call
mov
cmp
je
mov
call
test
jne
push
call
jmp
cmp
je
push
push
push
push
push
push
mov
call
add
or
jmp
mov
call
mov
ret
mov
push
push
call
test
jne
cmp
mov
push
je
call
jmp
call
mov
test
je
cmp
je
mov
push
call
cmp
je
mov
mov
push
call
jmp
mov
test
je
push
call
jmp
push
mov
push
call
mov
test
je
mov
mov
xor
push
mov
call
cmp
je
push
push
push
push
call
mov
jmp
push
mov
call
mov
mov
call
mov
and
test
mov
mov
jne
test
je
call
mov
and
mov
neg
sbb
not
and
and
mov
mov
mov
mov
call
ret
push
call
pop
ret
push
push
call
pop
pop
ret
mov
xor
ret
push
mov
mov
push
mov
cmp
jbe
mov
test
jne
call
add
cmp
jb
mov
test
push
mov
jne
mov
call
jmp
mov
push
call
test
je
mov
mov
pop
pop
ret
mov
xor
ret
cmp
push
push
mov
ja
mov
cmp
jbe
call
mov
xor
cmp
jb
ja
cmp
jbe
mov
push
mov
call
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
pop
pop
ret
push
push
mov
test
mov
jne
xor
jmp
cmp
jne
call
mov
mov
cmp
ja
lea
cmp
ja
cmp
jae
sub
mov
mov
mov
push
add
push
push
mov
call
add
mov
pop
pop
ret
push
push
mov
test
mov
je
cmp
jne
call
mov
lea
cmp
jb
cmp
jbe
mov
push
mov
call
mov
lea
cmp
ja
mov
mov
push
push
add
push
mov
call
add
mov
cmp
jbe
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
add
mov
adc
jmp
cmp
jne
cmp
jl
jg
cmp
jbe
push
push
push
call
mov
xor
add
adc
cmp
jg
jl
cmp
jb
cmp
jbe
mov
push
mov
call
mov
pop
mov
xor
pop
pop
ret
push
mov
mov
push
xor
cmp
mov
mov
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
mov
jmp
push
mov
cmp
push
mov
jne
xor
cmp
sbb
neg
jmp
cmp
jne
mov
add
mov
cmp
jbe
mov
xor
jmp
push
mov
test
je
mov
test
je
cmp
push
mov
jne
mov
lea
cmp
jb
cmp
jb
cmp
jbe
mov
push
mov
call
mov
mov
add
cmp
mov
jne
mov
mov
add
cmp
jae
mov
mov
add
mov
jmp
call
cmp
jne
mov
sub
mov
mov
add
cmp
jae
mov
mov
add
mov
sub
add
mov
sub
pop
jmp
xor
pop
pop
pop
ret
mov
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
call
or
mov
mov
mov
mov
mov
call
call
ret
push
mov
push
push
push
push
call
mov
add
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
call
add
lea
push
mov
call
mov
xor
cmp
sete
xor
call
leave
ret
push
xor
cmp
je
xor
cmp
pop
setne
ret
push
push
call
push
mov
call
mov
cmp
je
mov
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
cmp
je
push
jmp
push
push
call
cmp
mov
je
xor
inc
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
mov
mov
xor
jmp
call
test
je
jmp
test
push
push
jne
mov
xor
cmp
jle
cmp
jle
mov
push
call
cmp
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
push
push
call
jmp
test
je
mov
jmp
push
call
test
je
lea
push
push
call
jmp
lea
push
push
call
test
je
push
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
mov
push
push
call
mov
xor
cmp
je
cmp
jne
cmp
jb
push
lea
push
push
push
push
push
call
mov
jmp
cmp
push
jne
mov
xor
cmp
je
cmp
jb
push
lea
push
push
push
call
test
je
mov
mov
push
mov
call
push
mov
call
lea
lea
movs
movs
movs
movs
xor
inc
cmp
mov
mov
jb
push
add
push
push
push
push
push
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
cmp
push
push
mov
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
jbe
mov
jmp
cmp
mov
jbe
mov
mov
mov
mov
cmp
jae
mov
add
add
inc
mov
mov
add
cmp
jb
cmp
jae
mov
mov
sub
shl
add
sub
lea
mov
add
sub
dec
jne
cmp
mov
jne
lea
mov
cmp
jne
lea
mov
lea
push
call
mov
add
cmp
ja
mov
push
pop
jmp
cmp
jne
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
cmp
mov
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
push
push
push
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
movzx
test
je
test
je
test
je
push
call
mov
mov
mov
add
jmp
mov
jmp
mov
and
mov
mov
sub
mov
push
movs
push
movs
push
movs
push
push
movs
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
push
mov
push
call
jmp
push
mov
push
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
movzx
test
je
test
jne
mov
mov
and
jmp
cmp
jne
push
call
mov
mov
mov
add
jmp
cmp
jne
mov
jmp
push
call
lea
mov
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
mov
test
jl
mov
mov
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jge
mov
mov
jmp
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
mov
jmp
cmp
je
mov
jmp
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
lea
push
call
mov
pop
pop
pop
leave
ret
lea
in
das
inc
add
xor
(bad)
xor
xor
inc
add
inc
add
xor
mov
xor
push
xor
mov
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
in
push
push
xor
cmp
push
push
jbe
mov
mov
lea
xor
push
push
call
test
jne
mov
mov
mov
mov
add
cmp
jb
cmp
je
inc
cmp
jb
xor
pop
pop
pop
leave
ret
mov
jmp
push
mov
call
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
call
mov
not
and
or
cmp
jne
xor
jmp
push
push
push
call
mov
xor
cmp
je
or
push
push
push
push
push
push
push
call
xor
inc
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
push
call
ret
ret
cmp
mov
je
jmp
jmp
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
push
push
push
push
call
jmp
push
push
push
push
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
push
call
xor
pop
ret
push
mov
push
push
push
mov
push
push
call
mov
test
je
push
push
call
mov
test
movzx
mov
je
cmp
jb
mov
or
or
push
push
push
push
mov
mov
call
test
jne
or
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
push
mov
mov
mov
mov
cmp
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
and
push
mov
mov
lea
push
push
mov
push
push
call
test
jne
push
mov
push
mov
push
call
mov
mov
pop
leave
ret
push
mov
call
mov
mov
mov
pop
ret
mov
mov
mov
ret
ret
push
mov
call
cmp
jne
and
push
push
mov
call
push
push
call
pop
ret
mov
ret
push
mov
push
push
push
push
push
call
pop
ret
mov
test
jne
mov
jmp
mov
xor
ret
mov
test
jne
mov
jmp
and
mov
ret
lea
cmp
jne
push
push
push
push
call
test
jl
xor
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
push
push
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
push
mov
push
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
push
mov
push
push
call
ret
mov
mov
push
push
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
xor
ret
xor
inc
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
mov
and
ret
xor
ret
mov
test
je
cmp
je
cmp
je
xor
inc
ret
xor
ret
mov
test
jne
call
and
xor
inc
ret
mov
test
jne
call
and
xor
inc
ret
mov
ret
mov
ret
mov
mov
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
movzx
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
push
call
ret
push
push
call
ret
push
push
call
ret
push
push
push
push
push
push
call
dec
dec
ret
push
mov
mov
cmp
je
mov
cmp
je
cmp
je
call
mov
mov
cmp
je
push
call
pop
ret
push
mov
mov
cmp
je
push
call
mov
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
push
mov
push
call
mov
call
mov
mov
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
push
mov
mov
mov
sub
push
sub
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
mov
push
mov
mov
sub
push
sub
push
mov
push
push
or
push
push
push
push
call
pop
pop
pop
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
cmp
mov
je
test
je
push
call
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
mov
test
push
jne
call
push
call
xor
test
mov
jle
mov
push
mov
call
test
je
cmp
je
push
push
call
test
jne
jmp
push
push
call
cmp
je
inc
cmp
jl
xor
pop
pop
pop
pop
ret
push
call
jmp
mov
mov
test
je
push
call
ret
push
mov
call
test
je
push
call
mov
pop
ret
push
mov
call
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
cmp
jne
xor
inc
jmp
cmp
jne
xor
mov
push
push
mov
call
jmp
push
mov
push
mov
call
pop
ret
cmp
jne
call
mov
test
je
test
jne
push
call
xor
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
lea
call
push
and
push
push
push
push
push
push
push
push
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
push
movs
push
movs
push
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
push
push
push
mov
test
jne
mov
jmp
push
mov
push
lea
call
cmp
mov
mov
pop
je
push
push
call
xor
pop
leave
ret
push
mov
call
mov
mov
xor
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
call
ret
mov
ret
jmp
mov
mov
push
push
mov
call
mov
call
mov
ret
push
mov
sub
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
test
je
push
call
jmp
push
push
call
mov
test
je
push
push
push
push
call
test
je
mov
push
mov
lea
push
push
call
test
jne
test
je
push
push
call
test
je
test
je
xor
test
mov
jne
call
test
je
mov
lea
push
push
push
call
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
call
jmp
push
call
mov
mov
lea
push
push
call
lea
push
push
call
push
lea
push
push
push
call
mov
mov
mov
mov
add
cdq
sub
mov
sub
mov
cdq
sub
mov
sar
sar
sub
mov
sub
mov
mov
add
cdq
sub
mov
mov
cdq
sub
sar
sar
sub
cmp
jge
mov
jmp
add
cmp
jle
sub
add
mov
cmp
pop
jge
mov
jmp
mov
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
leave
ret
sub
push
push
push
xor
push
inc
xor
test
mov
mov
mov
je
call
test
je
xor
push
call
or
mov
call
mov
mov
jmp
push
push
push
push
push
call
test
jne
cmp
je
push
mov
call
push
call
xor
test
jne
cmp
je
cmp
jne
push
push
push
push
call
test
jne
push
push
push
push
call
inc
test
jne
mov
cmp
jne
call
test
je
cmp
je
mov
mov
cmp
je
cmp
jne
push
mov
call
push
call
xor
mov
mov
call
test
je
push
call
test
pop
je
mov
mov
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
and
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
push
call
ret
push
mov
call
push
call
pop
mov
mov
xor
cmp
mov
je
call
call
ret
push
mov
call
mov
mov
and
test
je
call
call
ret
push
mov
cmp
jne
push
call
test
mov
jne
push
call
test
mov
setne
mov
mov
pop
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
and
lea
push
call
push
call
mov
test
je
and
lea
push
mov
call
mov
xor
test
setne
test
jne
jmp
call
mov
call
call
ret
cmp
je
push
push
call
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
lea
push
mov
call
mov
xor
cmp
setne
cmp
jne
call
push
call
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
call
mov
mov
call
ret
jmp
push
push
mov
call
mov
test
jne
jmp
call
mov
call
movsx
shr
movsx
mov
mov
lea
pop
ret
push
mov
push
mov
call
test
jne
jmp
push
mov
push
mov
push
call
pop
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
call
jmp
xor
or
push
mov
call
mov
call
ret
push
push
push
call
push
mov
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
add
jmp
ret
push
mov
test
push
mov
jne
xor
jmp
push
push
call
mov
push
lea
mov
call
push
mov
mov
call
xor
inc
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
push
lea
call
and
and
mov
pop
pop
ret
push
push
mov
call
mov
test
jne
jmp
call
cmp
je
mov
test
je
push
call
and
cmp
je
and
xor
pop
ret
xor
inc
pop
ret
push
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
push
push
call
mov
test
je
mov
push
call
mov
pop
jmp
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
xor
inc
test
je
mov
push
call
and
test
je
call
mov
test
je
cmp
je
push
lea
push
push
call
mov
add
mov
mov
lea
push
push
push
push
mov
mov
call
mov
mov
push
push
call
mov
mov
call
mov
push
push
call
cmp
jne
mov
mov
call
mov
test
je
push
push
push
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
push
mov
mov
push
xor
cmp
jne
cmp
jne
xor
jmp
cmp
je
push
call
cmp
jne
jmp
push
lea
call
mov
cmp
jne
cmp
je
cmp
jne
push
call
jmp
mov
mov
call
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
test
jne
call
mov
lea
push
sub
push
mov
mov
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
call
mov
mov
test
je
push
call
test
je
push
push
push
call
test
jne
cmp
push
jne
call
jmp
call
test
jne
push
call
jmp
push
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
pop
ret
push
push
mov
mov
jmp
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
test
jne
xor
pop
pop
ret
xor
inc
jmp
push
mov
push
mov
call
test
jne
call
push
mov
push
mov
push
push
call
pop
ret
push
mov
cmp
je
mov
mov
call
test
jne
mov
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
push
call
xor
inc
jmp
mov
call
neg
sbb
neg
pop
pop
pop
ret
push
mov
push
push
mov
cmp
jne
call
jmp
mov
and
lea
push
push
mov
push
call
test
jge
mov
jmp
mov
pop
leave
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
jmp
lea
push
call
push
push
push
push
lea
push
call
test
jne
mov
call
pop
pop
pop
leave
ret
push
mov
push
lea
mov
mov
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
lea
push
xor
call
mov
mov
call
cmp
je
push
call
test
je
mov
jmp
mov
and
cmp
jne
call
mov
mov
call
mov
mov
pop
leave
ret
push
mov
mov
push
call
mov
push
push
push
call
and
pop
mov
pop
jmp
push
call
test
je
mov
ret
xor
ret
push
mov
sub
test
jne
push
mov
mov
call
test
jne
lea
push
push
call
mov
mov
cmp
jne
mov
cmp
jne
push
push
call
push
call
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
call
push
mov
call
mov
xor
xor
cmp
setne
mov
cmp
jne
call
lea
push
mov
pop
lea
rep
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
cmp
je
mov
mov
push
call
and
cmp
jne
lea
push
lea
push
push
call
push
mov
push
mov
push
call
cmp
mov
jne
push
lea
push
push
call
jmp
mov
add
push
push
call
mov
mov
call
mov
ret
mov
mov
push
lea
pop
lea
rep
call
ret
push
mov
cmp
jne
xor
inc
jmp
push
mov
push
call
test
je
cmp
jne
push
push
push
push
push
call
jmp
push
push
push
push
call
pop
pop
ret
push
mov
call
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
and
or
mov
call
call
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
cmp
push
mov
jne
push
mov
call
test
jne
call
mov
cmp
jne
push
jmp
push
call
push
call
test
je
push
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
push
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
test
je
mov
test
jne
xor
ret
push
push
mov
push
jmp
mov
mov
call
test
jne
push
call
push
call
mov
test
jne
pop
pop
ret
mov
jmp
push
mov
test
je
cmp
jne
xor
pop
ret
mov
call
test
jne
mov
call
mov
test
je
mov
jmp
mov
mov
call
test
jne
mov
pop
ret
push
mov
push
push
push
mov
call
jmp
cmp
je
push
call
test
je
push
push
push
push
push
call
jmp
push
push
push
push
call
cmp
je
push
call
test
je
push
push
push
push
push
push
call
push
push
call
mov
test
jne
pop
pop
pop
ret
push
mov
call
push
call
test
jne
xor
jmp
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
push
and
lea
mov
call
and
xor
test
setne
or
mov
lea
call
mov
jmp
push
mov
call
call
ret
cmp
push
mov
je
cmp
jne
push
push
call
test
jne
mov
call
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
mov
mov
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
neg
sbb
and
add
ret
mov
mov
mov
mov
mov
xor
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
push
push
push
call
pop
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
call
pop
ret
mov
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
ret
mov
test
jne
push
call
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
cmp
push
mov
jne
push
call
test
je
mov
push
mov
call
jmp
push
push
call
test
jne
mov
call
pop
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
push
mov
call
test
jne
mov
call
pop
ret
push
push
call
push
mov
call
mov
test
jne
call
cmp
jne
push
call
test
pop
mov
jne
xor
jmp
push
push
call
test
mov
jne
push
call
and
jmp
push
call
push
push
push
push
call
pop
ret
push
mov
sub
mov
push
push
push
movzx
shr
xor
cmp
mov
mov
jne
cmp
jne
xor
jmp
lea
call
mov
push
lea
push
push
push
mov
mov
call
cmp
jne
xor
inc
jmp
mov
jmp
push
mov
call
cmp
jne
call
mov
cmp
je
push
push
call
test
jne
cmp
je
mov
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
push
push
mov
call
movzx
mov
mov
push
mov
mov
call
test
jne
call
mov
cmp
jne
xor
inc
jmp
push
push
call
test
jne
mov
push
lea
push
movzx
or
push
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
call
test
je
push
call
jmp
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
jmp
mov
push
call
test
jne
push
call
pop
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
push
push
push
push
push
push
call
mov
pop
jmp
push
mov
call
mov
test
je
cmp
jne
push
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
mov
call
pop
ret
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
inc
ret
xor
ret
cmp
jne
xor
ret
mov
mov
push
push
call
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
inc
jmp
xor
ret
push
mov
cmp
push
push
push
je
mov
test
je
mov
test
jne
mov
jmp
push
and
call
test
je
mov
add
mov
push
call
mov
xor
jmp
mov
xor
test
sete
test
mov
jne
push
push
call
test
pop
pop
je
cmp
je
push
push
push
push
call
test
je
cmp
jne
test
jl
add
mov
test
jne
mov
jmp
mov
pop
pop
pop
pop
ret
mov
mov
mov
mov
call
jmp
mov
inc
mov
ret
mov
dec
push
mov
jne
test
je
mov
push
call
mov
pop
ret
push
push
push
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
push
mov
mov
call
test
jne
push
mov
call
mov
test
je
push
mov
test
je
push
call
test
je
mov
call
cmp
je
test
mov
mov
jne
and
jmp
mov
mov
lea
push
push
push
push
call
pop
pop
pop
leave
ret
push
mov
cmp
push
jne
cmp
je
cmp
je
cmp
jne
mov
call
test
je
push
call
push
call
mov
test
je
call
push
call
cmp
je
mov
call
test
je
push
call
xor
inc
jmp
xor
pop
pop
ret
push
mov
call
mov
mov
push
push
call
and
and
mov
mov
xor
inc
sub
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
push
push
push
push
push
call
push
mov
lea
push
push
call
mov
call
ret
push
push
push
call
push
push
call
push
call
push
call
jmp
push
call
mov
shr
push
movsx
push
push
call
xor
test
sete
jmp
push
call
push
mov
call
push
push
push
call
test
je
push
push
push
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
push
mov
mov
call
mov
xor
test
setne
test
jne
call
cmp
je
push
push
push
push
call
jmp
mov
mov
mov
call
test
movzx
mov
jne
mov
test
jne
test
jne
cmp
jne
push
pop
push
push
lea
push
call
lea
mov
push
mov
push
push
call
add
test
mov
je
push
push
call
movzx
cmp
jne
jmp
push
lea
call
and
push
mov
call
mov
mov
call
mov
mov
call
mov
push
push
push
mov
call
cmp
je
mov
mov
and
or
cmp
je
push
push
call
jmp
push
lea
push
push
call
test
je
and
lea
push
push
call
test
pop
pop
je
push
push
call
test
mov
je
mov
push
push
call
test
jne
push
push
push
call
push
push
call
cmp
jne
push
call
push
push
push
call
push
push
push
push
call
cmp
mov
je
push
call
and
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
push
mov
call
mov
test
jne
call
push
mov
cmp
je
cmp
jne
call
push
push
push
push
call
test
mov
jne
call
mov
pop
pop
ret
push
mov
sub
push
push
mov
test
mov
je
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
push
mov
mov
push
call
test
je
mov
mov
call
mov
xor
push
push
push
push
call
push
push
push
push
push
push
call
mov
call
mov
cmp
jne
jmp
push
push
push
push
call
push
push
push
push
push
push
call
call
cmp
je
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
mov
xor
mov
mov
mov
cmp
mov
jne
push
mov
push
call
test
je
mov
jmp
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
jne
jmp
cmp
mov
jne
push
call
push
push
push
call
cmp
jne
mov
shr
push
movsx
push
push
call
test
jne
mov
test
je
cmp
jle
cmp
jb
cmp
jbe
cmp
jb
cmp
jbe
lea
cmp
ja
mov
mov
lea
push
push
push
push
call
test
jne
mov
mov
call
mov
xor
push
lea
mov
and
call
imul
mov
add
cmp
mov
jne
mov
mov
cmp
jne
mov
lea
mov
call
test
je
cmp
jb
jmp
mov
mov
mov
mov
mov
jmp
cmp
push
push
jae
push
push
call
test
mov
je
mov
mov
lea
call
mov
mov
mov
lea
cmp
ja
jmp
mov
mov
push
push
jmp
mov
mov
cmp
je
push
push
push
add
push
call
mov
test
jne
mov
call
mov
mov
cmp
jne
mov
and
lea
call
or
lea
call
xor
call
ret
movsx
shr
movsx
push
push
jmp
push
call
push
mov
call
jmp
push
jmp
mov
call
jmp
push
call
push
jmp
mov
shr
push
movzx
push
push
call
push
mov
call
jmp
push
push
call
jmp
push
jmp
lea
call
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
test
jne
mov
test
je
push
lea
call
test
je
mov
lea
push
push
lea
push
mov
call
and
and
lea
mov
mov
call
jmp
lea
call
mov
push
mov
lea
push
mov
mov
call
and
mov
lea
mov
call
jmp
mov
shr
push
push
call
push
movzx
jmp
mov
shr
push
movzx
jmp
push
call
push
mov
shr
jmp
mov
call
jmp
push
jmp
mov
shr
push
movzx
jmp
mov
shr
movsx
push
movsx
jmp
mov
shr
push
movzx
jmp
push
call
push
push
call
push
xor
cmp
sete
jmp
push
call
jmp
push
call
jmp
mov
shr
movsx
push
movsx
push
push
call
jmp
push
jmp
push
call
push
jmp
mov
shr
push
movzx
jmp
movsx
shr
movsx
push
push
push
call
jmp
push
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movsx
shr
cmp
movsx
mov
mov
jne
push
call
push
push
push
jmp
push
push
jmp
push
push
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzx
push
jmp
movsx
shr
movsx
push
push
push
mov
call
jmp
push
push
mov
call
jmp
movsx
shr
movsx
push
push
mov
shr
push
movzx
push
mov
call
mov
jmp
mov
call
test
mov
je
jmp
mov
lea
mov
call
mov
push
push
mov
call
mov
mov
test
je
mov
mov
or
lea
call
xor
inc
jmp
nop
jo
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
jo
add
outs
inc
add
outs
inc
add
jb
add
jno
add
jno
add
jo
add
jo
add
jo
add
jo
add
jo
add
outs
inc
add
outs
inc
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
inc
add
jno
add
add
add
jno
add
jno
add
jb
add
inc
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
outs
inc
add
in
mov
sub
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
push
lea
push
movzx
or
push
push
call
jmp
mov
xor
push
shr
push
or
push
push
call
test
je
mov
xor
inc
cmp
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
push
add
push
push
push
call
jmp
lea
cmp
ja
mov
push
mov
add
push
mov
lea
push
xor
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
and
push
mov
cmp
je
mov
mov
push
call
push
push
mov
call
pop
ret
push
mov
call
mov
xor
cmp
jne
mov
jmp
push
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
push
call
jmp
xor
jmp
mov
call
mov
ret
mov
xor
mov
cmp
je
mov
mov
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
and
call
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
push
lea
call
mov
mov
xor
push
push
lea
push
mov
mov
call
test
je
lea
push
push
push
push
lea
push
push
call
add
jmp
push
push
push
lea
push
push
call
add
push
push
mov
push
call
lea
mov
call
mov
push
mov
call
mov
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
mov
ret
push
mov
cmp
je
push
push
mov
push
lea
push
push
call
add
cmp
pop
ja
test
jne
pop
ret
mov
test
je
mov
xor
inc
jmp
pop
jmp
push
mov
call
mov
cmp
mov
jne
mov
call
mov
test
jl
mov
test
jne
lea
push
call
mov
test
jl
and
mov
mov
and
lea
push
push
push
call
test
jl
mov
lea
push
lea
push
mov
mov
push
call
push
push
push
call
mov
mov
mov
or
xor
test
je
mov
push
call
jmp
push
push
push
call
mov
mov
xor
mov
call
ret
push
mov
call
mov
lea
push
push
push
call
add
test
jne
push
call
test
pop
jne
xor
jmp
call
cmp
je
push
call
and
call
mov
lea
push
mov
call
push
mov
call
or
push
call
xor
inc
call
ret
push
call
push
push
call
int3
push
mov
sub
push
mov
push
xor
cmp
mov
mov
je
push
movzx
cmp
je
inc
inc
movzx
movzx
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
push
pop
xor
lea
rep
or
push
lea
mov
call
mov
mov
lea
push
push
movzx
push
push
mov
push
call
cmp
jne
and
mov
add
call
xor
jmp
cmp
je
cmp
jne
push
movzx
push
push
movzx
push
mov
push
call
cmp
jne
mov
add
cmp
jne
cmp
pop
je
mov
push
push
push
push
push
push
call
mov
pop
pop
leave
ret
mov
push
mov
push
mov
call
movzx
mov
mov
push
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
xor
inc
jmp
push
push
push
push
xor
lea
push
push
xor
call
mov
add
mov
call
test
mov
push
mov
mov
pop
mov
mov
je
lea
push
mov
mov
call
test
je
inc
test
je
or
lea
push
mov
call
test
je
or
test
je
lea
push
mov
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
lea
push
mov
call
or
and
test
je
push
lea
push
mov
call
or
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
or
mov
mov
mov
and
cmp
jne
or
mov
or
mov
and
pop
sub
pop
neg
sbb
inc
pop
leave
ret
push
mov
cmp
jne
push
call
mov
xor
inc
pop
ret
push
push
push
push
xor
xor
cmp
mov
je
call
mov
push
push
push
call
test
je
push
push
call
mov
test
je
push
call
mov
push
mov
call
test
mov
je
test
je
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
push
xor
inc
test
je
mov
mov
mov
mov
jmp
mov
add
cmp
push
ja
jmp
call
jmp
call
jmp
push
call
jmp
push
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
call
xor
cmp
sete
and
jmp
mov
test
je
push
push
call
jmp
push
jmp
push
call
mov
mov
jmp
xor
pop
pop
pop
ret
lea
dec
jge
add
inc
add
inc
add
inc
add
inc
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
mov
cmp
push
mov
jne
call
cmp
jne
call
call
push
mov
push
mov
push
mov
push
call
jmp
cmp
push
push
jne
mov
and
test
je
mov
mov
mov
call
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
mov
test
je
push
push
call
test
pop
pop
je
mov
mov
mov
add
mov
test
jne
mov
test
jne
mov
jmp
cmp
je
mov
shr
movzx
mov
jne
mov
mov
call
jmp
push
push
push
push
call
test
jne
call
mov
cmp
jne
xor
pop
pop
pop
pop
ret
push
push
push
push
push
push
push
call
jmp
mov
ret
mov
ret
mov
ret
mov
ret
push
push
mov
call
mov
mov
call
test
je
mov
call
push
call
mov
push
mov
call
pop
ret
mov
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ret
push
push
push
push
push
call
ret
push
mov
call
mov
xor
inc
xor
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
lea
mov
test
je
call
and
pop
ret
call
mov
mov
push
mov
call
ret
call
mov
mov
push
mov
call
ret
mov
ret
push
push
mov
mov
xor
cmp
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
add
or
push
push
push
call
jmp
cmp
je
cmp
jne
push
mov
call
cmp
jne
push
call
push
call
push
push
push
push
call
pop
push
mov
call
mov
pop
pop
ret
push
mov
mov
test
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
or
push
push
push
call
jmp
mov
test
je
push
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
pop
pop
ret
push
mov
test
push
push
mov
jne
call
mov
test
je
cmp
jne
mov
mov
push
push
push
call
mov
and
cmp
jae
push
push
or
push
push
mov
call
jmp
mov
test
je
push
push
call
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
push
call
movsx
shr
cmp
movsx
mov
jle
cmp
jg
jmp
cmp
jle
push
pop
lea
cdq
sub
lea
sar
mov
sar
mov
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
sar
add
imul
lea
lea
mov
mov
mov
movzx
mov
shl
inc
not
movzx
mov
mov
add
dec
jne
lea
push
push
push
push
push
call
test
pop
pop
mov
pop
jne
push
push
call
mov
mov
xor
call
add
leave
ret
push
mov
mov
push
xor
xor
cmp
setne
push
mov
call
cmp
je
cmp
jne
mov
cmp
jb
call
cmp
jne
call
cmp
je
push
mov
push
push
push
push
call
pop
pop
ret
push
push
mov
test
mov
je
cmp
je
cmp
je
call
cmp
je
push
call
add
cmp
jle
push
call
test
jle
cmp
jne
mov
jmp
push
and
call
push
call
pop
pop
ret
cmp
je
mov
mov
jmp
xor
inc
ret
cmp
jne
call
lea
cmp
je
mov
mov
mov
jmp
ret
cmp
jne
call
mov
mov
jmp
mov
mov
test
jne
call
add
cmp
jne
mov
push
call
jmp
mov
mov
push
mov
call
ret
cmp
je
mov
mov
jmp
xor
ret
mov
test
jl
cmp
jl
call
mov
lea
ret
mov
push
push
push
push
call
ret
push
mov
mov
test
jne
call
mov
mov
cmp
jb
push
mov
add
cmp
jb
call
lea
push
call
mov
mov
push
mov
call
test
jne
mov
mov
push
call
xor
pop
inc
pop
ret
push
mov
sub
push
push
push
lea
push
xor
mov
push
push
push
mov
push
mov
mov
mov
mov
call
test
jne
lea
push
lea
push
push
push
push
push
push
push
mov
push
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
je
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
push
push
call
push
call
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
cmp
push
mov
je
push
call
mov
test
je
push
lea
push
push
push
push
push
call
push
mov
call
xor
test
sete
jmp
push
lea
push
push
push
call
add
push
lea
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
mov
test
push
mov
push
jne
call
test
je
push
call
and
push
mov
lea
push
push
call
mov
add
cmp
ja
push
lea
push
push
call
cmp
jne
push
lea
push
call
test
je
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
test
jne
call
mov
test
je
push
call
and
pop
ret
push
mov
test
je
push
push
call
mov
and
je
push
dec
call
test
jne
push
call
pop
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
push
call
and
jmp
sub
sub
push
push
call
pop
pop
xor
inc
pop
ret
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
lea
push
push
call
lea
push
push
call
pop
neg
pop
mov
sbb
xor
inc
pop
call
leave
ret
push
mov
sub
push
push
lea
push
push
call
mov
push
push
jmp
push
call
test
je
push
push
call
test
je
lea
push
push
call
push
lea
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
leave
ret
mov
jmp
cmp
jne
xor
ret
mov
mov
jmp
cmp
jne
call
mov
mov
jmp
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
test
jne
push
lea
push
push
push
call
mov
test
jne
and
lea
push
lea
call
lea
push
push
mov
call
mov
mov
test
setne
add
mov
call
test
jne
or
jmp
mov
mov
call
mov
ret
mov
mov
cmp
je
cmp
jne
push
push
call
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
xor
mov
mov
mov
call
cmp
mov
je
lea
push
mov
call
cmp
je
mov
push
push
push
push
mov
call
cmp
jne
cmp
je
xor
cmp
setne
cmp
jne
jmp
push
lea
call
push
lea
mov
call
push
lea
push
lea
push
call
push
mov
push
lea
push
call
add
mov
add
mov
call
lea
push
mov
push
call
lea
push
push
push
call
test
jne
push
lea
push
push
push
call
cmp
jne
lea
push
push
call
push
call
lea
push
lea
push
push
push
call
mov
add
call
mov
add
call
xor
inc
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
xor
cmp
sete
mov
ret
call
add
push
call
ret
call
mov
mov
ret
call
mov
ret
call
cmp
jne
push
push
call
call
mov
test
je
mov
test
je
call
test
je
mov
mov
pop
jmp
call
cmp
jne
push
call
pop
ret
call
add
push
call
test
jne
jmp
ret
push
push
mov
test
mov
jne
push
pop
mov
test
je
push
call
and
pop
cmp
je
xor
push
pop
mov
mul
seto
neg
or
push
call
mov
shl
push
push
push
mov
call
add
mov
pop
pop
ret
push
mov
mov
test
je
push
call
and
pop
mov
and
and
call
and
pop
ret
mov
mov
mov
dec
mov
jne
call
ret
mov
push
mov
mov
shr
mov
xor
div
mov
mov
mov
test
je
mov
jmp
cmp
je
mov
test
jne
xor
pop
ret
test
jne
call
push
mov
test
jne
xor
jmp
push
mov
mov
xor
shr
div
mov
jmp
cmp
je
mov
test
jne
xor
pop
pop
ret
mov
jmp
push
mov
test
jne
xor
jmp
push
mov
mov
shr
xor
div
lea
mov
jmp
cmp
je
mov
mov
test
jne
pop
pop
ret
mov
push
mov
call
xor
inc
jmp
mov
push
mov
test
je
cmp
push
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
call
mov
test
jne
mov
shr
xor
push
mov
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
ret
mov
mov
xor
cmp
mov
jg
push
pop
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
inc
mov
and
and
pop
ret
push
mov
push
push
push
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
push
push
mov
call
mov
call
mov
mov
mov
shl
mov
mov
mov
mov
pop
add
pop
leave
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
call
inc
ret
push
mov
call
mov
mov
mov
push
mov
push
lea
call
and
push
lea
call
lea
push
mov
mov
call
xor
cmp
mov
jne
call
cmp
je
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
push
mov
call
mov
mov
test
jne
xor
call
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
add
mov
cmp
jne
mov
jmp
push
call
and
lea
mov
call
mov
test
jne
call
push
call
push
lea
call
push
or
mov
call
mov
add
mov
cmp
jne
mov
mov
jmp
push
call
push
push
call
int3
push
mov
sub
push
mov
test
je
mov
neg
sbb
mov
je
push
lea
lea
push
lea
push
lea
push
mov
call
mov
add
and
cmp
jne
and
push
call
cmp
jne
pop
lea
call
lea
call
pop
leave
ret
push
mov
call
mov
mov
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
call
mov
mov
xor
cmp
je
dec
cmp
mov
jne
cmp
je
cmp
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
push
call
mov
mov
call
mov
test
je
test
je
mov
test
je
push
call
cmp
pop
jae
cmp
je
mov
and
test
je
push
call
push
mov
call
pop
pop
push
call
test
pop
mov
jne
cmp
je
push
call
pop
mov
pop
xor
cmp
pop
setne
pop
pop
ret
push
mov
mov
push
xor
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
test
jne
call
mov
mov
dec
mov
jne
call
ret
test
jne
jmp
mov
test
je
mov
test
push
mov
mov
je
and
jmp
and
push
call
mov
pop
ret
mov
test
jne
call
cmp
push
jne
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
mov
mov
mov
mov
mov
inc
and
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
test
push
mov
jne
push
call
jmp
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
pop
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
call
pop
mov
mov
jmp
mov
cmp
jne
cmp
ja
push
call
push
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
sub
push
add
push
push
call
add
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
cmp
jl
push
call
push
mov
push
push
push
call
mov
mov
sub
push
add
push
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
mov
push
not
test
mov
push
mov
je
push
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
jmp
call
push
push
mov
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
pop
pop
pop
pop
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
xor
inc
ret
xor
ret
push
mov
call
push
mov
push
mov
and
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
mov
call
mov
mov
mov
and
push
push
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
test
jne
mov
jmp
mov
mov
xor
ret
push
mov
call
mov
mov
mov
test
jne
mov
jmp
call
push
mov
push
and
push
mov
call
mov
test
je
mov
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
mov
mov
mov
mov
ret
cmp
jb
call
movzx
mov
push
mov
push
add
jmp
cmp
je
test
mov
jne
mov
mov
and
cmp
jae
and
add
inc
mov
test
jne
pop
pop
ret
call
int3
mov
ret
mov
test
jl
cmp
jge
imul
add
ret
call
int3
mov
mov
mov
test
push
mov
mov
mov
mov
pop
je
test
jne
call
ret
cmp
je
push
call
pop
ret
mov
mov
or
sub
cmp
jae
mov
ret
add
mov
mov
xor
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
mov
pop
ret
mov
test
je
and
push
push
push
push
call
xor
add
inc
ret
push
push
call
mov
xor
mov
mov
push
push
lea
push
call
add
cmp
jge
mov
jmp
mov
call
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
call
mov
mov
lea
call
ret
push
mov
push
mov
push
push
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
push
call
pop
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
mov
jg
mov
mov
imul
push
call
push
xor
push
push
mov
call
add
cmp
jle
xor
mov
mov
add
je
mov
mov
add
dec
jne
jmp
cmp
jg
mov
cmp
jge
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
mov
mov
mov
sub
inc
cmp
jl
jmp
jle
sub
test
mov
jle
mov
imul
mov
push
add
call
mov
inc
sub
add
cmp
jl
jmp
mov
cmp
jne
mov
cdq
and
add
sar
cmp
jge
push
pop
jmp
mov
cmp
jle
mov
mov
add
cmp
mov
jl
mov
mov
cmp
jl
imul
push
call
mov
imul
push
push
mov
push
push
call
mov
mov
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
and
and
mov
sub
inc
cmp
jl
push
call
pop
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
mov
test
mov
je
test
jne
call
mov
mov
push
push
not
test
push
mov
mov
je
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
jmp
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
pop
pop
pop
pop
ret
mov
mov
cmp
je
cmp
mov
je
and
mov
mov
mov
mov
mov
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
mov
neg
sbb
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
cmp
mov
je
push
xor
cmp
jle
push
xor
mov
push
add
call
inc
add
cmp
jl
pop
push
call
pop
pop
pop
ret
push
push
mov
mov
not
test
mov
mov
je
push
call
jmp
call
push
push
mov
call
push
push
push
call
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
jmp
push
push
mov
test
mov
jge
call
cmp
jl
push
lea
push
call
push
mov
imul
add
call
pop
pop
ret
push
mov
mov
sub
mov
call
mov
sub
call
mov
sub
pop
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
add
cmp
je
cmp
jne
mov
mov
add
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
mov
movzx
mov
movzx
dec
mov
cmp
mov
je
test
je
and
or
cmp
jl
cmp
je
mov
mov
shl
cmp
lea
je
cmp
je
mov
push
push
add
push
push
mov
call
test
jl
mov
mov
jmp
cmp
jne
mov
and
mov
mov
jmp
cmp
jne
cmp
jne
mov
mov
mov
test
push
pop
je
cmp
jne
mov
test
je
mov
xor
cmp
push
setne
mov
call
test
pop
je
mov
mov
mov
jmp
and
push
push
lea
push
call
mov
and
push
push
mov
call
or
cmp
je
push
call
pop
mov
mov
push
pop
jmp
mov
mov
jmp
movzx
add
cmp
ja
jmp
movsx
jmp
movzx
jmp
movsx
jmp
movzx
jmp
mov
mov
mov
mov
add
jmp
fld
fstp
jmp
fld
fstp
jmp
xor
cmp
setne
jmp
mov
mov
add
inc
mov
cmp
jne
cmp
jle
mov
mov
mov
mov
jmp
mov
cmp
je
mov
mov
mov
mov
jmp
xor
call
ret
nop
aam
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
mov
call
mov
push
lea
call
mov
mov
xor
cmp
mov
mov
mov
jne
lea
mov
push
call
test
mov
mov
mov
movzx
mov
je
lea
push
call
test
pop
jne
or
cmp
je
push
push
call
mov
jmp
mov
call
mov
mov
push
push
lea
push
push
call
movzx
and
mov
add
inc
mov
mov
mov
mov
mov
xor
mov
mov
shl
push
call
test
pop
jne
or
cmp
je
push
push
jmp
mov
cmp
ja
shl
mov
call
mov
mov
push
push
push
call
add
push
push
call
mov
lea
push
call
test
pop
je
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
mov
push
push
push
push
push
call
test
mov
jne
movzx
cmp
push
push
push
mov
je
cmp
je
cmp
je
add
cmp
ja
call
mov
mov
jmp
call
mov
jmp
call
fstp
jmp
call
fstp
fld
fstp
mov
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
push
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
call
test
je
mov
xor
mov
rep
mov
mov
rep
call
pop
xor
pop
ret
call
mov
mov
mov
push
mov
push
push
push
call
add
call
pop
xor
pop
ret
nop
nop
nop
add
add
mov
xor
cmp
jbe
mov
mov
push
call
add
inc
cmp
jb
cmp
lea
je
mov
call
or
cmp
je
push
push
call
mov
jmp
mov
xor
cmp
jbe
mov
push
call
inc
add
cmp
jb
push
push
call
call
mov
test
je
mov
mov
movzx
add
cmp
ja
jmp
mov
jmp
mov
mov
mov
mov
jmp
fld
fstp
jmp
fld
fstp
jmp
neg
sbb
mov
jmp
lea
mov
movs
movs
movs
movs
jmp
mov
jmp
movzx
sub
je
dec
je
sub
je
dec
jne
test
je
mov
push
call
jmp
lea
push
call
jmp
push
call
lea
mov
call
or
cmp
je
push
push
call
xor
lea
call
ret
lea
xor
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
call
mov
mov
call
lea
mov
mov
call
and
lea
call
lea
call
mov
mov
mov
add
neg
sbb
and
cmp
mov
mov
mov
je
push
mov
call
neg
mov
sbb
and
add
mov
call
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
push
push
push
call
add
lea
push
mov
mov
call
test
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
cmp
je
push
lea
call
push
call
mov
add
mov
call
add
mov
cmp
je
push
lea
call
mov
push
call
lea
mov
call
jmp
push
mov
call
test
push
lea
push
je
push
call
mov
jmp
push
call
mov
push
lea
call
push
call
mov
add
mov
call
xor
cmp
jne
call
push
lea
call
push
call
mov
add
mov
call
cmp
jne
cmp
je
call
mov
push
lea
call
push
call
mov
add
mov
call
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
call
mov
mov
mov
mov
and
test
je
call
cmp
je
push
call
pop
or
mov
call
call
ret
mov
mov
cmp
jb
xor
ret
inc
cmp
mov
sbb
neg
ret
and
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
add
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
mov
cmp
jb
xor
jmp
mov
mov
imul
add
push
push
push
push
call
add
inc
xor
inc
pop
ret
push
mov
call
mov
push
add
lea
call
mov
and
test
je
and
mov
mov
mov
mov
mov
cmp
je
mov
push
mov
call
test
je
add
dec
jmp
mov
call
mov
ret
jmp
mov
test
je
sub
mov
xor
cmp
setne
mov
or
cmp
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
xor
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
dec
jmp
mov
call
mov
ret
xor
xor
cmp
setne
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
mov
call
or
cmp
je
push
push
call
xor
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
and
mov
mov
mov
mov
call
mov
mov
test
je
mov
jmp
mov
mov
add
push
call
add
and
mov
or
cmp
je
push
push
call
mov
call
ret
mov
call
mov
ret
push
mov
call
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
push
push
push
call
mov
mov
call
ret
mov
and
mov
ret
push
mov
mov
test
je
cmp
je
mov
push
call
and
pop
ret
push
mov
mov
test
je
push
call
and
pop
pop
ret
push
mov
call
mov
mov
mov
mov
pop
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
xor
cmp
setne
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
call
mov
xor
cmp
je
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
cmp
je
push
call
mov
test
mov
je
lea
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
xor
push
pop
mul
seto
neg
or
push
call
mov
mov
shl
push
push
push
mov
call
mov
shl
add
cmp
lea
mov
mov
je
mov
add
lea
add
push
mov
mov
pop
mov
movzx
test
mov
mov
je
and
or
mov
movzx
mov
cmp
jg
je
dec
dec
cmp
ja
jmp
add
add
mov
mov
jmp
add
add
mov
jmp
mov
add
mov
add
mov
mov
mov
mov
jmp
add
mov
fld
add
fstp
jmp
add
mov
fld
add
fstp
jmp
add
add
mov
jmp
add
add
mov
push
mov
call
cmp
mov
je
test
jne
call
add
add
mov
neg
sbb
mov
jmp
add
mov
add
mov
movs
movs
movs
movs
mov
push
pop
jmp
sub
cmp
ja
jmp
add
add
mov
mov
neg
sbb
push
and
mov
push
push
lea
mov
call
push
push
lea
mov
call
cmp
mov
je
push
call
pop
jmp
add
add
mov
mov
sub
sub
inc
mov
cmp
mov
jne
mov
xor
lea
push
xor
call
cmp
je
lea
push
lea
push
push
call
mov
mov
or
mov
add
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
lea
mov
call
mov
cmp
je
mov
shl
lea
jmp
cmp
jne
push
call
sub
inc
cmp
jne
push
call
cmp
pop
mov
jge
lea
push
call
cmp
je
push
call
cmp
je
lea
push
call
push
call
pop
mov
cmp
mov
je
push
mov
push
push
call
mov
push
mov
mov
call
test
je
push
lea
call
push
mov
call
push
call
test
je
push
lea
call
push
call
push
call
test
je
push
lea
call
push
call
mov
mov
mov
mov
push
lea
push
mov
call
mov
cmp
je
cmp
je
push
push
lea
push
push
call
mov
cmp
jge
lea
push
call
push
jmp
movzx
add
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
fld
mov
fstp
jmp
fld
mov
fstp
jmp
push
push
call
push
call
jmp
mov
xor
cmp
setne
mov
jmp
mov
lea
movs
movs
movs
movs
xor
jmp
mov
mov
mov
lea
mov
call
or
cmp
je
push
call
pop
call
ret
mov
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
test
inc
add
test
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
pop
mov
pop
ret
call
call
call
cmp
jne
push
call
mov
test
je
mov
test
je
mov
push
call
and
call
lea
cmp
jne
call
call
and
pop
ret
cmp
je
push
call
jmp
cmp
push
mov
jne
call
inc
mov
call
sub
cmp
jbe
call
call
mov
pop
ret
push
mov
call
call
mov
call
xor
cmp
je
or
jmp
push
call
cmp
jge
push
call
xor
jmp
mov
call
mov
cmp
mov
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
or
mov
call
mov
call
xor
inc
call
ret
mov
ret
push
call
test
pop
je
mov
and
ret
xor
ret
mov
test
je
and
mov
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
call
jmp
xor
or
push
mov
call
mov
call
ret
push
call
mov
jmp
push
call
mov
xor
test
je
add
jmp
ret
push
mov
push
mov
test
je
push
call
test
je
push
lea
call
and
mov
pop
pop
ret
cmp
jne
xor
ret
call
push
call
ret
push
mov
mov
call
test
je
push
call
cmp
mov
in
push
call
out
jmp
popa
and
sbb
add
xchg
ret
scas
ret
test
clc
fisttp
or
push
push
cmp
ret
mov
push
frstpm(287
pusha
xchg
jb
hlt
neg
shl
cli
enter
shl
mov
es
pop
push
push
xchg
rol
shr
or
push
and
adc
in
ja
(bad)
ror
mov
lea
aam
cmp
push
dec
pop
push
adc
mov
into
sbb
ss
int
out
(bad)
jg
xor
adc
mov
cmps
jle
mov
shl
cmp
mov
movs
or
into
cmp
pushf
ret
mov
and
lock
sub
leave
(bad)
mov
or
and
cmp
cmp
fdiv
or
dec
mov
in
xlat
call
shr
mov
js
adc
dec
in
add
dec
lea
xor
xchg
jp
inc
pop
sahf
popf
and
adc
dec
repnz
jnp
nop
pop
mov
mov
jmp
inc
sbb
lods
stc
ret
fst
xor
dec
dec
cmp
inc
or
iret
sbb
jb
mov
sub
jp
ret
test
test
mov
adc
and
mov
add
cmp
sub
and
(bad)
pop
jge
sti
lahf
out
mov
(bad)
iret
aad
mov
xor
mov
adc
push
add
xor
pop
jns
inc
cmp
jnp
push
add
push
jmp
(bad)
gs
aas
push
jo
pusha
fcomp
pop
jl
push
dec
repnz
das
xor
out
xchg
shr
push
loop
icebp
xlat
or
test
inc
mov
scas
xchg
mul
lods
cli
or
mov
in
fistp
mov
xor
jns
repnz
jmp
loop
scas
pop
push
or
arpl
out
sbb
daa
adc
dec
xchg
or
jae
jmp
lock
nop
mov
or
mov
cli
xor
aad
sub
pop
fdiv
mov
adc
test
(bad)
dec
retf
test
rol
mov
rcl
(bad)
es
cmp
sbb
(bad)
mov
leave
inc
mov
jecxz
inc
mov
and
mov
or
sbb
imul
sbb
and
loop
loopne
inc
lods
repz
mov
jnp
mov
push
fdiv
lods
cmp
mov
data16
pusha
push
enter
inc
rcr
imul
bound
jo
xlat
xor
cmps
(bad)
stc
mov
pop
out
movs
xor
mov
popa
lea
cmc
cmp
sti
pop
adc
jbe
enter
mov
sub
jl
in
les
das
cmp
dec
and
mov
shl
mov
mov
push
mov
push
cmp
ja
lods
sub
pop
sub
in
cmps
repz
xchg
jae
nop
inc
mov
xchg
rcr
add
(bad)
mov
sti
cld
cmps
cmp
test
sbb
add
inc
sti
xchg
ret
mov
ins
dec
xchg
pop
or
jae
rcr
jns
mov
xor
sbb
or
inc
sbb
sub
scas
dec
xchg
ror
mov
ret
push
sub
push
push
test
arpl
dec
imul
push
cdq
xchg
push
jns
out
add
sbb
fdiv
mov
push
jmp
cmp
inc
jecxz
sbb
pusha
out
stos
cld
ins
scas
mov
jecxz
ror
push
cld
pop
jg
je
sub
mov
add
sub
arpl
inc
out
dec
inc
sbb
outs
enter
mov
mov
retf
test
pop
lods
imul
call
adc
xchg
pushf
and
cmp
add
mov
or
fsub
std
sub
popa
mov
dec
mov
xchg
leave
popf
xchg
mov
(bad)
mov
(bad)
or
xchg
imul
jb
cmps
clc
out
cmps
add
jl
into
in
not
jmp
push
and
ins
inc
and
out
or
call
adc
stos
popf
out
and
add
cmp
sub
cs
push
xchg
cmps
add
add
(bad)
nop
cmp
push
push
pop
sbb
test
sbb
mov
fcmovu
popa
rcl
retf
test
jns
sbb
(bad)
pop
xchg
les
and
nop
jmp
mov
or
cs
and
xlat
dec
fs
pop
js
pop
sar
fnstcw
ds
mov
hlt
dec
icebp
cmp
xchg
pop
and
fwait
aaa
push
inc
nop
je
arpl
fsub
nop
push
popf
stos
pop
xchg
imul
add
stc
pop
call
jecxz
out
cmp
repnz
cmp
js
cmp
adc
dec
adc
adc
mov
shl
cdq
mov
pop
cs
out
pop
inc
adc
cmc
adc
pop
test
icebp
call
xchg
mov
into
push
push
(bad)
mov
adc
xor
jecxz
cmp
cwde
adc
retf
lea
push
ins
xchg
jno
jne
pop
stc
leave
sub
jo
lods
jmp
xor
pop
mov
test
inc
cmp
dec
fdivr
loope
hlt
movs
mov
push
fidiv
mov
sahf
sub
pop
dec
sbb
imul
pop
jmp
jmp
push
push
mov
cmp
mov
repz
pop
dec
fwait
jmp
call
dec
add
cli
or
ficomp
shl
fucomp
inc
pop
iret
xchg
sub
xchg
cmps
sub
and
sub
xor
addr16
adc
bound
mov
rcl
sbb
jle
xlat
(bad)
sti
loopne
and
mov
xchg
(bad)
mov
add
loope
retf
jo
pop
dec
clc
mov
mov
xchg
test
out
lods
add
(bad)
jmp
xor
dec
lds
xchg
jle
lea
mov
mov
mov
repnz
mov
movs
jmp
cwde
jg
mov
iret
mov
and
and
push
push
jns
xor
loope
or
dec
cmp
ds
add
out
mov
xor
pop
movs
dec
push
pop
push
push
push
cmp
ss
sub
stc
or
test
stos
sbb
push
test
aam
nop
cwde
jo
(bad)
jle
cmp
xchg
xor
out
int3
rcr
mov
cmp
outs
icebp
sbb
mov
(bad)
js
xor
push
loop
dec
js
sbb
xchg
xor
icebp
sahf
cdq
sar
loop
daa
mov
arpl
xlat
pusha
sbb
sbb
xor
mov
pop
enter
in
fstp
popf
movs
pop
and
stos
test
scas
or
push
and
dec
xchg
dec
xchg
jle
out
out
cmp
push
pop
mov
popa
xchg
and
dec
aad
imul
call
or
int3
mov
push
int
enter
js
push
push
sub
sbb
pop
inc
ror
mov
add
pusha
mov
test
out
or
inc
push
and
or
mov
mov
jbe
jb
test
inc
push
sub
repnz
fist
retf
jg
imul
inc
mov
inc
xlat
enter
jmp
lods
xor
cwde
lahf
sub
(bad)
sbb
jns
enter
popf
inc
xchg
mov
mov
popf
pushf
add
push
jge
adc
and
xor
in
sub
mov
js
in
idiv
dec
mov
xor
retf
call
fwait
sub
stc
mov
ja
repnz
fwait
sbb
imul
dec
js
scas
daa
movs
dec
push
lahf
mov
cmp
test
cdq
jb
xor
call
adc
stos
adc
push
add
or
dec
and
mov
sti
std
mov
inc
or
jno
mov
std
inc
push
adc
mov
sti
push
mov
int
adc
mov
dec
addr16
push
push
dec
cmp
in
test
pop
sub
xchg
cmp
(bad)
mov
push
retf
cs
add
div
sbb
inc
movs
loope
pusha
mov
dec
outs
xlat
or
ins
ss
adc
and
and
ds
push
call
jnp
rcl
cmp
into
jo
lock
jl
mov
mov
push
or
inc
jbe
dec
mov
sbb
retf
dec
fdivr
adc
ror
cmc
xchg
jnp
(bad)
pop
push
dec
nop
adc
aaa
and
jnp
xlat
sbb
lods
xchg
ins
pop
jns
jae
pop
fsubr
dec
aaa
mov
stos
sbb
or
arpl
in
adc
sub
(bad)
mov
cmp
push
cdq
jge
dec
int3
fwait
popf
imul
(bad)
fistp
imul
lahf
dec
lock
pop
cwde
xor
hlt
mov
(bad)
mov
sbb
(bad)
and
mov
xor
xchg
mov
xor
jno
scas
mov
in
pop
in
lgs
leave
cmp
and
daa
inc
repnz
es
(bad)
mov
(bad)
mov
ret
std
push
or
dec
test
mov
cmc
xchg
and
shl
sub
pop
test
cmps
imul
mov
hlt
stos
pop
sbb
sub
ins
cmp
ret
je
push
popf
jo
ins
inc
xchg
mov
rcr
push
mov
pop
mov
push
dec
dec
je
xor
shr
cmp
push
jo
out
call
sbb
clc
adc
les
jno
mov
cmps
fist
ss
mov
and
adc
mov
mov
out
mov
push
cmp
cli
mov
sar
jmp
rcr
repnz
inc
bnd
mov
sub
jmp
mov
(bad)
cdq
mov
cld
push
test
jo
repnz
cmp
xor
fiadd
ins
jmp
mov
mov
mov
push
or
jecxz
lds
loope
fwait
icebp
mov
mov
lea
dec
or
push
inc
dec
fstp
lods
daa
and
cwde
shl
sbb
fnstsw
(bad)
leave
stos
cmp
fdivr
push
sti
jle
mov
les
mov
jp
daa
je
ret
jns
xor
push
cmp
xor
xchg
repz
in
or
cmps
push
adc
mov
jo
movs
sbb
push
adc
xor
fcom
mov
mov
retf
stos
mov
ins
retf
pop
lds
ror
adc
jmp
call
repz
adc
jg
pusha
fist
mov
add
cli
fwait
jecxz
std
sub
stos
push
enter
aaa
adc
pop
inc
test
stc
sbb
clc
rcr
pop
jb
lods
fimul
cmps
mov
push
jg
jae
jp
sbb
arpl
or
pop
xchg
loopne
jmp
mov
(bad)
jle
and
sar
push
xor
cld
call
out
xlat
xchg
cld
xor
mov
repz
repnz
xor
shr
xchg
in
adc
and
adc
xor
call
dec
cmp
ds
out
adc
jmp
outs
in
or
repz
xor
mov
push
sbb
push
imul
jno
pop
and
mov
cmp
repz
mov
mov
mov
mov
sbb
(bad)
ja
push
push
add
push
repnz
inc
ror
ret
stos
call
stos
ror
out
icebp
dec
call
inc
sub
loopne
jge
js
fnstsw
dec
or
dec
mov
inc
std
imul
iret
stc
inc
int3
inc
push
in
mov
xor
fisttp
cmp
shr
hlt
sub
and
dec
or
cmc
lahf
xchg
ret
shl
jo
mov
sbb
in
jbe
mov
push
cdq
sub
jae
repnz
xlat
mov
lods
adc
or
mov
xor
mov
xor
arpl
sbb
sbb
mov
push
jmp
lock
jbe
in
ror
cmp
mov
lea
xlat
dec
retf
jmp
js
mov
ror
sbb
cmp
les
dec
pop
cmp
enter
push
(bad)
repz
xor
stos
inc
leave
out
clc
retf
mov
sub
inc
enter
sub
cmp
sub
mov
addr16
test
mov
sub
repnz
(bad)
retf
push
jecxz
cmps
mov
xchg
jno
adc
or
mov
arpl
dec
sbb
inc
cld
stc
mov
add
stc
frstor
sub
pop
cmps
call
jbe
adc
fstp
dec
adc
int
pop
pop
fistp
xor
mov
loope
mov
xchg
add
into
mul
xchg
jns
jo
mov
out
push
mov
cmp
aas
sbb
sub
cmp
(bad)
xchg
jno
xchg
and
pusha
pop
fincstp
cli
int3
jmp
ja
cld
test
jae
into
fstp
inc
fcom
push
add
es
fcom
das
inc
pushf
es
sub
ins
shl
mov
mov
xchg
out
mov
cmp
mov
or
cmp
fld
call
jo
(bad)
dec
mov
loope
inc
xor
add
mov
add
(bad)
fcmovnu
push
sbb
mov
mov
cmp
or
stc
add
xor
sub
fidiv
mov
ret
cmps
fldcw
jl
jae
stc
dec
sub
xor
movs
jle
cmp
mov
bound
mov
sub
jp
sub
jb
ins
cmp
jne
lods
(bad)
fst
mov
retf
dec
retf
adc
add
mov
push
cli
xor
mov
sbb
xor
jecxz
shl
enter
mov
lds
imul
inc
jl
or
outs
es
imul
ret
call
and
addr16
and
call
hlt
repz
push
xlat
jmp
xor
jnp
or
fwait
jmp
in
inc
inc
js
fdiv
arpl
adc
sub
ret
xlat
sti
mov
pop
arpl
pop
xchg
cmps
fwait
ror
stc
dec
add
and
pop
cs
int3
or
(bad)
aad
jnp
inc
sbb
sbb
stos
jo
dec
push
or
jecxz
jbe
(bad)
jo
ins
sbb
xchg
sub
ror
gs
pushf
push
adc
sbb
fcomp
push
(bad)
lock
leave
dec
jns
stos
mov
ds
les
lds
jae
les
push
xchg
(bad)
xchg
xchg
mov
arpl
imul
sub
js
sub
in
leave
mov
imul
aas
or
dec
jmp
adc
mul
imul
xchg
adc
xchg
mov
fld
mov
cmp
cmp
lods
js
nop
aas
loopne
jnp
xchg
add
icebp
out
addr16
jmp
fld
push
jb
icebp
mov
int3
lods
(bad)
add
fldcw
pop
mov
push
push
js
mov
mov
and
loop
mov
sbb
cmps
inc
fcmovnb
pop
mov
push
mov
inc
xchg
scas
leave
and
or
and
inc
cmp
xchg
out
add
jns
xor
shr
xchg
push
jb
fwait
outs
ror
sub
hlt
xor
fs
dec
pop
sub
gs
and
dec
jae
das
clc
adc
sbb
mov
iret
in
mov
pop
jb
(bad)
dec
mov
jp
xchg
outs
pop
mov
jecxz
icebp
test
dec
sbb
xchg
sahf
test
dec
not
inc
jno
test
xchg
push
in
cmp
sbb
inc
(bad)
not
(bad)
xchg
dec
retf
out
sub
hlt
sbb
mov
jg
test
idiv
mov
fst
xor
and
inc
cmp
mov
mov
inc
mov
js
ins
cs
lds
jecxz
add
sub
loop
xlat
fisubr
call
push
icebp
mov
fild
shr
jge
ja
call
sar
les
mov
test
scas
inc
mov
lods
sahf
mov
cmps
cld
bound
imul
iret
xchg
test
jg
std
pop
rcr
arpl
lods
scas
or
xchg
xor
push
fwait
xlat
cmp
cmp
and
gs
or
push
jbe
call
xchg
outs
cli
test
xchg
xchg
mov
mov
mov
jnp
mov
je
cmp
retf
jmp
sub
test
clc
test
sub
xchg
sbb
mov
cli
ds
inc
(bad)
adc
enter
je
fist
mov
jae
sub
mov
clc
fldcw
jmp
fisub
jo
mov
pop
push
mov
and
and
sub
inc
and
dec
gs
inc
lods
push
out
or
push
retf
sti
mov
adc
inc
dec
sub
not
in
and
adc
dec
xchg
lds
pop
adc
cmp
pop
adc
enter
not
mov
push
loopne
out
stc
arpl
les
and
sahf
cld
adc
js
jbe
pushf
xchg
test
addr16
enter
stos
call
or
outs
cmp
(bad)
push
cmp
xchg
xor
(bad)
push
popa
fsubr
out
xchg
fucomi
xor
sub
mov
and
or
shl
or
sub
mov
sbb
mov
xchg
in
mov
add
loop
pop
es
inc
dec
cmps
dec
xlat
call
add
in
retf
scas
pop
ret
jae
sub
stc
dec
sub
in
popf
ss
sub
pop
enter
cmps
cmp
and
mov
in
or
sbb
pop
inc
jmp
cwde
mov
xchg
sahf
xchg
addr16
(bad)
jae
rcr
rcl
stc
pushf
jmp
jno
sahf
fldcw
out
push
dec
vaddps
dec
adc
sbb
or
lods
xor
(bad)
mov
test
(bad)
push
jns
movs
addr16
mov
adc
mov
pusha
jo
mov
sar
xchg
jl
push
pop
fwait
xor
adc
in
jecxz
cmp
sub
push
pop
and
cmp
xchg
and
aaa
and
push
stos
push
sbb
inc
popa
jge
pop
pop
inc
and
sbb
push
stos
sahf
je
jb
add
adc
cmp
in
pop
scas
mov
mov
pop
cmp
inc
sub
mov
sbb
adc
add
movs
jecxz
push
enter
xchg
mov
cmp
mov
cmp
cwde
mov
sub
mov
adc
repnz
fucomi
adc
push
inc
pusha
pop
add
lock
call
stc
inc
nop
sub
fist
test
and
xchg
inc
loop
sahf
jmp
stos
js
shl
jae
arpl
xchg
cmp
ss
out
lds
rcr
or
ja
jp
js
es
inc
or
stc
(bad)
(bad)
jl
cmp
xor
pop
mov
ss
add
test
mov
mov
aas
(bad)
sbb
loope
pushf
xchg
dec
sti
(bad)
stc
dec
lea
int
push
pop
mov
sbb
pop
cdq
(bad)
(bad)
js
cmps
sub
loop
jp
sbb
stos
and
popf
xor
push
inc
adc
popf
pop
pop
jne
cmp
cwde
nop
cmps
jo
jo
loop
cs
inc
add
mov
inc
pop
push
ins
jp
and
scas
add
in
loopne
rcr
add
repz
int
outs
dec
mov
sub
test
(bad)
jb
inc
pop
shl
cli
sbb
jp
hlt
xchg
test
mov
adc
clc
jecxz
mov
dec
enter
cmp
jne
and
sub
fisubr
xchg
ret
nop
shl
mov
bound
mov
pop
adc
in
inc
pop
call
shl
mov
xor
out
mov
adc
data16
out
inc
jl
call
push
pusha
in
ins
out
add
and
data16
ror
fimul
stc
adc
jbe
mov
jmp
(bad)
push
jno
mov
jae
icebp
xchg
arpl
cli
cwde
pop
mov
loope
pusha
dec
inc
loope
dec
inc
mov
enter
pop
leave
ret
mov
sub
or
cmp
retf
sbb
dec
(bad)
(bad)
jmp
sub
(bad)
lds
call
xchg
(bad)
add
add
ins
sbb
sbb
push
xor
rcl
jne
push
sahf
jge
lock
xlat
outs
and
xchg
mov
mov
or
imul
and
sub
ds
shl
lea
push
inc
stc
push
adc
sbb
pop
mov
loope
sub
rcl
sbb
test
xchg
dec
icebp
cmp
pop
mov
mov
push
or
fsubr
in
pop
fidiv
push
inc
cmps
retf
xchg
jmp
mov
enter
ins
pop
push
lock
rcr
outs
jb
aad
aad
xchg
and
jns
mov
ins
fsub
dec
adc
loop
cmps
jns
lea
into
leave
lds
pop
fadd
xchg
sbb
push
and
fsub
dec
xor
mov
loop
inc
out
clc
and
jns
imul
(bad)
fistp
xor
and
jecxz
retf
push
or
pop
add
inc
jmp
xor
or
inc
out
push
jne
jp
xchg
imul
ret
xchg
shl
mov
(bad)
push
jecxz
or
fmul
sub
retf
icebp
add
test
shl
xchg
mov
mov
add
jne
imul
cmp
xor
and
push
jp
das
loope
lods
mov
cmp
cmp
loopne
mov
xor
jmp
shl
aam
cmc
add
inc
mov
mov
sbb
(bad)
stc
xor
inc
pop
xchg
ror
xchg
aas
adc
repz
mov
sbb
push
jae
fisttp
push
mov
gs
push
ins
pop
rcr
mov
mov
xchg
int3
repz
xchg
into
out
cmp
cmp
jbe
xor
pop
jnp
icebp
add
xchg
or
sbb
add
ret
cmp
xchg
cdq
retf
xor
adc
adc
push
inc
and
lock
cwde
shr
xchg
mov
rol
dec
es
mov
ret
fdivr
arpl
sub
ret
call
and
mov
es
lods
inc
mov
repz
inc
ds
mov
inc
mov
jb
push
mov
(bad)
push
jns
retf
fcomp
adc
icebp
pusha
mov
addr16
xor
mov
fmul
jae
push
arpl
jp
pop
adc
xor
scas
icebp
ja
xchg
inc
inc
xchg
jp
ja
pop
pop
xchg
dec
push
cli
adc
mov
xchg
adc
dec
pmaxub
sar
push
mov
test
push
mov
mov
mov
mov
(bad)
sbb
or
sbb
or
cmp
jge
and
ror
fadd
mov
scas
or
nop
mov
aaa
jecxz
rol
cmp
sub
sbb
in
dec
mov
inc
mov
sbb
js
clc
jae
push
arpl
xor
imul
inc
adc
xchg
retf
add
mov
dec
rcl
dec
add
sub
xor
clc
jmp
add
mov
fcom
sahf
cmp
repz
das
cmp
icebp
push
or
mov
movs
adc
cwde
test
cmp
push
add
mov
cli
ret
jns
mov
mov
inc
js
xor
ins
dec
dec
cmp
xlat
test
jg
lods
cmps
xor
movs
fcmovu
or
mov
push
cs
pop
pop
mov
mov
(bad)
(bad)
aas
pusha
mov
xchg
cmp
int3
ins
sub
push
inc
xor
fisub
jmp
push
push
cmp
(bad)
pop
xchg
fild
push
call
push
enter
mov
ror
ror
xor
sbb
loopne
push
inc
push
ror
arpl
nop
sub
aad
or
mov
mov
scas
fnstsw
push
scas
xor
mov
mov
mov
(bad)
outs
ss
mov
or
cdq
push
imul
jae
xor
dec
in
push
not
jle
idiv
add
push
loop
out
xor
ins
jo
mov
pop
and
(bad)
cld
out
das
sbb
mov
outs
fist
push
test
mov
es
sub
ficomp
out
jecxz
arpl
cmp
clc
sbb
sbb
jne
cmp
jno
mov
mov
xor
push
sbb
icebp
dec
lea
das
sbb
jb
data16
cld
or
test
mov
int
jb
retf
js
add
leave
inc
mov
dec
and
lds
icebp
shr
jb
push
int
inc
jmp
sub
repz
jmp
iret
in
or
sub
mov
jnp
jmp
inc
fnstenv
pop
sbb
das
add
pop
cmp
inc
aam
fisubr
packsswb
daa
daa
shr
cmp
mov
sub
dec
mov
ss
fist
mul
test
sbb
and
cmps
adc
adc
mov
idiv
xchg
test
popa
xchg
js
jo
scas
or
mov
imul
cdq
and
retf
sub
xchg
jbe
inc
pop
push
daa
add
cmps
stos
fstp
and
jnp
jo
cli
test
push
push
outs
cmp
mov
pop
dec
sbb
mov
fwait
xchg
mov
rcr
jns
je
stos
cdq
xchg
inc
xor
jo
pop
movs
add
cmps
inc
xlat
mov
(bad)
loopne
scas
or
rol
(bad)
aad
loop
or
add
call
leave
test
fiadd
hlt
dec
sbb
adc
(bad)
lahf
or
xchg
loop
push
add
imul
mov
clc
sbb
stc
dec
shl
js
push
lea
fisttp
adc
mov
popf
fwait
jecxz
aam
mov
xlat
popa
outs
call
cmps
cs
jg
popa
dec
and
cmps
sbb
push
cmp
mov
and
in
(bad)
jmp
sbb
inc
sub
mov
mov
xor
ret
mov
cdq
(bad)
push
fld
cmp
movs
cmp
int
pop
jmp
aam
pop
mov
mov
xlat
or
daa
dec
dec
popa
sahf
xor
sbb
in
loopne
addr16
cmc
(bad)
mov
mov
push
xchg
fimul
test
dec
jns
mov
xor
sbb
mov
and
(bad)
sahf
arpl
inc
int
cmp
shl
imul
ror
jecxz
add
and
or
mov
jb
or
inc
std
mov
mov
enter
and
mov
mov
js
pushf
hlt
call
ss
mov
mov
clc
stos
xchg
or
jecxz
retf
inc
jns
out
xor
xchg
xchg
ja
mov
cmp
shr
jmp
cs
cmp
bound
arpl
into
ins
test
sahf
(bad)
out
test
xchg
mov
js
push
inc
daa
and
xor
test
push
or
lods
sar
cmp
xchg
repz
shl
sub
rcl
test
xor
adc
sbb
pop
popf
xchg
pop
cmp
test
dec
cmp
cmp
or
retf
mov
cmp
cmps
mov
push
xchg
ja
xchg
xlat
and
(bad)
push
cdq
cli
dec
sar
xor
leave
cmp
and
imul
cmp
dec
arpl
retf
cmps
inc
xchg
or
and
mov
push
fiadd
or
aaa
mov
pop
cmp
retf
jmp
mov
or
xor
loope
enter
retf
push
adc
scas
mov
popf
test
mov
imul
pop
xchg
or
popw
or
pop
aaa
jg
add
and
mov
inc
sbb
adc
jmp
xchg
sbb
or
lahf
aas
and
sbb
push
dec
mov
inc
push
out
cdq
mov
add
jecxz
lahf
les
fwait
pop
sub
jge
push
movs
fdiv
cmc
into
loop
stos
inc
shl
jbe
ss
mov
jb
push
inc
push
jns
jae
or
cmp
dec
(bad)
jne
sbb
aaa
jnp
inc
cdq
xchg
test
call
inc
push
(bad)
pop
arpl
dec
aas
push
cmp
ins
add
adc
repnz
push
stos
mov
sub
mov
bound
sti
jns
fcomip
push
(bad)
fucomi
call
push
sbb
jl
mov
imul
xchg
dec
cwde
stc
sbb
arpl
pop
dec
into
jmp
add
jne
xor
sbb
sar
jmp
out
cmp
clc
add
mov
cdq
push
inc
inc
shr
(bad)
xchg
jmp
adc
mov
mov
xor
jo
outs
movs
jno
test
sub
mov
shl
std
rcr
mov
dec
and
leave
jp
mov
scas
add
loop
out
cmp
popa
xchg
movs
test
jnp
or
cs
leave
and
int3
push
xchg
inc
int
ja
mov
cmp
pop
pop
or
fisttp
mov
pushf
mov
ret
std
(bad)
lock
pop
mov
es
aam
or
dec
push
push
dec
ret
jl
mov
dec
jmp
dec
addr16
mov
test
xlat
(bad)
jnp
inc
imul
repz
push
cmc
mov
sub
mov
push
addr16
les
js
push
or
and
or
js
and
and
mov
popf
jg
cmp
inc
mov
test
scas
cmp
or
dec
mov
leave
ret
cmp
mov
xor
arpl
popf
inc
test
hlt
out
loop
add
cmp
fmul
mov
fsubr
scas
mov
ret
rcl
add
ja
fld
adc
cwde
test
or
inc
add
pop
adc
jb
ins
inc
xchg
and
dec
and
adc
cmc
iret
dec
add
cwde
xchg
push
xchg
fistp
movs
xchg
inc
call
lahf
cli
jle
push
fild
nop
push
mov
in
movs
jg
ins
int3
lods
cmp
jmp
sahf
mov
lock
sub
mov
inc
popf
xchg
(bad)
ret
imul
xchg
jge
jge
add
stos
mov
out
jecxz
arpl
jae
mov
mov
add
inc
arpl
sbb
jno
push
sub
cmp
cwde
pop
scas
xlat
and
mov
inc
pop
(bad)
fisub
jo
test
out
jge
aam
(bad)
and
and
jo
mov
mov
sub
push
adc
fld
sbb
and
pop
pop
cmps
popa
dec
adc
repz
arpl
mov
mov
mov
sbb
imul
leave
push
or
(bad)
outs
addr16
push
mov
pop
aas
loop
pop
xor
mov
movs
mov
(bad)
mov
or
or
or
mov
xor
push
stos
push
push
(bad)
call
jo
popf
je
cmps
daa
test
cli
inc
ror
sub
sbb
fld
jge
jmp
out
sahf
push
mov
sbb
mov
in
push
call
mov
movs
(bad)
int
int3
(bad)
ins
jmp
pop
mov
mov
lahf
cs
jl
xchg
in
idiv
and
out
stos
popf
js
retf
pop
inc
and
out
xchg
push
mov
or
js
fcom
mov
arpl
push
jae
loopne
xchg
xor
mov
lea
mov
jae
mov
pop
lods
add
neg
mov
inc
mov
or
cmp
pop
sub
push
(bad)
sbb
pop
(bad)
mov
add
lods
mov
(bad)
or
inc
dec
xor
sbb
ret
dec
inc
loop
ret
in
push
adc
jmp
outs
fcom
pop
push
outs
mov
add
lock
add
out
pop
lods
add
(bad)
nop
cmp
inc
cmp
xchg
push
fs
cli
sub
jnp
push
arpl
dec
dec
push
mov
jl
mov
mov
add
enter
inc
adc
inc
rcr
sub
icebp
sub
leave
adc
je
push
push
fsub
mov
mov
mov
push
lea
ds
cmp
cmps
nop
pop
in
(bad)
jo
mov
dec
mov
aam
in
arpl
int
or
inc
aas
mov
imul
or
mov
pushw
add
std
lahf
xchg
mov
inc
shl
in
ins
ror
push
mov
cwde
ficomp
arpl
je
repnz
xchg
and
fst
jae
and
stos
or
push
inc
stc
mov
sub
sub
(bad)
pusha
hlt
inc
sti
xor
test
mov
mov
jge
loop
aad
(bad)
icebp
fbstp
mov
push
inc
and
sbb
sub
sub
gs
daa
clc
cmp
jecxz
inc
push
(bad)
cs
addr16
jns
sbb
dec
pushf
stc
jmp
test
cmp
adc
ins
popa
adc
push
out
dec
inc
rol
rcl
mov
adc
(bad)
in
xchg
fnstenv
hlt
inc
sub
and
xor
cmp
pop
sub
xor
mov
in
mov
push
add
js
retf
cmp
(bad)
push
jle
ss
xor
add
nop
xchg
adc
add
mov
lods
sti
mov
fs
sbb
into
enter
ror
les
and
dec
into
arpl
jbe
push
pop
les
mov
adc
fwait
xchg
sub
jmp
jo
mov
push
and
mov
sbb
repnz
ret
push
jmp
xor
daa
sbb
xor
sbb
hlt
cdq
push
repnz
scas
imul
mov
sub
(bad)
cdq
std
xchg
inc
fsqrt
test
scas
cmp
xchg
les
xchg
lods
cmp
das
xchg
mov
(bad)
add
mov
push
mov
jb
sub
push
ret
pop
mov
cli
jmp
or
retf
mov
jbe
outs
ins
sub
xchg
mov
and
retf
xchg
xchg
mov
jp
jns
mov
popa
mov
(bad)
dec
push
fisttp
push
add
xor
cwde
xor
cmps
(bad)
or
jmp
and
pop
xchg
iret
daa
jbe
sbb
xchg
cmp
fbld
rcl
cmp
xor
xchg
push
mov
sbb
jns
mov
cmps
sub
popa
push
(bad)
mov
test
dec
dec
add
push
neg
scas
xor
xor
shl
mov
sahf
and
mov
dec
scas
hlt
cdq
adc
loope
ds
xchg
mov
push
sbb
stos
jmp
shl
outs
jne
mov
jle
jo
jmp
mov
sbb
icebp
repnz
hlt
pop
mov
call
jns
adc
out
add
(bad)
aad
stc
mov
jmp
das
outs
mov
xor
mov
idiv
mov
jns
xchg
jae
and
xchg
outs
pop
inc
pusha
dec
sbb
(bad)
fidiv
cmp
or
aaa
repz
int3
rcr
xchg
imul
fwait
xor
(bad)
push
(bad)
sub
imul
mov
sti
neg
mov
jmp
mov
jne
mov
stos
mov
cmp
js
xchg
lahf
(bad)
out
addr16
fisubr
push
pop
and
ret
in
add
not
test
jmp
adc
out
jns
inc
ret
out
jb
pop
fistp
icebp
or
push
imul
add
sub
and
jl
stos
add
stc
pop
sbb
inc
ret
cmc
mov
jo
xchg
pop
test
push
mov
jl
out
jecxz
cmc
fld
lock
jae
fucomp
sbb
fisub
adc
jne
cmp
push
sbb
push
or
and
push
fldcw
inc
add
jne
fs
dec
arpl
and
rcl
mov
cmps
lods
mul
mov
jnp
test
add
xor
rcl
movs
mov
dec
add
call
jmp
mov
lock
out
inc
xchg
push
aas
push
xchg
push
repz
nop
dec
dec
cs
cld
pop
(bad)
mov
sbb
adc
pop
aas
fmul
aas
push
lods
cmp
adc
and
push
and
ror
ror
cmc
push
leave
jo
dec
hlt
lods
and
add
dec
call
ret
repz
or
jecxz
jg
adc
idiv
or
fst
imul
inc
ins
jae
mov
inc
mov
nop
rcr
pop
pop
or
pop
or
mov
cmp
mov
mov
mov
cmp
jge
jp
cmp
fs
mov
push
sbb
scas
jo
or
cmc
(bad)
(bad)
mov
sub
sbb
adc
push
repz
ffreep
mov
in
mov
sub
rol
xor
mov
std
or
add
or
inc
push
inc
dec
sbb
push
mov
adc
stos
inc
cld
sub
jge
dec
inc
leave
adc
or
test
cli
sar
sahf
xchg
add
mov
jns
sbb
pop
fst
sub
dec
fs
ror
sub
push
int
nop
fwait
dec
push
push
shr
bound
jne
int3
sbb
lods
ja
cmp
inc
mov
add
jl
ins
xchg
mov
je
or
(bad)
xchg
imul
lea
dec
push
cmps
mov
mov
mov
pop
sub
aaa
aas
dec
in
sbb
fcomp
pop
jl
cmp
movs
fcomp
cdq
add
loope
clc
loop
cmp
cmc
xor
inc
cld
rol
sahf
add
rcr
push
ds
xchg
sbb
cmc
es
dec
sbb
and
add
jnp
loope
cmps
out
push
xchg
outs
cwde
or
push
neg
xor
cs
add
jb
loopne
dec
push
cld
jo
and
inc
sahf
push
in
jmp
data16
rcr
fld
ret
jg
push
js
sar
cmp
adc
sti
std
cmp
(bad)
ja
xor
cmp
pop
hlt
mov
jns
or
dec
pop
mov
arpl
jmp
ret
jmp
ja
es
mov
rol
inc
mov
mov
sbb
fidiv
mov
adc
xchg
jb
fwait
arpl
push
or
sbb
mov
frstor
cmc
outs
rcl
add
push
shl
mov
mov
ror
cmp
inc
dec
into
clc
aas
ror
js
dec
inc
dec
push
inc
xor
fiadd
lods
mov
enter
mov
les
enter
xchg
xchg
adc
or
push
pop
js
push
retf
repz
(bad)
jmp
pusha
add
popa
or
jmp
sbb
ins
std
add
rol
retf
and
out
test
iret
js
push
push
call
sbb
push
icebp
fadd
jmp
dec
inc
les
xchg
mov
lea
in
ins
ins
xor
fdiv
push
add
add
repnz
xor
pushf
cmp
mov
mov
lods
xchg
pop
lock
sub
dec
ret
je
inc
jae
stos
jns
fldenv
push
rcl
imul
pop
fwait
sti
jb
out
enter
test
push
or
xchg
retf
xchg
repz
cmp
ret
lods
mov
(bad)
sbb
mov
lods
jno
test
jo
jo
push
mov
sbb
pop
lock
push
mul
stos
sub
pusha
and
test
mov
mov
xor
call
mov
xchg
mov
sbb
push
cmp
fild
xchg
inc
mov
lea
sub
inc
fist
cs
cmp
mov
leave
cmp
dec
and
scas
sub
mov
dec
dec
movs
outs
or
xor
cmp
(bad)
fcmovne
xchg
mov
jg
imul
mov
aam
daa
fldenv
call
std
jmp
mov
mov
sub
lods
push
jno
rol
mov
aad
or
adc
ror
std
adc
mov
push
jp
dec
fild
popa
adc
inc
mov
aad
mov
in
lods
lahf
mov
xchg
call
cli
movs
cmp
push
mov
or
sbb
adc
add
add
or
test
sub
xor
mov
loop
xlat
inc
jecxz
retf
es
dec
mov
jbe
pop
adc
imul
and
fdiv
fwait
arpl
push
pop
dec
lods
ins
leave
jne
das
scas
push
sbb
adc
push
cmp
jae
nop
jp
sub
iret
push
ror
pop
jl
dec
test
lahf
pop
sbb
mov
push
xchg
inc
mov
jnp
(bad)
cmp
xor
or
in
xchg
sub
(bad)
hlt
js
int3
cmps
xchg
xchg
xchg
dec
or
stos
dec
inc
adc
or
dec
pop
(bad)
rcl
(bad)
out
pop
or
fwait
inc
test
addr16
test
loope
daa
adc
sub
sub
inc
in
fistp
sub
push
clc
movs
fist
inc
in
sahf
dec
aam
inc
call
jmp
push
dec
inc
jle
inc
xor
fs
mov
push
leave
ds
arpl
dec
and
ds
push
js
sub
sar
mov
cmps
xlat
xor
sub
jmp
data16
shl
dec
add
push
jg
fdivr
int3
push
pop
xor
push
jnp
sbb
ins
mov
cmp
push
std
fisub
jle
xchg
inc
add
(bad)
popa
fdiv
sbb
enter
or
imul
(bad)
xor
out
mov
retf
outs
mov
add
imul
je
pop
mov
mov
nop
stc
lods
data16
jae
out
sub
stc
in
shl
jmp
adc
int3
and
mov
lea
loop
mov
or
mov
arpl
repnz
out
cmps
int3
adc
sub
sbb
or
sbb
add
pop
adc
adc
lea
mov
rcr
imul
inc
arpl
fadd
xor
dec
stos
fldcw
cmps
mov
push
mov
clc
pop
inc
stc
arpl
daa
js
loopne
div
aam
jo
push
mov
ds
jno
and
pop
jbe
or
sbb
iret
ja
xchg
ret
scas
sub
retf
cdq
bnd
ds
mov
xor
and
js
or
xchg
test
arpl
fwait
test
in
xor
lods
cmp
adc
and
mov
retf
cmc
fmul
mov
push
imul
pop
adc
dec
psraw
sbb
cmp
outs
dec
xchg
mov
jg
mov
pusha
adc
inc
movs
fs
out
push
sar
jl
cwde
lock
stos
mov
fld
movs
and
fcmovnu
sbb
push
and
mov
clc
stc
lock
movs
add
call
adc
jo
mov
push
scas
push
or
mov
rcl
cmp
pop
gs
xlat
ja
arpl
cmp
xchg
cmp
dec
hlt
xchg
outs
aaa
ja
pusha
xchg
push
jbe
stos
xchg
jl
cmps
icebp
push
xchg
cmp
jo
mov
sbb
cmp
clc
arpl
in
mov
sbb
push
mov
(bad)
jmp
xchg
mov
dec
or
ss
jmp
pop
add
sub
call
xchg
dec
enter
xchg
imul
ins
jae
or
dec
outs
dec
add
cmp
mov
mov
push
inc
jbe
mov
nop
jbe
dec
movs
loop
fsubr
push
in
and
cmp
outs
jb
dec
mov
dec
cmp
sbb
inc
test
or
and
and
mov
ss
mov
test
xchg
rcl
or
mov
and
enter
and
push
data16
in
out
test
retf
(bad)
loope
push
push
cmp
loopne
test
jg
add
mov
or
dec
jae
mov
scas
mov
mov
mov
(bad)
loopne
mov
fcom
mov
cmp
ret
add
xor
pop
sti
in
adc
icebp
and
ror
in
mov
mov
cmp
add
cdq
dec
lahf
loop
sar
frstor
xchg
add
ss
push
pop
adc
xor
adc
ins
mov
xlat
nop
cmp
scas
cdq
push
pop
imul
sub
cmp
dec
pop
fsub
repnz
jmp
call
fidivr
or
inc
rcl
(bad)
aaa
add
ret
xor
pop
mov
cmp
(bad)
data16
xchg
aaa
test
rcr
push
dec
repz
call
test
jno
test
jo
fs
fimul
test
inc
daa
pushf
xchg
das
pop
out
call
int3
xchg
pop
and
stos
(bad)
fst
dec
push
pop
movs
(bad)
out
hlt
shl
ret
mov
xor
adc
or
sbb
das
push
sahf
push
cdq
push
shl
jne
mov
inc
sub
mov
stos
inc
out
sbb
sti
loope
xchg
push
inc
mov
scas
push
push
mov
and
(bad)
ror
shl
in
dec
fnstenv
inc
cmp
loopne
out
fs
in
dec
int3
sub
(bad)
call
js
cmps
mov
mov
ret
test
test
add
pop
sbb
or
pop
pop
fiadd
scas
sub
jl
mov
sub
inc
repnz
add
inc
shl
int3
adc
(bad)
scas
ja
sar
xchg
inc
cmp
imul
add
dec
aad
mov
jae
arpl
repz
movs
xchg
cmp
or
sub
ss
cmps
test
loope
mov
push
inc
repz
test
sbb
rol
call
add
rol
rcr
push
test
add
es
mov
jb
sar
sub
xchg
xor
les
ds
and
mov
out
sbb
mov
sbb
clc
rcr
popf
std
aaa
cmp
mov
lea
mov
imul
cmps
jl
fild
mov
mov
push
mov
push
cmp
lods
pop
cdq
sub
std
sbb
imul
push
or
pop
mov
sub
pop
gs
mov
ins
mov
jle
pop
adc
ret
jg
cdq
int
mov
aad
ret
cli
fstp
mov
xchg
or
mov
gs
sahf
sbb
add
call
stos
ss
and
xor
sub
dec
sbb
inc
inc
idiv
sahf
pop
mov
pop
scas
jns
ror
es
adc
fcomp
in
xor
fstp
int3
sbb
mov
mov
inc
jne
stos
adc
mov
mov
inc
ja
push
outs
dec
repz
js
adc
pop
repz
lea
xor
or
cli
mov
retf
cdq
push
mov
mov
mov
inc
push
add
add
icebp
add
add
ds
sti
aas
push
cs
jl
jg
fdivr
sbb
imul
cmps
fnstcw
sub
cmp
shl
js
test
jns
inc
pop
dec
inc
inc
inc
rcl
cmp
mov
or
cmc
or
xor
out
test
retf
aam
dec
loope
cmp
mov
int
es
cdq
mov
xor
inc
jb
call
adc
dec
mov
test
ret
or
push
stos
sbb
adc
jecxz
shr
pop
rcr
shl
and
pop
retf
stc
sbb
jp
mov
(bad)
in
ror
(bad)
jecxz
ds
cmp
xchg
cwde
cmps
push
sbb
and
xchg
ins
daa
pop
xchg
fsubr
push
add
jns
ficom
pop
fwait
stos
mov
ret
jns
fucomip
sbb
pop
xchg
shl
sub
leave
inc
xchg
scas
sbb
inc
hlt
mov
scas
pop
xlat
pop
xlat
cdq
jl
mov
cwde
cld
and
mov
or
inc
int3
add
sbb
xor
cmp
jb
je
mov
mov
or
xor
sub
xor
retf
or
sahf
pusha
sahf
js
push
call
in
sub
rcl
call
jo
mov
add
inc
mov
adc
sar
ds
pop
xor
imul
(bad)
sahf
xchg
adc
lock
cwde
xchg
push
add
pop
stos
fdiv
push
mov
push
mov
test
sub
outs
ins
pop
fcmovbe
inc
pushf
push
aad
fld
sbb
call
sub
and
movs
jmp
cmp
dec
push
cmp
nop
cdq
push
jns
add
repnz
cwde
int
xchg
pop
retf
ins
scas
cmps
adc
lea
push
leave
test
ins
mov
push
out
pop
aad
jb
mov
sub
adc
sbb
or
loop
cld
cwde
(bad)
cmps
xchg
sahf
mov
jnp
out
sub
(bad)
mov
cmp
pop
or
add
repnz
dec
shr
xchg
movups
and
bound
dec
add
ret
aas
ds
jg
xor
mov
sub
pop
leave
mov
nop
jb
cld
mov
je
sahf
xchg
xor
popa
xlat
and
jecxz
adc
xor
int
jge
loopne
test
inc
cmp
jo
or
lahf
adc
inc
and
gs
push
pop
(bad)
icebp
xor
pop
cmp
arpl
fwait
pop
and
and
mov
jbe
push
xchg
cmp
cmp
jl
jle
adc
xchg
adc
push
stc
inc
xor
ror
or
jne
push
aad
and
mov
xchg
lock
scas
add
xor
mov
mov
bound
ror
dec
ds
cmp
pop
push
repnz
xchg
xor
test
and
out
pop
pop
dec
jmp
jmp
sbb
test
int3
out
mov
cmp
add
lods
lods
mov
addr16
or
ss
dec
dec
jmp
lods
lea
movs
and
cmp
test
loope
sbb
mov
add
adc
fist
jbe
mov
mov
(bad)
push
xor
sbb
(bad)
enter
add
push
popa
mov
imul
test
pop
rcl
loopne
or
jmp
lds
mov
inc
push
rcl
pop
push
out
lea
dec
icebp
aad
or
adc
or
mov
pop
sub
pop
cmps
stc
rcr
retf
cdq
sahf
cmp
mov
xchg
call
and
pop
loop
popa
sub
loop
push
jp
(bad)
lods
lock
je
adc
fild
cmp
stos
add
nop
sbb
ret
jmp
sbb
test
in
fsub
ss
mov
jecxz
ret
or
loop
shl
cli
push
imul
ror
jle
(bad)
dec
cmp
xor
mov
sti
mov
ins
in
add
adc
mov
sub
xor
jnp
rol
outs
retf
inc
lock
mov
mov
mov
mov
add
ss
pop
pop
call
sbb
xchg
out
pop
mov
pop
dec
idiv
jp
bound
outs
pop
pop
adc
push
jbe
mov
push
mov
sbb
mov
ror
mov
in
cmp
mov
loop
xor
sbb
dec
nop
ret
push
add
bound
retf
adc
lahf
les
mov
cmp
push
mov
cdq
jno
add
mov
sub
xor
sti
dec
popf
stc
push
and
nop
sub
cmc
jle
cmp
pop
xchg
or
daa
mov
mov
inc
clc
fmul
mov
sub
inc
sub
icebp
xchg
push
push
cmp
je
nop
push
jnp
repz
mov
and
ins
mov
pusha
in
ss
jb
iret
xchg
lods
mov
mov
mov
push
xchg
into
stos
or
ins
adc
add
push
arpl
or
or
cmp
jmp
arpl
or
push
or
mov
inc
sub
(bad)
pushf
rcl
sub
xchg
js
mov
stc
lods
adc
cdq
add
add
sbb
or
mov
mov
outs
sahf
and
outs
les
cmp
js
mov
or
and
mov
inc
mov
imul
mov
movs
jmp
sub
outs
or
xchg
push
mov
les
push
(bad)
aaa
and
jbe
sbb
mov
cld
xchg
lods
test
mov
inc
popa
pop
icebp
ret
and
test
in
dec
mov
sbb
(bad)
mov
loopne
dec
aad
push
jnp
mov
imul
xchg
int3
xor
xchg
and
mov
mov
cmp
sbb
xor
shl
dec
repz
call
out
inc
adc
out
rcr
adc
jg
je
push
inc
pop
mov
xlat
fcmovbe
lahf
dec
lea
es
test
call
retf
mov
mov
jb
dec
fstp
out
out
ret
test
add
sbb
xor
shl
shr
adc
ss
jb
mov
mov
mov
cwde
aas
mov
adc
mov
jbe
add
mov
push
mov
into
retf
adc
pop
ins
push
cmp
test
pop
test
mov
jb
jb
(bad)
mov
cmc
repnz
adc
pop
sbb
mov
gs
pop
mov
xor
jne
out
in
jle
ret
xchg
inc
pop
push
fist
jns
or
jle
hlt
cmp
inc
std
mov
cmp
sub
pop
(bad)
clc
push
xor
sub
jmp
clc
shl
mov
pop
aad
test
outs
lea
mov
jmp
adc
add
sub
pop
jae
fdivr
cmc
mov
pop
sub
sub
dec
sub
mov
pop
dec
hlt
jecxz
adc
mov
adc
jp
adc
bound
sbb
test
fcomp
mov
adc
xlat
add
mov
xor
inc
inc
pop
pop
jp
fsub
xor
adc
fsub
in
test
or
adc
or
cmp
inc
int3
cmps
adc
loopne
cdq
push
mov
jns
mov
arpl
dec
ss
and
cli
in
fucomi
xchg
sub
inc
sub
pop
pop
jecxz
mov
outs
out
cmps
les
jecxz
mov
mov
cmp
mov
test
pop
jae
xlat
shl
cli
xchg
or
fstp
popf
fistp
aad
cmps
clc
imul
clc
jbe
js
movs
mov
sbb
mov
mov
movs
test
pop
outs
lahf
fs
inc
outs
lods
test
xor
lds
mov
enter
fwait
das
mov
int3
gs
xchg
mov
leave
xchg
jl
cmp
xchg
nop
fs
adc
ds
das
sar
push
mov
sub
std
fldenv
mov
bnd
loop
pop
jle
and
loop
out
inc
ret
mov
xchg
pop
add
xor
push
inc
mov
xor
push
repnz
xchg
mov
stos
sub
xchg
xchg
ds
nop
popf
adc
dec
sbb
(bad)
push
cmp
loope
ins
loop
into
dec
ret
lods
mov
stc
push
loop
inc
add
enter
fld
scas
mov
jbe
mov
push
add
data16
adc
rcl
js
jmp
(bad)
mov
inc
mov
push
cmp
xor
dec
xor
mov
out
mov
les
pushf
cmp
inc
pop
push
pop
adc
xor
inc
daa
xchg
in
and
push
dec
stos
(bad)
cmp
mov
pop
imul
loope
mov
retf
pop
sti
or
mov
stos
jbe
or
sbb
mov
icebp
cld
lea
rcl
pop
and
cmp
enter
repz
lds
sub
xlat
mov
pop
sbb
adc
pusha
inc
outs
fld
mov
mov
bsf
repz
cli
sbb
call
fldpi
stos
and
xchg
jns
fild
and
cmp
push
lods
push
clc
jle
mov
add
mov
pop
jno
mov
jg
test
mov
jmp
rcl
mov
dec
enter
inc
pop
out
pop
inc
push
popa
add
sub
test
dec
in
jmp
add
mov
dec
fcom
and
dec
div
aas
out
jp
cmp
repnz
xor
dec
adc
jno
inc
xor
mov
int
fdivr
or
test
sti
adc
add
xor
xchg
(bad)
movs
das
mov
adc
sti
push
rcr
jnp
pop
push
push
mov
push
call
sub
jp
jne
(bad)
pop
cmp
bound
xor
push
in
stos
pop
jp
cmps
xchg
sbb
lock
mov
pushf
jne
jo
push
xor
ja
jne
cmps
lea
mov
in
outs
jnp
push
pop
and
mov
std
mov
(bad)
dec
mov
ins
xchg
sub
movs
popf
in
push
cmovb
call
loopne
mov
or
call
inc
fisttp
enter
shl
in
movs
test
clc
mov
pop
mov
push
xor
call
sub
call
cmp
xor
sbb
and
jae
ins
inc
std
fidivr
cld
ret
fisub
js
dec
out
xchg
lahf
out
stos
pushf
pop
pop
sti
pop
sahf
cmp
jmp
nop
aad
xor
jmp
mov
cmp
lods
and
pop
lock
mov
mov
mov
cmp
jne
stos
mov
movs
cdq
pop
sbb
enter
pop
sahf
mov
add
inc
mov
stc
inc
addr16
mov
adc
daa
or
mov
mov
pop
fbstp
jne
push
(bad)
jne
cdq
mov
add
cld
sti
sti
arpl
(bad)
and
sar
xor
dec
cmp
aas
xor
jmp
enter
dec
cwde
icebp
push
inc
jb
xchg
or
out
jb
mov
push
cmps
add
push
or
rcr
(bad)
push
loop
mov
arpl
dec
and
add
or
jmp
dec
idiv
jmp
xchg
xchg
(bad)
jmp
pop
dec
movs
aas
jmp
clc
je
jne
gs
leave
pop
inc
mov
sub
sub
xor
sti
push
fild
xchg
sar
sbb
sti
mov
int3
into
xor
xchg
jmp
or
sub
bound
cmp
xchg
leave
xchg
fs
xchg
xlat
mov
mov
in
xor
xchg
mov
add
dec
inc
fwait
mov
sub
pushf
ror
dec
inc
dec
pusha
add
jecxz
mov
pop
or
xacquire
cmp
jb
xchg
jge
pop
cli
sub
jb
sbb
outs
dec
sbb
sub
pop
mov
lock
sub
jmp
mov
pop
inc
arpl
push
push
pop
cwde
xchg
cwde
push
fnstcw
les
pop
mov
nop
push
mov
imul
mov
out
cmc
test
cmp
xchg
cmp
inc
jmp
xchg
js
test
mov
dec
je
rol
and
sar
jnp
xchg
enter
cmp
lock
push
movs
repnz
mov
jns
test
push
aaa
sti
int3
test
imul
fiadd
inc
push
xlat
cmp
clc
xlat
scas
outs
xlat
cmp
dec
aaa
sub
repz
daa
mul
test
jp
adc
loopne
mov
retf
(bad)
mov
mov
test
test
scas
es
xchg
mov
loope
xchg
dec
inc
sbb
scas
cwde
ds
xor
and
nop
enter
push
pop
dec
aaa
mov
rcr
jecxz
inc
xchg
add
fs
push
cld
cwde
fld
aam
inc
jmp
or
xor
rol
push
popa
jmp
sub
jno
and
scas
add
cdq
adc
jmp
scas
mov
ret
push
inc
dec
sbb
sbb
inc
mov
xorps
xchg
loope
mov
mov
jge
or
xchg
jns
in
loopne
inc
dec
mov
adc
enter
inc
mov
pop
or
cld
push
jno
mov
pusha
int
mov
lock
sub
cdq
pop
jnp
ja
jns
mov
push
cmp
call
xlat
mov
add
push
dec
mov
sbb
in
sti
int3
xchg
cld
gs
dec
pop
mov
(bad)
lahf
repnz
int
sar
mov
push
ins
popf
xor
sbb
clc
mov
mov
inc
cmp
push
test
into
and
xor
and
mov
icebp
jns
inc
jge
and
xchg
pop
fwait
and
clc
pusha
bound
sti
js
add
(bad)
arpl
or
inc
fisttp
sub
repnz
ins
jbe
js
pop
xchg
sub
psubw
int3
ins
cwde
sar
dec
ja
cmp
nop
idiv
dec
mov
lods
aas
imul
gs
sub
pop
jae
jmp
pop
popa
mov
ja
pop
int
sbb
jno
js
inc
scas
mov
loop
mov
sub
into
sub
fstp
inc
cmp
sub
xlat
adc
in
mov
xchg
nop
ss
cwde
push
movs
(bad)
mov
jp
sub
int3
mov
sub
mov
mov
cmp
std
sbb
pop
loop
dec
pop
and
mov
pop
int
enter
push
cmps
inc
push
pushf
mov
clc
jo
call
jae
hlt
retf
inc
or
repz
jmp
aad
xchg
(bad)
mov
test
js
movs
ret
cdq
movs
pop
pop
adc
sbb
jno
jge
daa
xchg
mul
fsub
jmp
(bad)
cli
je
test
jno
loop
add
fs
push
aas
xor
adc
cdq
jb
dec
dec
add
push
and
ret
adc
(bad)
mul
(bad)
ficomp
std
test
das
jg
les
and
mov
sub
cs
icebp
repnz
retf
mov
nop
or
add
dec
cmps
inc
pop
push
or
rcr
lea
aam
stos
mov
xchg
mov
sti
jmp
mov
hlt
sbb
xchg
loopne
fldenv
cmp
dec
test
sbb
xor
retf
sbb
inc
add
add
(bad)
int3
sub
(bad)
das
xor
cmp
mul
push
jle
sub
fnstcw
out
jbe
fwait
test
cli
ret
aaa
shl
xchg
mov
pusha
js
ja
cmp
enter
jle
arpl
inc
push
nop
mov
mov
pop
mov
add
pcmpgtb
fimul
fisub
repnz
stc
inc
mov
arpl
dec
inc
aas
and
test
mov
fcomp
jmp
pop
sub
stc
xchg
mov
cdq
mov
jp
xor
add
rcl
cmp
out
mov
cmp
mov
dec
jge
pop
mov
mov
xchg
jae
arpl
out
jne
retf
push
(bad)
inc
sub
in
pop
xor
inc
popa
jge
stc
mov
pop
xchg
sub
push
pop
xchg
push
(bad)
push
(bad)
jmp
icebp
sahf
jmp
dec
push
pop
inc
ss
lock
pop
rcr
cwde
(bad)
out
leave
test
std
js
mov
xor
push
sbb
bound
push
popf
(bad)
pop
mov
cwde
or
(bad)
cli
jno
dec
leave
mov
fwait
mov
fnsave
(bad)
mov
jae
ret
imul
nop
jg
imul
or
lods
cwde
arpl
add
dec
lahf
push
mov
pop
ret
into
clc
mov
jmp
sub
mov
bound
add
(bad)
pop
dec
call
adc
xor
enter
in
jecxz
add
les
ss
pop
push
or
xor
xchg
fld1
repz
ja
push
cmp
push
mov
ds
pop
mov
cmp
inc
pop
sub
cdq
xchg
fsubr
adc
jbe
fstp
jle
imul
jnp
loopne
pop
ret
and
mov
cmps
cdq
int
mov
cmps
imul
push
stc
loope
xor
mov
lods
call
mov
(bad)
mov
mov
xor
fild
push
retf
push
dec
adc
dec
int3
rcr
mov
js
sub
mov
js
pop
test
inc
shl
add
xchg
outs
jmp
cmp
ror
mov
push
mov
jp
sbb
int3
pop
sbb
in
daa
aam
stos
add
pop
test
jg
xchg
or
cdq
cmc
mov
add
adc
(bad)
fdivr
sub
push
js
jo
(bad)
xor
cmp
adc
in
push
jmp
mov
dec
jns
adc
mov
mov
push
adc
movs
jecxz
fisttp
pop
cmc
(bad)
jno
inc
push
cmp
mov
sub
inc
cmp
ret
sbb
popa
icebp
ja
mov
mov
test
cmp
add
dec
aas
daa
cmc
or
pop
jnp
push
fadd
clc
stc
popa
iret
pop
push
(bad)
pop
icebp
push
mov
mov
arpl
jp
loope
sbb
sub
adc
fst
gs
loop
pusha
aas
jmp
scas
stos
xor
adc
inc
xlat
inc
stos
mov
arpl
mov
test
fist
push
cmp
aaa
or
test
lods
jge
add
fiadd
pop
mov
test
lock
sbb
cmc
mov
mov
lahf
pop
push
enter
dec
imul
fadd
ins
xor
pop
dec
out
jno
test
sub
jl
or
shl
(bad)
sub
int3
sbb
fild
rcr
out
pop
mov
and
cs
sub
adc
psubd
test
shl
popf
cld
inc
jbe
jo
sar
je
inc
dec
imul
lock
dec
mov
mov
pop
nop
adc
or
stc
xor
sub
ins
mov
lea
jno
mov
push
mov
sbb
test
imul
or
push
sahf
in
mov
call
jp
sahf
fld
sbb
ret
sub
loope
mov
mov
iret
(bad)
mov
ss
ss
cmp
mov
xlat
aaa
mov
aaa
dec
and
jb
cmp
sub
jo
inc
adc
jmp
jp
mov
mov
sbb
pop
dec
jmp
fwait
call
adc
mov
xor
mov
dec
pop
test
cmp
mov
aad
adc
aam
stc
mov
mov
movs
scas
dec
gs
sub
mov
int
popa
vsqrtss
sub
popa
icebp
cdq
push
movs
dec
daa
pop
push
cmp
push
aad
int3
inc
mov
fisttp
pop
xchg
into
mov
stos
rcl
push
ss
and
sbb
push
loop
ins
cmp
out
lea
jge
mov
push
dec
pop
int3
sub
imul
sar
(bad)
inc
shl
add
jbe
cmp
gs
sub
cmp
retf
jmp
stos
sub
iret
lea
push
cmps
pop
and
fdiv
push
imul
repnz
jbe
rol
adc
mov
cmps
lods
xor
mov
mov
add
clc
sbb
jecxz
cmc
std
test
xchg
mov
jp
xor
jns
test
ret
dec
cmp
jmp
mov
fsubr
pop
arpl
sub
pop
cmp
push
rcr
(bad)
and
dec
adc
or
jne
rcl
mov
loope
cmp
rcr
sbb
pop
rol
cmc
(bad)
xor
loopne
sub
call
push
jb
xchg
mov
les
add
sub
int
clc
(bad)
jle
cmp
fimul
jle
loop
fstp
cwde
repz
push
push
sbb
add
(bad)
repnz
mov
ins
mov
in
arpl
repnz
daa
call
jecxz
ret
repz
or
fnstcw
xor
inc
cdq
imul
or
psrld
or
arpl
pop
mov
or
dec
arpl
xor
cmps
adc
iret
(bad)
sar
dec
(bad)
fsub
xor
gs
rcr
xlat
ss
jl
xchg
sbb
cmp
js
jae
cld
sbb
sahf
enter
xor
bound
mov
or
cmp
add
das
mov
push
jae
sub
inc
bound
(bad)
idiv
popa
mov
cld
inc
not
fstp
cmps
sbb
das
sti
cmp
(bad)
shl
pop
cmp
jne
sub
and
mov
je
jnp
dec
and
mov
daa
adc
neg
push
and
xor
and
(bad)
push
(bad)
cli
push
(bad)
mov
(bad)
xor
inc
xor
nop
sub
sub
pop
inc
lock
xlat
ficom
pop
push
dec
(bad)
pop
in
mov
fucomi
mov
(bad)
in
xor
dec
dec
fisubr
dec
sbb
mov
in
mov
(bad)
pop
push
mov
fldln2
pop
call
cmp
mov
mov
pop
jb
pop
push
pop
ret
and
sbb
or
cmp
jmp
addr16
ret
pop
xchg
mov
pop
test
call
fcmovb
(bad)
mov
xchg
std
xor
loop
(bad)
ins
(bad)
out
icebp
sbb
sbb
inc
fld
popf
sub
popf
pushf
xchg
jecxz
xchg
push
imul
and
addr16
xor
pop
rcr
pop
movs
and
cmp
sbb
xchg
hlt
jae
cs
mov
and
and
add
pop
lahf
repz
pushf
fwait
or
jmp
shr
fcomp
cwde
xor
imul
shl
(bad)
cwde
outs
push
dec
and
and
inc
scas
push
inc
test
ss
dec
mov
shl
mov
mov
(bad)
xor
repz
xor
mov
pop
pop
sbb
dec
retf
lock
arpl
xor
and
sub
mov
jae
stos
add
das
ja
dec
inc
sti
arpl
add
not
xchg
cwde
ja
push
imul
sub
add
lock
mov
rcl
mov
jb
cmp
cmp
aas
js
pop
mov
call
add
arpl
xor
jbe
ret
xor
sub
scas
repnz
call
(bad)
adc
arpl
xor
jecxz
mov
or
pop
clc
js
mov
sub
and
test
pop
lahf
scas
xchg
adc
fsubr
outs
ret
mov
sbb
sbb
and
mov
ficom
or
enter
js
cwde
outs
xchg
mov
jl
ja
jbe
mov
jl
movs
cmp
adc
(bad)
lock
add
cmps
lock
jmp
mov
call
inc
xor
sbb
jmp
rol
lahf
jb
sub
test
int
icebp
or
cmp
sar
pop
retf
and
lods
pop
stos
and
(bad)
jmp
inc
mov
clc
mov
pop
out
das
adc
ret
(bad)
aam
mov
loopne
popa
and
add
int3
mov
data16
fucomp
rol
xor
shl
lea
and
fld
pop
xchg
repnz
(bad)
pop
fdiv
test
call
dec
inc
mov
pop
stos
stc
aaa
xor
gs
add
not
mov
mov
push
cmp
sbb
sbb
dec
fmulp
adc
frstor
mov
outs
lods
repz
xor
xor
inc
enter
add
push
mov
mov
rol
call
inc
dec
adc
loope
add
mov
jae
imul
and
mov
add
aad
int3
enter
push
xor
jo
mov
fisubr
adc
stos
ja
jmp
int3
in
mov
call
loopne
in
jo
inc
add
push
sub
jecxz
jge
into
mov
push
cdq
test
movs
xor
jo
dec
sbb
sub
jmp
retf
inc
fld
push
jmp
xchg
aad
mov
xor
fsubr
(bad)
dec
or
adc
in
cmp
dec
fsub
sbb
sub
jle
mov
cdq
and
add
adc
pushf
xchg
sbb
iret
jae
fnstsw
push
pop
mov
enter
jecxz
push
arpl
cmp
std
jp
in
ret
scas
inc
push
sub
hlt
add
xor
out
add
ins
fwait
inc
push
shr
test
aas
test
xor
sub
mov
retf
push
adc
jnp
rcl
out
sub
call
xor
add
cwde
or
pop
and
fadd
es
or
movs
imul
pop
cs
shr
adc
imul
imul
mov
sbb
je
sub
adc
push
mov
in
pushf
lods
push
out
xchg
out
lock
retf
dec
out
pop
ret
nop
pop
cmp
mov
mov
je
mov
loopne
test
popa
push
ret
hlt
call
sub
inc
repz
dec
call
(bad)
out
data16
test
sub
inc
push
cmp
fldenv
xchg
clc
ret
js
jmp
mov
jle
xor
icebp
fld
iret
sbb
mov
cli
es
push
jno
enter
mov
sar
cwde
jl
mov
inc
pop
jl
dec
mov
cmp
dec
jno
icebp
enter
ret
xlat
mov
jns
lds
mov
xchg
adc
mov
dec
or
(bad)
pop
push
mov
mov
jp
push
and
fild
dec
retf
ins
jmp
or
ret
push
addr16
xchg
sub
cmp
mov
stc
adc
add
xor
push
icebp
mov
xlat
(bad)
aad
fld
leave
xor
mov
mov
mov
mov
push
mov
fcmovne
dec
lods
mov
sbb
inc
cs
(bad)
dec
xchg
adc
adc
fsub
or
bswap
xchg
mov
mov
push
push
mov
cmovbe
and
(bad)
sub
cmp
jae
loop
pop
cld
mov
sub
sub
pushf
jae
mov
or
adc
aas
adc
push
(bad)
scas
adc
inc
cmp
push
shl
jb
ss
aam
add
xchg
lea
mov
push
cld
(bad)
pop
mov
add
jg
xchg
xor
or
cmp
outs
xor
out
jo
std
xor
in
imul
dec
daa
xor
ss
mov
xchg
cmp
ins
repz
add
ins
repnz
or
sub
cmp
adc
jb
fcom
push
dec
loope
scas
ds
imul
jecxz
xor
sbb
aas
aas
cdq
sti
pop
mov
mov
pop
mov
call
sti
adc
fild
sbb
sbb
adc
mov
sub
mov
inc
out
fdivr
sahf
scas
or
and
sub
enter
stos
jmp
add
lea
movs
push
popa
dec
pop
inc
inc
add
push
xchg
ret
out
mov
mov
popf
cmp
cmp
int3
mov
sub
rcr
jo
xchg
test
xchg
ins
aad
ss
std
enter
pop
mov
cmp
inc
jg
pusha
mov
call
push
cmps
push
and
fsubr
push
inc
test
jb
xor
icebp
das
mov
mov
pop
push
outs
xor
add
cs
add
push
aas
ret
(bad)
jecxz
enterw
cwde
mov
je
addr16
push
add
jb
jmp
xchg
sbb
fldenv
stc
retf
stos
sbb
rcr
imul
sub
mov
rcr
sub
in
push
mov
and
push
pop
sar
jg
or
push
movs
in
inc
push
sub
jg
clc
scas
push
and
rol
cmp
daa
(bad)
or
and
stc
call
dec
mov
sub
sbb
mov
fcmovbe
push
jb
test
les
mov
stc
or
push
xor
add
xor
out
sbb
and
sar
enter
mov
fld
lods
jmp
mov
cmps
xor
rcr
or
ss
call
popa
icebp
retf
test
xor
add
or
dec
mov
shld
pop
in
sub
xor
sbb
cmc
push
fsub
fld
dec
test
fadd
xchg
pop
in
mov
jae
xchg
loop
out
mov
repz
xchg
jo
mov
and
mov
jae
inc
cmp
jbe
lods
(bad)
test
(bad)
mov
(bad)
shr
dec
push
xor
cmp
add
mov
mov
or
rcr
test
shl
and
jb
pop
bound
add
fcom
pusha
xchg
add
cs
lock
push
dec
adc
fldcw
dec
retf
and
cld
js
and
adc
push
cmp
xlat
scas
out
mov
dec
xchg
cmp
jmp
fldenv
push
pop
or
add
pop
xor
pop
(bad)
adc
pushf
stc
fnstenv
xlat
fyl2xp1
loope
mov
xchg
sbb
push
ja
jae
in
jp
push
mov
int3
in
rol
add
add
aaa
dec
dec
sbb
pop
pusha
pop
mov
sar
mov
jne
test
jbe
jnp
imul
or
push
sbb
mov
stc
push
aaa
jmp
loop
inc
sub
rcr
pop
or
xlat
inc
pop
sbb
fistp
test
in
fcom
icebp
inc
mov
popf
mov
aaa
imul
fcomip
xchg
in
mov
mov
shr
xchg
cmp
in
shl
xor
aaa
mov
jo
or
fs
adc
adc
lea
xlat
lods
stos
or
loopne
pop
out
and
loopne
shl
push
xor
data16
nop/reserved
jo
jmp
sahf
inc
jmp
and
mov
in
jge
ins
pop
mov
sbb
push
mov
sbb
mov
retf
repnz
pop
dec
and
push
aad
fdiv
jno
xchg
lock
(bad)
sub
pop
xor
mov
mov
cmps
add
push
adc
out
jmp
iret
mov
inc
sub
jae
push
dec
cmp
add
push
or
mov
in
movs
sub
push
lds
jno
jl
and
xor
dec
lea
ins
mov
xor
repz
inc
int
js
enter
jno
cwde
pop
inc
or
jb
dec
scas
and
(bad)
loopne
cdq
cwde
mov
sub
jns
in
jle
(bad)
inc
(bad)
jo
retf
sbb
fcmovnb
push
xchg
xor
fnstsw
dec
sub
sar
jns
or
mov
xor
add
out
lock
mov
sbb
mov
pop
and
pop
or
and
rcl
adc
xlat
push
nop
xor
and
in
mov
cmp
or
shl
dec
cmp
lods
xchg
mov
mov
xor
push
cmc
sub
cmc
or
mov
ret
rol
out
jb
xchg
xchg
stc
sbb
dec
sub
inc
sub
push
dec
aas
clc
ret
pushf
rcr
fmul
sbb
adc
mov
je
sbb
mov
xchg
mov
fisubr
fimul
loop
sub
cmp
int
push
pusha
icebp
cli
test
mov
scas
cmps
shl
ss
cwde
sub
lock
(bad)
pusha
cmc
dec
jmp
stc
(bad)
aad
call
cli
cld
bound
cmps
adc
stos
pop
mov
nop
inc
js
repnz
movs
mov
sti
scas
adc
iret
inc
jmp
jb
mov
push
and
repz
push
push
mov
cs
mov
pop
cmp
imul
mov
push
lea
stc
leave
(bad)
fadd
stc
(bad)
mov
pop
xchg
mov
icebp
inc
mov
cmp
repnz
sbb
mov
and
mov
xor
enter
cdq
ins
dec
arpl
sbb
arpl
jae
sbb
or
pop
popa
ins
xchg
mov
sub
aaa
clc
xor
mov
test
loop
sbb
fnstcw
test
jae
mov
jmp
bound
jge
aas
mov
push
push
mov
xor
xchg
push
dec
mov
lods
call
iret
neg
mov
int
sti
mov
test
pop
mov
xor
jecxz
jbe
add
fisubr
mov
xchg
cmp
mov
push
cmps
sbb
push
sub
cdq
adc
retf
stc
sbb
out
mov
xlat
sub
rol
sbb
pop
loop
sub
leave
and
jle
enter
outs
lahf
cdq
cmp
movs
jmp
stos
cld
aam
(bad)
movs
ss
xor
cmp
nop
adc
retf
rcr
mov
(bad)
xor
or
jb
pop
lods
inc
dec
(bad)
dec
adc
lods
add
ins
out
je
push
test
rcl
push
cdq
jb
xor
inc
in
dec
out
and
cmp
aaa
movs
hlt
test
fisttp
sbb
pop
call
out
mov
div
inc
repz
aam
xor
out
jns
sub
cld
jmp
fisub
inc
retf
arpl
nop
fcom
mov
mov
cmp
mov
repnz
hlt
test
or
add
fbstp
mov
inc
je
icebp
add
jecxz
cwde
mov
mov
dec
leave
mov
cmp
lahf
adc
neg
xor
je
mov
fs
pop
pop
or
test
adc
xchg
fadd
and
jo
dec
nop
imul
js
ret
movlps
dec
dec
inc
or
mov
inc
ds
cmps
cmp
mov
dec
call
mov
js
pop
push
mov
int3
cmc
dec
add
xor
fnstsw
add
sbb
adc
dec
mov
ins
cmps
mov
adc
jl
jnp
pushf
(bad)
sub
dec
sbb
jae
ret
test
inc
sub
out
mov
sar
jno
lock
and
add
outs
data16
clc
bound
xchg
(bad)
cdq
(bad)
ret
pop
std
pop
arpl
sbb
jae
jo
mov
xor
rol
iret
fsubr
std
sar
mov
or
ins
(bad)
adc
enter
mov
fnsave
cli
loope
pop
inc
inc
arpl
xor
add
or
(bad)
mov
dec
fcom
and
repz
inc
fcom
ror
test
add
std
cld
mov
dec
push
sub
mov
cmp
sbb
push
pop
push
cmp
mov
sti
pop
repnz
push
inc
mov
aam
dec
sbb
cmp
mov
xor
pop
rcr
cmp
jl
adc
cli
mov
in
jp
xchg
ret
inc
ds
mov
or
call
adc
repz
add
mov
adc
leave
mov
(bad)
fcomp
sbb
pop
retf
push
sbb
add
xor
or
pop
cmp
rep
lea
xor
xor
popf
sub
add
lea
mov
mov
xor
or
xor
es
test
xor
jg
imul
fild
mov
test
add
in
int3
fwait
sbb
sub
int
cmps
sahf
cmp
cwde
mov
arpl
dec
jecxz
mov
mov
jg
std
stos
(bad)
pop
popa
les
stc
neg
ror
xor
push
pop
push
dec
add
jl
cmp
mov
mov
pop
ds
fbld
pop
xchg
shl
sti
dec
xchg
(bad)
or
stc
add
jle
popf
xchg
sbb
or
fisubr
fisubr
call
mov
(bad)
jns
cmps
adc
shl
dec
test
mov
out
xchg
mov
xchg
mov
mov
dec
adc
or
sub
out
mov
or
fnstcw
jae
inc
sbb
mov
lea
jne
iret
loop
in
xor
movs
add
jl
daa
test
and
adc
jge
add
leave
and
or
fdiv
mov
fist
in
jbe
sbb
or
lock
mov
cwde
pop
and
mov
out
pop
enter
xor
or
jmp
fwait
cmp
ret
js
mov
mov
inc
mov
xchg
gs
sub
mov
mov
mov
cdq
(bad)
mov
push
scas
xchg
loopne
stc
push
in
mov
stos
(bad)
sub
xchg
push
dec
test
sub
(bad)
xor
fwait
and
mov
xchg
sub
cwde
les
xchg
hlt
fsub
cs
in
mov
outs
jae
ret
imul
lock
lods
mov
sar
dec
pop
clc
mov
outs
jb
pop
inc
add
repz
xchg
fadd
or
xchg
jecxz
rcr
repz
repz
rol
shl
sbb
mov
outs
out
imul
inc
outs
add
jae
sbb
ins
pop
test
xchg
imul
fldcw
lods
ss
push
sbb
call
out
stos
mov
jns
push
out
rcr
add
pop
mov
retf
and
out
scas
enter
into
or
xchg
jns
aaa
jmp
jns
and
pop
push
leave
and
xor
cli
mov
retf
mov
loop
sbb
ja
mov
cmp
pop
clc
jne
jb
ret
cwde
mov
cmps
js
push
fcom
ins
mov
and
jecxz
jns
push
cmp
mov
lds
mov
cmp
daa
or
pusha
inc
pop
push
leave
stos
ror
push
xor
mul
fistp
rcr
and
add
pop
int
xchg
add
xchg
jmp
pop
push
out
xchg
add
xor
stos
sbb
sub
or
jns
(bad)
dec
push
xor
mov
or
fucomip
adc
fadd
cld
jne
clc
aaa
mov
aad
fadd
sbb
sahf
xchg
dec
jae
imul
xor
outs
out
les
cli
and
push
and
in
jbe
xor
js
pop
pusha
out
push
push
push
shl
jnp
push
jp
jns
aas
jmp
enter
and
or
stos
sbb
cmps
repnz
and
sar
inc
repnz
aam
cs
mov
fsubr
call
mov
push
push
repz
pop
push
lahf
mov
(bad)
cmp
mov
stc
mov
jb
push
push
fnstcw
std
int
or
xor
stos
jo
int
clc
cmps
fsubp
inc
jns
cmps
clc
push
mov
leave
rol
fwait
stos
pop
es
sub
xor
call
call
mov
xchg
xchg
push
call
rcr
cmp
ret
sbb
(bad)
adc
push
test
push
je
cmp
loope
sbb
mov
dec
sub
mov
mov
xchg
push
ror
shl
cmp
pop
stos
mov
repnz
xor
push
(bad)
push
xor
jmp
lods
sub
cmp
pop
dec
shl
(bad)
sahf
stos
mov
dec
mov
sub
inc
mov
mov
inc
xchg
leave
shl
mov
fst
ret
jb
or
cmp
add
push
push
push
repnz
or
(bad)
pop
dec
xchg
ror
gs
push
pop
dec
add
jp
jge
rol
mov
arpl
ror
inc
pop
and
js
mov
sar
jle
or
or
xchg
fldcw
inc
call
or
call
in
mov
or
mov
adc
xchg
retf
mov
push
aam
test
stos
xor
inc
inc
sub
pop
jmp
mov
fstp
shr
pop
add
ret
mov
sar
dec
cld
loopne
and
mov
pop
cmps
ins
call
sbb
pop
ret
xchg
and
scas
inc
sbb
ins
data16
test
fpatan
(bad)
jb
stos
cwde
jge
(bad)
sbb
inc
cmp
push
and
mov
(bad)
pop
push
movs
mov
push
fwait
out
mov
scas
shl
push
ins
jmp
mov
mov
mov
jp
aad
mov
jle
shr
out
movs
mov
sar
(bad)
repz
dec
cmp
ret
shl
push
mov
add
into
clc
stc
js
mov
push
mov
jb
add
jae
sbb
call
hlt
(bad)
retf
ins
adc
mov
xor
inc
or
adc
sub
cld
popa
into
repnz
fild
sbb
cmp
sbb
pushf
inc
fisubr
cli
sbb
retf
fild
xor
into
mov
adc
adc
pop
ret
sub
sub
jns
push
push
xchg
adc
clc
mov
mov
push
cwde
mov
ret
pop
lea
jo
cmc
adc
sbb
dec
jo
and
xchg
sbb
fiadd
jge
call
repz
arpl
call
outs
push
pop
xor
push
jo
fldcw
dec
ins
sbb
or
jo
xchg
sub
jnp
pop
cmp
(bad)
cmp
cmp
xchg
sub
push
enter
test
sub
mov
inc
xlat
mov
mov
or
sub
enter
cmp
movs
(bad)
mov
ret
sub
push
and
test
mov
loope
mov
sti
mov
ins
sbb
mov
sub
or
xchg
jnp
dec
jmp
fisttp
arpl
dec
call
sbb
sbb
push
push
out
jo
cmp
sub
fsubr
add
jg
xchg
mov
jbe
push
dec
mov
jg
jg
adc
lea
xchg
mul
ret
sub
loope
scas
xor
and
scas
push
ficom
jbe
push
xchg
imul
add
pop
mov
lock
gs
adc
lods
lods
pop
adc
dec
xchg
cwde
sti
jecxz
xor
jo
sub
sub
push
xchg
dec
pop
repz
outs
rcl
daa
popa
test
adc
push
push
pop
pop
or
push
retw
sar
cmc
movs
dec
cdq
mov
add
or
cmp
(bad)
lds
bound
ret
jo
ror
adc
bound
(bad)
and
stc
js
jns
jl
sub
ja
cmps
movs
in
mov
lahf
clc
sahf
in
ins
movs
inc
retf
adc
inc
inc
je
hlt
sub
jb
in
dec
mov
fimul
inc
mov
xchg
test
retf
or
daa
jo
enter
shl
sbb
shl
es
mov
ja
cmp
sbb
mul
and
sahf
outs
outs
fdiv
fdivrp
(bad)
cwde
sbb
fiadd
je
pusha
enter
into
cmp
adc
daa
cmp
in
mov
cmps
in
pop
sbb
mov
out
cs
jbe
pop
or
cmp
imul
leave
(bad)
lods
jne
out
aad
pop
sar
shl
mov
cmp
je
mov
ja
pop
add
sbb
daa
rcr
retf
mov
clc
add
cmp
jmp
call
or
iret
dec
or
inc
jecxz
test
mov
scas
add
or
sbb
push
mov
(bad)
sub
sbb
imul
test
int
and
xchg
mov
sub
daa
add
xor
shl
(bad)
in
xor
arpl
icebp
mov
popf
fcom
int3
dec
inc
sbb
and
gs
pushf
dec
icebp
jmp
sbb
inc
pop
jns
jne
push
and
sub
dec
aam
push
jae
cmp
jne
stos
test
push
imul
sahf
rol
fistp
push
bnd
mov
stos
pop
or
in
out
inc
push
fild
lods
iret
mov
lahf
shl
dec
dec
push
or
sbb
retf
add
loop
push
out
out
lea
xchg
div
jo
sub
mov
icebp
sbb
add
adc
cld
mov
add
cmp
fisubr
(bad)
addr16
cmp
pop
or
div
dec
xor
mov
push
ret
xchg
imul
push
mov
pop
or
dec
push
mov
shl
(bad)
fdivr
mov
imul
push
dec
sub
test
jge
movs
fmul
retf
mov
retf
enter
jnp
pop
imul
outs
or
rcl
mov
mov
ja
ja
jns
sub
adc
fistp
add
nop
jge
xor
cmps
pop
cwde
arpl
stos
test
xlat
inc
dec
div
adc
pop
int3
dec
mov
mov
mov
nop
push
dec
js
out
repz
mov
cmps
mov
xchg
sbb
test
fcomp
and
test
cld
push
enter
fld
(bad)
fwait
leave
inc
dec
mov
xor
imul
dec
mov
mov
shl
xor
cmp
pop
push
push
push
mov
ficomp
adc
mov
test
jbe
mov
je
idiv
ss
push
mov
xor
xor
rcr
jecxz
jae
mov
mov
mul
mov
add
mov
leave
lock
imul
lds
mov
stc
mov
add
adc
in
not
mov
fsub
lock
and
movs
push
call
xor
sub
fld
push
shr
or
fiadd
loope
xchg
mov
rcr
mov
push
cmp
cdq
and
test
stos
retf
or
push
mov
mov
movs
pop
and
inc
dec
push
stc
les
scas
mov
dec
not
aaa
and
mov
cmc
cs
out
das
xchg
shr
aas
loopne
jbe
out
(bad)
jg
cmps
sub
and
xor
sub
imul
ror
iret
cli
loopne
in
mov
mov
in
push
mov
inc
lar
lea
fidivr
adc
jp
pop
adc
sub
std
sbb
jbe
and
(bad)
call
mov
xchg
mov
push
dec
mov
mov
scas
mov
test
mov
ret
lgs
out
int
cmps
inc
cmp
ret
jne
xor
iret
cmp
pop
sbb
xlat
sub
pop
add
mov
ret
adc
dec
add
call
inc
push
jecxz
adc
sti
fnstcw
xchg
cmps
leave
add
fwait
not
pop
xchg
sub
sbb
enter
enter
or
xchg
adc
jmp
cmp
jle
inc
in
aas
mov
add
jae
ret
mov
lahf
xchg
mov
pop
sub
adc
or
xchg
icebp
fdiv
test
outs
rcr
xor
adc
sti
test
inc
cmp
xor
or
xchg
or
cwde
mov
jge
(bad)
fnstenv
jnp
jnp
fwait
or
outs
dec
cmp
ret
cdq
ja
std
movs
push
in
out
sub
lds
sbb
or
loop
push
xlat
cmp
or
aad
les
test
adc
shl
movs
aad
test
mov
ins
ja
idiv
pop
add
nop
bound
inc
ins
or
or
retf
ret
mov
sub
jne
retf
daa
dec
fisubr
pop
pop
rcr
pop
ficom
mov
mov
mov
stos
pop
(bad)
dec
or
inc
jae
mov
mov
push
jbe
mov
scas
dec
shl
sar
sub
lds
test
cwde
push
cmp
lea
xor
stos
sahf
sbb
repz
dec
inc
sti
and
sub
push
mov
add
shl
xchg
leave
loopne
aas
sub
jle
cmp
jnp
dec
dec
fisttp
jle
push
inc
xor
fst
sub
mov
mov
jnp
cmp
popf
cmps
push
dec
inc
pop
mov
in
jge
lock
pop
dec
xor
mov
add
mov
stos
cdq
inc
rcl
fldcw
dec
int3
mov
sti
(bad)
cli
add
inc
jns
sar
add
sub
mov
sub
pop
add
fwait
stos
das
ds
xchg
pop
sbb
xlat
xor
sub
pop
push
cs
cli
jmp
ret
shl
stos
push
inc
ja
add
mov
xor
inc
aas
(bad)
jno
stos
jp
mov
adc
or
pusha
(bad)
(bad)
jno
sbb
xor
rcl
ds
push
push
sbb
dec
jae
ins
sub
xchg
or
hlt
sub
retf
pop
sbb
ficomp
sti
sbb
inc
imul
fidiv
loopne
loopne
and
fwait
dec
sub
(bad)
(bad)
cmps
mov
in
aam
data16
sbb
gs
push
or
cmp
es
mov
fistp
jns
scas
gs
mov
dec
rol
push
popf
xor
push
(bad)
fwait
xchg
ficom
xor
popa
xchg
mov
mov
inc
sub
mov
rcpps
cld
stos
rcr
mov
mov
push
loope
test
pop
cmp
push
xor
bound
sub
jne
sub
mov
add
cmp
js
push
jns
das
sub
daa
inc
test
cmps
std
mov
inc
repnz
cld
clc
retf
shl
xor
fdiv
sbb
repz
mov
cli
repz
mov
stos
mov
sub
dec
and
pusha
jns
fucomi
cmp
pop
bound
xor
imul
cmp
sub
xchg
sub
dec
inc
js
ret
cmp
inc
xchg
and
xor
idiv
(bad)
out
sti
daa
scas
adc
test
push
inc
mov
daa
add
or
lea
retf
push
clc
push
js
nop
shr
sub
xor
push
cmp
rcl
out
retf
mov
movs
cmp
int
sbb
mov
out
dec
jne
sub
movs
ret
add
add
push
fnstenv
and
clc
push
cdq
mov
pop
inc
sub
icebp
adc
imul
cmp
out
stos
mov
sahf
xchg
inc
call
imul
mov
cmps
call
xchg
xchg
out
aad
jne
xchg
mov
inc
xor
pop
dec
sub
out
mov
ins
pop
pop
stos
les
aad
cmps
mov
fidivr
jnp
or
pop
add
mov
jmp
jnp
les
add
bound
pop
imul
mov
imul
mov
hlt
jge
jae
jo
icebp
and
imul
stos
jecxz
mov
mov
shl
cmp
clc
repz
or
adc
cwde
or
cmps
test
ret
cmps
xchg
sub
(bad)
repnz
xchg
jb
cmp
gs
daa
dec
mov
xchg
inc
les
push
int
shl
repnz
jne
xchg
xchg
pop
enter
push
fild
push
mov
jns
call
cmp
hlt
pop
xor
adc
or
jns
in
mov
dec
mov
ror
push
add
(bad)
lock
push
add
ins
ss
mov
sub
sbb
sub
ins
cmc
mov
dec
into
imul
push
(bad)
dec
bound
jne
push
inc
aam
(bad)
cld
mov
cmp
fwait
push
cdq
cmc
lock
fild
add
jns
dec
inc
stc
pop
mov
jge
fmul
not
pop
rcl
pop
jbe
inc
dec
dec
push
shr
imul
(bad)
daa
push
sbb
inc
imul
repnz
adc
mov
retf
or
out
ret
push
popa
inc
xor
das
mov
lea
pop
dec
fst
push
imul
cmp
lock
stc
aam
pusha
fadd
push
or
xchg
cmp
mov
mov
clc
or
sbb
test
push
xchg
mov
rcr
add
inc
movs
cmps
or
sbb
out
clc
xor
and
mov
cld
mov
push
push
pop
xchg
fs
or
repnz
sti
das
mov
add
xchg
push
sahf
cwde
cmp
cmps
push
push
loope
pop
pushf
in
jo
xchg
xchg
cmc
sar
adc
sub
xor
and
in
pop
push
in
ja
cmp
movs
sti
cmps
mov
call
and
fisttp
jmp
lds
jo
test
fistp
pop
mov
fisub
das
add
jp
data16
mov
sbb
jecxz
mov
(bad)
les
faddp
je
pusha
shr
(bad)
popa
in
push
add
lea
cmps
fstp
inc
jns
jae
or
dec
jmp
or
xor
sti
popf
cmp
ss
fdiv
dec
push
sbb
out
or
xlat
(bad)
retf
shl
xor
inc
jl
jae
xchg
jg
pop
pop
sti
mov
and
push
jecxz
mov
xchg
adc
push
popa
ins
push
jno
inc
pop
mov
add
cmp
push
sub
xor
add
push
and
dec
add
loop
stc
popf
mov
movs
sub
xchg
xchg
xchg
icebp
sbb
pop
leave
sbb
mov
sbb
jo
mov
xor
or
das
loope
ins
and
dec
icebp
aas
pop
test
sub
adc
mov
adc
inc
iret
mov
imul
outs
sub
and
repz
xchg
xchg
iret
sub
jg
mov
xor
inc
mov
test
cmp
cdq
and
pop
jno
jecxz
add
cwde
or
pop
mov
scas
nop
sbb
cld
jg
mov
push
xchg
xor
pop
dec
push
add
lea
push
bound
sar
jnp
mov
sub
and
mov
(bad)
jmp
enter
lock
stos
test
out
les
jp
jl
fbld
xchg
dec
fst
lds
cmp
xor
adc
cmp
daa
sub
das
sbb
aas
call
ret
retf
ret
sbb
loope
and
adc
ror
or
lea
jg
add
add
movs
mov
fwait
rcl
or
cs
mov
aas
xchg
cmc
test
nop
sbb
pop
int3
mov
rcl
imul
jp
mov
push
cmps
mov
sbb
mov
stos
pushf
pop
iret
mov
int3
into
adc
aam
mov
and
cmp
mov
push
stc
xchg
in
and
idiv
in
push
out
dec
push
js
fcom
push
push
cdq
sti
sub
jno
push
lds
xor
mov
enter
scas
loope
cmps
adc
pop
les
push
jbe
mov
lds
aas
sbb
adc
jge
sbb
repnz
sbb
mov
call
add
mov
mov
push
pushf
leave
sti
ds
call
push
or
pusha
jl
das
jl
and
cld
jmp
mov
sub
jne
jp
push
cmp
or
pop
cs
jge
popa
fld
sub
es
jmp
je
imul
je
jae
xchg
inc
jb
xchg
cmps
add
sbb
ficom
je
ror
fdivr
and
call
out
add
retf
popa
mov
or
dec
pop
stc
ins
sbb
cmp
pop
clc
or
mov
jno
adc
xor
fisub
test
xchg
loop
or
dec
cmp
call
add
mov
mov
neg
push
into
ret
kunpckbw
stc
push
xchg
jecxz
aad
enter
and
dec
fnstsw
mov
pop
mov
test
jecxz
xor
repz
cmp
mov
imul
mov
mov
in
clc
mov
xchg
sbb
jp
dec
test
jae
int
cdq
mov
cli
lahf
aad
(bad)
fiadd
xlat
jae
cld
cmps
test
es
adc
sbb
stos
jecxz
xor
aaa
sbb
fwait
push
add
jnp
fwait
add
cwde
fisttp
xchg
call
pop
jo
sbb
(bad)
into
push
lods
add
call
cld
pop
mov
mov
retf
ss
mov
movs
and
test
sub
sar
test
mov
lods
(bad)
sub
jmp
push
push
arpl
add
push
push
and
sub
jmp
mov
fidiv
jb
add
ja
sti
adc
xor
ret
fdivr
cmc
outs
adc
add
push
sbb
inc
cli
inc
jecxz
fld
jmp
retf
lods
ret
push
xor
adc
mov
cdq
or
ins
test
push
out
dec
xrelease
push
inc
jp
mov
jns
popa
pop
js
dec
push
jnp
fstp
in
and
push
push
inc
test
enter
arpl
enter
mov
fdiv
add
aas
mov
add
push
call
pop
mov
mov
stc
retf
xchg
jno
and
(bad)
pop
daa
mov
fldcw
cmp
ds
push
aam
adc
mov
out
mov
xchg
daa
nop
imul
loopne
shl
add
or
cmp
push
sbb
jno
mov
ret
inc
lahf
fisttp
and
jmp
dec
out
fsubr
lods
scas
test
pusha
lds
mov
mov
mov
sub
stc
mov
cmp
and
push
jb
gs
popf
test
or
pop
cld
out
popf
in
inc
lods
dec
cmp
ret
dec
jle
ja
leave
cld
mov
adc
pop
lea
cmps
mov
pop
adc
call
retf
pop
retf
iret
ret
mov
repz
aaa
mov
mov
loopne
add
push
jle
outs
sub
inc
mov
or
or
xor
add
lahf
aaa
arpl
gs
popa
rcl
sbb
pop
push
inc
add
and
mov
icebp
les
xchg
or
cmp
or
mov
(bad)
sub
dec
arpl
cld
and
push
sbb
je
jae
dec
or
cmp
wbinvd
jecxz
adc
xor
out
stos
stos
or
sub
sub
mov
loop
popf
push
push
adc
dec
sub
jmp
aaa
adc
or
mov
je
mov
and
inc
adc
jmp
xor
xchg
dec
xor
mov
add
pop
jle
push
adc
xlat
cdq
or
jecxz
add
xor
xchg
and
scas
cwde
dec
dec
jmp
xor
and
add
xchg
test
pop
mov
pop
mov
js
pushf
cmps
call
jecxz
and
sub
loopne
inc
pop
repz
dec
enter
mov
mov
push
mov
pop
mov
(bad)
not
(bad)
repz
hlt
mov
mov
pop
mov
and
enter
dec
nop
xlat
arpl
fsub
enter
push
inc
push
push
jae
xchg
cmp
ficom
adc
sub
cmp
addr16
sbb
lock
ja
loop
and
mov
cmp
(bad)
icebp
int3
repnz
fs
jns
pushf
mov
pop
mov
add
adc
in
sbb
fsubr
mov
(bad)
fbstp
mov
cmp
scas
mov
and
jp
sub
sar
dec
movs
div
mov
mov
imul
fbld
nop
mov
adc
jecxz
mov
sub
adc
repz
mov
rol
sbb
dec
cvttps2pi
pushf
sub
jo
lock
pop
dec
dec
inc
clc
gs
ds
packsswb
xlat
pop
bound
sbb
cmps
je
pop
or
cmp
pop
xchg
setno
mov
and
mov
aad
into
inc
in
xor
sub
lahf
or
je
clc
in
outs
pop
jmp
or
imul
stos
push
mov
pop
push
movs
sbb
fistp
imul
neg
mov
adc
(bad)
push
xor
jo
pop
(bad)
int3
(bad)
test
sbb
jns
pop
jg
sub
pop
and
ret
push
cmp
shl
loopne
in
xchg
pop
inc
inc
pop
imul
test
mov
jl
sbb
add
mov
pop
xchg
out
mov
jo
add
push
mov
and
jmp
jo
inc
(bad)
sub
cmp
mov
mov
inc
ret
cmp
sbb
(bad)
cli
sub
xchg
je
mov
sub
add
movhps
repz
add
(bad)
jmp
mov
mov
inc
xor
cmps
sub
adc
jb
push
imul
test
outs
inc
cdq
xchg
mov
xor
jb
jno
dec
push
or
fimul
stos
add
cmp
mov
cwde
cli
cmps
sbb
cmps
push
cmp
cwde
cli
dec
and
clc
not
test
sub
xchg
repz
or
imul
adc
fist
add
and
lea
mov
movs
cmp
sub
inc
push
pop
(bad)
mov
and
enter
cmp
adc
ins
lods
pusha
dec
std
add
push
daa
pop
out
stos
std
nop
mov
retf
push
out
sbb
rcl
sub
jl
or
cwde
xor
sahf
sub
jmp
inc
ins
dec
push
std
and
push
pop
adc
mov
mov
(bad)
inc
(bad)
adc
int
cmp
xlat
or
outs
fnstcw
(bad)
mov
push
popf
sub
add
mov
stos
mov
retf
retf
mov
cli
sub
xor
scas
aad
and
xchg
sar
pop
push
fdivr
adc
mov
mov
sbb
out
push
sub
sar
jnp
hlt
add
out
dec
xor
lods
in
add
in
sub
sbb
jae
loope
(bad)
cmc
cmp
jecxz
jae
fwait
cmp
bound
sub
sbb
push
push
ds
push
sub
jmp
out
mov
std
daa
mov
nop
lahf
loopne
jb
mov
into
jmp
jno
xor
xor
pop
lea
jle
daa
pop
xchg
ja
xchg
ss
test
enter
loope
inc
or
push
mov
imul
lea
mov
xchg
xchg
jp
loop
clc
daa
sub
or
and
sub
mov
js
in
sub
and
pop
ja
mov
shl
adc
std
xor
pop
push
cmp
popa
jae
fdiv
call
dec
in
cmp
ins
jp
xchg
xchg
mov
ret
fwait
ja
int
pop
rcr
ins
lods
shl
sbb
xchg
jle
sub
mov
mov
push
adc
sub
mov
add
cld
pop
fcomp
outs
enter
cmp
stc
mov
fucomip
jnp
rcr
fstp
cmp
cmp
pop
movs
or
push
repz
adc
push
js
clc
mov
and
enter
fst
push
hlt
(bad)
stc
jp
jg
add
(bad)
mov
imul
sbb
mov
push
jl
adc
mov
scas
mov
repz
sbb
test
cs
pop
in
clc
aaa
in
and
sub
loop
repz
sti
sahf
xchg
mov
ja
lds
jo
pop
push
lds
inc
fcos
fs
mov
shl
retf
mov
xchg
and
je
ins
sub
pop
mov
movs
fistp
sbb
adc
jae
mov
xor
pop
xor
repnz
bound
rcr
xchg
sub
mov
sbb
fucomi
lea
vmptrst
pop
pop
jb
push
mov
push
pop
jmp
stc
stos
xor
bound
or
mov
lods
xchg
out
jbe
xchg
sub
lds
xchg
mov
push
inc
xchg
sub
aam
daa
dec
jmp
xchg
(bad)
out
rol
or
mov
inc
call
popa
clc
pop
cmp
xchg
mov
retf
hlt
pushf
loopne
cmp
cwde
ins
test
retf
stos
or
and
xchg
arpl
push
mov
out
mov
and
xchg
mov
lahf
jae
mov
and
or
mov
jb
xchg
pop
cmp
sub
test
(bad)
imul
pusha
xor
repz
push
aad
rcl
shl
ja
addr16
sahf
std
mov
pop
lods
not
ins
add
lds
adc
popa
movs
jp
and
(bad)
movs
bound
pop
rcr
test
dec
sbb
pop
push
and
out
sbb
pop
mov
mov
mov
pusha
(bad)
lock
xchg
(bad)
jbe
aaa
cmovge
loopne
mov
enter
xor
push
sti
call
(bad)
dec
sahf
clc
leave
lods
mov
ret
sub
add
xchg
inc
or
sbb
jg
pop
adc
xchg
jns
jno
outs
xor
mov
sahf
call
xor
add
pop
mov
outs
sbb
es
fsubrp
ret
or
mov
ss
das
mov
lods
in
inc
add
repz
cmps
fsubp
or
test
sti
jnp
iret
jne
ins
rcl
xchg
mov
cmp
mov
mov
and
out
out
mov
pop
mov
mov
loop
inc
push
mov
inc
das
jecxz
sahf
adc
outs
jae
jae
fisttp
dec
leave
and
popa
fmul
jge
outs
pusha
xchg
vmovaps
mov
movs
dec
mov
fild
scas
dec
test
(bad)
sbb
fs
sbb
push
outs
add
test
add
mov
fadd
fisttp
mov
pop
lock
and
cmps
xchg
inc
js
inc
adc
in
pusha
out
es
iret
mov
shr
push
dec
ja
sar
lods
cmps
lock
xor
jge
and
movs
data16
shr
imul
imul
or
inc
xor
jae
push
leave
addr16
xchg
shl
fcom
test
lea
pop
enter
outs
add
jns
and
repz
sub
push
in
popa
sbb
sbb
retf
dec
xchg
inc
and
xchg
adc
imul
(bad)
mov
sub
cmp
sub
mov
fcomp
mov
pop
repz
jmp
cdq
pop
mov
pop
xlat
sub
or
mov
scas
fs
mov
pop
repnz
mov
jns
cmp
push
dec
bound
ror
cld
and
pop
ja
xor
sub
sbb
sub
setle
pop
mov
sbb
ror
dec
push
push
daa
(bad)
test
mov
pop
pushf
xchg
jg
and
leave
imul
fwait
std
mov
cmps
fwait
inc
pop
jae
adc
mov
(bad)
mov
dec
lds
cmp
sub
sbb
movs
cmp
pop
xchg
inc
inc
sub
(bad)
ficom
jmp
lods
popa
call
inc
movs
in
out
cmp
aad
ret
call
jecxz
mov
xor
aas
xor
sbb
dec
sbb
aad
sbb
shr
mul
stos
xchg
pop
adc
jmp
pop
lock
add
adc
fidiv
mov
inc
push
jb
stos
pop
pop
loope
adc
sub
loopne
jne
push
mov
scas
(bad)
test
sub
retf
call
sbb
or
adc
sub
mov
sbb
loop
cwde
aas
mov
pop
ss
or
out
shr
xchg
aas
inc
mov
cld
adc
mov
retf
inc
retf
mov
mov
add
sbb
dec
rcl
push
pop
gs
mov
ja
cmp
fidivr
out
and
add
fdivr
stos
dec
stos
out
mov
or
adc
icebp
inc
push
clc
mov
jmp
int3
xor
xor
aam
dec
mov
xor
adc
or
inc
mov
fistp
sar
xchg
sti
shr
adc
sub
adc
pop
push
cwde
hlt
fdivp
mov
adc
adc
push
dec
loop
push
cli
jp
xchg
scas
or
xchg
jmp
(bad)
fadd
push
jo
fs
(bad)
sub
arpl
inc
pop
xor
test
repz
out
mov
loope
je
rcl
or
push
xor
pxor
xor
mov
loopne
mov
aad
aad
jge
jge
push
les
(bad)
je
sbb
or
retf
mov
cmp
sar
js
pop
cmp
sti
jle
ss
add
ins
adc
mov
inc
mov
mov
adc
sti
ja
or
jp
push
fldcw
adc
or
or
jge
jmp
mov
xor
jmp
add
jae
loopne
jb
and
mov
(bad)
je
aaa
mov
mov
jmp
xchg
add
stc
shr
imul
sub
mov
sti
std
mov
scas
lahf
out
retf
cmp
cmp
jge
or
jmp
or
push
inc
ds
movs
mov
ret
xor
dec
js
stc
mov
pop
pop
pop
dec
cmc
popa
add
int
cli
mov
adc
pop
fs
xor
xchg
fld
sbb
mul
repz
repnz
(bad)
mov
neg
jmp
mov
jb
sub
jl
fiadd
push
xchg
push
ins
jo
and
sar
pushf
jnp
cli
add
lods
cli
mov
mov
popa
dec
lods
aam
mov
out
mov
push
and
mov
(bad)
or
data16
loope
xchg
stos
mov
in
jo
out
push
xchg
inc
cmps
(bad)
mov
mov
xchg
retf
inc
fidiv
xor
xlat
jp
adc
push
or
pop
and
jb
sar
mov
inc
sbb
mov
call
inc
mov
sbb
aas
xor
cmp
movs
(bad)
mov
lds
cmp
daa
ins
outs
pusha
cmp
mov
jmp
pop
push
retf
jmp
sar
xor
adc
das
ins
push
loopne
jae
sbb
leave
(bad)
fld
mov
div
leave
jns
cli
add
rol
cmc
sbb
lods
xlat
cmp
les
call
(bad)
loop
push
mov
sub
ret
nop
adc
pop
xor
icebp
shl
out
int
and
sbb
cdq
xchg
ret
mov
sub
adc
mov
repz
ret
jnp
int
fcmovne
test
pop
dec
jae
add
sbb
mov
mov
out
inc
mov
pop
fs
xchg
jge
dec
mov
xor
push
jge
sbb
pop
sub
scas
jecxz
enter
loopne
xor
lea
bound
cmps
xchg
mov
cdq
call
pop
loope
cli
aaa
jb
xchg
and
lea
leave
shr
mov
pop
mov
not
popf
outs
(bad)
sub
mov
bound
pushf
js
popa
push
out
inc
sub
not
cmps
addr16
leave
mov
cmps
jle
in
sub
xchg
test
adc
pop
pop
arpl
arpl
ds
addr16
loopne
shr
mov
sbb
addr16
lods
out
push
inc
sar
ror
aaa
mov
ror
into
nop
aam
ror
mov
mov
jp
and
(bad)
loope
enter
mov
jnp
mov
xor
mov
jnp
fidiv
or
sbb
xchg
repnz
test
push
pop
mov
data16
mov
icebp
add
add
cld
sbb
retf
inc
mov
cmc
sbb
enter
call
jbe
bound
repz
loop
nop
dec
das
jle
retf
hlt
nop
sbb
popa
push
add
stos
xor
ja
call
or
sub
ret
push
js
hlt
mov
stos
stos
rcl
sti
xor
dec
jo
adc
stos
and
adc
and
xor
fwait
rcl
stos
call
dec
push
mov
mov
push
xor
add
in
ins
xor
dec
mov
imul
cmp
or
popf
mov
sub
sub
add
xchg
jnp
push
test
jo
sub
stc
(bad)
fs
cdq
imul
xchg
pop
fwait
cld
push
bound
pusha
loop
outs
mov
test
mov
es
fwait
cli
inc
inc
mov
jb
test
ins
(bad)
inc
ja
gs
cmp
xchg
mov
sbb
ins
js
int
mov
scas
and
aam
add
pop
outs
int
cdq
push
cmp
(bad)
xor
xchg
xchg
enter
xchg
add
push
or
adc
mov
mov
xor
adc
push
jne
dec
fimul
lock
int3
dec
icebp
pushf
mov
push
pop
outs
ss
frstor
lock
adc
std
mov
mov
inc
jmp
nop
loop
stc
lahf
jae
js
pop
jb
fstp
inc
push
pop
pop
lea
add
imul
ins
fidiv
aam
sub
push
pop
popa
mov
xchg
xchg
clc
stos
xor
xchg
xchg
jns
lods
das
lods
hlt
scas
pop
rol
jnp
dec
dec
aam
sti
add
in
(bad)
bound
ret
and
mov
inc
ins
imul
or
or
repnz
ja
out
stos
(bad)
into
add
xor
in
sub
inc
sbb
call
and
pop
fisubr
pusha
cmps
push
ror
add
fs
xchg
sub
push
int3
ret
dec
pop
dec
fnstsw
cmp
jno
js
xor
add
dec
(bad)
pushf
inc
xchg
jecxz
lods
in
sub
out
and
cld
rol
mov
js
rol
cmp
cmp
xchg
add
clc
jmp
out
adc
xchg
icebp
mov
movs
test
std
cmp
leave
xor
jmp
fcom
mov
push
popa
fcomi
ret
mov
push
jmp
push
stos
mov
loopne
loope
mov
daa
mov
imul
mov
mov
and
mov
mov
js
sahf
mov
pop
adc
or
adc
inc
xor
jae
jno
xchg
xchg
and
cmp
popf
xchg
mov
popf
cwde
or
fcmovnb
pop
bound
or
jmp
jmp
xchg
sbb
dec
addr16
pop
and
dec
push
(bad)
clc
mov
out
loopne
out
in
pop
out
push
mov
sbb
xchg
xor
cmc
daa
(bad)
jle
mov
dec
xor
xchg
(bad)
fcom
push
push
push
and
aaa
mov
cli
lds
and
add
push
sub
jle
dec
mov
pop
push
addr16
cmp
lahf
mov
(bad)
mov
mov
xor
and
outs
fdiv
dec
pop
aaa
and
inc
jnp
or
jmp
adc
jbe
pop
shr
push
aas
shr
add
stos
dec
pop
in
mov
adc
cld
fst
sbb
add
mov
adc
out
iret
mov
mov
pop
ret
prefetchnta
pushf
jb
jae
fs
pop
and
in
loopne
or
dec
cmp
push
pop
jo
js
sahf
fs
js
jo
mov
ja
push
xchg
into
xchg
jae
pop
or
loope
and
adc
daa
aas
dec
arpl
mov
popf
xchg
push
xchg
jb
cmp
mov
xor
cmps
pop
arpl
out
scas
repz
fst
pop
adc
test
push
cmc
sub
xlat
dec
jmp
adc
aaa
adc
aad
hlt
dec
jmp
jmp
add
leave
rol
or
add
pushf
pop
xchg
(bad)
sahf
xor
pop
clc
xor
push
mov
adc
push
xchg
shl
xchg
test
inc
pop
fs
test
cld
imul
rcr
adc
xor
cmp
add
fwait
cmp
ret
cmps
push
push
and
shl
stos
add
jmp
sub
sbb
jbe
or
lods
sbb
lods
xchg
rcr
dec
push
cmp
mov
adc
fcomp
shl
or
outs
call
adc
mov
and
mov
lea
cmp
pushf
add
loope
add
or
in
fild
std
jo
xchg
test
xlat
fwait
pop
xor
jae
cs
leave
jne
mov
bound
inc
mov
int
mov
outs
xchg
inc
inc
jle
ins
jge
or
or
cmp
push
aam
arpl
(bad)
xor
adc
xchg
push
mov
call
arpl
dec
push
inc
mov
xor
mov
pop
stc
jae
xchg
leave
adc
sti
mov
adc
bound
and
fisttp
cmp
sub
or
jmp
push
and
shr
jns
in
outs
sbb
push
mov
sbb
xchg
in
and
jl
and
mov
ss
dec
call
es
adc
loopne
inc
shr
rcl
ror
(bad)
add
das
mov
and
test
mov
mov
cmps
adc
add
push
mov
iret
dec
dec
mov
add
(bad)
bound
repnz
dec
sbb
jnp
cmp
cld
xchg
arpl
mov
dec
xor
out
(bad)
in
cld
test
cmp
movs
push
xchg
mov
or
and
sub
cmp
xchg
push
push
inc
imul
or
inc
(bad)
stc
mov
in
inc
or
sub
int
xor
and
jecxz
jmp
mov
sbb
cli
push
bound
hlt
xor
into
mov
xor
stos
fwait
xchg
cs
sbb
je
ss
sbb
jne
xlat
ror
add
and
int3
in
jbe
and
cwde
inc
cmp
xor
dec
and
inc
into
adc
xchg
sub
je
je
inc
popf
and
arpl
call
inc
add
fidivr
call
mov
das
mov
rol
xor
inc
iret
clc
push
mov
inc
fwait
jne
rol
push
aad
jns
test
std
xor
inc
call
dec
(bad)
jns
test
std
xor
popa
jbe
icebp
sub
mov
hlt
call
fcomp
or
fisubr
push
hlt
jmp
imul
imul
int
scas
add
mov
jne
lds
jnp
xor
and
ror
in
enter
add
adc
push
xor
pop
jecxz
adc
cld
xor
mov
ds
enter
cmp
jl
fwait
mov
mov
imul
inc
xchg
inc
cmp
dec
or
sub
or
xchg
ret
inc
test
pop
out
pusha
push
arpl
jg
sub
xor
movs
adc
ror
cmps
sub
fucom
arpl
or
sub
je
movs
(bad)
dec
call
or
shr
arpl
movs
or
sbb
jecxz
mov
cmp
pusha
sub
and
pop
add
add
and
std
cmc
cmp
sbb
ds
push
mov
hlt
cmp
mov
xor
push
clc
ffree
adc
stos
pop
fimul
and
(bad)
rcl
les
test
mov
mov
jmp
inc
jl
cmp
inc
pop
add
inc
repnz
ins
sub
fnstcw
push
sti
rcl
daa
jb
add
nop
jge
push
aaa
mov
dec
sub
cmp
xchg
inc
scas
mov
pop
xor
pop
scas
jns
or
ror
mov
sub
pop
xor
adc
and
cli
ja
inc
lock
stc
repnz
cmp
or
adc
jmp
enter
call
addr16
xlat
leave
shr
lds
hlt
cmps
jbe
jp
pop
mov
aad
bound
xchg
dec
pop
sbb
xchg
xor
xor
adc
daa
loopne
js
cwde
fsub
mov
test
in
fstp
test
sub
cmps
mov
fldcw
jmp
fwait
jo
sub
inc
pop
rol
sub
cli
pop
repnz
clc
add
outs
xchg
push
jl
ins
outs
inc
retf
aam
cmp
lock
mov
popa
xor
pop
sbb
jo
adc
inc
cmp
inc
aam
sub
and
or
imul
xchg
sbb
push
pusha
mov
mov
xor
es
leave
movs
jl
shl
shl
shl
xchg
add
lea
mov
aas
retf
aaa
cwde
pop
mov
xor
xchg
inc
cmp
call
cmp
sar
mov
pop
inc
ret
in
call
mov
jl
and
clc
inc
jmp
lds
xor
test
cdq
push
fld
js
je
mov
int3
push
sub
and
lods
push
mov
ror
inc
cmp
mov
sbb
sub
mov
pop
inc
pop
sbb
iret
dec
std
push
adc
or
addr16
clc
cmc
sbb
xchg
dec
pop
push
dec
out
mov
ds
std
scas
mov
fsubr
(bad)
and
dec
lods
add
pop
ret
fs
jno
cdq
lock
xor
call
cli
push
sar
adc
sub
xor
inc
and
int3
mov
leave
sub
push
add
pop
addr16
stc
dec
ins
push
movs
adc
loop
fcom
inc
mov
sub
js
push
pop
adc
xchg
xor
sub
inc
xchg
fxch
test
and
xor
xchg
dec
adc
nop
adc
imul
cld
jo
cdq
popf
fwait
outs
loope
adc
dec
cmp
call
xlat
ret
inc
sub
fsub
sbb
or
std
rol
pop
repz
cmps
pop
shr
setp
loop
or
ss
add
xchg
xrelease
xchg
push
pop
cmps
(bad)
fidiv
sub
test
inc
cdq
adc
xor
jns
cmps
xchg
push
adc
dec
mov
xor
xor
ja
out
inc
pop
ds
arpl
jae
scas
mov
mov
xchg
mov
ins
xchg
retf
push
outs
jg
cmps
or
retfw
into
(bad)
imul
mov
xchg
in
jp
push
rcr
mov
add
inc
fcmovu
imul
cmps
xor
les
inc
cmp
mov
xchg
cmp
out
jae
rcr
mov
cmps
test
sbb
xor
push
or
ins
ja
bound
das
mov
mov
test
mov
mov
int3
cmp
pop
jp
stos
ins
mov
dec
(bad)
loopne
mov
sar
jb
xor
pop
pop
adc
cmps
mov
jmp
mov
mov
movs
sub
sbb
mov
push
mov
popa
or
dec
push
repz
xor
sbb
ins
mov
sbb
add
sbb
daa
in
je
fld
xor
icebp
adc
mov
addr16
daa
push
pop
nop
imul
movs
call
stc
clc
jb
mov
aad
lods
aas
inc
std
jp
push
fwait
xor
test
mov
(bad)
cs
jmp
ret
mov
cmp
call
inc
sub
mov
mov
inc
jecxz
dec
push
test
mov
mov
jge
jp
dec
adc
xlat
lock
add
pop
aaa
fcom
rcr
dec
jl
in
arpl
dec
xor
sub
fistp
push
inc
mov
mov
fisub
and
ret
fnstcw
mov
push
add
mov
dec
loopne
in
setl
push
test
mov
or
pop
adc
mul
cli
add
mov
call
mov
cwde
mov
jae
add
mov
out
sub
aam
jecxz
xchg
clc
bound
mov
jl
sub
inc
into
mov
iret
imul
pop
fcom
add
mov
ja
adc
ret
dec
cmp
sub
adc
test
aam
sar
mov
aas
or
mov
mov
mov
ret
and
dec
pushf
daa
icebp
mov
test
or
push
retf
fadd
adc
call
shl
adc
sub
mov
fist
hlt
inc
loope
pop
sub
cmp
mov
xor
enter
(bad)
retf
push
lea
jae
inc
cmp
fwait
das
pop
xlat
add
lods
mov
int
in
cli
push
push
adc
dec
pop
test
and
sub
in
mov
mov
cdq
cwde
xchg
aaa
outs
jns
adc
fs
call
jnp
leave
(bad)
addr16
cwde
call
and
cs
ss
sti
aad
pop
xor
sti
(bad)
jae
sub
out
mov
push
test
add
mov
call
nop
aam
lods
push
push
mov
add
sti
movs
push
sub
aas
push
lock
dec
jb
mov
cmp
mov
aad
jp
in
push
jmp
xor
retf
pop
dec
sahf
xchg
jbe
cmp
pop
dec
repz
mov
aad
ins
pop
loopne
repz
push
in
inc
and
imul
or
movs
or
in
inc
in
sbb
or
mov
jmp
fist
nop
lods
mov
cwde
push
out
jne
sub
or
adc
(bad)
ret
out
push
cwde
mov
pusha
test
js
mov
mov
ret
or
adc
rcl
jno
fcmovne
loope
or
outs
xchg
sti
jo
scas
into
gs
mov
xor
not
rcl
sub
jecxz
mov
cmps
dec
jae
cld
into
loope
jecxz
and
add
xor
clc
icebp
lds
xchg
mov
xchg
aam
sbb
cs
sbb
push
sub
pop
pop
lahf
mov
test
stos
aam
leave
mov
stos
or
push
mov
retf
(bad)
and
shr
mov
test
xchg
arpl
mov
pop
mov
sub
jl
(bad)
pop
push
jne
lods
jmp
jns
faddp
cwde
mov
idiv
adc
xor
repz
fwait
jecxz
dec
arpl
imul
out
nop
nop
xor
mov
in
xlat
repz
mov
adc
dec
outs
gs
or
enter
mov
mov
(bad)
imul
cmp
fdiv
jmp
cmp
leave
call
sbb
mov
inc
aad
jne
sbb
add
mov
lods
aas
adc
aaa
mov
fsub
and
xor
shr
or
xor
mov
mov
movs
xchg
test
or
out
outs
push
inc
cli
cmp
into
push
mov
mov
rcl
dec
sar
gs
jns
add
enter
rcl
mov
inc
clc
cmp
xor
and
lahf
xchg
retf
mov
dec
and
rol
sbb
call
ror
xor
(bad)
mov
adc
push
cmp
arpl
shl
or
mov
mov
sub
jne
sbb
inc
sbb
adc
stos
fadd
xbegin
(bad)
mov
mov
jecxz
fmul
movs
cmp
in
cmp
cwde
or
inc
dec
cli
xlat
ror
or
mov
loop
lock
out
xor
mov
jno
cmp
and
fadd
into
mov
mov
inc
push
ficomp
adc
imul
xchg
ins
mov
add
xchg
into
out
push
inc
add
and
cdq
inc
imul
dec
pop
mov
push
and
fisttp
and
ds
cdq
and
mov
movs
push
(bad)
jle
mov
cmp
jle
test
fisubr
sti
cli
repz
int3
pop
mov
and
hlt
ins
fs
or
cmp
pop
bound
test
fidivr
push
adc
mov
adc
add
mov
(bad)
dec
or
in
mov
dec
jmp
call
iret
out
daa
pop
aaa
call
sub
adc
adc
mov
leave
sbb
je
in
sub
mov
pushf
jle
rol
and
push
test
repz
mov
inc
adc
or
rcl
popa
inc
sti
push
test
mov
nop
or
ss
arpl
mov
xlat
inc
mov
dec
and
jo
pop
repz
in
add
lock
lods
ja
enter
lea
or
mov
xlat
fadd
int
daa
cli
mov
ins
stos
(bad)
retf
push
clc
mov
pop
test
mov
or
mov
loop
aaa
ins
jecxz
sti
mov
addr16
mov
sbb
jbe
scas
out
mov
jnp
loopne
jecxz
jae
int
pusha
les
cs
jg
(bad)
push
aad
pop
popa
inc
xchg
push
dec
add
mov
scas
in
es
das
repz
bound
jecxz
test
in
dec
dec
push
pop
hlt
repnz
mov
movs
in
ret
mov
pusha
jns
mov
jbe
and
sub
repz
dec
and
outs
rep
inc
push
inc
lods
dec
mov
inc
or
lea
adc
cmp
ret
je
mov
xlat
add
and
xchg
mov
ja
cs
mov
add
fadd
in
mov
jmp
push
xor
cmc
dec
dec
cs
xlat
cmp
inc
jne
xchg
jb
sbb
push
lods
pop
sub
xchg
inc
pusha
loopne
inc
jns
sbb
shr
shl
mov
mov
cmp
xlat
xchg
xlat
pop
jns
add
std
leave
imul
shl
imul
repnz
mov
sahf
push
push
and
push
out
loope
aam
ja
int
push
popf
nop
mov
hlt
jp
stc
push
in
ret
into
and
mov
repz
repz
mov
and
cmp
dec
lods
sub
in
xchg
mov
inc
fbld
out
int
push
add
fisub
mov
dec
mov
(bad)
fucomp
test
push
in
sub
aaa
adc
call
clc
inc
inc
hlt
popa
dec
ret
cwde
mov
dec
or
sbb
push
(bad)
cmps
nop
cld
mov
test
ins
aaa
jle
rcr
push
cmp
cmp
or
sti
add
enter
mov
gs
adc
add
jp
add
aaa
add
pop
adc
or
pop
cmc
jmp
push
into
pop
pop
ins
jae
inc
sahf
add
call
xor
rcr
or
inc
jge
test
mov
ret
stos
jae
std
retf
punpcklwd
adc
iret
lds
xchg
in
cmp
scas
mov
cdq
(bad)
mov
(bad)
cmp
fsubr
or
stc
xchg
jb
(bad)
clc
nop
pop
out
jmp
xchg
sub
push
je
ds
sub
cmp
clc
ja
xchg
cdq
xchg
sbb
outs
fnstcw
(bad)
outs
mov
sub
and
push
les
stos
repz
loopne
je
stc
loop
repz
movs
out
jnp
cwde
jp
jl
repz
push
jns
sbb
adc
popa
mov
cld
imul
icebp
xlat
xchg
mov
ds
mov
ret
adc
popa
pandn
xchg
mov
xchg
cdq
mov
loopne
shl
xor
pusha
cmps
fistp
mov
dec
jnp
xor
pop
ds
sbb
mov
mov
adc
sub
in
push
lock
cmp
cmp
or
dec
jmp
nop
int
pop
pop
sub
xchg
pop
mov
fisub
jmp
mov
lods
hlt
loop
cwde
rol
push
push
mov
mov
or
mov
mov
pop
xchg
int
call
sbb
fnstenv
pop
cmp
mov
push
ins
(bad)
cmp
mov
out
sub
popa
js
mov
or
sbb
mov
add
xchg
cmp
xchg
xor
sub
adc
and
jmp
push
add
aad
cli
not
jp
push
jmp
lock
fwait
cdq
cwde
fimul
mov
out
sbb
xchg
in
jb
into
inc
ror
jle
or
mov
test
stc
ror
jb
push
fidivr
inc
cmp
adc
jmp
(bad)
cmp
xchg
or
bound
cmp
rol
cmc
rcr
das
sub
aad
cmp
or
jl
dec
push
and
fadd
sub
loope
ret
addr16
mov
retf
out
loopne
cmp
addr16
test
fwait
stos
movs
xlat
scas
sub
mov
jmp
or
cmc
lock
xchg
outs
mov
dec
add
iret
cmp
mov
clc
push
nop
test
jns
mov
add
ins
imul
sbb
mov
jecxz
(bad)
sub
ret
inc
stos
push
repz
dec
repz
pop
sbb
aad
into
or
pop
mov
mov
ins
imul
outs
sub
inc
dec
sbb
ret
loopne
ret
mov
xchg
jmp
dec
mov
push
sbb
inc
push
or
xor
jne
cld
aaa
enter
sbb
test
loop
(bad)
(bad)
fnstcw
daa
adc
or
mov
lods
adc
mov
xchg
mov
cmp
sub
sbb
cmp
(bad)
mov
cmp
sub
add
int3
retf
pop
loopne
loope
add
rcr
adc
popa
sbb
aam
sbb
pop
xchg
js
int
iret
(bad)
sbb
(bad)
imul
mov
jge
push
jo
add
push
pop
mov
inc
mov
xor
xor
adc
inc
sbb
clc
mov
sub
push
stos
aam
loope
xlat
les
sbb
(bad)
mov
data16
push
or
or
xchg
mov
mov
xor
fisub
mov
dec
jne
nop
or
hlt
lea
xor
xchg
mov
pop
daa
test
jmp
loope
aas
dec
add
adc
out
es
jg
into
clc
cmp
mov
mov
mov
mov
sub
sub
leave
fcmovnbe
loopne
neg
adc
call
xlat
mov
pop
or
shr
xor
inc
sete
mov
mov
jge
mov
leave
fimul
mov
sub
mov
add
jmp
ret
mov
adc
les
pop
sahf
sbb
mov
dec
or
adc
cmp
(bad)
jmp
xchg
and
jp
cwde
scas
pushf
jle
ja
and
pop
inc
ror
push
rol
aas
jns
jo
xchg
sub
dec
int
xor
loop
ds
dec
inc
xor
and
in
pop
or
sbb
push
jne
add
(bad)
scas
adc
cwde
rcr
(bad)
pop
retf
or
xor
mov
add
adc
leave
loop
add
and
sbb
mov
cmp
push
div
movs
jecxz
repz
cmp
jmp
dec
and
clc
cli
add
add
popa
and
cmp
pusha
sbb
or
fdiv
repz
sub
mov
pop
xchg
jns
jp
jb
and
add
dec
xor
mov
or
ins
fist
mov
popa
in
pop
iret
pusha
and
icebp
jl
cmp
mov
or
add
pop
jg
dec
inc
inc
push
lods
test
lock
std
jnp
into
sar
mov
cmps
outs
sbb
sbb
sar
into
push
ret
cmps
push
cmps
cmc
ret
dec
fwait
ret
test
lea
cld
sub
inc
outs
data16
test
adc
ins
jecxz
mov
pop
lock
and
out
ret
xor
inc
es
mov
fmul
stos
push
xchg
dec
xchg
dec
cmc
lea
ins
mov
jle
lock
sbb
dec
retf
cwde
jae
popa
clc
push
or
mov
popa
add
inc
mov
push
lock
ss
ret
pop
pop
mov
push
loop
cld
lds
lods
add
out
mov
or
enter
fnstcw
mov
push
loope
imul
imul
(bad)
stc
cmp
leave
dec
ret
into
shr
jmp
ror
dec
mov
je
jb
mov
fcom
aad
sar
dec
sbb
call
cmp
aam
(bad)
cmp
dec
push
cmp
shl
leave
jo
and
jmp
loopne
call
inc
dec
(bad)
pop
bound
mov
int
in
bound
mov
cmps
adc
push
mov
dec
ror
sbb
push
or
out
enter
pushf
cmp
loop
push
inc
jo
cmp
push
pop
jecxz
pop
push
jb
js
cmp
mov
jno
push
aaa
and
lea
shl
test
(bad)
cmp
fld
mov
xlat
jb
mov
enter
add
jb
cmp
push
xor
rcr
cmp
rol
inc
sbb
loope
mov
pusha
movs
lea
shl
jle
repnz
xchg
xor
scas
fldenv
cmc
int3
imul
(bad)
mov
push
jbe
gs
or
pop
sub
outs
fadd
sbb
sbb
push
fdivr
jge
push
rol
cld
pop
cmp
push
mov
es
out
retf
pop
fwait
dec
cmp
test
repz
adc
sbb
aad
ins
push
jg
cdq
xor
fisub
stc
or
and
and
fist
xchg
loopne
mov
mov
inc
mov
sbb
mov
das
int3
mov
xor
scas
retf
enter
pop
shl
rcr
nop
sbb
xchg
fs
jmp
xor
stos
movs
bound
repnz
push
xchg
push
adc
loopne
movs
cld
lea
adc
imul
sub
lds
int3
xor
and
and
cmp
ins
daa
cli
inc
cli
sbb
pop
jns
sar
mov
es
cdq
outs
jmp
icebp
aam
inc
call
bnd
mov
or
inc
mov
fsubr
cli
xor
shl
pop
fdiv
and
(bad)
ds
or
loopne
sub
int3
cmps
cmp
add
js
test
nop
out
outs
xchg
pop
mov
dec
and
lds
and
imul
retf
popa
sub
cdq
sub
dec
push
push
dec
sbb
hlt
cwde
inc
or
lods
jmp
or
cs
loopne
xor
sub
sub
shr
cs
mov
or
jp
push
adc
daa
mov
sbb
add
mov
clc
pop
sbb
mov
out
pop
es
or
fwait
mov
enter
(bad)
push
xor
xor
call
sti
enter
jp
mov
lea
adc
mov
cmp
push
adc
aam
mov
mov
adc
and
and
sbb
call
jmp
popf
xor
cmp
retf
pop
jecxz
loop
lods
ffreep
aam
fsubr
loope
call
or
jl
dec
or
push
lds
sbb
int3
push
push
jo
xor
push
sahf
xchg
fsub
mov
cmp
pop
push
cdq
stc
push
jle
inc
loopne
js
push
push
sti
icebp
jmp
lods
aas
push
xor
push
jmp
or
pop
and
push
adc
or
repnz
sub
xor
repnz
test
popf
dec
xor
mov
and
ror
and
sbb
mov
clc
dec
loope
mov
int
mov
iret
lock
fidivr
mov
test
add
dec
rol
push
cmp
mov
dec
repnz
out
and
xor
mov
mov
or
ds
jnp
aam
dec
or
and
inc
sar
mov
xchg
out
mov
rol
mov
jge
out
push
cdq
(bad)
mov
inc
repz
add
imul
mov
push
aas
aaa
cwde
lahf
or
dec
inc
sub
xor
ret
pop
mov
out
(bad)
out
inc
es
jae
repz
dec
test
push
lahf
retf
sti
mov
sbb
or
cmp
add
jae
or
jo
mov
je
push
inc
push
cwde
into
out
shr
jecxz
pop
pop
jg
push
jecxz
push
sahf
ret
inc
mov
sub
rcr
add
and
out
or
cmp
inc
jge
out
sub
call
das
sub
cwde
movs
mov
jecxz
push
jmp
cwde
mov
add
in
out
xchg
enter
xor
cwde
cdq
inc
add
inc
popa
lea
outs
sub
pop
mov
test
add
xchg
pop
ins
inc
je
ins
movs
push
push
inc
mov
and
or
(bad)
(bad)
fdiv
enter
test
int
mov
fdivr
dec
arpl
sub
enter
(bad)
inc
in
add
xchg
stc
mov
cmp
pop
or
repz
in
adc
inc
push
jl
or
lods
outs
lods
ins
jb
jp
xor
push
jno
push
ror
jns
call
mov
test
dec
scas
retf
dec
ja
icebp
xor
adc
cmp
or
adc
(bad)
in
test
enter
cmps
cwde
pushf
shr
jb
or
cmp
inc
jecxz
xor
neg
xchg
mov
mov
jg
call
jo
into
fadd
imul
cmp
call
xor
test
cwde
xchg
(bad)
shr
mov
inc
(bad)
lock
fstp
add
hlt
jecxz
xlat
mov
pop
adc
pop
mov
adc
aad
repz
sbb
scas
mov
ins
cmc
sbb
in
arpl
aaa
cmp
sbb
fist
and
mov
mov
enter
not
call
pop
adc
aaa
and
int
out
mov
mov
leave
inc
sbb
sbb
push
(bad)
mov
adc
gs
jb
cmps
arpl
dec
les
or
fisttp
xor
aad
addr16
push
sahf
adc
push
xchg
inc
js
fst
ins
popf
ret
dec
stos
mov
xchg
mov
push
push
lods
jae
mov
cmp
gs
aaa
jge
sub
clc
jge
int
ret
mov
call
ja
sbb
mov
pushf
pop
inc
(bad)
or
movs
mov
call
enter
add
jae
ins
out
mov
jl
jo
int
dec
rcl
adc
mov
shl
pmaxsw
dec
aaa
ins
mov
mov
add
(bad)
das
addr16
paddq
mov
cmp
xor
fdiv
bound
stos
(bad)
and
jle
jmp
or
pushf
mov
jmp
and
or
and
dec
in
xor
out
enter
(bad)
mov
jmp
and
push
pop
sbb
test
sub
inc
fidivr
test
test
dec
inc
jns
cmp
cld
mov
jmp
mov
jmp
xor
or
nop
dec
inc
pushf
es
or
mov
popf
daa
mov
fild
and
dec
call
mov
aad
call
in
cld
cmp
and
test
loope
rcl
movs
lods
in
stc
jbe
int
dec
lds
mov
ins
mov
cmp
pop
sub
push
scas
movs
sub
inc
or
mov
(bad)
ja
ror
lock
pop
jnp
xchg
xchg
gs
aam
popf
dec
pop
push
js
jl
xor
cld
daa
and
int3
test
xchg
xchg
inc
mov
mov
call
imul
cs
popf
arpl
jecxz
xor
in
mov
xchg
cwde
in
int3
sbb
jns
inc
arpl
aas
call
ret
scas
scas
cwde
repnz
jp
pushf
lods
outs
jnp
inc
inc
and
sbb
popf
add
fwait
mov
dec
pop
dec
jl
imul
cmp
leave
push
in
sbb
mov
fs
xchg
jne
xchg
mov
ins
je
mov
push
enter
mov
and
and
out
shr
xchg
test
mov
enter
mov
test
pop
lea
rcr
jmp
cmps
inc
ins
sub
aaa
mov
push
cmp
enter
mov
ret
stos
ins
add
sti
dec
aas
push
pop
inc
and
adc
ret
cmp
dec
mov
repz
movs
cmp
inc
jnp
or
inc
cmc
arpl
popa
push
and
arpl
xor
stc
cwde
mov
sar
out
mov
dec
push
cmp
fstp
outs
mov
cmp
mov
test
stos
popf
adc
xor
ins
sbb
fadd
aam
(bad)
dec
ret
xor
(bad)
imul
or
jecxz
retf
inc
(bad)
fidivr
movs
(bad)
imul
pusha
pushf
into
add
jb
jbe
or
and
dec
ja
add
lods
or
pop
(bad)
and
mov
jne
xor
fsub
inc
dec
int3
faddp
jp
sti
pop
pop
add
jl
sub
out
jmp
xor
hlt
hlt
sbb
popa
xchg
pop
ret
cmp
xlat
outs
adc
sbb
out
repnz
pusha
pop
pop
data16
adc
sbb
mov
add
push
test
jmp
in
cmps
mov
leave
int3
sub
or
or
sub
adc
mov
aad
stos
ret
(bad)
jmp
in
(bad)
push
jecxz
mov
and
and
repz
and
sbb
scas
(bad)
not
sub
mov
inc
ss
xor
push
fstp
test
fcmovb
popf
pop
cwde
add
sbb
retf
jg
dec
pop
pop
cmp
xchg
push
add
retf
cwde
repz
js
sbb
bound
xchg
jp
aas
sbb
adc
in
mov
fbstp
cmp
pushf
mov
repz
aas
fisubr
lea
in
ret
call
xor
test
test
je
inc
pushf
rcl
bound
aas
sbb
xor
xchg
fxch
leave
fistp
push
sbb
shl
cdq
das
mov
call
les
hlt
sub
iret
or
mov
ror
fcomp
cmp
addr16
stos
and
mov
xlat
js
movs
outs
jp
mov
push
arpl
mov
test
stos
and
lea
mov
mov
cmps
jbe
sub
xchg
cmp
es
push
xchg
in
xchg
dec
push
pop
pop
sub
xor
cmp
sub
mov
stos
test
xchg
dec
mov
dec
hlt
shr
(bad)
cdq
repz
push
ret
cmp
mov
imul
xor
sar
or
cmc
fidivr
ds
nop
out
xor
dec
mov
imul
jns
mov
or
push
jbe
ror
sbb
out
outs
push
es
js
xchg
stos
rol
fdiv
add
jnp
fcmovnu
pop
inc
cmp
cmp
pop
loope
daa
adc
adc
mov
fucom
fistp
dec
xchg
je
push
leave
imul
cmp
scas
jae
mov
mov
sar
mov
jo
sbb
inc
xor
mov
stos
adc
cmp
inc
cli
inc
dec
popa
lods
add
or
nop
popfw
or
pop
push
aas
push
cmp
jo
jmp
pop
fadd
inc
int
lods
pushf
retf
dec
xor
add
lock
out
(bad)
fld
hlt
cmp
jecxz
or
imul
add
ss
and
jge
adc
sub
out
cmps
loope
adc
xchg
mov
cmp
pushf
adc
jmp
add
push
jns
xchg
jg
mov
mov
retf
mov
repz
push
(bad)
test
fwait
add
xor
or
mov
mov
popf
les
sub
jp
inc
xor
inc
clc
push
scas
and
mov
sar
add
(bad)
idiv
xchg
call
mov
dec
arpl
cld
out
ins
scas
dec
add
adc
loope
aaa
adc
xchg
and
mov
fld
inc
rol
shr
push
(bad)
xor
pop
into
lods
shl
popf
and
push
push
sub
dec
jbe
je
or
and
in
sub
in
out
aas
inc
pushf
push
mov
mov
push
dec
sub
sub
lds
mov
sub
or
mov
push
inc
jne
mov
in
iret
sub
pop
and
inc
cmp
enter
inc
dec
pop
sbb
mov
sub
das
pop
add
dec
leave
xor
adc
pop
dec
cmp
xor
xchg
fnsave
mov
xor
call
or
loopne
inc
lods
popf
xchg
push
xchg
int3
adc
sbb
xchg
xlat
mov
xchg
(bad)
push
repz
sbb
sbb
pop
pop
fdiv
fsub
sar
sbb
mov
push
ret
adc
xchg
outs
push
loope
in
and
add
xchg
or
push
add
imul
das
stos
scas
(bad)
sub
ins
xor
and
xor
push
pop
push
adc
sbb
add
pop
call
ins
push
pop
fldcw
jns
imul
sti
xor
push
cdq
mov
dec
test
push
lahf
inc
push
sbb
adc
pop
call
and
inc
sbb
lock
sub
fs
push
das
sbb
arpl
ins
fldcw
inc
out
sbb
ins
add
in
xchg
into
dec
mov
and
mov
out
jb
mov
xlat
xor
jge
stos
sbb
pop
xor
ins
pop
push
push
shr
jb
stos
inc
lahf
mov
sar
mov
adc
dec
iret
js
fs
mov
xchg
das
xor
push
fsub
pop
addr16
fdivr
pop
add
or
test
mov
push
dec
jb
push
xor
mov
pop
mov
xor
sbb
fild
mov
push
jp
idiv
cmc
out
xchg
or
out
mov
aad
(bad)
sub
sub
inc
add
repz
hlt
fidiv
retf
mov
dec
in
test
je
xchg
cs
xor
retf
(bad)
test
mov
sub
pop
dec
arpl
and
jo
add
clc
loop
icebp
enter
pop
sbb
mov
popf
adc
jno
nop
xchg
loop
aam
or
les
mov
xchg
pop
lods
mov
ds
pusha
jmp
xor
ret
test
pushf
adc
xor
das
ins
or
dec
pavgw
lock
fld
test
stos
mov
xor
outs
xchg
inc
aas
data16
xchg
mov
lods
cmps
jne
add
inc
addr16
lea
or
test
outs
scas
cwde
adc
shl
(bad)
ror
jle
gs
pop
aas
and
sbb
mov
aad
out
int
mov
ja
std
aaa
cmp
dec
lods
adc
enter
pusha
cmps
ret
mov
fs
lds
push
mov
ret
jmp
hlt
push
repz
bound
sub
and
pop
pop
add
push
mov
or
sub
mov
mov
mov
fbld
mov
inc
push
adc
pop
les
mov
rcl
cmp
jmp
adc
int3
ret
fild
jmp
std
imul
or
sbb
and
shr
pop
inc
jb
mov
(bad)
push
fnsave
ins
les
test
stc
xchg
and
inc
cs
and
fstp
pusha
ins
sub
mov
xor
and
mov
push
sahf
push
imul
ret
out
mov
jp
lods
jns
push
sub
in
adc
out
xlat
mov
hlt
lea
cmovle
xchg
pop
pop
sub
cwde
xchg
mov
aaa
imul
inc
out
ja
push
(bad)
pop
fs
or
push
ins
sbb
data16
cmp
mov
xlat
jecxz
jmp
push
push
jmp
(bad)
and
add
cmp
sub
out
rol
xchg
and
repnz
jecxz
test
and
inc
cmp
in
jae
push
inc
ds
ds
ret
in
and
xlat
fldenv
test
aaa
pop
xor
fisttp
lods
mov
sub
popf
mov
in
jge
rcl
pop
add
imul
jmp
cmp
or
mov
or
mov
out
sub
push
inc
xchg
push
and
xor
rol
int
mov
dec
mov
jae
out
push
test
xchg
sub
inc
or
cmc
clc
ja
enter
jns
in
mov
test
push
inc
inc
cmp
push
dec
adc
das
sub
or
mov
mov
sub
daa
rol
loope
(bad)
inc
or
sub
aad
push
cdq
jp
xlat
mov
jg
enter
loopne
push
or
cmp
mov
dec
les
idiv
cmc
adc
repnz
sbb
or
(bad)
fwait
call
shr
mov
mov
pop
push
sbb
cmp
mov
jmp
aam
retf
int3
stos
mov
push
arpl
push
pop
hlt
push
ja
inc
mov
pop
out
imul
and
and
popa
mov
jp
out
in
inc
into
imul
xchg
sbb
jecxz
jmp
loope
int3
or
mov
push
push
pop
lahf
xlat
jae
dec
(bad)
push
xchg
pop
xchg
pop
mov
adc
or
push
sub
or
ret
xchg
jno
dec
sbb
xchg
pop
bnd
sbb
mov
rcl
mov
ins
push
jmp
mov
sub
xor
iret
call
push
fisub
imul
js
hlt
mov
xchg
inc
mov
jmp
ins
and
jle
ror
cmp
jns
test
imul
jae
dec
stc
(bad)
stc
xor
push
lock
jne
movs
jne
int3
adc
test
clc
fwait
cli
sbb
mov
fs
shl
leave
xlat
add
dec
mov
mov
nop
cmp
(bad)
ficom
cmps
pop
push
inc
sbb
mov
inc
loope
xor
daa
scas
popa
push
daa
ds
(bad)
idiv
push
outs
jns
mov
or
sub
movs
aaa
and
xchg
adc
fwait
xchg
push
mov
wbinvd
cwde
pop
adc
fcomp
sub
lock
sti
adc
clc
mov
mov
test
sbb
xlat
sbb
cmps
pop
clc
or
enter
mov
jmp
mov
sub
js
fdivr
rol
in
test
(bad)
aad
mov
stos
or
mov
xor
jae
jmp
in
xchg
sbb
add
fs
addr16
or
shl
xchg
lea
fidivr
mov
ror
int
jle
bswap
lahf
mov
mov
dec
dec
lahf
pop
add
lds
enter
and
fcom
and
ins
xchg
ja
pop
js
arpl
and
adc
daa
xlat
adc
or
mov
cmp
fwait
in
sub
push
cwde
call
and
into
adc
adc
test
xchg
xor
clc
js
fsub
je
or
rol
out
iret
mov
loopne
jbe
out
mov
outs
jg
sub
sbb
aam
in
mov
add
les
jae
jecxz
jmp
mov
inc
mov
pusha
add
pop
stc
bound
mov
(bad)
fild
mov
call
fimul
sub
stc
push
or
jmp
scas
int
fadd
idiv
jmp
jb
in
pop
xchg
shl
fisub
xor
or
arpl
xchg
cmps
bound
xchg
push
or
or
in
test
dec
or
nop
cdq
in
jge
mov
sub
jmp
hlt
icebp
add
movs
out
outs
sbb
cdq
mov
ds
pushf
add
hlt
out
(bad)
iret
leave
jae
(bad)
ss
cdq
push
pop
fdivr
jle
lock
not
frstor
add
in
mov
sahf
enter
ins
ret
sbb
nop
sbb
test
jmp
sbb
in
xor
pop
dec
cmp
add
arpl
(bad)
stc
repnz
fadd
push
ja
or
repnz
sbb
push
shufps
cmc
es
mov
xchg
cli
cld
test
pop
les
arpl
mov
fbstp
dec
pop
sub
xor
xchg
sbb
cmp
adc
int
inc
aad
je
mov
arpl
add
xchg
hlt
add
pop
in
aaa
scas
adc
movs
jl
cdq
jbe
dec
jle
bound
pop
aaa
in
(bad)
neg
int3
mov
hlt
out
sub
pop
and
loopne
push
les
jae
lods
mov
add
ss
or
stos
stos
ins
nop
dec
push
into
or
xchg
xchg
xchg
fist
or
push
aas
jno
add
popf
ss
call
test
xchg
pop
loop
cmp
mov
imul
xchg
aad
out
cmp
(bad)
or
mov
xchg
imul
sub
or
rcl
idiv
and
aad
leave
call
push
leave
jns
xor
push
sub
sbb
xor
and
dec
mov
adc
pop
or
arpl
dec
pop
sbb
int
add
push
out
add
pop
sbb
aam
movs
loopne
ins
add
cmps
arpl
ja
adc
fsubr
fimul
lds
(bad)
cmp
cmp
sub
jo
mov
xchg
inc
xchg
arpl
popf
push
inc
cmp
sub
enter
dec
inc
jns
cmp
(bad)
cmps
lahf
test
xchg
cwde
arpl
bound
add
and
adc
clc
add
aas
clc
repnz
cmp
aam
or
call
dec
pop
inc
(bad)
ret
and
or
sbb
shr
ja
jle
leave
inc
jp
mov
fs
outs
xchg
mov
sbb
jmp
outs
stc
loop
dec
pop
jmp
mov
xchg
fs
cmps
and
and
idiv
dec
jecxz
ror
repnz
aam
movs
scas
popa
or
push
inc
dec
dec
pop
pop
cld
inc
push
popf
or
jmp
(bad)
pop
jecxz
fisttp
lods
je
call
cld
hlt
out
adc
sub
adc
bound
(bad)
sub
(bad)
into
sbb
jns
push
push
mov
in
xor
fcom
jl
pop
pop
pop
sbb
sar
inc
(bad)
xchg
adc
shl
xor
in
dec
clc
or
adc
lods
jbe
xchg
mov
mov
ds
xor
and
push
scas
jmp
xchg
xchg
cmps
mov
arpl
mov
out
fadd
cmp
cmps
cmovnp
daa
cmp
pop
(bad)
xlat
hlt
xchg
jnp
test
movs
and
xor
xchg
xor
fnsave
adc
clc
or
gs
add
shr
push
sbb
and
sub
add
arpl
adc
test
adc
hlt
push
or
adc
or
ret
mov
xchg
iret
jmp
ret
cwde
mov
xor
aas
xor
xor
lahf
aam
push
(bad)
fwait
je
inc
inc
sbb
push
in
jb
dec
enter
mov
loopne
or
dec
sbb
sar
mov
xchg
mov
je
idiv
and
leave
push
sub
lods
jecxz
clc
sub
mov
lea
ja
jns
repz
mov
popf
sub
mov
jmp
adc
movs
leave
inc
cmp
fs
cdq
cmp
call
in
push
loop
pop
sbb
mov
lock
pop
mov
int3
imul
mov
add
loope
and
dec
mov
push
addr16
hlt
and
fwait
in
mov
repnz
(bad)
sbb
jbe
mov
retf
jge
sub
aam
in
add
push
setl
into
ffree
in
xchg
arpl
push
jnp
mov
push
sub
adc
mov
cmps
cmp
aad
push
xor
into
mov
pop
pop
jnp
and
adc
mov
movs
push
and
xor
call
int
das
jb
push
adc
ret
fmul
ja
js
pop
mov
jae
(bad)
mov
ds
adc
pop
pop
ds
jmp
fild
inc
mov
add
push
and
fsub
int
mov
push
rcl
in
xchg
out
test
mov
xor
xor
hlt
outs
and
xor
aam
add
mov
outs
push
inc
inc
cmp
push
sti
mov
mov
xor
push
pand
(bad)
sbb
cs
pop
jno
imul
psubsb
adc
push
xchg
aad
adc
repz
xchg
retf
outs
adc
ds
xor
push
or
and
cmp
jmp
xchg
mov
mov
or
push
(bad)
in
fist
pop
retf
sub
enter
push
mov
arpl
dec
dec
pop
shl
sub
ret
and
sub
daa
xor
test
outs
(bad)
imul
das
inc
push
xor
fisubr
cmp
cld
clc
repz
das
fucomp
inc
push
test
dec
mov
sahf
inc
les
pop
sub
iret
leave
rol
in
hlt
lea
test
(bad)
cmps
ins
adc
cs
sbb
and
xchg
mov
ins
inc
cmps
pop
outs
jns
mov
mov
mov
cmp
retf
cwde
bound
fs
dec
clc
jge
repnz
inc
cmp
xor
popf
add
pop
pushf
or
ret
mov
das
repnz
mov
mov
pop
out
imul
push
mov
das
dec
cmp
push
(bad)
push
dec
dec
cmp
movs
scas
test
inc
data16
pusha
xchg
inc
call
xor
cmps
add
icebp
loopne
test
pop
ins
scas
call
push
push
pop
and
and
adc
push
cmp
cmps
jmp
inc
outs
jl
push
push
je
push
call
(bad)
into
call
mov
mov
in
arpl
pop
pop
gs
das
das
fiadd
aad
and
fist
pop
inc
outs
add
adc
dec
jns
mov
dec
jb
sbb
mov
mov
mov
mov
fistp
lahf
cwde
push
mov
sbb
xchg
lds
loopne
dec
or
je
mov
dec
idiv
sub
sbb
and
inc
jmp
xchg
test
ss
pushf
mov
push
imul
retf
mov
dec
cmps
inc
sub
clc
repz
jno
xchg
outs
mov
and
push
bound
call
xchg
pop
mov
mov
pop
inc
outs
jb
gs
inc
push
add
and
push
lock
cs
xchg
jmp
fs
mov
arpl
jecxz
sub
pop
fld
int3
and
sub
mov
pop
fwait
imul
push
pop
xor
push
xor
(bad)
pop
fs
rcl
xchg
test
gs
jl
cmp
xor
in
aaa
xor
out
out
xor
shl
inc
scas
stc
xchg
int3
push
cmps
mov
leave
add
jo
and
add
sti
lods
rcl
jecxz
xchg
adc
inc
sub
sbb
push
cmp
cli
xor
out
bound
cwde
lds
mov
(bad)
in
daa
sub
dec
movs
ds
pushf
and
jb
mov
mov
mov
scas
cdq
icebp
in
sar
inc
cmp
cmp
inc
cmp
out
sar
jecxz
icebp
fcmovnbe
popf
in
outs
xchg
cmps
arpl
pop
mov
inc
xchg
ins
xchg
xlat
(bad)
dec
sbb
gs
cld
mov
jbe
test
ss
in
xor
inc
iret
fild
mov
mov
dec
aam
mov
ds
ds
loope
out
repnz
ret
dec
int3
nop
vpaddw
pop
push
xlat
imul
sbb
dec
pop
xchg
repz
lods
rcr
cwde
mov
(bad)
mov
ins
add
add
lods
jnp
push
add
cmps
int
push
pop
(bad)
mov
jae
arpl
test
inc
push
xchg
inc
dec
sub
or
ret
dec
xchg
in
push
xor
push
pusha
and
xchg
inc
cmp
out
sbb
sti
push
les
fcmovnbe
push
mov
dec
popf
pop
adc
xchg
cdq
inc
inc
les
dec
repz
(bad)
adc
add
mov
xor
jl
les
cmp
mov
outs
stc
mov
jmp
enter
test
push
lahf
dec
(bad)
mov
push
sbb
jecxz
ret
sbb
or
xor
test
cwde
rol
or
jb
mov
lods
jg
fbstp
dec
and
adc
jns
dec
sub
cmp
aad
fldcw
push
repz
xor
inc
sbb
or
daa
mov
daa
test
lods
je
clc
dec
shl
push
test
dec
scas
dec
push
push
jmp
jl
std
pop
mov
sub
loope
(bad)
fdiv
aaa
test
adc
cli
bound
dec
mul
sub
xlat
and
jnp
and
fisttp
xchg
sbb
push
pop
xchg
enter
iret
sub
mov
adc
hlt
test
dec
push
test
push
(bad)
ins
loop
js
jae
mov
fcmovnu
loope
movs
test
ret
cmps
and
adc
inc
xor
mov
inc
jne
push
sbb
xchg
mov
pusha
adc
fnstcw
pop
xchg
or
repz
sub
fmul
cmps
ret
mov
cs
leave
push
cmps
adc
fistp
fimul
ss
cmp
mov
or
xlat
movs
adc
cmc
mov
pop
(bad)
cmp
mov
adc
or
mov
jmp
ss
xchg
loop
or
mov
movs
sub
xchg
cmp
mov
test
cmp
fiadd
into
mov
push
sub
cmps
inc
inc
stc
cmp
fldenv
xchg
enter
cmp
in
mov
xchg
pop
pop
dec
aas
(bad)
call
data16
sbb
pushf
mov
(bad)
jne
jae
retf
push
fcomp
shr
and
xchg
jmp
iret
push
add
hlt
jecxz
imul
cwde
push
pusha
inc
and
and
mov
fsub
(bad)
iret
loopne
enter
fst
mov
jg
xchg
jo
imul
call
out
sub
xchg
fcom
in
or
int3
cmp
pop
or
cmp
ins
jg
dec
int3
test
cmp
cmps
arpl
xlat
mov
push
loopne
add
lock
adc
or
clc
jno
les
hlt
iret
(bad)
retf
pusha
mov
adc
aad
push
out
dec
jge
movhps
sbb
fldenv
(bad)
ret
and
movs
push
rcl
cmp
push
cmp
rcr
leave
loop
cmp
lods
sbb
retf
ret
mov
or
inc
(bad)
lock
ret
imul
pop
repz
push
jecxz
mov
int3
push
nop
jl
nop
dec
les
push
loopne
and
xchg
repz
(bad)
jo
test
or
cmp
pop
test
popa
pop
int
push
and
sub
jmp
ror
dec
mov
add
jnp
sar
push
jmp
xlat
clc
add
rcl
fild
xchg
mov
mov
xchg
nop
pop
das
jmp
adc
adc
sbb
adc
mov
adc
dec
cmps
pop
push
movs
mov
sbb
mov
lock
or
push
push
movs
rol
bound
movs
inc
js
jnp
loopne
add
out
mov
lahf
sub
mov
int3
cmp
cld
sub
xor
add
in
cmp
enter
hlt
stos
test
sub
sahf
xchg
adc
arpl
jecxz
sbb
lock
rcr
jbe
push
xor
or
daa
pop
sub
mov
lea
repz
xchg
or
ds
mov
aas
sbb
in
pushf
out
test
pop
mov
cmp
push
fadd
mov
aam
(bad)
dec
dec
inc
mov
xchg
popa
nop
sub
inc
lea
dec
mov
(bad)
sub
test
cdq
dec
bound
xchg
xor
fldcw
xlat
in
retf
mov
dec
daa
adc
jb
pop
(bad)
ror
inc
mov
adc
(bad)
xor
repz
fstp
vmaxpd
cmp
inc
xchg
adc
push
test
ror
push
test
sbb
push
add
test
or
cmp
pop
sbb
or
iret
ret
pop
movs
xlat
xchg
jge
cmps
mov
or
xor
dec
inc
jne
sub
and
rol
test
sub
arpl
adc
cmp
call
xor
sti
xchg
and
xchg
dec
mov
mov
push
gs
(bad)
bound
dec
jb
adc
and
dec
aas
rcl
bound
add
dec
daa
pop
push
push
clc
fsubr
ins
arpl
popf
xchg
dec
(bad)
popa
in
clc
stos
into
mov
and
pop
jbe
repz
adc
cmp
in
repz
cmps
loop
ror
pusha
lods
shl
fsub
adc
sub
outs
push
jmp
bsr
sub
rcr
cdq
or
jb
dec
pop
pop
cmp
in
xchg
or
push
fst
retf
test
shl
fwait
push
(bad)
dec
mov
scas
xor
inc
cmp
inc
push
fidivr
call
test
cmp
movs
or
push
ins
push
sbb
and
js
sub
pop
pop
into
aad
leave
pop
xor
lods
mov
jg
imul
or
das
cmc
sub
adc
xor
xchg
mov
mov
out
adc
add
lods
(bad)
xor
adc
mov
xchg
xchg
(bad)
xchg
movs
ror
repnz
pop
pop
xchg
xor
fbstp
cmp
xchg
nop
imul
(bad)
cmps
gs
leave
or
add
stc
mov
inc
mov
je
inc
jle
push
and
aaa
mov
pop
jbe
cmps
cld
test
movs
xchg
iret
push
idiv
jp
dec
cs
push
adc
xor
add
into
fucom
xchg
sub
mov
add
pop
mov
and
nop
sub
sub
and
xchg
mov
sbb
popa
cld
mov
mov
mov
popf
in
mov
out
ret
outs
dec
repz
mov
(bad)
and
movs
shr
xor
(bad)
stc
sbb
sub
daa
cld
(bad)
rol
inc
sbb
pop
cdq
nop
xchg
push
dec
dec
push
or
pop
push
or
inc
imul
pop
js
call
or
inc
inc
and
pop
xor
jmp
xor
xchg
mov
push
sbb
jns
cmp
sti
mov
leave
call
cmp
in
push
ror
ret
jle
xor
loop
xor
pop
(bad)
xor
js
xlat
push
in
xchg
outs
aad
repnz
dec
sbb
xor
ins
iret
push
cmp
(bad)
jmp
xlat
mov
jge
push
dec
xchg
cmp
add
push
das
cmp
or
sub
and
aad
xchg
pop
fs
cmc
cld
les
inc
(bad)
(bad)
or
aam
and
mov
inc
les
fwait
retf
add
jo
add
hlt
push
dec
add
out
adc
es
test
and
mov
lea
mov
in
inc
in
adc
ins
and
dec
test
lds
xor
inc
icebp
jno
sub
scas
movs
mov
add
les
or
test
popa
les
mov
sti
mov
jns
mov
jbe
dec
test
mov
dec
add
loop
in
push
mul
sub
rol
cdq
sbb
pop
int3
fnstsw
rol
movs
xor
in
mov
cwde
aam
and
dec
gs
inc
test
imul
mov
(bad)
test
mov
add
in
fwait
mov
ins
rcr
mov
xchg
xor
scas
into
int3
call
iret
and
xchg
add
or
cs
aam
fs
js
lds
inc
test
movs
shl
outs
adc
iret
or
and
xchg
mov
(bad)
xor
mov
xchg
mov
mov
jg
push
sbb
push
daa
cwde
pop
push
dec
xor
aam
mov
mov
add
push
or
lock
cwde
(bad)
mov
std
add
std
mov
sbb
js
js
cmc
div
lock
cmps
push
jmp
sbb
sbb
maxps
jg
pop
adc
jl
jo
cwde
pop
cwde
xor
popf
data16
mov
push
gs
aam
in
neg
jo
cmp
push
sub
pop
mov
push
cmp
std
pop
jge
lock
loopne
jo
jo
popf
or
pop
push
cld
cld
(bad)
jmp
cmp
je
jo
sbb
sbb
dec
ret
xchg
pop
test
(bad)
push
arpl
xchg
icebp
inc
jae
mov
xor
mov
call
repnz
xchg
xchg
scas
sahf
stos
mov
aam
cmp
repz
loopne
adc
aam
lock
jg
xchg
sti
je
and
xchg
cmp
imul
aaa
je
ins
sbb
enter
ss
push
jb
fbstp
mov
jae
mov
pop
fs
cwde
int
sbb
repnz
cmp
pusha
and
(bad)
pusha
jg
mov
jg
sub
fist
pop
ss
pushf
(bad)
aam
cmp
pop
pop
xchg
mov
jge
aam
cwde
out
gs
push
push
mul
xor
imul
cs
jbe
aaa
jmp
cmp
cmp
dec
into
mov
mul
cli
in
mov
scas
outs
sub
and
mov
xchg
inc
(bad)
jbe
mov
and
stos
cwde
into
not
in
xchg
cmp
ss
cmp
inc
(bad)
out
mov
addr16
add
sahf
lock
mov
imul
vcvttpd2dq
sahf
retf
rcl
mov
push
push
push
ss
retf
enter
imul
xor
call
scas
mov
mov
fwait
outs
cmp
add
cli
xor
jp
xor
cmps
mov
pusha
push
cmp
fadd
sbb
sahf
call
jp
mov
push
push
mov
mov
scas
jbe
mov
jle
mov
cmp
jbe
push
outs
dec
mov
jmp
mov
aaa
dec
stos
cmp
add
scas
fdivr
xor
fs
mov
popa
into
or
dec
mov
mov
cli
dec
sub
jmp
push
stos
cmp
mov
cs
retf
xor
sub
mov
(bad)
lahf
push
xchg
imul
xor
bound
inc
jge
add
jle
clc
add
mov
addr16
xchg
xchg
jecxz
mov
scas
inc
sub
dec
aas
xlat
push
shl
addr16
push
lods
clc
test
lods
cmp
inc
jmp
(bad)
(bad)
pop
push
fstp
pop
(bad)
pop
mov
xlat
fisub
sahf
gs
push
jnp
mov
push
lahf
call
jnp
mov
aaa
pusha
ins
xor
mov
arpl
out
cmps
(bad)
pop
cmps
(bad)
cdq
jnp
pop
jle
(bad)
fidiv
cwde
aam
fcomp
pop
sbb
retf
push
call
cmp
call
fwait
pop
jnp
push
pop
add
call
jae
add
sti
fimul
mov
(bad)
cs
push
pop
pop
pop
ficomp
sbb
fcmovu
rcr
ror
pop
cdq
js
sbb
xor
sbb
sbb
pop
pop
fcomp
fcomp
fcomp
fmul
add
stos
pop
mov
sbb
and
lss
retf
sti
push
pushf
xchg
pop
cmp
fiadd
jmp
lods
adc
mov
rcr
das
(bad)
push
scas
fild
pop
pop
and
sub
je
(bad)
neg
aam
jnp
ror
pop
pop
dec
sti
scas
or
mov
rcr
and
mov
fwait
dec
(bad)
push
aaa
js
add
lahf
dec
inc
mov
rcr
imul
and
sbb
sahf
lahf
into
rcr
sbb
push
jo
pop
sbb
mov
adc
out
fild
and
es
push
fisubr
jle
inc
fs
cmp
pop
sbb
sbb
adc
cdq
loopne
inc
jp
mov
mov
sub
sti
pop
stos
mov
cmps
push
test
pop
xlat
gs
aad
or
cli
retf
fnsave
sbb
add
aas
stos
cwde
and
pop
aad
bswap
push
cmps
push
dec
into
jmp
aad
pop
cvtps2pd
push
inc
push
outs
sbb
xor
pop
(bad)
add
push
mov
jmp
les
jmp
mov
(bad)
(bad)
fisub
pop
scas
into
pop
shr
push
dec
push
imul
mov
das
(bad)
pop
shl
cs
call
add
pusha
cmps
adc
push
inc
inc
mov
push
ret
out
dec
fisubr
pop
(bad)
or
outs
push
cmps
out
sti
xlat
iret
xchg
call
push
loop
ret
pop
iret
(bad)
mov
cli
cmp
xchg
iret
pop
bound
shr
cli
les
scas
jp
shr
mov
and
daa
push
shr
jp
mov
and
inc
hlt
shr
mov
outs
out
cmp
and
jo
pop
jmp
push
sub
scas
adc
sub
daa
(bad)
dec
cli
rcl
adc
dec
adc
(bad)
push
(bad)
mov
dec
sbb
pop
dec
xor
imul
sbb
(bad)
iret
add
pop
or
inc
aas
sbb
mov
jecxz
cld
pop
xchg
push
ins
movs
xchg
push
mov
push
push
in
jo
dec
inc
dec
sbb
mov
addr16
call
js
test
stc
cmp
jle
shl
mov
jb
fcomp
add
pop
out
push
mov
sbb
xchg
or
dec
(bad)
inc
cs
mov
inc
pusha
scas
or
ins
int3
stos
push
test
fld
mov
dec
shl
dec
gs
mul
and
inc
pusha
ins
or
jmp
push
test
ja
jo
and
cmp
and
jo
pop
cmp
cmp
or
pusha
push
or
cmps
pop
mov
adc
popf
call
nop
sar
sbb
movs
sub
loopne
test
mov
pop
push
mov
xchg
test
xchg
or
xor
cmp
dec
outs
call
das
lock
xchg
loopne
loopne
inc
jl
add
jg
les
jg
adc
mov
mov
loopne
pop
push
sti
fnstsw
dec
stos
pop
enter
pop
mov
addr16
stc
push
sbb
fiadd
xchg
sub
vpsraw
inc
adc
into
add
movs
shl
pop
adc
or
mov
ficomp
movs
mov
jae
mov
add
adc
lock
xchg
and
jp
xor
pop
retf
loope
inc
shl
or
imul
dec
(bad)
loope
add
mov
push
dec
add
dec
jno
cmp
loope
mov
xchg
jmp
add
in
xchg
jmp
and
inc
ror
and
inc
test
mov
mov
mov
inc
and
imul
lods
inc
add
and
push
sbb
ret
push
add
popa
add
loop
sbb
or
add
push
shl
loope
push
and
mov
addr16
lds
loopne
movs
xor
cmp
pop
dec
inc
std
loopne
sbb
popa
in
imul
inc
xchg
sub
sub
jno
test
loope
(bad)
adc
fmul
loope
(bad)
sub
jae
test
xor
adc
mov
dec
rcl
adc
inc
mov
sub
dec
xchg
adc
jmp
inc
retf
add
mov
and
fucomi
jno
mov
inc
xor
sbb
test
push
(bad)
and
inc
jmp
jnp
sbb
loop
adc
add
(bad)
jns
loope
add
and
ret
idiv
std
mov
adc
mov
push
fs
in
aad
icebp
les
mov
hlt
gs
mov
test
add
and
movs
jb
jne
cmc
add
and
jno
mov
cdq
inc
(bad)
addr16
call
dec
into
cmp
cmp
and
cs
mov
aad
lock
xor
leave
push
loopne
test
mov
icebp
in
(bad)
clc
test
cmps
cmp
test
xor
hlt
aaa
cdq
addr16
call
mov
jne
cs
leave
dec
mov
icebp
test
je
in
mov
mov
nop
xor
or
mov
adc
push
ja
jp
aad
and
dec
cmp
cmp
aad
aad
xchg
pop
and
(bad)
xchg
call
mov
adc
loope
cmp
mov
cmp
mov
mov
leave
jo
xor
out
add
xchg
inc
inc
bound
mov
cmps
xor
and
ss
push
pop
out
mov
popa
test
loope
enter
dec
jge
dec
popa
stos
call
fs
popa
push
dec
les
or
mov
or
and
sub
stos
test
popa
lods
mov
xchg
or
jne
cmp
in
dec
icebp
out
jl
lods
call
loope
mov
mov
jne
mov
leave
adc
daa
xor
xchg
movs
mov
inc
mov
jno
cmp
movs
sbb
in
mov
xor
imul
icebp
test
loopne
hlt
jl
sbb
popa
mov
sbb
or
(bad)
xchg
sub
dec
imul
sbb
jp
pop
test
daa
jbe
dec
inc
sub
test
int
in
gs
add
dec
ins
ins
push
or
and
test
movs
movs
test
pushf
and
or
punpcklwd
lods
pop
push
mov
mov
sbb
gs
sub
lods
and
push
cmp
in
cs
xor
and
mov
ins
in
test
cmp
mov
lock
out
pushf
add
je
in
add
aad
sbb
int
dec
scas
std
les
push
mov
adc
inc
add
vcvtpd2ps
shl
pop
jnp
push
jmp
and
cmp
aaa
sub
inc
inc
dec
adc
sbb
add
test
shl
movs
inc
shl
mov
int
jp
popa
test
xor
inc
sub
mov
out
xchg
inc
call
inc
pop
test
add
push
push
test
inc
sub
and
and
test
add
movs
mov
mov
add
mov
fiadd
and
gs
push
inc
push
mov
pop
mov
dec
sbb
test
jne
mov
inc
push
jl
mov
int3
mov
inc
mov
push
ins
sbb
inc
gs
pusha
push
pop
aad
inc
daa
lds
outs
jecxz
rol
sub
sub
ins
push
pop
pop
inc
sahf
sub
xchg
xchg
inc
rcl
test
or
cmps
aam
fadd
aad
pinsrw
cli
mov
fistp
xchg
xchg
and
jge
(bad)
loop
and
mov
sahf
out
aas
jle
pop
push
sar
loop
daa
sbb
das
jae
mov
lahf
fiadd
ret
mov
(bad)
dec
and
(bad)
int3
sbb
mov
push
mov
pop
mov
mov
push
mov
or
outs
mov
mov
jb
push
dec
adc
xchg
das
test
mov
or
or
xchg
iret
xchg
dec
adc
out
shl
aaa
sub
jbe
retf
mov
mov
iret
int3
pop
dec
xchg
int3
daa
pop
das
mov
lds
aas
fcmovne
int3
pop
dec
xchg
int3
daa
pop
das
mov
les
mov
das
ror
adc
sar
out
ja
add
and
repz
into
pop
das
ffreep
xor
adc
push
outs
push
xchg
pop
sbb
fwait
xchg
arpl
dec
movs
(bad)
outs
out
xchg
(bad)
shr
xor
out
push
jecxz
pop
jno
push
jg
ja
(bad)
jb
fbld
movs
pop
das
mov
dec
into
sub
pop
mov
out
(bad)
repz
ror
xor
jb
aas
ret
pop
jae
adc
jo
jl
dec
int
(bad)
into
mov
push
add
inc
dec
push
add
inc
lds
push
push
ret
jge
dec
enter
js
(bad)
mov
ret
stc
or
jns
(bad)
mov
icebp
cld
hlt
iret
mov
mov
je
gs
mov
out
aad
ret
mov
cmps
(bad)
mov
icebp
cld
icebp
cli
or
cmp
xor
cmp
mov
out
or
fild
out
lods
mov
ret
xchg
sbb
xchg
(bad)
out
js
inc
mov
pop
xor
fsub
add
fadd
clc
test
(bad)
sbb
clc
test
inc
js
cwde
test
pop
inc
js
sbb
js
cwde
test
pop
inc
js
sbb
clc
add
fadd
clc
test
cli
mov
add
stc
mov
shl
mov
jmp
out
dec
lahf
stc
mov
dec
scas
mov
mov
fldcw
mov
ret
retf
js
pop
cmp
mov
push
js
iret
push
sub
sub
inc
xor
adc
mov
mov
in
xchg
mov
fcmovne
mov
cwde
test
mov
movs
out
cld
aam
mov
mov
mov
jb
arpl
scas
mov
and
mov
mov
or
call
fadd
loope
rcl
push
inc
push
popa
push
inc
push
and
rcl
aam
aam
push
inc
push
popa
push
inc
push
and
rcl
aam
aam
push
inc
push
popa
push
inc
push
and
rcl
aam
aam
push
inc
push
popa
push
inc
push
and
rcl
aam
aam
push
inc
push
popa
push
inc
push
jno
xchg
mov
cdq
lea
popa
cmp
or
jae
mov
sub
pop
push
push
mov
mov
jle
inc
and
inc
or
mov
sub
xor
test
ins
adc
cmp
cmps
loope
scas
xchg
inc
and
pop
or
mov
mov
push
rcl
xor
repz
mov
scas
cmps
push
mov
add
push
mov
test
sub
push
mov
mov
push
push
pop
push
adc
movs
test
mov
xchg
jmp
mov
and
sahf
dec
pop
outs
pop
dec
sub
push
xchg
and
jge
repz
pop
pop
movzx
push
pop
and
jo
add
sahf
xchg
out
xchg
ss
data16
test
mov
pop
pop
pop
dec
in
retf
sahf
dec
aaa
sbb
pop
sbb
or
push
sahf
iret
in
cmp
cmp
pop
push
sub
xor
in
scas
sahf
and
add
daa
push
push
cmp
icebp
ret
cmp
jno
cmp
sub
in
scas
sti
cmp
push
cs
add
icebp
scas
in
and
outs
aas
sub
inc
jo
xor
cmp
sti
enter
outs
aaa
sub
jb
xor
cmp
(bad)
dec
sub
inc
dec
and
cmp
cmp
xor
aas
and
jb
das
xor
es
and
cs
adc
ss
push
(bad)
test
pop
aad
aad
pop
not
cmc
jl
into
pop
inc
mov
fwait
or
dec
cmp
(bad)
cdq
cwde
mov
shr
fsubr
push
dec
or
pop
dec
sahf
scas
sahf
dec
pop
sbb
push
cs
dec
pop
push
xor
adc
hlt
clc
adc
xor
adc
je
adc
xor
adc
hlt
clc
adc
xor
adc
je
adc
lea
pop
in
xchg
pop
fcomp
sti
ret
xor
adc
push
xchg
jno
sbb
jns
fist
ss
adc
js
xchg
mov
sbb
pop
mov
pop
jno
mov
loope
leave
jp
cmp
pop
sbb
mov
xchg
jno
je
adc
inc
xchg
popa
jo
cdq
ins
stos
push
mov
sbb
jbe
hlt
cdq
data16
xor
jno
sub
mov
dec
mov
dec
cdq
jne
jge
pop
mov
nop
cld
test
repz
repz
push
xchg
in
test
outs
cmp
xchg
jne
mul
gs
out
jle
std
add
ins
inc
dec
or
ins
and
inc
js
pop
sbb
lods
out
inc
test
inc
push
jbe
push
in
xor
sub
xlat
adc
cld
dec
popf
add
sub
in
out
pop
dec
(bad)
outs
or
mov
cmp
mov
in
rol
push
inc
ror
and
shl
inc
aam
fs
lds
pushf
stos
mov
mov
add
and
rcl
inc
add
mov
push
and
ret
adc
inc
addr16
shl
inc
inc
xor
daa
add
loope
call
mov
inc
inc
adc
or
mov
jb
jo
inc
push
mov
xchg
push
shl
idiv
shl
sub
xor
xor
(bad)
xchg
hlt
rol
aam
not
arpl
ret
xor
popa
out
and
inc
je
jne
add
add
mov
push
add
jo
xchg
mov
inc
aad
ja
xlat
ret
cs
lods
mov
and
inc
inc
aam
mov
fst
xchg
inc
popa
lock
jne
add
xchg
popa
mov
arpl
lock
jb
and
push
inc
hlt
mov
pop
icebp
je
aam
aad
or
sub
mov
and
xchg
cmp
mov
mov
je
inc
and
mov
push
sar
jns
cmp
loopne
mov
add
das
add
test
out
xchg
xchg
shl
sbb
and
jmp
mov
xor
or
dec
nop
movs
movs
je
rol
pop
xchg
push
jno
test
xchg
mov
(bad)
mov
add
adc
push
scas
inc
inc
adc
xchg
je
mov
push
xchg
adc
pop
mov
cmp
jne
out
cmps
jb
xor
jne
cmp
fsub
sti
pusha
and
xor
movs
adc
js
mov
sti
cmp
push
(bad)
(bad)
add
aam
mov
outs
lock
jecxz
cli
dec
jae
add
jae
mov
inc
and
rol
data16
retf
jecxz
sub
push
cmps
push
push
xor
repnz
aad
sti
ins
mov
jne
mov
ja
test
add
add
add
fst
ret
xchg
adc
jp
jae
test
mov
pop
xchg
ret
mov
out
cmc
dec
mov
jecxz
lods
and
push
xchg
mov
jb
push
popf
jnp
ss
pop
xor
idiv
add
push
jge
daa
cmp
push
pop
adc
jmp
inc
push
cs
xchg
push
sub
inc
xlat
imul
sub
aad
in
push
stc
pop
mov
stc
sbb
push
lea
idiv
jge
cwde
pop
mov
inc
rol
sbb
inc
fld
in
and
mov
dec
xor
repz
pop
clc
inc
mov
shr
out
and
push
mov
sub
push
and
add
dec
add
les
jecxz
shr
pop
fild
adc
sbb
inc
or
fistp
in
pusha
dec
inc
adc
add
outs
(bad)
ds
push
xchg
out
das
jge
out
popa
aas
adc
mov
sar
bound
out
loop
dec
jo
cmps
lahf
adc
adc
inc
sub
sub
imul
outs
test
scas
or
mov
fisttp
lods
mov
inc
out
gs
in
and
inc
dec
pusha
int3
arpl
pop
jnp
icebp
push
inc
cmp
aam
out
in
lods
mov
jbe
sub
fstp
lea
fist
mov
and
(bad)
(bad)
test
sti
mov
jl
cmps
sub
xor
js
cmp
xchg
jl
xchg
pop
or
stc
cdq
(bad)
jp
adc
sub
fidiv
aad
jge
jmp
pop
fwait
stc
push
test
jns
jg
jp
lods
fst
and
sub
sbb
int3
sbb
pushf
lahf
std
dec
js
sbb
pop
inc
ja
repnz
je
fimul
js
cmp
clc
fnstsw
stos
xchg
(bad)
lea
jns
jnp
imul
inc
jmp
cld
jne
push
cmp
fwait
stos
mov
je
call
mov
stos
add
xchg
and
jns
jns
jne
sti
or
stos
inc
jp
js
sti
add
dec
cli
stos
push
(bad)
mov
gs
sbb
sti
cwde
cli
stos
in
jp
add
(bad)
add
pop
jne
dec
sub
rcr
(bad)
sbb
js
jle
and
pop
fidiv
cli
mov
sub
cwde
aaa
cmp
std
sti
ror
mov
lds
rcl
dec
pusha
mov
je
mov
mov
dec
mov
scas
shl
push
clc
jmp
or
nop
scas
pop
ret
xor
rcl
scas
pop
cmc
jne
sub
int
sbb
mov
push
push
dec
inc
stos
iret
cmp
mov
dec
push
outs
jge
out
xchg
or
cmp
dec
dec
nop
stos
int
mov
jns
mov
jmp
ins
movs
stc
mov
push
push
cli
xor
in
jmp
mov
aaa
in
dec
mov
retf
retf
mov
mov
(bad)
jmp
ror
xchg
push
pop
movs
dec
cmp
stos
add
xchg
retf
rol
loope
mov
sbb
mov
out
je
(bad)
stc
pop
mov
push
bound
xchg
xchg
mov
jb
cmp
loopne
jmp
sub
imul
stos
mov
jp
out
xor
ins
dec
test
imul
js
xor
loop
mov
lea
inc
xchg
inc
mov
scas
xchg
aas
inc
push
pop
(bad)
ds
mov
push
lahf
jb
fild
or
mov
out
sti
jle
pop
lahf
dec
repnz
es
mov
push
cs
or
aam
cmps
mov
mov
cs
scas
mov
mov
ficomp
outs
pop
mov
mov
jno
jns
ficomp
lahf
sub
cmp
mov
xchg
aad
mov
fcom
(bad)
mov
outs
ss
ins
scas
pop
cmp
jp
pop
loopne
dec
adc
ds
call
dec
fld
int3
les
or
jg
ret
sub
dec
cmp
adc
mov
dec
sub
ss
stos
repnz
in
rcr
mov
xchg
fisttp
mov
into
pop
mov
mov
add
(bad)
(bad)
sti
dec
addr16
repnz
lods
mov
out
scas
mov
arpl
jge
rol
pop
jp
lods
into
jg
jle
xchg
and
(bad)
retf
outs
xchg
fwait
sahf
sbb
stc
push
loopne
popa
xor
jmp
fidivr
pop
or
shl
outs
or
mov
dec
test
mov
xchg
add
je
mov
push
sbb
dec
adc
addr16
(bad)
(bad)
fs
retf
inc
and
pop
mov
jle
add
push
jmp
je
sti
fsub
lods
div
and
xor
xchg
mov
arpl
(bad)
jle
stos
je
cmc
ret
mov
fwait
and
in
add
in
push
xor
enter
outs
push
mov
stos
xchg
xor
push
test
es
(bad)
jle
ficomp
aad
ss
add
stc
mov
lea
push
nop
pop
aaa
add
mov
pusha
lods
test
sbb
add
mov
lds
test
fisub
add
cmc
aad
sub
xchg
add
and
jns
movs
js
(bad)
mov
mov
cdq
call
call
mov
adc
imul
movs
movs
sub
cmps
xor
add
cmp
xchg
enter
xor
push
test
cmp
inc
cmps
fwait
and
int
jmp
sbb
mov
and
add
inc
pusha
(bad)
mov
mov
lods
ret
mov
(bad)
jecxz
jnp
in
jg
in
xor
pushf
sub
dec
pop
(bad)
iret
fst
scas
add
inc
outs
xchg
inc
inc
inc
pop
jge
dec
aad
fsubp
imul
xchg
push
mov
sbb
xor
dec
xchg
adc
sbb
cmp
jg
dec
lock
pop
shl
into
cmps
setae
retf
mov
rcr
xor
nop
fmul
and
adc
or
push
dec
icebp
pop
push
jae
sbb
ret
call
inc
aad
xchg
inc
mov
dec
xor
ss
popa
mov
ins
jl
cmp
xor
retf
imul
mov
(bad)
push
iret
add
call
mov
jmp
push
mov
mov
loop
inc
mov
and
inc
pop
add
lods
outs
and
push
inc
sub
push
dec
xor
mov
pop
outs
jae
adc
jle
mov
xchg
out
push
scas
and
ret
out
arpl
add
mov
mov
into
add
or
pop
mov
int
adc
mov
lods
xchg
std
or
adc
ins
dec
mov
push
sub
push
es
mov
adc
add
jl
xchg
out
mov
xor
mov
adc
mov
or
pop
bound
cmp
and
mov
inc
adc
xor
cmp
scas
adc
xchg
mov
sub
dec
mov
add
cld
dec
push
ds
jae
add
sbb
test
shr
and
xchg
daa
mov
xor
cmp
cs
test
arpl
mov
or
repnz
add
lods
mov
mov
fld
pop
out
jno
popf
out
push
inc
sbb
cmp
mov
jb
daa
fwait
mov
loopne
bswap
jno
push
dec
mov
sub
cs
cmp
rol
int
mov
jno
cdq
das
je
aam
xor
and
lahf
xor
mov
add
xor
mov
and
shl
out
dec
dec
and
or
push
mov
pop
mov
inc
cs
int3
sub
test
sub
add
sub
mov
mov
stos
icebp
mov
pop
shr
fisub
scas
cmp
inc
xor
and
mov
iret
daa
loopne
fisubr
lahf
jbe
cmp
pop
add
aam
lahf
dec
lahf
push
cmp
aas
ss
cmp
fnstcw
shl
dec
adc
in
mov
mov
enter
ss
mov
push
adc
pop
ss
xor
lahf
fnstcw
add
std
(bad)
out
mov
push
lahf
dec
mov
jb
add
sbb
add
in
lahf
cmps
jp
lahf
mov
int3
dec
(bad)
push
cmc
ds
rcr
cs
iret
icebp
aas
cmp
fsub
xor
fcomp
int3
lahf
(bad)
repz
or
or
cmp
pushf
in
xchg
test
ss
sub
ins
push
outs
push
enter
mov
pop
push
adc
jno
xchg
popf
jmp
add
sbb
cmp
inc
xchg
inc
outs
(bad)
sbb
add
test
les
ss
jns
test
xor
popf
jbe
shr
fld
cmps
sbb
dec
movs
leave
inc
scas
push
das
inc
mov
mov
or
or
push
fmul
(bad)
imul
outs
pop
pop
jns
cmp
dec
push
xlat
cmps
retf
scas
std
mov
cmp
pop
jnp
pop
out
mov
std
sbb
sub
fist
out
imul
dec
add
rcr
test
call
ins
sub
push
lds
jmp
outs
ds
sbb
sbb
xlat
test
mov
mov
popa
pop
fsubr
in
cli
cmp
scas
mov
or
or
sbb
sahf
mov
jns
push
or
inc
pushf
inc
mov
cmp
push
inc
js
cli
maxps
int
dec
pop
dec
fidivr
dec
push
or
mov
mov
ds
dec
pop
mov
int
pop
jp
aas
or
lock
fucompp
stc
jns
and
ds
push
pop
xchg
aam
inc
inc
push
sbb
lods
mov
out
mov
mov
jns
mov
test
jbe
aam
mov
xchg
mov
lods
out
rcl
test
mov
loopne
mov
in
push
fidiv
cwde
pop
fst
out
cmps
cmp
fistp
sbb
jb
pop
push
(bad)
jmp
cmp
std
outs
dec
movs
pushf
jno
aaa
pop
scas
divps
push
jp
mov
(bad)
jmp
mov
sbb
cmp
xchg
and
inc
into
push
aad
pop
retfw
and
cs
and
pop
push
pop
jns
xlat
test
sub
push
cmp
mov
dec
mov
int
sub
ss
test
and
push
push
sub
clc
cmc
sbb
cs
in
pop
mov
jl
push
sbb
test
jmp
into
movs
shl
dec
dec
pop
mov
sbb
fidiv
out
in
mov
jns
jb
add
popa
or
dec
mov
mov
cmc
dec
inc
lahf
dec
sbb
jne
aam
and
push
mov
push
sbb
adc
out
call
cmps
(bad)
inc
xor
ss
mov
or
pusha
sbb
pushf
sub
je
enter
in
dec
div
add
scas
dec
dec
pop
addps
adc
or
dec
loop
loopne
push
pop
push
mov
call
ds
sub
mov
inc
imul
sbb
lds
movs
xchg
xchg
mov
push
repz
(bad)
(bad)
sbb
mov
dec
call
ds
fdiv
jno
jae
jbe
not
mov
hlt
or
push
pop
mov
enter
mov
fidiv
sbb
mov
lods
cmp
cmp
hlt
loop
call
adc
mov
sub
sub
test
movs
nop
sub
test
xchg
imul
lahf
adc
ror
cmc
mov
cmp
shl
fcmovnb
push
mov
lahf
jbe
cmp
ins
xor
retf
hlt
shr
sub
adc
jmp
mov
call
call
mov
mov
pop
mov
test
lock
and
mov
hlt
(bad)
in
xchg
ins
pop
jecxz
rcl
mov
pop
cmp
hlt
jmp
and
dec
cmp
fcom
dec
mov
out
idiv
dec
xlat
fisub
mov
mov
mov
js
loope
push
or
jne
je
mov
mov
sub
or
sub
adc
mov
push
xchg
cmp
ret
cdq
dec
xor
push
push
out
sbb
jecxz
ror
mov
retf
inc
test
bound
lea
scas
dec
retf
mov
paddsw
xor
dec
cmovne
fwait
cmova
inc
fs
ret
iret
ds
mov
in
cmp
inc
and
xchg
mov
push
daa
jb
jae
(bad)
cmp
test
adc
fsubr
ds
jle
pushf
mov
xchg
(bad)
in
imul
mov
ret
ins
in
imul
in
inc
rcpps
adc
mov
rol
pop
shl
mov
jmp
hlt
ficom
push
mov
call
repz
push
cdq
aaa
mov
cmc
mov
loop
lea
stos
pop
mov
mov
xor
fmul
adc
jmp
ja
test
pop
cmp
add
pop
out
retf
or
out
mov
xchg
push
hlt
mul
sbb
adc
ror
and
and
sti
jne
movs
push
inc
ins
xchg
jnp
arpl
mov
mov
rcr
jecxz
adc
fsubr
addr16
or
inc
aam
push
or
gs
cwde
xlat
icebp
es
ret
bound
sti
lea
ins
imul
mov
sar
jp
cmps
ds
xchg
or
push
mov
ja
cmps
inc
push
xchg
test
push
mov
hlt
add
into
ficom
ja
xor
ss
loopne
xchg
cmc
icebp
xchg
sar
stc
ds
rcl
ret
inc
add
pop
adc
in
sbb
js
lock
pop
pop
sub
fisttp
(bad)
push
jecxz
pop
pop
scas
or
jecxz
dec
scas
dec
stos
test
out
enter
vpavgw
sub
sub
inc
mov
(bad)
sbb
pop
xchg
cs
movs
push
mov
call
int3
mov
dec
cwde
test
fisttp
push
das
xor
push
daa
xchg
cmc
push
and
sar
mov
movs
jecxz
je
(bad)
jmp
mov
scas
into
das
add
or
loope
call
out
cwde
sbb
push
add
mov
inc
mov
jmp
cmp
jne
mov
ret
sub
cmps
lea
rol
push
lods
or
sbb
daa
sbb
and
test
(bad)
adc
fdiv
ja
lods
ror
repz
repnz
pop
pop
aad
xchg
inc
ss
daa
mov
mov
and
inc
out
ret
or
jbe
aas
sub
int
xor
dec
ds
pushf
ins
dec
jecxz
pop
push
push
enter
adc
xchg
pusha
pushf
add
cmc
sbb
shr
mov
not
call
retf
xor
inc
xchg
js
(bad)
cld
mov
push
into
imul
dec
inc
xchg
cld
mov
das
xchg
in
stc
xor
and
mov
push
in
jne
pop
sahf
cwde
adc
push
mov
mov
xor
out
out
jl
loope
sub
ss
out
inc
pop
add
sahf
or
or
push
pusha
ja
dec
jp
jle
cmp
pop
call
inc
ds
outs
jbe
mov
xchg
rol
scas
(bad)
mov
shl
xchg
in
mov
js
ds
and
pusha
test
out
and
call
out
retf
pop
jne
inc
lods
popa
js
dec
push
cmp
clc
sti
call
rol
or
imul
loopne
xchg
pop
or
sbb
in
xor
push
test
leave
cmp
or
scas
mov
and
cdq
sub
jmp
inc
lods
xchg
imul
push
(bad)
cld
xor
cmp
popf
retf
add
pop
jp
cs
pop
and
(bad)
shr
dec
jns
add
xor
sub
(bad)
loop
pop
sbb
jp
int3
lahf
icebp
inc
add
push
mov
xchg
push
mov
cwde
aad
jl
sbb
jmp
mov
push
fadd
sbb
test
adc
xlat
in
jmp
mov
jecxz
or
repz
repz
jmp
iret
lods
push
xchg
scas
(bad)
das
fsubr
out
jb
movs
push
adc
test
sbb
mov
cs
int3
xchg
push
imul
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
test
push
jne
push
call
cmp
pop
mov
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
je
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
dec
mov
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
jmp
dec
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
mov
jmp
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
push
lea
push
push
lea
push
call
add
test
jne
xor
cmp
jle
dec
js
mov
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
inc
cmp
jl
mov
jmp
add
js
mov
mov
mov
add
jmp
movzx
push
push
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
sub
push
push
push
mov
xor
push
mov
mov
mov
mov
jmp
inc
inc
cmp
je
movzx
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
inc
movzx
cmp
je
mov
cmp
je
movzx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
inc
movzx
cmp
jne
cmp
je
jmp
inc
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
mov
inc
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
mov
test
jne
test
js
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
jmp
shl
push
call
pop
mov
mov
mov
add
cmp
je
push
mov
add
push
call
pop
pop
test
mov
jne
push
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
cmp
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
lea
sub
mov
xor
mov
mov
push
xor
cmp
mov
mov
mov
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
push
mov
and
imul
mov
sar
push
lea
mov
add
mov
add
sar
cmp
mov
mov
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
test
pop
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
test
je
cmp
je
call
and
cmp
mov
mov
mov
jbe
and
jmp
mov
mov
test
jne
mov
xor
cmp
sete
movsx
push
mov
call
test
pop
jne
push
lea
push
push
call
add
cmp
je
jmp
mov
sub
add
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
mov
call
mov
test
je
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
mov
cmp
je
cmp
jne
push
call
cmp
pop
jne
inc
cmp
je
push
pop
push
mov
call
cmp
pop
jne
inc
inc
mov
cmp
jb
jmp
mov
add
test
je
mov
xor
cmp
mov
jne
cmp
mov
jbe
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jne
cmp
mov
jbe
mov
xor
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
mov
inc
inc
inc
inc
mov
mov
inc
inc
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
mov
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
cmp
mov
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
mov
test
jne
mov
xor
cmp
je
push
pop
cmp
jne
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
mov
or
jmp
sub
pop
pop
mov
xor
pop
call
add
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmp
jne
push
call
test
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
cmp
jne
and
jmp
cmp
jae
movzx
mov
mov
and
movzx
mov
jmp
push
lea
call
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
and
cmp
je
mov
and
movzx
movzx
and
leave
ret
push
mov
push
cmp
jne
xor
leave
ret
cmp
jae
movzx
mov
movzx
movzx
and
leave
ret
cmp
jne
push
lea
push
push
push
lea
push
push
push
call
add
push
push
push
call
add
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
xor
cmp
jne
mov
lea
cmp
ja
add
movzx
jmp
mov
cmp
jae
lea
push
push
push
call
add
test
movzx
je
mov
mov
movzx
jmp
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
movzx
je
movzx
cmp
je
mov
and
pop
leave
ret
push
mov
sub
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
push
lea
call
mov
mov
cmp
jne
mov
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
add
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
pop
leave
ret
push
mov
push
push
xor
cmp
jne
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
cmp
ja
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
push
push
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
push
mov
xor
mov
mov
cmp
push
je
mov
push
push
push
push
push
push
call
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
call
test
je
lea
push
push
call
test
pop
pop
jl
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
cmp
je
push
call
pop
jmp
push
push
xor
lea
push
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
add
cmp
jne
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzx
push
push
movzx
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
mov
ret
push
call
xor
inc
ret
push
push
call
xor
mov
push
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmp
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
mov
ret
push
call
test
pop
je
push
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
push
push
push
call
pop
push
call
add
cmp
mov
je
cmp
je
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
or
cmp
jne
mov
test
je
test
jne
mov
mov
dec
movzx
inc
mov
jmp
neg
sbb
and
add
or
mov
or
pop
pop
ret
push
mov
sub
mov
push
mov
push
pop
cmp
mov
mov
jne
call
and
call
mov
or
jmp
push
xor
cmp
jl
cmp
jb
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
and
imul
sar
push
lea
mov
add
mov
test
jne
call
mov
call
mov
jmp
cmp
ja
cmp
mov
je
test
jne
cmp
je
mov
add
sar
mov
movsx
dec
push
pop
je
dec
jne
mov
not
test
je
and
mov
mov
mov
jmp
mov
not
test
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
shr
cmp
mov
jb
mov
push
call
cmp
pop
mov
jne
call
mov
call
mov
or
jmp
push
push
push
push
call
mov
mov
mov
add
mov
mov
add
test
je
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
jne
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
push
lea
push
push
push
mov
push
call
test
je
mov
cmp
jl
cmp
ja
mov
add
lea
test
je
cmp
je
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
dec
cmp
jae
lea
cmp
jne
inc
inc
mov
mov
jmp
mov
jmp
inc
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
mov
sub
cmp
mov
jne
test
je
dec
mov
test
js
inc
jmp
xor
inc
movzx
jmp
cmp
jg
cmp
jb
dec
movzx
inc
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
add
test
je
inc
cmp
mov
jl
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
cdq
push
push
push
push
call
add
mov
sub
shr
push
push
push
push
push
push
call
test
mov
jne
call
push
call
pop
or
mov
cmp
je
push
call
pop
mov
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
add
mov
mov
jmp
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
movzx
cmp
je
cmp
je
mov
inc
inc
inc
inc
mov
jmp
mov
add
cmp
jae
lea
cmp
jne
add
mov
mov
jmp
mov
jmp
add
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
inc
sub
mov
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
mov
cmp
sbb
inc
jne
call
mov
call
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
push
xor
push
mov
mov
mov
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
or
mov
jmp
mov
or
xor
inc
inc
mov
cmp
push
je
lea
mov
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
xor
test
mov
mov
mov
mov
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
xor
jmp
xor
xor
movsx
push
sar
pop
cmp
mov
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
cmp
mov
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
(bad)
(bad)
inc
add
inc
add
aad
add
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
or
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
test
mov
mov
mov
mov
mov
je
inc
xor
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
mov
imul
movzx
push
shr
pop
cmp
mov
je
push
pop
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
and
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
and
and
lea
push
movzx
push
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
test
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
test
mov
je
mov
test
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
and
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
add
mov
mov
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
push
je
mov
mov
mov
jmp
mov
pop
add
mov
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
test
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
test
jg
jl
test
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmp
je
inc
test
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
xor
cmp
je
cmp
jne
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
nop
clc
loopne
add
inc
add
inc
add
fild
loopne
add
loopne
add
inc
add
loope
add
add
ret
push
mov
sub
push
push
lea
call
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
cmp
pop
jne
inc
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
cmp
pop
je
mov
and
leave
ret
push
mov
sub
push
push
lea
call
mov
mov
test
mov
je
mov
mov
mov
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
test
mov
jne
cmp
pop
je
mov
and
leave
ret
fldz
mov
fcomp
fnstsw
test
jp
xor
inc
ret
xor
ret
push
mov
push
push
cmp
push
push
je
lea
push
call
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
mov
mov
add
leave
ret
push
push
push
push
call
add
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
push
lea
mov
call
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
jle
mov
jmp
xor
add
cmp
ja
call
push
jmp
cmp
je
mov
xor
cmp
setg
xor
cmp
sete
mov
add
mov
call
mov
cmp
mov
jne
mov
lea
cmp
jle
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
add
add
cmp
jne
or
jmp
sub
add
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
lea
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
add
test
je
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
mov
jne
or
jmp
xor
cmp
sete
sub
xor
cmp
setg
sub
lea
push
lea
push
push
xor
cmp
sete
xor
cmp
setg
add
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
push
lea
mov
xor
mov
call
cmp
jge
mov
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
mov
add
cmp
mov
ja
call
push
jmp
mov
mov
mov
mov
mov
shr
mov
push
and
xor
cmp
jne
test
jne
mov
cmp
jne
or
jmp
add
push
push
lea
push
push
push
call
add
test
je
cmp
mov
je
mov
and
jmp
cmp
jne
mov
inc
mov
inc
cmp
push
sete
dec
and
add
mov
inc
push
call
test
pop
pop
je
cmp
sete
dec
and
add
mov
mov
jmp
and
xor
or
je
mov
inc
mov
mov
inc
test
sete
dec
and
add
mov
mov
inc
neg
sbb
and
and
xor
add
xor
or
jne
mov
mov
mov
and
inc
or
jne
mov
jmp
mov
jmp
mov
inc
mov
inc
cmp
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
mov
mov
cmp
jle
mov
and
mov
movsx
and
and
call
add
movzx
cmp
jbe
add
mov
sub
mov
mov
shrd
shr
inc
dec
cmp
mov
mov
jge
cmp
jl
mov
and
mov
movsx
and
and
call
cmp
jbe
lea
mov
cmp
je
cmp
jne
mov
dec
jmp
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
cmp
jle
push
push
push
call
add
add
mov
cmp
jne
mov
cmp
mov
sete
dec
and
add
mov
mov
mov
inc
call
xor
and
and
sub
push
pop
sbb
js
jg
cmp
jb
mov
inc
jmp
mov
inc
neg
adc
neg
cmp
mov
mov
jl
mov
jg
cmp
jb
push
push
push
push
call
add
mov
inc
cmp
mov
mov
mov
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
add
mov
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
mov
mov
mov
lea
dec
call
test
jne
call
push
pop
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
je
cmp
jne
xor
cmp
sete
add
add
mov
mov
cmp
mov
jne
mov
lea
mov
xor
inc
test
jg
mov
call
mov
inc
jmp
add
cmp
jle
mov
call
mov
mov
mov
mov
mov
mov
inc
test
jge
neg
cmp
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
jne
or
jmp
xor
cmp
sete
sub
mov
lea
push
mov
add
push
push
xor
cmp
sete
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
mov
dec
mov
xor
cmp
sete
cmp
lea
jne
or
jmp
sub
lea
push
push
push
push
call
add
cmp
je
mov
jmp
mov
dec
cmp
setl
cmp
jl
cmp
jge
cmp
je
mov
inc
test
jne
mov
push
lea
push
push
mov
push
call
add
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
mov
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
pop
ret
cmp
je
cmp
je
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
push
push
push
xor
push
call
add
test
je
push
push
push
push
push
call
add
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld1
fcomp
fnstsw
test
jp
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
push
call
push
call
test
pop
pop
je
call
add
cmp
jne
xor
jmp
call
add
cmp
jne
xor
inc
inc
test
jne
push
push
lea
cmp
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
or
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmp
je
push
mov
test
je
push
call
and
and
and
and
pop
pop
ret
mov
cmp
jne
mov
cmp
push
push
jne
call
test
pop
pop
mov
jne
xor
ret
mov
mov
mov
add
push
push
push
call
add
jmp
push
call
add
test
je
mov
shl
xor
inc
ret
push
push
inc
call
movzx
cmp
pop
je
push
push
call
test
pop
pop
jne
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
xor
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
mov
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
je
jmp
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
pop
pop
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
je
cmp
jne
cmp
je
mov
inc
inc
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
cmp
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
cmp
jne
push
inc
pop
inc
mov
jmp
mov
jmp
movzx
inc
inc
cmp
jne
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
cmp
ja
sub
inc
movzx
movzx
mov
mov
shr
add
mov
and
mov
shl
or
inc
dec
jne
mov
xor
jmp
movzx
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
jmp
push
push
lea
push
xor
push
mov
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
jmp
add
mov
jmp
add
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
mov
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
mov
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
shl
jmp
imul
jmp
test
jne
movzx
push
call
test
pop
je
mov
shl
call
movzx
mov
inc
cmp
movzx
lea
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
push
push
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
test
push
jne
movzx
mov
and
push
call
test
pop
je
mov
pop
ret
movzx
and
sub
pop
ret
cmp
je
jmp
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
mov
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
mov
jmp
mov
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
add
mov
add
mov
mov
cmp
mov
mov
jb
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
mov
je
jmp
mov
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
cmp
pop
pop
je
dec
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
mov
je
cmp
jne
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
mov
test
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
push
pop
cmp
jne
inc
mov
inc
mov
movzx
cmp
je
movzx
inc
inc
cmp
jne
mov
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
mov
cmp
ja
sub
movzx
inc
movzx
mov
mov
and
mov
mov
shl
shr
add
or
inc
dec
jne
and
jmp
movzx
mov
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
mov
jmp
and
push
push
lea
push
push
call
add
cmp
je
mov
test
jle
add
sub
mov
jmp
inc
inc
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
mov
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
shl
jmp
mov
imul
jmp
test
jne
movzx
push
call
test
pop
je
shl
mov
call
mov
movzx
mov
mov
inc
cmp
movzx
lea
mov
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
mov
jmp
mov
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
cmp
jle
and
jmp
mov
call
mov
jmp
push
push
call
mov
jmp
call
cmp
mov
je
and
jmp
mov
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
mov
xor
mov
mov
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
mov
test
push
mov
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
or
jmp
dec
mov
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
mov
jmp
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
xor
inc
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
movzx
push
call
test
pop
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
movsx
push
push
call
pop
or
jmp
push
mov
pop
push
lea
push
lea
push
call
add
cmp
jne
call
mov
jmp
add
js
mov
movzx
add
mov
jmp
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
call
cmp
pop
jne
call
mov
or
pop
ret
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
imul
sar
mov
lea
and
mov
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
cmp
push
mov
je
push
call
test
pop
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
call
mov
cmp
je
mov
cmp
jg
call
mov
jmp
mov
mov
jmp
mov
cmp
je
add
mov
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
lea
push
call
cmp
je
cmp
je
cmp
jge
mov
jmp
call
mov
mov
jmp
cmp
jle
mov
push
push
call
mov
cmp
pop
pop
jne
call
mov
call
mov
jmp
lea
push
push
push
lea
push
call
cmp
je
cmp
jl
call
push
call
pop
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
push
call
pop
and
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jae
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jmp
cmp
jb
or
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
mov
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
cmp
mov
je
mov
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
sub
test
movzx
movzx
mov
mov
jne
or
leave
ret
and
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
push
push
push
or
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
push
push
push
push
mov
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
push
call
push
call
pop
pop
mov
jmp
mov
mov
movzx
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzx
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
push
call
push
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzx
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
push
call
test
je
cmp
ja
movzx
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzx
movzx
jmp
mov
mov
movzx
inc
cmp
jle
inc
inc
cmp
jne
mov
push
push
push
add
push
push
push
mov
push
push
call
add
test
je
mov
mov
push
push
mov
push
add
push
push
inc
push
push
push
push
call
add
test
je
mov
push
push
add
push
push
mov
push
inc
push
push
push
push
call
add
test
je
cmp
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzx
movzx
cmp
jg
lea
jmp
mov
mov
inc
inc
inc
mov
mov
movzx
cmp
jle
mov
inc
inc
cmp
mov
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
pop
mov
jmp
push
call
push
call
push
call
push
call
xor
add
inc
jmp
lea
mov
cmp
je
push
call
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
xor
pop
call
leave
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
cmp
je
mov
test
jne
call
mov
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cdq
sub
mov
mov
sar
lea
push
mov
push
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
test
je
cmp
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
push
call
test
je
lea
push
call
pop
mov
xor
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
mov
sub
cmp
ja
add
movsx
shl
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
call
test
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
mov
and
push
or
push
mov
call
test
jne
xor
jmp
lea
call
cmp
je
cmp
je
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
mov
add
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
xor
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
test
pop
pop
jne
or
mov
jmp
test
jne
mov
test
je
push
lea
push
push
call
add
test
jne
push
or
mov
call
cmp
pop
jne
mov
jmp
mov
test
jne
push
call
test
pop
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
pop
xor
test
pop
jne
or
cmp
mov
je
or
mov
jmp
cmp
je
push
call
cmp
pop
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
cmp
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
call
push
sub
neg
sbb
inc
mov
call
sub
neg
sbb
and
inc
cmp
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
and
ret
push
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
test
jne
and
ret
push
push
push
push
call
mov
mov
xor
add
cmp
jne
or
jmp
lea
cmp
lea
mov
mov
je
cmp
je
push
push
push
call
add
mov
cmp
mov
je
cmp
je
mov
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
mov
cmp
je
cmp
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
test
jne
mov
jmp
mov
call
mov
mov
cmp
je
mov
add
neg
sbb
and
mov
call
mov
test
je
cmp
je
cmp
je
movzx
push
call
test
je
push
push
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
cmp
mov
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
push
push
call
test
je
push
lea
push
push
push
call
test
je
push
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
mov
test
jne
xor
jmp
cmp
push
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
add
cmp
jb
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzx
movzx
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
cmp
mov
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
cmp
mov
jne
call
test
je
push
call
pop
jmp
mov
and
imul
sar
mov
lea
and
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
mov
mov
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
jne
call
mov
call
mov
push
push
push
push
push
call
add
or
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
mov
or
or
mov
call
mov
mov
call
ret
push
call
pop
ret
inc
push
call
test
pop
mov
mov
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
ret
mov
cmp
jne
call
mov
xor
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
pop
ret
mov
and
imul
sar
mov
movzx
and
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
test
pop
pop
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
cmp
mov
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
push
push
push
push
call
add
ret
xor
inc
cmp
jne
xor
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmp
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmp
jb
or
jmp
or
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
push
call
mov
push
call
cmp
pop
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
mov
call
add
or
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
mov
push
push
mov
push
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
push
push
push
mov
push
call
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
test
pop
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
call
test
je
xor
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
mov
push
push
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
push
push
push
push
call
mov
cmp
mov
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
mov
jmp
push
push
push
push
call
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
movzx
lea
inc
cmp
ja
add
movzx
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
call
pop
pop
jmp
push
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
and
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
call
mov
mov
push
push
call
mov
push
call
mov
add
push
push
push
push
push
call
xor
pop
ret
sub
mov
mov
mov
push
push
push
mov
push
xor
push
push
push
push
mov
call
mov
mov
cmp
je
test
je
mov
not
mov
jmp
mov
mov
mov
xor
xor
mov
cmp
je
test
jne
mov
mov
not
mov
call
mov
lea
xor
push
xor
mov
call
mov
mov
cmp
mov
mov
je
test
je
not
mov
mov
jmp
mov
mov
mov
lea
push
xor
call
call
mov
mov
mov
xor
xor
cmp
je
test
jne
mov
mov
not
mov
lea
push
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
mov
mov
mov
mov
and
test
jne
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
mov
xor
mov
add
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
cmp
jle
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
call
pop
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
push
call
add
mov
push
push
push
call
push
push
push
call
push
push
push
push
call
push
push
push
push
call
mov
or
mov
mov
or
mov
push
push
push
call
push
push
push
call
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
push
push
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
mov
or
mov
push
push
push
push
call
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
or
mov
mov
push
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
mov
or
mov
mov
or
mov
push
push
push
push
push
push
push
call
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
call
mov
or
mov
mov
push
mov
push
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
push
call
mov
or
mov
push
call
test
je
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
sub
cmp
jae
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
shl
mov
cmp
jge
mov
and
mov
sub
cmp
jae
mov
cmp
jae
mov
and
and
test
je
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
jbe
mov
shr
mov
mov
and
mov
cmp
ja
mov
jmp
mov
and
add
mov
jmp
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
shl
mov
lea
mov
jmp
mov
shr
mov
mov
and
test
je
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
and
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
add
mov
mov
add
mov
cmp
jne
mov
and
test
je
mov
add
xor
mov
and
shl
mov
mov
add
mov
mov
jmp
mov
add
xor
mov
and
shl
mov
mov
and
and
mov
lea
mov
mov
shl
mov
mov
mov
lea
cmp
jbe
pusha
mov
and
popa
mov
jmp
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
cmp
jae
mov
jmp
mov
add
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
sar
inc
add
cmp
(bad)
add
cmp
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
add
mov
push
mov
push
call
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
lea
mov
mov
xor
mov
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
mov
mov
mov
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
jmp
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
push
mov
mov
push
call
mov
mov
mov
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
push
push
call
mov
add
cmp
jl
cmp
jg
push
push
push
call
add
cmp
jge
push
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jl
pop
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
lea
push
push
push
push
call
push
push
push
mov
call
push
push
push
call
push
push
mov
call
add
test
jg
push
push
call
jmp
push
push
call
add
lea
push
push
mov
call
add
cmp
jge
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
mov
push
lea
push
push
call
add
add
cmp
jl
jne
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
add
lea
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
cmp
jge
push
mov
push
jmp
jmp
lea
mov
mov
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
mov
mov
sub
cmp
je
add
cdq
sub
mov
sar
push
push
push
call
mov
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
mov
push
push
push
call
add
jmp
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
cmp
je
push
push
push
call
push
push
call
lea
push
push
push
mov
call
push
push
push
call
push
push
push
call
mov
add
lea
add
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jle
push
push
call
add
push
push
call
add
jmp
jmp
lea
sub
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jge
push
push
call
add
push
push
call
add
jmp
cmp
jl
push
push
push
call
push
push
push
call
add
jmp
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
mov
mov
mov
mov
sub
sub
add
cmp
jge
sub
lea
mov
mov
mov
jmp
lea
lea
mov
mov
mov
push
push
push
call
add
cmp
jl
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
jle
push
push
push
call
add
push
push
call
push
push
push
call
add
pop
xor
pop
ret
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
sub
mov
xor
mov
push
lea
push
push
call
test
je
cmp
je
lea
push
push
call
add
test
je
lea
push
push
push
push
push
mov
call
add
push
push
call
push
push
call
add
mov
xor
call
add
ret
push
push
call
mov
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
call
push
push
mov
lea
push
push
push
push
push
call
test
je
lea
push
push
call
add
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
call
push
push
call
push
push
call
add
test
je
push
push
call
add
ret
push
push
push
call
push
push
call
push
mov
push
push
mov
call
push
push
call
push
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
add
test
je
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
call
mov
cmp
jne
push
call
mov
test
jne
call
test
mov
jne
pop
pop
pop
lea
pop
ret
mov
mov
push
push
call
test
jne
call
pop
pop
pop
mov
pop
ret
push
push
push
call
add
pop
pop
pop
xor
pop
ret
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
mov
call
mov
add
test
jne
lea
pop
pop
ret
push
call
push
push
call
add
cmp
mov
je
mov
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
push
mov
call
push
push
push
mov
call
push
push
push
call
mov
add
test
jne
push
push
push
call
add
push
push
push
call
add
cmp
mov
jne
lea
add
cmp
je
cmp
je
push
push
call
mov
add
test
jne
mov
lea
mov
add
test
jne
sub
lea
mov
sub
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
call
push
push
mov
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
push
push
call
add
jmp
push
call
add
mov
pop
pop
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
push
call
add
ret
push
mov
push
push
push
push
call
add
mov
call
mov
test
je
push
push
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
add
mov
mov
call
mov
test
je
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
push
mov
mov
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
push
push
call
add
test
jne
pop
pop
ret
push
sub
push
push
push
call
push
push
push
call
add
mov
call
mov
test
je
mov
call
push
mov
mov
call
add
test
je
cmp
je
push
call
add
push
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
push
call
add
cmp
je
push
push
call
add
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
add
pop
mov
pop
ret
int3
push
mov
push
push
push
push
call
push
push
mov
call
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
push
push
call
add
cmp
je
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
push
push
call
add
push
push
call
push
push
push
call
push
push
call
add
cmp
je
push
push
call
add
test
je
push
push
call
add
add
jmp
push
push
call
add
add
jmp
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
pop
je
push
push
push
call
add
push
push
push
call
push
push
call
add
cmp
jne
push
push
call
push
push
call
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
lea
push
push
push
call
add
test
je
lea
push
push
push
call
add
test
je
push
push
call
add
test
je
push
push
call
add
push
push
call
push
push
call
push
push
call
mov
add
xor
call
add
ret
int3
int3
push
mov
cmp
jl
lea
push
push
call
push
push
call
push
push
push
call
add
add
cmp
jle
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
jne
mov
jmp
add
sub
push
push
push
call
push
dec
(bad)
xchg
out
aam
mov
clc
sub
xchg
pop
or
xor
popf
out
inc
ds
in
hlt
int
retf
fs
into
in
mov
mov
jl
std
xor
dec
push
ds
push
gs
xor
je
xor
(bad)
into
pop
push
inc
les
adc
shr
inc
cmp
and
addps
stos
pop
fs
test
js
(bad)
fidiv
add
mov
mov
mov
and
jg
cmps
call
test
leave
xchg
repnz
xor
outs
movs
fwait
dec
fidivr
retf
push
mov
in
fsubr
test
mov
mov
ret
mov
lock
shr
or
xor
jo
std
cli
shl
dec
leave
sahf
lock
(bad)
mov
ja
int3
call
sub
fiadd
jle
push
jno
inc
mov
rcr
push
in
push
enter
inc
dec
(bad)
imul
outs
or
xchg
int
add
sbb
sar
call
cli
mov
mov
in
xor
jo
scas
xchg
scas
or
inc
adc
add
gs
fsubr
je
je
add
cmp
jns
pop
jmp
push
imul
leave
mov
ss
test
sub
fs
inc
jle
push
aam
fnstsw
nop
ds
jecxz
aad
add
lock
je
leave
adc
and
cmp
fisub
dec
les
mov
xchg
adc
(bad)
aad
dec
add
test
popa
imul
movs
dec
sub
push
cdq
outs
and
ds
sbb
cmc
call
inc
jp
push
pop
push
inc
sbb
mov
nop
pop
sub
into
inc
lods
(bad)
fs
retf
inc
mov
jne
jae
dec
cs
mov
sbb
and
mov
jbe
mov
sbb
lea
cwde
or
shl
iret
sahf
and
xchg
shl
cmc
enter
repz
mov
pop
adc
loope
pop
outs
sbb
jns
add
push
mov
mov
xor
mov
inc
push
sbb
outs
jb
pop
mov
sar
mov
inc
add
mov
cmp
push
add
movs
push
mov
mov
add
mov
aas
inc
pop
pop
mov
retf
outs
(bad)
lahf
mov
inc
dec
push
mov
dec
add
pop
pop
adc
pop
jl
dec
ret
mov
mov
das
ja
rol
(bad)
adc
sbb
jne
test
shr
pop
pop
xchg
push
or
out
xchg
inc
sbb
or
push
push
push
icebp
dec
mov
stc
or
or
pop
in
pop
sbb
push
fistp
ss
xor
add
inc
sub
or
lds
inc
push
sahf
call
pusha
scas
in
mov
ret
mov
sbb
into
call
inc
xor
je
hlt
mov
es
or
int3
cmp
cmp
sbb
and
and
dec
scas
xchg
mov
shr
das
jg
out
(bad)
in
out
stos
add
popa
pop
out
pop
js
fstp
mov
or
sbb
(bad)
and
add
or
mov
fld
sbb
push
cmps
je
mov
mov
ret
push
jae
sub
shl
outs
pop
cs
cmps
adc
fnsave
cs
test
ret
adc
jl
fs
jne
push
jp
xor
lods
cwde
sbb
dec
dec
ss
mov
mov
retf
cmp
movs
xchg
xchg
or
xchg
pop
xor
leave
lds
jb
retf
pop
and
push
in
outs
inc
xor
or
call
add
lods
push
inc
ss
push
cmp
stc
push
out
cdq
mov
mov
pop
fucomp
push
cs
in
jo
cmp
out
pop
(bad)
test
jb
loop
pop
loope
cdq
test
and
jg
mov
push
jl
mov
retf
ss
jb
mov
adc
outs
cmps
cdq
jae
push
mov
pop
fisub
ja
(bad)
mov
loope
test
test
rcr
or
push
push
inc
int3
sub
scas
xchg
jb
(bad)
and
test
aas
cmc
xor
mov
iret
mov
es
pusha
xor
in
mov
and
aam
das
js
or
jl
shl
iret
add
jbe
pushf
sbb
jns
xor
pop
jb
mov
inc
imul
in
or
fdivr
daa
xlat
jl
jbe
and
mov
mov
jno
pop
dec
sub
or
loop
mov
and
adc
mov
sbb
xchg
loop
mov
xchg
dec
cmp
jle
xchg
pop
scas
jge
push
sbb
outs
mov
sahf
xchg
pop
jge
mov
out
fsubr
sbb
sub
mov
mov
icebp
mov
mov
adc
add
imul
mov
scas
pop
movs
imul
dec
(bad)
cmc
ins
jmp
stos
sub
or
and
add
imul
push
push
rol
ins
retf
(bad)
retf
push
cmp
jg
outs
mov
into
fs
ror
xor
clc
loopne
jae
push
retf
ds
xchg
cmc
adc
stos
call
das
fimul
and
dec
lods
jb
sbb
sar
(bad)
stos
jae
mov
sbb
(bad)
push
inc
int3
movs
jl
xchg
jb
das
lods
inc
cdq
aam
test
push
mov
push
mul
sbb
mov
outs
imul
clc
adc
fs
push
(bad)
xchg
popa
vmread
dec
sbb
inc
push
shr
(bad)
in
cli
xchg
and
hlt
mov
int3
cmp
mov
inc
and
fistp
xor
cmp
push
not
(bad)
scas
pop
cld
les
jmp
pop
fimul
jl
inc
jecxz
push
pop
aad
xor
mov
push
fucomp
dec
mov
dec
pop
xchg
test
mov
test
dec
inc
pop
jnp
and
imul
mov
stos
ss
aam
push
dec
ins
les
stos
mov
mov
fwait
mov
pop
stos
push
out
jnp
dec
and
ds
(bad)
cmp
pushf
and
pop
aas
das
fs
je
imul
pop
cmp
sub
in
push
aaa
out
mov
rcl
add
enter
xchg
addr16
add
aas
(bad)
out
loop
jl
int3
xchg
aam
lea
pop
mov
bound
inc
cs
(bad)
sbb
and
xor
add
inc
rol
inc
jle
push
inc
or
ds
adc
cli
inc
int3
mov
cmp
retf
(bad)
cmc
lock
jg
or
jbe
ret
gs
inc
add
xor
cmps
loopne
inc
fiadd
or
jp
ins
xchg
repz
(bad)
outs
(bad)
sub
inc
mov
jmp
cmp
in
push
mov
mov
mov
pop
add
jge
out
add
cmp
ja
cmp
add
cmp
inc
neg
jo
les
cmp
pop
and
mov
in
push
dec
xchg
add
movs
xchg
inc
repz
pop
stos
mov
xor
mov
jns
popa
push
xchg
jb
pop
cmp
hlt
fnstsw
jmp
jle
mov
test
int3
test
jne
jne
mov
pop
loop
shr
bound
or
sub
push
retf
sub
cs
push
fs
loopne
int3
ins
loop
outs
jmp
push
add
(bad)
cmp
fnstsw
and
(bad)
mov
xchg
test
psrad
(bad)
or
xor
and
loopne
mov
lods
push
xchg
fsubp
mov
imul
mov
arpl
mov
add
adc
loope
repnz
jae
sti
test
jo
or
mov
push
scas
ret
cwde
mov
jns
mov
mov
pushf
pusha
inc
mov
adc
and
scas
push
jecxz
inc
stc
jo
jbe
clc
jmp
dec
xchg
(bad)
mov
sub
mov
pop
or
add
jmp
cmc
fld
mov
clc
fisttp
fucomip
les
push
sbb
cmc
idiv
mov
dec
(bad)
cli
fwait
imul
jnp
jmp
mov
in
add
adc
xor
(bad)
int
mov
adc
ss
push
gs
mov
sbb
jbe
add
adc
inc
mov
pushf
jns
iret
cld
fild
gs
and
stc
call
jno
sub
mov
push
pop
test
inc
pop
call
cmp
cmp
mov
not
mov
sbb
mov
clc
setno
sub
js
into
mov
or
fwait
scas
movs
and
xchg
sub
jle
dec
mov
scas
shl
mov
push
mov
out
mov
add
dec
sub
adc
aad
jbe
aad
jle
add
sub
mov
(bad)
aam
mov
push
in
inc
cmovae
mov
or
jnp
jmp
cmp
aas
xchg
lea
dec
leave
sar
call
or
(bad)
sub
xlat
cmp
xchg
inc
sahf
lock
jle
je
pop
loopne
ins
fstp
jmp
jecxz
jle
mov
sbb
and
xchg
cmp
jne
cmp
mov
or
push
dec
inc
pushf
popf
sbb
mov
jmp
push
les
add
sar
xchg
data16
out
jmp
mov
hlt
inc
push
adc
mov
ds
les
jl
loop
xlat
jmp
xor
inc
mov
aad
mov
scas
pop
cwde
outs
pop
sahf
lock
push
mov
out
or
push
push
in
jp
aas
mov
cli
push
das
and
lods
pushf
fcomip
mov
adc
(bad)
push
gs
push
dec
imul
mov
inc
push
pop
sub
add
push
enter
cli
movs
dec
movs
ficomp
pushf
aad
add
fs
pusha
jp
push
xor
call
aas
jge
xor
cld
or
fisttp
lods
sbb
movs
xor
call
ret
xlat
cwde
inc
and
add
cmp
jge
adc
mov
jbe
ins
fisub
and
clc
popf
test
xor
or
dec
cmp
and
dec
outs
sub
push
shl
(bad)
fidiv
out
sbb
sub
mov
daa
pop
jp
and
cmp
aas
shr
and
xchg
jb
lahf
out
jae
pop
and
mov
jge
retf
mov
jg
adc
(bad)
xor
test
inc
js
lods
(bad)
and
mov
out
push
jb
(bad)
sub
sahf
aas
xlat
jns
add
(bad)
mov
push
gs
lea
mov
and
iret
fild
cmp
pop
je
xor
inc
adc
push
sbb
icebp
popw
cld
pop
push
outs
add
mov
ffreep
mov
xchg
jg
idiv
in
aas
std
xlat
cmps
push
or
imul
test
xchg
not
aam
xchg
sbb
and
in
pop
scas
ds
pop
daa
and
adc
and
jne
mov
mov
(bad)
fidiv
push
ficomp
xor
aas
push
push
push
outs
cmp
stos
inc
cdq
(bad)
imul
add
jg
out
sub
ret
dec
into
outs
push
jae
xchg
adc
push
aas
icebp
loop
lock
mov
(bad)
jmp
xchg
div
fldcw
ins
loop
in
sub
retf
jle
in
jmp
loopne
lds
and
or
or
ficom
fstp
and
pop
and
xchg
aam
out
(bad)
pop
lea
sahf
add
into
ja
dec
xor
add
xchg
sbb
xchg
test
out
(bad)
in
mov
mov
int3
pop
int3
lods
(bad)
jb
mov
mov
push
outs
xchg
push
add
xor
mov
add
add
stos
mov
aam
lds
xchg
or
out
or
pop
pusha
std
or
mov
aam
cmc
cmp
pop
hlt
(bad)
dec
popf
je
jae
pop
mov
push
popf
xlat
adc
jl
ror
(bad)
fnstsw
push
out
adc
push
out
int3
mov
jno
add
stos
push
hlt
ins
mov
je
in
and
sbb
xchg
push
push
loopne
lahf
nop
adc
rol
inc
in
inc
xchg
or
add
jp
or
fldenv
(bad)
repnz
aaa
in
inc
std
dec
out
xchg
jmp
or
jl
cmp
pop
mov
imul
add
and
(bad)
mov
imul
in
(bad)
pop
lea
fcmove
add
mov
(bad)
adc
test
pop
fsubr
mov
cmc
push
test
pusha
dec
data16
in
in
mov
test
loop
add
dec
cs
xor
iret
adc
dec
sub
dec
adc
push
shl
cmp
in
inc
lock
mov
je
or
lods
fwait
stc
mov
inc
mov
push
rcr
sub
jae
repnz
je
sub
test
fidiv
sbb
cmp
pop
fist
aam
enter
retf
out
dec
sub
retf
sub
enter
cmp
test
(bad)
clc
(bad)
shl
in
dec
hlt
and
xor
aad
rcl
(bad)
cmc
xchg
mov
or
arpl
jle
imul
aam
mov
xchg
in
sub
(bad)
test
add
xor
xlat
dec
jecxz
in
add
sbb
mov
movs
ror
xchg
xor
and
xchg
cli
pop
pop
cld
pop
sub
pusha
(bad)
adc
sahf
in
inc
inc
jo
or
and
push
lock
push
ret
int
jb
add
loope
jl
cmps
push
jbe
fimul
outs
nop
movntq
cdq
xchg
in
sar
daa
aam
in
fld
inc
cmp
repnz
jg
fild
jb
adc
(bad)
js
popa
pop
sbb
sbb
loopne
pop
pop
(bad)
test
aam
pusha
mov
push
jg
movs
nop
call
and
test
jmp
scas
add
sub
adc
fld1
test
(bad)
cmps
fs
jmp
and
mov
outs
fdiv
push
jecxz
fist
lock
mov
jnp
hlt
push
sub
sub
fiadd
push
xor
cdq
shr
jmp
mov
or
push
das
mov
pop
sbb
jo
pop
mov
fimul
scas
adc
(bad)
push
lahf
mov
jo
pop
test
idiv
gs
mov
cmc
outs
xor
or
or
push
popf
rcr
xchg
or
jae
cmp
and
es
jg
fsubr
xor
movs
call
pop
(bad)
fstp
inc
inc
mov
in
and
lea
xor
sbb
int3
mov
inc
jmp
or
mov
enter
dec
pushf
out
jg
leave
sub
pop
inc
mov
rcl
clc
in
fsubr
call
push
adc
fld
pushf
outs
test
xor
ds
add
or
sbb
rol
xchg
mov
adc
push
mov
addr16
test
into
je
shl
mov
mov
shl
ins
call
jge
iret
or
mov
fcom
je
mov
jns
cmp
mov
lds
iret
fbstp
pop
sub
mov
jne
cld
jg
jo
cmps
(bad)
iret
push
enter
int3
cmp
test
mov
push
scas
stos
sub
sub
shl
mov
hlt
mov
cmp
(bad)
clc
outs
push
ficomp
mov
xchg
sub
push
int3
adc
in
jnp
ret
cmc
mov
retf
jbe
gs
cmc
mov
pop
pop
cmps
call
not
jle
fwait
popa
out
fild
xchg
pusha
jg
stc
fidiv
out
pop
and
jno
fldcw
jne
hlt
or
sbb
sub
sbb
ins
mov
fs
or
sub
es
cs
dec
xchg
aaa
xor
loope
push
pusha
pop
jmp
push
xor
mov
hlt
mov
mov
ror
cmp
sub
mov
sbb
push
adc
dec
sub
dec
mov
pop
xchg
add
pop
loope
les
mov
mov
mov
sbb
retf
or
nop
stos
ror
ds
test
sbb
es
in
sti
push
in
mov
xchg
push
test
clc
je
add
sub
ss
inc
or
iret
shr
(bad)
or
jmp
jle
xlat
or
xor
or
movs
jmp
pop
adc
test
into
jbe
fbstp
sub
addr16
js
jne
(bad)
pop
xor
xor
pop
aam
fnstcw
imul
mov
das
int
movs
sub
outs
aas
pop
jno
mov
scas
pop
mov
mov
push
cmp
inc
jmp
cwde
outs
lods
cdq
sbb
inc
mov
lods
jp
std
sysenter
dec
xchg
mov
sbb
inc
adc
lods
je
sbb
out
movs
int
xchg
add
out
and
test
cmp
fisubr
push
daa
sbb
std
push
(bad)
rol
cmp
cmps
pop
pop
loop
jle
mov
(bad)
aaa
sbb
mov
stc
and
(bad)
mov
mov
(bad)
data16
out
in
ja
inc
outs
or
gs
xchg
bound
data16
or
inc
rcl
sar
mov
xchg
mov
jp
(bad)
pop
out
out
mov
dec
push
call
push
je
inc
jmp
jecxz
jo
movs
mov
into
mov
cmp
add
dec
xchg
add
(bad)
outs
push
cmp
sub
inc
mov
mov
cmps
or
cdq
scas
mov
mov
xor
pop
and
(bad)
std
out
jb
xchg
pop
sar
jne
and
(bad)
push
movs
dec
jmp
div
jnp
and
or
inc
mov
ds
std
dec
mov
inc
idiv
push
mov
fidiv
dec
mov
or
scas
xlat
xchg
inc
rcl
and
lds
ja
jmp
rdpmc
je
rcl
jo
and
not
and
adc
jecxz
adc
pusha
inc
movs
add
mov
iret
(bad)
(bad)
xchg
aas
inc
or
pop
and
pop
jnp
mov
ja
mov
cmp
mov
inc
das
(bad)
outs
cdq
dec
jg
or
pop
mov
xchg
inc
jae
adc
jae
pop
das
addr16
adc
movs
dec
jne
jb
(bad)
ss
iret
mov
xor
pop
xor
fisub
es
outs
ja
lahf
nop
xor
inc
outs
mov
int
retf
je
mov
outs
aad
jne
es
cmp
sbb
addr16
retf
ds
(bad)
scas
pushf
fimul
adc
fst
dec
loope
je
mov
and
and
aad
inc
lahf
pushf
mov
xchg
pop
hlt
push
outs
cmps
or
mov
jl
mov
jno
mov
jge
xchg
pop
mov
jle
sbb
mov
mov
sub
mov
or
cs
xor
sar
dec
test
das
push
popa
xchg
dec
fld
lock
out
test
cdq
jno
cld
mov
ss
mov
(bad)
in
fst
jg
outs
xchg
dec
mov
cmp
in
xor
pop
cld
jle
jl
sub
repz
and
mov
dec
ds
mov
(bad)
mov
sub
cld
mov
pop
jl
mov
out
sbb
rol
jne
mov
call
sbb
aad
xchg
es
cwde
or
ja
and
movs
fist
adc
lods
cmps
rcl
cld
leave
test
pop
inc
outs
or
pop
sbb
js
and
mov
ret
mov
sbb
or
(bad)
mov
pop
test
jmp
repz
mov
lahf
xor
(bad)
lods
jl
iret
mov
mov
out
jmp
sub
sbb
mov
jnp
inc
cmp
xor
mov
mov
iret
adc
and
pop
fld
mov
xchg
ds
push
jle
(bad)
dec
sub
push
mov
test
movs
out
mov
(bad)
or
inc
mov
xchg
and
xor
lods
stos
xor
cmp
xor
xchg
call
aad
mov
leave
mov
pop
fs
jle
xchg
test
daa
dec
inc
and
loopne
test
and
cld
push
xchg
aad
cmp
ss
(bad)
imul
sbb
adc
cmps
xor
fsubr
sub
dec
loope
mov
push
xor
add
ins
xor
push
dec
add
and
mov
xchg
pushf
movs
in
mov
xchg
cmps
push
call
mov
cmps
pop
xor
call
lock
adc
xchg
cs
xchg
xchg
and
add
mov
aam
fidivr
mov
pop
in
push
and
cld
retf
mov
inc
(bad)
xor
scas
xchg
or
sub
mov
sub
sahf
inc
jg
pinsrw
fwait
imul
aas
fbstp
fdivr
pushf
loope
pop
push
mov
(bad)
test
pop
inc
mov
add
popf
adc
out
imul
jg
mov
(bad)
and
test
sub
jbe
shl
daa
sub
movs
cmp
or
or
pushf
aad
mov
jmp
scas
movs
add
add
xor
test
stc
dec
push
scas
arpl
psrld
adc
push
add
scas
and
test
pop
daa
arpl
rcr
les
push
push
xor
mov
push
mov
mov
(bad)
pushf
nop
push
ins
scas
jne
int3
cmp
sub
popf
stos
mov
push
test
retf
out
pop
jge
popf
lea
push
(bad)
xor
aad
(bad)
jp
hlt
test
jg
out
xchg
adc
sti
push
or
cmp
gs
ss
icebp
js
push
scas
out
add
inc
sbb
pop
les
sub
add
or
fxam
cmp
iretw
outs
mov
data16
(bad)
add
aaa
pop
fwait
js
push
fucomp
xor
cmps
inc
mov
and
sbb
addr16
jl
daa
(bad)
inc
jg
xlat
and
inc
rcl
adc
scas
nop
mov
(bad)
cmp
mov
mov
add
inc
jae
push
push
sbb
(bad)
cmp
inc
dec
fadd
xor
nop
scas
iret
call
aam
scas
lds
xchg
mov
retf
mov
call
retf
scas
adc
shl
addr16
bound
mov
popa
sbb
ins
cli
int
jl
lods
mov
(bad)
(bad)
push
mov
or
cmp
xor
lahf
test
jg
sbb
push
mov
(bad)
ret
add
mov
(bad)
sub
cmps
jl
jle
pop
inc
outs
call
xor
mov
or
not
cmp
pop
in
push
sbb
and
push
aaa
sbb
push
add
sahf
je
xchg
mov
cmp
fadd
call
outs
xlat
fdivp
mov
pop
mov
pop
sub
outs
dec
popa
mov
lea
loop
fistp
jl
retf
mov
mov
xchg
ins
cmp
iret
mov
popa
adc
sub
hlt
mov
test
cmp
xor
push
mov
js
push
stos
push
hlt
das
cmp
push
sub
fiadd
mov
ja
sbb
adc
jmp
and
dec
inc
out
or
rcr
movs
ficom
push
and
mov
mov
(bad)
popf
test
pop
js
jno
push
addr16
jge
xor
ins
test
test
or
loope
pushf
push
into
sbb
(bad)
pop
imul
loopne
dec
pop
shr
and
fmul
add
lods
ins
sub
push
dec
iret
(bad)
(bad)
jae
mov
cs
cs
sar
hlt
dec
mov
push
(bad)
push
inc
inc
mov
jle
repz
std
mov
out
and
test
sti
mov
call
xchg
lds
ja
pushf
enter
mov
test
pop
jg
popf
pop
xchg
mov
inc
cmc
pop
fild
test
mov
imul
rcr
pop
sub
aas
sub
mov
fbld
inc
int3
push
mov
xchg
fs
jmp
jp
mov
jle
mov
xchg
jl
jnp
in
jmp
lods
imul
stos
gs
aaa
ret
sbb
sbb
addr16
inc
scas
inc
cmp
adc
loop
repnz
xchg
jbe
(bad)
jp
pop
cmp
call
and
pusha
mov
(bad)
pop
mov
scas
adc
iret
mov
inc
sahf
mov
loop
retf
cdq
out
mov
popf
ficom
mov
xchg
jb
or
shl
(bad)
adc
fcmovb
sub
push
xchg
int3
pop
arpl
dec
loopne
mov
call
shl
mov
push
mov
add
ss
daa
aam
push
popf
jmp
ins
push
ss
push
add
mov
(bad)
mov
adc
pop
dec
daa
test
test
xor
adc
cmps
daa
and
xchg
stos
jg
scas
stc
aam
adc
dec
dec
lods
mov
mov
outs
or
sbb
jge
ret
push
les
jne
mov
pop
push
inc
or
ds
sub
add
xchg
cdq
sub
push
mov
daa
loope
cmps
pop
xchg
int3
pop
cdq
test
clc
fwait
mov
xchg
mov
outs
xchg
jl
in
int3
movs
idiv
dec
neg
inc
iret
adc
test
into
and
lea
pusha
popf
jbe
and
in
sbb
adc
jbe
mov
sub
dec
ins
push
leave
cs
or
fbstp
inc
sbb
out
es
jns
mov
pop
in
out
jae
cmp
pop
lods
in
sub
pop
test
je
or
mov
movs
pop
into
push
fist
div
(bad)
dec
and
dec
(bad)
xor
fstp
jns
mov
mov
loop
mov
jl
sub
retf
dec
cmp
xchg
pop
jnp
xchg
jns
sbb
inc
dec
pop
or
cmp
adc
mov
mov
ret
pop
cmps
stos
and
jp
jbe
pop
inc
imul
push
lock
rol
cli
pusha
fisub
ja
clc
or
cmp
sub
jns
pop
mov
and
push
mov
lahf
xor
std
pusha
int
popa
cwde
add
hlt
dec
in
cmp
adc
aam
dec
push
test
inc
or
(bad)
aad
adc
daa
xlat
ss
in
mov
inc
add
xchg
or
adc
mov
mov
test
push
icebp
sbb
cmp
es
fdivp
push
cli
xchg
and
mov
mov
int3
shr
mov
xchg
in
ret
push
xchg
mov
outs
cmp
jmp
cmp
mov
xor
pusha
fs
mov
aaa
stos
pop
xchg
push
mov
aam
test
push
scas
push
pop
xchg
inc
cmp
jl
mov
fcmovbe
clc
jae
icebp
cmp
sub
and
push
dec
ds
pop
in
push
cmps
sbb
les
pop
or
daa
push
fsubp
push
ror
in
out
xchg
inc
jmp
xlat
fmul
(bad)
je
xchg
adc
mov
xor
pop
cmp
daa
mov
mov
repnz
push
in
dec
ror
xchg
dec
push
stc
fucom
inc
cmp
mov
dec
aaa
pop
xchg
(bad)
mov
inc
add
stos
adc
dec
in
dec
lods
adc
push
mov
scas
fisub
and
mov
inc
data16
push
fisubr
mov
jo
lds
call
in
add
call
pop
and
jno
sub
pop
popf
or
sub
or
sar
dec
std
ins
pop
ss
mov
inc
mov
lock
outs
lods
adc
cwde
loope
push
add
hlt
adc
cli
cmps
xchg
xchg
scas
mov
push
test
mov
mov
sbb
push
das
in
not
xor
aas
js
je
jb
out
mov
dec
test
and
lods
fsubrp
sub
or
mov
xlat
mov
adc
mov
sbb
inc
jp
adc
add
jno
push
xor
and
call
test
adc
xchg
inc
in
jo
fidivr
inc
push
sub
pop
xchg
push
and
cmp
sbb
cmp
push
mov
imul
cld
nop
call
data16
inc
cmps
out
inc
jl
mov
jge
les
cmps
ret
xor
rcr
aad
data16
mov
cmps
xchg
arpl
(bad)
mov
mov
ins
in
ret
aam
inc
ror
jmp
movs
std
mov
dec
xchg
inc
push
lods
stc
push
jp
imul
shl
data16
push
and
mov
cmp
mov
cs
in
sbb
push
ret
xor
xor
sub
push
ret
mov
aam
clc
nop
adc
(bad)
push
das
clc
adc
pushf
push
or
in
mov
out
jne
popf
ret
and
inc
jb
cmp
test
je
xor
dec
std
es
xchg
xchg
test
rcl
sahf
call
cs
fistp
mov
and
pushw
mov
sub
inc
mov
add
cmc
sets
xchg
outs
das
call
adc
stos
push
push
pop
jo
inc
lock
xchg
pop
movs
mov
out
jmp
mov
bound
push
add
pop
ret
push
add
leave
into
adc
retf
pop
cs
mov
cmp
jae
bound
push
mov
cmp
jle
push
push
sub
push
xlat
sbb
test
mov
mov
pop
(bad)
imul
stc
popf
mov
mov
mov
lock
xchg
cmp
mov
ja
fs
cmp
test
pop
mov
pop
or
mov
in
neg
add
jb
jle
sar
mov
add
(bad)
out
adc
pop
and
inc
mov
xchg
xchg
dec
mov
ja
cmp
retf
(bad)
xchg
pop
jnp
mov
mov
mov
adc
pop
nop
dec
lds
(bad)
repz
push
dec
lds
or
cmp
mov
dec
push
or
cmp
in
mov
pop
les
iret
popf
jbe
push
scas
test
aaa
test
dec
out
pop
hlt
push
jns
das
adc
ins
inc
pop
rol
cmp
retf
dec
adc
add
cmp
push
add
retf
dec
ret
or
xchg
lds
sbb
call
pop
(bad)
scas
(bad)
jmp
sahf
sbb
sub
movs
ds
mov
test
(bad)
jmp
jbe
mov
mov
xor
(bad)
cwde
xor
cmp
and
data16
jns
in
push
and
sub
test
movs
hlt
repz
(bad)
shl
or
push
jno
iret
cmp
cmps
gs
lock
(bad)
fwait
and
jmp
push
mov
pop
(bad)
cmp
push
ds
xchg
pop
add
sub
sbb
and
sbb
mov
mov
mov
xchg
mov
xchg
mov
fld
sbb
cld
adc
jae
inc
pop
addr16
outs
fist
xor
cdq
popa
adc
ds
jmp
leave
mov
les
cmps
push
fisub
jns
es
dec
mov
movs
jmp
out
aam
iret
stos
xchg
scas
dec
cmps
icebp
popf
sub
fnsave
dec
inc
mov
inc
cmp
(bad)
fidivr
push
mov
test
in
scas
movs
inc
ror
es
and
xor
pusha
push
mov
push
mov
cmp
and
ins
iret
adc
aad
gs
jge
(bad)
cli
add
out
movs
xor
cmps
cmpps
jmp
inc
inc
(bad)
aaa
fmul
ins
mov
je
leave
cmps
xor
or
push
push
(bad)
cld
in
pop
lahf
jmp
enter
das
xchg
sub
lods
dec
push
lahf
int3
sahf
or
jne
pop
out
jns
sbb
(bad)
es
pop
arpl
les
mov
add
ret
test
aas
ins
(bad)
lock
and
pushf
bound
mov
clc
mov
cmc
lods
xor
dec
adc
xor
popf
dec
movs
(bad)
pop
out
push
or
push
call
sbb
imul
out
out
pop
(bad)
adc
popa
xchg
add
cmc
and
in
in
outs
xor
cmp
and
data16
push
mov
fisubr
mov
scas
or
punpckhbw
stos
hlt
xchg
lock
mov
scas
ror
movs
inc
xor
sub
xchg
pop
push
pop
(bad)
jle
(bad)
and
out
daa
jecxz
mov
data16
push
out
xchg
or
outs
and
inc
jg
add
enter
jl
cs
movs
repz
icebp
xor
dec
pop
movs
adc
imul
fst
dec
jmp
mov
jae
push
sub
xchg
sbb
fild
dec
int3
adc
dec
adc
add
fs
pop
or
psubd
(bad)
test
sbb
xchg
xchg
pop
sub
inc
(bad)
in
aam
outs
inc
ja
inc
lods
int3
mov
lods
cmp
pop
pop
and
pop
mov
rol
sub
test
push
or
adc
gs
mov
add
mov
ror
pop
aam
in
(bad)
and
mov
fisub
(bad)
bound
xlat
cmps
dec
cwde
ss
(bad)
neg
sub
sbb
fcomp
pop
sahf
cmc
inc
push
(bad)
out
dec
int3
sub
mov
mov
mov
cmp
pushfw
pop
imul
fisub
sbb
aad
xchg
xchg
lock
adc
xchg
adc
adc
shl
push
outs
mov
leave
dec
mov
or
inc
mov
inc
mov
cmp
in
push
outs
push
mov
gs
or
push
mov
cdq
pop
add
add
fsubp
pop
jg
lock
lods
cld
jns
retf
sub
pop
pushw
mov
in
imul
fisttp
scas
gs
mov
sahf
in
and
mov
rcl
je
inc
push
xchg
dec
(bad)
jmp
and
sub
fisub
call
pushf
fs
jmp
adc
mov
xchg
jecxz
mov
mov
movs
into
add
hlt
cmp
arpl
outs
mov
movs
dec
mov
xor
arpl
sar
mov
lods
mov
mov
fs
push
lock
add
or
jle
sahf
cmp
pop
push
and
retf
inc
jo
and
cmp
jp
mov
and
mov
xor
arpl
aas
lods
fsubp
and
arpl
cwde
ins
aam
sysexit
mov
rcl
adc
push
out
cmc
nop
dec
add
sbb
mov
adc
movq
ins
and
dec
int3
and
in
bnd
out
pop
fisubr
aad
je
jle
fcmove
xchg
jl
xor
xchg
fwait
dec
dec
jl
cld
in
fcomp
les
fild
loopne
mov
lahf
add
aam
mov
push
(bad)
xor
pop
adc
popa
xchg
cmp
push
daa
adc
cmp
mov
add
add
cmp
(bad)
push
ds
xchg
(bad)
push
fimul
push
fs
mov
push
retf
sbb
aaa
bswap
mov
test
test
push
fdiv
and
pop
xchg
xor
and
mov
retf
div
pop
and
pop
cmps
lahf
fisttp
aas
inc
ror
push
dec
mov
sub
mov
retf
cs
ds
fdivr
in
xchg
sahf
mov
cmps
adc
pop
test
(bad)
daa
mov
mov
movs
pop
lods
cli
xlat
inc
xchg
add
push
mov
push
sahf
pusha
sub
inc
fisub
sbb
lods
mov
jp
mov
jo
lock
push
xor
arpl
mov
pop
pop
out
or
xchg
or
fwait
stc
out
sti
bound
punpckldq
(bad)
and
and
fistp
or
in
sub
or
iret
imul
pusha
scas
mov
sbb
outs
gs
add
jnp
outs
xor
mov
iret
xor
hlt
cmps
and
cdq
pusha
sar
push
hlt
push
push
push
dec
and
jo
arpl
adc
out
xor
jl
test
movs
addr16
xor
lds
call
sti
push
push
mov
mov
scas
dec
sub
test
(bad)
xor
cmc
cs
xor
mov
mov
sub
ins
lea
adc
neg
aad
push
push
jg
out
jmp
fiadd
jmp
cld
cld
mov
retf
jl
xchg
stos
out
and
push
and
(bad)
movs
adc
pushf
fnsave
jmp
and
sahf
sbb
jp
adc
into
xlat
mov
mov
add
aas
loope
popa
aaa
jne
aam
fstp
rcr
mov
mov
dec
dec
and
fild
xor
cmp
lock
xor
cmps
shl
arpl
aas
pop
add
sub
jp
mov
mov
pop
jl
pop
jge
adc
je
stos
cmp
jbe
adc
push
popa
and
(bad)
lea
fidiv
ins
sahf
inc
push
stc
add
cli
sbb
xchg
es
inc
xor
ror
loop
loop
add
adc
hlt
push
cmp
push
gs
inc
ret
cs
std
cmp
cmp
or
ds
cmp
in
ja
out
xor
or
push
jp
outs
enter
pop
xor
popf
aas
hlt
push
xor
mov
lods
aas
int
xchg
jle
push
sub
inc
and
fnstcw
ror
push
ins
cmp
jmp
sahf
jno
std
mov
pop
lea
leave
aas
icebp
(bad)
clc
int3
pop
mul
adc
xchg
pop
sahf
cmp
aad
cld
sahf
cmp
inc
cmp
ja
std
sar
test
push
cmp
sub
inc
cmp
or
outs
add
push
out
fmul
stos
movs
call
mov
sub
mov
pop
dec
dec
xor
mov
lahf
mov
mov
adc
cmps
inc
iret
xor
sbb
ds
lock
arpl
sbb
jg
clc
inc
jo
mov
xchg
xor
or
fwait
dec
sub
dec
adc
pop
sbb
mov
rcr
jmp
and
jae
xor
or
mov
jbe
sub
mov
dec
xor
movs
or
cs
out
stos
cmps
lahf
out
in
pop
ficom
inc
push
jmp
call
in
push
pop
xchg
xchg
fdivr
data16
and
inc
ja
fdiv
cdq
inc
scas
sar
cmc
mov
aad
je
add
in
je
jbe
pop
xchg
pop
imul
or
icebp
call
es
pusha
fcomp
dec
cs
inc
loopne
pushf
setbe
test
fsubr
fs
add
lods
xor
loope
mov
sub
nop
mov
nop
mov
dec
xor
test
xlat
mov
add
setnp
xor
cmc
sbb
scas
pushf
scas
icebp
or
push
xor
sbb
jp
in
mov
jge
cmc
adc
out
pop
shld
push
jg
inc
std
out
(bad)
push
popa
ins
ret
scas
data16
nop
jns
out
pop
dec
jne
sbb
cmc
sbb
cli
adc
sbb
shl
xor
fs
pop
mov
mov
div
aas
mov
and
cmp
popa
and
sub
(bad)
pop
add
ficomp
call
mov
js
add
push
and
mov
lods
fcmovnu
cmp
nop
ins
xor
test
inc
retf
xor
cmp
fs
je
push
push
addr16
pop
ja
cld
cli
xchg
pop
push
sub
push
jle
das
push
in
(bad)
(bad)
jb
pop
cmp
add
int3
int3
add
test
je
test
lods
pop
mov
mov
mov
lds
mov
(bad)
cmc
dec
xor
fsub
jl
ret
fs
cld
(bad)
rcl
out
movs
pop
mov
add
fcmovnb
cmp
sti
dec
add
add
in
mov
in
pop
into
mov
dec
fwait
outs
cld
xchg
xchg
ins
les
int
sbb
pop
mov
cmp
sbb
push
hlt
(bad)
icebp
paddsb
nop
lea
add
xor
adc
jl
cmp
inc
test
mov
and
or
sub
xor
jae
dec
js
add
sbb
or
cmp
das
je
mov
cmc
sub
pop
sbb
xchg
icebp
or
sti
add
dec
adc
add
inc
fisubr
jno
mov
push
mov
or
test
leave
mov
inc
push
push
les
pop
jb
arpl
in
cdq
shl
(bad)
ins
cwde
mov
clc
test
xchg
aas
xchg
jl
push
ins
ins
xchg
in
pop
fbstp
jg
mov
in
fiadd
dec
(bad)
in
pushf
int3
movs
out
mov
ds
push
cld
mov
pop
mov
lods
fsub
vpshufd
outs
clc
cmps
inc
mov
in
mov
jbe
shr
add
jp
int3
les
jb
mov
adc
mov
ror
out
cmp
rol
sub
jp
sub
ins
sub
mov
call
rol
loopne
loopne
and
dec
in
daa
or
(bad)
ja
add
pop
ss
xor
xchg
mov
scas
push
jp
outs
scas
adc
pop
sbb
icebp
cmps
imul
shl
jg
dec
shl
loope
psadbw
and
push
add
adc
and
pop
lds
dec
cld
add
mov
sbb
fcom
lahf
xor
cld
add
cmp
pop
or
pusha
inc
mov
clc
fnstcw
and
test
js
(bad)
int
mov
pop
(bad)
js
out
adc
push
ret
and
mov
adc
les
or
push
inc
mov
mov
add
push
pop
jae
adc
mov
dec
jb
not
cmp
add
ds
cmp
ds
jbe
call
in
add
cmps
out
or
pop
(bad)
lock
inc
xchg
scas
pop
xchg
inc
add
ja
test
pop
loop
push
xor
add
xchg
outs
in
aam
bound
xchg
mov
xchg
mov
pop
je
or
rcl
add
xor
dec
stos
jne
popa
push
inc
cwde
pop
test
pusha
mov
xor
or
cwde
add
fsub
movs
mov
(bad)
aam
mov
or
in
mov
adc
(bad)
inc
or
frstor
add
fnstenv
frstor
xor
icebp
push
out
lds
xchg
pop
in
inc
jge
shr
add
cmp
cld
jecxz
push
(bad)
cli
retf
xlat
cmp
aad
pop
int
fwait
shl
dec
pop
push
push
jns
jb
push
fist
sbb
loop
ret
xchg
cs
es
stc
fistp
xchg
mov
fsin
jmp
clc
jp
or
scas
adc
das
mov
push
push
inc
or
data16
dec
into
dec
mov
rcl
jmp
mov
inc
jmp
inc
enter
fs
in
fld
movs
jne
aad
push
push
mov
adc
ins
in
lock
jae
lahf
and
jl
mov
xchg
jo
dec
nop
fstp
clc
pop
jne
in
mov
mov
les
iret
and
mov
cmps
adc
or
jae
cmp
jp
cmp
(bad)
lods
popa
ins
pop
fisub
mov
test
call
xchg
push
and
dec
mov
test
xchg
push
xchg
test
icebp
js
dec
adc
add
cmp
or
or
das
dec
push
cmp
push
jae
push
dec
aaa
test
stc
in
dec
retf
out
jne
lods
cmp
hlt
adc
xchg
ss
adc
xor
sbb
sub
pop
sub
sbb
or
adc
add
inc
sbb
(bad)
mov
adc
or
and
or
push
cmc
dec
push
mov
mov
cmps
out
xor
sub
ret
cmp
mov
cmp
jns
inc
std
je
push
shl
xchg
adc
aam
or
lahf
push
xor
mov
pop
aad
jne
jmp
push
add
test
gs
mul
xor
mov
fsubr
sbb
cmc
mov
push
add
outs
js
or
imul
jle
xor
pop
dec
sbb
dec
mov
inc
or
rcr
cmp
sbb
xor
dec
add
aas
loop
aam
test
adc
mov
retf
clc
add
xchg
fdiv
clc
cmps
(bad)
repz
sub
mov
fs
and
daa
shl
cmp
or
mov
das
xchg
pop
push
fwait
ret
test
fist
cmp
popf
push
push
lsl
dec
in
retf
mov
addr16
bound
fnstsw
js
push
retf
inc
mov
or
jmp
add
mov
mov
rcl
xchg
inc
fwait
jmp
iret
dec
aas
lods
cmp
and
out
test
fcom
mov
sbb
dec
dec
daa
stos
and
ret
int
xchg
out
das
ror
and
adc
adc
popa
inc
popf
push
inc
(bad)
push
cs
sahf
fs
mul
sbb
imul
adc
call
inc
jg
and
test
in
push
mov
xchg
and
les
pop
dec
adc
xor
and
aaa
inc
test
push
inc
or
int
mov
push
test
pop
sti
dec
push
cmp
mov
sbb
cmp
mul
out
fistp
or
aam
push
outs
xor
cmp
fnsave
stos
rcr
daa
in
xchg
aam
in
pop
ret
mov
push
fdivr
cwde
pop
test
push
fsub
loop
das
call
retf
adc
fidiv
mov
sub
xchg
imul
add
sbb
sbb
jl
jmp
fmul
xor
mov
gs
lahf
hlt
and
adc
add
leave
inc
and
adc
xchg
retf
jae
jg
(bad)
mov
das
test
push
les
jecxz
add
jle
iret
jl
cmps
xchg
movs
into
xchg
cs
mov
cli
dec
xor
stos
repnz
pop
mov
mov
adc
xor
mov
sbb
push
inc
pop
push
(bad)
pop
adc
fsubr
in
mov
inc
in
dec
jbe
or
cld
push
stc
ret
add
cs
out
or
sti
sbb
xchg
inc
fld
ds
pop
push
pusha
sub
hlt
fisub
dec
mov
jl
sahf
inc
pushf
or
js
inc
jb
push
aam
ins
add
pop
or
cmp
inc
leave
add
sbb
imul
mov
xlat
mov
jp
aad
jl
cmp
(bad)
popf
aam
cmp
cld
mov
push
cmp
pop
lahf
adc
int3
jne
test
sbb
xchg
call
iret
popa
int
pop
sti
pop
ret
scas
push
mov
jns
jl
lock
outs
cld
mov
dec
and
(bad)
cli
sub
leave
jp
xchg
(bad)
popa
dec
(bad)
fcomp
fimul
in
call
push
add
les
cs
sub
add
dec
in
gs
jle
loop
xchg
imul
out
jge
xchg
and
mov
(bad)
sbb
jo
mov
xchg
inc
mov
mul
std
jae
out
xchg
test
fistp
(bad)
aas
test
and
ret
dec
movs
icebp
(bad)
mov
inc
scas
xchg
mov
cmp
sbb
ss
(bad)
in
fimul
pop
data16
push
fdiv
mov
out
ret
dec
les
dec
jmp
lock
mov
push
cmp
mov
lods
out
fldpi
cmp
jo
cmps
xchg
pop
stos
xchg
xor
dec
cmps
sahf
(bad)
(bad)
popa
out
pusha
out
cmps
and
clc
adc
fsubrp
xchg
cwde
into
stos
ds
fadd
les
sbb
xor
mov
lods
or
lock
int
mov
pop
dec
sub
neg
sub
mov
out
and
retf
mov
aas
ja
pusha
out
das
pop
in
lods
mul
std
fnsave
and
dec
mov
mov
and
xchg
mov
dec
shr
sbb
aad
jbe
add
mov
fnstenv
dec
xor
or
push
rol
inc
cld
(bad)
add
and
divps
imul
cmps
xor
push
cmps
push
imul
mov
ss
sbb
imul
pop
add
jl
xor
or
xlat
xchg
xchg
adc
popf
mov
pop
mov
loopne
jns
xchg
and
add
loop
sbb
push
outs
xor
sub
sbb
les
or
jle
test
es
test
dec
mov
mov
adc
outs
mov
xchg
mov
sub
sub
jmp
jnp
js
pop
les
jecxz
jmp
xor
rol
sbb
dec
outs
cmp
inc
inc
jge
imul
inc
sar
push
inc
ins
or
mov
rcr
cmp
mov
enter
aam
ds
push
ficom
mov
mov
int
mov
mov
pushf
int
push
cs
push
mov
sub
pop
inc
test
xlat
sbb
dec
test
or
pop
mov
das
jmp
inc
cwde
mov
xor
inc
add
in
xor
test
sub
and
push
mov
in
and
xchg
pop
shr
ret
jno
jno
dec
cmps
outs
pop
push
hlt
loop
repz
daa
pop
lds
pop
xor
adc
xchg
mov
(bad)
int3
pop
iret
shl
cmp
dec
ja
add
movs
sbb
mov
xor
xchg
push
mov
call
hlt
and
xor
pop
lahf
xchg
dec
movs
lods
and
sahf
adc
cli
inc
out
xchg
or
sbb
jb
and
or
aas
test
in
sub
inc
mov
push
call
dec
movs
inc
xchg
cmps
jp
sub
mov
movs
lds
jnp
inc
jb
mov
retf
mov
ins
je
movs
es
call
xchg
pop
fimul
call
push
outs
lods
jmp
sbb
mov
fbstp
std
cmp
dec
pop
ins
loop
mov
pop
add
inc
pushfw
jbe
add
mov
bound
inc
jae
into
or
push
inc
stos
cld
cwde
(bad)
fidiv
ds
xor
sbb
mov
fs
outs
push
ficom
scas
and
xor
mov
mov
mov
aas
mov
out
(bad)
int3
dec
fldenv
rol
js
mov
xchg
ds
sbb
mov
jmp
xlat
inc
ja
pushw
in
inc
int
push
mov
cs
bound
and
mov
pop
inc
pop
jae
test
mov
out
dec
xchg
call
xchg
test
push
cs
aam
xlat
mov
aad
mov
fcmovnbe
inc
jne
pop
adc
sub
inc
and
or
pop
xchg
xor
call
and
lods
mov
xor
xor
fwait
cmps
pusha
ins
mov
shl
dec
out
ins
in
mov
push
cmp
add
inc
sub
gs
pop
ss
ins
jo
xchg
sub
add
in
movs
(bad)
pop
stos
or
or
push
movs
movs
(bad)
pop
cmps
dec
mov
mov
adc
and
pop
mov
retf
sahf
xchg
fistp
pop
cdq
scas
push
mov
in
xor
in
rsqrtps
aad
mov
aas
and
pop
test
jl
push
imul
mov
mov
inc
test
aam
jge
xlat
xchg
xor
push
mov
mov
jle
jns
call
adc
sti
pushf
(bad)
not
jl
jbe
inc
aam
ja
jecxz
int3
cmp
or
dec
outs
mov
ret
add
shl
dec
jecxz
xchg
pusha
push
jmp
fs
mov
sar
adc
gs
scas
jl
pop
cwde
xchg
scas
and
movs
add
or
sub
test
add
pop
test
mov
xor
iret
xchg
inc
and
dec
cmp
inc
mov
and
pop
call
je
int3
das
imul
retf
inc
(bad)
sbb
out
in
scas
retf
mov
or
push
inc
test
jmp
test
mov
nop
sub
mov
cmp
leave
cs
lock
pop
adc
sub
pusha
loope
dec
pusha
sub
and
mov
pop
in
or
lds
lods
nop
sbb
retf
out
in
and
and
repz
jmp
out
xor
cmps
mov
aas
push
pop
sbb
fcmove
sub
inc
mov
ss
jmp
xor
lahf
jo
add
adc
xchg
sbb
and
in
in
sbb
cmp
ins
popf
jge
in
pop
int
aas
mov
aad
cs
mov
lods
xor
inc
dec
ins
stos
cmp
loopne
in
xchg
add
and
shl
bound
pop
jne
mov
aas
retf
inc
dec
pusha
in
add
movs
cld
sub
adc
sub
add
stos
mov
pop
js
inc
mov
test
mov
xor
and
sub
imul
xchg
adc
daa
cld
inc
add
or
(bad)
std
stos
dec
inc
popf
adc
cmp
iret
hlt
push
lds
cld
call
fs
fcmovnbe
push
test
push
adc
lahf
push
push
cmp
xor
and
ss
mov
mov
cdq
imul
sub
adc
inc
xor
gs
inc
push
push
shl
xchg
pop
jp
jae
or
jne
ins
add
adc
and
inc
dec
inc
jmp
xchg
sbb
mov
lds
mov
inc
ins
sbb
cdq
addr16
push
pop
ret
rcr
mov
jns
(bad)
xor
xchg
xor
fsub
and
das
loopne
repnz
push
mov
xchg
add
push
(bad)
daa
test
pushf
xchg
fmul
jnp
mov
cmps
cs
repz
jl
inc
push
jmp
mov
inc
test
hlt
dec
sbb
ins
mov
mov
push
inc
mov
push
lds
test
out
mov
xchg
or
fsubr
push
adc
jb
int3
in
inc
push
add
sub
jmp
ret
iret
dec
xor
inc
test
sub
and
lea
aam
jp
jns
clc
neg
pop
push
call
fucomi
add
(bad)
cmps
push
int3
push
jmp
loop
retf
jl
and
(bad)
or
jmp
dec
xchg
gs
sti
cdq
inc
addr16
lahf
in
mov
fisub
ins
pop
pop
inc
xchg
push
sub
sbb
pop
cli
lock
pop
ins
dec
out
jg
pop
sbb
xchg
mov
leave
popa
in
adc
or
(bad)
(bad)
sti
pop
push
popa
sahf
aam
neg
or
cmp
mov
cmp
mov
lahf
jl
sub
sub
adc
sub
scas
(bad)
mov
jo
stos
test
loope
aad
add
dec
aam
leave
add
push
pop
jns
sbb
cmp
mov
stos
fmul
in
push
mov
mov
mov
push
or
adc
mov
std
icebp
hlt
outs
repnz
movs
cmps
(bad)
pop
lods
dec
pop
dec
mov
push
dec
fld
ret
push
scas
fwait
stos
pop
or
mov
loop
or
mov
sub
lods
add
pushf
xor
mov
pop
mov
fwait
pop
or
inc
scas
sub
and
xchg
shl
shl
cs
sbb
pushf
mov
and
push
dec
mov
imul
push
(bad)
(bad)
mov
stc
dec
xor
and
es
push
jmp
ja
lods
jne
pop
(bad)
xchg
shr
sub
cmp
pop
cli
sti
mov
add
mov
mov
and
in
imul
inc
aam
xor
cs
arpl
mov
push
push
bound
ja
mov
shl
jp
aad
xor
push
mov
fcomp
mov
fucomp
add
mov
scas
cmp
mov
out
shl
dec
and
sub
outs
ret
rol
dec
mov
xchg
out
iret
pop
mov
sub
in
std
mov
cmps
in
xor
dec
stos
in
fidiv
ins
das
or
gs
fsubr
xchg
xor
(bad)
clc
cmp
xor
pop
ror
adc
leave
(bad)
arpl
aam
dec
pushf
xchg
scas
push
into
xchg
jmp
loope
mov
sbb
dec
loope
je
inc
aad
popf
jbe
movs
fcom
fimul
adc
fldcw
out
shr
ins
xor
test
xchg
outs
(bad)
aad
jne
neg
das
icebp
fimul
mov
mov
xchg
in
call
mov
cmc
push
mov
xchg
dec
sub
xchg
dec
neg
xchg
inc
pop
jl
cmp
scas
les
rol
ds
in
test
xchg
test
test
or
in
dec
mov
push
outs
hlt
into
je
pop
mov
popf
test
movs
inc
adc
out
icebp
stos
aaa
nop/reserved
mov
cwde
add
fs
and
jl
adc
jmp
mov
or
xchg
test
mov
das
add
cmps
cli
call
(bad)
sbb
arpl
add
movs
ja
dec
in
test
sti
jne
test
jp
cmp
(bad)
movs
das
inc
sahf
(bad)
push
and
icebp
mov
call
in
mov
arpl
push
sub
ins
es
fisubr
inc
(bad)
out
(bad)
sbb
and
cmp
aad
call
ficom
xchg
mov
leave
pop
cwde
mov
lds
repnz
test
pop
into
and
push
xor
pushf
and
cmps
jge
ins
xchg
sbb
fild
push
lds
mov
fnstenv
fidivr
ficomp
push
sbb
push
pop
int3
outs
mov
jmp
dec
test
dec
loope
gs
sub
add
je
cmps
rol
push
idiv
sub
or
dec
inc
int3
pop
not
call
hlt
aad
scas
aam
push
cmp
sub
fs
cmp
fcmovbe
jns
cmps
jmp
test
mov
xor
inc
into
sbb
ins
into
dec
mov
pop
stos
cdq
lahf
call
jae
into
imul
xchg
mov
xor
xchg
in
fs
cmp
or
enter
ficomp
or
outs
ror
xchg
dec
pop
push
stos
fistp
or
ficomp
repnz
push
and
into
mov
add
rcl
lds
push
rcr
dec
sub
mov
test
fld
sub
inc
cmp
add
mov
pop
mov
pushf
mov
or
popf
call
lock
xor
sti
add
xor
mov
add
dec
xchg
mov
test
sub
(bad)
hlt
sbb
mov
test
push
cmp
xor
push
clc
mov
test
lds
repz
push
cmps
rcl
fimul
fmul
lock
sub
mov
cdq
cs
into
jmp
sahf
in
xlat
adc
sub
movs
pushf
push
out
inc
es
mov
lods
int
mov
inc
fbstp
(bad)
xchg
loop
adc
mov
mov
icebp
mov
cmp
aas
xchg
or
in
sub
bound
xchg
sahf
mov
cld
inc
inc
or
jne
loopne
or
xor
push
popa
sub
mov
pop
xchg
adc
jnp
cli
in
ret
sub
les
sbb
jmp
xor
xor
xchg
leave
pop
xor
push
into
das
cmp
push
aad
mov
sub
xor
bound
add
and
fs
scas
jp
into
pop
sub
pop
push
mov
imul
jo
jecxz
scas
mov
(bad)
sub
outs
and
ds
jo
(bad)
bound
das
sbb
mov
add
out
data16
xchg
lods
das
add
sub
jnp
xor
sbb
(bad)
fisub
ds
or
xor
sbb
xchg
sti
xor
mov
add
test
adc
cs
jb
adc
sub
add
sti
in
mov
les
loopne
push
sbb
pop
js
icebp
cmps
dec
sti
mov
sbb
test
mov
sub
pusha
pop
mov
and
jg
das
cmps
cmp
pop
sub
div
mov
push
mov
cmps
push
push
cmc
(bad)
not
push
std
sub
dec
repz
enter
fidiv
sahf
and
push
dec
add
in
mov
dec
in
repz
sbb
je
in
fs
mov
mov
ss
aam
jae
dec
and
sbb
and
sub
popa
xchg
icebp
mov
jbe
repnz
popa
shl
fisubr
test
mov
mov
leave
adc
clc
cwde
aas
xchg
ds
xor
(bad)
jns
mov
dec
movs
ret
leave
rcl
aam
mov
and
lds
sbb
(bad)
mov
push
call
mov
in
outs
inc
jmp
cmp
adc
aad
imul
popa
and
clc
scas
jbe
sti
dec
cwde
adc
popf
mov
loop
dec
pop
mov
pop
cmp
aam
inc
dec
jae
retf
test
cmp
mov
cmp
pop
sbb
lds
and
dec
call
test
xchg
sub
outs
mov
jne
or
gs
aas
pop
test
mov
jle
iret
dec
cli
mov
outs
cli
add
push
lock
and
and
jecxz
fdiv
inc
les
adc
inc
rcl
xor
and
shr
jp
in
scas
hlt
aam
shl
mov
jmp
cmp
clc
sbb
(bad)
mov
add
cmp
xchg
sar
inc
mov
out
in
dec
jl
gs
push
shr
out
int3
jb
out
jns
daa
cmp
pop
adc
ror
ins
add
cmc
xchg
mov
push
mov
dec
add
push
mov
pop
aaa
dec
mov
jmp
ret
xchg
sub
ficom
(bad)
daa
dec
or
out
push
jmp
aad
jmp
movs
push
mov
je
dec
dec
mov
add
sbb
aad
test
cmp
xchg
dec
das
sub
mov
into
cmp
jecxz
cmc
adc
jnp
xor
jle
test
jp
pusha
test
dec
adc
sbb
xchg
adc
jo
sahf
retf
(bad)
cmps
adc
jl
mov
(bad)
push
adc
cld
sbb
imul
add
xor
push
mov
pushf
(bad)
test
sbb
out
ret
ins
sbb
cli
test
popf
sahf
push
mov
scas
push
ret
cli
ss
ret
add
mov
leave
xor
imul
and
shl
add
mov
repz
push
fisttp
int3
fcom
mov
cmp
mul
movs
dec
(bad)
pop
(bad)
call
ret
jne
dec
retf
fcom
into
and
xchg
cmp
mov
sub
sbb
add
dec
sbb
inc
fistp
sahf
lods
idiv
xchg
mov
lock
cld
adc
fcomp
or
jbe
sbb
jo
(bad)
mov
shr
loop
ss
iret
adc
lods
das
out
jns
je
movq
outs
daa
std
int3
fnstcw
cmp
xchg
pop
cmp
and
push
mov
fwait
sub
xor
or
mov
(bad)
or
jle
fdivr
retf
jge
and
pushf
xor
sahf
push
test
fbld
mov
stc
add
cmp
rcr
mov
scas
adc
mov
fcom
ret
popf
repnz
jno
sbb
adc
xor
mov
jns
pxor
inc
(bad)
icebp
adc
movs
shl
inc
retf
xlat
loop
retf
test
in
cmp
push
test
add
adc
ds
and
push
add
push
push
mov
sub
nop
sub
sbb
jl
inc
mov
aad
std
test
xchg
ds
aas
cmps
push
cmps
jb
(bad)
sbb
xor
sbb
repnz
pop
mul
mov
sahf
pop
jmp
div
shr
mov
cmp
jmp
mov
pop
jp
into
call
dec
dec
inc
movs
arpl
neg
retf
fidiv
dec
inc
xchg
int
sbb
scas
xor
in
dec
lahf
cmps
mov
fnsave
int3
mov
jp
sbb
call
jno
outs
in
jl
pusha
es
push
mov
mov
test
and
and
test
cmp
cmc
add
push
mov
sub
into
daa
push
fild
mov
addr16
or
ret
stos
sbb
push
pushf
sbb
xchg
hlt
or
push
jmp
mov
xchg
(bad)
hlt
sub
outs
shr
leave
mov
in
bound
sbb
mov
fwait
je
into
jg
cld
push
fidivr
in
ret
fistp
push
call
or
lock
outs
sbb
pusha
mov
(bad)
stos
add
ret
pop
jae
fcomp
movs
cmps
mov
xchg
lock
sar
adc
xchg
cmp
in
sbb
sbb
std
jmp
mov
mov
sbb
pushf
jmp
inc
mov
loope
jmp
cmc
push
xchg
mov
daa
xchg
push
rol
push
out
in
lahf
xchg
out
jl
and
ror
(bad)
shl
aas
sbb
test
xor
pop
sbb
pop
(bad)
je
jp
les
and
and
imul
dec
jo
dec
xor
mov
out
pop
and
(bad)
dec
mov
pop
lods
fild
repz
jmp
out
and
or
ins
ror
mov
xchg
mov
aas
movs
dec
push
push
add
or
cmc
cli
pop
push
mov
push
(bad)
mov
jae
xor
pop
pop
pop
push
outs
cmp
push
retf
push
push
jecxz
call
std
cmp
data16
mov
sub
sbb
adc
scas
outs
repz
ds
(bad)
test
xchg
sub
xor
and
cld
or
jp
ret
lahf
mov
add
addr16
cmp
jne
int3
into
xchg
fist
xor
and
sbb
and
xor
push
mov
mov
or
xchg
sti
mov
pop
lea
push
ja
mov
xor
mov
mov
arpl
xlat
je
lahf
ret
das
mov
clc
movs
xchg
scas
into
push
lds
loop
cmc
xlat
ds
sub
icebp
xchg
cmp
add
jo
aam
jl
pusha
cmp
sbb
hlt
shr
push
push
ret
and
xchg
jecxz
jmp
dec
in
sti
adc
aad
sbb
push
dec
pop
nop
jnp
std
outs
cmp
or
pop
mov
jle
jo
aad
popa
enter
sbb
mov
rcr
mov
je
ret
xchg
mov
repz
(bad)
fs
push
pop
ror
or
fwait
lea
mov
xchg
add
cmove
xchg
jmp
xchg
in
movs
mov
or
jp
sub
or
ds
or
xchg
out
ins
test
and
jmp
retf
pop
pop
inc
aas
(bad)
daa
(bad)
enter
frstor
mov
ds
jbe
jbe
leave
cwde
adc
and
xchg
mov
sub
and
fsub
pop
mov
xchg
movs
call
test
xchg
cdq
pop
pop
es
ret
mov
dec
(bad)
sub
dec
add
pop
aaa
out
daa
sub
mov
xor
retf
out
add
jg
popa
dec
call
dec
inc
jmp
xchg
xchg
push
popf
std
jnp
xor
xchg
outs
push
mov
movs
jp
sub
xor
xor
nop
je
add
fdivr
scas
(bad)
aas
(bad)
sar
sbb
dec
jb
inc
mov
repz
pop
sub
adc
or
cmp
and
pop
fs
inc
dec
fisubr
aaa
mov
movs
dec
push
test
push
add
cmp
mov
add
fs
icebp
dec
push
cli
or
pop
pop
cmp
cld
mov
cmp
and
push
or
and
out
and
sub
outs
pusha
push
sbb
pusha
mov
stc
jmp
out
jp
xchg
sub
cmps
icebp
or
push
mov
push
lods
div
loopne
add
inc
mov
xor
movs
pushf
movs
outs
dec
loopne
retf
jge
jecxz
mul
push
mov
shl
data16
jb
mov
jl
movs
push
cmp
mov
mov
fdivr
sbb
enter
xchg
pusha
dec
mov
(bad)
mov
shl
(bad)
ficom
shr
xchg
out
out
add
dec
pop
out
gs
xor
hlt
ja
mov
jmp
ins
jns
sub
push
icebp
jns
jmp
xchg
fisttp
shr
outs
xor
jae
scas
xor
adc
rol
mov
arpl
into
adc
adc
jns
sbb
sub
je
jne
fs
stos
xor
fimul
outs
in
test
push
push
ja
mov
push
sub
mov
push
mov
xor
pop
cmc
xlat
mov
imul
sbb
sub
call
out
and
jmp
cld
jecxz
xor
in
lock
call
hlt
or
sbb
bound
push
dec
pop
jmp
in
xchg
fldenv
add
nop
(bad)
call
fist
cmp
cmp
mov
dec
sbb
lea
movs
repz
out
or
adc
xor
mov
adc
sub
jmp
or
fdivr
cs
es
push
fbld
out
scas
push
mov
inc
or
cdq
push
fs
xchg
or
je
daa
or
dec
and
push
pop
push
jbe
sub
or
js
ins
inc
hlt
cmp
xchg
dec
aam
and
sub
pop
into
cmp
in
fcom
add
dec
ds
test
xchg
enter
loop
mov
or
mov
fs
lods
sub
lahf
xor
outs
mov
or
in
add
cld
cmp
cmp
mov
xchg
enter
adc
cwde
dec
jle
dec
mov
pusha
fucomp
arpl
xchg
jge
xchg
mov
or
cdq
popw
scas
mov
adc
pop
ds
repnz
les
(bad)
out
jge
movs
(bad)
cmp
aam
inc
mov
mov
pop
cmps
pop
xor
add
call
mov
pop
adc
(bad)
ror
and
xor
xor
out
and
xchg
add
push
cmp
loop
test
lods
hlt
lds
popf
xor
aaa
adc
pop
mov
std
(bad)
mov
and
cs
sbb
ins
jecxz
sub
jns
cmp
sbb
movs
jae
pop
fs
call
add
test
mov
jns
or
maxps
cwde
jl
add
pop
in
mov
popf
xchg
ja
pop
clc
pop
popa
inc
int3
cmp
dec
xchg
aas
cmps
scas
cmp
cmc
mov
int3
shl
xchg
js
or
inc
or
cmp
or
push
ret
xchg
xchg
aam
mov
inc
push
ja
aad
cdq
ins
add
mov
jg
aam
jmp
out
fwait
pusha
in
fnsave
push
daa
push
and
sub
dec
adc
lods
add
xor
(bad)
in
test
dec
leave
addr16
xchg
fisttp
mov
ret
stos
scas
aam
sbb
sbb
xor
call
push
je
imul
leave
cmp
mov
xchg
xchg
gs
xchg
imul
xor
rcl
dec
lods
push
jecxz
cmp
gs
mov
pop
(bad)
mov
add
dec
dec
pusha
clc
pop
jle
cmp
rcl
push
jo
xchg
loope
clc
ss
test
(bad)
fwait
pop
cmp
test
ret
in
push
mov
clc
pop
in
in
retf
sahf
add
sub
inc
jg
sar
addr16
jge
imul
cwde
test
dec
xor
add
in
inc
jo
addr16
xchg
adc
cli
xor
and
shl
enter
out
mov
cmp
xchg
add
xchg
dec
pop
ds
sar
and
call
pushf
out
xor
jnp
push
push
xchg
inc
into
(bad)
aas
(bad)
cmp
addr16
inc
inc
pop
inc
push
sub
or
les
pop
(bad)
or
pushf
and
and
mov
dec
hlt
add
add
xor
sub
fcmovb
sub
movs
scas
hlt
sub
fldcw
sub
test
test
sub
das
or
outs
mov
rcl
or
hlt
xchg
cmc
paddusw
cmc
retf
mov
out
dec
and
lock
ret
cdq
mov
outs
gs
xor
out
mov
push
xchg
fisub
arpl
mov
xchg
and
sub
loopne
das
fwait
mov
clc
xchg
scas
jne
je
js
xor
push
scas
push
adc
mov
mov
es
aas
clc
lock
arpl
inc
mov
icebp
xchg
ja
add
mov
or
inc
popf
inc
pop
mov
ss
mov
pop
fcmovne
and
add
adc
adc
inc
jmp
sahf
adc
jb
jae
aas
push
aam
jge
(bad)
into
ret
icebp
dec
jge
mov
movs
fld
sahf
loop
adc
nop
cmp
test
xchg
rol
fs
xchg
dec
repnz
sbb
xchg
jb
test
outs
and
(bad)
sub
bound
out
int3
jne
dec
fdivr
jb
ds
jbe
pop
cmps
xor
sete
out
data16
and
aam
add
mov
jg
push
xchg
jle
jae
push
mov
int3
pop
dec
pop
inc
xor
pop
aaa
retf
xchg
inc
jne
hlt
or
fpatan
xchg
and
push
mov
es
push
push
inc
jbe
xor
xchg
adc
inc
dec
hlt
adc
loop
inc
xchg
rep
in
cwde
scas
or
xor
rol
out
scas
push
add
push
fs
inc
ds
mul
adc
sbb
jge
pop
mov
xor
mov
cdq
sub
push
add
fwait
or
cmp
mov
jne
div
push
sbb
(bad)
sub
mov
sbb
mov
cld
sahf
fidiv
xchg
inc
ror
and
push
jb
pusha
(bad)
ds
push
in
retf
or
cld
hlt
test
int
sub
pushf
dec
mov
push
pop
pop
mov
jmp
mov
clc
sti
in
scas
cld
iret
cdq
lea
loopne
scas
push
lea
xchg
movs
in
ja
and
ds
pop
inc
clc
retf
in
shl
push
adc
mov
xchg
pop
mov
mov
fistp
cdq
movs
xchg
jg
add
mov
fidiv
out
cmp
inc
pop
sahf
jle
pop
pop
pop
lds
mov
in
ds
sar
jne
cmps
sub
push
mov
jne
out
cdq
dec
jp
or
or
scas
mov
xlat
jmp
les
xchg
mov
fldcw
pop
mov
fidivr
mov
lahf
mov
pop
adc
loop
xchg
mov
in
or
jns
jne
add
in
movs
in
ror
lods
sbb
sbb
data16
sbb
nop
pop
int3
cld
clc
and
lds
pop
iret
mov
xor
loopne
xchg
or
loopne
mov
fisubr
inc
(bad)
fiadd
mov
push
dec
mov
hlt
mov
dec
pop
pop
push
mov
in
sub
xor
loopne
xlat
xchg
cs
inc
dec
mov
mov
and
sahf
xchg
mov
(bad)
xor
aam
mov
popf
int3
pop
mov
(bad)
je
or
sbb
call
test
ret
lods
jl
call
dec
je
jae
push
dec
mov
es
jae
sbb
mov
jno
mov
or
repnz
rol
mov
or
js
or
(bad)
movs
mov
movs
pop
mov
pop
mov
gs
sahf
fadd
dec
push
mov
fdivrp
or
repnz
cmp
cmc
mov
jmp
sub
sahf
test
cmps
jno
(bad)
adc
sbb
add
aad
(bad)
pop
jl
mov
fbld
xchg
int
mov
jl
not
add
cmp
movs
sti
aam
and
fcmovnbe
jns
push
jge
add
mov
mov
or
dec
test
xchg
push
cli
ret
jo
pop
(bad)
lahf
aam
ins
das
push
test
clc
xchg
ins
xor
mov
test
(bad)
mov
add
jns
jne
int3
int3
jle
pop
push
aam
xor
push
ins
mov
pop
es
sbb
mov
inc
adc
mov
pavgb
movs
into
in
lods
aad
mov
mov
add
add
cmp
push
mov
(bad)
jmp
jge
push
push
popf
icebp
inc
sbb
pop
adc
jg
stos
xor
cmc
jmp
xor
dec
loope
leave
fwait
xor
sub
xlat
out
fs
pop
and
inc
ja
and
ds
xchg
addr16
mov
jmp
and
stc
pop
cmc
outs
in
mov
ret
mov
iret
dec
or
outs
fsubr
fisttp
sbb
adc
mov
test
adc
inc
xchg
mov
movs
sub
push
out
dec
push
faddp
sti
ja
sub
je
xchg
mov
gs
stos
addr16
neg
mov
jmp
pop
fmul
mov
adc
mov
mul
mov
pop
xchg
or
iret
jb
arpl
fisttp
and
je
sar
sbb
inc
dec
arpl
loopne
dec
cmp
xchg
mov
jle
cmp
and
sbb
add
addr16
stc
mov
js
popf
push
mov
jp
out
and
mov
fwait
mov
fiadd
daa
adc
pop
sbb
scas
out
xchg
mov
inc
retf
test
inc
out
ja
push
or
dec
test
icebp
pop
adc
pop
or
pop
mov
xor
aaa
out
hlt
cmp
jns
loope
popa
pop
and
add
sub
add
pop
call
jmp
dec
movs
stc
retf
or
add
in
sub
push
sub
call
mov
inc
out
movs
ud1
test
add
ret
and
popa
cld
xor
mov
xchg
mov
xor
mov
loop
add
pop
jno
fidivr
sub
pop
mov
inc
bound
jg
scas
cwde
push
call
or
cmp
mov
inc
std
xchg
out
and
ret
mov
(bad)
call
mov
mov
mul
test
fwait
dec
sbb
scas
dec
(bad)
mov
daa
frstor
ins
cmp
pop
add
pop
ds
inc
sbb
lahf
in
data16
push
cmps
or
push
lods
mov
jmp
data16
adc
sub
cli
xchg
in
mov
jns
pop
js
xchg
dec
ins
xor
fstp
and
pusha
test
mov
stc
ret
mov
and
cmps
(bad)
pop
retf
arpl
xchg
aas
inc
rol
cmc
(bad)
ins
mov
add
aam
ss
fistp
cld
mov
cmp
pop
xor
ret
sub
push
lock
sub
repz
and
mov
outs
out
inc
cmp
nop
mov
xor
ds
aam
cmp
das
rol
push
scas
fst
push
es
shr
pop
fs
sub
fisubr
or
in
(bad)
adc
push
or
dec
jl
jb
mov
jb
xchg
or
mov
fild
scas
iret
inc
lock
in
push
sub
repz
ror
cmp
jne
movs
or
xor
mov
dec
dec
movs
cmps
pushf
ins
out
add
adc
cli
cld
popa
sahf
movs
pop
inc
xor
inc
fadd
and
sub
fwait
call
adc
mov
xor
shr
(bad)
(bad)
cmps
mov
test
jno
lock
in
sbb
xchg
mov
pusha
cs
je
or
movs
hlt
stos
cwde
cs
out
sub
and
mov
xchg
ss
les
ss
adc
retf
inc
test
xchg
xchg
ins
inc
sbb
out
cli
add
lds
cmc
or
out
pop
sbb
xchg
iret
pusha
(bad)
cmp
leave
test
repz
les
fistp
lods
into
jg
lahf
scas
popa
fdivr
xor
(bad)
leave
int3
mov
mov
jns
rcl
xchg
(bad)
aam
mov
jmp
and
xlat
out
sub
aad
in
movs
sahf
pop
cmc
je
movs
adc
shr
mov
or
pop
test
aad
stos
jg
aad
mov
lea
dec
cmc
call
out
push
jle
or
lock
cld
sbb
jg
orps
cdq
dec
push
add
shl
inc
test
xchg
pop
cmp
out
inc
mov
imul
mov
push
push
push
es
and
xlat
out
xchg
cmp
xor
xor
movs
or
and
lock
inc
dec
fisttp
and
dec
ficom
aad
or
call
cmp
adc
or
and
mov
ins
mov
mov
test
lahf
jle
mov
stc
xchg
sub
cld
add
jmp
arpl
stos
sar
sub
dec
adc
inc
pop
loopne
fisttp
jmp
es
pop
shr
neg
inc
jle
sub
repnz
scas
cmp
dec
xor
dec
retf
jbe
pop
mov
pop
shr
scas
mov
jge
mov
cli
lods
out
loopne
xchg
inc
jno
dec
or
mov
push
pop
stos
es
popf
fisttp
shr
xor
xor
fwait
mov
adc
lahf
pop
xchg
lahf
mov
dec
inc
pushf
adc
and
sbb
mov
mov
repnz
xchg
inc
popf
inc
xchg
ss
xor
data16
jno
vmread
lods
pop
movs
in
jne
push
hlt
scas
imul
xchg
cmc
rcr
and
mov
movs
jg
outs
jno
push
or
pusha
cwde
pop
mov
sub
repz
ret
daa
pop
pop
sahf
xor
mov
mov
sar
pop
les
cld
add
pop
mov
push
add
ins
ror
ds
sbb
lahf
scas
push
sar
mov
adc
xchg
xchg
adc
and
pop
mov
and
cmp
mov
ins
mov
and
jmp
fiadd
mov
dec
mov
test
inc
inc
in
js
das
jecxz
movs
loop
cmp
retf
inc
fist
imul
mov
sbb
test
imul
push
mov
cmp
cmc
fwait
push
jg
in
sbb
and
hlt
scas
ss
push
div
push
push
or
out
(bad)
outs
(bad)
int
adc
repz
pop
movs
jnp
push
test
jbe
imul
sub
lea
xor
test
jne
ins
adc
out
jne
fidivr
pushf
push
ficom
gs
xor
dec
pop
pop
jmp
or
hlt
xchg
pop
sbb
add
cdq
sub
or
add
ret
adc
mov
push
and
ficomp
mov
inc
push
or
lock
loop
sahf
push
les
xchg
and
out
xor
fnstenv
xor
mov
mov
pushf
lods
test
xchg
test
scas
sar
adc
repz
adc
xchg
mov
test
cmp
add
aam
mov
push
jmp
fsubrp
nop
out
movs
fistp
test
movs
mov
gs
push
into
fcmovu
adc
popf
xchg
push
(bad)
mov
add
lea
xchg
call
add
pop
pop
dec
out
nop
movs
push
mov
loop
xchg
popa
cli
inc
jne
pop
cmp
(bad)
xchg
aas
int
jns
movs
(bad)
sbb
add
jmp
stc
movs
rol
and
mov
inc
adc
xlat
push
mov
mov
lahf
hlt
mov
cld
cmp
(bad)
popa
es
cmp
imul
and
push
imul
shr
jle
movs
push
out
sub
or
adc
and
sti
into
xor
scas
sub
jle
in
rol
xchg
xchg
fld
adc
int3
inc
push
(bad)
stc
out
cmp
pop
clc
int3
lahf
out
and
sub
and
xor
in
sbb
movs
jp
push
adc
les
xchg
cmp
cmc
adc
adc
aaa
jo
hlt
movs
imul
mov
mov
out
sti
pop
xchg
repnz
ret
inc
sub
gs
ins
sahf
mov
gs
xchg
or
sbb
jmp
mov
jbe
fisub
rol
mov
push
ds
into
ret
fiadd
push
(bad)
xchg
push
ds
mov
out
mov
(bad)
outs
enter
lods
pop
add
mov
ficom
mov
jmp
pop
sbb
not
cmps
adc
movs
js
in
(bad)
pop
ins
jge
das
or
cmps
lea
je
mov
sbb
cs
mov
push
dec
(bad)
daa
xchg
out
mov
(bad)
xor
(bad)
ins
cdq
cdq
cwde
cmp
mov
jnp
adc
ret
mov
mov
inc
mov
xchg
pushf
movs
pop
out
add
mov
loope
sbb
inc
pop
jae
retf
ret
nop
ds
fistp
mov
adc
jmp
inc
addr16
adc
jbe
xchg
call
xchg
popa
inc
mov
in
push
or
add
or
icebp
jge
mov
cdq
sar
out
(bad)
ins
jns
gs
jp
push
rcr
and
nop
dec
je
cmp
in
jne
xchg
jnp
mov
je
cli
mov
stc
adc
das
dec
mov
and
cmp
push
cmp
mov
push
mov
push
in
xor
xchg
add
dec
mov
push
sub
and
add
xor
jne
fwait
popf
cmp
scas
sbb
aam
xor
add
inc
or
(bad)
inc
jl
repnz
xchg
(bad)
lahf
push
cmp
movs
aaa
out
scas
clc
daa
out
sar
pop
pushf
out
hlt
loop
jno
cmps
aad
sub
sub
inc
ret
push
or
in
out
adc
aam
or
scas
inc
enter
xor
mov
xor
sbb
xchg
stos
rcr
jmp
int
fwait
int
(bad)
sub
sub
mov
loop
jg
and
iret
and
int
adc
xor
adc
adc
mov
add
into
xchg
jle
movs
mov
lock
rcl
mov
jl
rol
cwde
and
retf
jbe
arpl
mov
cld
and
adc
out
pushf
sbb
xor
(bad)
cmc
mov
test
cmps
je
or
scas
pop
mov
mov
call
push
shl
(bad)
fndisi(8087
mov
scas
shr
xor
push
cld
dec
(bad)
lods
cmp
in
add
das
sub
or
mov
mov
lods
pop
or
sbb
mov
mov
cmc
lods
bound
xor
adc
in
push
das
mov
inc
movs
or
xor
cdq
jmp
cmp
dec
cmp
hlt
cmp
aas
push
ss
daa
in
push
dec
jbe
adc
and
or
inc
dec
mov
pop
std
add
hlt
gs
stos
in
sbb
push
gs
rcr
sbb
push
fnstenv
push
adc
and
je
and
mov
es
clc
xor
jl
or
les
(bad)
sub
push
lods
jle
ficom
jmp
sar
data16
cdq
fidiv
sub
lds
in
cmp
sub
mov
adc
ins
dec
pusha
fs
outs
inc
aam
lock
ja
sub
mov
or
into
sbb
jbe
pop
push
mov
xchg
shl
ficomp
pop
call
or
not
push
ins
and
lahf
jp
inc
fld
rcl
and
popf
mov
jmp
sbb
mov
loopne
test
hlt
es
dec
sub
sub
iret
push
out
ror
mov
aam
in
lods
or
cmp
sub
je
enter
jno
xor
sahf
or
jl
jmp
or
jo
retf
mov
es
ficom
sbb
ds
stos
xchg
push
(bad)
jne
pop
push
xlat
mov
sub
js
jle
(bad)
add
push
int
out
mov
jns
push
add
adc
cmp
inc
dec
ss
or
sti
mov
aas
xchg
mov
imul
lahf
xchg
and
mov
mov
scas
adc
ffree
cmp
mov
push
jnp
mov
add
ror
xor
jne
(bad)
test
mov
sahf
push
sub
(bad)
cld
je
xchg
mov
movs
mov
js
loope
shl
adc
add
xchg
nop
or
outs
cs
inc
dec
test
mov
aad
pop
inc
mov
mov
xor
into
mov
jge
xchg
jne
mov
mov
mov
cmps
lahf
or
fmul
or
out
data16
pusha
aad
in
mov
cmps
std
(bad)
les
loopne
neg
mov
adc
hlt
or
xor
cmp
aad
inc
pop
xor
xchg
jb
sub
mov
jns
inc
cmp
pushf
sbb
fiadd
pushf
movs
hlt
(bad)
add
ror
xchg
dec
or
pushf
jmp
sub
pop
aaa
mov
push
pop
xor
loop
(bad)
jmp
push
pop
push
inc
ficom
scas
ins
popf
(bad)
test
stos
jmp
popa
dec
pusha
cwde
sub
das
push
sub
int3
out
dec
mov
sbb
push
cmps
test
js
pop
cmp
mov
popf
aam
adc
jge
add
mov
mov
cmp
addr16
in
lock
les
icebp
dec
pop
out
jbe
int3
xchg
add
fstp
push
mov
fmul
push
or
js
sahf
test
jl
and
enter
sbb
push
and
data16
adc
sub
pop
sbb
cmps
push
fidivr
sbb
add
retf
jp
(bad)
mov
in
pop
cmp
into
mov
aas
cmp
int
data16
dec
nop
and
retf
push
jmp
pusha
fsubr
popa
sbb
cmp
sbb
or
jmp
cmp
xor
mov
dec
gs
into
aam
pop
mov
(bad)
inc
sub
inc
xor
and
rcr
push
jl
cwde
int3
xchg
es
mov
mov
stc
cmc
mov
call
xor
jge
xchg
mov
inc
aam
in
ficomp
movd
neg
movs
cmp
pop
or
adc
dec
retf
ins
xchg
mov
mov
jae
cld
dec
clc
ss
jmp
sub
pop
mov
sub
outs
in
push
mov
shl
sahf
call
jge
jo
popf
jbe
popa
in
cmp
sbb
adc
mov
and
jb
mov
call
xor
imul
and
test
inc
ret
int3
lods
cmp
mov
add
cmp
cmps
push
aaa
push
arpl
int
dec
add
jne
push
inc
ds
sub
mov
and
adc
in
mov
xor
adc
neg
inc
sar
(bad)
dec
adc
fdiv
xor
mov
test
inc
ds
mov
addr16
cmp
ins
add
aam
aam
fcmovnu
jb
movs
scas
pop
sbb
fld
pop
leave
add
test
cmps
lock
xchg
dec
dec
cmp
and
xor
data16
les
add
call
cmps
stc
pop
shr
pop
ficomp
cmps
and
(bad)
sbb
(bad)
mov
fldenv
fmul
jg
jns
push
hlt
push
mov
pop
pop
dec
shl
add
(bad)
ficom
mov
mov
pop
adc
shl
xchg
dec
popa
cs
xchg
sar
in
pop
adc
push
outs
aad
fwait
aad
add
clc
retf
jle
(bad)
sub
movs
push
int3
mov
cmp
data16
pusha
mov
out
sub
mov
jnp
pop
in
mov
and
xor
dec
bound
aad
ds
fs
lahf
movs
movs
sub
leave
mov
test
(bad)
hlt
es
pop
sbb
pop
shl
ds
icebp
outs
into
pop
or
dec
xchg
inc
aas
inc
std
sbb
add
adc
mov
aam
call
imul
add
cmp
in
push
int3
popa
pushf
mov
stos
xchg
mov
add
pop
pop
test
fucom
sbb
push
dec
jo
gs
retf
in
cmp
pop
loopne
or
(bad)
out
int3
ds
add
je
in
mov
(bad)
loop
mov
push
and
out
adc
dec
mov
push
in
sbb
cwde
or
and
jne
push
fsubr
rcl
mov
ins
xor
in
or
jp
(bad)
mov
lods
test
xchg
retf
fs
cmps
fcmovu
(bad)
jecxz
jbe
pop
cmps
jmp
fcomp
into
int3
inc
push
pop
fwait
movs
push
xchg
cmps
push
into
fs
add
push
rcr
int
mov
or
fcom
movs
aas
hlt
jo
sbb
and
dec
ds
(bad)
in
inc
xchg
mov
outs
mov
lods
imul
dec
pop
dec
rcl
push
add
jp
mov
sbb
xchg
ins
mov
jge
cmp
sub
outs
pop
push
or
pushf
mov
dec
push
adc
mov
mov
dec
push
movs
push
std
pop
cmps
cmp
icebp
xchg
(bad)
jbe
(bad)
xchg
mov
addr16
inc
bound
mov
outs
retf
rol
dec
cs
enter
ror
in
sbb
out
es
stos
ins
push
pop
mov
into
cdq
lock
out
sahf
or
bound
cld
push
outs
fidiv
pop
dec
sub
xor
push
adc
or
(bad)
data16
mov
sahf
inc
(bad)
mov
mov
mov
imul
jbe
jno
mov
aas
mov
prefetchw
or
jae
jmp
sub
(bad)
fxam
sbb
and
sub
xor
shl
ins
aas
sbb
mov
data16
mov
ins
movs
mov
mul
ds
inc
cmp
dec
dec
xor
in
movs
or
xchg
cs
pop
mov
push
aad
xchg
out
push
retf
adc
pop
scas
les
in
scas
movs
xor
test
std
pop
dec
fistp
rcl
out
test
mov
jle
push
mov
push
icebp
mov
je
test
iret
mov
int3
dec
shl
fst
repz
jnp
ficom
sbb
adc
shl
inc
jl
(bad)
cmp
lea
movs
add
into
jo
shr
cmp
pop
add
cs
sub
ficomp
fdivr
bound
iret
sub
inc
jle
popf
test
adc
pop
and
xchg
add
fld
adc
sbb
sbb
jne
cld
add
add
les
sbb
pop
or
adc
mov
push
imul
(bad)
push
jmp
adc
pop
jns
mov
dec
ret
or
cmc
outs
cld
push
and
xchg
int3
inc
mov
fs
mov
mov
retf
pop
imul
sbb
into
add
gs
in
retf
sti
mov
mov
imul
out
or
lock
cmc
aam
test
cmp
cmp
mov
push
adc
cmp
pusha
inc
int3
fmul
gs
push
fwait
cmp
jmp
mov
test
pop
sub
ficomp
dec
mov
pop
or
jg
movs
loop
hlt
aad
punpcklwd
ret
adc
push
inc
inc
(bad)
(bad)
xchg
pop
xor
mov
dec
jge
adc
pop
jle
inc
mov
iret
inc
push
mov
or
pop
push
cmp
test
mov
jmp
push
not
out
fs
(bad)
cld
ins
mov
and
les
cmp
adc
mov
mov
jbe
sbb
add
jle
adc
cmp
fnstsw
push
sub
mov
test
loopne
mov
mov
ret
retf
jmp
cmp
mov
cmp
mov
imul
pop
mov
cmc
push
rcr
fisttp
and
adc
rcr
out
sub
dec
into
xor
gs
jne
dec
lock
inc
sbb
inc
inc
sbb
and
xor
inc
loope
dec
jnp
xor
sbb
movs
sub
loopne
and
push
into
mov
cmc
sahf
xor
sahf
jmp
call
dec
(bad)
int3
fidiv
retf
xor
mov
push
dec
cmps
scas
sub
xchg
lods
and
btr
xchg
and
scas
test
inc
xchg
shr
mov
addr16
pusha
pop
inc
sbb
das
aaa
or
sbb
fs
jp
scas
outs
pushf
push
mov
xchg
test
lods
jnp
gs
ror
xchg
mov
retf
xchg
push
js
dec
rcr
push
mov
xchg
out
push
dec
dec
or
pusha
sbb
rcl
dec
or
test
cmps
push
stos
xor
(bad)
aas
sbb
cmp
pop
jmp
sahf
lods
jg
ins
ss
les
rcl
dec
movs
into
in
ss
xchg
std
xchg
jle
cli
xchg
iret
mov
push
outs
add
push
out
xchg
(bad)
adc
jne
push
push
inc
add
pop
imul
pop
pop
xor
pop
inc
fistp
push
loope
(bad)
cmps
(bad)
jo
addr16
test
jg
(bad)
test
imul
add
inc
test
dec
lods
jo
addr16
mov
push
das
push
scas
aas
daa
ins
add
rcr
mov
xchg
mov
je
push
dec
fnstsw
cdq
push
call
push
or
xor
push
mov
jp
fsub
push
sub
sbb
nop
call
ss
in
fld
or
xor
mov
into
and
push
fbstp
mov
pop
loope
add
jno
xchg
std
pusha
(bad)
sbb
mov
dec
addr16
movs
pop
push
pop
mov
xchg
cmp
sub
test
(bad)
fld
jle
fld
push
xor
ds
sahf
call
dec
fsubr
xor
(bad)
jbe
into
mov
fs
add
jl
pop
sti
rol
xchg
xchg
push
daa
aam
(bad)
push
mov
cdq
aas
les
sub
ins
mov
mov
sbb
das
mov
mov
jg
sbb
or
outs
jle
xchg
mov
outs
sub
xchg
nop
pop
in
xor
test
push
mov
adc
mov
xchg
and
dec
fidiv
inc
les
leave
xlat
shl
push
pop
cmc
push
xlat
dec
pop
hlt
jp
(bad)
loope
enter
xor
dec
fidiv
inc
fld
jmp
cmps
inc
pusha
sbb
mov
pop
lea
xchg
jae
mov
sti
sbb
sub
adc
daa
mov
rol
es
sbb
icebp
add
(bad)
in
pusha
stos
xchg
lahf
out
cmp
mov
push
xor
mov
aas
mulps
and
fs
(bad)
xor
das
sub
int
sub
sbb
push
xchg
es
pop
test
mov
imul
fcomp
int3
cld
dec
mov
in
sbb
(bad)
sub
jmp
les
or
lock
mov
and
push
sar
inc
jecxz
jle
push
pusha
or
lods
enter
ret
in
cli
ds
adc
bound
pop
js
sbb
cld
cmp
push
mov
or
jg
and
mov
add
push
jle
leave
and
ds
fst
inc
stc
retf
inc
adc
jmp
mov
cmps
mov
outs
cmp
loopne
sar
xor
add
push
pmaxsw
scas
jb
mov
fs
cmp
lds
jno
sahf
mov
add
push
sub
lock
push
or
int
pop
cmc
dec
in
dec
(bad)
stos
sub
adc
shr
call
or
scas
pop
dec
not
ficom
out
dec
jmp
arpl
push
adc
mov
jge
je
add
and
test
add
retf
or
pop
jecxz
sub
or
adc
add
stc
repnz
push
dec
xchg
push
sub
push
loop
cmps
sub
test
mov
mov
popa
sub
loope
push
outs
xchg
cmc
inc
push
fs
lahf
data16
push
sti
push
ret
aas
pop
add
add
retf
xchg
xor
inc
jecxz
mov
add
aas
out
out
add
and
repnz
xor
into
mov
pusha
in
mov
pop
pusha
jno
dec
gs
pop
and
xchg
mov
(bad)
mov
mov
push
adc
lea
inc
movs
push
jnp
les
cmp
dec
jmp
xchg
push
in
in
retf
les
sbb
mov
outs
xchg
outs
je
fsubr
and
fwait
or
jae
adc
jmp
pop
add
loop
xor
stos
mov
lds
shr
cmp
mov
or
cld
arpl
das
fld
and
cs
inc
mov
das
add
mov
out
loope
sub
cmps
pop
inc
ror
in
push
sbb
(bad)
pop
add
repz
mov
daa
test
or
sbb
or
mov
iret
jmp
stc
inc
idiv
test
pusha
fidiv
es
mov
and
cmps
push
dec
aaa
sar
outs
addr16
fld
push
push
aam
fdiv
fucomp
push
dec
push
and
adc
loopne
into
xor
add
or
xchg
pop
pop
dec
and
cmp
call
dec
in
jg
xchg
push
fs
in
mov
sub
jp
pop
mov
cmp
push
fdivr
aas
call
js
jp
adc
test
(bad)
repnz
cmp
add
ins
xor
ins
or
leave
pop
out
cmc
mov
push
xchg
cmps
xchg
xchg
pop
cli
movs
imul
scas
xchg
jp
sub
push
mov
fadd
push
imul
and
xchg
xchg
and
icebp
pop
mov
jmp
call
or
jg
and
ja
jmp
pop
clc
fwait
iret
mov
cld
test
add
mov
(bad)
push
pop
jp
jno
push
push
shr
loopne
mov
mov
cmp
movs
mov
jl
and
mov
test
lods
in
mov
shl
cmp
xor
mov
cs
fmul
(bad)
ret
in
aas
hlt
cmp
movs
or
std
pop
test
cmps
push
or
push
inc
test
dec
lods
(bad)
xchg
add
mov
imul
mov
adc
mov
xor
les
jle
(bad)
bound
cmps
in
(bad)
dec
jle
cmc
fwait
xchg
cmp
pop
jl
jg
movs
pop
repnz
mov
retf
ins
push
mov
gs
mov
xor
mov
xor
add
push
neg
cdq
ds
es
pop
add
mov
mov
(bad)
shl
xchg
add
mov
sub
cmc
xor
push
std
adc
out
push
aaa
enter
push
jle
mov
xchg
xor
dec
pusha
xor
add
out
pop
add
mov
xor
and
mov
push
retf
aaa
lea
mov
lods
adc
imul
cwde
sar
pushf
jl
dec
in
fimul
mul
sub
clc
or
or
outs
xchg
and
cli
leave
cmps
cwde
retf
or
xor
imul
jno
push
add
scas
jne
into
fild
repnz
pop
out
inc
call
cmc
rcl
aas
les
lods
loopne
push
inc
pop
pop
in
dec
(bad)
out
sub
(bad)
pop
sub
push
cs
push
cdq
aam
test
mov
xor
imul
sahf
cli
push
adc
mov
adc
pusha
shr
aas
clc
jo
xor
add
sub
sti
sahf
push
inc
push
iret
pusha
jo
cmps
xchg
sub
pop
and
call
dec
ds
test
nop
in
xchg
xor
mov
dec
add
(bad)
mov
pop
jge
into
(bad)
adc
dec
fcomp
into
xchg
stos
adc
lds
mov
cmp
inc
pop
mov
inc
loopne
fnstenv
cli
xchg
mov
movs
xor
push
cmp
or
jns
scas
sbb
cmps
dec
or
jp
bound
jmp
je
out
dec
cmp
std
fwait
outs
xchg
data16
jmp
pop
push
cwde
mov
push
xchg
pop
xlat
inc
pop
sbb
jmp
xor
and
(bad)
lods
inc
inc
fs
cmps
js
pop
ja
shr
xchg
and
sahf
xchg
cld
adc
push
into
retf
iret
cmps
ins
aam
es
inc
fs
rol
out
rol
int3
push
retf
addr16
(bad)
mov
(bad)
(bad)
pop
enter
ss
push
mov
mov
inc
xchg
xchg
lods
inc
push
lahf
pop
mov
call
test
add
(bad)
push
and
and
rcr
xor
push
in
retf
push
cmp
and
out
mov
jge
push
pop
xor
arpl
mov
loopne
into
data16
into
and
jns
data16
dec
xor
sbb
idiv
mov
adc
and
dec
sbb
(bad)
jne
pop
sbb
xlat
ins
mov
push
push
jle
adc
leave
test
pop
stc
std
add
jae
sub
jp
mov
xchg
in
mov
inc
stos
inc
ins
cmp
imul
xchg
rol
clc
adc
aad
rcr
(bad)
fimul
jbe
cwde
xchg
cmp
adc
out
mov
aam
mov
sub
ins
sbb
jo
mov
fadd
inc
adc
mov
push
mov
pop
push
stos
pop
nop
add
mov
cmp
lods
push
mov
aad
cmp
sub
adc
js
dec
les
outs
pop
ins
inc
inc
cmp
adc
jo
pop
jge
lock
pusha
(bad)
fs
jne
fst
cmps
dec
sub
iret
lahf
fptan
add
in
sub
repnz
xchg
(bad)
xor
out
retf
les
cmc
sbb
(bad)
fmul
mov
mov
sub
outs
iret
mov
push
in
pop
jle
sti
sahf
inc
pop
adc
sar
imul
adc
shl
fisub
jne
push
and
push
cs
sbb
outs
leave
adc
iret
inc
jb
push
ins
imul
leave
jbe
add
sub
sub
rol
xchg
and
enter
fisub
lahf
jmp
lea
aam
jnp
int
stos
sub
jne
out
dec
aam
and
mov
xlat
add
mov
sub
inc
movs
add
loope
repz
inc
mov
dec
cmp
pop
mov
mov
into
xor
loope
mov
fs
cmp
add
jecxz
mov
(bad)
fidiv
cmc
or
clc
lock
lds
mov
shl
mov
cmc
mov
std
cs
or
ins
add
pop
mov
ret
push
movs
pop
clc
test
js
push
or
xchg
call
sbb
adc
add
sbb
add
inc
adc
stc
scas
xor
cdq
jmp
mov
gs
cli
out
cli
xor
test
jg
sub
push
call
or
dec
jle
fidiv
in
inc
fst
jno
push
pop
jmp
or
movs
sbb
or
cli
pop
shl
jmp
inc
jle
lahf
test
loope
mov
push
(bad)
lods
retf
xor
xchg
sub
mov
into
loopne
jb
adc
sahf
in
scas
cli
dec
lock
cmps
mov
mov
mov
xor
sub
jbe
jns
in
movs
push
pop
add
push
cmp
sbb
out
sti
popf
lea
inc
xchg
mov
xchg
cmp
hlt
pop
dec
jo
pop
mov
mov
popa
push
and
loope
cmps
dec
adc
cs
std
test
sbb
and
push
ror
into
jmp
pop
movs
cmps
xor
or
xchg
xchg
scas
inc
test
pop
out
sbb
leave
adc
les
or
test
mov
sar
dec
iret
sub
dec
pop
in
arpl
movs
test
int
cmc
fcomp
retf
sub
lahf
(bad)
mov
into
and
adc
xadd
mov
jmp
sbb
adc
in
add
test
mov
mov
std
lea
push
adc
fwait
dec
mov
lods
mov
xor
xchg
push
inc
mov
sub
ds
or
out
xor
xor
into
sbb
add
fwait
adc
out
shl
sbb
xor
jbe
sub
sbb
outs
in
jbe
push
push
cmps
add
enter
mov
add
add
mov
mov
xchg
(bad)
sbb
sahf
mov
push
(bad)
iret
mov
out
and
cli
movs
pop
add
(bad)
sahf
sar
mov
lock
inc
xlat
mov
aam
or
xor
xchg
push
inc
das
test
jg
sbb
mov
cmps
sahf
xchg
mov
sub
mov
push
lods
aas
int
push
mov
add
(bad)
jno
push
inc
and
adc
test
movs
movs
inc
ins
push
in
cld
(bad)
cmp
add
xchg
cmp
fwait
mul
jg
frstor
mov
(bad)
(bad)
jp
or
jnp
mov
in
push
jg
bound
std
xchg
out
mov
mov
stos
sub
adc
and
out
cmp
and
fisubr
mov
pop
push
dec
pushf
mov
aam
icebp
push
inc
iret
sub
call
sahf
imul
xchg
outs
mov
inc
fsubr
test
push
retf
inc
mov
inc
data16
cwde
jecxz
dec
or
(bad)
movs
jp
or
into
test
das
fs
inc
mov
test
pop
les
pop
pop
daa
out
fmul
adc
push
sbb
cmps
jo
gs
dec
xchg
push
movs
inc
mov
retf
js
loopne
aaa
mov
and
loope
ins
sbb
push
je
das
psrlw
shr
movs
mov
lahf
jnp
dec
lds
fisubr
fsubp
and
int3
nop
push
push
jnp
out
iret
xchg
inc
outs
cmp
hlt
mov
fld
in
stos
mov
cli
push
shl
xor
pushf
repz
xchg
inc
adc
mov
and
adc
imul
mov
and
movs
outs
pusha
mov
cs
out
in
jb
mov
rcl
or
(bad)
pop
mov
sub
pop
adc
xchg
cli
dec
retf
adc
loopne
cmp
fisub
push
xchg
adc
setns
in
push
mov
inc
shl
or
mov
xor
pop
xor
aas
outs
jno
nop
jmp
cld
xlat
dec
mov
enter
jb
aaa
xor
sbb
lds
mov
inc
adc
push
into
and
jecxz
imul
mov
(bad)
out
pop
imul
mov
jnp
xchg
cld
sahf
loopne
mov
add
(bad)
mov
mov
ss
mov
sub
sub
jbe
sar
add
push
sub
and
mov
bound
(bad)
pop
cmp
jnp
sar
out
cs
mov
das
retf
xlat
ficomp
mov
sbb
jp
push
int3
xor
cmp
movs
inc
aas
popa
inc
adc
retf
mov
sub
mov
fwait
push
retf
jns
es
xlat
lock
xor
mov
push
add
push
out
imul
mov
jp
or
dec
in
cli
daa
sub
(bad)
in
push
push
inc
ficom
or
(bad)
jecxz
mov
rol
das
adc
xchg
jmp
gs
out
pushf
and
push
mov
add
pop
data16
in
xor
sub
cmp
mov
shl
fbstp
popa
push
imul
mov
mov
mov
push
das
jmp
xchg
sub
ds
inc
xchg
movs
sub
mov
push
rcl
retf
je
cmps
xlat
xchg
or
fcmove
dec
icebp
and
into
add
sub
xchg
xor
cld
les
dec
movs
sbb
(bad)
outs
aam
push
xor
pop
add
adc
aas
cld
shr
jl
jmp
nop
test
jb
jmp
shl
xlat
pop
mov
int3
mov
mov
dec
stos
cmp
neg
(bad)
cwde
xchg
test
xchg
int
adc
add
arpl
in
mov
push
outs
shr
and
cli
pop
inc
lahf
inc
xchg
fistp
call
cwde
rcl
sub
inc
movs
enter
dec
ins
pop
and
xor
xchg
inc
in
mov
mov
mov
adc
cli
add
push
push
inc
dec
loop
mov
cmovge
sahf
adc
ss
jbe
(bad)
iret
retf
ins
je
or
add
scas
popf
push
inc
cmp
or
test
sub
sub
ror
aaa
xchg
cmp
add
mov
cmps
xlat
or
jl
xor
fs
sub
dec
lods
dec
fidiv
js
jle
pop
in
cli
(bad)
pop
jecxz
or
outs
pop
cmp
fidiv
loop
ins
xor
in
pop
jae
push
aad
aam
jb
xchg
push
js
xchg
push
into
sahf
imul
leave
jmp
inc
ss
sbb
mov
lods
mov
loope
pop
loop
or
cmps
out
dec
xor
(bad)
movs
(bad)
push
pop
pusha
adc
and
xor
sub
popa
rcr
lock
or
movs
pop
icebp
push
js
or
xor
cmc
jecxz
fadd
sub
shr
inc
mov
mov
scas
jge
adc
int3
adc
pop
adc
outs
jle
call
imul
fistp
int3
or
out
xchg
jmp
shl
jp
cwde
in
mov
and
fstp
push
aam
mov
fcomp
mov
(bad)
xchg
rol
xchg
mov
dec
icebp
cmc
ja
push
sti
xor
or
test
ret
or
retf
sub
xor
mov
aad
add
sar
ficomp
dec
xchg
sahf
fs
adc
adc
ins
icebp
fmul
lahf
sub
adc
and
push
int3
push
add
test
out
sub
out
fstp
dec
mov
push
lods
add
fisubr
and
sbb
xor
mov
stc
inc
mov
sub
mov
mul
in
(bad)
mov
stos
ja
inc
pop
mov
sub
jmp
jae
nop
outs
lahf
sbb
sbb
jp
pushf
dec
scas
push
movs
pop
and
push
cmps
call
test
push
lds
dec
leave
lods
or
ins
pushf
repz
stc
ds
mov
int
push
add
sub
inc
sbb
mov
inc
mov
fdivr
mov
mov
movs
rcl
(bad)
movs
mov
cmp
cs
(bad)
aaa
dec
push
jno
lods
xchg
ins
jnp
sub
mov
sbb
pop
dec
jno
push
ins
rcr
and
pop
fbld
je
inc
mov
cmps
test
push
out
arpl
fs
lock
rcr
leave
hlt
mov
push
cmp
gs
mov
mov
(bad)
jne
lods
out
cmps
cwde
retf
push
inc
xchg
mov
cmps
mov
rcl
retf
or
outs
mov
dec
dec
xor
outs
es
and
sub
mov
xchg
std
mov
test
cwde
ror
dec
dec
push
or
test
inc
cmps
rcr
nop
jle
mov
push
pop
sbb
mov
mov
ds
fisubr
je
out
in
adc
xchg
inc
mov
xor
shr
add
xchg
dec
mov
movs
xor
ja
cmps
fiadd
push
test
popf
retf
bound
scas
inc
outs
cs
ret
xchg
dec
stc
add
outs
jecxz
movs
mov
xor
out
cmc
sbb
out
div
call
mov
popf
(bad)
fisubr
pop
jecxz
push
mov
cmp
iret
mov
push
push
mov
pop
lods
xchg
push
xchg
int
mov
ins
cli
daa
adc
and
and
pop
inc
ror
adc
lds
es
sbb
scas
xlat
sahf
je
in
dec
sub
enter
je
cmps
ss
les
fisttp
aaa
xor
and
je
std
in
ins
pop
js
sbb
stos
mov
js
test
mov
add
xor
retf
mov
gs
xchg
pop
outs
mov
mov
and
hlt
dec
and
inc
add
ds
pop
adc
mov
mov
mov
test
xor
add
add
inc
cmp
mov
pop
mov
hlt
inc
sbb
retf
adc
fimul
cmps
push
xchg
fiadd
leave
push
das
and
mov
out
aad
push
mov
loop
mov
out
les
pop
je
jno
imul
cmp
jb
jle
ficomp
jmp
fsubr
fdivr
xor
push
ror
cmps
(bad)
in
xchg
pop
fisttp
das
inc
mov
adc
gs
inc
inc
push
sbb
ja
add
jg
(bad)
xchg
int3
add
cmp
adc
stc
mov
ds
adc
out
or
push
jmp
(bad)
mov
mov
movs
cwde
add
push
dec
xchg
jg
in
and
add
adc
aas
ins
mov
xor
rol
sti
bound
outs
test
in
rcr
mov
rol
ins
fidivr
push
out
push
add
pop
mov
mov
sub
mov
jp
and
sbb
and
lea
inc
aaa
jl
xchg
push
das
fiadd
or
loope
sahf
pop
push
push
mov
xor
(bad)
ds
add
push
adc
inc
and
es
push
inc
mov
mov
push
clc
test
xchg
xlat
adc
pop
add
dec
fldenv
mov
mov
jle
push
mov
stc
shl
cmp
and
dec
and
mov
icebp
outs
mov
call
push
dec
pop
sbb
ret
push
lds
das
push
cli
push
cmc
stos
mov
push
sub
je
lods
push
pop
dec
pop
mov
fld
daa
in
cmps
int3
mov
in
int3
push
int
scas
ror
mov
ja
mov
mov
xor
sub
imul
mov
(bad)
and
lods
add
pusha
xchg
mov
push
pop
cmp
imul
add
lods
out
fistp
int3
imul
lea
mov
sub
mov
ins
rol
ret
je
push
popf
push
call
mov
stos
cmp
inc
pop
and
mov
jg
push
xchg
xchg
cmp
js
inc
stos
jg
paddusw
and
pusha
ret
mov
int
push
sub
pop
sbb
(bad)
mov
movs
jb
push
(bad)
adc
xor
sahf
inc
mov
not
ds
jmp
jne
cwde
inc
fwait
xchg
xchg
and
pushf
je
adc
mov
and
jl
cmp
lock
out
in
ret
xor
sbb
cmp
inc
das
test
mov
push
jmp
pop
push
out
push
push
mov
test
nop
cmp
mov
push
dec
add
and
adc
pop
mov
mul
stos
sbb
out
bound
adc
int3
(bad)
push
jecxz
retf
les
dec
std
ins
jns
xchg
xchg
mov
push
punpckhdq
movs
ins
xchg
pop
sahf
ss
(bad)
mov
push
pop
lds
ins
add
mov
add
mov
mov
(bad)
pop
jp
push
mov
in
movs
xchg
iret
jbe
xchg
mov
adc
cld
jo
jbe
jno
lahf
xlat
pop
adc
xchg
fisubr
add
in
icebp
cs
pop
adc
movs
mov
dec
movs
popf
dec
sbb
sub
scas
fnsave
(bad)
loope
sbb
inc
dec
mov
dec
ret
retf
mov
(bad)
inc
scas
popa
ds
cs
dec
mov
sub
push
adc
scas
jnp
jmp
jnp
hlt
dec
sub
ins
sbb
xor
test
xor
jle
jp
leave
out
pop
repnz
(bad)
cmp
mov
lods
call
and
clc
icebp
sar
fwait
cs
mov
pop
push
jae
imul
push
mov
mov
test
adc
or
lock
adc
shr
(bad)
jl
je
lock
mov
rcr
icebp
or
jbe
add
out
inc
es
iret
lds
cmp
(bad)
ret
scas
retf
push
pop
aad
push
pop
cmps
pop
push
std
jns
adc
int
add
ret
dec
dec
mov
call
cmps
sbb
sbb
xor
push
enter
push
and
aad
shr
ficomp
cdq
into
outs
jg
cld
mov
iret
leave
ds
test
cmp
jb
jmp
dec
rol
mov
sub
sub
mov
or
es
jp
ds
sub
xchg
dec
jmp
minps
pusha
push
scas
icebp
pop
pushf
push
add
or
jmp
into
int3
in
fstp
jns
add
mov
mov
inc
std
cli
not
push
jne
ins
inc
mov
cmps
or
loope
mov
loop
test
pop
or
(bad)
in
inc
(bad)
jno
dec
xchg
scas
jmp
add
adc
ins
inc
jo
mov
push
dec
push
jno
movs
push
dec
add
mov
int3
int
push
mov
(bad)
(bad)
loopne
stos
and
lods
fdivr
repz
call
fbstp
fwait
(bad)
fwait
jmp
movs
adc
cmp
sub
je
hlt
scas
push
(bad)
movs
dec
adc
push
dec
sar
hlt
mov
lods
movs
mov
jb
or
lds
mov
jmp
add
xchg
in
in
mov
test
and
inc
lahf
fistp
scas
retf
ror
push
add
hlt
xchg
dec
aam
and
add
mov
jp
sar
jbe
sahf
lea
retf
and
(bad)
aaa
pusha
leave
in
sahf
cmpxchg
imul
dec
jo
cdq
push
test
nop
outs
add
cli
dec
loop
xlat
cmps
adc
dec
sahf
int
pop
or
xor
mov
inc
jae
sub
ficom
jle
mov
xchg
jmp
les
add
jnp
enter
adc
int3
repnz
mov
sub
mov
push
scas
jmp
call
loope
or
pop
jmp
sar
mov
add
push
test
jl
sub
xor
lahf
sub
mov
sbb
test
push
repz
mov
rol
iret
mov
imul
shl
pop
(bad)
push
fs
movs
out
dec
sar
out
mov
mov
cmp
xchg
out
hlt
push
push
sub
ret
push
sub
adc
adc
dec
pop
into
jae
dec
aam
mov
fs
(bad)
mov
sub
mov
or
push
fst
xor
add
pop
nop
pop
jle
cs
xchg
sub
in
sub
ficomp
call
(bad)
out
inc
inc
cmp
lea
sub
lds
push
outs
retf
adc
movs
jecxz
xor
cmps
daa
sub
(bad)
jl
movs
int3
ror
mov
fwait
repz
in
jl
push
div
mov
outs
jae
pop
xor
movs
test
and
cs
fcomp
(bad)
xchg
rcr
dec
jae
dec
xchg
mov
in
in
inc
hlt
add
mov
inc
inc
or
dec
stos
or
adc
mov
mov
loop
iret
xlat
pop
icebp
push
add
jmp
adc
mov
dec
xchg
adc
mul
je
std
mov
push
push
popf
pop
jle
lahf
add
sbb
fdiv
add
jns
push
sub
mov
ds
inc
cs
xor
push
aaa
test
sub
jl
retf
hlt
pushf
test
adc
mov
test
fidivr
jno
ins
(bad)
mov
inc
rol
in
jmp
pop
jo
ds
pop
bound
inc
ins
test
call
ret
loopne
cmp
add
lds
mov
aam
jmp
pop
push
pop
add
mov
xchg
repz
fimul
(bad)
sbb
mov
pop
mov
dec
pop
out
std
mov
pop
mov
sar
repnz
int
push
xchg
dec
aad
aam
das
pop
sbb
sbb
ja
hlt
push
aas
pop
or
or
sbb
cmc
jg
iret
push
mov
pop
xchg
outs
test
les
inc
and
in
(bad)
lods
pop
into
pop
jge
jae
adc
sahf
xor
stos
xor
mov
fwait
icebp
add
dec
xchg
iret
push
cmp
mov
daa
pop
gs
stos
ret
jbe
or
lock
mov
iret
push
adc
and
ds
les
(bad)
jmp
mov
adc
cmc
je
lahf
mov
cli
push
mov
mov
mov
push
das
cdq
jbe
sahf
adc
cli
inc
xchg
mov
mov
xor
or
or
imul
and
cs
pop
popa
ss
out
aaa
fst
jmp
(bad)
bound
jmp
lods
dec
mov
pushf
cld
mov
sar
xlat
pusha
rcr
inc
pop
adc
sbb
rcr
lock
add
leave
xor
retf
imul
pop
push
test
xorps
mov
sub
add
xchg
xchg
inc
out
push
mov
rol
je
sahf
in
lock
mov
mov
jmp
xor
xchg
aam
push
mov
and
scas
pop
je
xchg
js
ins
jmp
xor
or
ror
adc
xchg
repnz
push
jg
fwait
jnp
pushf
js
retf
stc
xor
sbb
out
adc
in
pop
loopne
scas
push
test
mov
(bad)
(bad)
scas
xchg
jae
stc
test
pop
scas
add
inc
aam
mov
and
mov
sbb
sub
cmc
lods
mov
cmp
inc
xchg
(bad)
movsx
mov
ins
xor
push
jmp
and
push
and
stc
xor
fnstsw
push
mov
frstor
scas
retf
jge
outs
lods
lods
adc
(bad)
pushf
inc
inc
stos
jle
popa
inc
push
lahf
hlt
push
mov
inc
push
jns
lods
or
mov
les
sti
mov
sub
dec
out
inc
cmp
and
pop
push
dec
movs
int
and
jb
popa
int
and
push
dec
test
aad
cld
xlat
adc
stos
cli
fnstcw
adc
lods
ins
xchg
outs
mov
jns
cs
or
jbe
pushf
adc
pop
fld
mov
cld
(bad)
mov
mov
into
mov
aas
inc
enter
aam
xor
in
rcr
mov
test
in
mov
shl
fadd
cmp
mov
mov
jle
inc
imul
mov
(bad)
mov
loop
pop
xchg
mov
mov
add
les
enter
call
out
xchg
cmp
jb
mov
pop
xchg
adc
cmp
xchg
jmp
hlt
ins
in
fs
lahf
push
cwde
test
iret
test
loopne
in
ret
sti
movs
dec
adc
and
sahf
mov
scas
xor
sub
ds
or
aad
dec
pushw
in
mov
faddp
mov
test
add
dec
xlat
cmp
(bad)
sub
dec
push
outs
and
jo
pushf
sbb
sbb
mov
nop
or
inc
mov
lahf
and
push
or
push
popa
dec
adc
fiadd
mov
movs
jne
in
sbb
and
retf
push
out
inc
inc
dec
pop
jns
mov
dec
dec
test
lock
ror
and
pop
nop
sahf
cmp
js
je
jp
sub
retf
or
fiadd
mov
mov
int3
dec
add
shr
jle
das
outs
aaa
popf
mov
cs
mov
jg
sbb
fimul
inc
mov
mov
ja
adc
xor
xor
xchg
scas
aam
cdq
or
mov
cmc
lods
dec
mov
sahf
shl
js
rol
loop
or
out
add
mov
mov
fist
inc
in
inc
(bad)
jecxz
ror
sar
pop
push
rol
outs
pop
cmps
or
call
adc
jge
push
loop
js
inc
(bad)
xor
pop
jns
repnz
cdq
dec
test
or
idiv
hlt
jecxz
fild
xacquire
mov
and
movs
data16
inc
add
cmp
mov
push
jecxz
(bad)
cmp
jbe
or
jl
add
ins
push
fmul
rol
push
outs
lock
aad
ret
iret
in
stos
pop
adc
daa
stc
xor
push
jbe
pop
mov
dec
dec
xchg
int3
cmc
push
mul
ins
push
aad
push
mov
(bad)
dec
push
mov
push
ss
das
jno
mov
aam
jno
push
out
mov
ja
dec
imul
jmp
adc
inc
es
test
push
in
jno
iret
sub
stos
out
mov
fist
fisttp
xchg
out
xor
(bad)
mov
inc
and
inc
aaa
aas
and
sub
je
or
aad
scas
in
fnsave
jnp
call
cmp
lods
test
or
dec
mov
retf
xchg
and
sahf
mov
jl
stos
into
sub
mov
cmp
lea
in
push
ret
pop
mov
jle
nop
push
xchg
xchg
test
test
aam
and
sub
or
lods
pop
test
retf
lods
(bad)
adc
into
sahf
dec
mov
mov
cmp
repz
push
outs
in
inc
push
jle
aas
cmp
pop
sbb
scas
pushf
cmp
mov
jg
jg
iret
sbb
div
call
nop
fistp
sahf
push
inc
mov
retf
cmp
fmulp
cmp
cli
movs
jo
loopne
fstp
and
pop
xor
aam
mov
mov
out
adc
hlt
int3
sbb
inc
out
(bad)
out
ss
stos
ss
retf
xchg
nop
stc
cmps
mov
push
push
shld
call
fnstsw
mov
ror
mov
outs
pop
ret
(bad)
pop
pusha
dec
dec
jbe
fld
gs
inc
lods
mov
jns
dec
jbe
mov
add
cmp
test
arpl
shl
dec
out
xchg
out
adc
sub
scas
fisubr
inc
and
sbb
outs
sbb
addr16
loopne
ins
jp
das
xchg
aam
sbb
int3
mov
mov
inc
icebp
sbb
test
idiv
psadbw
(bad)
stos
ss
adc
je
in
add
lods
push
in
outs
cs
mov
call
xchg
add
cld
jle
push
mov
outs
mov
scas
inc
mov
sahf
dec
out
pop
adc
ret
popf
fs
in
and
repz
adc
adc
aad
in
push
mov
add
(bad)
scas
xor
into
mul
xor
retf
imul
add
add
pop
movs
rcl
leave
push
(bad)
mov
(bad)
addr16
jmp
sbb
xchg
stos
aaa
call
inc
inc
mov
ins
test
popa
and
sbb
pushf
xor
xchg
into
fst
push
jb
data16
(bad)
js
in
bound
pop
jmp
fsubr
mov
add
stos
mul
jl
popa
or
dec
fimul
jl
jl
cld
xor
jl
in
ins
mov
mov
add
(bad)
retf
and
cmps
adc
daa
outs
repz
idiv
sbb
dec
mov
sub
out
sbb
outs
adc
push
scas
outs
adc
add
cs
loope
ds
jnp
mov
(bad)
fdiv
outs
mov
fnstsw
and
mov
ficom
mov
adc
jne
jb
es
movs
dec
mov
add
cs
or
loope
push
ret
mov
ret
cdq
out
adc
or
(bad)
dec
sub
mov
adc
xor
ja
xor
daa
adc
cmps
add
jl
outs
xchg
xchg
jae
inc
sti
inc
fdiv
and
jecxz
mov
sub
xchg
sub
and
ins
in
(bad)
sbb
std
mov
inc
jl
sbb
push
addr16
xchg
pop
dec
mov
movs
cmp
push
pusha
push
(bad)
std
pop
in
dec
fsubr
mov
sti
push
jmp
push
sbb
shl
push
in
stc
push
push
xchg
fadd
cmc
xor
inc
cmp
int3
push
std
aam
dec
nop
pop
or
fidivr
cmp
push
imul
movs
mov
(bad)
mov
mov
push
inc
test
pop
and
xor
adc
mov
push
dec
inc
dec
add
(bad)
jl
mov
inc
cli
in
jl
mov
lods
loope
cmc
add
jp
int3
pop
rcl
nop
cmp
add
(bad)
dec
das
(bad)
xor
mov
sbb
ficomp
arpl
fmul
mov
inc
xlat
sbb
mov
push
test
adc
or
cmc
xor
cmps
push
sub
not
sbb
push
mov
fcomp
cdq
nop
outs
test
jnp
mov
sub
not
and
into
pushf
mov
hlt
div
and
sahf
jl
cmp
pop
loopne
dec
iret
jne
out
adc
sahf
in
sub
xlat
inc
fcomp
or
imul
fistp
test
sub
sahf
in
es
in
in
add
pop
or
xchg
jg
cmp
mov
mul
in
inc
xchg
push
(bad)
(bad)
pop
loopne
stos
jno
stos
push
sbb
data16
dec
mov
mov
jo
dec
repnz
cmc
mov
cwde
pop
in
inc
aam
cmc
pusha
rcl
mov
dec
adc
out
sbb
(bad)
ds
xchg
mov
xchg
sbb
sub
(bad)
pushf
adc
lahf
ins
mov
repz
aaa
(bad)
pop
fbld
add
cld
sahf
(bad)
push
scas
cs
mov
mov
sahf
icebp
js
imul
js
mov
shr
leave
gs
ss
and
mov
pop
dec
jbe
call
mov
push
mov
shl
sbb
scas
call
or
les
push
xchg
enter
dec
mov
adc
xor
aam
inc
or
jle
out
das
rcr
bound
xor
retf
out
sub
inc
out
mov
ins
mov
out
xchg
push
loopne
jne
aam
cwde
cld
push
push
pop
aaa
mov
sub
shr
sbb
push
sbb
pop
cmp
push
ja
mov
call
sub
jno
jne
fbld
outs
inc
pop
ficom
mov
fsubr
popa
adc
in
jne
push
jmp
jle
in
into
cs
lock
cs
loopne
call
ds
add
gs
movs
std
adc
jbe
ret
push
mov
dec
scas
cld
fistp
ds
jmp
aam
xor
out
add
cs
jge
jns
(bad)
fdivr
add
call
(bad)
jns
sbb
inc
test
movs
dec
jo
dec
jbe
fimul
pushf
popf
(bad)
mov
jl
sub
jmp
jo
pop
xchg
jmp
test
movs
mov
jge
cmp
mov
scas
int3
hlt
out
mov
outs
jg
or
sub
push
dec
jl
push
imul
pop
and
mov
jg
adc
jne
pop
in
outs
daa
popf
leave
mov
xchg
xor
push
mov
stos
or
and
pop
cld
xor
adc
mov
jle
dec
hlt
jnp
push
sub
adc
popa
jg
or
(bad)
inc
hlt
add
cmc
(bad)
adc
cdq
bound
enter
xchg
jno
and
sahf
iret
pop
jne
pop
push
inc
in
(bad)
jbe
out
dec
ins
test
jp
dec
mov
in
sub
sub
retf
adc
loop
in
arpl
ret
out
mov
ds
push
in
mov
and
pop
mov
mov
and
mov
ins
jl
les
adc
cmp
push
call
aaa
repnz
(bad)
bound
fcmovu
retf
push
cli
adc
lea
jp
gs
mov
pop
or
out
sbb
xor
nop
stos
fisttp
popa
lahf
xchg
push
fadd
mov
shr
xor
ds
mov
or
(bad)
retw
inc
outs
call
daa
out
xchg
das
lods
call
mov
or
arpl
test
xchg
popa
xchg
pop
jae
neg
adc
mov
bound
mov
push
add
pop
jle
popa
adc
xor
outs
nop
test
or
inc
push
das
push
in
mov
aas
pushf
test
ficom
sti
scas
mov
ret
xor
push
stos
sbb
pop
sub
ror
xor
(bad)
xor
ret
repz
int
adc
push
pop
dec
pop
dec
adc
pop
add
xor
sub
cdq
lock
fs
fwait
jno
lods
jns
xchg
pop
cli
clc
mov
cmps
gs
xor
les
loop
(bad)
std
clc
scas
xor
xor
retf
(bad)
lahf
pmaxsw
test
cmp
cmp
vunpcklps
es
xchg
xor
sbb
sub
ret
mov
pop
hlt
(bad)
rcr
pop
sub
dec
aaa
push
pop
pop
mul
fild
inc
fdiv
ss
loopne
adc
or
retf
pop
jle
movs
cmps
xor
rol
inc
out
cs
mov
or
mov
popa
adc
test
xchg
lods
leave
daa
pop
sub
dec
push
sbb
sbb
mov
pop
push
loop
ret
inc
sahf
mov
xor
outs
shr
dec
adc
fsub
inc
test
jp
add
and
push
xor
or
fldenv
and
(bad)
lock
cmp
xchg
and
out
xchg
data16
mov
fst
pop
adc
sub
pushw
(bad)
pop
scas
push
or
sub
dec
in
pop
mov
stos
ret
mov
int
cmps
aam
xchg
mov
jnp
hlt
out
push
xor
xor
sbb
inc
inc
pop
repnz
out
test
jle
cpuid
or
dec
dec
and
(bad)
sub
sub
(bad)
fisttp
fbld
pop
imul
inc
pop
sar
in
loope
cli
inc
or
xchg
mov
in
lods
jbe
adc
cmps
xchg
lea
pusha
mov
les
retf
(bad)
adc
xor
sub
xchg
cmp
movs
stos
sub
retf
(bad)
xor
out
js
lock
into
pop
cmps
(bad)
xor
adc
mov
mov
dec
out
int3
test
pop
popf
adc
mov
cmp
jnp
sbb
ror
pop
jae
push
aad
cmp
(bad)
sahf
sahf
loopne
mov
outs
pop
outs
xchg
mov
(bad)
loopne
aad
aad
ins
lock
jmp
fwait
icebp
pop
or
add
leave
cli
into
and
add
xchg
inc
and
in
xor
fsubr
rol
adc
cmp
call
dec
sahf
mov
push
jmp
(bad)
lahf
jns
or
(bad)
(bad)
pop
scas
mov
mov
dec
mov
fs
mov
xlat
cs
and
xlat
into
mov
mov
and
push
and
test
hlt
test
in
xor
mov
pop
xchg
sub
add
inc
stos
mov
mov
lods
ror
shl
daa
dec
push
inc
xchg
push
dec
mov
fwait
cmp
ins
(bad)
aad
aas
sahf
out
das
cmp
repnz
and
sahf
outs
movs
and
jmp
shl
test
mov
pop
push
and
mov
loop
dec
sahf
dec
int
or
femms
ja
loopne
aam
cmc
push
pop
(bad)
pop
div
inc
add
cmp
into
jmp
inc
mov
dec
sub
jg
inc
inc
xchg
pop
dec
jmp
adc
nop
(bad)
xor
dec
fsub
lods
jb
jns
push
scas
jb
dec
fidiv
inc
mov
xchg
xchg
cmp
add
in
data16
mov
idiv
repnz
mov
dec
and
cmp
adc
mov
xchg
or
ret
xchg
mov
cwde
in
mov
inc
xor
loop
inc
sbb
aas
mov
cmp
xor
(bad)
and
(bad)
adc
mov
sub
pop
sub
adc
(bad)
dec
mov
and
cmp
mov
push
in
imul
fsub
(bad)
pop
rol
xchg
adc
and
or
out
loop
enter
sbb
bnd
scas
ret
xchg
and
dec
ja
dec
cmp
cmp
inc
sub
pop
mov
push
xchg
les
dec
add
mov
inc
xchg
dec
sub
(bad)
into
jae
lock
rcl
ins
xor
dec
cld
shl
and
iret
pop
add
out
add
xchg
cmp
mov
(bad)
out
fs
jecxz
test
clc
inc
mov
jbe
push
push
mov
jo
sar
cmp
adc
je
test
out
jbe
mov
sub
mov
mov
cwde
loope
ficom
xchg
cmp
push
je
sub
repnz
iret
setb
out
push
xchg
jmp
dec
std
clc
sbb
out
call
inc
cld
cld
cld
es
fdivr
cmp
outs
fs
cmp
retf
loopne
call
es
fldcw
cmps
xor
add
scas
mov
dec
out
and
(bad)
popf
mov
out
iret
xchg
fadd
mov
adc
xchg
imul
ds
lods
or
jecxz
mov
inc
xchg
adc
sub
ret
adc
fldcw
and
push
mov
adc
shr
xchg
push
retf
mov
pop
ins
nop
jne
lds
mov
scas
fiadd
call
xchg
and
push
out
popa
mov
test
xchg
mov
aam
pop
push
add
sbb
push
les
shl
lahf
cvtdq2ps
push
dec
push
ror
sbb
ror
push
jg
cmp
retf
fsub
int
movs
mov
jbe
mov
cmps
(bad)
jg
fiadd
cmp
xchg
mov
hlt
pushf
enter
(bad)
lock
outs
scas
daa
mov
imul
sti
sbb
dec
inc
jle
int
idiv
cmps
call
test
shl
pop
cdq
mov
adc
leave
inc
stos
push
xchg
cdq
inc
lods
mov
jbe
push
fcmovbe
xchg
sub
xchg
jl
into
mov
mov
jp
mov
jle
mov
repnz
imul
sub
xchg
in
mov
push
jl
xchg
ins
fidiv
ins
call
pop
xchg
mov
mov
lahf
jge
and
pop
dec
das
jb
xchg
push
push
arpl
enter
sub
bound
mov
adc
jne
mov
ja
mov
add
mov
imul
(bad)
call
mov
mov
je
scas
fisubr
(bad)
cmp
sbb
jle
jmp
mov
inc
sub
scas
cmps
sub
jmp
ror
mov
std
mov
sub
hlt
push
outs
add
icebp
fwait
sub
dec
ficomp
pusha
leave
sbb
sbb
stc
push
repnz
inc
aad
jg
repnz
outs
lods
movs
mov
and
(bad)
cs
mov
jl
pop
cld
stc
fwait
mov
loopne
mov
sub
xor
xor
pusha
xchg
push
sbb
add
jle
jmp
scas
dec
popa
adc
push
push
jo
daa
inc
jmp
pop
push
je
dec
test
int3
(bad)
out
jns
je
test
mov
jl
loop
cmps
jbe
test
jle
mov
aas
cs
push
add
or
shr
int
add
lds
loop
dec
scas
dec
add
push
sbb
mov
or
das
or
or
(bad)
movs
scas
cmps
jne
jo
adc
int
mov
popa
pop
push
xchg
retf
mov
jg
das
stos
jb
jmp
ret
(bad)
cld
push
lea
or
jnp
jg
xchg
inc
es
out
popf
or
shrd
scas
jl
xchg
push
push
das
push
and
mov
cmc
pusha
push
out
(bad)
das
adc
daa
dec
or
mov
xchg
push
jecxz
scas
mov
es
lds
je
mov
shl
(bad)
xchg
in
mov
mov
fwait
mov
aas
out
fidiv
inc
int3
sbb
daa
and
mov
aam
mov
cmp
dec
stos
cmps
xor
and
out
std
mov
fidivr
push
in
(bad)
xor
int3
xchg
repnz
jle
ret
mov
add
or
and
pop
cmps
jmp
loopne
mov
cmp
jo
mov
ss
and
xchg
retf
daa
js
sahf
pop
push
mov
add
repz
inc
mov
push
call
dec
cmc
mov
sbb
loop
cmp
push
dec
xor
jp
adc
add
inc
cdq
arpl
xchg
lods
inc
sbb
and
mov
movs
iret
sbb
jnp
push
sub
cmp
pop
aad
jl
sar
shl
mov
rcl
mov
xchg
jl
pop
call
sbb
xor
adc
jo
sbb
push
xchg
mov
sub
movs
cli
xchg
jle
iret
inc
outs
push
lds
out
add
jg
dec
pop
cwde
dec
inc
push
pop
add
pop
or
in
push
addr16
pusha
or
jp
shr
push
into
mov
and
(bad)
movs
fcom
aam
loope
neg
call
repz
pop
mov
xchg
jp
dec
les
call
imul
(bad)
sti
pop
out
shl
push
call
sub
push
out
mov
and
out
movs
(bad)
lock
(bad)
and
xor
mov
mov
adc
add
test
inc
xchg
cs
mov
mov
sbb
fsub
js
das
gs
scas
jl
popf
cdq
cmp
gs
je
cmp
sbb
nop
outs
scas
outs
iret
and
pop
add
cmps
xor
es
cld
mov
out
jle
pop
and
inc
outs
imul
sub
in
pop
pop
sub
xchg
in
inc
mov
std
scas
pop
bnd
push
push
xor
imul
sbb
call
xchg
cdq
inc
cld
das
jb
and
in
pop
cmp
pushf
enter
aas
mov
sbb
cdq
cmp
aam
sub
test
mov
int3
jl
xor
(bad)
mov
xchg
mov
xchg
call
add
xchg
js
add
and
mov
push
adc
movs
pop
(bad)
pop
mov
popa
imul
repz
aam
pusha
aad
jo
in
test
pushf
movs
jnp
dec
scas
ins
aad
aad
sbb
fs
repz
sbb
cmc
lods
jmp
add
mov
std
and
sub
cdq
(bad)
mov
push
mov
sbb
push
xchg
test
lahf
sub
aad
mov
int
fdivrp
fstp
dec
mov
out
sbb
fstp
stos
(bad)
xchg
aas
push
(bad)
push
and
xchg
das
lds
push
je
push
lock
repnz
loopne
jbe
or
cmp
and
and
mov
dec
pop
sub
adc
dec
xor
and
add
retf
cmp
mov
dec
ret
jp
addr16
into
lods
shl
cld
or
es
retf
adc
data16
cs
jge
(bad)
push
cmp
fisub
arpl
dec
je
mov
sbb
add
(bad)
out
test
scas
(bad)
jo
mov
or
out
push
(bad)
call
xchg
inc
adc
adc
inc
out
cmp
es
xor
inc
or
sub
sbb
mov
xor
out
mov
dec
(bad)
in
(bad)
mov
xchg
lds
dec
push
fidivr
pushf
jno
cmp
mov
ret
dec
push
push
cmp
(bad)
call
xchg
mov
sti
loop
cli
aas
scas
and
scas
or
popf
push
push
in
retf
add
pusha
add
das
push
movs
or
pop
js
out
xor
fnsetpm(287
cld
(bad)
fbstp
popa
mov
test
dec
loope
pop
xlat
fwait
add
(bad)
daa
lds
mov
test
fsubr
ss
sti
add
pusha
sub
jl
add
test
push
call
mov
ins
ss
rcl
fisub
cmp
xchg
dec
aaa
cmp
cmc
bound
cmp
adc
loopne
push
movs
fimul
dec
sar
mov
push
nop
ja
std
or
mov
fsubr
cld
inc
xchg
mov
in
sbb
into
dec
xlat
stos
dec
add
fs
pusha
loop
(bad)
xor
add
cli
scas
test
(bad)
mov
dec
inc
mov
adc
(bad)
lock
mov
mov
xchg
xor
shl
in
scas
adc
push
call
dec
sub
xlat
cmps
cbw
cld
iret
xchg
jl
ret
jne
outs
mov
out
scas
xor
leave
pop
popa
lahf
sbb
pop
xchg
xor
in
setl
sbb
jno
icebp
sbb
jmp
sub
jl
dec
fidiv
push
mov
sbb
mov
or
out
or
pop
adc
scas
ror
div
cs
bound
mov
or
cwde
test
add
(bad)
sbb
mov
aam
adc
pop
pushw
and
xchg
lahf
les
mov
add
cs
(bad)
hlt
out
sub
clc
pop
and
leave
mov
sub
clc
adc
add
fsub
call
inc
cmp
adc
outs
pop
xchg
fnsetpm(287
jle
cmp
pop
mov
or
clc
enter
cs
bnd
nop
mov
test
mov
inc
in
hlt
add
adc
das
je
cmp
push
outs
xchg
(bad)
cmps
dec
test
les
out
shl
push
push
inc
into
push
shl
xchg
adc
pop
xor
and
dec
hlt
sub
xor
sub
fidivr
add
pop
scas
push
sub
pop
mov
(bad)
scas
xlat
je
push
hlt
sub
adc
retf
and
jb
xchg
out
rcr
mov
fld
rcr
dec
xor
mov
inc
lods
mov
pop
fs
outs
jae
repz
(bad)
lahf
fmul
lock
sub
mov
in
lods
or
sub
pop
add
xor
ins
cmp
imul
sub
pushf
sbb
in
(bad)
cld
repnz
dec
inc
or
jno
push
adc
mov
sbb
push
push
cwde
sub
stos
loopne
fs
js
add
push
or
das
push
mov
jo
xchg
arpl
pop
nop
rol
push
sub
mov
repnz
pop
mov
mov
ins
test
push
outs
stc
mov
test
cld
daa
xchg
arpl
rol
xor
dec
cmp
and
cli
fwait
mov
push
add
mov
sub
fdiv
mov
(bad)
sbb
push
mov
fs
jns
jbe
or
aam
mov
and
fucomi
dec
jmp
loopne
into
fsub
inc
hlt
adc
std
ins
movs
jne
imul
xor
adc
sub
ror
push
or
jle
retf
call
jns
push
call
push
mov
adc
fdivp
push
pop
push
push
rep
gs
ret
js
inc
(bad)
xchg
repnz
in
mov
int3
scas
or
leave
int
jmp
xor
movs
stc
adc
mov
sar
cmp
out
xor
inc
ret
jne
mov
scas
inc
int
push
add
pop
adc
test
ins
(bad)
mov
daa
jmp
push
or
icebp
xchg
leave
dec
mov
sahf
inc
mov
scas
jne
ret
inc
xor
out
ds
sbb
xor
jb
ret
mov
mov
shl
cwde
jecxz
add
in
rol
dec
clc
mov
inc
pop
mov
ins
out
xor
sbb
mov
xor
call
push
mov
ja
push
cmp
into
xchg
jecxz
sbb
mov
add
movs
test
jbe
jp
scas
cmp
loopne
cdq
push
push
mov
push
rcl
retf
sbb
ds
mov
xchg
ror
retf
adc
and
adc
nop
mov
jbe
inc
aaa
push
dec
jp
fisttp
(bad)
retf
xchg
add
add
jl
fdiv
xor
xor
push
xchg
mov
in
(bad)
add
fdivr
dec
cmp
adc
test
jno
sbb
pop
mov
or
fisubr
jmp
rcr
push
sub
(bad)
sub
mov
fwait
hlt
aad
in
sub
jmp
mov
mov
xor
loop
fldenv
pop
out
sub
adc
add
mov
push
call
inc
shl
call
pop
loop
push
mov
dec
cmp
xchg
push
push
xchg
dec
push
pop
cwde
dec
ficom
cs
sbb
xor
mov
mov
jg
enter
dec
xchg
lock
adc
sub
call
aaa
jae
fs
dec
jmp
jg
call
fstp
mov
cs
out
cld
test
gs
jo
cs
aad
xor
inc
btr
push
int3
hlt
pop
or
ds
xchg
test
mov
call
xchg
and
mov
ret
cs
fidiv
add
loope
frstor
mov
frstor
movs
outs
test
mov
or
inc
jecxz
scas
call
mov
jne
aas
inc
xchg
jp
jb
std
jge
jb
adc
inc
mov
sub
cdq
dec
icebp
mov
sbb
pop
ret
ins
cmps
fcom
xchg
mov
cmps
pop
push
ficomp
cmps
jmp
bound
(bad)
cli
jae
or
sub
enter
mov
mov
cmp
lds
lods
idiv
push
jmp
ror
test
bound
bound
leave
jmp
inc
retf
fisttp
sub
xlat
ins
xor
inc
popf
fwait
pop
ret
pop
or
xor
je
xchg
mov
(bad)
cli
shl
jmp
(bad)
pusha
jge
xor
test
mov
shl
jl
push
cld
sbb
and
adc
pop
fcmovnu
mov
fwait
pmaddwd
bound
xor
pop
adc
sar
test
(bad)
xor
into
mov
in
in
clc
dec
hlt
xor
cmp
or
cs
push
std
enter
sbb
xor
xor
cmps
pop
sahf
dec
int3
mov
hlt
fs
mov
mov
cmp
and
and
loopne
xor
lods
clc
mov
sub
aam
outs
push
sar
scas
mov
dec
push
int
pop
pop
ficom
aas
and
mov
pop
inc
inc
scas
inc
mov
mov
cmp
cmp
int
adc
adc
ficomp
mov
pushf
pop
lods
out
hlt
push
movs
inc
fimul
pop
jne
xor
xor
xor
scas
jno
jl
jmp
popa
(bad)
enter
add
shl
out
cmp
rcl
scas
arpl
push
ds
into
mov
lds
loopne
rcr
cmc
scas
hlt
jecxz
push
in
sar
mov
jne
dec
addr16
les
xor
(bad)
out
dec
cmc
adc
into
out
cmp
pusha
out
cmp
mov
adc
push
repnz
xor
push
aad
movs
bound
cmps
cmp
or
in
sub
cmp
fbstp
(bad)
hlt
out
xor
int3
push
add
mov
mov
into
jb
inc
mov
push
pop
test
adc
pop
dec
out
mov
inc
es
scas
pop
lods
ja
cmp
mov
push
xor
add
fidiv
mov
jmp
lods
shl
outs
je
push
(bad)
mov
das
les
add
movs
int
mov
mov
mov
inc
test
sbb
add
or
(bad)
call
fisub
sahf
addr16
cdq
iret
or
movs
dec
movs
sbb
mov
clc
loopne
jecxz
jae
jb
(bad)
(bad)
in
test
and
pop
dec
imul
(bad)
into
jmp
aas
cmp
mov
int3
fld
cdq
push
dec
jae
dec
add
js
xchg
adc
jmp
es
icebp
in
rcr
out
mov
mov
mov
ja
cmc
ins
or
jae
cmp
and
cmp
sbb
bound
not
mov
xchg
sub
outs
xchg
or
sub
das
daa
call
sbb
push
shl
ins
addr16
mov
sub
adc
iret
xor
cmp
lahf
cmps
jge
dec
dec
xor
call
xor
(bad)
icebp
arpl
mov
and
and
js
push
fwait
je
mov
adc
and
add
ds
out
sub
push
mov
xchg
imul
out
pop
stos
repnz
les
lock
aad
mov
in
push
clc
ins
cdq
adc
loopne
ret
pop
xchg
mov
ds
inc
into
sub
xchg
stc
je
xchg
pop
cmp
jmp
jae
int
leave
cld
out
je
inc
fidivr
(bad)
mov
add
adc
inc
adc
adc
jl
or
aad
ret
sub
loope
push
leave
(bad)
sbb
mov
in
retf
xchg
cmps
xchg
push
push
cli
cmp
rcl
retfw
jbe
cmp
popa
mov
inc
ror
bt
hlt
push
adc
or
mov
sbb
mov
mov
lahf
mov
push
sbb
in
loop
mov
out
in
imul
sub
(bad)
mov
jbe
test
loopne
push
or
das
dec
push
jecxz
sub
dec
add
jle
movs
pushf
sub
jno
fwait
cmc
lea
imul
out
in
add
sbb
ins
iret
lds
dec
add
add
cmp
cwde
sbb
stos
ret
xchg
in
pop
and
jmp
out
xchg
div
dec
and
push
mov
out
shr
int3
ds
aam
inc
mov
daa
out
sbb
test
jp
call
jle
rol
sahf
or
mov
pxor
xchg
ss
mov
shl
adc
int
fwait
push
ds
mov
jge
addr16
mov
into
sbb
loop
add
adc
mov
mov
cs
mov
neg
inc
mov
cmp
popf
pop
jle
jp
ins
std
shl
add
mov
(bad)
loopne
scas
mov
out
loop
pop
data16
mov
push
dec
popa
mov
xchg
icebp
pop
sahf
shl
popa
mov
xor
mov
sub
call
into
cmp
dec
jae
mov
iret
inc
scas
cmp
pop
push
outs
sub
or
shl
aad
add
mov
stos
and
add
test
popa
dec
push
into
lds
aad
in
movs
pextrw
out
adc
inc
sbb
jns
mov
lds
aas
or
or
daa
pop
iret
fimul
mov
(bad)
mov
pop
cdq
cmp
lock
sbb
ds
and
sub
inc
sub
and
mov
pop
jmp
loope
fs
pop
hlt
or
cmp
jae
mov
mov
js
mov
loopne
mov
jae
push
(bad)
push
and
xchg
std
int
pusha
add
bound
xchg
mov
jno
mov
fadd
call
repz
jae
pop
call
movs
pop
mov
sub
mov
fnsave
pop
sahf
dec
icebp
dec
sahf
mov
cmc
jo
imul
daa
jnp
jmp
xchg
add
mov
jmp
movs
pop
mov
cmp
adc
fiadd
or
pop
bound
ds
jecxz
in
inc
ins
cmps
sub
sub
daa
jg
push
xchg
lahf
mov
dec
adc
ss
xchg
jmp
sub
clc
add
fdivp
ret
cwde
je
xor
adc
outs
mov
call
dec
jg
out
popa
rcl
rol
gs
sbb
jns
ins
std
ss
dec
mov
outs
cmp
pop
inc
jae
gs
xor
outs
mov
add
retf
leave
cmc
test
dec
mov
mov
sub
sbb
mov
inc
mov
mov
fmul
cmps
test
xchg
or
dec
sbb
cmp
jbe
inc
rol
cmps
sbb
call
pop
movs
xchg
je
test
mov
jmp
out
mov
iret
sub
jno
sbb
(bad)
scas
out
test
inc
fcmovbe
mov
popa
mov
or
in
sahf
adc
in
sahf
imul
daa
pop
out
cs
in
add
je
stos
ret
adc
inc
lahf
inc
push
test
mov
aad
or
pop
push
or
mov
add
cdq
test
cmovb
sub
aad
pop
mov
test
mov
popa
popf
xchg
pop
ds
idiv
test
rcr
lock
aaa
clc
push
adc
cmps
clc
add
jnp
cmc
retf
xchg
sub
xchg
test
movs
jge
stos
adc
xor
mov
jmp
fist
lahf
add
shl
nop
jnp
jne
je
mov
(bad)
out
cmp
push
sub
xchg
add
and
push
dec
mov
pushf
sub
cld
cdq
push
mov
adc
cmp
xchg
lds
mov
xor
in
sub
iret
mov
xor
cmps
clc
push
sti
push
mov
ret
or
in
adc
mov
cmp
pop
pop
lahf
push
out
cmp
call
or
or
into
sub
fimul
clc
adc
sbb
inc
cmp
gs
sub
stos
xor
mov
sbb
aad
daa
repnz
imul
mov
popf
jl
and
xor
shrd
call
call
mov
pop
jo
loop
fisubr
mov
ins
popf
push
hlt
cmp
xchg
cs
ss
loopne
enter
add
in
sub
xchg
dec
ror
std
ret
xchg
adc
add
and
inc
xchg
mov
cli
call
cmps
pop
out
(bad)
test
push
enter
hlt
sahf
xchg
(bad)
xchg
scas
push
lahf
test
loopne
adc
push
jmp
aas
pop
push
jg
popf
sbb
loopne
bound
cmp
in
enter
jns
cmp
jmp
cld
das
ins
cwde
jbe
or
mov
enter
out
fild
cs
cmp
mov
dec
push
inc
cmp
push
mov
sbb
or
and
pop
adc
mov
mov
add
(bad)
mov
enter
aam
cmc
into
push
jg
mov
sub
sbb
inc
ins
outs
sbb
cld
fisttp
(bad)
xor
and
sahf
mov
mov
nop
inc
pop
mov
adc
push
add
aam
pop
mov
in
mov
nop
adc
jg
inc
lock
movs
test
inc
sbb
cwde
mov
push
mov
scas
xlat
scas
aam
fiadd
jle
ins
dec
pop
mov
pop
adc
add
icebp
ror
(bad)
cmp
sub
lea
movs
dec
mov
pmaxub
js
(bad)
mov
mov
jne
mov
in
pusha
movs
iret
test
pop
cs
fs
ds
xor
or
and
ds
xor
imul
imul
pop
(bad)
lea
shr
out
sbb
shr
repz
mov
test
mov
mov
adc
mov
cmc
adc
fs
mov
push
add
or
dec
mov
hlt
mov
cmps
cmp
adc
pushf
adc
xor
sar
ret
bound
je
mov
jne
gs
cmps
fisub
sbb
and
sub
sub
sbb
inc
aas
push
scas
fs
add
cmps
mov
cmps
lods
add
inc
les
xlat
fiadd
stc
fnsave
std
sub
and
pop
iret
dec
fs
in
hlt
dec
or
sbb
shl
dec
jae
test
js
mov
xor
movs
xchg
and
les
movs
sub
imul
outs
inc
shl
std
dec
push
fidivr
or
bound
loop
fisub
test
or
adc
mov
jle
ss
jle
add
outs
mov
out
ror
add
fs
mov
mov
mov
mov
cwde
test
test
das
je
mov
adc
cmp
dec
ret
pop
add
xor
jns
bound
and
in
das
nop
shr
out
in
icebp
scas
jmp
xchg
jne
int3
scas
movs
pop
mov
pop
mov
xor
lods
ins
or
out
enter
inc
cmp
add
ret
xor
add
leave
pop
or
ds
in
and
(bad)
jne
push
movs
test
sbb
sar
icebp
jecxz
adc
xor
xchg
fmul
xor
nop
mov
pop
in
ficomp
or
fisttp
stos
popa
aas
test
sbb
hlt
adc
cmc
jg
aam
and
loopne
push
or
ret
sbb
adc
cmps
dec
adc
out
push
push
pop
and
das
pop
call
repnz
iret
repz
inc
mov
push
push
and
(bad)
sahf
mov
out
(bad)
mov
dec
fucom
lea
mov
dec
movs
pop
push
loop
loopne
(bad)
and
push
enter
mov
mov
pop
out
je
jl
pop
into
sahf
arpl
mov
les
or
xchg
lods
push
or
outs
jne
stc
mov
jo
add
fsub
popa
sbb
add
xchg
cmp
mov
popf
mov
pop
aas
xchg
lods
and
cs
mov
and
imul
out
movs
pop
mov
lds
and
shl
xor
or
pop
jns
xor
out
or
sbb
pop
sub
cmp
sar
dec
lock
(bad)
outs
jae
jb
jmp
xchg
add
inc
or
outs
mov
adc
mov
fadd
push
dec
dec
fs
adc
out
loop
repnz
pop
push
mov
out
ins
inc
xchg
test
mov
add
mov
dec
js
into
push
mov
push
xchg
movs
test
add
adc
add
dec
scas
sub
movs
rol
push
pop
pop
push
inc
mov
arpl
fstp
das
lds
push
aam
or
mov
jne
test
jl
arpl
(bad)
and
adc
pop
sbb
xor
lahf
in
or
je
inc
pusha
and
das
psrld
out
das
fst
stos
pop
cmp
jg
js
(bad)
aas
les
(bad)
mov
add
mov
hlt
lock
mov
xchg
xchg
(bad)
cli
aas
aam
adc
loope
repnz
mov
cmp
jno
pop
mov
fadd
adc
hlt
cmp
push
pop
xor
not
and
dec
mov
outs
dec
dec
adc
lods
mov
pop
push
(bad)
clc
xchg
xor
shl
xchg
dec
inc
dec
lds
gs
ins
dec
aam
retf
dec
jmp
push
pop
aam
mov
cmp
outs
enter
mov
dec
movs
aas
push
dec
and
shl
push
push
in
xor
push
mov
jle
test
mov
mov
dec
cs
or
pop
and
jecxz
out
fwait
push
clc
mov
enter
mov
arpl
fcmovu
data16
cmp
sub
in
or
cmp
js
test
aam
in
test
mov
shr
add
xchg
push
retf
fst
call
mov
sahf
inc
mov
hlt
push
sub
pop
jle
in
fldenv
mov
pop
cwde
outs
mov
scas
mov
mov
les
or
int
and
mov
and
adc
rcr
fdiv
movs
stos
pop
das
fimul
add
(bad)
jle
cdq
test
cmp
adc
and
sub
inc
adc
cmps
mov
shr
inc
imul
das
sar
inc
mov
mov
aam
(bad)
aad
iret
sbb
sbb
dec
popa
dec
test
(bad)
and
arpl
cmc
or
dec
add
call
fwait
aad
movs
mov
rcl
out
dec
mov
sub
bnd
jle
jns
pop
test
sub
fsubr
and
inc
loop
sub
push
std
pop
mov
je
lods
test
xchg
rep
jecxz
sbb
iret
adc
in
test
and
mov
xchg
scas
fstp
hlt
pop
fmul
loope
xor
mov
jg
cmp
shl
jp
mov
inc
jp
mov
movs
mov
cwde
cmp
fisub
les
sbb
js
mov
push
push
mov
jmp
and
mov
push
mov
dec
xchg
pop
jns
mov
push
mov
int3
jo
fistp
adc
iret
pop
push
cmp
and
xor
xchg
sub
adc
mov
jae
jns
adc
mov
in
push
(bad)
in
push
xchg
add
jne
jne
idiv
mov
lock
push
loopne
mov
and
sti
pop
jmp
fwait
jns
gs
push
stc
inc
cmc
push
pop
out
psrlq
aaa
retf
and
fwait
and
pop
inc
fisubr
popf
sbb
sub
sub
push
shl
jne
aaa
and
jg
mov
lds
mov
shr
sbb
dec
(bad)
adc
shl
(bad)
sahf
mov
jmp
pop
cmp
stos
push
fs
cmp
cmp
mov
dec
les
aaa
or
jno
and
jae
cdq
add
and
rol
in
cld
aas
mov
cmc
jbe
add
fstp
retf
cmps
sbb
dec
mov
call
xchg
mov
mov
push
sbb
jnp
repnz
in
out
sti
mov
cmp
and
push
rol
sub
retf
(bad)
loopne
inc
mov
lea
jb
js
xor
or
ds
into
xlat
add
shl
(bad)
cmps
adc
inc
push
shr
mov
pop
rcl
hlt
pop
push
ficomp
lock
dec
test
arpl
stos
stos
push
jl
arpl
mov
out
in
fwait
push
rcl
cmp
mov
pop
sub
mov
xor
fsub
aam
loope
cmc
and
sub
xor
push
pop
pop
or
mov
pusha
jae
arpl
adc
hlt
sti
push
sahf
rol
cmp
xor
sbb
int3
ins
inc
mov
adc
sub
mov
cmp
sub
mov
cli
inc
dec
loop
stc
repz
nop
(bad)
not
cs
icebp
or
sti
movs
cmp
aaa
inc
jge
mov
push
arpl
es
pop
in
mov
(bad)
out
(bad)
mov
ja
dec
nop
xchg
pop
mov
inc
cmp
cmp
and
rcr
and
pop
sahf
mov
imul
dec
sbb
pop
cs
icebp
sbb
adc
(bad)
fldl2e
or
push
push
xor
stos
retf
test
into
sub
shl
push
sub
xchg
inc
push
adc
fstp
mov
add
or
ds
push
mov
sub
hlt
inc
push
ins
mul
dec
push
imul
push
sub
arpl
mov
inc
xor
outs
imul
out
push
cmp
mov
xlat
mov
inc
jmp
scas
adc
dec
test
add
shr
inc
push
mov
inc
lock
and
push
cdq
xor
test
in
push
sbb
movs
cdq
loopne
loopne
push
dec
out
cmc
ds
js
dec
mov
push
not
cs
iret
(bad)
pop
and
lahf
lds
xchg
inc
sub
push
(bad)
cmp
push
dec
or
jb
adc
adc
daa
movs
adc
jge
cmp
pushf
inc
jg
jmp
dec
mov
mov
sti
and
popa
aaa
push
sbb
repz
loop
ins
sti
inc
nop
(bad)
into
hlt
out
into
sbb
push
cmp
add
mov
adc
adc
dec
mov
aad
inc
and
test
xchg
cmp
push
ror
pop
push
dec
push
or
push
outs
xchg
popa
lahf
xchg
mov
sbb
pushf
mov
inc
cs
adc
test
aaa
(bad)
and
mov
cmps
and
in
js
and
imul
(bad)
pcmpgtb
adc
test
imul
popf
or
and
jmp
ds
inc
lods
mov
aad
nop
xor
test
push
cli
jmp
cmp
cs
and
jmp
fdiv
push
mov
in
mov
mov
int3
(bad)
adc
lods
xor
jns
and
add
aas
mov
movs
iret
mov
enter
inc
or
test
pop
call
cmps
ds
in
sahf
ror
cmp
xchg
daa
gs
rcr
mov
call
fldcw
loopne
repnz
sbb
in
adc
mov
nop
jo
sbb
mov
loopne
loope
cmc
or
and
jns
sub
mov
ds
jae
adc
and
mov
push
jnp
push
and
adc
test
cmp
cmp
test
hlt
xor
out
or
pop
movs
lea
stos
cmp
lock
aad
cmps
pop
les
rol
add
sti
xchg
fisttp
add
test
sbb
imul
mov
popa
aaa
xlat
imul
aam
add
inc
sbb
in
push
mov
pop
mov
ret
test
call
shr
add
test
out
ficom
test
pop
inc
mov
mov
js
or
jg
aam
ret
adc
out
sar
sbb
mov
fisubr
lahf
cmp
cmps
dec
mov
or
mov
and
cmp
(bad)
adc
loop
clc
js
push
pop
test
dec
mov
je
icebp
xor
into
jns
jne
mov
out
push
fs
lods
adc
sbb
mov
mov
cmp
mov
test
or
sub
mov
jmp
ds
ja
xchg
xor
push
movs
xchg
pop
pushf
imul
lahf
outs
mov
push
dec
ins
sub
rcr
iret
retf
xor
cmp
xlat
daa
sbb
(bad)
push
inc
popf
jle
cmp
sti
test
add
shl
sub
jecxz
mov
mov
push
mov
and
sbb
jecxz
cs
dec
cli
je
mov
push
int3
push
outs
pop
cmp
sti
test
loope
je
sub
xor
add
push
inc
fcmovb
push
jp
es
in
mov
dec
mov
adc
pop
ror
ds
ds
stc
inc
rol
mov
mov
add
call
and
xor
mov
fbstp
retf
shl
ror
pusha
sub
or
and
and
inc
pop
adc
pusha
sub
int3
add
pop
fsubr
push
ds
mov
not
clc
jp
enter
lods
inc
dec
mov
enter
repz
(bad)
fidivr
and
(bad)
push
cmc
cs
mov
test
mov
dec
dec
dec
mov
add
out
push
scas
mov
repnz
and
pop
mov
sub
mov
add
das
xor
jnp
push
push
popa
fwait
sub
test
push
movs
push
stos
inc
dec
ror
jle
loopne
dec
fs
add
and
jne
movs
add
cwde
bound
xor
mov
stos
ss
inc
mov
rcr
and
xor
mov
sti
scas
outs
pop
sahf
movs
or
out
jmp
xlat
push
cmp
pop
mov
fist
cmp
cli
repnz
jb
arpl
js
lods
out
adc
inc
pop
dec
movs
(bad)
add
cmp
sbb
and
mov
mov
test
inc
mov
cld
push
hlt
iret
add
jo
adc
movs
fldlg2
sbb
push
fsubr
and
inc
push
fsub
inc
icebp
xor
arpl
fnsave
dec
sbb
mov
pop
pop
cmp
(bad)
adc
sub
aad
fsub
les
test
(bad)
clc
ficomp
bound
loope
jmp
sbb
push
cld
xor
mov
add
inc
mov
das
inc
inc
mov
popa
xchg
or
xchg
or
or
popa
(bad)
sub
cli
fwait
ins
lds
xor
fwait
jbe
loope
in
push
dec
movs
int3
inc
pop
or
enter
test
xchg
retf
sub
and
push
mov
mov
mov
imul
or
xor
mov
xchg
dec
push
and
pop
sbb
in
std
inc
cwde
push
imul
aas
xor
fmul
cmp
or
loope
push
sbb
not
fwait
push
nop/reserved
aam
xchg
imul
pop
pop
sti
add
push
hlt
sub
pop
popf
imul
bswap
fisub
xchg
push
scas
stos
jnp
pop
xchg
mov
neg
adc
or
jnp
or
xlat
push
je
jnp
out
mov
push
shl
cmp
stc
loop
sub
push
push
jg
stos
fwait
mov
push
dec
mov
mov
cmp
lds
and
push
and
xchg
xlat
cmp
retf
xchg
or
and
xchg
xor
adc
push
mov
xor
inc
into
adc
jmp
je
xchg
inc
dec
add
or
pop
sbb
ds
(bad)
(bad)
inc
lods
dec
dec
jb
add
fisubr
adc
rcl
xchg
(bad)
jl
fs
adc
test
jno
inc
fcmovnu
jle
test
popf
adc
(bad)
je
shr
sub
mov
mov
retf
(bad)
into
xchg
outs
fldcw
and
lods
in
dec
loopne
(bad)
cli
sti
(bad)
mov
ror
mov
push
push
pusha
out
jp
inc
jmp
out
(bad)
retf
enter
repnz
lahf
rol
mov
pop
xor
adc
aas
xor
js
pop
imul
ret
int3
push
cwde
sti
mov
and
aam
cmc
adc
mov
pop
test
dec
mov
cmp
fwait
xor
pop
dec
sbb
ret
xchg
add
int3
push
(bad)
xor
sub
mov
jmp
push
dec
aad
sbb
int
movs
jle
test
in
jmp
mov
xchg
lahf
(bad)
jle
jecxz
cmp
aam
test
sbb
adc
loop
jl
outs
hlt
push
cmp
scas
stos
xor
pop
mov
aas
add
in
xor
pop
cmp
jmp
into
mov
jl
or
icebp
outs
mov
hlt
pop
icebp
or
call
xchg
mov
dec
and
xchg
ins
hlt
push
adc
outs
jno
pop
mov
sub
cdq
jne
stos
sub
push
outs
and
iret
and
adc
xor
test
xor
xor
test
add
fcmovne
mov
cmc
je
push
jb
das
retf
push
loop
mov
xor
jl
jo
pushf
test
and
mov
jmp
mov
sub
ret
dec
test
dec
push
sub
jmp
push
jno
std
repz
stc
je
xor
mov
jno
outs
mov
mov
mov
xor
out
out
and
or
and
popa
cwde
test
test
mov
and
popf
fnstsw
mov
push
pop
inc
movs
in
adc
pop
pop
inc
add
(bad)
fild
pop
push
sub
pop
push
dec
adc
jbe
dec
mov
ins
test
mov
inc
xchg
pop
dec
dec
sar
fild
retf
adc
fcom
xor
rcl
dec
sbb
clc
mov
mov
jl
sbb
and
hlt
outs
xchg
les
push
arpl
dec
pop
jmp
jge
ins
sub
add
fild
in
aad
into
inc
jnp
dec
mov
jns
adc
out
idiv
sub
mov
out
push
out
jbe
xchg
test
add
add
mov
pop
dec
jbe
loop
push
jb
data16
mov
clc
scas
das
cmps
cmp
mov
mov
adc
pop
pop
mov
mov
(bad)
call
xchg
sti
mov
xchg
or
inc
adc
ins
out
fmul
mov
adc
cld
mov
out
ret
sub
or
sbb
sub
popf
jmp
loopne
ins
push
push
data16
mov
test
dec
cdq
jns
cli
lods
mov
mov
push
sbb
dec
sbb
and
jle
loopne
int3
cmp
imul
hlt
cmp
sub
lahf
mov
call
bound
shr
or
xor
and
aam
(bad)
push
ror
es
jns
data16
pop
or
ds
enter
add
sub
xchg
mov
loop
jbe
mov
sub
leave
bound
add
les
add
data16
arpl
std
ret
cwde
push
sar
mov
mov
movs
xchg
mov
and
xchg
jge
mov
adc
in
cld
jge
xchg
mov
(bad)
and
ror
dec
popf
adc
push
not
sub
or
shl
int3
sbb
lods
outs
inc
xor
std
mov
ins
clc
mov
sbb
nop
jns
ins
xor
movs
cmp
pop
ins
mov
cmp
mov
les
call
pop
lods
jge
push
cli
lods
in
jne
sbb
nop
lods
jno
or
mov
ins
cmp
mov
adc
xor
inc
pop
or
enter
lods
mov
or
and
cmp
int3
push
xchg
xor
mov
leave
cmp
inc
popf
or
mov
cmc
mov
sbb
popf
inc
jge
loop
mov
cmp
mov
pushf
test
dec
call
and
clc
inc
sbb
push
and
popf
dec
sub
cdq
add
push
push
sub
and
lods
sub
or
call
mov
push
mov
and
dec
stc
xchg
ret
pop
ja
sbb
mov
sub
ins
mov
ins
mov
sbb
mov
loopne
mov
js
test
ins
(bad)
inc
imul
mul
in
dec
loope
es
mov
xchg
and
sar
jp
das
in
jae
in
inc
and
lods
inc
sub
add
or
jge
movs
test
mov
sub
cmps
inc
shr
jmp
ins
loope
cmc
leave
imul
sub
and
mov
in
popa
ins
mov
dec
es
clc
ret
or
(bad)
leave
sub
xchg
lea
pop
sub
dec
movs
out
push
ret
lods
mov
sub
sub
dec
and
add
imul
in
pop
mov
in
and
cmp
dec
lods
dec
and
sub
popf
jg
or
jl
loope
loope
and
rol
pop
cmp
and
(bad)
or
ins
push
test
les
lods
leave
sub
and
in
int3
imul
leave
cmps
sub
retf
in
dec
jb
scas
jo
jmp
ins
sub
ins
(bad)
mov
mov
int3
repnz
lea
in
popf
sub
stos
mov
xchg
mov
jge
ins
lods
jno
ret
shr
imul
pop
repnz
ret
fcomp
cmc
and
lock
or
out
jmp
cmc
outs
test
add
mov
lods
not
cli
imul
les
jl
mov
lods
add
fst
push
(bad)
pop
sub
fcom
and
out
nop
mov
jnp
fldcw
into
mov
pop
leave
mov
fldcw
and
xchg
pop
and
push
cdq
enter
in
in
in
leave
sbb
stos
shr
shl
(bad)
(bad)
aaa
mov
pop
neg
dec
dec
int
or
pop
ret
push
sub
sbb
enter
mov
ins
cmp
cmp
cwde
imul
leave
and
cmp
lods
loope
lods
sbb
sbb
push
lods
fldcw
jge
mov
jge
mov
mov
mov
out
cmp
add
scas
fisubr
dec
jp
jmp
lods
mul
push
sub
es
push
shr
cld
mov
cmp
imul
in
popf
cli
push
sub
sahf
mov
lods
lea
mov
mov
aam
and
stos
fisubr
shr
shl
mov
outs
stos
push
xadd
imul
fnstsw
lods
pop
or
es
aam
test
or
sub
pop
imul
lea
sub
hlt
and
call
lea
(bad)
add
jmp
(bad)
int
jp
mov
jmp
add
shl
jmp
lahf
cmp
cmps
pop
(bad)
mov
jmp
fst
mov
pop
adc
nop
push
inc
cmp
ficomp
inc
(bad)
mov
jg
bound
mov
cmp
mov
ja
adc
mov
and
ins
inc
mov
and
mov
lahf
addr16
daa
push
repnz
movs
arpl
xchg
arpl
ins
inc
jecxz
lods
jmp
pop
jb
imul
bound
mov
cwde
mov
mov
fsubr
stos
xor
jmp
mov
loop
outs
je
shl
sub
imul
call
addr16
and
out
sbb
movs
stos
xchg
adc
cmp
scas
cmp
adc
xor
clc
mov
repnz
out
cmp
and
arpl
js
sbb
add
xchg
pop
ins
loop
push
cwde
cmp
inc
mov
cmp
cld
(bad)
fsub
cmp
pop
mov
cs
fsub
mov
or
jb
out
cmp
dec
bound
and
(bad)
lods
out
sbb
cmp
xchg
data16
pop
loop
outs
je
add
js
jo
cmp
jno
mov
scas
jno
fmul
outs
xor
xchg
cli
mov
cli
fcomp
sbb
scas
sub
hlt
sbb
pop
movs
sbb
mov
pop
jecxz
jb
xchg
xchg
loope
imul
or
int3
call
mov
frstor
xchg
jne
cwde
outs
jbe
call
(bad)
in
xchg
lea
xor
push
cdq
add
sahf
mov
jnp
je
sahf
out
js
push
jle
pushf
pop
pmaddwd
or
dec
jl
aam
push
and
inc
mov
sub
adc
rcr
jl
cli
add
cld
jne
xchg
sti
xchg
jae
cld
in
push
mov
mov
in
hlt
ja
xchg
xor
mov
inc
push
mov
mov
in
les
ss
fwait
dec
xchg
in
jno
adc
cmp
inc
mov
push
(bad)
(bad)
xor
rcr
mov
dec
adc
mov
xchg
repz
cld
mov
inc
and
jl
cld
cmp
pop
inc
mov
nop
xor
ss
cmp
fnstsw
pop
daa
sbb
add
arpl
je
int
js
retf
stos
mov
cdq
in
mov
and
jnp
mov
fst
out
fst
mov
push
mov
into
sbb
push
jl
jl
and
je
jg
hlt
loope
out
pop
std
cmp
jb
(bad)
cld
dec
xchg
or
outs
test
inc
mov
add
loope
sub
aam
xchg
ja
pushf
xor
in
inc
ja
mov
dec
and
push
inc
iret
mov
arpl
mov
adc
push
xchg
jne
jmp
xlat
sbb
xchg
push
mov
add
add
jmp
mov
xor
int3
push
aaa
pop
xchg
out
jecxz
jecxz
int3
xchg
dec
mov
stc
sub
(bad)
in
mov
scas
xchg
addr16
mov
ja
jecxz
aaa
repz
sub
inc
xlat
ja
out
sub
adc
adc
adc
ja
jae
mov
push
and
inc
mov
lea
or
cmp
dec
jae
cmp
hlt
xchg
daa
sub
or
dec
inc
fidivr
pop
xchg
pop
cmps
call
inc
fsub
not
cdq
addr16
adc
addr16
(bad)
cwde
ins
mov
adc
fwait
add
fs
adc
mov
stos
addr16
shr
icebp
scas
in
mov
das
arpl
arpl
int3
xchg
jecxz
jne
push
pop
mov
out
mov
daa
xor
cmps
(bad)
cmp
mov
rcl
xchg
jecxz
mov
das
xchg
inc
rep
lods
iret
jae
push
and
in
pop
cmp
pop
out
rcr
adc
cmp
push
out
(bad)
push
es
push
outs
cmp
jp
mov
xchg
or
aas
adc
(bad)
test
cmps
add
(bad)
mov
and
ja
mov
mov
mov
ja
xor
jnp
pop
dec
ja
xor
ins
in
pop
lods
data16
adc
int
mov
push
in
ret
aaa
mov
adc
mov
sub
rcl
mov
rol
popa
les
mul
xlat
add
jnp
inc
shl
cmp
cmps
mov
inc
mov
addr16
jne
dec
iret
stos
and
test
xor
addr16
loop
rol
inc
(bad)
cmps
add
jmp
jmp
test
adc
inc
add
enter
sub
enter
dec
sub
inc
mov
xor
cpuid
shl
sbb
fisub
sbb
or
adc
inc
dec
inc
mov
dec
std
test
enter
dec
cmps
loopne
dec
mov
ret
mov
xor
inc
add
call
addr16
add
fdivr
and
(bad)
enter
xchg
arpl
inc
jae
rol
jae
xchg
retf
daa
test
xor
dec
lock
jl
hlt
(bad)
cmps
inc
sbb
stc
rol
push
pop
jmp
pop
retf
sub
imul
rol
arpl
rcl
mov
push
adc
add
and
inc
xchg
arpl
ret
adc
jns
inc
jmp
lods
mov
and
cli
and
inc
xchg
arpl
cli
inc
sub
adc
adc
mov
repz
inc
shl
rol
adc
adc
shl
rol
arpl
mov
arpl
bts
mov
push
inc
and
inc
arpl
mul
or
add
xchg
add
inc
arpl
dec
and
ret
addr16
push
pop
out
add
sub
dec
add
jb
add
ja
stos
add
inc
ret
shl
mov
add
fcom
push
inc
xor
push
xor
and
repnz
dec
int3
and
les
(bad)
lods
pop
jne
adc
int3
jge
xor
fs
xor
dec
pop
lods
jno
mov
cmc
xor
cwde
shl
mov
xor
mov
sub
leave
imul
cs
cdq
mov
popa
or
sub
sub
leave
pop
jl
inc
pop
cmp
dec
jmp
adc
hlt
adc
and
ror
push
and
mov
jne
cdq
and
mov
pop
out
xor
test
(bad)
std
in
dec
or
xlat
sbb
dec
push
int3
jns
cmps
imul
mov
out
xor
(bad)
lds
cmp
sbb
leave
jmp
or
xor
inc
push
add
pop
test
jns
aam
hlt
sti
mov
mov
push
xchg
xchg
js
stc
mov
xlat
stc
lods
cmp
fs
dec
push
imul
mov
mov
out
cmp
test
in
loopne
fisttp
jge
sub
pop
test
dec
cwde
stc
stc
(bad)
std
dec
and
out
leave
or
push
inc
xchg
mov
cmp
mov
sbb
popa
push
in
int3
adc
fs
lds
imul
int3
cmp
les
cmp
popa
jl
pushf
in
les
cmp
nop
rcl
and
test
imul
pop
fs
xchg
scas
cmp
fabs
stc
rcr
imul
enter
adc
cmp
cmps
fsub
mov
pop
clc
mov
add
hlt
cmp
shl
aas
imul
xor
mov
jle
and
add
pop
push
rol
mov
js
fstp
in
mov
cmp
dec
add
je
mov
es
aas
(bad)
or
add
je
fadd
fdiv
mov
loope
xor
inc
add
sbb
sbb
mov
jae
sub
and
sbb
pop
and
aad
push
sbb
hlt
sbb
je
aad
xchg
stc
mov
push
sbb
cdq
mov
adc
popf
adc
cmp
nop
loope
jo
inc
ins
xor
push
mov
ret
je
xor
fwait
xor
std
ret
je
mov
push
cmp
jge
xor
pop
dec
mov
js
push
cmp
push
in
pop
mov
daa
xor
clc
push
jns
push
hlt
shl
xor
mov
jle
cmp
mov
pop
push
mov
mov
mov
push
sbb
movs
cmp
nop
hlt
call
mov
jne
in
pop
mov
cmp
cmp
xchg
jns
mov
mov
movs
mov
aas
adc
fsub
rol
jmp
clc
dec
test
dec
ror
dec
ror
call
add
mov
inc
shr
fmul
ffreep
lea
test
cmp
lea
aaa
dec
add
les
mov
inc
lea
aaa
lea
leave
test
fdivr
sub
notrack
icebp
lea
add
lea
test
pop
dec
jle
rol
bound
test
jge
jo
hlt
add
into
pop
lods
les
(bad)
mov
out
pop
inc
inc
xchg
sub
add
add
jb
fadd
pushf
add
pop
ffreep
sbb
add
movs
jle
jl
mov
movs
out
in
mov
cmps
ins
mov
js
jno
xor
lahf
pop
fild
ffreep
push
(bad)
push
push
fiadd
fiadd
jmp
mov
inc
stos
jb
xor
or
repnz
repz
je
repz
push
inc
dec
sbb
in
ds
lea
sar
scas
fsubr
xor
shl
push
mov
movs
xchg
sbb
(bad)
pop
mov
(bad)
popa
cmp
adc
mov
add
pop
pop
mov
sbb
or
xchg
and
loope
adc
gs
sbb
fldenv
sub
cmp
fwait
popa
add
jnp
xor
inc
xchg
test
mov
loope
add
pop
std
cdq
xchg
fnstenv
fwait
test
rcl
inc
int
jp
and
pop
test
add
add
push
popa
push
movs
push
call
sbb
lahf
jg
scas
(bad)
in
fldcw
shl
aas
cmp
mov
shl
adc
daa
stos
stos
(bad)
std
mov
add
xor
mov
mov
test
ss
adc
mov
ret
mov
and
and
mov
lock
push
adc
xor
dec
cmp
mov
mov
lahf
jno
(bad)
ss
jl
inc
pop
cmps
add
loopne
ret
mov
jl
xor
mov
(bad)
cmps
add
ds
xor
mov
mov
ret
nop
fist
std
adc
cwde
mov
mov
stos
and
adc
inc
push
mov
xor
call
test
arpl
rol
jle
pop
mov
push
cli
test
ret
xchg
mov
inc
push
shl
mov
xchg
sbb
ins
cmp
sub
jnp
or
mov
jmp
jo
xchg
mov
lds
aam
add
lea
std
nop
mov
sub
stos
cmp
loope
mov
add
xchg
mov
cmps
loope
cli
nop
mov
mov
jecxz
movs
into
(bad)
rcr
cmps
(bad)
xchg
and
jecxz
test
mov
jge
aas
shl
out
(bad)
stos
movs
jecxz
outs
jno
mov
out
and
and
xchg
ret
stos
aad
loopne
xchg
ret
cmps
mov
push
test
fcmovne
cmps
(bad)
repz
sar
xor
shr
xor
fs
xchg
in
sahf
and
in
add
(bad)
iret
je
sub
inc
inc
dec
inc
mov
ret
into
jecxz
add
jecxz
ret
into
jecxz
or
jle
sahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
(bad)
jae
or
cmp
not
not
xchg
inc
in
add
push
repz
pop
int
in
or
push
lds
sbb
ss
shl
xchg
xor
sub
cmp
dec
adc
repnz
test
mov
(bad)
xor
sbb
jg
sbb
sub
sbb
sahf
shl
(bad)
pop
sub
jo
sbb
pop
sar
aad
jle
push
cli
sbb
data16
jle
cmp
es
inc
cdq
in
cmp
fdivr
sahf
arpl
shl
adc
mov
mov
push
cmp
push
cld
push
in
je
and
push
(bad)
ja
xchg
pop
stos
push
out
stos
ret
adc
fisttp
sbb
mov
sti
stc
rcr
or
sbb
push
lds
xor
mov
into
and
repnz
dec
cdq
shl
inc
jecxz
xchg
add
dec
and
mul
rol
add
and
inc
outs
jne
xchg
shl
and
push
adc
pop
pop
cmc
xchg
mov
and
in
addr16
in
fwait
mov
pop
(bad)
mov
xchg
cmp
sub
sub
cmc
retw
out
mul
fnstenv
or
xchg
out
jecxz
cdq
leave
shl
cmps
pop
in
push
jecxz
(bad)
xchg
xor
ss
arpl
clc
shl
retf
xchg
(bad)
cmps
int
mov
movs
hlt
div
rol
push
out
and
mov
inc
mul
mov
aad
movs
call
jbe
add
in
addr16
add
ss
pop
es
out
out
div
and
(bad)
ret
in
xchg
jo
movs
div
add
ret
test
xor
xchg
mov
ja
les
and
(bad)
adc
xchg
adc
test
mov
and
lds
mov
in
(bad)
test
adc
and
outs
in
lods
loopne
add
ret
sar
sub
push
pop
mov
ret
loope
and
pop
add
and
loope
imul
adc
shl
adc
xchg
mov
scas
jmp
adc
mov
in
bound
mov
adc
repz
and
mov
jecxz
and
(bad)
push
rdmsr
jbe
sbb
std
mov
sar
into
test
jle
sbb
out
jle
xor
add
xor
(bad)
jmp
and
pop
sbb
loope
lahf
jmp
out
jge
adc
sti
sub
cdq
ret
psubusw
dec
test
test
push
cmps
pop
adc
pusha
ficom
loope
loopne
add
sbb
jl
or
into
add
jg
mov
or
outs
dec
dec
inc
lahf
shr
mov
(bad)
div
sub
sbb
aaa
lods
lahf
xor
xchg
cmp
sbb
(bad)
retf
idiv
and
gs
popa
push
cmps
ficom
mov
cmp
cld
mov
dec
or
adc
les
push
jbe
ins
loopne
mov
xchg
call
sub
mov
xchg
mov
jmp
cmp
push
mov
or
jns
dec
mov
lods
cmp
dec
retf
ds
pop
sti
fisttp
out
dec
cmp
fwait
imul
outs
mov
std
sbb
fisub
jg
or
dec
pop
pop
enter
xchg
stos
loop
sti
sub
retf
jp
push
shl
or
mov
call
jmp
in
mov
retf
cdq
in
jle
clc
(bad)
dec
loopne
enter
jle
jp
adc
sbb
out
and
call
mov
stos
inc
or
fcmovne
push
out
sub
pushf
sbb
xor
push
or
xchg
neg
or
cmp
cmp
cmp
out
rcl
pop
sub
(bad)
mov
ins
mov
iret
sbb
pop
lea
adc
mov
cdq
in
(bad)
jno
pop
mov
mov
pop
out
push
and
pop
pop
push
adc
mov
dec
mov
sub
inc
cmp
btc
mov
xchg
(bad)
sub
adc
retf
mov
mov
jmp
hlt
mov
xor
fnstsw
fimul
outs
sub
pop
mov
stc
(bad)
je
xchg
(bad)
push
leave
xor
mov
mov
mov
mov
jmp
adc
cmp
por
jge
es
cmp
pop
push
jge
sbb
test
call
sbb
pop
push
cld
jno
test
fs
int
or
sub
mov
test
lahf
out
cmp
scas
pop
xchg
fnstcw
pop
and
popf
cmps
ins
fcom
popf
adc
popf
dec
mov
mov
push
(bad)
mov
dec
pop
aaa
sbb
ss
movs
inc
pop
fnstsw
ss
movs
fstp
inc
inc
pop
jle
dec
pop
scas
xor
mov
data16
and
pop
cmp
cmp
popf
lods
push
fwait
push
fxch
fdiv
(bad)
cmp
push
cmp
pop
movs
(bad)
inc
sbb
push
cmp
push
inc
fldpi
xlat
sub
(bad)
clc
les
pop
mov
ret
popf
scas
cmp
jge
dec
leave
mov
dec
out
in
mov
rcr
xchg
retf
adc
stc
xor
mov
lahf
imul
xchg
mov
dec
sbb
iret
mov
pop
push
stos
rcl
mov
dec
cmp
push
sbb
ss
scas
retf
and
mov
js
(bad)
pop
push
jmp
retf
push
data16
mov
xchg
in
mov
cdq
scas
in
inc
cmps
sahf
in
test
xchg
out
lea
jbe
inc
push
cdq
in
mov
hlt
fst
xor
fsubr
mov
jns
cdq
jecxz
aaa
pop
and
xchg
test
pop
imul
mov
mov
pop
f2xm1
enter
ret
cmp
pop
push
pusha
cmp
pushfw
movs
fimul
jmp
cmps
in
inc
jno
mov
cwde
sbb
clc
fistp
ss
in
mov
rcr
xchg
mov
imul
cwde
imul
push
addr16
or
gs
(bad)
cdq
pushf
xor
fsub
jbe
mov
lods
xchg
mov
and
inc
lods
int3
push
jmp
and
inc
pop
rep
xchg
in
fisubr
mov
out
mov
or
cmp
dec
std
inc
rcl
call
xor
inc
call
ja
add
sub
(bad)
sahf
(bad)
xchg
fdiv
arpl
cld
add
mov
mov
repnz
or
lods
sar
jbe
xchg
and
mov
lods
jnp
dec
mov
std
lea
es
hlt
jae
pop
jb
scas
ins
xor
mov
popa
dec
xor
xor
jle
(bad)
mov
or
jb
push
sub
(bad)
push
or
neg
cdq
in
xor
xchg
cld
add
inc
mov
fcom
mov
jb
xor
pusha
cmp
in
sti
(bad)
imul
sahf
add
test
xor
cmp
cmp
mov
push
mov
pusha
lods
shr
inc
adc
fsubr
cmp
push
jp
push
lods
xchg
jg
xlat
das
aad
in
nop
les
cs
fist
adc
push
sub
xor
in
in
sbb
into
xchg
mov
ret
xor
cmp
lock
cmp
cmp
ror
xchg
int3
popf
inc
sbb
aam
shl
xchg
loope
repnz
mov
stos
and
mov
stc
mov
ret
adc
fwait
mov
fwait
jmp
mov
add
and
sti
xor
pop
sbb
inc
mov
sbb
mov
js
xchg
loopne
jmp
xchg
mov
pop
scas
cmp
sbb
fs
fs
cmps
movs
adc
and
(bad)
and
push
xor
pop
mov
test
push
les
fs
cmp
pop
xor
cmc
in
jne
inc
jecxz
xchg
jne
pop
(bad)
hlt
test
push
(bad)
cmps
lods
inc
dec
mov
sub
cmps
adc
scas
cld
loope
pushf
adc
je
in
aam
cli
sti
fimul
add
rcr
mov
fcomip
test
or
stos
nop
and
popf
push
fsub
mov
push
clc
adc
(bad)
mov
movups
xchg
loope
sbb
xor
cli
(bad)
data16
in
push
jnp
xchg
int3
(bad)
push
mov
not
retf
das
or
jbe
pop
imul
leave
int3
xchg
or
data16
xor
arpl
xchg
cmp
add
sub
fistp
iret
inc
rcl
fadd
mov
or
cmps
outs
add
adc
sar
fdivr
div
jbe
cmp
xchg
and
jne
in
test
add
push
cld
icebp
push
push
cwde
push
sbb
shr
adc
cmp
pop
mov
aad
rcl
fmul
xor
xchg
mov
pop
test
rol
sbb
sub
mov
and
shl
adc
ret
push
or
cmp
cmp
stc
retf
inc
cwde
dec
add
dec
push
les
dec
push
clc
adc
adc
push
stos
mov
in
xor
dec
fdiv
sbb
sahf
pop
pop
aam
(bad)
lock
pop
or
(bad)
aam
sbb
xchg
in
xchg
cmp
daa
push
fstp
in
cmc
mov
into
daa
inc
mov
pop
push
cmp
inc
mov
fwait
movs
xor
stos
dec
mov
push
mov
ins
pop
cmps
pusha
fcmovnu
iret
cmp
cs
sbb
idiv
cwde
fild
cs
push
adc
pop
push
fisttp
ror
jl
mov
xchg
ja
lods
cmp
ret
je
jmp
leave
push
mov
mov
jmp
in
cmp
adc
std
push
aam
mov
fisubr
stos
mov
ja
xchg
inc
dec
adc
stos
mov
xchg
xor
js
add
dec
leave
inc
sbb
mov
loop
mov
call
les
aaa
cwde
and
js
sub
outs
push
in
(bad)
adc
pop
ror
mov
call
add
(bad)
or
jmp
xor
call
jno
dec
cld
inc
repnz
push
popa
dec
add
int3
nop
sub
imul
adc
and
ins
dec
push
test
add
and
nop
nop
pop
xchg
bound
adc
out
and
jle
out
loop
inc
stos
(bad)
fisttp
mov
mov
es
or
sub
enter
loopne
xlat
inc
sub
cmp
inc
cmp
adc
imul
and
repz
and
cdq
js
inc
mov
cli
xor
cli
or
lea
adc
out
sbb
popa
adc
add
xchg
xchg
jle
jg
and
in
pop
add
test
adc
sbb
pop
(bad)
test
inc
inc
cmp
push
cwde
push
sar
sbb
cmp
cmp
dec
gs
loop
into
mov
int3
ds
inc
xchg
xlat
pop
clc
sbb
inc
out
retf
dec
cwde
dec
xchg
mov
jno
pop
imul
repnz
mov
mov
sbb
push
daa
or
mov
jnp
out
or
sbb
dec
out
xchg
inc
mov
arpl
shr
lock
int
cmp
(bad)
sub
adc
test
add
stos
fwait
xchg
cld
leave
sbb
adc
into
(bad)
out
pop
dec
lahf
dec
leave
push
sahf
iret
mov
jnp
jns
jge
cmp
push
out
dec
lahf
cs
call
cmovle
pop
out
(bad)
jl
or
retf
fisttp
dec
int3
sti
pop
retf
pop
ficomp
pop
(bad)
push
lahf
push
pop
fwait
into
iret
sbb
or
stc
push
or
mov
call
imul
and
dec
inc
dec
mov
mov
cmp
dec
and
stos
ret
enter
loope
xor
pusha
pushf
jne
into
test
int
pop
fnstsw
sub
pop
xbegin
mov
inc
sub
sub
adc
fdiv
mov
xchg
push
daa
push
mov
xlat
ret
xchg
fwait
outs
xchg
jo
ret
mov
retf
dec
jo
and
arpl
or
jecxz
lds
mov
lods
loopne
mov
cmps
mov
push
dec
and
test
push
mov
movs
or
inc
repnz
push
xor
adc
pop
adc
test
pop
stos
xlat
ror
dec
and
fadd
popf
xchg
xor
mov
dec
imul
in
push
shr
pusha
dec
(bad)
xor
jns
out
push
xchg
pop
in
stc
int
rol
pop
push
dec
pop
sub
xchg
faddp
pop
ret
jle
pop
shl
mov
lea
adc
sub
aad
mov
loope
icebp
setno
retf
inc
jns
cmp
pop
aad
(bad)
or
pop
mov
ds
movs
sbb
jne
in
and
add
(bad)
retf
jb
xchg
gs
stos
in
out
dec
in
xchg
add
add
aad
fst
mov
mov
mov
pop
mov
loopne
add
sbb
and
mov
aam
push
not
ja
fcomp
dec
mov
add
mov
inc
jns
xlat
imul
jnp
push
and
mov
inc
xor
add
aas
jmp
leave
loopne
jno
xchg
in
icebp
cs
sub
aam
shl
mov
or
sub
mov
sub
fiadd
in
sub
push
mov
lods
jnp
fwait
lods
dec
xchg
sbb
cmp
mov
call
push
fstp
and
loop
cmp
mov
add
stos
jle
fcmovbe
push
add
xchg
les
test
jb
les
repz
sbb
mov
jno
popa
enter
cs
xchg
add
xlat
std
es
cmp
xor
pusha
(bad)
clc
push
or
mov
sbb
push
cmps
cwde
mov
repz
fs
cld
retf
mov
cdq
cmp
out
adc
xchg
loop
xor
jo
retf
retf
fisub
or
pop
xlat
inc
ds
jp
or
fisttp
and
add
jp
js
leave
cmps
cdq
addr16
mov
sub
data16
popf
mov
xor
mov
loop
xchg
and
pushf
das
jecxz
and
cmp
cli
jno
cli
adc
sub
cmps
mov
imul
dec
scas
adc
fwait
cdq
sub
sbb
stc
test
daa
ins
xchg
or
xor
and
xor
or
xchg
jns
mov
push
mov
out
or
mov
and
push
or
lahf
adc
cwde
jle
mov
mov
fs
mov
push
push
adc
xor
push
and
and
xchg
inc
xor
pusha
jns
jae
dec
mov
and
xchg
enter
push
push
push
mov
sbb
pop
movs
bound
jl
fwait
stos
adc
outs
(bad)
ins
mov
iret
push
stos
mov
ret
ja
xchg
push
movntq
pop
mov
in
or
test
test
jecxz
mov
push
movq
jg
mov
cmps
xchg
and
jb
iret
add
mov
sbb
push
jne
or
movs
mov
jnp
sti
push
push
dec
mov
and
stc
adc
push
in
cmp
jno
and
es
lea
(bad)
(bad)
pop
sbb
imul
mov
mov
cmp
jle
ins
pop
sbb
push
jecxz
fnstcw
add
(bad)
getsec
cmp
jg
sahf
mov
add
sahf
push
(bad)
cdq
popa
cmp
or
fcomp
or
test
sbb
fwait
repz
sar
sbb
sbb
fistp
ins
sbb
xor
and
jp
(bad)
je
add
xor
aaa
jmp
sbb
add
jmp
mov
icebp
fidiv
sub
into
mov
dec
in
add
pop
sar
xor
stos
ins
retf
push
sti
je
imul
outs
jnp
push
xor
mov
sub
gs
lods
in
xor
(bad)
inc
or
jnp
pop
jge
enter
cmp
(bad)
in
mov
inc
inc
push
sub
hlt
jno
and
pop
fidivr
mov
and
icebp
cmp
leave
into
mov
pop
scas
js
push
test
and
jle
pusha
xor
bswap
add
or
cmp
xchg
fwait
call
jbe
xchg
frndint
retf
int
push
sbb
push
sbb
ds
loop
dec
test
mov
ret
jbe
cli
adc
sbb
in
dec
shl
mov
sub
dec
pusha
inc
(bad)
cli
lds
rcr
add
sub
dec
xor
pop
pop
push
xor
xchg
imul
cs
adc
sbb
cmp
xchg
fs
sbb
fistp
movs
mov
xor
out
xchg
xchg
or
retf
jne
sbb
scas
addr16
fnstenv
mov
call
dec
mov
loope
ret
pop
mov
inc
cmps
pop
aam
adc
dec
cmp
fcom
imul
aas
aam
mov
push
imul
(bad)
and
shld
cmp
sub
or
sbb
fwait
mov
imul
adc
jecxz
je
sbb
sub
mov
cmp
push
(bad)
cmps
xchg
or
add
push
sub
call
jae
lea
mov
imul
mov
(bad)
jns
sub
or
(bad)
movs
or
fmul
jmp
aad
mov
dec
stos
pop
outs
ss
shl
xchg
(bad)
(bad)
(bad)
adc
repnz
mov
xchg
loope
xchg
scas
nop
data16
adc
xlat
retf
jmp
scas
jp
adc
mov
and
das
mov
pushf
call
and
jbe
stos
xor
or
movs
mov
or
jo
hlt
mov
add
int3
out
jo
jnp
jmp
or
mov
mov
popa
hlt
dec
imul
dec
xchg
mov
mov
or
jb
pusha
mov
je
(bad)
push
mov
aad
or
push
movs
jmp
scas
inc
aad
dec
mov
dec
jle
inc
jge
jl
in
in
add
and
imul
sub
inc
cmps
fidivr
cmp
add
lods
in
pop
lds
cwde
in
push
cmps
dec
shr
xor
je
in
cdq
push
mov
push
pushf
stos
push
mov
mov
stos
mov
movs
adc
iret
add
add
ss
push
int3
dec
mov
mov
scas
cdq
mov
in
mov
fisub
out
add
mov
es
mov
(bad)
mov
xor
mov
ins
mov
xchg
xor
outs
into
push
fmul
mov
xchg
adc
hlt
mov
scas
or
mov
adc
cmp
(bad)
movs
ins
pop
add
ins
(bad)
cmp
test
mov
lods
aaa
jno
ins
dec
icebp
pop
and
sbb
and
or
jge
shl
in
stos
add
mov
inc
outs
adc
push
aam
adc
dec
ror
add
cmp
and
ss
aas
sbb
outs
pop
pop
test
aam
dec
outs
shl
loope
popf
bound
or
es
xchg
iret
dec
in
sbb
ror
das
adc
mov
popf
fcom
push
ror
mov
jmp
add
add
shr
sti
inc
aam
(bad)
call
retf
call
cmp
je
mov
test
je
call
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
call
mov
push
lea
mov
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
jne
mov
call
call
push
push
lea
call
push
lea
push
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
add
mov
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
call
mov
mov
mov
mov
push
push
call
mov
mov
test
sete
movzx
mov
push
mov
push
mov
push
push
push
push
call
add
cmp
je
mov
test
je
mov
push
push
xor
call
test
je
lea
cmp
jge
call
mov
mov
push
push
push
push
call
add
push
call
mov
mov
push
push
add
call
test
jne
mov
mov
push
push
call
test
je
call
mov
push
push
push
mov
call
add
mov
call
call
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
lea
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
mov
pop
jne
call
mov
push
push
mov
call
mov
add
call
call
push
push
jmp
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
test
je
mov
push
push
call
test
jne
mov
jmp
mov
jmp
mov
call
mov
mov
push
push
mov
push
push
push
mov
call
add
jmp
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
test
je
cmp
je
cmp
je
push
lea
call
mov
mov
push
lea
mov
call
mov
push
lea
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
pop
je
mov
call
test
je
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
mov
call
mov
mov
lea
push
push
push
push
mov
call
mov
push
mov
call
lea
push
call
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
mov
push
call
ret
int3
push
mov
push
mov
mov
test
push
je
push
call
add
mov
cmp
mov
je
xor
mov
mov
mul
seto
neg
or
push
call
add
test
mov
jne
call
lea
push
push
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
mov
jne
mov
mov
pop
pop
ret
push
call
test
mov
jne
push
call
int3
int3
int3
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
test
je
mov
mov
push
call
mov
mov
mov
pop
ret
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
mov
pop
ret
push
mov
sub
lea
push
call
mov
mov
lea
push
push
push
push
mov
call
call
mov
mov
push
push
push
mov
call
add
lea
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
call
mov
mov
xor
div
mov
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
push
push
call
add
test
jne
mov
test
jne
pop
pop
xor
pop
pop
ret
pop
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
add
push
call
add
add
mov
mov
lea
call
call
mov
mov
push
push
push
push
mov
call
mov
add
push
call
mov
push
push
push
push
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
xor
cmp
je
cmp
jbe
push
lea
mov
mov
test
mov
je
lea
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
add
cmp
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
fld
sub
fstp
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
lea
mov
mov
call
mov
lea
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
mov
mov
call
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
movzx
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
test
je
mov
mov
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
call
mov
mov
mov
push
mov
push
push
push
push
push
mov
call
add
lea
call
mov
mov
lea
push
push
mov
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
push
call
push
push
push
call
push
call
mov
push
push
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
mov
mov
test
je
mov
mov
push
call
mov
lea
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
lea
call
lea
mov
call
push
push
push
call
push
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
push
push
call
mov
test
jne
call
mov
mov
call
push
mov
push
push
call
add
jmp
xor
mov
mul
seto
neg
or
push
call
mov
add
mov
mov
mov
push
push
call
test
jne
call
mov
mov
call
push
mov
push
push
call
mov
push
call
add
jmp
lea
call
mov
mov
mov
cmp
je
push
call
push
lea
push
push
mov
mov
call
add
push
push
push
push
push
push
lea
push
push
call
cmp
jl
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
lea
call
mov
mov
push
sub
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
je
lea
push
push
mov
mov
push
call
mov
mov
lea
call
cmp
je
add
cmp
jne
add
cmp
jne
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
call
add
lea
push
call
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
call
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
push
call
add
lea
call
mov
lea
call
test
jne
call
mov
mov
push
push
push
push
mov
call
add
jmp
mov
add
push
call
add
add
mov
mov
push
push
lea
call
mov
lea
jmp
lea
mov
add
sub
jne
mov
lea
push
push
call
mov
cmp
je
mov
lea
mov
add
push
call
add
add
mov
mov
lea
push
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
lea
call
test
je
lea
push
push
call
add
test
je
lea
push
push
call
add
test
je
push
push
lea
mov
mov
push
call
mov
mov
lea
call
lea
push
push
call
mov
neg
sbb
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
push
call
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
push
jne
mov
push
push
lea
push
call
mov
mov
shl
add
lea
js
mov
mov
mov
sub
sub
test
jge
mov
xor
test
setne
test
jne
call
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
mov
push
mov
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
mov
add
test
mov
mov
jne
mov
mov
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
mov
push
lea
mov
call
lea
call
mov
push
add
call
add
cmp
jg
lea
push
lea
push
lea
call
mov
call
test
je
push
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
lea
call
jmp
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
cmp
sete
test
push
je
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
mov
mov
push
call
mov
mov
lea
call
jmp
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
push
lea
push
lea
call
mov
call
sub
lea
fstp
call
mov
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
add
call
add
cmp
jle
mov
push
push
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
lea
push
mov
call
add
mov
mov
mov
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
xor
jmp
call
push
push
jmp
call
push
push
push
lea
call
push
lea
push
jmp
sbb
sbb
test
sete
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
mov
mov
push
push
push
push
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
je
mov
test
je
push
call
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
mov
push
push
mov
call
cmp
jne
call
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
test
push
jne
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
not
test
push
mov
je
mov
push
mov
call
cmp
je
xor
cmp
mov
jbe
mov
mov
test
je
push
push
push
call
push
lea
push
push
call
mov
test
jne
mov
add
cmp
mov
jb
pop
pop
pop
mov
mov
mov
pop
ret
mov
call
mov
test
je
jmp
lea
push
push
push
push
lea
sub
push
mov
call
mov
push
lea
push
push
call
push
lea
push
push
call
mov
lea
push
lea
push
push
mov
mov
call
test
jne
cmp
jne
mov
xor
mov
mov
mul
seto
neg
or
push
call
xor
add
test
setne
mov
test
je
lea
push
push
push
call
mov
mov
add
xor
cmp
setne
test
je
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
push
call
test
jne
mov
pop
pop
pop
mov
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
xor
mov
mov
push
push
call
cmp
jne
mov
lea
call
pop
pop
mov
mov
mov
pop
ret
mov
push
lea
push
lea
push
lea
push
mov
mov
call
cmp
je
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
lea
push
push
push
lea
push
push
push
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
mov
push
call
mov
lea
call
pop
pop
pop
mov
mov
mov
pop
ret
push
call
cmp
mov
jne
push
call
mov
push
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
lea
mov
add
sub
jne
mov
mov
mul
seto
mov
neg
or
push
call
add
xor
test
mov
jbe
lea
lea
xor
mov
mov
jmp
lea
mov
test
jl
mov
cmp
jge
mov
add
mov
test
jne
xor
mov
jmp
push
call
mov
test
mov
je
mov
mov
lea
test
mov
je
test
jne
xor
jmp
push
call
push
push
call
mov
mov
mov
mov
mov
push
call
sub
sub
add
add
cmp
jb
mov
mov
mov
lea
lea
mov
add
sub
jne
lea
push
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
push
push
push
or
mov
mov
push
push
mov
call
mov
push
mov
call
add
test
jge
call
mov
mov
mov
push
push
push
push
push
call
add
mov
lea
push
call
jmp
call
mov
mov
call
test
je
push
mov
call
mov
push
call
mov
lea
push
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
push
call
test
jne
lea
call
mov
mov
mov
push
push
lea
call
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
mov
mov
pop
mov
pop
ret
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
push
push
mov
mov
mov
mov
push
push
push
call
mov
mov
sub
mov
sub
mov
lea
sub
add
or
mov
jge
push
mov
call
mov
mov
mov
push
push
add
push
mov
lea
push
call
add
test
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
mov
lea
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
push
mov
call
mov
mov
add
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
pop
mov
mov
mov
pop
ret
push
push
lea
push
push
lea
push
push
call
test
je
mov
mov
test
jbe
push
lea
push
lea
call
mov
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
push
lea
push
push
call
test
jne
push
call
pop
xor
pop
mov
mov
mov
pop
ret
push
call
mov
pop
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
push
mov
push
mov
mov
jne
call
cmp
jne
call
mov
cmp
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
lea
call
push
call
add
add
mov
mov
pop
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
push
mov
mov
mov
mov
cmp
mov
mov
je
push
lea
mov
or
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
cmp
mov
mov
jne
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
call
mov
mov
push
lea
call
mov
lea
push
lea
push
mov
call
mov
mov
lea
call
test
pop
je
lea
push
lea
push
call
mov
mov
push
mov
push
call
add
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
sub
push
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
mov
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
test
je
lea
push
mov
call
mov
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
lea
push
lea
push
call
add
mov
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
call
add
test
je
mov
push
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
push
mov
call
mov
mov
push
push
push
push
call
call
mov
mov
push
push
push
call
push
call
mov
add
test
jle
push
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
mov
call
xor
test
setne
test
je
mov
mov
mov
call
add
mov
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
je
sub
je
sub
jne
push
lea
push
lea
call
mov
call
push
push
lea
push
jmp
push
lea
push
lea
call
mov
call
sub
fstp
lea
push
push
call
add
jmp
push
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
lea
push
call
add
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
test
jg
pop
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
call
mov
add
pop
pop
mov
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
push
mov
mov
push
push
push
mov
call
push
mov
mov
call
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
call
mov
mov
add
cmp
ja
jmp
call
mov
mov
mov
push
push
push
call
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
mov
call
push
call
add
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
add
call
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
pop
mov
mov
pop
ret
push
inc
dec
add
dec
add
inc
dec
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
push
or
test
jne
or
mov
mov
call
push
mov
mov
call
add
mov
mov
test
jne
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
mov
mov
add
mov
cmp
je
call
cmp
mov
jne
call
mov
mov
mov
push
push
push
push
call
add
cmp
jne
call
mov
jmp
call
mov
mov
push
push
push
call
add
mov
mov
pop
pop
mov
pop
ret
mov
push
push
push
call
add
test
je
mov
test
jne
lea
call
mov
mov
test
jne
mov
mov
push
mov
lea
push
push
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
call
mov
mov
pop
pop
mov
pop
ret
cmp
jne
cmp
jbe
mov
call
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
call
mov
mov
push
push
call
mov
push
call
push
push
call
xor
add
test
mov
mov
jne
mov
mov
mov
push
lea
push
lea
call
mov
test
je
test
je
push
call
add
mov
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
test
jne
mov
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
mov
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
je
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
mov
push
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
push
lea
call
mov
push
lea
push
mov
call
mov
push
push
lea
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
pop
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
mov
sub
call
test
je
push
call
pop
mov
pop
ret
push
mov
jmp
dec
cmp
je
mov
call
add
cmp
jne
pop
ret
jmp
push
mov
jmp
dec
cmp
je
mov
push
call
add
cmp
jne
pop
ret
jmp
push
mov
push
mov
push
call
push
call
add
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
push
call
push
call
add
mov
mov
jmp
mov
cmp
jne
mov
shl
push
call
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jge
mov
sub
push
lea
push
call
jmp
jle
sub
push
lea
push
call
pop
pop
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
mov
cmp
jl
shl
push
call
mov
mov
shl
push
push
mov
shl
push
push
call
mov
mov
sub
push
lea
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
test
push
mov
jge
call
cmp
jl
push
lea
push
call
mov
push
lea
call
pop
pop
ret
push
mov
mov
push
not
test
mov
push
mov
je
push
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
jmp
call
push
push
mov
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
pop
pop
pop
ret
mov
ret
mov
ret
mov
and
mov
ret
xor
ret
push
mov
push
mov
test
jne
mov
jmp
and
push
push
push
call
test
mov
pop
pop
jne
push
push
call
test
pop
pop
jne
lea
push
push
call
test
pop
pop
jne
mov
jmp
mov
xor
pop
pop
pop
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
xor
pop
ret
mov
and
mov
ret
push
push
push
mov
call
test
pop
pop
je
mov
add
neg
sbb
and
jmp
xor
pop
ret
push
mov
push
add
call
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
call
pop
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
push
call
pop
ret
mov
mov
mov
push
call
ret
mov
mov
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
call
xor
ret
mov
mov
ret
xor
inc
ret
mov
mov
mov
mov
xor
ret
xor
inc
ret
xor
inc
ret
mov
and
mov
ret
push
mov
test
jne
mov
jmp
and
push
mov
cmp
je
mov
mov
call
test
je
mov
mov
push
call
mov
mov
xor
jmp
mov
pop
pop
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jl
cmp
jge
mov
lea
ret
push
push
push
push
call
int3
push
mov
push
push
lea
push
push
call
add
test
jge
push
call
mov
leave
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
mov
push
call
xor
pop
ret
mov
test
jne
mov
jmp
and
mov
test
je
mov
mov
push
call
xor
jmp
mov
ret
mov
test
je
mov
push
call
ret
push
mov
call
xor
cmp
jne
cmp
je
push
push
lea
push
push
push
call
pop
ret
push
mov
push
xor
cmp
jle
cmp
jne
call
cmp
push
jle
lea
push
mov
call
mov
push
push
call
test
pop
pop
je
inc
cmp
jl
xor
pop
pop
pop
ret
xor
inc
jmp
mov
mov
lea
test
je
mov
mov
mov
ret
push
push
push
mov
call
push
call
add
test
je
mov
mov
mov
add
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
mov
jne
mov
push
call
push
call
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
mov
je
mov
lea
push
call
mov
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
call
test
jl
mov
test
je
mov
lea
push
push
call
mov
test
mov
je
mov
push
call
and
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
je
cmp
jne
cmp
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
call
test
jne
inc
mov
mov
imul
lea
cmp
jne
jmp
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
and
push
call
push
call
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
call
mov
and
mov
movzx
and
test
jge
mov
lea
call
mov
lea
call
ret
movsx
cmp
jbe
mov
jmp
test
je
mov
shl
cmp
ja
push
call
test
pop
je
movsx
shl
call
mov
jmp
movsx
shl
push
lea
call
mov
jmp
xor
test
je
movsx
xor
test
jle
mov
sub
dec
shl
add
mov
movsx
inc
cmp
jl
mov
mov
test
je
sub
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
test
jne
lea
push
push
lea
push
movsx
push
movzx
push
push
lea
push
push
call
mov
lea
push
call
jmp
push
mov
call
mov
mov
lea
mov
and
mov
and
push
mov
mov
mov
push
push
call
and
mov
call
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
mov
mov
mov
lea
push
push
push
call
mov
mov
cmp
jne
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
mov
test
je
push
lea
call
push
mov
or
push
call
test
pop
pop
mov
je
mov
test
je
push
and
call
cmp
jne
inc
mov
imul
add
cmp
jne
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
mov
mov
call
imul
push
mov
mov
mov
mov
add
call
mov
test
je
xor
test
setne
mov
dec
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
xor
jmp
push
push
mov
call
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
and
test
je
push
push
call
jmp
xor
test
je
mov
xor
inc
call
ret
push
mov
call
mov
mov
call
test
je
xor
inc
jmp
mov
xor
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
or
cmp
mov
jne
cmp
je
mov
push
call
jmp
cmp
je
mov
push
call
xor
call
ret
push
mov
call
mov
push
lea
call
lea
xor
push
mov
call
mov
cmp
mov
je
mov
cmp
jne
push
call
push
push
lea
push
push
call
mov
push
push
lea
call
mov
push
push
lea
mov
call
mov
push
push
lea
mov
call
mov
push
lea
push
push
push
push
mov
push
call
mov
lea
push
call
lea
push
call
lea
push
call
lea
push
call
push
call
call
ret
push
mov
push
xor
lea
mov
mov
mov
cmp
je
push
push
call
mov
mov
mov
pop
pop
ret
push
mov
call
mov
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
cmp
jle
lea
push
mov
call
mov
mov
add
mov
cmp
je
inc
cmp
jl
or
test
je
mov
push
call
xor
call
ret
or
test
je
mov
push
call
xor
inc
jmp
push
mov
mov
mov
cmp
push
jne
test
jne
xor
inc
jmp
lea
test
jl
cmp
ja
push
push
push
call
add
test
je
mov
mov
push
mov
push
call
inc
xor
inc
pop
pop
ret
xor
jmp
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
push
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
call
mov
xor
test
setne
test
jne
push
call
and
mov
and
push
pop
lea
push
push
push
call
test
mov
jl
and
mov
lea
push
push
call
test
mov
jl
test
je
mov
cmp
je
test
jne
movzx
cmp
jne
push
push
call
pop
movzx
mov
pop
jmp
sub
je
sub
je
dec
je
movzx
jmp
push
jmp
push
jmp
push
pop
test
je
mov
mov
push
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
push
push
push
push
mov
xor
cmp
jne
mov
jmp
mov
lea
push
push
mov
call
cmp
jl
mov
push
xor
cmp
jbe
mov
lea
push
push
push
call
cmp
jl
mov
mov
cmp
je
mov
push
push
call
mov
mov
movzx
inc
cmp
jl
push
mov
push
call
mov
cmp
je
movzx
cmp
jle
mov
jmp
cmp
mov
jle
mov
add
mov
movzx
cmp
mov
jne
mov
mov
mov
or
mov
cmp
jne
mov
push
push
call
pop
mov
mov
pop
inc
movsx
inc
inc
add
cmp
jl
movzx
movzx
sub
je
dec
je
dec
je
dec
jne
push
jmp
xor
jmp
push
jmp
push
pop
mov
mov
mov
mov
mov
push
mov
mov
push
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
test
je
test
je
test
je
push
mov
mov
movs
movs
movs
movs
mov
mov
movs
movs
movs
xor
cmp
movs
mov
mov
mov
je
lea
push
push
mov
mov
push
call
mov
xor
cmp
jl
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
jl
mov
push
lea
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
lea
push
push
push
mov
call
test
jl
mov
cmp
je
push
mov
push
push
call
mov
jmp
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
lea
push
push
call
mov
cmp
jl
mov
lea
push
mov
mov
push
call
mov
cmp
je
xor
cmp
jbe
mov
mov
lea
push
push
push
call
mov
cmp
jl
cmp
je
mov
movzx
inc
cmp
jl
jmp
mov
mov
lea
push
push
push
call
mov
cmp
jl
mov
lea
push
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
cmp
je
push
push
push
push
call
mov
mov
add
push
push
call
mov
cmp
je
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
pop
jmp
mov
mov
pop
xor
pop
call
leave
ret
push
push
push
push
call
ret
mov
push
push
push
call
ret
push
mov
push
and
push
mov
push
push
call
push
mov
push
mov
push
push
lea
push
push
mov
call
test
je
mov
jmp
mov
push
mov
call
mov
lea
push
push
mov
push
call
test
jge
mov
jmp
test
je
mov
mov
imul
mov
call
mov
mov
push
lea
call
mov
mov
mov
call
cmp
je
test
je
xor
cmp
mov
setne
dec
mov
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
mov
test
mov
je
push
lea
push
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
push
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
test
jl
and
and
lea
push
movzx
push
push
movzx
push
lea
push
call
mov
test
mov
jge
or
test
je
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
mov
test
jge
mov
or
test
je
mov
push
call
mov
jmp
lea
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
call
ret
mov
test
jne
mov
jmp
push
push
push
push
push
call
add
ret
push
mov
call
mov
mov
call
mov
xor
lea
mov
mov
mov
call
mov
mov
lea
call
lea
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
call
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
lea
call
lea
call
lea
call
mov
sub
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
sub
call
or
mov
call
call
ret
lea
push
push
push
add
call
ret
push
mov
mov
test
je
mov
push
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
push
push
call
test
pop
pop
je
inc
mov
imul
add
cmp
jne
mov
jmp
imul
mov
mov
mov
lea
push
push
lea
push
mov
push
call
test
jge
xor
jmp
push
lea
push
mov
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
lea
mov
call
test
je
push
xor
cmp
push
jle
push
lea
call
mov
push
push
push
call
push
mov
call
inc
cmp
jl
lea
call
xor
cmp
jle
lea
push
mov
call
mov
add
mov
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
add
push
add
push
push
lea
call
push
mov
call
mov
test
mov
je
mov
call
push
call
pop
inc
cmp
jl
lea
call
pop
pop
pop
leave
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
pop
mov
push
push
push
mov
call
cmp
je
cmp
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
mov
mov
push
push
call
test
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
sub
push
push
push
push
xor
push
mov
call
pop
mov
call
lea
push
push
call
cmp
jne
push
mov
call
push
mov
call
mov
cmp
je
mov
call
cmp
je
mov
lea
push
push
push
call
test
jl
push
lea
call
mov
lea
cmp
jne
push
push
push
push
push
lea
push
push
push
lea
push
mov
call
mov
call
mov
push
push
push
call
test
jge
mov
mov
call
mov
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
push
push
push
push
push
mov
call
pop
pop
xor
pop
inc
pop
add
ret
push
mov
call
mov
and
and
lea
lea
mov
push
mov
call
cmp
je
lea
push
push
push
mov
call
mov
call
mov
or
test
je
mov
push
call
call
ret
mov
push
mov
cmp
jne
call
lea
cmp
je
push
push
call
lea
call
pop
ret
push
mov
call
mov
call
lea
xor
cmp
je
push
push
call
lea
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
mov
mov
push
call
cmp
je
push
push
call
mov
or
cmp
je
mov
push
call
mov
call
call
ret
mov
ret
push
mov
call
mov
mov
cmp
jne
and
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
cmp
je
and
mov
mov
and
lea
push
push
call
push
lea
call
push
mov
mov
call
mov
add
call
push
or
call
push
lea
call
push
mov
call
mov
mov
push
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
mov
mov
mov
lea
push
call
lea
push
call
mov
mov
mov
mov
cmp
mov
je
mov
lea
mov
lea
push
call
mov
mov
cmp
je
cmp
jne
mov
push
mov
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
lea
mov
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
cmp
je
lea
push
sub
mov
lea
movs
movs
mov
movs
movs
sub
mov
lea
movs
movs
movs
push
movs
call
mov
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
cmp
je
mov
cmp
je
mov
cmp
jl
mov
cmp
mov
mov
je
mov
push
call
mov
add
call
mov
cmp
mov
je
mov
push
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
call
ret
push
mov
call
mov
mov
lea
mov
xor
mov
call
cmp
mov
jne
xor
jmp
mov
mov
mov
imul
lea
mov
cmp
je
cmp
jne
mov
push
lea
push
push
mov
mov
call
mov
xor
cmp
je
push
mov
call
test
jne
push
mov
mov
call
pop
mov
mov
cmp
mov
je
mov
neg
lea
sbb
push
and
push
call
mov
mov
jmp
mov
call
mov
ret
mov
mov
mov
test
jne
mov
or
push
call
mov
jmp
lea
push
push
push
push
call
test
mov
jl
lea
push
lea
call
jmp
push
mov
call
jmp
push
pop
cmp
jne
push
mov
call
test
jne
and
push
lea
push
push
mov
mov
call
mov
test
je
and
mov
lea
push
push
push
mov
call
mov
test
je
and
mov
lea
push
push
mov
call
cmp
je
and
push
mov
call
pop
mov
mov
test
mov
je
push
mov
push
neg
lea
sbb
and
push
push
call
jmp
xor
mov
mov
jmp
mov
call
mov
ret
mov
mov
cmp
jne
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
jmp
lea
push
lea
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
or
test
je
mov
push
call
inc
xor
jmp
mov
call
ret
mov
push
mov
cmp
jne
push
call
push
mov
call
pop
ret
mov
mov
mov
mov
jmp
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
ret
push
push
call
mov
xor
cmp
jne
mov
jmp
cmp
push
mov
jne
push
push
call
cmp
pop
pop
mov
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
jne
call
mov
call
mov
call
ret
mov
push
call
pop
mov
test
je
push
call
pop
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
call
cmp
je
xor
jmp
xor
mov
push
call
pop
ret
push
mov
push
and
push
push
lea
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
lea
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
add
cmp
je
test
je
mov
add
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
add
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
or
je
mov
mov
dec
jne
mov
mov
jmp
mov
mov
dec
je
push
push
lea
lea
cmp
jbe
mov
rep
pop
pop
sub
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
push
push
push
push
push
call
pop
pop
cmp
je
lea
push
call
or
je
mov
cmp
jne
mov
or
je
push
call
jmp
mov
push
push
call
add
push
mov
call
mov
mov
mov
mov
mov
cmp
adc
mov
add
jmp
mov
pop
ret
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
je
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
cmp
setge
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
je
mov
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
mov
cmp
je
dec
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
inc
cmp
jne
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
mov
cmp
setne
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
mov
push
call
pop
pop
mov
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
xor
mov
cmp
sete
dec
call
ret
mov
push
call
pop
ret
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fsin
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fsin
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fcos
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fcos
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fptan
fstsw
sahf
jp
fstp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fptan
fstp
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
fld
je
fchs
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fxch
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
je
fldpi
jmp
fldz
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fld1
fpatan
cmp
jne
mov
lea
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
test
je
fchs
jmp
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
je
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpnlepd
cmp
jl
cmp
jg
andpd
addsd
movq
fld
ret
fld
ret
cmpnlepd
andpd
movq
fld
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
jne
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpltpd
cmp
jl
cmp
jg
andpd
subsd
movq
fld
ret
fldz
ret
cmpltpd
orpd
andpd
movq
fld
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
fxch
cmp
je
fprem
jmp
call
fstsw
fwait
sahf
jp
fstp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
movapd
movapd
psllq
psrlq
psrlq
andpd
movd
psubd
mov
psrlq
psllq
movd
cmp
jl
cmp
jg
movq
subsd
orpd
movq
fld
ret
movq
fld
ret
cmp
movq
je
movq
cmp
fldz
jl
fchs
ret
movapd
addsd
movq
andpd
cmpneqpd
pextrw
andpd
orpd
mov
cmp
jne
movq
fld
ret
sub
movlpd
mov
mov
add
mov
add
mov
sub
mov
call
fld
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
fst
call
call
add
ret
lea
call
push
fstcw
mov
je
cmp
je
call
test
jne
fsqrt
cmp
jne
mov
lea
jmp
test
jne
test
jne
cmp
jne
jmp
call
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fxch
fstp
fst
mov
call
add
ret
lea
call
mov
push
fstcw
cmp
je
call
and
lea
cmp
je
call
je
test
je
mov
and
jne
fyl2x
call
cmp
jne
fchs
cmp
jne
lea
mov
jmp
cmp
jne
lea
mov
call
pop
ret
lea
call
test
jne
inc
jmp
faddp
mov
jmp
test
jne
faddp
mov
jmp
xor
jmp
xor
and
or
jne
lea
call
mov
mov
and
and
cmp
jne
or
jne
test
jne
sub
mov
push
sub
fstp
fstp
fsave
call
add
pop
frstor
fld
add
test
je
mov
jmp
mov
and
or
jne
fstp
mov
and
or
je
call
mov
shr
test
je
fld
test
je
fchs
mov
jmp
fldz
test
je
fchs
jmp
fstp
fld1
jmp
fld
call
fchs
test
jne
fstp
fstp
fld
mov
jmp
fld
frndint
fcomp
mov
fstsw
sahf
jne
fmul
inc
fld
frndint
fcompp
fstsw
sahf
jne
inc
ret
fstp
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldln2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldlg2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
fldz
add
jmp
push
mov
push
push
call
fld
mov
mov
and
cmp
pop
pop
jne
or
push
push
fstp
call
cmp
pop
pop
jle
cmp
jle
cmp
jne
push
fld
push
push
fstp
push
call
add
jmp
fld
jmp
fld
fadd
push
sub
fstp
fld
fstp
push
push
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
fld
add
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
push
call
mov
mov
and
cmp
pop
pop
jne
fld
push
push
fstp
call
test
pop
pop
jle
cmp
jle
cmp
jne
fild
push
sub
fstp
fld
fstp
push
call
add
jmp
push
push
call
pop
pop
jmp
fld
push
fadd
sub
fstp
fild
fstp
fld
fstp
push
push
call
add
jmp
fldz
fcomp
fnstsw
test
jnp
fld
lea
push
push
push
fstp
call
mov
mov
add
test
jge
mov
sub
cmp
jl
jmp
mov
sub
cmp
jg
add
cmp
jle
push
sub
fstp
fld
fstp
call
fstp
fild
fstp
push
push
fld
fstp
push
push
jmp
cmp
jle
add
push
push
push
fstp
call
add
push
sub
fstp
fild
fstp
jmp
cmp
jge
fmul
push
sub
fstp
fild
fstp
fld
fstp
push
push
jmp
cmp
jge
add
push
push
push
fstp
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
add
fld
pop
pop
leave
ret
call
mov
mov
ret
call
mov
imul
add
mov
mov
shr
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
add
xor
je
sub
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
add
xor
je
sub
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
je
push
mov
mov
lea
push
push
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
cmp
jl
jg
cmp
jb
mov
test
jl
mov
jg
test
jb
sub
sbb
mov
mov
fild
pop
ret
call
fldz
mov
pop
ret
push
mov
sub
push
push
xor
push
lea
push
push
mov
mov
xor
call
add
cmp
je
cmp
jne
push
push
push
push
push
call
add
mov
cmp
mov
mov
jne
cmp
je
push
push
call
mov
neg
pop
sbb
pop
inc
jmp
cmp
push
mov
mov
mov
je
call
mov
call
mov
push
lea
push
push
push
call
add
mov
call
cmp
je
mov
jmp
cmp
je
call
cmp
jne
call
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
test
mov
jne
mov
push
lea
push
push
push
call
add
mov
pop
push
call
pop
pop
mov
pop
leave
ret
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
mov
mov
push
push
push
xor
xor
sub
je
dec
je
dec
jne
mov
jmp
mov
push
pop
jmp
mov
push
jmp
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
mov
cmp
je
cmp
je
mov
inc
cmp
jne
mov
jmp
mov
inc
mov
sub
push
add
push
push
call
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
push
push
call
mov
push
xor
inc
push
push
call
add
inc
cmp
jb
or
jmp
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
sub
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
xor
mov
call
mov
mov
push
call
pop
test
jne
mov
mov
call
mov
jmp
push
call
pop
mov
cmp
jne
mov
push
jmp
mov
push
pop
cmp
jne
push
call
pop
jmp
push
push
mov
call
pop
test
pop
jne
push
push
call
pop
pop
test
je
mov
cmp
jne
call
mov
cmp
jne
mov
jmp
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
push
push
jmp
cmp
je
push
call
pop
cmp
jb
mov
cmp
je
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
call
mov
mov
mov
mov
call
cmp
je
mov
jmp
xor
push
call
pop
ret
mov
mov
mov
call
ret
push
mov
push
and
lea
push
push
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
jmp
mov
push
call
pop
test
jne
call
mov
jmp
push
call
pop
mov
mov
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
inc
push
mov
sub
push
push
call
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
jmp
push
push
mov
call
pop
pop
test
jne
call
mov
mov
cmp
jne
mov
jmp
mov
call
mov
mov
call
mov
push
push
push
push
lea
push
call
add
cmp
jne
push
push
mov
call
pop
pop
test
je
call
cmp
jne
call
mov
mov
cmp
je
push
call
pop
mov
cmp
jne
push
call
pop
jmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
cmp
je
call
mov
mov
call
ret
xor
mov
cmp
je
push
call
pop
push
call
pop
ret
push
mov
push
and
lea
push
push
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
sub
mov
sbb
xor
push
add
push
adc
push
push
call
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
mov
xor
add
adc
mov
mov
xor
pop
leave
ret
mov
mov
push
mov
lea
jmp
cmp
je
add
cmp
jb
cmp
pop
jb
test
jne
lea
cmp
jb
cmp
jae
push
push
push
call
add
test
je
mov
inc
mov
lea
ret
xor
ret
push
push
call
xor
xor
mov
mov
mov
mov
mov
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
jne
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
or
push
push
lea
push
call
add
cmp
je
xor
inc
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
push
call
pop
test
jne
push
call
push
call
pop
pop
jmp
push
call
pop
mov
mov
mov
call
mov
lea
mov
push
push
push
lea
push
push
mov
sar
and
imul
mov
push
push
call
test
je
push
call
mov
mov
lea
push
mov
push
call
add
mov
cmp
je
xor
call
mov
cmp
je
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
jne
mov
cmp
je
mov
jmp
mov
lea
push
call
pop
test
mov
jne
mov
push
pop
push
push
lea
push
call
add
mov
mov
mov
cmp
mov
je
mov
mov
cmp
mov
je
mov
mov
mov
mov
push
call
mov
push
call
lea
mov
push
call
lea
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
call
mov
mov
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
jmp
mov
push
mov
push
call
pop
pop
mov
mov
cmp
jne
push
call
push
call
push
call
add
call
mov
mov
jmp
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
je
push
call
push
call
push
call
push
call
add
jmp
mov
push
push
push
call
add
mov
cmp
je
cmp
je
push
call
pop
lea
mov
mov
cmp
jne
push
push
call
pop
pop
cmp
jmp
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
call
push
mov
call
pop
pop
mov
add
mov
cmp
jae
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
push
call
push
call
pop
pop
push
call
push
call
pop
pop
push
mov
call
push
call
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
jmp
mov
push
call
pop
mov
mov
mov
mov
shl
cmp
je
push
call
pop
mov
shl
cmp
je
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
test
je
push
call
pop
mov
call
mov
cmp
jne
call
mov
jmp
push
call
call
mov
call
mov
push
push
lea
push
call
add
cmp
jne
call
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
push
push
push
call
add
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
lea
push
push
push
push
push
call
add
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
je
cmp
jne
mov
lea
cmp
jbe
jmp
mov
and
mov
push
call
pop
mov
push
call
push
call
pop
pop
and
mov
test
je
or
lea
push
pop
jmp
mov
cmp
jne
push
call
pop
cmp
jne
inc
or
jmp
or
jmp
or
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
push
mov
push
push
push
lea
mov
call
mov
test
je
mov
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
fldz
jmp
mov
cmp
jle
lea
push
movzx
push
push
call
add
jmp
movzx
mov
movzx
and
test
je
inc
jmp
lea
push
push
push
push
call
pop
push
lea
push
push
call
add
test
mov
je
mov
add
mov
mov
test
je
test
fldz
fstp
je
mov
jmp
test
je
cmp
fld
jne
fchs
jmp
test
je
fldz
fcom
fnstsw
test
jp
fstp
call
mov
jmp
fstp
fld
fstp
cmp
je
mov
and
fld
pop
pop
pop
leave
ret
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
push
test
push
je
mov
add
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
jne
sub
jmp
sub
jmp
sub
jmp
sub
mov
test
jne
mov
shr
jne
jmp
mov
add
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
mov
pop
pop
pop
ret
mov
xor
mov
mov
pop
pop
pop
ret
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
mov
mov
cmp
jne
push
push
call
pop
pop
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
jmp
add
cmp
je
mov
and
pop
leave
ret
push
push
push
call
add
ret
mov
ret
mov
ret
push
push
call
and
mov
mov
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
and
mov
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
mulsd
movlpd
fld
add
ret
movlpd
mulsd
subsd
mulsd
movlpd
fld
add
ret
jmp
nop
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fwait
mov
shl
sar
rol
mov
and
xlat
movsx
and
mov
add
add
jmp
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fxch
mov
fxam
fstsw
fxch
mov
shl
sar
rol
mov
and
xlat
mov
shl
sar
rol
mov
and
xlat
shl
shl
or
movsx
and
mov
add
add
jmp
call
fxch
fstp
ret
call
jmp
fstp
fstp
fldz
ret
fstp
fstp
fld1
ret
fstp
fld
test
je
mov
ret
mov
fadd
ret
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fld
test
je
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fstp
fld
cmp
jg
mov
or
ret
or
je
fchs
ret
int3
int3
int3
int3
int3
int3
fld
frndint
fsub
fxch
fchs
f2xm1
fld1
faddp
fscale
fstp
ret
mov
and
or
mov
fldcw
ret
test
je
mov
ret
fadd
mov
ret
mov
and
cmp
je
fld
ret
mov
sub
or
mov
mov
mov
shld
shl
mov
mov
fld
add
test
mov
ret
mov
and
cmp
je
ret
mov
ret
cmp
je
fldcw
pop
ret
mov
cmp
je
and
je
fstsw
and
je
mov
call
pop
ret
fldcw
pop
ret
sub
fst
mov
add
and
jmp
sub
fst
mov
add
and
je
cmp
je
mov
cmp
je
and
jne
fstsw
and
je
mov
cmp
je
call
pop
ret
call
pop
ret
fldcw
pop
ret
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jae
fmul
jmp
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jbe
fmul
jmp
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
jmp
push
mov
add
mov
fstp
mov
mov
mov
mov
mov
lea
lea
push
push
push
call
add
fld
cmp
je
fldcw
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
or
je
call
fsubrp
jmp
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
call
or
je
fld
call
fxch
call
fsubrp
fdivp
ret
mov
call
or
je
call
fld1
fchs
fxch
fscale
jmp
fstp
fld
jmp
fstp
fld
ret
ret
call
jmp
jmp
mov
call
jmp
fldl2e
fmulp
xor
call
not
test
je
call
fxch
fstp
test
jne
not
fld1
faddp
fscale
jmp
call
faddp
or
jne
fld1
fadd
faddp
ret
fld
fld1
or
jne
fadd
fchs
fxch
fdivp
ret
int3
int3
int3
int3
push
mov
add
push
fstcw
fwait
cmp
je
call
or
call
pop
leave
ret
fxch
fst
fxch
fst
jmp
push
mov
add
push
fstcw
cmp
je
call
or
and
call
pop
leave
ret
fst
jmp
push
mov
add
push
push
push
call
add
push
push
call
add
fstcw
or
mov
call
call
pop
leave
ret
and
cmp
jne
fst
mov
or
je
cmp
je
cmp
je
or
je
movsx
mov
jmp
mov
and
jne
fstsw
and
je
mov
jmp
fldcw
fwait
ret
mov
and
or
je
cmp
je
jmp
mov
and
cmp
je
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jae
fmul
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jbe
fmul
push
push
mov
inc
mov
test
jne
cld
lea
lea
movs
movs
cmp
je
lea
lea
movs
movs
fstp
lea
lea
push
push
mov
mov
movsx
push
call
add
pop
pop
fld
jmp
push
mov
add
push
push
push
call
add
fstcw
and
call
call
pop
leave
ret
push
mov
add
push
mov
mov
and
cmp
jne
or
mov
mov
mov
shld
mov
mov
fld
jmp
fld
pop
leave
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
pextrw
and
pinsrw
sub
movlpd
subsd
movlpd
fld
add
ret
jmp
lea
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
unpcklpd
movapd
mulpd
cvtsd2si
movapd
addpd
movapd
subpd
movlpd
add
movapd
mulpd
and
mulsd
mov
mulpd
shl
subpd
mulpd
add
shl
add
addsd
movapd
subpd
movlpd
shl
lea
andpd
movapd
add
subpd
unpckhpd
divsd
subpd
movapd
subsd
mulpd
subpd
movapd
mulpd
movapd
mulpd
addsd
movapd
mulpd
addpd
addpd
mulpd
addpd
addpd
movapd
mulpd
mulpd
addpd
movapd
mulpd
addpd
movapd
mulpd
mulsd
mulpd
mulpd
movsd
addpd
movsd
mulsd
unpckhpd
addsd
unpckhpd
addsd
subsd
addsd
movsd
movlpd
unpckhpd
addsd
mulsd
addsd
addsd
addsd
movlpd
mulsd
movlpd
andpd
mulsd
mulsd
subsd
subsd
subsd
mulsd
movsd
subsd
addsd
subsd
addsd
subsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
movsd
mulsd
movlpd
mulsd
addsd
mulsd
movlpd
fld
add
ret
jmp
mov
lea
add
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
mulsd
addsd
mulsd
addsd
pshufd
addsd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pmovmskb
psllq
andpd
psrlq
movsd
movlpd
movsd
subsd
mulsd
addsd
subsd
mulsd
movsd
andpd
psllq
pextrw
orpd
sub
add
mulsd
mulsd
movapd
mulsd
mulsd
subsd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
subpd
movsd
mulsd
and
shl
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
pinsrw
addsd
pshufd
subsd
addsd
orpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
mulpd
pshufd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pextrw
andpd
pshufd
andpd
movsd
movlpd
movsd
subsd
mulsd
addsd
mulsd
subsd
movsd
mulsd
mulsd
subsd
subsd
addsd
subsd
movapd
pshufd
subsd
addsd
pshufd
addsd
mulsd
addsd
pshufd
divsd
movapd
movapd
movapd
mulpd
movsd
mulpd
mulpd
and
mulsd
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
cmps
inc
add
loopne
add
movs
inc
add
inc
add
movs
inc
add
cmps
inc
add
inc
add
imul
inc
add
add
add
add
je
and
popa
add
add
add
bound
push
add
je
jae
add
push
add
arpl
push
add
js
je
and
inc
add
jb
ins
add
je
add
add
inc
add
ins
add
dec
add
ins
add
push
add
add
imul
dec
add
ins
add
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
add
arpl
jb
imul
outs
add
add
add
dec
add
push
add
je
and
inc
add
jae
arpl
jb
imul
outs
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
ins
add
add
add
outs
add
jb
arpl
add
add
add
ins
add
add
add
add
add
bound
push
add
je
add
dec
add
push
add
je
dec
add
outs
add
add
add
dec
add
outs
add
jb
dec
add
outs
add
add
dec
add
je
imul
add
add
inc
dec
outs
jne
add
cmp
add
add
add
inc
add
add
add
add
inc
add
inc
add
sbb
inc
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
gs
add
add
loope
add
jg
add
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
mov
add
mov
add
inc
add
loop
add
add
inc
add
inc
add
mov
add
inc
add
imul
imul
add
add
inc
add
add
add
add
add
loop
add
mov
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
mov
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
mov
inc
add
mov
add
inc
add
add
add
add
add
jbe
add
ins
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
inc
add
add
add
add
add
mov
add
push
add
add
mov
add
adc
add
dec
mov
add
push
add
add
push
add
add
add
and
add
add
add
dec
add
dec
add
add
add
add
outs
add
add
je
popa
add
ins
add
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jbe
add
bound
pop
add
add
add
add
add
je
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jae
add
jbe
add
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
dec
add
add
add
jb
outs
add
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
outs
add
jb
outs
add
dec
add
outs
add
add
jb
xor
xor
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
add
jb
jbe
add
xor
xor
add
and
add
dec
add
dec
add
add
add
add
bound
pop
add
add
add
add
add
je
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jb
bound
pop
add
add
add
add
jo
add
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jae
add
je
popa
add
ins
add
add
add
add
inc
add
add
inc
add
add
add
add
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
jne
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
ins
add
add
outs
add
add
and
add
add
add
dec
add
dec
add
add
add
imul
push
add
add
add
add
xor
xor
add
add
inc
add
add
inc
add
add
add
add
push
add
outs
add
push
add
jb
jbe
add
xor
xor
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
push
add
je
add
xor
add
add
and
add
add
dec
add
push
add
je
add
xor
add
add
inc
add
add
inc
add
add
add
add
imul
popa
add
ins
add
inc
add
add
inc
add
add
add
add
data16
jne
ins
add
add
je
add
jae
imul
add
and
add
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
jno
add
dec
add
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
add
add
ins
dec
add
outs
dec
add
jo
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
jno
add
dec
add
jno
add
dec
add
dec
add
jb
add
jb
add
jb
add
jno
add
add
jno
add
add
dec
add
jb
add
jb
add
jb
add
jecxz
add
rol
dec
ins
gs
jne
jns
imul
inc
dec
ins
gs
imul
push
add
add
inc
add
add
add
dec
add
dec
add
inc
add
add
add
add
add
inc
add
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
rol
mov
inc
add
inc
add
inc
add
add
jae
je
add
add
add
xor
add
add
pop
add
add
inc
add
add
add
add
add
inc
add
pop
das
mov
rcl
xchg
adc
add
push
or
cmp
rcl
cmp
mov
in
add
in
add
rol
push
outs
imul
outs
and
arpl
je
outs
outs
add
add
ins
loopne
add
add
add
add
add
add
add
add
inc
outs
jb
js
je
jb
arpl
jae
add
arpl
gs
ins
add
ss
add
gs
push
push
je
arpl
jne
jb
outs
je
add
jb
gs
xor
cs
ins
add
add
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pusha
jbe
add
add
add
cmp
push
jbe
add
pop
dec
add
cmp
dec
jbe
add
pop
dec
add
inc
add
dec
add
pop
dec
add
jbe
add
pop
dec
add
sub
dec
add
pop
dec
add
inc
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
sub
add
add
add
cmp
add
cmp
add
add
ins
imul
outs
arpl
gs
outs
imul
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
arpl
gs
outs
imul
add
jae
jb
add
jae
gs
popa
ins
jne
add
jae
gs
popa
ins
jne
add
jae
ins
ins
outs
arpl
add
add
add
add
jb
add
dec
add
jno
add
popa
and
arpl
je
outs
outs
add
add
outs
je
ins
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
ins
popa
fs
and
je
ins
jo
and
ins
outs
popa
and
and
jb
outs
je
ins
and
jb
jb
and
arpl
jb
arpl
or
mov
xor
scas
xor
fiadd
xchg
movs
jmp
mov
shl
push
dec
loopne
push
pop
push
aaa
aam
xor
cmp
push
or
(bad)
jmp
movs
adc
mov
(bad)
jno
adc
js
xchg
adc
(bad)
(bad)
stos
push
mov
pop
repnz
in
add
ins
sti
aas
les
pop
sbb
cmp
data16
gs
mov
push
and
js
test
ins
repz
loope
rcl
xor
aam
mov
push
scas
push
cld
inc
imul
xchg
ins
cmp
jne
(bad)
int
sub
icebp
lods
and
and
dec
enter
jne
lds
div
cmp
rcl
aam
in
pushf
imul
sbb
loope
pcmpeqd
cmp
and
jno
fxch
stc
mov
adc
adc
in
cmp
in
or
mov
movs
mov
popf
loopne
je
pop
dec
inc
data16
xor
jo
xor
loope
sub
lods
popf
push
leave
sbb
dec
cmps
in
pop
mov
test
pop
imul
outs
adc
jle
and
mov
mov
test
cmp
mov
pop
(bad)
fcomp
arpl
adc
xchg
fst
cdq
push
mov
or
(bad)
vdivsd
addr16
xor
mov
xchg
xor
mov
push
stc
adc
hlt
fidivr
test
and
hlt
push
lods
pop
xor
and
jno
ror
ret
mul
or
into
jne
xchg
or
dec
int3
outs
call
popa
mov
add
in
test
mov
xchg
jmp
push
sub
push
or
ins
push
std
inc
sbb
(bad)
dec
or
retf
adc
test
mov
inc
add
push
jno
cmps
cmp
mov
dec
cmps
lahf
dec
mov
xchg
push
mov
ins
jb
in
cmp
inc
cdq
pop
cmp
or
mov
ja
push
cmp
js
sbb
jne
or
cld
push
pop
idiv
mov
xor
jmp
test
imul
popa
pop
add
ss
push
cld
mov
mul
add
sub
mov
and
ins
aas
mov
fsub
xrelease
mov
or
cwde
pop
sub
mov
in
cmp
dec
in
sbb
test
inc
push
pop
pop
push
push
fs
xor
stc
shl
mov
sub
test
xor
adc
outs
add
sbb
xchg
xor
cmp
aam
mov
mov
xchg
ins
(bad)
fbld
aam
xchg
xor
dec
xchg
push
in
push
enter
and
pushf
pop
jecxz
ret
lods
in
mov
push
pop
dec
dec
fs
jb
push
and
out
pop
pop
(bad)
xchg
or
cli
and
gs
push
mov
cdq
xlat
jno
sub
sbb
push
xchg
jge
loope
xchg
mov
loope
mov
in
cmc
pusha
add
and
adc
js
mov
or
sbb
das
aas
dec
push
jbe
lds
jg
(bad)
not
cmp
xlat
and
pop
xchg
pop
xchg
fdiv
sub
sbb
jp
pushf
push
test
or
call
push
mov
imul
and
int
pop
xor
push
jp
test
mov
pusha
dec
or
shr
sbb
call
push
dec
in
cmp
sbb
clc
adc
scas
mov
bound
and
or
ret
cs
xor
pop
les
xlat
movs
in
in
xor
ins
stc
je
pop
sbb
mov
sub
push
fild
in
imul
pop
dec
daa
cmp
(bad)
mov
in
push
cmps
jo
jnp
(bad)
mov
fnsave
aad
push
dec
jmp
add
cmp
sub
inc
or
xor
mov
(bad)
mov
adc
hlt
jp
(bad)
add
enter
sub
inc
and
jo
xchg
sub
xlat
pop
jns
mov
jle
neg
xor
lods
inc
(bad)
(bad)
cmp
(bad)
cmp
cld
out
(bad)
fild
mov
or
ror
stc
cmc
lock
retf
push
xchg
loop
mov
cwde
leave
jl
ficom
mov
pop
pushf
or
outs
sbb
pusha
dec
jle
les
(bad)
call
out
outs
mov
mov
adc
push
add
and
and
stos
inc
(bad)
dec
xor
sub
icebp
sub
xchg
push
mov
imul
fild
pop
mov
pop
sbb
(bad)
into
xlat
xor
mov
adc
bound
call
scas
loope
pop
inc
cmp
mov
(bad)
mov
fld
addr16
pop
pop
call
sar
mov
pop
add
pop
cld
mov
xchg
stos
push
hlt
or
in
add
retf
inc
mov
xchg
xlat
test
push
inc
(bad)
xor
jnp
fprem1
push
sub
xchg
sbb
ins
sbb
fwait
loop
push
pop
xchg
mov
cmp
std
lods
push
push
dec
push
stos
mov
pop
test
in
adc
les
stos
pushf
pop
xchg
test
mov
pop
sub
cld
jmp
jae
aas
jp
fadd
adc
js
cld
push
rcr
mov
push
stos
push
cmps
leave
push
push
ins
(bad)
test
and
jne
or
dec
and
cli
xor
sbb
es
into
sub
jmp
xor
fs
call
je
jmp
jl
xchg
mov
ds
call
ror
fcmovnu
or
add
mov
lea
mov
test
imul
(bad)
stc
les
pop
fstp
(bad)
ret
or
mov
in
inc
cmp
mov
movs
push
or
pop
xchg
(bad)
icebp
jbe
daa
imul
dec
or
cld
adc
pcmpgtw
dec
enter
movs
xchg
stc
adc
lock
je
adc
mov
imul
loope
repz
and
stc
pop
and
loope
fiadd
add
sbb
imul
mov
mov
inc
mov
jmp
imul
mov
push
gs
cmp
mov
and
test
ja
cmps
repz
xchg
movs
std
sahf
mov
sbb
cmp
xchg
in
xchg
aas
movs
cwde
fild
mov
push
pop
pop
rcr
bound
dec
or
and
or
cwde
(bad)
nop
repz
or
cli
aam
xor
inc
push
adc
cmc
outs
mov
pop
rcl
jns
xchg
dec
or
pop
sbb
xchg
fs
or
cmp
out
test
sub
fwait
mov
pop
push
inc
or
cmc
dec
and
and
mov
push
(bad)
sub
pop
in
adc
and
test
(bad)
mov
add
out
jmp
cld
xor
aaa
sub
loopne
and
mov
outs
mov
mov
mov
or
pop
cmp
jmp
je
test
out
pop
cmp
xor
push
gs
jl
push
test
(bad)
fs
xchg
icebp
adc
mov
add
xor
jmp
not
pop
jmp
aas
push
pop
fadd
in
jmp
jp
lods
mov
dec
xchg
imul
retf
xchg
cmp
mov
mov
xor
mov
(bad)
fprem1
ja
sbb
mov
push
mov
mov
in
add
and
fcmovbe
push
dec
or
(bad)
mov
ja
imul
(bad)
mov
gs
pop
sbb
fmul
scas
sbb
gs
clc
sbb
rol
adc
ficomp
ss
sub
xor
jecxz
pop
adc
(bad)
lods
sti
and
cwde
je
fnstcw
je
and
pop
adc
frstor
mov
sub
inc
mov
inc
sub
aad
test
in
sbb
test
(bad)
jmp
jns
outs
cmp
rcr
and
call
test
push
hlt
xchg
and
je
add
jnp
cmp
jmp
loope
int3
xor
sti
mov
and
imul
fldcw
stc
aaa
icebp
mov
push
mov
cmp
aad
movs
lahf
addr16
fmulp
jb
sub
frstor
push
dec
(bad)
or
push
mov
in
aad
xor
lahf
retf
sub
cwde
hlt
enter
lahf
xchg
push
gs
aad
mul
test
sar
jmp
dec
xchg
ret
stc
inc
push
mov
stos
cs
pop
cmp
mov
adc
add
(bad)
pop
jle
push
and
pop
cmp
int3
sbb
shr
pop
cld
fcomp
out
test
punpckldq
xor
xor
stos
or
aaa
cmp
xlat
nop
imul
stos
xchg
aam
push
add
add
sbb
hlt
mov
(bad)
cli
xchg
mov
xchg
test
bound
xor
and
aam
xchg
aad
lock
add
cmp
xchg
add
xor
cmp
ja
xchg
shl
rol
mov
inc
js
dec
inc
adc
fs
add
out
jle
push
retf
(bad)
mov
mov
add
pop
sbb
loope
shr
cmp
pop
out
mov
pop
int3
or
pusha
clc
movs
jno
outs
test
ja
cli
adc
inc
pop
(bad)
sub
xchg
mov
ret
retf
xchg
mov
dec
fwait
or
inc
js
call
and
ins
or
dec
daa
mov
push
out
and
cld
fstp
push
mov
ins
mov
xor
or
test
sbb
js
push
dec
fldenv
jl
fstp
mov
test
fst
pop
loope
jge
xor
xchg
dec
jmp
mov
(bad)
test
add
adc
sub
cwde
and
pop
xchg
(bad)
inc
retf
(bad)
sti
xchg
pop
inc
mov
sub
adc
sub
inc
test
test
lock
enter
add
jmp
sbb
cmp
dec
mov
in
hlt
sbb
pushf
adc
xchg
ja
cmps
cmp
inc
and
cld
out
jg
sahf
fmul
lds
sub
pop
lods
add
inc
jae
sub
test
mov
pushf
jno
dec
lods
cli
mov
mov
ret
mov
rol
cs
out
clc
(bad)
jmp
cdq
pop
outs
or
dec
jl
rcl
fs
leave
jno
cmps
xor
inc
inc
ins
ins
push
push
cmc
jns
xchg
ja
(bad)
pop
pop
and
icebp
mov
shr
mov
push
fidiv
jp
add
cdq
inc
and
and
dec
inc
add
addr16
pop
sub
fmul
dec
pop
push
mov
fprem1
lods
sub
mov
retf
sub
or
pop
xor
scas
bound
je
addr16
cmp
fldenv
pop
jge
inc
push
pop
pop
cmp
jp
ret
lds
(bad)
retf
retf
xchg
inc
push
inc
leave
mov
pop
mov
loop
jnp
lods
cmp
out
cld
jl
bound
add
and
(bad)
outs
adc
add
es
and
fimul
sar
mov
test
popa
jnp
inc
ja
sub
into
imul
dec
mov
test
sbb
sbb
pop
dec
push
in
shr
sar
rol
jno
daa
sbb
loop
fscale
and
or
mov
cmp
js
mov
call
icebp
ret
gs
mov
imul
jne
cwde
mov
and
xor
je
aam
mov
int
jmp
push
movs
jecxz
dec
jnp
ins
add
inc
mov
shr
cmp
ja
imul
mov
sbb
int
dec
outs
push
mov
mov
mov
sti
mov
cmp
rcl
mov
test
mov
jmp
xchg
adc
clc
xchg
jne
sbb
xchg
fbld
mov
sbb
mov
adc
xor
outs
dec
cmp
jmp
fwait
xchg
pop
jecxz
repnz
push
loopne
dec
xchg
pusha
sbb
mov
jnp
hlt
mov
es
adc
mov
or
leave
sbb
dec
lahf
mov
retf
or
jl
sbb
pop
imul
rol
je
add
stos
int3
test
call
sahf
xchg
fiadd
rcr
inc
dec
mov
jns
fwait
stos
dec
mov
push
(bad)
push
push
iret
and
inc
mov
push
imul
gs
pop
xchg
(bad)
xchg
push
mov
ja
cmp
inc
hlt
and
leave
xlat
sbb
jns
sub
add
movs
ss
test
gs
or
jno
fsub
stc
xchg
jnp
dec
jmp
xor
add
mov
cmp
fdiv
test
xor
sbb
jb
cmp
pop
in
jmp
sub
add
cdq
jl
inc
repz
in
and
pop
inc
mov
push
push
sub
ds
sub
adc
ror
cmp
out
xor
cmps
mov
fcom
push
popf
(bad)
pusha
stc
mov
xlat
adc
hlt
jp
adc
sub
jnp
and
aaa
lds
xor
cmp
rcl
inc
xor
sbb
mov
xor
jno
sbb
stc
mov
enter
push
pop
lds
adc
and
ds
cli
je
std
stos
scas
les
push
push
mov
push
cmp
jno
xor
jbe
(bad)
das
test
lods
(bad)
pushf
in
iret
push
push
call
dec
daa
mov
pushf
mov
enter
test
arpl
add
dec
mov
dec
test
mov
pop
pop
jb
lea
mov
add
jo
jge
or
jmp
push
dec
cld
sub
lahf
or
retf
ds
dec
add
jo
pop
jne
fwait
cmp
(bad)
movs
cld
push
es
dec
xchg
ins
sub
jns
das
aaa
or
retf
in
xchg
sbb
pop
fiadd
xchg
pusha
and
inc
sbb
and
les
outs
push
test
mov
xor
leave
mov
dec
inc
jae
inc
clc
push
pop
stc
outs
gs
push
(bad)
cmc
push
jecxz
push
mov
movs
fcmovb
fstp
jmp
jne
inc
pop
inc
bound
cmp
mov
aam
(bad)
clc
cli
push
inc
call
hlt
adc
dec
test
fisub
sbb
xchg
or
(bad)
push
jle
(bad)
xchg
imul
cmp
loope
in
mov
hlt
mov
mov
rcl
sbb
fs
push
dec
mov
test
loopne
or
ins
jo
inc
xchg
or
clc
mov
mov
popf
inc
popa
ins
out
mov
mov
inc
sbb
pop
xor
scas
je
mov
inc
test
(bad)
(bad)
add
adc
outs
fadd
ret
cld
aam
xchg
inc
mov
jb
or
or
xor
pop
inc
push
fldpi
jo
jmp
imul
jg
les
in
loopne
ficomp
jne
sub
pop
imul
sbb
icebp
sub
push
mov
jb
push
mov
cmc
js
lea
pop
rcl
fimul
in
call
pop
adc
dec
ss
jb
pop
hlt
test
mov
int
fwait
pop
xchg
repz
adc
jge
imul
mov
mov
lea
or
or
inc
movs
sub
add
out
or
call
movs
push
xchg
mov
sbb
imul
xor
push
pop
shl
sub
rdtsc
fs
inc
mov
mov
push
sub
xor
imul
adc
jle
jns
clc
pop
mov
repnz
in
(bad)
or
movs
aam
dec
rol
or
sti
arpl
jmp
push
and
test
cdq
in
movs
cmp
retf
mov
ret
cmp
repnz
rol
cwde
sub
mov
inc
sub
cli
lds
or
out
inc
rol
cdq
repnz
loopne
sub
outs
xor
jl
sub
pusha
neg
or
jno
cmc
xchg
push
loope
aad
pop
aam
and
dec
(bad)
iret
shl
sbb
mov
xchg
xchg
and
fistp
or
inc
xor
mov
mov
push
sti
adc
js
mov
out
add
dec
dec
inc
in
xchg
push
pop
test
sub
adc
pop
jmp
ret
jg
outs
adc
adc
cmp
dec
aaa
inc
sbb
jne
xchg
popa
add
ja
adc
sbb
sub
add
inc
lods
cli
sub
mov
les
mov
imul
nop
dec
(bad)
pushf
cmps
inc
stc
jmp
sbb
mov
jecxz
lock
sbb
fwait
loope
ss
mov
bound
fldenv
xor
jmp
push
sub
out
vpminsw
cmp
stos
(bad)
outs
or
sar
jmp
pop
xchg
pop
dec
addr16
xchg
pop
fdivr
push
jns
shr
xchg
repnz
cld
js
lock
pusha
pop
jnp
fsub
adc
retf
jp
cmp
xchg
inc
aam
test
pop
push
and
mov
js
sbb
jl
cmp
mov
out
hlt
push
inc
test
mov
scas
xor
repz
jecxz
int3
pop
xchg
aad
mov
jns
adc
sub
mov
vcvttpd2dq
test
out
popf
mov
mov
in
leave
in
add
cwde
cwde
xlat
xor
adc
jo
retf
pop
fisttp
pop
sub
push
fs
js
and
or
xchg
rcl
sub
mov
gs
inc
loopne
pop
fsub
fld
out
repnz
addr16
add
fdiv
into
mov
sbb
jns
inc
je
xchg
xor
call
push
arpl
adc
sbb
std
cmp
or
push
lea
cmp
mov
push
mul
or
stos
lea
inc
dec
jmp
or
sbb
fld
xor
les
int3
xor
fdiv
lock
xor
jp
into
dec
push
dec
pusha
js
xchg
movs
loopne
cmp
inc
and
xor
or
ins
das
stc
loop
mov
dec
push
ror
mov
adc
(bad)
cmp
inc
or
pop
aam
jns
cld
fist
in
les
imul
pop
inc
push
lods
dec
std
test
cmps
ror
lods
add
aaa
je
add
xor
and
rcr
xchg
int3
pop
fucom
je
push
adc
inc
jl
add
push
push
popf
not
or
out
adc
cmp
push
mov
jae
and
add
(bad)
dec
icebp
ins
test
shr
shr
int3
cwde
xchg
mov
push
push
(bad)
arpl
imul
sahf
and
cdq
mov
int3
push
cmp
je
inc
or
jecxz
sub
mov
aaa
xor
and
in
mov
popf
ror
inc
int
or
(bad)
lock
push
in
push
dec
sub
or
shl
mov
cdq
movs
test
test
jae
dec
adc
push
push
fld
adc
inc
and
lea
pop
leave
jmp
pop
xor
dec
pop
in
xlat
pop
paddw
or
into
call
test
push
cwde
mov
and
adc
jg
sbb
test
sub
dec
(bad)
fwait
shl
mov
sbb
and
in
xor
sahf
mov
add
mov
lds
sbb
pop
lods
ins
pusha
fadd
mov
sub
mov
adc
inc
mov
add
pop
je
jo
add
pop
push
ds
fcomp
aad
xchg
ret
icebp
std
dec
jbe
add
fdivr
xor
clc
(bad)
adc
test
xor
in
(bad)
aas
jp
popa
(bad)
retf
pop
sbb
push
mov
xor
cmp
cmp
in
loopne
imul
das
or
cmp
add
rcr
pop
push
xor
and
pop
lahf
xchg
in
test
bound
retf
fstp
jns
mov
addr16
icebp
jmp
out
xchg
push
js
dec
mov
push
xor
and
adc
mov
call
adc
fcmove
sbb
inc
sub
jns
jbe
jge
mov
test
cmp
je
sub
xor
sbb
fadd
icebp
gs
push
imul
inc
(bad)
sahf
movs
sahf
or
xchg
pop
aaa
clc
pop
jp
ins
icebp
fsub
inc
cmps
sub
enter
jo
xor
mov
pop
push
ret
add
pop
cmp
dec
fld
inc
cmps
jge
push
mov
mov
dec
push
cdq
aad
(bad)
or
push
or
imul
inc
es
or
inc
or
shl
xchg
cmp
pop
dec
imul
nop
test
(bad)
call
mov
lods
xor
fnstenv
inc
fs
imul
or
scas
xor
push
dec
call
test
cwde
dec
mov
test
call
sar
or
cmp
mov
mov
xchg
dec
inc
sub
cmp
sbb
sub
daa
push
cmps
or
mov
adc
cwde
dec
dec
(bad)
stos
(bad)
imul
dec
cs
lods
aad
xchg
lahf
in
in
push
mov
or
icebp
and
adc
fnstsw
and
sbb
pushf
loopne
mov
dec
add
pop
stc
push
sar
mov
loop
daa
or
mov
ds
mov
shl
jmp
jmp
fcmovnb
sets
movs
leave
fwait
pop
mov
bound
xchg
sbb
lods
inc
dec
movs
jnp
cmc
hlt
shr
xor
or
lahf
daa
and
jns
adc
in
adc
in
int3
stc
cmps
push
aam
(bad)
in
push
cmc
inc
mov
xchg
and
pop
sbb
push
fist
jno
bound
xchg
dec
xlat
cmp
xchg
and
call
fwait
ret
sbb
movs
not
cmp
fs
mov
adc
or
scas
in
push
adc
cmp
hlt
(bad)
adc
int3
push
xchg
rcr
cmps
daa
outs
fwait
iret
and
ret
mov
sub
mov
les
enter
ins
fisttp
sbb
popf
or
add
lods
push
loope
add
dec
ins
or
cmp
pop
mov
jbe
jecxz
(bad)
(bad)
stos
cmp
sub
mov
mov
xlat
pusha
rcr
bound
pop
sar
lahf
(bad)
mov
xchg
rol
fdivr
out
aad
push
gs
test
and
xchg
mov
inc
ss
inc
pusha
push
push
in
inc
ins
lods
push
test
clc
jp
in
add
push
cmc
int
mov
push
test
adc
je
sub
mov
xchg
or
inc
or
mov
std
inc
test
aaa
fadd
adc
js
sbb
dec
pop
mov
call
jo
pop
jmp
das
pop
ss
aas
add
fmul
gs
fbld
mov
xchg
cwde
jo
aas
push
shl
aas
sbb
pop
jnp
lea
cwde
cmc
pop
ins
sub
es
test
xchg
ins
jb
jbe
xchg
sbb
mov
fistp
xchg
push
xchg
jg
sar
pushf
stos
inc
xor
fistp
pop
and
popf
dec
fadd
int
jecxz
(bad)
retf
cdq
inc
div
cmp
imul
cmp
inc
shr
mov
mov
outs
sbb
sbb
cmp
sbb
xchg
and
popf
std
add
pushw
sub
cmp
cmps
jmp
in
sub
push
push
push
ss
imul
ret
ja
in
mov
push
jmp
lods
or
mov
jae
icebp
mov
xchg
mov
mov
and
stc
and
or
inc
mov
(bad)
ins
or
push
inc
cmp
not
and
pop
pushf
scas
sub
jmp
or
gs
cmps
sbb
pop
mov
imul
xchg
test
sbb
mov
sub
dec
movs
aaa
mov
pop
mov
pusha
shr
pushf
sahf
push
jne
cmps
jp
mov
mov
stc
jne
push
cmp
fadd
(bad)
pop
sub
mov
fs
xor
popa
ss
lods
pop
jmp
cmp
xchg
arpl
add
add
cmp
scas
(bad)
shl
neg
inc
mov
mov
dec
add
psubusw
test
sahf
mov
and
leave
rcr
adc
jmp
and
int3
aad
inc
jl
adc
pop
aas
call
add
(bad)
mov
xor
xchg
xchg
fdiv
or
and
inc
pop
mov
xor
out
into
(bad)
jl
push
in
imul
imul
iret
lods
mov
dec
shl
les
adc
add
(bad)
js
sub
out
test
loopne
sub
sar
push
lds
cvttps2pi
mov
call
pusha
jmp
es
jg
add
hlt
ds
popf
inc
sbb
scas
push
mov
dec
or
sbb
cmp
or
ins
(bad)
lods
cmps
jmp
push
jns
in
lods
jmp
ja
mov
cmp
aam
pop
and
das
popa
out
inc
pand
mov
dec
add
and
xor
hlt
mov
ror
xchg
inc
mov
xor
jmp
push
es
frstor
xchg
aaa
aaa
xchg
retf
call
dec
lahf
mov
pop
cdq
adc
aad
fsubr
lds
loope
mov
add
ror
sub
test
push
mov
(bad)
aam
mov
imul
or
sub
adc
shr
ss
mov
dec
stc
inc
ins
push
or
neg
(bad)
leave
sbb
xor
jmp
mov
xor
jge
inc
jno
pop
rol
or
stos
call
inc
mov
popa
inc
cdq
mov
mul
outs
sbb
mov
fistp
inc
and
je
push
mov
and
pop
mov
pop
lahf
jle
pop
inc
in
sub
lds
jns
leave
pop
cmp
clc
or
pop
adc
sbb
add
imul
mov
push
imul
pop
leave
cmp
pop
mov
fisttp
cmp
sub
dec
jne
mov
or
xor
lock
inc
fistp
and
fmul
jge
sti
test
or
adc
xor
mov
repz
add
int3
gs
retf
jbe
sbb
loop
jmp
xor
push
mov
test
inc
sti
push
or
sbb
adc
lock
adc
mov
or
fisubr
sar
sbb
dec
cmp
int
pop
(bad)
and
stc
pop
into
mov
xchg
adc
mov
jl
pop
mov
cmps
xchg
add
add
out
imul
xor
add
sub
scas
jp
rol
dec
cmp
gs
cmp
stc
sbb
fistp
stos
aad
sbb
in
icebp
daa
sbb
push
rcl
aam
cmp
mov
in
push
movs
in
sti
fnstenv
int
and
clc
pop
ins
or
add
js
cmp
mov
sub
mov
xor
add
push
std
xor
push
mov
push
jmp
push
mov
xor
out
cmc
in
inc
sbb
call
pop
outs
popf
stc
rcr
shl
push
cdq
(bad)
outs
rcl
fidiv
adc
cmp
jp
and
cli
jmp
mov
cld
inc
adc
sub
xor
fidivr
and
cmp
popa
xor
adc
mov
cld
jnp
sbb
movs
clc
aam
cs
pushf
(bad)
imul
push
push
xor
dec
cmp
popf
in
loope
sub
mov
adc
dec
loopne
xor
dec
out
inc
mov
clc
sti
or
fsub
fs
xor
push
icebp
mov
test
iret
fcomp
inc
(bad)
enter
and
sbb
push
cmp
es
cmp
inc
and
neg
bound
test
jo
nop
sub
pop
arpl
and
push
mov
adc
popf
aaa
stos
push
mov
cmp
mov
mov
mov
cmp
and
jmp
inc
cmps
retf
cdq
pusha
sub
fsubr
rcl
scas
sbb
retf
mov
outs
icebp
inc
mov
stos
imul
leave
adc
mov
sbb
mov
inc
mov
mov
xor
jle
(bad)
lods
adc
pusha
add
loope
xor
pop
xor
lods
gs
push
pop
lds
sar
dec
xchg
sbb
push
and
jno
js
xchg
out
add
or
jmp
dec
adc
xor
pop
jl
scas
mov
enter
jns
mov
clc
inc
test
retf
test
inc
push
push
jne
mov
mov
mov
sub
aam
hlt
dec
adc
push
xchg
sbb
rcl
xor
cli
cli
hlt
cmp
sbb
test
xor
adc
neg
or
mov
(bad)
(bad)
mov
fmul
call
push
in
jbe
aaa
jmp
fwait
pop
mov
add
out
cmp
inc
in
std
adc
cmp
out
xchg
test
ret
fs
push
jp
mov
or
fucomi
and
mov
push
lock
aaa
xchg
js
lahf
lods
dec
sub
inc
mov
dec
jnp
adc
add
or
mov
push
cmp
imul
and
nop
gs
test
cmp
movs
stc
in
cmp
or
jl
sub
mov
sbb
inc
and
inc
adc
jae
pushaw
jbe
push
cmp
les
mov
dec
push
fxch
mov
and
cmp
xor
movs
fnstenv
mov
mov
add
xor
dec
and
popa
hlt
or
sub
push
out
cli
adc
push
ret
pop
ja
dec
cmp
(bad)
jmp
mov
popa
sbb
mov
sub
mov
mov
push
xchg
pop
mov
mov
push
or
mov
add
fwait
stc
push
inc
and
test
add
fs
push
dec
ja
hlt
xor
mov
outs
add
cs
lock
sbb
call
je
push
jmp
test
rol
ins
rol
mov
les
mov
xchg
mov
push
sub
or
pop
fild
out
stos
outs
push
mov
and
ret
mov
lds
jo
mov
xchg
les
aam
jmp
mov
jg
ins
lock
sbb
test
xchg
fist
es
fs
mov
imul
(bad)
int
pop
sbb
repnz
or
jnp
pop
push
push
neg
mov
xchg
adc
jg
inc
imul
(bad)
jecxz
jae
je
mov
mov
mov
and
pop
dec
iret
popa
stc
push
adc
and
(bad)
mov
movs
fnstcw
cmp
movs
adc
outs
mov
add
xchg
inc
dec
mov
ret
movs
in
xchg
sbb
cli
jmp
aaa
mov
popa
outs
xor
xor
retf
cs
xchg
icebp
jno
scas
test
fld
sbb
nop
sbb
pop
and
add
adc
lods
pop
mov
push
mov
sbb
pop
sbb
pop
mov
rcr
test
xor
pop
jno
or
xor
xor
inc
xchg
adc
inc
mov
bound
fistp
fcomp
iret
loope
lods
lock
mov
pop
mov
mov
push
pop
in
clc
shl
(bad)
and
mov
pop
mov
adc
sbb
shl
mov
mov
mov
les
mov
int3
inc
test
loop
mov
fiadd
and
adc
imul
rcr
push
jno
idiv
or
and
leave
je
adc
and
sahf
adc
inc
retf
sub
sbb
and
push
fld
hlt
add
test
xchg
jmp
xchg
push
xchg
push
inc
mov
cmp
push
xor
adc
push
cdq
push
jle
sub
cld
mov
xchg
mov
push
push
cmp
adc
xor
and
and
pop
mov
ins
xchg
movs
aaa
test
mov
jnp
and
add
dec
aad
add
adc
and
adc
or
test
and
inc
gs
lds
js
lahf
frstor
add
mov
and
in
or
in
sbb
pop
cmp
imul
cmps
out
ret
fs
push
sbb
icebp
xor
and
xor
push
scas
and
mov
mov
xchg
dec
xchg
test
cli
jmp
jp
pushf
mov
push
mov
aam
test
arpl
fst
sub
clc
and
jmp
fisttp
lea
stos
aas
mov
mov
jbe
shl
mov
inc
mov
into
push
aam
enter
add
in
mov
dec
xchg
(bad)
jg
jns
jmp
pop
pop
add
adc
lods
fild
pop
mov
pop
ss
stos
les
dec
aaa
leave
dec
data16
sbb
icebp
in
je
mov
push
xor
repz
leave
fldcw
cmp
mov
cwde
test
out
in
push
jmp
enter
or
jmp
ret
(bad)
mov
add
fst
mov
cmp
or
aas
adc
jecxz
in
sbb
(bad)
int3
mov
stc
loope
pop
leave
adc
xor
push
and
jnp
jl
jns
adc
jl
loopne
(bad)
or
push
aas
fild
enter
jae
cwde
ret
mov
lods
adc
push
sbb
(bad)
xor
mul
mov
push
aam
inc
out
(bad)
cmps
push
addr16
jns
fadd
lock
test
and
add
inc
dec
in
ss
jbe
add
xchg
retf
movs
es
(bad)
xchg
ins
jae
or
jge
or
add
and
xchg
xchg
mov
sub
rcr
push
adc
stc
sub
sub
int3
cmc
(bad)
outs
xchg
pop
fiadd
dec
mov
xor
ror
jmp
add
mov
and
fnstenv
mov
or
mov
xchg
jno
lods
pop
mov
mov
(bad)
cmp
jno
cmp
xor
fdiv
sub
gs
pop
adc
fst
cmp
outs
xor
dec
xor
jno
add
mov
cmc
aam
and
inc
js
sub
push
xor
and
cli
jb
sub
or
repnz
les
lock
mov
add
jns
xchg
fs
mov
push
pop
sbb
or
mov
cmps
jno
mov
stos
mov
arpl
mov
and
data16
ins
pop
in
push
add
xor
cmp
jmp
dec
xor
gs
ror
retf
mov
fnsave
in
xor
inc
aam
fldenv
jnp
mov
rcl
inc
sub
jns
push
jne
xlat
or
out
aaa
jno
xor
jb
mov
js
das
cmp
pop
mov
inc
pop
jp
adc
fadd
adc
mul
cmp
leave
les
jns
dec
xor
test
iret
out
fdivr
add
mov
and
mov
mov
ins
xchg
into
paddw
movs
sbb
or
and
sbb
xor
jmp
jge
jb
lahf
dec
adc
bound
and
(bad)
into
pop
fs
shl
clc
jmp
movs
mov
aad
neg
mov
or
sti
ret
sub
jmp
and
cdq
jmp
adc
inc
lea
es
loope
out
(bad)
sbb
loopne
(bad)
pop
ret
pop
sbb
xor
mov
fidiv
pop
mov
aas
mov
and
cmp
pop
fs
sbb
fst
popa
cld
inc
sub
adc
cs
jnp
in
pusha
rcr
out
shr
sahf
movs
xchg
cmp
mov
fisub
pop
push
push
add
sub
hlt
xor
xchg
dec
loope
inc
cmps
cmp
or
test
mov
mov
xor
movs
(bad)
pop
mov
xchg
mov
ds
xchg
sub
dec
dec
push
call
in
and
je
xor
loopne
fld
add
rcl
add
inc
repz
push
retf
mov
inc
repz
xchg
mov
fsubr
jmp
aaa
pop
daa
jb
dec
(bad)
(bad)
call
pop
cld
mov
stc
fwait
and
out
adc
leave
cmps
(bad)
dec
sahf
xor
repz
scas
xchg
in
imul
jnp
test
push
sbb
add
aam
movs
xor
dec
iret
cld
push
rol
cwde
in
xor
ja
test
ins
clc
and
push
jp
sbb
shl
jns
push
enter
xchg
cmps
nop
push
push
adc
mov
fdivp
push
(bad)
movs
xchg
(bad)
sbb
inc
inc
(bad)
in
je
and
mov
daa
jns
movs
out
neg
je
push
cmp
stc
sbb
adc
mov
cmp
fsubr
ds
jns
dec
fs
jno
mov
push
and
scas
(bad)
push
xchg
jecxz
dec
push
or
js
xor
push
shl
call
dec
loope
mov
adc
jmp
push
loope
in
clc
test
push
retf
xchg
lods
pop
pop
or
sub
clc
push
je
leave
or
cmp
and
sbb
and
in
imul
dec
jo
adc
mov
xor
and
lahf
lods
cmps
leave
ud1
push
adc
call
adc
out
jg
push
sar
or
pusha
mov
mov
xor
and
in
dec
sbb
(bad)
loopne
bound
(bad)
in
mov
ins
ret
and
lock
gs
cmps
stc
fild
xchg
call
int
xlat
or
sub
mov
sbb
sbb
mov
lods
pop
or
sbb
cld
jl
mov
je
mov
aam
fstp
in
pop
push
cmp
sub
add
pop
sbb
mov
mov
(bad)
cld
iret
cmp
lods
adc
mov
cmp
pop
mov
adc
call
dec
out
es
mov
cdq
addr16
pop
cmp
fisubr
je
(bad)
xlat
adc
mov
outs
movs
daa
pop
(bad)
gs
add
loope
ret
fnstsw
mov
std
jno
mov
and
in
jp
je
push
sub
mov
add
test
jg
dec
out
cmp
mov
mov
call
push
movs
or
and
inc
push
adc
sbb
stc
jl
je
fsubr
or
jl
test
test
cmps
mov
xchg
iret
mov
jns
test
inc
add
pop
leave
inc
add
add
jne
call
std
jns
mov
dec
js
mov
dec
fnstcw
dec
or
xchg
pop
cmp
mov
cmp
dec
test
sub
test
es
loop
jbe
mov
cmp
fcomp
xchg
or
mov
daa
dec
inc
mov
xchg
(bad)
cmp
les
inc
js
dec
pop
fist
std
add
lds
adc
mov
mov
and
mov
or
dec
lea
aad
xor
jne
sbb
mov
mov
scas
cmp
and
fld
adc
pop
add
sub
mov
pop
xchg
ror
shr
jns
retf
jo
dec
pop
int
push
inc
les
movs
add
inc
xor
shl
adc
mov
mov
ss
jp
push
clc
clc
pop
nop
enter
mov
push
aas
in
cwde
retf
jge
iret
test
cwde
push
inc
or
xchg
sub
fcmovnb
add
xchg
cdq
push
movs
cwde
fcomp
jmp
fdivr
outs
cmp
or
push
xor
xor
aad
dec
in
cli
rcl
sti
ret
jp
pop
aam
mov
jg
(bad)
std
mov
pop
pop
xchg
icebp
jmp
pop
cmp
fs
fsubr
movs
xor
fist
je
es
mov
or
ja
pop
pop
cmp
hlt
push
fbstp
outs
jecxz
scas
jno
xchg
nop
dec
in
shl
retf
inc
mov
arpl
inc
dec
add
mov
mov
add
movs
(bad)
jbe
jmp
out
mov
sar
mov
std
inc
mov
fsub
cmp
inc
mov
js
adc
or
or
test
mov
jmp
xchg
cli
cmc
lds
xor
out
dec
mov
push
sub
mov
sar
mov
sbb
movs
mov
mov
pusha
iret
aam
add
xor
movs
dec
mul
xor
nop
iret
mov
hlt
pop
jecxz
cmc
js
pop
loopne
push
jno
ds
shl
add
loopne
xor
mov
sar
(bad)
mov
aam
jb
les
sub
int3
cmp
mov
dec
mov
fs
push
ret
ss
mov
(bad)
jp
adc
rcr
call
push
fidivr
sbb
mov
cmp
adc
scas
mov
sar
sbb
(bad)
and
adc
add
xchg
pop
iret
dec
bound
aad
cmps
movs
lods
mov
data16
mov
mov
jne
mov
je
xor
std
(bad)
lock
dec
test
mov
adc
jl
adc
cmp
dec
fstp
cli
mov
(bad)
mov
call
add
jne
pop
js
fsub
xchg
mov
jne
jmp
retf
pop
mov
jle
mov
xchg
adc
cmp
mov
inc
std
call
fs
cmp
cmp
xor
push
loop
mov
mov
ja
js
arpl
mov
xchg
out
popf
and
jns
fldln2
xor
aam
mov
es
pop
jns
dec
jl
in
mov
enter
or
dec
in
out
jo
shr
out
cmp
loopne
cmp
cs
push
jmp
adc
cmp
add
cmps
inc
cdq
les
repz
mov
fnstenv
test
imul
cmps
sbb
push
dec
sub
hlt
push
in
xchg
loope
xchg
push
ret
and
pop
je
cmc
mov
imul
je
xchg
add
nop
inc
data16
cmp
push
das
clc
imul
bsr
cmp
mov
or
push
xchg
xchg
pop
pop
add
inc
add
cmp
in
and
cmp
clc
jmp
imul
out
xor
(bad)
fnstcw
add
xor
push
out
into
or
adc
dec
pop
imul
jg
sub
ins
div
mov
test
mov
cmp
clc
xor
ins
or
xchg
aam
add
adc
mov
mov
jns
cmp
pop
mov
(bad)
mov
lahf
test
inc
jns
sar
clc
lahf
js
icebp
cmp
fistp
dec
loope
imul
fild
or
jb
sbb
dec
adc
test
mov
or
push
inc
leave
cld
mov
dec
sub
adc
ret
cmp
sbb
movs
add
sub
aam
pop
jge
shr
pop
inc
jl
jb
cwde
stc
mov
jg
mov
mov
or
pop
push
dec
stc
ficomp
and
iret
ss
out
sbb
xchg
inc
inc
addr16
and
push
ret
add
scas
jl
mov
inc
and
xchg
popa
out
in
jmp
out
jb
cmps
les
int
sbb
outs
adc
mov
das
jo
xchg
sub
fdivr
pop
int3
adc
mov
xchg
dec
rol
movs
iret
stos
push
outs
pop
dec
jmp
int3
aam
mov
jns
push
and
fbld
pop
push
push
sub
ret
inc
jno
add
jb
mov
cmp
cmp
push
fs
pop
jge
inc
pop
adc
or
dec
test
hlt
das
jle
shl
adc
mov
pusha
jl
adc
(bad)
adc
jno
std
pop
aaa
pop
xchg
xor
adc
ja
pop
cdq
hlt
ds
leave
jmp
push
or
inc
repnz
fistp
mov
sub
mov
jns
clc
push
fsub
push
inc
mov
std
xor
inc
ret
jbe
or
clc
lahf
shl
aam
add
in
push
mov
jmp
dec
cmp
sub
xchg
mov
sbb
inc
inc
stc
movs
imul
mov
jo
inc
sbb
cdq
retf
sub
test
push
ins
jno
out
mov
subps
int
pop
ja
jne
jns
add
xchg
mov
sbb
lods
je
nop
ret
stos
mov
push
(bad)
jno
jmp
mov
pusha
add
sub
loopne
fcmovu
adc
and
jnp
add
mov
fs
mov
lods
jl
jg
out
fidivr
sub
jns
test
mov
mov
add
inc
adc
adc
repz
adc
loopne
sub
cmp
je
sti
call
add
pop
stc
xchg
mov
push
in
xchg
jno
jbe
push
hlt
std
xor
in
aas
jno
sub
xor
dec
and
iret
fnstcw
out
pop
imul
mov
(bad)
mov
xor
(bad)
js
or
dec
adc
gs
lods
push
mov
mov
movs
adc
sub
pop
cmp
xchg
mov
cmp
loop
jge
enter
aam
dec
mov
hlt
or
ins
add
dec
scas
cs
shl
pop
jbe
out
xchg
ds
int
rcl
push
mov
or
xchg
mov
imul
shr
xchg
hlt
popa
jae
retf
leave
in
mov
pop
mov
dec
stos
addr16
ins
mov
test
daa
add
fisttp
sub
mov
xlat
sub
xchg
and
enter
cmps
adc
pop
cmp
fs
into
cdq
or
(bad)
in
cmp
and
adc
les
cli
int
clc
dec
dec
ss
jg
sub
retf
jmp
fs
aad
pop
jo
mov
int3
mov
pop
shl
inc
sbb
cwde
cmp
out
addr16
test
push
pop
pop
dec
and
ss
xor
mov
lods
mov
xchg
fidiv
jge
cmps
push
sbb
gs
dec
in
pop
mov
pop
and
cmc
fdivr
shr
mov
enter
fcom
dec
cs
push
in
mov
inc
movs
pop
mov
cmp
mov
pop
jno
mov
int
aaa
in
test
xor
xor
jmp
jl
ins
cmp
mov
test
data16
and
jae
xchg
cdq
into
adc
lea
dec
sar
xor
adc
adc
mov
(bad)
push
sbb
lods
in
test
(bad)
retf
sub
movs
mov
ins
sti
fidiv
xor
pop
dec
lods
pushf
(bad)
xor
icebp
aas
scas
loopne
cmp
inc
pop
jbe
jle
jne
out
cmc
xchg
leave
pop
es
out
lds
movs
xchg
stos
stos
xchg
inc
ret
icebp
sar
aam
fimul
bound
imul
ja
idiv
fstp
addr16
adc
out
and
pushf
adc
fnstenv
jae
mov
mov
xor
arpl
(bad)
mov
mov
push
movs
sub
fidiv
mov
or
(bad)
test
push
jnp
dec
ss
dec
and
ja
ret
pop
rcr
pop
mov
xchg
xor
adc
mov
xchg
mov
adc
adc
loop
jnp
les
push
add
cmp
scas
sti
push
in
ja
jno
aam
lods
push
fisttp
mov
xchg
loop
push
or
adc
dec
ins
push
shl
mov
int
lahf
mov
es
sbb
xor
xchg
jg
icebp
(bad)
loop
sbb
loope
adc
das
pop
pop
mov
repnz
and
fs
clc
mov
or
test
push
cmp
bound
mov
addr16
stos
imul
je
lea
inc
(bad)
sbb
leave
inc
leave
sbb
push
test
call
xchg
and
pop
and
dec
xchg
loop
mov
div
mov
pop
stc
xor
xchg
mov
cmps
fadd
push
sahf
and
movs
xor
enter
cmp
push
scas
adc
xor
sub
sbb
mul
jns
in
push
bound
dec
in
lds
xchg
imul
(bad)
sbb
add
push
or
dec
scas
jle
xchg
cdq
jbe
pop
enter
pusha
sub
cli
ja
mov
lock
push
mov
inc
loopne
jae
inc
jmp
loopne
xchg
adc
dec
jne
xchg
pop
lods
jmp
push
fnstenv
pop
cmp
fst
out
mov
push
xchg
in
xchg
adc
adc
add
jmp
leave
sbb
imul
jmp
xor
aaa
push
xchg
mov
cmp
(bad)
cmp
jo
ins
pop
push
jns
push
daa
dec
mov
sahf
adc
(bad)
jmp
in
xchg
ins
adc
inc
and
inc
sub
jge
jl
xor
add
(bad)
lock
mov
and
ret
lds
clc
adc
add
push
(bad)
rol
fld
scas
sub
sub
adc
sub
dec
lock
ds
or
cmp
inc
add
aas
push
mov
adc
adc
cmp
popf
imul
jmp
adc
cmps
xchg
jne
scas
mov
adc
jno
pop
cmp
inc
fcomp
imul
pop
xor
pop
scas
movs
dec
mov
mov
inc
test
jno
je
adc
mov
ins
pop
adc
mov
(bad)
iret
and
js
in
ret
xchg
ss
sbb
mov
mov
mov
push
jb
call
add
inc
pop
shl
sbb
pop
pop
sub
mov
sbb
in
and
dec
adc
cmp
mov
mov
movs
shl
add
cmp
fmulp
fisub
xchg
sub
pop
jnp
je
dec
ins
ja
add
addr16
test
lock
sbb
adc
arpl
adc
lea
inc
shl
repnz
test
mov
dec
dec
loope
xor
hlt
dec
mov
xor
or
sbb
mov
mov
xor
and
xchg
scas
xlat
mov
push
test
and
xchg
sbb
lods
cmp
dec
aad
mov
jl
outs
cld
mov
add
mov
inc
dec
cmp
out
les
lea
nop
add
sub
jmp
ret
rcl
test
sahf
popa
push
shl
aaa
inc
adc
xor
mov
adc
sub
xchg
dec
inc
int3
sbb
sub
inc
mov
push
mov
push
sub
(bad)
call
cmc
push
ja
sbb
ret
iret
or
sti
out
push
dec
pop
popa
mov
cmps
mov
add
or
popa
fldcw
aaa
icebp
popa
jge
out
sbb
in
dec
sub
mov
sub
sub
repnz
dec
cli
push
(bad)
cmps
mov
repz
clc
mov
enter
into
pop
inc
pop
sbb
pop
pushf
inc
ins
dec
mov
ins
jbe
cli
es
mov
sti
sub
les
jns
inc
jmp
stc
and
rcr
and
data16
enter
sub
in
mov
jmp
pop
pop
add
xchg
(bad)
mov
push
mov
pop
xor
aad
push
pop
xor
inc
sbb
imul
cmp
cmp
ror
dec
push
jl
pop
sbb
fs
(bad)
push
push
adc
xchg
mov
nop
or
ins
rcl
sbb
xchg
aas
jbe
mov
or
sub
sub
jmp
imul
add
icebp
jne
mov
(bad)
(bad)
sub
test
or
push
add
in
mov
xchg
push
cmp
js
ret
pop
dec
retf
dec
xor
sti
push
adc
icebp
push
mov
or
daa
fsubrp
xchg
pop
xchg
lock
or
sbb
mov
(bad)
lahf
xchg
es
scas
jge
inc
mov
pop
rcl
mov
ins
in
adc
lods
and
int3
adc
mov
cmc
pushf
xor
ficomp
int3
pop
lds
jne
add
into
and
or
cmps
mov
int
push
(bad)
adc
inc
cmps
or
movs
ja
jne
xor
enter
jb
xor
iret
lea
pop
sub
inc
jp
and
push
imul
gs
or
push
push
push
ja
add
cwde
xchg
mov
cli
addr16
add
lock
out
or
pop
add
pop
in
pop
dec
lahf
pop
retf
xchg
xchg
pop
mov
leave
out
loope
sbb
xlat
xor
push
or
jp
cmp
adc
sbb
cli
jp
adc
dec
xchg
mov
jne
mov
and
mov
push
out
sbb
out
adc
xchg
out
pop
inc
inc
in
add
jno
das
sar
sar
shl
sbb
dec
xor
fs
mov
aad
dec
mov
call
retf
std
js
cdq
aad
fs
jl
mov
dec
out
(bad)
retf
mov
sub
call
dec
sbb
out
js
clc
add
inc
sub
(bad)
adc
pop
out
imul
xchg
xlat
pop
pushf
mov
cwde
mov
in
add
xchg
mov
aad
adc
and
jne
test
pushf
mov
pop
push
jns
push
cmc
leave
mov
mov
leave
popf
dec
int
xchg
push
add
dec
adc
pop
cmps
jge
add
pop
lods
lahf
jecxz
shl
enter
mov
(bad)
ins
mov
dec
shr
ins
ja
js
mov
sbb
test
hlt
sub
mov
mov
cld
test
xchg
cmps
sbb
push
adc
and
(bad)
stos
and
jmp
bound
jno
adc
mov
scas
mov
jmp
enter
stos
call
shl
je
and
call
nop
daa
test
mov
jl
mov
daa
jmp
adc
pop
dec
fs
cli
das
and
mov
pop
pop
in
loop
jno
mov
mov
fwait
and
add
retf
xchg
test
mov
shr
mov
stc
scas
not
in
test
sbb
stos
dec
ds
retf
cs
push
jne
pop
cmp
xor
rcr
data16
pushf
out
jne
or
mov
leave
stc
sbb
push
cmp
pop
push
jl
cmps
mov
cli
mov
(bad)
(bad)
cld
out
add
or
dec
jmp
mov
repnz
not
loope
add
aam
sub
in
scas
mov
inc
jg
cmp
fwait
mov
into
xchg
pop
lea
cli
jle
or
jbe
pop
sub
or
jne
cmps
imul
stos
mov
test
pop
fs
mov
cmps
test
neg
loopne
loopne
arpl
cs
frstor
test
in
push
pushf
jl
out
cli
push
dec
inc
cld
cmp
js
movs
rcl
cs
clc
jl
sbb
movs
fdivr
ja
jp
inc
add
in
lock
adc
add
push
stos
ror
hlt
ja
xlat
xlat
aas
and
pop
dec
dec
add
(bad)
lds
inc
or
stos
sub
pushf
push
fadd
sbb
clc
xchg
aaa
les
pusha
cdq
dec
cdq
mov
and
cmp
inc
test
dec
add
jnp
inc
cmp
cmp
test
pop
outs
shr
stc
sbb
outs
inc
mov
inc
shl
and
test
cmp
adc
mov
mov
test
ret
cmp
into
pop
inc
or
ret
imul
sbb
cwde
and
mov
movs
cmp
mov
dec
test
sbb
adc
fcmovu
cli
cdq
adc
or
out
call
ret
fidiv
in
hlt
rol
(bad)
sbb
sbb
push
jns
xchg
bound
xchg
and
push
call
and
sbb
fwait
xchg
dec
push
xchg
push
jecxz
shl
push
xor
inc
mov
test
or
outs
call
sbb
call
adc
push
jl
sub
mov
in
ins
mov
in
ror
mov
jb
ss
out
and
or
ror
dec
xchg
daa
dec
(bad)
cli
pop
sub
aaa
xor
mov
sbb
pusha
xchg
cld
sub
mov
sbb
mov
test
not
mov
loopne
push
stc
or
cdq
jle
call
test
call
mov
test
pop
idiv
out
inc
sub
push
js
iret
sbb
sub
jno
popf
jmp
and
cmps
dec
sub
add
(bad)
dec
xor
mov
imul
push
sbb
imul
cli
add
data16
jl
inc
add
sti
cli
enter
(bad)
push
adc
inc
xor
hlt
fld
das
hlt
outs
shr
mov
leave
or
pop
loope
push
mov
dec
imul
aas
dec
or
jo
test
or
test
mov
xchg
sub
pop
pop
or
imul
out
enter
sub
sbb
pop
cmp
jb
add
leave
cmp
push
add
mov
xchg
fwait
sbb
(bad)
aad
(bad)
lea
add
sar
adc
push
pop
pop
add
ins
dec
repnz
cmp
inc
call
fwait
cs
xor
pop
or
addr16
xor
mov
pop
adc
data16
lahf
or
cdq
call
inc
jne
stos
les
add
xchg
aam
cmps
mov
and
in
xchg
xchg
scas
xchg
lods
jecxz
inc
call
fs
and
sbb
inc
jbe
test
mov
xor
mov
fcomp
mov
neg
gs
hlt
xor
mov
and
or
icebp
hlt
mov
xor
jp
dec
xchg
aad
mov
fstp
push
imul
call
and
cs
(bad)
sbb
jne
gs
xor
add
enter
dec
pop
(bad)
fild
shr
and
add
xchg
pop
cwde
in
cmp
aaa
mov
push
mov
imul
sbb
pop
cmp
mov
shl
movs
leave
scas
or
inc
mov
adc
pushf
adc
stc
xchg
cmp
xchg
fst
popfw
jmp
inc
repnz
sub
dec
cmps
dec
fcom
aam
xor
or
cmps
cmps
push
xor
sub
dec
in
cmp
gs
inc
call
shl
test
dec
mov
pusha
loop
in
inc
xor
scas
fs
leave
lea
mov
leave
sbb
push
dec
movs
xchg
retf
stos
xor
add
sti
push
xchg
fild
sub
xchg
sar
sbb
ins
jmp
ds
dec
sar
(bad)
leave
xchg
jl
inc
push
sar
cmp
pop
sub
ret
or
push
dec
(bad)
rcr
jno
mov
jle
test
ficom
nop
inc
cmps
pop
sbb
(bad)
jp
mov
in
out
xchg
jmp
xor
xchg
outs
push
imul
inc
cmp
dec
ss
mov
clc
mov
pop
cli
fs
inc
mov
pop
or
xor
pop
loop
lds
out
add
and
push
movs
out
dec
bound
icebp
ja
jns
mov
inc
jge
in
mov
sub
adc
jmp
addr16
inc
adc
mov
cmp
fadd
movs
retf
es
inc
cmp
data16
lea
mov
or
xor
mov
xchg
loopne
or
movs
lock
call
lahf
sbb
fcomp
dec
dec
adc
mul
out
fstp
icebp
pop
and
mov
ror
outs
inc
add
sbb
jge
retf
cmp
xchg
cmp
xor
sbb
out
js
sti
lods
xchg
inc
bound
(bad)
push
ins
xor
rcr
idiv
or
jno
mov
ins
imul
lock
push
mov
or
sbb
adc
sbb
dec
fidivr
mov
push
shl
pusha
mov
jl
popf
rol
mov
fsub
and
nop
dec
xor
inc
mov
lods
cmpxchg
pop
aam
test
aam
popa
sbb
jge
pop
and
in
scas
enter
imul
fsubr
adc
sbb
stos
call
push
dec
test
out
test
jns
push
jg
jns
loope
mov
outs
jg
xchg
or
pop
int3
dec
push
scas
xor
in
mov
pop
mov
jnp
push
into
sub
dec
inc
xchg
sub
mov
in
ret
xchg
xor
xchg
xchg
(bad)
aaa
or
jo
mov
or
lods
fild
jle
call
mov
in
sub
ds
pop
jb
inc
fmul
adc
jmp
outs
std
cwde
loop
nop
dec
cmp
hlt
cmp
dec
dec
jno
fstp
xchg
(bad)
lahf
xchg
hlt
and
inc
retf
fdivr
movs
push
sub
imul
and
paddusw
test
mov
mov
push
and
and
in
test
test
iret
xchg
xchg
push
call
jle
adc
cmp
sub
iret
xor
repnz
mov
pop
or
dec
mov
pop
inc
ds
out
outs
mov
inc
and
xchg
pop
in
xor
test
fild
mov
and
addr16
mov
icebp
xchg
cdq
cmp
mov
enter
popa
add
ret
mov
and
(bad)
clc
mov
clc
gs
movs
xor
lahf
and
add
and
dec
test
push
xchg
and
enter
mov
inc
add
test
in
and
es
pop
mov
imul
test
lds
(bad)
out
arpl
ins
or
mov
hlt
jp
shr
aad
addr16
push
pushf
fs
imul
(bad)
adc
fs
hlt
mov
(bad)
pusha
and
loopne
xchg
push
hlt
add
jns
inc
mov
ins
sbb
mov
out
ret
push
inc
ficomp
jg
call
push
stos
mov
int
and
pop
pusha
adc
or
xor
fnstenv
rol
mov
stos
push
out
mov
push
aam
ret
sub
test
fdivrp
and
jbe
clc
nop
mov
adc
gs
bound
icebp
jl
jmp
and
addr16
(bad)
inc
add
shl
sub
xchg
mov
retf
cdq
stc
add
js
jne
adc
clc
std
aam
pop
sub
movs
jp
push
in
pushf
jae
jmp
inc
div
daa
push
jo
push
jae
mov
(bad)
outs
mov
fldcw
gs
sar
cs
adc
(bad)
mov
cdq
cmp
sbb
aad
jg
(bad)
test
mov
arpl
cmc
sbb
in
aaa
push
test
mov
out
add
lock
test
sbb
cmp
jno
or
stos
fstp
or
pushf
leave
inc
mov
lds
pop
xor
xor
pop
mov
fbstp
sar
xor
scas
pusha
ficomp
jmp
push
dec
sbb
adc
imul
je
cld
dec
mov
mov
or
xchg
adc
and
xchg
in
sub
mul
test
xchg
dec
lods
leave
out
loope
lahf
add
dec
movs
or
xchg
fisttp
int3
sbb
out
gs
pop
shl
add
inc
mov
push
mov
xchg
mov
or
fldenv
hlt
pop
xor
or
call
dec
sub
dec
(bad)
jge
adc
add
movs
aaa
mov
jnp
mov
inc
(bad)
je
in
sbb
sti
xor
aas
shl
out
pop
sahf
xchg
fs
jno
pop
movs
pop
adc
mov
inc
jmp
xor
mov
mov
mov
in
xlat
out
or
adc
popf
dec
stos
pop
in
and
pusha
scas
out
fwait
xchg
jl
xor
mov
jnp
cmp
push
leave
sub
push
inc
repnz
jecxz
(bad)
jmp
lock
push
daa
mov
test
jne
js
jg
pushf
xchg
or
js
jns
pop
lea
hlt
mov
sbb
adc
or
jns
fld
rcr
dec
int
jmp
xchg
and
or
sub
mov
les
and
movs
push
jns
pop
cmp
sbb
mov
jae
dec
test
jmp
iret
jp
cmp
lds
mov
pop
inc
sub
fsub
cli
test
xchg
outs
int3
jl
inc
jmp
dec
aam
ja
cmp
js
mov
mov
jg
adc
ficom
cmc
sar
sub
sbb
mov
dec
pop
mov
mov
cmp
xor
daa
iret
pushf
mov
mov
arpl
mov
mov
scas
adc
or
das
pop
rcr
mov
dec
pmulhuw
ds
adc
xchg
stos
ins
mul
cwde
inc
stc
add
jp
int3
js
push
pop
mov
dec
sbb
imul
out
or
pop
pop
ror
sub
dec
xor
jmp
xor
mov
scas
in
imul
ret
jae
mov
(bad)
ins
stos
dec
loopne
mov
jecxz
xor
hlt
cmc
add
xchg
push
fiadd
(bad)
sub
cmc
cmp
sub
inc
bound
in
int
inc
aad
aas
nop
aam
cmp
add
(bad)
fstp
in
ret
leave
mov
das
pop
repnz
sub
inc
test
mov
add
fstp
pushw
lods
mov
retf
lods
ret
dec
dec
jnp
inc
jp
(bad)
mov
mov
push
(bad)
adc
pop
pop
xchg
ret
stc
and
je
js
or
cmp
jmp
adc
xor
repnz
jns
or
je
leave
cmp
ret
sub
ret
or
push
lock
cdq
jmp
int
mov
sbb
test
sub
mov
mov
clc
push
mov
stc
push
es
in
ins
mov
inc
sbb
inc
jecxz
sub
pop
fmul
retf
inc
pop
pop
std
dec
cmc
cmps
mov
gs
push
cmp
sub
popa
sub
xchg
leave
popa
in
je
imul
push
adc
cwde
push
popf
test
fmul
shl
ret
jns
bound
fisttp
lahf
fldenv
int
inc
(bad)
fwait
sub
cmp
imul
ret
xchg
dec
jbe
popf
les
or
loope
sbb
lods
ja
aam
jns
jnp
imul
sbb
shr
das
jnp
and
adc
dec
test
mov
mov
push
xchg
mov
pop
mov
loop
fild
ucomiss
mov
jge
mov
pop
jne
stos
mov
loopne
mov
xchg
or
jnp
pop
scas
pop
imul
int3
pop
(bad)
xchg
aad
inc
cwde
hlt
movs
add
ficom
xor
xor
and
(bad)
adc
cmp
mov
fistp
or
xor
in
cld
cs
dec
jmp
clc
dec
pop
sahf
mov
stos
cli
pop
jbe
jl
outs
push
jmp
sub
and
mul
push
jne
test
sub
xor
fisttp
imul
lea
pop
outs
ins
je
lds
xchg
lock
(bad)
stos
dec
and
rcr
cmp
out
repnz
in
xchg
enter
cmp
mov
mov
pop
mov
fldenv
mov
push
ins
ds
xchg
ins
dec
cmp
(bad)
dec
cs
in
lock
xchg
aad
sbb
cmp
dec
daa
pop
jbe
dec
and
test
jns
inc
leave
(bad)
jmp
test
out
test
mov
lods
jmp
adc
(bad)
out
push
sbb
jl
ds
mov
lods
push
movs
mov
mov
stc
(bad)
jbe
arpl
cdq
adc
add
inc
push
icebp
movs
mov
cs
fadd
pop
add
jmp
mov
lock
mov
fcom
lock
sbb
ss
bound
inc
jns
mov
hlt
jecxz
xchg
jmp
cmps
and
mov
xchg
cli
sar
jae
adc
mov
mov
loope
xor
mov
mov
mov
nop
inc
mov
aad
pop
push
jl
jno
stc
cwde
shr
and
aam
push
mov
movs
imul
cmp
test
les
lods
into
push
(bad)
xchg
push
mov
and
ret
pop
mov
cmp
cmp
pop
out
out
popf
cmp
push
loope
loope
jo
or
das
adc
mov
repnz
mov
jae
fisttp
jecxz
retf
xchg
cmp
cmp
cwde
cmp
cmp
inc
mov
fdivp
out
inc
cmps
cmp
cld
cmp
je
xor
add
retf
fldcw
dec
and
jns
cmp
ja
mov
cwde
adc
leave
adc
adc
les
test
xchg
int3
or
mov
les
xor
(bad)
jp
(bad)
cmp
mov
mov
lods
jmp
sti
sbb
cmp
or
sbb
repnz
sbb
or
arpl
fs
mov
pop
je
test
jmp
xor
jmp
dec
or
cmp
adc
loope
cmp
xchg
sti
cmp
int
(bad)
mov
and
pop
push
les
adc
fs
int3
xchg
retf
dec
mov
aam
push
imul
sbb
pop
sub
add
cmp
jg
ins
dec
cmc
cmc
(bad)
mov
shl
(bad)
test
jg
mov
dec
dec
aas
aam
outs
icebp
cmps
adc
movs
in
mov
and
mov
hlt
ja
add
and
push
mov
jmp
push
dec
ja
fwait
or
std
repnz
je
or
daa
outs
jmp
out
pop
mov
jo
data16
je
adc
pushf
mov
lods
sub
ins
dec
xchg
loop
pop
and
repz
sub
mov
rcl
ret
mov
mov
dec
xchg
adc
xchg
dec
sub
out
lods
js
das
jecxz
and
push
xor
sub
or
inc
cmp
xor
push
(bad)
dec
test
xchg
jg
mov
(bad)
mov
leave
xor
sbb
out
ret
xor
sbb
mov
shr
push
imul
fsubr
inc
in
imul
(bad)
adc
fs
pop
(bad)
fistp
aam
scas
cli
jo
mov
mov
repnz
fcmovnbe
(bad)
xor
loopne
stc
cwde
fdivr
xchg
test
cmp
and
jo
push
dec
sub
hlt
sub
mul
test
adc
sar
jns
jnp
out
in
push
aaa
mov
les
inc
jae
pop
mov
push
ins
sbb
imul
pop
xor
xchg
and
sahf
pop
aam
sbb
or
pop
mov
mov
xor
(bad)
jp
fld
pop
cmp
in
addr16
neg
shl
popa
lods
popa
call
jmp
lods
jmp
adc
jns
icebp
in
pop
xchg
mov
fadd
lea
inc
jo
loop
inc
mov
mov
dec
adc
fisttp
sbb
sub
call
retf
dec
sbb
or
adc
stos
sub
cmps
mov
or
in
mov
lods
shl
jg
nop
sub
adc
sbb
in
aad
cwde
mov
pushf
loope
jmp
hlt
sbb
ds
xchg
mov
push
push
sbb
and
mov
test
dec
aas
loopne
push
stc
push
js
push
inc
sub
adc
pop
jns
and
mov
mov
(bad)
test
mov
and
adc
adc
and
addr16
aas
hlt
mov
mov
lds
in
aad
push
imul
pop
scas
xor
mov
add
test
ins
ret
jecxz
sbb
call
(bad)
loop
add
sbb
mov
jns
cwde
push
xor
mov
call
jno
pop
push
dec
pop
xchg
ret
aad
or
inc
cmps
fwait
ret
cmps
cwde
sbb
jmp
mov
jno
(bad)
jnp
jno
xchg
into
fld
and
dec
xor
call
shl
mov
nop
jno
and
sbb
jg
push
out
and
xlat
sub
mov
mov
les
or
pop
sub
cmp
js
lahf
lock
jno
cmp
add
push
push
out
jge
cwde
lods
retf
ins
or
push
pop
sub
popf
push
mul
scas
icebp
in
dec
ins
(bad)
lea
xor
xor
test
and
retf
mov
pusha
lods
mov
out
jno
dec
sbb
int
shl
in
adc
dec
call
movs
mov
sub
(bad)
jl
mov
inc
cmp
dec
pop
sub
add
pop
cmp
rcr
std
sar
mov
jmp
movs
sub
cmp
fisubr
dec
das
inc
and
out
call
add
or
lods
mov
pushf
xlat
sbb
inc
inc
jne
in
pop
pop
stos
mov
push
sbb
adc
inc
xchg
jge
mov
sti
adc
pop
loope
fcomp
sbb
cmp
lods
sub
fst
jo
cmp
lea
jbe
push
or
adc
(bad)
clc
stos
pop
test
out
push
push
jb
je
loopne
test
mov
shr
frstor
(bad)
jg
adc
xchg
mov
mov
push
in
pop
inc
xor
xchg
jg
sub
lods
jecxz
hlt
nop
or
push
sub
pop
aas
cmp
daa
loope
cmp
(bad)
sub
repz
es
mov
inc
mov
push
cli
and
out
je
sub
fst
xchg
out
loopne
push
sbb
mov
sahf
iret
call
jbe
addr16
lods
cmp
retf
dec
or
jp
jb
jmp
mov
and
out
rol
mov
push
mov
jmp
and
retf
sub
test
xor
arpl
pop
(bad)
clc
push
inc
and
aas
mov
sti
fcomp
mov
out
adc
aad
pop
xor
and
mov
xchg
push
jo
cmp
mov
jecxz
movs
cli
add
cli
std
(bad)
jp
lahf
js
or
aam
lea
xchg
pop
and
cld
mov
inc
lds
pop
les
aas
push
in
je
push
iret
leave
cdq
jmp
mov
push
data16
sub
mov
ins
jns
xchg
test
xchg
push
mov
lahf
jmp
mov
jno
(bad)
cmp
fisub
test
xchg
nop
mov
test
pushf
cdq
or
int
out
in
inc
dec
(bad)
stc
mov
aad
push
mov
ins
pop
cmps
in
cwde
mov
and
imul
cmp
add
outs
fimul
les
je
repz
lds
out
cli
test
jnp
push
jecxz
cmc
cmp
das
mov
es
push
retf
pop
iret
push
jmp
cmps
push
inc
pop
dec
(bad)
std
xchg
jb
fdivr
xor
les
mov
ss
fdivr
inc
jle
jo
inc
mov
lods
mov
(bad)
idiv
gs
ins
sti
test
std
push
jmp
mov
cwde
mov
out
inc
xchg
xor
sub
push
mov
mov
test
sbb
add
leave
jne
sub
mov
div
retf
repz
push
pop
cmc
xchg
add
cmp
aam
push
js
and
and
pop
jbe
arpl
mov
xor
les
test
fcomp
add
or
jno
sbb
fisub
cmp
ins
lds
xchg
(bad)
(bad)
enter
hlt
cmc
pop
inc
icebp
lock
mov
cmps
sbb
mov
daa
mov
xchg
pop
add
push
jb
and
jno
jbe
dec
je
dec
nop
inc
aaa
jo
lock
je
test
add
int3
or
dec
scas
jae
inc
cmp
in
imul
adc
dec
neg
(bad)
popa
pop
ss
xchg
imul
pop
(bad)
test
es
add
jnp
in
pop
add
push
adc
cmps
ret
pop
lock
jle
pop
repz
dec
pop
pop
cmc
sbb
addr16
push
add
mov
ja
push
out
xor
cld
jmp
sub
add
add
or
stc
pop
dec
xor
add
mov
mov
jge
xchg
fdiv
mov
and
mov
movs
dec
jb
lock
leave
jae
mov
push
in
inc
cld
test
sbb
xor
out
ss
movs
cmp
push
mov
movs
stc
xchg
fldenv
inc
cli
mov
mov
and
mov
call
jge
add
aas
mov
fcmovb
lds
push
sbb
and
push
movs
in
clc
or
and
jns
inc
lock
lods
push
xchg
mov
add
dec
fwait
mov
fst
adc
add
sub
frstor
dec
stos
inc
sti
xchg
push
mov
jl
adc
dec
sbb
push
sbb
mov
dec
in
xor
jnp
popa
xchg
cdq
cmp
(bad)
enter
(bad)
shl
xlat
xchg
jnp
call
pop
mov
pop
and
or
mov
sub
or
sbb
sbb
fist
cwde
(bad)
jmp
xor
daa
inc
lahf
and
mov
xor
xor
jecxz
push
inc
rcr
out
nop
cmps
sbb
lock
pop
test
jle
pop
cwde
into
nop/reserved
pop
xor
push
pop
loopne
xchg
dec
sub
mov
inc
and
mov
jno
mov
inc
stc
shl
mov
ins
aad
mov
mov
dec
fistp
mov
xchg
fnsave
out
push
mov
cmps
mov
cmc
fdiv
rcr
call
push
cmp
rdmsr
(bad)
cmp
dec
ja
fbstp
ins
jmp
in
push
loope
icebp
xchg
imul
sbb
mov
xor
mov
jp
xchg
mov
loope
adc
repnz
xchg
jnp
sub
call
sub
lds
inc
imul
xchg
sbb
mov
stos
xor
arpl
xchg
inc
lods
cdq
adc
adc
mov
inc
cmp
sbb
mov
imul
sbb
mov
fadd
call
xchg
pushf
ins
stos
sub
sbb
dec
jp
jmp
mov
les
or
movs
jo
sbb
jmp
ins
sub
in
xor
sbb
and
retf
sbb
in
dec
sbb
repnz
dec
test
(bad)
popa
and
xchg
mov
and
int3
xchg
mov
gs
pop
jp
int3
xchg
cmp
mov
pop
addr16
pop
cmp
fsubr
fdiv
xchg
cmp
inc
push
or
jg
add
lock
(bad)
shl
fs
ins
mov
sub
push
retf
dec
leave
add
push
sahf
fisub
inc
stc
add
out
hlt
mov
addr16
pop
into
xor
and
lock
inc
dec
int3
std
jge
jnp
mov
rcr
pop
pop
pop
and
or
iret
cld
aam
out
in
imul
fwait
jp
inc
sub
mov
mov
fstp
xchg
cmps
sbb
pop
xchg
sub
jp
mov
add
sbb
sbb
cmp
push
push
lds
popf
aad
les
rol
ficom
cmp
ss
xchg
cld
mov
pop
test
inc
xchg
push
mov
or
fimul
pop
dec
cmp
bound
adc
aam
or
cdq
xlat
cmps
jbe
popa
sahf
call
jmp
inc
cmp
cmp
mov
sbb
xchg
jno
mov
mov
mov
xchg
cmc
in
and
push
jg
and
dec
xchg
cld
icebp
aas
add
sub
or
imul
hlt
pop
aaa
dec
sbb
sbb
fdiv
ds
mov
imul
lods
scas
fyl2x
loop
out
cmp
ds
sub
add
cmc
rcr
jae
clc
inc
data16
mov
dec
fnsave
sar
mov
add
shr
xor
sbb
cwde
das
jmp
push
add
loope
test
or
aaa
sbb
cpuid
mul
push
mov
mov
out
push
and
jne
inc
or
stos
dec
rcr
std
test
sahf
sub
xor
out
popa
inc
pop
jmp
inc
mov
sub
ins
mov
mov
scas
xchg
iret
dec
push
retf
and
sub
loope
xor
inc
fwait
icebp
test
or
std
add
xchg
pop
shl
scas
inc
retf
pop
mov
add
movhps
std
loop
ds
push
and
mov
inc
mov
clc
loope
repnz
cmp
movs
dec
cwde
pop
inc
xor
loope
sti
and
retfw
and
pop
outs
mov
or
and
jmp
in
sub
xchg
adc
into
mov
or
sahf
inc
test
jo
test
das
nop
jno
xor
int3
jmp
hlt
mov
pop
pop
xchg
sar
push
pop
inc
fidivr
mov
sahf
push
mov
or
sbb
inc
sbb
ret
jbe
arpl
sbb
pop
mov
xchg
scas
(bad)
into
adc
sbb
sbb
and
xchg
data16
xor
jnp
fidivr
(bad)
cmps
lock
movs
out
push
mov
hlt
aad
adc
or
je
add
in
(bad)
cwde
lahf
jns
or
xor
gs
inc
xchg
pop
jp
les
test
aam
mov
into
cmps
out
xor
cld
push
push
jmp
pusha
ror
sub
mov
cwde
cmc
(bad)
cmps
(bad)
jmp
cwde
xor
dec
cmp
or
loopne
xchg
jmp
jno
inc
and
sub
mov
outs
push
adc
js
pop
add
leave
cwde
js
je
daa
push
mov
stos
adc
dec
jmp
sti
and
add
rcl
and
or
(bad)
sub
or
aaa
loope
push
mov
fs
jbe
ret
push
daa
jl
cmovg
imul
lea
jne
and
fyl2x
or
mov
add
retf
cwde
movs
test
test
movs
pop
(bad)
stc
push
test
add
jno
test
mov
pop
loope
ds
jo
cwde
or
or
push
cdq
(bad)
inc
sbb
jg
cdq
aad
xchg
stos
mov
out
push
pop
mov
ins
stos
jmp
xor
addr16
test
or
test
cli
inc
addr16
add
mov
sub
std
cs
pop
cwde
fs
mov
inc
loopne
daa
call
xor
mov
push
push
or
mov
or
(bad)
sub
ja
out
xchg
xor
or
cmp
push
fs
cmp
sub
ins
and
xor
out
sbb
repz
push
adc
inc
inc
push
or
enter
rcl
icebp
sub
mov
lock
pop
mov
jl
repnz
cdq
inc
dec
inc
fsubr
pushf
fnstenv
das
in
dec
jb
cmc
int3
xor
xlat
inc
fnstcw
imul
fwait
sub
imul
or
fucomp
scas
cmp
aam
xlat
jmp
mov
lods
repnz
outs
inc
mov
shl
and
fmul
mov
add
dec
or
adc
mov
push
data16
pop
cdq
hlt
push
call
mov
jmp
pop
inc
dec
test
inc
mov
cmc
inc
inc
or
jmp
xlat
xor
add
pop
xchg
jns
push
dec
fnstenv
mov
xlat
xchg
aam
xchg
xor
mov
(bad)
push
dec
or
xchg
inc
in
xchg
cmps
loopne
add
jo
jno
adc
dec
aas
ins
push
mov
int3
sbb
leave
inc
adc
shl
push
xor
pop
mov
cs
mov
adc
hlt
xor
js
fldenv
sub
in
sub
js
and
and
or
add
clc
imul
gs
jp
add
cmp
in
scas
cdq
and
fstp
clc
mov
das
and
cmp
add
aas
mov
outs
mov
mov
mov
sbb
jbe
repnz
cmp
ss
in
fsubr
add
icebp
js
and
sbb
mov
xchg
mov
and
or
fistp
movs
pop
xchg
repz
cmp
mov
sub
pop
inc
push
jg
test
xor
popa
test
push
or
pop
and
(bad)
shr
xor
xchg
(bad)
(bad)
call
imul
fadd
outs
ret
mov
fnstsw
and
sub
jnp
pop
add
sbb
jmp
retf
imul
aas
in
xchg
add
mov
imul
into
mov
xor
test
std
js
leave
jb
in
cld
cmp
addr16
cmp
mov
gs
aam
mov
push
movs
jmp
adc
popa
cmp
ins
js
add
mov
dec
pushf
es
jmp
mov
jg
mov
lock
or
jo
iret
je
xchg
dec
cdq
dec
mov
psubb
jo
push
mov
arpl
jns
imul
jp
outs
or
or
cwde
cmp
nop
call
sub
imul
add
jmp
stos
(bad)
aad
cmps
cli
mov
out
hlt
stos
or
aaa
xor
daa
aaa
call
and
sti
scas
aas
movs
loope
push
movs
inc
lds
cmp
dec
and
xor
jno
push
mov
scas
mov
(bad)
icebp
inc
add
call
stc
cmp
fld
js
psraw
inc
pop
push
out
fnsave
leave
sub
push
xor
sbb
sub
mov
hlt
into
xor
in
add
inc
adc
inc
mov
adc
mov
lods
(bad)
jae
dec
bound
(bad)
mov
inc
jb
xor
fldenv
xor
daa
dec
jnp
mov
sbb
loopne
push
in
sbb
jne
ja
pusha
ins
jo
sbb
mov
mov
xchg
adc
add
mov
cmp
push
dec
in
xor
aam
add
push
lods
jl
lea
loope
dec
lds
cmp
adc
cmp
fdivrp
cmp
int
leave
or
aam
imul
pop
add
dec
fiadd
pop
sub
les
test
mov
sbb
cmps
fsubr
xchg
int3
mov
xchg
std
clc
movs
pop
sbb
pop
pusha
jg
sub
gs
sub
push
les
enter
in
push
mov
or
push
and
(bad)
jne
rep
hlt
pop
je
dec
shl
lods
push
cmp
sbb
and
mov
cwde
xchg
mov
add
pop
pop
repz
sbb
add
out
xchg
lds
dec
jno
aam
mov
outs
adc
cdq
mov
xchg
pop
je
movs
adc
pop
arpl
in
mov
dec
mul
push
mov
iret
adc
pushf
aas
mov
jmp
retf
add
cmp
push
mov
cli
test
fsubr
pop
xchg
sub
xor
mov
sbb
dec
adc
lods
and
std
in
mov
add
mov
leave
fwait
imul
in
lods
sbb
shl
mov
dec
fbstp
inc
xchg
jae
mov
inc
sub
pop
sub
sbb
xor
mov
or
xor
cwde
add
shl
ret
xchg
lahf
(bad)
(bad)
adc
xor
inc
push
jns
(bad)
out
xor
and
mov
test
add
cmp
stos
cmps
inc
test
mov
cmp
ins
cmp
fs
cmp
cmp
push
xchg
sbb
push
cmp
jmp
out
loope
mov
test
mov
mov
enter
cmp
cmp
pushf
adc
test
loop
mov
fidiv
dec
nop
in
pushf
cdq
popf
in
out
push
pop
or
repnz
or
nop
test
(bad)
in
pop
xchg
stos
out
cmp
es
cdq
inc
dec
daa
mov
xor
pop
jb
(bad)
mov
jno
jmp
xchg
fild
inc
out
jbe
not
adc
mov
dec
repz
xchg
push
fistp
les
and
fwait
sub
iret
movs
pop
sbb
push
adc
inc
cmp
xchg
mov
addr16
inc
fst
(bad)
xor
inc
addr16
jns
cmps
movs
cmps
jne
mov
enter
in
fild
inc
sub
cmp
mov
fcomp
imul
mov
aam
movs
mov
or
sub
jno
xor
call
lock
jmp
cmp
and
(bad)
(bad)
mov
and
sub
test
jge
stc
xchg
stc
lods
call
lea
or
add
out
sbb
dec
fldenv
test
or
xor
pop
popa
mov
or
mov
pop
push
loopne
out
mov
sub
int3
cmp
adc
jg
scas
mov
into
loope
jp
mov
ds
fisttp
jbe
adc
push
(bad)
fadd
pop
or
mov
aam
hlt
ret
les
mov
cld
aas
xchg
retf
test
clc
icebp
jmp
idiv
movs
mov
mov
push
imul
out
xor
and
lds
ins
or
lahf
jmp
adc
cld
mov
jp
fistp
sub
out
mov
fisub
xor
data16
push
add
cdq
xor
call
fadd
outs
cmp
cdq
les
shl
arpl
mov
inc
dec
cmps
cmp
xchg
xor
mov
push
mov
jle
cmp
cmp
and
imul
add
inc
pop
gs
xchg
retf
(bad)
in
cmps
fst
lds
addr16
icebp
test
or
sub
xor
enter
jnp
xor
xchg
ror
les
push
mov
push
inc
sbb
ret
ffreep
call
test
xor
enter
mov
mov
aam
cs
neg
bound
push
leave
movs
inc
test
inc
js
push
stc
and
inc
fimul
bound
jle
aad
jle
mov
inc
inc
and
xchg
fadd
jge
adc
dec
cs
sbb
in
aam
mov
mov
jmp
xchg
fs
ret
jmp
test
inc
in
and
rcr
cwde
cmp
push
mov
add
test
pop
aaa
pop
sahf
jb
movs
mov
cdq
gs
cmp
enter
push
mov
sti
jbe
int3
cld
dec
or
ss
es
cmp
jne
dec
or
xchg
out
mov
mov
sbb
fist
fs
(bad)
js
dec
ins
das
ds
test
pusha
pop
fnstcw
mov
dec
js
push
(bad)
call
fist
mov
jle
and
out
mov
das
pop
ret
aam
scas
icebp
push
add
dec
or
retw
ins
or
outs
mov
movs
jmp
fs
sbb
adc
(bad)
in
outs
xor
retf
cmp
fwait
leave
icebp
xchg
das
cmps
xchg
popf
push
pop
ins
dec
push
xchg
pop
push
imul
lods
cmc
test
retf
leave
sub
pop
enter
sub
pop
mov
cmp
jnp
(bad)
mov
test
in
test
in
adc
int3
icebp
adc
shl
loope
pop
xchg
loopne
or
xlat
movs
add
pop
sub
jns
int
sbb
pop
int3
inc
pop
enter
dec
or
push
and
js
inc
adc
lods
sbb
mov
cli
in
sub
cmp
test
mov
pusha
std
in
inc
pop
push
cmp
dec
pusha
shr
retf
popf
xchg
stos
cmc
or
into
cmp
(bad)
movs
add
mov
aas
cmp
dec
rcl
dec
xchg
jne
rol
cli
mov
dec
mov
sbb
jae
push
stos
mov
dec
mov
in
(bad)
sbb
je
and
xchg
add
push
dec
xor
aaa
cmc
jl
xchg
inc
mov
stos
add
leave
or
adc
pop
pop
gs
pop
jns
ds
xchg
jmp
out
repnz
sbb
add
jmp
add
adc
or
xor
mov
js
ror
aam
sbb
lods
es
cmp
cmp
cmp
dec
ss
test
sbb
ss
push
mov
test
mov
and
daa
xchg
lods
jo
inc
fcomp
pop
imul
or
and
icebp
xchg
xchg
arpl
xchg
popa
test
repz
gs
push
cs
add
js
les
lods
mov
mov
adc
adc
push
jno
cmp
into
fsubr
aaa
jmp
movs
sbb
adc
jecxz
adc
lods
inc
mov
push
or
mov
adc
push
fidivr
(bad)
daa
sbb
scas
out
mov
adc
hlt
mov
fcmovnbe
mov
dec
xor
sbb
cld
rcl
daa
repz
inc
ja
mov
mov
mov
or
ja
sbb
dec
push
and
push
inc
pop
cmp
pop
push
daa
rcr
mov
ins
pop
cmp
and
bound
jg
call
push
daa
or
or
cmp
sbb
call
or
gs
jo
lds
sub
dec
xchg
(bad)
fcmovbe
out
in
repnz
ret
ins
mov
mov
retf
inc
jae
les
retf
scas
mov
pop
mov
dec
push
jl
sbb
stos
lea
mov
ret
aam
pushf
ja
out
sub
lods
and
dec
adc
call
pop
mov
xchg
test
push
mov
pop
imul
adc
add
stc
in
sub
fnstcw
xchg
ja
sub
outs
and
sub
jmp
sub
mov
fcom
sbb
xchg
lahf
gs
in
fild
out
mov
mov
call
lock
mov
jae
loopne
sbb
add
out
(bad)
jge
ss
sub
or
or
fmul
jbe
gs
ins
daa
lds
adc
outs
xor
adc
ins
fwait
push
add
xlat
call
jmp
mov
daa
hlt
fiadd
mov
cmc
fidiv
mov
xor
and
fdiv
adc
ror
jbe
and
mov
loop
xor
mov
jne
or
and
mov
adc
fstp
dec
mov
or
iret
(bad)
dec
and
(bad)
inc
aas
mov
ja
sbb
jnp
mov
aad
cmp
mov
push
mov
fistp
push
ret
cmps
dec
mov
dec
xchg
enter
cmp
cmp
ins
dec
dec
add
or
movs
lods
jp
pushf
clc
push
xchg
clc
push
pop
sub
stos
in
je
test
push
xchg
loope
lock
mov
stos
rcl
neg
sub
jns
ins
and
jns
ins
jne
add
loopne
inc
cwde
scas
mov
movs
sbb
int3
lods
rol
cmp
fcom
mul
ins
push
repnz
sub
jmp
cli
xor
dec
xchg
in
sbb
mov
jne
jns
mov
ror
push
ins
jle
mov
adc
xchg
push
fs
inc
adc
lods
xchg
pop
retf
add
aam
adc
sbb
lock
mov
pop
mov
aad
inc
cmp
sbb
ror
in
gs
movs
imul
add
mov
ja
call
inc
jecxz
xchg
sub
mov
sbb
xor
and
sub
mov
pop
clc
inc
shr
shr
pop
pop
fistp
imul
mov
jne
enter
add
movs
xchg
add
inc
fcomp
adc
idiv
imul
loopne
xchg
sbb
scas
stc
ss
push
and
cdq
jmp
sub
sahf
daa
hlt
or
dec
and
shr
inc
fs
sub
pusha
ins
push
test
mov
push
movs
fcmovnb
cdq
cmp
rcl
loope
enter
dec
cmc
fadd
into
sub
lods
xor
xor
cwde
js
add
cs
hlt
push
icebp
fwait
mov
stos
pop
pop
sahf
scas
shl
in
push
stos
add
shr
loop
or
xchg
or
sub
cmps
dec
mov
sub
test
pop
js
scas
xor
dec
add
aas
cmp
jmp
xchg
lods
add
xor
xchg
fistp
ror
pop
xor
ja
xor
fs
jns
dec
adc
add
inc
repz
inc
das
jo
pop
pop
mov
push
inc
mov
adc
mov
sahf
pop
mov
pushf
xor
movs
xor
push
(bad)
push
mov
sbb
push
dec
and
cmp
sahf
sti
sub
xchg
jns
push
cs
nop
adc
out
test
test
outs
pop
adc
repnz
xor
jg
addr16
or
mov
stos
adc
xor
pop
dec
and
mov
lahf
adc
cmp
xor
xchg
leave
and
rcr
fsubr
sbb
adc
stos
retf
(bad)
pop
sbb
adc
add
std
inc
pusha
dec
(bad)
xchg
sbb
mov
jle
fimul
cmc
shr
hlt
pop
jecxz
mov
(bad)
fimul
xor
mov
hlt
cmp
xchg
sbb
inc
jb
scas
adc
jbe
push
jmp
repnz
repz
xchg
in
mov
dec
inc
dec
(bad)
cld
pop
call
sbb
mov
mov
push
push
mov
in
(bad)
(bad)
std
sbb
test
outs
dec
cmp
jbe
leave
ret
cdq
aad
sbb
lock
push
xchg
mov
mov
push
mov
push
popa
xor
fistp
adc
cdq
shl
(bad)
pop
mov
xchg
inc
inc
adc
bsf
push
addr16
out
or
push
sti
or
mov
inc
rcr
imul
int3
and
add
cld
je
pop
test
(bad)
mov
fidiv
jno
imul
loop
jo
adc
mul
inc
cmp
sub
xchg
enter
cmp
ds
addr16
mov
in
mov
cmc
sub
hlt
lods
xor
pop
adc
dec
xchg
mov
jno
pop
pop
cwde
push
push
fs
imul
mov
imul
test
fimul
lods
mov
mov
xor
add
and
nop
stos
fadd
mov
inc
cmp
xchg
pop
imul
jg
xchg
pop
dec
pop
scas
out
xlat
and
mov
ins
or
add
or
push
test
xchg
popf
pop
lods
iret
movs
(bad)
push
scas
mov
jecxz
pop
pop
add
int3
cmc
(bad)
push
xchg
pusha
and
mov
push
ja
call
jmp
fs
mov
adc
and
push
inc
leave
shr
jns
mov
lods
mov
movs
lods
nop
xor
inc
fst
push
aaa
cmp
add
test
xchg
call
xchg
fist
ins
and
xchg
mov
xchg
sbb
out
mov
sbb
mov
push
int3
call
xor
ins
retf
out
das
mov
push
xchg
adc
xchg
scas
je
aaa
pop
xchg
ins
add
leave
stos
in
pusha
fcom
mov
cwde
test
loopne
xchg
out
adc
in
add
cmp
inc
xor
std
mov
movs
in
xchg
xor
leave
cmp
aam
popa
sbb
nop
scas
test
mov
retf
ficom
adc
cmp
mov
dec
loopne
push
fcmovnbe
or
out
jne
sub
mov
cmp
das
sbb
cdq
das
stos
movs
mul
pop
pop
popa
ret
sub
mov
es
sbb
or
int
stos
inc
test
inc
or
ficom
adc
cmps
out
mov
int3
inc
rcr
imul
xor
popf
aas
push
xlat
loope
(bad)
sbb
cli
test
retf
xchg
loope
fist
push
fs
xchg
stc
mov
ss
push
fcmovu
sub
leave
and
loop
xor
popf
rcl
outs
arpl
mov
cmp
mov
test
push
mov
out
fs
fmul
arpl
out
jge
pop
lods
cmp
xor
sbb
push
jbe
in
inc
clc
fcmovnbe
dec
mov
cld
mov
mov
retf
fs
je
push
sbb
je
inc
xchg
dec
adc
jae
add
xchg
mov
pop
mov
fist
dec
lods
imul
popf
fiadd
(bad)
fst
xchg
mov
add
and
pop
movs
imul
xor
enter
rcr
xchg
ds
jns
dec
scas
jns
cmp
jl
xchg
cmp
(bad)
cwde
arpl
mov
cmps
ja
sar
loop
js
fldcw
daa
mov
gs
jnp
in
stos
inc
push
stos
test
xor
mov
push
cmp
push
mov
push
pop
ret
das
shl
mov
xor
gs
add
je
bound
sub
lods
not
ret
ffreep
mov
mov
pop
fadd
test
hlt
add
es
mov
cmp
fs
lahf
call
mov
repnz
enter
xor
(bad)
mov
and
cmp
or
xchg
aam
jg
xchg
cdq
les
hlt
in
fs
add
daa
cmp
inc
out
aam
add
mov
add
std
push
pop
dec
ins
fs
cli
nop
cmp
adc
mov
and
adc
and
jg
or
cmp
sub
xchg
bound
shl
push
xchg
mov
cdq
xchg
inc
je
or
les
ins
loop
imul
dec
or
out
test
jmp
jnp
cmps
test
xor
div
mov
xlat
imul
mov
lods
test
mov
push
inc
imul
add
sub
out
(bad)
es
imul
xor
dec
push
dec
dec
mov
jne
push
dec
cmp
adc
sbb
test
adc
pusha
or
je
das
xor
test
dec
loop
mov
cmp
mov
push
outs
and
xor
imul
jmp
dec
ret
sbb
mov
shl
push
xor
push
aam
pop
ins
repz
in
int3
imul
jl
imul
(bad)
pop
inc
xchg
pop
rep
fs
dec
cdq
adc
mov
add
(bad)
std
lea
mov
sbb
je
data16
cmps
cmp
xchg
dec
es
sbb
and
mov
lods
jl
stos
and
push
daa
mov
dec
pop
jbe
fstp
pop
shl
cmps
(bad)
rol
pop
mov
push
loope
ja
adc
in
mov
add
in
shl
dec
les
pop
loope
iret
inc
js
shl
jns
inc
mov
in
cmp
or
ret
inc
add
xchg
jg
pop
pop
cmc
imul
pop
push
or
xchg
mov
xchg
cmp
lods
inc
push
inc
(bad)
ss
ror
jne
loopne
rcr
pop
in
fdivr
sub
loop
cmp
icebp
icebp
mov
leave
jno
sbb
stos
mov
mov
or
xchg
and
cmp
push
push
inc
push
jmp
cld
retf
xchg
jns
mov
(bad)
cmps
jmp
dec
sub
mov
mov
cdq
jne
test
int3
push
or
cmp
adc
pop
and
push
mov
cmp
mov
test
xor
ror
imul
stc
fdivr
repnz
jecxz
retf
cmps
fcmovnbe
in
add
fist
and
mov
test
add
or
imul
test
pushf
test
jae
jmp
jns
fst
dec
ds
adc
cld
outs
cmc
js
dec
sub
inc
sbb
cmp
sahf
jp
xor
or
jecxz
cmp
movs
mov
add
push
pop
or
xchg
stos
push
pop
dec
or
sahf
mov
cmp
jp
cmp
mov
test
jnp
add
jae
lock
add
je
mov
test
mov
clc
gs
jb
jno
add
cmp
pop
(bad)
out
jno
cdq
popa
sete
mov
test
loop
cmp
push
jp
mov
mov
xchg
enter
and
xlat
mov
mov
pop
push
call
imul
imul
mov
push
in
jbe
out
ss
pop
aas
int3
in
idiv
jp
test
rcl
stos
test
mov
sbb
ffreep
in
lods
push
js
jp
leave
mov
test
pop
outs
scas
into
aaa
xchg
aam
xlat
js
enter
cmp
fnstcw
mov
push
xchg
enter
outs
inc
movs
sbb
mov
jl
in
cmps
pop
adc
ss
and
int
shl
cwde
pushf
or
push
scas
test
fisttp
mov
cdq
(bad)
in
idiv
add
and
call
xchg
and
in
jbe
fld
cmp
dec
push
popf
adc
movs
adc
(bad)
out
dec
ins
movs
out
movs
in
hlt
std
xlat
push
nop
adc
test
sub
jbe
je
dec
ss
dec
and
xor
xchg
adc
jge
aad
je
add
test
in
movs
add
sub
xchg
mov
and
lds
fchs
xor
push
ja
dec
data16
inc
ret
shl
and
pop
adc
js
clc
loop
call
cmp
lods
pop
mov
mov
xor
aas
call
sub
sbb
push
push
out
lods
fwait
jb
push
leave
test
jl
sbb
arpl
sbb
fsub
shl
mov
xor
(bad)
int
repnz
xchg
or
cli
fs
cmp
mov
mov
cmp
mov
retf
lahf
cmp
ja
movlhps
jecxz
xchg
and
lea
push
jmp
inc
mov
aaa
dec
stc
inc
inc
adc
add
ja
push
stos
stc
call
xor
sbb
push
js
mov
or
mov
xor
dec
sbb
enter
test
mov
pop
xor
test
dec
adc
cmc
pusha
in
stc
xor
mov
mov
xor
cdq
enter
fadd
add
cmp
sub
aaa
aam
jge
scas
js
mov
icebp
mov
xchg
ss
mov
fwait
in
in
cmp
je
sub
retf
cld
push
movs
cmps
add
stc
inc
stos
pop
jge
mov
retf
fld
mov
lahf
sbb
and
enter
ret
fsub
out
mov
fimul
(bad)
stos
ja
fcomi
or
jge
inc
and
cmp
mov
sahf
ja
enter
mov
mov
int3
jo
jae
aam
adc
mov
(bad)
dec
push
imul
data16
test
push
popa
inc
ss
fsub
and
retf
repz
inc
cld
mov
xchg
loop
push
daa
xor
enter
jecxz
rcr
inc
movs
pop
inc
mov
mov
xchg
scas
popf
jl
cli
ret
sub
mov
inc
cdq
sub
pushf
xor
jns
jg
pop
push
mov
test
cvtdq2ps
imul
lds
mov
leave
les
addr16
sbb
daa
jmp
mov
movs
clc
sbb
jns
xor
aam
mov
shl
xor
jmp
data16
jbe
cdq
movs
mov
test
out
mov
popf
jns
dec
mov
jns
jl
test
inc
mov
mov
cmp
cli
and
xlat
and
test
mov
and
imul
out
xor
mov
mov
jmp
je
iret
popf
xchg
xchg
mov
js
pop
pop
pop
call
push
popf
push
cmp
inc
enter
ins
test
lods
test
and
fs
mov
ret
pop
stc
pusha
in
retf
push
aaa
(bad)
lahf
xchg
ret
xchg
std
jg
mul
add
inc
enter
dec
and
jmp
cld
int3
and
stos
les
popf
inc
cmp
add
lds
sub
out
adc
dec
pop
jno
popa
lods
and
rcr
arpl
ds
imul
jo
or
sub
(bad)
scas
mov
xchg
stc
es
mov
mov
xchg
dec
rcl
dec
or
pop
inc
mov
xchg
inc
jmp
test
sbb
xchg
sbb
jecxz
xor
dec
test
loope
push
sbb
xchg
fidiv
pop
les
jmp
xchg
mov
cmp
sti
pop
cwde
enter
adc
lods
aaa
cmps
push
push
jg
cld
mov
(bad)
mov
popa
mov
test
adc
inc
lds
xchg
test
xchg
and
inc
lods
push
lea
retf
mov
cmp
mov
fwait
neg
add
mov
add
push
pusha
sbb
inc
or
lea
and
jmp
xchg
les
pop
ss
xor
nop
mov
and
test
push
mov
mov
or
movs
sti
retf
clc
mov
loope
pushf
scas
jb
and
cmp
push
imul
mov
mov
arpl
gs
xchg
retf
jg
adc
dec
pusha
fdiv
push
sub
sbb
push
(bad)
jg
test
mov
cwde
pop
or
jl
jae
into
shr
les
or
out
jmp
pop
xchg
mov
call
and
dec
mov
xchg
mov
push
cmp
inc
int
fs
pusha
push
data16
or
xor
xchg
xlat
into
xchg
ins
xor
mov
fld
repz
xor
xlat
cmp
fcomp
xor
pop
movs
mov
outs
cmp
jae
pop
into
outs
ficom
or
jle
shr
adc
mov
pop
cmp
(bad)
cmc
out
scas
in
cld
js
(bad)
mov
ret
sbb
cmp
adc
cmp
sbb
jno
jecxz
(bad)
sbb
push
push
xchg
ja
test
add
out
sbb
test
jne
dec
jmp
shl
mov
sar
das
cmp
js
dec
fidiv
lahf
xor
adc
imul
inc
push
inc
scas
lahf
cmp
sbb
int3
into
lods
mov
bound
ret
shl
iret
ins
and
adc
icebp
cmp
xlat
gs
retf
sbb
push
test
mov
adc
jge
push
jmp
out
mov
xor
xchg
add
mov
jmp
mov
dec
test
out
jge
imul
ret
fstp
and
push
sbb
sbb
adc
xchg
les
pop
addr16
cwde
repnz
nop
mov
not
mov
outs
in
aam
les
or
and
cld
icebp
dec
inc
cdq
jle
test
and
mov
les
xchg
jge
jecxz
push
dec
(bad)
adc
xor
push
or
in
cli
pop
loopne
popf
mov
push
xlat
pop
jmp
ss
mov
adc
test
sub
loop
or
pop
enter
popa
sbb
stos
sbb
push
mov
xchg
call
(bad)
fwait
cmps
sub
shr
mov
popa
cmp
mov
push
imul
jmp
cdq
mov
mov
in
ss
lds
fxch
push
and
outs
call
cld
das
push
popa
push
loope
add
call
mov
pop
push
lahf
cld
test
dec
ret
aad
xor
pop
mov
aaa
cmp
stc
gs
sbb
mov
ja
xchg
pop
mov
xchg
push
jmp
pop
ret
call
cdq
iret
nop
test
push
dec
movs
pop
sbb
or
stos
stc
imul
pop
or
adc
and
or
loop
add
mov
pop
sbb
mov
xchg
ss
xchg
gs
cmp
call
adc
jmp
pop
xor
fs
pop
imul
add
test
pushf
mov
movs
lods
dec
fwait
xor
aad
jg
mov
aaa
dec
sbb
adc
mov
jg
jecxz
xchg
adc
movs
cmp
imul
pop
ins
sbb
jns
adc
xlat
mov
inc
jno
loopne
rcr
inc
mov
jns
mov
pop
call
test
leave
mov
xchg
pop
in
push
gs
cmc
cdq
(bad)
mov
pop
out
ins
jno
jge
xor
xlat
xchg
std
(bad)
push
jl
ins
cwde
sub
sahf
jp
fwait
imul
stc
aad
adc
cmp
pop
jno
pop
push
fcomp
lods
and
mov
mov
sub
fimul
adc
mov
mov
in
loop
mov
fdivr
inc
jns
sub
add
mov
popa
mov
sbb
jg
mov
ror
sub
(bad)
lock
pusha
sahf
dec
pop
rol
mov
inc
stc
cld
mov
sub
sub
or
idiv
jne
movs
jb
inc
call
shr
or
fnstenv
inc
movs
sbb
push
mov
pop
jne
mov
sub
out
inc
xor
xor
mov
cmc
sbb
pusha
ss
adc
test
fs
mov
xor
xchg
sub
mov
dec
les
popa
ficomp
call
mov
mov
(bad)
jl
mov
add
pop
add
push
push
xlat
rcl
loope
xor
mov
xor
and
push
sbb
sub
shl
push
adc
ins
cmc
adc
sar
mov
repnz
mov
sti
mov
adc
scas
ins
xlat
stc
sub
mov
addr16
cli
movs
test
jmp
mov
mov
jle
sub
pop
(bad)
in
imul
sar
sub
add
sar
outs
fidiv
shr
xchg
jmp
xchg
ins
mov
(bad)
pop
in
push
push
push
adc
aas
xchg
sub
(bad)
(bad)
fisub
xchg
sub
leave
push
ret
call
out
cmp
popa
(bad)
mov
inc
test
mov
jne
add
pop
js
add
mov
das
xchg
rol
jo
adc
sbb
pop
or
cmp
jle
cwde
js
dec
push
mov
test
add
aam
sub
aaa
inc
sbb
add
frstor
bound
xchg
aad
fidivr
mov
mov
(bad)
cmc
add
sbb
sub
pop
xchg
retf
out
or
mov
pop
loop
dec
pop
mov
mov
in
cs
push
iret
add
movs
cwde
es
add
mov
mov
aas
mov
jl
cmp
sbb
mov
sbb
and
into
lock
or
pop
push
leave
push
or
popf
sub
ins
cs
pop
xchg
(bad)
xor
dec
aas
add
pushf
lods
stc
mov
fxch
or
push
adc
cmp
pop
(bad)
push
pop
sbb
test
rol
arpl
nop
cmp
js
push
aam
push
in
jmp
dec
or
xor
and
call
rol
(bad)
jo
mov
mov
call
fsubr
not
adc
icebp
adc
sub
pop
ss
stc
add
cmp
xlat
sub
lods
push
add
dec
cmp
gs
pop
pop
ja
mov
imul
push
mov
(bad)
pop
mov
dec
movs
imul
xor
sahf
scas
fcom
test
fiadd
push
jnp
dec
mov
ins
push
adc
jmp
and
add
bnd
mov
popa
mov
cmp
sbb
sbb
lahf
bound
push
test
movs
adc
push
push
ss
pop
test
adc
dec
aas
or
ficomp
test
mov
xor
cdq
hlt
cmp
push
scas
jne
xchg
mov
jb
stos
cld
lds
xchg
clc
xchg
mov
call
lahf
lds
sbb
cld
(bad)
jnp
popf
in
mov
inc
fld
mov
mov
adc
jnp
aas
push
(bad)
push
pop
popf
cld
mov
dec
test
out
xchg
mov
mov
bt
enter
push
loopne
jmp
pop
lea
inc
or
xchg
stos
test
adc
dec
int3
fwait
xchg
mov
clc
dec
fld
clc
push
add
stos
and
aaa
mov
fdivr
mov
retf
retf
(bad)
test
or
adc
push
in
enter
clc
push
imul
jg
adc
out
and
push
push
sub
inc
cmc
push
dec
adc
fwait
leave
retf
out
inc
(bad)
das
dec
inc
out
mov
xor
mov
mov
xchg
mov
aam
(bad)
dec
jge
lahf
adc
lods
cmps
jno
sbb
xchg
stos
test
xchg
cli
lods
in
inc
cdq
ret
add
adc
test
xchg
(bad)
mov
inc
xor
jmp
inc
enter
test
mov
shl
cmp
fsubr
pop
push
xchg
add
sub
xchg
js
mov
jns
and
ds
sbb
jb
sub
clc
sub
(bad)
mov
loope
test
fs
movs
add
add
jb
pop
lods
add
(bad)
mov
rol
outs
sub
test
stos
fimul
inc
adc
ficomp
sbb
(bad)
xchg
pop
aaa
push
cmc
sti
push
dec
xor
in
test
je
jns
gs
fs
push
mov
jle
jbe
inc
jae
jne
sub
movs
cdq
or
dec
cmp
cmp
jbe
sub
mov
je
mov
mov
xchg
sti
pop
loop
popf
sub
jne
add
addr16
cld
xchg
inc
shl
repnz
push
cmp
ret
fldenv
sar
mov
and
xor
dec
sbb
add
cmp
or
clc
imul
xchg
jns
icebp
mov
fidiv
pop
mov
dec
xchg
bound
mov
(bad)
clc
movs
test
cmps
fsub
pop
loope
inc
leave
xchg
jmp
xchg
dec
xor
or
or
sbb
sbb
mov
push
jg
push
mov
jmp
cmc
cmc
xchg
adc
pop
leave
inc
or
mov
sub
push
imul
push
inc
ds
dec
retf
into
dec
pop
adc
int
sub
jns
sbb
stos
and
cdq
add
std
outs
xchg
cmp
aam
(bad)
les
add
sub
stos
aam
jno
and
lock
sbb
or
mov
mov
bound
in
aam
iret
je
inc
sub
(bad)
add
adc
pop
jno
and
lods
jno
icebp
lods
sub
push
push
aaa
sbb
pop
out
dec
xor
pop
pop
lods
or
ins
sbb
jecxz
test
fldcw
mov
test
(bad)
cmp
cmp
test
cmp
sub
xchg
call
adc
sbb
gs
(bad)
gs
adc
push
fisubr
dec
cmps
adc
adc
jle
mov
daa
cs
inc
pop
cld
push
mov
lds
adc
test
imul
dec
enter
xlat
(bad)
enter
xchg
push
out
(bad)
jmp
inc
je
(bad)
mov
or
or
test
push
dec
push
shl
mov
ret
imul
xchg
xlat
cmp
in
and
call
add
popa
lods
pop
mov
inc
repz
test
mov
lds
mov
sbb
pop
jmp
cmp
add
push
dec
xor
inc
jne
cmp
test
rcl
push
and
or
push
adc
jl
je
movs
mov
mov
dec
cld
loope
sub
das
inc
push
and
retf
xchg
dec
pop
fld
pop
stos
fwait
hlt
(bad)
fs
xor
mov
cmc
add
in
push
sub
cmp
imul
loope
mov
js
push
and
sub
mov
or
movs
sub
xor
frstor
jle
scas
in
mov
movs
leave
jecxz
sub
jne
lods
mov
iret
fsub
mov
dec
adc
fsub
inc
jge
or
test
fild
mov
mov
imul
stos
push
sbb
loopne
and
daa
loope
jne
call
sub
stos
add
rcl
test
shl
pop
icebp
pusha
sub
cmps
xchg
lea
jmp
mov
cmps
and
ret
addr16
mov
shl
push
or
out
imul
jge
or
or
add
in
lods
or
int
sub
pop
test
in
sbb
xchg
jbe
std
inc
sbb
jecxz
js
scas
jbe
lahf
pop
cmps
ds
cmp
sbb
sbb
mov
xchg
cmps
das
pop
hlt
mov
movs
shl
sbb
lahf
sub
sahf
or
imul
add
add
pop
jns
(bad)
fdivr
mov
inc
pop
(bad)
mov
mov
(bad)
(bad)
sbb
jb
or
pop
icebp
inc
jae
jne
aaa
leave
aam
push
push
push
ja
pop
test
sub
loope
mov
(bad)
mov
mov
test
(bad)
in
hlt
cdq
daa
addr16
adc
cdq
and
push
enter
in
pop
add
scas
mul
out
ret
inc
adc
aad
inc
mov
push
cmps
fucomp
mov
mov
loop
mov
aas
in
push
push
(bad)
dec
test
pop
mov
xchg
test
push
or
inc
sub
add
adc
in
pop
xor
xlat
ss
mov
vsqrtss
imul
xchg
ds
add
shr
(bad)
mov
movs
sub
push
push
gs
test
mov
adc
cli
xchg
hlt
js
jmp
test
mov
stc
sub
xchg
cmp
aaa
or
in
cmp
es
jbe
test
mov
out
mov
and
jb
lods
push
push
in
in
xor
(bad)
mov
movs
or
(bad)
icebp
arpl
jne
inc
leave
add
bound
(bad)
cdq
aas
sar
out
xlat
xchg
jbe
int3
mov
mov
dec
stos
test
inc
mov
sar
imul
test
push
jmp
mov
pop
outs
rcr
outs
ss
adc
pop
outs
xchg
repnz
mov
inc
add
mov
loopne
sub
sub
ja
sub
or
das
sti
pop
inc
daa
cmp
ficom
lock
les
jnp
jbe
adc
or
pushf
iret
movs
cdq
inc
push
inc
cmp
icebp
sub
sbb
and
movs
in
scas
xchg
jb
pop
mov
popa
mov
xor
into
addr16
scas
adc
mov
loop
push
fcom
cdq
dec
mov
adc
or
dec
inc
dec
mov
xchg
ins
cmp
inc
call
xchg
div
cmc
lds
pop
push
outs
xor
jmp
push
pushf
jno
mov
mov
repz
scas
xor
(bad)
iret
adc
cs
loopne
fimul
aaa
int
stc
xor
retf
mov
cld
je
test
dec
pop
add
adc
push
je
adc
sbb
or
fist
pop
mov
ds
cdq
test
stos
leave
adc
mov
mov
sub
xor
cdq
mov
dec
push
icebp
(bad)
push
push
mov
or
outs
jg
fstp
inc
xchg
sbb
sub
test
jecxz
or
mov
repnz
inc
pop
and
mov
sbb
(bad)
test
test
mov
imul
jecxz
scas
inc
adc
jns
fisttp
mov
mov
push
ret
inc
es
mov
movs
jmp
test
ins
jg
sbb
adc
mov
push
mov
mov
cmc
add
jmp
jg
jbe
ret
jns
cdq
xor
sub
out
jbe
push
or
inc
xor
inc
push
push
adc
push
sar
jns
jmp
int3
hlt
ins
rcr
movs
dec
test
xchg
(bad)
stc
add
xor
sub
fcomp
pop
and
test
lock
fcmove
js
gs
add
js
push
scas
pcmpgtw
and
mov
push
sbb
cdq
sbb
push
dec
je
inc
jp
mov
fbld
push
movs
mov
jbe
stos
mov
sbb
push
popf
or
adc
sub
mov
push
test
pop
add
in
inc
fdiv
pop
lock
mov
jge
dec
fwait
loopne
jns
mov
pusha
shl
mov
cmps
dec
movntq
jge
sbb
add
fidiv
sbb
mov
or
test
xchg
cmp
test
lahf
inc
pop
inc
stos
retf
and
sub
outs
movs
add
pop
inc
shl
cmpxchg
mov
pop
jo
sub
dec
js
pop
push
ins
mov
push
or
push
jmp
cmc
out
ins
call
mov
lds
cmp
mov
es
jo
xchg
cmp
pushf
popf
pushf
add
mov
pushf
jmp
je
xlat
cmp
fdiv
js
gs
xchg
mov
pop
sub
std
imul
out
and
inc
cmp
fidiv
gs
(bad)
push
pop
fwait
dec
mov
arpl
inc
mov
mov
pop
or
enter
ins
test
test
enter
test
pop
call
push
sbb
js
ins
push
xchg
mov
repz
mov
icebp
icebp
pop
jns
cmp
xchg
les
mov
iret
jmp
mov
mov
push
lods
jb
pop
test
mov
dec
push
mov
inc
or
jmp
add
push
fwait
jbe
jg
cwde
xchg
int3
dec
xor
jb
jg
aaa
push
nop
test
adc
mov
(bad)
lods
jnp
retf
ret
into
cmp
leave
mov
and
and
(bad)
sbb
or
jae
dec
cld
fist
push
cmps
and
adc
mov
mov
rcl
stos
jmp
cli
sbb
mov
les
icebp
mov
dec
(bad)
jmp
jge
aad
mov
movs
ror
jo
jl
lea
out
movs
arpl
add
pop
shl
shl
mov
imul
cmp
pop
sbb
push
mov
add
jmp
xchg
int3
dec
or
sbb
mov
cmp
sub
mov
fild
cmp
xchg
xor
mov
and
ja
mov
lahf
xchg
mov
pop
jb
packssdw
mov
xor
test
gs
ins
xchg
push
xchg
inc
cmp
or
fist
retf
cmp
cmc
xlat
rcr
call
adc
inc
(bad)
push
loop
pusha
sbb
xor
les
in
ins
pop
and
cmps
jmp
xor
mov
jge
in
in
cmp
aaa
arpl
mov
push
repz
xor
repnz
push
xor
mov
in
mov
es
in
movs
fs
cmp
(bad)
stos
in
and
cmp
aam
lea
mov
jne
aad
cmp
icebp
cmp
and
std
cmps
cmps
sbb
mov
mov
add
ins
je
cwde
add
dec
jo
into
outs
pop
dec
sbb
mov
and
jmp
mov
(bad)
(bad)
pop
fcmovb
in
xor
neg
stos
sub
call
sbb
shr
mov
rol
jl
hlt
inc
mov
inc
shl
push
ret
xchg
sub
mov
leave
pop
cld
aaa
jge
and
push
jno
jmp
adc
inc
jnp
jmp
ins
aad
daa
push
dec
(bad)
xor
inc
ror
sub
pop
cmp
and
sbb
sbb
leave
sbb
sbb
xlat
add
dec
jmp
mov
xor
test
scas
sbb
addr16
cmp
inc
mov
call
adc
xchg
dec
ins
sub
ds
jp
adc
xchg
push
or
sub
mov
mov
leave
pop
into
jae
mov
test
fadd
sbb
not
xlat
imul
push
cmp
rol
mov
cli
dec
(bad)
sub
push
(bad)
cmp
stc
and
rcr
dec
cmc
push
cmc
call
les
test
cmp
hlt
and
ret
inc
in
jae
xlat
push
icebp
push
push
push
les
mov
push
ss
(bad)
mov
mov
js
stc
add
sti
or
popf
push
(bad)
daa
jmp
test
and
aam
jl
sub
mov
stos
aaa
ins
(bad)
enter
test
dec
jne
add
jmp
dec
leave
fstp
mov
dec
and
cwde
sub
or
aam
movs
gs
or
cmp
(bad)
adc
aad
mov
lahf
cmc
or
jnp
ja
jp
or
data16
and
stos
mov
jno
dec
movs
adc
clc
or
idiv
push
jp
iret
xchg
cmp
ds
sar
les
mov
dec
xor
fcomip
ins
in
sbb
lods
inc
mov
inc
test
lock
(bad)
cld
pop
sub
xchg
push
pop
inc
mov
int3
fs
mov
sub
mov
inc
add
mov
mov
mov
xchg
out
mov
mov
popa
loop
adc
push
xchg
and
ins
push
aas
mov
or
repz
push
dec
xchg
push
mov
cmc
or
inc
mul
outs
lahf
mov
retf
bound
push
xchg
add
xor
out
popa
add
mov
xchg
mov
jmp
stos
xchg
cwde
add
xor
not
sbb
in
add
mov
jmp
pop
inc
mov
and
pushf
pop
xor
loop
inc
or
ins
mov
mov
mov
jne
cmps
imul
jg
add
cmp
hlt
mov
sub
(bad)
xchg
adc
bound
call
and
call
inc
cmp
xor
pop
leave
ret
mov
jmp
mov
adc
cmp
inc
xor
outs
daa
jecxz
daa
xor
inc
push
shr
cmp
jmp
pop
cmp
xchg
rcr
arpl
(bad)
xor
jns
test
div
enter
or
push
mov
js
je
cli
pop
mov
pop
js
mov
add
shl
sar
lea
daa
push
out
jae
sahf
mov
nop
push
and
mov
fbld
or
cmp
mov
and
mov
mov
(bad)
pop
adc
stos
jl
inc
xchg
cwde
push
es
test
mov
dec
inc
test
(bad)
out
iret
push
jb
(bad)
daa
stc
cs
sbb
mov
pop
jp
sahf
mov
cld
lds
retf
addr16
shl
xor
fdiv
cld
ins
xor
stc
cwde
push
test
cld
mov
leave
test
mov
ja
call
stos
cmc
add
(bad)
xor
sahf
add
dec
sbb
fld1
in
aad
out
mov
stc
and
retf
xchg
sbb
cmp
pusha
mov
aaa
lds
repz
ficom
jmp
out
ins
test
and
test
add
sbb
daa
xor
sbb
test
call
bswap
cmp
pop
jbe
xor
pop
pop
dec
jmp
std
sahf
inc
cdq
mov
jmp
jb
add
jb
jne
xor
inc
pop
sub
cmp
pop
push
sub
cli
cmps
es
call
inc
movs
fwait
dec
jmp
cmc
enter
add
xchg
icebp
xchg
mov
movs
addr16
leave
dec
and
pop
out
nop
retf
out
retf
xchg
adc
fidivr
mov
push
or
out
pop
inc
and
bound
sub
retf
inc
mov
test
ins
xor
or
cwde
xor
jnp
xor
mov
test
sbb
ins
mov
pushf
mov
enter
add
add
xor
test
mov
sub
sbb
fdivr
fcom
fcom
pop
pop
mov
jmp
js
pop
sub
and
inc
shl
imul
inc
jne
inc
mov
leave
mov
mov
lods
aam
add
das
ss
dec
(bad)
sti
xchg
mov
mov
mov
aaa
and
push
ror
pop
test
mov
test
cmp
test
enter
inc
stc
lods
and
scas
cli
ja
push
sbb
jle
sub
inc
adc
aam
test
int
fisttp
mov
je
sub
sub
das
push
pop
test
or
adc
xlat
mov
icebp
neg
sbb
xchg
pop
sub
jnp
pop
lds
adc
imul
mov
cmp
dec
lea
or
push
push
sbb
enter
or
cli
icebp
xchg
js
or
xor
sub
sub
inc
and
retf
mov
mov
shl
sub
inc
dec
ins
xor
fs
push
push
xchg
ins
and
cmp
fdecstp
mov
mov
cmc
push
dec
mov
xor
fwait
retf
xchg
mov
jle
push
fwait
xchg
cmps
std
push
test
test
dec
cli
push
add
je
stos
cmp
mov
and
xchg
leave
mov
pop
and
push
sbb
ret
jmp
and
mov
xchg
adc
into
hlt
dec
inc
adc
adc
sahf
pop
mov
pop
pop
push
cmp
jmp
add
sbb
mov
ins
lahf
ss
cmp
mov
sub
(bad)
mov
fld
retf
mov
fdivr
lock
mov
sub
call
sbb
ds
push
cmp
loope
push
xchg
int
pusha
add
xchg
pop
int3
div
mov
and
mov
bound
dec
inc
jo
pop
cmp
gs
(bad)
sub
mov
mov
and
ret
ja
xor
int3
dec
mov
and
movs
push
adc
dec
push
rol
cmc
stc
ins
pop
lods
cmp
sbb
and
add
test
xchg
inc
jmp
mov
fiadd
mov
lock
in
xor
add
imul
or
add
dec
and
push
js
adc
in
jbe
mov
iret
stos
jb
xchg
mov
hlt
sbb
fsub
inc
int
je
xchg
jl
xor
jb
xchg
add
out
enter
sbb
je
sub
int3
pushf
loop
leave
cmp
mov
xor
add
cmps
sti
data16
xchg
add
addr16
push
hlt
dec
xor
popa
lds
out
mov
mov
or
pop
retf
inc
arpl
dec
ret
jge
rol
sub
pop
cdq
pusha
push
pop
cmp
call
hlt
pop
cmp
jns
imul
leave
cli
outs
pop
xchg
jo
loope
cmp
shl
lods
pop
pop
dec
lea
dec
push
inc
mov
sub
shr
xchg
lds
push
call
das
jne
sub
cwde
add
(bad)
call
dec
cmps
ins
icebp
int3
adc
pop
ja
dec
push
pop
(bad)
paddq
and
sbb
retf
mov
fdivr
jmp
std
ja
enter
lahf
inc
ror
gs
or
hlt
push
dec
add
fld
xor
cmc
jae
mov
sub
push
cmp
lea
mov
movs
pop
out
dec
pop
sbb
mov
xor
dec
or
sar
scas
mov
call
enter
mov
mov
pop
pop
mov
pop
and
clc
jns
dec
loopne
pop
in
loopne
test
xchg
dec
popf
mov
mov
pop
scas
jp
xchg
mov
mov
aam
pop
mov
inc
inc
or
icebp
mov
inc
sub
mov
add
sbb
enter
pop
jnp
or
loop
jne
add
jo
data16
rol
stc
pop
adc
mov
inc
cmc
mov
popa
loop
int
in
test
lods
fnclex
popa
icebp
test
push
lock
in
cmps
jo
xchg
sbb
ror
dec
inc
xchg
cmp
loop
jmp
mov
inc
or
mov
retf
icebp
loopne
repnz
int
jo
mov
pop
or
aas
imul
call
test
mov
add
out
je
or
xor
pop
add
push
cdq
fisttp
push
cs
sub
fidiv
cmp
sbb
out
test
jle
in
enter
cmc
mov
sub
ret
mov
cdq
add
imul
sbb
dec
xchg
or
je
push
loope
mov
mov
sub
outs
sub
xchg
pop
and
leave
pop
jg
addr16
(bad)
cmp
mov
cmps
sbb
mov
cmps
clc
add
jae
nop
(bad)
dec
mov
mov
fs
or
rcr
sahf
push
addr16
paddw
(bad)
in
xchg
jmp
cmp
ja
in
push
fldenv
js
jne
jae
pop
lods
push
jnp
xchg
mov
(bad)
das
push
xchg
out
cmps
dec
push
lods
pop
add
mov
sbb
and
adc
out
xor
pop
leave
cli
fnstsw
aaa
bound
scas
add
or
rcl
and
jne
iret
push
popa
or
sbb
je
shld
mov
push
adc
lahf
add
not
sar
mov
inc
sbb
(bad)
lods
call
pop
dec
rol
sti
jmp
pop
popa
xor
cmp
sub
xchg
stos
adc
(bad)
xchg
dec
fdivr
push
jns
imul
mov
movs
dec
cld
outs
movs
jns
loope
nop
xchg
cmp
fwait
push
popf
fdivr
int
push
ds
(bad)
jmp
hlt
movs
popa
out
lods
test
add
cmp
dec
cmp
gs
div
mov
add
data16
test
cmp
aad
mov
pop
ret
jns
pop
jbe
nop
and
or
or
vcvttpd2dq
lea
bound
sub
jge
cmps
(bad)
imul
pop
scas
xor
pushf
rol
fadd
cmc
cwde
jmp
pop
inc
int3
or
pusha
add
xchg
cld
adc
mov
cli
pop
mov
sub
leave
int
ins
push
clc
lds
pop
jno
xchg
movs
fidiv
aam
int3
stos
mov
stos
ror
in
retf
add
mov
sbb
das
pop
inc
push
in
call
aam
push
cmps
adc
imul
inc
iret
dec
lea
data16
mov
ja
repz
lods
dec
imul
dec
outs
out
adc
xor
sub
popa
cwde
test
leave
and
xor
add
adc
(bad)
add
sub
jnp
push
loope
jg
jo
jb
out
pop
add
aas
movs
pop
xor
mov
(bad)
clc
pop
in
fldcw
dec
ret
pop
or
pop
inc
test
stc
jne
in
mov
test
int
push
sbb
xchg
sar
cmp
(bad)
push
ins
outs
ret
in
shl
scas
stc
push
out
lahf
mov
inc
or
jecxz
mov
add
mov
sub
mov
rol
mov
stos
out
sub
xor
jle
mov
xor
fcom
sub
cmp
pop
fstp
and
test
shl
sbb
mov
test
jne
in
stos
push
ds
inc
jo
push
stc
fsub
sub
(bad)
int3
lea
jge
xchg
or
sub
xor
mov
rol
outs
lods
(bad)
lahf
jmp
cmp
scas
leave
rcr
mov
mov
inc
push
xchg
jnp
daa
imul
pop
int3
xchg
cmps
mov
call
dec
lods
in
jnp
pop
cs
jbe
ins
dec
repnz
ja
mov
iret
stos
sbb
in
fst
xchg
xor
cmp
fimul
or
cmc
inc
mov
outs
fistp
mov
adc
cmp
jne
setb
pusha
icebp
and
les
ss
mov
jbe
cmc
mov
fstenv
mov
push
cmc
push
cmp
mov
(bad)
movs
and
movs
cmp
sbb
mov
cmp
add
loop
sub
outs
rcl
or
fmul
or
xor
icebp
test
jb
add
xor
and
add
call
in
xchg
movs
retf
fcmovbe
add
jge
fild
inc
jbe
adc
shl
jb
ds
mov
outs
xchg
inc
pop
add
mov
aam
pop
dec
outs
sbb
psubusw
std
retf
movs
pop
sub
test
cmp
adc
mov
shl
mov
clc
mov
fdiv
adc
jne
jnp
popa
and
mov
jae
sbb
xchg
push
sub
fstp
in
fcom
adc
cmp
sar
or
(bad)
cs
mov
adc
lods
mov
push
(bad)
mov
or
xchg
jmp
dec
xchg
mov
jl
test
and
dec
or
pusha
loop
pop
fisubr
cmp
(bad)
cmp
(bad)
cwde
leave
(bad)
aam
add
push
adc
aaa
add
add
cdq
in
mov
cmps
shl
arpl
and
add
pop
fldl2t
or
loopne
sti
sub
mov
xchg
mov
adc
push
ret
in
lds
(bad)
in
pop
lahf
bound
xchg
adc
push
pop
mov
movs
dec
push
push
imul
mov
add
pop
inc
inc
in
sub
sub
or
test
repnz
out
stos
cdq
outs
arpl
mov
mov
mov
dec
pop
mov
jecxz
pop
sub
scas
ja
fs
mov
in
(bad)
mov
jo
sub
mov
pop
dec
cwde
shl
pop
ins
dec
ror
int
neg
cmps
xchg
outs
lods
pop
jns
sbb
push
or
mov
pop
fmul
nop
cmp
mov
jle
mov
cmp
jle
xlat
call
jno
(bad)
imul
inc
push
aad
fist
(bad)
scas
cli
sub
es
and
test
or
rol
ret
mov
push
or
mov
push
ss
sub
sub
fsub
push
in
mov
movs
sub
push
add
mov
fcomp
adc
movs
xchg
(bad)
out
mov
cdq
daa
cs
movs
std
fcom
pop
movs
mov
loope
(bad)
jne
inc
sbb
adc
je
mov
inc
pusha
pusha
popa
movs
xchg
pop
push
jbe
xchg
es
and
sub
ins
push
or
push
outs
mov
add
inc
pop
add
test
xor
push
inc
inc
adc
fstp
xchg
jmp
dec
xor
ins
lds
push
das
sti
fdivr
inc
div
icebp
or
cld
aaa
push
add
rcl
(bad)
cdq
push
icebp
mov
and
in
adc
scas
push
push
call
inc
ja
pop
push
xchg
jecxz
cmp
shl
js
aaa
xchg
push
cmc
repnz
cli
inc
cmp
dec
adc
std
jbe
(bad)
(bad)
and
aad
xor
int
xlat
and
jecxz
test
sbb
push
push
xor
xor
int
mov
xor
and
dec
inc
inc
push
sar
mov
mov
dec
xlat
fstp
mov
cmps
movs
mov
cs
out
mov
aaa
push
inc
cdq
inc
enter
cmp
pmuludq
pop
shl
int3
inc
lods
add
popa
arpl
dec
into
push
jge
pop
jno
mov
(bad)
push
dec
mov
iret
sbb
jo
loopne
dec
lods
and
adc
mov
push
popa
stos
ret
imul
test
cmps
mov
shl
inc
in
and
movs
leave
cmp
fsubp
xchg
cmp
iret
mov
shl
inc
mov
xor
mov
mov
hlt
mov
xor
nop
fstp
push
push
xor
mov
dec
loopne
adc
xor
push
movs
push
icebp
mov
jbe
xchg
jns
fnsave
enter
loop
jae
mov
out
add
cmp
dec
icebp
pop
xlat
sub
xor
test
loope
loope
cmp
in
and
xchg
out
sbb
test
push
mov
mov
jp
xor
pop
rcl
xlat
xchg
adc
pop
inc
mov
fdivr
fwait
xor
jno
sub
adc
add
call
sbb
sahf
pop
xchg
inc
xor
cmp
lods
stos
movs
nop
xlat
into
in
cmp
fdivr
sub
fdiv
and
mov
ins
ret
xchg
ins
jae
push
iret
inc
sbb
cwde
xchg
in
imul
lods
ret
and
les
and
stc
pop
inc
je
je
dec
or
dec
push
aam
jmp
push
lock
cmc
mov
fdivr
push
cmp
xor
(bad)
mov
mov
fwait
iret
in
cmc
pop
int3
adc
(bad)
mov
dec
xchg
sti
test
mov
pop
inc
sub
push
mov
or
(bad)
mov
mov
dec
push
or
xor
adc
lea
jmp
pop
mov
xor
pop
es
pop
jnp
cmp
loope
aaa
sar
jb
adc
xchg
daa
sbb
and
mov
cmp
xor
xor
add
jmp
add
(bad)
mov
add
inc
out
js
cld
retf
push
xor
mov
aaa
sbb
rol
pushf
adc
out
call
cdq
xlat
push
clc
bound
movs
jecxz
mov
pop
xchg
enter
dec
ins
mov
add
push
cmps
pop
add
int
mov
fwait
or
ins
push
pop
mov
aaa
jne
mov
cdq
popf
xor
cmp
push
lods
call
out
jge
adc
inc
stc
xlat
in
push
jo
jle
test
fcmovnu
stos
int3
mov
lods
fwait
push
mov
scas
jecxz
push
fisub
cmp
jo
jb
push
mov
icebp
pushf
lock
push
ins
pop
out
mov
push
xor
imul
inc
mov
lahf
dec
aas
add
std
jns
sbb
add
scas
jb
mov
clc
(bad)
(bad)
retf
iret
outs
stos
out
aad
into
xchg
icebp
icebp
(bad)
leave
je
aam
sub
cmps
outs
pop
pop
mov
xor
or
fsub
adc
jne
in
and
dec
sti
int3
add
xchg
and
cld
pop
xchg
retf
adc
test
popa
inc
adc
jl
xor
push
inc
cmp
dec
mov
js
call
add
bound
jns
inc
enter
call
pop
mov
movs
cmc
popf
mov
fs
jno
jl
push
sub
mov
out
enter
xchg
fs
add
(bad)
fst
sar
aam
(bad)
in
xor
dec
mov
adc
push
popa
jbe
push
push
addr16
jne
in
xchg
hlt
movs
and
and
or
sub
lods
xchg
or
js
push
jns
imul
xchg
hlt
movs
and
repnz
add
je
jle
int
hlt
je
jns
or
call
pop
mov
mov
inc
adc
adc
add
xor
and
sub
sbb
leave
fistp
adc
dec
xchg
(bad)
vandnps
and
nop
into
inc
fndisi(8087
mov
jge
pop
sahf
sub
and
in
inc
adc
pop
and
(bad)
in
xchg
xchg
inc
mov
xor
movs
call
js
outs
cmp
add
ins
mov
xchg
cdq
cmp
and
dec
xor
add
xor
jge
mov
mov
jmp
clc
adc
js
je
mov
sub
stos
sub
fadd
push
dec
inc
rol
stc
add
imul
push
inc
push
mov
mov
ret
fldenv
jne
adc
dec
add
xor
and
clc
mov
cdq
hlt
ja
mov
dec
cli
xchg
fnstenv
aaa
mov
push
imul
cwde
or
lds
in
mov
fldenv
xchg
mov
cmp
adc
movs
ret
mov
or
stos
and
shr
push
cmp
clc
pop
add
out
leave
or
test
mov
mov
xchg
mov
sbb
or
inc
or
ret
std
into
in
mov
dec
push
mov
jmp
cmps
adc
jg
cmp
mov
add
int
ror
lods
xor
mov
add
cld
pop
retf
sub
loope
adc
add
pushf
not
xlat
inc
test
mov
and
push
clc
pop
mov
movs
jns
push
bndstx
bound
dec
(bad)
adc
outs
dec
inc
inc
or
mov
data16
in
sbb
test
sub
in
cmp
psrld
cmp
lods
daa
jne
(bad)
out
jo
or
inc
mov
leave
aaa
stos
nop
add
pop
jno
lea
jecxz
into
jne
and
add
data16
inc
or
test
out
pop
cli
jge
add
pop
cmp
sub
fcmovnb
pop
pop
ss
inc
fcomp
test
mov
ret
push
add
or
sbb
jge
jb
mov
ror
dec
pop
xchg
cmp
fadd
xor
jg
leave
sub
fwait
mov
sahf
aas
imul
iret
adc
jle
sbb
sbb
dec
adc
jge
out
aad
fidiv
and
sub
inc
shr
pop
stc
and
jnp
pop
test
dec
cmp
movs
adc
mov
stc
inc
cmp
out
mov
add
mov
dec
inc
mov
int3
cmp
enter
pop
sbb
aam
jb
add
and
mov
adc
xchg
or
(bad)
jb
repz
dec
push
ins
imul
mov
retf
imul
cmp
sub
mov
movs
or
add
cwde
pop
ja
arpl
cmp
push
add
inc
or
sti
and
sub
pop
add
mov
cmp
pop
or
push
ror
mov
xchg
add
fnstenv
cdq
add
and
and
ja
daa
ja
jns
cdq
mov
and
mov
ret
cs
adc
mov
mov
jae
rol
clc
pop
jmp
push
test
xchg
and
sbb
test
je
and
or
call
fiadd
xchg
jne
(bad)
push
mov
inc
jle
mov
adc
jne
aad
pop
jmp
(bad)
sub
test
das
jecxz
mov
pop
adc
iret
in
push
out
scas
jmp
xor
pop
cmp
sub
out
and
push
jp
ins
fisttp
(bad)
mov
(bad)
in
mov
xchg
std
inc
sete
push
jge
push
popf
pushf
ror
push
addr16
jno
sub
push
inc
inc
push
sbb
cwde
add
mov
imul
out
and
(bad)
pop
dec
fwait
sub
push
xor
sti
fnstenv
mov
imul
mov
xchg
adc
in
pop
add
jo
mov
and
ins
dec
adc
mov
mov
hlt
mov
jp
mov
xor
js
test
cli
cmp
sbb
cdq
mov
jge
dec
cmc
cdq
ret
leave
(bad)
out
inc
movs
xor
cmp
pop
push
aam
mov
jbe
imul
inc
pop
cmp
repz
inc
movs
xor
out
cdq
cwde
call
add
dec
jno
pop
add
or
imul
dec
pop
sub
cdq
inc
aam
hlt
in
adc
fld
mov
jne
jnp
jge
jo
sar
(bad)
fs
(bad)
rol
mov
ficom
mov
pop
push
adc
les
test
mov
mov
fild
test
(bad)
sub
repnz
sbb
inc
pop
repz
(bad)
iret
mov
inc
(bad)
hlt
mov
test
inc
cli
test
add
je
sub
fcomp
push
cmps
retf
push
dec
fld
cmp
imul
into
stos
int3
in
out
test
cmps
fcom
inc
sbb
enter
ja
mov
sbb
mov
add
je
fs
test
mov
push
fldenv
movs
mov
dec
cmp
out
fidiv
leave
adc
sbb
mov
sbb
jl
inc
fsub
call
pop
lods
adc
les
mov
add
js
inc
into
sbb
imul
fsubr
sbb
aad
fisttp
push
adc
mov
leave
cwde
pop
aad
movs
cmp
into
fcom
push
movs
xor
mov
aam
es
(bad)
pop
aad
mov
dec
sbb
adc
(bad)
push
cmp
in
je
dec
test
out
sbb
jp
and
jne
js
sub
dec
sti
mov
aad
je
movs
pop
xchg
dec
xchg
rol
sbb
adc
mov
jp
xchg
aad
mov
fisub
or
mov
stc
mov
sub
in
sbb
in
push
cmc
(bad)
addr16
aas
mov
dec
add
ds
push
jne
mov
shl
xor
pop
imul
popa
pop
ror
dec
fwait
cmps
call
mov
mov
inc
and
js
mov
cmp
mov
enter
call
mov
imul
ins
cmc
push
mov
imul
cmps
cmp
push
pushf
out
mov
lods
hlt
dec
pop
jge
in
fild
push
pop
jo
call
cmovs
outs
neg
aaa
fdiv
push
xlat
push
enter
or
test
pop
adc
pop
add
jecxz
add
pop
mov
mov
in
sub
inc
mov
fdivr
pop
clc
inc
cmovno
and
pop
mov
test
sub
mov
pop
(bad)
in
addr16
push
adc
add
jmp
cdq
movs
call
test
in
test
scas
adc
sbb
cld
movd
mulps
mov
popa
adc
clc
dec
adc
dec
outs
xor
sbb
xor
(bad)
test
scas
in
mov
mov
or
xor
dec
or
iret
add
leave
mov
lods
ror
pop
leave
ret
xor
les
repnz
dec
pop
or
adc
stos
movs
stos
xchg
or
cmp
fnstcw
mov
xchg
retf
int
daa
fs
scas
test
test
lahf
fstp
pop
push
fs
pop
xor
adc
mov
movs
stc
imul
and
sbb
xor
dec
mov
jne
cmps
adc
push
stos
stos
int3
arpl
retf
js
mov
mov
mov
scas
call
stc
jmp
sub
arpl
test
aam
hlt
push
imul
dec
out
jne
and
loop
sub
fadd
xor
xor
hlt
mov
add
and
aaa
add
mov
adc
dec
jmp
popa
inc
xor
xchg
sbb
xchg
cs
out
leave
adc
aad
or
aas
and
pop
fwait
pop
and
jge
push
pop
nop
jle
sar
mov
dec
cmp
call
inc
imul
les
push
sub
jl
dec
out
stc
jbe
icebp
cld
in
add
mov
jmp
xchg
adc
scas
inc
cmp
scas
sbb
pop
mov
lods
lock
stos
out
inc
sbb
(bad)
fdivr
or
adc
cmc
pop
push
xchg
or
and
xor
xlat
scas
aam
repnz
mov
jns
(bad)
sti
sahf
fild
inc
add
scas
test
fs
adc
cmps
mov
lds
movs
fisub
add
je
es
jae
adc
xor
and
ret
(bad)
push
mov
lahf
leave
(bad)
sahf
imul
imul
sbb
mov
gs
fsub
adc
lods
(bad)
jmp
jne
mov
mov
cwde
adc
or
hlt
mov
in
sub
int3
inc
sbb
js
icebp
xchg
xchg
inc
imul
pusha
and
(bad)
aas
mov
push
popf
xchg
out
mov
xor
xchg
iret
pop
inc
sti
dec
inc
dec
mov
push
push
push
adc
mov
in
ja
add
das
bound
movs
adc
nop
jmp
cmp
and
in
imul
xor
lods
imul
push
mov
push
xor
cmp
mov
ins
xor
aad
out
repnz
in
xor
sub
js
repnz
pop
jmp
sbb
and
dec
cdq
cdq
test
push
push
inc
or
and
imul
pop
mov
test
(bad)
imul
cmp
scas
sub
adc
adc
xchg
cli
mov
jp
push
xchg
jle
and
cmp
adc
xchg
gs
cwde
out
xor
in
in
jmp
imul
retf
pusha
mov
gs
push
les
jbe
movs
leave
ins
stc
daa
sub
test
fisub
pop
mov
lds
sub
lods
sub
test
int3
ins
xchg
aad
sub
cmp
push
arpl
mov
dec
pusha
inc
xchg
hlt
jmp
test
and
dec
dec
pop
daa
sub
neg
xchg
div
retf
ror
add
arpl
jno
adc
rcr
mov
inc
sti
xchg
ins
jne
(bad)
aas
mov
mov
xchg
test
push
daa
nop
cmp
ret
dec
jb
call
fst
xchg
add
push
in
lds
mov
pop
fsubr
movs
movs
inc
add
daa
jl
(bad)
gs
dec
push
lods
push
scas
je
cmps
mov
div
dec
mov
mov
test
xor
rcl
pop
xor
and
out
jmp
mov
das
bound
aaa
retf
and
ss
mov
sub
and
les
stos
mov
mov
add
in
out
stc
jmp
xchg
retf
mov
retf
stos
cli
and
and
push
adc
push
cs
sahf
hlt
(bad)
cmc
xor
leave
cmc
clc
std
mov
mov
in
dec
sub
jl
sub
ds
and
xchg
inc
mov
sub
test
std
lahf
pop
outs
xchg
nop
retf
(bad)
jge
dec
aad
ret
in
cmp
jmp
push
stos
lds
clc
ds
mov
retf
es
and
(bad)
fwait
popa
mov
xchg
leave
mov
jl
stos
call
repz
lds
xchg
push
xor
test
(bad)
jmp
js
sti
or
sub
mov
xchg
dec
test
in
fadd
pop
mov
outs
xor
in
xchg
pop
mov
jp
push
inc
mov
dec
xor
mov
xchg
push
(bad)
cdq
dec
and
call
fldl2t
xchg
sub
test
in
mov
xchg
inc
imul
enter
mov
es
leave
test
test
enter
js
dec
(bad)
test
inc
and
cwde
in
aad
and
push
sbb
lea
scas
mov
jb
inc
jmp
out
in
je
or
mov
fdivr
leave
data16
push
and
cld
cmps
(bad)
mov
js
jns
lds
clc
jmp
shr
in
dec
mov
mov
lds
call
mov
xchg
test
fadd
in
ret
jbe
gs
cld
push
dec
test
dec
fnsave
test
mov
imul
add
or
popa
test
enter
ins
mov
sbb
fs
mov
and
mov
std
hlt
arpl
sbb
rol
pop
xchg
data16
or
gs
sbb
pop
mov
fcom
xchg
push
sti
sbb
sbb
pusha
(bad)
sub
movs
pop
daa
dec
ficomp
mov
fldcw
imul
stc
(bad)
xchg
std
cli
loopne
sbb
or
adc
dec
lahf
push
cdq
sub
sbb
mov
pop
ins
mov
sub
mov
xlat
out
les
test
xchg
pop
mov
xor
sbb
test
test
je
push
shl
mov
pop
dec
pop
daa
jns
lahf
xor
cmp
xchg
mov
pop
xor
test
fldenv
fmul
(bad)
adc
cmp
inc
sbb
(bad)
jge
out
dec
cmp
push
cmp
push
push
sar
or
sbb
mov
data16
int
jmp
(bad)
(bad)
sub
loopne
adc
push
shl
lds
dec
or
dec
pushf
lahf
dec
mov
js
pop
(bad)
scas
jmp
add
xor
aas
les
pop
add
sub
mov
call
push
mov
enter
and
add
test
imul
pop
pop
jmp
jnp
lods
call
in
pop
mov
mov
imul
cmp
rol
leave
mov
sub
(bad)
not
lods
and
fdivr
adc
xlat
cmp
mov
jecxz
adc
cld
stc
and
push
sub
cdq
clc
or
lds
(bad)
shl
add
push
add
je
les
dec
in
cwde
leave
dec
mov
je
inc
fxtract
pop
push
xchg
hlt
div
push
pop
push
repz
movs
loope
or
fnstcw
daa
dec
sbb
add
cmp
and
dec
push
popa
inc
test
pop
fld
xor
mov
fidiv
mov
stc
and
fimul
call
sbb
and
cmc
fwait
js
adc
sbb
imul
fnstenv
test
test
adc
mov
push
push
xor
jae
ins
aad
pop
in
xlat
jns
add
aad
jne
sti
push
inc
fistp
int3
in
test
or
or
(bad)
cdq
in
bound
dec
xor
push
jmp
mov
js
sub
inc
xor
addr16
fmul
cmp
cwde
push
outs
fwait
push
in
dec
adc
jne
or
mov
call
fnstcw
ficom
mov
cmp
rol
scas
mov
push
sub
mov
mov
sbb
xor
ja
xor
fwait
test
push
shl
jno
jmp
ret
jne
mov
out
in
mov
push
test
xor
imul
int3
jl
pusha
xor
aam
push
and
dec
std
push
lods
mov
mov
sbb
popf
xchg
hlt
je
js
lods
sti
mov
fwait
xor
add
mov
mov
(bad)
xchg
cmp
mov
adc
sbb
or
lock
sub
mov
lock
push
dec
enter
mov
sub
pop
cld
fdivr
adc
or
cmp
lds
mov
imul
sbb
xor
jne
adc
repnz
mov
fdivr
(bad)
push
push
xchg
cwde
iret
stos
in
arpl
inc
test
pop
pop
enter
fs
push
and
jmp
in
loope
pop
iret
adc
test
xor
cmp
jg
mov
mov
xchg
je
loope
inc
retf
sub
mov
mov
mov
test
fdivr
jns
dec
pop
jo
push
mov
(bad)
aad
inc
ret
push
mov
jge
cld
sbb
jns
xchg
xor
sub
ja
dec
arpl
xor
call
clc
fdiv
cmc
cwde
and
and
enter
push
movs
gs
sti
xor
loop
inc
jg
(bad)
loopne
push
xor
mov
jg
out
mov
in
repnz
cmps
in
inc
cwde
inc
mov
xchg
adc
and
imul
add
push
pop
or
xchg
ja
push
pop
push
adc
xor
xchg
aam
in
pop
cmps
mov
fistp
movs
jmp
inc
push
fldcw
adc
js
jns
hlt
cmc
je
push
jne
mov
sahf
retf
sbb
sub
mov
push
xor
or
inc
enter
xor
sbb
dec
ror
scas
cmp
inc
cli
push
cmp
or
and
cmp
cmp
push
cdq
adc
mov
punpckhwd
mov
mov
int3
cli
sbb
leave
mov
push
jo
pusha
fstp
mov
xchg
dec
cwde
push
mov
mov
je
pop
aas
in
xchg
add
adc
and
xchg
rol
or
dec
icebp
movs
sbb
movs
fs
add
out
cwde
cmp
data16
mov
dec
jb
mov
add
and
or
push
loope
adc
sbb
adc
rcr
imul
pop
ins
adc
mov
stc
outs
aam
or
jbe
xor
mov
and
and
adc
pop
test
and
push
jns
test
add
fld
in
add
push
push
stos
arpl
cmc
call
cmps
or
dec
out
fnstenv
cmp
pop
fimul
pop
(bad)
mov
or
cld
mov
mov
in
in
pop
or
out
xor
add
mov
xchg
push
xor
in
out
imul
loop
daa
adc
test
sub
jmp
pop
es
call
add
movs
fisub
sub
dec
rol
mov
imul
scas
aad
lds
imul
jl
dec
retf
jne
and
out
sbb
ss
call
dec
aad
jmp
fld
push
adc
push
leave
push
inc
mov
retf
call
inc
sbb
jecxz
pop
cmc
sbb
sbb
in
pop
les
lahf
fxtract
ret
mov
mov
ins
cmp
hlt
lods
test
xor
pop
(bad)
fst
(bad)
mov
inc
retf
gs
gs
mov
(bad)
mov
cdq
fidivr
mov
movs
sbb
adc
pop
imul
cmps
movs
(bad)
repz
xor
fsubr
cwde
test
xchg
cs
mov
push
cbw
aad
gs
jecxz
sbb
stos
dec
mov
popa
lods
gs
cmp
mov
test
cmc
push
test
and
movs
inc
test
test
mov
dec
fiadd
sbb
fcom
adc
sbb
cmp
mov
or
push
adc
js
xor
stos
call
and
add
push
imul
or
pop
cmp
dec
inc
mov
sbb
adc
xchg
(bad)
jmp
movs
inc
lock
push
jl
adc
pop
fsubr
aad
movs
clc
push
xchg
mov
call
(bad)
jmp
pop
mov
and
jns
push
inc
cwde
add
mov
je
or
add
call
rcr
mov
or
mov
push
icebp
pop
cmp
cmp
(bad)
cli
sbb
xchg
(bad)
mov
dec
sbb
dec
enter
xor
jae
dec
or
jno
and
lods
sbb
aam
in
mov
aas
fdiv
(bad)
stc
jne
and
mov
jae
xchg
push
pusha
fstp
push
out
jae
pop
xor
ret
cwde
je
std
mov
mov
inc
test
jg
mov
sahf
imul
test
clc
fs
dec
push
fstp
fsubr
les
mov
shl
xchg
cld
mov
and
inc
ins
push
pop
or
test
movs
scas
mov
dec
xchg
mov
call
ror
cdq
sub
imul
fld
cmc
jge
(bad)
fstp
push
adc
mov
hlt
in
and
call
add
and
(bad)
test
add
or
imul
push
push
dec
xchg
mov
retf
mov
nop
inc
imul
adc
xchg
leave
sbb
out
jne
in
call
xor
pop
inc
mov
sahf
mov
ret
js
or
cmps
call
cdq
mov
sbb
ins
popa
dec
adc
cmp
inc
lods
mov
ins
and
inc
movs
jmp
fnstcw
ins
scas
adc
je
js
inc
popa
rol
jmp
daa
das
xor
outs
cmps
sub
pop
lds
adc
ins
out
shl
stc
or
push
dec
inc
cmc
fs
push
hlt
data16
js
xchg
movs
imul
jmp
cmc
jmp
les
and
dec
aad
cmps
ss
sub
mov
push
aad
movs
xor
and
xor
retf
fsubr
pop
mov
cli
sub
je
push
add
loope
xchg
pop
lds
test
cwde
leave
enter
mov
mov
aad
jle
popa
daa
pop
mov
(bad)
int3
mov
cmps
stos
stos
movs
iret
movs
mov
or
jne
dec
and
icebp
mov
cwde
mov
fsub
xchg
adc
xor
pusha
das
pop
and
dec
sbb
mov
test
mov
mov
jl
pop
pop
sbb
adc
add
call
push
leave
test
(bad)
out
push
mov
mov
and
add
clc
in
pop
mov
mov
cmp
leave
push
outs
dec
outs
or
sbb
push
adc
repz
xchg
das
cmp
inc
sti
mov
je
jle
mov
cmp
std
repnz
shl
push
jp
shl
cdq
ror
jne
and
aaa
sub
es
das
push
ins
jmp
sbb
stos
rcr
test
and
or
icebp
inc
mov
xor
sub
cld
idiv
popa
jmp
cdq
shr
sbb
cld
jo
and
shl
stos
and
movs
fs
out
or
das
imul
adc
xor
mov
and
inc
pop
aam
xchg
fistp
mov
ja
inc
movntps
not
popa
addr16
out
popf
call
mov
sbb
les
or
addr16
out
and
cmc
loop
stc
mov
cmp
loop
nop
mov
jnp
inc
xor
popf
fs
xor
mov
fmul
(bad)
jmp
out
std
je
imul
adc
jno
bound
pop
and
xchg
pop
fldcw
and
arpl
add
or
pop
adc
xor
xor
add
(bad)
mov
dec
dec
(bad)
stc
ins
out
loopne
les
jge
pop
mov
dec
retf
popa
and
inc
ftst
jmp
jge
shl
push
xchg
lds
je
popa
(bad)
in
add
push
xor
dec
xlat
dec
test
in
loop
and
test
pop
push
scas
in
fwait
pop
or
cli
cmc
and
js
inc
xchg
jmp
in
inc
ja
push
cdq
(bad)
mov
shr
pop
fs
lods
xchg
push
mov
xchg
cmp
popa
mov
cmc
inc
fs
mov
push
clc
arpl
push
xchg
push
and
dec
(bad)
adc
aaa
int
mov
retf
push
mov
sbb
mov
enter
stc
pop
sub
xor
adc
fstp
iret
cmp
(bad)
popa
jmp
rcr
cmps
dec
in
cmp
arpl
arpl
ficom
mov
pop
sti
stos
mov
fwait
enter
lock
outs
test
push
jno
mov
out
jmp
push
or
test
int
xchg
test
adc
pop
sbb
daa
mov
mov
fcomp
scas
rcr
mov
out
mov
jge
push
aam
mov
sub
sbb
add
movsx
sub
test
and
lods
cmp
rol
or
pop
xor
fs
sub
pop
jmp
jmp
popf
mov
fwait
adc
(bad)
pop
pop
lock
mov
xor
add
les
inc
cmp
test
mov
sbb
jmp
fidiv
data16
sbb
dec
test
stc
pop
mov
xchg
in
jnp
dec
ja
in
bound
xchg
push
popa
arpl
lahf
cdq
mov
jge
dec
sbb
push
sbb
push
(bad)
hlt
xchg
or
dec
jmp
(bad)
dec
mov
sub
imul
mov
test
div
stc
dec
aad
icebp
loop
sbb
dec
(bad)
sbb
dec
jmp
jmp
fs
xchg
or
(bad)
int
aas
dec
xlat
stos
xor
dec
iret
or
xor
(bad)
fmul
repz
hlt
nop
mov
xchg
jnp
cmp
test
movs
js
add
xchg
call
mov
mov
shl
stc
gs
sbb
push
movs
mov
pop
shl
inc
popa
push
sbb
ror
cdq
push
test
(bad)
stc
enter
inc
jmp
inc
shr
jne
int3
adc
imul
cmp
icebp
(bad)
stc
fs
mov
cmp
faddp
xchg
addr16
daa
push
cwde
adc
stc
and
aaa
aad
adc
add
add
pop
sub
in
xor
stos
mov
xchg
adc
loopne
movs
(bad)
mov
mov
xlat
mov
stos
idiv
and
xchg
stc
mov
xchg
add
ja
aad
pop
dec
sbb
mov
add
(bad)
push
test
inc
inc
fcom
sub
xor
add
jne
add
hlt
call
mov
sti
or
icebp
fild
mov
mov
test
jns
imul
test
js
(bad)
test
icebp
pop
sub
pop
clc
jmp
mov
cdq
adc
xor
cmps
mov
push
pop
sbb
sub
xchg
lock
mov
jmp
std
test
sub
push
and
ja
mov
out
or
icebp
push
inc
rcl
ins
(bad)
div
add
adc
daa
js
pop
add
jnp
les
jnp
mov
cmp
inc
ss
loop
call
fmul
inc
xchg
jns
loop
xor
mov
mov
pop
popa
push
or
inc
(bad)
pop
lahf
stc
data16
cmp
loop
mov
jno
and
fld
xchg
jg
sbb
mov
pop
cmp
inc
jp
test
ins
je
int
cmps
stos
je
pop
mov
xchg
add
clc
mov
pushf
daa
mov
push
je
xor
sbb
dec
or
bound
leave
dec
cmps
aam
imul
push
cmp
data16
push
xlat
push
and
retf
mov
or
(bad)
xchg
xor
inc
xor
sbb
push
test
jl
stos
enter
jae
adc
fmul
popa
lods
fwait
adc
mov
hlt
sbb
adc
push
test
adc
xchg
push
push
and
je
pop
(bad)
into
popf
in
pop
loop
inc
sub
fs
adc
loopne
call
in
test
sbb
aam
dec
mov
jle
lahf
fldcw
mov
mov
xor
stc
push
adc
call
sbb
sar
movs
pop
popf
cs
mov
out
out
xlat
leave
hlt
test
jmp
cmp
jl
jp
in
(bad)
sub
int3
loope
fidiv
sbb
push
mov
push
dec
fmul
movs
and
add
int
pop
loope
add
mov
push
adc
enter
out
retf
(bad)
fldcw
sbb
or
jl
(bad)
push
inc
outs
test
xor
rcl
xchg
jb
ds
cmps
(bad)
and
inc
ret
inc
sbb
adc
pop
xchg
sbb
pop
add
fld
stc
mov
out
in
xchg
enter
sbb
cmp
in
sub
xchg
jle
jmp
ss
mov
xchg
mov
mov
inc
pop
inc
cmp
jl
mov
push
aam
(bad)
pop
push
imul
mov
jmp
inc
mov
mov
add
and
xor
mov
aad
mov
sub
fsub
je
or
loopne
imul
add
mov
cmp
push
loope
or
xchg
mov
aad
icebp
in
dec
retf
daa
and
mov
ds
(bad)
fadd
jno
clc
sbb
cmps
pop
ss
add
mov
sar
xor
jmp
push
pop
cdq
jb
inc
xor
xor
jl
pop
push
cmp
nop
lahf
leave
mov
neg
bound
xor
and
mov
hlt
cld
dec
xchg
xchg
cmp
call
ret
pop
mov
cmp
push
jg
and
das
(bad)
loopne
xor
mov
inc
pop
ja
(bad)
es
sti
and
push
sub
push
movs
cli
cmc
or
mov
mov
xchg
call
neg
sub
dec
je
or
cmp
pop
stos
ss
ffree
push
inc
pop
add
movs
neg
aad
jo
sbb
mov
push
ret
in
xchg
and
cmps
retf
sub
adc
cld
inc
jbe
jne
adc
and
clc
and
dec
repnz
test
mov
leave
(bad)
pop
ret
icebp
test
mov
xor
push
adc
jl
push
out
cmp
popa
je
int3
inc
enter
xor
pop
scas
mov
movs
and
dec
lods
in
sbb
and
mov
dec
push
jnp
fdiv
outs
inc
scas
mov
je
mov
cmp
or
fcom
add
es
push
fldenv
xchg
enter
or
dec
and
mov
es
not
sahf
pusha
push
in
data16
test
add
movs
lods
pusha
xchg
cmps
add
je
lods
push
xor
shr
data16
lahf
imul
add
cmps
mov
bound
inc
retf
mov
outs
and
xchg
sub
cmovo
add
cmp
hlt
adc
mov
cmps
add
push
adc
pusha
int3
mov
loopne
mov
mul
ret
sub
sub
jmp
fild
loopne
pusha
cmps
mov
mov
mov
mov
call
jmp
jge
stos
xchg
or
inc
aad
sahf
dec
or
xor
sub
pop
loop
out
lock
xlat
adc
ds
mov
je
sub
pusha
push
in
sub
jmp
pushf
jns
loope
outs
je
movs
xor
sub
cdq
and
mov
cmp
dec
xchg
inc
mov
dec
or
dec
movs
dec
cmps
loop
aam
sar
outs
inc
mov
jo
je
or
test
xchg
fwait
adc
or
arpl
shr
ret
fmul
xor
pushf
xor
test
test
or
pop
cld
aaa
mov
pusha
xchg
mov
inc
test
pop
arpl
or
shl
and
push
xchg
xor
xchg
adc
test
mov
pop
jo
rol
imul
ja
sub
jmp
arpl
xor
je
loopne
jbe
fsubr
arpl
and
jp
adc
cmp
xchg
jmp
jecxz
jmp
inc
je
push
add
sub
fcom
pusha
and
jo
or
aam
test
lahf
popf
xor
xchg
aaa
and
out
ret
cmp
addr16
sub
xchg
jecxz
(bad)
js
mov
rol
addr16
xor
nop
push
fsub
push
arpl
cmp
add
adc
call
mov
enter
mov
xor
or
add
cld
inc
pop
call
sbb
hlt
scas
pop
xlat
repz
clc
inc
frstor
xor
xor
imul
les
in
rol
mov
popf
arpl
mov
jecxz
out
outs
pop
fwait
mov
xor
cmps
xor
inc
mov
sbb
iret
adc
mov
xchg
mov
inc
mov
adc
shr
and
arpl
fidiv
aad
xor
je
fldenv
retf
xchg
jae
xchg
stos
sbb
cld
rol
jle
push
dec
aas
fdiv
aas
mov
xlat
js
or
(bad)
xchg
(bad)
mov
xlat
adc
mov
ds
clc
test
cmp
movs
push
xor
jae
mov
nop
and
add
fsub
inc
mov
aaa
sbb
nop
sbb
repnz
adc
mov
pop
fwait
push
dec
xor
pop
jle
(bad)
adc
xchg
push
clc
clc
fucom
jo
jmp
out
lods
add
mov
xchg
jae
jae
or
repz
xor
push
jecxz
jae
and
xor
mul
mov
(bad)
jae
push
and
pop
xlat
xor
xchg
add
jae
aaa
jl
out
aas
hlt
xlat
popa
mov
xlat
mov
movs
jo
mov
cmp
adc
sbb
les
aam
fdivr
pusha
mov
js
sbb
in
leave
sti
mov
pusha
icebp
adc
pop
repz
or
mov
add
mov
xchg
jo
pause
mul
xchg
xchg
dec
push
add
arpl
xor
shl
arpl
or
jecxz
jae
jecxz
mov
movs
inc
mov
mov
lods
xchg
and
mov
rep
mov
and
jo
loopne
dec
repz
push
jae
cld
adc
dec
test
(bad)
int
das
or
push
or
dec
sub
lahf
arpl
mov
sar
jo
add
repz
repz
push
xor
int3
js
repz
cmp
stos
jae
dec
or
mov
enter
leave
mov
dec
js
mov
push
in
and
je
or
into
inc
mov
je
inc
xor
inc
add
or
(bad)
cwde
inc
or
dec
imul
sbb
inc
outs
inc
inc
mov
xchg
ret
das
mov
ret
cmp
or
mul
mov
dec
mov
(bad)
and
adc
sbb
popf
sahf
lds
xchg
pop
inc
fcom
ins
jmp
enter
inc
and
int3
and
into
inc
enter
and
cs
mov
mov
inc
iret
push
iret
push
dec
xchg
dec
xchg
adc
adc
(bad)
(bad)
mov
xchg
and
dec
cmc
mov
dec
cmp
sahf
shr
add
inc
test
or
and
int
ret
xchg
retf
movs
enter
dec
ins
aaa
clc
mov
xchg
or
aaa
and
or
fcom
pop
icebp
mov
mov
out
cmp
fimul
jle
jmp
repz
ror
mov
aam
iret
jne
push
mov
dec
inc
push
mov
mov
xchg
dec
fimul
dec
mov
or
push
inc
pop
dec
pop
xor
dec
sbb
fcmovnb
ret
fstp
cdq
dec
lfs
push
rcr
fucomp
ss
jns
mov
popa
in
sar
or
sub
mov
pop
inc
enter
push
inc
sbb
loope
(bad)
mov
(bad)
push
or
xchg
push
dec
sbb
ret
or
pop
push
or
sbb
dec
pop
fisttp
js
cwde
sbb
sbb
ret
push
pop
mov
and
(bad)
mov
pop
mov
js
mov
add
fnstsw
stc
or
jmp
push
inc
fld
std
dec
test
adc
pop
mov
mov
mov
call
or
out
cdq
rcr
call
les
fmul
xor
xor
retf
std
or
pop
imul
push
cwde
xor
outs
ror
stos
ror
pop
and
inc
test
or
(bad)
pop
out
cdq
retf
popf
cmc
or
pop
outs
xor
out
xor
dec
jecxz
adc
dec
jns
sbb
stc
inc
fsubr
loopne
pop
mov
inc
jbe
outs
stc
leave
push
retf
xchg
inc
push
fistp
pop
dec
mov
mov
mov
enter
outs
or
fist
adc
pushf
inc
pop
outs
das
lea
shl
fstp
(bad)
xlat
dec
xlat
add
int
pop
sahf
push
inc
push
out
mov
push
ret
xor
aam
test
adc
inc
fisub
mov
sbb
fld
out
push
popf
cmp
mov
int3
sub
xchg
aam
outs
popfw
lds
cli
adc
pop
or
movs
into
and
xor
int3
movs
pop
xor
and
sub
sub
scas
inc
fmul
and
or
scas
inc
bound
lods
inc
mov
pop
mov
int3
and
das
sub
movs
outs
gs
in
jno
push
and
sub
mov
into
ds
cmp
sub
sub
dec
outs
popfw
or
scas
out
jmp
imul
out
lods
or
scas
out
mov
jle
ins
test
addr16
and
mov
xchg
out
sub
(bad)
jne
and
or
add
push
jb
adc
frstor
nop
outs
xchg
pop
push
add
adc
inc
mov
sub
mov
sahf
sub
or
jecxz
dec
rcl
stc
sbb
sub
jmp
int
lods
jp
scas
sbb
mov
mov
pusha
mov
in
jmp
xor
fcmovnu
push
jle
fsubr
scas
mov
loop
std
pop
lods
out
and
ins
inc
inc
mov
sub
dec
xchg
mov
(bad)
(bad)
cs
cwde
jns
leave
jbe
dec
jecxz
jl
dec
mov
mov
push
bound
inc
xor
adc
xchg
in
(bad)
imul
mov
jmp
outs
or
sub
call
or
push
scas
ret
inc
dec
into
jns
leave
test
mov
loop
fimul
mov
je
push
mov
imul
sbb
(bad)
jmp
cmps
cmp
mov
push
ds
add
fsubr
cmp
pop
lods
stc
cmp
mov
fwait
sbb
inc
or
mov
dec
mov
lods
scas
shr
clc
loope
imul
adc
ror
sbb
mov
das
mov
inc
mov
sub
push
cmp
in
jbe
cli
fldenv
js
sahf
xor
mov
call
jle
mov
add
rcr
mov
pop
lds
jns
push
sub
push
dec
int
movs
sahf
(bad)
mov
pop
mov
fst
inc
or
lods
popf
add
(bad)
xchg
test
mov
lods
jp
ds
push
mov
mov
fistp
ins
xor
push
ss
pop
cmp
add
ss
sahf
imul
sbb
loop
dec
xor
bound
mov
popa
cmp
cld
pusha
fsub
enter
idiv
loop
pop
lods
cld
add
in
mov
or
pop
lods
(bad)
aam
mov
aaa
gs
jecxz
lods
inc
add
mov
sub
sub
aaa
fs
xchg
or
push
aaa
in
add
mov
xchg
mul
gs
cs
cmp
call
imul
mov
jle
cmps
mov
ins
data16
js
cld
xchg
ins
or
jne
je
xor
sti
cld
cmp
cmp
call
cld
pop
aaa
xchg
mov
inc
mov
add
icebp
movs
mov
xchg
ins
test
add
mov
push
mov
ds
jp
and
jae
les
jne
sahf
mov
in
dec
push
push
adc
mov
mov
sub
ins
sub
sub
in
movs
jne
sub
sub
ins
push
ins
mov
shr
in
inc
jl
add
mov
xor
mov
test
inc
ins
add
inc
and
pop
mov
mov
adc
sub
in
fucomp
xchg
sub
sub
ins
or
mov
push
push
cmp
mov
cmp
mov
mov
adc
aam
jg
pop
or
and
clc
xor
pop
gs
jge
dec
cld
add
test
lds
shl
in
xor
mov
push
stos
mov
or
test
mov
lock
addr16
push
xchg
sub
test
dec
fwait
inc
out
stc
cmp
xchg
push
loopne
out
fiadd
ins
repnz
in
in
leave
jecxz
adc
imul
fiadd
shl
(bad)
jmp
xor
mov
ret
mov
or
mov
pop
fnstcw
fwait
dec
push
stos
pop
add
je
mov
repnz
cli
or
xchg
mov
loopne
fisub
shl
in
ins
dec
test
inc
ss
adc
jnp
xchg
in
pop
adc
ret
call
icebp
lahf
mov
jge
mov
das
test
adc
and
xchg
jl
sbb
call
retf
xchg
rcl
in
shl
dec
mov
push
and
sub
and
xchg
leave
xchg
add
sbb
pop
aaa
leave
repnz
xor
mov
in
imul
int3
or
std
ret
dec
ins
inc
mov
lahf
dec
jle
push
test
sti
push
inc
cli
test
and
leave
cli
into
fsubr
mov
sbb
and
pop
mov
mov
jns
sbb
in
mov
repnz
xchg
adc
cmc
sub
xchg
in
repnz
or
fs
xchg
sub
cmp
mov
mov
lea
leave
or
test
adc
mov
jmp
push
or
sbb
inc
dec
(bad)
rol
in
or
loopne
inc
es
or
nop
out
(bad)
jle
rol
add
xor
jne
in
pop
js
xchg
mov
xchg
loop
pop
sub
ins
aad
mov
pushf
dec
lahf
mov
push
dec
adc
sar
sub
mov
adc
cli
xchg
(bad)
bound
icebp
mov
cli
mov
loope
mov
jbe
cmp
aad
retf
popf
cmp
(bad)
adc
bound
fwait
(bad)
sbb
mov
adc
pop
jne
xchg
add
push
cli
jne
adc
sub
dec
mov
push
mov
aam
xor
cmc
(bad)
je
ror
adc
stos
jne
mov
ror
aad
push
push
stos
jne
cmc
or
adc
inc
test
mov
add
dec
sub
and
pop
dec
sub
and
pop
(bad)
add
stos
in
dec
ror
or
mov
aad
or
cmc
xchg
into
adc
popf
movs
push
shl
das
adc
xor
out
cs
or
add
dec
mov
cmc
imul
dec
xor
inc
add
adc
add
imul
or
stos
adc
cmp
xor
stos
push
(bad)
jns
adc
dec
(bad)
loope
rcl
pop
and
xchg
xchg
hlt
xchg
xchg
mov
je
xchg
aad
pop
pop
hlt
mov
pop
inc
popf
push
cwde
push
pop
xchg
sbb
rcr
push
pop
cmp
popf
push
cwde
push
pop
cmp
cmp
adc
mov
mov
pop
inc
sub
xchg
sub
sbb
cmp
cmps
jge
cdq
movs
push
arpl
mov
dec
fistp
mov
jb
jmp
sbb
xchg
sbb
iret
mov
(bad)
dec
cmp
vmwrite
mov
vmwrite
cmp
iret
stc
(bad)
stc
(bad)
cmp
dec
stc
(bad)
stc
(bad)
mov
(bad)
stc
(bad)
cmp
dec
stc
(bad)
stc
(bad)
mov
vmwrite
mov
vmwrite
cmp
dec
jns
jns
mov
lock
jne
pop
and
stc
(bad)
stc
(bad)
cmp
test
mov
jae
pop
call
or
inc
int3
push
inc
mov
lods
xor
dec
iret
jmp
mov
add
stos
loop
push
xor
pop
dec
div
fnstenv
push
inc
ins
xchg
mov
ins
cmc
xlat
mov
pushf
push
push
dec
or
jl
xor
xor
sbb
jmp
push
repnz
enter
pop
aad
out
hlt
out
push
jle
push
or
(bad)
jl
mov
sub
dec
xchg
ins
xchg
dec
xchg
sub
int3
adc
sub
dec
xchg
ins
xchg
dec
xchg
sub
int3
adc
sub
dec
xchg
ins
xchg
dec
xchg
sub
int3
adc
sub
dec
xchg
ins
xchg
dec
xchg
sub
int3
adc
sub
dec
xchg
ins
xchg
dec
xchg
push
lea
daa
mov
repz
stc
inc
jp
data16
addr16
lock
jae
movs
jbe
jnp
js
std
adc
xor
adc
pop
popa
xchg
jae
jnp
popa
inc
aam
rcr
sar
xchg
pop
mov
inc
mov
out
div
in
(bad)
shr
mov
jo
fsub
loope
test
push
xchg
jbe
je
out
cmp
sbb
or
jo
je
je
lock
imul
lock
mov
ins
cmps
cs
in
sub
jo
jbe
jb
loopne
(bad)
or
cmp
scas
jl
pop
xchg
in
fld
inc
in
(bad)
sub
retf
jg
jg
mov
out
or
dec
sub
ins
sub
call
(bad)
dec
(bad)
(bad)
std
scas
arpl
adc
ret
mov
loopne
push
push
mov
nop
mov
jg
or
mov
test
xchg
mov
jg
retf
hlt
sar
fxtract
retf
aam
xor
mov
(bad)
mov
or
fisub
fimul
aam
hlt
mov
mov
cwde
shl
hlt
mov
mov
fidivr
and
pushf
rcl
out
inc
adc
xchg
mov
mov
xor
mov
(bad)
mov
pop
jg
mov
div
mov
ins
daa
mov
enter
add
inc
addr16
dec
fwait
cmp
daa
inc
jns
fdivr
call
adc
retf
jo
push
mov
xchg
hlt
mov
aam
hlt
mov
aam
sub
out
daa
sub
addr16
out
out
daa
sub
addr16
bound
xchg
mov
fdiv
daa
cmp
bound
push
and
(bad)
cld
int
jp
dec
sbb
xor
inc
es
dec
lds
inc
aaa
or
jl
sbb
in
scas
sub
and
push
inc
xor
cmp
mov
push
or
or
pop
push
or
and
inc
and
jnp
push
dec
mov
test
push
sub
add
adc
sbb
push
or
or
ins
inc
pop
daa
push
jmp
out
pushf
or
mov
pop
and
ret
outs
fldenv
mov
dec
mov
xchg
das
mov
(bad)
jle
xchg
or
mov
push
xor
les
push
rol
aas
sti
sar
imul
les
not
xchg
inc
leave
push
xchg
rcr
cs
mov
stc
inc
inc
jle
into
or
mov
div
jl
fcomi
cmp
jl
call
in
mov
xor
cmp
rol
pop
(bad)
xor
mov
fs
cld
push
test
cmp
outs
xor
lock
mov
sub
pop
xor
dec
push
fdiv
lahf
xchg
lods
nop
imul
cmp
repnz
test
xchg
mov
cmc
rcl
and
xchg
out
xchg
mov
fldenv
fcomp
das
out
mov
push
mov
sbb
xor
mov
idiv
pop
mov
push
mov
int3
hlt
xor
cmp
dec
mov
xchg
mov
mov
mov
and
mov
mov
aaa
rcr
jno
fidiv
jo
imul
js
mov
jle
fbld
cmp
or
pop
cmp
lods
ror
ror
sub
call
mov
int
ror
xchg
sub
or
mov
out
push
int
adc
jp
sub
push
cmps
test
jmp
pop
dec
sti
iret
adc
jecxz
mov
dec
scas
xchg
pop
cmc
add
enter
adc
mov
loop
mov
mov
fwait
inc
mov
in
pop
mov
mov
nop
in
push
dec
xchg
inc
das
mov
adc
pop
loop
in
es
and
push
cmps
xchg
jne
xlat
jae
das
jne
ja
xor
(bad)
nop
clc
mov
adc
inc
sub
inc
cmps
fisub
mov
in
pop
add
jne
icebp
ret
ret
lods
cmps
out
out
ja
push
lea
addr16
cwde
(bad)
and
loope
and
aas
jnp
sbb
cmp
push
cmps
adc
jns
and
xchg
cmp
xchg
mov
and
xchg
add
push
adc
push
inc
push
cmps
movs
nop
call
cmps
cmp
jbe
mov
cld
add
xchg
pusha
ss
jo
jne
mov
stc
fldcw
push
dec
or
pop
lahf
mov
add
loope
pusha
leave
jne
jns
mov
rcl
adc
fs
xchg
shl
rol
jo
mov
push
arpl
mov
adc
xor
xchg
add
loop
jo
jns
inc
retw
jo
leave
stos
bound
cmp
cmp
loope
loopne
cmc
aad
push
rol
cmc
xchg
add
(bad)
push
xchg
xor
repz
and
adc
sbb
test
push
cmc
addr16
inc
add
loopne
mov
jae
pop
inc
inc
cmp
div
jae
inc
je
and
div
movs
xor
jno
push
dec
push
dec
pop
add
inc
fiadd
es
inc
dec
sbb
and
cmps
repz
mov
dec
aam
shl
inc
xor
mov
xchg
mov
loopne
dec
ja
pop
push
fild
sbb
xchg
div
pop
push
rol
or
or
xor
js
arpl
sbb
xchg
xchg
add
iret
xchg
leave
fild
pop
cmps
pop
jg
dec
call
repz
and
add
and
sti
lods
add
ins
jmp
mov
xor
loopne
out
and
mov
jl
shl
or
add
lds
(bad)
jp
or
bound
add
pop
mov
jne
adc
syscall
xor
inc
out
and
data16
fild
pop
jecxz
ja
dec
shl
mov
mov
ret
sbb
cmps
movs
mov
icebp
push
inc
mov
test
mov
shl
outs
mov
dec
jo
fiadd
push
adc
jl
and
xor
test
ja
(bad)
repnz
lds
mov
test
mov
pop
or
jae
inc
aam
cmps
jmp
inc
xchg
pop
popf
shl
cli
movs
jmp
xor
and
adc
ret
push
sbb
add
vpcmpistri
push
and
movs
out
push
adc
dec
lods
cld
and
add
pop
inc
jo
addr16
movs
adc
shl
cld
and
and
scas
ja
es
xchg
jb
push
shr
jmp
cmps
add
or
in
jecxz
push
push
mov
fiadd
ins
jecxz
fs
ss
movs
mov
pop
pop
shl
xlat
adc
mov
in
jmp
mov
sbb
mov
nop
sub
imul
daa
repnz
fidiv
ins
mov
xchg
xor
xor
les
sub
xor
clc
xor
adc
icebp
pop
xchg
cmp
pop
jecxz
hlt
fcom
or
xchg
adc
(bad)
(bad)
enter
mov
sbb
ficom
fcomp
mov
pop
dec
sbb
cwde
sub
xlat
icebp
idiv
xchg
dec
mov
inc
dec
stos
(bad)
add
xor
xchg
push
push
pusha
cmp
enter
leave
mov
sub
call
mov
enter
iret
test
xor
add
fstp
xlat
rcl
adc
in
cmp
xor
cmp
cmps
popa
movs
fidivr
test
adc
mov
pop
xor
fcmove
pop
icebp
cmp
cdq
sar
clc
add
cmp
test
cld
rcr
cmp
test
sub
fdiv
add
(bad)
ficomp
and
jmp
mov
cwde
js
mov
fcmovnb
repnz
ror
test
mov
rcl
aas
mov
dec
push
int3
inc
pop
adc
retf
(bad)
aam
xchg
dec
dec
jmp
lea
ficom
(bad)
int
addr16
jl
mov
ins
int
ror
cmp
(bad)
ss
mov
not
scas
inc
(bad)
lea
retf
dec
dec
fwait
cmps
stos
repz
lods
in
sub
lds
mov
dec
mov
xchg
int
idiv
fsubr
loope
mov
pop
mov
ins
mov
jns
ficomp
lods
jnp
sar
fcmovnbe
repz
int3
fld
cmp
daa
mov
out
int
popf
mov
icebp
push
lods
mov
lods
lahf
lods
gs
cmp
or
cmp
add
pop
pop
jmp
or
into
(bad)
fsub
mov
sbb
loopne
ins
jnp
jmp
add
jle
and
ror
sub
sahf
ins
pop
xchg
fwait
retf
bound
cli
cmp
es
mov
iret
mov
add
ins
mov
sub
sbb
les
pop
mov
sub
dec
dec
cmp
mov
arpl
ret
cmp
dec
xor
in
popf
xor
ins
imul
cli
xchg
leave
mov
sub
loop
out
mov
ror
mov
jns
or
inc
adc
in
mov
cmp
inc
xchg
dec
js
xchg
iret
mov
test
dec
xchg
push
add
sub
add
enter
adc
mov
es
xchg
dec
lods
rcl
mov
pop
in
dec
shr
jb
cmps
gs
jb
xor
or
push
mov
jae
ror
mov
das
and
xor
dec
popa
test
out
call
jb
dec
sub
push
adc
xor
mov
jns
imul
sbb
pop
lods
cmc
shr
ret
push
jge
stc
dec
test
mov
push
inc
jb
xor
out
and
fcomp
ins
xor
shl
mov
scas
mov
hlt
xchg
push
sti
sub
outs
rcr
xor
or
mov
xchg
popa
xchg
lds
add
inc
inc
ss
push
dec
cmp
mov
ins
enter
cmp
inc
movs
mov
fild
mov
in
(bad)
fist
jp
or
mov
sbb
sub
lahf
or
dec
pop
fcmovnb
pop
push
test
xor
xchg
or
pop
fwait
pop
xchg
mov
add
add
retf
jge
sbb
ret
inc
je
aam
jae
inc
es
xchg
xlat
ror
xchg
repnz
or
xchg
mov
xchg
or
loope
push
in
outs
rep
push
mov
fidivr
mov
pop
cli
daa
das
mov
mov
ficom
or
int3
lea
or
push
xor
jne
in
(bad)
mov
xchg
sub
add
in
inc
jp
push
adc
and
or
call
push
cwde
jne
xchg
cli
outs
jo
je
aas
test
jmp
ins
xlat
ds
fidivr
mov
mov
pop
and
or
jae
cmc
mov
xor
push
dec
ror
adc
mov
mov
or
daa
jno
lea
cmp
sbb
pop
jb
adc
fcomip
jmp
(bad)
jae
sub
loopne
(bad)
jnp
xor
push
jo
mov
rcr
xchg
xor
jmp
popa
aaa
push
in
inc
mov
nop
sub
xor
sti
cmp
mov
inc
xor
add
xor
nop
in
(bad)
rcl
xchg
das
mov
js
(bad)
mov
ret
xor
push
ja
(bad)
aad
adc
mov
mov
add
ss
mov
cdq
aam
push
pop
test
pop
test
es
callw
pop
mov
xor
fld
add
cmp
inc
and
jmp
jg
xor
mov
xchg
sub
loope
test
inc
mov
pop
aad
push
dec
(bad)
out
lods
inc
inc
and
jae
push
xchg
add
push
inc
xor
aas
ret
bound
inc
push
retf
int
inc
cmp
mov
cli
cmps
rol
push
and
shl
mov
cmp
sub
movs
adc
xor
pop
(bad)
repnz
xchg
mov
xor
mov
mov
cli
adc
xchg
add
push
hlt
or
jg
xor
stc
push
mov
shl
xor
movs
jge
lock
or
cmp
jno
jnp
cmps
adc
hlt
test
push
mov
xor
sub
(bad)
cld
sub
cmp
sbb
pop
(bad)
jns
pop
add
test
xor
mov
aam
adc
hlt
and
push
lods
add
mov
xchg
cs
ds
ss
or
xlat
dec
test
test
dec
add
push
mov
pusha
(bad)
xchg
nop
xchg
xor
aam
add
add
les
cwde
cmp
add
sbb
inc
mov
add
aaa
call
mov
sti
call
add
pop
pushf
imul
or
clc
les
adc
hlt
mov
movs
mov
mov
inc
sub
xchg
int3
adc
push
jnp
stc
add
movs
cmp
pop
movs
sub
scas
add
aam
mov
inc
pop
les
cmovs
xor
repnz
cwde
cmp
and
jae
add
xchg
sar
push
sbb
xor
fs
push
pop
jno
xchg
mov
mov
and
ret
or
sbb
mov
int
cmc
jmp
ja
add
xchg
mov
mov
or
xor
scas
mov
in
push
pop
xor
outs
xchg
cmps
call
pop
fdivr
retf
ret
cdq
xchg
stc
and
stc
icebp
call
push
hlt
aad
fld
sub
and
pop
je
std
lods
shl
jae
sar
jb
push
pop
mov
ins
dec
dec
sub
add
neg
jae
cmc
stc
xchg
adc
lods
int3
arpl
cmp
je
cmc
imul
dec
ret
mov
sub
int
stos
shl
bound
xor
sub
and
mov
cmp
sub
ins
je
repnz
xchg
test
cli
inc
jl
ins
jl
repnz
out
leave
hlt
cmp
jb
and
stos
aad
xchg
lea
jne
mov
cmp
lods
sbb
cld
inc
or
inc
or
popa
xor
dec
push
mov
xchg
dec
daa
inc
pop
jns
or
scas
mov
and
and
and
inc
dec
les
xor
mov
xchg
push
fstp
jne
sbb
rol
jle
sub
mov
popa
cmc
pop
and
push
mov
les
ret
xchg
test
shl
loope
call
mov
fisubr
loop
lahf
push
and
sbb
out
popa
arpl
mov
push
aam
test
int
mov
mov
inc
sub
ins
sahf
scas
(bad)
fwait
sti
pop
ja
shr
into
fisttp
mul
lar
dec
inc
pusha
inc
add
inc
dec
and
hlt
or
mov
xchg
mov
cmp
xchg
xor
add
(bad)
in
jbe
push
mov
mov
or
cld
cmc
or
sub
out
out
es
sti
fild
adc
push
sbb
mov
out
scas
rcl
fmul
fmul
sbb
fild
push
pushf
in
call
inc
xchg
jb
loope
lahf
clc
lahf
mov
and
daa
mov
cld
sub
sar
push
or
adc
test
xchg
sbb
push
xchg
inc
mov
add
adc
pusha
inc
bound
mov
(bad)
(bad)
ds
push
arpl
loope
jmp
jbe
sbb
lahf
fwait
nop
repnz
(bad)
js
inc
das
mov
mov
out
mov
pop
or
xor
nop
pop
xchg
mov
lock
mov
xchg
jg
in
cmps
mov
dec
jl
adc
test
add
xor
fs
pop
aaa
ret
push
dec
sti
(bad)
data16
fdiv
retf
dec
dec
daa
jle
xor
inc
sbb
mov
aam
fsub
fist
mov
pop
movs
adc
ss
jne
jae
push
mov
jge
cli
(bad)
icebp
fcomp
inc
cmp
lea
pop
leave
pop
loope
pop
adc
add
jg
push
aam
movs
stos
dec
mov
add
xchg
dec
inc
in
shl
xchg
in
push
xchg
imul
fnsave
push
add
fwait
ja
and
aam
retf
xor
xchg
jae
data16
lds
mov
or
arpl
and
sbb
mov
in
dec
pop
mov
inc
(bad)
into
outs
sahf
aas
cs
(bad)
pop
mov
mov
xor
fs
mov
stos
xchg
sbb
outs
pop
adc
ins
mov
test
pushf
push
pushf
mov
aad
mov
int
push
jns
repnz
adc
add
mov
mov
ins
sbb
mov
adc
sbb
cmp
mov
cmp
pop
push
cwde
clc
inc
push
dec
pop
aaa
adc
stos
cmc
or
push
sub
adc
cmp
leave
sbb
push
cwde
add
inc
mov
dec
cmp
dec
jbe
lea
lahf
aam
stc
adc
scas
mov
xchg
and
imul
mov
jmp
movs
mov
cdq
imul
pop
aad
int3
stc
jle
movs
or
jmp
dec
jmp
loope
fisubr
ja
mov
test
jmp
gs
js
cmc
add
xlat
retf
test
mov
out
push
xchg
cmps
mov
jo
mov
push
xor
stos
call
fwait
rol
xchg
and
dec
push
cmps
in
dec
inc
mov
fstp
sar
sub
xor
(bad)
je
aaa
loop
pop
or
cmps
pop
(bad)
jle
jo
jns
mov
les
sbb
cmp
mov
sbb
aas
jbe
mov
and
retf
or
js
and
emms
adc
imul
jmp
out
movs
in
retf
jns
xchg
adc
outs
xchg
add
dec
sub
jbe
ds
in
mov
mov
pop
cmp
jb
fnsave
mov
or
int
js
jmp
mov
mov
call
aam
scas
movs
je
xor
hlt
(bad)
test
jecxz
sbb
dec
push
pop
pop
add
leave
push
add
adc
push
es
cmps
and
in
mov
cmp
inc
stc
test
mov
(bad)
jp
cmp
xor
mov
push
rcr
mov
imul
xchg
mov
inc
and
dec
adc
jns
xchg
mov
into
inc
adc
dec
enter
aad
jbe
or
mov
enter
cmp
ss
sub
inc
test
mov
mov
movs
mov
(bad)
pop
test
push
sbb
scas
jmp
fld
sti
(bad)
lods
loopne
div
xor
fnstenv
lds
ja
ficomp
xchg
imul
jl
scas
add
mov
test
sub
cs
sbb
stc
xlat
adc
fwait
adc
(bad)
push
sbb
fisubr
pop
dec
je
push
xor
aas
bound
stc
lock
push
push
jnp
data16
adc
or
(bad)
call
dec
out
push
pusha
repz
scas
xor
idiv
jns
and
mov
clc
ds
movs
sti
cmp
xchg
test
add
and
ds
or
or
cmc
mov
cs
test
lahf
aaa
mov
add
xchg
mov
ret
mov
popa
add
cmps
sbb
pop
retf
pop
mov
push
push
mov
mov
add
mov
in
jae
xchg
out
fstp
xchg
cmp
stos
cmc
jb
aam
fwait
cmp
outs
ror
ins
imul
bound
out
scas
sub
cmps
adc
jge
pop
sub
into
xchg
bts
cmp
dec
sub
jmp
out
clc
cmps
adc
xor
xchg
(bad)
imul
icebp
fwait
mov
push
pop
add
je
or
xchg
pop
mov
push
dec
adc
cmc
mov
xchg
int
jl
push
xor
cmp
push
dec
inc
add
movs
ins
xchg
(bad)
sub
mov
cmp
fwait
daa
push
jp
fnsave
dec
sbb
sub
(bad)
hlt
cmp
xor
and
bound
rol
jbe
(bad)
fdiv
dec
dec
mov
add
or
cmp
test
out
xor
xchg
xchg
mov
mov
fsubr
outs
or
push
movs
push
cdq
clc
(bad)
dec
or
mov
mov
add
or
push
rcl
mov
ds
push
sbb
jle
add
sub
pop
das
mov
gs
xchg
mov
sahf
pushf
cmps
clc
mov
push
ret
data16
cld
loope
popf
cmp
hlt
aad
push
mov
imul
push
sbb
or
dec
sub
test
and
pop
shr
cld
mov
ficomp
jg
and
pop
adc
movs
shl
icebp
jns
lods
pop
fst
jge
jg
cmp
dec
pop
dec
and
(bad)
add
cmp
das
jo
aas
sub
pop
jl
ds
xor
pop
aas
lods
ds
stc
clc
sbb
xlat
xor
sbb
adc
inc
int
dec
cmp
xor
sbb
bound
add
clc
cmp
add
xor
push
lods
cmps
test
aaa
inc
sbb
jl
jnp
jle
dec
cmp
cmp
sbb
fnstcw
add
sbb
inc
pop
(bad)
loop
mov
add
add
cmp
sbb
int3
jnp
mov
add
add
cmp
or
iret
shl
adc
aas
movs
jmp
add
add
add
jo
aas
cld
jnp
scas
and
dec
cmp
inc
rcr
std
sbb
cmp
inc
and
mov
jne
and
cmp
add
add
int3
imul
cmp
dec
loopne
aas
xlat
cmc
outs
mov
add
add
dec
xor
aaa
mov
dec
cmp
dec
nop
sbb
int
test
cmp
dec
lock
xchg
add
dec
cmp
dec
push
push
aas
or
daa
mov
add
add
mov
xor
inc
scas
inc
cmp
push
add
aas
sub
inc
cmp
push
pusha
pop
aas
dec
and
loope
mov
add
inc
rcl
cmp
or
adc
aas
jmp
ror
add
sub
(bad)
mov
xchg
dec
cmp
cs
xor
cmp
das
cwde
and
fcmove
and
add
add
xor
and
lods
mov
adc
add
shl
lock
nop
and
cmp
xor
and
mov
and
cmp
xor
and
repz
adc
out
inc
cmp
xor
mov
jne
inc
cmp
ss
aas
ins
mov
push
fld
xor
dec
aaa
fsub
aas
sub
cmps
push
mov
add
jne
or
aas
mov
and
and
cmp
add
aas
hlt
pop
js
jns
inc
cmp
cmp
aas
bound
ficomp
add
aam
nop
and
jne
in
jecxz
inc
cmp
cmp
mov
fdiv
adc
lock
add
inc
sub
ss
cmp
aas
and
aas
hlt
daa
pushf
xchg
loope
inc
cmp
inc
dec
and
xor
push
test
add
aas
jne
jge
add
dec
cmp
inc
test
aas
sub
aaa
cmp
inc
fsub
aas
sbb
cmp
add
add
push
lods
popf
retf
or
add
add
xor
xor
xor
dec
pusha
and
push
cmp
add
nop
and
loope
fsubr
add
add
test
cmp
dec
call
jnp
cmp
cmp
dec
sbb
push
ja
dec
cmp
dec
dec
and
sub
add
add
js
aas
cmp
inc
repnz
push
mov
or
cmp
add
xor
cmp
fs
cmp
push
add
aas
jle
dec
jl
or
xor
es
push
les
cmp
push
pop
es
repz
ret
dec
inc
cmp
pop
mov
aas
push
sbb
dec
cmp
pop
mov
addr16
cmp
pop
call
inc
repnz
cmp
ror
pop
mov
movs
retf
add
add
rcr
push
mov
ins
mov
add
mov
popf
fwait
loope
sub
aam
push
mov
movs
shl
pop
push
mov
sbb
dec
mov
aad
push
mov
into
fs
mov
(bad)
call
adc
sbb
mov
(bad)
iret
adc
jno
pushf
xor
xlat
lahf
adc
(bad)
push
test
add
outs
adc
out
and
add
add
aas
adc
mov
stos
inc
mov
fstp
adc
ss
dec
mov
(bad)
adc
dec
xchg
pushf
cmp
inc
mov
fidivr
xor
inc
test
add
add
(bad)
adc
xor
jne
inc
retf
adc
add
add
fcomp
mov
pop
sti
clc
mov
fsubr
adc
repz
mov
add
add
call
mov
pop
ret
add
add
repz
mov
scas
adc
popf
fmul
add
add
mov
cmp
dec
ds
fisttp
mov
(bad)
add
pop
adc
sub
mov
loope
adc
jl
sbb
test
mov
inc
jge
pop
inc
mov
loop
adc
mov
mov
loop
adc
icebp
adc
add
add
adc
xchg
mov
jecxz
adc
jmp
add
fist
mov
loopne
dec
mov
in
adc
(bad)
mov
in
adc
div
add
add
dec
adc
ret
test
mov
out
adc
imul
add
out
adc
jl
xor
out
adc
add
adc
add
add
(bad)
adc
sbb
xor
add
add
int
jmp
add
cmp
aas
adc
mov
cs
jmp
jle
cld
jae
xor
add
add
retf
in
add
add
mov
pop
movsx
dec
dec
mov
(bad)
dec
mov
xor
sub
xlat
lahf
push
mov
std
inc
sti
mov
fdivr
push
mov
retf
mov
(bad)
or
xor
iret
stc
mov
ficomp
test
mov
mov
fstp
or
ins
or
cmp
(bad)
or
xchg
ffreep
scas
xchg
dec
mov
fdivr
mov
cmp
add
fstp
or
lahf
fwait
lods
xor
cmp
fidivr
(bad)
rcr
add
add
cmps
and
or
mov
loopne
or
add
sub
mov
scas
repnz
mov
mov
loop
or
mov
add
loopne
dec
mov
(bad)
mov
add
inc
clc
mov
std
mov
add
mov
aas
or
push
add
pop
in
or
jo
dec
mov
out
or
xchg
js
mov
out
or
sbb
add
js
sbb
mov
call
popf
(bad)
jbe
sbb
add
add
call
push
cwde
fisttp
xor
jmp
mov
push
shl
add
add
pop
push
mov
out
dec
mov
jmp
add
or
ror
add
jmp
add
stc
(bad)
xor
in
aas
add
push
scas
movs
and
add
add
fild
fmul
cmp
in
in
jg
mov
add
daa
mov
out
aas
add
adc
ds
out
fild
mov
lods
jbe
mov
out
jg
mov
xchg
push
daa
mov
lock
add
mov
sub
lock
push
inc
fiadd
add
jl
pop
add
in
inc
mov
repnz
mov
or
dec
mov
repnz
add
mov
add
push
repz
add
add
mov
repz
mov
mov
add
and
lahf
add
fdiv
add
sub
stc
xchg
dec
mov
jmp
mov
add
add
(bad)
(bad)
mov
xor
mov
in
aas
(bad)
mov
push
mov
add
std
mov
loopne
cmp
inc
out
mov
mov
cmp
mov
out
aas
cld
mov
daa
mov
mov
out
jg
mov
int
inc
mov
lock
mov
mov
icebp
(bad)
stc
mov
inc
call
add
aas
stc
mov
mov
add
and
jg
mov
(bad)
repz
mov
repz
ror
add
add
pop
je
xlat
push
dec
mov
cmc
aas
idiv
retf
sub
add
add
cmc
mov
mov
iret
test
mov
idiv
hlt
mov
sub
add
cmp
aas
hlt
mov
aas
adc
add
add
idiv
mov
fldl2t
inc
mov
clc
mov
mov
shr
add
add
stc
push
mov
pop
push
pop
mov
stc
aas
icebp
mov
adc
cmp
add
add
jg
mov
or
sub
add
add
jg
mov
pop
and
sbb
jg
mov
call
adc
(bad)
in
mov
jo
aaa
mov
idiv
mov
sti
xor
clc
(bad)
jmp
cmps
out
dec
mov
stc
jg
mov
lock
add
push
dec
jmp
xor
sti
jg
mov
shr
pop
mov
sti
jmp
mov
cmp
cld
jmp
mov
xor
inc
mov
cld
jg
mov
stos
sahf
cmp
cli
(bad)
fistp
push
fistp
mov
sti
(bad)
fdivr
cmp
add
cmp
fnstcw
mov
add
call
mov
mov
add
lock
call
mov
cmp
ss
(bad)
call
mov
out
inc
mov
(bad)
dec
mov
push
push
cmp
(bad)
inc
mov
loope
inc
mov
(bad)
inc
mov
shl
add
add
push
or
add
add
or
mov
mov
mov
push
mov
les
out
push
fs
cmps
ret
jns
arpl
mov
inc
cs
mov
add
lock
xor
push
lock
mov
mov
cmp
xor
sub
aas
pop
or
adc
call
outs
leave
ja
sbb
nop
mov
mov
lock
gs
movs
loop
lea
neg
sub
lock
es
loop
xchg
mov
xchg
aas
inc
cmp
repz
retf
lock
xor
dec
xchg
cmp
mov
ins
pop
mov
aas
or
dec
cmps
cwde
cmp
inc
jb
xchg
int3
lock
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
aas
push
jnp
daa
pop
cmp
sbb
(bad)
scas
data16
lock
jnp
dec
(bad)
in
fwait
imul
icebp
aas
cmp
xchg
mov
mov
movs
ins
mov
mov
mov
call
call
movs
enter
aas
or
cmp
jge
mov
mov
mov
jmp
aas
imul
shl
adc
jmp
mov
dec
jnp
pop
mov
pop
add
loopne
icebp
aas
pop
imul
xor
stos
mov
icebp
aas
cmp
mov
cmp
frndint
and
icebp
aas
mov
xchg
mov
cmp
repnz
xchg
test
jne
lea
fdivr
dec
pop
repnz
in
movs
xchg
xchg
jle
cmp
jne
jp
repnz
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
repnz
movs
hlt
hlt
mov
fnstsw
inc
imul
fldl2t
inc
cdq
xor
cmc
loope
test
aas
jge
aas
mov
dec
call
sahf
repnz
push
adc
cmp
(bad)
sar
repnz
mov
or
or
in
test
repnz
aam
fist
nop
cmp
das
ds
and
inc
bswap
jno
adc
push
repz
in
xor
push
xchg
fmul
and
aas
jl
sbb
call
fs
cmp
aas
movs
pop
test
daa
xchg
cmp
lahf
xchg
pop
lds
aas
sub
pop
out
pop
mov
jno
aas
loope
inc
mov
data16
aas
mov
xchg
sahf
mov
(bad)
popa
(bad)
ss
mov
sub
sub
clc
call
dec
cmps
fdivp
aas
mov
fimul
add
cli
repz
repz
push
stc
and
xchg
mov
or
hlt
aas
js
xor
repz
mov
cmc
xor
aas
cwde
jns
jecxz
mov
aas
iret
sub
jp
dec
cmp
add
aas
jbe
ror
pushf
cmp
cmp
mov
xchg
aas
lock
cmp
rcl
lock
shl
(bad)
retf
cdq
cmp
sub
aad
mov
in
scas
xchg
inc
jge
or
fdiv
aas
xor
mov
cmps
sub
jbe
stc
hlt
aas
jecxz
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
sub
sbb
setb
movs
push
cmc
aas
call
mov
inc
outs
cmc
aas
lods
xchg
sbb
cmp
(bad)
xchg
aam
(bad)
cmc
aas
out
call
push
dec
fld
stos
cmc
aas
lods
inc
inc
add
mov
pop
mov
leave
cmc
aas
mov
dec
cmp
dec
and
aas
pop
out
xor
cmps
fwait
cmp
fdiv
loope
idiv
inc
ficom
inc
loop
mov
jle
idiv
xchg
mov
jle
adc
inc
inc
idiv
xor
mov
(bad)
idiv
xor
xchg
mov
mov
push
xor
inc
scas
cmp
int
jg
sahf
mov
mov
xor
fwait
mov
adc
idiv
or
jmp
mov
das
sbb
mov
idiv
stos
mov
cmp
push
stc
jge
idiv
test
and
je
in
call
cdq
jp
xchg
cmp
aad
ins
fldcw
inc
push
jmp
idiv
shr
push
pop
and
mov
imul
cwde
cmp
add
jae
mov
add
ja
test
shl
aad
push
ror
cmp
dec
iret
ss
aas
jle
adc
cmp
sbb
push
daa
add
aas
sub
xchg
mov
mov
adc
mov
sbb
aas
sti
int
mov
in
xchg
inc
fldcw
aas
mov
(bad)
lahf
mov
(bad)
mov
aas
cmp
cdq
cmp
mov
clc
aas
es
xchg
jmp
mov
xor
clc
aas
stos
jecxz
xor
jo
ss
cdq
scas
icebp
clc
aas
ins
xchg
jecxz
adc
test
call
aas
and
popf
mov
aaa
aaa
stc
aas
mov
pop
addr16
inc
pop
stc
aas
cmp
movs
xchg
jl
jbe
push
dec
ficomp
rol
popf
mov
icebp
mov
into
xchg
mov
lock
aas
mov
jl
cmp
and
sbb
stc
aas
outs
dec
out
retf
cmp
in
jnp
or
aas
xor
sbb
dec
pop
xchg
mov
fwait
xor
aas
stos
fdivr
xor
mov
push
cli
aas
loope
(bad)
fld
popf
mov
sahf
jns
aas
(bad)
arpl
retf
fwait
cmp
std
jns
imul
push
leave
cli
nop
cmp
repz
shr
xor
(bad)
mov
lahf
call
pop
xor
mov
lea
pop
push
sti
aas
and
or
mov
mov
xlat
test
pop
and
pop
in
jb
sti
aas
jecxz
mov
mov
jbe
sti
aas
cmp
mov
mov
sti
aas
sub
cld
sahf
mov
push
int3
sti
aas
test
cmp
xlat
pop
ret
aas
jb
imul
std
sahf
mov
fwait
sbb
aas
fisttp
mov
cmp
inc
cld
aas
or
and
inc
fwait
cmp
rcl
icebp
addr16
aas
lods
cmp
dec
xchg
cmp
out
xchg
ins
(bad)
cld
aas
inc
pop
or
jno
imul
jmp
cmp
ret
pop
push
or
cld
aas
jb
adc
lea
pop
std
aas
pushf
jp
inc
aaa
mov
or
aas
ja
popf
jno
dec
popf
mov
sbb
aas
push
aaa
pop
xlat
add
cmp
leave
push
jecxz
std
aas
call
push
xchg
mov
out
std
aas
xor
pushf
cmp
mov
repz
std
aas
ret
js
ficom
xor
dec
sbb
movs
xchg
mov
inc
es
aas
xchg
adc
and
aas
mov
cs
(bad)
aas
(bad)
int3
test
cmp
dec
(bad)
sti
push
jp
aas
loope
or
and
xchg
cmp
nop
movs
mov
xchg
sub
icebp
mov
dec
iret
(bad)
aas
mov
pushf
mov
sbb
(bad)
aas
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
cmp
inc
outs
pop
jbe
(bad)
aas
mov
cdq
cmp
mov
(bad)
aas
or
popf
mov
shl
repz
dec
xchg
jno
sub
sar
aas
out
gs
je
bound
add
add
add
inc
add
add
add
cmp
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
aas
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
addr16
jg
push
aas
mov
imul
mov
aas
mov
cmp
mov
cli
inc
out
add
add
(bad)
(bad)
(bad)
inc
add
inc
inc
adc
add
add
lock
add
add
add
jg
add
add
add
inc
add
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
adc
add
add
add
clc
inc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
clc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
(bad)
jg
cmp
inc
out
xor
xchg
push
repz
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
lds
aas
adc
and
(bad)
dec
mov
lds
mov
push
push
aad
push
jp
cwde
cdq
cdq
leave
aas
sbb
add
add
loopne
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
add
lods
jmp
add
add
add
aas
add
add
add
aas
add
add
add
jmp
repnz
cwde
jmp
cwde
jmp
inc
jmp
inc
jmp
in
jmp
add
in
jmp
add
call
add
add
add
aas
add
add
add
aas
add
add
add
call
add
cli
call
add
lods
call
add
lods
call
add
(bad)
call
add
(bad)
call
add
sbb
aas
add
add
add
call
add
shl
aas
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
jecxz
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
add
add
add
test
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
cmp
test
(bad)
aas
adc
mov
leave
fidivr
add
fwait
jp
aas
xlat
out
daa
fldcw
and
add
ret
cmps
aas
shl
test
pop
cmp
xor
aas
inc
inc
mov
cmp
pop
inc
mov
rcl
rol
inc
cmp
mov
mov
inc
push
push
cmp
cmp
ins
xchg
mov
dec
jns
ds
pop
and
(bad)
aas
inc
cmp
cmp
sahf
xlat
sar
dec
js
and
or
cdq
ret
or
jns
dec
cmp
jb
dec
les
mov
sub
idiv
jbe
add
aas
in
(bad)
xlat
push
xor
or
out
and
add
mov
(bad)
xor
aas
cmp
mov
retf
sub
jmp
aaa
cmp
test
ds
xchg
into
aas
sbb
xchg
and
cmp
fdiv
and
iret
pop
aaa
cmp
add
sar
inc
or
out
xor
cmp
sbb
sar
mov
or
sbb
cmp
sub
test
cmp
loop
sar
ret
adc
and
add
push
sbb
sar
add
add
ret
aam
(bad)
int
or
cmp
sbb
pushf
or
cmp
sbb
pop
cli
mov
clc
dec
and
test
aas
sbb
mov
das
jb
cmp
sbb
aas
shl
(bad)
xor
mov
xlat
aas
mov
inc
addr16
scas
aas
cmp
rcr
push
pop
data16
cmp
add
fnstcw
inc
imul
push
fnstcw
pop
inc
repnz
add
fidivr
adc
adc
xchg
inc
fstp
(bad)
mov
xor
cmp
add
daa
sahf
int
fstp
push
fwait
xchg
outs
mov
cmp
mov
fdivr
ret
call
add
push
fnstsw
(bad)
cmove
sub
cmp
stos
aam
aas
std
sbb
sub
add
fidivr
mov
mov
cs
movups
aas
fdiv
aaa
popf
ja
sub
add
fistp
ins
(bad)
push
adc
ror
movs
and
dec
ins
sub
cmp
push
jb
aas
mov
loop
cmp
push
mov
rcr
dec
cs
jmp
loope
out
sub
adc
xor
aas
ret
shl
cmp
mov
loope
push
sub
add
outs
addr16
loope
stos
cmp
add
aas
jnp
dec
outs
push
cld
adc
sahf
ja
aas
jns
xor
cmp
sub
shl
mov
cmp
or
xor
pop
jecxz
xor
bound
fwait
xor
or
xor
cld
xchg
inc
sbb
fld
jecxz
mov
mov
fist
sbb
fsub
aas
ds
test
int
sub
iret
sbb
aas
test
push
mov
add
inc
iret
pop
arpl
aas
lods
retf
aad
sub
add
(bad)
call
test
xchg
test
ins
js
shr
in
and
xor
shl
es
sub
aas
leave
mov
push
add
sbb
xchg
ins
in
sahf
outs
shr
add
pop
push
stos
in
cli
arpl
jp
aad
add
and
sub
aas
mov
add
cmp
inc
cs
xor
xchg
push
repz
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
rcr
add
add
add
fstp
adc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
cmp
(bad)
jg
add
cmp
(bad)
jg
js
push
adc
pop
mov
pop
xor
pop
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
into
xchg
(bad)
adc
xor
or
xor
rcl
xchg
fadd
push
aas
neg
push
inc
xor
jp
mov
ins
jp
aas
add
in
test
jl
sbb
push
sub
add
fidiv
add
imul
add
xchg
aas
sbb
cld
cmp
ficomp
sahf
rcr
xor
neg
lods
mov
or
sbb
idiv
mov
icebp
bound
or
push
pop
cmps
aas
fist
sbb
mov
xchg
ror
push
shl
cmp
xor
lods
aas
pop
inc
fprem
fstp
cmp
adc
mov
jbe
scas
sub
pusha
icebp
in
pop
pushf
mov
aam
push
push
aas
loopne
cmp
sbb
mov
loop
cmp
daa
xchg
mov
rep
(bad)
int
les
cmp
jae
mov
lahf
jge
and
ret
pop
cmp
ja
mov
jp
mov
cmp
or
mov
int3
in
cmp
mov
mov
xor
icebp
ss
mov
mov
and
push
sub
es
sub
jmp
add
mov
repz
and
mov
lea
mov
add
cmp
fwait
ins
sar
cli
loope
lea
fisubr
lock
mov
cmp
aas
mov
xchg
icebp
sbb
add
(bad)
push
ret
ja
inc
or
sbb
test
or
add
pshufw
aas
jmp
mov
je
les
xor
mov
cmp
and
les
push
push
cs
jne
lds
sub
fbstp
cmp
sbb
lds
adc
sub
add
nop
push
mov
cdq
xchg
cld
sub
in
cmp
add
ins
pop
and
aas
int
inc
bound
push
sbb
xchg
mov
aas
lds
xchg
push
add
enter
xchg
add
push
or
int3
enter
iret
mov
add
out
fistp
aas
in
(bad)
jp
and
pop
jmp
repnz
push
xor
mov
sub
add
push
lds
stos
fs
imul
stc
jl
mov
aas
jb
js
and
xor
jecxz
int3
aas
jl
push
int
retf
xor
popf
xchg
int3
aas
jb
out
inc
mov
cmp
sti
adc
aas
or
sbb
pop
lahf
int
jae
xlat
mov
add
push
cmp
xchg
repnz
into
aas
xchg
adc
pop
pop
iret
aas
add
pop
cmp
sbb
idiv
and
pop
or
aas
jg
push
and
pop
cmp
or
(bad)
adc
cmp
xor
mov
cmp
jno
sar
xor
xor
add
sar
sbb
cmp
das
inc
sar
mov
xor
xchg
jp
aas
cdq
pop
sub
cmp
jp
sar
jle
jmp
iret
cmp
adc
fisttp
or
cs
daa
cmp
push
sar
stc
pop
movs
sub
jle
cmp
bound
aas
adc
or
sbb
inc
shl
aas
jns
sahf
lods
imul
or
aad
aas
mov
jmp
mov
sar
xor
mov
cdq
xchg
cmp
adc
pop
mov
pop
xor
pop
cmp
add
fstp
add
add
add
fstp
add
add
add
aas
add
add
add
aas
add
add
lock
add
lock
add
loopne
fidivr
add
add
loopne
fidivr
add
add
rcr
aas
add
add
rcr
aas
add
add
mov
add
add
add
add
add
add
add
add
fnstcw
add
add
push
add
aas
add
add
and
add
and
add
loopne
fdivr
add
add
loopne
fdivr
add
add
sub
xlat
aas
add
add
sub
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
ror
xlat
aas
add
add
ror
xlat
aas
add
add
add
aas
add
add
add
aas
add
add
test
(bad)
aas
add
add
test
(bad)
aas
add
add
shl
(bad)
aas
add
add
shl
(bad)
aas
add
add
jo
aad
add
add
jo
aad
add
add
adc
add
adc
add
sub
aas
add
add
sub
aas
add
add
inc
and
aas
add
add
inc
and
aas
add
add
shl
aam
add
add
shl
aam
add
add
pusha
cmps
aam
add
add
pusha
cmps
aam
add
add
push
add
add
aam
add
add
clc
sub
aas
add
add
clc
sub
aas
add
add
js
sar
add
add
js
sar
add
add
cmp
add
add
add
adc
add
add
add
add
clc
dec
sar
add
add
clc
dec
sar
add
add
js
sar
add
add
js
sar
add
add
jo
sar
add
add
jo
sar
add
add
loopne
sar
add
add
loopne
sar
add
add
fdivr
aas
add
add
fdivr
aas
add
add
dec
dec
sar
add
add
dec
dec
sar
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sar
add
add
jo
sar
add
add
pop
imul
add
sar
add
add
mov
add
add
add
add
add
add
add
add
jmp
add
add
sar
add
add
fadd
sar
add
add
fadd
sar
add
add
cmp
add
cmp
add
adc
aas
add
add
adc
aas
add
add
jo
sar
add
add
jo
sar
add
add
shl
aas
add
add
shl
aas
add
add
cwde
add
aas
add
add
cwde
add
aas
add
add
loopne
iret
aas
add
add
loopne
iret
aas
add
add
sub
add
add
sub
add
add
and
iret
aas
add
add
and
iret
aas
add
add
shl
aas
add
add
shl
aas
add
add
pusha
lahf
into
aas
add
add
pusha
lahf
into
aas
add
add
add
aas
add
add
add
aas
add
add
nop
sbb
aas
add
add
nop
sbb
aas
add
add
xor
int
add
add
xor
int
add
add
rcl
add
xchg
int
add
add
push
pop
int
add
add
push
pop
int
add
add
loopne
int
add
add
loopne
int
add
add
pusha
jecxz
aas
add
add
pusha
jecxz
aas
add
add
lock
int3
aas
add
add
lock
int3
aas
add
add
jo
int3
aas
add
add
jo
int3
aas
add
add
add
int3
aas
add
add
add
int3
aas
add
add
xor
aas
add
add
xor
aas
add
add
add
retf
aas
add
add
add
retf
aas
add
add
add
add
add
add
add
lock
add
add
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
sub
inc
adc
sub
adc
cli
inc
xchg
add
cli
inc
xchg
cmp
sahf
mov
cmp
sahf
mov
in
shl
pop
movs
push
push
push
lds
sub
es
push
movs
aas
jnp
(bad)
(bad)
(bad)
(bad)
fistp
dec
jne
push
mov
xor
sub
add
mul
push
ror
mov
add
popa
enter
mul
enter
inc
xchg
add
pop
cmps
call
pop
mov
add
pushf
das
jo
mov
shl
in
jecxz
add
mov
mov
rol
adc
add
lock
lds
call
bound
test
cmp
jb
add
mov
jmp
mov
cmp
imul
call
aam
add
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
add
repnz
cwde
sub
cmp
jl
gs
imul
xor
cmp
pop
cmc
popf
sahf
add
mov
or
xor
cmp
add
cmps
test
add
mov
mov
jne
cmp
add
dec
clc
rcr
fisttp
mov
cmp
add
jge
int3
mov
mov
aaa
cmps
jno
add
shl
xor
cmps
add
ins
dec
sub
and
dec
cmps
fiadd
add
mov
mul
or
add
adc
cmp
mov
or
add
mov
cmp
cmp
mov
xchg
mov
jp
into
nop
jbe
daa
sub
aad
mov
sub
cmps
sub
jbe
stc
add
pop
out
shl
popf
push
sub
sbb
daa
mov
inc
outs
add
loop
arpl
fld
stos
add
sub
xor
outs
out
add
mov
cdq
test
mov
mov
and
add
fdiv
xchg
cdq
cmp
and
cmp
add
mov
cmp
cmp
sahf
mov
into
xchg
sbb
mov
push
add
and
call
cmps
cmps
pop
mov
popa
mov
push
jmp
pop
add
inc
mov
jae
mov
(bad)
stos
loope
gs
dec
iret
ss
add
addr16
mov
adc
dec
cdq
mov
enter
xchg
cmp
xchg
inc
fldcw
add
lea
mov
or
inc
pop
repz
xor
cmp
ja
cdq
scas
icebp
or
cmp
push
pushf
mov
(bad)
aaa
aaa
or
stos
(bad)
stc
and
call
ficomp
daa
into
xchg
sub
scas
jno
nop
lock
add
ins
fwait
cmp
in
jnp
or
add
daa
xchg
cmp
and
or
mov
jae
test
cmp
std
jns
imul
xchg
ja
mov
call
sub
cmp
adc
or
scas
add
mov
bnd
or
int
pop
or
push
ror
int3
or
mov
scas
xor
push
test
fwait
sbb
lods
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
push
imul
nop
out
fsub
mov
add
jo
cmp
mov
dec
sub
pop
cmp
cmp
movs
sti
fcomp
pop
or
aad
pop
mov
test
dec
sbb
mov
jnp
xchg
cld
or
pusha
add
je
idiv
mov
cs
push
add
dec
or
fst
push
add
and
cmp
pop
popa
out
sbb
push
add
test
xor
inc
outs
pop
jbe
ltr
mov
fcom
sldt
add
add
add
aas
add
add
add
adc
out
cmp
inc
xchg
add
mov
add
add
add
lock
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
cmp
add
cmp
fs
add
fs
add
outs
gs
popa
data16
jb
add
outs
bound
add
pop
jns
add
xor
pop
jns
add
jns
outs
je
add
popa
bound
add
popaw
bound
add
add
arpl
add
add
cs
add
add
bound
add
add
arpl
add
add
cs
add
popf
ja
and
add
add
add
mov
mov
cmc
scas
aas
sub
ss
out
addr16
cmp
add
mov
add
add
out
mov
push
xchg
pusha
je
pop
add
add
add
add
mov
cwde
mov
enter
popa
add
add
add
aas
add
add
out
(bad)
ret
aas
xchg
clc
cmp
add
les
add
add
mov
xor
fdiv
add
add
add
enter
add
nop
retf
aas
and
and
add
add
add
add
aas
add
add
jne
iret
aas
(bad)
fld
(bad)
or
add
add
add
aas
add
add
inc
retf
mov
add
add
add
sar
add
add
(bad)
imul
add
add
add
aas
add
add
jo
mov
aam
adc
add
add
aas
add
add
not
aas
inc
adc
push
add
add
add
fdivr
add
add
dec
mov
aas
jmp
mov
add
add
fidivr
add
add
out
fidivr
jge
mov
pop
popa
cs
add
add
fdivr
add
add
mov
fdivr
fs
clc
sahf
in
adc
add
add
add
fidivr
add
add
lods
fnstsw
leave
fisttp
add
add
add
loopne
add
add
fld
aas
shl
mov
add
add
add
loope
add
add
sub
sbb
add
add
add
loop
add
add
inc
or
add
add
add
jecxz
add
add
sbb
idiv
add
add
add
in
add
add
xchg
loop
mov
in
or
add
add
add
in
add
add
inc
jecxz
pushf
or
add
add
add
out
add
add
shl
mov
(bad)
adc
add
add
add
out
add
add
test
and
div
add
add
add
call
js
cmp
aas
imul
add
add
add
jmp
test
adc
rcr
cmp
add
add
add
jmp
ins
out
add
and
add
add
add
jmp
add
add
cmps
add
aas
pop
xchg
out
arpl
add
add
aas
add
add
test
in
shl
add
add
aas
add
add
mov
push
lods
cmp
add
add
add
out
aas
add
add
cmc
lahf
call
mov
add
add
add
out
aas
add
add
jmp
adc
add
add
add
add
lock
add
add
cmp
mov
fcomp
add
add
add
add
and
pop
cmp
sub
add
add
add
icebp
aas
add
add
mov
mov
add
add
add
add
dec
add
aas
xchg
jb
in
daa
or
add
add
add
repnz
add
add
mov
cmp
sbb
add
add
add
add
jo
jmp
cmp
and
add
add
add
repz
add
add
popa
push
call
add
add
xor
add
add
in
aas
daa
pop
sbb
jl
cmp
add
add
add
hlt
aas
add
add
push
in
aas
into
jge
fs
and
add
add
add
add
push
outs
in
aas
xlat
mov
dec
push
js
add
add
add
cmc
aas
add
add
retf
xor
sub
add
add
add
add
out
aas
or
das
mov
add
add
add
aas
add
add
jl
aas
xchg
cmc
js
jl
xor
add
add
add
add
out
aas
sbb
fstp
cmp
adc
add
add
add
idiv
add
add
and
aas
mov
lea
add
add
xor
add
add
or
aas
mov
fnstenv
add
add
clc
aas
add
add
shr
gs
cs
add
add
add
push
lock
mov
cmps
inc
add
add
add
stc
aas
add
add
sub
aas
jbe
pop
mov
add
add
add
add
dec
lock
push
inc
pop
mov
add
add
add
cli
aas
add
add
adc
aas
daa
pop
loope
ror
add
add
add
add
lock
fwait
lahf
es
sahf
ret
add
add
add
sti
aas
add
add
lock
mov
dec
jb
push
inc
add
add
add
add
shl
aas
frstor
das
movs
daa
call
add
add
cld
aas
add
add
movs
repnz
pop
pop
int
add
aas
add
add
add
add
jmp
icebp
aas
or
aam
jge
pop
add
add
add
std
aas
add
add
gs
aas
out
dec
sbb
inc
add
add
add
add
sbb
rcr
push
into
nop
aas
add
add
add
(bad)
aas
add
add
addr16
aas
xchg
mov
sub
add
add
cmp
add
add
xor
sbb
xchg
dec
add
add
add
(bad)
aas
add
add
cmc
pushf
icebp
aas
xor
dec
add
add
add
add
int
arpl
repnz
inc
add
add
add
add
add
sub
shl
aas
fst
js
out
add
add
add
inc
add
add
call
adc
add
add
add
add
add
sar
add
add
add
add
add
lock
repnz
lds
xchg
mov
(bad)
dec
add
add
add
add
add
and
das
repnz
push
inc
dec
test
add
add
add
inc
add
add
mov
repnz
mov
add
add
add
add
xchg
pop
repnz
mov
adc
sar
add
add
add
add
add
push
out
jo
aas
xchg
push
dec
mov
add
add
add
inc
add
add
test
aas
inc
ss
xor
add
add
inc
add
add
xor
and
add
add
add
and
repnz
jae
add
add
add
add
add
add
inc
mov
retf
or
fsub
add
add
add
add
add
sub
fdivr
scas
rol
add
add
add
inc
add
add
push
out
aas
ffreep
sub
add
add
add
add
mov
push
dec
add
add
add
add
add
js
or
aas
sub
mov
add
add
add
add
add
add
in
repz
xor
jmp
add
add
add
inc
add
add
(bad)
sub
sub
ret
add
add
add
add
ds
mov
cmc
stos
xor
add
add
add
add
add
add
fwait
xlat
or
dec
add
add
add
add
shr
pop
aam
or
add
add
add
inc
add
add
out
repz
in
sti
cmps
sbb
add
add
add
add
cwde
cmp
cmp
add
add
add
add
ins
push
repz
push
loop
pop
push
sub
add
add
add
push
inc
add
add
repz
mov
cmp
add
add
add
inc
add
add
retf
and
cmovb
add
add
add
add
repz
test
jmp
add
rol
add
add
(bad)
repz
fwait
sbb
es
add
add
pop
inc
add
add
xchg
aam
aas
push
clc
inc
add
add
add
inc
add
add
(bad)
jo
ins
add
add
add
add
add
outs
adc
add
add
add
pop
inc
add
add
cld
repz
pop
mov
dec
add
add
add
or
add
(bad)
lds
hlt
aas
sub
lds
add
add
add
inc
add
add
adc
ins
sar
add
add
add
add
jne
in
inc
jecxz
add
add
add
or
add
inc
jo
hlt
aas
mov
push
adc
stc
xor
add
add
add
or
add
movs
cmp
hlt
aas
mov
mov
add
add
add
inc
add
add
inc
hlt
aas
div
aaa
add
add
add
add
push
hlt
aas
or
inc
retf
add
add
add
or
add
adc
cmp
dec
add
add
add
or
add
ror
hlt
aas
sbb
cmp
add
add
add
inc
add
add
ret
xchg
sbb
add
add
add
add
jnp
aas
xor
mov
xor
add
add
add
or
add
dec
sbb
test
add
add
add
or
add
mov
hlt
aas
(bad)
shl
inc
add
add
add
inc
add
add
imul
xchg
shl
add
add
add
add
movs
hlt
aas
js
xor
fwait
jne
add
add
add
or
add
cld
adc
dec
sub
bound
add
add
add
or
add
add
movs
mov
aas
sbb
es
int
inc
add
add
add
inc
add
add
cdq
sar
jecxz
dec
add
add
add
add
pop
retf
dec
outs
mov
add
add
add
or
add
add
js
hlt
aas
sub
cdq
cmp
add
add
add
or
mov
ss
dec
inc
sbb
cmp
add
add
add
inc
add
add
dec
in
aas
mov
dec
add
add
add
add
hlt
aas
adc
adc
add
ror
(bad)
div
aas
ds
es
add
add
add
push
inc
add
add
or
add
add
add
inc
add
add
dec
pop
cmc
aas
adc
push
push
or
add
add
add
add
pmaddwd
mov
movs
dec
add
add
add
push
inc
add
add
test
cmc
aas
xchg
mov
add
add
add
cmovo
add
pushf
jae
cmc
aas
add
xchg
dec
sti
push
dec
add
add
add
inc
add
add
inc
daa
cmc
aas
into
scas
mov
add
add
add
add
imul
cmc
aas
cmp
and
add
add
ror
add
add
movs
leave
iret
jmp
add
add
adc
add
or
ds
aas
xor
xchg
dec
arpl
add
add
add
adc
add
shl
aas
adc
xchg
add
add
add
inc
add
add
cmc
aas
add
dec
add
add
add
inc
add
add
push
cmc
aas
test
or
add
add
add
add
fcomp
aas
or
and
add
add
mov
add
sbb
aaa
add
add
add
adc
add
sub
cmp
add
add
add
adc
add
xor
cmc
aas
xchg
dec
adc
xor
add
add
add
inc
add
add
jbe
aas
push
mov
cs
and
add
add
add
adc
add
in
jl
aas
call
add
add
add
inc
add
add
in
and
mov
add
add
pusha
adc
add
xchg
nop
mov
aas
outs
sbb
add
add
add
add
neg
sub
add
add
add
add
sbb
mov
add
add
add
adc
add
add
pushf
cmc
aas
push
push
stos
js
jg
add
add
add
adc
add
push
push
mov
mov
mov
add
add
add
adc
add
xor
test
aas
push
(bad)
pop
and
mov
add
add
adc
add
adc
cmc
aas
lods
in
cmp
mov
add
add
add
inc
add
add
cmc
aas
jno
mov
or
add
add
add
inc
add
add
mov
and
xlat
shl
add
add
adc
add
add
cmc
aas
or
mov
add
add
add
add
adc
cmc
aas
or
shr
pop
cmp
add
add
add
adc
add
inc
pushf
retf
scas
mov
cli
cmp
add
adc
add
les
shl
aas
xchg
or
(bad)
cmp
add
adc
add
mov
stos
cld
xchg
(bad)
test
add
add
adc
add
test
(bad)
aas
mov
cs
xor
add
add
add
inc
add
add
loopne
aas
loop
jne
jl
cmp
add
add
add
inc
add
add
inc
sbb
cmp
add
add
add
add
push
lods
xor
std
mov
add
add
add
jnp
cmc
aas
sub
outs
inc
add
add
add
adc
add
and
hlt
cmc
aas
js
xchg
clc
adc
add
add
add
adc
add
adc
stc
cmc
aas
retf
aad
ins
test
add
add
add
adc
add
add
push
(bad)
cmc
aas
xchg
lock
cmp
add
add
adc
add
add
sub
scas
ficomp
cmp
add
inc
adc
add
add
cmc
pop
idiv
add
cmp
add
add
inc
add
add
lods
or
aas
sbb
push
and
add
add
add
add
mov
inc
ds
add
add
add
cmc
and
pusha
(bad)
dec
add
add
add
adc
add
add
test
idiv
cdq
jge
adc
xor
add
add
add
adc
add
add
push
pop
idiv
scas
xor
add
add
add
adc
je
and
aas
jmp
inc
add
add
add
adc
xor
daa
idiv
mov
and
and
add
add
add
inc
add
add
sub
aas
xchg
in
fiadd
add
add
add
inc
add
add
mov
cmovne
add
add
add
add
into
xor
aas
out
popa
repz
add
add
mov
add
add
idiv
stc
lea
mov
inc
add
add
add
adc
in
cmp
dec
inc
push
cmp
add
adc
inc
dec
inc
idiv
int
add
neg
add
add
push
inc
add
add
pusha
inc
idiv
popa
jo
dec
xor
add
add
push
inc
add
add
movs
cdq
cmp
add
add
add
inc
add
add
arpl
aas
movs
repnz
add
add
add
inc
add
add
push
idiv
dec
jns
ficomp
add
add
adc
add
add
cmp
aas
jbe
addr16
das
add
add
add
add
push
fimul
add
add
rcl
add
add
jmp
out
jecxz
jns
add
add
add
push
inc
add
add
pusha
idiv
inc
and
sbb
add
add
add
pop
inc
add
add
sti
out
movs
sahf
dec
add
add
add
pop
inc
add
add
and
aas
shl
shl
dec
add
add
add
inc
add
add
leave
imul
imul
sbb
jge
add
add
add
inc
add
add
mov
mov
add
add
add
add
cwde
fwait
clc
add
dec
add
add
add
add
mov
aas
sub
dec
add
add
add
pop
inc
add
add
jp
aas
jmp
icebp
inc
daa
cmp
add
add
pop
inc
add
add
jge
aas
pop
or
in
in
add
add
add
sbb
add
mov
xor
xor
dec
add
add
add
sbb
add
fsub
idiv
push
loop
adc
add
add
add
inc
add
add
idiv
push
dec
push
or
add
add
pusha
sbb
add
js
mov
aas
(bad)
push
xor
jmp
add
add
add
mov
aas
in
sub
add
add
add
add
idiv
jno
enter
dec
add
add
add
sbb
add
dec
jmp
idiv
enter
cmp
add
add
add
sbb
add
cmp
cwde
idiv
(bad)
mov
add
add
add
inc
add
add
fwait
idiv
retf
and
mov
add
add
add
sbb
add
inc
jne
idiv
out
xchg
repnz
add
add
inc
add
add
xchg
mov
add
add
add
inc
add
add
movs
idiv
pop
mov
add
add
add
add
test
xor
jge
add
add
add
add
stos
idiv
xchg
or
cmp
add
add
add
sbb
add
mov
lods
idiv
ins
or
push
pop
add
add
add
add
sbb
add
call
cli
test
shl
pusha
or
add
add
add
sbb
add
add
fs
idiv
add
add
add
sbb
add
adc
mov
aas
loope
push
jbe
inc
inc
add
add
add
inc
add
add
mov
enter
dec
add
add
add
inc
add
add
jge
adc
mov
add
add
add
mov
jbe
sti
loop
add
add
add
add
ret
int3
scas
sub
add
add
add
sbb
add
mov
(bad)
idiv
xchg
sti
call
xor
add
add
add
sbb
add
jl
(bad)
idiv
pop
jae
stos
mov
inc
add
add
add
sbb
add
adc
idiv
stos
fs
xchg
push
sbb
add
add
add
sbb
add
push
dec
idiv
mov
dec
dec
add
add
add
inc
add
add
iret
idiv
imul
(bad)
xor
add
add
add
inc
add
add
shl
aas
mov
retf
add
add
add
add
aam
aas
push
mov
mov
add
add
add
add
fwait
xlat
idiv
(bad)
(bad)
jmp
add
add
add
sbb
add
cmp
(bad)
aas
mov
mov
add
add
sbb
add
js
fdiv
aas
aaa
outs
lods
in
stos
dec
add
add
add
sbb
add
add
push
fcomip
aas
cmps
dec
arpl
pop
test
add
add
add
sbb
add
add
fsub
idiv
sti
jp
xchg
inc
add
add
inc
sbb
add
add
in
aas
and
icebp
inc
arpl
add
add
add
inc
add
add
aad
idiv
xlat
push
fisub
call
add
add
dec
jmp
hlt
add
add
add
add
add
xlat
ins
and
hlt
cmp
add
sbb
add
add
sbb
and
add
add
add
sbb
add
add
lock
pop
dec
add
add
add
sbb
cmp
repnz
add
sahf
dec
cli
test
add
add
add
sbb
dec
dec
cmc
idiv
call
add
add
add
inc
add
add
idiv
mov
sub
add
add
add
inc
add
add
idiv
cmp
idiv
std
xor
add
add
add
add
pop
jnp
jg
inc
add
add
add
add
mov
idiv
cli
inc
pop
retf
xchg
jg
add
add
add
sbb
inc
into
add
aas
push
xchg
nop
xor
add
add
add
sbb
clc
or
idiv
ja
xor
sbb
xor
add
add
add
push
inc
add
add
inc
add
dec
call
add
add
push
inc
add
add
pop
idiv
dec
pop
lods
das
add
add
add
inc
add
add
adc
add
add
add
inc
add
add
mov
pusha
xchg
add
add
add
add
idiv
call
add
add
add
add
and
idiv
ins
add
add
add
add
push
inc
add
add
inc
adc
aas
jle
sub
mov
add
add
add
push
inc
add
add
push
dec
rcl
add
add
add
pop
inc
add
add
jnp
mov
inc
add
add
add
pop
inc
add
add
idiv
jecxz
xor
ror
and
add
add
add
inc
add
add
test
xor
dec
or
add
add
add
inc
add
add
pop
inc
ficom
add
add
add
add
(bad)
addr16
shr
add
add
add
add
xor
sub
add
add
add
pop
inc
add
add
push
pusha
inc
xor
add
add
add
pop
inc
add
add
cmp
retf
inc
add
add
add
and
sub
stc
aas
pop
pop
adc
cmps
xchg
cmp
jns
je
ins
push
outs
outs
je
add
and
mov
mov
add
mov
repnz
retf
rcl
mov
add
dec
mov
les
or
scas
int
adc
leave
loop
popa
stc
push
mov
xor
adc
xlat
add
xor
rcl
mov
add
dec
fld
sbb
add
add
add
sbb
add
jmp
add
push
push
inc
push
cmp
repnz
mov
inc
div
mov
add
add
cmp
imul
outs
jb
sub
xor
outs
jae
popa
ins
ins
gs
ja
outs
outs
ja
pop
bound
ins
fs
jb
ins
gs
jae
pop
popa
jo
jae
bound
je
je
popa
jo
gs
jo
bound
add
icebp
dec
add
add
add
add
add
dec
add
add
add
add
icebp
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
mov
dec
add
(bad)
(bad)
inc
add
add
add
cwde
mov
add
add
add
add
add
test
dec
add
add
icebp
dec
add
mov
add
add
add
add
add
aam
dec
add
mov
add
cld
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
repnz
add
add
add
add
add
add
sbb
dec
add
mov
dec
add
add
add
repnz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
pusha
mov
add
add
add
add
add
jo
dec
add
add
mov
add
add
add
add
add
pushf
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
and
dec
add
mov
add
add
add
add
add
call
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fdivr
add
pop
repz
add
dec
add
add
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
repz
add
dec
add
add
add
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
hlt
dec
add
add
add
add
add
add
int3
mov
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
mov
add
add
add
add
add
sbb
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
or
add
pusha
hlt
dec
add
dec
add
add
add
dec
add
add
mov
add
pusha
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
mov
add
mov
dec
add
add
add
add
add
add
lods
mov
dec
add
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
mov
add
mov
mov
add
add
add
add
add
clc
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
add
add
hlt
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
hlt
dec
add
add
add
add
add
add
xchg
ror
ror
ror
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
hlt
dec
add
ror
add
add
add
add
add
add
ror
ror
mov
add
cld
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
ror
add
add
dec
add
add
add
dec
add
add
mov
add
adc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
ror
ror
mov
add
push
cmc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
ror
add
add
add
add
add
add
ror
ror
add
add
add
(bad)
(bad)
inc
add
add
add
rol
dec
add
test
dec
add
add
add
ret
cmp
dec
add
dec
add
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
dec
add
test
dec
add
add
add
dec
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
dec
add
add
add
ret
int3
ret
inc
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
ret
add
add
or
dec
add
dec
add
ret
inc
mov
add
test
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
ret
xor
dec
add
add
add
pop
ret
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
ret
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
ret
dec
add
ret
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
add
add
ret
dec
add
ret
dec
add
add
dec
add
add
and
dec
add
les
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
add
js
dec
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
pop
dec
add
add
add
add
add
add
int3
les
fadd
dec
add
ret
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
add
add
add
add
add
sbb
dec
add
lds
inc
lds
add
add
pop
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
add
add
jo
dec
add
add
dec
add
add
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
pop
dec
add
lds
add
add
in
lds
clc
lds
inc
mov
add
lock
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fadd
dec
add
dec
add
(bad)
dec
add
add
add
(bad)
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
dec
add
(bad)
dec
add
ret
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
(bad)
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
(bad)
dec
add
dec
add
add
add
dec
add
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
(bad)
dec
add
or
loopne
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
add
add
add
enter
add
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
enter
add
add
or
lods
enter
add
add
add
add
add
mov
enter
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lods
enter
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
leave
dec
add
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
leave
dec
add
add
add
add
leave
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
je
dec
add
leave
dec
add
add
ror
dec
add
leave
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
dec
add
add
and
dec
add
retf
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
or
push
add
add
add
add
add
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
or
mov
dec
add
add
add
retf
aam
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
or
add
dec
add
add
add
dec
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
or
push
retf
dec
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
retf
dec
add
or
movs
retf
dec
add
add
add
dec
add
ret
inc
mov
add
and
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
retf
dec
add
dec
add
retf
dec
add
add
add
dec
add
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
hlt
retf
dec
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
int3
dec
add
dec
add
add
add
add
add
add
pushf
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
int3
dec
add
add
add
int3
dec
add
int3
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fmul
dec
add
int
add
add
add
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
or
jo
dec
add
add
add
int
add
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
or
add
int
add
add
add
int
add
int
add
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
or
add
into
dec
add
add
add
into
dec
add
into
dec
add
int3
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
dec
add
add
dec
add
add
add
add
add
add
movs
into
dec
add
lds
add
add
pusha
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
into
dec
add
add
add
add
add
into
dec
add
iret
dec
add
dec
add
dec
add
add
iret
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
lock
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
iret
dec
add
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
add
add
iret
dec
add
add
add
add
or
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
or
or
dec
add
or
add
add
ror
add
add
dec
ror
pusha
ror
jl
dec
add
leave
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cwde
ror
add
add
test
dec
add
add
leave
dec
add
add
or
dec
add
add
add
ror
in
ror
or
dec
add
add
add
add
or
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
or
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
ror
inc
mov
add
sub
dec
add
add
add
ror
js
dec
add
ror
or
dec
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
ins
push
dec
add
add
add
add
add
add
add
ror
sub
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
ror
add
add
or
dec
add
dec
add
ror
je
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
clc
ror
les
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
add
add
ror
cmp
dec
add
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
nop
ror
add
add
mov
ror
dec
into
dec
add
cmovge
rcl
add
ror
call
ror
inc
ror
adc
add
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcl
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
add
xor
dec
add
dec
add
add
into
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
ror
add
add
jo
dec
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
add
add
lods
ror
adc
add
add
ror
add
add
(bad)
dec
add
ror
add
add
nop
cmovge
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
add
add
adc
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
cmovge
dec
aam
add
add
add
add
add
into
dec
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
aam
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
aam
add
add
add
dec
add
add
dec
add
aam
add
add
add
aam
add
aam
add
aad
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pop
aad
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
add
aad
add
into
dec
add
aad
add
add
add
aad
add
dec
add
(bad)
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
dec
add
add
adc
ins
(bad)
dec
add
add
add
add
dec
add
add
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
(bad)
dec
add
dec
add
add
add
add
add
add
int3
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
dec
add
(bad)
dec
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
xlat
dec
add
dec
add
add
add
dec
add
xlat
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
xlat
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
in
xlat
dec
add
add
add
xlat
dec
add
xlat
dec
add
add
dec
add
dec
add
add
add
dec
add
dec
add
add
fmul
adc
add
add
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
add
fmul
fmul
test
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
fmul
add
add
aam
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
add
add
dec
add
fmul
adc
add
add
(bad)
add
add
dec
(bad)
pop
(bad)
sub
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
(bad)
add
add
cwde
(bad)
test
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
add
add
call
(bad)
add
add
ins
adc
(bad)
(bad)
(bad)
inc
add
add
add
fcomp
dec
add
dec
add
add
add
fimul
cmp
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
dec
add
leave
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
adc
mov
add
add
add
add
add
add
fimul
aam
dec
add
fimul
add
add
enter
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
adc
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
dec
add
fimul
cld
adc
cmp
dec
add
add
add
dec
add
add
enter
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
add
fisttp
mov
aad
add
fisttp
adc
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
fisttp
mov
aad
add
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
push
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
fmul
add
add
add
add
or
add
movs
fmul
fcomp
dec
add
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
fmul
fcom
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
fisttp
hlt
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
add
add
jl
dec
add
fisttp
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
inc
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
fisttp
movs
fisttp
add
add
inc
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
dec
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
mov
fmul
add
add
adc
add
add
add
mov
fmul
in
dec
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
fimul
loopne
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
or
dec
add
dec
add
adc
dec
add
add
add
dec
add
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
adc
dec
add
add
sbb
add
dec
add
fisttp
dec
into
dec
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
int3
fisttp
add
add
(bad)
dec
add
fisttp
dec
into
dec
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
loopne
add
fisttp
dec
into
dec
add
dec
add
loopne
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
loopne
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
dec
add
loopne
add
add
add
loopne
add
loope
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
loope
add
add
add
dec
add
dec
add
add
push
dec
add
dec
add
add
add
loope
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
add
add
aam
dec
add
fimul
sub
dec
add
add
dec
add
loope
add
add
add
dec
add
dec
add
leave
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
loope
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
loop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
loop
add
add
add
dec
add
add
dec
add
loope
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lock
add
jecxz
add
loop
add
fimul
sub
dec
add
add
pop
dec
add
dec
add
add
add
dec
add
dec
add
enter
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
pop
dec
add
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
dec
add
in
add
add
add
in
add
in
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
and
dec
add
icebp
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
in
add
in
add
mov
add
pushf
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
add
dec
add
add
add
add
add
add
and
dec
add
in
add
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
dec
add
add
add
add
add
add
add
dec
add
dec
add
fimul
sub
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
in
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
add
in
add
loope
add
leave
dec
add
add
dec
add
add
dec
add
add
add
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
add
add
cmp
dec
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
add
add
add
add
dec
add
dec
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
cmp
add
add
js
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
jns
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
add
add
dec
add
dec
add
out
add
add
add
out
add
out
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
shl
add
dec
add
call
add
add
add
add
add
xor
dec
add
dec
add
into
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
call
add
add
add
add
add
sub
add
aad
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
cmp
add
call
add
add
add
push
add
add
call
dec
add
dec
add
leave
dec
add
add
jmp
dec
add
add
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
shr
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
dec
add
add
add
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
cmp
add
call
add
js
dec
add
in
add
add
add
add
add
add
dec
add
in
add
add
jg
add
and
add
adc
add
nop
inc
add
add
pop
or
fist
or
sti
pop
or
sbb
or
cmp
or
pop
sbb
add
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
js
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
mov
or
mov
sbb
add
or
sbb
add
sbb
add
sbb
add
or
dec
sbb
add
or
mov
or
fcomp
add
sbb
or
pop
sbb
or
cwde
sbb
or
fcomp
or
test
or
scas
push
or
ficomp
or
xor
or
test
or
loope
or
sub
or
fldenv
or
clc
and
add
and
add
or
jnp
or
cwde
and
add
and
add
and
add
and
add
or
mov
or
int3
and
add
and
add
or
test
or
shl
or
repz
add
and
add
and
add
or
mov
and
add
and
or
pop
or
push
or
jae
or
mov
or
mov
or
(bad)
or
stc
or
sub
or
pop
daa
or
mov
or
test
or
call
sub
add
or
cwde
sub
add
sub
add
sub
add
sub
add
sub
add
or
xchg
sub
add
sub
add
sub
add
or
push
sub
add
sub
add
sub
add
sub
add
or
mov
sub
add
or
sub
test
sub
add
sub
add
sub
or
fsubr
or
dec
or
push
or
fld
or
or
or
cmp
or
pop
das
or
mov
das
or
fsubr
or
and
or
popa
xor
add
xor
add
xor
add
xor
add
or
mov
or
mov
xor
add
xor
add
or
js
or
cwde
xor
add
or
and
add
cmp
add
cmp
add
cmp
add
cmp
add
or
icebp
cmp
add
cmp
add
or
jnp
or
stos
cmp
add
cmp
add
cmp
or
mov
aas
or
xor
add
or
jns
or
fwait
inc
or
mov
inc
or
sti
inc
or
and
add
or
leave
inc
or
cmp
mov
inc
or
sub
add
or
mov
inc
or
add
add
or
imul
add
inc
or
call
dec
or
sub
add
or
push
dec
or
mov
dec
or
fisttp
add
dec
or
sbb
add
dec
or
pop
dec
or
xchg
dec
or
test
or
fisttp
add
dec
or
cmp
add
or
jle
or
cwde
dec
or
ds
or
pop
dec
or
mov
add
add
dec
or
mov
dec
or
clc
dec
or
cmp
add
or
fmul
add
or
mov
dec
or
inc
dec
or
clc
dec
or
mov
add
push
or
rcl
add
or
clc
push
or
call
push
or
pop
push
or
test
push
or
rcl
add
push
or
and
add
or
jo
or
nop
push
or
loope
or
clc
push
or
sbb
add
or
js
or
test
or
mov
pop
or
push
pop
or
xor
add
or
jo
or
cwde
pop
or
rcr
add
pop
or
adc
xor
push
pop
or
cdq
pop
or
mov
pop
or
xor
add
or
enter
lock
or
and
add
pusha
or
push
pusha
or
mov
add
pusha
or
push
popa
or
sub
add
or
xchg
popa
or
lock
or
enter
nop
arpl
add
or
inc
or
jo
or
mov
or
nop
or
loopne
or
adc
add
or
and
mov
or
pop
or
clc
or
cwde
push
or
call
push
add
ins
or
pop
ins
or
call
ins
or
shr
add
add
outs
or
loopne
or
or
add
outs
or
cwde
outs
or
shr
clc
outs
or
js
or
test
or
repz
add
or
sbb
lds
fdiv
cld
je
add
jne
add
or
xchg
jne
add
jne
add
jbe
add
or
jg
or
stos
jbe
add
jbe
add
ja
add
or
push
ja
add
or
pushf
ja
add
ja
add
ja
add
js
add
or
imul
add
js
add
jns
add
or
xchg
jns
add
jns
add
jns
add
jp
add
jp
add
or
sahf
jp
add
jp
add
jp
add
jnp
add
or
inc
jnp
add
or
fwait
jnp
add
jl
add
jl
add
or
xchg
jl
add
jl
add
jl
add
jge
add
or
pushf
jge
add
jge
add
jle
add
add
or
call
add
jle
add
jle
add
jg
add
jg
add
or
mov
add
jg
add
or
cmp
or
outs
or
mov
or
rol
add
or
sbb
or
pop
or
add
or
add
or
xor
or
xchg
or
int
or
lock
adc
or
pop
or
jl
or
lahf
or
ret
add
or
or
add
or
jno
or
xchg
test
add
test
add
test
add
test
add
or
jbe
or
movs
test
add
test
add
xchg
add
xchg
add
or
add
add
or
mov
or
iret
xchg
add
xchg
add
mov
add
or
jle
or
mov
mov
add
mov
add
mov
add
mov
add
or
xchg
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
add
mov
add
mov
add
or
daa
mov
add
or
jb
or
xchg
mov
add
mov
add
mov
add
lea
add
lea
add
or
mov
lea
add
lea
add
mov
add
or
push
mov
add
or
mov
(bad)
(bad)
(bad)
vprotb
or
into
(bad)
(bad)
nop
or
bound
or
test
or
retf
nop
or
out
nop
or
adc
or
jne
or
call
add
xchg
or
or
xchg
or
push
xchg
or
jns
or
pushf
xchg
or
rcl
or
pop
xchg
or
sub
or
jo
or
adc
add
xchg
or
icebp
xchg
or
add
add
or
xchg
xchg
or
test
or
retf
xchg
or
icebp
xchg
or
adc
or
push
xchg
or
jnp
or
mov
xchg
or
clc
xchg
or
xor
or
js
or
inc
xchg
or
js
or
adc
or
dec
cwde
or
inc
cdq
or
nop
cdq
or
push
call
or
add
or
cwde
pushf
or
adc
or
mov
popf
or
lock
or
and
or
pusha
sahf
or
mov
sahf
or
push
lahf
or
and
or
mov
lahf
or
lock
or
or
or
dec
mov
or
mov
mov
or
push
mov
or
and
add
mov
or
xor
add
movs
or
and
or
and
add
movs
or
loopne
or
sti
movs
or
and
or
push
cmps
or
enter
add
or
js
or
cmps
cmps
or
shl
add
test
add
or
xchg
test
add
test
add
test
or
push
test
or
mov
test
or
pop
stos
or
mov
or
in
or
pop
stos
or
sub
or
jo
or
fwait
stos
or
mov
stos
or
add
or
push
lods
or
cmps
lods
or
(bad)
(bad)
(bad)
push
dec
add
add
add
mov
add
add
(bad)
(bad)
call
add
add
in
dec
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
hlt
hlt
dec
add
(bad)
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
dec
add
add
add
add
inc
adc
add
add
fs
dec
add
add
add
dec
add
add
(bad)
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
xor
inc
add
add
add
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
and
inc
add
(bad)
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
add
dec
add
(bad)
(bad)
push
add
add
sub
dec
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
dec
add
(bad)
(bad)
jmp
sbb
and
add
in
dec
add
(bad)
(bad)
inc
sbb
and
add
adc
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
and
add
cmp
dec
add
(bad)
(bad)
call
dec
add
add
add
js
dec
add
(bad)
(bad)
push
dec
add
add
add
movs
test
(bad)
(bad)
(bad)
call
add
add
shl
dec
add
(bad)
(bad)
push
add
add
cld
test
(bad)
(bad)
(bad)
call
sbb
and
add
sub
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
(bad)
(bad)
clc
sbb
and
add
push
clc
dec
add
(bad)
(bad)
call
sbb
and
add
mov
dec
add
(bad)
(bad)
push
sbb
and
add
mov
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
loopne
dec
add
(bad)
(bad)
push
dec
add
add
add
adc
dec
add
(bad)
(bad)
jmp
add
add
inc
stc
dec
add
add
add
nop
stc
dec
add
(bad)
(bad)
call
sbb
(bad)
(bad)
(bad)
(bad)
fcomp
dec
add
add
add
sbb
add
add
jmp
dec
add
add
add
sbb
add
add
(bad)
sbb
and
add
in
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
add
add
inc
sbb
add
add
dec
sbb
(bad)
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
adc
dec
add
(bad)
(bad)
call
add
add
add
add
dec
cli
dec
add
(bad)
(bad)
push
add
add
jl
dec
add
(bad)
(bad)
call
sbb
and
add
test
dec
add
add
add
clc
cli
dec
add
(bad)
(bad)
push
sbb
add
add
clc
sbb
add
add
add
add
add
add
sbb
add
add
add
sbb
add
(bad)
(bad)
push
sbb
add
add
add
sbb
add
add
add
dec
add
add
add
and
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
pop
sti
dec
add
add
add
mov
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
sbb
add
(bad)
(bad)
dec
sbb
add
(bad)
(bad)
call
sbb
add
add
add
in
dec
add
(bad)
(bad)
push
sbb
add
(bad)
(bad)
(bad)
clc
sbb
add
add
add
and
dec
add
add
add
js
dec
add
(bad)
(bad)
call
sbb
(bad)
call
sbb
add
and
add
sub
add
xor
(bad)
(bad)
cmp
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
or
dec
add
(bad)
(bad)
push
add
add
xor
dec
add
(bad)
(bad)
call
sbb
xchg
sbb
add
add
dec
add
add
add
mov
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
sti
sbb
add
add
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
add
add
or
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
(bad)
jns
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
inc
dec
(bad)
(bad)
(bad)
inc
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
cmp
add
add
add
loopne
dec
add
(bad)
(bad)
push
push
dec
add
add
add
push
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cwde
dec
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
pop
dec
add
add
add
and
add
add
push
and
add
add
sbb
dec
add
add
add
and
and
add
pop
add
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
(bad)
(bad)
(bad)
dec
and
(bad)
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
push
and
and
add
loopne
dec
add
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
call
and
and
add
or
dec
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
inc
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
push
add
add
add
add
in
dec
add
(bad)
(bad)
call
and
add
add
(bad)
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
and
add
add
sti
and
and
add
dec
add
add
add
add
add
movs
add
add
add
(bad)
(bad)
jmp
and
add
add
adc
dec
add
add
add
and
add
add
and
dec
add
add
add
dec
add
add
add
dec
add
add
add
daa
inc
add
add
add
add
add
add
add
add
add
cmc
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
dec
add
(bad)
(bad)
jmp
and
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
push
and
(bad)
(bad)
(bad)
inc
and
(bad)
(bad)
(bad)
dec
dec
add
add
add
add
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
jmp
dec
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
add
add
enter
(bad)
(bad)
(bad)
inc
and
add
add
enter
and
add
xchg
add
add
add
add
add
add
add
add
add
shl
add
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
and
add
add
call
add
add
adc
add
(bad)
(bad)
(bad)
inc
and
add
add
add
inc
add
add
(bad)
(bad)
(bad)
jmp
and
add
add
add
and
add
add
add
jo
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
movs
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
fadd
add
and
add
cmp
dec
add
(bad)
(bad)
push
add
add
add
add
and
add
(bad)
(bad)
dec
and
add
(bad)
(bad)
call
and
add
(bad)
(bad)
push
and
add
add
add
and
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
and
add
sub
add
xor
add
ds
xchg
sbb
add
xchg
push
dec
add
add
add
add
add
add
add
pop
dec
add
add
add
inc
pop
dec
add
add
add
push
dec
add
add
add
cmc
dec
add
(bad)
(bad)
jmp
inc
add
add
add
icebp
dec
add
add
add
inc
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
into
and
add
(bad)
and
add
add
add
adc
add
loope
dec
add
add
add
and
add
add
add
adc
add
jmp
add
pop
es
add
add
add
and
(bad)
dec
es
add
(bad)
(bad)
call
es
add
(bad)
(bad)
push
es
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
add
add
push
add
add
(bad)
(bad)
jmp
add
add
add
add
xchg
or
add
add
(bad)
(bad)
inc
es
add
add
add
es
add
add
add
enter
(bad)
(bad)
(bad)
jmp
es
add
add
add
cld
or
add
add
(bad)
(bad)
call
daa
dec
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
push
or
add
add
(bad)
(bad)
push
dec
add
add
add
or
add
(bad)
(bad)
jmp
add
add
lods
or
add
add
add
add
cld
or
add
add
(bad)
(bad)
inc
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
dec
or
add
add
(bad)
(bad)
inc
sub
add
add
or
dec
add
add
add
sub
(bad)
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
jmp
sub
and
add
xchg
or
add
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
(bad)
(bad)
push
dec
add
(bad)
(bad)
call
add
add
int3
or
add
add
(bad)
(bad)
push
add
add
clc
or
add
add
(bad)
(bad)
call
sub
and
add
and
dec
add
(bad)
(bad)
push
sub
and
add
push
or
add
add
(bad)
(bad)
call
sub
and
add
jl
dec
add
(bad)
(bad)
push
sub
and
add
test
dec
add
(bad)
(bad)
call
dec
add
add
add
aam
dec
add
(bad)
(bad)
push
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
xor
dec
add
(bad)
(bad)
call
sub
add
add
shr
add
add
add
sub
add
add
jmp
add
add
pusha
or
add
(bad)
(bad)
inc
sub
and
add
movs
or
add
(bad)
(bad)
push
sub
add
add
and
dec
add
add
add
sub
add
add
dec
sub
and
add
ror
add
(bad)
(bad)
jmp
dec
add
add
add
adc
dec
add
(bad)
(bad)
inc
add
add
inc
or
add
(bad)
(bad)
(bad)
jmp
add
add
ins
or
add
(bad)
(bad)
(bad)
inc
sub
and
add
cwde
or
add
(bad)
(bad)
(bad)
push
sub
and
add
les
add
(bad)
(bad)
(bad)
call
sub
add
add
sbb
dec
add
add
add
lock
add
(bad)
(bad)
(bad)
push
sub
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
and
dec
add
add
add
mov
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
push
dec
add
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
(bad)
fsubr
dec
add
add
add
sub
add
add
call
(bad)
(bad)
push
sub
(bad)
(bad)
(bad)
(bad)
clc
sub
and
add
dec
cmovl
(bad)
(bad)
(bad)
call
sub
add
(bad)
(bad)
call
sub
add
add
add
sub
add
add
add
sub
add
(bad)
(bad)
push
sub
add
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
(bad)
(bad)
inc
sub
add
(bad)
(bad)
dec
sub
add
add
add
fmul
dec
add
(bad)
(bad)
jmp
sub
add
add
add
sub
add
add
add
sub
add
add
add
adc
dec
add
(bad)
(bad)
call
sub
add
sbb
add
and
xchg
sbb
add
add
add
add
add
lods
adc
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
and
dec
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
sub
(bad)
dec
sub
(bad)
call
sub
(bad)
push
sub
add
clc
sub
(bad)
(bad)
clc
sub
add
add
dec
add
add
add
pop
adc
add
add
add
add
rcl
add
(bad)
(bad)
jmp
cs
add
add
add
cs
add
add
add
cs
add
add
add
cs
add
add
add
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
add
add
cmp
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
call
cs
add
add
add
jo
dec
add
(bad)
(bad)
push
cs
add
add
add
pushf
adc
add
add
(bad)
(bad)
jmp
das
dec
add
add
add
enter
(bad)
(bad)
(bad)
call
dec
add
add
add
hlt
adc
add
add
(bad)
(bad)
inc
add
add
dec
add
add
add
dec
add
add
add
add
add
and
dec
add
(bad)
(bad)
push
add
add
adc
add
add
(bad)
(bad)
call
das
dec
add
add
add
nop
adc
add
add
(bad)
(bad)
inc
xor
add
add
lock
dec
add
add
add
das
dec
add
add
add
xor
and
add
mov
add
add
(bad)
(bad)
inc
dec
add
add
add
xor
add
add
cmp
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
push
dec
add
(bad)
(bad)
(bad)
js
dec
add
(bad)
(bad)
inc
add
add
inc
adc
add
add
add
movs
adc
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
xor
(bad)
(bad)
(bad)
push
xor
and
add
int3
adc
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
and
add
clc
adc
add
(bad)
(bad)
inc
dec
add
add
add
sub
dec
add
(bad)
(bad)
push
dec
add
add
add
pop
adc
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
test
add
(bad)
(bad)
(bad)
call
xor
(bad)
(bad)
(bad)
(bad)
fdiv
dec
add
(bad)
(bad)
jmp
xor
and
add
rcl
add
(bad)
(bad)
inc
xor
and
add
cld
adc
add
and
add
dec
push
dec
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
push
xor
add
add
cmp
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
add
add
add
dec
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
xor
add
add
enter
add
add
shl
dec
add
add
fdiv
dec
add
xor
add
xor
add
xor
add
add
lock
add
add
clc
xor
add
add
add
dec
add
add
or
dec
add
add
adc
dec
add
add
sbb
dec
add
add
and
dec
add
add
and
dec
add
add
sub
dec
add
add
xor
dec
add
(bad)
(bad)
(bad)
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
int3
pop
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
or
add
jmp
add
add
xor
or
add
shl
add
add
add
xor
or
add
shl
dec
add
add
add
xor
add
add
stc
xor
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
test
dec
add
(bad)
(bad)
dec
cmp
add
add
xor
add
add
add
xor
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
xor
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
adc
dec
add
xor
add
sub
add
xor
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
ja
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
iret
xor
add
fidiv
add
in
dec
add
add
add
xor
add
sti
xor
add
push
ss
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
ss
add
ss
add
add
add
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
add
add
add
add
add
add
add
add
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
ss
add
add
clc
ss
add
add
add
dec
add
add
push
aaa
dec
add
add
sbb
dec
add
add
and
dec
add
add
das
aaa
dec
add
add
cmp
dec
add
add
inc
aaa
dec
add
add
push
aaa
dec
add
add
pop
aaa
dec
add
add
data16
dec
add
add
jno
dec
add
add
jl
dec
add
add
xchg
dec
add
add
xchg
aaa
dec
add
add
popf
aaa
dec
add
add
test
dec
add
add
mov
dec
add
add
mov
add
add
aaa
dec
add
add
aam
dec
add
add
fdiv
dec
add
add
out
dec
add
add
out
aaa
dec
add
add
div
dec
add
add
push
dec
add
add
pop
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
popa
add
add
cmp
popa
add
add
cmp
arpl
add
inc
cmp
arpl
add
dec
cmp
add
add
dec
add
add
pop
cmp
add
add
dec
add
add
outs
cmp
imul
dec
add
add
jg
dec
add
add
xchg
dec
add
add
(bad)
cmp
ins
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jb
add
out
cmp
jb
add
idiv
dec
add
add
add
cmp
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
call
cmp
and
add
pusha
sbb
add
add
add
mov
add
add
(bad)
(bad)
push
cmp
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
pop
cmp
add
add
pusha
cmp
add
add
push
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
dec
add
cmp
or
cmp
or
cmp
or
add
jb
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cmp
or
add
retf
add
add
add
cmp
pop
add
add
cmp
sbb
add
loop
dec
add
add
add
cmp
or
add
repnz
or
add
cli
cmp
sbb
cmp
push
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
push
add
add
cmp
or
add
inc
cmp
or
add
dec
cmp
add
add
cmp
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
(bad)
dec
cmp
and
add
sub
dec
add
add
add
sbb
add
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
push
cmp
add
add
clc
cmp
add
add
add
dec
add
add
add
cmp
add
add
adc
dec
add
add
add
cmp
(bad)
(bad)
(bad)
jmp
cmp
and
add
in
push
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
je
dec
add
add
jl
dec
add
add
add
dec
pop
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
cmp
and
add
jo
dec
add
(bad)
(bad)
inc
cmp
add
add
add
movs
pop
dec
add
(bad)
(bad)
push
cmp
add
add
add
rcr
dec
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
cld
pop
dec
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
cmp
dec
add
(bad)
(bad)
inc
cmp
add
add
add
cmp
add
add
add
je
dec
add
(bad)
(bad)
(bad)
call
add
add
cmp
add
add
add
test
dec
add
(bad)
(bad)
call
cmp
xchg
sbb
add
add
and
add
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
pusha
cmp
add
push
add
add
dec
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sar
add
cmp
add
sar
add
fdivr
add
loopne
dec
add
add
loopne
dec
add
add
add
cmp
add
loopne
dec
add
add
add
cmp
add
clc
cmp
add
add
dec
add
add
add
ds
add
ds
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
cmp
dec
add
add
add
ds
add
add
add
dec
add
add
add
ds
add
add
add
dec
add
ds
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
ds
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
dec
add
add
add
dec
add
aas
dec
add
aas
dec
add
aas
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
add
(bad)
(bad)
call
aas
dec
add
add
add
aas
dec
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
lock
dec
add
add
clc
aas
dec
add
add
add
add
add
or
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
add
add
dec
add
add
jo
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
enter
and
add
rol
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
jmp
inc
dec
add
add
add
fsub
add
(bad)
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
(bad)
(bad)
call
add
add
adc
dec
add
(bad)
(bad)
push
add
add
inc
daa
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
ins
daa
dec
add
(bad)
(bad)
push
inc
dec
add
add
add
cwde
daa
dec
add
(bad)
(bad)
call
inc
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
les
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
inc
dec
add
add
add
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
(bad)
(bad)
call
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
add
add
add
add
add
inc
dec
add
add
add
aam
dec
add
(bad)
(bad)
inc
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
lock
dec
add
add
clc
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
sub
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
add
pusha
inc
dec
add
inc
dec
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
fadd
add
add
rol
add
add
icebp
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
jmp
inc
dec
add
add
add
in
sub
add
add
add
add
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
pusha
inc
dec
add
neg
jbe
inc
stc
push
stc
and
cdq
cmp
shl
sub
add
movs
mov
scas
(bad)
movs
sub
adc
push
outs
lods
mov
sbb
xchg
adc
(bad)
xor
cwde
cli
push
and
push
pop
not
jp
lea
dec
xchg
or
xchg
xchg
mov
in
out
in
cmp
sub
cmp
pop
sbb
pop
add
add
push
ins
sbb
mov
dec
fldcw
mov
mov
jg
dec
push
or
cmp
xchg
xchg
add
xchg
dec
clc
cli
out
cmps
dec
inc
gs
fdiv
aam
dec
or
in
daa
outs
les
iret
test
sar
or
add
xchg
cmps
sub
js
rcr
jmp
scas
sti
mov
nop
jbe
mov
aaa
loope
jnp
ret
(bad)
int3
xchg
aaa
test
fmul
in
cmp
jb
out
call
test
push
sub
push
mov
sub
mov
ret
fbstp
jne
pop
in
(bad)
int
or
dec
mov
mov
das
jl
inc
jg
mov
sbb
mov
pop
cmp
loope
mov
or
retf
ins
add
popa
push
xor
or
daa
imul
adc
push
into
jb
push
lods
mov
pushw
inc
adc
xchg
pop
mov
rol
mov
pop
enter
daa
div
mov
out
leave
es
push
arpl
sar
mov
bound
data16
push
in
sbb
mov
jns
test
inc
sti
hlt
jmp
cwde
cwde
fwait
rcr
push
push
fidivr
into
inc
fldcw
xchg
jbe
js
or
push
jp
jmp
push
mov
leave
stc
inc
shl
mov
mov
ret
ficom
inc
or
ror
ror
bound
add
mov
xor
mov
xor
inc
dec
jno
stos
test
mov
fs
fld
addr16
sub
addr16
and
and
std
bound
or
fidiv
lahf
inc
cmps
add
sbb
daa
jmp
aad
jns
mov
out
fst
jbe
bound
int3
mov
and
es
add
mov
xlat
(bad)
pop
adc
adc
mov
stos
cmp
inc
and
dec
push
push
test
lock
mov
icebp
sahf
pusha
daa
push
int3
or
sbb
push
test
and
cmp
xlat
adc
scas
nop
add
jbe
and
cli
pop
nop
sbb
mov
ret
lods
shl
push
enter
stc
arpl
mov
xor
daa
(bad)
xchg
fisubr
and
and
mov
cmps
push
mov
mov
mov
cmp
lock
imul
cdq
push
jge
fs
or
cld
clc
daa
adc
inc
sub
inc
or
loopne
sbb
adc
xor
sub
ds
daa
(bad)
mov
out
out
es
mov
aas
leave
xchg
and
jle
outs
fstp
pop
xchg
mov
mov
jecxz
fnstcw
jmp
xor
jb
into
jge
pop
stos
in
ins
loopne
push
jbe
push
retf
aaa
jmp
cmp
add
and
fiadd
(bad)
int3
xor
ret
test
dec
or
cmp
cwde
sbb
into
out
repz
pushf
push
popf
movs
pop
in
xor
jbe
(bad)
cmp
lahf
out
(bad)
pop
(bad)
sti
addr16
int3
sub
(bad)
xchg
mov
out
pop
jbe
mov
push
dec
or
mov
sub
addr16
jno
outs
in
inc
xlat
add
les
jl
je
jmp
out
or
out
daa
pop
mov
jns
sbb
add
retf
xchg
pop
adc
aaa
push
xchg
call
mov
xlat
imul
fs
pusha
enter
mov
pop
scas
inc
js
pusha
cmps
mov
inc
movs
mov
and
jg
hlt
add
push
sbb
jnp
xor
mov
loopne
idiv
xchg
aaa
jnp
test
imul
gs
mov
ja
shr
mov
movs
ins
mov
cdq
inc
les
cmp
rcl
mov
icebp
sub
into
pop
jmp
adc
and
xor
fsubp
mov
mov
xor
jne
or
clc
ret
int3
enter
push
and
cs
and
push
jmp
mov
mov
sub
sbb
inc
pop
js
or
push
and
es
test
sbb
xchg
cmp
aam
in
fdiv
cdq
xchg
xor
pop
cs
jmp
jle
ja
or
clc
push
push
dec
cmp
call
lods
cmp
enter
call
adc
add
test
aas
pop
inc
outs
xchg
cwde
pushf
push
addr16
sar
and
add
pushf
hlt
add
sub
inc
dec
repz
mov
jmp
cdq
js
rol
lahf
add
mov
mov
jg
xchg
pop
inc
sti
ja
jbe
dec
xor
movs
sbb
adc
jmp
(bad)
cmp
loope
imul
in
stos
sar
push
fcomi
xchg
inc
adc
push
stc
or
push
jl
pop
sbb
sbb
in
adc
jbe
out
push
enter
aaa
sbb
push
mov
dec
xchg
add
xor
popf
push
push
or
xchg
mov
jbe
popa
lods
es
mov
pop
test
xchg
cli
imul
push
sbb
je
mov
mov
shr
mov
aam
cmps
cmps
add
mov
fsub
or
lahf
sbb
jns
(bad)
movs
hlt
rol
xor
data16
movs
push
fucom
jns
push
aaa
sbb
push
sti
jg
aaa
idiv
fwait
pop
dec
xor
es
das
lods
lods
cmp
lea
xor
dec
mov
loopne
repz
lds
scas
and
add
xor
push
sbb
sub
jle
or
jno
xchg
fild
arpl
cwde
stos
mov
pop
ja
push
inc
inc
ret
and
ret
sub
mov
stos
jb
je
mov
int
cmp
jecxz
or
push
push
pusha
fst
in
pop
pop
mov
cmps
fnstenv
scas
mov
shl
or
(bad)
dec
mov
ret
sub
mov
js
sbb
outs
inc
adc
enter
cmp
adc
dec
je
xchg
fcmovb
inc
je
stos
stc
lahf
ja
daa
mov
clc
dec
sub
aad
cdq
or
adc
(bad)
aas
aad
push
pushf
stos
pushf
push
and
or
mov
push
lea
push
aaa
mov
movs
jns
test
pusha
pusha
inc
mov
leave
ficom
bnd
mov
idiv
scas
int3
cmp
in
pop
outs
jle
je
(bad)
cmp
icebp
dec
sar
(bad)
in
test
xor
xlat
cwd
push
sub
div
inc
mov
outs
hlt
cdq
fdiv
mov
mov
outs
sbb
lods
retf
cdq
mov
test
dec
mov
adc
or
mov
adc
scas
sbb
clc
out
pop
mov
lock
cld
in
(bad)
sub
mov
xor
test
jae
push
mov
dec
clc
pop
dec
pop
jl
push
(bad)
enter
iret
cdq
push
fsubp
out
sahf
clc
div
add
test
popa
mov
test
inc
idiv
ja
test
add
and
inc
imul
add
sub
push
movs
fnstenv
int3
mov
push
ins
movs
lock
(bad)
sbb
fbstp
adc
ror
outs
test
jle
or
out
push
mov
test
jb
jns
es
fld
push
mov
je
push
adc
push
dec
jge
shl
(bad)
jmp
and
aaa
cmp
xor
or
adc
xchg
jmp
and
mov
sub
xor
into
fdiv
stos
mov
fsub
push
lods
inc
test
daa
shr
pop
das
js
push
jge
daa
nop
(bad)
and
sbb
mov
and
adc
and
popa
jmp
xlat
push
int
sar
cmps
fdivr
and
mov
xchg
cmps
call
adc
les
out
(bad)
hlt
lods
sub
clc
jno
retf
inc
xchg
jo
ja
inc
sub
dec
inc
rcl
fist
dec
fdiv
mov
mov
xchg
jl
xchg
clc
cwde
scas
push
outs
dec
daa
repnz
imul
aam
push
fld
repnz
dec
xchg
aad
pop
std
gs
sub
xrelease
dec
enter
cmp
xchg
js
enter
xchg
ret
cmp
push
je
sub
loope
jmp
dec
(bad)
cmp
and
sub
cdq
sbb
pushf
jno
(bad)
movs
push
repnz
cmc
(bad)
mov
adc
pop
mov
sbb
inc
leave
fdiv
or
(bad)
shl
imul
pop
xor
movs
pop
lods
pop
pusha
xchg
call
cmp
leave
mov
mov
dec
xor
das
sbb
or
ror
sub
sub
mov
mov
arpl
mov
ret
clc
or
xlat
cwde
loopne
call
movs
daa
mov
retf
rol
jl
test
(bad)
cmp
test
shl
test
lods
xor
repz
std
xchg
(bad)
pop
sub
inc
or
pop
cmp
aaa
push
sub
repz
js
shl
or
or
into
(bad)
cli
inc
xchg
dec
add
pop
scas
stos
sbb
imul
call
out
push
les
mov
mov
adc
and
add
aas
adc
daa
pop
jne
test
pop
mov
jno
jbe
shr
add
adc
push
or
idiv
cmp
jg
fsubr
jge
movs
adc
outs
push
or
push
or
or
jnp
push
test
push
jp
daa
push
or
cmp
jecxz
inc
fldcw
inc
fnstcw
xchg
ret
jae
int
inc
jle
cmps
lods
jl
push
inc
fs
or
cdq
pop
and
cmp
mov
dec
adc
mov
mov
stos
sub
mov
xor
stos
(bad)
sbb
retf
fcom
(bad)
fs
sub
cmp
je
fnstcw
or
xchg
sub
mov
xchg
test
adc
in
push
xchg
xchg
movs
sti
pop
stos
push
xor
or
push
popa
repz
lds
int3
int3
(bad)
ins
mov
leave
inc
icebp
cdq
mov
idiv
sub
add
in
test
ss
pop
js
jmp
iret
mov
push
lds
push
outs
mov
arpl
pop
cmps
or
pushf
scas
je
shl
dec
retf
cmp
push
push
xchg
push
mov
mov
jge
push
sbb
jnp
int3
inc
fdivr
(bad)
dec
cmp
(bad)
icebp
neg
aas
jns
pop
cmps
cmp
mov
dec
leave
cdq
dec
cmps
sub
fst
in
cdq
idiv
sbb
(bad)
sbb
cmp
and
sub
sti
mov
or
ja
fidiv
xor
xchg
out
cmp
aam
mov
aam
jmp
mov
fcmovbe
pop
mov
daa
cmps
push
test
fmul
hlt
push
pop
test
retf
data16
int
mov
(bad)
stc
scas
mov
stc
hlt
ins
out
popf
dec
mov
in
shl
or
ss
pop
stos
xchg
ins
stos
push
pop
rep
mov
cmp
cmps
adc
in
shr
xor
jp
and
enter
stos
mov
cwde
call
pop
rcl
sbb
xor
arpl
lahf
movs
ror
or
cmp
xchg
cmp
es
test
push
sbb
ficom
dec
popa
sbb
sub
call
iret
ret
push
cmp
mov
push
mov
xor
movs
aam
out
pop
enter
pop
dec
loope
fucomp
(bad)
sbb
xor
mov
ret
pop
pop
(bad)
out
push
lods
scas
cmp
sbb
jbe
out
sbb
sbb
into
jge
cld
test
push
(bad)
ror
scas
aaa
les
rcl
pop
push
(bad)
repz
je
dec
cmp
sbb
into
retf
jge
push
lods
(bad)
fdiv
dec
cmp
mov
ret
mov
in
ss
jmp
(bad)
loopne
push
bound
jmp
mov
push
mov
cmp
mov
repnz
lahf
sbb
sub
call
push
jge
jmp
in
cmp
jecxz
cmp
sub
xchg
out
(bad)
mov
popf
daa
push
stos
js
stos
in
mov
mov
(bad)
jne
je
(bad)
std
cmp
pop
scas
xchg
sub
cdq
in
pop
cmp
imul
push
into
test
sbb
or
(bad)
sub
pop
(bad)
into
jne
pop
aam
mov
cmps
cmp
call
push
jns
cld
aaa
sti
cmps
idiv
in
lods
adc
out
or
add
inc
fadd
push
inc
rol
ja
jae
jne
mov
retf
js
inc
adc
mov
aaa
imul
xchg
inc
call
fucomp
inc
stc
cwde
aaa
xchg
push
fstp
inc
ins
mov
inc
sub
imul
xlat
sbb
adc
xchg
dec
enter
js
test
outs
leave
mov
sub
add
xor
inc
clc
stos
out
ja
mov
scas
test
xchg
cmc
rol
sbb
(bad)
out
mov
lock
in
std
jo
mov
iret
cld
aad
or
sub
fadd
ins
pop
jl
dec
enter
(bad)
push
sbb
lahf
dec
out
(bad)
add
ds
push
les
mov
and
push
push
(bad)
call
out
test
cs
repz
push
not
fsubrp
out
aad
push
daa
mov
push
bndstx
push
jmp
daa
push
mov
out
xor
pop
sbb
movs
dec
inc
mov
mov
and
cld
daa
ret
add
mov
sub
or
retf
int3
pop
(bad)
dec
dec
enter
stc
sbb
pop
and
add
ds
push
push
ficom
adc
sub
mov
(bad)
test
xchg
mov
mov
pop
dec
test
jge
aad
test
imul
inc
call
in
in
leave
xchg
std
and
add
mov
ror
and
enter
jle
cli
mov
mov
adc
jbe
adc
data16
cmp
jo
pop
adc
mov
imul
imul
and
loop
mov
ficomp
ins
and
mov
mov
push
push
dec
xchg
fdivr
mov
or
(bad)
enter
cmps
cwde
xchg
mov
xor
mov
daa
pop
and
stc
cmp
mov
leave
xor
xor
gs
inc
sub
ds
add
int
clc
lods
aaa
(bad)
shl
clc
inc
sbb
xchg
popa
push
sub
jns
sub
enter
mov
test
mov
inc
fdiv
xchg
push
mov
sbb
lods
push
imul
mov
cmp
lea
ins
inc
push
inc
inc
push
or
call
and
cmp
neg
push
mov
stc
push
push
(bad)
fwait
push
inc
rcr
cmp
(bad)
sub
pop
(bad)
mov
lods
daa
sub
(bad)
loope
std
push
call
cmp
pop
add
test
imul
int3
in
jo
inc
cdq
jne
sub
js
sbb
rcl
add
jnp
adc
das
jle
cmp
or
packsswb
int
jge
push
sub
fst
mov
cmp
call
ins
sti
popf
out
fstp
int3
fnop
pop
xchg
xor
shl
dec
inc
sahf
pushf
add
cdq
std
je
in
test
add
adc
add
jne
and
add
or
hlt
xor
push
xchg
shl
ret
clc
xchg
lock
fild
xchg
jle
mov
xchg
jae
xchg
add
loope
jp
movs
pop
loope
mov
cld
ja
sbb
ins
cmp
loop
jae
jecxz
cmc
mov
out
mov
out
mov
cmp
sbb
(bad)
mov
adc
icebp
out
jae
or
xchg
out
loope
push
sar
push
(bad)
pop
jne
or
lods
inc
pop
ja
xchg
test
cmps
aad
jmp
aad
ret
dec
sub
popa
jbe
shr
call
push
lea
jne
cmp
stc
scas
jmp
or
adc
push
inc
pop
add
jp
arpl
(bad)
jmp
fnstsw
call
mov
and
lahf
or
cwde
pop
xchg
pop
cwde
cmps
cmp
push
das
hlt
adc
adc
push
leave
xchg
into
imul
fist
repz
inc
or
adc
pop
pop
int3
jl
jne
push
xchg
movs
push
inc
imul
(bad)
mov
ds
jg
jp
cmp
fwait
in
lods
jmp
xchg
adc
cmp
in
xchg
push
div
or
jb
add
dec
inc
mov
call
dec
sub
std
clc
mov
dec
mov
xchg
inc
sub
or
loope
mov
mov
leave
push
(bad)
jo
(bad)
sbb
test
cs
jno
adc
cmp
jae
arpl
jne
inc
leave
std
sub
addr16
imul
(bad)
(bad)
and
inc
cli
scas
inc
cmp
sub
or
add
xchg
cmps
push
pop
(bad)
push
jnp
or
mov
into
(bad)
sbb
aaa
cmp
addr16
push
lds
and
xor
gs
sbb
mov
sub
aam
ret
lods
cli
leave
ror
nop
sub
mov
adc
push
sahf
jl
pop
push
inc
(bad)
jae
and
xchg
sub
push
into
mov
push
push
popf
sbb
ret
pop
inc
stc
or
pop
jno
in
lahf
mov
dec
loope
iret
test
sahf
cmp
aaa
jnp
xchg
pop
pop
push
fdivr
je
inc
mov
stos
add
cmp
int3
(bad)
xor
popa
mov
inc
add
aam
js
cli
ret
clc
mov
ss
dec
bound
xchg
stos
call
mov
sahf
jnp
pop
push
mov
jbe
leave
lahf
scas
dec
aas
leave
out
das
cmps
scas
mov
cmp
rol
jne
inc
inc
jno
or
mov
and
xchg
cwde
ror
movs
mov
cmp
test
push
cmp
gs
call
xchg
pop
test
call
or
xchg
fcom
ja
daa
mov
xor
mov
jg
mov
outs
push
(bad)
adc
cmp
sti
push
adc
pop
sbb
xor
xor
xchg
jnp
push
or
dec
imul
mov
ja
rol
sub
test
int
lahf
push
scas
mov
test
imul
sub
xchg
sub
sub
out
pusha
dec
adc
pop
adc
mov
xor
inc
adc
add
xchg
(bad)
cmps
cdq
inc
mov
xor
aaa
xlat
cmp
mov
cdq
imul
xchg
jmp
mov
retf
pop
cmp
adc
pushf
loope
es
hlt
adc
in
push
aaa
jecxz
bound
dec
and
inc
pop
or
mov
pop
and
inc
xchg
dec
jbe
adc
imul
sbb
inc
aaa
push
xlat
cmp
dec
(bad)
sti
fs
test
cs
ror
(bad)
and
std
or
(bad)
jo
push
mov
mov
push
push
push
mov
mov
inc
fisttp
push
adc
adc
fs
into
mov
fld
es
mov
fwait
pop
enter
lahf
cli
aam
mov
pop
in
jnp
mov
cmps
arpl
ss
push
pop
std
add
dec
sub
fdivr
mov
enter
push
fcom
(bad)
fsubr
test
xor
push
cmp
cmps
pop
jns
inc
aas
adc
adc
jo
addr16
mov
adc
or
xlat
cli
xlat
add
enter
jae
mov
mov
clc
sbb
(bad)
and
add
(bad)
sbb
ret
outs
cmp
jmp
or
pop
idiv
xlat
outs
add
mov
xlat
xchg
or
xchg
sti
stos
mov
mov
pop
mov
dec
mov
cwde
sbb
push
add
mov
dec
push
test
pop
push
pop
sbb
sbb
xchg
mov
mul
sbb
inc
retf
rol
cli
shr
and
addr16
shl
adc
sub
mov
scas
gs
inc
cmp
test
out
daa
dec
adc
jmp
cmp
jg
repnz
mov
and
jp
pop
add
sbb
shr
int3
pop
cmps
dec
cmp
add
in
pusha
lahf
sbb
lods
xchg
jp
sahf
loop
rcr
imul
call
(bad)
push
pop
mov
jne
pop
xchg
repz
fcom
ins
push
out
pop
mov
out
inc
inc
mov
jge
and
adc
std
je
daa
cmp
pop
pop
dec
fst
shl
shl
adc
mov
xchg
aaa
jmp
mov
retf
daa
pop
out
mov
movs
mov
sbb
adc
std
fld
adc
loope
cmp
or
mov
iret
mov
push
in
xchg
(bad)
repz
pop
les
pop
pop
adc
cmp
inc
mov
fwait
mov
mov
or
cdq
push
retf
retf
lods
xchg
scas
fsub
inc
sahf
sbb
fst
into
fs
sbb
cmps
jno
jmp
sahf
arpl
push
jmp
fcomp
mov
cmp
xor
outs
mov
pop
aaa
iret
shl
pop
cmp
je
inc
scas
fcmovbe
je
add
lahf
das
retf
inc
or
out
push
mov
jecxz
mov
cs
repnz
enter
mov
mov
cmp
cwde
cmps
(bad)
(bad)
mov
mov
mov
mov
and
xor
and
je
leave
dec
cmp
or
pop
jb
inc
mov
cmp
xchg
leave
sub
shr
test
adc
ss
and
int
add
jbe
int
and
loop
xchg
inc
or
loopne
scas
mov
cmp
mov
int3
ss
cmp
inc
aas
imul
ins
mov
out
push
(bad)
mov
cmps
adc
leave
loop
jge
das
lods
icebp
(bad)
cmps
dec
call
test
adc
mov
mov
cmp
or
pop
aaa
inc
sub
addr16
ret
sub
sub
and
dec
jge
xor
fist
push
pop
and
push
ret
sbb
xor
xchg
lods
pop
fsub
ins
mov
sar
sub
push
into
aam
fptan
es
cmp
inc
sub
jns
es
inc
arpl
jmp
dec
dec
sbb
sub
jl
lods
data16
cwde
push
sbb
fadd
fnsave
push
cwde
test
stos
imul
ins
mul
shl
(bad)
dec
push
pop
push
inc
not
fs
and
push
nop
xor
pusha
or
add
cmp
add
es
inc
and
or
bound
sub
std
mov
lods
mov
out
out
fcomp
mov
imul
xchg
test
outs
jb
(bad)
and
push
addr16
mov
mov
test
mov
lods
out
mov
pop
dec
adc
pop
pop
pop
push
push
jno
loope
pop
clc
cmp
icebp
push
cwde
mov
rcl
scas
sub
daa
xor
popa
mov
stos
out
xchg
fnstenv
fs
xor
sub
jns
ret
es
cdq
mov
iret
mov
ret
fistp
loopne
inc
push
call
xchg
fsubr
mov
or
pop
cmps
leave
mov
cwde
cmps
rcr
data16
std
test
icebp
xchg
jae
inc
jns
or
mov
pop
ins
or
scas
sub
loope
out
imul
loop
jbe
xchg
mov
jecxz
jbe
cmps
sahf
jbe
ins
cmp
ins
int3
and
dec
push
jp
sub
scas
mov
cmp
call
sbb
test
push
push
inc
scas
and
sub
inc
mov
lods
jno
mov
jmp
inc
cmp
add
(bad)
pushf
in
out
xlat
mov
mov
xchg
xchg
jbe
pusha
dec
fisub
retf
pop
xor
pop
cdq
mul
xchg
mov
push
xchg
rcl
loope
dec
pop
sbb
jne
fcom
es
add
sbb
leave
mov
mov
adc
dec
xchg
test
xor
pop
out
gs
fwait
aad
xchg
add
(bad)
test
xchg
lods
jmp
sbb
sbb
mov
add
add
in
xchg
xchg
or
sub
pop
pop
sub
clc
cmp
or
out
sbb
push
outs
adc
xchg
push
(bad)
xchg
jmp
inc
cmp
in
or
add
movs
(bad)
xor
movs
les
(bad)
cwde
dec
cdq
sub
push
sbb
je
and
push
pushf
ins
pop
jp
rcl
fldenv
adc
loop
or
ja
sub
fcom
ret
sub
xchg
or
jmp
mov
jne
call
mov
call
xlat
mov
xchg
cmp
push
or
jbe
aam
inc
mov
dec
mov
cmp
sbb
xchg
mov
push
jge
mov
add
push
imul
(bad)
sub
adc
push
std
(bad)
in
xchg
leave
sub
sbb
mov
mov
ss
mov
jne
jecxz
sti
(bad)
lea
push
pop
popa
out
retf
scas
add
cs
cld
outs
xchg
dec
pop
jne
in
push
sbb
mov
ins
retf
push
test
cld
cld
xor
shr
aad
ja
ds
jb
sbb
gs
sahf
cdq
push
dec
push
mov
jmp
inc
mov
push
jnp
sbb
lods
addr16
dec
cdq
cs
enter
in
fadd
mov
mov
adc
stos
add
shufps
(bad)
addr16
lahf
xchg
dec
mov
and
or
(bad)
push
movs
jbe
xlat
loope
lahf
popa
mov
add
mov
mov
cli
jmp
in
jmp
faddp
retf
aaa
fst
aas
jo
out
pop
push
inc
int3
inc
rcr
cmps
cmps
fnsave
sbb
push
sub
test
cmp
or
das
cmp
push
or
(bad)
repnz
and
pop
outs
mov
enter
shr
adc
push
ror
cli
test
mov
loope
aaa
mov
mov
adc
jbe
and
jns
push
pop
out
rcr
mov
xchg
outs
int
mov
mov
push
cwde
or
push
mov
and
stos
call
jle
adc
mov
scas
int
neg
push
jne
xor
dec
data16
fabs
push
out
lock
lods
(bad)
jmp
shl
(bad)
xlat
retf
sub
(bad)
push
add
maxps
cmps
imul
fisubr
xchg
iret
sbb
mov
(bad)
mov
push
and
pop
ss
and
mov
mov
cmp
fidiv
idiv
imul
mov
data16
xlat
ss
mov
pop
ds
cli
outs
jo
ret
dec
shl
and
mov
jo
scas
xlat
fcomp
(bad)
jns
fnstenv
jmp
dec
repnz
push
add
fwait
push
xchg
sbb
fild
in
fldcw
jmp
outs
push
imul
scas
arpl
retf
add
xor
push
cmps
in
pop
mov
inc
neg
ins
outs
jns
push
arpl
jb
cli
sub
or
retf
jmp
sahf
and
lahf
mov
test
lds
js
mov
cmp
cmp
(bad)
fld
sub
push
and
jno
ins
bound
push
and
jle
sbb
add
or
xor
movs
mov
cmp
pop
ds
mov
jne
mov
addr16
adc
sbb
ja
cwde
xor
or
xchg
shr
aad
inc
das
pop
mov
dec
mov
nop
outs
mov
push
sbb
fcom
(bad)
jae
shl
mov
or
aad
sbb
and
scas
pop
test
cld
adc
adc
pop
push
cmps
cmc
loop
dec
inc
dec
xchg
jbe
test
rol
jg
(bad)
cmp
mov
cmps
jl
stc
jle
cld
or
mov
pop
data16
push
cmps
jno
mov
scas
movs
out
mov
xchg
jbe
out
pop
inc
pop
adc
add
shl
test
loope
push
lods
xor
mov
mov
sbb
ja
sbb
addr16
fst
outs
mov
mov
xchg
and
sti
mov
xor
aaa
bnd
out
inc
mov
imul
add
dec
xchg
imul
push
fcomp
pop
int
enter
adc
test
adc
fld
cwde
xchg
test
xlat
sbb
mov
push
sub
jmp
out
rcr
xlat
mov
sub
mov
iret
cs
add
pop
mov
(bad)
cs
aas
mov
cmps
xchg
inc
and
pop
enter
push
dec
xor
retf
loopne
xchg
stos
mov
popa
push
and
pop
jbe
test
push
cmp
mov
jmp
cmc
int
xor
mov
xabort
test
std
mov
mov
jns
jbe
jmp
pop
jp
cdq
(bad)
shr
and
mov
repnz
push
call
mov
cmp
sbb
xor
rcl
mov
xor
adc
stos
and
cmp
hlt
jmp
fwait
pop
mov
inc
je
sbb
push
jg
pop
aaa
dec
pop
jnp
jns
xchg
mov
std
mov
fst
cli
leave
push
std
pusha
sbb
sbb
sbb
(bad)
mov
xchg
jns
cdq
push
(bad)
xlat
rcr
js
and
test
(bad)
out
std
iret
pop
fstp
cmp
(bad)
in
add
es
xchg
inc
int
dec
xor
push
mov
or
mov
jmp
jge
addr16
mov
pop
fst
in
xchg
add
and
push
enter
pushf
arpl
adc
mov
add
ret
mov
mov
xchg
bndldx
sahf
fldenv
adc
into
or
int
sbb
es
imul
xchg
repnz
and
pop
int
out
fwait
les
push
cli
jne
stc
add
cdq
rol
mov
xchg
mov
mov
jns
or
loope
fldenv
push
cmps
mov
and
in
dec
mov
or
repz
idiv
push
mov
cmp
int
mov
xchg
pop
(bad)
mov
sbb
stc
inc
enter
sub
and
pop
inc
sbb
loop
or
jbe
or
and
xor
sbb
cwde
inc
cmp
mov
lods
div
push
or
mov
push
sub
sub
mov
div
jge
int3
pusha
xchg
add
aam
add
mov
std
inc
push
cli
imul
mov
cmp
push
jnp
cli
push
jle
push
daa
cmp
mov
outs
and
mov
mul
out
in
call
dec
inc
sbb
xchg
stc
pop
sti
mov
call
cwde
dec
pusha
inc
movsx
out
fs
xchg
test
cmp
mov
test
xor
ret
jo
inc
mov
xor
ins
push
in
hlt
or
pusha
es
and
(bad)
sbb
push
loopne
sub
xor
pop
ins
mov
sub
adc
xlat
push
aad
xchg
inc
call
aas
das
mov
mov
xchg
add
jo
pop
ret
add
mov
pop
cdq
(bad)
xor
push
or
cli
or
pusha
fs
jge
cld
es
retf
mov
nop
mov
test
pop
scas
sub
scas
and
mov
or
sub
inc
jae
jmp
aas
(bad)
sbb
add
call
jbe
jmp
mov
les
xlat
push
mov
sbb
push
out
ret
cmp
js
adc
cmps
jmp
jnp
out
push
sbb
dec
cmp
fmul
xchg
mov
or
out
jp
mov
or
mov
xor
loop
xor
sbb
sahf
xor
fidiv
je
pop
xor
fisubr
in
and
add
rcl
mov
jne
out
jecxz
jmp
call
mov
sub
stos
rcr
mov
dec
ins
outs
jo
pop
xor
mov
cmp
jle
or
mov
scas
dec
ret
in
push
xor
out
cmp
mov
idiv
fsubr
lods
lds
lds
aad
(bad)
lock
stc
sar
inc
imul
inc
and
xlat
aam
ret
sub
in
mov
jne
lods
mov
aam
mov
ins
inc
das
call
cmp
ja
jp
push
mov
and
call
adc
or
mov
aas
inc
jne
mov
out
ja
sub
jno
rcl
and
les
pushf
adc
inc
sbb
movs
jbe
cmps
mov
lds
cmp
jmp
aas
mov
inc
jl
call
pop
call
test
or
and
mov
popa
dec
mov
daa
mov
imul
fst
and
inc
fcom
sahf
xchg
fdivr
(bad)
sti
mov
and
jg
stc
scas
(bad)
xor
jo
push
cmp
(bad)
adc
outs
pushf
loopne
repz
ror
pop
out
(bad)
clc
inc
sbb
daa
bound
inc
mov
and
or
add
cmp
les
lods
cs
adc
mov
ins
popf
add
mov
mov
aad
jmp
retf
mov
mov
cmps
mov
push
ffreep
mov
fsubr
xchg
push
je
jle
addr16
xchg
ds
xor
(bad)
mov
inc
push
loop
and
or
and
outs
push
cmc
xchg
dec
or
pop
inc
jnp
test
dec
stos
mov
dec
dec
inc
enter
add
sbb
mov
and
retf
mov
in
or
jb
mov
inc
xchg
dec
inc
inc
and
or
popa
pop
dec
pop
dec
fld
les
push
leave
imul
cmpxchg
jp
mov
leave
jl
daa
out
xor
add
shl
pop
and
mov
lods
(bad)
mov
lods
xchg
cli
adc
mov
fisub
mov
addr16
adc
out
or
xchg
dec
idiv
sti
push
pop
cmp
xor
pop
sbb
dec
inc
in
es
sbb
ret
enter
int3
mov
clc
(bad)
fdiv
cmp
lahf
cmp
push
xchg
cmps
(bad)
lds
xor
pop
loopne
sbb
imul
cmp
jnp
add
dec
ret
sbb
mov
test
fnstcw
out
push
sub
add
cwde
inc
adc
shl
mov
clc
cmp
jns
adc
shr
repnz
and
repz
cmp
repnz
fldpi
(bad)
repz
aam
mov
or
push
mov
pushf
popf
jmp
out
mov
dec
push
out
pop
cdq
jb
mov
sub
loope
or
mov
mov
shl
add
outs
or
add
mov
dec
hlt
jle
jmp
or
sbb
sbb
sub
out
xchg
and
xchg
stc
sbb
fdivr
fsub
scas
jbe
xor
jecxz
cmp
adc
test
mov
inc
mov
rol
cmp
adc
push
jbe
mov
push
ror
aam
mov
mov
cmps
mov
add
punpckhwd
mov
cmp
adc
(bad)
dec
xchg
addr16
fwait
test
loopne
xchg
or
pop
push
push
fsub
sub
adc
cmp
sbb
and
push
(bad)
std
fwait
repz
dec
call
lea
jno
test
out
mov
retf
out
mov
xchg
loope
cdq
cmp
inc
sbb
pop
push
ds
xchg
addr16
jmp
(bad)
call
inc
pop
jb
adc
gs
sar
xchg
aam
jno
enter
(bad)
stos
les
lahf
fwait
movs
in
xor
jo
or
dec
adc
or
movs
lods
mov
push
jmp
mov
and
sbb
push
mov
pusha
jb
bound
jg
and
adc
pop
shr
mov
add
mov
je
mov
ret
pop
je
add
jns
pop
mov
pop
pop
movs
retf
push
test
test
jnp
mov
out
scas
mov
xor
xor
sub
fstp
test
mov
cmp
loop
scas
enter
mov
addr16
xchg
adc
daa
ins
out
aaa
ror
in
mul
add
jmp
sbb
mov
push
les
mov
add
nop
fld
push
jge
inc
repz
daa
dec
loopne
or
jmp
ss
push
gs
or
call
adc
and
ret
lea
push
sub
cmps
push
mov
out
mov
sbb
sub
or
jbe
ja
ror
(bad)
sub
icebp
jns
bound
or
sbb
cmc
mov
mov
and
dec
jl
add
cmp
lahf
loop
aad
or
leave
cmps
xor
imul
push
push
push
fiadd
pusha
out
movs
push
loop
loop
popf
push
pop
or
in
sub
xchg
icebp
dec
hlt
jb
lods
add
jae
outs
mov
mov
movs
adc
or
or
cmp
push
pop
mov
xchg
cdq
aaa
popa
mov
or
inc
inc
mov
dec
pop
(bad)
cmp
fs
cmp
xchg
mov
mov
lea
xor
ret
sub
aas
and
and
cmp
dec
xchg
add
xchg
push
bound
stc
inc
push
and
test
xor
or
(bad)
cwde
xor
xor
dec
loope
sub
arpl
outs
sbb
mov
fisub
push
retf
push
in
loope
test
mov
adc
sbb
mov
push
cmc
dec
test
xor
push
push
inc
or
lds
adc
in
add
xchg
pop
bound
out
ror
pop
sub
cs
lock
push
(bad)
mov
pusha
cwde
fidiv
out
pop
jne
push
jno
sub
out
cmp
out
ds
cmp
(bad)
sub
mov
inc
sbb
aad
sbb
add
fwait
sub
push
push
adc
loop
movsx
jmp
inc
push
mov
cmps
or
mov
rol
popf
mov
(bad)
and
mov
adc
and
push
popa
add
jnp
leave
loop
xchg
mov
fld
mov
xchg
cmp
or
and
or
cmp
or
cmp
in
dec
jmp
test
into
shl
xchg
lods
bound
das
push
daa
pop
aaa
xchg
pop
aas
scas
jge
mov
rcr
add
test
pop
fadd
sub
and
inc
scas
cmp
inc
dec
mov
(bad)
or
mov
push
std
(bad)
lock
es
iret
xor
fprem1
or
sbb
int
and
cmp
lods
test
(bad)
inc
jno
jle
popf
pushf
jnp
xor
xchg
aas
aad
(bad)
mov
xchg
arpl
inc
sub
push
fcmovne
dec
jbe
mov
out
(bad)
cmp
lock
dec
add
jge
dec
es
lock
pushf
sbb
out
(bad)
(bad)
mov
cmps
dec
push
mov
push
ins
mov
leave
mov
stos
dec
inc
es
sub
popa
xchg
ret
in
xor
(bad)
ins
loope
sbb
pop
out
cmp
or
mov
inc
and
cs
(bad)
cmp
or
out
sbb
add
cmps
dec
je
dec
sub
test
out
xor
mul
xchg
int3
push
cwde
shl
xor
cwde
jne
movs
add
ret
mov
aam
(bad)
retf
fiadd
mov
xchg
int3
rol
mov
inc
(bad)
mov
ficom
jne
popf
loop
repz
pusha
cdq
xlat
es
inc
sub
bound
push
lds
fisub
leave
out
stc
dec
mov
mov
test
dec
(bad)
out
push
cmp
test
(bad)
pop
daa
cmp
ins
mov
cmp
xlat
mov
out
jmp
outs
push
mov
add
dec
ret
push
ins
loop
xchg
mov
push
and
movs
fwait
popa
sbb
daa
xchg
sbb
ins
fs
jo
cmp
sti
dec
sbb
inc
jne
pop
jns
fsubr
imul
pop
mov
or
mov
mov
(bad)
in
xchg
inc
jmp
mov
dec
mov
in
(bad)
(bad)
or
pop
daa
or
mov
and
aas
rcr
into
sub
popa
test
daa
dec
push
pop
mov
inc
inc
rcl
sahf
stc
jne
gs
shl
pop
das
pop
out
pop
push
and
out
popa
mov
fmul
pop
outs
sbb
mov
stos
dec
and
inc
xchg
mov
and
popf
sbb
xchg
fsincos
movs
mov
jae
stos
mov
pop
cmp
mov
jg
dec
ja
imul
fiadd
clc
je
movs
dec
jnp
mov
pop
sbb
inc
psubsw
pop
inc
mov
icebp
pop
cmp
jle
mov
out
push
push
into
jnp
into
or
push
mov
les
lds
push
mov
pop
xor
shl
mov
mov
retf
icebp
dec
lods
dec
test
mov
cs
adc
fcom
xchg
push
aam
xchg
or
in
stc
div
into
xchg
dec
test
jns
aam
in
and
js
outs
int3
cli
fild
lods
cmps
call
aam
mov
out
sbb
(bad)
ja
dec
sbb
xor
and
fld
jns
jp
mov
outs
add
cmp
dec
cmp
push
dec
test
cmp
scas
fnstsw
mov
mov
xor
mov
movups
int
add
sub
test
xchg
push
push
xchg
mov
lods
fsub
call
cs
jl
dec
push
cdq
add
fwait
test
xchg
cwde
mov
mov
cli
cs
cli
push
leave
add
pop
in
inc
xchg
repnz
fs
or
pop
arpl
push
push
inc
push
sub
mov
and
jmp
scas
shl
movs
data16
fadd
mov
xchg
bound
mov
or
mov
jbe
retf
dec
or
loop
(bad)
je
nop
clc
jae
push
jbe
xchg
xchg
mov
push
mov
sbb
dec
mov
add
pushf
neg
call
ficomp
xchg
hlt
std
clc
dec
int
shr
daa
add
push
add
int3
sar
out
inc
dec
ret
dec
(bad)
loop
fmul
icebp
jo
clc
xor
lods
sub
dec
loope
es
ret
lea
push
imul
xchg
sbb
push
or
push
loop
fs
jge
cmp
mov
(bad)
adc
ret
and
jge
inc
test
icebp
cld
dec
inc
sbb
ret
and
(bad)
mov
push
xchg
shl
jo
jnp
movs
or
sub
and
loope
cmp
cs
add
loope
loope
lods
stc
sub
sbb
xchg
push
push
and
mov
xor
ja
push
dec
ins
cmp
das
and
pop
pop
mov
stos
aad
(bad)
(bad)
test
fst
clc
lea
sub
mov
iret
adc
push
and
std
push
dec
sbb
add
cmc
out
sti
cmp
dec
(bad)
mov
add
sbb
daa
test
push
xlat
call
mov
inc
add
jmp
leave
imul
and
leave
cmp
push
inc
add
out
sub
clc
dec
loopne
or
lock
fcom
daa
stc
and
bound
xor
movs
jge
dec
(bad)
dec
int
jmp
test
inc
inc
fisttp
test
pusha
popa
sbb
leave
xlat
and
sub
into
mov
out
push
inc
mov
add
mov
clc
aaa
and
add
cmp
(bad)
jbe
mov
imul
mov
cmp
add
and
mov
enter
sahf
outs
cli
outs
fcmove
jo
inc
out
or
dec
jg
(bad)
iret
sbb
pop
cmp
mov
xchg
xchg
mov
xchg
clc
imul
daa
addr16
les
out
imul
adc
rol
push
outs
nop
sub
iret
mov
mov
mov
icebp
and
call
(bad)
in
mov
cmp
sbb
xchg
push
dec
cmp
cmp
mov
pop
jl
adc
add
xor
xchg
push
cmp
xor
xlat
(bad)
mov
pop
xor
aam
leave
push
mov
inc
jge
ror
xor
dec
popf
cmp
adc
inc
xchg
ss
mov
jmp
lods
cmp
ja
arpl
jg
enter
pop
add
imul
sbb
pop
dec
mov
jp
and
sar
jo
jle
push
push
push
aam
fnsave
mov
pushf
sub
in
fidivr
and
mov
loopne
cmp
dec
repz
lds
adc
and
data16
test
mov
push
in
ins
sbb
jbe
stos
mov
test
outs
out
jecxz
add
ja
daa
mov
pop
pop
addr16
pop
xlat
sahf
pushf
stc
or
leave
stos
sbb
call
cmp
add
fst
inc
push
pop
or
inc
daa
mov
sub
cmp
mov
ror
jmp
repz
fisub
jmp
and
pop
mov
push
js
data16
cmps
pop
pop
fisub
hlt
out
mov
push
stc
cs
xchg
sub
jnp
cs
aad
xchg
lds
cmps
lds
cdq
xor
sbb
sbb
add
loopne
mov
mov
mov
mov
jge
inc
imul
test
(bad)
jp
repnz
mov
jbe
fsubr
mov
scas
sub
or
push
xchg
movs
outs
loop
push
mov
movs
stc
mov
cli
lahf
jmp
mov
repz
test
loop
lea
mov
mov
addr16
call
ss
jnp
push
pop
mov
jmp
push
mov
add
scas
mov
les
push
inc
cmp
inc
mov
or
mov
vpsrlw
test
xchg
push
xchg
jb
inc
ins
pop
mov
mov
jl
mov
jle
xchg
hlt
jbe
retf
aam
adc
movs
xchg
and
(bad)
aam
stc
rcl
stc
jmp
mov
std
push
shl
dec
std
(bad)
stos
test
aaa
leave
jb
sti
stos
add
xchg
push
cmp
imul
xchg
fnstenv
jg
js
jnp
ret
ins
or
ins
stos
sub
loop
fucomi
call
xchg
sti
(bad)
jmp
push
daa
shr
or
xor
dec
sbb
xchg
jmp
popf
sbb
fiadd
push
xchg
adc
mov
ins
cmps
lock
jmp
sub
xlat
dec
hlt
cmps
or
xchg
sahf
or
fnstcw
ror
cmp
sub
push
out
ror
jp
inc
xor
inc
inc
jbe
dec
adc
in
(bad)
and
pop
popa
sbb
jb
fild
aam
mov
or
cdq
sub
inc
popa
mov
and
fld
stc
pop
push
mov
leave
dec
inc
lock
or
icebp
(bad)
cwde
into
shr
aaa
arpl
test
into
scas
fldcw
xchg
dec
dec
or
jb
and
ds
dec
std
(bad)
retf
push
ja
jnp
pop
mov
pop
inc
rol
mov
hlt
leave
js
mov
xchg
jl
test
fdiv
movs
push
mov
stos
(bad)
shl
cwde
cmovge
pop
cmp
adc
and
stc
pop
imul
fstp
jmp
in
(bad)
pop
out
hlt
sbb
into
call
push
gs
cwde
and
es
fmulp
ds
loop
in
fadd
push
cli
retf
adc
clc
ret
dec
cmp
mov
cmp
lahf
dec
jle
push
loope
xor
popf
fisubr
xchg
xor
push
and
jle
lods
out
push
add
das
cmps
mov
and
(bad)
imul
stos
sbb
mov
jne
ret
cmp
es
pop
imul
ds
(bad)
not
jb
rcl
mov
das
loopne
std
cli
and
adc
repz
imul
dec
js
pop
cli
jmp
or
mov
cmp
sbb
fst
ins
leave
adc
mov
cmp
fcom
icebp
nop
mov
hlt
dec
sbb
adc
cmps
addr16
int3
nop
loop
sti
jbe
inc
pop
push
aam
pusha
clc
lods
aaa
dec
xor
nop
mov
fisubr
scas
sub
and
dec
(bad)
lahf
popf
scas
inc
daa
dec
or
xchg
sbb
and
push
or
and
dec
call
mov
mov
jae
(bad)
loope
jb
and
cdq
fucom
shl
mov
out
loope
lea
push
ins
and
lock
retf
int3
sar
mov
into
adc
cmp
sbb
dec
imul
add
cdq
mov
retf
adc
add
test
jne
das
and
sbb
mov
lock
cmp
inc
sbb
fwait
xor
dec
cmp
jp
in
ja
mov
adc
jmp
es
dec
stos
ja
inc
in
(bad)
or
mov
out
add
loopne
mov
shr
sub
or
sub
pop
mov
pop
cmps
adc
arpl
adc
enter
sbb
shl
stos
and
or
iret
sahf
push
mov
icebp
shr
mov
sbb
adc
cmc
test
out
invd
xchg
mov
es
add
push
push
jo
sub
aas
mov
push
std
idiv
aam
push
aas
(bad)
cdq
xchg
xor
adc
mov
xchg
jle
inc
leave
mov
(bad)
push
sbb
cmp
gs
xor
into
(bad)
xor
jle
adc
imul
mov
xchg
xlat
fsubr
fs
inc
stos
std
and
jne
sahf
in
cld
iret
shr
stos
sub
pop
cmps
xor
test
aaa
shr
mov
dec
push
fsubr
mov
(bad)
aaa
lea
aam
pop
or
xchg
cmp
sti
inc
aad
retf
les
push
bnd
push
mov
mov
push
gs
cdq
fnstcw
cmp
mov
call
sbb
cmp
retf
pusha
pop
inc
dec
inc
cmp
fwait
push
cmp
imul
sbb
or
stos
add
dec
mov
idiv
and
shl
or
lahf
or
xchg
jbe
sub
xchg
lods
stos
sub
pop
sub
mov
and
pop
scas
es
push
sub
cmp
cli
mov
xchg
xor
mov
aad
mov
jp
mov
mov
xchg
or
repnz
sbb
clc
fldcw
xlat
cmp
loop
xor
add
call
mov
pop
and
push
mov
mov
test
in
mov
xor
fist
mov
push
or
mov
xor
enter
push
bound
daa
out
jecxz
je
scas
sbb
repz
mov
and
jnp
xchg
xor
movs
pushf
arpl
push
lods
cmc
mov
xor
cdq
fbstp
push
jnp
dec
outs
ins
lahf
sub
and
stc
jle
dec
and
mov
sub
sub
pushf
xor
adc
xchg
push
push
rcr
das
stos
test
ret
imul
dec
add
pop
mov
fcomi
fwait
add
and
and
popf
push
bound
call
rol
push
push
popa
mov
cs
scas
std
push
hlt
mov
ins
push
fcmovne
pop
cwde
fs
stos
ss
cs
daa
cmp
mov
fcomp
fbld
mov
inc
sub
pop
call
dec
cmp
cmps
icebp
inc
push
pushaw
cmps
or
js
scas
pushf
mov
lods
and
push
js
scas
test
mov
ins
dec
out
inc
sub
fwait
adc
sar
fadd
outs
inc
stos
add
daa
push
dec
lea
fidivr
fisttp
jne
test
mov
inc
imul
call
push
or
enter
aas
(bad)
inc
jne
fdivr
sub
xor
mov
out
push
pop
loope
loopne
mov
mov
es
aad
out
ficomp
pop
stos
sti
sub
push
jb
and
jmp
repnz
pop
mov
mov
fcomp
jecxz
push
pop
xchg
cmp
cmp
clc
xchg
inc
out
mov
shl
xchg
add
lods
inc
pop
cmp
mov
xor
xchg
mov
sub
test
xchg
(bad)
mov
loop
dec
mov
imul
cs
push
and
imul
fnstenv
fdivr
dec
test
xchg
or
jmp
test
out
out
mov
push
mov
mov
sbb
xor
and
xchg
retf
call
jbe
out
inc
and
test
in
push
pop
push
xchg
sahf
fs
(bad)
jb
add
sbb
ss
push
iret
idiv
repz
push
pop
jmp
push
cmp
mov
(bad)
rol
(bad)
stos
push
pop
push
(bad)
cmc
push
pop
push
int3
popa
fstp
dec
out
sbb
cmp
movzx
scas
aas
xchg
in
sub
cdq
and
out
sbb
bound
push
test
(bad)
or
(bad)
aas
or
jae
jmp
sbb
fsubr
in
pop
ret
cmp
cdq
mov
xor
adc
sti
push
push
cmp
mov
xchg
bound
es
push
sub
inc
pop
push
dec
bound
push
(bad)
leave
inc
cdq
dec
loop
out
dec
xchg
xor
test
jge
arpl
fsub
popa
sub
dec
push
daa
jmp
jecxz
outs
retf
icebp
imul
addr16
jns
mov
pop
push
js
jmp
dec
sub
test
ja
mov
sub
jle
xlat
pop
xlat
ins
cmp
pusha
lods
retf
push
cmp
adc
xor
push
mov
xchg
inc
pop
lahf
xor
lea
mov
mov
in
mov
(bad)
js
es
pop
imul
push
and
dec
(bad)
lahf
push
retf
iret
ds
fcom
fisub
clc
fadd
pop
push
sbb
xchg
lods
xchg
shl
fldcw
in
sub
xor
imul
cdq
mov
and
cwde
or
(bad)
dec
inc
cli
jbe
cmps
call
push
xchg
dec
pop
mov
xchg
lods
jb
jmp
sub
cld
shr
ds
mov
push
mov
stc
pop
add
ror
shl
rcr
dec
test
mov
jl
ins
fist
enter
adc
jg
xor
mov
jmp
fmul
fcmove
std
in
xor
pop
je
aam
in
push
mov
lahf
pop
adc
push
dec
aad
add
dec
retf
js
je
call
and
sub
inc
xchg
jo
sub
or
xor
je
xchg
nop
push
jb
fwait
out
jne
add
fisttp
xor
xchg
mov
loop
retf
add
mul
(bad)
adc
add
(bad)
stc
lahf
popf
rep
pop
mov
lahf
push
xor
sub
sub
add
pop
mov
call
movs
neg
mov
push
data16
frstor
or
outs
mov
inc
ds
mov
cli
popf
fdecstp
int
cmps
lock
sub
mov
cmp
movs
test
xchg
dec
sub
mov
stc
pop
imul
out
xchg
into
xchg
aaa
sbb
sbb
sub
das
movs
stos
(bad)
fnstcw
iret
push
xchg
inc
inc
sub
mov
fwait
icebp
dec
add
lahf
pushf
dec
aad
ss
cmc
xchg
out
sahf
pand
cmp
outs
ror
cmps
xchg
xchg
sub
test
push
mov
lea
dec
fisub
inc
cwde
inc
jle
pop
mov
push
mov
xchg
or
fdiv
dec
mov
sub
dec
sub
setno
push
xor
lea
add
cwde
fldcw
cmc
ror
mov
jmp
add
sub
retf
cdq
cmp
add
test
cmps
arpl
(bad)
dec
jbe
fcmovnbe
call
mov
stc
mov
cdq
push
outs
test
cmp
call
mov
popa
sbb
mov
inc
xlat
push
jbe
in
pop
test
cmp
dec
daa
pop
aas
pop
and
dec
call
outs
mov
cmp
cmp
adc
mov
push
jge
ja
mov
sub
popa
sahf
fcomp
mov
mov
adc
call
in
push
dec
add
rcl
ins
lahf
out
fadd
daa
or
pop
cwde
or
mov
cmps
cmc
mov
leave
dec
sub
pop
into
pop
test
and
mov
xchg
xchg
push
shl
enter
pop
(bad)
leave
jmp
and
add
aad
inc
hlt
(bad)
int
sub
push
mov
lods
adc
in
jno
adc
jl
sub
dec
sbb
dec
clc
out
mov
lods
pop
mov
push
movs
add
cmp
push
dec
or
fwait
(bad)
mov
ins
(bad)
scas
xor
add
outs
call
xor
cdq
sbb
fdivr
jns
aas
pop
jle
loop
adc
sbb
pop
mov
inc
cdq
and
jg
cli
ret
xchg
xchg
loope
hlt
mov
aad
sahf
out
nop
push
cmp
push
add
or
xchg
es
stc
xchg
sub
dec
seta
mov
cdq
test
scas
repz
(bad)
(bad)
pop
dec
int
scas
cmp
lds
jne
cs
imul
gs
mov
cmp
rcl
jo
dec
pop
mov
push
mov
add
xlat
jl
lahf
ficom
adc
cmp
daa
dec
push
arpl
jo
sub
cmp
sub
xchg
lsl
push
inc
mov
xor
lds
xchg
mov
outs
repz
sub
mov
sbb
xchg
jo
push
clc
sbb
lahf
xor
add
inc
popf
add
repz
ror
int
add
xor
fisubr
ret
push
push
and
into
cmp
fadd
dec
test
and
and
movs
shl
sar
mul
push
add
dec
sub
lea
ins
pop
stc
lock
push
push
test
(bad)
das
imul
lahf
call
mov
outs
jp
mov
test
in
mov
fisttp
(bad)
stos
cmp
jnp
adc
sub
jnp
pop
(bad)
mul
mov
(bad)
call
dec
ss
fdivr
aas
lds
sub
stos
jae
mov
cmc
pop
pop
cmp
sub
sbb
ror
pop
(bad)
push
mov
fwait
out
dec
mov
ins
jnp
pop
adc
mov
dec
loopne
into
shl
aaa
mov
dec
daa
cmps
inc
into
mov
(bad)
sbb
inc
imul
retf
pop
in
ret
shr
push
and
xor
adc
jno
adc
inc
imul
fstp
les
pop
xchg
call
loopne
sahf
in
sbb
out
sub
xor
xchg
xchg
lods
cmps
test
add
call
mov
adc
mov
(bad)
fnsave
icebp
gs
pop
enter
(bad)
cmp
adc
(bad)
pop
push
es
stos
ds
lock
fstp
ret
out
aam
push
pop
in
(bad)
jmp
dec
scas
f2xm1
lods
(bad)
mov
lds
ret
dec
jmp
push
dec
and
pop
cmp
push
pop
pop
mov
aas
mul
(bad)
and
jns
inc
in
cmp
stc
push
setbe
dec
(bad)
inc
push
mov
fnstsw
inc
xchg
rcr
neg
(bad)
jo
repz
push
icebp
sub
ret
gs
adc
and
jmp
mov
bound
mov
nop
fdecstp
js
cmp
cmps
mov
aad
xor
(bad)
mov
sti
idiv
pop
mov
(bad)
xchg
movs
mov
jb
(bad)
lods
sub
cmp
cld
mov
cmp
cmp
clc
dec
sub
ins
inc
xchg
sbb
popa
cli
sbb
test
(bad)
test
pop
jmp
mov
outs
jns
pop
mov
or
pop
repz
mov
add
jae
rol
out
std
adc
fdivp
popf
mov
rol
cmp
stc
fild
sbb
les
add
jle
dec
or
shl
cmp
loope
aaa
adc
mov
lods
mov
mov
pop
das
xchg
test
out
jae
jp
mov
and
leave
ficom
ss
xor
mov
and
in
pop
jne
loop
or
iret
xchg
xchg
xor
or
fcomp
jge
movs
std
(bad)
call
xor
and
sub
jle
mov
scas
fld
retf
or
push
and
es
mov
out
xchg
push
imul
xchg
pop
mov
inc
pop
adc
mov
test
sub
inc
scas
dec
test
push
sub
das
or
adc
or
jmp
or
and
test
loop
pop
xlat
mov
push
mov
mov
pop
push
sbb
mov
cmp
ins
pop
xor
push
sub
aad
inc
inc
jmp
mov
mov
inc
rcr
sti
fwait
pusha
loope
mov
jno
mov
fisttp
rol
or
and
fidiv
mov
mov
push
shl
loopne
pop
mov
iret
sahf
xor
sub
adc
push
sbb
jo
jb
inc
push
outs
out
daa
imul
(bad)
test
(bad)
mov
adc
mov
sbb
es
mov
in
lock
mov
dec
xor
dec
enter
leave
push
mov
js
js
xchg
pop
adc
jl
push
call
xor
cli
xchg
outs
rcr
test
test
hlt
adc
sbb
in
xor
xor
jbe
push
jmp
stc
test
test
in
rcr
pand
mov
addr16
sub
shr
jle
ss
cdq
es
out
mov
test
push
or
jns
mov
dec
scas
or
jns
scas
addr16
cwde
adc
int3
inc
inc
pop
(bad)
ins
cmp
or
jmp
push
test
(bad)
jne
and
out
pop
test
pop
jle
pop
lar
in
xchg
mov
xchg
mov
out
nop
bound
fcomp
xchg
sbb
jne
dec
cmp
dec
or
cs
push
(bad)
pop
jp
push
xchg
xchg
mov
movhps
cmps
xor
cmp
add
mov
push
fwait
idiv
repnz
sub
fcomp
pop
push
sub
(bad)
jge
fisubr
sti
mov
inc
dec
dec
je
movs
sbb
sub
loope
adc
arpl
cdq
neg
fmul
cmps
loopne
cmp
ret
sbb
js
leave
ins
arpl
loop
ja
inc
stos
loop
es
test
pop
pop
stos
adc
out
mov
cmp
jo
cld
jbe
inc
(bad)
jmp
test
push
shl
jl
cmp
mov
or
adc
mov
xchg
daa
ss
jg
dec
lock
jl
lods
fs
in
movs
leave
cmps
sub
inc
shl
pop
jmp
sbb
xchg
loope
fs
xor
push
nop
cmps
jns
dec
call
shl
sub
jmp
in
aaa
jg
sub
nop
pop
xchg
mov
test
leave
pop
jecxz
xchg
push
mov
and
call
cwde
jnp
push
rol
mov
and
mov
retf
push
sbb
xchg
inc
sbb
cmp
jne
push
xor
xchg
nop
mov
or
(bad)
(bad)
xchg
mov
jbe
test
jmp
les
sub
in
xchg
push
fidiv
jno
neg
pusha
lock
gs
jno
in
repnz
rcl
sahf
std
out
push
(bad)
fistp
push
push
out
shl
call
jbe
or
repz
popf
push
and
adc
adc
xor
dec
out
add
xor
fs
pop
ja
or
adc
cmp
mov
into
cmc
jle
mov
sbb
ror
mov
mov
(bad)
imul
aam
adc
inc
inc
pop
sbb
cmp
mov
mov
fldcw
mov
add
or
test
push
xchg
or
pop
sub
inc
mov
in
push
push
test
loopne
jo
call
fcom
adc
fst
iret
sub
(bad)
xor
popf
rcl
xchg
shr
xchg
jb
outs
stos
mov
aas
ds
int3
and
xchg
clc
popf
xchg
push
test
imul
sub
imul
ret
js
mul
push
cmp
pop
shl
mov
stc
dec
adc
sub
pop
loop
in
xchg
sub
mov
jne
sahf
fwait
jns
cld
mov
cmps
cmp
cmps
jg
cmp
ins
test
out
out
in
mov
xlat
neg
in
imul
mov
xchg
pop
cmps
mov
xchg
repnz
retf
mov
adc
cli
enter
push
or
jo
xchg
inc
ins
(bad)
sahf
shr
pushf
xchg
lahf
pop
aam
add
mov
add
sbb
aas
inc
mov
inc
mov
jns
mov
scas
cdq
rol
fucomi
xchg
in
adc
or
lds
xor
xchg
sub
mov
add
adc
cmp
mov
pop
add
jnp
push
mul
loopne
stos
adc
imul
and
sahf
out
inc
cmp
and
push
mov
js
bound
pop
add
pop
lock
or
mov
adc
mov
or
or
jle
icebp
inc
retf
adc
or
pop
mov
fs
call
outs
mul
cmps
mov
mov
pop
adc
aaa
pop
mov
inc
add
shl
clc
out
js
ins
and
movs
mov
ficomp
lods
inc
aaa
cs
adc
inc
daa
pop
imul
ss
jg
adc
sahf
test
mov
or
adc
loope
aas
jae
mov
addr16
pop
dec
scas
(bad)
call
hlt
int
dec
ja
xchg
xor
jmp
adc
das
sbb
test
test
push
retf
adc
sub
test
push
jne
pop
cmp
inc
sbb
jg
sub
dec
sar
stos
cmp
cmp
inc
jg
retf
pusha
fwait
cdq
jno
pop
jg
mov
(bad)
out
dec
sbb
int3
mov
(bad)
ins
std
adc
mov
lods
sahf
xchg
mov
jae
cmps
mov
cld
inc
jmp
(bad)
push
and
jne
push
dec
cmp
xchg
pop
xor
add
pop
mov
(bad)
mov
sbb
dec
ja
addr16
push
pop
jmp
daa
xor
into
and
mov
pop
adc
fcomp
cmp
idiv
fist
imul
xchg
rol
retf
das
out
loopne
(bad)
sub
mov
mov
es
inc
rol
(bad)
or
aad
int
pop
mov
test
imul
and
jb
pusha
retf
mov
(bad)
fst
xchg
sti
pop
mov
dec
cmp
sbb
push
jmp
jle
jg
ficom
jmp
test
sub
sub
adc
ss
add
cdq
mov
xchg
sbb
and
lahf
push
imul
mov
xchg
int3
push
push
and
push
int3
test
sbb
fs
cmp
bound
cld
pop
dec
je
sub
fcomi
xchg
enter
xchg
xchg
pushf
mov
(bad)
xlat
mov
stos
dec
ja
sub
xlat
sti
mov
and
pop
je
ins
sub
or
fdivr
push
test
fistp
xor
fs
jle
push
push
fwait
jae
aaa
cmp
fadd
inc
jl
mov
mov
test
mov
inc
xor
mov
dec
push
pop
pushf
gs
inc
inc
cdq
mov
arpl
imul
sub
fsub
add
js
jecxz
xchg
imul
mov
cwde
je
mov
sub
pop
inc
dec
push
add
sbb
pusha
fisub
test
push
ins
ins
ss
inc
fwait
dec
cmp
cdq
or
pushf
(bad)
fsin
push
loopne
test
xchg
fmul
mov
loopne
adc
(bad)
les
add
(bad)
test
mov
call
imul
mov
repnz
jnp
outs
ret
jecxz
cmc
jmp
in
aaa
stc
and
push
cli
cmp
les
jle
xor
pop
or
das
aad
adc
jecxz
popf
mov
mov
call
mov
mov
cmp
adc
inc
mul
dec
ret
push
push
add
pop
push
ins
pop
or
test
fst
(bad)
popa
cmp
cmp
movs
or
sbb
cmp
leave
or
or
dec
cmp
mov
popf
and
sbb
pop
lock
ds
retf
jbe
sub
jmp
test
dec
add
(bad)
or
es
or
daa
adc
fnsave
mov
ins
jp
je
jnp
sub
lods
xchg
push
or
sbb
pop
lahf
xor
cdq
sub
mov
push
mov
pop
(bad)
or
int3
test
sahf
pop
div
lea
mov
cmc
js
jnp
mov
xchg
(bad)
imul
mov
inc
xchg
push
adc
lahf
sar
cmps
test
mov
jle
xchg
fnstenv
push
in
inc
and
adc
leave
jg
sub
sbb
xchg
in
ja
(bad)
xor
mov
cmps
bound
loopne
int3
iret
mov
cmp
test
push
ss
das
aaa
cli
jp
icebp
cmps
mov
dec
jecxz
cmp
push
retf
fcom
stos
inc
int3
aaa
dec
push
push
retf
and
pop
inc
aad
test
or
sub
mov
ret
fiadd
repz
movs
ja
sub
pop
dec
retf
jp
enter
add
test
(bad)
cld
sbb
test
std
mov
push
arpl
fstp
(bad)
sbb
jecxz
(bad)
pusha
test
push
in
push
repz
retf
sti
sub
das
dec
pop
jmp
cdq
pop
pop
out
fs
not
xchg
mov
leave
inc
aas
adc
inc
(bad)
ja
repnz
mov
xchg
push
stc
mov
mov
mov
call
pop
imul
outs
push
ins
jmp
icebp
fidivr
and
adc
or
das
cwde
test
mov
mov
call
sub
sbb
out
fsubr
mov
cli
out
imul
jb
sbb
jbe
push
pop
sbb
popa
and
jbe
aam
and
leave
xor
jne
jmp
adc
rcl
iret
jle
(bad)
xchg
(bad)
out
jns
mov
xor
sub
adc
movs
adc
fcmovu
xchg
ss
movs
fnstcw
dec
and
repnz
stos
sbb
pop
imul
push
into
push
lds
imul
addr16
popa
fs
jmp
xor
mov
add
mov
(bad)
arpl
mov
ja
push
and
retf
pop
(bad)
add
scas
pushf
ss
push
test
cmps
std
das
dec
mov
mov
add
loope
cs
mov
cmps
mov
test
fcomp
int
das
and
and
or
jbe
gs
adc
pushf
push
jo
push
retf
dec
dec
in
das
out
daa
dec
inc
adc
xchg
pop
dec
mov
mov
cwde
jecxz
pop
jp
mov
adc
aam
mov
add
mov
fnsave
or
in
sbb
lods
push
pop
(bad)
xchg
push
ins
out
adc
sbb
push
fisubr
fnsave
lock
pop
cwde
pop
mov
cmp
test
dec
mov
push
push
xor
xchg
add
jmp
popf
cmp
daa
scas
daa
cmp
sub
lods
mov
add
test
je
xchg
xchg
adc
lea
mov
outs
inc
or
push
sti
mov
xchg
mov
imul
sbb
imul
and
jle
bound
arpl
inc
mov
cmp
add
cmc
addr16
mov
push
ret
cmp
jge
mov
xor
cmp
int3
xchg
shl
retf
ret
loop
cmp
xlat
lea
xlat
loop
outs
popf
adc
test
mov
jbe
adc
ja
addr16
into
pop
imul
add
xor
sub
fidivr
gs
(bad)
scas
push
mov
inc
icebp
fs
cmp
(bad)
mov
add
pop
cmps
out
pop
pop
test
mov
ja
es
cdq
jno
jle
das
pop
and
(bad)
push
mov
test
hlt
mov
idiv
test
add
cmp
cmp
adc
ds
out
retf
push
aam
mov
daa
sbb
popa
sbb
mov
pop
ds
pop
mov
mov
fldenv
dec
aaa
jns
push
jge
xchg
add
sub
loope
mov
push
clc
rol
test
neg
xor
jmp
add
mov
cmc
je
sub
int
xor
lods
fidivr
jmp
xchg
mov
push
test
test
inc
mov
ja
sub
cdq
repz
int
and
lahf
je
jne
dec
sub
into
and
jmp
pop
stos
inc
dec
cs
xor
add
bound
fwait
int
push
cmp
(bad)
outs
scas
sub
xchg
sub
dec
push
aam
pop
push
jg
out
mov
mov
pop
scas
ins
mov
je
dec
xor
cmps
dec
push
inc
or
dec
loopne
pop
stc
stos
mov
jae
retf
sub
dec
imul
js
xchg
fstp
ins
adc
hlt
sbb
in
(bad)
lods
fidivr
xchg
push
loop
call
(bad)
push
jns
or
mov
test
shl
call
sbb
xor
and
(bad)
in
mov
and
js
mov
sub
daa
fcmovbe
mov
sbb
add
pop
sbb
mov
imul
pop
cmps
movs
fild
and
icebp
lock
dec
mov
dec
jmp
xchg
movs
push
aam
rcr
dec
lods
es
outs
add
test
nop
cmp
sub
mov
cmps
mov
mov
sar
cmc
push
and
mov
idiv
stos
and
xchg
lds
xchg
push
add
jge
bound
adc
xchg
test
daa
push
mov
call
sub
mov
leave
lods
fwait
jae
dec
mov
jnp
int
pop
and
aam
push
mov
jo
mov
imul
mov
cmp
dec
mov
mov
out
adc
(bad)
fisubr
ret
push
and
inc
inc
xor
xchg
nop
stc
paddsw
mov
inc
(bad)
out
inc
(bad)
inc
fisttp
sub
daa
test
jns
inc
inc
ins
fst
and
hlt
fistp
dec
adc
mov
xchg
icebp
daa
sub
mov
inc
gs
cdq
fsub
jmp
int
jne
fcomp
xor
pop
jl
leave
add
mov
popa
xor
(bad)
clc
neg
push
mov
xchg
mov
and
xchg
sub
out
fs
rcr
dec
test
dec
add
aad
jl
dec
mov
xchg
fs
stos
iret
dec
ss
xchg
push
sbb
push
push
dec
gs
aas
scas
test
sub
add
fwait
mov
sar
mov
into
movs
mov
push
jne
neg
aaa
adc
xor
mov
mov
pop
outs
xchg
in
xchg
cmps
xchg
pop
add
dec
aam
add
shr
fldenv
popa
mov
mov
sub
mov
or
in
(bad)
jl
jecxz
push
outs
xchg
jmp
xor
enter
push
jns
inc
or
pop
push
cmp
add
fisttp
ds
rcl
adc
mov
inc
or
dec
add
dec
popa
sbb
outs
or
sub
and
(bad)
push
jae
lods
dec
push
or
js
cdq
shl
arpl
clc
jo
adc
fdiv
icebp
int
fs
in
jmp
inc
cdq
ja
ins
nop
je
or
out
pop
call
icebp
push
scas
pop
rcl
test
cmp
push
inc
dec
pop
push
pop
mov
jns
pusha
mov
jbe
mov
xchg
outs
mov
jbe
sahf
js
jmp
lods
mov
out
cmp
push
lock
push
jmp
inc
(bad)
jp
outs
(bad)
mov
aam
frstor
xor
xchg
rol
les
aaa
xor
fxtract
jg
rcl
cmp
stos
pop
add
fwait
movs
in
(bad)
ins
data16
test
add
test
cdq
sbb
inc
dec
aaa
cmp
dec
imul
add
add
inc
fdivrp
out
into
push
fnstsw
jbe
xor
jl
adc
scas
dec
lock
inc
ret
loop
mov
dec
ss
adc
push
cdq
fs
mov
mov
in
jg
push
mov
enter
mov
stc
mov
push
add
stos
icebp
push
(bad)
(bad)
aam
mov
into
jbe
loopne
mov
dec
inc
sub
jmp
sub
sub
cdq
and
pop
xchg
add
add
enter
inc
or
jmp
jo
sti
addr16
push
arpl
in
fnstcw
bound
dec
(bad)
ficomp
cwde
push
sub
scas
mov
nop
in
pop
les
cs
adc
mov
fld
push
outs
aaa
mov
icebp
inc
ins
aaa
out
push
jo
mov
call
mov
inc
test
ja
push
into
xchg
leave
ja
in
sbb
jne
jle
xchg
mov
int3
dec
fnstenv
dec
mov
inc
icebp
jle
xchg
sub
inc
ret
mov
(bad)
pushf
in
mov
call
cli
sbb
mov
jle
xor
pop
push
out
dec
in
sbb
push
mov
addr16
mov
or
dec
fxch
popf
push
cmp
push
xchg
out
or
dec
dec
add
jmp
clc
add
into
call
loopne
cmp
mov
add
sbb
movlps
sbb
dec
push
mov
leave
ror
add
pop
pop
cmp
mov
dec
mov
retf
jl
jecxz
fimul
movs
mov
pop
push
adc
out
xchg
orps
imul
cld
out
es
sbb
hlt
out
inc
pop
add
add
enter
jno
push
leave
add
push
xchg
sub
jle
lds
pushf
sub
bound
jle
jmp
test
mov
shl
push
call
and
adc
dec
lods
sbb
jge
dec
aaa
mov
imul
dec
popf
lds
jbe
iret
sub
test
in
retf
jl
xchg
or
out
sub
mov
ficomp
push
xchg
fstp
outs
aaa
add
pop
inc
mov
mov
cmp
pop
xchg
xchg
jmp
popf
scas
leave
xor
jg
neg
aaa
les
mov
xchg
xchg
int
es
sub
sub
inc
inc
test
repnz
jno
scas
push
jg
cmp
js
xchg
test
jno
push
push
or
cmps
mov
pop
adc
adc
xor
dec
(bad)
mov
into
jo
jmp
(bad)
jb
inc
xor
out
call
push
mov
push
scas
fcomp
das
cmp
inc
mov
or
push
xchg
cli
pushf
neg
not
dec
ret
jmp
xchg
fimul
sar
stos
pop
mov
sub
pushf
loop
shl
mov
fiadd
or
call
shl
cmp
add
push
jns
mov
cmp
sub
and
(bad)
push
adc
sbb
(bad)
sub
(bad)
scas
adc
pop
mov
push
add
or
cs
jno
lds
adc
xlat
adc
mov
sbb
inc
loope
push
or
cmp
jb
push
xor
cmps
mov
jge
repz
sbb
mov
and
mov
or
push
(bad)
sub
sbb
mov
addr16
(bad)
pop
imul
inc
jmp
ror
neg
xchg
xchg
lock
(bad)
push
lds
cwde
add
jb
cmp
pop
or
mov
lods
test
pop
pop
test
push
fwait
into
mov
push
rol
cmp
dec
(bad)
push
(bad)
in
inc
mov
data16
out
pop
das
lock
cmp
or
gs
mov
mov
ret
xchg
into
in
cmc
dec
inc
and
es
mov
rol
cmp
retf
push
add
xchg
jl
aad
inc
jmp
sbb
cdq
stos
mov
dec
mov
sub
sahf
jbe
mov
xlat
into
dec
fistp
sahf
and
dec
sbb
js
outs
(bad)
sub
xchg
push
xchg
push
dec
pop
add
sbb
jmp
add
lods
mov
cmps
or
fdivr
(bad)
ror
or
adc
pop
xchg
cwde
shl
aad
outs
daa
addr16
ins
fnstcw
pop
or
add
sub
sub
pushf
stc
ret
or
mov
inc
sub
fwait
push
mov
jmp
clc
cwde
fidiv
xchg
cld
adc
mov
jns
inc
xor
sub
jne
xor
jns
div
push
mov
sahf
mov
sub
push
cmp
clc
outs
sub
cdq
cwde
push
aaa
aaa
push
push
js
lods
mov
call
dec
jle
sbb
adc
addr16
xor
fsubr
cld
pop
hlt
mov
test
xor
ins
sub
hlt
aam
das
loop
adc
dec
and
xor
(bad)
mov
stc
add
sahf
cmp
lds
fmul
inc
js
popa
push
outs
push
test
jae
mov
stos
ret
sbb
xor
daa
leave
aas
test
jns
cwde
scas
mov
out
and
into
push
loopne
test
or
shl
mov
push
pushf
inc
stos
xor
push
test
jp
mov
jns
inc
mov
fs
mov
cmps
fldcw
cdq
mov
xchg
out
cmp
aaa
fld
cmp
mov
sar
inc
aad
dec
xor
and
jns
inc
and
leave
mov
jl
pop
inc
leave
aam
js
mov
jne
xchg
cmps
mul
add
sub
jp
add
inc
out
rcr
lods
ss
push
leave
mov
ja
pop
or
loope
jg
jge
int
mov
out
inc
push
and
mov
sub
out
xchg
or
movs
aad
vpmaxub
pop
cmp
inc
xchg
xor
xor
outs
and
mov
js
jno
aaa
cmp
popa
stos
push
jbe
movs
addr16
in
push
push
mov
sbb
xchg
cmp
icebp
mov
push
xchg
ret
sbb
sub
cmps
inc
daa
dec
dec
fcomp
fcom
jno
into
mov
movs
shl
cmps
cli
xchg
loope
mov
mov
dec
sbb
push
push
pop
sbb
ss
movs
test
lods
imul
cdq
mov
fcom
ja
in
sbb
sub
xor
sub
lods
aas
xlat
sbb
mov
test
push
cmp
dec
pop
aaa
mov
mov
mov
push
cdq
inc
push
adc
sub
sbb
xor
jns
dec
push
fs
adc
mov
loope
test
scas
movs
jo
movs
or
test
outs
push
(bad)
cmp
mov
mov
fcomi
in
or
popa
push
ret
mov
cmp
cmp
mov
pop
xor
daa
out
cmps
pop
fldcw
cmps
jnp
push
or
xchg
hlt
and
sub
mov
into
lock
xchg
daa
mov
retf
pop
test
inc
pop
pop
dec
jp
and
mov
ds
int
cmp
mov
sbb
(bad)
xchg
mov
mov
fs
push
xchg
je
dec
ds
cs
stc
fcom
ds
loop
dec
mov
add
jb
adc
jmp
add
pop
test
push
or
adc
inc
cs
cmp
lahf
xchg
es
jae
or
nop
pop
mov
movs
push
das
ss
mov
jecxz
data16
inc
and
fucomi
fist
xor
into
mov
xor
aad
out
sbb
dec
ret
dec
rol
movs
mov
jne
das
xchg
cs
ror
out
pop
arpl
sbb
leave
push
pop
(bad)
lods
pop
in
fmul
pop
and
loop
sub
xor
jmp
(bad)
mov
fldenv
out
fstp
(bad)
sti
adc
mov
add
or
ret
xor
or
sub
stos
loop
add
retf
pop
add
push
mov
inc
icebp
add
jle
retf
rcr
mov
push
xor
icebp
mov
or
xor
imul
push
fucomp
lods
jecxz
xchg
data16
test
fwait
in
test
shr
fwait
add
mov
xchg
dec
jno
push
jg
test
pop
push
aaa
jns
or
jmp
mov
mov
outs
call
pop
xor
cmps
mov
add
lea
fcom
cmps
and
sar
call
out
pop
jmp
addr16
sbb
cmps
test
iret
push
out
mov
aad
dec
jb
addr16
and
or
dec
cmps
inc
loope
es
mov
arpl
mov
adc
push
pusha
stos
divps
sar
retf
xchg
add
push
cwde
pop
dec
hlt
test
mov
pop
and
push
mov
je
into
mov
push
into
jg
shl
or
ret
cmp
mov
pop
inc
pop
sbb
cmps
lods
loope
stc
xchg
or
cli
add
inc
push
out
(bad)
and
push
retf
popf
mov
mov
fadd
loop
mov
daa
clc
xor
(bad)
clc
aaa
add
push
jmp
mov
pop
(bad)
cmp
jp
fisub
js
cs
loop
mov
or
mov
mov
fiadd
add
pop
sti
into
or
or
int3
(bad)
pop
scas
dec
data16
dec
cmps
and
push
out
fmulp
lock
add
cdq
mov
stc
mov
sbb
lods
(bad)
adc
sbb
adc
stos
xchg
(bad)
jae
cld
das
sbb
cmp
xchg
jge
jmp
(bad)
data16
fdivr
adc
mov
mov
mov
push
iret
stos
retf
xor
ret
(bad)
(bad)
out
dec
sbb
push
push
mov
push
xor
xchg
or
pop
aam
int
movs
ficom
push
push
pop
outs
aaa
pop
sub
shl
push
bnd
ins
mov
mov
aas
scas
shl
jl
inc
mov
popf
aam
and
js
test
pop
scas
rcl
mov
leave
cli
adc
ja
jne
ja
inc
pop
sbb
loop
inc
mov
sar
call
mov
jns
cmps
and
mov
test
inc
mov
loope
mov
jl
fcom
push
cwde
jle
dec
ret
cli
retf
pop
push
jmp
add
sbb
(bad)
test
jb
or
cdq
out
(bad)
cmc
mov
or
xchg
jbe
nop
push
sub
nop
(bad)
(bad)
adc
mov
push
int3
dec
dec
push
xor
mov
add
inc
les
and
mov
xchg
jl
jmp
and
sub
xor
gs
out
push
sbb
mov
das
cld
cmp
jnp
pop
or
jns
sub
ret
sbb
fdivrp
adc
jnp
jmp
xor
sbb
pop
jno
push
or
sub
add
dec
mov
call
mov
xchg
mov
sub
xchg
add
mov
pop
popf
or
pop
xor
cmp
out
and
jbe
addr16
xor
xor
cmpxchg
xchg
jmp
out
mov
bound
sbb
inc
jbe
popa
stc
mov
and
xor
jecxz
clc
xchg
jl
dec
imul
mov
jnp
cmp
adc
push
xchg
cwde
mov
test
adc
not
jb
or
jl
xchg
mov
fwait
push
shl
pop
rol
xor
xor
movups
loope
outs
je
daa
sbb
pusha
push
dec
xchg
pop
lds
dec
popa
or
push
pop
cs
arpl
addr16
fiadd
imul
mov
xor
scas
push
cmps
enter
(bad)
aaa
mov
inc
fnsave
inc
inc
inc
(bad)
scas
aas
aaa
sbb
mov
mov
inc
call
inc
xor
and
imul
push
pop
jp
pop
or
mov
test
push
sub
icebp
xor
or
pop
sar
loopne
(bad)
sbb
nop
sub
ds
jmp
scas
mov
(bad)
out
into
xchg
xchg
in
cmp
inc
add
lea
test
add
popf
sub
popf
mov
sub
mov
out
jnp
arpl
xor
inc
push
outs
sbb
call
(bad)
fist
out
es
sbb
ss
imul
xchg
and
leave
xchg
and
or
jns
dec
xchg
enter
sbb
cdq
push
mov
sub
cmp
daa
push
test
mov
pop
mov
and
push
push
xchg
dec
daa
jne
test
add
(bad)
jmp
(bad)
neg
or
mov
push
jge
ins
in
cmp
mov
ds
inc
pop
cdq
mul
cmp
sub
ja
push
mov
in
push
xchg
mov
mov
cmps
dec
arpl
in
jle
inc
imul
in
jmp
and
xchg
push
(bad)
test
jne
jb
push
cld
xchg
push
inc
adc
ja
push
add
push
imul
ret
pop
inc
in
dec
rcr
cmp
retf
jno
xchg
add
aam
xchg
rcl
xchg
(bad)
es
repz
mov
dec
in
jmp
inc
test
xchg
jbe
xor
jmp
add
dec
mov
mov
ret
pusha
sub
out
sub
dec
neg
movs
into
out
stc
jns
bnd
pusha
fs
sub
inc
shl
adc
hlt
xchg
jle
les
popf
call
jbe
test
dec
imul
mul
fnstenv
jo
mov
(bad)
call
add
bound
sbb
mov
out
push
out
ins
dec
adc
xor
jp
repnz
mov
out
ja
stc
test
out
aam
jbe
pop
push
sub
bound
inc
sub
mov
pop
xlat
ret
stc
mov
out
aaa
jl
add
push
loope
out
shl
push
push
inc
pop
ret
and
fwait
sbb
fstp
stc
pop
jns
pop
push
pop
sub
rcr
and
cld
leave
jo
mov
sbb
into
movs
out
fcompp
push
cli
cdq
popa
mov
out
xchg
jnp
jo
xchg
fidiv
adc
loopne
jecxz
rol
inc
push
iret
imul
push
jecxz
imul
add
ds
data16
inc
jne
ja
scas
push
std
cmp
jns
and
adc
cs
sub
leave
inc
enter
sub
xor
jge
stos
(bad)
mov
xchg
movs
push
jae
dec
sbb
fnstcw
ret
cmps
xchg
out
imul
sar
dec
mov
mov
dec
pop
shr
and
shl
cwde
pop
cmps
cmc
cmp
lods
jle
mov
test
lock
call
stc
lods
sahf
mov
mov
retf
add
sub
pop
es
xchg
outs
or
or
test
sbb
les
ins
jge
cmp
add
jecxz
mov
xlat
retf
jl
std
dec
in
mov
test
add
inc
lods
mov
sub
mov
adc
or
popf
mov
mov
jl
cli
ror
adc
xchg
test
mov
sbb
sub
mov
dec
cmp
or
aas
icebp
inc
outs
iret
dec
ss
jmp
push
dec
daa
sbb
test
and
mov
pop
sbb
mov
ja
vandps
cmps
mov
test
aas
sub
xchg
adc
aas
cs
mov
fdivr
daa
xor
fiadd
mov
pusha
loopne
xor
pop
ins
push
jle
jg
cmp
cmp
adc
mov
mov
mov
imul
push
test
andnps
inc
mov
and
adc
xchg
unpcklps
mov
aaa
jae
int3
cli
or
shl
cmp
cli
cld
mov
retf
test
push
pop
xlat
cmp
or
(bad)
mov
imul
rcl
dec
popf
daa
loop
push
mov
push
xchg
jo
ja
dec
or
outs
aaa
into
ja
and
fnsave
sub
out
addps
and
lock
inc
jns
jnp
add
mov
xchg
inc
mov
cmp
push
pop
xlat
xor
cli
nop
push
scas
dec
fwait
setge
(bad)
std
test
mov
mov
mov
push
out
jo
dec
jne
jne
sbb
cli
mov
jecxz
fmul
fmul
add
jmp
fimul
repz
cmp
test
add
mov
movs
addr16
test
push
sbb
and
sub
call
inc
pop
test
sti
test
bound
dec
xor
push
(bad)
jge
sub
fidivr
lahf
pushf
jle
push
xlat
(bad)
rol
shl
fsubp
aam
loopne
pop
sbb
sbb
aad
test
jnp
sbb
(bad)
fldcw
mov
push
add
test
add
pop
add
fld
stos
test
movs
lds
dec
shr
xchg
std
pop
sti
test
call
push
mov
push
int
jp
push
mov
cmp
stos
pop
mov
fst
dec
sbb
jge
jo
aam
scas
enter
fnstenv
imul
and
pusha
outs
je
mov
adc
dec
inc
xlat
clc
mov
hlt
mov
into
sub
loopne
or
or
dec
fcomp
dec
test
jns
xor
or
and
jge
or
lds
outs
lods
jmp
inc
mov
out
clc
or
das
imul
adc
xor
inc
stos
popa
sbb
popf
xor
lods
loope
mov
pop
ja
xchg
das
add
mov
mov
xlat
sub
push
ss
out
mov
sub
popf
dec
movs
lods
bound
sbb
jge
stc
in
(bad)
ret
pop
loope
lahf
repnz
sub
loop
dec
xchg
(bad)
jb
imul
ror
mov
(bad)
ror
pushf
sar
gs
add
mov
stc
loopne
inc
cmp
fwait
pop
cmp
sti
sub
hlt
leave
loopne
and
(bad)
stos
jmp
jl
mov
sbb
pop
dec
or
pop
test
jmp
inc
sub
sub
sbb
test
or
cmp
mov
adc
sbb
xor
xor
imul
enter
mov
cdq
imul
js
ja
pop
xor
cwde
sbb
dec
mov
in
push
(bad)
jl
jmp
mov
xor
mov
push
out
rcl
scas
mov
cwde
jbe
out
xchg
mov
ds
clc
push
push
adc
iret
shr
and
inc
rcl
dec
mov
cmp
fisubr
test
push
jmp
inc
mov
ss
js
sbb
ret
movs
sub
sub
add
xor
cmp
mov
movs
xchg
popa
xchg
pop
ins
mov
into
iret
xchg
xchg
xchg
or
push
fsubr
cmps
add
icebp
fst
in
lods
pusha
aas
mov
jne
and
(bad)
fst
xor
cdq
jae
mov
or
cmp
pop
sar
sbb
xor
adc
test
sub
faddp
adc
xchg
shl
xchg
repnz
jmp
pushf
sub
and
cdq
fstp
and
test
stos
stos
push
stc
cld
xchg
add
sub
dec
sub
cmp
sar
jne
xchg
mov
mov
mov
xchg
xor
movs
fadd
cmp
xchg
nop
xchg
fcmovnu
jo
mov
mov
push
jo
aad
sbb
push
aaa
test
jecxz
aam
les
repnz
jmp
xchg
es
mov
scas
lods
pushf
cli
jg
mov
mov
imul
jb
ja
push
xchg
sahf
and
fld
inc
xchg
js
xor
pop
out
leave
lock
(bad)
and
push
lahf
shl
push
push
add
sub
adc
jg
push
inc
add
enter
push
arpl
jmp
jg
push
jle
pop
fnstenv
mov
jl
pusha
fdivr
sub
(bad)
mov
pop
jo
cmp
dec
aad
push
sbb
mov
dec
push
lods
js
lds
(bad)
jge
jecxz
jmp
cmps
sahf
out
xchg
add
stc
aas
add
leave
add
popf
mov
fld
push
or
scas
mov
mov
mov
xchg
daa
retf
stos
xchg
je
mov
cmps
and
cdq
jnp
aaa
xchg
pop
mov
rcr
mov
cmc
mov
loope
clc
sbb
mov
mul
inc
jp
pop
in
pop
push
jle
sbb
data16
enter
adc
das
pop
ret
mov
mov
add
daa
jmp
or
cmp
stos
dec
test
fld
sub
data16
sub
push
cmp
push
cmp
mov
(bad)
test
mov
sar
and
fdivr
and
iret
imul
aaa
xchg
arpl
adc
(bad)
ds
leave
inc
mov
fsub
jl
fdiv
or
addr16
mov
icebp
cmp
add
enter
ret
js
stos
mov
xchg
(bad)
jno
pop
call
xchg
cmp
ins
sub
push
add
cmps
push
sub
test
mov
and
shr
xor
mov
rcr
or
push
sbb
mul
js
cmps
ret
dec
stc
fsubr
cmp
push
sbb
cmc
scas
or
jmp
mov
pop
push
imul
inc
aas
and
pop
jns
inc
pusha
sbb
xchg
(bad)
(bad)
mov
xchg
stos
aam
loopne
jle
pusha
js
sbb
sbb
rol
mov
int3
xchg
mov
(bad)
stc
sbb
repnz
fwait
and
jmp
push
mov
in
push
and
mov
or
adc
jbe
test
sub
adc
dec
or
lods
jno
push
cdq
push
addr16
mov
jmp
outs
rol
pusha
into
mov
js
and
xchg
mov
xlat
stos
lahf
ins
dec
clc
repz
mov
dec
(bad)
cmp
lock
imul
xor
loope
xor
sub
jg
dec
fcom
cld
add
cmp
mov
sbb
xchg
leave
fistp
cs
shl
bound
shl
aas
stos
push
out
push
fcmovnbe
adc
(bad)
cmp
in
bound
(bad)
cmp
xchg
idiv
rol
mov
mov
pop
cmp
jbe
out
mov
pop
inc
dec
jns
test
fist
pushf
sbb
fmul
ins
xchg
sar
inc
jae
ja
cmp
repnz
xor
repnz
(bad)
xchg
jae
add
daa
inc
les
addr16
push
sbb
sub
fist
pop
leave
pusha
and
cld
push
sub
ins
imul
ja
xchg
cwde
test
mov
popa
daa
pop
mov
movs
ins
hlt
push
jo
push
and
jbe
jecxz
bound
sar
cwde
mov
jo
lods
enter
mov
cmp
mov
(bad)
cmc
loope
repnz
mov
std
xor
imul
(bad)
mov
rol
test
pop
mov
out
mov
mov
movs
fs
add
aas
push
fnsave
push
dec
jp
mov
loopne
inc
mov
ds
sub
inc
outs
mov
jl
fwait
push
ja
repnz
push
or
shl
mov
cmp
cmp
sub
imul
out
mov
jge
aaa
xchg
in
xchg
cmp
xchg
loopne
dec
xchg
xchg
xchg
js
sar
sub
pop
sub
or
adc
mov
fld
sbb
pusha
push
pop
sub
pop
and
fcomp
ret
xor
mov
sub
add
fimul
sub
fwait
out
pop
pusha
or
xchg
push
rcl
and
mov
fs
cmp
dec
push
add
mov
sbb
cmp
mov
mov
mov
leave
fs
pop
rol
xlat
sbb
out
lea
sahf
mov
mov
sub
inc
sub
or
mov
clc
jnp
xor
jbe
mov
mov
das
and
push
clc
pop
dec
add
call
sub
stos
or
xor
jmp
or
jl
mov
sub
push
imul
cdq
daa
and
repz
jmp
pushf
xchg
push
pop
or
cmp
lods
push
mov
jmp
into
test
outs
or
arpl
imul
sbb
ret
and
sbb
sub
pop
xchg
test
push
xchg
mov
push
jae
pop
fcomp
push
lahf
sti
movs
cdq
popa
movs
mov
out
scas
leave
jbe
das
scas
mov
ss
jmp
dec
jmp
sbb
mov
ds
mov
inc
pop
in
data16
xchg
mov
ret
jmp
mov
into
mov
pop
je
nop
xchg
sbb
inc
push
pop
mov
dec
push
or
xor
out
inc
xlat
mov
fld
je
mov
xor
cwde
dec
sbb
stos
sub
loopne
hlt
sahf
mov
dec
jo
pop
add
aas
das
mov
sub
push
and
stos
(bad)
std
mov
inc
clc
xor
jns
or
(bad)
jno
cli
mov
fist
and
loopne
dec
mov
sub
jb
inc
sub
xchg
movs
push
leave
dec
xchg
not
cmp
cld
and
lds
xchg
je
inc
mov
pop
mov
dec
lahf
xchg
mov
pop
jle
jne
push
push
cli
or
add
xchg
mov
cdq
inc
push
adc
stos
xchg
pop
(bad)
mov
mov
ret
jo
adc
repnz
or
push
sub
and
out
es
mov
into
or
cs
mov
rcr
mov
sub
punpckldq
dec
jno
add
cli
(bad)
fwait
pop
inc
(bad)
pop
or
mov
push
(bad)
(bad)
cmps
sub
cmp
inc
es
add
sub
add
mov
dec
jmp
dec
aaa
inc
out
xchg
pop
dec
push
into
stos
test
pusha
jmp
bound
(bad)
fisubr
fdiv
popa
cmp
fcomp
sbb
in
push
xor
pop
sub
cmp
mov
xchg
fwait
mov
and
sub
jmp
jo
xchg
in
xchg
add
xchg
jge
test
xchg
je
adc
xlat
and
xchg
cmp
mov
mov
cwde
jle
inc
inc
xchg
ror
fcom
in
pop
movs
xchg
xadd
fs
inc
and
add
cwde
gs
mov
fucomp
leave
jne
sub
bound
cmp
add
pop
jge
xchg
loopne
aaa
loopne
fs
std
std
stc
sahf
or
sbb
dec
call
mov
(bad)
popa
adc
adc
retf
xchg
jmp
dec
jle
cmps
xor
xor
leave
xor
cmp
or
imul
call
push
clc
push
sbb
aaa
into
shl
pop
repnz
ins
xor
cld
fcmovu
test
pop
retf
cmp
call
sub
and
mov
mov
stc
pop
retf
rcl
sub
mov
push
mov
and
ror
imul
lods
add
mov
std
int
ins
or
mov
hlt
neg
dec
dec
sub
mov
imul
jno
inc
repnz
cmps
mov
pop
dec
repz
jge
mov
mov
cmps
dec
sbb
and
mov
pop
mov
daa
sbb
jmp
jb
enter
arpl
test
aad
test
call
sub
repz
pop
shl
xor
push
pop
and
inc
push
arpl
(bad)
and
cmps
int3
pop
mov
add
inc
pop
mov
out
pop
adc
pop
out
movs
jcxz
cwde
js
daa
retf
(bad)
movs
scas
sti
std
or
dec
scas
(bad)
adc
push
adc
lahf
inc
mov
int3
mov
scas
loope
pop
push
retf
sbb
movs
test
shufps
jmp
imul
(bad)
sbb
or
mov
add
dec
aam
icebp
mov
push
or
mov
push
mov
lds
je
out
xor
cmps
aaa
scas
(bad)
outs
mov
fisubr
mov
push
cli
inc
stc
aad
xchg
outs
daa
sub
add
xor
test
fstp
lds
scas
cmp
mov
adc
push
js
push
sub
push
cmp
daa
xchg
leave
test
std
push
jp
and
sub
sub
inc
loop
jecxz
cmp
std
or
clc
clc
or
stos
xor
dec
push
jae
ins
test
or
fadd
retf
mov
pop
fistp
jmp
inc
repz
test
push
jno
jb
cmp
pop
xchg
jno
xchg
movs
xor
test
lods
cmc
sub
pusha
dec
retf
imul
sbb
ret
ret
clc
enter
jb
ja
mov
jae
jmp
sub
mov
xchg
(bad)
out
test
add
rol
sbb
cmc
mov
data16
fmul
dec
in
push
rcr
mov
and
pop
xor
aad
pop
jne
test
cmc
lahf
dec
xor
mov
sub
cmc
push
test
dec
push
xchg
ret
(bad)
retf
add
mov
push
loopne
ja
push
into
test
xchg
sar
xor
int
(bad)
xchg
dec
cmc
cdq
jae
xchg
in
jae
into
xor
cdq
dec
sbb
std
lods
bswap
pushf
inc
imul
add
adc
out
pop
icebp
mov
mov
or
lods
movs
mov
call
push
pop
imul
cmp
ror
jmp
and
stc
xchg
cmp
test
es
jl
(bad)
sub
ds
out
(bad)
mov
test
pop
inc
xchg
dec
adc
xchg
lds
inc
cld
pop
adc
loopne
mov
out
pop
das
adc
fld
outs
fstp
ss
cld
jge
out
inc
sub
mov
mov
mov
inc
ins
lahf
add
jge
dec
mov
jae
in
jbe
inc
outs
imul
int
cwde
pop
push
fidiv
enter
adc
js
div
xor
div
iret
into
cmp
jmp
cmp
inc
mov
sub
jb
inc
shl
pop
and
inc
fidivr
rol
cmp
jns
retf
mov
js
bound
and
cli
pop
imul
sbb
xchg
fld
xor
sbb
push
call
jne
nop
movs
shl
adc
ftst
(bad)
rcr
xor
mov
outs
outs
call
loop
push
sti
mov
mov
push
(bad)
mov
(bad)
push
arpl
cmp
inc
movs
dec
sbb
sti
in
and
scas
and
xchg
inc
push
test
sbb
mov
and
mov
xlat
out
ret
jnp
mov
retf
mov
cmp
mov
cmp
xor
pop
cmp
mov
jno
neg
out
(bad)
jb
add
or
inc
push
es
dec
fst
fild
shl
rcr
(bad)
in
cmp
cmp
retf
add
xchg
or
adc
adc
addr16
mov
mov
xchg
and
loope
sbb
mov
fcomp
pop
add
jmp
js
sub
cli
test
jmp
pushf
sbb
pop
cmp
pop
sbb
sub
cmp
fisttp
push
xchg
add
cmp
jns
daa
adc
xchg
popf
fs
repz
ss
daa
jo
mov
dec
repz
out
push
scas
jmp
popf
fisttp
aam
(bad)
sbb
mov
adc
int3
mov
sbb
sbb
inc
adc
ins
retf
or
(bad)
mov
nop
inc
imul
xlat
fcomp
cmps
into
cmp
shl
sbb
cs
scas
xor
imul
sti
jle
repz
xchg
push
loop
cs
(bad)
mov
mov
leave
add
mov
xor
and
sahf
jle
add
dec
push
stc
mov
sub
mov
adc
inc
(bad)
sbb
ja
push
ss
scas
mov
sbb
and
dec
test
or
sub
mov
xor
addr16
ins
xlat
inc
lods
pop
adc
imul
jmp
fidiv
xchg
hlt
sbb
sub
add
jo
and
stos
and
push
(bad)
sti
sub
cwde
or
adc
sub
mov
dec
pop
(bad)
popf
mov
lds
stos
enter
sbb
xor
xor
jl
mov
ds
lock
aam
int3
retf
and
fprem
call
jne
or
mov
jno
mov
dec
sub
jg
mov
adc
shl
push
ja
es
push
ja
sti
add
inc
jmp
push
mov
(bad)
jns
adc
stos
xor
mov
daa
es
push
dec
leave
jns
mov
sub
ror
dec
jge
and
inc
and
adc
add
(bad)
ja
or
mov
sub
test
mov
adc
cdq
jns
and
mov
aad
aas
cdq
ja
rcr
sbb
jl
push
adc
out
push
mov
mov
xor
or
jae
lods
loopne
mov
stos
add
jo
popa
xchg
aaa
xchg
aam
test
sub
adc
and
js
mov
out
cmp
(bad)
int3
cld
call
repnz
sub
inc
dec
scas
adc
mov
retf
retf
mov
sbb
mov
scas
jne
imul
xchg
(bad)
and
jle
clc
inc
mov
xchg
dec
adc
add
mov
push
jns
mov
fs
mov
xchg
push
daa
push
xchg
fadd
xchg
pop
sbb
pop
enter
xchg
cmp
dec
(bad)
jnp
aas
jp
cdq
mov
push
dec
push
dec
bnd
sub
mov
mov
pop
test
inc
cmp
pop
push
test
dec
imul
or
xor
mov
pop
jp
pushf
or
inc
stos
and
idiv
sub
mov
pop
clc
popf
xchg
push
jg
(bad)
adc
mov
mov
lahf
sar
xchg
gs
clc
dec
xor
in
movs
and
fadd
inc
rcr
fsub
or
dec
jle
es
fbld
ucomiss
out
push
fcomp
push
jae
add
repnz
add
mov
dec
and
mov
adc
xchg
sub
cmp
sub
jbe
mov
xor
pop
call
xchg
stc
imul
adc
ja
ds
scas
dec
push
mov
ins
shl
sub
cwde
xchg
lods
xchg
out
jecxz
mov
cmps
cmps
pop
rcr
ret
retf
fist
adc
gs
aam
push
pop
mov
loope
movs
mov
addr16
stc
mov
or
mov
xchg
pop
push
mov
imul
iret
cs
mov
xchg
mov
push
bound
sbb
mov
jne
(bad)
xor
(bad)
(bad)
dec
popf
fwait
inc
ss
out
ret
xor
xchg
inc
(bad)
sub
fld
mov
adc
xchg
fisub
and
jmp
or
push
pop
sub
and
lea
cmps
and
loop
into
mov
fwait
mov
jmp
sbb
sub
push
psubusb
into
rol
dec
push
sub
sar
retf
pop
fdivr
jb
nop
push
fadd
(bad)
test
stos
test
xchg
mov
xor
mov
pop
sbb
mov
int
(bad)
js
scas
mov
(bad)
retf
cmps
xor
xchg
ret
sbb
lock
mov
xchg
test
inc
dec
enter
ror
or
je
sub
fild
repnz
push
pop
inc
cwde
out
sbb
jnp
push
jge
jnp
sbb
adc
mov
xlat
icebp
cs
out
adc
in
jns
mov
stc
sbb
mov
pop
inc
ss
xchg
push
pop
add
dec
(bad)
out
mov
test
mov
fistp
inc
(bad)
test
xchg
sbb
mov
or
leave
out
push
enter
jg
(bad)
push
dec
mov
sub
and
xchg
(bad)
sbb
xchg
adc
cmps
shl
sbb
sahf
test
pop
in
cmp
or
repz
(bad)
in
mov
dec
add
jp
cmp
(bad)
pop
and
pop
loope
dec
mov
out
call
sbb
loopne
xor
daa
or
xlat
rcl
(bad)
xchg
icebp
iret
mov
dec
xchg
out
push
hlt
or
push
sub
push
in
addr16
xchg
sbb
xchg
adc
test
lea
fmul
inc
cmp
dec
pop
pop
and
mov
dec
push
test
shr
mov
scas
pop
cmps
pop
xchg
xor
stos
sub
pop
mov
inc
outs
(bad)
and
push
stc
jg
ss
sub
xchg
add
ret
loope
in
pop
scas
fisttp
sahf
test
add
push
ret
pop
sub
sbb
retf
push
lahf
adc
jecxz
jmp
aas
out
jp
mov
imul
add
ja
ja
(bad)
push
adc
inc
pop
movs
cmc
xchg
pop
rcr
push
mov
inc
sbb
inc
push
inc
inc
add
fs
in
bnd
xor
in
test
xchg
or
jmp
mov
mov
jns
call
(bad)
js
enter
fcmovb
fldenv
fnsave
ins
(bad)
push
callw
pushf
test
lods
xchg
jmp
test
cmp
outs
dec
push
lods
and
push
or
lea
or
iret
mov
push
mov
sub
add
mov
mov
aaa
ficom
mov
ds
push
push
imul
mov
ficom
loopne
call
ror
cmp
ret
fmul
popa
test
(bad)
in
pop
and
test
sub
ds
js
sub
lea
movs
fs
add
jecxz
lahf
ficom
imul
mov
jle
push
lea
xor
push
jno
inc
rcl
js
jg
popa
imul
push
lahf
aam
cli
and
cmc
popf
sub
in
xchg
out
add
add
pop
daa
cmp
jg
xchg
or
clc
mov
dec
add
aam
neg
push
sub
mov
xor
cmps
fnstenv
push
les
adc
in
xlat
and
dec
iret
mov
lods
es
push
mov
cmp
icebp
lods
pop
xlat
xchg
mov
idiv
ds
mov
or
jne
push
cmp
mov
cmp
inc
pop
ror
mov
jb
adc
mov
out
iret
pop
dec
adc
add
mov
xchg
sbb
out
daa
repz
pop
aaa
repnz
je
test
fadd
in
clc
mov
arpl
push
retf
or
imul
into
(bad)
jo
add
sbb
stos
add
inc
out
imul
loope
add
repz
jmp
jno
lods
or
call
je
xchg
add
outs
inc
cli
(bad)
clc
ret
fnop
mov
xchg
fld
pop
cmp
push
cmp
in
mov
loope
push
ja
mov
shl
mov
pop
fwait
pop
sbb
mov
into
imul
aas
sbb
out
inc
cmp
and
mov
push
jmp
loope
fcomp
mov
ja
and
push
or
sub
icebp
or
aaa
xor
aaa
rol
dec
jb
or
dec
mov
or
adc
cwde
inc
loope
adc
xlat
leave
out
mov
out
ins
push
fiadd
loop
std
out
into
(bad)
add
mov
movs
pop
lods
xchg
retf
sbb
(bad)
or
jae
jne
fstp
es
sbb
push
mov
mov
add
xor
test
inc
ficom
fs
push
aaa
push
mov
push
fadd
mov
cwde
outs
xchg
sbb
ss
fcmovu
xchg
xor
leave
mov
out
jmp
sbb
pop
outs
inc
mov
push
gs
(bad)
sbb
lahf
and
jb
xor
enter
mov
jnp
dec
adc
or
xchg
call
in
fldcw
mov
ret
dec
imul
push
aas
xchg
inc
outs
cdq
xlat
jns
pop
adc
es
out
rcl
pop
into
cmps
lods
test
arpl
out
dec
jns
add
leave
in
js
iret
(bad)
jb
or
mov
adc
pop
and
jne
push
in
lods
xchg
movs
pop
lahf
or
aam
jo
cmp
(bad)
stos
lods
pop
fsub
sahf
cmps
jp
pusha
xchg
sub
fdiv
loop
popa
sub
fdiv
push
sbb
(bad)
daa
(bad)
shl
pop
enter
adc
dec
push
not
push
mov
cmp
push
inc
sub
sbb
pop
leave
mov
cdq
push
jmp
(bad)
cmp
arpl
cli
push
pop
mov
stc
mov
es
or
stos
rcr
test
lea
sub
cmc
mov
lahf
stc
push
icebp
inc
(bad)
and
dec
mov
pushf
call
fwait
wrmsr
fcom
xor
stos
adc
adc
test
pop
out
paddd
leave
stc
arpl
mov
inc
iret
mov
mov
ficom
push
mov
pop
cmp
or
mov
std
scas
jmp
mov
push
dec
xchg
xchg
cmp
ret
mov
jbe
and
add
test
fild
pop
jmp
adc
pop
jns
loopne
leave
dec
es
out
bound
dec
cmp
ror
jmp
imul
(bad)
aas
outs
pop
sbb
and
or
fstp
xchg
fist
pop
mov
xchg
add
add
mov
loop
pushaw
das
push
jbe
shl
xchg
push
jns
mov
in
(bad)
loopne
imul
cwde
sbb
loopne
(bad)
inc
mov
xchg
cmps
xor
sbb
dec
cmp
sub
xor
bound
push
jne
mov
idiv
mov
dec
out
jno
imul
outs
fnstenv
fwait
sub
push
mov
jae
fnsave
stos
pop
mov
mov
mov
hlt
sbb
test
pusha
sbb
inc
cmp
adc
inc
pop
push
stos
dec
add
test
sbb
pop
(bad)
cmp
sti
or
outs
aas
xchg
loopne
icebp
push
xlat
fs
neg
ret
mul
(bad)
jbe
ror
add
mov
ins
scas
inc
or
mov
mov
mov
retf
and
jmp
jmp
addr16
je
dec
ss
imul
fiadd
push
push
inc
(bad)
and
js
test
add
enter
push
imul
mov
push
dec
inc
ds
push
mov
mov
xor
loope
fld
ficom
add
ret
jl
mov
add
mov
pop
pop
(bad)
mov
outs
inc
es
movq
fnstcw
mov
test
ins
sar
or
out
sub
inc
ror
xchg
and
push
xor
xchg
xor
cmp
call
rcr
xlat
leave
imul
out
pushf
push
pop
ja
inc
fcom
es
scas
inc
dec
(bad)
ja
adc
inc
dec
cdq
les
pop
push
addr16
ffree
mov
xchg
enter
aaa
xor
and
rcl
inc
mov
fidiv
or
xchg
mov
xor
add
out
popf
inc
push
jb
arpl
pop
lock
xor
push
xlat
ror
xor
fsub
sahf
push
add
mov
push
sbb
cdq
out
(bad)
das
xchg
and
inc
jg
movs
push
(bad)
add
push
addr16
xlat
popa
dec
js
and
mov
mov
jle
es
call
cmp
nop
mov
scas
xchg
adc
push
and
iret
outs
push
xchg
adc
and
jge
cmps
fnstenv
std
popa
add
jmp
fwait
and
and
sub
loope
add
scas
enter
pop
xchg
sub
idiv
pop
int
or
or
(bad)
cli
xchg
xchg
inc
cmp
cmp
jns
sbb
mov
fisubr
or
and
in
pop
aam
sbb
out
jl
test
les
retf
or
push
sahf
or
lahf
adc
daa
gs
mov
pushf
or
imul
jns
loopne
out
addr16
gs
dec
sub
shl
movs
mov
sbb
jge
fdivr
imul
add
es
inc
out
mov
push
repnz
fyl2x
push
mov
aad
bound
jp
outs
mov
outs
cmp
fisubr
data16
pop
lds
push
inc
aaa
out
sbb
adc
sub
pop
out
stos
sub
jnp
xor
lods
xchg
sub
xlat
add
add
or
push
xor
inc
in
ja
jle
push
dec
lock
dec
pop
xchg
cmp
dec
test
imul
mov
fcomp
jae
into
pop
and
add
cmps
retf
cmp
jo
lds
cdq
pop
ss
add
push
cli
jbe
int3
adc
pop
xchg
xor
loopne
adc
call
xor
ins
sbb
mov
(bad)
sbb
pusha
push
mov
das
inc
sbb
fisubr
and
xchg
ret
imul
mov
xor
adc
lahf
jbe
test
add
adc
pushf
jne
jne
daa
pop
mov
mov
fidiv
daa
outs
pop
inc
ins
push
addr16
ja
push
or
test
xchg
xrelease
adc
leave
inc
inc
lods
mov
pop
push
and
mov
cmp
scas
in
sbb
into
stc
jbe
ds
fst
mov
add
les
or
or
jne
adc
cs
mov
out
out
jl
xlat
aas
xchg
clc
test
imul
add
shl
ret
adc
clc
fdivr
jo
cmps
cs
mov
movs
xchg
push
std
mov
pop
adc
jbe
cdq
leave
les
jo
aaa
aad
xor
aaa
nop
mov
sub
test
test
xor
mov
sbb
jb
xchg
push
out
cld
cmp
arpl
push
in
xchg
loop
call
cmps
(bad)
jns
cdq
movs
neg
mov
je
stc
sub
pop
and
(bad)
cdq
sahf
leave
push
mov
sbb
inc
push
lods
pop
enter
adc
test
(bad)
es
sbb
test
sub
sbb
mov
lahf
add
in
aam
(bad)
dec
pop
mov
out
inc
mov
mov
shl
cmps
cs
repz
cvtps2pd
ss
test
out
in
push
movs
or
mov
adc
mov
clc
jp
fwait
(bad)
sub
es
dec
xor
push
cld
mov
lock
xor
cli
loope
js
mov
rcl
xchg
push
push
add
test
daa
mov
inc
sbb
fimul
sbb
or
cmp
jnp
inc
es
les
movs
jmp
xchg
call
dec
sbb
sti
add
mov
cmp
leave
arpl
and
sub
mov
cdq
cmp
inc
cmp
stc
fld
mov
out
or
sub
pause
cld
xlat
sbb
fldcw
outs
and
imul
cli
mov
sbb
or
and
call
xchg
inc
aas
call
cmp
mov
data16
aad
cdq
xor
mov
loope
stc
jbe
dec
cmp
inc
retf
sub
scas
test
fwait
adc
adc
push
jl
inc
enter
xchg
jbe
sbb
pop
movs
clc
inc
jb
cwde
jl
(bad)
aad
hlt
cmc
aam
add
xchg
dec
repnz
ins
xchg
or
scas
cmp
sbb
(bad)
mov
mov
stc
jns
sahf
pop
je
ss
mov
loopne
mov
mov
push
call
(bad)
mov
out
fist
cmp
adc
inc
cld
xchg
jmp
movs
movs
xor
sti
cmp
or
js
pushf
test
das
mov
cwde
dec
push
cwde
call
pop
inc
outs
add
outs
popa
bound
dec
cs
or
scas
xchg
add
lock
inc
aam
imul
repz
sahf
aas
sar
sbb
or
mov
add
aaa
inc
push
repz
enter
and
inc
adc
cdq
pushf
xchg
dec
mov
add
inc
mov
jo
mov
and
push
icebp
cmps
shl
pop
and
cmp
mov
arpl
cmp
icebp
xchg
xchg
mov
push
mov
inc
cdq
sbb
xchg
xchg
mov
inc
aaa
daa
and
mov
xchg
push
out
idiv
sbb
adc
sahf
sbb
call
sbb
lea
nop
xchg
stos
inc
lea
cmps
cli
push
and
bound
push
shl
xor
dec
loopne
sub
mov
fdivr
loopne
adc
mov
aaa
in
dec
push
jb
scas
push
jns
fld
fimul
pop
out
xchg
jecxz
sbb
ror
xor
sbb
test
cmc
sbb
fidiv
dec
sub
push
loope
xchg
das
fild
jns
xchg
movs
adc
jno
or
or
inc
pop
add
aaa
sub
dec
jb
sub
mov
jo
(bad)
es
ins
xchg
loopne
mov
icebp
push
or
mov
out
popa
out
jo
inc
fist
push
(bad)
mul
or
cmp
jle
push
cdq
xor
div
dec
ss
dec
mov
in
jmp
(bad)
retf
ss
scas
lods
rcr
out
out
push
neg
sub
xor
mov
xchg
or
shl
sar
push
jmp
ficom
scas
sub
out
push
sti
jns
xchg
jg
adc
inc
fwait
pop
sub
sbb
sub
pop
stos
pop
clc
cmps
test
mov
xor
mov
sbb
loop
outs
push
rol
movs
xlat
xchg
mov
mov
fs
aad
pop
mov
iret
mov
int
aad
sbb
mov
mov
mov
in
rcl
mov
cdq
call
rcr
outs
retf
ret
fs
fcom
js
cld
mov
adc
add
push
xlat
out
aas
mov
push
pop
cli
(bad)
out
xchg
pushf
into
xchg
frstor
sti
jmp
sahf
pop
pop
sbb
and
loopne
in
dec
mov
imul
outs
inc
data16
sbb
dec
pop
enter
xchg
sti
pop
out
push
add
in
xchg
cmc
xor
(bad)
adc
pushw
pop
loopne
pop
inc
xor
jmp
adc
in
hlt
cdq
aam
pop
jns
mov
aas
mov
xchg
xchg
cmps
add
shl
cmp
movs
xchg
icebp
mov
daa
ror
add
das
and
inc
lea
test
fld
in
add
dec
and
iret
aam
loopne
xor
lods
pop
(bad)
lods
stos
mov
rol
das
sub
sub
pop
jp
pop
or
fimul
sbb
adc
inc
push
jb
dec
sar
dec
jae
aas
mov
movs
xlat
sbb
mov
jb
xchg
cmps
mov
pop
into
test
sar
and
icebp
ja
mov
and
inc
loope
outs
and
mov
pop
ret
xchg
mov
gs
jne
or
adc
sti
and
cmp
or
sbb
push
js
sti
mov
cmc
nop
pop
imul
jecxz
mov
retf
ins
aas
cmc
xchg
or
outs
dec
jns
cmps
je
fsub
inc
dec
pusha
out
ret
jnp
fisub
inc
leave
jne
fisttp
into
mov
dec
mov
inc
test
ins
sub
(bad)
outs
cmps
in
cmp
aam
(bad)
push
inc
push
and
xlat
jl
in
mov
mov
outs
ins
data16
sbb
jmp
test
call
fcmove
or
mov
ret
or
popf
ins
in
jnp
fnstsw
stos
sub
cmp
(bad)
pop
popa
pop
sub
mov
(bad)
icebp
add
ja
leave
out
shl
push
movs
xchg
outs
mov
cwde
pop
nop
dec
add
and
xor
test
mov
xchg
test
mov
rcr
or
xchg
call
int
mov
loope
inc
aam
jbe
std
cs
loopne
sbb
out
pop
push
sbb
cmps
mov
mov
dec
push
std
movs
sub
dec
xlat
inc
fs
adc
fldenv
jnp
jmp
add
scas
clc
and
rcr
mov
int
mov
cdq
out
adc
inc
mov
sbb
mov
cmp
xor
and
aaa
push
dec
cmp
jle
adc
and
scas
repnz
jnp
push
inc
sbb
jnp
outs
cmps
cmps
loopne
dec
and
mov
mov
xchg
rol
ins
xchg
push
xchg
out
jg
lds
dec
dec
push
neg
clc
or
mov
shr
mov
shr
jg
xchg
(bad)
enter
pop
mov
fisttp
jne
ins
adc
push
fucomi
cmp
rol
cmp
pop
fcmovbe
lods
sti
retf
ds
sub
mov
cdq
mov
jge
fdiv
ja
loop
pop
and
ret
pop
add
push
inc
mov
fild
ds
imul
inc
xchg
movs
dec
stc
jecxz
pop
rol
mov
mov
outs
outs
call
add
fs
js
adc
push
fidiv
mov
repz
xchg
ret
or
add
or
iret
push
dec
into
cli
xchg
add
sbb
outs
push
inc
neg
and
and
mov
lods
int
xchg
pusha
pop
in
ret
mov
or
mov
call
xchg
jne
les
dec
test
fisub
(bad)
fsubr
enter
fiadd
pop
dec
or
pop
imul
dec
push
sbb
js
jmp
cmc
mov
push
inc
in
add
fdivr
scas
pushf
push
aam
mov
add
je
(bad)
inc
jo
jl
push
retf
push
jmp
push
sub
jo
cli
(bad)
cmps
call
fnsave
jmp
xor
hlt
mov
xchg
mov
aad
rcl
ds
push
cmp
pop
cwde
test
jmp
iret
pop
cmp
push
out
push
xchg
pop
neg
and
sbb
xor
dec
in
mov
out
test
sub
stos
adc
ja
nop
mov
cmp
inc
gs
jmp
jno
pop
add
adc
cmps
pop
xchg
pop
sbb
inc
test
pop
xchg
add
mov
mov
dec
fcomp
cwde
or
mov
clc
fist
push
pop
sub
add
js
gs
scas
cld
outs
fadd
lods
icebp
inc
iret
xchg
std
mov
pop
or
imul
xor
mov
pusha
ins
cmp
or
cwde
das
adc
repnz
repz
fst
fisub
and
sbb
inc
addr16
cmp
mov
push
cdq
retf
mov
mov
fldcw
out
cmp
mov
xchg
cdq
mov
ins
xor
jmp
and
xor
test
sahf
dec
bound
push
adc
lea
(bad)
lock
stos
sti
daa
cmp
sbb
or
mov
jne
sbb
mul
mov
test
pop
dec
rcr
test
or
push
mov
sub
mov
jl
bound
inc
jnp
movs
cmps
popf
or
(bad)
jmp
ja
push
jle
jno
int
or
add
lahf
cmc
sub
lock
cmps
mov
bound
inc
push
test
sbb
imul
int
add
in
xchg
mov
gs
or
das
push
ret
(bad)
mov
and
test
aam
jg
mov
out
fisubr
add
inc
xchg
sub
lahf
lods
out
loope
sub
xchg
push
dec
inc
or
aaa
and
inc
test
mov
jg
and
lods
das
xor
iret
xchg
enter
or
mov
pop
iret
js
test
dec
mov
stos
xchg
(bad)
xlat
jge
or
daa
dec
xor
pop
test
push
shr
fidivr
pop
in
inc
pop
ins
add
hlt
jne
mov
xor
inc
and
and
ret
jno
loop
inc
mov
mov
ss
loope
pop
(bad)
xchg
sub
cmp
dec
cmp
jbe
movs
imul
sub
add
movs
or
in
cmp
xor
lock
or
add
mov
xchg
adc
mov
mov
imul
imul
test
push
test
loopne
jle
inc
add
pop
or
ins
mov
data16
mov
mov
movs
push
push
xor
adc
sar
jno
cli
add
or
fsin
or
into
xchg
fld
xchg
mov
jecxz
call
fldlg2
xchg
leave
stos
(bad)
mov
jo
lods
and
fadd
lahf
pusha
dec
cmps
je
and
aas
inc
sub
ins
sub
xlat
dec
ins
out
jno
and
(bad)
sbb
sbb
xchg
sub
mov
cmp
xchg
mov
xor
pop
fs
ds
push
push
inc
xchg
push
mov
shl
push
clc
mov
xchg
es
ins
mov
sbb
lahf
xor
push
xlat
cmp
(bad)
jmp
inc
xchg
push
shl
cmps
clc
xchg
mov
mov
inc
adc
das
sub
retf
fadd
cdq
cmc
imul
je
lds
icebp
(bad)
(bad)
out
jge
in
repnz
cmps
add
jo
gs
xlat
pop
rsqrtps
test
mov
jmp
into
sub
pop
jecxz
add
inc
add
lock
leave
ret
adc
aas
pop
ret
arpl
aaa
adc
sbb
shl
jle
cmp
jecxz
push
pop
push
fmul
pop
mov
test
aas
add
cwde
inc
pop
es
neg
je
dec
or
lods
jbe
les
icebp
rol
add
jbe
inc
ror
jecxz
imul
outs
retf
pushf
loope
xor
mov
cmp
cmp
xchg
test
sub
inc
mov
sti
cmp
nop
int3
movhlps
cmp
mov
(bad)
and
push
mov
not
mov
inc
adc
xchg
jmp
jmp
sbb
add
icebp
pop
cmc
test
sbb
push
cmp
add
fdivr
scas
lock
xchg
sub
popf
jle
(bad)
iret
mov
mov
imul
test
sub
test
jmp
movs
pop
sub
jmp
jae
loop
popa
loop
add
or
(bad)
out
ret
out
out
sub
dec
push
aaa
in
mov
neg
add
inc
sub
add
test
cmp
test
rol
xor
(bad)
sbb
fiadd
fs
xchg
jae
test
ret
outs
shr
icebp
cmp
ja
inc
jo
push
daa
outs
pop
imul
pusha
scas
mov
jg
push
push
and
pop
sbb
out
pushf
push
mov
push
push
in
xchg
pop
stos
inc
rol
and
add
(bad)
stos
test
mov
(bad)
push
(bad)
dec
repnz
add
cli
dec
dec
imul
push
sbb
and
push
mov
adc
loope
imul
dec
xor
adc
cmps
xor
daa
fcom
adc
rcl
leave
xor
mov
xchg
jae
dec
push
(bad)
js
jmp
loopne
adc
pop
mov
pop
xchg
or
and
mov
fst
cmc
mov
mov
ret
pop
ja
stc
rol
push
inc
xlat
rcr
pop
and
cmc
xlat
mov
addr16
mov
mov
adc
or
js
mov
es
aaa
xchg
push
lods
pusha
test
fdivr
shl
ds
cmp
xor
jb
rcr
repnz
mov
inc
shl
cdq
pushf
in
dec
les
mov
inc
jne
xchg
xlat
xchg
call
pushf
cwde
xchg
js
lea
sub
xor
xor
popa
imul
mov
stc
xchg
dec
stos
fcomp
out
xchg
adc
cdq
es
ror
add
outs
sub
xor
xchg
popa
adc
les
call
gs
push
cwde
cmps
(bad)
inc
sbb
into
out
fwait
cmps
stos
pop
push
sub
xchg
retf
sub
pop
test
inc
xor
call
outs
fcomp
cmp
mov
xchg
lea
sahf
into
enter
ins
sbb
push
loope
sub
jnp
out
mov
je
movs
ins
scas
out
imul
retf
xor
cmp
(bad)
movs
fadd
ror
out
test
jo
leave
push
sbb
fcomp
(bad)
fsub
push
aas
sar
ss
mov
xchg
(bad)
mov
ins
pop
pushf
pop
and
and
and
xor
jae
mov
xchg
pushf
jle
(bad)
enter
in
dec
mov
jle
jl
push
or
movs
aaa
pop
push
dec
cmp
addr16
pop
add
mov
or
clc
inc
cmp
dec
sub
push
idiv
ss
dec
xor
dec
fsub
sbb
addr16
outs
xchg
xchg
mov
mov
inc
mov
pop
xchg
(bad)
test
sti
and
lds
add
aaa
es
mov
xor
jg
dec
ret
or
push
jmp
test
mov
imul
jecxz
retf
ins
ins
sub
sub
push
push
mov
xchg
ret
mov
jg
lods
imul
cmp
cmp
push
cmp
sub
add
cli
call
iret
cmps
add
sub
push
push
adc
and
ss
push
jg
inc
xor
test
push
in
popa
add
push
jl
out
neg
imul
int
lahf
xchg
test
ins
and
push
add
fimul
push
add
pop
push
movs
ins
jns
shr
shl
sbb
jbe
jno
xchg
test
es
int3
mov
cmp
(bad)
stc
ret
adc
nop
cmp
in
mov
mov
cmps
xor
clc
mov
ins
pop
leave
jle
ds
dec
imul
adc
(bad)
in
push
xchg
test
fld
pushf
xor
or
cmp
sub
xchg
push
cmps
int
cmps
loop
sbb
clc
dec
pop
xchg
add
fcom
lock
rol
and
add
mov
fisub
(bad)
mov
mov
test
inc
mov
mov
lds
dec
std
push
push
mov
or
not
sub
xor
jmp
dec
shr
cwde
ret
frstor
sub
inc
rol
aas
ja
nop
imul
sub
dec
(bad)
repz
call
jle
mov
cli
out
or
lods
inc
cmp
clc
pop
aaa
pop
data16
(bad)
movs
ins
sar
imul
psrlq
ret
jg
clc
push
sbb
sti
and
push
icebp
jmp
(bad)
xor
leave
and
jno
lahf
imul
jns
dec
mov
lahf
jnp
(bad)
mov
imul
jmp
outs
sbb
pusha
(bad)
jmp
add
scas
imul
sbb
dec
in
lds
nop
movs
movs
jbe
sub
mov
lds
or
jmp
mov
lock
aam
fwait
and
retf
pop
sub
ret
(bad)
shl
cmps
daa
or
loopne
imul
fnstcw
push
push
sar
cmp
cmp
push
cmp
sti
lods
push
adc
push
leave
in
aad
inc
es
push
add
fld
nop
retf
test
push
sub
mov
or
mov
cmps
jmp
test
ret
ins
aas
cmp
pop
and
sar
aas
pop
enter
mov
int
loop
and
and
or
sbb
fsub
data16
ss
mov
adc
and
mov
rcr
or
sub
pusha
pop
jbe
push
dec
or
js
outs
not
test
je
xlat
jns
sub
adc
xor
inc
or
adc
mov
xchg
cli
xchg
(bad)
fimul
adc
cmp
pop
ins
arpl
imul
push
sbb
xor
add
addr16
add
icebp
lds
jnp
xchg
and
daa
add
call
xchg
std
cmps
imul
(bad)
xor
mov
lods
push
fsub
movs
clc
mov
or
adc
xchg
jecxz
xchg
mov
in
xor
stos
(bad)
outs
xchg
cld
jbe
pushf
enter
xor
mov
xor
push
in
push
xchg
and
fwait
cmp
pop
sbb
mov
mov
push
sar
mov
push
xor
enter
sbb
neg
push
imul
in
sub
xchg
cld
sbb
pop
jle
xlat
clc
inc
mov
jae
or
pop
mov
pop
add
inc
jge
std
mov
sbb
outs
repz
sbb
inc
push
mov
retf
and
sub
adc
mov
sbb
inc
shl
cdq
(bad)
xlat
push
mov
out
jle
add
sti
mov
and
sub
cmp
sub
xlat
adc
pop
jne
pop
shl
or
pusha
dec
sahf
inc
adc
loop
int3
mov
push
and
retf
test
pop
pop
jge
jg
or
mov
add
xor
out
xchg
sbb
mov
pop
shl
fstp
add
cli
adc
call
sub
push
rcr
xchg
cwde
fwait
jo
(bad)
xchg
add
sahf
or
mov
pop
lea
clc
push
sub
mov
cmps
aaa
popa
inc
scas
cmp
push
int3
or
pop
mov
test
sar
fimul
out
xlat
or
jmp
aam
jmp
test
in
mov
dec
movs
jmp
test
outs
sub
movs
inc
cli
mov
ds
jns
stos
aaa
cwde
out
mov
stos
sub
je
adc
push
and
call
xor
pusha
jl
fldl2t
sbb
adc
je
out
jbe
pop
and
and
je
loope
adc
enter
push
jmp
cmp
xor
add
jb
inc
ins
out
mov
lock
dec
mov
and
and
icebp
mov
ret
push
stc
sub
std
mov
mov
icebp
mov
xor
aam
scas
pushf
xchg
out
jae
call
fidiv
add
pushf
push
mov
pop
pop
fistp
sahf
mov
sar
movs
aad
sti
mov
fcmovnu
daa
loopne
loope
rol
push
dec
inc
movs
(bad)
arpl
xchg
ins
movhps
stos
jmp
mov
fsub
add
and
jg
mov
lods
stc
pusha
sub
push
js
mov
dec
jns
jle
dec
in
xchg
addr16
std
pushf
and
xor
push
loopne
cmovo
and
stc
movs
fwait
cmps
addr16
inc
jbe
push
ds
dec
test
es
in
loopne
(bad)
call
retf
sahf
mov
fidiv
or
pop
or
sub
int3
ja
pushf
je
mov
inc
call
adc
test
out
push
add
shl
in
sub
and
cmp
enter
iret
cmp
xor
mov
add
inc
test
sub
xchg
mov
retf
push
test
sbb
sbb
call
pop
es
(bad)
cwde
mov
test
(bad)
cld
push
ins
or
dec
xor
and
xchg
cwde
mov
pop
icebp
mov
popa
test
test
jp
fs
sbb
imul
(bad)
mov
(bad)
ss
dec
mov
iret
and
ins
add
xchg
aaa
and
adc
cmp
loopne
dec
and
repnz
in
jo
movs
cmp
add
ds
sub
std
sub
leave
es
add
or
mov
push
or
pop
out
jb
addr16
popa
mov
cdq
test
test
mov
sub
dec
adc
adc
sbb
aaa
xor
fwait
sahf
xchg
mov
push
(bad)
sti
gs
nop
es
int
adc
pop
test
leave
aaa
mov
mov
push
sar
cs
pop
or
xor
pop
mov
jp
xsha256
cmps
rcr
pop
out
out
stos
inc
mov
inc
sub
imul
dec
add
jmp
add
push
and
push
mov
icebp
js
mov
clc
(bad)
jb
adc
not
imul
cwde
aam
sub
jge
or
jmp
les
ss
pop
mov
mov
mov
cmp
js
mov
arpl
lea
or
xchg
imul
outs
add
adc
push
aam
retf
push
and
or
mov
inc
and
or
jbe
in
sbb
mov
mov
xchg
mov
outs
dec
xchg
nop
enter
jmp
clc
pop
repz
(bad)
jmp
pusha
inc
xor
mov
push
aad
inc
sbb
popa
call
js
pop
cmp
jmp
(bad)
sbb
fisubr
inc
push
js
cdq
and
inc
inc
dec
mov
mov
sbb
push
jmp
js
sbb
and
inc
sub
pop
fisub
loope
cli
push
cmp
adc
arpl
cmp
popf
inc
dec
jae
stos
xor
push
cmps
sbb
or
and
push
mov
pop
jbe
inc
dec
jmp
test
push
cmp
(bad)
mov
cld
lahf
pop
imul
clc
stos
aad
fstp
clc
jbe
pusha
shl
out
cmp
inc
mov
and
mov
daa
dec
rcl
clc
imul
repnz
sbb
rcl
cwde
in
sbb
shl
mov
inc
ficomp
add
test
ja
les
data16
test
lods
xchg
int
or
into
fidiv
pop
in
shr
pop
test
shl
fsubp
xchg
cmp
lahf
cmps
inc
jp
sub
test
push
xor
das
xor
and
adc
(bad)
sbb
leavew
popf
loope
lds
sbb
cmovs
or
add
mov
test
mov
add
mov
test
jp
das
psrad
adc
jo
mov
add
and
mov
imul
ret
in
imul
fld
scas
inc
mov
fnstcw
or
sbb
fnstsw
ins
and
sbb
lods
sub
ror
jmp
pushf
movs
data16
sbb
clc
or
addr16
rol
pop
mov
sub
imul
sbb
fidivr
in
sti
cmp
sahf
push
pop
adc
cld
add
das
push
adc
cmc
mov
cmp
lfs
or
cmps
xchg
out
(bad)
aad
jno
add
test
cs
jmp
leave
leave
lods
mov
xor
dec
fld
push
push
scas
rcr
aaa
test
and
mov
dec
adc
jae
sub
ins
mov
or
pop
stc
ror
push
cmp
push
cmp
arpl
arpl
xlat
es
lahf
and
sub
cwde
sub
movs
mov
lods
xor
xor
aad
xchg
pop
mov
ret
cli
adc
mov
jns
je
(bad)
sub
mov
hlt
cwde
or
int3
xor
add
std
or
out
imul
dec
push
xlat
or
fidivr
repz
es
xor
test
rcr
xlat
dec
inc
and
mov
mov
push
ja
outs
ja
or
and
fsubr
xchg
or
pop
bound
xor
pop
cs
call
shl
add
test
(bad)
pop
mov
mov
adc
push
shl
jle
lahf
cld
loopne
out
(bad)
aas
scas
jne
call
jp
or
sbb
in
repnz
xchg
(bad)
pop
das
mov
fs
outs
std
into
and
sbb
pop
adc
icebp
sbb
adc
adc
loopne
out
int
les
push
call
ret
mov
pushf
jmpw
xchg
cld
fstp
add
loopne
ss
enter
dec
push
cli
inc
ins
ja
ins
or
mov
xchg
push
dec
addr16
jbe
inc
stc
cld
out
(bad)
stc
(bad)
dec
or
in
adc
mov
arpl
mov
dec
inc
ss
lods
or
(bad)
out
push
test
fidivr
xor
xchg
jns
imul
sbb
xchg
push
sub
lahf
cmp
jmp
addr16
popf
ja
data16
call
mov
and
stc
sbb
jge
sub
ss
out
dec
push
xchg
dec
or
inc
sbb
imul
in
adc
jl
sub
stc
inc
in
jecxz
add
es
ss
push
jne
sub
cmp
mov
mov
in
sub
rcr
es
mov
cmp
lods
xchg
out
fbld
rcl
jle
sbb
daa
mov
xor
jp
jb
(bad)
test
vfmadd231ps
cmp
sbb
xor
push
jns
stc
int3
sar
pop
movs
or
aaa
mov
fs
pop
(bad)
imul
xchg
xor
jns
sub
add
ret
cmc
cmps
xlat
test
push
sub
aad
cmp
sub
and
inc
sbb
into
mov
xchg
mov
push
pop
pop
cmp
cmps
js
mov
nop
pop
cmp
pop
xor
jns
xor
mov
xchg
enter
(bad)
ss
adc
push
inc
mov
add
sbb
cwde
idiv
push
into
cld
pop
(bad)
mov
push
pop
mov
fucom
dec
data16
push
sub
vshufpd
mov
bound
test
cmp
hlt
dec
dec
(bad)
push
stc
mov
retf
mov
cmps
aad
xchg
dec
sub
rol
add
push
and
jne
int
xchg
call
sti
enter
mov
pop
cmp
enter
(bad)
aaa
xchg
imul
cmp
cld
and
ins
lahf
jbe
test
xchg
cs
js
or
pop
call
shl
cmps
mov
call
cdq
aam
js
xchg
shl
push
jl
scas
loope
sbb
in
lea
mov
(bad)
enter
inc
jbe
ss
cmp
rol
not
jmp
pop
xchg
xchg
mov
mov
hlt
dec
cmp
pop
adc
inc
mov
ret
dec
test
adc
or
ret
add
out
sar
movs
inc
sbb
shl
cwde
scas
cwde
inc
ss
dec
test
fwait
or
dec
xor
bts
and
stc
mov
ss
(bad)
dec
in
pop
mov
sub
ins
je
addr16
ss
mov
out
shl
aaa
lahf
jge
loope
rcl
addr16
and
push
out
push
sbb
mov
jae
popf
push
dec
jbe
mov
mov
dec
cmp
mov
es
cmp
out
es
dec
dec
push
xchg
sahf
or
mov
imul
add
test
sbb
outs
(bad)
jb
or
sub
cmp
push
push
jmp
mov
pop
jmp
es
or
xor
jbe
sub
mov
sub
mov
call
cs
mov
test
adc
or
jp
pop
test
(bad)
xchg
es
or
inc
cmp
pop
push
push
or
in
lock
movs
fdiv
sbb
in
cli
push
popa
int3
mov
and
test
gs
shr
dec
dec
(bad)
cmp
pop
and
xchg
or
nop
popfw
xchg
xor
test
and
mov
fcom
bound
fwait
xchg
loop
jns
mov
lock
sti
jge
inc
sbb
stos
icebp
aam
lods
and
xlat
das
ins
adc
retf
inc
mov
mov
cmc
in
popa
mov
leave
shl
pop
jns
mov
fidiv
push
cmp
int3
fdecstp
popf
xor
mov
mov
fsubr
shl
or
out
xor
pop
jnp
mov
push
loop
movs
test
call
mov
and
cdq
pop
inc
dec
sbb
push
mov
clc
jbe
(bad)
(bad)
call
aaa
inc
aam
inc
cmps
repz
push
dec
mov
call
daa
mov
jp
add
jecxz
push
int3
inc
jbe
mov
sbb
mov
sbb
mov
and
es
call
pop
test
or
cmp
nop
mov
jg
cmc
cmp
xchg
sbb
cld
jne
mov
div
mov
aam
sub
rcl
enter
jbe
ja
cmp
push
aad
or
dec
(bad)
cmps
fnstsw
fld
adc
push
mov
mov
(bad)
lock
add
das
xchg
jle
or
sti
mov
jo
and
jo
ins
mov
fdiv
aaa
sbb
mov
cwde
sbb
jmp
retf
sbb
mov
push
pop
pusha
adc
scas
fstp
mov
addr16
xchg
ror
(bad)
push
movs
cld
sbb
retfw
movs
leave
lock
sbb
(bad)
pushf
jmp
lods
iret
mov
push
out
jmpw
jbe
clc
jnp
lock
test
mov
push
pop
mov
push
mov
std
ds
dec
push
movzx
sub
dec
and
es
nop
sar
mul
fsub
xlat
mov
xchg
cli
or
je
inc
push
and
js
into
shr
cmps
fild
push
test
enter
outs
pop
mov
ss
movs
adc
jl
pop
jge
bndstx
cmc
(bad)
(bad)
cli
jns
fnstenv
pop
bound
or
add
xor
js
or
push
enter
xchg
movs
jbe
or
sub
rcl
mov
sub
cs
and
movs
shl
test
push
mov
xchg
dec
sbb
call
xchg
cmp
push
jne
test
push
dec
fstp
popa
xor
xchg
push
cmps
outs
mov
sbb
pop
sbb
xchg
cli
cwde
neg
cmps
fmul
sub
push
inc
fistp
jmp
push
mov
data16
div
add
call
and
aad
fs
dec
dec
push
ins
jbe
test
lds
inc
clc
mul
pop
ja
inc
and
retf
mov
dec
out
push
mov
push
leave
dec
movs
out
jne
jb
inc
int
dec
sbb
jne
or
daa
and
shl
push
fsub
xchg
aad
add
xor
out
pop
add
cwde
xlat
hlt
fisub
mov
xchg
call
jne
jecxz
ss
cwde
daa
test
fwait
(bad)
jle
or
pop
out
push
leave
sub
lahf
call
fldenv
or
scas
ja
ret
mov
(bad)
sahf
js
mov
int3
xchg
cmps
lds
enter
cmps
addr16
xchg
adc
lock
pop
out
retf
dec
hlt
movs
in
lds
mov
cmp
test
aad
sbb
es
aas
mov
mov
mov
xor
inc
aad
test
push
xor
ss
pop
retf
pop
idiv
mov
push
sahf
stc
into
xchg
cmps
or
les
pop
xchg
and
mov
fs
arpl
popf
xchg
cdq
fwait
mov
fwait
cmp
push
stc
lds
jns
jecxz
or
mov
cmp
inc
cmp
mov
cmp
pop
jnp
xchg
jae
xor
cmp
aam
aas
or
out
hlt
adc
mov
pop
out
aad
retf
test
pop
add
fsubr
daa
mov
xor
mov
jg
mov
jmp
in
movs
jmp
out
cmp
cdq
push
sbb
mov
inc
jns
imul
sbb
or
call
cmp
mov
pop
jbe
ret
mov
das
loope
hlt
(bad)
in
fst
fsub
or
pop
fsubr
stc
cmp
pop
ja
push
imul
leave
pop
cdq
add
mov
cmp
fdiv
cmp
arpl
dec
mov
fwait
loope
iret
fidiv
jmp
sar
inc
xor
sub
out
out
into
sar
ins
loop
aad
cmc
jmp
cmp
dec
cmps
sahf
ret
aam
cmp
push
jecxz
jmp
pop
push
dec
mov
cmps
or
int3
push
in
pop
imul
cmp
test
or
enter
outs
or
rol
les
mov
push
ds
xor
push
jne
add
jbe
push
xlat
enter
sar
mov
ins
mov
push
jne
mov
xchg
ja
inc
add
inc
push
push
outs
retf
(bad)
sbb
not
(bad)
test
div
xor
push
dec
pop
cld
mov
push
inc
pop
repz
jb
pop
test
jg
dec
call
out
and
cmp
fsubr
pushf
fdiv
xor
lods
shl
(bad)
scas
xchg
or
adc
ret
xor
out
sti
jmp
jmp
pop
sti
pop
or
(bad)
fist
cmp
push
test
pop
sbb
cwde
and
mov
push
mov
xchg
in
xchg
mov
retf
imul
sbb
rol
aad
and
sbb
into
cli
sbb
and
(bad)
fiadd
lds
or
outs
(bad)
pop
cmps
test
sbb
in
adc
cdq
outs
repnz
add
jp
xchg
outs
int3
icebp
test
xchg
sbb
jmp
aaa
inc
repnz
mov
cmp
iret
sar
sub
mov
out
adc
jmp
mov
cmp
xor
dec
xchg
push
jge
fs
jmp
stc
pop
std
jge
es
xchg
push
pop
push
adc
sub
mov
imul
repnz
movs
mov
repnz
jmp
push
cmp
and
pop
pop
outs
out
mov
mov
(bad)
lea
js
leave
clc
out
in
fnstenv
jmp
xchg
mov
aas
ds
push
mov
nop
fcomi
xchg
adc
dec
fistp
rcl
pop
sbb
or
ins
cs
into
fchs
leave
fisubr
push
cmp
inc
jl
sbb
inc
cmp
mov
add
mov
repz
shl
mov
jno
inc
cmp
loop
test
adc
nop
push
dec
clc
inc
jae
fist
sbb
or
retf
and
inc
pop
aas
jge
call
cmps
call
fcomp
add
pop
arpl
jbe
xchg
adc
xchg
xor
lock
mov
fsubr
sbb
adc
dec
cmp
sub
call
mov
movs
jbe
ins
scas
pop
out
jle
sbb
sti
cmps
and
adc
mov
cmp
ret
pop
stc
out
or
cld
mov
sub
ss
les
cmps
xchg
push
cmps
and
scas
cmps
pop
inc
xchg
mov
jns
pop
push
pusha
(bad)
pop
add
retf
retf
or
shr
fidiv
sahf
inc
jl
and
dec
imul
in
in
cmp
cmp
mov
leave
push
dec
xchg
cld
adc
outs
sbb
xchg
test
daa
ins
test
mov
mov
mov
push
xor
test
jno
or
mov
push
out
(bad)
xchg
mov
fwait
std
pop
xor
pcmpgtb
jno
push
mov
outs
in
js
test
add
jns
mov
int
and
(bad)
in
inc
pop
sbb
mov
(bad)
fs
(bad)
mov
mov
xchg
sbb
scas
and
pop
sbb
pop
xor
push
fldenv
movs
or
xchg
add
cmp
xor
inc
je
mov
jb
(bad)
ds
mov
jp
mul
ror
inc
pop
fstp
out
cmp
(bad)
in
jecxz
js
cmp
enter
inc
ds
in
popf
inc
push
dec
imul
rcl
test
movs
sbb
jne
inc
or
push
dec
mov
lods
xchg
xchg
test
or
enter
jmp
adc
inc
js
pop
inc
add
pop
fsub
jae
test
test
fdivr
sub
dec
add
pop
call
mov
xchg
nop
cdq
mov
sub
repz
mov
std
int
inc
leave
(bad)
and
adc
cmc
mov
push
push
(bad)
pop
mov
mov
mov
imul
lods
retf
xchg
pop
aad
mov
mov
iret
mov
imul
icebp
pop
add
test
popa
(bad)
outs
adc
retf
fstp
sbb
add
sbb
inc
and
mov
dec
jns
mov
test
leave
scas
mov
xchg
aaa
sub
repnz
add
xchg
dec
push
test
mov
cli
daa
mov
(bad)
ret
rol
push
repz
push
lds
adc
test
push
mov
je
enter
stc
hlt
adc
out
cmps
cmps
int3
dec
sub
popa
push
mov
sub
push
imul
into
jbe
jp
xor
sbb
adc
cdq
(bad)
jns
mov
or
mov
push
or
xchg
loopne
test
ret
cmc
movs
popf
jns
cdq
adc
int
jmp
xchg
mov
pushf
stc
mov
fxch
jg
fmul
sbb
mov
mov
std
pop
adc
dec
aad
or
sub
adc
mov
and
sbb
xchg
add
jmp
fwait
jns
jo
fdecstp
test
mov
mov
xchg
ins
push
xchg
sub
lds
imul
pop
clc
retf
sub
stc
xchg
sub
pop
mov
es
cmp
ss
repz
mov
imul
div
pop
hlt
clc
cmc
mov
movs
mov
push
popf
ja
mov
lds
in
mul
inc
leave
pop
and
push
xchg
fstp
and
call
mov
pop
push
or
jp
dec
(bad)
jmp
adc
cli
push
(bad)
push
aam
mov
cmp
xchg
mov
cmp
inc
xchg
jecxz
push
dec
test
inc
cmp
xchg
jl
stos
fiadd
jo
inc
inc
scas
sbb
in
in
nop
leave
test
jnp
push
cdq
aaa
hlt
lods
pop
(bad)
jb
xor
jmp
jns
sub
imul
test
enter
cmps
div
jne
or
jbe
mov
stos
fucom
fwait
xlat
cmp
inc
imul
inc
movs
push
and
push
inc
sbb
les
test
imul
xor
not
cmps
fld
sub
loopne
mov
jmp
push
pop
xchg
pop
mov
test
inc
test
(bad)
cli
push
inc
sti
or
ret
mov
push
push
jns
loopne
ret
not
dec
mov
out
(bad)
stc
xchg
mov
dec
repz
jp
jmp
fisubr
data16
mov
mov
dec
in
scas
leave
jbe
inc
cmp
lock
(bad)
into
jmp
push
mov
jge
push
or
push
or
rol
(bad)
stc
(bad)
dec
push
jne
gs
fstp
or
mov
into
mov
xor
inc
push
jns
gs
and
(bad)
pop
mov
in
rol
jmp
inc
fcomp
sub
sti
rol
frstor
dec
outs
imul
mov
cmp
leave
adc
jmp
gs
cli
mov
sub
dec
in
inc
and
or
add
or
fsubr
add
push
out
and
mov
jno
in
xlat
add
pop
or
cmps
int3
cld
and
ja
xlat
movs
psubusb
lds
aad
add
push
std
(bad)
xchg
inc
sbb
cmc
push
daa
and
fwait
mov
inc
iret
xchg
test
jbe
jnp
mov
mov
push
out
push
xchg
mov
in
and
in
jmp
rol
popa
add
mov
pop
pop
repnz
mov
jno
pop
cmps
loope
fisub
mov
cs
pop
mov
pop
sub
mov
fdiv
nop
sub
ja
dec
outs
cmps
js
aad
call
mov
sbb
push
pop
mov
xchg
pop
test
pop
out
adc
mov
sbb
xchg
mov
(bad)
enter
sub
inc
popf
cld
fidiv
repnz
imul
out
pop
(bad)
or
data16
lds
out
mov
pop
lods
adc
fcom
sub
xor
mov
adc
test
mov
aaa
mov
cmps
push
push
xchg
inc
and
(bad)
sbb
stos
jnp
dec
shr
xlat
jbe
dec
loopne
inc
push
cmp
jns
jmp
pop
adc
ss
outs
arpl
stos
js
in
jnp
pop
jno
inc
cmp
test
add
mov
sahf
popf
push
mov
jb
lods
cmp
mov
xchg
xlat
test
mov
mov
or
out
out
rcr
jp
push
ss
lea
inc
dec
cmp
test
cmp
mov
mov
sub
dec
in
call
test
mov
add
pop
neg
shl
lds
xchg
les
(bad)
cmp
inc
adc
or
ja
popw
in
jbe
mov
pop
and
sub
xchg
lods
dec
ds
fistp
aaa
cmp
loop
cmp
mov
popf
xor
cmp
call
sbb
mov
movs
mov
fwait
nop
mov
dec
push
xchg
call
and
push
test
push
fistp
jno
or
inc
in
push
das
scas
test
stc
dec
retf
gs
inc
pop
stos
std
enter
sub
xor
sbb
jmp
pop
pusha
rol
or
pushw
fnstenv
mov
dec
mov
mov
sbb
sbb
in
cmp
jbe
cli
cwde
test
lds
clc
retw
mov
cmps
sub
sub
test
test
mov
sbb
push
mov
cmc
je
mov
call
out
and
xchg
or
test
xchg
pusha
shr
push
movs
retf
cmp
ins
or
test
sbb
in
clc
jp
push
enter
jle
ror
xchg
out
mov
in
inc
xlat
test
mov
fnstcw
xchg
aad
(bad)
xchg
fiadd
or
movs
outs
push
cmp
add
test
dec
aas
pop
jbe
push
push
xchg
es
leave
jmp
outs
mov
aas
sbb
out
or
xlat
xor
test
(bad)
cmp
sub
mov
out
test
push
leave
icebp
fnstcw
test
or
xchg
mov
mov
ds
and
pop
repnz
push
gs
pushf
pop
call
jnp
in
(bad)
xlat
sbb
loop
scas
imul
sbb
js
mov
xor
inc
lds
or
mov
leave
sub
inc
mov
cmp
loope
xchg
sub
call
jp
sub
mov
test
jl
or
dec
retf
js
or
pop
jmp
add
call
cmps
loop
cmp
mov
fsub
repz
js
pop
(bad)
push
pop
cmps
mov
cmps
pop
imul
dec
aaa
fnsave
out
jmp
or
xchg
pop
and
pop
pop
cmp
test
aam
movs
aaa
test
bound
cwde
es
xchg
push
jmp
cmp
js
mov
mov
jbe
push
jb
xchg
push
cmps
and
inc
js
ins
aam
sti
movs
fnstcw
xchg
ins
out
or
adc
mov
aad
adc
sub
mov
mov
sub
ret
add
xabort
ja
cmc
in
mov
es
push
push
out
mov
dec
jnp
jecxz
push
jnp
adc
test
xchg
fcom
add
arpl
js
and
dec
fld
mov
xor
data16
fmul
add
mov
sbb
aaa
jnp
inc
ins
xlat
(bad)
mov
ins
and
fst
mov
loop
jb
dec
cmp
ins
push
sub
push
out
xor
cld
retf
adc
or
push
enter
xor
push
out
xchg
sbb
jns
or
mov
jmp
inc
les
clc
es
out
pop
js
pop
out
mov
in
aam
add
in
inc
sub
je
cmp
inc
dec
imul
or
pop
or
enter
mov
(bad)
addr16
sbb
outs
sbb
mov
arpl
fs
test
cmp
mov
aaa
pop
aaa
mov
les
mov
add
push
ror
push
xchg
push
cwde
or
sbb
push
test
sub
arpl
mul
dec
arpl
aaa
sub
sbb
cli
pop
aaa
push
xchg
adc
pop
or
push
xor
jmp
push
push
xchg
inc
sti
cmp
fwait
inc
mov
test
fldcw
call
out
mov
push
mov
inc
mov
(bad)
repnz
push
out
jmp
cmp
jl
sub
pop
xor
and
push
fcom
mov
push
add
les
mov
push
inc
mov
and
xor
dec
fsubr
test
jno
mov
leave
mov
or
fsubr
pop
in
mov
inc
mov
sub
add
or
dec
out
dec
push
sbb
imul
sub
push
(bad)
mov
mov
outs
pop
xor
sbb
push
sbb
mov
sbb
(bad)
daa
dec
jne
jle
pop
cld
dec
cmp
jbe
xchg
popf
push
hlt
pop
cmps
hlt
inc
test
or
jecxz
ins
push
test
sub
jmp
(bad)
(bad)
sbb
daa
add
pop
inc
sub
jo
add
aam
popf
movs
xchg
inc
(bad)
(bad)
jmp
out
push
mov
or
jns
dec
clc
xchg
scas
call
daa
push
jae
pop
ret
cdq
cdq
mov
mov
test
push
call
cmp
push
stc
xchg
sub
and
inc
mov
cdq
neg
stos
cmp
pop
cmps
pop
sub
sbb
data16
push
outs
dec
add
adc
fstp
sub
(bad)
mov
jno
cmp
leave
sub
jmp
aaa
cli
popf
out
(bad)
add
and
cmp
xchg
xchg
xchg
test
fsub
cmc
dec
cs
hlt
inc
dec
push
sbb
lods
out
cs
ins
sub
mov
jmp
cmp
outs
xor
and
(bad)
pop
in
mov
daa
mov
ss
inc
cmp
pop
push
sbb
cmp
push
in
(bad)
xlat
inc
or
fst
adc
js
popf
dec
(bad)
pop
push
cmp
daa
and
inc
test
push
mov
imul
xchg
add
ins
push
and
(bad)
ins
cmp
enter
and
lods
cmp
nop
ins
inc
cmp
es
lds
push
fwait
xor
test
je
movs
fs
cmps
lahf
xlat
pop
xchg
out
and
es
cmp
je
fnstenv
cmp
or
pop
sub
clc
ins
sar
mov
inc
sbb
add
clc
repz
dec
mov
fcmove
xchg
into
xchg
pop
xor
addr16
cmp
jg
push
jmp
out
fwait
xchg
fild
retf
call
and
popa
pop
pop
sub
arpl
jmp
repnz
fcom
retf
pop
cs
jle
pop
xor
dec
rdpmc
push
idiv
xchg
mov
jmp
mov
jne
jne
les
jns
inc
arpl
dec
mov
fdiv
sub
(bad)
mov
fwait
cld
pop
retf
xchg
sbb
sub
sub
loopne
or
sbb
aam
in
push
xor
div
ret
jns
pop
stos
inc
ret
mov
movs
mov
xchg
mov
mov
jmp
(bad)
rep
sbb
adc
loop
ret
pop
and
sahf
fucomi
call
es
dec
and
sbb
and
push
in
int
fdivrp
retf
mov
iret
retf
mov
retf
push
enter
es
and
sub
daa
sbb
sbb
mov
addr16
aam
retf
shl
loopne
gs
dec
pop
xchg
imul
jle
mov
xchg
clc
mov
adc
fmul
arpl
xchg
popa
mov
ds
iret
mov
add
call
sbb
out
jle
daa
movs
leave
(bad)
stos
in
or
xchg
cmp
mov
jmp
js
stos
push
jae
add
dec
int
(bad)
mov
fdivr
pop
(bad)
cmp
out
xlat
stos
out
jne
and
mov
pop
mov
xchg
pop
in
sbb
or
pop
out
pushf
mov
or
ja
repnz
mov
ds
movs
and
jge
cwde
clc
push
sbb
sub
(bad)
inc
cmp
cdq
dec
and
jmp
nop
test
leavew
arpl
sub
jl
jl
sub
es
sbb
(bad)
xor
shl
pop
cmp
mov
sbb
arpl
cmp
jne
pop
fucomi
iret
add
ds
rol
out
cwde
scas
push
shl
push
fidivr
adc
call
adc
jecxz
loopne
cli
xchg
int3
test
dec
xchg
mov
aas
pop
xchg
and
jae
ja
cmp
rol
add
cmp
cmp
lods
mul
adc
cmp
fs
pop
mov
mov
mov
and
(bad)
out
aaa
jl
scas
stc
repnz
out
leave
bound
dec
mov
cmc
mul
out
mov
sub
jmp
sahf
dec
push
int
shufps
or
adc
push
push
sub
loope
(bad)
sub
pop
adc
not
out
xor
inc
stos
scas
stc
xor
shl
cmp
les
addr16
mov
sbb
jbe
and
xchg
out
or
pop
lods
push
(bad)
daa
mov
push
cmp
mov
arpl
push
rcl
mov
jg
fimul
dec
jbe
jbe
xchg
mov
jno
xchg
inc
mov
scas
adc
push
ror
jmp
movs
xor
or
bsf
dec
in
cwde
movs
popf
push
data16
(bad)
out
jmp
outs
or
push
imul
push
mov
sbb
pop
sub
jecxz
cmp
jbe
xchg
push
xor
inc
ja
jbe
mov
xchg
in
rcr
adc
and
push
dec
call
cmp
test
pop
jne
sbb
sub
sub
push
int3
lea
mov
cmp
sub
or
cmp
out
shl
dec
xor
pop
cs
mov
(bad)
cmp
add
(bad)
mov
push
sub
jmp
cbw
mov
ret
pop
ret
ficomp
sbb
call
imul
mov
fnstsw
test
ret
xchg
je
inc
loopne
cmp
add
cmps
pop
mov
jmp
mov
cs
pop
xor
leave
inc
xlat
aam
cmp
push
out
mov
(bad)
shl
sub
outs
xor
(bad)
mov
sti
jno
jns
xchg
mov
jbe
mov
int3
cwde
xchg
stos
cmps
xchg
fs
mov
jns
pop
cmp
jmp
mov
xchg
mov
js
or
jmp
push
cli
push
je
leave
clc
pop
cmps
dec
cli
push
(bad)
enter
stos
imul
bound
movs
(bad)
cmps
ja
push
(bad)
out
sbb
test
xchg
jns
fst
neg
or
jbe
out
dec
mov
out
leave
repz
(bad)
outs
fdiv
(bad)
imul
cmps
dec
mov
inc
cmp
fmul
pop
or
mov
sub
imul
push
xchg
mov
sub
ss
mov
dec
xchg
aam
dec
pop
mov
sbb
cmp
and
jmp
fisttp
push
ja
(bad)
mov
iret
adc
(bad)
or
mov
mov
mov
inc
shl
dec
push
les
imul
fild
cmps
stos
mov
std
sub
mov
aaa
stc
add
inc
out
das
retf
inc
call
mov
xchg
or
addr16
fcom
inc
imul
mov
out
push
mov
es
mov
mov
mov
fcmovbe
xchg
cmp
pop
push
imul
daa
pop
and
ret
shl
cli
(bad)
(bad)
int3
imul
xor
push
xchg
test
sar
jp
imul
pop
call
rol
ss
push
sahf
dec
call
sub
mov
imul
(bad)
ds
mov
rcl
push
add
bound
mov
adc
dec
imul
leave
xchg
outs
sbb
(bad)
cmps
sbb
ins
inc
push
(bad)
mov
icebp
ja
and
mov
nop
push
xchg
sbb
xchg
mov
mov
in
xor
mov
int3
fwait
jo
(bad)
outs
in
call
mov
inc
mov
push
out
push
sbb
gs
(bad)
popa
push
dec
xor
pop
cwde
and
cmc
dec
or
mov
xchg
push
(bad)
add
adc
scas
daa
push
pusha
dec
push
mov
or
fbld
loopne
pusha
dec
cwde
jecxz
test
(bad)
push
into
imul
jae
pop
pop
sub
inc
and
adc
pop
cwde
loop
lods
(bad)
movs
shr
shr
stos
aaa
in
into
pop
ja
sbb
jge
int
sti
and
loop
sub
or
dec
stc
add
mov
cmp
(bad)
packuswb
js
jns
jno
data16
les
js
jns
inc
push
mov
sahf
hlt
test
xchg
mov
movs
(bad)
test
jmp
fsub
push
mov
and
arpl
call
sti
xlat
sbb
sub
sbb
sbb
mov
movs
mov
test
shl
and
jl
jmp
and
loopne
adc
push
cdq
inc
stos
xor
add
and
and
mov
inc
fcomp
test
cld
loope
popa
div
adc
dec
(bad)
fdiv
sbb
iret
jg
shr
inc
ins
dec
pop
ja
rcl
jbe
data16
cmp
aaa
packsswb
or
pop
outs
xor
rcr
mov
div
push
sub
jns
je
push
mov
fcomp
test
repnz
dec
sbb
xchg
inc
les
(bad)
clc
(bad)
push
cmps
aad
mov
int
sbb
dec
and
mov
mov
ss
(bad)
fld
leave
ror
inc
lahf
jne
adc
sub
dec
inc
push
or
sbb
rol
ret
out
inc
mov
sbb
or
mov
loope
add
mov
ds
ss
hlt
repnz
xchg
sbb
jge
cmp
dec
rcl
xchg
imul
mov
or
sar
pop
cdq
sbb
jns
imul
adc
or
dec
xchg
cmp
adc
psubd
repz
gs
cli
pop
call
mov
add
xlat
cli
cmp
pop
je
call
aaa
push
sti
cli
mov
aaa
(bad)
neg
jae
pop
sbb
fisttp
fbstp
sbb
jle
pop
mov
jae
rep
lahf
fimul
test
cli
mov
out
cli
jg
mov
ss
fcmove
inc
mov
repz
sbb
mov
sbb
lds
jae
dec
call
xchg
loopne
jp
retf
ja
cmp
idiv
mov
adc
adc
(bad)
sub
add
idiv
sahf
xor
xor
out
lods
fidivr
mov
mov
rcr
jns
or
mov
ror
int3
das
test
neg
jl
jb
xor
out
and
in
lock
and
test
js
popa
jg
adc
inc
xor
int3
cld
sbb
or
call
mov
fisub
iret
lock
pop
ja
dec
daa
fisub
push
jle
adc
jl
in
cmp
fisub
jns
in
ja
cmp
lock
nop
les
sbb
dec
cmp
mov
push
loop
imul
sbb
mov
cmp
sbb
xchg
cmove
mov
les
adc
xor
mov
mov
cmp
das
mov
adc
(bad)
data16
xchg
out
pop
hlt
xor
ret
sub
adc
lods
mov
mov
retf
(bad)
or
ja
cdq
jbe
out
leave
int
(bad)
jg
push
arpl
cmp
out
retf
jl
mov
(bad)
subss
pop
lahf
fsubr
ds
je
pop
iret
cmp
push
dec
loopne
or
in
cmps
out
pop
out
out
std
iret
cmp
aas
cwde
mov
jg
repz
sub
xor
adc
jmp
cmp
addr16
stc
retf
inc
mul
ja
add
jg
outs
pmulhw
or
out
pop
pop
cmp
or
dec
cmp
mov
adc
pop
or
dec
pop
or
wrmsr
out
xlat
lahf
mul
loopne
scas
push
nop
mov
fldcw
inc
push
xchg
dec
cmp
test
cmp
fwait
inc
mov
mov
fs
in
retf
lahf
imul
inc
mov
jmp
(bad)
push
dec
dec
cmp
sub
sub
(bad)
scas
rcl
nop
das
mov
mov
pop
(bad)
xor
adc
xchg
cmc
cmp
hlt
rcr
mov
mov
push
cmc
pop
adc
aaa
jp
std
add
popf
pop
pop
mov
shl
push
mov
cmc
sbb
fcom
jne
jb
mov
dec
cs
scas
(bad)
fsubr
cs
shr
sbb
inc
popf
mov
std
icebp
push
rcl
popa
leave
jne
ror
shr
icebp
jge
cmc
sbb
cmovbe
pop
popf
jns
pop
rol
mov
pop
icebp
mov
xchg
dec
xchg
xor
fcomp
mov
adc
bound
fsubr
shl
cmc
sbb
pop
cmc
stc
imul
outs
sub
push
jns
pop
cmc
cmp
pop
mov
rol
popf
jae
cdq
xchg
adc
jne
test
adc
rcr
jg
int
fst
push
mov
inc
(bad)
cmp
es
test
cs
inc
jns
sub
out
shl
(bad)
in
push
pop
scas
leave
adc
mov
rcr
or
fldcw
jmp
scas
enter
sbb
shr
dec
shr
unpckhps
xchg
ror
inc
adc
call
scas
mov
pop
jmp
pop
xchg
xlat
dec
pop
add
sbb
push
sbb
mov
mov
inc
fstp
out
push
fcom
fistp
mov
shl
mov
xlat
pop
mov
dec
lds
or
dec
xor
enter
dec
cmp
inc
jo
and
dec
mov
leave
mov
ss
xor
add
jno
shr
dec
rcr
jl
dec
cdq
jbe
mov
jae
repz
stos
inc
dec
xor
mov
(bad)
loop
fs
iret
dec
xor
(bad)
movs
dec
jg
adc
fcom
mov
lock
fiadd
pop
and
test
and
mov
iret
pop
ins
lea
mov
pop
movs
mov
xor
outs
pop
movs
or
mov
ret
nop
jno
dec
not
mov
mov
dec
xor
dec
aaa
dec
mov
mov
mov
and
lods
mov
ret
add
cmp
ret
imul
fst
xor
jo
imul
retf
dec
dec
xor
dec
inc
mov
mov
adc
mov
jbe
mov
adc
mov
jns
cmp
(bad)
popa
jo
mov
pop
xor
lds
outs
ret
iret
retf
cmp
ss
mov
mov
dec
mov
loopne
je
out
aam
pop
arpl
xor
ret
je
xor
ret
mov
dec
xor
ins
pop
cmp
push
inc
sti
ins
adc
aaa
jne
(bad)
inc
lds
push
shl
mov
(bad)
mov
mov
xor
fwait
in
inc
xor
jne
popa
and
cld
stos
push
mov
inc
add
and
and
test
and
stos
ins
je
push
jle
xor
loopne
jne
mov
mov
in
cmps
pop
lock
jne
hlt
and
icebp
pop
movs
xlat
in
add
jmp
popa
icebp
lods
cmc
test
std
or
and
in
movs
repz
add
mov
jne
in
sub
mov
gs
cmp
test
ret
shr
mov
mov
or
cli
popf
mov
xchg
push
fstp
sub
ins
sub
mov
sub
shl
mov
inc
aad
sbb
or
test
test
call
repz
pop
pop
inc
(bad)
call
lahf
in
call
or
mov
test
in
and
sub
xor
xor
retf
in
in
mov
push
sub
xchg
sbb
inc
popa
or
sub
ror
jmp
shr
movs
jne
mov
aad
loope
cmc
mov
ins
jne
cmp
popa
sub
scas
test
and
lea
or
fs
mov
sar
sbb
shl
dec
and
mov
in
loope
cmc
cmp
mov
inc
in
xchg
mov
leave
in
out
popf
sbb
sub
ins
inc
clc
xor
jl
(bad)
gs
mov
xor
and
in
lods
sbb
(bad)
mov
jns
fwait
sbb
push
and
mov
and
(bad)
daa
imul
jo
fcomip
stos
sbb
sbb
cmp
lods
fist
es
lock
call
(bad)
cld
cmp
mov
or
and
or
xchg
or
xchg
(bad)
shl
fbld
cdq
xor
mov
add
xlat
cmp
and
sbb
mov
xchg
pop
xlat
mov
cmp
inc
push
jno
xchg
rcr
xchg
shl
fist
push
sbb
push
pop
mov
mov
cmp
outs
xchg
xor
inc
les
cmp
push
xor
test
test
sub
xor
fisub
xchg
adc
out
imul
push
adc
addr16
pop
fist
jmp
dec
adc
sub
add
push
movs
leave
scas
aam
dec
rcl
xchg
add
adc
mov
xor
je
shl
mov
cmp
add
push
inc
inc
mov
pop
sub
xchg
sbb
adc
xor
stos
(bad)
call
sub
bound
shl
inc
sahf
outs
mov
dec
pop
mov
push
dec
out
mov
mov
adc
xor
sbb
scas
mov
xor
inc
mov
rol
retf
jne
out
adc
jb
mov
lea
inc
int3
cmps
ds
dec
aas
int
es
push
push
or
retf
(bad)
ss
lods
dec
xchg
push
push
scas
loop
outs
add
add
dec
data16
test
lock
inc
fisub
test
inc
push
cmps
jb
xchg
stos
std
push
mov
xchg
or
(bad)
mov
xchg
fnstenv
mov
mov
xchg
inc
dec
stos
sar
sub
and
xchg
mov
data16
xor
mov
cmps
cmp
mov
mov
push
cs
(bad)
loope
outs
mov
stos
js
pusha
bound
inc
(bad)
cmps
icebp
(bad)
fisub
inc
xor
loopne
inc
jbe
outs
mov
stos
js
popa
cs
jp
into
bound
es
pop
push
mov
aam
(bad)
adc
ja
(bad)
fbld
inc
pop
scas
xor
mov
pop
out
and
lods
mov
int
sub
loope
cmp
sahf
lods
mov
or
fisub
lea
popf
out
jno
data16
cmp
sbb
arpl
and
xor
(bad)
add
(bad)
dec
sar
or
jle
repnz
sbb
pop
add
push
(bad)
loope
mov
dec
jns
jmp
shl
inc
mov
(bad)
mov
sbb
aad
dec
xchg
xchg
loop
mov
cmp
aam
(bad)
fist
inc
xchg
mov
xor
les
push
and
daa
aaa
test
sahf
stos
pop
xlat
fild
retf
adc
mov
adc
pop
fwait
pop
mov
xor
sti
add
mov
fcomp
hlt
dec
jg
cmp
mov
mov
fidivr
xchg
(bad)
xchg
pop
sbb
inc
fcomp
or
sub
jg
jnp
push
push
fldenv
not
mov
std
xchg
xlat
inc
or
and
(bad)
fwait
(bad)
outs
pop
hlt
adc
push
mov
(bad)
mov
out
xchg
push
fld
dec
mov
into
cmp
call
(bad)
fcom
xor
in
mov
sti
pop
(bad)
mov
into
iret
inc
das
inc
dec
push
in
dec
inc
das
inc
iret
xchg
pop
inc
das
inc
fild
add
mov
pop
xchg
pop
stos
mov
push
mov
pop
push
add
push
call
ror
xchg
(bad)
cli
fild
test
xchg
test
push
mov
add
pop
xchg
ret
out
push
mov
aas
addr16
fwait
ret
(bad)
ss
xchg
pop
jmp
sti
xchg
push
cdq
(bad)
aas
add
jbe
test
sbb
(bad)
popf
inc
xor
sti
(bad)
jmp
pop
xchg
stos
xlat
rcl
xor
call
fistp
repnz
adc
adc
ds
repnz
push
mov
cmp
test
leave
mov
xchg
fadd
xchg
lock
fdiv
or
pusha
xor
data16
adc
jne
mov
int3
adc
push
add
push
and
mov
inc
repnz
push
fcom
mov
sbb
cwde
jp
js
cdq
fs
js
js
lahf
lods
sbb
adc
xor
out
clc
xchg
mov
nop
nop
call
and
aam
mov
in
mov
xor
add
clc
nop
sbb
aas
cmp
xor
out
into
fwait
cmp
xchg
nop
sbb
int3
inc
stc
ins
lock
rcr
mov
mov
fdivr
xor
out
pop
adc
push
hlt
aam
clc
mov
pop
mov
push
pop
push
and
js
lock
outs
inc
nop
cwde
adc
xchg
rcr
sbb
xor
mov
xor
enter
xchg
mov
outs
aam
(bad)
xor
out
inc
adc
mov
push
sbb
sbb
xor
rcr
push
les
adc
loopne
clc
nop
mov
mov
popf
adc
pusha
clc
xchg
cdq
lock
push
mov
xchg
inc
xchg
mov
xchg
nop
nop
cwde
xchg
xor
out
adc
aam
mov
ds
pop
test
adc
adc
je
push
jl
xchg
push
push
xchg
adc
and
pusha
mov
mov
push
shr
mov
xor
jl
push
push
mov
ret
mov
test
fs
rcr
sar
xor
sbb
xchg
out
dec
push
and
push
dec
add
add
in
mov
pop
gs
add
scas
mov
aad
loope
push
pusha
sub
fcomp
or
pushf
fsub
xor
lock
outs
jb
cmp
add
adc
aam
enter
dec
add
mov
xchg
add
scas
ds
rol
pop
mov
test
test
fbstp
push
and
inc
mov
jno
push
mov
nop
aam
aaa
rcr
loopne
cmp
mov
into
cmp
hlt
jno
adc
fist
jg
loopne
mov
scas
and
les
xor
fs
add
cmp
xchg
lods
xor
adc
cmp
lods
xor
inc
and
sub
retf
pushf
mov
jge
scas
in
jno
jl
mov
sbb
ret
inc
rol
fiadd
jno
cmp
adc
adc
inc
cmp
in
(bad)
mov
xor
fiadd
adc
adc
xor
shl
adc
mov
jns
inc
jae
mov
cmp
and
push
jne
leave
pop
sub
in
call
je
frstor
add
daa
(bad)
icebp
ins
shl
jno
fidiv
cli
inc
dec
(bad)
loope
and
add
cmps
and
lods
movs
jmp
scas
push
aaa
lods
(bad)
or
popa
xchg
ins
(bad)
call
call
lods
ds
push
sub
mov
and
and
sti
ins
fcmovne
cmp
lods
cmp
fisubr
sub
addr16
daa
ficom
jmp
(bad)
jge
push
pop
pushf
add
xchg
xchg
fwait
push
or
test
sbb
mov
push
jg
or
push
cmc
sub
jb
shl
push
pmaxub
rcr
or
sahf
test
ret
rol
bound
cs
xchg
outs
jnp
add
int3
lahf
sbb
test
sub
mov
in
out
aam
fiadd
test
retf
sub
sub
jmp
sbb
sub
sub
pop
out
adc
imul
nop
mov
sbb
inc
data16
ja
mov
stos
lock
dec
mov
js
add
sbb
cs
in
jns
add
xchg
stc
fst
mov
out
jmp
mov
dec
or
scas
xchg
sbb
sbb
les
sub
mov
fwait
mul
stos
xchg
xor
cld
push
imul
pop
rcl
call
jns
pop
push
shl
xchg
xchg
cmps
iret
inc
dec
es
push
dec
es
inc
iret
cmps
iret
xchg
cmps
iret
inc
dec
es
push
iret
cmps
iret
(bad)
dec
es
push
dec
es
(bad)
iret
cmps
iret
xchg
cmps
iret
(bad)
dec
es
push
dec
es
(bad)
iret
cmps
iret
xchg
es
inc
iret
cmps
iret
xchg
cmps
iret
inc
dec
es
push
dec
es
das
mov
ret
iret
daa
sub
addr16
es
xor
leave
into
inc
aas
inc
cmp
inc
sub
stos
shl
xor
inc
sub
jns
and
enter
inc
sub
dec
sub
stos
xor
inc
cmp
cmp
cmp
jecxz
cmps
xchg
sub
cmp
icebp
cmps
(bad)
movs
ret
stos
and
push
es
es
mov
movs
mov
outs
dec
dec
dec
sub
cmps
mov
addr16
push
aas
push
mov
icebp
mov
arpl
jg
push
dec
adc
loop
jmp
sbb
popa
xor
mov
stc
jnp
jnp
jnp
mov
cmp
mov
iret
sti
aam
or
sub
iret
ret
mov
adc
movs
fcom
inc
dec
ss
jmp
and
stos
test
retf
(bad)
fisub
push
and
enter
ret
test
dec
or
sub
mov
ficom
pop
popa
daa
(bad)
int3
retf
mov
sar
leave
adc
and
retf
loope
scas
mov
shr
dec
cmp
mov
out
cmps
scas
out
aad
dec
cmp
sar
rcr
out
in
cmp
aam
enter
xchg
in
iret
out
dec
adc
add
dec
fisub
out
ficom
cmp
rcl
mov
retf
mov
daa
sti
stc
(bad)
cli
pushf
mov
stos
sahf
push
push
(bad)
ds
(bad)
push
or
dec
inc
cmp
adc
(bad)
dec
cld
test
fadd
lock
aas
jae
xor
push
cmp
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
push
pop
pop
sahf
call
pop
push
jg
pop
pop
push
pop
pop
sahf
call
pop
push
jg
pop
pop
add
std
(bad)
sahf
mov
push
jg
call
mov
js
sbb
sub
mov
js
push
jp
pop
sub
jbe
push
xor
outs
sbb
dec
div
ins
pop
ss
dec
xor
lock
pop
aas
cmp
jle
pop
jo
test
ins
adc
pop
pop
cmp
out
imul
cs
jg
pop
or
dec
int3
call
pop
or
pop
data16
ins
xor
aas
stc
pusha
adc
mov
jmp
push
xchg
(bad)
shr
in
cmp
mov
out
cmp
(bad)
or
add
and
jecxz
sub
out
leave
dec
xchg
push
pop
or
jmp
mov
cmp
mov
(bad)
adc
test
inc
das
push
jmp
mov
pop
(bad)
cmc
test
div
cmp
pusha
jns
aas
xchg
push
cmp
cmp
pop
pop
and
jecxz
fs
test
cld
je
pop
fxch
pop
mov
in
into
or
jae
ror
fwait
loop
adc
call
ss
push
mov
fild
fcom
pop
add
cli
mov
outs
mov
jne
sbb
gs
ret
dec
sub
sub
adc
mov
leave
and
or
sbb
pop
xor
adc
mov
cmp
arpl
loop
adc
add
adc
adc
aas
xchg
and
jbe
shr
xor
jecxz
mov
pusha
cwde
mov
pusha
ins
push
cmp
fbstp
(bad)
in
(bad)
fimul
and
xchg
pop
jbe
repnz
popa
mov
cmp
jnp
pop
shr
fcomp
push
leave
sar
adc
sbb
pop
test
mov
bound
mov
arpl
iret
(bad)
xchg
jl
fcom
push
xor
and
(bad)
leave
mov
lock
push
retf
xchg
push
jecxz
fcmove
in
in
and
test
xor
rcr
gs
or
jnp
(bad)
shr
ror
imul
data16
mov
loope
(bad)
jbe
push
jg
or
or
inc
popa
or
ja
cli
sub
mov
mov
repz
cli
and
rcr
mov
adc
ss
ret
mov
aad
jmp
lea
or
sub
mov
mov
xchg
jl
dec
xor
fwait
mov
jle
sub
and
repz
sbb
dec
pop
int
mov
sbb
int3
push
or
in
lea
jl
mov
movs
das
lock
enter
pop
pushf
and
je
es
(bad)
sbb
sar
cmp
mov
or
fdiv
jmp
ins
dec
or
xchg
stc
sahf
cld
aad
pop
int3
scas
jmp
es
lock
in
or
pop
sub
fisubr
sbb
sbb
aam
xchg
push
loopne
popf
inc
cmp
movs
mov
adc
aad
sub
adc
ins
lods
in
int
in
stc
(bad)
jl
aaa
cmps
dec
dec
jmp
xchg
nop
(bad)
dec
inc
jle
ret
sub
sbb
sub
leave
or
mov
jge
stos
mov
mov
(bad)
fild
jge
test
std
call
enter
or
jle
push
sub
scas
lea
daa
adc
mov
fcmovnb
outs
(bad)
int
sub
inc
imul
test
sub
pop
inc
pop
fist
in
sub
sti
js
ds
mov
mov
pop
fcom
dec
ds
cmp
mov
xor
add
jp
jl
cmp
or
je
jbe
and
lds
clc
ror
inc
jecxz
cmp
ds
cmp
call
add
adc
ffreep
(bad)
xchg
inc
adc
ins
lods
(bad)
clc
mov
xchg
or
jge
jg
fild
sbb
test
dec
dec
xchg
mov
add
aaa
cmp
loopne
(bad)
out
outs
mov
icebp
inc
les
lods
popf
(bad)
daa
pop
mov
push
outs
fld
lods
mov
das
mov
mov
dec
ret
pushf
in
inc
leave
sar
sub
(bad)
mov
or
jnp
les
mov
repz
fsub
retf
and
mov
and
jmp
daa
leave
xchg
call
repnz
mov
pop
dec
pop
fild
inc
jb
outs
lock
push
iret
pop
outs
xchg
enter
xchg
cmp
cmp
shr
push
fxch
push
jmp
mov
jb
ret
lods
mov
mov
dec
repz
dec
(bad)
ror
in
leave
jecxz
out
call
inc
imul
ret
mov
test
outs
push
dec
or
mov
mov
fwait
aad
rcl
cmps
jecxz
(bad)
lahf
mov
es
fnstenv
fmul
cmp
inc
test
cmp
(bad)
dec
stos
xor
(bad)
outs
dec
adc
pop
call
pop
retf
shr
inc
push
jo
stos
jo
aaa
xor
lea
mov
or
push
cmp
aad
stc
out
fld
push
adc
mov
fnstcw
leave
xchg
jmp
and
push
or
push
sub
sbb
call
iret
push
(bad)
fst
test
and
rol
mov
ret
jo
jge
and
cmp
(bad)
dec
cmc
jo
add
mov
mov
push
push
jbe
pop
push
mov
mov
xor
hlt
shl
mov
mov
jne
sub
add
mov
lods
into
fmul
push
jecxz
add
mov
sub
or
rol
in
and
imul
push
xlat
pusha
leave
xor
jmp
jmp
dec
iret
cmps
jg
sbb
cmps
xchg
leave
adc
stos
iret
sar
pop
add
mov
jle
mov
and
fild
js
sub
cmp
imul
cmc
jns
push
mov
push
fcmovnu
scas
mov
les
les
add
sahf
aas
jecxz
or
push
pusha
(bad)
cmp
and
push
lea
in
cli
sbb
cmp
push
sbb
loope
dec
out
mov
pop
sbb
sbb
sti
hlt
mov
cmp
adc
adc
jp
mov
cwde
add
cmp
cmp
inc
in
enter
mov
fisttp
sahf
daa
inc
mov
add
stos
or
sbb
daa
syscall
dec
neg
sbb
int3
jne
aas
push
sbb
xchg
inc
pop
fadd
or
lods
mov
cmp
and
pop
(bad)
scas
and
arpl
add
test
pop
cmc
pop
gs
and
mov
mov
arpl
je
pushf
lds
loop
mov
retf
xchg
loopne
xor
cmp
test
call
movs
test
leave
adc
cwde
not
cmp
movs
enter
pop
and
dec
mov
clc
pop
cwde
fs
add
in
in
gs
add
xor
(bad)
sub
jne
or
pop
fild
(bad)
jmp
gs
mov
fwait
stc
xor
jo
dec
push
add
push
mov
jle
inc
out
mov
into
lods
and
loopne
popa
xor
stos
lods
fwait
and
cmp
inc
fild
lahf
inc
jo
jge
or
imul
jge
test
movs
inc
aam
call
jbe
xor
cmp
jo
jo
sahf
imul
xor
mov
retf
adc
mov
push
stos
cli
aam
sub
push
jo
mov
(bad)
lds
mov
je
cmps
add
xor
add
push
xchg
mov
pop
stc
jg
mov
repz
rol
and
jae
jb
push
xor
push
dec
xchg
movs
pushf
dec
je
or
xchg
sbb
inc
fwait
mov
xchg
pop
imul
xor
push
jnp
dec
jmp
xor
lahf
xor
lods
jle
jno
lods
xor
xor
add
dec
xchg
shl
xchg
mov
lahf
mov
icebp
shl
cmp
adc
jae
xchg
xor
push
(bad)
test
push
dec
jp
push
(bad)
lock
xor
adc
js
(bad)
in
push
push
push
push
and
es
jns
lfs
dec
jb
xor
jo
push
pop
nop
aam
or
xchg
sbb
icebp
adc
sbb
mov
add
xchg
ret
(bad)
mov
in
pop
and
sub
cli
ror
add
ja
xor
mov
ror
repz
jnp
inc
rol
and
and
arpl
mov
outs
add
loop
xgetbv
repnz
mov
mov
or
mov
sbb
mov
mov
adc
cmp
jg
push
and
adc
ret
cmp
mov
mov
inc
adc
imul
loop
shl
xchg
xor
inc
xor
xchg
shr
outs
retf
add
outs
data16
adc
mov
int
shl
xor
aad
inc
and
and
mov
fnstsw
sub
xor
push
ja
ret
adc
out
shr
arpl
pop
add
cmps
neg
inc
scas
push
hlt
push
in
mov
stos
rcr
pusha
xchg
and
mov
inc
rcl
jo
sub
or
out
jno
rol
stos
jno
mov
jae
movs
das
(bad)
xor
fs
mov
mov
bound
and
push
and
push
std
sahf
scas
jg
dec
xor
mov
mov
jae
add
into
xchg
in
movs
inc
movs
dec
in
test
add
and
and
push
xchg
ror
and
loopne
sar
repnz
push
pop
bound
mov
xchg
call
repnz
mov
jp
mov
test
inc
jno
lahf
aaa
imul
push
adc
out
lds
movs
xchg
es
sbb
rol
sub
push
cmp
shl
mov
pop
int3
rol
aam
les
mov
xor
(bad)
xchg
loope
mov
mov
lea
or
in
fdiv
mov
jp
les
xor
cmp
push
adc
out
dec
in
rol
adc
mov
ds
fld
hlt
imul
cmp
js
ror
test
cs
push
dec
mov
jne
jns
test
lea
or
daa
movs
retf
mov
inc
rcr
aam
jb
ret
mov
movs
mov
imul
hlt
rcl
xor
je
mov
sti
push
xor
pop
pop
xchg
in
je
shl
fstp
sbb
sahf
jmp
scas
cli
adc
(bad)
xchg
jp
push
pop
fst
jp
adc
adc
(bad)
in
test
add
jmp
loop
adc
adc
rcr
mov
jge
adc
retf
add
adc
xchg
jp
jp
pop
sbb
loop
xchg
jb
js
mov
sub
mov
je
cmp
clc
fst
add
sbb
cli
cmps
pushf
mov
pop
mov
mov
sar
xor
jle
and
pop
mov
ja
add
adc
aas
addr16
test
(bad)
out
std
xor
sub
popa
dec
pop
sub
not
and
aas
push
js
loop
std
xlat
and
stos
inc
mov
adc
sub
mov
inc
jp
jmp
mov
aas
pop
xor
scas
test
dec
xor
jl
cmp
jns
(bad)
fstp
ins
js
ins
cmp
std
jecxz
iret
fisttp
mov
xchg
js
sbb
cmp
lods
cdq
call
cmp
pop
pop
mov
push
lods
sbb
pop
push
sub
ds
leave
jmp
lods
lods
fadd
das
ins
das
sbb
mov
mov
lahf
lahf
aaa
popa
or
jmp
(bad)
xlat
ins
dec
or
ins
sar
adc
push
scas
sub
fucom
into
sbb
lods
mov
int3
enter
int
cdq
or
js
int3
inc
cmp
aas
jno
mov
sub
clc
scas
cli
fist
test
pop
daa
pop
or
sub
fwait
mov
adc
mov
sar
sub
sub
mov
fstp
pop
pop
aaa
ds
jne
sysenter
adc
push
pop
(bad)
(bad)
jle
das
push
scas
sub
sar
aas
or
push
dec
pop
push
jg
sar
std
outs
sub
or
mov
daa
(bad)
rcl
sub
not
movs
(bad)
bound
addr16
aad
push
and
mov
stos
stos
into
fisttp
rcl
(bad)
sbb
dec
pop
add
mov
mov
xor
test
jmp
(bad)
jle
aas
ret
jg
adc
push
stc
cs
aas
sbb
jbe
inc
pusha
lock
jmp
js
ds
add
mov
jns
(bad)
(bad)
cmp
cmp
sbb
arpl
xchg
adc
std
mov
cdq
add
int3
or
xrelease
and
xchg
jmp
fdiv
inc
mov
dec
xor
jb
int3
push
mov
dec
cmp
sub
mov
mov
jae
xor
dec
lods
bsr
int3
dec
sub
push
and
mov
imul
daa
xlat
outs
rcr
lods
push
sub
add
pop
dec
fs
mov
push
jnp
jmp
push
inc
in
jl
push
push
rcr
dec
cs
adc
out
fimul
pop
mov
xor
jle
dec
mov
jnp
movs
fwait
call
fisub
pop
dec
add
test
lods
inc
jbe
adc
cmp
test
add
test
movs
cmps
push
hlt
push
adc
sbb
lods
mov
hlt
adc
xchg
pop
mov
clc
cld
jne
std
leave
daa
jmp
call
mov
out
and
scas
neg
xchg
sahf
neg
adc
fidiv
xchg
sbb
cmp
xchg
clc
nop
cmps
fbstp
call
cld
xchg
popf
sar
scas
push
pop
xor
call
(bad)
xchg
push
push
cmp
sbb
mov
xchg
fwait
repnz
cld
scas
xchg
fnstenv
xchg
sbb
push
sbb
mov
lahf
push
pop
aaa
pop
pop
sahf
neg
nop
xchg
sti
xchg
sbb
push
sbb
mov
xchg
popf
hlt
popf
adc
call
xchg
cwde
icebp
cwde
push
push
aas
push
pop
xchg
cld
xchg
pushf
aam
aam
xchg
cli
xchg
sbb
push
sbb
xchg
xchg
lahf
neg
adc
cmc
fwait
xchg
(bad)
cdq
adc
pop
adc
mov
xchg
xchg
call
sbb
cld
xchg
popf
aam
rcr
push
push
pop
pop
scas
repnz
xchg
(bad)
fwait
pop
push
inc
and
pop
imul
iret
push
cmp
cmp
jecxz
adc
cmp
stc
push
push
out
lods
call
cli
cmp
adc
arpl
in
fstp
(bad)
fld
adc
jp
leave
movs
fadd
xchg
mov
cmps
jmp
or
dec
repnz
fcomi
sbb
rol
mov
int3
cs
cwde
sbb
in
clc
and
inc
push
push
mov
js
fs
pop
add
jo
call
and
in
popw
push
pop
jmp
xchg
leave
mov
pop
mov
xchg
ins
xchg
push
pop
out
or
jno
out
jge
adc
sub
jle
out
test
jmp
out
dec
xchg
mov
shl
pop
push
not
pop
stc
imul
jmp
sbb
aam
pop
aam
test
xchg
ss
mov
popa
add
cmps
stos
mov
stc
sahf
hlt
add
sub
xor
into
xchg
jge
jnp
(bad)
push
cmps
(bad)
pop
fcmovnu
cmp
add
xchg
inc
adc
push
adc
xor
sbb
jns
jbe
sbb
inc
jmp
jo
mov
inc
test
xchg
pop
jo
leave
mov
iret
fs
nop
add
push
mov
jmp
popf
test
xchg
addr16
test
mov
lea
jp
jmp
push
jbe
sub
dec
jne
sahf
pusha
fnstenv
inc
or
imul
and
stos
cdq
fadd
dec
or
push
push
xchg
cld
cmc
ss
ins
pop
dec
push
dec
data16
sbb
dec
fwait
mov
fcom
or
leave
mov
ds
dec
call
jae
inc
shl
dec
and
cs
jmp
cmp
mov
add
shl
push
stos
mov
push
out
clc
test
pop
cmp
test
sbb
sti
sbb
inc
mov
movs
push
ja
ds
add
(bad)
dec
das
fadd
mov
call
cmc
ins
inc
outs
iret
sub
call
ficomp
push
sbb
mov
mov
(bad)
pop
repz
stos
cmp
xor
jecxz
cld
popf
out
mov
js
pop
xor
(bad)
imul
xchg
sahf
dec
lods
fs
loopne
xor
mov
lods
movs
int3
jmp
cmp
sub
iret
mov
push
jnp
mov
xor
inc
shr
test
sub
dec
enter
movs
(bad)
dec
mov
loopne
nop
sbb
sub
popf
mov
out
pusha
retf
fstp
mov
xor
test
mov
shr
gs
ja
jge
test
leave
sub
in
dec
dec
les
or
sub
dec
adc
test
cdq
mov
iret
scas
jb
leave
push
sbb
add
xchg
cwde
cwd
loop
jnp
add
xor
and
mov
jns
stos
loop
sar
inc
inc
xlat
push
add
dec
sub
test
je
jbe
sub
mov
push
xlat
rcr
nop
(bad)
mov
mov
mov
mov
xchg
jmp
iret
sub
gs
or
fldcw
shr
(bad)
movs
leavew
fwait
test
mov
xchg
out
call
and
sub
pop
mov
mov
inc
fcom
(bad)
jle
fld
(bad)
or
jns
sbb
je
cmp
leave
call
test
mov
xchg
sahf
or
ss
das
jbe
push
pop
out
jo
scas
rcr
bound
lods
sub
and
outs
jnp
neg
push
push
sub
out
mov
cmp
cld
inc
mov
add
inc
jmp
jg
jae
je
ja
sbb
pop
mov
add
or
lods
cmp
mov
je
cmp
(bad)
pop
out
mov
(bad)
js
jg
ret
xchg
inc
push
mov
mov
or
or
xor
lods
push
stos
movs
into
push
pop
(bad)
pop
outs
or
out
loopne
jge
dec
pop
cdq
hlt
push
adc
sub
mov
mov
xchg
push
xchg
pop
(bad)
arpl
cli
adc
retf
xchg
test
ins
test
iret
stos
mov
sbb
movs
and
inc
popa
sub
pop
cmp
xchg
(bad)
xchg
jmp
(bad)
and
adc
xchg
pop
sub
fcomi
out
(bad)
push
jmp
push
xor
push
pop
loopne
dec
add
mov
add
add
outs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
jg
jg
jg
lods
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
cld
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adc
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
ficomp
frstor
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
cmp
or
imul
mov
xchg
add
in
or
(bad)
leave
and
(bad)
mov
popa
retf
dec
sub
xor
or
dec
cmp
adc
ror
loopne
inc
test
lods
adc
pop
ret
push
jne
push
push
enter
jg
fsubr
or
pop
addr16
sbb
jge
jnp
jo
pop
je
mov
cwde
push
stos
loop
mov
pusha
xchg
cmp
daa
mov
sti
movs
and
xchg
sub
ss
test
mov
sub
out
test
pop
or
ins
xor
daa
jo
sar
push
mov
dec
dec
jno
dec
sbb
(bad)
sti
push
test
xchg
cmp
cmp
lahf
popf
sti
test
sti
icebp
cmps
jns
hlt
idiv
loope
jmp
in
int
call
ja
xchg
ins
inc
xor
dec
add
scas
push
lds
stos
push
and
sbb
lds
shr
popf
mov
js
dec
push
mov
mov
mov
movs
test
ror
or
int
or
stos
xchg
js
mov
jl
nop
adc
jne
fst
outs
mov
adc
sti
shl
inc
lahf
pop
or
pop
sar
push
pushaw
fcom
xor
dec
or
push
fadd
(bad)
movs
lods
and
fs
std
daa
movs
dec
loopne
mov
cld
lods
pusha
mov
xchg
xchg
loop
das
sub
mov
das
xor
out
xchg
pop
test
popf
popf
sub
out
mov
push
add
mov
ss
cmp
repz
not
xor
loop
repz
pop
lock
ret
ds
xchg
dec
add
shr
mov
sti
fsubr
loopne
imul
mov
(bad)
dec
xor
leave
jle
lods
mov
mov
ja
or
lds
xchg
sub
mov
pop
cmp
inc
adc
inc
push
sahf
cmp
and
add
sub
sbb
cmc
push
fdiv
sub
fwait
aas
fwait
imul
(bad)
adc
pop
dec
in
xchg
or
lock
push
cli
mov
rcl
fwait
xchg
sbb
xchg
push
push
das
icebp
mov
ins
lods
clc
xlat
jo
cld
shl
sub
gs
test
out
mov
daa
xlat
add
movs
fisubr
fisubr
and
fst
loop
add
mov
leave
jle
ds
adc
jge
mov
out
stos
int3
sar
(bad)
pusha
ss
jno
neg
pop
inc
jne
sbb
xor
je
mov
ret
xor
cdq
nop
mov
lea
imul
leave
push
inc
out
dec
repnz
dec
dec
sub
or
pushf
ror
and
jnp
pusha
inc
jg
inc
add
pop
shl
xchg
push
inc
ins
xchg
xor
and
lds
dec
fwait
adc
pop
adc
xor
sbb
cmp
pop
push
pop
push
sbb
sqrtps
push
xor
popf
adc
mov
xchg
and
int
and
jmp
sub
jns
test
rcl
sub
mov
push
lods
(bad)
adc
ror
imul
jl
out
fcmovnb
retf
mov
out
lock
sbb
loop
sbb
mov
daa
stc
les
mov
lea
cmp
aad
mov
sahf
mov
lods
call
push
or
xor
ins
data16
fidivr
mov
mov
div
rol
add
jg
add
loope
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
in
add
repnz
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
fiadd
add
fadd
add
mov
add
add
add
add
add
add
add
rol
add
pop
add
test
add
loopne
add
xor
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
fld
add
outs
add
add
add
add
add
add
add
lods
add
add
add
jno
add
test
add
add
add
stos
add
add
add
or
add
movs
add
add
add
add
add
add
add
add
add
add
add
jp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
jb
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
ja
add
stos
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
push
add
adc
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
dec
add
add
add
pusha
add
add
add
add
add
cmps
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
arpl
add
xor
add
mov
add
popa
add
add
add
call
add
add
add
add
add
jbe
add
out
add
lea
add
sbb
add
cli
add
add
add
test
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
pusha
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
loopne
add
sub
add
out
add
test
add
into
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
mov
add
inc
add
add
add
add
add
sahf
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
lea
add
rol
add
inc
add
add
add
imul
add
test
add
add
cmps
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
leave
add
add
add
add
add
add
add
xchg
add
ins
add
add
add
add
add
add
aam
add
scas
add
add
add
add
add
push
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
retf
add
add
add
add
add
test
add
fiadd
add
jb
add
lds
add
inc
add
add
add
add
push
add
add
add
ins
add
add
add
add
add
add
add
or
add
add
add
ins
add
add
add
ror
add
add
push
jae
add
pop
add
clc
or
or
mov
ror
test
dec
add
dec
add
lds
in
dec
add
dec
add
dec
add
dec
add
add
add
add
add
cs
inc
push
inc
inc
outs
ins
fs
popa
arpl
addr16
inc
add
add
mov
ror
mov
ror
mov
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
add
add
add
cs
inc
push
aas
and
dec
popa
jo
push
aas
and
push
je
imul
push
aas
and
je
push
jb
imul
push
aas
and
push
je
inc
push
push
inc
pop
push
inc
inc
push
dec
inc
inc
inc
inc
inc
inc
push
dec
inc
inc
push
inc
pop
push
dec
inc
inc
dec
inc
inc
add
add
cs
inc
push
inc
dec
je
ins
inc
imul
add
add
add
cs
inc
push
inc
inc
dec
je
ins
inc
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
jbe
outs
je
imul
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
inc
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
add
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
test
(bad)
push
loope
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
in
dec
add
add
add
add
inc
dec
dec
add
add
add
add
add
add
cs
inc
push
inc
push
je
imul
jns
inc
add
(bad)
(bad)
(bad)
call
add
cs
inc
push
inc
inc
dec
je
ins
inc
outs
outs
je
outs
ins
push
imul
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
ins
gs
outs
je
jbe
outs
je
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
jb
ja
gs
outs
outs
je
outs
ins
push
imul
xchg
jne
add
add
add
aas
inc
push
dec
inc
outs
arpl
jae
push
dec
dec
popa
outs
fs
gs
inc
add
add
add
outs
add
jae
je
outs
add
imul
add
add
add
add
outs
jae
add
add
popa
outs
add
ins
outs
add
add
add
add
add
add
add
test
dec
add
test
dec
add
test
dec
add
test
dec
add
test
add
test
dec
add
test
jb
add
loopne
jo
ja
add
add
ins
outs
add
add
add
xor
add
jg
add
add
add
add
test
enter
mov
test
ins
test
inc
test
sbb
dec
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
cmc
dec
add
dec
add
cmc
dec
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
cmc
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
add
(bad)
push
fimul
leave
(bad)
aas
add
add
add
lock
or
or
add
or
add
or
add
or
add
add
nop
imul
imul
add
add
add
add
stos
dec
add
add
stos
dec
add
outs
jae
add
add
test
add
stos
dec
add
popa
outs
push
add
add
add
add
dec
add
add
stos
dec
add
add
add
add
xor
add
add
add
add
add
dec
add
ror
ror
ror
test
add
test
add
test
add
ror
ror
test
add
test
add
aas
pop
add
add
add
add
add
add
or
add
jo
add
mov
add
add
add
add
add
add
or
add
add
add
out
aas
add
add
add
lock
add
add
add
lock
add
add
add
aas
add
add
add
loopne
add
add
add
(bad)
(bad)
(bad)
jg
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
dec
add
dec
add
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
dec
add
leave
dec
add
dec
add
dec
add
dec
add
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
retf
and
dec
add
retf
(bad)
retf
jbe
dec
add
retf
ret
add
retf
loope
dec
add
retf
push
retf
dec
add
retf
dec
add
retf
dec
add
add
pop
add
add
add
add
xlat
mov
or
add
add
dec
or
sbb
xchg
std
aas
add
add
add
loopne
add
jo
add
mov
test
add
loopne
add
jg
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
adc
add
lods
dec
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
dec
add
add
add
add
dec
lods
dec
add
lods
dec
add
add
add
dec
add
add
add
add
stos
dec
add
add
add
add
sub
add
add
add
dec
add
add
add
lods
dec
add
mov
add
in
dec
add
add
add
lods
dec
add
add
add
mov
add
shl
add
adc
add
lods
dec
add
add
add
mov
add
enter
and
add
les
add
mov
add
add
mov
dec
add
mov
dec
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
and
add
pusha
add
add
add
nop
add
or
add
inc
add
or
add
add
loopne
add
clc
add
adc
add
adc
add
sub
add
add
add
add
add
add
adc
pop
add
add
add
pop
add
or
add
jo
add
mov
add
mov
add
add
add
add
add
or
add
call
add
add
add
adc
add
sbb
adc
add
xor
adc
add
dec
add
adc
add
pusha
add
adc
add
add
nop
add
adc
add
test
add
add
add
add
add
add
add
add
add
add
adc
add
fadd
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
data16
add
add
add
js
add
add
add
loopne
add
add
add
add
add
add
adc
add
add
clc
add
add
xor
add
push
add
add
add
add
push
add
adc
add
dec
pop
add
add
add
add
cwde
pop
add
mov
add
enter
adc
add
loopne
add
clc
pop
add
adc
add
sub
add
inc
or
sbb
add
pop
or
sbb
add
add
mov
add
mov
add
add
add
add
add
add
add
arpl
add
mov
add
add
add
add
add
add
sldt
jns
add
or
adc
add
call
jns
add
or
sbb
add
sbb
add
xor
add
dec
or
sbb
add
pusha
or
sbb
add
add
nop
or
sbb
add
test
add
ror
and
add
fmul
add
lock
and
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
js
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
adc
add
mov
add
cwde
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
fmul
add
call
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
sbb
add
adc
add
sub
add
or
add
push
add
add
add
add
add
add
add
or
add
pop
push
add
adc
add
push
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
fsub
add
in
add
add
add
nop
mov
add
in
add
add
add
les
add
in
add
add
add
clc
movs
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
enter
xor
add
in
add
add
add
cld
stos
or
add
add
add
add
add
lods
or
add
add
add
add
add
add
add
in
add
add
add
cwde
scas
or
add
add
add
add
add
scas
or
add
add
add
add
add
mov
add
add
in
add
add
add
xor
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
mov
or
add
add
add
add
add
or
add
add
add
add
add
fmul
add
add
add
add
add
fisttp
add
add
add
add
add
or
add
add
add
add
add
fimul
add
add
add
add
add
fisttp
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
in
or
add
add
add
add
add
or
add
add
add
add
add
test
in
add
add
add
mov
pop
add
in
add
add
add
nop
push
push
add
pop
add
in
add
add
add
fs
push
add
add
in
add
add
add
fcom
push
add
pop
add
in
add
add
add
movs
sbb
add
add
in
add
add
add
sbb
push
add
add
in
add
add
add
xchg
sub
add
add
in
add
add
add
or
push
add
add
add
add
add
or
push
add
add
in
add
add
add
add
sub
add
in
add
add
add
lods
dec
push
add
add
in
add
add
add
fmul
add
add
in
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
pusha
pusha
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
in
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
in
add
add
add
inc
xchg
push
add
add
in
add
add
add
mov
add
add
add
add
pop
popf
push
add
add
add
add
add
popf
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
stos
push
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
in
add
add
add
pop
mov
add
add
add
add
add
add
add
in
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
ins
mov
add
add
in
add
add
add
xor
in
add
add
add
xchg
mov
add
add
in
add
add
add
test
push
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
add
add
in
push
add
add
in
add
add
add
clc
mov
add
add
in
add
add
add
or
push
add
add
in
add
add
add
and
add
in
add
add
add
xor
push
add
add
in
add
add
add
dec
mov
add
add
in
add
add
add
pop
mov
add
add
in
add
add
add
jo
push
add
add
in
add
add
add
int3
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
add
pop
add
add
add
add
add
sbb
add
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
pop
dec
push
pop
inc
push
pop
inc
push
add
rcr
inc
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
shl
jg
jo
inc
clc
add
sar
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
pop
add
add
add
test
add
leave
dec
add
test
dec
add
or
add
rol
add
cmp
add
add
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
inc
add
inc
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
(bad)
inc
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
clc
jg
push
aas
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
ud0
loopne
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
adc
add
add
xchg
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
jg
(bad)
cld
aas
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
ud0
pushf
pop
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
cld
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
add
and
add
mov
add
and
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
jg
(bad)
clc
jg
push
jg
jmp
jg
inc
jae
inc
inc
(bad)
inc
inc
(bad)
inc
jae
jmp
jg
push
jg
(bad)
clc
jg
(bad)
cld
jg
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
inc
adc
add
add
and
add
sbb
add
add
add
add
or
add
add
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
inc
repz
inc
ret
(bad)
inc
cmp
out
(bad)
(bad)
inc
(bad)
(bad)
cld
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
sbb
add
and
add
inc
add
and
add
and
add
sbb
add
add
and
add
and
add
adc
add
or
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
dec
ret
(bad)
inc
cmp
inc
ret
(bad)
inc
out
inc
jg
inc
aas
(bad)
inc
pop
(bad)
inc
ud0
rol
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
cld
add
and
add
add
add
add
add
add
add
add
add
add
test
add
add
inc
and
add
add
and
add
sbb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
jmp
add
push
add
(bad)
clc
add
(bad)
cld
add
(bad)
inc
(bad)
jmp
add
inc
cmp
add
(bad)
inc
repz
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
inc
or
add
add
inc
and
add
add
inc
add
inc
add
add
add
inc
dec
add
dec
test
add
add
pusha
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
jg
inc
iret
(bad)
inc
add
dec
xchg
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
or
add
add
nop
or
add
or
add
mov
or
dec
adc
adc
or
adc
or
adc
add
mov
add
or
adc
add
or
add
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
repz
dec
lock
dec
lock
(bad)
aas
clc
push
jo
lock
pavgb
adc
loopne
adc
lock
psubb
jo
cld
(bad)
aas
dec
lock
(bad)
(bad)
dec
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
cld
add
rol
add
add
add
inc
and
inc
inc
adc
inc
and
adc
or
adc
and
inc
add
inc
add
add
cld
add
and
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
(bad)
aas
cld
(bad)
(bad)
aas
cld
jg
aas
cld
aas
clc
ds
lock
pavgb
sbb
loopne
sbb
lock
psubb
jl
cld
aas
cld
aas
(bad)
aas
cld
jg
aas
cld
(bad)
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
idiv
dec
repz
dec
lock
dec
lock
push
jo
clc
or
pop
clc
or
pop
cld
push
jo
dec
lock
(bad)
(bad)
dec
repz
(bad)
out
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cld
(bad)
(bad)
aas
cld
jg
ds
clc
cmp
pop
clc
cmp
pop
cld
ds
(bad)
aas
cld
jg
aas
cld
(bad)
(bad)
mov
(bad)
(bad)
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
(bad)
cwde
add
add
add
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
and
add
or
add
add
add
add
add
fadd
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
mov
mov
add
(bad)
(bad)
(bad)
(bad)
dec
clc
xchg
ja
add
add
mov
lock
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
(bad)
inc
clc
xchg
js
add
add
mov
(bad)
push
clc
xchg
ja
add
add
mov
(bad)
(bad)
(bad)
clc
xchg
ja
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
add
js
js
add
xchg
add
add
add
js
xchg
idiv
add
or
(bad)
(bad)
push
jle
jg
inc
js
sub
xchg
out
idiv
clc
add
or
mul
and
stos
jle
jg
push
add
ja
mul
and
cmps
out
(bad)
(bad)
push
or
mul
and
(bad)
(bad)
(bad)
clc
add
ja
imul
and
(bad)
push
clc
add
ja
mul
test
add
ja
jle
and
maskmovq
test
mov
lock
(bad)
jg
add
ja
out
fwait
(bad)
jg
inc
jg
out
add
ja
jle
mov
idiv
jle
ja
or
out
fwait
fwait
xchg
(bad)
(bad)
jp
out
add
ja
out
out
jmp
jg
stos
jle
add
ja
out
out
out
out
jg
push
idiv
add
ja
out
out
out
xchg
(bad)
jg
jp
add
or
outs
outs
outs
outs
call
ja
add
or
loopne
out
out
jg
jg
add
add
ja
(bad)
inc
add
mov
add
ja
(bad)
(bad)
(bad)
inc
add
out
add
add
ja
mov
add
add
add
add
mov
mov
push
add
add
or
mov
ja
add
add
or
clc
(bad)
push
mov
add
add
(bad)
push
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
clc
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
clc
add
add
or
(bad)
(bad)
clc
(bad)
idiv
mov
add
add
clc
jg
push
pop
sar
add
aas
rol
pop
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
add
stos
mov
add
jp
pop
js
ja
js
mov
cwde
js
jp
js
jb
js
jp
js
ja
stos
ja
pop
js
ja
jp
jp
js
js
or
mov
xchg
xchg
mov
jns
ja
mov
mov
add
pop
ja
ja
jp
add
ja
ja
mov
mov
mov
ja
ja
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jmp
add
jmp
ins
jmp
add
add
in
imul
jmp
adc
out
lock
hlt
or
adc
add
out
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
repz
xchg
fst
fstp
(bad)
(bad)
jmp
add
repz
lock
repz
push
or
mov
sbb
mov
fstp
mov
add
or
jne
xchg
(bad)
(bad)
(bad)
fstp
(bad)
or
fmul
or
or
(bad)
scas
add
mov
fcmovnu
fcmovnu
mov
call
fisttp
iret
add
add
mov
(bad)
add
add
repnz
repz
add
add
mov
div
ins
add
add
mov
or
or
hlt
hlt
adc
add
add
fstp
mov
inc
pop
add
add
mov
mov
loope
add
rol
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
adc
scas
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
adc
adc
jmp
or
or
ins
adc
or
or
or
or
or
ins
out
repz
icebp
pop
in
ins
adc
jmp
adc
or
or
or
pop
lock
(bad)
(bad)
(bad)
push
mov
(bad)
fucom
repz
repnz
jmp
or
pop
pop
out
repz
hlt
hlt
(bad)
push
(bad)
mov
(bad)
(bad)
fstp
fucom
hlt
push
scas
inc
adc
or
or
out
out
pop
repnz
or
or
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
push
scas
adc
or
or
pop
out
pop
repnz
or
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
hlt
(bad)
(bad)
push
jmp
icebp
icebp
icebp
hlt
or
push
cs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
adc
mov
mov
jmp
fstp
(bad)
(bad)
(bad)
fstp
fdivp
(bad)
(bad)
(bad)
(bad)
push
jmp
icebp
icebp
loop
push
push
push
sub
(bad)
(bad)
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
mov
fstp
(bad)
call
iret
iret
pop
(bad)
push
hlt
hlt
(bad)
out
inc
test
icebp
loop
pop
pop
push
dec
mov
fstp
fstp
push
hlt
repnz
adc
repz
fdivr
pop
push
mov
fstp
fstp
push
repz
fstp
pop
adc
repz
mov
in
fstp
fstp
hlt
push
mov
mov
fst
(bad)
fnsave
lock
repnz
mov
outs
(bad)
(bad)
(bad)
(bad)
push
(bad)
hlt
repz
(bad)
(bad)
(bad)
mov
or
lock
fadd
cdq
cdq
push
dec
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
(bad)
(bad)
(bad)
(bad)
fsubr
mov
(bad)
(bad)
fdiv
(bad)
push
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jmp
fstp
fstp
(bad)
(bad)
(bad)
iret
in
or
or
mov
fcmovnu
fcmovnu
fcmovnu
(bad)
fstp
fstp
fstp
(bad)
mov
or
or
icebp
(bad)
icebp
loop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
(bad)
push
repz
fstp
fnsave
or
icebp
lock
mov
aam
aam
fcmovu
(bad)
loop
fdiv
or
or
lock
mov
loop
(bad)
fcmovnbe
aam
aam
mov
mov
scas
test
or
or
icebp
repnz
fsub
(bad)
(bad)
(bad)
(bad)
push
repnz
icebp
(bad)
fcmovnbe
aam
scas
inc
adc
or
or
icebp
repz
pop
pop
mov
hlt
hlt
repz
icebp
icebp
mov
or
or
or
or
icebp
repnz
scas
scas
scas
iret
mov
pop
mov
icebp
icebp
icebp
lock
pop
out
or
or
or
or
mov
iret
iret
scas
iret
iret
iret
iret
mov
mov
icebp
repz
repz
adc
or
or
or
or
pop
hlt
hlt
(bad)
fcmovnu
(bad)
fdiv
mov
(bad)
push
hlt
out
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loop
repz
hlt
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
fstp
fucomp
loop
hlt
(bad)
(bad)
in
adc
or
or
or
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
jmp
jmp
or
or
or
or
pop
pop
(bad)
(bad)
fstp
fld
in
mov
mov
or
or
or
or
or
or
or
mov
mov
mov
or
or
or
or
jg
push
pop
sar
add
rol
xadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
ins
ins
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
ins
or
or
or
or
or
or
jmp
ins
ins
ins
jmp
or
or
or
or
or
or
or
or
or
ins
in
icebp
lock
in
ins
adc
adc
ins
or
or
or
adc
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
ins
in
mov
push
pop
in
in
jmp
or
scas
mov
or
fnsave
adc
or
or
or
or
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
adc
scas
mov
fstp
fstp
sbb
hlt
repnz
scas
scas
adc
or
or
or
or
or
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
fdiv
fstp
fstp
sbb
repz
hlt
(bad)
out
scas
adc
or
or
or
lock
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
scas
mov
(bad)
fstp
fstp
fstp
fstp
sbb
hlt
(bad)
push
scas
adc
or
or
imul
idiv
jno
or
call
(bad)
fsubr
(bad)
fstp
fstp
fstp
fstp
sbb
(bad)
(bad)
push
scas
adc
or
or
mov
sbb
sbb
jno
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
push
scas
adc
or
or
or
idiv
sbb
sub
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
out
scas
adc
or
idiv
sbb
cs
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
sub
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fdivp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
out
repnz
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
fst
(bad)
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
or
out
repnz
icebp
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
(bad)
mov
or
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
lock
adc
out
repnz
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
fucomp
scas
in
scas
mov
hlt
hlt
hlt
hlt
hlt
hlt
scas
adc
out
repnz
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
call
scas
sbb
mov
hlt
push
repnz
adc
or
or
repnz
fnstsw
jge
push
push
jmp
fstp
fstp
fstp
(bad)
dec
in
sbb
(bad)
icebp
icebp
icebp
icebp
icebp
icebp
in
adc
or
or
repnz
fnstsw
jge
jns
jmp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
in
adc
or
or
repnz
fnstsw
push
push
push
push
dec
mov
fstp
fstp
fstp
hlt
(bad)
(bad)
mov
(bad)
fst
fstp
fstp
fstp
in
adc
or
or
repz
fcom
push
push
push
push
dec
in
fstp
fstp
sbb
(bad)
(bad)
(bad)
fdivrp
fnsave
(bad)
(bad)
(bad)
fstp
fstp
(bad)
or
repz
fcom
push
push
push
push
dec
scas
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
fst
(bad)
(bad)
(bad)
fstp
fisttp
scas
adc
or
or
repz
or
(bad)
fcom
push
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
mov
in
or
or
out
(bad)
ror
repnz
(bad)
(bad)
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fucomp
adc
or
or
pop
fcmovnbe
ror
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
scas
ins
or
or
or
fcmovnbe
lods
or
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
(bad)
(bad)
(bad)
push
fstp
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
or
pop
fld
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
call
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
scas
in
or
or
or
pop
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
or
(bad)
push
sbb
fstp
fstp
fstp
fst
(bad)
(bad)
scas
scas
or
or
or
or
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
scas
mov
(bad)
push
repz
fstp
fstp
fstp
fst
scas
scas
or
or
or
or
pop
sbb
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
aad
in
hlt
push
hlt
repz
fstp
fstp
fisttp
scas
scas
or
or
or
or
or
lock
repnz
fcmovnbe
aam
aam
aad
fcmovnu
fcmovnu
fcmovnu
fcmovne
scas
out
repnz
hlt
repz
fstp
fnsave
or
or
or
or
mov
sbb
aam
repz
fcmovnbe
aam
aam
aam
aad
aad
scas
scas
mov
fstp
fisttp
mov
scas
in
or
or
or
or
or
or
mov
sbb
fcomi
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
mov
scas
scas
scas
scas
scas
or
or
or
or
or
or
or
or
(bad)
push
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
adc
or
or
or
or
or
or
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
repz
icebp
icebp
icebp
lock
ins
adc
jmp
or
or
or
or
or
mov
mov
mov
pop
lock
hlt
hlt
repz
icebp
icebp
icebp
lock
or
or
or
or
or
mov
scas
scas
scas
scas
scas
scas
in
in
mov
pop
pop
lock
icebp
icebp
icebp
lock
out
or
or
or
or
or
or
or
scas
scas
scas
scas
in
in
in
in
in
in
in
in
mov
mov
pop
icebp
repnz
icebp
icebp
icebp
lock
or
or
or
or
or
or
or
repnz
in
in
in
in
in
in
mov
mov
mov
lock
hlt
hlt
hlt
repz
adc
or
or
or
or
or
pop
repz
fcmovnu
(bad)
fmul
mov
mov
mov
mov
mov
mov
hlt
(bad)
(bad)
push
hlt
hlt
out
adc
or
or
or
or
or
repnz
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
or
or
sbb
hlt
hlt
lock
or
or
or
or
hlt
hlt
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
or
fstp
repz
hlt
(bad)
(bad)
in
adc
or
or
or
or
pop
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
fstp
repz
hlt
(bad)
(bad)
(bad)
mov
or
or
or
or
pop
pop
pop
fcmovnu
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
out
repz
hlt
(bad)
(bad)
(bad)
push
jmp
or
or
or
or
or
pop
pop
out
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
mov
(bad)
(bad)
(bad)
inc
jmp
or
or
or
pop
pop
pop
out
out
div
mov
mov
fstp
fstp
fstp
fstp
fld
adc
out
(bad)
(bad)
(bad)
push
lock
pop
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
pop
out
out
out
out
or
fucomp
jmp
or
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
dec
add
inc
jg
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
sbb
inc
add
inc
aas
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
mov
add
add
add
add
mov
add
add
add
ja
push
js
mov
add
or
add
add
add
add
(bad)
(bad)
js
mov
out
div
div
add
add
add
ja
(bad)
(bad)
(bad)
(bad)
push
ja
mov
jg
jg
test
(bad)
(bad)
(bad)
push
xchg
out
out
(bad)
(bad)
(bad)
js
add
add
ja
(bad)
dec
xchg
jg
push
add
add
ja
(bad)
jmp
and
xchg
out
(bad)
(bad)
(bad)
(bad)
js
add
or
(bad)
jmp
and
and
jle
jg
(bad)
(bad)
clc
add
add
ja
(bad)
jmp
and
sub
out
(bad)
(bad)
(bad)
push
add
or
(bad)
jmp
and
sub
stos
stos
jle
jg
(bad)
(bad)
(bad)
inc
ja
jmp
sub
sub
stos
stos
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
add
ja
(bad)
jmp
ja
stos
jg
(bad)
(bad)
(bad)
(bad)
push
js
add
ja
(bad)
jmp
sub
xchg
ja
push
(bad)
(bad)
jg
jg
add
or
(bad)
jmp
div
jg
add
push
div
clc
add
or
(bad)
jmp
sub
xchg
jg
test
jg
js
add
ja
mov
mov
div
push
pop
ja
push
div
clc
add
or
(bad)
out
sub
jg
test
jg
js
add
ja
mov
stos
fwait
fwait
xchg
div
(bad)
inc
out
clc
add
or
(bad)
out
mov
jg
(bad)
push
ja
(bad)
jle
jg
add
or
mov
fwait
fwait
fwait
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
(bad)
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
jle
jle
add
or
mov
(bad)
(bad)
dec
push
div
cmps
out
add
or
(bad)
out
out
out
out
out
xchg
(bad)
(bad)
(bad)
jg
ja
stos
jle
add
or
mov
out
out
out
out
call
div
div
cmps
call
ja
mov
out
out
out
out
call
jg
ja
jp
js
add
or
mov
out
out
out
out
out
xchg
push
div
div
stos
add
add
ja
mov
out
outs
out
out
out
call
jg
ja
test
add
add
ja
mov
out
out
out
mov
div
div
div
add
add
or
mov
outs
outs
outs
outs
outs
push
jg
jo
add
add
or
xchg
add
out
out
out
mov
ja
add
add
add
or
mov
test
outs
push
add
add
add
or
xchg
test
out
add
add
add
add
ja
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
ja
js
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
or
mov
mov
(bad)
push
add
add
add
(bad)
clc
mov
mov
js
add
add
add
add
ja
mov
js
pop
add
add
(bad)
push
js
mov
jo
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
js
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
or
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
push
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
push
add
(bad)
(bad)
push
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
inc
add
add
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
inc
cmp
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
enter
add
add
add
dec
add
add
add
add
dec
add
popa
add
add
add
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
push
add
add
les
add
add
add
(bad)
inc
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
ja
(bad)
inc
add
add
add
add
add
add
daa
ins
add
arpl
je
ins
add
pop
add
jb
outs
add
jb
add
jae
xor
xor
add
add
add
add
add
add
or
jns
(bad)
inc
add
les
enter
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
ja
and
add
add
add
mov
add
add
add
xor
fs
inc
add
add
add
push
add
add
mov
push
add
add
add
add
inc
add
push
add
add
mov
pop
add
add
add
add
inc
add
arpl
add
add
add
add
add
push
add
add
mov
sub
sub
push
add
(bad)
inc
add
ins
add
add
add
enter
add
add
add
or
sbb
mov
inc
add
add
add
add
add
push
add
add
push
add
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
push
add
bound
xor
pop
xor
add
xor
xor
pop
xor
xor
push
xor
outs
xor
xor
js
mov
data16
pusha
xor
inc
xor
add
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
adc
xor
xor
pop
add
xor
xor
add
add
ins
add
popa
add
add
add
add
xor
xor
xor
xor
add
xor
xor
xor
mov
xor
xor
xor
add
shl
ret
xor
xor
xor
or
push
loopne
outs
xor
push
std
and
dec
xor
mov
jle
pop
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
mov
pop
xor
push
js
mov
data16
pusha
xor
inc
xor
xor
add
xor
jmp
add
fs
dec
and
and
add
ins
add
popa
add
add
add
add
dec
xor
jle
pop
xor
add
popa
add
ins
add
popa
add
add
outs
add
add
xor
xor
xor
mov
data16
xor
xchg
xor
xor
add
xor
add
popa
add
ins
add
popa
add
add
add
add
mov
xor
xor
xor
sbb
aad
mov
xor
add
add
ins
add
popa
add
add
add
add
pop
xor
imul
pop
sub
xor
pop
xor
and
push
push
iret
xor
xor
xor
xor
pop
xor
xor
fs
dec
xchg
xor
dec
xor
pop
xor
xor
xor
xor
xor
sbb
mov
addr16
xor
and
and
add
ins
add
popa
add
add
add
add
inc
jge
xor
nop
push
xor
push
xor
and
add
jns
ins
add
popa
add
add
add
add
mov
xor
xor
pop
xor
xor
xor
xor
and
and
add
outs
add
and
xor
pop
add
add
add
ins
add
popa
add
add
add
add
xchg
pop
mov
data16
xor
or
and
push
push
(bad)
xor
xor
xor
add
xor
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
jno
push
push
(bad)
xor
xor
push
jle
mov
jle
pop
xor
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
mov
outs
xor
push
mov
sub
jbe
jne
xor
push
xor
daa
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
dec
xor
imul
jbe
jne
xor
push
xor
push
inc
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
bound
ins
add
and
je
outs
add
add
imul
and
je
push
add
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
add
add
and
imul
je
popa
add
add
je
imul
and
jo
popa
add
imul
add
add
and
je
push
add
add
outs
add
ins
add
add
add
add
add
and
je
outs
add
add
popa
add
imul
add
add
add
outs
add
jb
jne
jo
je
imul
add
add
add
imul
and
je
push
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
add
outs
add
add
add
add
add
outs
add
jb
add
je
ins
add
add
inc
add
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
test
jne
push
call
xor
cmp
jae
mov
sub
mov
mov
add
push
push
mov
mov
call
test
jne
mov
cmp
jne
mov
push
add
push
mov
call
test
jne
mov
cmp
jne
mov
cmp
mov
je
cmp
jne
popa
popa
popa
popa
popa
push
call
mov
mov
mov
cmp
je
cmp
jne
mov
mov
add
mov
mov
push
mov
push
xor
push
mov
call
mov
dec
mov
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
movs
(bad)
inc
(bad)
(bad)
jg
sbb
jne
je
pop
pop
jmp
push
push
push
call
add
pop
pop
ret
push
push
push
call
add
ret
cmp
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmp
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
push
push
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
mov
xor
cmp
setne
cmp
je
push
call
pop
mov
cmp
je
push
call
mov
inc
push
push
call
add
mov
cmp
jne
call
mov
call
mov
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
cmp
je
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
push
push
mov
push
call
mov
mov
test
pop
jne
call
mov
or
mov
jmp
test
je
call
mov
jmp
test
je
and
test
je
mov
and
mov
mov
mov
and
and
push
push
and
pop
or
test
mov
jne
call
add
cmp
je
call
add
cmp
jne
push
call
test
pop
jne
push
call
pop
test
push
je
mov
mov
lea
mov
mov
sub
sub
test
mov
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
mov
cmp
je
cmp
je
mov
and
imul
mov
sar
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
push
lea
push
push
mov
mov
mov
call
add
mov
cmp
je
or
mov
jmp
mov
and
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
cmp
jbe
mov
cmp
je
mov
xor
jmp
mov
cmp
je
or
cmp
jbe
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
lea
call
mov
cmp
jne
mov
cmp
jbe
cmp
je
cmp
jbe
push
push
push
call
add
call
mov
call
cmp
mov
je
mov
and
pop
pop
pop
leave
ret
cmp
je
cmp
ja
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
jmp
mov
mov
cmp
je
mov
cmp
je
mov
and
jmp
lea
push
push
push
push
push
lea
push
push
mov
push
call
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
call
cmp
jne
cmp
je
cmp
jbe
push
push
push
call
add
jmp
push
push
push
push
push
call
add
ret
push
mov
sub
push
xor
test
push
push
mov
mov
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
sub
mov
mov
je
dec
je
dec
je
call
mov
or
call
push
pop
push
push
push
push
push
mov
call
add
jmp
mov
jmp
test
je
test
jne
mov
jmp
mov
mov
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
test
mov
je
mov
not
and
test
js
mov
test
je
or
or
cmp
jne
or
test
je
or
test
je
or
jmp
mov
jmp
test
je
or
call
cmp
mov
jne
call
mov
or
call
mov
jmp
mov
mov
push
push
mov
push
lea
push
push
push
push
call
cmp
mov
jne
mov
mov
and
cmp
jne
test
je
and
push
push
lea
push
push
push
push
push
call
cmp
mov
jne
mov
mov
and
imul
sar
mov
lea
and
call
push
call
pop
call
mov
jmp
push
call
cmp
jne
mov
mov
and
imul
sar
mov
lea
and
call
mov
push
call
pop
push
call
cmp
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
mov
and
imul
sar
mov
pop
pop
mov
or
mov
mov
mov
and
imul
sar
mov
lea
and
mov
and
mov
jne
test
je
test
je
push
or
push
push
call
add
cmp
mov
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
mov
cdq
push
push
push
call
add
cmp
je
push
push
push
call
add
cmp
je
test
je
mov
test
mov
jne
mov
and
jne
or
jmp
or
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
and
cmp
jne
mov
jmp
mov
test
je
test
mov
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
cmp
jbe
cmp
jbe
cmp
je
mov
mov
and
imul
sar
mov
lea
mov
xor
and
xor
mov
mov
and
imul
sar
mov
lea
mov
mov
shr
shl
and
or
cmp
mov
jne
test
je
mov
mov
and
imul
sar
mov
lea
or
mov
mov
mov
and
cmp
jne
test
je
push
call
push
push
lea
push
push
push
and
push
push
call
cmp
jne
call
push
call
mov
mov
and
imul
sar
mov
lea
and
push
call
pop
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
jmp
mov
cmp
jbe
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
add
and
cmp
jne
jmp
mov
and
cmp
jne
push
call
pop
call
push
pop
mov
mov
jmp
cmp
jne
push
push
push
call
add
cmp
je
mov
jmp
push
push
push
call
add
jmp
movsx
xor
dec
je
dec
jne
mov
mov
jmp
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
je
add
cmp
jg
jmp
push
call
pop
call
mov
mov
jmp
mov
mov
sar
mov
and
imul
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
or
xor
cmp
setne
cmp
je
cmp
je
mov
and
neg
sbb
inc
je
mov
push
push
push
push
lea
push
mov
call
add
mov
mov
call
mov
cmp
je
or
call
ret
xor
mov
cmp
je
cmp
je
mov
mov
sar
and
imul
mov
lea
and
push
call
pop
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
mov
xor
mov
push
xor
cmp
je
cmp
jne
call
mov
cmp
jne
or
jmp
push
lea
push
push
lea
push
push
call
test
jne
cmp
jne
call
cmp
jne
mov
push
push
push
lea
push
push
lea
push
push
call
push
call
mov
cmp
je
push
lea
push
push
lea
push
push
call
test
je
mov
mov
xor
pop
call
leave
ret
mov
jmp
push
mov
sub
mov
xor
mov
cmp
push
push
push
jge
xor
jmp
mov
mov
xor
xor
inc
cmp
jne
lea
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
cmp
pop
je
cmp
je
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
mov
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
call
add
push
push
push
push
push
push
push
push
call
test
je
lea
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
cmp
jne
mov
mov
mov
mov
mov
push
push
add
push
lea
push
or
push
or
call
cmp
mov
je
cmp
(bad)
scas
lahf
(bad)
scas
xchg
cmp
sub
fnstcw
test
sbb
adc
pop
jnp
aas
jg
sub
pop
mov
jmp
pop
ret
das
(bad)
sub
dec
retf
xchg
cmp
push
sahf
das
adc
sahf
std
jmp
jb
jae
mov
dec
mov
dec
aas
sahf
mov
imul
dec
(bad)
out
leave
std
xchg
jg
cmp
cli
push
cmp
pop
(bad)
pop
mov
adc
ret
mov
(bad)
cmps
sub
or
aaa
cmp
xchg
pop
dec
aam
cmp
xchg
ret
mov
into
xor
rcr
cmp
cmp
inc
imul
push
inc
arpl
retf
(bad)
and
mov
ds
jno
dec
data16
sbb
mov
idiv
or
add
jae
sub
mov
jns
retf
mov
xor
std
cmps
sub
xor
test
jnp
js
pop
outs
lahf
adc
es
pushf
shr
ja
pop
mov
loope
leave
add
mov
rep
cmp
lods
iret
fsubr
setg
mov
into
call
xor
fimul
or
rol
and
mov
cli
(bad)
sbb
push
test
sub
fidivr
or
(bad)
in
mov
enter
clc
rcr
or
cmp
jns
cmp
mov
test
neg
repz
fmul
dec
push
and
jle
(bad)
pop
scas
jo
dec
repnz
repz
jle
cmp
pop
jl
adc
dec
cmp
dec
imul
leave
dec
sahf
iret
out
jno
jge
sub
movzx
les
imul
pusha
inc
inc
ss
jp
ja
addr16
retf
mov
adc
fwait
pop
(bad)
out
ja
inc
aas
into
(bad)
add
inc
xchg
pop
ds
outs
ds
ds
xor
mov
dec
loopne
xchg
inc
jl
dec
cmp
pop
pop
xchg
cmp
bnd
rol
jle
pushf
xor
into
inc
repz
not
mov
iret
lahf
test
mov
xchg
scas
scas
jnp
es
test
imul
sbb
pop
(bad)
(bad)
jno
sub
inc
or
(bad)
sti
pop
lahf
out
push
in
fimul
lea
into
push
jg
pop
stos
adc
scas
push
loop
mov
ficom
dec
outs
fstp
out
pop
jae
ins
jle
dec
jno
iret
ret
imul
push
das
test
adc
arpl
pop
fwait
movs
and
dec
into
cli
fs
ja
das
jp
imul
push
cmc
xchg
jl
mov
out
mov
xchg
aas
jns
fidivr
imul
xchg
cdq
out
lahf
aas
inc
ins
fs
xchg
inc
stos
fld
push
lds
test
sub
aas
sahf
(bad)
cld
add
out
xchg
(bad)
mov
xor
dec
out
not
xchg
ja
scas
mov
push
(bad)
(bad)
lahf
call
mov
pop
push
pop
repnz
arpl
jns
pop
or
ds
or
xchg
sub
jg
push
xchg
push
or
mov
xor
pop
(bad)
out
pop
fsubr
aam
jmp
push
or
fidivr
idiv
inc
lods
loopne
jp
lea
lfs
ins
scas
fs
dec
daa
lahf
(bad)
mov
jmp
(bad)
xchg
fdiv
pop
mov
cs
movs
out
inc
or
fild
lods
sub
xor
mov
sbb
xchg
sbb
loope
std
inc
cmps
xchg
in
addr16
push
aaa
dec
iret
lds
lahf
xchg
cmp
dec
cmp
dec
jg
lahf
fsub
xchg
push
ss
lods
icebp
out
stos
dec
scas
dec
out
dec
jp
sar
pop
aas
jle
ja
cmps
out
push
dec
imul
mov
cld
daa
mov
das
jne
inc
mov
outs
(bad)
mov
mov
sbb
mov
out
popf
aam
pusha
jmp
sar
adc
push
cmp
mov
mov
(bad)
add
and
retf
jmp
fdivr
adc
mov
mov
in
aas
push
xor
retf
adc
scas
pop
jg
add
(bad)
jg
sahf
sbb
jbe
cld
or
aas
mov
outs
je
ins
imul
or
ins
lahf
hlt
mov
pop
or
cmp
(bad)
addr16
out
add
enter
mov
jns
into
bswap
adc
call
xor
xor
fdiv
stos
ret
les
out
add
jns
xchg
inc
idiv
inc
xchg
mov
dec
mov
aaa
loop
jae
shr
push
mov
lea
iret
dec
mov
xchg
lods
mov
sbb
fnstcw
ficom
iret
push
rcr
into
or
jl
das
push
ds
dec
cwde
xor
fnstsw
xor
jge
repz
push
xchg
push
dec
add
aam
dec
outs
fild
pop
mov
jp
push
dec
cmp
add
das
cs
lock
jmp
hlt
sub
in
sbb
ret
push
dec
xor
xlat
call
mov
js
or
aaa
(bad)
psubusb
fsubr
push
retf
ins
or
xlat
into
or
(bad)
sbb
nop
push
mov
aaa
pslld
mov
push
dec
retf
cdq
ss
cmps
dec
dec
popa
js
into
int3
dec
(bad)
fs
movlps
jns
jl
out
sub
sbb
imul
gs
stos
stos
ror
fiadd
movs
nop
div
xchg
scas
xchg
dec
sbb
popa
dec
or
scas
mov
jbe
cdq
lods
enter
sbb
xchg
cmp
jmp
push
outs
mov
movsx
fldenv
outs
or
push
invlpg
(bad)
jle
jl
push
xchg
das
nop
rsm
and
(bad)
out
push
shr
and
ja
cmp
cwde
ss
addr16
fstp
xchg
cmps
jmp
fcomip
inc
push
pop
es
imul
iret
sub
(bad)
sub
scas
cmps
retf
xchg
mov
in
out
xchg
dec
adc
sub
dec
pop
mov
dec
sub
dec
fld
cld
push
jmp
js
jg
jne
lds
ins
push
out
xor
mov
ror
push
dec
test
dec
dec
outs
and
push
xchg
jmp
pop
outs
jo
pop
repz
mov
mov
sti
retf
rol
scas
mov
out
inc
mov
jbe
jne
fild
call
push
adc
push
bound
pop
in
dec
mov
pop
pop
jbe
dec
jmp
scas
sub
fimul
xor
ins
mov
inc
or
mov
addr16
stos
pop
(bad)
das
jmp
xchg
pop
sbb
lods
jg
push
cmp
mov
cs
dec
pop
icebp
add
push
test
dec
push
pop
sub
loop
in
add
fsub
jne
call
pop
mov
dec
jp
sub
xor
lahf
sub
pop
scas
lea
sar
test
xor
push
mov
or
loopne
sahf
and
aaa
mov
mov
mov
add
jge
ins
es
scas
mov
sahf
mov
mov
cmps
cs
cmp
into
jmp
pop
xchg
mov
dec
es
repnz
int3
in
jo
inc
jne
sbb
jne
outs
out
loope
pop
jp
lahf
call
cs
out
in
jg
dec
loope
call
pop
mul
pop
cmc
(bad)
push
inc
popf
pop
mov
push
(bad)
(bad)
je
out
not
push
scas
sub
ins
into
dec
idiv
pop
repz
addr16
cdq
rcr
std
jae
pushf
sub
sbb
das
fist
ins
cmp
fcmove
jo
fidiv
into
adc
mov
inc
adc
mov
(bad)
fidivr
(bad)
sar
mul
jmp
(bad)
outs
stos
pop
jle
pusha
push
jns
stc
test
mov
jae
in
(bad)
ins
mov
inc
cmp
inc
mov
mov
nop
sti
pop
(bad)
cli
xchg
mov
pop
aas
(bad)
(bad)
div
xlat
sub
mov
mov
fild
push
pop
stos
stos
sbb
neg
(bad)
dec
or
jg
loope
in
or
sub
ss
jbe
ss
cmp
sti
or
ins
lds
inc
mov
pop
mov
out
ss
cmp
mov
or
mov
test
pop
sub
sbb
cmovbe
pop
fucomp
out
pop
loopne
test
movs
stos
jne
adc
mov
mov
push
or
jg
xlat
fstp
pop
push
les
cmp
jp
sub
dec
and
scas
sbb
retf
in
iret
cmp
inc
(bad)
repnz
jle
inc
jns
neg
out
dec
imul
outs
stos
mov
movs
push
and
jmp
pushf
xlat
jecxz
xchg
out
mov
popf
in
adc
fmul
or
pop
and
nop
repnz
in
cmc
ins
inc
fistp
ins
mov
(bad)
dec
mov
std
outs
xchg
shr
cmp
dec
or
idiv
fcomp
sub
dec
out
mov
jg
inc
jp
push
fbld
xor
lea
nop
pop
int
xchg
rcl
fnstsw
push
inc
push
fnstenv
jb
ja
push
pop
out
neg
mov
jg
arpl
pusha
movs
pusha
in
push
push
xlat
xchg
es
inc
pop
call
mov
mov
sbb
mov
mov
push
mov
pop
jnp
jl
sbb
leave
jmp
mov
aaa
imul
aas
mov
jg
das
mov
pop
mov
popf
xchg
push
mov
icebp
js
retf
sbb
and
jne
mov
xchg
pop
stc
clc
(bad)
xchg
xor
and
or
fwait
in
push
or
pop
imul
jmp
nop
mov
int3
xor
ss
jne
xchg
fcmovb
jmp
jno
jmp
dec
add
frstor
imul
jns
(bad)
mov
sti
jge
jg
shr
dec
shr
lahf
cmps
add
push
xchg
mov
mov
outs
pop
and
iret
dec
inc
push
dec
jmp
cmps
cmps
jmp
movs
or
mov
ins
int3
stos
repnz
and
mov
adc
pusha
mov
jns
fimul
add
(bad)
out
dec
cli
push
xchg
int
and
push
out
pop
pop
pop
aas
push
mov
xlat
ds
(bad)
(bad)
mov
jp
lods
add
ds
out
ret
pop
enter
or
sbb
pop
sub
mov
cmp
pop
les
scas
addr16
outs
aad
dec
das
stc
imul
int3
sbb
cmp
cmp
pop
or
sub
sahf
stos
sbb
lods
jge
cmp
mov
in
dec
int
add
(bad)
inc
inc
neg
scas
aad
mov
psrlq
std
xchg
push
pop
add
aas
scas
jae
retf
stos
iret
stc
fwait
(bad)
jnp
dec
mov
mov
(bad)
out
pop
enter
xor
pop
pushf
gs
inc
fcomp
dec
add
aam
jecxz
call
outs
xor
sbb
out
mov
jecxz
mov
xchg
out
dec
xchg
lods
out
aam
(bad)
sbb
(bad)
pop
popf
ficomp
or
sbb
scas
dec
fcom
pop
mov
mov
mov
pminub
outs
cmp
add
std
mov
mov
out
ja
pop
es
sub
mov
cs
popa
psubq
mov
movs
(bad)
loope
mov
dec
ins
add
jnp
or
aas
pop
cmps
mov
iret
mov
int
or
xlat
jmp
aad
sbb
jno
push
fwait
mov
lods
xor
call
(bad)
sub
xchg
push
dec
sub
inc
lahf
repnz
dec
xor
pop
pushf
popf
mov
mov
fs
call
push
pop
daa
imul
xchg
jno
mov
xor
push
pop
fcmovnb
jge
stos
popf
or
jp
xlat
nop
jbe
xchg
mov
mov
stos
icebp
fucomip
shl
and
add
out
ja
xor
ins
xchg
sbb
int
ds
push
aaa
cmc
pop
dec
cmps
fimul
jnp
pop
sbb
ror
dec
ret
mov
jne
stc
test
xor
int3
sub
out
call
jle
xchg
inc
mov
mov
mul
mov
jp
es
and
(bad)
jns
iret
adc
idiv
push
imul
test
ins
enter
inc
and
fist
jbe
mov
jle
mov
xchg
push
cld
imul
(bad)
cmp
push
lods
leave
cmp
ins
jbe
lahf
and
aas
inc
jle
push
(bad)
mov
pop
xchg
add
jg
inc
out
daa
loope
fimul
into
mov
stc
mov
mov
stos
dec
sar
hlt
outs
lods
sub
xchg
sti
call
sub
inc
fs
cmp
xor
jb
std
hlt
mov
xor
mov
push
push
(bad)
mov
pop
fidivr
jle
movs
inc
mov
cmp
ret
inc
adc
fs
out
xor
pop
jne
push
cmp
sbb
sbb
imul
fwait
cmp
or
cwde
daa
fst
xor
cdq
jge
in
dec
pop
adc
das
sbb
into
add
pmaddwd
inc
lock
push
imul
icebp
and
pop
jg
adc
addr16
mov
scas
cmp
push
or
imul
popa
dec
sub
or
addr16
in
mov
cmp
dec
add
in
dec
fistp
outs
or
jae
stos
add
mul
mov
and
in
fist
mov
or
setnp
pop
lahf
mov
repnz
add
mov
pop
in
mov
pop
add
jbe
mov
adc
mov
test
push
cld
pop
test
jecxz
dec
jle
mov
lods
stos
(bad)
mov
xor
jg
in
pop
mov
sub
je
sahf
lahf
je
mov
mov
cwde
sub
jns
inc
pop
setno
inc
data16
scas
sub
dec
call
pop
shr
xor
sub
sbb
ds
dec
ret
repz
xchg
pop
dec
pop
add
(bad)
mov
fscale
pop
ins
scas
lods
das
(bad)
iret
xor
or
scas
in
retf
mov
fldenv
add
adc
and
ud2
cmps
dec
scas
sbb
out
adc
out
(bad)
jmp
sbb
mov
mov
das
adc
retf
mov
inc
call
adc
fs
add
imul
mov
xchg
inc
mov
push
arpl
mov
cmp
lock
inc
mov
pop
in
fild
cld
int
jg
ds
mov
sbb
or
ins
mov
pushf
xchg
arpl
mov
sub
stos
xor
retf
pop
outs
je
das
jae
sub
movs
mov
mov
jle
mov
das
add
sub
xor
dec
mov
movs
sahf
mov
mov
xchg
mov
into
std
jmp
pop
push
dec
mov
jle
sbb
mov
sar
pop
xchg
es
and
ins
adc
cmp
lahf
out
xchg
xchg
jns
(bad)
and
(bad)
dec
(bad)
or
outs
dec
inc
cmp
cmp
mov
aam
jle
mov
in
not
dec
lea
push
sbb
xchg
hlt
fcom
xor
sbb
ins
loop
pushf
add
push
lea
test
dec
mov
xor
jno
mov
adc
addr16
rcl
push
cmp
inc
ds
add
(bad)
sub
push
add
ins
ja
ss
inc
or
dec
stos
test
sbb
jns
or
inc
fisttp
outs
xchg
inc
inc
or
(bad)
(bad)
in
movs
jmp
jp
gs
pop
pushf
movs
inc
xchg
mov
push
jle
push
fcmovnu
ss
clc
out
sub
sbb
xchg
out
lods
pop
mov
sahf
je
mov
stc
cmp
les
outs
(bad)
shr
adc
jl
imul
scas
jbe
push
repz
gs
fnstenv
sub
fild
dec
sbb
cs
mov
out
jge
mov
fisttp
xor
repnz
std
popf
outs
shl
jg
xchg
scas
adc
sbb
push
call
fld
retf
imul
or
ins
repz
inc
sub
bnd
das
mov
fsubrp
fist
cmp
pop
dec
(bad)
sahf
mov
adc
push
shld
aas
fimul
xlat
out
mov
sub
jns
xchg
mov
fisubr
dec
out
loope
aas
add
test
cld
lds
call
pop
and
add
fnstcw
aad
jo
imul
movs
stos
mov
xchg
jo
or
push
or
push
xchg
sbb
inc
xchg
push
addr16
mov
mov
jle
fwait
jg
outs
cs
cmp
and
mov
bound
sti
lods
dec
and
test
(bad)
cmp
adc
outs
cmp
in
add
das
adc
sar
mov
into
sbb
scas
iret
mov
xchg
mov
sbb
cs
leave
xor
mov
xchg
aam
mov
arpl
ret
je
sahf
adc
dec
outs
sbb
fldenv
or
(bad)
clc
es
and
pop
stc
push
pop
add
add
sar
dec
arpl
jge
aaa
pop
jl
xchg
iret
lods
retf
add
sbb
aas
xchg
adc
or
push
jg
aas
(bad)
push
push
aas
imul
xchg
mov
(bad)
ds
mov
ficomp
fisubr
dec
inc
add
or
inc
or
sar
(bad)
sbb
dec
and
push
repnz
pop
jg
pop
sub
mov
mov
mov
mov
jle
sub
xchg
aam
jg
outs
inc
push
popa
push
outs
mov
scas
xchg
add
scas
xchg
mov
(bad)
std
fdivr
dec
pop
movs
aad
outs
mov
pop
pop
inc
pop
sub
inc
out
push
xor
mov
into
mov
mov
pushf
jp
xchg
retf
std
popf
out
or
das
lds
scas
xchg
dec
(bad)
das
and
das
dec
mov
out
outs
mov
lods
mov
es
dec
or
mov
or
inc
pop
lahf
dec
daa
jl
jns
sbb
push
cld
(bad)
js
lock
dec
sub
jnp
out
popf
dec
adc
mov
xchg
scas
mov
mov
push
sbb
push
popa
cmp
dec
jge
xor
push
loop
mov
mov
lahf
lahf
sbb
pop
in
lods
outs
leave
push
sbb
pop
(bad)
jmp
ins
iret
push
out
outs
mov
lods
jp
jns
pusha
mov
or
in
outs
mov
pop
in
xchg
in
fst
(bad)
loopne
ds
pop
sbb
or
inc
mov
jecxz
mov
xchg
outs
dec
xchg
fsubr
jg
mov
ja
cmp
or
das
sbb
cmp
into
out
mov
imul
popf
xchg
jl
pop
sar
clc
jle
ja
cmp
(bad)
sbb
scas
into
lea
cld
cmp
mov
(bad)
int
jae
or
bound
ins
lods
jb
pusha
pop
push
dec
and
add
inc
addr16
int3
in
sahf
fild
ret
push
mov
outs
lock
fwait
lods
jl
aas
call
fisttp
and
xor
dec
jg
into
iret
lahf
adc
mov
or
in
and
push
sub
sub
xchg
lahf
jg
pop
imul
push
and
pop
cs
cmp
aas
push
jno
ds
jg
push
push
jo
loopne
out
cmp
scas
ror
inc
scas
add
jbe
cmps
pop
pop
inc
es
xor
std
add
lahf
adc
scas
movs
xor
pop
rcr
sbb
jbe
sbb
iret
or
sbb
adc
out
lock
punpckldq
push
inc
ds
cmps
xor
jecxz
int3
sub
or
mov
bound
jb
jo
(bad)
cs
js
imul
inc
fist
mov
add
ret
or
push
add
sub
sahf
adc
mov
mov
push
and
lds
loop
dec
or
xor
sbb
outs
mov
les
xor
scas
repnz
push
test
jmp
push
mov
mov
iret
cld
jge
jle
sar
jb
add
jle
sub
sar
pop
(bad)
pusha
push
xor
and
fld
mov
sub
ficom
push
push
in
xor
jg
fld
mov
mov
adc
pop
sbb
sub
add
mov
ret
cmp
jmp
sub
fs
femms
mov
call
inc
lods
sub
push
bnd
jp
out
mov
jb
stos
pop
mov
fiadd
(bad)
sub
test
dec
mov
out
mov
gs
mov
call
push
mov
scas
dec
jo
outs
jle
jle
lahf
call
es
fwait
xlat
call
xor
out
shl
mov
sub
dec
popa
xchg
sbb
ds
ret
aad
cmps
inc
push
(bad)
and
mov
push
repz
mov
sar
lods
dec
mov
dec
outs
dec
push
mov
pop
fwait
bswap
dec
shl
fldenv
scas
shl
and
fs
pop
test
xor
stos
and
mov
(bad)
shr
sbb
pop
ja
imul
test
jge
inc
inc
(bad)
stos
inc
cmps
ins
jo
(bad)
fwait
mov
inc
mov
(bad)
comiss
add
movs
adc
xchg
cdq
dec
out
fstp
mov
(bad)
test
sub
aas
mov
push
and
arpl
cmp
popf
lods
out
loop
fsub
fsubr
out
pop
mov
sub
(bad)
mov
pop
cdq
int
retf
lea
scas
xchg
das
mov
cli
enter
les
mov
ret
in
mov
in
call
mov
cmp
aad
sub
or
jp
and
inc
jle
aam
mov
stos
fucomi
ja
mov
cmps
pop
aaa
jnp
out
sub
scas
(bad)
mov
add
jp
xchg
addr16
imul
mov
sahf
in
cmp
popa
shl
fsub
outs
inc
pop
cs
daa
cdq
movs
iret
test
jge
jno
loop
xchg
and
int3
push
(bad)
xchg
repz
dec
or
jp
add
test
push
fistp
and
test
loop
and
and
inc
cs
inc
scas
pop
push
sbb
adc
jmp
pop
int3
aam
xchg
hlt
dec
jl
sbb
outs
stc
sti
lock
mov
pop
jnp
or
out
jl
sahf
call
test
jle
mov
xchg
shr
push
aaa
add
ja
dec
test
sar
cmps
inc
push
call
retf
loop
inc
sbb
js
cld
(bad)
rcr
lods
popa
rep
cld
xchg
aad
sub
mov
jmp
sub
mov
in
int3
jbe
(bad)
out
sbb
test
cs
and
fs
xor
adc
bound
sbb
mov
sub
jge
jbe
xor
adc
scas
imul
push
in
aas
and
sub
(bad)
int
shl
mov
ja
std
sahf
retf
aas
ror
das
mov
ret
ret
cmp
inc
scas
daa
pop
dec
ret
add
xchg
mov
loop
pop
pop
(bad)
neg
mov
call
pop
jle
sub
push
(bad)
out
inc
pop
out
push
pop
sti
cmps
mov
or
ins
daa
movsx
ja
fist
mov
fsubp
test
scas
pop
shr
bound
fs
jae
sahf
push
adc
retf
mov
(bad)
(bad)
aad
cmc
dec
sbb
cmp
jg
cmp
sahf
fmul
inc
jae
push
out
mov
push
mov
cmp
(bad)
loope
popa
xor
mov
stos
push
retf
sub
cmps
cwde
push
sti
inc
pushf
mov
jge
xor
or
outs
test
push
das
push
xor
sub
jle
push
ja
leave
fiadd
push
dec
adc
ds
stos
(bad)
cmp
xlat
push
rcr
push
adc
fisttp
mov
std
fisttp
mov
or
jl
(bad)
stos
ret
pop
repz
shl
or
fcomp
das
adc
jne
jle
ds
arpl
xor
test
sti
or
push
push
jl
psubd
ins
js
pop
pop
ret
jmp
clc
cli
out
xchg
arpl
push
mov
cmp
out
jle
popa
jo
gs
dec
aam
imul
pop
stos
iret
or
cmp
cs
into
popf
jo
mov
cmps
jle
stos
test
mov
mov
out
dec
and
xlat
xor
adc
cmc
cmp
and
sub
pop
add
out
out
pop
test
fstp
or
or
mov
mov
in
cs
ins
fbld
daa
pop
sub
add
dec
mov
push
ins
lock
push
adc
fcomp
hlt
jl
retf
xchg
lahf
sub
xor
xor
jg
imul
sar
inc
xchg
stos
sahf
mov
outs
in
nop
dec
retf
ds
fwait
cs
out
dec
fmul
push
lock
cmp
sub
xchg
xchg
pop
and
je
mov
icebp
outs
or
aad
jecxz
stos
pop
push
jae
push
lods
mov
sti
jl
push
adc
push
push
das
rcr
mov
or
scas
int3
lahf
mov
das
pop
cmp
pop
lahf
dec
sahf
cld
inc
sti
sub
mov
movs
scas
cmp
inc
dec
sbb
scas
out
(bad)
jno
jecxz
idiv
sti
call
cmp
pop
or
scas
ins
add
push
pop
movs
stos
sub
sbb
dec
inc
out
push
and
in
cld
in
imul
xchg
adc
jge
pop
sti
das
fst
dec
push
(bad)
js
mov
jnp
out
enter
and
sbb
jmp
mov
pop
mov
mov
xchg
fimul
(bad)
jo
lock
iret
push
dec
inc
ud2
cmp
inc
fstp
ret
retf
and
iret
fbstp
out
fdivr
aaa
(bad)
push
fild
pop
xor
out
jecxz
pop
xchg
sbb
data16
pop
dec
cmp
sub
sub
pop
int
dec
xchg
and
enter
retf
stos
neg
jg
sahf
ins
out
or
dec
(bad)
jae
or
and
das
adc
jnp
mov
test
cli
xchg
sbb
scas
stos
inc
cmp
aaa
dec
jmp
cmps
daa
inc
movs
adc
outs
xchg
jle
and
jns
ficomp
adc
inc
das
cdq
pop
jnp
mov
pop
mov
jb
test
push
mov
retf
add
addr16
and
or
ror
dec
dec
(bad)
jg
scas
xchg
inc
mov
out
call
dec
fwait
sbb
cs
or
and
hlt
push
mov
add
jge
pop
mov
popf
fstp
sub
lods
nop
imul
ins
mov
mov
repz
push
jle
and
not
data16
je
adc
rcr
inc
jnp
or
out
int3
sub
dec
das
(bad)
imul
add
or
sahf
mov
popf
dec
(bad)
dec
pusha
mov
xor
dec
jge
dec
add
adc
mov
mov
repnz
popf
enter
inc
cmp
ficomp
cmp
pop
lock
inc
daa
lds
outs
iret
retf
nop
test
push
sbb
arpl
pop
addr16
fld
xchg
xchg
xchg
stos
mov
xchg
cmp
and
pcmpeqb
and
das
inc
dec
stos
lea
adc
pop
ret
cmps
icebp
dec
inc
(bad)
out
jl
ja
pop
mov
scas
sub
clc
iret
outs
cmovg
iret
mov
mov
sbb
jb
jmp
test
dec
inc
xchg
shl
test
push
or
pushf
icebp
mov
push
cmp
aaa
or
add
test
mov
dec
inc
cmovno
mov
sbb
cs
test
jbe
jg
in
outs
mov
push
pop
pop
mov
jo
iret
cs
cmp
ja
jp
lods
jmp
imul
(bad)
int3
stos
mov
not
pop
neg
mov
iret
sub
and
jle
out
jmp
das
sbb
daa
retf
pop
sbb
push
scas
ret
scas
push
ins
fidiv
adc
(bad)
add
sahf
mov
dec
ds
mov
push
mov
cmps
mov
xor
outs
call
dec
mov
mov
ja
mov
(bad)
adc
cmps
test
dec
inc
retf
rcr
into
mov
mov
xor
mov
mov
push
pop
jecxz
imul
stos
movs
ss
sub
das
cld
dec
fwait
xor
cs
xchg
sbb
fsubr
out
and
mov
sub
pop
xor
(bad)
cld
into
lods
cmps
mov
(bad)
dec
aas
push
sub
jbe
int3
jmp
inc
fst
dec
ds
mov
xchg
sub
dec
jmp
add
sbb
loopne
lahf
scas
jmp
daa
(bad)
and
in
push
nop
(bad)
out
adc
pop
inc
fidiv
sub
pusha
or
retf
stos
push
xor
mov
dec
rcl
out
sbb
xchg
es
xchg
outs
in
aad
iret
jnp
pushf
add
daa
in
inc
adc
pop
sub
cmps
leave
cmc
push
xchg
popw
pop
test
mov
(bad)
scas
jb
test
adc
out
imul
scas
fwait
pop
cli
je
mov
fsubp
or
cmp
cs
das
out
cli
in
shl
icebp
(bad)
and
mov
add
inc
(bad)
inc
sub
scas
(bad)
xchg
inc
xchg
jg
cld
mov
fild
in
pop
adc
or
sahf
repz
ss
dec
jecxz
adc
push
mov
fild
or
scas
jle
fwait
xchg
sbb
add
xor
pop
fs
std
jb
retf
enter
int
mov
in
(bad)
je
jns
dec
pop
cmp
popf
dec
out
out
or
into
dec
scas
cli
in
out
push
mov
ret
(bad)
(bad)
out
and
dec
pop
and
ja
inc
xor
xor
sub
mov
test
stos
fist
xchg
loopne
xchg
btc
cld
mov
adc
sbb
lods
pusha
mov
mov
dec
cld
xlat
sahf
repz
loopne
xlat
dec
enter
imul
js
jmp
dec
(bad)
pop
aaa
jmp
fsubr
mov
cmp
outs
xor
mov
test
ss
inc
mov
mov
or
aam
sub
daa
jle
jp
repnz
jge
lods
lahf
icebp
xchg
fidivr
pusha
int3
mov
stos
iret
rcr
or
mov
push
add
scas
lahf
mov
or
movd
lea
or
movs
sbb
pop
pop
outs
test
iret
sub
xchg
cmp
and
data16
dec
scas
stos
pop
pop
call
in
lock
xchg
push
test
int3
int
mov
test
outs
or
dec
pop
test
(bad)
mov
loope
stos
call
pop
movs
pop
pop
dec
sub
pop
in
dec
int3
outs
dec
push
outs
cli
shr
fisubr
dec
mov
ins
out
jmp
push
outs
sahf
mov
shr
mov
ds
cmps
pop
loope
daa
in
lea
pop
test
add
ss
push
xlat
push
mov
adc
loop
retf
scas
dec
pop
in
test
sub
or
lds
sbb
jbe
imul
ret
cmp
scas
repz
in
das
aam
sbb
clc
mov
jb
mov
jb
mov
jbe
out
out
retf
das
jns
(bad)
ror
mov
xchg
mov
test
push
xchg
mov
mov
xor
cmp
movs
xor
sub
mov
sub
pop
dec
out
scas
jmp
add
sub
call
jl
jmp
inc
xor
jecxz
pop
enter
rcr
aaa
add
inc
mov
ds
dec
inc
mov
jb
dec
or
sti
lea
sahf
inc
punpckhwd
push
jae
les
rol
ss
jne
mov
jle
jle
outs
in
sti
mov
std
movs
sbb
sub
cmp
xchg
cmps
stos
out
sub
jbe
ficom
sub
call
(bad)
jecxz
dec
adc
das
push
or
fcmovb
loope
jecxz
pop
push
enter
scas
jb
xchg
jb
aas
cld
jl
sbb
out
jp
mov
fs
(bad)
mov
dec
and
je
sbb
xchg
fs
fild
movs
fwait
push
(bad)
int3
mov
xchg
test
dec
data16
cmps
cmps
out
mov
dec
repnz
jbe
ret
popf
dec
fwait
sub
scas
das
jecxz
cld
dec
push
mov
fisub
cmp
push
pop
js
sahf
scas
scas
aam
popf
int3
or
adc
stos
push
cmp
out
push
dec
xor
das
retf
jbe
pop
in
sahf
in
clc
mov
mov
sub
cmc
(bad)
mov
ds
lods
loope
dec
xchg
test
jbe
and
adc
cmp
cs
retf
leave
lahf
dec
adc
je
in
mov
sbb
scas
lods
mov
add
test
lds
xlat
jns
add
int
or
dec
cld
pop
dec
mov
repz
sbb
add
int3
add
int
push
out
pushf
into
pop
(bad)
std
xlat
cmps
call
dec
and
(bad)
fmul
xchg
lock
cld
push
scas
sub
xchg
test
stos
cs
call
jg
js
addr16
pusha
int3
movs
retf
and
in
imul
fwait
out
retf
movs
inc
fwait
jl
ss
jae
shr
xor
cli
int
loop
mov
call
push
pop
dec
and
cmp
retf
mov
hlt
mov
call
jno
and
adc
dec
loop
xor
lahf
clc
mov
jns
mov
out
fisub
lock
add
mov
jl
out
popf
pop
mov
xor
(bad)
ficom
add
push
xchg
xor
push
inc
cmp
dec
adc
xchg
movs
and
outs
daa
mov
aaa
mov
popa
js
mov
leave
mov
aas
(bad)
pop
out
mov
xchg
push
scas
ficom
jnp
push
gs
ins
inc
inc
mov
mov
cmp
mov
pop
or
xor
sbb
sti
das
and
lahf
mov
mov
nop
push
add
add
inc
inc
dec
outs
xlat
mov
dec
cmp
mov
push
mov
mov
cs
mov
mov
dec
lds
mov
sbb
jp
jg
xchg
adc
test
dec
pop
dec
xor
out
sar
dec
mov
fwait
mov
popf
sub
cmp
and
pop
cwde
mov
test
in
pop
popf
adc
pop
pop
mov
gs
inc
jnp
jb
cmp
mov
xchg
jle
push
or
test
and
les
test
pop
push
aas
call
popa
sub
push
rcr
push
fbld
sub
je
ds
ds
push
add
ficomp
sub
mov
sub
pop
repz
rcr
popf
jae
in
iret
in
pop
mov
lea
add
adc
xlat
pop
pop
scas
cmp
pop
out
aam
mov
pop
fcmovu
in
pop
scas
call
sahf
push
dec
sti
fld
dec
xchg
in
fst
cmp
es
lods
push
sti
push
aaa
mov
fcmovbe
xor
sub
fcmovbe
dec
fist
retf
mov
cmp
sti
jb
push
mov
jnp
jg
ja
push
inc
sti
mov
(bad)
aas
(bad)
xor
in
dec
ror
scas
add
in
lds
add
push
adc
popa
push
pop
retf
push
ret
xchg
jle
js
ds
sub
pop
pushf
mov
retf
jmp
std
mov
mov
cld
leave
push
push
jmp
xor
and
jecxz
push
cmp
jmp
dec
mov
jmp
out
xor
cmps
mov
repz
and
adc
lods
sbb
ret
add
mov
iret
mov
aaa
adc
cmp
push
mov
xor
cmp
jg
fnsave
mov
pop
cmp
push
jle
xchg
dec
mov
mov
lock
or
push
sub
or
mov
clc
frstor
pop
fsubr
push
mov
iret
adc
push
shl
(bad)
adc
xor
out
jp
mov
inc
xchg
mov
xlat
rol
adc
add
test
rcl
ds
adc
xchg
adc
fdiv
pop
ss
add
sbb
iret
idiv
sub
dec
push
sbb
push
cmp
mov
in
dec
xadd
adc
adc
sub
mov
mov
mov
mov
mov
push
mov
shl
cmp
fimul
mov
adc
xor
xchg
sub
cmp
aam
jae
iret
push
add
push
test
pop
jno
xchg
pop
push
adc
les
mov
call
iret
inc
add
lea
xchg
jge
pop
xor
push
adc
dec
pusha
fcomp
cmps
arpl
mov
dec
fnstcw
push
cmp
cs
inc
dec
(bad)
into
xchg
ins
js
ins
int
push
lahf
out
(bad)
push
ds
fsub
jmp
sbb
jns
push
stos
retf
lock
pushaw
(bad)
jle
lods
aaa
ret
mov
push
pop
dec
cmp
pop
mov
sub
jo
jge
inc
xor
push
jle
sbb
fucomip
mov
(bad)
push
jbe
mov
mov
pusha
cdq
pushf
or
adc
iret
add
adc
gs
(bad)
scas
sbb
in
jle
ins
pop
sbb
aas
loope
xor
pop
movs
lea
jne
(bad)
mov
imul
sub
in
push
outs
(bad)
in
sbb
fst
and
loop
outs
jl
pusha
push
sbb
loopne
leave
mov
ds
push
and
xor
add
inc
push
imul
xchg
hlt
cmp
dec
les
cwde
push
mov
lock
fbstp
aam
sub
dec
pop
lahf
mov
scas
jmp
fwait
(bad)
xlat
cmps
stos
and
out
and
jp
inc
dec
in
(bad)
xor
data16
jle
jge
pop
call
in
ja
sub
and
dec
in
pop
test
mov
aaa
iretw
mov
std
dec
sar
mov
xchg
mov
outs
or
test
mov
push
inc
fbld
sub
scas
ins
push
ficom
pop
ja
pop
push
adc
jg
pushf
enter
(bad)
cmp
test
aad
xchg
or
dec
pop
ja
push
push
pop
pushw
stos
cmp
push
mov
sub
in
dec
add
enter
js
adc
pop
jge
xchg
movs
and
iret
xchg
stc
imul
je
scas
sbb
js
outs
dec
dec
or
ds
fdivr
mov
cmp
push
inc
dec
(bad)
ins
outs
sar
out
xor
fcmovnbe
aas
sbb
(bad)
xchg
jno
pop
adc
sub
test
cmp
sbb
sub
pop
addr16
jg
or
ds
icebp
int3
mov
push
daa
push
xchg
cmps
(bad)
iret
loopne
stos
test
(bad)
pop
pop
dec
stos
lea
fwait
jl
jg
mov
sahf
mov
jno
mov
xchg
adc
pop
(bad)
stc
dec
fistp
cmp
xchg
push
jae
xlat
adc
jle
icebp
iret
sar
sti
or
cdq
and
aas
test
cmp
dec
jg
sbb
pop
popa
out
mov
ror
leave
push
cmp
push
pusha
test
cs
push
push
mov
je
in
mov
jp
js
test
ins
out
pushf
mov
fsubr
pop
mov
dec
pop
pusha
xchg
dec
daa
test
(bad)
outs
xlat
cmp
cmp
sub
xchg
(bad)
bound
push
call
icebp
outs
jg
popa
fld
cs
push
cmp
call
lods
dec
jge
(bad)
out
loopne
ret
mov
out
cmp
sbb
mov
test
cmps
scas
mov
cmps
mov
dec
inc
jns
adc
inc
cwde
call
inc
adc
jecxz
or
xchg
pop
aas
lods
pop
jge
inc
push
test
into
out
and
xor
mov
pop
das
sbb
cwde
pop
dec
or
push
(bad)
pop
ficomp
repz
(bad)
jae
sahf
push
nop
fucomp
xor
out
call
pop
sub
ins
push
addr16
popf
pop
mov
mov
inc
adc
lds
imul
sub
(bad)
popf
imul
hlt
shr
scas
pop
mov
and
cs
es
sbb
push
cs
lahf
call
inc
dec
(bad)
out
bound
cmp
xchg
jle
jg
popa
xchg
mov
dec
pop
in
mov
sbb
or
mov
mov
repz
cmps
xor
jmp
inc
add
rcr
dec
cmps
ja
xor
mov
outs
(bad)
out
repnz
jbe
movs
bound
jb
(bad)
sub
inc
inc
shr
aaa
pop
pop
mov
pushf
and
sahf
mov
out
pop
fs
xchg
pop
imul
hlt
adc
mov
cmps
clc
adc
idiv
jo
pop
idiv
scas
push
sub
jmp
sub
push
and
ror
mov
mov
mov
add
out
xlat
imul
bnd
idiv
rcl
test
jae
add
push
scas
mov
push
ss
dec
cld
jp
cwde
pop
lahf
add
std
bound
cdq
popa
dec
jno
xchg
lahf
js
dec
setl
dec
icebp
dec
mov
xlat
(bad)
add
sub
pop
cwde
or
iret
addr16
dec
rcr
fist
sahf
xchg
inc
int3
cmp
dec
pop
retf
scas
imul
in
jns
out
pop
outs
cmps
iret
adc
test
enter
loopne
mov
inc
jecxz
inc
les
inc
(bad)
stos
sub
inc
ins
dec
xchg
in
mov
shr
mov
or
mov
adc
int
xchg
stos
dec
les
pop
fisttp
lahf
jg
retf
or
aam
inc
or
inc
gs
or
or
cmp
int3
mov
jbe
(bad)
iret
mov
dec
dec
movs
adc
out
mov
mov
repnz
(bad)
(bad)
std
shr
push
ins
in
cs
dec
xor
cmp
aas
mov
fisttp
inc
movq
loope
add
pop
out
cwde
enter
dec
adc
pop
ja
outs
dec
sub
adc
loop
ret
fild
mov
push
inc
out
dec
pusha
ins
scas
pop
test
ja
fcmovbe
sar
cmp
cmps
and
inc
ret
ins
rcl
jl
add
lods
xlat
push
and
jnp
add
aas
mov
lea
mov
jp
loopne
and
add
(bad)
in
popa
adc
loop
cmp
push
dec
pop
iret
stos
dec
push
int
xchg
repnz
ja
push
stos
push
mov
call
inc
and
cwde
sub
mov
(bad)
jecxz
mov
pop
inc
dec
repnz
sahf
fdiv
loope
cmps
js
in
sbb
aaa
in
dec
mov
scas
outs
adc
je
or
xor
adc
adc
int3
popa
lds
push
out
scas
cdq
dec
div
mov
and
sub
sbb
fwait
inc
xchg
adc
sahf
cwde
retf
jmp
push
xchg
div
fsubp
call
pop
in
sub
pop
in
mov
sahf
mov
in
push
das
sub
popa
aas
add
das
xor
sar
lods
daa
push
xchg
inc
mov
outs
les
sbb
pop
mov
or
pop
push
adc
fdivrp
out
and
mov
int
or
jle
aaa
fistp
shl
fdivrp
adc
mov
es
outs
aas
or
retf
out
pop
ficom
xchg
mov
xor
fucomip
xchg
pop
test
fisttp
sbb
aad
or
push
mov
or
mov
push
xor
into
call
add
ror
addr16
ins
jb
xor
mov
xor
int
push
dec
repnz
jl
jle
mov
lods
mov
out
imul
dec
iret
stos
pop
stos
(bad)
cmp
sti
mov
add
sahf
or
mov
push
fwait
rcl
mov
xchg
pop
adc
xchg
jge
adc
sbb
dec
push
cmps
sub
lahf
pop
cli
aam
aas
mov
dec
icebp
pop
cmp
aas
pop
cmps
jmp
mov
adc
cmp
xchg
in
add
jg
aam
fs
jmp
xlat
into
int
leave
or
push
jl
xchg
xchg
fidiv
out
in
stos
(bad)
or
xor
mov
int3
gs
dec
repnz
cmp
sub
adc
call
test
outs
sbb
cmp
fcomp
ins
fild
idiv
push
stc
mov
push
add
gs
mov
je
xor
jb
and
mov
in
push
pop
push
mov
clc
sbb
lock
loope
sbb
pop
lea
inc
test
ficomp
mov
pop
cmp
dec
dec
in
sbb
mov
dec
mov
call
les
lock
test
(bad)
repnz
pop
test
das
js
dec
test
jle
in
jge
push
push
jl
jnp
xor
xchg
pop
data16
scas
retf
mul
mov
and
sti
mov
mov
dec
dec
jno
retf
sub
aas
inc
out
(bad)
pop
(bad)
outs
ss
adc
dec
shl
imul
test
rcl
mov
and
and
ss
out
lods
add
push
fs
mov
cmp
(bad)
cli
retf
jae
std
jle
jo
dec
push
sub
mov
add
sahf
int3
mov
loope
sub
addr16
mov
out
dec
mov
xchg
push
xchg
lahf
mov
jmp
bt
and
das
out
mov
mov
imul
stos
das
fisub
xchg
int
das
jb
jne
bound
or
test
call
sbb
sbb
rol
sub
jg
dec
aad
jp
dec
lods
mov
addr16
(bad)
pushf
pop
in
push
cmp
(bad)
ins
pop
ss
dec
inc
jns
(bad)
mov
lahf
cmp
scas
loop
in
out
fstp
or
pop
fndisi(8087
daa
push
mov
outs
pushf
xor
cmp
in
inc
outs
mov
ret
cmp
jbe
mov
sub
xchg
sub
mov
xor
scas
mov
setb
mov
in
and
out
mov
enter
pop
dec
sahf
push
sysexit
add
inc
out
pop
and
inc
cmps
xor
lahf
lods
lods
enter
int
xor
imul
or
push
jmp
sbb
and
stos
inc
out
out
fld
and
xor
sbb
nop
aas
scas
jge
ja
mov
push
jno
dec
jae
mov
js
sbb
repz
into
xor
dec
adc
sbb
outs
scas
imul
out
mov
xchg
mov
sti
mov
scas
dec
add
adc
or
dec
fmul
dec
cli
in
test
pop
jns
js
jmp
and
xchg
mov
out
dec
cli
cmp
jge
movs
dec
push
test
dec
fsub
inc
aad
jnp
add
bswap
xchg
ret
movsx
aad
sbb
scas
and
fild
jmp
push
inc
jbe
popa
xchg
jle
adc
adc
and
daa
outs
dec
(bad)
cmc
adc
out
xchg
lods
(bad)
cld
cmp
fild
mov
imul
jbe
push
int3
in
sahf
fld
mov
test
inc
sti
pop
jg
gs
(bad)
pop
pop
test
mov
mov
lea
ficomp
inc
cli
enter
pop
or
in
sub
lahf
push
sub
fld
aas
mov
scas
aam
out
and
ds
cmc
mov
pop
dec
in
sub
lahf
lahf
ret
in
stc
rcr
scas
out
outs
jge
scas
sar
std
mov
ds
fucomi
fist
out
xchg
cmp
in
mov
cmp
pop
outs
jle
push
nop
pop
jmp
cmove
push
sub
jl
je
ins
mov
mov
out
push
push
jg
pop
in
xor
add
in
les
fcmovne
push
in
lahf
dec
inc
jnp
ror
lods
lahf
mov
ret
out
(bad)
jmp
xor
loop
push
into
jb
ficomp
mov
adc
mov
mov
mov
mov
xor
jecxz
sub
bound
pop
loope
aam
sar
std
push
mov
mov
xor
(bad)
shl
(bad)
dec
mov
cs
lods
mov
scas
mov
loopne
push
adc
dec
and
jg
mov
dec
iret
stos
mov
mov
std
dec
mov
stos
cld
sar
dec
js
(bad)
(bad)
test
push
xor
call
add
xchg
xchg
dec
pop
inc
push
ds
sbb
inc
pop
mov
fstp
mov
mov
(bad)
cmps
dec
jno
es
sub
xchg
cmp
das
dec
int3
scas
repnz
cmp
add
(bad)
shl
(bad)
repnz
cld
mov
repnz
call
inc
retf
or
mov
pop
and
or
aas
adc
pop
dec
pop
sub
outs
fdivp
fisub
adc
mov
add
out
cmp
lods
call
mov
popa
jo
jns
mul
xor
inc
lods
lea
inc
(bad)
fisttp
stos
and
sbb
lds
sbb
sbb
outs
(bad)
or
fs
movs
(bad)
cs
mov
lock
out
inc
mov
xchg
pop
xlat
cmp
pop
iret
push
aas
jmp
jo
cmps
shl
inc
iret
aam
pslld
jae
das
into
sub
retf
ins
icebp
rcr
imul
push
mov
nop
xor
mov
dec
sahf
push
lea
or
outs
movs
shl
ins
push
push
call
mov
push
push
mov
pushf
int3
jge
mov
jle
dec
xlat
mov
add
daa
in
push
inc
sub
jbe
ficomp
jo
scas
out
imul
sahf
cwde
in
add
stos
int3
sahf
imul
or
test
sbb
push
jp
pop
ins
bsr
ret
jmp
xchg
cmp
lds
sbb
(bad)
jg
lods
outs
xor
push
fucom
pop
dec
mov
inc
adc
pop
pop
sti
mov
jmp
dec
out
imul
pusha
rcr
xchg
mov
cmp
(bad)
mov
adc
xor
scas
scas
je
add
icebp
dec
mov
test
imul
add
out
aas
mov
loope
(bad)
ficom
sub
adc
sqrtps
cmp
jne
das
jo
push
aad
pop
into
test
outs
not
mov
daa
push
ds
inc
xchg
dec
xor
mov
iret
loop
retf
push
push
and
cmp
cld
jo
mov
pushf
jge
mov
mov
cli
or
and
dec
dec
ret
or
(bad)
xchg
push
jae
sbb
xchg
mov
or
int
inc
xor
mov
pop
aas
mov
jge
scas
(bad)
clc
mov
pushf
jnp
jmp
push
mov
sub
int
mov
popf
retf
in
(bad)
ins
leave
pop
push
jae
jecxz
loop
rcr
dec
call
sub
and
fidiv
das
dec
adc
push
fld
test
leave
sub
jne
add
jno
cwde
out
push
lods
in
cli
mov
fcom
iret
jecxz
mov
dec
or
or
fist
lods
jge
sar
out
test
sar
inc
cmp
test
mov
scas
neg
test
scas
pushf
adc
pop
setg
call
sbb
and
sub
xor
cdq
je
push
push
pop
jmp
(bad)
scas
jmp
dec
or
into
into
sbb
dec
lods
mov
das
cwde
dec
pop
outs
sub
das
bound
pop
mov
retf
stos
call
add
(bad)
ds
cmp
cmps
add
pusha
inc
mov
jbe
into
dec
cdq
pop
dec
dec
mov
fist
push
fisubr
ja
sbb
inc
sbb
jo
inc
leave
test
repnz
mov
jo
sbb
aad
fistp
lahf
into
jle
in
mov
sar
jnp
stos
pop
lds
test
xchg
inc
ins
iret
push
pop
dec
jl
jmp
pop
and
xchg
mov
and
push
pop
jl
bnd
aaa
scas
sbb
inc
clc
into
mov
jno
in
pop
scas
aas
push
fnsave
cmp
cwde
jmp
js
adc
fidivr
ss
jle
fimul
sub
mov
sub
sbb
cs
mov
jecxz
inc
outs
xlat
mov
jle
retf
cs
mov
imul
jge
ds
iret
jg
addr16
jg
leave
call
xor
out
int3
xchg
sbb
xchg
aad
clc
push
int3
stc
in
(bad)
stos
mov
mov
mov
mov
inc
scas
mov
inc
add
pop
movs
stos
jo
mov
xor
iret
jle
bound
jmp
push
add
ja
dec
xchg
scas
loop
rol
dec
push
mov
and
idiv
or
(bad)
cmp
mov
inc
es
sbb
das
fcmovnu
xchg
lea
outs
stos
mov
jl
push
lea
or
dec
pop
sub
pop
pop
and
push
mov
jo
retf
stos
sti
jbe
cmp
mov
shr
psubw
push
enter
and
dec
ins
mov
aas
cld
sub
inc
out
add
pop
jno
sbb
mov
lods
outs
lds
std
jb
pusha
cmp
mov
sub
push
pop
cmp
add
enter
arpl
xchg
mov
cmp
adc
push
outs
pop
jns
mov
fisubr
jecxz
sub
xchg
cld
in
inc
push
(bad)
xor
pop
xor
xor
adc
adc
rol
mov
dec
loop
xor
aas
sub
dec
or
clc
stc
aam
fcomp
sub
cmp
sub
(bad)
mov
cmp
pop
adc
jmp
mov
mov
cmps
mov
jle
mov
stos
je
mov
(bad)
jle
(bad)
sar
dec
sar
jns
dec
xchg
adc
ins
cmp
out
jg
(bad)
outs
int3
push
out
mov
pop
(bad)
(bad)
(bad)
jp
leave
jle
xchg
adc
iret
cs
jle
dec
mov
jno
dec
sahf
mov
sub
sbb
pop
mov
pop
push
jno
pushf
out
inc
push
test
lods
int
jge
or
pop
dec
ficom
std
fadd
int3
addr16
push
ret
jns
(bad)
jle
out
mov
pop
cs
outs
xor
or
or
(bad)
lea
into
out
in
dec
ret
mov
and
int3
cwde
shl
cmp
jmp
cmps
push
jg
mov
in
mov
inc
fsub
push
inc
into
or
push
(bad)
mov
leave
(bad)
mov
stos
add
les
addr16
push
sbb
xchg
xor
pop
dec
xchg
ror
mov
nop
mov
std
clc
jp
xor
mov
push
xchg
(bad)
mov
movs
pop
arpl
sbb
cmp
sub
mov
fcmovne
jns
or
lahf
cmp
scas
aaa
scas
dec
jne
daa
cs
(bad)
aas
add
lahf
dec
xchg
or
pop
retf
iret
push
popa
xchg
sbb
pop
test
pop
outs
or
xchg
or
sbb
cli
or
lock
js
push
scas
dec
jmp
pop
scas
movs
pop
aas
xor
movs
int
inc
lea
ficomp
int3
push
(bad)
and
mov
push
mov
fisttp
inc
or
pop
mov
and
xor
lock
push
push
inc
push
mov
aam
push
cld
xchg
mov
cmp
jl
sti
ins
stc
ins
sub
jns
pop
push
shl
sbb
outs
in
push
out
das
fistp
mov
cmp
jo
(bad)
fisttp
(bad)
cmp
popa
pop
push
pop
fadd
stos
ds
and
fild
scas
dec
mov
dec
pop
std
sub
or
cmps
daa
nop
out
(bad)
mov
enter
xor
mov
push
pop
(bad)
xchg
mov
fisttp
lods
jb
imul
loop
stos
adc
out
or
test
adc
mov
or
call
xor
dec
sbb
in
push
push
jb
mov
and
xor
jecxz
lahf
lods
das
data16
das
xchg
dec
push
push
je
push
inc
mov
shl
fwait
call
cmp
std
rcr
outs
mov
outs
retf
(bad)
out
cs
cmps
test
sub
mov
out
(bad)
push
(bad)
addr16
mov
leave
sar
std
outs
nop
mov
fcomp
lods
add
push
push
pop
push
cli
retf
or
es
or
xchg
movs
fadd
adc
(bad)
out
retf
iret
test
cld
push
push
shr
outs
aaa
in
scas
ss
push
xchg
push
nop
dec
cmps
ins
xchg
outs
cmc
rol
and
pop
add
dec
and
push
cmps
inc
inc
xchg
and
mov
arpl
scas
mov
aaa
sbb
cmp
mov
mov
fistp
mov
ins
mov
shr
popf
or
mov
push
jecxz
jnp
test
push
xor
push
mov
call
jmp
inc
test
mov
pop
popf
test
lods
sbb
fidivr
sahf
jg
sbb
inc
mov
push
cld
arpl
dec
push
mov
js
mov
(bad)
mov
test
jmp
mov
out
and
je
push
jg
lds
cli
pop
rcr
rcr
(bad)
aas
mov
jmp
cmp
lods
aas
mov
mov
fnstcw
sar
call
cmps
mov
push
jbe
pop
in
lock
pop
dec
je
inc
lods
mov
pop
cmp
pop
mov
mov
jno
or
mov
dec
into
stos
jne
mov
push
pop
dec
mov
xchg
(bad)
stc
xchg
inc
icebp
xlat
push
pop
out
call
sti
fiadd
pop
pop
scas
push
sbb
mov
repnz
data16
scas
in
mov
cwde
ret
clc
mov
inc
push
mov
hlt
push
dec
inc
dec
lahf
jmp
outs
dec
test
cmps
lea
add
pop
jnp
int
cld
(bad)
out
fidivr
xor
mov
and
lea
jb
scas
sub
push
xchg
push
in
and
sbb
xor
out
or
xchg
cmp
inc
int3
or
test
pop
push
sbb
mov
mov
and
ret
das
dec
mov
add
dec
cmps
out
or
je
cmovns
add
push
xchg
mov
int
das
mov
shl
sub
mov
pop
ficom
dec
out
dec
outs
mov
mov
test
fnsave
dec
(bad)
lds
push
in
jl
es
js
pop
jb
inc
push
into
xor
jle
push
add
call
neg
mov
mov
sbb
add
ror
adc
outs
mov
jle
int3
call
mov
(bad)
out
mov
stc
ficom
sbb
mov
jbe
das
mov
dec
ror
sbb
or
or
hlt
das
jmp
dec
add
nop
dec
in
clc
pop
cmp
xchg
inc
fnstsw
in
jbe
push
sub
inc
sbb
push
xchg
sub
ss
lods
mov
fwait
scas
es
cli
in
mov
inc
push
idiv
sahf
dec
fcomp
mov
sub
div
sub
mov
psubw
rcr
dec
jp
sahf
xlat
aam
push
xor
sbb
(bad)
pop
das
outs
int3
ja
scas
xor
sahf
popf
dec
gs
jg
out
bswap
test
dec
or
and
jb
mov
cmp
popa
leave
xchg
cs
pop
idiv
pop
xchg
in
adc
xor
test
outs
sub
mov
into
xor
not
jbe
dec
repz
adc
inc
xchg
outs
int3
ret
scas
mov
and
cs
hlt
data16
pop
jno
jg
push
sub
adc
lock
dec
dec
jg
mov
lahf
int3
dec
in
adc
cmc
ficom
sub
mov
loope
outs
outs
pop
xchg
sbb
aaa
neg
sbb
and
enter
jae
pop
inc
(bad)
fnstcw
jge
push
cld
test
fistp
xor
inc
sbb
mov
push
adc
dec
sar
push
or
add
jbe
mov
xchg
pop
xlat
jle
fimul
jo
jp
xor
dec
sub
sbb
idiv
aas
mov
in
ins
and
pop
lods
or
add
pop
mul
or
mov
mov
xor
jge
jns
sub
retf
je
das
push
push
cmp
(bad)
scas
dec
cmps
sbb
jle
sub
mov
mov
movs
aaa
xor
sahf
scas
ja
mov
in
push
sub
cli
iret
test
push
test
in
push
mov
inc
sub
or
push
iret
cmp
xor
adc
dec
test
adc
out
scas
(bad)
pop
mov
fwait
cdq
js
and
inc
aam
out
ret
imul
jnp
dec
sbb
xlat
in
test
mov
aas
lods
stc
xor
retf
pop
ins
in
int
push
sub
dec
sub
push
sub
js
jge
(bad)
xchg
mov
add
in
xlat
pop
sub
inc
mov
sub
pop
(bad)
sub
inc
pop
mov
sbb
xor
mov
pop
call
or
enter
cli
pop
pop
pop
fwait
ins
xchg
pop
inc
enter
mov
cmp
fldenv
lock
jg
add
xor
or
lahf
out
mov
jle
enter
mov
push
int
fmul
pop
dec
je
mov
mov
icebp
cmps
cmps
xor
lods
lahf
jno
add
and
idiv
xor
or
inc
bound
stc
xor
sahf
mov
jecxz
enter
dec
cmps
cmp
cmp
or
mov
cmps
sbb
scas
sbb
popf
popf
cmps
iret
fsub
pop
pusha
add
mov
mov
(bad)
sbb
push
sti
aaa
pop
xchg
idiv
in
inc
call
retf
inc
movs
push
xor
add
mov
or
rol
(bad)
mov
push
pop
out
loop
add
mov
mov
(bad)
cmp
lock
in
test
xchg
mov
xor
sub
mov
jl
aad
enter
pop
aas
js
and
bound
jb
jg
fidivr
and
(bad)
fild
(bad)
hlt
lock
mov
push
push
das
adc
popf
gs
call
cmp
push
lea
jmp
sahf
pop
aas
mov
jle
sub
push
ss
in
mov
(bad)
mov
icebp
das
fisubr
mov
add
aaa
cli
aad
mov
push
sbb
iret
jmp
dec
xor
sbb
pop
lods
(bad)
rcr
in
popf
ins
scas
mov
out
das
and
cmp
xor
dec
push
test
mov
nop
mov
mov
xchg
stos
test
xlat
jbe
out
pop
imul
fistp
dec
cmp
jo
call
popa
inc
int
ss
stc
in
aas
loopne
out
cmps
dec
lahf
(bad)
(bad)
fistp
jg
sub
cmp
sub
mov
dec
(bad)
pop
jle
movd
sub
mov
cmp
ficomp
out
sahf
mov
sahf
mov
out
lods
into
jnp
mov
(bad)
(bad)
fwait
inc
scas
(bad)
mov
mov
les
pop
mov
movs
jl
sbb
into
push
and
addr16
inc
loop
push
sbb
jp
gs
mov
outs
or
and
jl
das
lods
scas
mov
fnstsw
xchg
out
jecxz
mov
leave
mov
add
out
test
scas
jle
and
cld
in
ins
mov
out
sub
sahf
ficomp
pusha
aas
fldenv
inc
and
leave
jno
js
popf
mov
dec
jecxz
adc
or
cs
dec
jne
rol
mov
movs
scas
test
mov
sti
jne
push
mov
add
lea
xchg
test
pop
sub
push
les
call
jbe
adc
mov
cwde
cld
imul
movs
ins
cmp
ret
jbe
int3
jno
pop
adc
or
inc
cs
inc
pop
mov
call
dec
sub
ficom
pop
sbb
mov
dec
mov
mov
sub
push
in
push
cmp
adc
(bad)
cmp
fsubp
imul
std
in
xlat
jp
mov
sbb
and
leave
dec
dec
jle
loop
call
xor
jmp
mov
ss
out
push
pop
inc
mov
dec
pushf
lds
scas
pshufw
loope
out
mov
jg
push
and
clc
dec
xor
mov
push
and
ret
inc
scas
jg
call
dec
outs
sbb
loopne
ds
push
or
icebp
adc
mov
xchg
jmp
sbb
cmp
pop
outs
pop
dec
sbb
jno
or
jnp
stos
adc
popf
fisub
or
fbld
add
dec
fiadd
cmp
sbb
push
lods
idiv
fs
xor
mov
mov
xor
mov
std
sbb
jp
out
jp
dec
ds
cmp
jl
mov
mov
fnstenv
and
aad
or
stc
imul
out
dec
mov
xchg
xchg
enter
int
push
out
cld
mov
inc
push
jbe
push
xor
scas
cmp
push
pop
mov
data16
iret
out
mov
ins
push
or
movs
or
sbb
pop
sbb
cs
mov
jmp
int
rcr
cmp
push
push
lahf
jge
aas
jle
dec
jbe
scas
lea
mov
hlt
dec
jecxz
mov
scas
add
push
out
cmp
sbb
outs
or
ja
pop
sbb
push
inc
sbb
pop
lds
mov
test
pop
mov
cdq
fldcw
xchg
std
shr
dec
sub
cs
rcr
das
lods
dec
mov
or
dec
inc
std
fucomip
(bad)
popf
pop
shl
mov
outs
mov
in
sub
mov
into
leave
rol
jbe
popa
shr
push
imul
pop
int
xlat
mov
mov
iret
or
lods
sub
(bad)
rcl
adc
scas
pop
pop
push
movs
mov
imul
inc
scas
sahf
mov
pop
mov
icebp
or
lods
pop
scas
push
sbb
inc
pop
adc
jg
ds
jle
bound
ds
into
jno
push
adc
imul
adc
aaa
xchg
add
addr16
(bad)
clc
pop
movs
mov
repnz
cmp
fidivr
dec
dec
push
aaa
lods
xchg
sahf
lods
xchg
pop
rcr
aam
out
lds
dec
in
jmp
mov
or
fistp
add
inc
inc
ret
(bad)
and
or
xchg
mov
mov
movs
jmp
aas
sub
cwde
mov
cld
rol
imul
test
jle
jge
out
jle
jmp
push
inc
cs
xchg
sbb
pop
inc
jne
ins
js
arpl
(bad)
in
fsub
daa
fiadd
inc
jg
imul
push
sub
inc
jle
jge
xchg
sahf
ja
into
sbb
in
int
aad
and
jl
(bad)
cmp
lahf
das
inc
ja
scas
ret
mov
dec
add
xchg
add
inc
aam
and
into
(bad)
out
cli
pusha
or
push
sub
pop
out
mov
mov
imul
out
and
into
dec
int3
jno
iret
dec
aas
clc
cmp
sub
pop
mov
xchg
out
(bad)
fist
daa
cvtps2pi
mov
jge
dec
push
push
mov
and
cmps
fild
pop
dec
push
rcr
in
stos
ins
cmc
(bad)
mov
fbstp
or
mov
inc
dec
or
call
sbb
xlat
sti
sub
pop
add
and
fwait
xor
rcr
outs
ins
and
inc
jmp
push
cwde
mov
inc
outs
and
sub
imul
add
icebp
mov
xchg
out
icebp
mov
scas
imul
mov
addr16
add
push
cs
sub
lahf
test
call
mov
outs
stos
pop
adc
mov
jno
les
fcomp
and
jb
fistp
sbb
inc
jle
pop
mov
rcl
(bad)
jns
(bad)
neg
sbb
sahf
sub
or
pop
ficom
mov
(bad)
imul
pop
fs
jge
outs
adc
ror
call
js
call
cwde
movs
ss
jg
repnz
dec
enter
push
lock
lahf
pop
or
(bad)
lahf
mov
std
(bad)
cld
lods
push
xor
jmp
out
cmp
push
push
jg
repz
sbb
sti
scas
mov
iret
add
clc
inc
mov
imul
mov
jg
jbe
xor
cmp
xchg
xchg
and
adc
pop
jg
cld
inc
std
out
or
ins
sti
sub
and
gs
out
outs
cdq
push
mov
push
in
sbb
loop
out
out
or
int3
retf
jns
out
stc
fmul
jmp
scas
je
mov
push
pusha
xchg
or
scas
cmp
or
iret
or
adc
std
sbb
aas
loope
aas
cmp
mov
(bad)
adc
mov
pop
int
mov
adc
mov
mov
stc
js
inc
xchg
stc
cmp
dec
(bad)
(bad)
mov
inc
(bad)
out
lods
xchg
xlat
xor
dec
pop
pop
mov
ds
scas
in
pop
loopne
in
push
jecxz
mov
xchg
call
enter
fsubr
out
pushf
pop
pop
sub
mov
aad
fsubr
cli
rcr
test
das
loopne
aas
sbb
outs
dec
cmps
int3
mov
mov
ror
inc
loop
mov
cmps
sub
push
icebp
jns
dec
sbb
aam
scas
(bad)
sub
mov
test
scas
(bad)
mov
add
xor
pushf
inc
inc
gs
fisubr
push
ret
fistp
jns
jnp
push
ficom
inc
ds
(bad)
dec
loopne
dec
out
mov
(bad)
(bad)
(bad)
pop
xor
sbb
les
mov
mov
mov
jbe
push
test
xchg
cmp
into
mov
mov
mov
std
dec
xchg
pusha
xor
jno
xor
jb
fistp
cs
loopne
(bad)
jle
lods
jmp
out
(bad)
jmp
pop
pop
sbb
out
in
push
addr16
push
in
stc
cwde
rcr
push
xor
mov
retf
sub
xor
iret
push
mov
es
sbb
movs
jg
cli
push
cs
adc
xchg
scas
sbb
(bad)
push
or
push
jl
pop
loope
jmp
dec
or
das
pop
inc
push
jae
cli
scas
cmc
jg
test
jmp
ret
pop
test
xor
mov
ins
ds
sar
mov
or
pop
pop
into
jl
out
aam
sub
cmp
inc
adc
aam
mov
and
and
dec
int3
(bad)
pop
mov
mov
ins
call
aaa
outs
aaa
or
movs
mov
jns
mov
retf
pop
fmulp
pop
mov
inc
pop
ud0
pop
mov
icebp
js
mov
out
pusha
loope
pop
(bad)
es
mov
mov
xor
or
dec
and
jg
daa
scas
push
inc
inc
or
pop
cmp
pop
adc
jp
out
or
and
test
aas
dec
mov
imul
mov
sbb
mov
das
pop
mov
mov
mov
rcl
inc
je
out
and
jmp
jo
std
aam
das
jle
mov
inc
scas
mov
iret
std
sub
out
or
shl
test
jb
mov
jb
mov
dec
or
jo
push
or
mov
loop
cli
sti
mov
sti
xor
out
popf
into
inc
adc
shl
scas
add
je
aas
or
mov
xchg
pushf
xchg
shl
in
fnstcw
arpl
(bad)
mov
(bad)
and
outs
je
ss
push
std
mov
sahf
and
add
mov
xchg
push
je
test
addr16
scas
xchg
lahf
xchg
sub
add
or
das
shr
int3
dec
mov
pop
scas
stos
test
icebp
adc
dec
lahf
out
test
dec
icebp
shl
stos
jge
dec
cdq
ja
and
jle
movs
shr
dec
pop
in
xchg
addr16
cs
fcomp
jecxz
hlt
xchg
push
(bad)
dec
mov
outs
mov
pop
outs
lock
pop
xchg
ret
dec
ficom
inc
cs
scas
push
pop
mov
stos
cmps
leave
mov
fisubr
push
mov
das
mov
addr16
adc
fild
cli
cmp
inc
out
sar
ins
int
sbb
in
mov
lds
daa
pop
sbb
aaa
xor
jg
aaa
and
pop
int
sbb
out
in
in
push
mov
add
xlat
shrd
and
sub
in
(bad)
loop
cmp
push
rcl
ror
ds
(bad)
jp
test
(bad)
ds
jae
cmp
cmps
dec
imul
std
popf
in
sahf
nop
dec
sbb
daa
sub
iret
(bad)
mov
xchg
dec
data16
arpl
xchg
dec
adc
in
out
mov
movntps
out
inc
xor
or
inc
test
adc
inc
addr16
mov
mov
cmp
adc
xlat
es
cmp
arpl
pop
add
cmp
cli
lahf
xchg
sub
aas
ret
pop
mov
dec
(bad)
pop
add
jge
pusha
hlt
fcom
sbb
sub
in
pop
into
cld
in
call
mov
mov
jae
dec
outs
aas
(bad)
xor
jg
adc
cwde
push
mov
dec
test
jo
aas
cwde
(bad)
(bad)
outs
retf
push
xchg
call
sbb
pop
pop
out
psubb
push
mov
add
ins
push
loope
out
lock
sub
out
mov
sahf
jg
enter
pop
push
outs
outs
pop
pop
shr
outs
aad
outs
inc
jmp
sar
stos
jne
imul
mov
cmc
js
jge
xchg
jns
mov
sti
push
mov
pop
sbb
push
xchg
mov
test
out
mov
movs
outs
sbb
lods
int3
mov
sahf
fstp
fmulp
div
mov
and
into
cld
mov
adc
sub
lds
inc
xchg
scas
jg
xchg
pop
test
and
loopne
xor
adc
cwde
mov
lock
arpl
popf
fdiv
das
popa
mov
ins
push
dec
sub
ss
jle
pushf
dec
push
lods
leave
stos
pop
lds
into
mov
or
sub
dec
pop
xor
into
stc
jl
out
dec
adc
ja
scas
or
into
call
xlat
ins
push
outs
popf
or
imul
int3
inc
push
mov
pop
cmp
sub
inc
cli
or
imul
mov
outs
(bad)
retf
int3
mov
in
(bad)
sahf
mov
pop
push
mov
mov
popa
mov
in
sub
or
dec
mov
jno
inc
dec
mov
ja
(bad)
push
xchg
scas
cmp
jle
xchg
mov
repz
retf
test
dec
rol
imul
add
mov
addr16
dec
iret
dec
dec
sub
or
fistp
push
dec
(bad)
out
(bad)
data16
popf
sbb
scas
movs
cmp
out
cmps
dec
cmp
dec
lods
dec
mov
jl
jp
xchg
dec
xor
icebp
rcr
je
adc
daa
js
test
js
js
pop
sub
mov
call
pop
push
cmp
in
out
xor
push
jmp
scas
xor
xchg
inc
out
sub
inc
mov
fcmove
pop
enter
cdq
mov
icebp
cmps
jo
xchg
pop
add
pop
cmp
fdiv
mov
test
scas
fnstenv
das
mov
xchg
cmp
arpl
lock
jne
pop
pushf
jno
mov
(bad)
ins
mov
iret
or
psrad
dec
popf
loope
adc
cs
cwde
cld
arpl
outs
jge
jns
cmps
cdq
mov
in
pop
scas
dec
pop
jge
xor
cmp
cmp
loop
shr
push
jp
fs
sbb
das
mov
pop
cmp
jbe
inc
lea
mov
fdivp
iret
push
ds
fwait
or
jl
pop
or
fidiv
int
dec
stos
fdivr
adc
and
loop
add
adc
sub
dec
pop
data16
ret
and
out
stos
xchg
mov
jle
sahf
add
mov
aas
into
les
pop
sbb
inc
dec
mov
sbb
ins
mov
mov
shr
mov
iret
push
addr16
push
in
adc
cmp
ss
je
pop
lods
jmp
ins
inc
cs
cmp
into
test
(bad)
mov
mov
je
cld
jno
in
mov
mov
iret
sahf
dec
push
das
cmp
out
or
call
dec
pop
mov
lods
sub
ror
mov
(bad)
and
dec
dec
scas
sbb
std
push
das
dec
xchg
inc
cwde
ds
int3
rcl
nop
out
jo
in
xchg
sbb
fidivr
mov
or
add
inc
push
cs
cdq
inc
or
fcom
add
cwde
(bad)
cmp
mov
nop
push
sti
pop
imul
lods
int
test
data16
aaa
in
push
xor
push
cld
cmp
mov
jg
adc
jg
mov
fdivr
fdivp
aas
sub
push
pop
pushf
fsub
dec
sti
out
in
sbb
cwde
fiadd
xchg
por
movs
aaa
ret
int
push
ret
hlt
sbb
add
arpl
test
adc
push
mov
jb
jnp
sub
imul
push
ss
iret
xchg
and
movs
mov
cmps
push
js
ja
inc
push
jbe
fstp
mov
and
xchg
loop
popa
aad
mov
das
scas
jno
pop
pop
and
or
jl
(bad)
out
outs
ins
aam
fmul
sub
int
dec
addr16
scas
imul
pop
jle
hlt
pop
test
push
aam
xor
fsubr
out
movs
aas
iret
mov
leave
push
inc
and
stc
es
mov
out
(bad)
in
xor
sbb
fcmovne
ins
je
lahf
cld
mov
pop
bound
mov
or
pop
es
aas
mov
xchg
push
cmp
dec
ja
ret
push
addr16
nop
mov
or
lods
fisttp
pushf
pop
(bad)
inc
sub
dec
iret
push
jae
popf
cmps
xor
sar
aam
cs
ja
add
cmps
pop
cmp
retf
lahf
mov
lds
jle
je
sbb
scas
sub
adc
sbb
mov
mov
call
int3
leave
fimul
mov
stc
pop
dec
(bad)
jl
mov
in
mov
sahf
xor
popf
out
dec
inc
test
sub
cmps
dec
xchg
push
pop
jmp
ret
scas
mov
mov
adc
scas
outs
push
inc
lea
or
dec
pop
pop
lock
stos
xchg
xchg
mov
out
cmp
pop
jmp
ins
mov
or
into
addr16
je
push
pop
outs
sub
test
cmp
mov
add
cmc
pop
inc
test
dec
pop
mov
push
in
adc
addr16
cmps
pushf
mov
pop
mov
mov
loopne
pusha
dec
stc
jbe
sbb
call
xchg
inc
movs
cmp
mov
mov
or
push
stc
popa
and
mov
mov
cmp
(bad)
sub
fmul
pop
and
fsub
in
push
add
and
xlat
jle
retf
out
jbe
mov
jp
xor
jnp
jecxz
dec
pop
mov
rol
stos
ds
scas
shr
mov
aad
pop
aaa
cmps
call
jecxz
pop
and
loope
iret
(bad)
bound
(bad)
out
or
scas
sahf
mov
inc
test
fisttp
sub
push
loope
inc
(bad)
fmulp
dec
inc
iret
imul
outs
sbb
xchg
sbb
jae
icebp
push
jne
mov
add
rcr
adc
mov
jecxz
xchg
mov
cmps
dec
out
(bad)
jp
scas
add
mov
ja
jno
mov
cmc
xlat
add
or
lahf
inc
test
fcomip
jge
jnp
pop
inc
gs
pop
mov
mov
xchg
outs
mov
push
dec
mov
add
push
test
js
inc
sub
adc
lock
test
in
lods
xor
int
out
sub
sbb
sbb
adc
jmp
cld
sar
jecxz
je
pop
pop
pop
out
sub
or
jnp
adc
js
mov
shl
jne
retf
int3
inc
pop
ins
push
or
push
jne
and
loopne
lods
pop
inc
mov
inc
xchg
in
neg
or
(bad)
push
ret
clc
pop
pusha
idiv
add
fmul
pushf
or
popf
lahf
push
shl
outs
(bad)
mov
(bad)
xchg
mov
push
jns
mov
xchg
mov
xchg
stos
push
inc
jnp
dec
fidivr
sbb
call
into
cmps
jl
cld
ds
mov
mov
inc
sbb
int3
xor
push
sub
or
xor
push
(bad)
jg
cmp
sahf
or
fsub
dec
aas
dec
pop
ss
test
(bad)
xchg
stos
pop
xor
pop
bound
push
mov
arpl
xor
js
mov
int
aam
dec
jno
shl
mov
pop
lock
pop
sub
in
mov
xchg
int
or
ficomp
jo
ins
or
jb
xchg
cmovo
(bad)
lds
sahf
xchg
jnp
push
mov
lea
mov
cmp
sbb
out
push
stos
call
pop
ret
cmps
push
(bad)
test
test
(bad)
mov
iret
adc
mov
std
leave
push
cmc
cmp
pop
xchg
cmp
adc
rcr
mov
lods
xchg
inc
sbb
mov
aam
or
ja
mov
stos
retf
lahf
sub
ds
into
fucomp
cmc
(bad)
int
or
jge
push
outs
test
push
sub
jp
or
dec
in
nop
aas
repz
sbb
jne
sub
mov
inc
push
adc
lods
call
fisttp
xchg
push
addr16
or
(bad)
scas
daa
pop
dec
or
and
lea
(bad)
and
push
mov
push
sub
stc
sbb
scas
out
int3
or
inc
adc
(bad)
outs
(bad)
repz
dec
pop
xchg
dec
scas
retf
sbb
mov
int3
je
mov
mov
sbb
sub
mov
pop
sahf
mov
aas
push
icebp
ins
pop
inc
aas
retf
aas
mov
and
out
sahf
int3
dec
icebp
mov
dec
dec
inc
inc
cmp
aas
dec
jne
sti
leave
push
jae
into
push
scas
fisub
cli
sub
(bad)
fisttp
loopne
dec
fwait
dec
jecxz
pop
inc
mov
jg
out
push
pop
cdq
mov
inc
cmp
bound
mov
and
outs
add
add
pop
test
cmp
jg
fidivr
into
push
xchg
into
cmp
xchg
repz
jge
out
outs
adc
pop
jp
jns
(bad)
rcr
cmp
jnp
mov
fcomip
jbe
jns
add
or
cmps
ds
data16
and
sbb
clc
scas
(bad)
out
out
and
jge
sbb
cld
jge
sbb
scas
jge
call
mov
push
iret
jle
lods
jbe
sar
pop
dec
addr16
ret
test
iret
mov
sbb
or
out
lods
pop
outs
push
sbb
or
test
xor
scas
dec
push
xchg
jge
mov
int
push
loop
xor
xchg
push
pop
xchg
popa
stos
in
outs
cmp
mov
clc
fild
mov
sub
or
loope
mov
(bad)
sbb
lahf
cmps
and
(bad)
sub
pop
(bad)
push
sub
cs
addr16
xor
ins
aam
(bad)
adc
jno
int
into
or
lods
add
pop
aaa
jo
or
pop
je
into
cdq
loop
or
mov
fidiv
in
add
jae
cmp
or
outs
mov
sub
popa
or
fiadd
ficom
retf
dec
inc
scas
sub
jbe
dec
fcomp
and
fstp
aam
shr
out
out
xor
add
add
or
mov
ror
pushf
mov
dec
and
aaa
popf
(bad)
stc
xor
fwait
pop
nop
iret
xor
jmp
ja
mov
into
mov
mov
cmp
add
sbb
cs
mov
popa
clc
scas
pop
aas
lock
outs
sti
mov
dec
out
adc
and
outs
les
push
aaa
pop
scas
into
retf
into
int3
enter
adc
stc
ins
inc
sbb
mov
mov
cdq
mov
(bad)
stos
sti
jecxz
fdivr
in
pop
sbb
dec
(bad)
xchg
inc
push
bound
mov
inc
jecxz
mov
cs
sub
sub
dec
fiadd
mov
jmp
test
xchg
das
out
jecxz
inc
pop
mov
push
scas
gs
movs
cmc
mov
mov
(bad)
fiadd
cwde
mul
addr16
loop
and
or
cdq
ins
pop
xor
outs
push
fcom
pop
cmp
out
fdivp
adc
inc
mov
nop
push
mov
aas
arpl
xchg
sbb
pusha
mov
setae
xor
dec
push
jo
or
cmps
out
or
sub
mov
loopne
leave
inc
and
loop
scas
cdq
les
pop
aaa
add
popf
xor
mov
or
lahf
movs
dec
into
fucomip
pusha
xchg
or
es
jno
jo
sbb
mov
iret
(bad)
xor
sti
imul
dec
aas
add
adc
mov
mov
pushf
das
dec
fwait
daa
stc
pop
sar
popf
gs
outs
jg
push
mov
push
fild
mov
test
retf
ss
and
or
out
pop
pushf
xlat
sub
push
outs
dec
stos
nop
test
cmp
xchg
faddp
aam
loopne
fcomp
repnz
push
cmp
fisub
jnp
cmp
lods
bswap
mov
cmp
sar
(bad)
rol
jle
into
sbb
jle
fstp
jb
clc
or
dec
jae
punpckhwd
and
or
aaa
jnp
xchg
ficom
iret
pusha
xchg
scas
call
mov
iret
out
js
push
jmp
pop
pop
mov
xchg
mov
call
dec
sbb
xor
xchg
dec
push
(bad)
outs
or
adc
bound
cmovbe
add
stc
ficomp
dec
dec
daa
dec
mov
dec
adc
cmp
sbb
lods
(bad)
retf
das
push
pop
jnp
inc
loope
xchg
mov
test
sti
dec
dec
mov
push
or
test
jns
les
pushf
jmp
push
or
dec
xchg
leave
mov
jge
mov
push
push
js
jg
mov
dec
push
outs
call
idiv
dec
or
pop
(bad)
jnp
mov
xchg
pop
lahf
sub
jg
iret
xchg
fcmovnbe
test
inc
push
outs
fld
lods
lahf
es
bound
js
ins
jle
dec
or
push
mov
inc
mov
(bad)
sub
loop
and
sub
sub
pop
add
bts
idiv
imul
out
fbstp
pop
or
repz
sti
jmp
lea
mov
sbb
imul
dec
mov
dec
das
js
fiadd
mov
xchg
(bad)
sub
das
xchg
out
push
mov
jnp
dec
(bad)
mov
or
lahf
cmp
xlat
clc
pop
iret
sbb
ret
mov
dec
fnsave
inc
mov
int
pushf
pop
fucomi
push
iret
sub
std
imul
cmp
in
into
jmp
or
daa
inc
or
in
or
data16
lahf
fucomp
sub
xchg
mov
stc
cmps
xor
std
sar
mov
fimul
jmp
int3
dec
pushf
pop
scas
push
ds
dec
popf
std
das
push
pop
scas
or
xor
ins
cmp
outs
jge
inc
jae
mov
or
push
cmc
in
fucomip
lds
pop
mov
add
dec
dec
push
inc
mov
or
scas
dec
fadd
mov
mov
xchg
shr
cmp
sub
setns
scas
ja
dec
cdq
mov
dec
sbb
repz
into
jb
das
(bad)
and
jg
cmp
jmp
mov
sub
and
stc
or
cmp
ds
jo
or
lds
mov
push
int
xchg
fisttp
mov
pusha
inc
iret
and
pop
pop
push
mov
ins
int3
enter
jmp
sub
jmp
jp
pop
jg
dec
push
inc
(bad)
sar
aas
jae
outs
jno
hlt
pop
mul
xor
lods
es
dec
mov
(bad)
pop
jbe
adc
sub
mov
mov
test
(bad)
push
xor
hlt
mov
out
add
outs
xchg
mov
lahf
cmp
inc
fdivr
mov
scas
ds
xor
lea
mov
mov
dec
fwait
out
aaa
in
push
retf
jmp
xchg
xor
ss
aaa
mov
push
push
mov
imul
int
sub
pop
xchg
(bad)
xchg
pop
das
add
addr16
in
cs
sub
int
(bad)
mov
ret
retf
or
push
xor
mov
sbb
xchg
mov
pop
cmp
cs
and
ficomp
sti
fs
pop
dec
xor
(bad)
pop
(bad)
out
jp
out
into
adc
mov
push
pop
dec
cmp
pushf
je
lahf
mov
sahf
stc
aam
dec
or
mov
bound
mov
repz
aaa
addr16
pop
cmp
stos
push
(bad)
cmc
or
loopne
mov
or
imul
mov
push
retf
repnz
scas
outs
shl
test
ja
ins
idiv
push
and
outs
jl
pop
ret
mov
pop
out
pcmpeqd
ficom
cmp
rcr
pop
push
(bad)
movs
jmp
dec
dec
std
xchg
fisubr
push
mov
stc
fiadd
pusha
in
dec
scas
dec
sub
mov
sbb
ret
scas
pop
xlat
(bad)
loope
into
cmp
mov
mov
rol
xor
cdq
jmp
fistp
mov
enter
je
repz
stos
aas
pop
out
jb
xchg
out
pusha
mov
test
mov
in
and
or
mov
jl
cmp
push
jle
dec
and
bound
pop
push
inc
xchg
stos
imul
jae
ror
jl
pop
pop
retf
aas
popf
inc
jge
stc
mov
out
mov
scas
das
scas
push
mov
stc
jg
(bad)
pop
pushf
push
out
mov
push
xor
lods
lods
mov
dec
fnsave
adc
jle
mov
pop
(bad)
jae
jl
push
jecxz
or
test
mov
lahf
cmp
jbe
aas
sbb
sar
(bad)
or
movs
mov
je
jg
in
stos
adc
add
mov
lock
scas
ss
arpl
sbb
and
dec
retf
sbb
or
dec
and
(bad)
outs
lods
movs
dec
in
jmp
shl
test
cs
mov
aas
pop
dec
sbb
sbb
jo
xchg
dec
out
out
add
add
mov
mov
shl
fwait
retf
fcomi
pop
push
ins
jl
push
test
push
xor
ret
mov
das
sub
js
sar
push
popa
cmp
fucompp
and
sbb
or
or
bound
pop
pusha
add
mov
mov
sbb
shr
imul
ret
cmp
cli
cmp
and
cmp
lods
pop
out
arpl
imul
enter
das
cmp
(bad)
lods
or
neg
add
je
mov
sub
in
mov
pop
push
mov
call
xchg
in
(bad)
ds
leave
pop
mov
push
fwait
jl
dec
jb
sbb
js
sahf
xchg
shl
mov
xadd
dec
(bad)
sub
or
loope
push
cdq
jns
pop
loope
(bad)
xchg
stos
dec
cmp
sub
lock
inc
sub
stos
jle
scas
mov
add
scas
je
ins
aas
pusha
push
jmp
mov
push
pop
and
test
sbb
retf
pop
jb
or
xchg
xchg
mov
movs
ins
retf
mov
pop
inc
and
sti
cmps
dec
pop
(bad)
mov
psraw
cwde
aas
jns
cmps
jo
push
stos
sahf
jp
data16
mov
icebp
lea
scas
aaa
jle
scas
dec
ret
(bad)
fst
mov
ds
popa
(bad)
jg
xchg
ds
pusha
pop
cli
sbb
inc
jno
scas
jge
push
aas
mov
inc
scas
xchg
retf
scas
call
push
push
fisubr
ror
xchg
xchg
jge
xchg
stos
test
push
push
icebp
leave
(bad)
xchg
xor
jnp
std
(bad)
aas
stos
aam
push
xchg
scas
js
xchg
pop
(bad)
out
rcr
xor
fnstsw
ins
pop
popa
or
ins
jns
jge
sti
xor
inc
(bad)
out
(bad)
cmps
fnstcw
xor
aaa
dec
pop
pop
stos
add
adc
lahf
dec
out
shl
popa
dec
jg
fwait
xchg
lds
(bad)
ss
adc
push
jg
push
dec
clc
outs
hlt
sbb
xchg
mov
scas
stos
mov
mov
dec
lods
lds
dec
inc
ficom
sub
sub
mov
pop
pop
add
push
inc
mov
dec
inc
push
mov
das
mov
jge
and
add
pop
repz
push
mov
dec
aas
cdq
int
dec
sbb
push
fwait
adc
mov
dec
fbstp
cli
xchg
pop
cmp
dec
pop
outs
dec
push
clc
push
clc
jno
pop
push
push
movs
xchg
or
push
xor
jle
xchg
scas
jns
push
ja
fdivr
(bad)
mov
int3
push
fist
inc
mov
mov
sbb
and
cmps
rcr
sub
mov
das
jp
adc
mov
out
retf
jo
rol
inc
test
hlt
dec
xchg
mov
js
mov
(bad)
and
mov
popf
loopne
lds
ins
outs
outs
pop
call
test
xor
les
add
fadd
jno
xchg
fstp
xor
jo
dec
sub
xchg
xchg
dec
xor
mov
(bad)
mov
mov
mov
repnz
sbb
popa
xor
pop
fidiv
mov
sbb
or
dec
jne
push
icebp
mov
aas
pushf
imul
lods
mov
rol
fild
out
jae
adc
pop
dec
sbb
pushf
dec
outs
sahf
add
jecxz
hlt
jg
fxch
mov
jg
add
cmps
lea
push
jg
std
xor
sahf
xchg
push
(bad)
cld
mov
push
xchg
into
in
jno
and
inc
cmp
pop
pop
loop
sbb
pop
adc
cmp
test
or
mov
and
in
and
(bad)
jle
in
outs
cmps
adc
popa
jmp
fisubr
neg
imul
add
cmp
mov
and
sbb
scas
mov
nop
push
int
jns
dec
cmp
mov
adc
loopne
adc
(bad)
idiv
xchg
iret
pop
mov
out
mov
pushf
js
(bad)
aas
pop
inc
push
xor
xchg
mov
xchg
mov
dec
mov
fsub
call
xchg
aam
outs
jo
or
and
dec
jg
pop
xchg
jp
test
add
cmp
sub
dec
mov
push
lahf
out
fistp
jbe
pop
out
nop
movs
out
retf
mov
adc
jp
cmp
ds
hlt
xchg
out
mov
add
cld
fucomip
sahf
lods
xor
fst
sar
js
inc
dec
(bad)
xor
mov
idiv
sbb
mov
sbb
cmp
imul
int3
jne
scas
stc
mov
stos
ins
dec
adc
hlt
daa
jbe
jecxz
pop
shr
in
sar
outs
into
fadd
jns
(bad)
or
stos
dec
stos
or
push
mov
mov
int
push
jge
test
lea
dec
mov
sti
out
das
fidivr
int3
adc
int
retf
fisttp
mov
add
jle
mov
loopne
pop
in
hlt
cmp
dec
pop
dec
fidivr
push
scas
mov
inc
fcom
scas
sti
mov
lods
(bad)
mov
out
pop
dec
and
mov
fistp
std
sbb
cdq
fwait
cmps
imul
mov
push
sub
push
mov
push
dec
dec
and
popa
cmp
mov
mov
sub
fisub
aam
outs
imul
jg
outs
xchg
scas
xchg
inc
xchg
outs
imul
enter
fwait
hlt
mov
dec
scas
int
pop
pop
mov
dec
test
jno
(bad)
and
jo
or
sbb
data16
jo
mov
cwde
fimul
fwait
pop
add
lea
iret
lahf
pop
push
fadd
or
(bad)
mov
popa
mov
jmp
xchg
cld
dec
push
or
call
scas
inc
dec
ret
fbld
in
push
cs
imul
jo
scas
std
(bad)
es
xor
daa
pop
lods
fisttp
mov
enter
cmp
cli
lea
push
fisubr
fnstcw
mov
setg
sbb
jmp
ds
add
xchg
dec
outs
cs
sub
js
ja
push
push
jmp
bound
dec
mov
push
in
cmps
lea
ficomp
scas
int
test
xor
rcl
push
cmc
pop
xchg
ficomp
sbb
mov
mov
pop
pop
daa
sub
aam
aad
les
mov
sahf
iret
pop
jmp
adc
popf
retf
int3
movs
movs
enter
xchg
dec
mov
or
nop
fcmove
std
pop
into
retf
movs
or
mov
push
addr16
test
mov
(bad)
ds
inc
add
push
mov
add
sbb
sbb
div
fcom
xor
(bad)
xor
lock
std
dec
int
xchg
mov
dec
lods
jecxz
vpmacswd
ficomp
fdivr
or
mov
mov
pop
leave
xchg
push
cmp
cmp
clc
sbb
out
stc
xchg
ret
sub
and
jg
jl
mov
and
idiv
sbb
sar
lods
sbb
inc
jge
jg
fidivr
mov
loopne
adc
aad
out
test
push
sub
cmp
pop
push
out
test
test
retf
scas
loopne
push
in
jne
mov
sub
jge
mov
jmp
push
cmp
adc
mov
dec
movs
xchg
iret
mov
stos
les
pmovmskb
cdq
imul
test
sub
jbe
(bad)
mov
imul
cmp
aaa
and
fistp
push
fbld
cld
lea
mov
sub
push
lahf
popa
shr
mov
div
add
fild
cmc
(bad)
sub
xor
clc
xor
dec
(bad)
fdivr
test
sbb
xchg
(bad)
int
sahf
(bad)
retf
(bad)
(bad)
dec
inc
and
sbb
jb
repz
adc
fmul
and
push
pushf
adc
push
xor
add
arpl
pop
fild
fsubr
je
nop
mov
call
(bad)
movs
iret
cmp
dec
push
mov
pop
sbb
das
lods
(bad)
scas
(bad)
cbw
into
xor
xchg
hlt
xor
push
sub
iret
jl
loopne
jbe
fmul
popf
pop
(bad)
(bad)
pop
fimul
inc
jmp
popf
fcom
add
cmp
or
into
ficomp
and
std
pop
leave
lods
jo
(bad)
fidivr
push
mov
imul
and
pop
jno
loopne
outs
cmps
dec
xor
shr
cli
push
jp
pop
wbinvd
shr
cs
sbb
xchg
jmp
fstp
dec
xchg
mov
leave
mov
adc
jae
pop
cmp
fidiv
dec
or
jmp
dec
ja
leave
ffree
lahf
fidivr
adc
outs
stos
(bad)
jg
xchg
jle
push
cmp
inc
jnp
jb
je
sahf
mov
lds
jg
lahf
lods
out
mov
enter
cmc
sbb
xchg
push
mov
out
push
outs
jae
dec
in
sbb
std
add
sub
sbb
push
sub
icebp
cld
sbb
mov
(bad)
pusha
cmp
into
mov
or
aaa
xlat
sbb
lahf
sub
dec
and
sbb
xchg
out
xchg
in
push
mov
ins
jno
push
pusha
ds
ds
retf
scas
mov
pop
(bad)
push
pop
push
outs
push
ret
or
pop
push
(bad)
pop
or
scas
lds
xchg
shl
inc
out
ja
dec
js
(bad)
ficomp
add
cld
sbb
or
fist
pop
iret
(bad)
sar
movs
leave
fistp
iret
mov
sti
jecxz
hlt
rol
fbld
rol
int
jl
lahf
mov
rol
loopne
jg
div
pop
xor
(bad)
call
outs
cmps
inc
stos
popf
jecxz
fimul
adc
mov
fnstcw
mov
or
jle
pop
outs
ins
enter
and
(bad)
test
out
mov
sbb
sbb
jecxz
or
retf
(bad)
ins
gs
lods
out
(bad)
mov
xor
pop
out
dec
sbb
cs
xor
icebp
push
pop
pop
pop
pop
retf
movs
xchg
iret
test
ds
fnstsw
pop
scas
cs
clc
call
dec
repz
pushf
scas
sbb
mov
and
lods
enter
dec
(bad)
daa
div
sti
sbb
movs
jmp
jl
dec
mov
or
icebp
out
mov
pop
iret
dec
test
push
mov
fmul
cld
inc
pop
dec
(bad)
int
ror
jge
mov
mov
pushf
or
loope
pop
or
push
adc
addr16
or
xchg
into
pop
xor
clc
outs
ins
dec
cmp
jle
into
bound
aas
jecxz
jge
and
scas
push
ds
loope
retf
scas
cmp
mov
stc
cli
mov
push
dec
aad
scas
and
das
test
out
leave
jo
mov
arpl
push
cmps
cmps
add
outs
jle
out
int3
aaa
mov
loopne
inc
sbb
jle
push
adc
mov
mov
xor
cs
push
push
and
jns
ins
fcom
mov
repnz
outs
jbe
push
add
cmp
(bad)
lods
scas
sti
pop
sub
and
iret
aas
loope
mov
pop
dec
pop
lea
sahf
xor
(bad)
pop
sbb
dec
adc
dec
loope
dec
test
jno
jg
sbb
loop
int
sti
adc
ins
sub
xchg
js
rcl
es
in
cmp
lods
sahf
lods
fnstsw
cmp
fstp
and
retf
xlat
pop
mov
mov
je
repnz
push
imul
xchg
mov
sub
movs
movs
mov
pop
cmp
jl
xchg
int3
into
psrlq
test
(bad)
adc
repnz
sub
mov
xor
psubusw
sub
int
push
je
add
fbstp
push
lods
push
sbb
cld
gs
pop
cs
sub
mov
xchg
int
or
xchg
cmp
retf
outs
(bad)
enter
popa
and
mov
mov
sub
stos
in
lea
mov
inc
inc
inc
mov
sar
inc
(bad)
ficomp
dec
mov
(bad)
aas
xor
pop
push
fmul
(bad)
and
sub
jmp
clc
pop
cmp
mov
dec
outs
mov
add
xor
xchg
and
das
test
inc
inc
mov
pusha
scas
daa
les
or
scas
loop
(bad)
test
sub
cmp
out
into
int3
pop
jle
je
xchg
or
nop
push
aaa
or
mov
dec
xor
inc
pop
sub
es
cmp
movs
ja
add
imul
dec
jb
or
inc
pop
and
fisubr
lea
mov
scas
out
aam
(bad)
inc
int3
outs
xor
and
sbb
rcr
adc
dec
call
stos
jb
(bad)
jmp
(bad)
mov
add
(bad)
cdq
xchg
js
(bad)
jl
(bad)
mul
imul
lahf
dec
and
out
push
pop
scas
(bad)
(bad)
std
or
adc
std
or
mov
sti
iret
ret
dec
pop
jp
adc
jmp
pop
adc
and
(bad)
jl
cmp
jg
ss
or
xchg
scas
daa
into
jg
jb
cmp
mov
pop
pop
pop
jbe
push
ret
aaa
fimul
mov
mov
mov
dec
jl
in
(bad)
push
push
adc
(bad)
in
fidiv
dec
pmulhuw
xchg
dec
fnsave
cmp
sbb
jg
sti
and
not
xor
push
push
(bad)
dec
fdivr
ds
leave
mov
and
fidivr
sbb
and
dec
test
xchg
cld
aaa
lods
add
imul
out
sub
dec
mov
test
ret
fyl2x
jge
inc
xor
adc
(bad)
and
jns
push
scas
mov
rol
(bad)
das
push
loopne
xchg
bnd
inc
movs
pop
outs
push
dec
push
sub
or
hlt
pushf
in
cli
sub
or
mov
dec
dec
(bad)
fwait
pop
pop
push
cmps
out
stc
lods
test
xchg
sbb
ins
cli
or
cmp
mov
xchg
aas
pop
outs
mov
lods
xor
test
scas
jecxz
retf
push
dec
xor
in
or
inc
sbb
int
sbb
cli
fisubr
push
(bad)
iret
pop
mov
or
lods
xor
and
add
xchg
aaa
imul
xor
clc
push
or
outs
aas
fiadd
adc
dec
stos
pop
in
clc
mov
pop
leave
jmp
shr
std
add
mov
hlt
sbb
mov
cld
imul
pop
scas
(bad)
cld
sub
sub
(bad)
popf
dec
iret
pop
(bad)
imul
pop
cld
and
cmp
pop
mov
bnd
sti
fcomp
pop
cld
mov
sbb
push
xchg
in
dec
mov
out
sahf
ret
cmp
clc
std
pop
mov
dec
retf
xchg
pop
loopne
push
ds
aas
push
das
sahf
mov
aam
mov
iret
inc
into
and
pop
iret
jmp
jns
mul
out
xchg
stos
sbb
mov
test
jb
dec
and
stos
retf
je
pop
clc
push
sahf
sahf
ror
std
cmp
cmps
jle
jmp
mov
cmps
jle
shl
test
(bad)
in
add
call
add
fnstsw
cmp
hlt
mov
mov
lock
aam
inc
jp
into
sahf
jmp
outs
mov
(bad)
push
(bad)
mov
movs
fistp
mov
retf
xchg
jb
cmp
pusha
inc
outs
ss
scas
lods
js
or
ror
out
or
es
fstp
add
test
gs
das
lahf
jge
mov
push
jmp
jb
out
fisttp
jno
sahf
sbb
cmp
dec
popf
jl
in
jno
fisttp
in
fidivr
out
or
int
(bad)
imul
cmp
pop
lock
mov
int3
lea
daa
sar
js
(bad)
cmp
xlat
cmp
jmp
or
outs
out
cmp
sbb
popa
pop
ds
in
or
jb
pop
push
mov
in
add
push
sbb
sbb
punpckhdq
(bad)
ins
scas
xlat
aas
or
push
dec
ret
add
(bad)
scas
adc
dec
mov
inc
into
inc
xor
movs
mov
fisubr
and
iret
jg
or
repnz
pop
arpl
sbb
sub
stos
cmps
mov
(bad)
xchg
mov
outs
mov
in
sub
outs
adc
sbb
xor
mov
mov
cmps
adc
push
mov
cli
out
push
cmps
inc
xchg
push
das
loope
push
and
mov
xchg
push
scas
into
cli
nop
sahf
test
mov
or
movs
aas
inc
int
ds
retf
xor
ins
aam
pop
xor
adc
cmp
fsubr
iret
inc
and
mov
ds
fistp
cmp
pop
movups
push
dec
add
shl
sub
fisub
dec
dec
and
push
outs
call
sbb
in
and
cmp
loope
fisttp
stos
cwde
movs
push
add
inc
test
cmp
scas
fnstsw
jb
das
call
dec
add
xchg
pop
xor
pop
aaa
push
test
add
(bad)
push
shld
call
adc
pusha
pushf
leave
das
mov
push
enter
fld
clc
pushf
mov
fadd
iret
in
ret
lea
pop
xor
pcmpeqw
add
shr
dec
add
xchg
leave
sar
or
add
daa
retf
and
mov
popa
mov
pop
fwait
out
mov
fldenv
popf
mov
bound
ds
jns
or
sbb
nop
or
xlat
jo
mov
test
aas
inc
cdq
add
cmp
pop
dec
addr16
adc
pop
iret
(bad)
int3
jmp
sti
add
jl
mov
popa
pop
mov
and
(bad)
push
xchg
mov
xchg
xchg
stc
lahf
test
mov
add
push
scas
nop
clc
popf
xchg
jne
jg
jge
dec
ds
push
sub
mov
xor
push
push
es
(bad)
aas
jecxz
not
test
push
dec
sbb
mov
fld
rcr
lahf
jbe
test
push
inc
push
inc
test
lds
jecxz
lahf
cdq
push
inc
jns
in
iret
pandn
into
jo
mov
adc
lahf
movs
mov
into
xchg
xchg
cmp
cs
add
pop
push
mov
imul
and
jb
pushf
dec
ret
int
xchg
in
popa
mov
and
cmp
pop
jae
xchg
jl
sahf
dec
or
test
pop
retf
aam
jmp
jge
push
xchg
mov
jns
pop
stc
ja
sub
dec
cmp
xchg
cs
lahf
ds
or
ficom
sbb
imul
or
aam
cld
cmp
xor
fstp
pop
sub
scas
movs
call
xor
leave
out
mov
xchg
dec
pop
imul
dec
jbe
push
call
dec
pop
jle
jmp
cld
jb
adc
sbb
ds
sbb
stos
mov
sbb
out
adc
add
push
jae
sbb
pop
cmps
mov
dec
inc
mov
xchg
das
cmp
inc
add
jg
xor
mov
popa
ds
jle
pushf
cmp
jmp
rcr
aad
mov
shr
cmovb
pop
mov
scas
push
jns
dec
subps
mov
mov
lock
ds
ret
and
push
pop
mov
pop
push
call
xchg
push
pop
test
cmp
jg
outs
ds
dec
ins
cdq
xchg
outs
adc
xchg
push
leave
fcmovb
mov
adc
or
sbb
jecxz
mov
(bad)
out
pop
stos
mov
ins
out
pop
dec
movs
sar
push
cmp
das
fwait
push
jp
push
jle
jnp
data16
mov
gs
jg
lahf
leave
adc
fistp
das
in
mov
fiadd
xor
jg
fneni(8087
into
and
xor
or
xchg
aas
jle
call
(bad)
out
fwait
jmp
mov
pavgb
push
das
ss
cmps
adc
mov
imul
mov
cmps
into
aaa
or
jae
rcr
je
pushf
(bad)
sbb
popa
out
out
jg
shl
aad
or
pop
pop
call
adc
aas
lods
outs
pop
icebp
add
fdivr
push
std
(bad)
add
fild
das
and
inc
loop
ds
xchg
push
xor
std
scas
dec
ds
pop
(bad)
lods
mov
pop
xor
fcomp
push
jbe
dec
cmp
std
push
xchg
lahf
ret
pop
fcomip
(bad)
pop
iret
aas
das
xchg
ins
retf
ins
aaa
ins
repnz
or
ins
inc
ror
iret
in
mov
cs
pop
pinsrw
jno
pop
dec
das
in
dec
rcr
(bad)
mov
adc
cmp
jle
sbb
pop
pop
popf
dec
ja
ins
push
shl
or
fdivr
movs
dec
and
jl
outs
syscall
push
mov
adc
gs
ja
(bad)
fisttp
loopne
cmp
pop
xchg
jl
xchg
cmps
sub
sbb
push
dec
sti
das
and
rcl
or
jl
pop
push
xor
xor
daa
cmp
push
xor
pop
or
mov
cmp
inc
xchg
push
stos
mov
jne
add
out
adc
addr16
idiv
push
jmp
inc
sub
cli
sub
jnp
pop
xor
xchg
inc
dec
mov
xchg
jle
fs
aad
imul
(bad)
cmc
adc
ss
je
movs
adc
push
shl
inc
lahf
xchg
loopne
(bad)
out
pop
inc
ins
mov
or
in
(bad)
outs
dec
jnp
cwde
mov
cmp
push
lds
add
sbb
cmp
in
inc
popf
scas
(bad)
lock
js
mov
mov
scas
xchg
cmp
mov
loop
pop
push
cmp
outs
enter
pop
xchg
add
(bad)
mov
in
mov
stos
dec
dec
ja
jle
lods
das
or
test
xor
push
add
pop
sbb
lds
sub
lods
add
aad
sbb
cmp
icebp
mov
sub
nop
mov
or
fld
aas
test
push
repnz
in
das
mov
lahf
stos
push
sti
pop
div
pop
and
pop
(bad)
in
jns
push
adc
adc
jle
jecxz
mov
xor
nop
imul
cmc
lock
fld
dec
pop
lock
popa
outs
iret
bound
adc
dec
and
std
addr16
or
sbb
and
jle
adc
jecxz
push
sahf
push
loope
iret
fisttp
shl
inc
mov
pop
xchg
pop
sub
bound
sti
imul
aam
ja
jmp
ins
lahf
test
call
movs
fsubr
pop
mov
cmps
xchg
pop
xchg
lods
arpl
xor
loop
adc
jle
jl
push
mov
xor
mov
sbb
push
es
xchg
str
add
ds
pop
mov
push
xchg
mov
mov
retf
adc
(bad)
pop
rcr
mov
xor
mov
outs
adc
sub
dec
push
sub
stos
and
and
xlat
in
ret
dec
(bad)
int3
pop
pop
nop
mov
out
hlt
ins
sar
psadbw
dec
mov
or
sbb
adc
jle
cmp
test
mov
adc
inc
test
jle
aas
push
sbb
push
and
test
sub
scas
aam
or
mov
test
das
enter
dec
and
or
(bad)
ret
cmp
jg
sbb
idiv
mov
(bad)
out
daa
pop
pop
imul
add
sbb
pop
push
stos
jle
fdiv
aam
idiv
repz
mov
xor
xchg
push
divps
sub
add
mov
mov
(bad)
(bad)
xlat
push
call
es
push
scas
imul
pop
(bad)
stos
fdivp
add
(bad)
mov
je
sub
movs
pushf
outs
jno
push
fbld
xor
pop
push
test
repnz
add
sbb
lods
mov
repz
xchg
mov
dec
ja
pop
lahf
mov
cmp
mov
mov
xor
mov
add
mov
test
mov
call
xchg
fbstp
test
add
sbb
popf
test
add
jg
enter
mov
test
sbb
cmps
dec
retf
movs
bound
jmp
pusha
sbb
mov
mov
std
jge
call
or
mov
cmp
and
mov
call
cmp
jg
push
enter
int3
jmp
pushf
ins
adc
data16
(bad)
std
mov
mov
lea
out
scas
pop
xor
call
jmp
sub
hlt
jecxz
arpl
sub
push
int3
sbb
fistp
jle
outs
mov
pop
mov
int
mov
ds
pop
ja
stos
out
jg
ins
(bad)
sahf
xor
popa
mov
sbb
clts
ins
sbb
push
fmul
shr
mov
sbb
out
and
pop
inc
jle
add
into
pop
push
cmp
push
dec
addr16
(bad)
fimul
jae
xor
or
sub
mov
scas
pop
retf
les
fisttp
pop
pop
pop
mov
jge
sbb
iret
data16
fdivrp
jle
jmp
(bad)
or
dec
stos
mov
js
ss
mov
mov
out
mov
lahf
pop
cmp
adc
push
cmp
jae
fs
mov
pushf
lahf
mov
mov
js
sbb
repz
mov
cmp
fnstsw
add
cmp
mov
pop
sbb
popf
jmp
mov
cmp
(bad)
in
mul
add
push
adc
test
sbb
setle
xchg
mov
xor
mov
sub
mov
sub
into
cmps
(bad)
or
(bad)
das
pop
dec
sub
cmps
dec
fwait
add
mov
jo
(bad)
fisttp
sub
sub
dec
shr
outs
cmp
sub
ja
cmps
push
cmp
xchg
jl
mov
mov
iret
retf
popf
mov
sbb
cmp
addr16
hlt
push
or
cld
ficomp
xor
rcl
iret
gs
pop
out
dec
adc
mov
(bad)
cs
leave
(bad)
xor
shl
ds
mov
or
mov
sbb
sub
stos
sahf
push
mov
jl
in
(bad)
jl
pop
pop
dec
outs
add
adc
mov
adc
imul
mov
pop
jle
jno
xchg
dec
loop
(bad)
push
fistp
dec
les
(bad)
outs
retf
outs
push
lahf
(bad)
scas
jge
sub
cld
jmp
cmp
cwde
sub
pusha
in
mov
fisub
mov
fisttp
xor
pushf
push
scas
or
push
jle
add
pop
and
popa
(bad)
out
sub
das
clc
sbb
outs
ja
and
loopne
dec
or
test
inc
mov
add
cmc
sbb
push
dec
enter
jl
mov
or
scas
jl
ins
jmp
mov
das
ins
pop
fadd
jbe
pop
outs
call
dec
(bad)
aas
xchg
push
push
dec
es
xchg
enter
cmp
pop
sbb
out
pop
test
cmps
in
pop
aas
sbb
mov
pop
lahf
into
adc
out
push
xchg
in
retf
add
pop
pop
push
inc
out
mov
and
scas
mov
jb
cs
mov
cmp
and
push
dec
iret
(bad)
cmc
pop
sub
sahf
(bad)
mov
mov
or
sbb
cmp
mov
xchg
rcr
ins
adc
aad
loop
mul
jmp
in
outs
in
adc
and
enter
dec
dec
lahf
pop
mov
js
mov
or
icebp
retf
inc
mov
cmp
lds
or
xor
movs
pop
and
(bad)
cmp
lock
cmp
lods
jmp
js
mov
sbb
sbb
call
or
mov
sbb
iret
lahf
rcl
imul
mov
cmp
aad
inc
pop
inc
jg
or
jnp
scas
push
iret
loope
mov
xor
jl
cmp
dec
cmove
popa
push
inc
call
fwait
retf
jmp
pop
hlt
or
cmps
jg
pop
cmp
xor
fsubr
dec
bnd
or
sti
dec
into
fwait
push
fild
xlat
cmp
stos
(bad)
repz
daa
mov
mov
(bad)
push
cmp
(bad)
xchg
adc
fs
in
mov
cmp
ficom
in
leave
stos
es
mov
jl
pop
and
cmps
jbe
fistp
lock
push
out
push
mov
cmp
dec
retf
push
fild
ror
sar
dec
jae
pop
int
adc
retf
jl
push
pop
and
out
xor
call
pandn
jle
pop
jns
cmp
xchg
jno
ja
shl
cmps
mov
push
mov
jmp
dec
cmp
cmps
in
popa
ja
lods
outs
pop
(bad)
repnz
or
xor
out
jmp
pushf
push
mov
dec
sbb
popf
aas
test
test
jbe
cmps
aad
inc
xor
adc
cmp
lock
lds
lea
aam
mov
fcmovnu
int3
ret
push
jg
jp
imul
jmp
pop
test
int
out
lods
pop
(bad)
push
mov
jb
mov
fcomip
data16
pusha
dec
nop
ror
out
fistp
out
inc
call
dec
jo
imul
pop
popa
dec
pusha
mov
(bad)
out
jg
jno
mov
(bad)
rcl
out
jg
inc
sub
iretw
mov
jg
pop
mov
pop
neg
inc
stc
loopne
imul
daa
inc
push
and
xchg
fs
aas
pop
movs
mov
or
jmp
mov
(bad)
xlat
pop
jle
mov
aaa
pop
and
sti
sub
into
push
lods
fstp
sbb
sbb
xchg
xor
push
ja
and
push
outs
inc
lea
leave
jle
pop
neg
dec
pop
sbb
cmp
movs
imul
add
das
shl
add
and
fmul
test
call
mov
fstp
mov
sbb
das
dec
inc
sbb
sbb
pop
pusha
sub
leave
mov
out
jmp
fwait
ror
cs
jnp
dec
sbb
mov
fisub
(bad)
lods
inc
icebp
(bad)
xchg
or
mov
add
(bad)
arpl
(bad)
(bad)
xchg
mov
(bad)
sahf
jne
mov
addr16
dec
cs
jle
jno
in
dec
jb
ja
ja
loop
test
inc
es
cwde
movs
cld
xor
dec
sahf
ja
adc
lea
loope
daa
cli
cwde
into
iret
iret
out
cdq
scas
or
inc
fiadd
fistp
and
inc
inc
les
rcr
sub
ds
cmc
ins
push
sahf
or
push
jg
pop
jecxz
stos
ds
fisub
or
das
neg
out
fisttp
into
stc
pop
fdivr
push
mov
stos
mov
mov
jae
addr16
cmp
fiadd
push
movs
push
loopne
dec
jmp
mov
sti
scas
mov
scas
out
mov
mov
dec
mov
fmulp
lods
popf
add
outs
sub
mov
adc
adc
into
jecxz
nop
icebp
mov
push
mov
cmps
pop
popf
sub
xchg
adc
push
pop
sub
jb
stc
outs
xchg
pop
adc
mov
sub
clc
cdq
inc
shr
mov
(bad)
aas
pop
and
or
mov
jo
adc
aas
mov
hlt
push
mov
sti
nop
and
sbb
aaa
jnp
sbb
test
jmp
pop
adc
jl
and
xor
sub
lods
push
retf
imul
ja
clc
mov
das
jecxz
inc
outs
pop
nop
pop
lds
xchg
mov
lods
out
mov
lods
jmp
scas
push
dec
stos
xchg
xor
sub
pop
dec
fnstcw
ret
ja
xchg
add
ror
adc
fst
lods
inc
xchg
lahf
add
int3
jb
jo
pop
cmc
call
out
pop
xor
or
pop
xchg
pop
nop
dec
ins
push
add
push
dec
pushf
mov
in
adc
data16
outs
push
imul
ja
out
pop
bound
iret
cmp
mov
mov
sbb
mov
mov
das
out
std
push
fistp
enter
mov
call
(bad)
pop
retf
pop
cmps
ds
test
mov
aaa
mov
mov
sbb
jmp
fwait
pop
into
dec
xlat
ret
in
mov
div
out
(bad)
push
adc
into
sub
lock
jne
xor
cmp
mov
clc
xor
sbb
jle
sbb
les
mov
mov
rcl
pop
jmp
jg
call
sub
ds
lahf
scas
pusha
ins
and
mov
out
(bad)
(bad)
stc
cmp
test
inc
sete
mov
xchg
fistp
ret
dec
out
(bad)
mov
sbb
loope
ins
outs
jecxz
cmps
hlt
out
pop
mov
nop
mov
stc
xor
pop
xchg
into
pop
xor
lds
outs
addr16
inc
mov
mov
mov
(bad)
out
and
jecxz
fiadd
les
xchg
test
adc
sub
int3
fwait
pop
test
adc
ins
test
out
inc
out
fbstp
dec
call
fist
push
mov
retf
lahf
daa
pop
or
mov
outs
ins
pop
lods
cmp
inc
repz
or
dec
in
pxor
mov
and
mov
xchg
xlat
dec
push
add
(bad)
pop
push
outs
adc
push
rcr
sti
gs
cmp
stc
sub
adc
inc
inc
adc
mov
test
ds
fxch
(bad)
sbb
cmp
mov
jge
iret
xor
cmps
lods
rcl
pop
mov
pop
mov
dec
adc
jle
arpl
iret
(bad)
mov
test
xor
add
in
pop
pop
pop
push
dec
int
xor
push
(bad)
push
and
fcmove
rcr
ret
das
scas
(bad)
lods
cmp
jns
imul
pop
and
mov
add
xchg
add
adc
pop
and
sti
fimul
sbb
int
dec
add
imul
lods
adc
mov
in
das
pop
stc
push
mov
call
(bad)
mov
inc
ja
mov
xchg
xor
dec
stos
ss
lods
jb
pop
pop
jne
pop
mov
xchg
int3
or
xor
xchg
lock
popa
out
outs
fst
stos
mov
(bad)
js
ds
xchg
or
pop
cs
push
movq
test
or
dec
ror
inc
pop
mov
push
les
jmp
gs
ret
add
mov
enter
rol
inc
imul
sub
adc
std
inc
mov
jns
cmp
lods
iret
sbb
mov
inc
pusha
jnp
out
enter
(bad)
mov
retf
rcr
push
(bad)
pop
lods
pop
sub
or
inc
dec
outs
push
shr
push
rol
fmul
outs
sti
sub
(bad)
push
sbb
add
jae
in
xchg
fiadd
adc
fwait
xor
call
mov
scas
sbb
bswap
outs
aas
jecxz
push
mov
xchg
adc
call
das
lahf
cld
or
aas
push
test
pop
mov
cmp
out
mov
mov
pop
cmps
sbb
cs
jge
push
(bad)
fdiv
mov
neg
repz
pop
js
push
jno
xor
xchg
outs
outs
pop
mov
and
mov
stc
repz
mov
cmp
pop
xchg
push
int
lock
ficomp
mov
mov
rcr
sahf
mov
mov
call
dec
inc
xor
add
inc
or
sub
mov
outs
push
adc
fistp
mov
(bad)
fdivp
mov
cmp
cmc
xchg
dec
mov
jl
scas
mov
jmp
cmp
jl
jp
ja
inc
jl
dec
jge
sub
mov
aaa
movs
cmc
in
pop
mov
dec
sub
pop
das
mov
scas
xor
int3
arpl
mov
xchg
pop
sub
out
push
and
push
outs
sub
add
mov
pop
mov
(bad)
jp
test
pushf
(bad)
neg
cdq
pop
inc
and
addr16
mov
push
cli
push
scas
scas
repz
mov
pop
in
fucomp
jecxz
out
push
or
mov
sbb
ins
jl
mov
mov
sahf
rol
push
loop
out
and
ins
pop
inc
out
push
cdq
sbb
int
and
scas
aas
aad
fld
push
dec
cmp
popa
jg
outs
sub
dec
push
or
imul
and
icebp
(bad)
mov
xor
cvttps2pi
cdq
dec
test
inc
stos
pop
dec
int3
outs
jmp
pop
data16
jg
push
sbb
fist
out
fidiv
pop
dec
out
nop
cmps
pop
out
jnp
out
and
mov
in
add
sbb
(bad)
es
or
stos
imul
fsub
cwde
pop
mov
std
pop
sbb
cld
sbb
aad
dec
mov
loop
adc
mov
fcmovnu
ins
mov
mov
pop
xchg
adc
jae
icebp
(bad)
sub
or
and
pop
mov
movs
mov
into
adc
sbb
sub
(bad)
iret
loop
lds
dec
jge
add
pop
add
mov
jmp
sbb
add
aaa
and
ds
(bad)
out
xlat
retf
sbb
xor
ins
jle
lea
out
out
out
fwait
repz
mov
adc
out
jae
scas
sub
dec
es
(bad)
pusha
jo
jne
scas
cld
daa
sbb
fsubr
push
cmp
jl
dec
sub
iret
push
dec
out
add
cdq
push
jmp
out
dec
in
inc
icebp
dec
fidivr
cmp
cmp
xor
xchg
cwde
sbb
fdivr
push
(bad)
arpl
fild
stos
test
and
or
(bad)
mov
ins
jb
mov
(bad)
lea
mov
fsubr
fsubr
xchg
movs
ja
and
repz
setae
add
aad
movs
clc
lods
rol
mov
push
sub
mov
jne
dec
call
enter
iret
sub
jmp
and
adc
jnp
cwde
shr
jbe
mov
xor
xchg
or
mov
in
push
xchg
jge
pop
hlt
test
xor
push
cli
outs
imul
xchg
imul
sub
sub
mov
dec
mov
and
cmc
cmps
ficomp
pop
stos
mov
movs
jge
or
into
dec
cmp
push
ins
or
mov
pop
sbb
into
aam
ds
pop
sub
pop
mov
adc
scas
subps
lods
xchg
cmps
dec
(bad)
popf
inc
and
fisttp
push
cmp
bound
pop
jecxz
lods
push
jle
push
xchg
cmp
push
push
adc
cs
sbb
or
js
sub
outs
ror
push
cmp
(bad)
and
push
data16
and
pop
retf
pop
dec
lea
sbb
cwde
(bad)
and
int
cmp
call
aad
pushf
leave
scas
(bad)
mov
dec
or
clc
ins
mov
mov
pop
test
pop
pop
or
adc
pop
sub
pop
mov
push
gs
and
aam
sahf
pop
sbb
mov
dec
cmps
mov
xchg
(bad)
ss
or
daa
emms
ja
pop
into
dec
sahf
dec
out
xchg
dec
hlt
mov
scas
aaa
sub
lods
lods
fcom
call
mov
sar
into
fmul
rol
js
inc
inc
xor
outs
mov
fild
lahf
jo
xor
xlat
cmps
ss
pop
outs
cmp
pop
mov
pop
mov
imul
pop
or
mov
jmp
sub
js
sti
or
outs
cmp
sbb
(bad)
fstp
int3
je
lods
xchg
in
pushf
push
cs
push
or
cs
mov
mov
ds
and
cli
cmc
out
sbb
mov
cmp
or
push
cmp
mov
sbb
retf
jo
pop
aas
adc
push
or
shl
xor
dec
pop
sub
pop
in
dec
xor
pop
aas
push
push
jo
imul
xchg
mov
or
loop
push
retf
mov
pop
pop
mov
ja
cmp
(bad)
fimul
xor
or
cli
cmp
lahf
dec
(bad)
(bad)
sub
push
sub
inc
fisub
pop
pushf
mov
ucomiss
dec
pop
in
rol
imul
and
pop
adc
sti
mov
adc
daa
push
outs
xor
sbb
pop
pop
repz
retf
jo
rep
repnz
xor
jbe
mov
xchg
scas
scas
pop
arpl
xor
pop
cmp
fwait
jmp
dec
push
dec
cmps
push
cmps
pop
ss
mov
xchg
adc
jg
cmp
pop
data16
mov
fisttp
mov
push
pop
outs
stc
jle
iret
mov
popf
mov
das
mov
nop
outs
push
xchg
xchg
or
xchg
mov
cmps
jl
retf
fwait
sbb
repz
shr
jge
pop
xchg
jbe
(bad)
mov
jbe
mov
aad
dec
and
cs
xchg
mov
push
dec
fsub
fistp
dec
hlt
ds
clc
or
push
jnp
ds
ss
sti
inc
sbb
jns
push
into
dec
cmps
repnz
sbb
sub
pop
pop
out
movs
cmp
dec
sahf
call
mov
inc
stos
xchg
mov
(bad)
pop
mov
cmp
aas
(bad)
and
dec
mov
or
stc
or
fild
scas
xchg
dec
dec
dec
mov
dec
scas
in
dec
mov
(bad)
sub
(bad)
(bad)
daa
push
jns
(bad)
hlt
jmp
mov
fwait
mov
(bad)
pop
test
outs
das
sbb
push
in
xchg
dec
dec
ins
pop
pop
and
push
or
sub
dec
cmps
in
fdivr
cmp
pop
das
iret
sbb
rcl
retf
(bad)
lods
cmp
outs
out
(bad)
mov
pop
sbb
js
addr16
adc
dec
dec
adc
mov
mov
add
fsubrp
xor
jl
lahf
jle
jle
outs
or
out
(bad)
cmps
xor
stc
push
loop
mov
test
into
push
cmc
jnp
div
mov
pop
jmp
je
int
(bad)
in
add
jo
jmp
inc
lahf
(bad)
movs
jns
pop
mov
add
pusha
test
(bad)
sbb
(bad)
out
mov
inc
dec
leave
sbb
shl
div
lods
jns
cmp
dec
inc
xchg
xchg
xchg
mov
pop
popf
mov
sbb
pop
sbb
pop
add
out
dec
mov
jbe
xor
sahf
das
jb
or
outs
xlat
retf
xchg
add
sbb
ret
pop
rcr
call
outs
pop
push
push
dec
popf
dec
jl
dec
push
push
test
mov
and
out
stos
and
pop
dec
jg
push
jno
ins
dec
loope
xor
mov
stos
inc
iret
adc
retf
out
and
leave
loope
int3
pop
push
int
sbb
mov
mov
sti
pop
mov
das
mov
les
jae
in
pop
lahf
aas
jg
inc
jmp
mov
mov
(bad)
(bad)
paddq
and
mov
adc
cld
scas
sahf
mov
or
sub
sbb
inc
movs
mov
mov
dec
jb
in
mov
test
push
dec
push
fild
push
leave
fstp
iret
mov
push
ins
sbb
dec
xchg
out
pop
dec
aas
out
imul
loope
fcmovnb
js
leave
(bad)
cmp
xchg
mov
inc
das
mov
cmps
inc
inc
jb
aas
xor
loope
xchg
test
test
or
ins
sbb
fxch
mov
mov
(bad)
cld
xor
stc
out
das
out
cs
xchg
dec
pop
or
mov
mov
setle
mov
mov
inc
ds
add
dec
enter
push
jg
cdq
sbb
arpl
cs
xchg
jne
(bad)
lahf
xchg
fidiv
push
mov
or
jo
push
(bad)
pop
jge
pushf
inc
pop
in
jae
sub
int3
aad
pop
sub
or
pop
fbstp
gs
adc
mov
jmp
in
hlt
mov
mov
mov
mov
lea
or
mul
daa
mov
mov
adc
mov
mov
pop
aam
xchg
mov
sahf
loopne
and
xchg
outs
cdq
cmp
ins
push
adc
push
call
adc
test
imul
pop
shl
cmp
and
sub
out
jae
arpl
sub
mov
das
sbb
push
push
push
lahf
add
push
ds
ret
test
cs
or
fisttp
add
push
jb
icebp
xor
adc
fnsave
sbb
(bad)
out
push
mov
sbb
and
sbb
cmps
das
jne
sahf
cmp
imul
xorps
mov
fdivp
adc
pop
xor
out
mov
inc
movntq
fisttp
leave
imul
in
jbe
pop
das
aam
push
add
sbb
xchg
pop
aaa
inc
jg
outs
scas
adc
push
xor
je
icebp
ret
div
sbb
cmp
adc
push
mov
xor
aas
fistp
dec
(bad)
bound
inc
jg
shl
enter
daa
push
fmul
dec
inc
cmp
scas
nop
jae
mov
mov
dec
imul
scas
into
sar
lahf
jp
sbb
cmc
fld
dec
and
call
or
push
test
(bad)
inc
dec
outs
xchg
js
push
scas
add
sti
mov
mov
push
and
repnz
pop
pop
jle
gs
mov
mov
jns
cmp
fld
push
mov
outs
sbb
jg
add
xchg
jl
jb
retf
iret
add
add
pop
sar
jmp
aas
dec
and
ja
data16
cs
stc
push
push
out
push
jmp
xor
repz
mov
into
jl
dec
pop
cmps
xchg
fisttp
addr16
imul
aas
mov
outs
ficomp
popf
jge
popf
sub
(bad)
cmp
push
xchg
xchg
gs
(bad)
jb
in
fist
(bad)
mov
outs
inc
fbstp
pop
jmp
push
into
pop
cwde
mov
mov
push
sti
or
into
movs
(bad)
mov
lds
pop
mov
mov
es
ficomp
or
into
push
adc
xchg
rcr
mov
inc
gs
sub
pop
mov
iret
ds
cmps
fdivp
push
imul
jae
call
ror
lea
mov
fmulp
jmp
jmp
add
cmp
bound
scas
pop
out
in
lea
inc
out
int3
dec
jp
or
sub
cmc
pop
add
jae
mov
repnz
iret
jmp
push
test
sub
mov
add
dec
pcmpgtw
xchg
hlt
mov
out
cmp
lods
pop
into
(bad)
sbb
icebp
add
dec
bound
addr16
push
imul
or
cli
and
cmc
and
call
(bad)
(bad)
mov
(bad)
ret
outs
into
jne
inc
fucomip
sahf
cwde
sub
aas
mov
cmp
inc
inc
add
and
mov
jne
das
mov
mov
(bad)
jle
std
mov
mov
pop
jg
push
ret
pop
xchg
into
test
adc
mov
cmc
push
inc
ficom
pop
aad
or
retf
add
dec
fmul
cld
fisttp
out
jl
lods
gs
push
jmp
repnz
pop
ja
aas
xchg
and
retf
jl
(bad)
sbb
into
retf
leave
daa
push
cmc
movs
sahf
sub
pshufw
push
sbb
shl
jl
mov
mov
push
retf
pop
push
scas
outs
or
int3
movs
(bad)
cmp
into
dec
push
mov
les
dec
inc
push
aas
addr16
xlat
inc
dec
repnz
out
int3
leave
neg
fbld
outs
sub
or
cs
outs
popa
ficom
sbb
sbb
sahf
les
adc
adc
and
popf
cmp
push
xor
jg
xchg
aad
dec
std
cmps
(bad)
aaa
stc
jb
bound
prefetch
push
dec
dec
out
mov
(bad)
scas
(bad)
iret
xchg
add
adc
sbb
mov
aas
mov
nop
xchg
loopne
out
int3
into
out
in
and
das
test
sbb
sub
inc
ror
sub
dec
push
(bad)
pop
iret
iret
mov
ds
pop
and
fild
pop
pop
mov
leave
and
mov
mov
scas
xchg
nop
pop
or
jle
popa
out
jg
int
dec
mov
(bad)
fsub
mov
aas
shr
out
scas
push
sub
(bad)
hlt
pop
pop
fisubr
jp
fsubr
into
mov
imul
jbe
add
cwde
or
jmp
adc
test
mov
(bad)
stc
dec
rcr
fwait
mov
fnstcw
das
ror
jns
cs
repnz
ins
sub
and
lods
dec
imul
sahf
cli
(bad)
bound
mov
fist
scas
into
pusha
pop
push
mov
loope
mov
aam
(bad)
cdq
into
add
pop
mov
jecxz
jg
cmp
adc
scas
xor
stc
dec
cmp
pop
mov
(bad)
stos
arpl
mov
push
lods
(bad)
or
mov
xchg
neg
aam
inc
adc
fwait
mov
sbb
rcr
xor
bound
mov
xor
mov
arpl
imul
ret
sti
mov
cdq
jmp
push
dec
mov
bound
mov
jo
rol
fdiv
loopne
hlt
push
push
sbb
pop
scas
cmp
scas
arpl
push
icebp
mov
int
addr16
mov
(bad)
xchg
pop
pop
sub
jl
push
pushf
jne
ins
dec
pop
iret
pop
or
mov
sbb
call
mov
or
push
ds
cld
cs
jecxz
stc
jns
dec
icebp
and
gs
lods
out
jmp
iret
xor
pop
cwde
(bad)
in
into
mov
xchg
mov
or
data16
test
fsubr
or
cmove
push
pop
(bad)
test
dec
fsubrp
push
aam
lahf
mov
ja
aam
test
in
outs
pop
pop
cmps
and
jg
(bad)
popf
mov
pop
cmp
adc
inc
push
push
(bad)
xchg
imul
dec
out
rcl
xor
call
adc
mov
dec
(bad)
shl
jb
add
ja
dec
into
out
fist
in
fcmovb
ss
xlat
jl
adc
sbb
cmps
sar
js
jmp
inc
clc
scas
mov
push
lahf
stos
outs
rcr
into
cmps
dec
xchg
sub
scas
scas
sub
imul
and
imul
cmps
int3
iret
into
int3
les
aad
es
pop
push
dec
das
stos
std
pushf
push
mov
inc
lea
jg
inc
ins
pop
in
call
inc
not
sbb
mul
out
inc
(bad)
push
loop
xor
cwde
mov
out
mov
or
xchg
mov
fisubr
and
xchg
jmp
fidivr
pushf
xor
ds
push
xchg
or
xchg
fnstsw
mov
leave
and
push
dec
enter
add
and
jmp
lods
dec
das
fimul
sub
push
out
xchg
push
pop
mov
inc
jno
xor
add
pusha
fwait
mov
scas
mov
mov
retf
outs
mov
push
xchg
cmp
jmp
mov
lock
cmps
and
mov
mov
dec
adc
add
scas
push
jle
scas
inc
mov
jmp
and
out
inc
mov
mov
bound
imul
inc
push
xchg
fst
aaa
push
scas
mov
cli
or
fisub
loop
ficomp
out
outs
ins
dec
push
mov
int3
neg
fmul
push
or
sbb
daa
das
push
pop
pop
out
xor
call
ins
hlt
in
bound
or
jl
jmp
mov
lahf
pop
sar
lods
sub
xchg
push
inc
push
or
jge
(bad)
popf
xor
in
pop
push
sti
push
fiadd
jmp
(bad)
ret
inc
out
or
icebp
push
pop
adc
dec
lea
pop
es
movs
adc
in
movs
and
xor
xor
outs
xchg
das
or
mov
stos
jmp
sbb
inc
pop
sahf
out
mov
retf
mov
jns
cmp
mov
mov
mov
and
push
fcom
dec
add
cmp
loope
mul
dec
movs
call
retf
pop
dec
mov
sub
cmp
pop
(bad)
dec
inc
leave
cmp
mov
repnz
int3
aas
mov
mov
push
sbb
dec
mov
fisubr
jl
xchg
mov
out
push
cwde
(bad)
outs
out
jns
out
cmp
jge
pusha
outs
sbb
xor
jg
fcomp
das
ds
xor
dec
and
inc
mov
pop
mov
cmps
inc
push
mov
lods
xlat
pop
daa
(bad)
jae
pop
add
imul
pop
shl
fdivr
and
add
or
lock
rcr
push
outs
dec
daa
mov
lods
outs
(bad)
fistp
fist
int3
adc
and
into
loop
mov
inc
dec
pop
sar
adc
inc
mov
popa
in
add
mov
pusha
xchg
fisubr
movs
jle
mov
sub
call
fs
imul
cmp
iret
push
outs
mov
and
cmp
scas
add
aas
(bad)
xor
enter
iret
inc
xchg
push
push
pop
stos
movs
mov
(bad)
mov
pop
cmp
hlt
ret
ret
into
cmps
dec
(bad)
jmp
loopne
fild
out
or
loop
fisttp
(bad)
lahf
in
outs
inc
loop
mov
or
sub
xor
clc
js
mov
scas
stos
mov
ds
shl
imul
jne
aam
push
lahf
dec
pop
mov
cmp
es
mov
and
shl
movs
dec
retf
dec
adc
pop
daa
rcr
cs
add
cmp
fcmovu
movs
cmp
mov
inc
nop
sub
mov
push
fsubrp
int
stc
pop
xor
dec
cmps
test
mov
or
adc
pop
mov
or
inc
scas
mov
mov
mov
addr16
or
fnstsw
outs
retf
(bad)
mov
push
(bad)
sub
fstp
call
jo
add
sub
mov
clc
cmps
into
sub
jmp
sub
pop
lds
test
jl
into
xor
add
mov
push
nop
jle
out
pop
jge
lds
(bad)
stc
push
xor
jge
divps
mov
cwde
outs
jecxz
push
(bad)
out
sbb
(bad)
adc
mov
jle
or
dec
aas
sub
mov
stos
aad
dec
(bad)
mov
stc
test
imul
pop
fcom
push
mov
pop
cld
jecxz
std
jge
sahf
iret
pop
xor
arpl
aaa
lahf
ds
lahf
add
dec
rcl
mov
iret
leave
scas
xchg
mov
stc
jmp
pop
cld
sub
or
add
outs
pandn
push
dec
xchg
add
mov
loop
ret
popa
pop
fidivr
dec
sub
fbstp
aas
cmc
in
jmp
outs
and
pushf
pop
jno
pop
push
add
das
std
xchg
lahf
pop
stc
std
xor
pop
call
scas
or
or
dec
sub
sub
pop
xchg
in
fwait
std
add
fldcw
xchg
xor
scas
inc
fucomi
dec
gs
and
out
mov
sbb
mov
inc
sbb
fidivr
adc
mov
and
jge
sahf
mov
fild
xor
fdiv
pop
jg
inc
jge
out
add
adc
pop
aaa
clc
cmps
adc
pop
(bad)
fldlg2
inc
(bad)
fiadd
inc
add
cmp
out
(bad)
imul
pop
jnp
inc
scas
push
jne
shl
cli
cmp
jge
in
es
popf
addr16
xor
mov
add
cmps
test
inc
repz
sar
test
inc
sbb
or
sbb
(bad)
or
cmc
or
cdq
push
in
mov
push
aam
vmovsldup
adc
lods
mov
fs
out
ficom
scas
(bad)
(bad)
imul
sub
pop
or
mov
jae
sub
mov
aam
push
mov
nop
call
jnp
and
adc
mov
sub
jp
ins
jge
in
push
jmp
inc
push
push
lods
push
repnz
ret
imul
aaa
pop
hlt
pushf
sbb
enter
jle
out
xchg
in
(bad)
push
cmps
push
mov
(bad)
sti
pop
sub
inc
inc
add
int
ja
xchg
pop
not
jg
cli
or
mov
sbb
jns
mov
lahf
cdq
mov
sbb
jle
push
sub
mov
aas
push
dec
sti
push
push
inc
jl
mov
adc
movs
mov
int
(bad)
fsub
cmp
xchg
add
idiv
popf
sar
jb
scas
test
sbb
mov
xor
int3
mov
outs
dec
dec
repz
xchg
and
adc
les
or
dec
jno
dec
inc
mov
lods
sub
jo
adc
xor
xchg
fbld
push
jb
jge
leave
adc
pushf
les
push
es
imul
add
dec
push
test
cmp
imul
inc
stos
test
or
call
sub
push
xor
(bad)
sub
out
and
xchg
stc
sahf
test
add
enter
jns
or
sub
mov
(bad)
pop
pop
jmp
imul
popf
das
jge
mov
(bad)
mov
call
rcr
jg
sub
lahf
call
in
mov
out
sbb
and
inc
jns
xchg
pop
mov
jo
push
dec
mov
sar
xor
push
aaa
mov
pop
arpl
cmps
scas
mov
jne
adc
mov
push
cmp
fwait
or
push
xchg
popf
inc
ja
dec
mov
push
test
cs
pop
jge
outs
lahf
jg
add
adc
sahf
dec
imul
imul
sbb
fiadd
fcomp
jbe
pop
cmps
rcr
mov
add
xor
loope
repz
test
inc
rcl
lods
lock
xchg
jmp
lock
dec
and
push
pop
call
push
jecxz
jnp
dec
es
xchg
xchg
jle
inc
cmps
test
xlat
retf
push
ins
push
fisubr
sub
and
fimul
outs
pop
imul
sahf
push
es
xorps
mov
adc
sahf
mov
mov
cdq
es
cmp
sub
out
pop
jle
into
cmp
es
mov
push
imul
or
cmp
mov
loop
js
fwait
mov
inc
xchg
pop
inc
lahf
push
xor
das
std
iret
out
push
fisubr
lods
push
cs
shl
add
jp
loopne
push
int
cmp
or
ficomp
sahf
ss
int3
and
sahf
retf
add
sahf
stos
push
jae
and
mov
sbb
cs
outs
push
xor
out
outs
xchg
jb
outs
and
xchg
and
inc
dec
mov
fisubr
push
xor
inc
mov
lahf
push
cwde
dec
xchg
sub
outs
cmp
or
fiadd
out
adc
and
and
iret
outs
movd
jmp
mov
and
retf
(bad)
cmp
aaa
xchg
into
std
pop
cmp
outs
bound
mov
scas
xchg
mov
stos
and
cmp
sti
call
int3
maxps
loopne
aas
adc
mov
and
mov
out
shl
mov
cs
aas
cmp
push
jp
scas
dec
das
inc
mov
fimul
(bad)
dec
int
into
sub
mov
iret
cs
das
mov
out
mov
scas
jl
mov
mov
(bad)
jns
mov
dec
inc
jle
das
imul
imul
mov
neg
lods
inc
mov
mov
pusha
cmps
and
mov
sub
mov
lahf
pop
out
pop
cli
mov
(bad)
(bad)
mov
dec
call
xor
mov
xbegin
or
jnp
repnz
cmp
inc
adc
je
push
fld
xor
dec
jno
sets
push
fstp
fstp
add
sbb
(bad)
pop
jns
pusha
cmp
jecxz
(bad)
test
add
(bad)
jmp
sahf
pop
stos
shr
mov
jo
dec
loope
mov
cmp
cmps
int
xchg
pop
mov
cmp
dec
add
pop
(bad)
cmp
(bad)
std
mov
mov
(bad)
aam
ficomp
push
outs
retf
test
dec
ins
dec
sbb
adc
fsubr
mov
lahf
xchg
stc
hlt
hlt
mov
pop
retf
cmp
adc
movlps
pop
ds
xchg
jmp
(bad)
xchg
fistp
fwait
sub
lahf
lods
sbb
call
mov
ret
fsubrp
fcomp
lahf
cs
or
ret
push
and
xchg
mov
pushf
push
(bad)
fdivp
les
out
popa
push
(bad)
std
inc
gs
call
mov
pop
cmp
test
iret
push
mov
scas
xchg
and
or
and
push
adc
outs
mov
mov
add
jge
fmulp
dec
(bad)
ja
mov
call
or
adc
mov
ret
test
or
dec
hlt
mov
sbb
pop
jns
aas
jns
sub
pop
sar
mov
dec
stos
pop
adc
scas
scas
sbb
jb
retf
das
pop
call
pop
inc
fwait
and
xor
call
repz
jle
sahf
(bad)
xor
(bad)
dec
das
xchg
inc
xchg
inc
dec
mov
push
lea
scas
adc
aas
pop
fnstcw
imul
xor
rcr
xlat
call
jg
ds
cs
dec
and
adc
and
ss
outs
mov
int
mov
mov
scas
inc
sub
xor
outs
cmps
addr16
jg
fst
and
les
push
cs
pop
imul
pop
jle
js
stos
inc
mov
lahf
shl
test
leave
jnp
adc
sbb
push
aas
push
icebp
stos
add
add
sub
mov
inc
gs
or
or
jmp
rcl
and
test
int
jmp
cmp
enter
lock
jne
fs
dec
or
cwde
cmp
(bad)
out
(bad)
scas
adc
pop
pop
ds
or
push
or
jg
fisubr
enter
push
mov
adc
fmulp
mov
test
pop
mov
cmps
into
scas
daa
xchg
push
xchg
loope
and
add
sub
aas
sbb
push
mov
outs
repnz
pop
mov
fidiv
sbb
cmp
jb
dec
into
enter
push
dec
jecxz
clc
push
mov
cmp
push
int
retf
push
and
das
xchg
mov
pop
pop
sahf
sar
pop
jo
pop
call
pop
add
mov
jecxz
ds
ficom
rcr
sub
sbb
sbb
call
pop
mov
cmp
shr
scas
inc
sahf
call
and
out
nop
jg
mov
dec
(bad)
push
cmp
jae
mov
pop
retf
mov
enter
xchg
push
sbb
into
in
or
sub
shr
push
daa
fisttp
inc
jno
add
(bad)
ds
icebp
popf
add
add
pop
jle
ficom
addr16
xchg
(bad)
call
mov
jmp
enter
add
popf
dec
loope
adc
jo
arpl
mov
fsub
dec
aam
test
into
call
out
mov
mov
dec
jno
push
repz
push
into
(bad)
imul
push
outs
pop
mov
add
adc
sub
dec
jns
cmc
and
adc
adc
mov
jns
mov
mov
mov
jg
mov
fucomip
into
cmp
jp
pop
cmp
pop
cmp
sbb
js
pop
push
cwde
scas
mov
dec
mov
icebp
sbb
mov
dec
ret
push
loop
call
sbb
leave
ret
sahf
leave
std
stos
fldcw
cmp
or
ds
dec
iret
cdq
pop
mov
dec
and
push
jmp
stc
inc
dec
in
jecxz
imul
sbb
jbe
lahf
and
icebp
(bad)
fcomp
push
stos
aam
or
pop
lods
push
pop
sbb
imul
dec
pop
push
cmp
in
lea
(bad)
mov
mov
xor
scas
lahf
sbb
mov
xchg
out
sbb
fnstsw
lds
inc
dec
or
add
pop
lahf
leave
jecxz
loop
in
out
push
push
outs
aaa
adc
sub
xchg
mov
cmp
mov
(bad)
into
pop
fidivr
out
sub
jb
bound
ds
into
cs
lods
mov
sub
cmp
xchg
jg
and
dec
lock
mov
dec
lahf
or
xchg
jbe
into
scas
jle
scas
fidivr
ror
jecxz
retf
add
std
fimul
push
mov
mov
push
das
or
clc
stos
aaa
push
movs
dec
pop
xor
and
lea
jle
push
mov
push
scas
out
jle
dec
jmp
iret
inc
fist
out
cmp
xor
pop
dec
mov
mov
out
repnz
loopne
xor
sub
pop
lock
outs
pop
inc
jne
(bad)
test
arpl
dec
into
repnz
cmp
pop
or
pop
add
dec
dec
ds
lahf
outs
inc
mov
bound
sahf
adc
adc
loope
iret
aas
or
into
inc
popa
retf
(bad)
jg
inc
add
sahf
pop
push
mov
stos
jle
repnz
cmp
adc
xor
mov
and
imul
mov
mov
jnp
mov
scas
adc
in
pop
xchg
push
test
xor
std
jp
inc
fbld
ja
aas
add
sub
scas
test
repz
dec
jnp
jecxz
ret
das
fsubrp
aam
push
push
jmp
adc
rcr
dec
std
jns
outs
adc
ret
dec
or
push
jg
sbb
popf
sbb
in
(bad)
cld
push
ret
in
mov
int3
in
rcl
sbb
push
sub
lods
lods
mov
dec
xor
mov
sbb
int
push
arpl
inc
imul
jno
test
int3
std
call
mov
ror
fs
or
add
dec
ror
adc
aam
pop
pusha
(bad)
out
idiv
mov
pop
ins
inc
push
or
js
pop
push
das
dec
sahf
mov
cmp
jle
xor
xor
outs
mov
es
scas
iret
jp
int
xchg
add
mov
sub
fisubr
cs
dec
mov
jg
mov
stc
pop
ret
loope
cmp
pop
(bad)
in
push
call
outs
rol
pop
mov
call
fistp
movs
mov
push
mov
or
sbb
int
jl
dec
aaa
fisttp
push
adc
cld
aas
xchg
out
xchg
add
fs
xor
xchg
rol
imul
push
sub
fwait
push
dec
push
fimul
sub
sti
push
test
lahf
ret
mov
or
jne
arpl
sub
ret
sbb
inc
enter
mov
mov
xchg
dec
cmps
int
std
fisub
repnz
inc
pop
loopne
mov
and
and
(bad)
(bad)
mov
cld
(bad)
fiadd
mov
jbe
js
mov
or
mov
mov
retf
enter
jns
sub
sbb
adc
aas
cld
cmove
dec
cmp
fld
jg
cmp
cdq
mov
push
mov
xchg
loop
adc
sti
ins
inc
xchg
inc
paddd
xchg
add
inc
push
cwde
icebp
dec
fwait
stos
iret
sahf
push
mov
shl
pop
or
sbb
push
pushf
adc
rcl
fist
and
das
div
push
pop
(bad)
jnp
push
add
push
jnp
xor
xor
repnz
ret
push
jne
jbe
xchg
xor
and
loope
popf
mov
test
lea
mov
lds
repnz
fstp
mov
sub
lods
outs
dec
jo
sbb
jl
call
fistp
addr16
out
test
jno
cmp
rcr
mov
in
ds
int3
dec
push
cmp
mov
mov
sbb
in
retf
lahf
sti
mov
dec
cdq
scas
push
cmp
cmp
sub
or
xchg
xchg
adc
mov
pop
and
mov
jecxz
or
aas
jg
add
shl
ret
adc
adc
xor
(bad)
pop
push
aaa
popa
cmp
dec
outs
ror
ja
dec
ins
pop
(bad)
movs
and
sbb
jmp
ja
in
pop
data16
jg
out
mov
mov
lods
cmp
inc
mov
add
cmpxchg
push
cmp
call
shr
mov
(bad)
in
bound
daa
cmp
outs
ret
dec
add
rol
jle
(bad)
mov
mov
jb
mov
lock
test
push
test
mov
scas
push
clc
pop
stc
cmp
xor
dec
out
(bad)
outs
imul
fnstcw
mov
push
push
xchg
xchg
out
mov
ror
retf
push
cli
ret
arpl
or
popf
mov
jbe
mov
jge
test
ror
jle
and
lods
adc
ins
jnp
(bad)
and
xchg
es
mov
in
or
xchg
adc
out
(bad)
cmp
inc
imul
dec
jecxz
mov
ins
outs
xchg
paddd
repz
mov
adc
sbb
mov
mov
das
push
lock
fst
stos
clc
jle
or
pop
pop
or
mov
popa
(bad)
mov
cmps
pop
mov
mov
sbb
cmp
dec
movq
jle
adc
mov
sub
lods
inc
mov
or
xor
jne
lods
lods
push
lods
dec
outs
mov
rcl
in
pop
repz
sahf
xchg
scas
push
pushf
fmul
ud2
dec
jbe
mov
mov
fcmovnu
mov
stos
mov
call
test
test
mov
dec
sub
pop
je
sbb
out
(bad)
out
mov
loopne
mov
push
pushf
scas
push
(bad)
fistp
mov
scas
call
and
sbb
sub
loope
add
mov
call
sahf
mov
leave
outs
fcmovb
cs
sub
sub
in
dec
ins
mov
xchg
inc
add
dec
push
push
out
sub
mov
jb
mov
sti
dec
ins
js
outs
iret
and
adc
into
sbb
pop
popa
sbb
add
xchg
mov
shl
shr
aas
das
jg
addr16
sti
sub
adc
jo
lea
fcomp
(bad)
mov
aas
imul
clc
loope
pop
mov
neg
mov
scas
or
loopne
or
adc
(bad)
js
(bad)
retf
call
sbb
cmp
adc
cmp
adc
lock
jb
pop
fisub
and
cli
push
rol
push
sub
fdivrp
sbb
sub
lahf
add
(bad)
sub
mov
(bad)
cmps
dec
sahf
fimul
ds
or
mov
pop
mov
ret
xchg
or
stos
push
push
idiv
mov
sub
mov
imul
inc
pusha
dec
stc
pop
sahf
jbe
dec
mov
xor
popf
ret
jmp
sub
bt
mov
(bad)
inc
jmp
xor
sar
sub
dec
repz
mov
dec
sub
in
retf
add
adc
xor
and
or
jbe
ror
lahf
and
addr16
into
bound
xlat
push
and
add
aas
mov
popa
mov
mov
out
add
leave
idiv
cmc
pop
adc
(bad)
aas
add
out
inc
iret
movs
jb
push
push
cmps
adc
lea
push
add
into
rcl
ret
idiv
push
lea
mov
loop
adc
aad
mov
bound
out
cs
repz
fmul
aas
pop
into
lods
mov
sahf
mov
iret
icebp
arpl
outs
dec
retf
jae
cmp
adc
xor
aas
rol
out
push
daa
push
ret
outs
sahf
nop
inc
mov
mov
xor
(bad)
outs
int
fsubp
ja
aas
adc
xor
mov
xor
lahf
inc
scas
mov
ds
sar
cmp
paddusw
out
cmp
and
aaa
aad
movs
pop
inc
xor
inc
or
mov
inc
aas
adc
push
dec
inc
jle
jle
dec
jle
pop
leave
cmp
sub
xor
retf
dec
mov
mov
xor
out
outs
scas
mov
mov
xchg
adc
jb
out
fs
out
xor
js
adc
xor
scas
pop
push
push
out
fistp
sar
fidivr
xor
push
jno
jl
mov
mov
sahf
and
sub
cli
loop
sub
repnz
aaa
mov
lods
icebp
fs
xchg
sub
xor
jno
addr16
push
sbb
dec
lods
and
xchg
shr
in
sar
retf
xor
sub
cmp
jno
das
mov
movs
mov
outs
out
pop
arpl
pop
jmp
fmul
lahf
xor
ds
ins
add
adc
pop
(bad)
outs
pushf
outs
mov
and
xchg
inc
push
std
push
les
loop
rdtsc
cmp
sub
ins
jle
mov
shl
loop
cmp
(bad)
push
cs
(bad)
xor
sahf
xchg
dec
jle
dec
and
dec
arpl
aas
ret
push
clc
out
dec
jns
femms
dec
xor
iret
jle
ds
jb
inc
jg
sub
dec
iret
cs
jecxz
mov
in
sub
inc
and
jle
fdiv
lds
cmps
sub
add
jle
imul
cs
loopne
push
push
mov
out
dec
cmc
mov
inc
xor
mov
push
or
repnz
cmp
add
jle
xchg
jg
adc
mov
dec
loop
cmp
outs
outs
push
inc
xchg
shr
lahf
mov
inc
call
jecxz
repz
(bad)
fidiv
push
cmc
adc
jle
inc
jg
sub
dec
sahf
adc
cmps
iret
adc
xchg
mov
movs
mov
pop
jle
mov
daa
mov
jmp
pop
aas
sub
(bad)
scas
nop
das
inc
mov
mov
push
jne
das
sbb
dec
popf
add
dec
inc
sub
sub
pop
push
push
aas
dec
inc
repz
repnz
(bad)
(bad)
push
xor
out
pop
cmp
fimul
mov
jno
xor
repnz
jge
xor
push
aad
sub
xor
sub
add
ja
push
bound
ss
into
pop
mov
in
inc
cdq
adc
ret
cmp
jecxz
xor
add
iret
cmp
mov
mov
pop
lahf
test
ret
cmp
sub
icebp
ss
es
and
dec
jg
and
mov
mov
xor
push
fbstp
shr
pop
add
test
jb
bound
jg
adc
fidiv
pop
jle
fcomip
std
out
out
pop
das
iret
pop
xor
lahf
dec
push
scas
add
xchg
icebp
je
jecxz
mov
or
outs
movs
aad
psllq
in
shl
sub
fst
(bad)
jnp
aas
jno
fsubrp
fiadd
out
repz
xchg
jnp
xor
jge
jg
cmp
jg
arpl
xor
and
(bad)
jmp
out
repz
or
call
inc
pop
popa
push
push
popf
repz
push
mov
icebp
fsub
add
ss
xor
call
mov
in
mov
or
(bad)
fwait
out
repnz
inc
sub
or
mov
das
shr
rol
push
pop
mov
push
add
pop
retf
into
leave
push
mov
inc
jb
jae
jg
mov
add
ret
mov
das
cld
arpl
sahf
mov
jg
adc
pop
jae
jb
in
stos
push
add
rcr
ret
popa
clc
pop
popfw
(bad)
jno
mov
mov
addr16
and
idiv
pop
mov
lahf
xchg
inc
call
xchg
mov
shr
fld
(bad)
std
daa
fisttp
cld
pop
sub
jmp
gs
(bad)
mov
push
mov
out
pop
xor
add
mov
(bad)
bound
scas
stos
or
cmps
jle
inc
shl
icebp
xor
xor
xor
jb
jo
scas
scas
inc
cmp
pop
xchg
mul
xor
dec
(bad)
aad
push
and
and
push
stos
mov
push
outs
dec
(bad)
scas
(bad)
mov
push
cmps
aas
sub
mov
aas
fimul
fild
jbe
ins
ret
push
jb
inc
in
shr
cmp
lahf
mov
pop
imul
mov
(bad)
shl
pushf
fwait
out
in
je
sbb
adc
inc
dec
icebp
add
xchg
or
jno
jle
sbb
mov
bound
push
sbb
jb
in
ja
inc
mov
jg
sub
repnz
sahf
jb
pop
jns
and
out
sub
xchg
push
mov
ret
outs
or
fisub
scas
and
and
(bad)
rcr
in
mov
(bad)
mov
out
cmc
and
leave
enter
dec
cmp
cs
pop
inc
mov
push
test
lea
std
and
int
sar
push
retf
jne
test
shl
test
jp
dec
ret
cmp
jmp
and
push
bound
fdivr
jle
mov
and
sbb
add
cmp
or
push
shl
jg
inc
scas
mov
push
retf
pop
sbb
call
pop
sub
xor
pop
sub
fisubr
sahf
push
ret
pop
mov
inc
nop
jmp
ret
pop
out
adc
mov
ret
mov
mov
pop
repnz
pop
out
(bad)
out
ja
fld
ds
in
push
outs
ds
push
popf
push
outs
pop
fidivr
jmp
loope
push
sbb
inc
and
push
and
mov
mov
or
psrad
call
or
nop
push
jp
cmps
shl
dec
in
mov
dec
push
add
push
sahf
pop
dec
rcl
mov
mov
jbe
arpl
call
repnz
lea
or
in
adc
pop
mov
adc
and
xor
push
mov
mov
ret
add
xchg
jne
popf
mov
adc
mov
and
aaa
xor
dec
push
or
lahf
add
popf
iret
or
cmp
ret
jo
loope
imul
add
mov
mov
in
mov
sbb
into
mov
add
ins
pop
pop
pop
in
nop
mov
(bad)
jle
scas
sahf
(bad)
pop
xor
retf
sar
cs
idiv
and
arpl
dec
mov
mov
call
arpl
loope
jae
pop
pusha
inc
movs
clc
(bad)
sub
out
jl
repnz
lahf
mov
pop
loop
and
push
and
jmp
daa
(bad)
mov
mov
pop
mov
sahf
push
bound
imul
push
(bad)
out
aam
shl
adc
push
fs
bound
add
in
pop
mov
adc
(bad)
inc
(bad)
ffree
add
sbb
add
lahf
mov
mov
lea
add
lods
or
mov
rcl
xchg
inc
jmp
rol
mov
(bad)
jne
int
movs
fidivr
inc
loop
mov
pop
add
out
cli
ficomp
mov
and
(bad)
mov
test
add
push
push
and
bnd
fisub
dec
arpl
cs
inc
jb
jnp
ror
loopne
dec
xacquire
mov
bnd
cmps
frstor
adc
call
and
pop
outs
outs
in
and
xor
pcmpeqd
mov
inc
lods
sahf
dec
mov
dec
and
add
jbe
pop
adc
jle
je
push
push
mov
iret
out
imul
or
sbb
push
neg
repnz
xor
sahf
sub
gs
and
push
out
or
push
push
jge
pop
mov
out
xchg
push
sbb
mov
das
sbb
adc
cmp
les
xor
inc
xchg
mov
cmp
shr
lock
in
push
jecxz
pmulhuw
push
imul
scas
push
jno
and
mov
push
in
out
cs
fsubr
imul
movs
xchg
pop
sahf
cmp
jmp
mov
ret
add
(bad)
out
mov
fsubp
in
test
popa
xor
add
shr
adc
ret
cmp
loope
adc
push
arpl
and
and
pop
push
js
in
aas
fistp
call
jnp
movs
dec
inc
scas
add
pop
cmp
sub
pusha
leave
cs
cmp
loope
sar
push
mov
adc
lods
outs
or
das
add
mov
pop
call
pushf
sub
(bad)
leave
pop
stc
stc
shl
repnz
or
mov
scas
sbb
aas
ror
fbld
in
enter
fwait
ret
dec
sahf
sub
xchg
mov
and
push
rcl
and
fisubr
scas
fs
fucomp
xor
push
in
sbb
add
pop
dec
test
aas
sbb
out
jb
loop
jg
arpl
stos
jmp
cmp
arpl
sub
gs
jns
pop
xor
mov
int3
scas
into
cmp
lods
sub
push
dec
dec
mov
push
jl
(bad)
mov
cld
push
mov
push
mov
mov
cmp
fld
push
(bad)
jnp
or
dec
popa
enter
jecxz
xchg
lods
xchg
cli
int
push
sbb
pop
dec
mov
movs
jo
sbb
mov
mov
fcmovu
fistp
cdq
shr
fisubr
mov
fadd
enter
and
jecxz
xor
nop
jmp
fmul
cmp
cdq
das
jp
cs
sub
and
out
pop
jecxz
xlat
pushf
in
sbb
inc
inc
in
jmp
pop
jb
call
mov
cmp
sub
call
mov
mov
or
and
push
jle
push
pop
(bad)
pushf
mov
xchg
pop
add
outs
cld
cvtdq2ps
inc
dec
jnp
add
cmps
mov
rcr
test
dec
clc
xchg
add
cli
jmp
push
dec
sbb
pop
clc
xchg
icebp
popa
dec
xchg
jg
push
cmp
xchg
sub
outs
sbb
jge
inc
push
fisttp
xchg
imul
or
call
xor
jl
cmps
cmps
sub
xchg
ins
sbb
push
aas
push
in
xchg
cmp
out
in
sahf
out
adc
aad
sbb
mov
cmps
ins
scas
pop
cmp
dec
cmp
movs
int
fcomip
adc
clc
cld
mov
out
xor
scas
jo
loope
jne
cmp
(bad)
add
mov
stos
into
xchg
in
cmps
das
popa
inc
push
or
adc
ror
stc
push
cmp
loopne
dec
imul
sub
jmp
mov
mov
pop
popf
pushf
push
pop
data16
jmp
leave
sahf
pop
out
jbe
push
inc
test
mov
lds
sbb
adc
jle
into
ror
outs
ss
add
mov
or
outs
jmp
out
aaa
mov
int3
sub
cmp
ja
inc
pop
mov
lahf
sbb
(bad)
jmp
jmp
fild
das
in
sbb
and
out
sahf
fsub
sar
test
into
test
hlt
mov
mov
and
xor
cmps
cmp
jbe
out
push
(bad)
mov
call
or
adc
push
mov
(bad)
dec
mov
dec
mov
pushf
loope
out
push
xlat
shr
retf
repnz
fcmovu
pop
daa
shl
xchg
out
sti
cmps
fs
mov
sbb
push
fldenv
je
daa
dec
push
sub
sbb
cdq
call
(bad)
sub
fdivr
mov
nop
out
nop
outs
jecxz
mov
je
cmp
fisttp
in
enter
(bad)
cmp
in
cmovae
add
jbe
iret
push
pop
sahf
fild
pop
xchg
pop
sub
dec
push
sbb
mov
stos
push
cmp
xchg
outs
push
imul
aam
ins
lods
push
mov
mov
jge
inc
rcr
stos
gs
(bad)
jmp
xchg
ret
sahf
mov
cmp
xor
lahf
jg
mov
lods
imul
shr
xlat
jecxz
iret
(bad)
and
es
push
push
inc
mov
cli
cdq
(bad)
jmp
adc
(bad)
add
add
into
sti
pop
fwait
inc
xchg
jg
jl
fucomp
std
mov
dec
xchg
loop
outs
aam
sbb
jae
jp
lahf
mov
lahf
cwde
repnz
int
cmp
out
mov
aas
cmps
(bad)
add
or
pusha
adc
inc
pop
xlat
mov
xor
jecxz
sub
jno
or
(bad)
fild
dec
push
daa
or
cmp
inc
mov
enter
xchg
rcr
mov
mov
xor
mov
adc
fnstsw
mov
inc
xor
and
das
pop
inc
outs
sbb
mov
ds
aas
(bad)
xchg
pop
movlps
mov
cs
outs
inc
jg
ds
cmc
push
push
jbe
mov
stos
stc
(bad)
mov
xchg
mov
inc
dec
sahf
mov
fwait
call
adc
adc
push
xchg
loop
sti
jmp
imul
xor
mov
cmp
loop
mov
pop
jmp
jbe
inc
lods
and
arpl
push
dec
jle
das
pop
mov
or
das
popf
shr
(bad)
and
mov
in
cmps
xchg
ja
(bad)
pop
pop
lods
in
mov
jecxz
ds
mov
and
pop
arpl
pusha
mov
mov
in
mov
aam
aas
inc
jecxz
pop
dec
fild
jno
jg
pusha
inc
scas
(bad)
repnz
push
retf
repnz
loopne
jl
paddb
jge
mov
pushf
mov
inc
pop
xor
js
(bad)
sub
or
rol
shl
call
sahf
(bad)
repz
add
jbe
(bad)
out
outs
push
sub
outs
addr16
dec
popa
das
sar
out
fild
out
add
shl
arpl
retf
stos
mov
nop
jb
cdq
inc
scas
(bad)
call
scas
rcl
in
shr
push
xor
mov
das
ins
rcl
xchg
inc
inc
fistp
sub
int
sub
xor
and
dec
jo
xchg
(bad)
jnp
jno
into
mov
xor
sti
es
mov
imul
fsubp
jnp
cwde
adc
rcpps
or
sub
xor
push
and
dec
mov
lahf
data16
jno
cs
mov
dec
cs
pop
pop
loope
fwait
sahf
and
push
xchg
lahf
jge
int
call
mov
pop
aad
push
adc
ror
cmps
mov
mov
aam
sbb
scas
add
fwait
cmc
leave
inc
adc
call
les
sub
cwde
pop
out
adc
call
out
sub
rol
mov
rol
iret
inc
push
jne
pop
jb
dec
out
dec
dec
jmp
cmp
iret
push
pop
pxor
lods
ret
add
mov
push
or
xor
adc
mov
jbe
(bad)
ret
mov
mov
jg
(bad)
push
jg
repz
mov
sbb
data16
push
shl
scas
dec
mov
stos
mov
dec
fisubr
cmp
loope
and
xor
pop
out
mov
mov
(bad)
stc
jno
lahf
mov
es
(bad)
sbb
cmp
in
test
outs
mov
fcmovnu
je
mov
mov
cs
inc
bound
cld
shr
in
jno
mov
mov
out
mov
scas
dec
push
scas
xor
cmp
rcl
je
movs
fild
call
jae
mov
bound
loope
fist
mov
out
rcr
(bad)
and
arpl
jnp
dec
cs
pop
xor
in
xor
retf
push
imul
cdq
mov
mov
push
lahf
mov
lods
fidivr
loope
mov
lahf
mov
sti
jmp
and
sub
add
sahf
mov
lock
int
(bad)
sti
into
mov
jnp
pop
dec
pop
sub
cwde
inc
cmp
fwait
jb
(bad)
cwde
fcompp
sub
push
mov
lahf
add
add
into
fidiv
sub
rol
mov
xchg
pop
loopne
outs
ds
lahf
mov
out
scas
cmp
or
mov
sbb
lock
cmp
scas
aas
sbb
imul
and
cdq
dec
loop
fdiv
xchg
icebp
mov
shr
and
enter
jno
sub
sub
sbb
add
xor
stos
ja
mov
out
fmul
dec
sub
into
sbb
add
mov
sbb
das
jg
aas
lea
xlat
mov
mov
enter
lahf
jmp
sub
test
pop
scas
out
pop
stos
sub
pushf
push
sub
fucomip
and
inc
sub
cld
push
into
rol
pop
dec
loope
rcr
ss
lods
and
scas
mov
sbb
adc
mov
mov
jae
iret
ror
mov
add
dec
jae
fadd
inc
(bad)
ror
jbe
sbb
fisttp
mov
imul
inc
or
rol
shl
dec
hlt
cs
lahf
and
jg
fs
lods
or
mov
cmps
retf
imul
in
movs
mov
mov
retf
jnp
or
pop
inc
push
cs
dec
aad
arpl
mov
xchg
adc
scas
stc
scas
loop
adc
xor
pop
sub
xchg
xor
es
int
push
pop
mov
mov
retf
outs
sub
sub
retf
pop
pop
(bad)
js
dec
push
out
lahf
jmp
pop
ror
rcr
adc
jne
and
scas
les
jecxz
add
int
push
icebp
mov
pop
js
iret
imul
add
inc
jns
arpl
inc
pop
fwait
stos
test
sahf
inc
ret
xor
xlat
test
cmps
or
mov
cmps
sbb
ror
mov
iret
or
push
mov
retf
lea
cmps
sub
xchg
jmp
les
bound
or
and
dec
mov
push
iret
sub
das
jmp
dec
sub
iret
or
movs
retf
pop
pop
sub
in
mov
cld
(bad)
or
jp
les
jg
lahf
imul
shl
mov
data16
cmps
imul
mov
imul
mov
pop
cdq
jp
dec
lods
ins
retf
pushf
dec
push
inc
ins
dec
(bad)
in
cmp
jmp
dec
push
scas
stos
stc
popa
lods
pop
cwde
dec
dec
sub
outs
mov
inc
or
leave
cdq
add
(bad)
cld
stos
ins
inc
and
push
add
xor
jmp
retf
cmp
inc
jbe
out
mov
rcl
dec
and
sbb
cmp
mul
int3
sbb
stc
int3
lds
inc
or
retf
fmul
std
stos
bound
outs
xor
das
jmp
dec
lods
or
pop
jmp
xchg
or
xlat
fdivrp
or
sub
dec
push
sahf
std
dec
ret
and
mov
mov
dec
sbb
pop
fmulp
jmp
(bad)
jnp
jge
pop
pusha
jae
iret
push
(bad)
fidivr
pop
js
xchg
aam
fistp
aaa
fwait
call
popf
inc
test
das
aaa
test
in
or
fadd
fs
fsub
mov
in
(bad)
je
pop
pop
dec
and
int3
aaa
mov
cmp
pop
les
test
test
add
dec
stos
call
lods
lahf
mov
jecxz
sbb
test
fcom
imul
pop
mov
adc
(bad)
in
pop
pop
cmp
aam
push
lods
and
fucomip
push
add
test
dec
in
fwait
sbb
sbb
aam
push
dec
mov
inc
(bad)
movs
push
loopne
push
cmp
lods
(bad)
xchg
add
ja
or
fmul
or
xchg
iret
int3
fild
cmp
mov
in
xchg
(bad)
push
enter
xchg
fsubr
lahf
leave
push
add
aaa
sti
mov
pop
add
or
sbb
sti
mov
or
fdivr
movs
(bad)
pop
mov
mov
cwde
mov
dec
mov
push
call
cdq
mov
pop
inc
out
retf
lods
jnp
pop
mov
push
(bad)
xchg
gs
dec
sub
pop
mov
sahf
pop
xchg
inc
and
xchg
sbb
adc
repz
loopne
shr
sti
ret
sbb
jo
sub
jecxz
mov
xor
shl
jo
cmp
lock
mov
clc
ja
stos
inc
mov
xor
jbe
pop
inc
add
push
pop
outs
mov
sbb
inc
xor
push
lock
inc
ins
push
pushf
aam
sub
outs
shl
lock
ja
push
bound
retf
hlt
retf
lock
in
jo
dec
mov
or
pushf
jo
push
arpl
xor
jae
jecxz
jecxz
outs
adc
jno
fsub
bound
jecxz
outs
and
push
push
ret
pop
mov
jecxz
mov
(bad)
out
pushf
jno
aam
sub
data16
adc
jo
push
arpl
and
cmp
push
(bad)
aam
fwait
das
jo
shl
inc
xchg
mov
in
bound
push
inc
jo
out
(bad)
icebp
jecxz
jae
mov
call
push
outs
out
out
jae
and
and
arpl
ja
shl
and
xor
imul
xor
shl
or
jae
out
cmps
jl
push
or
das
push
daa
cld
out
cwde
mov
popa
or
jo
dec
or
arpl
daa
xor
je
ss
and
mov
push
outs
jo
imul
in
pop
xor
xchg
repz
jmp
shl
daa
out
sbb
sub
xchg
jmp
repz
jo
jbe
push
inc
dec
stos
push
and
add
mov
inc
leave
cli
dec
pushw
dec
stos
sub
sbb
inc
cmp
mov
dec
inc
dec
(bad)
int
enter
mov
inc
pop
ret
enter
mov
inc
add
iret
inc
dec
pop
mov
or
inc
mov
xchg
ret
jnp
dec
sbb
lahf
xchg
adc
dec
dec
pop
mov
enter
pop
xchg
dec
rol
xchg
pop
mov
mov
inc
dec
rcr
adc
(bad)
out
ret
adc
ret
jle
sub
mov
add
mov
enter
iret
(bad)
dec
inc
dec
inc
dec
inc
fmul
ret
icebp
mov
dec
dec
imul
mov
sar
push
pop
adc
ins
dec
mov
push
dec
ret
xchg
mov
add
xchg
ret
mov
push
ss
shl
mov
aas
leave
or
bound
mov
cwde
ror
fmul
jno
inc
retf
dec
sbb
xchg
sub
xchg
inc
mov
xor
cmp
dec
or
inc
fmul
xchg
nop
sbb
mov
push
ret
aam
or
rol
xchg
leave
mov
ret
sar
nop
mov
add
mov
jl
mov
mov
repz
jle
jne
scas
rcr
mov
jp
ds
mov
cmp
imul
jl
aaa
ffreep
or
mov
xor
sti
in
sub
jne
aas
test
mul
fcomp
fs
push
mov
pushf
xor
mov
push
mov
imul
movs
xor
mov
test
push
div
out
cmp
jne
lock
or
movs
fdiv
push
std
sbb
mov
dec
and
xchg
sbb
mov
xchg
or
mov
lods
xor
or
sub
sub
sub
inc
and
jle
sub
sar
jno
mov
aas
or
ins
xor
jne
(bad)
cmp
mov
mov
jle
jne
inc
scas
sub
pop
push
xchg
cmp
jnp
mov
in
vmovaps
mov
cmc
int3
mov
inc
int
mov
bound
mov
or
jnp
int
push
push
lods
repz
sbb
dec
dec
scas
inc
jmp
test
(bad)
jge
push
shl
cwde
xchg
ret
inc
add
xor
dec
(bad)
adc
mov
mov
add
fidivr
ret
dec
push
xchg
pushf
pop
xchg
xor
ins
ror
push
fiadd
fdivr
pop
jne
fimul
(bad)
(bad)
add
xchg
xor
xchg
and
add
inc
add
jl
jbe
mov
jbe
mov
fiadd
dec
mov
jbe
and
mov
dec
xor
cmc
pop
out
in
cmp
pop
jle
test
sbb
dec
or
add
mov
mov
mov
daa
and
test
push
pop
dec
dec
sub
inc
fnstsw
in
lahf
sub
ins
jae
aaa
mov
and
xchg
jb
inc
push
sbb
push
mov
es
arpl
fimul
ins
cs
sub
inc
frstor
ret
loope
sbb
(bad)
gs
xchg
sbb
push
or
retf
mov
jl
ret
lock
(bad)
es
int
push
dec
sub
int
pop
out
retf
ret
ret
mov
call
cmp
and
test
in
mov
lods
iret
inc
frstor
das
xor
and
inc
mov
sbb
or
out
pop
ins
push
cmps
xchg
shl
or
pushf
mov
jmp
jecxz
lds
push
inc
rcr
fcomip
ins
cmp
or
xchg
(bad)
loope
mov
sahf
jbe
adc
pop
fstp
jle
mov
pop
mov
mov
push
xchg
dec
cmp
shl
scas
jne
sbb
adc
or
or
scas
mov
in
faddp
stos
repnz
inc
pop
imul
mov
cmc
sub
loope
fnstsw
fidiv
xor
jb
jno
ret
xchg
jbe
jbe
inc
sbb
aas
push
fxam
and
push
mov
xchg
xchg
cmps
mov
sahf
mov
adc
push
inc
out
adc
je
sub
mov
jb
push
fwait
xchg
shl
shl
xchg
mov
jbe
fidivr
into
jb
xchg
ds
fcmovu
mov
mov
icebp
mov
(bad)
jbe
addr16
push
jle
fst
stc
adc
pop
mov
xchg
xor
mov
sahf
jp
rcl
jno
jnp
jno
scas
push
aad
xchg
pop
ret
rcr
(bad)
jno
push
adc
inc
push
shr
jno
push
sbb
push
push
mov
rcl
cmc
loop
push
and
fnstcw
sub
icebp
lods
xchg
dec
xor
push
data16
sbb
(bad)
jmp
push
dec
mov
push
icebp
js
or
pop
mov
mov
cmp
ficom
sub
and
push
icebp
addr16
cmp
dec
loopne
cmp
cs
xchg
cld
mov
fnstcw
inc
sar
jp
xchg
push
inc
cmp
mov
or
loop
icebp
xor
in
add
sbb
mov
fstp
jne
mov
rcl
xlat
rcl
xchg
push
sar
xchg
rcl
icebp
rcr
lock
jbe
lock
cs
mov
ins
xchg
cmp
fcmovbe
adc
shl
and
add
repnz
loope
push
adc
ror
jno
dec
jae
add
pop
ror
mov
icebp
pop
cdq
pop
mov
jns
inc
iret
jo
jnp
aaa
jne
retf
scas
leave
test
iret
mov
out
aaa
or
xchg
mov
mov
je
add
jns
push
(bad)
pop
or
pop
or
sbb
repnz
push
push
jae
adc
test
cwde
or
call
xor
fcom
push
stos
add
xor
adc
jae
pop
xor
add
or
jns
out
push
pusha
mov
enter
in
mov
xchg
mov
aad
sub
fst
cs
jg
pop
push
jae
mov
fcmovne
xor
aaa
push
jae
push
mov
xlat
leave
inc
pop
test
cli
cli
push
mov
out
xchg
mov
int3
adc
mov
mov
push
sbb
iret
stos
iret
xor
das
or
fnstcw
dec
mov
sbb
retf
adc
xor
push
cdq
repz
xchg
test
(bad)
xor
push
cmc
repz
mov
fst
gs
sti
dec
arpl
or
or
fnstenv
push
cdq
mov
xchg
pop
repz
push
cdq
xor
adc
xlat
leave
test
aas
dec
inc
add
mov
or
pop
jae
push
ins
jae
adc
mov
or
dec
rol
xrelease
repz
sahf
pop
push
ss
dec
cmps
or
leave
adc
and
sub
ja
imul
dec
loopne
pop
fwait
aas
nop
jnp
push
ss
dec
mov
in
cmp
push
inc
add
sub
inc
pop
push
out
cmp
call
push
in
sub
xchg
mov
sbb
push
stos
(bad)
mov
test
xchg
repnz
std
pop
fst
push
cmp
mov
mov
cdq
push
je
push
test
repz
push
cli
std
ss
xchg
leave
inc
xchg
cmp
dec
inc
je
adc
popf
icebp
sub
xchg
fild
fnsave
cdq
ss
jb
jbe
mov
sbb
sbb
xchg
fnstenv
call
ret
cmp
pop
xor
jecxz
mov
xor
push
xor
or
mov
lahf
mov
push
xlat
xchg
push
adc
mov
jo
mov
pop
push
sbb
xor
ror
cdq
test
aas
sbb
test
jbe
push
push
(bad)
sbb
cmc
mov
mov
adc
adc
(bad)
jno
mov
cdq
jbe
pop
add
add
xor
inc
std
cmp
adc
cdq
inc
in
div
xchg
aas
sbb
jb
adc
push
enter
dec
sar
neg
shl
jb
lahf
popf
xor
jp
mov
enter
test
stc
gs
xchg
stc
in
dec
icebp
jb
jp
push
popa
lods
lea
xor
adc
cdq
(bad)
adc
jge
test
xor
pop
mov
mov
sbb
jp
ss
mov
xchg
cmp
std
adc
adc
adc
mov
sti
in
lds
push
mov
(bad)
sbb
test
aaa
cdq
pop
lods
loop
xlat
jns
sbb
add
push
data16
cmps
add
pop
cmp
data16
iret
mov
mov
xor
out
or
loopne
into
and
retf
sub
addr16
movntps
lods
(bad)
out
adc
adc
fdivr
dec
addr16
mov
(bad)
fucomp
cmp
bound
cmp
dec
cmps
(bad)
imul
bound
sub
outs
in
stos
ja
stc
(bad)
jmp
push
cwde
dec
cwde
pop
jecxz
and
retf
inc
bound
xor
mov
mov
test
pop
xchg
daa
cmp
addr16
out
cwde
push
out
sti
bound
ret
daa
cmp
out
mov
cwde
dec
addr16
loop
adc
iret
push
stos
fst
inc
(bad)
fbstp
cmp
inc
push
(bad)
cs
daa
aad
stos
pop
cmp
inc
push
(bad)
cs
daa
or
mov
sub
outs
mov
and
(bad)
mov
ret
mov
stc
mov
(bad)
iret
movs
pop
stos
(bad)
and
sub
addr16
stos
and
mov
mov
dec
jno
xchg
and
jle
fsubr
xchg
inc
pop
sub
daa
jmp
imul
sub
adc
daa
mov
fiadd
(bad)
xor
(bad)
in
mov
add
cmps
push
push
scas
jmp
repnz
mov
sub
pop
cmps
cmp
idiv
loop
jg
jp
pop
mov
ficom
enter
movlps
push
dec
loope
mov
mov
adc
sbb
test
enter
mov
xchg
push
mov
enter
cmp
pusha
and
mov
scas
imul
pop
jge
xlat
sbb
dec
pop
(bad)
fmul
imul
or
fisubr
fld
fdiv
scas
xchg
push
ficomp
sub
in
jmp
jb
je
cmp
and
jb
mov
push
or
cmp
fcomip
ror
popf
loope
inc
shl
(bad)
rol
inc
mov
retf
cwde
nop
shr
(bad)
mov
out
es
stos
or
mov
int
popf
jmp
data16
or
int3
lahf
fcom
push
pop
scas
or
sbb
pop
loop
mov
sahf
cmp
fsubr
pop
call
aad
fs
sbb
ror
mov
sub
fcomp
ja
mov
or
imul
shl
push
outs
cmps
into
gs
pop
iret
ins
bound
jno
mov
into
push
sbb
retf
adc
rcl
inc
retf
out
or
and
(bad)
inc
in
mov
mov
test
pop
cli
mov
arpl
cdq
jecxz
jecxz
jecxz
jecxz
arpl
pop
arpl
cdq
jecxz
jecxz
jecxz
arpl
jecxz
jecxz
jecxz
jecxz
arpl
pop
arpl
sbb
stc
jecxz
jecxz
jecxz
arpl
pop
arpl
jecxz
arpl
pop
arpl
cdq
jecxz
jecxz
jecxz
jecxz
sbb
packssdw
clc
jecxz
adc
sub
or
xchg
jecxz
and
jns
(bad)
mov
nop
fld
jns
pop
push
sbb
mov
mov
pop
js
sbb
sbb
cmc
xchg
stc
mov
vmwrite
pop
push
or
cmc
mov
mov
bound
(bad)
mul
pushf
jecxz
jecxz
xchg
xlat
adc
arpl
push
or
nop
(bad)
jns
cmp
cmp
imul
mov
cld
arpl
or
adc
(bad)
cld
xchg
sub
add
pop
or
clc
push
cmps
leave
mov
jmp
js
cmp
fsub
sti
imul
in
stos
jl
loopne
push
xchg
fs
aas
mov
out
dec
js
or
fld
mov
xchg
data16
and
and
dec
xchg
add
adc
or
push
xchg
adc
push
retf
and
push
into
lock
xchg
xor
dec
popf
xor
mov
jae
jo
add
sbb
popf
adc
inc
(bad)
or
sub
lea
ret
adc
mov
jne
clc
and
movs
add
setg
test
push
cmc
pop
into
(bad)
jns
movs
or
bound
loop
lds
jg
push
lahf
dec
out
aas
mov
jbe
xchg
or
push
mov
inc
std
inc
fld
stos
sbb
mov
popw
pop
(bad)
fmulp
and
adc
(bad)
ret
jge
push
adc
(bad)
push
imul
mov
jmp
and
push
ret
jbe
xchg
ret
jbe
push
ret
jbe
push
ret
jbe
push
ret
jbe
xchg
ret
jbe
push
ret
jbe
push
ret
jbe
push
adc
xchg
add
jl
jb
mov
add
dec
cmps
xlat
ret
jbe
ins
test
int3
jo
adc
js
mov
lea
mov
(bad)
imul
push
stc
loope
mov
(bad)
push
repz
adc
mov
xor
mov
xchg
sbb
sbb
xchg
mov
push
repz
xor
add
jp
sbb
xchg
jecxz
mov
mov
add
jne
xchg
add
add
jae
adc
clc
clc
std
lahf
sbb
loop
xor
fldenv
pop
bound
call
repnz
leave
xchg
(bad)
push
jle
outs
aam
int3
xchg
jmp
cwde
shr
jle
das
popa
int
xchg
out
add
aam
ud1
(bad)
adc
xchg
and
call
add
cld
addr16
mov
adc
ss
cmc
popf
push
in
xchg
push
data16
(bad)
sub
sub
aad
arpl
pop
aad
xchg
outs
mov
out
jmp
or
lahf
mov
pop
mov
movs
dec
jne
aaa
scas
pop
and
test
mov
movs
sbb
add
and
mov
fs
aad
xor
sbb
fcmovb
pop
fs
mov
pop
push
mov
xlat
scas
cmps
cmp
sahf
and
sahf
sub
popf
mov
cmp
vunpcklps
xchg
ins
adc
mov
cmc
das
adc
sbb
cmp
xchg
add
(bad)
jne
mov
cmp
cmp
dec
cmp
call
test
or
jmp
test
cmc
fdiv
and
sub
movs
scas
int3
cld
push
outs
test
mov
mov
add
jo
sbb
(bad)
(bad)
out
xlat
sub
xchg
iret
xchg
fcmovbe
add
popf
jle
dec
nop
scas
test
mov
or
daa
push
aas
adc
ret
out
aam
cli
mov
or
jge
sti
mov
daa
sub
or
jae
xlat
scas
mov
lahf
and
push
add
xchg
mov
les
adc
add
xchg
mov
rol
mov
or
or
dec
jae
xchg
sbb
out
(bad)
int
out
test
add
or
lea
mov
push
in
cmp
pop
lahf
fsubr
(bad)
jl
sbb
mov
sbb
(bad)
das
jge
imul
stos
xor
pop
pop
out
cmp
test
jmp
cmp
sbb
pusha
sbb
inc
sub
sbb
stos
dec
push
leave
pop
sub
leave
jl
mov
int3
imul
sbb
pushf
sub
sbb
push
leave
push
cmp
jg
ds
out
js
or
movs
pop
mov
dec
sub
dec
das
retf
pop
(bad)
sub
popf
cmp
(bad)
dec
push
dec
fldcw
mov
dec
jmp
lea
out
sbb
sub
stos
jg
push
cdq
(bad)
cmp
cld
outs
clc
jge
mov
fimul
mov
pop
jns
iret
test
test
jl
pop
test
fisttp
call
test
dec
sbb
test
into
js
fmul
imul
or
clc
pop
stos
lods
cmp
jle
cmp
das
mov
mov
sub
add
or
enter
pop
pop
ins
jg
fnstcw
iret
scas
cdq
mov
js
sbb
sub
mov
repnz
push
or
push
push
fcmovu
mov
inc
jl
dec
popf
fld
mov
push
or
ja
or
clc
leave
cli
aas
or
pop
sbb
jg
push
inc
faddp
leave
cli
inc
or
pop
push
arpl
and
out
div
xchg
out
loopne
dec
dec
iret
push
(bad)
fcomp
inc
into
or
call
cmp
js
call
sub
adc
das
(bad)
enter
dec
fidivr
cmp
mov
enter
pop
out
mov
push
or
cmp
jbe
(bad)
pop
iret
pop
(bad)
jmp
lods
ror
pop
push
mov
xor
add
sbb
rol
xchg
dec
out
rcl
xor
xsha256
cmps
adc
jg
das
fcomi
xchg
loop
(bad)
shl
dec
xchg
pusha
pop
ja
aas
pop
adc
add
xchg
jbe
pop
movs
inc
pop
xchg
xchg
shl
inc
add
into
mov
xor
adc
jnp
xor
repnz
popa
gs
aaa
and
inc
loopne
jb
mov
xchg
aas
shl
lods
lock
sub
push
inc
movs
stos
xchg
ja
out
inc
loopne
(bad)
data16
dec
ja
inc
adc
shl
in
sahf
add
add
in
outs
rol
repz
dec
jl
mov
outs
arpl
jae
pop
inc
push
pusha
jle
cwde
es
lock
jl
nop
sahf
jae
push
inc
or
sbb
shl
xchg
xchg
pusha
lea
jle
dec
je
xchg
stos
fld
jae
jae
jae
xchg
mov
loopne
(bad)
sub
ins
outs
jae
dec
lea
pop
jae
bswap
xchg
lea
lea
xchg
sbb
lods
lds
pop
cmp
loop
jae
add
fisub
xchg
sub
ficom
xchg
js
inc
jp
sbb
adc
movs
xchg
jge
adc
fcom
or
pop
lea
pop
bound
ins
ror
sub
(bad)
cs
addr16
pop
jo
daa
fcom
in
xor
xor
in
push
cmp
inc
fcom
mov
(bad)
sub
cmp
adc
ja
fdiv
cli
push
pop
cmp
fstp
in
not
fsubr
xor
jae
pusha
pop
mov
(bad)
xor
or
pop
je
xchg
mov
cmp
imul
cmps
rol
and
jo
out
int3
test
addr16
sub
icebp
fsub
into
inc
push
clc
jge
and
jbe
(bad)
inc
sub
xchg
mov
and
clc
mov
mov
mov
inc
and
enter
pop
dec
jl
push
js
xchg
and
repnz
retf
test
inc
pop
jg
retf
push
push
jae
fbld
ret
inc
hlt
clc
xor
xor
push
imul
ins
or
(bad)
hlt
repz
repnz
inc
cwde
vpavgb
sub
xor
into
sbb
dec
dec
pushf
js
push
shl
adc
xchg
mov
mov
push
mov
outs
dec
inc
outs
sbb
sbb
mov
cdq
jno
mov
sub
mov
into
pop
outs
neg
in
pop
in
shr
sbb
pop
or
mov
mov
call
ror
sbb
sbb
mov
jp
push
ss
pop
call
(bad)
pop
(bad)
(bad)
imul
dec
outs
loopne
push
jecxz
das
inc
out
ja
pop
pop
sahf
outs
pop
jp
xchg
inc
(bad)
cmp
pop
pop
mov
outs
xchg
in
fs
ins
adc
clc
rcr
sahf
dec
jae
bound
in
jmp
jne
jecxz
pop
cwde
inc
bound
pop
push
addr16
push
add
out
adc
xchg
xor
xor
push
or
stos
pop
and
mov
or
dec
mov
mov
out
push
movs
pop
ins
xchg
daa
fsubrp
into
ja
sbb
dec
mov
push
mov
ds
data16
mov
aaa
ret
scas
push
sbb
outs
(bad)
pop
sahf
pop
mov
int
ja
jno
mov
inc
popa
mov
lock
call
cmp
mov
sti
mov
pop
call
aas
(bad)
fsubrp
sbb
push
dec
jae
in
pop
mov
fimul
outs
push
mov
pusha
xlat
lods
stos
xchg
adc
rcr
mov
mov
out
stos
rcr
je
jbe
out
les
int3
push
mov
sbb
mov
adc
stos
push
add
mov
jb
out
xor
call
das
loop
jns
xchg
sbb
jns
sti
sub
outs
fst
xor
adc
lods
leave
mov
cmp
jns
cdq
add
imul
sar
pop
sub
jns
js
adc
imul
adc
fnstsw
or
daa
jns
call
pusha
push
mov
iret
xor
mov
mov
rcl
xor
mov
movs
ins
les
xor
xor
sub
les
adc
sub
jp
mov
push
das
dec
imul
arpl
xchg
jnp
push
int
xchg
jge
xor
sub
pop
mov
jne
jecxz
or
mov
and
and
aam
mov
adc
sub
dec
xchg
push
xchg
call
repz
add
push
adc
hlt
xor
loop
das
inc
inc
fs
xor
adc
ret
and
and
jg
repnz
stos
icebp
out
xor
imul
pop
icebp
popa
js
fs
xchg
xlat
fcom
cmp
jecxz
repnz
bound
jmp
add
(bad)
out
push
sahf
add
sub
scas
inc
ins
cmc
rol
or
pop
mov
sbb
nop
pop
xchg
ss
xchg
sub
test
daa
daa
movs
add
push
jns
inc
mov
cmps
add
xor
pop
cmps
add
imul
not
ins
cmps
aaa
std
xor
mov
hlt
mov
push
xchg
and
or
movs
pop
push
addr16
sub
arpl
mov
jae
push
leave
jae
movs
aaa
daa
xchg
fcomip
xor
(bad)
dec
clc
or
call
mov
div
jle
and
mov
test
call
mov
rol
ficom
adc
xor
ror
pop
xchg
pop
in
sub
ret
icebp
xchg
sbb
test
jbe
inc
(bad)
or
sbb
xor
into
xlat
outs
cmp
ret
inc
popf
cmp
or
data16
test
xchg
or
retf
push
or
fs
and
xor
sbb
push
(bad)
jge
ret
lock
ret
shr
test
sub
mov
xlat
test
emms
jecxz
and
movs
call
fcom
inc
jb
ss
test
daa
movs
bound
xchg
cmp
cmp
addr16
sub
pop
data16
sbb
pop
rcl
dec
mov
cwde
retf
(bad)
xor
sbb
sets
inc
adc
repnz
xor
in
imul
sub
mov
push
mov
sub
mov
cli
sti
sahf
fdiv
mov
jne
fistp
mov
xchg
cdq
fs
addr16
inc
cmp
jne
xor
js
(bad)
scas
inc
jb
les
cmp
xchg
int3
push
in
xchg
daa
cmp
icebp
add
in
mov
inc
jp
gs
pop
xchg
and
mov
aad
inc
mov
adc
lods
jle
leave
xchg
cmp
and
or
or
pop
jns
pop
xchg
xor
cdq
ss
(bad)
adc
adc
shl
or
loope
pop
pop
xchg
xchg
or
sbb
pop
push
popa
cmp
jbe
out
sub
sub
sub
cld
idiv
mul
pop
daa
pop
sub
mov
jp
pop
push
jne
xchg
lahf
xlat
pop
retf
adc
mov
out
xchg
sar
(bad)
(bad)
rcr
arpl
repz
pop
pop
xchg
xchg
jge
pop
dec
pop
test
pop
jnp
xor
sbb
cmps
ss
sub
jecxz
and
mov
pushf
ja
loop
add
inc
out
sar
cmps
lods
inc
inc
addr16
ja
jne
aaa
sub
jno
popa
sahf
movs
into
inc
js
sub
sbb
shl
jmp
pushf
mov
daa
idiv
fadd
test
call
push
sub
pop
push
add
popf
test
cmps
call
adc
dec
mov
adc
mov
out
addr16
xlat
sub
stos
inc
pop
push
stos
sar
cmp
jne
pop
call
stos
xor
xchg
pop
in
or
cli
or
sub
jo
mov
(bad)
jo
outs
mov
jo
jb
and
inc
xor
scas
fs
(bad)
cmpxchg
sub
push
div
push
lods
ret
jg
pcmpgtw
xchg
mov
(bad)
adc
outs
int3
xchg
rcr
js
adc
and
push
frstpm(287
pop
jmp
retf
ins
mov
int
retf
jae
xchg
sbb
lock
cmps
push
mov
(bad)
clc
xor
mov
clc
xchg
xor
fs
lds
mov
in
in
stos
arpl
and
and
or
and
jne
add
ja
mov
call
fadd
lods
cmps
dec
pop
sbb
fsubp
out
jno
add
cli
fistp
sti
mov
mov
mov
into
dec
fisttp
retf
bound
and
(bad)
(bad)
in
inc
test
xor
xor
xor
xor
mov
cmp
dec
adc
dec
mov
in
rcl
xor
push
cld
mov
push
stc
idiv
xchg
ds
shl
xor
mov
mov
lds
mov
rep
push
push
pop
fist
or
lds
sub
ret
nop
in
mov
fsubr
or
cmps
mov
xchg
pop
xchg
(bad)
mov
mov
shl
nop
and
gs
jae
int
cmp
add
clc
jge
pop
sub
pop
dec
cli
and
cli
pop
aas
daa
mov
sub
les
cmps
sbb
pop
jmp
aaa
mov
adc
dec
and
sub
test
sbb
inc
mov
jno
pop
stc
stos
or
imul
jmp
(bad)
ficom
sbb
iret
pop
pop
adc
imul
mov
ret
add
xor
mov
jbe
push
inc
sbb
jle
mov
call
ss
pop
cld
adc
(bad)
dec
sbb
(bad)
int3
and
inc
xchg
lss
movs
xchg
dec
dec
jp
xor
cmp
fcmovne
sbb
daa
mov
sbb
retf
jnp
leave
in
adc
pop
ss
neg
pushf
aam
xchg
mov
push
add
ds
je
push
inc
leave
xor
mov
mov
adc
jle
push
repnz
lahf
dec
lea
xchg
mov
jle
or
sbb
pop
xchg
jg
push
int3
sbb
adc
add
or
adc
test
dec
sub
inc
dec
xor
popa
sub
and
dec
or
(bad)
nop
sub
xor
push
xor
icebp
jmp
jbe
jne
cmp
cmp
stc
in
les
push
ss
cmc
out
sti
sar
cmp
gs
cmp
jmp
retf
ss
jne
jne
xor
cmp
sti
jecxz
ret
add
push
dec
aaa
sub
hlt
sar
add
outs
jnp
aas
and
std
(bad)
cmp
inc
dec
xor
xor
repz
xor
ins
ja
cmp
ds
std
out
(bad)
cmp
cmp
inc
imul
lock
test
jbe
jne
xor
xor
sti
loope
sar
cmp
bound
cmp
inc
cmp
pop
inc
dec
xor
xor
bnd
xor
ins
jbe
xor
out
cmc
iret
xor
outs
je
xor
cmp
cli
loopne
ret
cmp
cmp
bound
aas
and
(bad)
cld
fld
leave
add
aaa
dec
ja
ja
aaa
sub
scas
cld
mov
pop
outs
outs
xor
jmp
ins
pop
adc
push
xchg
push
dec
repz
aaa
mov
mov
retf
inc
and
add
icebp
lods
movs
das
and
mov
xchg
inc
mov
push
mov
leave
xor
and
inc
pop
(bad)
shl
mov
scas
cmps
mov
es
iret
adc
mov
add
iret
psllq
push
retf
lods
dec
sub
das
arpl
pop
cmp
sahf
and
shl
loopne
xor
add
(bad)
adc
cmp
push
dec
rcl
xchg
inc
mov
ds
in
adc
das
inc
(bad)
fst
adc
(bad)
test
(bad)
jg
ins
mov
dec
dec
ret
add
jle
and
adc
mov
xor
mov
pop
push
lahf
or
push
mov
jae
inc
add
aam
scas
je
cmc
js
shl
aad
add
pop
mov
sbb
jecxz
mov
jecxz
cdq
iret
pusha
inc
mov
je
mov
or
xor
add
sub
ds
sub
nop
vpmuludq
int3
or
mov
and
pop
ja
cmp
push
movs
push
adc
outs
and
cmc
push
mov
mov
cmps
sahf
call
add
xor
(bad)
ja
mov
add
pop
or
iret
and
inc
jb
add
mov
popf
mov
outs
jmp
add
push
out
bound
add
int3
dec
lahf
mov
ja
lds
jecxz
push
pop
pop
shr
and
dec
add
mov
iret
js
shl
xor
shl
jmp
mov
inc
mov
inc
inc
dec
scas
inc
test
sub
or
jecxz
dec
loopne
iret
jle
pop
jmp
aad
dec
sub
pusha
stos
(bad)
jmp
fcom
bswap
aaa
add
xchg
shl
sbb
fwait
repz
(bad)
xchg
and
dec
mov
lock
or
fistp
add
dec
sar
xor
imul
and
pop
idiv
sub
dec
push
retf
and
test
add
xor
mov
cmp
push
loopne
retf
out
cmc
xchg
arpl
add
(bad)
push
jae
in
lock
inc
adc
xchg
(bad)
ror
jbe
scas
fsubr
adc
clc
jbe
and
loop
add
aas
repz
scas
loopne
or
sbb
daa
and
repz
js
lahf
inc
aam
jnp
push
pushf
ficomp
and
neg
and
shr
pop
mov
cwde
xlat
lea
lods
rcl
mov
mov
add
add
shl
and
dec
mov
jae
pop
icebp
popa
jle
shr
mov
ds
pop
shl
repnz
imul
test
or
fld
popa
xor
cmp
shl
add
mul
mov
sub
xor
sbb
call
sar
jno
inc
repz
sub
push
outs
cmps
ins
fdivr
mov
push
xor
add
add
push
lea
mov
adc
fld
retf
outs
add
loope
sub
loope
(bad)
out
lea
pop
bound
cmp
jge
aas
inc
add
sbb
add
and
outs
mov
mov
adc
dec
mov
lock
sbb
cmovno
ds
and
mov
and
xchg
jno
sub
lods
mov
xchg
aad
out
mov
inc
jmp
clc
fisttp
push
js
push
mov
fmul
clc
pushf
out
ret
sub
imul
clc
mov
add
push
cld
scas
sahf
pushf
pop
outs
mov
hlt
popf
int
push
sbb
push
pop
cli
dec
into
(bad)
scas
fcomp
xor
scas
mov
and
(bad)
(bad)
stc
mov
cmp
push
outs
idiv
jnp
int
popa
int3
cmp
jmp
(bad)
push
push
push
sar
push
popa
outs
sbb
pop
jb
mov
mov
fisttp
into
dec
sub
or
cmp
adc
mov
sub
sbb
mov
dec
push
dec
outs
fsubrp
mov
dec
dec
lea
lods
jmp
dec
cs
push
test
fdivr
pop
scas
mov
dec
scas
ss
daa
mov
(bad)
mov
dec
stos
test
and
pop
fidivr
pop
pop
fucomi
mov
aas
jle
push
fstp
(bad)
leave
(bad)
outs
fwait
lods
aas
int
mov
adc
push
fdivr
pop
sbb
call
in
scas
bswap
mov
or
int3
int3
int3
int3
mov
mov
push
push
push
call
add
neg
sbb
neg
ret
int3
int3
int3
test
je
mov
and
shl
add
cmp
jne
mov
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
push
push
jne
mov
mov
cmp
jne
cmp
mov
jne
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
push
lea
push
push
call
mov
add
test
mov
jne
push
push
push
call
mov
and
add
cmp
ja
movzx
jmp
mov
shr
shr
and
cmp
jge
mov
cmp
mov
je
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
mov
shr
shl
mov
mov
pop
pop
add
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
test
je
mov
shr
mov
pop
pop
add
pop
mov
mov
pop
ret
mov
pop
pop
mov
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
jg
inc
add
popa
inc
add
popa
inc
add
bound
lahf
popa
inc
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
cmp
jne
cmp
jg
mov
cmp
jne
mov
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
push
shr
push
and
push
call
add
pop
ret
xor
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
mov
cmp
jne
mov
cmp
jne
push
mov
mov
call
mov
cmp
mov
jne
mov
cmp
jne
mov
jmp
xor
mov
push
add
push
lea
push
call
mov
push
push
lea
push
push
push
call
add
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
push
mov
mov
test
je
push
mov
add
cmp
je
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
pop
cmp
jg
push
push
call
add
add
mov
push
add
push
push
call
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
lea
push
push
push
call
push
call
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
xor
cmp
mov
jne
mov
mov
mov
or
push
mov
mov
mov
lea
push
push
mov
mov
call
add
pop
pop
mov
lea
pop
pop
ret
mov
mov
cmp
je
jmp
lea
movsx
add
cmp
ja
movzx
jmp
mov
mov
call
jmp
cmp
je
mov
mov
call
mov
jmp
or
mov
jmp
movzx
mov
jmp
cmp
je
mov
lea
push
mov
call
mov
add
jmp
xor
cmp
mov
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmp
jne
mov
pop
pop
pop
pop
ret
dec
gs
add
fs
add
fs
add
gs
add
gs
add
inc
add
add
add
add
add
add
add
add
add
int3
push
push
mov
push
mov
xor
xor
cmp
push
mov
jne
mov
mov
add
add
mov
jmp
mov
test
je
mov
lea
mov
mov
lea
push
push
push
push
call
push
push
mov
call
add
test
je
test
mov
jne
mov
jmp
mov
mov
mov
sub
cmp
jg
push
push
call
add
add
push
push
call
add
test
je
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
cmp
jae
lea
cmp
je
add
cmp
jb
mov
push
push
push
push
call
add
pop
pop
pop
pop
ret
sub
lea
push
push
sar
push
call
add
test
je
mov
push
push
push
mov
push
push
push
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
mov
mov
cmp
je
cmp
jne
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
call
add
test
mov
je
mov
mov
push
push
push
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
mov
push
push
call
add
xor
ret
push
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
push
mov
push
mov
mov
mov
push
mov
push
push
push
push
call
mov
add
test
jne
test
jbe
mov
push
push
call
add
sub
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cdq
push
mov
mov
sub
sar
cmp
jl
cmp
jl
mov
push
push
call
add
jmp
lea
cmp
jge
mov
mov
xor
mov
div
push
lea
cmp
pop
ja
mov
mov
imul
imul
mov
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
add
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmp
je
push
push
mov
lea
cmp
push
ja
lea
push
push
push
push
call
add
jmp
push
call
add
test
mov
mov
jle
mov
xor
mov
rep
mov
xor
cmp
mov
jle
mov
mov
test
je
lea
mov
mov
and
test
mov
mov
mov
mov
jne
mov
mov
mov
add
cmp
mov
jl
mov
mov
add
push
add
push
push
push
call
add
mov
pop
mov
pop
pop
pop
pop
ret
int3
push
mov
lea
cmp
push
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
push
lea
and
push
mov
mov
mov
call
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
add
mov
mov
add
cmp
jbe
cmp
jg
add
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
mov
shr
add
cmp
mov
mov
mov
jb
movzx
mov
shl
add
mov
shr
add
sub
xor
cmp
jae
mov
mov
mov
mov
mov
sub
and
mov
test
je
jmp
lea
cmp
jne
cmp
mov
lea
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
mov
jg
or
jmp
mov
xor
test
je
mov
mov
test
jne
push
mov
push
call
add
pop
pop
pop
pop
ret
mov
mov
mov
movzx
movzx
not
and
test
je
pop
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
cmp
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
mov
pop
ret
int3
push
mov
mov
mov
add
cmp
jbe
cmp
jb
push
push
push
call
add
mov
push
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
pop
mov
mov
mov
mov
add
pop
ret
int3
int3
push
push
push
mov
xor
lea
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
or
mov
add
add
add
cmp
mov
jl
pop
pop
pop
ret
int3
int3
push
mov
cmp
jge
push
call
add
test
push
je
mov
mov
push
push
call
add
pop
ret
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
push
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
test
je
cmp
jl
cmp
jg
push
call
mov
mov
add
jmp
push
push
call
add
push
mov
push
push
push
call
add
mov
push
push
call
mov
add
pop
pop
xor
call
add
ret
int3
int3
mov
mov
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
mov
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
cmp
je
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
add
cmp
pop
jl
mov
push
push
push
call
add
ret
int3
int3
int3
int3
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
lea
add
test
mov
mov
jbe
mov
movzx
add
mov
mov
pop
ret
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
call
add
test
jne
pop
ret
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
ret
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
call
test
mov
mov
je
mov
movsx
jmp
mov
mov
mov
mov
test
mov
je
lea
mov
sub
cmp
jne
mov
test
jne
mov
mov
push
push
call
add
test
jne
mov
mov
test
mov
mov
je
sub
cmp
jne
mov
test
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
call
test
je
mov
mov
call
nop
mov
push
call
add
test
jne
cmp
jne
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
push
mov
call
mov
mov
mov
mov
add
test
pop
pop
je
sub
cmp
jne
mov
test
jne
mov
mov
mov
push
push
call
add
test
jne
mov
call
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
lea
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
je
mov
mov
cmp
jne
pop
mov
pop
pop
mov
xor
call
add
ret
mov
or
pop
sub
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
mov
call
mov
lea
cmp
ja
movzx
jmp
test
mov
jne
mov
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
test
mov
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
add
test
push
je
mov
push
push
jmp
mov
push
push
call
mov
add
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
test
jne
mov
mov
jmp
test
je
push
call
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
mov
push
call
add
test
mov
je
mov
mov
mov
mov
lea
sub
sub
push
lea
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
nop
fbstp
inc
jbe
add
jne
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
mov
lea
cmp
ja
movzx
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
lea
cmp
mov
ja
movzx
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
jmp
push
call
add
test
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
xor
xor
mov
mov
lea
lea
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
jge
push
call
add
test
jne
cmp
jle
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
push
call
add
jmp
mov
push
call
add
mov
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
mov
mov
sub
push
add
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
lea
or
inc
add
add
js
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
or
or
or
add
or
or
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
xor
push
mov
mov
lea
cmp
ja
movzx
jmp
call
jmp
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
call
cmp
mov
mov
jl
push
mov
mov
call
mov
add
mov
jmp
cmp
je
jmp
lea
mov
cmp
je
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
jmp
push
call
add
test
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
pop
pop
pop
mov
pop
mov
xor
call
add
ret
call
cmp
jl
push
mov
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
cmp
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
xor
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
push
mov
call
mov
add
test
push
je
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
call
neg
pop
sbb
pop
neg
pop
add
pop
mov
xor
call
add
ret
call
add
test
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
test
jne
mov
push
call
add
test
jne
mov
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
push
call
add
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
lea
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
jbe
pop
pop
movzx
pop
add
pop
mov
xor
call
add
ret
mov
pop
pop
mov
pop
pop
xor
mov
call
add
ret
cmp
inc
add
add
inc
add
test
add
jg
add
jge
add
inc
add
inc
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
sub
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
mov
or
add
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
add
cmp
jne
mov
mov
shl
or
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
je
sub
je
mov
mov
jmp
mov
mov
jmp
mov
mov
test
je
mov
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
fcomp
fnstsw
test
jp
mov
ret
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
add
cmp
push
ja
jmp
fld
sub
fstp
call
add
pop
pop
ret
mov
mov
shl
mov
pop
sub
and
shl
add
pop
ret
mov
mov
shl
pop
sub
and
shl
add
pop
ret
mov
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
pop
ret
lea
add
inc
add
inc
add
test
jmp
inc
or
push
mov
jne
or
pop
add
ret
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
pop
add
ret
push
mov
mov
call
mov
push
jmp
lea
lea
push
push
call
add
test
jne
cmp
jne
cmp
jl
mov
cmp
je
mov
test
jne
mov
push
push
call
add
pop
pop
xor
pop
add
ret
mov
sub
pop
sar
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
mov
push
push
call
mov
add
add
cmp
jge
mov
mov
shl
lea
nop
cmp
jne
add
add
cmp
jl
sub
mov
mov
shl
cmp
jge
mov
mov
shl
lea
jmp
lea
cmp
jne
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
fild
mov
shl
fstp
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
shl
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
push
mov
push
push
xor
xor
xor
cmp
lea
jle
mov
lea
mov
mov
test
jle
add
mov
cdq
sub
sar
cmp
jle
mov
mov
cmp
je
add
add
mov
cdq
sub
sar
cmp
jl
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
push
xor
mov
mov
mov
mov
mov
xor
cmp
mov
jle
mov
cmp
jg
jmp
cmp
jg
mov
mov
mov
sub
shl
add
lea
add
cmp
je
add
add
sub
jne
mov
add
add
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
mov
shl
push
mov
mov
test
je
mov
shl
mov
sub
add
sub
cmp
je
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
mov
lea
add
add
mov
jmp
xor
add
add
test
jne
mov
mov
add
mov
pop
pop
mov
pop
ret
mov
mov
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
cmp
ja
mov
mov
shl
push
mov
shl
push
push
push
call
add
jmp
push
call
add
mov
cmp
mov
jge
mov
mov
shl
sub
xor
push
mov
mov
add
sub
jne
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
xor
cmp
jne
xor
shl
mov
add
mov
mov
pop
pop
pop
ret
add
push
call
mov
add
add
cmp
jle
mov
push
push
call
add
mov
mov
shl
lea
cmp
ja
mov
mov
shl
push
push
push
push
call
add
jmp
mov
push
call
add
cmp
mov
jle
xor
mov
nop
mov
add
add
sub
mov
mov
mov
jne
shl
add
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
xor
push
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
call
add
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
push
mov
je
mov
mov
shl
push
shl
push
push
push
call
add
mov
mov
push
shl
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
lea
cmp
jae
mov
shl
lea
pop
add
ret
fild
fst
fldz
fucomp
fnstsw
test
jp
mov
jmp
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
shl
add
mov
cmp
jne
fcom
fnstsw
test
jnp
mov
test
jne
mov
fstp
pop
add
ret
mov
fstp
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
shl
mov
sub
and
shl
add
mov
cmp
jne
cmp
je
mov
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
sub
je
sub
je
sub
jne
mov
pop
add
mov
jmp
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
mov
push
push
call
add
pop
add
ret
mov
push
mov
call
mov
lea
lea
push
push
call
add
test
jne
mov
test
jne
pop
mov
pop
add
ret
mov
pop
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
cmp
mov
jne
mov
test
push
mov
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
push
push
mov
call
add
cmp
je
mov
mov
add
cmp
ja
push
push
call
add
cmp
jne
mov
sub
cmp
jbe
push
lea
shr
push
push
call
add
cmp
jne
mov
jmp
mov
push
push
call
add
cmp
je
add
push
push
call
add
cmp
jne
lea
pop
pop
pop
ret
mov
mov
sub
cmp
ja
pop
pop
pop
mov
pop
ret
mov
mov
test
push
jbe
mov
mov
shl
cmp
jne
xor
cmp
jbe
push
lea
shr
mov
shl
cmp
jne
mov
jmp
mov
mov
sub
cmp
ja
pop
mov
pop
ret
cmp
je
pop
mov
jmp
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
movzx
mov
cmp
mov
push
mov
mov
jle
mov
mov
call
mov
mov
push
mov
call
add
cmp
jge
lea
mov
mov
mov
shl
mov
mov
mov
mov
sub
jmp
lea
mov
mov
cmp
lea
je
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
add
add
sub
jne
cmp
ja
mov
mov
push
shl
push
push
push
call
add
mov
jmp
mov
push
call
mov
add
mov
jmp
mov
mov
mov
shl
lea
test
mov
jl
mov
mov
shl
lea
cmp
je
push
push
call
add
cmp
mov
jne
mov
test
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
test
jge
mov
cmp
je
push
shl
push
push
push
call
add
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
xor
push
mov
push
push
call
add
ret
mov
mov
shl
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
mov
mov
call
add
add
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
lea
add
add
mov
jmp
xor
add
lea
push
lea
call
mov
mov
sub
add
push
push
push
mov
call
add
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
mov
call
mov
cmp
jne
cmp
jne
mov
cmp
mov
jbe
add
mov
cmp
je
mov
cmp
ja
add
jmp
test
jne
mov
push
mov
mov
call
push
push
push
call
add
pop
pop
pop
pop
ret
lea
mov
call
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
rep
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
mov
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
call
add
cmp
jne
mov
lea
push
push
push
mov
mov
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movzx
and
sub
cmp
ja
push
mov
mov
jmp
mov
or
test
je
test
je
push
push
call
add
mov
test
je
and
movzx
sub
cmp
jbe
pop
pop
ret
mov
cmp
jl
mov
test
je
push
push
call
add
lea
cmp
jne
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
adc
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
mov
mov
xor
test
je
mov
test
jne
cmp
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
or
mov
mov
mov
mov
test
lea
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
xor
cmp
mov
mov
je
test
je
push
mov
push
call
add
mov
cmp
je
test
jne
mov
mov
push
push
push
call
mov
add
cmp
je
cmp
jne
mov
add
push
push
call
mov
mov
neg
sbb
add
push
neg
push
mov
call
add
neg
sbb
neg
test
mov
jne
test
je
mov
mov
add
or
add
add
add
and
or
mov
mov
mov
mov
mov
test
je
test
je
pop
pop
pop
mov
pop
pop
ret
test
jne
mov
test
je
mov
mov
shl
jmp
lea
mov
sub
add
sub
cmp
jl
mov
test
je
push
push
call
add
test
jne
mov
mov
shl
test
je
mov
shl
lea
mov
sub
add
sub
cmp
jne
cmp
jl
mov
jmp
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
test
jne
cmp
jne
cmp
jne
pop
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
and
push
xor
cmp
jle
push
xor
jmp
lea
mov
add
cmp
jl
mov
test
je
mov
push
push
call
add
add
add
cmp
jl
pop
xor
cmp
jle
mov
cmp
je
mov
mov
and
add
cmp
jl
xor
cmp
jle
mov
cmp
lea
je
mov
test
je
push
mov
push
call
add
add
cmp
jl
xor
cmp
jle
xor
jmp
lea
mov
cmp
je
mov
lea
mov
mov
mov
and
mov
add
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
push
push
call
add
cmp
push
push
je
xor
cmp
jbe
lea
cmp
jl
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
mov
test
je
push
push
call
add
xor
cmp
jbe
lea
lea
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jl
mov
test
je
push
mov
push
call
add
mov
mov
cmp
push
mov
push
push
mov
ja
nop
mov
cmp
jae
mov
add
cmp
jbe
mov
cmp
jae
cmp
jl
mov
test
je
mov
push
push
call
add
add
cmp
jb
cmp
ja
xor
mov
add
cmp
jbe
sub
mov
sar
cmp
jg
mov
sub
mov
imul
sar
mov
shr
add
add
add
cmp
jge
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
lea
cmp
jge
cmp
jle
cdq
sub
sar
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
movzx
or
add
cmp
ja
jmp
mov
push
push
mov
call
add
test
je
and
mov
mov
mov
shl
pop
pop
lea
shl
ret
mov
mov
call
cmp
movzx
je
shl
pop
add
pop
ret
pop
lea
pop
ret
mov
mov
mov
push
mov
mov
and
push
mov
call
mov
mov
add
add
pop
lea
shl
pop
lea
pop
ret
mov
push
mov
call
mov
mov
lea
lea
add
add
add
add
add
pop
lea
pop
ret
pop
xor
pop
ret
xor
inc
add
cdq
inc
add
cdq
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
push
mov
test
mov
je
test
je
mov
shl
jmp
lea
mov
sub
mov
add
sub
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
mov
test
jne
mov
mov
shl
test
je
mov
shl
nop
mov
sub
add
sub
cmp
je
mov
cmp
jl
mov
jne
and
jmp
test
jne
mov
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
cmp
mov
jl
mov
test
jne
mov
test
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
movzx
add
cmp
ja
jmp
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
mov
add
mov
push
add
push
push
push
call
add
ret
mov
push
add
push
push
push
call
add
ret
lea
pop
fwait
inc
add
add
fwait
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
movzx
push
push
mov
mov
xor
test
je
lea
mov
mov
sub
test
mov
jbe
cmp
jne
mov
push
lea
push
push
call
add
mov
movzx
xor
test
je
mov
and
and
or
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
test
jne
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
mov
cdq
and
add
sar
cmp
jae
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
cmp
jbe
push
mov
shr
lea
cmp
ja
mov
push
push
push
push
call
add
mov
pop
mov
pop
ret
push
call
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
or
mov
test
mov
je
test
jne
mov
mov
push
push
push
call
add
test
je
mov
push
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
push
add
push
push
call
mov
add
mov
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
cmp
je
mov
call
mov
cmp
jne
pop
ret
push
mov
push
mov
push
push
lea
push
push
mov
call
xor
add
cmp
jle
mov
push
lea
push
push
call
add
add
cmp
jl
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
lea
mov
mov
test
je
test
je
push
push
call
add
add
sub
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
cmp
je
nop
test
jne
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
call
xor
cmp
je
mov
call
cmp
jne
mov
mov
mov
test
je
push
push
call
add
push
call
add
cmp
je
jmp
lea
mov
call
cmp
jne
mov
cmp
mov
mov
je
lea
mov
call
cmp
jne
mov
mov
mov
mov
test
je
lea
mov
test
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
mov
mov
or
lea
mov
mov
mov
test
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
mov
test
je
mov
mov
mov
mov
and
and
or
push
push
mov
call
add
cmp
jne
xor
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
xor
add
sub
sub
lea
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
movzx
cmp
push
ja
jmp
mov
call
pop
pop
xor
pop
ret
cmp
je
pop
pop
mov
pop
jmp
push
call
add
pop
pop
xor
pop
ret
mov
mov
mov
lea
push
push
add
push
mov
call
mov
add
cmp
jl
mov
mov
sub
add
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
add
mov
cmp
jne
push
mov
call
mov
pop
mov
sub
add
pop
pop
mov
pop
ret
xor
cmp
je
call
mov
cmp
jbe
add
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
xor
pop
ret
mov
ins
mov
inc
add
mov
inc
add
pop
and
push
mov
mov
push
lea
add
jne
mov
mov
sub
add
mov
call
sub
cmp
je
test
jg
cmp
je
mov
cmp
jae
mov
add
pop
mov
pop
pop
ret
mov
add
pop
mov
mov
pop
pop
ret
mov
mul
shr
imul
pop
mov
pop
pop
ret
int3
int3
int3
push
push
mov
mov
cmp
ja
xor
lea
mov
mov
mov
mov
mov
mov
cmp
je
lea
mov
call
cmp
jne
call
cmp
je
mov
call
cmp
jne
mov
mul
shr
imul
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
push
push
call
add
ret
mov
mov
mov
and
and
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
mov
mov
mov
test
jne
cmp
jne
mov
or
mov
cmp
jl
mov
test
je
test
je
push
push
push
call
add
pop
pop
ret
mov
and
and
or
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
shl
add
push
push
push
push
call
mov
push
push
push
call
mov
add
pop
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
push
push
lea
push
push
push
push
call
mov
push
push
push
call
mov
add
test
mov
mov
mov
je
lea
sub
sub
test
mov
jne
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
push
push
push
call
lea
add
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
mov
push
lea
push
mov
je
mov
mov
cmp
jb
je
cmp
mov
jne
push
push
push
push
call
mov
mov
mov
add
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
pop
pop
pop
ret
mov
movzx
movzx
and
not
test
je
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
cmp
je
mov
push
mov
mov
mov
mov
mov
pop
push
push
push
mov
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
je
push
mov
push
lea
mov
cmp
jb
mov
mov
movzx
movzx
not
and
test
lea
je
cmp
je
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
call
add
cmp
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
xor
push
push
push
call
mov
push
push
push
call
add
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
push
mov
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
mov
push
shl
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
lea
mov
add
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
movzx
je
shl
add
push
push
mov
push
push
call
add
ret
lea
push
push
mov
push
push
call
add
ret
int3
mov
mov
push
push
xor
test
push
jle
mov
mov
mov
lea
mov
cmp
jg
cmp
jge
sub
je
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
pop
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
cmp
push
mov
ja
jmp
push
push
push
call
add
mov
mov
add
mov
pop
pop
ret
push
push
jmp
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
pop
pop
ret
push
cmps
inc
add
cmps
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
lea
push
mov
lea
push
push
mov
mov
call
add
test
jne
mov
mov
push
push
call
mov
mov
add
mov
pop
mov
pop
ret
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
mov
sub
sar
shl
add
push
mov
mov
test
je
lea
mov
sub
sar
shl
add
mov
mov
test
jne
mov
cmp
ja
nop
mov
sub
sar
shl
add
add
mov
mov
sub
sar
shl
add
mov
mov
sub
sar
shl
add
mov
cmp
jbe
mov
sub
sar
shl
add
pop
mov
ret
int3
int3
push
push
push
mov
mov
push
mov
lea
lea
cmp
ja
mov
mov
shl
push
shl
push
push
push
call
add
jmp
push
call
add
shl
add
mov
pop
mov
mov
mov
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
lea
cmp
ja
mov
lea
add
lea
add
add
add
push
add
add
push
push
push
call
add
jmp
push
call
add
mov
mov
sub
mov
imul
sar
mov
shr
add
lea
lea
lea
mov
lea
pop
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
cmp
mov
jg
add
mov
jmp
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
mov
je
cmp
je
mov
mov
mov
push
mov
push
mov
push
mov
sub
sub
mov
cmp
mov
mov
jne
mov
jmp
sub
mov
mov
imul
sar
mov
shr
add
mov
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
mov
lea
add
push
mov
push
mov
call
mov
mov
add
add
mov
mov
mov
add
pop
pop
mov
pop
mov
pop
xor
call
add
ret
int3
int3
sub
push
movzx
push
push
mov
xor
cmp
mov
jge
mov
sub
add
mov
mov
mov
add
sub
jne
test
je
mov
mov
mov
sub
cmp
mov
jb
push
call
add
push
push
push
call
mov
add
xor
test
jle
mov
neg
shl
mov
jmp
lea
mov
mov
mov
lea
push
push
push
add
call
mov
add
mov
mov
mov
mov
mov
mov
add
cmp
jl
mov
mov
push
push
push
call
mov
push
push
push
call
fild
mov
add
fstp
mov
mov
shl
mov
sub
test
jle
add
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
jne
test
je
mov
lea
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
call
mov
sub
mov
add
cmp
je
push
push
push
call
add
mov
cmp
jbe
lea
mov
mov
mov
mov
mov
mov
sub
sub
cmp
ja
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
add
mov
mov
add
mov
mov
mov
mov
pop
mov
pop
ret
sub
push
push
push
push
mov
call
mov
mov
mov
add
cmp
jne
test
je
mov
mov
test
lea
mov
je
push
push
push
call
add
test
jne
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
test
push
je
call
mov
lea
mov
mov
test
mov
mov
mov
mov
mov
mov
je
push
lea
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jne
pop
xor
cmp
jle
jmp
lea
sub
mov
add
cmp
jg
mov
pop
mov
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
lea
nop
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
sub
mov
add
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
mov
pop
ret
add
push
push
call
add
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jbe
push
push
call
add
mov
mov
shl
sub
mov
mov
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
call
mov
mov
mov
mov
add
cmp
jb
push
call
add
cmp
mov
je
mov
mov
push
mov
lea
push
push
push
call
mov
mov
movzx
push
push
push
call
xor
add
mov
cmp
mov
jbe
push
lea
nop
push
call
mov
movzx
add
add
add
cmp
jl
mov
pop
mov
mov
mov
mov
sub
mov
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
pop
pop
ret
add
push
push
call
add
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
mov
call
mov
mov
push
push
push
call
mov
add
cmp
mov
mov
jle
mov
sub
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
add
xor
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
push
add
push
call
mov
mov
mov
cmp
je
push
call
mov
mov
push
call
add
push
call
int3
int3
int3
int3
int3
int3
mov
cmp
jle
push
push
call
add
push
push
call
add
cmp
jle
push
push
call
add
add
mov
ret
int3
int3
int3
mov
cmp
push
push
mov
push
je
mov
call
mov
mov
mov
sub
mov
mov
mov
sub
cmp
mov
jne
push
mov
movzx
mov
shl
cmp
jg
mov
cmp
jg
lea
push
jmp
add
push
push
call
add
mov
add
cmp
jne
movzx
shl
lea
lea
cmp
jbe
mov
jmp
mov
sub
sar
sub
push
mov
call
mov
add
add
mov
mov
cmp
jne
call
jmp
add
mov
mov
mov
mov
movzx
shl
add
mov
mov
mov
mov
xor
mov
mov
mov
cmp
pop
jae
jmp
lea
mov
add
cmp
jb
test
mov
mov
je
add
push
push
push
call
add
add
pop
pop
xor
pop
ret
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
cmp
jne
call
jmp
add
mov
mov
add
mov
add
mov
mov
mov
mov
add
mov
mov
test
je
push
push
push
call
add
mov
mov
mov
mov
push
call
add
test
jge
pop
pop
mov
pop
ret
mov
shl
sub
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
movzx
cmp
jb
jne
push
push
call
add
mov
mov
push
push
push
call
add
test
jne
push
push
call
add
mov
add
mov
cmp
jb
push
call
add
pop
ret
cmp
jb
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
mov
jne
mov
push
add
push
push
call
add
test
jne
jmp
mov
mov
mov
cmp
je
mov
push
push
call
add
test
je
mov
mov
mov
jmp
mov
mov
mov
sub
mov
imul
sar
mov
shr
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
test
jne
mov
cmp
je
mov
call
pop
ret
movzx
cmp
jb
mov
call
pop
ret
mov
mov
shl
push
sub
push
add
push
push
mov
mov
call
mov
add
test
je
mov
push
push
push
mov
call
mov
mov
add
mov
mov
add
pop
pop
ret
movzx
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
movzx
mov
mov
sub
push
mov
mov
mov
mov
mov
push
push
push
mov
mov
call
mov
add
test
je
mov
add
push
push
call
push
push
push
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
add
cmp
mov
jle
sub
mov
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
mov
add
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
push
mov
mov
sub
push
push
mov
lea
push
push
push
mov
mov
call
mov
push
mov
mov
push
push
push
call
add
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
add
test
jne
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
cmp
je
push
push
push
call
add
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
test
jne
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
cmp
jne
push
push
call
push
push
call
mov
add
push
push
push
call
add
ret
push
push
push
call
mov
add
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
push
lea
push
push
push
mov
call
add
push
push
mov
call
add
test
je
lea
push
push
push
call
add
push
push
call
add
test
jne
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
call
add
cmp
jne
push
push
push
call
push
push
push
call
push
push
mov
call
push
push
push
call
add
lea
push
push
push
call
add
test
jne
mov
push
push
jmp
push
push
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
lea
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
add
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
push
mov
call
add
push
push
call
add
test
je
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
add
push
push
call
push
lea
push
push
call
mov
add
test
je
push
push
push
call
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
lea
push
push
call
push
push
call
push
push
push
call
add
push
push
call
push
lea
push
push
call
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
push
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
add
cmp
jne
push
mov
mov
mov
push
push
call
mov
add
test
pop
jl
push
push
call
add
push
push
push
call
add
pop
ret
push
call
add
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
push
push
xor
call
add
test
je
mov
push
push
call
add
test
je
or
push
push
call
add
test
je
or
cmp
jle
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
push
call
push
push
call
add
cmp
je
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
push
call
add
test
jg
push
push
call
xor
add
mov
xor
jmp
push
lea
push
push
call
push
push
push
mov
call
push
add
push
push
call
mov
push
mov
call
add
mov
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
mov
jmp
mov
push
push
call
push
mov
call
add
test
je
cmp
je
push
push
push
call
add
jmp
call
push
push
call
push
push
call
push
push
call
add
xor
test
je
mov
mov
test
je
mov
add
test
pop
je
mov
add
mov
lea
push
push
call
push
call
push
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
call
add
push
push
call
call
push
lea
push
push
call
add
test
je
push
push
mov
lea
mov
xor
repz
je
lea
lea
mov
add
test
jne
sub
push
push
lea
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
call
add
push
push
push
push
call
add
push
call
call
add
push
push
call
add
push
push
call
call
add
push
push
call
call
push
lea
push
push
call
add
test
jne
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
mov
push
push
mov
call
add
cmp
jne
push
push
mov
call
add
mov
jmp
mov
mov
mov
lea
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
jmp
xor
cmp
sete
mov
push
call
add
cmp
jne
push
push
jmp
lea
push
push
call
add
test
je
push
push
push
call
add
push
push
push
call
lea
push
push
push
call
add
test
je
add
cmp
jle
cmp
je
lea
push
lea
push
push
call
add
test
jne
mov
sub
mov
jmp
push
push
push
call
lea
push
push
push
call
add
test
je
lea
add
push
lea
push
push
call
add
test
jne
mov
mov
jmp
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
mov
add
test
jle
push
push
push
call
add
mov
cmp
je
mov
push
push
push
call
jmp
mov
mov
cmp
jne
push
push
call
add
jmp
cmp
je
cmp
je
mov
push
lea
push
push
push
call
add
jmp
push
push
push
call
add
push
call
sub
push
push
call
add
lea
push
push
push
call
add
test
jne
push
call
sub
push
push
call
add
mov
pop
pop
pop
pop
xor
mov
call
add
ret
mov
push
push
push
call
add
mov
ret
int3
int3
int3
push
mov
push
push
call
fabs
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
push
call
fstp
call
fstp
fld
add
fstp
push
call
fld
add
fstp
push
call
add
mov
pop
add
ret
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
fdiv
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fmul
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
fstp
call
fstp
add
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
push
mov
push
push
call
add
push
push
push
call
fstp
call
fstp
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jne
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jp
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
call
cdq
mov
idiv
mov
push
mov
fild
fdiv
fstp
call
add
sub
je
sub
je
sub
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
mov
push
push
mov
call
mov
add
cmp
jle
push
push
push
call
add
sub
add
mov
fild
sub
fmul
fstp
call
fiadd
jmp
push
push
call
add
cmp
mov
jge
push
push
push
call
add
fild
sub
fmul
fstp
call
fadd
jmp
fld
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
mov
push
push
call
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
lea
push
push
push
call
mov
push
push
mov
call
add
test
jge
lea
xor
test
setl
push
mov
push
push
push
sub
and
mov
call
add
test
jge
lea
xor
test
setl
pop
sub
and
cmp
jge
mov
mov
cmp
jle
mov
cmp
jg
sub
add
push
lea
push
push
call
add
pop
pop
mov
pop
pop
ret
push
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
lea
push
mov
push
push
call
lea
push
push
mov
call
add
cmp
je
jmp
lea
nop
sub
lea
cmp
jb
lea
push
call
add
mov
mov
mov
mov
add
cmp
jne
sub
lea
push
call
mov
add
pop
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
lea
push
push
push
call
push
push
mov
call
lea
push
push
mov
call
add
test
jle
lea
mov
push
lea
push
push
sub
call
add
test
jg
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
lea
push
push
push
call
mov
push
push
push
mov
call
add
test
jge
lea
mov
xor
test
setl
sub
and
push
push
push
call
add
test
jge
lea
xor
test
setl
sub
and
test
jg
mov
mov
cmp
jbe
mov
cmp
jle
pop
pop
xor
pop
add
ret
mov
sub
add
lea
cmp
jg
push
push
call
add
push
push
push
push
call
add
xor
test
jle
mov
lea
mov
movzx
push
push
call
add
add
cmp
jl
pop
mov
pop
pop
pop
add
ret
int3
sub
mov
xor
mov
push
push
push
mov
push
call
mov
lea
push
push
call
mov
add
cmp
jl
push
mov
push
push
call
mov
movzx
add
cmp
je
push
push
push
call
add
lea
cmp
jb
lea
push
call
add
mov
mov
add
add
cmp
jle
pop
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
push
push
call
lea
push
push
call
lea
push
push
push
call
add
test
je
push
push
call
add
lea
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movsx
add
cmp
je
cmp
je
mov
pop
ret
cmp
jne
add
nop
cmp
jne
mov
push
push
call
add
mov
add
cmp
jne
cmp
je
add
cmp
jne
lea
pop
ret
cmp
jne
mov
push
push
call
add
lea
pop
ret
int3
int3
int3
push
push
mov
call
add
add
cmp
ja
movzx
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
xor
test
sete
mov
push
call
add
test
je
mov
pop
ret
xor
test
sete
pop
ret
xor
cmp
sete
pop
ret
nop
(bad)
rol
rcl
inc
add
rol
in
rol
cli
rol
pop
rol
adc
inc
add
rol
rol
cmp
inc
add
inc
add
or
add
or
or
or
add
or
add
or
or
or
int3
push
push
push
mov
cmp
push
mov
jne
mov
add
mov
add
cmp
jae
lea
lea
mov
cmp
jne
movzx
add
mov
add
call
test
jne
mov
jmp
cmp
jne
cmp
jae
movzx
add
add
cmp
jg
movzx
cmp
jg
mov
pop
pop
pop
pop
ret
movzx
cmp
je
add
add
cmp
jb
xor
cmp
pop
pop
sete
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
mov
je
cmp
jne
mov
push
push
call
add
mov
cmp
je
pop
xor
pop
ret
mov
movsx
mov
add
cmp
push
movsx
jae
movsx
cmp
jne
sub
jne
pop
pop
lea
pop
ret
cmp
jne
add
add
cmp
jb
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
xor
cmp
jae
push
mov
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
mov
add
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
add
add
cmp
jb
test
pop
jl
mov
add
mov
push
lea
push
push
call
add
test
jne
sub
jns
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
mov
lea
push
mov
push
push
call
add
test
jne
mov
cmp
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
jmp
lea
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
mov
lea
push
add
push
push
call
add
test
je
pop
pop
pop
pop
ret
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jl
mov
push
push
call
add
mov
mov
push
mov
mov
push
add
push
mov
call
add
test
pop
jne
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
js
lea
lea
cmp
je
sub
sub
test
jge
mov
push
push
call
add
mov
mov
push
mov
sub
push
push
mov
call
add
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
add
push
push
mov
js
cmp
jge
cmp
jne
mov
push
push
call
add
mov
mov
sub
cmp
jb
cmp
mov
push
mov
mov
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
pop
jne
lea
pop
pop
ret
pop
xor
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
mov
lea
movsx
cmp
ja
movzx
jmp
mov
cmp
je
cmp
je
movzx
push
call
add
test
je
movzx
mov
mov
call
mov
test
je
add
jmp
mov
add
cmp
je
mov
push
push
call
add
mov
call
cmp
mov
jne
xor
jmp
mov
lea
movzx
push
mov
call
add
test
jne
movzx
push
mov
call
add
test
jne
xor
pop
pop
pop
pop
ret
mov
lea
mov
call
mov
test
je
add
jmp
cmp
je
mov
mov
call
cmp
mov
mov
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
add
push
mov
mov
call
mov
add
jmp
movzx
mov
call
mov
test
je
mov
jmp
xor
movsx
add
cmp
ja
movzx
jmp
test
je
lea
push
lea
push
push
call
add
test
jne
lea
jmp
test
je
add
mov
jmp
cmp
lea
mov
mov
jne
push
add
push
call
add
pop
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
pop
ret
add
mov
mov
push
call
add
pop
pop
pop
pop
ret
pop
mov
pop
pop
pop
ret
mov
xor
cmp
pop
setne
sub
and
pop
pop
pop
ret
push
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
push
push
add
push
push
call
add
pop
pop
pop
pop
ret
push
push
push
mov
call
add
pop
pop
pop
pop
ret
lea
jne
inc
add
inc
add
xlat
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
call
xlat
inc
add
(bad)
inc
add
xlat
inc
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
mov
push
mov
je
cmp
jbe
pop
xor
pop
ret
sub
sub
push
push
jne
pop
xor
pop
pop
pop
ret
lea
mov
mov
movsx
push
push
push
call
add
test
je
add
cmp
lea
mov
mov
jb
lea
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
je
mov
sub
add
mov
jne
pop
pop
pop
xor
pop
ret
pop
pop
pop
add
pop
ret
int3
int3
cmp
jl
test
jne
sub
push
mov
push
push
call
add
ret
mov
push
push
call
add
ret
push
mov
cmp
jne
mov
push
push
call
add
mov
mov
push
push
push
call
add
pop
ret
cmp
jne
mov
sub
mov
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
test
push
jne
test
je
mov
mov
push
push
push
call
add
xor
test
jle
mov
mov
call
add
cmp
jl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
push
push
lea
push
push
push
call
lea
push
push
push
mov
call
mov
push
push
push
mov
mov
call
add
test
jge
lea
xor
test
setl
sub
and
mov
sub
mov
jns
xor
jmp
cmp
jbe
mov
cmp
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
sub
push
push
mov
add
push
call
add
test
je
mov
sub
lea
push
push
call
mov
add
push
push
call
add
pop
pop
mov
pop
add
ret
mov
cmp
jne
add
mov
mov
jmp
mov
add
add
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
mov
add
cmp
jae
cmp
jne
mov
jmp
cmp
je
sub
add
push
push
call
sub
push
push
call
push
push
lea
call
add
pop
pop
add
pop
add
ret
push
push
lea
call
add
pop
pop
pop
add
ret
push
call
add
pop
pop
mov
pop
add
ret
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
lea
push
push
push
call
push
push
push
mov
call
mov
add
push
push
mov
mov
mov
mov
call
mov
add
add
cmp
ja
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
add
cmp
jbe
pop
pop
pop
xor
pop
add
ret
mov
sub
cmp
jne
add
push
push
call
push
push
call
mov
add
test
jne
test
je
mov
mov
jmp
mov
mov
mov
push
push
push
call
add
xor
test
jle
lea
mov
mov
lea
call
add
cmp
jl
mov
pop
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
lea
push
push
push
call
xor
add
cmp
mov
mov
jbe
lea
cmp
je
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
movzx
add
push
call
add
test
jne
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
mov
cmp
jne
mov
mov
sub
push
push
push
call
add
jmp
mov
movsx
mov
sub
call
push
call
mov
add
add
cmp
jb
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
mov
call
add
add
cmp
ja
jmp
mov
push
mov
push
mov
call
add
pop
pop
pop
ret
push
push
call
mov
push
push
mov
call
push
push
push
call
add
jmp
mov
push
mov
xor
call
push
push
call
add
pop
push
push
call
add
test
jne
push
push
call
mov
sub
push
push
push
call
mov
add
push
call
add
pop
pop
pop
ret
push
push
call
add
test
jne
push
push
call
push
push
call
push
push
push
call
add
mov
push
call
add
pop
pop
pop
ret
xchg
fiadd
xchg
fiadd
iret
fiadd
lods
fiadd
sub
mov
xor
mov
push
push
push
push
mov
lea
push
push
push
call
push
push
push
mov
call
push
push
mov
call
mov
add
push
push
push
mov
call
add
cmp
mov
jne
add
mov
jmp
mov
cmp
mov
je
cmp
je
cmp
je
cmp
je
push
push
push
call
add
lea
push
push
call
mov
add
add
cmp
mov
mov
mov
jle
push
lea
push
push
mov
call
mov
add
test
je
add
lea
push
push
lea
call
add
cmp
jbe
mov
jmp
mov
cmp
jae
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
cmp
jne
mov
cmp
jl
mov
sub
push
lea
push
push
call
lea
push
call
mov
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
push
push
push
lea
push
push
push
call
lea
add
cmp
mov
jb
push
call
add
mov
mov
add
cmp
je
lea
sub
movsx
cmp
ja
movzx
jmp
cmp
jb
push
call
add
mov
mov
add
cmp
jb
push
call
add
mov
mov
mov
jmp
push
push
push
call
add
jmp
push
push
push
call
add
jmp
cmp
jb
push
call
add
mov
mov
mov
add
add
cmp
jne
sub
cmp
pop
pop
jb
push
call
add
mov
mov
add
pop
ret
nop
mov
inc
add
inc
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
push
push
mov
mov
je
movsx
push
push
call
add
test
je
add
cmp
jne
mov
sub
cmp
jb
push
push
call
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
add
cmp
jne
movzx
add
push
call
add
test
je
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
push
push
call
add
mov
sub
lea
push
mov
add
push
push
call
add
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
lea
push
mov
push
push
call
mov
lea
mov
push
lea
push
mov
call
add
cmp
jae
cmp
je
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
add
cmp
jne
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
lea
push
mov
add
call
mov
movsx
sub
add
add
cmp
ja
movzx
jmp
push
push
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
lea
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
nop
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
fnstcw
movzx
or
mov
fldcw
fistp
mov
push
fldcw
jmp
push
push
call
fstp
lea
push
lea
push
call
add
jmp
mov
lea
mov
call
jmp
lea
push
push
push
call
lea
push
push
mov
call
add
test
jne
cmp
jb
push
push
call
lea
push
call
jmp
push
lea
push
lea
push
call
add
lea
lea
mov
mov
add
test
jne
sub
push
lea
push
lea
push
call
add
cmp
jb
lea
push
call
add
mov
mov
pop
pop
pop
pop
xor
call
add
ret
movsx
push
push
push
call
add
jmp
nop
inc
in
add
in
add
inc
add
inc
add
inc
add
inc
add
out
add
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
push
push
push
push
push
push
push
push
push
add
add
add
add
push
push
push
push
add
add
add
add
int3
int3
int3
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
add
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
push
call
add
call
mov
pop
ret
int3
int3
push
mov
push
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
lea
push
call
add
test
jne
push
push
call
add
pop
mov
xor
call
add
ret
lea
push
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
mov
fild
mov
sub
fdiv
fstp
push
call
mov
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
push
push
call
push
push
mov
call
add
test
jg
push
call
add
jmp
push
push
call
add
call
mov
mov
cmp
jne
lea
push
call
add
add
jmp
lea
push
call
add
test
mov
jne
push
call
add
jmp
push
push
mov
mov
mov
xor
repz
jne
push
push
push
call
mov
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
add
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
test
jl
push
push
call
push
push
push
call
add
jmp
lea
push
push
mov
mov
call
mov
add
test
je
cmp
jne
cmp
je
mov
mov
push
add
lea
push
mov
lea
push
push
call
push
lea
push
lea
push
call
add
jmp
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
mov
add
test
jne
lea
push
call
add
pop
pop
mov
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
add
test
jg
push
call
add
jmp
push
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
mov
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
jne
or
jmp
push
push
call
add
mov
push
push
call
lea
push
mov
call
add
pop
mov
and
cmp
mov
jne
push
call
add
mov
pop
add
ret
fild
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
push
sub
fstp
push
push
call
call
push
push
mov
mov
call
call
push
push
push
push
call
fstp
add
push
call
add
pop
pop
mov
pop
ret
int3
push
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
call
mov
push
call
mov
push
push
push
push
call
push
push
push
call
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
add
test
je
push
push
call
add
test
je
push
push
push
call
add
test
je
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
add
pop
mov
pop
ret
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
mov
push
call
add
xor
cmp
setne
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
call
mov
mov
push
call
add
mov
neg
sbb
add
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
je
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
mov
add
test
jne
push
push
push
call
add
mov
pop
ret
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
mov
push
push
mov
call
push
push
call
add
call
test
mov
jne
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
test
jle
push
push
push
push
call
mov
add
test
je
push
push
push
call
push
mov
push
push
mov
call
push
push
call
mov
push
push
call
add
test
mov
pop
jne
push
push
call
jmp
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
add
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
push
push
call
add
cmp
jne
fld
mov
sub
fstp
push
call
add
mov
add
ret
xor
add
ret
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
call
lea
push
call
push
mov
push
push
call
add
test
je
mov
lea
lea
mov
add
test
jne
sub
je
cmp
je
add
lea
push
call
push
mov
push
push
call
add
test
jne
lea
push
call
push
push
call
add
xor
cmp
sbb
pop
neg
pop
mov
xor
call
add
ret
mov
lea
lea
push
mov
call
mov
add
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
mov
push
push
lea
push
push
mov
call
add
mov
lea
push
call
add
cmp
jbe
mov
push
push
push
push
call
add
add
sub
je
cmp
je
lea
push
call
add
test
je
push
push
call
add
test
ja
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
call
mov
sub
push
mov
call
add
test
jne
push
mov
call
mov
add
mov
add
push
call
add
test
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
pop
ret
push
add
push
push
call
mov
add
mov
sub
test
je
push
push
call
add
cmp
jne
push
push
call
add
test
jne
push
call
mov
push
push
call
push
push
push
call
xor
add
cmp
setne
mov
jmp
push
mov
call
mov
jmp
push
push
push
call
mov
add
test
je
cmp
je
push
push
push
call
add
movsx
sub
je
sub
je
sub
jne
push
mov
call
mov
jmp
push
mov
call
mov
jmp
push
or
call
mov
add
add
cmp
jne
jmp
push
push
push
call
add
pop
pop
pop
pop
ret
test
jne
push
push
call
push
call
add
pop
mov
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
test
jne
push
push
call
add
push
call
push
mov
call
add
test
je
call
mov
push
call
push
push
push
call
add
pop
pop
pop
ret
test
je
pop
pop
mov
pop
ret
push
push
call
add
test
je
push
push
call
push
push
call
add
call
pop
pop
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
mov
call
add
sub
mov
je
jmp
mov
sub
push
push
mov
call
add
cmp
jne
test
je
push
push
call
fstp
mov
push
push
call
add
test
jg
xor
add
cmp
jne
call
test
mov
je
push
push
call
add
mov
pop
pop
mov
pop
ret
lea
push
push
push
call
add
test
je
mov
mov
push
push
push
push
call
add
cmp
jne
mov
jmp
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
mov
call
add
pop
pop
ret
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
push
call
push
push
push
mov
call
mov
push
push
push
call
add
test
pop
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
push
push
push
call
add
mov
call
test
mov
jne
push
push
call
add
lea
pop
pop
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
push
push
call
add
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
add
push
push
call
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
int3
push
mov
push
push
call
add
test
jg
push
push
push
call
push
call
add
pop
ret
push
push
push
push
push
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
add
push
call
push
push
call
push
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
mov
add
cmp
jl
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
add
add
cmp
jle
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
push
push
call
add
test
jne
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
fldz
push
mov
fstp
push
push
push
call
push
call
push
push
call
add
test
je
push
push
call
push
push
call
add
cmp
jne
push
push
call
fld
fcomp
add
fnstsw
test
jp
fstp
jmp
fstp
push
push
call
add
test
jne
fld
sub
fstp
push
call
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
add
call
add
sub
je
sub
je
push
push
call
add
pop
pop
pop
ret
push
push
call
mov
add
cmp
jge
mov
cmp
jle
push
jmp
lea
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jg
pop
push
push
push
call
add
pop
pop
xor
pop
ret
mov
push
push
push
call
add
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
mulpd
addpd
movapd
mulsd
mulpd
movapd
mulsd
addpd
pshufd
mulsd
sub
mulpd
addsd
xorpd
pshufd
mulsd
pshufd
addsd
movsd
pinsrw
subsd
addsd
addsd
addsd
subsd
subsd
subsd
subsd
orpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
movlpd
movlpd
movlpd
addsd
andnpd
orpd
sub
movlpd
fld
add
ret
movlpd
xorpd
addsd
mov
jmp
movlpd
xorpd
sub
movsd
pextrw
and
sub
cmp
jb
addsd
orpd
mulsd
movlpd
fld
add
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
subpd
mulsd
addsd
mulsd
subsd
pshufd
addsd
subsd
subsd
movlpd
fld
add
ret
sub
cmp
jae
psrlq
psllq
pmovmskb
andnpd
subsd
movsd
mulsd
addsd
orpd
subsd
mulsd
movsd
subsd
sqrtsd
and
shr
neg
movsd
andpd
psllq
pextrw
orpd
movd
pshufd
sub
add
mulsd
mulsd
mulsd
mulsd
subsd
andpd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
addpd
movsd
mulsd
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
addsd
and
pinsrw
movsd
pshufd
addsd
subsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
movapd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
pshufd
mulpd
pshufd
subsd
pshufd
subsd
subsd
subsd
subsd
subsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
xorpd
andpd
movlpd
movapd
mulsd
movapd
subsd
movapd
pshufd
sqrtsd
mulpd
pshufd
pextrw
mulpd
addpd
movlpd
mulpd
cmpltsd
mulsd
addpd
pshufd
mulsd
andpd
mulpd
andpd
pshufd
subsd
addsd
mulsd
subsd
subsd
mulsd
pshufd
subsd
divsd
sub
addpd
mulpd
pshufd
addsd
and
pinsrw
pshufd
addsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
pextrw
shr
neg
movd
pshufd
movlpd
movlpd
andpd
andpd
addsd
sub
movlpd
fld
add
ret
movlpd
movlpd
addsd
sub
movlpd
fld
add
ret
xorpd
addsd
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movq
unpcklpd
movapd
andpd
comisd
jp
jae
comisd
jae
comisd
jb
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
comisd
jae
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
movq
xorpd
comisd
jae
movq
movq
movq
addsd
psrlq
psubd
movd
lea
movq
movq
subsd
mulsd
addsd
divsd
unpcklpd
jmp
mov
movq
movq
divsd
unpcklpd
movq
movq
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
subsd
subsd
orpd
movq
fld
ret
comisd
jne
fld
ret
comisd
jae
fld
fmul
sub
fstp
fld
add
fadd
ret
fld
fmul
fadd
ret
movq
movq
andpd
ucomisd
jp
mov
shr
fld
fadd
ret
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
nop
int3
int3
int3
int3
call
xchg
jmp
call
fxch
jmp
fabs
fld1
mov
xor
jmp
mov
fabs
fxch
fabs
fxch
fpatan
or
je
fldpi
fsubp
or
je
fchs
ret
fabs
fld
fld
fld1
fsubp
fxch
fld1
faddp
fmulp
ftst
fstsw
fwait
test
jne
xor
fsqrt
ret
pop
jmp
fstp
fld
ret
fstp
or
je
fstp
fldpi
or
je
fchs
ret
fstp
fldz
or
je
fchs
ret
fstp
jmp
fstp
mov
jmp
call
jmp
push
mov
sub
xor
cmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
push
call
pop
jmp
mov
mov
mov
cmp
jg
je
cmp
jg
je
mov
push
pop
sub
je
dec
je
sub
je
dec
je
sub
je
dec
je
sub
jne
mov
mov
fld
lea
fstp
push
fld
fstp
fld
fstp
call
test
pop
jne
call
mov
jmp
mov
fld
lea
fstp
push
fld
mov
fstp
fld
fstp
call
pop
jmp
mov
mov
jmp
mov
fld
fstp
fld
fstp
fld
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
jmp
mov
jmp
mov
fld
fstp
jmp
mov
jmp
mov
jmp
fld1
jmp
mov
mov
jmp
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
fld
fmul
fst
fld
fstp
fld
fstp
lea
fstp
push
mov
call
test
pop
jne
call
mov
fld
fstp
pop
pop
pop
leave
ret
mov
sbb
dec
add
ret
dec
add
ret
dec
add
dec
add
ret
dec
add
ret
push
ret
dec
add
ret
pop
ret
dec
add
dec
add
dec
add
in
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
push
and
cmp
push
fstp
jne
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
push
fstp
push
call
add
jmp
push
push
call
fld
pop
pop
jmp
fld
push
fadd
sub
fstp
fld
fstp
push
push
jmp
call
fstp
fld
pop
fcomp
pop
fnstsw
test
jp
push
push
call
fld
pop
pop
jmp
test
jne
fld
push
sub
fstp
fld
fstp
push
push
call
add
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
push
and
cmp
push
fstp
jne
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
push
fstp
push
call
add
jmp
push
push
call
fld
pop
pop
jmp
fld
push
fadd
sub
fstp
fld
fstp
push
push
jmp
call
fstp
fld
pop
fcomp
pop
fnstsw
test
jp
push
push
call
fld
pop
pop
jmp
test
jne
fld
push
sub
fstp
fld
fstp
push
push
call
add
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
fld
fld
mov
add
jae
xor
test
je
fdivrp
ret
shr
cmp
jne
fdivrp
ret
mov
and
je
cmp
je
fnstcw
mov
or
and
mov
fldcw
mov
and
cmp
je
fmul
fxch
fmul
fxch
fldcw
fdivrp
ret
fmul
fxch
fmul
fxch
fldcw
fdivrp
ret
mov
or
jne
fdivrp
ret
mov
and
jne
fnstcw
mov
or
and
mov
fldcw
mov
and
je
cmp
je
retf
inc
dec
pop
cld
fidivr
dec
xchg
call
push
adc
retf
fild
sbb
ficomp
sub
stos
fidivr
in
and
bsr
xor
fldcw
loopne
mov
mov
inc
xlat
jns
lock
bound
xor
sti
inc
mov
push
sub
adc
int3
idiv
pop
cli
outs
out
pop
pop
xor
enter
pop
retf
ficomp
adc
inc
lods
or
frstor
pop
pop
arpl
rep
cmp
cdq
lods
(bad)
jge
mov
int
lods
psubusb
sub
std
push
pop
pop
test
sub
or
sti
fldcw
cmp
stos
in
mov
add
and
sbb
ins
mov
cdq
lahf
js
out
xlat
sbb
aas
jl
mov
dec
sub
jecxz
(bad)
lods
fdiv
sahf
call
push
lea
daa
addr16
dec
sub
sbb
mov
dec
mov
mov
shr
in
pop
or
pop
mov
xchg
add
push
xchg
jbe
aaa
or
or
or
enter
jo
aam
ja
xor
sub
sar
fwait
in
div
mov
sub
es
dec
cli
dec
minps
jg
ins
mov
test
leave
(bad)
fsubr
enter
repz
adc
pop
dec
push
cmp
fidiv
sub
je
dec
fldlg2
mov
xchg
call
nop
cmp
mov
call
stc
jbe
mov
jo
scas
out
std
out
push
pop
in
pop
ins
sbb
xor
jmp
pop
lds
jns
adc
pop
clc
movs
inc
fild
mov
inc
or
inc
mov
mov
fcom
(bad)
imul
out
cs
dec
xchg
pop
stos
sub
inc
add
xchg
lods
fisttp
push
mov
test
js
movs
mov
add
imul
fisubr
push
cmp
popa
mov
jecxz
cmp
dec
imul
ja
sub
dec
cmp
cmp
pop
cli
fdivr
or
cmp
out
fnstsw
retf
and
(bad)
jo
outs
(bad)
sub
imul
add
mov
js
out
mov
neg
mov
loope
adc
es
sti
mov
cwde
xchg
mov
cli
push
add
dec
je
in
pop
and
sub
push
loopne
call
scas
mov
call
imul
lods
ficomp
enter
imul
mov
dec
mov
mov
imul
or
jnp
cmc
sti
pop
jl
mov
sub
jmp
ins
fwait
jns
cmp
out
mov
sub
ret
mov
sbb
es
mov
sbb
pop
test
fisttp
cdq
std
lea
retf
pop
and
and
and
jo
int3
and
xor
jmp
scas
fsub
mov
bound
mov
dec
pop
push
mov
sub
jg
xchg
inc
or
adc
scas
int3
stos
mov
mov
fwait
pop
or
arpl
loop
cmp
nop
mov
out
shr
mov
fwait
xor
fsubr
das
rol
mov
pop
and
ret
cmps
xchg
in
mov
mov
ret
xor
mov
and
add
fsubr
movs
jne
sti
jle
les
mov
and
and
(bad)
cmp
sub
cmp
std
push
rcr
or
dec
and
dec
sbb
dec
aas
pop
lahf
or
ins
dec
xchg
mov
gs
pop
push
in
pop
sbb
gs
out
sbb
jne
retf
lahf
sbb
xchg
jl
and
cld
icebp
and
push
out
shl
and
fldcw
fsubr
(bad)
mov
call
cmp
dec
inc
popf
push
dec
and
cwde
jmp
sub
sbb
sub
bound
mov
push
test
mov
pop
lea
outs
pusha
in
cdq
cmp
mov
fistp
in
(bad)
fcmovb
xchg
cmps
cwde
lods
sti
jne
popf
or
pop
test
jle
or
stos
adc
mov
jno
cmp
out
ins
int3
sbb
jo
push
sbb
jg
sub
jno
out
ja
cmp
sub
fdiv
aas
pop
dec
sbb
test
test
mov
fcmovnbe
mov
imul
mov
(bad)
cs
(bad)
out
cmc
lods
in
int3
pop
mov
bnd
mov
rcr
pop
std
jmp
cli
mov
xchg
sub
jbe
cmp
cmp
jmp
lahf
dec
xor
aad
add
(bad)
mov
ror
ret
fs
jg
xor
sbb
fst
ja
pop
(bad)
adc
ins
cmp
mov
xchg
mov
into
inc
add
xchg
push
es
pop
xchg
pushf
hlt
scas
cmp
into
fidivr
adc
xor
jmp
cdq
and
inc
jb
retf
fdivr
psubw
test
sahf
cld
dec
xchg
xlat
jbe
pop
jno
cwde
sbb
lods
sbb
add
in
daa
dec
fadd
xor
mov
fisubr
stos
imul
aas
sbb
fbld
mov
mov
fild
arpl
adc
jle
ins
dec
xlat
dec
sub
and
mov
in
inc
pop
loope
cmp
push
popf
into
rol
cld
stc
sbb
sbb
xor
ins
mov
mov
cwde
call
jnp
daa
push
mov
outs
ja
ins
cmp
jne
jl
jmp
outs
jge
lods
stos
and
imul
adc
stos
das
inc
mov
pop
ins
out
fisubr
sbb
sub
mov
pop
adc
int3
mov
retf
lahf
mov
inc
lods
sbb
lods
or
add
fsubr
je
jmp
lods
dec
ins
rcl
mov
push
push
enter
ret
dec
setge
pop
mov
aaa
mov
sbb
inc
xor
xor
sbb
mov
fstp
pop
aam
lods
mov
fadd
test
jbe
xchg
(bad)
movs
aas
mov
jg
sub
ret
mov
dec
jle
fstp
jns
and
(bad)
sti
dec
fadd
jge
int
cmps
retf
popf
out
dec
movs
sub
int
or
add
jp
(bad)
leave
push
mov
cli
les
pop
stos
sub
dec
(bad)
xor
or
sti
ins
jp
iret
mov
and
mov
repz
cmp
leave
int3
or
fisttp
mov
jmp
mov
lea
cmp
movs
pop
pushf
dec
bound
stc
sub
mov
ret
sahf
scas
rol
fidiv
jae
loop
sbb
mov
repz
xchg
push
test
outs
mov
shr
xor
or
aaa
sbb
fwait
stc
or
js
cld
mov
in
mov
pop
sub
stos
test
xlat
cmp
iret
pusha
adc
sub
popf
or
cmp
add
das
mov
loop
sbb
test
out
sbb
adc
lds
mov
push
(bad)
movs
push
dec
outs
jg
push
xor
jmp
xchg
daa
scas
stos
int
mov
mov
arpl
mov
int
ror
fiadd
push
mov
loop
pop
les
cmp
and
(bad)
cld
repz
xchg
ficom
mov
(bad)
dec
pusha
in
int3
jmp
mov
sub
mov
add
cmp
xor
and
adc
pusha
inc
(bad)
pop
dec
dec
mov
jns
mov
sub
sbb
imul
(bad)
cld
cmp
test
or
push
mov
test
sbb
out
jp
dec
push
mov
cwde
in
jl
sub
lock
mov
pop
jmp
mov
mov
test
or
(bad)
test
sub
imul
jns
mov
mov
xchg
jne
outs
in
aad
push
sbb
push
and
int
jle
test
lock
mov
xchg
movs
sub
mov
aam
in
jbe
add
cmp
test
pop
scas
push
cmp
push
mov
mov
aad
jbe
xor
retf
mov
aam
dec
pop
pop
dec
repz
ret
call
add
repz
sbb
dec
sbb
dec
and
inc
add
mov
fstp
dec
mov
scas
fmul
jp
aas
fcmovnu
in
fnstsw
sbb
mov
dec
sbb
push
dec
jnp
test
mov
push
lea
push
or
mov
pop
int3
repnz
pop
repnz
scas
and
les
pushf
push
cmps
pop
sbb
push
fs
sub
jp
push
in
ret
mov
pop
mov
mov
mov
mov
xchg
cwde
xor
jp
leave
add
lods
out
loopne
mov
fcomp
loop
mov
les
sti
dec
push
je
inc
mov
fmul
fwait
rcl
js
cs
adc
jge
sub
mov
pop
pop
loop
iret
mov
cmc
retf
dec
out
aad
push
dec
es
repnz
dec
int3
leave
push
loop
or
mov
cmp
jmp
bound
pop
xchg
push
(bad)
inc
pop
mov
aas
pop
mov
push
dec
retf
mov
pusha
retf
mov
sbb
xor
popf
sub
out
dec
lahf
ror
push
clc
and
ins
mov
jp
push
pusha
pop
je
jns
daa
adc
mov
clc
cmp
aaa
push
iret
push
lds
xlat
pop
or
cld
outs
ins
pop
cwde
outs
mov
lods
push
ror
push
or
ins
fwait
out
push
dec
cld
mov
(bad)
adc
test
cmp
js
inc
sbb
dec
stos
push
(bad)
lods
ret
in
inc
bound
sub
outs
sub
sub
aaa
mov
inc
pushf
fisubr
xchg
xor
fnstsw
jmp
sub
sub
sub
jp
test
in
mov
lahf
test
jo
pop
outs
rcl
inc
rcl
mov
je
or
les
mov
bound
test
adc
loop
(bad)
push
jnp
fst
adc
cmp
inc
clc
arpl
out
movs
and
stos
jo
rcl
aad
lea
dec
lahf
sti
xbegin
dec
adc
stos
inc
scas
xchg
pop
mov
(bad)
cmp
sub
sbb
cmp
sbb
movs
lods
repz
lea
adc
pusha
pop
in
mov
xchg
push
jmp
sbb
out
repz
inc
pop
out
bound
loop
lds
sti
jg
jo
out
pop
cli
es
jmp
fcomp
fcomp
sbb
ja
cmp
pop
add
or
rsm
jl
cs
(bad)
shl
inc
push
(bad)
adc
adc
push
sbb
or
ret
int
(bad)
fstp
les
iret
arpl
dec
gs
sub
lds
pop
std
lods
stos
sti
lods
daa
imul
add
out
mov
ror
sbb
xchg
int3
jns
or
inc
cmps
shr
retf
in
loopne
inc
in
fild
dec
dec
shr
or
push
adc
repnz
push
scas
mov
cmp
dec
sub
call
xor
xchg
aad
mov
jo
test
push
mov
cmp
inc
mov
push
pushf
imul
and
ret
fwait
and
push
arpl
cmp
xchg
cmp
cmc
ds
sbb
jmp
gs
fcom
mov
fdivr
jg
xchg
push
fs
int
mov
cmp
stos
icebp
mov
xchg
ror
adc
loop
in
add
adc
mov
mov
in
fldcw
push
adc
xrelease
pop
sbb
repnz
and
mov
scas
stc
js
in
in
xlat
cmps
mov
leave
in
cmp
mov
retf
adc
xchg
pushf
pop
pop
jp
mov
mov
mov
popf
inc
movs
ja
push
xor
mov
ins
retf
loope
test
dec
cmp
dec
dec
add
sbb
jge
dec
sub
jbe
ins
inc
xchg
xor
sub
into
or
or
int
pop
cmc
sbb
idiv
cmp
add
mov
popf
lahf
mov
pop
test
int
mov
or
and
ins
xor
mov
pushf
mov
stos
add
jg
nop
xor
mov
jbe
lods
sbb
sti
jle
mov
daa
pop
mov
les
imul
or
movaps
mov
sub
pop
fdivr
arpl
xchg
shr
cld
sar
js
in
sub
or
cs
pop
mov
lods
cwde
mov
dec
sar
shr
leave
cmp
cmp
sub
ins
retf
mov
aaa
inc
lahf
outs
mov
inc
and
and
sub
sbb
sbb
cmp
or
lock
(bad)
pop
mov
aas
add
adc
in
fst
jno
mov
sbb
sub
ins
arpl
and
sbb
xor
mov
ret
xchg
call
mov
sbb
sbb
add
and
pop
xor
sub
jne
or
dec
or
bound
mov
jle
add
adc
movs
addr16
inc
mov
mov
cmp
cli
or
sub
cs
or
inc
cld
shl
push
(bad)
fild
mov
je
imul
(bad)
pop
mov
dec
xchg
jno
xchg
and
das
repnz
hlt
dec
add
lahf
push
push
xchg
sahf
out
loopne
pop
out
mov
xor
inc
fwait
or
pusha
inc
xchg
lahf
mov
mov
or
std
mov
shr
ins
data16
fcomp
or
sub
jl
pushf
xchg
ins
cmp
test
gs
push
mov
loopne
repz
(bad)
jmp
push
or
mov
cmp
clc
es
pop
and
int3
dec
cmp
jnp
adc
pushf
and
sub
in
sbb
ror
inc
jmp
jge
mov
or
cmp
xor
xbegin
inc
loop
mov
cmp
dec
cmp
fistp
(bad)
cmp
cld
fimul
aad
ror
and
ins
je
adc
dec
gs
or
pop
in
and
push
test
stos
sub
mov
nop
push
stc
adc
std
outs
imul
scas
dec
in
push
dec
cmp
or
movs
sahf
mov
retf
dec
retf
(bad)
fsubr
xor
lds
cmp
iret
sub
sub
popf
js
sahf
mov
fcomp
xor
push
cli
pushf
cmp
les
(bad)
mov
cdq
pop
cmps
and
adc
and
in
xchg
mov
bound
mov
and
sub
enter
push
mov
dec
cmp
pop
aad
(bad)
fsubr
js
adc
sbb
mov
dec
dec
dec
mov
lods
or
jecxz
and
add
mov
lock
jno
mov
mov
cmp
pop
jbe
inc
push
sti
xchg
stos
xchg
sahf
mov
rcr
je
sbb
sbb
dec
sti
leave
adc
ds
out
inc
xchg
stos
mov
jl
shrd
stos
mov
pop
(bad)
cwde
(bad)
fwait
add
movs
int
arpl
jp
imul
xchg
lods
cwde
adc
sub
mov
das
xor
shr
xor
push
or
jmp
push
mov
into
fisttp
jmp
loop
xchg
loopne
sub
cmp
and
(bad)
cli
mov
fild
mov
out
xor
test
jns
es
rol
jmp
lods
inc
jmp
cmp
sub
jge
pop
push
inc
cmp
fnstcw
mov
push
int
xor
and
fldenv
pusha
fdiv
mov
aas
jl
push
and
xlat
cld
mov
or
mov
jnp
xchg
mov
or
mov
loope
(bad)
adc
sub
sbb
scas
adc
mov
mov
pop
pop
mov
push
dec
fimul
outs
mov
aaa
push
jmp
in
sbb
cmc
in
fadd
push
popa
cli
mov
sbb
mov
push
neg
imul
xchg
mov
jae
aad
cld
cmp
pop
sar
jg
in
xchg
cmps
inc
fstp
and
dec
mov
fcomp
pop
call
push
lods
pop
pusha
sahf
stc
lea
daa
imul
adc
mov
mov
jmp
push
xchg
lahf
loopne
jne
in
dec
pop
imul
fs
jecxz
(bad)
push
lods
inc
stos
add
into
jns
(bad)
jg
or
cmp
mov
push
pop
call
ins
enter
inc
cmc
and
adc
push
mov
ins
outs
ret
out
mov
sub
dec
popa
stos
scas
sub
jae
and
les
retf
aas
push
mov
adc
mov
clc
ins
mov
push
jmp
and
sub
fild
cli
and
sub
inc
sub
pop
in
retf
rcr
dec
out
stos
loopne
test
push
rol
xchg
loopne
jge
sub
sbb
lods
int
stos
clc
fmul
loope
or
pop
add
pop
dec
mov
or
push
int
add
call
jb
inc
cmp
loop
clc
outs
idiv
sub
ss
stos
cmp
pop
imul
retf
pusha
mov
jmp
int
sub
push
bound
test
push
xchg
out
cmps
xchg
in
jmp
nop
mov
mov
stos
retf
pushf
mov
jle
int
ret
mov
adc
xchg
add
push
mov
xchg
das
dec
dec
dec
jp
ret
sbb
jb
push
popf
(bad)
xlat
xor
clc
div
repnz
sub
scas
cmp
lods
mov
ins
cmpps
xchg
jp
sub
pop
aad
data16
cmp
sar
fwait
cmps
cs
fwait
std
add
cli
dec
clc
pop
push
fmul
jno
sbb
mov
adc
mov
xor
cmp
mov
stos
scas
aaa
ins
dec
sbb
cmc
fs
sub
add
cmp
jp
pop
out
hlt
fistp
or
jl
add
test
int3
cmp
and
jbe
jle
(bad)
ins
pop
lock
push
sub
xor
loop
sbb
push
mov
or
push
imul
mov
iret
ins
jmp
(bad)
fsub
or
jns
jmp
jne
pop
jnp
add
mov
sbb
stc
popf
call
sbb
push
jmp
mov
dec
push
dec
xchg
scas
mov
loope
add
mov
sahf
test
mov
xlat
adc
pop
js
xchg
sbb
adc
mov
jmp
test
cs
std
shl
out
stos
das
dec
cs
sbb
sub
(bad)
xchg
mov
test
and
out
or
fwait
sub
(bad)
stos
fdiv
enter
pop
pop
mov
scas
mov
or
and
scas
fcomip
sub
(bad)
mov
pop
movs
je
imul
mov
ror
push
mov
add
or
ins
or
dec
inc
xor
imul
xchg
bound
lahf
cmp
push
dec
in
(bad)
sahf
sub
test
imul
fild
xchg
push
int3
jmp
cmp
pop
mov
test
jge
dec
shl
fimul
rcr
mov
xchg
pop
ins
imul
stos
lds
call
ins
outs
movs
jg
(bad)
mov
mov
jl
xlat
mov
or
and
sbb
mov
pusha
adc
arpl
xchg
je
leave
mov
pusha
sar
sbb
jge
pusha
cld
pop
fwait
jge
xor
mov
ja
sbb
int
jae
or
jbe
je
sbb
aam
lods
in
or
(bad)
imul
and
aad
push
int
lea
sbb
mov
sbb
or
jg
xchg
hlt
sbb
xor
out
lods
movs
adc
pop
into
mov
pop
pop
jge
frstor
xor
dec
out
imul
enter
call
inc
dec
mov
jnp
sbb
stos
(bad)
push
cmps
cmps
sub
xor
sub
mov
xor
and
jg
dec
nop
pop
fdiv
sbb
fwait
ror
sar
(bad)
fnstcw
out
inc
mov
ins
xchg
outs
test
xchg
or
popf
test
inc
and
or
dec
mov
xor
pop
addr16
test
mov
sbb
sub
out
stos
das
out
mov
mov
test
pop
ret
in
lds
(bad)
stc
mov
pop
es
jg
shl
test
xor
sub
xchg
sbb
fucomp
jmp
js
sbb
pop
push
xchg
mov
clc
imul
div
adc
mov
fwait
and
ins
mov
ins
arpl
sub
cmp
sub
in
xor
and
icebp
ds
aam
push
or
call
cmp
mov
push
test
xabort
rol
les
out
test
call
jo
push
cmp
xor
mov
in
inc
cwde
jmp
ds
mov
jecxz
cmp
retf
hlt
test
data16
fwait
pmulhw
outs
scas
push
scas
lahf
or
out
sub
inc
aas
dec
mov
xor
fdivr
mov
xor
fcmovne
adc
adc
cs
int3
clc
outs
call
(bad)
push
les
mov
outs
xor
or
pop
mov
hlt
jae
mov
in
or
pop
push
push
sti
arpl
sub
sar
cmp
mov
iret
push
mov
xchg
jmp
mov
mov
xchg
mov
fcomp
mov
mov
pop
mov
jecxz
cmps
cli
inc
push
adc
inc
addr16
xor
cli
mov
ins
aas
push
hlt
mov
lds
add
iret
ja
push
sub
push
aam
shr
clc
cmpps
cmps
xor
int
pop
push
xor
lods
es
lods
xor
sti
movs
imul
xchg
dec
cs
sub
push
mov
xlat
pop
sub
dec
fnstenv
or
xor
mov
sbb
add
test
push
jp
fs
push
fbstp
inc
cmp
adc
sub
(bad)
(bad)
test
scas
das
stos
or
pop
inc
mov
xchg
fistp
pop
jo
mov
stc
fld
es
bound
inc
jp
pop
cdq
sahf
or
iret
out
mov
inc
mov
or
in
outs
pop
jmp
test
xchg
dec
scas
add
ins
sub
jnp
xor
push
out
int
add
test
stos
sbb
ror
lods
adc
sub
mov
arpl
or
fcmovnu
jns
sahf
mov
inc
mov
jl
mov
fistp
lea
dec
leave
test
mov
gs
sub
jmp
call
sbb
ins
sub
std
ret
mov
jmp
adc
cli
cmp
xchg
inc
inc
or
repnz
outs
sub
test
frstpm(287
jle
pop
std
retf
clc
adc
inc
jnp
sar
sub
xor
lods
ins
and
mov
mov
sbb
stos
pop
es
cmps
mov
int3
ins
mov
mov
sub
std
xchg
dec
or
aam
stos
arpl
mov
jecxz
mov
repnz
cdq
jecxz
mov
jbe
push
loope
mov
sub
pop
loopne
and
mov
std
test
push
sub
aas
cmp
dec
addr16
les
mov
sub
add
std
xchg
test
in
mov
push
xchg
cmp
mov
push
or
dec
pop
jns
or
jb
mov
aas
or
stc
idiv
punpckhbw
movs
cli
add
sti
stos
mov
sbb
mov
cld
or
popf
ret
repz
jmp
mov
or
pop
adc
out
xchg
es
xchg
rcr
movs
jmp
or
test
ins
jg
add
xchg
push
int
pop
addr16
call
lods
jb
adc
mov
mov
or
xchg
data16
leave
clc
xchg
(bad)
popa
cwde
hlt
xor
sbb
push
sub
push
cmp
jno
shl
cmps
or
popa
push
mov
sbb
mov
xchg
(bad)
loop
ret
pop
push
test
in
pop
cld
outs
push
dec
sti
into
stos
jb
cmps
retf
mov
pop
inc
mov
jge
lahf
push
add
xchg
(bad)
in
and
jbe
and
xor
popa
div
fldcw
adc
icebp
mov
jo
pop
dec
hlt
mov
cwde
adc
push
fnstcw
(bad)
bound
test
aam
cmp
sbb
jge
sub
cmp
mov
sub
xchg
imul
mov
cmp
push
cmp
int
or
and
psubd
xchg
inc
lods
mov
xor
cmps
movs
mov
push
jp
pop
mov
sahf
or
inc
push
adc
adc
mov
pop
test
cmps
pop
add
dec
mov
dec
push
mov
enter
sub
or
leave
sbb
popa
jl
pop
fisttp
in
ret
mov
retf
pop
dec
imul
xor
mov
fld
cli
call
js
or
inc
int
mov
lds
sbb
fimul
int
loop
adc
mov
out
iret
push
or
dec
pop
adc
or
sub
sti
mov
xchg
in
cld
mov
cdq
mov
push
adc
sub
sbb
adc
push
mov
jge
jae
add
push
shl
dec
sub
movs
outs
fimul
mov
(bad)
je
data16
sub
retf
pop
imul
pushf
cdq
popa
mov
ror
sahf
out
into
leave
popa
fwait
sub
stc
rcr
leave
pop
(bad)
je
cmp
dec
(bad)
test
or
je
xchg
int
jg
pop
pop
retf
retf
(bad)
mov
pop
test
xor
jae
cld
retf
jne
mov
pop
inc
inc
sub
adc
mov
loope
repnz
mov
cmp
mov
adc
loopne
(bad)
jge
mov
pop
sbb
and
movs
(bad)
push
xor
pop
dec
push
inc
dec
cmp
lods
xor
mov
cdq
xchg
cmp
cli
add
pop
cmp
aad
jo
pushf
in
jp
jp
dec
push
jns
or
sbb
(bad)
fst
or
or
adc
bound
es
push
out
mov
ss
scas
test
adc
pop
mov
popf
neg
lea
in
mov
jp
sbb
neg
shr
dec
mov
or
aas
out
mov
int
ja
retf
pop
and
and
imul
adc
xchg
cmp
cmp
(bad)
cmp
and
jnp
(bad)
icebp
imul
mov
ret
cmp
xchg
cmps
inc
loop
sbb
(bad)
and
jbe
shl
imul
leave
jno
imul
sbb
inc
ins
xchg
jne
scas
jne
sbb
retf
xchg
sbb
mov
adc
cmp
push
inc
xor
mov
jl
in
stos
pop
out
and
pop
xchg
(bad)
mov
xor
int
xchg
jmp
out
mov
mov
popf
cld
in
outs
retf
or
ret
pop
movs
cmp
jecxz
xor
mov
xor
(bad)
xor
mov
in
mov
xchg
aas
sti
stos
xchg
out
sahf
inc
fild
pop
cmp
or
add
lods
fwait
mov
(bad)
in
cdq
jno
or
stos
push
adc
sbb
adc
fiadd
xor
fldcw
pop
fdivr
inc
adc
fcom
rcl
std
xlat
jmp
dec
inc
or
dec
je
mov
mul
xchg
or
sub
cmp
mov
in
cwde
lods
sub
sbb
pusha
add
sbb
jno
mov
fsubr
hlt
cwde
and
push
mov
pop
packuswb
add
adc
(bad)
mov
cmp
test
lahf
or
(bad)
xchg
movs
fld
cmp
inc
sbb
in
sbb
(bad)
sar
mov
or
das
sub
loope
test
repnz
out
pop
lods
dec
mov
fs
dec
xchg
loop
jge
out
sub
std
clc
add
je
xchg
das
and
popa
mov
shl
jno
add
sub
or
fs
and
sub
xor
in
mov
xchg
jbe
imul
jge
jo
cmp
out
test
lock
popf
cmp
xchg
inc
pop
pop
inc
leave
jg
cs
(bad)
rcl
das
sti
mov
sbb
jmp
imul
out
xchg
push
sub
(bad)
sbb
into
je
and
or
lods
dec
loope
std
cmps
mov
std
(bad)
cmps
cwde
sub
cmp
sub
jp
jmp
jl
jge
out
dec
aad
call
cli
cmp
mov
imul
jns
fisubr
push
call
arpl
pop
call
in
jecxz
jmp
sbb
rol
sub
inc
and
cld
sub
int
xchg
lods
fdiv
pop
in
sbb
loop
leave
push
aas
stos
int3
test
retf
out
daa
shl
lea
mov
xchg
and
sbb
add
jmp
xor
jno
je
enterw
cmps
fwait
mov
xchg
jno
jle
jmp
cmps
enter
fidivr
cmp
push
or
adc
jg
int
push
mov
dec
jbe
mov
xchg
xchg
imul
ins
xor
stc
push
fiadd
out
cmp
clc
scas
jp
and
ss
das
xchg
or
mov
sbb
(bad)
gs
mov
aad
pop
ss
adc
or
retf
pop
pop
hlt
dec
imul
aas
mov
movntps
retf
sti
into
(bad)
and
vpxor
clc
(bad)
outs
imul
add
sbb
dec
call
jg
aam
pop
mov
cli
sbb
neg
pusha
js
ins
(bad)
fsub
push
and
(bad)
xchg
into
je
leave
into
lea
outs
sbb
mov
imul
mov
(bad)
fisubr
int
idiv
test
leave
dec
mov
mov
iret
rcr
mov
ins
or
iret
sub
sbb
cmp
lds
cmp
sbb
daa
add
fstp
jl
int3
ins
sbb
dec
fcmovnu
adc
or
jmp
aas
inc
icebp
(bad)
sbb
and
mov
pop
js
dec
push
adc
inc
and
not
in
in
(bad)
mov
call
jp
adc
inc
ins
mov
jl
mov
clc
or
stos
cmp
leave
mov
inc
scas
xchg
dec
js
ins
outs
mov
xchg
cwde
pushf
fcmovnu
jo
jge
dec
in
mov
xor
dec
pop
adc
jmp
jp
mov
pop
gs
neg
ds
push
(bad)
or
jne
sub
push
mov
push
lods
sbb
jae
mov
xor
ficom
into
push
jge
repz
jp
push
jle
in
and
retf
daa
push
lods
xchg
push
push
in
fidivr
clc
mov
lds
jp
xchg
lods
mov
popf
xchg
add
outs
jns
cmc
mov
sar
jae
add
movs
mov
cmc
inc
arpl
bound
sub
std
push
dec
lods
inc
mov
xor
call
dec
mov
fldcw
or
pop
movs
pop
test
ds
mov
push
movs
gs
xchg
adc
scas
les
retf
jmp
(bad)
mov
fcmovbe
or
test
and
sti
or
pop
jmp
mov
push
mov
scas
arpl
call
mov
adc
push
mov
cld
push
icebp
ret
mov
sar
xchg
sbb
xchg
cmp
add
pushf
in
push
dec
mov
lods
jno
mov
push
outs
cli
int
pusha
loope
mov
xor
xlat
mov
retf
cwde
mov
sahf
(bad)
movs
xor
and
inc
sbb
cmc
stos
push
dec
sbb
sub
fsubr
dec
fiadd
push
sub
dec
dec
scas
or
mov
(bad)
retf
or
xchg
xlat
int
mov
dec
pop
inc
mov
sub
shr
pop
fstp
add
shl
sbb
mov
or
xor
icebp
int
lods
dec
sub
inc
out
mov
sbb
in
mov
fldcw
dec
lock
arpl
sub
jmp
mov
mov
adc
sub
in
sbb
pop
xor
sub
push
jmp
lods
mov
xor
(bad)
stc
xchg
cmp
jne
mov
test
mov
std
fiadd
xlat
sub
or
sbb
inc
sbb
and
or
mov
pop
enter
jns
cld
dec
test
jnp
sub
or
inc
out
ror
ja
lahf
enter
ins
push
ins
dec
mov
inc
jno
pop
adc
(bad)
pushf
push
in
fnstsw
call
jmp
lods
(bad)
mov
jecxz
xlat
dec
outs
sub
pop
pop
ins
jnp
test
sub
cdq
sbb
push
icebp
das
sub
dec
das
call
jns
(bad)
add
scas
adc
lahf
add
cmp
dec
mov
xor
or
stc
xor
jl
cmp
outs
cmp
iret
mov
test
mov
mov
aaa
xchg
xchg
repz
inc
int
sbb
push
fwait
or
jg
inc
daa
imul
loopne
mov
cmp
pushf
sbb
dec
gs
bound
idiv
mov
xchg
out
cmc
mov
stos
sub
ins
sub
push
push
test
pop
fcmovu
jno
mov
or
sub
sub
and
add
or
jle
sar
cmc
add
lods
jb
mov
mov
out
ss
cmp
sub
sbb
or
sar
cmps
mov
push
cli
adc
test
sti
cmp
cwde
mov
pop
sbb
ss
ficomp
dec
cmc
jp
dec
mov
and
jnp
popa
int3
sar
xchg
scas
sahf
movs
test
xor
and
or
mov
outs
test
sub
cmp
mov
sti
xchg
adc
test
inc
cmc
push
leave
test
idiv
out
out
jb
es
leave
stos
mov
mov
in
or
jmp
ins
mov
and
dec
pushf
lds
sbb
out
sbb
adc
pop
out
mov
pop
inc
push
ja
jmp
sbb
sbb
cmps
int3
dec
and
xchg
xchg
addr16
ins
movs
cmp
lds
je
push
sbb
ret
sub
iret
in
dec
(bad)
clc
cmps
jmp
sbb
pop
pop
mov
test
lds
aas
adc
push
xor
fcmovne
addr16
inc
jb
in
sbb
cmp
cmp
data16
iret
mov
loopne
fiadd
in
sub
dec
ror
xor
popf
in
sub
cmc
jno
in
pop
or
sbb
je
rcl
jne
ficomp
mov
pop
stos
mov
pop
and
sub
xor
rcl
neg
or
lods
mov
ret
and
sbb
xchg
aas
repnz
push
push
popf
adc
repnz
rcl
cdq
icebp
sbb
cmp
jp
mov
cmp
and
or
jg
inc
in
sub
int3
fnsave
fsub
push
pop
aaa
sub
xor
aam
ficomp
fs
dec
mov
add
or
adc
dec
xchg
add
(bad)
jnp
lahf
jmp
and
adc
icebp
mov
pop
(bad)
(bad)
or
mov
dec
inc
in
scas
jns
fxch
add
sub
inc
je
imul
sbb
cli
jecxz
jge
mov
(bad)
fnstsw
pop
std
cmp
das
and
ret
lods
data16
adc
dec
add
jg
jg
mov
jnp
mov
push
stc
(bad)
sbb
pop
mov
push
push
push
bnd
sahf
popf
sbb
sub
push
(bad)
mov
out
call
int
or
js
xor
arpl
pop
cli
sub
xchg
(bad)
aam
jmp
mov
cmp
mov
jge
cwde
or
push
je
or
fcmovnbe
or
push
loop
mov
mov
xor
imul
mov
pop
or
inc
enter
jmp
ins
scas
jl
cld
fcom
dec
out
scas
ficom
retf
fimul
aad
xchg
mov
(bad)
fsub
lea
ins
call
fdiv
call
xor
repnz
sbb
xor
enter
leave
dec
mov
outs
js
out
and
pop
mov
es
(bad)
in
or
repnz
pop
xor
inc
fwait
int
stos
addr16
sbb
fwait
mov
mov
lea
aad
push
inc
dec
inc
out
or
pop
mov
jne
in
cdq
or
and
mov
or
jbe
xchg
sbb
cld
lods
or
cld
ficom
push
cmp
enter
xchg
jnp
push
dec
push
retf
pop
pop
fisttp
sbb
dec
(bad)
jns
cmp
or
add
pop
mov
movs
fadd
or
repnz
lods
jmp
dec
jmp
test
(bad)
cdq
aad
pop
test
jl
or
or
imul
mov
cmps
dec
ins
fisttp
pop
mov
test
xor
adc
or
dec
dec
mov
jmp
retf
push
int
or
or
sbb
cmc
xor
cmc
les
clc
lods
lock
(bad)
xor
scas
or
retf
fwait
popf
mov
stos
cmp
or
(bad)
mov
outs
movs
div
sti
xchg
lahf
pop
repz
mov
cmp
cmp
repnz
ret
xor
cmp
push
cwde
jge
data16
dec
fld
sbb
daa
retf
(bad)
sub
aaa
cwde
in
aam
mov
push
js
jmp
icebp
or
leave
dec
mov
cmp
int
lahf
sbb
fsubr
or
(bad)
pusha
jo
pop
push
cmp
push
leave
aas
cmp
cdq
add
and
sub
jg
inc
pop
shr
mov
xchg
cmp
mov
sbb
lahf
mov
jno
sar
or
lods
int
mov
js
mov
push
sbb
dec
int
fsubr
call
lods
mov
xchg
ror
sbb
sub
push
stos
pop
cwde
mov
lea
test
dec
pop
or
inc
xchg
pop
dec
imul
mov
sahf
inc
sub
and
ret
pusha
xor
inc
xor
or
dec
adc
in
mov
push
or
cmp
push
mov
add
mov
add
aas
cmp
push
inc
icebp
and
push
test
lods
stos
outs
adc
dec
xchg
sbb
nop
sbb
std
stc
sub
pop
retf
movs
and
pusha
ds
jmp
dec
push
pop
adc
aas
scas
mov
das
mov
jmp
stos
adc
ror
mov
shr
dec
mov
ins
add
pushf
bound
loopne
sti
cmp
cmp
push
in
push
cs
lahf
and
dec
(bad)
popf
mov
mov
pop
adc
mov
push
retf
fdivr
(bad)
cmp
push
cli
test
stos
push
in
mov
pushf
cmp
inc
arpl
push
fimul
dec
sub
inc
jmp
dec
sar
ins
and
pop
mov
fisttp
std
sub
push
cmp
pop
repz
popf
ss
mov
shr
(bad)
fadd
add
cmps
(bad)
fiadd
out
mov
retf
shl
mov
or
or
mov
xchg
sub
fucomip
(bad)
arpl
mov
outs
test
mov
sub
add
pusha
dec
fst
ud2
or
xchg
daa
pop
hlt
xchg
mov
pop
adc
dec
dec
(bad)
xchg
or
mov
fwait
push
and
jmp
and
clc
fnsave
sbb
and
push
mov
sbb
stos
mov
(bad)
sub
jae
pusha
mov
(bad)
sbb
pop
sahf
out
in
fst
(bad)
imul
xchg
outs
bound
and
xor
add
mov
fsin
adc
push
scas
stc
push
jne
add
jmp
sbb
or
pop
ja
ror
cmc
loope
xchg
call
dec
vcvtps2dq
add
int
sub
cmps
fadd
fidivr
data16
xchg
cmp
nop
push
pop
sbb
out
mov
daa
jp
mov
retf
push
loopne
hlt
lahf
and
arpl
mov
fldcw
add
or
sub
das
and
fbstp
sbb
pop
xchg
cmp
dec
xchg
push
int3
cld
mov
add
iret
mov
inc
cdq
jmp
mov
mov
push
popa
rol
test
adc
or
fdivr
cmp
gs
xor
push
mov
movs
mov
mov
or
bound
pop
std
fmul
add
sbb
sar
xor
jbe
xor
xchg
cmp
mov
fldcw
cmps
sbb
xor
inc
outs
popf
pushf
data16
popa
int3
cmp
hlt
das
dec
cmp
iret
add
(bad)
lods
push
sti
add
push
push
loopne
pop
popf
int
enter
dec
mov
jne
pop
adc
pop
jp
out
ficomp
add
add
push
and
pop
out
cmp
enter
sub
and
mov
shl
push
test
push
fstp
pop
dec
fdivr
dec
aas
lea
dec
imul
add
out
push
lock
jge
or
sub
int
sub
mov
jge
xchg
fcomp
mov
rcr
mov
sub
fbld
fisubr
and
cmp
fidivr
je
in
je
inc
jns
and
pmaxsw
jge
lds
dec
mov
lods
fnstsw
dec
call
sbb
(bad)
out
imul
dec
ficomp
and
scas
leave
mov
jne
push
mov
cmp
stos
jnp
pop
in
mov
sub
jle
aam
dec
sub
or
pop
xor
pop
add
lods
cmp
dec
add
in
test
cwde
inc
pop
push
inc
inc
sub
dec
push
add
lods
lods
pop
lods
jmp
call
icebp
xchg
add
scas
dec
xchg
xor
clc
xor
mov
or
pop
movs
fld
in
ds
pop
pop
int
mov
int3
jnp
mov
xchg
int3
(bad)
aas
(bad)
iret
pop
pushf
dec
sub
movs
stos
cli
jmp
stos
es
adc
xchg
push
xor
test
fnstenv
xor
add
outs
add
fnsave
xchg
(bad)
(bad)
sub
pushf
lea
mov
dec
sbb
inc
jmp
xor
xor
mov
mov
mov
test
dec
aas
pop
dec
jo
and
pop
inc
xchg
xchg
sub
retf
xor
loopne
push
add
cdq
push
stos
pop
xchg
jo
jne
test
pop
xchg
sub
add
bound
mov
cdq
retf
loop
in
inc
sbb
aas
out
cmp
neg
sbb
scas
xlat
(bad)
imul
ins
pop
lahf
pop
in
sub
(bad)
hlt
stos
adc
mov
enter
pop
rcl
repz
fdivr
retf
aam
sub
sar
xor
mov
fcomp
clc
dec
lds
or
out
sub
popf
inc
mov
jmp
or
test
cmp
mov
jo
dec
jnp
dec
dec
rcr
fwait
dec
int
cmp
outs
rcl
rcl
sbb
call
xor
retf
fild
ficomp
test
lods
sar
or
sub
add
adc
mov
stos
(bad)
mov
in
(bad)
pop
xchg
test
js
add
arpl
int3
test
dec
xor
xchg
movs
pop
ss
bswap
and
add
xchg
or
and
sub
mov
or
fnstenv
pop
int3
push
ins
shr
add
popf
cmp
add
pop
loop
shr
xor
clc
jmp
and
das
inc
adc
sbb
mov
lea
fst
call
neg
ins
fidivr
push
sub
xchg
in
jle
jp
retf
xchg
movs
int3
fdivr
jl
gs
or
dec
sbb
sti
sbb
lea
mov
cmp
xor
jo
pop
mov
push
ds
dec
(bad)
cli
xchg
mov
or
sub
ficomp
movs
dec
mov
sbb
cmp
call
imul
jle
aaa
in
pop
out
pop
jp
sub
or
sbb
add
mov
cmps
jae
jp
dec
jge
cmp
and
xor
scas
xor
das
xlat
or
or
inc
or
lods
cli
pop
sbb
retf
sub
loop
fnstsw
mov
pop
call
push
aas
mov
les
mov
jge
push
sbb
(bad)
in
jg
jge
repnz
push
and
dec
sub
or
ret
cmps
push
(bad)
jle
out
int
or
lods
mov
push
xchg
jmp
jge
test
or
xlat
push
add
test
cdq
repz
leave
cld
out
mov
mov
inc
mov
push
mov
popf
jmp
call
cwde
call
sbb
(bad)
fwait
cmp
cdq
cs
push
in
hlt
xchg
jge
sbb
dec
imul
sbb
aaa
test
xor
sub
inc
mov
jge
ins
cli
ins
push
dec
mov
ins
jg
sub
into
loope
fmul
idiv
lods
jmp
call
jle
jge
jge
cs
cmp
mov
rcr
in
pop
retf
mov
dec
add
fdivrp
fucomip
fild
mov
push
int3
jns
add
jo
and
mov
or
cmp
and
pop
test
test
(bad)
mov
retf
stos
aaa
cmp
(bad)
sbb
sub
or
add
clc
inc
cmp
adc
sahf
mov
push
pop
cmps
jecxz
sbb
xor
jmp
test
data16
retf
leave
mov
and
fs
ror
in
xchg
add
xor
cli
retf
ror
retf
scas
mov
sbb
je
or
ds
in
cmp
call
mov
sub
retf
lods
or
call
xchg
xor
sub
or
dec
add
xchg
mov
sbb
ret
mov
sti
(bad)
test
mov
out
pop
push
sbb
shl
inc
mov
repnz
add
mov
in
inc
xor
loopne
(bad)
mov
imul
nop
call
aad
mul
(bad)
lds
fdiv
add
xor
stc
fidivr
push
neg
dec
push
sub
xchg
(bad)
cli
add
lods
push
movs
jecxz
push
adc
test
sub
pushf
in
xchg
lods
retf
retf
push
or
lahf
mov
ins
jnp
pop
jge
inc
call
std
call
mov
(bad)
dec
cmps
call
xor
mov
nop
(bad)
cli
movs
addr16
inc
and
adc
clc
fild
dec
jl
loopne
sbb
fild
out
and
icebp
les
sub
imul
pop
lock
imul
sbb
cmp
push
outs
xchg
call
mov
js
lock
sbb
lods
or
jge
sbb
dec
retf
ds
or
cld
mov
sar
jo
push
(bad)
xor
push
std
adc
push
jo
bound
pushf
sub
loop
pop
xor
fcmovb
mov
cs
mov
ja
fistp
lods
ss
mov
adc
retf
sbb
push
stos
xchg
and
sub
push
push
(bad)
dec
sahf
mov
fild
and
jle
and
daa
adc
call
push
int
lds
outs
mov
test
push
ss
sub
mov
popf
mov
jns
push
add
repnz
test
rol
cmp
dec
mov
mov
stos
int3
mov
jl
cmp
popa
pop
cmp
retf
int3
inc
lea
lock
sbb
scas
test
add
loopne
mov
addr16
stos
call
push
xchg
mov
adc
mov
lea
pop
dec
pop
in
sub
pop
jmp
out
sti
push
fisubr
in
sti
shr
(bad)
xchg
jnp
inc
sahf
sub
or
retf
inc
retf
and
je
into
mov
sbb
loop
or
mov
jo
pop
or
stc
sub
mov
xchg
jb
cmc
sub
fwait
cmp
daa
sub
shr
retf
mov
cmp
std
pop
aaa
inc
mov
cmp
shr
imul
add
cdq
push
inc
std
sahf
popa
cmp
imul
xor
lods
and
lods
mov
ret
push
cmp
push
sub
cmp
sub
cmc
ss
mov
cld
pusha
or
dec
and
das
push
repnz
mov
stos
sbb
xchg
add
pop
mov
and
das
cmp
imul
mov
cmp
jns
cmp
sbb
ret
jmp
scas
retf
test
scas
mov
in
sub
push
retf
or
inc
pop
std
sub
imul
int
mov
sar
push
pop
push
call
inc
mov
mov
shr
or
test
adc
lea
dec
jo
sub
sti
sbb
mov
jmp
cmp
jmp
les
sub
test
cdq
sub
mov
call
adc
(bad)
dec
ficom
mov
retf
fwait
mov
mov
dec
sub
lods
jae
test
sbb
pop
and
inc
(bad)
sbb
call
test
sbb
retf
and
sbb
pop
mov
or
push
(bad)
adc
icebp
sub
push
sbb
xor
dec
sar
mov
jmp
xor
in
cs
out
lahf
icebp
rcl
sub
push
int
cmp
push
adc
sub
shl
popf
retf
or
jmp
call
rcr
and
mov
inc
out
mov
stc
jg
sbb
lea
sub
pop
jbe
fdivr
and
sbb
cmp
fwait
jge
int
mov
movs
pop
inc
add
fimul
enter
sbb
xchg
pop
ret
cmp
push
daa
xor
sti
or
pop
and
fnstsw
adc
jle
mov
stos
les
call
jmp
mov
fdivr
aas
or
sbb
mov
pop
dec
sub
lods
das
mov
in
pop
pop
pop
fidiv
mov
fisubr
cmp
scas
xchg
pop
dec
cld
test
lahf
mov
(bad)
stos
dec
sub
sti
leave
retf
mov
data16
cmc
jp
test
lea
mov
movs
sti
lahf
xor
ins
inc
jmp
retf
xor
cli
sub
cmp
jo
mov
jge
push
push
test
adc
and
(bad)
out
call
and
mov
neg
lds
dec
lea
xor
cmp
inc
push
sbb
les
repnz
xchg
jae
add
loop
retf
mov
or
inc
xlat
sbb
jnp
mov
fldlg2
js
fidivr
scas
or
mov
int3
push
sub
test
mov
xor
mov
xlat
sub
int
xchg
dec
ror
adc
adc
push
rcr
fisttp
enter
xor
xchg
push
jle
sub
mov
sub
adc
mov
call
sbb
pop
cmp
mov
adc
out
lods
jle
fsubr
push
out
int3
push
mov
cmp
xchg
pop
and
push
into
(bad)
adc
add
xlat
lea
rol
fcomp
push
mov
std
xor
push
and
js
stos
popa
loopne
test
xor
ret
(bad)
std
test
icebp
push
out
shl
sub
(bad)
cld
or
jmp
xchg
aad
adc
je
arpl
pop
sbb
pop
mov
stc
ret
stc
sub
or
xchg
cmc
cwde
in
mov
mov
outs
cld
mov
daa
push
jecxz
pop
cmp
dec
daa
jmp
ret
fdivp
push
sahf
test
aaa
sbb
push
cs
jl
push
or
leave
fcompp
fmul
push
enter
fimul
pop
sti
dec
jb
cmp
outs
add
cmp
(bad)
stos
ins
mov
fcmovnbe
mov
cmp
push
test
inc
dec
cmc
sub
xchg
sub
cli
cld
mov
mov
mov
xchg
xchg
ret
retf
repnz
cs
cwde
je
sub
repz
xchg
dec
pop
shr
mov
pop
sahf
jl
rcl
push
mov
and
cli
inc
cli
lods
jb
mov
cmp
out
dec
jns
sbb
loopne
jg
dec
stc
shr
stc
mov
(bad)
cld
fsubr
adc
shl
mov
jns
xchg
mov
pushf
(bad)
xchg
mov
pop
aad
pop
int3
mov
pop
jns
or
adc
mov
jmp
lock
pop
sbb
retf
add
or
retf
shr
mov
mov
push
aam
inc
je
pushf
sbb
sub
das
jge
scas
test
jge
add
mov
push
fiadd
xchg
js
loope
pop
fmul
nop
mov
arpl
cmp
sbb
push
xchg
cwde
mov
push
adc
sub
call
ds
mov
add
enter
jno
aaa
and
int
and
add
mov
jmp
and
mov
out
jno
hlt
jl
inc
cs
jnp
sahf
pop
pop
(bad)
mov
jns
pop
call
jnp
cwde
push
in
ins
adc
jmp
pop
jp
dec
jns
jl
into
mov
cmp
neg
sbb
inc
push
fisttp
lds
mov
pop
pop
mov
call
scas
cmp
adc
mov
inc
or
pop
push
add
jmp
femms
jg
cs
dec
push
inc
dec
or
into
inc
fwait
sbb
shr
fiadd
(bad)
xor
dec
cmp
sbb
cmps
xchg
pop
cwde
pop
in
or
fild
mov
jl
pop
dec
push
imul
xor
adc
jmp
or
int
in
fistp
(bad)
arpl
pop
stc
and
int3
js
iret
sub
pop
scas
lods
stos
dec
xchg
outs
add
dec
sub
sahf
(bad)
out
out
daa
sub
rol
mov
les
sar
or
pushf
jmp
xchg
call
cmp
ficom
jbe
test
pushf
dec
out
xor
sbb
jp
sbb
popf
sbb
jne
mov
(bad)
fstp
fs
and
sti
cmp
std
or
dec
jecxz
cmps
xor
push
into
retf
scas
stos
pushf
stos
(bad)
loop
sub
lods
dec
push
dec
gs
daa
mov
pop
sub
xor
mov
movs
sti
daa
push
xor
sti
push
push
scas
fdiv
aas
xchg
push
ins
xor
outs
iret
arpl
gs
jns
(bad)
cmp
cld
addr16
cmp
jp
adc
mov
mov
fld
or
sbb
push
pop
mov
rol
cdq
xchg
push
int3
push
call
cmp
or
push
mov
sbb
hlt
mov
jmp
rol
push
xchg
jp
push
or
cdq
int
sbb
adc
std
stos
mul
fstp
mov
or
scas
push
ja
std
sbb
jns
sbb
je
mov
loope
sbb
das
outs
jns
ins
adc
sbb
ds
out
setns
push
jne
mov
cmps
jmp
xchg
iret
sbb
inc
clc
push
jb
cld
mov
leave
push
dec
imul
mov
jg
fwait
jbe
pop
push
push
jge
pop
out
outs
inc
pop
sub
jecxz
(bad)
stos
loop
xchg
cmp
jns
into
fild
repnz
jp
mov
arpl
sti
dec
mov
setp
stos
ss
and
stc
dec
jp
cmc
or
adc
dec
sbb
rcr
mov
dec
lock
dec
addr16
into
sub
xor
pusha
(bad)
pop
xchg
test
mov
pop
pop
sub
test
fwait
push
add
int3
loop
idiv
popf
rcl
xor
outs
loope
xor
es
jg
push
push
shl
jnp
out
xor
retf
repnz
int
(bad)
xlat
mov
jg
add
popf
aas
add
icebp
repz
adc
cmc
pop
enter
pushf
or
lock
(bad)
xlat
push
add
outs
jp
fidivr
mov
mov
inc
lods
push
lods
xor
fcmovnu
adc
cdq
mov
lahf
(bad)
sbb
pop
jmp
sub
shl
in
jne
addr16
pop
sub
scas
mov
es
add
mov
add
aam
or
push
(bad)
add
pop
jb
mov
mov
or
out
xchg
cmp
and
adc
test
lods
sbb
and
lea
sub
cmp
mov
rcr
call
loopne
push
mov
addr16
jb
into
into
dec
sbb
jmp
out
push
in
cmps
adc
mov
mov
sbb
sub
outs
sbb
outs
fisttp
and
push
mov
lods
or
arpl
sar
pop
(bad)
lahf
movs
fdivr
sub
mov
out
push
repnz
ficomp
fnstsw
icebp
jmp
add
sahf
les
js
and
jmp
jmp
lea
mov
mov
jmp
mov
aad
test
and
lods
test
ss
pushf
or
fcom
mov
sub
iret
fisttp
std
sbb
add
or
adc
outs
sub
adc
mov
pushf
loope
mov
mov
mov
retf
iret
imul
loop
push
mov
lock
imul
inc
add
mov
ja
mov
cmc
xlat
adc
and
push
mov
cwde
cli
fs
push
int
in
fcomi
jmp
inc
ds
mov
xor
jmp
(bad)
int3
jmp
xchg
sub
imul
fnsave
in
mov
mov
ins
lea
(bad)
adc
sub
add
or
(bad)
fsub
add
(bad)
(bad)
mov
xchg
cwde
or
addr16
aas
add
cmp
mov
mov
cvtdq2ps
mov
jge
int3
lods
pop
xchg
ins
js
adc
imul
sub
inc
fs
add
out
mov
mov
jl
retf
dec
jl
stc
neg
and
cs
sub
pop
jp
test
in
adc
adc
or
mov
sahf
xchg
add
jmp
mov
mov
popa
jnp
pop
clc
mov
add
pop
inc
mov
jecxz
popa
hlt
(bad)
gs
fwait
sahf
pop
mov
lods
mov
push
icebp
stos
push
sbb
das
lea
add
jmp
call
ins
jp
or
or
xor
xor
cmps
push
or
push
sbb
mov
scas
ins
lods
adc
jnp
cmp
sub
out
aas
(bad)
jb
push
jns
mov
pop
jnp
ret
sbb
pop
jmp
and
adc
daa
stc
in
ror
and
pop
pop
ins
cmp
sub
bound
pop
call
test
js
mov
or
sub
sub
adc
xchg
push
ds
or
cmp
xor
out
fwait
sub
dec
call
(bad)
nop
adc
xchg
call
jmp
mov
mov
fwait
pop
push
mov
pop
(bad)
cmp
pop
jno
jbe
push
(bad)
sub
jle
je
pop
ins
xor
xchg
add
cmp
xor
mov
out
mov
icebp
xor
dec
movs
cmps
jmp
cmp
pop
push
add
ror
xchg
dec
loopne
mov
adc
(bad)
push
jg
adc
imul
inc
nop
idiv
enter
mov
cwde
mov
add
out
jnp
retf
push
xchg
fcomp
scas
cli
lds
lock
and
lds
pop
adc
add
xchg
pop
(bad)
pop
push
test
push
mov
fisubr
cmc
jle
and
dec
int3
jl
jle
dec
sbb
loopne
js
push
call
push
push
(bad)
sub
cmp
xor
pushf
xlat
xchg
neg
imul
push
pop
add
std
loop
jle
jge
fstp
hlt
sub
adc
mov
cmps
ret
mov
dec
mov
test
jne
cmc
retf
jp
jecxz
pop
lea
std
cmp
and
push
ins
adc
aam
ins
sbb
or
adc
or
mov
ret
sub
icebp
lds
xchg
sbb
ret
mov
cmp
fcom
or
call
std
call
sbb
int
enter
inc
sbb
mov
jo
jg
mov
retf
(bad)
push
in
aad
sahf
lods
dec
mov
inc
imul
push
outs
pushf
es
lahf
sub
test
in
sti
ret
mov
inc
cmp
push
sub
adc
stos
das
add
psadbw
mov
xchg
jnp
cmp
mov
push
jns
adc
(bad)
jmp
ins
dec
sub
hlt
aas
repnz
add
jbe
and
add
cmp
xchg
das
xor
cmp
mov
adc
dec
dec
mov
mov
retf
mov
retf
into
cmp
or
gs
cmp
js
jae
test
repz
and
jl
ds
(bad)
ins
cmc
adc
fadd
rcr
fwait
push
pop
cwde
or
and
pop
arpl
aaa
mov
out
xchg
or
stc
jno
fnsave
les
sbb
pop
or
test
xchg
cli
xor
lahf
jmp
stos
mov
jmp
mov
adc
dec
leave
jp
popf
mov
sub
push
pop
push
aas
pop
pop
jle
or
rcl
ret
fwait
dec
(bad)
cmc
fucomip
test
dec
imul
mov
int3
pop
ins
sbb
dec
xchg
(bad)
fyl2x
stos
call
push
test
push
repnz
dec
sbb
inc
or
xchg
mov
mov
adc
mov
ins
arpl
pop
jae
sub
cs
jp
jns
xor
sbb
int3
mov
add
jns
js
adc
aam
retf
sub
iret
int
std
adc
fidiv
call
cmp
or
bound
push
or
pop
sbb
loopne
js
fsubr
int
lea
call
sub
retf
mov
leave
daa
mov
imul
lods
push
xor
jae
xchg
sahf
enter
inc
mov
push
int
in
lea
aad
and
fwait
inc
xlat
out
mov
xchg
lods
sub
push
cli
inc
pop
xor
outs
sub
ins
out
push
cmp
and
push
ror
push
and
jo
xor
mov
mov
mov
jmp
inc
xchg
call
mov
mov
fcomp
add
cmp
addr16
call
fmul
and
loope
add
jns
jp
call
icebp
(bad)
ss
mov
mov
sub
cs
xchg
jp
xor
and
jo
jmp
enter
ins
or
sbb
mov
sub
or
js
sbb
dec
clc
lods
jmp
mov
int3
jmp
sub
mov
cmc
out
add
mov
push
mov
dec
pushf
cmps
enter
retfw
outs
jmp
aad
mov
cmp
fdivr
jge
popf
and
addr16
push
ret
push
sbb
sbb
call
sbb
fst
cmp
or
mov
pop
fld
bound
mov
fild
dec
daa
jle
outs
std
or
popf
bswap
repz
mov
xor
stos
cdq
adc
dec
jp
outs
retf
cmp
iret
fwait
or
jl
push
push
xlat
inc
lock
push
mov
pop
hlt
mov
cmp
mov
push
mov
sbb
jmp
call
scas
lods
ss
jp
lahf
dec
inc
jno
cmp
push
jmp
cli
xor
jmp
cli
mov
cmp
shl
sti
pop
mov
sbb
stos
mov
cmps
mov
inc
or
cmp
gs
jecxz
or
mov
lahf
fs
add
je
das
xlat
inc
hlt
cwde
fucom
sbb
ins
neg
rcr
loope
mov
ret
int
out
imul
in
sub
inc
push
nop
popa
mov
pop
dec
stos
in
loope
adc
or
pop
ret
int3
ret
adc
pop
xchg
fmul
frstor
jbe
enter
cmp
les
retf
movs
and
fsubr
inc
jg
dec
shr
mov
sbb
mov
adc
xor
out
cmp
into
push
in
js
cs
or
push
div
xchg
ror
push
test
lds
xchg
fild
and
mov
fstp
adc
out
in
stos
lods
fucompp
das
popa
pop
mov
adc
jge
sar
sti
sahf
cmp
add
lods
test
pop
sbb
test
and
loop
dec
lods
cmp
nop
add
mov
xor
dec
shrd
int3
stc
add
sub
aas
lods
stos
push
out
or
(bad)
adc
enter
lea
xchg
setp
mov
dec
push
jmp
pusha
jns
test
and
inc
or
pop
inc
jbe
jmp
jmp
inc
add
cmp
hlt
push
sbb
repnz
cdq
test
inc
adc
and
or
cli
mov
scas
fistp
fist
jnp
xor
in
ja
cmp
sbb
xor
stos
sbb
or
shr
sbb
mov
cld
adc
fisttp
inc
into
dec
ins
dec
jmp
leave
stos
repz
mov
imul
add
jno
cwde
scas
cmp
(bad)
fistp
xchg
je
int
es
jl
into
out
cld
das
sub
mov
fsubr
mov
mov
retf
sub
jb
int
sbb
xchg
(bad)
cmp
adc
fdiv
mov
das
or
mov
mov
fs
push
repz
call
mov
rcr
retf
cld
daa
xchg
push
stc
mov
add
ins
pop
mov
pop
mov
dec
jo
and
push
xchg
dec
jne
add
inc
sbb
adc
add
jnp
jmp
retf
mov
jno
ret
add
scas
dec
sub
inc
inc
test
ja
cmp
inc
test
das
push
out
fist
movs
retf
jl
sub
jmp
cwde
popf
mov
sti
je
cmc
adc
repz
push
sbb
fisub
pop
retf
inc
punpcklwd
(bad)
fcmovu
inc
push
rcr
stc
(bad)
mov
aad
sbb
lds
jmp
movs
clc
into
hlt
fcom
sar
xchg
cmp
retf
push
fmul
ret
lea
outs
imul
mov
add
rcr
push
loop
ja
mov
push
int
add
lods
lds
xlat
mov
out
lahf
std
repnz
mov
rcl
dec
out
call
sub
mov
imul
pop
sbb
cli
(bad)
lahf
sub
dec
jns
pusha
lods
and
add
jp
dec
loopne
iret
mov
popa
in
stos
loopne
sub
(bad)
xor
mov
(bad)
push
jno
mov
or
dec
pop
xlat
xor
jg
test
mov
or
xchg
pop
adc
cmp
xchg
call
push
popf
mov
ins
cmps
imul
in
jbe
test
cld
fidivr
nop
and
mov
mov
test
je
fiadd
sbb
popf
jns
inc
or
int3
repnz
mov
lea
cmp
arpl
stos
sbb
clc
or
sub
rcr
and
jl
mov
mov
sub
or
aas
sbb
ror
je
lock
or
js
ret
push
pop
clc
xchg
fist
xor
xchg
xchg
pop
ins
das
cmp
jg
sub
lods
jmp
mov
(bad)
dec
pop
pop
mov
mov
bound
sub
adc
mov
ret
or
xchg
adc
and
xor
xor
loop
pop
js
pop
sbb
int3
js
ins
cmp
scas
dec
and
jl
adc
and
jo
and
fistp
push
push
ret
xchg
dec
mov
add
out
mov
(bad)
mov
jb
pop
out
add
pop
jno
call
and
jne
inc
xchg
xchg
inc
mov
jmp
cmps
jmp
sbb
ins
leave
adc
mov
fmul
jecxz
jge
and
bound
lods
fld
sbb
xchg
into
outs
inc
or
out
test
in
dec
scas
inc
movs
mov
loopne
inc
ins
stos
jge
fucom
scas
and
jae
jnp
mov
mov
or
fisttp
mov
cmp
out
jl
push
cmp
call
jmp
fwait
xchg
push
in
iret
mov
jbe
shr
in
push
jge
xor
or
xchg
fcomp
retf
inc
popf
push
test
imul
cmp
ficom
scas
fisub
into
in
add
std
pop
or
pop
pop
iret
add
xchg
retf
adc
pop
outs
inc
ins
pop
repz
or
jge
popf
retf
clc
mov
cmp
sbb
movs
stc
push
rcl
fidivr
jge
fsubr
icebp
adc
jne
cmp
add
sbb
push
mov
jmp
cdq
ins
mov
(bad)
aad
mov
pop
push
outs
fld
pop
retf
(bad)
and
popw
retf
pusha
into
push
jmp
or
pop
std
push
pop
jge
sbb
cwde
sets
sbb
fidiv
add
cmc
push
fsub
bound
sub
enter
cmp
retf
pop
retf
ret
dec
ficom
pop
sub
mov
cmp
ret
or
ins
push
repnz
out
fdiv
call
dec
std
push
xor
add
sbb
push
aad
in
ret
ficomp
mov
pop
add
(bad)
push
inc
iret
mov
dec
adc
add
cs
rcr
add
push
ins
mov
xor
sbb
dec
adc
fwait
inc
push
pop
xor
mov
ins
fisttp
cmp
cmp
jle
test
xor
stos
adc
lods
pop
ret
and
clc
inc
mov
jb
mov
or
sub
cmp
cmps
inc
sub
ins
(bad)
push
outs
dec
pop
or
dec
pop
retf
pop
(bad)
int3
xchg
inc
jae
movs
scas
mov
js
(bad)
dec
pop
jnp
lds
sbb
(bad)
adc
call
lahf
mov
lock
xor
mov
loope
dec
(bad)
xchg
xchg
imul
inc
shr
outs
jge
jmp
add
add
gs
pop
arpl
int3
out
xchg
push
fisttp
jmp
xchg
je
mov
test
test
and
ret
cli
mov
out
pop
(bad)
xchg
dec
bound
sbb
bound
ret
js
stos
xchg
xchg
dec
push
call
sub
jo
cmp
xor
aad
dec
dec
cmp
hlt
ficomp
lds
cmp
inc
xchg
add
inc
fs
cmp
pushf
pop
ds
out
inc
repnz
xchg
imul
pop
pop
jl
movs
cmp
sti
arpl
retf
jmp
pop
(bad)
cmp
xchg
or
push
sub
nop
mov
bound
call
push
push
std
push
jle
fcomp
push
cld
pushf
call
xlat
neg
mov
cwde
dec
jp
fimul
clc
int3
push
stos
cld
sbb
stos
or
cmps
pop
gs
mov
or
fs
jp
sbb
out
sub
test
inc
rol
loopne
cdq
sbb
ins
adc
push
pop
pop
sub
jmp
sub
cmp
mov
xor
fimul
push
xchg
mov
sub
cmp
adc
aas
dec
iret
adc
jns
ficomp
pop
test
mov
les
or
push
out
adc
out
or
inc
pmaxub
and
aam
cli
fild
push
out
(bad)
fs
fucompp
scas
jle
fisubr
fldenv
xor
and
pop
clc
in
out
repnz
test
sbb
jns
jp
sbb
xor
xchg
jno
pushf
xor
cmps
sbb
test
shr
jns
lahf
rcl
mov
mov
clc
icebp
pop
iret
fld
stos
xchg
cdq
lods
adc
in
jl
cmp
add
ret
bswap
in
sbb
jmp
ss
mov
pop
lea
stos
movs
dec
push
repz
pop
pop
xchg
sub
sub
(bad)
mov
xchg
mov
test
inc
or
inc
push
aas
icebp
ins
sub
dec
data16
jmp
lods
mov
push
stos
xor
pushf
ss
in
inc
enter
cmp
dec
push
push
push
sub
pop
arpl
add
xchg
xchg
mov
std
icebp
data16
xor
sti
mov
jne
jge
xor
out
push
pop
int3
cmps
repz
cmc
dec
ret
lods
cwde
sbb
jnp
stos
rcl
fwait
(bad)
std
sbb
jne
icebp
pop
dec
(bad)
rcr
sbb
cmp
daa
popa
mov
jne
add
sub
sbb
addr16
mov
enter
ret
test
push
(bad)
in
shl
jbe
or
mov
(bad)
cmc
mov
cmp
out
push
pop
adc
add
dec
and
jecxz
mov
outs
mov
(bad)
mov
dec
or
pop
mov
ds
pusha
jge
push
xchg
fmul
mov
out
cmp
outs
cmp
sub
mov
retf
cld
add
and
fnstcw
and
pop
pop
or
xchg
dec
adc
daa
clc
(bad)
lds
inc
mov
mov
push
xchg
mov
sub
mov
sbb
push
jp
cmp
or
push
movs
mov
std
call
xchg
mov
mov
cmp
xor
ds
lods
pushf
ins
test
cmp
add
pop
sbb
mov
sbb
dec
dec
cmc
mov
fild
std
cmp
jb
fisubr
js
mov
movs
mov
dec
repz
retf
cld
jb
retf
test
sbb
adc
or
jmp
scas
jl
mov
xchg
or
jnp
leave
mov
(bad)
sub
cmp
retf
add
fisubr
retf
xor
mov
das
scas
sbb
pop
(bad)
iret
push
inc
jnp
or
pop
mov
popf
mov
push
enter
mov
retf
pop
cmp
sub
and
in
cwde
(bad)
cdq
shl
mov
sbb
pop
int3
mov
popf
aaa
das
das
(bad)
aad
sub
enter
das
fs
retf
lea
daa
aam
fcomp
fbld
sar
sbb
ins
or
popa
(bad)
hlt
cdq
mov
mov
dec
in
popf
cmp
call
mov
in
or
mov
pop
cdq
sbb
out
hlt
sbb
dec
pop
mov
push
test
and
mov
jmp
mov
fs
dec
cli
dec
nop
neg
xchg
pop
jle
test
out
test
std
call
mov
xchg
mov
cli
cmp
fdivr
pop
pop
pop
pop
ins
and
dec
dec
fwait
movs
sub
xlat
dec
nop
daa
out
push
mov
xor
cdq
xchg
xor
(bad)
imul
fmulp
add
cmp
cmps
sub
sbb
xchg
pushf
push
test
into
sub
gs
mov
dec
fcom
sub
ds
ficom
jbe
fisttp
mov
call
sbb
mov
sub
fs
cld
sbb
or
std
mov
jl
aam
mov
inc
adc
iret
jmp
out
imul
push
sti
scas
xlat
add
push
leave
in
and
je
dec
leave
cli
out
mov
out
cmps
ds
and
push
mov
int3
sub
das
mov
or
fbstp
jge
cld
add
add
(bad)
push
js
ds
and
or
scas
pop
add
sar
jmp
push
test
add
dec
mov
sub
dec
cmp
sub
push
sub
add
dec
lock
pop
retf
out
fisttp
push
fcmovb
pop
mov
jno
inc
dec
mov
lea
mov
or
dec
and
push
(bad)
pop
jp
pop
xor
(bad)
sub
mov
lock
cmps
or
js
enter
leave
cld
cmp
std
sar
int
and
mov
sar
aas
ja
push
cmp
cmc
es
mov
add
jmp
int
(bad)
mov
pop
mov
or
jnp
das
ret
mov
(bad)
in
push
cwde
int
out
(bad)
call
clc
retf
ret
adc
jp
mov
scas
ins
cs
into
dec
popa
fldcw
xor
cdq
dec
or
dec
jae
add
add
lahf
idiv
imul
mov
sub
or
adc
dec
sub
add
sti
dec
jns
dec
mov
mov
dec
mov
cmp
xchg
jb
pop
inc
and
lahf
fsubr
sbb
in
retf
xor
sub
lods
mov
in
sbb
cli
int
and
pop
mov
rcr
fisttp
(bad)
repnz
jl
push
mov
pop
enter
pop
xchg
fist
sti
aas
push
sub
dec
mov
jp
mov
jge
jae
ret
pop
adc
xchg
mov
mov
cmps
mov
sub
fld
sti
dec
cmp
or
scas
fwait
jecxz
out
sti
xlat
inc
xchg
das
push
xor
mov
aad
lods
pop
add
pop
pushf
push
pop
mov
dec
aaa
leave
daa
and
jmp
imul
scas
test
pop
xchg
mov
cli
or
xor
dec
lock
cli
sub
popf
lahf
mov
test
push
cmp
in
(bad)
xor
jmp
mov
lock
loope
and
enter
pop
loop
jg
call
add
(bad)
xor
sbb
dec
xchg
jl
aam
mov
dec
sub
cmps
or
pop
and
test
mov
push
sbb
cmp
in
push
xor
or
sbb
xchg
retf
dec
cmp
push
repz
mov
push
enter
pop
cmc
ss
jns
pop
cmp
int
(bad)
int
mov
sbb
cdq
test
xor
xor
aas
arpl
rcr
sahf
test
fld
jmp
(bad)
loope
fisttp
dec
push
adc
shl
sar
and
mov
push
mov
xor
(bad)
fstp
mov
mov
in
mov
cdq
mov
jae
movs
popf
jmp
cmp
lock
xchg
pusha
popf
lahf
push
popf
or
sbb
retf
dec
inc
cmp
mov
cmp
push
shr
imul
scas
(bad)
mov
stos
jns
in
wbinvd
stos
outs
fwait
xor
jns
xor
add
in
xor
mov
inc
enter
outs
dec
mov
xchg
gs
imul
xchg
loopne
scas
(bad)
(bad)
mov
lods
mov
pop
sub
stos
sbb
or
inc
std
int3
clc
fbld
std
bound
mov
sub
push
retf
pop
push
ds
push
repz
sbb
lods
sbb
clc
jmp
mov
mov
mov
mov
or
add
inc
mov
leave
xchg
inc
inc
or
lahf
push
pop
sub
pop
(bad)
fadd
idiv
repnz
or
cmps
nop
shr
push
sbb
and
pop
fistp
clc
and
push
ffreep
xchg
imul
pop
and
(bad)
retf
test
dec
leave
test
mov
mov
pop
adc
pop
sub
sbb
loope
clc
push
test
pop
jmp
dec
push
inc
push
sub
div
or
mov
add
pop
sub
aam
add
jl
in
ja
sbb
sub
or
lods
rcr
or
addr16
jmp
in
pop
fidiv
push
mov
outs
sub
push
push
mov
pop
fisttp
imul
ret
jmp
sti
xchg
enter
sbb
add
outs
ja
(bad)
out
xor
dec
mov
shr
mov
call
int
xchg
xchg
dec
or
out
clc
leave
xlat
cdq
and
outs
sbb
in
jp
ss
fstp
hlt
bnd
ja
lea
adc
mov
ror
cmp
or
stc
into
cwde
fsubr
repz
(bad)
(bad)
cli
retf
mov
cwde
jb
pop
sub
or
popf
cmp
fdivrp
lea
add
pop
popf
dec
sbb
jp
inc
div
jge
sbb
jmp
aam
cmps
ret
les
mov
in
int3
or
fwait
out
push
adc
ss
sbb
popf
call
pop
mov
popf
ja
push
add
test
sub
mov
push
mov
mov
adc
mov
push
cmp
cmp
sbb
add
(bad)
sbb
retf
lea
xchg
and
inc
or
pop
loopne
sub
call
xchg
mul
(bad)
and
sbb
in
cdq
add
add
gs
jmp
jnp
xchg
aad
clc
(bad)
mov
les
sub
lods
jmp
sub
xor
retf
fs
int3
adc
aad
ret
pop
pop
es
cwde
lods
inc
xchg
sbb
or
sbb
pop
and
jmp
movq
xor
aas
std
mov
ja
mov
(bad)
repnz
cmp
cmp
movs
mov
jo
inc
imul
and
jge
cmps
test
shl
cmp
xor
jp
ds
xchg
sysenter
cwde
mov
pop
push
je
js
pop
rol
adc
sub
clc
int
stos
add
inc
jl
mov
add
adc
sbb
dec
(bad)
cmps
xchg
mov
xchg
out
repnz
std
and
xor
int3
mov
mov
test
js
push
or
push
fs
scas
iret
popf
int
retf
in
jg
and
push
(bad)
mov
or
ss
mov
inc
jge
adc
sub
movs
call
push
jmp
and
out
push
(bad)
sti
jge
test
in
pop
pop
mov
mov
xor
jp
jge
mov
stos
aas
xchg
pop
mov
mov
mov
fcmovbe
xor
xchg
mov
cmp
mov
adc
pop
shl
mov
imul
pop
movs
sbb
shr
cmc
jle
pop
loope
ret
stc
sahf
and
pop
out
sub
int
test
sub
push
cmp
mov
adc
rcr
dec
xor
adc
or
les
or
movs
push
les
jecxz
add
shr
std
or
xor
out
(bad)
push
or
outs
addr16
xchg
(bad)
test
gs
sub
adc
mov
cmp
imul
call
fdiv
sbb
push
stos
and
int
sub
loop
inc
push
fimul
ret
jecxz
inc
fcomp
imul
psadbw
add
cmps
in
xor
cmp
popa
stc
in
fimul
data16
call
cmps
stc
adc
loop
xor
sar
jae
adc
test
cld
call
jbe
push
cmp
aaa
into
arpl
and
mov
add
in
fld
lods
mov
push
out
cmps
dec
loop
imul
fcomp
or
pop
inc
push
scas
sbb
gs
or
stos
(bad)
sti
jb
pop
sub
pop
sbb
push
and
in
lahf
bound
psubusw
mov
test
enter
ins
sub
scas
lahf
fadd
popa
fucomp
cmp
pop
sbb
dec
sbb
cs
dec
outs
loop
jp
clc
lods
stc
jg
xor
lods
ins
out
dec
jg
ins
xchg
add
or
pusha
stos
iret
mov
mov
(bad)
aad
cli
fbld
pop
or
xchg
sbb
xor
(bad)
ficomp
sub
cli
jge
fdivr
push
push
push
fwait
je
loopne
pop
pusha
imul
pop
sub
fcom
aad
iret
mov
or
outs
test
mov
jle
(bad)
(bad)
fnstsw
movs
mov
scas
aaa
js
cmp
mov
xor
out
ss
push
adc
shl
inc
imul
idiv
arpl
and
push
sar
fxch
xchg
xchg
arpl
inc
xor
jns
fstp
fldpi
dec
adc
adc
in
outs
jmp
mov
mov
xor
dec
push
imul
stos
pop
add
jmp
jge
movs
add
sar
lahf
push
retf
sbb
cmp
(bad)
mov
push
pop
pop
aas
aas
loope
retf
and
out
sub
ds
cmc
fwait
sub
cli
inc
cld
mov
push
int
mov
or
sbb
pop
js
repnz
mov
sub
mov
enter
fstp
(bad)
sbb
dec
dec
cld
pop
cli
scas
push
fs
push
sbb
test
mov
sbb
pushf
mov
sahf
mov
scas
push
push
mov
sub
ss
data16
mov
sti
xor
cld
and
dec
movs
jp
in
test
shr
dec
ret
xor
(bad)
sbb
test
int
or
sahf
push
add
jl
and
ins
add
jge
dec
int
lahf
lahf
sub
shl
sub
call
ins
ret
jne
mov
inc
sti
or
add
pushf
sahf
movs
fs
push
dec
dec
mov
sub
ror
pop
or
aam
enter
mov
sbb
mov
pop
sub
mov
pop
lahf
sbb
(bad)
dec
dec
out
stos
cmp
push
shr
std
call
sub
xor
iret
cmp
pop
add
mov
mov
jg
adc
jecxz
dec
ins
int3
mov
mov
jmp
mov
enter
in
cmp
aas
dec
pop
pop
inc
fiadd
or
lahf
cld
popf
dec
loopne
dec
lea
sbb
jno
fmul
mov
add
adc
(bad)
cwde
jecxz
cwde
add
je
pop
je
iret
jmp
int
xchg
jp
cmp
ins
and
push
scas
fidivr
ds
sbb
jl
xor
push
(bad)
mov
ficomp
mov
mov
cmp
mov
xchg
jmp
(bad)
aam
mov
aaa
or
xor
fld
jb
jbe
in
dec
into
inc
call
sti
imul
pop
adc
dec
dec
lea
lock
xor
adc
push
shl
push
sub
mov
std
adc
pop
ins
(bad)
or
add
xlat
or
adc
xor
not
loop
int
movs
dec
lea
inc
pop
inc
lea
push
iret
stos
iret
mov
mov
outs
dec
jno
sbb
jl
sbb
and
add
into
repz
stos
js
fisttp
stos
mov
popf
int
std
xor
test
out
add
dec
push
ins
adc
out
xchg
ins
outs
aad
sub
push
pop
jmp
push
xor
jmp
sub
dec
enter
cmc
lea
xlat
or
push
pop
push
lods
mov
das
call
sub
ins
lahf
adc
dec
adc
out
fxch
imul
in
imul
cmp
and
add
loope
adc
xchg
(bad)
mov
push
cmc
rcl
stos
inc
jmp
sbb
fucomp
mov
cli
leave
popf
bound
push
fwait
mov
cmp
sub
cmps
js
ss
adc
sub
sbb
fucomi
cmp
push
xor
rcr
fwait
mov
movs
inc
fmul
inc
jp
hlt
pop
je
cmp
mov
cmps
mov
adc
pop
push
jge
jne
cld
aam
mov
jae
push
sahf
loope
pop
jns
shl
cmps
jmp
stos
jmp
sub
dec
or
cs
mov
shl
cmc
fstp
mov
cmps
mov
xchg
es
sbb
bound
arpl
std
iret
xor
mov
mov
pop
adc
pop
sbb
mov
ins
imul
adc
cmp
mov
repnz
ror
scas
out
loop
jns
inc
dec
dec
jle
jge
xchg
aad
(bad)
mov
pushf
pop
int
test
sub
(bad)
imul
sub
fwait
daa
cmp
mov
pop
std
leave
or
xchg
bound
jge
iret
sbb
jl
es
xchg
(bad)
in
mov
ja
xor
push
movs
dec
std
mov
mov
test
adc
sbb
cmp
int
xrelease
cdq
mov
mov
inc
mov
jp
mov
cmp
aam
aaa
fdivr
inc
dec
test
leave
sbb
push
es
or
xchg
jmp
loop
jp
test
dec
jnp
jl
or
pop
sbb
sbb
fwait
(bad)
jne
and
repnz
fist
test
or
fnstsw
inc
mov
xor
call
arpl
outs
dec
retf
jo
adc
test
push
xor
(bad)
dec
adc
rcl
dec
outs
ins
jmp
and
cs
sub
fmul
in
fisub
jne
xchg
std
fnsave
movs
(bad)
adc
pop
pop
dec
cmp
adc
mov
pop
frstor
outs
jb
pop
fild
into
fld
pop
pop
das
aas
pusha
bound
into
retf
popf
adc
xchg
and
icebp
repz
mov
cmp
add
rcr
out
fbstp
or
mov
outs
ins
sub
aaa
mov
fs
pop
cmps
into
lea
ins
mov
jne
lock
ja
outs
scas
gs
and
and
rcr
jl
pusha
mov
lods
fidivr
bound
xchg
add
outs
fwait
arpl
cmp
fcomip
(bad)
sub
push
fsub
into
jno
pushf
push
pop
jl
and
sbb
push
xchg
cld
dec
js
add
mov
lods
mov
jne
cli
mov
fdivr
mov
repz
lea
jmp
pop
lea
clc
loopne
mov
pop
pop
add
add
dec
xchg
ins
xor
les
cmc
std
in
pmaxsw
ret
fiadd
and
sub
pop
out
int3
pop
cli
dec
or
sub
ins
lock
dec
std
pop
jo
(bad)
iret
scas
or
nop
gs
cmp
sbb
mov
and
cld
cmps
cld
or
push
(bad)
popf
mov
ins
arpl
cmp
sub
popa
xor
push
xchg
(bad)
ins
push
sub
fimul
jmp
(bad)
cld
xlat
pop
popa
pop
sti
jae
xchg
lea
add
jns
ds
dec
add
js
(bad)
add
pop
(bad)
ins
cs
es
in
imul
mov
out
js
adc
jns
in
test
pop
ins
sqrtps
enter
ins
fcomp
pop
add
fsubrp
cmps
cmp
xchg
sbb
or
fcomp
(bad)
inc
inc
into
mov
push
xchg
icebp
xor
test
call
mov
or
aad
cmp
sbb
or
leave
dec
xor
inc
mov
dec
sub
adc
pop
cld
jae
out
cwde
je
retf
loop
push
mov
rcr
les
xchg
or
add
popa
(bad)
sub
sbb
imul
jg
cli
aam
(bad)
and
test
xor
call
dec
sbb
dec
lea
aam
sbb
pop
add
ret
repnz
mov
inc
clc
retf
jg
sub
mov
adc
sbb
stos
jno
std
push
das
sbb
(bad)
nop
aas
jp
and
loope
jbe
pop
test
inc
cdq
inc
mov
(bad)
xchg
jno
inc
mov
aad
and
mov
das
pop
pop
jnp
ins
int3
push
in
aas
imul
test
xor
(bad)
in
in
fistp
jge
pop
and
fmul
(bad)
cld
aad
mov
adc
fcmove
mov
sub
push
or
sar
jecxz
cwde
add
cdq
sbb
xlat
imul
pop
dec
test
in
in
pop
imul
adc
sub
int
repnz
je
or
push
pop
pop
dec
shl
jnp
es
xchg
(bad)
clc
cmp
aaa
inc
(bad)
icebp
jnp
(bad)
mov
pop
mov
jnp
out
cmp
jl
adc
into
sub
outs
popf
or
sar
jmp
adc
sahf
mov
pop
fmul
call
scas
push
cld
add
les
shl
mov
vminpd
int3
push
mov
shl
and
mov
pop
call
sub
out
repnz
je
push
mov
stos
xor
dec
push
xchg
push
jp
fisttp
cli
loop
les
jns
stos
movs
pushf
call
jecxz
in
xchg
xor
adc
inc
sub
mov
pop
cmp
xor
mov
ins
sbb
sub
mov
ins
dec
mov
into
sbb
jge
popf
icebp
stos
call
jl
push
xor
or
cmp
xor
js
int
xor
bound
aam
cmp
mov
shl
push
mov
adc
push
cmp
or
fsubr
xchg
js
aas
adc
jne
call
sbb
or
jl
lock
(bad)
int
mov
ins
test
mov
dec
lods
mov
add
add
stos
or
jle
sar
fs
adc
xchg
ret
int3
mov
into
cmp
sub
mov
stos
sahf
hlt
add
add
cmp
inc
sub
sub
push
(bad)
int3
mov
push
in
out
lds
inc
les
(bad)
jb
pop
stos
jno
mov
pop
sub
lods
mov
iret
fidivr
mov
sub
push
enter
adc
push
ror
sbb
(bad)
adc
or
xor
fadd
mov
push
adc
sbb
fisubr
sbb
mov
scas
cld
rcr
cmc
loop
inc
in
xchg
mov
cvtpi2ps
out
ja
xchg
jb
cmp
mov
or
jno
ins
je
lds
lds
(bad)
cmc
mov
fs
add
push
mov
sub
push
sub
bnd
sub
data16
sub
pop
mov
pop
loop
inc
int
call
mov
dec
sub
mov
sbb
loop
popf
rcr
shl
test
dec
sub
sub
fs
add
pop
lods
inc
lods
add
jp
and
pop
fwait
aaa
pushf
in
inc
fidivr
sub
dec
(bad)
mov
xchg
gs
adc
retf
dec
imul
popf
sub
ret
in
sub
test
jbe
mov
push
test
mov
sbb
test
int
push
inc
fstp
mov
fmul
mov
mov
sbb
mov
aad
cmps
popf
xchg
jl
in
sbb
inc
dec
fiadd
outs
in
sub
jne
fcmovb
call
loopne
adc
cmp
mov
fistp
and
mov
xchg
jnp
das
mov
sub
sbb
fcomp
das
pop
or
bound
inc
jp
les
lods
xor
outs
lea
jns
lods
scas
sub
sbb
(bad)
inc
xchg
sbb
ret
in
int3
ds
pop
retf
xor
sbb
cmc
outs
mov
or
cmp
repz
push
mov
sahf
sbb
test
jp
cmp
call
cmp
sub
sub
sbb
retf
xchg
push
jae
jmp
enter
push
(bad)
jg
pushf
or
test
aas
sbb
test
lock
fucomip
push
and
and
xchg
and
cwde
xor
dec
push
mov
xchg
push
popf
jle
xchg
dec
mov
popf
sbb
js
imul
hlt
or
daa
cmc
call
add
inc
in
adc
add
adc
iret
dec
mov
mov
sbb
pop
loopne
dec
and
dec
or
inc
pop
into
ds
std
xchg
stc
mov
xchg
sub
mov
cmp
push
add
das
jb
sbb
xchg
into
shl
fcomip
sub
mov
push
dec
mov
pop
sub
add
pop
pop
leave
mov
fnstsw
push
cld
js
dec
ins
mov
sbb
dec
movs
mov
jb
mov
movs
adc
stos
mov
call
push
sub
add
inc
dec
mov
stos
ja
das
std
pushf
leave
xlat
jmp
pop
mov
adc
ds
loope
mov
sbb
push
lds
call
sti
fcmovnu
mov
mov
fs
aad
or
std
sti
jae
adc
test
dec
xchg
mov
mov
push
mov
or
cs
(bad)
sub
mov
sub
mov
enter
sbb
lods
jnp
push
loopne
and
ret
popf
xchg
cmp
and
cmps
and
repz
ror
loop
retf
push
jb
sbb
add
and
push
arpl
lods
stos
out
mov
cmps
mov
mov
mov
sar
dec
call
lahf
add
xchg
pop
popa
sbb
jg
add
pop
les
adc
cmp
in
imul
push
jge
add
pop
in
sub
xchg
(bad)
fidivr
movs
cmps
add
in
dec
mov
cmp
cs
push
in
inc
shr
aas
jle
mov
ins
cmp
cmp
pop
leave
aad
sar
mov
stos
xor
xchg
cwde
ins
push
mov
sbb
jne
sub
mov
mov
stos
or
fdiv
mov
cld
sahf
mov
inc
push
popf
repz
or
xchg
mov
adc
iret
ja
cmps
mov
test
outs
daa
jbe
jo
add
leave
inc
mov
mov
lea
sahf
add
xchg
jb
jmp
(bad)
pop
in
aas
xchg
sbb
mov
sar
jle
outs
dec
mov
dec
cmps
push
fnsave
in
cli
jmp
ja
jge
push
xchg
mov
int3
jg
and
aam
sub
repnz
cli
test
or
movs
gs
dec
push
aas
push
jne
dec
ret
and
pop
test
mov
mov
(bad)
loopne
adc
mov
fs
call
inc
aas
jmp
je
lea
bound
call
jl
cmp
call
push
adc
add
pop
adc
mov
retf
sub
mov
inc
mul
mov
jp
and
ss
push
sub
adc
mov
lds
not
loope
icebp
jae
adc
enter
push
out
lods
mov
mov
or
cli
imul
jne
cmp
inc
sub
loopne
adc
jmp
call
mov
and
pop
push
sbb
aam
push
mov
push
push
sbb
pusha
mov
adc
dec
pop
icebp
ds
sub
adc
retf
repz
jmp
xchg
sub
jecxz
shl
mov
cwde
in
xor
aam
popa
ror
sbb
outs
int3
xor
retf
mov
call
enter
lea
sub
add
jae
pop
cmp
mov
mov
sbb
mov
fnstcw
outs
mov
dec
not
mov
sub
cmps
fcmovb
lock
outs
test
or
pop
sub
jp
jae
mov
(bad)
xchg
mov
mov
push
lahf
add
nop
adc
daa
ret
sub
cwde
lea
clc
push
pop
movs
xchg
in
push
enter
ret
mov
push
gs
stc
add
push
fstp
cmp
lds
(bad)
jmp
mov
jle
retf
jg
adc
mov
cdq
pop
cs
fdiv
in
mov
jb
and
pop
imul
ja
mov
repz
enter
enter
std
ror
jae
jb
scas
ror
aaa
jns
dec
dec
ins
in
mov
sbb
push
loopne
jp
in
jl
es
mov
mov
sbb
scas
dec
jo
aaa
ss
outs
inc
add
jae
mov
dec
xchg
dec
inc
imul
out
pop
in
jno
sbb
call
iret
fist
jo
fstp
lea
sbb
mov
push
jle
sbb
std
and
mov
mov
cmc
xchg
ja
fiadd
sub
outs
pop
push
in
sub
lahf
add
jl
dec
pop
std
bswap
sti
ret
(bad)
push
mov
stos
out
call
movs
iret
pop
das
dec
je
ror
or
stc
sub
sahf
xchg
xor
jns
retf
stos
or
jmp
int
sub
sahf
cmp
mov
mov
popa
pop
cmp
dec
scas
pop
fmul
sub
jg
add
jns
pop
test
adc
dec
jg
dec
out
mov
ffreep
cmp
adc
mov
imul
retf
cli
fpatan
leave
sub
fwait
mov
mov
add
int
jl
js
pop
stos
sahf
stos
or
cli
retf
jmp
ret
vmovlps
pop
test
lds
mov
sbb
test
cld
and
and
inc
scas
loopne
xor
push
jne
jns
scas
jl
outs
xchg
and
popa
sub
xchg
stc
pop
mov
movs
movs
ins
mov
xlat
cli
jnp
fwait
aas
lods
les
adc
or
mov
in
retf
test
out
lock
mov
dec
jns
jbe
outs
pop
sub
mov
(bad)
jnp
mov
push
fwait
or
hlt
jb
pushf
or
stos
out
int3
fsubp
sbb
sub
fdivrp
mov
xchg
push
(bad)
cld
ja
inc
lea
push
addr16
xchg
xchg
popf
dec
in
cmp
xchg
mov
ret
jnp
sbb
aad
xlat
daa
sub
inc
leave
jnp
out
cli
mov
mov
mov
jno
std
push
cmp
inc
pop
dec
pop
repz
pop
mov
fisttp
sahf
sub
(bad)
in
add
outs
fnstenv
cmp
ffree
jns
loope
jmp
xor
mov
leave
es
bndstx
pop
sbb
xor
retfw
stos
scas
push
clc
mov
push
cmp
pusha
or
sbb
leave
sbb
retf
cmp
sahf
rcr
push
fmul
xchg
pop
sbb
mov
into
cli
out
inc
mov
mov
add
arpl
jge
or
scas
rol
cmps
mov
dec
cmps
pop
imul
sahf
jb
pop
loopne
mov
xchg
cmp
dec
jge
adc
cmps
sahf
cmc
bound
retf
xchg
pop
xchg
xor
sar
mov
add
and
mov
sbb
pusha
addr16
arpl
test
sbb
and
push
dec
pop
jmp
adc
(bad)
cmp
dec
cld
xchg
cmc
shr
jnp
sbb
fstp
mov
cmp
movs
jmp
add
pop
scas
movs
pop
shl
ins
ficomp
sbb
ficom
pop
and
xchg
sub
cs
out
xchg
fcmove
and
add
xor
dec
pop
adc
inc
sub
inc
mov
cmp
adc
or
lock
xchg
mov
mov
nop
and
push
push
movs
dec
test
cmps
push
push
cld
sbb
imul
pop
cmp
cwde
xor
in
out
dec
push
mov
lahf
or
pop
inc
inc
adc
mov
xor
or
adc
xor
mov
outs
repz
xor
inc
jb
dec
in
mov
or
xchg
bound
adc
inc
or
xor
mov
dec
retf
sahf
sbb
mov
cli
cli
or
nop
(bad)
out
in
popa
sub
dec
dec
cmp
dec
loop
mov
dec
sbb
aaa
dec
test
mov
les
cmp
int3
mov
icebp
and
and
xchg
push
add
inc
mov
mov
popf
cmc
jb
sti
stos
add
arpl
dec
jns
dec
push
les
cmp
sbb
xchg
mov
out
fldcw
add
add
push
mov
and
or
test
adc
push
ss
inc
jae
cs
ins
loopne
sbb
mov
sub
adc
push
or
add
mov
loop
sub
push
pop
cmp
sub
dec
scas
rcl
test
jne
xchg
pop
lods
fwait
jmp
and
outs
fcomp
stos
stos
addr16
loope
fld
adc
pop
mov
pop
sbb
addr16
jg
movs
retf
ror
fwait
dec
lahf
imul
mov
dec
sbb
lea
and
iret
(bad)
out
push
mov
into
jo
add
arpl
or
das
pop
mov
fstp
clc
fwait
scas
scas
ins
call
dec
jmp
add
ret
(bad)
out
mov
lods
xchg
xchg
dec
pushf
cs
pop
sti
xor
rsm
js
sbb
retf
aam
(bad)
xlat
pop
inc
cld
mov
sti
bound
mov
popa
or
stos
or
shl
mov
es
in
xchg
cmps
(bad)
sub
dec
test
pushf
xlat
inc
adc
(bad)
fcmove
(bad)
mov
cmp
repz
push
pop
xor
sub
mov
jmp
sti
jp
xchg
gs
lods
stos
sub
sahf
dec
or
push
gs
dec
ins
mov
dec
jmp
cmp
push
into
loop
loop
test
leave
inc
add
dec
out
sub
out
sub
movs
sub
mov
adc
outs
pop
sbb
(bad)
ficomp
mov
leave
pop
dec
ins
mov
lds
aas
in
dec
inc
adc
xor
sub
add
mov
dec
or
ficomp
mov
jecxz
inc
sbb
gs
dec
loope
xchg
dec
stos
sub
mov
iret
or
cli
xor
push
xchg
imul
sbb
push
dec
outs
lea
repnz
lock
ins
stos
clc
push
mov
pop
gs
jnp
jnp
sbb
push
inc
inc
xor
sub
test
cmps
enter
mov
add
jmp
mov
push
jl
retf
sub
dec
ror
pop
lds
mov
cmp
push
loopne
mov
push
cmps
stos
sub
xchg
les
or
xchg
dec
pushf
sub
pushf
inc
iret
cmp
mov
mov
mov
in
push
add
mov
pop
fxch
dec
lds
jb
xor
repz
iret
mov
lds
sub
or
ins
pop
add
cmps
sub
mov
gs
mov
retf
fcom
ds
xchg
stos
pop
cmp
cmp
stos
adc
int3
ins
dec
mov
dec
pusha
jb
aad
pop
cmc
cmp
(bad)
push
mov
js
xor
cwde
mov
mov
xor
(bad)
leave
call
int3
lahf
dec
sbb
xor
dec
cmc
inc
mov
cmp
data16
scas
and
sahf
pop
inc
xchg
sub
pusha
adc
pop
sub
push
int
(bad)
jno
(bad)
int
imul
mov
cmp
out
xor
outs
cmps
out
jne
pop
(bad)
sbb
iret
stos
sub
cld
mov
test
int
inc
cs
jg
mov
lds
jbe
sbb
jg
inc
jmp
cmp
in
shl
jo
sbb
int3
mov
stos
test
test
lahf
mov
neg
push
aaa
icebp
dec
dec
jns
add
fsubr
outs
(bad)
shr
cmc
(bad)
out
add
out
jl
sub
retf
cmp
mov
push
sbb
jge
dec
in
push
cmp
jnp
jmp
fs
fs
mov
dec
cli
fldcw
push
fwait
mov
loopne
pop
pusha
pusha
dec
xchg
dec
inc
adc
mov
mov
sbb
mov
movs
ins
or
stos
cmp
out
and
and
xor
adc
ja
movs
stos
cld
jne
(bad)
imul
sbb
fldcw
push
js
ret
into
cmp
sti
aad
add
dec
jg
push
or
cmp
fcompp
dec
retf
fstp
jp
aas
inc
test
sbb
jg
jmp
xchg
movs
sub
sbb
jp
jbe
imul
or
xor
jno
or
xor
xor
inc
mov
out
dec
dec
mov
outs
or
cmp
cwde
sub
js
call
pop
pushf
mov
popf
std
faddp
mov
pop
aad
lods
inc
lea
(bad)
xor
lea
push
stos
lods
push
jge
jg
lods
jle
or
ins
sbb
inc
cmp
jecxz
pop
rcr
inc
and
sub
cmp
jbe
pop
mov
ds
daa
(bad)
enter
xor
lods
(bad)
and
adc
cmps
dec
dec
push
adc
lds
dec
and
cmp
mov
and
xchg
setle
sub
daa
mov
mov
sub
fwait
jmp
call
lea
test
les
mov
not
mov
ds
pusha
shr
cwde
shl
repnz
jecxz
imul
ret
das
out
js
inc
xlat
fcomp
fist
adc
fld
pop
mov
ins
pop
sub
sbb
inc
jno
rcl
pop
push
push
jle
mov
xchg
cmp
or
int3
xchg
mov
lea
dec
into
dec
sbb
repz
pop
fs
inc
(bad)
out
rcr
int
xor
xor
mov
push
xor
outs
xchg
stos
or
add
jp
cli
dec
cli
jge
retf
xchg
cld
mov
pop
(bad)
popf
js
sbb
sahf
or
ds
xor
call
lds
mov
dec
sbb
pusha
sti
ins
push
std
add
movs
repz
adc
mov
push
imul
pop
test
cmp
nop
jb
jmp
mov
dec
mov
sbb
in
(bad)
cdq
icebp
adc
aad
jl
gs
popf
fistp
lahf
push
mov
xchg
lds
dec
dec
(bad)
pop
xor
pop
(bad)
addr16
in
iret
add
sbb
ja
scas
inc
mov
scas
jg
and
cs
jmp
clc
imul
std
sbb
jne
xor
ins
inc
cmp
xchg
cmp
mov
sbb
xchg
stos
jmp
pop
mov
jg
inc
sar
sbb
mov
or
(bad)
aas
out
mov
aad
xchg
dec
nop
add
sub
clc
jecxz
sub
rcl
push
mov
jns
shl
jns
or
add
in
aam
mov
mov
fisttp
mov
mov
pop
repz
jle
sbb
fisttp
mov
pop
lods
fucomi
jmp
test
inc
sub
(bad)
cmp
inc
sub
fidiv
in
pusha
lock
jmp
call
push
sar
retf
les
or
fucom
leave
adc
stos
xor
mov
jno
bound
jp
cs
push
cmp
pop
push
fnstsw
fidivr
pop
adc
add
(bad)
jge
imul
pop
into
fisubr
enter
cmp
or
push
xor
push
pop
sub
out
lods
into
inc
dec
and
rcl
mov
ficom
retf
jmp
jl
inc
nop
pop
das
xchg
lock
mov
jecxz
jmp
dec
sbb
push
(bad)
sbb
imul
leave
dec
adc
push
jmp
sub
pushf
cli
test
call
stos
cli
sub
aaa
or
clc
in
sar
sbb
push
adc
sbb
or
in
or
and
(bad)
mov
mov
push
out
sub
mov
mov
ficom
ret
push
push
pop
scas
aaa
sbb
xchg
sti
pop
pop
jns
dec
test
test
xchg
outs
and
lock
stos
test
retf
outs
call
sti
fst
mov
adc
lock
or
out
push
jecxz
(bad)
out
push
lods
inc
dec
fwait
outs
aam
sub
fimul
add
pop
(bad)
xor
cmovbe
js
int
dec
mov
fwait
dec
dec
rol
imul
out
jge
sbb
pop
cmp
int3
xchg
rcl
xchg
in
xchg
mov
mov
pop
jb
mov
enter
pop
push
fisubr
adc
icebp
or
aaa
stos
mov
sub
arpl
pushf
pop
cmp
sub
dec
and
mov
and
fwait
mov
fimul
fs
jnp
and
pusha
xor
pop
pop
clc
mov
push
add
xor
ror
push
pusha
fld
int
stc
sti
or
cs
lock
inc
jae
lea
mov
popf
mov
sbb
mov
test
ror
cli
pop
fs
loopne
pop
fst
(bad)
cdq
mov
cmp
in
dec
inc
cdq
jmp
nop
mov
jge
jne
xor
mov
sbb
add
lahf
cmp
hlt
xchg
mov
push
dec
jnp
mov
vrcpss
into
lea
dec
fdivr
cmp
inc
and
dec
xor
cmc
jg
mov
les
pop
inc
fsubr
adc
mov
cmp
rcl
dec
data16
pop
jae
cmp
mov
inc
dec
sub
stc
jb
retf
test
cdq
inc
fcmovu
lods
mov
cmp
xor
or
out
mov
xchg
movs
sub
and
add
pusha
xor
int
movs
jne
clc
and
int
jecxz
cwde
stos
mov
pop
scas
call
lods
pop
nop
scas
and
stos
test
leave
pop
jmp
add
pop
stos
ret
in
mov
jae
cmp
loop
ror
jecxz
aad
adc
int
pop
iret
lds
aas
fst
adc
inc
inc
sti
ror
sbb
imul
xor
lds
(bad)
cmp
add
sub
call
mov
rcr
fsubr
jne
jmp
pop
(bad)
std
fwait
popf
inc
nop
aam
scas
mov
movs
pop
scas
retf
pop
pop
jg
and
sbb
call
inc
xchg
xor
or
popf
mov
or
xor
fimul
sub
movs
js
adc
ins
or
daa
push
xor
fdivp
inc
out
pop
cmp
inc
inc
shl
pop
shr
in
mov
stos
dec
sahf
dec
cdq
push
pop
cmp
mov
add
(bad)
dec
jb
test
add
pop
mov
mov
or
sub
test
imul
xor
sahf
(bad)
cmp
mov
cmc
stos
lahf
fwait
gs
popf
xchg
cli
rcr
into
call
repnz
(bad)
push
repnz
add
in
adc
out
retf
push
fstp
push
jb
fisttp
sub
dec
sbb
cli
shl
in
mov
inc
ins
sub
ins
push
inc
cmp
pop
push
and
or
mov
inc
jo
xchg
pop
rcl
ins
sub
mov
aas
push
sub
fbstp
mov
dec
xchg
fwait
je
fbld
(bad)
loope
call
or
mov
aad
int3
std
mov
or
int3
dec
and
lea
or
add
test
sahf
imul
xor
xchg
add
cmp
push
dec
mov
xchg
mov
out
push
jne
int
ins
push
popa
loop
movs
cmps
jo
inc
mov
inc
jns
cld
adc
pop
and
loope
lods
inc
lock
xor
push
jns
outs
mov
retf
cld
sar
iret
mov
cmp
scas
sar
jp
adc
pop
call
(bad)
mov
xor
out
add
or
pushf
aam
cmp
mov
test
loopne
and
inc
dec
jno
call
data16
aam
shl
xlat
sbb
lock
jmp
outs
into
int
scas
imul
ret
dec
(bad)
into
push
sbb
or
rcr
cli
fucomi
or
aaa
pushf
cmps
stos
dec
lods
aad
nop
dec
shr
push
repnz
sub
rol
cmp
cmp
push
cld
cmps
pop
pushf
bound
stos
cmp
inc
sti
fcomi
lahf
dec
je
sbb
call
(bad)
(bad)
mov
push
mov
(bad)
cmp
pop
shr
adc
fisubr
sub
and
cmp
push
push
loop
ss
pop
ja
dec
imul
(bad)
stos
shl
mov
inc
jl
arpl
ss
mov
out
xchg
leave
pop
pop
shl
mov
bnd
out
sub
repnz
daa
push
dec
dec
sbb
add
mov
jbe
push
push
cdq
cmp
nop
test
fstp
sbb
fbld
mov
in
jmp
and
dec
imul
mov
(bad)
mov
mov
lahf
stos
push
mov
sar
fbld
jl
cmp
push
jecxz
repz
xchg
pushf
mov
pop
adc
pop
pop
dec
and
mov
in
idiv
push
push
xchg
retf
jg
mov
mov
dec
jg
bound
icebp
fisub
mov
sub
jle
inc
add
push
mov
cmp
inc
stc
mov
int
sar
and
test
inc
dec
push
sbb
rcl
and
clc
fisttp
mov
and
dec
sub
cmp
ja
adc
jmp
into
push
(bad)
cmp
call
mov
jle
add
xchg
cli
mov
mov
sbb
jne
jge
clc
in
mov
push
fs
fwait
mov
or
ins
fcom
and
mov
popf
mov
(bad)
sub
adc
fwait
ret
cs
cwde
push
sbb
pop
(bad)
sbb
retf
ret
adc
mov
pop
jne
gs
adc
push
xor
adc
or
jl
pop
iret
jae
lods
sub
int
pushf
cmp
lea
pop
bound
call
add
hlt
jmp
lods
dec
sti
jnp
or
add
loope
fisttp
mov
ins
sub
dec
fs
retf
gs
call
push
fld
jmp
dec
jmp
ins
(bad)
jmp
pushf
mov
js
loopne
jge
movs
pop
cmp
ins
cmp
out
repz
sbb
mov
stos
movs
push
cmp
jge
test
xchg
mov
inc
ret
sub
mul
jmp
imul
ins
inc
scas
int3
loop
xchg
sub
stos
mov
sub
enter
add
sbb
loop
into
mov
inc
imul
iret
lock
mov
ror
cmp
pop
mov
or
or
sbb
add
push
mov
pop
lods
test
mov
sbb
fidivr
std
sbb
pop
sar
shl
xor
xor
inc
mov
mov
add
jmp
mov
in
movs
ret
dec
outs
rol
add
lahf
ss
jmp
sbb
add
test
hlt
mov
call
pop
sbb
bound
lods
pushf
fsubp
hlt
or
mov
jle
push
jnp
inc
aad
lahf
out
sub
sub
ins
fisttp
or
fs
ins
mov
into
cld
popf
mov
push
std
sub
push
or
or
pop
int
xchg
fwait
dec
jmp
jge
dec
push
and
or
shl
popf
mov
mov
mov
mov
add
sbb
shr
sti
movs
cmp
ss
pop
loop
(bad)
icebp
push
loope
int
movs
out
movs
iretw
out
dec
and
cmp
add
push
sbb
das
sbb
repnz
add
out
dec
sub
mov
call
mov
stos
xchg
inc
xchg
jl
cmp
retf
jl
jmp
mov
lods
push
xor
shl
in
xor
rcr
cld
mov
dec
fisttp
sub
pop
mov
jb
add
sub
mov
inc
xchg
not
out
xchg
aad
push
inc
sbb
dec
pop
div
ja
lea
xchg
cdq
movs
mov
mov
idiv
aam
dec
sbb
cmp
out
or
mov
(bad)
in
jae
jnp
mov
das
mov
jb
push
into
fstp
lods
jge
test
mov
sub
dec
mov
xor
iret
add
sub
(bad)
rcr
mov
xchg
pop
inc
bound
cs
sub
push
inc
sub
mov
je
mov
(bad)
(bad)
pop
push
inc
test
dec
or
cmps
or
icebp
fsub
mov
sbb
or
mov
mov
clc
pop
movs
xor
stos
push
xchg
js
mov
sbb
sub
pop
dec
or
cli
mov
movs
popa
sub
sub
dec
and
test
nop
sub
mov
(bad)
pop
adc
in
cmc
fstp
cwde
mov
pop
push
jle
or
gs
sub
xor
sbb
mov
pop
jae
add
je
jns
or
sbb
test
out
jl
jge
retf
dec
cmps
and
jmp
sbb
out
dec
push
stos
(bad)
stc
mov
jg
popf
cs
stos
cld
push
(bad)
push
xchg
xchg
mov
das
jge
jb
pusha
fist
lds
ficomp
test
scas
scas
cmp
cmp
lods
lods
and
std
pop
mov
lods
js
fmul
jle
cmp
(bad)
cld
dec
mov
lods
ins
imul
sti
fstp
cmp
retf
mov
cmp
dec
dec
jp
stc
fisubr
sbb
or
fldenv
mov
xor
and
fs
mov
setge
mov
cmc
aad
aad
test
shr
test
call
test
retf
jo
fsubr
inc
js
addr16
js
sbb
inc
pop
jg
pusha
push
mov
xor
out
pop
retf
enter
in
xchg
or
fisttp
fs
maxps
xor
sub
or
xchg
cli
ins
push
das
mov
fsub
mov
std
mov
jge
or
test
stos
loop
adc
push
cwd
xchg
jmp
and
sub
xor
jge
add
cli
loop
sub
mov
scas
sub
push
xor
iret
dec
das
dec
psrld
imul
push
xor
pushf
call
inc
inc
das
sysexit
or
xchg
in
in
cwde
xor
movs
xchg
out
mov
jmp
ds
out
sbb
cmp
xchg
cmps
stc
(bad)
sub
xor
movd
mov
inc
xchg
test
mov
sub
mov
sbb
mov
jmp
daa
and
in
jmp
or
add
fnsave
cdq
test
pop
stos
lahf
adc
mov
sub
cmp
push
dec
stos
pop
cld
ret
cmp
popf
lea
call
enter
jno
sub
cdq
fdiv
pop
add
idiv
(bad)
in
inc
dec
jbe
fnstcw
pop
dec
xor
cmps
out
mov
repz
mov
push
xor
aas
cmp
mov
inc
nop
pop
fwait
jmp
add
shr
fst
sub
xchg
in
scas
movs
xchg
push
ret
fistp
sub
lods
mov
adc
retf
jmp
imul
stos
les
dec
xor
sbb
scas
mov
dec
lea
lods
scas
fucom
xchg
mov
inc
cmp
fidiv
popf
push
aad
cmp
shr
push
movs
lea
clc
or
fiadd
jns
repnz
push
mov
cmps
in
xlat
call
fistp
add
mov
mov
push
dec
es
das
sub
out
js
sbb
mov
cmp
pop
ins
out
inc
mov
sbb
adc
jnp
xor
cld
in
loop
mov
cli
shl
cwde
es
in
dec
jb
dec
and
xor
cmc
stos
cmp
sbb
adc
popf
mov
ins
fwait
dec
lea
pop
sub
fmul
aad
sbb
or
mov
int3
xchg
lahf
es
mov
jmp
sub
iret
sub
enter
jmp
lods
cmp
dec
jge
or
arpl
or
cdq
test
mov
xchg
fbstp
pop
lds
and
aaa
xor
inc
mov
mov
(bad)
mov
imul
int
push
test
call
sbb
movs
dec
(bad)
adc
jl
ds
cs
jle
and
push
fsubp
sar
mov
or
push
pop
add
ret
jb
das
dec
pop
sub
xor
movs
sbb
call
push
outs
prefetch
pop
cmp
adc
aam
inc
das
retf
outs
cmp
push
and
push
push
sbb
fidivr
lods
push
lods
or
push
into
imul
push
cmp
and
shr
pop
cmovl
sbb
in
fcomp
push
push
outs
dec
ins
mov
or
dec
dec
je
and
fdiv
mov
sbb
loopne
inc
imul
mov
inc
fidiv
cmc
jecxz
jg
test
ds
sbb
bound
sbb
sbb
out
or
cdq
fisttp
rcr
loope
je
jp
sub
xchg
sbb
stc
sub
mov
daa
cdq
mov
xor
add
(bad)
fistp
inc
in
loopne
fst
hlt
xor
sub
sub
pop
fistp
inc
jae
sbb
imul
jmp
scas
jge
mov
ja
mov
and
daa
in
push
fs
out
inc
repz
icebp
(bad)
jl
bound
loope
iret
cmps
add
jg
lods
scas
scas
mov
mov
repnz
inc
or
sub
xor
cdq
aad
js
sti
call
cdq
push
retf
fcomp
pop
cmp
pop
lock
jo
(bad)
push
mov
pushf
sub
fcmovne
cmp
aam
popa
cmp
xchg
call
add
je
or
and
xchg
add
mov
mov
pop
dec
popf
mov
ror
cmc
imul
cdq
or
push
test
mov
pop
fnstsw
js
or
cmp
or
fwait
sub
fidivr
xor
cdq
ret
sbb
xchg
ret
ret
pop
cmp
add
lods
into
mov
inc
popa
scas
dec
cmp
push
push
sbb
in
cmp
or
lea
sbb
jg
enter
aam
inc
ffree
push
bound
mov
std
aaa
faddp
lods
pop
push
pusha
call
div
sub
mov
adc
pop
(bad)
clc
fdivp
adc
and
sub
imul
fs
cmps
fdivr
pop
dec
jnp
xor
mov
pop
mov
stos
or
cmp
xor
sbb
mov
dec
popa
fidiv
call
xchg
cmp
cld
dec
pop
cmp
imul
imul
std
enter
loop
push
or
loop
stos
fisubr
sbb
imul
sub
sahf
sti
outs
push
xchg
xor
mov
mul
fwait
enter
dec
jl
cmps
adc
sbb
sub
sbb
dec
jge
stos
jns
xor
ins
mov
mov
inc
mov
test
shr
push
cmp
xor
retf
mov
jno
les
cmps
popf
add
int
shl
jl
sbb
fimul
adc
jmp
sub
add
adc
or
mov
mov
jle
ret
popa
(bad)
loop
pop
xor
jecxz
xchg
sub
xor
fisubr
dec
and
adc
mov
jge
call
push
push
and
es
pop
out
out
out
popf
in
leave
aas
sbb
jno
push
add
out
add
mov
retf
retf
lahf
inc
jno
inc
mov
(bad)
imul
imul
pop
dec
xchg
jns
enter
in
into
mov
lods
test
fmul
push
outs
scas
pop
push
mov
cmps
xchg
push
arpl
leave
xor
sbb
jg
(bad)
test
xchg
int
mov
arpl
sbb
(bad)
lock
xchg
in
and
push
pop
fsub
inc
sti
outs
inc
lods
adc
or
cs
xchg
push
cdq
adc
jns
mov
sahf
dec
aad
or
pop
imul
clc
push
xor
cmp
sub
ins
lods
jecxz
ret
sbb
jmp
or
jle
and
add
push
push
dec
inc
jp
inc
sub
test
aas
in
cwde
call
aaa
and
sbb
push
xor
sbb
sbb
dec
call
popf
bound
adc
sbb
xor
push
sub
pop
cmp
mulps
ficomp
fistp
popf
mov
into
mov
mov
outs
loop
jnp
mov
repnz
pushf
es
in
sbb
pop
push
adc
sub
and
imul
jne
iret
and
jnp
fist
xlat
fild
in
lahf
sub
and
push
test
ret
arpl
loopne
dec
nop
mov
fwait
mov
clc
addr16
scas
or
lds
push
jns
pop
ds
pop
sub
cli
pop
mov
mov
lods
push
sbb
call
sub
aaa
adc
jl
bound
int
sub
call
das
loope
imul
mov
fdivr
jne
clc
inc
loopne
xchg
push
jmp
shl
rcl
into
popf
xchg
and
call
dec
loopne
lds
sbb
mov
push
not
mov
jnp
popa
cld
repnz
rcl
dec
shl
mov
cmp
add
fs
fisttp
ja
adc
in
cmc
sub
and
leave
and
in
xor
pop
fisttp
mov
pop
fsubr
jmp
xor
test
adc
push
mov
jl
dec
push
pop
fmul
or
mov
leave
and
call
push
push
mov
push
mov
ins
xor
lods
and
stos
in
bound
lods
in
xor
fisubr
jle
adc
and
ret
out
cmps
lods
mov
loopne
mov
in
jge
xor
std
test
jmp
mov
js
mov
or
sar
inc
dec
lahf
jmp
stc
adc
call
lods
sar
test
dec
inc
mov
iret
xlat
nop
pop
cwde
dec
gs
jg
sub
cmp
lds
cmp
(bad)
dec
data16
scas
fidivr
ins
mov
stos
dec
or
or
lods
mov
add
sbb
push
pop
cwde
std
(bad)
scas
adc
sub
sbb
sbb
jmp
popf
xor
dec
popf
inc
mov
mov
sti
mov
dec
pop
cs
mov
sub
cli
popf
jb
mov
ja
push
sbb
and
retf
imul
loope
cmc
call
mov
pushf
pop
pop
std
pop
or
xchg
ins
ret
(bad)
rcr
pop
mov
dec
pop
push
and
cdq
mov
push
cdq
pushf
icebp
xor
xchg
ret
jg
cmp
jb
ss
mov
sub
jns
push
fsub
sbb
xchg
adc
ret
mov
or
or
xor
and
xor
sub
ins
retf
mov
pop
fnsave
pop
fisub
adc
pop
or
stos
push
leave
popf
test
outs
aad
pop
jmp
addr16
mov
add
ins
ins
dec
js
sbb
sbb
jp
jecxz
mov
xchg
mov
sub
pop
cmp
scas
mov
aas
sub
int
frstor
sub
mov
rcr
ins
call
fild
or
shl
sti
xor
sbb
jge
jl
mov
imul
popf
mov
pop
mov
pushf
fld
mov
pop
cmps
js
mov
ins
xchg
push
call
mov
test
add
(bad)
test
cmps
ret
adc
or
fiadd
jle
pop
add
mov
in
into
dec
fcmove
inc
push
jmp
push
xchg
shr
cmp
movs
pop
cs
cld
jmp
sbb
aaa
(bad)
in
into
adc
stos
dec
in
or
imul
or
or
pop
cmp
ficomp
adc
sbb
inc
cmc
(bad)
fistp
push
inc
js
or
add
pop
sbb
bound
test
xchg
inc
mov
inc
stc
lods
outs
adc
not
sub
popa
cld
add
push
call
in
in
mov
jnp
jge
add
dec
enter
or
xlat
ss
mov
lea
mov
mov
mov
push
sub
ins
lods
mov
inc
mov
hlt
lea
dec
cmp
imul
sub
call
fwait
imul
retf
mov
pop
imul
add
sbb
arpl
jmp
bound
dec
jg
ins
jge
jne
and
pop
repz
gs
cmc
cs
adc
dec
ret
aad
xchg
retf
cmps
cmp
daa
add
outs
sbb
std
cmp
jns
sbb
iret
shl
gs
or
(bad)
fsubr
mov
pushf
dec
sbb
xor
and
retf
repnz
mov
dec
sbb
movlps
lds
mov
fisubr
out
jmp
push
and
pushf
lahf
mov
adc
dec
mov
cmp
stos
movs
enter
mov
sub
imul
lea
mov
mov
or
jb
fistp
xor
xor
or
out
cmp
push
retf
sahf
or
dec
adc
xchg
mov
aam
sub
pusha
(bad)
sub
lods
mov
retf
stos
mov
and
test
lea
test
cli
pop
cmp
push
adc
lods
clc
and
lahf
ds
ss
push
mov
push
add
out
mov
xlat
mov
jg
mov
xchg
sbb
sbb
sub
aaa
pop
mov
retf
xchg
shl
jb
mov
mov
push
push
js
int3
dec
and
lea
int
shl
mov
cmp
mov
cmp
call
push
icebp
aaa
sub
mov
test
mov
out
jns
jle
in
in
ret
lods
enter
or
int3
retf
mov
mov
(bad)
adc
int3
cli
enter
and
dec
lods
(bad)
cmc
cmp
call
mov
outs
mov
push
pop
jl
adc
add
std
or
ds
mov
rcr
fwait
test
in
pop
adc
pop
pop
enter
mov
scas
sbb
lea
loopne
pop
xchg
pop
sbb
or
push
dec
loop
das
and
and
ret
dec
pop
sub
jbe
push
cdq
lods
icebp
push
sub
rol
or
push
in
in
and
and
xchg
dec
(bad)
aaa
ficom
test
dec
mov
std
jge
fucomp
ins
(bad)
call
(bad)
mov
lods
push
aad
sub
or
in
jbe
push
cmp
scas
sbb
frstor
pop
cmp
in
(bad)
in
inc
int3
sub
scas
daa
pushf
call
arpl
jp
enter
scas
jl
xchg
push
xchg
cld
push
scas
mov
pop
imul
pop
mov
xlat
repnz
jp
enter
xchg
sub
das
cwde
stos
mov
jns
xchg
or
sub
dec
(bad)
mov
dec
movs
movs
enter
dec
pop
lds
ficom
movs
sub
jp
sbb
fcmovb
pop
sbb
call
jno
popa
cld
mov
pop
pop
jmp
iret
or
push
shr
je
bound
es
lock
xor
cs
push
data16
mov
push
ins
imul
dec
inc
ins
or
or
bnd
fidivr
xchg
popf
xchg
xchg
mov
test
(bad)
xchg
sbb
push
das
lock
cmp
lahf
std
add
(bad)
test
sub
enter
mov
add
out
dec
outs
in
imul
shl
out
or
out
dec
ror
(bad)
out
xor
stos
neg
push
pushf
in
pop
fst
or
mov
xchg
mov
dec
and
sbb
repz
imul
out
(bad)
mov
cdq
sub
sub
mov
dec
jle
pop
push
mov
test
test
out
enter
call
jge
lods
jbe
cld
data16
aam
push
xchg
add
out
xor
jg
xor
ins
adc
in
ror
popf
mov
jl
lods
retf
mov
out
sar
inc
jge
repnz
ins
mov
adc
test
in
in
and
int3
adc
sub
not
cmp
out
mov
ret
gs
stos
mov
lds
sub
mov
sub
popa
mov
mov
mov
stos
sbb
pushf
cli
pushf
cmp
add
sbb
add
(bad)
jnp
imul
dec
adc
jne
iret
ins
outs
inc
bound
or
fbld
push
sub
aad
shl
ins
xor
mov
outs
(bad)
sti
add
cmps
and
ret
adc
(bad)
xchg
or
and
adc
ins
mov
repz
loope
aad
cmp
in
fcomp
or
pop
pop
ja
test
not
clc
test
dec
sub
retf
xchg
inc
lea
movs
int
jge
jmp
pop
adc
dec
(bad)
add
(bad)
(bad)
cmp
clc
aas
std
mov
sar
push
cmp
sti
int
or
pop
mov
(bad)
mov
cmp
aas
dec
mov
repnz
mov
add
pop
sbb
sub
shr
adc
mov
mov
mov
and
jl
cdq
jmp
dec
mov
sub
hlt
and
clc
ret
in
rol
fidivr
xor
shl
dec
sub
dec
sbb
frndint
add
shl
pop
iret
enter
sub
xchg
xchg
mov
and
or
call
sub
retf
lods
ins
and
test
daa
dec
dec
stc
ret
int3
scas
fwait
xor
and
into
xchg
cs
mov
dec
loope
cmp
dec
adc
sub
sub
sbb
sbb
bound
mov
addr16
call
movs
dec
xchg
mov
pop
(bad)
stc
cmp
out
push
xchg
add
bound
pop
inc
adc
mov
arpl
push
add
fsubp
out
and
mov
jg
pop
lods
pop
cmps
fadd
(bad)
dec
aam
aad
mov
or
mov
call
jmp
dec
daa
push
idiv
xchg
ds
jo
idiv
mov
fiadd
or
push
std
sbb
(bad)
and
sub
enter
inc
cmp
cs
fimul
paddusb
sbb
cmc
and
pop
enter
add
mov
sbb
ror
stc
fidivr
dec
adc
sub
jp
aaa
ins
jmp
inc
imul
mov
lock
and
jae
fisttp
cs
mov
pop
add
jl
push
jp
je
loope
in
test
pop
jmp
jmp
mov
repz
sub
sbb
or
sbb
cs
pop
and
shl
call
cmp
stc
pushf
outs
dec
fwait
int
inc
hlt
jne
pop
pushf
mov
sbb
sub
retf
sub
jnp
cmp
fcmovbe
repz
cmp
dec
mov
pop
and
pop
xor
push
mov
fdiv
add
(bad)
dec
push
pop
pop
push
push
sbb
and
inc
or
mov
jmp
icebp
sti
test
retf
push
mov
cmp
std
iret
aas
add
sub
sbb
fwait
push
dec
pop
ins
lahf
nop
sub
popa
into
mov
vpmaxub
in
sbb
cmp
push
adc
in
inc
mov
mov
stos
pop
aad
es
mov
dec
cmp
pop
inc
mov
into
pop
sub
xor
test
push
and
mov
xchg
in
das
adc
enter
in
fnstsw
aam
fs
mov
sub
das
sub
push
lds
pushf
pushw
leave
retf
out
les
mov
movs
inc
pop
push
sub
stos
jmp
add
adc
cdq
popa
mov
ret
iret
test
les
and
test
inc
xchg
cmp
shr
push
in
lods
xor
test
test
mov
mov
(bad)
jne
int3
movs
shr
jp
add
mov
mov
test
mov
(bad)
stc
fmul
aad
and
jb
pop
ret
(bad)
std
in
inc
ins
retf
sbb
(bad)
cmp
mov
push
aad
(bad)
push
push
push
xor
lds
ret
in
sbb
lea
pop
or
mov
pushf
in
fwait
xlat
imul
ror
sub
push
inc
add
push
dec
add
mov
mov
stc
pushf
je
xchg
sbb
fdivp
xor
fnstsw
mov
stos
shr
cdq
mov
nop
scas
mov
shl
and
arpl
pushf
cmps
jecxz
jne
test
sub
inc
sbb
pop
aaa
sbb
lock
push
fidiv
add
popa
sti
out
adc
cmp
sbb
add
mov
xchg
stc
adc
test
and
or
cmp
(bad)
jl
test
and
mov
mov
pop
mov
or
sti
setae
jmp
cmp
mov
dec
dec
jmp
fsubr
cmp
stc
push
xchg
mov
mov
mov
js
sahf
cmp
sub
daa
out
fld
gs
ins
repz
or
jp
hlt
push
dec
jle
xchg
add
out
and
pop
sbb
rcr
mov
test
call
push
out
mov
daa
je
inc
mov
sub
neg
popa
je
out
int
dec
call
add
fmul
jge
loope
jp
dec
aaa
iret
test
mov
mov
jp
jns
addr16
mul
add
cmp
sub
lea
(bad)
(bad)
mov
sub
mov
in
in
add
mov
add
adc
sbb
lods
in
fwait
mov
pop
jnp
loopne
loopne
or
bound
scas
test
loop
add
sub
and
xchg
xchg
xchg
(bad)
std
adc
pop
fadd
adc
das
lods
cld
dec
adc
dec
adc
std
mov
fyl2x
sbb
popf
pop
test
mov
test
pop
addr16
nop
sub
xchg
xor
sub
add
data16
jl
pop
cld
pop
dec
stos
mov
data16
sbb
jmp
mov
and
(bad)
jmp
in
or
sub
outs
ds
jo
fucom
sub
movs
neg
jmp
out
retf
mov
pop
mov
mov
fnstenv
retf
mov
(bad)
out
cmp
movs
shr
pop
outs
sub
or
sahf
cmp
inc
bound
test
sahf
iret
test
dec
arpl
ret
xchg
test
sub
retf
push
adc
mov
sub
pop
sbb
xor
(bad)
jmp
mov
je
test
sbb
inc
into
into
adc
mov
hlt
mov
int
int3
(bad)
loopne
ds
je
rcl
sbb
jl
fadd
jge
jne
je
rcl
sub
fstp
inc
sub
in
jbe
xor
ss
lods
(bad)
cli
sub
lods
xchg
pop
push
cs
push
mov
sbb
ret
retf
lds
xor
in
mov
movs
mov
cmc
es
jp
pop
dec
pop
lock
lds
push
cmp
xchg
add
push
rol
pop
cmp
add
mov
xchg
pop
push
mov
jo
cmp
ins
or
push
fisttp
sbb
sub
js
sbb
rdmsr
mov
mov
jmp
movs
imul
mov
jge
fstp
ds
in
xor
fist
xchg
ficomp
cs
fldcw
jne
push
stos
aad
xor
iret
dec
fst
cmp
mov
mov
pop
ins
pop
lods
xchg
(bad)
fcom
sbb
cvttps2pi
xchg
cwde
push
lea
xchg
push
hlt
into
inc
mov
mov
mov
mov
xor
cmp
push
ja
scas
ret
shr
jge
out
inc
xor
(bad)
jp
jmp
iret
repnz
push
movs
jg
les
jnp
inc
jge
xchg
call
mov
mov
pop
into
pop
mov
mov
mov
lea
inc
inc
setle
(bad)
sti
jl
mov
fsubp
mov
push
push
test
jo
addr16
mov
adc
add
mov
fwait
aam
aaa
mov
popa
jge
scas
mov
leave
and
sub
cmp
jns
out
cmp
mov
ror
in
mov
fldcw
shl
mov
cmp
or
iret
or
fcomp
inc
dec
aaa
jns
ins
scas
call
ficom
jge
iret
hlt
out
sub
xlat
test
pop
leave
xchg
mov
or
push
inc
sub
retf
jae
aam
sub
xor
(bad)
jecxz
clc
enter
sbb
lahf
xor
jl
or
add
push
in
cmp
jmp
imul
sub
fisttp
and
sbb
mov
les
(bad)
push
lods
xchg
mov
jb
push
test
jecxz
mov
mov
outs
mov
sub
xor
nop
call
(bad)
loop
lds
repz
paddsb
push
mov
sub
and
xchg
aas
jmp
stos
xchg
cmp
aas
xchg
sub
in
aad
sub
xor
ror
push
sbb
fst
aad
mov
lods
(bad)
and
repnz
ins
xor
ss
aaa
cld
mov
pop
sub
cmp
out
(bad)
xor
ret
in
pop
mov
std
lock
(bad)
pop
dec
lahf
push
fptan
lds
test
outs
enter
pusha
mov
and
loop
sti
int
cdq
pop
in
out
xor
dec
xchg
retf
or
sub
adc
or
or
stos
or
ror
in
stos
cmp
cwde
xchg
mov
cmc
call
call
into
fstp
fistp
jb
mov
mov
and
sbb
(bad)
and
mov
call
jge
std
scas
jns
sbb
in
mov
adc
aas
cli
stos
ins
add
dec
push
mov
jbe
mov
in
es
call
mov
mov
xor
movs
or
sbb
(bad)
std
sbb
out
sbb
push
cmp
mov
mov
fnstsw
mov
sub
fdivr
xor
cli
sar
pop
cli
pop
call
mov
sbb
dec
dec
int
repnz
dec
stos
or
lods
retf
pop
and
mov
mov
int
out
out
ss
(bad)
mov
dec
clc
fisubr
pop
cmp
add
mov
cmp
sbb
cmp
sub
sub
into
push
fidiv
scas
(bad)
cmp
repnz
jp
dec
add
into
mov
(bad)
jge
int
lea
sbb
cli
mov
mov
pop
lods
sbb
dec
jmp
push
leave
xor
aam
mov
mov
(bad)
imul
scas
adc
icebp
fld
ins
add
loopne
mov
pop
xchg
iret
mov
push
jbe
xor
push
jo
jmp
icebp
lods
sub
inc
xor
fisubr
mov
pop
ins
mov
aas
inc
sub
jle
std
sar
sub
mov
stos
xchg
(bad)
fs
mov
cmc
or
or
jmp
lock
jno
mov
mov
pop
pop
cmp
jb
test
(bad)
icebp
dec
mov
xchg
mov
lods
ins
sub
sbb
data16
push
scas
inc
loope
in
and
jg
out
dec
inc
mov
add
pushf
repnz
dec
cmps
sub
xor
push
mov
inc
xchg
or
add
jmp
and
fdivr
mov
mov
retf
es
stos
in
call
or
int
clc
cmc
std
arpl
pop
mov
jns
repnz
(bad)
mov
enter
movs
aas
ficom
dec
jge
pop
cmp
dec
dec
fld
cmps
xor
data16
adc
mov
(bad)
test
leave
fdivrp
pop
stos
fst
mov
mov
adc
or
cmp
or
inc
mov
clc
mov
test
mov
add
cmp
sub
add
or
test
dec
sub
(bad)
dec
sar
call
sbb
mov
or
test
(bad)
mov
scas
(bad)
mov
sub
pop
jo
and
int
ss
in
pop
int
loope
das
xlat
mov
pop
int3
pop
mov
mov
mov
ss
int
clc
mov
sub
mul
jb
es
ins
or
sbb
mov
sbb
push
(bad)
dec
sub
pop
jmp
movs
aam
dec
pop
ins
jl
jno
pop
cld
jmp
pop
mov
cmps
daa
xor
movs
rcl
test
cmp
push
xor
inc
push
iret
in
sub
add
test
(bad)
sbb
lods
call
adc
cmps
cld
sbb
xor
jge
int
dec
out
iret
outs
xchg
xor
mov
retf
aad
mov
sub
sbb
fild
cdq
cmp
lods
mov
adc
sti
pop
mov
ins
cmp
daa
or
jp
and
or
fwait
dec
mov
nop
dec
lock
mov
sub
sub
mov
mov
stos
mov
std
sub
pop
cmps
hlt
pushf
cmp
sub
pop
je
mov
test
xchg
lea
pop
inc
sbb
jge
pop
pop
stc
cld
int3
adc
adc
sbb
aam
mov
sbb
mov
fs
dec
push
sub
les
fcom
pop
mov
dec
push
add
movs
stos
pop
add
jbe
adc
cmp
imul
in
popfw
test
sar
push
sbb
inc
retf
std
fdivrp
clc
pop
cli
mov
in
mov
dec
not
mov
(bad)
(bad)
std
pop
jecxz
int
int
mov
or
xchg
dec
popa
cmp
inc
pop
(bad)
aam
dec
dec
jge
mov
rcr
xchg
cmp
outs
call
int
(bad)
aas
cmc
mov
icebp
loop
push
jnp
int3
aaa
pop
popa
aam
sub
loope
dec
mov
or
add
xor
data16
(bad)
mov
stos
dec
sub
cmp
into
mov
push
pop
inc
fcomp
dec
cld
or
sbb
dec
fisttp
or
mov
dec
cli
(bad)
inc
mov
std
adc
xchg
leave
lea
pop
ins
fwait
xor
push
ins
pop
cmc
ins
in
push
(bad)
cmp
stos
sbb
(bad)
sti
aam
add
cmp
and
aas
mov
int3
stc
xchg
test
cli
test
pop
rep
adc
mov
mov
int3
mov
mov
rol
jmp
mov
mov
sub
popf
sbb
pushf
fcomp
call
sbb
pop
lahf
mov
add
mov
push
pop
iret
mov
push
ins
mov
ins
jo
pop
sbb
sub
shl
jle
cli
mov
or
pusha
jnp
sub
fwait
or
or
retf
stos
js
int3
xor
mov
xor
push
ds
jmp
aam
cmp
jmp
outs
pop
mov
scas
push
gs
jge
dec
data16
xor
movs
loope
xchg
cld
fwait
cli
cli
not
mov
fidivr
mov
fld
imul
adc
popf
sub
retf
loope
mov
xchg
ja
push
jg
in
sub
pop
scas
(bad)
lahf
ret
fld
in
fiadd
or
mov
out
xor
js
mov
dec
dec
cmp
jno
inc
sbb
xor
sub
cwde
xor
(bad)
fstp
jbe
lods
push
and
or
pop
jnp
repnz
or
pop
sti
xor
mov
(bad)
push
inc
lods
xchg
movs
sub
nop
pop
out
cmp
ret
jp
cmp
js
in
or
sbb
inc
cmc
inc
in
mov
pop
mov
or
test
imul
dec
fistp
cld
and
jnp
jmp
aas
pushf
pop
jle
inc
mov
es
pop
lds
sub
in
cli
jmp
loop
lahf
mov
clc
dec
test
call
and
adc
mov
rcl
(bad)
xchg
lea
jle
or
xchg
fldenv
sub
retf
ficomp
int
fcomp
loop
jae
pop
fninit
adc
mov
retf
or
or
mov
pop
push
pop
xor
cld
mov
sti
jno
sbb
in
jb
mov
loope
push
stos
call
lods
fbstp
mov
lock
(bad)
pop
in
movs
in
in
and
xlat
hlt
xchg
lock
xchg
mov
pop
jns
sbb
imul
mov
mul
pop
fisttp
mov
ja
in
jecxz
sbb
mov
clc
and
add
or
xor
sbb
rol
mov
dec
ficomp
(bad)
into
inc
jl
sub
outs
movs
mov
je
fwait
cmp
pop
jae
movs
stos
dec
push
dec
pusha
(bad)
fcomp
clc
aas
aad
mov
repnz
lods
inc
inc
in
push
fnsave
dec
dec
mov
mov
or
fldenv
adc
pop
retf
(bad)
jmp
ins
cmps
sbb
sbb
inc
cli
retf
mov
std
or
clc
out
xchg
cld
dec
mov
add
push
or
bound
lods
inc
cs
dec
mov
(bad)
lahf
add
mov
movs
jmp
mov
pop
ins
gs
stos
or
lods
jge
pop
bound
cli
pop
mov
mov
adc
mov
icebp
addr16
lds
std
push
xor
mov
mov
sahf
(bad)
mov
popa
or
mov
lods
add
lidtd
mov
pop
imul
fisttp
int
nop
fnsave
cld
sub
pop
inc
mov
cwde
sub
push
mov
push
rol
xor
pop
out
cld
ja
push
repz
hlt
jno
sub
add
inc
dec
jmp
pop
hlt
pushf
dec
adc
mov
cmp
jmp
aaa
aaa
sar
push
mov
pop
cld
popf
mov
or
mov
sub
adc
out
jmp
fiadd
(bad)
mov
push
in
repz
repnz
ss
retf
out
jge
imul
mov
sahf
pop
adc
dec
repz
adc
mov
ins
ror
add
stos
mov
pop
and
sbb
pop
cmps
and
dec
cs
in
xchg
rcr
aas
retf
leave
bound
jecxz
mov
aad
out
push
pop
loopne
ins
and
or
ins
cmps
outs
xchg
pop
pop
push
es
rol
jmp
dec
ins
outs
push
xchg
clc
es
mov
clc
rol
xor
add
push
repnz
mov
add
pop
stos
icebp
jge
mov
scas
ds
xchg
popf
das
(bad)
pop
or
dec
sub
ins
pop
sub
cmp
fistp
xor
mov
fsub
test
sbb
adc
repz
xor
or
call
xor
mov
dec
cld
sub
in
cmp
movs
pusha
cmp
fld
jns
dec
sub
data16
mov
loope
hlt
or
jp
gs
aaa
jl
es
mov
es
cmp
iret
loopne
cmp
sbb
pop
mov
cli
bound
int3
jno
pop
arpl
dec
cld
cmp
sub
and
mov
fcomp
mov
add
xchg
lea
dec
loopne
outs
dec
dec
adc
fwait
idiv
sahf
es
mov
xchg
daa
call
lods
mov
push
fwait
(bad)
jmp
pop
pop
lea
std
mov
mov
pushf
dec
rcr
ficom
mov
js
mov
mov
sti
sbb
or
xlat
sub
cli
or
out
pop
mov
mov
stos
mov
cwde
xor
cs
jmp
inc
jmp
ins
cmp
sbb
ss
push
and
in
retf
mov
inc
test
pop
xchg
loopne
es
ror
or
cmovg
cmp
cmp
or
test
jp
fs
cmp
xor
or
jmp
cmp
pop
das
pushf
dec
int3
sahf
popf
jp
pop
cmp
mov
pop
(bad)
sub
jl
cmp
mov
fstp
jl
out
js
cmp
retf
ss
sub
aam
lods
sti
fnstsw
mov
(bad)
hlt
icebp
inc
pop
dec
dec
xchg
or
jbe
mov
fisttp
stos
ins
add
call
ins
sbb
adc
hlt
jne
inc
sbb
pop
dec
adc
lods
mov
popf
ins
imul
icebp
ins
test
(bad)
pushf
push
xchg
and
(bad)
inc
mov
mov
movs
int
dec
dec
dec
push
ret
das
pop
mov
sti
sub
test
mov
dec
ins
cmp
jle
sbb
in
pop
ins
sbb
jmp
nop
lds
cmp
stos
aaa
add
jg
sub
sub
cmc
loopne
cli
(bad)
sahf
sti
or
call
sub
inc
or
js
xchg
cli
sbb
xchg
outs
mov
dec
fbld
cs
sub
sbb
sbb
inc
arpl
adc
sti
iret
pop
xor
aad
add
lods
out
adc
or
movs
jp
cmp
mov
dec
mov
outs
imul
sub
push
cmp
dec
pop
(bad)
retf
push
cmp
jge
inc
outs
jge
and
dec
cmp
clc
dec
shl
ficomp
add
add
sbb
in
fstp
xchg
add
js
imul
pushf
fucomi
shl
cs
neg
jg
(bad)
and
jp
call
arpl
or
retf
jmp
scas
dec
fstp
xchg
pop
call
or
and
test
mov
mov
stos
fidiv
jnp
cs
pushf
sbb
dec
jbe
mov
retf
cld
push
dec
data16
dec
in
retf
add
std
pop
popf
call
inc
xlat
aam
fldenv
cmps
lods
sbb
pop
in
push
mov
sbb
lods
or
add
out
jbe
dec
push
inc
inc
out
retf
jmp
hlt
dec
sbb
jbe
mov
(bad)
add
xor
ror
inc
dec
pop
add
sbb
mov
cmp
xchg
mov
xlat
sub
inc
in
or
loope
add
mov
imul
out
sub
xor
cs
cli
pusha
push
sub
stc
leave
hlt
dec
fcmovu
stos
inc
xlat
(bad)
loope
mov
add
jmp
xor
xchg
dec
jno
push
inc
push
cmps
and
jae
ror
lea
cmp
shr
add
retf
popa
neg
call
iret
dec
cmp
es
cmps
and
in
sar
(bad)
loope
sbb
jmp
cmc
test
stos
pop
jp
div
sbb
jp
jl
push
xlat
xor
cmp
movs
rcr
inc
icebp
imul
cli
and
rcl
out
jecxz
ds
loopne
add
inc
or
inc
inc
daa
push
test
fadd
or
adc
test
dec
stos
push
out
dec
lock
jae
mov
add
push
xor
jmp
and
cmp
dec
jb
sub
xor
sbb
adc
push
and
inc
inc
nop
xchg
lea
(bad)
pop
dec
int
fdiv
jmp
out
lock
(bad)
xchg
dec
xchg
push
nop
cmp
idiv
xor
out
retf
je
adc
call
mov
aas
dec
inc
sub
pusha
ds
sub
or
loop
aad
aas
mov
out
sub
js
std
sub
push
fsubr
iret
sar
adc
fbstp
int3
repz
mov
jl
pop
jns
outs
cmp
sub
mov
jbe
cli
fdiv
(bad)
and
mov
cmps
ja
jmp
aaa
ja
iret
cdq
in
jg
mov
mov
ja
ins
jl
arpl
cmp
pop
mov
cmps
add
adc
int
in
jno
push
cli
iret
outs
xchg
mov
movs
adc
ins
push
jp
mov
push
mov
(bad)
jmp
xchg
xchg
xchg
add
cli
cwde
dec
scas
sub
arpl
mov
lods
jp
retf
jno
std
dec
pop
mov
retf
cli
sbb
retf
out
popa
lea
xlat
mov
sar
pop
jge
nop
jbe
(bad)
push
test
lods
cmp
loopne
or
pop
movs
ja
mov
jmp
fwait
mov
in
out
(bad)
cmp
push
cli
sub
xchg
jb
cli
repz
mov
push
inc
out
std
cmp
in
ss
std
(bad)
loopne
sar
shr
mov
dec
jno
ins
aam
mov
sub
mov
(bad)
out
sar
xchg
mov
data16
mov
int3
add
mov
xchg
out
mov
jl
inc
push
xor
or
sub
xchg
loop
mov
jno
das
jnp
les
push
stc
cli
int
into
fsubr
iret
cmps
neg
ror
dec
mov
pop
daa
xchg
push
popa
pop
lock
inc
fcmovnu
loopne
push
or
shr
loope
int3
add
xchg
dec
pop
data16
pop
test
ror
mov
pop
imul
std
std
shr
imul
mov
jl
inc
imul
mov
sub
shl
inc
mov
(bad)
sbb
dec
pop
xchg
mov
cmp
ret
jmp
mov
jmp
xchg
fwait
retf
inc
out
sahf
dec
push
or
outs
dec
frstor
cdq
pop
ror
ret
mov
or
sub
push
leave
scas
sbb
das
push
inc
add
int
lea
pop
mov
sahf
and
and
mov
fidiv
push
pop
out
mov
fadd
fnsave
add
test
pop
gs
jbe
pop
jno
stc
ja
mov
xchg
mov
mov
and
add
mov
stos
mov
fsub
inc
push
pop
push
(bad)
pop
cmc
icebp
sbb
ror
fucomip
mov
cmp
pop
mov
mov
jne
fs
sar
arpl
push
lods
sub
and
shl
sbb
pop
cmp
call
jmp
push
retf
push
fs
inc
shl
sub
arpl
sbb
mov
dec
add
mov
rcr
push
inc
xor
jnp
out
ror
(bad)
sub
and
aam
lods
dec
sbb
fild
mov
mov
adc
fisttp
adc
shl
push
adc
loop
test
(bad)
hlt
loop
dec
fisub
xor
icebp
mov
adc
int3
(bad)
xor
ss
mov
jb
pop
sahf
pop
jl
jno
lea
adc
clc
or
mov
sahf
fcomp
aam
dec
ja
inc
inc
jbe
inc
jo
int3
cmp
mov
sti
leave
je
add
loope
out
inc
daa
jno
and
jno
addr16
cmp
mov
out
push
hlt
fdivr
cmp
pop
outs
sbb
rcl
mov
mov
cmps
ins
push
leave
into
retf
xor
add
jb
loop
push
add
sti
int
mov
jnp
pop
popa
dec
ins
imul
or
pop
jb
sbb
sbb
xchg
sub
cli
sbb
ins
jecxz
pop
int3
into
inc
jno
jmp
jno
in
fstp
push
mov
jle
push
add
jno
inc
xchg
sbb
jmp
mov
xor
(bad)
out
pop
sub
mov
jo
pop
movs
stos
hlt
jge
ror
pop
test
pop
push
es
dec
jge
pushf
stos
sbb
fcomp
jle
test
adc
int
lods
xchg
xchg
mov
xor
mov
aas
or
int
pop
jmp
xchg
nop
jb
scas
or
pop
adc
out
in
push
loope
icebp
mov
pop
sbb
pop
inc
xchg
sti
dec
mov
loop
sar
ret
sbb
xor
rol
mov
aaa
jl
retf
lahf
call
mov
stos
(bad)
(bad)
fimul
mov
push
mov
jl
push
mov
mov
mov
fsub
fld
sbb
out
out
sbb
out
(bad)
sub
inc
mov
inc
cli
repz
cmp
sar
mov
pop
mov
cmp
dec
inc
sub
push
mov
jecxz
dec
es
(bad)
loope
das
push
push
loopne
xchg
stos
pushf
mov
ins
jnp
cmp
das
sbb
mov
movs
in
pop
cmp
int3
cmp
jmp
xchg
neg
in
xchg
fcomp
inc
data16
mov
sbb
pushf
sub
mov
inc
dec
out
dec
jno
pop
mov
push
sub
jmp
repz
sub
in
ja
or
inc
(bad)
pop
jge
ins
pop
inc
dec
ins
retf
dec
cmp
aad
fisttp
push
jecxz
xchg
out
push
daa
mov
outs
mov
cdq
xchg
(bad)
ins
pop
out
fnsave
mov
loope
jg
ds
imul
mov
push
mov
or
sar
cld
ins
lds
daa
push
int3
inc
inc
lods
jne
inc
repnz
add
sub
add
and
mov
mov
call
std
retf
fsubr
dec
icebp
call
add
lea
popa
cmp
inc
rol
shl
icebp
sti
mul
cmp
mov
movs
(bad)
out
fcom
pop
fmul
sahf
sub
mov
jne
movs
fmul
jno
inc
call
sbb
lods
sbb
ret
adc
(bad)
sbb
sar
dec
push
leave
fs
mov
retf
jns
rol
jg
push
fsincos
out
imul
pushf
mov
jbe
data16
into
sti
mov
popa
retf
adc
or
imul
jo
dec
js
mov
mov
int3
jno
xor
(bad)
adc
adc
mov
mul
mov
xor
mov
cmp
sti
or
sbb
shl
mov
js
mov
add
(bad)
shr
out
pop
push
sbb
push
scas
add
xchg
xchg
xchg
add
(bad)
jle
sub
not
jnp
adc
shl
fdiv
xor
adc
mov
mov
ins
jbe
stos
jl
das
mov
push
mov
dec
push
(bad)
leave
cmp
mov
lods
inc
jno
(bad)
out
inc
sub
idiv
retf
aam
and
test
jl
add
addr16
pop
inc
ins
pop
cmps
jns
mov
addr16
sub
xchg
fs
leave
stos
fstp
and
mov
sub
icebp
jae
add
lds
sbb
sub
rcr
mov
movs
lods
aaa
(bad)
mov
cmp
retf
into
out
div
pop
sub
mov
fdivr
jne
pop
jl
aas
sbb
fucomi
inc
add
imul
xchg
mov
jg
scas
dec
xchg
push
rcl
and
retf
push
jl
pop
pushf
outs
mov
add
aas
nop
outs
inc
lods
sbb
sub
xor
push
xor
cmp
test
aam
xlat
fs
add
sbb
rcr
in
sub
sbb
js
dec
dec
call
pop
adc
ins
mov
(bad)
adc
and
jne
sub
imul
add
div
rcl
pop
inc
xchg
dec
in
in
ret
(bad)
adc
xchg
dec
sub
or
hlt
out
fsub
std
sbb
sub
aaa
jg
les
or
dec
jbe
in
sub
push
in
mov
xchg
ds
mov
mov
xor
inc
mov
in
xor
push
ror
fucomi
int3
sub
mov
mov
ja
shr
push
cmps
or
aad
inc
mov
cmp
cs
ja
jge
(bad)
sub
ins
inc
xor
repnz
mov
std
jp
push
mov
add
sub
loop
call
or
dec
jl
inc
pop
sar
sti
dec
js
dec
(bad)
dec
mov
lods
imul
pop
pop
mov
xor
inc
mov
imul
stc
dec
test
(bad)
hlt
cli
jmp
push
pop
jl
or
or
pop
std
fcmovb
pop
sbb
mov
sbb
or
push
and
or
js
sti
retf
mov
test
test
fild
rcr
test
cs
ja
call
and
jge
rcr
or
stc
jnp
cmp
je
sti
jmp
iret
mov
ins
lahf
inc
jnp
in
sub
cdq
ins
jge
sahf
dec
pop
call
pop
mov
int3
arpl
out
lahf
lea
dec
arpl
or
pop
int3
sub
ins
fwait
inc
xlat
cli
icebp
mov
fstp
stos
scas
cmps
popf
daa
(bad)
jl
and
ins
pop
jp
or
popf
scas
mov
inc
int
test
dec
int
outs
(bad)
push
test
ud1
test
(bad)
xlat
jmp
xchg
sbb
lods
neg
clc
fwait
outs
inc
ins
outs
movs
jl
mov
imul
out
idiv
mov
retf
sbb
sti
dec
mov
cmps
dec
or
dec
jb
sub
sbb
test
mov
jnp
ss
mov
aas
lods
cmp
sbb
sbb
lock
hlt
in
sub
(bad)
bound
mov
push
cmp
push
jl
dec
imul
dec
inc
and
sti
int
pop
cwde
out
mov
in
push
fnstenv
test
cmp
jge
push
xor
push
sub
in
in
mov
leave
sbb
aas
pop
pop
es
es
cmp
mov
mov
nop
sbb
je
dec
sub
push
mov
dec
movs
dec
inc
or
fisub
mov
cs
loopne
mov
call
gs
mov
in
cmp
pop
pushf
(bad)
pushf
les
mov
sub
loop
popa
dec
adc
test
(bad)
push
fucomi
jns
xchg
aam
enter
(bad)
arpl
popf
xor
mov
pop
shl
std
retf
adc
ins
push
xlat
pop
shr
mov
inc
mov
jp
or
lahf
sub
imul
pop
mov
sti
cmc
cmps
jmp
call
pop
sub
test
jmp
push
cmp
test
xor
mov
hlt
jno
shr
sbb
mov
ss
rdtsc
mov
scas
xor
in
sub
in
cmps
scas
ss
mov
cld
dec
scas
ins
dec
inc
out
mov
xor
loop
push
test
pop
ret
sbb
stos
xchg
mov
mov
mov
pop
popf
scas
push
aam
pop
cmp
imul
fadd
call
lods
lods
sbb
or
push
rcr
xlat
test
sbb
mul
ja
stos
popf
jp
mov
or
jge
pop
bound
inc
mov
jns
pop
mov
fldcw
fnsave
jmp
test
retf
popf
vmovups
inc
add
(bad)
mov
fwait
retf
or
dec
arpl
sbb
push
or
adc
dec
ficomp
sti
or
ins
jae
jne
mov
ins
or
stc
pop
loope
push
imul
mov
cli
lock
in
loop
shr
sbb
dec
push
pop
mov
xor
mov
or
mov
mov
(bad)
mov
aaa
xchg
adc
and
push
bound
in
je
jb
int
outs
dec
mov
int
cmp
nop
sbb
xor
sub
dec
xorps
dec
jmp
fs
dec
mov
ins
js
in
retf
int3
xchg
sbb
adc
test
push
mov
xchg
dec
xchg
outs
mov
push
or
fld
or
push
movs
dec
cmp
stos
sbb
jl
ins
jbe
mov
mov
pushf
es
ins
xchg
mov
test
dec
mov
cwde
outs
pop
jg
push
sbb
in
sbb
sub
call
add
mov
int
sub
mov
jmp
daa
stos
test
dec
jge
scas
xchg
pop
bound
jecxz
jp
add
cli
cli
inc
dec
(bad)
and
xchg
data16
pop
adc
dec
js
and
je
int
(bad)
in
loop
xor
mov
imul
cmp
adc
or
push
xchg
dec
cmps
mov
call
push
mov
inc
cmp
movs
es
(bad)
adc
js
clc
sub
mov
lahf
lods
pop
ins
sbb
jo
and
scas
mov
cmc
call
dec
mov
stos
pushf
cli
lds
stos
jp
cli
sub
sub
fimul
adc
xor
pop
jnp
outs
inc
lods
mov
mov
or
mov
les
cld
sub
inc
lods
push
aas
cmps
xor
out
movs
mov
jge
sar
(bad)
icebp
xchg
pop
std
leave
test
test
cld
xchg
bound
mov
gs
lods
icebp
dec
cmp
mov
dec
sbb
cld
adc
in
cmps
fwait
cmc
jb
mov
pop
jl
dec
jmp
repz
les
xchg
mov
repnz
ret
jge
pop
sti
sar
cmp
mov
in
xor
jne
adc
jb
pop
movs
imul
push
fiadd
shl
dec
lea
adc
xor
sbb
dec
ss
pop
popf
xchg
inc
lds
inc
xlat
cs
add
ret
gs
cs
jns
pop
jne
fs
gs
xor
and
aad
jge
fnsave
(bad)
jmp
dec
and
dec
mov
or
or
mov
das
shr
or
jo
xor
loop
sbb
bound
(bad)
fild
fisttp
xchg
ret
shr
push
stos
fnsave
mov
stos
lea
cmp
das
stos
dec
addr16
sbb
adc
push
(bad)
mov
mov
ins
pop
jl
bound
(bad)
xor
mul
or
push
dec
sti
add
int
and
lods
and
adc
cld
enter
or
inc
mov
es
dec
jl
ret
push
pop
rol
or
retf
adc
retf
or
lods
call
(bad)
bnd
fwait
mov
cli
test
ret
stos
and
loop
sbb
pop
sar
dec
cli
mov
retf
jl
dec
movs
or
adc
mov
ret
mov
call
xor
push
push
xor
mov
dec
cmp
and
out
xchg
nop
xchg
mov
pop
cmp
ret
mov
push
into
xor
std
or
test
jmp
fimul
rcl
add
or
mov
hlt
xchg
cmc
(bad)
int3
jge
sti
mov
dec
das
pop
mov
(bad)
movlps
ficomp
stos
sbb
ror
or
jo
ds
mov
mov
sub
repnz
pop
sbb
test
ds
sub
cmp
fcomp
mov
outs
outs
cmps
adc
cmc
jp
dec
jge
mov
cdq
es
push
adc
cmc
ins
mov
imul
sub
jp
pop
retf
frstor
stc
cdq
dec
mov
sub
sub
mov
add
cmp
ins
xchg
bound
cmp
sbb
dec
push
sub
cmp
int3
mov
inc
xor
sbb
adc
push
or
aam
fldlg2
mov
sub
ins
and
pop
mov
lahf
push
push
scas
push
rcl
cmc
xchg
sub
and
dec
popf
pop
xor
(bad)
cmovg
inc
out
pop
adc
sbb
imul
cmp
lods
mov
xchg
mov
imul
push
outs
cwde
enter
stos
into
rcr
jl
(bad)
ja
retf
scas
ror
mov
test
inc
jge
pop
lahf
shr
jecxz
in
aaa
jbe
sar
mov
pop
push
mov
fdivr
and
sbb
jbe
bound
dec
dec
sub
adc
fs
or
repnz
cs
js
call
sbb
shl
lods
fmul
adc
test
inc
jmp
xor
call
jnp
pop
dec
stos
cld
mov
out
lods
daa
push
call
add
sbb
outs
sahf
dec
jmp
dec
jb
pop
sub
sub
(bad)
out
mov
int
(bad)
popf
pop
sti
psrld
fisubr
mov
mov
inc
or
push
or
scas
fidiv
rcr
add
push
aaa
xor
sbb
sti
sub
sub
mov
dec
sti
sub
mov
enter
sub
cmp
ret
jno
sub
cmp
or
sub
ffree
ss
out
mov
xchg
pop
ins
sub
test
mov
mov
sub
or
in
pop
ins
jl
fcomp
in
xchg
cmps
dec
cld
mov
push
into
jge
shl
inc
or
cmp
sti
popf
mov
in
push
or
jle
mov
mov
push
repz
mov
sbb
std
imul
pavgb
mov
mov
adc
mov
stc
cdq
sbb
mov
or
add
gs
cdq
mov
or
jecxz
add
in
pop
or
clc
xor
in
fcomp
(bad)
jecxz
or
call
(bad)
ds
cmc
ud1
pop
dec
cmps
dec
jns
in
mov
ins
mov
xchg
les
enter
popa
xor
add
addr16
stc
popf
jnp
stc
push
jecxz
sub
test
(bad)
retf
mov
push
mov
mov
sbb
aam
retf
retf
pusha
popa
push
add
int
cld
inc
pop
lods
adc
cmp
imul
loop
add
xchg
cmp
popf
xchg
mov
push
(bad)
and
stc
popa
xchg
xchg
clc
dec
mov
popa
adc
xchg
mov
std
lds
shl
jmp
inc
mov
fst
retf
add
xchg
xlat
fsub
pop
inc
je
lahf
push
pop
lods
adc
sbb
mov
fisubr
xor
sub
ror
inc
xor
adc
jmp
ins
adc
push
popa
jl
loope
pop
adc
jl
add
push
cld
pop
scas
mov
fldenv
xor
shr
dec
and
popa
and
xor
xlat
imul
or
sbb
lock
pop
inc
xchg
mov
jmp
js
add
pop
iret
mov
imul
cmp
pushf
xor
mov
mov
cdq
add
js
jmp
pop
mov
scas
add
pushf
add
jl
dec
cld
fadd
data16
mov
fild
mov
adc
nop
rcr
in
jmp
xor
xor
clc
popa
sbb
jmp
inc
pop
dec
mov
add
mov
add
and
hlt
fst
mov
ror
les
and
inc
mov
lods
test
pop
test
sbb
cmps
lea
enter
inc
cmc
loopne
mov
cmps
mov
sub
das
and
shr
and
(bad)
int3
daa
push
call
pusha
ins
ror
and
mov
scas
and
add
fs
scas
enter
mov
or
pusha
stos
mov
hlt
and
cmp
push
lods
sub
push
test
jg
dec
nop
(bad)
mov
add
inc
push
sub
sub
sar
ror
lods
std
sub
pusha
or
repz
dec
sub
mov
sub
pop
and
add
test
mov
inc
loopne
push
pop
les
jg
imul
sub
dec
js
in
in
lods
or
sub
add
dec
movs
pop
mov
int3
fninit
mov
shl
push
dec
jae
jb
call
movs
sar
push
mov
add
sub
sahf
sub
sub
in
xchg
in
mov
sub
mov
in
mov
xchg
pusha
adc
sbb
test
push
push
mov
sbb
in
mul
mov
add
shl
lods
xchg
sub
sub
push
cmp
in
fwait
mov
ret
sbb
or
retf
cwde
dec
call
dec
jb
push
neg
xchg
adc
js
js
dec
sbb
sub
ret
mov
add
mov
or
xchg
inc
out
pop
jae
or
sub
pop
fcmovb
loopne
repnz
mov
jmp
dec
mov
cdq
(bad)
mov
push
in
push
dec
and
mov
scas
(bad)
cmp
retf
mov
inc
mov
xchg
mov
ror
or
out
fs
sar
xchg
iret
mov
in
ds
sbb
nop
pop
pop
out
or
and
dec
fwait
mov
repnz
push
int
int
dec
popf
dec
popf
dec
or
dec
imul
xchg
mov
leave
movs
mov
mov
inc
mov
pop
out
aas
fcmove
push
lods
sbb
sbb
xchg
pop
shr
mov
xor
sub
add
mov
pop
xchg
sbb
loope
mov
push
mov
inc
fistp
jmp
sbb
sahf
or
gs
je
dec
movs
fcmovu
nop
xor
out
mov
fidivr
ret
outs
mov
(bad)
mov
dec
sbb
inc
cdq
pop
aas
call
inc
xchg
inc
cdq
adc
push
pop
aam
ins
cmp
test
movq
out
pop
cs
lods
xchg
dec
sub
sub
sub
push
es
dec
dec
and
push
cdq
fld
outs
fld
mov
(bad)
mov
aad
push
jns
(bad)
xchg
and
pop
iret
sub
scas
adc
xchg
mov
sbb
and
bound
outs
aaa
jo
and
mov
bound
scas
jmp
loop
and
scas
cmp
cld
push
or
mov
cmp
mov
mov
cmp
stos
cmp
call
fwait
call
push
or
jbe
mov
ins
and
mov
sub
pop
cs
mov
push
jmp
mov
xchg
stos
scas
out
xchg
cmovbe
shl
cvtpi2ps
fwait
cld
cld
mov
push
retf
inc
ss
ds
into
sub
outs
shl
push
out
mov
stos
pop
(bad)
loop
push
out
mov
add
cs
aam
sbb
mov
(bad)
cmps
inc
jp
or
imul
cmp
mov
stos
pop
stos
dec
addr16
and
xor
and
jmp
push
dec
sub
addr16
sbb
(bad)
es
sbb
cmps
sub
(bad)
inc
retf
mov
xchg
scas
cmc
ret
jle
add
add
sbb
mov
out
mov
out
mov
sub
pop
popa
imul
in
add
mov
and
test
retf
mov
xchg
inc
imul
mov
in
jmp
jb
xlat
add
pop
cmp
mov
es
fdivr
dec
push
test
aaa
and
addr16
(bad)
push
test
popf
cmp
das
push
mov
push
cs
hlt
or
jb
test
repnz
xor
jb
push
test
aam
int
cmp
xor
xchg
retf
out
popf
cmp
ins
jne
xchg
inc
(bad)
hlt
stos
repnz
xor
rcl
jbe
cmps
sbb
out
xor
mov
ja
xchg
mov
jne
mov
(bad)
repnz
jb
adc
xor
icebp
push
jb
and
je
mov
xor
mov
lock
sub
xor
loop
mov
fs
idiv
inc
cmp
or
daa
sti
mov
sub
mov
sbb
lds
push
inc
dec
stc
mov
mov
mov
mov
ds
fadd
mov
mov
leave
stc
test
mov
sbb
mov
es
adc
imul
pop
push
scas
out
sbb
ja
pop
and
pop
jecxz
push
xchg
mov
push
loopne
addr16
push
stos
imul
xchg
lahf
cli
imul
hlt
lds
push
pop
pushfw
movs
xor
or
xor
sbb
stos
adc
lahf
loopne
fwait
ss
retf
jne
push
dec
ja
sbb
sub
jnp
jge
and
xlat
adc
sbb
adc
ja
cmp
emms
sti
sbb
mov
fnstcw
stos
in
ja
pop
or
out
mov
dec
and
je
sti
das
or
sub
das
ja
xchg
arpl
or
add
sub
das
pop
imul
das
imul
adc
push
jecxz
sub
mov
ud2
push
out
adc
loopne
fldcw
rcr
imul
mov
sti
xchg
fsub
and
xor
add
sub
dec
and
(bad)
xor
clc
aaa
call
xchg
sub
dec
push
ret
push
call
push
sbb
pushf
arpl
inc
int
xchg
(bad)
je
cli
addr16
lods
jg
jae
pop
mov
xchg
add
jmp
mov
ja
inc
int
xchg
(bad)
jno
fwait
xchg
mov
out
not
imul
jmp
sbb
pop
pop
cmps
imul
mov
retf
cmp
jmp
add
ret
(bad)
xchg
cmp
jp
pushf
push
lock
movs
scas
repz
ja
pop
hlt
and
pop
hlt
push
stos
xchg
je
imul
or
sbb
pop
jne
cmp
nop
sbb
mov
xor
ins
push
xchg
push
inc
ja
pushf
leave
out
shl
pop
mov
xor
pop
pop
imul
ja
push
popf
and
lea
loop
imul
cmc
cmp
gs
lea
push
cmp
push
pop
aad
or
adc
mov
pop
call
(bad)
pop
sahf
sbb
xor
or
jbe
mov
int
sbb
sbb
xchg
pop
mov
or
mov
imul
fdiv
xchg
into
cmp
pop
xlat
mov
xchg
push
dec
sbb
inc
push
mov
inc
gs
arpl
jno
lea
loopne
jns
xlat
fcom
push
pushf
jle
push
push
inc
fsubr
jl
call
pop
sar
add
icebp
xchg
mov
fstp
inc
jle
popf
pop
mov
sbb
pop
mov
imul
sahf
jne
push
aam
fdivrp
xchg
cmc
out
sbb
mov
aad
xor
sbb
not
int
stc
sub
dec
sbb
lea
int
lea
sbb
popf
int
lea
xor
push
int
sbb
lods
dec
cmc
dec
aad
in
stos
mov
int
lea
aam
xor
push
int
int
dec
pop
loop
xor
stc
sbb
cdq
mov
lea
dec
pop
push
xor
push
adc
pop
xor
mov
xchg
fstp
jno
adc
xor
(bad)
jge
xor
xchg
cmc
dec
xor
lahf
bound
cmp
sbb
rcl
mov
add
test
and
add
aad
(bad)
stos
mov
adc
ret
scas
int
loope
mov
out
cs
data16
add
(bad)
loop
adc
xchg
(bad)
in
mov
and
stc
bound
dec
mov
and
cmps
add
int
cmps
and
inc
pop
lods
and
mov
in
jae
out
mov
dec
gs
add
pop
mov
test
mov
pop
pop
push
gs
xor
leave
xchg
and
pop
dec
shl
(bad)
gs
push
call
cs
das
push
mov
(bad)
xchg
or
inc
outs
test
movs
mov
(bad)
jo
sbb
bound
mov
in
add
adc
enter
sbb
jmp
mov
(bad)
loope
push
jnp
jecxz
inc
and
stos
inc
loop
dec
inc
dec
sbb
enter
adc
and
push
add
jge
cli
mov
gs
xchg
mov
jmp
bound
repz
fbstp
dec
out
ret
in
out
sbb
outs
dec
inc
cmc
mov
shl
mov
lea
xlat
push
cmc
jmp
(bad)
cli
mov
dec
cmps
inc
out
jle
cs
popa
(bad)
sub
push
push
in
mov
lea
inc
cs
push
rol
movs
dec
or
dec
cmc
inc
adc
out
jg
out
cmp
ret
outs
imul
and
add
and
cs
outs
pop
in
psubsb
add
scas
sub
add
and
jae
push
das
mov
cmp
xor
stos
sbb
adc
xor
sub
xchg
ror
push
sub
fsubrp
test
(bad)
imul
in
aad
xchg
test
jae
fisubr
jg
aas
(bad)
or
xchg
imul
push
(bad)
mul
add
inc
add
sub
fbstp
(bad)
int3
push
lods
fwait
sbb
iret
inc
scas
cmps
push
jle
(bad)
aaa
mov
lods
int
mov
retf
fwait
jo
out
idiv
icebp
push
lds
out
mov
cmp
mov
imul
adc
out
lods
stos
jae
cmps
out
or
xchg
push
arpl
lods
outs
xor
arpl
outs
xchg
push
dec
sub
jae
mov
mov
adc
aaa
push
xlat
ins
cmc
int
push
jnp
push
dec
lahf
dec
fsub
inc
cmps
push
xor
pop
dec
sbb
scas
inc
push
xor
sub
jecxz
loopne
int3
jnp
jecxz
sub
sbb
pop
scas
repz
and
adc
add
fwait
xrelease
mov
sub
xchg
scas
inc
stc
mov
jle
sbb
int3
mov
dec
out
int3
mov
(bad)
ja
outs
xor
push
out
xchg
mov
cld
push
out
setae
sbb
das
mov
push
mov
repz
sub
movs
and
int
cli
imul
jecxz
xchg
sub
stc
push
mov
repnz
sbb
mov
or
mov
xchg
es
femms
pushw
dec
dec
pop
out
(bad)
outs
out
dec
jb
sub
dec
movlps
addr16
(bad)
jl
jl
cmp
cmp
cmp
femms
fs
dec
jp
stos
lahf
mov
jnp
sbb
sbb
lahf
inc
clc
std
ret
dec
dec
shl
sub
in
xor
ins
mov
jg
iret
int
int
or
je
je
xor
xor
hlt
int
or
je
je
xor
xor
hlt
int
or
je
je
xor
xor
hlt
int
or
je
je
xor
xor
hlt
int
or
je
je
hlt
or
ss
daa
sub
jl
cmp
je
lahf
jmp
pop
cli
repnz
dec
clc
push
xlat
or
or
jge
ins
call
fmul
sub
stos
inc
mov
out
jle
test
push
xchg
mov
jecxz
outs
sub
sub
adc
sub
js
dec
cmp
mov
sub
dec
sub
leave
jge
addr16
jmp
mov
adc
pop
in
pop
pop
and
sbb
sahf
push
std
sbb
inc
and
and
rol
add
add
add
es
cmp
stc
and
and
cmp
scas
ja
pop
stos
outs
scas
xchg
out
sub
es
and
rol
add
add
add
in
cmp
retf
dec
sub
sub
sbb
lods
in
mov
(bad)
rcl
call
inc
in
inc
shl
ins
shr
add
leave
push
lahf
sub
sub
or
dec
lods
or
int
in
inc
mov
add
dec
les
lea
dec
int
in
pop
mov
or
aas
ret
inc
mov
into
pop
fbld
ret
ins
ret
call
pop
cdq
sub
dec
shr
popa
in
push
pop
test
(bad)
add
call
sub
ins
lahf
dec
loope
loope
inc
sahf
rcr
cwde
ret
push
add
adc
(bad)
sar
push
loope
xchg
(bad)
rcr
dec
jae
add
mov
les
shr
sar
mov
sbb
mov
out
sbb
inc
neg
inc
fwait
and
push
cmc
cmp
dec
hlt
push
mov
mov
jne
xor
jge
pop
rcl
inc
loopne
and
inc
ja
push
frstor
pop
cmps
jnp
outs
xlat
adc
cmp
pop
loop
cmps
sbb
jge
mov
adc
jb
jle
pop
in
sub
inc
repnz
mov
push
in
jno
fwait
jb
repnz
repnz
cmps
adc
and
xor
jge
jb
jle
jnp
adc
xchg
inc
popa
mov
repnz
sbb
out
jle
fadd
and
adc
shl
pop
(bad)
xchg
dec
mov
sub
fidiv
test
mov
pop
retf
sar
jns
sbb
mov
aas
jmp
xor
adc
inc
adc
xor
adc
gs
aam
aam
adc
adc
push
cmp
adc
aam
adc
adc
push
cmp
aaa
(bad)
push
mov
aam
adc
push
cmp
xor
pop
fs
jge
jnp
mov
sti
sub
sbb
cmp
js
ss
mov
cmp
or
sbb
jge
jmp
or
and
sbb
imul
popf
ja
js
cmp
dec
sbb
add
xchg
mov
cmp
aaa
or
or
mov
mov
pop
sbb
es
xor
sub
pop
inc
sub
xor
sub
adc
jge
cdq
push
xor
sar
popf
dec
ins
xchg
or
pop
lods
sar
sub
mov
bound
mov
outs
pop
cwde
or
xchg
mov
loopne
add
lahf
(bad)
inc
in
movs
xchg
sbb
pop
xchg
stos
popf
or
adc
aas
adc
add
repnz
jbe
mov
cdq
cdq
jmp
jmp
lock
mov
cmp
push
or
fstp
clc
sbb
fidiv
cmp
sbb
adc
sub
adc
cmp
lods
push
dec
sub
das
xchg
jl
sbb
fnstcw
popf
push
iret
add
cmp
dec
out
cli
mov
or
sbb
js
fmul
stos
or
adc
sbb
dec
fldcw
(bad)
(bad)
fwait
outs
mov
cdq
mov
xchg
pop
pushf
cmp
jp
dec
stc
sti
fwait
sahf
retf
sub
jns
test
adc
dec
enter
imul
mov
lea
sub
xor
adc
pop
mov
sbb
pop
sbb
push
in
call
enter
push
icebp
or
sub
mov
js
pop
push
retf
jne
cwde
jns
fisubr
sahf
ins
cdq
pop
jns
sbb
or
pop
js
or
imul
sti
dec
mov
or
cmp
cs
cmp
mov
cmp
sbb
xor
sub
xor
call
pop
mov
pushf
fisub
out
xchg
xchg
dec
cwde
push
aaa
fmul
push
jns
gs
and
sbb
aaa
add
pop
test
cli
jge
xor
inc
cs
push
sub
lods
pop
fisubr
cmp
cdq
test
jp
stos
sbb
stc
fistp
cmp
imul
jno
out
fld1
stos
push
call
sub
inc
xchg
sti
stos
pushf
jmp
sbb
das
cmp
and
mov
fnsave
or
ins
add
daa
int3
jmp
jmp
in
cmp
jbe
mov
cli
or
push
retf
int3
sub
mov
add
jmp
call
cwde
stos
cmp
outs
psubd
jae
out
ret
scas
imul
push
xor
out
lods
in
aam
fnstenv
pop
sub
test
into
(bad)
mov
pop
jnp
cmp
pop
lods
std
fstp
inc
cmp
stos
stos
fsubrp
dec
and
cli
sbb
mov
jp
rep
out
ret
cs
cmp
mov
cmp
lea
ins
push
cmp
jae
fld
test
dec
(bad)
adc
sti
mov
stos
cmp
sub
movs
xchg
ret
out
cmp
dec
inc
mov
(bad)
rol
hlt
pop
loop
shl
adc
sti
test
add
jb
jb
pop
daa
mov
push
xchg
push
(bad)
idiv
push
jno
push
(bad)
aam
mov
fucom
ss
push
or
xchg
in
rol
rcl
jb
pop
add
inc
mov
cwde
jmp
inc
xchg
adc
pop
dec
lock
repnz
add
xor
mov
mov
xchg
add
stc
div
mov
xchg
and
pop
sub
add
mul
aad
and
sub
icebp
xchg
mov
shl
push
xchg
push
ins
mov
cmp
sti
mov
inc
add
sub
inc
cmps
nop
add
pop
add
push
xchg
into
lock
jb
lods
xchg
ret
test
jmp
add
popa
jae
or
adc
push
jecxz
push
(bad)
pop
cdq
add
sbb
xor
mov
stos
pop
inc
cdq
imul
(bad)
retf
das
in
dec
out
pop
loopne
adc
and
int3
fcomp
cmc
sbb
nop
pop
inc
and
fnstenv
mov
pop
pop
inc
jp
cmp
in
nop
pause
int3
fnsave
pop
ins
inc
pop
jecxz
mov
lock
int3
push
nop
aas
and
inc
dec
push
jl
xchg
mov
ss
dec
xor
and
ins
push
push
fimul
dec
in
es
ret
aas
inc
test
mov
pop
push
mov
sub
push
pop
cmp
ret
jmp
push
rol
mov
xor
mov
out
pop
sbb
xor
adc
adc
adc
(bad)
dec
adc
ret
adc
mov
jae
mov
retf
dec
mov
jmp
mov
ret
xor
outs
sbb
jne
mov
mov
(bad)
dec
pop
mov
icebp
ret
in
daa
mov
sbb
iret
ss
dec
jge
mov
popf
pushf
sar
sbb
mov
dec
cmp
cmp
ds
icebp
inc
sbb
repz
jmp
nop
jmp
xchg
push
pop
movs
cmp
test
jp
pop
mov
(bad)
mov
cli
cmp
fsubr
hlt
and
cli
fldenv
or
push
or
in
push
aam
sub
div
fiadd
and
jae
push
mov
(bad)
(bad)
push
cld
in
test
imul
mov
jne
mov
das
sbb
movs
js
jp
jmp
jbe
imul
sbb
retf
retf
imul
cmp
lods
push
mov
lds
ss
add
or
pop
dec
fldcw
cli
(bad)
(bad)
xor
push
movs
maxps
fmul
sar
stos
push
mov
aad
js
cli
mov
push
bound
xor
retf
mov
mov
pop
jno
ficom
cmp
cli
mov
test
mov
test
cmp
adc
jmp
call
jl
inc
cmp
retf
shl
adc
jp
pop
(bad)
or
ss
fwait
retf
sbb
fidiv
sub
xchg
or
jg
jp
inc
mov
cmc
jmp
fcomi
lahf
jp
pop
fistp
dec
fs
cmp
inc
(bad)
daa
fwait
dec
icebp
xchg
daa
ss
push
push
scas
movs
mov
js
test
lock
sbb
adc
test
out
mov
xor
cmp
sub
push
xchg
xchg
mov
cmp
je
(bad)
mov
or
inc
mov
fs
fstp
mov
retf
aas
cli
or
(bad)
pop
pop
lds
mov
cmp
sbb
mov
mov
sub
dec
jle
jp
xor
jnp
pop
cmp
rol
cli
xchg
push
mov
cmp
mov
push
retf
ja
fstp
inc
xor
scas
call
pop
ja
push
cmp
stos
popa
lea
jns
mov
xchg
ss
xchg
and
out
sub
dec
pop
pop
mov
dec
sub
stc
es
and
imul
sbb
xchg
mov
mov
gs
inc
ret
mov
xor
sbb
pop
mov
pop
dec
std
fst
cmp
nop
pop
push
lahf
mov
mov
mov
mov
arpl
jb
push
gs
in
jp
imul
lds
pop
dec
(bad)
sub
retf
inc
shl
mov
ja
mov
inc
mov
enter
mov
mov
fs
mov
ss
pop
aaa
outs
xchg
cmp
inc
pop
inc
stc
dec
push
push
movs
cdq
push
es
test
adc
push
mov
push
popa
neg
mov
pop
vpsrlq
test
ja
xchg
(bad)
and
test
inc
xchg
mov
cmc
inc
repz
xchg
xchg
test
xlat
dec
or
fcmovnb
fild
jg
jmp
daa
jne
inc
or
xor
cmp
sub
ins
ret
inc
(bad)
les
push
scas
xor
enter
inc
lea
jecxz
mov
pop
sub
shl
jbe
inc
or
jmp
inc
jno
in
jecxz
xor
outs
ss
aad
xor
or
gs
jmp
rcl
data16
out
sbb
loope
hlt
pop
or
(bad)
fs
aas
imul
add
rcr
mov
scas
out
mov
ret
stos
xrelease
mov
push
adc
scas
inc
(bad)
icebp
movs
mov
lock
iret
lock
mov
cmp
inc
es
mov
and
or
popa
mov
cs
mov
jo
jl
jmp
mov
push
mov
mov
stos
inc
data16
xor
or
(bad)
pop
or
and
inc
inc
pop
cli
ins
rol
mov
data16
loopne
aad
int
mov
push
push
pusha
fist
ret
outs
out
test
sub
dec
cmp
sub
sbb
pusha
pop
jbe
push
and
mov
fwait
call
xchg
sahf
mov
pop
fistp
dec
shl
mov
add
mov
push
out
jb
mov
mov
mov
pop
mov
pushf
xor
js
dec
ret
loopne
lods
add
sahf
movs
repz
fstp
pop
push
or
jp
adc
add
lahf
jae
add
push
jno
lods
adc
push
iret
push
xchg
and
in
rcr
push
xor
adc
outs
ins
inc
add
mov
jg
push
out
mov
movs
xor
std
pop
xor
mov
push
(bad)
leave
iret
int3
fcmovbe
out
jecxz
arpl
inc
jmp
out
sti
pushf
pop
jno
movs
sub
fnstcw
inc
repz
xchg
bound
vpacksswb
fst
pop
pusha
retf
jp
mov
jecxz
cdq
stos
arpl
addr16
xor
into
leave
inc
retf
ds
mov
cmp
icebp
xor
ret
ja
outs
mov
jmp
retf
in
and
xchg
pop
xor
imul
mov
mov
dec
sbb
aaa
or
arpl
call
js
push
ins
popa
add
and
or
(bad)
dec
sahf
loope
inc
movs
in
xor
inc
jae
fwait
ja
jns
cmps
pop
out
pusha
in
sub
call
ret
mov
sub
imul
or
push
push
lds
in
jne
in
outs
cmps
fwait
mov
arpl
je
vmulsd
mov
dec
add
and
dec
cmp
mov
shr
jnp
lock
dec
jmp
out
aaa
pop
cmps
pop
pop
aad
ins
pop
fbld
pop
in
movs
out
movs
mov
test
out
or
jmp
(bad)
jg
stos
out
call
sbb
pop
fcomp
pop
out
jae
add
jmp
in
adc
push
addr16
xchg
frstor
fimul
mov
pop
out
cli
scas
mov
movs
gs
out
inc
dec
repnz
push
pop
(bad)
fidiv
lea
pushf
fprem
jp
aad
sub
test
call
push
aaa
pop
stos
xchg
adc
sahf
addr16
mov
addr16
xor
and
bnd
out
sahf
or
in
aaa
call
out
out
lock
shl
in
test
mov
xchg
pop
cmps
clc
in
aaa
jp
mov
cvtps2pd
pop
jno
add
pop
int
retf
shr
or
push
mov
inc
aad
das
rol
or
aaa
mov
pop
push
xor
aad
jb
repnz
scas
xchg
popw
xchg
pusha
jae
push
push
and
bound
rol
mov
arpl
daa
(bad)
repz
adc
dec
test
add
push
icebp
(bad)
out
add
cmp
bound
mov
mov
ja
icebp
jg
adc
push
adc
jbe
and
adc
mov
jb
xor
xchg
pop
add
jne
ret
je
push
cmps
adc
les
ret
inc
(bad)
mov
sti
movs
not
repz
data16
test
mov
inc
in
aam
cmp
inc
sbb
pop
ror
test
addr16
test
leave
(bad)
xor
or
mov
popa
pop
and
cmp
push
and
xor
popa
xor
and
daa
stos
and
sbb
sbb
and
mov
loope
mov
add
(bad)
in
les
les
dec
xor
cmc
inc
sbb
js
push
xchg
dec
mov
xor
inc
jns
mov
sbb
inc
pop
inc
sub
cli
hlt
test
or
ins
ja
jne
cmp
add
add
aam
cmc
xor
sahf
cmps
cmps
push
or
cmp
dec
xchg
cmp
add
dec
cmp
push
loope
inc
mov
xchg
sbb
xlat
sbb
adc
out
adc
inc
push
inc
sub
pop
add
jnp
clc
mov
hlt
and
fld
les
sub
js
addr16
jecxz
add
neg
cmp
scas
xchg
pop
jnp
ss
fcmovnbe
jmp
(bad)
or
xor
cmp
pushf
hlt
mov
sar
lea
xchg
ret
or
xor
jb
imul
idiv
pop
jbe
aam
xchg
lods
bound
add
mov
imul
std
ror
popa
stos
push
js
inc
fnstenv
fstp
dec
ficomp
into
loop
fistp
sbb
lds
sbb
lea
xor
mov
popf
pusha
adc
jb
pop
mov
out
inc
jmp
add
sbb
clc
retf
mov
mov
stos
test
inc
pop
jge
cmp
adc
leave
rcr
cmp
sbb
test
mov
cmp
sbb
push
mov
push
jge
jmp
out
push
jmp
pop
scas
mov
inc
adc
mov
jl
pop
cld
cmp
fistp
(bad)
ds
cmp
pop
mov
xor
xlat
aaa
icebp
xor
repz
dec
mov
cmp
fstp
cli
xor
push
mov
mov
repz
fnstsw
ds
cmp
pop
mov
cmp
aad
div
shl
xor
pop
stc
cmp
fstp
cli
cmp
hlt
aaa
popf
pop
mov
xor
shl
repz
repz
push
mov
lea
cmp
cmp
cld
cmp
pop
mov
lock
repz
repnz
sbb
(bad)
aas
(bad)
fistp
stc
cmp
stc
cmp
pop
mov
cmp
aad
cmc
xor
hlt
aaa
not
jbe
push
div
icebp
shl
lock
repnz
push
mov
mov
fdivr
cmp
(bad)
ds
pop
mov
cmp
fstp
sti
cmp
sti
cmp
pop
mov
xor
aaa
xlat
div
not
jbe
push
icebp
xor
shl
pop
cmp
pop
mov
cmp
fstp
test
int
ins
jecxz
stc
mov
ins
dec
test
mov
sbb
ja
stos
cs
xlat
mov
push
fmul
ins
test
je
or
or
add
fldenv
add
outs
ja
push
mov
add
xchg
sbb
imul
xor
scas
mov
(bad)
leave
push
stos
sahf
inc
lea
mov
aad
adc
fiadd
cmc
shl
mov
jle
int
popf
xor
sub
pop
add
xor
std
stos
pushf
outs
loopne
cld
mov
sbb
adc
xchg
xlat
in
or
daa
imul
mov
jns
idiv
shl
test
sub
jl
mov
lea
inc
jne
xchg
mov
push
adc
add
shl
movs
cmp
jbe
adc
pop
sbb
mov
in
retf
and
ror
dec
mov
and
or
jge
sbb
cmps
jae
stos
xlat
cmc
and
push
rcl
rcl
xor
push
inc
in
mov
setnp
daa
cmp
fiadd
mov
lods
ret
mov
or
mov
xor
lea
jb
mov
ret
sub
shl
xor
pop
jmp
mov
and
popa
mov
imul
add
inc
in
imul
retf
add
mov
mov
dec
or
popa
jmp
(bad)
and
imul
push
xor
repz
jne
push
movs
push
push
das
or
xor
shr
cmp
dec
cmp
test
aam
jnp
mov
jp
cmp
mov
sub
mov
ins
add
push
test
loopne
adc
mov
xor
xchg
out
pusha
mov
pop
ja
les
cmp
aad
add
inc
sub
add
xlat
inc
xchg
mov
ins
sbb
int3
mov
int3
jmp
test
mov
mov
or
in
pop
cmps
push
je
push
cli
xchg
sbb
adc
jb
retf
retf
pop
xlat
xchg
add
adc
xchg
pop
mov
jnp
imul
and
and
jno
ds
imul
push
sub
push
arpl
cmp
stos
mov
and
int
mov
sbb
popa
jp
mov
in
shl
fs
addr16
xchg
jbe
mov
dec
in
in
in
(bad)
pop
int
int
xchg
ftst
xor
addr16
(bad)
and
loope
in
push
inc
push
nop
aam
gs
pusha
outs
mov
dec
dec
out
sub
push
sub
sbb
cwde
pop
imul
(bad)
mov
int
xor
lock
xchg
add
mov
mov
mov
mov
mov
shl
leave
cmc
jnp
jmp
add
adc
jo
in
jae
aad
xor
and
adc
lods
adc
gs
dec
mov
pop
pop
mov
ins
pop
shl
push
mov
movs
push
or
xchg
repz
lock
xchg
jp
pop
enter
dec
jne
inc
dec
daa
cmp
call
jmp
jge
or
mov
push
aas
dec
sub
inc
movs
mov
sub
xchg
mov
(bad)
fabs
mov
fs
or
iret
push
cmp
dec
pop
into
fistp
mov
jno
dec
cmp
sub
int
stos
inc
pop
cmps
sub
ror
into
lea
add
push
pop
cmp
cmps
dec
ds
shr
mov
inc
dec
std
jp
jnp
sub
retf
loop
sbb
sbb
cmp
mov
mov
add
ins
or
mov
sbb
mov
sub
fcom
jae
in
loopne
in
call
mov
pushf
fsubr
fdivr
es
pop
sbb
mov
mov
loopne
sbb
mov
mov
inc
xchg
cmp
sti
fisubr
popf
movs
lods
sub
aad
ficom
adc
imul
fld
stos
mov
adc
or
dec
fisttp
xor
or
and
or
or
or
cld
fmul
out
or
fcomp
or
into
fmul
mov
fmul
xchg
fmul
sbb
add
or
pusha
fmul
inc
fmul
xor
or
out
or
sbb
or
or
or
hlt
fisttp
out
or
fcmovu
or
into
fisttp
ret
add
fisttp
cwde
fisttp
mov
or
js
or
(bad)
fisttp
push
fisttp
inc
fisttp
xor
or
and
or
push
fisttp
add
or
lock
(bad)
or
retf
add
or
cwde
fimul
mov
or
jl
or
je
or
(bad)
fimul
repnz
adc
or
push
fmul
and
or
mov
or
xor
or
inc
xlat
or
push
xlat
or
push
xlat
or
xchg
xlat
or
sahf
xlat
or
stos
xlat
or
mov
or
(bad)
xlat
or
push
fisttp
sbb
or
sub
or
inc
fisttp
and
or
fcmovbe
or
call
xlat
or
or
or
sbb
or
sub
or
fmul
dec
fmul
(bad)
fmul
jbe
or
test
or
xchg
fmul
movs
fmul
push
fimul
inc
fimul
xor
or
and
or
push
fimul
cld
(bad)
in
(bad)
rcr
or
rcr
add
or
mov
or
jl
or
ins
(bad)
pop
(bad)
dec
(bad)
cmp
or
(bad)
push
(bad)
or
or
neg
or
call
fmul
enter
mov
or
add
add
mul
or
fsub
or
(bad)
in
add
add
sbb
or
push
in
add
in
add
add
add
in
add
or
lock
add
in
add
or
shl
or
mov
or
sahf
jecxz
add
or
pop
in
add
add
jecxz
add
or
add
add
ds
add
dec
add
scas
dec
add
dec
add
dec
add
mov
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
scas
dec
add
dec
add
dec
add
dec
add
scas
dec
add
dec
add
mov
add
mov
add
add
inc
add
inc
add
xchg
inc
add
cdq
dec
add
add
add
add
inc
mov
(bad)
sti
dec
add
add
dec
cmps
xor
add
add
add
add
add
enter
enter
inc
add
jae
popa
add
ins
add
add
add
add
outs
add
bound
ins
add
add
add
imul
outs
add
ins
add
add
add
push
add
add
add
add
push
add
jno
jne
imul
jae
add
add
push
add
arpl
imul
add
add
add
add
push
add
jb
imul
add
add
push
add
and
push
add
jno
jne
add
arpl
add
add
dec
add
add
imul
add
inc
add
jae
popa
add
ins
add
and
push
add
add
add
push
add
jo
jo
outs
add
je
add
add
imul
add
jae
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
and
push
add
jo
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
jae
add
inc
add
ins
add
popa
add
jns
and
push
add
outs
add
je
and
dec
add
ins
add
add
add
inc
add
ins
add
popa
add
jns
and
dec
add
ins
add
add
add
push
add
outs
add
add
je
add
inc
add
data16
jne
ins
add
add
add
popa
add
add
add
add
jne
jo
jo
outs
add
je
add
add
add
popa
add
add
add
push
add
jno
jne
imul
jae
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
push
add
add
je
jae
add
push
add
ins
add
jae
push
add
outs
add
add
jp
add
add
jo
ins
add
jae
push
add
outs
add
add
ins
add
jb
add
add
push
add
ins
add
jae
push
add
outs
add
add
arpl
add
add
jo
ins
add
jae
push
add
add
outs
add
add
push
add
ins
add
jae
push
add
js
je
add
push
add
ins
add
jae
push
add
arpl
imul
add
outs
add
outs
add
add
jo
ins
add
jae
push
add
add
popa
add
add
popa
add
add
outs
add
add
add
add
jne
add
arpl
add
add
add
popa
add
imul
jae
je
add
popa
add
add
add
dec
add
outs
add
data16
jae
je
add
imul
add
inc
add
outs
add
add
add
jo
jo
add
add
add
ins
add
imul
jb
add
add
add
jbe
add
add
je
popa
add
add
add
xor
add
add
jae
arpl
jb
imul
add
add
data16
add
outs
add
outs
add
je
add
add
js
add
arpl
ins
add
popa
add
add
push
add
add
add
aas
add
add
add
je
add
add
ins
add
add
js
je
jb
popa
add
je
add
add
add
outs
add
popa
add
imul
add
add
add
jo
popa
add
imul
add
add
add
jo
ins
add
jae
inc
add
add
outs
add
add
jae
arpl
add
jo
ins
add
jae
inc
add
jb
add
jo
jae
add
add
ins
add
jae
add
add
jo
jae
add
add
jbe
popa
add
add
jp
add
ins
add
outs
add
add
add
dec
add
add
add
bound
outs
add
add
add
add
add
bound
jne
add
add
add
add
add
data16
add
add
add
outs
add
imul
outs
add
add
bound
outs
add
je
add
add
outs
add
jb
add
jae
imul
outs
add
add
add
add
jo
jb
outs
add
add
je
dec
add
ins
add
add
jo
outs
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
jo
jbe
add
add
jb
add
jne
ins
add
add
add
dec
add
inc
add
jae
add
add
add
add
push
add
arpl
imul
add
add
add
add
push
add
popa
add
arpl
push
add
add
add
push
add
ins
add
add
add
push
add
add
data16
data16
ins
add
add
arpl
add
je
add
jo
add
add
ja
imul
jb
imul
add
add
ja
imul
imul
add
jae
jns
jae
ja
outs
add
add
add
add
jae
jns
jae
je
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
outs
add
ins
add
outs
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
inc
add
ins
add
outs
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
add
add
arpl
outs
add
data16
add
imul
add
add
arpl
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
jae
add
and
ins
add
imul
jne
jae
add
and
ins
add
arpl
popa
add
add
add
jns
jae
and
ins
add
imul
add
jae
jns
jae
and
ins
add
arpl
popa
add
add
add
add
add
add
add
je
outs
add
add
add
add
add
add
je
imul
and
inc
add
ins
add
outs
add
and
push
add
jb
jae
imul
add
je
add
add
add
add
je
imul
and
push
add
jb
jae
imul
add
je
add
add
add
je
imul
and
inc
add
arpl
outs
add
popa
add
add
outs
add
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
add
jb
outs
add
add
je
jae
pop
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
pop
add
push
add
dec
add
add
add
add
add
add
add
add
outs
add
add
outs
add
add
add
add
outs
add
arpl
add
add
outs
add
add
add
popa
add
add
add
inc
add
add
add
push
add
add
and
ins
outs
arpl
imul
dec
add
dec
add
dec
add
dec
add
dec
add
mov
inc
add
mov
inc
add
aad
add
aad
add
mov
inc
add
inc
add
inc
add
dec
add
and
and
add
mov
inc
add
sbb
inc
add
mov
inc
add
inc
add
mov
inc
add
push
inc
add
inc
add
and
sbb
add
and
inc
add
jae
jo
ins
add
jns
inc
add
jb
outs
add
and
and
inc
add
jb
outs
add
and
pop
add
add
add
jo
ins
add
jns
inc
add
jb
outs
add
dec
add
imul
and
inc
add
jae
jo
ins
add
jns
imul
and
add
jb
outs
add
and
ins
add
jae
jae
popa
add
add
add
add
mov
inc
add
aad
add
inc
inc
add
dec
inc
add
inc
add
dec
add
sub
adc
pusha
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
sub
ror
add
inc
add
inc
inc
add
dec
inc
add
inc
add
mov
inc
add
add
jb
jb
outs
add
add
add
and
add
add
add
ins
add
popa
add
add
add
add
add
ins
add
popa
add
add
outs
add
add
ror
cmp
nop
cs
add
dec
add
cmp
inc
add
add
add
add
aas
inc
add
inc
add
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
add
inc
add
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
add
outs
add
popa
add
add
add
outs
add
imul
outs
add
add
je
add
jo
dec
add
dec
inc
add
inc
add
cmc
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
imul
dec
add
inc
add
imul
and
push
add
popa
add
ins
add
and
je
outs
add
add
imul
and
ins
add
add
ins
add
and
data16
ins
add
and
outs
add
ins
add
add
add
add
inc
add
ins
add
je
add
imul
dec
add
inc
add
imul
and
push
add
add
add
add
js
add
jne
je
add
add
popa
add
ins
add
add
add
add
add
add
pop
add
add
imul
dec
add
and
dec
add
push
add
add
pop
add
push
add
add
add
add
add
dec
add
add
add
add
je
pop
add
jb
add
je
push
add
dec
add
add
add
and
das
add
and
and
and
add
add
inc
add
dec
add
add
imul
and
jae
je
imul
and
add
imul
jae
and
add
add
add
add
ins
add
and
add
ins
add
add
add
add
outs
add
js
imul
ins
add
add
add
dec
add
add
add
add
pop
add
add
imul
cmp
ins
add
jae
je
pop
add
jb
add
je
push
add
ins
add
add
add
add
outs
add
js
imul
bound
popa
add
add
add
popa
add
add
add
jb
jb
outs
add
cmp
and
and
and
dec
add
jae
jae
popa
add
add
add
add
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
inc
add
arpl
outs
add
outs
add
add
add
add
popa
add
add
add
jb
jb
outs
add
and
imul
and
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
dec
add
outs
add
add
outs
add
and
add
jb
outs
add
cmp
and
pop
add
add
add
add
add
add
and
add
add
arpl
cmp
and
and
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
imul
jae
push
add
add
jb
outs
add
add
jae
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
add
add
outs
add
imul
and
imul
je
popa
add
add
jb
and
bound
add
popa
add
jae
add
add
outs
add
je
popa
add
add
add
popa
add
and
outs
add
je
and
jae
jne
arpl
arpl
add
jae
data16
ins
add
add
add
push
add
outs
add
popa
add
outs
add
add
popa
add
add
add
add
jb
jb
outs
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
push
add
imul
and
add
arpl
add
je
imul
jae
and
pop
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
outs
add
je
popa
add
add
jb
and
jne
jo
outs
add
and
add
imul
pop
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
popa
add
add
add
add
add
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
arpl
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
ja
push
add
outs
add
popa
add
outs
add
add
push
add
and
data16
jb
and
add
imul
imul
and
imul
je
popa
add
add
jb
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
jo
popa
add
imul
add
add
add
popa
add
popa
add
add
add
add
add
jnp
inc
add
xor
inc
add
add
inc
add
sub
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
outs
add
and
arpl
ja
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
data16
inc
add
popa
add
ins
add
inc
add
outs
add
add
ins
add
outs
add
je
popa
add
outs
add
jb
add
add
ja
push
add
outs
add
popa
add
outs
add
add
outs
add
je
inc
add
ins
add
outs
add
inc
add
outs
add
add
ins
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
and
add
add
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
jae
je
popa
add
add
jb
add
inc
add
dec
add
add
jae
jne
ins
add
add
add
push
add
push
add
jb
add
add
outs
add
je
popa
add
add
jb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
sub
sub
add
inc
add
inc
add
inc
add
add
add
add
dec
add
dec
add
add
add
add
add
inc
add
dec
add
dec
add
add
inc
add
push
add
push
add
add
add
add
dec
add
add
inc
add
add
add
dec
add
add
dec
add
add
jne
je
add
add
add
add
mov
addr16
add
outs
inc
add
fs
add
jno
add
jno
add
inc
add
jae
add
inc
add
inc
add
addr16
add
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
jbe
ins
add
add
add
add
add
add
add
add
and
add
and
add
and
add
add
add
inc
add
add
pop
add
add
inc
add
bound
add
add
or
add
add
add
and
add
and
add
cmp
add
jns
add
add
je
jb
jne
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
je
push
add
popa
add
imul
add
add
add
jae
and
outs
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
outs
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
jo
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
add
imul
outs
add
ins
add
jae
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
jp
add
add
inc
add
imul
popa
add
imul
add
add
add
add
imul
inc
add
imul
jae
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
jb
jb
add
je
inc
add
ins
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
inc
add
inc
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
sub
and
jo
outs
add
imul
outs
add
cmp
and
and
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
jb
outs
add
inc
add
ins
add
inc
add
imul
add
add
add
add
add
add
add
jb
outs
add
and
je
push
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
jb
add
add
add
add
add
add
js
jo
add
je
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jb
imul
push
add
inc
add
ins
add
add
add
add
inc
add
imul
add
add
add
add
jb
imul
and
je
outs
add
add
imul
and
and
add
add
popa
add
add
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
ja
jb
imul
add
cmp
and
and
add
add
js
jo
add
je
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
add
outs
add
jo
jb
add
jae
and
add
je
popa
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
outs
add
jo
jb
add
jae
and
je
push
add
outs
add
jne
je
and
data16
ins
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
ins
add
jae
add
add
popa
add
imul
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
ins
add
jae
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
push
add
add
je
add
add
dec
add
and
push
add
jae
imul
outs
add
and
push
add
jae
outs
add
jb
arpl
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
add
add
inc
add
imul
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
add
add
js
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
add
outs
add
jo
jb
add
jae
add
add
add
jns
je
add
and
outs
add
and
and
add
add
inc
add
imul
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
inc
add
ins
add
add
push
add
add
and
inc
add
outs
add
add
add
add
add
and
add
je
jb
popa
add
je
imul
and
outs
add
add
popa
add
add
outs
add
add
add
add
add
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
js
je
jb
popa
add
je
and
jo
jb
outs
add
add
ins
add
and
popa
add
add
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
js
je
jb
popa
add
je
add
add
add
add
add
je
je
add
jo
je
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
and
add
push
add
and
imul
and
add
add
add
jns
je
add
and
imul
jae
imul
add
add
add
data16
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
and
imul
je
push
add
add
popa
add
imul
add
add
add
jne
je
jo
jne
je
inc
add
ins
add
add
add
data16
ins
add
outs
add
ins
add
add
add
and
add
add
imul
outs
add
ins
add
and
arpl
popa
add
and
outs
add
je
and
bound
add
add
jne
ins
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
cmp
and
dec
add
popa
add
add
and
popa
add
add
add
popa
add
add
outs
add
add
add
add
add
outs
add
add
imul
and
daa
add
add
add
jae
and
outs
add
je
and
popa
add
add
popa
add
add
add
add
add
jb
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
and
xor
and
cmp
and
and
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jo
add
add
add
popa
add
imul
add
add
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jb
add
je
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
jb
add
add
add
jb
imul
add
add
jb
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
add
jb
imul
and
ins
add
add
sub
and
data16
ins
add
and
imul
ins
add
jb
imul
add
add
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jo
add
push
add
arpl
imul
add
add
add
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
sub
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
imul
jb
add
add
add
add
add
outs
add
add
add
jp
imul
popa
add
imul
add
add
add
add
inc
add
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
jae
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
add
add
add
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
and
add
add
popa
add
add
add
outs
add
and
jb
add
add
outs
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
add
outs
add
and
and
add
add
add
add
and
jo
popa
add
imul
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
ins
add
outs
add
ins
add
and
and
add
ins
add
add
add
and
add
imul
jae
and
imul
jo
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
jb
popa
add
add
imul
add
inc
add
imul
add
add
add
add
add
add
add
and
inc
add
inc
add
add
popa
add
imul
add
and
popa
add
je
add
and
add
popa
add
imul
and
and
add
add
popa
add
imul
add
add
add
outs
add
je
and
ins
add
imul
add
add
add
imul
and
bound
add
add
outs
add
jb
jne
jo
je
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
cmp
and
push
add
ins
add
jbe
imul
and
daa
add
add
add
jb
outs
add
and
je
push
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
add
push
add
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
add
push
add
outs
add
jb
popa
add
inc
add
ins
add
jae
inc
add
jb
add
inc
add
ins
add
outs
add
inc
add
ins
add
jae
inc
add
jb
add
add
sub
add
inc
add
add
push
add
pop
add
push
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
add
add
inc
add
dec
add
push
add
inc
add
pop
add
add
inc
add
add
inc
add
add
inc
add
dec
add
push
add
inc
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
push
add
push
add
push
add
add
dec
add
dec
add
dec
add
dec
add
push
add
inc
add
add
add
dec
add
dec
add
inc
add
add
dec
add
add
inc
add
add
dec
add
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
push
add
dec
add
add
add
dec
add
dec
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
dec
add
push
add
push
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
cmp
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
cmp
add
add
push
add
inc
add
dec
add
add
dec
add
push
add
inc
add
add
inc
add
add
add
push
add
dec
add
push
add
dec
add
inc
add
dec
add
push
add
add
dec
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
push
add
inc
add
push
add
add
add
dec
add
push
add
add
pop
add
add
dec
add
dec
add
inc
add
add
dec
add
push
add
push
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
push
add
push
add
add
dec
add
add
add
push
add
push
add
add
add
add
inc
add
add
push
add
inc
add
push
add
add
push
add
dec
add
push
add
dec
add
inc
add
add
push
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
add
dec
add
add
inc
add
push
add
inc
add
add
pop
add
add
dec
add
dec
add
dec
add
push
add
add
push
add
push
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
dec
add
pop
add
push
add
push
add
add
dec
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
push
add
add
dec
add
push
add
dec
add
inc
add
add
inc
add
add
push
add
add
inc
add
dec
add
inc
add
add
add
inc
add
push
add
push
add
push
add
add
inc
add
push
add
push
add
add
add
dec
add
push
add
inc
add
dec
add
add
pop
add
push
add
dec
add
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
push
add
push
add
add
dec
add
add
inc
add
push
add
push
add
dec
add
push
add
add
inc
add
inc
add
add
add
add
inc
add
inc
add
push
add
add
add
push
add
push
add
add
add
inc
add
push
add
push
add
push
add
push
add
add
inc
add
push
add
dec
add
dec
add
add
add
push
add
dec
add
add
push
add
add
add
dec
add
push
add
dec
add
add
add
add
push
add
inc
add
inc
add
push
add
add
add
dec
add
add
dec
add
push
add
add
add
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
add
add
push
add
push
add
add
xor
xor
add
add
push
add
push
add
add
add
push
add
dec
add
add
add
add
and
add
add
add
add
and
add
add
and
or
add
add
and
or
and
add
inc
add
outs
add
ins
add
outs
add
add
outs
add
cmp
cmp
push
add
jb
jae
add
outs
add
ins
add
outs
add
add
outs
add
and
inc
add
data16
jne
ins
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
jne
jae
je
outs
add
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
add
add
cmp
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
dec
add
je
add
outs
add
ins
add
add
add
ins
add
add
add
add
add
add
outs
add
and
and
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
daa
add
jnp
daa
add
add
outs
add
outs
add
add
add
jne
je
and
outs
add
and
add
add
outs
add
and
daa
add
daa
add
add
outs
add
outs
add
add
add
add
outs
add
add
js
jo
popa
add
jae
imul
and
data16
jb
and
daa
add
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
inc
add
arpl
add
add
add
add
popa
add
imul
ins
add
add
jne
ins
add
add
and
outs
add
and
jbe
popa
add
imul
ins
add
and
add
jo
popa
add
jae
imul
jae
sub
and
and
add
add
add
add
add
outs
add
je
popa
add
outs
add
and
popa
add
add
jns
arpl
ins
add
arpl
and
jbe
popa
add
imul
ins
add
add
add
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
push
add
jo
ins
add
arpl
add
add
add
add
add
imul
and
daa
add
add
add
add
jnp
jge
add
and
jnp
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
dec
add
imul
outs
add
ins
add
add
je
jb
imul
and
daa
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
push
add
je
dec
add
cmp
and
push
add
je
je
imul
and
and
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
inc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
add
imul
and
imul
and
data16
ins
add
and
and
add
dec
add
imul
ins
add
cmp
and
and
add
jae
and
popa
add
and
imul
popa
add
add
add
imul
add
inc
add
outs
add
inc
add
ins
add
cmp
and
dec
add
add
add
add
outs
add
and
data16
ins
add
and
and
add
add
add
add
add
add
outs
add
add
add
add
jb
imul
bound
ins
add
add
add
dec
add
dec
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
arpl
je
imul
and
and
add
popa
add
and
imul
add
jae
and
and
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
dec
add
jns
jae
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
je
and
and
add
add
add
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
and
add
add
add
jae
and
outs
add
je
and
add
imul
inc
add
dec
add
push
add
push
add
push
add
dec
add
push
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
inc
add
dec
add
dec
add
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
push
add
ins
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
je
and
and
add
add
add
add
add
dec
add
imul
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
jb
jb
outs
add
and
and
add
dec
add
imul
ins
add
cmp
cmp
push
add
je
push
add
ins
add
add
add
add
add
add
add
outs
add
add
jae
and
xor
xor
xor
xor
and
push
add
xor
and
jae
jns
jae
je
add
and
imul
outs
add
je
and
arpl
outs
add
jo
popa
add
add
ins
add
and
ja
imul
and
jbe
arpl
jb
add
add
je
pop
add
cmp
add
add
js
add
add
add
inc
add
add
add
add
add
add
jne
jae
je
and
bound
add
add
outs
add
je
popa
add
add
add
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
dec
add
push
add
jae
je
add
dec
add
push
add
je
push
add
add
add
add
je
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
dec
add
inc
add
outs
jbe
ins
imul
gs
push
and
gs
je
jb
ins
popa
jo
jae
je
push
and
and
add
dec
add
inc
add
imul
pop
add
add
add
push
add
outs
add
add
xor
xor
add
push
add
outs
add
add
add
add
imul
xor
xor
cmp
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
imul
popa
add
add
add
push
add
outs
add
imul
popa
add
xor
xor
add
push
add
outs
add
imul
popa
add
add
add
imul
xor
xor
xor
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
push
add
add
add
add
push
add
outs
add
push
add
xor
xor
add
add
push
add
outs
add
push
add
add
imul
xor
xor
xor
add
and
add
add
jae
push
add
ja
add
push
add
outs
add
add
jae
and
data16
imul
add
and
add
jb
outs
add
and
and
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
inc
add
jns
jae
je
add
dec
add
data16
add
add
imul
gs
xor
add
add
dec
jae
outs
ja
xor
jb
arpl
jae
add
add
add
jb
jae
imul
inc
add
and
data16
imul
add
add
outs
add
imul
and
inc
add
jns
jae
je
add
dec
add
data16
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
ins
add
popa
add
add
add
ins
add
add
outs
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
add
add
add
ins
add
add
outs
add
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
ins
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
dec
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
add
add
add
jb
outs
add
and
and
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
popa
add
add
outs
add
popa
add
add
add
inc
add
add
je
add
jo
add
popa
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
je
dec
add
add
ins
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
inc
add
aas
inc
add
sbb
dec
add
pop
inc
add
inc
add
sbb
push
add
ins
add
jae
push
add
push
add
add
add
push
add
ja
popa
add
add
add
add
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
and
jo
popa
add
imul
add
add
add
imul
and
ja
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
je
and
ins
add
arpl
popa
add
add
outs
add
add
add
add
and
je
push
add
add
popa
add
and
arpl
popa
add
jae
add
add
jb
outs
add
ins
add
ins
add
inc
add
add
popa
add
add
jb
ins
add
add
add
popa
add
add
and
daa
add
add
and
ja
popa
add
and
add
je
add
je
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
add
jne
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
jae
and
ins
add
jae
jae
imul
and
popa
add
add
popa
add
add
add
add
inc
add
and
imul
popa
add
add
add
add
jo
outs
add
popa
add
jns
and
add
jb
add
je
outs
add
jns
and
ja
popa
add
and
add
je
add
je
add
add
add
popa
add
add
add
add
add
add
add
add
js
imul
jae
cmp
and
and
add
add
jae
inc
add
ins
add
cmp
and
and
add
add
jae
push
add
popa
add
add
ins
add
cmp
and
and
add
outs
add
add
outs
add
popa
add
add
add
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
and
ja
popa
add
and
jae
jo
add
imul
add
add
outs
add
add
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
daa
add
add
add
add
add
ins
add
dec
add
jae
je
popa
add
add
je
imul
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
outs
add
add
imul
jae
add
add
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
add
imul
jae
imul
cmp
and
and
add
add
and
dec
add
or
inc
pop
add
and
arpl
outs
add
je
popa
add
outs
add
cmp
or
add
inc
add
outs
add
jb
popa
add
add
add
add
add
je
and
outs
add
and
data16
ins
add
jae
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
jbe
add
jb
imul
jae
push
add
je
push
add
data16
add
inc
add
add
add
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jbe
add
jb
imul
jae
and
ja
imul
and
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
popa
add
add
and
outs
add
add
jb
imul
jae
cmp
and
daa
add
add
add
add
popa
add
imul
add
add
outs
add
popa
add
add
add
jne
je
jo
jne
je
and
data16
ins
add
and
daa
add
add
add
add
add
add
add
js
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
dec
add
ins
add
and
add
jb
cmp
add
add
jb
outs
add
add
je
dec
add
ins
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
push
add
jb
jae
imul
and
add
jb
cmp
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
outs
add
jns
and
je
push
add
popa
add
add
add
imul
and
je
outs
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
je
push
add
popa
add
add
add
outs
add
add
add
je
imul
je
imul
and
data16
ins
add
jae
and
popa
add
add
add
add
and
jae
popa
add
add
add
add
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
jae
add
add
imul
cmp
and
and
add
add
jne
je
jo
jne
je
and
inc
add
ins
add
cmp
and
and
add
popa
add
imul
add
add
outs
add
bound
ins
add
and
je
outs
add
add
imul
and
data16
ins
add
and
and
add
add
popa
add
add
add
add
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
popa
add
imul
add
add
imul
and
and
add
and
data16
ins
add
outs
add
ins
add
and
arpl
outs
add
data16
add
je
jae
and
ja
imul
and
popa
add
outs
add
add
jb
and
data16
ins
add
and
imul
je
push
add
popa
add
imul
add
add
and
popa
add
add
add
popa
add
and
outs
add
je
and
jo
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
push
add
arpl
imul
add
add
add
add
add
add
add
jo
add
imul
and
outs
add
je
jo
jne
je
and
jo
popa
add
imul
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
outs
add
popa
add
imul
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
outs
add
jns
and
outs
add
and
jo
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
imul
and
jo
popa
add
imul
add
add
add
outs
add
je
add
je
jae
add
add
add
outs
add
popa
add
add
add
js
je
jb
popa
add
je
imul
and
add
jb
add
je
outs
add
jns
and
daa
add
add
add
popa
add
and
jo
jb
outs
add
imul
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
imul
add
outs
add
push
add
je
push
add
je
ins
add
add
add
and
add
add
add
add
imul
add
outs
add
push
add
je
inc
add
jb
add
je
imul
add
add
push
add
jae
imul
add
outs
add
push
add
je
dec
add
js
add
add
push
add
jae
imul
add
outs
add
dec
add
arpl
jb
add
add
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
add
add
outs
add
popa
add
add
add
add
ins
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
outs
add
and
add
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
and
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
add
and
add
je
jb
popa
add
je
imul
and
add
imul
and
daa
add
add
add
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
imul
jb
jns
and
pop
add
dec
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
add
add
bound
outs
add
je
add
add
inc
add
dec
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
outs
add
je
and
data16
ins
add
pop
add
add
add
add
ins
add
add
outs
add
je
add
add
add
add
data16
jb
arpl
add
jae
imul
outs
add
add
add
add
add
ins
add
popa
add
jae
dec
add
jae
je
popa
add
add
ins
add
jbe
popa
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
ins
add
arpl
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
outs
add
je
popa
add
add
jb
add
push
add
data16
add
jb
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
je
and
and
add
jae
and
add
outs
add
add
jae
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jne
outs
add
je
imul
and
pop
add
add
add
dec
jae
outs
jb
dec
outs
push
jae
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
add
add
outs
add
and
data16
outs
add
je
imul
and
pop
add
add
add
add
dec
add
jae
push
add
jb
je
dec
add
push
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
je
je
add
jo
je
and
je
outs
add
add
add
add
add
add
jb
popa
add
jns
and
pop
add
add
add
dec
add
dec
add
push
add
push
add
dec
add
add
add
add
add
add
and
data16
jb
jae
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
outs
add
ins
add
add
add
add
imul
outs
add
jb
add
je
and
outs
add
ins
add
add
and
outs
add
and
jo
popa
add
popa
add
add
add
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
outs
add
je
add
jae
add
add
outs
add
jae
pop
add
js
imul
add
add
arpl
outs
add
data16
add
add
ins
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
push
add
je
inc
add
jb
jb
add
je
inc
add
jb
add
je
outs
add
jns
sub
sub
and
data16
imul
add
add
imul
and
add
jb
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
add
add
add
and
add
dec
add
dec
add
inc
add
push
add
add
add
add
ja
popa
add
add
add
outs
add
je
add
add
popa
add
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
popa
add
arpl
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
outs
add
je
imul
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
dec
add
popa
add
add
add
outs
add
je
popa
add
add
jb
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
inc
add
and
imul
outs
add
and
ins
add
outs
add
add
and
jae
jne
jo
jo
outs
add
je
add
add
outs
add
add
add
jae
and
jbe
add
jae
imul
and
outs
add
and
push
add
ja
popa
add
add
add
ins
add
jns
add
add
add
add
add
jae
add
add
ins
add
jns
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
outs
add
outs
add
add
add
and
pop
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
jns
add
add
ins
imul
je
outs
and
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
jae
inc
add
cmp
add
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
add
add
add
outs
add
jae
inc
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
outs
add
je
imul
imul
push
add
arpl
imul
add
add
popa
add
popa
add
add
cmp
and
push
add
popa
add
arpl
push
add
add
and
pop
add
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
add
outs
add
add
add
outs
add
imul
outs
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
inc
add
imul
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
imul
and
je
push
add
add
and
add
jbe
imul
outs
add
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
imul
add
jb
popa
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
outs
add
add
add
add
and
ins
add
popa
add
add
outs
add
imul
outs
add
add
je
add
pop
add
dec
add
pop
add
add
add
pop
add
dec
add
pop
add
and
cmp
add
outs
add
je
imul
sub
add
add
add
add
add
add
add
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
pop
add
push
add
pop
add
add
and
jne
outs
add
popa
add
imul
add
jb
add
add
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
dec
add
add
add
data16
add
add
and
ins
add
popa
add
add
jb
add
ins
add
outs
add
add
add
jae
and
add
jo
je
jns
and
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
daa
add
add
add
jae
and
popa
add
and
jne
outs
add
jne
jo
jo
outs
add
je
add
add
add
imul
jb
jns
and
push
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
add
jb
outs
add
and
je
jb
jns
imul
and
je
outs
add
add
add
add
add
add
imul
jb
jns
and
jbe
popa
add
add
and
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
jb
add
imul
jb
jns
and
jbe
popa
add
add
and
daa
add
add
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
dec
add
push
add
add
add
dec
add
push
add
add
add
dec
add
add
add
add
outs
add
outs
add
ja
outs
add
add
jb
jb
outs
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jb
outs
add
cmp
and
inc
add
jb
outs
add
and
dec
add
jae
jae
popa
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
outs
add
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
add
add
add
outs
add
add
je
imul
and
outs
add
je
and
popa
add
add
outs
add
ins
add
popa
add
and
jbe
popa
add
add
add
add
jb
outs
add
dec
add
add
outs
add
add
outs
add
add
outs
add
add
add
and
jbe
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
cmp
and
inc
add
jae
add
je
and
data16
imul
add
add
add
add
add
and
and
push
add
jae
je
outs
add
add
add
add
je
jne
jb
add
and
add
and
add
add
dec
add
jae
je
popa
add
add
add
add
bound
push
add
ins
add
arpl
je
add
add
add
add
add
je
jne
jb
add
je
push
add
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
je
popa
add
ins
add
add
add
je
push
add
imul
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
add
sub
sub
sub
and
inc
add
add
jne
je
imul
and
and
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
ins
add
jbe
add
ins
add
add
add
add
add
je
je
imul
jae
add
and
and
push
add
jb
jae
imul
and
inc
add
popa
add
add
add
and
add
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jo
popa
add
add
popa
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
outs
add
je
imul
push
add
je
push
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jbe
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
cmp
push
add
jbe
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
and
popa
add
add
ins
add
outs
add
add
add
add
popa
add
je
imul
and
outs
add
and
and
add
outs
add
and
and
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
imul
outs
add
popa
add
add
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
imul
and
jb
add
add
outs
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
popa
add
ins
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
popa
add
ins
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
add
outs
add
and
outs
add
add
popa
add
add
outs
add
add
add
add
push
add
add
outs
add
jb
imul
ins
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
dec
add
imul
popa
add
add
add
add
jns
jae
je
add
and
jae
push
add
add
outs
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
push
add
jo
jo
jb
add
jae
imul
and
popa
add
je
outs
add
popa
add
add
and
jb
add
outs
add
je
sub
and
jo
ins
add
popa
add
add
add
add
outs
add
je
and
je
push
add
popa
add
push
add
and
ins
add
outs
add
popa
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
inc
add
outs
add
je
imul
and
je
push
add
outs
add
je
popa
add
add
jb
and
add
add
add
add
add
add
jne
imul
add
add
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
outs
add
add
add
add
add
dec
add
popa
add
add
add
jne
outs
add
add
outs
add
je
popa
add
add
jb
and
inc
add
je
add
and
push
add
bound
outs
add
je
add
and
and
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
and
add
add
add
add
add
add
outs
add
add
imul
add
add
jo
add
popa
add
add
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
jb
popa
add
jo
add
add
add
and
and
inc
add
ins
add
ins
add
je
add
add
outs
add
add
popa
add
imul
add
add
add
add
outs
add
add
outs
add
and
inc
add
arpl
imul
add
add
jae
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
arpl
popa
add
add
outs
add
and
push
add
add
je
push
add
jno
jne
add
arpl
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
je
imul
and
push
add
add
imul
bound
push
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
add
popa
add
add
add
add
add
push
add
dec
add
and
bound
outs
add
add
add
add
and
jo
popa
add
add
add
outs
add
add
imul
and
jo
popa
add
popa
add
add
add
jae
and
ja
add
add
add
ins
add
je
jns
add
add
je
imul
add
add
imul
add
add
jo
popa
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jae
and
outs
add
je
and
popa
add
add
jne
jo
jo
jo
outs
add
je
add
add
add
popa
add
add
and
add
data16
jne
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
jb
imul
jb
jns
and
dec
add
outs
add
jne
popa
add
add
add
popa
add
add
and
data16
jne
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
js
popa
add
je
and
ins
add
je
arpl
push
add
outs
add
and
push
add
jo
jo
outs
add
je
add
add
add
popa
add
add
sub
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
outs
add
ins
add
jae
push
add
outs
add
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
popa
add
popa
add
add
add
add
add
add
popa
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
inc
add
outs
add
add
ins
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
imul
add
dec
add
popa
add
jne
outs
add
je
imul
jae
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
imul
add
add
add
and
dec
add
popa
add
add
jne
outs
add
je
imul
jae
add
add
add
je
jb
popa
add
je
imul
pop
add
add
add
add
xor
add
popa
add
je
imul
add
add
ins
add
imul
add
popa
add
arpl
add
add
popa
add
je
dec
add
dec
add
ins
add
add
jbe
add
je
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
push
add
inc
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
popa
add
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
add
add
push
add
outs
add
je
imul
push
add
je
push
add
js
jo
popa
add
add
popa
add
add
add
add
add
add
bound
outs
add
je
inc
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
outs
add
add
ins
add
add
add
add
add
je
je
imul
jae
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
jae
je
popa
add
add
add
jb
outs
add
add
je
jae
add
add
inc
add
jae
add
je
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
imul
push
add
add
dec
add
inc
add
add
outs
add
add
dec
add
add
jne
add
arpl
add
add
add
imul
push
add
add
add
push
add
outs
add
push
add
add
add
inc
add
jae
popa
add
ins
add
push
add
add
push
add
add
je
push
add
bound
outs
add
je
add
push
add
bound
outs
add
je
inc
add
add
imul
add
imul
inc
add
imul
jae
add
add
push
add
jo
popa
add
imul
add
arpl
imul
add
add
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
push
add
add
js
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
add
dec
add
add
add
popa
add
outs
add
outs
add
add
inc
add
jb
outs
add
add
inc
add
add
push
add
add
add
add
add
add
imul
jb
jns
add
add
inc
add
ins
add
je
add
add
add
outs
add
add
push
add
jbe
add
add
add
outs
add
add
dec
add
jae
push
add
je
je
imul
add
add
inc
add
je
push
add
je
je
imul
inc
add
add
add
add
je
je
imul
add
add
inc
add
dec
add
add
popa
add
add
outs
add
add
outs
add
ins
add
add
add
push
add
ins
add
popa
add
add
add
add
add
add
add
add
ins
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
jb
imul
and
arpl
outs
add
jo
ins
add
je
add
and
jae
je
popa
add
je
imul
and
arpl
ins
add
popa
add
sub
add
add
add
outs
add
je
jae
je
jb
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
je
jae
je
jb
popa
add
and
je
push
add
add
and
jae
arpl
jb
imul
add
inc
add
ins
add
push
add
jb
jae
imul
add
inc
push
push
dec
push
cmp
push
outs
popa
bound
je
and
fs
je
and
jae
jne
arpl
and
jae
jb
jno
imul
and
je
jae
popa
outs
and
ins
jns
and
je
jae
popa
jb
and
popa
imul
inc
js
outs
and
and
jb
gs
outs
outs
imul
popa
and
outs
jb
and
and
je
jo
jb
or
add
add
add
outs
add
inc
add
ins
add
dec
add
data16
pop
add
add
and
add
pop
add
add
add
add
jb
imul
push
jb
outs
jae
popa
je
outs
outs
add
add
and
add
add
add
add
add
add
add
add
outs
jbe
ins
imul
gs
imul
inc
dec
outs
je
jne
jo
jb
gs
js
gs
imul
gs
outs
jb
inc
js
gs
imul
inc
inc
js
gs
imul
dec
add
add
add
inc
add
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
ret
dec
add
inc
add
sbb
inc
add
inc
add
sbb
add
dec
add
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
push
les
test
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
inc
dec
ins
gs
js
gs
imul
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
sbb
fs
add
sbb
inc
add
sbb
push
sbb
clc
les
inc
sbb
inc
add
inc
add
dec
bound
arpl
ror
mov
dec
add
ror
movs
ror
mov
dec
add
dec
add
dec
add
dec
add
add
(bad)
inc
add
jb
push
js
gs
imul
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
loopne
dec
add
sbb
(bad)
and
push
sbb
inc
dec
popa
jo
je
imul
jb
outs
add
enter
push
das
inc
add
xor
inc
push
je
imul
add
inc
dec
add
add
(bad)
inc
add
add
add
add
dec
add
aaa
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
xchg
xor
mov
xor
inc
add
add
xor
add
xor
jns
inc
add
ss
add
xor
add
aaa
inc
add
(bad)
dec
add
ss
add
sbb
inc
add
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
arpl
je
outs
outs
and
outs
ja
and
and
je
jne
je
jb
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
gs
je
arpl
add
in
(bad)
dec
add
cmp
inc
add
dec
add
and
aaa
cmp
inc
add
cmp
inc
add
(bad)
dec
add
inc
inc
add
add
outs
inc
add
cmp
pop
cmp
inc
add
xchg
inc
add
cmp
inc
cmp
ins
cmp
push
inc
inc
add
and
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
outs
je
data16
imul
add
jne
jae
add
xor
xor
add
add
add
add
imul
add
je
je
imul
jae
add
add
push
add
add
imul
push
add
add
jae
add
add
ror
movs
add
add
inc
add
add
add
add
add
add
add
inc
add
dec
dec
add
add
add
add
add
add
add
add
inc
loope
add
add
add
inc
add
add
add
(bad)
(bad)
call
loope
add
loope
add
add
repnz
add
add
add
add
loope
add
loope
add
add
add
inc
add
arpl
popa
je
inc
arpl
js
add
add
je
jbe
je
inc
arpl
js
add
ins
gs
jae
inc
arpl
js
add
inc
jb
popa
je
inc
arpl
js
add
add
inc
add
dec
add
dec
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
js
jo
ins
add
jb
add
add
dec
add
push
add
outs
add
add
outs
add
add
jbe
add
add
add
push
add
jae
je
jb
imul
push
add
outs
add
add
outs
add
add
add
outs
add
add
je
inc
add
jae
arpl
outs
add
outs
add
arpl
je
add
add
dec
add
push
add
arpl
add
je
inc
add
arpl
jae
dec
add
jae
je
outs
add
jns
add
dec
add
inc
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
add
add
jb
imul
add
add
outs
add
outs
add
add
add
add
add
jb
imul
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
outs
add
add
add
add
add
add
outs
add
ins
add
arpl
add
inc
add
jb
add
dec
add
inc
add
arpl
imul
add
je
je
outs
add
add
add
dec
add
inc
add
ins
add
dec
add
jne
add
cwde
enter
dec
inc
add
push
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
dec
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
push
inc
add
mov
jp
inc
add
mov
scas
dec
inc
add
dec
inc
add
inc
add
inc
add
ss
add
inc
add
add
add
dec
inc
add
cs
add
add
test
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
outs
add
add
add
add
add
add
add
add
outs
add
je
jb
outs
add
add
popa
add
add
add
add
imul
add
jo
pop
add
add
outs
add
jb
arpl
add
add
popa
add
add
add
add
je
jns
je
ins
inc
gs
jne
je
dec
dec
popa
outs
addr16
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outs
addr16
add
add
and
add
add
add
add
imul
add
mov
add
add
inc
add
add
add
add
dec
add
pop
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
push
inc
add
add
add
add
add
ins
cmp
das
add
outs
add
add
inc
inc
outs
outs
je
add
inc
inc
imul
add
inc
push
popa
imul
add
inc
push
imul
add
add
ins
imul
add
inc
inc
inc
add
jae
jb
js
gs
imul
gs
jne
arpl
js
gs
imul
dec
add
add
add
inc
add
add
add
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
add
add
inc
add
dec
add
add
add
(bad)
inc
add
add
add
dec
dec
add
dec
add
add
(bad)
inc
add
add
add
dec
dec
add
add
add
inc
add
add
add
dec
dec
add
dec
add
add
add
inc
add
inc
dec
add
dec
add
add
add
inc
add
add
add
dec
add
dec
add
add
add
inc
add
add
add
dec
add
inc
add
fs
add
sbb
inc
add
inc
add
sbb
add
dec
add
pop
inc
add
sbb
inc
add
inc
add
sbb
add
add
push
retf
adc
add
addr16
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
pop
inc
add
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
retf
sbb
push
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
dec
add
pop
inc
add
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pop
inc
add
push
add
sbb
dec
add
outs
inc
add
dec
add
int3
dec
add
jae
add
int3
dec
add
je
add
int
add
int
add
add
ins
add
je
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
add
add
add
add
add
add
int
add
je
add
jle
add
jg
add
inc
add
mov
inc
add
add
add
add
add
add
into
dec
add
jle
add
jg
add
inc
add
mov
inc
add
add
push
push
add
lods
push
dec
add
add
inc
add
add
add
ror
fild
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
scas
test
imul
inc
add
add
xchg
mov
mov
jbe
inc
add
inc
imul
(bad)
call
dec
add
add
add
inc
add
add
add
add
dec
add
nop
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
mov
mov
lea
cwde
lea
mov
inc
add
mov
add
inc
add
mov
inc
mov
test
inc
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
arpl
gs
add
imul
je
outs
outs
add
adc
adc
add
(bad)
inc
add
add
add
inc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
dec
add
add
adc
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
gs
add
add
dec
add
add
dec
add
add
add
ror
xlat
jg
add
scas
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
test
inc
add
inc
add
xchg
inc
add
xchg
inc
add
stos
inc
add
inc
add
inc
add
cmps
inc
add
xchg
inc
add
add
sbb
dec
add
xchg
inc
add
add
sbb
inc
dec
cmp
push
gs
gs
jae
dec
popa
outs
popa
addr16
gs
outs
arpl
add
ins
add
arpl
ins
add
add
add
add
add
add
add
add
inc
add
mov
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
mov
add
mov
inc
add
inc
add
inc
add
lods
inc
add
inc
add
scas
inc
add
cmps
inc
add
add
add
test
add
test
inc
add
lahf
inc
add
inc
add
ror
dec
stos
inc
add
scas
inc
add
inc
add
add
retf
add
add
lods
ror
aas
test
inc
add
inc
add
inc
add
retf
movs
retf
movs
retf
jp
inc
add
test
inc
add
retf
mov
cdq
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
cdq
dec
add
add
add
call
add
add
loopne
dec
add
add
add
pushf
dec
add
add
add
add
add
(bad)
(bad)
push
int
adc
adc
fs
add
dec
add
std
(bad)
inc
add
cmp
(bad)
call
add
add
std
(bad)
inc
add
add
std
(bad)
inc
add
add
std
(bad)
dec
add
add
add
add
std
(bad)
inc
add
ss
(bad)
inc
and
xchg
and
stos
add
push
mov
retf
inc
add
adc
xor
sbb
push
add
jae
sbb
into
adc
inc
ja
push
cmp
sbb
into
adc
inc
ja
mov
jae
sbb
into
adc
inc
ja
add
sub
adc
inc
ja
cmp
dec
add
add
fld
pop
leave
inc
add
test
inc
add
add
leave
inc
add
aam
add
inc
add
inc
add
inc
add
retf
movs
retf
(bad)
in
add
retf
mov
aad
add
retf
pushf
in
add
retf
mov
inc
add
inc
add
aad
add
retf
sbb
inc
add
inc
add
(bad)
dec
add
retf
inc
add
xchg
inc
add
xchg
inc
add
test
inc
add
inc
add
jmp
inc
add
jmp
call
add
xchg
inc
add
lock
add
icebp
inc
add
icebp
inc
add
repnz
add
repz
add
int
add
xchg
inc
add
xchg
inc
add
repz
add
hlt
inc
add
inc
add
sub
adc
inc
ja
rol
add
add
inc
or
add
add
add
rol
add
add
inc
xor
jae
sbb
into
adc
inc
ja
add
add
or
dec
add
fld
test
fld
movs
retf
and
inc
add
leave
inc
add
fld
test
inc
add
inc
add
retf
in
fiadd
push
fild
xor
inc
add
fild
repnz
push
loopne
add
inc
add
in
add
add
inc
add
loope
add
inc
add
inc
add
fild
jge
inc
add
add
add
dec
add
jg
add
sbb
loopne
dec
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
inc
add
inc
add
xchg
inc
add
xchg
inc
add
rol
loopne
inc
add
fiadd
cmp
inc
add
les
or
inc
add
lds
lds
add
add
mov
mov
mov
ret
add
enter
enter
fiadd
clc
fiadd
xor
inc
add
inc
add
enter
fild
fild
push
cmovae
inc
fadd
popa
aad
add
rol
sbb
inc
add
mov
and
inc
dec
gs
inc
imul
pop
dec
add
add
add
inc
add
add
add
add
add
sub
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
sub
cmp
inc
add
sub
fisubr
inc
add
xor
fld
inc
add
sub
loopne
inc
add
sub
(bad)
sub
cli
sub
jg
inc
add
sub
inc
push
outs
add
add
add
add
(bad)
(bad)
(bad)
inc
data16
push
add
add
add
add
jne
add
add
inc
add
js
inc
add
outs
add
add
ins
add
popa
add
cmp
xor
jae
jne
add
inc
add
js
dec
add
add
jb
popa
add
add
add
add
jne
add
inc
add
js
inc
add
popa
add
add
jb
push
add
add
cmp
xor
jae
jne
add
add
inc
add
js
dec
add
add
outs
add
je
jb
outs
add
add
add
jne
add
inc
add
js
dec
add
add
outs
add
add
outs
add
xor
xor
xor
add
add
fs
add
pop
dec
add
pop
dec
add
add
inc
add
dec
inc
add
add
add
add
add
je
outs
outs
imul
inc
add
je
outs
outs
imul
push
add
jne
inc
imul
gs
arpl
push
add
jne
inc
imul
outs
outs
imul
outs
imul
push
outs
imul
dec
outs
outs
imul
push
arpl
outs
outs
imul
push
imul
add
je
jns
je
ins
dec
gs
imul
push
add
inc
add
xor
xor
add
add
inc
dec
push
push
dec
inc
pop
add
arpl
arpl
push
add
jb
add
je
add
popa
add
arpl
inc
add
imul
inc
add
jne
outs
add
add
arpl
arpl
inc
add
imul
add
add
popa
add
arpl
dec
add
ins
add
add
popa
add
arpl
push
add
ins
add
add
add
add
arpl
arpl
inc
add
jae
arpl
jb
imul
imul
add
add
popa
add
arpl
push
add
ins
add
add
popa
add
arpl
push
add
add
add
add
add
arpl
arpl
dec
add
ins
add
add
popa
add
arpl
dec
add
ins
add
push
add
jo
imul
add
popa
add
arpl
dec
add
jns
bound
outs
add
jb
add
push
add
add
je
add
popa
add
arpl
inc
add
arpl
jne
jae
add
add
popa
add
arpl
push
add
ins
add
arpl
je
imul
add
add
popa
add
arpl
inc
add
data16
jne
ins
add
add
je
imul
add
add
popa
add
arpl
push
add
ins
add
arpl
je
add
popa
add
arpl
dec
add
arpl
popa
add
add
outs
add
add
arpl
arpl
dec
add
jbe
imul
je
add
add
arpl
arpl
dec
add
je
push
add
jae
je
add
add
popa
add
arpl
inc
add
inc
add
data16
jne
ins
add
add
je
imul
add
add
(bad)
(bad)
xor
inc
add
add
inc
inc
add
inc
inc
add
aaa
inc
add
aaa
inc
add
inc
inc
add
inc
add
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
add
dec
add
dec
inc
add
dec
inc
add
inc
add
cmp
push
fimul
xor
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
jbe
add
jg
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
inc
add
cmp
pop
cmp
and
inc
add
inc
add
aaa
inc
add
xchg
cmp
adc
cmp
jp
mov
inc
nop
xor
and
add
outs
imul
inc
outs
outs
je
outs
ins
jae
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
add
ins
ins
dec
gs
jo
add
add
arpl
outs
arpl
add
dec
add
inc
add
addr16
add
addr16
add
retf
sub
dec
add
addr16
add
addr16
add
addr16
add
pusha
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
popa
inc
add
pusha
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
inc
add
pusha
inc
add
pusha
inc
add
inc
add
dec
add
add
add
add
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
adc
add
add
add
rol
add
add
inc
and
xor
xor
aaa
add
add
add
add
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
gs
popa
data16
imul
add
pop
add
popa
dec
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
push
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
popa
inc
add
add
add
add
pop
inc
add
add
add
add
add
push
inc
add
add
add
add
add
bound
and
add
sbb
add
lea
add
add
sub
add
ins
push
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
add
lods
fs
add
add
pop
add
add
push
inc
add
add
add
je
add
add
add
add
add
add
push
add
add
inc
inc
add
add
push
add
add
fs
add
rol
sbb
add
pop
inc
add
add
add
add
add
push
inc
add
outs
add
ins
add
je
jb
ins
add
inc
add
popa
add
dec
add
jae
je
dec
add
add
add
add
ins
fs
popa
jb
gs
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
fs
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
gs
add
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
clts
add
add
fs
add
add
add
inc
add
add
add
add
add
push
fimul
add
add
add
add
data16
add
jb
add
add
add
outs
add
je
ja
popa
add
add
add
popa
jo
je
push
outs
push
je
add
add
adc
add
add
(bad)
inc
add
add
add
add
dec
add
lea
repnz
loopne
dec
add
inc
add
je
dec
imul
push
dec
add
add
(bad)
inc
add
add
add
add
fimul
lock
inc
add
sbb
jns
gs
jb
popa
jns
add
fisttp
das
xchg
inc
add
xchg
inc
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
retf
inc
add
leave
inc
add
inc
add
inc
add
retf
inc
dec
ins
gs
imul
inc
js
gs
imul
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
(bad)
fwait
inc
add
inc
add
dec
add
xchg
inc
add
pushf
inc
add
sbb
inc
add
inc
add
sbb
shl
add
jg
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
cmp
add
das
or
inc
add
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
dec
add
dec
add
loopne
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
loopne
add
dec
add
dec
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shl
dec
add
loopne
add
loopne
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
loope
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
loop
add
dec
add
dec
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
in
add
in
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outs
in
add
add
add
add
add
dec
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
dec
add
in
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
dec
add
dec
add
dec
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
(bad)
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
dec
add
out
add
out
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
