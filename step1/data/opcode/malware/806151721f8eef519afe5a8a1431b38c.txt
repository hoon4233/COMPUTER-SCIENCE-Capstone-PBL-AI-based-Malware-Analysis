mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
xor
mov
lea
mov
push
mov
mov
push
mov
mov
push
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
mov
call
test
je
push
call
add
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
lea
mov
push
lea
call
add
push
lea
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
push
mov
push
lea
push
mov
mov
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
call
mov
lea
mov
call
mov
mov
lea
mov
mov
call
xor
mov
lea
mov
mov
call
or
mov
mov
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
call
mov
mov
xor
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
mov
mov
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
lea
call
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
lea
push
mov
call
mov
push
mov
call
mov
mov
add
or
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
mov
call
mov
push
call
mov
call
test
je
push
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
sub
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
pop
test
jmp
push
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
cmp
je
lea
call
test
je
lea
call
test
jne
lea
call
test
je
lea
call
test
jne
lea
call
test
jne
lea
push
lea
call
mov
mov
mov
call
test
je
mov
jmp
xor
mov
test
je
and
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
pop
je
call
mov
mov
mov
push
mov
call
jmp
call
mov
mov
mov
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
mov
push
mov
mov
mov
lea
mov
add
test
jne
sub
push
push
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
push
mov
cmp
je
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
cmp
mov
jne
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
push
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
lea
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
mov
call
mov
mov
mov
mov
push
push
push
lea
call
lea
push
mov
call
mov
push
push
lea
call
mov
push
push
lea
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
call
mov
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
retf
ss
stos
xor
nop
mov
inc
nop
retf
jl
sbb
xchg
or
cmp
out
cmp
scas
mov
test
or
push
mov
add
stc
(bad)
xchg
sti
jo
push
retf
and
or
out
rcr
sbb
cmp
dec
shl
pop
inc
iret
gs
push
inc
inc
rol
add
push
jne
push
shr
ret
mov
or
xlat
push
dec
inc
call
push
inc
call
rcl
in
mov
inc
ret
and
dec
sbb
popa
mov
adc
xor
fwait
cmp
stos
pop
in
mov
inc
and
and
sub
rcl
dec
out
push
sbb
(bad)
xchg
pop
out
xchg
fld
sub
and
and
sbb
mov
fwait
inc
dec
movs
jecxz
iret
mov
mov
sbb
mov
jecxz
dec
dec
(bad)
jg
(bad)
push
outs
std
jae
test
jno
and
sar
jecxz
push
sub
inc
push
mov
jecxz
div
mov
sub
cli
add
test
call
ins
mov
(bad)
mov
enter
out
fnsave
jge
out
or
push
push
and
mov
push
mov
sub
push
mov
loope
ins
push
add
sub
pop
jo
or
push
sbb
jecxz
ret
jp
stos
or
push
add
push
imul
jecxz
cmp
int3
dec
xor
repz
cmp
mov
mov
test
jbe
aam
daa
leave
cmp
ret
mov
loopne
mov
jge
and
sbb
imul
pop
aaa
mov
retf
(bad)
loopne
add
xchg
jae
fs
ins
push
fsub
pop
adc
(bad)
mov
les
ins
(bad)
push
inc
sub
xchg
push
add
mov
cmc
pusha
lds
cmps
mov
xchg
stos
fistp
or
or
pop
(bad)
cmps
das
addr16
and
pop
cs
cmps
pop
call
mov
out
cdq
jg
call
(bad)
gs
(bad)
hlt
test
sbb
cs
dec
icebp
call
iret
sbb
cmc
xor
add
adc
mov
mov
push
mov
sbb
imul
or
pop
add
daa
cmp
in
add
jg
gs
xlat
(bad)
dec
push
(bad)
ds
mov
retf
push
jmp
cmps
sub
ret
ret
in
xor
jno
xchg
mov
mul
sub
or
pop
cmp
(bad)
mov
shl
pop
push
scas
xchg
cwde
inc
lahf
xchg
cdq
loope
pop
pop
movs
or
imul
in
or
mov
je
loop
pushf
lock
mov
inc
ret
leave
ins
repz
fxch
in
and
addr16
inc
sti
retf
jmp
push
and
pop
arpl
adc
inc
push
inc
mov
mov
xchg
test
cmps
mov
inc
call
add
sub
loope
lock
mov
xor
test
fwait
aam
jne
xchg
int3
add
mov
test
xchg
jne
popf
sbb
inc
adc
cmp
jnp
(bad)
mov
outs
cmp
call
inc
push
jge
idiv
push
and
mov
aad
das
sub
mov
fldcw
push
push
add
push
adc
in
stos
jp
(bad)
aas
dec
mov
into
lds
jmp
push
push
out
pop
push
test
neg
push
mov
cld
xchg
or
adc
add
mov
push
cmps
mov
retf
cmp
fidiv
sbb
mov
out
pop
and
mov
hlt
out
dec
imul
cli
in
jnp
arpl
scas
pop
call
inc
fimul
cmp
jmp
jle
push
push
mov
ret
sub
dec
gs
adc
push
mov
pusha
nop
or
call
daa
not
jae
scas
inc
gs
jmp
sti
inc
ja
mov
mov
data16
aad
push
jne
sub
iret
or
jne
push
fiadd
leave
pop
test
mov
add
xlat
cwde
(bad)
xor
sub
cwde
mov
in
js
movs
xor
add
repnz
sub
stos
push
cwde
mov
pop
xchg
adc
xchg
jbe
inc
mov
movs
ds
pop
sbb
xchg
(bad)
xor
jmp
stc
call
lds
je
jg
push
call
fist
xor
cld
pop
jmp
xchg
or
push
fs
push
sbb
test
call
jl
adc
inc
pop
mov
scas
mov
(bad)
sbb
lds
fadd
in
fidiv
(bad)
xor
sar
pushf
ret
cmc
xor
cmps
movs
in
add
pop
jge
mov
and
add
or
or
dec
fwait
(bad)
fadd
mov
push
mov
addr16
cli
add
mov
sub
rep
pop
les
test
xchg
push
inc
mov
popf
cmp
imul
mov
push
(bad)
or
into
retf
pop
pop
scas
jns
cmove
ss
xor
sub
xlat
out
imul
pop
scas
jmp
popa
bnd
lahf
nop
mov
addr16
fstp
imul
or
rcr
mov
xchg
adc
cmp
cdq
pop
mov
mov
cs
test
jae
mov
into
ins
in
dec
(bad)
or
jne
dec
sbb
ins
mov
imul
xchg
mov
xor
jmp
and
mov
out
jnp
cdq
ja
and
mov
loopne
ret
imul
adc
sub
jne
sti
outs
lock
dec
jecxz
mov
sbb
sub
or
add
sbb
xchg
aaa
cwde
jmp
rcr
push
nop
call
rcl
mul
dec
mov
jae
and
pop
cs
xchg
loop
push
push
dec
and
sbb
pop
pop
sub
les
mov
xor
inc
xchg
or
xlat
mov
lds
cmp
mov
dec
std
push
stos
imul
inc
xor
pusha
bnd
cwde
and
cwde
jmp
cli
xchg
jns
retf
cdq
popa
fnsave
ret
std
cmp
mov
push
fwait
mov
mov
push
jg
mov
sahf
movs
inc
cdq
mov
pushf
fisub
mov
push
push
adc
push
jbe
imul
or
repnz
cmp
fsubr
lahf
xchg
adc
and
xor
or
fsub
cmp
es
jmp
adc
idiv
leave
jle
inc
lock
cmp
dec
mov
mov
adc
lock
jne
(bad)
mov
jne
(bad)
fcmove
int
icebp
xchg
xchg
and
mov
sar
pop
jae
cli
les
xchg
lea
call
ret
mov
mov
xor
cwde
adc
xor
push
mov
mov
lods
scas
(bad)
popf
cmps
aad
jae
outs
xchg
imul
mov
adc
jle
xor
scas
idiv
lds
in
and
(bad)
fadd
hlt
cdq
mov
jmp
out
push
rep
mov
xlat
adc
bound
neg
push
or
(bad)
pop
data16
mov
gs
pop
pop
xlat
ins
mov
lahf
test
sub
jnp
and
mov
pop
pop
mov
push
cmp
xor
xchg
and
and
or
mov
retf
retf
or
inc
jg
xor
xor
je
lahf
sub
mov
call
mov
and
push
or
adc
(bad)
xchg
or
in
push
jecxz
call
rcr
hlt
out
lea
cmp
in
aas
xor
mov
imul
les
mov
loope
push
add
call
fistp
data16
xor
dec
leave
movs
sti
inc
dec
(bad)
imul
retf
in
mov
jmp
leave
scas
stc
int3
or
push
arpl
cmp
aas
test
aam
shl
push
test
or
shr
jecxz
outs
inc
lods
xchg
aas
jp
loope
pop
pop
sti
call
mov
inc
arpl
shl
mov
hlt
pop
out
cmovb
enter
leave
xchg
cs
mov
aas
sbb
aad
adc
cld
jp
test
out
mov
test
mov
retf
mov
je
mov
cmp
and
fadd
mov
mov
jg
mov
push
pop
add
ins
inc
mov
jae
fstp
(bad)
mov
test
shl
mov
fisub
xchg
outs
pop
inc
push
xor
and
movs
fisubr
aas
and
adc
jns
add
repz
mov
jg
jge
sub
mov
je
sbb
leave
push
xchg
push
sub
in
loop
pusha
pop
add
push
in
mov
test
stos
rcr
js
mov
xor
inc
lods
push
das
aad
push
rcr
xchg
aaa
iret
mov
fcmovnbe
mov
jae
dec
xchg
xor
mov
jns
mov
in
les
(bad)
aad
ja
mov
fsub
pop
arpl
and
daa
addr16
aam
cs
mov
cli
es
inc
and
mov
push
dec
cmp
out
aaa
rol
mov
cdq
add
mov
dec
repz
stc
stc
mov
ss
iret
adc
ret
data16
scas
out
repnz
inc
inc
call
repz
jo
add
sub
neg
push
clc
movs
in
and
addr16
std
leave
sbb
enter
out
fisubr
into
adc
retf
sbb
sub
cmp
add
inc
dec
loop
pop
cmp
xchg
daa
jmp
sbb
sar
push
push
dec
sub
add
mov
loop
jg
and
push
lock
sbb
sbb
cmps
inc
xor
in
xor
cmp
stos
inc
cld
or
(bad)
add
adc
in
and
inc
call
stc
push
pop
sbb
rcl
inc
dec
bound
lods
add
dec
mov
mov
push
fist
pop
xlat
or
sbb
sar
les
inc
retf
push
inc
cmp
daa
sbb
xchg
or
mov
fisttp
in
rcr
fimul
mov
mov
jmp
sub
dec
out
or
adc
and
retf
or
cmp
jmp
push
cmp
sub
pop
fs
sbb
ret
(bad)
mov
push
dec
dec
add
or
out
inc
sbb
add
mov
out
rol
jo
xchg
jb
dec
cwde
hlt
stos
dec
or
out
retf
pop
pop
outs
mov
and
dec
retf
push
ss
ins
pop
(bad)
je
sub
imul
test
push
or
dec
frstor
or
mov
cmc
push
xchg
int3
inc
mov
fcmovb
fs
loope
xor
push
shr
jmp
cwde
push
xchg
dec
push
sbb
or
sbb
xchg
fdiv
out
adc
mov
jbe
or
jle
inc
jns
xchg
push
mov
mov
mov
inc
or
dec
data16
fs
adc
sbb
sbb
pop
pop
(bad)
pusha
fidiv
pusha
out
push
xchg
xchg
adc
scas
fimul
xchg
xchg
add
shl
ret
jnp
sbb
adc
pop
inc
add
jae
ja
jp
sub
call
push
dec
push
out
mov
cwde
mov
pop
xchg
sub
inc
jmp
or
loopne
in
pop
not
cmp
jp
add
js
(bad)
xchg
or
mov
std
dec
xchg
dec
xchg
(bad)
cmp
mov
neg
or
lea
push
div
sar
(bad)
mov
nop
into
retf
cli
sahf
out
stos
mov
ss
iret
mov
clc
xchg
fidivr
xchg
fadd
mov
rol
push
popf
imul
loop
push
(bad)
mov
mov
mov
adc
movs
cmc
xor
sbb
ret
ficomp
aam
fwait
xchg
inc
mov
(bad)
mov
dec
ins
repnz
lods
cpuid
xor
movs
cli
lock
add
sbb
pop
dec
jnp
fild
push
aaa
fdivr
gs
jb
xchg
in
xchg
sbb
jmp
xchg
gs
and
push
inc
or
arpl
movs
jmp
mov
xchg
mov
(bad)
les
bound
loop
xor
mov
push
cmps
sbb
pop
(bad)
push
dec
mov
mov
and
cmp
jge
and
lds
stos
add
dec
and
mov
xchg
stos
inc
fs
jle
ins
ds
pop
and
xor
test
pop
fwait
jle
push
and
bound
rcr
cmp
jecxz
repz
inc
fcmovb
or
int
fs
lods
and
mov
mov
inc
ds
xchg
jmp
scas
nop
adc
push
jg
push
pop
mov
jle
xchg
popf
sbb
movs
or
cli
mov
retf
cwde
mov
fwait
ret
js
mov
pop
jg
out
ja
aaa
and
adc
(bad)
idiv
or
mov
retf
pop
pop
dec
dec
cmp
mov
xchg
(bad)
mov
push
in
out
jl
push
xor
xor
cli
pop
adc
cmps
fcmovnbe
(bad)
push
jbe
(bad)
cmps
out
rcr
dec
mov
arpl
or
scas
ss
ins
cmp
mov
loopne
adc
or
rcr
pop
gs
sbb
jmp
cmp
bound
pushf
add
and
(bad)
push
push
xor
inc
cwde
and
cs
imul
mov
mov
cmp
sbb
test
cli
repz
scas
cmps
test
jae
inc
dec
pop
inc
cmps
cmp
push
or
ss
add
gs
cmp
push
xchg
lea
ret
jbe
data16
push
adc
fiadd
and
mov
ds
int
push
pop
dec
stos
repnz
out
lock
test
jp
dec
jecxz
fcomp
push
(bad)
xor
sti
cld
mov
aam
movs
std
daa
in
inc
inc
outs
pop
sub
adc
enter
in
lods
ret
mov
out
iret
xor
add
in
dec
mov
lea
push
adc
fadd
push
lds
aam
cdq
pop
and
arpl
mov
and
jmp
mov
(bad)
adc
push
outs
fild
mov
dec
xor
sub
sub
pop
call
dec
and
std
push
push
je
xor
pop
fidiv
xor
ds
adc
mov
(bad)
jmp
jbe
sub
(bad)
fld
mov
ss
(bad)
pop
push
shl
push
aas
cmps
int
adc
adc
push
stos
jmp
adc
add
es
into
retf
loopne
mov
jmp
mov
or
cwde
xor
div
(bad)
outs
jle
inc
adc
jmp
sub
push
dec
push
push
in
and
cmps
and
push
mov
lock
pop
adc
adc
xchg
push
or
cmp
nop
lods
pop
sbb
xor
and
and
loopne
ss
ss
xor
xchg
push
sti
aad
pop
cmp
ins
out
xchg
or
call
inc
mov
dec
xchg
push
cmp
aas
xchg
dec
scas
emms
das
and
sub
jl
cmps
push
dec
dec
cmp
add
adc
retf
xor
loope
jg
pop
(bad)
out
inc
stos
xor
(bad)
push
retf
into
in
sub
pop
add
jbe
repz
pop
out
aad
inc
retf
movs
push
fcomp
mov
add
add
fsubr
dec
pushf
mov
mov
fadd
inc
push
or
call
rol
adc
and
mov
adc
das
push
sbb
push
xchg
jnp
(bad)
ret
fidivr
xchg
aam
retf
outs
imul
scas
daa
push
leave
jecxz
adc
mov
ss
mov
fiadd
mov
rcl
inc
pop
inc
and
sbb
jecxz
ds
(bad)
sbb
sbb
outs
mov
xor
push
push
je
add
inc
into
imul
add
push
cs
outs
inc
scas
jae
push
outs
cwde
push
loopne
jl
pop
addr16
mov
push
retf
jge
push
and
cmc
shl
imul
or
push
loopne
cmps
xchg
jmp
pop
sub
jg
jbe
xchg
(bad)
dec
pop
pop
push
lds
cli
dec
in
dec
loop
popf
jg
arpl
jae
fadd
pushf
push
call
es
outs
jbe
js
jne
das
mov
jmp
push
call
push
cmps
dec
and
mov
push
xor
xchg
cmps
mov
stos
(bad)
fwait
into
retf
cmp
jle
iret
call
cwde
mov
jp
ins
in
fxtract
(bad)
test
xor
jle
aaa
jae
xchg
push
in
shl
mov
popf
nop
cmp
mov
xacquire
fst
sbb
fwait
or
xchg
mov
xor
mov
sbb
sti
mov
(bad)
in
fwait
int3
dec
jbe
mov
movs
cdq
sbb
pop
xchg
addr16
push
sub
pop
xchg
rol
jmp
push
pop
mov
ficom
inc
retf
icebp
xor
imul
jnp
cmp
jmp
xchg
(bad)
jnp
jne
(bad)
aam
scas
(bad)
dec
jae
arpl
aam
cmp
or
out
(bad)
add
or
test
loop
mov
out
inc
push
xor
data16
and
jbe
or
inc
adc
xor
nop
xchg
jae
sar
movs
or
jle
test
push
mov
xor
adc
dec
mov
fiadd
push
sbb
adc
push
sbb
cmp
dec
daa
icebp
ror
pop
jns
cli
scas
mov
stos
in
sbb
mov
jl
cli
sbb
xchg
cli
mov
ret
(bad)
fist
xchg
and
mul
enter
sbb
xor
outs
add
lock
pop
out
pop
mov
mov
sar
pop
cmps
popf
lds
mov
arpl
rol
pop
xchg
ror
inc
sti
push
ja
cld
add
arpl
and
retf
(bad)
in
inc
lahf
add
xor
mov
icebp
add
js
adc
sahf
outs
sbb
imul
inc
ins
xor
lea
mov
addr16
lock
mov
mov
mov
loope
ficom
pop
pop
cmps
repz
in
lahf
test
repnz
sub
mov
mov
push
cs
fwait
test
test
loop
sub
(bad)
mov
xchg
pop
mov
mov
ret
xor
loopne
aad
pop
cmp
xchg
or
adc
test
out
sahf
int
rcr
popf
call
(bad)
fmul
lea
xchg
test
jp
push
jmp
cli
jmp
jecxz
mov
and
retf
jle
dec
cdq
in
sub
mov
xor
cdq
sbb
push
test
dec
push
ds
call
push
(bad)
cmps
and
int
xchg
ficom
scas
mov
movs
mov
xlat
sub
pop
test
bound
aas
dec
out
sub
(bad)
cli
cmps
push
mul
sbb
cdq
mov
inc
dec
not
add
rcl
aam
hlt
(bad)
ds
div
sbb
mov
dec
xchg
je
outs
and
xor
xchg
(bad)
in
push
(bad)
or
mov
push
mov
dec
pop
and
pop
fst
retf
call
mov
(bad)
cmp
jge
dec
jge
jb
fisttp
jae
sub
pop
ins
inc
mov
pop
lea
stos
inc
pop
test
fmul
push
sti
pop
cld
inc
pusha
mov
in
ds
test
xchg
adc
inc
fcmovnbe
add
adc
rcr
sub
test
mov
mul
pop
sbb
repz
mov
jnp
popa
int
cli
out
cmp
push
aaa
jo
(bad)
paddw
lahf
div
ss
in
cmp
mov
mov
inc
sbb
pop
lahf
dec
outs
sbb
imul
dec
sub
scas
mov
mov
or
repnz
pushf
mov
dec
mov
xchg
loopne
nop
dec
xor
jmp
jle
add
add
hlt
mov
cmp
mov
ins
mov
dec
idiv
repz
enter
cld
sti
sub
scas
in
and
je
dec
inc
inc
inc
or
and
jmp
mov
cdq
out
sahf
mov
jno
mov
retf
inc
cmps
add
mov
inc
in
mov
push
cmp
xchg
push
dec
mov
sub
jmp
call
pop
dec
pop
out
cmp
pop
xchg
sub
cwde
iret
pusha
xchg
mov
mov
cmp
jmp
mul
sub
test
mov
cwde
dec
stos
in
movs
sub
mov
sub
cdq
adc
cmp
pop
fld
repnz
gs
xchg
leave
(bad)
lods
test
std
sbb
sti
xchg
stos
(bad)
sbb
and
add
call
shr
sub
outs
arpl
push
cwde
xchg
into
jnp
adc
or
and
pop
fwait
add
mov
xchg
xchg
inc
adc
pop
aaa
xlat
and
ss
mov
xlat
mov
mov
sbb
ja
mov
xchg
push
pop
cmp
pop
imul
clc
xchg
sbb
or
das
adc
add
not
lahf
fimul
and
xlat
cmp
xchg
cs
clc
dec
xor
adc
push
out
gs
adc
and
(bad)
clc
hlt
dec
out
test
int3
test
stos
sbb
aaa
inc
cwde
pop
jae
or
inc
sub
jg
mov
add
rol
pop
cld
jle
adc
jmp
inc
jle
mov
cmp
nop
ret
data16
add
dec
call
mov
daa
inc
xor
cli
out
mov
or
dec
pop
gs
mov
imul
pop
(bad)
push
mov
add
sbb
sub
aaa
stc
mov
mov
inc
push
retf
shr
or
xor
mov
push
aam
repnz
jns
mov
cdq
(bad)
cli
pop
in
xchg
inc
add
repnz
inc
xchg
push
adc
inc
mov
and
pop
push
out
scas
ficom
hlt
mov
data16
mov
cmp
xchg
aad
add
mov
and
mov
pop
call
fisub
cmp
idiv
jne
xor
clc
xlat
mov
jmp
mov
dec
jnp
das
dec
dec
add
xchg
retf
into
xor
mov
push
or
scas
mov
jo
adc
and
add
mov
push
jmp
push
es
inc
pop
(bad)
dec
push
dec
push
cdq
mov
lods
mov
or
ret
jp
sbb
or
or
xchg
xchg
push
scas
sti
jbe
push
cwde
fbld
into
dec
pop
jne
ret
xor
cmp
sbb
aaa
pop
test
fwait
add
xor
inc
add
jb
xchg
es
add
ds
xorps
jg
les
stos
hlt
inc
push
clc
data16
movs
stos
sbb
push
and
xchg
movs
test
mov
gs
xor
jae
xchg
sbb
xchg
push
je
test
mov
es
jns
inc
adc
mov
leave
push
mov
stc
pop
movs
push
retf
test
mov
xor
nop
xor
pop
mov
mov
ins
jns
mov
pop
stos
call
ins
inc
xchg
scas
fwait
out
jmp
mov
add
sbb
inc
mov
xchg
push
(bad)
push
sbb
mov
adc
sar
hlt
inc
jo
out
retf
scas
popf
sub
mov
imul
cmp
adc
and
push
adc
push
ja
retf
pusha
in
cwde
out
stos
faddp
into
pop
out
stos
dec
jbe
stos
out
imul
or
loopne
sti
adc
sub
stc
pop
dec
neg
sbb
dec
(bad)
sbb
arpl
sar
bound
imul
cmps
mov
lds
push
push
aaa
xchg
sbb
leave
int
mov
mov
cwde
lahf
cmps
push
and
mov
push
(bad)
rol
adc
arpl
int3
ret
fild
xchg
dec
push
push
ficom
push
xor
add
in
jnp
mov
ja
mov
cmps
push
stc
push
lods
jecxz
push
dec
push
push
inc
dec
(bad)
jle
xchg
sub
movs
sub
and
stos
popf
xor
(bad)
jecxz
addr16
pop
push
ja
dec
mov
xchg
outs
jle
cmp
mov
and
sub
lds
and
sbb
jmp
ss
repnz
push
xor
out
and
sub
mov
cmovg
(bad)
aam
retf
(bad)
jmp
mov
lds
fucom
pop
std
or
jle
fistp
in
shr
xchg
ja
mov
(bad)
jmp
inc
es
jne
xor
daa
ret
out
adc
cmp
int3
dec
push
jg
and
test
fst
aad
pop
push
or
pop
or
xchg
inc
(bad)
and
jl
xor
in
dec
jp
in
out
jmp
fdiv
or
dec
inc
jp
mov
and
xor
jle
xchg
lahf
inc
xor
mov
sbb
es
fnstenv
dec
retf
adc
mov
sbb
fucomi
xor
pop
mov
pusha
je
or
into
pop
adc
dec
xchg
ins
out
clc
out
and
and
lock
and
or
and
ja
or
mov
movs
sub
cs
ret
cmp
push
out
rcr
dec
aas
fucomp
nop
mov
ficom
inc
push
pop
ror
dec
cmp
loope
sbb
push
xchg
(bad)
in
daa
jg
retf
es
dec
xchg
inc
push
(bad)
ja
aas
dec
ss
and
pop
(bad)
xchg
push
arpl
(bad)
cli
sbb
iret
loopne
dec
xlat
add
retf
cmc
or
mov
sub
in
mov
icebp
cld
or
jmp
int
xchg
xchg
pushf
inc
sti
popf
adc
mov
mov
cwde
repz
mov
out
xchg
jnp
xchg
pushf
mov
cmp
cmps
xor
mov
mov
sbb
sub
dec
sbb
idiv
or
addr16
aam
xchg
jno
jnp
jle
cwde
movs
aaa
out
dec
sub
sbb
add
aas
cmps
sub
pop
jns
addr16
dec
xchg
fisttp
aam
aam
call
jb
pushf
sbb
imul
pop
not
xchg
sbb
pop
dec
push
fiadd
xchg
je
mov
mov
pop
inc
xchg
inc
sbb
std
imul
jne
je
int
fbstp
mov
jbe
mov
daa
mov
mov
push
dec
bound
or
loopne
mov
outs
out
movs
cwde
movs
scas
inc
pop
jbe
xchg
sub
cmp
fwait
stc
aaa
jae
repnz
sub
add
test
push
jb
lahf
dec
lock
hlt
int
sbb
ins
mov
(bad)
and
bound
cwde
pop
pop
pop
fsub
pop
clc
inc
jmp
mov
stos
(bad)
push
mov
aas
cmp
jo
add
mov
(bad)
imul
test
enter
test
and
outs
jbe
push
shr
je
scas
(bad)
fs
sbb
imul
rcr
xchg
fwait
xor
stos
dec
cmp
bnd
mov
xor
pop
add
es
pushf
sbb
mov
shl
hlt
jmp
push
pusha
fwait
test
jbe
movs
sub
mov
outs
cli
bnd
mov
cmp
mov
(bad)
call
test
pop
sbb
and
ja
add
arpl
addr16
mov
out
(bad)
xchg
dec
in
adc
(bad)
je
lods
xor
jle
cdq
sahf
std
add
xchg
mov
mov
fisubr
xchg
add
cmps
pop
xlat
fwait
(bad)
popf
and
mul
out
loop
mov
pushf
(bad)
adc
iret
mov
call
es
adc
inc
enter
pop
jmp
call
int3
push
div
dec
test
sbb
jno
pusha
shr
cdq
jnp
add
xor
xor
scas
in
jmp
sbb
or
xchg
pop
repz
mul
inc
cmps
push
xor
pop
out
inc
sbb
arpl
and
inc
arpl
aam
loope
pop
xor
ror
stos
xchg
cmp
imul
jbe
add
cmp
push
iret
enter
xlat
out
inc
jmp
or
jmp
scas
enter
ja
jns
enter
daa
jo
inc
add
icebp
push
ror
dec
inc
out
retf
iret
push
std
mov
xor
ror
jle
je
cmps
cmp
shl
adc
sub
lahf
mov
bound
sbb
sbb
jecxz
xchg
jg
ja
push
add
imul
push
mov
ret
push
pop
inc
xor
pop
xchg
inc
lahf
es
sbb
lods
jge
dec
inc
int
jae
in
lahf
push
cmp
retf
push
pop
mov
repnz
sbb
scas
aad
pop
mov
ret
dec
clc
jecxz
sub
jge
pop
push
imul
xchg
(bad)
imul
rcl
stos
lea
pusha
test
mov
cmp
add
add
nop
dec
push
out
xchg
aaa
mov
out
pop
rcl
add
nop
add
outs
and
cmc
push
cmc
scas
ds
mov
scas
cmc
add
cmps
dec
cli
sbb
leave
sbb
out
aam
pop
push
or
cmp
nop
push
js
push
sbb
add
sbb
cmps
mov
fs
inc
gs
fsub
not
pop
xchg
js
sbb
in
cmovne
es
mov
cld
xlat
imul
jecxz
aam
pusha
add
stos
jne
mov
mov
in
and
sahf
lds
stos
and
fcom
dec
mov
jl
jp
imul
sub
out
test
(bad)
scas
daa
add
jmp
push
outs
dec
or
pop
arpl
bound
fst
cmp
or
mov
add
leave
call
(bad)
sub
push
sub
inc
mov
cmps
cli
push
pop
pop
dec
bound
jmp
pop
int3
aad
mov
repz
dec
es
pop
mov
std
bound
inc
or
es
pushf
pushf
(bad)
neg
cmp
call
data16
aad
push
sub
sbb
jge
cdq
mov
mov
jbe
idiv
or
sub
stc
iret
jae
jnp
stos
fild
out
sbb
push
cmp
retf
jbe
inc
aas
imul
rol
fnsave
lahf
loopne
push
aaa
push
pop
(bad)
sub
fcmovnb
sub
push
out
test
popa
loopne
inc
test
(bad)
in
out
and
cmp
jno
daa
inc
cmps
xchg
dec
lahf
retf
push
mov
pop
in
popf
jecxz
pop
ror
arpl
mov
mov
push
mov
stos
sar
or
ins
(bad)
sahf
leave
jae
retf
jl
retf
xlat
outs
inc
sar
jecxz
in
call
add
and
pop
mov
jae
in
sub
es
push
in
rol
nop
or
cmp
shl
cs
fadd
sub
mov
sahf
dec
pop
std
fs
mov
fcomp
pop
or
push
xchg
pop
push
cmp
fcom
push
xchg
push
scas
dec
sub
xchg
jmp
jg
xor
pop
imul
mov
xlat
(bad)
(bad)
jmp
adc
imul
cs
dec
push
fistp
js
clc
sbb
(bad)
cmc
sahf
addr16
in
and
sti
push
dec
inc
pop
cdq
int
les
or
cmp
pusha
fstp
push
mov
add
scas
(bad)
cmps
arpl
sbb
mov
pop
enter
repz
scas
(bad)
xor
xchg
or
inc
jl
sub
and
jae
cmps
fwait
in
idiv
mov
jbe
or
popa
xchg
pop
pop
push
xchg
das
out
cmp
into
and
lods
jno
mov
mov
xlat
and
pop
mov
mov
lock
or
add
inc
sub
push
iret
push
cld
shl
sbb
call
stc
shl
mul
push
leave
ja
ja
and
push
pop
cmp
jg
adc
xor
and
enter
and
imul
outs
ds
in
xchg
pop
ss
push
ss
cmp
lds
jb
add
add
out
jo
lock
xchg
cmp
inc
or
pop
rcr
gs
dec
fsubr
mov
clc
add
pop
xchg
cmp
(bad)
xlat
jbe
push
fcom
jae
xchg
retf
push
jmp
and
ffree
pop
outs
movs
test
push
test
cmp
out
xor
ins
dec
(bad)
iret
loop
iret
cld
test
sub
mov
inc
gs
push
stc
mov
pop
into
xor
nop
push
jp
mov
push
ja
jmp
jbe
lahf
xor
xor
cmc
inc
inc
out
xchg
cmp
mov
daa
sub
or
mov
movs
jmp
sub
fwait
cmps
pop
jecxz
(bad)
and
out
xor
scas
inc
rcr
ror
and
mov
idiv
mov
call
dec
out
inc
mov
fwait
dec
push
retf
bound
pop
fmul
popa
mov
add
push
out
xchg
fnstsw
mov
and
sub
rcr
not
pop
jge
into
cdq
mov
aam
sbb
iret
mov
stc
pushf
cwde
int
stos
and
xchg
in
or
shl
fidivr
shr
mov
mov
adc
fistp
xor
xchg
push
cld
adc
ror
fucomp
ret
lods
cmps
jno
pop
jg
adc
fisub
add
add
mov
push
jne
rol
xlat
cwde
mov
push
js
sbb
adc
sti
stc
mov
push
(bad)
clc
cmp
cdq
in
add
mov
xchg
inc
cmp
sub
add
add
mov
cmc
mov
lahf
sub
cmps
push
js
outs
jae
(bad)
push
add
cmp
iret
mov
cmp
(bad)
push
jge
sbb
lock
bound
add
sub
lock
test
fnstcw
inc
addr16
das
pop
stc
jnp
xchg
leave
sbb
pop
push
loope
adc
cmp
aas
sti
aam
xchg
jge
es
dec
adc
push
mov
(bad)
pop
add
aam
mov
fld
mov
scas
cmp
cmps
mov
sub
cs
mov
push
stos
xlat
jle
test
and
push
aaa
xor
call
xor
popa
jp
sti
cmp
jb
in
addps
call
aas
sbb
dec
imul
popa
add
jae
inc
ja
xchg
(bad)
mov
xchg
mov
push
pop
or
ret
js
jmp
sub
xchg
or
unpcklps
leave
in
repnz
sahf
or
out
xchg
(bad)
fdiv
je
mov
add
enter
es
(bad)
and
or
xchg
xor
fisttp
add
push
sahf
js
push
pop
(bad)
sub
sub
in
retf
mov
test
inc
inc
jo
adc
jne
ins
(bad)
mov
outs
fisttp
hlt
push
inc
mov
mov
push
dec
lea
or
xor
adc
jno
fadd
inc
jge
stos
mov
jp
cmp
mov
fsubp
mov
pop
xor
ret
cs
pop
and
lahf
outs
xor
jg
mov
out
or
ficomp
add
sahf
lods
(bad)
inc
xchg
outs
or
push
ficomp
xchg
bnd
cmc
sbb
dec
js
test
call
sub
mov
cwde
cmp
mov
cld
mov
jns
push
jg
sysexit
popa
pop
daa
js
or
cmp
or
mov
ins
xchg
call
and
xchg
sub
xchg
and
sub
xor
mov
clc
xor
or
inc
sbb
mov
test
sub
jg
aas
neg
imul
movs
jo
mov
or
icebp
push
test
std
xchg
pinsrw
or
jl
dec
mov
jmp
ds
fisubr
cdq
ins
repnz
test
inc
iret
lea
nop
loopne
ins
ins
sbb
aam
es
in
out
loopne
loopne
jmp
jecxz
adc
mov
shr
ins
or
inc
js
lods
mov
mov
mov
push
popf
dec
rol
mov
add
bound
out
xchg
loopne
cmp
in
mov
cmp
stos
pop
jnp
fwait
stos
sbb
sahf
mov
test
add
xor
inc
ins
movs
jmp
popf
or
test
add
fwait
enter
push
cmps
ret
pop
push
lods
fidiv
mov
shl
sbb
cmp
out
jp
add
mov
mov
push
ds
in
and
and
aad
(bad)
sbb
es
dec
xor
jbe
jl
sbb
imul
and
pop
push
in
imul
fs
gs
mov
and
sub
xor
fimul
push
mov
jge
push
or
dec
mov
das
(bad)
jo
pushf
or
mov
sbb
repnz
push
dec
mov
jg
movs
push
pop
pop
pop
mov
push
sbb
dec
imul
test
and
mov
xor
lea
and
jae
sub
mov
ficom
(bad)
aam
fs
push
cmp
add
sbb
cmc
fstp
fwait
jnp
sar
push
jno
rcl
xchg
and
stc
xor
mov
pop
or
or
pusha
out
loope
imul
mov
sti
ins
retf
jecxz
push
js
inc
cmps
sub
hlt
fiadd
push
ins
daa
sub
les
scas
mov
mov
imul
lock
rol
adc
das
fisttp
out
ds
mov
push
adc
pop
sahf
dec
push
inc
jno
ret
sahf
out
sbb
into
mov
jbe
es
xchg
jmp
adc
mov
add
pusha
mov
cwde
and
ret
or
sbb
xor
sub
inc
cld
fidiv
fs
enter
xchg
sbb
xchg
xchg
lods
iret
retf
out
xchg
ja
pop
pushf
in
pusha
push
push
mov
and
out
outs
imul
mov
add
in
pop
add
xchg
sub
inc
pop
cmps
xor
mov
nop
lds
xor
lods
sub
fwait
inc
ror
sub
mov
and
(bad)
push
pop
and
shl
mov
push
hlt
jbe
out
sbb
mov
xchg
mov
mov
jo
pop
ror
test
pop
sbb
dec
push
adc
xchg
test
call
dec
int
fwait
sub
inc
jns
loopne
sub
sub
mov
jmp
xchg
cmc
fwait
xor
jmp
aam
lds
push
ror
(bad)
mov
mov
fimul
dec
or
jnp
cmp
aaa
sbb
out
mov
aad
and
sub
inc
test
sahf
es
les
(bad)
sbb
js
sub
inc
pop
add
and
mov
test
xchg
cli
pop
mov
stc
and
xchg
mov
xor
push
jl
inc
call
mov
neg
push
rcl
mov
jp
sbb
pop
push
mov
int
pop
in
loopne
in
mov
mov
and
xchg
cs
sub
test
test
xor
movs
in
cmp
clc
mov
call
sahf
sub
adc
into
cmp
into
mov
loop
and
(bad)
inc
mov
push
jmp
pop
add
out
jecxz
out
add
xchg
lods
inc
mov
dec
push
adc
scas
and
and
into
jecxz
fld
jns
dec
out
dec
ss
mov
dec
lods
mov
push
bnd
cmps
stc
add
cmp
xchg
cmps
out
data16
mov
mov
(bad)
mov
call
pop
push
add
iret
into
mov
mov
cmp
shl
pop
imul
(bad)
(bad)
adc
xor
repnz
out
data16
jbe
jmp
pop
push
bound
retf
ror
scas
loop
sbb
test
sar
dec
inc
dec
pop
or
cmp
sub
add
push
jnp
cli
lahf
repz
inc
mov
sbb
sbb
dec
pop
jmp
sub
xor
arpl
gs
xchg
cmp
in
mov
mov
aam
mov
jle
sub
fidiv
push
dec
cld
sub
test
mov
aaa
pop
ja
jge
mov
or
sbb
xchg
ret
pop
arpl
aam
push
cmps
push
jns
add
ja
lods
out
aad
(bad)
jns
mov
in
jb
lods
inc
push
pop
sbb
mov
lods
lea
imul
xchg
das
test
outs
cmp
ins
dec
retf
dec
pop
pop
add
bnd
test
jecxz
das
idiv
std
xchg
sti
pop
scas
out
and
mov
in
add
jnp
ja
out
les
sbb
(bad)
inc
div
adc
mov
mov
out
rol
sbb
cwde
(bad)
test
int3
sub
in
leave
fwait
lea
aam
pop
outs
call
test
and
dec
xor
dec
icebp
imul
mov
sahf
and
lahf
nop
mov
lahf
lds
retf
int3
lea
dec
(bad)
imul
xor
ret
xchg
push
int3
jae
movs
sbb
pop
fs
in
sbb
(bad)
xchg
pop
mov
ins
nop
mov
push
mov
jp
dec
dec
jmp
aam
es
fcmovnb
sahf
retf
popf
pop
jmp
enter
dec
push
jmp
sbb
pop
push
imul
clc
sub
inc
xchg
(bad)
cwde
ja
(bad)
mov
imul
push
jnp
jns
adc
test
in
ins
test
lods
mov
push
lds
jp
pop
push
jl
inc
inc
mov
mov
add
pop
sbb
and
jmp
jns
pop
cdq
shr
adc
call
dec
pop
xchg
dec
or
mov
lock
dec
out
sub
inc
xor
jp
sub
xor
push
pop
jnp
pop
mov
stos
loope
add
dec
stc
(bad)
sub
test
add
pop
xor
test
pop
jmp
push
in
retf
push
rcr
mov
call
dec
outs
inc
jbe
add
pop
sbb
shrd
and
fwait
xchg
xchg
pop
es
mov
shr
push
pop
adc
pusha
push
cmps
sbb
das
shr
not
jp
mov
stos
cbw
cmp
je
sbb
test
add
xor
es
cmps
and
adc
cmp
fdivr
jecxz
or
cmp
jp
scas
sti
push
loopne
jmp
push
inc
pushf
cmp
pop
xchg
xor
inc
gs
(bad)
mov
test
stos
int
mov
out
push
cs
test
in
adc
fisttp
mov
fisubr
pop
(bad)
sub
xchg
or
(bad)
cmp
cmp
movs
push
sub
mov
(bad)
jnp
push
loop
jecxz
mov
pop
ss
imul
sbb
icebp
and
retf
mov
fs
mov
inc
pop
and
sub
cmp
iret
iret
mov
mov
inc
add
sub
prefetch
and
and
movs
imul
popf
jnp
pop
lods
imul
pop
dec
fiadd
pop
test
std
fild
hlt
js
jmp
inc
div
push
pop
js
data16
pop
xor
jl
dec
push
pop
mov
lods
inc
lds
push
ror
jge
imul
adc
js
es
test
cmp
jo
call
pop
adc
dec
add
and
adc
or
and
push
lock
mov
push
shl
retf
(bad)
leave
push
bnd
add
mov
adc
popf
out
mov
je
mov
ficom
cli
test
inc
es
sub
sti
nop
retf
mov
hlt
cmp
je
xor
mov
test
aad
dec
mov
retf
jmp
or
push
out
jo
push
sub
push
sahf
xchg
dec
jge
push
jns
xor
or
sub
popf
or
es
sub
mov
jl
jbe
and
pop
ds
ror
daa
sub
cmp
aad
or
cmc
mov
dec
xchg
mov
inc
jle
ficom
scas
fisub
pop
aam
pop
cwde
pusha
mov
push
jl
(bad)
sbb
sub
sbb
push
inc
mov
lds
push
or
es
jle
mov
aas
cmps
imul
mov
push
lods
add
cmova
out
xchg
fisttp
xchg
je
push
jo
shr
fcmovnb
sub
mov
dec
ror
adc
pop
and
mov
inc
pushf
daa
mov
pop
fidivr
ret
mov
push
mov
jnp
mov
lock
mov
rcr
ja
jge
cwde
int
test
stos
push
bound
jae
pushf
xor
sbb
pop
inc
inc
pop
jp
jl
or
jle
fmul
shl
mov
fisttp
aas
test
pop
test
jmp
mov
out
fwait
xor
iret
ret
out
movs
out
xchg
or
mov
sub
sub
(bad)
mov
pop
cwde
pop
sbb
or
jl
mov
mov
in
push
xor
out
fbld
cld
pop
push
out
call
adc
and
mov
push
push
mov
imul
(bad)
fwait
inc
push
mov
adc
repz
fild
loop
cli
dec
mov
faddp
jecxz
test
popa
jo
or
dec
pop
cmp
or
fisttp
cmp
lahf
inc
pop
stos
jnp
setno
push
ss
add
mov
fcom
(bad)
jg
clc
and
jmp
scas
sub
jbe
cmp
and
sub
sti
inc
rcr
fwait
out
mov
mov
ss
ror
inc
pop
test
pmullw
jnp
out
mov
mov
test
lahf
adc
mul
mov
jb
push
xchg
outs
xor
add
jl
outs
fist
jg
push
mov
mov
or
in
mov
and
or
inc
adc
fisubr
sub
or
daa
xchg
adc
or
fcom
mov
icebp
sbb
pop
js
push
(bad)
aad
sbb
add
sbb
es
dec
xchg
pop
(bad)
cld
ja
mov
pop
mov
pop
jg
xor
out
js
mov
pop
mov
pop
lea
stos
mov
sbb
inc
xchg
repz
nop
pop
shl
shl
out
push
aam
or
(bad)
hlt
xchg
out
mov
lods
stc
rcl
aas
pop
mov
or
add
hlt
movs
call
hlt
jmp
push
(bad)
mov
retf
cmps
xor
adc
sbb
fnstcw
inc
mov
add
enter
mov
cmp
cs
push
(bad)
jnp
imul
js
sub
ss
dec
push
adc
add
test
loope
inc
imul
jns
adc
out
pop
cmp
imul
aaa
daa
retf
mov
jl
jbe
inc
mov
ret
mov
pop
fbld
sub
cld
mov
adc
pop
retf
outs
push
add
inc
outs
test
cli
add
in
(bad)
lea
xor
call
mov
sbb
fist
retf
sbb
cmps
test
cmp
push
into
jmp
test
cmps
fimul
scas
stos
stos
fwait
jg
cmp
and
cs
mov
cli
adc
out
push
inc
xchg
sbb
cmps
cmp
mov
and
add
fstp
push
loopne
div
mov
push
mov
pop
or
push
or
inc
sbb
mov
push
jno
retf
xlat
sub
leave
mov
fucomip
mul
leave
mov
push
mov
loopne
jmp
sbb
inc
out
xor
cmps
inc
lods
and
fs
mov
(bad)
pop
int3
fisubr
dec
cmp
push
ja
or
cmp
xchg
inc
stos
idiv
jge
inc
xor
cdq
out
push
push
aaa
shl
(bad)
xchg
sub
ud2
fistp
sub
cmp
out
xchg
sub
jecxz
cmp
mov
hlt
dec
or
leave
int3
mov
or
cld
dec
aam
(bad)
jp
je
push
cld
sub
jmp
stc
jb
arpl
xor
test
and
push
dec
in
push
(bad)
jle
lods
dec
out
(bad)
sub
clc
inc
mov
neg
pop
jae
push
and
add
retf
xor
movs
(bad)
imul
jb
je
sbb
stos
inc
xchg
int
cmp
cmp
dec
int
or
test
daa
mov
push
pop
int3
jmp
lock
cmp
mov
push
xlat
int3
daa
fimul
xchg
push
repz
cmovs
gs
call
mov
jbe
adc
adc
sar
fdiv
rcl
mov
sbb
leave
push
adc
xor
arpl
push
call
lea
xchg
test
push
aad
mov
jmp
data16
mov
stc
jns
daa
stc
mov
dec
or
jb
xchg
call
cs
(bad)
test
xor
xor
jp
dec
popf
enter
aas
cdq
jle
cmovnp
pushf
push
pop
dec
fild
mov
enter
fiadd
xchg
sbb
iret
outs
mov
ror
clc
in
neg
in
out
jge
jb
and
mov
das
xchg
dec
mov
mov
retf
lods
out
xchg
add
pop
cmp
out
mov
adc
neg
xor
mov
and
adc
push
jmp
fprem1
dec
cmps
sub
jmp
outs
idiv
(bad)
cli
xchg
mov
mov
pop
ja
enter
jnp
inc
(bad)
sti
xchg
fist
adc
pop
sti
imul
push
xchg
aas
jne
inc
xchg
jns
(bad)
xor
or
loopne
mov
retf
outs
gs
xor
add
jo
push
cld
pop
retf
and
adc
and
scas
stc
data16
xchg
adc
sub
(bad)
sub
cld
retf
pop
aas
gs
std
inc
scas
lahf
mov
xchg
mov
inc
icebp
enter
adc
daa
add
push
add
add
mov
adc
add
scas
in
je
outs
dec
push
cvttps2pi
cmp
nop
enter
push
mov
stos
sar
push
or
jp
push
or
imul
ret
pop
or
je
push
(bad)
fsubr
les
icebp
xchg
dec
pop
ins
out
(bad)
and
pushf
(bad)
mov
xor
cmp
pop
push
dec
fidiv
push
nop
dec
sub
xchg
xchg
shl
out
js
or
mov
dec
mov
inc
(bad)
pop
fistp
cmps
push
mov
mov
push
jno
mov
dec
aam
or
cli
(bad)
hlt
push
sti
adc
jno
cmps
dec
cmps
xor
jnp
sar
int
in
adc
xchg
daa
popf
pop
cmp
push
jg
in
mov
mov
pop
mov
fs
jge
mov
fnstcw
add
aam
jle
inc
call
aaa
rep
sub
and
(bad)
and
rol
sbb
push
jp
or
cmp
ret
out
cmp
fiadd
outs
mov
inc
adc
cmp
(bad)
arpl
je
mov
xchg
cmps
dec
imul
sbb
sbb
cwde
sahf
xor
inc
dec
test
mov
sub
sbb
inc
retf
not
test
test
retf
push
(bad)
pop
mov
mov
xor
aas
pop
jg
mov
js
cld
inc
out
cmp
retf
repnz
jnp
push
jnp
sti
mov
loope
jae
out
dec
jge
repnz
inc
bound
call
les
push
es
jno
pop
mov
retf
or
sub
enter
jnp
test
aaa
push
(bad)
pop
aad
jle
ror
hlt
add
mov
or
int
dec
ficom
call
jp
and
sar
mov
xchg
scas
sub
adc
test
add
pop
imul
xor
dec
jnp
jnp
cli
mov
push
pop
fidiv
jae
xchg
sub
or
sub
fdiv
retf
imul
fsubr
sub
or
xchg
aaa
xchg
add
sub
pusha
push
shl
push
mov
test
mov
ins
inc
mov
in
inc
dec
xchg
(bad)
mov
fist
retf
mov
(bad)
shl
dec
jbe
and
add
xchg
inc
cwde
jmp
es
addr16
inc
ret
jno
leave
push
idiv
dec
arpl
and
inc
push
mov
mov
ss
pop
mov
dec
xor
and
lahf
push
mov
ret
push
daa
ret
inc
mov
clc
adc
mov
dec
xchg
test
imul
in
inc
xor
xchg
fdiv
shl
adc
rol
pop
nop
addr16
mov
lea
inc
mov
mov
call
cmc
cmp
ja
and
lahf
mov
mov
daa
rcr
sub
xchg
outs
sar
(bad)
mov
sbb
lea
adc
test
sbb
ins
and
cmp
sbb
out
adc
mov
popf
(bad)
pop
cmp
enter
fist
inc
(bad)
xor
cmp
inc
push
pop
mov
ror
adc
xlat
sub
ins
test
mov
mov
movs
mov
cwde
sbb
popf
daa
fwait
or
dec
out
adc
lea
jmp
inc
adc
xchg
jae
mov
(bad)
fsubr
stos
iret
fnstsw
inc
xchg
idiv
fidivr
and
stos
(bad)
(bad)
xchg
xchg
or
and
push
mov
jns
jns
aad
(bad)
sub
inc
jb
aas
ficomp
aam
cmp
jo
push
pop
jbe
inc
(bad)
push
inc
cmp
pop
add
out
fwait
(bad)
sbb
into
jmp
(bad)
push
(bad)
psubd
mov
or
in
fldcw
(bad)
add
stos
jle
popa
je
mov
(bad)
bound
out
push
xor
xchg
mov
xchg
cmp
or
mov
stos
sub
adc
fsubr
cmps
ffreep
mov
add
fwait
(bad)
sub
lahf
xor
or
pop
(bad)
iret
jo
xlat
cli
cs
jp
je
pop
or
push
mov
push
jecxz
movs
pop
push
or
(bad)
std
mov
mov
sti
not
xchg
mov
movs
xor
sub
or
out
int3
push
xor
mov
imul
mov
test
jno
mov
and
jle
push
outs
push
test
inc
xor
popf
sbb
(bad)
popf
das
idiv
jp
sub
push
pop
enter
jb
adc
cmp
clc
(bad)
pusha
cmp
mov
cs
inc
push
jo
xchg
mov
icebp
xor
push
int3
aaa
and
in
or
movs
fcmovbe
imul
and
add
mov
(bad)
xor
in
sti
iret
or
mov
jge
not
cmp
push
stos
fmulp
js
mov
enter
movs
lahf
xor
jecxz
ins
xchg
ret
aad
sar
push
lock
aas
push
into
loopne
inc
xchg
fcmovnu
popf
sub
ins
xchg
jge
ja
and
jge
jae
popa
or
inc
lods
or
movs
and
and
mov
in
sti
push
ss
imul
mov
rcr
js
scas
jmp
add
xor
xchg
enter
pop
add
repnz
mov
xchg
lock
mov
jo
xor
fidivr
sbb
lods
mov
or
test
aad
xor
stos
mov
clc
jmp
pop
gs
into
and
fwait
scas
test
jo
test
pusha
adc
int3
iret
ss
es
push
sti
cmp
pop
xchg
pop
push
jno
dec
push
(bad)
inc
jle
cmp
sub
cmp
jp
pop
int
xor
push
inc
repz
scas
push
aaa
js
adc
pop
sub
ja
retf
add
cmp
sub
mov
mov
idiv
in
leave
mov
jo
dec
data16
and
out
(bad)
mov
xchg
and
sahf
pop
daa
lods
outs
ds
mov
scas
cli
mov
mov
ins
xchg
dec
xbegin
mov
in
popa
or
lea
sbb
js
je
xchg
call
mov
and
ret
sahf
mov
or
sbb
xchg
std
push
in
ins
arpl
pop
out
(bad)
in
pusha
sar
daa
sbb
(bad)
xchg
jmp
push
(bad)
jns
lods
pop
fwait
xchg
movs
movs
bound
dec
(bad)
out
mov
xchg
enter
and
and
jns
(bad)
xor
inc
mov
fild
jmp
and
retf
es
mov
jmp
leave
adc
lahf
fxch
inc
inc
mov
mov
in
daa
loope
ins
xor
leave
sub
test
cmp
jl
sbb
dec
sahf
add
jge
add
mov
sar
sti
xor
(bad)
outs
(bad)
shl
(bad)
div
cmps
mov
test
sub
movs
pop
mov
and
pusha
dec
call
call
push
inc
jp
dec
sub
xchg
xchg
push
push
mov
daa
sti
out
loop
pop
cdq
imul
sbb
pop
mov
js
sub
sub
jg
pop
out
and
xchg
push
jns
jmp
jl
mov
jnp
(bad)
in
cmp
aad
mov
mov
call
jo
push
mov
sbb
outs
push
in
out
xchg
daa
mov
or
je
add
mov
xchg
sub
mov
cmp
xchg
xchg
and
movs
shl
lds
loop
jae
ror
sbb
lock
adc
movs
xor
inc
pop
adc
jmp
pop
or
cmp
stos
(bad)
movs
mov
addr16
cmp
mov
shr
cmp
pop
mov
push
mov
add
cmp
or
popf
adc
repnz
pop
aas
(bad)
out
stos
mov
adc
or
jle
push
pop
mov
add
pushf
cmp
mov
push
fs
popa
inc
bound
pop
fdivr
retf
clc
iret
cdq
into
out
ds
int
cmp
aad
loope
mov
and
mov
cmps
loope
leave
inc
jo
mov
fcmovbe
or
mov
test
cmp
jbe
adc
add
jmp
shl
(bad)
stc
mov
test
(bad)
stos
mov
inc
retw
nop
je
call
cmp
lods
iret
jae
xchg
cmp
mov
jmp
or
push
inc
inc
add
aad
icebp
xor
(bad)
or
pop
push
dec
cmps
mov
outs
mov
test
xchg
adc
cmp
in
cld
or
mov
add
daa
jae
pushf
mov
jae
int
xchg
ja
jmp
lahf
fdiv
jnp
test
inc
or
pop
scas
fld
sbb
cmp
xchg
xchg
mov
cmp
shl
in
push
cli
adc
into
or
int
(bad)
lds
add
dec
iret
and
push
es
push
or
jbe
push
gs
aaa
call
xor
mov
retf
xor
in
adc
jmp
dec
clc
outs
mov
push
push
(bad)
into
out
inc
xchg
cmp
or
sub
inc
fdivr
movs
or
not
ins
shr
movs
call
dec
movs
push
sub
push
xchg
mov
inc
addr16
adc
mov
fs
aaa
add
sbb
ss
movs
inc
cmp
sti
mov
push
sti
or
pop
pop
xor
outs
xchg
cmp
add
xor
sbb
outs
(bad)
cmp
push
ins
(bad)
jb
mov
movs
jns
xor
mov
cli
and
test
lods
mov
stos
scas
jg
mov
stc
jns
es
xchg
jne
call
imul
inc
lahf
imul
cwde
push
xor
aaa
mov
(bad)
push
(bad)
scas
adc
mov
mov
mov
mov
push
cmps
push
retf
loop
lods
dec
xchg
adc
push
fbstp
pop
adc
stc
hlt
popa
sub
xchg
or
daa
or
push
push
and
xchg
(bad)
jae
out
enter
ds
(bad)
mul
jnp
test
cli
mov
jle
(bad)
rol
loop
mov
push
aam
iret
or
jge
xchg
stos
xchg
lds
ja
fs
or
int3
aaa
xor
mov
xchg
js
psubusw
jge
inc
je
jl
sbb
out
xchg
add
pop
(bad)
xor
dec
mov
popf
das
daa
das
inc
imul
xchg
xchg
cmp
hlt
repnz
test
jne
jle
pusha
push
xor
daa
repnz
jp
mov
fisub
cwde
push
xchg
jnp
adc
xchg
or
or
xor
pop
jno
loop
push
int
or
mov
push
or
jo
and
and
int3
xchg
xchg
in
jnp
int
mov
es
dec
pusha
mov
sti
pop
mov
mov
repnz
inc
sti
jns
rcl
out
or
mov
loop
mov
mov
ficomp
mov
(bad)
call
xor
sbb
push
(bad)
stc
in
mov
mov
or
pop
repz
xor
mov
(bad)
dec
inc
add
mov
stos
movs
inc
popa
pop
mov
or
(bad)
sbb
dec
cs
xchg
outs
call
mov
gs
cwde
push
cmps
and
popf
mov
xchg
stc
out
sub
jae
mov
fstp
out
scas
inc
or
mov
cwde
mul
outs
xchg
ficomp
and
push
fdiv
ja
pop
mov
daa
push
add
fisttp
sub
repnz
rep
mov
push
or
push
das
sub
xor
fcom
test
ret
iret
push
dec
dec
loopne
std
jge
aam
pusha
fstp
neg
in
mov
mov
dec
dec
dec
push
outs
arpl
(bad)
stc
xor
adc
xchg
push
cmp
cli
out
push
arpl
push
mov
lods
jp
xor
mov
stc
push
cld
push
jle
lds
leave
or
mov
push
or
scas
movs
adc
adc
rcl
ret
xlat
inc
(bad)
mov
pop
into
fidivr
es
adc
out
(bad)
pop
mov
mov
fcmovbe
mov
jbe
stos
sahf
sub
push
pop
jg
xor
mov
sbb
test
jmp
push
mov
jmp
rol
shl
jns
cdq
dec
push
add
movs
das
xchg
dec
pop
test
outs
popa
movs
cmps
pop
xchg
scas
mov
jg
pop
jnp
cmp
cmps
push
and
xor
mov
push
sub
lods
xor
inc
xor
sbb
adc
sub
(bad)
mov
int
fwait
sub
add
mov
inc
xchg
xlat
outs
imul
or
loope
push
popf
jge
in
pop
xchg
scas
adc
js
sub
cmp
dec
jns
jno
(bad)
pop
mov
sti
or
xor
xor
and
ror
xchg
gs
imul
fisttp
sbb
lea
xchg
es
jg
pop
mov
jle
repz
mov
pop
mov
sbb
or
in
outs
push
sete
mov
mov
nop
call
dec
fwait
call
add
mov
les
sti
sbb
xor
(bad)
sub
pop
jne
popa
inc
push
hlt
aaa
mov
and
push
(bad)
mov
mov
fsub
inc
mov
aam
(bad)
test
xor
enter
fld
ss
and
idiv
push
and
and
dec
xchg
push
jmp
mov
js
push
fistp
and
push
sub
xor
xor
neg
inc
xchg
jbe
ret
cli
mov
outs
add
jg
adc
mov
pop
sub
test
xor
adc
ss
pop
or
or
dec
inc
lahf
xlat
popf
sbb
pushf
mov
pop
cmp
inc
dec
and
jecxz
xchg
sub
cwde
repz
sub
(bad)
sbb
int
mov
sub
mov
xor
imul
cmps
jne
scas
pop
int3
push
fnsave
mov
mov
cmc
pop
mov
inc
scas
pop
ins
cmp
mov
mov
sti
jmp
or
nop
pop
fs
and
xchg
add
in
(bad)
ficom
and
lea
in
leave
shl
xchg
pop
push
inc
ror
retf
imul
or
mov
add
gs
or
mov
(bad)
pop
out
xor
pop
mov
js
jecxz
pushf
in
(bad)
repnz
cmps
cdq
sub
std
push
rcl
and
or
shl
and
lods
nop
push
push
add
jo
xchg
push
inc
pop
push
in
outs
cld
jl
(bad)
enter
mov
fld
cmc
ss
lds
movs
and
and
(bad)
pushf
mov
je
jl
aam
daa
call
push
dec
cmps
retf
lock
ds
or
sbb
cmps
mov
mov
clc
mov
sbb
les
lods
xchg
out
xor
es
pushf
loopne
and
out
repnz
xchg
jb
mov
stc
imul
mov
dec
aaa
push
daa
or
mov
mov
inc
mov
xchg
inc
imul
jmp
inc
lods
repnz
adc
xchg
retf
test
cli
xchg
aaa
cmps
sub
jle
ja
mov
dec
stos
loope
cdq
inc
js
lds
test
inc
sub
mov
inc
outs
xor
mov
xchg
pop
jmp
sub
push
xchg
dec
test
mov
lea
xchg
pop
test
push
movs
or
push
xor
cmp
mov
mov
aad
mov
sbb
pop
retf
fs
stos
neg
sub
ret
jmp
cmc
jmp
mov
jbe
jae
push
test
data16
leave
stos
and
popf
dec
neg
fistp
movs
and
outs
mov
pop
pop
(bad)
adc
adc
out
inc
push
imul
lea
mov
sar
test
xchg
mov
std
jge
add
jno
outs
sub
mov
xchg
(bad)
adc
js
out
ds
pushf
xor
les
ret
fmul
add
cmc
push
cs
push
mov
aam
xlat
fucomi
xchg
pop
aad
ds
mov
xchg
push
hlt
jg
sti
mov
sbb
(bad)
enter
and
mov
jecxz
retf
(bad)
fisub
inc
clc
pop
xchg
and
(bad)
and
mov
add
loopne
mov
ret
sub
sub
xor
xlat
mov
or
pop
or
retf
mov
adc
pop
fs
popf
dec
(bad)
xchg
mov
xchg
inc
mov
sbb
add
loope
ja
(bad)
lds
cmp
popa
retf
xchg
(bad)
xor
xlat
sub
nop
push
out
mov
fidiv
fidivr
add
cmp
cmps
adc
add
mov
mov
cmp
adc
sar
mov
xchg
xchg
imul
sti
jbe
push
or
jb
inc
(bad)
dec
movs
test
add
rol
mov
inc
jae
cmp
push
and
push
cmp
inc
push
sbb
mov
call
stos
outs
(bad)
mov
lahf
dec
je
add
pop
and
sbb
xchg
inc
lea
inc
xchg
push
push
lds
ins
pop
cwde
xchg
pop
adc
stos
xchg
test
(bad)
push
sar
cmps
dec
inc
jns
sbb
adc
add
xlat
rol
movs
(bad)
ds
scas
shl
ds
mov
jbe
and
sar
clc
cmp
out
jle
cli
inc
test
mov
mov
sub
add
adc
pop
repz
jecxz
pop
aad
sbb
add
jbe
adc
pop
sbb
add
pop
push
jge
jne
adc
add
loop
pop
xlat
icebp
test
sbb
lds
push
sti
out
sbb
sbb
mov
or
push
mov
out
fld
fmul
lods
mov
sbb
scas
add
push
pop
dec
inc
shl
cmp
push
push
scas
mov
and
pop
mov
inc
std
aaa
pop
sbb
or
cmp
fwait
retf
imul
aaa
std
dec
sbb
jp
fild
dec
pop
ins
es
sbb
lds
repnz
call
push
dec
mov
or
mov
dec
mov
and
inc
pop
dec
push
ds
push
dec
outs
fsubr
cmp
std
daa
loope
sti
xlat
mov
jmp
hlt
inc
or
mov
sbb
inc
cmp
ds
pop
or
scas
xchg
jmp
fmul
jns
aaa
sbb
mov
push
mov
ror
jae
jmp
xor
out
xlat
sbb
aam
mov
nop
arpl
inc
retf
pop
mov
out
aaa
pop
test
nop
pop
xor
dec
bnd
ins
and
es
xchg
aas
or
ins
cld
xor
test
cmp
and
mov
(bad)
dec
sbb
mov
dec
xor
(bad)
sbb
jecxz
mov
sbb
cmp
jg
pop
push
xor
pop
jo
inc
sar
ss
push
adc
mov
lea
fidivr
xchg
pusha
and
xor
(bad)
hlt
int
dec
fcomp
adc
cmps
sub
es
ds
sub
fisttp
push
xor
aam
cmp
mov
fs
xor
dec
push
xor
test
aam
push
in
loop
xlat
sub
sbb
jl
xchg
fist
in
add
pop
jae
lock
and
sbb
mov
out
fld
jp
lods
inc
push
iret
into
inc
mov
imul
dec
inc
cld
sub
idiv
push
jmp
lea
push
mov
inc
outs
outs
les
mov
or
mov
daa
mov
xor
imul
xor
cmp
or
retf
sbb
js
cmp
test
dec
(bad)
imul
call
cmc
ds
xchg
push
cmps
sbb
pop
push
shr
cmps
stc
adc
cwde
cwde
cmp
push
mov
mov
push
dec
fisub
xchg
xchg
mov
test
inc
mov
stos
mov
push
fwait
and
cmp
jp
cmp
dec
fimul
ror
dec
nop
aad
fxch
and
sub
ret
jp
jp
push
outs
or
xor
jae
div
test
mov
or
mov
das
pop
scas
mov
inc
mov
inc
das
and
imul
fwait
xchg
or
int3
push
fnstcw
or
or
pop
sbb
fcmovnb
(bad)
(bad)
out
pop
std
ror
enter
movs
cwde
pop
stc
mov
test
inc
sbb
mov
cmc
lds
lods
(bad)
mov
inc
bound
jg
sub
mov
push
cmp
or
aam
xor
mov
fisttp
cmc
jmp
mov
mov
push
mov
addr16
imul
jp
rol
outs
push
das
(bad)
sbb
xchg
or
data16
cmp
cmp
mov
jg
push
inc
(bad)
stos
ja
or
(bad)
les
call
test
popa
jae
jge
jmp
addr16
mov
outs
imul
push
or
jmp
neg
inc
sbb
cmp
ins
cmp
sbb
pop
sub
adc
es
icebp
les
call
add
mov
push
add
cmp
retf
xor
outs
lock
and
(bad)
mov
mov
es
mov
xchg
or
push
add
leave
movs
inc
push
pop
pop
sbb
ins
cmp
jbe
addr16
push
sbb
fs
pop
push
fcmovnu
jge
mov
sbb
and
xor
addr16
mov
xchg
push
inc
addr16
xchg
add
data16
mov
movs
push
iret
pop
add
pop
jecxz
push
mov
ins
xor
xchg
jg
push
retf
xchg
inc
je
in
fs
or
lahf
xchg
mov
out
adc
addr16
jecxz
(bad)
adc
jmp
je
sbb
mov
lock
std
popf
rcl
fwait
cmps
xchg
mov
daa
fisttp
xchg
jnp
rcl
out
and
mov
xchg
ins
hlt
imul
push
jl
ja
sbb
sub
out
sub
pop
test
mov
mov
mov
and
push
adc
retf
fst
stc
or
mov
cmp
out
lods
out
adc
mov
push
jle
dec
adc
movs
sahf
sbb
pusha
pop
inc
data16
inc
retf
inc
ds
mov
aaa
pop
pop
push
repnz
mov
(bad)
jle
mov
adc
out
loope
es
adc
mov
test
call
sbb
std
jge
mov
mov
sahf
mov
and
adc
xor
xchg
xchg
inc
jmp
lahf
(bad)
xchg
cmps
in
jnp
popa
push
(bad)
popfw
(bad)
addr16
sbb
pop
jbe
push
enter
leave
inc
cmp
fwait
mov
pop
mov
push
xor
push
sbb
or
xlat
sub
popf
std
js
ror
push
jge
out
aam
pop
cmp
cmp
xor
inc
fs
mov
mov
adc
(bad)
pop
test
sub
js
fwait
pop
add
cmp
(bad)
les
neg
das
call
pop
adc
inc
arpl
or
(bad)
and
xchg
pop
jbe
cmp
mov
les
mov
mov
imul
nop
xchg
xlat
xchg
shr
push
js
out
inc
ds
pop
xchg
jge
mov
mov
push
jmp
jo
inc
inc
jbe
arpl
loop
sbb
loop
sbb
jp
shr
fadd
retf
cmp
xlat
sbb
sbb
add
out
ss
fwait
jbe
jne
loop
push
dec
adc
pop
outs
jmp
xor
xchg
imul
dec
cmc
jnp
stos
mov
lock
stos
mov
push
sbb
sbb
mov
iret
mul
sti
test
pop
jno
test
dec
je
xchg
inc
repnz
xor
jge
das
shr
sub
int3
mov
scas
xchg
jbe
int3
push
fdivr
xlat
cmps
and
mov
mov
out
imul
retf
jns
jl
stos
ja
hlt
sbb
xor
mov
pop
pop
test
pop
jbe
neg
ins
ins
imul
cwde
add
sbb
jmp
mov
in
xchg
shr
sbb
cmp
push
sbb
imul
movlps
pushf
into
add
xchg
(bad)
mov
cmps
call
scas
jp
out
pop
lea
aad
jo
dec
jle
sub
in
inc
jmp
pop
cmp
int
add
mov
pop
hlt
sub
fld
movs
adc
cdq
es
lds
xchg
sahf
mov
pop
inc
sar
stos
ins
ret
xchg
in
push
jmp
mov
loope
inc
fs
pop
sub
lahf
mov
mov
stc
ds
sub
inc
push
(bad)
mov
shr
(bad)
inc
ret
push
std
popf
mov
mov
in
cwde
adc
in
jns
leave
xor
cmp
fwait
mov
es
ds
mov
mov
out
(bad)
mov
dec
sub
inc
int3
(bad)
retf
cwde
adc
adc
fldcw
xchg
sub
sbb
mov
mov
xchg
pusha
dec
push
call
daa
imul
data16
xchg
(bad)
pop
add
mov
ds
es
mov
xor
xchg
sar
and
cmp
fnstcw
leave
mov
sbb
or
or
imul
iret
jmp
cld
pusha
mov
mov
jecxz
cmp
push
sub
jmp
pop
pop
pop
enter
add
leave
out
shr
inc
xchg
call
xchg
cli
add
imul
lock
jno
mov
movs
dec
in
jae
sub
jg
bound
inc
pop
mov
(bad)
clc
mov
mov
sysexit
pop
jp
fidivr
and
repnz
mov
xchg
fdivp
sbb
mov
xchg
xor
imul
xor
jo
and
enter
movs
sub
mov
jge
bound
stos
pop
(bad)
sub
pushf
clc
sti
outs
cwde
jge
in
int
mov
xor
ins
bound
dec
test
cmp
mul
or
mov
mov
push
jns
call
and
jmp
xchg
(bad)
and
rcr
push
inc
push
push
std
jecxz
pop
cs
stos
aaa
cmp
jmp
retf
push
pop
mov
jl
rol
jb
dec
pop
xor
jo
jp
add
out
xchg
cmps
mov
div
movs
popf
les
jp
fwait
outs
inc
and
(bad)
jmp
in
mov
jle
movs
xchg
ret
dec
adc
inc
lds
xchg
test
adc
es
or
pop
push
pop
cmps
pop
pop
das
push
or
push
idiv
ss
(bad)
(bad)
cmp
shl
jmp
repz
stos
pop
mov
daa
outs
pop
addr16
cs
clc
or
rcr
push
icebp
aam
jae
pop
iret
stos
sub
pop
push
pop
sub
push
and
push
pushf
sub
retf
ds
ficomp
icebp
repz
lock
cmp
aam
mov
test
in
in
add
cdq
pop
test
ficom
dec
lock
or
or
mov
ror
inc
xor
and
xchg
xchg
jnp
pop
imul
jne
jmp
xchg
push
rcl
jns
mov
mov
inc
pusha
repnz
ss
stos
push
jne
mov
cmps
sbb
pop
inc
sub
gs
stos
loopne
repz
inc
jmp
inc
cmp
xor
adc
mul
xor
xchg
iret
cpuid
mov
pop
mov
jg
jo
sbb
inc
fadd
cmp
mov
test
lock
call
shr
mov
pushf
mov
je
das
cmp
(bad)
scas
hlt
dec
adc
cmp
cmc
movzx
xchg
(bad)
hlt
jnp
icebp
fidivr
sbb
jp
sbb
mov
sbb
test
mov
jbe
pop
cld
retf
and
mov
sti
cmp
sub
mov
pop
fisubr
or
mov
retf
(bad)
push
mov
pop
and
lahf
xchg
mov
popa
stos
scas
add
inc
mov
call
movs
or
cs
dec
or
pop
pop
lods
jbe
retf
sbb
cdq
fimul
xchg
inc
adc
pusha
push
movs
sar
mov
jne
pop
pop
gs
or
xchg
arpl
jae
aas
xor
imul
mov
sbb
into
cwde
int3
(bad)
aam
das
add
pop
mov
jmp
or
(bad)
ficom
jno
fadd
out
mov
and
addr16
add
shr
add
test
mov
stos
test
fstp
loopne
pop
in
sbb
dec
pushf
jo
(bad)
and
xchg
xchg
cmp
add
dec
add
push
fsubr
add
add
pop
repz
fistp
out
or
mov
mov
or
dec
xchg
push
fstp
sbb
sub
imul
mov
inc
das
and
mov
jg
outs
sti
xchg
ins
sahf
(bad)
fucomip
icebp
call
dec
pop
jge
xor
xchg
mov
loopne
xchg
push
sbb
out
jae
loop
mov
stos
pushw
pop
lock
sub
or
mov
in
push
mov
inc
mov
jmp
pusha
and
jmp
sbb
mov
mov
call
push
(bad)
scas
fwait
cmps
mov
sub
mov
pushf
push
jo
imul
dec
in
mov
daa
jge
push
push
pop
cli
push
stc
cmc
jmp
out
call
cmp
add
cmp
xchg
mov
imul
adc
add
lds
test
sbb
sbb
cld
lahf
and
mov
push
in
jne
push
jmp
popa
xchg
jle
mov
mov
xchg
repz
cld
js
sub
pop
rcr
and
adc
xchg
test
gs
xor
(bad)
scas
aad
push
inc
mov
mov
jmp
das
sub
mov
jecxz
pop
lods
mov
rcr
mov
cmp
(bad)
and
les
add
(bad)
fxch
bound
shr
or
and
cdq
mov
push
inc
sub
ds
mov
mov
adc
inc
xchg
sbb
fisttp
mov
sar
xor
pushf
movs
jmp
jmp
lea
cmp
sbb
adc
stos
dec
sub
jbe
mov
(bad)
(bad)
shl
test
sub
(bad)
push
pop
imul
push
mov
mov
xchg
ss
or
aas
sub
iret
dec
jns
sbb
mov
cmp
mov
test
test
rol
hlt
jne
jp
inc
dec
inc
mov
clc
mov
clc
fimul
inc
popa
in
icebp
inc
jmp
adc
cmp
aaa
ror
dec
jg
into
pushf
icebp
mov
je
inc
scas
push
mov
sbb
xchg
or
fs
push
test
loope
loopne
mov
mov
movs
sub
inc
mov
mov
pop
push
jne
repz
mov
mov
lds
sbb
sbb
sub
pop
movs
enter
fcmovb
leave
(bad)
addr16
jbe
mov
xchg
jp
push
cmp
mov
inc
(bad)
dec
retf
outs
xchg
movs
mov
icebp
mov
les
call
jo
mov
ss
jo
xchg
and
fnsave
arpl
adc
and
out
cmp
or
inc
mov
scas
lods
(bad)
mov
jbe
arpl
xlat
push
out
test
dec
xchg
xchg
xor
pop
xor
pop
out
mov
jl
pop
mov
retf
xor
in
aas
mov
push
xor
mov
cmp
push
jmp
jo
test
stos
cmps
adc
in
and
mov
push
out
ja
sti
adc
dec
or
sbb
cmp
jmp
movs
or
iret
retf
movs
jmp
cmps
jbe
push
stc
jmp
aam
jl
sbb
ja
pop
out
sub
out
dec
call
jecxz
sub
scas
call
popa
int3
push
lods
jne
xchg
repnz
mov
je
movs
sbb
imul
jle
dec
(bad)
push
aad
icebp
ins
cmps
mov
ja
xchg
retf
cdq
stc
jmp
mov
dec
mov
aad
pop
retf
movs
jle
mov
or
outs
iret
mov
pand
dec
mov
cli
cli
cmp
not
ja
outs
inc
cmp
jg
aam
in
dec
cld
test
call
cmps
adc
pop
mov
cmp
cmp
mov
sti
jmp
cmps
gs
adc
and
adc
arpl
cld
pop
stos
cli
rcr
push
stc
mov
(bad)
stos
push
cdq
jge
cld
add
mov
aas
pop
mov
sbb
nop
mov
inc
mov
stos
sbb
mov
sub
aaa
or
mov
dec
out
add
dec
xchg
out
popa
jle
pop
dec
or
push
cmp
jbe
mov
shr
dec
dec
jb
es
test
jmp
and
lock
aaa
scas
inc
movs
adc
pop
add
adc
sub
out
push
shl
fcomip
leave
(bad)
int3
js
rcl
test
cmp
(bad)
sbb
jno
xchg
xor
fcomip
stc
aas
jmp
or
jmp
pop
je
ins
addr16
arpl
aam
push
fs
setbe
jb
mov
adc
xchg
cdq
div
jg
les
dec
cmp
aas
jnp
sub
xchg
mov
mov
cmps
cmps
in
pusha
cli
ins
mov
xor
mov
fldenv
(bad)
sbb
call
(bad)
loope
xchg
je
dec
cmp
js
jmp
in
fdiv
test
jge
mov
push
mov
mov
ss
mov
jmp
out
std
jmp
mov
jnp
imul
or
retf
cmps
mov
xchg
ficom
imul
pop
xchg
shr
dec
(bad)
std
pop
xchg
or
jo
cmps
ss
jecxz
loop
aaa
cdq
push
test
add
mov
inc
jle
mov
add
ret
cmp
hlt
cmp
outs
dec
jmp
cmp
cdq
mov
lds
sub
cmp
out
loop
add
mov
sub
push
ja
xlat
repz
push
sub
push
jmp
pop
push
das
xchg
cmp
mov
jnp
mov
fst
xchg
shl
xchg
cmps
in
in
adc
push
add
inc
push
mov
add
js
int3
push
xor
out
inc
mov
popf
pop
ret
test
sbb
push
sub
test
add
jb
push
xor
push
cmp
jbe
mov
mov
jmp
sub
mov
(bad)
(bad)
fpatan
in
loop
adc
sbb
(bad)
cwde
loopne
and
sahf
movs
pop
sub
in
adc
icebp
push
fcmovne
pop
(bad)
cmp
stos
xor
xchg
aam
push
bound
push
cwde
sbb
xchg
popf
pop
aad
mov
mov
icebp
mov
mov
adc
or
add
cmps
inc
or
ffree
(bad)
popf
mov
inc
lock
mov
inc
inc
jns
dec
repnz
inc
push
sbb
mov
cld
and
clc
adc
xlat
imul
adc
pop
push
jnp
mov
push
call
cmps
sar
(bad)
(bad)
and
ret
cmp
dec
imul
add
jbe
cmp
test
jecxz
sbb
xchg
sbb
retf
dec
or
push
dec
rol
arpl
je
xchg
pop
xor
fadd
mov
or
mov
sti
leave
aad
int
and
push
jg
dec
aaa
push
daa
or
retf
xor
jecxz
xchg
mov
lahf
xor
fld
pop
movs
dec
or
ret
dec
xor
out
add
(bad)
repz
out
xchg
mov
and
xchg
adc
push
sbb
and
pop
push
jnp
add
adc
xlat
xchg
push
inc
loope
xchg
leave
push
jb
mov
inc
cmp
test
xlat
ins
inc
test
dec
cdq
mov
(bad)
cmp
in
push
daa
xor
xor
outs
sar
jmp
into
sahf
mov
mov
ds
cs
or
dec
jno
ss
inc
pusha
adc
or
enter
jae
mov
repz
arpl
sub
or
imul
mov
mov
push
in
adc
out
mov
(bad)
aam
jno
dec
mov
fcomi
add
push
jbe
in
push
inc
inc
bound
imul
ins
mov
dec
cmps
out
dec
outs
(bad)
mov
or
mov
(bad)
or
in
push
retf
mov
xchg
in
aam
(bad)
out
xchg
sbb
mov
jbe
jecxz
inc
adc
and
retf
mov
push
sbb
adc
sbb
lahf
mov
push
arpl
lods
jmp
adc
outs
jbe
mov
xchg
pop
repnz
inc
push
jl
and
xchg
jnp
ds
(bad)
call
mov
(bad)
push
movs
jmp
imul
cmps
xchg
xchg
cmps
xchg
aam
adc
cmc
mov
pop
rcr
inc
pop
bound
sbb
repnz
ja
jecxz
retf
dec
xor
push
mov
jmp
sahf
pop
adc
cmp
outs
popf
jmp
push
retf
mov
sbb
or
sbb
add
pusha
test
dec
and
retf
mov
mov
(bad)
sub
or
jbe
xchg
fwait
mov
clc
jbe
hlt
imul
pop
dec
pop
fnstenv
nop
pop
sub
sub
xchg
stc
fucomip
out
inc
mov
mov
jbe
pop
pop
dec
inc
mov
inc
rcl
xor
push
sub
adc
retf
dec
iret
push
(bad)
repz
jb
popf
aaa
dec
jp
pop
dec
(bad)
jno
ins
cmp
and
movs
cmp
retf
xchg
mov
in
outs
jmp
mov
dec
mov
jo
adc
xor
aas
dec
pop
cmp
sti
out
movs
iret
call
xor
ja
cmp
add
das
push
or
ja
(bad)
mov
cmps
push
sti
imul
add
out
mov
mov
mov
sub
sub
add
icebp
das
push
jmp
fucom
dec
out
pusha
fadd
xchg
fiadd
iret
sub
mov
sub
xchg
ror
clc
(bad)
jmp
movs
mov
and
jmp
imul
daa
xchg
dec
adc
aam
dec
or
(bad)
lea
fild
push
inc
jns
mul
pop
pop
mov
xchg
(bad)
ins
shl
mov
adc
jg
cdq
rcl
das
sbb
or
jecxz
cmp
fdivrp
sbb
jae
mov
mov
ins
popa
test
mov
sahf
inc
push
scas
jmp
scas
dec
push
xor
mov
jg
inc
aam
movs
add
xor
xchg
es
jmp
call
imul
mov
mov
jo
call
xchg
in
(bad)
call
add
and
inc
pop
inc
jbe
cli
xchg
or
push
cmps
adc
or
ret
fiadd
jmp
mov
test
jnp
arpl
add
loope
or
punpcklbw
adc
call
and
fucom
mov
ins
inc
movs
xchg
loope
sbb
fisub
or
retf
into
out
fmul
jg
adc
cmp
mov
in
mov
mov
data16
sbb
cmps
inc
xor
mov
jl
push
sti
xchg
push
mov
gs
xchg
daa
cmp
movs
dec
dec
xchg
(bad)
dec
stos
dec
mov
fild
and
inc
xchg
leave
repz
aam
push
dec
mov
mov
out
ins
je
cmp
mov
(bad)
lahf
(bad)
xchg
test
mov
push
ja
or
or
mov
iret
add
inc
test
std
(bad)
out
sub
out
add
loop
cmp
inc
hlt
ss
sbb
sub
jge
jo
inc
enter
aam
inc
imul
jmp
sub
jnp
imul
mov
pop
add
cmp
xchg
sbb
or
int3
sbb
sti
jg
mov
icebp
ror
fwait
xchg
idiv
jmp
mov
jmp
cmp
cmc
lock
rcl
xchg
jle
rol
cld
mov
loopne
fwait
out
sub
int3
inc
xor
popa
clc
aaa
ds
les
fsub
cmps
test
retf
or
fbstp
jecxz
sbb
cmp
sub
pop
mov
je
mov
das
sbb
imul
test
fild
mov
outs
mov
inc
sub
dec
inc
xchg
aam
mov
movs
ja
outs
mov
call
cmps
scas
add
push
popf
jo
xor
mov
mov
mov
test
sbb
punpcklbw
adc
imul
dec
add
in
in
fidiv
rcr
mov
lods
jmp
xor
jp
cmc
add
out
mov
call
inc
cdq
push
(bad)
je
push
sub
mov
pop
xchg
out
jecxz
mov
arpl
sti
cmc
sbb
or
and
jnp
pop
cmp
xchg
fnsave
les
lea
cmps
das
inc
test
div
dec
xor
push
or
clc
cld
sub
neg
stos
dec
cmp
out
push
jbe
jne
mov
jl
jecxz
xor
stos
dec
(bad)
adc
popf
scas
fucom
cmps
out
rcl
mov
mov
push
das
div
and
xlat
push
(bad)
sbb
mov
cmps
test
mov
outs
cmp
(bad)
sbb
in
std
adc
or
xor
clc
pop
adc
xor
out
jmp
shl
cmp
push
or
(bad)
leavew
rcl
push
retf
mov
inc
rcl
(bad)
cli
sar
lods
imul
xchg
dec
in
not
test
adc
push
inc
xor
jne
lea
xlat
lods
fstp
xchg
(bad)
xchg
bound
fimul
es
pop
or
rcr
mov
dec
(bad)
aam
jnp
repz
mov
sti
push
jmp
pop
enter
dec
retf
inc
ret
into
push
jo
jmp
or
xchg
(bad)
hlt
pop
jg
mov
mov
or
pop
lds
leave
cli
mov
je
div
mov
pop
ret
rcr
xor
add
pop
or
cli
mov
rep
clc
ficomp
enter
ret
inc
mov
loopne
dec
les
sub
stc
xchg
push
ret
mov
xchg
mov
scas
push
sbb
(bad)
push
xchg
les
sub
sub
sbb
aad
cmp
clc
jbe
cmps
inc
xor
pop
pusha
call
xor
stos
inc
cmps
add
or
pop
adc
mov
dec
or
push
or
cli
pop
data16
pop
xchg
cmps
lds
sub
push
in
push
popa
inc
(bad)
jnp
arpl
popf
iret
ffreep
cmp
lods
arpl
mov
jbe
inc
imul
jecxz
dec
das
ds
ror
sti
inc
sti
xchg
push
fisttp
outs
mov
add
pop
adc
sub
or
fs
scas
cmps
xor
jmp
push
add
retf
push
mov
out
test
out
xchg
cmp
adc
xchg
push
mov
mov
mov
mov
sbb
adc
push
movs
inc
mov
mov
(bad)
aad
scas
xchg
mov
push
and
rcr
cmp
push
pop
fcmovnu
in
inc
les
adc
mov
shl
add
imul
cs
xchg
inc
dec
sub
int3
dec
pop
add
mov
pop
pop
data16
jbe
setg
es
les
adc
adc
fsub
mov
sub
add
jmp
adc
sub
jo
jb
pop
inc
sub
call
and
sub
(bad)
fstp
movs
jbe
cmp
mov
xchg
mov
cmp
mov
gs
and
dec
test
ja
retf
pop
pop
movs
cmps
mov
sbb
xchg
stos
fdiv
sub
dec
sbb
dec
out
imul
cmp
xchg
inc
into
fwait
stc
xchg
in
push
pop
fdivr
mov
loop
push
mov
fnstenv
push
pushf
cs
idiv
lahf
ins
sahf
or
push
jns
add
cli
jb
push
push
and
lock
jmp
pop
hlt
add
jb
sbb
int
dec
sub
push
mov
push
xchg
pop
push
shl
sti
nop
jmp
xchg
push
sbb
(bad)
or
xchg
pop
inc
stos
push
ret
xchg
pop
cs
int3
adc
rcl
shl
inc
mov
and
jo
cmps
lahf
push
data16
not
and
xchg
mov
inc
pop
or
dec
sbb
mov
pop
cmp
mov
xor
imul
mov
jp
fisub
add
sub
push
jbe
push
sub
cmp
or
dec
sbb
push
sbb
out
push
mov
mov
inc
mov
hlt
mov
fs
das
and
dec
jg
push
nop
outs
jbe
xchg
inc
jmp
fmulp
test
mov
div
and
inc
pop
cmp
inc
and
cmp
into
icebp
test
cmp
adc
push
not
inc
sub
push
pop
jmp
shr
dec
xchg
adc
arpl
cmps
loopne
xchg
(bad)
push
pop
dec
fidiv
out
jo
sub
imul
loope
xlat
jg
fsubr
shl
mov
jb
ss
and
xlat
pop
sub
fcmovb
push
pusha
dec
mov
push
pop
div
inc
mov
mov
call
sti
fadd
outs
enter
mov
enter
sti
imul
add
xor
es
sub
in
dec
or
jbe
jbe
cmps
dec
fisttp
add
ficom
mov
jo
fwait
dec
shl
(bad)
fadd
dec
sub
push
stc
test
aaa
mov
mov
mov
add
xchg
rep
jecxz
mov
mov
hlt
sub
div
cmp
repz
repnz
cld
add
cmps
sbb
shr
push
imul
dec
or
push
and
mov
movs
int3
repnz
jmp
mov
xor
inc
mov
sbb
pop
scas
xor
outs
adc
retf
push
lds
cmp
mov
and
jg
cli
adc
or
std
push
outs
xchg
pusha
dec
shufps
(bad)
mov
fisub
aaa
jmp
xchg
inc
(bad)
mov
test
movs
(bad)
sub
je
loop
les
outs
pop
mov
add
clc
iret
mov
add
mov
enter
mov
jae
inc
dec
sub
sub
(bad)
xchg
outs
loop
pop
call
fdiv
jnp
push
pop
ror
daa
pop
clc
xor
lock
imul
mov
pop
push
pop
ja
xchg
test
loopne
cs
fcomp
push
inc
mov
hlt
stos
mov
in
mov
out
cmp
test
mov
pop
push
sbb
loope
sub
aaa
fwait
je
lock
pop
jae
cmp
adc
sub
mov
xchg
ds
fisttp
(bad)
sub
aaa
pop
les
adc
call
mov
adc
push
or
sub
adc
aas
sbb
sbb
sub
mov
xchg
jecxz
push
push
mov
mov
in
cli
mov
mov
retf
(bad)
cmp
loope
mov
aaa
enter
adc
or
movs
popa
dec
mov
je
outs
jmp
mov
xor
retf
fwait
dec
mov
into
pop
je
ret
or
jnp
mov
sbb
fnsave
sti
cli
ret
and
pop
cli
clc
adc
imul
out
mov
or
cmp
sbb
xchg
out
or
xor
std
push
test
repz
cdq
in
mov
scas
pusha
add
nop
or
cmp
cmp
mov
shl
and
out
ffree
(bad)
mov
cmp
or
jb
xor
mov
adc
lahf
(bad)
repz
stos
mov
mov
dec
sub
icebp
jnp
cmp
daa
adc
repnz
and
mov
jne
je
lahf
push
cmp
ror
xchg
add
pop
xchg
jnp
das
out
fucomi
out
mov
or
mov
push
hlt
pop
sahf
xchg
arpl
xor
data16
rol
stos
data16
xchg
call
add
in
adc
jmp
sbb
sar
ins
sbb
cmp
pop
pusha
or
cmp
cmp
push
sub
fucomip
push
imul
in
pop
sub
scas
inc
pop
jne
ss
sbb
inc
sbb
leave
outs
mov
shl
inc
(bad)
and
ins
sti
pop
dec
xchg
popa
push
imul
cmp
mov
fwait
push
cmps
mov
inc
sahf
(bad)
and
pushf
jne
sub
scas
retf
push
ror
cmp
(bad)
dec
sub
ficom
push
or
rcl
ja
loop
xor
rcr
mov
std
mov
je
lock
dec
dec
aam
std
out
sbb
cmps
test
or
cmc
cmp
mov
push
jp
push
test
in
inc
sahf
ss
enter
dec
push
mov
imul
mov
adc
or
cmp
inc
aas
fwait
or
inc
jecxz
push
xchg
adc
das
sub
sub
inc
(bad)
fcom
fmul
xlat
imul
test
push
(bad)
scas
xor
mov
mov
stos
(bad)
mov
fucomi
pop
jecxz
out
xchg
lea
outs
mov
dec
sbb
imul
adc
jb
(bad)
fisubr
in
jecxz
fiadd
(bad)
popf
test
imul
push
setg
data16
and
mov
push
scas
jmp
(bad)
out
test
dec
sbb
retf
jnp
aam
in
sub
xor
dec
imul
mov
sbb
pop
sub
xchg
sub
aaa
cli
enter
ds
sbb
ret
inc
movs
out
jle
sbb
fnstsw
inc
mov
not
dec
or
mov
push
imul
sub
mov
ret
ficom
cli
adc
(bad)
lock
add
pop
sti
pop
mov
enter
push
sbb
test
(bad)
inc
ficom
xor
fnstcw
mov
scas
pop
pand
cmp
jg
or
pushf
hlt
add
movs
dec
push
fnstenv
push
popa
dec
leave
sub
scas
pop
addr16
lock
jne
xchg
add
mov
push
sahf
in
sub
cmp
out
pop
or
dec
push
repnz
frstor
add
(bad)
xlat
outs
in
cmp
cmp
imul
add
shl
xchg
in
mov
test
inc
fwait
iret
xchg
add
and
outs
jne
xlat
mov
sti
mov
neg
ins
(bad)
xchg
xlat
cmp
push
mov
jl
ins
loop
or
(bad)
imul
pop
in
cmp
cmps
inc
pop
xor
push
ja
dec
sbb
mov
push
mov
inc
push
movs
sahf
je
cmc
or
cld
dec
ds
aaa
mov
or
dec
jmp
hlt
cmps
fucomp
mov
push
out
data16
sbb
popa
hlt
loopne
inc
inc
pop
add
pop
stos
out
mov
xchg
stc
test
fidiv
mov
or
and
(bad)
stos
push
dec
sub
sub
ins
cmp
pop
sbb
mov
movs
jno
rol
cmp
mov
or
mov
jbe
jge
rcl
jns
sar
mov
inc
push
sbb
adc
mov
and
shr
mov
push
push
dec
je
imul
cmps
scas
jp
cmp
mov
xchg
call
iret
lds
hlt
push
or
and
(bad)
pop
movs
or
sar
xchg
not
xchg
mov
cmp
loopne
call
out
dec
sub
not
add
jp
add
fst
call
sub
shr
das
imul
mov
loopne
aas
in
int
daa
and
cmp
jmp
add
add
aam
enter
adc
ds
fild
pop
xchg
xchg
shl
and
pop
mov
mov
pop
test
jb
out
mov
push
popf
icebp
mov
inc
aaa
fmulp
mov
fild
mov
push
push
or
and
jecxz
aam
and
clc
(bad)
enter
cvtps2pd
out
cdq
mov
pop
sbb
cld
movs
in
enter
sbb
pop
(bad)
cmp
jg
dec
mov
and
mov
out
(bad)
sbb
hlt
cwde
shl
pop
mov
mov
inc
loopne
push
hlt
add
fistp
aas
mov
sub
mov
xchg
cmp
adc
sbb
xor
jmp
and
sbb
sti
mov
mov
sub
dec
pop
outs
jge
xor
and
mov
in
and
(bad)
xchg
xchg
js
and
stos
in
imul
lods
push
add
pop
sar
dec
xor
out
xchg
mov
ins
lods
push
adc
aad
sub
pop
es
jbe
push
test
arpl
lahf
fsub
cdq
lea
sbb
sub
(bad)
es
mov
xchg
stc
std
(bad)
(bad)
out
stc
shl
(bad)
fwait
mov
sub
dec
push
jl
pop
ss
mov
or
sub
loope
inc
push
retf
and
cdq
dec
cmp
shl
pop
inc
xchg
fs
jbe
dec
(bad)
jle
test
rcr
mov
xor
inc
push
pop
outs
push
pop
jnp
mov
dec
rcl
test
cld
jbe
pop
call
sbb
inc
add
push
test
cmp
shl
sahf
dec
(bad)
fisub
(bad)
or
mov
jae
jge
adc
push
add
data16
into
call
movs
mov
rol
ja
ret
jbe
call
fadd
test
pop
pop
and
adc
jecxz
inc
sbb
and
inc
mov
not
mov
mov
xor
fbld
push
cwde
fwait
mov
pop
xchg
mov
ds
shr
pop
in
jb
enter
mov
push
mov
push
jge
pop
mov
cmp
aam
add
mov
loop
xchg
fistp
push
ins
aas
jnp
fwait
add
adc
stos
mov
mov
dec
mov
push
cmp
jmp
imul
rcr
aaa
cli
or
es
inc
dec
mov
retf
pop
scas
jnp
mov
pop
inc
int
adc
in
sub
inc
(bad)
dec
outs
pop
loop
retf
push
xor
adc
aad
es
cmp
arpl
push
adc
lar
add
mov
mov
xor
out
cli
mov
nop
mov
xor
and
cwde
jp
pop
je
add
jle
mov
push
leave
sti
jmp
stos
ja
sbb
mov
je
aaa
cdq
not
mov
adc
call
push
sub
add
mov
cmc
dec
mov
mov
jmp
mov
mov
mov
mov
inc
sbb
mov
inc
push
push
xchg
add
cmc
mov
mov
jl
add
jne
and
dec
jno
jbe
push
imul
sub
ficomp
stos
xchg
outs
push
cs
mov
fs
out
sub
push
cwde
test
fld
push
pop
cmps
cli
mov
test
loopne
xchg
push
dec
sub
dec
psubb
(bad)
mov
dec
stos
scas
or
jecxz
cmps
hlt
inc
xchg
mov
mov
aam
out
ins
scas
shl
fwait
imul
and
push
push
pop
fstp
mov
pop
push
mov
cmp
dec
or
es
repz
cmps
sub
and
cmp
xchg
fild
cli
push
enter
fwait
data16
push
dec
sbb
xor
test
sbb
nop
dec
mov
shr
add
call
pop
(bad)
cmp
repnz
shl
call
jmp
rol
pop
into
jno
jmp
push
hlt
ds
jns
jmp
mov
iret
mov
xchg
inc
cs
push
xchg
(bad)
jp
das
dec
cld
and
retf
rcr
clc
mov
cwde
xor
sahf
jp
and
or
xchg
retf
(bad)
sub
xchg
push
xor
movs
stos
test
push
sub
std
or
mov
and
mov
push
mov
data16
mov
inc
jbe
cmp
xchg
mov
ja
inc
(bad)
add
mov
mov
pop
shl
sbb
cmp
test
mov
push
xchg
jbe
push
pop
popf
repz
aaa
mov
and
daa
out
clc
(bad)
mov
pop
outs
test
test
xor
add
fdivrp
ds
fidivr
and
jp
fwait
inc
mov
bnd
push
xor
or
mov
jno
retf
jle
sahf
pop
(bad)
imul
lock
pop
push
cmps
sub
retf
retf
jbe
jmp
adc
mov
dec
xor
and
jb
shl
je
call
xor
cmp
fwait
dec
dec
jp
jnp
jg
les
imul
fistp
jl
mov
retf
data16
ja
jl
dec
xor
sbb
icebp
mov
xchg
lahf
mov
call
aam
ffreep
sub
adc
sbb
into
dec
pop
fs
mov
adc
ja
mov
dec
(bad)
push
sbb
xchg
jle
xor
in
or
je
movs
(bad)
fucomi
(bad)
or
in
dec
stos
mov
icebp
bound
sub
adc
or
or
jmp
xchg
mov
not
dec
dec
adc
push
push
fmul
pop
push
jnp
aas
retf
aam
sti
or
jg
aad
xchg
fisttp
shr
cwde
jmp
jmp
es
inc
cmp
fiadd
aaa
movs
mov
mov
inc
sar
mov
hlt
pop
sbb
dec
pushf
xchg
mov
xor
jmp
clc
mov
ja
adc
lods
push
cmps
pop
jecxz
and
enter
pushf
ins
mov
pop
mov
repz
ja
pop
cmovo
imul
xchg
cmc
mov
xor
stos
xor
cmp
ds
jne
cmp
inc
repz
inc
xor
inc
ret
cld
cmp
fst
sbb
add
push
aam
rol
test
aad
retf
data16
pushf
lods
fs
push
imul
pusha
leave
ffreep
stos
inc
out
movs
in
cmps
push
or
mov
jbe
push
fsub
sub
shr
dec
int
sub
cwde
mov
ds
mov
dec
out
test
ret
sbb
inc
fstp
dec
dec
fbld
cmp
fisub
ror
and
test
into
cmp
int
(bad)
pop
cs
push
leave
fwait
mov
inc
repz
cvtps2pd
enter
dec
or
inc
mov
(bad)
mov
fsub
adc
inc
sahf
xchg
inc
sub
ss
enter
cld
mov
out
sbb
retf
cli
stos
cdq
adc
(bad)
dec
fs
rol
iret
int3
xor
out
xor
and
mov
jp
das
pop
cmp
sti
(bad)
xchg
jle
(bad)
repz
or
or
or
fidivr
mov
rcr
clc
out
add
xchg
or
jae
shl
retfw
pop
add
add
adc
xchg
xor
jle
(bad)
jmp
pop
lods
rep
sbb
inc
pop
aas
jmp
sti
jle
enter
je
idiv
adc
mov
xchg
movs
add
dec
pop
outs
jg
into
dec
imul
fild
xor
cmp
out
cmps
pop
or
pop
aaa
jnp
push
xchg
sub
cmp
jle
cmps
jmp
sub
and
(bad)
pop
aam
inc
jns
imul
xchg
inc
or
aaa
jmp
sub
push
xchg
mov
mov
pop
leave
mov
repnz
push
call
xchg
sbb
arpl
xchg
mov
rcr
pop
xlat
div
jne
dec
jle
pop
xchg
retf
jp
je
xchg
pop
(bad)
dec
mov
repnz
test
shl
aaa
and
push
mov
and
pop
call
lahf
in
in
test
test
jnp
jae
or
cmp
cmp
mov
push
dec
fdivr
(bad)
cmp
mov
xchg
scas
dec
or
jge
mov
dec
ror
lods
cli
sub
ins
stos
dec
cmp
dec
push
gs
or
(bad)
or
sar
add
cmc
jecxz
cli
shr
rcr
dec
test
movs
cmps
lea
loope
out
push
push
add
dec
outs
xchg
scas
jnp
retf
add
cli
(bad)
mov
fadd
xlat
dec
popa
out
mov
or
inc
inc
call
xchg
enter
sub
shl
pop
jo
push
(bad)
pushf
and
mov
push
cmp
sbb
je
add
jae
fisubr
xchg
aam
fcomip
ficom
xchg
xor
test
loope
stos
mov
(bad)
cmc
inc
add
xor
xchg
les
and
mov
xchg
mov
int
in
int3
cmps
mov
mov
xor
out
fcomp
or
lds
mov
sub
icebp
mov
imul
scas
push
jno
sti
inc
cdq
mov
(bad)
jge
aas
cmps
or
repnz
retf
daa
enter
(bad)
push
in
cmps
jmp
loopne
mov
sbb
and
xor
mov
movs
cmc
test
rcr
je
push
inc
mov
dec
cwde
push
ins
adc
bound
mov
cmp
rcr
cmp
jp
sub
dec
cmp
pusha
xchg
imul
outs
int
sub
ja
dec
imul
ret
enter
push
hlt
push
dec
sbb
lods
sub
push
pop
jbe
pmullw
xor
(bad)
repz
aad
add
std
or
push
jg
lea
mov
push
sbb
or
cmp
imul
or
pop
shr
xchg
cmp
mov
dec
nop
fnstcw
loope
jbe
test
jnp
sti
iret
mov
or
shl
pop
jmp
xchg
cmc
addr16
and
xor
add
in
dec
mov
mov
adc
(bad)
cli
mov
pop
mov
push
cmps
dec
adc
(bad)
push
aam
dec
(bad)
clc
xor
xor
push
jg
das
mov
iret
repz
out
jl
push
dec
mov
dec
mov
xchg
and
call
mov
loop
lods
test
fstp
jecxz
mov
adc
sti
cdq
xor
(bad)
(bad)
adc
cmp
movs
inc
add
ins
shld
repnz
sbb
(bad)
xchg
clc
ret
(bad)
mov
cmps
mov
lods
data16
or
bound
xlat
or
call
sahf
xchg
data16
xchg
xchg
call
push
jp
xor
mov
fsubp
xor
push
out
mov
or
inc
push
clc
mov
push
sub
push
dec
mov
loope
fidivr
mov
pop
xlat
mov
cmp
lods
cmp
or
mov
ds
pusha
ja
xchg
test
inc
pushf
dec
scas
mov
gs
jmp
inc
aas
mov
fild
mov
lods
cmp
cmp
push
or
lds
jne
pop
push
dec
int3
test
cdq
and
xor
pop
or
jno
adc
push
mov
imul
stos
out
stos
xchg
nop
(bad)
(bad)
aam
movs
push
test
and
int
repz
sub
or
int3
sbb
add
mov
gs
movs
xchg
mov
(bad)
imul
ret
or
jle
mov
xchg
mov
ins
ins
mov
push
test
pop
cmp
adc
mov
call
mov
fidiv
xor
into
mov
xor
mov
arpl
mov
push
mov
push
xchg
test
lods
push
mov
mov
cli
shl
mov
int3
ror
mov
jmp
inc
aaa
stc
imul
dec
inc
add
mov
jg
jge
pop
xor
xor
shr
adc
scas
pop
add
jae
dec
daa
xchg
enter
sbb
inc
push
outs
jmp
cmp
inc
pop
das
sbb
(bad)
repz
mov
adc
inc
fbstp
test
push
cmp
or
sahf
icebp
ins
daa
sub
mov
jo
int
arpl
jae
inc
push
mov
mov
movs
jne
aas
movs
stos
je
lods
push
std
push
mov
(bad)
mov
xchg
cmps
cli
jae
jg
aas
jmp
es
bound
dec
(bad)
in
cmp
int3
clc
xchg
jmp
sahf
test
push
outs
in
xor
add
loop
fsub
mov
(bad)
jp
out
jae
adc
lds
pop
mov
cld
je
and
cmp
xor
pop
into
mov
out
cmp
pop
cmps
adc
pop
js
push
je
push
sub
sub
push
and
rcl
out
cmps
mov
sbb
adc
aaa
lahf
pushf
inc
aaa
out
outs
pop
sti
repnz
cmps
adc
xlat
push
add
xchg
xchg
pop
retf
in
adc
dec
sbb
fcomi
sti
hlt
hlt
push
fwait
xchg
cwde
movs
in
xor
sahf
arpl
ins
and
ror
pushf
pop
mov
addr16
jecxz
cmp
les
es
into
push
ret
aam
(bad)
fucomi
outs
mov
adc
cmps
mov
mov
mov
push
jo
jle
(bad)
push
jbe
push
cmp
es
adc
movs
xchg
bound
jne
mov
mov
jmp
fst
fcmovne
mov
dec
ds
out
pusha
ror
sub
test
or
stos
xor
and
mov
popf
xchg
cmp
mov
mov
pop
mov
adc
into
das
push
(bad)
(bad)
xor
outs
mov
mov
cs
out
push
popf
repnz
(bad)
fistp
push
mov
or
pushf
popf
popf
(bad)
dec
pop
push
and
popf
ins
xchg
inc
inc
cmp
mov
lods
xchg
hlt
out
jl
fild
adc
dec
adc
aaa
test
cmp
xor
push
das
sbb
(bad)
(bad)
or
xchg
pop
xchg
in
adc
fld
shr
stos
and
inc
scas
in
mov
inc
rcl
sahf
pusha
inc
inc
cmps
jp
imul
push
push
sbb
mov
inc
xor
xchg
loope
pop
cmp
mov
push
leave
or
xchg
(bad)
aam
aaa
mov
jmp
jb
cmc
cmc
imul
sub
fwait
cdq
jmp
dec
loop
gs
stos
test
jle
arpl
call
inc
xor
outs
aad
push
jb
scas
ins
bound
movs
or
xchg
push
ret
sub
nop
push
xchg
dec
add
cmp
xor
sti
out
push
scas
ret
scas
outs
mov
sbb
inc
pop
push
imul
push
inc
xor
lods
sbb
jmp
fist
retf
test
addr16
push
sub
push
cmp
movs
dec
xchg
xor
xchg
retf
fisub
imul
cmp
stc
fcomi
sub
or
inc
mov
stos
mov
test
push
inc
adc
repz
movs
cmp
inc
add
(bad)
rcr
mov
push
ja
dec
fmul
xor
and
add
xlat
vprotb
mov
pusha
adc
sbb
sbb
cs
idiv
mov
push
jmp
push
inc
mov
aad
sub
not
lahf
mov
ds
or
rcl
jae
jp
sub
fwait
jg
cmp
cwde
xor
outs
test
iret
imul
xlat
imul
(bad)
shr
and
pop
fldenv
xchg
je
stos
and
xor
stc
sti
sub
cmp
xor
mov
dec
fcmovnb
xchg
outs
inc
ds
das
sbb
push
xlat
push
mov
mov
push
mov
int3
add
(bad)
(bad)
jmp
sbb
ffree
dec
repz
retf
adc
test
push
aaa
shl
xbegin
ret
mov
pop
inc
jnp
js
sbb
or
repz
pop
inc
inc
jo
fld
xchg
fs
data16
je
add
nop
jbe
ins
inc
cmp
test
sar
cs
mov
add
outs
xchg
imul
ja
iret
fadd
stos
nop
(bad)
mov
mov
dec
outs
imul
push
lds
ins
sub
aam
push
lahf
ret
imul
bound
repz
jnp
ss
mov
iret
inc
lods
es
aam
hlt
cmps
pop
cmp
cwd
xor
xlat
jae
arpl
mov
pop
retf
ret
out
arpl
call
push
and
xor
js
adc
fldcw
xchg
(bad)
xor
jl
in
into
xchg
enter
movs
dec
pop
outs
ror
ins
mov
lds
adc
fwait
cdq
imul
adc
mov
push
and
pop
(bad)
std
push
cmp
and
mul
push
test
mov
push
scas
pop
mov
ret
push
lea
fcom
aas
div
push
mov
cmp
daa
xchg
and
movs
mov
enter
or
mov
mov
out
mov
pop
inc
push
mov
jmp
add
or
sbb
aam
(bad)
inc
add
pusha
dec
xor
ror
popa
dec
imul
js
or
(bad)
pop
jno
imul
mov
mov
mov
nop
pop
push
mov
push
and
retf
ret
or
xor
rol
fyl2x
mov
mov
push
dec
mov
push
mov
adc
or
shl
sub
aad
hlt
jecxz
jmp
mov
xor
ja
cwde
and
xor
pushf
inc
movs
call
fadd
out
mov
inc
pop
cld
dec
and
adc
or
mov
jmp
call
dec
pop
shl
add
and
test
sub
xor
popf
xchg
(bad)
dec
jo
xchg
call
div
xchg
gs
imul
adc
sti
loopne
pop
mov
mov
or
scas
jmp
adc
stos
cmps
mov
call
repnz
jp
dec
xor
dec
xor
in
movs
jae
bound
dec
in
mov
push
sub
jmp
xor
mov
pop
mov
sbb
outs
cmps
js
pop
pop
sub
pop
imul
sbb
sbb
push
cwde
cld
ins
scas
je
fmul
fs
mov
inc
mov
and
fisubr
jno
jns
pop
stos
sbb
stos
dec
mov
and
pusha
in
sbb
cli
(bad)
call
jle
dec
shl
loope
push
cmps
and
xchg
out
rol
mov
jl
repz
cmps
(bad)
push
inc
sub
fsubr
mov
adc
stos
inc
add
lock
movs
push
sti
out
push
sar
test
aas
sbb
cwde
nop
out
sqrtps
ss
inc
mul
inc
retf
push
mov
xchg
cmp
and
cmp
mov
push
clc
(bad)
mov
add
mul
push
pop
dec
inc
popw
pop
add
cmp
jb
mov
cmp
pop
mov
cmps
sbb
cmp
pop
jo
mov
fdivr
test
fdivr
rcr
jp
xchg
jbe
mov
push
dec
ret
jecxz
push
ror
ret
xor
mov
je
and
sbb
fistp
push
jmp
imul
popa
dec
push
cmp
call
push
jmp
iret
xchg
pop
mov
aam
aaa
mov
mul
jb
adc
(bad)
xor
icebp
fcom
nop
sbb
shr
mov
cmc
int3
jg
(bad)
not
push
and
dec
pop
aas
xchg
stos
rcr
jg
sbb
inc
jb
pop
(bad)
adc
movs
mov
retf
xchg
mov
dec
ffree
ret
aaa
push
mov
(bad)
push
jae
fwait
inc
pop
adc
sbb
(bad)
loope
add
sti
call
xchg
ins
stos
(bad)
into
push
retf
(bad)
sub
push
(bad)
ins
mov
test
inc
mov
mov
jg
dec
add
sub
and
and
mov
or
dec
push
dec
nop
pop
mul
adc
pop
push
add
jp
push
sub
aaa
adc
jb
jmp
add
ret
sub
pop
call
jecxz
in
pop
adc
push
jnp
out
gs
rol
je
pop
pop
xchg
push
jnp
stos
movs
or
(bad)
xlat
retf
out
cli
repz
pop
fld
outs
pop
jle
pusha
push
jp
adc
les
cli
push
cmp
lea
ds
xlat
ret
adc
add
enter
mov
sub
shrd
adc
aas
retf
mov
pop
fnstenv
cmp
test
add
into
lods
add
clc
arpl
inc
mov
shr
cmp
rcl
add
ret
mov
daa
xlat
mov
add
adc
jnp
sbb
fimul
int
push
cwde
push
sti
mov
imul
mov
(bad)
cwde
cmps
jp
sub
rcr
push
lahf
(bad)
ret
or
push
sub
cwde
in
in
inc
stc
jb
arpl
xchg
das
ss
sbb
sti
inc
and
popf
pop
and
mov
loop
add
out
fld
sbb
in
pop
aam
aam
cli
and
test
repnz
jns
xchg
pop
pop
mov
mov
aaa
jecxz
enter
daa
pop
push
cmp
and
sar
ins
sub
and
test
mov
pop
push
xor
fisttp
std
loop
xor
mov
mov
mov
icebp
push
push
cmp
or
or
fild
inc
rcl
xchg
inc
mov
jo
pusha
iret
inc
imul
sub
jmp
sub
jnp
mov
fiadd
fstp
ins
push
es
imul
ins
ror
adc
or
mov
cmps
cmps
jmp
les
inc
div
or
jp
cdq
pop
inc
pop
xchg
in
pop
pop
dec
xor
test
loopne
ja
mov
push
cmp
cmp
inc
lea
xchg
dec
nop
hlt
inc
inc
cmps
mov
cdq
xlat
scas
mov
daa
ins
and
mov
pop
and
adc
in
pop
pop
push
sbb
idiv
sub
out
dec
call
int
(bad)
xor
xchg
push
cmp
pop
adc
inc
cmps
jnp
iret
or
call
jmp
neg
jae
test
xor
push
imul
or
test
js
fstp
xchg
addr16
(bad)
leave
cmp
ins
mov
cwde
mov
mov
sub
(bad)
scas
inc
arpl
cmp
test
aam
jmp
mov
(bad)
or
xchg
lods
(bad)
mov
xchg
lods
outs
xchg
xor
retf
inc
xchg
and
mov
cld
inc
das
xor
in
cmps
xor
hlt
cmp
(bad)
inc
into
fild
sar
xchg
lock
xchg
daa
mov
xor
jbe
ss
js
and
shl
jns
dec
mov
pop
push
add
fsubrp
ja
dec
or
das
icebp
jbe
es
int
(bad)
(bad)
cmps
lock
and
outs
imul
or
imul
retf
fsubr
call
and
ins
aaa
cs
push
xor
loopne
fist
jne
je
test
test
loope
es
sahf
xchg
or
test
push
fcmovne
popa
fprem
fs
retf
adc
mov
push
pop
sub
out
or
test
cdq
mov
push
(bad)
inc
mov
pop
leave
sbb
je
stc
lds
cmp
dec
or
fnsave
cli
sub
jmp
je
xor
shr
adc
hlt
(bad)
xor
rol
dec
adc
lock
push
mov
and
(bad)
out
jns
push
aam
and
mov
mov
xchg
mov
shl
mov
pop
addr16
mov
or
jle
jp
push
sbb
punpckhdq
pop
je
movs
ss
inc
adc
sti
inc
dec
int
sub
(bad)
mov
pushf
fsub
mov
jns
push
dec
repz
mov
adc
fld1
push
cmp
sub
xor
aam
and
mov
aam
mov
pop
rcr
mov
daa
cmp
xchg
dec
adc
push
bound
clc
jge
ror
in
mov
cmp
or
lods
pop
pushf
je
cmps
sbb
adc
and
retw
outs
cmp
or
and
jmp
nop
es
adc
xchg
mov
xor
jmp
mov
popf
lock
test
imul
repnz
call
(bad)
jnp
into
dec
shl
jae
test
and
dec
mov
out
jnp
sub
xchg
mov
jnp
aaa
in
jbe
cmps
int3
xchg
stos
mov
imul
addr16
jae
jb
scas
lods
mov
inc
in
push
nop
aad
add
dec
mov
push
mov
sub
jle
and
pop
jg
mov
push
xchg
inc
dec
call
fmul
dec
add
les
stos
inc
pop
mov
vmread
sti
aam
mov
jae
lahf
std
or
adc
pop
mov
call
mov
fsubr
inc
push
push
mov
sbb
sti
add
mov
scas
cli
adc
adc
mov
mov
icebp
jecxz
push
jnp
xor
ffreep
sti
enter
cld
sub
inc
or
pop
(bad)
mov
adc
xchg
cs
jge
jmp
inc
rol
sti
shr
xor
xchg
xor
inc
mov
mov
xlat
cmp
inc
fidiv
imul
jle
call
add
in
or
add
nop
pop
mov
test
mov
ss
or
dec
pop
cmp
shl
fsubr
movs
sbb
cmp
push
dec
xor
adc
loope
pop
or
fincstp
xlat
retf
xchg
int
and
jp
mov
dec
lods
and
mov
and
ins
cmp
jbe
sub
ret
fcmovb
sub
mov
mov
pop
scas
sbb
fwait
clc
stc
mov
sar
dec
sbb
xor
mov
std
repnz
pop
aaa
fsub
call
push
and
xor
enter
test
scas
pop
mov
jb
fnstenv
int
push
inc
xlat
or
repnz
hlt
fild
sub
sbb
xchg
inc
outs
push
sub
out
or
je
aas
mov
hlt
lods
sbb
arpl
lea
(bad)
push
lock
outs
pusha
mov
add
retf
mov
inc
std
lds
push
lahf
dec
or
fisttp
(bad)
and
cmp
push
add
xchg
mov
jle
out
jge
es
cmps
mov
xchg
mov
daa
xor
rcl
lea
loope
cli
retf
ror
fwait
call
paddq
add
outs
mov
inc
call
popa
pop
adc
mov
xchg
ret
jbe
mov
(bad)
sbb
xchg
add
sti
ret
or
dec
add
std
mov
mov
add
clc
aam
daa
stc
test
addr16
xor
leave
repnz
inc
in
test
cdq
cdq
out
mov
pop
enter
gs
ds
shl
(bad)
(bad)
std
xchg
xchg
sbb
imul
inc
imul
xchg
cmc
jae
icebp
mov
fld
jl
sahf
cmp
cs
movs
test
repnz
cmp
stc
std
push
lds
sahf
leave
mov
loop
cdq
fadd
dec
mov
or
xchg
push
inc
adc
pop
(bad)
xchg
shl
stos
push
mov
mov
enter
imul
cmp
jge
mov
lods
lss
mov
addr16
ja
or
mov
xchg
inc
outs
and
ret
cmp
call
aaa
neg
movs
fucom
sbb
shl
pushf
push
mov
pop
or
push
call
out
fldenv
jmp
jnp
fwait
push
sub
loop
retf
loop
dec
hlt
jns
jo
jbe
out
out
xchg
jmp
movs
fcmovbe
(bad)
repnz
stc
mov
jge
jno
fadd
ret
sbb
inc
retf
push
add
sar
fadd
sbb
(bad)
jbe
shr
retf
lods
bnd
imul
(bad)
and
xor
cmp
dec
inc
test
pop
bound
add
stos
jb
jo
jmp
mov
inc
dec
retf
enter
sahf
xlat
sti
xchg
mov
lock
pop
rol
stos
or
das
cmp
push
arpl
sub
(bad)
jmp
or
mov
fs
and
cmp
ret
and
cdq
push
mov
sub
ret
fist
xor
out
dec
dec
jg
adc
pop
test
push
hlt
mov
cmc
xchg
fwait
mov
push
jno
shl
jb
idiv
inc
push
push
xor
mov
mov
(bad)
jno
mov
sysenter
inc
int
jl
dec
das
ja
cmp
call
in
rcr
sub
ja
jae
ja
jmp
adc
mov
aam
xchg
jp
das
pop
mov
mulps
(bad)
dec
int3
and
mov
sub
xchg
aam
icebp
add
sbb
adc
cmp
sar
jecxz
sbb
jbe
mov
imul
aad
mov
test
xor
into
and
ins
or
xor
jmp
sahf
cs
xor
dec
int3
push
sbb
fldcw
push
dec
xor
ds
xchg
xlat
jle
nop
mov
jle
cs
push
int
push
arpl
jmp
aad
in
xchg
xchg
shr
fnstcw
or
and
fucomp
nop
fs
(bad)
(bad)
mov
sub
pop
xchg
pusha
adc
ja
and
mov
lock
std
xlat
inc
fcom
mov
dec
imul
jmp
push
mov
pop
lock
pop
push
jecxz
mov
adc
sub
neg
stc
(bad)
stos
inc
xor
stos
mov
outs
ror
arpl
cmp
mov
push
mov
ss
outs
jle
mov
sti
es
mov
es
fbld
sub
and
fcmovnb
mov
in
fucom
pop
imul
mov
mov
in
(bad)
nop
dec
mov
fs
add
mov
sar
sbb
and
aam
mov
test
mov
rcr
ds
jp
jl
clc
imul
rol
repnz
xchg
jle
loope
jecxz
cmp
mov
sub
pop
cmp
int3
les
rcr
iret
inc
cmp
cmp
and
mov
pop
mov
mov
mov
mov
rcl
es
das
mov
dec
xchg
cmp
or
(bad)
or
jb
pop
les
adc
xor
push
call
dec
mov
add
inc
sbb
and
test
icebp
stos
adc
scas
call
xchg
imul
lea
xchg
mov
mov
mov
(bad)
mov
add
outs
jo
in
dec
je
in
in
cmp
cmc
out
loopne
pop
mov
mov
(bad)
push
into
(bad)
gs
pop
dec
jb
sub
stos
(bad)
mov
push
in
loopne
ins
out
pusha
mov
clc
inc
test
push
sub
jae
or
adc
ja
popa
xchg
retf
xchg
enter
test
push
inc
jae
sbb
ins
imul
push
icebp
pop
cmc
push
jb
jbe
jmp
rol
cdq
aad
test
jle
sbb
hlt
jle
lods
scas
push
ins
xlat
outs
dec
cmc
jge
cdq
sahf
mov
(bad)
js
add
das
cmps
push
(bad)
pop
push
cmp
mov
mov
push
xor
cdq
rcl
pop
mov
push
leave
popf
push
fucomi
mov
adc
stos
push
push
xchg
fisub
xor
sub
lock
pop
fsubr
mov
pop
mov
stos
push
adc
mov
jnp
sub
out
push
mov
jbe
test
mov
or
pushf
sti
push
sub
mov
push
es
into
ja
mov
jae
sbb
lea
es
mov
jmp
inc
xchg
mov
das
pop
nop
dec
cmc
adc
jp
and
dec
sub
out
pop
retf
fs
jmp
mov
jge
sub
repz
outs
add
inc
inc
jbe
jne
or
sbb
stos
shl
ja
ja
cmp
xchg
pop
je
(bad)
jge
popa
or
pop
xor
add
aad
outs
stc
outs
(bad)
fmulp
retf
xchg
xchg
inc
cdq
neg
dec
sbb
cmp
xchg
jae
inc
rol
shr
dec
mov
sub
or
pop
pop
add
in
push
out
sub
jmp
and
cmps
(bad)
xlat
dec
dec
shl
jae
add
mov
(bad)
dec
and
pusha
mov
mov
cmps
dec
ret
imul
mov
cmp
inc
pop
out
(bad)
mov
dec
out
addr16
push
add
cmp
xor
inc
lods
repz
push
clc
mov
in
test
or
vmwrite
mov
out
fsub
lods
repz
sahf
cmp
inc
sbb
fs
xchg
push
or
sub
movs
jmp
cmc
adc
loope
mov
dec
stos
xchg
fwait
dec
aam
inc
or
imul
xchg
mov
adc
pop
and
jo
jp
hlt
mov
dec
xor
and
cmps
cmp
mov
push
xchg
rol
cmc
jnp
push
xor
push
es
daa
iret
mov
jmp
movs
lods
arpl
mov
sti
jo
ins
jp
inc
inc
call
jae
adc
xor
(bad)
sbb
(bad)
outs
inc
call
sbb
call
dec
adc
and
push
fwait
test
rcr
xchg
push
push
add
mov
fadd
xchg
pop
ins
cmp
out
push
into
imul
retf
or
data16
(bad)
repnz
jmp
xchg
(bad)
xchg
hlt
sar
add
pop
pop
lock
inc
or
out
aas
out
sub
gs
movs
test
xor
push
push
std
jmp
ss
cmp
or
sbb
sar
cli
leave
xchg
scas
mov
mov
adc
or
sub
xor
data16
jae
pop
std
pop
movs
push
test
jnp
pop
js
sti
sub
jge
sub
xor
mov
sub
cmp
xchg
stc
aaa
lahf
inc
xor
mov
test
mov
fs
int3
ss
pop
inc
mov
out
cmp
ss
retf
xchg
mov
lods
xor
sbb
stos
inc
push
scas
daa
xor
add
fild
push
jo
pop
inc
push
lahf
jnp
xchg
pop
pop
and
xor
add
xor
cmp
jmp
(bad)
pusha
movs
fwait
dec
xor
aas
jmp
out
mov
xor
adc
xchg
mov
sbb
pop
adc
push
sahf
hlt
imul
fst
xor
out
in
jecxz
jno
sbb
and
out
ds
xchg
and
retf
adc
and
neg
sub
test
sbb
ds
push
sub
xchg
jbe
add
xlat
adc
fidiv
outs
adc
mov
ins
pop
add
cmp
mov
pop
cmp
movs
adc
mov
push
repnz
add
imul
hlt
jae
outs
or
pop
and
inc
(bad)
out
inc
or
pop
cmps
dec
jbe
xchg
dec
(bad)
jo
jg
jmp
retf
daa
stos
in
xchg
test
movs
stos
ja
jecxz
sbb
jmp
ror
mov
xchg
ss
stos
and
test
push
adc
lods
enter
nop
xlat
hlt
loope
cmp
cs
scas
inc
inc
(bad)
jle
or
invd
aad
xchg
sti
ret
mov
cmp
xor
jmp
adc
and
es
(bad)
pop
add
out
fcmovnb
add
cmp
fs
inc
sar
ss
fstp
cmp
ror
int
retf
pop
push
in
xchg
xchg
leave
inc
test
sub
popf
sbb
gs
sbb
xchg
dec
in
jns
fisubr
(bad)
fisubr
test
mov
mov
and
push
stos
pop
xchg
aas
jae
mov
ficomp
iret
pushf
push
imul
loope
jae
cmps
cmps
fnstcw
shl
jmp
icebp
pop
or
xchg
pop
sub
cmp
push
loopne
sbb
push
mov
stos
retf
mov
(bad)
fadd
pop
das
push
push
mov
scas
fldcw
cmps
sbb
push
loopne
imul
loope
jb
aas
or
popa
mov
dec
adc
jmp
jno
scas
dec
lahf
inc
dec
inc
push
cmc
xor
popf
adc
in
jnp
push
fbld
xchg
out
jnp
xchg
psrad
cli
call
dec
icebp
rdmsr
jno
add
sbb
pop
das
sub
xchg
jne
xchg
mov
push
push
sub
dec
pop
sub
int
sbb
out
ret
sbb
or
and
arpl
test
es
lods
shl
xor
hlt
movs
test
mov
xchg
ja
add
xor
in
cmp
xor
sti
or
xor
mov
push
inc
cmc
jl
clc
inc
or
add
(bad)
or
sub
or
mov
cmp
jbe
xchg
(bad)
js
and
pusha
pop
mov
repz
into
addr16
dec
dec
aaa
ja
lds
or
je
jns
iret
(bad)
jmp
adc
cmp
push
cmp
jmp
cmps
adc
and
jae
xchg
call
dec
push
mov
dec
jbe
mov
mov
cli
arpl
push
jnp
test
sti
in
xchg
xchg
push
inc
mov
or
or
neg
js
pusha
or
xor
jnp
sahf
push
or
sub
adc
fwait
test
push
fs
stos
test
pop
repz
ret
mov
xchg
fstp
loope
push
stos
test
mov
xchg
mul
scas
add
(bad)
ja
xchg
call
dec
repnz
lods
imul
fisubr
mov
stos
(bad)
call
cmp
ja
jle
push
mov
sbb
pop
jge
retf
push
and
mov
shr
es
inc
pop
cmp
dec
js
retf
or
test
mov
or
xchg
cmp
pop
jb
addr16
or
or
jecxz
out
test
icebp
rcr
call
xor
mov
cmp
sub
es
jb
aad
out
xchg
outs
mov
mov
pop
push
push
mov
mov
cs
sub
xchg
adc
mov
popf
(bad)
ds
test
jnp
aad
xchg
pop
mov
add
mov
js
mov
xchg
daa
xchg
jmp
repnz
fwait
call
inc
and
sub
jg
dec
xchg
inc
or
sub
mov
or
shufps
mov
(bad)
(bad)
mov
arpl
scas
push
dec
pop
hlt
ss
mov
(bad)
ror
dec
add
in
xchg
cli
fiadd
mov
xchg
xor
jmp
pusha
or
bound
call
mov
mov
ds
or
mov
cdq
inc
inc
sbb
hlt
xor
sbb
add
fisub
out
inc
shl
aas
mov
sahf
dec
pop
dec
(bad)
pop
xchg
retf
push
nop
xchg
mov
retf
pop
mov
(bad)
pop
imul
xchg
ror
jecxz
iret
popf
arpl
out
adc
test
popf
outs
cdq
inc
pop
xor
or
adc
in
leave
push
add
mov
into
xor
jbe
or
push
jnp
xor
fisubr
pop
imul
outs
ss
push
lahf
sbb
in
retf
imul
push
sbb
lock
out
sub
add
mov
sbb
pop
aas
mov
out
(bad)
sub
fsubp
and
jmp
cmps
out
cmp
or
ds
aas
pop
dec
dec
outs
mov
cld
arpl
xchg
pushf
xchg
mov
outs
fbstp
mov
sbb
pop
sbb
or
cdq
mov
cdq
in
retf
mov
pop
sub
dec
pop
xchg
test
ss
add
cmp
mov
jnp
pop
cmp
mov
fs
out
div
es
sub
mov
mov
push
scas
mov
jge
retf
fs
cmps
cmps
movs
push
pop
fstp
cs
shl
sub
and
jo
inc
stc
pop
fild
inc
push
pop
icebp
test
xchg
lea
sub
pop
mov
popf
ins
jne
fs
les
mov
dec
out
cmp
popa
jmp
dec
inc
stos
addr16
(bad)
pop
cmps
sbb
stc
push
xchg
jb
ins
sahf
pop
ja
stos
mov
mov
xchg
(bad)
(bad)
stos
sahf
mov
jmp
rcr
mov
ins
push
jecxz
ds
pop
ss
pushf
cs
ret
sub
xchg
(bad)
imul
fsub
ins
in
sahf
pop
mov
push
cwde
jae
sbb
and
sti
(bad)
jg
lock
mov
or
or
or
loope
add
test
fst
stos
ret
jp
push
les
hlt
jmp
repz
sbb
aas
cld
inc
stos
sbb
pushf
mov
xchg
sbb
cmps
sbb
adc
repnz
mov
addr16
jbe
jo
dec
mov
cmp
pop
retf
pop
jp
repz
or
inc
mov
or
(bad)
retf
pop
push
into
arpl
stc
xor
jnp
mov
mov
adc
add
pop
loope
outs
cmps
pop
or
test
push
sub
outs
jecxz
lock
xchg
or
dec
mov
pop
stos
lods
cmp
ins
mov
sti
aam
imul
aam
sbb
push
dec
es
adc
scas
out
adc
xchg
mov
jb
adc
daa
inc
(bad)
in
rcl
outs
cmp
adc
push
arpl
xchg
inc
push
lods
push
fcom
pop
pop
mov
movs
loopne
retf
test
jae
xchg
xor
out
or
daa
stos
loope
movs
cdq
pop
(bad)
loopne
iret
stos
aaa
lods
out
cmp
and
bound
pop
adc
xor
mov
aad
(bad)
movs
loope
les
fs
(bad)
mov
dec
pop
push
add
mov
arpl
or
xlat
clc
inc
into
test
mov
call
pop
in
inc
retf
jno
mov
push
out
aad
aad
icebp
mov
or
jnp
je
imul
or
call
mov
and
stos
stos
je
jns
lods
add
cmps
cwde
pusha
push
jmp
sub
fisubr
imul
stos
test
lock
cmp
aam
mov
int3
imul
sub
push
dec
enter
jo
sbb
idiv
dec
mov
jns
inc
dec
mov
adc
(bad)
jmp
push
adc
test
test
cmp
push
dec
pop
jbe
outs
or
xchg
pop
aam
or
inc
and
xchg
mov
cli
fild
inc
pop
cmps
push
ja
inc
jmp
cmps
outs
outs
retf
data16
es
retf
sbb
div
pop
call
aaa
ins
data16
and
jb
sub
mov
add
jg
xor
ja
pop
shl
add
jp
sbb
ret
outs
inc
mov
cmps
shl
adc
fdivr
inc
cmps
xchg
enter
pop
mov
imul
pop
daa
cli
inc
jnp
fisub
mov
add
lea
imul
and
jmp
lahf
scas
pop
add
ins
sbb
ja
and
sub
adc
fwait
mov
cmp
cmp
cmp
and
or
push
xchg
scas
cmps
mov
pop
stc
cmc
jne
out
pop
and
xchg
and
dec
fs
test
stos
shl
or
xchg
sar
lods
xor
adc
call
sti
aam
mov
stos
(bad)
arpl
ds
outs
div
and
mov
stc
cmp
mov
repz
or
jg
mov
push
push
push
adc
mov
or
sub
sbb
rcl
in
sbb
pop
fbstp
or
cmps
and
xchg
pop
inc
lahf
ds
push
nop
inc
jl
cli
mov
cmp
mov
shr
cdq
inc
into
adc
mov
and
pop
cmp
jbe
outs
cmps
and
sub
xor
outs
cmp
sub
cmp
push
(bad)
aaa
adc
add
xor
hlt
cli
xor
cmp
cli
mov
adc
movs
pop
aam
fist
ret
(bad)
(bad)
movs
rol
jae
les
fimul
ret
sbb
xor
jg
xchg
xchg
stos
inc
btc
iret
mov
pop
xor
push
sub
push
push
mov
sub
in
xchg
out
or
or
ret
data16
xchg
or
pop
jl
sub
mov
psubd
push
scas
mov
hlt
inc
inc
ins
fwait
test
add
outs
dec
push
pop
or
mov
add
mov
int
dec
adc
dec
fisttp
fdivr
cli
out
cmp
mov
cld
pop
cmp
dec
es
stos
sbb
or
pop
mov
rol
lods
xor
sbb
int3
ja
call
push
out
aad
mov
out
loopne
xchg
add
pop
pop
push
push
sbb
mov
mov
xchg
test
(bad)
xchg
xchg
pop
mov
ins
ret
dec
mov
das
test
jg
xchg
jmp
mov
or
xlat
ficom
push
jle
cdq
jns
retf
mov
push
out
pop
xchg
adc
sbb
push
je
mov
dec
dec
mov
cmps
xor
lock
cmp
or
xchg
cmps
movs
mov
dec
retf
xchg
rol
xchg
pop
or
sbb
(bad)
sti
out
shl
out
mov
or
sbb
ds
dec
mov
mov
mov
jecxz
push
jge
ret
mov
mov
inc
cmps
sub
js
not
fimul
mov
mov
pop
sti
mov
loop
jmp
mov
test
fild
fld
fwait
or
lods
push
mov
push
sub
adc
jp
sahf
inc
imul
xchg
scas
xchg
idiv
jns
cmp
add
xchg
addr16
xchg
es
(bad)
pop
retf
mov
mov
jl
sahf
or
sub
jl
jmp
mov
mov
pop
jp
call
shr
dec
das
pop
mov
jecxz
or
xchg
fmulp
inc
push
outs
jecxz
repz
leave
fadd
pop
je
ret
add
lahf
sbb
inc
mov
out
jle
ficomp
(bad)
loopne
fld
inc
sbb
stos
stos
jecxz
or
and
fsub
or
add
inc
pop
jbe
addr16
imul
mov
fild
or
dec
mov
(bad)
imul
sbb
jmp
neg
mov
cmp
inc
(bad)
data16
pop
or
movs
xchg
fcmovb
or
not
retf
cmps
ja
inc
mov
lods
ja
push
stos
xchg
push
sub
call
retf
retf
loop
mov
jnp
cmps
mov
push
inc
push
mov
pop
push
pop
test
retf
das
idiv
cmp
xchg
mov
cmp
fs
pop
mov
scas
jg
or
scas
fwait
in
or
ss
mov
repz
jnp
mov
jp
leave
mov
xchg
sub
adc
xlat
aas
adc
xchg
mov
push
push
inc
daa
or
data16
pop
push
(bad)
out
mov
mov
rol
jb
out
pushf
dec
test
mov
mov
mov
fdivr
mov
mov
mov
push
mov
sbb
xor
or
cld
lock
test
out
xor
push
jg
jbe
cmp
xchg
mov
push
fidivr
addr16
xchg
adc
in
or
ret
dec
das
(bad)
cmp
test
mov
sub
sbb
cmp
ss
jmp
xchg
cmp
aad
inc
pop
jb
mov
pop
jge
adc
clc
push
sbb
sub
retf
loop
mov
sar
xchg
scas
pop
ja
jg
sub
or
in
pop
call
dec
mov
fmul
pop
cwde
ja
neg
sub
lods
mov
popa
push
fbstp
fdivp
es
mov
cli
les
lahf
mov
xor
jecxz
jno
pop
call
in
dec
or
mov
mov
mov
sahf
inc
mov
or
aaa
add
je
sub
call
mov
addr16
es
dec
dec
popa
stos
out
jbe
add
add
mov
or
push
stc
cmc
scas
sub
(bad)
imul
repz
scas
and
cmp
or
out
ins
push
dec
fimul
retf
or
jbe
jbe
sbb
addr16
or
mov
mov
daa
mov
imul
bound
jbe
or
fucom
xor
jmp
div
xor
packuswb
jle
fsubp
sahf
and
(bad)
push
mov
and
cmc
xor
sub
fild
into
aam
inc
push
push
lock
adc
in
out
(bad)
mov
sub
ss
retf
retf
inc
je
push
mov
jae
ja
popa
xor
loop
and
retf
scas
jnp
or
in
mov
ss
jns
push
sub
add
leave
push
sti
adc
push
xor
mov
pop
repnz
sub
push
imul
or
neg
mov
pusha
int3
jb
pop
hlt
xchg
inc
dec
cmps
jno
ss
inc
pop
mov
repz
mov
add
les
cmp
scas
fbld
or
mul
inc
mov
idiv
adc
mov
push
rol
mov
jp
inc
push
fist
push
enter
pusha
xor
imul
cmps
adc
xor
pop
or
xor
jp
cdq
add
mov
fwait
jnp
pop
jecxz
popf
ja
or
idiv
ja
sbb
jmp
scas
jmp
outs
adc
adc
pop
test
aaa
daa
cmp
fcmovb
fild
xchg
mov
loopne
fbld
cmp
std
add
mov
daa
retf
aas
sub
dec
jb
and
or
retf
rol
adc
jb
ins
fmul
out
mov
cmp
jbe
cmp
push
push
nop
dec
test
(bad)
cmp
xor
and
cmp
inc
or
fisubr
cmp
call
add
xlat
cli
add
(bad)
mov
and
mov
pop
jno
es
bnd
mov
outs
pop
and
adc
push
pop
mov
adc
xlat
aas
gs
mov
rcr
push
les
div
jo
out
jmp
into
es
stos
call
xchg
mov
fstp
push
push
fisttp
jecxz
daa
cmp
fcomp
adc
pop
xchg
mov
lea
pop
xchg
jns
pop
aas
pop
mov
cmp
out
stos
mov
jecxz
or
sub
retf
jb
mov
int3
popf
add
mov
scas
nop
(bad)
ror
pop
iret
inc
loop
outs
xchg
jg
repz
sub
sbb
or
xchg
inc
mov
mov
ins
clc
ucomiss
cmp
ds
xor
pop
mov
(bad)
adc
stc
in
jbe
jmp
inc
ror
mov
shr
pop
cli
jp
loope
sbb
outs
(bad)
sti
sar
dec
jae
dec
mov
lods
sbb
sbb
shl
enter
jecxz
add
call
cli
xchg
xor
mov
inc
dec
mov
aad
or
and
(bad)
adc
xchg
pop
cmps
shr
adc
mov
imul
hlt
cmps
adc
rol
repnz
rcl
into
(bad)
std
imul
jl
cmp
push
imul
(bad)
gs
dec
cmp
mov
in
call
jo
test
push
sbb
jbe
adc
int
fs
inc
es
repz
mov
sbb
scas
lods
rol
std
jbe
int3
push
jb
inc
cld
js
inc
sbb
adc
mov
sub
cmc
imul
or
pop
push
bound
mov
push
in
mov
sbb
retf
inc
lea
ret
lahf
sbb
sub
mov
xor
inc
dec
stos
repz
push
adc
sbb
and
xor
fsubr
xchg
xchg
adc
prefetchw
das
or
adc
inc
ds
mov
rol
int
adc
cmps
jo
mov
mov
es
push
jp
or
sbb
sub
sbb
mov
add
es
sbb
ud2
es
jnp
xlat
xlat
xlat
ss
jmp
cmps
js
(bad)
ss
push
retf
sti
mov
(bad)
call
jmp
mov
aaa
stos
push
stos
dec
fwait
ja
addr16
aaa
loop
ds
adc
ret
mov
out
xchg
inc
cmps
or
jp
ret
cmps
pop
cli
or
fild
sub
addr16
or
push
mov
push
call
inc
inc
xor
fist
or
jmp
mov
fidiv
std
nop
pop
lods
data16
call
mov
lods
pop
mov
clc
retf
xchg
cli
xor
sti
push
nop
in
mov
mov
xor
cs
or
loope
mov
test
mov
stos
mov
clc
mov
xchg
mul
xor
adc
jmp
call
das
xchg
lds
cmp
retf
neg
ret
sti
nop
push
test
mov
sub
lods
jbe
(bad)
sbb
xor
xlat
(bad)
(bad)
retf
mov
xchg
fdivr
mov
dec
inc
data16
ss
adc
cmp
push
mov
or
idiv
sbb
inc
imul
mov
scas
inc
hlt
(bad)
hlt
clc
sbb
ret
(bad)
addr16
adc
xchg
lods
jl
dec
cmps
(bad)
adc
cmp
or
mov
fidiv
popf
mov
stos
cwde
sti
ins
icebp
movs
or
pop
adc
lea
es
dec
push
dec
and
hlt
fldcw
sti
mov
arpl
dec
xor
daa
in
add
fstp
add
pop
mov
xchg
mov
inc
pop
ins
sub
(bad)
test
idiv
test
and
(bad)
cmp
mov
xchg
pop
push
pop
repnz
es
fwait
(bad)
fdiv
pminsw
call
dec
lock
pusha
ins
(bad)
and
cld
imul
dec
je
lock
mul
imul
(bad)
test
sbb
add
outs
inc
and
retf
test
xchg
out
pop
jmp
push
lods
fwait
push
dec
mov
cld
into
retf
stos
push
xor
enter
imul
cdq
retf
pop
mov
mov
jmp
outs
cmp
sbb
sbb
cmps
stos
(bad)
loop
mov
mov
push
outs
cmps
(bad)
jae
add
jbe
out
(bad)
jle
ret
jnp
dec
and
dec
mov
fs
inc
push
push
xchg
out
mov
sbb
cli
daa
xor
xor
lock
out
lea
fdivr
adc
push
jbe
popa
std
push
shl
data16
loopne
xchg
sahf
inc
mov
fs
jae
inc
mov
push
sub
pop
loop
pusha
cmc
sub
cmp
ins
jmp
sbb
pop
mov
dec
add
gs
or
add
inc
pop
icebp
push
int
jmp
xchg
mov
push
pop
or
(bad)
das
fwait
stos
mov
outs
xor
popa
cli
out
pop
inc
jp
mov
stos
fsubrp
inc
sbb
xor
pop
push
daa
mov
or
scas
cmp
xchg
iret
dec
cs
fwait
bound
sbb
fwait
mov
jb
xchg
(bad)
pop
or
or
push
inc
pop
cld
add
int3
adc
inc
push
sbb
call
mov
movs
(bad)
fisubr
cwde
sub
mov
(bad)
in
adc
cmp
cli
xchg
cmp
mov
jle
not
jns
adc
mov
popf
jo
cmp
outs
fs
mov
cld
xor
jnp
pop
sub
sti
xchg
imul
cmp
sub
mov
mov
push
ja
outs
(bad)
mov
add
fdiv
mov
jmp
ret
enter
sti
push
jp
or
aad
daa
retf
cmc
xchg
dec
xchg
mov
call
dec
push
or
ja
jp
out
sti
sbb
dec
jmp
add
retf
jno
push
xchg
cmp
or
cwde
loopne
ret
pop
icebp
xchg
xchg
ror
push
not
scas
or
mov
cli
cmp
fwait
jbe
inc
scas
cmps
sbb
mov
pusha
fwait
push
pushf
adc
jnp
push
mov
(bad)
push
pop
mov
xchg
adc
mov
jl
push
adc
mov
rcl
xor
imul
shl
dec
cmps
sub
adc
mov
pusha
shufps
cmp
leave
ins
cli
lahf
retf
aas
ins
mov
jecxz
arpl
icebp
mov
pop
push
pop
jnp
mov
sub
push
in
add
jg
dec
out
jns
xchg
lods
and
dec
pusha
not
sub
pop
sbb
test
fsub
out
iret
out
fsubr
call
movs
xchg
in
xor
jg
adc
inc
xor
fdivr
adc
cmp
pop
xchg
inc
mov
mov
adc
gs
mov
stc
pop
popa
sub
test
shl
add
xchg
jp
fwait
lea
or
push
cli
pop
add
fs
push
sbb
pusha
je
xchg
fwait
xor
mov
mov
sub
jge
pop
(bad)
ds
cmp
jo
jmp
add
jb
inc
test
and
add
inc
push
int3
rol
inc
cmps
cmps
mov
sbb
rol
mov
fbstp
fldenv
add
shl
imul
mov
add
push
cmps
pop
and
test
push
sbb
movs
test
movs
mov
ret
stos
push
sbb
cmp
and
aas
mov
ret
int3
xchg
fsub
js
and
adc
adc
and
paddsw
out
retf
rcl
add
stos
lods
test
adc
(bad)
adc
push
retf
fcomp
sahf
and
stos
sti
jp
fwait
xchg
dec
mov
mov
sbb
int
ret
sbb
retf
cmp
mov
shl
rcl
mov
and
js
(bad)
stos
xchg
(bad)
mov
mov
pop
add
icebp
fcmovne
jnp
addr16
dec
loop
jne
jmp
xchg
ffreep
out
adc
mov
lea
push
xor
adc
mov
and
sub
fld
inc
mov
mov
rcr
jp
out
inc
dec
loope
xor
retf
mov
stc
call
jbe
inc
mov
cvttps2pi
sub
ret
jnp
stos
out
or
mov
add
stos
ret
jo
(bad)
xor
push
or
pop
(bad)
es
sub
int3
cmp
or
fwait
jnp
arpl
(bad)
rcl
(bad)
js
les
rol
movs
aas
mov
sub
je
enter
(bad)
sbb
cmc
cs
push
ret
xchg
pop
dec
pop
cmp
out
dec
jo
das
ret
fyl2x
je
in
imul
aad
inc
fs
pop
jno
cmp
cmp
call
sbb
jmp
cli
stos
out
test
mov
cmps
pop
sbb
xor
adc
(bad)
idiv
loope
ror
sbb
test
push
cwde
cdq
pop
es
mov
fs
dec
cmp
xlat
xor
pop
inc
pop
(bad)
pop
inc
stos
mov
fld
dec
push
push
inc
xor
enter
cmc
inc
dec
clc
push
or
addr16
push
push
pop
bound
push
retf
jbe
lds
sub
fdiv
in
jmp
lahf
cmps
test
push
retf
dec
es
jbe
jmp
adc
xlat
push
xchg
imul
cmp
pop
sub
inc
mov
out
jmp
push
add
call
jle
(bad)
lds
mov
retf
adc
mov
in
retf
loop
mov
mov
ror
push
or
mov
sti
inc
mov
(bad)
enter
jbe
xchg
xchg
push
fild
into
icebp
(bad)
sti
and
push
xchg
ds
(bad)
xlat
dec
jb
test
pop
test
pop
mov
xchg
add
in
(bad)
xlat
pop
mov
ret
popf
pop
and
lods
adc
imul
ss
push
push
(bad)
fcmovne
mov
mov
mov
pop
sti
stos
idiv
mov
xchg
push
inc
sbb
and
pop
fprem
jle
cmps
fwait
jmp
mov
lds
mov
or
push
fs
cmp
clc
xchg
ins
xbegin
neg
in
push
xor
es
mov
lods
mov
or
mov
fcomp
sub
mov
dec
pextrw
pop
adc
ret
dec
repnz
pusha
mov
push
jmp
sbb
movs
sbb
loop
cmps
xchg
cli
add
push
inc
fs
(bad)
sti
add
or
sbb
add
jae
out
fstp
es
inc
push
test
push
or
(bad)
or
call
xchg
(bad)
rcr
ss
inc
xor
sbb
mov
popf
mov
js
xchg
mov
jmp
xor
sub
sbb
push
dec
xchg
cmp
jb
pop
test
stos
pop
out
mov
pop
inc
shl
in
xchg
out
stos
xchg
test
mov
add
retf
pop
cmps
leave
xor
adc
daa
pop
jl
jnp
fwait
sub
bnd
shl
ss
mov
retf
(bad)
sti
idiv
jge
push
pop
sar
iret
xchg
fist
mov
ins
inc
retf
push
fdecstp
mov
cmp
mov
fwait
inc
stos
ds
push
xchg
inc
push
scas
arpl
in
jnp
mov
add
outs
neg
jbe
push
xchg
push
xacquire
es
inc
mov
fadd
push
jmp
jnp
lods
push
mov
retf
push
sbb
push
mov
jp
mov
fstp
sub
sub
retf
inc
sbb
jbe
ins
mov
dec
in
jbe
mov
sbb
ror
(bad)
jmp
pop
xchg
inc
in
xchg
mov
stos
or
add
fwait
jg
cmp
or
xlat
fdiv
mov
add
mov
add
push
pop
fist
out
jmp
jle
leave
retf
pop
test
out
fistp
(bad)
(bad)
out
jecxz
mov
loopne
cli
mov
xchg
push
cmps
(bad)
push
fwait
xlat
test
lock
sbb
push
ret
out
aam
push
lods
fidiv
inc
daa
mov
ret
fwait
xchg
call
jge
jp
xor
xchg
cmp
inc
push
cmp
xchg
jbe
jmp
call
mov
or
repnz
into
add
sti
pop
cmc
xlat
stos
xchg
xor
xchg
dec
or
(bad)
cmps
mov
mov
jp
sbb
and
sahf
mov
mov
sub
inc
jb
fstp
push
cmp
mov
sbb
fidiv
(bad)
cmp
dec
mov
pop
popf
push
jnp
and
(bad)
cmp
imul
fisubr
cdq
stc
cs
(bad)
or
ds
movups
cmp
pop
cmp
adc
out
je
jmp
jp
cmps
dec
adc
stos
pushf
outs
mov
pop
and
(bad)
cmp
lock
inc
cmp
adc
sahf
mov
mov
push
inc
jns
sub
mov
retf
sti
out
xchg
into
pusha
int3
pop
fild
out
push
cmp
jns
push
aam
add
or
data16
daa
stc
out
jl
sbb
xchg
out
mov
pop
addr16
push
jp
sbb
(bad)
sbb
sub
push
stos
shl
inc
add
push
(bad)
jnp
jnp
pop
cmp
into
pop
pop
mov
es
push
pop
movs
mov
inc
push
pop
adc
xchg
jno
add
adc
out
or
int3
(bad)
div
mov
cmps
pop
sbb
mov
inc
or
cmp
mov
fld
int
and
mov
dec
dec
retf
sbb
and
daa
or
out
mov
jnp
sbb
pop
shr
sbb
xchg
imul
fcmovb
jmp
jp
push
inc
mul
sbb
(bad)
sub
(bad)
dec
retf
sbb
daa
fwait
xchg
xchg
cmps
jg
push
shr
xchg
pusha
xlat
jb
sbb
aaa
and
push
adc
mov
pop
inc
stos
push
iret
ja
das
div
or
cmp
add
xor
cmp
movs
push
ins
cwde
push
enter
mov
test
retf
sbb
pusha
or
push
sub
daa
jp
scas
pop
jp
push
gs
repnz
pop
(bad)
sbb
out
(bad)
retf
(bad)
out
inc
sar
mov
jg
dec
lahf
jecxz
sub
outs
call
(bad)
sbb
call
inc
cli
inc
(bad)
mov
xchg
out
ja
ss
es
cmp
out
call
sub
dec
addr16
data16
aas
mov
icebp
loope
sub
or
cmp
inc
jge
pop
pop
xchg
or
repnz
fnstcw
mov
out
xlat
jmp
idiv
inc
sbb
gs
mov
ror
out
lds
push
push
sbb
pop
test
cmp
retf
cmps
js
or
call
jmp
ficom
fwait
cmps
and
inc
mov
pop
or
mov
repz
adc
sub
dec
pop
(bad)
pusha
cmp
enter
loop
mov
cmp
sbb
xchg
pusha
pop
stc
fucomi
mov
sar
jmp
xchg
pop
dec
stos
push
out
stos
xchg
mul
push
jle
and
std
out
mov
ja
ja
mov
ja
mov
sub
or
call
inc
and
sub
mov
clc
adc
fs
jo
fcom
ss
sbb
(bad)
fcomp
int
xchg
cmp
push
sub
inc
mov
xor
cmps
retf
and
pop
jnp
mov
popa
cmps
cmps
xchg
scas
sbb
inc
mov
fwait
cmp
aaa
xor
sbb
inc
cmp
xlat
mov
pop
clc
cmps
arpl
test
aad
push
mul
daa
lds
sbb
sub
scas
mul
cmp
fwait
xchg
xchg
aaa
xor
xchg
inc
imul
cmc
mov
(bad)
pop
sti
out
cmp
cmps
ja
push
pop
xchg
adc
jg
aaa
pop
idiv
es
(bad)
stos
(bad)
iret
daa
cmp
cmp
push
imul
push
sub
data16
xchg
and
(bad)
dec
(bad)
loope
jb
jmp
push
mov
pop
pop
ja
daa
addr16
(bad)
retf
jge
lea
ja
pop
cmp
mul
cmp
sti
jb
repz
test
jbe
cmc
adc
sub
dec
adc
xchg
sti
mov
jmp
fcomi
cmp
stos
adc
ss
inc
sub
aas
pop
lea
mov
pop
and
cmp
cmc
jmp
dec
dec
clc
cli
pmaddwd
inc
int
jbe
es
push
pushf
outs
enter
in
retf
jmp
cmp
xor
mov
sbb
pop
push
mov
push
mov
sbb
(bad)
(bad)
std
cmp
pop
xlat
fidivr
repz
cmc
or
jbe
xchg
xchg
mov
xor
sbb
shl
pop
inc
test
or
jp
cmps
push
out
push
mov
xlat
xchg
push
dec
dec
cmp
icebp
jmp
dec
push
xlat
ds
xchg
js
jg
push
leave
jns
cli
xor
aaa
retf
dec
fbld
(bad)
cmp
pop
ret
xchg
sbb
or
mov
pop
inc
push
sbb
push
push
mov
and
xor
call
and
mov
movs
imul
adc
pop
cmp
push
push
cmps
dec
push
pop
pop
sub
cdq
cdq
inc
pop
push
pop
cmp
and
les
mov
add
push
movs
movs
fwait
aaa
dec
xor
sbb
push
or
daa
ja
out
sahf
pop
fucomi
out
inc
sbb
mov
repnz
mov
pop
push
pop
sub
ror
xchg
inc
cs
vmovaps
add
div
inc
(bad)
addr16
xor
and
sbb
add
pop
or
rol
scas
pop
and
xchg
sbb
cdq
fsincos
out
(bad)
movs
ficomp
adc
mov
adc
(bad)
test
(bad)
add
stc
ds
jbe
push
push
push
push
jo
fwait
mov
inc
pusha
xor
out
mov
aaa
xor
pop
(bad)
je
les
or
mov
mov
(bad)
neg
xor
adc
add
iret
mov
out
dec
(bad)
push
mov
fcomi
mov
cmps
loop
push
mov
mov
jp
retf
inc
lods
sbb
out
test
or
add
add
and
aam
sbb
push
aaa
push
xor
mov
mov
jnp
les
arpl
jmp
fmulp
xor
(bad)
int3
ja
jg
ror
inc
mov
cmps
stos
ret
inc
xchg
xlat
aam
pop
or
mov
pop
jns
push
imul
inc
push
pop
test
and
pusha
test
adc
cmp
in
mov
jle
das
cmp
inc
data16
bound
bound
int3
fnstcw
xchg
add
not
fcom
push
mov
bound
ds
or
push
cmp
aaa
rol
je
aaa
repnz
in
cmps
push
in
inc
add
xor
jge
jle
sub
push
adc
daa
not
xchg
les
adc
movs
xchg
adc
push
ss
xchg
inc
shr
lahf
lock
lods
fcmovnu
test
add
cwde
inc
retf
xor
push
ficom
mov
pusha
fsub
es
inc
jmp
les
(bad)
shl
imul
sub
ret
cdq
cmps
fcmovnbe
fsubp
movs
jmp
ins
push
ins
ss
ret
add
sub
out
and
shl
add
jo
or
popa
imul
and
xlat
add
and
mov
sbb
(bad)
push
push
ds
xchg
xor
pop
aaa
ds
cmps
pusha
push
out
jo
(bad)
fstp
jmp
pop
cmp
sub
inc
xchg
scas
jb
ds
cli
lods
movs
lods
lods
xchg
rol
(bad)
retf
or
jnp
jle
jg
out
imul
out
xchg
xchg
xor
sub
mov
enter
and
es
rcr
popf
out
adc
(bad)
dec
inc
dec
test
fiadd
into
pop
mov
stos
sar
cld
xchg
test
sbb
bound
fnstsw
jle
push
mov
sub
in
xchg
mov
sbb
sub
popf
sbb
mov
(bad)
lahf
jmp
adc
aad
cmp
xchg
push
cli
mov
retf
jnp
pop
inc
test
sub
push
and
ficomp
(bad)
sub
cwde
jle
cld
data16
(bad)
aaa
maxps
xchg
push
push
xor
pop
xor
push
in
xchg
add
sub
sbb
data16
pop
shl
dec
(bad)
ins
lods
fsub
sub
xor
xor
xchg
out
dec
fwait
xchg
adc
mov
jns
stos
jno
sub
in
mov
sti
mov
jnp
push
pop
xor
jmp
mov
arpl
in
mov
call
cdq
movs
push
(bad)
arpl
sti
xor
ja
push
out
test
in
idiv
out
sar
pop
(bad)
daa
xchg
inc
cmp
fidivr
sub
and
pushf
mov
fldenv
test
cli
adc
xchg
xlat
sub
inc
jp
les
pop
test
and
popf
gs
jmp
adc
cmp
push
ds
pop
pop
push
imul
ja
call
sar
imul
sbb
sub
push
inc
cmp
adc
icebp
outs
das
xor
sbb
sbb
inc
push
or
out
xchg
dec
xchg
add
stos
mov
(bad)
xlat
jge
inc
std
jnp
inc
sub
jo
in
add
adc
aas
xor
sbb
das
mov
leave
jmp
xchg
push
div
xchg
push
sti
or
daa
out
and
bound
adc
push
dec
repz
mov
sbb
mov
ins
scas
pop
jl
xor
ss
cmp
cmp
das
jmp
in
retf
mov
sbb
add
inc
(bad)
mov
xor
mov
xor
test
hlt
or
test
push
mov
(bad)
adc
cmp
mov
and
sbb
mov
leave
push
mov
aam
dec
cmps
mov
xchg
test
sub
rcr
inc
sar
test
out
sahf
inc
jp
and
iret
fst
adc
inc
xchg
not
fst
dec
and
add
imul
repnz
adc
xlat
icebp
inc
das
push
jne
push
(bad)
fld
sbb
sub
jne
icebp
out
xchg
arpl
mov
push
inc
inc
pop
pop
pop
pop
icebp
jmp
push
jmp
mov
inc
repz
pop
jbe
cmps
rcl
mov
loop
push
and
cmp
mov
(bad)
jmp
mov
imul
fcomi
cmp
or
adc
jmp
scas
cmps
xlat
ficomp
jbe
jg
dec
sbb
xchg
ds
scas
pushf
(bad)
retf
(bad)
in
ins
fcmovnu
xchg
or
pop
mov
cld
xlat
adc
jmp
sbb
xchg
test
fxch
not
mov
sbb
fiadd
cmc
mov
imul
xchg
xlat
(bad)
shr
xchg
sbb
imul
test
stos
pop
pushf
imul
xor
add
cmp
stos
sub
imul
(bad)
mov
xchg
mov
pop
dec
mov
or
cli
(bad)
loop
mov
lea
mov
cmps
jnp
test
adc
out
mov
ss
xor
xor
(bad)
and
xor
inc
daa
mov
imul
es
jbe
fcomp
ficomp
mov
jle
push
mov
lods
mov
jbe
scas
jecxz
call
fiadd
sub
sbb
or
test
inc
cmc
adc
aad
push
cmp
pop
lods
retf
inc
(bad)
pop
fisub
movs
mov
mov
fbstp
(bad)
hlt
push
mov
cmp
add
retf
mov
data16
pop
mov
jns
dec
jp
mov
je
ins
adc
jmp
jns
xor
push
or
add
out
cmps
sti
jbe
pop
sbb
add
mov
mov
bound
fistp
(bad)
or
cmp
imul
inc
stc
cmp
jmp
aaa
jbe
and
mov
add
or
scas
add
sub
xchg
jmp
jno
sbb
data16
sbb
ins
fs
dec
sub
cmc
mov
mov
inc
dec
xchg
shl
stc
xchg
mov
mov
in
add
out
jecxz
xchg
jnp
hlt
jp
imul
hlt
cmps
mov
pop
cmp
push
call
cmc
outs
sbb
popf
xchg
jmp
pop
sub
cwde
push
adc
push
pop
(bad)
inc
outs
ficomp
out
out
mov
(bad)
xchg
dec
xchg
cmp
jmp
shl
fwait
rcr
or
and
mov
pop
or
xchg
cmp
sub
sub
mov
stc
jecxz
xchg
xchg
in
pop
mov
aad
xchg
or
shr
shl
sub
fidivr
cmps
and
xor
imul
out
mov
cmp
pop
sbb
pop
add
fcmovnu
cmp
jmp
mov
dec
mov
push
outs
inc
aad
outs
sbb
int3
cmps
(bad)
mov
data16
dec
inc
es
inc
mov
inc
repz
adc
shl
and
xchg
sbb
iret
aas
rcl
add
adc
pop
movs
push
jp
je
in
inc
push
jo
mov
sub
push
mov
push
not
mov
pop
rcr
sub
pop
mov
stc
out
push
mov
inc
fcom
sub
in
xor
stos
cmp
hlt
jbe
div
cmp
jne
mov
xchg
add
or
aaa
adc
sub
push
les
add
xchg
movs
add
mov
mov
dec
mov
clc
pusha
or
es
nop
sahf
icebp
aad
jbe
test
mov
or
jp
data16
pop
sbb
and
pop
ss
int3
add
fwait
and
fnstcw
(bad)
rcr
jne
sub
lahf
jo
ds
push
cmp
fist
adc
jmp
mov
xchg
push
or
jge
je
js
enter
sub
lahf
test
int3
mov
outs
enter
push
jmp
cmp
jge
popf
scas
push
pop
ins
cmps
inc
repnz
or
mov
cld
mov
mov
dec
sub
xor
mov
les
pop
inc
data16
ds
mov
lods
(bad)
ficomp
lods
push
cmp
je
jmp
or
or
test
cmps
and
mov
mov
imul
jl
es
xchg
ret
outs
jecxz
out
inc
sbb
add
(bad)
movzx
sbb
pop
xchg
push
xchg
fs
dec
nop
inc
(bad)
sahf
aam
and
cmp
push
loope
je
std
(bad)
repz
jg
test
xlat
dec
lods
mov
repnz
mov
pop
mov
or
xchg
jbe
jmp
xor
xchg
test
inc
cdq
mov
rcr
add
sub
cmp
cmp
jnp
repnz
mov
xor
pop
sub
movs
jnp
mov
pop
leave
mov
mov
cld
vunpckhps
es
idiv
inc
imul
jbe
ret
xor
push
sbb
jb
push
pop
out
cli
ret
sub
adc
test
cmps
test
jnp
ins
mov
adc
or
adc
sbb
inc
xor
stos
loope
rol
imul
pop
loop
adc
movs
rcl
jmp
in
and
adc
add
jbe
jb
pop
mov
adc
mov
dec
push
inc
ss
dec
loope
aam
lds
inc
pop
dec
stc
and
ror
(bad)
in
popa
ror
push
cmp
jns
shr
xor
dec
popa
jb
mov
xor
lea
or
jbe
inc
stos
xchg
stc
xchg
sub
or
xchg
jmp
bound
lods
jns
(bad)
cli
stc
or
add
mov
retf
test
(bad)
stc
lods
test
addr16
add
imul
stc
mov
add
sahf
push
mov
xor
pop
shl
popa
dec
ret
icebp
(bad)
adc
call
and
and
mov
in
xchg
mov
fldl2e
inc
and
add
loop
push
popa
and
add
(bad)
shl
mov
jp
pushf
sbb
not
and
dec
mov
inc
pop
shl
rol
jge
mov
es
icebp
(bad)
xor
(bad)
sbb
cmp
(bad)
icebp
cmp
icebp
mov
shl
cld
(bad)
jno
popa
(bad)
inc
cmc
push
test
cli
idiv
cli
ds
cmp
nop
icebp
push
fwait
enter
(bad)
jno
es
jp
icebp
cmp
mov
jl
sbb
test
mov
mov
xor
das
mul
sbb
jbe
fcomi
jbe
ficomp
rcr
(bad)
cdq
cmp
test
sbb
cld
(bad)
cmp
sbb
xor
(bad)
movs
mov
jno
fs
adc
movs
mov
xchg
inc
xchg
cmovns
imul
jp
lock
or
fs
icebp
push
jb
and
adc
mov
icebp
nop
icebp
push
jl
push
or
call
xchg
push
jno
repnz
cmp
not
lock
fnstsw
push
aas
mov
jno
cld
imul
stc
icebp
xchg
cld
test
dec
ins
xchg
aad
movs
mov
cdq
out
adc
icebp
dec
lock
push
mov
bnd
push
sub
jbe
xor
adc
mov
mul
movs
mov
adc
js
adc
icebp
inc
mov
push
loope
jno
and
push
xchg
aad
mov
xchg
inc
idiv
mov
in
mov
icebp
push
jp
rol
pop
xor
mov
mov
ret
jb
mov
inc
inc
xchg
call
popa
ret
or
dec
dec
push
out
out
inc
sbb
ret
inc
mov
push
dec
retf
mov
xadd
dec
mov
jp
fwait
inc
retf
imul
mov
dec
mov
xchg
inc
out
push
and
lds
(bad)
iret
xchg
mov
dec
and
inc
add
inc
(bad)
xchg
outs
adc
ins
stos
mov
or
and
mov
stos
jmp
dec
dec
clc
fbld
addr16
into
dec
mov
cmps
mov
adc
fist
inc
lods
add
mov
or
or
dec
(bad)
(bad)
shl
pop
nop
into
retf
int3
addr16
xchg
outs
stos
dec
inc
mov
jne
jge
sub
dec
retf
test
mov
push
fisttp
inc
icebp
jecxz
mov
sub
push
cmp
sbb
xchg
cmp
mov
sbb
retf
ror
inc
leave
adc
ret
je
das
enter
xchg
retf
push
ds
mov
inc
pop
shl
or
ror
inc
inc
inc
popa
cwde
dec
jbe
sbb
pop
pop
adc
mov
ror
mov
mov
add
mov
sahf
add
rcl
ds
lds
and
out
adc
push
ret
ret
pop
push
sbb
jg
xchg
jbe
into
dec
test
test
inc
retf
popa
dec
inc
dec
ret
retf
sub
xchg
push
jnp
cwde
xor
jbe
lods
aam
fisttp
sub
xchg
ficom
push
mov
add
into
cwde
loop
jns
or
mov
push
cmc
pop
cmc
lahf
push
push
leave
mov
cwde
mov
not
xor
push
cld
and
mov
fwait
mov
fmul
jnp
shr
pop
sbb
mov
push
mov
add
or
das
sub
sub
push
sbb
push
dec
lahf
mov
or
mov
fld
dec
dec
fisttp
pop
sub
add
dec
cmp
mov
mov
pop
push
pop
push
pop
push
pop
cdq
push
mov
cmc
fidiv
rol
cmp
das
or
adc
int
mov
jmp
sbb
push
enter
leave
add
fsubr
pop
and
fwait
or
sti
dec
iret
dec
sahf
cli
pop
not
inc
sbb
fadd
lahf
dec
add
pop
mul
jbe
mov
das
retf
fwait
and
and
fbstp
pop
arpl
sub
mov
jg
dec
test
rol
xchg
fild
stos
rcl
mov
or
add
add
stos
fmul
out
inc
and
sub
fwait
mov
sti
ins
sbb
arpl
les
jmp
mov
sub
outs
adc
sub
iret
sub
in
adc
xor
mov
cdq
out
rol
push
ds
mov
enter
sbb
out
or
xchg
push
outs
jg
fnsetpm(287
sub
add
in
dec
ins
jmp
add
pop
imul
dec
xchg
xchg
gs
push
fwait
loopne
jl
ins
fucomip
add
push
in
jg
(bad)
ins
cmp
arpl
stos
stos
scas
sub
mov
imul
inc
push
lahf
iret
addr16
test
enter
ins
outs
ins
call
and
xchg
lods
fwait
js
sub
mov
mov
pop
cld
iret
cmp
ins
setae
add
ins
imul
ins
sbb
dec
iret
loop
stc
xlat
movs
sbb
stos
loope
dec
mov
xor
out
in
cdq
sar
in
stos
loope
dec
lods
stos
outs
dec
lods
rcl
xchg
addr16
loope
ins
out
(bad)
stc
retf
int3
daa
cld
mov
ins
pop
test
je
out
(bad)
(bad)
mov
ins
xchg
and
stos
vpcomud
addr16
mov
in
or
push
cdq
mov
retf
enter
and
loope
dec
pop
in
out
adc
out
mov
call
enter
jecxz
loopne
ins
imul
dec
mov
xlat
mov
outs
jg
inc
ins
mov
dec
movs
jg
inc
addr16
fild
sub
stos
popa
add
add
or
retf
popa
es
or
jnp
lahf
loopne
add
inc
sbb
enter
loop
mov
mov
dec
adc
jg
adc
pusha
ffreep
das
cwde
and
sar
push
and
mov
jg
mov
pop
jno
pushf
fwait
cmp
out
sbb
mov
mov
cmp
inc
lods
sbb
pop
aaa
mov
sub
mov
mov
pop
fadd
inc
pop
push
inc
push
inc
ja
pop
iret
js
mov
test
or
cmp
in
mov
arpl
or
pusha
loopne
cmps
pop
or
mov
dec
sahf
or
cmp
lods
cmp
mov
sub
cmp
ja
dec
icebp
mov
enter
ret
jne
cmps
pusha
mov
pop
je
cmp
xor
cld
scas
test
mov
xchg
or
mov
mov
pop
sbb
fsub
dec
ds
scas
inc
mov
jmp
sub
xchg
cmp
imul
(bad)
push
jp
sbb
data16
push
shr
mov
arpl
cmp
jmp
push
scas
hlt
ds
addr16
lea
cmc
mov
sub
inc
jne
lds
add
jle
pop
cmp
cmps
xlat
outs
addr16
cmp
push
out
push
inc
imul
pop
jg
aaa
scas
out
ret
or
ins
mov
int3
ficom
sahf
mov
(bad)
jle
bound
popa
ds
mov
ja
jecxz
stos
scas
inc
test
xchg
inc
add
pminub
jecxz
loope
inc
lods
inc
mov
mov
or
cmps
(bad)
adc
or
mov
(bad)
in
mov
clc
jb
ficomp
pop
sub
(bad)
sub
addr16
jb
sbb
xor
out
fcmovnb
mov
pop
jb
loop
mov
mov
mov
jb
pop
mov
and
cli
(bad)
cmc
sbb
jmp
dec
mov
out
iret
cmps
ds
mov
addr16
(bad)
jle
ds
iret
jle
add
int3
push
out
xchg
sub
sub
jmp
cmc
mov
das
mov
jle
stos
daa
sub
xor
adc
ds
std
jecxz
(bad)
xchg
cmps
test
cmps
inc
imul
addr16
(bad)
iret
cs
stos
(bad)
pop
leave
pop
add
push
mov
ds
or
add
cmps
mov
cmp
mov
add
repz
jecxz
fnstcw
int
pop
fmul
cmps
jle
cmp
shl
inc
mov
xlat
jle
scas
arpl
cdq
mov
jecxz
mov
stos
ins
pusha
icebp
cmp
ja
mov
not
mov
mov
adc
xor
popa
popa
xor
xor
in
jne
adc
xchg
push
xor
pop
adc
jp
push
pop
rcr
jb
sbb
call
stc
mov
div
ja
into
sbb
mov
cmc
mov
xchg
mov
jb
idiv
not
lock
inc
(bad)
std
cmp
sub
scas
mov
xchg
xchg
gs
add
xchg
jne
das
push
repnz
stc
xor
je
retf
add
mov
stc
xor
pop
xor
mov
sbb
mov
push
repz
aas
mov
movs
push
jb
rcr
xchg
inc
adc
mov
mov
test
jnp
xchg
movs
repz
loopne
je
push
repnz
xor
mov
repz
cmp
pop
mov
ficomp
int
fnstenv
mov
fldcw
popa
lds
xchg
sar
scas
mov
(bad)
pop
aas
or
in
movs
and
ftst
lock
and
inc
cmp
fnsetpm(287
mov
je
mov
mov
mov
je
int
xor
je
je
mov
or
mov
je
int
and
mov
je
je
lea
mov
mov
mov
je
je
xor
xor
aad
stc
shr
and
daa
xor
xor
mov
pop
jne
cmp
xor
shl
enter
jb
fstp
and
pushf
sub
cmp
cmp
inc
fadd
xor
jns
shl
mov
jb
fbstp
retf
clc
rcl
and
adc
xor
inc
test
inc
push
div
xor
sub
ret
push
sar
mov
lods
ins
ins
xlat
mov
or
mov
cs
ja
call
xlat
push
sub
sbb
push
test
cdq
push
call
push
jmp
mov
xlat
inc
fild
sub
ja
invd
cld
call
lods
add
call
adc
jge
mov
movs
pop
pop
cmp
adc
pop
mov
loopne
mov
in
fwait
arpl
add
xchg
add
cmp
les
cdq
mov
xchg
pusha
mov
test
leave
ja
(bad)
retf
pop
sub
in
loopne
in
lods
sti
cli
xchg
add
pushf
jmp
sti
call
(bad)
mov
sub
or
adc
or
or
add
dec
and
repz
adc
inc
pop
mov
and
xlat
inc
mov
movs
xchg
mov
pop
or
jbe
loope
jecxz
xchg
int3
pop
or
movs
aaa
lds
xlat
popf
icebp
in
fst
adc
mov
cmp
fs
adc
xlat
mov
call
shr
xchg
mov
xlat
dec
mov
mov
sub
xor
cmp
test
push
ja
pop
pop
imul
jl
fs
loopne
xchg
jae
(bad)
call
pop
xor
push
xchg
or
pop
or
push
ror
mov
je
or
in
ror
shr
xor
pushf
clc
push
or
ss
push
xchg
push
(bad)
sahf
push
xchg
jbe
pop
adc
mov
fist
test
cwde
xor
jnp
nop
fdiv
ficomp
jle
ret
lods
jge
mov
not
cdq
lahf
and
fld
jb
(bad)
nop
iret
cmp
scas
cmp
dec
pop
adc
clc
leave
push
fcom
cmp
xchg
pushf
out
loop
jmp
push
shl
ds
sbb
shl
push
mov
mov
xchg
push
jbe
push
xor
xchg
aaa
shl
xchg
xor
mov
xor
xchg
mov
nop
mov
jbe
mov
adc
mov
mov
ss
push
lock
xor
jbe
xchg
std
push
push
adc
sub
sbb
hlt
jb
cmp
fistp
mov
jecxz
mov
jb
gs
pop
scas
sahf
xor
jg
aam
xor
es
inc
mov
imul
cmc
pop
not
cdq
push
push
jbe
arpl
es
xor
push
bound
mov
(bad)
adc
adc
adc
push
push
jne
push
xchg
leave
xchg
xor
adc
sub
jbe
jle
mov
test
popf
adc
push
(bad)
mov
mov
(bad)
adc
adc
push
fnstenv
fist
jbe
pop
and
inc
imul
or
cmps
pop
mov
arpl
es
retf
sbb
xchg
cmps
pop
movs
adc
das
out
jnp
shl
push
push
mov
rcl
jmp
adc
xor
push
stos
dec
nop
adc
adc
iret
adc
pop
sbb
sbb
sbb
xor
push
(bad)
push
mov
rcl
jmp
jne
xor
or
retf
cmps
(bad)
clc
shl
add
jmp
inc
adc
xor
xchg
loope
ja
cdq
adc
dec
leave
or
or
retf
aas
aad
xchg
jg
pop
(bad)
cmp
pop
adc
adc
aam
aam
mov
aaa
mov
mov
xor
aad
mov
scas
dec
mov
mov
xlat
cmp
cmp
sbb
std
pop
sbb
mov
sbb
jnp
mov
outs
jnp
jne
pop
fisttp
mov
sti
icebp
cmp
data16
xchg
fldenv
test
int
dec
cmp
mov
(bad)
xor
mov
imul
mov
shl
out
and
stc
pop
add
jg
sub
sbb
add
sbb
pop
mov
div
push
sub
fxch
mov
out
pop
xchg
push
test
sub
xor
jmp
int3
jl
in
hlt
neg
int3
pop
sahf
adc
mov
mov
sbb
pop
fcomp
mov
dec
adc
ret
adc
xor
clc
and
add
xor
data16
and
jmp
rol
fdiv
call
or
inc
inc
das
mov
scas
div
fild
sub
ss
sub
or
mov
or
pushf
and
inc
and
mul
in
je
and
imul
cmps
lea
and
nop
mov
mov
test
test
das
addr16
test
in
popf
ss
sub
push
inc
mov
jmp
retf
cmp
mov
ja
add
cli
mov
daa
popa
ss
mov
mov
push
sub
idiv
lea
push
dec
das
popa
inc
(bad)
popf
test
jp
push
jl
adc
data16
push
jp
ins
leave
movs
cmp
pop
pop
sub
shl
in
xchg
(bad)
(bad)
sub
pop
sub
pushf
sti
int3
ins
jnp
jmp
pop
cmp
xchg
(bad)
xlat
sahf
mov
in
dec
jb
jmp
in
sar
shr
test
rol
inc
and
lea
mov
outs
jl
xchg
cmps
mov
test
adc
scas
retf
mov
mov
mov
test
mov
test
fld
loop
(bad)
lea
or
lea
call
les
push
add
xchg
add
and
mov
aad
aad
adc
adc
mov
dec
test
or
jnp
stos
test
leave
lods
mov
test
inc
mov
outs
and
or
jmp
sub
stos
popf
dec
jge
sub
sub
dec
jge
popf
dec
jge
sub
sub
dec
jge
popf
dec
jl
pop
dec
jge
sbb
dec
jge
popf
dec
jge
sub
or
sbb
push
fsubr
addr16
dec
addr16
push
or
sbb
(bad)
gs
cs
or
sub
push
into
(bad)
xor
sub
cmp
in
pusha
push
das
pop
das
or
sbb
and
retf
jge
xor
sbb
cmp
imul
or
out
or
cmp
or
pop
prefetchnta
dec
xor
and
dec
push
or
dec
pushf
push
cmp
and
mov
add
lods
pop
mov
(bad)
add
fcmovnbe
mov
cmp
dec
push
push
mov
pop
jbe
jge
call
in
int
dec
mov
or
mov
xchg
push
in
fwait
imul
sbb
cdq
ret
or
mov
ins
les
adc
fidiv
push
loope
addr16
jl
imul
xchg
xchg
cli
add
mov
je
fisubr
hlt
mov
mov
mov
or
jle
add
fs
(bad)
ret
sub
rcl
aad
push
xchg
jo
ret
ret
loope
mov
lds
aaa
pop
xor
mov
pop
xchg
mov
and
dec
hlt
pusha
rcl
movs
sti
les
lock
addr16
mov
ja
mov
inc
hlt
mov
xchg
scas
lock
loopne
clc
mov
leave
jne
pop
repnz
ja
out
jbe
ret
rcl
jno
xchg
rol
popf
xchg
fcmovu
jo
dec
cmp
add
je
out
xor
ss
popa
adc
push
rol
ret
js
inc
push
dec
cmp
ror
inc
xchg
mov
les
je
xor
adc
bound
nop
and
(bad)
xchg
je
loop
aam
loop
(bad)
push
adc
mov
movs
push
movs
and
inc
xor
cld
adc
adc
(bad)
mov
daa
and
dec
adc
jbe
jo
dec
adc
ret
mov
jl
and
cmps
jg
xchg
lock
outs
enter
cmp
cli
repnz
loope
jmp
pop
cmp
pop
cli
repz
rcl
rol
inc
add
adc
clc
fwait
repnz
ins
xor
sbb
inc
xor
mov
mov
xor
adc
and
leave
mov
inc
repnz
ret
xor
or
push
out
xchg
loop
xchg
sahf
add
jno
add
cmp
les
test
pusha
xchg
gs
lahf
(bad)
lock
push
int
or
push
sbb
add
div
aam
add
ss
and
ret
and
test
icebp
mov
rol
push
add
mov
test
adc
inc
jo
aaa
test
bnd
icebp
add
and
fs
inc
in
push
ja
mov
fiadd
test
loop
test
nop
pop
pop
shl
mov
mov
xchg
daa
bnd
sbb
push
ret
add
push
xchg
push
les
mov
inc
jb
and
add
push
push
or
mov
in
aam
and
sahf
mov
jge
jno
pop
add
fst
mov
nop
xchg
xor
jb
mov
and
mov
inc
push
add
(bad)
jo
add
hlt
adc
mov
inc
nop
push
inc
sahf
jbe
adc
adc
les
push
shl
enter
(bad)
in
add
inc
mov
jb
xor
sub
loope
pop
jns
push
ficom
fadd
jno
adc
call
xchg
adc
into
data16
adc
jecxz
xchg
jae
mov
mov
loop
and
jecxz
out
pop
loopne
mov
lods
retf
add
mov
push
mov
adc
dec
nop
jo
inc
scas
xchg
inc
out
xlat
mov
pop
test
xchg
addr16
jns
cmc
jno
nop
rcr
call
loope
out
xchg
mov
pop
push
or
and
push
xor
xchg
xor
xor
sbb
fcom
inc
add
aam
xchg
cdq
and
jns
mov
or
and
push
ss
std
cmc
inc
sub
add
ror
gs
mov
mov
iret
repnz
daa
into
push
and
or
lock
cmps
inc
xchg
cs
pushf
cmps
sti
mov
mov
scas
push
adc
sbb
push
jnp
shl
mov
mov
add
(bad)
xchg
jp
fild
mov
rcr
aaa
sahf
jbe
jbe
or
out
cld
ret
or
les
mov
mov
cmp
mov
sub
sbb
lds
dec
jae
xchg
sub
jp
xchg
mov
inc
lods
cmp
mov
shr
inc
mov
outs
js
je
es
cmp
xor
bnd
(bad)
dec
push
jg
fiadd
mov
repnz
push
fmulp
sar
mov
push
jp
xor
mov
push
shr
rcl
add
rcr
out
mov
aam
ins
mov
mov
inc
push
fidiv
das
jp
mov
lods
aas
add
jae
ret
mov
clc
test
in
stos
push
rcl
xor
sub
or
push
mov
mov
(bad)
cli
jnp
ss
inc
mov
mov
push
das
shl
(bad)
push
dec
iret
jne
xchg
and
ins
pop
ficomp
jge
sar
cdq
imul
and
das
push
retf
dec
and
aaa
mov
dec
and
push
sbb
inc
not
jge
cdq
adc
outs
int3
sbb
pushf
enter
iret
in
ja
cmp
cmp
sbb
cli
cmp
sub
jne
pop
js
pusha
lahf
jp
inc
mov
mov
sub
dec
fcomip
fild
les
ins
sub
sub
repnz
(bad)
clc
mov
mov
inc
(bad)
icebp
adc
fstp
push
mov
dec
ds
pop
cmp
jmp
push
and
iret
mov
enter
sub
pop
sub
and
xchg
push
sub
iret
mov
pop
stos
jmp
(bad)
mov
and
push
call
pop
jp
mov
jns
pop
cmp
push
ins
fxch
mov
arpl
ins
cmp
dec
(bad)
mov
mov
sub
sub
das
jle
sbb
jg
shl
call
jg
mov
scas
xchg
lahf
push
add
dec
popa
xchg
sahf
cld
fistp
lahf
mov
push
mov
mov
push
lahf
js
jp
in
call
addr16
pop
pop
out
ret
cmp
movs
retf
cld
nop
mov
jg
sbb
(bad)
int
fsincos
dec
sbb
jecxz
sbb
add
pop
xor
nop
dec
mov
mov
lea
test
sahf
mov
sti
or
(bad)
cs
or
jae
loopne
retf
call
inc
pop
movs
pop
and
sbb
movs
cmps
pushf
pop
ins
push
push
sbb
mov
(bad)
(bad)
lods
mov
pop
js
cmp
cmp
dec
pop
pusha
jb
pushf
add
in
mov
sbb
int3
push
pushf
sahf
popf
mov
repz
ins
mov
lahf
sahf
push
daa
mov
pop
jg
js
pushf
adc
pop
call
dec
inc
push
aas
mov
pop
adc
adc
cmps
(bad)
(bad)
lock
pop
ins
(bad)
int3
mov
push
xchg
ret
(bad)
jmp
ret
inc
add
xchg
retf
subps
mov
mov
fnstsw
adc
pushf
mov
cs
adc
lock
mov
cmp
sbb
mov
inc
xchg
jl
clc
or
dec
cli
in
and
or
inc
inc
mov
or
xor
pop
das
ja
mov
push
adc
xor
js
cdq
dec
aad
pop
mov
jg
push
cmp
push
scas
jle
movs
gs
xchg
push
or
ins
push
xor
push
cld
mov
jb
dec
fs
fisubr
imul
mov
pop
xlat
test
jne
je
sub
dec
test
pop
test
loopne
shl
xchg
cmps
jb
xlat
fstp
ja
mov
cmp
push
clc
jg
pop
mov
test
xchg
push
cmps
sbb
sub
add
call
mov
pop
stc
fdiv
xlat
and
mov
and
movs
or
inc
ds
and
push
(bad)
fwait
sahf
cmp
sub
fdivr
and
outs
adc
xor
mov
mov
add
inc
jmp
enter
dec
jns
je
jb
enter
mov
movs
and
sar
mov
mov
adc
(bad)
cmp
out
icebp
jae
xchg
daa
xchg
cdq
mov
inc
ss
sbb
mov
popf
outs
mov
adc
cmps
div
aas
leave
je
xchg
daa
mov
mov
mov
and
inc
test
xchg
icebp
adc
(bad)
fwait
(bad)
push
push
xchg
call
lock
shl
sbb
rol
add
inc
call
push
in
clc
mov
add
retf
adc
or
cmp
or
andps
adc
in
push
stc
ja
mov
rcr
push
sbb
inc
cdq
sub
push
fmul
sbb
inc
movs
sahf
dec
rcl
hlt
mov
push
cmp
cmp
shl
sub
retf
pop
in
xchg
and
es
inc
xchg
lods
adc
or
mov
nop
push
(bad)
and
retf
inc
(bad)
les
out
jno
push
and
lahf
mov
mul
fst
push
shl
sub
loope
loopne
or
enter
pop
outs
mov
inc
pop
aad
cmp
or
out
push
adc
fst
(bad)
js
and
or
ins
mov
stos
mov
cmps
rol
jp
dec
inc
and
in
not
xchg
pop
shr
mov
je
dec
pop
adc
icebp
push
mov
adc
adc
jns
dec
inc
pop
ss
sar
outs
bound
sub
xchg
push
or
sub
jbe
xchg
mov
not
daa
push
imul
xchg
pushf
out
ja
xor
shr
es
xchg
mov
inc
test
out
loop
data16
or
xchg
xchg
sbb
xchg
retf
add
inc
jae
jl
push
xor
lock
or
jns
test
pop
push
adc
or
xchg
add
in
pop
icebp
mov
adc
inc
mov
(bad)
pop
or
in
cdq
lods
js
mov
int
ds
fs
add
cmp
ins
imul
adc
inc
clc
loop
xchg
mov
pusha
out
jb
dec
icebp
ficomp
mov
cmps
xor
mov
and
call
adc
ja
bound
aas
pop
mov
xchg
xchg
aad
popf
xor
stc
sbb
ret
jle
inc
popf
inc
jg
ja
dec
push
popf
ss
out
ret
mov
dec
lahf
jbe
xchg
push
lea
xchg
ss
in
call
inc
or
adc
pop
test
pusha
push
sub
nop
nop
add
inc
lahf
push
popf
imul
mov
jbe
jb
mov
ins
popf
cmp
mov
adc
out
cmp
sbb
adc
mov
outs
inc
adc
sbb
xor
push
call
mov
inc
mov
mov
jno
or
fcomi
dec
jne
xchg
mov
mov
sbb
mov
lods
xchg
jns
dec
jns
loope
adc
push
push
inc
jnp
adc
ds
jbe
jbe
mov
cdq
imul
sbb
dec
push
fwait
daa
scas
gs
adc
dec
sub
retf
jmp
inc
and
out
and
not
jmp
push
cli
sar
test
add
movs
out
aad
mov
imul
xor
cmc
les
outs
sub
push
sti
(bad)
fsub
(bad)
push
sbb
jp
loope
sbb
iret
les
fs
or
pop
add
out
lds
(bad)
mov
xchg
stos
mov
xor
pop
icebp
in
add
nop
cmp
push
dec
mov
retf
jae
and
or
add
mov
rcl
ret
jmp
call
jecxz
xor
add
fisub
or
iret
jo
jg
add
out
ret
int3
iret
xor
dec
dec
jbe
dec
retf
int
push
pop
mov
inc
arpl
and
retf
fsub
leave
xchg
ins
cmp
or
cmp
sub
or
or
or
icebp
pop
or
or
mov
lds
mov
or
or
mov
mov
sbb
cmp
push
js
repz
xor
dec
or
dec
sbb
in
aam
in
icebp
sub
adc
and
(bad)
or
and
(bad)
sbb
shl
push
test
(bad)
dec
mov
push
loop
xchg
push
inc
cmp
adc
mov
jnp
jp
test
shr
(bad)
fcmovnbe
fbld
mov
daa
das
mov
cmp
arpl
mov
ins
int
add
mov
sbb
pop
or
js
sti
mov
aaa
jle
ror
mov
mov
xchg
aad
push
or
fwait
mov
int
push
jno
add
je
mov
mov
jnp
arpl
pop
pop
fnstsw
sbb
and
cdq
mov
clc
mov
(bad)
mov
push
mov
jo
and
xor
mov
pusha
out
xchg
lahf
mov
test
sbb
mov
xor
out
sti
push
push
shr
inc
js
retf
push
aad
cmc
mov
int3
outs
rcl
add
dec
loopne
ins
mov
add
xchg
pop
jnp
adc
stc
or
cmp
in
sbb
(bad)
mov
sbb
outs
lds
mov
cmp
pop
add
rcr
and
cli
add
cdq
ror
jl
scas
adc
fld
rcr
movs
ja
aaa
leave
xchg
jmp
inc
jns
push
or
mov
lds
cld
nop
pop
sbb
pusha
and
mov
and
mov
retf
jge
iret
xlat
mov
mov
xchg
add
and
adc
mov
int3
jmp
pop
rol
imul
pop
popa
in
mov
cs
mov
jecxz
les
jp
das
sub
test
sbb
xchg
jns
dec
cwde
inc
and
inc
cli
iret
stos
pushf
mov
repz
bound
sbb
mov
cmp
into
ror
in
dec
push
or
int
ins
push
fist
aad
push
and
fldpi
xchg
aas
(bad)
push
pop
cld
xlat
xor
add
mov
fidivr
aaa
xchg
cld
dec
jne
xor
sbb
sbb
xchg
sar
add
sub
xor
sbb
mov
xor
test
adc
cmp
adc
pop
jae
xchg
(bad)
(bad)
push
loope
xchg
pop
mov
mov
jae
ds
ss
push
xor
jmp
fcomp
mov
mov
xchg
mov
and
(bad)
retf
movs
mov
test
jns
(bad)
test
pop
(bad)
test
loope
cmp
cli
or
shl
out
fsubr
xchg
mov
pop
div
push
test
and
push
aaa
ss
int3
aam
cmc
cmp
and
mov
jmp
and
and
stos
cmps
inc
sub
fwait
aas
mov
repz
dec
lds
or
test
pop
aaa
xchg
jns
cdq
add
leave
fwait
jnp
push
outs
cwde
cmc
xor
sub
jmp
cli
xchg
les
dec
ja
ja
jns
movs
jb
xchg
call
sbb
iret
mov
cmp
(bad)
xrelease
fwait
sahf
jbe
mov
aas
test
rol
js
or
outs
mov
mov
sbb
call
cld
test
lea
add
sub
xlat
iret
add
fs
popa
stos
cdq
dec
adc
xchg
jmp
sti
arpl
(bad)
aaa
fidivr
shl
movs
and
adc
int3
dec
movs
cdq
repz
mov
jmp
xchg
pop
cmp
sbb
or
mov
dec
retf
push
push
rcl
fidiv
daa
sub
mov
and
cmp
or
leave
inc
push
daa
sbb
data16
mov
pop
rcl
loop
retf
bound
inc
sbb
xor
push
sahf
sbb
arpl
mov
cli
mov
aas
mov
push
stos
xchg
jbe
cmp
cmp
stos
sbb
popf
and
pop
fld
sti
pop
xor
jne
dec
fbstp
in
pop
xor
xchg
sbb
jecxz
(bad)
lods
push
sub
out
mov
jb
ja
mov
push
mov
xchg
sahf
lahf
cmps
dec
mov
and
addr16
mov
dec
adc
mov
fbstp
push
adc
into
loope
or
pop
neg
imul
inc
mov
mov
mov
and
jmp
inc
imul
rcr
loope
sbb
test
pop
shl
popa
xor
pop
mov
mov
cdq
jge
pop
retf
jg
pop
mov
push
mov
fcmovb
out
(bad)
mov
inc
cmp
jg
fisub
jg
in
out
(bad)
ins
or
outs
mov
mov
xchg
push
or
dec
rcr
and
ret
jl
retf
mov
cdq
push
inc
add
nop
sbb
mov
push
pop
lods
sub
in
loope
and
pop
adc
xlat
fmul
mov
das
xchg
iret
mov
dec
pop
mov
adc
js
dec
xchg
stc
push
fprem1
mov
lods
test
sbb
add
in
(bad)
jbe
xchg
pop
add
xchg
cwde
dec
pop
test
pop
or
in
cwde
sub
arpl
rcl
push
jg
cmp
sub
sbb
or
and
mov
xor
xchg
or
pop
push
pusha
retf
fcom
push
push
cmps
cmp
pop
pop
pushf
inc
dec
mov
adc
sub
jmp
les
jnp
dec
je
movs
outs
ds
jne
cmp
adc
mov
adc
xchg
pop
mov
mov
dec
rcr
xchg
(bad)
loop
pop
adc
lods
es
mov
mov
mov
(bad)
sub
pop
push
sub
lods
xchg
imul
mov
mov
fcom
(bad)
sbb
test
ds
clc
ins
and
push
shl
pop
jmp
stc
fwait
adc
pop
xchg
mov
and
pop
mov
in
or
or
retf
pop
add
mov
or
and
inc
out
jp
into
push
mov
mov
aad
and
inc
push
fiadd
xchg
sti
adc
jge
pop
jb
mov
into
adc
jg
jmp
fisub
push
outs
fwait
jo
mov
lods
ret
loopne
loopne
stos
mov
sub
test
or
sbb
shl
enter
out
daa
sub
test
cmp
icebp
inc
mov
mov
outs
xor
push
sub
cmp
(bad)
mov
or
scas
aam
dec
sbb
fs
mov
mov
std
enter
xchg
mov
xor
dec
adc
out
int3
ffree
neg
pop
dec
(bad)
dec
mov
inc
inc
cld
add
add
mov
sub
push
call
lea
add
mov
mov
lea
push
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
xor
push
push
mov
call
mov
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
add
call
push
mov
push
push
lea
call
push
lea
push
call
mov
call
test
jne
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
push
push
push
jmp
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
push
lea
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
call
mov
neg
sbb
add
push
mov
add
call
push
mov
call
mov
mov
push
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
push
mov
call
mov
push
mov
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
sub
push
call
lea
add
mov
mov
lea
push
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
push
push
mov
call
mov
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
add
call
push
mov
push
push
lea
call
push
lea
push
call
mov
call
test
jne
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
push
push
push
jmp
mov
cmp
je
mov
call
test
je
mov
call
test
je
mov
call
test
je
call
mov
mov
push
push
push
mov
call
add
call
mov
push
push
push
lea
call
push
lea
push
jmp
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
lea
push
mov
mov
call
mov
call
lea
call
mov
lea
add
push
mov
call
mov
mov
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
mov
mov
call
mov
mov
push
push
mov
call
add
mov
mov
push
call
mov
call
mov
mov
call
lea
push
call
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
mov
mov
and
mov
fild
and
mov
mov
fild
mov
sub
lea
fchs
faddp
fdiv
fstp
push
push
push
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
call
mov
mov
add
push
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
lea
push
push
call
mov
mov
add
push
push
lea
call
call
mov
mov
push
push
mov
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
cmp
jne
mov
push
push
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
lea
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
lea
call
mov
call
movzx
push
push
push
lea
call
lea
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
cmp
jne
mov
push
push
push
call
call
mov
mov
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
jne
cmp
je
lea
call
lea
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
lea
call
mov
call
movzx
push
push
call
mov
push
lea
call
push
push
lea
call
mov
mov
mov
push
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
push
call
mov
call
xor
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jle
push
push
call
add
cmp
je
sub
sar
cmp
je
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
call
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
mov
mov
mov
push
push
push
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
mov
call
test
jne
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
mov
push
mov
call
mov
lea
push
push
mov
call
mov
call
mov
mov
cmp
setne
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
push
lea
call
mov
mov
mov
mov
lea
push
mov
push
push
lea
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
push
lea
call
mov
lea
push
mov
call
mov
lea
call
mov
call
test
je
mov
call
test
jne
mov
call
test
je
mov
call
test
je
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
lea
push
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
mov
push
push
call
add
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
cmp
je
push
call
mov
call
test
jne
mov
call
test
je
mov
call
test
jne
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
lea
push
mov
call
mov
mov
call
test
sete
mov
lea
call
cmp
je
lea
push
mov
call
mov
lea
push
mov
call
mov
lea
call
mov
lea
call
push
push
lea
call
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
push
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
push
push
push
push
lea
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
mov
push
push
push
call
add
mov
lea
call
mov
mov
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
call
mov
mov
push
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
push
jne
push
push
mov
jmp
lea
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
push
mov
lea
push
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
mov
add
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
je
lea
call
test
je
lea
call
test
jne
mov
lea
push
mov
call
push
push
lea
push
lea
call
cmp
jne
call
mov
mov
push
push
push
mov
call
add
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
pop
pop
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
mov
call
lea
mov
call
lea
lea
push
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
call
push
mov
call
call
mov
push
lea
mov
call
mov
call
mov
call
push
mov
lea
mov
push
mov
call
mov
mov
mov
call
call
mov
mov
push
push
push
push
mov
call
add
push
lea
lea
push
mov
call
lea
push
mov
call
lea
mov
call
mov
push
mov
call
lea
push
call
lea
mov
call
mov
push
mov
call
mov
call
push
mov
mov
call
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
lea
push
mov
mov
call
mov
call
lea
mov
mov
call
test
jne
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
mov
call
lea
add
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
call
test
je
mov
push
push
call
test
je
lea
call
mov
push
push
lea
call
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
lea
call
mov
push
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
mov
sub
push
call
add
add
mov
mov
lea
push
lea
call
mov
push
push
push
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
lea
call
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
lea
call
mov
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
mov
mov
pop
ret
mov
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
push
lea
mov
call
mov
mov
mov
mov
lea
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
call
test
jne
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
cmp
je
push
mov
call
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
push
call
cmp
lea
jl
cmp
jne
mov
mov
lock
mov
pop
pop
pop
ret
mov
mov
mov
push
push
mov
call
mov
test
jne
jmp
mov
mov
mov
add
push
add
push
push
lea
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
lea
push
mov
je
cmp
lea
jge
cmp
jge
push
call
mov
mov
pop
mov
pop
ret
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
call
add
mov
pop
pop
ret
call
cmp
je
call
mov
call
xor
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
push
push
mov
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
mov
je
lea
mov
add
sub
jne
cmp
jle
mov
push
lea
call
mov
mov
push
push
push
push
call
add
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
int3
push
mov
mov
push
push
push
mov
push
mov
mov
mov
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
xor
push
mov
mov
mov
mov
mov
push
push
lea
push
push
call
mov
call
mov
mov
push
push
lea
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
sub
mov
push
mov
call
add
add
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
lea
mov
push
call
add
cmp
mov
jne
pop
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
shr
push
mov
add
mov
movzx
push
push
push
call
test
je
push
push
push
call
mov
add
test
jne
pop
pop
xor
pop
pop
ret
movzx
call
push
push
push
push
push
lea
push
push
push
mov
call
mov
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
movzx
mov
push
push
push
push
push
mov
push
push
call
push
call
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
mov
pop
pop
ret
push
call
int3
int3
int3
int3
push
mov
push
push
mov
test
mov
jne
call
pop
pop
pop
ret
mov
test
jne
push
call
mov
mov
mov
push
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
mov
cmp
mov
push
ja
lea
push
push
push
call
jmp
push
push
push
call
add
test
pop
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
ret
int3
int3
push
mov
sub
mov
push
xor
cmp
push
mov
mov
je
mov
push
mov
xor
cmp
jle
mov
cmp
jne
test
jne
mov
mov
sub
mov
sub
sub
or
mov
jge
push
mov
call
mov
mov
mov
add
mov
lea
sar
cmp
jl
test
je
test
jl
mov
cmp
jg
mov
mov
mov
pop
mov
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
test
push
push
mov
jg
jl
mov
cmp
jae
mov
xor
jmp
mov
push
push
push
push
call
push
push
lea
mov
mov
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
add
mov
mov
adc
mov
cmp
jl
jg
cmp
jbe
push
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
push
mov
push
mov
test
je
mov
mov
mov
or
jne
mov
push
push
mov
call
mov
mov
push
push
mov
call
mov
pop
pop
ret
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
call
cmp
je
push
call
mov
call
push
push
call
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
mov
jne
jmp
lea
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
mov
lea
push
call
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
jmp
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
lea
add
cmp
je
cmp
lea
jl
mov
cmp
jne
push
call
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
push
lea
push
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
xor
test
setne
mov
test
jne
push
call
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
jmp
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
call
push
lea
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
jne
mov
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
cmp
jne
xor
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
test
setne
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
test
je
mov
call
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
call
mov
add
test
je
push
lea
call
mov
call
mov
push
push
push
mov
call
mov
add
lea
push
mov
call
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
mov
test
je
mov
push
push
call
add
cmp
jne
pop
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
sub
push
mov
mov
mov
mov
test
mov
jge
mov
push
call
add
add
add
mov
test
je
mov
push
push
call
add
cmp
jne
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
movzx
mov
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
je
lea
mov
add
sub
jne
mov
cmp
jle
mov
push
lea
call
mov
push
push
push
push
call
mov
add
test
jne
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
call
mov
push
call
mov
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
push
je
mov
push
push
call
add
cmp
jne
mov
push
push
call
mov
mov
push
push
call
mov
add
test
je
mov
push
push
call
add
mov
pop
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
push
mov
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
push
push
push
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
call
add
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
xor
push
mov
mov
call
mov
call
mov
push
push
lea
push
lea
mov
mov
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
add
lea
push
adc
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
push
call
push
push
mov
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
test
je
mov
add
mov
call
cmp
ja
jb
cmp
jae
call
mov
lea
push
call
mov
call
mov
mov
lea
push
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
push
push
lea
call
push
lea
push
call
mov
sub
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
pop
pop
mov
mov
pop
ret
push
lea
call
mov
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jmp
mov
movsx
push
lea
push
push
call
add
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
push
call
cmp
je
add
cmp
jle
push
push
call
test
je
nop
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
jmp
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
lea
call
mov
test
je
push
call
add
mov
mov
pop
xor
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
push
lea
call
test
setne
call
mov
mov
add
push
call
lea
mov
mov
movzx
mov
mov
push
push
push
push
call
add
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
cmp
jne
push
push
lea
call
mov
call
mov
mov
movzx
push
push
push
push
push
call
add
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
call
push
mov
mov
push
mov
call
mov
push
mov
mov
push
call
mov
mov
call
mov
add
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
jne
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
push
push
push
push
push
lea
push
call
test
jne
call
push
push
lea
call
push
lea
push
call
mov
lea
push
mov
push
push
call
test
jne
mov
mov
push
call
cmp
jne
call
push
push
lea
call
push
lea
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
push
lea
call
mov
lea
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
nop
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
push
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
push
push
push
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
push
push
lea
push
push
mov
call
mov
call
mov
call
mov
mov
push
push
push
mov
call
add
push
lea
push
lea
call
mov
call
mov
push
push
push
mov
call
add
push
lea
call
test
jne
call
mov
mov
push
push
push
call
add
jmp
push
call
mov
test
mov
jne
mov
call
mov
mov
push
push
push
push
call
mov
add
push
push
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
lea
call
test
jne
call
mov
mov
push
push
call
add
jmp
mov
push
call
test
jne
call
mov
mov
add
call
mov
push
push
push
call
add
jmp
lea
call
mov
push
push
lea
call
test
je
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
mov
call
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
mov
push
mov
push
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
mov
add
cmp
jl
push
push
call
add
test
je
sub
sar
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
jmp
push
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jle
mov
push
lea
call
mov
push
call
add
cmp
jge
call
cmp
je
call
mov
push
push
mov
call
add
jmp
lea
call
mov
call
movzx
push
push
push
lea
call
mov
push
push
push
push
call
cmp
jne
call
mov
mov
push
push
call
jmp
call
mov
mov
push
push
call
mov
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
pop
pop
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
movzx
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
call
push
push
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
push
call
lea
add
push
call
mov
lea
call
or
mov
lea
call
mov
mov
call
push
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
call
mov
mov
jmp
mov
push
mov
lea
call
mov
mov
mov
ret
call
push
push
lea
call
mov
push
mov
lea
call
mov
lea
call
mov
mov
mov
ret
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
mov
mov
mov
cmp
jge
push
call
mov
cmp
je
cmp
je
mov
lea
mov
lea
cmp
mov
jae
push
push
call
mov
lea
add
cmp
jae
mov
push
push
call
mov
mov
add
add
lea
push
mov
mov
push
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
cmp
jge
mov
cmp
je
mov
mov
call
cmp
jne
call
mov
mov
mov
call
mov
mov
lea
mov
push
push
mov
call
mov
jmp
mov
mov
mov
mov
test
je
mov
mov
call
test
jne
call
mov
mov
mov
call
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
push
je
jmp
lea
mov
cmp
je
mov
lea
mov
cmp
ja
sub
mov
mov
mov
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
or
mov
lea
mov
mov
mov
sub
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
or
add
jne
mov
cmp
jne
mov
cmp
jbe
mov
sub
cmp
lea
je
mov
push
call
add
cmp
ja
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
push
je
mov
push
push
call
add
cmp
je
mov
call
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
cmp
push
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
jmp
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
add
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
push
lea
push
lea
call
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
test
sete
test
jne
call
mov
mov
push
push
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
push
lea
push
lea
call
push
lea
call
lea
call
lea
call
test
je
push
push
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
add
push
call
lea
mov
mov
mov
add
push
call
lea
mov
mov
mov
mov
push
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
jne
pop
pop
pop
mov
push
push
call
call
mov
push
push
mov
call
add
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
mov
mov
push
call
mov
call
or
mov
mov
call
lea
push
mov
call
mov
add
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
push
call
mov
call
test
jne
lea
call
mov
mov
push
call
push
push
push
lea
push
push
call
add
lea
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
push
mov
mov
push
mov
call
mov
call
mov
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
jmp
lea
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
or
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
jne
mov
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
mov
jge
mov
cmp
je
push
call
mov
jmp
push
lea
push
lea
call
mov
call
mov
cmp
mov
jl
mov
lea
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
lea
call
push
lea
call
mov
mov
push
push
lea
call
mov
push
lea
call
test
jne
push
push
push
mov
push
call
add
test
jne
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
cmp
jle
mov
cmp
je
push
call
mov
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
call
add
cmp
jne
mov
push
lea
or
push
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
cmp
jne
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
lea
call
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
mov
push
push
push
push
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
mov
mov
add
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
push
push
push
push
mov
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
push
push
lea
call
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
lea
call
push
lea
call
lea
call
mov
mov
mov
push
mov
push
lea
call
test
jne
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
jmp
mov
push
mov
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
push
mov
mov
lea
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
mov
ret
mov
lea
call
mov
lea
call
mov
jmp
call
mov
mov
push
push
push
mov
call
add
jmp
call
mov
push
push
mov
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
call
push
push
push
lea
call
push
lea
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
call
test
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
call
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
push
add
call
add
cmp
jle
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
call
add
cmp
jl
push
call
add
cmp
jg
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
test
jne
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
push
mov
call
add
cmp
jne
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
call
push
push
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
lea
call
cmp
jne
mov
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
sete
test
sete
test
je
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
lea
push
push
push
push
lea
call
push
lea
call
mov
call
push
lea
mov
mov
push
call
mov
mov
push
push
lea
push
lea
call
push
lea
call
mov
mov
call
call
mov
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
pop
xor
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
push
lea
call
mov
mov
push
push
lea
push
push
call
mov
mov
add
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
push
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
jmp
mov
xor
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
add
mov
push
mov
call
add
mov
mov
mov
mov
add
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
call
mov
lea
call
mov
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
add
lea
call
lea
call
test
je
push
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
lea
call
push
lea
call
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
xor
test
setne
push
lea
push
push
push
call
mov
mov
add
lea
lea
mov
add
test
jne
mov
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
call
test
jne
pop
pop
mov
lea
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jge
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
push
mov
call
add
cmp
jl
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
mov
push
call
mov
push
mov
lea
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
lea
mov
mov
add
test
jne
sub
sar
push
lea
mov
push
push
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
push
mov
call
add
cmp
jle
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
push
push
lea
call
mov
mov
test
jge
push
call
movzx
cmp
jne
cmp
jge
push
call
movzx
cmp
je
push
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
mov
call
test
je
call
mov
mov
push
push
call
add
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
lea
push
push
lea
push
lea
mov
call
mov
lea
push
push
lea
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
lea
push
lea
call
mov
call
mov
call
mov
mov
push
push
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
cmp
loope
popf
ret
cmp
into
add
pop
add
nop
nop
nop
nop
nop
nop
sub
fdivr
mov
push
ss
daa
hlt
into
pop
cmp
aam
sbb
loopne
or
inc
xchg
sbb
xchg
dec
cmps
lock
inc
sahf
outs
mov
das
push
in
cmc
das
movs
xor
loope
push
xchg
inc
repz
call
sbb
repnz
das
mov
test
aam
jmp
push
cli
cmc
and
shl
fimul
xchg
push
push
test
cmps
fisttp
bound
mov
loope
and
cmp
mov
cdq
pop
mov
push
mov
push
pop
sbb
scas
push
sub
sbb
cmp
int
out
jo
push
sbb
loopne
std
sar
dec
daa
jg
aad
mov
fbld
call
cmc
adc
dec
jae
cwde
adc
mov
adc
out
pop
cmp
rol
mov
ret
fbstp
or
(bad)
data16
inc
push
lahf
shr
jle
lods
mov
fisttp
xchg
ins
sbb
add
cmps
mov
sub
inc
cwde
pop
cmc
pop
jg
bnd
or
mov
adc
jg
hlt
into
pop
jb
aam
jecxz
dec
dec
outs
dec
mov
fsub
out
out
daa
shl
dec
and
cmps
ret
into
jp
or
inc
mov
push
sub
inc
fisubr
and
ret
xor
sub
and
jns
mov
cmp
dec
popa
dec
jbe
and
add
xor
in
push
adc
out
popf
ret
cmp
push
mov
loope
popf
ret
push
jno
and
into
sub
rcr
adc
ins
mov
cmps
jmp
push
cmp
pushf
cmp
fcomp
or
xor
pop
xchg
dec
je
mov
(bad)
arpl
pop
ret
sub
(bad)
data16
jnp
pop
mov
cmp
in
push
pop
xchg
(bad)
cwde
ret
sub
(bad)
mov
icebp
push
popf
dec
jle
mov
outs
in
jb
pop
mov
test
daa
in
(bad)
out
pop
ret
loope
test
scas
mov
add
ins
push
int
imul
bound
retf
(bad)
data16
mov
rcl
jmp
sub
sub
mov
adc
(bad)
jmp
or
aaa
ret
mov
iret
xchg
les
jo
cmc
inc
push
cmp
mov
enter
pop
xchg
fisub
(bad)
adc
cmc
add
ficom
xor
ret
cmp
popa
and
aas
or
push
retf
cmp
outs
jl
xchg
xor
cdq
mov
fisttp
xchg
sub
jg
inc
mov
je
cmp
jns
jo
cmp
mov
cmp
shl
pop
jg
push
into
mov
pop
in
push
xchg
push
jg
(bad)
mov
and
pop
push
sbb
adc
ret
loopne
or
std
push
in
jg
push
and
dec
jbe
mov
data16
(bad)
sahf
dec
xchg
shr
enter
mov
pop
cmp
adc
xchg
jbe
fs
push
in
pusha
fwait
nop
test
dec
mov
(bad)
in
dec
mov
lods
mov
mov
sbb
xor
inc
xchg
sahf
jl
sbb
popa
mov
cmps
loop
cmc
jno
pop
xor
sub
or
outs
mov
xor
mov
rcl
cs
(bad)
addr16
adc
dec
push
sub
ror
(bad)
xchg
adc
xchg
sbb
cdq
push
push
add
shl
mov
cld
mov
rcl
dec
mov
sbb
cmps
xchg
imul
(bad)
fwait
or
push
lahf
pop
pushf
push
push
mov
push
ret
pop
scas
pop
sbb
ins
sbb
mov
aam
es
pop
ss
push
cmp
and
xchg
mov
mov
rcl
dec
mov
cmps
pop
ds
pop
xchg
not
lea
jnp
jb
test
sbb
pop
adc
loop
ret
cmp
inc
mov
mov
fneni(8087
push
popf
dec
cmp
sahf
retf
or
popf
cmp
jns
xchg
adc
dec
add
ds
push
cdq
shr
mov
sub
(bad)
out
das
mov
ret
or
std
pop
in
ja
push
fwait
cmp
mov
adc
aam
or
mov
mov
loop
fadd
lods
mov
pop
xor
add
aam
sub
push
xchg
xor
rcl
sbb
pop
and
aam
fs
jmp
or
push
push
out
inc
add
push
sahf
xor
inc
retf
dec
xchg
fcmovu
out
sub
adc
add
cld
ja
push
fwait
cmp
mov
out
pusha
mov
inc
cmp
int
jecxz
(bad)
xchg
sbb
xchg
sub
jg
sub
add
aad
mov
mov
push
cmps
dec
add
ret
cmp
ja
fwait
push
in
push
cmps
inc
(bad)
loopne
or
jg
(bad)
in
js
pop
mov
sahf
cmp
jg
aad
mov
popf
ret
cmp
xor
data16
pop
pop
lods
push
adc
fsub
(bad)
aad
fcomp
cmc
(bad)
jg
ds
jo
push
and
push
inc
mov
mov
fisub
dec
sbb
pop
rcl
pop
shr
jl
xchg
sub
dec
push
lahf
loopne
xchg
sar
mov
and
pop
sub
push
push
sbb
adc
ret
loopne
mov
jge
cs
pop
rcl
aad
pop
movs
mov
or
sbb
mov
pop
cmp
(bad)
mov
(bad)
bound
shl
push
sbb
xor
xor
neg
loope
ret
ss
sub
push
sbb
adc
fild
mov
pop
lods
repnz
cmc
and
dec
push
pop
movs
repnz
dec
xchg
scas
jg
icebp
(bad)
in
lods
dec
in
push
cmp
mov
mov
sbb
fsubr
cmp
sbb
dec
pushf
mov
imul
xor
cmp
dec
mov
add
aaa
aam
adc
and
jne
aaa
adc
xchg
push
push
mov
sub
pop
push
pop
pop
movs
cli
cmp
xor
sub
pop
or
adc
bound
cmp
mov
sar
adc
push
popf
dec
inc
imul
(bad)
(bad)
mov
ins
or
dec
pop
adc
sbb
dec
fwait
test
addr16
dec
movs
cdq
ret
loop
call
or
int
out
jo
pop
movs
cli
bound
rcl
inc
and
nop
(bad)
in
fadd
adc
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
add
push
push
push
push
call
test
je
push
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
push
call
add
mov
mov
test
je
mov
call
mov
jmp
xor
mov
lea
push
lea
call
add
mov
mov
push
push
mov
call
mov
mov
test
je
mov
jmp
mov
push
lea
push
push
push
push
push
push
mov
call
mov
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
push
push
call
test
je
mov
cmp
jne
push
push
push
push
lea
push
call
test
je
mov
sub
je
sub
je
sub
jne
push
call
mov
call
jmp
call
mov
call
jmp
mov
push
push
push
push
call
call
mov
mov
push
push
push
push
call
lea
push
call
lea
push
call
push
call
lea
push
push
call
test
jne
mov
push
push
lea
mov
call
mov
and
cmp
pop
je
cmp
je
cmp
jne
call
mov
mov
push
push
push
mov
call
lea
add
cmp
jne
call
push
push
push
lea
call
mov
push
mov
call
mov
lea
call
push
lea
call
push
lea
push
call
push
call
add
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
cmp
je
push
push
lea
call
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
call
mov
mov
push
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
cmp
mov
je
call
cmp
je
call
cmp
je
call
mov
mov
push
push
push
call
add
jmp
call
mov
mov
push
push
push
call
add
lea
push
push
mov
call
push
call
test
je
lea
push
push
push
call
mov
push
push
push
lea
push
push
push
mov
mov
call
push
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
mov
test
je
call
push
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
mov
call
mov
pop
and
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
push
lea
call
mov
call
push
push
lea
push
lea
mov
call
mov
call
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
call
mov
call
mov
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
mov
cmp
je
mov
cmp
je
push
push
lea
call
mov
mov
push
push
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
movzx
movzx
push
push
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
push
lea
push
call
mov
mov
push
push
push
push
mov
mov
mov
mov
call
push
push
push
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
add
mov
call
mov
xor
cmp
je
mov
mov
cmp
mov
mov
je
mov
jmp
mov
mov
mov
add
mov
jne
mov
cmp
je
lea
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
je
push
mov
mov
mov
mov
mov
mov
add
mov
mov
call
cmp
jne
call
mov
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
mov
pop
mov
pop
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
xor
cmp
jne
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
cmp
je
call
mov
call
push
lea
push
lea
call
mov
call
test
sete
cmp
jne
push
push
lea
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
jne
mov
cmp
jne
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
cmp
jne
call
mov
mov
push
push
push
call
push
call
add
mov
mov
cmp
je
mov
call
mov
jmp
xor
mov
call
push
mov
call
mov
call
call
mov
call
call
mov
mov
cmp
je
mov
jmp
xor
call
mov
call
mov
push
call
mov
cmp
je
push
call
mov
call
mov
cmp
je
push
push
push
lea
push
call
mov
call
mov
push
lea
mov
mov
push
call
mov
call
mov
mov
call
mov
lea
call
mov
cmp
je
call
mov
mov
push
push
push
mov
call
mov
add
push
push
call
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
mov
mov
push
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
lea
push
lea
call
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
add
lea
lea
push
push
push
lea
call
push
lea
mov
call
mov
mov
mov
mov
push
add
call
add
cmp
jle
call
mov
call
xor
test
setne
test
jne
push
call
call
push
lea
mov
mov
call
xor
and
inc
cmp
test
xchg
mov
xchg
pop
das
xchg
inc
push
jbe
popa
jno
bound
shl
loop
sar
and
xchg
jae
xor
add
outs
inc
sbb
leave
das
mov
addr16
jle
mov
add
jl
cmp
cmp
or
fldcw
adc
push
cmp
mov
in
ja
push
adc
addr16
mov
fbld
push
rol
adc
outs
out
xchg
jb
or
xor
xchg
push
daa
pop
jno
add
test
adc
repnz
push
or
cli
daa
movs
sub
arpl
pushf
aam
repz
test
test
cmp
pop
retf
inc
add
push
dec
jae
xor
fbstp
hlt
push
out
in
mov
fild
push
imul
jg
or
neg
inc
inc
and
out
mov
xchg
mov
hlt
pop
aad
sub
jbe
mov
inc
mul
jns
inc
pop
push
addr16
mov
add
jno
mov
dec
fidiv
add
push
sub
mov
mov
(bad)
rol
lock
jae
mov
inc
sub
add
jb
or
out
out
jns
out
push
ret
mov
jbe
test
(bad)
add
push
push
xchg
mov
xchg
adc
xchg
cmp
jmp
bound
addr16
adc
mov
out
lods
movs
out
jecxz
xlat
pop
imul
pusha
ins
scas
sub
lsl
push
push
mov
scas
out
push
xchg
fbstp
add
mov
pop
xchg
sub
inc
inc
or
xchg
add
xor
movs
ror
jmp
jg
inc
adc
rcr
jb
sbb
inc
fs
jp
(bad)
xor
(bad)
xlat
test
sti
and
and
jne
xchg
mov
xlat
pushf
repz
adc
inc
mov
scas
cli
adc
addr16
dec
(bad)
or
lea
mov
cmp
pusha
cmp
imul
sub
xchg
jecxz
popa
xor
xor
shr
xchg
mov
xchg
(bad)
push
out
stos
pop
mul
mov
or
pop
sahf
add
in
jb
fsub
test
outs
ja
inc
popa
(bad)
scas
(bad)
ja
push
xchg
cld
and
div
xchg
mov
xchg
pop
push
pop
sub
(bad)
sbb
or
inc
out
pop
or
out
jle
inc
and
clc
mov
aaa
jb
inc
sbb
mov
scas
mov
xchg
xor
les
retf
mov
xchg
call
lds
arpl
ror
cmps
loopne
bound
xor
xor
stos
dec
ret
das
fwait
and
(bad)
stos
repz
xchg
xchg
fisub
fisub
sub
adc
and
pop
adc
inc
or
xlat
scas
iret
add
mov
retf
aam
ret
sub
adc
(bad)
xchg
add
inc
pop
cmp
cmp
test
jp
loope
pop
xchg
mov
daa
call
pop
mov
jbe
jmp
dec
lods
dec
sti
and
jecxz
push
xor
pop
sbb
loop
(bad)
hlt
sub
jecxz
xchg
cmps
shr
pop
pop
mov
jbe
out
xchg
add
mov
call
jnp
cli
mov
jnp
das
ins
push
push
ss
or
imul
(bad)
cmps
xor
adc
outs
cmps
test
jae
or
inc
xchg
shl
jg
(bad)
mov
adc
xchg
data16
xor
and
loope
(bad)
cmp
pop
cld
push
fstp
cmps
(bad)
addr16
adc
loopne
push
dec
mov
ret
mov
mov
ret
in
jbe
call
repz
or
iret
push
xor
and
lock
ret
adc
scas
aaa
pop
or
mov
inc
(bad)
mov
aad
ficom
loop
adc
xchg
(bad)
adc
or
pop
sub
pop
mul
test
cmp
and
in
inc
outs
push
js
pop
clc
fldenv
iret
xrelease
xor
cmp
cmp
xor
jecxz
adc
imul
pop
push
add
test
jo
add
push
dec
fsub
push
bound
lods
das
test
movs
inc
ss
inc
or
jbe
xor
xchg
cli
inc
inc
cwde
rcl
aaa
aaa
pop
xor
pop
aaa
daa
div
xor
xchg
mov
ret
inc
movs
add
ret
es
ins
fidiv
fisub
jmp
test
xchg
xchg
cmp
mov
jecxz
sbb
(bad)
ja
sar
cld
ss
cmp
and
sub
inc
data16
xor
jb
ds
push
dec
mov
loop
push
mov
sbb
sbb
xor
xor
lds
mov
stos
outs
ret
addr16
mov
pop
add
pop
ins
mov
aam
aas
cli
cli
scas
xor
mov
test
mov
sub
pop
and
hlt
fild
arpl
inc
cwde
(bad)
ins
arpl
jg
adc
xchg
inc
push
out
mov
cli
aaa
and
jno
mov
and
pusha
jle
data16
movs
std
int
in
xor
lock
add
in
movs
lock
stos
push
hlt
and
pop
mov
loope
sbb
xchg
xor
mov
push
pop
inc
out
loopne
in
xchg
(bad)
sub
(bad)
add
loopne
adc
jbe
repz
add
inc
icebp
mov
in
(bad)
imul
jo
les
mov
ss
inc
or
data16
cld
sti
jl
push
div
mov
inc
pop
(bad)
push
call
mov
pop
rcr
ins
add
and
adc
sbb
xor
clc
cli
aaa
loopne
mov
movs
add
inc
loop
bound
scas
and
add
jne
movs
xchg
xchg
xor
or
jecxz
push
call
jp
pop
adc
xchg
xor
in
(bad)
xchg
mov
mov
push
xor
data16
call
sbb
add
sti
cmp
rol
sbb
add
dec
add
aas
into
pusha
jecxz
cmps
jp
or
jbe
gs
call
add
cmp
push
mov
jecxz
rcl
cmc
adc
jg
cli
cmps
sbb
outs
jle
inc
ins
pop
mov
and
cwde
mov
cwde
outs
repnz
scas
idiv
inc
fld
xlat
sub
add
cmp
stos
popf
out
cmp
in
cmc
outs
vmovss
inc
test
mov
sub
ss
ds
ins
(bad)
fist
mov
push
cmp
inc
xor
push
xchg
rcl
repz
or
popf
mov
xor
sar
icebp
call
jo
and
dec
loop
inc
arpl
mov
push
fsub
adc
mov
pop
gs
lock
sbb
push
hlt
inc
push
push
fist
push
mov
fst
in
adc
or
jb
pop
add
add
cli
enter
adc
sbb
int3
push
sub
in
push
je
outs
push
push
ja
or
jmp
mov
js
mov
loope
xor
pcmpgtd
mov
neg
(bad)
push
jne
test
xchg
cvtps2pi
mov
enter
jns
rcl
mov
sub
sub
xchg
pop
outs
rol
mov
icebp
rol
push
xchg
out
das
fistp
mov
in
sahf
sbb
jecxz
push
ss
out
add
xchg
xchg
aam
mov
xchg
fistp
jne
rcl
mov
adc
mov
push
xchg
adc
sbb
test
(bad)
xor
rcl
fld
shl
adc
and
dec
xchg
pop
dec
push
push
fs
adc
mov
add
jg
inc
test
test
mov
not
stc
dec
cmp
mov
in
sbb
jb
inc
leave
out
xchg
dec
inc
cmps
ret
imul
xlat
and
test
ja
cmp
mov
sbb
xchg
xor
ret
or
pusha
jg
push
hlt
inc
gs
xor
and
xchg
pop
adc
hlt
cmps
mov
idiv
adc
movs
fidiv
ret
inc
lea
push
mov
loopne
mov
sahf
fisttp
pushf
mov
fbld
lods
mov
fcmovne
leave
mov
jne
in
lods
out
test
repz
push
xor
adc
cli
std
loop
sbb
inc
jmp
push
adc
xchg
xchg
shl
imul
mov
dec
cld
sahf
rol
dec
push
mov
jb
mov
or
rcl
popf
jecxz
xlat
pop
cmp
push
xchg
pop
repnz
lods
(bad)
loop
in
xor
xor
ja
xchg
mov
(bad)
xlat
mov
outs
stos
xor
fidivr
lock
and
dec
mov
hlt
popf
sbb
das
inc
and
push
mov
(bad)
cmp
cmp
mov
das
xor
adc
mov
push
jl
xchg
jns
mov
sub
sub
mov
inc
add
xchg
push
push
and
push
mov
jae
cmp
nop
(bad)
or
xor
mov
in
inc
push
xor
push
mov
call
push
les
xor
loop
push
or
push
push
aas
icebp
daa
adc
mov
loop
scas
inc
popf
and
repz
adc
sbb
push
sbb
mov
popf
lock
inc
(bad)
hlt
jnp
mov
and
sbb
in
sub
sbb
xor
sub
out
in
inc
into
repnz
inc
xor
xor
dec
das
popa
aad
in
push
pop
pop
les
xlat
(bad)
xchg
add
mov
xchg
popa
pop
mov
pop
lods
in
adc
pop
jecxz
(bad)
xchg
inc
sbb
cs
add
inc
retf
push
ja
mov
and
cmc
mov
test
cmps
cmp
xchg
mov
or
out
arpl
inc
stos
pop
call
mov
inc
mov
(bad)
loopne
inc
push
imul
add
dec
cmp
or
je
addr16
add
adc
xor
cmp
or
push
inc
xchg
nop
jns
add
cmp
mov
repnz
inc
les
sub
mov
std
call
ficom
iret
mul
mov
pop
sub
mov
add
inc
cli
inc
jp
jmp
jb
repnz
push
popf
fcom
push
psubusw
mov
in
push
or
inc
mov
cmp
iret
xchg
pop
xchg
ins
adc
popa
and
jp
es
lods
adc
fdiv
stos
inc
lock
and
sub
fsubr
iret
shl
aad
pop
cmp
dec
ret
pop
jmp
div
cmp
scas
mov
test
or
cmps
cmp
iret
push
xor
adc
and
mov
sbb
sub
xor
mov
mov
imul
je
inc
(bad)
xor
pop
ret
test
push
mov
add
into
adc
pop
inc
cmp
out
aaa
repnz
das
movs
lods
xchg
ja
and
xchg
loop
mov
mov
movs
jno
mov
rcl
push
push
in
call
sar
repnz
xchg
out
push
aaa
jb
cli
pop
or
clc
mov
inc
std
iret
shl
les
icebp
or
cld
lds
mov
sub
hlt
(bad)
push
dec
jno
adc
inc
ja
jbe
adc
xchg
push
mov
mov
loopne
repnz
loopne
mov
xchg
add
mov
inc
int3
xchg
or
xchg
jne
mov
jnp
cs
sbb
ja
or
mov
sub
push
sbb
dec
xchg
(bad)
or
xor
jecxz
mov
daa
in
loop
retf
xor
popf
mov
mov
xchg
push
mov
pop
ja
mov
xor
mov
lea
pop
mov
dec
shr
or
mov
stos
imul
sub
data16
mov
and
(bad)
fidivr
(bad)
shl
xor
shl
push
std
gs
jb
(bad)
in
push
iret
mov
cmp
adc
or
fs
sub
adc
xchg
scas
inc
mov
push
mov
loope
inc
cmps
leave
jmp
jo
(bad)
call
sub
jnp
push
rcl
adc
inc
cmp
mov
xchg
in
aad
retf
xchg
mov
data16
adc
div
and
cmp
shl
jnp
jp
add
ret
test
mov
popf
pop
aaa
mov
movs
inc
sbb
xchg
mov
ss
mov
xchg
dec
sti
push
cmps
in
shl
js
xchg
je
jae
push
dec
(bad)
push
dec
repnz
add
sbb
push
adc
xor
inc
and
mov
ror
loope
dec
inc
popf
mov
ret
popf
cli
push
lock
arpl
and
mov
faddp
cmc
jae
jp
dec
in
mov
mov
pop
cmps
jb
div
sbb
jmp
out
test
call
dec
push
add
jbe
rol
jo
bound
push
adc
add
inc
xchg
xchg
dec
retf
xor
repz
imul
push
xor
ins
aas
pop
daa
mov
mov
mov
xor
push
fisub
xchg
pop
imul
lahf
test
xor
call
xchg
(bad)
(bad)
push
push
jbe
pop
js
je
jp
xchg
mov
xchg
cwde
mov
lock
cmp
ret
pop
iret
mov
push
in
outs
adc
and
wbinvd
repnz
nop
cmps
popa
inc
mov
jecxz
fimul
jmp
(bad)
sahf
push
cmp
bound
mov
and
(bad)
sbb
mov
lahf
adc
sbb
pusha
ss
push
loope
int
ss
shl
adc
jo
test
add
inc
sub
push
lods
bound
and
ja
mov
and
xorps
mov
jecxz
pop
sahf
cmp
int3
hlt
pop
cmc
xchg
push
fwait
xchg
xchg
test
dec
dec
or
push
(bad)
sub
inc
shr
test
xchg
movs
cmp
push
adc
xchg
cdq
(bad)
and
pop
cmc
(bad)
mov
adc
call
or
cmc
(bad)
repnz
jae
retf
or
aaa
(bad)
mov
mov
mov
arpl
loope
ficomp
jmp
cmp
in
dec
(bad)
jg
push
jbe
cdq
scas
push
cmp
out
cmc
xlat
bound
inc
add
in
xor
hlt
mov
lods
jo
repnz
ret
dec
leave
loop
lahf
outs
ds
inc
cwde
and
in
pop
inc
jle
pop
mov
inc
pop
movs
push
jbe
test
jne
jb
jbe
ds
into
sub
pop
xchg
and
out
es
xlat
(bad)
xchg
pop
sbb
aad
fdivr
cli
add
ja
test
loop
inc
adc
scas
xchg
ror
test
dec
mov
daa
loop
push
sub
xchg
or
xchg
icebp
mov
loopne
inc
ror
das
repnz
in
jecxz
push
in
clc
aam
mov
mov
rcr
push
add
and
dec
div
neg
mov
cmp
sub
lock
pop
bound
loopne
cwde
aas
outs
push
mov
cmp
pop
into
popa
in
cs
stc
es
jae
mov
test
xor
movs
push
adc
inc
shl
and
ins
into
loop
push
mov
outs
(bad)
xor
in
movs
or
mov
(bad)
fs
mov
adc
xor
jmp
push
in
addr16
sbb
ret
sbb
test
cmps
push
fs
xor
push
mov
repz
bound
cmp
add
mov
(bad)
sti
stc
mov
xchg
push
out
loopne
xlat
add
mov
jns
lods
mov
sbb
xchg
jne
stos
pop
cmp
sbb
shl
adc
dec
pop
mov
inc
or
(bad)
es
ret
aaa
xor
dec
push
xor
add
repz
mov
daa
lods
push
and
daa
add
pop
ja
icebp
add
imul
bound
dec
sub
cmp
repz
dec
adc
xor
add
push
loope
push
cdq
push
adc
mov
dec
fnstenv
in
inc
sbb
mov
rcl
stc
mov
mov
shl
in
inc
dec
adc
push
fiadd
fimul
repz
outs
cmp
jl
(bad)
mov
gs
dec
mov
ja
add
mov
or
mov
jg
xor
rcl
and
jb
mov
jns
int3
jmp
mov
push
adc
dec
sbb
int3
mov
inc
xchg
sub
inc
or
pop
sub
push
xchg
or
inc
(bad)
(bad)
(bad)
mov
ins
xchg
sub
mov
loope
(bad)
fistp
es
mov
and
sbb
push
fdivr
push
inc
mov
fisub
push
lea
push
cmp
mov
cmps
test
loope
pop
pop
xchg
inc
pop
aaa
mul
aaa
inc
xor
(bad)
pop
xchg
in
inc
xchg
cli
dec
ret
lock
cmc
es
lds
rol
repz
in
jmp
or
mov
cdq
ins
add
xor
jmp
xchg
out
shl
outs
mov
jae
and
sub
test
sbb
jne
mov
rcr
fisub
inc
inc
xchg
mov
xor
or
inc
dec
fsub
xchg
pause
rcl
in
lahf
aam
add
cmps
xor
and
sbb
mov
clc
arpl
lods
std
cwde
inc
mov
sub
lods
mov
(bad)
ds
pop
jno
sub
cmp
xchg
sub
outs
daa
and
out
mov
das
fld
icebp
adc
add
loop
xchg
xchg
popa
shl
dec
push
add
mov
jne
inc
jecxz
movs
(bad)
pop
cdq
test
sub
adc
adc
mov
push
cmp
inc
mov
ins
rcr
fst
push
pusha
sub
call
(bad)
ja
add
mov
repnz
into
lods
call
mov
push
je
fiadd
and
arpl
push
rol
lds
in
push
mov
mov
cmp
cmp
or
sbb
jae
push
xor
mov
push
dec
mov
dec
fcom
pop
lea
add
xor
jmp
jmp
jp
jbe
cmp
mov
pop
xchg
test
iret
mov
repz
cmp
cld
mov
or
out
xor
dec
mov
retf
xchg
dec
rcl
sbb
xor
ja
cdq
loopne
pop
sub
pop
fs
mov
push
xchg
and
sub
loop
(bad)
and
stc
mov
(bad)
jae
jg
push
movs
repz
out
imul
fnsave
jmp
sbb
push
out
mov
aad
jl
mov
repz
or
and
and
lock
cmp
pusha
pop
stos
rcl
jl
jp
je
inc
fwait
js
or
sub
inc
push
sub
push
aaa
inc
or
ret
push
cmp
and
xchg
repz
addr16
jecxz
adc
sub
cs
xor
call
in
ror
ret
xchg
repz
add
stos
stos
cmps
push
xchg
cmps
inc
lock
xor
adc
jle
out
sub
aas
pxor
sub
mov
dec
pop
adc
mov
in
loop
fdiv
outs
dec
mov
ret
ins
aam
cld
mov
stos
mov
cmp
inc
jno
sahf
arpl
pusha
data16
dec
mov
div
cmp
loopne
rcr
xor
jmp
pmulhw
dec
es
xchg
xor
sbb
pop
sahf
(bad)
sti
dec
fidiv
dec
xchg
xor
bound
mov
push
loop
out
cmp
sub
rcl
sbb
test
fiadd
push
stc
xor
inc
(bad)
fsub
addr16
cdq
rcl
inc
add
repz
stc
cmp
adc
xchg
in
es
(bad)
xchg
lahf
and
ret
add
out
shl
or
mov
imul
sub
push
sub
ss
push
jp
out
adc
inc
sub
xor
in
pop
mov
and
xchg
fnstsw
jmp
retf
shl
arpl
(bad)
retf
lds
ret
jp
(bad)
jmp
lock
out
std
cmp
xchg
in
dec
pop
imul
data16
cwde
(bad)
sub
fisub
test
jne
push
gs
xchg
or
xchg
and
inc
push
inc
cmp
cmp
xor
xchg
test
jl
je
mov
and
pop
lods
ret
daa
div
cmps
in
add
mov
(bad)
test
sbb
adc
cmp
xor
ja
add
inc
pop
outs
mov
rol
ins
mov
stc
(bad)
and
in
inc
sbb
dec
or
mov
sub
(bad)
fs
sub
push
iret
shl
loop
cmps
call
dec
push
inc
pop
jo
sbb
mov
outs
dec
fnstsw
vpandn
jae
loop
rdmsr
adc
repz
or
mov
and
lds
loop
add
iret
dec
idiv
pop
repz
outs
mov
pop
(bad)
mov
jbe
mul
mov
inc
add
lock
clc
cmps
dec
dec
sbb
adc
mov
out
and
out
mov
ja
scas
nop
sub
les
xor
add
mov
pop
push
xchg
stos
(bad)
xchg
push
mov
cmp
scas
cmp
push
pop
xchg
fadd
jl
call
loop
cmp
loope
sub
dec
cmp
ja
xor
movs
dec
xlat
sub
inc
lds
dec
cli
xchg
mov
data16
push
add
inc
ja
out
inc
retf
test
mov
or
neg
ffree
jge
inc
and
add
lds
mov
xchg
xor
cld
in
xor
xchg
xchg
fs
sbb
mov
push
mov
ret
push
and
push
mov
xchg
aad
pop
scas
stc
shl
xchg
pop
(bad)
xchg
ss
pop
in
and
fimul
jle
js
xchg
ret
sub
ret
dec
fdivr
and
jmp
stos
jnp
lds
and
mov
daa
xchg
fcomp
lahf
mov
push
enter
ret
mov
xchg
out
xor
or
test
mov
dec
xor
sbb
out
push
adc
sub
frstor
jle
lods
xchg
sbb
ret
pop
js
(bad)
jg
dec
int3
mov
pop
mov
lock
shr
xchg
pushf
and
(bad)
outs
xchg
shl
scas
dec
cmp
repz
sub
push
pop
push
inc
inc
ja
stos
ret
push
adc
mov
rcl
dec
mov
nop
mov
outs
in
outs
xor
mov
mov
mov
sub
pushf
ret
jne
fs
cld
stos
push
stos
sub
jno
repnz
cli
arpl
int
stc
jecxz
sbb
push
shl
push
jl
ins
sub
jg
push
pop
xchg
and
daa
(bad)
and
cli
pop
in
(bad)
out
mov
cmp
cmp
sbb
inc
ret
ins
enter
(bad)
int3
pop
(bad)
cld
mov
push
into
out
int
or
stos
cmp
div
ret
dec
arpl
or
adc
and
jae
lahf
movs
cmps
cmps
ret
loope
mov
and
punpckhbw
jmp
xchg
cmps
and
daa
jmp
inc
jnp
(bad)
(bad)
pop
rol
(bad)
(bad)
cmp
cmp
pushf
stos
ret
mov
mov
xchg
adc
and
pop
bound
xor
vsubps
xchg
aad
and
or
cmp
cmps
in
stc
sub
ss
dec
dec
test
scas
push
das
icebp
or
loop
mov
inc
psrld
cmp
not
add
adc
enter
xor
inc
and
lock
inc
mov
bound
pop
adc
(bad)
out
add
aas
out
or
inc
data16
data16
add
mov
out
mov
sub
pop
xor
repz
stos
retf
or
sbb
cmp
mov
pop
retf
mov
je
sbb
mov
mov
and
je
xchg
rcl
jp
add
cs
aad
xchg
dec
adc
rol
out
(bad)
jae
jno
and
fs
and
add
sub
mov
rol
sbb
pusha
retf
stc
mov
xor
cmps
jno
jb
gs
pop
iret
js
mov
(bad)
mov
add
fdivr
jle
ss
or
mov
enter
xlat
pop
inc
xchg
das
sbb
mov
shr
adc
push
add
xor
call
push
es
adc
sbb
and
out
inc
(bad)
fnstenv
shl
jl
pop
inc
jae
daa
stos
xchg
jl
enter
movs
imul
or
repz
jp
inc
lahf
jne
test
in
mov
loopne
jp
adc
in
pop
xchg
xor
(bad)
jle
dec
mov
jnp
rcr
sbb
sub
out
pop
loop
push
jecxz
(bad)
pop
call
add
sbb
cmps
mov
div
inc
bound
int3
jmp
out
inc
loopne
pop
scas
add
fwait
int3
mov
fiadd
pop
ret
lahf
and
pop
in
adc
pop
push
push
add
mov
leave
mov
jb
mov
out
jmp
dec
les
mov
out
cmps
in
popf
daa
ret
pop
xchg
hlt
add
jbe
add
pop
aad
pop
arpl
(bad)
xor
mov
jb
mov
cmp
adc
cmp
xlat
ficom
rol
jb
out
cmp
movs
pop
cli
add
and
adc
jmp
adc
dec
repz
push
aaa
mov
das
lods
push
sbb
xchg
xchg
out
addr16
mov
cmp
ret
popa
fist
cmps
mov
repnz
push
push
xchg
icebp
scas
or
addr16
enter
mov
in
dec
sbb
push
inc
mov
xchg
(bad)
and
sub
adc
pop
popa
inc
and
popa
xlat
push
pusha
rcl
dec
popf
inc
adc
ss
cli
mov
popf
div
(bad)
js
aam
mov
test
mov
inc
sub
jb
loop
push
neg
cmp
mov
and
xchg
int
jns
addr16
nop
xchg
xchg
lds
inc
mov
ss
push
add
je
mov
lock
mov
pop
call
pop
and
mov
and
fwait
push
ret
inc
rcr
cmps
cmps
sahf
add
int3
test
es
jne
mov
cmp
lock
vphaddubq
sub
call
jl
xor
jne
add
xchg
loop
loop
xchg
out
dec
scas
out
and
cmc
in
out
dec
pop
bound
push
push
mov
fistp
jne
out
xchg
jnp
cwde
push
es
add
and
lock
bnd
xchg
mov
clc
sbb
test
out
add
and
movs
data16
inc
sti
xchg
push
je
push
ror
adc
xor
push
imul
(bad)
mov
adc
cli
sar
push
push
mov
into
mov
sub
pusha
xchg
mov
xchg
rol
lds
push
push
sbb
aad
fdiv
in
sbb
xchg
cli
mov
ret
leave
repz
adc
mul
push
fnstenv
inc
jo
add
test
xor
(bad)
idiv
pop
test
inc
imul
pop
push
and
pop
cmp
outs
and
leave
xchg
xor
adc
ins
cmc
jmp
sbb
add
mov
xor
popa
mov
dec
not
xchg
movs
inc
ret
inc
mov
jmp
xchg
or
sbb
icebp
gs
mov
inc
jecxz
adc
mov
div
push
retf
mov
push
popa
(bad)
adc
cmp
(bad)
repz
movs
shl
out
mov
aad
push
jecxz
xor
xchg
movs
icebp
inc
inc
rcr
jle
dec
or
in
jb
rcl
cmp
adc
cmp
leave
das
mov
rcl
or
daa
stc
(bad)
inc
ss
aam
xchg
and
ret
stc
fdivr
and
xchg
push
adc
movs
jp
mov
add
retf
ret
outs
sar
sub
daa
mov
add
lock
sbb
mov
add
inc
out
xchg
adc
push
pop
out
cmc
in
popa
add
jg
dec
pop
jecxz
ins
push
pop
and
jo
inc
stos
jb
arpl
imul
sub
xor
xchg
test
xor
sbb
addr16
and
je
scas
xchg
(bad)
cli
ret
int3
popa
xchg
cwde
xchg
and
div
scas
or
adc
sbb
sbb
push
sub
ret
imul
fsubp
pop
adc
ss
fwait
lds
xor
outs
inc
ss
xchg
mov
imul
sub
mov
sbb
xchg
pop
loop
pop
test
xor
push
push
lds
inc
pop
loopne
mov
inc
push
int
rcr
push
adc
xchg
fs
gs
pop
inc
mov
aad
iret
mov
popa
pusha
jmp
cmovne
add
rcr
add
into
and
and
xor
pop
add
inc
adc
add
loop
cmp
sahf
(bad)
bound
test
xor
loopne
cmp
dec
add
retf
inc
or
push
daa
pusha
loop
aas
je
or
xchg
movs
sbb
fld
dec
mov
jb
or
push
add
mov
repz
test
into
sbb
mov
int3
clc
and
mov
add
jmp
xchg
ror
xor
push
mov
rcr
inc
push
add
out
pop
aas
pop
add
repnz
jns
(bad)
mov
cmps
hlt
pop
stc
cmp
push
repnz
adc
daa
mov
jae
push
xor
adc
jmp
stos
cdq
ret
shl
fs
loope
add
jae
or
mov
dec
pusha
xor
mov
jae
in
push
add
mov
scas
shl
je
in
xor
into
adc
stc
fwait
dec
jo
mov
nop
push
(bad)
cmc
test
sbb
es
out
cmp
not
aad
imul
idiv
arpl
mov
and
int
out
retf
xchg
dec
mov
psrld
sub
jbe
mov
cld
xor
and
xchg
mov
pop
test
xchg
outs
adc
add
push
out
shr
and
push
mov
mov
pop
mov
adc
pop
ror
jae
add
ret
xlat
repnz
xchg
and
jmp
popa
add
and
and
mov
imul
mov
lods
jbe
jb
mov
sub
hlt
xor
mov
mov
mov
aad
movs
call
rcl
mov
push
add
iret
inc
sub
inc
rol
xchg
lds
mov
add
(bad)
xor
and
fwait
pusha
ror
pop
inc
pop
dec
mov
push
pop
xchg
mov
pushf
push
xchg
xchg
test
mul
rol
movs
mov
push
fistp
ss
mov
adc
sbb
sbb
jl
jo
test
mov
inc
fnstenv
mov
cs
jle
jns
(bad)
push
loop
mov
call
sbb
js
lea
sahf
xor
lahf
imul
cmp
repz
jo
push
setp
pop
mov
add
xchg
xor
sahf
adc
(bad)
jle
add
mov
lods
call
mov
cmp
xor
mov
sub
mov
sti
mov
movs
and
loope
movs
sub
sub
lock
scas
rol
cmp
sub
push
sub
int
inc
div
sbb
push
daa
test
sbb
jge
xchg
cmp
iret
dec
inc
cdq
sbb
xor
mov
aad
pop
jmp
ret
push
jle
in
and
addr16
mov
jmp
sub
cmps
mov
mov
out
adc
popa
mov
adc
jmp
ins
add
out
jg
mov
lahf
rol
pop
xchg
cmp
ins
fwait
ret
jmp
mov
dec
or
mov
cmps
add
pop
xchg
push
(bad)
(bad)
shr
aad
mov
test
daa
xor
mov
sbb
int3
shl
jne
out
jb
shr
mov
push
adc
ror
sahf
inc
and
imul
xor
cmp
add
mov
pop
inc
out
adc
mov
mov
dec
cmp
fwait
push
mov
sbb
or
jbe
sub
add
sbb
inc
mov
xcrypt-ctr
cmps
fiadd
aas
ja
mov
or
out
imul
into
je
xor
mov
sub
stc
push
adc
adc
xchg
test
stc
or
dec
in
push
jmp
(bad)
jae
and
mov
push
mov
push
add
(bad)
adc
cmps
pop
mov
push
dec
mov
mul
xchg
xchg
popa
outs
aaa
mov
xchg
shl
or
pop
ins
inc
in
push
xchg
mov
inc
dec
sbb
ss
inc
addr16
scas
popf
xor
mov
cmc
and
mov
addr16
inc
pop
not
aas
in
retf
lock
mov
aaa
cdq
dec
aad
push
(bad)
push
jo
fdivr
fs
rol
xchg
mov
shl
xchg
dec
mov
adc
or
fmul
stc
jns
(bad)
repnz
in
pop
es
push
xor
push
xor
dec
cwde
and
xchg
sbb
sub
pop
cmp
imul
push
pusha
(bad)
je
mov
imul
push
xor
adc
push
stc
mov
sub
(bad)
ja
push
cmc
or
push
(bad)
push
mov
add
fcomp
stos
xchg
movs
loop
fadd
lahf
inc
sti
popa
(bad)
out
jns
and
mov
sbb
xor
mov
xor
(bad)
loop
inc
xor
or
jae
cwde
jmp
stc
jl
inc
fwait
gs
movs
and
loopne
add
ja
push
mov
jo
aaa
push
das
in
in
or
xor
test
dec
out
push
fwait
xchg
jmp
or
out
imul
(bad)
xor
sbb
js
push
dec
add
sar
addr16
lock
xor
rcpps
icebp
call
fild
lock
mov
stc
das
jp
loope
in
cmps
mov
cdq
push
pushf
xchg
jae
fnstcw
cdq
jl
push
jnp
push
outs
adc
ror
daa
shr
out
pop
xor
inc
push
adc
cld
es
lock
sahf
xor
ins
lahf
shr
xlat
stc
jb
addr16
test
not
pop
adc
lock
mov
mov
jo
rcr
jnp
inc
push
adc
mov
jnp
mov
xchg
iret
cld
cmc
dec
cmp
xchg
mov
pop
xchg
adc
fcmovu
pop
push
scas
ss
aad
cmc
sbb
xlat
mov
cmp
push
mov
cmps
jge
int3
adc
xchg
(bad)
push
(bad)
jb
mov
pop
xor
call
loop
add
into
xchg
inc
xchg
cli
push
ror
daa
dec
lods
jne
in
sbb
int
inc
fimul
fidiv
mov
or
fcomi
add
icebp
jecxz
dec
mov
add
jp
and
repnz
movs
pop
imul
add
jecxz
mov
sbb
xchg
jmp
cld
inc
outs
push
push
call
xchg
mov
imul
mov
xchg
xor
xor
cli
(bad)
(bad)
retf
das
add
bound
in
leave
test
push
adc
sub
push
adc
movs
and
mov
push
call
jg
jecxz
add
lods
jl
in
(bad)
std
out
pop
mov
and
rcr
push
cmps
dec
mov
mov
sub
std
xchg
shl
and
fsub
loop
lea
loop
test
lahf
cmp
setns
fst
jo
std
mov
lods
int3
add
int
int3
sub
lods
mov
inc
rcr
jae
into
dec
int3
push
dec
mov
dec
aaa
pop
dec
pop
pop
nop
sub
dec
inc
mov
in
call
xor
pop
pop
mov
mov
aas
dec
mov
adc
(bad)
int
rcl
fcom
fs
mov
mov
add
jl
mov
sub
neg
(bad)
sub
addr16
(bad)
adc
mov
enter
lahf
mov
ins
and
ja
loope
(bad)
stc
lock
js
mov
adc
les
(bad)
in
mov
sahf
mov
mov
xchg
add
jge
in
push
add
push
mov
aas
dec
popa
out
aas
pop
nop
jne
call
shr
add
adc
(bad)
repz
std
mov
inc
push
xchg
mov
xchg
xchg
jp
iret
mov
xchg
dec
ds
aaa
or
xlat
lahf
ja
mov
dec
neg
xchg
cdq
lods
fcomip
adc
arpl
aam
mov
inc
adc
imul
shl
fmul
push
mov
push
sub
xor
sub
cmp
(bad)
daa
outs
inc
inc
mov
in
fisttp
cmps
out
xchg
sub
xchg
push
xchg
sub
pop
xchg
mov
sbb
pop
dec
or
lods
mov
add
push
adc
sub
je
and
adc
jo
bound
push
inc
cmp
push
in
mov
mov
adc
push
pop
push
cmp
jg
ret
pop
xchg
or
jg
in
int
pusha
(bad)
jbe
inc
xor
xor
cli
sti
enter
sub
inc
pushf
gs
ds
call
xchg
xor
aad
dec
push
daa
sbb
and
imul
dec
xchg
jmp
repz
popa
push
push
fimul
add
repnz
pop
jbe
sahf
jmp
bound
(bad)
cmps
mov
inc
out
jb
movhps
jne
add
push
packsswb
cmps
rcl
xor
push
mov
sbb
pop
mov
(bad)
pusha
mov
mov
sbb
push
lods
or
dec
push
dec
sub
add
pop
or
out
(bad)
retf
shl
mov
or
pusha
inc
aam
ret
dec
out
xor
xchg
sahf
mov
rcl
push
inc
stos
sub
sub
or
inc
mov
rcr
popa
push
xchg
(bad)
rcl
(bad)
out
pop
inc
jae
add
add
dec
pop
loope
add
mov
mov
mov
call
sar
mov
pop
add
aaa
pusha
js
xchg
scas
inc
ss
mov
test
ret
xchg
fidiv
and
scas
adc
repnz
mov
xor
je
mov
sub
cmp
xor
adc
inc
adc
xchg
and
(bad)
jnp
inc
xchg
xchg
push
fld
sbb
inc
cdq
and
cmc
xor
xchg
and
fisub
out
outs
xchg
pop
call
jbe
dec
je
add
fs
outs
xor
mov
push
mov
mov
inc
push
ins
dec
or
xor
and
das
jle
jmp
mov
jecxz
div
test
push
aam
sub
add
mov
iret
adc
repz
add
ss
in
and
rcl
jo
xchg
call
xchg
pop
mov
hlt
aad
ret
jbe
jge
and
push
pop
popa
push
jbe
xlat
daa
in
pop
gs
xor
(bad)
cmps
enter
mov
push
mov
aaa
or
faddp
jns
mov
mov
mov
std
ds
dec
jle
test
in
pop
lds
push
jmp
push
daa
imul
ins
push
xor
ins
repz
jge
push
or
loop
sub
nop
cmp
cli
test
and
test
into
aad
or
ds
addr16
pop
cmp
ret
es
inc
loop
or
inc
xor
out
retf
ins
aas
cmp
sti
jecxz
lock
ja
xchg
out
fpatan
pop
mov
sar
mov
sbb
cmp
dec
dec
bound
or
push
and
sub
pop
mov
mov
mov
loop
and
aaa
out
xor
fs
out
and
push
icebp
mov
pop
movups
mov
and
sahf
adc
cmp
pop
cmp
xchg
out
cld
push
jbe
mov
inc
daa
ret
mov
test
aam
sti
inc
push
inc
push
adc
jmp
sbb
xchg
add
xchg
cmp
pop
mov
shl
push
push
push
or
sub
xor
hlt
cmp
out
ret
lock
jb
inc
add
and
cmp
(bad)
xor
in
sub
inc
fisubr
ja
movs
ss
mov
daa
push
loop
mov
jnp
jbe
mov
test
idiv
mov
xchg
push
add
xor
and
jae
sbb
lahf
cli
inc
cs
mov
ins
cmp
push
mov
out
mov
mov
div
xchg
push
inc
es
mov
movs
xchg
add
stos
je
sahf
loopne
xchg
adc
test
sub
mov
inc
ror
cwde
(bad)
fmulp
cli
lahf
jge
icebp
pop
sub
inc
cld
ins
inc
xor
scas
push
inc
xor
jne
nop
push
retf
das
scas
cmps
cmp
lahf
add
xchg
les
push
addr16
aad
add
hlt
popf
or
out
pop
push
shl
movs
xchg
mov
pop
add
mov
cdq
jmp
inc
dec
(bad)
popf
and
cmps
sub
inc
stc
mov
inc
pop
pop
and
in
cmp
retf
icebp
add
jp
xor
outs
jecxz
shl
shl
cld
les
adc
pop
push
mov
movs
cld
adc
mov
and
clc
call
outs
test
add
xor
lea
sbb
je
jge
leave
inc
xor
ret
(bad)
int3
sbb
jbe
daa
mov
xchg
rcl
and
retf
pop
mov
into
cld
aam
sahf
xchg
push
push
fcmovnb
cli
push
add
popf
scas
mov
sbb
fidiv
movs
inc
(bad)
rol
push
xchg
ret
into
mov
mov
jg
inc
inc
mov
push
mov
or
imul
ret
and
and
pop
and
jae
(bad)
iret
mov
or
(bad)
push
clc
retf
xor
shl
dec
mov
fnstenv
jecxz
and
sub
shl
jbe
jne
data16
pop
adc
adc
cmp
not
mov
aam
loop
sbb
xchg
in
je
mov
xor
in
add
and
push
add
cmps
cmp
fmul
aad
pop
loop
fbstp
je
pop
mov
dec
out
mov
xchg
xchg
cmps
outs
lods
cmps
inc
inc
xchg
push
xchg
mov
sub
jmp
repz
jbe
not
ja
jbe
mov
jns
addr16
xor
or
push
outs
xor
mov
shl
pop
push
mov
lods
pushf
fstp
inc
jle
mov
sbb
adc
nop
sar
jmp
inc
out
cmps
outs
test
adc
mov
push
shr
xor
enter
inc
out
in
retf
mov
sub
cmp
sub
push
(bad)
movs
loope
push
mov
mov
pop
pop
stos
or
out
and
ds
pop
adc
repnz
popa
push
stos
ret
hlt
mov
xor
cmps
mov
xchg
xchg
add
stos
mov
ficomp
lahf
pop
or
push
sub
mov
jne
into
not
adc
mov
ins
add
jp
mov
leave
jge
bnd
xchg
rcl
dec
adc
or
fs
adc
xor
xchg
aaa
popf
xlat
popf
ret
and
int3
sbb
and
pop
dec
mov
ds
push
mov
stos
jle
imul
xor
xchg
inc
mov
pop
mov
lock
test
sar
test
adc
mul
js
(bad)
test
inc
test
or
inc
fiadd
xchg
lock
icebp
cmps
cld
enter
mov
mov
xchg
pop
inc
jns
movntps
or
fild
movs
(bad)
rcl
xchg
(bad)
pop
or
lahf
test
rcl
jmp
inc
mov
fcom
dec
xchg
mov
xchg
jno
adc
ja
and
sbb
pop
xchg
mov
and
push
add
rcl
jmp
pushf
aad
jbe
aaa
dec
xor
jns
(bad)
aas
jno
call
mov
movd
es
repz
xor
dec
or
xchg
ja
icebp
cmps
jl
repz
mov
add
popa
jnp
bound
into
add
inc
and
loop
sbb
repz
adc
(bad)
push
nop
add
add
push
out
and
ret
popf
movs
icebp
cmc
div
rol
std
xor
aas
inc
xor
sbb
in
fisub
add
aam
xchg
imul
add
pushf
inc
pop
and
es
mov
mov
add
div
mov
jg
cmp
jnp
(bad)
sub
push
aaa
push
lahf
pusha
cld
shr
test
mov
dec
cmp
mov
sbb
push
pop
cdq
jl
xor
add
jnp
mov
lahf
clc
adc
shr
pop
push
xchg
pop
in
xor
sti
push
jo
into
push
xchg
(bad)
rcr
int3
mov
aaa
pop
imul
rcl
push
or
inc
mov
shl
loop
div
arpl
ficomp
or
mov
retf
es
addr16
pop
jecxz
repnz
jmp
repnz
ds
push
es
in
scas
in
stos
jp
or
loopne
test
and
mov
push
(bad)
(bad)
cli
pop
(bad)
sti
jmp
and
mov
add
adc
cs
retf
inc
call
jb
mul
pop
inc
mov
lods
in
mov
imul
adc
div
out
into
add
jno
mov
cs
adc
inc
xor
loop
mov
je
loop
ss
das
pop
rcl
sbb
sbb
inc
loopne
aam
lds
dec
mov
orps
cdq
sbb
out
adc
inc
in
push
add
mov
sub
mul
lsl
xchg
or
push
push
xchg
data16
aaa
xor
inc
cmps
in
repnz
push
es
out
fcomp
int3
push
pop
and
(bad)
out
data16
ret
pop
aaa
popa
pusha
xchg
and
leave
cld
int3
mov
adc
ret
sub
iret
cmps
addr16
daa
sti
mov
bound
stos
(bad)
mov
adc
pop
add
mov
ds
in
sub
lods
jmp
hlt
xor
das
es
loopne
add
inc
and
je
cmps
dec
push
adc
add
aad
or
out
retf
add
xor
and
(bad)
pop
popa
xor
adc
movs
inc
adc
jp
add
xlat
fidivr
lock
(bad)
jns
cmp
sbb
mov
mul
pop
(bad)
movs
mov
add
out
enter
sub
sti
inc
mov
or
fcomip
cwde
ss
test
ds
add
cmps
mov
dec
xor
xchg
pop
add
cmp
cmp
psubb
lods
(bad)
mov
adc
xchg
(bad)
movs
ja
mov
mov
out
sbb
xor
aam
nop
aad
inc
test
xor
mov
bound
es
mov
js
hlt
mov
xchg
imul
pop
cmp
punpckldq
lock
rcr
or
fdivp
rcl
and
stos
dec
jecxz
add
pop
push
aam
xchg
movs
hlt
dec
gs
push
pusha
fucom
data16
repz
push
loop
idiv
jnp
movs
cdq
dec
and
popa
inc
retf
xor
test
or
daa
fs
ficom
xchg
outs
add
in
mov
jg
(bad)
ins
xlat
(bad)
and
jo
inc
pop
out
sub
xor
jae
inc
test
add
mov
jl
pop
push
or
jmp
pop
or
mov
xchg
add
and
xor
mov
arpl
mov
xchg
xchg
or
dec
xchg
push
inc
lahf
push
push
rdtsc
int3
mov
out
out
es
and
or
scas
mov
or
out
loop
dec
retf
jb
or
pop
push
adc
(bad)
cs
imul
mov
dec
inc
jle
sbb
fidiv
ret
pusha
sub
add
lock
in
cmp
sbb
iret
jge
push
push
sub
out
push
push
push
inc
fimul
mov
mov
xor
sahf
popa
fnstenv
gs
shr
pusha
loopne
or
inc
pop
dec
in
xor
popa
ret
add
cmp
arpl
inc
pop
mov
mov
cmps
or
mov
popa
adc
mov
xor
xchg
es
adc
inc
out
(bad)
cmp
(bad)
push
(bad)
xchg
push
jg
xlat
inc
inc
imul
or
mov
outs
adc
fdivr
and
fwait
xor
aam
in
cli
mov
adc
sbb
mov
fld
cmps
xor
xor
jbe
jnp
jecxz
pop
clc
stos
idiv
mov
xchg
and
scas
cli
add
jns
aas
mov
adc
daa
adc
aaa
lods
jae
shl
mov
shl
in
xchg
inc
adc
stc
rol
shl
sub
mov
cmp
rcl
mov
and
xor
jae
jae
inc
out
daa
or
add
(bad)
mov
adc
sub
aaa
sub
rcl
(bad)
push
mov
jecxz
inc
gs
mov
mov
mov
jg
fbld
test
ja
push
push
adc
addr16
adc
nop
gs
adc
clc
into
adc
and
push
jns
inc
fs
ss
fild
retf
add
push
jae
push
mov
xor
retf
sub
loop
sbb
sbb
push
push
inc
daa
cmp
out
rol
(bad)
loop
mov
cmp
and
mov
sub
mov
adc
lahf
xor
sub
add
cmps
aam
loope
fisub
pop
adc
in
sub
push
mov
jns
mov
jg
xor
inc
mov
jne
fimul
pop
pop
sub
jmp
xchg
out
addr16
pop
or
out
inc
pop
inc
jbe
and
add
enter
jo
pusha
div
pop
jo
in
push
ret
adc
jb
stos
sbb
inc
icebp
jae
lods
clc
ret
mov
lahf
sub
xchg
stc
cmc
out
sub
mov
xor
push
cmps
dec
aas
lahf
jecxz
xchg
and
and
sbb
mov
xchg
xor
push
xchg
and
inc
jae
and
in
clc
mov
jg
sub
es
cmp
and
mov
xchg
out
ret
(bad)
mov
js
ret
fistp
lds
imul
(bad)
dec
xor
stc
jne
mov
fwait
(bad)
dec
sub
cmp
int
sbb
mul
add
loopne
icebp
sub
fist
push
jmp
icebp
push
fbstp
xlat
add
mov
(bad)
jbe
enter
(bad)
mov
push
pushf
ret
out
inc
and
fld
cmps
inc
mov
push
loop
leave
std
push
xchg
mov
outs
push
daa
bound
arpl
cmp
inc
out
push
and
retf
bound
pop
sbb
mov
pop
sbb
inc
fstp
(bad)
sahf
cmp
std
aaa
pop
sub
adc
and
ss
fsub
sub
daa
cmps
mov
dec
pop
mov
or
pop
dec
call
xchg
and
shr
aaa
(bad)
xchg
outs
test
xor
pop
inc
dec
pop
xor
add
pop
stos
lds
dec
or
(bad)
fsubr
fld
ror
pop
add
ret
adc
xchg
inc
add
cmp
or
adc
push
inc
and
xor
repz
ret
cld
loopne
jae
(bad)
test
ins
ins
xor
jp
sub
dec
leave
dec
div
mov
out
jb
sbb
xor
pop
xchg
nop
cmp
leave
pop
jns
pushf
or
jb
shl
dec
inc
push
loop
adc
cmps
retf
ror
in
cld
sahf
hlt
xchg
adc
push
inc
xor
sub
aam
push
sub
rcl
shl
mov
aas
arpl
mov
and
xor
inc
jnp
shr
aad
mov
and
xchg
call
dec
xchg
xchg
xor
push
add
xchg
cmp
and
std
mov
fidiv
imul
(bad)
sbb
mov
adc
jmp
loope
int3
dec
sub
or
in
lock
xchg
sbb
jle
into
add
cmp
xor
and
fsubrp
mov
xor
sub
mov
jle
xchg
in
inc
arpl
sbb
nop
adc
dec
mov
shl
popa
adc
xlat
fs
xor
adc
adc
pop
cli
dec
mov
stc
mov
xchg
aaa
push
ins
retf
add
xor
cld
es
xor
or
xchg
outs
pop
jne
repz
mov
add
pop
pushf
push
xor
add
inc
fidivr
int
sbb
ret
xrelease
lahf
and
xor
ret
repz
push
jns
loop
or
sub
xchg
mov
add
scas
pop
loope
lds
inc
aad
or
xchg
xor
xchg
xchg
dec
and
stc
jb
mov
call
clc
add
inc
icebp
call
cmp
or
jb
xor
and
loope
js
loopne
and
repz
nop
push
adc
or
pop
inc
xor
add
rcr
sti
div
xchg
xchg
ret
mov
push
out
movs
add
fstp
xchg
mov
add
pop
and
ins
in
inc
shl
xchg
hlt
out
xchg
jbe
add
add
and
inc
adc
xchg
xchg
dec
adc
scas
pop
daa
lds
sbb
das
jbe
data16
xchg
mov
or
mov
xor
pop
jae
std
and
arpl
adc
fwait
outs
dec
inc
icebp
sbb
div
ds
cmp
sar
push
adc
pop
je
arpl
xchg
out
iret
les
push
outs
add
xor
aas
nop
add
sbb
push
mov
push
(bad)
xchg
inc
lahf
mov
adc
push
dec
scas
adc
jns
adc
push
add
cmps
jbe
out
inc
sysret
dec
sbb
xchg
ret
push
(bad)
jmp
inc
imul
xchg
adc
repnz
cmp
pop
mul
push
inc
add
outs
sbb
sbb
test
jno
aad
in
test
imul
inc
xchg
jbe
jmp
push
xchg
push
push
mov
rol
mov
mul
sub
bound
imul
xchg
mov
lea
ja
xor
mov
stos
fistp
jecxz
mov
push
cs
les
aaa
js
xchg
call
and
mov
sar
int3
adc
jg
shl
mov
aad
pop
fiadd
pop
test
mov
stos
rol
mov
adc
adc
icebp
pop
xchg
shl
call
scas
dec
inc
inc
(bad)
fist
mov
fs
out
in
call
lea
loop
repnz
mov
out
out
and
ret
push
mov
test
sbb
mov
pop
outs
fnstsw
arpl
dec
jmp
je
xchg
gs
js
js
lahf
add
out
or
adc
and
mov
imul
sub
pop
sbb
cmp
rcl
xchg
cli
(bad)
stc
movs
mov
mov
dec
out
push
adc
arpl
test
cmc
dec
data16
js
sar
ja
mov
mov
inc
xchg
inc
mov
jp
add
pop
jo
call
add
jmp
sar
add
push
data16
cmp
xchg
dec
push
mov
stos
movs
retf
cmps
mov
jg
pushf
repz
jge
push
xchg
adc
aaa
pop
cmc
arpl
pop
test
or
movs
aam
cld
popf
iret
mov
lahf
inc
(bad)
ins
adc
dec
xchg
pop
jecxz
mov
cmp
aas
mov
popf
sbb
push
mov
aad
mov
pop
mov
inc
add
jno
jg
not
add
out
ins
add
xor
adc
cdq
sub
mov
jb
out
mov
fisub
fldenv
fidivr
nop
cmp
push
xchg
daa
popa
mov
xchg
fs
movs
frstor
jbe
add
or
add
cmp
xchg
cli
arpl
test
xor
push
call
ror
clc
inc
shl
mov
test
xlat
xchg
call
push
pop
outs
and
push
pop
iret
iret
dec
mov
add
cwde
mul
daa
ret
sub
(bad)
cmp
pop
or
les
or
(bad)
add
ret
and
push
in
xchg
stos
cmps
push
or
or
jmp
cld
pop
pop
icebp
test
lds
cmp
add
test
(bad)
ja
aaa
push
pop
jmp
pop
(bad)
not
les
shr
add
inc
mov
fdiv
xor
leave
mul
sbb
lds
retf
push
shl
push
push
add
into
sbb
push
push
gs
mov
call
xchg
jecxz
sub
push
xchg
xchg
add
dec
maskmovq
div
pusha
movs
mov
test
xchg
movs
cmps
push
movs
icebp
in
add
dec
push
sub
daa
aad
sahf
sub
sub
movs
xor
add
cli
push
mov
lods
cmp
pusha
fld
xor
sub
dec
(bad)
cli
dec
ret
lods
nop
and
mov
jnp
test
jns
push
scas
icebp
fwait
mov
inc
xchg
mov
stc
popa
or
jp
jg
jbe
arpl
and
(bad)
popa
(bad)
mov
shr
xchg
pop
arpl
cmp
mov
mul
adc
jge
pop
mov
aas
aas
mov
pop
lods
and
push
add
or
mov
retf
dec
xor
sbb
cwde
mov
ins
pop
push
push
in
out
cld
popa
and
hlt
hlt
jne
xchg
xchg
pop
mov
mov
lock
sub
ss
mov
jb
mov
call
mov
sub
ja
sti
jb
mov
push
ss
lods
mov
(bad)
jmp
(bad)
shl
inc
xor
cdq
stos
(bad)
das
(bad)
loopne
cld
mov
aaa
cmps
add
scas
push
inc
test
push
xor
xlat
movs
(bad)
ins
test
push
adc
mov
mov
(bad)
std
ja
lds
popa
add
out
sbb
icebp
call
daa
hlt
dec
or
or
rol
out
xlat
mov
scas
iret
mov
leave
mov
daa
in
ret
leave
xor
es
sahf
and
ins
mov
push
dec
fisttp
xchg
and
add
mov
mov
or
inc
lods
pop
js
or
(bad)
xor
stos
in
rol
movs
fst
xchg
dec
mov
ret
(bad)
push
cmp
repnz
pop
mov
push
xchg
inc
inc
daa
(bad)
cld
(bad)
fs
push
enter
mov
push
cli
mov
hlt
jecxz
fadd
xchg
lahf
push
cwde
call
iret
xor
aad
mov
mov
shr
mov
adc
ds
inc
push
pop
aas
lds
(bad)
mov
push
xchg
pusha
mov
shr
cmp
rol
adc
mov
ins
aas
out
sbb
or
rol
mov
das
mov
sub
repnz
push
mov
loop
cmp
scas
pushf
add
inc
mov
or
xchg
rcl
jecxz
bound
mov
enter
xor
dec
adc
cs
in
(bad)
xchg
lds
lock
cmps
push
cmps
jb
sub
mov
cld
add
sbb
or
fwait
stos
jo
fucomip
aam
lods
dec
out
pop
lods
push
mov
mov
out
or
std
mov
jmp
inc
adc
mov
jae
cmps
shl
xchg
call
inc
mov
sub
(bad)
pop
mov
xor
or
ds
cmps
add
pop
mov
out
and
and
jo
xor
aam
xchg
iret
sbb
arpl
or
nop
or
and
loopne
cld
(bad)
repz
mov
fild
(bad)
jge
dec
push
loopne
mov
xchg
ret
mov
sbb
rol
inc
pop
mov
ror
xchg
push
cmc
or
adc
xchg
xchg
daa
push
add
dec
pop
gs
ret
movs
adc
movs
xchg
mov
outs
push
repnz
cli
adc
mov
imul
mov
add
push
cmps
and
repnz
mov
sbb
jnp
aaa
push
lods
ffreep
cmps
mov
mov
push
mov
xlat
add
xor
push
add
mov
arpl
and
ja
cdq
ret
pop
xor
xor
fsubp
push
xor
(bad)
bound
sar
inc
(bad)
cmps
div
jae
aad
push
xchg
(bad)
leave
int
jo
xchg
ja
lahf
(bad)
xchg
xchg
xchg
xchg
and
lods
xor
mov
out
(bad)
cmps
mov
push
adc
pushw
cmc
adc
fpatan
dec
xchg
cmp
add
and
test
sbb
cmp
mov
rcl
xchg
das
add
sti
jo
fucomip
or
fs
push
xchg
loop
cmp
pusha
xchg
out
xchg
es
in
in
dec
add
add
das
retf
div
les
in
mov
push
cmps
add
xchg
xor
(bad)
sub
mov
mov
adc
sub
ss
xchg
(bad)
lock
jnp
push
cli
pop
pop
ret
dec
mov
sbb
(bad)
mul
retf
aas
(bad)
mov
and
xchg
mov
push
push
rol
in
cdq
sbb
mov
aas
adc
mov
adc
rcl
sar
fdiv
daa
xor
ror
test
cmc
hlt
stos
inc
jmp
push
pop
in
and
sbb
and
sub
fild
sahf
xchg
jge
fisttp
mov
mov
xor
push
add
mov
push
push
rol
movs
out
stos
jp
sub
and
cmp
dec
cmps
mov
add
and
push
xchg
dec
arpl
jmp
idiv
bnd
shl
cmp
std
mov
inc
inc
pop
movs
mov
xchg
add
cmps
xrelease
out
imul
inc
inc
sti
push
imul
jp
mov
movs
ficom
inc
xchg
xchg
mov
jae
(bad)
mov
js
or
push
imul
mov
lds
inc
cmps
mov
push
xor
data16
xlat
push
sub
pop
add
cmp
nop
loop
xchg
aas
mov
mov
sub
push
mov
xor
jmp
in
push
div
div
outs
leave
dec
or
dec
adc
repz
stc
repnz
inc
mov
aam
and
aaa
mov
imul
dec
sbb
dec
shl
int
cmc
mov
cmps
(bad)
sub
in
xor
cmc
leave
int3
push
inc
loopne
xlat
es
(bad)
call
mov
bound
dec
xchg
call
aaa
pop
push
adc
mov
mov
out
fist
adc
cs
shl
xor
fs
iret
lea
push
fiadd
push
aam
and
dec
clc
cmp
xor
cmps
jg
in
aam
outs
push
sub
push
iret
rcl
outs
add
ds
ret
add
pop
cmp
in
in
adc
jno
push
fs
pop
aaa
daa
sub
and
loop
in
xor
dec
jge
dec
out
rep
loop
cmp
sub
retf
(bad)
loop
lock
pop
mov
sbb
shl
sbb
jns
push
ins
or
xchg
out
pop
mov
(bad)
pop
and
cmps
xor
cmp
add
pop
sbb
push
icebp
stos
in
inc
(bad)
aad
pop
fbstp
(bad)
mov
les
cmp
mov
xor
push
cdq
iret
test
and
lods
out
xchg
(bad)
cmp
or
shl
es
jne
pusha
and
es
adc
push
je
aaa
iret
movs
push
ds
retf
lods
cdq
rcr
or
fbstp
pop
cld
xor
je
or
nop
loop
inc
xor
adc
push
xchg
pop
push
loopne
and
ret
xlat
or
push
jg
jg
jo
xor
fs
pop
jmp
xor
xor
add
cmp
add
cmc
mov
daa
push
or
xor
jecxz
cmp
push
ret
fs
lds
test
dec
repnz
mov
inc
sbb
xchg
mov
xor
mov
ror
xchg
xchg
sub
or
clc
into
aad
mov
inc
addr16
xor
and
icebp
(bad)
std
pop
xor
int
inc
xlat
jp
pop
and
repnz
vmwrite
xchg
icebp
out
or
add
ss
pop
mov
test
push
not
or
mov
pop
xchg
leave
xchg
test
xchg
pop
in
add
xor
out
pop
push
jle
(bad)
scas
sub
ficomp
test
daa
rep
in
and
add
lods
mov
cmp
imul
xchg
in
dec
idiv
cmps
cwde
inc
fmul
cmp
mov
das
ret
inc
repnz
mov
sub
fsubr
push
sbb
popa
aad
scas
jne
jmp
push
clc
or
jb
inc
pop
xor
mov
mov
mov
scas
jb
or
add
mov
inc
xchg
mov
loop
mov
and
mov
pop
add
xchg
out
push
push
lods
inc
loopne
mov
cmc
xor
sub
mov
arpl
pop
xchg
addr16
sbb
mov
adc
push
mov
gs
aam
das
jecxz
xchg
mov
(bad)
cld
add
xor
sbb
push
mov
ins
dec
(bad)
adc
mov
int
mov
out
inc
arpl
jecxz
adc
(bad)
mov
push
(bad)
mov
inc
xor
xchg
lahf
xchg
addr16
mov
jbe
adc
xchg
xchg
mov
jge
pop
adc
pusha
sbb
movs
jae
mov
outs
jmp
xchg
pop
loope
push
jecxz
out
out
in
gs
and
retf
jbe
jp
mov
(bad)
sub
xchg
aas
mov
cmp
add
xor
and
dec
jb
add
sub
cwde
je
(bad)
xchg
fs
loop
in
retf
stos
movs
mov
arpl
fs
fwait
js
cmp
pop
enter
push
mov
add
lea
mov
nop
dec
add
push
jecxz
adc
pop
push
pusha
mov
inc
xchg
jns
loope
in
adc
data16
loope
mov
cmc
mov
(bad)
sub
repz
jmp
cld
test
pushf
aas
mov
mov
adc
movs
test
int
or
and
lock
xchg
loop
ret
and
rcl
xor
es
jmp
adc
mov
jmp
rol
rcl
imul
aas
cli
push
xor
popf
xor
ss
jecxz
(bad)
xchg
xchg
das
xor
test
leave
fnstcw
in
push
pop
inc
jbe
outs
sub
mov
jmp
repz
jb
(bad)
push
not
xchg
std
dec
cmp
mul
imul
cwde
adc
ins
sbb
(bad)
mov
sbb
xchg
or
jno
inc
loop
xchg
cmp
inc
and
sbb
cmp
ss
mov
and
push
sub
inc
gs
loope
inc
es
inc
pushf
(bad)
add
xchg
gs
ret
stos
xchg
or
sbb
jno
sbb
outs
push
mov
push
in
xor
mov
stos
mov
lea
sbb
push
loope
dec
pop
or
hlt
jb
jl
xlat
mov
shl
push
fs
add
push
mov
dec
push
rsqrtps
push
add
aad
(bad)
dec
push
mov
ret
aam
mov
daa
cs
pusha
cwde
jl
jmp
push
xchg
add
inc
inc
ja
push
repnz
loope
xchg
dec
jae
in
pop
(bad)
retf
cdq
ss
in
pop
xchg
aas
retf
jge
out
rol
shl
xor
mov
dec
cwde
mov
gs
fdivr
pop
sub
aaa
cmps
gs
arpl
out
bound
mov
sub
jae
int3
push
in
xchg
push
jbe
mov
mov
xchg
or
ret
mov
das
mov
test
test
lock
mov
xchg
push
mov
fnstsw
or
sbb
js
sub
(bad)
popa
rcr
out
jbe
xor
inc
push
cli
push
mov
sbb
xchg
mov
test
lahf
les
ret
sbb
mov
int3
jo
hlt
stos
add
jae
add
lahf
bswap
and
enter
jb
dec
mov
mov
icebp
mov
push
and
test
cmps
inc
mov
in
adc
out
xchg
pop
fcom
bnd
pop
push
retf
xchg
dec
adc
and
enter
mov
(bad)
leave
retf
mov
xchg
add
shr
and
cmp
mov
fisub
shr
ss
pop
lahf
rcl
push
sub
add
jmp
mov
push
xchg
rdmsr
pop
movs
ja
cld
loope
daa
out
cmc
(bad)
jmp
xor
add
mov
mov
jmp
cwde
stc
mov
mov
in
popa
add
repnz
ret
push
ficomp
dec
(bad)
mov
cmp
or
add
mov
(bad)
fucomip
test
or
push
xor
cmp
mov
inc
ja
or
hlt
ss
dec
cmp
dec
and
xor
daa
cld
mov
mov
push
rcr
rcr
out
popf
(bad)
push
aad
xchg
idiv
(bad)
cmp
xor
sub
adc
xor
adc
out
arpl
xchg
fidivr
mov
loop
inc
inc
mov
fcomip
inc
sbb
mov
data16
push
xlat
in
and
adc
dec
pop
movs
into
stos
xchg
push
dec
mov
adc
add
test
aas
pop
sub
cmp
movs
push
les
out
stc
sub
xchg
sbb
aam
idiv
daa
loope
cwde
xor
shl
loope
leave
cdq
pop
int
or
dec
push
add
jmp
push
xchg
not
xchg
sub
hlt
dec
jne
add
lods
gs
jb
jmp
xor
jmp
gs
inc
xchg
mov
cmp
mov
hlt
je
jne
inc
xor
mov
ret
fwait
test
xor
jns
nop
cmps
cmps
mov
mov
and
push
cli
add
jnp
int3
pop
mov
jmp
push
and
shl
mov
adc
(bad)
cli
dec
push
dec
or
adc
add
pop
mov
rcl
dec
mov
std
maskmovq
idiv
rol
pop
retf
jne
test
jno
cs
pop
jne
std
arpl
xchg
cmp
loop
push
jae
cmp
and
dec
fs
cli
xchg
(bad)
mov
adc
xchg
mov
call
into
adc
bound
jg
mov
test
je
stc
xor
and
leave
xchg
lahf
or
ret
xchg
mov
shl
cli
xor
(bad)
jecxz
xchg
xchg
mov
fld
push
addr16
xchg
inc
out
xchg
sub
cmp
xchg
cmp
mov
std
xlat
popa
fidiv
jmp
and
mov
or
pop
leave
or
rcl
idiv
jno
lss
js
mov
test
das
aaa
dec
pop
pmullw
push
imul
add
or
jnp
rol
fisttp
pop
jnp
jecxz
repnz
dec
sbb
pop
out
xchg
jbe
cli
push
ret
mov
sub
repz
mov
cld
push
push
shl
jmp
imul
and
dec
shl
jp
stc
into
retf
mov
jbe
cld
xchg
loop
xchg
sahf
rcr
sbb
cmc
add
sti
pop
inc
inc
not
push
js
and
repnz
sbb
div
xor
push
push
xlat
je
cmc
mov
jmp
inc
cmp
lods
mov
repz
cmp
adc
inc
or
mov
push
wbinvd
int
mov
ds
ins
adc
xor
cmps
mov
push
add
int3
repnz
xchg
sub
jge
xchg
pop
inc
and
out
repz
inc
loop
xor
fwait
test
inc
push
js
mov
jne
xchg
xchg
inc
in
ret
push
ja
mov
inc
imul
sub
push
inc
and
inc
test
fld
repnz
push
test
mov
add
(bad)
and
fldenv
push
push
repz
(bad)
into
inc
xor
mov
out
adc
adc
mov
lahf
add
and
mov
aas
test
loopne
ret
data16
(bad)
mov
jge
mov
adc
movs
inc
mov
pop
bound
inc
and
and
fcomip
mov
push
repnz
inc
mov
(bad)
test
jle
loopne
daa
mov
cmp
inc
push
aam
into
xlat
in
inc
sbb
sar
aad
out
jae
push
mov
out
out
fisttp
inc
xchg
jb
jb
test
loope
sub
jnp
fld
xor
or
pop
subps
ret
push
sbb
loop
inc
test
mov
loope
mov
aam
daa
push
pause
mov
addr16
xchg
rcl
add
lds
dec
in
add
jle
scas
inc
inc
inc
stc
add
adc
dec
xor
stc
mov
sub
sbb
pop
cmp
adc
ficom
add
jecxz
adc
lahf
jmp
jo
inc
push
push
jl
or
fisub
and
push
xchg
aam
push
cmc
icebp
(bad)
dec
ret
cmp
mov
cs
cwde
icebp
out
data16
jb
pop
push
mov
or
icebp
mul
or
fs
mov
inc
fisttp
(bad)
jb
sbb
das
mov
push
(bad)
nop
rcr
lods
div
rcr
xchg
jns
cmps
dec
shl
xlat
or
stc
test
pop
jle
xchg
fld
aam
cmc
push
add
xchg
adc
pop
sub
cs
test
sbb
cmc
retf
neg
gs
imul
dec
aaa
xor
xor
sub
xlat
push
mov
push
pop
sbb
leave
dec
mov
es
xchg
and
aas
xchg
and
mov
nop
data16
jecxz
sub
add
icebp
arpl
add
add
add
int3
int
gs
icebp
push
ja
shl
mov
sbb
xchg
ds
iret
test
jae
aam
loop
data16
fmul
push
xor
inc
push
or
push
pop
inc
mov
ja
(bad)
xchg
dec
sbb
jle
fldenv
sbb
lea
dec
mov
repnz
add
mov
stos
mov
shl
pop
ret
aad
gs
(bad)
movs
push
sbb
sbb
inc
xchg
cmps
inc
xchg
sar
sbb
rol
push
adc
push
test
mov
jae
pop
jmp
push
movs
xchg
cmp
adc
pop
xchg
loop
call
sub
dec
xchg
xor
cmc
pop
mov
cmps
(bad)
xchg
repz
and
sbb
jle
mul
iret
push
xor
push
inc
retf
test
test
inc
fninit
test
sub
(bad)
dec
jne
or
pushf
sub
loope
mov
(bad)
inc
xchg
call
lods
mov
cmc
cmc
daa
push
fwait
jne
jmp
repnz
rcl
xchg
adc
adc
and
imul
pop
mov
push
inc
dec
nop
mov
adc
imul
js
xor
push
mov
inc
pop
lods
sub
retf
and
cmc
sar
imul
ss
push
aaa
cmp
pop
and
jecxz
popa
stc
and
sbb
cli
shr
cmp
addr16
scas
adc
and
push
xchg
pop
call
and
jmp
ror
inc
retf
adc
sub
fdiv
jmp
mov
pusha
cld
jl
aam
imul
mov
ss
jecxz
mov
and
bts
ss
retf
xchg
addr16
sbb
es
sbb
inc
aam
jb
mov
sbb
pop
out
scas
push
dec
mov
and
push
mov
loop
ja
push
cld
(bad)
outs
int
popa
add
mov
cwde
xchg
iret
ins
in
ss
lods
cmp
jbe
out
inc
loop
jp
movs
xchg
add
(bad)
sbb
push
jo
fidiv
mov
sbb
fist
mov
mov
fs
jbe
(bad)
(bad)
retf
jl
inc
xor
push
mov
sub
cmp
out
in
ret
push
push
jnp
(bad)
mov
test
ja
inc
repnz
mov
xor
(bad)
int3
pop
sbb
adc
add
mov
cmps
test
repz
int3
ds
iret
pop
adc
aaa
inc
jne
bnd
cmp
mov
mov
adc
loop
add
and
das
fs
inc
xor
les
and
push
shl
xlat
dec
int
imul
(bad)
nop
xor
adc
fs
test
add
push
xchg
pop
or
daa
jbe
jae
mov
shl
sub
jle
scas
inc
fst
fdivrp
(bad)
in
push
mov
xor
sar
inc
(bad)
jno
lea
sub
pop
ror
(bad)
jno
jle
xchg
xchg
push
fsub
xchg
xchg
sub
js
pushf
ror
cmps
jmp
cmp
xor
jg
dec
rcr
shl
pop
inc
outs
enter
jp
inc
add
inc
pop
imul
test
pop
cwde
(bad)
arpl
xor
xor
sub
jne
fistp
cmp
xchg
repnz
xor
and
pop
bound
mov
popa
mov
jbe
inc
xchg
push
sub
rol
shl
inc
retf
scas
gs
pop
out
sub
push
xor
leave
loopne
mov
aam
sbb
push
cmp
ud2
bound
stc
dec
in
push
pop
dec
xchg
jmp
test
adc
push
add
and
setns
xchg
frstor
adc
call
mov
inc
movs
sti
xchg
lock
mov
push
cmc
mov
sub
xor
(bad)
sbb
xchg
out
bound
xor
mov
mov
push
pop
bound
adc
or
std
jmp
(bad)
mov
sahf
bound
das
mov
pop
dec
ficomp
jl
cmc
jno
loop
jp
inc
lods
retf
sbb
or
xchg
xor
shl
and
retf
fadd
aas
gs
dec
arpl
daa
ret
imul
jecxz
and
mov
ja
movs
cmps
mov
movs
movs
inc
or
imul
aaa
ja
call
dec
mov
pushf
cld
aaa
jo
add
dec
push
cmp
xchg
adc
xor
out
mov
push
sbb
leave
mov
test
inc
pop
add
sub
bound
xor
addr16
test
jle
addr16
enter
imul
rcl
mov
idiv
sub
inc
fs
stc
stos
or
pop
push
pusha
xor
add
lods
jne
out
cmps
pop
mov
fistp
push
xlat
xchg
popaw
ds
pop
scas
and
adc
and
sar
push
xchg
sar
inc
popf
inc
push
cmp
arpl
js
fs
jae
(bad)
mov
mov
xchg
scas
mov
(bad)
and
push
retf
ret
shl
jmp
(bad)
mov
xchg
fadd
mov
push
addr16
not
push
add
push
repnz
add
repnz
inc
(bad)
mov
mov
adc
mov
cmps
or
and
xor
add
xor
(bad)
dec
std
xchg
dec
inc
pop
js
sub
ret
cmp
push
cmp
adc
inc
sar
or
(bad)
cmp
test
xor
scas
cmp
lds
or
js
inc
push
push
push
(bad)
aad
fiadd
pop
adc
mov
push
lahf
lods
call
push
jns
lea
mov
push
mov
and
aas
stc
ja
add
repnz
sub
xlat
arpl
sbb
pop
jnp
mov
dec
shl
call
and
sub
pop
hlt
pop
xchg
ror
in
in
adc
shl
cmp
mov
add
and
popf
dec
mov
(bad)
xchg
out
cwde
pop
(bad)
repnz
xor
movs
lahf
and
bnd
or
jae
lock
pop
and
mov
bound
add
ss
pop
push
and
inc
pop
mov
jb
jbe
mov
dec
cmp
nop
icebp
mov
mov
and
mov
push
mov
in
xlat
xchg
(bad)
pusha
mov
adc
sub
add
push
jl
sub
das
lock
ret
mov
cmp
xchg
cmps
outs
jb
mov
imul
test
mov
xor
pop
xchg
test
daa
js
je
mov
ja
adc
dec
jo
cmp
loopne
enter
add
inc
xor
aad
cmp
xchg
push
add
imul
pop
fadd
stos
data16
out
neg
lods
jnp
jo
and
repnz
pusha
sti
pop
sbb
nop
adc
shl
inc
cmp
xor
(bad)
(bad)
jle
add
xchg
(bad)
fs
pop
sahf
xchg
adc
stc
adc
mov
push
sbb
inc
std
pop
outs
mov
ret
push
repz
add
inc
dec
mov
cmp
out
adc
loopne
icebp
inc
push
pop
fwait
dec
inc
adc
cmp
call
arpl
add
les
pop
push
mov
aad
mul
rcr
stc
cli
xchg
into
fwait
mov
shr
sbb
test
xor
push
push
sbb
jbe
jne
aam
fs
add
sbb
loop
daa
push
movs
hlt
xchg
jmp
or
and
cmp
cmp
pusha
mov
cmc
ds
pop
adc
or
push
xchg
xchg
lds
dec
sub
jge
sub
pop
test
pop
in
mov
mov
inc
mov
scas
sar
jg
adc
dec
add
sbb
mul
enter
push
lock
ja
jb
(bad)
pop
dec
lods
not
adc
(bad)
je
pop
xchg
xor
test
and
push
sub
out
(bad)
shl
pop
xchg
mov
xchg
mov
es
fbstp
mov
cmp
aaa
inc
into
lahf
sub
fdiv
mov
mov
out
mov
pop
std
nop
icebp
xchg
sbb
jbe
mov
mov
or
add
mov
xor
mov
dec
jae
mov
shl
xchg
mov
or
add
fisttp
and
pop
sbb
repz
jbe
xor
inc
push
ja
or
mov
ds
fs
add
int
inc
out
fstp
push
push
sbb
nop
idiv
and
sbb
das
hlt
push
mov
idiv
adc
fldln2
imul
adc
sbb
and
push
addr16
mov
inc
test
jb
cmp
and
es
cld
and
mov
push
in
mov
jno
push
add
pop
aam
out
inc
mov
addr16
cld
adc
lock
ret
mov
xor
xchg
xor
pop
cmps
and
sar
inc
enter
hlt
cmp
test
xchg
nop
repnz
mov
or
int3
and
jmp
push
sbb
test
push
retf
sbb
out
daa
jae
xchg
shl
aam
(bad)
loope
adc
xor
dec
xchg
jmp
and
movs
aaa
push
push
xchg
mov
or
shl
xor
lods
ins
inc
cmps
cmps
xchg
pop
out
sub
stc
xor
outs
pop
iret
mov
js
add
popf
push
or
xor
jns
xchg
jmp
mov
imul
pop
ret
push
icebp
jno
adc
and
adc
in
test
cli
xchg
cwde
dec
dec
ret
push
inc
push
push
and
sub
push
adc
push
push
push
call
pushf
xchg
cmps
xor
xor
int3
xchg
jle
xor
mov
adc
cmc
fisub
cmp
mov
mov
mov
dec
repz
mov
xchg
pop
ret
xlat
lahf
fld
xor
pop
push
imul
int3
push
inc
cmp
sbb
in
sub
jae
enter
jecxz
sbb
jmp
retf
jnp
push
cdq
xor
sti
or
xor
sub
and
mov
mov
imul
dec
adc
(bad)
push
out
pop
add
fst
mov
inc
adc
mov
cmps
xlat
jae
dec
addr16
(bad)
sti
cs
inc
rcl
repnz
dec
lahf
push
enter
pop
xchg
pop
fwait
rol
or
enterw
rcl
add
inc
retf
outs
in
push
movs
popf
xchg
pop
enter
jmp
push
dec
test
pop
aaa
popa
xor
popf
lds
neg
adc
mov
not
xchg
push
arpl
je
das
fldln2
mov
or
pslld
push
xor
pop
xchg
ja
fbld
push
adc
xchg
ret
in
and
aas
popa
and
push
adc
lods
clc
stos
outs
out
mov
popa
fsubr
ret
or
fdiv
sar
and
inc
lahf
(bad)
addr16
out
mov
cmp
lea
leave
mov
mov
leave
pop
mov
cmp
and
xor
adc
and
cwde
(bad)
mov
fstp
ret
pusha
mov
scas
sbb
inc
cmp
push
jge
jbe
and
xchg
push
leave
xchg
and
(bad)
lock
mov
mov
mov
mov
mov
cmps
imul
add
push
inc
jp
fwait
push
cmps
mov
jno
inc
sub
rep
test
bound
pop
push
lock
push
add
or
repz
int
imul
pop
outs
rep
arpl
mov
push
rcr
push
jle
mov
jp
test
or
in
stos
rol
and
or
xchg
xchg
ins
nop
sub
xchg
add
inc
imul
aam
pop
ja
mov
jp
test
rol
push
add
adc
jl
dec
es
pop
push
add
xchg
add
adc
out
push
sub
pop
shl
adc
add
inc
push
push
movs
add
je
xchg
push
mov
add
out
repz
imul
adc
cmp
inc
jp
push
sub
das
and
int3
stos
adc
xor
cmp
test
(bad)
fyl2x
jo
push
jp
mov
js
das
push
pop
xchg
out
or
mov
out
sub
ss
(bad)
pop
push
fst
cmp
jecxz
pop
adc
stos
mov
xchg
push
xlat
in
es
mov
push
push
fistp
or
adc
or
xor
xor
cmc
fisttp
adc
shl
jmp
push
and
xor
cmps
or
mov
rol
pop
push
add
push
and
or
out
call
test
inc
push
lods
in
mov
jmp
jbe
leave
mov
xchg
xlat
mov
(bad)
xchg
mov
xor
fs
pop
jae
pop
fs
sbb
or
rol
inc
jp
xchg
inc
(bad)
sub
add
dec
ins
mov
(bad)
push
movs
hlt
mov
cmps
push
(bad)
retf
addr16
cmp
push
pusha
daa
inc
push
or
or
pop
aas
or
fs
rcr
jp
(bad)
cmp
ret
push
out
es
mov
outs
les
lahf
(bad)
push
jo
aam
xor
push
int
ja
aad
push
mov
xlat
mov
push
push
das
mov
jmp
dec
rcl
cmp
sub
call
retf
outs
sti
dec
daa
push
xchg
xchg
ret
loopne
xchg
test
ret
call
add
ret
add
stos
lock
add
bound
ss
and
push
and
scas
and
lods
push
enter
out
fdiv
sar
pop
dec
mov
data16
or
xor
call
xor
lock
mov
sub
mov
jo
adc
push
mov
movs
adc
cvtps2pi
sub
mov
(bad)
adc
xor
fsubp
and
stos
inc
push
jl
or
mov
pop
dec
ja
xchg
loopne
dec
jmp
sub
fs
adc
adc
mov
lods
clc
popa
out
jp
jecxz
push
test
adc
in
pop
xchg
push
sub
repnz
mov
pop
enter
mov
(bad)
mov
gs
adc
ins
out
mov
iret
in
mov
mov
adc
sbb
cmps
and
jle
mov
outs
adc
ret
add
adc
xchg
push
imul
lds
pop
rol
scas
mov
cmps
xor
mov
int3
mov
shr
jbe
inc
fisubr
rol
imul
inc
dec
mov
cs
test
(bad)
repz
jno
sbb
jmp
sub
add
xor
or
xor
test
mov
push
add
jmp
clc
push
iret
push
pop
mov
add
aas
sub
test
dec
shr
push
jle
sbb
mov
mov
cwde
cmc
lahf
lahf
test
icebp
(bad)
pop
inc
push
movs
jl
dec
pop
cwde
ret
hlt
shl
or
rcl
in
xor
aam
call
mov
mov
xchg
and
aad
daa
jmp
push
jb
or
xchg
aaa
dec
push
shl
sbb
push
xchg
outs
mov
mov
ret
in
test
hlt
and
mov
xchg
out
push
pop
movs
add
mov
sbb
dec
xchg
dec
std
arpl
hlt
mov
ret
and
mov
loopne
js
mov
pop
xor
pop
jo
dec
jae
mov
dec
iret
mov
test
and
div
or
sub
cmps
add
jmp
push
sahf
repz
popf
dec
push
jbe
pop
retf
xchg
and
adc
dec
xchg
cld
in
adc
fisubr
mov
enter
das
clc
test
test
inc
inc
addr16
mov
xchg
rcl
sub
and
pusha
adc
(bad)
not
jo
hlt
ror
(bad)
and
call
dec
sbb
xchg
cmp
sahf
pop
scas
pop
loopne
aad
lods
add
iret
sbb
push
sub
dec
dec
mov
xchg
or
jo
dec
int
xor
inc
fcmovnbe
movs
push
sub
jne
add
xchg
stc
push
or
dec
movnti
nop
rcl
push
cmp
iret
pop
push
(bad)
push
xlat
cmp
or
(bad)
call
push
mov
or
cli
dec
ds
sub
stc
push
sbb
lea
call
out
push
cmps
loopne
pop
lahf
push
push
or
xor
add
inc
or
jno
cmp
mov
push
push
fdivr
push
adc
pop
xchg
loope
rcr
jae
dec
or
syscall
call
loop
movs
(bad)
sbb
push
jo
sbb
adc
and
in
adc
jbe
cli
xlat
cmps
loop
xchg
pop
repz
mov
imul
push
fs
shl
nop
(bad)
arpl
ds
inc
(bad)
lea
xchg
ja
xor
pop
jns
test
add
adc
mov
mov
inc
push
sar
add
hlt
iret
fs
mov
dec
or
retf
int3
and
pop
cmc
loop
inc
add
add
add
mov
(bad)
sahf
pop
add
sar
add
adc
and
fist
out
mov
lds
xchg
pushf
xchg
xchg
xor
mov
scas
cdq
shr
not
test
cld
shl
mov
scas
mov
sub
fwait
clc
int
adc
dec
retf
mov
aaa
jmp
pop
and
fcmovnbe
mov
scas
jge
pop
dec
inc
pop
push
push
into
out
jbe
jg
cmp
fldcw
out
push
jp
or
test
fadd
out
test
jg
scas
repnz
mov
mov
dec
adc
ret
aas
repz
pushf
fst
add
in
rcr
sub
rcl
mov
scas
xchg
rol
sbb
dec
mov
inc
dec
shl
mov
or
popf
icebp
dec
pop
xchg
dec
shl
fdiv
gs
mov
cld
ret
adc
jne
in
rcl
or
adc
stos
push
push
jo
in
sub
mov
inc
push
cmp
xchg
test
inc
loope
std
cmc
repz
and
out
lds
out
dec
ja
in
loop
xor
test
mov
rcl
fidiv
mov
pop
ins
or
into
in
push
pop
jno
push
pop
inc
out
cmp
out
xchg
adc
push
mov
push
unpckhps
jb
xor
pusha
out
cmps
or
sahf
adc
push
push
or
movhps
jb
stos
pop
ins
mov
xor
cmp
pop
xor
jle
inc
push
cmp
mov
cmp
mov
pop
mov
jb
je
inc
push
mov
or
(bad)
cli
movs
adc
outs
add
das
jno
adc
push
icebp
cmc
xor
ja
inc
(bad)
test
mov
xor
push
outs
in
inc
push
jl
lock
arpl
iret
mov
xchg
mov
adc
in
inc
out
repnz
call
js
ror
mov
mov
xchg
out
lods
icebp
jbe
in
dec
cmp
mov
push
pop
mov
leave
push
cmp
ja
xchg
or
mov
and
in
adc
push
xchg
nop
mov
sbb
xchg
add
mov
daa
jp
jmp
inc
call
jecxz
xor
push
pop
aas
add
nop
addr16
sub
mov
pop
jns
inc
xchg
cmp
add
push
sbb
shl
or
pop
mov
push
test
and
mov
add
mov
out
xor
and
pop
dec
mov
in
mov
mov
mov
jbe
jmp
inc
jg
inc
cmps
xlat
int3
into
sbb
xchg
inc
inc
add
mov
mov
mov
loopne
bound
add
sub
sahf
int
jo
out
mov
fwait
adc
sbb
(bad)
js
add
adc
dec
mov
lods
dec
scas
inc
push
mov
pop
(bad)
xchg
icebp
push
mov
pop
pop
cs
and
mov
inc
xchg
mov
dec
mov
in
frstor
int3
out
ror
adc
sar
ins
mov
iret
or
daa
(bad)
test
add
(bad)
imul
push
sbb
add
pushf
pop
and
xchg
xchg
xchg
mov
mov
and
inc
jl
cs
sbb
xchg
push
xchg
movs
shl
mov
outs
push
(bad)
xor
jge
cs
sbb
xlat
rol
jnp
in
jb
fist
jo
xor
jg
xor
cmp
mov
cmp
(bad)
rcl
inc
mov
push
push
inc
and
sub
pop
test
loope
cmp
sbb
fdiv
and
lds
lods
arpl
xor
inc
sub
rcl
cmps
les
repnz
ficom
add
sub
jp
or
pop
jg
aam
shl
aaa
out
add
jne
cld
iret
xchg
mov
out
imul
or
inc
mov
retf
xor
(bad)
and
jno
es
adc
jb
aad
cli
pop
mov
test
xchg
sub
dec
(bad)
push
mov
add
ret
bound
or
imul
test
mov
fs
dec
and
sbb
fld
adc
ja
inc
dec
inc
xor
push
sub
cmp
cmp
push
lock
ds
xor
xchg
test
push
xchg
push
into
out
add
(bad)
int3
cmps
mov
mov
shl
leave
sbb
loopne
aas
sbb
std
mov
mov
sbb
pushf
mov
lds
aam
mov
int3
xchg
xchg
mov
jecxz
lea
and
test
mov
adc
(bad)
rcl
xor
adc
or
fsub
aaa
jmp
bound
ss
lods
sahf
mul
shld
pop
fwait
ss
mov
cmps
xor
rcl
aaa
pop
inc
lds
ins
loop
repz
sar
shl
icebp
icebp
mov
mov
aaa
mov
stos
(bad)
outs
scas
xor
sub
jl
outs
nop
out
js
cmp
sub
ins
mov
pop
mov
stos
loopne
not
inc
stc
sbb
aaa
cmp
outs
dec
fldenv
fadd
cmp
cli
xor
popf
jge
cld
add
aaa
mov
add
mov
pop
adc
movaps
or
out
ret
daa
mov
mov
test
mov
jae
jecxz
jae
sti
test
jle
hlt
sub
in
and
xor
stos
lods
arpl
push
sti
aad
ss
(bad)
xor
mov
enter
int3
sub
stc
lock
xor
cwde
les
ret
fnsave
cli
add
mov
sub
data16
rol
adc
fs
daa
push
pop
adc
in
ret
dec
mov
out
jne
dec
push
ror
ins
lds
push
jno
loope
and
cmp
add
lods
xchg
and
sbb
pop
inc
aaa
cmc
outs
aad
and
cwde
data16
push
in
mov
adc
out
inc
push
out
dec
jne
fs
inc
mov
or
mov
outs
mov
xchg
leave
dec
imul
xor
repnz
mov
sbb
adc
push
fbld
or
jmp
inc
cld
mov
test
xor
hlt
dec
xchg
pop
xor
sbb
pop
dec
clc
push
add
inc
xlat
in
ins
xchg
pop
xchg
add
mov
xor
xor
mov
push
mov
push
stc
cmps
out
stos
add
call
lods
sbb
leave
(bad)
cmps
mov
xor
retf
shl
pop
add
cmp
dec
aaa
aas
gs
or
imul
movs
test
adc
lods
std
cmp
movs
ds
mov
ret
cmp
pop
mov
mov
xchg
lock
mov
xor
call
sbb
xchg
pop
and
rcl
and
cmp
sbb
imul
aad
and
cmp
repz
xchg
xchg
lods
sbb
cmps
(bad)
addr16
or
jecxz
sub
cmc
(bad)
pop
sub
imul
nop
mov
mov
cmp
push
mov
fiadd
and
xchg
push
xchg
xchg
jge
addr16
lds
xchg
xor
adc
add
xor
sub
mov
or
and
shl
inc
adc
and
mov
mov
jecxz
es
add
xor
xchg
pop
daa
push
inc
or
test
jp
xchg
or
add
mov
ret
adc
jecxz
mov
or
mov
mov
mov
(bad)
pusha
les
cmc
cmp
repnz
jnp
push
pop
adc
xor
xchg
(bad)
aad
adc
lock
mov
dec
xchg
jmp
adc
sub
pop
jo
xchg
cld
xor
mov
dec
cmps
out
mov
test
mov
into
mov
pop
adc
push
pop
data16
(bad)
push
setle
iret
mov
ins
add
sbb
xor
mov
test
aas
push
(bad)
xor
cdq
push
jbe
fs
inc
and
xor
cmp
in
and
mov
push
push
bound
loop
pop
add
das
dec
jb
push
arpl
mov
aas
add
xchg
ret
push
sub
mov
in
push
or
icebp
into
jbe
xor
mov
dec
(bad)
test
or
adc
cmp
ins
and
sbb
pushf
mov
imul
jge
enter
sahf
loopne
cmp
mov
pop
add
frstor
movhps
push
jp
mov
jmp
cmp
xchg
xchg
mov
dec
mov
das
je
add
shl
mov
ja
out
adc
cwde
dec
loope
shr
inc
mov
inc
jae
cld
std
pop
cmc
mov
out
pop
mov
fwait
pop
ret
or
push
xor
ror
ja
ror
int
lahf
lock
dec
mov
ret
ja
lahf
daa
xor
leave
pop
test
inc
pop
loop
mov
pushf
xchg
pushf
inc
aad
lods
fstp
cmps
(bad)
or
or
shl
fcom
jb
mov
adc
mov
in
outs
jp
mov
and
fimul
and
cmp
rol
iret
pop
dec
push
ret
sbb
dec
cmp
sbb
xor
test
aad
stc
out
jge
xchg
fwait
iret
mov
aaa
xor
adc
push
xchg
outs
mov
inc
out
test
loopne
xlat
xchg
xor
cmps
adc
cs
daa
and
cwde
lock
clc
xchg
(bad)
popa
xchg
mul
cmps
bound
and
sbb
pop
xor
rol
cmp
loopne
sbb
fdiv
sbb
bound
ins
add
lock
arpl
pop
clc
jmp
imul
dec
fidivr
push
pusha
aas
and
pop
retf
sub
clc
hlt
iret
add
mov
mov
inc
bound
(bad)
jmp
dec
fcomip
out
arpl
sub
pop
cmps
push
call
push
or
hlt
dec
adc
dec
aas
xlat
mov
xchg
mov
cwde
xchg
in
pop
inc
mov
(bad)
inc
in
jne
loop
sub
mov
inc
jecxz
fs
shl
ins
clc
xchg
jmp
xor
fistp
leave
ret
jno
std
inc
loope
adc
cwde
and
adc
sbb
cmps
jmp
es
inc
xchg
or
inc
(bad)
sub
and
add
es
in
push
push
leave
in
mov
inc
xor
mov
jmp
call
neg
pop
or
jge
or
int3
inc
adc
rol
add
or
jge
stc
push
and
adc
lock
test
sub
stos
test
inc
loope
push
xor
mov
(bad)
fs
mov
movs
adc
mov
je
cmps
es
stos
stos
pop
inc
dec
jle
and
mov
mov
cmc
rcr
pop
mov
imul
pop
push
dec
xchg
jbe
add
adc
cld
cli
adc
loopne
rol
out
pop
push
inc
stc
and
xchg
add
mov
inc
xor
in
add
mov
cmps
jle
adc
call
ja
ja
cmp
xchg
pop
sbb
inc
sti
xchg
hlt
ja
xchg
movs
retf
jecxz
(bad)
mov
sbb
daa
inc
mov
adc
scas
test
xchg
add
push
adc
and
fcom
loop
(bad)
mov
(bad)
daa
mov
push
cmc
xor
push
in
adc
leave
mov
adc
jno
rcr
movs
jp
movs
adc
cmps
pushw
fwait
cwde
bound
aas
xchg
sub
scas
push
sub
jns
pop
retf
(bad)
push
mov
out
movs
push
inc
or
sub
cwde
lods
aam
push
adc
pop
push
pop
call
retf
cmp
xor
rol
inc
dec
mov
add
pop
addr16
out
(bad)
pop
rol
mov
int3
outs
jle
das
adc
add
push
and
sub
and
(bad)
lods
test
mov
div
loop
dec
add
jne
pop
pusha
imul
mov
into
dec
addr16
lock
and
fdiv
add
ret
mov
mov
hlt
out
inc
and
mov
cwde
fstp
leave
mov
and
add
bound
adc
push
mov
(bad)
test
dec
rol
mov
cmps
pop
push
inc
adc
lods
push
push
cmps
aad
add
rep
mov
cmp
push
cs
xor
nop
sti
icebp
fs
out
xchg
ins
mov
cmc
mov
xor
clc
out
jo
cmp
mov
inc
scas
push
test
(bad)
test
mov
cmp
sbb
aam
mov
push
arpl
adc
loope
lock
loop
aam
mov
inc
push
test
test
xor
or
pop
repnz
sar
xchg
ss
imul
mov
jns
push
jno
aam
mov
dec
rcr
mov
inc
lods
fxch
xor
data16
xor
push
mov
adc
popa
jae
cld
sbb
(bad)
lods
inc
xor
ret
fisttp
adc
and
pop
js
stos
and
sub
cli
jne
fisubr
pusha
mov
sbb
inc
stc
ins
lods
inc
popf
mov
mov
fcomp
or
mov
cmps
bound
iret
sub
mov
or
pop
(bad)
push
loop
inc
not
add
hlt
pop
add
or
jo
test
push
xor
scas
ja
xlat
retf
mov
outs
out
or
inc
jmp
fcmove
sub
xor
hlt
ins
and
fist
xor
add
cmp
ja
loope
push
adc
mov
xchg
xor
pop
div
cwde
xor
into
jecxz
inc
push
push
lahf
dec
inc
sbb
jle
jns
mov
shl
neg
jb
fwait
mov
jb
jae
push
hlt
(bad)
xchg
pop
xrelease
test
xor
pushf
push
push
push
js
add
mov
aad
dec
test
in
(bad)
mov
nop
sbb
ja
mov
repnz
push
loop
lds
loop
sub
cld
pop
je
push
fcmovnu
xchg
ret
es
pop
jecxz
sbb
clc
nop
je
push
mov
sub
cli
cmps
or
cmp
mov
mov
push
icebp
cld
inc
lods
in
push
jmp
sub
dec
pop
cmc
dec
push
std
add
pop
xchg
leave
(bad)
xchg
lods
dec
sbb
ret
xchg
inc
cmp
dec
rcl
pusha
push
xor
adc
ret
push
arpl
fsub
int
or
push
rcl
cmp
cmp
xchg
call
push
cmp
fist
div
mov
add
(bad)
xor
adc
sbb
fs
nop
lock
retf
nop
jb
xor
xchg
mov
mov
inc
shr
push
sahf
hlt
mov
mov
jecxz
inc
shl
retf
or
pop
in
out
mov
cmps
loopne
mov
fcomip
and
stos
adc
dec
pop
add
dec
xchg
jo
and
mov
or
retf
inc
or
je
pop
push
jb
xchg
clc
ror
scas
out
pop
loop
mov
out
rol
outs
(bad)
and
adc
xor
cmp
sahf
ret
in
xor
mov
das
inc
test
outs
gs
bound
xchg
pop
xsavec
jae
fadd
das
sub
out
shl
addr16
scas
xchg
mov
imul
shl
stc
push
ror
mov
push
into
dec
mov
movs
je
retf
push
rol
and
add
sbb
es
mov
mov
cmps
mov
push
jg
lahf
dec
adc
imul
jp
mov
(bad)
mov
dec
pop
xor
outs
xor
xor
aam
inc
add
mov
inc
mov
aaa
mov
mov
cmps
dec
stos
shl
and
or
lods
add
cld
push
sub
nop
inc
es
mov
mov
mov
jns
dec
push
mov
stos
and
leave
dec
xlat
and
lods
lahf
out
adc
mov
xchg
xlat
test
jne
inc
test
push
sahf
jnp
jp
fldcw
int
mov
out
aas
or
xchg
movs
retf
xchg
cmp
mov
xor
dec
shl
sub
sub
cs
aaa
pushf
pop
xor
cmp
daa
lea
adc
dec
(bad)
in
jmp
jecxz
inc
push
fisttp
and
or
dec
fidiv
add
js
test
repnz
enter
ins
data16
fmul
xchg
icebp
inc
xor
mov
xor
shl
jb
pinsrw
sub
push
pop
jno
ret
popa
xchg
mul
inc
aam
int3
push
cdq
mov
out
lock
xor
movs
pop
push
into
repz
sub
jl
jno
std
sub
(bad)
in
cdq
xor
cmp
fistp
ins
xchg
pop
imul
push
popa
loopne
(bad)
mov
push
and
sub
fcom
fdivr
adc
dec
icebp
push
cmps
ficomp
xlat
mov
mov
xchg
enter
add
pop
pusha
pop
and
jb
jb
inc
push
outs
psubsw
daa
cmps
push
jp
xchg
inc
in
(bad)
xchg
push
iret
out
mov
add
test
aaa
xchg
and
jg
jo
xchg
scas
mov
mov
test
dec
and
pop
leave
mov
arpl
ret
mov
pop
aam
xchg
jb
and
repnz
mov
jmp
aas
sbb
xor
ja
sbb
out
in
aam
pop
adc
cmp
cmps
xor
mov
cmp
repnz
jae
jnp
ret
(bad)
addr16
mov
mov
xchg
repnz
or
adc
pusha
cmp
or
daa
pop
out
in
push
adc
mov
in
pop
ret
jge
xor
or
pusha
aam
push
lods
push
ss
addr16
cli
mov
xchg
dec
shl
push
std
xlat
sbb
xor
movs
mov
popf
pop
mov
es
ins
adc
call
ss
sub
iret
xchg
jp
pop
jno
popa
fs
cmps
adc
(bad)
fistp
mov
cmc
mov
dec
mov
sbb
xor
je
sub
call
jmp
out
mov
jnp
ins
mov
xor
ins
and
or
mul
cmps
in
repz
inc
mov
shr
daa
imul
xchg
add
ds
out
xor
jmp
in
lods
jp
dec
or
or
add
mov
rcl
nop
in
add
loop
jle
(bad)
push
inc
xor
call
ror
repnz
inc
mov
cmc
cs
mov
pusha
gs
adc
pushf
or
cld
out
mov
inc
cld
rol
mov
scas
int
mov
pop
mov
pop
rcr
arpl
or
inc
clc
mov
add
rcl
cmps
ret
in
mov
xor
mov
xor
test
stos
outs
rcl
sub
push
jbe
or
and
ja
push
inc
fist
out
sbb
in
inc
mov
cmc
pop
bound
push
mov
fwait
cmp
shl
mov
or
pop
cmp
cmps
adc
ret
add
mov
xchg
mov
mov
jmp
ret
fist
push
addr16
inc
and
xor
mov
mov
data16
push
inc
je
add
pusha
lea
inc
inc
mov
sbb
sub
or
pushf
add
jbe
push
int3
mov
xor
iret
js
shr
xor
imul
cwde
arpl
ja
icebp
fdiv
sbb
retf
dec
cli
test
push
inc
dec
or
mov
rcl
in
call
retf
in
xor
test
push
push
adc
xchg
mov
fbld
add
loope
mov
je
mov
xchg
dec
sbb
std
inc
lea
jg
es
xchg
pop
test
mov
ja
sbb
sub
pop
inc
push
test
in
push
and
cmp
loope
inc
in
imul
aas
adc
test
xlat
lea
and
jp
xor
inc
(bad)
push
enter
aam
mov
push
xchg
xlat
mov
xor
fs
mov
or
inc
jge
and
pop
push
aam
xor
shr
xor
imul
jae
ret
xchg
pop
push
inc
adc
jbe
imul
sbb
in
ffreep
int3
out
movs
xchg
lock
lds
clc
add
pop
push
das
loopne
push
inc
fdivr
sub
mov
xchg
mov
xor
xlat
arpl
enter
push
inc
xlat
cmp
adc
arpl
or
add
xlat
(bad)
pop
ins
test
stc
mov
adc
or
inc
ret
loopne
out
push
loope
je
mov
pop
sub
xchg
xor
add
(bad)
lea
push
xchg
add
pop
dec
adc
(bad)
xor
jecxz
jb
xchg
cmp
pop
push
cmps
inc
mov
mov
and
xchg
inc
lods
(bad)
aaa
and
cmp
dec
test
stos
fst
mov
xor
xchg
pop
add
sahf
push
ss
inc
jb
push
popa
xor
xor
sub
mov
xor
mov
or
addr16
idiv
sbb
dec
mov
cmps
push
in
dec
inc
icebp
cmp
jne
lods
push
jae
pop
cmc
popa
sub
cmps
jno
lock
inc
clc
mov
ss
pushf
adc
int3
and
sbb
sbb
aas
dec
mov
jns
jg
repnz
sub
and
adc
loopne
jae
lock
fprem
or
hlt
push
jg
mov
test
jle
cs
inc
and
xor
jae
pop
inc
(bad)
or
ret
dec
popf
arpl
out
stos
mov
ja
and
mov
add
jle
sbb
push
and
adc
(bad)
jb
mov
mov
xlat
shr
push
aaa
push
fimul
gs
pop
idiv
fcom
lock
jbe
pop
inc
icebp
sub
je
inc
and
mov
xor
mov
or
mov
or
fsub
fisttp
test
xor
hlt
out
loop
xchg
mov
xor
imul
jmp
adc
sbb
mul
dec
jle
lds
jl
push
lods
xlat
or
sub
adc
outs
out
dec
repnz
jbe
mov
xchg
call
out
jae
inc
dec
xor
aaa
cld
aas
jecxz
mov
in
and
adc
and
shr
inc
mov
repnz
xlat
add
scas
jmp
jb
push
aaa
dec
inc
aad
push
aaa
pushf
jns
out
bound
pop
stos
mov
push
dec
mov
pop
shl
push
jo
adc
push
dec
rol
cmp
rol
fwait
test
mov
stos
sub
sub
pop
add
push
(bad)
pcmpgtw
dec
pop
inc
stc
ins
push
cmp
nop
lods
(bad)
out
ror
inc
jecxz
das
jmp
outs
das
in
stos
sbb
fadd
xlat
out
leave
ins
es
jl
sub
sub
jbe
mov
adc
add
sbb
xchg
xchg
in
or
int3
mov
add
mul
outs
cmc
jbe
js
mov
jmp
ds
in
fdiv
test
mov
es
dec
jecxz
adc
jae
and
push
aaa
cmps
xchg
dec
call
cmp
mov
pop
popf
int3
fucomip
mov
jge
xchg
xchg
movs
mov
cld
mov
into
sub
adc
lahf
jno
xor
ja
rcr
xchg
in
xor
dec
push
aam
push
dec
adc
dec
scas
or
cmps
(bad)
xchg
or
test
ins
ret
ret
adc
icebp
cmp
(bad)
fld
mov
jmp
jl
xchg
dec
cli
and
es
push
mov
imul
pop
add
inc
ret
xchg
adc
xor
rcl
xrelease
fistp
movs
mov
test
push
push
fbstp
pop
mov
lahf
mov
call
xchg
dec
ret
mov
jle
xchg
ret
fnstenv
adc
inc
mov
xchg
inc
mov
stc
shl
jns
gs
lods
mov
xor
fcmovbe
jns
xor
inc
sbb
mov
jecxz
dec
cmps
and
stos
lods
xchg
adc
mov
scas
dec
test
mov
cmps
daa
push
pop
push
jne
pop
mov
mov
xlat
aam
adc
repz
and
cmovae
inc
mov
daa
out
mov
sbb
(bad)
mov
push
cmp
sbb
aaa
addr16
ins
(bad)
and
pop
mov
bound
adc
xchg
pushfw
movs
adc
adc
cmp
mov
retf
sahf
loop
ret
bound
add
in
add
dec
out
xchg
div
sbb
ret
mov
fs
inc
(bad)
cmp
iret
je
xchg
push
and
cmps
(bad)
cld
hlt
mov
inc
aam
mov
cmps
cmp
popa
cmp
rcr
and
(bad)
retf
adc
add
push
sti
pop
mov
pop
xor
imul
cmp
push
scas
cmc
mov
das
xor
xor
xchg
retf
xor
pop
jb
adc
push
fs
sahf
adc
mov
mov
fucomip
aaa
add
aas
es
es
bound
bound
aas
sbb
inc
add
in
int
outs
jae
inc
cmps
mov
scas
dec
lahf
mov
cmp
aas
jmp
mov
in
in
push
sbb
jno
pusha
clc
call
pop
addr16
add
pop
leave
xchg
mov
inc
fidiv
sbb
push
push
add
pop
cmp
fs
jge
(bad)
adc
test
sbb
mov
cmp
fwait
sub
mov
xchg
mov
add
not
lahf
push
add
(bad)
adc
jmp
das
fsub
inc
div
xor
lock
daa
push
adc
push
lea
not
ins
fisub
daa
sbb
aas
enter
xchg
out
cmps
call
push
mov
xor
daa
jo
and
jno
ins
clc
push
pop
repz
lahf
scas
lock
add
es
outs
jmp
push
test
and
dec
xchg
sub
(bad)
mov
pop
push
mov
ja
addr16
pushf
sub
inc
inc
aad
data16
out
pop
sub
in
in
cmp
jmp
stos
movs
mov
and
mov
(bad)
popa
sbb
jmp
retf
fbld
mov
jp
add
cmp
or
out
sub
aad
iret
ror
xchg
mov
int3
mov
icebp
fsubr
mov
fwait
repz
jb
mov
xor
xchg
call
fild
shl
in
daa
icebp
ror
jno
int3
inc
or
dec
sahf
rol
xchg
sahf
neg
and
aam
push
inc
and
fsubrp
mov
cmp
mov
jnp
pop
dec
jb
xor
pop
mov
dec
lock
or
add
repnz
leave
jb
loop
lahf
pop
dec
xchg
outs
dec
call
test
jne
pusha
mov
ja
sbb
and
adc
je
iret
jbe
mov
push
dec
rcl
fild
mov
scas
fidiv
aas
adc
(bad)
daa
pop
push
(bad)
and
adc
mov
jg
leave
aas
sub
scas
adc
and
cmps
int
nop
add
add
out
inc
rcl
xor
dec
call
pop
add
icebp
mov
data16
mov
xchg
iret
loop
pop
stos
pop
adc
retf
inc
and
fdiv
jmp
sti
mov
push
ret
mov
rol
bound
add
ins
inc
add
xchg
lds
push
gs
push
inc
mov
sub
je
test
and
lock
inc
cmps
rcr
test
push
mov
pop
mov
js
adc
(bad)
jns
shl
mov
add
push
rol
add
add
fdiv
sbb
(bad)
pop
cs
loope
or
aad
ss
mov
mov
jns
popa
jmp
mov
jne
inc
pusha
aaa
movs
jae
adc
and
and
aad
or
(bad)
or
inc
add
ds
or
ret
xchg
push
mov
xor
push
mov
inc
or
or
push
(bad)
js
add
jg
lea
out
outs
inc
jg
inc
cmps
aas
jmp
jl
rcr
jbe
xchg
xchg
or
inc
mov
add
add
and
and
pop
push
(bad)
jo
dec
push
or
xor
sbb
and
sahf
inc
into
ficomp
xor
pop
aaa
inc
sbb
or
cmp
mov
adc
addr16
mov
mov
lods
xchg
icebp
or
stos
ins
mov
mov
adc
fisttp
xlat
aad
jb
push
xchg
outs
(bad)
rol
mov
or
xchg
add
xchg
cdq
ficomp
mov
jg
lods
mov
outs
loop
addr16
add
push
pop
retf
push
pop
push
repnz
repz
(bad)
shl
call
pop
aaa
cmps
nop
inc
add
cmp
dec
pop
xchg
push
leave
shl
cmps
adc
xchg
rcr
cmps
push
daa
jne
(bad)
mov
lods
add
or
iret
inc
loop
dec
mov
int3
or
ins
mov
scas
cmp
ja
ret
jae
cmps
inc
xchg
xchg
xlat
push
dec
clc
push
xchg
cmp
cmp
pop
xchg
jb
add
sub
mov
lods
aas
xor
cmp
imul
ins
mov
xlat
ficom
loope
mov
clc
push
js
aaa
daa
or
jge
xor
lock
cmps
(bad)
mov
aad
ja
popf
test
sub
or
mov
xor
and
mov
jae
cwde
mov
sub
popf
xor
pop
or
push
test
mov
push
(bad)
mov
and
push
daa
retf
daa
adc
adc
mov
jne
cmp
in
retf
int3
mov
test
push
imul
bound
push
xor
add
jecxz
aaa
jg
inc
(bad)
sahf
cmp
fst
mov
ss
inc
mov
pop
jnp
pop
pusha
push
xchg
nop
xchg
cmp
nop
xchg
and
adc
test
popf
shl
pop
inc
dec
dec
ds
jbe
arpl
jecxz
test
ret
inc
adc
xor
sub
push
pop
cli
cmp
jb
int3
xchg
pop
xor
in
adc
adc
xchg
sti
mov
push
cwde
cmp
(bad)
sub
cmc
mov
inc
aam
leave
cmc
stc
repz
or
adc
and
mov
scas
ja
mov
mov
xchg
adc
pop
inc
clc
cmp
dec
lock
imul
lahf
not
xor
pop
aad
stos
out
xchg
outs
in
dec
cmp
xchg
jbe
push
leave
mov
fs
push
mov
pop
loop
sub
frstor
jns
inc
lds
push
pop
push
jp
jno
sbb
xchg
or
jg
repnz
push
jp
and
je
int
jmp
(bad)
xlat
iret
mov
sbb
outs
pop
pop
mov
not
inc
inc
push
xchg
aad
mov
loop
push
shr
mov
adc
sbb
mov
mov
xchg
cdq
xor
adc
out
sub
xchg
cmc
xchg
jge
fld
cmp
fidivr
int3
mov
add
mov
adc
add
out
dec
das
push
sub
dec
sbb
mul
inc
aam
in
movs
xchg
es
in
aaa
adc
xchg
out
xchg
movs
mov
cmp
inc
jb
mov
add
test
mov
data16
popa
adc
cmps
inc
gs
add
es
stc
ret
and
xor
ja
mov
and
(bad)
jmp
mov
push
(bad)
out
inc
push
and
add
enter
xchg
xchg
addr16
mov
pop
scas
inc
shr
inc
iret
ret
jbe
xchg
not
dec
out
inc
jne
ja
inc
xchg
adc
inc
aaa
sub
xor
test
lds
push
leave
fimul
xor
jg
mul
jns
repz
push
ret
mul
(bad)
inc
les
pusha
ret
push
(bad)
adc
adc
and
mov
jae
xor
sub
xlat
mov
add
sti
jb
and
dec
lds
pop
loop
push
inc
icebp
add
xchg
and
dec
mov
das
(bad)
dec
mov
test
cmp
aaa
inc
push
aad
cmps
mov
rol
jmp
pop
xchg
cld
cmp
and
sub
add
xchg
add
xchg
aas
inc
push
add
pop
fsubp
arpl
xlat
sub
mov
and
cmp
jno
imul
push
inc
(bad)
test
xchg
aaa
mov
and
mov
inc
and
daa
dec
popa
cmps
stos
cli
sbb
ins
scas
inc
test
loop
mov
xor
cmp
cld
and
pop
jbe
push
stos
fiadd
mov
lods
dec
ss
mov
xchg
bound
cmp
aam
cld
jg
(bad)
adc
out
(bad)
cld
xlat
xor
mov
push
mov
daa
inc
das
push
inc
push
ds
push
rol
mov
stos
and
js
inc
(bad)
aam
add
push
pusha
adc
shl
cdq
xchg
add
xchg
(bad)
push
inc
cmp
in
push
mov
jb
jl
addr16
bound
mov
ja
arpl
fwait
inc
iret
pop
pop
mov
mov
aaa
outs
test
inc
mov
mov
mov
loop
pop
imul
inc
adc
add
das
jmp
les
mov
mov
inc
push
and
push
sbb
jge
icebp
jecxz
into
repnz
cmp
loop
xchg
loop
bound
jns
sub
add
mov
lea
inc
jle
int3
cmp
jp
inc
retf
and
xor
xchg
int3
ins
aam
les
sahf
pop
jge
ins
fidivr
scas
neg
and
jbe
pop
retf
loopne
xchg
aaa
xor
xor
jmp
jge
mov
out
lods
xor
test
adc
pop
sbb
add
hlt
mov
and
add
cmps
dec
push
call
int3
mov
sar
jl
mov
push
out
pop
xor
add
jmp
jmp
or
jns
dec
push
into
sbb
inc
adc
xchg
pop
or
mov
add
cli
push
mov
and
xor
adc
mov
mov
pop
jg
dec
sahf
addr16
adc
mov
repnz
shr
sbb
out
jmp
ja
add
lea
cmc
add
sbb
inc
stos
add
pop
push
xchg
dec
pusha
call
sbb
push
xchg
push
ret
fcmovne
sti
rcl
ror
adc
(bad)
ins
and
pop
push
push
stos
push
jb
daa
and
pop
xor
add
and
test
aaa
loop
clc
xchg
gs
gs
fs
push
idiv
neg
outs
mov
cmp
sbb
xchg
pop
(bad)
ja
inc
popa
mov
ds
and
ret
mov
cmp
es
cmp
dec
dec
adc
jae
inc
call
loop
stos
icebp
sub
mov
outs
cmp
cmps
jle
adc
ins
inc
test
cdq
pop
aas
mov
in
div
lahf
test
retf
dec
dec
jg
and
inc
bound
arpl
es
cmp
test
jns
cmp
in
xor
call
out
stc
xchg
inc
cmp
ins
mov
(bad)
mov
xor
scas
nop
lds
stc
lahf
out
out
repz
mov
std
xor
(bad)
cdq
mov
add
mov
mov
stc
cmps
pop
sbb
add
repnz
add
adc
stos
inc
adc
dec
cmc
and
inc
and
pop
das
mov
bnd
cld
xchg
push
enter
pop
push
or
aaa
inc
adc
adc
or
test
shl
and
mov
rcr
ja
sub
and
outs
mov
inc
inc
pop
fdiv
pop
stos
rol
repz
(bad)
dec
inc
mov
jp
jb
pop
(bad)
js
adc
(bad)
cmp
push
mov
add
je
mov
xchg
pop
icebp
daa
dec
sbb
pop
cwde
gs
loopne
and
sahf
adc
mov
mov
xor
xor
xchg
cmp
mov
mov
sbb
mov
pop
ds
out
movs
mov
(bad)
(bad)
pusha
mov
or
pop
jae
xacquire
nop
jecxz
jg
inc
ret
dec
std
ja
add
dec
das
daa
push
(bad)
push
fcmovnb
sub
je
mov
int3
ror
or
cmp
and
loope
(bad)
jb
xchg
cmp
adc
xor
jecxz
xchg
pop
cmp
fwait
jecxz
ret
icebp
mov
ret
sahf
shl
push
xchg
pop
mov
fs
pop
dec
in
pop
dec
push
pop
es
loop
cs
or
jmp
ss
(bad)
xchg
push
jno
dec
(bad)
loope
xchg
aas
inc
inc
test
cmps
loop
dec
pop
push
cmp
mov
(bad)
test
frstor
mov
out
test
sbb
add
ins
je
mov
jae
xor
mov
jp
rcl
lea
addr16
or
fwait
push
add
ja
or
push
retf
jae
aam
rcr
mov
jg
rep
jns
push
inc
popw
mov
push
rcl
fwait
pop
imul
jp
xchg
ret
sbb
xor
or
mov
mov
push
sub
push
xchg
into
repnz
rcr
movs
adc
sbb
mov
jecxz
pop
outs
pop
sbb
cld
dec
mov
mov
add
mov
leave
fsubr
repnz
aam
sbb
shl
into
imul
dec
sub
ret
mov
mov
or
leave
(bad)
scas
pop
or
and
or
bound
shl
xchg
mov
mov
daa
mov
cmp
adc
add
addr16
and
inc
xchg
das
dec
(bad)
sbb
retf
je
ja
shr
push
lea
pop
xor
sub
jmp
(bad)
idiv
jne
pop
sbb
bound
fisub
aas
adc
pop
ins
mov
xor
mov
enter
aas
fidivr
xchg
and
out
cmp
cmps
push
(bad)
ret
sub
pop
mov
push
inc
xchg
shr
xchg
xor
lds
add
cdq
aas
adc
xlat
bnd
repnz
shr
aaa
call
sub
mov
int
(bad)
mov
cmp
inc
mov
pop
ja
lods
sti
clc
inc
xchg
mov
sub
fucom
pop
dec
inc
mov
cli
jne
and
cmp
enter
inc
xor
xchg
es
add
fst
or
daa
inc
loop
loop
and
das
pusha
call
repz
mov
std
neg
(bad)
imul
inc
pop
or
or
mov
cwde
pusha
inc
div
cmps
mov
sbb
sbb
inc
xchg
pop
adc
mov
jb
bound
lock
or
inc
lds
pop
scas
mov
add
sbb
(bad)
dec
(bad)
ins
mov
repz
fdivrp
xor
cmps
inc
std
cmc
xchg
lea
jle
push
xlat
pop
call
mov
stos
cmps
mul
(bad)
ficomp
or
(bad)
xlat
aam
in
dec
mul
dec
sar
or
loopne
sbb
aas
jae
(bad)
inc
and
and
dec
leave
out
aad
das
jb
test
js
ffreep
pop
int3
es
lock
pop
jmp
data16
or
sar
fwait
cmps
xchg
push
stos
test
div
fs
fcomp
pop
arpl
mov
mov
ja
leavew
stos
stos
jnp
test
and
gs
cs
or
cmp
mov
sbb
mov
inc
xor
push
cmp
das
aam
iret
xlat
shl
in
fidiv
out
(bad)
lds
inc
mov
(bad)
js
repnz
xchg
aas
jmp
cmp
sbb
out
mov
xor
pop
and
inc
clc
dec
ja
addr16
jl
imul
scas
and
loop
cmp
out
jae
xchg
xchg
xor
not
addr16
mov
push
xchg
sub
xor
sub
mov
(bad)
mov
int
xlat
das
xor
mov
popa
or
jo
retf
retf
jae
pushf
out
mov
(bad)
mov
add
leave
shl
sub
scas
test
(bad)
arpl
jg
out
adc
arpl
aam
out
les
ins
add
ins
or
pop
imul
pop
retf
test
in
ror
les
jg
(bad)
and
xchg
not
sbb
cld
outs
xchg
std
sub
jae
mov
les
pop
xchg
sar
mov
and
xchg
ins
data16
inc
popa
rsqrtps
adc
popa
push
cmp
jno
mov
test
xor
sti
fist
xor
pop
dec
pop
xchg
mov
dec
inc
imul
jge
loop
mov
idiv
mov
lods
out
mov
aaa
repnz
in
stc
adc
and
lods
mov
add
rcr
sub
test
inc
dec
pop
cmps
sub
cmps
bound
call
enter
mov
pop
hlt
nop
or
jae
jb
pop
push
or
repnz
or
adc
loop
fnstcw
push
jmp
cmc
das
arpl
dec
sahf
out
lock
adc
into
mov
stos
mov
xor
arpl
jge
add
cmc
ins
push
xchg
ds
cmc
or
cmps
mov
push
test
out
cmp
xor
jb
mov
ins
adc
jmp
jb
mov
clc
jb
sbb
mov
jecxz
ds
push
and
pop
add
je
add
add
pusha
and
inc
jmp
inc
xlat
mov
mov
add
(bad)
call
inc
jl
rcl
xor
(bad)
scas
inc
js
jmp
(bad)
mov
mov
xlat
addr16
and
push
inc
sbb
lock
sub
test
mov
clc
inc
add
bound
(bad)
dec
pop
fistp
xchg
adc
mov
sbb
repnz
mov
pop
ret
pop
dec
sub
push
call
or
sub
jp
pop
xchg
cmp
and
scas
push
sbb
push
mul
xchg
aaa
repz
(bad)
lock
push
in
mov
movs
test
xor
push
popa
shr
ret
lock
jns
mov
push
xchg
pushf
out
add
push
inc
push
int
jmp
and
jl
dec
add
data16
mov
popf
xlat
idiv
push
inc
jnp
sbb
retf
dec
pop
xor
aaa
ret
cmp
adc
xchg
cmps
mov
shr
adc
push
mov
mov
mov
add
lods
inc
es
popf
cmp
out
ins
int
adc
pop
pop
aam
push
push
inc
scas
rcr
out
iret
xor
dec
xchg
(bad)
and
xchg
cmps
and
push
xor
daa
push
ficomp
iret
out
mov
dec
xchg
out
je
adc
aaa
pop
rcr
and
cmp
adc
mov
ret
dec
ja
sbb
add
push
mov
xor
lea
mov
xor
mov
fcom
pop
cs
hlt
(bad)
mov
jmp
dec
(bad)
loop
add
frstor
sub
xchg
std
mov
unpcklps
inc
push
ins
mov
das
movs
push
adc
add
hlt
je
imul
or
repnz
xor
das
mov
xchg
es
in
xchg
cmp
cmc
mov
inc
or
adc
inc
call
(bad)
shl
mov
es
jbe
jle
push
xor
adc
mov
aas
shl
inc
out
or
adc
loope
std
jmp
inc
xor
pop
test
mov
loop
data16
push
stc
xor
lahf
xchg
mov
ret
jns
jb
add
jecxz
int3
ficomp
hlt
or
aad
pop
push
adc
adc
arpl
setge
hlt
ss
(bad)
mov
adc
dec
test
out
xchg
bound
inc
sbb
repnz
aad
push
and
mov
cmp
and
fsub
inc
jge
mov
cmp
jo
ret
inc
daa
push
ss
and
lock
out
cmps
lods
lds
repz
dec
rcr
lds
call
jne
xchg
bound
mov
test
xchg
cwde
(bad)
or
pop
movs
sub
sub
mov
jmp
mov
bound
jmp
jbe
inc
jb
lea
cli
xchg
ror
lea
mov
retf
addr16
hlt
jno
push
sbb
mov
cld
jmp
clc
xchg
add
push
push
and
or
aad
mov
mov
push
xchg
outs
(bad)
xlat
mov
cdq
xor
pop
or
mov
icebp
push
xor
addr16
mov
outs
xor
or
sbb
cmp
push
add
xchg
xchg
and
add
into
clc
mov
movs
or
icebp
and
xor
aaa
fadd
mov
shr
outs
mov
jns
mov
xchg
mov
and
jb
mov
mov
jbe
mov
push
mov
xor
rcl
push
mov
mov
frstor
ds
nop
je
inc
popa
dec
and
mov
leave
adc
cmc
add
mov
hlt
sub
push
ret
repz
out
in
mov
mov
call
stc
stc
in
xchg
push
addr16
push
mov
mov
aam
and
loop
repz
jne
sbb
inc
mov
enter
jne
shl
bound
lods
cs
scas
call
cmps
sub
sar
test
mov
mov
push
pop
shl
fsubr
dec
out
xchg
jo
sub
int3
icebp
lock
dec
push
daa
pop
or
xchg
pop
bnd
or
rol
in
prefetch
sahf
(bad)
fild
dec
imul
cmp
xlat
out
cs
pushf
(bad)
ret
lea
leave
pop
rol
fucomi
sub
out
mov
inc
push
leave
pop
daa
loopne
xor
rol
xor
mov
adc
ja
imul
jecxz
push
push
loop
cmps
cs
ds
shl
cmp
xchg
(bad)
mov
call
pop
xor
mov
xor
dec
out
popa
jp
xor
cld
hlt
inc
sub
push
rcl
test
mov
jbe
add
xor
mov
adc
shl
stc
mov
call
inc
jle
sbb
loop
or
xchg
daa
push
repz
sbb
adc
loopne
mov
adc
add
and
movs
and
mov
adc
xor
sbb
retf
aas
les
pusha
mul
(bad)
sbb
loop
loop
pop
add
jnp
cdq
push
bound
adc
jo
inc
push
std
xchg
and
cmps
rol
jg
pushf
sbb
pop
or
or
(bad)
iret
jecxz
xor
(bad)
xlat
jmp
mov
xchg
(bad)
or
add
sbb
jle
fdivp
arpl
push
dec
jl
push
(bad)
ja
fst
(bad)
lods
sbb
call
jge
inc
sbb
xchg
ret
inc
fs
enter
call
data16
inc
movs
inc
mov
popf
adc
mov
(bad)
fwait
shl
xchg
push
dec
in
pop
clc
xor
(bad)
aad
pushf
retf
add
pop
sub
cdq
dec
xor
jno
inc
and
hlt
and
jae
dec
cmc
push
push
ret
dec
cdq
pop
mov
adc
ficom
pop
xchg
inc
xor
xchg
sbb
pop
inc
(bad)
neg
out
cmps
arpl
mov
(bad)
retf
leave
das
sub
dec
pop
xchg
adc
fadd
jl
mov
mov
call
xor
es
repnz
mov
call
pop
loop
(bad)
movs
push
push
data16
cld
fisubr
ja
pop
push
push
xor
mov
aad
arpl
pop
inc
icebp
call
sub
fs
xchg
movs
mov
and
(bad)
mov
mov
addr16
std
arpl
stc
loope
sbb
adc
and
push
mov
scas
daa
stos
inc
mov
rol
in
mov
sbb
add
and
jno
or
cmp
neg
and
ja
sub
movs
stos
mov
and
adc
or
adc
xchg
sub
and
(bad)
add
pop
xchg
arpl
and
mov
sub
pop
or
mov
mov
loope
bound
aaa
pop
inc
pop
push
inc
stc
or
fst
ror
push
push
pop
rcr
push
addr16
cmp
shl
cmp
shr
jbe
loop
stos
or
xchg
jo
jb
jno
push
ror
adc
hlt
pop
in
addr16
xor
xchg
test
cmp
push
fwait
push
iret
dec
cs
arpl
dec
loope
ss
xchg
dec
xor
movs
(bad)
xor
pop
ja
fisubr
dec
call
pop
out
call
fcom
or
pushf
jbe
push
add
and
inc
sub
(bad)
mov
cs
sub
mov
jl
sbb
lods
xchg
cmc
sub
cmps
mov
mov
mov
xchg
repnz
xor
gs
aas
fisubr
jp
inc
pop
cli
xchg
mov
adc
lock
xchg
sub
enter
mov
cmps
push
test
(bad)
out
repz
xchg
rol
fidiv
mov
inc
out
adc
arpl
lock
xor
cmp
(bad)
jns
into
push
fistp
push
jne
ja
fst
out
push
adc
mov
scas
adc
pop
jle
repz
fimul
and
mov
(bad)
mov
or
jno
mov
mov
or
push
call
xchg
add
cmps
jmp
repz
inc
les
test
push
mov
ss
xor
lods
popa
loop
mov
sbb
pop
mov
push
and
push
loop
retf
imul
and
and
push
adc
call
loop
inc
cmps
and
imul
jg
sub
xor
inc
mov
push
cld
imul
fidiv
repz
ja
jae
xchg
inc
xor
dec
aad
push
inc
mov
hlt
jecxz
in
ret
lods
inc
sar
loop
in
mov
and
gs
into
jno
inc
es
inc
xchg
test
xchg
dec
sub
sbb
push
mov
call
cmc
aad
and
and
mov
imul
pop
push
inc
mov
jg
adc
cli
inc
dec
out
push
push
xchg
call
data16
(bad)
fld
in
mov
add
cmp
mov
push
aas
and
arpl
pop
inc
call
fwait
icebp
mov
loope
cmp
inc
je
in
push
outs
ret
sbb
repnz
idiv
jl
leave
pop
inc
ret
mov
aas
test
in
adc
sar
pop
inc
int
repnz
out
not
adc
ins
jns
xchg
outs
xchg
(bad)
movs
xchg
xor
sub
addr16
or
popa
push
and
pop
pop
inc
mov
and
mov
push
jne
loope
xor
xor
aaa
or
ds
sub
shl
pop
test
mov
ins
inc
lds
je
in
adc
test
cmps
outs
rol
ror
lahf
push
cmps
push
jle
mov
push
xchg
mov
xlat
jg
jge
fmul
push
test
inc
adc
rol
shl
nop
mov
jmp
fs
mov
xchg
xchg
xlat
push
cs
inc
sar
mov
push
lods
into
or
cli
icebp
mov
or
daa
inc
arpl
sar
xor
mov
mov
repnz
adc
jbe
test
xor
sub
inc
pop
and
daa
inc
cmps
cmp
xchg
mov
sbb
cmps
fst
repz
outs
mov
mov
add
jecxz
aad
test
add
mov
xor
push
jge
(bad)
shr
push
sub
jl
data16
push
and
cwde
cmp
xchg
jne
(bad)
stos
jmp
inc
add
mov
ss
sub
dec
cmps
and
stos
lock
cmps
xor
outs
mov
xor
mov
xor
hlt
js
xlat
pop
mov
inc
jne
or
sbb
out
sub
into
and
jae
jl
dec
cmps
pop
mov
lahf
mov
loope
cmp
mov
inc
fild
cli
xor
lock
arpl
sub
retf
dec
xor
mov
xchg
fisubr
iret
push
pop
sahf
jno
sti
sub
jb
mov
mov
jo
or
(bad)
push
call
cwde
pushf
add
adc
jne
sti
movs
in
inc
adc
test
ret
mov
out
and
pop
mov
mov
pop
ins
outs
adc
xchg
mov
icebp
push
mov
xchg
add
stos
(bad)
sub
ret
fld
xchg
cmps
cmp
jecxz
call
dec
sbb
pslld
sbb
fnstsw
xchg
out
cmp
mov
dec
or
pop
cmp
(bad)
leave
xor
cmps
popf
dec
xchg
shr
jbe
push
xchg
mov
mov
icebp
xor
xchg
hlt
xchg
pop
nop
add
or
repz
push
xchg
ret
(bad)
mov
shl
cmc
push
test
adc
scas
into
hlt
in
xlat
mov
cmp
mov
xor
and
jbe
pop
xor
and
shr
xor
in
mov
sahf
into
dec
mov
cmp
and
xor
shl
adc
iret
pop
cld
add
rol
and
in
inc
pusha
push
daa
mov
(bad)
into
hlt
bound
leave
pushf
and
(bad)
fist
ret
or
dec
or
inc
aas
pusha
sub
pushf
and
scas
out
jg
mov
xor
jmp
mov
add
and
jae
mov
jmp
stos
jmp
fild
fmulp
ja
pop
mov
das
pop
sar
push
in
jbe
aam
pop
(bad)
div
outs
rcl
pop
dec
sbb
repnz
scas
cmp
stc
pop
adc
mov
test
xchg
xchg
out
ja
fild
fs
jb
fidivr
mov
jg
fidivr
xor
mov
jnp
mov
push
adc
pusha
test
pop
sub
scas
sar
mov
push
icebp
aas
retf
xor
adc
sub
cmp
loop
rcr
sar
adc
mov
jl
sub
pop
ficom
lock
(bad)
jae
imul
inc
imul
aad
retf
ret
ret
jae
pop
pop
mov
movs
inc
and
es
cmp
aas
and
xor
jp
dec
xchg
xchg
xor
rcr
out
xchg
push
shl
pop
inc
neg
arpl
adc
xor
push
pop
loopne
mov
ins
popf
xchg
xchg
stos
push
mov
jmp
adc
fwait
inc
inc
and
jl
mov
mov
icebp
fs
and
neg
jae
jno
and
add
mov
sbb
xchg
out
sub
(bad)
cmps
ret
pop
mov
or
out
xchg
into
bnd
pop
inc
pusha
add
push
push
adc
mov
xchg
xchg
mov
jb
push
cmps
push
cmp
loop
iret
addr16
int
out
jecxz
pop
adc
and
mov
mov
mov
movs
inc
pop
xor
int3
arpl
fidiv
cmp
jecxz
add
repz
mov
test
add
sub
and
jp
and
push
repz
aaa
jg
popa
xor
sub
pop
aaa
inc
fwait
shr
lock
push
lahf
fdivr
cmps
cmc
mov
popf
pop
mov
test
out
sub
bound
lods
ror
gs
inc
sbb
mov
pop
inc
add
mov
xchg
pop
loop
stc
adc
push
lahf
stc
push
xchg
cmp
lock
pop
push
and
(bad)
fsub
in
lods
icebp
mov
adc
es
mov
mov
movs
cmc
push
inc
cld
xor
and
das
mov
jmp
out
sar
inc
dec
fist
(bad)
in
push
sub
mov
mov
call
sahf
jg
rcl
jle
sub
and
sbb
and
test
in
adc
(bad)
test
inc
mov
and
and
btr
xchg
(bad)
adc
xchg
neg
rcr
(bad)
arpl
push
dec
out
add
fld
f2xm1
cdq
(bad)
jmp
xchg
out
movs
repnz
fild
adc
shl
mov
cmp
imul
sub
inc
leave
mov
lods
sbb
mov
repnz
in
and
imul
mov
mov
or
and
(bad)
arpl
xchg
pop
loope
mov
in
(bad)
inc
sub
mov
ins
movs
jbe
adc
inc
adc
mov
mov
int
jmp
stos
ss
aaa
push
pop
popf
(bad)
leave
jg
sahf
retf
cwde
jmp
addr16
jge
xor
mov
push
sub
and
add
retf
out
sbb
scas
or
xchg
mov
push
hlt
test
mov
jbe
add
mov
ficomp
mov
div
rol
aaa
outs
jle
aaa
jmp
nop
pop
jb
adc
adc
stc
pop
loope
xchg
leave
cmp
and
add
and
adc
call
(bad)
fimul
loop
arpl
xor
imul
inc
mov
cmp
das
jmp
inc
and
adc
jmp
test
stos
int
ror
jb
stos
xchg
add
stos
jno
movs
xchg
shl
mov
aaa
imul
mov
add
jmp
je
call
jecxz
out
rcr
jbe
iret
push
xchg
(bad)
push
jp
inc
nop
mov
dec
mov
retf
cmc
(bad)
movs
jmp
leave
jp
dec
jmp
cwde
xor
cwde
sbb
fist
test
into
addr16
mov
push
push
daa
jle
outs
int3
and
test
jecxz
push
mov
inc
icebp
push
mov
inc
js
cld
xchg
test
dec
push
aaa
test
xchg
or
push
jb
add
push
xlat
and
xchg
ret
pop
jmp
aaa
push
jb
inc
repnz
inc
out
mov
mov
ret
ret
pop
mov
adc
iret
sub
sbb
int3
xor
(bad)
sahf
fisttp
mov
fwait
pop
int
ja
inc
push
xchg
or
and
outs
lds
mov
xchg
xchg
inc
dec
add
jb
push
push
inc
daa
push
aaa
jb
and
aaa
bound
mov
mov
mov
push
xchg
mov
jle
fs
pop
addr16
out
imul
aam
aam
inc
cmp
jle
ds
xchg
push
push
xor
aaa
aaa
adc
adc
stos
test
mov
retf
mov
rol
fs
aad
cmp
sahf
or
fldenv
pop
inc
adc
in
aaa
es
popf
in
cmp
adc
jecxz
xchg
xchg
rol
(bad)
push
pop
inc
push
adc
mov
adc
fwait
jge
jns
add
aaa
mov
lahf
xchg
ret
ja
add
or
push
loope
push
push
adc
(bad)
(bad)
mov
jmp
inc
test
mov
xor
push
inc
xor
(bad)
cmp
pop
icebp
add
loop
dec
cmps
inc
jmp
mov
and
pop
pop
daa
cmp
or
mov
adc
rcr
inc
jmp
repz
repnz
ret
adc
(bad)
xchg
retf
lea
loope
test
pop
xor
xchg
pop
and
sbb
cmp
jmp
das
mov
sbb
stos
mov
dec
shl
xlat
xchg
push
repnz
push
cmp
imul
cmps
sti
lock
sub
dec
and
addr16
ret
cli
jb
adc
xor
loopne
add
xchg
adc
xchg
add
mov
push
ret
sbb
out
push
test
bound
adc
jbe
out
iret
pop
xor
mov
cld
xor
call
call
mov
and
lods
pop
ret
cmp
out
or
push
xchg
int
mov
xor
push
ret
inc
mov
or
pop
mov
ret
or
call
ss
jbe
mov
cmp
mov
adc
outs
ret
call
lds
and
repz
push
daa
jle
xchg
sbb
sub
ja
fyl2xp1
push
sub
xor
jl
mul
xlat
xchg
mov
pop
sbb
xchg
pop
js
scas
and
xor
inc
(bad)
mov
xchg
fnstenv
cmp
ret
test
dec
jge
mov
mov
dec
mov
mul
test
stos
cmp
add
pop
jecxz
aaa
inc
ret
inc
sub
mov
cmp
sub
dec
jg
pop
xchg
daa
in
sbb
enter
jb
mov
out
mov
or
mov
mov
and
dec
mov
adc
adc
dec
jnp
nop
and
scas
sbb
stos
outs
pop
(bad)
xchg
pushf
dec
sbb
inc
shl
push
and
cdq
push
into
in
addr16
xor
mov
call
rcl
dec
xor
cmp
(bad)
mov
cmc
nop
icebp
scas
icebp
shl
xor
adc
out
push
cmp
outs
imul
das
fisubr
iret
mov
mov
popf
out
nop
ret
nop
mov
sbb
js
push
aas
outs
xchg
loop
dec
sti
inc
mul
aam
jb
add
pop
push
fsub
cli
jns
adc
sub
or
repz
sti
xor
ret
xor
or
(bad)
xchg
push
ret
imul
cmp
loop
iret
dec
adc
loop
ret
mov
je
jle
jae
loop
and
dec
mov
or
(bad)
ins
inc
mov
sbb
in
mov
jge
outs
rcl
in
mov
push
inc
sub
fisub
scas
xchg
adc
(bad)
fnstenv
push
(bad)
push
xchg
cmps
fdivr
out
hlt
jae
jecxz
xor
daa
xor
je
push
aaa
inc
inc
mov
nop
fild
sbb
dec
outs
mov
xor
int
push
fwait
and
sbb
ret
les
sar
pop
into
xchg
cli
imul
lds
add
xchg
mov
jb
imul
add
aaa
sub
dec
or
sbb
(bad)
imul
ds
pop
pusha
mov
xchg
ret
pop
mov
mov
dec
and
cmp
mov
push
repz
jb
mov
dec
sbb
jb
inc
dec
and
test
mov
add
neg
aaa
nop
cld
jb
inc
stos
inc
repz
push
pop
xchg
cmp
mov
cmc
call
(bad)
fimul
or
dec
pushw
enter
pop
add
aaa
(bad)
cmp
sbb
ins
stos
loop
(bad)
mov
cmc
jb
sub
push
or
and
xchg
and
out
adc
push
or
push
cmp
mov
idiv
popa
je
push
out
rol
jno
jecxz
mov
mul
inc
aaa
adc
push
test
rol
cli
mov
inc
xchg
xchg
loop
loopne
jbe
call
push
push
pop
add
cdq
push
es
mov
inc
mov
adc
test
and
bound
xchg
push
shl
push
les
add
arpl
(bad)
sbb
jle
js
jp
je
mov
icebp
popf
repz
jecxz
movs
stc
shl
xchg
cmps
xor
sub
repz
clc
xchg
cmp
xchg
sbb
daa
retf
inc
jp
(bad)
ja
xchg
and
xor
or
mov
or
and
jb
stos
mov
push
pusha
mov
ds
sbb
aaa
xor
xchg
jge
sti
jg
mul
xor
ret
sbb
imul
faddp
add
outs
sub
cdq
mov
outs
xlat
xchg
rol
ror
xchg
xchg
(bad)
fisttp
adc
out
call
imul
jecxz
xor
cli
mul
test
push
sar
mov
inc
data16
dec
fdiv
mov
fxch
cli
repnz
stos
mov
push
fiadd
lods
cmps
(bad)
dec
or
icebp
or
ja
xchg
inc
cmc
shr
out
sub
push
dec
rep
xchg
pushf
jns
les
jns
xchg
ret
mov
test
pop
dec
or
xchg
pop
jle
sbb
test
test
cdq
ss
and
jne
and
mov
sahf
out
lea
xor
out
cmp
into
fwait
adc
and
push
repz
inc
xchg
sbb
mul
icebp
or
or
xor
sub
aas
xchg
and
sbb
cmc
mov
pop
sub
xchg
(bad)
sbb
sbb
cmps
jl
lock
mov
lods
and
pop
xchg
jae
scas
aas
les
cmc
shr
es
pop
jecxz
packsswb
xchg
and
add
call
inc
mov
adc
or
mov
push
rol
in
imul
inc
mov
add
inc
push
icebp
push
stos
mov
add
je
add
inc
call
test
add
jg
adc
xor
adc
mov
shr
push
into
push
ins
mov
jecxz
repnz
push
(bad)
mov
and
mov
mov
ja
xlat
xchg
add
adc
add
(bad)
push
xlat
add
(bad)
stos
mov
fidivr
idiv
inc
mov
mov
shl
inc
push
daa
mov
je
push
xchg
adc
push
cmc
ret
in
into
mov
adc
inc
adc
inc
movs
inc
sub
add
aad
cmp
(bad)
adc
mov
xchg
and
mov
xor
nop
inc
int
sbb
and
fstp
in
sub
dec
cdq
jge
cmp
ror
lock
mov
jecxz
shl
repz
loopne
or
mov
into
test
adc
test
scas
movd
jg
std
mov
dec
cmp
sub
xchg
repnz
or
in
xchg
fwait
call
out
retf
xlat
pop
add
bound
add
aas
(bad)
aaa
(bad)
shl
mov
(bad)
inc
leave
pop
mov
(bad)
xchg
out
lods
and
cmp
imul
call
push
ins
mov
loope
fld
xor
dec
push
rcl
imul
cmp
cmp
mov
lock
adc
ss
pusha
inc
ja
ss
mov
push
mov
sub
call
sbb
sub
out
mov
xor
sbb
mov
jne
test
bound
and
test
xlat
jmp
xlat
mov
xrelease
xor
jl
push
add
cmps
loope
adc
sbb
mov
add
(bad)
jle
mov
jae
inc
mov
sub
push
ret
daa
test
sub
aaa
popf
inc
bound
fisttp
inc
pop
stos
add
lock
shl
fxch
pop
sub
data16
int
ja
out
xor
test
jno
sbb
mov
xchg
sbb
dec
sub
inc
add
enter
and
in
lods
scas
int
xchg
shr
loope
hlt
fwait
mov
ss
mov
aam
push
jae
adc
inc
jno
daa
xchg
adc
mov
cdq
icebp
je
cmps
push
sub
mov
addr16
push
pop
sti
jbe
cmps
xchg
xchg
mov
leave
es
fwait
sbb
stc
in
inc
leave
xor
inc
ss
adc
jmp
mov
or
aaa
add
iret
lahf
mov
sti
sahf
aas
in
or
retf
leave
hlt
xchg
mov
sub
and
mov
int
fisttp
repz
adc
movs
jae
sbb
adc
xchg
jecxz
sar
aam
pusha
jns
(bad)
outs
cmps
rcl
adc
test
in
(bad)
movs
sbb
fidiv
inc
stos
xchg
and
or
je
mov
add
sbb
cdq
dec
sub
adc
dec
and
xchg
xchg
fisubr
outs
call
pop
retf
das
jp
icebp
adc
push
in
xor
pop
lds
pushf
xchg
and
nop
clc
inc
loopne
cmp
daa
rcr
movs
pop
call
ficom
inc
dec
xchg
(bad)
shl
mov
shl
mov
retf
test
inc
push
lods
jp
(bad)
cmps
sti
push
mov
sbb
ret
inc
xor
xchg
mov
dec
dec
sub
add
inc
shl
cmp
bnd
loope
inc
push
push
fadd
adc
pop
add
lods
adc
xchg
mov
mov
jbe
inc
sbb
iret
inc
push
daa
and
retf
ins
mov
push
repz
mov
mov
(bad)
aaa
sbb
aam
push
es
and
aam
shl
and
lea
(bad)
sub
sub
add
dec
add
or
mov
aam
lds
or
fdiv
inc
test
ds
jno
les
bound
nop
bound
shl
ret
shr
out
fst
push
or
pop
icebp
movs
(bad)
(bad)
fild
and
out
sbb
jne
and
pop
fwait
push
pop
xor
jb
div
push
jnp
leave
and
aam
inc
add
xor
das
js
dec
pusha
cs
call
cmps
mov
xchg
fimul
popf
mov
or
dec
cmp
jne
cmp
dec
outs
dec
hlt
inc
push
push
pop
fdiv
out
aas
iret
mov
pusha
cmp
or
cwde
cld
pop
scas
pop
pop
push
jecxz
xchg
movs
daa
(bad)
in
sbb
push
into
and
inc
and
or
cmp
iret
cli
push
into
lods
sbb
in
push
popf
test
out
cmp
adc
or
and
xor
fwait
jle
cmps
xchg
js
inc
hlt
xchg
jno
ror
and
push
test
rcr
mov
add
cli
ss
and
in
add
mov
dec
push
sbb
neg
leave
mov
pop
and
add
(bad)
out
or
sbb
push
inc
arpl
rcr
das
xchg
daa
sahf
lods
je
push
add
je
out
and
popa
pop
sbb
mov
lahf
idiv
fsubr
push
fidivr
dec
js
sbb
ret
sar
cmp
cwde
xlat
mov
pop
mov
dec
std
icebp
mov
mov
stos
daa
bound
aaa
fiadd
js
sbb
iret
pop
out
jae
xchg
in
repz
into
xor
mov
mov
push
push
push
push
sahf
ret
(bad)
rcl
stos
in
push
iret
xor
xchg
daa
scas
mov
je
ins
or
push
xlat
loop
dec
xchg
adc
loope
stos
mov
rcl
in
dec
outs
jnp
xlat
cs
sbb
mov
mov
das
aaa
outs
(bad)
fimul
(bad)
cs
(bad)
cmp
pop
into
pop
ins
mov
lea
inc
out
scas
repnz
adc
jmp
daa
lods
add
jge
out
daa
push
js
cmp
inc
repnz
lahf
imul
xchg
movs
xlat
idiv
inc
inc
adc
mov
xor
mov
retf
shr
mov
(bad)
dec
sub
sbb
ja
push
iret
push
cmp
sahf
dec
lahf
shl
sahf
ja
xchg
bound
dec
idiv
mov
outs
dec
push
rcr
sub
adc
stos
cdq
out
xor
mov
or
dec
inc
mov
pop
out
sub
push
and
bound
sbb
dec
dec
stos
and
and
shl
fsubr
xor
mov
outs
in
out
dec
push
xchg
dec
jns
ins
ds
sbb
xchg
inc
jmp
inc
inc
sar
or
add
retf
push
repnz
ficom
cmps
sbb
scas
mov
dec
test
mov
push
fbstp
inc
enter
ins
(bad)
bound
inc
pop
(bad)
xchg
sub
cmp
adc
push
inc
or
push
div
fwait
call
jp
inc
and
adc
call
pop
adc
xlat
ss
sub
das
push
jbe
outs
in
ror
(bad)
data16
dec
and
mov
push
add
loopne
xor
inc
push
ja
dec
test
loop
dec
jb
fwait
and
cmc
gs
out
repnz
inc
sbb
hlt
mov
jp
add
call
ficom
fiadd
or
out
test
(bad)
xor
iret
aaa
pop
mov
adc
jmp
push
xchg
fimul
and
xor
ja
movs
pop
lock
(bad)
(bad)
mov
sar
scas
push
aam
mov
pop
es
loop
je
xor
inc
sbb
add
cld
add
mov
add
les
(bad)
cmp
bound
pop
daa
ret
aaa
mov
jmp
clc
fild
xor
jg
xchg
jae
inc
sbb
push
addr16
jmp
outs
xchg
daa
aaa
xchg
jb
push
xchg
dec
and
retf
push
push
loop
push
push
add
mov
and
push
push
sub
pop
mov
cmp
or
or
rcl
push
fwait
outs
jb
mov
and
imul
jp
aam
idiv
and
jns
sub
adc
pop
rcl
loop
push
(bad)
inc
sti
inc
fadd
sti
inc
sbb
inc
adc
xor
arpl
fisttp
test
mov
std
xchg
xchg
mov
xchg
in
mov
out
out
pop
xchg
xchg
shr
rol
push
push
or
inc
xchg
(bad)
das
xor
pop
out
mov
in
mov
and
out
sbb
(bad)
sti
mov
sbb
mov
mov
sahf
add
and
sub
out
mov
adc
mov
mov
sbb
test
rcl
cmp
mov
sahf
xchg
pop
cmp
clc
sub
mov
shl
mov
aaa
inc
cmp
mov
push
mov
push
ss
repz
pop
jb
cmp
dec
hlt
inc
sub
ja
aaa
xor
js
fistp
pop
call
sub
fsub
test
dec
xor
in
inc
and
cmps
ins
or
dec
lahf
adc
bound
pop
pop
mov
outs
xlat
jg
and
shl
sub
inc
imul
mov
(bad)
shl
sub
xchg
adc
mov
push
shl
outs
jmp
iret
mov
mov
in
jmp
or
retf
jo
pop
nop
mov
pop
setb
adc
loope
add
xchg
inc
xchg
adc
cmp
leave
scas
mov
idiv
mov
mov
dec
(bad)
int
stos
xchg
dec
cli
sbb
push
pusha
out
jbe
xchg
mov
xchg
in
int
repz
jnp
adc
xchg
xor
and
sahf
push
inc
(bad)
scas
cmp
hlt
into
push
push
imul
sbb
mov
mov
lods
loop
inc
clc
mov
mov
mov
movs
jmp
pop
dec
cmp
mov
cmc
xchg
stc
imul
add
cmp
mov
pop
fdiv
add
iret
daa
sub
adc
rep
pushf
or
repnz
mov
out
inc
arpl
push
hlt
push
ja
ins
lock
jg
xor
ins
jecxz
mov
xlat
xchg
das
mov
(bad)
push
pop
(bad)
mov
push
lods
cmps
(bad)
xchg
inc
js
jecxz
xor
mov
inc
jmp
push
cwde
inc
mov
jl
jmp
stos
ins
adc
rol
cmp
fdiv
jl
mov
xor
mov
push
stc
xor
mov
fwait
jae
shl
ja
pop
in
dec
add
hlt
bound
pop
inc
sti
mov
outs
fmul
xor
push
pop
clc
cmps
ds
push
test
movs
push
mov
jmp
push
push
push
jb
out
mov
push
adc
mov
cwde
pop
mov
sahf
repnz
jae
lods
imul
js
add
add
xchg
jbe
jmp
pop
stos
inc
jo
lahf
dec
outs
push
mov
push
ret
movs
mov
out
adc
xor
jne
cmp
fwait
inc
hlt
sub
and
xor
(bad)
xchg
lds
loop
mov
xor
mov
ss
cmp
ss
dec
ret
mov
dec
mov
js
les
sbb
pop
and
mov
push
sub
xor
add
imul
inc
(bad)
dec
mov
pop
bound
iret
push
loop
inc
pop
mov
outs
shl
xor
in
bound
pusha
fist
dec
xchg
sub
stc
adc
arpl
(bad)
or
ss
in
into
push
add
cmp
repnz
fxsave
pop
mov
inc
pop
ja
inc
add
sbb
push
pop
push
adc
xor
sub
mov
cs
xor
test
sbb
push
mov
sti
inc
retf
repz
arpl
mov
adc
in
mov
mov
(bad)
jmp
pop
mov
pop
arpl
dec
mov
xlat
adc
pop
jo
retf
in
jbe
push
and
int3
mov
out
retf
out
call
out
mov
jmp
idiv
mov
sub
aas
sbb
mov
fidiv
pop
sbb
sub
shl
xlat
into
sub
sbb
mov
js
retf
mov
mov
cs
adc
sbb
hlt
repz
and
and
fstp
stos
mov
mov
sti
fldlg2
sar
cmc
jb
inc
call
add
adc
jmp
cmp
adc
enter
mov
sbb
loope
(bad)
jecxz
sbb
pop
mov
or
call
push
ins
inc
icebp
das
fwait
jle
sar
repnz
shr
fld
sub
ds
cmp
(bad)
cmp
pop
sub
daa
cmp
xchg
jmp
aas
jle
cld
outs
clc
mov
and
pop
retf
arpl
mov
loop
iret
popf
ret
mov
xor
mov
pop
sti
jb
jae
inc
out
daa
lahf
es
jmp
aad
inc
push
cs
mov
xchg
dec
or
arpl
mov
push
xchg
scas
pop
xor
rol
add
add
scas
cmp
into
inc
mov
sbb
(bad)
lahf
and
jge
inc
shl
xchg
mov
jecxz
arpl
popa
and
idiv
fisttp
cli
jg
cmps
push
mov
and
mov
shl
mov
add
xor
xchg
pop
test
and
gs
outs
lock
inc
xor
fwait
jns
pop
mov
xor
cmps
and
mov
mov
jmp
add
push
arpl
rcl
das
jne
push
ror
(bad)
sub
push
ja
jmp
jo
lock
push
(bad)
inc
ret
shr
and
pop
adc
xor
retf
mov
inc
(bad)
xchg
call
shl
dec
gs
and
dec
or
add
in
call
mov
shr
and
mov
int3
jo
cmps
outs
sti
mov
pop
sbb
(bad)
cmc
add
sbb
jmp
cmc
mov
xchg
and
adc
(bad)
inc
mov
cmps
loop
lock
ret
pushf
pushf
fisttp
sub
and
and
and
retf
push
xchg
jp
cmps
push
imul
cs
mov
aaa
lds
mov
dec
jae
mov
inc
scas
cli
sbb
pusha
movs
dec
xchg
scas
and
aaa
call
(bad)
and
imul
loope
add
hlt
outs
xor
aaa
mov
cmps
les
call
(bad)
jecxz
das
ret
sbb
ret
data16
nop
mov
dec
mov
mov
add
dec
imul
and
inc
sub
mov
cwde
mov
lahf
ss
cmps
std
mov
push
add
clc
inc
xor
mov
mov
and
movs
add
arpl
jno
mov
jb
jnp
push
(bad)
sub
mov
xor
pop
adc
inc
dec
jno
pop
cdq
xchg
call
sbb
bound
les
fwait
int3
sti
xchg
and
xchg
test
xor
mov
add
sbb
and
or
inc
mov
mov
fidiv
add
xchg
dec
aad
xor
cmp
jmp
sub
or
popa
push
xchg
cdq
jb
push
mov
xchg
adc
ds
inc
jb
mov
and
(bad)
repz
lds
push
loope
outs
pop
aad
dec
add
cmp
and
jno
mov
(bad)
jge
fdivr
add
push
ret
repz
pushf
sub
ja
xor
and
movlps
out
add
shl
ret
cmp
dec
adc
inc
xor
arpl
and
sti
test
xchg
imul
ror
xchg
pop
adc
add
ret
and
push
je
mov
inc
push
shl
mov
rcr
stc
mov
inc
cli
es
jno
dec
xchg
aas
pop
into
int
fcmovnbe
in
xchg
push
inc
push
(bad)
xchg
inc
frstor
daa
xchg
in
inc
push
add
sbb
dec
bound
add
sbb
mov
movs
xor
sub
dec
adc
adc
inc
arpl
push
lahf
aam
popf
cmp
xchg
arpl
icebp
jecxz
xchg
pop
(bad)
div
jno
je
outs
cld
xchg
fcmovb
xchg
loop
mov
xchg
push
jmp
cmp
and
pop
pop
leave
aam
fist
pop
out
in
mov
aas
jb
bound
push
and
ds
dec
adc
ins
cmp
xchg
adc
fimul
(bad)
scas
rol
pop
and
push
or
out
addr16
pop
cmc
cs
aam
mov
xchg
test
and
clc
inc
pop
bound
ja
sbb
ret
cmps
ss
cmps
jo
jmp
add
adc
xchg
hlt
jge
jle
pop
sub
inc
bound
jae
sub
xchg
add
rcr
cmps
xchg
or
jb
data16
adc
jnp
ja
push
cs
add
movs
into
mov
jae
xchg
stos
test
pop
xor
pop
jae
inc
inc
jmp
ins
popa
inc
xchg
mov
out
pop
cmp
add
aas
mov
and
ja
jp
jmp
jne
pop
stos
sahf
idiv
fild
pop
xchg
xchg
fdivr
cmp
idiv
out
scas
adc
loop
lea
stc
pop
(bad)
ror
pop
jne
(bad)
mov
mov
cmp
daa
and
mov
pop
jbe
jg
jb
cld
push
push
sar
mov
mov
dec
jno
out
dec
ficomp
or
iret
scas
fbstp
ror
div
shr
scas
div
mov
xchg
fsubr
repz
jne
rcl
std
out
pop
pop
inc
xchg
ja
out
adc
outs
or
mov
shl
pop
add
mov
dec
pusha
mov
aad
imul
cmp
mov
jne
fisub
sbb
out
ret
push
jmp
fidivr
dec
loop
mov
test
dec
and
add
lahf
mov
neg
mov
add
sbb
xor
mov
xor
call
outs
sub
adc
and
sub
mov
out
inc
push
add
fdivr
shr
add
push
mov
add
aam
jp
adc
mov
out
jl
or
es
cwde
push
cmps
lock
call
mov
jbe
bound
dec
(bad)
mov
add
ror
xchg
xor
inc
int3
xor
adc
sbb
inc
sub
add
pop
add
mov
lea
(bad)
clc
cld
call
push
and
aam
xlat
aaa
xlat
mul
adc
das
xchg
out
mov
and
adc
xor
sbb
adc
sbb
push
push
xchg
ret
nop
movs
out
mov
add
sbb
js
call
jecxz
out
sahf
pusha
imul
mov
and
sbb
(bad)
fcomip
xor
xchg
retf
call
mov
mov
xchg
arpl
je
mov
or
mov
daa
jb
into
dec
ret
jnp
imul
adc
outs
sub
pop
in
cmp
sahf
cmps
cmp
fcmovnu
dec
inc
pop
xor
pop
and
jmp
xchg
pop
and
fadd
mov
fistp
xchg
lds
mov
loop
adc
adc
out
jecxz
push
add
push
xor
ret
adc
je
push
test
push
fisttp
dec
sbb
sub
mov
add
push
push
inc
push
xor
add
or
or
mov
(bad)
xchg
retf
shr
jo
mov
xor
fs
cmps
imul
xchg
xchg
mov
ret
inc
fsubrp
push
sub
cld
push
push
pop
loopne
pop
pop
les
ja
dec
and
jb
xchg
push
fisttp
outs
(bad)
aas
arpl
jg
push
fimul
xchg
dec
arpl
push
or
ficomp
and
iret
movs
sub
ins
xlat
scas
data16
je
xlat
fbld
inc
adc
cmp
dec
push
ins
hlt
dec
mov
inc
(bad)
stos
xlat
xchg
rcr
push
es
fsub
pop
jnp
cmp
mov
pop
and
outs
xchg
pop
ror
nop
xor
add
enter
mov
sub
inc
cmp
mov
xor
rcr
jbe
jo
in
fisttp
mov
xor
cli
mov
fcom
cmp
cs
in
mov
clc
test
jb
dec
outs
sub
aad
loope
mov
jge
bound
dec
or
retf
sbb
and
imul
mov
sub
loopne
repnz
sub
xchg
xor
mov
xchg
std
(bad)
outs
(bad)
jo
es
loop
push
test
add
addr16
hlt
adc
adc
mov
pop
and
lods
call
lods
xlat
loope
push
sbb
mov
xchg
and
inc
pop
sbb
loop
sahf
xor
push
xchg
retf
push
or
push
sbb
call
jae
adc
(bad)
(bad)
ins
sub
jbe
add
out
sub
xchg
push
push
loopne
call
div
cmp
cdq
dec
adc
test
jne
pop
or
or
xchg
ret
xchg
xchg
xor
dec
ret
int3
xlat
aaa
jb
lods
adc
sub
xor
loop
retf
add
div
pop
push
pop
xor
xor
mov
xchg
mov
cmps
push
je
mov
hlt
pop
retw
dec
or
pop
pop
bound
je
dec
retf
pop
loop
xchg
cmp
mov
dec
xlat
pop
ret
stos
cmps
cmps
daa
hlt
sbb
cmp
(bad)
mov
arpl
dec
daa
xor
cmp
mov
aaa
inc
jo
pop
in
mov
(bad)
jne
jmp
cmps
sar
out
inc
mov
or
sub
fwait
push
pop
rol
(bad)
xor
mov
mov
mov
out
jmp
cmps
cmps
aaa
xchg
neg
(bad)
repz
hlt
stos
xchg
out
xchg
fidiv
adc
stc
nop
retf
add
popa
je
inc
dec
jge
icebp
pop
cmps
dec
xchg
pop
xchg
adc
mov
jg
and
sub
ss
shl
add
xchg
add
dec
xchg
pop
mov
mov
xchg
fsubr
mov
dec
push
lds
or
test
sub
mov
adc
aam
push
add
repz
jbe
add
dec
push
cmc
and
mov
imul
ret
xchg
cmps
lods
in
pop
ret
into
inc
fdivr
aaa
cmp
pop
inc
test
dec
dec
scas
and
mov
mov
adc
mov
mov
push
inc
push
inc
cmp
ret
shl
mov
aaa
push
xchg
jecxz
xchg
mov
data16
cdq
adc
and
sub
xor
lea
test
icebp
fisttp
sub
jo
pop
xchg
icebp
push
test
xor
xor
fist
and
xchg
add
xor
cmp
add
test
mov
mov
inc
mov
fld
adc
(bad)
mov
and
sbb
jmp
mov
mov
ret
mov
pop
pop
sbb
or
xchg
jno
mov
or
inc
(bad)
icebp
adc
cmps
mov
in
sar
stc
add
pusha
sub
jg
adc
pusha
retf
xor
lahf
jb
jb
or
mov
xchg
xor
xor
jb
call
inc
mov
stc
mov
cmps
test
and
or
cmp
clc
int
arpl
push
push
jo
xlat
inc
fstp
mov
sub
ret
into
sbb
sti
cld
out
pop
ret
jno
mov
pop
dec
mov
and
push
xchg
mov
mov
mov
mov
inc
sub
sub
and
xchg
ds
inc
test
xchg
xchg
inc
fcmovu
sbb
cwde
mov
(bad)
mov
not
adc
cmps
mov
xchg
cmp
add
push
adc
dec
outs
aad
cmc
mul
ins
enter
add
inc
mov
daa
outs
imul
pop
test
hlt
fcomp
sbb
jp
sbb
mov
je
les
je
aam
and
dec
call
inc
pop
fs
push
dec
pusha
cli
add
xor
jl
inc
test
addr16
cmp
xor
push
xchg
out
pusha
mov
xchg
aaa
sar
lds
cmp
js
inc
sahf
xlat
sbb
push
repnz
out
push
in
xor
shr
gs
test
cmc
or
dec
or
cmp
add
push
test
(bad)
shr
inc
xchg
pop
cmp
sar
pop
adc
fidivr
xchg
in
push
pop
ds
adc
mov
dec
or
mov
xor
sbb
inc
xchg
fs
and
xchg
call
xor
and
test
fcmovnbe
inc
movs
jo
pop
fsubp
mov
shl
lods
retf
rcr
jo
test
mov
das
cs
push
cdq
pusha
add
mov
pop
pop
cmp
call
hlt
adc
(bad)
scas
pop
loope
shr
cli
inc
lods
in
add
out
push
repnz
or
and
lea
or
sbb
fcmovnu
jo
(bad)
push
inc
rcl
xchg
xchg
(bad)
je
mov
push
test
xor
shl
sbb
(bad)
inc
mov
(bad)
ficom
js
mov
xchg
jp
push
push
push
rol
iret
(bad)
rcl
repnz
mov
sbb
inc
(bad)
scas
adc
in
ins
enter
movs
push
xchg
add
repnz
icebp
hlt
push
sar
shl
mov
push
pop
test
mov
ret
push
mov
mov
push
pushf
sbb
mov
sbb
mov
repnz
xor
xchg
add
aaa
rcl
and
ror
adc
sbb
push
adc
nop
pop
push
(bad)
mov
push
(bad)
push
not
das
push
rol
jp
or
push
not
shl
stc
and
cmps
je
push
pop
rcl
pushf
cmp
xlat
shr
xor
push
(bad)
sbb
pop
mov
ret
adc
jg
shl
xchg
pushf
xor
(bad)
xor
neg
or
ror
push
hlt
loop
mov
ret
dec
lock
jb
push
sar
clc
ins
push
imul
sbb
add
stc
test
push
pop
push
push
div
stc
push
out
push
mov
jb
lods
pushf
sub
shl
jp
jae
push
mov
idiv
shl
sbb
pop
sbb
jbe
rol
mov
push
repnz
les
rcl
loop
bound
out
mov
cmp
xor
xor
cmp
push
mov
movs
bound
pop
cmp
jno
xchg
retf
jge
into
ds
mov
cmp
mov
les
test
inc
push
jmp
xchg
loop
popa
xor
xchg
bound
inc
icebp
data16
sar
mov
cmp
mov
mov
icebp
adc
mov
add
xor
std
test
and
arpl
cmps
xchg
and
out
mov
mov
xor
xor
mov
inc
bound
aad
lds
imul
inc
adc
(bad)
jb
(bad)
(bad)
xor
bound
mov
outs
mov
cmp
jne
sub
loop
jmp
bound
xor
jno
cmp
mov
cmp
(bad)
xor
xor
inc
jo
mov
movs
addr16
loop
mov
mov
mov
(bad)
imul
and
into
data16
jb
loop
or
outs
into
cmp
icebp
cmps
xor
repnz
fwait
mov
jb
and
imul
cmp
fldenv
mov
add
popa
push
imul
jb
mov
shl
push
jmp
pop
push
loope
outs
cmp
fidivr
or
repz
rsm
mov
cmp
add
les
icebp
ds
scas
jle
(bad)
mov
jecxz
cmps
mov
retf
bound
or
pop
cmps
add
fisubr
mov
push
adc
aas
inc
nop
std
fwait
enter
jbe
sbb
scas
fcomp
shr
cmps
and
pop
(bad)
ja
ror
outs
xchg
pop
xchg
aas
pop
push
in
test
call
push
test
dec
mov
cmps
mov
push
jmp
call
sub
cmc
jl
sahf
test
in
call
sar
add
dec
mov
call
ficomp
jmp
ror
fsubr
das
sbb
cwde
das
fwait
xchg
out
out
fldcw
pop
cs
cs
in
test
sbb
fbstp
sub
scas
push
call
xlat
(bad)
pop
test
(bad)
lods
(bad)
jmp
movs
movs
push
jnp
jns
test
sub
sahf
imul
mov
jp
sub
cli
test
and
fcomp
mov
push
jle
cmp
pop
push
pop
and
mov
(bad)
in
(bad)
fisubr
pop
pop
inc
jp
out
sub
in
jp
ins
xor
jecxz
push
xchg
call
pop
jne
cwde
adc
hlt
push
cmp
pop
xor
(bad)
cld
sbb
call
mov
aas
mov
inc
stos
push
mov
aam
mov
mov
ja
mov
xor
imul
mov
cmp
or
jbe
sahf
adc
popa
je
mov
dec
mov
out
sub
lock
lods
xor
jae
xor
adc
sar
xor
adc
lock
mov
mov
outs
and
sti
push
hlt
cmp
mov
add
icebp
jg
jg
jg
mov
mov
stc
(bad)
xor
push
xor
jg
or
jmp
icebp
cli
pushf
jg
xchg
and
js
test
mov
aad
sub
arpl
ds
mov
sub
stos
sub
xor
jg
je
call
aas
aad
pusha
jg
pop
icebp
mov
in
mov
pop
dec
jg
fist
dec
xor
addr16
adc
call
lods
icebp
jg
xor
test
fdiv
jp
inc
test
aas
das
xchg
mov
(bad)
fld
jp
clc
cs
pop
sar
icebp
ret
fst
xchg
ret
push
jg
jg
xchg
int3
jb
jmp
pop
test
int
adc
xor
outs
int
xchg
sub
call
pop
mov
stc
pop
mov
les
jg
xor
imul
stos
mov
ret
mov
mov
add
lds
mov
sbb
push
sub
jp
popf
hlt
shl
mov
jge
jle
xor
sbb
lods
sub
mov
dec
aaa
je
pop
jp
je
sbb
mov
out
dec
mov
icebp
bound
sbb
sub
xor
leave
inc
push
adc
sbb
(bad)
dec
and
and
retf
xlat
stos
mov
and
je
cmps
retf
in
hlt
sub
inc
sbb
inc
xchg
pop
ror
in
or
mov
xchg
test
jle
jmp
cmp
xchg
sahf
mov
sub
(bad)
xor
jne
xchg
cmp
test
lds
(bad)
xchg
and
sub
jle
push
mov
stc
(bad)
bound
and
push
test
rol
cmp
bound
or
jmp
shl
add
leave
ins
mov
xor
pushf
xlat
gs
dec
(bad)
iret
out
sbb
cld
test
lods
test
mov
xchg
scas
movs
repz
and
mov
jo
iret
repnz
retf
es
or
ror
inc
and
fst
adc
inc
(bad)
std
sub
xlat
loopne
lahf
xor
add
loopne
in
sub
mov
add
cs
mov
push
fs
ret
xor
add
loop
push
(bad)
and
jo
je
sbb
sbb
test
mov
in
add
(bad)
mov
nop
xchg
push
mov
add
adc
ja
in
adc
imul
ds
xchg
jl
inc
xlat
xor
push
pop
data16
pop
(bad)
jg
inc
pop
cld
aas
push
inc
and
inc
aaa
stc
(bad)
ja
inc
pop
lock
inc
and
push
les
stc
pop
adc
dec
add
pop
shr
sub
je
stos
xor
pop
in
mov
aas
push
pop
fld1
je
xchg
xlat
or
add
test
rol
fst
les
ja
daa
jl
sub
test
push
push
das
daa
pop
sahf
mov
rcl
xchg
xchg
enter
loopne
je
cmp
mov
xchg
jmp
xchg
jmp
pop
sbb
sub
out
hlt
push
mov
xlat
add
push
pop
mov
xchg
sub
xchg
aam
hlt
mov
stos
jg
sbb
mov
sbb
sbb
adc
add
(bad)
imul
aam
(bad)
(bad)
fist
cmp
and
push
je
pushf
addr16
aam
jg
push
mov
xlat
mov
push
push
adc
(bad)
lock
xchg
not
mov
or
push
lock
out
xchg
sbb
pop
pop
aad
sbb
mov
mov
xchg
xor
xor
xor
xlat
rcr
pop
stos
mov
das
sbb
ins
loopne
imul
lock
dec
or
lods
call
dec
xchg
cwde
or
and
addr16
jmp
mov
fild
addr16
mov
imul
add
sub
stos
inc
dec
stos
shl
sbb
mov
inc
(bad)
call
in
mov
push
cmps
ins
call
sub
mov
add
clc
jg
push
dec
add
call
sub
or
ins
cmp
data16
push
aas
xchg
lods
and
and
pusha
push
or
cmps
or
mov
inc
add
pop
ss
sub
and
daa
test
dec
sub
stos
int3
cmp
sub
jle
imul
stos
add
repz
stos
mov
pop
pop
outs
jl
fs
mov
int3
jge
std
inc
push
mov
fs
ins
mov
or
jl
inc
out
xor
je
pushf
imul
stos
aam
sti
or
cmp
mov
sti
inc
lea
sub
jnp
dec
das
in
cmp
stos
test
sbb
imul
jl
int3
stos
out
inc
imul
daa
popa
stos
int3
pop
imul
cmp
in
stos
pop
cmp
imul
in
dec
cmps
ins
imul
fldenv
in
jae
fs
in
and
mov
or
loope
add
(bad)
fldpi
mov
sub
sub
retf
add
mov
and
add
lock
jmp
mov
mov
adc
in
mov
in
(bad)
or
inc
xchg
out
mov
call
mov
rcl
(bad)
cwde
mov
fst
push
arpl
push
arpl
pop
mov
fwait
mov
pop
push
sub
test
pusha
mov
fld
or
sbb
sub
sub
jg
push
xor
aas
or
loop
arpl
psubb
mov
add
sub
push
or
pop
xchg
mov
jae
inc
and
fstp
cli
dec
sub
enter
and
test
xor
lds
sbb
inc
mov
sbb
ins
retf
mov
test
popa
rol
retf
das
jo
cmp
pop
imul
push
imul
adc
jmp
aam
rcr
xor
pop
das
xor
mov
imul
xor
adc
mov
pop
shr
adc
push
hlt
push
push
rol
mov
sbb
arpl
stos
adc
rcr
mov
sub
pop
jo
push
mov
js
xor
popf
or
pop
rol
cmp
push
aaa
jo
inc
inc
xor
cmp
mov
loopne
jo
fild
jae
add
out
or
sub
xchg
pop
(bad)
lock
mov
ret
xchg
or
xchg
mov
pop
mov
aaa
jo
push
xor
or
imul
leave
imul
xor
sbb
ins
push
lea
xchg
shl
dec
push
add
cwde
cmps
mov
mov
out
inc
xor
fidiv
xor
stos
shl
fcom
inc
gs
pusha
(bad)
in
scas
pusha
arpl
bound
or
xor
and
stos
mul
stos
es
call
adc
and
pushf
sbb
cs
and
out
ins
gs
mov
push
push
sbb
and
iret
in
push
retf
shl
cmps
inc
push
pusha
iret
in
jne
gs
pop
add
adc
or
and
fbld
mov
pop
call
and
lock
das
mov
(bad)
lock
lock
mov
mov
pop
xchg
mov
adc
push
in
iret
fist
pop
push
pusha
adc
lahf
xchg
and
scas
fist
mov
xor
mov
lahf
jae
ins
sub
mov
add
pusha
clc
pushf
retf
rep
das
arpl
push
mov
adc
rep
das
arpl
push
mov
pusha
xchg
enter
(bad)
int
scas
fbld
and
addr16
out
loop
cs
scas
push
js
adc
addr16
mov
test
pop
and
pusha
jo
scas
dec
push
mov
adc
(bad)
pusha
cmps
and
out
and
mov
or
pusha
outs
dec
(bad)
int3
bound
test
out
inc
and
and
arpl
bound
mov
adc
fstp
push
sbb
pop
xchg
xor
sbb
xchg
ficomp
stc
dec
call
sbb
xlat
push
in
xchg
push
movs
pop
xlat
push
in
inc
(bad)
and
xlat
push
in
movs
gs
and
xchg
sub
jbe
pop
pop
push
repnz
sub
sahf
and
sbb
in
movs
movs
(bad)
push
in
and
and
mov
sbb
cmp
jbe
adc
inc
mov
inc
push
and
cmc
inc
ins
aam
pop
mov
or
cmps
out
dec
adc
fisttp
aas
into
pop
into
aas
mov
aas
into
pop
into
aas
push
fisttp
aas
into
pop
into
aas
mov
aas
into
pop
into
aas
push
fisttp
aas
into
pop
into
aas
mov
aas
into
pop
into
aas
push
fisttp
aas
into
pop
into
aas
mov
aas
into
pop
into
aas
push
fisttp
aas
into
pop
into
aas
mov
aas
into
jecxz
sbb
adc
js
or
push
mov
lahf
dec
jg
sub
mov
cmp
mov
ret
nop
push
pushf
aas
pushf
aaa
fcomi
mov
daa
inc
dec
aad
mov
je
fisttp
loop
and
popa
push
cmp
sub
cmp
pop
pop
into
aas
ins
scas
mov
push
mov
dec
das
in
pop
or
stc
mov
je
test
ja
mov
lds
dec
push
sbb
les
test
stos
int3
dec
push
xor
push
push
shl
rcl
dec
or
xchg
repnz
jae
jle
ins
pop
ja
out
xchg
call
jecxz
sbb
sbb
in
(bad)
mov
shl
rcl
aaa
push
or
push
sti
sbb
push
fs
adc
out
cld
sti
jl
or
sbb
xchg
cld
(bad)
iret
leave
mov
sbb
jl
sti
cdq
jmp
mov
cmp
imul
fdiv
push
adc
mov
xchg
repnz
sahf
push
sbb
xchg
cdq
hlt
cld
ror
sbb
pop
jl
jl
cld
std
cdq
fistp
sub
jae
stos
cld
jmp
cdq
sahf
cmp
push
sbb
mov
sar
mov
pop
jne
xchg
std
loop
hlt
test
test
adc
push
adc
aad
fwait
push
add
push
adc
xchg
mov
cmc
pop
xor
pop
push
xor
sub
add
icebp
mov
dec
pop
fwait
call
or
pop
das
sub
mov
ret
popa
bound
cmc
xchg
test
inc
ins
jne
jne
ror
jne
add
add
dec
or
sub
dec
add
inc
sbb
sbb
xchg
mov
adc
jb
adc
push
pop
pop
ja
xchg
aam
push
push
jne
xor
push
sbb
mov
inc
push
xor
dec
jne
(bad)
(bad)
(bad)
sbb
or
push
jg
rcl
sub
push
pop
jge
dec
sbb
mov
fistp
or
add
adc
push
jnp
ins
lock
fwait
jae
push
sbb
or
jne
(bad)
xchg
mov
pop
jno
inc
addr16
pop
inc
or
sub
int3
xchg
dec
sub
mov
mov
mov
pop
and
xchg
leave
add
dec
inc
ds
and
push
mov
mov
jne
jne
xor
xor
inc
jp
call
and
call
push
call
dec
push
add
dec
xor
stc
ds
nop
daa
test
out
out
mov
or
mov
addr16
lahf
mov
imul
xchg
aaa
aad
call
push
sti
and
je
jmp
enter
retf
jge
out
lock
adc
stos
inc
ror
jmp
add
or
and
or
and
movs
call
aaa
mov
sub
gs
add
out
ret
sbb
xor
clc
and
dec
stc
loope
out
addr16
fwait
(bad)
nop
iret
shl
lds
mov
outs
sbb
push
pop
loop
mov
xlat
arpl
pop
sbb
es
adc
mov
xchg
pop
xchg
ret
adc
fdivr
addr16
and
scas
mov
mov
lock
jb
mov
movs
out
add
dec
in
addr16
ins
cdq
ds
bound
add
or
push
ins
mov
or
cli
or
das
jle
call
dec
sub
popa
sbb
test
call
lahf
jle
pusha
mov
mov
mov
push
outs
pop
xor
lea
out
out
inc
cmp
test
mov
push
imul
call
mov
pop
pop
cmp
or
mov
mov
ins
sbb
imul
out
cli
sub
fsubr
pop
push
imul
ud1
outs
cmp
leave
out
lods
sti
in
mov
aas
jp
ins
gs
dec
scas
jns
test
pop
pop
movd
add
(bad)
stos
(bad)
stos
mov
sahf
cmp
mov
clc
or
cli
or
outs
sbb
mov
or
into
retf
or
dec
dec
push
out
lods
push
mov
mov
push
mov
test
in
ins
dec
sbb
call
jns
lds
pusha
add
mov
dec
jmp
cmp
xchg
in
out
out
inc
and
imul
mov
push
cmp
mov
mov
outs
or
rol
out
or
jnp
sbb
jns
in
(bad)
(bad)
mov
sub
cmp
cmp
push
sub
mov
cmp
sub
mov
pop
mov
inc
sbb
fld
icebp
inc
je
jge
add
(bad)
push
ret
ret
stc
js
sbb
into
mov
mov
pop
cmp
les
aam
mov
mov
mov
mov
pop
inc
cmp
jl
stos
xchg
mov
cdq
and
push
pop
ret
lods
push
pop
sub
lods
and
push
or
sti
aad
clc
sub
cs
mov
shl
ret
push
dec
or
sbb
cmp
nop
clc
popf
mov
cmp
mov
pop
inc
mov
adc
mov
dec
mov
sub
inc
sub
inc
sub
hlt
(bad)
mov
stos
cmp
scas
cmps
mov
mov
pop
push
int3
lea
and
jne
hlt
loopne
push
je
inc
out
aaa
lds
nop
rcl
xchg
(bad)
mov
adc
xchg
cmc
push
movs
nop
jb
les
xchg
inc
(bad)
push
out
inc
pop
and
popa
add
inc
lds
inc
lock
addr16
jl
inc
xchg
dec
les
adc
out
xchg
add
hlt
mov
or
lods
pop
int3
movs
xor
cmps
je
mov
xchg
ret
mov
add
addr16
adc
rol
and
lods
mov
add
push
aaa
mov
adc
and
out
ret
xlat
shl
bound
std
mov
pusha
mov
pop
test
repnz
push
xchg
mov
f2xm1
hlt
jb
inc
mov
mov
hlt
push
outs
test
pop
int3
xchg
loopne
cmps
xchg
xor
inc
and
push
(bad)
fsub
xchg
popf
ror
push
xor
dec
mov
cmp
rol
mov
xchg
add
xchg
and
push
jb
movs
mov
sub
leave
xchg
adc
push
cli
sub
and
xor
ret
cld
cdq
mov
jg
sbb
xchg
in
in
ret
cwde
dec
jb
cmp
pop
sar
rcl
add
and
stos
popa
sub
test
xchg
dec
push
(bad)
sbb
xchg
xlat
add
push
jbe
mov
pop
adc
pop
mov
shr
popa
push
xchg
xor
fs
xor
shl
pop
adc
jae
mov
and
and
shl
mov
pop
push
movs
(bad)
adc
popf
outs
shl
rcl
nop
retf
js
mov
xor
xor
nop
mov
cld
rcl
jb
cwde
add
cmp
xor
push
shr
xchg
dec
and
mov
dec
call
(bad)
aas
xchg
and
shl
cmc
rcr
jo
xchg
mov
repnz
jbe
mov
loope
dec
cmp
test
pop
cs
xor
push
mov
loope
out
fstp
xchg
inc
int3
pop
sar
mov
mov
leave
in
test
mov
pop
cs
and
xchg
imul
(bad)
pop
in
inc
add
jmp
mov
cdq
in
mov
mov
xor
in
(bad)
mov
sahf
xor
loopne
out
mov
or
cmp
xlat
out
aas
and
push
push
int3
xor
into
adc
adc
lods
mov
mov
ins
addr16
cld
lea
cmp
mov
test
into
dec
sub
push
pop
cmps
sbb
mov
movs
cmp
and
mov
push
out
or
pop
xchg
rol
cmp
or
sub
push
sbb
into
xchg
add
adc
sub
sub
es
scas
movs
push
ds
out
sbb
push
dec
ins
mov
sub
pop
cs
dec
js
mov
sahf
std
mov
mov
jmp
mov
xchg
dec
mov
jbe
pop
add
pop
mov
jns
stos
add
outs
or
and
xor
dec
adc
and
pusha
loope
lock
mov
call
xchg
loope
ins
inc
lds
repz
add
(bad)
loope
mov
das
xchg
movs
das
outs
ror
outs
sbb
stc
xor
les
mov
inc
dec
pop
inc
push
mov
sti
rol
das
lds
mov
popf
ucomiss
(bad)
push
inc
push
sahf
loopne
pop
call
stos
mov
loope
ds
icebp
jle
adc
sub
mov
jl
pop
mov
test
out
xchg
sti
jmp
outs
sub
scas
push
(bad)
out
icebp
dec
cmp
call
sbb
dec
and
push
xor
xor
lock
jl
xchg
adc
mov
mov
push
loopne
outs
cmp
dec
loope
jb
mov
loope
lock
and
ins
xor
rcr
jo
inc
lahf
dec
pushaw
out
lahf
(bad)
rcr
dec
std
(bad)
xchg
loope
or
jp
repz
das
fs
ins
sbb
ins
xchg
(bad)
shl
pop
fistp
jnp
mov
mov
scas
push
rcl
les
out
dec
push
ficomp
push
icebp
cmps
xor
bt
mov
cwde
movs
les
cmp
jno
mov
dec
inc
popa
sub
or
movs
stos
clc
sahf
mov
pusha
pop
das
test
movs
fild
sub
inc
push
sub
sub
call
pop
hlt
jo
adc
mov
shr
mov
sub
sti
xor
mov
or
mov
add
fild
dec
fiadd
lock
imul
mov
mov
daa
mov
add
aas
xor
mov
jo
jmp
lea
stos
cdq
mov
and
push
aam
pop
mov
test
mov
jb
add
push
sbb
mov
xor
pop
call
and
cmp
dec
into
mov
test
test
mov
out
shl
out
aam
or
mov
jl
mov
add
xchg
sbb
cmps
das
cmp
mov
mov
cmp
add
jp
jne
pop
jne
xlat
in
inc
jmp
jmp
lahf
rcl
(bad)
es
sbb
loopne
or
sub
div
int
fwait
mov
push
and
or
hlt
inc
out
pop
cdq
mov
xchg
cmp
add
repz
(bad)
mov
pop
mov
or
push
pushf
lea
ret
aas
in
push
jge
mov
jmp
shl
das
lds
fsub
outs
dec
outs
pop
in
pusha
or
lock
xor
jo
inc
dec
hlt
inc
loopne
ret
add
or
inc
scas
jmp
and
ss
cmp
das
and
mov
cs
fidivr
popa
mov
in
pop
das
jb
fisttp
sub
pop
push
iret
xchg
and
mov
mov
popa
or
and
inc
(bad)
jg
add
into
sub
outs
ret
fnstsw
dec
pop
iret
pop
and
pop
(bad)
fisttp
cmp
jno
pusha
xchg
fild
(bad)
neg
rcl
jle
dec
das
iret
rcr
mov
(bad)
pusha
arpl
jbe
shrd
or
cmp
scas
inc
outs
or
aad
(bad)
fs
fwait
adc
call
(bad)
fld
int3
mov
aas
xor
scas
outs
jmp
mov
xor
scas
cs
or
dec
inc
jg
xor
out
sbb
fisttp
loopne
and
fldcw
mov
pop
jnp
push
jmp
pop
std
dec
jne
mov
movs
fdiv
das
sbb
jge
lods
sbb
aas
sbb
push
mov
stc
and
sbb
lods
xor
dec
outs
test
sti
cmp
pop
pop
push
mov
mov
xor
sbb
push
fcomp
sub
fwait
or
inc
cld
dec
add
sbb
inc
cmp
cmp
sub
in
xchg
sub
stos
push
adc
sar
stos
jp
push
cs
mov
adc
fwait
in
pop
cwde
fs
dec
rcr
push
(bad)
jmp
mov
in
dec
mov
jnp
clc
mov
js
jg
mov
cmp
mov
aad
imul
rcl
sbb
mov
and
cdq
dec
jmp
or
daa
fsubr
int
push
aad
mov
sub
mov
inc
ficomp
(bad)
xor
ret
popa
aam
mov
cli
dec
std
ss
call
sti
sub
mov
mov
stos
add
aam
xchg
cmp
jnp
fwait
mov
fisub
(bad)
daa
test
(bad)
jnp
jnp
xchg
cwde
push
pop
adc
xor
sbb
jg
jge
pop
mov
(bad)
sbb
call
dec
outs
push
outs
mov
push
stos
cs
jno
rcl
repnz
jno
mov
lock
mov
push
jnp
pusha
xor
lock
or
jno
jo
outs
mov
mov
jo
shl
inc
sub
lahf
dec
shr
jecxz
mov
and
outs
je
jo
repnz
hlt
adc
jo
push
div
mov
in
jecxz
shl
cmp
arpl
cmps
jo
mov
into
mov
sub
lahf
outs
js
inc
mov
enter
sahf
clc
cwde
mov
dec
sub
fucom
lods
out
(bad)
outs
push
adc
dec
pop
outs
push
mov
xor
imul
outs
jne
(bad)
out
neg
push
cmp
or
sahf
jb
shr
mov
xlat
loopne
push
dec
lock
inc
mov
das
sahf
adc
rcr
call
shr
cli
xor
push
sub
jge
(bad)
idiv
imul
(bad)
ficom
pop
adc
daa
mov
mov
mov
mov
pusha
sbb
icebp
xor
cmc
jmp
adc
jp
mov
pop
in
test
mov
jno
jp
popa
pop
adc
test
xchg
call
cmp
and
repnz
jae
xor
xor
repz
call
cmp
pop
imul
jmp
xor
stc
idiv
xchg
adc
push
xchg
dec
sahf
test
int3
dec
pop
mov
out
aaa
mov
icebp
sbb
pop
xor
inc
aas
stc
test
rcr
jae
or
addps
test
test
js
inc
xchg
mov
dec
inc
sub
jnp
mov
leave
int
hlt
(bad)
adc
inc
xor
daa
or
fdiv
jne
push
sldt
(bad)
mov
mov
dec
ins
out
cmp
jl
sub
mov
jmp
pop
push
loope
inc
out
cs
leave
and
pop
into
or
mov
add
mov
mov
add
imul
(bad)
mov
(bad)
fisub
ds
mov
jmp
push
jl
lods
jle
xchg
mov
jp
(bad)
bnd
(bad)
ins
movs
sub
pop
xlat
into
repnz
jmp
test
mov
ror
shr
xlat
mov
jns
lock
sbb
popa
cs
fidivr
inc
aam
aas
xor
mov
sahf
push
pusha
sbb
ficom
int
mov
fimul
xchg
xor
inc
stos
mov
mov
movs
enter
jnp
leave
mov
jnp
jnp
dec
xchg
stos
mul
dec
movs
stos
jns
dec
fdiv
outs
pop
and
jae
fdiv
jg
dec
sbb
mov
mov
dec
jmp
es
call
mov
rcl
rcl
lahf
les
mov
push
mov
cmp
push
jo
pop
pop
jo
mov
cmp
in
call
inc
rcr
mov
inc
loopne
jge
iret
fmul
out
rcl
mov
mov
iret
and
in
loop
dec
mov
mov
dec
daa
call
in
sahf
push
mov
sti
scas
into
into
dec
mov
scas
(bad)
mov
fldenv
jl
inc
add
lods
adc
pop
and
(bad)
loop
mov
lea
repz
push
adc
aam
jae
scas
and
xchg
lea
cmp
ja
ins
cmp
out
in
lds
dec
sub
ins
or
sub
mov
test
dec
sub
imul
loopne
and
and
or
sub
scas
jmp
and
pusha
and
in
mov
test
dec
sub
push
push
sub
in
out
and
sbb
sub
dec
sub
and
or
and
inc
and
and
and
add
sub
sub
in
mov
stos
sub
punpckhbw
and
test
movs
and
pop
or
cs
cs
sub
imul
sub
and
add
daa
inc
and
and
arpl
stos
in
mov
stos
cs
das
das
push
dec
sub
sub
sub
or
sub
inc
and
mov
add
and
movs
loop
fsubr
push
dec
sub
and
add
jp
pop
es
ss
mov
or
imul
xor
sahf
push
push
imul
xchg
pop
pusha
loope
jmp
imul
fs
mov
daa
call
sbb
mov
xchg
iret
or
push
out
dec
cmp
data16
push
dec
shr
mov
dec
pop
inc
inc
sbb
push
pop
lock
sti
push
adc
or
sub
sub
or
pushf
les
pop
ds
rcl
idiv
adc
sti
mov
sahf
fxch
imul
es
std
jecxz
and
outs
out
push
push
rol
push
push
(bad)
xor
mov
ret
inc
xchg
scas
neg
out
mov
ret
dec
call
daa
ins
xor
sub
pop
mov
pusha
dec
pop
in
xor
xchg
out
jmp
or
ror
ror
push
mov
repz
jae
stc
div
xchg
jnp
mov
sub
fdivr
sub
data16
cmps
mov
stos
push
in
mov
cmp
cmp
cmp
pop
adc
sub
cmp
dec
outs
or
and
stos
xor
sub
fsubr
popf
cmp
cdq
call
sub
(bad)
and
sti
jmp
js
(bad)
xchg
rol
retf
aam
or
mov
call
mov
retf
sub
xchg
(bad)
sbb
pop
jl
dec
mov
cmp
push
imul
or
jg
ins
adc
out
xor
mov
mov
pop
and
push
or
fist
push
cmps
pop
ja
ins
lea
inc
aam
js
sar
xlat
xlat
sbb
test
sbb
fldcw
cwde
scas
sbb
jbe
cmps
les
push
mov
add
mov
or
imul
stos
es
js
sbb
not
cmp
and
addr16
sar
sub
ja
adc
sbb
leave
dec
jp
mov
or
lea
xchg
shl
pop
sub
fsubr
in
push
aam
cmovns
mov
fs
lahf
fldcw
mov
mov
test
mov
mov
retf
leave
push
jns
dec
adc
int
(bad)
mov
jg
lods
adc
pop
adc
lahf
jmp
aam
xor
aad
loop
fsub
mov
sbb
inc
in
push
sbb
push
cmp
mov
out
daa
or
inc
shr
repnz
ror
xchg
(bad)
push
imul
inc
(bad)
sbb
sbb
(bad)
sub
inc
cmp
movs
mov
bts
xchg
ins
adc
push
popf
inc
dec
retf
daa
and
mov
sub
mov
ficom
add
movs
loop
(bad)
jle
inc
aad
cmp
sahf
shr
outs
cmp
icebp
xor
test
into
retfw
ins
inc
xlat
fimul
test
inc
stc
cdq
xlat
and
xchg
cld
sbb
aam
cmp
sbb
sub
call
sbb
inc
mov
push
shl
inc
outs
loop
xlat
sar
jl
mov
repz
and
js
or
push
fs
das
imul
arpl
and
mov
xchg
mov
retf
xchg
ret
mov
push
je
push
and
xor
loop
dec
rcl
adc
mov
ret
xor
pop
inc
cmp
jp
push
out
hlt
add
xchg
mov
mov
addr16
dec
je
mov
pop
pop
jl
and
inc
adc
es
jae
test
xchg
(bad)
iret
and
xor
adc
mov
adc
daa
xor
aas
mov
inc
imul
into
xlat
jmp
lds
add
iret
dec
add
xor
xchg
inc
div
fisub
or
leave
xchg
xor
lods
inc
rol
sub
enter
test
imul
pop
loop
sar
lock
ja
xor
in
mov
sbb
out
mov
shl
xor
sbb
repnz
mov
sub
arpl
push
push
mov
jno
jb
std
push
dec
or
mov
loop
test
push
inc
inc
inc
scas
adc
dec
fst
repz
xchg
add
aaa
jb
out
mov
add
and
and
jl
push
push
mov
call
pop
ret
push
push
mov
mov
push
mov
xor
xor
test
jbe
push
mov
call
test
jl
inc
cmp
jb
pop
pop
pop
ret
push
push
mov
call
push
mov
call
pop
ret
push
mov
sub
mov
xor
mov
mov
test
push
mov
push
mov
mov
jne
mov
jmp
test
je
mov
and
push
lea
push
push
push
call
mov
test
mov
jbe
mov
xor
rep
xor
cmp
jl
mov
mov
mov
lea
movs
movs
lea
push
lea
push
movs
lea
push
mov
mov
mov
push
movs
mov
push
call
mov
test
mov
jl
xor
xor
mov
cmp
jb
mov
cmp
jae
mov
movsx
mov
mov
inc
add
jmp
mov
test
je
push
call
mov
push
call
mov
test
pop
je
mov
push
call
mov
mov
pop
xor
pop
call
leave
ret
push
mov
call
mov
mov
mov
lea
movs
xor
test
setne
movs
movs
mov
mov
test
mov
movs
mov
jne
mov
jmp
xor
mov
mov
mov
lea
push
push
push
mov
call
cmp
mov
jge
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
cmp
jne
and
mov
lea
push
push
push
mov
call
mov
test
mov
jge
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
lea
push
push
lea
push
push
call
mov
test
mov
mov
jge
test
je
mov
push
call
mov
or
test
jmp
test
mov
je
mov
push
call
jmp
mov
mov
and
xor
push
pop
mul
seto
mov
neg
or
push
call
and
pop
mov
jmp
mov
call
mov
ret
mov
mov
test
jne
mov
or
test
je
mov
push
call
mov
jmp
mov
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
xor
cmp
jne
push
mov
call
mov
or
pop
cmp
jmp
mov
mov
mov
cmp
jae
mov
mov
imul
mov
add
mov
cmp
jbe
cmp
je
mov
cmp
jne
mov
add
and
lea
push
and
mov
add
mov
xor
push
push
push
mov
mov
push
add
movzx
push
push
push
movzx
push
push
movzx
push
push
xor
push
call
add
jmp
cmp
jne
or
mov
mov
mov
mov
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
lea
and
mov
add
mov
xor
push
push
push
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
push
call
add
jmp
cmp
jne
push
lea
push
lea
push
push
xor
mov
mov
mov
mov
mov
call
cmp
je
mov
jmp
cmp
je
mov
lea
movs
movs
movs
movs
mov
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
push
call
push
and
mov
call
pop
pop
jmp
lea
mov
and
lea
movs
movs
movs
movs
mov
mov
imul
mov
mov
mov
mov
add
mov
movzx
push
call
mov
push
lea
mov
dec
not
and
mov
lea
and
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
jmp
movzx
cmp
jne
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
jmp
mov
jmp
cmp
jne
inc
mov
add
cmp
jne
mov
lea
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
push
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
push
mov
add
call
add
add
mov
inc
mov
mov
jmp
cmp
jne
push
mov
call
test
mov
jge
xor
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
push
call
push
and
mov
call
mov
or
pop
pop
test
jmp
mov
mov
push
and
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
mov
xor
cmp
jne
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
jmp
push
push
push
call
push
push
push
push
push
call
mov
add
cmp
jge
push
call
pop
mov
push
mov
call
mov
or
pop
cmp
je
mov
push
call
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
mov
mov
lea
push
push
push
call
cmp
mov
jl
mov
mov
lea
push
push
push
call
test
jl
mov
lea
push
push
mov
mov
push
call
test
jl
mov
mov
lea
push
mov
add
push
push
call
mov
mov
push
call
mov
mov
push
call
push
call
cmp
pop
je
push
mov
call
jmp
xor
mov
mov
mov
push
call
mov
mov
cmp
je
add
push
push
call
push
call
cmp
pop
je
push
push
mov
call
jmp
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
cmp
mov
jbe
mov
jmp
imul
push
call
xor
cmp
setne
mov
cmp
jne
jmp
mov
imul
push
push
push
call
mov
add
call
mov
call
jmp
mov
cmp
jne
xor
jmp
mov
lea
push
lea
push
push
push
call
cmp
jl
push
lea
push
mov
call
or
push
lea
push
mov
mov
mov
mov
mov
mov
call
mov
or
push
push
lea
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jge
mov
mov
push
call
mov
jmp
mov
lea
push
xor
push
mov
mov
xor
push
mov
mov
mov
mov
mov
push
call
cmp
mov
jge
mov
mov
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
mov
jle
xor
push
call
pop
mov
cmp
mov
je
push
mov
call
jmp
xor
or
mov
inc
mov
mov
add
cmp
jl
mov
cmp
je
cmp
jle
mov
push
pop
add
sub
mov
mov
jmp
mov
mov
mov
cmp
mov
je
jmp
mov
lea
push
mov
add
mov
call
mov
mov
push
push
mov
call
cmp
jne
mov
call
mov
cmp
je
mov
push
call
add
dec
jne
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
je
xor
cmp
je
inc
cmp
mov
jl
mov
mov
mov
mov
mov
cmp
je
mov
cmp
mov
je
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
mov
xor
inc
cmp
jne
mov
mov
lea
push
push
call
test
je
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
push
push
lea
call
mov
mov
push
push
push
add
call
push
push
movzx
push
push
lea
call
mov
push
lea
call
movzx
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
lea
jmp
push
push
lea
call
push
mov
call
mov
mov
mov
mov
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
mov
call
push
call
push
call
mov
mov
lea
push
push
call
jmp
sub
je
sub
je
dec
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
mov
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
jmp
push
push
lea
call
mov
mov
mov
push
push
push
push
call
push
push
push
push
push
call
jmp
cmp
jne
push
push
lea
call
mov
push
mov
call
mov
mov
mov
shr
lea
push
push
push
push
call
push
call
add
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
lea
mov
call
or
lea
push
call
cmp
jne
inc
mov
add
add
cmp
jle
cmp
jle
mov
xor
call
ret
lea
cmp
jne
mov
mov
push
push
push
call
cmp
jl
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
mov
je
mov
imul
mov
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
cmp
mov
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
lea
push
mov
call
lea
movzx
cmp
mov
mov
jl
cmp
jle
cmp
je
cmp
jne
or
push
lea
call
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
lea
push
mov
mov
push
mov
mov
push
call
push
mov
call
or
lea
push
call
inc
add
cmp
jne
inc
mov
add
cmp
jl
mov
cmp
mov
je
lea
push
lea
call
mov
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
push
mov
push
call
test
jne
inc
xor
inc
cmp
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
mov
mov
push
call
cmp
jne
cmp
jle
mov
mov
push
push
push
push
call
mov
cmp
mov
jge
mov
mov
call
mov
jmp
mov
cmp
jne
or
jmp
push
mov
call
mov
push
lea
call
xor
cmp
mov
jne
mov
cmp
je
mov
xor
cmp
setne
cmp
jne
call
mov
xor
cmp
setne
cmp
je
push
call
mov
call
mov
push
mov
call
mov
mov
cmp
je
push
mov
call
push
push
call
mov
imul
push
push
push
mov
call
add
or
cmp
je
push
push
call
xor
call
ret
push
mov
mov
test
je
mov
test
je
push
call
push
mov
test
je
mov
call
push
call
pop
and
pop
cmp
je
mov
call
mov
test
je
and
mov
push
call
mov
test
je
and
mov
push
call
pop
ret
push
mov
sub
push
push
mov
mov
xor
cmp
push
jne
jmp
mov
cmp
je
mov
call
cmp
mov
je
push
call
neg
sbb
inc
mov
je
call
push
call
mov
lea
push
push
call
lea
push
mov
push
call
mov
sub
mov
cdq
push
sub
sar
push
push
push
mov
sub
cdq
sub
sar
push
call
mov
push
call
mov
mov
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
push
push
push
call
cmp
mov
jne
mov
cmp
jge
cmp
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
push
call
cmp
jl
mov
mov
lea
push
push
call
mov
mov
push
call
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
mov
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
push
call
mov
call
cmp
mov
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
mov
call
mov
or
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
mov
push
mov
call
add
mov
mov
call
ret
push
mov
call
mov
cmp
jne
push
call
pop
mov
mov
and
test
je
push
call
jmp
xor
or
mov
mov
call
call
ret
push
mov
mov
test
push
je
mov
mov
push
push
call
mov
mov
mov
call
and
mov
test
je
mov
mov
call
mov
push
mov
mov
mov
movzx
lea
mov
call
mov
mov
mov
push
push
call
mov
test
je
mov
mov
call
pop
pop
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
cmp
je
lea
push
push
mov
mov
push
call
test
jl
mov
cmp
je
push
mov
push
call
mov
mov
push
call
mov
mov
push
call
jmp
mov
mov
cmp
je
mov
cmp
je
mov
push
push
call
mov
mov
cmp
jne
lea
mov
call
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
cmp
je
push
call
push
call
pop
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
cmp
je
cmp
mov
jle
xor
mov
mov
mov
cmp
mov
je
lea
push
mov
mov
call
cmp
mov
mov
jne
mov
mov
call
mov
mov
cmp
je
mov
push
call
inc
mov
add
cmp
jl
push
call
mov
cmp
je
push
call
mov
cmp
je
mov
push
call
mov
call
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
or
call
call
ret
push
mov
push
push
push
push
xor
cmp
mov
mov
je
push
push
call
cmp
je
cmp
jle
mov
lea
push
call
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
cmp
jne
mov
cmp
jl
jmp
mov
imul
push
mov
call
jmp
cmp
jle
and
mov
mov
lea
cmp
je
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
test
jne
add
inc
cmp
jl
mov
and
jmp
call
xor
cmp
jle
mov
mov
mov
mov
jmp
mov
lea
push
mov
mov
call
mov
cmp
je
mov
test
jne
inc
add
cmp
jl
jmp
mov
imul
push
mov
call
pop
pop
pop
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
xor
mov
xor
mov
mov
cmp
setne
cmp
jne
call
xor
cmp
setne
cmp
je
lea
push
call
mov
push
pop
lea
push
push
mov
mov
call
cmp
jne
mov
lea
push
call
lea
push
call
jmp
mov
lea
push
push
mov
call
test
je
movzx
mov
mov
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
cmp
jne
push
mov
call
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
push
lea
mov
call
lea
push
mov
call
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
jmp
sub
je
dec
je
dec
dec
je
dec
je
dec
jne
lea
push
push
mov
call
test
je
movzx
push
movzx
push
movzx
push
movzx
push
movzx
push
movsx
push
lea
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
push
fstp
movzx
push
movzx
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
movzx
fstp
movsx
push
push
push
push
push
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
cmp
fild
jbe
dec
fdiv
jne
cmp
jne
fchs
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
add
mov
call
mov
lea
push
call
lea
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
mov
jle
mov
mov
imul
mov
test
je
mov
test
mov
je
mov
shl
mov
lea
push
mov
mov
call
mov
push
lea
push
push
mov
call
add
lea
push
call
and
cmp
je
mov
inc
push
lea
push
mov
call
push
lea
mov
call
lea
push
mov
call
lea
jmp
mov
add
mov
lea
mov
xor
inc
mov
mov
mov
mov
test
je
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
mov
push
call
and
cmp
je
push
call
cmp
je
push
call
cmp
je
push
call
inc
add
or
lea
push
call
cmp
jne
inc
mov
cmp
jl
and
xor
call
ret
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
cmp
jne
mov
mov
cmp
je
mov
call
push
call
pop
mov
call
push
lea
push
mov
call
push
mov
push
call
push
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
lea
push
call
mov
mov
jmp
mov
cmp
mov
mov
je
mov
jmp
mov
mov
cmp
je
cmp
je
mov
mov
push
push
call
push
call
mov
cmp
pop
je
mov
mov
mov
cmp
jne
cmp
je
mov
cmp
je
add
cmp
je
mov
mov
push
push
mov
call
mov
cmp
je
cmp
je
dec
lea
mov
call
mov
sub
call
or
mov
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
test
jne
xor
jmp
mov
test
jne
xor
jmp
mov
push
push
push
push
call
ret
mov
mov
test
je
push
call
test
je
xor
inc
ret
xor
ret
push
mov
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
xor
pop
ret
test
je
mov
mov
call
test
jne
mov
test
je
test
je
xor
inc
pop
ret
mov
test
jne
ret
mov
test
je
jmp
push
push
call
and
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
call
ret
push
mov
push
push
call
test
je
push
push
push
push
call
mov
call
pop
ret
push
push
mov
xor
test
je
push
mov
push
push
call
and
cmp
jne
cmp
je
push
mov
call
push
call
mov
push
push
call
test
je
pop
pop
mov
pop
ret
push
push
mov
test
push
je
mov
mov
push
push
call
push
call
mov
jmp
push
call
push
call
push
push
call
mov
test
je
cmp
je
mov
push
push
call
push
call
test
je
mov
push
push
call
push
call
mov
push
push
call
test
je
push
mov
test
je
push
call
test
je
test
je
mov
call
test
jne
push
push
push
jmp
mov
push
call
push
call
mov
test
jne
mov
jmp
push
push
push
call
mov
pop
mov
pop
pop
pop
ret
push
mov
test
je
push
mov
xor
push
mov
test
jne
mov
test
jne
push
call
push
call
test
jne
test
je
test
jne
mov
mov
call
call
push
call
cmp
je
push
call
test
je
pop
pop
mov
pop
jmp
pop
pop
pop
ret
push
mov
test
je
push
call
test
je
push
mov
cmp
je
mov
mov
test
jne
push
call
push
call
test
jne
jmp
mov
xor
test
je
cmp
jne
push
call
test
je
test
je
test
je
cmp
je
push
mov
call
test
jne
mov
push
mov
call
pop
pop
ret
push
mov
push
mov
call
test
jne
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
mov
mov
call
cmp
je
push
push
push
call
mov
test
je
cmp
jne
xor
pop
pop
pop
ret
mov
jmp
push
mov
mov
test
je
push
call
pop
ret
push
push
call
mov
neg
sbb
and
add
test
je
xor
cmp
push
setne
push
push
push
call
pop
ret
push
mov
test
push
je
push
push
call
test
jne
push
push
call
jmp
push
push
push
call
mov
test
je
mov
push
push
call
pop
pop
push
push
push
call
mov
test
je
cmp
jne
pop
pop
ret
mov
push
push
push
push
call
mov
shr
cmp
jne
movzx
jmp
xor
inc
ret
push
mov
push
and
push
mov
push
mov
push
mov
call
test
je
test
je
push
push
call
test
jne
push
call
pop
mov
mov
cmp
push
jne
test
je
test
je
push
call
push
push
call
mov
test
je
cmp
je
push
call
test
pop
je
push
jmp
push
push
jmp
test
je
push
call
test
pop
jne
test
je
cmp
je
push
push
call
test
jne
push
call
push
push
call
mov
push
call
test
pop
je
mov
call
test
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
push
mov
mov
call
test
je
mov
test
push
push
mov
je
mov
lea
lea
push
mov
call
mov
mov
test
je
mov
cmp
je
mov
cmp
je
cmp
jne
xor
pop
pop
pop
ret
push
mov
push
push
push
mov
test
jne
call
mov
and
test
mov
je
mov
test
je
mov
jmp
mov
test
je
push
call
push
push
call
test
je
push
push
call
mov
jmp
inc
cmp
je
cmp
jg
push
push
call
test
pop
pop
jne
push
mov
call
mov
test
jne
mov
call
mov
test
je
test
mov
mov
je
xor
test
je
cmp
je
lea
push
lea
call
cmp
mov
jne
jmp
mov
jmp
lea
push
lea
call
mov
mov
cmp
je
test
je
test
je
cmp
jne
mov
mov
lea
push
lea
call
mov
push
push
call
test
pop
pop
je
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
jmp
cmp
je
mov
mov
call
test
je
cmp
jne
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
push
push
push
push
call
mov
test
jne
mov
call
mov
test
je
mov
test
mov
je
lea
push
lea
call
mov
mov
test
je
cmp
je
cmp
je
call
cmp
je
cmp
jne
jmp
mov
xor
push
push
push
call
mov
xor
cmp
je
push
call
test
pop
je
mov
push
push
call
mov
cmp
je
cmp
je
mov
cmp
je
mov
jmp
mov
cmp
je
push
call
test
je
mov
jmp
cmp
je
mov
mov
call
test
je
cmp
je
cmp
jne
mov
inc
cmp
jl
xor
pop
pop
pop
leave
ret
call
int3
push
mov
call
mov
test
jne
and
jmp
mov
mov
mov
mov
mov
call
push
mov
call
mov
cmp
mov
jb
cmp
jbe
add
cmp
ja
test
je
mov
mov
cmp
jne
push
call
push
call
cmp
je
push
call
push
call
mov
test
jne
test
je
mov
test
je
cmp
je
mov
push
mov
push
call
test
jne
inc
jmp
cmp
je
cmp
je
cmp
jne
test
je
mov
test
je
mov
movzx
cmp
jne
test
jne
cmp
jne
test
je
xor
jmp
mov
push
xor
mov
call
and
mov
mov
sub
mov
je
dec
dec
je
sub
jne
cmp
jne
push
call
test
jge
cmp
je
push
push
call
cmp
jne
test
jne
movzx
cmp
jne
test
jne
cmp
je
push
push
push
call
test
je
mov
test
je
push
mov
call
jmp
push
push
call
movzx
cmp
jg
je
cmp
je
cmp
je
cmp
je
mov
test
jne
push
push
call
test
mov
je
mov
call
push
call
cmp
je
call
push
call
push
call
pop
push
mov
call
test
je
mov
call
push
call
push
push
call
pop
pop
push
call
test
je
call
push
call
push
push
push
call
mov
call
ret
test
jne
push
call
mov
xor
test
setl
mov
push
push
call
test
je
cmp
je
mov
mov
push
mov
call
jmp
mov
test
je
push
call
jmp
push
push
mov
call
mov
test
je
mov
and
push
call
push
push
call
pop
pop
jmp
cmp
jl
cmp
jle
cmp
jle
cmp
jne
test
jne
push
call
test
pop
je
mov
mov
call
jmp
push
call
xor
cmp
mov
jne
jmp
xor
push
push
call
mov
cmp
je
mov
call
test
jne
push
call
jmp
cmp
je
push
push
push
push
push
push
mov
call
add
or
jmp
mov
call
mov
ret
mov
push
push
call
test
jne
cmp
mov
push
je
call
jmp
call
mov
test
je
cmp
je
mov
push
call
cmp
je
mov
mov
push
call
jmp
mov
test
je
push
call
jmp
push
mov
push
call
mov
test
je
mov
mov
xor
push
mov
call
cmp
je
push
push
push
push
call
mov
jmp
push
mov
call
mov
mov
call
mov
and
test
mov
mov
jne
test
je
call
mov
and
mov
neg
sbb
not
and
and
mov
mov
mov
mov
call
ret
push
call
pop
ret
push
push
call
pop
pop
ret
mov
xor
ret
push
mov
mov
push
mov
cmp
jbe
mov
test
jne
call
add
cmp
jb
mov
test
push
mov
jne
mov
call
jmp
mov
push
call
test
je
mov
mov
pop
pop
ret
mov
xor
ret
cmp
push
push
mov
ja
mov
cmp
jbe
call
mov
xor
cmp
jb
ja
cmp
jbe
mov
push
mov
call
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
pop
pop
ret
push
push
mov
test
mov
jne
xor
jmp
cmp
jne
call
mov
mov
cmp
ja
lea
cmp
ja
cmp
jae
sub
mov
mov
mov
push
add
push
push
mov
call
add
mov
pop
pop
ret
push
push
mov
test
mov
je
cmp
jne
call
mov
lea
cmp
jb
cmp
jbe
mov
push
mov
call
mov
lea
cmp
ja
mov
mov
push
push
add
push
mov
call
add
mov
cmp
jbe
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
add
mov
adc
jmp
cmp
jne
cmp
jl
jg
cmp
jbe
push
push
push
call
mov
xor
add
adc
cmp
jg
jl
cmp
jb
cmp
jbe
mov
push
mov
call
mov
pop
mov
xor
pop
pop
ret
push
mov
mov
push
xor
cmp
mov
mov
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
mov
jmp
push
mov
cmp
push
mov
jne
xor
cmp
sbb
neg
jmp
cmp
jne
mov
add
mov
cmp
jbe
mov
xor
jmp
push
mov
test
je
mov
test
je
cmp
push
mov
jne
mov
lea
cmp
jb
cmp
jb
cmp
jbe
mov
push
mov
call
mov
mov
add
cmp
mov
jne
mov
mov
add
cmp
jae
mov
mov
add
mov
jmp
call
cmp
jne
mov
sub
mov
mov
add
cmp
jae
mov
mov
add
mov
sub
add
mov
sub
pop
jmp
xor
pop
pop
pop
ret
mov
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
call
or
mov
mov
mov
mov
mov
call
call
ret
push
mov
push
push
push
push
call
mov
add
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
call
add
lea
push
mov
call
mov
xor
cmp
sete
xor
call
leave
ret
push
xor
cmp
je
xor
cmp
pop
setne
ret
push
push
call
push
mov
call
mov
cmp
je
mov
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
cmp
je
push
jmp
push
push
call
cmp
mov
je
xor
inc
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
mov
mov
xor
jmp
call
test
je
jmp
test
push
push
jne
mov
xor
cmp
jle
cmp
jle
mov
push
call
cmp
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
push
push
call
jmp
test
je
mov
jmp
push
call
test
je
lea
push
push
call
jmp
lea
push
push
call
test
je
push
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
mov
push
push
call
mov
xor
cmp
je
cmp
jne
cmp
jb
push
lea
push
push
push
push
push
call
mov
jmp
cmp
push
jne
mov
xor
cmp
je
cmp
jb
push
lea
push
push
push
call
test
je
mov
mov
push
mov
call
push
mov
call
lea
lea
movs
movs
movs
movs
xor
inc
cmp
mov
mov
jb
push
add
push
push
push
push
push
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
cmp
push
push
mov
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
jbe
mov
jmp
cmp
mov
jbe
mov
mov
mov
mov
cmp
jae
mov
add
add
inc
mov
mov
add
cmp
jb
cmp
jae
mov
mov
sub
shl
add
sub
lea
mov
add
sub
dec
jne
cmp
mov
jne
lea
mov
cmp
jne
lea
mov
lea
push
call
mov
add
cmp
ja
mov
push
pop
jmp
cmp
jne
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
cmp
mov
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
push
push
push
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
movzx
test
je
test
je
test
je
push
call
mov
mov
mov
add
jmp
mov
jmp
mov
and
mov
mov
sub
mov
push
movs
push
movs
push
movs
push
push
movs
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
push
mov
push
call
jmp
push
mov
push
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
movzx
test
je
test
jne
mov
mov
and
jmp
cmp
jne
push
call
mov
mov
mov
add
jmp
cmp
jne
mov
jmp
push
call
lea
mov
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
mov
test
jl
mov
mov
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jge
mov
mov
jmp
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
mov
jmp
cmp
je
mov
jmp
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
lea
push
call
mov
pop
pop
pop
leave
ret
lea
in
das
inc
add
xor
(bad)
xor
xor
inc
add
inc
add
xor
mov
xor
push
xor
mov
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
in
push
push
xor
cmp
push
push
jbe
mov
mov
lea
xor
push
push
call
test
jne
mov
mov
mov
mov
add
cmp
jb
cmp
je
inc
cmp
jb
xor
pop
pop
pop
leave
ret
mov
jmp
push
mov
call
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
call
mov
not
and
or
cmp
jne
xor
jmp
push
push
push
call
mov
xor
cmp
je
or
push
push
push
push
push
push
push
call
xor
inc
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
push
call
ret
ret
cmp
mov
je
jmp
jmp
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
push
push
push
push
call
jmp
push
push
push
push
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
push
call
xor
pop
ret
push
mov
push
push
push
mov
push
push
call
mov
test
je
push
push
call
mov
test
movzx
mov
je
cmp
jb
mov
or
or
push
push
push
push
mov
mov
call
test
jne
or
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
push
mov
mov
mov
mov
cmp
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
and
push
mov
mov
lea
push
push
mov
push
push
call
test
jne
push
mov
push
mov
push
call
mov
mov
pop
leave
ret
push
mov
call
mov
mov
mov
pop
ret
mov
mov
mov
ret
ret
push
mov
call
cmp
jne
and
push
push
mov
call
push
push
call
pop
ret
mov
ret
push
mov
push
push
push
push
push
call
pop
ret
mov
test
jne
mov
jmp
mov
xor
ret
mov
test
jne
mov
jmp
and
mov
ret
lea
cmp
jne
push
push
push
push
call
test
jl
xor
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
push
push
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
push
mov
push
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
push
mov
push
push
call
ret
mov
mov
push
push
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
xor
ret
xor
inc
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
mov
and
ret
xor
ret
mov
test
je
cmp
je
cmp
je
xor
inc
ret
xor
ret
mov
test
jne
call
and
xor
inc
ret
mov
test
jne
call
and
xor
inc
ret
mov
ret
mov
ret
mov
mov
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
movzx
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
push
call
ret
push
push
call
ret
push
push
call
ret
push
push
push
push
push
push
call
dec
dec
ret
push
mov
mov
cmp
je
mov
cmp
je
cmp
je
call
mov
mov
cmp
je
push
call
pop
ret
push
mov
mov
cmp
je
push
call
mov
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
push
mov
push
call
mov
call
mov
mov
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
push
mov
mov
mov
sub
push
sub
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
mov
push
mov
mov
sub
push
sub
push
mov
push
push
or
push
push
push
push
call
pop
pop
pop
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
cmp
mov
je
test
je
push
call
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
mov
test
push
jne
call
push
call
xor
test
mov
jle
mov
push
mov
call
test
je
cmp
je
push
push
call
test
jne
jmp
push
push
call
cmp
je
inc
cmp
jl
xor
pop
pop
pop
pop
ret
push
call
jmp
mov
mov
test
je
push
call
ret
push
mov
call
test
je
push
call
mov
pop
ret
push
mov
call
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
cmp
jne
xor
inc
jmp
cmp
jne
xor
mov
push
push
mov
call
jmp
push
mov
push
mov
call
pop
ret
cmp
jne
call
mov
test
je
test
jne
push
call
xor
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
lea
call
push
and
push
push
push
push
push
push
push
push
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
push
movs
push
movs
push
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
push
push
push
mov
test
jne
mov
jmp
push
mov
push
lea
call
cmp
mov
mov
pop
je
push
push
call
xor
pop
leave
ret
push
mov
call
mov
mov
xor
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
call
ret
mov
ret
jmp
mov
mov
push
push
mov
call
mov
call
mov
ret
push
mov
sub
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
test
je
push
call
jmp
push
push
call
mov
test
je
push
push
push
push
call
test
je
mov
push
mov
lea
push
push
call
test
jne
test
je
push
push
call
test
je
test
je
xor
test
mov
jne
call
test
je
mov
lea
push
push
push
call
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
call
jmp
push
call
mov
mov
lea
push
push
call
lea
push
push
call
push
lea
push
push
push
call
mov
mov
mov
mov
add
cdq
sub
mov
sub
mov
cdq
sub
mov
sar
sar
sub
mov
sub
mov
mov
add
cdq
sub
mov
mov
cdq
sub
sar
sar
sub
cmp
jge
mov
jmp
add
cmp
jle
sub
add
mov
cmp
pop
jge
mov
jmp
mov
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
leave
ret
sub
push
push
push
xor
push
inc
xor
test
mov
mov
mov
je
call
test
je
xor
push
call
or
mov
call
mov
mov
jmp
push
push
push
push
push
call
test
jne
cmp
je
push
mov
call
push
call
xor
test
jne
cmp
je
cmp
jne
push
push
push
push
call
test
jne
push
push
push
push
call
inc
test
jne
mov
cmp
jne
call
test
je
cmp
je
mov
mov
cmp
je
cmp
jne
push
mov
call
push
call
xor
mov
mov
call
test
je
push
call
test
pop
je
mov
mov
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
and
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
push
call
ret
push
mov
call
push
call
pop
mov
mov
xor
cmp
mov
je
call
call
ret
push
mov
call
mov
mov
and
test
je
call
call
ret
push
mov
cmp
jne
push
call
test
mov
jne
push
call
test
mov
setne
mov
mov
pop
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
and
lea
push
call
push
call
mov
test
je
and
lea
push
mov
call
mov
xor
test
setne
test
jne
jmp
call
mov
call
call
ret
cmp
je
push
push
call
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
lea
push
mov
call
mov
xor
cmp
setne
cmp
jne
call
push
call
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
call
mov
mov
call
ret
jmp
push
push
mov
call
mov
test
jne
jmp
call
mov
call
movsx
shr
movsx
mov
mov
lea
pop
ret
push
mov
push
mov
call
test
jne
jmp
push
mov
push
mov
push
call
pop
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
call
jmp
xor
or
push
mov
call
mov
call
ret
push
push
push
call
push
mov
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
add
jmp
ret
push
mov
test
push
mov
jne
xor
jmp
push
push
call
mov
push
lea
mov
call
push
mov
mov
call
xor
inc
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
push
lea
call
and
and
mov
pop
pop
ret
push
push
mov
call
mov
test
jne
jmp
call
cmp
je
mov
test
je
push
call
and
cmp
je
and
xor
pop
ret
xor
inc
pop
ret
push
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
push
push
call
mov
test
je
mov
push
call
mov
pop
jmp
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
xor
inc
test
je
mov
push
call
and
test
je
call
mov
test
je
cmp
je
push
lea
push
push
call
mov
add
mov
mov
lea
push
push
push
push
mov
mov
call
mov
mov
push
push
call
mov
mov
call
mov
push
push
call
cmp
jne
mov
mov
call
mov
test
je
push
push
push
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
push
mov
mov
push
xor
cmp
jne
cmp
jne
xor
jmp
cmp
je
push
call
cmp
jne
jmp
push
lea
call
mov
cmp
jne
cmp
je
cmp
jne
push
call
jmp
mov
mov
call
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
test
jne
call
mov
lea
push
sub
push
mov
mov
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
call
mov
mov
test
je
push
call
test
je
push
push
push
call
test
jne
cmp
push
jne
call
jmp
call
test
jne
push
call
jmp
push
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
pop
ret
push
push
mov
mov
jmp
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
test
jne
xor
pop
pop
ret
xor
inc
jmp
push
mov
push
mov
call
test
jne
call
push
mov
push
mov
push
push
call
pop
ret
push
mov
cmp
je
mov
mov
call
test
jne
mov
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
push
call
xor
inc
jmp
mov
call
neg
sbb
neg
pop
pop
pop
ret
push
mov
push
push
mov
cmp
jne
call
jmp
mov
and
lea
push
push
mov
push
call
test
jge
mov
jmp
mov
pop
leave
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
jmp
lea
push
call
push
push
push
push
lea
push
call
test
jne
mov
call
pop
pop
pop
leave
ret
push
mov
push
lea
mov
mov
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
lea
push
xor
call
mov
mov
call
cmp
je
push
call
test
je
mov
jmp
mov
and
cmp
jne
call
mov
mov
call
mov
mov
pop
leave
ret
push
mov
mov
push
call
mov
push
push
push
call
and
pop
mov
pop
jmp
push
call
test
je
mov
ret
xor
ret
push
mov
sub
test
jne
push
mov
mov
call
test
jne
lea
push
push
call
mov
mov
cmp
jne
mov
cmp
jne
push
push
call
push
call
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
call
push
mov
call
mov
xor
xor
cmp
setne
mov
cmp
jne
call
lea
push
mov
pop
lea
rep
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
cmp
je
mov
mov
push
call
and
cmp
jne
lea
push
lea
push
push
call
push
mov
push
mov
push
call
cmp
mov
jne
push
lea
push
push
call
jmp
mov
add
push
push
call
mov
mov
call
mov
ret
mov
mov
push
lea
pop
lea
rep
call
ret
push
mov
cmp
jne
xor
inc
jmp
push
mov
push
call
test
je
cmp
jne
push
push
push
push
push
call
jmp
push
push
push
push
call
pop
pop
ret
push
mov
call
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
and
or
mov
call
call
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
cmp
push
mov
jne
push
mov
call
test
jne
call
mov
cmp
jne
push
jmp
push
call
push
call
test
je
push
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
push
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
test
je
mov
test
jne
xor
ret
push
push
mov
push
jmp
mov
mov
call
test
jne
push
call
push
call
mov
test
jne
pop
pop
ret
mov
jmp
push
mov
test
je
cmp
jne
xor
pop
ret
mov
call
test
jne
mov
call
mov
test
je
mov
jmp
mov
mov
call
test
jne
mov
pop
ret
push
mov
push
push
push
mov
call
jmp
cmp
je
push
call
test
je
push
push
push
push
push
call
jmp
push
push
push
push
call
cmp
je
push
call
test
je
push
push
push
push
push
push
call
push
push
call
mov
test
jne
pop
pop
pop
ret
push
mov
call
push
call
test
jne
xor
jmp
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
push
and
lea
mov
call
and
xor
test
setne
or
mov
lea
call
mov
jmp
push
mov
call
call
ret
cmp
push
mov
je
cmp
jne
push
push
call
test
jne
mov
call
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
mov
mov
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
neg
sbb
and
add
ret
mov
mov
mov
mov
mov
xor
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
push
push
push
call
pop
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
call
pop
ret
mov
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
ret
mov
test
jne
push
call
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
cmp
push
mov
jne
push
call
test
je
mov
push
mov
call
jmp
push
push
call
test
jne
mov
call
pop
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
push
mov
call
test
jne
mov
call
pop
ret
push
push
call
push
mov
call
mov
test
jne
call
cmp
jne
push
call
test
pop
mov
jne
xor
jmp
push
push
call
test
mov
jne
push
call
and
jmp
push
call
push
push
push
push
call
pop
ret
push
mov
sub
mov
push
push
push
movzx
shr
xor
cmp
mov
mov
jne
cmp
jne
xor
jmp
lea
call
mov
push
lea
push
push
push
mov
mov
call
cmp
jne
xor
inc
jmp
mov
jmp
push
mov
call
cmp
jne
call
mov
cmp
je
push
push
call
test
jne
cmp
je
mov
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
push
push
mov
call
movzx
mov
mov
push
mov
mov
call
test
jne
call
mov
cmp
jne
xor
inc
jmp
push
push
call
test
jne
mov
push
lea
push
movzx
or
push
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
call
test
je
push
call
jmp
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
jmp
mov
push
call
test
jne
push
call
pop
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
push
push
push
push
push
push
call
mov
pop
jmp
push
mov
call
mov
test
je
cmp
jne
push
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
mov
call
pop
ret
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
inc
ret
xor
ret
cmp
jne
xor
ret
mov
mov
push
push
call
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
inc
jmp
xor
ret
push
mov
cmp
push
push
push
je
mov
test
je
mov
test
jne
mov
jmp
push
and
call
test
je
mov
add
mov
push
call
mov
xor
jmp
mov
xor
test
sete
test
mov
jne
push
push
call
test
pop
pop
je
cmp
je
push
push
push
push
call
test
je
cmp
jne
test
jl
add
mov
test
jne
mov
jmp
mov
pop
pop
pop
pop
ret
mov
mov
mov
mov
call
jmp
mov
inc
mov
ret
mov
dec
push
mov
jne
test
je
mov
push
call
mov
pop
ret
push
push
push
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
push
mov
mov
call
test
jne
push
mov
call
mov
test
je
push
mov
test
je
push
call
test
je
mov
call
cmp
je
test
mov
mov
jne
and
jmp
mov
mov
lea
push
push
push
push
call
pop
pop
pop
leave
ret
push
mov
cmp
push
jne
cmp
je
cmp
je
cmp
jne
mov
call
test
je
push
call
push
call
mov
test
je
call
push
call
cmp
je
mov
call
test
je
push
call
xor
inc
jmp
xor
pop
pop
ret
push
mov
call
mov
mov
push
push
call
and
and
mov
mov
xor
inc
sub
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
push
push
push
push
push
call
push
mov
lea
push
push
call
mov
call
ret
push
push
push
call
push
push
call
push
call
push
call
jmp
push
call
mov
shr
push
movsx
push
push
call
xor
test
sete
jmp
push
call
push
mov
call
push
push
push
call
test
je
push
push
push
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
push
mov
mov
call
mov
xor
test
setne
test
jne
call
cmp
je
push
push
push
push
call
jmp
mov
mov
mov
call
test
movzx
mov
jne
mov
test
jne
test
jne
cmp
jne
push
pop
push
push
lea
push
call
lea
mov
push
mov
push
push
call
add
test
mov
je
push
push
call
movzx
cmp
jne
jmp
push
lea
call
and
push
mov
call
mov
mov
call
mov
mov
call
mov
push
push
push
mov
call
cmp
je
mov
mov
and
or
cmp
je
push
push
call
jmp
push
lea
push
push
call
test
je
and
lea
push
push
call
test
pop
pop
je
push
push
call
test
mov
je
mov
push
push
call
test
jne
push
push
push
call
push
push
call
cmp
jne
push
call
push
push
push
call
push
push
push
push
call
cmp
mov
je
push
call
and
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
push
mov
call
mov
test
jne
call
push
mov
cmp
je
cmp
jne
call
push
push
push
push
call
test
mov
jne
call
mov
pop
pop
ret
push
mov
sub
push
push
mov
test
mov
je
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
push
mov
mov
push
call
test
je
mov
mov
call
mov
xor
push
push
push
push
call
push
push
push
push
push
push
call
mov
call
mov
cmp
jne
jmp
push
push
push
push
call
push
push
push
push
push
push
call
call
cmp
je
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
mov
xor
mov
mov
mov
cmp
mov
jne
push
mov
push
call
test
je
mov
jmp
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
jne
jmp
cmp
mov
jne
push
call
push
push
push
call
cmp
jne
mov
shr
push
movsx
push
push
call
test
jne
mov
test
je
cmp
jle
cmp
jb
cmp
jbe
cmp
jb
cmp
jbe
lea
cmp
ja
mov
mov
lea
push
push
push
push
call
test
jne
mov
mov
call
mov
xor
push
lea
mov
and
call
imul
mov
add
cmp
mov
jne
mov
mov
cmp
jne
mov
lea
mov
call
test
je
cmp
jb
jmp
mov
mov
mov
mov
mov
jmp
cmp
push
push
jae
push
push
call
test
mov
je
mov
mov
lea
call
mov
mov
mov
lea
cmp
ja
jmp
mov
mov
push
push
jmp
mov
mov
cmp
je
push
push
push
add
push
call
mov
test
jne
mov
call
mov
mov
cmp
jne
mov
and
lea
call
or
lea
call
xor
call
ret
movsx
shr
movsx
push
push
jmp
push
call
push
mov
call
jmp
push
jmp
mov
call
jmp
push
call
push
jmp
mov
shr
push
movzx
push
push
call
push
mov
call
jmp
push
push
call
jmp
push
jmp
lea
call
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
test
jne
mov
test
je
push
lea
call
test
je
mov
lea
push
push
lea
push
mov
call
and
and
lea
mov
mov
call
jmp
lea
call
mov
push
mov
lea
push
mov
mov
call
and
mov
lea
mov
call
jmp
mov
shr
push
push
call
push
movzx
jmp
mov
shr
push
movzx
jmp
push
call
push
mov
shr
jmp
mov
call
jmp
push
jmp
mov
shr
push
movzx
jmp
mov
shr
movsx
push
movsx
jmp
mov
shr
push
movzx
jmp
push
call
push
push
call
push
xor
cmp
sete
jmp
push
call
jmp
push
call
jmp
mov
shr
movsx
push
movsx
push
push
call
jmp
push
jmp
push
call
push
jmp
mov
shr
push
movzx
jmp
movsx
shr
movsx
push
push
push
call
jmp
push
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movsx
shr
cmp
movsx
mov
mov
jne
push
call
push
push
push
jmp
push
push
jmp
push
push
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzx
push
jmp
movsx
shr
movsx
push
push
push
mov
call
jmp
push
push
mov
call
jmp
movsx
shr
movsx
push
push
mov
shr
push
movzx
push
mov
call
mov
jmp
mov
call
test
mov
je
jmp
mov
lea
mov
call
mov
push
push
mov
call
mov
mov
test
je
mov
mov
or
lea
call
xor
inc
jmp
nop
jo
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
jo
add
outs
inc
add
outs
inc
add
jb
add
jno
add
jno
add
jo
add
jo
add
jo
add
jo
add
jo
add
outs
inc
add
outs
inc
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
inc
add
jno
add
add
add
jno
add
jno
add
jb
add
inc
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
outs
inc
add
in
mov
sub
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
push
lea
push
movzx
or
push
push
call
jmp
mov
xor
push
shr
push
or
push
push
call
test
je
mov
xor
inc
cmp
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
push
add
push
push
push
call
jmp
lea
cmp
ja
mov
push
mov
add
push
mov
lea
push
xor
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
and
push
mov
cmp
je
mov
mov
push
call
push
push
mov
call
pop
ret
push
mov
call
mov
xor
cmp
jne
mov
jmp
push
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
push
call
jmp
xor
jmp
mov
call
mov
ret
mov
xor
mov
cmp
je
mov
mov
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
and
call
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
push
lea
call
mov
mov
xor
push
push
lea
push
mov
mov
call
test
je
lea
push
push
push
push
lea
push
push
call
add
jmp
push
push
push
lea
push
push
call
add
push
push
mov
push
call
lea
mov
call
mov
push
mov
call
mov
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
mov
ret
push
mov
cmp
je
push
push
mov
push
lea
push
push
call
add
cmp
pop
ja
test
jne
pop
ret
mov
test
je
mov
xor
inc
jmp
pop
jmp
push
mov
call
mov
cmp
mov
jne
mov
call
mov
test
jl
mov
test
jne
lea
push
call
mov
test
jl
and
mov
mov
and
lea
push
push
push
call
test
jl
mov
lea
push
lea
push
mov
mov
push
call
push
push
push
call
mov
mov
mov
or
xor
test
je
mov
push
call
jmp
push
push
push
call
mov
mov
xor
mov
call
ret
push
mov
call
mov
lea
push
push
push
call
add
test
jne
push
call
test
pop
jne
xor
jmp
call
cmp
je
push
call
and
call
mov
lea
push
mov
call
push
mov
call
or
push
call
xor
inc
call
ret
push
call
push
push
call
int3
push
mov
sub
push
mov
push
xor
cmp
mov
mov
je
push
movzx
cmp
je
inc
inc
movzx
movzx
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
push
pop
xor
lea
rep
or
push
lea
mov
call
mov
mov
lea
push
push
movzx
push
push
mov
push
call
cmp
jne
and
mov
add
call
xor
jmp
cmp
je
cmp
jne
push
movzx
push
push
movzx
push
mov
push
call
cmp
jne
mov
add
cmp
jne
cmp
pop
je
mov
push
push
push
push
push
push
call
mov
pop
pop
leave
ret
mov
push
mov
push
mov
call
movzx
mov
mov
push
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
xor
inc
jmp
push
push
push
push
xor
lea
push
push
xor
call
mov
add
mov
call
test
mov
push
mov
mov
pop
mov
mov
je
lea
push
mov
mov
call
test
je
inc
test
je
or
lea
push
mov
call
test
je
or
test
je
lea
push
mov
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
lea
push
mov
call
or
and
test
je
push
lea
push
mov
call
or
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
or
mov
mov
mov
and
cmp
jne
or
mov
or
mov
and
pop
sub
pop
neg
sbb
inc
pop
leave
ret
push
mov
cmp
jne
push
call
mov
xor
inc
pop
ret
push
push
push
push
xor
xor
cmp
mov
je
call
mov
push
push
push
call
test
je
push
push
call
mov
test
je
push
call
mov
push
mov
call
test
mov
je
test
je
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
push
xor
inc
test
je
mov
mov
mov
mov
jmp
mov
add
cmp
push
ja
jmp
call
jmp
call
jmp
push
call
jmp
push
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
call
xor
cmp
sete
and
jmp
mov
test
je
push
push
call
jmp
push
jmp
push
call
mov
mov
jmp
xor
pop
pop
pop
ret
lea
dec
jge
add
inc
add
inc
add
inc
add
inc
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
mov
cmp
push
mov
jne
call
cmp
jne
call
call
push
mov
push
mov
push
mov
push
call
jmp
cmp
push
push
jne
mov
and
test
je
mov
mov
mov
call
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
mov
test
je
push
push
call
test
pop
pop
je
mov
mov
mov
add
mov
test
jne
mov
test
jne
mov
jmp
cmp
je
mov
shr
movzx
mov
jne
mov
mov
call
jmp
push
push
push
push
call
test
jne
call
mov
cmp
jne
xor
pop
pop
pop
pop
ret
push
push
push
push
push
push
push
call
jmp
mov
ret
mov
ret
mov
ret
mov
ret
push
push
mov
call
mov
mov
call
test
je
mov
call
push
call
mov
push
mov
call
pop
ret
mov
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ret
push
push
push
push
push
call
ret
push
mov
call
mov
xor
inc
xor
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
lea
mov
test
je
call
and
pop
ret
call
mov
mov
push
mov
call
ret
call
mov
mov
push
mov
call
ret
mov
ret
push
push
mov
mov
xor
cmp
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
add
or
push
push
push
call
jmp
cmp
je
cmp
jne
push
mov
call
cmp
jne
push
call
push
call
push
push
push
push
call
pop
push
mov
call
mov
pop
pop
ret
push
mov
mov
test
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
or
push
push
push
call
jmp
mov
test
je
push
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
pop
pop
ret
push
mov
test
push
push
mov
jne
call
mov
test
je
cmp
jne
mov
mov
push
push
push
call
mov
and
cmp
jae
push
push
or
push
push
mov
call
jmp
mov
test
je
push
push
call
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
push
call
movsx
shr
cmp
movsx
mov
jle
cmp
jg
jmp
cmp
jle
push
pop
lea
cdq
sub
lea
sar
mov
sar
mov
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
sar
add
imul
lea
lea
mov
mov
mov
movzx
mov
shl
inc
not
movzx
mov
mov
add
dec
jne
lea
push
push
push
push
push
call
test
pop
pop
mov
pop
jne
push
push
call
mov
mov
xor
call
add
leave
ret
push
mov
mov
push
xor
xor
cmp
setne
push
mov
call
cmp
je
cmp
jne
mov
cmp
jb
call
cmp
jne
call
cmp
je
push
mov
push
push
push
push
call
pop
pop
ret
push
push
mov
test
mov
je
cmp
je
cmp
je
call
cmp
je
push
call
add
cmp
jle
push
call
test
jle
cmp
jne
mov
jmp
push
and
call
push
call
pop
pop
ret
cmp
je
mov
mov
jmp
xor
inc
ret
cmp
jne
call
lea
cmp
je
mov
mov
mov
jmp
ret
cmp
jne
call
mov
mov
jmp
mov
mov
test
jne
call
add
cmp
jne
mov
push
call
jmp
mov
mov
push
mov
call
ret
cmp
je
mov
mov
jmp
xor
ret
mov
test
jl
cmp
jl
call
mov
lea
ret
mov
push
push
push
push
call
ret
push
mov
mov
test
jne
call
mov
mov
cmp
jb
push
mov
add
cmp
jb
call
lea
push
call
mov
mov
push
mov
call
test
jne
mov
mov
push
call
xor
pop
inc
pop
ret
push
mov
sub
push
push
push
lea
push
xor
mov
push
push
push
mov
push
mov
mov
mov
mov
call
test
jne
lea
push
lea
push
push
push
push
push
push
push
mov
push
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
je
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
push
push
call
push
call
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
cmp
push
mov
je
push
call
mov
test
je
push
lea
push
push
push
push
push
call
push
mov
call
xor
test
sete
jmp
push
lea
push
push
push
call
add
push
lea
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
mov
test
push
mov
push
jne
call
test
je
push
call
and
push
mov
lea
push
push
call
mov
add
cmp
ja
push
lea
push
push
call
cmp
jne
push
lea
push
call
test
je
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
test
jne
call
mov
test
je
push
call
and
pop
ret
push
mov
test
je
push
push
call
mov
and
je
push
dec
call
test
jne
push
call
pop
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
push
call
and
jmp
sub
sub
push
push
call
pop
pop
xor
inc
pop
ret
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
lea
push
push
call
lea
push
push
call
pop
neg
pop
mov
sbb
xor
inc
pop
call
leave
ret
push
mov
sub
push
push
lea
push
push
call
mov
push
push
jmp
push
call
test
je
push
push
call
test
je
lea
push
push
call
push
lea
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
leave
ret
mov
jmp
cmp
jne
xor
ret
mov
mov
jmp
cmp
jne
call
mov
mov
jmp
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
test
jne
push
lea
push
push
push
call
mov
test
jne
and
lea
push
lea
call
lea
push
push
mov
call
mov
mov
test
setne
add
mov
call
test
jne
or
jmp
mov
mov
call
mov
ret
mov
mov
cmp
je
cmp
jne
push
push
call
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
xor
mov
mov
mov
call
cmp
mov
je
lea
push
mov
call
cmp
je
mov
push
push
push
push
mov
call
cmp
jne
cmp
je
xor
cmp
setne
cmp
jne
jmp
push
lea
call
push
lea
mov
call
push
lea
push
lea
push
call
push
mov
push
lea
push
call
add
mov
add
mov
call
lea
push
mov
push
call
lea
push
push
push
call
test
jne
push
lea
push
push
push
call
cmp
jne
lea
push
push
call
push
call
lea
push
lea
push
push
push
call
mov
add
call
mov
add
call
xor
inc
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
xor
cmp
sete
mov
ret
call
add
push
call
ret
call
mov
mov
ret
call
mov
ret
call
cmp
jne
push
push
call
call
mov
test
je
mov
test
je
call
test
je
mov
mov
pop
jmp
call
cmp
jne
push
call
pop
ret
call
add
push
call
test
jne
jmp
ret
push
push
mov
test
mov
jne
push
pop
mov
test
je
push
call
and
pop
cmp
je
xor
push
pop
mov
mul
seto
neg
or
push
call
mov
shl
push
push
push
mov
call
add
mov
pop
pop
ret
push
mov
mov
test
je
push
call
and
pop
mov
and
and
call
and
pop
ret
mov
mov
mov
dec
mov
jne
call
ret
mov
push
mov
mov
shr
mov
xor
div
mov
mov
mov
test
je
mov
jmp
cmp
je
mov
test
jne
xor
pop
ret
test
jne
call
push
mov
test
jne
xor
jmp
push
mov
mov
xor
shr
div
mov
jmp
cmp
je
mov
test
jne
xor
pop
pop
ret
mov
jmp
push
mov
test
jne
xor
jmp
push
mov
mov
shr
xor
div
lea
mov
jmp
cmp
je
mov
mov
test
jne
pop
pop
ret
mov
push
mov
call
xor
inc
jmp
mov
push
mov
test
je
cmp
push
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
call
mov
test
jne
mov
shr
xor
push
mov
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
ret
mov
mov
xor
cmp
mov
jg
push
pop
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
inc
mov
and
and
pop
ret
push
mov
push
push
push
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
push
push
mov
call
mov
call
mov
mov
mov
shl
mov
mov
mov
mov
pop
add
pop
leave
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
call
inc
ret
push
mov
call
mov
mov
mov
push
mov
push
lea
call
and
push
lea
call
lea
push
mov
mov
call
xor
cmp
mov
jne
call
cmp
je
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
push
mov
call
mov
mov
test
jne
xor
call
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
add
mov
cmp
jne
mov
jmp
push
call
and
lea
mov
call
mov
test
jne
call
push
call
push
lea
call
push
or
mov
call
mov
add
mov
cmp
jne
mov
mov
jmp
push
call
push
push
call
int3
push
mov
sub
push
mov
test
je
mov
neg
sbb
mov
je
push
lea
lea
push
lea
push
lea
push
mov
call
mov
add
and
cmp
jne
and
push
call
cmp
jne
pop
lea
call
lea
call
pop
leave
ret
push
mov
call
mov
mov
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
call
mov
mov
xor
cmp
je
dec
cmp
mov
jne
cmp
je
cmp
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
push
call
mov
mov
call
mov
test
je
test
je
mov
test
je
push
call
cmp
pop
jae
cmp
je
mov
and
test
je
push
call
push
mov
call
pop
pop
push
call
test
pop
mov
jne
cmp
je
push
call
pop
mov
pop
xor
cmp
pop
setne
pop
pop
ret
push
mov
mov
push
xor
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
test
jne
call
mov
mov
dec
mov
jne
call
ret
test
jne
jmp
mov
test
je
mov
test
push
mov
mov
je
and
jmp
and
push
call
mov
pop
ret
mov
test
jne
call
cmp
push
jne
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
mov
mov
mov
mov
mov
inc
and
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
test
push
mov
jne
push
call
jmp
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
pop
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
call
pop
mov
mov
jmp
mov
cmp
jne
cmp
ja
push
call
push
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
sub
push
add
push
push
call
add
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
cmp
jl
push
call
push
mov
push
push
push
call
mov
mov
sub
push
add
push
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
mov
push
not
test
mov
push
mov
je
push
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
jmp
call
push
push
mov
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
pop
pop
pop
pop
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
xor
inc
ret
xor
ret
push
mov
call
push
mov
push
mov
and
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
mov
call
mov
mov
mov
and
push
push
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
test
jne
mov
jmp
mov
mov
xor
ret
push
mov
call
mov
mov
mov
test
jne
mov
jmp
call
push
mov
push
and
push
mov
call
mov
test
je
mov
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
mov
mov
mov
mov
ret
cmp
jb
call
movzx
mov
push
mov
push
add
jmp
cmp
je
test
mov
jne
mov
mov
and
cmp
jae
and
add
inc
mov
test
jne
pop
pop
ret
call
int3
mov
ret
mov
test
jl
cmp
jge
imul
add
ret
call
int3
mov
mov
mov
test
push
mov
mov
mov
mov
pop
je
test
jne
call
ret
cmp
je
push
call
pop
ret
mov
mov
or
sub
cmp
jae
mov
ret
add
mov
mov
xor
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
mov
pop
ret
mov
test
je
and
push
push
push
push
call
xor
add
inc
ret
push
push
call
mov
xor
mov
mov
push
push
lea
push
call
add
cmp
jge
mov
jmp
mov
call
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
call
mov
mov
lea
call
ret
push
mov
push
mov
push
push
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
push
call
pop
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
mov
jg
mov
mov
imul
push
call
push
xor
push
push
mov
call
add
cmp
jle
xor
mov
mov
add
je
mov
mov
add
dec
jne
jmp
cmp
jg
mov
cmp
jge
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
mov
mov
mov
sub
inc
cmp
jl
jmp
jle
sub
test
mov
jle
mov
imul
mov
push
add
call
mov
inc
sub
add
cmp
jl
jmp
mov
cmp
jne
mov
cdq
and
add
sar
cmp
jge
push
pop
jmp
mov
cmp
jle
mov
mov
add
cmp
mov
jl
mov
mov
cmp
jl
imul
push
call
mov
imul
push
push
mov
push
push
call
mov
mov
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
and
and
mov
sub
inc
cmp
jl
push
call
pop
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
mov
test
mov
je
test
jne
call
mov
mov
push
push
not
test
push
mov
mov
je
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
jmp
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
pop
pop
pop
pop
ret
mov
mov
cmp
je
cmp
mov
je
and
mov
mov
mov
mov
mov
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
mov
neg
sbb
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
cmp
mov
je
push
xor
cmp
jle
push
xor
mov
push
add
call
inc
add
cmp
jl
pop
push
call
pop
pop
pop
ret
push
push
mov
mov
not
test
mov
mov
je
push
call
jmp
call
push
push
mov
call
push
push
push
call
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
jmp
push
push
mov
test
mov
jge
call
cmp
jl
push
lea
push
call
push
mov
imul
add
call
pop
pop
ret
push
mov
mov
sub
mov
call
mov
sub
call
mov
sub
pop
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
add
cmp
je
cmp
jne
mov
mov
add
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
mov
movzx
mov
movzx
dec
mov
cmp
mov
je
test
je
and
or
cmp
jl
cmp
je
mov
mov
shl
cmp
lea
je
cmp
je
mov
push
push
add
push
push
mov
call
test
jl
mov
mov
jmp
cmp
jne
mov
and
mov
mov
jmp
cmp
jne
cmp
jne
mov
mov
mov
test
push
pop
je
cmp
jne
mov
test
je
mov
xor
cmp
push
setne
mov
call
test
pop
je
mov
mov
mov
jmp
and
push
push
lea
push
call
mov
and
push
push
mov
call
or
cmp
je
push
call
pop
mov
mov
push
pop
jmp
mov
mov
jmp
movzx
add
cmp
ja
jmp
movsx
jmp
movzx
jmp
movsx
jmp
movzx
jmp
mov
mov
mov
mov
add
jmp
fld
fstp
jmp
fld
fstp
jmp
xor
cmp
setne
jmp
mov
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
push
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
call
test
je
mov
xor
mov
rep
mov
mov
rep
pop
pop
ret
call
mov
mov
mov
push
mov
push
push
push
call
add
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
or
inc
or
add
test
inc
(bad)
push
add
or
mov
jmp
mov
cmp
je
mov
mov
mov
mov
jmp
xor
call
ret
nop
aam
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
mov
call
mov
push
lea
call
mov
mov
xor
cmp
mov
mov
mov
jne
lea
mov
push
call
test
mov
mov
mov
movzx
mov
je
lea
push
call
test
pop
jne
or
cmp
je
push
push
call
mov
jmp
mov
call
mov
mov
push
push
lea
push
push
call
movzx
and
mov
add
inc
mov
mov
mov
mov
mov
xor
mov
mov
shl
push
call
test
pop
jne
or
cmp
je
push
push
jmp
mov
cmp
ja
shl
mov
call
mov
mov
push
push
push
call
add
push
push
call
mov
lea
push
call
test
pop
je
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
mov
push
push
push
push
push
call
test
mov
jne
movzx
cmp
push
push
push
mov
je
cmp
je
cmp
je
add
cmp
ja
call
mov
mov
jmp
call
mov
jmp
call
fstp
jmp
call
fstp
fld
fstp
mov
mov
xor
cmp
jbe
mov
mov
push
call
add
inc
cmp
jb
cmp
lea
je
mov
call
or
cmp
je
push
push
call
mov
jmp
mov
xor
cmp
jbe
mov
push
call
inc
add
cmp
jb
push
push
call
call
mov
test
je
mov
mov
movzx
add
cmp
ja
jmp
mov
jmp
mov
mov
mov
mov
jmp
fld
fstp
jmp
fld
fstp
jmp
neg
sbb
mov
jmp
lea
mov
movs
movs
movs
movs
jmp
mov
jmp
movzx
sub
je
dec
je
sub
je
dec
jne
test
je
mov
push
call
jmp
lea
push
call
jmp
push
call
lea
mov
call
or
cmp
je
push
push
call
xor
lea
call
ret
lea
xor
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
call
mov
mov
call
lea
mov
mov
call
and
lea
call
lea
call
mov
mov
mov
add
neg
sbb
and
cmp
mov
mov
mov
je
push
mov
call
neg
mov
sbb
and
add
mov
call
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
push
push
push
call
add
lea
push
mov
mov
call
test
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
cmp
je
push
lea
call
push
call
mov
add
mov
call
add
mov
cmp
je
push
lea
call
mov
push
call
lea
mov
call
jmp
push
mov
call
test
push
lea
push
je
push
call
mov
jmp
push
call
mov
push
lea
call
push
call
mov
add
mov
call
xor
cmp
jne
call
push
lea
call
push
call
mov
add
mov
call
cmp
jne
cmp
je
call
mov
push
lea
call
push
call
mov
add
mov
call
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
call
mov
mov
mov
mov
and
test
je
call
cmp
je
push
call
pop
or
mov
call
call
ret
mov
mov
cmp
jb
xor
ret
inc
cmp
mov
sbb
neg
ret
and
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
add
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
mov
cmp
jb
xor
jmp
mov
mov
imul
add
push
push
push
push
call
add
inc
xor
inc
pop
ret
push
mov
call
mov
push
add
lea
call
mov
and
test
je
and
mov
mov
mov
mov
mov
cmp
je
mov
push
mov
call
test
je
add
dec
jmp
mov
call
mov
ret
jmp
mov
test
je
sub
mov
xor
cmp
setne
mov
or
cmp
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
xor
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
dec
jmp
mov
call
mov
ret
xor
xor
cmp
setne
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
mov
call
or
cmp
je
push
push
call
xor
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
and
mov
mov
mov
mov
call
mov
mov
test
je
mov
jmp
mov
mov
add
push
call
add
and
mov
or
cmp
je
push
push
call
mov
call
ret
mov
call
mov
ret
push
mov
call
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
push
push
push
call
mov
mov
call
ret
mov
and
mov
ret
push
mov
mov
test
je
cmp
je
mov
push
call
and
pop
ret
push
mov
mov
test
je
push
call
and
pop
pop
ret
push
mov
call
mov
mov
mov
mov
pop
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
xor
cmp
setne
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
call
mov
xor
cmp
je
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
cmp
je
push
call
mov
test
mov
je
lea
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
xor
push
pop
mul
seto
neg
or
push
call
mov
mov
shl
push
push
push
mov
call
mov
shl
add
cmp
lea
mov
mov
je
mov
add
lea
add
push
mov
mov
pop
mov
movzx
test
mov
mov
je
and
or
mov
movzx
mov
cmp
jg
je
dec
dec
cmp
ja
jmp
add
add
mov
mov
jmp
add
add
mov
jmp
mov
add
mov
add
mov
mov
mov
mov
jmp
add
mov
fld
add
fstp
jmp
add
mov
fld
add
fstp
jmp
add
add
mov
jmp
add
add
mov
push
mov
call
cmp
mov
je
test
jne
call
add
add
mov
neg
sbb
mov
jmp
add
mov
add
mov
movs
movs
movs
movs
mov
push
pop
jmp
sub
cmp
ja
jmp
add
add
mov
mov
neg
sbb
push
and
mov
push
push
lea
mov
call
push
push
lea
mov
call
cmp
mov
je
push
call
pop
jmp
add
add
mov
mov
sub
sub
inc
mov
cmp
mov
jne
mov
xor
lea
push
xor
call
cmp
je
lea
push
lea
push
push
call
mov
mov
or
mov
add
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
lea
mov
call
mov
cmp
je
mov
shl
lea
jmp
cmp
jne
push
call
sub
inc
cmp
jne
push
call
cmp
pop
mov
jge
lea
push
call
cmp
je
push
call
cmp
je
lea
push
call
push
call
pop
mov
cmp
mov
je
push
mov
push
push
call
mov
push
mov
mov
call
test
je
push
lea
call
push
mov
call
push
call
test
je
push
lea
call
push
call
push
call
test
je
push
lea
call
push
call
mov
mov
mov
mov
push
lea
push
mov
call
mov
cmp
je
cmp
je
push
push
lea
push
push
call
mov
cmp
jge
lea
push
call
push
jmp
movzx
add
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
fld
mov
fstp
jmp
fld
mov
fstp
jmp
push
push
call
push
call
jmp
mov
xor
cmp
setne
mov
jmp
mov
lea
movs
movs
movs
movs
xor
jmp
mov
mov
mov
lea
mov
call
or
cmp
je
push
call
pop
call
ret
mov
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
test
inc
add
test
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
pop
mov
xor
dec
pop
imul
loope
cs
addr16
imul
mov
pop
pop
scas
push
mov
mov
lds
out
daa
mov
add
push
mov
call
adc
sub
pop
pop
inc
dec
dec
lods
loope
jge
nop
aas
push
mov
call
paddsb
sbb
aaa
div
mov
jmp
xchg
les
jmp
loope
mov
push
aaa
(bad)
(bad)
xor
jg
and
jne
or
sahf
mov
or
sub
pop
cmp
jle
or
mov
dec
jno
pop
(bad)
call
das
ret
jle
fwait
jne
enter
mov
jb
out
daa
pushf
or
sbb
jecxz
or
pop
out
(bad)
ficom
sub
dec
xor
mov
ins
pop
pop
iret
add
mov
ins
fldcw
cmps
mov
push
and
rol
dec
(bad)
loope
pop
cmp
(bad)
push
xchg
fwait
repnz
dec
pop
fimul
aad
sbb
push
(bad)
sahf
jg
fstp
cdq
fbstp
aas
addr16
mov
xor
scas
sbb
mov
and
and
das
sub
fild
or
or
scas
jmp
lock
inc
scas
inc
cmps
outs
pop
jg
fisttp
jg
sub
push
pop
outs
push
push
mov
das
cdq
pop
out
dec
ret
sbb
jae
(bad)
repz
dec
mov
push
fstp
or
outs
cwde
adc
jle
ffree
mov
push
push
test
jle
outs
adc
add
sbb
or
xor
xor
sahf
test
fld
mov
jp
dec
ss
repnz
sti
pop
xchg
xlat
das
mov
push
(bad)
mov
and
jg
(bad)
and
mov
jbe
and
fist
sub
daa
mov
retf
push
or
mov
dec
(bad)
dec
iret
lahf
mov
stos
xor
push
rol
pop
addr16
mov
pop
xchg
idiv
sub
pop
jnp
pop
out
mov
fsubrp
mov
inc
mov
pop
in
cld
aas
push
mov
dec
mov
push
stos
loope
(bad)
out
shl
mov
xchg
jg
jnp
enter
inc
(bad)
adc
jmp
out
mov
add
pop
outs
lds
out
mov
mov
popa
call
mov
das
imul
fcomp
sar
jnp
enter
out
out
popf
int
cmps
cmp
sub
pop
scas
pop
xchg
into
add
xchg
or
outs
pusha
mov
adc
sahf
and
iret
loop
fcomp
dec
aas
in
cdq
jmp
xor
xchg
sbb
in
push
and
add
in
std
push
call
aad
mov
(bad)
iretw
jg
dec
aam
ins
sbb
scas
push
pop
cmp
xchg
or
shr
outs
xor
popa
lahf
mov
cld
xchg
lea
push
ins
adc
xchg
cmp
inc
mov
mov
int
fistp
pop
mov
js
or
xor
xchg
int
repz
cs
mov
sahf
inc
adc
(bad)
cli
pop
loop
je
push
dec
lods
add
imul
in
iret
sar
imul
js
and
pop
inc
adc
div
neg
pop
shr
jns
jnp
xchg
das
dec
(bad)
push
jno
push
das
jnp
mov
(bad)
cmp
imul
dec
in
stos
push
repz
cmp
das
mov
jmp
repnz
mov
lods
cli
dec
jmp
mov
fisttp
movs
jl
int3
faddp
iret
(bad)
addr16
daa
or
iret
inc
out
fadd
scas
out
iret
mov
add
(bad)
jl
call
mov
fsubr
vmwrite
movs
fisubr
xchg
out
pop
cmps
int3
enter
mov
pop
out
cs
movs
pop
stc
jbe
add
xchg
mov
lods
mov
aas
mov
retf
(bad)
mov
mov
xor
outs
dec
dec
aam
out
std
cmp
rep
das
loop
mov
into
mov
div
outs
fsubr
mov
in
daa
outs
cmp
pop
mov
imul
push
pop
popa
outs
cli
mov
je
outs
mov
(bad)
mov
ja
xor
pop
imul
out
mov
or
imul
adc
outs
rcl
xchg
shr
pop
out
das
cld
lods
pop
test
sar
dec
sti
iret
cmps
jmp
mov
xchg
xor
mov
dec
and
fstp
mov
push
fild
in
jae
pop
pop
pop
shr
call
(bad)
cwde
jmp
push
fidivr
xor
js
daa
ins
(bad)
mov
adc
dec
sbb
push
mov
stos
(bad)
pop
(bad)
jge
jge
out
ja
enter
scas
es
mov
jmp
sar
mov
outs
ja
mov
pop
(bad)
repnz
popa
outs
pushf
js
or
leave
jecxz
jl
sbb
pop
pusha
popa
mov
(bad)
(bad)
outs
push
dec
mov
pop
jle
cmps
or
out
lods
xor
stos
jmp
sbb
movs
out
call
dec
imul
mov
fwait
popf
xlat
push
aas
jmp
add
sub
pop
push
es
xor
rol
mov
jo
mov
pop
push
and
sbb
pop
inc
or
out
sahf
jmp
add
(bad)
xor
xchg
add
test
(bad)
fist
dec
push
mov
addr16
shl
mov
sub
mov
mov
mov
mov
cmp
lahf
mov
xchg
pop
(bad)
call
inc
sbb
dec
inc
or
xor
cmp
rcl
cmps
adc
jge
cli
fwait
neg
sahf
into
mov
sahf
cmp
std
mov
cmp
daa
jmp
push
sbb
push
mov
ss
iret
(bad)
(bad)
cmps
mov
popf
and
out
sub
push
vpmulhw
and
sub
pushfw
pop
scas
sbb
adc
sti
out
jns
loopne
test
cli
fs
shl
sahf
xchg
out
aas
bound
jnp
out
sahf
xor
fdivp
dec
in
push
cmp
xchg
and
popf
daa
jmp
add
sub
(bad)
pop
add
es
ss
cmp
out
std
outs
icebp
xchg
out
enter
loop
xchg
int3
test
lods
pop
lea
jmp
push
hlt
mov
add
fst
addr16
xor
enter
and
or
jmp
(bad)
fucomp
jecxz
adc
shr
out
mov
cmp
pushf
jmp
adc
ret
dec
dec
pop
movs
fadd
mov
dec
repnz
fiadd
cmps
pop
test
pop
push
sbb
sbb
or
sahf
dec
shufps
xchg
ret
int3
dec
(bad)
cmp
addr16
mov
mov
push
iret
aas
lahf
int
out
out
sti
out
mov
pop
das
jl
pop
pushf
mov
gs
or
push
or
mov
inc
mov
fstp
cmps
or
(bad)
outs
push
(bad)
mov
stos
or
jne
pop
in
push
aas
ins
dec
and
jp
ror
lds
mov
gs
fisttp
jo
mov
mov
inc
and
sub
jmp
or
fwait
sub
jle
jb
aad
adc
lods
(bad)
das
stos
dec
imul
pop
inc
scas
mov
(bad)
mov
lods
pop
sub
int3
mov
scas
icebp
pop
outs
out
aas
mov
dec
es
adc
pop
jg
inc
mov
and
out
xchg
test
outs
into
fnstcw
or
adc
sbb
fisttp
cs
neg
fisubr
inc
ds
test
pushf
daa
mov
and
cmp
(bad)
fbstp
outs
sub
outs
dec
pop
push
ficomp
stos
shr
pop
jl
add
inc
xchg
jb
add
cmp
(bad)
dec
scas
aam
outs
cmp
jp
test
sbb
loope
rcr
xchg
scas
cld
mov
loop
xchg
xchg
aad
pushf
ud0
popa
(bad)
inc
jge
loope
retf
xchg
dec
cmp
scas
or
into
pop
idiv
push
es
pusha
jne
outs
call
repz
in
scas
push
push
or
fstp
sbb
inc
push
outs
dec
xchg
jnp
fwait
xor
sub
xor
cs
push
es
test
pop
cmps
jle
dec
fisttp
stc
xchg
cmp
test
imul
push
out
mov
mov
arpl
int3
sti
ss
lods
ror
sub
sbb
daa
dec
jge
add
mov
jl
pushf
rol
add
cdq
inc
fild
mov
xor
pop
lock
xor
loope
jo
rcl
adc
pop
les
pop
dec
dec
ins
ja
dec
shl
ss
stos
jl
ret
push
push
push
sub
mov
icebp
scas
dec
mov
or
lsl
fiadd
mov
xor
neg
xchg
mov
push
mov
repnz
jmp
pop
mov
loop
pop
int
(bad)
and
or
das
or
out
addr16
dec
sbb
xchg
je
add
xchg
scas
imul
and
add
cdq
int
out
cmps
mov
adc
popa
inc
jno
inc
movs
popa
call
fild
aam
je
adc
pop
mov
fyl2x
mov
stos
sub
out
mov
or
pop
lahf
into
pop
jmp
xchg
pop
scas
pop
push
test
dec
aaa
pop
aam
mov
sub
fs
jle
jg
sub
sbb
ins
out
popa
mov
xchg
loopne
fstp
fdivr
daa
mov
lea
jge
mov
mov
std
lds
fmul
cmp
push
jle
sbb
xor
adc
push
fisubr
inc
shl
cs
push
dec
(bad)
pop
mov
jmp
stos
pop
iret
bound
out
cmp
inc
iret
fimul
xor
pop
cdq
gs
imul
adc
fcom
int3
iret
and
shl
or
es
pop
popf
dec
mov
dec
ret
mov
mov
retf
ror
and
icebp
in
arpl
dec
inc
mov
xor
ja
cmps
mov
loope
sub
mov
xchg
out
push
(bad)
(bad)
jp
push
xchg
xchg
mov
cmp
dec
push
jg
dec
mov
mov
add
lahf
pop
push
push
in
push
out
pop
(bad)
xor
test
lea
out
dec
sar
ror
sar
jnp
hlt
sbb
enter
out
xchg
push
sbb
jmp
dec
jg
xchg
out
cmps
cmps
ins
xlat
cmovl
in
stos
cmps
sahf
test
mov
xor
jnp
mov
cmps
jl
adc
sbb
mov
jge
jge
dec
arpl
ins
push
xchg
pop
(bad)
push
xchg
in
mov
add
or
outs
ud2
sub
jg
cs
sub
(bad)
jns
mov
sbb
sbb
or
out
aas
mov
sbb
mov
jbe
xchg
cdq
jmp
inc
aas
sbb
sub
arpl
mov
adc
dec
scas
mov
loop
xchg
pop
sbb
test
push
add
cmp
ds
xor
xor
or
cs
mov
fsubr
pop
adc
pop
call
in
cld
in
dec
or
push
xchg
call
outs
outs
add
popa
cmps
cmps
movs
mov
cmc
cmp
fcmovne
cmp
jb
cmps
aaa
out
fwait
ins
rol
(bad)
add
adc
std
(bad)
xor
imul
jmp
inc
fld
aad
cmp
sub
aas
ins
mov
sbb
dec
sbb
imul
cmc
xchg
jp
ins
lods
or
es
mov
test
add
sbb
sahf
cmp
jns
jns
jle
cmp
or
lods
dec
sub
push
or
repnz
pop
mov
mov
in
cmp
cs
call
lea
add
out
pop
out
xor
movs
iret
xor
scas
iret
or
leave
cmc
jmp
sahf
leave
mov
data16
dec
cdq
mov
jle
mov
mov
js
and
wbinvd
jno
add
add
dec
shr
in
(bad)
out
test
push
push
stos
nop
das
jo
and
dec
cli
imul
mov
sub
mov
cmp
mov
push
test
jecxz
fsubr
into
jecxz
bound
or
sub
cmp
mov
jecxz
dec
xchg
scas
sbb
maxps
xchg
in
hlt
scas
dec
cmp
jae
mov
shl
or
mov
xor
shl
pop
sub
push
dec
aam
mov
xlat
mov
pop
data16
sbb
bound
cmp
xlat
outs
out
xchg
sbb
lds
out
fistp
pusha
sbb
mov
jle
inc
cdq
sti
mov
cdq
or
imul
in
jo
or
jb
loope
fucom
cwde
cld
es
ret
sbb
fwait
bound
sbb
jmp
jp
cld
outs
xchg
sub
(bad)
mov
dec
outs
xor
scas
pushf
inc
outs
jbe
push
cmps
out
jg
shld
cmps
cmp
mov
push
dec
imul
fwait
cmp
cli
adc
ja
(bad)
nop
xor
(bad)
setge
mov
or
push
sub
mov
(bad)
xchg
stos
movs
dec
mov
pop
cld
lahf
jecxz
sub
sub
cmp
dec
outs
mov
lods
imul
pop
int
xlat
lea
ja
lea
push
xchg
jne
int3
(bad)
cld
mul
outs
neg
mov
das
sub
mov
push
das
cmc
sub
lods
sahf
add
jle
pop
jmp
call
lods
outs
xlat
pop
xchg
out
dec
sbb
outs
xor
jl
jnp
sahf
scas
femms
pusha
mov
adc
and
sub
bound
rcl
inc
jns
push
xor
push
jnp
add
mov
ja
out
push
mov
push
cmps
add
jg
jnp
push
sbb
or
or
fsubr
mov
fdivr
cmp
ja
pop
xor
jnp
mov
dec
out
test
mov
push
push
fwait
sub
retf
dec
scas
sbb
dec
loope
push
and
lahf
out
sar
divps
xchg
pop
test
jnp
push
and
pop
pop
into
jle
inc
add
sahf
(bad)
xor
retf
pop
mov
jle
(bad)
out
sbb
dec
jp
into
pop
rol
int
shl
(bad)
das
ficomp
int3
xchg
or
(bad)
mov
lea
scas
popa
in
cmps
sar
and
mov
sbb
ja
(bad)
jmp
or
pop
cmp
jle
scas
into
dec
repnz
cmp
push
and
jmp
add
aas
push
sbb
test
fisubr
inc
(bad)
push
fld
outs
mov
scas
add
out
cmps
out
(bad)
push
xchg
mov
or
hlt
stc
fwait
outs
into
loope
cmp
bswap
es
int3
fistp
mov
iret
xor
fstp
lods
int3
retf
jg
jmp
in
mov
scas
jbe
mov
xor
ins
(bad)
stos
inc
clc
mov
dec
std
ret
push
and
sub
push
scas
leave
push
iret
popf
jb
or
adc
add
cmp
scas
mov
mov
mov
cs
in
dec
cmp
jnp
fsubr
pusha
cs
fwait
loopne
cmp
sub
das
data16
inc
cmp
push
out
ds
mov
test
clc
xchg
push
xor
test
mov
jmp
cwde
imul
xor
mov
pop
in
inc
aas
jg
dec
div
jno
mov
or
scas
ds
push
into
mov
gs
test
jg
dec
mov
(bad)
push
popf
outs
sub
pushf
push
repnz
loope
fldcw
test
dec
xchg
das
mov
outs
mov
jg
sub
lahf
jo
sub
fwait
push
out
scas
mov
sub
pop
scas
and
sbb
push
pop
movs
inc
icebp
push
cmp
inc
iret
or
jmp
sbb
aas
das
sbb
cli
das
jo
mov
test
(bad)
(bad)
out
clc
fidivr
hlt
fs
mov
mov
das
das
jbe
dec
cmp
sbb
sbb
lods
stos
jl
hlt
mov
mov
add
out
imul
in
sbb
outs
mov
push
jg
ds
retf
int
sbb
or
outs
cmp
pop
adc
xchg
sahf
mov
ror
out
shr
sbb
or
inc
aas
pusha
push
cli
aas
pop
mov
mov
dec
or
punpckhdq
dec
mov
cmp
mov
cs
test
clc
dec
mov
enter
mov
or
mov
sar
xor
jae
cli
mov
call
fsubr
xlat
call
sub
mov
xchg
minps
jnp
inc
pop
sub
ins
xchg
push
ret
push
sbb
sha1msg1
bound
sbb
sahf
mov
dec
jmp
add
icebp
inc
add
jecxz
vpshaq
in
dec
hlt
adc
jb
cmps
fstp
cmp
out
jns
fdiv
scas
and
xchg
jnp
repnz
mov
ror
sti
add
fistp
rol
cli
pop
das
adc
xor
outs
pinsrw
xor
icebp
iret
cmp
mov
and
addps
jp
jle
jle
cmc
dec
in
cmp
jns
in
(bad)
mov
push
movs
dec
mov
(bad)
das
jge
jge
popa
sub
icebp
xor
add
adc
pop
lods
inc
jmp
(bad)
sbb
in
jb
je
retf
push
pop
mov
jg
pop
scas
in
sub
dec
xchg
in
call
out
push
pop
mov
jmp
and
das
mov
(bad)
mov
js
aas
mov
imul
inc
test
adc
jmp
lock
and
sub
sbb
popa
push
outs
dec
cmp
sub
imul
dec
popf
das
sub
pop
iret
xchg
mov
add
repnz
or
sahf
adc
movs
lods
pop
sub
pop
jnp
xchg
pop
xchg
add
ficom
iret
mov
pop
mov
ds
mov
mov
jbe
fs
std
ja
gs
repnz
jle
stos
js
push
test
add
mov
pop
ja
rol
or
dec
add
dec
test
out
pop
aas
lahf
div
push
(bad)
iret
or
(bad)
movs
push
mov
aaa
jecxz
(bad)
pop
inc
push
add
mov
jg
mov
daa
arpl
xchg
sub
daa
fwait
xchg
sbb
(bad)
pop
sbb
push
jmp
rcl
mov
push
and
lahf
ret
jg
push
cli
scas
imul
test
out
jo
jg
xchg
(bad)
lods
arpl
jo
push
(bad)
sub
data16
mov
sbb
int
das
inc
(bad)
sti
fistp
shl
dec
dec
jmp
mov
inc
inc
xchg
shl
clc
mov
jg
pop
jle
cmp
or
lea
pushf
lods
es
fstp
js
dec
xchg
cmp
adc
mov
ds
shl
inc
adc
sub
dec
mov
and
(bad)
mov
pop
les
(bad)
(bad)
jmp
sub
dec
icebp
das
and
add
fisubr
cmps
and
add
mov
mov
jns
(bad)
sub
ds
sbb
hlt
rcr
dec
fwait
out
xchg
scas
ret
outs
inc
pop
ja
js
int3
dec
push
cmp
lea
inc
mov
mov
bound
mov
add
inc
outs
pop
call
cmc
dec
mov
adc
retf
outs
mov
adc
loop
call
icebp
hlt
pop
xchg
das
inc
mov
mov
std
sti
out
xchg
pop
sbb
mov
and
sub
cmp
sar
push
dec
dec
fisubr
xchg
imul
scas
adc
les
push
mov
ins
(bad)
mov
ds
imul
push
mov
into
xor
int
cmp
ds
outs
mov
aad
push
popf
lods
iret
mov
fisub
bswap
outs
ins
(bad)
cmps
mov
in
pop
inc
(bad)
mov
xchg
inc
push
scas
push
lods
cmps
in
in
push
(bad)
xor
xor
xor
data16
addr16
dec
cld
or
pop
pop
jb
cli
jle
cmp
dec
sub
loop
imul
mov
or
add
imul
mov
outs
gs
out
ds
icebp
sahf
sbb
shl
push
(bad)
sbb
scas
popf
push
minps
aad
xchg
pop
xor
into
lea
or
cs
mov
jg
push
jae
movs
lea
push
xor
scas
ja
jmp
ret
sub
scas
in
sbb
test
nop
inc
sbb
xlat
jmp
mov
jmp
cdq
cli
adc
shr
add
fsubrp
push
push
lahf
fistp
cs
scas
(bad)
retf
in
repnz
cmc
fdivr
adc
loop
outs
mov
cs
(bad)
fs
mov
popf
scas
pop
lahf
xor
dec
std
dec
lock
add
adc
mov
shr
ds
ror
(bad)
retf
(bad)
jne
imul
sti
jmp
pop
jle
ins
outs
mov
mov
pop
sahf
and
pop
inc
and
leave
mov
pop
and
xchg
or
dec
cli
pop
dec
push
xchg
fldenv
sahf
pushf
lods
add
leave
jbe
mov
add
xchg
push
dec
xor
jno
stos
mov
mov
shl
inc
dec
mov
fnstsw
inc
pop
or
pop
push
shr
data16
iret
sub
xchg
mov
dec
add
add
mov
das
and
aas
out
addr16
test
mov
mov
mov
cli
sbb
in
mul
push
repnz
cmps
xchg
fs
imul
push
jl
pop
push
gs
int3
mov
sub
cmp
fstp
scas
mov
mov
push
mov
jge
push
mov
retf
stc
pop
(bad)
jmp
or
jge
or
fadd
xchg
test
xchg
mov
jno
ret
pushf
lahf
sbb
pop
leave
ja
pop
not
loop
inc
movs
les
lea
sar
jp
push
sub
ja
scas
dec
mov
sar
dec
pop
aas
cmc
xchg
cs
out
fidivr
jecxz
adc
xor
das
test
jle
shl
ja
test
pop
pop
sub
inc
mov
xchg
push
xor
rcl
inc
bound
push
arpl
xchg
pop
push
mov
jno
mov
xchg
inc
mov
add
(bad)
fs
sub
or
(bad)
jl
inc
mov
hlt
mov
and
in
int
or
ja
ins
push
scas
(bad)
test
cmc
or
xor
sbb
test
aaa
aaa
imul
in
inc
es
push
mov
cmp
les
jg
ja
call
inc
push
cs
mov
pop
gs
dec
pop
fdiv
mov
imul
out
leave
fst
lahf
(bad)
imul
stc
cmp
scas
popf
dec
cs
push
imul
lods
mov
cmp
jg
in
or
xchg
pop
add
out
cmps
mov
mov
sbb
fwait
aas
movs
and
dec
mov
pop
cmp
sbb
sahf
push
sub
push
sbb
xor
ror
test
loop
stc
aad
(bad)
arpl
dec
pop
push
mov
jp
(bad)
xor
jmp
mov
sahf
into
inc
lea
scas
jle
cwde
sub
outs
and
fcom
fbstp
addr16
dec
push
(bad)
mov
push
and
push
addr16
outs
addr16
sub
scas
ret
push
fbstp
pop
and
adc
into
jmp
inc
out
cmp
ja
popf
iret
popa
fiadd
fs
pop
xor
mov
movs
test
sbb
sub
push
cmp
push
cmps
adc
mov
lods
push
outs
dec
dec
mov
mov
inc
(bad)
pop
arpl
aas
xchg
outs
(bad)
mov
in
or
fistp
out
jne
sbb
push
(bad)
cmp
sub
icebp
mov
jl
in
pop
lds
mov
call
mov
inc
cmp
pushf
cmp
jno
fistp
jge
fsubr
sbb
mov
add
lds
or
jg
xchg
imul
out
xor
arpl
mov
jmp
outs
js
xchg
or
repnz
cmp
gs
(bad)
jmp
stc
push
retf
mov
or
jmp
xchg
das
hlt
pop
sbb
jb
pushf
or
scas
imul
sbb
xor
push
cdq
dec
sti
das
mov
js
push
out
sub
jmp
pop
lods
dec
cmp
outs
inc
fistp
icebp
(bad)
xor
cmp
movs
mov
xor
call
aaa
imul
fiadd
sbb
in
popf
repnz
test
mov
jmp
dec
sub
ins
mov
das
xchg
jg
mov
push
(bad)
out
sub
xchg
mov
xor
stos
sbb
fsubrp
jnp
call
scas
nop
sub
jnp
sub
in
cmp
sbb
xlat
cmp
jp
xchg
dec
setl
xchg
out
scas
sbb
outs
xlat
outs
mov
(bad)
test
mov
or
daa
cmp
test
mov
addr16
pop
sub
dec
pop
das
sti
popf
(bad)
loope
inc
fadd
pop
push
jae
cmp
jmp
push
loop
mov
(bad)
(bad)
mov
sub
sub
dec
sbb
inc
arpl
xchg
mov
in
pop
jecxz
outs
xor
push
jle
outs
mov
jmp
dec
sbb
cdq
sub
pop
cwde
jne
cmp
ins
shr
dec
cmp
cmovg
jnp
ins
dec
loopne
jmp
repz
(bad)
in
jle
(bad)
pop
shl
lods
fwait
pusha
addr16
dec
fcmovb
cmp
sbb
ds
xlat
dec
dec
pop
push
call
outs
scas
cmps
sti
mov
in
int3
dec
jge
xchg
(bad)
sub
ret
aas
mov
out
aas
mov
std
inc
outs
test
pop
jmp
push
mov
xor
xchg
cli
fisttp
iret
cmp
sbb
outs
add
scas
sub
sbb
fild
jo
ror
imul
pop
mov
dec
mov
ins
cmc
push
das
idiv
test
enter
pop
movs
jle
sub
fild
fidivr
or
outs
(bad)
jl
pushf
sbb
pop
sbb
aas
push
call
std
cwde
mov
sar
jge
mov
repz
sub
jmp
pop
inc
mov
inc
lods
lods
jle
neg
retf
test
iret
add
mov
inc
daa
push
mov
(bad)
jmp
fiadd
fistp
icebp
pop
pop
mov
out
ficom
or
sbb
popa
inc
pop
adc
(bad)
dec
clc
retf
ins
jno
mov
int
mov
lods
push
jno
in
daa
icebp
and
movs
xchg
jne
sub
mov
aaa
pop
pop
jo
das
sub
stos
scas
iret
stos
adc
mov
imul
daa
push
inc
inc
test
lahf
enter
mov
or
xor
dec
and
iret
ror
mov
outs
pop
pand
hlt
xor
pop
fisttp
push
mov
mov
(bad)
int3
pop
sub
(bad)
sbb
cmc
and
test
pop
subps
mov
cli
inc
int3
mov
lods
xor
mov
cmovg
addr16
xor
push
push
push
xlat
add
pop
loop
mov
into
pop
les
cwde
pop
cs
jmp
sub
pop
retf
ins
jg
aaa
rcr
iret
mov
push
popa
pop
icebp
lods
push
and
or
pop
and
push
jmp
or
stc
push
xor
jl
pop
add
scas
mov
adc
sub
fisubr
adc
dec
or
mov
(bad)
hlt
cmp
je
lods
ds
push
outs
scas
imul
out
push
adc
movs
mov
repz
aad
sub
icebp
inc
ror
fisub
bound
scas
sbb
sti
ss
je
scas
or
in
in
rcl
pop
scas
pop
retf
push
fimul
inc
ss
loop
or
out
sbb
cmp
xchg
(bad)
lods
jg
add
mov
push
add
pop
mov
pop
(bad)
xsavec
push
fs
jp
pop
dec
(bad)
scas
jg
divps
sbb
mov
xlat
dec
mov
cld
ss
imul
and
addr16
adc
scas
es
or
xchg
push
lods
jne
scas
fisubr
dec
into
loopne
pop
push
sahf
dec
test
imul
lahf
pop
mov
push
inc
(bad)
aaa
dec
xchg
test
jns
cld
scas
icebp
sub
sbb
stc
fistp
shr
xor
add
(bad)
std
cmp
test
and
pop
fist
(bad)
std
and
jb
cs
scas
adc
pop
ss
inc
or
adc
and
pop
mov
icebp
mov
out
push
cmp
mov
iret
cmp
arpl
sbb
mov
pop
jmp
das
daa
jg
jg
xchg
jecxz
(bad)
and
stos
ins
(bad)
jle
sahf
jmp
iret
push
int
mov
and
ror
mov
scas
movs
mov
test
xchg
jne
adc
adc
push
mov
lods
fisttp
mov
(bad)
mov
cwde
outs
jle
jo
fistp
add
(bad)
ja
addr16
nop
outs
xchg
outs
and
(bad)
jnp
outs
mov
dec
push
icebp
cmc
scas
aas
movs
push
test
mov
jae
xchg
jns
fidiv
adc
int
sbb
stos
hlt
mov
mov
outs
dec
in
and
bound
mov
dec
out
xor
mov
dec
push
scas
int
push
fild
push
mov
mov
outs
cmps
stc
arpl
mov
mov
and
and
push
mul
lods
dec
or
das
or
mov
dec
pop
das
push
stos
enter
ss
movs
iret
mov
fiadd
jbe
add
mov
dec
xchg
loope
adc
into
sbb
nop
cmp
scas
fwait
jae
pop
dec
push
xchg
outs
adc
pop
int3
dec
jno
cmc
outs
sub
xchg
outs
cwde
(bad)
and
int
dec
scas
mov
popf
sub
pop
or
fdivr
jb
pop
dec
test
jno
adc
fs
or
adc
dec
cdq
push
in
out
pop
icebp
mov
sub
mov
les
ret
into
dec
mov
cmp
dec
lea
scas
ret
sbb
inc
push
ror
icebp
test
push
cwde
sub
pop
call
ja
imul
push
daa
push
mov
sbb
xchg
jg
es
lds
imul
mov
xchg
jnp
iret
aaa
jmp
sub
test
mov
jle
in
jg
sbb
pop
std
xchg
jmp
xlat
sbb
fwait
add
cs
sbb
inc
inc
repz
aas
inc
sub
sub
lods
and
bound
sbb
or
std
shl
mov
mov
scas
sub
leave
outs
lods
mov
mov
shl
mov
into
pop
xor
jg
pop
stc
dec
mov
fld
push
cmp
pop
mov
nop
inc
xchg
imul
inc
les
retf
mov
inc
pop
mov
mov
out
js
(bad)
pop
mov
xchg
daa
leave
fmulp
std
dec
pop
pop
in
popa
ficomp
aam
jle
(bad)
sbb
cmc
cs
mov
sub
jg
lahf
pop
add
ins
test
popa
dec
(bad)
dec
popa
adc
jo
aaa
xchg
jno
jmp
xlat
scas
push
jp
jmp
cmp
mov
adc
cdq
pop
outs
in
leave
jle
cmp
iret
jp
retf
inc
(bad)
mov
fiadd
(bad)
sahf
xchg
(bad)
scas
push
sti
fstp
sbb
aas
test
das
pop
sbb
loopne
pop
sbb
arpl
les
(bad)
(bad)
(bad)
cs
sbb
sub
pop
cmp
std
hlt
xor
dec
shl
ror
addr16
xchg
fstp
xchg
bound
stos
test
aad
sbb
jg
push
pop
inc
pop
adc
jmp
sub
scas
add
ins
icebp
mov
jnp
dec
fisttp
jge
cmp
popf
mov
mov
lahf
shld
xchg
pop
aas
mov
jmp
pop
mov
aaa
sub
or
std
loope
scas
sub
push
mov
dec
pop
cli
cdq
mov
stos
xor
inc
lds
gs
add
sub
xor
push
ja
mov
xlat
cmp
pop
xchg
xchg
fucomi
fwait
mov
out
or
stc
out
cmps
inc
imul
scas
pop
push
add
inc
gs
sbb
lea
xchg
jg
sub
(bad)
fimul
or
add
fisubr
ins
fistp
mov
dec
cld
sti
out
test
std
scas
cwde
(bad)
or
out
shl
(bad)
mov
cvtps2pd
pop
cli
xchg
and
(bad)
adc
aas
jge
and
(bad)
push
sub
xor
popf
out
in
out
sub
push
jns
push
(bad)
enter
je
xchg
cmp
mov
out
xor
(bad)
in
sub
out
jp
cmp
loope
mov
inc
or
xchg
aas
sti
push
pusha
cld
sahf
sbb
fs
das
xchg
push
xlat
push
daa
repnz
rcr
imul
outs
cs
shr
out
sbb
fcmove
jb
jecxz
lahf
dec
or
outs
shr
inc
das
adc
cmp
and
stos
mov
call
cmovge
in
sbb
sahf
dec
(bad)
jmp
aas
cld
inc
or
test
in
dec
popf
cmp
xchg
jne
in
mov
call
lods
out
inc
and
fbld
xchg
mov
call
popf
sbb
das
or
repz
jmp
xchg
das
loop
jge
test
dec
or
ficomp
push
or
aaa
mov
xchg
add
jecxz
sbb
dec
in
lahf
mov
and
or
fimul
(bad)
std
dec
sar
push
repnz
add
enter
or
mov
push
loopne
sub
push
pop
inc
cwde
xchg
xadd
pop
fs
ins
dec
adc
adc
iret
or
imul
cmps
cmp
mov
pop
out
mov
mov
push
data16
jge
or
mov
movs
cmp
mov
loop
push
inc
or
lods
jnp
pop
xchg
xor
test
pop
dec
dec
stos
(bad)
push
stc
test
fistp
inc
dec
dec
sbb
iret
retf
(bad)
xchg
dec
xchg
add
into
ja
pop
cmp
scas
push
inc
xchg
xchg
bound
jmp
div
push
jne
cwde
pop
ds
mov
pop
retf
js
pop
cmps
adc
ja
aaa
lds
push
and
or
pop
xchg
push
sub
xchg
xor
ins
std
add
dec
pop
inc
adc
sar
mov
das
ins
call
arpl
iret
addr16
mov
outs
imul
outs
movs
add
xchg
xchg
mov
ins
out
inc
shr
cs
fcmovb
pop
mov
leave
int3
cmps
fs
idiv
leave
sbb
clc
jl
clc
test
pop
jmp
mov
jg
loopne
mov
xlat
mov
inc
cmps
fmulp
mov
iret
cmp
cli
faddp
fstp
jno
popf
push
popf
xchg
inc
in
mov
and
sbb
sbb
fcmove
lods
jmp
in
mov
(bad)
sbb
fwait
mov
pop
adc
std
xor
das
(bad)
std
scas
pop
xor
daa
shl
fcmovnu
fisttp
inc
scas
mov
cmp
cmps
aas
sbb
popf
push
inc
dec
mov
(bad)
cs
xor
pop
maxps
iret
jp
inc
movs
pop
dec
iret
in
and
mov
jge
lea
mov
jno
fcom
pop
pushf
pop
into
xor
das
iret
push
add
and
ficomp
test
inc
aas
push
jb
fcmovu
xlat
xchg
rcr
or
dec
mov
pop
adc
addr16
mov
imul
or
dec
test
aaa
or
call
dec
fsubr
(bad)
repnz
call
mov
loop
popf
mov
stc
test
jo
xchg
sbb
dec
int
lock
pusha
mov
fwait
nop
inc
fst
mov
div
movs
pop
pop
jb
sub
jmp
add
push
leave
or
inc
cmp
sar
adc
jno
xor
icebp
pop
out
ficom
movs
fdiv
int
ret
mov
and
sbb
aaa
leave
jae
(bad)
dec
jne
scas
into
aas
and
inc
das
inc
pop
xor
out
popf
adc
push
ins
pop
push
xchg
test
jmp
scas
aas
lahf
and
call
mov
lods
push
mov
retf
jmp
outs
sar
retf
ds
mov
lock
call
(bad)
lahf
lds
call
in
pop
mov
cdq
push
push
jg
sub
int
cs
mov
icebp
sar
adc
pop
lods
(bad)
fidivr
mov
add
ret
test
out
jecxz
mov
in
les
push
and
pop
retf
mov
mov
ins
outs
add
mov
push
popf
fstp
leave
jbe
mov
xchg
lahf
call
jnp
add
aaa
ret
and
cmp
loope
(bad)
std
xchg
lahf
push
cld
mov
stos
cmp
adc
pop
jne
movs
mov
xchg
sbb
int
clc
mov
push
rol
cdq
shl
fidivr
in
adc
and
dec
scas
push
(bad)
out
cdq
xchg
movs
mov
(bad)
cwde
imul
and
push
bound
jge
std
(bad)
outs
adc
scas
fidiv
xlat
xchg
fcomp
iret
jno
mov
sahf
push
jl
or
or
pop
imul
mov
push
gs
ja
imul
fwait
gs
adc
xlat
push
fisttp
into
call
(bad)
je
test
fst
xlat
mov
ins
stos
mov
iret
ret
mov
into
fisttp
std
ins
fidiv
push
sbb
fld
xlat
scas
rcr
or
jge
cli
cmp
mov
adc
cmps
pop
adc
and
adc
ins
outs
jns
xor
out
dec
jg
dec
test
cmp
jno
push
arpl
fmul
jg
add
out
xchg
mov
out
xchg
jmp
xchg
in
inc
dec
retf
fwait
retf
adc
jg
pop
jbe
repnz
push
jne
mov
iret
into
xor
cli
scas
or
jae
adc
rol
iret
bound
or
sar
out
(bad)
inc
test
pop
imul
push
xor
jge
dec
fldenv
les
adc
cmps
(bad)
sbb
popa
popa
dec
in
jns
std
lods
das
mov
pusha
fistp
push
jnp
sbb
xor
mov
jge
xchg
mov
(bad)
enter
jmp
in
and
dec
xchg
xor
pop
adc
inc
js
iret
pop
repnz
inc
lock
leave
push
call
cdq
loope
or
(bad)
cdq
pushf
test
out
inc
jne
mov
es
inc
addr16
in
into
popa
mov
mov
ja
imul
pop
(bad)
xchg
mov
daa
cmp
lock
sub
and
sar
sahf
scas
mov
mov
adc
ins
jle
dec
xlat
scas
fist
mov
test
sar
xor
jo
jmp
xchg
scas
sub
jmp
sbb
dec
cmp
(bad)
cmp
push
sub
xor
iret
enter
(bad)
sbb
clc
jne
(bad)
jg
or
out
aad
mov
wrmsr
add
(bad)
dec
or
ds
ja
inc
jg
inc
out
(bad)
sbb
pop
in
lahf
loope
add
repz
or
arpl
push
sub
sub
xchg
or
daa
mov
mov
pop
sbb
cvtps2pi
and
adc
add
inc
fadd
mov
icebp
inc
pop
pop
push
arpl
aas
adc
not
scas
and
mov
int3
jl
xchg
cmps
outs
mov
fs
xchg
outs
xor
sub
mov
cmp
mov
jne
add
popf
sbb
test
(bad)
jg
je
mov
pop
stos
add
jmp
das
sahf
test
lock
mov
push
iret
ret
pop
je
lock
out
ror
pop
(bad)
scas
sbb
pop
sbb
leave
xchg
jnp
loopne
sbb
into
out
xchg
int
je
mov
in
idiv
xor
outs
fist
jmp
adc
lods
mov
rol
dec
repz
and
je
imul
sbb
scas
das
aas
(bad)
(bad)
stos
(bad)
mov
sub
aaa
xchg
xor
xchg
sahf
out
push
cmps
dec
mov
out
(bad)
pop
inc
jge
bswap
test
jns
inc
das
jmp
pop
push
nop
xlat
jg
cmp
fdiv
fnstsw
out
dec
cmp
iret
sbb
sub
mov
out
fadd
sub
jmp
dec
add
movs
(bad)
(bad)
nop
(bad)
xchg
popf
(bad)
out
and
imul
sbb
retf
out
pop
pop
retf
and
mov
mov
mov
dec
mov
imul
loope
inc
jbe
mov
pop
jns
mov
ins
jmp
fsubr
out
fidivr
adc
mov
stos
dec
dec
adc
push
jge
lods
or
cmp
jl
mov
inc
push
scas
push
das
daa
sbb
addr16
ja
adc
dec
push
and
push
dec
ins
inc
scas
das
dec
(bad)
stos
mov
arpl
push
cwde
aam
dec
mov
retf
adc
or
outs
pop
jnp
pop
stos
outs
jmp
aam
mov
and
jne
or
out
mov
cmps
loope
mov
pop
stc
xor
mov
pushf
jg
movs
scas
xchg
cmp
iret
icebp
in
movs
and
pop
xlat
popf
in
pop
cmovo
push
(bad)
(bad)
fsub
push
push
sbb
adc
jl
popa
scas
push
das
pop
adc
mov
mov
inc
and
(bad)
les
repz
out
pushf
lods
pop
xlat
pop
fistp
fsin
xchg
mov
rcr
fs
mov
pop
inc
add
ja
in
xchg
xor
mov
(bad)
popa
and
ins
and
mov
mov
iret
lahf
pop
outs
jmp
sahf
jmp
loopne
je
les
pop
add
gs
jne
dec
push
out
cli
sbb
retf
sti
mov
mov
lea
pop
dec
sub
aas
dec
push
sub
gs
jecxz
jo
xchg
movs
stc
sahf
jmp
adc
and
pop
push
outs
cmc
aas
mov
(bad)
cs
pop
xchg
jne
push
retf
adc
xor
rcl
xlat
or
mov
inc
outs
dec
mov
pop
xchg
or
imul
mov
in
out
cmp
push
adc
clc
test
pop
dec
out
or
cvtdq2ps
dec
xlat
fnstcw
es
xor
(bad)
jecxz
jg
fist
fidivr
outs
push
jb
in
mov
push
ret
call
jb
inc
push
shl
dec
inc
xor
sub
xlat
mov
inc
sahf
mov
out
mov
push
jnp
adc
fisttp
or
or
xchg
fistp
out
lods
aaa
dec
ja
jne
lahf
fisub
inc
xor
jae
push
jg
addr16
jmp
scas
dec
call
cmovae
imul
pop
adc
ins
mov
retf
xor
shl
cmp
paddw
out
daa
push
xor
mov
jg
cmp
mov
jecxz
fwait
sbb
ja
mov
imul
pop
divps
mov
push
xor
dec
pusha
mov
call
cmps
fwait
imul
add
iret
xor
lahf
rcr
out
jo
or
mov
push
push
scas
mov
jg
and
lea
inc
mov
jo
in
stc
pushf
test
(bad)
pop
retf
jbe
cmps
jl
sub
ror
retf
mov
lods
ins
iret
and
loope
outs
arpl
out
push
sbb
fnsave
aas
loop
jb
imul
xchg
ds
pop
leave
lds
jg
not
fucomp
sbb
rcl
loope
xchg
ret
xchg
in
fmul
jle
das
repnz
mov
add
test
movs
lahf
or
(bad)
push
xor
dec
xchg
push
or
scas
repnz
jmp
jmp
cmp
out
jmp
shr
xlat
push
and
stc
(bad)
je
push
or
stos
aas
movd
add
out
or
push
jns
out
jbe
jp
add
xchg
sub
push
rcr
aas
jp
(bad)
in
dec
rol
imul
mov
xor
pop
jmp
das
push
adc
aas
std
mov
xchg
enter
stos
pop
pop
fs
pop
(bad)
pop
inc
outs
sbb
iret
sysret
pop
fimul
sub
loop
outs
push
sbb
mov
ins
pop
pop
inc
(bad)
xchg
mov
in
cmps
mov
out
repnz
(bad)
ins
test
fsub
sahf
sbb
and
adc
les
dec
pavgb
outs
push
adc
xor
push
pop
les
popa
push
out
cld
push
jg
pop
xchg
dec
nop
fmul
rol
dec
inc
dec
in
pop
repnz
or
adc
sub
push
frstor
fst
mov
les
lahf
jnp
inc
rcl
pop
in
loopne
ret
jo
js
xor
jns
out
daa
xchg
gs
aad
xor
dec
scas
jge
les
and
mov
xchg
sub
fild
ss
dec
das
sub
and
mov
test
and
xor
(bad)
mov
mov
mov
jnp
add
or
pop
inc
jg
loope
or
push
push
adc
pop
jg
daa
dec
ds
in
xchg
jne
aas
push
mov
ss
xlat
dec
outs
pop
xor
inc
call
mov
fs
mov
stos
lock
addr16
popf
fmul
pop
pop
(bad)
lock
dec
mov
jbe
ret
mov
ffreep
pop
sbb
or
pushf
xchg
(bad)
call
fistp
scas
xchg
mov
aad
fwait
in
and
bound
scas
add
mov
xor
loopne
jle
ins
fistp
dec
xchg
jno
push
out
mov
dec
fstp
or
cmp
jns
std
psrld
out
push
pop
mov
pop
xchg
leave
call
sub
cmps
fistp
clc
pop
aas
jge
inc
jecxz
dec
test
out
dec
sub
das
mov
and
inc
add
pop
popa
into
jb
xor
add
outs
sub
cmps
push
data16
ins
add
ja
rcr
inc
push
pop
imul
das
ja
out
out
xchg
mov
pusha
mov
mov
mov
add
mov
adc
inc
push
das
(bad)
outs
lods
(bad)
outs
fucomip
sbb
mov
mov
lods
cmps
mov
jmp
retf
sbb
pop
(bad)
es
cmp
push
sub
outs
fisttp
jns
pop
lods
inc
xchg
pushf
sbb
sbb
jecxz
imul
sub
add
retf
aas
outs
stos
inc
sub
loope
gs
push
mov
jmp
adc
add
fld
push
out
stc
rol
rol
in
xor
mov
xchg
dec
fsubr
ja
iret
cs
dec
mov
jmp
pop
cli
push
push
pop
out
scas
(bad)
ja
scas
sbb
and
sbb
gs
inc
fstp
dec
jns
aas
cld
daa
xor
lahf
cmc
inc
xchg
pop
bound
mov
popa
test
(bad)
mov
mov
ud2
out
gs
fnsave
dec
fisttp
lahf
jl
scas
mov
fild
mov
das
dec
fbstp
stos
dec
out
push
out
mov
ror
imul
mov
rol
outs
pop
cmp
pop
(bad)
icebp
pop
pop
dec
pop
clc
pop
fdiv
sub
out
pop
int3
dec
(bad)
jbe
add
fcom
repnz
into
fst
leave
mov
mov
fmul
jl
dec
sbb
pop
dec
mov
ja
jne
int3
mov
cmp
mov
ins
jg
fistp
dec
sbb
test
xor
outs
sahf
cwde
in
sahf
mov
lahf
cdq
loope
repnz
movs
into
xchg
cmp
cmps
loopne
pop
arpl
ss
add
ret
scas
into
es
in
cmp
std
int
ret
outs
lahf
sub
(bad)
jmp
frstor
aad
xchg
les
xchg
inc
jb
mov
xchg
fdiv
inc
cmp
cmps
or
popa
mov
fcom
gs
in
mov
(bad)
mov
inc
aas
(bad)
adc
or
test
pop
mov
push
push
cs
int3
push
(bad)
pop
xor
aam
pop
or
call
es
ds
(bad)
in
scas
mov
cmps
loope
pop
fcmovbe
pop
push
sub
call
cli
call
lods
scas
xchg
xchg
retf
push
xchg
(bad)
fisttp
(bad)
jg
(bad)
mov
sub
adc
dec
mov
sahf
cmps
(bad)
out
out
pop
pusha
or
add
sbb
sub
xor
pop
inc
in
ror
aas
dec
in
stos
dec
sahf
clc
pop
sub
mov
in
scas
call
xchg
add
dec
out
push
loopne
test
out
ret
fistp
cs
pushf
mov
xor
dec
mov
addr16
mov
mov
sub
jmp
movs
std
and
data16
call
into
mov
hlt
push
in
xchg
leave
popa
cdq
dec
cmps
int
pop
or
adc
aas
das
stos
jo
(bad)
mov
cmps
push
pop
mov
lea
pop
jnp
sbb
adc
lods
pop
test
leave
jl
loope
push
stc
or
pop
iret
add
push
mov
outs
outs
(bad)
inc
fld
leave
ds
aaa
sub
pop
cmp
(bad)
sahf
(bad)
sbb
xor
(bad)
pop
(bad)
stos
outs
out
mov
pop
sub
adc
push
lods
fiadd
xchg
lods
xchg
cmp
sub
pop
fucomip
aas
sub
cmc
scas
out
cmp
add
pop
mov
stos
ret
jl
dec
mov
movs
outs
ins
stos
fimul
cmp
xor
lock
dec
int
or
dec
out
outs
js
jno
push
jne
jg
dec
pop
mov
pop
jecxz
cli
pop
int3
pop
out
out
mov
mov
mov
iret
jae
push
imul
mov
out
dec
add
std
es
mov
pusha
fist
pop
pop
popa
fs
ret
je
in
push
shl
cld
mov
cmp
retf
sbb
or
mov
add
xlat
mov
jno
out
inc
cs
or
bound
sahf
sahf
or
and
cmc
repnz
dec
jmp
pmaxub
cwde
out
out
out
mov
adc
popf
dec
sbb
push
pop
cli
dec
xchg
jnp
pop
(bad)
fstp
sahf
and
xchg
push
js
aas
ds
dec
das
pop
and
sbb
push
cmp
fadd
xchg
mov
call
imul
pop
sbb
jge
cmps
rol
into
xor
mov
mov
std
xchg
sahf
cmp
xchg
mul
test
cmp
add
jp
stos
or
call
push
test
or
out
scas
sti
scas
inc
lods
push
or
pop
adc
and
shl
mov
mov
fbld
cmps
aam
(bad)
mov
(bad)
mov
test
sbb
mov
jp
mov
neg
fwait
stos
xchg
pop
div
test
movs
out
mov
inc
std
dec
out
dec
call
xlat
cld
ins
call
hlt
call
daa
add
push
mov
sahf
push
xchg
jge
push
xor
sahf
mov
jmp
outs
shl
jp
pop
xor
retf
sahf
int
cmps
loope
pop
repnz
xlat
sbb
aaa
xlat
pop
cld
jmp
in
dec
adc
mov
or
or
lods
sbb
mov
shr
sbb
pop
pop
mov
mov
push
je
and
jno
mov
jge
fcmovnu
outs
inc
and
in
and
sahf
call
push
mov
cmp
jge
scas
pop
lods
dec
das
test
mov
and
in
xlat
pop
fdivp
jb
test
lods
add
outs
ins
fiadd
xchg
dec
imul
jmp
repz
dec
push
outs
push
add
ret
dec
cmps
fs
aaa
sahf
xchg
in
frstor
push
and
cmove
sahf
xor
sahf
xor
in
push
add
(bad)
jnp
call
test
fwait
jg
dec
mov
sub
jo
loopne
mov
xchg
and
push
or
iret
in
sbb
pop
xor
in
xchg
or
pop
inc
push
pop
pop
xchg
pop
cmps
rcr
(bad)
out
repz
(bad)
pop
ror
cdq
lahf
movs
dec
pop
sbb
dec
iret
fldcw
pop
out
mov
sbb
xchg
pop
xchg
ror
cld
out
cld
jbe
pop
xor
mov
pop
push
ss
popa
xor
in
fnstsw
int
fisttp
retf
jge
mov
shr
inc
sbb
inc
fucomi
inc
sbb
add
inc
mov
jl
push
mov
cmp
ror
stos
out
or
aas
icebp
push
dec
or
push
mov
int3
sti
or
retf
imul
iret
sar
mov
retf
les
out
sbb
packssdw
lea
xchg
addr16
movs
sub
pop
mov
xchg
push
adc
into
fistp
(bad)
(bad)
pop
imul
(bad)
fist
pop
fimul
js
pop
dec
inc
cmps
push
out
add
loop
movs
cmp
(bad)
in
pop
jnp
iret
mov
xchg
out
mov
loope
mov
das
jo
lods
xor
popf
cmp
(bad)
cmps
jnp
arpl
test
bound
add
push
push
mov
scas
outs
fnstsw
mov
pop
loop
inc
push
ins
sbb
jl
mov
push
cwde
mov
or
popf
add
adc
std
sub
jl
ins
xor
jo
test
daa
adc
movs
loop
add
sbb
or
sti
inc
into
push
aam
pop
rcr
pop
pop
push
arpl
aas
jl
sbb
pop
sahf
jg
xor
mov
stc
loope
les
fnstsw
mov
sub
mov
xor
(bad)
xchg
push
das
ins
dec
mov
dec
pop
dec
imul
sub
outs
int3
ret
loopne
jmp
(bad)
adc
dec
call
add
jg
pop
or
mov
xor
dec
leave
std
loop
in
pop
push
jns
mov
jg
or
jg
fistp
push
push
or
push
fild
jge
into
lahf
add
sub
add
jmp
pop
push
movs
stos
jp
pxor
cdq
xor
xor
fmulp
or
mov
test
sub
scas
scas
mov
aas
sbb
mov
adc
cld
mov
fist
test
adc
mov
push
aas
cmp
repz
pop
out
stos
sub
aas
mov
lahf
mov
test
daa
lods
(bad)
xchg
jb
scas
jmp
in
outs
pushf
pop
cmp
jl
pop
cmp
inc
jle
inc
dec
push
inc
pop
push
add
cmps
and
rcl
add
push
in
data16
sub
push
sahf
pop
fisttp
int3
stos
(bad)
jns
pop
mov
mov
sub
mov
cld
mov
(bad)
and
not
mov
sub
pop
jns
jmp
sub
or
dec
int
cld
fwait
and
fldenv
gs
push
ret
idiv
(bad)
inc
xchg
rcl
rcl
jmp
frstor
stos
xor
aad
fild
mov
and
jno
jg
pop
inc
mov
pop
mov
cdq
pop
pop
mov
cmp
lds
sbb
or
aas
pop
mov
mov
test
arpl
fcomi
je
pop
cmp
test
jl
mov
aaa
mov
mov
rol
dec
outs
int3
icebp
pop
lahf
jge
repnz
and
xor
pop
inc
dec
loopne
xchg
out
fldenv
daa
cdq
cmp
je
sti
pop
mov
inc
sub
cld
mov
push
cmp
jp
(bad)
outs
xlat
mov
into
sbb
fcom
xchg
sahf
mov
adc
dec
pop
je
out
mov
dec
inc
loop
daa
dec
(bad)
cdq
ins
movs
push
test
xchg
jge
sahf
stos
repz
sahf
cmp
jg
push
dec
pop
(bad)
out
fidivr
popf
pop
loop
sti
stc
xor
mov
dec
add
add
sti
lea
lahf
stos
mov
out
imul
in
jmp
push
sub
out
inc
inc
add
jne
mov
sbb
push
(bad)
aas
push
ds
jg
in
pushfw
sbb
imul
sahf
cmp
push
pusha
adc
mov
fcomp
mov
outs
cmp
push
idiv
std
push
and
scas
add
(bad)
mov
mov
cmp
push
out
iret
outs
jge
loopne
sub
xchg
and
(bad)
jmp
push
enter
xchg
ret
lods
pop
mov
pop
fisubr
sub
or
shl
imul
loope
sbb
aas
mov
hlt
(bad)
jmp
sub
pop
cmovg
(bad)
xor
and
sub
inc
sub
cmp
adc
mov
sahf
jbe
jg
jge
ja
or
add
dec
loopne
dec
and
xlat
xchg
out
cmp
ror
lahf
(bad)
jle
jne
mov
push
dec
das
add
pop
inc
aaa
sbb
ret
dec
xor
cmp
aas
adc
(bad)
push
dec
rcr
sub
sahf
dec
clc
pusha
dec
add
xchg
push
mov
(bad)
(bad)
fwait
je
(bad)
movs
dec
std
call
xor
cmp
inc
outs
xchg
mov
jge
or
sbb
mov
or
cmp
and
mov
sahf
or
test
in
or
pop
das
mov
sbb
mov
iret
cmp
push
cmp
test
pop
jbe
pop
jmp
mov
(bad)
out
arpl
push
not
or
rol
mov
lods
aaa
scas
push
or
fsubr
cmp
(bad)
shl
daa
inc
cs
aad
jg
push
out
and
arpl
cmp
loop
sbb
ins
pop
outs
pop
pop
or
sub
pushf
aaa
sub
dec
lock
mov
xchg
pop
jno
jg
mov
out
sbb
pop
sub
mov
ja
pop
retf
xchg
dec
jl
daa
ja
stos
stc
in
outs
arpl
sub
cs
mov
mov
or
out
aad
outs
neg
mov
mov
jmp
push
int3
jge
pop
(bad)
xchg
mov
outs
sbb
into
dec
xchg
loope
in
dec
cs
stc
pop
fidiv
or
mov
mov
into
push
call
dec
aas
ja
dec
movs
pop
mov
stos
sub
mov
sar
dec
jge
int
enter
fmul
mov
pop
jnp
xchg
sahf
repnz
jno
scas
jae
sub
push
mov
pop
or
clc
mov
shr
mov
dec
fcmovnb
jle
popf
pushf
lahf
fabs
int3
sub
cld
mov
dec
cli
sub
xor
add
fild
pushf
repnz
and
xlat
mov
outs
xchg
lods
aas
mov
sub
jg
dec
into
outs
fs
xor
ficomp
xlat
cld
mov
xchg
mov
sbb
mov
cmp
movs
xchg
out
pop
mov
std
pop
jmp
jl
(bad)
push
cmc
std
xchg
pusha
xchg
pop
sub
orps
cmp
sub
pop
fdivr
cmp
repz
dec
aad
pop
div
pop
mov
mov
sub
jo
outs
ret
fimul
lea
sbb
call
sub
pop
das
xor
out
into
int
sbb
ins
push
aaa
sbb
inc
add
lahf
add
sbb
push
mov
or
sahf
or
lahf
mov
add
test
mov
jmp
movs
mov
std
mov
inc
mov
mov
dec
(bad)
es
xor
adc
cmp
mov
fist
mov
xchg
sahf
outs
and
adc
lahf
gs
jg
adc
mov
scas
(bad)
mov
adc
icebp
add
pmaxsw
jno
iret
sbb
scas
fidiv
sahf
mov
lock
pop
test
fstp
sub
aaa
pop
call
push
push
add
jnp
dec
iret
pop
pop
push
in
push
aas
jp
and
add
fisttp
cmps
mov
cdq
xor
(bad)
je
out
mov
les
inc
jne
(bad)
mov
movaps
jno
mov
push
sub
ss
inc
sbb
(bad)
out
mov
push
aaa
outs
rep
adc
xor
mov
(bad)
ror
add
and
pop
cmp
outs
push
scas
pop
inc
mov
mov
imul
aas
adc
sti
sahf
lahf
lds
add
push
mov
pop
out
aad
add
hlt
mov
push
int
outs
das
mov
jl
pop
daa
push
(bad)
cmps
sbb
outs
fisubr
les
aas
ret
loope
push
stc
dec
sbb
sub
stc
dec
push
pop
lahf
xchg
sbb
dec
sbb
inc
xchg
aaa
mov
mov
jge
aas
pop
das
push
imul
push
hlt
push
adc
int
lahf
scas
cmps
pusha
dec
pop
jge
inc
mov
out
or
inc
inc
pop
or
dec
inc
cs
ret
es
jge
or
ret
(bad)
jne
adc
das
mov
dec
aam
in
dec
fcomp
nop
popa
rcl
dec
push
lea
add
stc
mov
das
mov
pop
jmp
nop
jne
ficomp
iret
icebp
lods
aaa
cwde
(bad)
cmp
(bad)
dec
pop
adc
sub
scas
sub
aaa
mov
dec
xchg
pop
jae
and
or
pop
idiv
cld
loop
add
mov
cwde
mov
mov
fs
mov
xlat
movs
in
pop
fstp
xchg
or
cmp
(bad)
mov
mov
push
pop
sahf
scas
(bad)
mov
and
xlat
jb
xchg
add
pop
xor
push
jle
out
in
in
push
xchg
cmp
sub
inc
or
(bad)
enter
pop
into
mov
xchg
xchg
dec
aad
lahf
mul
xor
xor
lds
(bad)
sbb
sbb
imul
mov
aam
call
or
add
stc
daa
mov
cld
pop
mov
call
clc
call
cdq
pop
lahf
xchg
outs
ror
sbb
mov
shl
cs
std
mov
mov
gs
outs
jb
stos
ret
or
jmp
sti
sahf
in
arpl
jl
mov
sbb
or
fidiv
fwait
mov
add
out
push
out
inc
scas
jo
fidivr
fild
mov
mov
jb
ror
(bad)
xlat
fimul
loop
xor
or
ds
scas
repz
fwait
jp
test
fld
mov
das
(bad)
mov
cwde
or
pop
das
lahf
cmp
(bad)
cmp
or
(bad)
mov
scas
pop
enter
into
ret
pusha
fbld
fwait
mov
mov
mov
and
stos
cmp
sbb
and
pushf
or
xchg
iret
dec
clc
pop
pusha
sahf
xchg
not
mov
pop
push
je
mov
cmp
(bad)
outs
cmp
or
mov
arpl
sti
xchg
xchg
outs
pop
call
mov
cwde
sub
in
mov
mov
popf
xor
jecxz
data16
push
jg
adc
popa
sub
jb
lods
mov
mov
imul
test
rcr
jne
test
loope
je
xor
daa
pop
push
int3
cmp
jg
cld
stos
cmp
dec
push
outs
sub
out
inc
in
lahf
pop
sub
ret
pop
das
cmps
fstp
scas
mov
lahf
adc
repz
jmp
or
out
test
push
and
subps
popf
add
scas
lock
add
jle
(bad)
(bad)
or
adc
dec
or
idiv
das
sar
jnp
push
or
loopne
aaa
dec
jmp
les
or
out
shl
push
imul
rcl
in
(bad)
lods
mov
clc
dec
out
dec
scas
out
fucomip
cmp
pop
xor
xchg
cli
dec
inc
(bad)
outs
fstp
or
lods
pop
lea
aas
push
aas
mov
rcr
out
scas
std
outs
jg
dec
in
push
and
mov
push
pop
xchg
xlat
mov
sbb
inc
add
or
call
add
add
rcl
popf
pop
test
mov
xchg
aaa
cmp
inc
push
xor
pop
jecxz
movs
outs
push
jnp
jge
mov
or
xchg
je
xor
jns
scas
jge
cmp
cwde
iret
test
mov
push
cmp
int
inc
(bad)
sub
rol
pop
sbb
pop
jle
daa
scas
scas
sub
pop
test
adc
pop
jle
fild
call
pop
xorps
jbe
popa
ins
cli
push
repnz
pop
and
jns
outs
pusha
outs
jae
mov
push
jmp
stos
out
push
jnp
push
mov
fisubr
mov
(bad)
pop
cmp
mov
fucomip
mov
jmp
repz
pextrw
sub
add
in
pop
ja
cwde
jp
lahf
test
mov
aam
out
jle
push
dec
mov
xlat
ret
out
scas
push
shl
inc
adc
out
mov
jmp
mov
int3
sbb
fild
mov
pushf
scas
out
sbb
mov
cmp
or
xchg
es
inc
dec
sub
dec
or
jb
cmp
dec
fldcw
pop
mov
sbb
jb
aas
mov
inc
rcl
ja
mov
pop
xchg
xor
inc
mov
lahf
lahf
call
into
mov
push
add
mov
imul
aas
dec
pop
cmps
jo
xchg
fnstsw
push
fdiv
or
fsubr
aas
push
sbb
ins
outs
jmp
cmp
int
popf
jmp
into
fisubr
cdq
dec
sbb
outs
jo
mov
stos
sbb
das
cs
pop
repnz
dec
(bad)
outs
(bad)
bound
fisubr
test
xchg
jnp
cmps
jmp
aad
xchg
ror
push
bound
rol
xor
test
push
mov
dec
out
fisub
push
stos
mov
fsubr
push
pop
mov
jg
iret
out
dec
lahf
mov
loopne
iret
mov
sbb
cmp
fucomip
fsubr
pmaddwd
pushf
lea
(bad)
push
fld
jns
adc
pop
mov
push
sub
das
mov
ins
pop
pop
jg
adc
stc
(bad)
sbb
pop
(bad)
mov
xor
into
cmp
adc
cmp
and
test
in
pop
in
stos
lahf
loopne
lds
scas
push
aaa
movs
cmc
inc
cmc
jne
loope
fsubr
fidivr
mov
lahf
aas
pand
in
sbb
shl
int3
mov
inc
retf
pop
xor
iret
pop
mov
iret
xchg
fnsave
inc
xor
xchg
pop
sbb
ds
sbb
pop
not
push
pushf
sub
add
dec
sti
repz
xor
arpl
push
lods
xor
dec
sbb
lods
mov
sub
dec
lahf
or
call
xor
push
hlt
pop
ss
adc
fild
popa
pop
sbb
jl
mov
dec
jne
xor
scas
cli
jle
test
mov
mov
call
clc
stos
movs
comiss
dec
push
push
imul
sub
dec
imul
ret
sub
cmp
add
xchg
cdq
jge
lods
pop
mov
dec
(bad)
pop
clc
pop
aaa
jns
and
jge
test
add
pop
mov
mov
cmp
dec
rcr
pop
sbb
sub
popf
sub
cs
push
cmp
dec
mov
pop
clc
loopne
and
nop
ja
pop
jl
push
xchg
das
in
adc
jns
aam
and
dec
cmp
fwait
lds
(bad)
push
cld
out
push
sahf
pop
imul
adc
ds
fld
enter
xor
mov
sbb
jo
mov
xchg
pop
in
jg
popf
pop
cmp
and
test
mov
adc
or
jp
imul
sub
cmp
scas
and
adc
cmp
ja
mov
(bad)
pop
mov
inc
sub
adc
adc
mov
scas
xor
scas
lahf
daa
fwait
mov
aad
jle
outs
(bad)
mov
push
loopne
ins
pop
std
scas
jns
sbb
push
mov
add
scas
or
xchg
bound
or
ret
loopne
retf
popf
dec
xchg
cmc
pop
pop
xchg
pop
mov
dec
sahf
add
dec
mov
fmulp
out
mov
cmc
jns
dec
xchg
sub
pop
pop
rcr
ins
lahf
scas
aas
jo
(bad)
and
push
in
cli
mov
pop
jo
dec
(bad)
std
scas
mov
cld
sub
pop
or
loop
sahf
neg
inc
lahf
(bad)
imul
lahf
popf
push
jp
pop
jne
dec
repz
loope
xor
into
jnp
dec
adc
jmp
je
icebp
lods
cwde
mov
jbe
aaa
pop
out
inc
sub
sub
cmps
daa
cs
das
(bad)
leave
scas
inc
push
nop
stc
jnp
add
xchg
xor
inc
or
loopne
or
aas
jecxz
push
scas
adc
out
mov
ja
lahf
sub
je
imul
and
pusha
into
sti
cmc
std
or
pavgb
inc
aas
ror
shr
stc
dec
stos
aas
sbb
adc
sub
pop
add
jmp
mov
adc
lahf
rcl
ficomp
fmulp
fisttp
retf
xlat
mov
cmp
adc
sbb
mov
jmp
pop
mov
inc
mov
or
pop
iret
nop
(bad)
das
or
cmp
inc
(bad)
fcomp
push
fst
pop
inc
nop
inc
retf
sbb
sub
retf
or
pop
fwait
push
mov
add
outs
or
ds
xchg
fist
inc
push
pop
push
call
sbb
aas
dec
int3
int
jp
lods
mov
mov
into
sets
loopne
fimul
dec
xor
fistp
and
dec
and
adc
add
lahf
pop
push
out
jmp
jbe
sub
jge
mov
xchg
and
xor
mov
or
pop
mov
into
push
mov
pop
cli
outs
sbb
and
mov
xlat
xchg
jnp
out
(bad)
jno
shl
lds
lods
fisttp
call
mov
ss
xchg
push
xor
push
jmp
xchg
scas
jg
push
in
xor
call
out
mov
cmp
add
retf
mov
add
jg
dec
das
push
jle
(bad)
mov
mov
pop
jmp
idiv
pop
inc
add
stos
mov
fbstp
mov
cmps
mov
in
lods
pop
lock
(bad)
ud0
pop
cmp
in
mov
(bad)
sahf
mov
out
jmp
pop
sbb
cwde
mov
jmp
sub
dec
and
outs
inc
aaa
into
sub
pop
cli
sbb
iret
(bad)
cld
jno
les
outs
rcl
inc
mov
hlt
push
in
mov
mov
das
jecxz
add
daa
inc
(bad)
mov
imul
pop
and
hlt
test
jb
cmp
lahf
xchg
pop
pushf
addr16
lahf
fist
cmps
aaa
adc
mov
imul
out
out
out
xor
vmread
push
mov
call
xchg
movs
mov
push
das
pop
test
call
mov
add
out
jmp
pushf
pusha
loopne
mov
test
dec
loopne
rcl
jge
pop
sbb
int3
xor
add
adc
ss
enter
pop
xchg
test
dec
jge
call
mov
add
sub
ret
xor
cdq
icebp
mov
sub
cld
mov
fucomp
nop
pop
shr
pop
mov
xchg
mov
test
jp
rcr
push
mov
in
add
and
xchg
sbb
dec
mov
ds
outs
(bad)
gs
sahf
sbb
jp
(bad)
retf
rol
iret
pandn
add
out
pop
sbb
sbb
(bad)
adc
cld
adc
dec
pushf
shr
cs
movs
sub
fmul
sub
xlat
rep
fild
cmp
mov
out
retf
sub
cwde
mov
xor
jns
sti
mov
out
imul
pop
mov
iret
cmp
jmp
adc
jg
shl
bnd
inc
aam
loope
jmp
mov
out
test
cmp
push
(bad)
or
sahf
sbb
jns
bound
mov
push
in
push
sub
push
sahf
xor
pusha
sbb
popf
mov
retf
(bad)
call
int3
adc
rol
pop
bnd
dec
lahf
or
mov
arpl
pop
dec
aam
sub
pop
xchg
out
jp
jb
add
fild
popa
out
cmps
ds
(bad)
mov
jge
mov
push
inc
(bad)
jl
aad
imul
pop
dec
push
add
cs
jecxz
ds
daa
and
ror
push
packuswb
aas
or
lahf
ror
push
mov
loop
lea
ins
ins
test
xor
fnstenv
outs
mov
nop
jb
ret
rcl
sahf
or
xlat
adc
movs
mov
jge
and
out
mov
jle
(bad)
mov
cs
and
test
das
outs
jmp
sbb
das
les
loop
out
out
call
xchg
or
push
sahf
pop
out
fprem1
outs
ret
bound
sbb
and
pop
out
inc
ud0
and
in
cmp
and
fisttp
adc
je
inc
pop
imul
in
push
outs
out
pusha
adc
jo
and
dec
fisttp
xchg
xlat
mov
mov
pop
dec
out
ins
fistp
pop
(bad)
ficomp
std
cmp
mov
and
scas
popa
sub
popf
xor
pop
cmp
jmp
cmp
aad
xor
xor
sub
dec
add
scas
aam
fwait
sar
pop
push
push
outs
movs
repnz
dec
or
dec
inc
or
test
pop
fnstsw
fild
imul
test
or
lahf
cmc
and
iret
jo
xor
xor
fidivr
(bad)
xlat
leave
lods
sub
jge
fwait
imul
dec
mov
ret
cmp
popf
or
in
cdq
cmp
ror
outs
outs
adc
lea
(bad)
jns
int3
mov
mov
lea
mov
into
jg
cmps
aas
add
pop
sub
call
icebp
cmp
outs
push
das
dec
lahf
int
push
and
mov
stos
xchg
mov
jge
push
xchg
add
inc
xchg
xchg
and
push
inc
fs
mov
imul
loope
lods
xchg
loope
xchg
sbb
(bad)
ficom
in
mov
push
aas
sub
push
stos
(bad)
(bad)
adc
and
mov
mov
iret
add
push
jle
jp
movs
jg
add
into
jbe
shl
fist
into
ror
sbb
cmps
stos
xchg
jp
outs
(bad)
adc
mov
in
and
inc
push
stos
ds
outs
sti
sbb
mov
inc
mov
push
pop
xor
popf
dec
fisubr
pop
gs
jp
mov
or
imul
mov
int
adc
inc
mov
jle
arpl
push
push
cmp
jmp
je
sar
jo
enter
adc
push
rcr
mov
xor
aam
out
push
je
mov
scas
pop
pop
mov
mov
outs
aad
clc
jl
aas
push
mov
scas
pop
mov
icebp
sbb
mov
jmp
push
loope
dec
outs
and
stos
ret
cmp
aas
cmp
pop
sar
int3
adc
mov
dec
push
push
mov
addr16
div
pop
mov
out
and
loopne
cmp
sub
fdivr
inc
push
lods
sub
jge
(bad)
mov
ja
iret
inc
jmp
std
dec
rol
jge
push
pop
mov
cmp
movs
aam
jg
mov
pop
lea
xchg
clc
push
pop
xchg
fsub
mov
dec
pop
popf
fistp
cmp
ds
mov
cdq
pop
fild
out
ror
jle
sub
mov
push
fstp
sub
jns
xchg
pop
ret
iret
loopne
ja
int
pop
out
in
daa
frstor
std
ror
dec
push
pop
adc
loope
enter
test
push
scas
mov
outs
scas
jne
pop
push
rcl
or
push
inc
js
out
rcr
mov
pop
lods
pop
mov
mov
push
call
fwait
stc
stos
mov
(bad)
xor
dec
jmp
adc
and
push
jp
aas
in
mov
add
(bad)
int
iret
pop
ja
cmp
or
inc
lahf
ds
cdq
lds
xor
push
xchg
imul
push
lods
test
pop
or
inc
adc
je
mov
mov
add
outs
xchg
ss
jne
mov
or
test
fsubrp
inc
fild
test
aaa
lods
mov
ja
fiadd
adc
mov
cdq
dec
(bad)
lods
pop
imul
push
loop
jg
cli
jp
mov
aam
arpl
mov
cmp
push
push
scas
call
lea
data16
dec
jo
gs
test
out
shrd
fcomp
inc
call
jg
mov
(bad)
test
fld
xchg
into
mov
outs
xchg
push
(bad)
sub
jmp
out
sub
shl
sar
aas
pop
pminub
addr16
push
mov
sbb
or
imul
sahf
loope
ins
push
iret
cmps
icebp
fsubr
out
or
push
aam
pop
shr
addr16
or
popa
xlat
retf
xchg
lahf
mov
outs
push
cwde
inc
enter
in
push
inc
(bad)
in
mov
(bad)
popf
clc
sub
dec
xor
pop
lea
sub
dec
outs
sbb
xor
sahf
inc
pop
imul
mov
fst
mov
and
lahf
push
(bad)
icebp
and
dec
ja
jmp
sub
loop
push
mov
fwait
int
pop
xchg
jae
dec
mov
add
scas
and
pop
push
jecxz
test
scas
cmp
mov
sbb
loop
cmp
test
cmp
cmp
sub
adc
(bad)
rcr
pushf
jb
jns
repz
dec
push
ror
mov
sbb
les
xchg
cmp
dec
std
jle
aas
cld
mov
dec
pop
mov
cmps
cmps
inc
xchg
xchg
xchg
mov
lds
inc
cmp
outs
lahf
inc
cdq
pop
mov
add
fnstsw
lock
dec
adc
scas
(bad)
(bad)
test
sbb
push
jmp
jg
addr16
cmp
push
jo
and
jo
cmp
push
fnstsw
(bad)
dec
std
nop
mov
addr16
lds
js
mov
mov
xor
inc
iret
jns
bnd
xchg
jo
loopne
xchg
nop
pop
cs
xchg
push
mov
inc
xchg
fist
lahf
addr16
mov
ret
iret
imul
je
sbb
sahf
sar
mov
(bad)
push
js
dec
dec
lock
xchg
mov
sti
and
dec
mov
pop
inc
add
jge
jmp
(bad)
push
pop
pushf
mul
pusha
retf
lock
mov
mov
iret
adc
pop
mov
jmp
int3
and
push
dec
ret
push
inc
adc
ins
in
or
test
std
mov
mov
xchg
pop
and
ins
arpl
pop
mov
sub
pop
cs
clc
push
dec
(bad)
int3
and
test
adc
add
imul
cmps
fisttp
mov
sahf
cmp
cmp
pop
sbb
mov
icebp
das
lea
sahf
pop
pop
xchg
iret
ins
jnp
cmps
or
lahf
pusha
ins
sti
dec
out
add
mov
jg
mov
lods
call
sub
aas
ret
pop
iret
cmp
push
pop
add
adc
mov
hlt
adc
and
and
loope
and
xchg
dec
idiv
push
adc
movs
cmp
mov
sub
setnp
ret
and
and
jge
cmp
leave
mov
mov
or
mov
cmp
pop
call
cwde
push
dec
xchg
add
or
out
fist
jle
pop
mov
ficomp
xchg
jg
dec
into
fstp
fistp
pusha
mov
call
lds
mov
idiv
leave
fisttp
or
aad
ins
out
inc
sti
or
pop
pop
(bad)
push
inc
ss
iret
adc
cmp
mov
(bad)
in
cmp
inc
out
into
imul
call
mov
push
(bad)
ds
lahf
repz
and
pusha
jg
jmp
push
aas
scas
or
pop
mov
mov
loop
jle
and
mov
ffree
popa
add
pop
repz
adc
push
test
xchg
cmp
jg
ins
ja
ins
aam
mov
dec
mov
mov
cmp
das
dec
push
push
add
repnz
inc
sbb
or
dec
push
imul
cmps
cdq
mov
push
idiv
scas
lods
push
nop
movs
dec
pusha
js
(bad)
fwait
aam
mov
stc
xor
mov
enter
ret
or
xlat
stos
out
loope
stos
stos
pop
(bad)
shr
movs
arpl
or
xchg
cmp
jmp
xor
lahf
push
call
jle
mov
mov
ror
loope
push
stos
sbb
stos
ja
cwde
cli
dec
lea
das
ja
cld
dec
xor
je
imul
leave
jge
dec
cwde
ds
pusha
mov
sbb
ja
inc
pop
ret
or
mov
test
lahf
pop
add
lods
movs
in
lods
leave
cs
nop
fbld
cmps
add
jp
call
pop
int3
rcr
xchg
and
aam
lods
and
jbe
sub
pop
(bad)
push
in
adc
push
gs
scas
test
cmp
call
cmps
(bad)
shr
sub
fisubr
outs
jmp
pop
jp
mov
dec
and
(bad)
xor
call
int3
and
mov
(bad)
aas
adc
out
pop
(bad)
cli
iret
inc
jno
ficomp
aas
popa
jbe
ds
pop
jg
cmps
ds
mov
push
push
int3
dec
adc
lods
ret
push
sub
fimul
add
shl
(bad)
popf
arpl
pop
mov
leave
icebp
cs
aas
jbe
mov
popf
or
in
sar
pop
jmp
into
fild
fwait
rol
xlat
rol
stos
xor
xchg
cwde
push
pop
push
dec
pop
or
sub
dec
xchg
and
addr16
mov
sbb
pop
popa
xor
in
fwait
pop
mov
dec
scas
xor
ret
es
pushf
sbb
mov
xchg
push
paddsw
pop
sti
nop
cmp
pop
dec
ds
loopne
push
dec
sbb
popf
cmp
stos
enter
mov
fst
mov
inc
fwait
sbb
das
mov
outs
stos
push
sbb
jge
jp
shr
add
movs
jle
xchg
push
aas
repz
pusha
dec
fwait
pop
or
jnp
outs
push
jg
mov
dec
(bad)
mov
test
outs
push
out
(bad)
call
out
cmp
and
in
mov
mov
lods
xchg
push
adc
scas
enter
jmp
fisub
mov
retf
jecxz
fcom
retf
jnp
fsubp
dec
js
daa
das
aas
mov
sbb
int3
mov
cmp
lea
in
mov
out
or
push
sub
push
jb
scas
adc
(bad)
fiadd
mov
push
mov
adc
lock
mov
scas
mov
xchg
aas
test
pop
dec
scas
inc
test
and
dec
or
lods
(bad)
jle
pop
aaa
cmp
mov
or
mov
push
cli
pushf
inc
(bad)
add
dec
scas
lahf
xchg
call
ds
loope
(bad)
mov
mov
jge
adc
pop
fisub
test
mov
adc
dec
std
out
inc
movs
cmp
inc
stos
mov
out
adc
push
jge
pop
jge
mov
xchg
sbb
pop
(bad)
out
(bad)
in
retf
iret
add
pop
cmp
sahf
dec
cs
lods
lahf
sahf
sub
cmp
into
(bad)
fild
aas
cmp
js
mov
sub
int
jnp
adc
mov
lahf
cmp
jnp
sbb
sbb
push
iret
in
pop
repz
lea
int
xor
pop
dec
retf
pop
mov
shr
mov
rol
call
inc
and
sub
jo
fisttp
sbb
stos
shl
cmps
jnp
lahf
out
ret
and
fcom
jbe
adc
shr
dec
ds
adc
mov
fnstenv
imul
fstp
test
call
lahf
push
dec
aad
push
xchg
pop
rcr
pop
pop
inc
jmp
pop
and
int3
pop
stos
pop
mov
jmp
or
sti
dec
outs
jae
into
scas
pop
test
mov
jae
jo
rol
dec
hlt
mov
les
mov
mov
mov
jmp
retf
pop
push
jnp
jmp
int
pop
out
xor
hlt
mov
(bad)
cld
iret
enter
sub
adc
xchg
ins
stos
cdq
or
mov
fist
add
cmp
adc
test
iret
jge
(bad)
jecxz
mov
cmp
pop
out
sahf
(bad)
adc
mov
jnp
dec
xchg
(bad)
inc
jo
mov
fsub
aas
or
push
mov
xchg
dec
mov
pop
sub
jno
movs
push
iret
mov
adc
pop
or
(bad)
or
or
stc
addr16
out
loop
mov
jle
lahf
clc
mov
pop
lea
outs
iret
cmp
inc
mov
addr16
mov
cmp
xor
mov
out
ss
loope
das
mov
or
pop
leave
(bad)
aaa
cmp
fwait
dec
outs
push
nop
or
dec
data16
adc
jge
pop
mov
dec
das
popa
pop
or
lahf
jg
ret
mov
xor
and
pushf
imul
pop
aaa
loop
pop
popa
push
sti
daa
loope
and
fsub
aas
into
sub
pop
push
pop
scas
mov
std
ds
std
aas
mov
in
push
or
shl
ss
xor
gs
pop
xchg
or
sbb
pop
int
das
jg
sahf
mov
daa
xchg
cmp
fdiv
ins
jecxz
fist
pop
int3
scas
ds
cmp
stos
imul
dec
(bad)
(bad)
out
les
and
cwde
pop
or
lahf
xor
scas
jae
jp
pop
aaa
push
xor
data16
pushf
or
aas
fst
std
call
(bad)
pop
jmp
lahf
fdiv
push
(bad)
(bad)
mov
imul
in
(bad)
jg
mov
pop
pop
call
sub
mov
lahf
(bad)
cld
inc
sub
adc
scas
jmp
das
test
jo
add
stos
jge
scas
fst
jg
gs
ret
cmp
fild
pop
jge
sahf
mov
dec
inc
mov
mov
mov
xchg
jle
lahf
fiadd
cmps
out
mov
mov
clc
mov
call
in
ds
in
popf
cmp
dec
ficomp
xchg
jae
or
mov
je
(bad)
sbb
sub
imul
std
push
sbb
push
cmps
jmp
mov
add
out
jg
std
pusha
lods
fstp
(bad)
cmp
popf
and
into
out
dec
jmp
enter
cmp
(bad)
pop
mov
xchg
fwait
bound
pop
loopne
lahf
mov
mov
movs
push
ins
sub
or
ins
inc
sub
jo
jmp
jno
inc
outs
popf
aas
and
push
outs
scas
sub
pop
test
fistp
xchg
dec
mov
pop
sbb
push
popa
pushf
mov
(bad)
idiv
sub
mov
aas
pop
dec
mov
mov
rcr
and
or
imul
dec
push
out
pop
test
and
jg
xchg
inc
(bad)
xor
in
cdq
inc
or
add
jge
popf
cdq
or
lods
cdq
leave
mov
dec
pop
and
adc
stos
sbb
jmp
into
dec
ins
out
pop
aad
lods
sbb
popa
sahf
xchg
mov
adc
add
int3
pop
add
jle
das
cdq
inc
mov
rcr
xchg
xor
xchg
xchg
repz
cli
loope
sahf
aas
cmp
cli
inc
mov
cmc
pushf
rcr
loopne
mov
fnstcw
rcr
sub
pusha
jp
xlat
(bad)
mov
or
adc
jns
mov
loope
int
xchg
cmps
mov
mov
std
inc
mov
cmp
push
cmp
or
(bad)
cld
lods
fmul
and
add
jp
pop
sub
jns
xchg
outs
iret
lods
xor
fst
lea
ja
(bad)
and
fisubr
sub
fistp
xchg
mov
lods
mov
(bad)
aaa
ins
iret
jl
add
pop
popf
fwait
xchg
mov
jg
dec
xchg
out
dec
dec
push
aas
daa
dec
cld
xor
shl
pop
lahf
cmp
ins
aam
sahf
xchg
pusha
mov
loope
jge
aas
rcr
sub
clc
fisubr
inc
iret
xchg
iret
cmp
popa
call
push
repz
out
add
sti
retf
ds
jp
sahf
sub
and
lea
out
pop
in
fidiv
daa
lds
mov
mov
sub
in
lahf
dec
sahf
popa
mov
das
(bad)
lods
clc
fdivr
retf
jnp
aad
inc
mov
das
jmp
mov
cmp
rol
and
gs
js
sti
or
or
pop
scas
aam
lds
int
cmp
xchg
out
daa
mov
cs
adc
mov
loope
jle
pop
pop
xchg
cdq
(bad)
scas
and
mov
dec
xchg
mov
stos
not
and
(bad)
sub
push
dec
push
inc
out
imul
mov
and
sbb
sbb
gs
pop
adc
jecxz
mov
ds
xchg
popf
jb
cmp
ror
inc
mov
xor
ins
ret
pop
dec
pop
push
xchg
in
mov
aaa
out
fsubr
stos
(bad)
jp
mov
dec
cmp
(bad)
adc
lods
xchg
and
arpl
pop
and
loope
push
cld
adc
mov
push
retf
dec
mov
mov
fisub
inc
scas
and
jns
jns
pop
push
sbb
ret
pop
mov
pop
jnp
push
fbld
test
jg
out
(bad)
js
dec
in
push
pop
sub
xlat
scas
in
jge
dec
jge
gs
xchg
lds
or
out
jbe
push
dec
test
pop
sub
pop
cmp
and
mov
ds
cmc
pop
ins
mov
cmc
in
js
xor
call
test
ficomp
pop
cmp
fcmovb
scas
shl
popa
call
aad
ficomp
sbb
dec
cmp
fdiv
mov
das
pop
adc
or
je
push
sub
adc
cmovg
(bad)
adc
test
mov
pop
jl
mov
mov
ret
mov
fisttp
sub
mov
fcom
in
std
mov
sti
(bad)
cs
jmp
js
cmp
sahf
xor
loop
mov
mov
adc
retf
test
out
dec
or
addr16
mov
sub
mov
mov
out
pop
mul
fstp
repnz
and
fldz
les
lds
sbb
(bad)
fld
jp
aas
or
xsaves
out
inc
cmps
jp
addr16
cli
mov
mov
out
mov
setle
test
fisttp
out
in
(bad)
std
xchg
cmp
loopne
sar
je
out
pop
das
push
jno
mov
xchg
daa
jle
scas
mov
push
js
loope
pop
jno
add
lock
fisubr
imul
mov
sub
mov
xchg
jmp
outs
repnz
mov
imul
adc
test
aaa
outs
sub
dec
jns
mov
lahf
jge
daa
push
hlt
cmp
fstp
sbb
inc
mov
mov
mov
and
lahf
jns
mov
jp
or
mov
jmp
and
cmp
xchg
jg
arpl
pop
in
outs
mov
into
cmp
push
scas
hlt
adc
jmp
add
mov
aas
xchg
sub
dec
sub
pusha
mov
sbb
bound
pop
mov
add
or
sub
or
push
jb
(bad)
shl
mov
dec
sbb
fcmovu
cli
outs
xor
dec
mov
psrad
leave
pop
pop
fcmovbe
shl
sar
mov
(bad)
out
pop
cld
xor
fcmove
cs
call
iret
repnz
ja
xchg
push
mov
jno
les
push
sbb
or
xor
jle
push
sub
dec
push
sub
ja
fucomp
and
sahf
popa
mov
mov
(bad)
jnp
xchg
mov
shl
adc
cmp
(bad)
movs
mov
dec
daa
call
popf
jnp
stos
int3
cmp
dec
mov
mov
addr16
push
(bad)
xchg
lds
cmp
iret
das
loope
(bad)
das
gs
in
sbb
mov
sub
xor
jmp
add
mov
xor
cmc
mov
fstp
cdq
ds
stos
jmp
fcmovnu
scas
dec
les
mov
shl
(bad)
jne
in
jg
outs
scas
fdiv
or
addr16
aam
dec
push
cmps
dec
test
aas
out
xchg
cmovg
fisttp
cmp
int3
icebp
pop
ds
mov
lock
fisttp
pop
lock
popf
sub
fimul
sahf
adc
in
out
in
(bad)
pop
ret
mov
lea
mov
cmps
mov
pop
enter
inc
pop
pop
cmp
mov
mov
enter
sahf
mov
xor
ret
cwde
(bad)
and
push
xchg
clts
ror
pop
aad
add
mov
into
lds
ins
or
mov
aas
sub
xor
mov
daa
out
setp
pop
popf
frstor
xlat
mov
dec
mov
into
mov
jg
inc
xchg
lss
xchg
(bad)
jle
popa
xchg
cmp
pop
xor
jg
call
cli
pop
out
dec
leave
scas
fisttp
push
add
pop
push
xchg
lahf
aaa
retf
pop
(bad)
cmp
add
ror
(bad)
push
ds
push
xchg
and
fisub
push
pop
enter
scas
jg
cmps
jno
bswap
fisttp
aaa
popf
add
mov
test
jmp
loopne
or
sub
fisttp
inc
mov
mov
out
fwait
push
(bad)
jno
push
(bad)
xchg
push
adc
push
shl
movs
in
call
xchg
aam
cmps
iret
lahf
add
dec
retf
sbb
mov
iret
paddw
xorps
lea
xor
ret
outs
sbb
retf
jnp
dec
nop
xchg
std
(bad)
jae
sar
imul
outs
icebp
cmp
(bad)
in
aam
(bad)
(bad)
addr16
dec
test
mov
aas
repz
push
mov
fcomp
mov
imul
pop
dec
pop
(bad)
xor
cmp
loope
fistp
cld
js
adc
iret
adc
and
jno
sbb
out
sbb
mov
into
jns
loope
hlt
stc
and
scas
inc
pop
out
mov
into
(bad)
ja
ins
xlat
ds
dec
jne
xor
ret
mov
(bad)
movs
aaa
push
inc
add
push
jmp
mul
daa
ds
xor
xchg
sub
jge
pop
enter
or
pushf
ficomp
scas
jecxz
arpl
cmp
pop
dec
mov
mov
jmp
aaa
aaa
mov
mov
(bad)
enter
lea
dec
int
aaa
test
aam
push
mov
dec
cdq
inc
outs
pushf
ins
cmps
iret
aas
jg
jle
push
aad
lahf
dec
fisub
mov
cmp
test
bound
(bad)
(bad)
daa
sbb
or
pop
addr16
or
into
cdq
jmp
cli
adc
jb
mov
sbb
pop
popa
inc
push
push
outs
into
lods
dec
push
ffree
add
in
xor
cmp
push
daa
or
cmp
lea
sub
adc
(bad)
(bad)
in
sbb
into
popf
out
push
in
adc
xor
xchg
(bad)
ds
adc
out
test
sbb
aas
sbb
je
shl
jg
movs
ins
pop
iret
nop
shl
add
sar
jl
outs
xchg
sahf
pop
out
(bad)
enter
and
push
xor
scas
mov
cmc
movs
or
lahf
jne
mov
push
dec
dec
sahf
fsubrp
scas
rcr
mov
and
int
cmp
and
cs
(bad)
jbe
lods
xchg
push
push
push
retf
push
outs
push
scas
push
cwde
div
cli
sti
mov
mov
cmp
mov
(bad)
popf
test
push
js
xchg
push
imul
cmp
in
cmp
gs
push
popf
xlat
mov
ja
pop
(bad)
js
mov
jg
in
retf
dec
daa
stc
ss
add
adc
and
test
(bad)
xor
push
adc
stos
xchg
cmp
sbb
in
mov
pop
popa
aaa
xlat
add
mov
adc
push
push
movs
pop
and
push
test
into
test
cli
jns
pop
and
sbb
bound
sub
add
jmp
pop
retf
nop
popf
mov
cmp
push
je
xor
into
icebp
outs
dec
jl
adc
outs
std
(bad)
jle
jg
sar
lods
ss
bound
jle
pushf
xchg
add
ins
add
add
add
daa
cmps
add
inc
ret
(bad)
mov
or
mov
aaa
pushf
mov
dec
push
cdq
xlat
mov
pop
mov
mov
mov
into
sbb
xlat
sahf
add
fs
add
fs
(bad)
mov
xor
inc
lahf
loope
push
inc
sbb
scas
ret
adc
dec
pop
dec
pop
pushf
(bad)
pop
out
fucomp
xor
lods
mov
cmp
and
out
inc
xchg
loopne
push
push
mov
test
cli
xor
sub
add
pop
fmul
adc
push
jl
int3
outs
push
out
jno
in
sbb
out
iret
mov
icebp
popa
cmp
mov
adc
pushf
lahf
aaa
mov
mov
mov
outs
sbb
icebp
jp
bound
(bad)
pop
das
pop
cmp
pop
push
inc
mov
add
lea
sub
adc
lds
scas
inc
or
pop
(bad)
call
imul
mov
mov
cmc
push
jmp
sar
fs
xchg
cs
loope
imul
fnstsw
cmp
pop
movs
in
push
pop
retf
sar
sti
adc
loope
mov
shl
jle
stos
dec
sbb
jno
(bad)
mov
jle
push
outs
or
pop
fiadd
out
das
jmp
cwde
in
pop
or
fmul
dec
pop
cmp
call
and
cmp
daa
xor
movs
in
dec
popf
faddp
pop
and
xchg
add
retf
mov
stos
cmps
leave
inc
fild
scas
xchg
pusha
das
push
bound
lods
das
dec
or
sbb
imul
push
in
out
pop
sub
adc
pop
call
or
lahf
push
or
mov
in
jge
sahf
enter
outs
xchg
pop
nop
ins
lods
fmulp
dec
iret
call
cli
popa
aas
inc
call
(bad)
cs
cmp
in
inc
loopne
inc
adc
jnp
mov
ret
jmp
mov
inc
in
push
in
dec
test
clc
retf
and
xor
mov
cmp
stos
pop
fidivr
mov
mov
pop
pop
lahf
shr
jo
cmp
(bad)
jbe
out
outs
mov
or
test
sti
out
call
stos
dec
int
lods
cld
pop
jmp
std
mov
xchg
push
sub
push
dec
pop
fisttp
call
(bad)
cwde
outs
fld
sub
daa
mov
into
outs
dec
fimul
scas
inc
jp
ds
inc
lds
cmp
test
mov
arpl
jp
(bad)
xor
ins
fist
jo
sub
(bad)
out
xor
scas
ret
leave
sub
cmp
add
ds
ffree
mov
inc
xor
xchg
xchg
cmc
je
lahf
sub
dec
mov
es
push
das
sub
daa
xchg
add
inc
pop
dec
ins
cmps
fstp
cmp
add
sub
dec
scas
test
adc
lea
mov
mov
add
pop
mov
cwde
in
mov
add
cmc
or
pop
ja
sub
addr16
shr
sub
(bad)
cmp
and
ss
pop
loopne
ja
jns
mov
pop
push
or
in
cmp
adc
sub
popf
loop
ret
pop
loope
ins
(bad)
bswap
push
stos
and
jg
mov
call
aas
lahf
xlat
fsubp
xor
xlat
fwait
pop
addr16
add
sbb
inc
daa
popf
scas
popa
cli
in
mov
mov
std
test
(bad)
mov
ret
add
stos
fadd
scas
add
adc
or
adc
adc
test
pushf
outs
test
sbb
push
ss
mov
mov
aas
dec
jecxz
inc
mov
jne
out
mov
pop
dec
(bad)
js
outs
jle
les
xchg
in
dec
test
mov
jge
adc
jl
inc
mov
sti
clc
push
iret
cmp
(bad)
scas
push
mov
jmp
aas
(bad)
jge
pop
jmp
inc
add
(bad)
or
pop
out
jmp
stos
cdq
jns
jg
inc
and
fwait
jmp
push
jnp
sub
dec
inc
inc
jnp
push
ss
cmp
cdq
aaa
daa
sbb
inc
outs
test
mov
imul
dec
jmp
jae
xor
call
mov
dec
add
ins
jecxz
aas
fnstsw
inc
sysexit
mov
jle
fimul
shr
scas
pop
cmc
xchg
or
jae
dec
jmp
sbb
sub
pop
stos
shl
pop
ds
lods
jns
(bad)
fs
sub
push
scas
cmps
jp
out
(bad)
jno
clc
xlat
aas
popa
aas
scas
ret
ret
(bad)
jg
lods
inc
lods
(bad)
lds
dec
mov
or
popa
or
dec
fisttp
cs
pop
fwait
repnz
dec
jp
sub
iret
mov
(bad)
repnz
cmp
jle
cdq
int3
fs
in
loope
sbb
push
ins
adc
xchg
repnz
push
mov
scas
dec
cmp
push
and
(bad)
xor
xor
retf
pop
jge
mov
cmp
add
mov
outs
cmp
jl
adc
sbb
cmp
dec
mov
inc
jne
push
dec
pop
mov
add
in
test
adc
jmp
jns
mov
retf
ja
xor
int
pusha
mov
mov
push
jne
(bad)
cmp
xchg
push
add
lods
push
xchg
dec
mov
sbb
or
test
or
scas
outs
les
xchg
adc
retf
sbb
cmp
mov
mov
inc
mov
adc
mov
dec
dec
push
cmp
(bad)
out
cmp
sahf
pop
icebp
dec
xor
(bad)
jmp
pop
mov
fadd
ret
lock
push
sub
mov
cmc
std
adc
arpl
adc
cmp
stos
aas
(bad)
adc
xor
or
push
and
aaa
push
jl
cmp
cs
shr
fucomp
pop
(bad)
sbb
dec
std
inc
dec
add
(bad)
fadd
neg
xchg
add
fmul
xchg
fisub
les
sbb
jb
bound
sti
push
stc
ss
push
sahf
movs
fild
dec
into
xchg
sbb
iret
jbe
push
mov
add
into
(bad)
int
das
shr
lea
popf
clc
jae
push
rcl
lock
and
sbb
sub
xlat
pop
into
clc
jecxz
jne
pushf
(bad)
outs
test
outs
jg
gs
dec
mov
(bad)
lahf
cmp
push
mov
imul
ds
pop
pop
dec
pop
ins
test
dec
das
push
inc
outs
daa
mov
push
jl
pop
xor
call
imul
(bad)
das
imul
popf
xchg
ds
lahf
iret
in
cmovle
fimul
adc
pop
daa
xor
jb
or
ss
dec
scas
(bad)
gs
cli
and
or
retf
mov
dec
hlt
jns
jle
pop
dec
sar
enter
xchg
out
addr16
mov
ins
lds
mov
sub
mov
and
mov
jno
pop
push
stc
pop
mov
aad
test
mov
or
inc
enter
mov
pop
xchg
mov
scas
or
gs
mov
call
lahf
aas
stc
jg
mov
sub
mov
jg
jg
ds
fincstp
adc
jl
sub
imul
and
push
cdq
inc
cmp
cld
fist
mov
lods
call
pusha
xchg
retf
data16
mov
ret
addr16
fimul
or
loopne
or
inc
adc
mov
fild
jp
sti
sub
call
cmp
and
sbb
mov
fdiv
repz
add
ror
stc
pop
xchg
out
les
jne
mov
nop
test
jge
inc
mov
into
jg
dec
retf
lahf
test
imul
push
jmp
sbb
(bad)
test
call
push
adc
shl
lock
fcomp
pop
dec
(bad)
cmps
mov
mov
ins
sbb
pop
pop
adc
dec
setg
pop
movs
cmp
cdq
test
xchg
test
adc
cmp
jnp
or
push
push
jb
push
icebp
out
popa
outs
or
pop
or
loope
out
jg
mov
cmp
outs
xchg
sbb
pop
cmp
test
inc
jmp
xchg
retf
ficom
mov
loop
inc
and
test
lahf
(bad)
and
or
addr16
sbb
dec
aas
xchg
cmp
mov
push
dec
aaa
aas
pusha
xchg
fidivr
shr
pop
inc
mov
(bad)
pop
sbb
outs
jg
and
or
mov
fistp
mov
jg
(bad)
fistp
fwait
pop
fdivp
std
cmp
add
push
(bad)
dec
mov
pusha
dec
je
(bad)
xlat
jmp
sbb
xchg
and
imul
ret
(bad)
scas
pop
push
jle
ins
fstp
jo
mov
jbe
scas
fisttp
xchg
pop
mov
ja
and
out
add
arpl
enter
pop
leave
mov
leave
adc
xchg
pop
mov
sub
nop
popa
call
loope
push
jg
repz
pop
mov
daa
lea
cli
pop
fbld
xchg
xchg
ins
or
les
jns
dec
pop
mov
fmul
push
(bad)
ss
inc
mov
push
or
outs
cmp
xor
dec
mov
icebp
xchg
jne
arpl
(bad)
ds
push
out
dec
sub
adc
jg
aas
shr
(bad)
jge
push
out
or
movs
push
ret
(bad)
xchg
add
fs
in
in
test
mov
adc
sub
fild
jmp
mov
sbb
xchg
ror
inc
or
(bad)
scas
scas
inc
pop
push
xor
inc
cld
sti
jmp
rcr
mov
jp
add
rol
add
or
into
(bad)
fst
cmc
int3
jmp
in
in
lods
stos
call
mov
rcr
das
mov
ins
cmps
xor
cmp
ins
dec
pop
or
xchg
sub
paddd
rep
xchg
packssdw
mov
xor
push
jns
shl
ins
pusha
fmul
dec
ds
add
(bad)
or
(bad)
cmps
xor
push
sbb
sahf
dec
addr16
jle
mov
cmp
or
adc
iret
fistp
lock
dec
cli
loopne
lods
test
mov
gs
out
mov
ja
in
scas
lods
cld
mov
pop
jne
loope
cmps
js
sbb
popf
scas
ss
or
test
sbb
push
outs
ins
cmps
test
mov
jae
mov
jge
fidivr
push
mov
add
scas
in
mov
push
mov
call
sbb
lahf
nop
and
pop
mov
push
cli
movs
outs
xor
mov
mov
int3
xor
inc
xlat
cld
aaa
mov
out
dec
pushf
sahf
jns
sub
pop
pop
bound
cmps
clc
dec
lahf
cmps
in
or
cmc
push
int3
lahf
or
cld
dec
pushf
daa
das
(bad)
pop
xchg
adc
stos
xor
mov
gs
pop
les
repz
or
pop
jp
jne
xor
dec
(bad)
loope
jae
ss
stc
iret
int
or
int
jle
aas
mov
lahf
dec
(bad)
punpckhbw
icebp
sbb
jno
pop
xlat
(bad)
popa
or
enter
rol
loopne
fwait
(bad)
ins
out
iret
pop
out
fst
push
pop
and
jns
ja
pop
pop
xchg
shr
in
out
xchg
cvtdq2ps
pop
retf
inc
dec
inc
mov
jbe
jecxz
xchg
xchg
pop
mov
jmp
pop
fimul
out
push
xchg
jg
or
cmp
mov
jb
add
cli
inc
mov
cld
push
dec
adc
pop
and
push
jp
ja
jns
rcr
mov
and
mov
es
fs
dec
mov
jp
sub
dec
sub
sub
test
mov
pop
(bad)
imul
gs
(bad)
out
dec
xchg
add
jp
packuswb
dec
ins
jns
mov
push
lahf
dec
loopne
cmps
(bad)
sqrtps
(bad)
cld
adc
cld
mov
inc
retf
into
mov
fistp
cmp
pop
pusha
(bad)
call
pop
jg
push
lods
inc
or
push
iret
into
mov
pushf
(bad)
sbb
adc
pop
dec
sbb
cmc
cld
jnp
popf
or
mov
inc
mov
pushf
iret
add
inc
jg
mov
out
pop
mov
pop
xchg
cmp
push
pop
and
cmovns
imul
out
cmp
pop
js
add
jecxz
cmp
leave
xor
lea
imul
iret
xlat
dec
add
push
fld
int
scas
push
or
jg
lods
jle
lahf
xchg
rol
loope
pop
pop
outs
fist
arpl
lds
jb
retf
pop
out
ins
ficomp
inc
aaa
mov
mov
aas
or
or
hlt
enter
jo
sbb
mov
push
test
retf
mov
call
push
and
push
arpl
or
imul
or
dec
in
por
adc
push
inc
fdivp
into
outs
mov
aas
mov
add
xlat
int
sub
icebp
lods
ins
ds
cmp
(bad)
popf
push
aaa
leave
ficomp
mov
pop
sysret
nop
sar
lahf
daa
jle
imul
jg
arpl
and
jb
stos
outs
(bad)
fdivp
shr
pop
loope
out
push
cs
in
xor
out
ret
cmps
rcl
lahf
dec
outs
scas
cdq
push
out
and
pop
das
or
xor
jg
dec
dec
outs
adc
mov
icebp
inc
sub
popf
std
sub
mov
mov
hlt
outs
bound
lds
cmp
push
mov
jle
retf
ds
int
or
jb
scas
jmp
jbe
adc
xchg
inc
inc
mov
jle
sbb
int
cmp
jmp
test
das
and
icebp
add
es
pop
int
scas
xchg
nop
sbb
popa
inc
adc
mov
sahf
and
outs
dec
test
fistp
mov
sbb
int
cmp
and
inc
ins
lea
adc
and
mov
or
ds
(bad)
sub
xchg
(bad)
xor
or
xor
push
out
iret
aas
scas
pushf
sbb
jge
aas
and
shl
enter
inc
outs
dec
test
dec
fmul
adc
movs
push
test
imul
or
xchg
inc
test
and
xchg
push
sar
or
popf
or
popf
inc
test
jmp
out
and
adc
fistp
cmp
cs
sub
iret
(bad)
cs
and
xchg
in
xchg
xor
jl
(bad)
dec
out
mov
inc
jle
cs
or
push
adc
add
shl
dec
and
jecxz
rcr
in
cmps
ret
fwait
dec
push
mov
retf
loopne
and
into
stc
hlt
mov
mov
push
mov
mov
in
es
in
shl
and
jp
bswap
dec
pop
daa
cwde
les
aas
mov
shr
pop
sub
pop
aad
push
mov
cdq
(bad)
aas
int3
(bad)
xor
mov
push
mov
or
cmp
push
cmp
out
mov
sbb
pop
mov
cmp
jl
stos
mov
dec
enter
cli
cmp
sub
sbb
cmp
jmp
push
ds
xor
sbb
sbb
das
retf
sbb
fidivr
cmp
out
addr16
sti
mov
dec
out
push
in
repnz
ins
in
out
stc
xchg
fnstsw
ja
mov
loope
loopne
sbb
mov
mov
jnp
cdq
dec
pop
mov
imul
xor
fsub
(bad)
push
or
aad
hlt
mul
cld
inc
xor
mov
inc
outs
jo
add
mov
or
lods
sbb
stos
rcl
push
jne
jb
fisub
pop
dec
in
push
adc
es
(bad)
pop
jo
das
jp
loope
sub
push
dec
sbb
jbe
nop
lahf
mov
add
lock
ins
std
jae
ror
aas
sub
sbb
xor
mov
mov
iret
pop
lods
sbb
aad
repz
outs
outs
clc
mov
fild
mov
push
sbb
repnz
repz
xchg
mov
aaa
outs
stos
js
sub
inc
fdivr
loope
sub
cmp
call
imul
loope
cmp
and
add
fwait
cmp
sub
paddsw
popa
mov
lahf
cmps
xchg
pop
jmp
mov
add
scas
jmp
shr
xchg
mov
out
lods
ja
and
addr16
or
mov
push
dec
add
xchg
in
ins
pushf
fistp
arpl
add
(bad)
sbb
push
pop
imul
arpl
pop
dec
mov
lahf
dec
sahf
cmps
push
shl
sbb
cwde
mov
mov
loope
xor
stos
std
jnp
push
lahf
cmp
ret
test
lahf
xchg
mov
lods
aaa
ds
test
jle
in
iret
rcl
sbb
(bad)
out
dec
das
test
mov
jnp
dec
scas
inc
jp
(bad)
in
cwde
adc
scas
das
sub
cmp
jg
daa
int3
pop
sub
enter
or
pop
pop
mov
ins
rcr
fstp
outs
sbb
inc
fs
dec
jl
lods
andps
out
add
aaa
cmp
mov
iret
lahf
cmp
in
push
(bad)
cs
push
push
pop
pop
scas
int
jge
std
inc
int3
cmp
xchg
in
addr16
shl
mov
mov
push
xor
outs
hlt
jne
lahf
stos
lods
js
cdq
cmps
pop
out
pop
bound
push
adc
pop
mov
repnz
mov
push
push
lahf
shl
jecxz
mov
outs
std
test
or
dec
mov
mov
pop
jnp
xor
nop
sahf
xchg
aaa
dec
xor
fs
lahf
fistp
aas
cmps
xchg
aaa
pop
pop
(bad)
adc
add
das
mov
adc
fisttp
pop
add
repz
mov
push
and
jg
or
pop
scas
dec
push
inc
add
push
sub
pop
inc
adc
(bad)
jge
(bad)
mov
pop
add
xchg
repnz
loope
fcomp
dec
fsub
xor
std
aas
jle
fisubr
jmp
cs
sub
xchg
push
fnstsw
pop
mov
shr
les
idiv
sbb
sub
cmps
push
imul
dec
mov
nop
jg
(bad)
push
cli
(bad)
aad
es
dec
(bad)
out
mov
sbb
inc
pop
aaa
add
mov
fild
repnz
pop
jmp
scas
mov
es
dec
mov
inc
mov
test
dec
dec
arpl
dec
in
dec
daa
push
sbb
or
cs
push
(bad)
adc
aaa
ds
outs
call
mov
mov
xchg
push
ss
push
push
addr16
and
retf
push
cs
fild
or
dec
ins
mov
mov
inc
push
iret
mov
mov
retf
aaa
pop
daa
pop
std
adc
dec
cli
sub
fcom
lods
test
sub
sahf
or
sub
mov
push
or
stc
push
pop
push
mov
xchg
outs
lahf
pop
outs
mov
xor
rcr
adc
rol
sub
cmp
call
mov
or
call
sub
pop
jl
and
push
fnstcw
iretw
and
std
pop
cli
inc
pushf
and
dec
inc
mov
neg
daa
mov
fwait
iret
and
inc
pop
lahf
mov
pop
pop
int3
hlt
push
inc
call
sahf
pop
mov
aam
sbb
or
pop
add
daa
movs
out
or
daa
pop
pusha
jecxz
cmp
addr16
pusha
push
outs
rcr
pop
mov
iret
cmp
iret
sbb
je
sahf
out
das
jg
pop
mov
dec
xchg
fucomp
mov
scas
dec
adc
mov
xchg
dec
add
ret
fnstsw
pop
(bad)
mov
call
cmp
nop
xchg
popa
idiv
out
js
mov
sahf
pop
cmp
fisubr
adc
adc
out
outs
push
test
data16
ja
sti
aaa
popf
sti
xchg
out
ja
mov
xchg
addr16
daa
imul
mov
and
jmp
xchg
inc
push
lahf
jbe
sbb
outs
inc
(bad)
jo
dec
jg
pop
rcl
das
ins
out
fild
mov
lahf
jne
popf
jbe
dec
lods
(bad)
mov
jns
out
test
cmp
neg
iret
out
adc
sbb
push
stos
push
fisubr
sub
xor
jae
mov
fwait
daa
jge
pop
lods
bnd
addr16
mov
adc
mov
dec
xchg
or
jg
pop
(bad)
sbb
xlat
movzx
dec
xchg
and
jnp
pop
ret
call
and
clc
das
dec
push
out
call
fcom
cmps
pop
(bad)
jb
dec
jae
mov
nop
adc
xor
into
sbb
mov
cli
inc
dec
das
push
mov
mov
jno
sbb
addr16
pop
and
jbe
dec
push
cmp
add
scas
mov
dec
mov
retf
add
pop
ficomp
out
fwait
test
xor
pop
mov
in
iret
std
or
xchg
xor
(bad)
(bad)
cmp
test
cmp
mov
mov
inc
sar
pop
cwde
sbb
mov
jns
dec
sub
lods
and
mov
(bad)
push
lods
fdivr
sub
cmps
push
sbb
inc
dec
sahf
xchg
xchg
sbb
or
adc
lgs
call
jns
and
jg
lea
xor
mov
cmp
lahf
fldz
mov
fldenv
or
hlt
mov
dec
xchg
adc
xor
test
stos
mov
fistp
mov
cmp
mov
fsubr
adc
stos
jg
xlat
mov
fisttp
(bad)
push
cmp
mov
mov
je
or
sub
call
mul
dec
and
lahf
cs
pop
scas
push
rcr
out
movs
mov
adc
fcomp
outs
jecxz
cmp
sbb
call
push
pop
out
xor
sar
jp
out
xchg
cmp
mov
pop
mov
cmps
std
jge
das
mov
dec
adc
xchg
xchg
arpl
(bad)
fisubr
add
and
jnp
ss
cdq
cmps
outs
sbb
push
dec
pop
adc
xor
fisub
and
add
outs
aaa
cmp
call
mov
out
pop
mov
(bad)
xor
xchg
cli
xchg
add
xchg
pop
mov
inc
lock
loop
xchg
jns
out
inc
test
cmp
imul
shr
xlat
xchg
xchg
add
(bad)
dec
outs
mov
or
cs
mov
std
test
ja
sub
mov
aas
push
das
pusha
arpl
mov
lods
fld
jae
pop
imul
mov
addr16
dec
jne
jnp
popf
push
or
fimul
xor
das
pop
push
push
push
sub
fucomi
clc
pop
call
lods
bound
fsub
out
fnsave
out
call
test
dec
xor
cmps
push
pushf
sub
cli
imul
push
call
pop
adc
dec
mov
loope
in
mov
fsubp
das
stc
mov
adc
adc
xchg
imul
movs
jmp
outs
mov
push
and
ficom
mov
inc
xchg
scas
push
push
aam
popf
pop
add
push
mov
fmul
fcomp
sbb
pop
sti
add
icebp
test
es
jg
jle
jg
ficomp
pushf
scas
scas
push
mov
mov
test
(bad)
pop
pop
push
in
cs
ror
ins
addr16
mov
xchg
aaa
mov
pop
mov
push
pop
push
jb
push
fild
call
(bad)
xchg
movs
(bad)
cs
stos
pop
(bad)
dec
jg
cli
retf
push
scas
xor
dec
pop
pop
imul
mov
(bad)
loopne
lock
xlat
stc
in
pop
dec
popa
fcom
push
mov
dec
and
test
add
(bad)
push
mov
or
out
mov
pusha
or
jg
or
adc
out
aaa
popf
jmp
call
dec
rcr
xor
push
push
or
and
fisttp
mov
xchg
jo
or
mov
test
aam
or
add
out
mov
(bad)
mov
dec
inc
sub
inc
out
ja
push
mov
or
paddusb
into
js
iret
ins
pop
pop
ins
in
and
retf
mov
jne
mov
arpl
jno
aad
push
push
sahf
outs
dec
outs
stc
nop
xor
jg
dec
or
fild
fst
pushf
sub
sbb
fadd
das
mov
mov
dec
dec
cmp
lahf
popf
mov
lea
lea
push
je
dec
out
adc
or
repnz
lahf
imul
mov
pop
pusha
mov
out
scas
cmp
pop
push
xor
(bad)
fsubr
cld
pop
sahf
in
mov
repz
sbb
dec
dec
jg
out
stos
dec
adc
loope
pop
call
outs
ja
(bad)
das
scas
popa
out
and
dec
mov
(bad)
scas
sub
sub
mov
pop
ret
std
cmp
outs
(bad)
xchg
pop
inc
icebp
addr16
jnp
in
rep
out
out
(bad)
ja
pop
mov
outs
xlat
mov
out
push
ds
mov
mov
stc
je
(bad)
out
shl
jb
cmp
sub
mov
add
std
push
and
pusha
push
test
dec
iret
idiv
into
push
out
nop
outs
icebp
(bad)
jmp
mov
mov
cli
mov
(bad)
sti
dec
or
stos
or
jg
sub
mov
mov
js
rol
lea
push
lahf
mov
xchg
imul
(bad)
mov
cs
addr16
iret
data16
xor
enter
aas
rcr
jg
jge
sbb
sbb
gs
push
mov
iret
adc
hlt
leave
xor
pop
mov
xor
jle
xchg
addr16
stos
pushf
rol
xchg
cld
and
out
push
cdq
push
or
cdq
loope
sub
pop
call
jb
adc
out
cmps
lods
or
pop
sti
jmp
aas
(bad)
not
cli
mov
cwde
push
dec
mov
mov
aas
cmp
xchg
inc
into
int3
jl
repz
mov
mov
retf
(bad)
retf
cmp
adc
inc
outs
ins
pop
aam
out
sub
jge
fidivr
pop
shr
enter
inc
or
sbb
lods
dec
es
mov
pop
xchg
jmp
inc
jmp
scas
jmp
mov
aaa
cld
mov
jle
call
mov
push
test
lea
(bad)
cmp
and
neg
test
(bad)
push
mov
pop
scas
sti
mov
ret
das
aas
xchg
sub
(bad)
fdiv
leave
inc
ficom
jg
(bad)
out
test
das
pop
mov
iret
push
mov
scas
dec
pop
xor
sub
inc
dec
aas
ins
fisub
out
mov
into
push
jle
movs
inc
and
jl
into
push
scas
jle
mov
neg
adc
dec
dec
xor
sub
jl
popa
xchg
pop
fistp
inc
dec
daa
rcr
push
cli
sbb
arpl
inc
neg
pop
iret
jle
xchg
jg
icebp
pop
fs
push
sbb
ror
add
into
outs
sub
sub
loopne
stc
(bad)
mov
or
outs
jle
xchg
test
loop
mov
mov
mov
and
imul
mov
pmaxub
loopne
mov
pop
outs
pusha
loopne
stc
adc
cmp
cmp
and
pop
jae
cmp
outs
imul
mov
jg
ror
outs
sti
fstp
scas
jge
inc
push
gs
inc
lods
jno
mov
imul
pop
push
aas
and
sub
and
jns
repz
mov
lahf
mov
punpckldq
mov
ins
es
mov
ins
jge
loopne
xlat
push
sbb
outs
loop
lods
xlat
pop
and
cmp
scas
jle
enter
pop
push
inc
pop
or
ja
lahf
dec
jl
rol
daa
pusha
iret
inc
lea
in
add
iret
dec
lods
xor
or
push
gs
push
scas
sbb
push
mov
retf
xchg
das
dec
dec
jge
mov
cmp
js
sbb
repnz
(bad)
xchg
(bad)
mov
cli
pop
inc
outs
dec
loopne
pop
pop
xor
pop
retf
lahf
paddq
jmp
jle
lock
jl
push
jmp
aas
xor
mov
cld
pop
ror
cwde
cmp
ins
je
inc
test
dec
jecxz
ret
sub
pop
stos
retf
cmp
(bad)
lock
mov
pop
pop
cs
aas
pop
fdivr
test
ret
imul
das
sahf
or
push
and
(bad)
(bad)
nop
lods
cmp
pop
push
mov
loope
inc
retf
pop
cli
add
pop
push
pop
xchg
jae
add
lods
lahf
xchg
dec
push
stos
jnp
mov
fnsave
outs
or
std
inc
mov
test
ja
std
mov
mov
cli
jo
scas
mov
fcmovnbe
mov
popa
jo
cmp
in
or
lahf
jnp
add
(bad)
scas
dec
shr
jg
ficom
sub
dec
daa
aas
push
jle
and
pop
outs
js
push
pop
lds
dec
(bad)
retf
data16
fisubr
sbb
cmp
jmp
adc
rcr
aas
mov
jmp
aam
test
cmps
pop
mov
mov
sub
xor
test
outs
cld
pop
fistp
and
mov
inc
rcr
das
aam
inc
out
psubsb
xchg
das
jle
inc
xor
pop
dec
dec
jl
(bad)
cmp
xchg
jge
in
out
push
lahf
movntq
sti
ins
out
jnp
pop
sbb
cmc
sahf
xchg
jb
jg
sbb
test
xchg
sbb
mov
cmp
dec
in
push
mov
mov
into
pop
out
pop
stos
and
jb
in
fisttp
dec
shr
and
mov
add
ins
repnz
iret
popf
xchg
inc
fs
cmp
or
inc
loop
icebp
jnp
pop
sub
popa
outs
mov
mov
mov
mov
lea
and
and
pop
pop
push
das
nop
push
pcmpeqb
(bad)
jge
aad
mov
mov
stos
sub
(bad)
enter
aad
push
pop
adc
mov
in
push
call
jmp
lea
sub
fimul
add
pop
mov
cld
or
pop
(bad)
(bad)
dec
jmp
out
sub
xor
or
test
push
mov
mov
mov
cmp
icebp
das
fnstsw
fs
xlat
into
mov
in
lahf
mov
into
or
in
pop
das
std
or
pop
retf
sbb
pop
cld
das
or
mov
pop
push
inc
pop
pop
les
mov
pop
dec
add
repnz
add
stc
rcl
sub
sub
mov
sub
cmps
add
pop
lahf
inc
aam
dec
das
cmp
xchg
aas
cmp
pop
sbb
sub
sbb
mov
js
stos
retf
(bad)
sub
mov
adc
hlt
aad
imul
xchg
cmp
jge
xor
push
cwde
das
mov
mov
push
in
mov
pushf
sub
pusha
sbb
lds
push
sbb
push
sub
xchg
push
scas
push
inc
xchg
sbb
test
imul
push
dec
sbb
(bad)
jo
dec
jno
or
aam
(bad)
imul
fwait
push
icebp
mov
pop
(bad)
int
outs
ds
stc
cwde
pandn
mov
cmp
cmp
add
inc
das
push
sub
outs
mov
out
in
ins
into
test
xchg
dec
loop
fstp
movzx
mov
pop
cmc
xchg
bound
lea
xor
mov
sbb
out
inc
sbb
enter
mov
aaa
mov
into
into
fcomip
or
jp
mov
or
push
in
cwde
outs
ficomp
imul
outs
pop
dec
jno
pop
out
sbb
scas
fistp
cdq
cli
(bad)
mov
mov
fidivr
daa
adc
out
mov
scas
repnz
inc
pop
pop
cmp
mov
out
shl
xchg
xchg
ins
imul
pop
mov
inc
sahf
lea
jae
data16
mov
mov
imul
mov
sbb
in
xchg
push
adc
jle
and
dec
mov
lds
lock
and
repnz
mov
out
retf
dec
inc
das
ja
imul
xchg
and
addr16
mov
imul
inc
dec
cli
cmc
push
test
std
dec
movs
adc
retf
cs
cmp
scas
out
aas
enter
in
fucomip
ds
ja
cli
ja
or
xchg
(bad)
test
pop
fstp
movs
pop
test
cwde
popa
sbb
shl
dec
ds
mov
inc
jecxz
lock
mov
(bad)
mov
dec
add
mov
icebp
dec
aad
idiv
dec
adc
hlt
pop
dec
je
inc
adc
mov
sbb
cmp
cmps
popa
into
mov
ins
adc
shl
mov
int3
push
div
das
lahf
lods
inc
push
iret
jmp
ins
jmp
cmp
dec
xor
aas
outs
mov
test
add
mov
cmps
fsubr
idiv
adc
jg
aaa
fmul
inc
mov
aaa
sub
pop
out
cmp
cmp
jo
fidivr
jle
lds
int
pop
mov
rcr
loope
push
enter
lahf
xchg
lods
mov
clc
inc
out
cmp
pop
lods
dec
or
inc
jp
push
(bad)
push
or
pop
xor
rcr
xchg
pop
das
and
add
xlat
dec
cdq
mov
test
push
dec
retf
push
scas
xor
in
aas
das
sub
add
mov
mov
das
pop
aas
push
jmp
mov
or
push
mov
xchg
in
lods
invd
adc
out
pop
ret
mov
lahf
sub
and
and
add
mov
mov
into
pop
mov
cmp
cmp
stc
add
ret
sbb
imul
push
or
mov
pop
pushf
pop
pop
mov
test
fnstcw
jg
je
out
mov
sti
inc
fistp
add
test
jns
pop
xchg
mov
or
outs
out
outs
movs
pop
cdq
or
add
xor
leave
xlat
mov
dec
das
je
out
fist
mov
or
jmp
ja
mov
outs
cmp
mov
ss
pop
clc
(bad)
jle
cld
aad
sub
push
ins
aas
movs
mov
cmp
cmc
pop
imul
es
mov
fld
jb
mov
sbb
retf
pop
cmp
(bad)
jno
lahf
lods
test
retf
shr
mov
test
and
pop
jae
ret
sub
(bad)
xor
pop
scas
lahf
xchg
mov
shl
pusha
xchg
sbb
fucomip
or
jl
test
jg
ins
adc
rcr
(bad)
fsubr
dec
je
(bad)
call
es
jmp
cli
sti
xchg
jge
movntps
gs
jae
jns
lods
pop
dec
je
mov
stos
clc
or
test
imul
sub
fisubr
sbb
mov
xor
mov
mov
lea
pop
xchg
call
sbb
jmp
outs
mov
pop
clc
(bad)
sub
mov
fnstcw
ficomp
int
sbb
test
stos
sbb
mov
jnp
mov
(bad)
jg
jp
dec
call
aad
retf
scas
push
lahf
(bad)
(bad)
jp
push
test
stos
loop
jg
stos
daa
jbe
imul
xchg
mov
(bad)
push
jmp
fwait
and
xor
nop
fmul
fs
lods
cmp
(bad)
out
sbb
jo
loopne
cmp
lods
fidivr
cmp
div
jg
jge
pop
or
push
iret
out
jle
dec
sub
scas
mov
mov
rol
retf
ds
adc
aam
mov
pop
out
jmp
idiv
sar
xchg
mov
dec
mov
xchg
inc
sbb
xchg
iret
pop
psubusb
xchg
mov
sub
das
out
shr
mov
mov
cmp
out
jmp
(bad)
jmp
in
iret
cmp
push
mov
jg
mov
pushf
ret
movs
push
outs
push
xor
mov
jg
(bad)
sbb
mov
pusha
mov
cmc
ret
xor
out
nop
sbb
cmp
add
leave
sub
jns
pop
adc
in
bound
mov
push
push
jne
leave
ins
das
int3
int
and
mov
jb
mov
sbb
lahf
fdivr
inc
xor
outs
fldcw
test
pop
or
jno
pop
xlat
lods
inc
int3
std
mov
ret
dec
jns
cmp
mov
in
inc
push
mov
aas
push
pop
iret
in
jp
jge
das
cs
cmp
jle
mov
mov
and
lds
pop
aas
pop
outs
mov
fs
fnstsw
add
mov
push
jb
sub
(bad)
aas
fadd
aaa
mov
sbb
ficomp
jo
popa
gs
sub
sahf
mov
loopne
jo
inc
xor
iret
or
scas
(bad)
mov
fdiv
xor
lods
icebp
(bad)
(bad)
scas
out
rcl
xor
fisttp
rcr
lods
sbb
xor
mov
int
fstp
call
sbb
scas
pop
loope
imul
pop
inc
sar
aas
push
push
mov
scas
out
lods
jl
out
nop
jle
daa
pushf
les
inc
repnz
outs
test
jp
jo
pop
hlt
push
pop
test
cmps
jl
popf
iret
or
or
loopne
fisttp
pop
or
dec
enter
fdiv
dec
cdq
push
mov
stos
xchg
adc
adc
fld
push
fbld
int3
inc
das
mov
iret
inc
test
(bad)
movs
push
mov
dec
inc
inc
out
mov
movsx
div
push
clc
cmp
dec
fmul
ds
mov
cmp
adc
jmp
scas
dec
xor
stos
push
cmp
lahf
fisubr
dec
loopne
mov
xor
or
out
xor
xor
shl
enter
mov
sub
retw
sub
rcr
arpl
mov
fidiv
data16
push
push
hlt
xchg
xor
inc
jge
mov
pop
fdivrp
or
aas
mov
out
test
pop
scas
mov
(bad)
rcr
pop
mov
jge
or
push
xchg
mov
imul
cdq
in
pop
ret
js
clc
call
mov
ret
retf
mov
stos
nop
or
scas
pop
lds
imul
add
push
jns
(bad)
cmp
adc
fist
jmp
jb
inc
fdiv
outs
mov
gs
adc
adc
or
out
data16
adc
inc
jne
outs
or
jl
fstp
pop
mov
loopne
mov
mov
inc
shr
fidiv
cmp
pusha
xor
iret
mov
movs
cmp
ror
out
ds
cmc
mov
test
adc
and
out
test
fbstp
xlat
fs
shl
sahf
test
mov
sahf
sub
mov
cmp
test
das
fiadd
pop
pop
add
mov
adc
mov
fidiv
dec
inc
outs
cmp
mov
mov
iret
xchg
test
push
jle
adc
push
shl
mov
sub
ja
xchg
dec
arpl
xor
out
mov
mov
mov
cmp
jp
inc
jb
pop
cmp
js
push
mov
mov
(bad)
retf
pop
push
cmp
lds
(bad)
cmp
pushf
in
pop
std
or
jg
mov
lods
inc
inc
ins
adc
pop
fcmovnu
das
cmp
cli
fwait
mov
dec
int
jge
shr
lahf
retf
adc
retf
mov
ds
outs
lock
inc
outs
popf
cdq
mov
pushf
das
fild
jg
(bad)
sbb
shr
mov
xlat
jbe
push
test
cli
cmps
(bad)
(bad)
pop
pop
and
int
dec
sub
(bad)
popa
sub
mov
int
arpl
addr16
(bad)
aaa
sbb
out
sbb
mov
add
das
xchg
mov
jge
in
lods
or
in
out
xchg
pop
imul
sti
or
ret
sbb
dec
sub
xchg
xchg
repnz
es
aad
fstp
sbb
mov
fidivr
in
xor
cs
scas
pusha
pop
loop
xchg
mov
dec
jmp
adc
mov
iret
adc
or
or
fs
outs
mov
stos
or
movs
dec
inc
push
sbb
sbb
mov
ja
je
std
sti
jl
mov
and
jnp
mov
cmp
sub
das
test
scas
sub
sub
pop
das
or
mov
jg
jle
aam
outs
lahf
iret
and
aas
lea
jo
sbb
cmc
pop
adc
adc
jle
pop
les
int
mov
cmp
pop
jns
fidivr
cmps
sub
outs
aas
xor
sub
add
retf
mov
pop
mov
outs
push
retf
adc
pop
fwait
lahf
jge
pushf
or
add
pop
aaa
adc
psubusw
rcr
mov
mov
and
mov
stos
mov
xchg
xchg
jg
dec
cli
mov
outs
push
jae
retf
es
(bad)
mov
xchg
jno
mov
ror
pop
ja
xlat
(bad)
sbb
ret
jl
sar
pop
mov
(bad)
and
imul
js
inc
jmp
stos
fnstcw
inc
inc
sub
mov
cmc
sub
adc
sub
mov
scas
push
addr16
lds
fisttp
rcr
mov
loop
jo
cmps
adc
in
out
adc
and
bound
nop
sub
js
addr16
dec
aas
and
push
cmps
jg
push
pushf
scas
(bad)
(bad)
mov
jbe
adc
(bad)
jae
gs
adc
jbe
mov
jmp
fnstsw
outs
daa
mov
in
lods
imul
mov
jg
enter
cmp
scas
xor
add
cdq
mov
or
mov
push
push
dec
je
iret
test
cdq
inc
cmps
xor
cmps
mov
sub
push
fbstp
ret
das
sub
lods
loopne
jbe
dec
fcomp
shl
push
sub
cwde
das
adc
pop
fild
orps
imul
lods
fistp
addr16
in
lods
sbb
out
pop
jb
dec
dec
out
retf
jns
cmp
lea
enter
jne
pop
cld
jbe
xor
mov
scas
or
daa
int
fsubp
add
mov
sbb
mov
or
jg
mov
push
push
xlat
scas
mov
out
aam
das
jb
sbb
dec
data16
mov
jp
inc
inc
push
sbb
in
adc
das
shl
in
or
scas
pop
(bad)
and
sti
fistp
pusha
arpl
fwait
cmp
ja
inc
out
mov
pop
mov
jp
(bad)
cld
imul
cmp
into
movs
sbb
iret
lds
cmp
les
icebp
lds
lahf
jg
popa
mov
pop
call
xor
in
sar
sub
pop
mov
pushw
cmp
dec
add
fnstcw
cmps
enter
aad
or
mov
mov
dec
(bad)
push
sbb
sbb
or
and
mov
sbb
xchg
push
cld
lahf
mov
cld
(bad)
jmp
push
stc
repnz
and
pop
dec
dec
outs
arpl
sbb
std
pop
sti
fbstp
into
lods
or
out
or
add
lahf
movs
push
daa
movs
mov
mov
lahf
mov
out
push
or
fstp
mov
sti
cmps
ficom
nop
scas
fdivr
xor
xchg
fs
adc
dec
pop
stc
xchg
jbe
add
cs
push
fidiv
mov
lods
daa
inc
cmc
sar
mov
adc
pop
fs
push
jae
and
add
imul
out
pop
sub
aaa
hlt
std
fistp
test
test
sub
imul
or
popf
aaa
jmp
aad
fisub
movs
mov
sub
pop
dec
fstp
pop
sub
cmp
pop
addr16
xchg
sbb
dec
(bad)
fimul
inc
jnp
mov
pop
cmp
push
pop
sahf
push
pop
inc
(bad)
jle
sar
mov
rol
add
dec
sar
cmp
or
int
fcmovbe
imul
out
test
ret
inc
adc
call
adc
out
sub
aad
ds
test
adc
cmp
dec
mov
push
cmp
neg
sbb
out
mov
push
in
pop
outs
xbegin
or
pop
out
(bad)
inc
sbb
lahf
popa
ss
nop
aas
ja
outs
das
jns
fst
and
xor
test
mov
stos
push
(bad)
mov
sti
int3
rcl
call
xchg
(bad)
lods
push
data16
mov
les
adc
aam
cdq
pop
mov
inc
ror
adc
int
and
mov
aas
in
sbb
fucomip
outs
mov
es
add
(bad)
ficom
and
push
or
and
lds
(bad)
bound
or
(bad)
stos
(bad)
scas
sub
inc
in
jle
scas
ficomp
test
test
push
fwait
jp
(bad)
out
mov
xor
pop
jns
scas
or
(bad)
aas
stos
out
xchg
add
ins
push
or
out
sub
fisttp
fidiv
pop
xchg
pop
adc
xor
retf
int3
dec
lock
bts
cmp
jmp
sub
out
fisttp
dec
imul
add
clc
sub
(bad)
fbstp
fldenv
pop
ins
repz
or
(bad)
pusha
xchg
fdivr
pop
and
adc
addr16
push
stc
jge
or
pop
ficomp
dec
mov
mov
dec
jne
pusha
cld
jnp
pop
imul
push
inc
hlt
stos
fadd
mov
stos
lea
mov
mov
fisttp
mov
mov
sbb
fidivr
in
mov
ins
int3
cmp
loop
mov
retf
jno
div
(bad)
mov
lods
inc
sahf
mov
sahf
inc
stc
call
adc
fisttp
or
ins
mov
add
ja
stos
lods
(bad)
push
add
or
sub
pop
ins
(bad)
dec
inc
addr16
cli
dec
push
mov
jno
jne
div
cmps
ins
sbb
sbb
arpl
hlt
push
imul
mov
push
iret
mov
loopne
cdq
dec
outs
jp
mov
loop
mov
ins
sub
test
jns
pop
adc
aas
out
cld
mov
jg
(bad)
addr16
clc
inc
iret
inc
add
xor
xlat
imul
dec
jmp
sar
fidivr
xchg
add
out
ror
cmp
xor
leave
mov
shr
mov
jno
dec
add
or
or
loope
cs
push
push
scas
mov
outs
in
push
int3
int
mov
pop
adc
push
add
pop
push
mov
cdq
repnz
jns
dec
sbb
xor
ins
loope
(bad)
es
xchg
mov
mov
stos
mov
pop
adc
sbb
cli
push
das
cmp
leave
push
inc
xchg
adc
test
add
mov
lds
mov
push
xchg
fild
mov
mov
lds
push
pop
adc
rol
mov
lods
jecxz
cmps
into
xchg
icebp
pop
jbe
pop
outs
dec
in
push
push
mov
outs
lock
pop
jnp
inc
sbb
out
in
mov
fist
(bad)
jg
js
mov
adc
mov
xchg
mov
mov
sub
pop
jle
in
popa
dec
xor
mov
push
into
push
sbb
lods
inc
scas
aam
jb
(bad)
cdq
std
mov
sbb
cmp
idiv
outs
sub
sub
mov
shl
addr16
push
(bad)
push
or
cmps
dec
stos
popf
mov
push
int
push
cmps
call
add
dec
fidiv
aaa
mov
cmp
mov
sbb
sub
stc
or
das
in
pusha
add
ja
ja
sub
xchg
or
popa
cdq
add
scas
pop
mov
fwait
loope
aas
cmp
sub
pop
les
mov
movs
inc
scas
das
xor
mov
loop
xor
dec
ins
dec
sti
cmps
jle
inc
scas
in
jo
push
push
pop
sti
sub
sbb
pop
inc
pop
loope
iret
cwde
jl
cmp
xor
scas
jmp
sub
jle
ins
ins
sub
jnp
mov
cmps
es
pop
mov
ror
outs
aaa
sub
ror
pop
pop
pushf
ins
pop
cmp
lahf
jae
sub
or
cmp
adc
clc
mov
mov
loope
lods
ret
es
je
push
adc
mov
stc
popa
cmps
and
dec
jmp
xor
(bad)
cdq
pop
push
daa
add
test
(bad)
adc
sbb
mov
mov
dec
mov
adc
mov
aas
mov
mov
lea
int3
scas
xchg
fbstp
mov
out
cmp
repz
aas
scas
mov
(bad)
jecxz
push
iret
into
jg
mov
push
jo
std
in
(bad)
fist
retf
aam
scas
out
idiv
pop
sub
das
out
int3
xchg
and
pop
test
cmp
popf
sub
jmp
mov
shr
mov
std
aad
pop
loope
nop
xor
mov
mov
out
mov
in
sbb
mov
leave
lods
out
outs
xchg
push
dec
mov
movs
ja
adc
xchg
frstor
inc
dec
leave
ins
in
imul
lods
mov
rcr
push
ds
out
cmp
cld
cmps
push
out
pop
(bad)
arpl
inc
sub
jle
jmp
dec
aad
or
mov
xor
das
ret
push
into
xor
das
xor
mov
outs
push
(bad)
mov
mov
add
gs
add
lods
(bad)
(bad)
aas
inc
xor
scas
dec
sbb
sahf
mov
ins
adc
xchg
gs
dec
shl
and
mov
and
pop
es
jmp
aas
pusha
pop
outs
pop
dec
lahf
outs
pop
shl
dec
jmp
lods
cs
jp
push
iret
jmp
popa
push
xchg
and
dec
adc
inc
dec
inc
jnp
loopne
test
jg
pop
jno
je
fdivp
xor
into
sub
push
movs
sar
in
push
jne
jmp
loope
jns
or
xchg
sti
push
sbb
lea
push
sbb
(bad)
bound
push
mov
xchg
sahf
lods
dec
sar
jg
mov
leave
cmp
lahf
aas
xlat
xor
pop
ret
neg
test
inc
push
or
dec
(bad)
cmp
in
xchg
test
xchg
(bad)
xchg
fistp
mov
push
dec
pusha
xchg
dec
mov
xor
call
div
pop
out
sti
lods
xor
fs
sub
pop
xchg
xor
pop
in
push
and
push
icebp
icebp
iret
loope
and
scas
into
jmp
mov
ret
mov
adc
(bad)
xlat
cld
and
add
dec
mov
icebp
xchg
pop
lods
pop
sub
or
jp
add
sahf
mov
xor
pop
shr
scas
popa
dec
dec
sub
neg
inc
out
inc
pop
xchg
das
jae
iret
jmp
sar
jl
repnz
outs
ds
xchg
lahf
jo
ficom
xchg
ja
sbb
jle
lock
mov
int
stos
mov
push
push
sub
das
sahf
cmp
pop
idiv
mov
aad
pushfw
idiv
push
std
(bad)
aad
idiv
iret
adc
addr16
lahf
xchg
les
xlat
dec
add
ud0
data16
pop
xchg
icebp
idiv
jne
cmps
mov
mov
sbb
cmps
cmc
gs
das
sub
xchg
pop
test
mov
xchg
test
or
sbb
pop
int
pop
cli
stc
mov
(bad)
out
cmp
lahf
cmp
xchg
xchg
adc
xchg
ds
cs
xchg
fadd
clc
cmp
lods
imul
ret
mov
lahf
dec
xchg
push
fstp
int
dec
fs
inc
xor
aaa
jle
add
icebp
(bad)
in
jne
and
cdq
jbe
test
xlat
in
ret
mov
movs
inc
push
loope
ficomp
xchg
mov
rcl
cmp
or
jp
lahf
mov
cmp
cmp
pop
mov
idiv
jno
inc
jmp
push
pop
pop
daa
pop
scas
test
bound
push
push
lea
imul
out
idiv
mov
mov
stos
stc
xlat
out
mov
enter
mov
or
cmc
out
inc
into
lahf
(bad)
scas
xchg
mov
push
xlat
push
aaa
scas
inc
cmps
(bad)
inc
jmp
sbb
fcmovu
lods
xchg
cmc
out
imul
push
adc
jecxz
cmp
aam
(bad)
test
cmp
clc
pop
pop
repz
out
jp
out
jl
pop
pop
inc
jne
jecxz
cdq
fild
adc
or
and
mov
movs
setae
or
dec
fbstp
arpl
xor
gs
xchg
iret
pop
inc
mov
xchg
das
xchg
hlt
or
fbstp
adc
aas
pop
scas
xchg
mov
sub
lahf
fld
xchg
jecxz
and
iret
arpl
xchg
adc
das
fbld
aaa
inc
out
mov
stc
pop
fimul
pop
fldcw
xor
movd
cmp
scas
pop
cmc
test
pop
test
jmp
jmp
push
mov
lds
mov
stos
enter
loop
pop
jecxz
retf
outs
aas
xchg
push
sbb
bt
fisttp
out
pop
iret
out
pop
push
mov
sti
cs
shld
xchg
das
sub
cmp
sub
ds
sub
fsub
dec
imul
sti
jg
outs
sub
fstp
imul
add
iret
fiadd
dec
xchg
sbb
mov
scas
and
test
fld
pop
or
mov
ss
popf
mov
inc
mov
adc
(bad)
pushf
popa
hlt
pop
mov
iret
imul
pop
adc
xor
scas
loope
shl
mov
sahf
push
sbb
mov
cld
lds
jnp
imul
dec
stos
pop
outs
mov
dec
mov
iret
fadd
pushf
out
push
xor
xor
sbb
jle
xlat
mov
cmp
mov
push
xor
call
imul
jb
stos
cdq
fdivr
dec
arpl
das
sub
mov
fdivr
jecxz
fistp
aas
mov
cmp
ins
xchg
fisubr
lahf
femms
mov
xor
pusha
test
iret
rcl
mov
xchg
lock
jecxz
fist
jg
push
xchg
push
sub
loopne
fild
jb
xchg
mov
fimul
repnz
mov
mov
sbb
mov
and
jg
es
pushf
push
inc
jmp
mov
rcpps
mov
icebp
add
fisttp
jp
pop
(bad)
loop
sti
adc
adc
out
sub
sub
aas
adc
mov
stos
idiv
outs
mov
mov
fistp
movs
iret
adc
jp
aaa
xchg
dec
lahf
das
(bad)
shl
push
and
dec
pinsrw
sbb
mov
shl
cmp
mov
arpl
jmp
(bad)
pop
stos
fcomip
fisttp
or
mov
nop
fcomp
jno
cmp
pop
pop
scas
push
push
or
pop
mov
dec
dec
aad
retf
xchg
(bad)
into
sbb
mov
and
dec
fisttp
addr16
test
mov
rol
cmp
sbb
pop
mov
scas
push
inc
push
jl
scas
jmp
fbld
jmp
fistp
les
xor
outs
adc
js
adc
stos
cmp
int3
xchg
aad
xchg
jbe
sub
hlt
daa
inc
out
dec
and
and
push
mov
loope
in
outs
mov
mov
dec
push
add
xlat
pop
pop
dec
jg
lods
loopne
mov
dec
fbld
das
add
shl
push
out
adc
pop
pusha
sub
mov
outs
outs
mov
aas
push
lea
shr
mov
or
test
call
and
pop
pop
pop
pop
cwde
inc
sub
imul
jg
enter
mov
test
mov
dec
inc
sbb
cli
dec
aaa
pop
imul
push
or
in
push
mov
xchg
adc
adc
dec
in
or
into
jmp
and
dec
dec
xor
retf
jmp
adc
(bad)
lahf
pop
stc
and
mov
mov
icebp
adc
fst
or
sar
ret
pop
sahf
pop
push
fdiv
push
mov
iret
pop
adc
ret
pop
outs
int3
idiv
rcl
and
dec
xchg
cmp
sar
div
pop
movs
xchg
sbb
pop
rol
add
push
sbb
sbb
aam
cmp
dec
js
dec
popa
jl
arpl
push
adc
(bad)
outs
icebp
ja
jbe
outs
sahf
lahf
loope
mov
jae
add
stos
(bad)
pop
mov
xchg
push
pop
js
fcom
aas
call
xor
sub
lods
dec
repz
mov
mov
xor
scas
jg
call
and
xor
arpl
adc
fs
xor
std
or
(bad)
jle
sub
pop
mov
movs
(bad)
mov
retf
add
adc
mov
loop
test
call
or
popf
loope
mov
cmc
fcmovb
or
or
pop
ins
adc
lea
jl
int3
pop
cmp
mov
fbld
or
cmp
lods
fisub
(bad)
aam
sub
pop
mov
mov
in
mov
inc
mov
loopne
mov
xor
ror
sahf
stos
out
dec
rcr
dec
repz
psubsw
mov
push
outs
(bad)
cmp
sahf
sub
rcr
inc
xor
push
xor
mov
ds
push
sub
mov
sub
xchg
xor
shr
(bad)
fld
fstp
jp
pop
xchg
xor
setg
fwait
retf
xor
loop
sub
lods
ins
mov
mov
iret
ret
mov
add
enter
xchg
scas
mov
stos
ror
repnz
outs
ret
jnp
fcomp
fcmovnbe
push
repz
jnp
jge
jg
sbb
pop
mov
xchg
mov
fwait
pop
sbb
sbb
outs
ins
leave
fyl2xp1
pop
jne
add
call
out
lock
xchg
outs
popa
lahf
loop
jmp
or
jmp
cmp
jmp
push
out
push
fistp
ins
and
(bad)
push
mov
mov
lock
xchg
jae
lahf
das
jp
pop
cmps
push
sbb
scas
das
mov
mov
outs
rol
dec
(bad)
aas
push
mov
xor
cmp
push
out
push
fidivr
outs
out
in
call
mov
xchg
ja
ds
xchg
dec
cs
idiv
push
and
inc
pop
mov
outs
shl
mov
je
pop
jno
into
sbb
or
ror
sbb
jp
or
bound
mov
jno
xchg
xor
mov
pushf
aas
call
ins
dec
jecxz
dec
push
mov
jmp
mov
jmp
pop
loope
jl
jae
scas
fdiv
adc
sub
lea
sahf
xor
mov
sbb
sbb
cs
scas
adc
into
mov
(bad)
fisttp
stos
pop
lahf
sbb
cmps
mov
lahf
fldcw
push
fmul
sahf
push
sub
pop
out
mov
das
inc
cmp
scas
xor
jecxz
xor
inc
int
and
scas
aam
mov
fnsave
into
imul
sbb
lods
mov
jmp
iret
mov
add
dec
mov
mov
rsqrtps
sbb
sahf
xchg
or
call
mov
aam
outs
jg
into
dec
popf
imul
mov
mov
shl
cmp
stos
push
cdq
push
in
dec
ficom
cmp
mov
sbb
in
pop
test
sbb
push
ins
jl
adc
ds
fsubr
cmp
rol
into
aas
stos
cld
mov
jp
jb
adc
sbb
xchg
xor
jnp
pop
cmps
(bad)
out
mov
popa
sti
ret
in
scas
pushf
or
push
and
jp
ror
test
inc
pop
stos
add
cli
outs
pop
mov
pop
mov
imul
movs
rcl
xor
cmp
imul
fld
daa
pop
cmp
fcom
fnsave
icebp
dec
xor
xchg
ins
jp
mov
dec
fldenv
mov
stos
(bad)
aad
dec
outs
out
pop
test
ret
daa
push
push
das
cmc
movs
test
xchg
shl
sar
fwait
aas
clc
das
mov
iret
push
psrlq
sub
ror
and
cs
inc
int3
ror
push
push
outs
sub
test
sbb
icebp
loop
outs
sbb
aas
xchg
out
lods
mov
and
arpl
dec
and
outs
push
xor
loop
loopne
jo
daa
out
pop
push
inc
mov
add
sbb
mov
pop
into
add
cs
cs
jp
loopne
add
sahf
dec
and
(bad)
mov
mov
popf
jo
iret
je
out
jmp
outs
in
push
pop
(bad)
jg
pop
jp
and
(bad)
push
mov
retf
inc
push
sbb
xchg
fcom
pop
fwait
int3
hlt
test
jmp
xchg
jnp
adc
xchg
dec
jg
jbe
stc
adc
das
jmp
add
sti
adc
sahf
aaa
pop
fwait
pop
dec
adc
jecxz
call
cmp
push
add
pushf
out
inc
inc
aam
ret
mov
(bad)
sbb
repz
fwait
push
inc
jl
ins
ret
sbb
repz
mov
xchg
jl
jno
icebp
scas
xor
or
aaa
pop
sub
add
or
jnp
les
pop
sbb
outs
mov
ficomp
addr16
cwde
leave
clc
fild
das
sub
xor
out
cmp
pop
loopne
cmp
jo
paddb
stc
mov
jno
sbb
stos
outs
scas
mov
data16
mov
es
push
adc
mov
adc
adc
adc
(bad)
fucomip
imul
mov
sahf
cmp
mov
jle
das
imul
scas
mov
inc
adc
push
inc
inc
fild
out
jne
lds
and
xchg
sahf
outs
adc
lds
pop
cs
outs
sbb
nop
and
inc
jg
xor
dec
jae
gs
rol
mov
ins
jp
lock
push
call
dec
and
xchg
adc
mov
aas
mov
mov
xchg
in
sub
sub
stos
lahf
or
sbb
int
lods
add
(bad)
mov
inc
loop
leave
lea
imul
out
mov
mov
out
scas
add
(bad)
movlps
mov
mov
popf
movsx
xlat
(bad)
mov
test
or
cld
inc
ret
neg
iret
imul
xchg
iret
adc
sahf
lahf
sar
hlt
or
or
push
cmp
in
scas
ja
outs
or
xchg
add
adc
sar
(bad)
jne
lahf
cwde
aas
pushf
imul
push
jmp
retf
sub
jne
fsubrp
pop
sbb
inc
xor
sub
or
fcomp
shl
outs
mov
loope
jg
sub
lods
or
pop
jns
jmp
lahf
pop
pcmpgtw
dec
lods
enter
mov
loop
dec
dec
pop
sub
sbb
mov
dec
cli
dec
stos
retf
jmp
jge
xor
pop
(bad)
in
aas
mov
shl
jne
add
pop
mov
outs
scas
xor
scas
mov
mov
xchg
lahf
or
pop
mov
cmp
pop
popf
les
xlat
pop
iret
popa
jae
jg
out
mov
ficom
dec
mov
ror
rcr
jge
scas
push
sub
jle
dec
fucomip
xlat
xor
fimul
(bad)
sub
xchg
jl
pop
jns
sbb
clc
std
and
mov
adc
or
add
dec
cmp
mov
sub
push
jmp
fisttp
adc
mov
mov
jge
fidivr
pop
stos
test
push
inc
jmp
notrack
push
xchg
dec
xchg
pop
mov
and
cmp
push
out
dec
fucomi
cmp
jmp
scas
pushf
repz
popa
sub
xor
adc
sub
adc
ins
pop
adc
loope
stos
enter
jle
stos
inc
xor
ret
pop
sti
dec
fdivp
pop
jmp
pop
add
sub
or
ins
(bad)
dec
js
push
jo
or
push
rcl
lahf
(bad)
or
in
adc
imul
cmp
dec
cmc
push
out
push
and
adc
sahf
sub
jg
retf
sub
xor
mov
pop
mov
push
mov
scas
and
seto
fwait
lock
ds
mov
and
jns
imul
sbb
outs
pushf
ins
shl
dec
(bad)
sub
test
xchg
(bad)
sahf
imul
setg
sub
inc
push
pusha
adc
into
pop
loopne
pop
call
lahf
dec
push
das
xchg
das
inc
scas
xchg
dec
inc
retf
jmp
adc
or
pop
daa
dec
and
mov
sti
out
xor
das
iret
mov
xchg
mov
movlhps
in
sbb
int3
mov
bound
outs
pop
repnz
cmp
das
call
and
in
fucomip
dec
repz
adc
out
or
pop
in
outs
push
dec
add
xor
outs
add
inc
adc
out
iret
arpl
test
adc
cmc
mov
pop
pop
rcr
jae
mov
push
jge
sbb
jo
add
cmp
xor
or
xor
sahf
and
fmul
das
mov
push
or
out
iret
jge
push
repz
xchg
xor
repz
mov
add
sub
adc
or
ins
fbstp
sub
xor
ret
adc
cwde
xor
sub
dec
jecxz
cmps
into
arpl
inc
and
iret
and
xor
add
iret
mov
popf
repz
mov
stc
lahf
stc
rcr
jecxz
fucomip
(bad)
out
mov
add
push
sbb
pop
mov
fld
xor
repnz
addr16
xor
xor
xlat
adc
stos
cmp
rcr
sub
push
in
inc
repnz
ret
mov
and
aas
sbb
loop
and
xchg
ficom
fwait
sub
xchg
add
jecxz
mov
shl
and
inc
outs
lods
rcr
daa
ds
rol
add
xchg
xacquire
pop
fst
cs
cmp
outs
mov
jg
pextrw
dec
repnz
bound
idiv
pusha
jnp
addr16
cmps
and
mov
mov
mov
dec
popa
cld
std
mov
shr
lahf
aas
xor
jg
fisubr
sub
pop
cmc
dec
loopne
cmps
aas
loopne
jg
lds
jge
cwde
add
out
inc
cmp
arpl
sbb
push
out
and
nop
push
jge
repnz
push
pop
call
pop
enter
shr
repnz
mov
aaa
pushf
add
cmps
repz
fnstsw
repnz
dec
jmp
xor
addr16
scas
add
int3
sub
adc
sbb
pop
mov
das
cli
push
and
mov
outs
(bad)
iret
test
mov
xor
adc
das
adc
xchg
or
movs
push
pop
popa
dec
jae
fild
sbb
push
loope
iret
fwait
out
fbstp
sbb
adc
iret
arpl
repz
das
mov
lahf
(bad)
and
ret
ret
add
push
lahf
jecxz
pop
jg
scas
fild
cmp
push
sbb
cvtdq2ps
jecxz
xlat
(bad)
fisubr
xchg
loopne
adc
addr16
fbld
inc
mov
hlt
das
lods
icebp
test
or
mov
pop
gs
outs
iret
push
pop
and
mov
sbb
and
mov
and
adc
cs
jmp
mov
arpl
xchg
sub
aad
(bad)
test
mov
ret
fisttp
push
add
pop
cs
sbb
push
stos
add
mov
add
fstp
loop
imul
cmp
sbb
call
lahf
pop
push
ret
pop
outs
xor
test
out
outs
xchg
adc
lahf
mov
push
sbb
or
retf
fs
das
aam
mov
and
iret
into
loop
lock
jae
and
add
and
fld
cs
and
and
sbb
pop
xor
xor
out
push
mov
push
xor
jle
sub
fsubp
push
and
ds
cs
test
xchg
ret
lahf
pop
outs
and
push
pop
arpl
icebp
std
pop
jp
cs
mov
int3
pop
mov
leave
call
aaa
ins
mov
or
lock
xor
mov
out
(bad)
push
inc
add
iret
outs
or
(bad)
repz
fwait
and
out
sbb
ds
mov
sqrtps
jle
jecxz
sahf
ret
jle
test
sbb
pusha
sbb
jecxz
fcmovb
lahf
daa
call
dec
add
cli
cmp
test
jo
(bad)
iret
btr
lods
fistp
mov
mov
out
mov
pop
pop
adc
inc
push
sar
aas
das
adc
mov
jg
arpl
setne
inc
outs
daa
or
xor
and
into
retf
adc
cmc
mov
(bad)
adc
mov
pop
sub
xor
jne
xor
mov
jle
jge
add
add
xchg
xor
(bad)
icebp
movs
jb
sbb
push
fsubr
cld
mov
or
das
imul
call
scas
ds
int3
xor
cmp
sbb
pop
pop
ds
adc
(bad)
mov
push
dec
jecxz
sub
inc
dec
dec
or
xchg
xor
cmps
push
mov
push
mov
scas
dec
sbb
scas
ror
jo
in
and
in
pop
jp
push
repnz
adc
inc
adc
test
outs
repnz
movs
mov
push
bound
out
dec
fadd
loop
push
jno
and
shl
retf
sahf
icebp
(bad)
ror
xor
fld
fdiv
jle
(bad)
(bad)
pop
out
push
pusha
psrlw
int3
jle
nop
add
sub
inc
outs
jg
jae
xchg
inc
ret
xchg
das
(bad)
mov
enter
mov
xchg
popa
rep
ds
dec
dec
call
out
push
les
out
loopne
xlat
cdq
aas
outs
ds
aas
sahf
fcomp
jle
xchg
inc
mov
pop
adc
or
push
and
sub
scas
out
int3
jle
xchg
adc
mov
mov
push
outs
into
or
mov
fimul
xor
fwait
jae
add
mov
and
in
push
(bad)
mov
out
bound
arpl
xor
(bad)
ds
adc
arpl
cmps
gs
mov
mov
jnp
sub
adc
fsubr
(bad)
loope
leave
arpl
and
mov
fist
(bad)
mov
ror
push
out
push
addr16
es
cmp
in
aad
adc
jg
mov
xchg
push
lods
and
inc
pop
jns
jb
scas
mov
jo
lods
cmp
jg
mov
and
mov
aas
mov
sbb
dec
les
mov
jg
xor
and
outs
into
mov
pop
out
cmc
imul
pop
(bad)
iret
ins
add
and
pop
lods
cld
mov
mov
push
rcr
pushf
jecxz
mov
inc
jecxz
sub
inc
jmp
cmpxchg
jg
xchg
iret
(bad)
push
leave
daa
cli
mov
mov
pop
push
cs
xchg
into
dec
retf
outs
scas
inc
not
and
shl
outs
in
loope
out
push
cmp
call
rol
sbb
push
mov
bound
in
pop
pop
pop
add
push
not
pop
(bad)
repz
pop
jecxz
sbb
xor
xor
movs
sar
ficomp
push
int
cmp
dec
and
(bad)
stc
lods
mov
push
mov
xor
out
jg
(bad)
rcl
add
dec
jmp
mov
mov
jbe
icebp
out
inc
jle
mov
jmp
cmp
push
or
pop
fisttp
push
cmc
(bad)
push
xor
outs
jnp
repz
idiv
cli
lahf
in
mov
xor
lahf
adc
shl
inc
lea
xchg
dec
adc
push
pop
sub
or
imul
(bad)
sahf
xor
jle
mov
mov
inc
aad
cdq
adc
fldenv
cmp
mov
push
movq
mov
bound
fsub
test
ds
arpl
mov
aas
retf
sti
xchg
adc
cld
stos
das
mov
jecxz
push
or
adc
sbb
pop
jb
and
push
jae
jg
cmp
lahf
pop
pop
push
jnp
pop
outs
std
pop
mov
and
xchg
jle
mov
mov
mov
mov
pop
jnp
dec
iret
xchg
loopne
push
and
stc
loope
lahf
iret
lods
icebp
mov
sbb
cwde
cs
jnp
ja
fidivr
mov
pop
lea
jae
and
push
mov
inc
mov
repz
arpl
cmc
inc
repz
add
rol
lahf
mov
jecxz
lock
mov
out
inc
xchg
xchg
dec
test
push
dec
sar
aas
mov
mov
scas
pop
push
mov
scas
xor
arpl
xchg
aad
xchg
jmp
leave
sbb
mov
xor
pop
clc
or
rcl
ret
lock
dec
call
out
out
mov
lods
xor
mov
jecxz
(bad)
push
iret
add
cmp
cmps
jae
in
xchg
jbe
data16
das
cmp
bound
xor
pop
jmp
xchg
out
jmp
loopne
repz
outs
mov
pop
mov
pusha
wrmsr
call
mov
push
std
and
inc
sbb
pop
mov
adc
sub
xchg
add
inc
xor
jmp
xor
jb
retf
inc
std
mov
mov
repnz
adc
jmp
pop
sti
dec
jo
add
jecxz
sbb
jg
xchg
adc
dec
cmps
inc
xor
xchg
addr16
sahf
lods
add
ret
bound
into
ds
daa
sbb
pop
lods
sub
aaa
rol
sub
inc
mov
cmp
cmps
shl
lea
aad
scas
arpl
outs
dec
test
push
sub
xchg
push
aad
nop
retf
mov
cmp
gs
xor
clc
xor
scas
aas
xchg
xor
cmc
out
fistp
dec
fdivr
aas
call
add
add
xor
idiv
arpl
mov
mov
into
sub
pushf
iret
(bad)
jecxz
pavgw
xor
mov
iret
adc
ds
xchg
xlat
lahf
cs
and
ret
ja
cmp
(bad)
pop
xchg
mov
fist
jnp
mov
imul
pop
aas
dec
jle
add
jecxz
(bad)
jmp
daa
pop
mov
sbb
iret
ins
fisub
mov
cmp
sbb
inc
repz
mov
pushf
sti
cmp
mov
or
cmp
js
jecxz
xor
cmp
sub
mov
mov
test
out
std
jg
cli
xchg
xor
jns
mov
fimul
test
fisub
pop
pop
mov
cli
cwde
aad
mov
js
stos
cdq
sub
adc
dec
adc
lahf
aas
push
pop
inc
pop
clc
sub
mov
(bad)
fsubr
inc
xchg
(bad)
repz
lods
xor
das
cld
mov
ds
push
sub
cmp
imul
cmp
dec
fstp
cmp
lahf
push
jecxz
or
inc
add
xchg
(bad)
outs
jmp
sub
retf
mov
lahf
sub
mov
mov
ret
ds
or
popa
out
pop
push
ins
out
sbb
dec
add
jl
mov
imul
(bad)
es
movs
mov
cs
aas
mov
dec
fnsave
ins
cmp
arpl
jns
test
sub
ja
leave
stc
sub
rcr
pop
shr
dec
(bad)
cmp
out
and
mov
iret
push
xchg
mov
cwde
mov
in
mov
aas
(bad)
mov
stos
ins
popa
emms
xor
dec
mov
adc
jb
sub
add
dec
and
lahf
mov
iret
inc
(bad)
mov
outs
push
icebp
imul
jns
hlt
call
out
pop
call
sbb
iret
daa
adc
sbb
out
call
cmps
stc
inc
and
jmp
mov
lods
push
push
scas
adc
mov
lahf
pop
fcom
in
in
stos
dec
test
or
mov
sub
push
pop
retf
scas
int
out
jno
add
jg
mov
call
push
sub
xchg
add
mov
and
xchg
pop
pushf
pop
xchg
or
jnp
pop
adc
fisttp
cmp
aad
pop
jo
into
lods
shr
icebp
sar
pop
sub
out
sahf
sbb
xchg
movs
xchg
(bad)
sahf
pop
mov
mov
popa
jo
(bad)
mov
jmp
add
inc
sub
repz
jecxz
outs
jmp
(bad)
repz
fistp
arpl
sahf
outs
(bad)
pop
mov
pusha
int
in
dec
jg
adc
mov
(bad)
dec
(bad)
jle
adc
cld
sahf
adc
push
ret
mov
jnp
xchg
lahf
rcl
jg
push
pop
add
fbstp
scas
mov
jnp
mov
xchg
(bad)
mov
dec
and
shr
out
imul
lea
jecxz
mov
pop
xor
jecxz
(bad)
mov
pop
cmp
xor
pop
adc
pop
test
dec
loope
repz
std
fistp
xchg
aas
call
inc
scas
add
push
jge
leave
push
xchg
jge
cwde
inc
or
daa
push
retf
mov
pop
mov
dec
sub
shl
jmp
dec
adc
das
repnz
xlat
mov
jg
jno
push
xor
and
jle
dec
add
addr16
or
jmp
inc
adc
gs
(bad)
(bad)
out
inc
outs
pusha
push
jp
jg
pop
sbb
mov
out
inc
popf
dec
icebp
lds
fild
inc
jl
arpl
cdq
jg
pop
push
into
xor
in
std
jge
js
jmp
pop
mov
mov
je
cs
jae
or
push
push
out
mov
sbb
mov
pop
scas
pop
push
push
enter
sub
shl
lahf
out
mov
sub
jns
mov
cmp
sub
retf
sub
dec
inc
mov
mov
dec
fwait
or
lahf
xor
push
cmp
les
iret
(bad)
fistp
lock
add
sbb
fcomp
cmps
cmps
pop
xlat
xchg
mov
mov
sub
inc
inc
mov
xor
out
mov
pop
cmp
inc
mov
iret
or
int3
pop
mov
mov
jae
push
jg
imul
scas
adc
mov
scas
pop
ins
add
push
fimul
pop
mov
or
outs
jne
lahf
pusha
shr
stos
stos
adc
call
and
dec
retf
adc
cmp
inc
(bad)
fistp
pop
aaa
inc
sar
outs
aas
sbb
xor
cmps
fmul
adc
(bad)
adc
arpl
dec
fistp
dec
adc
das
push
mov
scas
pop
(bad)
or
cmp
cmp
cli
das
inc
xchg
cld
lods
fidiv
mov
xadd
mov
scas
jg
pop
inc
xchg
in
cmovbe
mov
scas
mov
lahf
fistp
out
or
mov
push
and
cmp
push
push
lahf
cdq
xchg
mov
outs
mov
sub
iret
sahf
fwait
or
or
out
out
into
push
scas
aas
jmp
mov
sub
fsub
pop
outs
dec
out
xchg
scas
pop
pusha
mov
mul
jg
jg
mov
adc
sahf
dec
rcr
pop
mov
push
aaa
call
jg
into
push
jno
mov
mov
lods
pop
cmp
add
xchg
enter
mov
xor
mov
icebp
in
int3
push
nop
jb
lods
inc
fisub
push
sub
sbb
ret
push
aas
cmp
imul
leave
mov
xor
call
out
ins
mov
mov
outs
adc
ficomp
aad
xchg
push
(bad)
sbb
pop
clc
fst
aaa
lahf
xor
push
std
pop
fist
(bad)
sbb
cmp
gs
cli
mov
or
js
loope
lahf
mov
push
gs
stc
daa
jg
mov
scas
push
fbld
out
aas
sub
sub
add
fmul
mov
sahf
push
das
aas
pop
outs
jne
adc
add
sub
jle
pop
(bad)
cmps
cld
out
repz
and
xor
pop
add
pop
outs
push
pop
and
lock
les
mov
cli
xor
mov
xor
mov
xor
mov
loop
or
fistp
(bad)
call
push
xor
test
pop
cdq
xor
push
mov
fidivr
cmp
pop
scas
push
cmp
fcomp
pop
iret
setg
dec
(bad)
pop
lahf
out
push
jb
rcr
scas
lahf
dec
bound
dec
mov
jmp
(bad)
sub
scas
in
cmp
mov
or
(bad)
mov
adc
mov
leave
push
dec
rcl
jge
ret
jl
sbb
sub
xchg
mov
jle
scas
inc
loop
fisubr
or
lea
sub
lds
outs
dec
jmp
clc
mov
dec
sahf
int3
sub
jb
mov
add
cmp
jo
inc
(bad)
int
sbb
lahf
mov
sbb
imul
add
ror
imul
mov
loopne
and
add
push
test
ror
push
lods
pop
ret
aas
cmps
pop
in
or
and
jnp
nop
sub
iret
sbb
inc
jae
(bad)
or
adc
and
add
jp
pop
sahf
sub
jle
cmp
adc
test
outs
enter
std
push
(bad)
out
dec
mov
sbb
outs
xchg
add
or
push
mov
xor
cdq
pop
dec
sar
xchg
dec
adc
jp
cdq
jmp
(bad)
fmulp
pop
adc
jp
pop
xor
xor
jns
push
mov
mov
jp
stc
sbb
inc
push
mov
lods
leave
stc
xor
mov
cmp
dec
sbb
fld
(bad)
jmp
ins
call
lods
xor
popa
xor
cld
cmp
push
outs
fcom
outs
sub
imul
mov
retf
lock
xor
inc
or
xchg
fwait
jg
test
and
sub
lahf
lods
pop
push
mov
or
fs
pop
cs
stos
popf
fmul
xor
in
xor
cli
jg
jle
paddsb
shl
das
dec
outs
pop
mov
push
sub
jl
jns
mov
fadd
(bad)
arpl
push
jmp
xor
mov
push
jmp
les
xor
push
push
and
fisubr
sub
stc
in
out
and
lods
dec
mov
adc
pusha
add
test
jae
jmp
shl
jle
ja
scas
mov
dec
jo
cmp
inc
mov
iret
test
or
neg
(bad)
loopne
jge
lods
js
or
mov
enter
pop
jo
xor
sub
mov
adc
xor
sbb
hlt
out
icebp
je
lea
xchg
add
adc
mov
(bad)
jmp
dec
inc
cmp
in
mov
jmp
sbb
iret
mov
add
mov
fadd
mov
in
dec
and
aam
test
pop
push
sub
test
test
cmp
push
leave
dec
cmp
sbb
data16
jmp
mov
sub
dec
aam
stos
dec
add
ins
sub
int
sub
sbb
arpl
xchg
test
or
fs
jp
push
outs
lds
test
fmul
jbe
mov
cli
mov
add
pusha
jae
mov
mov
mov
cmp
dec
inc
ins
push
mov
loope
xor
ja
out
mov
ret
mov
or
push
or
in
dec
and
pop
std
cs
add
movs
dec
sub
ins
mov
push
dec
stos
mov
push
push
push
adc
ret
or
add
jbe
out
push
in
inc
and
into
push
jmp
or
movs
bound
test
jbe
or
enter
dec
sub
frstor
xchg
push
dec
add
data16
test
jns
pop
nop
inc
jmp
push
pop
mov
arpl
jnp
and
mov
xchg
and
jnp
repz
aaa
arpl
aad
mov
out
imul
cmp
iret
inc
aaa
jecxz
stos
jae
cmp
cmp
cmps
pop
mov
mov
ja
fwait
jae
aaa
xor
mov
cmp
pusha
cmp
fnsave
sahf
enter
cmps
jae
jg
xchg
mov
pop
imul
icebp
mov
lahf
jecxz
mov
in
adc
mov
sti
mov
inc
pop
arpl
cmps
aaa
xor
xchg
jb
xchg
mov
sti
push
cmp
adc
mov
adc
sub
cmp
nop
cmp
test
test
push
mov
fild
push
ja
and
lahf
call
lock
ss
mov
addr16
push
mov
mov
jbe
das
aaa
enter
aaa
lds
stc
imul
mov
into
xor
daa
xchg
rcr
adc
cmp
in
mov
push
aaa
pop
jnp
push
pop
mov
stos
ja
adc
bound
icebp
jae
push
dec
mov
sahf
je
mov
jnp
adc
jnp
arpl
pop
mov
aaa
push
aaa
fwait
aaa
inc
sti
jnp
dec
xchg
div
cmps
adc
pusha
adc
mov
mov
jae
loopne
lock
sti
xlat
fwait
jecxz
rol
and
sti
ja
mov
and
xor
stos
movs
lods
push
(bad)
and
sub
pop
out
xchg
dec
mov
pop
xchg
sub
jl
test
rcl
(bad)
sti
test
in
xchg
(bad)
pop
mov
inc
imul
icebp
es
(bad)
fild
adc
push
std
or
(bad)
retf
pop
pushf
lock
lea
and
cmps
jb
pop
jp
sbb
fstp
cmps
jbe
idiv
adc
xchg
jl
jo
ins
ins
pop
add
and
outs
jge
jge
daa
xchg
cmc
out
adc
adc
div
mov
and
adc
and
test
cmc
push
mov
jb
xchg
cmps
jge
add
xor
js
lock
jae
mov
out
xchg
loope
stc
sbb
lock
ins
push
movs
ins
pop
(bad)
jns
jno
push
jo
push
mov
clc
or
jbe
jbe
cmp
xchg
or
lods
sub
mov
pop
inc
pop
cmps
js
imul
ret
stc
pop
dec
mov
xor
ins
jae
(bad)
clc
das
mov
xchg
mov
ss
call
cmp
out
sahf
imul
adc
je
test
rcl
mov
out
cmp
pusha
sbb
fwait
push
sbb
imul
ss
or
push
pop
neg
sahf
xor
jbe
or
lock
pop
pop
(bad)
adc
test
movs
cmp
mov
retf
mov
mov
mov
out
xor
sbb
jbe
cmps
ins
dec
xchg
neg
cmp
inc
xlat
cwde
jmp
dec
jb
mov
nop
ss
scas
sbb
sbb
or
(bad)
out
into
bnd
cmp
mov
dec
xor
mov
inc
mov
xor
cmc
jo
mov
mov
mov
jo
pop
dec
mov
call
call
mov
mov
es
(bad)
lahf
faddp
je
dec
ins
les
ficomp
add
adc
cmp
pop
jmp
cwde
repnz
fnstsw
lds
dec
sbb
push
adc
out
xchg
xchg
ret
lea
in
out
cmp
xor
push
es
aaa
fwait
es
inc
cmps
sbb
fisub
enter
sbb
out
inc
popf
rcr
adc
lock
ins
cwde
mov
es
mov
sbb
mov
mov
pop
mov
xchg
sbb
xor
mov
dec
jle
mov
mov
xor
lods
xchg
loope
nop
mov
adc
mov
jbe
jbe
jbe
in
xchg
aaa
sub
daa
push
adc
outs
dec
jno
jmp
cmp
ins
int
fucomi
jnp
cmp
and
mov
or
jno
inc
xor
mov
pop
dec
scas
outs
cwde
mov
pusha
cmp
dec
ds
mov
loope
cmp
jno
xchg
pusha
sub
inc
shl
dec
cmp
outs
cs
mov
je
mov
mov
enter
xor
cwde
mov
hlt
aas
mov
scas
xor
int
xchg
mov
loope
pop
test
lock
push
or
js
push
sub
sub
lods
cmp
mov
xor
cmp
dec
popa
cmp
or
cmp
clc
pop
test
jl
arpl
and
xor
xchg
fimul
mov
inc
repnz
clc
mov
push
mov
test
add
push
mov
sbb
in
mov
jecxz
loopne
push
pop
ficom
and
pusha
repnz
xor
inc
xor
test
xor
out
xor
xchg
in
lods
mov
loop
mov
jle
pusha
in
rcr
push
xchg
push
aas
push
or
(bad)
ins
xchg
xchg
stos
dec
arpl
pop
scas
mov
aas
stos
xchg
fidivr
push
add
push
fld
cwde
jbe
cmp
inc
js
cmp
sbb
and
xchg
mov
cmc
and
and
mov
mov
jmp
cdq
inc
ds
inc
xchg
adc
int3
leave
imul
push
mov
ins
jns
out
mov
fld
jne
test
fstp
and
cs
or
data16
fsubr
or
rol
cmps
cmp
in
cmp
cmps
cmp
jnp
mov
out
imul
or
sub
xchg
add
(bad)
mul
fs
mov
out
pop
push
mov
(bad)
fcom
inc
gs
inc
fsub
shl
or
xor
xlat
mov
ja
and
or
mov
inc
mov
mov
cmp
xchg
lods
shl
fdivr
jb
push
call
fcomi
loop
repnz
fs
imul
and
mov
int3
sub
int
idiv
adc
out
xchg
test
inc
test
nop
mov
mov
xchg
sbb
cmp
mov
sahf
movs
rep
sub
or
jb
xor
sbb
inc
(bad)
mov
es
mov
daa
mov
(bad)
or
push
leave
or
adc
sbb
popa
into
dec
sub
mov
ins
(bad)
fld
jp
adc
retf
imul
dec
push
lods
pushf
and
push
dec
cmp
push
sub
pop
test
scas
fld
dec
cmps
or
lea
sub
shl
scas
jmp
lds
into
mov
push
stos
popf
fwait
jmp
int
jmp
sub
inc
pop
ins
ja
(bad)
or
fdivr
sub
popf
dec
out
es
cmp
dec
add
or
sbb
cmp
dec
rol
rol
sbb
and
popa
movs
xchg
ins
sub
lea
ins
xchg
int3
into
retf
dec
(bad)
jbe
lea
dec
and
in
(bad)
sbb
or
pop
dec
inc
or
dec
(bad)
sub
cmp
pop
into
dec
sub
int
popf
loop
add
pop
push
out
ins
sub
lea
jg
or
sbb
xor
test
inc
add
or
ins
bound
cmp
cmp
push
pusha
test
cs
dec
(bad)
add
adc
into
bound
push
lea
sub
aad
(bad)
in
mov
sub
or
int
sub
div
and
jb
cmp
pop
push
dec
psubusw
(bad)
(bad)
(bad)
dec
sbb
(bad)
das
sub
jne
pop
out
xchg
iret
and
aaa
and
setae
in
test
dec
add
in
cmp
(bad)
sub
repz
aaa
add
xchg
or
sub
jp
adc
jbe
xor
mov
dec
(bad)
repz
les
out
arpl
test
std
enter
fdiv
outs
std
dec
dec
adc
add
cmp
xor
sub
or
jbe
fist
in
data16
and
jmp
mov
mov
(bad)
push
mov
test
call
cmp
cld
mov
bound
in
jbe
jns
mov
xor
or
imul
sub
push
push
and
xor
and
in
jbe
jbe
push
pop
push
mov
dec
gs
sar
sub
jl
cmp
mov
std
mov
std
inc
std
mov
lods
adc
push
aaa
loop
ds
stos
push
test
mov
sar
mov
es
dec
dec
jmp
je
dec
or
movs
mov
cmc
and
mov
jne
std
enter
sub
mov
cmc
aam
pop
xor
or
jns
mul
enter
stc
xchg
xor
shl
test
cmps
lds
daa
out
es
movaps
cmps
(bad)
das
int3
iret
sub
or
jbe
out
cmps
jb
test
enter
addr16
ror
enter
sbb
inc
out
clc
es
xor
(bad)
outs
jb
shl
fs
mov
sti
enter
cmp
mov
es
jbe
jbe
mov
jp
sti
leave
jbe
ror
cli
mov
xchg
enter
fdiv
cmp
enter
enter
test
inc
scas
cmp
mov
les
mov
cwde
mov
rcr
enter
aaa
popf
pusha
mov
push
out
jmp
mov
enter
call
inc
loopne
or
inc
leave
out
cmps
in
cmps
sub
mov
int
and
mov
add
jmp
sub
out
jmp
(bad)
rcr
add
jp
ret
or
jno
add
out
jmp
push
mov
sub
and
(bad)
jmp
or
cdq
xchg
cmp
mov
jmp
dec
dec
fild
leave
add
and
pop
ins
out
mov
ret
pop
adc
(bad)
outs
adc
jns
ret
arpl
int
(bad)
jge
jp
sub
or
push
ss
mov
mov
mov
mov
out
push
cvtdq2ps
ror
sub
out
loop
into
popa
inc
int
mov
lods
cmps
pop
loop
cmp
movs
sub
outs
fptan
jno
sub
sub
(bad)
jmp
sbb
cmp
cli
out
add
add
cdq
pop
add
add
dec
dec
xchg
dec
or
cli
add
cmps
push
inc
in
ins
mov
ror
addr16
add
ret
dec
imul
dec
cmps
pop
in
dec
push
sahf
bound
punpckhwd
mov
mov
cmp
dec
mov
adc
or
rol
lock
and
push
stos
add
in
or
loop
add
sub
sbb
and
(bad)
adc
add
xor
out
call
aaa
xor
or
inc
cld
call
lock
add
sub
and
int
push
test
sar
xchg
dec
cld
dec
fwait
test
sbb
sar
mov
sub
fdivr
sub
pop
pushf
ds
xchg
and
push
pop
inc
test
pop
mov
pop
pop
jmp
gs
lods
aaa
pop
mov
and
call
inc
movs
mov
push
push
cmp
js
js
or
mov
or
int
call
(bad)
call
pop
test
dec
mov
mov
pop
call
jg
adc
sub
xchg
mov
or
test
and
pop
mov
mov
loopne
call
call
push
mov
test
push
hlt
cld
mov
enter
int
inc
call
sbb
ins
std
dec
out
lahf
and
call
jg
pop
lods
stos
test
push
jae
jecxz
jl
fwait
pop
jmp
test
fs
dec
mov
sub
retf
pushf
sbb
mov
add
sub
call
cld
mov
push
fild
mov
pop
jmp
mov
clc
scas
fwait
pop
add
sbb
adc
or
mov
fldcw
mov
add
add
retf
scas
mov
and
aad
mov
jbe
mov
mov
inc
jecxz
shl
nop
xor
mov
mov
rol
mov
mov
jecxz
shl
nop
ss
inc
jecxz
shl
test
pop
hlt
pop
sbb
pusha
or
sbb
ror
scas
add
fisttp
mov
out
call
imul
test
aas
test
fild
test
pop
imul
sub
imul
sub
jmp
aas
imul
test
aas
test
sahf
push
jae
pop
xchg
ja
pop
(bad)
push
fild
jg
lahf
sub
sub
pop
xchg
addr16
jg
movs
and
mov
add
cmp
outs
fld1
xchg
iret
les
shl
mov
jge
(bad)
mov
cmp
addr16
imul
rcr
xlat
adc
jne
daa
sbb
jne
pop
jmp
jg
adc
and
mov
loop
jle
sar
ds
outs
movs
sbb
gs
mov
iret
retf
mov
scas
cwde
(bad)
cmps
mov
xor
mov
xchg
cmps
cmp
mov
out
xchg
cmps
cmp
mov
out
xchg
cmps
cmp
mov
out
xchg
cmps
cmp
mov
out
xchg
cmps
cmp
fcom
jo
dec
cmps
push
hlt
addr16
aam
ror
sar
xchg
int3
dec
aaa
dec
int3
jne
mov
xchg
fld
int3
push
int
loope
dec
jmp
fsub
int
(bad)
(bad)
pop
stos
jl
push
jmp
into
imul
retf
je
sar
inc
ins
jne
xchg
lods
aam
hlt
jns
push
jb
imul
cmps
jnp
pop
xchg
rol
xlat
dec
int3
outs
int3
scas
push
inc
aad
out
xchg
shl
es
jecxz
push
cmp
jns
jo
frstor
fldcw
or
push
cmps
retf
repnz
mov
js
rol
cmp
dec
adc
enter
sub
dec
nop
add
and
xchg
ss
sub
and
xor
repnz
xor
xor
inc
int3
add
push
mov
xor
push
mov
fwait
jb
xor
pop
in
imul
loopne
scas
jb
pop
(bad)
push
out
add
xor
jb
sbb
in
imul
repz
lds
call
test
jb
sbb
pop
int
in
pandn
adc
push
mov
inc
fbstp
push
test
out
std
pop
cli
cmps
or
out
mov
call
scas
sbb
out
(bad)
xor
aaa
jmp
push
stos
xor
adc
cwde
fwait
rcr
xchg
ret
inc
add
jmp
ja
(bad)
pop
sar
mov
xor
xor
xor
xor
cwde
aas
js
pop
aas
js
sbb
js
pop
aas
js
cwde
aas
js
pop
aas
js
sbb
js
loope
sub
cwde
loope
sub
shl
xchg
add
js
jp
sbb
and
mov
push
push
pusha
pop
xor
pop
js
dec
adc
sti
dec
pop
jb
push
adc
sbb
dec
sbb
xor
push
push
push
cmp
xor
push
sub
xor
vmread
push
or
ins
cmp
pop
adc
dec
sbb
pop
dec
sbb
ins
pop
ja
(bad)
fnsave
sbb
adc
ss
add
push
nop
inc
push
and
pop
bound
outs
test
clc
mov
xor
test
(bad)
xchg
(bad)
mov
add
nop
and
scas
das
mov
bound
mov
add
pop
cmp
repnz
mov
cs
and
out
jns
(bad)
mov
mov
mov
push
xchg
sbb
or
sahf
xor
fisubr
gs
stos
add
add
adc
add
clc
sub
jnp
(bad)
jg
adc
lock
mov
mov
mov
dec
cld
scas
shr
or
jae
das
fbld
fsub
ins
repz
add
adc
jle
cmps
sbb
mov
mov
push
sub
pop
xchg
lods
and
xor
repz
sub
cmp
xor
xor
xchg
pop
xor
adc
shr
mov
mov
les
in
inc
mov
xor
icebp
sub
adc
dec
das
adc
mov
adc
pop
sar
pop
les
dec
test
adc
fcomp
call
rcr
sub
scas
mov
ret
int3
push
or
and
push
push
add
popf
mov
jecxz
xchg
sub
xor
popf
mov
adc
inc
into
cmp
inc
repnz
inc
mov
test
sti
cld
push
ins
out
in
sti
jle
jmp
dec
ror
loopne
cmp
aam
js
pop
(bad)
adc
daa
lods
dec
les
call
lds
cmc
inc
(bad)
sub
and
and
push
call
sbb
ja
dec
inc
test
shl
jp
xchg
push
les
data16
push
enter
lods
sub
mov
inc
mov
loop
jne
adc
add
jle
cmp
sub
jp
stos
push
fld
xor
adc
push
sbb
int3
mov
mov
xchg
(bad)
sar
in
xor
jbe
cmp
sbb
add
sbb
mov
xchg
cmps
dec
mulps
jnp
arpl
adc
xlat
sbb
cmp
jno
dec
jle
aas
movs
mov
jmp
std
and
cmp
fnstenv
sbb
dec
idiv
mov
cmc
jmp
sbb
adc
xchg
mov
xchg
pop
rcr
add
mov
je
mov
inc
lock
adc
retf
jl
inc
ins
and
mov
sub
add
imul
cld
mov
pop
xor
jno
ja
call
retf
and
xor
jne
and
push
pushf
enter
xchg
xor
adc
inc
push
jb
xchg
icebp
mov
xor
push
xor
jo
adc
call
inc
cmp
mov
pop
jmp
adc
mov
in
mov
rcl
and
int
fmul
xor
jo
addr16
inc
adc
test
ins
inc
ja
sbb
sti
movs
mov
lods
jge
shr
and
xor
(bad)
and
or
(bad)
lock
or
jecxz
leave
loopne
in
xor
shl
add
repz
and
add
cmps
pop
add
and
and
jo
sub
mov
and
add
push
mov
xchg
jmp
cmps
push
rcr
pop
movs
rol
xchg
movs
imul
mov
and
mov
lods
test
pop
inc
inc
jmpw
add
scas
add
imul
shl
and
and
mov
xor
cli
xchg
aam
mov
xor
and
push
or
mov
loopne
xor
out
(bad)
in
jge
dec
push
sbb
stos
sbb
add
bound
xchg
ja
mov
aaa
cmc
mov
inc
ins
(bad)
mov
xor
ja
lds
xchg
pop
mov
or
mov
mov
mov
test
std
xchg
loope
inc
(bad)
fistp
jne
daa
jbe
cld
adc
cli
jnp
mov
inc
shl
pop
repz
mov
sbb
sahf
(bad)
call
mov
std
aas
mov
jnp
jmp
mov
scas
xor
pop
repz
test
xchg
mov
xchg
push
lea
jle
mov
imul
sbb
mov
outs
mov
push
adc
int
push
mov
ret
push
(bad)
xchg
ins
push
mov
(bad)
adc
cmp
lea
xchg
pop
xchg
ins
mov
sbb
add
xchg
sbb
bound
outs
outs
cwde
pop
pushf
sbb
xchg
mov
pop
jb
xchg
fst
out
jne
push
dec
push
jl
xchg
pushf
mov
xchg
jne
in
or
hlt
lock
xchg
xchg
cmp
dec
mov
test
mov
int
push
jl
or
xchg
mov
mov
aas
xchg
in
mov
gs
pop
(bad)
push
ret
cwde
scas
mul
mov
pop
inc
jne
sbb
mov
mov
xchg
push
mov
add
push
inc
cli
fnstenv
push
test
mov
test
jns
test
test
mov
push
(bad)
or
jge
adc
adc
fcmovbe
fs
gs
enter
es
xchg
cmps
push
mov
mov
or
pop
mov
dec
add
cmps
aad
or
es
push
cmp
xor
and
leave
lea
mov
(bad)
and
cmp
imul
jb
(bad)
test
fs
dec
push
cmp
xchg
push
jl
cmp
cli
add
(bad)
jbe
cli
lahf
push
jne
(bad)
mov
(bad)
cdq
sbb
pop
test
cwde
(bad)
jo
mov
(bad)
stos
and
scas
sti
leave
test
jae
cdq
mov
push
and
push
dec
loope
sbb
iret
mov
push
sub
clc
clc
sub
inc
js
mov
push
imul
dec
std
inc
stos
cmp
xor
xor
mov
mov
std
(bad)
mov
bound
cwde
ret
push
jo
nop
dec
mov
inc
jo
add
scas
cwde
test
sbb
fs
mov
mov
call
(bad)
adc
js
jb
lea
and
add
es
ret
cwde
push
mov
mov
es
cmp
pop
mov
ret
cs
popa
lds
add
and
enter
scas
(bad)
jle
lea
sub
cmp
inc
mov
mov
ins
sahf
fmulp
call
mov
jns
jns
cmp
sbb
adc
dec
mov
fdiv
xchg
mov
inc
cmps
jge
lahf
push
push
or
jmp
movs
pop
mov
inc
sub
cmp
pop
imul
dec
jae
and
sub
dec
cmps
test
retf
js
ds
daa
push
cmps
pop
ja
out
xchg
xchg
mov
mov
into
mov
retf
inc
dec
rol
popf
push
mov
mov
js
cld
in
inc
hlt
mov
xchg
and
cmp
mov
aam
mov
imul
sub
mov
aaa
mov
imul
leave
or
xchg
sbb
cmp
gs
jb
inc
jno
dec
mov
mov
stos
jmp
movs
imul
mov
xor
pop
dec
dec
sub
repz
jb
ins
(bad)
test
fstp
cwde
loope
add
cdq
fst
mov
and
cmp
mov
cld
rcr
imul
imul
loop
jnp
dec
add
das
lahf
jmp
ret
xchg
test
push
out
ret
js
xor
aad
add
je
dec
mov
icebp
hlt
das
out
mov
mov
add
xlat
imul
(bad)
leave
inc
test
retf
repnz
repz
les
push
inc
cdq
movntps
call
outs
sub
mov
retf
pop
dec
loop
rol
popf
js
into
mov
addr16
inc
or
data16
or
fstp
imul
dec
pop
add
loop
mov
in
imul
push
sti
test
xchg
mov
mov
add
push
clc
xchg
rcl
sbb
sub
mov
(bad)
call
popf
cmp
mov
cli
mov
test
fsubr
jmp
inc
push
pop
xor
idiv
jmp
mov
cs
or
sub
mov
fcmove
sub
cmp
xchg
lods
cmp
pop
daa
cmp
ror
adc
add
in
mov
push
cmp
lahf
test
cwde
fbld
out
js
pop
pop
cld
xchg
cmp
xor
mov
das
js
sbb
test
mov
xor
pop
shr
out
mov
fisub
jg
add
mov
mov
sub
push
ud2
imul
out
push
and
(bad)
pop
adc
sub
out
cwde
aam
adc
or
call
gs
or
and
inc
popf
or
cmp
fcom
enter
pop
add
iret
ret
fbstp
(bad)
dec
je
iret
dec
dec
das
push
popf
call
push
js
lods
lock
cmp
shr
dec
imul
into
xor
inc
mov
leave
in
test
pop
imul
cmp
push
mov
ins
ins
and
aam
and
or
loopne
pop
in
jo
setb
push
jmp
cmp
or
pop
arpl
psllw
or
scas
sahf
xor
pop
imul
into
xchg
cwde
lahf
push
in
inc
repz
sbb
xchg
pop
test
inc
nop
pop
fistp
into
cmp
enter
lods
xchg
mov
sti
loope
fucomi
mov
ins
push
clc
and
push
call
out
pop
or
rcr
iret
imul
popf
(bad)
out
add
stc
pop
mov
jp
ins
cli
inc
fsubr
imul
mov
inc
jae
imul
push
sub
(bad)
enter
fxch
sub
loop
jmp
fisttp
inc
sub
inc
(bad)
pop
mov
inc
jmp
(bad)
in
or
or
jmp
jns
sbb
fmul
mov
popf
addr16
push
ret
push
dec
push
call
sbb
pop
gs
in
dec
cmps
aaa
jl
stc
add
mov
jge
adc
dec
jae
jae
cld
loope
mov
push
fcom
jae
and
mov
jecxz
and
lods
jb
icebp
jae
push
mov
mov
xchg
punpcklbw
ins
icebp
pop
push
mov
mov
inc
(bad)
icebp
jae
and
repz
aad
repz
icebp
outs
jmp
cmp
and
(bad)
jmp
ja
push
pusha
push
mov
jno
or
add
push
cmps
mov
movs
mov
pop
(bad)
repz
jno
arpl
lahf
mul
push
push
adc
and
push
lds
push
retf
inc
add
xchg
add
in
xor
mov
push
icebp
sub
hlt
shr
jne
jo
repz
push
add
std
add
inc
idiv
jecxz
repz
nop
mov
pop
shl
mov
pop
test
mov
cmp
mov
bound
adc
dec
ror
sub
fsub
inc
out
mov
xor
push
or
xchg
mov
imul
rol
xchg
fstp
mov
add
mov
les
xchg
jge
and
mov
and
add
add
fiadd
inc
mov
data16
test
je
push
mov
push
loopne
aad
sbb
inc
sub
fldenv
pusha
jle
pop
adc
arpl
dec
movs
mov
xchg
cmp
inc
lock
sub
adc
cmp
adc
enter
ds
and
xor
ds
and
lahf
add
sar
jmp
fwait
push
leave
and
loop
mov
push
setbe
adc
push
cmp
mov
xchg
mov
push
stos
(bad)
shr
shr
shl
popf
sub
ss
fist
cwde
pop
movs
ss
clc
out
call
mov
cmp
dec
jns
or
mov
mov
cmp
mov
dec
mov
mov
sbb
jle
retf
sbb
inc
(bad)
push
mov
imul
cmp
dec
mov
cli
dec
adc
add
mov
lock
arpl
pushf
rcl
mov
mov
into
mov
popf
nop
retf
out
fst
push
dec
jecxz
in
and
cmps
out
cld
inc
add
loopne
sbb
sub
inc
data16
jns
jp
fmul
and
sub
lock
jns
outs
sbb
jmp
leave
in
sub
cdq
inc
xor
lock
xor
scas
cli
adc
cmp
ins
xor
shr
loop
xor
shr
dec
mov
lea
dec
or
mov
mov
jb
mov
xor
ja
pop
push
jl
sbb
iret
mov
pop
sbb
dec
xchg
cdq
mov
pop
es
test
pop
adc
loop
or
fcom
in
push
sub
adc
dec
jge
popf
popa
test
cs
ds
and
(bad)
fs
sub
lock
mov
(bad)
jle
sub
test
jmp
xor
jl
addr16
mov
mov
jns
mov
jmp
dec
loop
pop
dec
test
vprotw
dec
cli
push
out
cmp
jno
(bad)
test
push
lods
stc
fnstenv
ja
call
pop
call
iret
sub
mov
xchg
aaa
jge
test
movs
arpl
frstpm(287
mov
and
jge
dec
adc
pop
ins
mov
aaa
sar
inc
ds
std
sar
cwde
and
push
pop
jns
addr16
jg
xchg
push
sbb
jnp
out
fsubr
add
les
push
inc
stos
mov
and
std
scas
xchg
test
fadd
loop
ret
aad
jns
and
cmps
push
xchg
push
push
aas
sbb
mov
ins
mov
pop
add
cwde
or
adc
and
push
sar
or
jge
rol
pop
dec
in
test
mov
push
call
ss
hlt
in
ds
imul
movs
mov
test
mov
xchg
lahf
push
es
sub
jecxz
mov
mov
dec
sub
(bad)
inc
out
jbe
xchg
push
and
mov
(bad)
jo
fsub
or
js
mov
adc
adc
sbb
loopne
ror
inc
into
pusha
dec
inc
dec
retf
sub
aam
ja
fcos
sti
mov
(bad)
arpl
aas
and
sbb
mov
cmps
add
in
push
push
movs
xor
cmps
lds
aam
fist
jnp
mov
mov
scas
sub
out
scas
or
(bad)
cmp
out
sub
jmp
shr
cdq
pop
scas
xchg
call
sub
inc
fnstcw
mov
push
jle
add
lock
mov
aad
dec
sub
movmskps
pop
dec
mov
scas
pop
shr
sub
enter
mov
or
(bad)
icebp
in
mov
lock
ins
dec
pushf
movs
(bad)
arpl
lods
mov
xor
leave
sub
pop
das
mov
test
nop
cmc
lock
inc
fwait
loopne
fadd
mov
arpl
inc
sahf
jo
ins
xor
jns
adc
sbb
movs
shl
(bad)
mov
inc
scas
and
icebp
xor
repnz
cmp
mov
or
(bad)
cmp
sbb
cmps
cmp
xor
adc
xlat
xchg
adc
xor
xchg
mov
arpl
add
pop
bound
adc
adc
into
(bad)
scas
pop
mov
(bad)
sbb
clc
les
movs
mov
push
mov
das
adc
xor
lahf
hlt
adc
pusha
sbb
jg
loope
lods
mov
scas
dec
mov
ret
ret
mov
popa
push
mov
outs
push
pusha
out
ds
mov
pusha
sub
clc
inc
lock
dec
or
and
outs
add
pop
add
dec
pop
retf
sub
mov
xor
ds
lea
sub
jne
xor
mov
jnp
inc
or
dec
lods
fistp
xchg
nop
(bad)
jecxz
call
ret
outs
jle
push
cvtps2pi
xor
lea
in
inc
mov
fist
je
xor
mov
loopne
dec
cmp
and
and
jle
out
mov
push
daa
add
inc
cmc
xor
imul
mov
js
leave
bound
sub
addr16
jae
ret
or
(bad)
mov
jae
dec
inc
loopne
and
pop
jbe
adc
ins
test
jb
adc
and
cs
push
push
out
jg
or
bound
or
scas
rol
int
sub
jg
jbe
popa
add
out
bound
loop
(bad)
outs
push
adc
shr
pop
pop
mov
push
leave
lahf
jmp
xor
jns
aad
dec
das
mov
pop
mov
out
and
scas
into
mov
loopne
inc
inc
mov
add
add
cmovge
mov
cmps
lock
loop
mov
jecxz
jmp
(bad)
xor
mov
jmp
sahf
cmps
neg
(bad)
mov
jo
cmp
pop
inc
sbb
popf
and
inc
inc
shl
fwait
jno
cmp
loopne
jb
icebp
mov
sahf
repnz
jge
and
xor
mul
mov
adc
lea
inc
mov
push
sub
mov
adc
add
xor
test
pop
xchg
or
ror
mov
pop
loopne
push
fidivr
mov
dec
push
mov
add
adc
sbb
xor
sub
outs
sbb
push
mov
dec
mov
cmps
jmp
(bad)
mov
dec
aas
test
push
fstp
das
cmps
push
ds
sbb
imul
arpl
xchg
das
dec
push
outs
push
lods
inc
aam
in
pop
or
jmp
and
(bad)
dec
mov
mov
outs
mov
daa
test
mov
call
and
pop
inc
pop
xchg
outs
fwait
sub
adc
push
movs
xadd
xlat
sub
(bad)
out
sub
leave
out
sbb
loop
aam
sub
inc
popf
dec
movs
sub
jmp
ins
outs
stos
aaa
add
add
aaa
fild
or
ss
xchg
scas
fucomip
sub
loop
std
cmp
jle
(bad)
imul
scas
pop
add
fcmovnu
outs
mov
cdq
cmps
jns
mov
cmp
push
sub
dec
sbb
(bad)
ss
lahf
das
aaa
repnz
lahf
lods
or
sub
or
xchg
jmp
call
mov
mov
jbe
leave
jge
jmp
scas
sti
jmp
cwde
or
xchg
pop
push
xchg
mov
mov
push
push
push
call
push
add
pop
cdq
idiv
xor
push
push
push
push
mov
call
push
mov
cdq
push
push
push
call
push
add
adc
push
push
push
call
mov
imul
sub
mov
mov
xor
pop
pop
pop
leave
ret
push
call
mov
test
jne
pop
ret
push
push
call
neg
sbb
pop
not
pop
and
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
push
pop
pop
ret
mov
mov
xor
pop
ret
mov
ret
mov
ret
mov
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
dec
jns
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
xchg
mul
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
dec
jns
neg
neg
sbb
pop
pop
ret
push
push
call
mov
test
jne
call
mov
xor
jmp
cmp
jne
push
call
test
pop
mov
jne
call
mov
mov
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
test
push
jne
push
call
cmp
pop
mov
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
je
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
dec
mov
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
jmp
dec
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
mov
jmp
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
push
lea
push
push
lea
push
call
add
test
jne
xor
cmp
jle
dec
js
mov
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
inc
cmp
jl
mov
jmp
add
js
mov
mov
mov
add
jmp
movzx
push
push
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
sub
push
push
push
mov
xor
push
mov
mov
mov
mov
jmp
inc
inc
cmp
je
movzx
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
inc
movzx
cmp
je
mov
cmp
je
movzx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
inc
movzx
cmp
jne
cmp
je
jmp
inc
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
mov
inc
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
mov
test
jne
test
js
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
jmp
shl
push
call
pop
mov
mov
mov
add
cmp
je
push
mov
add
push
call
pop
pop
test
mov
jne
push
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
cmp
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
lea
sub
mov
xor
mov
mov
push
xor
cmp
mov
mov
mov
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
push
mov
and
imul
mov
sar
push
lea
mov
add
mov
add
sar
cmp
mov
mov
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
test
pop
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
test
je
cmp
je
call
and
cmp
mov
mov
mov
jbe
and
jmp
mov
mov
test
jne
mov
xor
cmp
sete
movsx
push
mov
call
test
pop
jne
push
lea
push
push
call
add
cmp
je
jmp
mov
sub
add
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
mov
call
mov
test
je
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
mov
cmp
je
cmp
jne
push
call
cmp
pop
jne
inc
cmp
je
push
pop
push
mov
call
cmp
pop
jne
inc
inc
mov
cmp
jb
jmp
mov
add
test
je
mov
xor
cmp
mov
jne
cmp
mov
jbe
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jne
cmp
mov
jbe
mov
xor
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
mov
inc
inc
inc
inc
mov
mov
inc
inc
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
mov
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
cmp
mov
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
mov
test
jne
mov
xor
cmp
je
push
pop
cmp
jne
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
mov
or
jmp
sub
pop
pop
mov
xor
pop
call
add
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmp
jne
push
call
test
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
cmp
jne
and
jmp
cmp
jae
movzx
mov
mov
and
movzx
mov
jmp
push
lea
call
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
and
cmp
je
mov
and
movzx
movzx
and
leave
ret
push
mov
push
cmp
jne
xor
leave
ret
cmp
jae
movzx
mov
movzx
movzx
and
leave
ret
cmp
jne
push
lea
push
push
push
lea
push
push
push
call
add
push
push
push
call
add
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
xor
cmp
jne
mov
lea
cmp
ja
add
movzx
jmp
mov
cmp
jae
lea
push
push
push
call
add
test
movzx
je
mov
mov
movzx
jmp
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
movzx
je
movzx
cmp
je
mov
and
pop
leave
ret
push
mov
sub
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
push
lea
call
mov
mov
cmp
jne
mov
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
add
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
pop
leave
ret
push
mov
push
push
xor
cmp
jne
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
cmp
ja
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
push
push
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
push
mov
xor
mov
mov
cmp
push
je
mov
push
push
push
push
push
push
call
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
call
test
je
lea
push
push
call
test
pop
pop
jl
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
cmp
je
push
call
pop
jmp
push
push
xor
lea
push
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
add
cmp
jne
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzx
push
push
movzx
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
mov
ret
push
call
xor
inc
ret
push
push
call
xor
mov
push
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmp
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
mov
ret
push
call
test
pop
je
push
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
push
push
push
call
pop
push
call
add
cmp
mov
je
cmp
je
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
or
cmp
jne
mov
test
je
test
jne
mov
mov
dec
movzx
inc
mov
jmp
neg
sbb
and
add
or
mov
or
pop
pop
ret
push
mov
sub
mov
push
mov
push
pop
cmp
mov
mov
jne
call
and
call
mov
or
jmp
push
xor
cmp
jl
cmp
jb
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
and
imul
sar
push
lea
mov
add
mov
test
jne
call
mov
call
mov
jmp
cmp
ja
cmp
mov
je
test
jne
cmp
je
mov
add
sar
mov
movsx
dec
push
pop
je
dec
jne
mov
not
test
je
and
mov
mov
mov
jmp
mov
not
test
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
shr
cmp
mov
jb
mov
push
call
cmp
pop
mov
jne
call
mov
call
mov
or
jmp
push
push
push
push
call
mov
mov
mov
add
mov
mov
add
test
je
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
jne
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
push
lea
push
push
push
mov
push
call
test
je
mov
cmp
jl
cmp
ja
mov
add
lea
test
je
cmp
je
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
dec
cmp
jae
lea
cmp
jne
inc
inc
mov
mov
jmp
mov
jmp
inc
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
mov
sub
cmp
mov
jne
test
je
dec
mov
test
js
inc
jmp
xor
inc
movzx
jmp
cmp
jg
cmp
jb
dec
movzx
inc
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
add
test
je
inc
cmp
mov
jl
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
cdq
push
push
push
push
call
add
mov
sub
shr
push
push
push
push
push
push
call
test
mov
jne
call
push
call
pop
or
mov
cmp
je
push
call
pop
mov
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
add
mov
mov
jmp
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
movzx
cmp
je
cmp
je
mov
inc
inc
inc
inc
mov
jmp
mov
add
cmp
jae
lea
cmp
jne
add
mov
mov
jmp
mov
jmp
add
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
inc
sub
mov
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
mov
cmp
sbb
inc
jne
call
mov
call
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
push
xor
push
mov
mov
mov
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
or
mov
jmp
mov
or
xor
inc
inc
mov
cmp
push
je
lea
mov
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
xor
test
mov
mov
mov
mov
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
xor
jmp
xor
xor
movsx
push
sar
pop
cmp
mov
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
cmp
mov
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
(bad)
(bad)
inc
add
inc
add
aad
add
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
or
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
test
mov
mov
mov
mov
mov
je
inc
xor
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
mov
imul
movzx
push
shr
pop
cmp
mov
je
push
pop
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
and
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
and
and
lea
push
movzx
push
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
test
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
test
mov
je
mov
test
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
and
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
add
mov
mov
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
push
je
mov
mov
mov
jmp
mov
pop
add
mov
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
test
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
test
jg
jl
test
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmp
je
inc
test
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
xor
cmp
je
cmp
jne
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
nop
clc
loopne
add
inc
add
inc
add
fild
loopne
add
loopne
add
inc
add
loope
add
add
ret
push
mov
sub
push
push
lea
call
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
cmp
pop
jne
inc
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
cmp
pop
je
mov
and
leave
ret
push
mov
sub
push
push
lea
call
mov
mov
test
mov
je
mov
mov
mov
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
test
mov
jne
cmp
pop
je
mov
and
leave
ret
fldz
mov
fcomp
fnstsw
test
jp
xor
inc
ret
xor
ret
push
mov
push
push
cmp
push
push
je
lea
push
call
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
mov
mov
add
leave
ret
push
push
push
push
call
add
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
push
lea
mov
call
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
jle
mov
jmp
xor
add
cmp
ja
call
push
jmp
cmp
je
mov
xor
cmp
setg
xor
cmp
sete
mov
add
mov
call
mov
cmp
mov
jne
mov
lea
cmp
jle
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
add
add
cmp
jne
or
jmp
sub
add
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
lea
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
add
test
je
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
mov
jne
or
jmp
xor
cmp
sete
sub
xor
cmp
setg
sub
lea
push
lea
push
push
xor
cmp
sete
xor
cmp
setg
add
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
push
lea
mov
xor
mov
call
cmp
jge
mov
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
mov
add
cmp
mov
ja
call
push
jmp
mov
mov
mov
mov
mov
shr
mov
push
and
xor
cmp
jne
test
jne
mov
cmp
jne
or
jmp
add
push
push
lea
push
push
push
call
add
test
je
cmp
mov
je
mov
and
jmp
cmp
jne
mov
inc
mov
inc
cmp
push
sete
dec
and
add
mov
inc
push
call
test
pop
pop
je
cmp
sete
dec
and
add
mov
mov
jmp
and
xor
or
je
mov
inc
mov
mov
inc
test
sete
dec
and
add
mov
mov
inc
neg
sbb
and
and
xor
add
xor
or
jne
mov
mov
mov
and
inc
or
jne
mov
jmp
mov
jmp
mov
inc
mov
inc
cmp
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
mov
mov
cmp
jle
mov
and
mov
movsx
and
and
call
add
movzx
cmp
jbe
add
mov
sub
mov
mov
shrd
shr
inc
dec
cmp
mov
mov
jge
cmp
jl
mov
and
mov
movsx
and
and
call
cmp
jbe
lea
mov
cmp
je
cmp
jne
mov
dec
jmp
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
cmp
jle
push
push
push
call
add
add
mov
cmp
jne
mov
cmp
mov
sete
dec
and
add
mov
mov
mov
inc
call
xor
and
and
sub
push
pop
sbb
js
jg
cmp
jb
mov
inc
jmp
mov
inc
neg
adc
neg
cmp
mov
mov
jl
mov
jg
cmp
jb
push
push
push
push
call
add
mov
inc
cmp
mov
mov
mov
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
add
mov
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
mov
mov
mov
lea
dec
call
test
jne
call
push
pop
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
je
cmp
jne
xor
cmp
sete
add
add
mov
mov
cmp
mov
jne
mov
lea
mov
xor
inc
test
jg
mov
call
mov
inc
jmp
add
cmp
jle
mov
call
mov
mov
mov
mov
mov
mov
inc
test
jge
neg
cmp
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
jne
or
jmp
xor
cmp
sete
sub
mov
lea
push
mov
add
push
push
xor
cmp
sete
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
mov
dec
mov
xor
cmp
sete
cmp
lea
jne
or
jmp
sub
lea
push
push
push
push
call
add
cmp
je
mov
jmp
mov
dec
cmp
setl
cmp
jl
cmp
jge
cmp
je
mov
inc
test
jne
mov
push
lea
push
push
mov
push
call
add
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
mov
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
pop
ret
cmp
je
cmp
je
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
push
push
push
xor
push
call
add
test
je
push
push
push
push
push
call
add
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld1
fcomp
fnstsw
test
jp
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
push
call
push
call
test
pop
pop
je
call
add
cmp
jne
xor
jmp
call
add
cmp
jne
xor
inc
inc
test
jne
push
push
lea
cmp
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
or
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmp
je
push
mov
test
je
push
call
and
and
and
and
pop
pop
ret
mov
cmp
jne
mov
cmp
push
push
jne
call
test
pop
pop
mov
jne
xor
ret
mov
mov
mov
add
push
push
push
call
add
jmp
push
call
add
test
je
mov
shl
xor
inc
ret
push
push
inc
call
movzx
cmp
pop
je
push
push
call
test
pop
pop
jne
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
xor
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
mov
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
je
jmp
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
pop
pop
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
je
cmp
jne
cmp
je
mov
inc
inc
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
cmp
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
cmp
jne
push
inc
pop
inc
mov
jmp
mov
jmp
movzx
inc
inc
cmp
jne
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
cmp
ja
sub
inc
movzx
movzx
mov
mov
shr
add
mov
and
mov
shl
or
inc
dec
jne
mov
xor
jmp
movzx
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
jmp
push
push
lea
push
xor
push
mov
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
jmp
add
mov
jmp
add
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
mov
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
mov
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
shl
jmp
imul
jmp
test
jne
movzx
push
call
test
pop
je
mov
shl
call
movzx
mov
inc
cmp
movzx
lea
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
push
push
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
test
push
jne
movzx
mov
and
push
call
test
pop
je
mov
pop
ret
movzx
and
sub
pop
ret
cmp
je
jmp
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
mov
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
mov
jmp
mov
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
add
mov
add
mov
mov
cmp
mov
mov
jb
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
mov
je
jmp
mov
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
cmp
pop
pop
je
dec
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
mov
je
cmp
jne
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
mov
test
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
push
pop
cmp
jne
inc
mov
inc
mov
movzx
cmp
je
movzx
inc
inc
cmp
jne
mov
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
mov
cmp
ja
sub
movzx
inc
movzx
mov
mov
and
mov
mov
shl
shr
add
or
inc
dec
jne
and
jmp
movzx
mov
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
mov
jmp
and
push
push
lea
push
push
call
add
cmp
je
mov
test
jle
add
sub
mov
jmp
inc
inc
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
mov
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
shl
jmp
mov
imul
jmp
test
jne
movzx
push
call
test
pop
je
shl
mov
call
mov
movzx
mov
mov
inc
cmp
movzx
lea
mov
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
mov
jmp
mov
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
cmp
jle
and
jmp
mov
call
mov
jmp
push
push
call
mov
jmp
call
cmp
mov
je
and
jmp
mov
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
mov
xor
mov
mov
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
mov
test
push
mov
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
or
jmp
dec
mov
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
mov
jmp
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
xor
inc
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
movzx
push
call
test
pop
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
movsx
push
push
call
pop
or
jmp
push
mov
pop
push
lea
push
lea
push
call
add
cmp
jne
call
mov
jmp
add
js
mov
movzx
add
mov
jmp
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
call
cmp
pop
jne
call
mov
or
pop
ret
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
imul
sar
mov
lea
and
mov
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
cmp
push
mov
je
push
call
test
pop
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
call
mov
cmp
je
mov
cmp
jg
call
mov
jmp
mov
mov
jmp
mov
cmp
je
add
mov
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
lea
push
call
cmp
je
cmp
je
cmp
jge
mov
jmp
call
mov
mov
jmp
cmp
jle
mov
push
push
call
mov
cmp
pop
pop
jne
call
mov
call
mov
jmp
lea
push
push
push
lea
push
call
cmp
je
cmp
jl
call
push
call
pop
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
push
call
pop
and
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jae
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jmp
cmp
jb
or
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
mov
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
cmp
mov
je
mov
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
sub
test
movzx
movzx
mov
mov
jne
or
leave
ret
and
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
push
push
push
or
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
push
push
push
push
mov
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
push
call
push
call
pop
pop
mov
jmp
mov
mov
movzx
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzx
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
push
call
push
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzx
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
push
call
test
je
cmp
ja
movzx
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzx
movzx
jmp
mov
mov
movzx
inc
cmp
jle
inc
inc
cmp
jne
mov
push
push
push
add
push
push
push
mov
push
push
call
add
test
je
mov
mov
push
push
mov
push
add
push
push
inc
push
push
push
push
call
add
test
je
mov
push
push
add
push
push
mov
push
inc
push
push
push
push
call
add
test
je
cmp
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzx
movzx
cmp
jg
lea
jmp
mov
mov
inc
inc
inc
mov
mov
movzx
cmp
jle
mov
inc
inc
cmp
mov
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
pop
mov
jmp
push
call
push
call
push
call
push
call
xor
add
inc
jmp
lea
mov
cmp
je
push
call
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
xor
pop
call
leave
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
cmp
je
mov
test
jne
call
mov
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cdq
sub
mov
mov
sar
lea
push
mov
push
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
test
je
cmp
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
push
call
test
je
lea
push
call
pop
mov
xor
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
mov
sub
cmp
ja
add
movsx
shl
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
call
test
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
mov
and
push
or
push
mov
call
test
jne
xor
jmp
lea
call
cmp
je
cmp
je
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
mov
add
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
xor
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
test
pop
pop
jne
or
mov
jmp
test
jne
mov
test
je
push
lea
push
push
call
add
test
jne
push
or
mov
call
cmp
pop
jne
mov
jmp
mov
test
jne
push
call
test
pop
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
pop
xor
test
pop
jne
or
cmp
mov
je
or
mov
jmp
cmp
je
push
call
cmp
pop
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
cmp
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
call
push
sub
neg
sbb
inc
mov
call
sub
neg
sbb
and
inc
cmp
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
and
ret
push
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
test
jne
and
ret
push
push
push
push
call
mov
mov
xor
add
cmp
jne
or
jmp
lea
cmp
lea
mov
mov
je
cmp
je
push
push
push
call
add
mov
cmp
mov
je
cmp
je
mov
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
mov
cmp
je
cmp
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
test
jne
mov
jmp
mov
call
mov
mov
cmp
je
mov
add
neg
sbb
and
mov
call
mov
test
je
cmp
je
cmp
je
movzx
push
call
test
je
push
push
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
cmp
mov
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
push
push
call
test
je
push
lea
push
push
push
call
test
je
push
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
mov
test
jne
xor
jmp
cmp
push
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
add
cmp
jb
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzx
movzx
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
cmp
mov
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
cmp
mov
jne
call
test
je
push
call
pop
jmp
mov
and
imul
sar
mov
lea
and
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
mov
mov
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
jne
call
mov
call
mov
push
push
push
push
push
call
add
or
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
mov
or
or
mov
call
mov
mov
call
ret
push
call
pop
ret
inc
push
call
test
pop
mov
mov
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
ret
mov
cmp
jne
call
mov
xor
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
pop
ret
mov
and
imul
sar
mov
movzx
and
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
test
pop
pop
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
cmp
mov
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
push
push
push
push
call
add
ret
xor
inc
cmp
jne
xor
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmp
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmp
jb
or
jmp
or
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
push
call
mov
push
call
cmp
pop
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
mov
call
add
or
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
mov
push
push
mov
push
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
push
push
push
mov
push
call
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
test
pop
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
call
test
je
xor
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
mov
push
push
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
push
push
push
push
call
mov
cmp
mov
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
mov
jmp
push
push
push
push
call
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
call
mov
push
call
mov
add
mov
push
push
call
mov
push
push
push
push
push
call
xor
pop
ret
sub
mov
mov
mov
push
push
push
mov
push
xor
push
push
push
push
mov
call
mov
mov
cmp
je
test
je
mov
not
mov
jmp
mov
mov
mov
xor
xor
mov
cmp
je
test
jne
mov
mov
not
mov
call
mov
lea
xor
xor
mov
mov
mov
cmp
mov
mov
je
test
je
not
mov
call
lea
push
call
mov
pop
not
mov
mov
pop
add
ret
mov
mov
lea
mov
push
xor
call
push
call
mov
mov
mov
xor
xor
cmp
je
test
jne
mov
mov
pop
not
mov
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
mov
mov
mov
mov
and
test
jne
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
mov
xor
mov
add
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
cmp
jle
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
call
pop
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
call
push
push
push
call
mov
or
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
mov
push
mov
push
call
mov
or
mov
push
push
push
push
call
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
mov
or
mov
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
mov
push
push
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
or
mov
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
lea
push
push
lea
push
push
lea
push
push
mov
push
push
call
mov
or
mov
mov
or
mov
mov
push
push
call
mov
or
mov
push
push
mov
push
push
call
mov
or
mov
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
call
mov
or
mov
mov
push
mov
push
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
call
test
je
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
sub
cmp
jae
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
shl
mov
cmp
jge
mov
and
mov
sub
cmp
jae
mov
cmp
jae
mov
and
and
test
je
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
jbe
mov
shr
mov
mov
and
mov
cmp
ja
mov
jmp
mov
and
add
mov
jmp
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
shl
mov
lea
mov
jmp
mov
shr
mov
mov
and
test
je
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
and
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
add
mov
mov
add
mov
cmp
jne
mov
and
test
je
mov
add
xor
mov
and
shl
mov
mov
add
mov
mov
jmp
mov
add
xor
mov
and
shl
mov
mov
and
and
mov
lea
mov
mov
shl
mov
mov
mov
lea
cmp
jbe
pusha
mov
and
popa
mov
jmp
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
cmp
jae
mov
jmp
mov
add
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
sar
inc
add
cmp
(bad)
add
cmp
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
add
mov
push
mov
push
call
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
lea
mov
mov
xor
mov
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
mov
mov
mov
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
jmp
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
push
mov
mov
push
call
mov
mov
mov
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
jne
push
push
call
add
add
cmp
jle
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
push
push
call
add
test
jne
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
fldz
push
mov
fstp
push
push
push
call
push
call
push
push
call
add
test
je
push
push
call
push
push
call
add
cmp
jne
push
push
call
fld
fcomp
add
fnstsw
test
jp
fstp
jmp
fstp
push
push
call
add
test
jne
fld
sub
fstp
push
call
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
add
call
add
sub
je
sub
je
push
push
call
add
pop
pop
pop
ret
push
push
call
mov
add
cmp
jge
mov
cmp
jle
push
jmp
lea
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jg
pop
push
push
push
call
add
pop
pop
xor
pop
ret
mov
push
push
push
call
add
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
push
push
call
mov
add
cmp
jl
cmp
jg
push
push
push
call
add
cmp
jge
push
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jl
pop
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
lea
push
push
push
push
call
push
push
push
mov
call
push
push
push
call
push
push
mov
call
add
test
jg
push
push
call
jmp
push
push
call
add
lea
push
push
mov
call
add
cmp
jge
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
mov
push
lea
push
push
call
add
add
cmp
jl
jne
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
add
lea
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
cmp
jge
push
mov
push
jmp
jmp
lea
mov
mov
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
mov
mov
sub
cmp
je
add
cdq
sub
mov
sar
push
push
push
call
mov
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
mov
push
push
push
call
add
jmp
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
cmp
je
push
push
push
call
push
push
call
lea
push
push
push
mov
call
push
push
push
call
push
push
push
call
mov
add
lea
add
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jle
push
push
call
add
push
push
call
add
jmp
jmp
lea
sub
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jge
push
push
call
add
push
push
call
add
jmp
cmp
jl
push
push
push
call
push
push
push
call
add
jmp
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
mov
mov
mov
mov
sub
sub
add
cmp
jge
sub
lea
mov
mov
mov
jmp
lea
lea
mov
mov
mov
push
push
push
call
add
cmp
jl
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
jle
push
push
push
call
add
push
push
call
push
push
push
call
add
pop
xor
pop
ret
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
sub
mov
xor
mov
push
lea
push
push
call
test
je
cmp
je
lea
push
push
call
add
test
je
lea
push
push
push
push
push
mov
call
add
push
push
call
push
push
call
add
mov
xor
call
add
ret
push
push
call
mov
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
call
push
push
mov
lea
push
push
push
push
push
call
test
je
lea
push
push
call
add
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
call
push
push
call
push
push
call
add
test
je
push
push
call
add
ret
push
push
push
call
push
push
call
push
mov
push
push
mov
call
push
push
call
push
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
add
test
je
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
call
mov
cmp
jne
push
call
mov
test
jne
call
test
mov
jne
pop
pop
pop
lea
pop
ret
mov
mov
push
push
call
test
jne
call
pop
pop
pop
mov
pop
ret
push
push
push
call
add
pop
pop
pop
xor
pop
ret
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
mov
call
mov
add
test
jne
lea
pop
pop
ret
push
call
push
push
call
add
cmp
mov
je
mov
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
push
mov
call
push
push
push
mov
call
push
push
push
call
mov
add
test
jne
push
push
push
call
add
push
push
push
call
add
cmp
mov
jne
lea
add
cmp
je
cmp
je
push
push
call
mov
add
test
jne
mov
lea
mov
add
test
jne
sub
lea
mov
sub
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
call
push
push
mov
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
push
push
call
add
jmp
push
call
add
mov
pop
pop
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
push
call
add
ret
push
mov
push
push
push
push
call
add
mov
call
mov
test
je
push
push
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
add
mov
mov
call
mov
test
je
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
push
mov
mov
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
push
push
call
add
test
jne
pop
pop
ret
push
sub
push
push
push
call
push
push
push
call
add
mov
call
mov
test
je
mov
call
push
mov
mov
call
add
test
je
cmp
je
push
call
add
push
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
push
call
add
cmp
je
push
push
call
add
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
add
pop
mov
pop
ret
int3
push
mov
push
push
push
push
call
push
push
mov
call
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
cmp
jne
push
push
push
call
add
pop
mov
pushf
pop
scas
jno
jno
lds
fimul
inc
das
out
xor
jp
dec
daa
mov
mov
idiv
add
cld
test
scas
sbb
inc
push
cmp
int
jl
mov
(bad)
pop
(bad)
push
push
aaa
repz
dec
retf
push
aaa
pop
pop
sar
mov
icebp
aas
xchg
jge
push
stos
idiv
mov
call
mov
xchg
push
push
imul
jnp
stc
ret
lock
es
(bad)
(bad)
ss
fist
arpl
sbb
and
out
mov
push
sbb
jmp
or
mov
mov
nop
setl
popa
jle
cli
adc
adc
and
adc
dec
cmp
mov
push
push
cmp
in
and
add
sbb
push
pop
(bad)
retf
pop
mov
call
and
test
int3
mov
push
and
ins
sbb
out
xchg
ds
js
sub
rol
dec
adc
sub
or
jns
dec
iret
int3
fs
out
xchg
dec
ja
out
inc
fst
les
xor
and
repz
out
xor
pop
cmps
xor
lea
sbb
cmp
sbb
xchg
es
inc
xor
mov
stc
cdq
mov
nop
or
jl
pop
push
dec
inc
dec
lods
or
int
or
stos
and
push
movs
mov
in
icebp
sti
push
mov
or
cmp
push
pop
sub
out
inc
ins
lea
cmp
retf
pop
mov
mov
out
adc
push
retf
ja
push
pop
xchg
not
enter
imul
pop
sbb
sub
pop
xchg
pop
or
mov
lahf
jb
in
xchg
fisubr
clc
xchg
int3
inc
cwde
sti
inc
cmps
jnp
fs
pop
xchg
shl
xchg
sbb
jmp
sbb
outs
in
in
scas
jge
cmove
pop
(bad)
push
xor
pop
pop
dec
jns
dec
adc
dec
push
aaa
in
adc
mov
dec
lds
sub
jl
(bad)
mov
jno
sub
mov
jecxz
push
inc
call
pop
xchg
rol
sub
adc
call
pop
leave
sbb
pop
jbe
jb
aaa
pop
adc
mov
xor
(bad)
mov
sti
dec
xchg
sub
sub
adc
fs
cmp
jg
gs
adc
ins
scas
mov
mov
sbb
push
outs
push
hlt
in
pop
movs
pop
adc
icebp
loope
stos
es
in
icebp
jmp
fwait
int
mov
mov
inc
je
aam
out
imul
and
sub
cmp
jnp
ss
jnp
jnp
pop
push
sahf
daa
cmp
sbb
and
fwait
inc
ss
loopne
lds
(bad)
neg
cmp
xor
shr
mov
mov
pop
xor
inc
inc
mov
aaa
mov
xchg
into
scas
jge
fmul
adc
inc
cmp
mov
mov
(bad)
jl
pop
pop
dec
and
outs
cmc
lock
mov
popf
fcom
test
sbb
cdq
cld
or
aaa
dec
xor
adc
xchg
(bad)
das
stos
cld
or
xchg
mov
rcr
or
mov
mov
add
scas
xlat
popf
iret
imul
int3
lods
inc
sub
sbb
pop
push
jns
cmp
mov
sbb
rcr
scas
in
outs
push
lea
or
lock
fs
xor
fild
mov
dec
push
in
fs
jo
retf
mov
inc
jle
hlt
pop
sub
or
mov
mov
jo
sub
sti
or
ds
xor
xlat
retf
xchg
inc
mov
pop
jl
or
cmp
bound
cmp
push
sahf
sbb
pushf
push
dec
xchg
jbe
push
nop
mov
fcmovb
push
inc
fnstenv
les
xchg
lahf
or
mov
mov
ins
shl
sbb
jmp
aad
shl
lds
aam
jne
mov
mov
xor
xor
aad
add
stc
scas
push
ffree
and
mov
inc
add
hlt
pop
div
ss
aas
dec
es
and
sbb
inc
push
sub
out
ds
mov
not
xor
or
fmul
lds
movs
xchg
(bad)
or
inc
loop
mov
(bad)
fdiv
inc
jp
xor
bswap
stos
scas
mov
movs
scas
lahf
movs
lods
imul
pop
mov
and
add
sub
adc
clc
iret
retf
dec
imul
pop
mov
(bad)
(bad)
fdiv
xchg
lahf
jl
nop
xor
mov
cmp
sahf
lods
stc
inc
sub
ins
iret
pop
mov
ins
scas
cli
ins
pop
outs
sbb
retf
dec
(bad)
adc
mov
pop
fwait
and
outs
stc
push
bound
ret
cs
sar
pop
xor
mov
xchg
xor
jg
push
mov
xchg
fldcw
xchg
(bad)
adc
inc
lods
add
adc
call
mov
jl
(bad)
data16
adc
or
push
fs
mov
add
inc
movs
mov
nop
mov
je
call
(bad)
cmp
cmps
jg
push
loop
pop
or
(bad)
(bad)
aas
jg
daa
outs
mov
fsub
sbb
mov
pop
xlat
scas
cld
inc
add
jg
dec
cmps
hlt
neg
or
cwde
int
ror
ret
clc
inc
mov
xchg
sbb
cmp
test
shl
loopne
jge
push
jecxz
lahf
outs
inc
and
sti
xchg
je
pop
adc
aas
mov
aad
cmp
mov
xchg
popf
pop
test
ss
or
xchg
out
not
mov
mov
aas
inc
cdq
pop
sub
cmp
push
pop
xor
mov
loop
jl
imul
(bad)
pop
(bad)
aad
movs
cmp
hlt
xor
jb
out
push
inc
retf
cmp
das
sbb
retf
pushf
data16
gs
cmp
fisttp
outs
inc
cmp
mov
cmp
push
jge
push
pop
dec
retf
dec
loopne
repnz
int3
dec
cld
push
outs
cs
push
push
push
sbb
dec
mov
sbb
jl
xchg
ret
mov
cwde
xchg
jo
xchg
push
imul
ret
hlt
fiadd
cmp
rcl
add
sub
mov
out
leave
pop
xor
bound
mov
inc
mov
adc
iret
push
rep
jecxz
rol
xor
xchg
or
jl
jns
xor
dec
mov
xor
out
mov
add
idiv
aad
in
ds
mov
dec
dec
pop
pop
or
dec
jne
retf
lea
bt
adc
and
sbb
aad
int3
daa
xchg
jp
sub
push
xchg
neg
dec
add
comiss
movs
int
ror
ds
ror
cwde
pop
push
mov
dec
icebp
ins
mov
or
out
sub
push
pop
iret
cmp
xor
ss
cmp
jmp
xor
pop
(bad)
test
push
sti
mov
and
sub
push
scas
out
inc
cmp
jno
stos
fisub
and
mov
push
sub
add
pop
fst
popf
lds
jmp
xchg
es
test
jecxz
cmp
sbb
mov
lods
jnp
out
add
dec
mov
retf
pop
sbb
test
hlt
fcom
fild
(bad)
ja
mov
adc
daa
adc
lods
ss
add
outs
xlat
in
scas
adc
sub
lods
repz
jge
lock
mov
and
fmul
add
mov
mov
lods
xchg
ror
fcom
mov
stos
lds
addr16
adc
faddp
pop
stos
push
jp
sub
adc
aad
cli
xor
repz
mov
adc
xor
inc
jecxz
fldenv
es
xchg
maxps
or
pop
imul
clc
pop
xchg
push
loope
lahf
std
pop
outs
dec
mov
sbb
test
popa
and
cmp
retf
(bad)
stc
or
inc
int3
call
in
outs
std
mov
inc
ss
aad
or
add
push
add
jo
bound
push
fwait
push
dec
or
mov
and
pop
xchg
push
data16
jge
mov
mov
dec
pop
jg
(bad)
int3
pop
push
push
fwait
xchg
sub
cmp
dec
aaa
dec
idiv
fld
cli
cmps
jnp
outs
mov
aam
in
add
xchg
dec
lea
(bad)
lods
out
mov
add
fdiv
out
scas
inc
scas
or
cmp
mov
adc
aam
pushf
cmp
popf
bound
inc
cmp
cmps
push
add
cmps
pop
or
jno
pop
push
sbb
pop
ret
sahf
adc
jo
nop
jnp
and
dec
fiadd
jnp
jmp
cmp
xor
dec
inc
jmp
ja
jmp
call
adc
clc
add
aad
xchg
in
and
imul
dec
pop
or
jge
leave
iret
xchg
aaa
sub
and
xchg
cli
or
retf
sbb
retf
push
push
das
pop
dec
or
and
out
retf
fiadd
aas
xchg
out
dec
outs
push
cli
rcr
xor
inc
add
hlt
xchg
neg
pusha
lods
daa
xor
in
aaa
pop
push
scas
push
xor
add
and
ins
push
rcr
mov
hlt
xchg
shl
or
jg
push
pushw
jl
dec
sbb
test
inc
mov
mov
push
test
adc
repnz
and
fdiv
lods
(bad)
xor
cmp
retf
sar
and
lahf
push
jbe
lds
mov
fldlg2
mov
leave
out
push
hlt
xlat
fnsave
jl
mov
scas
inc
out
das
js
lods
or
xchg
or
loop
push
mov
push
movs
xlat
push
inc
test
scas
adc
movs
dec
ss
sbb
enter
xacquire
movs
(bad)
cld
stc
inc
xchg
pop
mov
push
pop
fiadd
sahf
loope
jp
xchg
cld
f2xm1
sahf
cld
mov
cdq
dec
push
lahf
sbb
mov
push
mov
retf
push
mov
cmps
fcmove
pushf
iret
push
scas
pop
gs
sub
pop
test
dec
repz
inc
add
dec
mov
leave
mov
bound
cli
inc
(bad)
dec
adc
or
mov
mov
mov
jg
neg
addr16
mov
in
in
movs
stos
cld
(bad)
sbb
movs
popa
lea
push
push
and
push
xlat
call
mov
pop
fdivr
push
retf
repnz
lods
fisttp
scas
icebp
daa
or
arpl
lahf
into
sti
push
or
push
mov
das
sub
imul
pop
mov
push
test
pop
aaa
pushf
in
pop
add
mov
dec
and
xchg
push
aaa
mov
push
test
jle
push
cmps
mov
iret
pslld
inc
inc
sbb
gs
sar
stos
lock
pop
xchg
pop
popf
adc
dec
xchg
jl
in
push
jge
in
jns
sbb
fisubr
dec
jp
into
pop
fcmovu
sub
dec
movs
mov
test
loopne
jae
and
dec
les
lds
movups
cmc
bound
xor
lds
nop
cmp
cmps
shl
pop
cwde
mov
push
inc
test
push
xor
ds
addr16
(bad)
pop
(bad)
sub
pushf
cwde
aas
push
dec
int3
xor
sbb
push
in
dec
push
es
nop
or
push
repnz
gs
push
(bad)
lods
jae
push
lea
push
cmp
in
xlat
mov
sub
cmp
outs
cs
std
das
daa
mov
push
sub
sub
hlt
es
mov
mov
frstor
clc
popf
int
sbb
out
aaa
pop
fwait
enter
xchg
xlat
or
outs
jns
ja
movs
sub
cli
push
cld
test
push
aas
push
sbb
jge
xchg
dec
jle
sub
(bad)
fiadd
stos
leave
push
fadd
or
repz
arpl
adc
add
add
outs
les
xor
ret
push
cmps
mov
adc
cwde
aad
pop
enter
xor
or
fld
ja
mov
icebp
aas
pushw
inc
je
push
xor
loop
push
add
jbe
outs
mov
fs
jle
stos
mov
adc
lahf
xchg
(bad)
fwait
popf
inc
cdq
mov
push
dec
leave
sub
mov
xchg
inc
dec
shr
pop
scas
std
sbb
popa
int
sbb
daa
sbb
push
or
pop
neg
sbb
xlat
mov
xchg
add
std
push
ror
stos
jge
push
sub
xor
fs
mov
mov
mov
lds
popa
pop
mov
pop
outs
xor
mov
loop
xlat
mov
or
ret
adc
arpl
and
pop
stc
xchg
lds
cmps
lods
fsubr
xchg
sub
pop
xor
fbld
shl
pop
jb
imul
sub
addr16
adc
push
push
dec
in
or
inc
fs
pop
bound
mov
mov
popf
pushf
pop
push
mov
ror
cmps
dec
push
mov
pop
pop
push
aas
pushf
movs
sub
add
repz
lods
push
jmp
mov
sbb
sbb
pop
pop
fstp
mov
fistp
mov
push
lods
fiadd
and
aam
xor
ror
add
adc
xlat
add
push
push
data16
inc
icebp
inc
mov
cdq
adc
push
mov
ds
aaa
pop
xchg
xor
clc
push
test
xor
mov
adc
scas
mov
dec
scas
jmp
inc
outs
movs
push
or
inc
mov
ins
dec
in
jge
int3
push
mov
pop
sbb
adc
les
sbb
jo
hlt
or
mov
or
outs
in
push
adc
push
lock
shr
mov
sbb
iret
mov
(bad)
fild
lds
(bad)
(bad)
xor
mov
cmps
test
xchg
(bad)
push
dec
mov
mov
out
xchg
cld
or
lds
rcl
aad
fsubp
jl
cmp
(bad)
mov
mov
xchg
aaa
lods
(bad)
repnz
mov
xchg
(bad)
lods
imul
jecxz
stos
add
xchg
sbb
and
fmul
push
cs
mov
stos
lods
sub
movs
mov
add
jl
into
mov
cmp
add
pop
mov
inc
push
pop
xchg
pop
add
lahf
sub
push
sbb
into
mov
sbb
jno
mov
xchg
and
dec
test
push
dec
inc
jg
xchg
cmps
in
mov
mov
cmps
push
mov
push
or
loop
int
jbe
aaa
rcl
mov
retf
int3
(bad)
data16
aaa
add
push
pop
sbb
inc
adc
les
rcl
jle
std
xchg
cdq
pop
jns
xor
mov
into
dec
cwde
out
cmp
inc
mov
into
daa
ins
inc
mov
jl
sahf
nop
pop
add
fild
push
out
mov
in
leave
mov
inc
fcmovnb
(bad)
push
mov
mov
retf
ja
outs
call
fs
mov
xchg
cmp
and
adc
xchg
data16
daa
push
dec
mov
dec
lods
mov
xchg
stos
test
rcr
or
fisttp
cmp
add
dec
das
(bad)
in
popf
xchg
mov
stc
cmps
add
or
je
push
mov
pop
mov
jmp
push
scas
int
movs
sti
sub
fnstsw
loop
ss
xchg
out
add
clc
xchg
adc
cmps
dec
les
or
pop
jecxz
pop
bound
popa
adc
jae
xor
jo
movs
shl
add
cmp
pushf
jae
inc
imul
mov
or
inc
adc
retf
sub
jmp
cmps
ins
daa
js
pop
mov
jge
or
int3
retf
pop
ins
pop
dec
cpuid
push
sbb
ret
pop
iret
push
imul
cmps
cmp
inc
xchg
and
test
inc
ins
loop
cmc
int
loop
cmp
cld
into
(bad)
loop
popf
shl
push
cmp
lods
nop
push
push
setne
sbb
cmp
push
and
cmps
aad
and
inc
fwait
int3
ins
fist
jge
sub
jno
std
xchg
inc
xor
pop
adc
enter
repz
ins
test
mov
mov
sub
js
sbb
push
ja
jae
jo
fs
mov
inc
ss
sub
repnz
mov
dec
push
inc
push
mov
cmps
and
jns
outs
jmp
loopne
jns
or
or
mov
in
pusha
inc
cmps
push
jl
cdq
pop
or
movs
push
mov
out
stos
mov
xchg
dec
fwait
adc
and
pop
les
lods
data16
push
and
or
mov
arpl
push
clc
xlat
adc
(bad)
xor
xor
outs
out
jne
inc
sub
mov
sbb
popa
vcvttpd2dq
(bad)
ja
daa
adc
add
adc
sub
jle
push
sbb
int3
pop
xchg
mov
jmp
sbb
imul
xchg
mov
fldenv
(bad)
fild
cmp
aaa
mov
imul
call
iret
push
out
sbb
aas
jnp
fisub
push
das
fs
lods
jg
xchg
popf
mov
mov
retf
je
mov
les
xor
lods
out
jo
jecxz
fmul
pop
sbb
sub
push
ds
or
add
test
icebp
movs
je
sbb
mov
adc
cmp
lods
ins
adc
jb
je
je
add
dec
jae
fistp
mov
or
les
and
jb
jecxz
cmp
ins
cmps
sub
outs
cmp
jbe
daa
mov
push
sub
push
shr
jb
pushf
hlt
push
in
jp
mov
jmp
lds
pop
mov
dec
pop
or
ficom
jge
repz
mov
and
loop
sbb
inc
jbe
pop
(bad)
jmp
pushf
mov
int3
xchg
std
mul
cmps
clc
mul
ins
jbe
cmp
sbb
test
jg
mov
jo
inc
xor
sbb
dec
aaa
in
cs
sub
cmp
mov
jo
xor
xchg
mov
pop
outs
xchg
repz
add
cmp
ds
push
lock
(bad)
and
xlat
sahf
ins
mul
ret
inc
(bad)
mov
mov
(bad)
inc
loopne
jmp
jmp
scas
mov
sub
dec
xchg
jp
jbe
add
neg
or
rcl
add
movs
xlat
pop
inc
out
scas
icebp
test
xchg
pop
add
dec
(bad)
int
loopne
ins
lods
mov
push
xchg
add
lock
icebp
push
lock
mov
call
(bad)
std
inc
xlat
call
inc
movs
jmp
out
lea
lods
mov
cmc
addr16
mov
retf
inc
xchg
sub
cld
mov
push
sbb
push
sti
sbb
ins
cmc
xchg
sub
outs
leave
adc
or
jl
or
inc
pop
mov
cmps
sub
pop
int3
xor
sbb
bnd
cmc
inc
add
addr16
test
ret
inc
ins
daa
sbb
cmp
add
leave
data16
std
scas
dec
jo
leave
nop
loop
mov
or
sub
and
outs
dec
icebp
dec
jae
pop
pop
std
int3
or
push
scas
(bad)
jle
cld
fbstp
ds
aad
cmp
cld
and
sbb
add
mov
inc
arpl
add
inc
in
inc
sub
or
mov
out
pop
dec
jmp
ss
out
daa
sti
mov
or
xor
lods
push
imul
pop
push
pushf
dec
dec
cld
push
js
leave
adc
mov
scas
mov
(bad)
and
outs
outs
icebp
xchg
xor
iret
jbe
test
jae
call
push
xchg
inc
push
out
je
pop
fcomi
mov
push
adc
add
mov
xchg
addr16
sbb
retf
mov
dec
push
fdiv
gs
mov
cmp
scas
rol
pop
std
sub
pop
jno
(bad)
push
cdq
jbe
loope
sbb
(bad)
sar
inc
in
out
shr
cmp
jb
xchg
xchg
ss
cmp
mov
sti
mov
retf
xchg
cmps
std
gs
fld
stos
push
dec
imul
sbb
retf
cs
sbb
sbb
(bad)
outs
lock
aam
push
push
cli
les
(bad)
sti
stc
push
loope
cmp
or
adc
es
mov
lock
mov
push
movs
fsub
cmc
rol
sub
fwait
int3
loopne
push
push
mov
jecxz
xchg
lods
ror
push
int3
in
push
outs
adc
add
ins
sub
cmp
push
mov
cmp
aam
jne
rcl
into
mov
mul
ret
cmp
cmp
push
mov
stos
fdiv
push
mov
repnz
pop
arpl
push
out
pop
in
cmp
enter
arpl
aad
push
or
retf
xchg
imul
aas
shl
xchg
cld
test
out
ja
outs
and
inc
and
movs
nop
shl
aas
sub
sub
xchg
outs
push
dec
iret
sbb
arpl
dec
mov
push
xchg
inc
(bad)
test
dec
rol
or
ret
aaa
hlt
adc
and
or
push
xchg
jge
(bad)
push
ins
push
pop
imul
xchg
or
mov
sub
lods
in
outs
int3
push
sub
out
xor
daa
gs
fiadd
gs
pop
pop
and
jno
push
adc
xor
cdq
cmp
or
push
aas
adc
jge
not
pop
fild
mov
or
cmps
dec
mov
push
or
mov
mov
cmp
(bad)
adc
cdq
(bad)
fdiv
cbw
je
push
jbe
inc
aas
test
adc
jge
(bad)
test
(bad)
neg
ror
(bad)
and
pop
gs
adc
(bad)
mov
es
in
in
mov
daa
xchg
test
adc
arpl
fsub
pop
call
fnstenv
inc
dec
cli
sbb
dec
sbb
pop
sub
and
cmp
mov
jp
jbe
call
jecxz
ja
cmp
pop
cmp
ins
test
mov
mov
mov
cmp
pop
mov
or
push
int
pop
jae
jns
fadd
jg
cmp
dec
adc
sbb
mov
xchg
movs
xlat
pop
in
dec
or
push
popf
out
call
les
inc
xchg
sbb
xchg
jne
inc
mov
scas
clc
hlt
movs
xchg
or
xchg
mov
fadd
push
fisttp
dec
das
enter
fs
sbb
loope
pop
loope
add
and
xor
sbb
in
inc
inc
out
(bad)
lods
test
jl
dec
add
fbld
inc
int
out
sub
call
sbb
(bad)
out
scas
mov
xor
adc
xor
cmp
cmp
mov
outs
gs
cmps
std
pop
out
mov
ret
push
les
fadd
fs
jmp
(bad)
push
cwde
in
jnp
lods
cmp
cs
and
sbb
cmp
cmc
mov
in
(bad)
mov
push
iret
or
das
xchg
sbb
sub
bound
iret
iret
xchg
in
push
sti
pop
dec
add
xchg
dec
lds
sub
aas
sbb
outs
adc
out
repz
ins
in
fsub
(bad)
mov
cmps
in
iret
dec
repnz
int3
lfs
push
movs
cmc
adc
lods
and
and
sub
inc
mov
sbb
pop
jl
les
xor
or
in
cld
lods
or
lods
inc
push
jmp
jge
jns
adc
pop
stc
ret
mov
call
out
int3
out
test
fs
mov
pop
call
mov
inc
pop
lods
aad
inc
and
mov
in
push
cmp
add
ds
xchg
ret
jp
pushf
xor
xlat
fdiv
xchg
ja
xchg
gs
mov
test
out
and
sub
and
cmps
dec
adc
xor
fimul
jo
add
fs
xchg
inc
out
cmp
mov
stos
xor
pushf
sub
sbb
popf
icebp
push
iret
add
cld
addr16
mov
(bad)
or
mov
(bad)
push
in
xchg
push
inc
in
sbb
adc
pop
dec
pop
aaa
add
aam
and
sbb
(bad)
mov
adc
jae
mov
cld
pushf
mul
push
sbb
mov
out
in
ss
dec
dec
inc
mov
push
fist
adc
jae
mov
in
cmps
mov
inc
leave
mov
ins
test
ins
or
cmp
sub
jp
or
cmc
iret
lock
lods
loop
xor
sub
xchg
jmp
jno
inc
jne
lods
mov
nop
mov
dec
mov
mov
imul
frstpm(287
xchg
or
cld
mov
addr16
shl
mov
ficomp
ret
fistp
int
fdiv
xlat
into
cwde
pop
into
jbe
push
out
sbb
adc
xchg
dec
adc
rcl
xor
and
jecxz
push
adc
fidiv
scas
into
(bad)
out
psllw
sbb
sub
out
addr16
xchg
ret
enter
pushf
xchg
in
addr16
xor
lea
loope
pushf
add
(bad)
loopne
int
test
ret
ror
sub
pop
movs
ret
sbb
test
pop
cmp
mov
dec
add
sub
xor
xchg
dec
mov
int3
sbb
push
mov
dec
add
cmps
jl
js
andnps
in
xor
aad
cmp
shl
jnp
pusha
push
xchg
xchg
aas
js
and
(bad)
(bad)
fscale
fs
enter
gs
push
push
test
gs
xlat
(bad)
(bad)
je
lock
push
adc
fldcw
(bad)
xchg
xchg
cmp
(bad)
push
fisub
jb
pop
dec
mov
push
jle
mov
lock
cmps
adc
or
mov
int3
sbb
dec
neg
sub
dec
icebp
jg
(bad)
mov
jo
dec
dec
push
push
xor
jne
push
jmp
cs
mul
jge
jmp
test
push
jge
loope
dec
ds
push
imul
and
mov
mov
aad
adc
push
mov
sub
aad
add
mov
les
aad
cwde
movs
fisubr
add
sar
mov
sbb
pop
jg
pushf
xchg
popf
cmc
lods
out
xchg
outs
inc
pushf
cmc
ins
stos
or
push
ds
sub
pushf
cmp
out
dec
dec
shl
fld
jg
stc
and
gs
outs
push
in
test
dec
neg
ja
sbb
lahf
jbe
daa
test
xchg
nop
mov
push
movs
icebp
cdq
mov
adc
or
or
mov
xor
fs
scas
sbb
mov
mov
mov
nop
loope
sub
outs
arpl
pushf
fistp
cmp
dec
pop
push
movs
inc
out
data16
jne
fdecstp
pop
cwde
cld
nop
or
add
sub
sbb
pop
jae
sbb
adc
mov
mov
pop
jmp
stos
in
stc
or
ja
popa
cmp
(bad)
jp
pop
or
fadd
dec
dec
inc
rcr
jmp
jmp
daa
aas
ss
out
add
pop
nop
fwait
fs
sar
add
pop
xchg
jle
inc
mov
in
aaa
inc
addr16
ja
push
adc
jnp
in
lahf
outs
lods
mov
fist
dec
push
(bad)
or
push
mov
push
pop
imul
stc
aaa
mov
ret
pop
arpl
inc
xchg
sub
push
rol
or
pop
cmp
scas
dec
xchg
fs
(bad)
lea
mov
jno
or
mov
mov
mov
test
out
lahf
and
mov
push
or
and
(bad)
jmp
in
dec
repz
xchg
les
or
dec
lahf
(bad)
in
push
pop
jle
inc
fsubr
sti
ins
call
aam
xchg
pop
int
popf
ror
mov
push
mov
lods
xor
add
pop
inc
das
aaa
dec
xor
cwde
jl
jl
inc
test
pop
mov
icebp
mov
loope
xor
aaa
out
inc
out
js
repz
jnp
les
in
dec
pop
dec
xlat
sub
es
cmp
cmp
cmc
and
nop
xchg
dec
cli
cld
imul
addr16
ja
retf
jns
stc
ds
sahf
faddp
fprem1
sahf
sbb
fsubr
xchg
lods
fisttp
test
sub
pop
test
sti
pop
or
push
call
popf
sub
scas
sahf
dec
cmps
xor
cpuid
mov
jno
out
f2xm1
cmp
(bad)
pop
das
shl
or
cmp
push
aam
test
inc
pop
loopne
xchg
iret
setns
and
mov
xchg
pop
sbb
add
fsub
xchg
fcom
out
frstor
xor
xor
retf
xchg
sbb
fdivr
out
ret
lods
fmul
cmp
push
mov
cmp
jle
cmp
jnp
dec
push
movs
pop
pop
xchg
pop
add
clc
outs
dec
add
jbe
or
or
lock
xor
mov
inc
mov
sbb
(bad)
ds
sub
test
mov
ss
jge
jg
xchg
je
push
push
dec
mov
cld
ins
not
xchg
cmp
adc
dec
pushf
fild
sbb
sub
mov
outs
adc
push
xor
xchg
mov
pop
scas
pop
pop
std
in
gs
mov
ins
push
(bad)
mov
cmps
sti
xor
inc
adc
(bad)
aas
mov
loope
jge
mov
pusha
dec
jbe
pop
cmp
cmp
xor
sub
leave
push
adc
icebp
push
mov
pop
and
inc
pop
xchg
jmp
into
jae
xor
xchg
mov
clc
test
loope
(bad)
idiv
mov
adc
bound
loop
jb
es
mov
retf
scas
jle
sahf
jb
mov
xor
mov
xor
add
dec
jbe
out
xor
mov
fisubr
(bad)
cmc
(bad)
jecxz
inc
test
add
dec
call
aam
std
ins
or
retf
xor
pop
dec
daa
pop
je
pop
jle
jae
fsub
jge
mov
cld
call
xchg
add
mov
and
and
or
push
cmps
mov
rep
push
repz
adc
mov
cli
mov
mov
xlat
repnz
ins
test
outs
pop
sti
pop
pop
dec
test
lods
xchg
je
in
xlat
mov
(bad)
into
jb
aaa
sar
add
out
outs
in
fidivr
jmp
out
push
sbb
idiv
outs
mov
jmp
clc
shr
fsub
lock
pop
aaa
xor
sub
or
mov
lock
iret
out
inc
inc
pop
xlat
outs
pop
popf
ret
push
ins
repnz
sub
pusha
adc
sub
pop
fisttp
or
jmp
sbb
and
fdiv
xchg
adc
(bad)
pushf
ret
or
push
push
adc
inc
fild
ds
setne
dec
sbb
cli
cmp
cmp
dec
mul
add
sub
ins
pop
cmp
mul
in
mov
sbb
rcr
adc
cmc
mov
fidivr
test
(bad)
shl
into
push
jbe
dec
cmp
repz
sbb
lods
cmps
jp
out
enter
or
retf
je
mov
dec
out
(bad)
push
pop
cmp
leave
jne
arpl
jp
sub
test
mov
popa
aas
sub
jns
es
jmp
mov
inc
or
xchg
frstor
push
xchg
mov
fisub
(bad)
daa
add
inc
mov
mov
aam
or
push
mov
inc
cld
cmp
or
mov
xchg
daa
in
dec
pop
and
in
jbe
pop
pop
fnsave
pop
dec
outs
inc
jne
fs
iret
cwde
pop
rcl
ret
xchg
fcomp
cmps
enter
or
push
in
inc
retf
into
inc
or
ds
mov
cmps
mov
mov
sub
(bad)
inc
call
bound
dec
in
mov
sbb
or
mov
xchg
or
push
adc
pop
movs
ja
rcr
push
xor
out
cli
sub
scas
mov
movs
xchg
dec
leave
std
or
out
dec
shl
test
adc
out
inc
cmp
sbb
sar
out
(bad)
ja
xchg
sbb
(bad)
cmc
push
xchg
mov
scas
dec
pop
mov
icebp
xor
ds
sub
adc
cdq
ins
xor
mov
and
dec
inc
cmps
and
aam
hlt
(bad)
test
aas
cs
fwait
xchg
sbb
cld
loopne
lock
adc
sub
cmps
cmp
popf
stos
mov
pushf
pop
push
cwde
jne
ficom
fs
pop
rcr
mov
xor
daa
inc
(bad)
dec
mov
push
mov
int3
out
mov
push
ins
xchg
jae
pushf
cmp
mov
es
pop
outs
pushf
xlat
cmp
dec
cmp
movs
mov
call
xor
cld
push
aas
lock
xor
jle
popf
xor
mov
es
cmps
add
xchg
push
sbb
ret
jl
mov
cld
mov
dec
faddp
mul
jmp
enter
xor
jge
sub
daa
cmc
(bad)
rcr
sbb
fst
cmp
cmp
out
jmp
adc
push
mov
dec
addr16
hlt
xchg
mov
adc
out
xchg
push
pop
js
sbb
push
xchg
mov
cmps
pop
test
and
and
cmp
xlat
ret
inc
adc
scas
inc
test
inc
xchg
sahf
cwde
int3
cld
stos
cs
push
add
cli
ins
inc
imul
ds
push
sub
sar
mov
mov
outs
add
xor
lods
mov
pop
nop
cli
xchg
movs
ss
pop
mov
ficomp
int
xor
aas
das
mov
movs
dec
pop
aam
mov
push
ret
mov
pop
mov
ja
add
dec
shr
jge
push
and
mov
sbb
adc
inc
inc
mov
sub
pop
or
ror
shr
popf
mov
addr16
pxor
mov
lods
repnz
cmps
cmps
in
xor
dec
jp
movs
(bad)
call
add
(bad)
(bad)
test
jmp
shl
adc
imul
xor
xchg
int
push
shl
mov
xchg
xchg
cmps
cld
mov
addr16
jl
outs
dec
sub
or
add
or
cs
test
pop
push
and
or
xchg
fdiv
xor
les
repnz
push
mov
xchg
and
mov
add
lds
ret
pop
icebp
test
mov
push
cmp
cmp
bound
xchg
loope
mov
jbe
xlat
dec
daa
dec
mov
mov
inc
sbb
or
outs
inc
push
jle
inc
adc
mov
add
pop
sub
add
js
or
in
jmp
ins
aam
repz
mov
fwait
push
xor
adc
or
jbe
inc
add
addr16
lock
and
lock
ds
mov
dec
pop
pop
outs
fadd
jae
leave
hlt
mov
jmp
loop
ja
sbb
xor
arpl
test
add
pop
pop
push
push
shl
mov
push
push
sahf
mov
adc
xor
cmp
pop
cmps
cmp
push
rol
daa
jmp
das
xchg
push
scas
mov
hlt
cs
cmps
fisttp
xor
cmps
adc
shl
sub
dec
mov
jmp
xor
(bad)
mov
outs
push
mov
jne
push
mov
sbb
in
pop
xchg
or
cs
mov
loopne
and
ficom
cld
xchg
jge
cld
pusha
or
mov
jp
outs
fsub
lock
sub
inc
mov
test
fidiv
repnz
mov
call
mov
or
sbb
addr16
cmps
pop
into
leave
jg
xchg
aaa
mov
fdiv
push
getsec
push
mov
mov
dec
cld
cld
aam
push
sbb
add
adc
push
sub
xchg
cmc
push
xacquire
lock
add
adc
adc
lods
mov
into
shl
fs
ins
dec
mov
ror
pop
fisttp
and
sar
ja
mov
outs
or
inc
sub
js
jmp
lods
mov
sbb
icebp
push
cmp
call
dec
ss
sti
popa
fld
int3
pop
cmp
imul
rcl
imul
xor
je
mov
mov
dec
adc
mov
test
ret
inc
fmul
sub
aaa
xlat
mov
or
lea
ja
mov
popf
or
push
ret
sub
fimul
fs
loop
call
mov
add
pop
xchg
in
xchg
pop
mov
sbb
push
pop
xor
ins
and
jbe
or
inc
stos
test
cdq
test
add
add
mov
sbb
mov
xchg
movs
repz
and
jmp
jbe
adc
dec
sub
cmp
ret
cmp
icebp
mul
xchg
push
or
pusha
ss
ins
das
push
cld
inc
jb
outs
fisttp
pop
mov
cmps
std
pop
xor
in
imul
push
fild
and
fwait
cmps
cmp
jl
je
enter
pop
and
jecxz
je
je
pop
das
ja
sub
jae
push
ins
pop
pop
inc
lds
pop
cmp
cmp
cmp
mov
or
sub
sub
push
into
ret
mov
movs
test
jo
adc
sub
std
pop
addr16
inc
test
lods
mov
jl
jb
mov
cmp
xor
sub
cld
cmp
adc
xor
sub
xchg
(bad)
lea
sbb
out
add
jmp
test
lods
jmp
std
push
loop
mov
cs
pop
test
bound
call
push
adc
sahf
movs
ds
and
(bad)
movs
cs
dec
dec
daa
je
sbb
jg
push
mov
or
push
popf
shl
aad
add
std
or
cmp
daa
mov
adc
outs
iret
mov
cs
out
or
dec
and
sub
je
ret
arpl
cmc
lods
das
(bad)
in
jmp
cmp
jnp
mov
jg
out
jp
cs
dec
fidivr
sbb
out
mov
xchg
mov
sbb
ja
scas
(bad)
in
or
ins
sub
imul
cmp
lods
mov
out
shl
jb
mov
(bad)
xchg
jne
sbb
mov
cmps
aad
outs
icebp
aas
dec
movs
adc
jbe
mov
outs
push
das
or
repnz
(bad)
out
inc
inc
push
shl
fld
fisttp
cwde
lods
cdq
cmps
pop
iret
je
imul
fs
std
adc
sub
cmp
sahf
mov
pop
or
aad
out
jbe
pop
pop
std
sub
je
cmp
loope
in
(bad)
ins
nop
je
fld
jae
call
xchg
add
jo
adc
sbb
fst
sub
ss
push
xchg
push
jns
iret
xlat
arpl
xchg
cmps
std
movs
jo
loopne
test
sbb
lods
sar
jge
je
or
xor
out
pop
push
mov
or
mov
pop
xor
dec
jge
jg
in
or
pusha
or
outs
mov
out
(bad)
scas
cmp
xor
jno
je
add
sti
inc
shl
sub
neg
push
mov
movs
dec
ror
loopne
daa
jns
dec
es
fisttp
and
sub
je
inc
test
adc
stc
dec
bswap
xchg
cld
xor
pop
dec
shl
lods
mov
jmp
adc
mov
push
ins
inc
or
aam
cmps
(bad)
enter
retf
and
mov
ja
mov
dec
cdq
mov
pusha
jecxz
mov
mov
sub
outs
and
xor
mov
jmp
mov
loope
mov
scas
mov
mov
lods
dec
popf
push
aam
inc
cmp
xchg
enter
jmp
cmp
jl
push
sub
or
loop
repnz
jnp
xchg
mov
mov
xchg
int
frstor
xlat
mov
dec
mov
out
je
fnsave
or
pop
sbb
popa
jb
mov
fistp
jge
pop
jp
retf
fmulp
int
sbb
push
push
adc
jbe
rcl
daa
inc
in
jecxz
(bad)
test
mov
sub
mov
dec
adc
not
xchg
or
xlat
dec
rcl
xor
ds
cld
dec
aas
dec
sbb
mov
imul
mov
sbb
add
jl
jge
sbb
and
sbb
lods
xlat
mov
pop
fcmovb
xchg
scas
sbb
push
mov
cld
xor
fwait
add
fisttp
mov
ja
push
(bad)
into
adc
and
int
adc
cmps
adc
es
push
jecxz
lea
cld
mov
and
xor
mov
jae
sbb
(bad)
rcl
in
mov
add
scas
(bad)
lock
push
ins
sbb
push
hlt
lahf
rcl
inc
aad
jae
pop
sti
jnp
mov
jmp
mov
pop
adc
(bad)
xor
movs
mov
imul
push
mov
iret
stos
jl
sbb
or
sbb
add
lods
push
js
push
int
mov
and
das
int3
outs
test
(bad)
(bad)
in
seta
mov
jge
sbb
aad
iret
add
jmp
inc
add
arpl
cmc
(bad)
lods
mov
lahf
or
or
ds
shr
xchg
adc
dec
(bad)
gs
mov
enter
nop
aas
mov
call
xor
adc
add
js
std
movs
ins
(bad)
cs
jbe
sub
sbb
inc
push
in
xor
jge
fadd
test
outs
xchg
fsub
aam
fs
mov
mov
les
xchg
jb
jb
test
test
mov
lock
test
mov
jbe
movs
sbb
push
or
shl
or
or
or
jecxz
es
js
jo
or
xlat
add
jp
adc
sbb
stos
scas
fs
pop
outs
mov
or
push
xchg
outs
or
mov
pusha
pushf
(bad)
and
mov
div
mov
sti
js
gs
bound
mov
loopne
(bad)
inc
jle
jl
shl
div
cmp
mov
adc
cld
jb
ss
and
mov
xchg
das
dec
in
in
dec
cmp
and
adc
dec
inc
add
call
shl
aad
jnp
shl
cwde
aaa
inc
fisttp
inc
inc
test
scas
jp
sar
sub
push
sub
xlat
in
inc
sbb
mov
daa
jecxz
push
inc
rcl
and
cmp
bound
gs
inc
out
sahf
fldenv
jmp
out
fadd
inc
rcl
jmp
aaa
movs
pop
hlt
pop
or
(bad)
sub
lahf
popa
add
inc
sub
mov
out
pop
ror
dec
add
inc
imul
mov
shl
mov
add
jbe
dec
addr16
inc
(bad)
pop
das
xchg
dec
and
mov
xchg
ja
jmp
jmp
(bad)
je
or
push
iret
in
xor
xlat
in
std
adc
push
les
mov
push
sub
jae
jne
shr
jge
cld
retf
jl
test
hlt
adc
pop
popf
mov
add
add
cwde
imul
xchg
mov
cmps
std
aaa
dec
or
push
ins
xchg
pop
outs
or
xchg
daa
or
in
not
scas
stos
adc
pop
push
mov
ins
sub
sbb
gs
pop
das
jno
idiv
pop
(bad)
mov
bound
dec
xchg
dec
test
fld
cmp
lods
repz
adc
mov
test
cmp
push
jle
push
dec
daa
hlt
ja
adc
cmc
push
ret
xchg
test
cmp
shl
jle
jle
pop
popf
and
cmp
and
(bad)
cmp
test
jle
xchg
sbb
add
call
mov
rcl
out
cmps
dec
jecxz
leave
sbb
pop
repz
add
outs
scas
movs
in
fprem
add
sar
xlat
hlt
mov
jae
pop
inc
xchg
popa
sub
inc
icebp
mov
pop
or
jnp
lods
ror
ins
cmp
into
xor
sbb
xor
pop
adc
mov
jmp
stos
dec
xchg
(bad)
cmps
jns
mov
pop
(bad)
push
dec
and
pop
push
arpl
mov
jmp
xchg
push
push
cmps
xchg
popf
aad
sbb
cmps
xor
neg
in
inc
sbb
ins
setge
sbb
xchg
xor
stos
cld
fidivr
sbb
push
les
jbe
and
arpl
xchg
lock
outs
sbb
adc
sbb
cmp
xor
fadd
adc
xor
jg
sub
xchg
mov
mov
outs
xchg
pop
push
ret
xor
ss
repnz
mov
shl
lahf
(bad)
mov
sub
jmp
dec
sub
(bad)
sub
pop
add
out
xchg
jle
jo
movs
cmp
(bad)
sbb
inc
adc
fsubr
cmp
push
cdq
call
fld
dec
push
mov
loope
jmp
in
fsubrp
xor
adc
lahf
fimul
mov
ins
add
xlat
(bad)
mov
mov
cmp
push
jns
pushf
sub
mov
adc
aam
retf
int3
(bad)
mov
mov
xchg
mov
jmp
and
retf
sub
ss
pusha
retf
call
fstp
cmp
xchg
fcom
mov
ja
arpl
push
push
mul
pop
jge
aas
(bad)
mov
mov
push
fnsave
sar
add
dec
int
pusha
adc
aam
fwait
sbb
dec
xchg
cmp
inc
adc
pop
fistp
test
jmp
mov
or
fcom
call
daa
push
ds
jg
sbb
in
aaa
or
retf
and
dec
dec
sub
mov
stos
test
mov
push
fld
ret
cmp
mov
ret
(bad)
sbb
sub
mov
(bad)
je
inc
sub
pop
iret
mov
out
cwde
(bad)
retf
imul
inc
jmp
jae
jmp
mov
pop
in
daa
repnz
inc
and
lods
sbb
test
imul
or
cmp
pop
jnp
mov
pop
pop
pop
xchg
xchg
in
xchg
in
xlat
or
mov
jbe
push
and
lods
cdq
popa
push
sub
and
and
add
hlt
outs
sub
out
outs
shl
lds
inc
scas
aas
xchg
pusha
(bad)
jg
ds
scas
push
cld
inc
adc
mov
xchg
jb
std
push
adc
sub
mov
movs
inc
xor
sub
cs
call
arpl
dec
js
(bad)
stos
push
xchg
add
pop
or
pop
jmp
fwait
xor
sbb
mov
pop
sti
ins
fadd
retf
adc
(bad)
xor
jp
mov
pop
jmp
xchg
hlt
add
mov
(bad)
mov
pop
push
mov
das
imul
out
test
adc
or
push
xchg
das
les
leave
mov
(bad)
jmp
bound
xor
and
xchg
dec
call
dec
cvttps2pi
ja
push
cdq
pop
div
cmp
mov
lods
xchg
xor
xchg
loope
sbb
das
jno
or
(bad)
test
outs
add
push
iret
pop
push
call
mov
sbb
test
or
repz
xor
xchg
inc
xchg
mov
push
sub
add
inc
out
fcmovne
(bad)
mov
lods
fsubr
mov
mov
xchg
push
cli
test
cmp
cmp
ins
and
stc
rcr
out
cdq
jmp
mov
sub
test
cmp
mov
mov
mov
je
xchg
and
aas
loopne
mov
push
adc
mov
adc
and
inc
cdq
sub
xor
movs
(bad)
hlt
mov
push
or
add
and
shl
sbb
int
into
movs
rcl
in
add
cld
jne
jae
test
pop
lea
lods
sbb
(bad)
popa
arpl
adc
ins
mov
adc
ret
xchg
movs
push
(bad)
fdivr
lock
clc
out
fs
adc
stos
loopne
out
sbb
and
(bad)
or
xchg
mov
shr
dec
fsubr
ins
ins
mov
and
aad
test
(bad)
adc
retf
lahf
movs
xchg
mov
sub
jg
push
mov
add
retf
out
cmp
out
popa
add
inc
or
add
mov
into
lds
ins
clc
mov
and
fidiv
jecxz
cmp
push
pop
cmc
pushf
jnp
lahf
enter
clc
pop
(bad)
jnp
mov
jp
push
sbb
pushf
mov
mov
sbb
pop
in
es
push
or
jp
pop
add
cmp
mov
xchg
dec
cmp
jns
xor
cmp
xchg
mov
or
xor
jle
retf
cli
ins
lods
clc
adc
adc
pop
cli
jge
pop
jmp
add
inc
adc
ins
or
xlat
and
int
cmp
sub
jge
mov
vpsubsw
rol
jmp
push
cmp
xchg
jns
std
nop
add
into
pop
in
cld
cwde
imul
aas
xlat
mov
xchg
jmp
es
leave
mov
add
ja
jnp
stc
les
add
lahf
push
xchg
je
add
pop
adc
xchg
jne
mov
and
addr16
push
pop
add
mov
daa
mov
xor
add
movs
jmp
stc
movs
jmp
xlat
push
sub
sbb
loopne
push
mov
mov
ret
call
imul
push
es
jl
in
inc
cmp
fcomip
dec
push
in
ret
jnp
xor
fdivr
xchg
push
mov
sar
dec
push
jb
ret
imul
gs
xchg
test
inc
ficomp
aam
(bad)
push
pop
fs
mov
mov
xor
lds
push
fstp
push
adc
sub
push
jecxz
int
jg
xchg
mov
cmp
and
lahf
ror
inc
mov
pop
jmp
mov
test
imul
cmp
cmp
movs
fst
or
push
mov
faddp
add
push
xchg
xchg
xchg
fsubr
jmp
repnz
into
xchg
das
mov
inc
data16
jns
pushf
mov
push
sbb
idiv
mov
repnz
outs
push
aaa
push
jbe
jae
cmp
push
popf
add
mov
fninit
in
xchg
pop
imul
jl
sbb
pop
data16
movs
xchg
add
xchg
mov
cmp
hlt
(bad)
cli
pop
push
xor
movups
add
pushf
popf
loope
sbb
imul
fild
sub
imul
(bad)
pop
repnz
(bad)
mov
out
and
push
sbb
sub
int
inc
mov
test
out
xchg
jg
inc
dec
xchg
cmp
pushf
dec
aad
push
data16
adc
aas
iret
ins
lods
pop
pop
or
jns
rol
mov
lea
mov
sahf
shl
jbe
(bad)
fcomp
xor
jns
jg
add
ja
adc
outs
mov
aad
pop
cld
rcr
mov
clc
bound
push
xor
adc
shr
repz
xchg
sub
out
aas
inc
aas
lahf
fsub
lea
jmp
or
addr16
mul
jmp
pop
iret
cld
fcmove
mov
pop
push
int3
sub
out
push
add
jecxz
ret
push
cmps
pop
xchg
in
mov
pop
sub
or
call
sub
mov
inc
ins
out
mov
cli
add
aaa
pop
jge
(bad)
xor
pop
dec
cld
jns
xor
test
mov
xchg
cmp
xchg
add
cmp
iret
into
in
daa
test
cli
ret
and
pop
jl
stc
std
push
mov
mov
jge
icebp
push
jbe
jp
pop
mov
mov
pop
jbe
test
pop
jecxz
aaa
mov
push
sbb
retf
xchg
mov
repz
lea
pop
mov
icebp
sbb
xor
aas
fcomp
iret
and
test
xchg
ins
xchg
mul
fwait
adc
adc
leave
adc
xchg
pop
mov
imul
sbb
mov
xor
cmp
push
pop
fbstp
in
dec
mov
xchg
test
mov
jno
stc
shr
xchg
in
sub
test
dec
push
push
push
out
jbe
call
sahf
repz
pop
push
mov
mov
or
stos
pop
gs
cmp
lea
es
cld
in
and
hlt
or
or
sbb
imul
xor
retf
push
sub
and
sbb
dec
mov
sahf
aaa
mov
scas
call
mov
movs
dec
jno
pusha
jbe
cmps
cdq
pop
or
out
and
in
iret
inc
nop
ds
jmp
mov
nop
mov
pop
dec
leave
push
lods
sub
scas
xlat
in
mov
mov
rcr
cmps
ds
ja
sti
xchg
(bad)
cdq
clc
popa
(bad)
cmp
or
fsubr
xchg
and
stos
push
xchg
sar
es
pop
pop
jp
dec
test
sbb
int3
fsub
shl
mov
mov
xor
lock
ror
dec
or
mov
xor
mov
pop
inc
outs
jp
push
pushf
test
stos
loope
pop
in
sbb
dec
test
mov
sub
in
in
mov
popa
icebp
dec
sbb
dec
pop
cwde
sbb
fadd
pop
ss
ror
in
loope
mov
xchg
and
or
ins
jg
movs
daa
dec
cmps
sub
data16
cmp
fwait
rol
push
into
inc
outs
or
pushf
test
rol
jmp
in
jb
mov
leave
and
lea
mov
ror
dec
mov
inc
in
hlt
iret
pop
fnstenv
xchg
loope
scas
mov
adc
pop
cmp
or
iret
inc
ja
push
test
xor
scas
pop
out
or
inc
mov
push
jne
in
addr16
scas
xchg
mov
js
aaa
outs
(bad)
retf
xor
push
arpl
daa
cmp
push
outs
ficom
ficomp
test
cld
xlat
sbb
pop
stos
dec
push
dec
and
fst
inc
js
test
jg
mov
mov
pop
xchg
lea
xchg
sub
out
inc
sbb
adc
xor
mov
xchg
ficom
mov
adc
pop
cs
and
stos
test
test
sub
lods
mov
or
jne
pop
cmp
jae
mov
mov
adc
xchg
fwait
in
sahf
dec
mov
inc
pop
inc
mov
mov
xor
ss
pop
or
lods
jb
idiv
push
pop
mov
xchg
hlt
add
sti
sbb
outs
popa
das
sub
cmp
in
push
add
lahf
rol
pop
test
les
pop
push
and
inc
jo
dec
stos
iret
cmp
mov
shl
dec
push
pop
push
push
mov
daa
fcomp
ficom
test
pop
lahf
ds
pop
sbb
jl
or
(bad)
in
fstp
pop
mov
in
jbe
pop
ds
add
ficomp
pop
or
in
popa
xchg
inc
(bad)
mov
sbb
daa
sbb
add
cmp
fld
sti
mov
int
fisttp
les
dec
push
sbb
(bad)
bound
xchg
push
(bad)
rcl
stc
in
ficom
xor
out
push
jns
lds
das
jb
mov
ss
out
pop
xchg
fdivr
jp
fild
mov
mov
clc
ja
repnz
std
add
outs
xchg
out
pop
jns
lods
data16
je
iret
std
out
mov
addr16
fbld
pop
mov
dec
sub
out
test
call
jl
sbb
cmps
pop
(bad)
mov
mov
dec
dec
gs
push
mov
adc
mov
popa
inc
ret
lock
push
mov
pop
add
jle
pop
sahf
adc
sbb
shl
add
ss
add
test
or
adc
lds
push
popf
shr
xchg
ja
arpl
xchg
hlt
ins
jg
xor
xlat
mov
(bad)
cmp
mov
int3
add
cmp
inc
pushf
sbb
ins
(bad)
and
or
sub
aam
adc
fcomp
fnstcw
lods
loop
cld
jnp
pop
scas
cmp
ja
pandn
sbb
mov
mov
(bad)
mov
mov
mov
pop
mov
test
jo
loopne
mov
into
sub
mov
inc
cmps
push
xchg
cmps
(bad)
out
movs
xchg
sbb
cld
mov
cld
in
ror
fst
inc
int3
not
jl
push
cmps
outs
and
jg
inc
jbe
aad
cli
inc
fst
jecxz
push
dec
jne
sbb
das
inc
retf
mov
ins
outs
(bad)
enter
ins
loope
xlat
pop
cmp
repnz
addr16
inc
cmp
les
or
fst
fcom
xchg
pop
sub
xchg
ffree
dec
pop
std
ss
jnp
inc
test
lahf
push
dec
fld
jb
push
inc
mov
(bad)
sbb
mov
jmp
xor
sahf
ins
xor
jge
shl
mov
bnd
jmp
cwde
sub
aas
push
push
jmp
aas
pop
cwde
and
(bad)
xlat
push
pop
pop
leave
cmp
jns
fist
pop
pop
outs
fistp
inc
cmp
call
sub
imul
jne
(bad)
push
ds
imul
pop
jo
sub
mov
cmp
dec
movs
xchg
xor
sub
aaa
cli
outs
loop
mov
jb
xor
pop
and
int
rcl
push
mov
std
iret
call
push
jl
mov
(bad)
lds
inc
cmp
jbe
scas
adc
(bad)
not
mov
jecxz
and
(bad)
mov
jne
xlat
push
inc
outs
je
push
pop
sub
ds
push
outs
push
ins
or
stos
loop
stos
cmc
or
add
jl
mov
push
or
cdq
not
mov
xchg
jbe
(bad)
pop
mov
cld
cmps
xchg
jne
push
es
inc
push
jle
mov
xchg
mov
popa
cmc
pushf
in
pop
daa
cmps
aam
pop
outs
xchg
clc
inc
out
jmp
mov
jae
mov
or
mov
dec
push
lea
(bad)
rol
aaa
sbb
mov
cwde
cld
mov
in
cmp
adc
add
sub
pop
les
in
dec
out
inc
lahf
mov
out
popf
fadd
movs
mov
ss
or
add
jns
mov
iret
sbb
fucomp
mov
mov
mov
xlat
mov
mov
add
ds
pushf
in
jb
jno
xchg
stos
outs
(bad)
push
mov
outs
shl
stc
mov
jo
(bad)
out
imul
sub
out
dec
lea
xlat
neg
adc
aaa
inc
call
test
inc
ror
push
sar
shl
in
scas
jnp
push
push
pop
dec
adc
(bad)
sbb
dec
xchg
lods
out
or
fistp
fucomp
adc
and
je
les
psubb
mov
and
neg
inc
adc
pop
cld
xchg
mov
sbb
movs
(bad)
outs
dec
out
adc
outs
call
push
push
arpl
in
inc
nop
in
arpl
mov
int3
xabort
or
cld
jecxz
xchg
lea
(bad)
ja
add
inc
jg
sbb
lea
scas
sti
xchg
mov
inc
in
push
mov
add
mov
push
cmp
test
adc
je
pop
loopne
mov
or
aas
mov
lahf
pop
pop
daa
imul
xchg
xchg
xor
loop
inc
mov
lea
inc
test
sahf
jl
minps
mov
xlat
(bad)
div
bound
iret
pop
pop
mov
mov
cmp
and
adc
push
mov
mov
pop
enter
(bad)
adc
mov
sub
push
dec
jle
rcr
test
out
pop
jmp
adc
jns
jns
pop
loopne
or
mov
out
jno
sbb
mov
and
std
int
fidiv
outs
mov
jp
fmul
jb
mov
jo
cld
loop
add
retf
or
xor
int3
outs
test
iret
mov
sbb
pop
int
(bad)
mov
cli
mov
push
xchg
pop
or
mov
sub
int
daa
ins
sbb
mov
push
cli
ins
es
and
(bad)
push
pop
fdivr
(bad)
sti
mov
jecxz
not
cmp
fld
adc
aaa
mov
mov
or
and
out
mov
call
sahf
ins
dec
xchg
test
push
dec
in
pop
scas
mov
jno
mov
outs
sti
jecxz
inc
lock
mov
and
sub
or
inc
in
shl
mov
inc
sbb
mov
xchg
pop
mov
ja
out
mov
inc
dec
sbb
cs
mov
jbe
dec
jg
mov
or
jg
fild
push
mov
out
fadd
add
dec
mov
or
push
dec
out
hlt
xor
mov
pushf
pop
adc
mov
frstor
addr16
iret
pop
lahf
dec
lds
lock
ret
out
push
outs
xor
push
out
cwde
pop
dec
mov
mov
(bad)
imul
push
sbb
movs
aad
lea
sti
sbb
sbb
cmps
cmps
int
fcomp
cld
cmp
mov
xchg
not
les
mov
test
jbe
ins
and
push
jb
pop
cmove
mov
xchg
pop
jg
loop
not
jle
(bad)
frstor
cmps
shl
fidivr
in
cmp
dec
sub
retf
inc
sub
add
mov
push
call
scas
pop
mov
loop
add
pushf
pop
add
push
out
mov
arpl
sar
jne
sbb
es
inc
neg
or
ss
mov
shr
jmp
pop
lods
mov
int
sar
pop
inc
hlt
cmp
push
pushf
js
pushf
xchg
in
adc
test
xor
mov
xchg
lock
xor
sahf
(bad)
shl
outs
add
mov
in
call
mov
cdq
pop
push
pop
div
xlat
mov
in
mov
call
lock
add
scas
push
cmp
or
push
cmp
out
imul
pop
mov
sbb
cld
inc
ds
or
lock
dec
xlat
arpl
jbe
inc
cmps
jl
les
movs
jnp
leave
cld
push
mov
(bad)
xor
aad
dec
mov
add
dec
in
(bad)
pop
push
jge
adc
daa
mov
inc
fcom
loope
outs
in
ret
sbb
out
in
jp
mov
jb
out
out
aaa
repz
pushf
retf
pop
stos
sbb
xchg
loope
mov
xchg
and
ja
add
mov
popf
cmps
fstp
out
inc
dec
popf
repnz
push
lods
inc
dec
xor
pop
aaa
push
jnp
(bad)
repnz
lea
lods
call
push
inc
retf
dec
dec
and
(bad)
and
cli
out
add
cs
cli
push
(bad)
xor
lock
jmp
mov
cld
xchg
test
push
aad
lods
xchg
mov
stos
push
dec
ss
fld
push
into
add
addr16
mov
test
pop
jmp
sub
mov
dec
ret
cmp
nop
or
stos
jmp
scas
jp
int3
ret
out
push
pop
sbb
ins
push
mov
mov
xor
pop
push
or
xchg
xchg
mov
rol
ffree
lea
sbb
and
mov
adc
sub
push
sub
repz
or
pop
stos
(bad)
fcomp
rol
jb
mov
inc
xchg
xchg
mov
fnstsw
ss
add
aas
jo
jp
dec
jge
mov
xlat
int
push
xchg
cmps
in
(bad)
cs
pop
ins
ror
push
and
int3
and
dec
fsubr
fnstcw
rcr
pop
pop
cmp
scas
xchg
xchg
retf
sub
push
int3
shr
loope
dec
pop
dec
jne
xchg
in
aad
add
iret
lea
jne
dec
jg
outs
pop
xor
sar
scas
mov
xchg
push
mov
test
dec
dec
addr16
shl
cmp
int
jl
retf
push
int
bound
mov
test
xor
imul
out
xor
lods
cmps
ins
sbb
xchg
loopne
hlt
leave
mov
sahf
mov
data16
push
std
inc
pop
cld
daa
or
mov
mov
sub
popf
sbb
je
xor
ror
ja
test
push
fdecstp
dec
test
mov
dec
push
ret
es
sbb
inc
xchg
cmp
pop
clc
sub
or
mov
mov
mov
cmp
adc
fwait
add
pop
fstp
cmps
int
out
retf
pop
pop
loopne
js
in
cdq
adc
gs
sub
inc
movs
daa
pop
arpl
add
cmp
out
retf
fcom
out
sbb
test
sahf
adc
lods
ins
test
xchg
adc
cmp
fadd
cmps
pop
movs
xchg
pop
add
sub
push
or
in
jo
mov
out
jp
mov
daa
out
dec
aaa
in
imul
cs
pop
iret
mov
pusha
fs
lahf
iret
cdq
dec
cwde
push
dec
gs
imul
inc
int3
push
jge
sub
loopne
mov
cmp
inc
pushf
scas
imul
movs
pop
mov
push
jne
jne
(bad)
sti
sub
sahf
pushf
mov
lock
and
mov
mov
inc
push
cmps
jl
ins
dec
shr
popf
aam
xor
mov
or
and
sub
cmps
mov
xchg
mov
jae
fdiv
or
dec
ja
xchg
fild
pusha
int3
xchg
addr16
mov
sub
scas
cmp
stos
cdq
test
(bad)
out
pop
mov
std
sti
pop
aaa
shl
out
cmps
adc
imul
dec
xchg
test
out
mov
inc
jl
or
xor
imul
push
dec
scas
repz
das
icebp
pop
mov
ret
jg
test
in
outs
test
adc
and
fisub
lods
(bad)
push
jecxz
movs
push
xchg
cli
rcl
pop
pop
ss
call
mov
xchg
xchg
mov
aaa
arpl
fldlg2
and
inc
mov
icebp
adc
movs
push
bound
cmp
call
add
mov
shr
sub
in
adc
inc
sub
inc
fcomp
fbstp
inc
movs
in
inc
add
push
fsubr
adc
pop
pop
imul
sar
outs
pop
lds
in
mov
inc
adc
push
loope
cmp
ret
sahf
xchg
daa
mov
adc
cmps
call
cmp
sbb
adc
xchg
add
cmps
cmps
adc
pop
and
int
mov
lods
pop
add
push
xchg
mov
mov
stc
adc
mov
sub
cmps
mov
dec
jmp
cmp
stc
repz
cmp
jecxz
inc
cdq
inc
out
out
ja
mov
ficomp
cvtps2pd
pop
fldenv
ror
fiadd
mov
cdq
les
add
xor
jg
leave
jae
jmp
or
movs
pop
movs
cmp
jmp
inc
sti
mov
pop
jge
mov
push
pop
mov
mov
out
push
in
dec
lea
ja
je
adc
aad
adc
cmc
inc
jmp
sub
mov
imul
adc
jne
popf
hlt
pop
aas
pop
test
pop
lods
out
sbb
push
xchg
jo
xchg
and
dec
inc
dec
cmp
xchg
cdq
es
ins
dec
(bad)
test
adc
sbb
or
pop
inc
pop
mov
aas
loop
outs
xlat
cwde
prefetch
mov
imul
std
popf
sbb
mov
push
es
and
das
jmp
shl
(bad)
jge
push
jmp
xchg
aas
or
pop
ja
int
out
fisttp
jbe
dec
dec
ret
pop
mov
and
xchg
mov
(bad)
ins
out
outs
das
cld
sahf
push
call
cmp
and
add
lock
clc
inc
or
mov
leave
popf
mov
sbb
fwait
inc
movs
push
and
and
dec
xchg
lock
test
xchg
cmp
mov
retf
xchg
jns
mov
ja
lahf
xchg
fistp
xor
xor
sub
mov
lods
push
adc
xchg
mov
mov
push
enter
mov
cmp
(bad)
iret
mov
mov
cwde
shl
leave
cmp
sub
test
add
xchg
sahf
pushf
xlat
ins
popf
jne
mov
das
gs
inc
ret
daa
add
cs
cmp
ins
mov
in
lds
stos
xchg
sti
in
in
fisttp
xchg
inc
lods
pop
test
enter
pop
call
pushf
mov
loopne
rcl
nop
inc
clc
xlat
sbb
jle
sbb
add
outs
stos
cmp
xchg
jp
ret
mov
sbb
out
or
pop
fwait
(bad)
sbb
ret
add
mov
outs
nop
dec
sub
push
sbb
jle
les
movs
ins
sti
push
sti
aas
sbb
mov
out
(bad)
std
nop
enter
fisubr
call
lods
(bad)
cmp
pop
mov
xor
jecxz
les
xchg
mov
lods
and
je
mov
pop
clc
sub
jmp
jg
xchg
cmp
iret
mov
mov
pop
sub
bnd
loop
(bad)
int3
sub
test
addr16
sub
int
push
pop
stc
fwait
imul
aam
and
shl
inc
ja
in
jg
popa
xor
xchg
call
cmp
push
ds
sub
dec
int3
or
les
mov
cmp
cmp
in
xchg
js
pop
dec
ins
mov
inc
js
push
not
dec
cwde
push
cmp
cmps
push
pop
les
call
mov
les
pop
mov
pop
stc
lods
mov
jbe
scas
test
xlat
mov
push
jle
jecxz
mov
gs
(bad)
data16
cmp
inc
in
push
mov
sbb
aaa
rcl
mov
pop
(bad)
outs
cmc
inc
lds
pushf
or
(bad)
jmp
jge
jmp
js
rcl
push
cwde
mov
inc
(bad)
out
out
ficomp
mov
mov
jl
xchg
cmp
push
inc
dec
int3
dec
or
pop
adc
scas
xchg
ja
call
les
cld
or
add
inc
dec
jae
jge
dec
sub
enter
pop
mov
leave
push
fucomip
out
loop
xor
icebp
(bad)
nop
cmp
dec
push
jecxz
test
nop
pop
test
xor
out
out
or
stos
inc
(bad)
jb
mov
sub
mov
div
fldenv
fcom
out
out
mov
sub
stos
sbb
mov
push
fnstenv
ja
mov
dec
mov
ja
jb
mov
stos
(bad)
mov
and
scas
(bad)
shl
jg
aaa
or
mov
inc
add
mov
pop
dec
popa
dec
or
cmp
dec
jne
jmp
fisub
pop
mov
sbb
loope
ficomp
js
fs
push
push
xchg
push
pop
sub
xlat
aaa
cmc
jbe
ins
movs
out
push
mov
xlat
mov
lods
sbb
fistp
or
inc
popf
dec
adc
scas
gs
std
and
jl
xchg
sti
cmp
(bad)
in
jb
inc
daa
mov
mov
in
mov
call
lods
pop
inc
cmp
xor
pop
and
mov
mov
rcr
lds
fwait
sbb
dec
sbb
mov
adc
loope
lahf
xchg
ins
fisubr
jle
mov
push
mov
jg
xor
mov
addr16
mov
aas
push
xlat
int3
pushf
cmp
lock
xchg
adc
es
pop
jl
in
inc
xchg
dec
mov
fs
adc
mov
not
xchg
sub
data16
sub
push
ss
cwde
(bad)
in
shr
repz
jb
aas
adc
lods
add
lods
push
int
mov
pop
nop
jmp
jno
pop
jmp
div
sar
xchg
add
(bad)
fiadd
add
ret
push
jae
ss
test
sahf
les
addr16
aam
xor
push
or
and
xlat
xor
clc
lock
test
xchg
dec
adc
adc
(bad)
nop
xchg
inc
mov
adc
push
ja
ins
in
pop
idiv
outs
fist
inc
cmp
jo
jo
scas
test
or
clc
jp
fsub
pop
add
pop
leave
imul
neg
cmp
sbb
and
loop
test
jecxz
jge
push
ins
cwde
div
neg
sbb
and
rol
dec
sbb
inc
(bad)
aad
gs
gs
xchg
or
mov
jnp
mov
mov
pop
sub
jb
dec
imul
lds
mov
cmps
stos
cmps
dec
stos
popf
out
mov
cmps
ins
jge
sbb
xchg
(bad)
int3
add
push
fwait
outs
aaa
or
mov
sub
(bad)
cmp
jo
adc
push
xor
and
movs
adc
div
cmp
fstp
addr16
in
mov
xchg
sub
mov
addr16
cdq
shl
test
mov
xchg
std
dec
addr16
adc
mov
fs
xchg
scas
pop
pop
mov
push
(bad)
call
push
xor
in
xor
ret
loop
outs
(bad)
aaa
sbb
push
jmp
repnz
xor
mov
inc
cmp
shr
cwde
sbb
push
mov
mov
pop
mov
add
pop
mov
out
arpl
jo
inc
mov
movs
mov
pop
push
ins
pop
pushf
shl
shr
adc
jl
or
add
imul
mov
loope
(bad)
cs
cmp
cmps
loop
jp
stos
and
dec
or
push
daa
ins
retf
pop
add
push
jge
aad
movs
push
sub
fst
pushf
add
xor
in
fdivr
jmp
int
in
mov
icebp
(bad)
ins
xchg
cmp
push
add
and
mov
xchg
dec
scas
mov
dec
mov
outs
xchg
in
xchg
mov
into
mov
movs
cmp
sahf
push
jmp
jg
mov
ret
(bad)
xlat
push
cmc
mov
retf
sbb
push
push
cmps
and
leave
add
(bad)
mov
cmps
fiadd
in
idiv
adc
daa
ins
test
jle
mov
not
test
pop
mov
jne
shl
jne
arpl
xchg
das
mov
retf
(bad)
sti
cmc
cmps
mov
xlat
aaa
aas
movs
into
repz
das
pop
ss
loope
xlat
dec
aam
sub
mov
xchg
enter
add
mov
sbb
ja
lods
xchg
shl
repnz
out
xor
pop
xchg
sub
vphadddq
pop
gs
pop
outs
fist
ins
add
ret
icebp
cmps
(bad)
je
imul
dec
cmp
adc
jl
ret
xor
pop
xchg
cmp
call
dec
aam
sub
lods
call
jmp
enter
popa
add
repnz
sar
add
fist
mov
ds
stos
mov
xchg
add
iret
loop
mov
push
and
cli
repz
jl
cmps
xchg
cmp
in
mov
addr16
or
mov
or
cmp
daa
into
ror
and
lahf
sub
aas
pop
pop
mov
pop
xchg
out
inc
pop
rcr
sub
inc
iret
or
rcl
mov
test
pop
xor
ret
cmps
movs
cmps
ins
fisub
aad
imul
scas
xor
push
pushf
adc
scas
std
dec
sahf
jmp
sar
int
cmps
call
fs
cmc
das
mov
retf
fld
std
shr
push
cld
popa
sbb
aad
xchg
add
lods
cdq
adc
push
jg
cld
xchg
pop
(bad)
jb
jmp
jmp
mov
mov
sbb
or
shr
test
ret
dec
push
xchg
mov
add
in
push
(bad)
je
jmp
out
push
popa
sub
mov
jae
aam
retf
hlt
sub
lea
adc
int
fwait
push
cld
jmp
ja
pop
into
idiv
or
jb
pop
outs
retf
lods
(bad)
in
imul
pop
lahf
fstp
add
push
cs
add
sub
pop
mov
xchg
sar
sub
es
mov
clc
inc
data16
jge
lods
jge
leave
bound
stos
stc
cmps
cmp
mov
pop
lock
fbstp
jb
and
mov
cmc
cmp
fisttp
arpl
outs
in
cmp
test
mov
xchg
xchg
sbb
jg
mov
jno
xchg
xlat
(bad)
out
int
int3
ret
test
sbb
outs
adc
out
and
iret
repz
or
test
push
cdq
xchg
add
addr16
jecxz
or
dec
ds
nop
xchg
add
xchg
das
mov
jecxz
pop
pop
scas
cmp
push
out
std
push
push
push
imul
xchg
stc
mov
stc
aas
jns
imul
aad
push
pop
out
sbb
retf
neg
movs
xchg
mov
inc
rcr
call
test
pop
(bad)
std
cmps
test
nop
dec
xchg
lods
adc
mov
and
pusha
push
cmp
mov
cwde
rol
scas
js
ret
adc
sub
mov
or
mov
sub
cld
add
pushf
adc
(bad)
rol
xchg
lods
cmp
(bad)
popa
xchg
inc
into
pop
adc
icebp
(bad)
retf
fist
dec
scas
lods
xlat
cmp
jmp
add
lock
stc
mov
dec
les
push
(bad)
frstor
int
bound
sub
cli
pop
js
fdiv
inc
int3
dec
jno
sub
mov
movs
dec
cmp
ins
mov
and
(bad)
(bad)
mov
shl
lds
gs
retf
loop
pop
push
cdq
hlt
in
xchg
xchg
dec
fmul
pop
xchg
adc
mov
jge
pop
xor
pop
mov
ss
aaa
repz
mov
push
jl
cmp
fdiv
or
repnz
in
cdq
lods
sbb
pop
test
xchg
popf
ja
push
fsub
and
xchg
in
dec
mov
fbstp
nop
pop
leave
inc
inc
pop
cmp
int3
rcpps
loop
push
nop
pop
jae
das
mov
les
sub
xchg
adc
imul
fmul
sub
push
aaa
fmul
imul
adc
pushf
idiv
adc
mov
cmp
and
into
int3
out
test
ret
hlt
test
mov
jl
add
scas
jno
pop
xchg
rcr
dec
sbb
sahf
mov
xchg
imul
aaa
xlat
mov
inc
jl
and
and
jnp
fs
test
test
imul
(bad)
cmp
jecxz
movs
outs
pop
call
or
stos
dec
push
cs
mov
dec
mov
mov
imul
outs
add
adc
jno
jne
or
enter
je
int3
mov
xchg
idiv
lods
inc
dec
xchg
mov
jns
add
sub
call
outs
mov
xor
dec
push
inc
out
jne
jecxz
adc
fsubr
cli
pop
std
and
cmps
ja
xchg
retf
mov
loop
sbb
jae
retf
cmps
xor
sbb
mov
test
push
adc
adc
lds
lods
clc
js
jne
mov
sbb
sar
pushaw
mov
sti
fisubr
(bad)
fstp
and
aaa
iret
sbb
xchg
mov
repnz
pop
(bad)
(bad)
lahf
cmp
dec
push
xor
popf
sub
xchg
inc
and
out
stos
push
fld
cdq
inc
pop
mov
or
xchg
sbb
xchg
loope
pop
out
xor
add
push
mov
std
into
cmp
mov
jns
(bad)
daa
fmul
inc
xchg
cmps
pop
add
jp
push
imul
in
rcr
(bad)
push
into
sbb
jp
and
push
jl
jns
xchg
cmc
mov
jne
cwde
ret
mov
mov
mov
daa
es
popf
int3
push
mov
pop
dec
ss
pop
lds
lods
jmp
adc
dec
out
pop
mov
out
or
test
inc
mov
mov
cmp
push
adc
and
push
xlat
mov
popf
sti
push
out
dec
push
aas
aaa
test
in
aam
cmps
int
popa
mov
jnp
addr16
mov
add
cmps
repnz
dec
call
xchg
dec
push
ds
sbb
sub
ret
into
jl
add
or
mov
cmp
jbe
mov
jbe
xlat
gs
jecxz
dec
int
nop
int3
jns
xchg
(bad)
(bad)
pop
inc
cmps
and
push
test
add
ds
fsubr
out
out
loope
neg
adc
jle
push
xchg
xchg
fdiv
fisub
movs
xchg
ds
out
(bad)
sbb
push
cwde
lods
test
and
ret
stos
or
popa
xchg
push
xor
arpl
inc
jne
jmp
mov
std
int3
sti
push
pop
dec
or
ret
push
test
sub
(bad)
lar
pop
cwde
xor
pushf
mov
jns
lods
call
fwait
addr16
call
retf
jmp
lods
cmc
mov
xchg
or
pop
dec
dec
xor
sub
jb
and
out
fwait
mov
(bad)
cld
mov
sbb
fnstcw
setns
jne
push
sub
fidiv
in
add
fidiv
fcom
pop
ficomp
sub
sbb
dec
or
loopne
dec
int3
xchg
mov
mov
dec
shl
and
adc
sub
lock
xchg
popa
jle
std
ret
cmp
sub
xor
inc
inc
xlat
inc
out
mov
mov
lea
jbe
fild
imul
sbb
inc
xchg
sub
push
loope
pop
fs
ja
fcomp
mov
mov
(bad)
fidivr
cmps
and
adc
mov
shr
loope
xchg
je
in
ins
push
fisttp
clc
pusha
or
ja
jmp
imul
(bad)
out
out
lods
clc
jl
movsx
jns
jl
add
bnd
pusha
jno
mov
mov
mov
out
fs
mov
inc
stos
sbb
inc
jmp
pop
icebp
outs
and
sub
retf
dec
call
jnp
xchg
xor
or
cmp
nop
gs
dec
in
pop
add
test
push
sbb
aam
inc
mov
fstp
add
int
or
mov
mul
jmp
cmp
dec
sub
or
mov
xor
fcmovb
arpl
pop
mov
in
outs
ja
outs
and
mov
jnp
movs
into
mov
in
inc
sbb
push
test
pop
aaa
int3
sbb
out
sub
retf
sub
xor
mov
out
push
dec
pop
and
mov
lds
jb
mov
call
idiv
lods
mov
cli
jmp
les
and
xor
ins
pop
jb
push
and
stos
out
loop
pop
addr16
dec
ins
mov
dec
fist
imul
xchg
xchg
pop
jp
fucomi
pop
fcom
dec
(bad)
addr16
mov
rcr
cs
inc
pop
jno
bound
cmps
aaa
rol
clc
lahf
mov
pushf
inc
popf
jbe
lods
iret
push
sahf
ja
enter
mov
or
packuswb
test
dec
cmc
xchg
fild
inc
mov
(bad)
dec
xchg
push
loop
adc
xor
das
test
rcr
call
xor
inc
adc
xor
movs
inc
dec
push
jge
fidiv
enter
ficomp
sub
adc
add
out
outs
xchg
add
cli
xor
dec
xchg
and
movs
aad
xchg
xor
mov
daa
(bad)
mov
mov
es
sub
xchg
icebp
fisttp
sub
sbb
push
(bad)
mov
xchg
or
jle
arpl
push
fidivr
sbb
(bad)
call
aaa
test
in
stos
push
cli
sub
sar
stc
mov
push
push
and
pushf
jmp
and
pushf
inc
neg
outs
xor
mov
xchg
push
(bad)
repz
jecxz
push
in
scas
addr16
popa
mov
push
dec
call
or
push
xchg
inc
mov
aam
sub
add
or
jb
fs
stos
xchg
out
mov
mov
sub
pop
int3
push
dec
retf
mov
mov
push
add
js
and
(bad)
jge
mov
jo
sub
gs
lods
jbe
push
sub
mov
dec
addr16
or
int
lods
xchg
sbb
dec
jns
push
pop
xchg
xor
sbb
pop
push
addr16
(bad)
mov
stos
pop
clc
cmp
add
cdq
add
test
aam
jae
or
pop
mov
sbb
cld
jnp
jecxz
jmp
into
cmps
sbb
bound
xchg
add
mov
in
pushf
push
outs
push
idiv
jecxz
adc
dec
pop
cmp
pop
push
test
(bad)
xchg
adc
nop
mov
cs
in
inc
out
ja
cmp
fcom
dec
jne
loopne
ins
leave
test
mov
mov
or
popf
int
out
outs
(bad)
lock
ss
ret
sbb
dec
aas
or
in
ss
int3
fcomp
out
inc
fisttp
push
enter
adc
outs
repnz
sub
cmp
pop
jge
popa
add
adc
cmps
iret
jmp
or
mov
dec
mov
(bad)
xchg
cld
cmp
xchg
mov
lds
out
pushf
pusha
in
xchg
adc
jecxz
inc
jae
inc
or
lds
push
push
jne
fcomi
(bad)
rol
mov
out
in
stos
div
fmul
fdivr
sub
mov
ins
out
sar
xchg
dec
push
pushf
mov
gs
mov
ins
push
or
cmp
mov
retf
sbb
addr16
jg
xor
mov
pop
pop
dec
xchg
pop
lods
pop
xor
and
repz
cmp
popa
aas
pushf
(bad)
xchg
sbb
jle
fst
inc
pop
leave
aaa
mov
add
out
mov
call
mov
push
pop
or
sbb
pop
aad
add
lods
dec
neg
repnz
mov
sub
ffreep
jecxz
aad
(bad)
lods
add
cmp
out
lods
mov
(bad)
pop
pop
and
daa
ret
mov
and
mov
mov
imul
das
push
sbb
xor
xor
ins
in
xor
push
gs
aad
test
pushf
jl
jae
pop
int
clc
mov
cmp
in
not
xor
lods
fcom
pop
jmp
ds
jb
pop
call
fcomp
cld
jecxz
pop
pop
adc
jg
sbb
xor
push
xor
aaa
cmp
stc
push
scas
dec
ds
aas
ret
pop
imul
es
ss
xor
ror
pop
push
popf
xchg
pop
push
dec
jbe
push
dec
inc
mov
and
daa
dec
fwait
and
ins
in
jl
fs
sahf
xchg
movs
enter
in
call
aaa
sub
ja
push
and
daa
pop
outs
leave
add
retf
cmp
ins
mov
adc
push
in
movntq
out
push
or
jl
inc
imul
pop
push
into
ret
jno
inc
mov
cld
cmp
pop
inc
adc
or
lods
ret
fwait
dec
mov
mov
dec
mov
xlat
or
push
dec
aas
dec
xor
inc
pop
dec
jl
test
sar
jnp
ds
inc
sbb
cmps
xchg
sbb
mov
sbb
std
sub
sub
outs
fadd
cs
push
cld
(bad)
mov
ds
cdq
lods
retf
dec
sub
test
std
out
scas
es
push
xchg
scas
push
adc
xchg
add
ins
pop
into
mov
ror
fs
(bad)
xor
jnp
daa
push
xlat
xor
inc
pop
ins
sub
lea
sti
int
cmp
pop
mov
out
jg
es
pop
cwde
mov
cmps
jg
int3
push
cmp
js
xor
scas
pushf
cmp
iret
cld
dec
repz
sbb
imul
mov
jb
fdivr
inc
lods
ret
dec
xor
mov
retf
in
mov
pop
stos
add
sbb
mov
xlat
fdivr
das
stos
jg
jno
addr16
sahf
in
pop
xchg
mov
out
xor
in
fiadd
add
in
sti
int3
sbb
mov
arpl
pop
sbb
fadd
cmps
pop
xor
scas
adc
call
jae
sub
and
dec
add
inc
inc
sar
mov
test
mov
push
mov
pusha
mov
ror
xor
add
add
mov
xlat
rol
inc
leave
sbb
fst
bound
pop
mov
cmp
pop
clc
xchg
loope
call
fadd
out
jmp
cmp
jno
xlat
aam
jns
mov
stos
pop
mov
ficom
cmp
xchg
mov
adc
adc
cld
paddq
movs
pop
pop
xor
and
lea
add
mul
or
pop
repnz
dec
loopne
call
loope
mov
stos
mov
cmp
test
retf
jbe
lods
push
ffree
and
movs
shl
cmp
sahf
js
mov
aaa
repz
inc
hlt
daa
sub
retf
mov
test
bound
lea
and
lods
cmp
and
cwde
(bad)
aaa
xchg
adc
jmp
cld
and
pop
(bad)
mov
fisub
addr16
test
cmps
aam
imul
sbb
dec
out
pop
out
ret
xor
psubq
int3
push
add
fsubr
pop
out
and
adc
sti
sbb
pop
hlt
jbe
cmp
sub
xchg
dec
daa
scas
or
jno
aad
je
fnstsw
add
or
call
cmps
outs
push
jl
pop
cmc
adc
cs
jmp
cdq
push
fdiv
or
retf
mov
aad
test
push
pop
xchg
rep
xlat
aam
cmp
ficomp
jbe
inc
std
mov
movs
outs
aaa
cmp
outs
fimul
xchg
push
dec
mov
cwde
loop
test
ins
es
or
add
addr16
outs
in
and
push
jp
cmp
lock
les
mov
mov
popa
xchg
aad
push
add
jp
ret
in
mov
test
pop
out
jne
pop
push
sub
leave
or
sub
es
loope
or
pop
pop
aaa
adc
outs
cmp
sbb
das
repz
dec
int3
std
push
adc
push
fadd
iret
sub
pop
(bad)
push
arpl
mov
clc
lahf
sbb
rcl
in
cmp
stc
lea
cs
push
jno
push
sbb
fistp
jno
add
cmc
idiv
leave
mov
sbb
adc
dec
push
cwde
and
fwait
(bad)
adc
scas
dec
(bad)
cdq
dec
lock
add
rcl
xor
fstp
repz
inc
out
popf
and
jmp
fcomi
(bad)
lods
xchg
mov
fucomip
and
cdq
hlt
out
(bad)
into
jge
cmc
dec
ins
arpl
dec
pop
aam
inc
lds
cmc
mov
cmp
jl
dec
push
sahf
stc
dec
jno
mov
(bad)
push
mov
iret
xchg
ficom
out
(bad)
into
add
mov
mov
sbb
imul
inc
out
popa
dec
push
cld
adc
dec
jns
in
adc
int3
dec
xchg
push
shr
or
les
scas
xchg
icebp
mov
not
and
out
push
stos
test
test
loopne
mov
pop
enter
(bad)
cld
into
adc
pop
je
sub
adc
ja
mov
loop
or
mov
gs
or
cmp
and
outs
(bad)
aad
(bad)
mov
add
(bad)
mov
push
adc
ret
stos
popa
push
les
pop
movs
add
in
mov
sub
xchg
xchg
mov
mov
lock
mov
adc
pop
cld
bound
test
dec
or
push
retf
mov
xchg
pop
xor
mov
jns
aaa
push
ins
mov
scas
lds
inc
xchg
aas
mov
cmp
mov
dec
(bad)
jbe
out
sbb
sub
sub
pushf
or
daa
push
cmp
ror
sub
mov
xchg
mov
cmp
xchg
dec
xchg
(bad)
mov
mov
pop
cld
dec
ins
in
test
sbb
adc
outs
retf
rcr
(bad)
dec
les
dec
ror
mov
jb
gs
inc
ja
in
xor
aam
push
pop
mov
xor
jns
cmp
lods
mov
sbb
xchg
inc
retf
xchg
sub
imul
jns
xchg
cmps
sub
push
aam
push
std
xor
imul
sub
pushf
ret
retf
mov
cmp
aas
dec
jmp
sub
mov
inc
push
out
aas
jns
jl
push
add
mov
bound
fistp
mov
je
or
aam
xor
in
jno
push
jg
mov
jbe
push
(bad)
push
mov
(bad)
pop
xlat
adc
iret
ret
(bad)
not
dec
je
(bad)
push
sbb
daa
add
outs
es
test
cdq
dec
adc
aaa
xchg
xchg
out
sub
dec
fbld
jg
sub
mov
not
push
aaa
test
jbe
jecxz
ret
cmpps
dec
dec
sbb
sbb
add
mov
lods
cwde
and
pop
mov
sbb
sbb
fs
inc
test
add
mov
xchg
mov
mov
xchg
adc
les
sbb
pop
pop
cmp
mov
(bad)
aas
inc
fwait
sub
xor
mov
(bad)
xor
jmp
dec
mov
cli
pop
lea
mov
icebp
mov
mov
aas
iret
sub
cmc
es
mov
push
add
in
nop
mov
(bad)
ds
test
div
inc
dec
and
out
xchg
in
cld
adc
fidivr
lea
imul
lods
int3
cli
lods
pop
stos
outs
jnp
aas
dec
ss
call
into
arpl
ja
fs
mov
inc
sti
jnp
pop
inc
call
test
dec
mov
inc
cwde
pushf
cmp
ret
daa
xor
and
jns
jg
rcr
mov
add
inc
pushf
lds
(bad)
fcom
fisttp
jnp
aas
fnsave
fld
push
xor
lods
dec
xchg
cmp
cmp
mov
xchg
sub
out
in
pop
sbb
stc
ss
int3
jecxz
xchg
add
ret
adc
sahf
mov
dec
imul
mov
pusha
js
cmps
and
mov
mov
in
fwait
pop
clc
pop
inc
ja
and
dec
pop
sub
ror
lods
mov
inc
dec
mov
ins
cmp
adc
cmps
lods
sub
mov
icebp
fadd
jl
push
xchg
mov
push
test
adc
push
push
xlat
(bad)
mov
imul
in
xor
push
or
out
push
aam
pop
inc
sbb
aad
ss
test
shr
cmp
jnp
repz
das
je
lods
inc
mov
mov
mov
pop
jl
mov
sub
ins
sbb
push
(bad)
imul
mov
lods
imul
ret
sti
cld
pop
pop
jbe
scas
sbb
mov
push
(bad)
(bad)
lahf
adc
popf
cmps
mov
or
out
sub
nop
jl
sti
mov
and
pop
inc
push
lds
xchg
mov
sbb
dec
dec
xor
gs
into
mov
hlt
sbb
das
es
ret
(bad)
js
or
inc
xchg
jb
adc
mov
dec
rcl
pop
fs
lds
es
pushf
pop
inc
sub
cmp
mov
cmp
xchg
cmp
or
aaa
gs
sbb
test
mov
and
dec
jo
push
add
fs
cdq
shl
cmp
xor
sub
mov
scas
inc
or
pop
neg
xchg
into
scas
jbe
xor
xchg
pop
aad
pop
movs
xchg
jb
or
add
outs
mov
out
and
arpl
dec
ss
push
or
and
cmps
addr16
push
fnstenv
fnsave
mov
mov
sbb
pushf
jle
mov
cmp
call
arpl
movs
es
adc
push
push
cmps
sub
xchg
adc
call
jb
mov
lock
xor
outs
xchg
xor
mov
xchg
xchg
fnstcw
arpl
add
cmp
pop
call
int
sbb
in
out
dec
cwde
(bad)
test
iret
jo
dec
pushf
out
lock
ja
pop
mov
cmp
inc
pop
mov
cmps
enter
js
ds
cli
xchg
inc
fcomip
mov
xchg
jge
fsubr
cmp
cs
repz
fst
xchg
in
faddp
pop
add
adc
xchg
outs
sub
jg
pop
mov
into
fsubr
test
push
xchg
or
fnstsw
shr
mov
jnp
jg
push
pop
xlat
and
jge
loope
test
(bad)
push
in
xchg
mov
mov
add
data16
fldcw
cmp
mov
inc
fst
js
mov
and
ins
js
xchg
je
dec
leave
pushf
out
sahf
sub
das
cmp
or
in
jg
jbe
in
pop
sti
adc
arpl
cmp
mov
jmp
ja
inc
pop
xrelease
mov
(bad)
push
stos
std
scas
fs
xchg
cmps
in
frstor
xchg
jo
sbb
xchg
pop
xchg
mov
loop
mov
or
adc
leave
jecxz
xchg
test
jne
mov
test
and
lods
sti
pop
dec
push
push
mov
cmp
and
inc
sahf
fbld
add
jg
scas
cld
jl
dec
hlt
pop
rcr
loopne
mov
shl
cmps
cli
xchg
push
dec
dec
and
pop
cmp
lock
push
loope
in
jl
mov
pop
outs
push
movs
inc
call
addr16
in
aaa
out
or
jle
inc
mov
jno
out
jecxz
repnz
test
inc
cli
xchg
sub
sub
jmp
mov
(bad)
mov
retf
ret
mov
jmp
push
jbe
aad
gs
dec
cld
inc
xor
xchg
xchg
popw
ds
stos
(bad)
xchg
jle
mov
push
stos
push
ret
push
adc
loop
dec
cdq
in
dec
imul
cmp
sbb
inc
mov
mov
(bad)
ins
cmp
mov
mov
cmps
popa
movs
xchg
imul
dec
dec
pop
or
loopne
bound
sbb
arpl
test
or
(bad)
mov
fadd
(bad)
into
mov
loope
gs
inc
sbb
push
cmc
push
test
push
jle
stos
addr16
inc
push
or
lods
loope
pop
pop
sbb
lea
xchg
outs
xor
retf
push
mov
es
add
xchg
adc
lea
aam
adc
test
shr
pop
inc
test
dec
pop
jecxz
ins
pusha
fild
push
test
jg
jg
or
in
jmp
scas
cmp
popa
retf
add
xchg
aas
cmp
xor
ret
pop
push
jbe
ja
jmp
call
js
dec
pushf
out
out
pop
mov
ret
jecxz
sbb
in
jge
fcom
repnz
ins
ja
mov
sub
jecxz
xchg
call
cmc
pushf
mov
sbb
test
inc
pop
mov
mov
(bad)
movs
sub
aas
push
mov
pushf
cmp
icebp
fnop
(bad)
call
test
pop
rol
icebp
mov
outs
daa
jl
dec
xchg
xor
pop
lods
cld
xchg
fistp
xchg
mov
mov
movaps
mov
pinsrw
imul
int3
scas
(bad)
or
fistp
int3
xchg
push
aad
cmp
int
jp
std
or
jl
push
xchg
mov
xor
outs
push
push
push
mov
int
aas
ret
sbb
push
(bad)
xor
mov
cld
cmps
add
xor
cdq
fsub
std
jmp
pop
dec
xlat
jbe
ja
outs
je
jns
jae
and
in
sti
ret
and
cmp
in
es
cs
bound
pop
(bad)
nop
call
adc
rcl
xor
les
and
jno
dec
ss
cmp
hlt
xchg
and
out
jl
adc
(bad)
pop
fdivr
aaa
jbe
mov
jae
dec
gs
cli
scas
push
mov
retf
in
mov
cmp
mov
nop
call
(bad)
push
add
push
retf
sbb
mov
xchg
test
mov
xchg
daa
mov
mov
(bad)
(bad)
imul
icebp
push
and
xchg
sbb
loop
xchg
xchg
mov
dec
cmp
mov
mov
retf
(bad)
lock
call
clc
ret
sub
pop
call
fstp
mov
leave
into
in
mov
hlt
je
sub
jmp
loop
xor
test
pop
or
jo
icebp
sahf
cwde
into
mov
push
leave
add
test
pop
or
imul
adc
psubusw
(bad)
cmps
and
and
mov
mul
arpl
aam
out
xor
loope
js
cs
scas
push
and
mov
push
dec
jns
adc
sub
call
push
popf
pop
mov
ins
mov
xlat
fs
pop
das
dec
and
xor
xor
push
fmul
push
popa
add
jne
xchg
mov
adc
sub
ss
test
pop
jmp
add
or
adc
fwait
cs
push
xor
jnp
jge
imul
cmc
mov
push
mov
ret
hlt
(bad)
mov
xchg
test
mov
sub
cmc
iret
arpl
imul
add
sahf
adc
inc
add
ins
adc
sbb
popf
jge
lods
fs
or
scas
mov
je
mov
(bad)
or
out
shr
les
stos
movs
mov
push
mov
aaa
xor
aaa
in
pop
mov
cmp
or
arpl
scas
in
dec
sub
pop
or
cmps
shr
sahf
add
adc
int3
mov
pop
repz
xchg
int
(bad)
rcl
add
sub
dec
(bad)
lea
arpl
aam
in
mov
aaa
ret
add
pop
nop
cmp
shl
(bad)
xchg
sub
xor
inc
push
mov
push
cmp
xor
movs
call
cmc
(bad)
and
or
sub
sbb
jl
mov
jmp
add
adc
jmp
sbb
outs
inc
dec
ins
xchg
push
int3
iret
bound
lock
cli
sbb
dec
push
push
lods
addr16
xor
and
adc
pop
sub
mov
(bad)
mov
call
call
xchg
cmp
xchg
jbe
data16
(bad)
fisubr
cmp
pushf
sub
mov
jae
sub
ins
pop
ins
xchg
push
pop
out
in
mov
shl
(bad)
repnz
aad
addr16
scas
or
mov
pop
jne
pop
xchg
scas
cmp
loope
cmp
sub
jbe
and
mov
xor
(bad)
repz
test
lea
or
loope
mov
push
fdivp
dec
cmps
outs
jne
and
dec
dec
mov
in
xlat
mov
push
cli
in
sub
loope
push
fisub
inc
inc
lds
push
and
mov
lods
push
pop
or
out
dec
aaa
dec
xor
add
mov
xchg
cmc
xlat
mov
pop
mov
add
jo
int3
and
xor
iret
add
mov
fisttp
test
cmp
xor
js
xchg
jmp
jp
jns
lods
shl
cmp
into
mov
aad
mov
mov
aas
mov
inc
pop
scas
mov
cmps
fstp
pusha
and
xor
xor
pop
jecxz
es
mov
into
std
imul
pop
or
aaa
mov
push
leave
fs
sub
pop
sub
(bad)
mov
add
in
adc
pop
adc
pop
fist
loope
pop
inc
pop
jg
in
and
dec
mov
cld
dec
dec
(bad)
mov
inc
sub
push
jb
pusha
inc
nop
pop
pop
cmps
mov
lds
inc
pop
add
sti
mov
loopne
jae
lea
fnstsw
loop
jecxz
dec
data16
ja
jge
cmp
nop
sub
jg
imul
jmp
aaa
adc
jg
sub
xchg
xchg
inc
stos
popa
jns
mov
sbb
ins
jp
dec
dec
pop
cmp
sub
(bad)
mov
idiv
test
pushf
mov
mov
popf
cwde
dec
lock
adc
pop
xchg
fstp
int3
and
push
je
sub
xor
imul
cmp
out
jecxz
imul
adc
outs
cmps
dec
mov
sub
repz
addr16
mov
and
mov
jne
pop
int3
cmc
or
loopne
adc
mov
add
add
call
jbe
lods
xor
sbb
stos
jl
add
leave
es
mov
ficom
loop
(bad)
fidiv
pop
dec
or
fisubr
ins
mov
mov
push
xchg
dec
test
ror
sbb
inc
outs
push
addr16
sbb
aaa
sbb
(bad)
and
push
sub
xor
imul
lods
sbb
jl
xchg
push
or
scas
in
call
loopne
push
cmps
push
and
arpl
(bad)
sub
cmp
call
ins
push
imul
lods
add
pop
in
push
into
or
movs
bndstx
mov
cs
jmp
pop
(bad)
imul
ds
hlt
imul
fcom
sbb
hlt
inc
mov
push
dec
add
out
inc
dec
push
arpl
popf
sub
popf
pop
loopne
(bad)
pop
int3
pop
xchg
movs
or
jmp
mov
mov
xchg
rcl
pop
jl
pop
(bad)
dec
stos
and
pushaw
jns
sub
fcom
loop
pop
sahf
retf
pop
test
daa
sbb
cmps
das
dec
icebp
pop
and
(bad)
sar
and
pop
xchg
xor
mov
pop
add
scas
popf
and
or
add
or
out
dec
stos
and
push
loopne
dec
fnstcw
ss
inc
std
loope
cmp
aam
pop
arpl
outs
jmp
paddb
dec
outs
jo
jg
int3
pop
pop
add
clc
shr
retf
fstp
mov
or
cdq
xchg
dec
ins
lods
arpl
in
xchg
gs
leave
adc
(bad)
jmp
lods
(bad)
and
xchg
pop
lods
jno
mov
inc
pop
xlat
je
jmp
les
jp
ja
cli
mov
xor
adc
push
mov
cmp
jbe
sub
mov
pop
loopne
lods
lds
cmps
mov
mov
dec
fwait
push
xor
dec
pop
dec
pop
jmp
jmp
test
cdq
cmps
xchg
push
cs
pop
fld
push
cmp
add
pop
mov
xlat
rcr
ja
xor
and
mov
dec
loope
ins
mov
enter
rcr
mov
jns
fnsave
ja
dec
push
cmp
xchg
mov
or
(bad)
scas
in
out
and
xor
int3
data16
adc
gs
ret
lods
(bad)
std
js
push
fld
ja
shl
sti
xor
push
jge
inc
xchg
test
xor
outs
inc
jb
push
ror
jo
mov
sahf
shl
pusha
and
ins
dec
fwait
sbb
jae
push
pop
out
sub
jmp
cmp
cmps
pop
xor
cmp
xor
rol
or
lods
sub
push
inc
ss
xchg
scas
pop
add
es
cdq
sub
adc
push
js
daa
mov
mov
repz
icebp
fcom
push
sub
ins
or
sbb
fcomi
and
enter
mov
sar
and
mov
jo
test
(bad)
std
inc
inc
dec
jecxz
jmp
inc
aaa
adc
and
fcomip
and
mov
inc
mov
jmp
sub
pop
div
mov
inc
mov
cmovbe
cld
imul
test
mov
mov
mov
sub
ret
pop
mov
adc
cs
or
cwde
pop
in
cmp
repz
mov
aam
mov
loopne
fcom
inc
xchg
popf
into
int
in
mov
pop
aas
pop
pop
outs
dec
fisubr
jmp
ret
retf
mov
lods
cdq
sub
sbb
pop
jbe
mov
stos
or
cmps
lea
(bad)
pusha
xchg
ins
jl
add
mov
jmp
into
call
xchg
ds
(bad)
int3
mov
pop
cmp
jno
(bad)
dec
and
aas
arpl
jle
(bad)
fucom
inc
loop
xor
inc
sub
sbb
pusha
push
sub
adc
ins
push
or
pushf
out
out
aaa
cld
pop
mov
adc
dec
arpl
sbb
pop
pushf
add
aad
ret
add
pop
pop
into
xchg
bswap
fisub
sbb
add
ins
xchg
xlat
dec
sbb
imul
out
push
mov
sbb
mov
sbb
pop
das
sbb
pop
mov
fstp
push
inc
ja
jbe
ror
lahf
lds
add
stc
cmps
and
pushf
fld
inc
and
iret
push
push
mov
daa
pop
or
popa
je
dec
push
sub
mov
mov
scas
ror
fiadd
sbb
stos
inc
pushf
ss
das
mov
(bad)
xlat
or
out
or
cmc
or
inc
cmp
jae
pop
mov
inc
fisttp
aaa
in
mov
or
cs
aas
arpl
data16
popf
jmp
lods
jl
jns
sub
(bad)
std
(bad)
out
cmp
adc
clc
pop
pushf
and
(bad)
mov
int
js
mov
sbb
inc
add
xor
fild
jg
gs
fild
mov
xchg
cld
rol
adc
jmp
ja
mov
std
retf
sub
pop
mov
movs
repz
mov
inc
push
pop
push
fs
mov
outs
mov
pushf
or
lods
loope
aad
mov
fs
jno
inc
aad
mov
xor
in
mov
icebp
in
je
jmp
dec
push
addr16
mov
jl
repnz
jge
sub
mov
cmp
pop
std
pop
popf
pop
cld
dec
or
cmp
mov
lods
clc
lods
aaa
push
add
outs
popf
sbb
mov
sbb
rcr
xor
cld
dec
and
cmps
daa
stos
push
stos
push
xor
ss
jns
hlt
mov
dec
mov
add
cld
imul
jg
ret
int
lods
ret
sbb
lods
gs
xor
rcr
popf
aas
add
rcl
inc
jle
add
rcl
(bad)
fistp
aam
pop
shr
out
lea
js
div
mov
xchg
xor
ja
jp
imul
dec
and
xchg
mov
pop
lods
out
les
ins
(bad)
dec
mov
repnz
rol
mov
pmuludq
push
sbb
in
cmps
jle
outs
fs
jae
leave
xor
mov
(bad)
mov
lods
xchg
cmp
in
mov
cmp
sbb
jle
pop
not
sar
or
out
in
xor
mov
inc
adc
test
rcr
fs
xchg
(bad)
call
movs
or
mov
and
mov
iret
sahf
call
imul
pop
jmp
mov
dec
and
push
mov
std
xor
cld
mov
pop
jnp
ret
jae
xor
int
pop
inc
pop
dec
add
xchg
dec
mov
(bad)
lods
sbb
stc
rcr
dec
dec
mov
cmps
dec
sbb
pop
scas
mov
or
sub
fadd
xchg
idiv
lds
jns
shl
ins
jo
xchg
or
js
mov
pop
test
aaa
repz
xchg
test
fsubr
std
xor
mov
repnz
ret
shl
adc
enter
mov
pop
popf
dec
push
push
and
movs
mov
inc
shl
ins
mov
inc
and
ficom
or
sbb
push
dec
inc
sbb
inc
int3
leave
pop
lods
addr16
and
hlt
sbb
sbb
(bad)
pop
xor
lods
inc
cmp
pop
cmp
stc
cld
(bad)
std
fdiv
in
shl
inc
jbe
(bad)
call
sahf
or
mov
mov
add
fdivr
out
mov
push
xor
or
sti
cld
std
test
int3
inc
inc
aam
pop
dec
lahf
(bad)
enter
(bad)
lods
add
in
xchg
sar
das
mov
hlt
loop
cld
cmps
sub
jl
inc
cwde
add
sub
aad
pop
int3
neg
pop
out
aas
js
scas
dec
lods
or
inc
test
and
ss
jno
push
mov
ds
rol
cwde
movs
sbb
sub
in
xchg
hlt
shr
ret
call
inc
xchg
ja
shl
pop
daa
xor
mov
mov
inc
xchg
stc
ins
pop
imul
mov
pop
lods
(bad)
mov
fnsave
cdq
nop
and
call
dec
in
and
adc
les
xor
out
int
jmp
icebp
mov
cmp
dec
mov
les
aad
jnp
push
or
leave
(bad)
cld
push
cld
mov
cli
adc
aas
jg
or
rol
(bad)
sbb
repnz
sub
adc
mov
jmp
jmp
push
out
add
add
adc
cmps
inc
and
fsub
adc
fwait
jmp
or
inc
cld
outs
mov
add
fbstp
adc
xchg
pop
sub
aam
mov
inc
jl
int3
adc
dec
mul
in
inc
mov
add
push
std
and
dec
dec
jns
out
pop
pop
scas
in
jbe
and
stos
mov
and
add
xchg
into
stos
aad
cdq
jle
fsub
ret
fst
aaa
push
fsubr
addr16
mov
lods
out
lea
into
scas
cmps
sbb
or
cmp
inc
cdq
xlat
mov
ds
stos
das
push
push
cmp
sbb
or
pop
stos
packssdw
(bad)
mov
push
mov
push
dec
jmp
jo
dec
adc
and
push
sub
xchg
add
pop
fsubrp
in
cmps
mov
out
pop
mov
or
into
pop
nop
loope
cmp
mov
push
fisub
pop
pop
dec
mov
in
sti
call
movs
jle
mov
mov
popf
sti
call
add
jg
cwde
pop
mov
mov
xchg
cdq
push
mov
loop
mov
sbb
aaa
pusha
and
cmps
imul
dec
fsub
xchg
dec
(bad)
pop
mov
lea
add
mov
jmp
push
jge
xchg
pushf
fadd
ds
xchg
sub
es
enter
mov
cmp
(bad)
sub
inc
sub
data16
fiadd
ins
jmp
pop
lea
scas
sub
xor
sbb
and
cmps
jecxz
dec
fstp
in
aad
push
arpl
stc
movs
fild
test
sti
lods
pop
or
outs
adc
jmp
int
add
mov
cmps
mov
push
mov
popf
mov
mov
xor
push
hlt
daa
fnstcw
mov
arpl
adc
aad
mov
inc
enter
lods
je
imul
mov
fidiv
cmp
or
dec
add
popf
inc
jbe
leave
je
sbb
retf
jle
mul
xor
ret
ins
mov
gs
inc
(bad)
gs
add
sbb
sar
cmp
dec
xchg
aad
in
xor
inc
inc
inc
or
iret
(bad)
pop
or
sbb
fldenv
popa
test
mov
add
push
je
push
hlt
mov
call
jle
test
pop
inc
and
and
sub
inc
cdq
adc
fst
push
enter
inc
cmp
jbe
sbb
xchg
jbe
inc
push
adc
xchg
rol
enter
and
fmul
sbb
dec
lods
pop
lods
jge
add
push
xor
mov
(bad)
imul
push
xchg
dec
mov
lea
jle
das
sbb
aaa
jne
in
out
movs
fs
mov
mov
dec
idiv
lods
es
mov
push
or
push
aas
push
imul
in
cmps
xor
jmp
test
and
pop
pminsw
repnz
mov
(bad)
fsub
sub
je
scas
fstp
stos
jge
cmp
cld
iret
int3
rcl
dec
scas
addr16
mov
fs
sbb
or
sub
push
xchg
aam
cmp
sar
dec
inc
sub
sub
xor
mov
dec
cmp
sahf
addr16
push
or
xchg
inc
jb
ja
rep
mov
ja
dec
push
or
mov
addr16
ret
popf
daa
ss
out
fs
pop
mov
xchg
or
pop
idiv
push
ror
dec
jb
stos
ror
nop
int3
ret
out
pop
adc
adc
dec
and
adc
sbb
jp
cdq
push
scas
jl
daa
dec
popa
scas
out
(bad)
mov
je
mov
cmp
lea
loopne
lods
fistp
cld
imul
xchg
aaa
mov
outs
fwait
add
mov
xchg
or
rcl
(bad)
mov
and
mov
mov
fst
sbb
sub
repz
rcl
movs
jo
xchg
lods
mov
xchg
or
enter
xlat
mov
test
pop
pop
mov
in
popf
scas
mov
mov
mov
add
into
pushf
xchg
mov
mov
popf
xchg
push
ins
movups
(bad)
sti
jmp
retf
fnstsw
into
fs
outs
push
pop
push
pop
add
aaa
in
pop
loopne
pop
or
out
or
sbb
pop
xchg
out
aam
int
iret
cs
dec
out
test
sub
cmp
(bad)
cmp
fwait
in
xchg
stc
xor
sbb
and
jl
pop
inc
inc
movs
shr
stos
jno
push
ret
xchg
popf
les
or
jl
adc
sbb
ror
push
xchg
enter
mov
push
and
ins
push
mov
lahf
mov
int3
push
pop
and
ins
push
xor
add
sahf
and
cmp
xchg
push
ficom
aam
(bad)
mov
mov
ds
fcmove
test
mov
mov
xor
inc
pop
inc
inc
repz
and
xlat
and
imul
into
jle
sbb
pop
cmp
sub
lods
jae
fs
movs
test
add
mov
cmp
pushf
sub
gs
jge
fisub
mov
in
xchg
sub
lea
inc
xor
push
jns
call
sub
inc
xchg
shl
loopne
jmp
ins
pop
loop
mov
cmp
jns
push
jge
mov
clc
mov
xor
gs
retf
sub
xor
ja
jbe
add
jmp
pop
add
add
xchg
dec
pop
cwde
jbe
cmps
das
fwait
pop
cmps
lods
dec
adc
jmp
add
push
iret
inc
mov
stos
test
das
inc
out
fdiv
movs
out
or
cs
(bad)
outs
icebp
(bad)
add
pop
scas
(bad)
call
mov
add
jb
out
imul
out
push
nop
pop
and
leave
clc
ins
xchg
jbe
aad
adc
jg
dec
adc
inc
stos
and
test
xchg
icebp
jnp
inc
(bad)
int3
mov
pop
pop
and
(bad)
into
sbb
ret
popfw
mov
ret
std
jp
shr
fsubp
push
pop
fadd
(bad)
mov
ds
sub
addr16
xchg
mov
dec
inc
test
mov
(bad)
or
jno
cld
adc
pop
push
shl
dec
(bad)
jb
push
test
cmp
jg
pushf
je
ja
inc
mov
jbe
out
push
stc
xchg
add
add
add
add
ret
jg
outs
inc
lods
mov
jmp
and
ret
ret
fld
movs
cwde
xlat
dec
aas
into
xchg
(bad)
fwait
pusha
pop
mov
add
arpl
aas
xchg
shl
aas
ins
mov
jmp
push
jb
daa
clc
adc
dec
sub
cdq
ret
cld
pop
cmps
mov
add
(bad)
mov
call
push
iret
sbb
lods
push
shr
mov
or
xor
pop
add
mov
or
jo
jg
movs
cmp
repz
iret
in
sub
and
mov
test
and
jbe
ret
lods
push
mov
push
imul
mov
sbb
ret
dec
std
scas
and
mov
and
add
jo
popf
xchg
push
or
hlt
lahf
ret
dec
sub
mov
aad
jne
mov
(bad)
jmp
shl
imul
cdq
mov
fidivr
arpl
and
(bad)
xor
loopne
int
adc
mov
push
ins
add
push
adc
lock
and
es
or
out
jb
xchg
cmp
arpl
adc
mov
xor
stc
aas
sub
add
add
daa
lea
xchg
dec
push
mul
pop
or
imul
fstp
jno
mov
fsub
sub
rcr
push
lea
sahf
or
and
add
ret
int3
test
sub
and
jmp
lahf
xchg
out
fidivr
cmc
test
fist
adc
add
call
ja
mov
mov
rcl
mov
lahf
sbb
nop
loopne
mov
cmp
mov
fs
test
retf
dec
imul
lock
cmp
inc
stos
jg
stos
pop
and
mov
dec
inc
mov
lods
cmps
in
dec
mov
int3
fcom
cmp
jns
addr16
(bad)
cli
shl
daa
fadd
jns
aas
adc
jge
cld
push
unpckhps
fbstp
lock
sti
mov
in
rcl
jg
add
mov
cmp
xor
jp
jbe
out
xchg
repz
mov
mov
fist
in
or
(bad)
jo
jne
jae
jmp
inc
ds
call
rol
nop
xchg
outs
cmp
xchg
mov
pop
xor
mov
xchg
jge
inc
mov
ds
fadd
sbb
mov
push
dec
sbb
or
push
pop
shl
add
(bad)
repnz
std
fdivr
(bad)
push
adc
xchg
shl
or
mov
out
js
mov
int3
outs
shr
dec
and
rcl
hlt
xchg
call
stos
pop
jmp
stc
(bad)
outs
cmp
int
and
call
fbld
out
adc
(bad)
mov
cld
dec
ficomp
sar
cmp
fadd
scas
or
mov
jno
stc
aas
dec
int3
scas
jle
in
push
sub
push
dec
test
pop
xor
mov
ss
ins
sbb
push
out
jae
adc
test
mov
cmp
int3
xor
pop
or
dec
push
push
ds
jmp
sub
shl
repnz
ret
sbb
cmp
mov
cmp
sahf
lock
sub
sub
sub
inc
test
ins
dec
fs
es
sahf
push
ret
push
movs
push
loop
or
pop
bound
pop
mov
aas
pop
imul
lock
xchg
xor
int
pop
(bad)
push
pop
es
sti
mov
sub
shl
push
loopne
jne
(bad)
popa
stos
fnstenv
out
scas
sub
mov
out
pop
pop
mov
mov
scas
lods
test
sti
push
or
ret
inc
sbb
test
test
stos
call
cwde
pop
xchg
scas
dec
aam
std
inc
dec
adc
mov
mov
xchg
dec
in
pop
(bad)
leave
mov
xor
jl
add
icebp
sbb
sbb
pop
dec
xor
jb
mov
mul
aaa
mov
inc
cwd
test
rcr
push
xchg
aam
movs
in
ror
xor
mov
xor
xor
(bad)
sar
les
iret
loope
les
mov
div
pop
xor
xor
daa
out
jnp
(bad)
into
sbb
mov
jnp
or
outs
add
push
add
mov
mov
sub
repnz
add
dec
sub
call
xchg
pop
jnp
cmp
in
lods
mov
ins
xor
call
out
push
bound
pop
fdivr
adc
sub
sub
sub
or
cli
movs
or
jp
aam
iret
daa
push
dec
das
mov
js
inc
mov
das
xor
push
xchg
int3
inc
dec
imul
int3
pop
cld
cmc
into
xchg
sti
ins
inc
cmp
or
xchg
cld
sub
jo
cli
movs
sub
and
fisttp
mov
or
jl
inc
sbb
inc
pop
ins
xchg
push
or
mov
pop
add
pusha
daa
in
out
scas
movs
inc
(bad)
imul
pop
pop
mov
mov
xchg
inc
inc
leave
hlt
jne
or
fcom
add
jle
sbb
neg
retf
rcl
xor
dec
mov
pop
inc
scas
in
cld
call
cdq
sbb
cmp
(bad)
mul
mov
int3
mov
and
dec
rcr
ret
addr16
test
add
in
(bad)
test
xlat
iret
adc
push
cmp
sbb
xor
dec
hlt
ficomp
sbb
in
fsub
cmc
push
retf
pop
out
mov
in
xor
fld
in
push
or
mov
ret
ficomp
jge
out
das
shl
sbb
movs
mov
dec
imul
jae
xchg
std
pop
bound
outs
int
mov
loopne
out
sbb
xchg
jb
stos
cwde
loope
and
jb
fdivr
push
outs
inc
xlat
nop
inc
out
popf
cmp
add
and
test
aam
or
pop
xchg
(bad)
sub
div
pop
loopne
mov
cmps
rol
or
cmp
mov
fsubr
dec
xchg
in
dec
mov
or
or
mov
lahf
mov
xchg
jge
pushf
rcr
int3
mov
mul
std
pop
fadd
loope
push
int
xchg
icebp
(bad)
(bad)
mov
retf
fisttp
cmps
int
pop
push
xor
push
add
push
jg
jmp
test
jmp
add
in
mov
jge
jg
jl
jne
jbe
inc
test
mov
(bad)
push
out
repnz
xchg
scas
lods
cmp
dec
stos
scas
jae
repz
jge
sbb
xchg
sbb
faddp
sbb
fldcw
in
daa
and
mov
sti
jno
jl
xchg
jg
gs
pop
xlat
xchg
sti
pop
jae
aas
ja
cmp
jmp
ins
sub
cmc
loopne
cmp
clc
push
xchg
mov
push
inc
sbb
aad
ds
je
addr16
pop
add
and
mov
dec
out
pop
int3
(bad)
adc
jg
adc
push
inc
sbb
push
inc
adc
or
mov
shr
add
xchg
std
pop
jle
(bad)
sar
pop
xchg
xor
cmp
out
out
ins
mov
fs
add
cmc
stc
xchg
mov
xor
cdq
mov
pop
dec
outs
std
xchg
pushf
stos
sbb
neg
mov
aad
and
mov
pushf
dec
rcr
nop
dec
sub
sti
cli
retf
inc
fdiv
rcr
inc
mov
mov
add
mov
xchg
mov
in
pop
jmp
lods
imul
mov
xor
xchg
jnp
sbb
mov
aaa
adc
loop
or
push
fsub
mov
adc
dec
les
pop
push
lahf
pushf
adc
xchg
je
cmps
lods
push
leave
rcr
xchg
adc
or
and
add
iret
sbb
pop
cmp
adc
push
inc
mov
scas
data16
retf
jmp
cmp
jg
and
gs
cmp
loop
test
cld
retf
in
icebp
cmc
pop
pop
xchg
jle
es
(bad)
mov
test
pop
or
xchg
clc
sbb
cmps
sub
jl
xchg
repz
mov
xchg
xor
sub
cmp
and
sbb
shr
cli
loope
imul
sbb
sbb
or
pop
imul
mov
aas
(bad)
dec
xchg
xor
cld
sbb
rcl
pop
dec
stc
xchg
enter
imul
lods
mov
int3
popf
out
ja
data16
movs
pop
ret
and
push
push
jb
aaa
adc
inc
fadd
mov
in
shl
fistp
mov
add
jecxz
addr16
xor
fmul
cmp
div
push
push
shl
and
fisttp
jle
aas
xor
xchg
in
mov
repz
outs
int3
out
std
jne
sbb
xor
jl
aaa
jl
push
xor
pusha
jne
es
xlat
(bad)
je
mov
add
and
dec
aas
jp
outs
ret
stc
dec
sbb
xchg
and
jmp
std
dec
mov
popa
lods
xchg
jo
dec
mov
fs
xchg
sbb
sub
mov
sbb
adc
fnstcw
(bad)
int
xchg
sub
ins
movs
jns
iret
test
inc
mov
mov
cld
pop
std
cwde
and
fld
mov
imul
movs
scas
sahf
test
inc
call
xor
nop
push
test
adc
clc
sbb
fdiv
imul
ret
lods
ret
test
inc
out
inc
jecxz
fist
inc
xchg
xchg
inc
in
push
neg
push
xlat
jle
cmps
sbb
scas
arpl
pop
call
popa
(bad)
jmp
lea
ret
retf
xchg
test
add
cmc
sub
mov
(bad)
sbb
dec
test
mov
div
xchg
hlt
mov
push
cmp
jg
movs
pop
xor
test
dec
int3
jle
(bad)
stos
sbb
ret
lea
mov
mov
sbb
xchg
dec
call
lods
mov
fisttp
div
dec
or
retf
dec
cmp
xlat
lea
out
test
dec
and
mov
jne
sbb
push
add
aad
ja
aad
loope
dec
call
out
pop
ds
stc
gs
lahf
adc
outs
fistp
popf
xchg
pushf
pop
popf
in
jns
xor
sbb
inc
mov
and
jge
int3
test
mov
jmp
cwde
arpl
mov
dec
sbb
or
movs
aam
pop
mov
xchg
fistp
lods
mov
stos
loopne
add
shl
imul
cli
(bad)
adc
mov
pop
sahf
pushf
inc
pushf
ret
sbb
pop
je
or
into
fmul
pop
xchg
push
addr16
xlat
stc
(bad)
fmulp
ins
mov
adc
iret
xor
push
fbld
and
popw
sub
pusha
je
add
xchg
xchg
or
daa
fstp
loopne
and
mov
fxam
retf
mov
adc
ror
cwde
jle
aas
sbb
jp
pop
hlt
pmaxsw
inc
dec
mov
push
xor
out
lock
mov
adc
mov
mov
loope
fcomp
cmp
sub
cmps
out
mov
ss
repz
mov
ret
out
enter
push
int
fs
aad
mov
fsub
(bad)
xchg
(bad)
in
xlat
fnstsw
adc
inc
dec
ins
cmp
or
sbb
xchg
adc
in
loop
out
xchg
(bad)
ror
data16
cmp
and
cmp
jl
push
inc
fsub
call
repnz
xchg
xor
retf
test
xchg
sbb
cmp
adc
push
pop
test
out
inc
mov
nop
in
cmp
mov
not
mov
mov
and
sbb
and
bound
mov
inc
sbb
test
push
(bad)
fld
ds
push
clc
mov
ins
jno
inc
scas
mov
xchg
mov
dec
pop
push
push
cwde
lock
pusha
xlat
push
hlt
sbb
loopne
mov
push
retf
push
call
push
mov
sbb
hlt
jnp
jae
ror
mov
je
std
in
test
and
cmp
scas
loopne
pop
lods
push
iret
jb
sub
popw
or
cmps
test
int3
pop
jl
jns
frstor
cmp
repnz
shl
jg
xchg
jp
xchg
scas
and
aad
lds
jno
sub
mov
sub
in
je
rol
inc
sbb
loop
movs
jmp
add
aad
or
test
mov
scas
movs
stos
repnz
adc
or
mov
hlt
cmps
sbb
movs
idiv
aas
scas
daa
outs
xchg
aam
cs
fbstp
scas
movs
iret
fld
cmp
outs
mov
adc
movs
cs
inc
clc
fxch
pop
fnstcw
push
inc
pop
push
dec
adc
jl
mov
cld
xlat
scas
shr
dec
or
inc
mov
sar
inc
sub
js
mov
iret
mov
mov
not
gs
adc
sbb
ins
jae
(bad)
aam
and
inc
mov
scas
inc
xchg
mov
arpl
push
xchg
add
je
mov
xchg
scas
data16
mov
es
add
sub
movs
inc
dec
aaa
ja
cmps
push
and
cmp
data16
stc
or
mov
out
mov
arpl
pop
push
sar
les
mov
into
mov
and
jnp
(bad)
and
movs
or
ins
je
stc
dec
and
gs
shl
pusha
test
addr16
sbb
scas
test
addr16
inc
mov
and
in
scas
mov
adc
mov
push
dec
daa
int3
mov
lahf
(bad)
ss
aaa
movs
xchg
stos
(bad)
push
xchg
jns
adc
cmps
pusha
sbb
ja
or
ds
cmps
sbb
lea
out
jae
inc
or
pushf
xchg
clc
cmp
push
ds
inc
ins
push
test
movs
lea
jns
retf
fist
pop
jmp
adc
das
cwde
rol
inc
add
cmp
adc
dec
sub
pushf
xchg
cmps
xlat
xchg
or
sub
cmps
sbb
in
jae
jecxz
adc
push
enter
es
lock
push
lods
and
add
sub
adc
aam
mov
sbb
int
int
add
daa
addr16
push
mov
mov
or
into
(bad)
mov
nop
test
xchg
sbb
xchg
inc
and
and
std
cdq
dec
daa
das
call
scas
mov
pop
data16
adc
(bad)
or
imul
div
fsubr
fldcw
sbb
push
fwait
shl
dec
push
ror
lods
push
add
shl
cmp
js
in
fs
pop
add
(bad)
adc
sbb
cmp
mov
xchg
xchg
xchg
in
adc
push
pushf
inc
and
ret
cmps
fild
jo
mov
lea
lahf
stc
call
add
ja
(bad)
jno
imul
and
jge
xor
add
mov
mov
xchg
sub
nop
xchg
lahf
or
pusha
addr16
(bad)
shl
cmps
cwde
or
mov
std
xor
dec
jp
test
addr16
mov
pop
push
pop
push
mov
inc
in
pop
or
sub
mov
leave
sub
cmp
or
dec
daa
fwait
cvttps2pi
xchg
out
adc
pop
pushf
(bad)
sub
aam
pop
mov
dec
or
mov
lods
xlat
inc
cmp
dec
lahf
jl
stos
jmp
fsubp
movs
xor
in
dec
movs
lds
mov
test
jle
out
or
or
in
dec
scas
sbb
ds
cmp
add
inc
fwait
xor
mov
pop
adc
leave
jecxz
neg
push
mov
push
fistp
jge
addr16
xchg
scas
pop
xchg
addr16
push
xchg
inc
mov
clc
or
mov
ds
out
sbb
mov
fiadd
xor
js
add
je
mov
(bad)
mov
or
mov
or
aas
daa
or
and
fs
xor
mov
jbe
shr
mov
bound
mov
push
(bad)
in
sbb
cmps
jno
fs
lahf
add
cmp
in
popf
leave
pop
mov
(bad)
mov
jne
pop
fnstcw
ss
mov
adc
xchg
imul
js
cmp
lds
dec
cmps
pop
xlat
leave
les
imul
scas
cli
pop
or
data16
dec
cdq
sbb
pusha
in
pushf
mov
mov
ror
or
add
pop
xchg
cli
push
adc
fisub
fidivr
pushfw
enter
add
loop
scas
fwait
daa
mov
inc
sbb
scas
push
(bad)
inc
push
add
mov
mov
jg
sub
mov
xchg
jnp
mov
movs
mov
xchg
sbb
jmp
cmp
xlat
push
xor
push
sub
pop
jg
(bad)
jg
dec
mov
add
jge
adc
mov
ins
mov
pushf
and
or
adc
stc
loope
or
ins
inc
js
icebp
daa
adc
lahf
jno
in
mov
dec
dec
test
jp
imul
les
fsubr
jne
repz
mov
js
fild
loopne
(bad)
movs
loope
mov
mov
cmp
les
(bad)
sbb
repz
fcom
or
push
pop
cmc
sbb
mov
ret
ins
aas
out
push
jmp
loope
jge
test
lea
xchg
mov
mov
pop
addr16
pop
inc
xor
pop
(bad)
sub
loopne
test
mov
fcomp
and
cmp
dec
push
(bad)
jg
push
call
movs
or
(bad)
es
leave
push
pop
push
out
jno
fldcw
daa
mov
out
in
fcmove
mov
inc
xchg
int3
test
lods
push
outs
int
cwde
ss
push
and
push
fst
into
in
in
sbb
ja
loop
push
mov
(bad)
mov
ss
and
pusha
jo
retf
or
(bad)
(bad)
ror
fnsave
ficomp
push
mov
push
cdq
fs
or
movs
imul
nop
and
arpl
out
or
sbb
(bad)
(bad)
push
dec
mov
mov
test
movs
xchg
jnp
pop
or
ret
adc
aam
push
imul
jg
nop
ret
inc
out
dec
test
xor
inc
adc
pop
gs
(bad)
les
fdivr
mov
sbb
(bad)
fadd
cld
enter
dec
fadd
cmp
pop
pop
pop
jl
mov
fwait
jb
adc
pop
lods
inc
into
or
daa
popf
xchg
or
add
ins
enter
xchg
sub
aaa
cmp
push
lods
je
rcr
adc
jbe
cdq
repnz
ss
or
loope
cwde
iret
cli
adc
pop
ins
repnz
nop
int3
sbb
cmp
aaa
inc
xor
sub
ja
inc
sti
xor
(bad)
mov
lea
inc
push
mov
pop
pop
sbb
mov
inc
dec
mov
mov
in
sbb
aas
add
mov
mov
sahf
and
adc
addr16
cmp
pop
or
cld
mov
sahf
pushf
pop
fild
mov
(bad)
int
jmp
add
xor
lods
adc
mov
cmp
jno
dec
inc
repz
xor
in
dec
xchg
ret
(bad)
xchg
jecxz
sub
in
stos
pop
xchg
adc
and
cdq
daa
jmp
rcl
cmps
mov
outs
lds
mov
int3
xor
addr16
je
aaa
dec
out
maxps
mov
ret
sub
lods
call
push
xchg
pushf
in
imul
xchg
cmp
dec
or
js
jge
enter
dec
mov
mov
shl
lods
or
xchg
lods
add
out
pop
neg
sub
and
push
and
mul
lds
(bad)
ja
jo
mul
popa
data16
mov
cli
int
movs
mov
(bad)
or
js
call
push
hlt
cmp
xor
cwde
into
jg
test
pop
adc
pushf
cld
dec
and
dec
jl
or
push
mov
cmp
inc
sub
xlat
nop
pop
int3
xlat
push
hlt
repz
pushf
mov
fld
push
xchg
sub
ins
and
mov
rol
data16
dec
iret
into
sbb
mov
call
or
(bad)
ds
adc
push
cmps
pop
push
cmovae
loopne
fwait
scas
xor
mov
fsub
and
jae
jecxz
mov
inc
aaa
call
and
in
mov
and
and
cmp
outs
mov
test
jmp
lods
loope
mov
inc
shl
lds
pop
inc
int3
pop
and
(bad)
in
retf
ret
jmp
xchg
out
push
rol
aaa
mov
adc
push
in
pusha
shr
bound
dec
mov
cmp
(bad)
jmp
mul
call
and
mov
stc
jecxz
jne
jbe
(bad)
mov
adc
test
sub
xor
mov
pusha
das
push
adc
xchg
cmps
nop
and
add
cmc
push
dec
add
push
cmp
enter
dec
addr16
test
or
xchg
pop
mov
mov
add
stos
push
test
sub
stos
cmp
lahf
pop
xchg
xchg
loope
pop
(bad)
in
mov
bsf
and
dec
jl
fsub
das
mov
sbb
(bad)
jl
pusha
retf
popf
(bad)
lea
das
scas
leave
jae
pop
scas
pop
xchg
out
ins
jle
pushf
pop
xchg
(bad)
cmps
jl
xor
jge
(bad)
jl
into
neg
shl
js
xor
jg
sub
daa
fimul
xchg
inc
leave
jecxz
fimul
cli
push
outs
adc
pop
mov
dec
jl
mov
and
int
fcomp
in
sahf
(bad)
sub
xchg
fsubrp
cmp
xchg
mov
mov
xchg
lea
in
fcomp
mov
fisttp
jne
inc
sbb
cmc
movs
or
iret
aam
mov
in
adc
cmp
cs
jmp
ins
and
dec
cli
jecxz
in
mov
xchg
pusha
mov
inc
test
jg
call
data16
shl
push
mov
sub
lods
daa
dec
shr
stos
mov
sar
sub
mov
sbb
push
jne
loop
pop
push
push
xchg
adc
(bad)
cmp
mov
xchg
ret
call
xchg
sub
or
ins
shl
outs
fild
cld
mov
inc
mov
fsubr
daa
jl
and
jns
clc
adc
sbb
or
lock
sar
jbe
pop
adc
int3
add
lds
add
jl
dec
cmp
ret
mov
and
mov
mov
or
sub
cmp
or
mov
jne
sub
repnz
jae
jmp
jmp
gs
push
mov
and
xchg
fisub
and
pop
test
and
das
out
mov
scas
pop
sbb
outs
arpl
call
popa
cmp
in
cmc
sbb
cmp
movs
adc
pop
inc
lahf
arpl
fisttp
fsubp
mov
je
push
dec
mov
arpl
out
fadd
rsm
mov
dec
pcmpeqb
sub
pop
mov
out
xchg
jo
and
call
adc
jnp
mov
pusha
mov
ins
retf
clc
cmps
(bad)
or
add
dec
jmp
mov
(bad)
sahf
mov
sub
repz
jg
outs
ss
pop
and
xchg
pop
jge
(bad)
jl
mov
mov
pushf
push
test
or
lea
pop
adc
je
push
cwde
inc
sbb
add
mov
push
xchg
adc
pop
nop
xchg
sbb
xchg
and
sti
pop
sub
or
outs
inc
ss
aaa
imul
xchg
lods
ins
and
mov
mov
mov
cmp
pop
scas
mov
ins
je
mov
aam
adc
sub
jle
inc
push
cwde
sub
mov
test
push
(bad)
adc
sbb
push
jl
add
xchg
(bad)
(bad)
fldcw
jge
fadd
ja
push
ins
pop
mov
outs
stos
pop
cmps
aam
push
push
(bad)
in
(bad)
mov
push
mov
ss
sub
add
popa
xor
fstp
cmp
xchg
(bad)
aad
jbe
ss
data16
std
jbe
jne
mov
mov
int3
and
fwait
mov
leave
or
sub
pop
push
das
and
cmp
xchg
or
cmc
les
dec
js
jge
and
(bad)
pop
adc
into
mov
es
popf
adc
(bad)
adc
cli
mov
xchg
cmc
mov
in
mov
(bad)
xor
mov
mov
cmp
shl
addr16
push
inc
cmp
xor
push
jnp
int3
cs
mul
stos
cmps
dec
les
cmp
aad
ds
ins
icebp
call
cmp
dec
int
adc
loope
mov
addr16
push
(bad)
lods
mov
and
push
movs
fmul
mov
hlt
xchg
stc
leave
out
jns
and
dec
jecxz
inc
cli
inc
push
and
sbb
lods
inc
mov
mov
in
pop
ins
sub
call
and
aas
add
icebp
pmulhuw
ficom
sub
xchg
nop
jns
movs
and
cmp
adc
sbb
cdq
aas
inc
ficom
inc
and
test
out
pop
fisttp
mov
test
into
aas
and
shr
adc
pusha
push
mov
fst
ret
scas
arpl
lea
pop
pop
dec
repz
jle
or
xlat
out
retf
inc
hlt
cmp
and
imul
push
or
bound
mov
mov
push
sbb
shl
aas
fwait
sub
cmp
ror
aaa
inc
lds
xlat
lods
test
mov
fcom
mov
inc
sub
into
pop
jle
clc
and
adc
sahf
movs
sbb
test
retf
mov
inc
or
pop
cmp
daa
fcomp
push
and
pop
mov
push
jns
fucomp
mov
call
or
or
inc
pushf
fstp
pop
xor
dec
xchg
sahf
popfw
push
popa
and
jge
rcl
jecxz
push
call
test
pusha
sbb
adc
pop
mov
jge
int
dec
dec
cmc
pop
mov
test
sub
imul
sbb
(bad)
sub
popa
sub
cmp
add
pop
sub
mov
cwde
sti
(bad)
cli
ret
xor
pop
pop
or
aaa
inc
xchg
les
or
ins
add
pusha
jmp
xchg
lahf
mov
fmulp
outs
push
push
fsubr
xchg
mov
add
push
imul
test
hlt
xchg
jmp
cmc
xchg
dec
pop
ret
add
enter
cmps
(bad)
pop
xchg
push
jnp
outs
shl
pop
xor
xchg
in
mov
outs
push
xchg
ins
sahf
jne
cld
out
ins
ja
add
and
stos
into
shr
pop
stc
loop
rcr
sub
cmp
sub
sbb
test
jecxz
sub
loopne
clc
ss
adc
mov
jge
push
fld
dec
retf
cmp
xor
mov
fidivr
and
(bad)
ja
adc
ins
mov
xchg
fldenv
push
pop
pop
mov
jmp
mov
fdivr
sar
and
iret
inc
vxorpd
adc
(bad)
in
push
fstp
push
lea
cmp
mov
rcr
mov
dec
xchg
cdq
hlt
xchg
je
enter
sub
xor
and
xchg
scas
add
jg
sub
adc
not
mov
add
cs
test
ds
dec
adc
mov
ds
outs
cmps
adc
in
adc
add
jg
mov
cli
fsubr
jns
nop
push
jmp
fwait
or
cmp
push
in
mov
fs
mov
adc
xchg
(bad)
sub
fdiv
mov
xlat
mov
jbe
fisttp
jb
ret
jp
popf
lds
in
ret
xor
sbb
fiadd
popf
push
or
daa
cmc
pushfw
inc
inc
cmp
(bad)
cmps
sub
addr16
pop
or
add
sbb
mov
cdq
sub
push
push
pop
aaa
push
pop
mov
jle
pop
loope
(bad)
movs
xchg
out
jae
and
dec
dec
add
inc
ins
or
lahf
je
dec
push
dec
jmp
div
cmp
in
aam
nop
xchg
mov
(bad)
push
add
sub
xchg
mov
into
pop
test
ficom
or
popf
out
or
mov
loop
jmp
xor
cmp
pop
or
test
cld
das
stos
jmp
in
rcl
cmc
and
dec
(bad)
aam
popf
test
dec
in
inc
call
mov
addr16
mov
inc
cmp
dec
push
xchg
inc
int
popf
popa
add
push
ins
jbe
call
cdq
ins
jg
loop
leave
cs
adc
cdq
das
xor
pop
movs
ss
mov
cmp
lahf
jb
push
mov
mov
inc
movs
jecxz
inc
cs
cdq
cmps
in
fst
dec
jge
xor
aas
adc
and
leave
in
ins
xor
adc
cmc
pop
addr16
jae
ins
cmp
in
mov
inc
push
sahf
jl
fs
or
les
xchg
jmp
aam
jmp
xor
fist
pushf
jbe
sbb
in
iret
(bad)
hlt
xchg
push
daa
xchg
push
jge
sbb
js
push
fwait
dec
ins
out
and
pop
out
scas
popf
lahf
lods
loop
addr16
sbb
xchg
paddw
sub
jmp
mov
adc
test
adc
add
push
cmp
jo
mov
pop
pop
mov
mov
cmp
pushf
in
mov
loop
xchg
shl
pop
cmp
pushf
sti
dec
sub
not
sbb
jge
addr16
xchg
mov
cmp
dec
or
(bad)
xor
cdq
add
mov
daa
dec
pop
sub
push
fisub
js
mov
retf
pushf
and
push
cmps
lock
int3
loope
push
sub
pusha
enter
aaa
pusha
daa
jo
out
cmps
lods
jmp
clc
int3
xlat
fdivr
sbb
jnp
pop
sbb
xchg
cwde
mov
(bad)
pushf
imul
ja
loop
mov
inc
repz
inc
leave
push
aaa
cmp
pop
push
inc
ret
pop
and
int3
mov
mov
pop
xchg
sub
jp
fld
imul
mov
out
repnz
shr
xor
cld
cmovl
fistp
das
inc
jae
sub
mov
in
mov
xchg
fisub
push
addr16
add
add
aaa
mov
add
sti
movs
jmp
stc
popf
popa
cli
ss
jg
lahf
sub
cmps
sub
pop
push
inc
pop
pop
jmp
pop
div
sar
ins
lds
std
adc
and
movs
cmp
jnp
add
jl
test
pop
push
ins
xchg
push
fnstenv
fdiv
sbb
push
inc
or
mov
loopne
pop
pop
adc
mov
inc
pop
clc
popf
sub
mov
stc
dec
jae
jo
and
movs
es
mov
mov
sbb
retf
xlat
sbb
mov
loopne
aad
mov
push
adc
(bad)
loope
inc
pop
cmp
jae
test
ja
dec
shl
pop
shr
int
ins
arpl
sti
ficom
mov
scas
addr16
pop
jmp
mov
fld
int3
rcl
mov
das
stos
mov
mov
dec
pop
mov
or
jmp
(bad)
in
xchg
xchg
fs
ja
fistp
jae
cs
lock
(bad)
xchg
sti
adc
mov
or
mov
push
or
ins
dec
outs
adc
ins
imul
mov
xor
stos
add
ror
pop
(bad)
push
inc
xchg
div
mov
jmp
loop
ja
ret
sub
cld
add
inc
dec
cli
pushf
out
xchg
mov
cmp
in
(bad)
xchg
mov
mov
inc
jnp
mov
fwait
jle
push
retf
xchg
cmp
or
imul
adc
out
xor
pushf
in
xchg
scas
push
call
mov
(bad)
out
dec
xchg
(bad)
adc
add
jae
xor
into
aaa
icebp
adc
data16
xchg
std
nop
pushf
imul
push
push
xor
add
retf
pushf
retf
jmp
cmps
aam
or
add
movs
xchg
mov
xlat
sbb
popa
cmp
lods
ja
push
in
test
xchg
retf
xor
cwde
dec
jl
iret
sbb
mov
pusha
dec
and
add
jecxz
cmp
(bad)
xor
dec
push
mul
loop
loopne
call
cmp
sub
sbb
xlat
(bad)
push
sahf
ins
cs
sti
stos
loopne
div
inc
cli
cmp
retf
retf
stos
jmp
xor
mov
ss
movs
scas
mov
ins
ins
jmp
xor
sbb
cwde
xchg
movs
xor
sub
test
push
mov
sti
dec
cmps
jmp
dec
xchg
xchg
ds
imul
dec
hlt
mov
cdq
mov
xor
loope
or
rol
ins
and
pushf
stc
pop
sub
ins
stc
jae
mov
inc
fist
mov
mov
mov
out
sub
leave
sub
(bad)
vmovshdup
push
mov
ins
inc
cmp
sub
cmp
and
xchg
inc
fisttp
sub
cmp
push
jnp
lods
mov
adc
cmp
cmp
and
(bad)
dec
pop
aam
pop
xor
cmp
in
adc
mov
dec
addr16
or
movs
cmp
dec
pop
xor
push
shr
mov
mov
mov
mov
daa
lods
or
lea
pop
in
inc
stc
pushf
pop
cmps
push
mov
push
data16
es
popa
inc
adc
mov
mov
push
xlat
mov
sub
int3
push
adc
push
das
inc
retf
jne
fld
dec
add
add
push
imul
in
xor
jg
lahf
mov
add
inc
and
xchg
clc
mov
stc
push
dec
cmp
shl
mov
adc
imul
aam
pusha
inc
int3
repnz
shr
sub
sbb
aad
aaa
sbb
(bad)
daa
adc
fstp
cmp
jbe
and
les
cmc
mov
pop
lods
jle
jmp
mov
enter
rcl
add
cmp
mov
neg
add
out
xchg
out
dec
sub
sar
inc
or
jge
or
shl
sub
xchg
cmp
mov
xor
das
jne
lahf
or
das
outs
ins
push
(bad)
movs
push
retf
sbb
sub
or
es
adc
jmp
bound
out
popa
xchg
test
mov
mov
ds
sub
daa
inc
loop
mov
mov
mov
(bad)
sbb
fmul
xchg
loope
inc
xchg
inc
and
push
sub
cmp
int3
xor
lods
pop
jno
mov
xchg
or
mov
popa
or
jp
xor
jle
ins
mov
jns
(bad)
mov
cmps
neg
pop
(bad)
pop
jno
jl
sbb
sub
inc
movs
movs
aad
mul
gs
mov
(bad)
xchg
lds
dec
or
dec
or
outs
xor
lods
ret
dec
xchg
mov
ins
(bad)
cld
std
lods
dec
push
shl
aam
out
dec
jne
popf
daa
sbb
xlat
xchg
lods
lahf
mov
mov
mov
mov
mov
adc
sbb
or
stos
std
jo
jp
test
popf
jmp
cmp
fnsave
loope
dec
and
fld
lods
fsub
xchg
(bad)
and
or
or
int
mov
pushf
adc
out
push
mov
xchg
ss
pusha
mov
popf
jmp
mov
jmp
xchg
(bad)
or
cmps
inc
push
ins
push
add
jnp
add
or
jmp
fptan
(bad)
int
pop
ss
jge
int3
cmps
fdiv
data16
mov
ins
pop
lea
out
(bad)
cld
daa
ror
mov
or
(bad)
test
cdq
xchg
xor
cs
pop
xchg
mov
movs
std
push
mov
into
lods
pop
gs
add
jmp
mov
xchg
shr
xor
mov
out
mov
cmps
push
xchg
fdivr
dec
pop
addr16
xchg
(bad)
jge
fs
cmp
shl
imul
dec
xor
sbb
jle
jge
(bad)
(bad)
into
not
push
sub
mov
dec
mov
ja
add
cmp
xor
mov
movs
mov
inc
push
mov
iret
cmps
add
lds
mov
repnz
fimul
icebp
inc
cmps
jmp
pop
dec
and
sub
rcl
int
ins
and
pop
jecxz
cmp
popa
dec
movs
es
(bad)
add
js
outs
loop
out
out
pushf
out
sub
mov
fisub
fs
inc
pop
mov
pop
ja
hlt
call
mov
seta
gs
mov
jno
rcl
and
fld
add
loope
lds
test
xor
cwde
inc
pop
sbb
loope
call
adc
or
out
gs
cmps
lock
mov
ins
pop
js
push
repnz
jo
dec
les
sbb
shl
sbb
pop
adc
and
jae
jo
cmps
iret
iret
(bad)
test
xchg
xor
adc
pop
dec
addr16
xchg
mov
cmps
enter
iret
add
lea
icebp
sbb
xchg
lods
imul
pop
jbe
pop
fsub
adc
stos
push
aaa
cli
enter
mov
rol
arpl
je
ficom
lea
pop
mov
sar
(bad)
xchg
or
sbb
mov
imul
add
je
mov
scas
add
ret
mov
(bad)
lds
cs
mov
jns
xchg
mov
(bad)
mov
(bad)
popf
fdivr
cld
push
test
mov
push
popa
jb
ret
lea
leave
pop
ss
or
xor
jge
pop
xchg
jnp
fsub
xchg
mov
ficom
push
neg
je
push
xchg
inc
and
(bad)
dec
lock
jmp
or
aam
sbb
ss
xlat
(bad)
iret
iret
mov
cmp
je
cmc
fs
or
push
dec
imul
js
add
sub
xor
inc
test
imul
mov
arpl
mov
pop
js
rcr
xchg
fisttp
jle
xchg
inc
xchg
or
sbb
mov
xor
mov
adc
cmps
fcomp
ins
ins
mov
mov
or
mov
fdivr
cmp
retf
movs
out
push
(bad)
adc
imul
mov
aam
les
(bad)
in
lds
pop
xlat
pop
pop
cmps
and
xchg
into
xchg
out
or
std
imul
out
mov
mov
sub
pushf
xor
mov
sub
mov
in
clc
sbb
inc
or
(bad)
cmc
bound
xchg
sub
push
(bad)
les
adc
nop
push
loope
fidivr
ja
into
mov
sbb
add
fst
xor
push
(bad)
rcr
idiv
xchg
int3
stos
mov
add
push
dec
push
sub
jo
jge
pushf
sti
xchg
jmp
xchg
mov
cdq
jae
enter
mov
stos
std
rcl
sti
xchg
sbb
fist
sub
cmp
imul
std
push
cmp
sbb
push
(bad)
xor
dec
stc
test
mov
fwait
sbb
fnstenv
add
jnp
shr
dec
xchg
jo
cmp
pop
sub
adc
and
(bad)
push
xchg
mov
xchg
mov
mov
addr16
fwait
jmp
aam
jl
add
jne
daa
add
cli
sub
adc
iret
mov
mov
push
pop
or
addr16
imul
adc
(bad)
imul
popf
sbb
dec
int3
add
inc
cmp
cmp
push
test
cmp
shl
movs
fwait
inc
push
jge
sub
adc
sub
or
imul
fldcw
jp
mov
xchg
push
cs
bound
mov
ins
xchg
push
je
repz
ja
push
ret
hlt
or
push
sub
jl
cdq
mov
lods
or
(bad)
stc
push
in
mov
arpl
jns
mov
cmp
mov
into
adc
cmps
or
das
cmp
mov
sbb
mov
mov
stos
lds
mov
addr16
bound
adc
icebp
push
shl
xchg
mov
or
push
daa
bound
fild
dec
inc
jns
aas
leave
cld
daa
repz
jmp
mov
cs
or
fsubr
out
dec
jnp
arpl
cmp
inc
cld
ret
pushf
pop
pop
cli
mov
leave
dec
adc
adc
mov
cmp
sub
and
xchg
repnz
shr
xchg
cmps
in
mov
dec
mov
xchg
or
sub
pop
and
aaa
movs
xlat
fsub
int3
xchg
lahf
add
in
xchg
jl
addr16
ss
inc
jg
mov
jl
ins
fxch
daa
scas
out
mov
inc
pop
(bad)
imul
xlat
jmp
fdiv
add
jmp
cmp
popa
fiadd
or
cs
push
in
frstor
mov
sbb
rcl
push
cmp
pop
(bad)
jnp
ja
aaa
fld
fucomip
je
repz
mov
push
rol
aad
inc
mov
ins
(bad)
in
(bad)
in
or
push
mov
(bad)
test
cmps
or
popf
call
pop
mov
push
out
push
cmp
test
push
mov
sub
pop
or
(bad)
into
jne
jbe
add
push
jae
cmps
adc
cwde
or
xchg
call
(bad)
xor
popa
mov
push
mov
mov
adc
push
ss
arpl
pop
or
je
(bad)
in
fst
push
call
repz
or
xor
pop
cs
ins
inc
mov
nop
enter
mov
icebp
jmp
mov
sti
ja
loop
or
inc
push
hlt
xchg
mov
bound
mov
ret
hlt
and
mov
(bad)
data16
mov
push
lahf
cli
adc
jge
test
das
add
rcl
mov
mov
inc
nop
jb
jns
xchg
test
shl
jl
dec
or
std
in
in
xor
sbb
mov
sti
out
xor
mov
pop
cs
mov
imul
sbb
arpl
push
mov
lock
or
aam
pop
test
pop
ss
xchg
and
icebp
sub
fld
xchg
xor
cli
pop
aad
daa
dec
(bad)
sbb
cmp
xchg
inc
adc
sub
dec
sub
ins
aaa
mov
stos
movs
jmp
cmp
das
pop
mov
frstor
jge
fs
sbb
push
xor
pop
into
adc
inc
addr16
gs
jns
jle
call
lock
mov
fs
test
sbb
inc
add
mov
ins
xchg
mov
xlat
aas
adc
fstp
add
pop
es
xchg
mov
pop
fwait
out
or
xor
stos
daa
mov
adc
out
pop
push
aam
outs
lods
movs
sahf
sahf
ret
dec
loop
sub
xlat
popa
enter
pop
jo
leave
(bad)
sub
in
ss
or
and
or
ja
js
or
xor
lods
dec
int
mov
xchg
fadd
adc
pop
pushf
sub
or
adc
imul
sub
repnz
out
sbb
ja
popa
cmp
lods
pop
or
mov
xchg
popa
pop
pop
jl
inc
mov
add
fnstsw
adc
push
dec
int3
pop
pop
mov
fwait
repnz
dec
jns
push
pop
dec
and
pop
mov
jmp
pop
std
cmps
mov
aas
mov
cld
xor
cmp
out
mov
shr
and
xchg
xchg
mov
inc
shr
rcr
imul
aam
mov
popf
dec
pusha
aaa
inc
dec
jg
and
mov
jl
les
fwait
imul
lods
ja
jg
xchg
adc
push
sbb
pop
loop
lods
dec
xchg
dec
sbb
in
xlat
hlt
jne
dec
aam
jb
xor
retf
mov
add
push
lds
inc
frstor
mov
xlat
(bad)
sti
jnp
add
ja
sbb
mov
push
xchg
fs
fisttp
mov
add
idiv
pop
out
ja
imul
pop
sub
(bad)
dec
cmps
pop
test
sbb
mov
xchg
jle
adc
into
sbb
nop
pop
lods
lock
jl
add
outs
enter
or
inc
(bad)
ins
add
pop
or
jbe
sbb
cmp
(bad)
jo
push
in
sti
lods
cs
pop
sub
int3
xchg
pop
cld
pop
mov
addr16
xlat
dec
int3
push
cld
push
nop
rcr
dec
add
lahf
mov
jbe
inc
cmps
cld
pop
or
add
jb
loop
popf
xor
ss
and
cmp
sbb
or
pop
fnsave
ins
sti
push
mov
and
xchg
test
mov
sbb
popf
sbb
scas
xor
xor
ror
aaa
mov
xlat
scas
aaa
dec
neg
add
and
push
adc
pusha
(bad)
iret
aaa
lahf
mov
jae
int
loopne
cld
call
adc
imul
lods
or
cmp
lods
fcmovnu
mov
push
mov
fnsave
sub
daa
mov
cmps
and
or
es
mov
lea
outs
not
ffree
cmp
loopne
aad
popa
aad
xchg
cld
ins
cmp
retf
sbb
xchg
rcl
sti
cmps
sbb
inc
loope
jl
in
imul
popf
jb
out
push
cmp
xchg
pop
xor
jbe
mov
adc
cmp
push
jno
iret
gs
pushf
cmps
and
dec
adc
daa
gs
clc
or
fcomp
hlt
mov
fiadd
sbb
imul
iret
xlat
pop
or
not
iret
popf
xlat
add
cld
jbe
add
call
cmp
dec
inc
fdivp
mov
iret
push
inc
sbb
and
mov
arpl
call
jmp
pop
shl
lods
add
inc
pop
stos
mov
add
or
inc
es
fnstenv
or
call
retf
mov
push
jge
std
mov
cdq
mov
rcr
jns
sbb
add
or
sub
push
aaa
mov
call
push
xor
cmps
xchg
fcom
aaa
pop
xchg
sub
shl
and
loope
ja
xor
retf
sahf
or
or
mov
loope
test
push
ins
lahf
sahf
imul
xlat
sub
ja
adc
(bad)
cs
xor
jnp
int3
adc
scas
retf
pop
push
loopne
and
js
int
mov
and
push
push
inc
adc
mov
and
idiv
(bad)
pop
mov
push
out
les
in
fistp
cmps
ficom
lods
call
scas
(bad)
popf
or
fadd
dec
out
stos
xchg
bound
out
cmps
and
lods
sbb
pop
jno
cld
out
daa
adc
sbb
push
(bad)
inc
and
dec
pop
pop
(bad)
push
ss
xchg
mov
push
int
xchg
stos
ins
out
loopne
nop
mov
jmp
pop
mov
mov
popf
daa
lock
ins
sbb
arpl
shl
fwait
cmp
imul
or
sub
out
adc
inc
cmp
mov
mov
lods
dec
cmp
popf
jp
pop
rol
(bad)
out
mov
jno
sbb
shl
sbb
jbe
xchg
pop
or
jbe
mov
lds
out
xchg
pop
cs
xor
int3
cmps
cmp
imul
sti
cmp
movs
fild
push
add
sub
stos
mov
pop
jg
loop
cmp
test
adc
or
sub
pop
fist
push
add
int3
mov
ja
stos
(bad)
push
or
cdq
sahf
push
dec
sbb
jno
loope
mov
cmp
mov
int3
dec
xor
fsub
ins
cli
jae
or
sahf
or
adc
fisttp
push
dec
sbb
and
addr16
pop
les
bnd
mov
mov
cli
pusha
daa
mov
jge
jbe
lea
js
pop
pusha
jge
or
jmp
xchg
jmp
ret
add
stos
xchg
lock
push
je
jbe
cmc
adc
pop
push
pop
add
cmps
sti
test
cmps
and
leave
and
cmp
cmp
stos
in
and
push
(bad)
scas
jmp
fidiv
push
cmp
push
enter
lea
or
push
xor
lahf
int
lea
push
(bad)
or
or
pop
dec
loope
in
or
inc
sub
mov
nop
add
jl
jne
mov
mov
xor
ret
dec
fnstsw
mov
nop
mov
add
mov
ret
and
sub
jge
and
imul
icebp
or
call
data16
dec
dec
xchg
push
pop
xor
add
pop
in
daa
test
push
sub
imul
pop
idiv
sbb
into
cmp
jge
shl
sbb
or
cmp
addr16
retf
mov
test
(bad)
cmc
pop
std
xchg
call
stos
cwde
ret
pop
pop
cdq
aaa
std
xchg
(bad)
mov
cmps
or
cmc
and
push
cdq
jge
push
ins
rcl
pusha
mov
pop
mov
out
adc
and
xor
and
shl
push
inc
sbb
jmp
xchg
ins
xchg
lods
mov
retf
jnp
or
mov
frstor
or
cmps
jns
cmp
pop
dec
push
int3
add
aad
cmp
fcom
shl
push
lahf
mov
div
inc
xlat
inc
sub
int
div
addr16
dec
add
dec
jbe
fwait
mov
lods
in
sbb
retf
push
push
mov
mov
add
(bad)
fistp
push
adc
lock
aas
das
dec
push
or
xchg
dec
cmp
(bad)
mov
and
push
xor
inc
es
gs
cmp
mov
xchg
fisub
out
hlt
repz
aaa
xchg
and
sbb
xchg
int
aam
loope
out
or
aam
pop
stos
cmp
cmp
jmp
in
psubusb
std
je
mov
xchg
and
mov
mov
int3
and
ds
dec
loope
adc
push
mov
mul
xor
add
retf
fwait
jmp
dec
clc
das
sti
jmp
bound
pop
mov
sbb
inc
xchg
jecxz
mov
add
mov
pop
adc
lock
xchg
ins
dec
mov
jecxz
pop
xchg
jmp
sub
pop
xchg
sar
sub
(bad)
mov
fist
shr
data16
pop
retf
mov
add
xor
and
lea
ja
ja
jns
xchg
in
scas
and
ins
dec
retf
or
push
pop
ins
ss
mov
(bad)
in
cmp
mov
fisubr
in
movs
loopne
loop
sub
xchg
pop
shl
jmp
call
call
repz
aam
pop
fsub
sub
pop
popf
dec
icebp
loope
iret
dec
int3
pop
pop
mov
push
popa
(bad)
ins
sub
sbb
popa
dec
std
or
loop
inc
add
jns
cmp
sub
mov
or
xchg
fimul
or
xchg
test
int
mov
mov
pop
cmp
pusha
sar
sub
cmps
mov
and
xchg
(bad)
and
mov
movs
imul
ds
lods
mov
add
stc
jmp
jecxz
movs
outs
inc
aaa
jne
xor
mov
test
lods
aam
mov
call
(bad)
pop
cmp
mov
aaa
outs
ss
and
loopne
inc
xor
stos
jnp
ds
sbb
xor
or
dec
enter
call
test
pop
inc
mov
inc
adc
in
push
fild
pop
add
vpxor
cmp
add
xchg
add
push
ja
sub
adc
out
nop
or
movs
sub
dec
cdq
cli
call
inc
sub
call
xchg
pushf
and
xor
adc
daa
xchg
xchg
sbb
jmp
leave
minps
aad
dec
out
push
fcom
bound
sbb
aas
inc
jns
jp
sbb
stc
and
push
or
mov
mov
sbb
adc
and
and
fsubr
pop
test
(bad)
pop
and
jae
dec
inc
add
js
push
and
stos
call
mov
push
cmc
jge
mov
cmps
jp
jg
add
lods
sbb
jg
mov
test
xchg
fbld
push
cmovae
push
push
fidivr
bound
jl
cdq
std
dec
idiv
xor
xor
cdq
ret
scas
movs
scas
mov
dec
push
les
(bad)
cmp
loope
sbb
sbb
jae
ja
adc
or
pop
xchg
jns
cli
aad
rcr
jmp
call
mov
xchg
ds
add
push
rol
in
mov
push
clc
mov
test
gs
ss
mov
(bad)
popf
or
repz
outs
test
rcr
xor
xor
mov
add
sub
lahf
cmp
das
dec
mov
jo
add
push
sbb
int
mov
adc
ror
fdiv
(bad)
jmp
jl
sti
imul
mov
dec
push
pop
daa
inc
and
sub
push
jge
repnz
push
and
pusha
add
popf
sub
or
mov
xchg
and
pop
push
add
cld
xlat
push
mov
add
mov
adc
pop
mov
enter
cmps
loop
fwait
add
sub
out
test
mov
inc
ret
mov
stc
or
inc
dec
ja
stos
xor
or
or
sub
(bad)
nop
cmp
cld
xchg
sub
push
or
gs
mov
repz
dec
mov
(bad)
leave
nop
pop
mov
jb
cld
fiadd
loope
out
aad
cmp
popa
stc
ds
inc
and
sub
daa
push
enter
dec
mov
xor
mov
hlt
inc
jp
xor
jl
cmc
pop
push
shr
jmp
mov
mov
stc
cmps
(bad)
inc
sub
cmps
cmc
push
mov
jp
fcomip
jl
pop
jmp
inc
bound
arpl
dec
sub
hlt
push
dec
or
dec
mov
ror
add
pushf
(bad)
nop
repnz
xchg
cmp
stos
call
test
xlat
and
(bad)
dec
rol
ret
mov
sub
pop
jnp
sahf
mov
mov
js
dec
add
push
cmp
pop
pop
(bad)
loope
adc
int
cld
mov
cmp
fs
nop
test
and
(bad)
cmc
cmp
mov
cli
int3
xchg
xchg
lahf
ret
fisub
jg
es
repnz
adc
dec
add
mov
repnz
(bad)
shl
cs
call
clc
push
icebp
push
loope
pop
in
push
mov
mov
adc
jecxz
dec
add
daa
jl
sbb
pop
sub
pop
lock
not
(bad)
fidiv
jae
dec
mov
aam
add
pop
or
cli
xlat
and
mov
nop
cmp
xor
mov
add
xor
xchg
aaa
jge
and
pop
(bad)
shr
je
rcl
fst
fs
cmps
(bad)
pop
cmp
cmp
shl
pushf
xchg
jb
push
mov
and
idiv
mov
(bad)
pop
shr
cmp
mov
addr16
fnstenv
test
mov
daa
mov
clc
mov
sbb
cmp
mov
and
lahf
xlat
int
repnz
push
pop
cmps
ss
(bad)
(bad)
adc
aad
dec
adc
pop
mov
rcr
mov
mov
int3
pop
inc
jg
add
push
add
mov
push
mov
in
ja
mov
mov
cmp
inc
loopne
push
fs
sub
cmp
push
push
lods
les
mov
cmp
out
nop
add
retf
(bad)
sbb
sub
(bad)
or
sbb
fst
mov
mov
xchg
mul
xchg
iret
ja
in
call
cli
je
and
iret
pop
sub
lea
ins
daa
mov
(bad)
test
stos
aas
push
movs
cld
test
xchg
and
push
xchg
and
xor
in
adc
int3
cmc
scas
(bad)
(bad)
adc
cmp
scas
out
cmps
push
(bad)
mov
sub
mov
mov
(bad)
lea
mov
push
adc
lods
(bad)
call
ja
xchg
popa
nop
push
xor
lds
(bad)
inc
sub
inc
xor
repz
pop
xchg
aaa
pop
sub
fsub
jp
jle
adc
dec
stc
out
mov
cwde
dec
cmps
mov
push
(bad)
inc
mov
xchg
call
mov
mov
scas
cwde
push
push
jp
mov
push
push
inc
out
push
and
lods
aaa
sbb
mov
push
or
mov
adc
out
jecxz
mov
xchg
enter
test
(bad)
pop
cmovs
inc
in
inc
int
lahf
dec
enter
and
xor
je
icebp
adc
and
and
jge
pop
pop
rol
lds
mov
sub
sbb
std
mov
daa
lock
jae
mov
cld
and
or
loope
jo
adc
xlat
xchg
(bad)
icebp
arpl
push
pop
mov
test
cmp
xchg
sbb
mov
sbb
nop
hlt
pop
mov
sbb
xchg
in
xchg
xor
ds
gs
retf
imul
push
and
ss
div
out
mov
imul
push
cld
cwde
retf
inc
inc
or
(bad)
jg
int3
iret
add
xchg
mov
cmps
mov
std
rcr
and
xchg
ds
mov
call
outs
ror
pop
movs
xchg
ficomp
cs
hlt
iret
cli
and
ins
adc
(bad)
push
inc
mov
and
ret
repnz
test
jb
and
sub
fstp
jno
into
push
popf
in
int3
jge
dec
fisubr
mov
mov
sbb
pop
lock
cwde
xchg
cmp
sub
lahf
les
mov
mov
test
js
xor
or
add
sub
dec
(bad)
sbb
push
add
es
add
repnz
aad
adc
stc
test
es
fmul
inc
sahf
push
das
and
dec
repz
dec
pop
jmp
retf
hlt
push
jecxz
xor
jno
ds
sbb
scas
ss
inc
mov
adc
sti
adc
addr16
mov
cmp
sub
imul
jbe
cmp
jne
pop
ja
fwait
clc
pop
loopne
push
es
rcl
add
dec
imul
push
clc
add
test
mov
inc
lods
aam
mov
daa
sbb
cmp
fnstsw
add
jb
loop
test
or
pop
sbb
push
cs
cmp
push
xchg
call
out
inc
shl
lock
ss
daa
sbb
pop
jbe
(bad)
nop
jae
neg
or
jp
mov
jns
jp
ror
pushf
sbb
ror
sbb
mul
sti
out
push
cmp
aam
addr16
repnz
dec
push
jg
es
xlat
loop
mov
in
cmps
mov
mov
aaa
js
push
push
add
out
jp
icebp
iret
ins
push
ror
mov
out
xchg
stos
push
ret
repnz
stos
or
jns
ds
sub
xchg
sahf
popf
lahf
cmp
adc
mov
sub
lods
mov
mov
les
dec
push
jmp
sbb
mov
outs
popa
call
cmp
enter
mov
pop
xchg
shl
stc
lods
push
lods
test
scas
imul
ja
ret
lods
les
jae
(bad)
mov
(bad)
in
mul
pop
sub
aam
fs
adc
ret
add
cmp
mov
pop
xchg
jecxz
cmp
or
addr16
(bad)
mov
jecxz
rcr
cmp
lds
(bad)
out
mov
xor
cmp
push
popf
or
sbb
mov
push
adc
cmp
cdq
xchg
punpcklwd
mov
jle
mov
jbe
test
pop
xchg
fldenv
lds
ret
cs
or
repz
cmc
pusha
repz
adc
pop
push
inc
cwde
idiv
sar
xchg
cmp
fs
add
gs
add
nop
aaa
sbb
push
pop
cmps
sub
cld
aad
cmps
arpl
pop
and
popa
addr16
jg
jnp
mov
outs
mov
fbstp
in
(bad)
push
xor
adc
pushf
paddb
rcl
push
pusha
call
mov
aam
test
push
enter
mov
dec
cwde
mov
shl
or
stos
fs
lock
aam
jmp
xor
push
jle
jecxz
std
jne
sub
lahf
lock
test
xor
xor
pop
dec
mov
add
daa
dec
dec
shl
in
xlat
sti
lock
loopne
or
cwde
add
nop
aaa
xor
pushf
fsubr
adc
mov
loopne
mov
xchg
pop
cmps
push
mov
xor
push
pop
mov
fist
hlt
cdq
inc
lock
lea
cld
sti
aam
xor
js
and
mov
nop
mov
(bad)
hlt
adc
ret
jmp
nop
lahf
add
shl
cld
sbb
lods
xchg
(bad)
hlt
fwait
rol
lea
mov
cs
in
jl
or
cld
jbe
mov
sbb
dec
mov
test
dec
push
jmp
dec
pop
scas
aad
cmove
into
xchg
and
xchg
mov
scas
push
inc
into
push
jp
cli
sub
cmp
and
xchg
(bad)
mov
push
loop
into
dec
mov
loop
cs
cmp
sub
dec
call
retf
loop
push
inc
(bad)
(bad)
jmp
pop
imul
mov
into
sar
mov
and
scas
call
scas
repnz
leave
mov
(bad)
scas
mov
push
mov
jmp
(bad)
sbb
cmc
xor
mov
mov
outs
test
push
sub
adc
(bad)
jl
aam
mov
out
loop
dec
jp
inc
retf
retf
in
mov
mov
pop
fld
sbb
scas
xchg
cli
arpl
jmp
out
and
mov
es
add
call
adc
ss
jmp
mov
sbb
iret
stos
call
jp
and
pop
clc
push
ret
sbb
retf
cmps
call
(bad)
dec
cli
loop
pop
aas
sub
adc
movs
jg
inc
aas
jmp
push
mov
xor
imul
adc
mov
inc
(bad)
cs
test
push
cwde
jl
mov
pop
and
rcl
ds
xor
cmc
cwde
ret
retf
imul
pop
cs
cmp
mov
(bad)
xchg
aas
xor
sar
sti
dec
shl
fidivr
pop
cli
jg
lahf
(bad)
xlat
jne
add
cmp
or
mov
mov
lock
jmp
(bad)
jle
cmc
fsubr
mov
pop
fidiv
xor
mov
pop
aas
pop
das
inc
(bad)
mov
xor
(bad)
fwait
(bad)
push
mov
xor
repz
jle
(bad)
xor
stos
pop
push
xchg
ds
pop
movs
ss
xchg
jmp
cmp
ds
lods
xchg
fisub
pop
xor
cmc
mov
xor
out
(bad)
mov
sbb
cmp
ficomp
test
jle
jg
idiv
div
outs
iret
test
fstp
mov
outs
jae
mov
std
nop
sub
mov
cdq
out
pop
cli
sbb
pop
pop
retf
outs
lahf
dec
or
mov
xchg
call
mov
out
(bad)
addr16
mov
fdiv
push
cwde
in
in
ja
mov
cvtps2pd
jle
shl
iret
mov
push
gs
mov
das
add
ficom
pop
popf
cmp
xchg
mov
jae
shl
jmp
aam
mov
push
pop
cld
(bad)
aas
jle
(bad)
fidivr
cli
stos
inc
sub
and
sub
sub
stos
ret
pop
imul
mov
mov
push
mov
stos
clc
mov
adc
jp
and
sub
cmps
xchg
sbb
ds
mov
mov
das
add
jp
sub
mul
inc
push
jb
cmp
cmp
mov
mov
sti
outs
and
neg
retf
fisubr
std
mov
jmp
cmp
icebp
fidiv
cmc
jle
add
mov
jnp
neg
cmps
sar
lock
outs
ret
sub
sub
lods
jge
jge
jl
test
out
mov
pop
cli
push
cmp
adc
jg
sti
into
cmp
mov
jne
out
cli
sub
dec
add
inc
ds
sub
(bad)
loop
lock
jno
movsx
and
je
sub
sbb
jns
mov
cmps
mov
mov
fld
cmp
fbld
mov
mov
ret
jg
fidiv
mov
pop
lock
(bad)
xchg
sub
stc
sub
xchg
das
bnd
mov
pop
pusha
or
rcr
in
inc
fst
cld
fwait
aas
push
(bad)
adc
cld
(bad)
outs
in
mov
xchg
cmp
dec
dec
sub
mov
fwait
xor
sub
sahf
aad
push
mov
loop
xor
ror
out
jg
mov
nop
mov
mov
push
mov
sbb
or
sub
int
nop
movs
clc
rol
and
mov
push
mov
fwait
adc
cwde
addr16
hlt
sbb
(bad)
mov
xor
mov
mov
fwait
jmp
sub
mov
call
imul
sbb
adc
add
nop
dec
cld
jmp
cmps
xor
xor
sbb
out
dec
mov
outs
out
or
stos
nop
outs
sbb
inc
adc
les
adc
jmp
retf
adc
nop
jmp
sub
xor
inc
(bad)
cld
nop
push
sub
cdq
inc
xchg
retf
inc
jmp
arpl
nop
pop
scas
mov
stos
(bad)
iret
xor
push
inc
sub
nop
sub
jae
rcl
iret
xor
adc
push
das
mov
shr
shl
out
push
(bad)
clc
retf
pop
cmps
add
nop
jno
outs
xor
popf
out
pop
cwde
adc
push
push
stos
push
xor
cmps
inc
adc
lods
mov
ror
aam
clc
jmp
mov
nop
mov
mov
inc
iret
xor
mov
outs
lahf
dec
mov
out
cwde
push
push
iret
push
jl
cmp
outs
adc
outs
or
iret
xor
outs
les
inc
xchg
cld
sbb
test
rcr
call
add
adc
cmps
arpl
movs
push
sub
sar
xor
(bad)
out
xchg
jl
test
es
jb
or
in
push
inc
sub
or
stos
addr16
xchg
mov
cs
(bad)
fild
push
mov
pop
push
push
push
xchg
(bad)
fistp
data16
dec
mov
push
es
neg
test
mov
add
ret
shl
xchg
loope
mov
xchg
mov
xchg
xchg
lahf
out
and
mov
mov
out
push
ss
imul
out
push
add
aam
adc
inc
mov
cmc
in
les
icebp
push
mov
mov
addr16
inc
and
call
and
push
inc
add
jb
jecxz
(bad)
rcl
adc
mov
pop
(bad)
bound
mov
loop
call
(bad)
iret
fdivp
push
and
es
mov
push
and
and
inc
or
add
xchg
ins
cmp
cs
popf
jp
or
in
inc
cmp
test
and
nop
push
clc
jecxz
xor
dec
jno
jg
xor
in
in
movs
std
dec
inc
xor
pop
lea
mov
and
aad
hlt
bound
imul
cwde
ss
mov
(bad)
cmc
inc
mov
and
(bad)
sbb
mov
mov
xchg
xchg
adc
(bad)
sub
mov
sbb
rol
mov
add
and
inc
mov
loop
add
les
mov
inc
mov
mov
push
in
xor
mov
retf
aad
sub
mov
aad
xchg
test
pusha
jns
adc
les
aad
arpl
aad
xor
aam
and
fiadd
arpl
arpl
adc
push
movs
mov
dec
jno
adc
mov
rcl
pop
add
adc
aad
fucom
push
in
adc
out
shl
gs
push
loopne
dec
aad
dec
movs
aad
retf
adc
jge
mov
sub
inc
xor
(bad)
jg
mov
dec
aas
cs
add
jmp
lea
loopne
rcr
xchg
jmp
jmp
adc
std
sbb
test
jnp
dec
ret
mov
adc
std
jae
sbb
in
loopne
movs
sub
fs
test
les
movs
shl
mov
adc
cmc
aas
pop
pushf
mov
add
and
iret
aad
sahf
adc
cmc
inc
inc
and
inc
sub
cwde
pop
sbb
rcl
add
rcl
pop
fldcw
push
out
xchg
add
(bad)
and
cmc
lds
shl
add
xor
aad
in
(bad)
xor
sbb
cmps
sbb
add
adc
sar
nop
rcl
lds
fwait
cmp
push
jnp
push
in
mov
scas
push
xor
adc
mov
mov
sbb
lds
push
sbb
and
push
fcmovu
rcl
push
jecxz
adc
mov
push
push
out
retf
cmp
mov
(bad)
fcom
cmp
fiadd
cmp
push
cmp
movs
mov
hlt
jecxz
sbb
xchg
jo
call
pop
cwde
shl
sbb
xchg
mov
xor
nop
xor
add
out
push
push
xor
inc
pop
sbb
fdiv
mov
add
aaa
retf
and
sbb
push
les
les
xchg
pop
mov
push
add
inc
adc
mov
ror
xor
inc
xor
push
add
nop
cdq
nop
fisubr
inc
xor
push
jg
push
call
sub
xor
and
rcl
(bad)
rol
add
add
xor
inc
mov
push
popa
adc
mov
rcl
js
outs
xchg
push
add
and
stc
aam
mov
and
push
stc
inc
xchg
outs
scas
xchg
jno
out
jge
adc
mov
add
shl
rcr
mov
mov
add
nop
mov
lds
and
adc
popf
sbb
add
out
test
iret
or
mov
pop
test
pop
push
push
(bad)
aaa
(bad)
pop
and
mov
sub
pandn
call
out
fwait
sub
pop
ret
ja
push
ret
mov
call
pop
pop
(bad)
hlt
xchg
jecxz
mov
loopne
(bad)
ret
mov
xor
test
push
in
dec
shl
fild
(bad)
jmp
push
sbb
scas
pushf
xchg
sub
dec
pushf
cwde
std
scas
inc
and
xchg
movs
mul
pop
out
and
mov
hlt
pop
cs
push
out
rcl
popf
adc
es
(bad)
pop
(bad)
aaa
push
call
outs
sbb
pop
or
ret
mov
pop
inc
and
(bad)
in
jmp
mov
neg
cwde
inc
xchg
xor
out
xchg
and
(bad)
pushf
push
jp
pop
pop
cmp
(bad)
test
xchg
fild
or
mov
add
jle
mov
mov
call
mov
xlat
outs
xchg
imul
jns
jmp
or
xchg
psubq
sub
sahf
jmp
mov
xor
sbb
and
jp
xchg
(bad)
jecxz
jnp
imul
mov
aaa
ins
pop
arpl
cmps
test
and
jg
neg
xlat
imul
call
dec
call
and
dec
outs
and
sbb
push
pop
out
aaa
push
pop
add
dec
cmp
mov
(bad)
imul
mov
sbb
jecxz
dec
jmp
xor
mov
mov
xchg
rcr
inc
vmptrld
orps
and
cwde
xchg
(bad)
out
arpl
inc
daa
xchg
dec
pop
addr16
outs
cmp
sbb
aas
pop
ror
addr16
ret
ja
pop
xlat
ror
popa
mov
daa
and
or
lahf
imul
cmp
lahf
cmps
cmps
addr16
cmp
pop
aad
mov
xchg
xlat
pop
cmps
fisttp
xor
mov
cmp
aas
xor
loop
div
in
loope
iret
mov
mov
retf
test
sub
out
push
jmp
add
daa
outs
(bad)
sub
cmps
iret
push
retf
outs
xchg
jmp
shufps
dec
cmps
out
(bad)
sub
daa
dec
xchg
sub
xchg
push
add
inc
daa
sbb
fld
cs
or
loope
ins
jg
fld
mov
fisub
or
aaa
inc
mov
fwait
retf
movs
retf
lds
es
iret
mov
xor
(bad)
imul
mov
mov
aaa
mov
dec
addr16
lods
aas
out
cs
aad
sbb
add
addr16
addr16
add
daa
call
and
inc
sub
daa
xchg
daa
sub
jmp
stos
mov
push
dec
out
out
lds
mov
cmps
popa
(bad)
xlat
bound
ja
ret
loop
push
add
pop
sub
push
js
mov
fcmovnu
cmp
call
fwait
loope
mov
(bad)
aas
cmp
push
mov
xchg
retf
shr
(bad)
add
call
mov
or
and
lods
and
xchg
lahf
(bad)
mov
xchg
pop
push
aas
push
sub
xchg
xchg
shl
pextrw
add
xchg
cmc
sbb
add
pop
cmp
xchg
aaa
inc
repz
jecxz
loopne
clc
pop
or
jo
add
scas
xchg
out
xchg
out
xlat
lods
aam
push
outs
push
outs
(bad)
scas
(bad)
scas
mov
xor
imul
int3
mov
outs
adc
adc
push
ss
push
aam
ret
jp
jae
cmp
in
aam
aam
adc
lods
aad
xchg
icebp
cmp
add
mov
add
jae
arpl
or
add
cmp
cmp
pushf
aad
rol
push
pushf
add
and
cmp
fstp
dec
fistp
pop
pop
mov
stos
inc
(bad)
das
in
aad
mov
jmp
cmps
retf
dec
cvtps2pd
adc
xor
data16
cld
mov
stos
jo
loope
sub
push
retf
int
pop
pop
add
cmps
test
and
out
mov
enter
sub
or
jg
mov
or
jno
xor
stos
xchg
loopne
mov
mov
jno
sub
jmp
stos
in
jp
bnd
mov
jge
mov
pop
das
jp
sbb
mov
repz
mov
fwait
xlat
sbb
ret
pop
add
int
or
jle
js
sub
je
lods
dec
out
bound
js
aas
call
mov
xchg
xchg
rcl
js
push
(bad)
cs
xor
dec
test
inc
out
inc
jae
std
aad
into
bswap
pop
push
push
dec
xchg
ins
rcl
xor
adc
je
cmps
inc
rcl
gs
rol
and
and
dec
gs
add
mov
push
scas
ins
xchg
ins
jne
adc
xor
into
gs
mov
jb
dec
arpl
add
mov
xchg
inc
loopne
data16
aad
loop
loop
outs
or
xor
cmc
add
adc
inc
xchg
fs
ret
dec
inc
test
cmp
xchg
and
rcl
rcl
mov
adc
push
shl
push
xchg
add
out
xchg
arpl
aaa
and
lock
outs
cli
push
jmp
pop
sub
cld
aas
cwde
push
fdiv
jl
sbb
inc
int
int
mov
test
or
jl
into
jle
pop
xchg
pop
jne
xor
(bad)
jl
fnstcw
mov
jge
arpl
xor
rcr
dec
loopne
shl
mov
dec
into
jbe
pop
jl
mov
or
fadd
adc
xchg
jp
pop
cdq
ds
pop
fbstp
push
dec
add
jne
push
xchg
xor
pop
fnstenv
add
and
push
popf
push
rcr
cmp
jl
lea
fld
xchg
xor
pop
sbb
push
mov
je
and
pop
jecxz
jmp
push
xchg
loope
adc
aaa
mov
idiv
push
add
ds
ss
adc
into
adc
into
js
push
or
in
push
or
sub
or
ins
push
or
sub
or
in
push
or
sub
or
ins
push
or
sub
push
or
xor
jno
push
or
in
push
or
push
xor
jle
dec
cmp
(bad)
and
pusha
inc
xor
ja
pop
aas
imul
dec
aas
js
ins
push
aas
xor
inc
rcr
pop
jp
ss
and
cmp
ret
daa
cmp
push
ins
pusha
or
inc
push
imul
sub
bound
or
and
in
add
sub
pop
push
add
or
cmps
or
sub
adc
or
dec
ds
inc
xor
sahf
jmp
in
mov
mov
inc
(bad)
jmp
in
sub
sbb
mov
adc
ret
cdq
dec
inc
push
aad
movs
pop
inc
std
xchg
jg
and
xchg
push
jg
out
jmp
or
clc
out
sub
into
outs
inc
jl
inc
out
push
call
adc
adc
cwde
jmp
xchg
xor
rcl
sar
lock
push
inc
fs
and
add
nop
sbb
jae
data16
add
mov
push
ret
pop
std
jne
xchg
jae
aas
xchg
jno
out
dec
mov
aas
jmp
arpl
dec
lock
mov
adc
xchg
inc
test
stos
cmps
popa
fild
push
cmc
mul
sbb
sbb
hlt
aam
xchg
aam
xor
es
xchg
adc
mov
xchg
sbb
pop
aad
aad
xchg
jbe
and
mov
add
rep
fs
test
jbe
xor
movs
mov
int3
adc
jne
xchg
adc
(bad)
jno
inc
leave
xchg
mov
inc
xchg
push
test
test
shr
adc
out
(bad)
adc
in
xchg
mov
addr16
mov
je
cmc
je
aad
inc
shl
aam
mov
mov
push
out
not
push
loope
mov
and
ja
out
repnz
jae
div
mov
push
xor
mov
inc
call
lock
sahf
jg
inc
jb
mov
mov
das
push
je
rcr
and
adc
add
add
cdq
dec
mov
push
lock
sub
shl
mov
(bad)
cmp
cmp
xor
jns
addr16
inc
clc
jo
inc
or
cdq
adc
fs
jne
xchg
aam
movs
es
xchg
inc
xchg
jne
not
inc
sbb
movs
inc
retf
jo
clc
xor
mov
inc
cmp
sub
pop
cmps
pop
test
std
inc
pop
inc
push
repz
repnz
icebp
mov
(bad)
gs
xchg
ret
in
cmp
out
xchg
movs
(bad)
stos
cmp
dec
mov
stos
mov
add
add
test
xchg
fs
int
lea
adc
xchg
fnsave
ror
cwde
push
fnstsw
pop
sub
lods
in
pusha
fst
cmp
ss
mov
and
inc
stc
arpl
xor
in
dec
inc
loope
jmp
leave
xchg
retf
sbb
test
and
adc
aad
jecxz
xchg
(bad)
out
xchg
enter
sub
mov
inc
xchg
sub
sub
pop
pusha
pop
sar
sbb
dec
mov
movs
inc
mov
jecxz
out
xchg
add
loope
imul
movs
cwde
add
add
and
(bad)
loope
leave
cld
ror
jle
sub
dec
fmul
faddp
cld
fdivr
out
pusha
jmp
fstp
cwde
mov
js
pop
push
pop
leave
outs
lods
test
lods
lods
out
fisub
lea
sbb
in
inc
fdiv
jmp
or
mov
mov
fisubr
cmp
daa
shl
cmp
sbb
fisub
dec
fidivr
dec
sahf
lods
sub
std
xor
sbb
pop
pop
lods
ds
leave
mov
cmp
lock
aad
retf
fstp
dec
mov
cld
mov
jns
fdivr
mov
sbb
xor
jns
or
fcom
in
out
sub
or
dec
cs
mov
add
retf
mov
js
sub
mov
xlat
shl
cmps
sbb
pop
and
popa
repz
into
pop
clc
cmp
sub
cmp
sub
cmp
test
cmp
sub
int
push
mov
pop
cmp
repz
sti
pop
cld
xor
or
push
(bad)
enter
push
mov
cmp
arpl
out
ins
dec
aam
push
dec
and
inc
jle
dec
sub
or
jmp
mov
out
fmul
retf
inc
lods
sub
out
ins
test
mov
pop
push
sub
das
mov
sbb
mov
pop
sbb
jge
add
mov
jmp
scas
inc
into
mov
(bad)
lea
das
add
inc
mov
outs
xor
sub
adc
pop
mov
add
dec
popf
push
dec
das
ins
jl
inc
stos
out
mov
idiv
inc
inc
pop
dec
jle
push
and
ror
push
neg
or
into
sub
loope
mov
xchg
sub
or
inc
xor
jbe
into
in
hlt
sbb
xor
sub
test
pushf
sub
imul
test
mov
sub
sub
stos
sbb
jb
xchg
and
and
stos
or
into
dec
iret
push
jmp
jmp
and
mov
or
sub
(bad)
cs
push
fwait
jecxz
dec
fucomp
cmp
nop/reserved
sbb
outs
inc
mov
int
retf
add
or
retf
mov
xor
ins
popf
adc
sbb
mov
dec
inc
(bad)
retf
xchg
sbb
loopne
xchg
adc
jmp
fadd
gs
aad
int
xchg
fcomp
push
aad
out
stos
retf
jmp
and
cmp
bound
or
ss
imul
pop
mov
out
cli
or
es
lahf
and
scas
lds
enter
imul
or
cmp
gs
cmp
(bad)
sbb
jmp
outs
retf
int
sti
mov
inc
push
jmp
xchg
sub
mov
jbe
ficomp
cmc
aam
sbb
mov
xchg
dec
outs
and
or
in
or
pmuludq
(bad)
sbb
dec
sbb
mov
mov
fidivr
adc
fwait
sub
pop
push
add
leave
jnp
jg
jg
pop
bnd
xchg
jmp
xor
mov
add
and
push
dec
ret
and
cld
xor
push
or
adc
jo
mov
lock
stc
lock
out
setp
cmp
lock
and
jae
sbb
sub
inc
mov
das
jno
stc
das
rcr
xor
push
add
loope
inc
cmc
leave
jg
loopne
jg
std
aas
pop
dec
into
add
pop
push
or
mov
fnstsw
adc
ret
cmp
retf
jb
fisub
out
and
sbb
movs
dec
test
jmp
inc
push
and
jg
loopne
jae
xor
pushf
sar
add
pop
add
stos
aas
mov
mov
rol
repnz
sar
mov
sti
sar
xor
adc
ds
lock
out
mov
fisttp
dec
and
lods
loope
pop
push
int
loop
adc
or
fldenv
ins
inc
sbb
lahf
push
lods
and
mov
fmul
dec
fsub
inc
jmp
call
mov
xchg
outs
jg
pop
loopne
in
inc
inc
xchg
pop
or
int
das
fdiv
xor
scas
push
mov
adc
in
arpl
stos
jbe
dec
fwait
call
retf
xlat
push
imul
mov
xchg
and
test
enter
stos
jb
xchg
cwde
cwde
jbe
es
or
adc
sub
scas
dec
jp
pop
push
cmps
(bad)
adc
mul
mov
mov
div
and
jle
push
xchg
dec
xchg
mov
sti
out
es
cmps
mov
cmps
sbb
fistp
fist
pop
je
jno
das
xchg
sbb
ret
cmp
jle
xchg
aaa
popw
mov
push
ss
mov
mov
shr
sbb
jo
xchg
push
jnp
fld
xor
xchg
aaa
retf
xchg
cmp
mov
mov
sub
fsub
fimul
mov
std
ss
or
pop
stos
add
sub
mov
add
dec
sbb
pop
cmp
sub
and
push
sbb
mov
out
out
cmps
adc
jb
push
loopne
mov
mov
dec
cdq
stc
jae
sub
outs
sub
leave
mov
jmp
les
cdq
(bad)
lock
xchg
(bad)
mov
pop
dec
inc
stos
jae
xchg
in
les
fst
dec
xchg
test
pop
add
lock
movs
jmp
xchg
mov
mov
inc
sar
stos
adc
mov
add
addr16
jnp
jmp
(bad)
dec
adc
cwde
retf
or
dec
add
cmp
pop
pop
hlt
push
mov
pop
(bad)
popf
(bad)
retf
cmp
add
ror
retf
mov
cmp
lahf
aaa
(bad)
jmp
cmps
sub
in
in
les
pop
inc
adc
in
ja
mov
mov
xchg
enter
aaa
or
push
xchg
es
xchg
mov
retf
xlat
stos
mov
ja
inc
adc
xchg
push
dec
(bad)
out
js
pop
xchg
iret
mov
stos
sbb
clc
pop
test
retf
jmp
mov
mov
loopne
aam
or
add
dec
ins
add
jg
pop
mov
cmps
cmps
and
mov
test
es
fs
inc
xchg
sbb
repz
sar
jo
das
cs
push
jno
mov
push
test
gs
popf
jecxz
movs
es
ss
bound
jb
push
shl
push
ror
scas
and
xchg
sti
cmp
or
xor
mov
mov
or
inc
dec
push
cmp
stos
pop
sti
icebp
and
and
jg
addr16
cs
mov
cmp
cmp
fmul
inc
mov
cmp
mov
cmp
aaa
and
mov
adc
jge
mov
scas
xor
push
cdq
and
dec
dec
dec
push
jae
jo
push
sbb
inc
sub
dec
xor
jge
bound
jmp
mov
inc
or
popf
xor
mov
push
mov
pop
lods
fcmove
mov
pushf
ds
push
cs
xor
sahf
ins
pop
dec
lods
push
sub
push
je
xor
add
clc
sbb
icebp
stos
iret
dec
xor
mov
dec
sub
je
cmps
jecxz
test
cwde
push
lods
inc
dec
or
xor
inc
mov
sub
push
loope
and
adc
nop
shl
xlat
jnp
jge
inc
or
or
ds
retf
in
push
mov
push
bound
js
enter
adc
adc
jmp
loope
jmp
in
jp
xchg
(bad)
jne
call
mov
fs
add
sub
xor
mov
call
add
sbb
mov
jmp
sub
sub
ins
hlt
js
daa
call
xchg
sbb
push
push
adc
loope
rcr
out
popf
push
std
jmp
pop
push
jp
xchg
data16
(bad)
mov
push
xlat
push
js
inc
mov
push
bound
lods
mov
dec
cmp
ins
dec
mov
stos
jmp
sbb
dec
pop
dec
call
out
jp
mov
sub
std
call
jge
call
mov
dec
jmp
dec
fs
retf
jmp
fimul
and
mov
jmp
mov
xor
pop
mov
xchg
ds
add
push
aas
icebp
int
mov
jbe
sbb
xor
xor
cmps
mov
std
adc
push
rcr
sub
sar
and
pusha
scas
xchg
pop
stc
pop
xchg
jge
imul
add
mov
sbb
std
fs
add
jge
inc
jmp
adc
cmps
mov
sbb
cmp
pop
push
cld
add
adc
pop
bound
xchg
sbb
cmp
cmp
repz
xchg
ja
xor
and
test
pop
daa
aam
push
sub
cmp
movs
adc
xor
idiv
push
stos
adc
inc
inc
popf
fdiv
jle
call
mov
retf
and
push
mov
push
fisub
xchg
sbb
cmp
and
or
sub
mov
sub
mov
das
lds
aam
adc
movs
inc
lods
push
sub
pop
test
into
pop
lods
and
pop
das
gs
cmp
ja
mov
xchg
mov
xor
jge
sub
or
and
push
push
add
mov
mov
dec
cmps
into
aaa
pop
icebp
sub
pusha
add
lahf
cmp
aas
cmc
adc
mov
adc
pusha
push
popa
fs
mov
or
jb
push
jb
xchg
cwde
jb
jmp
div
dec
outs
sbb
or
xor
or
enter
cld
in
repnz
cmp
or
movs
mov
pushf
pushf
sub
(bad)
pop
xlat
mov
jno
inc
pop
stos
int
sar
dec
cmp
test
inc
lahf
and
adc
rcr
xchg
pop
sub
pop
push
fcom
inc
and
mov
dec
int3
push
dec
push
pushf
sti
mov
imul
pop
mov
sub
ins
aam
addr16
fild
jecxz
push
sub
inc
jo
xchg
iret
mov
adc
movs
dec
push
push
nop
cmp
xor
shl
fsubr
jb
hlt
jo
sbb
repnz
ficom
add
mov
add
pop
nop
mov
dec
push
pop
mov
rol
sbb
pop
nop
add
cmc
shl
ja
repnz
inc
sbb
jge
jns
movs
pop
aaa
xor
aam
retf
or
sbb
push
out
lods
mov
adc
adc
imul
repnz
mov
mov
movs
pop
and
sub
mov
lods
lahf
mov
push
or
cmc
test
aam
adc
shl
shl
inc
(bad)
out
pusha
push
loop
pop
ret
sbb
dec
pop
xor
push
mov
pop
(bad)
push
jmp
push
popf
fadd
daa
dec
jmp
add
sbb
adc
push
mov
leave
loop
ins
shl
push
xor
pop
repnz
jb
add
int3
fs
inc
pushf
fcmovb
cs
daa
jno
(bad)
lea
in
rcr
jmp
inc
(bad)
push
push
ret
test
lock
aad
xor
jecxz
inc
and
stos
mov
call
lahf
push
add
sbb
(bad)
je
mov
xor
jne
adc
fld
add
sbb
lds
dec
mov
adc
add
fcom
mov
cld
aas
jg
dec
movs
mov
pusha
mov
xchg
rcl
inc
cmp
lods
jge
(bad)
std
stc
out
mov
push
cld
jnp
push
leave
repnz
in
dec
dec
and
mov
pushf
ja
loop
pop
imul
je
mov
icebp
sub
jb
xchg
fmul
add
push
enter
pop
pusha
mov
mov
or
mov
ins
fiadd
int3
fcom
ins
dec
sbb
xor
or
push
(bad)
repnz
jbe
cmp
xor
or
cmps
hlt
xlat
into
shl
jmp
push
sbb
xchg
data16
dec
xchg
call
add
std
dec
adc
lods
fisubr
jno
repz
jge
jno
cmp
add
sti
test
mov
dec
mov
xor
or
out
icebp
mov
sbb
mov
scas
cmps
stos
xlat
dec
jecxz
sbb
push
push
mov
jo
ins
cmp
addr16
dec
or
dec
pop
pop
cdq
imul
mov
out
or
xchg
jns
sbb
cmc
daa
sub
inc
sbb
add
dec
pop
retf
sbb
jp
push
mov
inc
fidivr
inc
ja
pop
sbb
movs
int3
jp
dec
outs
mov
adc
push
xor
jecxz
pushf
daa
add
int
inc
test
pop
adc
and
jmp
(bad)
push
push
pop
and
or
adc
int3
dec
lods
fwait
jge
jae
push
fadd
sbb
int3
js
inc
jmp
inc
add
out
mov
mov
fcmovu
sbb
lds
dec
and
js
xchg
rcl
movs
lds
arpl
push
je
sbb
loope
jo
loope
add
es
enter
cli
ins
fwait
adc
mov
leave
mov
in
movs
xlat
mov
out
(bad)
jge
mov
jmp
sub
sar
loope
aaa
cmp
sbb
shl
jmp
mov
retf
loopne
jbe
cmp
xor
inc
jecxz
xchg
sbb
pop
js
push
fdiv
inc
mov
or
cld
cmp
inc
dec
retf
mov
and
sub
jge
mov
push
or
sbb
lock
mov
dec
pop
pop
ins
mov
rcl
mov
xchg
ins
test
xlat
ret
lock
(bad)
dec
mov
repnz
jmp
rcr
dec
outs
(bad)
call
repnz
add
cmc
dec
inc
xor
aad
jp
pushf
cdq
mov
mov
(bad)
out
dec
cwde
cmp
xchg
imul
(bad)
jge
mov
pop
ret
js
call
ret
pop
lea
jo
(bad)
(bad)
sbb
cmp
xor
sbb
movs
aam
push
fmul
mov
xor
loope
pushf
pop
mov
inc
and
xchg
test
jb
xchg
stc
out
loop
stos
or
int
movs
sbb
shl
cmp
sbb
js
inc
pushf
minps
mov
out
dec
fist
push
call
dec
(bad)
inc
inc
cmp
jbe
jae
lock
or
add
fs
ret
fcomi
(bad)
mov
test
cmp
loope
push
js
cmp
or
clc
adc
aas
mov
retf
(bad)
dec
push
xchg
cmps
shr
mov
sub
pop
adc
cmps
rcr
out
lods
jmp
mov
cmps
out
mov
xchg
sub
stc
fst
and
or
sub
xchg
ja
or
lods
and
loop
mov
stos
scas
jmp
fistp
jne
pop
sub
ins
je
add
and
loop
outs
cmps
in
aas
jmp
retf
lods
push
(bad)
in
out
js
bound
cli
xchg
scas
xor
pusha
push
mov
in
cmp
and
fmul
aam
jae
push
xor
xor
pop
cmc
pop
daa
into
scas
or
xchg
adc
nop
xor
mov
mov
stc
into
stc
mov
cld
hlt
push
jecxz
sub
cld
xchg
jl
into
sub
mov
ss
dec
shr
jb
xchg
mov
xor
pusha
mov
mov
jne
jecxz
mov
shl
mov
aad
icebp
jmp
adc
ins
mov
jp
cmp
ins
push
xor
cmps
loop
inc
sbb
xchg
cwde
mov
cs
lock
popf
and
push
add
in
cmp
sbb
mov
mov
lahf
sbb
xchg
xor
fbstp
mov
inc
mov
nop
popa
dec
xor
rcl
sbb
cmp
add
add
push
push
push
mov
sub
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
mov
mov
mov
pop
ret
push
push
lea
push
mov
call
call
mov
mov
mov
push
lea
push
push
push
push
mov
call
add
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
cmp
je
cmp
je
lea
call
mov
push
lea
mov
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
test
je
call
mov
mov
push
push
call
add
mov
lea
call
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
mov
mov
mov
pop
ret
push
push
lea
push
mov
call
call
mov
mov
push
mov
lea
push
push
push
push
mov
call
add
lea
push
mov
call
mov
call
test
je
mov
call
test
je
lea
push
mov
call
call
mov
push
call
movzx
push
push
lea
push
push
call
add
lea
push
mov
call
cmp
je
mov
test
je
call
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
call
mov
push
lea
mov
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
jne
mov
call
call
push
push
lea
call
push
lea
push
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
add
mov
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
call
mov
mov
mov
mov
push
push
call
mov
mov
test
sete
movzx
mov
push
mov
push
mov
push
push
push
push
call
add
cmp
je
mov
test
je
mov
push
push
xor
call
test
je
lea
cmp
jge
call
mov
mov
push
push
push
push
call
add
push
call
mov
mov
push
push
add
call
test
jne
mov
mov
push
push
call
test
je
call
mov
push
push
push
mov
call
add
mov
call
call
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
lea
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
mov
pop
jne
call
mov
push
push
mov
call
mov
add
call
call
push
push
jmp
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
test
je
mov
push
push
call
test
jne
mov
jmp
mov
jmp
mov
call
mov
mov
push
push
mov
push
push
push
mov
call
add
jmp
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
test
je
cmp
je
cmp
je
push
lea
call
mov
mov
push
lea
mov
call
mov
push
lea
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
pop
je
mov
call
test
je
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
mov
call
mov
mov
lea
push
push
push
push
mov
call
mov
push
mov
call
lea
push
call
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
mov
push
call
ret
int3
push
mov
push
mov
mov
test
push
je
push
call
add
mov
cmp
mov
je
xor
mov
mov
mul
seto
neg
or
push
call
add
test
mov
jne
call
lea
push
push
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
mov
jne
mov
mov
pop
pop
ret
push
call
test
mov
jne
push
call
int3
int3
int3
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
test
je
mov
mov
push
call
mov
mov
mov
pop
ret
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
mov
pop
ret
push
mov
sub
lea
push
call
mov
mov
lea
push
push
push
push
mov
call
call
mov
mov
push
push
push
mov
call
add
lea
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
call
mov
mov
xor
div
mov
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
push
push
call
add
test
jne
mov
test
jne
pop
pop
xor
pop
pop
ret
pop
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
add
push
call
add
add
mov
mov
lea
call
call
mov
mov
push
push
push
push
mov
call
mov
add
push
call
mov
push
push
push
push
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
xor
cmp
je
cmp
jbe
push
lea
mov
mov
test
mov
je
lea
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
add
cmp
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
fld
sub
fstp
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
lea
mov
mov
call
mov
lea
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
mov
mov
call
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
movzx
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
test
je
mov
mov
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
call
mov
mov
mov
push
mov
push
push
push
push
push
mov
call
add
lea
call
mov
mov
lea
push
push
mov
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
push
call
push
push
push
call
push
call
mov
push
push
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
mov
mov
test
je
mov
mov
push
call
mov
lea
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
lea
call
lea
mov
call
push
push
push
call
push
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
push
push
call
mov
test
jne
call
mov
mov
call
push
mov
push
push
call
add
jmp
xor
mov
mul
seto
neg
or
push
call
mov
add
mov
mov
mov
push
push
call
test
jne
call
mov
mov
call
push
mov
push
push
call
mov
push
call
add
jmp
lea
call
mov
mov
mov
cmp
je
push
call
push
lea
push
push
mov
mov
call
add
push
push
push
push
push
push
lea
push
push
call
cmp
jl
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
lea
call
mov
mov
push
sub
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
je
lea
push
push
mov
mov
push
call
mov
mov
lea
call
cmp
je
add
cmp
jne
add
cmp
jne
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
call
add
lea
push
call
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
call
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
push
call
add
lea
call
mov
lea
call
test
jne
call
mov
mov
push
push
push
push
mov
call
add
jmp
mov
add
push
call
add
add
mov
mov
push
push
lea
call
mov
lea
jmp
lea
mov
add
sub
jne
mov
lea
push
push
call
mov
cmp
je
mov
lea
mov
add
push
call
add
add
mov
mov
lea
push
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
lea
call
test
je
lea
push
push
call
add
test
je
lea
push
push
call
add
test
je
push
push
lea
mov
mov
push
call
mov
mov
lea
call
lea
push
push
call
mov
neg
sbb
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
push
call
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
push
jne
mov
push
push
lea
push
call
mov
mov
shl
add
lea
js
mov
mov
mov
sub
sub
test
jge
mov
xor
test
setne
test
jne
call
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
mov
push
mov
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
mov
add
test
mov
mov
jne
mov
mov
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
mov
push
lea
mov
call
lea
call
mov
push
add
call
add
cmp
jg
lea
push
lea
push
lea
call
mov
call
test
je
push
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
lea
call
jmp
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
cmp
sete
test
push
je
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
mov
mov
push
call
mov
mov
lea
call
jmp
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
push
lea
push
lea
call
mov
call
sub
lea
fstp
call
mov
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
add
call
add
cmp
jle
mov
push
push
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
lea
push
mov
call
add
mov
mov
mov
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
xor
jmp
call
push
push
jmp
call
push
push
push
lea
call
push
lea
push
jmp
sbb
sbb
test
sete
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
mov
mov
push
push
push
push
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
je
mov
test
je
push
call
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
mov
push
push
mov
call
cmp
jne
call
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
test
push
jne
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
not
test
push
mov
je
mov
push
mov
call
cmp
je
xor
cmp
mov
jbe
mov
mov
test
je
push
push
push
call
push
lea
push
push
call
mov
test
jne
mov
add
cmp
mov
jb
pop
pop
pop
mov
mov
mov
pop
ret
mov
call
mov
test
je
jmp
lea
push
push
push
push
lea
sub
push
mov
call
mov
push
lea
push
push
call
push
lea
push
push
call
mov
lea
push
lea
push
push
mov
mov
call
test
jne
cmp
jne
mov
xor
mov
mov
mul
seto
neg
or
push
call
xor
add
test
setne
mov
test
je
lea
push
push
push
call
mov
mov
add
xor
cmp
setne
test
je
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
push
call
test
jne
mov
pop
pop
pop
mov
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
xor
mov
mov
push
push
call
cmp
jne
mov
lea
call
pop
pop
mov
mov
mov
pop
ret
mov
push
lea
push
lea
push
lea
push
mov
mov
call
cmp
je
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
lea
push
push
push
lea
push
push
push
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
mov
push
call
mov
lea
call
pop
pop
pop
mov
mov
mov
pop
ret
push
call
cmp
mov
jne
push
call
mov
push
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
lea
mov
add
sub
jne
mov
mov
mul
seto
mov
neg
or
push
call
add
xor
test
mov
jbe
lea
lea
xor
mov
mov
jmp
lea
mov
test
jl
mov
cmp
jge
mov
add
mov
test
jne
xor
mov
jmp
push
call
mov
test
mov
je
mov
mov
lea
test
mov
je
test
jne
xor
jmp
push
call
push
push
call
mov
mov
mov
mov
mov
push
call
sub
sub
add
add
cmp
jb
mov
mov
mov
lea
lea
mov
add
sub
jne
lea
push
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
push
push
push
or
mov
mov
push
push
mov
call
mov
push
mov
call
add
test
jge
call
mov
mov
mov
push
push
push
push
push
call
add
mov
lea
push
call
jmp
call
mov
mov
call
test
je
push
mov
call
mov
push
call
mov
lea
push
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
push
call
test
jne
lea
call
mov
mov
mov
push
push
lea
call
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
mov
mov
pop
mov
pop
ret
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
push
push
mov
mov
mov
mov
push
push
push
call
mov
mov
sub
mov
sub
mov
lea
sub
add
or
mov
jge
push
mov
call
mov
mov
mov
push
push
add
push
mov
lea
push
call
add
test
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
mov
lea
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
push
mov
call
mov
mov
add
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
pop
mov
mov
mov
pop
ret
push
push
lea
push
push
lea
push
push
call
test
je
mov
mov
test
jbe
push
lea
push
lea
call
mov
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
push
lea
push
push
call
test
jne
push
call
pop
xor
pop
mov
mov
mov
pop
ret
push
call
mov
pop
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
push
mov
push
mov
mov
jne
call
cmp
jne
call
mov
cmp
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
lea
call
push
call
add
add
mov
mov
pop
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
push
mov
mov
mov
mov
cmp
mov
mov
je
push
lea
mov
or
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
cmp
mov
mov
jne
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
call
mov
mov
push
lea
call
mov
lea
push
lea
push
mov
call
mov
mov
lea
call
test
pop
je
lea
push
lea
push
call
mov
mov
push
mov
push
call
add
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
sub
push
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
mov
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
test
je
lea
push
mov
call
mov
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
lea
push
lea
push
call
add
mov
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
call
add
test
je
mov
push
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
push
mov
call
mov
mov
push
push
push
push
call
call
mov
mov
push
push
push
call
push
call
mov
add
test
jle
push
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
mov
call
xor
test
setne
test
je
mov
mov
mov
call
add
mov
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
je
sub
je
sub
jne
push
lea
push
lea
call
mov
call
push
push
lea
push
jmp
push
lea
push
lea
call
mov
call
sub
fstp
lea
push
push
call
add
jmp
push
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
lea
push
call
add
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
test
jg
pop
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
call
mov
add
pop
pop
mov
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
push
mov
mov
push
push
push
mov
call
push
mov
mov
call
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
call
mov
mov
add
cmp
ja
jmp
call
mov
mov
mov
push
push
push
call
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
mov
call
push
call
add
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
add
call
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
pop
mov
mov
pop
ret
push
inc
dec
add
dec
add
inc
dec
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
push
or
test
jne
or
mov
mov
call
push
mov
mov
call
add
mov
mov
test
jne
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
mov
mov
add
mov
cmp
je
call
cmp
mov
jne
call
mov
mov
mov
push
push
push
push
call
add
cmp
jne
call
mov
jmp
call
mov
mov
push
push
push
call
add
mov
mov
pop
pop
mov
pop
ret
mov
push
push
push
call
add
test
je
mov
test
jne
lea
call
mov
mov
test
jne
mov
mov
push
mov
lea
push
push
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
call
mov
mov
pop
pop
mov
pop
ret
cmp
jne
cmp
jbe
mov
call
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
call
mov
mov
push
push
call
mov
push
call
push
push
call
xor
add
test
mov
mov
jne
mov
mov
mov
push
lea
push
lea
call
mov
test
je
test
je
push
call
add
mov
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
test
jne
mov
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
mov
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
je
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
mov
push
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
push
lea
call
mov
push
lea
push
mov
call
mov
push
push
lea
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
pop
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
mov
sub
call
test
je
push
call
pop
mov
pop
ret
push
mov
jmp
dec
cmp
je
mov
call
add
cmp
jne
pop
ret
jmp
push
mov
jmp
dec
cmp
je
mov
push
call
add
cmp
jne
pop
ret
jmp
push
mov
push
mov
push
call
push
call
add
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
push
call
push
call
add
mov
mov
jmp
mov
cmp
jne
mov
shl
push
call
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jge
mov
sub
push
lea
push
call
jmp
jle
sub
push
lea
push
call
pop
pop
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
mov
cmp
jl
shl
push
call
mov
mov
shl
push
push
mov
shl
push
push
call
mov
mov
sub
push
lea
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
test
push
mov
jge
call
cmp
jl
push
lea
push
call
mov
push
lea
call
pop
pop
ret
push
mov
mov
push
not
test
mov
push
mov
je
push
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
jmp
call
push
push
mov
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
pop
pop
pop
ret
mov
ret
mov
ret
mov
and
mov
ret
xor
ret
push
mov
push
mov
test
jne
mov
jmp
and
push
push
push
call
test
mov
pop
pop
jne
push
push
call
test
pop
pop
jne
lea
push
push
call
test
pop
pop
jne
mov
jmp
mov
xor
pop
pop
pop
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
xor
pop
ret
mov
and
mov
ret
push
push
push
mov
call
test
pop
pop
je
mov
add
neg
sbb
and
jmp
xor
pop
ret
push
mov
push
add
call
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
call
pop
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
push
call
pop
ret
mov
mov
mov
push
call
ret
mov
mov
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
call
xor
ret
mov
mov
ret
xor
inc
ret
mov
mov
mov
mov
xor
ret
xor
inc
ret
xor
inc
ret
mov
and
mov
ret
push
mov
test
jne
mov
jmp
and
push
mov
cmp
je
mov
mov
call
test
je
mov
mov
push
call
mov
mov
xor
jmp
mov
pop
pop
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jl
cmp
jge
mov
lea
ret
push
push
push
push
call
int3
push
mov
push
push
lea
push
push
call
add
test
jge
push
call
mov
leave
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
mov
push
call
xor
pop
ret
mov
test
jne
mov
jmp
and
mov
test
je
mov
mov
push
call
xor
jmp
mov
ret
mov
test
je
mov
push
call
ret
push
mov
call
xor
cmp
jne
cmp
je
push
push
lea
push
push
push
call
pop
ret
push
mov
push
xor
cmp
jle
cmp
jne
call
cmp
push
jle
lea
push
mov
call
mov
push
push
call
test
pop
pop
je
inc
cmp
jl
xor
pop
pop
pop
ret
xor
inc
jmp
mov
mov
lea
test
je
mov
mov
mov
ret
push
push
push
mov
call
push
call
add
test
je
mov
mov
mov
add
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
mov
jne
mov
push
call
push
call
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
mov
je
mov
lea
push
call
mov
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
call
test
jl
mov
test
je
mov
lea
push
push
call
mov
test
mov
je
mov
push
call
and
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
je
cmp
jne
cmp
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
call
test
jne
inc
mov
mov
imul
lea
cmp
jne
jmp
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
and
push
call
push
call
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
call
mov
and
mov
movzx
and
test
jge
mov
lea
call
mov
lea
call
ret
movsx
cmp
jbe
mov
jmp
test
je
mov
shl
cmp
ja
push
call
test
pop
je
movsx
shl
call
mov
jmp
movsx
shl
push
lea
call
mov
jmp
xor
test
je
movsx
xor
test
jle
mov
sub
dec
shl
add
mov
movsx
inc
cmp
jl
mov
mov
test
je
sub
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
test
jne
lea
push
push
lea
push
movsx
push
movzx
push
push
lea
push
push
call
mov
lea
push
call
jmp
push
mov
call
mov
mov
lea
mov
and
mov
and
push
mov
mov
mov
push
push
call
and
mov
call
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
mov
mov
mov
lea
push
push
push
call
mov
mov
cmp
jne
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
mov
test
je
push
lea
call
push
mov
or
push
call
test
pop
pop
mov
je
mov
test
je
push
and
call
cmp
jne
inc
mov
imul
add
cmp
jne
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
mov
mov
call
imul
push
mov
mov
mov
mov
add
call
mov
test
je
xor
test
setne
mov
dec
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
xor
jmp
push
push
mov
call
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
and
test
je
push
push
call
jmp
xor
test
je
mov
xor
inc
call
ret
push
mov
call
mov
mov
call
test
je
xor
inc
jmp
mov
xor
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
or
cmp
mov
jne
cmp
je
mov
push
call
jmp
cmp
je
mov
push
call
xor
call
ret
push
mov
call
mov
push
lea
call
lea
xor
push
mov
call
mov
cmp
mov
je
mov
cmp
jne
push
call
push
push
lea
push
push
call
mov
push
push
lea
call
mov
push
push
lea
mov
call
mov
push
push
lea
mov
call
mov
push
lea
push
push
push
push
mov
push
call
mov
lea
push
call
lea
push
call
lea
push
call
lea
push
call
push
call
call
ret
push
mov
push
xor
lea
mov
mov
mov
cmp
je
push
push
call
mov
mov
mov
pop
pop
ret
push
mov
call
mov
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
cmp
jle
lea
push
mov
call
mov
mov
add
mov
cmp
je
inc
cmp
jl
or
test
je
mov
push
call
xor
call
ret
or
test
je
mov
push
call
xor
inc
jmp
push
mov
mov
mov
cmp
push
jne
test
jne
xor
inc
jmp
lea
test
jl
cmp
ja
push
push
push
call
add
test
je
mov
mov
push
mov
push
call
inc
xor
inc
pop
pop
ret
xor
jmp
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
push
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
call
mov
xor
test
setne
test
jne
push
call
and
mov
and
push
pop
lea
push
push
push
call
test
mov
jl
and
mov
lea
push
push
call
test
mov
jl
test
je
mov
cmp
je
test
jne
movzx
cmp
jne
push
push
call
pop
movzx
mov
pop
jmp
sub
je
sub
je
dec
je
movzx
jmp
push
jmp
push
jmp
push
pop
test
je
mov
mov
push
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
push
push
push
push
mov
xor
cmp
jne
mov
jmp
mov
lea
push
push
mov
call
cmp
jl
mov
push
xor
cmp
jbe
mov
lea
push
push
push
call
cmp
jl
mov
mov
cmp
je
mov
push
push
call
mov
mov
movzx
inc
cmp
jl
push
mov
push
call
mov
cmp
je
movzx
cmp
jle
mov
jmp
cmp
mov
jle
mov
add
mov
movzx
cmp
mov
jne
mov
mov
mov
or
mov
cmp
jne
mov
push
push
call
pop
mov
mov
pop
inc
movsx
inc
inc
add
cmp
jl
movzx
movzx
sub
je
dec
je
dec
je
dec
jne
push
jmp
xor
jmp
push
jmp
push
pop
mov
mov
mov
mov
mov
push
mov
mov
push
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
test
je
test
je
test
je
push
mov
mov
movs
movs
movs
movs
mov
mov
movs
movs
movs
xor
cmp
movs
mov
mov
mov
je
lea
push
push
mov
mov
push
call
mov
xor
cmp
jl
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
jl
mov
push
lea
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
lea
push
push
push
mov
call
test
jl
mov
cmp
je
push
mov
push
push
call
mov
jmp
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
lea
push
push
call
mov
cmp
jl
mov
lea
push
mov
mov
push
call
mov
cmp
je
xor
cmp
jbe
mov
mov
lea
push
push
push
call
mov
cmp
jl
cmp
je
mov
movzx
inc
cmp
jl
jmp
mov
mov
lea
push
push
push
call
mov
cmp
jl
mov
lea
push
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
cmp
je
push
push
push
push
call
mov
mov
add
push
push
call
mov
cmp
je
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
pop
jmp
mov
mov
pop
xor
pop
call
leave
ret
push
push
push
push
call
ret
mov
push
push
push
call
ret
push
mov
push
and
push
mov
push
push
call
push
mov
push
mov
push
push
lea
push
push
mov
call
test
je
mov
jmp
mov
push
mov
call
mov
lea
push
push
mov
push
call
test
jge
mov
jmp
test
je
mov
mov
imul
mov
call
mov
mov
push
lea
call
mov
mov
mov
call
cmp
je
test
je
xor
cmp
mov
setne
dec
mov
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
mov
test
mov
je
push
lea
push
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
push
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
test
jl
and
and
lea
push
movzx
push
push
movzx
push
lea
push
call
mov
test
mov
jge
or
test
je
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
mov
test
jge
mov
or
test
je
mov
push
call
mov
jmp
lea
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
call
ret
mov
test
jne
mov
jmp
push
push
push
push
push
call
add
ret
push
mov
call
mov
mov
call
mov
xor
lea
mov
mov
mov
call
mov
mov
lea
call
lea
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
call
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
lea
call
lea
call
lea
call
mov
sub
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
sub
call
or
mov
call
call
ret
lea
push
push
push
add
call
ret
push
mov
mov
test
je
mov
push
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
push
push
call
test
pop
pop
je
inc
mov
imul
add
cmp
jne
mov
jmp
imul
mov
mov
mov
lea
push
push
lea
push
mov
push
call
test
jge
xor
jmp
push
lea
push
mov
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
lea
mov
call
test
je
push
xor
cmp
push
jle
push
lea
call
mov
push
push
push
call
push
mov
call
inc
cmp
jl
lea
call
xor
cmp
jle
lea
push
mov
call
mov
add
mov
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
add
push
add
push
push
lea
call
push
mov
call
mov
test
mov
je
mov
call
push
call
pop
inc
cmp
jl
lea
call
pop
pop
pop
leave
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
pop
mov
push
push
push
mov
call
cmp
je
cmp
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
mov
mov
push
push
call
test
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
sub
push
push
push
push
xor
push
mov
call
pop
mov
call
lea
push
push
call
cmp
jne
push
mov
call
push
mov
call
mov
cmp
je
mov
call
cmp
je
mov
lea
push
push
push
call
test
jl
push
lea
call
mov
lea
cmp
jne
push
push
push
push
push
lea
push
push
push
lea
push
mov
call
mov
call
mov
push
push
push
call
test
jge
mov
mov
call
mov
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
push
push
push
push
push
mov
call
pop
pop
xor
pop
inc
pop
add
ret
push
mov
call
mov
and
and
lea
lea
mov
push
mov
call
cmp
je
lea
push
push
push
mov
call
mov
call
mov
or
test
je
mov
push
call
call
ret
mov
push
mov
cmp
jne
call
lea
cmp
je
push
push
call
lea
call
pop
ret
push
mov
call
mov
call
lea
xor
cmp
je
push
push
call
lea
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
mov
mov
push
call
cmp
je
push
push
call
mov
or
cmp
je
mov
push
call
mov
call
call
ret
mov
ret
push
mov
call
mov
mov
cmp
jne
and
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
cmp
je
and
mov
mov
and
lea
push
push
call
push
lea
call
push
mov
mov
call
mov
add
call
push
or
call
push
lea
call
push
mov
call
mov
mov
push
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
mov
mov
mov
lea
push
call
lea
push
call
mov
mov
mov
mov
cmp
mov
je
mov
lea
mov
lea
push
call
mov
mov
cmp
je
cmp
jne
mov
push
mov
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
lea
mov
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
cmp
je
lea
push
sub
mov
lea
movs
movs
mov
movs
movs
sub
mov
lea
movs
movs
movs
push
movs
call
mov
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
cmp
je
mov
cmp
je
mov
cmp
jl
mov
cmp
mov
mov
je
mov
push
call
mov
add
call
mov
cmp
mov
je
mov
push
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
call
ret
push
mov
call
mov
mov
lea
mov
xor
mov
call
cmp
mov
jne
xor
jmp
mov
mov
mov
imul
lea
mov
cmp
je
cmp
jne
mov
push
lea
push
push
mov
mov
call
mov
xor
cmp
je
push
mov
call
test
jne
push
mov
mov
call
pop
mov
mov
cmp
mov
je
mov
neg
lea
sbb
push
and
push
call
mov
mov
jmp
mov
call
mov
ret
mov
mov
mov
test
jne
mov
or
push
call
mov
jmp
lea
push
push
push
push
call
test
mov
jl
lea
push
lea
call
jmp
push
mov
call
jmp
push
pop
cmp
jne
push
mov
call
test
jne
and
push
lea
push
push
mov
mov
call
mov
test
je
and
mov
lea
push
push
push
mov
call
mov
test
je
and
mov
lea
push
push
mov
call
cmp
je
and
push
mov
call
pop
mov
mov
test
mov
je
push
mov
push
neg
lea
sbb
and
push
push
call
jmp
xor
mov
mov
jmp
mov
call
mov
ret
mov
mov
cmp
jne
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
jmp
lea
push
lea
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
or
test
je
mov
push
call
inc
xor
jmp
mov
call
ret
mov
push
mov
cmp
jne
push
call
push
mov
call
pop
ret
mov
mov
mov
mov
jmp
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
ret
push
push
call
mov
xor
cmp
jne
mov
jmp
cmp
push
mov
jne
push
push
call
cmp
pop
pop
mov
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
jne
call
mov
call
mov
call
ret
mov
push
call
pop
mov
test
je
push
call
pop
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
call
cmp
je
xor
jmp
xor
mov
push
call
pop
ret
push
mov
push
and
push
push
lea
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
lea
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
add
cmp
je
test
je
mov
add
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
add
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
or
je
mov
mov
dec
jne
mov
mov
jmp
mov
mov
dec
je
push
push
lea
lea
cmp
jbe
mov
rep
pop
pop
sub
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
push
push
push
push
push
call
pop
pop
cmp
je
lea
push
call
or
je
mov
cmp
jne
mov
or
je
push
call
jmp
mov
push
push
call
add
push
mov
call
mov
mov
mov
mov
mov
cmp
adc
mov
add
jmp
mov
pop
ret
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
je
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
cmp
setge
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
je
mov
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
mov
cmp
je
dec
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
inc
cmp
jne
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
mov
cmp
setne
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
mov
push
call
pop
pop
mov
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
xor
mov
cmp
sete
dec
call
ret
mov
push
call
pop
ret
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fsin
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fsin
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fcos
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fcos
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fptan
fstsw
sahf
jp
fstp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fptan
fstp
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
fld
je
fchs
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fxch
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
je
fldpi
jmp
fldz
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fld1
fpatan
cmp
jne
mov
lea
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
test
je
fchs
jmp
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
je
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpnlepd
cmp
jl
cmp
jg
andpd
addsd
movq
fld
ret
fld
ret
cmpnlepd
andpd
movq
fld
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
jne
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpltpd
cmp
jl
cmp
jg
andpd
subsd
movq
fld
ret
fldz
ret
cmpltpd
orpd
andpd
movq
fld
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
fxch
cmp
je
fprem
jmp
call
fstsw
fwait
sahf
jp
fstp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
movapd
movapd
psllq
psrlq
psrlq
andpd
movd
psubd
mov
psrlq
psllq
movd
cmp
jl
cmp
jg
movq
subsd
orpd
movq
fld
ret
movq
fld
ret
cmp
movq
je
movq
cmp
fldz
jl
fchs
ret
movapd
addsd
movq
andpd
cmpneqpd
pextrw
andpd
orpd
mov
cmp
jne
movq
fld
ret
sub
movlpd
mov
mov
add
mov
add
mov
sub
mov
call
fld
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
fst
call
call
add
ret
lea
call
push
fstcw
mov
je
cmp
je
call
test
jne
fsqrt
cmp
jne
mov
lea
jmp
test
jne
test
jne
cmp
jne
jmp
call
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fxch
fstp
fst
mov
call
add
ret
lea
call
mov
push
fstcw
cmp
je
call
and
lea
cmp
je
call
je
test
je
mov
and
jne
fyl2x
call
cmp
jne
fchs
cmp
jne
lea
mov
jmp
cmp
jne
lea
mov
call
pop
ret
lea
call
test
jne
inc
jmp
faddp
mov
jmp
test
jne
faddp
mov
jmp
xor
jmp
xor
and
or
jne
lea
call
mov
mov
and
and
cmp
jne
or
jne
test
jne
sub
mov
push
sub
fstp
fstp
fsave
call
add
pop
frstor
fld
add
test
je
mov
jmp
mov
and
or
jne
fstp
mov
and
or
je
call
mov
shr
test
je
fld
test
je
fchs
mov
jmp
fldz
test
je
fchs
jmp
fstp
fld1
jmp
fld
call
fchs
test
jne
fstp
fstp
fld
mov
jmp
fld
frndint
fcomp
mov
fstsw
sahf
jne
fmul
inc
fld
frndint
fcompp
fstsw
sahf
jne
inc
ret
fstp
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldln2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldlg2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
fldz
add
jmp
push
mov
push
push
call
fld
mov
mov
and
cmp
pop
pop
jne
or
push
push
fstp
call
cmp
pop
pop
jle
cmp
jle
cmp
jne
push
fld
push
push
fstp
push
call
add
jmp
fld
jmp
fld
fadd
push
sub
fstp
fld
fstp
push
push
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
fld
add
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
push
call
mov
mov
and
cmp
pop
pop
jne
fld
push
push
fstp
call
test
pop
pop
jle
cmp
jle
cmp
jne
fild
push
sub
fstp
fld
fstp
push
call
add
jmp
push
push
call
pop
pop
jmp
fld
push
fadd
sub
fstp
fild
fstp
fld
fstp
push
push
call
add
jmp
fldz
fcomp
fnstsw
test
jnp
fld
lea
push
push
push
fstp
call
mov
mov
add
test
jge
mov
sub
cmp
jl
jmp
mov
sub
cmp
jg
add
cmp
jle
push
sub
fstp
fld
fstp
call
fstp
fild
fstp
push
push
fld
fstp
push
push
jmp
cmp
jle
add
push
push
push
fstp
call
add
push
sub
fstp
fild
fstp
jmp
cmp
jge
fmul
push
sub
fstp
fild
fstp
fld
fstp
push
push
jmp
cmp
jge
add
push
push
push
fstp
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
add
fld
pop
pop
leave
ret
call
mov
mov
ret
call
mov
imul
add
mov
mov
shr
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
add
xor
je
sub
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
add
xor
je
sub
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
je
push
mov
mov
lea
push
push
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
cmp
jl
jg
cmp
jb
mov
test
jl
mov
jg
test
jb
sub
sbb
mov
mov
fild
pop
ret
call
fldz
mov
pop
ret
push
mov
sub
push
push
xor
push
lea
push
push
mov
mov
xor
call
add
cmp
je
cmp
jne
push
push
push
push
push
call
add
mov
cmp
mov
mov
jne
cmp
je
push
push
call
mov
neg
pop
sbb
pop
inc
jmp
cmp
push
mov
mov
mov
je
call
mov
call
mov
push
lea
push
push
push
call
add
mov
call
cmp
je
mov
jmp
cmp
je
call
cmp
jne
call
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
test
mov
jne
mov
push
lea
push
push
push
call
add
mov
pop
push
call
pop
pop
mov
pop
leave
ret
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
mov
mov
push
push
push
xor
xor
sub
je
dec
je
dec
jne
mov
jmp
mov
push
pop
jmp
mov
push
jmp
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
mov
cmp
je
cmp
je
mov
inc
cmp
jne
mov
jmp
mov
inc
mov
sub
push
add
push
push
call
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
push
push
call
mov
push
xor
inc
push
push
call
add
inc
cmp
jb
or
jmp
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
sub
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
xor
mov
call
mov
mov
push
call
pop
test
jne
mov
mov
call
mov
jmp
push
call
pop
mov
cmp
jne
mov
push
jmp
mov
push
pop
cmp
jne
push
call
pop
jmp
push
push
mov
call
pop
test
pop
jne
push
push
call
pop
pop
test
je
mov
cmp
jne
call
mov
cmp
jne
mov
jmp
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
push
push
jmp
cmp
je
push
call
pop
cmp
jb
mov
cmp
je
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
call
mov
mov
mov
mov
call
cmp
je
mov
jmp
xor
push
call
pop
ret
mov
mov
mov
call
ret
push
mov
push
and
lea
push
push
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
jmp
mov
push
call
pop
test
jne
call
mov
jmp
push
call
pop
mov
mov
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
inc
push
mov
sub
push
push
call
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
jmp
push
push
mov
call
pop
pop
test
jne
call
mov
mov
cmp
jne
mov
jmp
mov
call
mov
mov
call
mov
push
push
push
push
lea
push
call
add
cmp
jne
push
push
mov
call
pop
pop
test
je
call
cmp
jne
call
mov
mov
cmp
je
push
call
pop
mov
cmp
jne
push
call
pop
jmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
cmp
je
call
mov
mov
call
ret
xor
mov
cmp
je
push
call
pop
push
call
pop
ret
push
mov
push
and
lea
push
push
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
sub
mov
sbb
xor
push
add
push
adc
push
push
call
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
mov
xor
add
adc
mov
mov
xor
pop
leave
ret
mov
mov
push
mov
lea
jmp
cmp
je
add
cmp
jb
cmp
pop
jb
test
jne
lea
cmp
jb
cmp
jae
push
push
push
call
add
test
je
mov
inc
mov
lea
ret
xor
ret
push
push
call
xor
xor
mov
mov
mov
mov
mov
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
jne
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
or
push
push
lea
push
call
add
cmp
je
xor
inc
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
push
call
pop
test
jne
push
call
push
call
pop
pop
jmp
push
call
pop
mov
mov
mov
call
mov
lea
mov
push
push
push
lea
push
push
mov
sar
and
imul
mov
push
push
call
test
je
push
call
mov
mov
lea
push
mov
push
call
add
mov
cmp
je
xor
call
mov
cmp
je
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
jne
mov
cmp
je
mov
jmp
mov
lea
push
call
pop
test
mov
jne
mov
push
pop
push
push
lea
push
call
add
mov
mov
mov
cmp
mov
je
mov
mov
cmp
mov
je
mov
mov
mov
mov
push
call
mov
push
call
lea
mov
push
call
lea
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
call
mov
mov
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
jmp
mov
push
mov
push
call
pop
pop
mov
mov
cmp
jne
push
call
push
call
push
call
add
call
mov
mov
jmp
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
je
push
call
push
call
push
call
push
call
add
jmp
mov
push
push
push
call
add
mov
cmp
je
cmp
je
push
call
pop
lea
mov
mov
cmp
jne
push
push
call
pop
pop
cmp
jmp
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
call
push
mov
call
pop
pop
mov
add
mov
cmp
jae
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
push
call
push
call
pop
pop
push
call
push
call
pop
pop
push
mov
call
push
call
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
jmp
mov
push
call
pop
mov
mov
mov
mov
shl
cmp
je
push
call
pop
mov
shl
cmp
je
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
test
je
push
call
pop
mov
call
mov
cmp
jne
call
mov
jmp
push
call
call
mov
call
mov
push
push
lea
push
call
add
cmp
jne
call
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
push
push
push
call
add
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
lea
push
push
push
push
push
call
add
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
je
cmp
jne
mov
lea
cmp
jbe
jmp
mov
and
mov
push
call
pop
mov
push
call
push
call
pop
pop
and
mov
test
je
or
lea
push
pop
jmp
mov
cmp
jne
push
call
pop
cmp
jne
inc
or
jmp
or
jmp
or
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
push
mov
push
push
push
lea
mov
call
mov
test
je
mov
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
fldz
jmp
mov
cmp
jle
lea
push
movzx
push
push
call
add
jmp
movzx
mov
movzx
and
test
je
inc
jmp
lea
push
push
push
push
call
pop
push
lea
push
push
call
add
test
mov
je
mov
add
mov
mov
test
je
test
fldz
fstp
je
mov
jmp
test
je
cmp
fld
jne
fchs
jmp
test
je
fldz
fcom
fnstsw
test
jp
fstp
call
mov
jmp
fstp
fld
fstp
cmp
je
mov
and
fld
pop
pop
pop
leave
ret
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
push
test
push
je
mov
add
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
jne
sub
jmp
sub
jmp
sub
jmp
sub
mov
test
jne
mov
shr
jne
jmp
mov
add
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
mov
pop
pop
pop
ret
mov
xor
mov
mov
pop
pop
pop
ret
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
mov
mov
cmp
jne
push
push
call
pop
pop
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
jmp
add
cmp
je
mov
and
pop
leave
ret
push
push
push
call
add
ret
mov
ret
mov
ret
push
push
call
and
mov
mov
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
and
mov
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
mulsd
movlpd
fld
add
ret
movlpd
mulsd
subsd
mulsd
movlpd
fld
add
ret
jmp
nop
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fwait
mov
shl
sar
rol
mov
and
xlat
movsx
and
mov
add
add
jmp
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fxch
mov
fxam
fstsw
fxch
mov
shl
sar
rol
mov
and
xlat
mov
shl
sar
rol
mov
and
xlat
shl
shl
or
movsx
and
mov
add
add
jmp
call
fxch
fstp
ret
call
jmp
fstp
fstp
fldz
ret
fstp
fstp
fld1
ret
fstp
fld
test
je
mov
ret
mov
fadd
ret
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fld
test
je
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fstp
fld
cmp
jg
mov
or
ret
or
je
fchs
ret
int3
int3
int3
int3
int3
int3
fld
frndint
fsub
fxch
fchs
f2xm1
fld1
faddp
fscale
fstp
ret
mov
and
or
mov
fldcw
ret
test
je
mov
ret
fadd
mov
ret
mov
and
cmp
je
fld
ret
mov
sub
or
mov
mov
mov
shld
shl
mov
mov
fld
add
test
mov
ret
mov
and
cmp
je
ret
mov
ret
cmp
je
fldcw
pop
ret
mov
cmp
je
and
je
fstsw
and
je
mov
call
pop
ret
fldcw
pop
ret
sub
fst
mov
add
and
jmp
sub
fst
mov
add
and
je
cmp
je
mov
cmp
je
and
jne
fstsw
and
je
mov
cmp
je
call
pop
ret
call
pop
ret
fldcw
pop
ret
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jae
fmul
jmp
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jbe
fmul
jmp
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
jmp
push
mov
add
mov
fstp
mov
mov
mov
mov
mov
lea
lea
push
push
push
call
add
fld
cmp
je
fldcw
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
or
je
call
fsubrp
jmp
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
call
or
je
fld
call
fxch
call
fsubrp
fdivp
ret
mov
call
or
je
call
fld1
fchs
fxch
fscale
jmp
fstp
fld
jmp
fstp
fld
ret
ret
call
jmp
jmp
mov
call
jmp
fldl2e
fmulp
xor
call
not
test
je
call
fxch
fstp
test
jne
not
fld1
faddp
fscale
jmp
call
faddp
or
jne
fld1
fadd
faddp
ret
fld
fld1
or
jne
fadd
fchs
fxch
fdivp
ret
int3
int3
int3
int3
push
mov
add
push
fstcw
fwait
cmp
je
call
or
call
pop
leave
ret
fxch
fst
fxch
fst
jmp
push
mov
add
push
fstcw
cmp
je
call
or
and
call
pop
leave
ret
fst
jmp
push
mov
add
push
push
push
call
add
push
push
call
add
fstcw
or
mov
call
call
pop
leave
ret
and
cmp
jne
fst
mov
or
je
cmp
je
cmp
je
or
je
movsx
mov
jmp
mov
and
jne
fstsw
and
je
mov
jmp
fldcw
fwait
ret
mov
and
or
je
cmp
je
jmp
mov
and
cmp
je
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jae
fmul
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jbe
fmul
push
push
mov
inc
mov
test
jne
cld
lea
lea
movs
movs
cmp
je
lea
lea
movs
movs
fstp
lea
lea
push
push
mov
mov
movsx
push
call
add
pop
pop
fld
jmp
push
mov
add
push
push
push
call
add
fstcw
and
call
call
pop
leave
ret
push
mov
add
push
mov
mov
and
cmp
jne
or
mov
mov
mov
shld
mov
mov
fld
jmp
fld
pop
leave
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
pextrw
and
pinsrw
sub
movlpd
subsd
movlpd
fld
add
ret
jmp
lea
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
unpcklpd
movapd
mulpd
cvtsd2si
movapd
addpd
movapd
subpd
movlpd
add
movapd
mulpd
and
mulsd
mov
mulpd
shl
subpd
mulpd
add
shl
add
addsd
movapd
subpd
movlpd
shl
lea
andpd
movapd
add
subpd
unpckhpd
divsd
subpd
movapd
subsd
mulpd
subpd
movapd
mulpd
movapd
mulpd
addsd
movapd
mulpd
addpd
addpd
mulpd
addpd
addpd
movapd
mulpd
mulpd
addpd
movapd
mulpd
addpd
movapd
mulpd
mulsd
mulpd
mulpd
movsd
addpd
movsd
mulsd
unpckhpd
addsd
unpckhpd
addsd
subsd
addsd
movsd
movlpd
unpckhpd
addsd
mulsd
addsd
addsd
addsd
movlpd
mulsd
movlpd
andpd
mulsd
mulsd
subsd
subsd
subsd
mulsd
movsd
subsd
addsd
subsd
addsd
subsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
movsd
mulsd
movlpd
mulsd
addsd
mulsd
movlpd
fld
add
ret
jmp
mov
lea
add
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
mulsd
addsd
mulsd
addsd
pshufd
addsd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
popa
jo
je
push
outs
push
je
add
add
adc
add
add
(bad)
inc
add
add
add
add
dec
add
lea
repnz
loopne
dec
add
inc
add
je
dec
imul
push
dec
add
add
(bad)
inc
add
add
add
add
fimul
lock
inc
add
sbb
jns
gs
jb
popa
jns
add
fisttp
das
xchg
inc
add
xchg
inc
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
retf
inc
add
leave
inc
add
inc
add
inc
add
retf
inc
dec
ins
gs
imul
inc
js
gs
imul
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
(bad)
fwait
inc
add
inc
add
dec
add
xchg
inc
add
pushf
inc
add
sbb
inc
add
inc
add
sbb
shl
add
jg
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
cmps
inc
add
loopne
add
movs
inc
add
inc
add
movs
inc
add
cmps
inc
add
inc
add
imul
inc
add
add
add
add
je
and
popa
add
add
add
bound
push
add
je
jae
add
push
add
arpl
push
add
js
je
and
inc
add
jb
ins
add
je
add
add
inc
add
ins
add
dec
add
ins
add
push
add
add
imul
dec
add
ins
add
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
add
arpl
jb
imul
outs
add
add
add
dec
add
push
add
je
and
inc
add
jae
arpl
jb
imul
outs
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
ins
add
add
add
outs
add
jb
arpl
add
add
add
ins
add
add
add
add
add
bound
push
add
je
add
dec
add
push
add
je
dec
add
outs
add
add
add
dec
add
outs
add
jb
dec
add
outs
add
add
dec
add
je
imul
add
add
inc
dec
outs
jne
add
cmp
add
add
add
inc
add
add
add
add
inc
add
inc
add
sbb
inc
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
gs
add
add
loope
add
jg
add
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
mov
add
mov
add
inc
add
loop
add
add
inc
add
inc
add
mov
add
inc
add
imul
imul
add
add
inc
add
add
add
add
add
loop
add
mov
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
mov
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
mov
inc
add
mov
add
inc
add
add
add
add
add
jbe
add
ins
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
inc
add
add
add
add
add
mov
add
push
add
add
mov
add
adc
add
dec
mov
add
push
add
add
push
add
add
add
and
add
add
add
dec
add
dec
add
add
add
add
outs
add
add
je
popa
add
ins
add
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jbe
add
bound
pop
add
add
add
add
add
je
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jae
add
jbe
add
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
dec
add
add
add
jb
outs
add
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
outs
add
jb
outs
add
dec
add
outs
add
add
jb
xor
xor
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
add
jb
jbe
add
xor
xor
add
and
add
dec
add
dec
add
add
add
add
bound
pop
add
add
add
add
add
je
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jb
bound
pop
add
add
add
add
jo
add
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jae
add
je
popa
add
ins
add
add
add
add
inc
add
add
inc
add
add
add
add
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
jne
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
ins
add
add
outs
add
add
and
add
add
add
dec
add
dec
add
add
add
imul
push
add
add
add
add
xor
xor
add
add
inc
add
add
inc
add
add
add
add
push
add
outs
add
push
add
jb
jbe
add
xor
xor
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
push
add
je
add
xor
add
add
and
add
add
dec
add
push
add
je
add
xor
add
add
inc
add
add
inc
add
add
add
add
imul
popa
add
ins
add
inc
add
add
inc
add
add
add
add
data16
jne
ins
add
add
je
add
jae
imul
add
and
add
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
jno
add
dec
add
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
add
add
ins
dec
add
outs
dec
add
jo
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
jno
add
dec
add
jno
add
dec
add
dec
add
jb
add
jb
add
jb
add
jno
add
add
jno
add
add
dec
add
jb
add
jb
add
jb
add
jecxz
add
rol
dec
ins
gs
jne
jns
imul
inc
dec
ins
gs
imul
push
add
add
inc
add
add
add
dec
add
dec
add
inc
add
add
add
add
add
inc
add
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
rol
mov
inc
add
inc
add
inc
add
add
jae
je
add
add
add
xor
add
add
pop
add
add
inc
add
add
add
add
add
inc
add
pop
das
mov
rcl
xchg
adc
add
push
or
cmp
rcl
cmp
mov
in
add
in
add
rol
push
outs
imul
outs
and
arpl
je
outs
outs
add
add
ins
loopne
add
add
add
add
add
add
add
add
inc
outs
jb
js
je
jb
arpl
jae
add
arpl
gs
ins
add
ss
add
gs
push
push
inc
jns
push
rcr
push
pop
jl
inc
pushf
js
xchg
je
ds
mov
dec
fnstcw
rcl
pop
mov
in
clc
movs
jp
push
stos
sbb
sbb
cwde
ret
jns
jnp
retf
movs
inc
ficomp
call
jmp
xor
call
mov
nop
xor
in
std
test
add
mov
iret
pop
lahf
mov
mov
sbb
stc
inc
xchg
mov
xchg
sti
sub
(bad)
inc
rcr
mov
xor
cmp
fistp
adc
jge
cwde
jle
sbb
pop
invd
call
cmp
fidivr
sub
sbb
xchg
mov
into
push
pop
mov
dec
into
fidivr
cmps
mov
test
ds
out
retf
retf
inc
test
push
jge
call
sbb
dec
cmp
jb
outs
sbb
retf
cdq
pop
inc
mov
push
xor
and
push
iret
outs
lods
sbb
iret
push
mov
jl
cmp
jns
js
pusha
adc
sub
outs
sbb
into
sub
mov
cwde
pop
jl
daa
aad
pushf
pop
stos
xor
jp
jne
stc
aas
enter
nop
dec
adc
xor
jmp
int3
pop
scas
cdq
(bad)
cs
retf
js
clc
or
aaa
mov
adc
mov
dec
fst
cld
pushf
sub
(bad)
dec
mov
test
sbb
pop
ds
sbb
mov
push
iret
dec
cli
push
sti
pop
jo
mov
call
and
shr
jmp
pop
test
movs
and
dec
fld
sbb
jnp
dec
push
or
cld
in
stos
test
add
mov
mov
jbe
inc
pop
mov
popa
clc
mov
aad
mov
cmp
dec
or
ja
push
sar
out
pop
inc
jb
sahf
xor
in
jo
inc
inc
lds
jb
dec
cmp
push
retf
fadd
xor
push
push
cmp
or
(bad)
aaa
addr16
cmp
cmps
in
and
add
add
pop
into
ficomp
dec
retf
jl
mov
fwait
add
mov
add
call
push
jg
call
jae
sub
nop
aam
jnp
shr
retf
int3
rol
jmp
mov
rcr
rcl
cmp
pop
jno
pushf
fsubr
test
jp
mov
or
or
mov
jmp
ficom
(bad)
js
pop
cld
and
cld
pop
sub
push
aas
retf
loop
jmp
mov
and
mov
sub
jns
cwde
stos
push
fsub
loopne
cmp
movs
outs
adc
es
pop
loopne
add
cmp
hlt
add
or
adc
pop
mov
push
loop
scas
sbb
mov
push
and
sub
mov
lods
or
scas
pop
jp
push
in
sub
int3
adc
mov
int3
adc
jno
cmp
adc
arpl
add
sub
call
mov
fwait
jne
mov
jge
dec
and
fsubr
popa
jle
fild
stos
mov
outs
sbb
push
dec
test
fcmovbe
xchg
lods
push
dec
push
mov
adc
xchg
xlat
jns
pusha
scas
js
inc
mov
pop
stos
push
mov
call
cmps
loope
data16
lock
fldcw
(bad)
dec
add
mov
shl
cmp
mov
jnp
les
outs
pop
retf
aam
sti
(bad)
xor
sub
mov
fwait
push
test
test
or
repz
out
or
mov
sbb
fldcw
xchg
pop
int
cmp
push
daa
sbb
or
mov
pop
push
cmp
aaa
push
call
call
sub
retf
pusha
retf
cli
ret
in
shl
sub
(bad)
out
retf
mov
mov
fld
pop
gs
mov
jmp
sbb
dec
(bad)
stc
add
shl
loopne
mov
xchg
retf
xor
push
icebp
cdq
rsm
fcmovb
sub
addr16
sti
leave
bound
or
mov
mov
sbb
or
inc
shl
cmp
test
push
cmp
lods
sar
or
push
lahf
sub
xor
mov
push
stos
cli
daa
(bad)
pop
pop
or
lock
push
mov
mov
int
sub
rol
outs
cmps
aaa
fcomi
mul
test
cmp
cmc
xchg
ja
pop
neg
retf
test
lds
jmp
xor
stc
call
js
xlat
arpl
fcmovnbe
pop
xchg
aas
cld
jl
pop
lods
popa
adc
movs
hlt
dec
idiv
rol
or
outs
sti
pushf
hlt
jns
jbe
dec
stos
(bad)
les
jo
in
and
mov
std
and
neg
(bad)
cs
pop
dec
pop
inc
mov
fimul
pop
pop
lods
cmp
dec
sub
dec
add
jne
add
dec
sbb
enter
jo
xchg
cmp
pop
lock
mov
mov
sub
fucomip
clc
sub
out
mov
test
jp
or
lahf
dec
or
dec
push
loope
sbb
mov
dec
stos
in
jb
mov
pop
mov
lahf
jb
inc
pop
shr
call
cmp
sbb
cmps
jp
dec
jae
shr
jecxz
mov
nop
aam
les
push
mov
jge
jmp
pop
add
into
cmp
cmp
xor
mov
jl
imul
push
push
sbb
sbb
stos
dec
jle
sub
mov
outs
mov
movs
loop
imul
outs
jne
cwde
ret
inc
pop
in
jb
and
icebp
jnp
sti
lea
mov
nop
clc
js
dec
xchg
inc
mov
dec
ror
or
pop
adc
xchg
push
rcr
pusha
imul
adc
adc
ret
cmp
(bad)
(bad)
sti
push
rol
mov
nop
leave
(bad)
(bad)
adc
pop
stc
sub
sub
mov
lods
cld
sub
add
pop
cmp
pop
test
or
mov
cmp
dec
mov
cmp
push
mov
or
or
dec
sbb
call
or
popa
adc
repnz
dec
stc
dec
mov
loopne
inc
xchg
adc
fwait
jp
xlat
mov
sub
xchg
add
sub
pop
sbb
push
sar
sbb
repnz
out
add
xchg
jne
pop
fcmovne
jmp
shl
and
cs
outs
mov
mov
arpl
adc
sub
cwde
mov
imul
pop
sub
pop
(bad)
fiadd
and
in
mov
leave
cld
jb
mov
add
adc
adc
inc
sbb
mov
into
popf
jmp
outs
or
out
add
movs
lods
sbb
push
mov
sti
(bad)
mov
fwait
in
jne
inc
(bad)
ss
fist
push
pop
addr16
jmp
xor
dec
pop
test
dec
call
stos
repz
add
fadd
mov
lods
xchg
push
inc
push
cmp
dec
add
in
arpl
lods
dec
clc
or
adc
pop
sbb
jnp
cmp
enter
or
in
ret
enter
sub
xor
dec
ja
or
mov
repnz
jno
jns
xchg
or
clc
out
cmps
test
dec
sbb
mov
xchg
sahf
bound
mov
sahf
loope
inc
mov
daa
frstpm(287
mov
data16
scas
int3
push
jp
dec
push
(bad)
mov
sub
sub
or
push
jmp
imul
(bad)
xlat
test
fucomi
sar
clc
call
or
dec
fs
cmp
cmp
mov
out
sahf
mov
stos
push
pause
jle
call
sub
add
jmp
pop
cmp
pop
pushw
stc
mov
xchg
xchg
push
scas
adc
jb
imul
sahf
into
nop
daa
loope
imul
add
mov
adc
mov
jmp
(bad)
push
mov
jb
cmps
into
pop
sub
adc
sub
mov
pmaxub
jo
cdq
mov
bswap
ss
ret
into
retf
xor
and
and
cwde
xchg
out
jmp
sahf
popa
shr
sbb
pop
fcmovbe
and
cmp
fnstcw
dec
mov
add
fild
(bad)
dec
or
pop
imul
into
xchg
sub
jnp
in
retf
leave
push
enter
je
cdq
cmp
ins
sub
pusha
sti
xchg
rcr
mov
and
jo
fisttp
push
test
test
cdq
mov
add
cmp
frstor
imul
retf
mov
mov
sbb
xor
sub
sbb
addr16
inc
or
movs
lock
pop
fild
retf
sub
(bad)
mov
imul
mov
mov
push
into
adc
pop
pop
seto
dec
dec
inc
xchg
arpl
clc
xrelease
sub
(bad)
in
mov
call
dec
loopne
pop
retf
imul
adc
dec
mov
loope
out
jns
jge
mov
pop
fldcw
popf
or
sub
test
jb
(bad)
enter
rol
test
js
jnp
cwde
(bad)
(bad)
push
pushf
dec
(bad)
sub
ja
int
retf
repz
test
push
cmp
retf
jmp
dec
pop
ds
sbb
std
in
or
cmp
sub
in
movs
xchg
stc
clc
int3
hlt
or
sub
loop
call
cmp
fbld
lods
cmp
inc
jne
xchg
sub
jmp
jbe
mov
call
test
fstp
adc
dec
loop
sbb
(bad)
cmp
inc
fmul
push
adc
rcl
stos
mov
popa
dec
add
adc
sbb
push
setne
sbb
sahf
sar
fwait
sbb
cmp
cwde
sub
in
pop
aaa
fdiv
cmp
xchg
test
push
sub
pop
je
jecxz
mov
push
loop
fst
pop
in
sub
retf
lahf
dec
sub
jg
fnstcw
sbb
jge
movs
mov
lock
xchg
dec
loope
fs
inc
fcomp
sub
imul
aas
mov
in
pop
mov
or
cmp
ret
or
in
inc
stos
fdivr
mov
push
daa
rcr
pop
mov
xchg
add
dec
mov
test
repnz
mov
sbb
mov
js
push
mov
stc
or
ds
sbb
rol
fld
shr
into
shr
add
sbb
jecxz
(bad)
(bad)
inc
xchg
in
repnz
mov
dec
iret
call
rol
std
ins
(bad)
sub
and
xor
mov
cmp
ret
aad
and
aam
lods
in
in
mov
jnp
test
sub
mov
pop
mov
xor
in
adc
pop
xor
stos
cdq
add
sti
popf
sbb
jge
call
pop
push
push
mov
icebp
lods
push
shr
div
ror
shr
adc
mov
inc
retf
sbb
sub
loope
(bad)
jp
xor
cmc
loop
ficom
jmp
ret
jecxz
loopne
sbb
in
cmp
sbb
retf
call
cmp
mov
scas
adc
in
cmp
fnsave
mov
inc
retf
cmp
mov
in
cmp
dec
out
pop
xchg
cld
adc
adc
lahf
pop
je
or
wrmsr
push
js
sub
or
popf
pushf
pop
mov
(bad)
ja
loop
xchg
jns
mov
(bad)
lea
into
stc
xlat
addr16
pop
bound
and
mov
dec
cmc
cmp
in
add
sbb
fmul
mov
or
fild
adc
in
lea
pop
lahf
hlt
cmp
adc
pop
std
bound
in
mov
inc
xchg
cmc
mov
push
mov
mov
inc
(bad)
cwde
mov
jp
push
push
aas
cwde
(bad)
add
sbb
call
jg
test
push
dec
push
sbb
mov
add
jmp
hlt
pop
add
test
ins
fsubr
push
lods
and
fdiv
add
push
mov
sbb
lods
or
in
call
cdq
and
dec
clc
pop
in
lock
mov
mov
aam
fidivr
(bad)
iret
scas
xor
outs
pusha
xchg
xchg
cwde
pop
inc
push
xor
dec
int
(bad)
pop
push
retf
or
pop
push
ret
movs
iret
pop
jns
push
mov
call
sub
sbb
lahf
aaa
aaa
mov
cwde
push
sub
jp
outs
fwait
pushf
retf
fldenv
mov
add
xchg
or
add
call
dec
pop
cmp
dec
ss
scas
gs
sbb
icebp
push
mov
push
shl
or
add
pop
pop
or
sbb
mov
loope
mov
fwait
inc
xchg
call
dec
pop
in
in
call
fwait
xchg
push
hlt
fld
(bad)
xor
push
popf
je
outs
mov
cmp
inc
dec
scas
arpl
or
ins
sahf
sahf
cmp
aas
ror
or
call
aad
ja
push
jnp
xchg
inc
call
stos
or
ss
cmp
sbb
or
mov
imul
leave
lea
js
enter
jns
jns
and
popf
jmp
sub
xchg
jge
sbb
sbb
adc
add
loope
cli
inc
clc
or
or
call
data16
int
cwde
mov
adc
into
xor
and
inc
ror
les
jmp
mov
dec
jp
sub
jnp
xor
and
mov
ss
pop
mov
fild
les
sub
push
ins
retf
fldcw
or
out
push
xor
pop
push
mov
sub
sbb
cld
dec
test
mov
into
fistp
jb
jmp
pop
jecxz
rcl
stc
or
rcr
jmp
into
sub
xchg
cmp
test
pop
xchg
pop
psubsw
rcl
pop
cmp
movs
(bad)
dec
mov
pop
dec
movsx
fdiv
xchg
gs
sub
adc
mov
popf
fstp
xor
jns
jmp
test
cs
cmps
dec
jno
sub
cld
int3
call
inc
ss
push
sbb
test
mov
test
mov
push
cmp
bnd
aaa
mov
push
xchg
jno
mov
inc
xor
(bad)
cmp
aad
test
or
mov
stc
cdq
cmp
mov
test
mov
fs
iret
or
stos
xchg
mov
cs
mov
imul
inc
mov
fwait
into
inc
mov
mov
dec
or
xchg
jnp
ret
push
sbb
sub
sub
add
sbb
pop
or
or
stos
call
std
fwait
cwde
cmp
or
sub
mov
xchg
sub
jmp
int
push
inc
lea
and
fucomp
pop
not
jno
jmp
pop
js
or
int3
and
inc
cmp
sub
fsub
jle
sub
dec
lds
mov
movs
pop
in
(bad)
lods
test
add
mov
dec
xor
ins
out
push
fwait
mov
jo
rcl
outs
or
and
jg
pop
or
jmp
jns
mov
fyl2x
mov
out
jecxz
iret
bound
test
sbb
(bad)
sets
retf
fld
jg
and
mov
sbb
cmps
jp
mov
ds
aaa
sbb
lods
in
xchg
imul
cmp
gs
jl
push
adc
mov
push
call
mov
cmp
out
and
jmp
pop
push
lahf
mov
test
sar
cmps
into
jae
sub
movs
enter
test
dec
call
mov
(bad)
pop
cmp
push
icebp
(bad)
sub
std
add
out
call
adc
fldenv
pop
sti
push
sti
call
fstp
jmp
sbb
push
ror
in
fidivr
xor
(bad)
jg
and
idiv
rcr
js
rcr
inc
ret
or
jg
add
dec
jmp
cmps
retf
add
jle
sub
out
(bad)
ror
movs
add
pop
mov
push
ret
fidiv
pop
call
hlt
inc
sub
nop
popa
sbb
mov
outs
sub
mov
call
mov
(bad)
leave
iret
enter
clc
inc
pop
cmps
pushf
mov
imul
jg
fimul
mov
mov
(bad)
mov
sbb
mov
fdiv
jge
(bad)
(bad)
js
cs
sub
pop
(bad)
inc
xor
adc
es
imul
xor
aaa
add
cmp
push
fistp
sar
pop
rcr
outs
jmp
inc
sbb
ret
inc
inc
mov
dec
js
repnz
or
int
outs
mov
dec
test
or
add
mov
mov
jmp
outs
stos
movs
stc
aaa
mov
xor
xor
and
lock
dec
pop
lods
hlt
pop
out
xchg
retf
daa
mov
cmp
retf
mov
cld
outs
dec
sub
jmp
cmp
dec
fimul
in
mov
or
dec
outs
shr
mov
pop
sub
sbb
outs
rcr
mov
or
cmps
dec
push
(bad)
iret
and
inc
icebp
adc
add
jmp
imul
cmp
xchg
ins
ret
jne
mov
fsubr
mov
cmps
cmp
push
repnz
mov
mov
sbb
lods
fsubr
adc
xor
mov
inc
sbb
aaa
mov
jbe
test
call
adc
fidivr
stos
sbb
push
(bad)
leave
xor
push
ret
jbe
and
sub
inc
jp
pop
sar
sbb
or
cld
push
pop
ds
out
repz
cmp
and
ins
mov
sub
addr16
mov
dec
dec
mov
loop
sub
lds
push
scas
mov
stos
adc
out
jae
xor
outs
lock
sub
adc
push
mov
test
jle
or
cmp
xchg
rcl
fistp
sub
enter
xchg
push
inc
cmp
and
or
ret
stc
push
sub
nop
xchg
pop
sub
sbb
test
repz
das
jns
repnz
xor
gs
xchg
scas
loopne
outs
leave
test
aad
sbb
shl
jmp
jge
inc
daa
push
jle
cwde
inc
cmp
sub
aam
dec
out
or
mov
leave
clc
jnp
inc
sub
xchg
jle
int3
(bad)
retf
aaa
jmp
dec
pushf
aas
int3
add
das
mov
push
fiadd
mov
callw
leave
call
sti
ins
sahf
arpl
scas
in
cmps
pop
cmc
popf
cli
cli
xor
sub
jne
or
lahf
stos
cwde
pop
xor
(bad)
js
cdq
pop
mov
and
jmp
pop
(bad)
popf
outs
stos
or
loope
mov
std
push
pushf
cmp
clc
les
cli
dec
fmul
shr
mov
fwait
int
push
fnstsw
adc
stos
xchg
ins
icebp
cmp
rol
stos
inc
xor
leave
pushf
sub
add
call
or
sbb
dec
int3
call
fimul
push
sub
sti
dec
cmp
add
sbb
xchg
fimul
arpl
pop
jb
dec
sub
cmp
cmp
or
adc
mov
mov
ds
ds
mov
call
jns
pop
xor
and
gs
push
pop
xchg
pop
adc
inc
aas
or
loop
mov
xchg
fstp
mov
mov
mov
test
shr
sbb
in
mov
mov
loopne
jno
dec
fwait
sub
mov
fldcw
leave
ja
xor
dec
mov
mov
pop
pop
arpl
mov
cmp
xor
xor
lock
loope
mov
scas
(bad)
jmp
cmp
rol
jno
daa
stc
imul
dec
fucom
sahf
sub
dec
push
jne
popf
and
push
add
mov
inc
mov
jecxz
cmp
cmp
dec
pushf
cmp
int
jmp
cdq
sbb
xor
imul
ret
pusha
nop
into
inc
add
mov
or
pop
sub
cmps
push
sti
and
mov
adc
sub
pop
dec
mov
adc
push
jne
test
imul
pop
push
arpl
mov
mov
call
jb
scas
(bad)
hlt
shl
sub
retf
dec
sti
xchg
mov
pop
mov
sar
pop
jbe
add
mov
lock
mov
repnz
mov
mov
jo
cmp
push
(bad)
cmp
pop
sbb
inc
mov
xor
cwde
pop
dec
jecxz
(bad)
fbstp
ja
mov
mov
dec
mov
push
gs
jmp
movs
and
sub
mov
ins
call
test
fld
pop
sahf
mov
push
data16
ret
cmps
cmp
out
jno
dec
cmps
mov
cmps
xor
lods
jno
das
cmp
mov
mov
or
imul
inc
int
hlt
push
cmc
pop
mov
sbb
mov
dec
cmps
inc
add
aam
mov
sbb
cmp
or
cmp
fmul
dec
test
imul
mov
imul
in
call
call
rcr
mov
cmp
or
push
cmp
jmp
and
(bad)
or
add
mov
leave
fidivr
mov
aam
(bad)
into
fistp
shl
jl
addr16
(bad)
jmp
icebp
sti
fdivr
pop
into
sbb
xor
mov
inc
pop
les
and
sub
mov
je
jg
mov
(bad)
pop
int
clc
mov
imul
mov
cmp
cli
fwait
mov
sub
cdq
lods
retf
ins
mov
loope
fiadd
imul
sub
xchg
dec
dec
test
push
jmp
bnd
dec
adc
dec
and
mov
inc
mov
mov
cmp
dec
pop
call
icebp
pop
push
stos
in
jp
cmps
loop
lahf
inc
mov
leave
(bad)
in
inc
lock
xor
imul
xchg
call
cmp
je
xchg
xor
add
pop
or
mov
mov
out
call
xlat
dec
mov
cmps
pop
(bad)
stos
push
pop
xchg
test
or
std
cwde
or
xor
rcl
stos
stos
or
sub
xor
mov
mov
sahf
and
and
or
es
cld
test
stos
ins
xor
mov
jecxz
clc
stos
test
add
xor
push
retf
sub
test
pop
mov
cli
jmp
mov
jecxz
aaa
push
sti
loop
into
or
pop
stos
mov
jbe
pop
bound
aam
push
rcl
jo
addr16
out
sbb
mov
fadd
iret
sahf
xchg
sti
iret
sub
outs
inc
xchg
int3
mov
mov
fdiv
cmps
mov
xor
jge
sti
xlat
cmp
scas
call
retf
gs
fucomi
push
cld
dec
lock
add
and
and
(bad)
pop
mov
xchg
je
pushf
mov
ins
mov
push
sbb
(bad)
lea
mov
cdq
xchg
xchg
test
in
push
xchg
fmul
or
test
test
fwait
retf
sar
sub
cmps
mov
fild
mov
and
sar
ja
out
sahf
dec
loope
(bad)
addr16
inc
fmul
cli
pop
jb
popf
(bad)
lahf
add
or
or
sbb
sub
pop
scas
imul
movs
or
pop
or
movs
loop
pop
arpl
adc
xlat
int3
dec
cmps
mov
outs
xchg
xchg
pusha
dec
cmp
dec
retf
mov
sbb
sbb
int3
push
lods
xor
aaa
adc
mov
(bad)
aad
mov
in
fcomp
fldl2e
in
mov
pop
ret
cmps
xchg
xchg
push
pop
(bad)
or
mov
lahf
mov
outs
out
jle
add
and
xchg
mov
imul
stc
adc
xor
push
add
scas
cmp
mov
retf
xor
mov
retf
pushf
mov
sbb
cli
std
fisub
jmp
push
mov
outs
ret
ror
dec
jmp
or
jmp
fidivr
fs
ficomp
retf
bound
add
inc
sbb
in
or
loopne
mov
test
mov
inc
or
fcomp
cli
and
cmp
jecxz
push
ret
fiadd
repnz
mov
sbb
bound
jo
ins
ficom
jecxz
in
nop
in
mov
pop
call
pop
push
jmp
push
dec
mov
xor
sbb
pusha
out
add
push
fcom
xchg
sahf
call
test
ss
mov
sbb
inc
pop
or
gs
lock
fwait
mov
psubd
stos
pusha
loop
xchg
sub
dec
mov
sub
in
mov
push
repz
mov
jmp
jo
jecxz
pushf
add
jne
cwde
mov
and
inc
sub
or
mov
nop
imul
ins
jl
lds
out
adc
cmps
inc
out
xchg
aas
cdq
add
(bad)
cmp
sbb
jmp
sbb
and
jmp
(bad)
xor
aam
fld
mov
cdq
(bad)
or
stos
jno
or
enter
cwde
push
call
add
sbb
mov
inc
cmp
fucomp
mov
adc
jmp
retf
mov
pop
leave
dec
fisttp
popa
jmp
js
mov
add
mov
push
ja
adc
xor
sub
mov
cmp
pop
and
xchg
repz
inc
shl
mov
std
sub
cli
jmp
inc
out
pop
push
push
cdq
sahf
call
mov
loope
mov
scas
icebp
ret
nop
ja
retf
mov
ins
in
imul
inc
sub
stos
pop
inc
xchg
mov
outs
into
addr16
push
push
jns
mov
pop
imul
call
fxtract
js
(bad)
and
imul
mov
call
pop
fadd
jnp
xchg
jge
push
ins
sti
mov
cdq
inc
nop
sbb
jg
jae
retf
push
and
add
enter
and
cs
and
push
dec
mov
mov
inc
inc
int
fcomp
pop
sub
out
mov
mov
or
sbb
fsub
cmp
mov
sbb
mov
sbb
sbb
xor
add
pushf
lock
adc
mov
xchg
or
and
sub
and
jg
mov
dec
or
push
or
sub
push
cmp
dec
out
lea
bound
cmp
hlt
(bad)
pop
stos
dec
pop
mov
xor
pusha
popf
mov
jmp
test
pop
retf
cmp
or
stos
pop
xchg
aaa
jmp
scas
pushf
xor
mov
add
jl
call
sbb
stos
adc
bound
push
mov
addr16
cmp
test
loop
mov
clc
retf
out
jg
retf
or
jp
ins
call
xchg
cwde
inc
mov
mov
popf
shr
mov
adc
aas
sub
dec
cmp
push
cmp
movs
pop
imul
imul
xchg
cld
or
or
(bad)
cld
out
(bad)
inc
add
shr
sub
pop
sub
pushf
dec
test
and
iret
sbb
scas
in
mov
mov
retf
jle
retf
popa
pop
movs
add
sbb
fist
adc
(bad)
(bad)
mov
mov
xchg
dec
repz
faddp
sub
mov
enter
xor
pop
into
jne
cmp
sub
xor
retf
push
or
xchg
jmp
mov
mov
fild
daa
pop
into
mov
test
sbb
sub
push
pop
sub
or
cmps
or
lahf
inc
pop
push
sbb
mov
jo
xor
xchg
adc
mov
les
dec
iret
pop
lock
in
mov
ret
mov
lds
mov
mov
mov
sbb
ret
ret
inc
ret
push
test
(bad)
xchg
sbb
jmp
pushf
in
lea
aad
and
cdq
cmp
iret
fmul
cmps
rol
or
dec
mov
mov
pop
ror
sahf
hlt
sbb
test
xchg
mov
(bad)
jnp
dec
adc
sub
jbe
psubw
mov
or
outs
mov
clc
jb
push
fwait
fwait
and
stc
mov
lods
mov
or
out
push
pop
bound
mov
mov
loopne
mov
and
dec
sub
push
sub
std
mov
add
cld
enter
sub
or
xchg
cmp
and
(bad)
cdq
mov
call
je
push
mov
cmps
mov
mov
mov
xchg
cld
or
les
(bad)
push
in
das
fwait
pop
jno
push
js
sbb
cmp
dec
outs
jnp
sbb
fxch
retf
xor
push
mov
bound
mov
test
lea
and
and
or
mov
sub
inc
mov
dec
pop
push
ja
sub
movs
and
or
cmps
xchg
into
out
aad
sub
jge
fld
or
dec
cwde
js
dec
push
outs
leave
and
mov
cmp
or
shl
inc
and
jnp
lea
loope
dec
xchg
dec
and
sub
inc
cli
jnp
sub
push
ss
dec
xor
mov
push
sub
mov
inc
xor
je
push
dec
jmp
sar
mov
add
shl
js
pop
(bad)
pop
pop
out
stos
nop
not
jle
and
mov
leave
mov
in
or
pop
xchg
inc
sbb
pop
jecxz
clc
pop
int
push
mov
retf
sbb
or
mov
push
mov
fist
fnsave
(bad)
ins
xor
sub
mov
or
repz
je
cmc
(bad)
js
aam
mov
mov
out
in
les
jg
or
adc
imul
stos
push
pop
cmp
jnp
aaa
push
(bad)
sub
push
pop
or
jp
pop
push
dec
mov
stos
or
add
les
cmp
jae
in
sbb
mov
loopne
je
push
stos
xchg
sbb
mov
cmps
mov
mov
ins
loopne
sub
pop
ret
jle
aaa
or
dec
mov
or
xor
rcr
sub
enter
sub
into
mov
mov
add
nop
xchg
in
add
fs
jmp
fadd
das
mov
inc
aas
(bad)
sub
cmp
push
xchg
hlt
mov
sbb
cmp
add
pop
scas
int
xor
mov
je
jp
jmp
(bad)
not
lods
cmp
jle
pop
and
push
mov
cmps
mov
jge
adc
cmp
cdq
sbb
xchg
push
jae
and
jp
fidivr
push
dec
jp
cs
std
fild
(bad)
mov
jp
scas
dec
pop
call
shl
add
loopne
std
xchg
scas
or
or
cmp
ret
cli
ins
and
imul
jns
bound
or
mov
sbb
aas
lds
leave
xor
adc
pushf
xor
pop
mov
icebp
cmp
in
sub
hlt
ret
jae
and
cmp
inc
mov
scas
xchg
jbe
xchg
std
out
mov
jnp
movs
shr
std
jmp
dec
sub
adc
imul
daa
xchg
sbb
sahf
mov
div
xchg
jbe
data16
push
cmps
push
push
adc
inc
mov
cmp
ds
push
fnstsw
xchg
pop
mov
lods
push
fwait
xor
imul
leave
add
retf
push
lds
mov
std
jnp
repz
and
push
(bad)
rol
adc
dec
outs
jle
inc
bnd
xor
jge
or
ins
fcom
adc
dec
mov
inc
test
sub
shl
dec
pushf
clc
cmp
jno
push
mov
push
xor
in
call
jp
imul
pushf
jl
jle
in
cmp
(bad)
xlat
sub
add
dec
and
jmp
mov
scas
sub
ror
bound
loop
arpl
lods
hlt
fucomip
std
pop
cmc
repnz
inc
sub
stos
push
jb
jmp
sahf
push
leave
sar
pop
inc
jmp
adc
mov
popa
iret
pushw
addps
mov
mov
stc
dec
pop
xor
sub
push
pop
xchg
clflush
mov
jp
in
and
push
in
or
push
mov
cmp
mov
push
mov
and
fwait
jmp
cmp
sub
js
hlt
inc
pop
jnp
dec
cli
pop
dec
dec
mov
cli
sbb
adc
inc
or
punpckhdq
pop
adc
inc
lahf
pop
xor
and
xchg
outs
outs
test
pop
outs
call
js
std
and
push
ins
pop
mov
fst
fisttp
test
(bad)
or
mov
cmps
xchg
fldenv
xchg
stc
cmovnp
enter
xchg
fwait
sub
fcmovnbe
jl
mov
fcom
sbb
xor
sbb
push
xor
mov
pop
pushf
fadd
cmp
bound
mov
jmp
imul
dec
imul
and
or
cwde
cwde
mov
mov
sub
sti
sub
or
sbb
lods
mov
ins
xchg
push
mov
jl
xchg
ins
sub
sbb
mov
adc
jmp
xchg
jg
call
mov
pop
pop
jmp
jns
xor
sbb
cmp
pop
scas
(bad)
mov
int
xor
cmps
inc
mov
sub
and
ficomp
pusha
push
ss
in
pop
push
adc
cmp
fistp
push
cli
ror
cmp
out
bnd
push
jmp
inc
mov
pop
push
dec
and
cmp
out
pop
lock
repnz
fcomp
sbb
hlt
adc
or
pop
(bad)
dec
int
sub
mov
dec
jnp
aaa
adc
sbb
mov
add
cmc
sbb
test
cmp
repz
call
push
mov
jp
test
loope
mov
jp
imul
sahf
sbb
sbb
imul
stos
push
sbb
call
bound
ficom
xchg
(bad)
iret
xchg
(bad)
leave
adc
xor
xchg
aas
in
test
jmp
adc
pop
fwait
jmp
mov
mov
(bad)
fs
jae
cmp
sub
int3
xchg
ja
mul
fwait
xchg
and
dec
dec
inc
int3
pop
pop
dec
push
out
leave
and
in
pop
xor
jecxz
cwde
stc
or
xchg
or
push
enter
jmp
ds
fs
test
mul
fs
cmp
aad
jl
sahf
aas
inc
cld
xor
mov
stc
mov
and
jne
cld
mov
sbb
movs
xchg
xor
call
xor
xor
add
popf
fisubr
std
ret
or
lea
ror
packssdw
neg
dec
stos
fs
ins
xor
sub
test
mov
lods
bound
leave
lds
call
retf
pop
or
dec
xchg
add
pusha
jle
jl
bound
xchg
pop
enter
xchg
sbb
je
and
jl
js
cmp
jnp
cli
sub
cwde
jl
sbb
gs
jle
push
addr16
push
fldenv
inc
xor
inc
stos
dec
(bad)
cli
or
dec
jne
xor
out
sub
jmp
inc
or
mov
test
jmp
imul
sbb
and
ds
sbb
iret
inc
cld
xchg
dec
mov
stos
mov
mov
or
retf
mov
mov
fadd
sub
jle
push
push
xchg
jp
cs
sti
or
pop
sub
pop
dec
test
sar
popa
fcom
mov
pminub
enter
xor
mov
inc
les
xor
je
loopne
ret
pop
or
out
nop
out
or
pop
pusha
jle
enter
mov
push
mov
mov
mov
rcr
mov
lea
cmp
sbb
jp
sub
sti
iret
mov
inc
aaa
rcr
into
sub
push
jbe
fnstcw
call
xlat
(bad)
out
std
in
ficom
xor
pop
add
lods
test
sbb
pop
xchg
sub
cmc
imul
push
adc
pusha
mov
push
push
jg
dec
inc
shl
sbb
jg
shr
xor
push
pop
pop
fisttp
jle
cmp
cli
pop
lods
jmp
adc
out
test
and
ret
dec
sahf
mov
xchg
sub
clc
mov
push
inc
pop
(bad)
dec
(bad)
in
push
sub
push
outs
sub
push
outs
leave
int
shr
pop
and
scas
test
sub
adc
mov
scas
jl
jmp
jmp
aad
sbb
dec
imul
call
into
(bad)
sub
fidivr
stc
push
je
inc
mov
add
and
dec
mov
scas
cmp
jmp
mov
mov
pusha
loopne
fimul
push
mov
std
cdq
mov
jo
fnstcw
push
jl
lods
ja
lahf
mov
in
push
or
dec
jns
cmp
pop
sbb
hlt
mov
push
push
into
ins
fiadd
sub
or
scas
imul
xchg
movs
mov
fdivr
mov
mov
xlat
rcr
jmp
add
js
mov
mov
sbb
ret
jns
pop
aaa
mov
sbb
jbe
sub
jmp
bndldx
mov
shl
mov
xor
sub
or
stos
in
ss
mov
and
call
fcomp
inc
dec
retf
out
xchg
push
sbb
rol
pop
jp
push
test
xchg
rcl
xor
xchg
fist
icebp
sqrtps
xchg
push
mov
dec
push
iret
lods
or
sub
test
clc
iret
stos
sub
cmp
push
cmps
(bad)
dec
pop
mov
sub
pusha
and
ds
cli
sbb
ret
or
adc
sbb
dec
bound
gs
mov
imul
in
test
sbb
mov
adc
js
das
cmps
int
inc
push
in
jo
add
cmp
or
pop
push
lods
inc
mov
sbb
jbe
outs
call
sbb
mov
pop
or
mov
cli
dec
js
outs
std
rcr
cmp
out
dec
mov
or
pop
mov
imul
pop
push
add
jbe
lahf
dec
dec
mov
sub
into
or
pop
loopne
out
pop
dec
fcmovnb
fwait
rol
push
sbb
imul
sbb
call
das
ss
test
xor
imul
sbb
xchg
div
ins
dec
aas
fstp
stos
ret
sbb
jl
lahf
push
mov
cmp
hlt
int3
inc
push
or
sbb
in
pop
sbb
or
xor
cmp
(bad)
(bad)
and
not
mov
add
jmp
fcmovnb
and
jmp
inc
pop
dec
push
cmp
retf
jbe
in
pop
retf
xor
repz
pop
hlt
mov
repz
scas
pop
scas
mov
les
popa
dec
out
out
rcr
sbb
push
pop
mov
mov
sub
inc
pushf
jmp
(bad)
pop
stos
pop
mov
data16
push
mov
cmp
adc
xlat
popa
pop
ss
out
mov
sub
daa
sbb
jmp
fiadd
jno
sub
inc
sub
sbb
push
inc
retf
or
inc
pop
xchg
xor
cmp
pop
mov
sbb
(bad)
mov
mov
push
clc
jp
cmp
test
test
psllq
pop
dec
cdq
jbe
push
sbb
mov
dec
call
mov
jge
dec
push
sub
add
cdq
jne
scas
int3
push
jg
and
pop
mov
cmps
ds
cs
push
pop
jo
inc
cmp
nop
test
addr16
scas
jo
mov
clc
sbb
or
nop
or
jl
mov
out
clc
in
push
or
cwde
mov
dec
dec
pop
sub
fwait
and
(bad)
neg
push
xlat
or
add
aas
cdq
in
fdivr
jg
mov
ror
addr16
iret
lock
jl
xor
pop
data16
dec
fisub
les
mov
pushf
cld
mov
outs
ss
mov
les
mov
stos
xor
call
stc
ja
or
test
les
in
add
iret
out
jg
test
sbb
mov
fdivr
in
jle
dec
cmps
icebp
iret
lahf
push
int3
mov
cmp
in
aam
call
cli
or
fisttp
and
push
adc
aad
jmp
cli
xlat
shl
pop
sub
leave
mov
sahf
pop
mov
sti
and
rcr
jl
in
add
cdq
jmp
mov
or
and
xor
ret
push
(bad)
or
retf
sbb
lds
cwde
push
push
jl
fadd
pop
jmp
neg
stos
adc
sub
stos
jne
mov
popf
scas
or
sub
popf
pop
xchg
or
push
popf
push
(bad)
or
mov
mov
fs
aaa
mov
sbb
mov
repnz
mov
adc
jge
sub
dec
cld
pop
mov
cld
inc
lds
enter
jp
push
mov
or
pop
pop
cmp
stos
retf
xchg
call
dec
sbb
(bad)
iret
pop
push
repz
iret
cmps
call
add
and
(bad)
fisubr
cwde
loope
out
pop
test
xor
(bad)
push
add
sar
fdivr
dec
mov
mov
sbb
add
sub
pushf
test
lods
ins
jns
jmp
in
rcr
ins
lods
test
mov
ret
mov
ds
pop
mov
or
mov
inc
pop
call
sub
push
xor
cli
jp
(bad)
mov
int
fucomip
push
push
sbb
hlt
aaa
jmp
rcl
cmp
mov
fisub
push
mov
lahf
stos
in
jmp
push
or
scas
cmp
push
loopne
lods
xchg
pop
imul
mov
adc
mov
cli
iret
cmp
jns
pop
into
inc
push
xchg
sub
enter
mov
jecxz
shl
pop
into
inc
fsubr
cwde
mov
inc
out
mov
and
xor
mov
stc
sbb
mov
imul
and
das
cmp
cmp
dec
clc
shr
fucom
jmp
mov
or
(bad)
inc
fldcw
jo
xchg
mov
fs
jle
sbb
dec
fcomp
sub
cmp
xor
das
or
rcl
out
or
ret
sub
mov
pop
mov
mov
sti
xor
push
test
pop
lahf
fwait
cmp
jle
or
lods
stos
jno
cld
pop
test
sbb
enter
psrlq
dec
sbb
add
or
mov
std
enter
hlt
fadd
sub
sbb
jmp
dec
add
xchg
mov
fs
mov
stos
lods
pop
fldenv
inc
in
retf
jo
bound
test
cmp
fdiv
into
dec
xor
push
mov
cdq
adc
mov
dec
mov
icebp
call
repnz
mov
fldenv
dec
and
lods
or
int
push
push
cmp
pop
pop
xor
mov
adc
pusha
fmul
mov
pop
pop
mov
xor
dec
bound
inc
sub
cmp
fild
pop
repnz
dec
mov
mov
hlt
mov
retf
and
inc
lock
inc
out
enter
jbe
jle
js
and
mov
jb
sbb
call
shl
mov
mov
cli
jmp
mov
sbb
fwait
in
pop
inc
cmp
jg
les
ins
leave
clc
or
sub
or
mov
jo
xchg
scas
mov
and
adc
add
adc
or
inc
pop
sbb
js
neg
int3
pop
sti
pop
in
cmp
mov
mov
addr16
in
mov
enter
(bad)
outs
jmp
push
sub
fs
sbb
xchg
cli
cwde
xchg
push
mov
data16
or
mov
pop
call
in
popa
rcl
sbb
mov
rcl
les
ins
out
cmp
adc
and
add
xchg
and
pop
xor
fisttp
(bad)
out
inc
push
xchg
mov
inc
rcr
jnp
aaa
(bad)
jb
in
loop
ds
cld
mov
cmp
fcomp
jns
jae
bound
jbe
and
dec
loope
mov
mov
push
sbb
adc
pop
(bad)
(bad)
(bad)
cwde
cs
sbb
mov
movs
sbb
or
mov
add
enter
in
sub
adc
pop
mov
inc
clc
lahf
mov
mov
loop
rcr
jg
jmp
xchg
xor
test
cmps
push
pop
les
jge
pop
add
mov
lock
pop
cmps
or
cmps
rcl
ret
jbe
cmps
inc
loop
add
(bad)
out
retf
sub
dec
pusha
dec
inc
retw
adc
repnz
das
out
stos
loopne
in
or
std
iret
add
push
jge
jge
pop
shl
call
cwde
imul
icebp
push
fstp
lock
retf
movs
fmul
mov
fimul
sub
sub
jns
mov
or
cwde
je
clc
sub
xchg
or
out
cdq
cmp
mov
lods
inc
scas
aad
lock
and
sbb
jmp
mov
pusha
out
mov
push
cmp
fdiv
imul
(bad)
sbb
lahf
or
jge
(bad)
jmp
mov
fcmovnb
mov
dec
cmps
adc
xchg
out
sub
aaa
ret
dec
cdq
clc
mov
nop
out
pop
xor
xor
mov
cmp
push
sar
push
or
xchg
mov
pop
fidivr
cs
jbe
xchg
(bad)
out
or
neg
lods
mov
or
test
add
test
test
push
jge
repz
loopne
jle
add
jnp
cmps
mov
aaa
mov
loop
cmps
fs
jl
call
movaps
int3
lahf
test
xor
xor
sub
or
loop
ficom
ret
fdivr
or
mov
mov
daa
lods
mov
imul
aaa
cmp
lahf
dec
(bad)
repz
mov
shr
int
push
adc
push
aam
mov
fdivr
add
mov
jle
jo
ins
mov
retf
pop
enter
mov
cmp
fwait
push
dec
in
xchg
xchg
pop
add
inc
mov
imul
sub
sbb
sub
adc
mov
fstp
(bad)
fnstsw
cmp
stc
push
into
pusha
dec
call
ja
cmp
sbb
lahf
loope
push
pop
mov
pusha
retf
push
mov
cmps
or
mov
call
or
enter
sbb
xchg
cmp
int3
adc
idiv
sahf
push
(bad)
mov
imul
outs
fld
ja
loopne
lods
adc
jge
scas
push
and
dec
std
aaa
mov
mov
push
sbb
push
xor
test
retf
adc
iret
add
dec
ror
pushf
sbb
data16
cs
loop
(bad)
rcr
push
or
in
mov
dec
mov
push
retf
push
mov
cld
sub
ss
jle
jge
cmps
push
sbb
and
jne
int
sub
xor
les
(bad)
das
ins
fdivr
xchg
fsubr
out
jle
push
pop
and
fsub
cmp
pop
cli
cmp
push
das
scas
jmp
cmps
push
not
dec
fisttp
pop
mov
cmp
and
(bad)
out
jmp
js
js
adc
inc
inc
dec
cmp
retf
or
cmps
stos
mov
push
mov
gs
retf
inc
(bad)
cmp
and
xor
cwde
clc
xchg
mov
sbb
cwde
imul
mov
cmp
icebp
ret
out
repnz
stos
scas
ins
cli
shl
adc
xchg
or
sub
push
jge
(bad)
jge
out
sub
mov
and
fld
mov
xchg
inc
lods
dec
push
or
lods
mov
mov
ins
inc
cmp
mov
scas
lea
sar
ins
scas
sti
fs
mov
jp
shl
fnstcw
jecxz
pop
pop
cmc
scas
dec
aaa
cmc
mov
and
xor
and
or
cmp
loopne
cld
xor
cli
xchg
cld
in
mov
scas
icebp
sbb
add
add
pop
and
ins
cld
push
push
push
cmp
imul
adc
sub
test
fcomp
clc
(bad)
mov
jno
dec
push
or
or
pop
ds
stos
sbb
pop
xchg
push
bound
push
sub
push
pushf
in
loop
jae
shl
cmp
sub
inc
or
cmp
cmp
mov
mov
iret
inc
and
stos
imul
shl
sbb
fcom
test
mov
fbld
pop
jl
or
jbe
add
shr
sub
test
jne
ret
test
enter
pop
push
test
bnd
xor
push
sbb
push
or
cs
sub
in
mov
fwait
retf
and
sub
lahf
jmp
call
pusha
pop
mov
pop
cmp
stos
daa
xchg
data16
jp
test
mov
iret
push
add
sub
popa
mov
int
sbb
lods
repz
or
pop
and
fcomp
loopne
out
fidivr
loope
add
retf
jge
ins
and
or
dec
sub
(bad)
call
pop
inc
sub
adc
jmp
je
push
sub
loope
add
adc
mov
sbb
lock
mov
mov
adc
inc
mov
sbb
jl
cmp
and
cmp
and
imul
dec
mov
push
fcomp
lods
loope
fstp
dec
(bad)
aam
dec
xchg
test
and
int3
add
clc
movs
imul
enter
loop
idiv
sub
xor
fwait
mov
repz
jo
rcr
aaa
retf
jmp
mov
cmp
(bad)
fisub
mov
or
ins
int3
push
push
inc
mov
std
pop
push
mov
enter
or
inc
fbstp
test
call
shl
jl
in
int
nop
mov
scas
jmp
inc
xor
dec
cmp
fdivr
lods
or
mov
je
xor
jge
mov
pushf
ja
and
imul
pop
cmps
stos
cmp
call
adc
lea
jecxz
clc
mov
aad
cdq
mov
push
sbb
and
fld
mov
mov
cwde
mov
dec
add
add
ror
out
pop
and
sub
imul
lods
add
adc
(bad)
lock
push
mov
or
loopne
enter
(bad)
dec
jmp
jp
jo
sub
xchg
cmp
stos
retf
hlt
adc
and
xor
xchg
mov
addr16
lahf
and
jb
push
and
stos
push
jne
jle
stos
bound
mov
mov
add
inc
out
aas
mov
mov
jbe
aaa
sub
repnz
mov
jne
mov
fwait
cmp
mov
aaa
idiv
jmp
pop
fwait
jnp
jl
pop
aad
fisubr
cmp
jmp
add
inc
inc
or
push
sbb
dec
dec
jno
test
mov
rol
in
fdiv
mov
mov
dec
(bad)
jmp
and
stos
rcl
and
cmp
jnp
pop
add
pop
(bad)
loop
cli
cmc
mov
retf
hlt
add
add
fistp
sbb
fmul
retf
mov
inc
das
es
sbb
movs
push
push
jno
jns
inc
push
add
cmp
or
xchg
cli
test
inc
jno
stos
rol
inc
retf
sub
add
xchg
call
sub
fsub
outs
fwait
pop
mov
mov
sub
and
ret
icebp
dec
enter
in
adc
add
mov
jae
mov
jp
xor
add
sbb
cli
xlat
in
mov
add
in
imul
cmp
dec
in
int
test
hlt
mov
sbb
retf
pop
test
and
and
std
inc
sbb
hlt
js
cdq
dec
sbb
mov
and
call
add
ret
and
sbb
sub
add
inc
dec
jne
jp
push
int3
jnp
push
cmp
dec
fst
fmulp
cmp
cmc
retf
xor
cmps
cmp
mov
arpl
mov
cmp
ins
ss
mov
cmp
mov
fwait
loopne
add
test
xchg
inc
pusha
sbb
sbb
arpl
adc
jl
test
mov
in
mov
lahf
imul
mov
dec
hlt
xor
imul
retf
loop
es
sub
or
vmwrite
pop
dec
dec
enter
(bad)
jl
pushf
xchg
and
imul
retf
popf
push
rol
int
pop
push
stos
mov
lods
mov
mov
cmp
mov
inc
dec
movs
aam
push
cmc
jns
mov
int3
mov
mov
test
(bad)
pop
mov
sti
call
cmp
retf
js
test
jae
jbe
test
pop
inc
or
xor
xchg
sbb
adc
mov
sub
fst
in
xchg
mov
xchg
int3
repnz
inc
clc
pop
mov
cli
fdivr
add
fcom
repz
stos
test
stos
xchg
in
les
jmp
sbb
loop
mov
stos
jno
pop
jmp
adc
aad
or
jnp
mov
outs
push
add
(bad)
js
int3
out
cmp
test
in
sbb
imul
adc
pop
inc
in
stc
neg
adc
scas
or
test
dec
(bad)
cmp
sahf
dec
iret
mov
(bad)
aad
call
sub
or
dec
mov
push
jno
add
mov
sbb
mov
call
jns
jmp
or
xor
pushf
imul
adc
dec
sbb
inc
xor
stos
push
mov
xor
and
outs
in
out
xchg
stos
and
inc
push
and
je
push
adc
jo
clc
cwde
push
cdq
add
outs
pop
ins
push
fldenv
test
mov
cmp
push
cld
jle
outs
pop
lods
popa
push
jb
fs
inc
inc
add
dec
scas
jmp
fs
scas
loopne
scas
fstp
and
push
and
mov
and
loopne
imul
mov
clc
dec
push
fsub
sub
fcmove
and
repnz
jp
fidiv
out
cmp
mov
xchg
pop
imul
push
adc
fwait
pop
sub
dec
or
iret
sbb
cmp
jg
imul
jne
test
cmp
push
ret
jle
sbb
pop
xor
adc
hlt
clc
fld
in
loop
nop
adc
ins
jns
aaa
dec
mov
scas
test
or
push
sbb
push
xchg
sti
pop
lahf
(bad)
mov
jecxz
pop
imul
jb
dec
sbb
pop
cmps
fwait
xchg
cmp
adc
dec
sar
sub
rcr
das
inc
sbb
mov
or
xchg
std
int
retf
outs
dec
std
xor
jmp
lods
or
jo
jp
sub
out
inc
mov
sahf
xchg
mov
mov
add
adc
or
mov
mov
iret
call
cmp
repnz
sbb
cmp
inc
add
into
push
cli
push
retf
mov
dec
mov
in
sub
push
in
mov
mov
bound
sub
in
test
sbb
xor
or
mov
jecxz
cmp
mov
mov
or
loopne
call
ins
inc
test
mov
ja
mov
loopne
test
sar
xor
(bad)
mov
and
shr
fisubr
lods
jle
jp
inc
int3
or
(bad)
(bad)
jmp
sub
sbb
mov
sub
push
push
shr
jno
popf
aam
mov
test
push
push
pop
or
out
retf
xchg
scas
mov
call
or
pop
push
and
pop
pop
xor
rcr
mov
dec
pop
mov
out
mov
add
pop
xor
ja
imul
xor
pushf
mov
jns
imul
fsubrp
retf
shr
pop
inc
inc
fdivr
pop
out
xchg
sub
mov
jae
call
std
test
std
ret
jmp
arpl
lods
mov
movs
fcom
mov
ss
sbb
pop
ret
pop
mov
jp
push
pop
adc
xor
pusha
sub
sti
add
and
retf
call
sti
(bad)
stos
pusha
sbb
rcr
(bad)
dec
fisttp
(bad)
call
lea
sbb
pop
test
lods
sbb
neg
pushf
jmp
cli
cs
clc
add
mov
push
fcmovb
repnz
xchg
nop
cwde
pop
inc
cmp
dec
xchg
retf
int
(bad)
push
add
lods
fild
ja
call
sbb
sub
mov
jo
aad
and
inc
jl
cs
(bad)
mov
daa
(bad)
call
mov
fidivr
movs
pop
sbb
xor
repnz
mov
cmp
and
sub
fdivr
push
dec
stos
enter
push
aam
cmp
stc
jmp
pusha
push
pop
out
pop
lds
pop
mov
dec
ins
sub
add
jns
test
mov
in
repnz
addr16
sar
cmp
fdivr
aad
pop
repnz
shl
adc
cwde
rcr
cdq
mov
js
add
sbb
stos
cmp
int3
cmp
hlt
jns
addr16
mov
test
fdivr
or
and
fstp
pop
popa
cwde
lods
mov
test
retf
js
xor
jecxz
cli
cmp
(bad)
mov
dec
cs
je
in
mov
xchg
push
mov
cdq
jg
jle
pop
push
pop
sub
jmp
shr
movs
and
xchg
pop
scas
dec
fisub
mov
pop
cld
pop
mov
push
int
mov
enter
popa
jmp
sub
pop
in
mov
pop
repnz
mov
xchg
mov
inc
mov
dec
cmp
loopne
xchg
pop
mov
cwde
jne
dec
dec
pop
rol
test
pop
ficomp
adc
sbb
ins
imul
dec
pop
loop
clc
shl
cld
sub
pop
sub
inc
(bad)
outs
loope
pop
into
cmp
add
fnstsw
pop
pandn
ret
jp
push
xchg
stos
stc
cdq
sbb
inc
dec
cmp
xlat
cld
fld
xor
or
add
pop
js
dec
mov
ss
loope
dec
mov
fld
push
jno
(bad)
jge
fiadd
dec
repz
sbb
fidivr
test
jbe
movs
(bad)
icebp
aaa
sahf
xor
std
out
outs
clc
fisttp
push
adc
int3
jg
xor
ins
retf
jnp
cmp
cli
int
dec
cmp
pop
sub
loop
push
jo
imul
xchg
mov
into
arpl
push
add
add
mov
sub
je
jmp
ret
icebp
bound
push
jmp
(bad)
bnd
fdivr
dec
and
xchg
punpckhwd
pop
cmp
ret
leave
call
pop
push
fwait
mov
(bad)
dec
jns
pop
sub
sbb
icebp
pop
mov
in
fldenv
xchg
push
into
je
xor
mov
xchg
jbe
push
cmp
sub
aam
adc
lea
popf
jmp
cmp
pop
sub
or
lock
inc
sub
mov
or
pop
xchg
xor
pushf
cmp
in
shl
aas
fs
sub
fcmovu
mov
test
sbb
pop
mov
sbb
test
popf
sbb
dec
sub
ja
ret
iret
xchg
dec
mov
ja
mov
mov
test
dec
or
mov
jns
test
sub
in
inc
test
shl
into
leave
mov
addr16
sub
fstp
repz
int3
(bad)
mov
inc
cli
in
adc
in
sar
and
ficomp
neg
jl
mov
sub
mov
pop
(bad)
std
movs
jo
nop
jae
sub
call
enter
jle
add
inc
mov
jge
cdq
fcom
sub
jne
or
or
push
shr
inc
sub
add
sub
ficom
pop
mov
sub
and
dec
(bad)
mov
clc
add
das
xchg
into
push
mov
jl
sub
push
or
pop
retf
retf
out
mov
sahf
jge
pushf
ins
loopne
test
mov
push
mov
dec
ret
outs
cmp
enter
xchg
or
test
stos
xor
pop
sub
out
jmp
test
retf
and
xchg
shl
int3
fs
mov
(bad)
cmp
aam
mov
mov
lahf
push
fidiv
cld
or
daa
arpl
cmps
sti
mov
xchg
sub
lods
outs
cmp
cdq
and
push
jmp
loop
mov
ins
out
aam
sub
sbb
in
mov
cmc
xor
lock
retf
pushf
xor
call
cmp
pop
js
test
(bad)
mov
xchg
dec
cmp
enter
and
(bad)
jo
stc
or
xor
add
ret
retf
sub
jnp
jp
push
xor
push
inc
push
adc
xchg
fidiv
sub
pop
nop
push
les
mov
xor
jb
mov
ds
or
xor
inc
lock
popa
cld
and
aam
in
arpl
into
or
loopne
mov
cmp
in
call
mov
cmp
mov
dec
fadd
xor
pop
mov
pop
(bad)
out
nop
and
dec
retf
pop
or
sar
das
xchg
dec
shl
lds
or
pop
push
leave
dec
fistp
in
in
push
or
ficomp
sub
xor
add
jo
into
fnsave
push
inc
push
ins
xor
or
sub
push
dec
outs
jmp
jb
enter
clc
xlat
or
pop
dec
retf
test
in
xchg
jne
inc
sub
(bad)
fsubr
js
icebp
jp
jmp
jg
add
push
sub
cwde
stc
add
sbb
sbb
stc
xor
pop
std
cwde
push
lods
stos
pop
or
inc
sub
js
rcl
out
lahf
mov
pop
mov
outs
add
sbb
cwde
or
pop
rcr
dec
add
mov
(bad)
lds
call
in
mov
das
dec
xor
pop
and
cmp
xchg
nop
jo
mov
es
cwde
icebp
sbb
inc
js
inc
movs
sar
sub
sahf
cmp
lods
mov
movs
mov
mov
dec
and
xchg
dec
sub
cwde
sub
xor
stos
mov
dec
popa
add
xor
outs
lods
sub
inc
sti
jo
jge
mov
pusha
sti
test
sti
popf
xchg
int
mov
repnz
in
cmp
aam
cmp
lods
repnz
outs
mov
cmp
test
dec
xor
sti
xchg
or
cmp
mov
push
mov
dec
fst
repnz
in
sub
pushf
and
cmps
lahf
stc
sbb
sbb
call
sub
dec
in
adc
fistp
jmp
jmp
jae
in
fstp
stos
cmp
mov
cwde
inc
adc
inc
push
ss
sbb
sbb
or
or
(bad)
mov
cmp
sbb
in
ja
and
and
add
xchg
sub
leave
bound
cld
repz
sub
call
pop
es
dec
js
movs
sub
push
xchg
test
jnp
enter
ficomp
dec
add
inc
add
leave
or
pop
retf
sbb
aam
adc
test
stc
sub
sar
push
dec
push
nop
xchg
stos
jg
pop
ret
inc
scas
imul
jbe
sub
dec
pop
arpl
iret
out
or
jns
xchg
xchg
stos
sbb
outs
sub
push
loop
cwde
adc
fadd
mov
sbb
(bad)
mov
loopne
(bad)
test
pop
enter
cli
aaa
mov
test
jb
jmp
xor
mov
or
je
call
cs
lods
fmul
lods
aas
int3
in
nop
sbb
mov
and
lds
xor
or
movs
ret
mov
add
mov
fucomip
fwait
dec
cli
pop
sbb
fild
mov
add
jmp
mov
lds
cmp
lock
mov
pusha
cmp
popf
push
push
bound
pop
ins
retf
(bad)
mov
inc
cwde
sbb
jmp
lds
es
pop
arpl
or
and
cmp
inc
test
mov
stos
sar
ins
push
test
movs
repz
mov
ret
fiadd
and
and
cmp
push
mov
push
jns
dec
cmp
scas
icebp
push
adc
imul
ret
scas
xchg
xchg
outs
fsincos
push
mov
scas
jecxz
mov
dec
pop
sbb
ins
sti
ret
scas
jns
mov
dec
mov
ins
and
ss
ds
sbb
or
fcom
leave
(bad)
cmp
clc
xchg
outs
sbb
cli
leave
mov
lods
sub
je
fwait
cmp
gs
xor
lea
sub
sbb
rol
mov
out
xchg
cmps
inc
and
fisubr
sub
mov
dec
jns
lods
or
scas
sub
cmps
xchg
adc
popf
fistp
jmp
cwde
iret
cmp
enter
out
int3
push
adc
mov
out
sub
sti
push
sahf
retf
dec
cmps
repz
or
dec
test
stc
push
repnz
fidivr
imul
jb
jne
repnz
xchg
cld
call
jp
push
retf
and
ins
sbb
mov
pushf
test
pop
cld
test
push
int
pop
pop
dec
xor
adc
fcomp
add
inc
mov
or
mov
sub
mov
sbb
lahf
lods
adc
mov
cmps
out
call
out
sub
push
cmp
fisub
mov
jbe
cwde
jl
pop
add
dec
dec
adc
sub
scas
cmp
or
pop
mov
cdq
mov
xchg
iret
call
jecxz
in
dec
mov
fisubr
es
fsub
dec
retf
dec
xlat
bnd
jl
jmp
icebp
cmp
adc
push
lods
addr16
dec
mov
dec
js
pop
enter
or
lea
or
movs
cmp
xor
ror
mov
sub
jge
inc
and
fs
or
cmp
xor
inc
fwait
or
pop
sbb
cmp
xchg
jae
mov
sti
ror
push
syscall
cmp
test
cmp
fadd
inc
jmp
sbb
xlat
(bad)
sub
jns
or
arpl
inc
jmp
pop
popa
sub
xchg
outs
dec
dec
scas
mov
in
mov
or
push
push
and
(bad)
jmp
movs
stos
xchg
mov
or
adc
jnp
mov
adc
sti
dec
jne
xchg
pusha
and
sub
inc
daa
in
std
pop
add
int3
cmp
outs
leave
jno
ret
inc
imul
mov
jae
sub
xor
dec
sub
push
push
jmp
and
jnp
pusha
add
mov
les
push
call
xchg
mov
cwde
mov
push
add
ja
and
or
dec
loop
inc
jge
call
xchg
(bad)
dec
data16
sbb
jae
stc
sub
cld
bound
cmp
mov
inc
sub
cmp
dec
dec
adc
adc
(bad)
nop
or
aaa
iret
adc
and
fadd
lods
or
push
dec
mov
in
sbb
sbb
mov
test
call
iret
enter
sub
les
jns
mov
punpckldq
in
rcr
jmp
ins
hlt
dec
dec
clc
cmp
scas
cmp
retf
cmps
outs
mov
add
add
mov
sub
mov
pusha
xchg
js
xchg
js
xor
push
and
add
jne
and
jp
pop
add
or
or
push
sub
mov
push
mov
fcmovne
into
dec
stos
mov
pusha
lahf
mov
(bad)
sub
outs
add
int
or
lahf
pop
into
push
inc
(bad)
lds
gs
jge
ss
sub
xor
pop
popf
int3
add
adc
in
xor
sbb
pop
sub
dec
sahf
jns
sbb
pushf
(bad)
pop
xchg
mov
outs
sub
sbb
rcr
call
sti
loopne
call
aam
aaa
(bad)
ds
test
out
push
sbb
sbb
call
mul
shr
or
(bad)
js
add
icebp
cmp
mov
push
fldpi
dec
sub
xor
ror
add
imul
mov
cmp
pop
jmp
inc
or
mov
fimul
popf
retf
pop
and
mov
retf
mov
add
mov
out
mov
cmovbe
cmp
jecxz
aam
and
or
jmp
jmp
mov
lods
ja
enter
loopne
sbb
fwait
rol
imul
mov
jne
jne
xchg
pop
inc
mov
jo
inc
adc
pop
or
rcl
jge
mov
mov
(bad)
xlat
mov
cmp
push
fxch
ins
enter
retf
jno
jne
jo
or
mov
mov
pcmpeqb
push
mov
fstp
mov
mov
ss
xchg
in
cmp
popa
test
sub
sub
cmp
pop
lea
sub
jmp
mov
push
inc
fidivr
rcl
jne
ja
shr
jns
rol
into
outs
jmp
jo
inc
out
xor
cs
mov
or
aaa
inc
dec
lock
stos
das
inc
push
mov
sub
inc
dec
in
in
leave
and
pop
int
clc
sbb
sub
mov
inc
cmp
ins
adc
cmps
adc
js
fisttp
into
dec
xlat
mov
je
(bad)
icebp
test
pop
dec
jecxz
sub
push
lahf
cdq
xchg
pop
mov
xchg
cwde
test
arpl
lods
in
addr16
enter
jbe
or
iret
mov
and
(bad)
and
adc
ret
pop
dec
stc
mov
and
jmp
fisttp
aaa
sub
dec
retf
sar
out
push
test
imul
cli
adc
ins
retf
sbb
ficomp
lahf
pop
mov
mov
push
repz
call
aam
sbb
cld
cmp
sub
or
loope
push
outs
jmp
fimul
mov
adc
in
push
fcmove
out
pop
jo
dec
fsub
lea
or
cmpxchg
cli
add
mul
gs
fstp
add
fsubr
xor
addr16
retf
inc
shr
jb
jp
mov
xor
ins
nop
es
lahf
mov
push
and
(bad)
push
scas
ret
push
jns
and
adc
test
sbb
push
sbb
sub
sti
or
xlat
scas
mov
daa
in
pop
mov
ror
mov
pop
add
push
mov
sub
fdiv
pop
add
scas
pop
ins
retf
in
lods
imul
cmp
sbb
cwde
bound
jo
cmc
test
in
pop
xlat
push
and
sbb
ror
test
sbb
in
xchg
out
pop
adc
shr
shr
inc
jne
add
inc
in
xor
xchg
jo
out
loop
iret
ficom
pop
xchg
jg
mov
jae
adc
xchg
loope
movs
or
mov
and
mov
mov
rol
nop
ror
push
or
lds
into
loopne
sub
mov
int
outs
jno
or
cmp
rcr
(bad)
add
pop
xchg
push
repz
fstp
cli
fstp
fld
sbb
ret
xor
(bad)
dec
loopne
out
cmp
in
fcomp
mov
stc
sbb
retf
mov
popa
ror
mov
dec
mov
cmp
jnp
int3
lods
add
pop
std
or
in
xor
push
sti
dec
call
hlt
xchg
pop
jecxz
fstp
sub
xchg
push
int3
mov
dec
push
dec
mov
repnz
mov
es
and
sub
pop
jle
stc
pop
dec
inc
movs
push
pop
enter
and
scas
mov
mov
mov
ror
xchg
jp
or
fcomi
movs
and
fcomp
call
cmc
pop
stos
(bad)
or
cdq
and
xor
or
xor
imul
or
addr16
and
dec
rcr
fwait
cmp
cmp
dec
movs
je
pop
aad
stc
aas
cmp
mov
arpl
dec
mov
cmps
stos
movq
js
ror
stc
(bad)
sti
add
jno
in
stos
cli
mov
ins
mov
mov
repnz
cmc
dec
adc
mov
imul
xchg
popa
and
add
pop
mov
sub
jle
xor
shr
js
leave
pop
dec
lods
fwait
sub
dec
leave
clc
stos
ins
sub
std
adc
int3
jmp
pop
mov
mov
jbe
xchg
push
in
push
or
fcom
jns
retf
shr
adc
in
retf
sbb
pop
test
mov
pushf
mov
fistp
retf
xchg
cwde
(bad)
mov
pop
adc
imul
dec
or
dec
or
and
and
ret
cmp
out
ss
push
fistp
mov
mov
cmp
adc
adc
jmp
xchg
sbb
fcmovnu
cli
cmp
jns
fiadd
fsub
imul
shl
in
pop
daa
and
sub
int3
mov
adc
sbb
cmp
or
or
icebp
pop
loopne
(bad)
and
daa
dec
xchg
(bad)
cs
or
shr
stc
scas
lock
and
test
mov
gs
fdivr
adc
test
jp
in
jae
mov
dec
mov
cld
mov
add
aad
mov
int3
mov
jp
jo
hlt
lahf
fistp
or
stos
dec
cmp
popa
inc
lock
je
sbb
pop
adc
jp
jle
es
sbb
(bad)
pop
push
cmp
pop
jmp
retf
cmp
xchg
ss
mov
stos
xor
stos
stc
sahf
repnz
sti
and
pusha
jl
jo
xchg
sar
ret
pop
jg
mov
dec
sub
nop
adc
sub
mov
pop
mov
inc
jae
inc
or
adc
out
movs
test
ins
jp
lds
mov
stos
mov
push
xchg
scas
(bad)
jmp
xor
cdq
mov
ins
xor
inc
and
jle
xchg
sub
sbb
fmul
push
fs
test
scas
mov
jae
and
mov
mov
cmp
push
push
sbb
mov
cmp
ss
sub
nop
add
cmp
mov
je
pop
lods
ins
stos
psubusw
sahf
add
shl
cli
mov
movs
sub
je
and
enter
cwde
movs
(bad)
mov
aad
sbb
shr
or
imul
imul
imul
leave
retf
or
xchg
pushf
xchg
mov
cmp
jbe
jbe
mov
retf
arpl
cld
or
push
cmp
sbb
fild
fidiv
adc
mov
sub
das
jbe
iret
bound
das
mov
out
lds
mov
xchg
cmp
or
xor
loope
mov
lods
add
mov
and
enter
add
mov
sub
addr16
xchg
out
nop
xchg
test
imul
mov
aaa
sbb
jne
js
outs
push
ret
(bad)
or
cmp
fimul
jbe
fdivr
retf
ret
ja
out
lods
lock
cmp
pop
or
dec
mov
add
add
sbb
stos
mov
cmp
cwde
sbb
sti
ror
loope
popf
sti
jns
fistp
xor
pop
xchg
imul
pop
inc
fidivr
sbb
int3
sub
lahf
mov
aaa
cmp
dec
jo
pop
mov
xor
in
inc
pusha
push
push
fstenv
fwait
enter
cmp
data16
(bad)
imul
test
cmp
mov
xor
sbb
xchg
pop
stos
push
sbb
rol
leave
mov
enter
pop
loopne
mov
in
retf
push
loop
sub
add
or
fistp
mov
pop
(bad)
aad
repnz
cli
xchg
sub
neg
cmps
int3
out
call
mov
add
and
test
in
mov
scas
stc
movs
dec
(bad)
mov
repz
rcl
mov
fdivr
rcr
rep
sti
cmps
or
mov
out
test
xor
fsubr
push
(bad)
sbb
imul
jmp
call
(bad)
mov
aas
jp
fsubr
(bad)
bswap
aam
scas
xlat
call
push
sub
retf
sbb
mov
shr
or
sub
stos
sbb
pop
jp
call
push
dec
sub
cmps
and
jg
adc
sbb
in
stos
push
test
sub
jmp
push
(bad)
mov
inc
dec
sub
jae
lds
(bad)
jb
enter
(bad)
stc
mov
mov
xlat
jns
cs
test
mov
pop
sub
fcmovb
inc
mov
fsubrp
imul
pop
or
xor
push
pop
rol
js
cmp
sbb
ins
sbb
add
lock
xchg
(bad)
adc
mov
inc
ss
mov
imul
adc
retf
adc
push
cli
adc
cmc
in
mov
sti
pop
loop
sub
call
add
sbb
clc
mov
aam
ins
outs
movs
pop
dec
nop
lds
mov
xor
mov
sub
arpl
out
or
loop
jnp
test
jle
inc
mov
lods
aam
inc
jmp
stos
js
sbb
lods
cli
retf
movs
add
lea
in
retf
add
xor
(bad)
xchg
repnz
mov
cmc
pop
in
mov
cwde
add
dec
mov
mov
mov
cld
sub
mov
imul
int
retf
jle
test
fidiv
call
sub
add
sbb
and
retf
adc
push
push
stc
mov
test
xor
ss
fiadd
adc
jecxz
add
sahf
loop
mov
fwait
xor
out
aas
ja
and
or
or
mov
fucomp
jnp
pop
pop
jg
and
cld
rol
inc
or
out
lods
pop
inc
iret
loopne
jp
dec
or
cmp
push
add
mov
sti
pop
cwde
mov
fs
add
retf
arpl
mov
sub
pop
sbb
mov
push
jle
add
fsubr
push
mov
push
cmp
push
retf
cmps
aaa
and
adc
test
jns
jmp
dec
pop
pop
lods
in
xchg
cmp
test
add
retf
sbb
mov
push
mov
je
sub
adc
and
adc
ret
in
ss
addr16
inc
pop
test
jmp
lea
jl
pop
sti
in
pusha
test
jb
sbb
into
add
and
inc
xchg
inc
movs
xchg
or
in
mov
fwait
aaa
push
outs
shr
call
jmp
fstp
dec
icebp
int
fisubr
xor
xchg
je
add
dec
fsubr
ds
mov
aaa
in
pop
lahf
test
imul
fadd
shr
push
daa
cmp
daa
sub
sbb
imul
mov
dec
adc
pusha
out
fucomp
dec
sub
scas
push
push
lods
gs
in
jl
in
(bad)
popaw
adc
adc
dec
sub
cmps
jmp
pop
retf
jbe
sbb
mov
mov
lahf
aaa
sub
fimul
jne
lods
jb
aaa
xor
std
sub
inc
and
sbb
or
fild
clc
pop
xchg
dec
sub
ja
ins
lods
push
iret
pop
xchg
pop
stos
pop
cmp
fstp
ins
(bad)
adc
mov
fimul
retf
ins
dec
(bad)
int
mov
sub
jne
adc
inc
lock
fs
dec
xor
imul
fisttp
mov
fs
fidivr
js
clc
out
out
jge
hlt
sbb
sbb
mov
mov
test
sub
jb
jnp
sbb
mov
daa
retf
jecxz
mov
iret
dec
pop
fidivr
push
pushf
stos
sbb
adc
or
call
or
fadd
cs
push
jno
js
dec
mov
mov
jmp
popa
cmp
lods
and
repnz
or
fisttp
je
cld
out
add
mov
mov
mov
cmp
psubq
out
lea
push
push
mov
dec
aam
bound
jg
stos
xchg
sub
jns
mov
icebp
rep
sbb
jmp
dec
dec
xor
pusha
cmp
in
fs
in
mov
dec
jns
pop
rcl
or
ja
jp
sti
xchg
push
dec
ds
mov
cmp
xchg
loop
xchg
mov
inc
inc
in
loopne
dec
pop
push
scas
sbb
popf
leave
fbstp
add
mov
jbe
push
xor
lahf
jmp
rcl
outs
xor
pop
les
cmp
adc
sar
retf
aam
lahf
mov
bound
dec
nop
mov
inc
dec
shl
test
mov
js
sbb
shl
cli
lds
scas
retf
call
mov
sub
pop
aaa
pop
inc
cs
push
jp
pop
and
jmp
call
jecxz
or
mov
cmp
stos
imul
in
sti
mov
mov
pop
mov
push
or
pushf
push
shl
push
pusha
test
and
aaa
repz
int3
mov
sti
lock
int
pop
hlt
call
shl
jmp
fnsave
pusha
sub
jl
dec
dec
adc
sub
stc
and
js
sub
mov
in
ss
mov
cwde
daa
cwde
pop
in
es
clc
cmp
mov
and
mov
xchg
pushf
mov
xchg
imul
cwde
imul
retf
lock
jmp
cdq
cmp
outs
sbb
fdivr
jnp
mov
sub
stos
popf
sbb
mov
test
cdq
cmp
fwait
inc
add
pop
pop
dec
ror
scas
or
dec
enter
loope
pop
jg
pop
cli
push
imul
adc
ficom
lods
jmp
sub
dec
mov
nop
cld
add
and
fimul
pop
jnp
ins
out
adc
mov
jmp
jmp
pop
xchg
das
push
and
test
or
cmp
add
push
dec
call
dec
dec
mov
sub
adc
loopne
mov
jmp
(bad)
xor
dec
jnp
push
mov
mov
test
pop
hlt
xor
adc
sbb
test
jmp
out
mov
mov
xchg
jno
push
pusha
nop
pop
retfw
inc
in
mov
nop
sub
cmp
or
cmp
cmp
mov
jl
fcmovnbe
(bad)
sti
cmp
imul
(bad)
fcmovu
inc
out
fstp
mov
leave
(bad)
imul
inc
dec
imul
dec
pop
inc
inc
daa
sub
add
repz
mov
jne
dec
inc
xabort
fidivr
inc
ret
sbb
jge
sub
sub
sub
nop
jne
xor
jb
cmp
pop
stos
rol
jmp
add
out
mov
jecxz
iret
or
rcr
pushf
popa
ret
cmp
fcom
mov
enter
loopne
mov
mov
mov
fwait
std
outs
xchg
inc
dec
sub
push
push
sbb
or
xor
add
lock
(bad)
push
xchg
xor
inc
xor
stos
sbb
mov
bound
cmp
shr
sbb
dec
mov
int
mov
nop
shr
push
pushf
shl
outs
in
dec
jp
and
add
cmp
adc
cmp
loopne
xchg
cwde
into
pop
push
mov
es
jmp
mov
aam
pop
jle
or
sub
jmp
dec
adc
mov
xor
adc
and
ret
xor
cmc
cmps
add
std
sub
(bad)
daa
icebp
je
fcomp
mov
pop
je
jp
jno
cdq
sub
or
retf
xchg
dec
mov
dec
push
cli
cmp
loop
mov
ds
jmp
mov
jmp
adc
sub
xor
stos
or
xchg
jge
lea
sub
push
(bad)
jp
ja
add
jp
stos
pop
loopne
jp
sar
sub
sbb
mov
mov
ins
or
or
icebp
repnz
or
movs
sbb
mov
(bad)
pop
and
mov
loop
imul
add
out
xor
jae
fsubr
xor
or
pushf
fcmove
(bad)
push
clc
rcr
or
push
les
pop
cmc
cmp
call
scas
jl
push
xchg
pop
fcomp
mov
stos
outs
add
les
(bad)
leave
xor
jmp
push
push
bound
inc
stos
fnstenv
or
xor
enter
sbb
jns
xlat
xor
in
sbb
push
call
lahf
pop
mov
rcr
and
pop
popa
mov
xor
or
fisttp
imul
xchg
dec
add
and
pop
jae
call
loopne
jp
stos
fs
sbb
pushf
cmp
leave
cmp
sbb
xchg
repnz
mov
bts
fwait
pop
xchg
push
js
inc
xor
jmp
sbb
fisubr
mov
test
ficom
sti
mov
movs
ss
sar
fs
fs
xchg
add
dec
xor
inc
or
stos
sti
shr
mov
iret
cdq
inc
ret
daa
mov
mov
ss
inc
iret
cmp
or
inc
pop
daa
rcr
jmp
icebp
js
cmps
dec
out
cdq
scas
jmp
sti
pop
stos
adc
int
les
js
jnp
mov
sub
cli
sub
push
or
retf
in
pop
dec
leave
enter
mov
cmp
pop
cli
cmp
add
jb
cmp
outs
stc
imul
mov
ret
push
mov
mov
stos
pop
adc
(bad)
paddsb
cmp
ret
out
or
popa
dec
pop
mov
or
mov
(bad)
fcomp
test
dec
fimul
fwait
pop
scas
mov
sub
cmp
xchg
add
idiv
es
mov
bnd
cmp
das
or
or
jbe
push
mov
cmp
scas
sbb
mov
adc
cmp
push
movs
lock
adc
push
retf
jp
das
out
icebp
movs
push
pop
into
popf
aad
jmp
mov
cwde
sbb
cdq
inc
dec
mov
int3
or
mov
cld
pop
enter
or
call
retf
cwde
cli
sub
sar
daa
sbb
xchg
jne
icebp
test
adc
out
fs
rcr
out
sbb
mov
inc
inc
(bad)
jmp
nop
pop
cmp
add
aas
ror
push
mov
dec
jmp
cmp
sub
fwait
jmp
je
test
in
shr
mov
inc
iret
pop
sar
in
mov
mov
loopne
xor
jg
and
cld
pop
sbb
sub
push
adc
push
dec
in
pop
fistp
fiadd
neg
jmp
jno
aam
sbb
cmp
in
mov
mov
push
dec
into
jne
test
and
loop
fld
push
adc
mov
lock
add
aam
inc
stos
cmp
mov
in
stc
js
jns
sub
xchg
sub
call
pop
cmc
or
push
out
pop
out
pop
fidiv
cmp
cwde
sbb
sti
jns
call
loopne
lea
test
cmc
adc
std
pop
sar
mov
mov
cli
add
nop
jno
fadd
(bad)
ffreep
stos
pusha
pop
push
pop
add
dec
aas
push
das
xor
in
jmp
xchg
sbb
call
rcl
lods
xor
mov
mov
or
jp
push
icebp
mov
add
je
cwde
jae
jnp
pop
jmp
iret
sub
je
sub
jno
mov
cmc
cmp
into
cmc
fsubr
push
lds
retf
pop
adc
adc
pop
pop
lds
jg
sti
pop
mov
mov
outs
pop
fxch
and
test
jns
cwde
sub
(bad)
fcom
cli
outs
aad
mov
(bad)
mov
push
add
clc
arpl
in
pop
mov
push
mov
xor
jle
das
stos
ds
push
stos
push
jle
pop
cmps
mov
sub
pop
or
fild
pop
or
and
mov
mov
mov
sub
adc
jle
aaa
push
jno
repz
ficomp
out
dec
call
test
stos
inc
jne
dec
lea
(bad)
push
sub
push
sub
add
jge
call
push
call
add
aaa
sub
fnstenv
pop
xchg
mov
mov
sbb
cdq
idiv
mov
stos
ins
call
outs
aas
repz
add
(bad)
jmp
(bad)
xchg
cmovo
adc
or
imul
bound
jbe
pop
movs
leave
sahf
ins
mov
hlt
lods
jp
cdq
shl
mov
or
or
sbb
add
outs
shr
adc
dec
cld
cmp
adc
push
loope
lods
dec
enter
test
cli
pop
ret
inc
out
pop
hlt
sub
inc
daa
in
dec
adc
sahf
mov
or
loop
fsub
pop
in
gs
push
ss
sar
ins
cmp
pop
jl
adc
cld
jo
or
sti
rcl
in
mov
xchg
and
cmp
imul
sbb
retf
mov
jo
jnp
sub
jmp
jg
stos
cmps
jge
outs
push
xchg
jmp
cmps
cmp
call
pop
out
pop
icebp
and
mov
iret
mov
adc
addr16
sti
or
jp
jmp
sub
retf
pop
sub
dec
popf
cli
sub
js
sub
jae
dec
mov
jl
shr
gs
(bad)
fldenv
jb
sub
fisub
retf
adc
aad
jge
cs
xor
inc
dec
mov
into
data16
jmp
or
push
jns
into
push
call
test
jmp
xor
int3
mov
add
mov
xchg
pop
movs
fidivr
cs
stc
push
xchg
mov
xor
dec
sub
cld
add
retf
or
jge
cmps
jno
fisttp
xchg
mov
push
ret
push
dec
mov
es
jmp
adc
imul
in
cmp
and
aaa
je
mov
inc
adc
sub
daa
sub
push
repz
jmp
jg
mov
ins
sbb
push
inc
mov
fldenv
(bad)
(bad)
dec
gs
bound
mov
fild
dec
and
sti
add
sub
ret
mov
jmp
pop
mov
sub
sbb
data16
(bad)
outs
push
sub
imul
outs
mov
sbb
aad
jg
jmp
adc
adc
call
mov
js
test
call
or
mov
sysret
stc
pop
div
in
lds
adc
stos
add
shl
and
push
fadd
push
sub
mov
add
push
ins
jbe
retf
pop
xchg
pop
sub
cld
inc
mov
mov
pop
sub
pop
sub
mov
ja
sbb
stos
jo
test
fcom
xor
neg
lock
lock
fnstsw
stos
xchg
(bad)
lahf
inc
ins
inc
xchg
jg
pop
call
pop
sub
jmpw
pop
repz
popf
int3
xor
iret
test
test
(bad)
jmp
outs
sbb
fldcw
push
popf
dec
push
stc
pop
mov
dec
xchg
cmp
fdiv
cmps
popa
xchg
popa
dec
call
out
or
jecxz
mov
imul
dec
push
call
mov
jmp
adc
stc
pop
jmp
sub
call
push
adc
cmc
jo
xlat
jp
dec
ds
jmp
xor
test
dec
pop
stc
mov
in
out
mov
fneni(8087
jmp
test
add
dec
cmps
clc
sbb
test
retf
fnstenv
lea
fcomp
sti
stc
js
pop
stos
cmp
iret
xor
repnz
jmp
je
lahf
jb
and
and
cld
xchg
add
stos
jmp
out
cmps
mov
test
push
mov
and
dec
xlat
lds
out
push
mov
xor
retf
mov
cmps
pop
pop
dec
popf
lock
pop
dec
mov
scas
sub
(bad)
and
mov
test
push
jmp
sti
sbb
dec
stos
cld
sbb
adc
(bad)
fdiv
test
fs
jp
retf
cwde
retf
push
mov
cmp
es
jo
jo
add
sub
cvtdq2ps
jmp
mov
sbb
jmp
aas
dec
lea
dec
mov
mov
data16
loopne
xchg
call
xchg
das
enter
outs
repnz
cdq
out
scas
pop
retf
jbe
sub
mov
mov
scas
sbb
ins
and
xor
mov
jge
retf
loopne
cld
inc
test
jmp
jb
jns
mov
push
cdq
out
inc
jo
in
jne
cwde
sub
pop
jnp
sub
int3
add
push
in
pop
sub
leave
push
pop
or
or
addr16
addps
jl
dec
sub
jmp
loop
les
pop
not
ss
mov
push
xchg
and
dec
add
call
imul
or
imul
sti
jl
mov
hlt
sbb
(bad)
or
mov
iret
dec
stos
sbb
popf
jmp
jo
iret
pop
cwde
xchg
popa
inc
add
pop
mov
sbb
aam
mov
repz
pop
jno
into
mov
jg
pop
mov
imul
mov
mov
xchg
inc
cmp
mov
(bad)
xchg
sub
pop
cmp
inc
enter
repnz
or
mov
mov
dec
mov
inc
(bad)
mov
push
jge
pop
js
rol
inc
daa
xor
pop
cwde
scas
rol
xlat
cmp
dec
stos
pop
cmp
aad
pop
repz
je
pop
div
ja
loopne
pop
pop
dec
sbb
lds
call
mov
mov
mov
sub
sub
js
pusha
cmp
add
ins
sbb
push
jno
pusha
jne
pop
adc
push
nop
mov
sub
ins
sub
jno
in
fisubr
dec
fisttp
mov
and
sti
push
aas
loop
inc
push
inc
imul
jno
pop
out
pop
and
js
repnz
sub
pop
bt
pop
dec
cmp
adc
and
or
out
dec
std
and
mov
push
loop
sbb
out
and
out
imul
div
inc
add
jb
(bad)
stos
add
mov
xchg
and
xlat
(bad)
cmc
bound
or
fild
ins
clc
std
(bad)
pop
leave
xchg
int
dec
sbb
js
cmp
dec
aad
mov
or
mul
mov
jmp
loopne
add
jbe
sbb
mov
test
jmp
push
xchg
stos
rcr
dec
and
push
mov
test
sbb
sbb
ins
and
ss
cmp
or
int3
retf
mov
in
out
cmp
ss
jmp
dec
in
sbb
std
out
pop
add
xor
mov
sahf
cmp
dec
stc
lods
xchg
imul
mov
or
aas
loopne
lahf
mov
iret
and
pop
jmp
mov
sbb
add
or
imul
adc
push
add
aas
sbb
pop
sbb
xchg
stc
add
loopne
xor
bound
cmp
add
cmps
cwde
in
pop
cmp
je
add
out
js
xchg
add
mov
out
(bad)
retf
lahf
dec
push
sub
mov
jno
lock
xlat
(bad)
fmul
add
scas
repz
cmps
movs
dec
bound
mov
pop
(bad)
cwde
dec
jmp
jmp
out
imul
les
repz
lock
dec
or
out
clc
mov
clc
mov
xchg
lods
dec
call
or
cmp
xor
dec
mov
or
ror
cmp
and
mov
lods
cwde
fucomip
and
or
sbb
cmp
clc
mov
rcl
mov
dec
iret
mov
clc
or
mov
xor
mov
mov
retf
test
cmp
mov
push
loope
and
jp
jns
jns
or
jo
sbb
cmp
mov
fwait
mov
or
pop
adc
test
dec
pop
dec
enter
sbb
inc
neg
clc
repz
jmp
cdq
fild
pop
jnp
xlat
and
mov
int3
int3
sub
add
jns
arpl
jo
xchg
cmp
mov
sub
pusha
nop
fstp
pop
adc
test
cmp
fs
inc
iret
mov
pushf
fnstenv
cmp
adc
mov
test
dec
add
in
xchg
test
in
outs
jl
rcl
sbb
or
or
mov
aas
xlat
ror
or
sub
pop
arpl
cdq
mov
imul
mov
sub
fnsave
test
pop
pop
push
hlt
sbb
sbb
pop
sar
sub
jnp
ins
pop
mov
cmp
nop
test
es
fsubr
cmps
call
xchg
dec
cmp
call
pop
ss
sub
jle
in
lea
xor
inc
cld
dec
cs
push
pop
gs
jecxz
int3
and
dec
inc
retf
mov
xchg
push
xor
cmp
adc
in
daa
dec
movs
leave
(bad)
mov
test
clc
add
(bad)
and
call
xchg
mov
lock
push
push
adc
sub
mov
add
(bad)
push
jo
fwait
add
mov
sbb
adc
lahf
or
(bad)
pop
dec
xor
scas
imul
mov
out
in
stc
daa
mov
pop
sbb
sub
add
sub
push
adc
add
jl
dec
adc
mov
loop
cld
lock
sbb
xor
or
idiv
lea
cmp
and
adc
xor
dec
leave
mov
mov
inc
push
sub
add
sbb
or
scas
sbb
sti
pop
lahf
js
sbb
sub
mov
stos
das
fldcw
test
int
xchg
js
clc
mov
push
cmp
mov
mov
mov
pop
jg
pop
scas
pop
jmp
pop
adc
push
imul
sub
inc
add
jb
dec
imul
push
push
loope
pop
inc
out
jmp
out
(bad)
sbb
in
dec
jb
sub
ins
or
pop
nop
ja
cmp
cmp
(bad)
cmp
sahf
stos
fisubr
push
adc
sub
test
test
push
push
lahf
inc
in
(bad)
or
clc
sub
or
jb
cmp
adc
jecxz
leave
cs
scas
mov
test
imul
xchg
push
test
stos
cmps
sti
sub
xchg
loopne
mov
shl
dec
cmp
push
xor
pop
lock
jmp
arpl
or
sbb
(bad)
movs
jnp
lock
or
div
call
sbb
dec
lock
das
sbb
sub
sub
cwde
dec
dec
icebp
lahf
imul
lods
popa
push
(bad)
neg
or
sbb
aas
(bad)
stos
shr
sub
lahf
xchg
arpl
add
popa
pop
loopne
pop
cmp
stos
fstp
mov
xor
call
mov
outs
in
bound
lock
mov
jg
(bad)
sub
dec
push
lods
cmp
jmp
fadd
fcmovu
cmp
cwde
push
sub
popf
fcomp
je
pop
mov
mov
sub
jo
repnz
ror
pop
fdivr
into
sub
xchg
fcomp
mov
lock
arpl
mov
add
mov
mov
pop
push
push
rol
sub
in
mov
xlat
push
sub
bound
mov
sahf
test
call
js
ror
sbb
or
xlat
mov
adc
fld
arpl
mov
sbb
xchg
fsincos
(bad)
push
pop
cmp
scas
call
daa
in
mov
mov
cmc
mov
retf
add
mov
ret
cli
leave
(bad)
enter
clc
aas
mov
mov
inc
(bad)
das
push
inc
ins
mov
stos
sub
jge
cmp
jae
ficom
and
inc
cmc
cmp
lock
xchg
add
psadbw
push
rol
(bad)
sub
sbb
je
jmp
fnstcw
dec
add
sbb
ret
repz
sub
call
in
retf
outs
xchg
ja
dec
cwde
pop
pop
jl
loope
adc
icebp
xor
sbb
sub
ror
outs
cmps
retf
scas
call
jb
mov
or
push
lds
popf
sub
push
mov
repnz
or
nop
(bad)
fbld
mov
lods
cwde
dec
call
test
and
fistp
out
xor
xchg
call
aaa
push
test
pop
leave
xchg
mov
mov
imul
sub
mov
cmp
dec
movs
sti
out
jle
sub
dec
dec
cmp
shr
jb
or
sbb
mov
push
(bad)
in
jne
das
dec
pop
retf
inc
pop
jno
test
or
mov
sbb
ins
movs
or
gs
push
or
or
rcr
cbw
jnp
(bad)
retf
push
repz
repnz
xchg
aas
ror
jno
mov
out
gs
jnp
enter
jnp
adc
repnz
lahf
sub
mov
jecxz
test
pop
dec
mov
sti
pop
sub
adc
xchg
shl
mov
mov
push
jnp
shl
fist
mov
or
xor
push
and
jne
xchg
sub
sahf
outs
das
frstor
mov
pop
push
ret
inc
add
daa
and
inc
cmp
enter
mov
sub
cmc
setp
retf
adc
outs
mov
jns
sub
jl
fsub
or
(bad)
jb
and
sub
mov
cmp
test
int
pop
push
mov
lods
add
jecxz
adc
mov
out
sar
pop
dec
xchg
pop
test
leave
int3
or
push
sti
hlt
aam
sbb
xor
cs
pop
cmp
cmp
pop
xor
and
sbb
push
sbb
cmp
movs
xor
call
adc
fsubrp
mov
push
ja
fwait
dec
test
push
ror
sbb
sbb
cmp
fs
fnstcw
mov
rol
pop
jle
jp
pop
xor
xlat
sbb
push
rol
cmp
xchg
mov
jmp
inc
call
movs
lods
iret
cmp
jne
sub
test
cld
sub
popf
lds
aaa
loopne
js
in
pop
adc
cmp
mov
mov
mul
fptan
mov
(bad)
fadd
data16
enter
add
stc
dec
stos
mov
stos
sbb
pop
je
push
and
(bad)
mov
xor
(bad)
mov
mov
lods
mov
sub
stos
test
cli
fmul
jo
mov
(bad)
xchg
cmp
pop
lock
pop
jmp
imul
mov
dec
mov
or
ja
data16
das
xor
xchg
sti
jecxz
add
cwde
dec
pop
dec
push
dec
repnz
and
sub
or
push
out
(bad)
imul
cmp
dec
pop
xchg
ins
pop
inc
inc
push
inc
fmulp
test
dec
mov
jl
cmp
add
and
jg
or
scas
xchg
test
dec
xchg
mov
pop
jo
jmp
push
shr
cmp
push
mul
cli
stos
call
call
outs
leave
sub
inc
movs
and
xchg
xlat
mov
pop
mov
std
outs
pop
fidiv
mov
sar
enter
pop
fld
fidivr
movs
je
stc
das
arpl
dec
js
int
dec
inc
sub
pop
sbb
movs
xor
ins
lock
mov
mov
std
test
or
mov
jg
mov
dec
retf
aas
cmp
mov
push
cmp
stc
lds
(bad)
sbb
sub
ds
cmp
retf
mov
sub
inc
pop
pop
xchg
adc
loopne
mov
mov
inc
inc
xor
sub
je
retf
fidivr
int
pop
shr
in
pushf
and
cmp
sub
cld
outs
stos
adc
movs
inc
outs
xchg
das
cwde
mov
arpl
enter
sub
stos
sbb
push
int3
sbb
dec
out
mov
pop
xchg
mov
pop
pop
in
mul
jg
popa
out
xor
mov
xchg
js
push
push
sub
pushf
loop
jnp
cwde
adc
mov
cmp
pop
enter
push
sub
imul
push
dec
or
sub
popa
test
xchg
or
stc
xchg
sub
mov
into
xor
pop
add
stos
imul
sub
clc
cmp
pop
leave
inc
fwait
xchg
jnp
fadd
dec
call
aad
test
mov
mov
sbb
mov
ds
(bad)
add
outs
jns
push
(bad)
mov
leave
stos
mov
or
pop
push
pop
mov
add
mov
loop
cmp
ins
lods
aaa
leave
jae
sbb
popa
data16
cmp
cmp
push
fs
loop
mov
es
cmps
repnz
ins
jecxz
jbe
cli
test
mov
sahf
or
dec
iret
inc
sbb
outs
sub
mov
mov
and
cmp
popf
jnp
sbb
mov
mov
or
jmp
(bad)
leave
lods
pop
adc
mov
dec
mov
add
jg
int
fnstenv
jae
xchg
jmp
test
xchg
fdivr
loope
sub
enter
leave
xor
pop
push
ret
cmp
sub
outs
and
dec
icebp
lods
imul
push
add
bound
jecxz
sub
jo
lock
jb
sbb
inc
cmp
loope
mov
inc
inc
cmp
call
leave
mov
sub
sbb
lock
sbb
shl
les
or
pop
cli
dec
call
aam
adc
out
movs
(bad)
ror
fdiv
xor
sbb
(bad)
clc
out
stos
sub
cwde
jp
call
mov
jb
in
sub
fldenv
sbb
mov
and
adc
cmc
inc
enter
ss
fldenv
pop
loope
sbb
sub
sub
or
std
mov
xchg
enter
jns
or
push
and
sti
nop
mov
mov
je
movs
fstp
xchg
xor
mov
add
jl
pop
mov
mov
push
cmp
movs
dec
cmp
mov
pop
lds
xchg
loop
fld
call
inc
shr
addr16
dec
out
push
sbb
cli
test
ss
mov
out
data16
mov
lods
jp
mov
dec
add
stos
cmp
(bad)
jp
xchg
in
or
pop
sbb
cmp
aas
cli
cwde
mov
sbb
stos
stos
ror
mov
ds
jbe
fwait
jmp
xor
nop
push
shr
scas
mov
retf
or
adc
or
lock
(bad)
push
pusha
scas
enter
lods
mov
xsha256
cmps
adc
xor
mov
sub
frstor
jge
pop
fcomp
(bad)
and
mov
xchg
adc
push
sbb
shl
sbb
iret
js
enter
inc
test
call
cmc
mov
push
mov
sbb
mov
stc
mov
mov
cmps
push
dec
or
or
dec
fmul
cwde
mov
and
fcmovb
enter
cwde
adc
sub
cmps
sbb
scas
aaa
sub
jmp
addr16
inc
sub
not
sub
xchg
outs
xor
mov
(bad)
pop
pop
dec
or
or
dec
js
mov
jne
mov
out
pop
add
(bad)
outs
jb
jmp
ins
mov
inc
movs
push
mov
mov
sub
rcr
sub
cwde
outs
into
stos
mov
xor
dec
jge
sbb
mov
cmp
outs
fsub
jl
and
hlt
ret
mov
or
in
sbb
into
sub
push
scas
or
repnz
sahf
enter
dec
xor
pop
adc
jns
iret
xlat
jge
sub
jge
jp
adc
mov
mov
ins
retf
xor
push
xor
or
adc
sar
fsub
inc
pop
mov
pop
out
inc
ror
stos
je
jae
adc
mov
stos
push
scas
cmp
xchg
(bad)
out
stos
jo
daa
adc
pop
or
cmp
pop
scas
fsub
daa
loop
fstp
push
lock
jp
dec
mov
mov
inc
sahf
leave
stos
(bad)
test
sbb
or
in
mov
xor
js
fldpi
dec
adc
shl
in
fst
xchg
cmc
push
nop
fisubr
jns
mov
and
jnp
adc
inc
pop
into
dec
mov
aam
cli
imul
mov
fwait
xor
push
retf
mov
cmps
jl
ins
pop
jp
mov
clc
pop
in
pop
cmp
ss
fcomp
outs
loope
pop
push
jle
cmp
push
cmp
mov
cmp
dec
adc
test
or
fisubr
sbb
mov
mov
dec
imul
dec
push
js
in
mov
jmp
push
xor
push
sub
sahf
call
out
mov
rcr
bound
(bad)
retf
mov
jo
pop
clc
add
in
sub
mov
jecxz
mov
fstp
test
or
call
aam
inc
int
push
aas
cmp
xor
dec
cmp
jecxz
sub
pusha
stos
and
pop
std
scas
adc
add
fmul
retf
dec
mov
mov
sbb
into
jmp
ds
sub
bnd
neg
xchg
dec
xchg
mov
mov
and
bound
ret
fcom
int3
retf
int
fisubr
mov
pop
mov
je
leave
pop
jmp
call
fnstcw
sbb
cmp
jmp
(bad)
sahf
popf
push
loope
fdivr
lahf
pop
enter
adc
pop
test
mov
cwde
ss
inc
clc
ror
iret
ficomp
fidiv
ficom
jp
jl
inc
imul
call
aaa
jmp
sub
push
dec
pop
adc
stos
xchg
adc
scas
stos
out
lahf
add
xlat
or
arpl
int
add
cmp
pop
cs
ss
popf
call
arpl
enter
ficomp
cmp
cs
xor
std
sub
iret
aad
sub
mov
mov
ficom
in
jb
xor
mov
daa
enter
scas
daa
mov
retf
idiv
into
jns
retf
out
popf
int
fcomp
cmps
sub
sbb
not
cmp
push
mov
loop
adc
(bad)
sub
shr
sbb
inc
loop
jnp
fstp
pop
sub
pusha
mov
adc
imul
ss
jns
pop
and
cwde
mov
lds
outs
cwde
retf
bsr
enter
clc
jmp
scas
ret
mov
dec
xor
fwait
js
dec
cli
mov
mov
lods
jne
dec
dec
aad
cmp
adc
xor
es
jmp
mov
push
sub
mov
shl
retf
xor
test
sub
call
xchg
movs
pop
or
fdecstp
or
jnp
and
cs
sub
push
test
sbb
sbb
dec
jge
cmps
test
jp
dec
push
bound
bound
xchg
outs
aas
and
pop
mov
sbb
sub
inc
(bad)
movs
xchg
stos
sbb
mov
or
xor
js
imul
das
and
enter
inc
mov
xchg
sub
sbb
in
call
movs
cmp
pop
jae
(bad)
outs
outs
jge
aad
fcomp
adc
sub
mov
inc
add
or
fstp
dec
popf
mov
or
inc
cmp
lods
inc
mov
mov
fist
(bad)
std
into
inc
inc
pop
sub
into
(bad)
mov
stc
jo
aaa
rcl
xchg
mov
lea
leave
cmps
mov
ror
adc
pop
add
out
es
mov
sub
push
(bad)
pop
or
leave
xor
scas
mov
out
mov
arpl
retf
xchg
cwde
cmp
xor
lahf
push
mov
adc
adc
in
fwait
dec
js
int3
dec
jb
push
into
or
sub
mov
movs
aaa
(bad)
sub
xchg
cmp
pop
mov
stos
test
sbb
mov
test
xor
mov
sub
iret
pop
rcl
pop
jmp
dec
movs
mov
jp
or
dec
push
xchg
int
inc
fistp
cmp
sub
out
js
ins
jo
sub
cwde
je
dec
mov
jno
popa
outs
sbb
imul
sbb
sar
ins
pop
test
scas
ins
clc
jne
dec
inc
or
or
jecxz
dec
push
ja
rcr
jne
retf
sub
mov
pop
mov
call
sbb
cmp
mov
ins
add
popf
xor
dec
mov
pmaxsw
mov
repz
add
add
xchg
push
arpl
sub
fcmove
cmp
sbb
sbb
jge
jmp
push
dec
fwait
sbb
js
test
pop
cld
jp
cmp
stos
cmp
ror
call
sahf
sub
clc
push
popf
std
cmp
sub
mov
xor
sub
(bad)
fsubr
cmp
mov
int3
xchg
xchg
stos
mov
jge
or
iret
(bad)
mov
or
dec
stc
dec
or
ret
fwait
and
push
cmp
shl
mov
call
scas
pop
dec
xchg
pop
test
fwait
jb
mov
sbb
enter
mov
out
call
mov
or
or
cli
xchg
sub
lea
jmp
sbb
call
xor
fs
jge
pop
pop
pop
jl
call
repz
mov
and
pushf
iret
sub
cdq
mov
(bad)
je
loop
dec
sbb
mov
and
retf
int3
retf
mov
mov
push
or
sub
iret
or
movs
bound
mov
clc
cwde
test
push
mov
mov
pop
fsubr
jl
adc
jbe
cdq
loopne
sahf
jns
jne
fimul
jnp
iret
scas
xor
dec
jnp
mov
or
sbb
xor
jmp
outs
retf
dec
call
add
cmps
dec
leave
sbb
daa
sti
fcom
dec
cmp
xchg
dec
xchg
out
int3
mov
dec
shr
stc
push
xchg
or
jp
int
and
adc
cli
mov
cmp
stc
push
out
pop
out
popa
push
mov
cmp
sub
imul
pop
xchg
pushf
mov
in
dec
aam
les
sti
xor
sbb
pusha
out
cmp
call
jmp
mov
sbb
xchg
in
cmp
sti
or
push
pop
call
repz
jle
loope
out
mov
test
test
retf
call
pop
stos
or
ror
retf
mov
arpl
std
ja
aas
cmp
sbb
xlat
aad
mov
push
loope
and
rcr
outs
test
sbb
aas
rcl
jmp
cmp
push
addr16
jp
sbb
dec
outs
ja
ficomp
aam
loope
dec
enter
xchg
jno
das
(bad)
cmc
stos
dec
test
push
cwde
test
push
outs
xor
mov
cwde
bnd
mov
out
lea
ins
jecxz
sbb
jnp
jb
dec
dec
ret
in
aaa
dec
pop
jnp
lahf
sbb
mov
ins
push
repz
sbb
dec
adc
adc
push
mov
sub
popa
enter
push
mov
mov
and
jp
jae
rcr
(bad)
icebp
dec
sbb
outs
add
int3
add
push
into
outs
mov
xchg
pop
pop
cmp
fisttp
pop
lods
ds
jns
jbe
or
xor
pop
into
adc
xchg
shl
push
jmp
mov
call
mov
pop
outs
xor
dec
stc
jecxz
dec
pop
dec
ret
stos
ss
fmul
imul
icebp
adc
ins
dec
or
not
ds
or
mov
movs
lods
pop
movs
ss
mov
in
pop
push
in
push
paddd
sub
stos
loop
mov
popf
or
sub
sub
retf
jmp
dec
push
cmp
imul
add
sti
rol
sub
rol
mov
out
xchg
pop
dec
pop
pop
sub
test
mov
sub
mov
mov
jno
das
(bad)
adc
rcl
jbe
pusha
push
or
sbb
(bad)
std
push
or
or
push
add
ror
jp
(bad)
fidivr
push
cwde
or
out
in
mov
pop
push
push
pop
loop
mov
imul
push
and
div
loop
pop
or
jnp
mov
lods
outs
or
jp
cmp
call
dec
leave
sar
in
lods
imul
pop
mov
pusha
call
(bad)
movs
xor
frstor
call
push
iret
mov
xor
push
xchg
dec
loope
outs
pop
adc
(bad)
lahf
sub
dec
ret
pop
pop
dec
mov
pushf
repz
jg
sbb
inc
stc
or
dec
sub
fld
pop
mov
(bad)
pop
cmp
aam
and
scas
xor
mov
inc
fmul
aas
movs
cmp
inc
popa
int
cmps
fadd
retf
clc
iret
test
xchg
ds
gs
pushf
mov
stc
(bad)
dec
cwde
mov
adc
add
and
jl
or
clc
stos
(bad)
mov
loop
cmp
mov
xor
mov
add
movs
jb
or
mov
ja
imul
mov
test
jl
out
push
std
dec
push
fdivr
cwde
or
pushf
push
mov
enter
stos
xor
sub
sbb
mov
out
fnstenv
xchg
sub
(bad)
pop
sbb
lahf
mov
jmp
icebp
jmp
scas
lods
out
cmp
sbb
xchg
fdivr
jns
mov
xor
mov
sub
mov
out
cdq
cs
sbb
pop
lahf
inc
mov
mov
pop
fst
or
stos
js
fist
mov
push
int
xor
xchg
cmp
or
fstp
pop
outs
mov
push
outs
mov
fcmove
pusha
daa
sbb
dec
xor
mov
int3
inc
or
add
pop
cmp
out
mov
sub
in
jnp
dec
lods
gs
add
sub
sti
push
fidiv
sub
stc
sub
std
in
cmp
sub
sub
loopne
leave
ds
fdivr
dec
shl
add
lock
test
stos
loopne
js
and
int
mov
dec
sub
or
push
pop
into
jp
pop
push
enter
addr16
retf
mov
fsubr
cwde
pop
jbe
pop
pop
ins
add
jmp
test
and
jmp
icebp
xor
(bad)
cmp
icebp
test
bndldx
std
mov
in
and
fild
cmp
mov
push
ds
cmp
mov
and
inc
add
in
mov
(bad)
ror
sub
ds
fwait
iret
dec
push
mov
data16
repz
cmp
mov
add
mov
pop
mov
out
imul
mov
adc
jmp
dec
fcomp
mov
cmp
add
and
scas
push
cs
fwait
or
cmps
fsubr
sbb
pop
sti
dec
fwait
dec
(bad)
clc
pop
cmp
sti
cmp
add
shrd
cwde
jo
or
cmp
cs
stos
out
mov
add
inc
push
dec
inc
sbb
dec
push
sbb
cmp
jmp
scas
fcomp
adc
inc
xor
gs
ret
stc
ror
jmp
js
xchg
xchg
stos
(bad)
cli
pop
mov
ret
scas
cmps
pusha
push
cmp
loopne
aad
jns
sub
dec
jno
mov
xchg
stos
(bad)
pop
das
call
push
or
or
dec
pop
add
bound
(bad)
ja
jns
sbb
rcl
push
pop
das
cmp
push
pop
cwde
cs
stos
rcr
xchg
stos
xor
aam
and
cmp
and
pop
fisubr
cmps
push
jecxz
call
pop
cld
adc
sub
imul
jle
(bad)
or
shl
lea
push
xchg
xchg
inc
lock
push
shl
sbb
(bad)
jl
pushf
cwde
xchg
dec
xor
inc
sub
ror
sbb
pop
int3
cmp
ds
enter
mov
stos
mov
dec
push
pop
inc
out
stc
adc
cdq
pop
cmp
inc
leave
into
cmovns
sub
pop
push
inc
bound
fcom
hlt
mov
dec
call
sbb
nop
ins
inc
and
arpl
mov
cli
int
mov
adc
xchg
or
mov
push
daa
push
add
adc
mov
imul
jnp
cwde
or
push
test
lods
leave
aas
data16
sub
mov
jns
ins
inc
jnp
pop
inc
sti
or
pop
mov
aad
sub
loop
push
add
test
inc
test
push
repnz
pop
mov
in
stos
adc
(bad)
pop
mov
fstp
fwait
push
imul
enter
mov
jmp
xchg
lock
mov
(bad)
pop
movs
mov
xor
gs
cmp
sbb
sbb
pand
adc
fwait
lds
dec
mov
or
jmp
iret
jb
dec
iret
pushf
call
mov
xlat
stc
leave
cmp
xchg
movs
adc
xor
sar
ss
or
or
ja
js
mov
or
mov
and
fnstcw
sbb
test
punpckhwd
mov
mov
jnp
cmp
xor
ror
push
ds
loopne
sbb
test
jle
mov
(bad)
fistp
fucomip
jae
dec
nop
adc
into
mov
das
adc
dec
or
dec
shr
jb
mov
and
mov
popf
cmp
fild
cmp
add
(bad)
pause
pop
or
pop
push
xchg
lea
in
jmp
movs
fwait
jns
sub
dec
pop
jp
and
push
mov
outs
dec
pushf
fld
fisttp
adc
dec
jae
dec
pop
lods
xor
pusha
xchg
cmp
pop
push
inc
imul
es
arpl
pop
mov
retf
sbb
aaa
sbb
adc
add
mov
or
or
or
mov
into
xor
call
pop
pop
dec
rcr
lahf
les
sti
outs
pushf
enter
fistp
std
cli
scas
movs
sbb
fmul
std
dec
aaa
or
mov
mov
cli
in
popf
pop
fisubr
sbb
jo
or
rep
imul
fiadd
sub
dec
es
addr16
xchg
cmp
jnp
cmp
ret
and
fucom
adc
add
jnp
and
jns
push
shr
test
inc
enter
adc
jmp
out
cmps
cmp
dec
(bad)
mov
outs
fwait
xchg
gs
mov
jg
and
pop
mov
aas
into
sub
hlt
sbb
or
jp
(bad)
(bad)
mov
dec
sbb
jns
mov
and
jp
call
xchg
sub
gs
ins
cmps
pop
pop
imul
mov
stc
push
cli
cld
jmp
lds
push
jmp
lods
mov
mov
jge
stos
mov
loop
pop
nop
jmp
sub
sbb
cmps
mov
xor
sbb
pop
jge
xor
sub
push
dec
pop
sti
out
or
ficomp
dec
mov
sbb
mov
call
(bad)
jle
or
cli
icebp
sub
dec
mov
ret
in
mov
movs
pop
outs
cmp
push
mov
outs
mov
sbb
jmp
mov
int3
jns
aam
stos
fmul
test
jo
or
mov
pushf
rol
cmp
sub
dec
retf
and
sar
inc
push
jp
loop
jmp
fcomp
push
in
out
mov
mov
test
stos
jns
cdq
in
jmp
icebp
out
or
push
test
inc
outs
inc
push
push
xchg
push
outs
pop
pop
cmp
dec
movs
test
or
stc
sub
mov
mov
mov
xlat
adc
mov
mov
(bad)
dec
jmp
sub
lods
shr
adc
clc
inc
mov
mov
dec
mov
fmulp
movs
jbe
ins
or
jae
pushfw
jmp
mov
inc
out
xchg
call
call
sbb
mov
scas
pop
sahf
out
dec
cmc
inc
cmp
inc
loop
sbb
sbb
jp
sbb
imul
mov
das
lock
(bad)
mov
lds
outs
dec
(bad)
lock
mov
or
cmp
sub
mov
xor
sub
mov
push
fcmovnbe
scas
leave
sub
push
and
pop
test
xlat
push
xchg
xchg
sub
test
mov
sti
nop
inc
mov
mov
push
ins
mov
cmp
cmp
cmp
fwait
enter
popf
pop
sub
and
into
inc
jmp
mov
sbb
mov
pop
mov
add
adc
pop
xor
pop
test
imul
ficomp
push
pop
or
jp
jbe
jnp
fcmovb
mov
ja
or
mov
dec
push
mov
push
aam
cmp
mov
push
arpl
or
xor
jmp
xchg
sti
and
retf
mov
(bad)
or
call
pop
adc
fimul
clc
retf
(bad)
push
cmp
dec
or
dec
and
cmps
scas
fwait
mov
sub
shr
shl
dec
cmps
mov
bound
ror
xchg
cmps
push
xor
call
(bad)
cmp
xor
rol
shr
call
jp
xor
js
inc
ficomp
ins
retf
xor
dec
call
push
test
jb
imul
shl
call
sub
add
iret
pand
and
in
cmp
dec
leave
jbe
jg
call
idiv
shr
sub
lods
mov
ret
dec
and
sub
gs
pusha
or
jg
adc
jmp
push
jno
cmp
and
stos
and
mov
call
sub
scas
push
dec
cmp
add
xor
outs
fldl2e
sbb
enter
sti
jle
dec
dec
pop
mov
test
mov
das
jmp
mov
push
(bad)
cdq
add
push
lea
(bad)
mov
jb
stos
test
ficom
cld
xor
shl
jno
sbb
daa
dec
jle
(bad)
and
push
cdq
push
cmp
pop
xlat
or
jmp
fstp
popf
jae
sub
xchg
and
and
adc
int3
test
xor
mov
cmps
sub
stc
sub
xor
mov
jmp
push
movs
xchg
test
out
cmps
jb
adc
push
leave
jb
iret
or
dec
outs
dec
sub
xor
sbb
fstp
rol
ffreep
or
xor
neg
fsub
das
mov
or
pop
xlat
lahf
cdq
jmp
fwait
dec
pop
or
xor
aam
and
push
jg
fist
call
cmp
(bad)
jae
mov
jmp
mov
push
rcr
and
cmps
jo
cmp
rcr
sbb
(bad)
push
retf
icebp
or
out
fistp
xchg
mov
adc
retf
pop
or
and
ins
int
mov
loop
sbb
movs
inc
js
fs
test
add
out
hlt
ror
cmp
jb
dec
ja
sub
xor
mov
ret
sbb
and
lea
mov
mov
push
mov
jns
leave
add
sub
push
lea
xlat
mov
test
nop
mul
sub
sti
ds
(bad)
mov
pop
pop
mov
add
sbb
and
sub
(bad)
(bad)
sbb
inc
imul
push
push
cmps
xor
jp
or
sbb
push
bound
(bad)
test
mov
or
jbe
jne
dec
xor
cmps
inc
add
xchg
outs
xchg
sub
call
and
sbb
cwde
inc
jmp
jmp
pop
sub
jbe
pushf
push
cmp
jge
shr
cmp
add
mov
sub
cmp
push
sbb
pop
lock
push
and
loop
or
mov
cmp
into
call
cli
cmp
aaa
fmulp
ins
aas
cmp
aam
pop
cmps
pop
shr
jns
ins
sub
sahf
mov
jp
mov
sbb
mov
cmp
jp
pop
into
cs
sub
icebp
inc
lods
fwait
or
cld
gs
leave
jnp
mov
hlt
test
scas
sbb
cmp
dec
and
push
sbb
mov
pop
ds
popa
ins
cmp
cmc
jae
(bad)
clc
out
jg
sar
lea
retf
lock
popf
adc
mov
mov
scas
popf
ror
js
icebp
xchg
pop
xchg
aaa
movs
js
mov
cmps
sbb
jo
(bad)
in
adc
in
ret
in
mov
lds
lock
pop
fisubr
bnd
cmps
add
out
cdq
xor
pop
test
fcom
dec
mov
push
mov
mov
ror
(bad)
sub
mov
mov
stos
jns
out
adc
pop
jnp
sbb
cmp
jle
inc
xor
mov
(bad)
rcr
add
mov
loope
inc
ds
cs
sbb
call
xchg
lock
jb
push
(bad)
sbb
push
loopne
sbb
xor
es
sbb
sub
jae
imul
adc
js
or
(bad)
fstp
cmp
aam
sub
aam
or
xor
das
dec
mov
(bad)
push
push
add
mov
push
stos
stc
add
cmc
(bad)
sahf
cmp
mov
les
adc
lock
sahf
xchg
and
cmp
test
not
dec
clc
scas
pop
hlt
fsub
imul
inc
cli
or
inc
mov
adc
or
sbb
out
jns
retf
call
leave
jns
xchg
mov
or
mov
cmp
cmp
shr
cmps
dec
xor
sbb
in
push
and
daa
jns
and
xchg
mov
and
lahf
jns
clc
or
or
mov
pop
cmp
scas
jmp
std
mov
test
push
dec
adc
push
mov
jmp
movs
pop
cdq
jno
sti
(bad)
mov
sub
call
sub
sub
mov
mov
je
in
scas
sbb
dec
and
push
fdivrp
outs
push
enter
dec
ficom
aam
mov
mov
imul
push
retf
retf
cmp
iret
push
scas
add
outs
pop
shl
cli
add
sbb
or
mov
or
mov
pop
or
dec
iret
fcomi
or
aad
call
ja
dec
sub
imul
repz
cmp
jbe
mul
mov
xchg
enter
call
mov
push
or
cmp
popa
pop
ins
xchg
mov
dec
jae
xor
push
sti
mov
push
mov
jecxz
nop
outs
xchg
int
stos
mov
test
or
shl
leave
add
inc
cli
aam
fadd
ss
sub
xor
enter
dec
pop
inc
lahf
sti
sti
rcl
out
cmp
test
jns
dec
outs
jg
aas
jp
mov
es
in
lock
movs
and
push
jmp
jo
retf
or
pop
push
movs
cli
lods
adc
rcl
sub
ja
ficom
fimul
and
fld
call
cmp
or
or
jmp
cmp
daa
inc
lock
fsub
call
fnstcw
dec
cmp
mov
sub
push
jmp
and
bound
repnz
leave
push
inc
mov
lods
xchg
retf
in
pop
adc
pop
scas
fnsave
jecxz
cmp
sbb
cmp
lea
call
out
mov
dec
ds
ror
push
mov
fcom
cmp
inc
fmul
mov
push
inc
ret
test
mov
add
jmp
dec
mov
hlt
mov
imul
pop
out
call
inc
retf
add
sar
fwait
nop
xor
push
xor
cmp
push
inc
pop
mov
fimul
jns
sub
push
mov
fcomp
xchg
lods
or
xchg
sahf
js
sub
imul
imul
js
dec
mov
sti
xor
add
stc
mov
fimul
jge
xor
dec
xlat
popa
jmp
sbb
pop
mov
es
scas
cmp
enter
cli
hlt
punpckhwd
int
inc
in
popf
cmp
dec
daa
outs
mov
sub
test
jmp
dec
mov
fcmovbe
imul
repnz
ss
pusha
cmp
aaa
loope
xor
stos
(bad)
lea
iret
cwde
mov
or
pop
push
xchg
push
inc
sbb
mov
and
jmp
cli
mov
clc
mov
mov
ficomp
rcl
sbb
mov
ret
jb
stos
cmps
sub
call
fsubr
dec
sub
jp
dec
aas
mov
adc
dec
mov
jo
fwait
jge
cmp
xchg
loope
fimul
in
mov
jne
sub
pop
ss
sub
hlt
data16
xchg
js
out
mov
xor
out
inc
loopne
ins
push
mov
add
ss
adc
dec
out
mov
(bad)
sub
and
loopne
sbb
push
stc
push
pop
xchg
ins
js
fidiv
nop
xor
dec
dec
cmp
xor
jnp
je
imul
ficomp
(bad)
js
unpckhps
mov
or
sahf
mov
mov
ins
push
inc
sbb
fimul
sbb
pop
mov
aas
or
pop
mov
test
int3
(bad)
mov
mul
dec
sbb
or
sbb
outs
scas
rol
and
cmp
or
jns
shr
or
or
daa
push
clc
sub
push
ficom
daa
pop
inc
inc
dec
or
mov
dec
mov
jo
mov
fs
mov
push
fwait
adc
pop
pushf
adc
dec
imul
jp
stos
jne
or
test
and
aad
ins
and
loopne
pop
mov
inc
mov
xchg
fs
ss
ss
out
movs
(bad)
or
scas
sbb
data16
cmps
imul
mov
or
and
mov
pop
fcom
sbb
pop
hlt
ret
cld
cwde
cld
ins
push
or
push
push
xchg
ror
pop
xlat
cmp
test
cmps
mov
frstor
xchg
sbb
pop
jmp
push
movs
pop
repnz
retf
retf
cld
ret
mov
loope
jmp
(bad)
jle
sub
mov
dec
nop
xchg
(bad)
stos
stos
jno
stos
push
jmp
pop
jg
push
cli
mov
dec
(bad)
xor
adc
inc
mov
cmp
bound
stos
(bad)
mov
mov
sub
dec
adc
pop
mov
and
pop
lock
ins
mov
dec
sub
or
push
pop
ss
fdivr
push
cwde
mov
adc
push
mov
in
or
(bad)
fstp
fcomp
aam
test
fwait
cmp
inc
inc
arpl
xchg
dec
dec
mov
ja
cmp
sub
sub
int3
mov
adc
or
dec
inc
or
or
out
pushf
adc
mov
test
sub
movs
loopne
sbb
xor
mov
out
lahf
sbb
sahf
mov
ja
ficom
popa
sbb
dec
pop
xchg
pop
sub
stc
add
mov
aam
inc
add
jl
sbb
adc
push
retf
cmp
stos
push
mov
gs
fdivr
xor
mov
aad
sub
inc
and
aaa
jnp
push
clc
dec
fld
scas
jmp
stc
not
jmp
push
xor
lea
push
test
inc
mov
adc
or
test
stos
sbb
(bad)
mov
cmps
pop
add
adc
inc
jmp
jnp
cwde
and
cmp
fld
adc
dec
std
inc
jp
clc
pop
jmp
jp
push
mov
jb
mov
mov
mov
out
mov
cmp
push
ins
push
xchg
clc
xor
push
jmp
aam
sbb
or
sbb
jnp
xor
sub
enter
mov
hlt
mov
arpl
add
loope
dec
fcomi
sbb
jp
call
gs
cwde
out
sbb
outs
ficom
mov
jbe
cs
neg
cmp
and
xchg
jmp
adc
stos
call
mov
test
cmp
mov
stos
mov
add
dec
mov
cld
xor
call
add
dec
or
dec
lock
sub
ficomp
sub
add
lock
dec
mov
ret
mov
add
loope
fmul
mov
jmp
arpl
enter
movs
shr
cmc
mov
or
jle
sbb
pop
call
pop
leave
and
test
mov
adc
std
sub
int
mov
jae
xor
pop
inc
mov
imul
jge
sbb
mov
in
cmp
inc
out
mov
cmp
call
sahf
inc
adc
clc
jnp
dec
ror
sahf
or
xchg
fistp
cwde
and
cmp
arpl
ja
mov
mov
aam
enter
adc
cmp
fmul
test
jp
or
retf
inc
mov
sub
test
mov
jo
cmp
inc
sbb
mov
pop
lock
cld
daa
push
sbb
dec
jp
call
push
fwait
arpl
(bad)
inc
fs
hlt
cmc
sub
cs
jmp
call
or
jle
sbb
cmp
fadd
mov
add
int
xchg
inc
fs
pusha
mov
inc
cmp
jge
dec
movs
mov
pop
push
and
loop
stc
mov
cmp
adc
stos
adc
int3
jmp
ror
sub
xor
movs
mov
inc
into
adc
in
mov
ret
dec
sub
rcr
enter
and
jo
enter
push
retf
rcr
test
lahf
and
mov
pop
mov
push
and
mov
sti
sbb
pop
add
adc
test
dec
or
loop
test
popf
ficomp
sar
int
mov
ja
loope
hlt
inc
adc
ret
leave
xchg
adc
mov
jp
and
push
xchg
cmp
pop
mov
jbe
or
cmps
test
adc
cmp
pop
or
iret
pop
movd
add
ret
addr16
mov
pusha
out
xor
test
repnz
ins
cmps
(bad)
jno
push
add
push
inc
outs
inc
push
mov
bound
mov
cwde
arpl
aas
fst
cmp
call
pop
mov
mov
test
pop
add
adc
cmps
sub
or
pop
xchg
jecxz
shl
mov
sub
mov
stos
push
loope
es
jge
(bad)
retf
or
fdivrp
sub
ins
cmp
fidivr
xchg
(bad)
(bad)
ss
fisttp
xchg
inc
pop
mov
scas
outs
std
mov
ret
fcomp
loop
rol
(bad)
xchg
call
jne
dec
jp
dec
repnz
lahf
sti
scas
das
inc
clc
leave
ins
fwait
das
push
shl
dec
cmp
mov
in
mov
dec
test
mov
call
cld
pop
mov
mov
sub
mov
jp
jp
imul
sbb
sub
xchg
sbb
and
and
dec
cld
xchg
push
mov
jmp
pop
push
push
and
sub
pop
jmp
mov
dec
mov
xor
adc
sbb
pop
fiadd
push
aaa
sbb
mov
cdq
imul
push
fstp
jne
sar
out
cmp
nop
in
mov
adc
(bad)
int
cli
ficomp
push
(bad)
or
push
add
sub
retf
dec
push
mov
dec
js
inc
sub
out
pop
add
dec
add
fnstenv
jmp
inc
dec
sub
and
push
xor
aam
mov
jp
test
jp
stos
in
dec
cdq
dec
test
pop
cld
and
nop
mov
xlat
dec
rcl
movs
cli
lock
jle
push
mov
jp
fsubr
dec
ficom
adc
pop
daa
inc
xor
sub
xchg
push
jne
out
dec
inc
shl
arpl
outs
push
add
push
mov
mov
fcomp
dec
lock
into
add
mov
push
out
fisttp
test
jle
sbb
pop
aad
das
push
sti
in
add
in
or
test
pop
loop
adc
std
mov
mov
mov
mov
stos
adc
xor
adc
xor
cmp
and
mov
call
push
cdq
pop
(bad)
xor
imul
cld
test
cmp
loopne
push
sbb
xor
fwait
imul
dec
cmp
jnp
cmp
inc
mov
fdivr
cld
and
(bad)
popf
repz
xchg
dec
ja
stc
or
jno
fwait
mov
rcl
mul
(bad)
or
push
jns
and
sub
cmp
pop
clc
stos
call
jmp
and
push
out
jmp
stos
push
mov
mov
out
aam
out
push
mov
sbb
push
in
push
dec
stos
in
adc
xor
push
or
mov
xchg
in
pop
cmp
sub
test
fs
xchg
xchg
outs
jae
mov
dec
repnz
pusha
pop
es
mov
or
arpl
or
pop
js
and
mov
pop
mov
jo
outs
xchg
scas
jbe
retf
sbb
sahf
mov
nop
mov
mov
cmps
mov
sbb
dec
xor
sbb
in
iret
xlat
sub
push
add
sbb
push
pop
jno
cmps
push
sbb
not
or
mov
data16
mov
mov
mov
jo
add
fcmovu
fldcw
call
sub
shl
sbb
sti
add
push
scas
or
fcom
sbb
shl
loop
mov
mov
fld
mov
mov
or
fwait
sub
add
add
bound
sbb
mov
push
cmp
pop
cmps
retf
imul
js
push
and
pop
dec
retf
sub
cmp
cmp
pop
pop
retf
add
int3
cmp
add
test
dec
pop
je
mov
repz
sub
call
in
jmp
pop
loopne
imul
cmp
inc
sub
push
cmp
and
nop
add
push
jo
fild
push
fcom
cld
stc
mov
lods
in
pop
fsubr
aad
imul
push
ret
sub
pop
xchg
call
and
popf
add
cmp
fimul
aad
call
mov
mov
mov
xor
aas
jg
(bad)
pop
std
std
(bad)
push
fld
ror
iret
push
and
and
fstp
mov
dec
push
adc
mov
ss
into
mov
mov
adc
cdq
push
fwait
popa
pop
inc
adc
lds
nop
or
ret
push
jae
ja
rcr
xlat
pop
scas
dec
add
pop
sbb
psrld
jo
loopne
call
retf
mov
imul
hlt
xor
inc
mov
sub
xchg
push
xor
lahf
aas
pop
push
cmp
out
hlt
out
and
popa
test
pop
(bad)
(bad)
nop
jle
pop
mov
adc
add
out
retf
fnstsw
mov
dec
addr16
mov
nop
enter
ror
sbb
repz
ins
xlat
cmp
or
xor
add
mov
leave
shl
pop
mov
stos
push
ficomp
adc
xchg
cmc
movs
mov
jbe
jp
mov
jl
xchg
call
rcl
std
out
push
pop
hlt
shr
pop
(bad)
adc
adc
lods
mov
idiv
icebp
out
pusha
imul
shl
adc
sub
dec
stc
and
pusha
jo
sub
(bad)
ins
xor
ret
mov
pop
xchg
jae
xchg
movs
dec
outs
mov
lods
push
sti
jae
lock
cmp
adc
mov
xchg
jge
stc
ret
in
jb
inc
in
and
dec
shl
sub
mov
ret
aad
sbb
cs
scas
call
fdivr
xchg
cmp
and
std
(bad)
dec
lods
jno
jmp
dec
cmps
repnz
sbb
push
push
sbb
les
jnp
xchg
jns
push
shr
movs
loopne
or
jmp
push
xor
push
mov
sti
sbb
ins
sub
int3
ret
push
push
popf
aas
jecxz
jmp
aam
out
fcom
arpl
mov
cmp
ds
stos
push
pop
add
add
fwait
int3
rcr
mov
js
and
test
dec
or
out
sar
pushf
and
xor
xor
and
loop
mov
or
cmp
pop
stos
cmp
loop
bound
cmp
pushf
adc
mov
scas
jl
scas
das
sub
pop
mov
rcr
add
xor
sbb
shl
int3
sub
adc
retf
dec
div
push
clc
xchg
xchg
pop
inc
xchg
or
sub
outs
(bad)
mov
or
mov
cli
mov
inc
dec
pop
sub
xchg
mov
jp
fwait
movs
xor
enter
call
out
cmp
mov
cmp
fisub
sub
bound
adc
mov
sub
inc
pusha
sbb
sahf
retf
mov
mov
add
out
sbb
jp
xchg
cmp
cmps
sub
push
mov
push
outs
mov
dec
pop
fdivr
pop
jmp
jp
je
fs
cwde
mov
mov
out
fdivr
je
hlt
rol
push
test
icebp
(bad)
cmp
xor
cmp
movs
pushf
clc
dec
aam
les
shl
or
cmc
mov
(bad)
pop
jmp
cwde
sub
fidivr
out
ret
loopne
shl
or
mov
loopne
call
xchg
mov
xchg
stos
dec
fdivr
pop
mov
test
fisttp
ins
sub
int3
or
sbb
test
fldenv
dec
xchg
cmp
addr16
sub
xor
and
pop
adc
scas
fidiv
xchg
push
loope
jne
or
into
fmul
mov
push
cmp
mov
sub
lods
jp
push
cmc
xor
cmp
in
xor
cmp
sub
mov
popa
ss
adc
push
sub
sub
iret
call
lds
repnz
jle
call
or
shr
cmp
out
ins
ins
clc
jecxz
mov
push
mov
push
push
test
dec
or
or
sub
sar
or
sbb
fidivr
inc
mov
test
outs
sub
push
(bad)
jne
idiv
sub
aaa
enter
mov
xor
cmp
pop
or
sbb
sub
pop
and
sub
in
scas
das
sahf
mov
dec
sub
jbe
inc
nop
xor
fst
bound
jmp
or
sti
push
push
sbb
sti
retf
(bad)
aaa
mov
enter
xlat
sbb
xor
jne
dec
dec
push
dec
push
push
dec
rol
ret
mov
push
dec
stos
movs
inc
cmp
adc
sbb
pushw
lods
jae
js
or
pop
dec
inc
rol
int
aam
and
pop
or
push
add
push
dec
cmp
jle
mov
dec
inc
call
add
inc
out
xor
mov
stc
repz
jo
test
push
out
pop
jbe
cmp
dec
leave
dec
cld
sahf
dec
pop
xchg
mov
ja
cmp
loope
cmp
mov
add
jp
dec
stc
retf
test
out
dec
leave
adc
out
outs
adc
dec
mov
xor
mov
xchg
xchg
push
test
dec
stos
mov
or
push
dec
or
rol
pop
mov
xchg
adc
ja
sub
pop
into
jp
outs
(bad)
mov
xor
push
xor
jecxz
sub
je
retf
or
and
fimul
xor
dec
dec
test
pop
xchg
fsub
push
and
jbe
scas
xor
outs
sbb
push
in
push
fsubr
test
dec
sub
test
xchg
xlat
movs
(bad)
es
and
adc
ins
addr16
movs
ja
movs
mov
enter
lods
mov
leave
push
sub
loope
jns
cld
(bad)
dec
push
or
retf
sub
and
ins
dec
adc
call
or
in
sbb
cmp
test
rcr
(bad)
iret
nop
pushf
mov
sbb
pop
mov
mov
je
inc
out
pop
lahf
and
fiadd
cmp
btc
jne
gs
popf
pop
push
pop
cld
or
cli
arpl
push
sub
hlt
cmp
das
fwait
cwde
leave
mov
jbe
loope
jb
stc
jnp
ins
mov
fisttp
dec
loop
sar
inc
aaa
iret
lahf
stos
inc
mov
sbb
jns
xchg
fdiv
mov
jns
loope
fsubr
sbb
ins
dec
cmp
jmp
test
jbe
out
mov
mov
cmps
movs
bound
cmc
jle
xchg
adc
call
push
hlt
cmps
xchg
std
jp
inc
sub
leave
adc
xlat
cmp
sub
push
mov
jle
or
imul
or
fld
adc
dec
dec
in
test
pop
xchg
lea
movs
jmp
or
into
fstp
bound
jp
in
dec
stos
push
fstp
ins
sbb
sbb
mov
adc
pop
fisubr
mov
les
cmp
xor
clc
inc
fmul
or
fsub
and
mov
xor
sbb
shl
xchg
push
xchg
ret
sbb
out
arpl
adc
or
adc
push
imul
(bad)
push
mov
aam
and
clc
aaa
dec
(bad)
les
push
jl
mov
cmp
sti
imul
mov
jp
pop
pop
test
pop
repnz
or
clc
sbb
and
js
cwde
dec
in
mov
jp
cmp
and
lahf
jle
xor
leave
cmps
popa
movs
mov
sahf
jmp
les
mov
cmp
sub
jp
iret
js
and
mov
jp
test
sub
adc
mov
shr
loop
inc
push
imul
mov
int3
fistp
(bad)
xor
lock
or
sbb
mov
(bad)
pop
aad
cwde
outs
mov
sub
mov
mov
push
xor
cmp
lea
(bad)
inc
cmp
pop
dec
fwait
fwait
jnp
adc
and
lods
mov
data16
sub
pop
push
cmp
lods
mov
xchg
test
pop
or
mov
jp
mov
daa
mov
mov
pop
(bad)
sti
or
leave
pop
stc
mov
ds
imul
les
dec
and
sar
push
xchg
mov
xor
je
push
stos
pop
mov
call
out
test
mov
jnp
sub
fimul
jmp
cmp
call
fdiv
dec
push
cmp
sub
stc
pop
and
fisub
xor
pop
sub
movs
mov
in
inc
mov
enter
cli
dec
in
or
iret
out
and
(bad)
mov
sub
push
push
imul
sub
xor
pop
fisttp
fld
mov
jmp
dec
sub
shl
(bad)
add
enter
cwde
retf
xchg
jp
cmp
push
out
mov
movs
cmp
in
cdq
inc
jmp
jmp
rol
(bad)
jns
add
clc
je
pop
push
mov
cdq
inc
(bad)
jb
repnz
push
jmp
sbb
jno
sub
fwait
inc
mov
test
cmp
add
sbb
int3
ss
shl
mov
jns
cdq
jb
shr
fstp
push
jmp
mov
or
pop
mul
aas
jnp
mov
xor
xchg
mov
sub
mov
sbb
cli
adc
mov
ss
adc
dec
enter
push
push
mov
mov
cdq
int
cmc
cmp
(bad)
push
pop
jle
adc
mov
sti
add
sti
sub
stc
pop
cmc
stos
es
outs
mov
push
mov
cdq
jb
mov
push
or
push
icebp
daa
sub
xlat
cmp
mov
sbb
mov
out
lahf
mov
pop
clc
dec
mov
out
retf
es
sbb
lahf
cmc
dec
or
mov
xchg
mov
jns
test
mov
sub
add
int
mov
addr16
nop
inc
outs
in
js
and
cmp
ret
sti
scas
into
out
fnstcw
adc
stos
dec
dec
scas
cmps
dec
mov
mov
or
inc
ins
das
fcom
or
cld
or
test
pop
in
inc
out
test
stos
cmp
ja
out
or
pop
ret
jnp
push
sbb
mov
cmp
out
jb
retf
inc
addr16
xor
cld
adc
out
or
sub
push
xchg
and
call
sub
retf
retf
mov
inc
pop
dec
jo
and
inc
into
jns
inc
cmovnp
fdivr
cmc
xchg
sub
lods
test
js
mov
jp
loop
lods
pop
stos
inc
cli
pop
imul
ins
(bad)
out
out
inc
xor
bound
push
sub
out
xlat
push
inc
daa
jne
add
out
cs
in
enter
xor
add
ror
stos
in
pop
or
ja
mov
cwde
jge
outs
sahf
sub
dec
retf
es
cdq
jne
cmp
div
fwait
push
pop
fcomp
pop
out
das
pushf
fnstcw
call
rol
sbb
fistp
sbb
loope
push
nop
pop
cli
in
cwde
scas
mov
fxch
xor
adc
in
in
das
jmp
pushf
scas
daa
fs
xor
xchg
jle
sahf
cmp
mul
sbb
xchg
movs
and
outs
pop
loop
mov
jg
mov
push
daa
fsubr
test
bound
cdq
jne
movs
push
push
or
std
and
(bad)
xor
jbe
pop
xchg
mov
pop
leave
and
movs
push
and
add
push
sbb
ror
sub
mov
mov
fneni(8087
jmp
jno
fcomp
sbb
dec
dec
adc
add
xlat
inc
mov
jmp
xchg
xchg
mov
jmp
dec
push
pop
cmps
(bad)
xchg
(bad)
aad
test
jl
or
or
xchg
mov
cmp
xchg
pop
cdq
mov
mov
leave
sub
lock
jmp
xchg
idiv
jmp
sti
in
arpl
aas
cld
pop
sar
outs
xchg
push
mov
test
in
iret
dec
sar
mov
xor
jmp
div
movs
popfw
or
leave
lods
sub
inc
cmc
cmp
xor
and
jp
imul
dec
sub
cmps
aam
in
and
loope
icebp
mov
cli
jne
mul
jecxz
xor
add
je
cmp
or
mov
repnz
fldcw
mov
dec
pop
mov
je
hlt
pop
dec
dec
loop
(bad)
cmp
sbb
sbb
fstp
mov
mov
dec
mov
out
pop
cmp
into
hlt
xchg
fsubr
in
call
dec
mov
and
js
jp
popa
call
daa
mov
aas
jle
adc
(bad)
test
dec
ret
sub
inc
leave
cmp
jg
cdq
pop
stos
and
imul
or
fdiv
mov
sbb
jmp
dec
ins
push
pop
and
clc
repz
sti
cmp
rol
and
jns
xchg
adc
jbe
scas
(bad)
fwait
inc
pop
retf
jmp
leave
jmp
es
pop
iret
call
add
pop
retf
xor
or
ins
ss
sbb
mov
mov
sub
lods
out
mov
adc
stos
out
jge
mov
push
test
cmps
ja
sbb
cmp
dec
mov
push
imul
outs
loopne
test
call
fimul
das
in
ret
shr
sub
lds
inc
nop
ss
test
pop
popa
or
jbe
aas
and
js
daa
es
push
xchg
pop
cdq
sbb
inc
inc
sub
mov
aas
mov
enter
add
jo
xlat
jg
popf
cmp
test
cmp
push
sbb
inc
jo
shr
sar
mov
pop
popf
push
cld
push
or
fistp
cmc
sbb
call
sub
fidiv
mov
mov
mov
pop
or
dec
(bad)
sub
retf
out
xchg
cmp
dec
addr16
mov
mov
movs
std
push
jmp
push
or
xchg
aam
sub
pop
and
pop
push
(bad)
pop
cmp
jmp
mov
add
jae
or
enter
shl
pop
stos
js
ins
mov
jg
cli
cmp
ins
imul
int3
outs
lods
pop
lds
jno
nop
jg
ficom
test
cld
mov
pusha
popf
test
sbb
cmp
out
into
dec
push
or
or
sub
inc
ins
xlat
and
pop
ins
cli
xchg
frstorw
ins
mov
cmp
test
test
(bad)
int
sbb
call
and
int3
sbb
jbe
add
shr
mov
mov
fstp
push
js
retf
sbb
loopne
int
sbb
gs
xchg
mov
fnstsw
(bad)
pop
xor
out
aas
test
jo
mov
xchg
daa
push
fsub
sbb
adc
mov
or
or
(bad)
adc
mov
xchg
lock
dec
test
retf
addr16
test
cmp
mov
push
dec
sbb
aaa
ror
pop
dec
jp
retf
jnp
int3
sbb
or
(bad)
les
mov
mov
xchg
jbe
les
enter
pop
inc
pop
or
call
jp
cmp
jns
mov
into
xor
enter
in
xlat
leave
test
std
retf
sar
call
cmps
jbe
mov
push
xor
test
rol
enter
cmp
mov
daa
cmp
sbb
addr16
sub
fwait
xchg
sbb
js
mov
xchg
fild
pop
mov
cmc
or
add
sbb
mov
mov
movs
stos
sub
stos
retf
or
(bad)
leave
fst
test
pop
pop
jp
mov
imul
xchg
ss
test
psllq
idiv
xchg
inc
mov
int3
inc
jecxz
ja
cmp
sahf
icebp
retf
pop
jmp
je
ja
in
mov
push
inc
push
push
mov
and
push
adc
jmp
inc
loope
scas
sub
push
jbe
mov
push
jp
push
cmps
call
sbb
pop
aam
sub
test
gs
xchg
adc
jne
mov
jmp
sbb
sub
clc
out
retf
and
mov
jp
test
and
fsub
push
sahf
lock
sbb
mov
imul
sbb
idiv
push
xor
hlt
cmc
pop
test
clc
(bad)
sbb
or
push
jge
mul
push
ja
xchg
mov
cli
pop
pop
mov
rol
jmp
sbb
daa
(bad)
sti
or
rcl
add
jnp
xchg
rcl
out
leave
movs
mov
sbb
mov
repnz
and
inc
xchg
jo
lods
push
xchg
inc
add
xlat
and
out
nop
ss
adc
xchg
cmps
popf
nop
js
pop
mov
or
outs
sar
adc
add
and
dec
sub
je
fidiv
adc
lock
gs
fldenv
clc
je
inc
dec
or
pusha
jnp
adc
cli
or
ret
(bad)
loopne
stos
retf
sub
mov
push
jne
in
aam
pop
call
push
cmp
fisub
aaa
mov
mov
jp
mov
sub
push
jo
retf
xchg
pop
fild
push
mov
and
stos
mov
test
cwde
pop
and
shl
cmc
cmp
test
aam
add
inc
or
cmp
or
mov
dec
inc
pusha
mov
stos
push
add
cli
dec
sub
jp
(bad)
test
add
call
imul
add
outs
in
rcr
inc
mov
xchg
ret
cmp
push
dec
and
cmp
(bad)
out
sub
cwde
push
xlat
mov
out
call
mov
stc
call
fs
(bad)
xchg
sbb
clc
cli
and
push
neg
jl
and
dec
pop
fwait
mov
xchg
or
test
inc
sti
mov
test
mov
cdq
data16
inc
lds
pop
fwait
push
mov
xchg
sub
movs
addr16
aam
and
push
add
fnsave
xchg
cmp
xchg
cmc
test
push
sbb
cwde
xchg
mov
sub
cli
enter
enter
int3
enter
ja
outs
sub
jnp
(bad)
sti
fwait
aad
les
addr16
fdivrp
imul
vmwrite
inc
retf
cmp
jns
movs
inc
test
popaw
sbb
add
int3
test
xchg
push
jnp
fwait
mov
jbe
inc
js
daa
cmp
aas
xor
sub
and
in
(bad)
sub
idiv
dec
add
cmp
sub
imul
cmp
xor
loope
div
idiv
push
sbb
xor
aas
jp
jne
ror
pop
out
jmp
sub
cmps
mov
pop
fdivr
mov
xor
cdq
fisub
adc
xchg
dec
call
jp
xchg
pop
sbb
jl
je
push
ss
das
std
xchg
or
call
cmp
pop
test
mov
shl
clc
sub
call
push
das
mov
jp
pop
mov
scas
test
jo
sub
(bad)
add
or
sti
add
adc
aam
in
jmp
fwait
gs
enter
mov
cmp
sub
fdiv
out
out
xor
jmp
cmp
fisttp
cmp
data16
mov
push
mov
ss
fadd
lods
cmp
sbb
es
mov
movs
out
push
sub
dec
mov
bound
call
mov
movs
cmp
pop
or
out
fnstcw
inc
aaa
cmp
call
mov
xor
xchg
add
into
sbb
(bad)
dec
xlat
sub
stos
pop
(bad)
jmp
pop
mov
mov
mov
ds
xchg
mov
xchg
mov
fwait
dec
cli
lds
sti
sbb
enter
pop
ss
mov
xor
cmp
pushf
sub
sti
lea
or
pop
stos
xchg
sub
mov
mov
fld
dec
fidivr
push
cli
sbb
cmp
jmp
cmc
pop
pop
je
movs
jg
cmp
test
retf
hlt
ret
sbb
adc
out
(bad)
cmps
sub
mov
cmc
pop
je
dec
mov
cmps
jbe
mov
fild
test
es
jne
and
dec
or
pop
nop
mov
jns
push
inc
gs
adc
leave
jmp
or
dec
ins
stc
cmc
stos
inc
add
icebp
test
popw
imul
dec
les
aam
cmp
adc
div
push
mov
xlat
hlt
popa
sahf
mov
stos
inc
pop
(bad)
and
jmp
fmul
sbb
ins
dec
imul
mov
leave
sub
neg
inc
or
add
xchg
xchg
(bad)
gs
xchg
out
inc
imul
xchg
sbb
pop
out
out
sub
sahf
sub
jo
xchg
lods
or
pop
jbe
loopne
pop
cmc
jmp
add
or
cmp
jge
clc
jne
cmps
data16
xchg
out
scas
enter
xchg
ss
std
xor
add
div
jbe
cmc
cmps
cmp
push
mov
(bad)
sub
es
adc
push
inc
and
adc
sub
mov
mov
mov
out
pinsrw
adc
sbb
push
or
adc
rcr
and
cmps
js
test
mov
mov
pop
into
enter
xor
cmps
lahf
push
aam
in
stos
push
movs
ja
lds
cld
fucomi
leave
cmp
or
inc
outs
imul
test
test
xchg
add
or
cmp
imul
push
fnstcw
movs
imul
or
es
repz
adc
out
pop
cmps
pop
fs
(bad)
int
cmp
xchg
dec
mov
loopne
xchg
sbb
in
or
cmp
fcom
xchg
scas
mov
rcl
cmps
stc
push
test
adc
enter
xchg
rcl
mov
or
loop
inc
cwde
lahf
ja
cdq
jg
mov
pop
in
sbb
mov
hlt
shr
and
sbb
xchg
sti
push
call
mov
retf
jmp
test
cdq
mov
mov
pusha
jg
fs
(bad)
sub
leave
mov
sbb
cmp
dec
lds
cdq
cmp
imul
std
aaa
or
inc
add
mov
sub
jns
rcr
push
inc
jbe
xlat
outs
push
pcmpeqd
xchg
int3
cli
sbb
xor
in
xchg
mov
push
inc
in
or
nop
jbe
mov
retf
sbb
les
es
iret
xchg
test
mov
int3
mov
cmc
daa
push
call
clc
and
adc
dec
les
pop
push
pop
push
stos
fmul
sub
sub
lock
or
sbb
sahf
cmp
test
inc
push
mov
fnstcw
imul
mov
push
jg
jp
adc
imul
mov
fiadd
sub
mul
jns
add
inc
imul
mov
test
int
pop
or
stc
test
ins
cwde
jne
bound
mov
jbe
add
or
ret
or
mov
cwde
fwait
mov
xchg
mov
cmp
push
into
fisub
sbb
add
js
cmp
mov
test
fdiv
test
and
ins
in
mov
inc
mov
and
mov
ds
pinsrw
leave
mov
and
cdq
mov
(bad)
jp
jbe
mov
gs
sub
mov
xor
inc
push
jne
xchg
cwde
xchg
and
cmp
enter
xor
pop
or
cwde
inc
pop
pop
mov
mov
sub
or
jae
iret
sbb
fcom
lea
test
inc
dec
jp
(bad)
jb
je
ja
sbb
fwait
sbb
idiv
lea
fdiv
cmps
cwde
out
jne
inc
test
shr
push
in
out
inc
aam
fld
imul
retf
pop
mov
in
jmp
and
adc
sub
push
out
out
cmp
sahf
sub
dec
fidiv
and
push
adc
fadd
xchg
jne
push
movs
xchg
sahf
loop
push
clc
mov
or
cld
shr
imul
xchg
push
pusha
scas
pop
ss
loopne
xchg
and
mov
ret
mov
ret
or
or
sub
inc
in
xchg
cmp
retf
cwde
shl
lea
pop
push
mov
sub
fistp
mov
es
jmp
gs
es
js
push
imul
cld
cdq
mov
(bad)
mov
sbb
dec
add
(bad)
jnp
in
aam
test
outs
xlat
sub
aad
mov
es
lea
sahf
mov
hlt
push
out
call
cmp
inc
xchg
inc
xchg
ins
idiv
stc
sbb
mov
dec
mov
inc
sti
mov
cmc
int
int3
sub
pop
(bad)
jne
ins
hlt
add
pop
jns
pop
mov
in
leave
dec
test
mov
in
push
test
mov
jne
adc
sub
inc
popf
mov
dec
push
cwde
cdq
push
cmp
icebp
rcr
pop
dec
push
cwde
inc
mov
sbb
add
jmp
or
fs
retf
cmp
pushf
add
jl
pop
inc
shl
cmc
mov
ror
mov
repnz
sub
fidiv
enter
fucomip
fisubr
push
mov
cmp
push
mov
push
cmp
mov
cmp
dec
aad
fcomp
lahf
movs
jecxz
(bad)
call
adc
push
enter
jo
push
mov
or
sub
out
sub
bound
mov
sub
push
aad
loop
sub
xchg
(bad)
jmp
ins
cmp
jo
pop
ins
or
xchg
jp
mov
pop
int
xor
push
and
pop
lahf
jg
push
jl
or
scas
cwde
or
sti
mov
cmp
mov
or
adc
outs
movs
je
and
imul
xor
clc
pop
mov
push
jno
je
dec
out
mov
shl
jmp
jge
rcl
push
push
inc
lods
das
ret
(bad)
push
cmps
aaa
cmps
add
daa
retf
or
cmp
test
shr
fisubr
sbb
imul
call
push
pop
(bad)
jge
jge
dec
add
cmp
add
and
fmul
scas
out
sti
cmp
cwde
mov
xor
test
fdiv
push
es
pushf
push
sbb
jmp
adc
movs
sbb
xchg
test
scas
add
enter
loop
fldcw
cli
(bad)
sub
xlat
popf
or
xchg
mov
xor
mov
sbb
test
mov
es
cmp
imul
stos
sub
stc
neg
jo
or
push
xor
sub
pusha
xor
mov
jp
mov
and
or
bound
pop
xor
fs
mov
dec
clc
xchg
xchg
hlt
ins
test
inc
fidivr
xchg
ins
out
adc
fld
(bad)
sub
lahf
scas
out
xchg
popa
xchg
retf
enter
daa
in
cwde
jge
push
jmp
test
jne
jne
or
das
(bad)
out
out
movs
mov
movs
mov
cmp
adc
adc
fld
lea
pop
pushf
in
sbb
xchg
movs
dec
lds
mov
inc
xor
sub
cdq
jno
pop
xchg
ins
in
jae
dec
mov
in
push
loop
push
std
xor
(bad)
hlt
popf
pop
adc
sbb
shl
aas
sbb
or
dec
dec
pop
in
inc
test
aad
hlt
or
das
imul
ja
aad
sti
dec
mov
jo
inc
popf
aaa
sti
xchg
test
jmp
cli
sub
push
pushf
into
sbb
sbb
rol
push
gs
in
not
or
pop
repz
ja
mov
popa
in
mov
mov
out
push
mov
addr16
mov
push
ja
mov
stos
(bad)
scas
fst
add
test
cmps
cmp
nop
outs
ins
aad
mov
adc
ret
pop
(bad)
sub
aas
addr16
mov
addr16
xchg
cwde
mov
stos
mov
sbb
ds
or
mov
inc
cmc
sub
std
bound
cmps
dec
mov
dec
mov
fdivr
das
call
mov
fwait
pop
js
add
inc
jge
test
call
fdivr
cmp
mov
retf
mov
scas
ss
sub
mov
sub
mov
call
mov
jo
sub
add
jo
inc
test
xor
mov
push
div
xchg
retf
xchg
push
gs
dec
xlat
pop
lea
js
or
mov
inc
repz
fs
aas
pop
mov
sub
xor
jo
mov
dec
xor
mov
sub
jo
dec
mov
aam
add
cmp
outs
out
mov
ja
mov
std
dec
fs
jo
bound
jns
dec
push
dec
pop
sti
leave
(bad)
xchg
adc
lods
cmp
sub
neg
(bad)
push
dec
xchg
je
clc
scas
fwait
jns
pop
mov
push
push
repnz
jp
call
cli
pop
mov
call
cmps
enter
sub
fsub
je
jmp
dec
pop
cmp
dec
push
mov
add
mov
sub
sub
xor
lock
cmps
jae
pop
pop
mov
mov
(bad)
in
retf
fisub
in
or
in
jns
push
cmp
sub
(bad)
cmc
cmp
sbb
dec
mov
push
and
sbb
repnz
push
jae
jmp
test
mov
sbb
pop
push
fcmovnb
cs
retf
es
mov
stos
pop
inc
aas
mov
or
lahf
mov
int
aas
pop
dec
jmp
js
dec
adc
stos
xchg
push
retf
aaa
jns
sbb
or
out
fstp
(bad)
jmp
xchg
fimul
je
mov
dec
sub
pop
stc
clc
outs
push
xchg
sbb
dec
ror
(bad)
mov
mov
push
adc
xor
pop
sub
add
xor
(bad)
pop
inc
add
mul
fwait
repnz
lods
ja
(bad)
mov
ins
enter
cmp
add
inc
mov
xchg
and
call
js
add
movs
movs
cmp
push
cwde
int3
mov
ret
sbb
lods
cmp
xor
fisub
(bad)
jbe
jnp
xchg
jne
stos
inc
adc
cdq
mov
sbb
cdq
add
jecxz
or
(bad)
sub
pop
aas
std
pop
dec
pusha
dec
adc
xchg
jge
push
push
sub
jp
int
addr16
fld
inc
cmc
enter
call
test
jno
add
push
xor
outs
mov
fstp
ins
lods
dec
movs
stos
(bad)
stos
arpl
stos
pop
cmp
sar
dec
cmp
inc
mov
pop
(bad)
imul
mov
std
cmc
push
(bad)
cmp
or
sbb
xchg
jmp
mov
pop
outs
bound
stos
stc
fwait
cmp
sbb
xor
xchg
test
xor
jns
lods
dec
xchg
inc
jne
dec
and
jmp
and
dec
mov
das
les
outs
cmp
fidivr
sub
test
cmp
fldenv
pop
inc
dec
out
cmp
cmp
or
jmp
stc
int
mov
xor
bsr
lea
imul
cli
pushf
cmps
(bad)
jne
adc
jl
lods
or
out
test
dec
mov
call
fidivr
outs
gs
xchg
leave
cmps
pop
jge
pop
pop
lea
lea
popaw
mov
jp
ror
jg
cmp
xchg
or
or
gs
mov
sbb
mov
inc
inc
mov
js
sbb
mov
ds
call
cs
jns
mov
fisttp
mov
addr16
repz
test
in
lock
popf
enter
outs
inc
jnp
mov
les
cdq
sub
in
imul
inc
cmp
dec
xchg
xor
xor
addr16
dec
sub
push
push
(bad)
dec
clc
push
aad
push
es
pinsrw
cmc
js
cmps
retf
sar
push
in
(bad)
fisttp
ror
ins
mov
arpl
cmp
sub
sbb
inc
jle
outs
dec
push
pop
mov
syscall
addr16
mov
adc
scas
(bad)
lods
cmc
adc
jne
sbb
int
mov
jl
jnp
dec
add
sbb
pop
test
jl
out
aad
adc
jae
retf
call
or
add
or
lods
sub
mov
inc
ins
jbe
int
pop
mov
stc
test
repz
sbb
dec
mov
mov
and
xlat
cmp
inc
out
bound
lods
imul
mov
push
test
xchg
or
mov
imul
jmp
test
dec
test
icebp
jo
cmp
iret
xor
cmc
dec
out
xchg
cmp
dec
(bad)
js
adc
dec
xchg
push
push
jmp
push
cmps
aaa
mov
or
stos
inc
mov
jbe
ret
push
ja
inc
fbstp
fld
jmp
mov
retf
cmp
mov
mov
mov
rcl
mov
repz
push
sbb
xchg
retf
mov
xchg
cmps
xchg
outs
xchg
pop
dec
sar
add
pop
cdq
ins
and
fsubr
cs
fsubr
inc
inc
xchg
sub
cmp
ror
mov
loope
ins
push
mov
je
mov
adc
ror
sbb
inc
xchg
add
sub
adc
fbstp
sbb
mov
adc
jnp
fsub
cmp
and
jl
jmp
shr
pop
(bad)
mov
inc
xchg
jbe
inc
ret
test
xchg
lods
scas
pop
mov
out
les
sub
shl
fdivr
lods
test
dec
pop
out
fisttp
dec
lods
lods
and
pop
push
pusha
mov
xlat
xchg
ror
mov
mov
jmp
mov
scas
sti
cwde
daa
(bad)
retf
push
pushf
or
jmp
pop
fs
into
fmulp
loopne
jae
sbb
pop
jno
jmp
mov
and
inc
(bad)
das
(bad)
push
jmp
das
ret
sub
mov
arpl
retf
dec
loope
mov
les
cli
push
or
sub
sub
and
push
iret
pop
das
popa
pop
xchg
movs
xchg
mov
pop
icebp
xor
mov
or
daa
loope
test
mov
xchg
(bad)
inc
xchg
adc
test
retf
outs
stos
jns
mov
(bad)
aaa
or
iret
fmul
adc
outs
mov
daa
daa
inc
pop
jmp
ret
retf
pop
pusha
jnp
daa
or
enter
movs
popa
jecxz
jb
scas
jae
mov
adc
inc
jmp
inc
shl
inc
out
arpl
lods
mov
scas
add
jecxz
xchg
dec
arpl
inc
stos
cmp
jmp
jo
lahf
jae
ret
iret
jne
pop
push
movs
scas
wbinvd
test
xchg
inc
daa
das
jmp
pop
jecxz
fwait
add
or
cs
ret
and
ret
iret
sbb
rol
into
into
pop
lahf
add
pop
or
daa
aaa
ins
pop
addr16
bswap
inc
xlat
inc
outs
das
enter
adc
inc
imul
jecxz
ret
pop
mov
inc
(bad)
arpl
ret
and
ret
repnz
addr16
ja
xchg
cmovae
out
and
inc
stos
jnp
jae
scas
das
xchg
(bad)
xchg
xchg
cdq
dec
jl
mov
arpl
pop
push
lods
xor
lahf
hlt
xor
mov
idiv
fwait
mov
addr16
aas
cmps
inc
in
out
inc
mov
pop
jae
sbb
jmp
retf
adc
sbb
fucomi
pop
push
imul
cli
jnp
ins
arpl
mov
dec
out
gs
sub
jg
repz
xor
inc
arpl
or
cmp
mov
aas
cmp
add
out
rcr
imul
out
jecxz
xlat
aas
inc
pop
xor
inc
pop
xlat
in
scas
fwait
ret
test
jmp
arpl
jg
jae
fwait
xchg
sti
out
dec
call
pop
call
iret
stos
jecxz
call
mov
das
mov
in
jecxz
out
mov
out
mov
mov
xchg
mov
mov
imul
cmp
in
cmp
mov
fidivr
dec
nop
mov
xchg
popa
xor
outs
cmp
aaa
das
inc
retf
xchg
das
lods
inc
aaa
scas
sub
jmp
inc
imul
mov
pushf
out
iret
push
aas
xlat
scas
sbb
mov
jecxz
inc
push
ja
jle
and
cmp
fwait
mov
jns
inc
pushf
xlat
mov
das
retf
(bad)
lods
push
xor
or
test
mov
jg
aas
or
mov
pop
aas
jge
stc
add
(bad)
test
test
repnz
add
xor
mov
mov
jb
xor
je
mov
bound
dec
or
int3
test
mov
jmp
or
sub
mov
call
push
icebp
setl
mov
mov
bound
jo
loop
cli
pop
out
inc
mov
adc
icebp
add
cmps
sub
jnp
cdq
ss
sub
adc
popa
fisub
lods
adc
adc
xchg
loop
sbb
sub
test
sti
icebp
pop
clc
adc
je
mov
jno
jb
xor
cdq
ret
pop
add
les
xor
jne
jne
jne
loop
add
jb
or
sub
aas
cld
jno
lock
(bad)
adc
push
inc
add
inc
jnp
xor
and
jbe
push
push
jb
shl
(bad)
mov
test
sahf
jnp
in
icebp
xchg
popa
inc
xor
xor
loop
add
xor
repnz
ds
sub
test
lock
add
aaa
loop
movs
add
jbe
jno
or
adc
fimul
les
clc
mov
push
mov
jecxz
fstp
mov
xchg
push
mov
inc
inc
sbb
xchg
cmp
add
mov
xor
xchg
data16
dec
add
test
rcr
mov
(bad)
sbb
adc
mov
(bad)
out
movs
inc
push
aad
loope
retf
mov
call
out
outs
test
clc
pop
dec
push
dec
xchg
leave
fs
lea
jg
outs
push
test
call
call
mov
stc
mov
stc
cmp
sub
test
cdq
xor
stc
hlt
dec
jle
xor
mov
sbb
sbb
cwde
sbb
rcl
mov
leave
clc
pop
xor
call
jl
jb
movs
(bad)
push
and
sbb
and
ins
(bad)
push
jnp
adc
nop
cmp
fistp
push
mov
cmp
inc
adc
mov
jns
popf
(bad)
adc
clc
adc
in
adc
mov
mov
sbb
cmp
push
inc
hlt
adc
sbb
mov
scas
pushf
pop
pushf
inc
mov
mov
nop
sbb
jl
js
jnp
test
pushf
mov
sbb
fnsave
adc
push
inc
ret
mov
add
inc
jmp
sbb
adc
pushf
pushf
push
add
sbb
mov
mov
ins
sbb
inc
fwait
cmp
xor
pop
push
cwde
mov
cmp
mov
nop
jnp
push
out
aam
push
jns
mov
pop
jb
into
add
push
retf
outs
jbe
or
mov
ficom
lods
mov
fbld
int
sub
pushf
outs
or
adc
rcl
jmp
dec
xchg
jg
adc
out
das
sti
jl
(bad)
xchg
ror
addr16
pop
retf
xchg
mov
outs
cwde
inc
(bad)
and
std
aam
mov
mov
push
jns
(bad)
adc
add
xchg
rcl
arpl
adc
or
cmp
mov
jb
push
sbb
mov
cmp
leave
xor
jb
iret
sub
and
jno
add
cmp
and
loope
jbe
inc
inc
mov
sbb
sbb
out
int3
lea
leave
(bad)
stos
push
and
or
(bad)
sub
dec
pusha
mov
push
int3
sbb
and
jnp
inc
pop
dec
xchg
mov
out
xor
popf
push
sub
pop
cdq
icebp
test
xor
or
ficomp
test
rcr
mov
mov
sbb
and
pop
mov
push
or
popa
mov
test
sbb
in
xor
aas
std
movs
lds
inc
push
pop
movs
popf
inc
pop
and
les
sub
mov
mov
loope
test
and
or
and
dec
sub
jecxz
addr16
xchg
shr
dec
imul
scas
mov
mov
js
adc
cmp
cs
sub
loopne
(bad)
jae
and
pop
add
and
popf
inc
cmp
xor
loope
add
inc
jge
int
mov
mov
cmp
test
lds
add
out
in
mov
(bad)
sar
lods
push
push
lods
movs
and
dec
push
jne
das
sub
dec
lds
pop
int
icebp
cs
sub
or
repz
cmp
scas
mov
outs
cmc
xor
push
(bad)
add
loope
lahf
pop
cs
lods
mov
cmp
xor
or
xor
xchg
and
sbb
test
sub
mov
je
mov
xchg
and
sbb
lods
movs
aad
adc
or
xchg
imul
inc
xor
ins
push
mov
jb
add
jp
ror
test
pop
or
out
inc
(bad)
enter
test
or
and
push
cmp
in
and
cmc
int
in
cmc
int
lods
jne
push
ins
jne
xchg
lods
cmc
lahf
jg
xor
sbb
pop
outs
test
stos
jbe
addr16
dec
and
and
xor
gs
xchg
push
cmp
cmp
mov
inc
test
mov
ss
leave
pusha
movs
mov
xchg
rol
add
push
shr
pusha
xchg
lock
lods
loopne
cwde
aas
cld
idiv
dec
jns
shl
adc
pop
psadbw
jo
data16
jno
test
fidivr
xchg
adc
mov
div
(bad)
(bad)
jno
lock
jnp
mov
xchg
icebp
imul
mov
std
sbb
cmp
ja
ins
adc
and
loopne
xor
jmp
cld
xchg
scas
cmc
and
mov
and
ins
div
mov
cld
cmp
jg
lock
jno
sti
int3
or
fidiv
cmp
push
sbb
cmp
cmp
mov
jnp
icebp
(bad)
push
ret
mov
rcl
lock
mov
adc
mul
(bad)
mov
imul
mov
outs
jge
xor
retf
sbb
xor
out
lock
mov
lock
mov
out
push
pusha
data16
lock
push
pusha
out
push
cmp
and
pusha
and
xchg
dec
div
lock
push
pusha
mov
lock
dec
xchg
push
out
shl
test
loopne
add
pusha
mov
shl
and
and
xchg
jp
xor
push
adc
cld
push
pop
repnz
je
hlt
(bad)
mov
mov
ss
and
fwait
push
sti
mov
lock
mov
call
rcl
sbb
cld
stc
cmp
idiv
ss
mov
in
xchg
mov
sti
lock
jae
mov
in
clc
cmps
mov
gs
inc
std
push
jle
push
push
jbe
xchg
sub
fisubr
sahf
mov
push
adc
stos
repz
xchg
repnz
pop
call
je
push
push
jp
sbb
push
cmp
jl
push
cmp
xor
mov
(bad)
dec
mov
cmp
cli
cmp
mov
cli
jbe
sbb
jnp
adc
cli
repz
stos
mov
idiv
mov
push
loopne
leave
adc
pop
xor
scas
mov
add
(bad)
fstp
cli
xlat
fisub
arpl
xchg
xor
call
xor
push
fcom
movs
dec
mov
sahf
ins
cmp
push
mov
cli
mov
mov
add
mov
lgs
jb
push
in
pop
pop
scas
cmp
push
jmp
stos
jnp
mov
jecxz
into
mov
push
mov
mov
sar
mov
push
mov
pop
push
aas
mov
mov
sub
dec
call
(bad)
shr
jge
push
jp
pop
cli
stc
xor
pop
adc
or
sar
push
pop
jb
inc
push
sahf
mov
or
push
mov
or
mov
mov
xor
mov
(bad)
jle
(bad)
jp
dec
mov
jle
stos
mov
in
mov
pop
sar
fidivr
sbb
cmp
jecxz
clc
jle
pop
mov
and
mov
mov
ins
inc
(bad)
in
push
inc
or
jmp
mov
jle
inc
xchg
push
dec
mov
data16
ins
xor
push
fisubr
inc
mov
ins
in
xchg
xchg
fcmove
rcl
retf
data16
aam
xchg
daa
jb
stos
(bad)
push
jbe
mov
cmps
xor
jge
mov
and
jns
sbb
test
mov
repnz
mov
out
(bad)
cs
push
imul
push
out
dec
xchg
cmps
mov
out
out
cmps
out
addr16
add
mov
es
addr16
ret
xchg
and
and
add
and
jecxz
es
out
inc
push
inc
mov
cmps
and
and
jbe
add
push
or
xlat
jae
mov
(bad)
in
jmp
push
out
xlat
jae
mov
(bad)
aaa
and
dec
push
out
push
and
inc
inc
dec
pop
scas
inc
mov
out
xchg
cli
sbb
outs
call
addr16
inc
arpl
xchg
stos
(bad)
(bad)
lock
sbb
in
mov
scas
push
and
xchg
add
xchg
out
and
dec
push
and
out
inc
inc
stos
out
add
outs
push
jno
jmp
rol
es
ret
mov
sub
sahf
pusha
pop
xchg
dec
adc
fiadd
fisub
inc
sahf
mov
sahf
es
stos
push
pop
in
outs
pop
inc
jmp
push
scas
fsubrp
adc
sahf
jmp
scas
ja
xchg
outs
push
imul
into
aaa
inc
adc
ja
ja
xchg
jns
push
popa
jecxz
dec
and
fst
mov
pop
sahf
mov
into
aaa
out
sahf
jmp
scas
ja
mov
mov
jmp
push
push
mov
jl
(bad)
jl
sub
push
or
ds
pop
sub
out
int3
jnp
movs
fucomi
jns
ret
sub
cmp
cmp
cld
xor
mov
cmc
cmp
cmp
cld
xor
cmp
jl
jl
mov
mov
cmc
cmp
cmp
jl
jl
mov
mov
cmc
cmp
mov
cmc
cmp
cmp
cld
xor
mov
cmc
cmp
fdiv
call
add
mov
mov
jne
in
xor
push
mov
adc
fcomp
inc
or
sbb
add
cmp
pop
add
sbb
jo
mov
out
clc
movs
jle
or
adc
scas
rol
or
std
push
and
fwait
push
mov
pop
mov
int3
sti
outs
(bad)
cdq
ret
adc
gs
imul
js
add
push
jmp
test
inc
stos
imul
inc
mov
and
mov
data16
data16
out
out
out
out
data16
data16
out
out
out
out
data16
data16
out
out
out
out
data16
data16
out
out
out
out
data16
data16
xchg
shl
or
dec
cmps
jo
jns
in
pusha
adc
ins
pop
push
cmp
cmp
xchg
jmp
mov
pop
add
pop
add
xchg
fild
or
ins
and
je
adc
(bad)
mov
adc
mov
daa
mov
(bad)
repnz
add
add
pop
daa
(bad)
hlt
mov
add
add
repz
push
xchg
add
add
xchg
mov
xchg
rcl
pop
popa
pop
add
test
sbb
and
ror
(bad)
imul
(bad)
mov
xor
ficom
cwde
dec
mov
cli
mov
repz
je
sbb
imul
pop
xchg
add
push
loop
pop
loopne
xor
inc
lods
xlat
sbb
imul
icebp
sub
pop
(bad)
in
dec
retf
sub
jge
or
jmp
mov
or
sub
mov
dec
in
icebp
imul
cwde
(bad)
js
jmp
pop
fld
rcr
mov
cwde
dec
mov
or
xor
and
test
cwde
add
or
and
sub
jecxz
mov
cmc
outs
pushf
pusha
fdivr
sar
or
cmp
dec
mul
cwde
ret
les
mov
xchg
or
bound
mov
dec
out
cwde
inc
mov
adc
aam
aam
test
or
mov
sahf
sub
popf
ins
xchg
pop
mov
cmp
es
or
cmp
mov
or
or
cmp
and
les
aam
aam
xchg
inc
xchg
and
popa
aam
adc
adc
aam
aam
xchg
inc
xchg
and
mov
ja
cli
adc
xchg
xchg
dec
inc
push
sub
ror
inc
imul
xchg
inc
movs
outs
mov
push
mov
push
retf
jle
inc
mov
cmps
push
ss
dec
mov
mov
(bad)
push
ja
xor
pusha
mov
mov
std
or
adc
test
ja
add
dec
stc
and
inc
mov
scas
dec
inc
cmps
ins
xchg
or
je
cmps
add
cmps
pop
inc
movs
data16
inc
icebp
aaa
icebp
pop
mov
gs
les
xchg
inc
aam
sti
xor
inc
mov
or
mov
sar
jg
jno
push
popf
xchg
xchg
push
dec
shr
push
dec
adc
fadd
fild
xor
in
cmp
iret
aaa
jo
pop
xor
ins
sub
mov
mov
mov
gs
dec
je
push
cwde
inc
and
dec
bound
sti
sub
cmp
mov
ins
xor
xchg
add
movs
xchg
aad
in
xchg
push
mov
in
cmp
jne
xlat
mov
aaa
bound
adc
push
div
mov
in
je
pop
adc
and
xor
mov
punpcklbw
adc
add
mov
out
es
shl
arpl
cmps
jo
inc
and
jge
and
jne
pusha
(bad)
xchg
and
popf
mov
enter
mov
aad
ins
adc
arpl
mov
div
(bad)
xchg
push
inc
inc
and
repz
xor
add
rcr
pop
sub
add
jo
push
inc
ret
(bad)
hlt
add
adc
pusha
jae
xchg
outs
scas
nop
cdq
cld
movs
std
inc
jnp
push
cmp
xchg
xchg
out
and
xor
(bad)
push
adc
pop
xchg
xor
mov
inc
mov
repnz
jbe
loopne
inc
and
imul
push
mul
xor
jl
inc
jne
xchg
pop
push
call
lds
pop
jne
movs
(bad)
mov
cmps
sub
gs
push
in
cmps
mov
pop
push
je
bound
cmp
xbegin
popa
adc
dec
and
cmp
test
inc
sar
inc
adc
daa
dec
pusha
inc
enter
xlat
mov
jb
xor
adc
inc
ret
arpl
xchg
adc
inc
(bad)
push
adc
adc
jecxz
push
aad
sar
jmp
fdivr
add
xchg
jl
pop
loopne
push
call
push
sub
mov
sub
jmp
or
int
scas
add
xchg
push
mov
mov
mov
mov
mov
int3
aaa
rcl
rol
int
fstp
ins
(bad)
fist
aad
sub
(bad)
sub
sbb
loope
add
retf
jge
dec
inc
mov
dec
mov
test
xchg
jp
cmp
cmp
cli
arpl
push
cmp
add
ins
std
xchg
dec
ins
mov
adc
cmp
xchg
aaa
cmc
and
mov
pop
xchg
sub
fsub
adc
mov
adc
mov
cli
imul
int
mov
int
or
sbb
(bad)
cli
adc
xor
xor
test
fmul
mov
jne
int3
cmp
lods
call
mov
aas
cdq
xor
ds
jns
or
mov
xchg
cld
test
mov
mov
in
xchg
or
ficom
mov
xor
rcl
mov
retf
xchg
loop
add
and
dec
or
repnz
push
js
cmp
mov
xchg
mov
aad
or
mov
cmp
mov
pop
push
add
sbb
sub
or
sub
push
pop
push
fdivr
cmp
and
xchg
xchg
xlat
sub
test
test
mov
dec
or
add
stos
dec
movs
mov
iret
cmp
(bad)
lahf
add
das
jp
mov
lods
fbstp
jmp
rcr
cmp
cmp
xor
push
pop
mov
(bad)
cmp
push
mov
ror
xchg
dec
and
mov
sub
aas
and
jge
outs
test
je
push
stos
popa
ins
jle
and
xor
rcr
cmp
ins
ss
pop
xcrypt-cfb
cmps
loop
xlat
into
mov
dec
test
ret
mov
dec
(bad)
retf
push
outs
inc
sbb
aad
les
mov
add
and
scas
push
xor
xchg
(bad)
sub
push
call
mov
fxch
and
out
sub
cmp
in
push
fld
mov
(bad)
push
cmp
out
loop
out
mov
jae
test
ja
icebp
icebp
test
ss
pop
mov
fst
test
in
dec
daa
inc
push
movs
push
popf
loopne
mov
scas
shl
lods
jo
push
cmps
pop
or
scas
xlat
pop
jg
orps
push
loopne
push
(bad)
std
push
jne
xlat
movs
sub
in
aaa
(bad)
fisubr
push
lods
add
xlat
mov
sbb
bnd
scas
mov
fcom
fcomp
ror
cmp
xlat
mov
ds
push
lds
pop
das
js
push
das
push
dec
rol
xlat
scas
cmp
cmc
test
dec
lahf
scas
xlat
sub
mov
push
push
rcl
pusha
xchg
hlt
adc
mov
dec
adc
js
test
cmps
xor
loopne
lods
popf
jmp
inc
arpl
in
mov
dec
ins
or
into
push
xchg
sub
imul
sbb
loop
push
sbb
or
ret
push
imul
out
mov
ret
jbe
pop
bound
adc
int
jecxz
or
mov
xchg
xchg
aam
push
ret
xchg
imul
and
xchg
hlt
add
movs
adc
bound
add
lahf
sbb
add
arpl
sahf
mul
xchg
fldenv
mov
jbe
js
fs
add
mov
loop
int3
stc
dec
mov
adc
dec
(bad)
bound
add
ret
push
int
dec
pop
imul
(bad)
pop
cmp
xor
cmp
mov
and
push
sub
add
loop
rcl
jecxz
out
les
inc
sbb
jge
xchg
in
stos
push
xchg
cmp
jne
aad
imul
ret
sti
stos
mov
popa
imul
pop
in
mov
ror
mov
jb
shl
add
aaa
push
xchg
cs
push
rol
loop
in
dec
dec
test
mov
jns
pop
(bad)
clc
mov
mov
(bad)
add
stc
push
xchg
push
shr
and
dec
cmp
xor
cwde
into
fstp
popa
pop
sbb
sbb
push
mov
pushf
stc
int
sahf
sub
test
out
and
inc
add
pop
or
stos
inc
push
loope
pusha
jns
cmps
push
cli
ret
cmps
and
jg
xchg
ret
enter
fnstsw
mov
fsubr
sub
test
jmp
xor
push
and
mov
xchg
and
mov
add
and
outs
aam
(bad)
pop
sub
sbb
inc
rcl
test
mov
cmc
xchg
scas
loope
loopne
adc
and
or
imul
pop
sbb
movs
in
jge
loop
test
push
icebp
cmp
or
sub
sahf
icebp
neg
push
test
lea
shl
ins
xlat
outs
mov
ins
and
loope
sub
mov
jmp
mov
dec
xchg
and
add
jp
pop
test
loope
and
dec
(bad)
sub
mov
test
lock
add
jl
ror
inc
aam
outs
jle
fimul
dec
aam
cmp
or
cmp
(bad)
pop
add
pusha
push
scas
dec
stos
iret
inc
popf
aas
in
cmp
bound
ror
out
pop
stc
scas
je
or
xor
fidivr
aas
in
cmp
jbe
mov
push
(bad)
pop
cli
adc
repnz
test
sbb
cmc
out
mov
pop
sahf
data16
daa
(bad)
scas
leave
call
sahf
stos
ds
xchg
das
es
pop
cli
mov
or
xor
(bad)
ja
(bad)
aam
rcl
pop
stos
cmp
cs
jecxz
sti
(bad)
xchg
jge
or
icebp
(bad)
xchg
mov
call
int
sub
aas
ficom
sbb
aaa
mov
mov
js
sbb
outs
jle
cs
aam
cmp
gs
jg
jle
push
sti
sahf
add
jl
adc
pop
lds
mov
jg
lahf
jmp
mov
(bad)
cmp
sahf
dec
mov
dec
cmp
pop
adc
and
retf
sbb
retf
mov
mov
cmp
or
xchg
(bad)
adc
call
xchg
jne
xchg
mov
dec
outs
lock
mov
fsub
(bad)
idiv
mov
mul
pop
js
jnp
inc
add
xor
cmc
in
jns
test
pop
push
dec
jg
leave
xchg
test
or
dec
mov
add
fwait
and
shr
xchg
adc
pusha
sbb
retf
xchg
push
inc
xchg
adc
test
and
out
(bad)
or
lods
mov
arpl
push
add
inc
fs
jle
cmp
in
sar
imul
and
push
mov
js
cmps
mov
mov
cdq
inc
out
or
fldenv
aam
lds
xchg
and
leave
adc
inc
jbe
ja
test
test
clc
(bad)
test
popa
bound
mov
sub
cmps
add
and
mov
cli
(bad)
mov
inc
imul
inc
ror
es
push
popaw
xchg
out
push
mov
jno
sbb
lods
dec
xchg
adc
loope
mov
inc
lahf
call
mov
mov
les
fbstp
pop
xchg
jle
jge
mov
mov
js
stc
and
mov
pop
and
pop
jmp
popf
loop
fdivr
mov
xchg
inc
out
dec
add
cmp
nop
out
cmps
cmp
es
or
std
addr16
(bad)
test
(bad)
dec
adc
mov
in
push
call
clc
jbe
cmps
int3
sub
aaa
add
dec
(bad)
and
pusha
retf
and
sbb
and
jle
in
pop
mov
xchg
adc
jbe
mov
xchg
aaa
mov
lds
mov
addr16
ja
test
mov
xchg
jae
cs
cmp
push
cmp
mov
jmp
jmp
(bad)
in
lds
dec
sahf
inc
mov
dec
fbld
inc
mov
jbe
mov
xchg
fidivr
sbb
(bad)
(bad)
out
mov
in
pop
jecxz
lock
pop
inc
sbb
sub
mov
add
and
jno
mov
mov
leave
push
call
xchg
mov
jmp
mov
inc
rol
leave
gs
pcmpgtd
out
iret
outs
das
push
enter
dec
sub
dec
or
or
ret
out
mov
dec
mov
rcr
js
dec
pop
dec
fwait
dec
dec
xor
fstp
int
(bad)
inc
cmp
lock
mov
mov
dec
dec
inc
mov
xor
arpl
ret
cwde
mov
dec
dec
bound
aam
xor
dec
test
ss
mov
fsubr
(bad)
ja
mov
mov
dec
call
sbb
dec
test
daa
push
enter
into
stc
cli
cmp
dec
sahf
jg
movs
iret
movs
out
mov
sbb
jnp
dec
sahf
jmp
std
or
push
sub
aas
pop
dec
push
mov
retf
pop
scas
call
pop
dec
push
cwde
mov
mov
lods
mov
push
inc
dec
sbb
in
mov
mov
pop
push
cmp
int
retf
sbb
cwde
int
pop
js
sub
dec
jge
jge
lds
lods
cmp
dec
int
clc
mov
push
out
sub
dec
push
jl
push
mov
jl
jns
inc
fild
inc
int3
dec
imul
rcr
lahf
dec
cli
pop
jmp
jg
ins
popf
fist
mov
cwde
das
xchg
mov
mov
or
mov
(bad)
pushf
sub
inc
movs
mov
outs
mov
fcmovnu
cmp
stos
cmp
pop
sahf
inc
mov
push
mov
shl
dec
imul
add
sub
sub
(bad)
mov
(bad)
das
cmp
adc
cmp
call
(bad)
jnp
ffreep
ds
pop
popf
inc
fyl2xp1
dec
jle
in
jle
dec
fisttp
sub
jp
int
ret
jb
outs
sahf
cmp
mov
push
(bad)
pop
sahf
xor
mov
cmp
lods
imul
cdq
sbb
jle
(bad)
sbb
xor
cmp
shl
mov
je
or
adc
mov
xor
sub
mov
mov
pop
aam
hlt
xor
cmp
pop
cmc
jne
xor
xlat
push
sar
push
mov
aaa
sbb
rcr
or
pop
inc
sub
push
bound
and
push
(bad)
retf
adc
sub
dec
jg
cmps
or
addr16
or
fcomp
repz
outs
and
cmp
ret
not
ins
dec
rcl
sbb
out
push
pop
mov
daa
xor
jno
xor
in
xchg
pop
add
data16
ins
loop
xlat
or
cmp
mov
iret
push
mov
mov
mov
mov
shr
(bad)
les
loop
inc
test
dec
faddp
stc
or
jp
ret
or
fs
lock
and
call
dec
in
addr16
dec
dec
mov
sti
outs
ud1
pop
(bad)
mov
xor
jle
and
inc
cmps
push
mov
xor
xlat
mov
jb
nop
cmp
inc
lods
push
in
add
or
test
mov
fld
mov
clc
fld
jmp
punpcklbw
mov
fcomp
int3
pop
sbb
gs
mov
fidiv
xor
xchg
or
mov
fs
or
out
movs
das
push
lods
iret
movs
sbb
mov
mov
mov
dec
push
fadd
mov
xor
(bad)
ds
in
scas
mov
(bad)
push
ins
imul
cli
(bad)
jmp
jecxz
cdq
fadd
je
mov
pop
jmp
test
ret
js
push
and
xchg
leave
movs
shl
and
mov
(bad)
movs
pop
or
cmp
mov
xchg
mov
add
and
sub
mov
sub
sti
(bad)
jmp
test
add
sahf
lods
and
cmp
mov
add
ret
xchg
gs
call
test
push
hlt
xchg
dec
pusha
xor
and
dec
dec
or
cwde
push
out
cld
jb
(bad)
movs
fsub
mov
sub
push
and
in
shl
or
inc
and
mov
fwait
mov
in
test
rol
and
bound
fisubr
or
fldlg2
mov
ret
loope
nop
aad
xor
mov
inc
cmp
mov
pop
dec
jle
add
ror
bound
in
ret
mov
mov
ror
das
push
xchg
out
push
xchg
and
and
xchg
(bad)
shl
push
inc
sar
fwait
mov
pop
dec
bnd
les
and
sub
sub
pop
loopne
jmp
rol
call
inc
xchg
movs
push
cmps
aam
or
mul
push
inc
add
cmp
movs
gs
or
lods
jb
push
mov
fwait
(bad)
lea
aam
pop
xor
jbe
pop
test
fisubr
shr
out
pop
out
sbb
out
data16
call
aad
stc
in
ins
pop
lds
inc
xchg
push
clc
hlt
aad
and
stos
cdq
push
or
imul
mov
mov
mov
xchg
call
test
fsubr
popf
sub
fisttp
sub
pop
call
aam
(bad)
jmp
dec
pop
cmp
out
cmp
inc
cmp
jge
out
cdq
clc
lock
and
mov
aaa
push
outs
dec
xchg
test
pop
add
pop
sub
add
mov
pop
in
pop
clc
(bad)
sbb
ja
xchg
sti
pop
push
adc
xor
pop
mov
xchg
test
push
repz
lods
clc
sub
cli
int3
cmp
cmc
cmp
out
(bad)
mov
call
mov
xor
cmc
loopne
call
je
in
sub
push
test
xchg
and
mov
addr16
cmp
aas
dec
sbb
mov
mov
fdivr
hlt
je
ds
popf
inc
xor
sub
add
in
(bad)
or
inc
(bad)
jg
test
jg
ins
in
test
daa
cmps
pop
call
or
xor
pop
xchg
adc
mov
adc
gs
stc
push
push
cmps
adc
dec
fiadd
dec
push
aad
lahf
jmp
scas
push
retf
data16
ja
push
add
data16
push
ret
mov
aam
aad
loop
ret
pop
and
das
add
movs
sbb
popa
mov
inc
leave
mov
pop
mov
push
sbb
out
mov
(bad)
stos
(bad)
cmp
test
cdq
mov
clc
cmps
test
push
xlat
jne
jp
gs
out
in
cli
xchg
sti
imul
xchg
lods
dec
mov
push
retf
mov
push
xchg
pop
aam
mov
adc
js
jl
pop
jne
adc
test
push
adc
call
xor
mov
pop
sub
fidivr
bound
rcl
mov
pop
adc
loop
sub
bound
js
jae
pop
or
sub
addr16
int3
cmp
(bad)
sti
xor
pop
xor
mov
(bad)
pop
xchg
mov
sub
dec
cmc
xchg
(bad)
or
push
mov
data16
jbe
fwait
push
in
arpl
xchg
jno
jmp
fidiv
cmp
retf
sub
jp
fadd
ss
fs
movs
xchg
(bad)
add
(bad)
ss
jnp
ss
(bad)
clc
lea
inc
int
sub
fwait
aam
sbb
ficomp
cmc
clc
and
add
jne
aas
in
movs
push
and
mov
gs
retf
inc
cli
retf
pop
out
ds
cwde
jge
retf
push
adc
xchg
sub
cs
retf
xchg
loop
dec
adc
outs
lods
push
pop
inc
mov
mov
and
retf
xor
sbb
or
lds
push
pop
xchg
adc
ins
popa
xchg
jp
cmp
and
and
add
js
xchg
pop
cdq
push
test
sub
fucomip
cld
add
mov
mov
ds
jmp
iret
xchg
sbb
push
repz
lahf
fldcw
fistp
dec
fistp
fdiv
iret
mov
or
aam
mov
cs
push
mov
fistp
and
push
xchg
shl
sbb
or
cmp
das
cmp
jge
add
imul
mov
call
sbb
push
popa
sti
enter
xchg
into
das
cmps
pushf
inc
adc
(bad)
adc
ret
fidivr
and
icebp
or
enter
cli
and
sbb
sahf
sbb
loop
outs
push
int
or
and
cld
mov
retf
enter
dec
test
fimul
arpl
mov
fstp
jl
outs
jmp
(bad)
xor
sub
mov
retf
cdq
je
dec
clc
retf
daa
retf
popa
fwait
or
pop
push
add
add
sahf
call
scas
pushf
pop
movs
add
jp
jp
ins
mov
sub
jmp
into
iret
out
in
pop
jae
or
or
xor
pop
adc
mov
mov
jb
dec
mov
add
push
imul
add
add
inc
jbe
aaa
stc
xchg
xor
adc
aas
jno
ins
loope
ins
sub
adc
add
and
cmp
adc
add
and
add
aam
pusha
push
aas
jmp
cld
loop
or
cmp
pop
and
aas
xor
cdq
or
sbb
pop
aas
jecxz
jb
hlt
sti
in
cmp
add
sub
or
sub
dec
addr16
mov
add
sbb
aas
stos
inc
mov
cmp
sbb
cmc
jae
shr
inc
cmp
pop
ror
xchg
sbb
imul
or
mov
aad
test
cmp
and
or
out
jo
pusha
jno
cmp
and
or
cld
bnd
not
inc
cmp
mov
mov
cmp
daa
inc
push
aas
iret
jmp
pop
test
add
sub
(bad)
daa
push
lock
add
add
sub
(bad)
data16
xor
mov
inc
cmp
push
inc
adc
jno
add
outs
jnp
cmp
pop
nop
adc
out
addr16
and
add
neg
lock
sbb
pop
(bad)
inc
cmp
sbb
aas
inc
cmp
cmp
sbb
into
xor
add
popa
sbb
adc
or
mov
add
add
pusha
adc
out
pop
add
cmp
push
rcl
ret
push
mov
ss
pop
and
aas
aam
adc
repnz
jmp
adc
adc
jno
push
sub
add
add
add
and
adc
mov
pop
dec
cmp
and
adc
jl
aaa
pop
and
das
cmp
and
adc
pop
mov
dec
cmp
es
lock
daa
xor
add
inc
daa
inc
adc
sahf
sub
cmp
sub
jp
mov
add
adc
add
aas
mov
xor
sub
aas
ja
push
xor
mov
cmp
sub
push
aas
inc
out
mov
adc
dec
cmp
adc
aas
and
(bad)
add
cmp
das
jo
aas
sub
pop
jl
ds
xor
pop
aas
lods
ds
stc
clc
sbb
xlat
xor
sbb
adc
inc
int
dec
cmp
xor
sbb
bound
add
clc
cmp
add
xor
push
lods
cmps
test
aaa
inc
sbb
jl
jnp
jle
dec
cmp
cmp
sbb
fnstcw
add
sbb
inc
pop
(bad)
loop
mov
add
add
cmp
sbb
int3
jnp
mov
add
add
cmp
or
iret
shl
adc
aas
movs
jmp
add
add
add
jo
aas
cld
jnp
scas
and
dec
cmp
inc
rcr
std
sbb
cmp
inc
and
mov
jne
and
cmp
add
add
int3
imul
cmp
dec
loopne
aas
xlat
cmc
outs
mov
add
add
dec
xor
aaa
mov
dec
cmp
dec
nop
sbb
int
test
cmp
dec
lock
xchg
add
dec
cmp
dec
push
push
aas
or
daa
mov
add
add
mov
xor
inc
scas
inc
cmp
push
add
aas
sub
inc
cmp
push
pusha
pop
aas
dec
and
loope
mov
add
inc
rcl
cmp
or
adc
aas
jmp
ror
add
sub
(bad)
mov
xchg
dec
cmp
cs
xor
cmp
das
cwde
and
fcmove
and
add
add
xor
and
lods
mov
adc
add
shl
lock
nop
and
cmp
xor
and
mov
and
cmp
xor
and
repz
adc
out
inc
cmp
xor
mov
jne
inc
cmp
ss
aas
ins
mov
push
fld
xor
dec
aaa
fsub
aas
sub
cmps
push
mov
add
jne
or
aas
mov
and
and
cmp
add
aas
hlt
pop
js
jns
inc
cmp
cmp
aas
bound
ficomp
add
aam
nop
and
jne
in
jecxz
inc
cmp
cmp
mov
fdiv
adc
lock
add
inc
sub
ss
cmp
aas
and
aas
hlt
daa
pushf
xchg
loope
inc
cmp
inc
dec
and
xor
push
test
add
aas
jne
jge
add
dec
cmp
inc
test
aas
sub
aaa
cmp
inc
fsub
aas
sbb
cmp
add
add
push
lods
popf
retf
or
add
add
xor
xor
xor
dec
pusha
and
push
cmp
add
nop
and
loope
fsubr
add
add
test
cmp
dec
call
jnp
cmp
cmp
dec
sbb
push
ja
dec
cmp
dec
dec
and
sub
add
add
js
aas
cmp
inc
repnz
push
mov
or
cmp
add
xor
cmp
fs
cmp
push
add
aas
jle
dec
jl
or
xor
es
push
les
cmp
push
pop
es
repz
ret
dec
inc
cmp
pop
mov
aas
push
sbb
dec
cmp
pop
mov
addr16
cmp
pop
call
inc
repnz
cmp
ror
pop
mov
movs
retf
add
add
rcr
push
mov
ins
mov
add
mov
popf
fwait
loope
sub
aam
push
mov
movs
shl
pop
push
mov
sbb
dec
mov
aad
push
mov
into
fs
mov
(bad)
call
adc
sbb
mov
(bad)
iret
adc
jno
pushf
xor
xlat
lahf
adc
(bad)
push
test
add
outs
adc
out
and
add
add
aas
adc
mov
stos
inc
mov
fstp
adc
ss
dec
mov
(bad)
adc
dec
xchg
pushf
cmp
inc
mov
fidivr
xor
inc
test
add
add
(bad)
adc
xor
jne
inc
retf
adc
add
add
fcomp
mov
pop
sti
clc
mov
fsubr
adc
repz
mov
add
add
call
mov
pop
ret
add
add
repz
mov
scas
adc
popf
fmul
add
add
mov
cmp
dec
ds
fisttp
mov
(bad)
add
pop
adc
sub
mov
loope
adc
jl
sbb
test
mov
inc
jge
pop
inc
mov
loop
adc
mov
mov
loop
adc
icebp
adc
add
add
adc
xchg
mov
jecxz
adc
jmp
add
fist
mov
loopne
dec
mov
in
adc
(bad)
mov
in
adc
div
add
add
dec
adc
ret
test
mov
out
adc
imul
add
out
adc
jl
xor
out
adc
add
adc
add
add
(bad)
adc
sbb
xor
add
add
int
jmp
add
cmp
aas
adc
mov
cs
jmp
jle
cld
jae
xor
add
add
retf
in
add
add
mov
pop
movsx
dec
dec
mov
(bad)
dec
mov
xor
sub
xlat
lahf
push
mov
std
inc
sti
mov
fdivr
push
mov
retf
mov
(bad)
or
xor
iret
stc
mov
ficomp
test
mov
mov
fstp
or
ins
or
cmp
(bad)
or
xchg
ffreep
scas
xchg
dec
mov
fdivr
mov
cmp
add
fstp
or
lahf
fwait
lods
xor
cmp
fidivr
(bad)
rcr
add
add
cmps
and
or
mov
loopne
or
add
sub
mov
scas
repnz
mov
mov
loop
or
mov
add
loopne
dec
mov
(bad)
mov
add
inc
clc
mov
std
mov
add
mov
aas
or
push
add
pop
in
or
jo
dec
mov
out
or
xchg
js
mov
out
or
sbb
add
js
sbb
mov
call
popf
(bad)
jbe
sbb
add
add
call
push
cwde
fisttp
xor
jmp
mov
push
shl
add
add
pop
push
mov
out
dec
mov
jmp
add
or
ror
add
jmp
add
stc
(bad)
xor
in
aas
add
push
scas
movs
and
add
add
fild
fmul
cmp
in
in
jg
mov
add
daa
mov
out
aas
add
adc
ds
out
fild
mov
lods
jbe
mov
out
jg
mov
xchg
push
daa
mov
lock
add
mov
sub
lock
push
inc
fiadd
add
jl
pop
add
in
inc
mov
repnz
mov
or
dec
mov
repnz
add
mov
add
push
repz
add
add
mov
repz
mov
mov
add
and
lahf
add
fdiv
add
sub
stc
xchg
dec
mov
jmp
mov
add
add
(bad)
(bad)
mov
xor
mov
in
aas
(bad)
mov
push
mov
add
std
mov
loopne
cmp
inc
out
mov
mov
cmp
mov
out
aas
cld
mov
daa
mov
mov
out
jg
mov
int
inc
mov
lock
mov
mov
icebp
(bad)
stc
mov
inc
call
add
aas
stc
mov
mov
add
and
jg
mov
(bad)
repz
mov
repz
ror
add
add
pop
je
xlat
push
dec
mov
cmc
aas
idiv
retf
sub
add
add
cmc
mov
mov
iret
test
mov
idiv
hlt
mov
sub
add
cmp
aas
hlt
mov
aas
adc
add
add
idiv
mov
fldl2t
inc
mov
clc
mov
mov
shr
add
add
stc
push
mov
pop
push
pop
mov
stc
aas
icebp
mov
adc
cmp
add
add
jg
mov
or
sub
add
add
jg
mov
pop
and
sbb
jg
mov
call
adc
(bad)
in
mov
jo
aaa
mov
idiv
mov
sti
xor
clc
(bad)
jmp
cmps
out
dec
mov
stc
jg
mov
lock
add
push
dec
jmp
xor
sti
jg
mov
shr
pop
mov
sti
jmp
mov
cmp
cld
jmp
mov
xor
inc
mov
cld
jg
mov
stos
sahf
cmp
cli
(bad)
fistp
push
fistp
mov
sti
(bad)
fdivr
cmp
add
cmp
fnstcw
mov
add
call
mov
mov
add
lock
call
mov
cmp
ss
(bad)
call
mov
out
inc
mov
(bad)
dec
mov
push
push
cmp
(bad)
inc
mov
loope
inc
mov
(bad)
inc
mov
shl
add
add
push
or
add
add
or
mov
mov
mov
push
mov
les
out
push
fs
cmps
ret
jns
arpl
mov
inc
cs
mov
add
lock
xor
push
lock
mov
mov
cmp
xor
sub
aas
pop
or
adc
call
outs
leave
ja
sbb
nop
mov
mov
lock
gs
movs
loop
lea
neg
sub
lock
es
loop
xchg
mov
xchg
aas
inc
cmp
repz
retf
lock
xor
dec
xchg
cmp
mov
ins
pop
mov
aas
or
dec
cmps
cwde
cmp
inc
jb
xchg
int3
lock
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
aas
push
jnp
daa
pop
cmp
sbb
(bad)
scas
data16
lock
jnp
dec
(bad)
in
fwait
imul
icebp
aas
cmp
xchg
mov
mov
movs
ins
mov
mov
mov
call
call
movs
enter
aas
or
cmp
jge
mov
mov
mov
jmp
aas
imul
shl
adc
jmp
mov
dec
jnp
pop
mov
pop
add
loopne
icebp
aas
pop
imul
xor
stos
mov
icebp
aas
cmp
mov
cmp
frndint
and
icebp
aas
mov
xchg
mov
cmp
repnz
xchg
test
jne
lea
fdivr
dec
pop
repnz
in
movs
xchg
xchg
jle
cmp
jne
jp
repnz
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
repnz
movs
hlt
hlt
mov
fnstsw
inc
imul
fldl2t
inc
cdq
xor
cmc
loope
test
aas
jge
aas
mov
dec
call
sahf
repnz
push
adc
cmp
(bad)
sar
repnz
mov
or
or
in
test
repnz
aam
fist
nop
cmp
das
ds
and
inc
bswap
jno
adc
push
repz
in
xor
push
xchg
fmul
and
aas
jl
sbb
call
fs
cmp
aas
movs
pop
test
daa
xchg
cmp
lahf
xchg
pop
lds
aas
sub
pop
out
pop
mov
jno
aas
loope
inc
mov
data16
aas
mov
xchg
sahf
mov
(bad)
popa
(bad)
ss
mov
sub
sub
clc
call
dec
cmps
fdivp
aas
mov
fimul
add
cli
repz
repz
push
stc
and
xchg
mov
or
hlt
aas
js
xor
repz
mov
cmc
xor
aas
cwde
jns
jecxz
mov
aas
iret
sub
jp
dec
cmp
add
aas
jbe
ror
pushf
cmp
cmp
mov
xchg
aas
lock
cmp
rcl
lock
shl
(bad)
retf
cdq
cmp
sub
aad
mov
in
scas
xchg
inc
jge
or
fdiv
aas
xor
mov
cmps
sub
jbe
stc
hlt
aas
jecxz
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
sub
sbb
setb
movs
push
cmc
aas
call
mov
inc
outs
cmc
aas
lods
xchg
sbb
cmp
(bad)
xchg
aam
(bad)
cmc
aas
out
call
push
dec
fld
stos
cmc
aas
lods
inc
inc
add
mov
pop
mov
leave
cmc
aas
mov
dec
cmp
dec
and
aas
pop
out
xor
cmps
fwait
cmp
fdiv
loope
idiv
inc
ficom
inc
loop
mov
jle
idiv
xchg
mov
jle
adc
inc
inc
idiv
xor
mov
(bad)
idiv
xor
xchg
mov
mov
push
xor
inc
scas
cmp
int
jg
sahf
mov
mov
xor
fwait
mov
adc
idiv
or
jmp
mov
das
sbb
mov
idiv
stos
mov
cmp
push
stc
jge
idiv
test
and
je
in
call
cdq
jp
xchg
cmp
aad
ins
fldcw
inc
push
jmp
idiv
shr
push
pop
and
mov
imul
cwde
cmp
add
jae
mov
add
ja
test
shl
aad
push
ror
cmp
dec
iret
ss
aas
jle
adc
cmp
sbb
push
daa
add
aas
sub
xchg
mov
mov
adc
mov
sbb
aas
sti
int
mov
in
xchg
inc
fldcw
aas
mov
(bad)
lahf
mov
(bad)
mov
aas
cmp
cdq
cmp
mov
clc
aas
es
xchg
jmp
mov
xor
clc
aas
stos
jecxz
xor
jo
ss
cdq
scas
icebp
clc
aas
ins
xchg
jecxz
adc
test
call
aas
and
popf
mov
aaa
aaa
stc
aas
mov
pop
addr16
inc
pop
stc
aas
cmp
movs
xchg
jl
jbe
push
dec
ficomp
rol
popf
mov
icebp
mov
into
xchg
mov
lock
aas
mov
jl
cmp
and
sbb
stc
aas
outs
dec
out
retf
cmp
in
jnp
or
aas
xor
sbb
dec
pop
xchg
mov
fwait
xor
aas
stos
fdivr
xor
mov
push
cli
aas
loope
(bad)
fld
popf
mov
sahf
jns
aas
(bad)
arpl
retf
fwait
cmp
std
jns
imul
push
leave
cli
nop
cmp
repz
shr
xor
(bad)
mov
lahf
call
pop
xor
mov
lea
pop
push
sti
aas
and
or
mov
mov
xlat
test
pop
and
pop
in
jb
sti
aas
jecxz
mov
mov
jbe
sti
aas
cmp
mov
mov
sti
aas
sub
cld
sahf
mov
push
int3
sti
aas
test
cmp
xlat
pop
ret
aas
jb
imul
std
sahf
mov
fwait
sbb
aas
fisttp
mov
cmp
inc
cld
aas
or
and
inc
fwait
cmp
rcl
icebp
addr16
aas
lods
cmp
dec
xchg
cmp
out
xchg
ins
(bad)
cld
aas
inc
pop
or
jno
imul
jmp
cmp
ret
pop
push
or
cld
aas
jb
adc
lea
pop
std
aas
pushf
jp
inc
aaa
mov
or
aas
ja
popf
jno
dec
popf
mov
sbb
aas
push
aaa
pop
xlat
add
cmp
leave
push
jecxz
std
aas
call
push
xchg
mov
out
std
aas
xor
pushf
cmp
mov
repz
std
aas
ret
js
ficom
xor
dec
sbb
movs
xchg
mov
inc
es
aas
xchg
adc
and
aas
mov
cs
(bad)
aas
(bad)
int3
test
cmp
dec
(bad)
sti
push
jp
aas
loope
or
and
xchg
cmp
nop
movs
mov
xchg
sub
icebp
mov
dec
iret
(bad)
aas
mov
pushf
mov
sbb
(bad)
aas
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
cmp
inc
outs
pop
jbe
(bad)
aas
mov
cdq
cmp
mov
(bad)
aas
or
popf
mov
shl
repz
dec
xchg
jno
sub
sar
aas
out
gs
je
bound
add
add
add
inc
add
add
add
cmp
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
aas
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
addr16
jg
push
aas
mov
imul
mov
aas
mov
cmp
mov
cli
inc
out
add
add
(bad)
(bad)
(bad)
inc
add
inc
inc
adc
add
add
lock
add
add
add
jg
add
add
add
inc
add
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
adc
add
add
add
clc
inc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
clc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
(bad)
jg
cmp
inc
out
xor
xchg
push
repz
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
lds
aas
adc
and
(bad)
dec
mov
lds
mov
push
push
aad
push
jp
cwde
cdq
cdq
leave
aas
sbb
add
add
loopne
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
add
lods
jmp
add
add
add
aas
add
add
add
aas
add
add
add
jmp
repnz
cwde
jmp
cwde
jmp
inc
jmp
inc
jmp
in
jmp
add
in
jmp
add
call
add
add
add
aas
add
add
add
aas
add
add
add
call
add
cli
call
add
lods
call
add
lods
call
add
(bad)
call
add
(bad)
call
add
sbb
aas
add
add
add
call
add
shl
aas
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
jecxz
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
add
add
add
test
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
cmp
test
(bad)
aas
adc
mov
leave
fidivr
add
fwait
jp
aas
xlat
out
daa
fldcw
and
add
ret
cmps
aas
shl
test
pop
cmp
xor
aas
inc
inc
mov
cmp
pop
inc
mov
rcl
rol
inc
cmp
mov
mov
inc
push
push
cmp
cmp
ins
xchg
mov
dec
jns
ds
pop
and
(bad)
aas
inc
cmp
cmp
sahf
xlat
sar
dec
js
and
or
cdq
ret
or
jns
dec
cmp
jb
dec
les
mov
sub
idiv
jbe
add
aas
in
(bad)
xlat
push
xor
or
out
and
add
mov
(bad)
xor
aas
cmp
mov
retf
sub
jmp
aaa
cmp
test
ds
xchg
into
aas
sbb
xchg
and
cmp
fdiv
and
iret
pop
aaa
cmp
add
sar
inc
or
out
xor
cmp
sbb
sar
mov
or
sbb
cmp
sub
test
cmp
loop
sar
ret
adc
and
add
push
sbb
sar
add
add
ret
aam
(bad)
int
or
cmp
sbb
pushf
or
cmp
sbb
pop
cli
mov
clc
dec
and
test
aas
sbb
mov
das
jb
cmp
sbb
aas
shl
(bad)
xor
mov
xlat
aas
mov
inc
addr16
scas
aas
cmp
rcr
push
pop
data16
cmp
add
fnstcw
inc
imul
push
fnstcw
pop
inc
repnz
add
fidivr
adc
adc
xchg
inc
fstp
(bad)
mov
xor
cmp
add
daa
sahf
int
fstp
push
fwait
xchg
outs
mov
cmp
mov
fdivr
ret
call
add
push
fnstsw
(bad)
cmove
sub
cmp
stos
aam
aas
std
sbb
sub
add
fidivr
mov
mov
cs
movups
aas
fdiv
aaa
popf
ja
sub
add
fistp
ins
(bad)
push
adc
ror
movs
and
dec
ins
sub
cmp
push
jb
aas
mov
loop
cmp
push
mov
rcr
dec
cs
jmp
loope
out
sub
adc
xor
aas
ret
shl
cmp
mov
loope
push
sub
add
outs
addr16
loope
stos
cmp
add
aas
jnp
dec
outs
push
cld
adc
sahf
ja
aas
jns
xor
cmp
sub
shl
mov
cmp
or
xor
pop
jecxz
xor
bound
fwait
xor
or
xor
cld
xchg
inc
sbb
fld
jecxz
mov
mov
fist
sbb
fsub
aas
ds
test
int
sub
iret
sbb
aas
test
push
mov
add
inc
iret
pop
arpl
aas
lods
retf
aad
sub
add
(bad)
call
test
xchg
test
ins
js
shr
in
and
xor
shl
es
sub
aas
leave
mov
push
add
sbb
xchg
ins
in
sahf
outs
shr
add
pop
push
stos
in
cli
arpl
jp
aad
add
and
sub
aas
mov
add
cmp
inc
cs
xor
xchg
push
repz
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
rcr
add
add
add
fstp
adc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
cmp
(bad)
jg
add
cmp
(bad)
jg
js
push
adc
pop
mov
pop
xor
pop
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
into
xchg
(bad)
adc
xor
or
xor
rcl
xchg
fadd
push
aas
neg
push
inc
xor
jp
mov
ins
jp
aas
add
in
test
jl
sbb
push
sub
add
fidiv
add
imul
add
xchg
aas
sbb
cld
cmp
ficomp
sahf
rcr
xor
neg
lods
mov
or
sbb
idiv
mov
icebp
bound
or
push
pop
cmps
aas
fist
sbb
mov
xchg
ror
push
shl
cmp
xor
lods
aas
pop
inc
fprem
fstp
cmp
adc
mov
jbe
scas
sub
pusha
icebp
in
pop
pushf
mov
aam
push
push
aas
loopne
cmp
sbb
mov
loop
cmp
daa
xchg
mov
rep
(bad)
int
les
cmp
jae
mov
lahf
jge
and
ret
pop
cmp
ja
mov
jp
mov
cmp
or
mov
int3
in
cmp
mov
mov
xor
icebp
ss
mov
mov
and
push
sub
es
sub
jmp
add
mov
repz
and
mov
lea
mov
add
cmp
fwait
ins
sar
cli
loope
lea
fisubr
lock
mov
cmp
aas
mov
xchg
icebp
sbb
add
(bad)
push
ret
ja
inc
or
sbb
test
or
add
pshufw
aas
jmp
mov
je
les
xor
mov
cmp
and
les
push
push
cs
jne
lds
sub
fbstp
cmp
sbb
lds
adc
sub
add
nop
push
mov
cdq
xchg
cld
sub
in
cmp
add
ins
pop
and
aas
int
inc
bound
push
sbb
xchg
mov
aas
lds
xchg
push
add
enter
xchg
add
push
or
int3
enter
iret
mov
add
out
fistp
aas
in
(bad)
jp
and
pop
jmp
repnz
push
xor
mov
sub
add
push
lds
stos
fs
imul
stc
jl
mov
aas
jb
js
and
xor
jecxz
int3
aas
jl
push
int
retf
xor
popf
xchg
int3
aas
jb
out
inc
mov
cmp
sti
adc
aas
or
sbb
pop
lahf
int
jae
xlat
mov
add
push
cmp
xchg
repnz
into
aas
xchg
adc
pop
pop
iret
aas
add
pop
cmp
sbb
idiv
and
pop
or
aas
jg
push
and
pop
cmp
or
(bad)
adc
cmp
xor
mov
cmp
jno
sar
xor
xor
add
sar
sbb
cmp
das
inc
sar
mov
xor
xchg
jp
aas
cdq
pop
sub
cmp
jp
sar
jle
jmp
iret
cmp
adc
fisttp
or
cs
daa
cmp
push
sar
stc
pop
movs
sub
jle
cmp
bound
aas
adc
or
sbb
inc
shl
aas
jns
sahf
lods
imul
or
aad
aas
mov
jmp
mov
sar
xor
mov
cdq
xchg
cmp
adc
pop
mov
pop
xor
pop
cmp
add
fstp
add
add
add
fstp
add
add
add
aas
add
add
add
aas
add
add
lock
add
lock
add
loopne
fidivr
add
add
loopne
fidivr
add
add
rcr
aas
add
add
rcr
aas
add
add
mov
add
add
add
add
add
add
add
add
fnstcw
add
add
push
add
aas
add
add
and
add
and
add
loopne
fdivr
add
add
loopne
fdivr
add
add
sub
xlat
aas
add
add
sub
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
ror
xlat
aas
add
add
ror
xlat
aas
add
add
add
aas
add
add
add
aas
add
add
test
(bad)
aas
add
add
test
(bad)
aas
add
add
shl
(bad)
aas
add
add
shl
(bad)
aas
add
add
jo
aad
add
add
jo
aad
add
add
adc
add
adc
add
sub
aas
add
add
sub
aas
add
add
inc
and
aas
add
add
inc
and
aas
add
add
shl
aam
add
add
shl
aam
add
add
pusha
cmps
aam
add
add
pusha
cmps
aam
add
add
push
add
add
aam
add
add
clc
sub
aas
add
add
clc
sub
aas
add
add
js
sar
add
add
js
sar
add
add
cmp
add
add
add
adc
add
add
add
add
clc
dec
sar
add
add
clc
dec
sar
add
add
js
sar
add
add
js
sar
add
add
jo
sar
add
add
jo
sar
add
add
loopne
sar
add
add
loopne
sar
add
add
fdivr
aas
add
add
fdivr
aas
add
add
dec
dec
sar
add
add
dec
dec
sar
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sar
add
add
jo
sar
add
add
pop
imul
add
sar
add
add
mov
add
add
add
add
add
add
add
add
jmp
add
add
sar
add
add
fadd
sar
add
add
fadd
sar
add
add
cmp
add
cmp
add
adc
aas
add
add
adc
aas
add
add
jo
sar
add
add
jo
sar
add
add
shl
aas
add
add
shl
aas
add
add
cwde
add
aas
add
add
cwde
add
aas
add
add
loopne
iret
aas
add
add
loopne
iret
aas
add
add
sub
add
add
sub
add
add
and
iret
aas
add
add
and
iret
aas
add
add
shl
aas
add
add
shl
aas
add
add
pusha
lahf
into
aas
add
add
pusha
lahf
into
aas
add
add
add
aas
add
add
add
aas
add
add
nop
sbb
aas
add
add
nop
sbb
aas
add
add
xor
int
add
add
xor
int
add
add
rcl
add
xchg
int
add
add
push
pop
int
add
add
push
pop
int
add
add
loopne
int
add
add
loopne
int
add
add
pusha
jecxz
aas
add
add
pusha
jecxz
aas
add
add
lock
int3
aas
add
add
lock
int3
aas
add
add
jo
int3
aas
add
add
jo
int3
aas
add
add
add
int3
aas
add
add
add
int3
aas
add
add
xor
aas
add
add
xor
aas
add
add
add
retf
aas
add
add
add
retf
aas
add
add
add
add
add
add
add
lock
add
add
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
sub
inc
adc
sub
adc
cli
inc
xchg
add
cli
inc
xchg
cmp
sahf
mov
cmp
sahf
mov
in
shl
pop
movs
push
push
push
lds
sub
es
push
movs
aas
jnp
(bad)
(bad)
(bad)
(bad)
fistp
dec
jne
push
mov
xor
sub
add
mul
push
ror
mov
add
popa
enter
mul
enter
inc
xchg
add
pop
cmps
call
pop
mov
add
pushf
das
jo
mov
shl
in
jecxz
add
mov
mov
rol
adc
add
lock
lds
call
bound
test
cmp
jb
add
mov
jmp
mov
cmp
imul
call
aam
add
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
add
repnz
cwde
sub
cmp
jl
gs
imul
xor
cmp
pop
cmc
popf
sahf
add
mov
or
xor
cmp
add
cmps
test
add
mov
mov
jne
cmp
add
dec
clc
rcr
fisttp
mov
cmp
add
jge
int3
mov
mov
aaa
cmps
jno
add
shl
xor
cmps
add
ins
dec
sub
and
dec
cmps
fiadd
add
mov
mul
or
add
adc
cmp
mov
or
add
mov
cmp
cmp
mov
xchg
mov
jp
into
nop
jbe
daa
sub
aad
mov
sub
cmps
sub
jbe
stc
add
pop
out
shl
popf
push
sub
sbb
daa
mov
inc
outs
add
loop
arpl
fld
stos
add
sub
xor
outs
out
add
mov
cdq
test
mov
mov
and
add
fdiv
xchg
cdq
cmp
and
cmp
add
mov
cmp
cmp
sahf
mov
into
xchg
sbb
mov
push
add
and
call
cmps
cmps
pop
mov
popa
mov
push
jmp
pop
add
inc
mov
jae
mov
(bad)
stos
loope
gs
dec
iret
ss
add
addr16
mov
adc
dec
cdq
mov
enter
xchg
cmp
xchg
inc
fldcw
add
lea
mov
or
inc
pop
repz
xor
cmp
ja
cdq
scas
icebp
or
cmp
push
pushf
mov
(bad)
aaa
aaa
or
stos
(bad)
stc
and
call
ficomp
daa
into
xchg
sub
scas
jno
nop
lock
add
ins
fwait
cmp
in
jnp
or
add
daa
xchg
cmp
and
or
mov
jae
test
cmp
std
jns
imul
xchg
ja
mov
call
sub
cmp
adc
or
scas
add
mov
bnd
or
int
pop
or
push
ror
int3
or
mov
scas
xor
push
test
fwait
sbb
lods
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
push
imul
nop
out
fsub
mov
add
jo
cmp
mov
dec
sub
pop
cmp
cmp
movs
sti
fcomp
pop
or
aad
pop
mov
test
dec
sbb
mov
jnp
xchg
cld
or
pusha
add
je
idiv
mov
cs
push
add
dec
or
fst
push
add
and
cmp
pop
popa
out
sbb
push
add
test
xor
inc
outs
pop
jbe
ltr
mov
fcom
sldt
add
add
add
aas
add
add
add
adc
out
cmp
inc
xchg
add
mov
add
add
add
lock
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
cmp
add
cmp
fs
add
fs
add
outs
gs
popa
data16
jb
add
outs
bound
add
pop
jns
add
xor
pop
jns
add
jns
outs
je
add
popa
bound
add
popaw
bound
add
add
arpl
add
add
cs
add
add
bound
add
add
arpl
add
add
cs
add
popf
ja
and
add
add
add
mov
mov
cmc
scas
aas
sub
ss
out
addr16
cmp
add
mov
add
add
out
mov
push
xchg
pusha
je
pop
add
add
add
add
mov
cwde
mov
enter
popa
add
add
add
aas
add
add
out
(bad)
ret
aas
xchg
clc
cmp
add
les
add
add
mov
xor
fdiv
add
add
add
enter
add
nop
retf
aas
and
and
add
add
add
add
aas
add
add
jne
iret
aas
(bad)
fld
(bad)
or
add
add
add
aas
add
add
inc
retf
mov
add
add
add
sar
add
add
(bad)
imul
add
add
add
aas
add
add
jo
mov
aam
adc
add
add
aas
add
add
not
aas
inc
adc
push
add
add
add
fdivr
add
add
dec
mov
aas
jmp
mov
add
add
fidivr
add
add
out
fidivr
jge
mov
pop
popa
cs
add
add
fdivr
add
add
mov
fdivr
fs
clc
sahf
in
adc
add
add
add
fidivr
add
add
lods
fnstsw
leave
fisttp
add
add
add
loopne
add
add
fld
aas
shl
mov
add
add
add
loope
add
add
sub
sbb
add
add
add
loop
add
add
inc
or
add
add
add
jecxz
add
add
sbb
idiv
add
add
add
in
add
add
xchg
loop
mov
in
or
add
add
add
in
add
add
inc
jecxz
pushf
or
add
add
add
out
add
add
shl
mov
(bad)
adc
add
add
add
out
add
add
test
and
div
add
add
add
call
js
cmp
aas
imul
add
add
add
jmp
test
adc
rcr
cmp
add
add
add
jmp
ins
out
add
and
add
add
add
jmp
add
add
cmps
add
aas
pop
xchg
out
arpl
add
add
aas
add
add
test
in
shl
add
add
aas
add
add
mov
push
lods
cmp
add
add
add
out
aas
add
add
cmc
lahf
call
mov
add
add
add
out
aas
add
add
jmp
adc
add
add
add
add
lock
add
add
cmp
mov
fcomp
add
add
add
add
and
pop
cmp
sub
add
add
add
icebp
aas
add
add
mov
mov
add
add
add
add
dec
add
aas
xchg
jb
in
daa
or
add
add
add
repnz
add
add
mov
cmp
sbb
add
add
add
add
jo
jmp
cmp
and
add
add
add
repz
add
add
popa
push
call
add
add
xor
add
add
in
aas
daa
pop
sbb
jl
cmp
add
add
add
hlt
aas
add
add
push
in
aas
into
jge
fs
and
add
add
add
add
push
outs
in
aas
xlat
mov
dec
push
js
add
add
add
cmc
aas
add
add
retf
xor
sub
add
add
add
add
out
aas
or
das
mov
add
add
add
aas
add
add
jl
aas
xchg
cmc
js
jl
xor
add
add
add
add
out
aas
sbb
fstp
cmp
adc
add
add
add
idiv
add
add
and
aas
mov
lea
add
add
xor
add
add
or
aas
mov
fnstenv
add
add
clc
aas
add
add
shr
gs
cs
add
add
add
push
lock
mov
cmps
inc
add
add
add
stc
aas
add
add
sub
aas
jbe
pop
mov
add
add
add
add
dec
lock
push
inc
pop
mov
add
add
add
cli
aas
add
add
adc
aas
daa
pop
loope
ror
add
add
add
add
lock
fwait
lahf
es
sahf
ret
add
add
add
sti
aas
add
add
lock
mov
dec
jb
push
inc
add
add
add
add
shl
aas
frstor
das
movs
daa
call
add
add
cld
aas
add
add
movs
repnz
pop
pop
int
add
aas
add
add
add
add
jmp
icebp
aas
or
aam
jge
pop
add
add
add
std
aas
add
add
gs
aas
out
dec
sbb
inc
add
add
add
add
sbb
rcr
push
into
nop
aas
add
add
add
(bad)
aas
add
add
addr16
aas
xchg
mov
sub
add
add
cmp
add
add
xor
sbb
xchg
dec
add
add
add
(bad)
aas
add
add
cmc
pushf
icebp
aas
xor
dec
add
add
add
add
int
arpl
repnz
inc
add
add
add
add
add
sub
shl
aas
fst
js
out
add
add
add
inc
add
add
call
adc
add
add
add
add
add
sar
add
add
add
add
add
lock
repnz
lds
xchg
mov
(bad)
dec
add
add
add
add
add
and
das
repnz
push
inc
dec
test
add
add
add
inc
add
add
mov
repnz
mov
add
add
add
add
xchg
pop
repnz
mov
adc
sar
add
add
add
add
add
push
out
jo
aas
xchg
push
dec
mov
add
add
add
inc
add
add
test
aas
inc
ss
xor
add
add
inc
add
add
xor
and
add
add
add
and
repnz
jae
add
add
add
add
add
add
inc
mov
retf
or
fsub
add
add
add
add
add
sub
fdivr
scas
rol
add
add
add
inc
add
add
push
out
aas
ffreep
sub
add
add
add
add
mov
push
dec
add
add
add
add
add
js
or
aas
sub
mov
add
add
add
add
add
add
in
repz
xor
jmp
add
add
add
inc
add
add
(bad)
sub
sub
ret
add
add
add
add
ds
mov
cmc
stos
xor
add
add
add
add
add
add
fwait
xlat
or
dec
add
add
add
add
shr
pop
aam
or
add
add
add
inc
add
add
out
repz
in
sti
cmps
sbb
add
add
add
add
cwde
cmp
cmp
add
add
add
add
ins
push
repz
push
loop
pop
push
sub
add
add
add
push
inc
add
add
repz
mov
cmp
add
add
add
inc
add
add
retf
and
cmovb
add
add
add
add
repz
test
jmp
add
rol
add
add
(bad)
repz
fwait
sbb
es
add
add
pop
inc
add
add
xchg
aam
aas
push
clc
inc
add
add
add
inc
add
add
(bad)
jo
ins
add
add
add
add
add
outs
adc
add
add
add
pop
inc
add
add
cld
repz
pop
mov
dec
add
add
add
or
add
(bad)
lds
hlt
aas
sub
lds
add
add
add
inc
add
add
adc
ins
sar
add
add
add
add
jne
in
inc
jecxz
add
add
add
or
add
inc
jo
hlt
aas
mov
push
adc
stc
xor
add
add
add
or
add
movs
cmp
hlt
aas
mov
mov
add
add
add
inc
add
add
inc
hlt
aas
div
aaa
add
add
add
add
push
hlt
aas
or
inc
retf
add
add
add
or
add
adc
cmp
dec
add
add
add
or
add
ror
hlt
aas
sbb
cmp
add
add
add
inc
add
add
ret
xchg
sbb
add
add
add
add
jnp
aas
xor
mov
xor
add
add
add
or
add
dec
sbb
test
add
add
add
or
add
mov
hlt
aas
(bad)
shl
inc
add
add
add
inc
add
add
imul
xchg
shl
add
add
add
add
movs
hlt
aas
js
xor
fwait
jne
add
add
add
or
add
cld
adc
dec
sub
bound
add
add
add
or
add
add
movs
mov
aas
sbb
es
int
inc
add
add
add
inc
add
add
cdq
sar
jecxz
dec
add
add
add
add
pop
retf
dec
outs
mov
add
add
add
or
add
add
js
hlt
aas
sub
cdq
cmp
add
add
add
or
mov
ss
dec
inc
sbb
cmp
add
add
add
inc
add
add
dec
in
aas
mov
dec
add
add
add
add
hlt
aas
adc
adc
add
ror
(bad)
div
aas
ds
es
add
add
add
push
inc
add
add
or
add
add
add
inc
add
add
dec
pop
cmc
aas
adc
push
push
or
add
add
add
add
pmaddwd
mov
movs
dec
add
add
add
push
inc
add
add
test
cmc
aas
xchg
mov
add
add
add
cmovo
add
pushf
jae
cmc
aas
add
xchg
dec
sti
push
dec
add
add
add
inc
add
add
inc
daa
cmc
aas
into
scas
mov
add
add
add
add
imul
cmc
aas
cmp
and
add
add
ror
add
add
movs
leave
iret
jmp
add
add
adc
add
or
ds
aas
xor
xchg
dec
arpl
add
add
add
adc
add
shl
aas
adc
xchg
add
add
add
inc
add
add
cmc
aas
add
dec
add
add
add
inc
add
add
push
cmc
aas
test
or
add
add
add
add
fcomp
aas
or
and
add
add
mov
add
sbb
aaa
add
add
add
adc
add
sub
cmp
add
add
add
adc
add
xor
cmc
aas
xchg
dec
adc
xor
add
add
add
inc
add
add
jbe
aas
push
mov
cs
and
add
add
add
adc
add
in
jl
aas
call
add
add
add
inc
add
add
in
and
mov
add
add
pusha
adc
add
xchg
nop
mov
aas
outs
sbb
add
add
add
add
neg
sub
add
add
add
add
sbb
mov
add
add
add
adc
add
add
pushf
cmc
aas
push
push
stos
js
jg
add
add
add
adc
add
push
push
mov
mov
mov
add
add
add
adc
add
xor
test
aas
push
(bad)
pop
and
mov
add
add
adc
add
adc
cmc
aas
lods
in
cmp
mov
add
add
add
inc
add
add
cmc
aas
jno
mov
or
add
add
add
inc
add
add
mov
and
xlat
shl
add
add
adc
add
add
cmc
aas
or
mov
add
add
add
add
adc
cmc
aas
or
shr
pop
cmp
add
add
add
adc
add
inc
pushf
retf
scas
mov
cli
cmp
add
adc
add
les
shl
aas
xchg
or
(bad)
cmp
add
adc
add
mov
stos
cld
xchg
(bad)
test
add
add
adc
add
test
(bad)
aas
mov
cs
xor
add
add
add
inc
add
add
loopne
aas
loop
jne
jl
cmp
add
add
add
inc
add
add
inc
sbb
cmp
add
add
add
add
push
lods
xor
std
mov
add
add
add
jnp
cmc
aas
sub
outs
inc
add
add
add
adc
add
and
hlt
cmc
aas
js
xchg
clc
adc
add
add
add
adc
add
adc
stc
cmc
aas
retf
aad
ins
test
add
add
add
adc
add
add
push
(bad)
cmc
aas
xchg
lock
cmp
add
add
adc
add
add
sub
scas
ficomp
cmp
add
inc
adc
add
add
cmc
pop
idiv
add
cmp
add
add
inc
add
add
lods
or
aas
sbb
push
and
add
add
add
add
mov
inc
ds
add
add
add
cmc
and
pusha
(bad)
dec
add
add
add
adc
add
add
test
idiv
cdq
jge
adc
xor
add
add
add
adc
add
add
push
pop
idiv
scas
xor
add
add
add
adc
je
and
aas
jmp
inc
add
add
add
adc
xor
daa
idiv
mov
and
and
add
add
add
inc
add
add
sub
aas
xchg
in
fiadd
add
add
add
inc
add
add
mov
cmovne
add
add
add
add
into
xor
aas
out
popa
repz
add
add
mov
add
add
idiv
stc
lea
mov
inc
add
add
add
adc
in
cmp
dec
inc
push
cmp
add
adc
inc
dec
inc
idiv
int
add
neg
add
add
push
inc
add
add
pusha
inc
idiv
popa
jo
dec
xor
add
add
push
inc
add
add
movs
cdq
cmp
add
add
add
inc
add
add
arpl
aas
movs
repnz
add
add
add
inc
add
add
push
idiv
dec
jns
ficomp
add
add
adc
add
add
cmp
aas
jbe
addr16
das
add
add
add
add
push
fimul
add
add
rcl
add
add
jmp
out
jecxz
jns
add
add
add
push
inc
add
add
pusha
idiv
inc
and
sbb
add
add
add
pop
inc
add
add
sti
out
movs
sahf
dec
add
add
add
pop
inc
add
add
and
aas
shl
shl
dec
add
add
add
inc
add
add
leave
imul
imul
sbb
jge
add
add
add
inc
add
add
mov
mov
add
add
add
add
cwde
fwait
clc
add
dec
add
add
add
add
mov
aas
sub
dec
add
add
add
pop
inc
add
add
jp
aas
jmp
icebp
inc
daa
cmp
add
add
pop
inc
add
add
jge
aas
pop
or
in
in
add
add
add
sbb
add
mov
xor
xor
dec
add
add
add
sbb
add
fsub
idiv
push
loop
adc
add
add
add
inc
add
add
idiv
push
dec
push
or
add
add
pusha
sbb
add
js
mov
aas
(bad)
push
xor
jmp
add
add
add
mov
aas
in
sub
add
add
add
add
idiv
jno
enter
dec
add
add
add
sbb
add
dec
jmp
idiv
enter
cmp
add
add
add
sbb
add
cmp
cwde
idiv
(bad)
mov
add
add
add
inc
add
add
fwait
idiv
retf
and
mov
add
add
add
sbb
add
inc
jne
idiv
out
xchg
repnz
add
add
inc
add
add
xchg
mov
add
add
add
inc
add
add
movs
idiv
pop
mov
add
add
add
add
test
xor
jge
add
add
add
add
stos
idiv
xchg
or
cmp
add
add
add
sbb
add
mov
lods
idiv
ins
or
push
pop
add
add
add
add
sbb
add
call
cli
test
shl
pusha
or
add
add
add
sbb
add
add
fs
idiv
add
add
add
sbb
add
adc
mov
aas
loope
push
jbe
inc
inc
add
add
add
inc
add
add
mov
enter
dec
add
add
add
inc
add
add
jge
adc
mov
add
add
add
mov
jbe
sti
loop
add
add
add
add
ret
int3
scas
sub
add
add
add
sbb
add
mov
(bad)
idiv
xchg
sti
call
xor
add
add
add
sbb
add
jl
(bad)
idiv
pop
jae
stos
mov
inc
add
add
add
sbb
add
adc
idiv
stos
fs
xchg
push
sbb
add
add
add
sbb
add
push
dec
idiv
mov
dec
dec
add
add
add
inc
add
add
iret
idiv
imul
(bad)
xor
add
add
add
inc
add
add
shl
aas
mov
retf
add
add
add
add
aam
aas
push
mov
mov
add
add
add
add
fwait
xlat
idiv
(bad)
(bad)
jmp
add
add
add
sbb
add
cmp
(bad)
aas
mov
mov
add
add
sbb
add
js
fdiv
aas
aaa
outs
lods
in
stos
dec
add
add
add
sbb
add
add
push
fcomip
aas
cmps
dec
arpl
pop
test
add
add
add
sbb
add
add
fsub
idiv
sti
jp
xchg
inc
add
add
inc
sbb
add
add
in
aas
and
icebp
inc
arpl
add
add
add
inc
add
add
aad
idiv
xlat
push
fisub
call
add
add
dec
jmp
hlt
add
add
add
add
add
xlat
ins
and
hlt
cmp
add
sbb
add
add
sbb
and
add
add
add
sbb
add
add
lock
pop
dec
add
add
add
sbb
cmp
repnz
add
sahf
dec
cli
test
add
add
add
sbb
dec
dec
cmc
idiv
call
add
add
add
inc
add
add
idiv
mov
sub
add
add
add
inc
add
add
idiv
cmp
idiv
std
xor
add
add
add
add
pop
jnp
jg
inc
add
add
add
add
mov
idiv
cli
inc
pop
retf
xchg
jg
add
add
add
sbb
inc
into
add
aas
push
xchg
nop
xor
add
add
add
sbb
clc
or
idiv
ja
xor
sbb
xor
add
add
add
push
inc
add
add
inc
add
dec
call
add
add
push
inc
add
add
pop
idiv
dec
pop
lods
das
add
add
add
inc
add
add
adc
add
add
add
inc
add
add
mov
pusha
xchg
add
add
add
add
idiv
call
add
add
add
add
and
idiv
ins
add
add
add
add
push
inc
add
add
inc
adc
aas
jle
sub
mov
add
add
add
push
inc
add
add
push
dec
rcl
add
add
add
pop
inc
add
add
jnp
mov
inc
add
add
add
pop
inc
add
add
idiv
jecxz
xor
ror
and
add
add
add
inc
add
add
test
xor
dec
or
add
add
add
inc
add
add
pop
inc
ficom
add
add
add
add
(bad)
addr16
shr
add
add
add
add
xor
sub
add
add
add
pop
inc
add
add
push
pusha
inc
xor
add
add
add
pop
inc
add
add
cmp
retf
inc
add
add
add
and
sub
stc
aas
pop
pop
adc
cmps
xchg
cmp
jns
je
ins
push
outs
outs
je
add
and
mov
mov
add
mov
repnz
retf
rcl
mov
add
dec
mov
les
or
scas
int
adc
leave
loop
popa
stc
push
mov
xor
adc
xlat
add
xor
rcl
mov
add
dec
fld
sbb
add
add
add
sbb
add
jmp
add
push
push
inc
push
cmp
repnz
mov
inc
div
mov
add
add
cmp
imul
outs
jb
sub
xor
outs
jae
popa
ins
ins
gs
ja
outs
outs
ja
pop
bound
ins
fs
jb
ins
gs
jae
pop
popa
jo
jae
bound
je
je
popa
jo
gs
jo
bound
add
icebp
dec
add
add
add
add
add
dec
add
add
add
add
icebp
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
mov
dec
add
(bad)
(bad)
inc
add
add
add
cwde
mov
add
add
add
add
add
test
dec
add
add
icebp
dec
add
mov
add
add
add
add
add
aam
dec
add
mov
add
cld
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
repnz
add
add
add
add
add
add
sbb
dec
add
mov
dec
add
add
add
repnz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
pusha
mov
add
add
add
add
add
jo
dec
add
add
mov
add
add
add
add
add
pushf
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
and
dec
add
mov
add
add
add
add
add
call
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fdivr
add
pop
repz
add
dec
add
add
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
repz
add
dec
add
add
add
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
hlt
dec
add
add
add
add
add
add
int3
mov
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
mov
add
add
add
add
add
sbb
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
or
add
pusha
hlt
dec
add
dec
add
add
add
dec
add
add
mov
add
pusha
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
mov
add
mov
dec
add
add
add
add
add
add
lods
mov
dec
add
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
mov
add
mov
mov
add
add
add
add
add
clc
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
add
add
hlt
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
hlt
dec
add
add
add
add
add
add
xchg
ror
ror
ror
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
hlt
dec
add
ror
add
add
add
add
add
add
ror
ror
mov
add
cld
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
ror
add
add
dec
add
add
add
dec
add
add
mov
add
adc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
ror
ror
mov
add
push
cmc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
ror
add
add
add
add
add
add
ror
ror
add
add
add
(bad)
(bad)
inc
add
add
add
rol
dec
add
test
dec
add
add
add
ret
cmp
dec
add
dec
add
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
dec
add
test
dec
add
add
add
dec
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
dec
add
add
add
ret
int3
ret
inc
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
ret
add
add
or
dec
add
dec
add
ret
inc
mov
add
test
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
ret
xor
dec
add
add
add
pop
ret
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
ret
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
ret
dec
add
ret
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
add
add
ret
dec
add
ret
dec
add
add
dec
add
add
and
dec
add
les
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
add
js
dec
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
pop
dec
add
add
add
add
add
add
int3
les
fadd
dec
add
ret
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
add
add
add
add
add
sbb
dec
add
lds
inc
lds
add
add
pop
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
add
add
jo
dec
add
add
dec
add
add
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
pop
dec
add
lds
add
add
in
lds
clc
lds
inc
mov
add
lock
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fadd
dec
add
dec
add
(bad)
dec
add
add
add
(bad)
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
dec
add
(bad)
dec
add
ret
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
(bad)
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
(bad)
dec
add
dec
add
add
add
dec
add
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
(bad)
dec
add
or
loopne
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
add
add
add
enter
add
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
enter
add
add
or
lods
enter
add
add
add
add
add
mov
enter
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lods
enter
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
leave
dec
add
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
leave
dec
add
add
add
add
leave
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
je
dec
add
leave
dec
add
add
ror
dec
add
leave
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
dec
add
add
and
dec
add
retf
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
or
push
add
add
add
add
add
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
or
mov
dec
add
add
add
retf
aam
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
or
add
dec
add
add
add
dec
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
or
push
retf
dec
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
retf
dec
add
or
movs
retf
dec
add
add
add
dec
add
ret
inc
mov
add
and
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
retf
dec
add
dec
add
retf
dec
add
add
add
dec
add
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
hlt
retf
dec
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
int3
dec
add
dec
add
add
add
add
add
add
pushf
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
int3
dec
add
add
add
int3
dec
add
int3
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fmul
dec
add
int
add
add
add
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
or
jo
dec
add
add
add
int
add
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
or
add
int
add
add
add
int
add
int
add
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
or
add
into
dec
add
add
add
into
dec
add
into
dec
add
int3
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
dec
add
add
dec
add
add
add
add
add
add
movs
into
dec
add
lds
add
add
pusha
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
into
dec
add
add
add
add
add
into
dec
add
iret
dec
add
dec
add
dec
add
add
iret
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
lock
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
iret
dec
add
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
add
add
iret
dec
add
add
add
add
or
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
or
or
dec
add
or
add
add
ror
add
add
dec
ror
pusha
ror
jl
dec
add
leave
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cwde
ror
add
add
test
dec
add
add
leave
dec
add
add
or
dec
add
add
add
ror
in
ror
or
dec
add
add
add
add
or
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
or
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
ror
inc
mov
add
sub
dec
add
add
add
ror
js
dec
add
ror
or
dec
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
ins
push
dec
add
add
add
add
add
add
add
ror
sub
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
ror
add
add
or
dec
add
dec
add
ror
je
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
clc
ror
les
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
add
add
ror
cmp
dec
add
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
nop
ror
add
add
mov
ror
dec
into
dec
add
cmovge
rcl
add
ror
call
ror
inc
ror
adc
add
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcl
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
add
xor
dec
add
dec
add
add
into
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
ror
add
add
jo
dec
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
add
add
lods
ror
adc
add
add
ror
add
add
(bad)
dec
add
ror
add
add
nop
cmovge
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
add
add
adc
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
cmovge
dec
aam
add
add
add
add
add
into
dec
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
aam
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
aam
add
add
add
dec
add
add
dec
add
aam
add
add
add
aam
add
aam
add
aad
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pop
aad
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
add
aad
add
into
dec
add
aad
add
add
add
aad
add
dec
add
(bad)
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
dec
add
add
adc
ins
(bad)
dec
add
add
add
add
dec
add
add
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
(bad)
dec
add
dec
add
add
add
add
add
add
int3
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
dec
add
(bad)
dec
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
xlat
dec
add
dec
add
add
add
dec
add
xlat
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
xlat
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
in
xlat
dec
add
add
add
xlat
dec
add
xlat
dec
add
add
dec
add
dec
add
add
add
dec
add
dec
add
add
fmul
adc
add
add
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
add
fmul
fmul
test
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
fmul
add
add
aam
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
add
add
dec
add
fmul
adc
add
add
(bad)
add
add
dec
(bad)
pop
(bad)
sub
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
(bad)
add
add
cwde
(bad)
test
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
add
add
call
(bad)
add
add
ins
adc
(bad)
(bad)
(bad)
inc
add
add
add
fcomp
dec
add
dec
add
add
add
fimul
cmp
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
dec
add
leave
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
adc
mov
add
add
add
add
add
add
fimul
aam
dec
add
fimul
add
add
enter
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
adc
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
dec
add
fimul
cld
adc
cmp
dec
add
add
add
dec
add
add
enter
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
add
fisttp
mov
aad
add
fisttp
adc
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
fisttp
mov
aad
add
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
push
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
fmul
add
add
add
add
or
add
movs
fmul
fcomp
dec
add
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
fmul
fcom
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
fisttp
hlt
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
add
add
jl
dec
add
fisttp
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
inc
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
fisttp
movs
fisttp
add
add
inc
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
dec
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
mov
fmul
add
add
adc
add
add
add
mov
fmul
in
dec
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
fimul
loopne
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
or
dec
add
dec
add
adc
dec
add
add
add
dec
add
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
adc
dec
add
add
sbb
add
dec
add
fisttp
dec
into
dec
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
int3
fisttp
add
add
(bad)
dec
add
fisttp
dec
into
dec
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
loopne
add
fisttp
dec
into
dec
add
dec
add
loopne
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
loopne
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
dec
add
loopne
add
add
add
loopne
add
loope
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
loope
add
add
add
dec
add
dec
add
add
push
dec
add
dec
add
add
add
loope
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
add
add
aam
dec
add
fimul
sub
dec
add
add
dec
add
loope
add
add
add
dec
add
dec
add
leave
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
loope
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
loop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
loop
add
add
add
dec
add
add
dec
add
loope
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lock
add
jecxz
add
loop
add
fimul
sub
dec
add
add
pop
dec
add
dec
add
add
add
dec
add
dec
add
enter
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
pop
dec
add
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
dec
add
in
add
add
add
in
add
in
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
and
dec
add
icebp
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
in
add
in
add
mov
add
pushf
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
add
dec
add
add
add
add
add
add
and
dec
add
in
add
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
dec
add
add
add
add
add
add
add
dec
add
dec
add
fimul
sub
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
in
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
add
in
add
loope
add
leave
dec
add
add
dec
add
add
dec
add
add
add
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
add
add
cmp
dec
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
add
add
add
add
dec
add
dec
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
cmp
add
add
js
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
jns
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
add
add
dec
add
dec
add
out
add
add
add
out
add
out
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
shl
add
dec
add
call
add
add
add
add
add
xor
dec
add
dec
add
into
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
call
add
add
add
add
add
sub
add
aad
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
cmp
add
call
add
add
add
push
add
add
call
dec
add
dec
add
leave
dec
add
add
jmp
dec
add
add
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
shr
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
dec
add
add
add
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
cmp
add
call
add
js
dec
add
in
add
add
add
add
add
add
dec
add
in
add
add
jg
add
and
add
adc
add
nop
inc
add
add
pop
or
fist
or
sti
pop
or
sbb
or
cmp
or
pop
sbb
add
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
js
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
mov
or
mov
sbb
add
or
sbb
add
sbb
add
sbb
add
or
dec
sbb
add
or
mov
or
fcomp
add
sbb
or
pop
sbb
or
cwde
sbb
or
fcomp
or
test
or
scas
push
or
ficomp
or
xor
or
test
or
loope
or
sub
or
fldenv
or
clc
and
add
and
add
or
jnp
or
cwde
and
add
and
add
and
add
and
add
or
mov
or
int3
and
add
and
add
or
test
or
shl
or
repz
add
and
add
and
add
or
mov
and
add
and
or
pop
or
push
or
jae
or
mov
or
mov
or
(bad)
or
stc
or
sub
or
pop
daa
or
mov
or
test
or
call
sub
add
or
cwde
sub
add
sub
add
sub
add
sub
add
sub
add
or
xchg
sub
add
sub
add
sub
add
or
push
sub
add
sub
add
sub
add
sub
add
or
mov
sub
add
or
sub
test
sub
add
sub
add
sub
or
fsubr
or
dec
or
push
or
fld
or
or
or
cmp
or
pop
das
or
mov
das
or
fsubr
or
and
or
popa
xor
add
xor
add
xor
add
xor
add
or
mov
or
mov
xor
add
xor
add
or
js
or
cwde
xor
add
or
and
add
cmp
add
cmp
add
cmp
add
cmp
add
or
icebp
cmp
add
cmp
add
or
jnp
or
stos
cmp
add
cmp
add
cmp
or
mov
aas
or
xor
add
or
jns
or
fwait
inc
or
mov
inc
or
sti
inc
or
and
add
or
leave
inc
or
cmp
mov
inc
or
sub
add
or
mov
inc
or
add
add
or
imul
add
inc
or
call
dec
or
sub
add
or
push
dec
or
mov
dec
or
fisttp
add
dec
or
sbb
add
dec
or
pop
dec
or
xchg
dec
or
test
or
fisttp
add
dec
or
cmp
add
or
jle
or
cwde
dec
or
ds
or
pop
dec
or
mov
add
add
dec
or
mov
dec
or
clc
dec
or
cmp
add
or
fmul
add
or
mov
dec
or
inc
dec
or
clc
dec
or
mov
add
push
or
rcl
add
or
clc
push
or
call
push
or
pop
push
or
test
push
or
rcl
add
push
or
and
add
or
jo
or
nop
push
or
loope
or
clc
push
or
sbb
add
or
js
or
test
or
mov
pop
or
push
pop
or
xor
add
or
jo
or
cwde
pop
or
rcr
add
pop
or
adc
xor
push
pop
or
cdq
pop
or
mov
pop
or
xor
add
or
enter
lock
or
and
add
pusha
or
push
pusha
or
mov
add
pusha
or
push
popa
or
sub
add
or
xchg
popa
or
lock
or
enter
nop
arpl
add
or
inc
or
jo
or
mov
or
nop
or
loopne
or
adc
add
or
and
mov
or
pop
or
clc
or
cwde
push
or
call
push
add
ins
or
pop
ins
or
call
ins
or
shr
add
add
outs
or
loopne
or
or
add
outs
or
cwde
outs
or
shr
clc
outs
or
js
or
test
or
repz
add
or
sbb
lds
fdiv
cld
je
add
jne
add
or
xchg
jne
add
jne
add
jbe
add
or
jg
or
stos
jbe
add
jbe
add
ja
add
or
push
ja
add
or
pushf
ja
add
ja
add
ja
add
js
add
or
imul
add
js
add
jns
add
or
xchg
jns
add
jns
add
jns
add
jp
add
jp
add
or
sahf
jp
add
jp
add
jp
add
jnp
add
or
inc
jnp
add
or
fwait
jnp
add
jl
add
jl
add
or
xchg
jl
add
jl
add
jl
add
jge
add
or
pushf
jge
add
jge
add
jle
add
add
or
call
add
jle
add
jle
add
jg
add
jg
add
or
mov
add
jg
add
or
cmp
or
outs
or
mov
or
rol
add
or
sbb
or
pop
or
add
or
add
or
xor
or
xchg
or
int
or
lock
adc
or
pop
or
jl
or
lahf
or
ret
add
or
or
add
or
jno
or
xchg
test
add
test
add
test
add
test
add
or
jbe
or
movs
test
add
test
add
xchg
add
xchg
add
or
add
add
or
mov
or
iret
xchg
add
xchg
add
mov
add
or
jle
or
mov
mov
add
mov
add
mov
add
mov
add
or
xchg
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
add
mov
add
mov
add
or
daa
mov
add
or
jb
or
xchg
mov
add
mov
add
mov
add
lea
add
lea
add
or
mov
lea
add
lea
add
mov
add
or
push
mov
add
or
mov
(bad)
(bad)
(bad)
vprotb
or
into
(bad)
(bad)
nop
or
bound
or
test
or
retf
nop
or
out
nop
or
adc
or
jne
or
call
add
xchg
or
or
xchg
or
push
xchg
or
jns
or
pushf
xchg
or
rcl
or
pop
xchg
or
sub
or
jo
or
adc
add
xchg
or
icebp
xchg
or
add
add
or
xchg
xchg
or
test
or
retf
xchg
or
icebp
xchg
or
adc
or
push
xchg
or
jnp
or
mov
xchg
or
clc
xchg
or
xor
or
js
or
inc
xchg
or
js
or
adc
or
dec
cwde
or
inc
cdq
or
nop
cdq
or
push
call
or
add
or
cwde
pushf
or
adc
or
mov
popf
or
lock
or
and
or
pusha
sahf
or
mov
sahf
or
push
lahf
or
and
or
mov
lahf
or
lock
or
or
or
dec
mov
or
mov
mov
or
push
mov
or
and
add
mov
or
xor
add
movs
or
and
or
and
add
movs
or
loopne
or
sti
movs
or
and
or
push
cmps
or
enter
add
or
js
or
cmps
cmps
or
shl
add
test
add
or
xchg
test
add
test
add
test
or
push
test
or
mov
test
or
pop
stos
or
mov
or
in
or
pop
stos
or
sub
or
jo
or
fwait
stos
or
mov
stos
or
add
or
push
lods
or
cmps
lods
or
(bad)
(bad)
(bad)
push
dec
add
add
add
mov
add
add
(bad)
(bad)
call
add
add
in
dec
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
hlt
hlt
dec
add
(bad)
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
dec
add
add
add
add
inc
adc
add
add
fs
dec
add
add
add
dec
add
add
(bad)
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
xor
inc
add
add
add
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
and
inc
add
(bad)
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
add
dec
add
(bad)
(bad)
push
add
add
sub
dec
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
dec
add
(bad)
(bad)
jmp
sbb
and
add
in
dec
add
(bad)
(bad)
inc
sbb
and
add
adc
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
and
add
cmp
dec
add
(bad)
(bad)
call
dec
add
add
add
js
dec
add
(bad)
(bad)
push
dec
add
add
add
movs
test
(bad)
(bad)
(bad)
call
add
add
shl
dec
add
(bad)
(bad)
push
add
add
cld
test
(bad)
(bad)
(bad)
call
sbb
and
add
sub
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
(bad)
(bad)
clc
sbb
and
add
push
clc
dec
add
(bad)
(bad)
call
sbb
and
add
mov
dec
add
(bad)
(bad)
push
sbb
and
add
mov
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
loopne
dec
add
(bad)
(bad)
push
dec
add
add
add
adc
dec
add
(bad)
(bad)
jmp
add
add
inc
stc
dec
add
add
add
nop
stc
dec
add
(bad)
(bad)
call
sbb
(bad)
(bad)
(bad)
(bad)
fcomp
dec
add
add
add
sbb
add
add
jmp
dec
add
add
add
sbb
add
add
(bad)
sbb
and
add
in
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
add
add
inc
sbb
add
add
dec
sbb
(bad)
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
adc
dec
add
(bad)
(bad)
call
add
add
add
add
dec
cli
dec
add
(bad)
(bad)
push
add
add
jl
dec
add
(bad)
(bad)
call
sbb
and
add
test
dec
add
add
add
clc
cli
dec
add
(bad)
(bad)
push
sbb
add
add
clc
sbb
add
add
add
add
add
add
sbb
add
add
add
sbb
add
(bad)
(bad)
push
sbb
add
add
add
sbb
add
add
add
dec
add
add
add
and
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
pop
sti
dec
add
add
add
mov
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
sbb
add
(bad)
(bad)
dec
sbb
add
(bad)
(bad)
call
sbb
add
add
add
in
dec
add
(bad)
(bad)
push
sbb
add
(bad)
(bad)
(bad)
clc
sbb
add
add
add
and
dec
add
add
add
js
dec
add
(bad)
(bad)
call
sbb
(bad)
call
sbb
add
and
add
sub
add
xor
(bad)
(bad)
cmp
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
or
dec
add
(bad)
(bad)
push
add
add
xor
dec
add
(bad)
(bad)
call
sbb
xchg
sbb
add
add
dec
add
add
add
mov
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
sti
sbb
add
add
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
add
add
or
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
(bad)
jns
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
inc
dec
(bad)
(bad)
(bad)
inc
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
cmp
add
add
add
loopne
dec
add
(bad)
(bad)
push
push
dec
add
add
add
push
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cwde
dec
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
pop
dec
add
add
add
and
add
add
push
and
add
add
sbb
dec
add
add
add
and
and
add
pop
add
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
(bad)
(bad)
(bad)
dec
and
(bad)
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
push
and
and
add
loopne
dec
add
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
call
and
and
add
or
dec
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
inc
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
push
add
add
add
add
in
dec
add
(bad)
(bad)
call
and
add
add
(bad)
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
and
add
add
sti
and
and
add
dec
add
add
add
add
add
movs
add
add
add
(bad)
(bad)
jmp
and
add
add
adc
dec
add
add
add
and
add
add
and
dec
add
add
add
dec
add
add
add
dec
add
add
add
daa
inc
add
add
add
add
add
add
add
add
add
cmc
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
dec
add
(bad)
(bad)
jmp
and
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
push
and
(bad)
(bad)
(bad)
inc
and
(bad)
(bad)
(bad)
dec
dec
add
add
add
add
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
jmp
dec
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
add
add
enter
(bad)
(bad)
(bad)
inc
and
add
add
enter
and
add
xchg
add
add
add
add
add
add
add
add
add
shl
add
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
and
add
add
call
add
add
adc
add
(bad)
(bad)
(bad)
inc
and
add
add
add
inc
add
add
(bad)
(bad)
(bad)
jmp
and
add
add
add
and
add
add
add
jo
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
movs
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
fadd
add
and
add
cmp
dec
add
(bad)
(bad)
push
add
add
add
add
and
add
(bad)
(bad)
dec
and
add
(bad)
(bad)
call
and
add
(bad)
(bad)
push
and
add
add
add
and
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
and
add
sub
add
xor
add
ds
xchg
sbb
add
xchg
push
dec
add
add
add
add
add
add
add
pop
dec
add
add
add
inc
pop
dec
add
add
add
push
dec
add
add
add
cmc
dec
add
(bad)
(bad)
jmp
inc
add
add
add
icebp
dec
add
add
add
inc
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
into
and
add
(bad)
and
add
add
add
adc
add
loope
dec
add
add
add
and
add
add
add
adc
add
jmp
add
pop
es
add
add
add
and
(bad)
dec
es
add
(bad)
(bad)
call
es
add
(bad)
(bad)
push
es
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
add
add
push
add
add
(bad)
(bad)
jmp
add
add
add
add
xchg
or
add
add
(bad)
(bad)
inc
es
add
add
add
es
add
add
add
enter
(bad)
(bad)
(bad)
jmp
es
add
add
add
cld
or
add
add
(bad)
(bad)
call
daa
dec
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
push
or
add
add
(bad)
(bad)
push
dec
add
add
add
or
add
(bad)
(bad)
jmp
add
add
lods
or
add
add
add
add
cld
or
add
add
(bad)
(bad)
inc
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
dec
or
add
add
(bad)
(bad)
inc
sub
add
add
or
dec
add
add
add
sub
(bad)
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
jmp
sub
and
add
xchg
or
add
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
(bad)
(bad)
push
dec
add
(bad)
(bad)
call
add
add
int3
or
add
add
(bad)
(bad)
push
add
add
clc
or
add
add
(bad)
(bad)
call
sub
and
add
and
dec
add
(bad)
(bad)
push
sub
and
add
push
or
add
add
(bad)
(bad)
call
sub
and
add
jl
dec
add
(bad)
(bad)
push
sub
and
add
test
dec
add
(bad)
(bad)
call
dec
add
add
add
aam
dec
add
(bad)
(bad)
push
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
xor
dec
add
(bad)
(bad)
call
sub
add
add
shr
add
add
add
sub
add
add
jmp
add
add
pusha
or
add
(bad)
(bad)
inc
sub
and
add
movs
or
add
(bad)
(bad)
push
sub
add
add
and
dec
add
add
add
sub
add
add
dec
sub
and
add
ror
add
(bad)
(bad)
jmp
dec
add
add
add
adc
dec
add
(bad)
(bad)
inc
add
add
inc
or
add
(bad)
(bad)
(bad)
jmp
add
add
ins
or
add
(bad)
(bad)
(bad)
inc
sub
and
add
cwde
or
add
(bad)
(bad)
(bad)
push
sub
and
add
les
add
(bad)
(bad)
(bad)
call
sub
add
add
sbb
dec
add
add
add
lock
add
(bad)
(bad)
(bad)
push
sub
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
and
dec
add
add
add
mov
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
push
dec
add
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
(bad)
fsubr
dec
add
add
add
sub
add
add
call
(bad)
(bad)
push
sub
(bad)
(bad)
(bad)
(bad)
clc
sub
and
add
dec
cmovl
(bad)
(bad)
(bad)
call
sub
add
(bad)
(bad)
call
sub
add
add
add
sub
add
add
add
sub
add
(bad)
(bad)
push
sub
add
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
(bad)
(bad)
inc
sub
add
(bad)
(bad)
dec
sub
add
add
add
fmul
dec
add
(bad)
(bad)
jmp
sub
add
add
add
sub
add
add
add
sub
add
add
add
adc
dec
add
(bad)
(bad)
call
sub
add
sbb
add
and
xchg
sbb
add
add
add
add
add
lods
adc
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
and
dec
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
sub
(bad)
dec
sub
(bad)
call
sub
(bad)
push
sub
add
clc
sub
(bad)
(bad)
clc
sub
add
add
dec
add
add
add
pop
adc
add
add
add
add
rcl
add
(bad)
(bad)
jmp
cs
add
add
add
cs
add
add
add
cs
add
add
add
cs
add
add
add
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
add
add
cmp
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
call
cs
add
add
add
jo
dec
add
(bad)
(bad)
push
cs
add
add
add
pushf
adc
add
add
(bad)
(bad)
jmp
das
dec
add
add
add
enter
(bad)
(bad)
(bad)
call
dec
add
add
add
hlt
adc
add
add
(bad)
(bad)
inc
add
add
dec
add
add
add
dec
add
add
add
add
add
and
dec
add
(bad)
(bad)
push
add
add
adc
add
add
(bad)
(bad)
call
das
dec
add
add
add
nop
adc
add
add
(bad)
(bad)
inc
xor
add
add
lock
dec
add
add
add
das
dec
add
add
add
xor
and
add
mov
add
add
(bad)
(bad)
inc
dec
add
add
add
xor
add
add
cmp
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
push
dec
add
(bad)
(bad)
(bad)
js
dec
add
(bad)
(bad)
inc
add
add
inc
adc
add
add
add
movs
adc
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
xor
(bad)
(bad)
(bad)
push
xor
and
add
int3
adc
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
and
add
clc
adc
add
(bad)
(bad)
inc
dec
add
add
add
sub
dec
add
(bad)
(bad)
push
dec
add
add
add
pop
adc
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
test
add
(bad)
(bad)
(bad)
call
xor
(bad)
(bad)
(bad)
(bad)
fdiv
dec
add
(bad)
(bad)
jmp
xor
and
add
rcl
add
(bad)
(bad)
inc
xor
and
add
cld
adc
add
and
add
dec
push
dec
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
push
xor
add
add
cmp
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
add
add
add
dec
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
xor
add
add
enter
add
add
shl
dec
add
add
fdiv
dec
add
xor
add
xor
add
xor
add
add
lock
add
add
clc
xor
add
add
add
dec
add
add
or
dec
add
add
adc
dec
add
add
sbb
dec
add
add
and
dec
add
add
and
dec
add
add
sub
dec
add
add
xor
dec
add
(bad)
(bad)
(bad)
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
int3
pop
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
add
add
test
add
add
add
add
add
add
xor
or
add
jmp
add
add
xor
or
add
shl
add
add
add
xor
or
add
shl
dec
add
add
add
xor
add
add
stc
xor
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
test
dec
add
(bad)
(bad)
dec
cmp
add
add
xor
add
add
add
xor
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
xor
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
adc
dec
add
xor
add
sub
add
xor
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
ja
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
iret
xor
add
fidiv
add
in
dec
add
add
add
xor
add
sti
xor
add
push
ss
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
ss
add
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
ss
add
add
clc
ss
add
add
add
dec
add
add
push
aaa
dec
add
add
sbb
dec
add
add
and
dec
add
add
das
aaa
dec
add
add
cmp
dec
add
add
inc
aaa
dec
add
add
push
aaa
dec
add
add
pop
aaa
dec
add
add
data16
dec
add
add
jno
dec
add
add
jl
dec
add
add
xchg
dec
add
add
xchg
aaa
dec
add
add
popf
aaa
dec
add
add
test
dec
add
add
mov
dec
add
add
mov
add
add
aaa
dec
add
add
aam
dec
add
add
fdiv
dec
add
add
out
dec
add
add
out
aaa
dec
add
add
div
dec
add
add
push
dec
add
add
pop
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
popa
add
add
cmp
popa
add
add
cmp
arpl
add
inc
cmp
arpl
add
dec
cmp
add
add
dec
add
add
pop
cmp
add
add
dec
add
add
outs
cmp
imul
dec
add
add
jg
dec
add
add
xchg
dec
add
add
(bad)
cmp
ins
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jb
add
out
cmp
jb
add
idiv
dec
add
add
add
cmp
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
call
cmp
and
add
pusha
sbb
add
add
add
mov
add
add
(bad)
(bad)
push
cmp
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
pop
cmp
add
add
pusha
cmp
add
add
push
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
dec
add
cmp
or
cmp
or
cmp
or
add
jb
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cmp
or
add
retf
add
add
add
cmp
pop
add
add
cmp
sbb
add
loop
dec
add
add
add
cmp
or
add
repnz
or
add
cli
cmp
sbb
cmp
push
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
push
add
add
cmp
or
add
inc
cmp
or
add
dec
cmp
add
add
cmp
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
(bad)
dec
cmp
and
add
sub
dec
add
add
add
sbb
add
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
push
cmp
add
add
clc
cmp
add
add
add
dec
add
add
add
cmp
add
add
adc
dec
add
add
add
cmp
(bad)
(bad)
(bad)
jmp
cmp
and
add
in
push
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
je
dec
add
add
jl
dec
add
add
add
dec
pop
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
cmp
and
add
jo
dec
add
(bad)
(bad)
inc
cmp
add
add
add
movs
pop
dec
add
(bad)
(bad)
push
cmp
add
add
add
rcr
dec
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
cld
pop
dec
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
cmp
dec
add
(bad)
(bad)
inc
cmp
add
add
add
cmp
add
add
add
je
dec
add
(bad)
(bad)
(bad)
call
add
add
cmp
add
add
add
test
dec
add
(bad)
(bad)
call
cmp
xchg
sbb
add
add
and
add
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
pusha
cmp
add
push
add
add
dec
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sar
add
cmp
add
sar
add
fdivr
add
loopne
dec
add
add
loopne
dec
add
add
add
cmp
add
loopne
dec
add
add
add
cmp
add
clc
cmp
add
add
dec
add
add
add
ds
add
ds
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
cmp
dec
add
add
add
ds
add
add
add
dec
add
add
add
ds
add
add
add
dec
add
ds
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
ds
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
dec
add
add
add
dec
add
aas
dec
add
aas
dec
add
aas
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
add
(bad)
(bad)
call
aas
dec
add
add
add
aas
dec
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
lock
dec
add
add
clc
aas
dec
add
add
add
add
add
or
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
add
add
dec
add
add
jo
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
enter
and
add
rol
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
jmp
inc
dec
add
add
add
fsub
add
(bad)
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
(bad)
(bad)
call
add
add
adc
dec
add
(bad)
(bad)
push
add
add
inc
daa
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
ins
daa
dec
add
(bad)
(bad)
push
inc
dec
add
add
add
cwde
daa
dec
add
(bad)
(bad)
call
inc
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
les
dec
add
add
add
sbb
dec
add
add
add
add
(bad)
mov
mov
xchg
inc
shl
into
jl
jno
add
jae
imul
scas
shr
es
mov
jnp
sub
data16
dec
popf
or
iret
outs
pop
inc
dec
add
sti
xor
mov
(bad)
(bad)
mov
lahf
xchg
push
ins
sbb
and
in
pushf
push
sti
shl
jp
and
scas
lea
xor
lods
dec
aam
loopne
dec
jp
outs
fld
das
mov
and
ss
xchg
mov
or
xchg
call
inc
retf
std
push
cmp
jno
pop
jmp
and
mov
aad
xchg
addr16
mov
mov
add
xor
and
dec
mov
inc
lock
mov
xchg
not
dec
sub
cmp
jo
add
cmp
mov
sbb
test
rol
and
mov
cmp
ds
mov
movs
xor
adc
adc
lea
test
pop
movnti
dec
test
push
cdq
stc
jmp
xchg
xchg
pop
jno
mov
mov
daa
retf
mov
fcmovbe
or
mov
xor
sub
push
mov
xchg
and
idiv
pop
add
sbb
data16
or
jmp
pop
xor
or
(bad)
mov
xchg
xlat
lahf
jnp
mov
cmp
lods
pop
fs
pop
rcr
and
ins
dec
mov
or
or
push
inc
fs
das
add
stc
xor
add
mov
inc
cmc
dec
sbb
xor
loope
cdq
ror
(bad)
shl
and
inc
adc
add
dec
stos
add
sbb
push
mov
or
cmps
sahf
test
xchg
js
adc
sbb
and
into
pop
aas
mov
lea
jno
mov
push
inc
inc
shr
cs
mov
fwait
in
mov
test
fldl2t
iret
aad
stc
and
and
arpl
je
in
(bad)
ins
or
cli
nop
dec
xchg
adc
lods
xor
xchg
std
add
xor
dec
xchg
in
fbld
xchg
adc
shl
imul
cmp
(bad)
dec
add
imul
out
cmp
stos
or
add
repnz
rcr
pop
popa
pop
(bad)
add
bound
std
rcr
xor
cdq
cmp
inc
loop
inc
jnp
and
and
sub
xor
fild
stc
push
xchg
xchg
mov
fstp
cmp
jmp
cmps
dec
in
dec
in
je
(bad)
cli
adc
js
lahf
ss
popa
mov
add
icebp
xchg
(bad)
cmp
jb
(bad)
les
jb
loopne
pop
pop
mov
jb
dec
add
mov
or
hlt
or
movs
sti
mov
pop
rol
fcmovne
pop
(bad)
mov
sub
ret
push
pop
dec
sub
js
or
push
ret
push
(bad)
repnz
inc
sti
jbe
sti
aaa
sbb
popa
std
cld
cmps
jp
dec
ret
adc
fild
inc
stos
and
fst
cmp
cmp
scas
ins
sbb
push
add
xchg
xchg
ret
push
mov
enter
xor
nop
cmp
mov
jno
arpl
xor
dec
dec
out
or
(bad)
jns
cmps
jmp
out
add
jge
addr16
xor
pop
sbb
mov
ss
test
popf
inc
loope
call
push
and
pop
iret
sbb
push
ins
xor
xchg
mov
sbb
repnz
and
ins
bound
adc
mov
lock
xchg
xlat
adc
mov
fwait
sub
jecxz
out
jle
jnp
push
hlt
xchg
push
dec
xchg
sti
cdq
xchg
mov
mov
loope
adc
rcr
shr
retf
stos
sbb
fisubr
xor
mov
and
shl
push
adc
scas
pusha
(bad)
pop
xor
mov
sub
imul
pop
fisttp
mov
lods
lds
pop
and
xchg
int3
pop
mov
int3
dec
dec
mov
or
stc
push
jno
out
xchg
pop
inc
sar
movs
scas
mov
dec
test
pop
dec
xor
jns
xor
dec
mov
rol
sbb
jecxz
mov
mov
xchg
xor
ror
xor
xor
add
push
or
mov
cmp
int3
fdiv
add
iret
and
adc
jno
and
add
mov
mov
lea
inc
add
popa
cmps
pushf
jle
dec
rcl
movs
(bad)
out
xor
hlt
ins
cwde
fs
and
imul
gs
daa
mov
cwde
inc
push
dec
lds
xchg
out
mov
dec
mov
pop
enter
stos
add
not
shr
add
mov
and
(bad)
mov
and
mov
push
push
loopne
adc
xor
sub
push
call
iret
push
xchg
jmp
xchg
dec
fs
repnz
fisttp
clc
mov
sub
loope
cmp
or
dec
mov
inc
test
cmp
push
dec
sbb
inc
lahf
in
xlat
ficomp
mov
adc
in
mov
repz
pop
pop
sub
sbb
jae
xor
in
cmp
mov
add
gs
jmp
xlat
jb
stos
and
icebp
jmp
lea
pop
out
adc
adc
dec
retf
ret
jo
mov
stc
mov
jg
adc
inc
scas
mov
mov
aas
pop
int3
mov
cmps
rol
mov
push
mov
mov
je
pop
dec
mov
in
or
adc
inc
bound
cmp
pop
jg
pop
jnp
xor
mov
ins
xchg
add
rol
xlat
push
fwait
jge
or
sbb
arpl
push
inc
in
sbb
sbb
ret
pop
cmps
inc
out
or
jmp
cdq
push
push
dec
(bad)
ins
not
(bad)
dec
fwait
rcl
shl
jp
iret
sub
push
xor
add
in
stc
cmp
inc
movs
into
cwde
jae
stos
push
xor
push
rol
jb
mov
je
pop
xchg
les
sub
fiadd
mov
sbb
not
sbb
jae
adc
or
js
call
xor
retf
jmp
pop
jecxz
cmp
fsubr
push
pop
add
jbe
rol
sbb
xlat
(bad)
jg
sar
inc
aas
cmc
dec
adc
inc
inc
add
jmp
mov
xchg
pushf
retf
mov
rcl
sub
push
cmp
arpl
add
(bad)
aam
or
in
push
ret
imul
sub
pusha
mov
cli
(bad)
ror
push
jl
nop
mov
or
jno
adc
pop
xchg
push
sub
dec
call
outs
jno
sbb
pushf
mov
and
dec
jecxz
arpl
mov
(bad)
fwait
cmp
mov
or
daa
mov
or
pusha
add
push
sbb
dec
dec
dec
pop
gs
call
cdq
dec
cwde
xchg
sub
add
push
or
adc
ret
mov
imul
jnp
mov
jp
and
inc
aaa
sub
popa
adc
push
ror
fs
xor
cmp
jle
rol
pop
push
stos
mov
inc
test
or
test
dec
jp
xor
push
sbb
bound
or
stc
rcr
dec
outs
push
mov
or
mov
js
dec
(bad)
stc
test
stos
pushf
or
cmc
fmul
add
adc
cmps
repnz
sub
ret
dec
inc
retf
sub
push
rol
or
jo
cmps
ins
sar
jns
aaa
scas
push
pop
inc
ret
mov
jo
stos
push
hlt
daa
lock
push
retf
(bad)
jmp
(bad)
mov
lds
pop
pusha
lahf
adc
cmp
xor
mov
imul
push
cwde
shl
add
int
mov
inc
imul
rcr
fisub
sbb
in
xor
and
xor
jnp
mov
and
jecxz
xlat
fisttp
rol
sub
mov
jle
mov
xor
mov
imul
and
imul
pushf
add
movs
test
loopne
sbb
repz
sbb
add
push
adc
mov
repz
or
inc
daa
dec
data16
cmp
add
gs
jge
dec
repz
fidivr
cmp
xchg
nop
fld
retf
mov
ror
fistp
add
dec
sub
sti
and
or
jp
ret
fdiv
mov
cmc
pop
ficomp
pop
jno
sar
lods
fcomip
lods
mov
push
adc
xchg
sub
test
add
adc
fild
xor
jo
pop
mov
in
in
pop
mov
pop
dec
nop
in
mov
sbb
jnp
add
cmps
sub
mov
xchg
mov
xlat
mov
adc
adc
dec
adc
sub
inc
mov
popf
cmps
mov
mov
sub
in
sbb
xlat
cmps
icebp
daa
xor
mov
div
fdiv
lahf
push
cmp
pop
pop
and
lahf
xchg
ret
xchg
stc
fdivr
sti
adc
neg
sub
mov
imul
dec
fidivr
push
adc
xor
cmp
call
int3
arpl
sbb
inc
jns
push
jmp
ins
push
cmps
pop
adc
shr
out
cli
icebp
repnz
mov
outs
aaa
sub
adc
push
push
pushf
jp
mov
or
out
cmps
rcl
arpl
jb
mov
mov
adc
pushf
popf
fmulp
std
stc
sub
pop
out
mov
or
mov
push
pop
cmp
lock
int
lahf
das
out
shl
loop
cmps
movs
add
jge
inc
mov
cli
shl
mov
fwait
cmc
dec
mov
adc
mov
jge
inc
add
xchg
fisttp
pop
ret
xchg
or
inc
or
sub
pop
jne
inc
stos
lahf
cwde
outs
scas
rcr
mov
pop
mov
xchg
mov
jl
sahf
stc
std
push
outs
loop
sar
pusha
out
repz
push
repz
into
jmp
mov
es
mov
aas
shl
out
and
repz
adc
push
pop
dec
or
test
pop
and
jae
jmp
test
call
movs
das
xor
mov
lock
fwait
ja
int3
xor
or
ja
jle
pop
xor
movs
mov
cli
mov
retf
sbb
inc
stc
cmp
pop
jae
mov
jmp
inc
push
lods
clc
sbb
popf
mov
mov
mov
pop
arpl
inc
add
or
mov
movs
in
mov
mov
xchg
les
cmp
or
outs
jmp
in
push
mov
mov
gs
pop
repz
cmps
pop
nop
and
jmp
ror
push
sub
jno
mov
adc
jno
dec
add
push
fst
lods
in
(bad)
and
not
mov
dec
jmp
ins
lds
sub
pop
in
test
outs
dec
add
test
fstp
jno
aaa
outs
daa
and
pop
sub
cmp
mov
dec
shl
push
sbb
or
fist
adc
or
or
ror
adc
dec
xchg
jae
fisttp
mov
and
retf
and
cmc
mov
cdq
imul
jo
test
mov
outs
xchg
add
pop
(bad)
xchg
call
inc
pop
sbb
xor
pusha
dec
sub
sahf
(bad)
pop
pop
popa
push
imul
(bad)
mov
shl
xor
push
in
xchg
popf
rcl
push
xor
and
cmp
out
push
lock
gs
pop
mov
adc
xor
imul
xchg
sbb
ret
iret
mov
jnp
rcr
xchg
aas
and
push
in
dec
out
mov
sbb
out
jo
push
mov
ja
xor
xchg
jns
lods
push
sub
sbb
or
imul
mov
fcmovb
in
push
mov
adc
and
xchg
jl
xchg
sub
repnz
sbb
int
cdq
sahf
cmp
scas
mov
mov
in
(bad)
jns
sbb
stos
push
or
movs
inc
jbe
fs
cdq
arpl
aas
pop
shl
mov
xor
bound
scas
movs
dec
xor
mov
loope
mov
pop
(bad)
sub
xchg
adc
pop
push
jmp
sub
xor
mov
inc
fisttp
adc
push
push
mov
test
and
ins
lock
adc
inc
sbb
movs
loopne
mov
fldl2e
push
fwait
das
mov
sub
ins
loope
sub
retf
add
lock
movs
or
imul
loopne
xor
push
push
cli
mov
pop
cs
cmp
inc
cmp
adc
dec
repz
(bad)
test
pushf
and
stos
popf
cdq
sbb
popf
mov
fmul
mov
out
mov
mov
or
jnp
mov
iret
and
and
mov
mov
jge
inc
mov
adc
or
sti
push
sub
cli
retf
mov
js
aam
and
pop
imul
aad
adc
adc
stos
retf
jmp
and
fnstcw
jbe
and
or
jge
jp
xor
repnz
adc
mov
jge
js
pop
jae
sbb
add
dec
xor
and
xchg
icebp
sbb
sub
mov
add
mov
movs
push
xchg
xor
mov
fsubp
mov
and
add
(bad)
call
popf
cmp
mov
ins
dec
cld
jg
out
mov
add
ja
sbb
ficomp
push
sub
mov
and
sbb
inc
pop
mov
stos
clc
stos
xor
jno
fisttp
int
sti
lds
xchg
mov
sar
mov
fldenv
hlt
pop
shl
adc
sub
mov
retf
(bad)
out
mov
loope
push
stos
(bad)
es
(bad)
out
mov
cmp
push
sub
aam
das
pop
inc
mov
jnp
or
cmps
pop
adc
mov
inc
test
fnstsw
cmps
sbb
std
pushf
jno
adc
add
call
dec
cld
jbe
adc
sub
pop
dec
pop
loope
leave
mov
lea
loope
test
iret
in
outs
pop
xor
leave
jbe
scas
mov
rcr
jb
js
mov
jbe
push
xchg
ret
xchg
pop
pop
movs
mov
dec
dec
jno
inc
in
lods
fcomip
fidiv
imul
jp
xor
pop
and
jnp
dec
and
inc
jp
addr16
fcomp
add
(bad)
sti
add
mov
adc
dec
pop
mov
das
lods
mov
ret
or
lea
jne
push
cmp
sti
js
dec
arpl
mov
mov
sahf
xchg
mov
xor
and
xor
jne
dec
or
sar
inc
jb
in
jecxz
cli
mov
xchg
lea
call
mov
mov
pop
je
lock
xor
test
sbb
push
test
fidivr
inc
stos
call
cmp
inc
repz
fcomi
and
sub
gs
mov
push
loopne
push
xchg
mov
push
xchg
jge
test
push
xor
mov
(bad)
test
push
test
jmp
fidiv
ret
jns
ss
scas
xor
shl
inc
shl
loopne
lahf
inc
sbb
mov
hlt
call
sar
ds
adc
inc
sbb
daa
popa
jmp
add
outs
in
jb
test
sub
xchg
mov
bound
inc
inc
add
fldcw
sbb
xchg
cmp
mov
stc
clc
in
aaa
or
or
loope
dec
das
sub
and
push
std
dec
or
pop
mov
stos
xor
clc
xchg
sbb
mov
pop
pop
test
scas
mov
retf
adc
in
push
call
pop
dec
or
jns
rcr
add
adc
and
lds
pop
inc
retf
dec
mov
adc
outs
aas
pop
cmp
outs
(bad)
xor
addr16
call
repnz
push
jns
daa
and
add
or
loop
mov
cs
xor
dec
mov
cmp
mov
push
xor
fidivr
popf
out
mov
and
add
in
add
xchg
arpl
push
aam
int3
dec
inc
icebp
pop
pusha
adc
inc
mov
jg
adc
in
jp
push
fimul
adc
arpl
mov
out
adc
add
inc
adc
sub
mov
mov
push
out
(bad)
jmp
xor
jge
fwait
cdq
mov
mov
fsub
in
cs
jae
push
adc
repnz
addr16
jne
sub
enter
or
and
jnp
jmp
fistp
loopne
push
stc
in
lock
jns
jne
jne
push
fwait
les
mov
imul
fdiv
sbb
inc
scas
adc
test
push
loope
xchg
pop
mov
xchg
in
imul
leave
js
clc
(bad)
lods
lahf
fmul
cmc
xchg
retf
fwait
gs
pop
fmulp
xchg
push
inc
stos
popa
daa
pop
pop
and
xor
in
hlt
mov
clc
and
loop
cmp
adc
add
ret
fucomi
cdq
loope
out
sub
push
mov
jno
mov
mov
retf
cmp
pusha
sub
fdiv
repz
into
adc
in
lods
xchg
enter
retf
cmc
call
adc
je
adc
xchg
pop
test
repz
leave
das
mov
add
movs
fiadd
in
add
hlt
ds
xchg
jo
(bad)
popa
rcr
lock
test
mov
rcr
sar
(bad)
cmp
repz
retf
mov
adc
iret
lods
out
movs
push
lods
inc
call
mov
out
pop
rcl
cmp
adc
nop
sub
mov
sub
mov
call
out
loope
rol
dec
pop
mov
sub
adc
inc
cmp
mov
mov
inc
push
xchg
ret
adc
(bad)
sar
ins
clc
in
pushf
or
fidivr
aaa
rcr
cld
sti
pop
jg
xor
jnp
pop
push
xchg
ret
js
jmp
xor
jg
lahf
jp
cmp
jmp
push
div
imul
push
inc
jl
adc
repnz
cmc
cmp
test
aad
jecxz
stos
retf
scas
fsubr
ror
push
pop
mov
ror
xchg
xchg
and
dec
test
adc
mov
rcl
sub
add
push
addr16
jns
jns
xchg
add
adc
lock
pushf
xchg
in
sahf
jns
call
dec
mov
add
hlt
jbe
outs
pop
pop
inc
mov
mov
sub
pop
inc
xchg
add
lahf
pop
jmp
inc
lods
inc
dec
cmp
mov
sti
loop
int
call
mov
in
jno
jb
add
in
out
pop
ds
jne
aad
mov
movs
rcr
pop
and
fcomip
les
out
outs
lock
rol
or
in
xchg
add
cwde
and
mov
and
cmp
pop
retf
dec
sar
sti
clc
push
icebp
add
mov
sub
pop
add
sbb
jbe
add
daa
sar
int
mov
fstp
jmp
fcmovu
and
inc
mov
inc
push
or
push
sbb
jae
push
iret
push
pop
mov
xchg
out
mov
mov
xchg
sar
mov
push
and
mov
jae
shl
jmp
mov
sar
mov
dec
adc
mov
sub
out
adc
push
ss
jecxz
mov
xor
cld
mov
xchg
jo
les
out
xor
ror
(bad)
or
inc
(bad)
sub
add
repnz
jp
or
loop
lock
push
outs
test
pusha
push
mov
jae
or
out
les
inc
sbb
push
push
bound
nop
stos
jo
sub
jmp
cmp
add
pushf
pop
mov
and
mov
clc
movs
arpl
add
mov
xchg
inc
xor
inc
sub
arpl
fbld
sub
mov
lahf
cwde
shl
sub
xchg
xchg
in
das
push
rol
in
out
jecxz
inc
sti
and
enter
or
data16
xchg
fmul
test
adc
sub
shr
xor
jl
jnp
bound
xchg
mov
jne
mov
sub
pop
popa
xchg
xchg
or
pop
mov
fdivr
mov
outs
mov
dec
xchg
sar
mov
add
fild
pop
pop
aas
pop
lahf
mov
cld
xchg
int3
in
mov
cmps
xchg
rol
imul
inc
sbb
pop
das
sub
loopne
mov
cmp
adc
adc
jmp
pop
dec
pop
outs
jecxz
leave
test
sub
and
out
fdivr
arpl
jbe
clc
adc
push
sub
call
xchg
rcr
jle
cwde
inc
ja
mov
inc
pop
add
ss
(bad)
shr
inc
scas
adc
popf
push
je
ja
mov
adc
ins
sbb
sub
cwde
test
sub
push
xor
inc
lahf
jne
imul
mov
mov
cmp
mov
mov
and
jne
retf
pop
cmp
xchg
test
or
add
mov
ja
or
mov
aaa
arpl
ss
xchg
pushf
mul
popa
ins
mov
dec
fcmovbe
xchg
push
enter
test
imul
cdq
loopne
inc
pop
push
jae
imul
xchg
lock
jg
rcr
jne
mov
pop
pop
xchg
pop
test
fldenv
adc
or
sub
lds
stc
stos
cwde
jnp
ss
ror
aam
sub
xchg
fidivr
icebp
retf
or
add
xor
jno
xchg
xor
imul
jns
inc
mov
mov
scas
adc
jmp
jecxz
sbb
mov
push
sbb
and
pop
loop
hlt
cli
jle
sbb
not
sub
daa
jmp
mov
(bad)
fcom
push
xchg
pop
sub
jno
daa
(bad)
sub
addr16
push
add
or
clc
push
or
xchg
hlt
xchg
xor
xlat
lahf
dec
(bad)
sti
stc
in
adc
leave
imul
mov
and
sub
sub
inc
(bad)
outs
loop
popa
js
repnz
retf
inc
push
ins
mov
repnz
pop
cwde
pop
push
hlt
jns
mov
call
add
xchg
fstp
inc
push
inc
push
mov
div
sbb
add
das
call
xchg
jmp
pop
adc
cwde
xor
pop
sahf
push
cmp
ror
fcmovnb
fld
or
push
fidiv
aas
mov
lock
ret
and
mov
movs
or
dec
ds
add
hlt
jmp
cdq
ins
and
pop
cmc
push
lock
sub
jmp
lock
xchg
(bad)
shl
adc
jnp
jp
sbb
dec
adc
xchg
cmp
add
jle
ret
(bad)
outs
clc
sbb
mov
lock
xchg
in
xchg
sbb
sub
jmp
icebp
cmp
fs
pop
mov
mov
fisub
xor
jge
inc
aas
add
bound
xchg
cmp
cdq
stos
inc
xchg
mov
inc
xor
and
retf
xor
ja
push
das
test
ja
fs
(bad)
call
sub
or
mov
int3
cmp
jnp
jle
mov
push
cmc
add
adc
mov
arpl
jno
add
adc
test
xchg
adc
sub
stos
mov
int
push
pusha
out
sbb
(bad)
rcl
ds
ror
mov
bound
cwde
inc
mov
lea
mov
imul
cdq
mov
jp
lock
fisttp
inc
sbb
loope
jp
mov
jmp
popf
les
(bad)
aaa
or
jge
pop
fsincos
inc
or
jmp
or
cmp
xchg
mov
add
mov
stc
or
inc
dec
ret
pop
and
(bad)
enter
xchg
push
(bad)
punpckldq
or
push
inc
sub
outs
fsub
mov
js
imul
pop
pop
jmp
sar
in
je
std
movd
aad
pop
pop
xor
push
xchg
loope
sar
ss
stos
mov
pop
ds
repnz
and
push
dec
imul
out
xor
out
in
fstp
jge
call
cmp
inc
aam
xchg
fidivr
ror
nop
enter
xchg
fild
mov
inc
test
jle
imul
(bad)
sub
cmc
inc
ror
push
aaa
xor
or
jnp
stos
inc
call
mov
pop
inc
push
push
sub
inc
pop
sub
mov
hlt
mov
mov
add
nop
jo
xor
jmp
sub
(bad)
xor
mov
add
dec
aad
(bad)
xchg
int
jmp
cmp
sbb
mov
outs
adc
fbstp
sub
outs
rcl
icebp
retf
mov
test
and
push
loop
mov
lods
push
ficomp
push
or
sti
lods
lds
les
adc
test
nop
adc
and
jmp
sbb
sub
add
cdq
mov
out
cdq
adc
scas
xchg
stos
push
dec
pop
rcr
pop
xor
or
shr
jne
icebp
lock
inc
mov
shl
adc
ja
add
xchg
dec
and
push
push
cmc
jmp
jae
cdq
imul
dec
xchg
ficom
adc
jb
(bad)
neg
mov
cmp
inc
popf
mov
cmc
pusha
sub
jge
dec
mov
push
lock
jb
test
sub
(bad)
xchg
add
outs
scas
mov
and
sar
test
(bad)
aam
test
push
push
loope
arpl
mov
ds
fdivr
fdivr
call
mov
jns
jo
outs
mov
ror
popa
jb
mov
mov
sbb
sbb
pop
dec
out
rcl
jp
jo
repnz
icebp
jnp
icebp
(bad)
push
xor
inc
call
adc
retf
jmp
and
mov
aas
jb
popa
je
xor
or
sub
dec
and
fld
mov
(bad)
xrelease
sar
imul
jbe
pop
out
ret
push
jne
retf
sub
shl
stos
clc
into
or
enter
lea
push
jns
push
sub
retf
mov
inc
jo
call
xchg
jb
and
rcr
mov
retf
or
dec
xchg
sub
and
loope
push
mov
arpl
xor
cs
xor
dec
loopne
and
icebp
cmp
ja
jno
ins
pop
adc
mov
int
clc
mov
sbb
xchg
lahf
or
cmps
mov
mov
xor
pop
aaa
daa
call
adc
push
sbb
mov
sub
gs
add
jp
std
ss
push
cdq
add
xchg
dec
repnz
(bad)
stos
stc
jecxz
lgs
mov
cmps
adc
jmp
jge
sbb
loope
out
push
fwait
jle
dec
fwait
popa
cld
jge
in
in
mul
cmp
aad
add
push
or
dec
loope
imul
xchg
out
jo
jmp
dec
jae
es
(bad)
mov
aas
inc
std
enter
jp
out
inc
test
into
jns
iret
inc
push
xor
pop
movs
adc
int3
cmp
add
lods
jg
cmp
mov
js
cmp
rol
(bad)
and
aad
movs
jp
add
rcl
jmp
rol
pop
test
fist
dec
movs
jnp
mov
mov
mov
cwde
mov
pop
mov
sbb
inc
inc
add
loope
push
sar
sbb
scas
mov
adc
loopne
push
call
gs
and
lahf
movs
out
push
mov
xchg
jecxz
inc
xchg
mov
mov
or
add
adc
pop
mov
mov
lock
pop
push
or
inc
and
jp
jmp
fldcw
xchg
retf
inc
sub
lods
sub
sbb
cdq
repnz
push
dec
int3
aam
adc
xor
stos
fidivr
push
cmp
jae
fcomp
ret
fs
inc
sbb
dec
mov
call
lahf
(bad)
xchg
leave
sbb
(bad)
aaa
adc
push
jae
mov
jnp
sub
mov
js
cli
jecxz
inc
dec
imul
push
dec
sar
pop
pop
mov
add
imul
push
retf
test
cmp
mov
push
sbb
jo
bound
int3
(bad)
xor
pop
das
inc
dec
aad
xchg
ror
inc
or
pop
add
in
inc
sub
mov
fsub
jle
push
retf
cmp
gs
inc
mov
add
dec
add
or
jecxz
sub
add
add
stos
and
(bad)
loopne
popa
push
fmul
inc
cli
push
sub
and
test
push
sub
retf
and
lahf
in
push
or
jno
dec
fstp
dec
pop
jno
pop
mov
mov
mov
repnz
movs
cwde
mov
sti
add
push
cmp
pop
push
(bad)
pop
pop
repz
mov
pop
inc
lahf
int3
(bad)
retf
int3
sbb
enter
popa
popa
ror
jp
xchg
inc
xor
out
cmp
mov
mov
pop
xor
dec
adc
or
and
iret
pop
xlat
ins
sub
fwait
clc
shl
ss
cmp
sbb
push
lods
and
sbb
fild
push
adc
add
sub
idiv
push
add
pop
mov
mov
mov
inc
pop
push
dec
jge
dec
push
cld
mov
mov
psubusw
ret
sahf
lea
xchg
fwait
push
cmp
cmp
pop
cmp
shr
mov
jnp
out
cmps
pop
fsub
and
jecxz
out
push
pop
lock
repnz
pop
mov
into
mov
adc
loope
push
jmp
cmp
call
add
dec
xor
retf
cdq
jo
fwait
or
aam
retf
adc
dec
(bad)
or
fisttp
movs
add
dec
push
mov
mov
xchg
xor
shl
or
mov
aas
aas
fnsave
mov
xchg
push
movs
and
iret
pop
pop
xor
cmps
call
addr16
mov
or
sub
repz
icebp
push
jmp
cmp
and
mov
pusha
std
dec
xchg
ror
icebp
cmp
or
adc
pop
pop
in
cli
cmp
icebp
in
cld
xchg
imul
psubd
sbb
ret
test
pop
cli
pop
cld
cmps
mov
sti
sbb
jmp
jb
cmps
inc
sub
and
lock
mov
push
cwde
aaa
add
jmp
push
push
lock
repz
add
add
stos
lock
out
(bad)
push
adc
lock
(bad)
arpl
xor
pop
jmp
xchg
cmp
(bad)
and
jae
div
aas
adc
(bad)
rol
fsub
xchg
sbb
stos
shr
mov
imul
aad
mov
xchg
pop
sub
pusha
pop
jae
fldl2e
in
jmp
test
mov
test
cmp
jcxz
les
cmc
push
dec
sbb
inc
cmp
sti
gs
mov
sbb
mov
mov
lahf
xor
dec
dec
inc
jae
mov
sub
inc
fist
mov
retf
mov
mov
xchg
add
sbb
scas
xor
mov
pop
ds
fdiv
jmp
(bad)
stc
dec
adc
das
shr
je
sar
data16
loopne
sub
cwde
or
mov
mov
inc
push
movaps
sbb
push
xor
push
push
movs
pop
sub
inc
xchg
test
mov
not
out
pop
loope
pop
jo
mov
je
retf
cmp
(bad)
hlt
(bad)
rol
jns
mov
inc
ret
lahf
mov
inc
mov
clc
scas
mov
imul
sub
sbb
jne
(bad)
pusha
int
(bad)
rcl
mov
clc
pop
push
movs
xchg
cmp
outs
ins
xor
ret
pusha
fmul
pusha
repz
lea
push
mov
aad
fwait
mov
fdiv
mov
cmp
pop
adc
mov
mov
and
test
mov
mov
les
pop
push
sar
dec
cmps
ja
push
pop
enter
stos
loopne
push
in
adc
adc
and
sbb
sub
push
mov
mov
fnstcw
sbb
dec
mov
dec
sbb
ret
mov
call
loopne
mov
fisttp
das
cmps
sti
arpl
fs
mov
mov
mov
push
retf
bound
pop
fs
rcl
hlt
pop
cmp
je
and
fimul
cdq
imul
sub
dec
in
mov
adc
jmp
cmp
adc
jmp
add
test
outs
sub
mov
mov
push
lock
dec
pushf
mov
mov
fld
sub
adc
jb
dec
sub
aad
push
inc
adc
or
mov
mov
mov
shr
xlat
dec
inc
test
je
pop
adc
jmp
xchg
call
sub
imul
push
jne
and
(bad)
and
(bad)
gs
aam
int3
stos
ss
xchg
or
jo
test
mov
(bad)
jl
call
xchg
mov
xor
xor
and
xor
sbb
(bad)
jecxz
in
(bad)
outs
jg
sbb
xor
inc
rcr
and
mov
mov
mov
xor
mov
loop
xor
mov
mov
ds
cmp
add
aaa
repnz
lods
jecxz
inc
mov
and
lods
mov
in
mov
push
sub
push
adc
fidiv
scas
into
sbb
and
fild
or
inc
xor
and
and
rcr
lea
mov
sbb
inc
mov
push
lock
ror
data16
shr
dec
mov
add
xor
adc
rcr
ret
(bad)
jg
fcomi
mov
ficomp
pop
imul
loopne
and
rol
jp
repnz
inc
leave
pusha
test
ror
jmp
or
cwde
sub
xchg
call
fs
test
pop
sub
movs
dec
arpl
pop
ins
pminub
cmps
rcr
xchg
loop
jmp
fwait
cmp
xor
imul
jp
inc
cmp
mov
sahf
stos
call
shl
enter
cli
add
and
rol
push
mov
daa
sbb
mov
xchg
test
pop
xor
and
adc
pop
dec
fwait
push
sar
mov
mov
xor
xor
test
xchg
mov
mov
mov
ret
dec
sub
(bad)
aad
stos
add
cmp
dec
mov
retf
arpl
xor
in
dec
lahf
pusha
sub
in
push
sbb
pop
adc
mov
repnz
ja
fisttp
pop
aaa
adc
cmc
clc
sbb
adc
jo
lahf
mov
mov
je
xor
xchg
xor
cwde
in
add
outs
daa
mov
or
cmp
je
dec
and
mov
and
and
jp
or
rol
xor
jae
rcl
inc
enter
mov
lods
icebp
out
add
sbb
jno
(bad)
movs
int
(bad)
xchg
sbb
mov
(bad)
jl
push
idiv
pop
call
mov
fimul
or
cld
lods
aaa
aaa
pop
pop
loope
movs
sar
jnp
sbb
aam
sbb
add
popa
xchg
inc
jmp
dec
sbb
fist
pop
cld
mov
push
stc
stos
inc
outs
and
cdq
and
push
scas
adc
mov
loop
lods
loope
cli
push
iret
and
sbb
mov
jg
mov
mov
jle
jns
retf
sbb
jg
imul
push
mov
mov
mov
adc
sbb
mov
neg
inc
sar
or
ss
fcom
mov
cmp
and
jns
pop
jmp
pop
mov
pop
les
aaa
and
ds
jge
cmp
cmovne
or
aam
push
mov
movs
mov
xchg
push
lock
xchg
mov
xchg
jge
jp
mov
mov
in
shl
enter
jnp
add
retf
mov
mov
neg
mov
cmp
dec
dec
rcr
pop
loopne
push
imul
clc
sub
ins
mov
rcr
arpl
and
cmps
les
inc
mov
add
outs
mov
mov
jg
dec
jno
push
mov
inc
enter
pop
xchg
sbb
xchg
lahf
rcl
fxch
and
cmp
cmp
xlat
xor
inc
xor
rol
lods
arpl
pusha
mov
sub
fidivr
shl
sar
mov
test
or
pop
xor
test
cmps
mov
cmp
cmp
adc
sub
bound
test
aas
sub
cmc
fwait
(bad)
fiadd
in
aaa
ret
cmp
shl
and
hlt
icebp
movs
mov
repz
lds
jne
dec
push
retf
shl
dec
mov
sar
pop
int3
cli
cmp
inc
cld
repz
xchg
sub
xchg
pop
push
cmp
shr
push
inc
adc
outs
add
cld
xchg
jp
sar
adc
repz
stc
push
sub
jnp
inc
adc
jae
push
add
pop
sub
loope
cmp
sbb
fstp
ins
daa
xor
dec
mov
xchg
rcr
and
xor
ret
push
loop
retf
sbb
inc
nop
or
mov
and
adc
pop
xor
into
and
sahf
mov
fild
push
movs
(bad)
ins
pop
sbb
in
mov
push
call
inc
cmc
xor
fadd
push
in
push
je
push
push
test
mov
into
je
fcmovnb
add
add
aad
adc
aam
mov
movs
jp
fdivrp
jae
cmp
lods
fist
jmp
xor
cdq
lea
xchg
enter
sub
add
xor
push
add
adc
sbb
xor
mov
ins
sbb
loope
push
stos
pop
sbb
jnp
(bad)
xchg
cld
mov
movs
xchg
xchg
ficom
xchg
movs
adc
popa
cmp
clc
pop
nop
test
popa
cli
mov
fnstenv
cdq
fisub
outs
sbb
fst
jmp
add
fistp
sub
popf
dec
aam
data16
(bad)
imul
mov
mov
mov
out
(bad)
fnstsw
js
pop
nop
mov
mov
jmp
popa
mov
or
cli
inc
das
sub
add
pop
(bad)
sub
popa
cmp
jno
or
and
xor
jmp
rcr
scas
fcmovu
add
mov
push
jnp
add
(bad)
outs
lahf
shl
or
lods
sbb
call
adc
mov
push
or
pusha
cmp
mov
adc
fwait
loopne
loope
push
cmp
dec
jecxz
ret
adc
mov
stos
xchg
push
jno
popa
daa
or
sbb
inc
scas
mov
push
push
adc
stos
push
cli
std
dec
imul
fistp
popf
ret
cmp
outs
rol
jmp
mov
rcl
test
in
and
movs
mov
mov
iret
retf
adc
dec
test
lock
inc
xchg
dec
push
or
pop
sub
adc
push
sub
xlat
mov
jecxz
icebp
dec
or
cld
outs
dec
stc
test
retf
inc
push
push
(bad)
scas
stos
mov
stos
mov
fist
cs
mov
and
or
cmp
mov
jmp
xor
dec
sbb
popf
push
add
adc
je
pusha
jae
stc
(bad)
lahf
jp
dec
retf
fcomp
push
pop
jge
lahf
(bad)
push
push
push
jnp
push
(bad)
pop
cmp
and
mov
dec
mov
scas
sbb
dec
es
cli
mov
data16
mov
inc
push
lea
(bad)
lahf
repz
fistp
adc
mov
sbb
xor
mov
arpl
sub
xor
jo
xor
xchg
outs
movs
jmp
pop
in
rol
push
xor
adc
mov
mov
rcl
frstor
mov
scas
or
dec
lock
and
scas
push
push
push
push
inc
test
sub
sbb
push
fist
xchg
adc
pop
push
dec
or
xor
(bad)
jle
sub
jecxz
(bad)
ficomp
mov
in
mov
add
mov
adc
xchg
mov
pop
mov
xchg
les
sbb
sahf
cwde
jl
xor
leavew
pop
mov
sbb
jae
lock
push
sub
in
into
xor
or
pop
dec
stos
(bad)
jp
dec
dec
push
add
inc
jb
retf
and
rcl
shl
movs
adc
stos
inc
addr16
test
push
xor
retf
dec
scas
loope
idiv
and
adc
cmc
ror
imul
aad
mov
sub
push
mov
je
lahf
mov
test
push
inc
xor
xor
retf
fnstcw
push
or
jge
aam
add
jp
adc
push
pop
mov
add
xor
call
scas
ins
adc
push
mov
ins
and
dec
outs
push
arpl
jle
mov
push
neg
pop
idiv
imul
xchg
dec
in
std
add
cmps
les
fidiv
das
stos
push
mov
and
das
mov
dec
fld
or
movs
int
sbb
xchg
ds
xchg
jno
dec
add
mov
xor
jo
dec
outs
push
xchg
fwait
jne
xchg
setb
sbb
ret
xor
xor
(bad)
xchg
jbe
push
dec
mov
pop
mov
mov
push
lock
mov
bound
aas
cwde
sahf
xor
imul
cdq
jmp
ins
(bad)
movs
fs
push
outs
mov
sub
xchg
mov
inc
in
adc
dec
hlt
sub
imul
pop
or
js
stos
jne
mov
xchg
cli
hlt
pop
sti
fstp
fs
mov
push
je
jno
(bad)
mov
cmp
cmc
ror
cli
imul
loopne
xchg
cmp
mov
stc
pop
push
jnp
jbe
mov
nop
loop
neg
rep
iret
dec
lods
push
or
or
jmp
and
add
jmp
test
hlt
mov
inc
push
out
and
sbb
and
(bad)
mov
pop
in
xchg
cmp
fiadd
sti
repnz
sbb
jmp
add
mov
or
jg
mov
cmps
dec
adc
fwait
(bad)
loope
sbb
xor
xchg
sbb
jg
dec
sub
dec
jnp
retf
mov
int
iret
movs
or
and
bound
movs
les
push
add
mov
lahf
push
mov
push
dec
mov
mov
pushf
mov
(bad)
inc
test
xor
shr
dec
push
clc
scas
je
jg
retf
std
jp
repz
clc
sub
xor
scas
cmp
int
ror
lock
out
add
loope
mov
(bad)
inc
jb
pop
adc
es
xchg
and
popf
adc
cmp
out
jmp
inc
xchg
adc
dec
popa
jp
outs
popa
sahf
cmp
cmps
mov
fwait
in
sbb
popa
fld
or
adc
ja
das
sbb
stos
sub
outs
dec
mov
adc
pop
(bad)
test
stc
ja
add
xor
sub
xor
inc
pop
test
in
(bad)
out
jmp
clc
inc
ret
jnp
pop
add
pop
adc
leave
ror
inc
and
mov
jb
enter
xor
movs
push
xor
call
mov
popa
int
jne
xor
jb
pop
xchg
push
loopne
test
cmps
sub
xchg
and
fs
jmp
dec
mov
call
sub
data16
jmp
les
leave
mov
dec
cli
(bad)
jmp
cli
cmp
push
inc
bound
pop
fild
cmp
adc
movlps
lock
mov
stc
js
shr
scas
cwde
mov
jp
or
adc
data16
mov
push
cld
jo
mov
ds
cmp
aaa
mov
fist
lock
sbb
pusha
and
je
outs
adc
adc
sbb
xchg
inc
(bad)
add
repnz
inc
or
rol
fcom
lahf
ss
push
nop
aam
mov
cwde
cvtps2pd
mov
jns
xchg
lea
push
in
dec
cmps
ror
(bad)
sti
xchg
test
rcr
fwait
outs
or
(bad)
cwde
mov
fstp
outs
lock
neg
rcl
push
sti
lahf
in
jle
sbb
imul
shl
addr16
ret
push
retf
gs
sub
(bad)
popa
(bad)
xor
repnz
stc
shl
fld
push
sub
jne
mov
jne
pop
mov
icebp
xor
iret
mov
dec
pop
mov
ja
popa
cmp
pop
and
push
inc
push
fimul
jne
fistp
xchg
outs
add
test
ret
push
jg
cmps
xor
push
push
call
mov
loope
out
mov
imul
mov
ins
fcmovnu
cmp
or
sbb
gs
popf
(bad)
mov
mov
push
fcmovbe
enter
pop
cmp
jno
inc
xchg
xchg
push
jp
mov
mov
mov
les
movs
test
adc
scas
stc
adc
and
cs
pop
sbb
outs
cmp
call
or
add
stos
or
xchg
add
das
jb
inc
retf
adc
aad
mov
dec
jmp
cdq
jnp
and
mov
xchg
gs
rol
sub
adc
push
pop
pop
dec
jmp
cmp
cmp
cmp
cmp
xchg
mov
out
mov
and
in
addr16
popa
ret
cmp
js
mov
jb
lods
pop
cld
retf
jmp
xor
sub
jb
clc
aam
mov
ror
ret
and
cmc
and
loopne
mov
arpl
test
sub
sahf
int3
xor
leave
cdq
pop
adc
fcom
sti
mov
and
aad
jbe
mul
gs
adc
ds
(bad)
out
rcr
sub
pop
adc
adc
and
fstp
sub
ror
sub
inc
xor
xchg
loope
out
lahf
add
xor
add
xchg
lock
mov
fisub
sahf
adc
jp
scas
sub
add
xor
cmp
sub
mov
outs
imul
cmp
stc
sub
cmp
stos
push
aas
jae
aaa
call
inc
repz
push
add
stc
dec
jmp
pop
adc
xchg
sub
jnp
dec
add
aas
adc
dec
add
xchg
xor
add
and
data16
loopne
dec
ins
inc
fdivr
xlat
in
fimul
rcl
add
pop
jne
in
and
xchg
jg
or
mov
lea
mov
cli
mov
cmp
inc
es
popa
add
imul
jmp
cld
call
xchg
std
xchg
sub
pop
push
or
in
add
or
sub
dec
inc
mov
loope
(bad)
fidiv
sbb
add
mov
jae
in
stos
popf
sbb
scas
adc
sar
aaa
and
out
out
mov
sub
mov
jmp
push
xor
fst
rcr
into
dec
cmp
stos
ret
push
add
addr16
pop
push
mov
push
xor
loope
add
lods
popa
mov
ins
ins
adc
pop
in
sbb
pop
sub
mov
in
mov
xchg
or
mov
enter
loop
test
es
ja
add
les
out
xchg
jae
popa
ja
push
ss
dec
in
(bad)
repnz
sti
and
sbb
leave
push
leave
adc
stos
ins
push
sbb
cmps
xor
ds
cmps
movs
repz
dec
cmp
inc
sbb
std
call
sub
adc
popa
js
push
dec
shl
enter
xor
or
sahf
test
fnsave
fxch
inc
inc
and
call
mov
retf
lods
pushf
neg
and
loop
mov
mov
popa
sub
cmp
(bad)
popa
mov
xchg
les
adc
sub
push
push
mul
ficom
mov
mov
mov
xchg
inc
(bad)
and
mov
iret
cmp
add
jp
mov
jp
cmp
test
cmps
jns
adc
shl
pop
loop
in
(bad)
sub
arpl
jno
adc
adc
dec
push
add
cmp
mov
fst
pushf
xor
mov
push
ror
fild
int3
sub
push
repz
out
(bad)
movs
fdivr
fstp
scas
test
icebp
sub
dec
push
repnz
cli
out
inc
jp
imul
jbe
jmp
inc
mov
sbb
adc
sub
push
jbe
jl
mov
xchg
xor
enter
call
cmc
fld
and
add
outs
mov
sar
std
jmp
xor
adc
push
clc
cmps
bswap
pop
jmp
mov
enter
aam
dec
cmp
or
jge
add
out
jno
and
pop
aad
or
(bad)
rcr
add
adc
mov
jle
dec
in
mov
pop
sti
into
cdq
cmc
loopne
in
add
push
mov
adc
sub
pop
fndisi(8087
jnp
push
adc
nop
mov
jecxz
xchg
retf
mov
pusha
es
lds
push
jb
adc
repz
or
or
cmc
shr
icebp
pushf
jg
kmovw
push
jae
loope
icebp
cmp
cdq
loop
fisttp
lea
mov
ja
inc
lods
lock
push
and
ds
mov
pushf
arpl
stc
mov
mov
xchg
dec
jle
es
iret
out
add
push
cmp
jg
xadd
push
(bad)
enter
adc
pop
lods
test
test
adc
gs
mov
call
adc
pop
pop
dec
out
(bad)
in
shr
imul
xchg
sbb
test
inc
xchg
daa
xchg
sub
xor
mov
ret
pop
sub
and
ss
mov
ret
dec
xchg
dec
in
xor
jl
mov
dec
stc
leave
add
je
inc
and
loop
mov
xchg
mov
lock
aaa
sub
call
pusha
mov
aad
pusha
jmp
jge
jp
clc
mov
(bad)
cs
or
cmp
shl
pop
dec
dec
lock
loope
mov
inc
ret
xchg
clc
pusha
mov
inc
cld
push
mov
cmps
repz
stc
push
add
stc
mov
mov
aaa
xchg
test
das
sbb
push
mov
push
push
and
xchg
mov
inc
mov
inc
cwde
movs
lds
xchg
shl
icebp
das
repz
mov
inc
adc
in
fisub
mov
shl
jp
adc
cmp
push
clc
xor
sbb
pusha
fist
mov
aam
mov
sbb
adc
je
push
adc
mov
mov
push
es
test
adc
mov
ss
and
retf
cmp
fist
(bad)
jmp
add
cwde
int
lods
mov
dec
mov
dec
adc
push
mov
retf
hlt
test
jmp
adc
loopne
out
xchg
cmp
aam
int3
jle
rcr
cmp
(bad)
sbb
ja
dec
outs
fisub
sub
jmp
hlt
stos
lea
xor
mov
psrlw
pusha
jecxz
ficomp
popf
dec
and
pop
arpl
push
mov
push
adc
pop
aas
xor
das
ins
fsubr
lods
mov
jne
test
(bad)
mov
call
aad
xlat
mov
lds
fbstp
jg
stc
xchg
inc
addr16
sbb
xchg
leave
call
mov
stc
jae
push
push
(bad)
mov
xchg
dec
cmp
call
mov
mov
shr
xor
xchg
add
adc
push
sub
pop
sbb
lds
lds
cmp
xchg
(bad)
bound
nop
lds
or
dec
sbb
mov
xchg
js
adc
movs
fidivr
and
call
rol
adc
out
jb
repnz
or
jbe
and
sbb
xor
sub
cmp
adc
lods
push
fisub
cmp
popf
add
mov
adc
daa
loop
xchg
pop
ror
xlat
dec
and
jp
pushf
shr
enter
adc
push
ret
mov
xor
and
adc
rcl
sbb
cld
stos
mov
pop
loop
xchg
fadd
inc
(bad)
fcom
mov
cmp
mov
fxch
leave
loop
jmp
imul
mov
push
scas
cmc
pop
lahf
dec
inc
mov
mov
mov
xlat
clc
adc
mov
adc
js
xor
popf
lock
xor
add
adc
or
cmp
and
add
(bad)
ins
jmp
xor
xchg
cwde
pop
rcl
mov
pushf
aaa
xlat
es
sub
rol
leave
enter
test
std
cmp
jle
ja
stc
sbb
int3
std
mov
mov
test
mov
call
stos
adc
(bad)
bound
outs
stos
push
test
lahf
push
push
mov
sbb
cmp
adc
xor
cmp
sub
add
test
das
jnp
fidiv
pop
mov
and
repz
mov
fsubr
xchg
test
adc
fidiv
sub
pop
daa
mov
pop
scas
dec
mov
dec
sar
(bad)
jne
xchg
repnz
not
out
js
xor
gs
push
mov
push
call
sbb
mov
rcl
adc
int3
pop
cmps
lahf
in
xchg
jle
cmp
dec
xlat
mov
and
adc
push
(bad)
mov
sub
sbb
ins
inc
inc
sti
mov
or
stos
nop
sub
std
aaa
mov
push
lods
test
mov
adc
and
and
(bad)
not
lock
repnz
inc
ja
push
push
pop
int3
push
mov
jp
ins
mov
cmps
stc
(bad)
leave
(bad)
aad
mov
enter
bound
lea
cld
arpl
cwde
mov
aas
cmp
into
leave
xor
ja
mov
aaa
add
arpl
jne
bound
(bad)
mov
aam
(bad)
adc
fs
jbe
and
dec
fs
inc
imul
call
mov
mov
mov
xor
adc
or
aam
add
mov
fs
jo
xchg
or
pop
jno
pop
mov
ja
adc
mov
sub
adc
dec
retf
rcr
fwait
pop
and
(bad)
mov
cmp
inc
mov
mov
popf
mov
inc
or
js
inc
pusha
xchg
sub
iret
or
sub
mov
add
jg
ret
sub
xchg
xchg
xchg
or
dec
sub
push
sbb
imul
js
mov
or
jp
mov
hlt
loopne
in
and
inc
out
repnz
div
dec
movs
imul
fnstcw
sub
pop
xor
and
adc
aad
pop
scas
inc
sar
jb
pop
cld
out
add
jno
in
xlat
pop
mov
mov
ss
mov
or
mov
push
pop
adc
test
or
js
mov
daa
jmp
(bad)
std
jns
out
je
setbe
inc
adc
(bad)
fnstenv
stc
push
pminub
pop
mov
pop
data16
das
lahf
xchg
outs
pop
jecxz
inc
sar
push
or
outs
mov
call
push
sub
inc
out
in
ret
push
scas
sub
add
icebp
stos
inc
push
in
sbb
xchg
(bad)
aam
or
mov
aaa
rol
mov
loope
inc
hlt
jo
mov
cmc
out
loopne
sub
in
mov
push
loope
lods
push
test
xchg
fdiv
inc
cmc
fstp
cmp
cmc
icebp
and
xor
lock
sub
cdq
icebp
cld
mov
popf
in
dec
sbb
(bad)
aam
mov
dec
movs
mov
shl
adc
mov
jne
jns
fnstcw
cli
jge
dec
pop
fdiv
push
stos
jo
cmp
mov
call
mov
jbe
inc
xchg
push
add
je
dec
enter
cmp
inc
cwde
test
mov
cmps
loopne
test
inc
leave
leave
shl
call
mov
cmps
je
mov
sbb
and
sub
bound
lahf
dec
cli
pop
les
scas
pop
lods
rcl
mov
cmp
cwde
xchg
repz
les
ja
shr
xor
cmp
mov
lds
outs
imul
test
xchg
sti
push
popa
dec
ss
int
dec
cmps
std
jno
aas
inc
xchg
sub
enter
jle
jb
xchg
jmp
test
lock
cdq
cmp
loope
jecxz
and
repz
mov
std
dec
dec
add
lock
(bad)
into
dec
mov
out
arpl
sbb
stos
sti
mov
inc
sub
push
loop
xor
iret
xchg
add
ss
mov
mov
cmps
cld
xor
cmp
mov
popf
jne
ds
out
jl
std
aas
sub
fwait
sbb
or
cmp
lods
nop
nop
add
mov
xchg
ror
xor
jns
dec
pop
fwait
mov
push
xor
jo
xor
psubw
add
shl
repnz
sbb
scas
test
cs
fisub
mov
js
(bad)
jl
cmp
rol
xor
out
dec
sub
shl
xor
mov
(bad)
mov
loope
xchg
push
xor
fwait
sbb
push
lds
cmp
push
jp
inc
dec
dec
xchg
mov
imul
jno
cmp
dec
fisubr
push
add
popa
jne
inc
sbb
popa
xchg
and
loope
mov
or
push
cmp
ss
xchg
(bad)
xor
adc
fsub
enter
iret
test
mov
out
cmp
inc
jge
or
jmp
adc
mov
sbb
push
cli
sub
aad
inc
aam
cmp
into
lahf
or
mov
lahf
inc
aam
stc
jo
mov
ds
adc
retf
(bad)
jno
popf
jae
int3
sub
cwde
mov
call
test
ret
sub
daa
fs
dec
pop
inc
sbb
daa
sub
jae
arpl
sub
sbb
mov
ror
psubq
xor
out
cmp
std
ss
inc
push
test
add
mov
mov
mov
fs
mov
test
test
pusha
jmp
sub
lods
push
fs
sbb
cdq
jmp
retf
jg
daa
cld
shl
int
jne
je
sahf
je
retf
mov
cmp
es
add
mov
pop
arpl
scas
sub
or
mov
jge
outs
mov
sub
mov
or
add
loopne
in
and
adc
dec
loope
pop
xchg
sbb
fnsave
pop
push
(bad)
cmps
xor
jp
cmp
xchg
mov
push
pop
push
or
add
jns
je
int3
std
sbb
and
mov
cs
push
cmp
jp
rol
loope
inc
add
or
adc
cmc
test
sbb
jo
arpl
in
cmp
sub
xchg
adc
push
ror
inc
sbb
(bad)
dec
xchg
jl
xchg
xor
xor
xchg
sti
push
and
(bad)
sbb
int3
aam
pop
push
enter
pop
and
sahf
jl
es
mov
sub
sbb
fdivr
or
jnp
push
add
pop
nop
adc
(bad)
lock
std
arpl
mov
jnp
cli
mov
push
lds
ins
lahf
mov
add
loop
xchg
push
jo
icebp
push
xlat
rcl
jno
ja
jno
fisubr
jmp
push
call
xor
stos
or
jno
loopne
sbb
dec
arpl
leave
cmps
(bad)
in
dec
mov
enter
(bad)
jge
dec
jbe
sub
mov
out
popa
stos
mov
mov
imul
sbb
jns
test
repz
rol
es
cli
mov
push
(bad)
and
sub
(bad)
call
xchg
leave
iret
mov
les
pop
stos
sub
(bad)
retf
popa
cli
add
jno
icebp
add
cmp
int
push
loope
pop
xchg
add
push
pushf
jge
inc
stc
ja
adc
and
xor
jmp
xlat
sar
sbb
mov
push
and
mov
or
cli
popf
iret
cmps
mov
imul
out
xchg
pop
sar
enter
mov
test
enter
jno
xchg
sahf
int
sub
mov
dec
push
repz
push
fwait
mov
sub
cld
mov
test
call
cli
jno
and
stos
sar
push
push
mov
shl
dec
sub
ins
ja
ins
hlt
inc
in
xchg
pop
xchg
loopne
(bad)
fcmovbe
jne
fisub
jge
xchg
mov
mov
dec
adc
fild
sub
pop
imul
push
cmp
ins
mov
push
mov
loop
fisttp
cmp
cmps
sub
cmp
xchg
addr16
adc
inc
mov
jmp
in
cli
loope
pop
mov
pusha
dec
cmc
xchg
iret
sbb
sub
popa
clc
inc
or
xchg
test
mov
icebp
int3
daa
adc
dec
cmc
mov
retf
pop
(bad)
mov
in
test
or
cdq
cmp
dec
pop
cmp
loope
or
in
rcr
mov
xchg
mov
mov
jb
push
fisub
or
push
enter
imul
and
pop
mov
ja
int3
js
jbe
retf
or
movs
lock
js
and
shl
mov
retf
stos
push
enter
retf
pop
jp
xchg
jmp
mov
cmps
cmps
std
xchg
or
xor
jge
jg
cmps
das
call
out
jp
lea
cwde
mov
mov
dec
pop
mov
test
movs
imul
or
cmc
in
push
ret
adc
xor
cmps
mov
aaa
dec
jmp
pop
ins
sub
jo
adc
outs
stos
cli
in
inc
test
lods
pushf
jmp
sbb
cmp
or
jbe
pop
adc
rcr
mov
leavew
sbb
dec
ins
imul
xchg
or
dec
jo
mov
or
test
mov
jno
stos
pop
mov
inc
pop
adc
fisub
scas
mov
xor
loope
retf
mov
lods
and
int3
lea
push
sub
dec
cs
adc
xor
fbstp
data16
mov
shl
cmps
pop
je
pop
cwde
and
xor
xchg
out
pop
in
dec
nop
call
or
retf
test
popa
jmp
fist
int
in
stos
or
cli
in
push
sbb
or
mov
in
sub
inc
xor
push
shl
daa
stos
inc
mov
mov
je
or
int
je
and
cmps
push
ftst
mov
mov
fbld
loop
vunpckhps
(bad)
jns
adc
jnp
aas
pop
lods
add
out
jecxz
int3
cdq
jb
adc
cli
pop
sub
jae
sub
sub
and
mov
add
mov
jl
lods
jmp
dec
sub
imul
push
div
ret
sahf
shl
xor
cmp
popa
pop
daa
mov
sbb
retf
test
pop
mov
push
fyl2xp1
cmps
clc
shl
sbb
or
jmp
ins
jp
mov
jno
ins
xor
repnz
xor
icebp
jmp
fs
aas
fisttp
dec
add
jle
pusha
call
in
pop
in
xchg
pop
or
adc
push
xor
or
sbb
xchg
cwde
lahf
test
pop
fld
jecxz
fistp
repz
push
sub
pop
sub
jo
sbb
xor
dec
mov
in
out
test
dec
mov
mov
and
arpl
(bad)
aad
sahf
int3
out
jp
rcr
mov
shr
push
inc
das
pop
fs
jo
daa
xor
out
stos
mov
push
cmp
inc
mov
pop
sub
sub
shr
stc
inc
sub
push
adc
mov
or
mov
cmp
out
pop
xchg
xlat
sbb
mov
ss
xchg
or
pop
mov
add
(bad)
mov
push
dec
retf
test
nop
xchg
or
shr
adc
enter
sar
lods
or
inc
icebp
shr
icebp
lock
cmps
imul
in
push
icebp
mov
dec
inc
cwde
int
and
sar
push
dec
pushf
jmp
pop
mov
das
out
mov
add
arpl
push
cmp
das
mov
hlt
mov
ret
jge
adc
rol
data16
dec
adc
daa
sub
loop
fild
sub
jns
inc
xlat
push
lea
test
popa
jp
sbb
outs
lods
mov
sub
jb
cli
mov
adc
push
clc
pop
imul
xchg
arpl
or
add
mov
int
and
sbb
cs
jmp
sar
outs
cmc
nop
imul
jb
inc
rcl
sub
mov
sti
cmps
inc
jp
mov
mov
aas
pop
xchg
in
sub
xor
push
xchg
and
mov
jmp
inc
xor
imul
mov
xchg
sub
fsubr
mov
fidiv
dec
mov
movs
sbb
sub
(bad)
shr
mov
xchg
dec
xchg
imul
jne
sti
fistp
jge
and
out
das
pop
pop
scas
cdq
xchg
shl
ror
or
jns
sbb
cdq
ss
test
aaa
jae
mov
fwait
push
jl
or
cmp
popa
sahf
sub
sub
arpl
rcl
or
inc
xor
mov
cmp
jno
sbb
(bad)
stos
iret
mov
inc
mov
add
dec
frstor
pop
or
scas
cmps
xchg
shr
outs
cmps
mov
ins
imul
xor
mov
rcl
jecxz
and
aas
in
xchg
dec
out
lea
or
add
cmp
push
mov
stos
mov
add
mov
mov
outs
add
cs
sub
ds
mov
mov
mov
sahf
and
mov
repnz
inc
jl
mov
sti
inc
out
jmp
nop
mov
cdq
lock
inc
jmp
sbb
test
jp
pusha
popa
dec
stc
xor
cmp
inc
push
call
lock
sub
dec
sbb
pop
cmp
jmp
sar
cmps
push
js
and
test
int
ds
cmp
pop
(bad)
scas
inc
(bad)
mov
loope
pushf
or
sti
add
inc
int
sub
popa
pop
sbb
jmp
push
stos
(bad)
aad
cmp
xchg
xlat
aaa
sub
pop
lahf
sub
sbb
xor
hlt
pop
add
or
ins
pop
push
mov
fs
lods
mov
cmp
jns
inc
pushf
push
fsubr
jns
rcr
test
nop
out
(bad)
aaa
mov
inc
icebp
rep
or
add
mov
push
xor
jae
and
outs
sbb
in
sub
iret
mov
in
push
pop
sti
jno
jno
(bad)
js
dec
push
call
bnd
push
mov
jno
cmp
sub
retf
and
xor
sbb
mov
adc
imul
mov
popa
push
jnp
push
ret
inc
in
add
addr16
das
sbb
into
stc
cmp
jmp
out
add
push
les
(bad)
jl
jle
adc
test
mov
jnp
inc
mov
dec
popa
cld
xor
daa
or
ret
adc
jb
sub
nop
mov
mov
(bad)
out
push
mov
frstor
sbb
cmp
mov
retf
mov
or
rcr
add
nop
mov
mov
mov
je
mov
ror
pop
aad
arpl
retf
icebp
inc
dec
mov
mov
cmp
inc
push
pop
rol
js
bound
dec
les
dec
ror
mov
dec
into
shr
mov
(bad)
clc
test
js
mov
push
mov
dec
stos
leave
jp
call
jno
movs
push
sbb
xor
(bad)
adc
mov
dec
jmp
cmp
or
and
push
push
imul
sar
test
inc
or
std
cmp
adc
popa
cmp
pop
popa
shl
sar
dec
shr
push
mov
ficom
test
jle
mov
xor
cmp
fst
inc
xchg
(bad)
mov
hlt
and
mov
inc
ds
mov
add
sub
retf
sbb
xchg
or
mov
out
fstp
ret
pop
ret
add
mov
push
repnz
jnp
addr16
pop
jae
push
in
out
adc
pop
sub
test
lock
cwde
std
inc
xor
sbb
cwde
sbb
xchg
or
sbb
mov
xlat
retf
sub
push
pop
or
push
xor
xor
and
dec
in
jo
data16
dec
mov
or
mov
shl
or
out
cli
xor
cmp
fld
jns
aaa
ret
xor
ins
icebp
xchg
icebp
aaa
sar
inc
mov
jnp
and
inc
xchg
push
popf
cdq
mov
sti
scas
and
jecxz
push
nop
add
xor
sub
ins
lods
mov
xlat
enter
mov
pop
or
mov
mov
icebp
push
popa
out
(bad)
cli
jge
mov
retf
add
xchg
fldenv
inc
or
cmp
mov
or
sbb
push
adc
lea
(bad)
cmps
ficomp
repnz
jbe
clc
imul
mov
xchg
popa
mov
in
stc
sahf
jae
mov
test
(bad)
mov
cli
mov
xlat
lea
add
mov
outs
icebp
xrelease
jg
adc
jbe
pop
push
jp
fwait
sbb
sbb
and
xor
std
aas
pusha
(bad)
call
cmp
es
sbb
mov
scas
adc
mov
xchg
imul
idiv
add
enter
mov
jmp
test
enter
jp
mov
add
mov
jmp
xor
lds
mov
push
cs
loop
adc
or
mov
xchg
ret
jp
add
jmp
mov
fcmove
jp
pop
sahf
xor
jge
popf
scas
jmp
cld
xor
loopne
call
(bad)
and
jo
inc
shr
push
popa
push
add
(bad)
call
dec
in
adc
and
mov
rcl
adc
sub
(bad)
das
push
mov
add
xchg
ret
les
fdivr
mov
adc
mov
scas
inc
mov
(bad)
outs
xchg
xchg
sub
inc
fs
fdivr
mov
loopne
movs
sub
mov
inc
jno
je
xor
jmp
adc
lods
nop
cmp
xor
mov
enter
nop
mov
and
cmp
adc
(bad)
in
in
cs
mov
pusha
leave
popa
push
or
ja
fmul
mov
add
jns
iret
imul
pop
aas
leave
cmp
call
xchg
fisub
sub
test
and
mov
js
pop
sub
xor
lock
ins
mov
and
rol
sbb
sub
inc
xor
xor
jmp
cmp
loopne
je
cmps
out
in
sti
push
lods
jo
std
lods
rcl
pop
or
mov
pop
and
je
or
or
sbb
mov
jp
cwde
mov
ds
pusha
or
in
ror
adc
(bad)
nop
sbb
leave
sub
mov
push
add
xor
les
test
aas
lea
or
out
fiadd
mov
gs
xor
movs
frstor
mov
rcl
add
aad
mov
jae
xchg
rcl
es
mov
loopne
addr16
cmp
push
xchg
cli
or
test
cmps
adc
and
arpl
adc
jbe
data16
cmp
mov
call
jmp
jno
and
push
sbb
int3
(bad)
cwde
ss
repnz
iret
adc
les
xor
(bad)
fsubr
inc
jp
sbb
xchg
push
retf
into
test
adc
ins
hlt
jo
or
popa
loopne
int
sub
mov
push
adc
sti
cmp
mov
push
dec
adc
mov
add
rcr
shl
iret
pop
jge
mov
sti
mov
or
repz
retf
push
xchg
adc
dec
pop
mov
movs
das
add
jne
mov
(bad)
dec
mov
lds
call
sar
ja
or
mov
or
jle
pop
inc
mov
stc
inc
pushf
lahf
jmp
or
sub
mov
mov
out
outs
(bad)
std
pop
xor
sahf
test
leave
mov
(bad)
jmp
dec
cmps
push
sar
xor
pop
cli
nop
cwde
or
adc
(bad)
jecxz
push
mov
fst
or
or
mov
mov
mov
mov
dec
xlat
outs
pop
loope
nop
inc
icebp
shl
test
rol
and
inc
sbb
mov
sbb
cdq
leave
jmp
nop
jmp
ror
mov
add
fld
push
jmp
pop
(bad)
and
fst
fiadd
call
aad
iret
xchg
sbb
push
push
pop
xchg
push
xchg
cdq
cdq
shl
inc
and
push
xor
adc
gs
jb
push
jmp
xor
mov
or
test
dec
sub
loope
jnp
idiv
fisttp
pop
mov
imul
xor
cmps
or
bound
fist
dec
les
add
popa
inc
sbb
push
xchg
retf
dec
xchg
inc
cmp
ret
jmp
jno
pop
mov
fldcw
inc
dec
jge
jecxz
cwde
jne
sub
pop
outs
daa
mov
mov
clc
mov
stos
jns
push
mov
mov
out
or
imul
sar
xchg
sub
clc
mov
and
sbb
scas
pop
or
mov
(bad)
rol
cli
mov
xor
movs
in
sbb
ret
xor
aam
enter
push
dec
stos
mov
call
fisttp
push
(bad)
mov
popa
call
or
cmp
push
retf
dec
xchg
sbb
pop
and
jb
hlt
(bad)
mov
loopne
test
xchg
popf
(bad)
jb
xchg
sar
icebp
cmc
cli
push
push
scas
stos
stos
jne
into
icebp
or
add
stc
enter
ds
into
and
repnz
push
inc
or
xor
mov
nop
dec
mov
inc
adc
repz
xchg
pushf
pop
ret
loop
jno
mov
jae
fwait
mov
stos
test
nop
cwde
mov
mov
scas
idiv
xor
push
shl
int
pop
lds
mov
inc
add
xchg
stos
or
mov
push
xchg
xchg
add
call
mov
or
jmp
dec
add
cmps
bound
stos
pop
cmp
mov
cli
addr16
inc
sub
mov
test
jb
mov
clc
mov
jecxz
xchg
xchg
mov
stc
sti
loopne
stos
cdq
and
and
movs
out
sub
or
mov
inc
jo
scas
xlat
int
fst
jmp
gs
add
xor
xor
push
push
push
mov
call
push
sub
cmp
stos
jp
cmps
je
not
mov
mov
jmp
hlt
push
xor
icebp
pop
fiadd
inc
(bad)
jbe
clc
jmp
fcomp
ficomp
mov
adc
fwait
lock
mov
and
add
imul
movs
fld
repnz
dec
push
jnp
jb
enter
(bad)
cmp
jmp
outs
enter
add
ficomp
jl
add
mov
test
ins
pop
daa
stos
sub
adc
js
mov
stos
push
outs
adc
xrelease
daa
push
imul
gs
retf
(bad)
mov
sub
stc
into
repnz
movs
lahf
aas
push
mov
dec
sbb
stos
pop
push
and
ja
ret
hlt
test
mov
add
(bad)
stc
lds
je
cmp
sar
mov
xor
popa
inc
jp
pop
mov
mov
xor
push
push
jne
jle
fsubr
nop
(bad)
sbb
in
and
nop
xor
jbe
push
mov
push
loope
outs
rcr
inc
rcl
out
inc
call
mov
nop
jmp
or
ins
daa
icebp
fmul
and
sti
loope
add
mov
add
jb
xor
and
aam
cs
xor
push
outs
xlat
stos
(bad)
jbe
out
cmps
add
fidivr
xlat
sub
jmp
test
cld
sar
clc
mov
dec
aam
and
int
adc
add
sahf
cwde
mov
loope
iret
push
fdivr
mov
xchg
idiv
cvtps2pd
aam
fnsave
mov
loope
inc
mov
movs
sbb
mov
pop
mov
push
xchg
popa
sbb
mov
mov
push
or
jno
mov
and
xchg
sbb
pusha
icebp
push
adc
and
cmc
fild
fidiv
jp
and
xchg
out
(bad)
jg
xchg
inc
sti
lahf
dec
dec
jb
scas
in
xchg
mov
dec
push
adc
test
adc
adc
sbb
inc
daa
cmp
pusha
scas
pop
inc
loopne
dec
xor
fidiv
fadd
pop
lock
jecxz
cdq
jns
adc
(bad)
push
ror
dec
je
xor
dec
cwde
pop
push
push
lea
xchg
int
shl
xchg
sbb
mov
call
jg
sub
push
jp
xor
mov
sbb
data16
xchg
mov
cmp
inc
test
sbb
idiv
leave
jge
dec
cdq
lock
mov
test
adc
dec
push
inc
or
shr
push
push
repz
xchg
aas
xor
or
inc
add
aaa
mov
hlt
pop
inc
push
adc
jmp
jp
and
sub
movs
cmc
add
rcl
adc
pusha
adc
(bad)
outs
fld
and
imul
cmp
xlat
sbb
add
push
leave
adc
jg
popa
push
xor
xor
leave
js
dec
idiv
test
in
sbb
jnp
sti
popf
sbb
adc
rol
mov
dec
sbb
fsubrp
jle
xchg
out
retf
xlat
and
loopne
pop
mov
jnp
ror
mov
lock
in
inc
xor
jo
mov
xor
loopne
xor
xor
or
inc
leave
mov
mov
test
sbb
inc
std
inc
fcompp
fwait
imul
sbb
retf
inc
dec
or
push
jne
xor
or
inc
cmp
addr16
dec
mov
or
in
sahf
out
and
cmp
call
push
jmp
or
sar
and
sbb
mov
mov
inc
jbe
inc
leave
sbb
shr
sbb
xchg
mov
ins
and
lock
pop
sub
inc
cmp
jnp
test
push
dec
xor
and
jne
repz
xchg
jne
(bad)
dec
(bad)
mov
push
sub
xor
fbstp
cdq
outs
push
mov
and
shl
int3
sub
sbb
mov
mov
(bad)
mov
sar
js
or
jb
jne
cs
outs
(bad)
jg
leave
and
cmp
ja
xor
int
dec
in
jmp
cmps
jb
sbb
cmp
push
sub
call
loope
aad
sub
mov
xor
mov
aaa
pusha
and
aaa
je
mov
pusha
cmp
mov
ins
push
inc
jmp
fiadd
and
loop
scas
push
out
out
das
test
mov
add
cs
mov
jae
cmps
inc
jbe
aam
stos
loopne
and
(bad)
retf
out
repnz
mov
xor
inc
lock
mov
call
xchg
leave
loope
in
add
and
sub
arpl
fwait
xchg
js
iret
and
frstor
sub
dec
sar
ds
fnstsw
movs
fistp
dec
xor
frstor
jnp
(bad)
sbb
sbb
mov
mov
jno
cmp
add
movs
sub
shl
fist
ret
pop
nop
mov
push
pusha
lds
fld
push
jle
scas
cmp
not
jns
mov
loopne
jp
pusha
cdq
push
jmp
test
repz
cwde
add
and
push
imul
jecxz
aam
add
popa
fcomi
fist
sbb
adc
dec
scas
bound
(bad)
pop
fadd
push
fadd
outs
sahf
movs
ret
adc
inc
fisubr
pop
pop
mov
fadd
repnz
cmp
(bad)
fwait
sbb
push
outs
jne
and
sbb
dec
mov
shl
jp
mov
mov
call
mov
sbb
jne
sahf
dec
inc
fs
ret
inc
imul
dec
div
imul
sbb
les
mov
push
scas
jmp
mov
and
test
sub
pop
mov
jmp
lds
push
(bad)
and
jnp
inc
adc
aas
ret
repnz
jl
rcl
into
jg
push
out
and
icebp
retf
(bad)
fidiv
bound
or
enter
and
mov
xor
cli
(bad)
aad
sbb
sbb
push
push
mov
cmp
push
and
mov
adc
push
and
push
leave
sub
hlt
or
out
jp
push
das
mov
lock
mov
jecxz
pop
test
xchg
pusha
outs
or
or
out
mov
repnz
in
adc
or
and
sub
js
cmp
test
push
jl
sub
je
xchg
neg
jno
mov
mov
(bad)
cmp
add
add
rcr
aas
fs
call
and
sbb
shl
pop
call
sbb
and
(bad)
lock
sub
add
test
cmp
push
or
ins
push
pop
push
ja
ss
(bad)
js
mov
rcr
ror
ret
rol
cli
push
pop
xor
jp
mov
ror
cwde
popf
repnz
mov
shr
pop
popf
mov
add
mov
out
in
push
xor
icebp
inc
(bad)
push
adc
shl
mov
dec
cmps
sbb
ins
loope
leave
jo
mov
stos
into
aad
jbe
sub
sbb
jge
test
loope
mov
lock
fdivr
add
daa
xor
(bad)
cmp
not
inc
sbb
lds
dec
mov
ds
xchg
ficomp
dec
mov
imul
push
sbb
adc
mov
int
pop
shl
xchg
loope
fld
sub
movs
cmp
pushf
jno
sbb
push
xchg
xlat
cmc
mov
rep
fstp
or
cmp
sub
add
imul
dec
add
rcr
fwait
es
outs
pop
jb
adc
imul
jle
adc
dec
mov
lock
jb
push
clc
sub
cmp
adc
sar
cmp
mov
or
mov
ror
in
or
push
or
stos
add
jp
out
push
ret
call
adc
pop
or
xlat
fnstcw
in
sbb
pop
add
cmps
stos
jno
fist
jmp
retf
mov
jns
dec
pusha
das
sbb
inc
xor
call
fstp
cmp
xchg
sub
or
dec
mov
cdq
(bad)
cmp
xchg
les
rcr
movs
xor
mov
mov
mov
pop
test
or
fwait
movs
sar
(bad)
aam
nop
pop
pushf
sbb
popa
add
jno
inc
ja
pop
(bad)
dec
push
icebp
leave
cli
ficomp
das
cmps
mov
cmc
out
cmp
jmp
out
lock
inc
mov
cmp
iret
call
pop
jmp
aam
cmp
test
adc
retf
shl
pusha
lock
adc
fwait
cmps
sar
pushf
lea
cmp
and
or
stc
mov
leave
stos
es
mov
xchg
mov
inc
jbe
xlat
push
add
dec
add
(bad)
cmp
push
(bad)
jmp
std
xor
jmp
into
or
fdiv
cmp
pop
add
mov
inc
xchg
pop
push
dec
inc
rcr
rol
test
mov
pop
add
fcmovnb
fcmovu
retf
push
icebp
aaa
int3
mov
shl
in
push
adc
(bad)
push
xchg
call
xchg
pop
cli
fnsave
or
dec
mov
cs
jmp
in
pop
pop
je
retf
mov
loopne
call
mov
(bad)
data16
in
fsubp
cwde
mov
dec
sbb
lods
fidivr
call
push
adc
shl
pop
push
adc
lods
adc
scas
sbb
push
sbb
mov
aam
repnz
(bad)
ror
pop
add
sub
xor
scas
fist
or
mov
mov
xor
add
out
sbb
jl
sub
push
or
push
fnop
sub
mov
sbb
dec
call
popf
lea
test
test
pop
jle
retf
or
cmc
cmp
nop
ins
xchg
push
mov
ds
and
fcmove
jno
rcr
dec
mov
imul
add
call
mov
and
sub
shl
rcr
cmp
rcr
pop
cmc
jge
loope
add
or
daa
hlt
stos
fisttp
ins
mov
lock
mov
gs
and
xor
cli
adc
xchg
xchg
cwde
leave
popf
mov
bound
xchg
dec
pop
clc
cmp
arpl
fsub
lea
test
fdiv
(bad)
sbb
or
sar
retf
loopne
push
xchg
jmp
sub
outs
das
aas
lds
mov
dec
and
jl
add
clc
loope
mov
jo
mov
push
in
das
scas
cli
mov
test
loop
pop
mov
or
ins
or
xchg
mov
mov
les
adc
jp
out
mul
aaa
push
add
enter
pusha
mov
xor
sbb
ror
adc
iret
cmps
adc
cli
xlat
dec
retf
and
inc
aad
call
push
shr
jae
and
fdiv
into
retf
pop
pop
add
and
mov
adc
xchg
les
cwde
test
in
shr
sub
js
out
cmp
lock
and
popa
mov
(bad)
cmp
(bad)
jecxz
inc
cmps
pop
int
repz
cmp
mov
mov
fcmovnb
test
lods
mov
xor
mov
xchg
popf
ror
and
shl
push
mov
and
mov
add
adc
jl
jmp
pop
adc
mov
fwait
and
add
out
out
cmp
ficom
dec
and
mov
cmp
mov
cmp
scas
xor
mov
rcr
arpl
pop
mov
popf
adc
sub
or
mov
mov
in
call
cmps
lock
xor
retf
pusha
sbb
aaa
xor
xor
loopne
fwait
cld
xchg
jne
xchg
out
clc
mov
inc
mov
repnz
pop
xor
sbb
xor
ds
mov
inc
push
ret
jbe
add
pop
imul
inc
fs
mov
bswap
sub
xchg
bound
push
pop
ror
mov
and
add
imul
push
dec
pop
mov
sub
movs
outs
jmp
mov
xchg
fld
cmp
xor
xchg
or
call
jp
mov
in
sbb
inc
push
sub
xor
xchg
sbb
cmp
mov
aad
mov
push
jne
dec
push
les
dec
pop
stc
add
pop
xchg
lahf
mov
pop
sbb
cmp
fidivr
xor
arpl
idiv
ins
(bad)
sub
mov
ins
fidivr
jle
adc
stc
and
mov
aaa
xchg
push
fidivr
ds
cmp
sbb
cld
test
sub
test
cld
shr
push
push
fisubr
lods
jns
cmp
xor
dec
cmps
adc
jno
inc
xchg
fild
sbb
jmp
jp
push
std
mov
jbe
cmp
xor
pushf
icebp
jmp
(bad)
pop
push
sbb
add
mov
mov
mov
retf
lahf
enter
pop
cmp
popa
xor
inc
icebp
mov
out
mov
push
or
(bad)
in
xchg
xchg
jp
outs
lock
mov
mov
test
popa
xchg
or
dec
inc
imul
mov
aam
shl
and
sub
enter
push
repz
and
and
cmps
mov
mov
jmp
xlat
mov
mov
idiv
add
movs
(bad)
out
and
sbb
xor
sbb
in
jp
or
pushf
sti
sbb
fsub
rcl
(bad)
sub
pop
iret
loop
rcl
sub
and
test
push
xor
and
scas
and
pop
xchg
cmp
jmp
and
es
retf
inc
push
cmp
push
sbb
pop
pop
sub
cld
loope
repnz
xchg
popf
out
bound
stos
fidiv
fisubr
cmp
out
mov
mov
mov
mov
loop
mov
out
cmps
adc
or
(bad)
les
adc
repz
cld
movs
test
cmp
inc
push
stos
stos
jecxz
call
sbb
pop
dec
sbb
or
sub
or
push
xor
sbb
cli
mov
das
mov
stc
mov
out
fs
pop
sub
leave
jne
nop
dec
test
pushf
cmps
scas
cli
adc
or
adc
dec
aaa
cdq
and
inc
adc
pop
das
imul
push
mov
mov
repz
push
sti
inc
ins
jno
retf
lods
jle
push
das
clc
jno
fst
inc
loope
cmp
sbb
xchg
xchg
movs
sti
loope
and
movs
xchg
in
mov
adc
xor
adc
jo
fisttp
je
sub
mov
enter
fcom
test
iret
imul
push
mov
cli
inc
repnz
in
fldcw
into
dec
js
pop
loopne
jl
mov
ret
iret
sbb
loopne
xchg
and
sub
inc
pop
data16
xchg
fcmovnb
adc
jno
in
push
mov
fdiv
cmp
outs
imul
arpl
inc
or
test
pop
jns
pop
call
add
ins
dec
call
push
mov
in
pop
add
icebp
fisubr
cmps
popa
pushf
cmp
loop
nop
(bad)
xor
(bad)
out
and
ret
dec
fisttp
pop
adc
jl
mov
iret
ss
add
repz
cli
popf
pop
jg
loope
sti
inc
std
int
push
int
jnp
jo
xlat
call
in
stos
loope
push
ror
loope
and
addr16
pusha
out
pop
(bad)
rol
mov
(bad)
xchg
mov
dec
cmp
in
pop
mov
fstp
mov
call
mov
test
scas
retf
je
push
add
fimul
jae
stc
and
jmp
sub
jle
xlat
movs
add
mov
fdiv
jns
jmp
jl
fwait
jo
lock
outs
(bad)
fild
call
loope
ins
(bad)
push
nop
xlat
popa
sub
and
and
cmp
inc
rol
sti
xchg
mov
mov
out
push
pusha
cmp
fcmovnbe
pop
arpl
and
cld
mov
xchg
icebp
and
sub
js
stc
scas
add
mov
push
pop
mov
jns
xchg
adc
mov
frstor
mov
xor
jmp
push
test
fdivr
and
sahf
xlat
mov
stos
shr
je
mov
xor
cmp
cmp
sbb
rcr
jmp
leave
jo
mov
and
inc
in
ins
and
xor
push
aas
rcl
rcr
retf
cmp
xchg
rcr
push
das
cld
jg
(bad)
jge
pop
sbb
mov
inc
call
pop
pop
xor
mov
call
adc
imul
push
rcl
jae
push
ds
xchg
out
add
adc
sbb
(bad)
xchg
pop
sar
stc
mov
xchg
lods
icebp
outs
(bad)
mov
and
or
xchg
xor
adc
xchg
ror
rol
xchg
and
pop
retf
pop
push
cmps
mov
pop
xsaveopt
sti
(bad)
in
leave
jae
lods
cli
mov
xor
push
mov
sbb
pop
xchg
jge
xchg
not
inc
mov
cli
jmp
out
adc
sub
test
add
mov
idiv
lock
fild
push
mov
pmullw
out
dec
mov
mov
xlat
outs
lods
inc
jl
inc
mov
push
mov
cmp
ficomp
test
mov
leave
sbb
dec
jl
mov
pop
mov
pop
jmp
sub
cdq
fstp
mov
or
inc
cmp
nop
mov
inc
retf
cmp
loopne
aad
iret
shl
cmc
dec
cmc
sbb
or
sbb
frstor
xor
call
popa
fild
jecxz
jle
pop
arpl
sub
dec
std
sbb
dec
mov
sar
xor
pop
sbb
add
jns
xchg
outs
lods
jmp
ret
mov
jmp
mov
inc
pop
add
jl
daa
sbb
add
push
test
xchg
hlt
inc
jg
jmp
(bad)
loop
sbb
pop
push
movs
shl
jno
push
jo
int3
ror
aaa
cmp
pop
ja
scas
imul
mov
sbb
push
int3
ret
mov
or
sbb
fwait
ror
jns
push
(bad)
jno
xor
mov
daa
call
jne
aas
and
in
pop
icebp
or
xchg
push
(bad)
xor
aaa
(bad)
ja
fsqrt
movs
jb
pop
dec
popf
pop
jmp
xchg
push
mov
xor
push
push
xor
push
mov
inc
or
je
out
sub
push
and
inc
(bad)
arpl
cmps
pop
out
cmc
sub
mov
jmp
and
pop
retf
int
jge
out
and
in
ret
sbb
ins
stos
xor
stc
jle
leave
mov
inc
and
mov
js
ret
jae
jb
and
dec
cld
js
popa
fsub
xlat
lods
scas
adc
das
and
sbb
xor
dec
in
jmp
inc
pop
add
imul
add
adc
pushf
not
test
or
retf
jno
test
sub
push
dec
pop
mov
xor
jb
stos
stc
outs
dec
or
push
cmps
sbb
and
(bad)
jle
xor
mov
stos
dec
(bad)
stc
movs
sub
mov
sbb
or
sbb
xchg
pop
xchg
push
arpl
pop
dec
inc
int3
lods
mov
cmp
int3
jmp
push
dec
stc
and
jle
fild
sti
xor
fucom
call
adc
bound
or
adc
push
jl
xchg
sub
cmps
lea
retf
push
and
cmc
push
or
dec
test
jecxz
repnz
icebp
loopne
inc
inc
mov
jne
loope
fsubr
movs
stc
cmp
aaa
jp
call
add
enter
fbld
or
mov
jbe
je
cmp
fs
xor
inc
mov
adc
mov
and
jg
ret
mov
dec
cmp
xchg
add
call
aad
fwait
push
shl
das
fistp
jb
xchg
cli
adc
test
and
jmp
int
imul
jp
cmc
outs
jb
jbe
xchg
clc
or
xor
cli
repz
pop
push
add
stc
icebp
pusha
js
fcos
stc
call
xor
mov
mov
cs
jmp
jg
mov
sbb
retf
retf
movs
sar
mov
and
mov
or
jle
pusha
lock
ror
dec
lahf
adc
sbb
adc
cwde
and
sbb
jecxz
mov
cmps
mov
mov
jl
js
or
cmp
fdivr
inc
xor
cmc
mov
dec
jb
pop
pop
or
dec
jae
jne
lea
jecxz
mov
loopne
push
dec
adc
cmp
fdivr
jle
repnz
lahf
jo
fmul
sub
push
enter
not
push
fsub
call
and
stos
shr
push
cld
dec
ja
mov
or
xor
inc
aas
leave
inc
icebp
ds
test
test
movs
or
mov
jns
jno
sar
or
cmp
mov
bnd
in
pop
movs
cdq
loop
cmp
outs
inc
add
push
or
stc
in
xor
clc
(bad)
rol
adc
pop
sub
push
jle
cmp
outs
mov
push
ret
mov
jno
mov
push
xor
js
mov
gs
fwait
xor
and
xor
xor
fs
jne
cs
jb
es
lahf
dec
dec
sub
arpl
mov
retf
in
dec
retf
fidivr
jmp
dec
cmp
jmp
call
or
sub
pop
cmp
rcr
jecxz
ins
xchg
lds
ds
jno
test
and
xchg
mov
rol
stos
adc
sahf
sbb
ret
jae
ds
mov
or
fnstcw
loopne
loope
xchg
sahf
popf
loop
les
pushf
add
push
cmp
and
xor
mov
ss
mov
pushf
mov
mov
add
or
nop
and
cmc
out
and
cmp
ficomp
lds
sbb
jno
inc
cmp
test
add
jno
mov
mov
inc
jmp
aad
into
movs
adc
xor
cmp
cmp
adc
test
sbb
scas
test
(bad)
fsub
mov
mov
daa
dec
sub
outs
out
test
push
adc
xchg
in
adc
pusha
jmp
push
and
push
xor
test
pop
add
sub
mov
add
sbb
movs
push
cmp
mov
dec
inc
scas
fsubr
out
add
popf
(bad)
mov
pop
adc
dec
sbb
mov
(bad)
xlat
(bad)
mov
pop
call
scas
and
jnp
cli
rcl
mov
mov
sbb
push
out
lea
fnsetpm(287
pop
lock
mov
pusha
imul
xor
or
mov
jnp
loopne
or
jecxz
xlat
xchg
into
add
ret
mov
push
pop
jle
ins
jae
ror
xor
lods
adc
sti
stc
fld
movs
mov
add
cld
ds
in
addr16
neg
imul
es
mov
and
adc
push
sub
fsubr
jne
dec
xchg
imul
movs
cmp
imul
lods
loop
push
jnp
cmp
pop
iret
xor
adc
ror
(bad)
sub
push
jbe
push
dec
dec
cmp
iret
xor
adc
mov
mov
xchg
pop
and
sti
and
mov
rol
xchg
inc
mov
and
xchg
cld
cmps
nop
daa
jmp
lock
add
shr
jmp
iret
aam
dec
sti
mov
aam
lahf
inc
rol
adc
jmp
std
dec
xor
cmc
pusha
dec
cli
xor
mov
inc
into
lahf
lods
test
in
xor
jb
dec
xchg
aam
mov
imul
sbb
fld
fidivr
(bad)
(bad)
lock
mov
pop
das
ja
mov
loopne
xchg
cdq
into
loope
inc
pop
jge
mov
enter
push
adc
cmps
add
outs
and
daa
sub
retw
sbb
shl
movs
cmp
fisttp
call
dec
inc
xor
cld
ret
pop
mov
ret
test
mov
je
stos
ror
jmp
inc
push
ror
push
add
into
or
retf
jb
(bad)
jle
sbb
or
cmp
sar
xchg
mov
cmps
ffree
ror
div
dec
icebp
jg
loope
out
mov
adc
dec
jb
and
leave
js
mov
mov
in
xchg
add
test
and
loop
or
fldenv
(bad)
jno
cmp
cmp
jo
mov
cmp
imul
mov
or
jmp
(bad)
retf
dec
mov
imul
xchg
pop
inc
lds
test
or
rcr
bound
popf
xchg
jns
mov
cmp
xor
dec
cmc
aas
test
leave
fwait
or
icebp
(bad)
inc
aaa
fiadd
dec
inc
(bad)
push
mov
inc
mov
cmp
aas
fs
cmp
shl
repz
std
mov
and
inc
cmps
lahf
sub
repnz
es
icebp
pop
cmp
cmp
mov
pop
icebp
cmp
das
and
xchg
push
cmp
adc
cdq
adc
pop
pextrw
gs
mov
jb
or
sahf
push
pop
nop
fcomp
loop
push
nop
adc
push
pop
pop
dec
mul
inc
mov
and
sbb
fist
(bad)
xor
inc
inc
mov
mov
xor
pop
jnp
inc
mov
out
pop
inc
add
in
(bad)
pop
mov
sbb
ffreep
jnp
(bad)
lea
mov
adc
inc
sbb
popf
jnp
push
ret
das
xchg
das
add
xor
cmp
clc
(bad)
pop
neg
inc
shl
mov
add
mov
lock
mul
xchg
add
and
push
jp
outs
stos
daa
movs
daa
dec
sbb
retf
cmp
mov
add
vcomisd
push
mov
mov
std
push
call
xor
xchg
or
jmp
scas
or
jmp
mov
das
push
xor
adc
dec
add
jl
xchg
jl
stc
out
xor
cdq
mov
into
sub
add
jno
mov
shr
jae
sub
icebp
call
imul
push
mov
and
in
pop
cli
push
retf
dec
mov
data16
mov
test
and
add
cwde
or
bound
mov
and
popa
nop
mov
aaa
lea
sub
jnp
in
jg
fbld
lock
adc
jb
push
adc
dec
cvtdq2ps
dec
add
push
addr16
dec
daa
pop
stos
pop
mov
fwait
sti
dec
mov
aam
xor
daa
cs
xchg
sub
push
iret
js
(bad)
test
scas
xchg
outs
call
lods
jae
mov
xchg
jne
addr16
or
jb
jns
nop
(bad)
in
mov
adc
inc
test
fist
cmp
and
sar
xchg
push
es
scas
pop
mov
stc
cli
loope
xor
push
jmp
ja
pop
cmps
into
aaa
sar
jns
mov
push
in
inc
push
mov
iret
mov
stc
mov
xor
ret
push
push
stos
(bad)
jmp
or
jbe
jnp
outs
push
dec
out
inc
jmp
retf
icebp
mov
mov
mov
jbe
mov
sbb
jb
int3
sbb
mov
mov
icebp
and
stos
ror
push
or
cmp
loopne
cmp
inc
stos
test
adc
xchg
call
(bad)
(bad)
adc
adc
pop
adc
sbb
adc
mov
add
mov
sub
cli
pushf
push
dec
pop
test
and
push
adc
lock
bound
ja
mov
(bad)
(bad)
xchg
jno
adc
mov
jl
dec
pusha
mov
lahf
cmp
popa
fnstcw
popf
nop
das
push
mov
test
adc
outs
test
into
ss
jg
call
lock
jmp
add
pop
push
cmp
leave
aas
and
cdq
jbe
(bad)
mov
icebp
or
dec
sub
scas
jo
fst
adc
push
call
or
jl
arpl
popf
jp
iret
sub
lods
repz
sub
pop
jmp
mov
push
pop
push
scas
dec
aas
add
adc
std
jle
ja
dec
mov
mov
scas
push
or
pushf
add
inc
fistp
jmp
mov
xchg
or
mov
xor
sbb
rcl
aaa
inc
mov
mov
ffree
add
sub
cmps
sub
mov
aam
je
pusha
fld
pop
mov
(bad)
lods
or
(bad)
daa
sub
jno
pop
dec
and
cli
jo
(bad)
mov
inc
shr
ret
loope
and
inc
adc
inc
xor
hlt
cmp
adc
push
or
call
cmp
in
pop
sbb
pop
jbe
adc
ds
adc
popa
add
test
retf
movs
and
lahf
cdq
sar
inc
ds
cmps
test
je
push
dec
xchg
mov
and
rcr
(bad)
mov
and
lock
dec
or
cmp
test
retf
test
test
sub
gs
scas
repz
push
jle
push
xor
mov
dec
inc
(bad)
dec
mov
pop
leave
mov
nop
add
or
out
movs
mov
mov
push
in
leave
mov
or
inc
xchg
push
les
xchg
mov
test
or
push
xchg
retf
mov
jmp
ret
cmps
fcmovu
adc
bound
lods
sbb
sbb
lock
in
cld
test
sbb
ret
into
outs
cmp
xchg
mov
retf
push
fild
ja
push
dec
cmp
sub
sbb
cmp
sbb
push
add
mov
cld
or
lea
jb
or
sti
pop
stc
js
mov
xchg
inc
xor
outs
adc
xor
xchg
loope
mov
rcr
in
cmp
dec
stos
(bad)
lds
inc
add
sbb
sub
mov
xor
add
add
add
adc
cmp
sahf
jecxz
adc
xor
icebp
outs
aad
and
or
push
mov
stc
jb
mov
jge
aas
adc
pusha
and
(bad)
clc
dec
push
mov
mov
or
xor
or
jbe
fld
add
cmp
loopne
and
repz
imul
stos
add
loop
mov
or
aam
outs
inc
cwde
std
mov
and
movs
xchg
dec
ret
popf
sbb
push
cmc
xor
and
shr
iret
sub
and
retf
mov
push
xchg
(bad)
lock
shl
popf
pop
sub
jge
jnp
enter
and
stc
in
retf
push
inc
call
mov
add
push
pop
push
ret
das
sub
out
rcl
jbe
or
mov
dec
paddq
(bad)
push
dec
rcr
jb
or
cmp
inc
(bad)
fsub
cmps
adc
stos
mov
adc
cmp
jno
retf
and
sub
into
mov
xchg
stos
and
shr
jle
imul
push
loopne
mov
cli
out
jg
xor
xchg
loope
push
inc
or
jno
ret
cmc
mov
dec
adc
ins
inc
les
dec
fwait
or
mov
cdq
push
sub
pop
inc
xor
jge
movs
pop
sbb
push
lea
sub
inc
sbb
dec
adc
cmc
pop
nop
and
jmp
pop
rcr
sub
jle
nop
fisubr
or
dec
rcr
mov
cmp
dec
cmp
add
push
adc
mov
ret
adc
ror
cmp
stc
daa
loope
ret
pop
or
sub
adc
pusha
and
mov
shl
aam
imul
mov
and
cmp
inc
adc
jp
or
stos
scas
frstor
stc
cmps
jb
mov
inc
mov
lock
enter
xchg
(bad)
ficom
jp
mov
push
lods
retf
test
scas
fld
out
inc
call
rol
scas
mov
or
retf
std
repnz
jnp
lea
out
test
mov
or
inc
test
mov
movs
add
ret
inc
mov
(bad)
in
mov
add
enter
inc
repnz
sbb
sti
dec
and
xor
dec
push
mov
push
fstp
test
mov
ret
dec
sub
jecxz
mov
icebp
ins
lock
movs
cwde
retf
push
sbb
ret
mov
fs
inc
out
dec
add
adc
xor
aad
lds
ins
cs
dec
mov
or
jmp
ss
das
push
call
lods
bound
lods
xor
jae
xlat
cwde
dec
sub
mov
pusha
cmp
dec
xor
mov
enter
imul
fs
mov
xor
cmps
and
cld
ja
imul
mov
mov
loope
cmp
ret
test
push
nop
popa
or
xchg
gs
jne
sar
xchg
cli
xchg
push
mov
xchg
ins
ret
sub
jns
xchg
fisttp
clc
jmp
push
and
arpl
push
div
enter
test
pusha
rcr
cdq
push
stc
popa
hlt
aad
call
push
jmp
test
xor
test
xchg
test
lds
add
pushf
loopne
sbb
pop
clc
js
jp
mov
fidivr
shr
xchg
adc
cmp
imul
ss
add
jbe
out
cli
stos
call
fcmove
jp
scas
cld
push
mov
addr16
lea
jns
add
cmp
pop
adc
ins
out
xlat
cwde
(bad)
loopne
mov
popa
mov
push
xor
or
and
retf
or
cmp
scas
mov
popf
jbe
mov
jbe
xor
sbb
mov
mov
je
rcl
cmp
jle
test
ret
outs
mov
xor
mov
jp
cdq
dec
lock
xor
sbb
cmp
jnp
cmps
mov
inc
cli
loope
gs
in
or
aam
shl
mov
pop
dec
cld
outs
outs
lahf
mov
mov
add
add
mov
sahf
push
mov
addr16
retf
sbb
xor
cmp
(bad)
repnz
and
pop
adc
xor
leave
ror
jle
scas
aam
jle
jecxz
cmp
adc
mov
jmp
push
retf
jle
cs
mov
imul
in
shr
dec
(bad)
aad
adc
cmp
into
mov
mov
add
dec
and
fimul
inc
bound
add
mov
sti
stos
in
loop
mov
jae
popa
push
adc
rol
imul
jnp
jno
dec
xor
cmp
call
jg
leave
jp
aas
ret
or
ret
arpl
cwde
js
jnp
jp
dec
mov
add
dec
sbb
mov
xchg
add
sub
push
cmp
sti
sub
inc
test
mov
jbe
cmp
push
or
movs
mov
pop
sub
xor
mov
pop
test
sub
lds
das
push
adc
mov
adc
lahf
add
lds
fwait
retf
cmp
xchg
cmp
jne
js
cli
add
in
dec
sub
push
daa
and
add
pushf
ror
shl
pop
mov
and
in
icebp
loope
adc
sbb
ss
cmps
push
push
xchg
fidiv
push
xor
jnp
fcom
scas
dec
cmp
jp
jl
push
inc
pop
sbb
add
mov
xor
and
std
aad
inc
push
push
psrad
mov
call
cmps
ror
mov
cmp
push
(bad)
adc
and
stc
sub
cmp
adc
shl
or
add
aas
cmp
push
pop
jp
sub
sub
sub
ins
(bad)
xchg
jnp
enter
or
xchg
ret
mov
stos
cmp
mov
cli
repnz
rcr
in
inc
(bad)
daa
or
push
out
jno
or
mov
mov
xchg
mov
mov
cli
das
xor
fnstsw
ror
push
push
pop
test
popa
mov
inc
loope
sbb
(bad)
int
push
lock
es
loopne
and
icebp
pop
dec
test
in
arpl
mov
inc
cmc
cmp
xor
dec
inc
jns
jp
cwde
push
(bad)
fsqrt
sbb
ds
lea
call
xchg
mov
xor
fmul
mov
jno
sar
pushf
cmps
jl
pop
ins
cmp
cli
jns
cmc
sub
mov
repz
es
inc
sbb
sub
sub
jp
div
pushf
jle
pop
push
dec
xor
and
dec
mov
mov
das
xor
mov
dec
add
add
call
mov
mov
pop
fidiv
xor
(bad)
adc
(bad)
imul
je
xchg
and
or
cmc
loope
test
jge
sbb
dec
inc
scas
imul
ins
xor
test
retf
push
lods
movs
inc
test
push
or
mov
and
es
movs
jp
rcr
(bad)
in
cdq
xor
add
mov
mov
push
sar
or
xor
dec
out
jmp
pop
push
arpl
outs
xchg
mov
stos
rcl
sbb
push
mov
int
lock
pop
out
test
jecxz
jmp
and
aad
das
xor
or
aaa
push
xor
dec
retf
fcomp
xchg
shr
mov
xchg
stc
xchg
push
sub
or
cli
pop
push
in
dec
push
pop
add
sub
data16
repz
daa
xor
cld
in
xor
je
inc
stos
push
pop
popa
jmp
sbb
sub
mov
pop
rcl
stos
rcl
in
dec
into
leave
inc
cld
sbb
call
popa
push
dec
pop
mov
in
and
jecxz
out
jge
fisttp
adc
push
rol
js
and
mov
fwait
lds
cld
sbb
sub
push
sti
lods
cmp
or
and
lahf
pop
dec
cmc
retf
sub
mov
(bad)
sub
cmp
and
mov
retf
sbb
cmp
fst
xchg
or
sub
add
add
push
(bad)
out
shl
xor
retf
pusha
outs
fist
mov
inc
fld
sub
pop
dec
and
or
adc
push
xchg
xor
ds
xchg
outs
push
mov
pop
imul
jnp
clc
cmp
cmps
inc
movs
rol
ja
arpl
mov
push
ret
shl
lods
jbe
add
mov
sub
fcomp
xor
scas
inc
sbb
test
xchg
stos
dec
mov
fmul
gs
sub
(bad)
iret
push
retf
sbb
cmp
stos
mov
jmp
xchg
dec
mov
cmp
adc
and
push
ret
xor
adc
inc
inc
and
(bad)
and
adc
sub
adc
je
adc
pop
push
fwait
shr
out
add
pop
nop
int3
mov
test
outs
in
(bad)
call
xchg
jno
mov
mov
add
mov
es
retf
into
dec
in
cli
add
push
jp
jg
mov
xchg
(bad)
cs
retf
pop
add
dec
int3
fidiv
adc
xor
popf
loope
lods
test
mov
loop
daa
inc
fldcw
mov
adc
mov
rcr
dec
xchg
out
pop
hlt
xor
jmp
sub
push
mov
xchg
mov
mov
push
out
fwait
xchg
inc
sub
fiadd
loop
mov
int3
lahf
fcomp
xor
cmp
jp
fadd
cli
pop
pop
test
adc
sti
inc
lock
lods
mov
shl
cmp
and
mov
sbb
xchg
pushf
pop
mov
add
push
jmp
adc
add
xor
dec
and
retf
ret
mov
fild
sub
dec
push
outs
xor
mov
int
jns
add
scas
cs
pop
jae
hlt
test
xchg
adc
call
xor
es
inc
test
push
(bad)
cmp
call
inc
inc
and
and
xchg
dec
sub
jb
ficomp
xor
pop
je
mov
sub
mov
xor
mov
add
test
adc
scas
sub
outs
mov
retf
push
xlat
int3
add
jmp
add
jle
jb
retf
retf
pop
push
add
mov
xchg
xlat
add
jp
icebp
xor
jle
pop
inc
inc
loop
stos
ins
sub
stos
in
jns
dec
fbld
push
jnp
inc
push
add
mov
aas
stos
xchg
jp
jp
shl
push
test
clc
lahf
jns
sub
mov
fcmovne
mov
and
adc
mov
les
mov
les
sbb
xor
xor
or
add
xchg
iret
out
cmps
std
mov
fsubp
test
inc
inc
pop
cmp
imul
push
push
repnz
fs
sbb
cs
pop
fimul
sbb
cmp
mov
icebp
jo
js
in
retf
hlt
sbb
sub
push
enter
call
mov
in
repz
mov
mov
into
arpl
and
xchg
ins
xchg
adc
fmul
int
aam
loop
not
add
jae
push
popf
adc
push
or
sbb
pushf
ror
call
jb
ficom
rcr
add
sbb
retf
not
sub
cwde
inc
or
aas
das
pushf
push
and
mov
sub
ret
jle
push
cwde
jle
retf
imul
cmp
adc
fs
cld
ja
std
xchg
popf
cmp
out
and
out
xor
xchg
mov
jecxz
test
mov
mov
nop
(bad)
sti
fnstcw
stos
fdiv
mov
loopne
gs
jle
stos
nop
mov
ror
ja
jns
mov
in
scas
(bad)
in
push
jmp
cli
and
sbb
pop
pusha
mov
mov
fimul
mov
call
push
jnp
or
jp
pop
jns
retf
scas
mov
or
repz
(bad)
jecxz
add
or
lahf
mov
xor
int
push
nop
jns
outs
in
inc
in
ror
xor
push
inc
xor
sysexit
das
(bad)
aas
imul
sub
retf
jbe
xchg
jae
or
cmp
mov
adc
cmp
jmp
shr
inc
rcr
dec
sub
enter
ins
jns
sub
clc
sbb
or
xor
or
pop
jne
adc
and
(bad)
rcl
add
lahf
test
mov
(bad)
cld
sbb
stos
sar
sbb
imul
push
sahf
or
sub
rol
mov
push
setge
dec
inc
inc
adc
out
test
mov
test
xchg
(bad)
into
ins
addr16
sahf
cdq
push
dec
in
fwait
mov
fidiv
imul
shl
sbb
add
and
xchg
stos
inc
faddp
fcom
mov
sub
adc
imul
lock
mov
loope
adc
cmp
xor
and
mov
sti
call
movs
in
mov
inc
push
dec
sub
push
fs
push
aad
nop
in
rcr
sub
adc
xor
inc
adc
loope
ss
ror
mov
fldcw
in
jb
push
in
fstp
jecxz
icebp
pop
enter
aas
cmc
(bad)
mov
dec
ss
out
cdq
xchg
mov
push
enter
sahf
push
nop
out
sbb
scas
pop
push
cmp
and
xchg
test
and
(bad)
mov
sar
xchg
and
pop
sub
jns
xor
sub
mov
inc
test
ror
jno
sub
call
push
dec
push
stos
call
dec
lock
movs
aaa
push
repz
cmp
clc
aas
jmp
aas
sub
add
jo
in
(bad)
iret
std
dec
jg
fnstcw
dec
jmp
dec
jl
mov
das
push
test
shr
loope
lahf
push
(bad)
pushf
xor
pop
adc
push
dec
dec
mov
mov
fsubr
or
(bad)
clc
loop
mov
xor
sbb
jp
int
sbb
out
outs
or
inc
adc
push
xchg
pop
dec
mov
xchg
rcr
arpl
pop
cmp
jmp
mov
fdiv
mov
mov
pop
sahf
adc
and
outs
sbb
aaa
inc
xor
xchg
in
jnp
retf
mov
mov
fwait
enter
inc
mov
dec
inc
pop
jg
and
add
call
test
xchg
pop
or
shr
push
jp
push
enter
popf
mov
xchg
shl
mov
push
ret
loope
mov
sbb
mov
ret
mov
cli
lds
call
cmp
pop
dec
dec
(bad)
shl
aad
lock
xchg
mov
cmp
inc
cmp
cmp
push
or
xchg
jno
inc
mov
jmp
push
ret
or
int3
mov
and
mov
nop
popa
inc
and
jecxz
dec
test
jbe
popf
xor
jge
retf
mov
mov
adc
loopne
scas
retf
or
cs
dec
inc
jmp
dec
xor
inc
js
mov
xchg
mov
add
mov
lds
adc
sbb
add
out
mov
movs
dec
push
arpl
sub
popa
inc
pop
cs
je
dec
aad
mov
adc
pop
sbb
adc
sub
(bad)
push
xor
push
or
inc
jmp
inc
jns
xlat
jne
(bad)
xlat
and
cmp
retf
push
nop
add
inc
clc
pop
adc
pop
mov
dec
ins
sbb
outs
inc
push
cs
adc
push
jg
lahf
seto
and
retf
jno
movs
scas
mov
hlt
stos
sbb
mov
xchg
call
mov
push
bnd
(bad)
mov
in
inc
xchg
mov
gs
pop
push
add
cmp
sub
sbb
pop
das
mov
dec
cli
(bad)
cld
retf
js
fld
call
sub
sahf
inc
ret
out
sar
or
mov
mov
cmp
scas
sti
adc
fmul
ja
jmp
push
or
fnstcw
mov
pop
ins
es
push
popa
xlat
add
jns
mov
mov
adc
jmp
sbb
imul
push
push
or
sub
sbb
(bad)
mov
dec
xchg
dec
cld
aaa
jmp
retf
and
in
sbb
fnstenv
sub
mov
out
xor
xlat
dec
loope
imul
xor
inc
mov
or
mov
mov
add
push
jo
inc
in
mov
sub
(bad)
sbb
and
mov
jle
aam
pop
and
(bad)
and
out
or
das
loopne
(bad)
test
jecxz
lea
add
cmp
ins
pop
and
jo
(bad)
pop
mov
aad
mov
or
stos
inc
mov
cmp
mov
mov
mov
sti
and
dec
in
sar
ja
loopne
dec
jl
call
pop
and
add
fidivr
inc
push
loopne
add
inc
fs
stos
inc
adc
or
inc
test
mov
and
div
stos
mov
jo
outs
add
mov
mov
sub
and
rcr
aam
shl
lods
sar
add
sahf
loop
and
xor
mov
(bad)
mov
inc
imul
sub
popf
jb
and
mov
dec
inc
fdiv
test
push
dec
cmc
jg
fld
lods
adc
and
in
sub
imul
imul
mov
imul
imul
jmp
sbb
dec
rol
xor
jmp
cmp
hlt
mov
push
mov
pop
and
xlat
stos
sbb
mov
or
imul
dec
ret
outs
fld
inc
sbb
xchg
(bad)
cmp
loope
pop
retf
cmp
jecxz
repnz
es
loop
sbb
or
int3
or
add
adc
fisttp
shr
(bad)
jno
cmc
dec
pop
mov
scas
cmp
dec
rol
cli
mov
dec
add
pop
jae
xor
xchg
fisubr
mov
sbb
bnd
retf
not
mov
inc
sub
push
xchg
pop
mov
outs
cmp
mov
dec
mov
mov
mov
xor
sbb
cmps
pop
lea
fisubr
iret
xchg
retf
xchg
dec
cmp
jns
scas
outs
into
add
in
fwait
adc
inc
jg
xchg
sub
mov
or
rcr
pop
mov
pop
push
and
int
mov
shl
add
ja
add
adc
cmps
mov
inc
sti
repnz
cmp
jb
and
dec
mov
leave
adc
jle
retf
rcl
mov
stos
sbb
dec
ret
mov
cwde
mov
dec
fidiv
addr16
push
cmp
in
cld
popa
mov
loopne
push
or
pop
gs
ficom
cwde
jne
xor
mov
mov
sbb
add
add
fisubr
or
and
hlt
clc
lock
bndstx
addr16
inc
xor
jle
scas
(bad)
fld
xor
and
sbb
sbb
push
jns
push
lods
push
mov
scas
push
leave
cli
mov
int
mov
mov
mov
pusha
dec
dec
pop
sbb
jmp
mov
sub
fdivr
sbb
jmp
enter
inc
xor
scas
and
adc
sbb
out
add
rcr
imul
loope
adc
imul
mov
inc
jge
(bad)
lods
shl
fsubr
jnp
xchg
push
cmc
or
add
fprem
push
stc
push
(bad)
fwait
add
mov
test
mov
add
fmul
inc
adc
push
repz
test
in
cs
aaa
sbb
mov
(bad)
jg
push
push
imul
jl
rcr
dec
add
loop
imul
out
cdq
or
clc
sbb
mov
dec
lahf
jle
jo
jecxz
jmp
sbb
out
adc
jne
pop
pop
mov
push
int
retf
jno
push
mov
mov
mul
iret
or
out
rol
dec
in
shr
jbe
lock
add
sub
cmps
test
inc
stc
jl
jno
outs
jns
out
dec
hlt
outs
and
xor
xchg
xchg
test
pop
lods
or
sbb
aaa
pop
xchg
and
les
pushf
xor
push
inc
(bad)
or
mov
repnz
ret
int
mov
xor
sub
sti
jo
pop
dec
xchg
xchg
mov
ins
pop
(bad)
repz
popf
xchg
mov
sub
pop
pop
es
and
cmps
pop
push
mov
ds
fldenv
sbb
mov
rcr
mov
cmp
test
mov
mov
push
enter
mov
ret
ins
nop
fwait
pop
mov
ror
ds
push
jp
js
inc
push
adc
sbb
xor
xlat
mov
xor
mov
xlat
xor
xchg
xor
add
fstp
loop
add
ret
in
pop
imul
jl
jp
xor
sub
cmp
sar
pop
xchg
add
push
aas
(bad)
into
mov
pop
jno
add
jno
adc
call
fnstenv
mov
xchg
dec
xchg
xor
inc
or
inc
adc
mov
rcl
adc
pop
les
(bad)
icebp
enter
sub
stos
xchg
(bad)
xchg
jmp
push
push
sub
stos
or
movs
mov
mov
jle
in
add
movs
pop
scas
inc
ja
and
das
cwde
arpl
cmps
jns
pop
lods
dec
ret
jmp
and
lock
outs
lahf
les
xchg
outs
dec
add
sbb
cmp
and
call
loop
or
iret
es
push
out
or
jae
sub
push
push
je
movs
sbb
lea
mov
push
test
std
mov
pop
or
mov
cmp
push
stos
cdq
pop
loop
jnp
sub
ret
addr16
add
cli
out
mov
je
cdq
push
mov
pop
jge
or
cmp
arpl
pushf
pop
pause
mov
inc
jo
jmp
outs
imul
cwde
and
dec
mov
jp
fwait
setnp
fcomp
dec
sub
jmp
add
ret
sbb
sub
fcomp
jle
(bad)
jmp
pushf
(bad)
sbb
ds
outs
pusha
in
adc
jg
jmp
je
jp
inc
pop
inc
ret
dec
mov
cmp
or
shl
clc
add
push
js
xor
fsub
cmps
nop
icebp
int
mov
adc
mov
mov
popa
xor
hlt
xor
and
mov
fwait
sbb
add
pusha
mov
jno
xor
dec
rcr
lea
push
mov
cmp
xchg
test
adc
je
jmp
rol
pop
inc
cmp
bndldx
xchg
xor
mov
enter
cld
dec
jb
sub
cs
sub
stos
in
fbld
or
mov
dec
adc
stos
aas
mov
or
xor
ror
push
lock
std
xchg
sbb
dec
pop
adc
and
fdivr
jae
test
mov
cmp
int3
rol
mov
sub
clc
call
push
stc
pop
iret
push
out
mov
dec
clc
(bad)
dec
mov
and
shl
and
sbb
(bad)
stc
cmps
repz
mov
xor
mov
fstp
sub
push
mul
or
in
add
jbe
mov
mov
sbb
das
aad
fcomip
ja
imul
mov
sub
add
jp
or
inc
out
iret
retf
movs
sar
iret
leave
push
arpl
inc
aaa
ins
sahf
popa
jnp
sti
dec
and
loopne
push
stos
mov
clc
push
repnz
(bad)
adc
std
je
add
je
stos
shl
sahf
dec
fwait
in
popa
test
ja
jno
ss
(bad)
jae
cmp
inc
mov
fs
les
sar
ds
push
lods
std
sar
fisubr
jno
mov
das
xchg
xchg
inc
je
cmc
dec
daa
push
adc
fwait
lock
outs
pop
movs
or
xor
lock
add
cdq
mov
fisttp
test
daa
fdiv
inc
or
pop
inc
cmc
sub
cmp
pop
mov
mov
(bad)
mov
fimul
push
sahf
inc
dec
cmovs
dec
xchg
hlt
in
mov
add
ins
jmp
scas
test
push
daa
pop
mov
fwait
push
xchg
dec
call
loop
jge
or
push
aas
repz
in
scas
and
xchg
mov
cmps
jns
push
ins
dec
test
jne
call
cmp
push
mov
xor
xchg
inc
xor
cmp
sbb
jno
inc
fist
js
cli
mov
(bad)
and
inc
mov
pop
cmps
xor
adc
inc
inc
stos
(bad)
in
inc
cwde
fnstcw
adc
sbb
push
pushf
ja
push
inc
(bad)
xor
xchg
icebp
loop
rcl
pop
mov
sar
call
pop
aad
leave
aas
xlat
adc
cwde
mov
or
mul
test
mov
gs
pop
iret
dec
cmc
jnp
(bad)
mov
adc
cdq
ror
cmp
dec
nop
jmp
pop
sub
push
xchg
sbb
and
pop
inc
push
loop
xor
or
retf
or
add
mov
inc
xchg
jmp
leave
fisttp
ret
and
and
rol
add
inc
pop
push
lahf
push
ins
add
mov
xchg
adc
jmp
jb
add
mov
cld
pop
add
jle
jecxz
je
loopne
cmc
shl
mov
push
shl
sub
fist
xor
xchg
in
loop
aam
pop
sub
outs
dec
dec
sub
sbb
sub
stos
mov
ror
dec
jmp
push
inc
stc
push
jmp
fcmove
sbb
inc
ror
add
add
inc
inc
sub
cli
sbb
or
or
inc
adc
outs
sbb
jmp
ja
aad
and
jge
mov
test
or
mov
mov
sub
push
adc
xchg
popa
mov
jg
shl
fsubr
sub
mov
mov
dec
xor
lock
pop
retf
cld
sub
(bad)
push
int
or
bound
xchg
adc
dec
fcmove
xchg
fcmovb
xchg
mov
adc
ds
das
pop
out
cli
iret
loop
mov
mov
and
push
xchg
push
push
cs
shl
test
gs
(bad)
or
xor
inc
mov
mov
dec
sbb
scas
jne
into
cmp
or
jb
fsub
push
fiadd
scas
mov
cmp
rcl
test
pop
inc
mov
inc
sbb
popa
stc
das
push
mov
and
sti
outs
jo
lock
inc
out
aad
pushf
call
loopne
dec
xor
out
sbb
test
sub
mov
sub
aam
pop
or
push
pop
fild
nop
mov
xor
inc
pop
stos
mov
xor
mov
aaa
xchg
ret
retf
jmp
add
dec
push
xor
pop
inc
jp
and
push
xchg
das
xchg
pop
les
aad
or
clc
mov
pop
(bad)
aad
jp
jne
push
adc
stos
cmp
mov
add
add
sub
adc
sbb
fist
jbe
or
mov
jns
xchg
and
push
aas
sbb
cmps
int
jae
mov
and
popa
mov
stos
jp
sbb
jno
daa
pop
adc
sub
cli
mov
test
(bad)
mov
mov
push
sbb
cld
sub
fs
pop
cmp
cli
addr16
adc
push
mov
mov
adc
mov
push
sub
mov
stc
jp
jmp
mov
jecxz
jb
inc
dec
ins
(bad)
mov
add
jae
jno
cmp
cmp
push
xchg
mov
push
cld
sbb
jo
out
sbb
ret
push
add
jmp
xor
xchg
mov
sub
out
and
lods
cmps
mov
lock
das
dec
and
xchg
daa
imul
xlat
xchg
add
pop
in
cmp
add
cmp
jp
sbb
mov
outs
shr
sar
and
gs
lds
jne
aad
pushf
retf
sti
scas
xor
rcr
or
xchg
inc
or
dec
imul
scas
test
or
mov
or
add
pushf
pop
or
and
push
push
sbb
loop
or
adc
stc
cmp
sbb
mov
inc
adc
xchg
jne
cdq
mov
or
mov
outs
mov
dec
shl
or
popf
mov
mov
push
adc
jp
xor
fiadd
mov
and
sbb
dec
(bad)
mov
ror
or
out
sbb
push
pop
mov
cwde
add
fild
rcr
adc
jb
into
aam
push
sar
xlat
and
pusha
scas
or
ja
fimul
jecxz
xchg
cwde
dec
retf
test
dec
inc
xor
xchg
sar
xor
inc
stos
popa
xchg
loope
adc
push
aas
imul
adc
into
rol
cmp
pop
pop
sar
sub
cmps
sbb
js
mov
xor
add
add
xchg
out
and
push
inc
into
or
das
inc
(bad)
or
mov
inc
jmp
sar
sub
scas
scas
enter
jb
or
inc
or
push
add
or
sub
sar
and
xchg
(bad)
mov
fcomp
push
and
sti
jnp
mov
mov
das
and
xlat
fist
and
pop
pop
mov
call
dec
ins
pusha
iret
ret
mov
idiv
add
lahf
dec
xchg
sti
dec
add
and
sar
mov
fsub
out
(bad)
pop
pop
push
add
push
xchg
aas
pop
hlt
gs
mov
push
scas
mov
(bad)
dec
fdiv
popa
test
fnstenv
movs
daa
mov
repz
js
lods
outs
or
lods
inc
push
cmps
movs
je
loope
retf
shl
jns
loopne
jmp
mov
out
ins
int
data16
inc
jne
or
pop
fnstcw
pop
cmp
icebp
stos
sub
scas
retf
xchg
es
jl
inc
add
mov
cmp
sub
xor
or
in
push
adc
and
(bad)
stos
fcmovu
push
hlt
(bad)
clc
cmps
jecxz
pop
mov
test
jo
icebp
loope
cmp
dec
rol
push
(bad)
lods
(bad)
fcmovbe
test
enter
push
mov
add
cmc
mov
bswap
mov
(bad)
cmp
dec
jp
(bad)
cmp
pop
jmp
fisub
jb
xchg
iret
xor
xchg
xchg
rcr
retf
cmp
and
enter
rol
loope
jl
rol
dec
scas
jle
aaa
pop
cmp
pop
and
add
sub
sub
push
test
stos
sub
push
retf
jo
call
ret
xchg
add
es
stos
xchg
aad
enter
mov
adc
push
std
add
cmp
loopne
mov
pop
ins
mov
and
icebp
mov
mov
jp
adc
rol
in
fnstsw
sbb
mov
mov
mov
das
es
cmps
stos
and
rcr
fmul
mov
in
adc
ror
in
push
mov
xchg
inc
icebp
jp
loop
xchg
push
xor
jg
xor
dec
push
sbb
ret
inc
inc
fwait
xor
mov
ja
mov
fs
inc
ret
in
mov
cmp
add
jge
sbb
aas
ja
jecxz
les
push
jp
jle
div
pop
movs
inc
aaa
add
mov
int
adc
leave
aas
sbb
call
icebp
cmps
bound
mov
cmc
sub
test
(bad)
jmp
loope
cmp
dec
or
jne
int3
adc
dec
cdq
fidiv
and
pusha
(bad)
adc
in
lock
rcl
jp
sti
adc
pop
xor
adc
test
ds
jnp
ret
loopne
pop
xchg
mov
cmps
cli
das
daa
ret
iret
xor
dec
sbb
xor
in
push
neg
inc
xor
or
lahf
sub
lahf
icebp
call
inc
and
mov
pop
sbb
jle
sub
inc
xlat
adc
popa
or
sub
(bad)
aam
repz
jmp
mov
js
pop
pushf
sbb
fdivp
add
sahf
inc
iret
sar
pop
out
fwait
mov
outs
add
push
lods
or
lock
xchg
jmp
mov
les
mov
arpl
ret
outs
dec
test
sbb
cwde
xor
idiv
push
cwde
sbb
push
fcom
sbb
pop
xor
push
movs
imul
fidiv
inc
fbstp
(bad)
dec
imul
mov
fcmovb
inc
(bad)
jne
jae
jmp
lds
out
nop
jp
jge
stos
loopne
inc
adc
pop
mov
lahf
push
pop
push
mov
and
pop
pusha
adc
popa
test
cmp
int3
xchg
or
leave
mov
inc
jle
adc
lds
add
mov
jns
xchg
shl
or
xor
pop
jns
mov
xor
and
mov
clc
lds
mov
stos
mov
mov
add
pop
test
push
adc
inc
pop
sub
xor
fs
fs
sub
test
pop
mov
repz
push
or
jl
sub
ret
retf
xchg
test
mov
sbb
add
sbb
sbb
leave
not
int3
and
adc
clc
jge
pop
mov
cmc
mov
pop
mov
push
sub
push
sub
les
jno
(bad)
cwde
rcl
jmp
cmp
adc
rol
sub
jne
enter
xchg
aam
arpl
xor
clc
ds
cmp
dec
out
dec
push
mov
push
clc
push
push
leave
sub
dec
stos
push
test
or
push
test
dec
fs
mov
cmp
jne
in
xchg
(bad)
aam
(bad)
out
aam
xchg
mov
lock
pop
pop
addr16
outs
xchg
or
popf
pushf
push
pop
rol
dec
sbb
xor
popf
nop
pop
mov
imul
psadbw
ins
(bad)
sub
adc
pop
sbb
out
xchg
pop
xor
cs
repz
xor
cdq
push
push
xchg
ret
push
cld
sub
sbb
dec
inc
push
icebp
mov
repz
repnz
retf
xor
stc
lods
or
inc
cmp
pushf
movs
sub
adc
lods
(bad)
mov
std
enter
fist
leave
mov
inc
out
popa
ins
mul
cld
mov
jecxz
jmp
mov
mov
xor
inc
and
jge
cld
cmp
sbb
or
sbb
pop
nop
mov
nop
cmc
hlt
jmp
jb
inc
push
adc
sbb
mov
push
stos
fadd
inc
sbb
cld
dec
movs
cwde
call
mov
cwde
rcr
add
sbb
adc
repz
pop
or
daa
add
cmp
push
sbb
hlt
stos
xchg
mov
dec
nop
xlat
jmp
inc
and
call
fist
stc
or
add
mov
test
jns
xor
add
fidivr
in
fmul
sbb
repz
push
out
out
clc
or
pop
inc
pop
mov
test
cld
fild
xchg
push
and
popf
sbb
inc
add
mov
inc
dec
or
scas
cmps
rcr
mov
mov
pusha
lods
push
bound
mov
sti
mov
xchg
call
or
push
sub
sbb
and
pop
inc
mov
mov
sbb
adc
xchg
pop
mov
stc
mov
fnstcw
popf
push
test
mov
lock
dec
inc
neg
retf
cs
int3
into
fstp
cli
inc
movs
(bad)
cmp
add
sbb
jb
dec
push
js
cmp
mov
xor
mov
fs
sub
mov
xchg
cwde
dec
in
push
mov
imul
loop
rcr
idiv
jns
adc
in
add
inc
jle
rcl
pop
cmp
xchg
pop
fchs
sahf
xchg
clc
mov
or
retf
clc
cmp
test
cmp
xchg
fmul
push
xor
pop
in
lods
mov
mov
in
ret
gs
retf
inc
fild
repz
adc
mov
cli
hlt
xchg
js
mov
sbb
mov
call
or
push
mov
push
fsubr
ss
rcl
xchg
das
retf
clc
inc
in
sbb
enter
imul
call
dec
dec
fidivr
xor
sar
xor
push
repnz
push
push
(bad)
jmp
shr
lock
mul
enter
loop
stos
xlat
pop
or
xchg
aaa
push
daa
mov
cli
cmp
xchg
mov
test
mov
mov
call
outs
frstor
jg
mov
movs
lahf
stc
pop
hlt
idiv
and
test
mov
and
or
or
cmc
jnp
xor
mov
push
dec
fs
ror
cmp
xor
adc
cmps
add
loope
mov
ins
mov
scas
sbb
imul
add
pop
mov
js
xchg
or
xor
repnz
imul
xor
mov
fist
mul
out
push
test
sbb
dec
fisubr
enter
cmp
xchg
push
xor
adc
push
gs
xor
repnz
add
pushf
cwde
iret
test
loopne
popf
xor
and
test
in
xor
ret
es
jnp
scas
add
sbb
stos
mov
mov
les
dec
jae
sbb
jb
mov
mov
(bad)
cmp
outs
mov
add
imul
ror
retf
mov
and
imul
mov
sbb
int
ds
jmp
push
pop
ret
bound
sub
loop
cmp
sub
loopne
mov
jg
and
add
in
js
sbb
adc
sub
xchg
aam
and
or
inc
and
pop
add
in
xor
mov
sbb
(bad)
jae
push
lea
xor
fist
lods
jmp
ror
out
or
inc
sbb
cmp
inc
push
lods
outs
inc
cdq
and
push
mov
dec
mov
jns
fucomi
xchg
leave
push
dec
xor
push
ror
and
xchg
out
leave
pop
jecxz
sbb
sbb
sub
cwde
and
push
test
cli
(bad)
mov
sub
xchg
inc
imul
mov
shr
xor
loope
mov
cli
enter
ror
inc
sbb
pause
cs
fcom
pusha
pop
mov
dec
mov
and
fdiv
jno
lock
xchg
xlat
push
cli
cwde
enter
mov
fst
icebp
pop
sbb
mov
jecxz
sbb
(bad)
aas
cmp
mov
mov
ret
add
iret
and
cld
out
jae
and
nop
stc
dec
stc
pop
mov
pop
and
cmp
fld
xchg
push
xor
inc
pusha
jge
test
not
jns
ins
call
dec
pop
jl
(bad)
mov
sub
cmp
out
xchg
or
hlt
and
les
xor
xchg
push
(bad)
inc
jecxz
lods
leave
dec
and
sub
dec
inc
outs
addr16
xlat
dec
(bad)
not
sbb
add
sub
stc
xor
in
xchg
lock
add
push
or
rcr
sub
nop
pusha
xchg
call
in
pushf
xor
jecxz
imul
mov
shr
jno
push
mov
sub
stc
sbb
imul
fisubr
mov
xchg
or
jb
sub
push
mov
sbb
int
retf
jmp
mov
push
pop
sar
aam
dec
jae
pop
or
mov
stc
pop
or
daa
and
inc
aas
sub
sub
mov
xlat
imul
sub
(bad)
mov
dec
popf
shl
pop
call
(bad)
sub
into
xchg
popa
out
enter
stos
scas
and
clc
mov
and
or
push
pusha
jnp
neg
fnsave
jmp
dec
call
rol
loop
dec
sbb
jge
fisttp
repnz
fwait
rol
and
fstp
out
sub
sbb
inc
adc
and
mov
test
js
stos
daa
xchg
mul
dec
movs
imul
cdq
push
mov
(bad)
cmp
cmp
push
(bad)
cwde
xchg
xchg
and
(bad)
das
sub
mov
aas
int3
push
cmp
ds
adc
out
add
sti
test
ds
mov
loope
inc
call
sbb
adc
hlt
add
sbb
retf
mov
push
cdq
nop
scas
sub
jp
scas
xchg
fwait
or
xchg
imul
jge
in
pop
jmp
sbb
push
rol
jno
popf
jp
es
cwde
ror
enter
sub
jnp
mov
lods
jp
cli
icebp
(bad)
inc
(bad)
push
sbb
sub
outs
mov
mov
call
xchg
mov
and
sar
outs
cmc
call
xor
add
sbb
call
mov
les
rcl
icebp
push
call
push
adc
mov
fnsave
stos
std
fimul
mov
xor
bndldx
ror
test
cmc
cld
(bad)
cmp
mov
xchg
movs
stos
mov
push
ins
xor
loopne
outs
ins
push
dec
jne
aas
sbb
fstp
test
mov
(bad)
gs
(bad)
and
jno
fnstcw
sahf
cmp
add
xchg
mov
ror
jmp
icebp
push
popa
sbb
pop
aam
out
jbe
cwde
or
cmp
call
jmp
push
fld
sub
cli
repz
adc
in
lock
call
push
inc
mov
dec
add
test
nop
ins
test
sub
iret
or
je
sub
or
xor
int3
adc
call
in
clc
inc
out
aaa
xchg
cmp
inc
or
es
push
dec
adc
add
sbb
call
jae
xor
in
or
inc
sahf
aad
pop
push
xchg
or
mov
xchg
or
dec
inc
aaa
push
fidivr
jae
inc
and
mov
mov
inc
ins
xchg
into
add
cli
(bad)
mov
je
mov
or
mov
and
cmps
adc
movs
loopne
shl
jno
out
push
sbb
push
scas
in
jae
dec
add
test
pop
fisttp
push
mov
imul
inc
fstp
sahf
lods
test
repz
scas
jg
push
inc
gs
mov
jmp
xchg
les
jl
pop
dec
sbb
imul
sbb
adc
lods
retf
in
sbb
inc
or
push
xor
pop
test
push
mov
std
je
or
sahf
mov
xchg
push
cmp
add
icebp
cwde
shr
push
rcl
cmps
aaa
sub
cs
ret
sbb
fs
pushf
retf
jo
inc
hlt
sbb
jmp
xchg
or
movs
hlt
cmp
add
push
retf
xchg
adc
dec
rcl
push
imul
mov
mov
std
sub
retf
inc
and
jge
fisttp
stos
aaa
stos
lds
cli
mov
inc
cmc
mov
inc
scas
xchg
mov
mov
ret
pop
fcmovbe
(bad)
loop
pop
(bad)
mov
cli
pop
mov
(bad)
aam
pusha
mov
icebp
cld
leave
js
loopne
xchg
push
mov
mov
enter
jmp
add
dec
pop
iret
adc
(bad)
fwait
lods
pushf
ror
in
mov
xor
popa
dec
(bad)
lahf
jmp
sbb
inc
inc
inc
add
inc
std
or
ror
push
scas
dec
xchg
jbe
push
pop
in
xor
cmps
pop
daa
add
bound
cmp
push
and
mov
jno
fwait
sbb
xchg
pop
add
neg
sub
adc
add
es
clc
mov
or
cmp
jne
fcomp
loopne
(bad)
fdivr
jp
mov
and
dec
call
cld
int3
popa
mov
add
pop
faddp
mov
cmp
sti
mov
and
or
ret
test
or
je
imul
not
popa
stos
xor
mov
sbb
sub
rol
xchg
mov
inc
jo
(bad)
jge
sbb
or
sub
push
push
mov
jmp
pop
aas
and
fwait
mov
sar
cli
cmp
jge
pop
ror
fdivr
xor
je
inc
cmp
xlat
inc
sti
fwait
mov
mov
xor
jne
and
ins
xor
jbe
pop
sub
cld
push
movs
lea
lahf
cld
aaa
jmp
jbe
fisub
jbe
xchg
aad
cmps
cmps
rcr
stos
adc
scas
stc
arpl
jmp
retf
iret
jp
jl
dec
popa
pop
mov
sahf
movs
pushf
leave
ficom
adc
(bad)
sub
pop
jl
jae
ror
push
repz
(bad)
sub
sub
sub
push
jbe
add
mov
dec
icebp
sub
rol
cmp
ficom
outs
lods
add
out
(bad)
cld
dec
sub
mov
mov
dec
push
int
aam
mov
mov
dec
push
mov
ror
inc
lock
pop
js
jno
mov
inc
fadd
mov
or
mov
sub
or
aaa
shr
(bad)
fisub
test
jmp
cld
mov
enter
cmp
xchg
into
pop
and
rcr
or
mov
jbe
loope
inc
adc
je
push
sub
sbb
xor
mov
(bad)
scas
pop
pop
fisub
movs
clc
push
scas
add
fs
into
jbe
add
mov
lods
xlat
dec
or
mov
inc
mov
sbb
fimul
les
fild
sbb
jo
ins
and
ror
loope
clc
out
ficom
sub
jne
pop
add
add
add
hlt
sbb
xchg
retf
jge
pop
sbb
movs
call
push
push
mov
sahf
mov
push
hlt
idiv
push
into
addr16
pushf
or
jo
daa
add
scas
adc
scas
test
inc
pop
icebp
fisttp
call
nop
ror
pop
or
gs
inc
jno
sbb
mov
cmp
xchg
in
adc
ficom
xchg
add
mov
xchg
inc
mov
fwait
add
mov
fsubp
xor
out
and
or
jle
lahf
pop
add
jmp
mov
mov
xchg
es
pusha
stos
mov
pop
rcr
xor
jo
das
mov
jg
sub
loop
xchg
int
cmp
or
in
xchg
mov
push
inc
push
pushf
nop
scas
inc
jo
sbb
or
call
pushf
fild
ins
sti
push
xchg
push
cmp
jmp
add
xchg
in
pop
lods
inc
mov
mov
or
shr
clc
pop
cmp
stos
icebp
mov
rol
or
jmp
pop
inc
sub
jge
xor
xor
(bad)
ror
das
sub
jo
inc
sub
sub
aas
mov
xor
inc
adc
test
add
rol
jbe
test
imul
push
mov
pop
sbb
stos
call
dec
xor
call
sbb
aaa
nop
or
jae
pop
xor
and
(bad)
rcl
lahf
popf
add
loopne
mov
js
adc
pop
or
pusha
sahf
punpcklbw
es
mov
shl
enter
mov
cmps
in
pop
mov
xor
neg
mov
adc
(bad)
outs
sti
cmps
je
ins
out
push
lea
mov
mov
leave
mov
mov
gs
jb
jcxz
xor
(bad)
mov
mov
pop
cmc
push
pop
arpl
mov
mov
(bad)
pop
shl
bound
mov
iret
and
inc
or
sbb
shr
add
dec
fsubr
sub
cmp
sbb
cmp
(bad)
in
stc
rcl
add
add
push
leave
out
pop
clc
outs
retf
cmps
or
xor
jo
rcl
sbb
pop
xor
cmps
loope
inc
scas
rol
out
inc
mov
into
icebp
jbe
or
shl
data16
in
imul
imul
sbb
adc
jg
sub
data16
scas
jp
add
and
xchg
adc
inc
stc
xor
cmp
cmps
jae
lds
(bad)
out
loope
test
sbb
mov
or
add
cmp
xor
movs
popf
leave
cmp
iret
mov
mov
sbb
sbb
xor
ret
sub
sub
mov
bound
sub
inc
mov
hlt
jbe
pop
mov
fcom
or
jmp
adc
xor
mov
jns
cmp
lds
inc
dec
loop
shr
jne
stc
adc
push
mov
and
pop
lock
sbb
scas
cmp
mov
push
mov
loope
adc
sub
sbb
jbe
lahf
mov
mov
mov
pusha
jnp
mov
fnstenv
sbb
cli
mov
es
pop
xor
jns
push
cs
int3
sar
nop
mov
cwde
jecxz
outs
stos
adc
shl
mov
cmp
xchg
adc
mov
retf
adc
lea
into
mov
je
outs
push
push
push
pop
scas
xchg
div
add
sbb
out
sahf
pop
daa
push
adc
push
xor
sub
or
mov
cmp
jmp
inc
or
jmp
retf
and
imul
ja
pop
into
jbe
push
jp
jne
push
adc
or
out
add
cmp
sub
add
push
push
push
ret
inc
jmp
cmps
mov
sbb
ja
pop
jmp
and
jno
and
out
shl
aam
es
fisub
push
popf
clc
push
xchg
push
jae
jp
outs
inc
add
xor
out
mov
loop
pop
sub
(bad)
cmps
pop
pusha
jmp
adc
xor
inc
or
jg
fst
iret
popf
out
jp
lods
movs
retf
xor
jno
jno
test
movs
or
xchg
jp
jp
mov
stos
sub
dec
mov
mov
test
fwait
push
retf
out
jge
adc
jmp
int
loopne
lock
sbb
inc
sbb
data16
push
enter
rcr
test
sub
mov
sbb
retf
popa
cmp
and
dec
out
int
retf
jmp
or
xchg
mov
aad
xchg
clc
rcl
add
es
adc
loope
loope
fwait
and
mov
xchg
popa
or
pop
outs
xor
ja
setb
mov
lea
mov
jno
mov
lods
sahf
pop
mov
and
rcr
std
adc
add
sar
inc
sbb
xchg
shr
xor
push
jg
call
enter
pop
or
dec
add
cmp
add
imul
push
leave
clc
xor
inc
(bad)
das
cmp
pop
adc
xchg
ja
or
test
fnstenv
mov
inc
dec
ss
cwde
jmp
shl
outs
js
stos
and
ret
retf
add
sar
ficom
loop
(bad)
push
jle
pushf
push
pop
xor
mov
add
test
icebp
aaa
adc
jg
push
cs
je
push
sub
push
mov
mov
nop
xchg
(bad)
aaa
daa
sbb
jno
pop
jg
int3
imul
push
jmp
mov
out
ins
jno
fxch
icebp
(bad)
inc
jae
mov
sbb
in
sbb
mov
repnz
jecxz
ret
inc
outs
clc
popf
or
pop
add
inc
das
inc
add
out
int
xlat
xlat
cwde
repz
push
xor
js
std
add
or
mov
lds
inc
mov
popa
(bad)
lods
aaa
mov
mov
nop
outs
add
sub
or
outs
out
add
ins
iret
in
mov
and
pusha
push
xor
jnp
lods
fldenv
dec
enter
mov
ret
mov
cwde
mov
mov
sub
jbe
xchg
out
(bad)
(bad)
fnstsw
cmp
retf
outs
sbb
xor
cmp
std
sbb
xchg
dec
int
aas
cmp
or
pop
jl
ror
mov
mov
cmp
xchg
pop
sar
dec
jne
dec
js
aad
dec
into
and
adc
mov
xor
out
mov
out
xchg
add
stos
dec
jno
sar
inc
add
cmc
loope
mov
adc
mov
push
cmovl
dec
cmp
sub
cli
jb
add
sub
or
addr16
fwait
or
mov
or
(bad)
push
stc
cmp
push
les
iret
js
icebp
fdiv
clc
dec
cmps
or
sub
mov
ja
aad
mov
xor
(bad)
mov
sub
daa
les
add
jnp
in
in
mov
push
xor
push
sub
test
or
xor
ror
icebp
pop
add
icebp
in
lea
dec
stc
jmp
cmps
mov
dec
xchg
or
mov
cmp
push
(bad)
fiadd
fpatan
movs
aas
or
inc
or
outs
std
imul
jl
icebp
(bad)
pop
enter
cs
xchg
aad
push
xor
outs
jno
sub
push
jp
push
stc
adc
adc
icebp
popa
(bad)
jl
mov
fistp
out
jo
mov
xchg
int3
int3
inc
rcr
jl
test
fiadd
in
mul
adc
and
or
mov
inc
adc
(bad)
pop
enter
add
mov
push
or
aad
lahf
std
imul
jmp
add
cmps
xchg
xor
sub
nop
ror
add
scas
and
dec
pop
mov
add
mov
into
call
dec
out
jmp
dec
push
push
lods
outs
fdivr
jp
inc
xor
lea
lods
addr16
sbb
or
jne
pop
rol
mov
nop
mov
arpl
retf
add
test
and
arpl
icebp
push
test
test
fidivr
comiss
push
mov
lahf
or
dec
icebp
mov
inc
mov
pop
xor
ss
stos
test
ja
out
cmp
sbb
sti
je
sub
inc
mov
movs
cmp
mov
push
ss
repz
ins
daa
push
pop
xchg
aam
ja
cli
rol
jb
inc
ds
fisubr
xor
(bad)
sub
mov
daa
dec
inc
aam
xor
mov
add
mov
jno
add
pushf
push
rol
fisttp
jo
mov
retf
sub
sub
icebp
pop
lea
icebp
cmps
pop
gs
cmp
and
pop
xor
xor
les
mov
fild
mov
add
aad
xchg
dec
xchg
push
xchg
and
stos
popf
out
call
loop
add
jo
mov
enterw
sub
je
push
popf
(bad)
leave
lock
sbb
dec
rcl
pop
stos
fild
inc
pop
cli
jg
pop
or
in
push
test
jmp
pop
rcl
sbb
pop
mov
push
mov
cmp
sbb
or
sbb
sbb
xchg
mov
cmps
mov
cli
or
jbe
shr
pop
add
adc
mov
push
adc
sub
sbb
jmp
ins
xor
sub
sbb
and
xchg
cli
lods
sub
cli
add
shr
or
inc
or
dec
jmp
ret
(bad)
lea
cli
mov
push
push
mov
retf
mov
or
int3
mov
sub
or
add
or
push
ins
mov
jbe
les
imul
cmps
aas
cli
xor
mov
jnp
sbb
mov
mov
fsub
je
clc
cmp
mov
dec
fistp
inc
into
lea
pop
add
movs
rcl
std
test
jge
add
sbb
ds
add
call
or
fistp
xor
test
in
pop
outs
jno
jb
and
or
mov
test
sbb
sub
data16
imul
push
popf
fcmovnb
push
mov
test
lea
es
data16
and
pop
cli
inc
xchg
(bad)
push
add
dec
aam
mov
mov
pop
mov
sub
mov
inc
pop
in
cdq
inc
sbb
cmps
pop
push
adc
fwait
ins
pop
shr
cmps
fnstsw
cmp
mov
lahf
popa
and
lods
inc
sub
mov
jo
mov
(bad)
dec
ds
test
shr
add
adc
pop
inc
push
cwde
icebp
sbb
xor
push
add
cmp
jno
icebp
inc
or
lock
pop
hlt
imul
movs
or
cmp
jl
cld
jle
jb
lods
jb
rcr
stos
dec
mov
es
push
loope
in
mov
pop
pop
dec
int
jp
lahf
stos
loope
push
test
push
dec
cli
jno
mov
retf
mov
retf
push
mov
inc
or
cwde
std
cmps
cmp
mov
mov
lods
out
dec
add
sub
mov
and
cli
popf
mov
mov
add
popa
sbb
add
add
rcl
mov
xchg
(bad)
nop
out
jmp
push
jmp
xor
(bad)
aam
mov
adc
mov
(bad)
outs
sti
fisttp
sbb
iret
or
dec
sub
cmp
xchg
sbb
imul
and
ins
pushf
sub
fcomp
cli
sub
xchg
clc
scas
cs
jne
mov
add
out
mov
inc
daa
inc
ss
not
retf
jecxz
mov
fisubr
inc
in
push
mov
popa
in
stos
loope
xor
inc
out
loope
xchg
dec
adc
add
dec
xchg
mov
imul
dec
jle
inc
mov
jp
dec
mov
push
cmp
ss
mov
ja
sar
mov
add
mov
or
jno
jb
adc
jmp
pop
icebp
stos
xor
sbb
mov
and
nop
dec
xor
xor
shr
cmps
add
repnz
push
retf
lea
mov
or
jae
mov
sbb
mov
sbb
lock
jp
add
mov
or
les
pop
adc
stos
sub
mov
xor
push
out
sbb
fisub
fsubr
mov
and
pushf
or
loope
inc
mov
mov
ins
sbb
push
sub
out
dec
rcr
(bad)
cmps
in
or
dec
sbb
sahf
sub
(bad)
les
ja
and
push
xchg
clc
jne
es
pop
pop
dec
xor
(bad)
dec
jge
mov
mov
push
int
out
mov
mov
mov
push
adc
adc
pop
ret
(bad)
shl
sbb
neg
sub
and
push
(bad)
(bad)
(bad)
cmp
adc
xchg
or
adc
cmp
jb
or
sbb
repz
inc
inc
sbb
mov
or
stos
mov
or
test
and
ret
call
adc
add
add
lods
mov
jecxz
rcr
loopne
adc
xlat
mov
cmp
xor
cmp
inc
xchg
mov
movs
popa
sar
(bad)
mov
and
inc
in
jge
dec
mov
dec
or
or
dec
rcr
mov
cmc
data16
xchg
sahf
paddb
mov
movs
jg
and
xchg
lds
xchg
retf
add
or
push
mov
jb
mov
jp
imul
loopne
ins
movs
add
mov
lods
adc
jge
jo
mov
cmps
inc
ficomp
fst
test
jle
mov
cmp
jnp
test
fistp
mov
jge
loopne
mov
(bad)
(bad)
out
movs
jnp
dec
or
cmps
cmp
cmp
cmp
aas
fisttp
push
jo
and
adc
xor
xchg
inc
ds
retf
xchg
xchg
pop
fucomi
mov
jns
imul
fild
sub
cmc
(bad)
adc
in
xchg
mov
out
cmps
push
mov
ja
cmc
xor
daa
je
add
mov
or
xchg
shl
stos
and
mov
mov
jp
into
push
ret
icebp
out
(bad)
sbb
xchg
jbe
ss
outs
enter
xchg
imul
adc
sti
pop
in
cs
rcl
mov
pop
xchg
in
call
push
push
mov
xor
mov
test
hlt
jmp
pop
fist
push
(bad)
cmp
pop
ror
pushf
(bad)
or
loopne
in
clc
fistp
mov
data16
pusha
mov
shl
adc
adc
push
(bad)
fwait
cmp
out
stos
outs
fdivr
(bad)
mov
ins
and
loopne
adc
retf
or
out
sbb
jnp
xchg
data16
ins
push
sub
adc
dec
lods
inc
cmc
leave
jge
mov
pop
data16
dec
jmp
popa
sub
fld
add
xor
outs
or
retf
out
jmp
xor
sbb
xor
xor
stos
fisubr
pop
loopne
iret
addr16
jbe
push
sbb
and
repz
out
ins
cmp
cmp
mov
inc
pop
jno
ins
out
imul
xchg
or
mov
and
pop
(bad)
and
inc
outs
mov
mov
pop
loope
in
xor
dec
sbb
(bad)
fcom
ret
jecxz
mov
out
call
inc
inc
jp
retf
add
(bad)
icebp
rol
mov
inc
adc
idiv
lock
add
rcr
xchg
test
stc
int
(bad)
mov
mov
sahf
add
mov
in
data16
or
repz
in
mov
out
rcl
sub
and
loop
adc
sub
jle
popf
push
sbb
rcr
lods
xchg
mov
pusha
mov
or
adc
cld
and
sub
push
push
in
fistp
adc
aaa
cmps
sahf
(bad)
mov
test
fmul
mov
dec
mov
sub
xor
xor
xchg
sbb
cmc
cmps
out
cmc
jge
es
add
ja
xor
jp
lods
stos
sbb
gs
or
add
(bad)
(bad)
adc
mov
mov
cld
jmp
cdq
jbe
jmp
or
popa
cmp
push
loopne
sbb
xchg
jl
add
fadd
sti
add
jecxz
cmp
int
xor
adc
int
jecxz
inc
push
cmc
sbb
retf
out
push
inc
sbb
cmp
or
repz
push
js
cdq
add
not
sub
xchg
cli
(bad)
jmp
stos
lea
and
add
sbb
(bad)
(bad)
icebp
fwait
mov
fcomp
call
xchg
ja
add
jge
retf
sar
mov
in
test
mov
lods
cmp
mov
int3
sub
scas
cmps
mov
mov
mov
ins
or
and
inc
jns
pop
in
cld
dec
scas
mov
test
mov
std
es
add
pop
pop
xchg
add
jne
es
mov
loopne
(bad)
jmp
jo
lods
or
xor
and
inc
sub
fisub
add
jecxz
shl
ins
mov
adc
pusha
retf
sbb
outs
(bad)
pushf
in
ja
push
mov
(bad)
inc
out
sub
push
jo
cld
out
and
push
imul
xchg
(bad)
fwait
out
jecxz
in
cmps
shufps
addr16
mov
daa
pop
pop
push
inc
ss
fbld
mov
mov
jecxz
cmc
xor
cmp
and
push
in
add
imul
loope
xlat
iret
mov
mov
jp
pop
outs
(bad)
xor
call
iret
cmp
lahf
xchg
cli
xchg
inc
jno
xchg
scas
add
adc
cmp
aas
pop
dec
out
and
adc
ins
aas
mov
push
aad
ret
cmp
in
sbb
dec
or
xor
mov
add
push
cdq
ds
push
outs
pusha
adc
pop
push
pop
xor
sub
int
xchg
xchg
out
mov
clc
push
cmp
sub
fist
inc
jle
(bad)
add
test
mov
cmp
push
adc
xor
dec
xor
mov
aaa
in
ficomp
(bad)
mov
repnz
cld
inc
sbb
dec
or
aas
adc
cmps
cdq
cmc
mov
push
push
inc
push
xchg
out
cmps
pop
fs
dec
icebp
push
jbe
in
dec
nop
mov
push
call
dec
popf
fs
jl
mov
mov
mov
jnp
mov
push
xor
pop
xchg
movs
add
sbb
xor
sar
(bad)
imul
fisub
adc
stos
cmc
fcomp
xor
jns
xor
add
sub
lods
sub
lahf
ror
push
xchg
mov
jp
mov
shl
inc
jne
cli
shl
push
mul
loop
jg
adc
and
push
mov
xlat
fadd
adc
dec
jns
stos
mov
add
inc
hlt
ins
movs
xchg
movs
loop
xchg
push
jg
pusha
int3
fisub
leave
out
and
add
dec
push
in
lahf
call
jmp
push
pop
std
xchg
mov
faddp
ss
dec
or
pop
pop
std
movs
stos
mov
cmps
stc
icebp
and
or
and
retf
add
or
pop
jge
adc
mov
stos
pop
push
lds
dec
fnstsw
sbb
(bad)
(bad)
mov
addr16
xchg
(bad)
rol
sub
test
(bad)
out
mov
pop
pop
jp
inc
mov
pop
and
fucomip
push
les
pop
inc
mov
cmc
xchg
dec
or
ss
movs
xor
fldcw
out
cmp
add
inc
dec
inc
adc
add
dec
sbb
dec
mov
bound
cmp
not
aad
aad
sti
pusha
shr
into
stos
into
aam
shl
mov
lock
call
outs
lods
xor
mov
dec
into
inc
inc
cmp
imul
ror
and
lds
and
xor
hlt
ds
rcl
push
fist
push
stos
loope
push
gs
retf
pop
mov
call
cmps
out
push
jne
ins
hlt
xor
outs
adc
(bad)
out
ins
es
jbe
nop
pusha
mov
or
jge
outs
mov
shl
fwait
jbe
xlat
inc
loope
xor
jl
(bad)
call
sub
(bad)
loop
mov
mov
rcl
fild
cmc
dec
pop
pop
ror
jp
inc
mov
ja
in
addr16
mov
imul
mov
stos
xchg
data16
jbe
add
cs
and
mov
gs
cli
movs
leave
mov
adc
cmc
(bad)
movs
out
mov
jnp
mov
sub
xchg
int
shl
jecxz
fcom
or
adc
ss
call
fnstenv
data16
push
dec
sbb
icebp
cwde
inc
fisubr
push
call
iret
adc
loopne
fwait
rcl
stos
repz
mov
(bad)
js
aaa
mov
jno
inc
dec
mov
mov
fmul
jg
cmp
push
xor
push
sbb
ror
push
sti
in
pop
rcr
xor
loopne
mov
fisttp
cmp
sbb
and
daa
in
sub
fwait
pop
test
(bad)
push
cmp
fs
push
jle
adc
sbb
pop
add
aaa
jp
ins
outs
jnp
push
mov
dec
mov
stos
rol
xor
adc
pop
nop
push
fidivr
adc
jne
jb
inc
jnp
mov
das
sahf
ret
pop
scas
adc
daa
jg
mov
in
jbe
mov
jo
dec
test
and
dec
out
dec
add
scas
sbb
inc
or
ds
adc
adc
or
xchg
test
dec
add
jo
mov
shr
fcom
into
jmp
lods
ficom
scas
inc
mov
sub
mov
dec
aad
cmp
xor
mov
push
add
mov
jp
sub
retf
cmc
popf
movs
push
rcl
fdivp
xor
data16
xor
xchg
cli
sbb
ins
xchg
xchg
aas
das
test
pop
jae
and
pop
and
mov
popf
ins
xlat
out
add
sbb
adc
add
outs
shr
add
adc
xor
push
fidivr
sbb
ja
jbe
imul
jnp
cs
les
nop
fidiv
bound
icebp
fild
retf
pop
xor
jmp
cmps
jmp
jno
jnp
adc
loope
or
fld
mov
stc
sbb
mov
jbe
inc
mov
push
stc
test
out
add
jne
and
daa
es
ss
or
(bad)
inc
mov
(bad)
or
stos
xor
adc
push
pop
shl
into
sub
xchg
sbb
scas
xor
cld
popa
push
jmp
jae
fisubr
movs
fnstcw
ret
lea
inc
push
ja
cmp
pop
or
retf
shld
adc
test
xlat
(bad)
xchg
adc
sbb
mov
ss
shl
popa
aad
mov
mov
xor
fs
or
test
add
(bad)
sub
fmul
(bad)
jbe
mov
dec
adc
enter
pop
call
mul
jo
push
lods
push
xchg
aad
xor
test
icebp
xor
jns
and
jne
jl
jno
xchg
shr
cs
imul
xor
jge
and
dec
cmp
and
xchg
ins
sar
cmp
and
adc
xlat
fwait
inc
loope
(bad)
test
test
lea
push
sbb
mov
mov
cli
push
sbb
pop
inc
mov
dec
mov
daa
jo
xor
into
inc
adc
loopne
mov
xchg
push
cmc
and
ret
xor
repnz
rcr
stos
outs
aam
sahf
xor
add
jecxz
push
inc
das
stc
aad
jo
or
ins
fs
or
dec
leave
retf
xchg
xor
out
inc
call
popa
out
out
inc
mov
dec
test
fimul
lods
jne
add
and
jo
and
adc
dec
mov
loopne
mov
or
popf
ror
add
mov
iret
mov
cmp
outs
xlat
jp
dec
les
jmp
xlat
lahf
inc
jmp
mov
push
cmp
sar
dec
ins
retf
aam
nop
dec
pop
mov
pushf
mov
dec
xchg
and
dec
inc
fnsave
pop
adc
out
lds
sub
jnp
xchg
sahf
cmp
stos
or
cmp
cmp
jo
add
arpl
xchg
jg
mov
pop
add
popf
push
sti
push
mov
gs
add
cmp
cs
mov
(bad)
(bad)
mov
mov
sar
(bad)
sbb
sbb
xor
das
stos
rcl
fs
sub
sbb
bound
add
call
sub
adc
(bad)
push
or
cmc
adc
xchg
das
leave
push
mov
js
not
lahf
sbb
mov
das
movs
call
mov
or
mov
retf
stos
mov
xchg
loopne
stc
pop
scas
outs
data16
push
sbb
movs
(bad)
mov
cmp
not
xchg
fild
shl
scas
inc
out
repnz
ins
push
out
add
data16
mov
rep
cmc
(bad)
in
pop
jbe
xchg
pop
(bad)
das
out
leave
mov
outs
push
stos
jp
push
inc
es
(bad)
pop
stos
ds
outs
data16
push
cmps
sub
mov
outs
retf
adc
or
loop
xor
and
scas
sub
movs
pushfw
lock
sbb
xchg
scas
test
data16
inc
dec
sbb
(bad)
aas
jbe
out
push
rcl
pop
in
cmp
sub
das
cmp
in
adc
je
cmps
out
iret
outs
(bad)
sbb
je
jmp
mov
cmc
adc
pop
and
jecxz
push
stos
adc
lahf
(bad)
sbb
loopne
xchg
inc
stc
int
mov
and
call
and
daa
mov
scas
xor
jns
jmp
data16
dec
ret
imul
pop
outs
not
inc
das
xor
and
mov
out
mov
in
jmp
out
jmp
in
and
or
test
mov
push
sub
imul
ret
dec
aaa
jecxz
les
ja
lods
cmp
mov
pop
out
retf
pop
les
xlat
sti
in
xchg
lods
pop
sub
mov
xor
xlat
cmp
out
push
int3
aaa
ja
add
mov
xlat
dec
loope
test
dec
aas
dec
dec
out
call
sub
and
xchg
inc
repz
(bad)
je
xlat
inc
mov
sub
jecxz
out
mov
xor
out
lods
mov
jg
push
adc
add
push
(bad)
mov
jbe
inc
and
ret
pop
jecxz
lds
(bad)
shl
jle
cmp
aas
retf
pop
les
repz
mov
inc
dec
mov
xlat
emms
jg
add
xchg
fwait
cmp
ins
xchg
and
pop
inc
xor
pop
(bad)
mul
(bad)
mov
aaa
pushf
or
repz
xchg
cmps
add
test
(bad)
xchg
les
inc
fucomip
jecxz
shl
xchg
jecxz
cld
xlat
int3
aaa
sub
mov
stos
xlat
jecxz
dec
ret
and
mov
daa
enter
(bad)
xchg
cmps
pop
mov
aaa
addr16
inc
pop
sti
push
mov
arpl
aaa
inc
xchg
mov
les
sti
cmps
fwait
inc
mov
xlat
xlat
(bad)
(bad)
mov
(bad)
(bad)
out
push
lock
push
push
or
xlat
jecxz
rcl
cmps
fwait
int3
gs
push
lods
daa
jmp
int
in
movs
add
lds
jb
jbe
pop
pushf
inc
enter
mov
test
aad
ss
mov
mov
and
sub
sub
loop
add
mov
mov
(bad)
cmp
and
mov
and
adc
movs
lods
ret
mov
add
dec
mov
test
mov
or
push
sub
mov
sahf
or
sub
mov
mov
and
push
and
pop
inc
es
inc
mov
or
xchg
mov
mov
jmp
or
inc
adc
test
popa
je
push
aam
fsub
inc
inc
push
test
in
sub
or
popa
sub
add
in
(bad)
mov
and
adc
ss
push
adc
cmp
cmp
add
mov
add
or
mov
or
xchg
sub
pop
cwde
or
lods
inc
sub
movs
cmps
pop
lods
add
add
hlt
mov
in
ins
mov
fs
sub
in
jmp
lods
ret
ins
popf
and
add
popa
sub
stos
les
les
sub
cmp
xchg
dec
xor
int3
xchg
int3
cdq
dec
adc
xchg
(bad)
xchg
sbb
nop
pop
call
retf
add
das
lea
sub
fdiv
xchg
mov
mov
(bad)
sbb
jae
xchg
int3
mov
adc
push
aad
xchg
xor
mov
pop
xchg
and
and
xchg
adc
aad
aad
dec
es
sub
int3
fcom
dec
inc
xor
pop
add
gs
nop
sbb
test
xchg
test
adc
leave
push
jo
nop
sbb
push
or
dec
aad
nop
adc
int3
xchg
int3
xchg
retf
xchg
retf
xchg
dec
push
dec
push
dec
push
fadd
xor
stc
add
jmp
fcmovne
xchg
into
pop
add
dec
push
leave
jnp
adc
fcom
xchg
leave
call
aam
mov
mov
add
in
aad
mov
sbb
test
(bad)
call
inc
push
enter
int3
hlt
(bad)
sbb
dec
arpl
adc
add
xchg
ja
inc
jns
outs
adc
cmp
lahf
adc
sahf
dec
sbb
mov
mov
int3
sbb
xchg
(bad)
mov
call
add
es
stos
cmp
cs
cli
sbb
movs
jo
pop
es
imul
adc
stos
cmp
mov
mov
push
fiadd
(bad)
pop
es
gs
fxam
fucomip
push
jmp
mov
xchg
mov
call
cmp
lods
pop
jp
lods
push
and
push
pop
cmp
mov
cmps
stos
sub
fldcw
sub
push
mov
fsubr
adc
fdivr
mov
lods
inc
cmp
adc
adc
test
sub
push
imul
in
mov
jo
outs
lea
loope
mov
sub
fist
pop
(bad)
aad
cmp
push
mov
or
add
aam
lock
ins
push
loop
popa
fldcw
mov
cmp
sbb
xor
je
push
gs
fbstp
mov
iret
mov
jmp
jo
sbb
adc
adc
add
adc
loope
mov
stos
or
xor
mov
push
or
jo
nop
lods
call
mov
push
cmps
fild
cwde
lods
lock
fldcw
xchg
xchg
test
fsubr
jo
adc
fldcw
cmp
aam
mov
adc
adc
lods
aam
nop
sahf
add
add
adc
cdq
mov
cmp
(bad)
stc
fbstp
les
push
pop
jno
(bad)
or
fbstp
(bad)
jle
(bad)
ds
addr16
pop
psrad
lods
xchg
out
(bad)
arpl
pop
jmp
test
arpl
inc
js
fild
mov
adc
aad
pop
pop
xchg
jecxz
sub
or
(bad)
sub
sub
xchg
fild
in
mov
sub
sub
xchg
add
(bad)
mov
or
dec
cmp
(bad)
in
stos
xchg
loope
hlt
push
pushf
fwait
mov
int
jg
mov
addr16
test
mov
jmp
lods
repnz
mov
fwait
push
fwait
movq
xchg
dec
lahf
sbb
xchg
dec
es
sahf
sbb
mov
lods
retf
addr16
and
addr16
push
test
jnp
inc
and
int
aas
sar
repnz
pop
stc
mov
and
pushf
sub
les
push
or
xchg
cmp
xchg
pop
sub
in
js
dec
enter
sub
xor
(bad)
(bad)
stc
jae
(bad)
(bad)
mov
enter
pusha
sub
or
push
(bad)
mov
es
sub
movs
and
jb
xor
sub
mov
push
ret
sbb
idiv
nop
mov
jecxz
xchg
sbb
xlat
pop
sbb
push
data16
mov
mov
(bad)
cs
dec
idiv
inc
iret
pop
mov
mov
or
test
ret
sub
inc
inc
sub
es
xor
xchg
aaa
jle
jle
ss
pop
push
retf
xchg
push
xchg
push
cmp
(bad)
loop
sbb
xchg
call
or
push
fidiv
inc
push
cdq
mov
dec
push
and
nop
or
dec
not
out
loop
ins
mov
test
cdq
inc
or
movs
repz
int
cs
inc
dec
repz
cmps
and
xchg
mov
loop
imul
(bad)
es
pop
loop
adc
cmps
aas
ins
mov
scas
xor
cmp
add
xchg
mov
xor
push
pop
sub
jle
pop
jmp
sbb
mov
out
push
mov
mov
les
out
inc
push
cdq
nop
fisubr
test
cmps
cli
or
sbb
int
ret
mov
cmp
call
mov
dec
test
fisttp
out
sub
fisub
pop
xlat
mov
cmp
inc
push
push
data16
push
xor
shl
icebp
(bad)
shl
xor
pop
push
mov
rcr
dec
inc
sbb
lds
loope
sub
mov
cmp
push
in
jo
(bad)
cmp
xchg
cs
dec
pop
cli
sahf
cmps
mov
test
push
and
es
stos
into
(bad)
sub
mov
pop
addr16
cmps
mov
sets
sub
les
hlt
popa
retf
sub
pop
jle
sub
push
(bad)
add
pop
push
push
sub
call
(bad)
fisubr
pop
loop
out
inc
push
sub
jg
mov
cmps
outs
mov
or
in
shl
sub
ins
and
add
push
mov
cmps
ds
pop
cdq
js
push
jmp
clc
mov
sub
imul
pop
sbb
loope
arpl
popa
out
fdivp
(bad)
cmps
sbb
fwait
rcr
inc
add
fwait
lock
fldcw
inc
pop
ds
and
sub
push
cli
arpl
cmps
sub
aaa
jp
sub
push
pop
test
outs
test
(bad)
xlat
call
mov
ins
add
in
jmp
jb
pop
test
sub
xor
mov
cmp
mov
cmp
cli
push
mov
mov
(bad)
push
addr16
push
mov
cmps
std
outs
push
mov
inc
jb
cmp
jp
jp
ret
pop
jl
cli
pop
mov
mov
xchg
xor
arpl
sub
dec
aas
aaa
jmp
inc
aas
push
retf
jecxz
xor
and
dec
adc
out
ret
mov
mov
out
push
cwde
scas
lahf
cmp
repnz
mov
xor
push
sub
jmp
cli
sub
push
addr16
retf
outs
sub
retf
cmps
addr16
dec
add
dec
out
ret
and
in
jge
inc
mov
ja
xchg
mov
int
adc
add
ins
sub
(bad)
and
sub
icebp
pop
icebp
sub
in
inc
js
dec
pop
mov
dec
pop
xor
and
fsubr
cmps
mov
push
push
int3
mov
mov
ins
pop
lds
add
mov
cwde
in
call
inc
push
lds
shl
call
and
in
ins
inc
or
xor
jmp
fstp
sub
mov
js
dec
in
dec
fdivr
ins
lds
hlt
or
jecxz
inc
enter
xor
dec
jnp
ins
ret
dec
jmp
xor
ret
sbb
cdq
ret
ins
mov
shr
add
jmp
mov
or
and
jecxz
sbb
call
pop
mov
dec
fs
in
aaa
dec
cmp
lds
test
pop
and
xchg
dec
add
inc
xor
out
retf
push
enter
aaa
mov
(bad)
loope
pop
adc
ret
int3
pop
and
mov
mov
inc
call
mov
cmp
and
push
pushf
and
or
ins
and
mov
imul
push
in
into
aaa
in
mov
dec
int3
ret
pop
xlat
enter
popf
mov
xchg
add
push
int3
sub
mov
loopne
cwde
sbb
ins
enter
mov
mov
mov
rol
mov
mov
dec
dec
movs
sub
and
enter
dec
adc
push
mov
fsubr
cmp
adc
idiv
and
enter
pop
mov
xlat
(bad)
loop
mov
dec
pop
sub
sbb
or
icebp
jo
jle
inc
and
sub
nop
xor
(bad)
jo
sbb
cmp
pop
and
adc
cmc
int
(bad)
cld
bound
pop
inc
ins
mov
pop
lock
out
push
sbb
fstp
dec
jo
pop
mov
lods
stc
adc
pop
cmp
dec
sub
repnz
xchg
push
pusha
int
and
xchg
shr
in
in
pop
jmp
cmps
std
cmp
js
pop
jge
push
clc
lea
mov
fmul
sar
or
push
call
js
dec
shl
lods
pushf
fdivr
pusha
js
cmp
inc
sbb
cmp
adc
or
sbb
fisttp
pop
shl
ins
lock
cmp
loop
mov
cmp
int
es
jp
pop
int
sub
mov
mov
(bad)
mov
dec
xchg
shl
jns
clc
mov
adc
xor
rcl
mov
(bad)
rcr
push
or
adc
call
sbb
(bad)
jg
xchg
push
jl
div
jbe
ja
out
push
add
aad
cmp
aad
dec
nop
sbb
ja
xor
mov
out
mov
xchg
shl
fwait
inc
fistp
retf
adc
cld
shl
nop
add
push
out
cli
push
adc
add
push
fwait
inc
jge
popf
mov
adc
add
xor
fcomp
mov
mov
movs
pop
(bad)
sti
inc
stc
out
push
mov
dec
imul
pop
(bad)
in
dec
repnz
cmps
std
rol
mov
lods
mov
mov
imul
xor
(bad)
aas
or
neg
pusha
jle
jb
retf
pop
hlt
mov
push
aaa
dec
movs
mov
aad
mov
xchg
cmp
ds
or
push
mov
xor
not
push
pop
mov
xlat
inc
ficom
hlt
sub
push
xchg
xchg
xor
mov
xor
mov
inc
fs
jne
clc
sub
inc
jae
xchg
fstp
pushf
push
fsubp
(bad)
shl
stc
and
shr
add
push
inc
adc
ins
push
xchg
lock
push
dec
out
loope
and
rcr
push
and
pop
dec
sub
cmp
jns
push
int3
mov
cmps
and
mov
repz
sbb
push
aas
push
test
(bad)
cs
pop
pop
mov
xchg
ficom
jp
pop
pop
mov
pop
pop
pop
cmp
ficom
jp
pop
pop
cmp
ficom
jp
ficom
jp
pop
pop
mov
xchg
ficom
push
cmp
pop
fcomi
test
xchg
int
xor
pop
xor
jecxz
xchg
mov
jp
jbe
pop
iret
repnz
repnz
addr16
xor
enter
mov
mov
jns
pop
xor
(bad)
mov
in
js
jnp
jb
pop
mov
in
in
jp
jle
jl
jae
repnz
mov
(bad)
mov
addr16
arpl
stc
(bad)
xchg
xchg
mov
(bad)
jp
jae
inc
pop
arpl
out
out
xor
js
push
mov
in
xchg
call
jns
and
(bad)
out
popf
in
in
pushw
dec
pop
scas
add
mov
jg
(bad)
retf
xor
sub
cmc
(bad)
aad
xor
inc
imul
add
push
jl
or
xchg
retf
xor
std
aad
movs
(bad)
lods
test
sbb
pop
adc
fcmovb
frstor
ja
or
ss
ss
mov
(bad)
lock
ss
das
push
das
push
out
(bad)
popf
jmp
aas
xor
pop
push
ja
add
push
adc
(bad)
out
cli
sbb
sbb
dec
push
adc
or
xchg
mov
dec
sub
jg
aas
jae
popf
xchg
(bad)
leave
das
and
pop
bndstx
sbb
rcl
xchg
das
or
adc
push
dec
adc
sbb
int3
ret
fldenv
daa
xor
pop
or
xor
call
dec
das
or
push
jg
adc
out
(bad)
sar
and
and
ins
push
inc
push
inc
xchg
xchg
out
sub
mov
(bad)
and
mov
push
sbb
cwde
imul
rol
stos
push
jmp
shl
mov
push
jae
mov
mov
jae
jae
xor
xor
jae
lods
xchg
inc
add
xchg
(bad)
jecxz
lods
xchg
inc
add
xchg
(bad)
jecxz
push
pop
cmp
push
mov
stos
aad
js
xchg
(bad)
(bad)
repnz
mov
stos
loope
xchg
mov
cmps
cmc
fnstenv
test
adc
int
not
call
inc
sub
iret
ret
in
test
mov
sub
out
mov
xchg
jecxz
mov
ss
jecxz
test
mov
or
jecxz
out
xchg
jmp
pushf
retf
inc
push
in
std
stos
xor
lea
cmp
mov
sbb
ss
std
in
pop
inc
sbb
cmp
push
fnstcw
std
mov
movs
jne
inc
aad
sbb
xchg
push
jmp
inc
pop
mov
mov
jo
mov
inc
xchg
mov
loopne
ins
loope
in
ds
mov
xchg
cmc
call
pop
imul
sub
ja
dec
popa
cmp
in
loopne
sbb
add
lea
fnsave
mov
mov
movs
add
dec
xor
push
xor
dec
popa
ds
mov
xchg
inc
hlt
out
mov
test
movs
xchg
retf
push
pop
gs
sysret
jge
fild
inc
mov
in
and
retf
sbb
out
sbb
fist
mov
call
dec
adc
popa
pop
xchg
pop
retf
mov
out
adc
mov
out
shr
mov
out
push
sbb
cmp
and
ret
dec
mov
pushf
mov
in
pop
leave
popa
pop
push
and
adc
aam
std
xor
in
ins
test
ins
sub
bt
sub
shr
or
jmp
les
inc
sahf
icebp
dec
rcr
xor
movs
mov
out
mov
lock
add
in
mov
xor
or
cdq
mov
adc
outs
es
adc
sahf
add
cmp
repnz
out
inc
cmp
shr
jno
jne
xor
rcl
mov
mov
sbb
mov
cmps
mov
mov
jle
sbb
pop
xor
pushf
xchg
push
into
pusha
jmp
mov
sub
nop
dec
and
mov
out
mov
pop
hlt
int
or
sbb
jno
inc
jg
jmp
(bad)
(bad)
pop
xchg
sbb
pop
jb
inc
xor
dec
cmp
std
jnp
cmp
das
imul
sbb
fnstcw
dec
adc
jae
xor
xchg
test
or
adc
test
or
imul
test
adc
dec
out
pusha
stc
popa
test
nop
(bad)
cwde
jmp
adc
rcr
and
push
fs
adc
iret
cwde
dec
add
fbstp
jbe
dec
rcr
(bad)
jae
and
cmp
ins
sbb
pop
add
fadd
(bad)
dec
sub
push
mov
jo
sub
loopne
loope
test
adc
mov
popa
lahf
ror
jmp
lock
jo
and
xchg
pause
je
cli
xor
sub
jg
xchg
adc
pop
repz
and
mov
or
add
in
mov
ret
xor
aaa
inc
mov
inc
push
popa
test
mov
movs
movs
jno
xor
mov
inc
and
test
(bad)
dec
jge
adc
jmp
push
das
add
mov
and
jle
fidivr
fwait
ss
jns
xor
rol
div
inc
cmp
push
adc
and
test
ret
fs
ror
dec
mov
out
loopne
inc
aad
pop
push
movs
(bad)
int3
sar
mov
add
rol
jg
div
mov
mov
xor
popa
pop
cmps
shl
stos
mov
daa
cmp
jl
inc
inc
mov
xlat
out
rol
aad
inc
sbb
leave
mov
mov
rol
ja
jle
cmp
daa
dec
mov
je
and
inc
jno
and
aam
fwait
pop
(bad)
rcl
xor
mov
mov
inc
add
lock
inc
mov
push
dec
in
cmp
pop
sub
xchg
arpl
stos
(bad)
or
je
push
fild
daa
ja
mov
cmp
or
popf
push
shl
and
xchg
lock
mov
hlt
jae
sub
js
jecxz
adc
popa
pop
movs
jns
xrstors
in
adc
xchg
adc
(bad)
adc
mov
(bad)
push
jmp
lea
mov
ret
mov
cld
mov
dec
xor
mov
jecxz
rol
sub
inc
stos
add
lea
push
or
push
scas
push
mov
aas
je
lods
pop
mov
bndstx
pop
push
adc
adc
repz
mov
adc
push
(bad)
jno
fnstsw
mov
lahf
sbb
sbb
sub
cmp
pop
adc
stos
add
aas
sbb
loopne
jno
adc
xchg
setno
xchg
push
call
lods
push
xchg
xchg
in
outs
sbb
xor
adc
push
cmp
fwait
lock
test
out
int3
add
aam
cmp
xor
sahf
fmul
js
adc
mov
and
retf
sbb
pop
add
fdiv
ja
mov
xor
shl
in
mov
add
push
mov
cmc
jno
js
movs
fcomp
cmp
pop
pusha
jg
pop
jno
pusha
shr
shl
or
sub
add
fnsave
(bad)
cdq
rol
push
lahf
ins
sub
cmp
std
adc
pop
adc
sub
jmp
imul
inc
dec
popa
out
xchg
pop
mov
jge
aaa
add
pop
add
stc
mov
inc
fsubr
jne
add
(bad)
cmp
dec
mov
add
int
stc
mov
cmp
int
cmp
jle
inc
xchg
shr
sub
enter
add
pop
adc
jno
pop
pop
cmps
stc
rcr
outs
adc
and
das
mov
shl
ins
rol
fnsave
and
adc
ror
mov
and
int3
mov
pop
loope
push
jb
daa
add
imul
mov
jg
ret
cmp
clc
loope
out
pop
cmc
mov
cmp
pushf
push
lds
jno
lods
cmp
and
sub
mov
lahf
fcomp
ins
fs
in
out
pop
sub
fnstsw
cwde
fiadd
ja
popf
xor
cmp
aas
xchg
inc
fst
ds
mov
and
lods
sub
shl
cdq
sbb
xor
xchg
mov
jecxz
add
iret
inc
fistp
retf
fsub
jae
popf
retf
mov
repz
xchg
cmp
data16
mov
lods
pop
out
sbb
sbb
cli
adc
jecxz
mov
add
push
addr16
cmc
add
and
pop
push
sti
(bad)
arpl
mov
or
push
cmps
jmp
mov
mov
retf
sbb
push
dec
stos
test
mov
pusha
sbb
retf
outs
inc
sbb
outs
cmp
daa
sar
cld
data16
jl
in
xor
shl
addr16
sub
jge
push
les
add
mov
enter
add
fs
lahf
mov
xor
rcr
inc
jmp
push
shr
cmp
movs
pop
(bad)
es
jge
pop
inc
movs
rcl
lds
jmp
mov
push
fisttp
inc
xor
cmc
push
sbb
fs
ja
xor
cli
sahf
push
sar
mov
addr16
clc
or
(bad)
test
cwde
daa
cdq
inc
inc
mov
aad
clc
inc
je
scas
dec
xchg
sub
sub
mov
imul
out
sbb
test
test
inc
xchg
sbb
test
int
dec
cmp
sub
sub
mov
icebp
mov
test
dec
push
push
sbb
and
push
sbb
mov
enter
or
push
cmps
enter
ror
stos
fcomp
bnd
push
pusha
xchg
mov
adc
outs
pop
mov
push
pop
dec
sti
mov
add
in
enter
mov
adc
pop
enter
jge
test
xchg
data16
push
cmps
xor
into
test
(bad)
push
dec
cmp
int
push
out
or
cmps
push
test
(bad)
gs
mov
loop
xchg
push
or
repz
scas
mov
fucompp
in
cli
mov
sbb
into
scas
mov
xor
hlt
mov
je
inc
push
stos
cmps
in
imul
sub
cmc
mov
dec
out
or
push
dec
in
push
ins
sbb
xor
fld
dec
jecxz
hlt
and
push
repnz
outs
cmp
clc
sbb
in
cdq
das
fdivr
mov
push
jge
inc
cmp
jl
mov
or
dec
dec
bound
jnp
cdq
sar
sub
out
or
mov
arpl
popa
sbb
sub
sti
lods
add
call
mov
retf
mov
mov
or
dec
int3
fidivr
sbb
loopne
adc
push
cmp
mov
ja
xor
cs
mov
retf
mov
cmp
int3
dec
movs
js
mov
sub
clc
lods
scas
pop
sbb
(bad)
adc
sub
jmp
cmp
sbb
or
mov
cmp
bound
and
or
mov
loope
fcom
cwde
das
int3
jae
into
hlt
cmp
aad
lea
sub
jp
jnp
xchg
(bad)
fcomp
cmp
or
jo
xchg
mov
fisttp
stc
test
pop
mov
push
mov
and
mov
int
push
ins
mov
mov
(bad)
jge
out
loope
xor
jmp
mov
jo
fstp
pop
mov
dec
cmp
push
sbb
or
sub
hlt
cmp
mov
pop
xor
(bad)
pop
sbb
outs
std
pop
push
aam
out
pop
int3
in
jb
mov
dec
xlat
mov
mov
mov
and
popf
xchg
mov
test
ds
(bad)
jge
fdiv
jae
sub
out
mov
sub
fst
jno
jge
out
cmp
int3
cmp
fimul
pop
jb
ins
iret
xor
pop
sbb
fiadd
int
std
in
adc
dec
cmp
cmp
dec
fbstp
stos
sar
cmp
add
imul
jb
sub
in
ret
mov
xchg
jl
retf
adc
jmp
outs
lods
out
popa
and
mov
push
lds
rcl
jmp
aam
xchg
inc
pop
in
jo
mov
shl
imul
rol
imul
or
lods
outs
or
stos
enter
jbe
pushf
jl
stos
push
xchg
mov
sub
int3
adc
imul
sub
pop
mov
(bad)
push
xor
xchg
sar
leave
jmp
or
mov
pop
pop
es
ss
int
movs
daa
dec
cmp
dec
loop
and
mov
dec
jl
xchg
cmps
outs
and
leave
jmp
sbb
or
xchg
fild
je
leave
or
retf
cmps
inc
xchg
movs
pop
leave
add
leave
dec
mov
xchg
sar
leave
cld
cmp
stos
jo
(bad)
lds
mov
dec
leave
mov
mov
add
imul
push
arpl
or
jg
outs
push
iret
inc
dec
xchg
push
outs
movs
or
cmps
xor
xchg
xor
lahf
aam
add
ret
mov
loopne
and
sbb
add
add
mov
inc
inc
inc
(bad)
or
xchg
dec
test
push
jb
psubusb
out
or
dec
(bad)
outs
out
shl
cdq
xchg
(bad)
fistp
push
out
jmp
out
push
cs
and
pop
adc
sub
gs
xor
sub
movs
lock
mov
add
jne
sti
mov
push
test
inc
jl
test
test
mov
in
mov
add
imul
gs
and
adc
mov
mov
and
add
not
inc
inc
add
add
inc
arpl
popf
aad
mov
mov
div
cmp
ja
mov
aad
neg
push
xchg
sbb
mov
add
call
add
ja
pop
add
xchg
jne
mov
xor
gs
xor
movs
xchg
mov
test
ret
test
icebp
not
jne
push
sub
add
jo
(bad)
fild
inc
jp
inc
addr16
jbe
mov
jmp
jge
dec
or
lock
out
(bad)
add
mov
push
sub
lds
and
arpl
xor
xchg
int
jecxz
and
or
cmc
shl
push
or
bound
ret
rol
(bad)
mov
xchg
(bad)
and
xor
call
test
out
dec
jle
push
jmp
imul
mov
push
aad
sub
cmps
or
jb
push
mov
cmp
neg
in
jb
xchg
xor
movs
cmp
cdq
outs
inc
mov
bnd
xor
daa
out
adc
nop
shl
add
shl
sub
mov
mov
cwde
inc
cld
mov
and
les
addr16
shl
lahf
push
call
and
data16
xchg
gs
sti
dec
xor
cs
hlt
divps
pop
addr16
clc
mov
out
dec
adc
add
jg
push
in
fwait
sub
mov
xor
dec
shl
cdq
and
xor
push
stos
daa
jmp
(bad)
adc
cmc
pop
pop
ss
inc
rcr
mov
lahf
mov
xchg
in
sub
fisttp
xchg
or
hlt
mov
xchg
cwde
aam
ins
hlt
mov
popf
adc
jne
or
retf
inc
ss
rol
mov
pop
push
ins
addr16
mov
mov
imul
pusha
mov
cld
call
mov
in
push
jle
xchg
jno
nop
xchg
clc
fnstsw
mov
mov
aaa
out
push
push
cmps
fimul
retf
cmps
push
dec
test
hlt
and
lods
cmps
and
data16
repz
push
sar
jmp
ja
inc
push
dec
push
imul
call
inc
push
inc
outs
add
dec
add
(bad)
(bad)
mov
dec
add
pop
pop
dec
add
in
or
dec
popa
or
fs
add
test
inc
cmovb
dec
add
add
mov
mov
dec
add
add
inc
push
inc
in
or
loop
add
add
popa
dec
push
dec
out
les
or
push
or
xchg
xchg
inc
or
add
add
dec
in
les
pop
pop
dec
push
imul
jmp
inc
cmovb
dec
add
or
mov
dec
add
or
or
dec
push
dec
out
(bad)
mov
dec
add
pop
push
or
xchg
xchg
inc
or
add
ins
inc
or
in
or
inc
ins
add
ins
dec
add
mov
(bad)
loopne
add
inc
or
pop
dec
in
cli
xchg
ja
inc
outs
add
outs
inc
push
inc
call
adc
or
add
or
loope
add
retf
mov
jl
in
mov
aaa
push
xor
popf
sbb
loopne
int
out
ficomp
nop
jne
clc
push
daa
mov
int
and
jl
fidiv
dec
inc
clc
push
ret
xchg
neg
or
out
icebp
pop
push
pop
xchg
push
call
cli
aaa
sub
cwde
jp
xor
rcl
and
inc
in
xor
push
sbb
mov
sbb
test
test
push
fst
cmc
mov
out
xor
jle
lds
mov
mov
call
mov
scas
movs
int3
enter
cmps
dec
ds
pop
adc
sbb
mov
cmp
retf
scas
cmps
mov
dec
cmps
push
dec
mov
addr16
adc
push
push
xor
(bad)
test
pop
cmps
addr16
retf
mov
push
ins
mov
call
xor
movs
add
aas
es
add
mov
int
(bad)
xchg
je
mov
enter
test
pop
pushw
out
cmp
sub
cmp
fcomp
or
sbb
mov
cs
fs
mov
push
retf
xor
scas
pop
repz
and
fwait
inc
pushf
add
pushf
icebp
mov
into
aam
call
lea
add
fnsave
(bad)
lods
mov
adc
mov
mov
addr16
mov
sbb
scas
cmc
adc
jb
das
out
xchg
adc
pop
cli
gs
xchg
lahf
sub
(bad)
mov
sub
(bad)
mov
enter
ins
jle
push
(bad)
xchg
lahf
sbb
pusha
mov
out
stos
aas
jmp
test
ja
or
ins
out
test
jne
loopne
cmc
popf
dec
jbe
mov
fcomi
pop
mov
and
cmp
int3
xor
sbb
and
aam
stos
cld
nop
push
adc
pop
mov
loop
out
cmps
push
lds
xchg
inc
or
push
jecxz
jmp
icebp
cmp
and
aas
push
popa
ss
test
(bad)
cmp
push
inc
imul
cmp
in
mov
mov
xor
repnz
or
(bad)
jl
mov
fidivr
mov
inc
pop
int3
scas
cmp
sub
icebp
cmp
pop
pop
mov
mov
or
fs
int
rcl
ficom
dec
sahf
mov
aas
les
inc
pop
adc
xchg
in
lods
jo
pusha
lds
adc
jmp
scas
mul
mov
xor
shr
xchg
mov
(bad)
scas
lock
sar
out
movs
neg
inc
inc
mov
push
stos
test
cli
ret
dec
cmp
pushf
aam
jp
fs
rcr
stos
inc
pop
(bad)
in
mov
mov
pop
mov
sub
cmp
es
xlat
mov
pop
test
push
xlat
adc
popa
xchg
cmp
push
std
outs
iret
outs
and
adc
pop
aad
cdq
mov
mov
pop
rcr
push
pop
mov
jae
jmp
and
inc
mov
fisub
scas
cmp
bound
daa
cld
stc
mov
cmps
push
add
sub
les
xor
daa
sub
jp
(bad)
mov
retf
test
or
jne
jb
add
fs
jmp
inc
mov
jmp
stos
mov
inc
lods
cwde
adc
call
add
mov
fiadd
xlat
mov
shl
or
mov
shr
jo
test
fistp
in
add
int3
pusha
jae
sbb
adc
jg
cwde
ds
mov
(bad)
sbb
xchg
loopne
aam
rcr
jmp
pop
push
lods
cmp
(bad)
aas
pop
cmp
movs
mov
mov
scas
adc
movs
rol
aaa
cmp
sbb
jp
jmp
lahf
mov
and
nop
jnp
sti
adc
outs
pop
in
mov
xchg
call
add
int3
jge
xchg
arpl
rcl
es
xor
fst
jl
jl
mov
neg
loop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
imul
cmps
imul
cmps
imul
cmps
imul
cmps
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
mov
loop
dec
add
add
add
outs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
jg
jg
jg
lods
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
cld
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adc
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
ficomp
frstor
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
cmp
or
imul
mov
xchg
add
in
or
(bad)
leave
and
(bad)
mov
popa
retf
dec
sub
xor
or
dec
cmp
adc
ror
loopne
inc
test
lods
adc
pop
ret
push
jne
push
push
enter
jg
fsubr
or
pop
addr16
sbb
jge
jnp
jo
pop
je
mov
cwde
push
stos
loop
mov
pusha
xchg
cmp
daa
mov
sti
movs
and
xchg
sub
ss
test
mov
sub
out
test
pop
or
ins
xor
daa
jo
sar
push
mov
dec
dec
jno
dec
sbb
(bad)
sti
push
test
xchg
cmp
cmp
lahf
popf
sti
test
sti
icebp
cmps
jns
hlt
idiv
loope
jmp
in
int
call
ja
xchg
ins
inc
xor
dec
add
scas
push
lds
stos
push
and
sbb
lds
shr
popf
mov
js
dec
push
mov
mov
mov
movs
test
ror
or
int
or
stos
xchg
js
mov
jl
nop
adc
jne
fst
outs
mov
adc
sti
shl
inc
lahf
pop
or
pop
sar
push
pushaw
fcom
xor
dec
or
push
fadd
(bad)
movs
lods
and
fs
std
daa
movs
dec
loopne
mov
cld
lods
pusha
mov
xchg
xchg
loop
das
sub
mov
das
xor
out
xchg
pop
test
popf
popf
sub
out
mov
push
add
mov
ss
cmp
repz
not
xor
loop
repz
pop
lock
ret
ds
xchg
dec
add
shr
mov
sti
fsubr
loopne
imul
mov
(bad)
dec
xor
leave
jle
lods
mov
mov
ja
or
lds
xchg
sub
mov
pop
cmp
inc
adc
inc
push
sahf
cmp
and
add
sub
sbb
cmc
push
fdiv
sub
fwait
aas
fwait
imul
(bad)
adc
pop
dec
in
xchg
or
lock
push
cli
mov
rcl
fwait
xchg
sbb
xchg
push
push
das
icebp
mov
ins
lods
clc
xlat
jo
cld
shl
sub
gs
test
out
mov
daa
xlat
add
movs
fisubr
fisubr
and
fst
loop
add
mov
leave
jle
ds
adc
jge
mov
out
stos
int3
sar
(bad)
pusha
ss
jno
neg
pop
inc
jne
sbb
xor
je
mov
ret
xor
cdq
nop
mov
lea
imul
leave
push
inc
out
dec
repnz
dec
dec
sub
or
pushf
ror
and
jnp
pusha
inc
jg
inc
add
pop
shl
xchg
push
inc
ins
xchg
xor
and
lds
dec
fwait
adc
pop
adc
xor
sbb
cmp
pop
push
pop
push
sbb
sqrtps
push
xor
popf
adc
mov
xchg
and
int
and
jmp
sub
jns
test
rcl
sub
mov
push
lods
(bad)
adc
ror
imul
jl
out
fcmovnb
retf
mov
out
lock
sbb
loop
sbb
mov
daa
stc
les
mov
lea
cmp
aad
mov
sahf
mov
lods
call
push
or
xor
ins
data16
fidivr
mov
mov
div
rol
add
jg
add
loope
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
in
add
repnz
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
fiadd
add
fadd
add
mov
add
add
add
add
add
add
add
rol
add
pop
add
test
add
loopne
add
xor
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
fld
add
outs
add
add
add
add
add
add
add
lods
add
add
add
jno
add
test
add
add
add
stos
add
add
add
or
add
movs
add
add
add
add
add
add
add
add
add
add
add
jp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
jb
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
ja
add
stos
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
push
add
adc
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
dec
add
add
add
pusha
add
add
add
add
add
cmps
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
arpl
add
xor
add
mov
add
popa
add
add
add
call
add
add
add
add
add
jbe
add
out
add
lea
add
sbb
add
cli
add
add
add
test
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
pusha
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
loopne
add
sub
add
out
add
test
add
into
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
mov
add
inc
add
add
add
add
add
sahf
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
lea
add
rol
add
inc
add
add
add
imul
add
test
add
add
cmps
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
leave
add
add
add
add
add
add
add
xchg
add
ins
add
add
add
add
add
add
aam
add
scas
add
add
add
add
add
push
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
retf
add
add
add
add
add
test
add
fiadd
add
jb
add
lds
add
inc
add
add
add
add
push
add
add
add
ins
add
add
add
add
add
add
add
or
add
add
add
ins
add
add
add
ror
add
add
push
jae
add
pop
add
clc
or
or
mov
ror
test
dec
add
dec
add
lds
in
dec
add
dec
add
dec
add
dec
add
add
add
add
add
cs
inc
push
inc
inc
outs
ins
fs
popa
arpl
addr16
inc
add
add
mov
ror
mov
ror
mov
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
add
add
add
cs
inc
push
aas
and
dec
popa
jo
push
aas
and
push
je
imul
push
aas
and
je
push
jb
imul
push
aas
and
push
je
inc
push
push
inc
pop
push
inc
inc
push
dec
inc
inc
inc
inc
inc
inc
push
dec
inc
inc
push
inc
pop
push
dec
inc
inc
dec
inc
inc
add
add
cs
inc
push
inc
dec
je
ins
inc
imul
add
add
add
cs
inc
push
inc
inc
dec
je
ins
inc
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
jbe
outs
je
imul
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
inc
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
add
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
test
(bad)
push
loope
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
in
dec
add
add
add
add
inc
dec
dec
add
add
add
add
add
add
cs
inc
push
inc
push
je
imul
jns
inc
add
(bad)
(bad)
(bad)
call
add
cs
inc
push
inc
inc
dec
je
ins
inc
outs
outs
je
outs
ins
push
imul
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
ins
gs
outs
je
jbe
outs
je
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
jb
ja
gs
outs
outs
je
outs
ins
push
imul
xchg
jne
add
add
add
aas
inc
push
dec
inc
outs
arpl
jae
push
dec
dec
popa
outs
fs
gs
inc
add
add
add
outs
add
jae
je
outs
add
imul
add
add
add
add
outs
jae
add
add
popa
outs
add
ins
outs
add
add
add
add
add
add
add
test
dec
add
test
dec
add
test
dec
add
test
dec
add
test
add
test
dec
add
test
jb
add
loopne
jo
ja
add
add
ins
outs
add
add
add
xor
add
jg
add
add
add
add
test
enter
mov
test
ins
test
inc
test
sbb
dec
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
cmc
dec
add
dec
add
cmc
dec
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
cmc
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
add
(bad)
push
fimul
leave
(bad)
aas
add
add
add
lock
or
or
add
or
add
or
add
or
add
add
nop
imul
imul
add
add
add
add
stos
dec
add
add
stos
dec
add
outs
jae
add
add
test
add
stos
dec
add
popa
outs
push
add
add
add
add
dec
add
add
stos
dec
add
add
add
add
xor
add
add
add
add
add
dec
add
ror
ror
ror
test
add
test
add
test
add
ror
ror
test
add
test
add
aas
pop
add
add
add
add
add
add
or
add
jo
add
mov
add
add
add
add
add
add
or
add
add
add
out
aas
add
add
add
lock
add
add
add
lock
add
add
add
aas
add
add
add
loopne
add
add
add
(bad)
(bad)
(bad)
jg
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
dec
add
dec
add
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
dec
add
leave
dec
add
dec
add
dec
add
dec
add
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
retf
and
dec
add
retf
(bad)
retf
jbe
dec
add
retf
ret
add
retf
loope
dec
add
retf
push
retf
dec
add
retf
dec
add
retf
dec
add
add
pop
add
add
add
add
xlat
mov
or
add
add
dec
or
sbb
xchg
std
aas
add
add
add
loopne
add
jo
add
mov
test
add
loopne
add
jg
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
adc
add
lods
dec
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
dec
add
add
add
add
dec
lods
dec
add
lods
dec
add
add
add
dec
add
add
add
add
stos
dec
add
add
add
add
sub
add
add
add
dec
add
add
add
lods
dec
add
mov
add
in
dec
add
add
add
lods
dec
add
add
add
mov
add
shl
add
adc
add
lods
dec
add
add
add
mov
add
enter
and
add
les
add
mov
add
add
mov
dec
add
mov
dec
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
and
add
pusha
add
add
add
nop
add
or
add
inc
add
or
add
add
loopne
add
clc
add
adc
add
adc
add
sub
add
add
add
add
add
add
adc
pop
add
add
add
pop
add
or
add
jo
add
mov
add
mov
add
add
add
add
add
or
add
call
add
add
add
adc
add
sbb
adc
add
xor
adc
add
dec
add
adc
add
pusha
add
adc
add
add
nop
add
adc
add
test
add
add
add
add
add
add
add
add
add
add
adc
add
fadd
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
data16
add
add
add
js
add
add
add
loopne
add
add
add
add
add
add
adc
add
add
clc
add
add
xor
add
push
add
add
add
add
push
add
adc
add
dec
pop
add
add
add
add
cwde
pop
add
mov
add
enter
adc
add
loopne
add
clc
pop
add
adc
add
sub
add
inc
or
sbb
add
pop
or
sbb
add
add
mov
add
mov
add
add
add
add
add
add
add
arpl
add
mov
add
add
add
add
add
add
sldt
jns
add
or
adc
add
call
jns
add
or
sbb
add
sbb
add
xor
add
dec
or
sbb
add
pusha
or
sbb
add
add
nop
or
sbb
add
test
add
ror
and
add
fmul
add
lock
and
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
js
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
adc
add
mov
add
cwde
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
fmul
add
call
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
sbb
add
adc
add
sub
add
or
add
push
add
add
add
add
add
add
add
or
add
pop
push
add
adc
add
push
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
fsub
add
in
add
add
add
nop
mov
add
in
add
add
add
les
add
in
add
add
add
clc
movs
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
enter
xor
add
in
add
add
add
cld
stos
or
add
add
add
add
add
lods
or
add
add
add
add
add
add
add
in
add
add
add
cwde
scas
or
add
add
add
add
add
scas
or
add
add
add
add
add
mov
add
add
in
add
add
add
xor
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
mov
or
add
add
add
add
add
or
add
add
add
add
add
fmul
add
add
add
add
add
fisttp
add
add
add
add
add
or
add
add
add
add
add
fimul
add
add
add
add
add
fisttp
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
in
or
add
add
add
add
add
or
add
add
add
add
add
test
in
add
add
add
mov
pop
add
in
add
add
add
nop
push
push
add
pop
add
in
add
add
add
fs
push
add
add
in
add
add
add
fcom
push
add
pop
add
in
add
add
add
movs
sbb
add
add
in
add
add
add
sbb
push
add
add
in
add
add
add
xchg
sub
add
add
in
add
add
add
or
push
add
add
add
add
add
or
push
add
add
in
add
add
add
add
sub
add
in
add
add
add
lods
dec
push
add
add
in
add
add
add
fmul
add
add
in
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
pusha
pusha
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
in
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
in
add
add
add
inc
xchg
push
add
add
in
add
add
add
mov
add
add
add
add
pop
popf
push
add
add
add
add
add
popf
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
stos
push
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
in
add
add
add
pop
mov
add
add
add
add
add
add
add
in
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
ins
mov
add
add
in
add
add
add
xor
in
add
add
add
xchg
mov
add
add
in
add
add
add
test
push
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
add
add
in
push
add
add
in
add
add
add
clc
mov
add
add
in
add
add
add
or
push
add
add
in
add
add
add
and
add
in
add
add
add
xor
push
add
add
in
add
add
add
dec
mov
add
add
in
add
add
add
pop
mov
add
add
in
add
add
add
jo
push
add
add
in
add
add
add
int3
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
add
pop
add
add
add
add
add
sbb
add
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
pop
dec
push
pop
inc
push
pop
inc
push
add
rcr
inc
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
shl
jg
jo
inc
clc
add
sar
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
pop
add
add
add
test
add
leave
dec
add
test
dec
add
or
add
rol
add
cmp
add
add
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
inc
add
inc
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
(bad)
inc
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
clc
jg
push
aas
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
ud0
loopne
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
adc
add
add
xchg
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
jg
(bad)
cld
aas
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
ud0
pushf
pop
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
cld
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
add
and
add
mov
add
and
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
jg
(bad)
clc
jg
push
jg
jmp
jg
inc
jae
inc
inc
(bad)
inc
inc
(bad)
inc
jae
jmp
jg
push
jg
(bad)
clc
jg
(bad)
cld
jg
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
inc
adc
add
add
and
add
sbb
add
add
add
add
or
add
add
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
inc
repz
inc
ret
(bad)
inc
cmp
out
(bad)
(bad)
inc
(bad)
(bad)
cld
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
sbb
add
and
add
inc
add
and
add
and
add
sbb
add
add
and
add
and
add
adc
add
or
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
dec
ret
(bad)
inc
cmp
inc
ret
(bad)
inc
out
inc
jg
inc
aas
(bad)
inc
pop
(bad)
inc
ud0
rol
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
cld
add
and
add
add
add
add
add
add
add
add
add
add
test
add
add
inc
and
add
add
and
add
sbb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
jmp
add
push
add
(bad)
clc
add
(bad)
cld
add
(bad)
inc
(bad)
jmp
add
inc
cmp
add
(bad)
inc
repz
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
inc
or
add
add
inc
and
add
add
inc
add
inc
add
add
add
inc
dec
add
dec
test
add
add
pusha
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
jg
inc
iret
(bad)
inc
add
dec
xchg
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
or
add
add
nop
or
add
or
add
mov
or
dec
adc
adc
or
adc
or
adc
add
mov
add
or
adc
add
or
add
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
repz
dec
lock
dec
lock
(bad)
aas
clc
push
jo
lock
pavgb
adc
loopne
adc
lock
psubb
jo
cld
(bad)
aas
dec
lock
(bad)
(bad)
dec
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
cld
add
rol
add
add
add
inc
and
inc
inc
adc
inc
and
adc
or
adc
and
inc
add
inc
add
add
cld
add
and
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
(bad)
aas
cld
(bad)
(bad)
aas
cld
jg
aas
cld
aas
clc
ds
lock
pavgb
sbb
loopne
sbb
lock
psubb
jl
cld
aas
cld
aas
(bad)
aas
cld
jg
aas
cld
(bad)
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
idiv
dec
repz
dec
lock
dec
lock
push
jo
clc
or
pop
clc
or
pop
cld
push
jo
dec
lock
(bad)
(bad)
dec
repz
(bad)
out
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cld
(bad)
(bad)
aas
cld
jg
ds
clc
cmp
pop
clc
cmp
pop
cld
ds
(bad)
aas
cld
jg
aas
cld
(bad)
(bad)
mov
(bad)
(bad)
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
(bad)
cwde
add
add
add
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
and
add
or
add
add
add
add
add
fadd
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
mov
mov
add
(bad)
(bad)
(bad)
(bad)
dec
clc
xchg
ja
add
add
mov
lock
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
(bad)
inc
clc
xchg
js
add
add
mov
(bad)
push
clc
xchg
ja
add
add
mov
(bad)
(bad)
(bad)
clc
xchg
ja
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
add
js
js
add
xchg
add
add
add
js
xchg
idiv
add
or
(bad)
(bad)
push
jle
jg
inc
js
sub
xchg
out
idiv
clc
add
or
mul
and
stos
jle
jg
push
add
ja
mul
and
cmps
out
(bad)
(bad)
push
or
mul
and
(bad)
(bad)
(bad)
clc
add
ja
imul
and
(bad)
push
clc
add
ja
mul
test
add
ja
jle
and
maskmovq
test
mov
lock
(bad)
jg
add
ja
out
fwait
(bad)
jg
inc
jg
out
add
ja
jle
mov
idiv
jle
ja
or
out
fwait
fwait
xchg
(bad)
(bad)
jp
out
add
ja
out
out
jmp
jg
stos
jle
add
ja
out
out
out
out
jg
push
idiv
add
ja
out
out
out
xchg
(bad)
jg
jp
add
or
outs
outs
outs
outs
call
ja
add
or
loopne
out
out
jg
jg
add
add
ja
(bad)
inc
add
mov
add
ja
(bad)
(bad)
(bad)
inc
add
out
add
add
ja
mov
add
add
add
add
mov
mov
push
add
add
or
mov
ja
add
add
or
clc
(bad)
push
mov
add
add
(bad)
push
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
clc
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
clc
add
add
or
(bad)
(bad)
clc
(bad)
idiv
mov
add
add
clc
jg
push
pop
sar
add
aas
rol
pop
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
add
stos
mov
add
jp
pop
js
ja
js
mov
cwde
js
jp
js
jb
js
jp
js
ja
stos
ja
pop
js
ja
jp
jp
js
js
or
mov
xchg
xchg
mov
jns
ja
mov
mov
add
pop
ja
ja
jp
add
ja
ja
mov
mov
mov
ja
ja
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jmp
add
jmp
ins
jmp
add
add
in
imul
jmp
adc
out
lock
hlt
or
adc
add
out
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
repz
xchg
fst
fstp
(bad)
(bad)
jmp
add
repz
lock
repz
push
or
mov
sbb
mov
fstp
mov
add
or
jne
xchg
(bad)
(bad)
(bad)
fstp
(bad)
or
fmul
or
or
(bad)
scas
add
mov
fcmovnu
fcmovnu
mov
call
fisttp
iret
add
add
mov
(bad)
add
add
repnz
repz
add
add
mov
div
ins
add
add
mov
or
or
hlt
hlt
adc
add
add
fstp
mov
inc
pop
add
add
mov
mov
loope
add
rol
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
adc
scas
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
adc
adc
jmp
or
or
ins
adc
or
or
or
or
or
ins
out
repz
icebp
pop
in
ins
adc
jmp
adc
or
or
or
pop
lock
(bad)
(bad)
(bad)
push
mov
(bad)
fucom
repz
repnz
jmp
or
pop
pop
out
repz
hlt
hlt
(bad)
push
(bad)
mov
(bad)
(bad)
fstp
fucom
hlt
push
scas
inc
adc
or
or
out
out
pop
repnz
or
or
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
push
scas
adc
or
or
pop
out
pop
repnz
or
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
hlt
(bad)
(bad)
push
jmp
icebp
icebp
icebp
hlt
or
push
cs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
adc
mov
mov
jmp
fstp
(bad)
(bad)
(bad)
fstp
fdivp
(bad)
(bad)
(bad)
(bad)
push
jmp
icebp
icebp
loop
push
push
push
sub
(bad)
(bad)
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
mov
fstp
(bad)
call
iret
iret
pop
(bad)
push
hlt
hlt
(bad)
out
inc
test
icebp
loop
pop
pop
push
dec
mov
fstp
fstp
push
hlt
repnz
adc
repz
fdivr
pop
push
mov
fstp
fstp
push
repz
fstp
pop
adc
repz
mov
in
fstp
fstp
hlt
push
mov
mov
fst
(bad)
fnsave
lock
repnz
mov
outs
(bad)
(bad)
(bad)
(bad)
push
(bad)
hlt
repz
(bad)
(bad)
(bad)
mov
or
lock
fadd
cdq
cdq
push
dec
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
(bad)
(bad)
(bad)
(bad)
fsubr
mov
(bad)
(bad)
fdiv
(bad)
push
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jmp
fstp
fstp
(bad)
(bad)
(bad)
iret
in
or
or
mov
fcmovnu
fcmovnu
fcmovnu
(bad)
fstp
fstp
fstp
(bad)
mov
or
or
icebp
(bad)
icebp
loop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
(bad)
push
repz
fstp
fnsave
or
icebp
lock
mov
aam
aam
fcmovu
(bad)
loop
fdiv
or
or
lock
mov
loop
(bad)
fcmovnbe
aam
aam
mov
mov
scas
test
or
or
icebp
repnz
fsub
(bad)
(bad)
(bad)
(bad)
push
repnz
icebp
(bad)
fcmovnbe
aam
scas
inc
adc
or
or
icebp
repz
pop
pop
mov
hlt
hlt
repz
icebp
icebp
mov
or
or
or
or
icebp
repnz
scas
scas
scas
iret
mov
pop
mov
icebp
icebp
icebp
lock
pop
out
or
or
or
or
mov
iret
iret
scas
iret
iret
iret
iret
mov
mov
icebp
repz
repz
adc
or
or
or
or
pop
hlt
hlt
(bad)
fcmovnu
(bad)
fdiv
mov
(bad)
push
hlt
out
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loop
repz
hlt
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
fstp
fucomp
loop
hlt
(bad)
(bad)
in
adc
or
or
or
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
jmp
jmp
or
or
or
or
pop
pop
(bad)
(bad)
fstp
fld
in
mov
mov
or
or
or
or
or
or
or
mov
mov
mov
or
or
or
or
jg
push
pop
sar
add
rol
xadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
ins
ins
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
ins
or
or
or
or
or
or
jmp
ins
ins
ins
jmp
or
or
or
or
or
or
or
or
or
ins
in
icebp
lock
in
ins
adc
adc
ins
or
or
or
adc
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
ins
in
mov
push
pop
in
in
jmp
or
scas
mov
or
fnsave
adc
or
or
or
or
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
adc
scas
mov
fstp
fstp
sbb
hlt
repnz
scas
scas
adc
or
or
or
or
or
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
fdiv
fstp
fstp
sbb
repz
hlt
(bad)
out
scas
adc
or
or
or
lock
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
scas
mov
(bad)
fstp
fstp
fstp
fstp
sbb
hlt
(bad)
push
scas
adc
or
or
imul
idiv
jno
or
call
(bad)
fsubr
(bad)
fstp
fstp
fstp
fstp
sbb
(bad)
(bad)
push
scas
adc
or
or
mov
sbb
sbb
jno
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
push
scas
adc
or
or
or
idiv
sbb
sub
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
out
scas
adc
or
idiv
sbb
cs
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
sub
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fdivp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
out
repnz
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
fst
(bad)
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
or
out
repnz
icebp
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
(bad)
mov
or
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
lock
adc
out
repnz
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
fucomp
scas
in
scas
mov
hlt
hlt
hlt
hlt
hlt
hlt
scas
adc
out
repnz
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
call
scas
sbb
mov
hlt
push
repnz
adc
or
or
repnz
fnstsw
jge
push
push
jmp
fstp
fstp
fstp
(bad)
dec
in
sbb
(bad)
icebp
icebp
icebp
icebp
icebp
icebp
in
adc
or
or
repnz
fnstsw
jge
jns
jmp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
in
adc
or
or
repnz
fnstsw
push
push
push
push
dec
mov
fstp
fstp
fstp
hlt
(bad)
(bad)
mov
(bad)
fst
fstp
fstp
fstp
in
adc
or
or
repz
fcom
push
push
push
push
dec
in
fstp
fstp
sbb
(bad)
(bad)
(bad)
fdivrp
fnsave
(bad)
(bad)
(bad)
fstp
fstp
(bad)
or
repz
fcom
push
push
push
push
dec
scas
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
fst
(bad)
(bad)
(bad)
fstp
fisttp
scas
adc
or
or
repz
or
(bad)
fcom
push
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
mov
in
or
or
out
(bad)
ror
repnz
(bad)
(bad)
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fucomp
adc
or
or
pop
fcmovnbe
ror
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
scas
ins
or
or
or
fcmovnbe
lods
or
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
(bad)
(bad)
(bad)
push
fstp
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
or
pop
fld
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
call
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
scas
in
or
or
or
pop
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
or
(bad)
push
sbb
fstp
fstp
fstp
fst
(bad)
(bad)
scas
scas
or
or
or
or
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
scas
mov
(bad)
push
repz
fstp
fstp
fstp
fst
scas
scas
or
or
or
or
pop
sbb
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
aad
in
hlt
push
hlt
repz
fstp
fstp
fisttp
scas
scas
or
or
or
or
or
lock
repnz
fcmovnbe
aam
aam
aad
fcmovnu
fcmovnu
fcmovnu
fcmovne
scas
out
repnz
hlt
repz
fstp
fnsave
or
or
or
or
mov
sbb
aam
repz
fcmovnbe
aam
aam
aam
aad
aad
scas
scas
mov
fstp
fisttp
mov
scas
in
or
or
or
or
or
or
mov
sbb
fcomi
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
mov
scas
scas
scas
scas
scas
or
or
or
or
or
or
or
or
(bad)
push
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
adc
or
or
or
or
or
or
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
repz
icebp
icebp
icebp
lock
ins
adc
jmp
or
or
or
or
or
mov
mov
mov
pop
lock
hlt
hlt
repz
icebp
icebp
icebp
lock
or
or
or
or
or
mov
scas
scas
scas
scas
scas
scas
in
in
mov
pop
pop
lock
icebp
icebp
icebp
lock
out
or
or
or
or
or
or
or
scas
scas
scas
scas
in
in
in
in
in
in
in
in
mov
mov
pop
icebp
repnz
icebp
icebp
icebp
lock
or
or
or
or
or
or
or
repnz
in
in
in
in
in
in
mov
mov
mov
lock
hlt
hlt
hlt
repz
adc
or
or
or
or
or
pop
repz
fcmovnu
(bad)
fmul
mov
mov
mov
mov
mov
mov
hlt
(bad)
(bad)
push
hlt
hlt
out
adc
or
or
or
or
or
repnz
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
or
or
sbb
hlt
hlt
lock
or
or
or
or
hlt
hlt
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
or
fstp
repz
hlt
(bad)
(bad)
in
adc
or
or
or
or
pop
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
fstp
repz
hlt
(bad)
(bad)
(bad)
mov
or
or
or
or
pop
pop
pop
fcmovnu
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
out
repz
hlt
(bad)
(bad)
(bad)
push
jmp
or
or
or
or
or
pop
pop
out
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
mov
(bad)
(bad)
(bad)
inc
jmp
or
or
or
pop
pop
pop
out
out
div
mov
mov
fstp
fstp
fstp
fstp
fld
adc
out
(bad)
(bad)
(bad)
push
lock
pop
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
pop
out
out
out
out
or
fucomp
jmp
or
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
dec
add
inc
jg
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
sbb
inc
add
inc
aas
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
mov
add
add
add
add
mov
add
add
add
ja
push
js
mov
add
or
add
add
add
add
(bad)
(bad)
js
mov
out
div
div
add
add
add
ja
(bad)
(bad)
(bad)
(bad)
push
ja
mov
jg
jg
test
(bad)
(bad)
(bad)
push
xchg
out
out
(bad)
(bad)
(bad)
js
add
add
ja
(bad)
dec
xchg
jg
push
add
add
ja
(bad)
jmp
and
xchg
out
(bad)
(bad)
(bad)
(bad)
js
add
or
(bad)
jmp
and
and
jle
jg
(bad)
(bad)
clc
add
add
ja
(bad)
jmp
and
sub
out
(bad)
(bad)
(bad)
push
add
or
(bad)
jmp
and
sub
stos
stos
jle
jg
(bad)
(bad)
(bad)
inc
ja
jmp
sub
sub
stos
stos
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
add
ja
(bad)
jmp
ja
stos
jg
(bad)
(bad)
(bad)
(bad)
push
js
add
ja
(bad)
jmp
sub
xchg
ja
push
(bad)
(bad)
jg
jg
add
or
(bad)
jmp
div
jg
add
push
div
clc
add
or
(bad)
jmp
sub
xchg
jg
test
jg
js
add
ja
mov
mov
div
push
pop
ja
push
div
clc
add
or
(bad)
out
sub
jg
test
jg
js
add
ja
mov
stos
fwait
fwait
xchg
div
(bad)
inc
out
clc
add
or
(bad)
out
mov
jg
(bad)
push
ja
(bad)
jle
jg
add
or
mov
fwait
fwait
fwait
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
(bad)
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
jle
jle
add
or
mov
(bad)
(bad)
dec
push
div
cmps
out
add
or
(bad)
out
out
out
out
out
xchg
(bad)
(bad)
(bad)
jg
ja
stos
jle
add
or
mov
out
out
out
out
call
div
div
cmps
call
ja
mov
out
out
out
out
call
jg
ja
jp
js
add
or
mov
out
out
out
out
out
xchg
push
div
div
stos
add
add
ja
mov
out
outs
out
out
out
call
jg
ja
test
add
add
ja
mov
out
out
out
mov
div
div
div
add
add
or
mov
outs
outs
outs
outs
outs
push
jg
jo
add
add
or
xchg
add
out
out
out
mov
ja
add
add
add
or
mov
test
outs
push
add
add
add
or
xchg
test
out
add
add
add
add
ja
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
ja
js
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
or
mov
mov
(bad)
push
add
add
add
(bad)
clc
mov
mov
js
add
add
add
add
ja
mov
js
pop
add
add
(bad)
push
js
mov
jo
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
js
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
or
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
push
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
push
add
(bad)
(bad)
push
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
inc
add
add
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
inc
cmp
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
enter
add
add
add
dec
add
add
add
add
dec
add
popa
add
add
add
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
push
add
add
les
add
add
add
(bad)
inc
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
ja
(bad)
inc
add
add
add
add
add
add
daa
ins
add
arpl
je
ins
add
pop
add
jb
outs
add
jb
add
jae
xor
xor
add
add
add
add
add
add
or
jns
(bad)
inc
add
les
enter
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
ja
and
add
add
add
mov
add
add
add
xor
fs
inc
add
add
add
push
add
add
mov
push
add
add
add
add
inc
add
push
add
add
mov
pop
add
add
add
add
inc
add
arpl
add
add
add
add
add
push
add
add
mov
sub
sub
push
add
(bad)
inc
add
ins
add
add
add
enter
add
add
add
or
sbb
mov
inc
add
add
add
add
add
push
add
add
push
add
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
push
add
bound
xor
pop
xor
add
xor
xor
pop
xor
xor
push
xor
outs
xor
xor
js
mov
data16
pusha
xor
inc
xor
add
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
adc
xor
xor
pop
add
xor
xor
add
add
ins
add
popa
add
add
add
add
xor
xor
xor
xor
add
xor
xor
xor
mov
xor
xor
xor
add
shl
ret
xor
xor
xor
or
push
loopne
outs
xor
push
std
and
dec
xor
mov
jle
pop
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
mov
pop
xor
push
js
mov
data16
pusha
xor
inc
xor
xor
add
xor
jmp
add
fs
dec
and
and
add
ins
add
popa
add
add
add
add
dec
xor
jle
pop
xor
add
popa
add
ins
add
popa
add
add
outs
add
add
xor
xor
xor
mov
data16
xor
xchg
xor
xor
add
xor
add
popa
add
ins
add
popa
add
add
add
add
mov
xor
xor
xor
sbb
aad
mov
xor
add
add
ins
add
popa
add
add
add
add
pop
xor
imul
pop
sub
xor
pop
xor
and
push
push
iret
xor
xor
xor
xor
pop
xor
xor
fs
dec
xchg
xor
dec
xor
pop
xor
xor
xor
xor
xor
sbb
mov
addr16
xor
and
and
add
ins
add
popa
add
add
add
add
inc
jge
xor
nop
push
xor
push
xor
and
add
jns
ins
add
popa
add
add
add
add
mov
xor
xor
pop
xor
xor
xor
xor
and
and
add
outs
add
and
xor
pop
add
add
add
ins
add
popa
add
add
add
add
xchg
pop
mov
data16
xor
or
and
push
push
(bad)
xor
xor
xor
add
xor
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
jno
push
push
(bad)
xor
xor
push
jle
mov
jle
pop
xor
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
mov
outs
xor
push
mov
sub
jbe
jne
xor
push
xor
daa
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
dec
xor
imul
jbe
jne
xor
push
xor
push
inc
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
bound
ins
add
and
je
outs
add
add
imul
and
je
push
add
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
add
add
and
imul
je
popa
add
add
je
imul
and
jo
popa
add
imul
add
add
and
je
push
add
add
outs
add
ins
add
add
add
add
add
and
je
outs
add
add
popa
add
imul
add
add
add
outs
add
jb
jne
jo
je
imul
add
add
add
imul
and
je
push
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
add
outs
add
add
add
add
add
outs
add
jb
add
je
ins
add
add
inc
add
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
test
jne
push
call
xor
cmp
jae
mov
mov
sub
mov
add
push
push
mov
call
test
jne
mov
cmp
jne
mov
push
add
push
mov
call
test
jne
mov
cmp
jne
mov
cmp
je
cmp
jne
push
call
mov
cmp
je
cmp
jne
mov
mov
add
mov
mov
push
mov
push
xor
push
mov
call
mov
dec
mov
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
add
or
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
movzx
lea
inc
cmp
ja
add
movzx
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
call
pop
pop
jmp
push
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
and
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
pop
pop
jmp
push
push
push
call
add
pop
pop
ret
push
push
push
call
add
ret
cmp
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmp
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
push
push
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
mov
xor
cmp
setne
cmp
je
push
call
pop
mov
cmp
je
push
call
mov
inc
push
push
call
add
mov
cmp
jne
call
mov
call
mov
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
cmp
je
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
push
push
mov
push
call
mov
mov
test
pop
jne
call
mov
or
mov
jmp
test
je
call
mov
jmp
test
je
and
test
je
mov
and
mov
mov
mov
and
and
push
push
and
pop
or
test
mov
jne
call
add
cmp
je
call
add
cmp
jne
push
call
test
pop
jne
push
call
pop
test
push
je
mov
mov
lea
mov
mov
sub
sub
test
mov
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
mov
cmp
je
cmp
je
mov
and
imul
mov
sar
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
push
lea
push
push
mov
mov
mov
call
add
mov
cmp
je
or
mov
jmp
mov
and
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
cmp
jbe
mov
cmp
je
mov
xor
jmp
mov
cmp
je
or
cmp
jbe
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
lea
call
mov
cmp
jne
mov
cmp
jbe
cmp
je
cmp
jbe
push
push
push
call
add
call
mov
call
cmp
mov
je
mov
and
pop
pop
pop
leave
ret
cmp
je
cmp
ja
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
jmp
mov
mov
cmp
je
mov
cmp
je
mov
and
jmp
lea
push
push
push
push
push
lea
push
push
mov
push
call
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
call
cmp
jne
cmp
je
cmp
jbe
push
push
push
call
add
jmp
push
push
push
push
push
call
add
ret
push
mov
sub
push
xor
test
push
push
mov
mov
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
sub
mov
mov
je
dec
je
dec
je
call
mov
or
call
push
pop
push
push
push
push
push
mov
call
add
jmp
mov
jmp
test
je
test
jne
mov
jmp
mov
mov
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
test
mov
je
mov
not
and
test
js
mov
test
je
or
or
cmp
jne
or
test
je
or
test
je
or
jmp
mov
jmp
test
je
or
call
cmp
mov
jne
call
mov
or
call
mov
jmp
mov
mov
push
push
mov
push
lea
push
push
push
push
call
cmp
mov
jne
mov
mov
and
cmp
jne
test
je
and
push
push
lea
push
push
push
push
push
call
cmp
mov
jne
mov
mov
and
imul
sar
mov
lea
and
call
push
call
pop
call
mov
jmp
push
call
cmp
jne
mov
mov
and
imul
sar
mov
lea
and
call
mov
push
call
pop
push
call
cmp
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
mov
and
imul
sar
mov
pop
pop
mov
or
mov
mov
mov
and
imul
sar
mov
lea
and
mov
and
mov
jne
test
je
test
je
push
or
push
push
call
add
cmp
mov
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
mov
cdq
push
push
push
call
add
cmp
je
push
push
push
call
add
cmp
je
test
je
mov
test
mov
jne
mov
and
jne
or
jmp
or
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
and
cmp
jne
mov
jmp
mov
test
je
test
mov
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
cmp
jbe
cmp
jbe
cmp
je
mov
mov
and
imul
sar
mov
lea
mov
xor
and
xor
mov
mov
and
imul
sar
mov
lea
mov
mov
shr
shl
and
or
cmp
mov
jne
test
je
mov
mov
and
imul
sar
mov
lea
or
mov
mov
mov
and
cmp
jne
test
je
push
call
push
push
lea
push
push
push
and
push
push
call
cmp
jne
call
push
call
mov
mov
and
imul
sar
mov
lea
and
push
call
pop
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
jmp
mov
cmp
jbe
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
add
and
cmp
jne
jmp
mov
and
cmp
jne
push
call
pop
call
push
pop
mov
mov
jmp
cmp
jne
push
push
push
call
add
cmp
je
mov
jmp
push
push
push
call
add
jmp
movsx
xor
dec
je
dec
jne
mov
mov
jmp
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
je
add
cmp
jg
jmp
push
call
pop
call
mov
mov
jmp
mov
mov
sar
mov
and
imul
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
or
xor
cmp
setne
cmp
je
cmp
je
mov
and
neg
sbb
inc
je
mov
push
push
push
push
lea
push
mov
call
add
mov
mov
call
mov
cmp
je
or
call
ret
xor
mov
cmp
je
cmp
je
mov
mov
sar
and
imul
mov
lea
and
push
call
pop
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
mov
xor
mov
push
xor
cmp
je
cmp
jne
call
mov
cmp
jne
or
jmp
push
lea
push
push
lea
push
push
call
jo
sbb
data16
data16
push
adc
add
into
test
(bad)
popf
pushf
add
push
and
cmp
add
xor
inc
cmp
dec
cld
add
xor
in
out
adc
mov
cmp
push
cli
mov
xor
add
add
sub
sub
inc
or
cmp
cwde
jmp
xlat
ror
add
add
jns
sub
stc
leave
mov
jge
inc
shr
fstp
mov
adc
pop
sbb
out
pop
mov
jmp
test
or
add
sub
jno
or
shr
jb
shr
pop
scas
call
fsubr
enter
call
push
and
and
popa
jecxz
push
fiadd
out
cmps
shl
rcl
arpl
stos
aam
xor
cmp
in
or
je
mov
movs
test
stos
add
loope
fwait
jnp
mov
pop
cmp
xchg
rcr
sbb
pop
(bad)
xor
and
loopne
repz
inc
and
clc
or
popa
jecxz
cmp
push
fldcw
pushf
push
call
or
and
push
test
sbb
retf
lds
cli
cmp
mov
inc
out
lods
sbb
jmp
adc
sbb
pop
mov
fild
push
jne
test
add
inc
imul
add
xor
jmp
and
jge
lock
clc
out
cmp
repnz
popf
cmp
out
push
pushf
js
inc
cwde
adc
mov
jno
xor
push
pop
test
loop
mov
mov
int3
xchg
mov
movs
add
int3
sbb
add
pushf
adc
movs
xor
mov
push
mov
mov
loopne
ins
test
ins
mov
xor
int3
scas
stos
pushf
mov
imul
(bad)
jmp
sub
fmul
jge
xchg
and
jo
push
jno
inc
dec
jns
aad
mov
xchg
ins
mov
jl
test
cmc
jle
inc
push
mov
adc
pop
dec
mov
enter
das
je
jne
sub
dec
popa
mov
lock
in
dec
add
icebp
int3
xchg
jns
sub
aad
cmp
and
push
ret
push
dec
and
(bad)
xchg
mov
shl
mov
addr16
cmp
or
pushf
into
push
pop
popa
aaa
in
cmp
dec
sub
jnp
fst
mov
cmp
pop
jmp
stc
in
jnp
mov
pop
addr16
pop
push
push
and
jl
retf
pop
xor
dec
mov
jecxz
aaa
lea
inc
ficom
into
js
jl
jb
mov
push
retf
shl
mov
in
adc
jb
lock
popa
inc
dec
pop
cmp
mov
adc
mov
pusha
and
inc
push
movs
movs
mov
adc
dec
dec
adc
ss
cmp
or
mov
or
inc
cli
stos
pop
lea
mov
movs
enter
inc
nop
fisubr
stc
loop
stos
rcr
mov
call
pop
icebp
cmp
lds
ja
outs
fcomp
push
or
add
jo
and
pop
add
jmp
cmp
pushf
test
cmp
clc
cmp
push
in
addr16
std
nop
ja
mov
fidiv
shr
push
shl
dec
jecxz
mov
cmp
shl
mov
inc
xchg
test
mov
sub
add
lds
in
adc
out
aad
and
mov
shr
enter
popf
icebp
imul
scas
inc
fsubp
or
and
popa
jns
jl
cmp
test
shr
lock
stc
jp
xor
enter
push
in
aas
sbb
add
shr
aam
cmps
rcl
add
(bad)
ss
dec
mov
repz
dec
pop
aam
cmp
cld
enter
add
mov
movs
lea
and
dec
imul
add
xor
cmps
shl
not
cld
push
scas
ffreep
cmp
call
movs
call
iret
pop
xor
in
nop
out
out
retf
ret
shr
(bad)
adc
add
rcl
mov
fisub
sub
je
cmps
movsx
ins
ins
aas
dec
dec
rcr
mov
mov
outs
sub
aam
or
adc
jo
xor
dec
shr
push
pop
inc
pop
aaa
test
dec
test
cmp
lahf
outs
cs
inc
jno
pop
shl
mov
cmp
popa
loope
ud0
pusha
push
push
jmp
or
dec
and
sub
inc
xor
ss
rcr
ins
mov
rcl
and
mov
shl
and
dec
into
pop
xchg
sub
wbinvd
pop
pop
add
add
jnp
xor
push
out
xchg
leave
mov
scas
mov
cmps
mov
or
mov
ins
(bad)
mov
cmp
ins
adc
aam
pop
aam
out
sub
cld
mov
cmp
xchg
sbb
ds
xchg
inc
adc
add
dec
lods
fsubr
retf
retf
xchg
mov
fcom
push
cmp
mov
push
or
into
out
jg
push
mov
cmp
mov
outs
pop
jp
push
sbb
sub
pop
jmp
fdiv
rcr
test
rcl
xchg
imul
inc
out
mov
and
pop
popf
inc
or
mov
sub
push
fadd
mov
outs
sar
ror
mov
scas
push
and
jns
adc
or
adc
xor
cmps
(bad)
stos
fstp
fdiv
gs
addr16
push
mov
mov
or
pop
lock
repnz
inc
mov
ror
ficom
and
aad
ret
or
pushf
mov
push
in
pushf
jmp
push
xchg
mov
vmwrite
sub
or
nop
mov
inc
out
js
ror
movs
cli
pop
clc
xchg
jge
sbb
mov
cdq
sahf
inc
xchg
(bad)
retf
(bad)
mov
repnz
popf
push
cld
jb
imul
lods
add
jecxz
pusha
jecxz
cmp
scas
aaa
outs
fst
fcomp
loope
sbb
int3
xor
fiadd
xchg
adc
loop
cwde
(bad)
mov
mov
data16
int
test
pop
bound
inc
cmps
push
adc
int3
add
xor
loop
mov
clc
push
sti
push
push
push
inc
jae
in
jno
jg
pop
sub
jo
or
mov
push
aad
rcr
mov
movs
adc
sar
xchg
push
pop
mov
mov
mov
mov
scas
xchg
cmp
mov
pop
and
mov
in
cmc
cmp
lods
pop
xor
call
clc
or
mov
in
aam
out
ins
pop
push
mov
push
or
out
jl
mov
cmp
ss
lods
fsubrp
popf
hlt
push
movs
fs
cmp
cmp
aam
pop
loope
pop
out
sub
loope
nop
pusha
sbb
outs
daa
adc
data16
inc
es
adc
and
mov
cmp
inc
mov
and
sub
inc
cmp
jb
cmp
xor
jle
and
jge
cmps
or
xchg
retf
imul
mov
mov
cmp
inc
jle
or
cmp
ret
dec
dec
jmp
and
mov
fst
out
punpckhwd
adc
push
and
movs
je
scas
xchg
add
hlt
inc
(bad)
and
or
dec
dec
(bad)
cs
xor
stc
pop
retf
call
add
inc
mov
lahf
in
cmp
int3
(bad)
adc
cmp
sub
mov
add
pushf
jns
repz
xor
mov
out
xor
push
xor
xchg
jnp
div
in
jecxz
pop
fcmove
out
xor
arpl
inc
jne
jo
sbb
mov
fild
and
add
outs
sbb
add
in
cmps
or
call
fisub
pop
add
outs
mov
pop
xchg
mov
stos
cmps
in
in
pop
mov
je
mov
hlt
push
jecxz
fimul
xchg
xor
data16
aam
sub
push
xor
in
out
mov
movs
cli
and
pop
cmc
fld
(bad)
call
jp
outs
test
(bad)
stc
mov
fmul
test
push
cmp
es
jns
imul
xchg
add
(bad)
retf
cmp
loop
pop
sbb
add
test
dec
lahf
fstp
xchg
mov
arpl
test
gs
inc
mov
jl
lock
stos
loopne
adc
mov
and
loope
add
cmp
sub
stos
fiadd
(bad)
adc
ins
shl
test
cmp
fwait
out
call
xchg
xlat
repnz
inc
jl
bound
loop
push
int3
loop
mov
pushf
movs
add
mov
enter
mov
mov
adc
dec
dec
and
dec
push
dec
repz
ret
gs
call
out
push
mov
hlt
je
or
retf
mov
sbb
bound
push
pop
(bad)
push
pop
or
dec
les
adc
fwait
cld
mov
cmp
adc
inc
adc
ins
bound
in
shr
out
aaa
lock
add
cmc
mov
into
int3
jno
add
xor
xchg
js
int
fistp
inc
aam
pop
ins
sbb
test
scas
(bad)
iret
mov
sbb
sbb
mov
push
in
xor
mov
push
ret
lods
dec
sbb
xor
adc
mul
inc
inc
sti
into
and
xchg
out
or
fs
push
adc
ror
dec
int3
ja
pop
inc
mov
jle
cdq
and
outs
dec
(bad)
int
(bad)
test
out
lahf
xchg
push
outs
xchg
cs
push
inc
out
in
cmps
scas
inc
push
adc
cmp
fs
xor
(bad)
into
and
fiadd
mov
mov
(bad)
xlat
pop
fisubr
out
imul
dec
pop
sub
cmps
icebp
push
dec
mov
mov
mov
pop
hlt
add
neg
lock
sbb
xchg
fcomp
inc
add
je
cmp
push
push
dec
test
std
xchg
xor
and
retf
jo
sub
ret
sub
stos
ror
xor
sbb
mov
jmp
sub
int
mov
sub
sbb
popa
adc
sbb
or
jo
movs
retf
mov
cdq
pop
call
mov
ja
and
inc
iret
fsubr
fmulp
mov
or
cmc
cs
xor
int3
cld
dec
dec
and
out
mov
pop
add
hlt
les
push
mov
and
xor
push
fcomp
cmp
push
add
mov
aad
adc
sbb
ja
dec
test
fwait
add
push
mov
mov
fsubr
xor
jle
mov
fs
jmp
into
or
mov
sets
pop
jb
push
dec
adc
and
or
dec
xor
sub
cmp
pushf
sbb
pop
imul
dec
push
mov
(bad)
mov
popf
push
ret
jo
(bad)
outs
sahf
xor
dec
or
iret
mov
jmp
(bad)
gs
jecxz
cli
jae
es
xchg
and
sbb
xor
mov
mov
or
xor
ja
xor
push
push
lods
cmp
mov
movs
fbstp
mov
pop
rcr
popa
or
push
or
xchg
add
call
jae
test
in
mov
dec
add
and
dec
ins
adc
cmp
movs
adc
(bad)
jno
adc
sbb
sar
or
or
dec
jl
gs
call
dec
push
aas
cmp
mov
hlt
in
popa
mov
push
xor
jmp
repz
hlt
cdq
pop
inc
clc
cdq
or
shl
(bad)
ss
ins
or
add
pop
xor
and
cmp
ds
iret
xor
call
in
pop
je
(bad)
push
mov
sahf
dec
mov
mul
scas
pop
loop
pop
movs
ins
sub
mov
movs
jae
cmp
xchg
add
repnz
jecxz
add
repnz
stos
test
stos
sub
stos
and
out
jl
adc
add
jno
mov
mov
mov
stc
pop
push
sar
cmp
lock
adc
das
out
iret
dec
inc
ds
aaa
mov
rol
fs
loop
dec
dec
lods
pop
inc
add
sbb
mov
ss
int3
sbb
jmp
js
xor
shl
sub
mov
repnz
test
test
and
pop
(bad)
aad
jne
repz
cli
movs
dec
out
rol
enter
mov
mov
daa
cmp
mov
dec
xor
test
int3
mov
push
stos
lods
retf
jbe
pop
jmp
retf
(bad)
jno
pop
cmp
sbb
fadd
out
je
push
retf
out
jo
pop
cld
aas
dec
mov
test
int
inc
push
hlt
push
les
sbb
scas
icebp
ss
rol
sbb
push
sub
cld
xchg
cmp
mov
jnp
jo
push
xor
jg
inc
(bad)
jg
fsub
lods
jo
mov
mov
(bad)
mov
mov
and
mov
dec
mov
test
cwde
mov
xor
cdq
clc
push
loopne
retf
push
std
movs
and
lea
sub
sbb
bound
cmp
sar
xchg
or
or
mov
(bad)
fidiv
or
or
cmp
xor
sti
ret
pusha
cmp
jp
push
cmp
dec
clc
cmp
jb
jns
fwait
leave
xor
ins
sub
lods
add
and
ins
push
xchg
jp
mov
lea
jge
in
call
push
cmp
pop
dec
sbb
xor
loope
push
and
std
into
mov
xchg
call
in
ror
xor
sbb
hlt
das
dec
cmp
enter
mov
rcl
pop
jge
xchg
in
jb
mov
pop
dec
rol
adc
push
cmps
xchg
inc
in
push
sar
inc
loop
push
lds
jl
sbb
lds
or
add
pop
push
idiv
fsubr
popf
and
dec
xor
dec
cmp
xchg
ja
enter
jno
xor
call
data16
cmps
int
ror
jmp
lea
(bad)
fst
stc
or
lea
pop
scas
in
mov
and
mov
ins
push
mov
jne
aas
push
xchg
jb
jb
arpl
pushf
cwde
into
call
jle
mov
xchg
mov
cld
xor
fist
inc
inc
mov
and
xlat
fadd
loope
or
std
leave
movs
stc
sub
outs
adc
and
lock
jo
mov
in
mov
leave
sub
jmp
jl
dec
sbb
sub
aas
inc
cs
nop
cdq
add
mov
outs
xchg
push
pop
push
and
add
inc
mov
mov
retf
(bad)
mov
add
cwde
dec
imul
dec
popf
push
mul
sahf
mov
call
add
inc
pop
imul
inc
ds
jno
pushf
pop
add
push
into
inc
fdivr
cmps
mov
ds
push
inc
xor
not
scas
mov
and
add
mov
push
mov
jne
jo
or
xor
mov
cs
pop
pushf
loope
or
xlat
xor
pop
addr16
jmp
and
and
cwde
out
add
dec
sti
js
mov
fsubp
or
int
sub
rcr
pusha
stos
sbb
mov
fbld
lods
jbe
bound
dec
es
int
test
ror
xchg
sbb
bnd
outs
push
mov
mov
pop
mov
sub
jg
outs
sar
mov
mov
dec
ins
pushf
int
pop
loopne
push
adc
push
scas
hlt
mov
pusha
mov
imul
and
mov
jmp
aad
xor
scas
dec
push
dec
test
or
ins
mov
js
sub
cs
loopne
in
push
lods
les
or
sub
xor
aam
rol
pop
lods
xchg
push
or
mov
and
jge
push
dec
je
push
cmp
inc
jae
inc
fnsave
dec
add
call
in
push
sahf
lahf
add
pop
jge
icebp
sbb
rcr
push
mov
ret
xor
xor
mov
daa
lock
shr
mov
sub
aam
add
push
in
pop
push
(bad)
push
out
aad
aam
jne
and
sub
(bad)
cmp
mov
sub
inc
jb
sbb
(bad)
push
int
nop
mov
pop
sbb
ins
add
mov
lock
pop
mov
pop
idiv
out
xor
jne
(bad)
repnz
jp
dec
daa
aam
jmp
ret
mov
aaa
mov
xor
xor
xor
stos
sbb
add
sbb
movs
das
xchg
loopne
mov
xchg
jo
fs
pusha
adc
xor
push
in
cli
xor
sar
inc
sbb
sub
fidiv
sub
int3
ja
xchg
xlat
inc
shl
mov
in
aaa
repz
mov
sbb
sbb
inc
xchg
jmp
inc
popf
ret
sub
js
sbb
dec
jo
shr
push
int
push
(bad)
push
jg
xor
into
sar
xor
es
(bad)
xchg
and
ins
dec
retf
cmps
cdq
scas
sub
and
icebp
rcl
cmp
test
jge
cmp
and
lods
mov
leave
(bad)
mov
fisub
push
pusha
mov
or
inc
cmp
cs
sub
lea
push
jne
add
xchg
mov
mov
xchg
push
bound
sbb
aam
cmp
retf
sbb
dec
pusha
fdiv
jge
pushf
dec
cmp
cld
scas
push
mov
sub
cmp
xchg
sar
test
(bad)
and
cmps
jge
loope
adc
fist
xchg
dec
shl
js
je
mov
jb
neg
jle
add
xchg
ins
sub
cdq
aad
movs
push
pusha
jl
inc
cmc
call
lock
xchg
sub
inc
and
aas
inc
push
xor
sub
out
out
inc
arpl
js
scas
jne
inc
(bad)
or
popa
adc
add
fmul
mov
dec
adc
fnstcw
push
pop
xor
test
add
sbb
in
mov
adc
pop
mov
cmp
nop
mov
xor
mov
jle
test
outs
sar
mov
mov
icebp
ret
jo
loope
in
jmp
mov
inc
sbb
adc
xor
inc
pop
outs
xchg
add
scas
loopne
pop
ins
mov
lods
jl
das
jmp
bound
inc
pop
mov
mov
cmp
or
sub
nop
test
adc
mov
ror
rcl
mov
int3
mov
fadd
adc
sbb
stos
stos
in
dec
fnsave
jle
xchg
mov
scas
push
in
adc
dec
sbb
std
dec
or
ret
mov
sbb
mov
inc
push
test
ins
and
in
cmps
sahf
loop
and
test
icebp
inc
adc
imul
jle
and
push
in
nop
mov
icebp
mov
mov
(bad)
cmp
push
add
or
shl
mov
cmc
fidiv
cmp
shl
push
lea
cmps
into
pop
scas
xchg
jmp
inc
ficom
add
xor
popf
jnp
popa
and
dec
fsubr
das
cwde
xchg
mov
into
jne
cmp
inc
inc
int
pop
mov
push
pop
inc
add
cld
pushf
(bad)
pop
dec
std
xchg
mov
dec
in
sub
cmc
jo
jle
add
mov
sbb
fisttp
retf
push
fcmovbe
in
movs
pushf
and
dec
popf
icebp
xor
dec
test
push
sub
adc
cmc
xor
adc
aaa
xchg
icebp
loope
and
fwait
outs
or
test
mov
ret
lock
gs
neg
inc
das
repz
lock
pop
outs
sbb
shl
mov
mov
dec
out
mov
shr
movs
repz
or
adc
std
outs
push
jge
or
js
in
fstp
imul
or
rol
(bad)
xor
sahf
add
push
pop
call
mov
jge
jmp
mov
loop
sub
sbb
or
retf
jge
mov
cmp
addr16
xor
jno
adc
xchg
push
xchg
fmul
(bad)
pop
rol
mov
jge
cmp
mov
dec
mov
xor
push
and
jno
gs
adc
sub
cmc
addr16
arpl
frstor
mov
pop
jbe
inc
retf
sbb
gs
mov
iret
dec
in
cmp
je
test
adc
sub
movs
jne
mov
jge
adc
das
cmp
xor
jg
sbb
rcr
cs
sbb
mov
loopne
or
or
test
repnz
jmp
js
sbb
sbb
pop
add
xchg
xchg
(bad)
shl
mov
push
adc
adc
sub
xor
sub
pop
sbb
cld
mov
xor
shl
adc
pop
push
cmc
in
movs
in
mov
imul
xor
mov
mov
cmp
loop
je
out
movs
pop
push
(bad)
cmp
inc
dec
and
adc
popf
add
mov
or
popf
cmp
xchg
push
dec
aas
add
bound
cwde
in
int3
cmps
xor
add
dec
cmps
aad
call
ss
adc
add
cmp
ret
push
xor
cmc
mov
or
jl
imul
lea
dec
test
push
mov
mov
add
push
push
jmp
push
mov
mov
inc
hlt
pop
ja
and
pop
mov
stos
fidiv
sbb
fisttp
push
nop
and
sbb
inc
mov
push
fisttp
push
adc
cld
std
ins
adc
adc
std
mov
and
call
sar
inc
lea
or
call
jne
dec
pop
sub
add
xor
test
fsub
mov
repnz
pop
jns
inc
or
lock
inc
pop
mov
mov
pop
lods
dec
stc
lods
(bad)
push
test
mov
jne
pop
fisubr
fild
dec
xchg
xchg
push
cmp
not
push
dec
gs
or
mov
std
and
push
in
adc
lock
cmp
imul
retf
sub
jae
or
push
xchg
mov
bound
push
rcr
in
in
xchg
ficom
arpl
std
repz
in
mov
xor
jge
aaa
stos
aad
in
stos
xchg
mov
add
and
jo
push
add
arpl
dec
inc
and
dec
fcom
cld
cmp
push
retf
out
and
rcr
cdq
jb
inc
aam
sub
outs
movs
adc
fldenv
test
push
loope
(bad)
add
lea
shr
sub
fisub
xlat
xor
hlt
sub
ret
or
inc
mov
mov
and
or
push
ins
cmps
retf
mov
mov
aad
mov
add
outs
inc
movs
popa
mov
jne
pop
es
xchg
int3
mov
icebp
mov
xor
mov
lock
imul
xchg
jo
mov
pusha
and
je
inc
jo
pop
mov
dec
sub
dec
cmp
repz
xor
loope
fdivr
(bad)
nop
push
out
adc
and
ret
ret
cmp
mov
mov
mov
out
cmp
rol
xchg
mov
test
fidiv
jae
add
aam
add
add
test
ss
mov
and
dec
iret
xor
sbb
push
inc
mov
nop
cld
call
sahf
in
jg
ins
inc
push
icebp
loop
push
dec
dec
add
sub
int
scas
js
je
idiv
dec
push
mov
xchg
sub
mov
mov
or
lock
mov
pop
fsub
mov
push
jbe
loopne
and
sub
out
ins
ret
lods
scas
test
dec
(bad)
and
sbb
adc
sub
gs
jle
push
neg
mov
aam
es
stos
icebp
cmps
pop
sbb
jns
shl
sbb
inc
cmp
mov
sbb
inc
call
inc
in
dec
mov
mov
hlt
mov
pop
shl
pusha
(bad)
fadd
push
inc
iret
jge
mov
fadd
jno
adc
daa
repnz
pop
dec
mov
jnp
test
dec
add
sbb
ins
dec
leave
push
push
loopne
jo
ret
int3
adc
lahf
push
sbb
sbb
fucomp
retf
push
clc
inc
inc
sbb
scas
es
sbb
bnd
test
aam
rol
xor
push
cmp
repnz
push
cmc
lahf
aam
test
adc
adc
adc
add
das
adc
aam
cmp
dec
ror
jne
cwde
addr16
ja
call
sbb
jge
jl
mov
je
adc
lock
sbb
or
aad
mov
cdq
jbe
push
or
mov
jb
js
mov
mov
js
jmp
jne
push
xchg
jno
scas
adc
mov
int3
dec
lods
fst
lods
outs
jo
int3
mov
mov
xor
gs
inc
push
pop
sub
cs
adc
jle
inc
aad
xchg
sbb
enter
dec
ja
sbb
cmp
jmp
adc
sahf
pushf
lods
(bad)
or
fnsave
xor
mov
enter
and
shr
sub
mov
call
lock
adc
lods
xchg
dec
jecxz
sbb
cmp
sub
fdivr
mov
shl
ins
test
outs
fld
je
xchg
pop
pusha
movs
mov
js
out
call
icebp
aam
sub
retf
jbe
pavgb
stos
sbb
stos
mov
(bad)
cmc
cmp
pop
mov
add
mov
fld
stos
mov
repz
push
test
sub
enter
push
mov
imul
push
dec
repnz
daa
fisubr
xor
push
pusha
scas
scas
pop
test
dec
push
jmp
inc
and
lahf
ret
ds
(bad)
lahf
jecxz
sbb
mov
jecxz
jge
in
dec
fmul
out
jns
call
fisubr
add
jl
pop
adc
pop
cmps
add
mov
pushf
push
pop
push
(bad)
dec
dec
xor
adc
dec
les
pop
pushf
out
pop
rcr
mov
sahf
rep
rcl
or
rcl
jl
adc
gs
push
dec
test
test
jle
loopne
rcl
mov
mov
push
jp
fs
lds
inc
or
call
or
jl
pop
cmp
jae
loope
ins
sbb
mov
scas
jmp
adc
shl
(bad)
cld
leave
cwde
and
push
xchg
ret
dec
je
fwait
int3
mov
scas
jne
(bad)
les
sub
sbb
dec
xor
inc
into
xor
jmp
mov
mov
jnp
pushf
retf
inc
dec
mov
mov
sub
fsubp
pop
je
adc
ds
out
xchg
in
push
sbb
mov
ins
adc
popa
jo
xchg
adc
mov
out
sbb
rcr
imul
jo
mov
lea
pop
(bad)
std
inc
std
nop
call
loope
loopne
push
jle
sbb
fst
xchg
sbb
or
add
inc
sbb
jge
add
scas
outs
addr16
or
cmp
mov
adc
inc
push
mov
xchg
pop
cld
inc
xor
jno
pop
imul
push
or
outs
and
or
in
test
daa
fsub
je
or
mov
jo
shl
dec
shl
es
xchg
inc
add
push
push
xor
shl
shl
in
cmp
in
shl
pusha
mov
jne
sub
jecxz
xchg
jb
add
dec
mov
leave
pop
(bad)
aas
pusha
test
cmps
fcom
out
mov
sbb
dec
pushf
mov
outs
stc
xor
dec
pop
gs
or
jle
or
popf
mov
aas
retf
sar
inc
sbb
mov
mov
and
popa
xchg
retf
dec
test
push
imul
or
push
xchg
push
addr16
dec
push
pop
sub
in
push
out
(bad)
mov
and
mov
pop
add
dec
xchg
xor
cmc
mov
clc
pop
dec
inc
test
dec
mov
into
shl
sahf
je
es
inc
call
sbb
ret
outs
popf
pop
movs
mov
pusha
mov
test
push
push
popa
jl
int3
je
jae
push
or
std
aaa
mov
sub
pop
xor
stos
lods
xor
push
push
aad
jg
(bad)
into
fsub
xchg
mov
xchg
or
icebp
mov
orps
adc
jne
bound
fidiv
jb
cld
adc
mov
mov
shl
out
fucomip
and
or
pop
test
or
xchg
lods
mov
mov
test
arpl
inc
dec
fld
inc
push
xor
inc
cmps
mov
stos
push
sahf
aad
mov
sar
lods
retf
mov
inc
lahf
and
arpl
imul
sub
cmp
push
cmps
fcmovnu
daa
adc
mov
out
out
jmp
jae
add
push
ret
sbb
add
pop
test
inc
leave
jmp
and
jo
jmp
and
outs
outs
pop
cwde
inc
std
xchg
retf
in
cmp
jo
mov
in
dec
cmp
(bad)
jb
jmp
cdq
call
sar
xor
push
inc
in
xchg
xor
outs
mov
adc
add
aad
inc
pop
loope
jge
lock
hlt
in
jl
repz
jle
and
or
stos
dec
enter
pop
dec
mov
dec
xor
out
pop
cs
xor
adc
jle
rol
inc
cld
sub
or
arpl
and
mov
jnp
sbb
cmp
xor
dec
stos
mov
pop
fdiv
and
aad
pushf
ds
fs
fdivr
pop
inc
pop
push
fisubr
jmp
pushf
(bad)
jp
adc
shl
xchg
jns
(bad)
aad
xlat
mov
stc
fnstsw
aas
rcr
pushf
jno
jo
je
pusha
push
push
mov
loop
out
repnz
fcomp
test
repz
loopne
shr
lods
mov
fwait
sub
add
loopne
rcr
xchg
call
fnstsw
inc
xor
and
sahf
clc
fsubr
sub
xchg
cld
clc
xchg
jns
dec
jmp
(bad)
cld
pop
cmp
jno
in
sbb
imul
adc
imul
stos
or
add
pop
sbb
jnp
mov
sbb
push
je
sub
push
stc
ins
das
jmp
loope
mov
inc
cmp
xor
cmp
ror
ins
mov
outs
aam
in
repnz
movs
inc
mov
mov
jp
dec
add
ins
test
push
out
mov
pop
addr16
pop
sahf
int
fstp
dec
sbb
adc
ficomp
enter
cmp
adc
rcr
std
fisttp
icebp
add
ins
jo
and
loopne
push
sub
call
mov
or
(bad)
jge
jne
cmp
cmp
clc
and
lahf
leave
scas
jmp
jmp
stos
pop
ins
rol
shl
(bad)
mov
xor
int3
fistp
test
mov
mov
pop
leave
loope
pusha
test
arpl
sbb
xchg
cwde
sbb
das
push
jp
pop
push
jl
dec
add
push
je
call
cmp
jmp
jl
add
adc
sbb
dec
jb
fsubr
(bad)
pop
lea
jmp
mov
jb
jge
pop
and
jne
inc
pushf
adc
pusha
ffree
loope
cld
inc
pop
inc
movs
cmp
xor
ins
or
dec
(bad)
cmp
cmp
sub
xor
inc
adc
jle
movs
mov
stos
xor
scas
inc
jmp
inc
dec
ret
sub
and
frstor
xor
cdq
sbb
and
ins
push
fmul
push
retf
add
fisttp
nop
push
out
rcr
xor
cmp
ror
retf
rcl
add
push
pop
(bad)
adc
sub
jcxz
jo
shl
mov
ror
frstor
stc
and
clc
or
xor
xchg
hlt
xchg
out
mov
in
lods
mov
mov
ja
cmp
lock
in
in
pusha
sbb
scas
sbb
fbld
mov
xor
dec
xor
adc
xchg
js
push
adc
stos
ja
push
xchg
mov
ins
inc
arpl
daa
xor
or
pop
mov
sbb
mov
add
xlat
jnp
dec
jbe
mov
mov
push
mov
and
rol
sahf
bnd
jl
lea
or
sbb
shl
rol
push
sbb
(bad)
int
std
mov
out
jne
pushf
jle
adc
jbe
xor
loopne
sub
rol
and
xor
mov
xor
mov
pop
inc
dec
in
add
sub
jno
arpl
and
fsubr
call
cmp
or
jmp
int
xor
outs
cwde
in
loop
(bad)
fidiv
dec
out
out
mov
ja
cld
stos
stos
pop
cs
dec
add
pop
mov
pop
add
int
ja
cmp
(bad)
dec
pop
(bad)
jmp
push
sub
jae
push
icebp
les
push
add
mov
and
call
xchg
jbe
ins
adc
or
call
out
sbb
pusha
add
sub
jo
push
std
gs
sub
mov
mov
dec
push
lods
ret
xor
mov
pop
aad
or
sti
add
arpl
adc
xor
not
shl
cld
(bad)
mov
add
jno
inc
sbb
dec
mov
push
or
scas
icebp
dec
xchg
retf
push
or
fsubr
adc
adc
mov
(bad)
or
retf
outs
cli
nop
cmps
cmp
xchg
in
add
or
sahf
into
xor
pop
xchg
sub
mov
or
aas
das
add
add
sub
xor
repnz
aam
out
jno
mov
mov
mov
mov
cmp
adc
mov
ffree
sub
rol
fdiv
mov
int
rol
test
mov
out
pop
stos
nop
cmps
ss
add
or
and
fcomp
call
mov
adc
sub
add
sub
push
je
dec
fidivr
pop
icebp
in
xchg
ficom
mov
aam
bound
mov
mov
mov
xchg
and
ffreep
fidivr
mov
adc
push
mov
mov
pusha
lock
pop
sbb
add
das
inc
fstp
xchg
inc
jmp
imul
mov
xor
xor
outs
les
cmp
or
mov
push
scas
pop
je
push
jge
scas
and
xor
adc
mov
sbb
aas
mov
jmp
rcr
add
mov
or
push
bound
lods
in
xor
movs
jle
mov
aad
inc
test
adc
xchg
sbb
cmp
sbb
push
fsub
fsincos
pop
aas
ss
in
push
ror
mov
mov
sbb
in
fadd
call
push
jbe
mov
pop
sub
adc
cs
push
add
ret
mov
test
inc
jnp
add
inc
repz
push
mov
sbb
sbb
jb
mov
sar
xor
and
push
and
and
and
ds
adc
or
jmp
add
fnsave
add
(bad)
rol
sub
pop
jo
cmp
jl
in
(bad)
jmp
adc
cmc
jp
or
or
mov
pop
fisub
or
pop
adc
frstor
jle
mov
push
aad
ja
fstp
xor
in
jo
sub
push
and
inc
nop
mov
or
repz
jecxz
mov
cdq
popf
clc
(bad)
mov
mov
and
popf
fwait
push
ins
inc
and
std
xchg
dec
retf
sbb
jecxz
cmp
xor
xchg
retf
lock
xchg
nop
js
adc
and
out
mov
adc
movs
and
dec
je
pop
les
fmul
shr
aam
dec
arpl
sar
dec
(bad)
pop
repz
test
mov
lods
inc
push
push
lods
push
cmp
test
or
cmp
jge
pop
retf
and
dec
adc
stc
xchg
cmove
scas
mov
xor
shl
les
in
pop
jl
mov
jae
loopne
ror
and
sbb
xor
out
cmp
jns
jbe
iret
sbb
dec
das
lock
xor
stc
xor
or
push
fidivr
mov
fadd
lods
sub
scas
xor
adc
imul
(bad)
sbb
pop
sar
cld
or
jno
mov
add
xchg
out
out
and
dec
push
das
jo
aam
das
fmul
inc
inc
jl
je
je
jnp
dec
dec
add
js
xchg
imul
push
dec
loope
mov
jae
jmp
lock
mov
sub
or
pop
ss
movs
xor
enter
ret
ds
popa
data16
call
xlat
xor
ret
fnsave
inc
sub
mov
xor
mov
push
sub
cmps
add
mov
stc
fwait
rol
adc
jmp
sbb
mov
and
sub
xchg
pop
push
sbb
push
mov
add
stc
sub
test
cmps
jle
mov
push
or
pop
aas
ret
dec
inc
sbb
pop
shr
sub
xor
cmp
sbb
sub
cli
mov
rcl
sub
into
xchg
mov
int3
pushf
push
ins
out
fldcw
push
mov
into
sahf
add
sar
mov
fwait
xor
inc
or
inc
dec
ret
jl
jno
lock
fiadd
scas
push
pusha
jnp
mov
adc
lods
or
rcr
sub
mov
jg
add
sbb
push
xor
sub
aas
pop
xchg
mov
jns
(bad)
and
aad
adc
popa
mov
add
imul
ins
jmp
adc
add
mov
ret
or
call
inc
mov
lock
jg
dec
sub
jne
ins
dec
stos
xchg
mov
js
xchg
jge
test
xchg
leave
mov
or
mov
fs
adc
xor
jns
xchg
sti
sahf
mov
std
cmp
fmul
xor
mov
aas
xor
dec
stos
cmp
jno
xchg
sahf
mov
cmp
imul
cmp
pop
rol
push
lea
and
inc
adc
mov
cmps
sub
adc
repz
fs
icebp
aas
out
or
into
mov
mov
xor
adc
dec
fnstsw
popf
repz
add
inc
ja
lods
pusha
jmp
loopne
xchg
inc
add
adc
sub
sti
dec
and
pop
scas
inc
popf
sub
rcl
aam
sub
jl
fs
xchg
neg
std
xchg
push
sub
cmp
push
sbb
mov
das
inc
xor
pop
inc
(bad)
in
and
sub
cmp
inc
out
sbb
push
cmp
dec
rcr
and
or
xor
test
push
data16
outs
mov
push
add
loop
jmp
pop
stos
dec
xor
sahf
cmp
add
clc
cmp
adc
cmp
fs
push
daa
dec
cmp
jl
jo
daa
push
pushf
scas
daa
mov
into
ret
ins
mov
enter
cmp
adc
pusha
mov
das
je
sub
fdiv
or
stc
ror
stos
icebp
sahf
out
push
ret
pop
add
std
gs
(bad)
fist
daa
xor
loopne
jge
sub
nop
cmp
imul
in
add
pop
iret
cmp
adc
jo
add
add
or
mov
push
mov
dec
pop
inc
push
int
dec
mov
aad
mov
test
mov
sbb
mov
lods
rcl
adc
push
aaa
pop
jne
ret
aam
js
ss
lods
(bad)
xlat
aad
ja
mov
pop
cmp
mov
les
and
ss
cmp
add
push
inc
and
in
sub
leave
xchg
jo
scas
jge
or
sbb
in
pushf
jb
push
dec
mov
out
in
rcl
(bad)
mov
div
fcom
rol
and
pop
addr16
shl
fbld
jmp
lods
outs
cdq
or
mov
inc
enter
ret
call
xchg
call
push
cmp
mov
je
ret
fs
cmp
icebp
sub
and
inc
xor
sbb
pop
cwde
xchg
push
or
mov
xor
push
ins
push
adc
add
dec
imul
(bad)
push
sahf
(bad)
jnp
idiv
cld
push
rcl
adc
in
les
mov
icebp
fild
fisttp
push
cmc
aas
inc
mov
mov
outs
je
inc
push
sbb
adc
int
xchg
clc
pop
add
add
sbb
push
xchg
mov
pop
data16
add
cs
stc
fistp
(bad)
sub
scas
or
cmp
fdiv
test
dec
(bad)
pusha
dec
inc
test
xor
movs
sar
cmps
jge
dec
pop
mov
ins
fisttp
loop
and
xor
fwait
out
mov
daa
push
stos
cwde
cli
movs
sbb
retf
jecxz
je
sub
pop
xchg
dec
ret
jbe
pop
test
scas
or
mov
jle
mov
stos
xor
sub
xor
cwde
std
inc
pop
cdq
bound
ja
stos
repnz
mov
aas
out
rcl
in
xor
jmp
and
fcomp
xor
jg
js
js
push
data16
int3
das
xchg
stos
jbe
int3
daa
dec
push
(bad)
aaa
les
jge
ins
push
nop
pop
inc
add
(bad)
data16
aam
pushf
jl
fidivr
xor
mov
add
ja
loopne
mov
pop
fldcw
mov
mov
in
mov
ret
les
dec
in
cmp
cmp
addr16
icebp
cwde
cmp
mov
push
xchg
mov
fsub
sbb
inc
jns
push
xor
xlat
pop
retf
cmps
jle
mov
or
ins
pop
in
outs
mov
push
(bad)
(bad)
mov
call
add
sbb
test
push
cmp
mov
loopne
outs
ds
mov
or
arpl
in
ds
push
adc
cmps
cmp
inc
outs
nop
inc
or
push
dec
out
dec
sbb
pop
idiv
or
or
add
inc
cmp
or
sahf
cmp
fs
inc
sar
es
jmp
or
lock
inc
fisubr
fs
mov
cli
cs
(bad)
hlt
dec
fdiv
xor
cld
inc
mov
adc
xchg
data16
push
cmp
cld
stos
call
push
mov
scas
aad
and
jle
xor
add
ret
mov
jmp
(bad)
dec
adc
xor
or
sbb
adc
inc
(bad)
ret
repz
in
cdq
mov
sub
mov
xchg
inc
out
shl
push
mov
or
dec
shl
mov
aas
(bad)
jmp
pop
cli
mov
sub
mov
pop
sbb
in
das
fs
scas
loope
pop
inc
push
bound
dec
retf
push
popa
ss
dec
fmul
mov
jmp
dec
sahf
jl
mov
mov
shr
add
push
ret
xchg
loope
push
call
jle
push
jns
popa
cpuid
jns
in
ja
adc
sbb
scas
cli
fnstcw
xlat
sbb
adc
out
jbe
dec
mov
jg
mov
lea
rcl
pop
enter
jne
sbb
inc
push
shr
push
cld
cdq
and
pushf
(bad)
iret
lods
outs
sub
add
aas
aas
and
adc
fimul
jle
xor
ds
sub
sub
mov
pop
and
les
(bad)
lods
mov
fcmovu
mov
cmc
sub
mov
ins
outs
mov
fist
scas
cs
add
jmp
(bad)
mov
mov
in
jo
pusha
adc
or
mov
sub
loopne
dec
repnz
mov
jg
sahf
outs
nop
inc
sbb
stos
cmp
fdivr
pop
and
dec
sub
enter
imul
pop
fs
jae
and
daa
int
mov
int
inc
les
not
pop
ds
adc
pop
mov
pop
call
sbb
push
cmp
xor
nop
fld
jo
dec
sbb
inc
dec
data16
pusha
imul
fsubr
add
push
mov
push
adc
pop
or
push
cmps
push
mov
fisubr
jp
psubusb
and
adc
mov
lods
aad
pop
inc
hlt
je
jg
pop
push
and
or
mov
bound
push
pop
loop
mov
stos
and
add
movs
mov
and
mov
lds
cld
std
clc
xchg
ror
outs
hlt
nop
fs
mov
add
inc
ds
loopne
fdivr
ss
or
mov
(bad)
rcr
mov
sti
adc
(bad)
sub
or
pop
mov
mov
fcomp
gs
and
scas
jl
push
xchg
pop
pusha
sbb
test
int3
ret
fdivr
int3
scas
mov
and
jg
movs
adc
sbb
movs
push
xor
loope
in
sub
popf
frstor
es
xor
leave
xor
outs
ins
sub
sti
ins
jns
xor
cmp
mov
fmul
mov
in
and
shl
inc
ret
mov
mov
not
xchg
mov
ret
(bad)
hlt
sub
cmp
and
dec
sub
fidiv
mov
jmp
adc
pushf
xchg
arpl
ins
jl
push
ror
sub
rcr
fnstenv
push
pushf
mov
mov
out
dec
mov
inc
ss
pop
fidivr
cmp
repz
mov
mov
pop
imul
fadd
dec
fdiv
mov
mov
repnz
jns
scas
lods
push
or
sub
sahf
ficom
lock
inc
inc
add
popf
aad
inc
ficomp
cmp
loope
add
pushf
and
sbb
das
mov
lods
sar
and
push
xchg
jle
bound
test
pushf
sbb
dec
push
std
xor
aad
into
(bad)
jne
icebp
adc
daa
push
mov
or
dec
aas
mov
inc
lahf
jge
addr16
pop
loopne
push
into
in
inc
xor
push
sbb
in
out
test
jb
cmp
push
mov
aas
shl
pop
jb
lods
push
mov
mov
xor
mov
ss
sti
psrad
in
popa
dec
adc
arpl
pop
or
dec
jl
out
xchg
mov
ror
push
lds
add
add
jmp
sub
out
or
mov
sar
sub
gs
adc
cmc
cmps
hlt
mov
popa
xchg
lods
sub
add
mov
pop
mov
push
mov
aas
adc
inc
hlt
and
dec
cmp
mov
jnp
mov
sbb
call
ret
repz
xor
outs
aas
dec
fwait
cmp
inc
mov
inc
dec
add
std
mov
movs
(bad)
popf
or
ja
outs
mov
imul
add
xor
out
pop
cmps
pop
hlt
add
ret
pop
inc
std
inc
dec
inc
jle
xchg
adc
popa
jl
xor
jmp
lock
lods
shr
sub
rol
and
jmp
cmp
das
pop
das
ret
stos
inc
pop
push
add
adc
imul
sbb
lods
jno
shl
std
(bad)
xchg
fucomip
xchg
in
push
js
sub
ins
movs
pop
shr
mov
jb
push
push
pop
or
sub
mov
lods
fistp
test
jl
inc
jmp
dec
add
loop
sub
aad
cs
iret
sbb
cs
mov
cwde
xor
mov
mov
nop
repz
or
ins
das
sar
repnz
in
shl
adc
sub
shr
push
mov
mov
pop
jns
mov
xchg
xchg
and
test
dec
ss
and
subps
mov
enter
retf
jno
add
pop
pop
push
sub
sub
js
or
(bad)
sub
stos
retf
sbb
retf
sbb
in
gs
(bad)
cmp
add
fdivr
pop
mov
sbb
push
in
rcl
fdiv
or
jmp
xor
push
pop
je
adc
add
and
sbb
mov
ja
cmps
(bad)
pop
das
mov
cmp
popa
cmp
add
sub
pop
repz
cmp
lock
add
pop
add
bound
or
push
mov
std
xor
arpl
out
inc
cwde
sub
inc
mov
pop
adc
xor
xchg
push
or
jg
mov
jecxz
xor
dec
push
xor
jmp
push
mov
xchg
cmps
repz
sti
and
repnz
mov
ret
push
imul
call
cmp
ss
shl
adc
loope
inc
inc
pushf
cmp
push
sub
sti
lahf
dec
imul
jge
cmps
push
rcr
bound
and
imul
mov
or
fsub
cmp
cmp
mov
add
fs
mov
(bad)
rcr
rol
loope
sahf
jb
call
mov
mov
xchg
xchg
or
push
and
cs
adc
sbb
and
cwde
icebp
(bad)
call
pushf
das
(bad)
shl
dec
repz
in
daa
lock
outs
push
and
or
(bad)
rcr
lock
popf
ret
adc
mov
push
inc
mov
xor
xchg
arpl
sbb
mov
shl
mov
pop
scas
je
jno
xor
pop
cmovg
sbb
fld
cld
mov
ins
add
adc
xchg
les
dec
mov
retf
xor
test
add
or
pop
push
movs
sar
push
cwde
inc
fmul
retf
jp
inc
clc
dec
inc
(bad)
push
aad
ret
sti
cmps
mov
outs
dec
pusha
mov
cmp
mov
xor
mov
mov
movs
fucomip
or
mov
repz
mov
pop
pop
cmc
cmp
pop
ror
(bad)
into
int3
or
in
pop
imul
jmp
mov
outs
adc
test
jns
es
and
sub
fisttp
adc
in
inc
ds
and
lods
jge
pusha
pop
sti
mov
sahf
add
push
dec
cli
xor
pop
and
dec
popf
xchg
inc
sbb
add
mov
mov
shr
loopne
mov
test
bound
in
and
aam
fcmovnu
dec
fwait
mov
pushf
inc
shl
push
out
xchg
inc
(bad)
lock
mov
int3
outs
stos
mov
inc
lahf
pop
int3
ret
fwait
aas
and
mov
xchg
add
into
xor
cmp
push
int
daa
aam
sub
push
adc
pop
(bad)
xchg
xchg
jmp
movs
jns
mov
shl
inc
lods
mov
ficomp
push
test
js
adc
rcr
iret
or
sbb
lds
add
xor
xor
mov
sub
jl
(bad)
in
enter
push
jmp
cmp
mov
and
out
scas
pop
call
sub
cmp
dec
fs
addr16
sahf
stos
cmp
adc
push
int3
push
ins
shr
push
mov
pop
dec
and
mov
pop
cli
xor
xchg
inc
mov
fidiv
(bad)
mov
xor
adc
out
sub
outs
mov
fsubr
inc
lods
aad
shr
stos
out
out
or
aas
push
dec
aam
mov
inc
sub
and
adc
imul
div
in
loope
xchg
mov
aas
test
sub
adc
dec
out
sbb
cld
in
inc
ds
aas
addr16
fild
gs
outs
push
stc
push
rol
out
add
repz
in
js
sbb
out
ss
test
xchg
dec
mov
xlat
add
and
push
cmp
das
repnz
pop
lods
fnstcw
mov
cmp
(bad)
popa
sub
jmp
bound
jmp
pusha
xchg
jmp
int
push
add
lods
mov
and
mov
test
jb
mov
cmp
xchg
mov
xor
bound
mov
xchg
sub
lds
movs
stc
fmul
hlt
and
and
add
xor
lods
in
mov
and
mov
and
ins
imul
jge
cld
into
adc
jb
cli
nop
(bad)
mov
call
shl
add
dec
pop
pop
sahf
ret
loope
mov
jmp
cmp
pop
sbb
xchg
pop
mov
jmp
pop
cli
out
pop
arpl
push
pop
ret
sub
jo
or
or
jo
ret
in
(bad)
lock
out
sbb
pushf
jns
or
lahf
fldz
push
adc
mov
pop
sub
arpl
inc
fwait
dec
dec
jb
mov
jae
icebp
out
mov
inc
je
ins
aam
push
sbb
test
call
fiadd
inc
std
aam
cmc
sahf
sub
mov
add
loop
cli
or
xchg
int
jno
mov
mov
adc
les
push
loopne
sub
push
lahf
scas
jecxz
mov
cwde
push
test
cs
adc
mov
call
adc
add
sar
mov
mov
fidiv
adc
in
pusha
ds
dec
jno
in
push
stos
stos
jge
pop
movs
pop
push
adc
jmp
jmp
jae
and
fnstenv
pop
pop
jno
xor
pushf
pop
mov
inc
(bad)
aam
fdiv
adc
xor
push
push
jns
xchg
sbb
jecxz
jmp
inc
mov
mov
push
repnz
add
js
sub
loope
inc
ds
jae
hlt
fidivr
pop
or
adc
(bad)
mov
and
xchg
(bad)
in
mov
mov
cmps
xor
lods
push
stos
loop
bound
inc
jge
jge
cmps
push
mov
or
in
mov
mov
pushf
dec
rcl
fwait
mov
mov
retf
xlat
jp
pop
hlt
das
sar
mov
enter
in
jle
pop
stos
scas
and
add
cmp
jno
dec
sar
ja
in
mov
ja
popf
int
adc
cmp
mov
or
mov
add
push
fmul
(bad)
xchg
popa
cdq
cdq
gs
loope
cmp
push
jmp
mov
fst
pop
cmp
fsubr
sbb
sahf
or
sub
loop
inc
stos
fisttp
(bad)
shl
aas
fidivr
or
retf
pop
in
sub
add
push
push
or
retf
pushf
mov
xor
push
mov
mov
and
dec
mov
push
jb
dec
fbld
lahf
sub
jecxz
inc
pushf
xlat
cs
mov
std
push
or
push
cmp
bound
sbb
mov
and
cmc
jmp
or
ret
and
push
movs
push
pop
sar
jns
ins
popf
and
out
fld
rol
call
cs
push
call
xchg
out
sub
cmp
or
cld
in
jae
mov
add
xor
cld
call
lahf
cwde
mov
retf
adc
adc
out
push
cs
dec
sahf
inc
mov
cs
adc
mov
clc
mov
or
mov
cmc
fidiv
test
cs
cmp
mov
jp
cmp
test
(bad)
lods
add
inc
sub
push
mov
add
ret
jne
push
dec
pop
ds
mov
pop
cmp
in
jge
xchg
add
je
push
xchg
push
sbb
mov
fs
stos
call
sub
stos
xor
inc
div
mov
push
in
pop
and
cs
mov
cld
fsubr
sub
jmp
into
rcr
inc
dec
icebp
mov
adc
mov
pop
popf
test
cmc
sub
mov
mov
xchg
adc
cmp
mov
call
dec
es
and
mov
xor
adc
fs
lds
push
fdiv
pop
dec
inc
test
xchg
pop
fs
and
xor
cmp
mov
sbb
push
sub
mov
rol
nop
add
pop
mov
nop
sub
out
jge
shr
cmp
xor
sub
ins
jae
add
push
scas
loopne
pop
test
test
int
pop
sar
jle
cli
loopne
pop
or
call
xchg
call
call
push
cld
rcl
call
jo
xor
jns
outs
das
in
retf
mov
sub
sub
xchg
jg
fisttp
nop
add
or
and
xor
mov
cmp
aas
cmp
jbe
imul
mov
retf
sahf
adc
and
je
les
push
sub
cmp
outs
popa
sub
xchg
add
cld
or
stc
or
mov
inc
imul
retf
inc
cmp
sahf
adc
xor
sub
jae
mov
enter
(bad)
popa
es
and
xchg
jmp
(bad)
lock
(bad)
(bad)
dec
leave
adc
mov
xlat
popa
sahf
sub
das
loop
cwde
cmps
pop
fadd
mov
(bad)
mov
test
fist
inc
push
jb
xor
jo
cmp
dec
out
clc
(bad)
sub
cld
sub
add
cmp
mov
push
mov
loope
test
push
out
lods
pusha
mov
cmp
dec
test
add
cld
sub
mov
lods
add
mov
iret
int3
stos
jl
jge
jbe
nop
push
mov
adc
fcmovnbe
shl
pop
shl
add
rcl
outs
push
pop
cmp
aas
inc
mov
xor
loopne
xchg
xor
cld
dec
push
cvttps2pi
rcl
jmp
cmps
ja
cld
add
sbb
cmp
sbb
dec
(bad)
rcr
(bad)
ds
mov
or
int3
push
aaa
in
cmp
mov
pop
cmp
fdiv
xchg
xchg
or
push
mov
sbb
frstorw
mov
ds
inc
adc
sub
xor
mov
cmp
ja
call
mov
and
sbb
test
inc
mov
jl
sbb
gs
hlt
or
add
pushf
fsub
mov
or
in
ss
stc
push
and
(bad)
sbb
dec
jno
jmp
icebp
jle
fadd
mov
mov
jno
sub
push
mov
inc
mov
aam
ds
or
nop
xchg
loop
in
jns
push
enter
mov
xchg
ja
xor
loopne
sub
jns
clc
scas
lds
inc
call
sbb
jp
cmp
xor
mov
mov
test
call
jle
fstp
xor
jne
add
(bad)
xchg
xor
ins
xor
loopne
aad
xchg
ins
jl
shl
push
add
xor
add
push
add
stos
push
in
cwde
sbb
adc
mov
push
ins
mov
mov
daa
jb
scas
or
cmp
xchg
xchg
add
les
cmp
ror
pop
xor
lock
push
cwde
and
lahf
movs
pop
sub
sbb
inc
in
aaa
in
cmp
pusha
ss
mov
cmp
faddp
jns
xchg
mov
mov
sbb
fs
mov
repz
mov
xchg
fistp
and
jo
jb
lods
mov
mov
ins
mov
dec
and
in
(bad)
frstor
lods
in
daa
pop
rcl
nop
ins
rcl
retf
jb
jge
outs
xor
jns
sahf
daa
mov
push
(bad)
fidiv
aas
cmc
adc
ja
mov
pmullw
jo
add
adc
test
mov
ror
add
push
push
ins
add
stc
mov
ja
test
sar
mov
sbb
ror
inc
xor
shl
mov
pop
mov
call
mov
fucom
loop
enter
sbb
js
cmp
jno
test
das
jbe
inc
dec
jae
je
(bad)
int3
adc
sbb
sub
push
mov
push
mov
and
lods
push
shl
sahf
mov
pushf
adc
xchg
push
push
pusha
cmovbe
shl
mov
jnp
je
push
cmp
inc
adc
xchg
xor
pop
js
popf
jl
push
mov
mov
retf
mov
push
ja
mov
pop
jmp
dec
dec
xlat
shl
xor
sbb
mov
cmp
enter
(bad)
call
jne
cvttps2pi
push
ucomiss
sti
mov
ds
add
and
aam
xor
shl
mov
and
xchg
jno
inc
ror
sub
cmp
xchg
ror
or
dec
arpl
xor
(bad)
jns
mov
ins
fs
sub
imul
add
call
jmp
imul
xor
push
dec
sbb
loope
mov
js
in
leave
in
in
cld
pop
icebp
or
repz
cmp
jle
add
dec
or
xchg
mov
sub
mov
lods
test
sbb
mov
fcmovnb
and
out
daa
pop
je
frstor
mov
aas
sub
adc
(bad)
pop
sbb
push
jl
fisubr
out
(bad)
jle
sti
cld
mov
dec
and
int
jl
sub
call
xor
add
add
pop
shl
fstp
adc
js
pusha
cld
test
cs
loop
and
loopne
adc
and
das
stos
data16
sub
js
call
out
xchg
jecxz
adc
jmp
sbb
sub
test
sub
shr
in
outs
test
les
push
ins
fsubp
call
lods
xor
lods
(bad)
mov
stos
add
mov
int3
iret
lock
outs
repnz
and
push
dec
adc
ins
ds
ret
add
sbb
push
push
pop
dec
iret
jl
pop
or
clc
cmp
ins
pop
cs
sub
cmps
les
jae
cmp
xchg
scas
lahf
sbb
cmp
jo
add
pusha
mov
test
and
jl
(bad)
mov
cld
and
push
push
xor
or
xchg
(bad)
fistp
aaa
in
xor
shr
lods
shl
ret
jmp
adc
dec
push
into
loope
(bad)
scas
out
in
push
je
sub
mov
push
mov
neg
adc
jae
shl
shl
test
jg
shl
push
add
pop
ja
push
je
mov
sti
call
(bad)
into
repz
fadd
lods
rol
in
xor
push
int3
cmps
jle
adc
mov
loop
gs
adc
test
(bad)
scas
les
sti
cs
retf
and
push
and
xor
jmp
adc
adc
ror
xchg
mov
ins
jo
das
jae
fidiv
sbb
retf
iret
and
iret
mov
push
mov
sbb
mov
cld
push
push
rcl
leave
sbb
or
jae
pop
test
and
inc
lahf
les
xor
inc
xor
jmp
sar
adc
aas
lahf
lds
std
jmp
pop
outs
pop
popa
pop
inc
lods
inc
int
cwde
jbe
mov
mov
enter
adc
(bad)
ins
inc
sahf
pushfw
loopne
ss
sub
xor
in
cmp
into
push
add
fucomip
add
ins
retf
pop
or
into
and
ret
mov
fidivr
dec
adc
dec
fistp
or
and
adc
int3
mov
sar
sbb
push
xchg
adc
sbb
sub
cmp
js
or
mov
jmp
ins
mov
and
pop
or
push
push
mov
hlt
or
test
paddsb
push
icebp
dec
repnz
cmp
add
push
arpl
inc
pushf
std
inc
out
pop
ins
test
ja
add
shr
jb
sbb
or
inc
fidiv
das
add
aad
shl
call
add
call
push
cmp
sub
ficom
sub
enter
add
push
xor
adc
cmp
mov
mov
adc
adc
shl
jae
repnz
pushf
jp
ins
sub
jo
pop
icebp
jge
rol
in
xchg
cli
loope
add
in
pushf
nop
sub
enter
lds
add
push
out
(bad)
jb
cli
hlt
mov
or
call
jae
es
mov
movs
pushf
jns
push
add
enter
sub
je
dec
xchg
xchg
jae
arpl
arpl
int
or
movs
(bad)
sti
pushf
pop
xor
sbb
push
mov
(bad)
xor
mov
fdivr
mov
enter
mov
jbe
fcmovb
or
(bad)
fistp
mov
jecxz
and
aad
sub
mov
and
push
jo
adc
mov
sar
into
mov
call
psllw
lock
in
cmps
adc
pop
sbb
push
mov
pop
(bad)
call
mov
sub
jbe
das
pop
ins
dec
and
jmp
sbb
ret
sahf
mov
and
jle
lea
inc
out
jp
push
cmp
add
inc
cwde
bound
popf
dec
dec
push
xor
ficom
push
jnp
mov
outs
arpl
mov
scas
outs
push
cmp
or
xor
fist
into
mov
jmp
cmp
movs
push
loope
cmp
push
jb
mov
test
enter
fiadd
add
ja
push
pusha
lods
jge
mov
lods
outs
cwde
nop
mov
enter
aad
mov
cmps
adc
not
mov
ja
ds
xor
out
fs
cmp
rol
sub
adc
jmp
dec
pop
hlt
lods
inc
xchg
into
cwde
mov
imul
call
rcl
inc
mov
rcl
pop
(bad)
scas
(bad)
and
sahf
or
imul
cmp
rol
cmp
dec
push
adc
add
scas
inc
lahf
jge
out
inc
popf
inc
mov
jbe
xor
iret
mov
ins
inc
jmp
pushf
pop
push
ret
mov
hlt
repz
ret
popa
shl
xor
pop
jne
mov
push
ret
push
cld
pop
int
js
es
pop
out
push
(bad)
out
jle
mov
ins
arpl
xchg
rcr
dec
inc
jl
in
stos
cli
or
fisttp
lea
push
cmp
push
push
jb
loopne
push
mov
shl
xchg
fstp
mov
push
pop
add
or
xchg
loope
push
cs
mov
test
les
hlt
mov
into
js
mov
fwait
je
push
mov
xchg
dec
xor
imul
add
inc
pop
test
cmp
mov
rol
and
inc
add
call
dec
ins
cwde
push
loopne
push
mov
mov
xchg
xabort
enter
xor
or
pop
scas
jo
push
add
ja
xor
sti
inc
fidiv
or
sbb
neg
pushw
dec
call
jp
aam
rol
mov
ret
sub
stos
call
ins
push
pushw
jbe
mov
sar
retw
jno
cmp
dec
aam
aam
add
jae
jb
and
cmp
cs
icebp
aam
add
push
and
sbb
push
or
cmps
or
pop
jbe
cmp
in
push
movs
sbb
and
mov
sbb
push
xor
sbb
retf
aam
add
retf
pop
test
sub
repnz
fcmovb
inc
mov
xor
xor
adc
mov
mov
popa
(bad)
xchg
inc
sbb
jmp
fdiv
push
sub
jge
or
cmc
in
out
push
rcl
xchg
jmp
adc
(bad)
xor
sbb
int
test
cs
push
mov
nop
in
mov
int
test
retf
add
sbb
repz
lock
push
movs
jmp
ret
xchg
fs
idiv
inc
sahf
jo
xor
add
and
jecxz
sahf
aam
add
and
ror
ins
dec
xor
mov
dec
cmovnp
inc
enter
ds
dec
mov
pop
out
inc
pop
cmps
push
jl
leave
adc
je
shr
jnp
cld
outs
cld
mov
lahf
ror
out
loopne
sub
push
jle
pop
call
adc
iret
xor
mov
clc
fdivr
and
ret
rcl
pop
pop
and
loope
cmp
movs
ret
and
ins
rsqrtps
lods
mov
and
adc
push
jl
dec
xor
adc
call
fimul
std
push
adc
push
or
jecxz
stos
(bad)
pop
and
imul
and
outs
loope
or
sbb
inc
fnstsw
jnp
or
mov
inc
push
add
fidiv
dec
push
and
cdq
or
xor
mov
push
jecxz
stos
repz
xor
mov
std
adc
and
inc
in
jge
lea
jo
loope
ror
retf
scas
push
push
fs
aaa
xchg
sub
mov
mov
rcr
out
outs
(bad)
mov
mov
loop
sti
leave
pushf
mov
mov
leave
cwde
jecxz
push
jmp
mov
frstor
jbe
outs
and
retf
and
cmp
icebp
nop
scas
gs
outs
cld
jno
cmc
sub
mov
mov
icebp
(bad)
daa
inc
call
sub
dec
lea
pop
mov
pusha
test
xchg
(bad)
or
mov
pop
cmp
add
rcl
cmp
(bad)
push
jmp
lds
jo
cmp
add
mov
loopne
adc
ins
mul
add
les
mov
int
mov
jno
xchg
pusha
and
neg
and
cmp
xor
mov
adc
and
and
inc
lods
mov
out
stc
or
mov
test
fdiv
mov
movs
sbb
fiadd
fwait
and
hlt
mov
(bad)
mov
sahf
push
jnp
in
ret
ins
gs
ins
iret
outs
daa
adc
iret
(bad)
outs
and
and
in
xor
sub
add
aas
int3
cmps
dec
cmp
outs
or
jae
(bad)
lock
sub
push
dec
inc
xchg
and
or
jle
movs
xchg
movs
xor
js
es
xor
inc
mov
test
(bad)
daa
in
test
mov
ins
fdiv
adc
data16
dec
inc
xchg
sahf
je
inc
dec
mov
mov
mov
in
push
xchg
push
jne
or
pop
jno
cmp
or
cmp
cmp
push
fnstcw
icebp
(bad)
xor
pushf
pop
and
fst
jo
and
mov
and
push
sti
inc
fisub
mov
jmp
jl
jo
addr16
cmp
shr
std
jle
shr
int3
xchg
aam
and
dec
and
or
lods
jns
out
les
mov
xchg
mov
and
(bad)
ds
stos
mov
or
lods
cwde
sahf
jecxz
shl
pop
mov
or
pushf
cmp
ins
pusha
xchg
in
in
sar
adc
push
and
mov
mov
pop
and
inc
push
push
jg
jmp
xchg
sar
call
rol
or
push
je
mov
int
dec
add
inc
cmp
out
pop
movs
push
test
mov
jo
clc
jo
loop
push
lods
pop
in
adc
push
jno
jo
bound
fsubr
pushf
mov
fsub
mov
repz
stc
adc
adc
ss
pop
ins
fbstp
sbb
js
xchg
dec
fdiv
fsubr
mov
fnsave
(bad)
jnp
out
cwde
mov
std
adc
into
addr16
mov
sti
cli
in
push
jae
arpl
cdq
xchg
cmp
pusha
hlt
inc
adc
call
inc
mov
aaa
inc
cmp
movs
fld
leave
loopne
fisub
ds
iret
jnp
(bad)
mov
pop
xor
add
pop
pop
jmp
cmp
add
lahf
mov
in
cmp
mov
scas
and
je
sbb
pop
in
dec
les
int
sbb
mov
repz
daa
push
inc
push
and
clc
arpl
mov
jmp
(bad)
int
mov
mov
inc
lods
xor
ret
dec
sub
inc
loope
jp
mov
mov
pop
add
sub
mov
js
sar
jo
mov
repz
mov
mov
jle
push
jg
xchg
data16
dec
popa
outs
inc
(bad)
lods
adc
mov
adc
push
dec
dec
call
push
push
mov
jae
and
mov
pop
shl
and
and
aas
push
pop
xor
sub
pop
and
xchg
xchg
pusha
sbb
xchg
popa
pusha
mov
loopne
or
cwde
push
adc
pop
cmp
adc
(bad)
sbb
js
add
pop
and
jl
jbe
mov
inc
imul
mov
push
xor
int3
inc
and
test
shl
jle
xor
pop
lahf
in
pop
inc
and
mov
jl
add
fs
lds
(bad)
cmp
cld
sub
mov
fistp
jns
push
cmp
mov
jo
inc
jo
cmp
test
movs
es
int3
mov
out
sub
adc
rol
dec
and
push
xor
dec
jg
xchg
mov
jecxz
mov
fs
jb
inc
xchg
fld
push
mov
add
mov
sub
ds
pop
inc
xchg
retf
pop
imul
aas
add
mov
(bad)
out
xor
loop
dec
ss
ja
mov
lods
imul
push
fidiv
bound
pop
push
movs
ficomp
and
xchg
je
adc
adc
ins
cdq
mov
jge
movs
sbb
add
and
and
ins
adc
cmp
inc
cwde
ret
scas
xchg
pop
or
mov
je
call
jl
push
mov
loopne
mov
jmp
and
scas
les
or
mov
cdq
cmps
pop
ret
and
hlt
not
nop
stos
jno
mov
push
mov
(bad)
fld1
and
pushf
mov
jle
mov
loop
cmp
mov
jmp
xchg
dec
xchg
pusha
outs
push
pop
rcr
cwde
sar
xor
adc
and
mov
mov
test
pop
bound
fstp
cld
cld
mov
pushf
push
inc
mov
and
out
jp
fs
adc
jae
cmps
jno
adc
ret
mov
mov
test
test
out
fadd
xor
(bad)
faddp
mov
das
in
xchg
push
mov
sub
xor
xlat
jl
sbb
scas
ds
mov
in
ret
out
sar
push
ins
or
loopne
out
mov
mov
setb
imul
xor
adc
leave
pop
rcr
movs
add
in
cmp
mov
adc
int3
test
push
mov
and
jb
retf
sub
mov
mov
stc
push
in
jno
shl
loopne
push
inc
lock
(bad)
gs
das
shl
xor
int3
loop
xchg
cmps
and
cld
xchg
lds
into
sub
loop
xchg
sub
adc
and
test
sub
fnstenv
sub
push
push
lahf
je
sub
sub
mov
mov
cmp
cmp
loop
mov
cmp
inc
and
aaa
cmp
iret
cmps
repnz
(bad)
jnp
mov
pusha
outs
mov
add
dec
sar
mov
cmps
pusha
lds
cmps
popf
push
add
xor
adc
and
pusha
cs
mov
in
test
retf
pop
dec
xchg
fistp
cmp
xchg
dec
push
out
pop
ins
aad
xor
test
mov
nop
dec
jno
xchg
in
push
ror
pop
stos
test
push
mov
mov
rcl
retf
cdq
and
jg
(bad)
cdq
call
test
mov
das
mov
xor
jns
aad
call
lods
xor
cmp
push
and
cdq
pushf
in
ror
jae
cmp
and
sub
xchg
retf
in
aaa
dec
push
aam
fsub
add
dec
push
clc
xchg
daa
xchg
cmp
push
in
mov
pushf
or
ret
jl
mov
pushf
adc
push
jne
hlt
pusha
cmp
xchg
ja
mov
nop
stos
sbb
push
xchg
ins
mov
pop
fld
mov
fidiv
imul
mov
push
mov
xchg
jge
pop
add
push
pop
loope
adc
movs
pop
sbb
adc
imul
call
mov
scas
adc
mov
jbe
sbb
ja
bound
sbb
nop
lods
clc
ja
add
or
pusha
adc
loopne
(bad)
and
sbb
xchg
call
xor
call
cld
add
jecxz
aam
fcmove
movs
(bad)
cmc
sub
pop
pop
inc
sub
mov
fdiv
inc
sub
fadd
push
pushf
lahf
dec
rcr
nop
xchg
mov
mov
sub
xor
adc
xchg
xor
stc
jge
lods
sti
je
push
imul
(bad)
(bad)
fst
inc
dec
xor
fistp
cld
inc
or
(bad)
xchg
inc
inc
jmp
xchg
pushf
lahf
fcom
mov
mov
mov
inc
sbb
enter
adc
repnz
xchg
dec
je
add
adc
jo
pusha
sub
in
movs
lock
cmp
das
or
jb
jl
hlt
xor
fcomp
jbe
repnz
and
or
and
dec
sub
mov
adc
sar
pop
add
mov
jmp
mov
sti
fmul
mov
call
rcl
shr
inc
hlt
fstp
fwait
dec
dec
pop
fdiv
cmp
xchg
mov
or
ds
nop
js
test
out
popf
ja
ja
push
push
(bad)
cmp
movs
mov
push
jnp
inc
cmp
push
xor
pop
scas
or
pop
outs
retf
jg
mov
mov
mov
retf
xor
call
cmp
outs
je
outs
sbb
ins
cmp
shl
not
push
imul
cmp
push
xchg
sub
add
mov
outs
push
cmp
add
sti
hlt
lods
mov
cmp
les
pop
dec
xchg
inc
mov
jns
int
add
cmps
cmp
ins
cld
gs
xor
xchg
in
je
imul
loop
xor
mov
in
pushf
pusha
sub
and
xchg
mov
sbb
sbb
or
xlat
and
popf
jae
outs
out
sub
sbb
xchg
inc
mov
call
pop
xor
lahf
or
xchg
imul
jecxz
mov
sti
sub
loope
mov
(bad)
pop
or
jnp
repz
ins
or
ins
sbb
out
sub
inc
jge
and
loop
cmp
add
jbe
fldln2
movs
fmul
mov
ror
push
cmp
repz
test
xchg
jmp
nop
adc
shr
add
test
lock
loopne
jbe
ret
rol
or
push
into
clc
xor
shl
jnp
aaa
addr16
jae
or
dec
inc
imul
je
jo
push
push
loop
(bad)
rol
mov
push
mov
shl
popa
clc
or
ret
test
ret
sbb
push
and
pop
repz
stc
inc
js
pop
int3
mov
mov
xchg
out
cli
xlat
xor
add
inc
arpl
aad
jecxz
ficom
jmp
and
cmp
fstp
pop
arpl
dec
adc
dec
xor
adc
jno
mov
mov
inc
cmp
or
mov
je
shl
dec
repnz
retf
sbb
mov
push
pop
iret
into
popa
push
scas
mov
cmp
ficom
ins
xor
jno
call
sub
adc
jb
cs
rcl
(bad)
push
xor
aas
sub
mov
ror
not
mov
scas
nop
jo
stos
push
fucomi
int3
or
outs
and
pop
shl
pop
mov
mov
mov
mov
push
push
fdiv
sar
shl
cld
fmul
xchg
xchg
fmul
int3
in
push
or
sub
dec
or
push
mov
jb
aam
push
add
xor
push
clc
push
popa
into
push
je
(bad)
push
(bad)
rcl
je
fdivr
in
mov
push
dec
pop
xor
test
mov
add
and
call
xor
mov
add
data16
and
into
js
xchg
das
cmp
mov
xor
and
xchg
jns
sub
dec
movs
pop
dec
jbe
and
add
sbb
pushf
fldenv
mov
cmp
adc
pop
push
in
jge
xchg
ins
ret
test
push
cmps
xchg
out
mov
push
sub
hlt
sub
mov
sub
cmp
hlt
rcr
xor
in
add
popa
cmp
mov
xchg
popf
and
jecxz
push
(bad)
enter
add
xchg
push
fnstsw
jge
das
(bad)
leave
mov
repz
cli
mov
pop
cmp
inc
retf
imul
hlt
int3
cdq
dec
add
jecxz
leave
in
inc
push
lods
icebp
mov
adc
lds
aas
jno
fistp
add
cmps
lea
inc
(bad)
adc
and
movs
dec
je
test
push
fisubr
sbb
sub
jno
(bad)
ins
xor
ss
gs
mov
jno
mov
int
push
div
sbb
mov
retf
pop
jg
les
push
or
mov
scas
rcl
xchg
push
mov
orps
(bad)
pop
outs
cmp
pop
sbb
jge
push
scas
mov
xlat
xchg
test
lods
adc
lods
call
aam
jb
ins
add
div
test
xor
repz
iret
std
sub
adc
aad
xchg
scas
sbb
xor
repz
inc
push
jl
dec
adc
ror
fld
push
jle
xchg
pop
in
call
xor
mov
mov
add
fsub
xchg
push
jb
add
lea
rol
push
sub
ins
iret
mov
int3
sbb
test
(bad)
pop
add
or
push
xor
sub
and
mov
sbb
mov
and
xchg
mov
retf
sub
cwde
add
push
retf
mov
xchg
xchg
push
or
mov
xchg
aad
(bad)
jmp
popa
sbb
loopne
and
jl
push
(bad)
shr
aas
inc
std
fisubr
xchg
push
fiadd
das
jmp
xor
cmp
repz
jl
test
clc
mov
inc
mov
sahf
retf
jl
mov
movs
rcr
xchg
or
sub
ret
pusha
cmp
jg
lea
imul
idiv
fcomp
mov
mov
mov
cmp
sbb
push
bound
lahf
sbb
and
ds
enter
push
cmp
gs
mov
jl
in
jle
loopne
cmp
sar
jge
div
in
pop
in
int
in
jl
sbb
lods
cs
fwait
xchg
lock
out
xlat
sbb
jae
push
adc
rol
adc
inc
sysexit
mov
mov
aaa
lods
aam
dec
pusha
push
mov
jo
iret
aad
in
xor
jge
xchg
ins
movs
xor
adc
sub
xchg
mov
sub
or
add
cmp
push
xchg
pop
inc
sub
add
(bad)
cmc
inc
mov
lea
(bad)
fstp
xor
mov
or
scas
mov
xor
enter
jecxz
mov
pop
fist
jo
es
in
int
mov
xor
std
pop
hlt
in
in
fstp
sbb
out
pusha
aam
sbb
pushf
cwde
mov
pusha
ficom
bound
cmp
push
ins
imul
cmp
arpl
stos
cmp
pop
pop
lods
mov
loop
ins
sub
sbb
push
dec
sub
fcmovbe
in
test
jmp
(bad)
cmps
xchg
mov
ins
sti
mov
inc
adc
into
push
pop
xchg
sub
pop
sti
mov
jno
shr
xchg
into
add
push
xor
or
sbb
mov
mov
adc
dec
mov
add
push
enter
adc
mul
int3
inc
cmp
sbb
outs
mov
fsubr
ror
add
test
jnp
test
cwde
and
fdiv
push
outs
inc
push
push
pop
bound
push
int
dec
fsubr
sahf
or
jo
shr
inc
ins
movs
and
test
inc
or
mov
xchg
inc
lods
mov
loopne
mov
jno
int
int
fmul
out
data16
ffree
mov
scas
sbb
out
nop
in
mov
or
and
jge
cmp
push
sbb
aaa
test
fxch
xchg
nop
cmp
sbb
xchg
cmp
ins
or
or
push
mov
test
ret
xor
cld
mov
pushf
add
mov
push
cmp
mov
stos
xor
or
(bad)
lahf
adc
ja
rcl
rcr
call
loopne
and
mov
dec
ja
cmp
xor
pop
inc
cld
or
inc
cmp
push
pop
add
hlt
mov
out
fucomi
jl
fdiv
jb
jge
rcl
adc
inc
inc
push
repz
sti
sbb
test
hlt
ret
fucom
cmp
dec
ret
ins
inc
xor
dec
rcr
cmc
test
test
dec
mov
inc
push
add
mov
xchg
fstp
pushf
in
mov
stos
and
mov
pop
sbb
sqrtps
lods
popf
nop
clc
xchg
stc
call
shl
push
mov
xor
and
xor
js
push
mov
dec
pusha
or
loopne
lods
(bad)
test
jge
jne
push
dec
in
lods
add
pop
jb
xor
fisttp
inc
enter
cld
or
mul
push
xchg
in
out
aaa
rol
loope
inc
add
icebp
mov
xor
fucomp
mov
outs
dec
dec
mov
pop
sub
dec
nop
xchg
dec
or
jno
push
mov
ret
xchg
mov
popf
mov
sbb
mov
xlat
or
inc
jmp
cs
mov
cmp
lea
fs
fldenv
add
loop
hlt
retf
fidivr
push
mov
jl
mov
call
clc
lods
push
(bad)
pop
fwait
jmp
imul
imul
push
push
fwait
and
fcomp
in
sbb
test
(bad)
and
jae
fimul
mov
push
out
adc
repz
iret
mov
sub
aaa
adc
bound
xor
int3
mov
xchg
add
test
and
xor
sub
mov
call
or
pop
and
popf
xchg
mov
inc
mov
and
int3
addr16
push
cmp
ins
sbb
or
fcmovne
dec
ja
xor
lahf
or
clc
stos
mov
mov
dec
fnstenv
push
add
pop
pushf
lds
sbb
fs
int
scas
mov
mov
fnsave
fld
dec
test
leave
cwde
cmp
sti
popa
cmp
cmp
in
enter
cmp
mov
les
mov
in
lds
adc
mul
xor
sbb
xor
mov
int3
mov
mov
dec
push
stos
mov
fs
mov
xor
jmp
mov
inc
lock
pop
div
add
push
cdq
adc
int
sub
push
jno
xchg
pop
lods
mov
xor
inc
ret
out
mov
inc
dec
cmps
fst
inc
dec
inc
xchg
cld
mov
push
cdq
les
test
adc
sbb
mov
lods
dec
ins
push
dec
dec
out
dec
jecxz
sbb
fnstsw
mov
xchg
(bad)
(bad)
sub
std
cmp
scas
test
jne
cmc
mov
lahf
mov
push
add
cmp
(bad)
xor
fsub
ret
mov
jmp
xor
pop
mov
call
xor
(bad)
sahf
in
(bad)
(bad)
jmp
add
arpl
adc
add
outs
jo
call
in
mov
inc
in
hlt
push
mov
out
xor
lods
adc
scas
arpl
dec
pusha
pop
mov
clc
movs
xchg
or
retf
cwde
or
jbe
jl
ss
out
lds
in
xor
sub
adc
jl
inc
xchg
into
mov
into
fldcw
movs
jl
add
xor
ins
daa
loop
inc
xor
add
cmp
movs
adc
xor
jnp
cmps
lods
and
cmp
mov
sub
iret
addr16
pop
jnp
scas
push
ficom
add
jmp
cld
cwde
lods
sbb
or
and
jmp
inc
xor
std
cs
pop
dec
outs
ins
(bad)
or
sbb
sub
inc
push
cld
and
cmp
inc
push
mov
sub
sbb
in
movs
(bad)
ds
pop
int3
dec
jo
cwde
push
sti
enter
pop
mov
lock
in
mov
in
scas
ret
push
xor
imul
xchg
out
mov
shl
mov
fldenv
sub
cmps
cmp
loopne
and
push
leave
fbstp
adc
sub
jecxz
pop
sbb
into
popf
pop
mov
scas
mov
xor
push
test
loopne
sub
jae
xor
and
add
std
mov
(bad)
retf
add
mov
pusha
cmp
xor
dec
mov
pop
ret
jae
jle
inc
or
in
loop
popa
and
adc
cld
jo
inc
adc
sub
cld
cmps
jle
mov
dec
in
jmp
or
test
xchg
ins
loopne
pop
outs
test
cmc
loop
jb
call
mov
fld
aas
lock
xchg
jns
mov
mov
lahf
mov
je
xlat
push
stos
cmp
add
cwde
jle
cmp
xchg
in
push
sbb
in
inc
cld
mov
adc
fcmovnb
mov
jp
jb
cli
xchg
xor
jae
push
(bad)
push
mov
cmps
call
lods
jo
outs
mov
jge
fs
test
ds
cwde
sbb
pop
xchg
int
scas
in
pushf
cld
fcom
adc
cmp
adc
or
fdiv
mov
shl
icebp
adc
jns
push
ja
mov
clc
push
and
cli
cmp
and
mov
test
hlt
jl
lock
out
mov
mov
mov
aad
pcmpeqb
popa
adc
ins
add
mov
jge
int3
cld
icebp
xchg
add
ins
sub
je
dec
sub
into
icebp
nop
sub
popf
rcr
mov
push
fsubr
push
in
div
and
hlt
hlt
call
mov
dec
jg
add
mov
mov
add
call
cmp
mov
out
pop
icebp
jg
in
ss
xchg
sub
xchg
push
scas
push
lds
push
add
xchg
icebp
sbb
aas
and
mov
dec
call
xchg
scas
cmp
int
lods
or
sub
inc
pop
sbb
int
cli
retf
pop
jae
mov
pop
mov
inc
and
pusha
adc
mov
xor
ins
or
nop
loop
out
fild
or
add
(bad)
cvtpi2ps
push
in
mov
lea
in
or
xchg
xor
pop
and
adc
in
les
xor
fcomp
jp
jo
call
sar
push
mov
ffree
jg
xor
pop
hlt
sahf
iret
or
mov
loope
adc
adc
dec
loop
mov
je
lods
iret
pop
xor
inc
outs
push
lahf
int3
aad
ins
loop
jb
cmp
add
aas
(bad)
jge
(bad)
rol
and
call
popf
push
loop
inc
shr
push
imul
mov
jbe
or
jmp
and
aad
inc
xchg
and
fadd
xchg
lock
mov
push
inc
add
aas
jl
jle
movs
and
jo
inc
outs
push
sti
jne
inc
mov
push
adc
push
pop
aam
xchg
cmp
lods
adc
pop
push
add
xchg
ja
test
adc
xor
fst
cmp
or
or
out
in
pushf
jp
sbb
xor
sub
inc
mov
push
adc
jae
test
jo
(bad)
pop
int3
adc
lods
push
sbb
imul
loopne
sar
pop
dec
stos
dec
daa
gs
sbb
jecxz
pop
xor
les
not
shl
int3
push
xchg
push
mov
push
jecxz
jo
add
nop
loop
push
test
sub
hlt
fbstp
nop
push
(bad)
fst
push
mov
push
out
loopne
cmp
or
xor
mov
lds
popa
repnz
jge
add
pop
aam
xchg
(bad)
cmp
aad
or
cdq
loope
(bad)
dec
xor
scas
fld
push
daa
icebp
push
push
push
add
mov
sub
sub
mov
pop
jb
mov
inc
inc
push
scas
mov
mov
mov
xor
ret
outs
push
mov
or
cmp
hlt
test
sbb
sbb
repz
ds
lahf
cmp
cmp
or
jns
lea
add
jae
push
xchg
and
push
loope
sbb
inc
fistp
loop
xchg
sub
sub
test
sub
mov
xchg
data16
pushf
cwde
shl
(bad)
sub
cmp
mov
neg
dec
in
rcl
xor
jb
dec
inc
add
lds
imul
int
sub
or
or
shr
add
sahf
call
mov
xor
cli
out
les
stc
ror
xor
stos
push
movs
mov
pusha
inc
sub
test
jae
test
push
mov
cmp
cmp
pusha
dec
and
lods
push
fdiv
pop
imul
(bad)
push
mov
mov
stos
cmc
leave
push
arpl
jmp
jo
cmp
and
ins
pop
sti
movs
and
or
call
test
int3
pop
jnp
lahf
mov
arpl
repnz
dec
mov
add
add
dec
scas
ins
jns
js
das
fsub
cwde
mov
mov
inc
jp
cmp
fadd
jae
adc
je
cmp
or
scas
pop
fwait
inc
sti
daa
repnz
aam
push
fdiv
mov
push
jns
add
xor
fild
ds
push
test
ret
or
int
popf
jl
jb
xor
cmp
pushf
scas
in
xor
in
inc
or
cs
imul
push
mov
mov
xchg
call
rcr
pop
div
xchg
or
cmp
rol
mov
loope
(bad)
pop
pop
adc
inc
leave
push
lock
mov
add
daa
xor
popf
(bad)
xor
aad
enter
bound
or
dec
mov
idiv
push
xchg
ja
or
jecxz
cmp
adc
or
inc
pop
and
iret
jecxz
cld
inc
dec
rol
rol
add
pop
mov
mov
mov
jae
push
and
fsubr
inc
jb
nop
push
ret
or
ins
adc
cmp
cwde
loop
sub
out
inc
cs
cmc
adc
jb
sar
pop
loopne
sti
pop
add
push
cmp
mov
mov
inc
sub
(bad)
fimul
loop
les
xor
into
sbb
pop
mov
dec
inc
retf
cmp
fsubr
lea
std
xor
stos
mov
mov
cmp
jle
add
std
lds
bound
stos
or
out
push
pushf
out
lods
pop
cmc
pop
add
es
push
mov
pop
jle
aad
cmps
out
int
out
enter
xor
dec
inc
mov
dec
jg
xchg
(bad)
adc
bound
sub
push
ficomp
ret
imul
sub
or
aad
inc
fcom
xchg
cs
jmp
sbb
fwait
lods
in
ins
dec
in
call
jmp
xchg
(bad)
sbb
pop
push
push
shl
fisttp
add
mov
mov
cwde
inc
pop
sbb
sbb
dec
les
add
rol
push
retf
push
cs
pop
xchg
mov
lea
mov
in
mov
mov
or
daa
sub
xor
cmps
retw
enter
iret
data16
and
adc
icebp
ins
push
mov
imul
ret
mov
iret
scas
mov
sbb
mov
xor
jmp
popa
fisttp
mov
xchg
jg
sub
repnz
ins
loop
outs
adc
aas
sti
cmp
cmp
jmp
pop
lahf
dec
iret
int
mov
inc
shl
rcl
push
mov
fs
dec
addr16
xlat
xchg
mov
pop
sbb
mov
(bad)
push
cs
pop
jno
pushf
movs
fs
sub
shl
les
cmp
scas
stc
push
imul
cs
xchg
mov
inc
jb
outs
clc
scas
aad
mov
mov
jmp
je
or
push
dec
mov
jl
push
and
fnsave
add
sar
call
inc
add
and
sbb
push
add
xchg
stos
cmp
and
(bad)
cmc
xadd
scas
fcmovu
dec
fwait
sbb
xchg
mov
aam
mov
leave
loopne
jno
push
xlat
fmul
cmps
adc
cmp
xchg
test
jbe
jmp
stc
xchg
ror
add
sub
mov
and
push
pushf
cmc
dec
rcr
jb
ror
retf
xchg
gs
adc
pop
rcl
cli
cmp
xchg
out
pop
movs
popf
scas
xchg
mov
push
outs
and
dec
push
or
xor
loopne
adc
popa
lock
mov
mov
(bad)
out
adc
inc
jbe
fld
dec
mov
xchg
sbb
cmp
inc
cs
loop
sbb
stc
fwait
dec
(bad)
jo
mov
push
out
pushf
cmp
mov
push
adc
or
jecxz
mov
and
inc
lock
nop
jmp
cld
iret
cli
inc
adc
inc
(bad)
dec
dec
mov
and
and
fist
or
int
pop
and
jp
cmp
ret
push
jae
mov
xchg
cs
xchg
rcl
dec
outs
mov
lahf
neg
mov
inc
push
xchg
mov
dec
mov
ror
xor
inc
popa
inc
arpl
xor
cmc
in
test
mov
mov
inc
aad
jl
out
jl
aam
test
in
xor
scas
int3
fisubr
and
add
or
push
mov
fnsave
xchg
ficomp
sbb
mov
pop
ins
xor
jl
sbb
inc
gs
adc
add
xor
pop
push
pusha
add
mov
cwde
add
addr16
sbb
sub
push
pop
not
pop
je
pop
inc
or
lods
icebp
(bad)
loope
inc
popf
ins
mov
daa
xchg
add
outs
mov
lods
retf
bound
hlt
fcom
pushf
mov
push
jle
ds
outs
and
int
sub
adc
cmc
fdivr
(bad)
ror
sub
pop
adc
sbb
test
jge
mov
adc
jge
mov
and
icebp
jge
ret
push
mov
cmp
sbb
mov
pusha
call
sub
imul
inc
mov
mov
lock
inc
inc
into
data16
and
adc
jo
sbb
popa
outs
add
xor
dec
xchg
cld
mov
into
(bad)
les
inc
pop
pop
and
cmp
adc
test
mov
xor
int3
test
dec
jmp
mov
fsubrp
sbb
shl
mov
loope
ret
sar
popa
lock
inc
mov
mov
lock
mov
mov
ins
inc
iret
mov
add
popa
repnz
test
push
(bad)
jl
lods
push
cld
or
mov
popa
sbb
mov
pop
mov
inc
mov
into
js
jns
scas
pushf
jne
push
retf
jns
lods
inc
cmp
in
outs
rcl
xchg
or
add
ret
mov
and
inc
out
sbb
in
mov
div
stos
retf
psubusb
cmp
mov
mov
arpl
movs
sbb
sbb
xor
std
ret
mov
pop
xchg
dec
mov
or
mov
lea
kmovb
jno
lock
fisubr
xchg
les
mov
xlat
mov
shr
fwait
jp
pop
xchg
mov
push
pop
pushf
fild
out
mov
outs
bound
pusha
jmp
int3
push
lods
hlt
div
mov
aam
sub
xor
loope
dec
mov
sub
dec
fstp
sbb
jns
mov
xchg
pop
inc
fcomp
daa
cmp
in
sahf
(bad)
jg
mov
jl
cmps
mov
(bad)
das
fnclex
rcr
or
inc
xchg
mov
push
mov
(bad)
sub
mov
mov
bound
adc
inc
loop
jns
out
js
sub
sbb
sub
aaa
jno
push
or
ins
or
std
call
and
leave
(bad)
int
enter
jbe
jno
push
pushf
jne
jg
das
jmp
cmp
aam
jbe
mov
dec
add
xor
cmp
mov
mov
mov
fnstenv
or
loopne
cdq
loopne
loop
enter
and
sbb
push
test
std
ss
leave
xchg
xor
and
dec
fisttp
fimul
xor
test
cwde
fmul
cmp
pusha
cmps
fcom
fld
lods
xchg
ror
int3
les
test
sbb
leave
add
movs
ins
shr
xchg
mov
jg
mov
cdq
icebp
add
or
add
pop
xchg
pop
xchg
inc
mov
xchg
iret
adc
in
test
mov
lahf
lods
loope
adc
cmps
inc
sub
sbb
shl
jo
mov
fmul
inc
idiv
je
(bad)
push
jle
dec
and
in
dec
jo
inc
push
iret
cmp
icebp
xor
cmp
jno
xchg
lahf
(bad)
sti
scas
sub
jo
inc
adc
jne
mov
scas
pushf
scas
sar
xor
and
ret
inc
push
outs
aas
push
jg
daa
lock
scas
add
stos
fld
in
data16
jbe
icebp
mov
popa
jl
pop
and
inc
lods
and
add
ror
dec
in
fdiv
bound
gs
sbb
scas
sar
jo
fcmovb
(bad)
cld
dec
aas
push
lods
fiadd
mov
fsubr
sbb
inc
into
repz
jo
or
add
neg
ficomp
pop
xchg
cmp
pop
push
sub
div
out
push
in
xchg
out
mov
ror
mov
mov
loopne
ss
vmulsd
or
dec
or
jo
mov
repz
test
push
adc
sub
jo
mov
outs
inc
jl
jb
sub
(bad)
ficomp
fcmovnbe
loop
dec
push
je
fidiv
nop
fisubr
dec
rcr
je
sub
jp
js
sbb
iret
daa
mov
test
and
mov
(bad)
sbb
sar
ins
sub
or
adc
ins
test
ret
jecxz
ds
retf
ds
repz
adc
ds
dec
add
push
jl
xor
cmp
pop
inc
mov
icebp
xchg
mov
lods
sbb
nop
xlat
xor
call
sbb
mov
or
push
rol
push
call
bound
cs
xchg
xor
mov
popa
(bad)
retf
cld
pop
mov
dec
outs
cmp
jae
into
xchg
mov
or
inc
das
js
aaa
aam
sub
clc
jmp
cmps
stos
add
mov
cdq
das
lods
lods
push
out
imul
sub
push
lea
popa
retf
icebp
or
inc
arpl
int
adc
mov
mov
pusha
popf
add
jae
cmp
in
sub
xor
cwde
cld
adc
push
pop
push
aas
pop
inc
nop
inc
lock
inc
test
pop
ds
test
imul
jmp
js
xor
sbb
orps
add
inc
sti
mul
(bad)
inc
adc
sbb
mov
mov
test
xchg
add
mov
mov
bound
aad
push
mov
sub
int3
sbb
mov
xor
jmp
dec
pop
sub
test
dec
ss
loopne
movs
pop
ficom
dec
sbb
and
or
xchg
and
int3
ins
mov
inc
cld
jmp
loopne
and
scas
fisubr
or
xor
push
inc
(bad)
sar
fsubrp
(bad)
mov
arpl
jno
push
movs
push
cld
push
push
mov
ret
or
scas
mov
pop
and
ror
bound
sahf
outs
xchg
ds
scas
push
inc
popa
fmulp
mov
enter
mov
add
and
mov
mov
rcr
adc
lahf
add
out
pop
out
je
push
push
int
test
sbb
inc
mov
pop
sbb
mov
in
scas
sub
xchg
pop
and
mov
xchg
mov
clc
xchg
dec
dec
loope
cmp
pop
in
xchg
in
ret
adc
shl
mov
pop
pop
sti
movs
sub
or
icebp
push
xchg
jl
cdq
mov
retf
mov
je
sti
in
pop
out
rol
inc
jge
add
arpl
leave
mov
xor
dec
push
mov
out
xchg
lahf
and
jae
jo
push
je
out
sub
sbb
scas
(bad)
aam
rcr
jge
jnp
sbb
xchg
sbb
mov
jecxz
push
jae
fisubr
lea
mov
inc
jl
mov
inc
and
mov
mov
test
or
not
aaa
and
xor
xchg
in
data16
rcl
loop
pop
jnp
mov
jmp
loop
movs
mov
add
inc
pop
pusha
in
movs
data16
pusha
or
mov
shl
xchg
sub
retf
stos
mov
push
popf
mov
push
ja
push
ss
rcr
in
and
xor
xor
cld
dec
adc
lahf
mov
cmp
popf
pop
push
add
cmp
or
cwde
jnp
xlat
add
mov
test
cmp
movs
das
dec
mov
and
into
pop
jbe
cmp
push
sub
ds
ds
or
pop
into
dec
cdq
out
mov
enter
repnz
imul
fwait
pop
or
fisubr
hlt
inc
call
out
adc
pop
inc
mov
loope
dec
push
hlt
adc
mov
scas
add
mov
fnstenv
or
loopne
push
ficomp
or
leave
pop
mov
es
jns
fnstcw
jbe
scas
imul
mov
jo
mov
sbb
pop
mov
ret
push
out
mov
mov
pusha
inc
retf
jne
test
ins
or
sbb
adc
loope
gs
repnz
mov
mov
adc
adc
cmps
sub
fsincos
push
imul
cli
fld
ins
push
jns
cmp
test
cdq
into
jbe
xchg
mov
pop
pop
pusha
popf
add
nop
xchg
ficom
mov
xor
dec
pop
(bad)
stos
mov
jne
pop
xor
dec
(bad)
ds
sub
pop
call
inc
or
jp
scas
cmp
enter
and
add
and
inc
das
sbb
(bad)
std
push
sbb
adc
jmp
inc
int
pop
sar
push
gs
test
fld
add
int3
xchg
sub
mov
push
ins
inc
cmp
std
pop
not
in
xor
or
pop
in
(bad)
clc
xchg
retf
in
not
cmp
and
and
mov
mov
cli
fstp
and
dec
jmp
inc
loopne
inc
xor
popa
je
(bad)
aam
jns
clc
movs
call
cmp
adc
ror
mov
lahf
mov
lahf
xchg
lea
in
stos
(bad)
xchg
leave
and
cmp
icebp
xlat
jp
icebp
pop
retf
sub
les
push
int3
xchg
bound
cld
or
xlat
retf
lods
shl
in
cmp
xor
call
jecxz
icebp
add
jecxz
pushf
push
xchg
arpl
add
std
adc
(bad)
(bad)
pop
xor
scas
outs
jae
adc
jle
mov
xor
stos
xor
jecxz
int
imul
test
adc
dec
xor
xchg
inc
in
aam
or
mov
mov
loop
sbb
or
dec
sbb
fwait
sbb
sub
(bad)
xlat
inc
xor
dec
sub
and
call
shl
nop
call
mov
cmc
adc
mov
leave
inc
cmp
outs
jmp
jo
xchg
dec
inc
shr
cld
arpl
xchg
mov
push
adc
outs
xor
out
pop
int3
into
icebp
pop
push
xor
repz
mov
in
lock
cmp
xor
stos
icebp
fsubr
push
in
cld
mov
in
sbb
data16
and
or
fwait
je
in
xlat
pop
mov
pop
adc
cmps
push
dec
push
fist
leave
xchg
mov
sub
jmp
add
std
in
mov
and
and
ins
xlat
mov
mov
xchg
ins
ds
sbb
fisttp
in
ror
mov
inc
or
ins
fisub
mov
mov
adc
xlat
sbb
cld
call
in
mov
stc
sub
ror
fild
leave
add
bound
std
mov
fldenv
cld
push
jo
arpl
adc
adc
loope
xor
lock
cvtps2pi
cld
dec
xchg
lock
adc
(bad)
adc
dec
hlt
loop
jo
mov
ret
repnz
scas
push
mov
lock
sahf
mov
shr
pop
mov
das
pusha
outs
int3
mov
mov
push
push
pusha
je
xchg
xchg
xor
jl
jmp
or
cmp
int3
nop
loop
jecxz
hlt
mov
or
int
int3
rcr
sub
gs
call
cmp
and
or
int3
call
sti
inc
mov
pusha
(bad)
cmp
adc
mov
xchg
cmps
cmp
xchg
lea
cwde
aaa
test
sub
outs
jmp
push
mov
clc
jp
out
cmps
jo
or
nop
sub
dec
sbb
outs
adc
dec
mov
sub
xchg
pop
pusha
pushf
imul
dec
xor
cmp
push
je
adc
push
dec
or
inc
fisub
adc
and
repz
fs
hlt
add
sub
daa
xchg
xor
call
or
mov
sub
pop
mov
xchg
jns
call
sbb
jnp
jecxz
pop
fcmovbe
out
test
into
adc
or
cmps
mov
jle
adc
int3
jg
add
fmul
push
pop
test
pop
or
int3
jl
arpl
xor
fucom
dec
and
jne
jns
lahf
lea
int3
pop
aaa
loopne
xor
pushf
or
ret
ins
aad
imul
stos
sub
rol
mov
add
push
les
mov
loopne
in
push
fs
ins
cmp
lods
movs
push
cs
add
xlat
or
outs
out
ror
sar
aas
pushf
mov
ins
stc
or
cmp
loop
jo
in
rol
rol
(bad)
jne
push
and
lahf
pop
loop
mov
add
addr16
cli
push
mov
pop
sbb
push
aam
cmp
call
mov
jne
mov
jle
sbb
es
in
lahf
push
lock
mov
mov
fmul
adc
inc
mov
adc
mov
shl
sbb
lock
sbb
sbb
push
daa
jo
dec
dec
cmc
mov
push
mov
scas
stc
fnstcw
shl
xor
ret
ret
adc
sub
xchg
sahf
xchg
pushf
in
pop
xchg
mov
pop
adc
cmp
ret
icebp
ret
mov
xchg
cld
fwait
imul
lods
ss
adc
fwait
rcr
xchg
or
lock
neg
repnz
or
mov
jge
movs
test
xor
xor
shl
dec
adc
fist
pop
fidiv
xchg
add
mov
xor
add
sbb
icebp
popa
cmp
jo
test
(bad)
je
push
iret
(bad)
dec
adc
cmps
adc
jns
sub
pusha
sbb
js
repz
ins
adc
add
mov
lea
adc
mov
jle
cmp
add
nop
cmp
stos
pop
push
test
fistp
xchg
div
sub
or
js
and
jge
fs
inc
clc
push
ja
mov
out
lods
mov
fisttp
fstp
imul
and
mov
sbb
cdq
stc
or
dec
pop
jmp
mov
(bad)
pop
mov
in
adc
iret
cld
repz
push
mov
and
lods
inc
push
push
addr16
dec
cmc
jl
xlat
gs
pop
or
mov
addr16
and
dec
xchg
retf
shl
lds
shl
hlt
push
push
lods
xor
popa
jl
adc
aam
lds
in
sub
lds
in
push
out
into
inc
dec
add
add
rcr
repz
sahf
(bad)
jecxz
xchg
sub
fucomi
inc
mul
sub
data16
icebp
dec
cwde
sbb
je
fs
sar
ficom
dec
loop
adc
push
pop
jae
aad
and
cs
aas
fs
or
cmp
mov
push
daa
ins
mov
fcomp
xchg
cmp
fmul
or
or
mov
add
adc
jns
lods
sar
out
popa
cmc
retf
loop
mov
mov
add
and
add
xchg
xor
dec
push
pusha
lock
xchg
lock
push
ins
scas
dec
popf
xor
add
jae
sbb
in
pop
mov
fisttp
mov
mov
arpl
aad
in
dec
pop
push
push
into
mov
mov
(bad)
sub
lods
xor
scas
xlat
push
adc
into
jle
cmc
and
push
sub
int
xlat
pop
fist
movs
lock
neg
push
fild
add
mov
fwait
pop
aaa
in
mov
mov
mov
(bad)
push
push
cmp
dec
adc
push
pop
add
lods
jl
inc
stos
arpl
and
and
pop
cmc
jg
in
push
imul
add
pop
push
pop
add
ror
out
gs
ins
sbb
inc
push
mov
mov
rcl
imul
call
into
pop
(bad)
jle
dec
popa
inc
cmp
imul
cmp
add
adc
movs
ss
je
ficom
mov
std
hlt
adc
aad
sub
push
mov
dec
(bad)
sub
or
inc
movs
clc
rol
mov
stc
(bad)
test
outs
xor
jno
add
inc
sbb
ins
sar
test
imul
pop
fcmovne
adc
or
imul
adc
mov
das
pop
push
int3
push
pusha
xor
sbb
mov
sub
xor
enter
push
push
loopne
xchg
cld
mov
jns
test
ss
cld
lock
repz
scas
sbb
shl
pop
jno
rol
jae
ins
sub
cmps
pushf
fwait
cmp
pop
mov
jl
ins
pushf
cwde
cmc
outs
aam
and
push
ins
push
dec
test
pusha
cld
cmp
mov
fisttp
and
push
sbb
sub
mov
xor
mov
jo
out
aas
add
repnz
jecxz
push
or
ret
ror
jge
cmc
icebp
pushf
xchg
pop
int3
lods
sub
push
inc
cmp
sbb
sub
lods
cmps
outs
cld
(bad)
fnop
cwde
daa
lods
lock
sub
(bad)
ins
dec
pushf
mov
(bad)
icebp
jnp
shr
mov
and
sbb
dec
xor
xor
mov
mov
(bad)
movs
push
aam
sub
mov
in
sbb
inc
inc
dec
mov
mov
ror
sbb
clc
cmp
jnp
ret
ss
mov
out
ds
dec
inc
shl
sub
imul
lods
call
aam
(bad)
rol
lods
(bad)
mov
jno
adc
sbb
and
lock
inc
pop
jnp
movs
imul
adc
or
ins
add
sub
(bad)
retf
jb
loope
add
sbb
shl
js
mul
mov
mov
aas
fwait
leave
mov
fcomp
sbb
rcl
das
stos
sti
bound
pop
xchg
mov
or
(bad)
outs
jmp
fild
mov
and
lgs
hlt
nop
fisub
cmp
retf
or
call
cmp
fld
xchg
jns
xchg
add
dec
pop
adc
and
add
aam
int3
int3
lods
mov
sub
pop
jl
sbb
int3
ds
jb
retf
rcr
retf
out
mov
leave
dec
das
rcl
add
push
fs
cmp
pop
mov
lea
dec
dec
mov
sub
dec
cmp
sahf
jl
pop
fmulp
add
inc
sbb
dec
sub
push
jns
and
xor
jge
imul
push
jge
adc
(bad)
sub
mov
mov
xor
aad
mov
das
or
bound
and
lock
(bad)
icebp
sbb
inc
int
je
jle
ins
sbb
data16
push
fnstsw
pop
mov
cdq
mov
lahf
mov
es
loop
cmps
pop
inc
adc
ret
mov
fwait
into
push
mov
lods
loop
cmp
jo
xor
or
lods
mov
imul
mov
pusha
shl
shl
data16
xor
movs
inc
push
cmp
mov
jmp
je
mov
aas
and
vpsllq
mov
xor
daa
in
mov
mov
mov
dec
mov
(bad)
retf
jge
mov
es
sbb
sub
out
shr
fistp
call
sub
lods
pop
xchg
push
pop
aaa
popf
push
cs
or
dec
or
icebp
add
cs
leave
loop
jne
mov
and
lahf
xchg
or
fdivr
les
xor
mov
js
std
(bad)
out
call
push
fmul
das
cld
cmp
dec
out
fidivr
add
mov
shl
dec
cmp
scas
call
pop
ret
pusha
lods
push
xchg
movs
dec
iret
lock
call
mov
add
shl
addr16
ja
push
and
scas
hlt
into
sub
add
(bad)
clc
pop
or
mov
test
shr
pop
retf
add
lods
pop
fs
repnz
(bad)
push
and
aad
xchg
sub
fiadd
push
(bad)
jge
pushf
fidivr
icebp
shl
fwait
ror
popa
out
and
in
sub
mov
test
repz
xchg
xchg
push
movs
dec
inc
je
loop
add
fcom
cmp
call
xchg
daa
(bad)
mov
stc
inc
push
pusha
sub
xor
dec
pop
pop
xchg
(bad)
popf
shl
jecxz
movs
or
aaa
or
retf
and
sub
aas
pushf
xchg
pop
out
(bad)
mov
mov
push
pop
sbb
mov
pop
push
pop
mov
pop
(bad)
jmp
lods
leave
mov
int3
movs
bound
dec
mov
jo
stc
cmc
fisttp
das
mov
movs
add
sar
xlat
pop
xchg
dec
sub
xor
je
inc
sbb
xor
dec
and
add
xchg
push
xchg
dec
or
test
ins
add
add
shl
mov
in
clc
jmp
jecxz
fld
in
and
stos
rcl
or
fiadd
cld
jns
pusha
or
sbb
out
pop
lds
xor
lahf
pushf
ins
xor
mov
mov
push
rcr
pushf
gs
add
lahf
xlat
jne
xor
ins
dec
or
push
sub
push
popa
lds
(bad)
push
push
call
mov
sti
ret
popf
jmp
ins
test
and
aas
fistp
xor
push
cmps
inc
popa
xor
mov
and
popf
ja
or
lea
mov
or
push
push
mov
pop
xchg
pop
stc
cmp
lock
cli
push
(bad)
push
pushf
jp
jmp
sub
mov
jbe
push
mul
sub
xchg
stos
mov
jp
xchg
mov
ror
dec
scas
ja
cmp
push
clc
sbb
sbb
je
jg
mov
dec
sub
retf
sar
ins
fxch
mov
ss
jne
nop
inc
cmp
and
adc
cmp
push
cmc
and
lds
out
clc
shl
jmp
and
adc
jb
call
pop
fstp
frstor
xchg
sbb
inc
mov
jnp
xchg
mov
mov
mov
lea
sub
scas
ffree
dec
aaa
sbb
and
aas
jmp
loopne
out
or
inc
int3
test
int3
mov
out
(bad)
bound
pop
sahf
into
inc
or
imul
cmp
std
inc
push
dec
add
into
enter
jbe
out
xchg
xor
or
dec
mov
int3
sub
cmp
or
pop
lar
xchg
in
jae
cmp
dec
cdq
sbb
sar
push
xchg
xchg
call
cmps
rcl
push
pop
pop
jl
xchg
ds
cli
dec
xchg
mov
popw
push
int
ds
gs
aam
sbb
xchg
xor
fsub
jmp
repnz
scas
jno
enter
and
mov
dec
movs
dec
sub
add
fistp
mov
pop
scas
mov
or
adc
(bad)
cmp
lock
mov
popa
(bad)
xor
mov
push
jo
sbb
mov
mov
sbb
xor
mov
mov
and
add
add
test
lods
fld
push
push
mov
mov
inc
or
jmp
sbb
mov
cmp
sbb
jecxz
ret
inc
adc
popa
or
call
push
inc
loop
fldcw
push
fisubr
dec
test
sub
add
outs
in
mov
into
and
fild
imul
cmp
adc
cmp
idiv
pop
adc
cwde
out
ror
fst
mov
mov
mov
ror
adc
pop
or
or
mov
pop
pop
xchg
pop
push
ds
mov
lahf
dec
or
xchg
shr
(bad)
mov
adc
call
lock
sub
jg
inc
push
mov
ja
xor
mov
push
(bad)
xor
mov
dec
in
jmp
adc
scas
jp
inc
push
dec
dec
(bad)
mov
mov
btr
or
push
adc
jmp
scas
jle
xchg
and
mov
ror
sbb
lods
mov
movs
push
rcl
push
or
jmp
shl
cmp
adc
mov
imul
xchg
xchg
popa
mov
enter
daa
inc
mov
cmp
js
cld
and
(bad)
mov
mov
inc
fbld
lahf
inc
inc
jle
repz
test
dec
cmp
ins
call
stos
jmp
fst
je
stos
dec
mov
and
sar
adc
inc
push
nop
xchg
ficom
cmp
mov
adc
ins
fadd
mov
inc
rol
xchg
leave
mov
mov
ins
jae
iret
xchg
xor
inc
test
in
arpl
(bad)
pop
xchg
out
test
cmp
dec
data16
pop
push
in
pop
(bad)
and
call
loopne
pop
jl
pop
fs
or
sbb
int
xor
std
mov
push
push
xor
xor
test
cmp
jl
(bad)
cwde
inc
fidiv
dec
push
js
mov
test
cmp
in
adc
mov
sahf
xchg
adc
in
nop
jnp
les
push
call
dec
or
pop
xor
inc
push
mov
into
mov
ins
loopne
mul
vminps
(bad)
pop
push
cmps
push
sub
and
push
cld
mov
test
cdq
mov
mov
pop
dec
push
sbb
and
fdiv
(bad)
inc
nop
push
mov
sti
ficom
fcomp
xor
xchg
dec
cmp
sub
rol
xchg
mov
xchg
test
mov
mov
push
mov
mov
add
ror
mov
xor
jnp
jo
xor
scas
and
push
or
sub
lods
xchg
add
test
repnz
push
ins
jb
add
xchg
test
mov
les
xchg
xor
jbe
leave
sub
sar
cmp
pop
in
pop
push
lods
adc
add
jp
mov
pop
aam
repz
sub
and
jno
sar
hlt
frstor
sub
pop
and
scas
and
pop
ds
fsubr
cmp
add
xor
ins
mov
push
cmp
xchg
push
cmp
jecxz
int3
push
push
push
adc
mov
sub
scas
sbb
mov
cmp
dec
xchg
xor
icebp
aaa
mov
mov
inc
push
or
jmp
push
mov
out
lods
mov
nop
loope
add
and
push
jbe
repnz
fdivrp
je
loopne
fsub
and
and
rcr
cmp
into
jg
shl
xchg
jbe
sub
pop
push
les
clc
lods
rcr
test
cmp
and
inc
pop
inc
aaa
push
shr
(bad)
dec
or
enter
dec
test
and
cmps
or
dec
push
mov
adc
pop
jb
mov
stc
ins
mov
hlt
ret
cmp
or
pop
dec
push
jmp
mov
add
popf
stos
push
fsubr
(bad)
scas
pop
das
mov
movs
xchg
jb
inc
add
cmp
sub
rcl
xor
cmp
pop
inc
xor
adc
and
cdq
repz
add
or
iret
or
xchg
mov
sub
ins
adc
sub
add
ins
cld
iret
test
adc
popa
xchg
push
mov
das
dec
xchg
inc
pusha
cmp
pop
adc
clc
push
sar
jae
std
shl
clc
(bad)
pushf
ret
sbb
mov
cmp
push
and
test
add
aas
das
lds
clc
fs
pushf
imul
fs
or
lahf
mov
mov
idiv
aad
dec
loop
push
sbb
mov
dec
mov
test
or
or
sti
and
icebp
sbb
retf
add
inc
mov
(bad)
or
pop
jecxz
cs
pusha
xlat
call
jbe
or
movs
inc
and
popf
sub
rcl
xchg
pop
sub
and
or
inc
sti
and
mov
cmps
nop
mov
sahf
pop
movs
sti
jl
sub
adc
xchg
and
inc
stc
add
sub
lock
mov
mov
repnz
movs
es
in
adc
hlt
(bad)
push
sbb
movs
pop
cwde
test
shl
sbb
and
int
mov
sub
inc
in
sar
(bad)
shl
and
sbb
adc
sbb
sub
adc
cmp
loopne
sub
f2xm1
mov
pushf
mov
fidiv
scas
adc
inc
pop
pop
in
popa
aam
inc
shl
shl
and
shl
ret
sub
pop
repz
push
fbld
mov
and
sbb
sub
adc
out
jno
mov
iret
cli
pop
push
mov
out
ins
int
imul
mov
imul
enter
fdiv
xor
test
mov
inc
(bad)
rcr
inc
cmp
xor
xlat
dec
push
pop
scas
mov
in
iretw
adc
jge
imul
cmps
sub
push
inc
and
dec
sbb
xlat
mov
in
movs
dec
stc
dec
data16
fs
fucomp
out
and
cmp
fwait
pop
add
lea
ret
stos
sahf
sub
jbe
fcomp
or
sbb
jnp
in
mov
retf
test
push
and
push
xchg
sub
cmps
and
vmwrite
push
xchg
ins
in
inc
mov
jle
add
in
out
xor
add
push
sbb
adc
mov
or
(bad)
adc
sub
out
(bad)
inc
push
mov
xor
xor
xor
movs
push
int3
mov
outs
or
nop
cld
fs
mov
sub
mov
hlt
push
add
xor
cli
lea
inc
imul
int
ins
(bad)
rol
iret
fisub
jecxz
out
sub
adc
mov
sub
xchg
mov
cmps
push
inc
in
fucomip
sub
push
imul
xchg
or
mov
xor
push
in
test
sub
mov
jns
pushf
xchg
(bad)
adc
ins
popf
mov
int
cld
in
jg
lock
add
xor
bound
scas
xor
add
mov
xchg
enter
pop
in
mov
es
and
jno
ret
push
sti
or
add
mov
adc
jo
cmps
repnz
fdivrp
jbe
push
jae
xchg
mov
mov
mov
lea
leave
inc
out
(bad)
and
call
pop
jne
pop
sub
cld
popf
cdq
push
hlt
fidivr
leave
dec
(bad)
aam
fs
xor
clc
sbb
xchg
jl
out
mov
inc
clc
jns
pop
sbb
in
mov
mov
adc
pushf
sub
cmp
sbb
aas
lods
scas
call
lock
aas
aas
push
fnstenv
or
push
int
mov
movs
mov
adc
jb
or
push
mov
cmp
sub
mov
repnz
dec
xchg
xchg
jge
dec
cmp
call
outs
mov
out
pop
clc
or
movs
push
adc
push
outs
lahf
lods
sub
xor
ror
movaps
daa
mov
inc
sub
test
in
cli
int3
mov
outs
mov
stos
pop
mov
cli
stc
sbb
call
imul
jmp
outs
jbe
sub
jns
jb
int3
lods
mov
(bad)
movs
popf
adc
enter
mov
scas
jb
std
add
pop
xchg
mov
jp
cmp
div
scas
or
jge
call
xor
and
ret
fist
dec
sub
mov
xchg
or
fs
call
adc
adc
js
dec
movs
loopne
xchg
clc
fidivr
or
rcr
add
or
test
repz
sub
push
sub
mov
mov
add
push
outs
cmp
call
xor
adc
push
pushf
xchg
je
popf
jmp
pushf
ret
pop
repnz
sub
mov
add
cmp
mov
icebp
lock
loopne
adc
cmp
sub
out
dec
cmp
out
or
imul
jns
xor
or
pop
jne
cmps
and
ss
outs
mov
mov
dec
pop
ja
mov
jo
adc
push
push
fcmovnb
(bad)
mov
jl
cwde
mov
push
sub
pop
(bad)
pop
enter
push
ret
jns
div
mov
ret
push
out
aam
sbb
aas
jns
dec
cmp
leave
push
mov
loop
lea
imul
mov
push
jg
adc
cld
xchg
xchg
adc
add
push
and
mov
push
mov
loopne
test
xor
and
adc
push
cmp
inc
in
loope
in
fstp
mov
pop
push
dec
imul
sub
mov
mov
cwde
icebp
xchg
and
loop
xor
inc
or
sar
nop
rcr
inc
fcomp
xor
aam
inc
sbb
int
pop
xor
clc
mov
adc
pusha
sti
jne
cmp
and
push
mov
xor
loopne
ror
mov
gs
xor
cmp
mov
jmp
test
add
ins
pop
dec
cmp
hlt
bound
and
sbb
call
mov
xchg
sub
js
sub
jb
test
nop
ds
lods
mov
add
cdq
in
ret
or
ds
inc
or
test
inc
sbb
dec
pop
cld
dec
int
iret
add
mov
out
sub
or
jp
jo
cmp
(bad)
jmp
ret
mov
cs
mov
je
xchg
cld
test
and
neg
and
and
stc
push
sbb
cld
xor
lea
cmps
adc
jl
test
popa
cld
pusha
std
sbb
(bad)
lea
pop
hlt
rol
or
sbb
fs
xchg
mov
adc
jg
in
jmp
or
aam
and
and
xchg
jge
or
rcl
jns
cmps
cmc
sub
cmp
cmp
add
adc
clc
out
jecxz
push
je
cmps
mov
ror
sbb
fwait
pop
mov
jmp
repz
repz
aaa
jmp
mul
mov
cmc
ds
xchg
dec
fist
call
mov
or
aad
dec
rol
cmp
add
rol
pop
inc
ds
xor
test
push
(bad)
sbb
pop
jmp
sahf
sub
dec
js
jo
xor
addr16
and
mov
mov
call
shr
pusha
mov
mov
cmps
cld
xchg
movs
cwde
int
dec
(bad)
jmp
in
cmp
push
inc
std
sbb
xchg
push
inc
mov
mov
into
rcr
imul
cmp
pop
jne
test
sbb
je
cmps
popa
dec
mov
jmp
mov
fldz
push
add
ret
inc
mov
inc
xchg
shl
scas
loopne
iret
fsubr
scas
aam
push
push
pushf
add
in
cwde
ss
movs
inc
les
cmp
in
lods
adc
adc
fidivr
jb
jns
xchg
push
pop
ret
adc
xchg
add
cmp
loopne
stc
inc
sub
in
push
jmp
jmp
hlt
in
jmp
test
push
mov
lods
adc
lahf
ret
int3
inc
fist
jmp
test
std
mov
scas
out
push
mov
xor
adc
cli
scas
push
retf
cmp
retf
inc
sbb
jl
ins
out
sbb
das
dec
arpl
int
sbb
(bad)
lock
jmp
imul
inc
(bad)
adc
movs
push
push
xchg
lahf
mov
js
loopne
cmc
lods
(bad)
je
out
or
repnz
and
sbb
pushf
xchg
rol
dec
in
jno
lock
jo
cmps
not
shr
mov
sub
cmp
push
ret
mov
and
sbb
inc
scas
clc
call
call
sbb
mov
fisttp
data16
stos
mov
out
mov
daa
sbb
aaa
pop
mov
pop
pop
mov
mov
and
mov
shr
int
int3
push
gs
sub
fsubr
sbb
jo
sub
mov
mov
xlat
push
rcr
gs
cmc
call
or
sahf
pushf
push
push
or
mov
mov
adc
popf
enter
xchg
adc
xor
push
and
mov
mov
sahf
dec
pushf
mov
out
and
cmp
push
sbb
sub
jl
push
mov
mov
xor
mov
dec
pop
loope
retf
cmp
add
es
jl
lahf
pop
mov
in
scas
sbb
aaa
fnstsw
xchg
jge
cmps
cmps
int
pop
(bad)
push
out
repnz
fsubr
jmp
daa
cmp
ss
cmps
inc
and
and
pusha
pushf
in
pushf
mov
ds
fdivr
arpl
stc
inc
cs
push
lods
dec
mov
xchg
pop
push
nop
mov
rcl
je
dec
mov
push
cmp
dec
cmps
sbb
dec
mov
enter
out
jmp
add
sti
jp
outs
imul
add
pop
lods
leave
cs
cmp
gs
int3
icebp
mov
mov
jnp
into
or
push
push
lahf
mov
push
inc
stc
call
sbb
shr
pop
call
or
cmp
aaa
outs
xor
scas
nop
jg
stos
mov
mov
movs
fwait
in
pop
lock
es
adc
iret
push
sbb
test
cli
jle
(bad)
popf
add
out
pop
dec
and
adc
sbb
repnz
mov
lea
in
inc
call
fimul
jbe
out
mov
add
inc
cdq
in
cmp
sub
jmp
and
cmc
sub
xor
adc
(bad)
ds
or
mov
addr16
nop
mov
int3
mov
xor
xor
xchg
icebp
adc
add
fstp
lahf
mov
adc
test
icebp
pop
sbb
add
ja
inc
mov
sub
adc
sub
cdq
sar
pusha
lods
fcomp
jo
sbb
or
add
pop
xchg
pop
xchg
pop
dec
push
pusha
call
pop
in
sub
xor
xor
xor
(bad)
lock
jge
daa
xchg
fs
lods
mov
(bad)
stc
jmp
ret
test
inc
sbb
fdiv
mov
jecxz
ror
xor
hlt
popa
popa
popa
(bad)
jl
inc
aad
pop
ss
mov
push
into
rcr
push
ja
movs
ret
in
cmp
in
pop
clc
imul
jo
mov
sub
xchg
or
lea
and
cmp
mov
push
aad
out
cmp
call
adc
mov
xchg
mov
test
dec
dec
jmp
das
ror
out
and
stc
cdq
mov
dec
sub
adc
adc
adc
aad
xor
pop
(bad)
stos
sar
aam
push
sbb
aad
push
jle
mov
je
je
stos
popf
cmp
push
xor
mov
test
movs
outs
mov
add
rcr
cmp
ins
or
xchg
mov
cmps
ret
mov
sub
out
repz
shl
and
cmp
pop
ficomp
outs
ret
mov
pop
xchg
xchg
lahf
mov
sbb
add
loop
mov
ins
pushf
repz
mov
mov
xchg
js
popa
jl
and
jmp
push
push
cmovne
loop
mov
sub
hlt
sub
mov
(bad)
xor
pop
jl
mov
jge
inc
daa
(bad)
xchg
inc
xchg
jge
ins
in
jmp
and
pushf
xor
sub
cmp
cmps
enter
scas
inc
int
cmps
(bad)
mov
test
cld
pusha
sti
into
sti
(bad)
movs
adc
bound
dec
popa
data16
mov
jno
jb
and
scas
sub
lods
shl
xor
mov
dec
and
out
scas
sbb
fst
ss
sbb
jmp
fsub
or
movs
dec
mov
and
cld
(bad)
fmul
xchg
adc
cmp
mov
or
adc
movs
sub
inc
and
cld
bound
ins
arpl
xchg
icebp
xchg
add
cs
imul
int
cwde
adc
out
rcr
dec
dec
xor
in
lahf
sbb
lods
inc
push
iret
call
cmp
imul
arpl
dec
in
add
cmp
xor
mov
pop
std
jno
mov
js
shl
and
js
adc
inc
cmps
pop
and
mov
xor
repnz
ja
add
(bad)
je
sbb
pop
dec
ins
or
test
rcr
(bad)
cld
and
adc
mov
aaa
xchg
jecxz
bound
and
pusha
xor
push
data16
imul
push
cmp
push
shl
sub
shl
aaa
adc
add
jp
dec
test
retf
or
push
inc
addr16
aad
or
mov
sub
call
inc
xchg
or
push
jmp
out
test
inc
cdq
out
or
add
icebp
mov
(bad)
cdq
mov
(bad)
sbb
add
dec
jl
xchg
xor
and
inc
xchg
dec
out
dec
aas
pop
and
outs
cld
or
inc
mov
or
ja
adc
push
lock
pop
(bad)
call
mov
mov
add
repnz
int
sti
push
push
lea
and
into
in
aam
sbb
dec
xor
icebp
mov
popa
xchg
add
sub
push
adc
fs
fnstsw
retf
inc
push
pop
mov
push
test
pop
mov
mov
xor
icebp
add
adc
push
sar
and
cmps
fsubr
xchg
mov
push
cmp
fs
jecxz
bound
repnz
dec
jb
pushf
adc
sbb
xor
in
inc
sbb
and
or
add
cmp
jg
lods
outs
cmp
bound
ins
movs
add
int
xchg
loopne
jb
xchg
mov
fisubr
mov
mov
nop
or
nop
jbe
sbb
pop
pop
mov
test
mov
xchg
cmp
iret
imul
repnz
icebp
pop
jae
cwde
pop
add
xor
or
inc
int
(bad)
sbb
push
mov
outs
cdq
js
aad
sub
jb
fdivr
inc
int3
lds
xchg
mov
mov
rcl
enter
cmp
mov
jo
jmp
into
cmc
int3
icebp
in
ins
repz
pop
push
inc
sahf
fsubr
mov
mov
jno
pusha
stos
adc
sbb
mov
scas
lea
sbb
jp
lods
fs
pop
push
into
cmp
icebp
test
mov
ret
repz
xchg
add
out
je
arpl
stos
push
dec
jg
aam
pop
std
mov
xlat
push
mov
fimul
add
push
sub
push
adc
mov
dec
xor
test
mov
and
test
frstor
ror
lods
sti
inc
xor
inc
xchg
mov
xor
xchg
inc
ret
xor
arpl
lods
ins
test
inc
push
std
sub
add
movs
or
imul
rcr
mov
mov
mov
dec
loop
mov
sbb
jle
sbb
push
pop
cli
or
test
add
mov
shr
mov
mov
jne
pop
fs
bound
xchg
xor
cmps
cmp
pop
mov
push
out
xor
or
repz
dec
arpl
loop
dec
cli
in
mov
or
stos
xchg
pop
mov
adc
popw
scas
mov
mov
loope
xor
fwait
sti
mov
(bad)
mov
lods
sub
sub
add
into
pop
and
popf
inc
sahf
call
add
or
(bad)
movs
lds
xchg
mov
mov
push
clc
in
cmp
push
xor
mov
pop
popf
sub
cs
loop
push
xor
ret
ret
push
cmp
xor
repnz
arpl
add
add
jmp
mov
rcl
mov
inc
ins
cmp
movs
out
push
aam
lea
(bad)
(bad)
imul
cmp
add
test
sub
mov
sti
outs
mov
es
pushf
inc
std
mov
lahf
(bad)
cmp
cmp
(bad)
lods
mov
ror
mov
test
scas
lock
xor
pop
or
or
call
test
movs
mov
and
or
popf
ja
(bad)
mov
push
les
xor
sbb
loop
pop
clc
pop
push
mov
popf
pop
cmps
mov
adc
fisttp
push
popf
pop
add
mov
sbb
jge
ins
aas
mov
pop
pop
push
xlat
aam
mov
fisubr
outs
add
or
add
inc
rol
cmp
mov
or
ror
cs
adc
jnp
fs
mov
ins
fidivr
jl
mov
and
jmp
jae
adc
sar
neg
stos
fbld
fst
f2xm1
mov
cli
test
sub
int3
sbb
adc
or
xchg
push
cmp
std
pop
push
ds
mov
xchg
xchg
or
(bad)
push
enter
add
xor
mul
dec
push
mov
or
inc
pop
jge
out
push
imul
movs
inc
(bad)
icebp
mov
scas
clc
xor
out
mov
shl
jbe
pushf
pushf
sub
jo
mov
mov
fisub
bound
popa
adc
mov
leave
jge
cmps
or
push
fisubr
jmp
push
test
adc
mov
and
xchg
jge
pop
sub
shr
aam
fld
mov
pop
add
int
dec
nop
bound
pop
cmovnp
pushf
leave
call
sub
lea
push
inc
mov
jge
or
xor
gs
(bad)
test
idiv
add
addr16
ins
sub
push
loope
fst
repnz
ret
add
pop
hlt
popf
loop
push
fidivr
pop
sub
scas
je
xchg
jg
and
sub
int3
pop
and
daa
adc
cmp
jmp
ds
(bad)
fld
fs
pop
sahf
dec
sub
cli
xor
and
xchg
into
rcr
push
movs
push
inc
shl
fld
dec
fwait
loope
retf
outs
ins
xor
jae
adc
sbb
mov
lods
test
pop
stc
aaa
mov
adc
in
jp
in
sbb
out
push
repnz
xor
shr
cmp
gs
sub
ret
xor
lea
outs
and
cld
sbb
or
mov
mov
mov
ret
inc
lods
jge
fadd
fstp
sbb
jne
pop
jg
(bad)
aas
lahf
pop
push
sbb
sbb
gs
rol
inc
ins
inc
rol
jecxz
popa
pop
mov
mov
xchg
mov
js
and
fdiv
aam
sub
dec
shl
mov
sub
mov
adc
mov
cmp
pop
sub
and
xor
jle
mov
clc
sahf
jo
pusha
cmp
mov
add
scas
mov
ret
jae
scas
xor
jge
dec
inc
mov
dec
or
mov
movs
dec
adc
dec
lods
clc
pop
mov
sub
inc
movs
jnp
xchg
fcom
jo
div
stos
xor
push
push
nop
mov
or
scas
inc
jecxz
jle
in
xchg
(bad)
mov
jne
gs
pop
mov
mov
adc
sbb
sub
movs
ds
cmp
nop
jnp
std
ror
icebp
lods
mov
out
aaa
cmc
popf
iret
stc
dec
jno
jb
dec
outs
push
mov
js
js
ror
or
cmp
push
(bad)
xor
pop
popa
xlat
mov
lods
ret
xor
and
retf
cld
and
jmp
int
mov
das
jns
loope
lods
dec
mov
mov
fdiv
dec
test
cdq
test
bound
lods
rcl
add
mov
test
test
ret
push
push
fsub
mov
adc
test
add
jge
mov
sub
fsub
dec
test
mov
movs
nop
mov
mov
out
fcom
cwde
sbb
xchg
mov
test
pop
ins
pusha
xor
cdq
ins
(bad)
idiv
adc
addr16
stc
pop
mov
fsub
cmp
inc
xor
test
jle
std
mov
adc
sar
dec
hlt
scas
outs
push
fcomp
mov
loopne
test
push
cmp
int3
adc
aam
lods
add
sbb
lock
mov
mov
add
adc
in
sub
mov
loopne
cmp
inc
cld
jle
lock
test
adc
int3
fwait
add
push
jl
sar
loopne
nop
sub
dec
fmul
inc
cmps
jo
popa
adc
out
jo
inc
and
pusha
shl
loopne
lock
in
nop
pop
adc
fcomp
sbb
dec
in
sbb
inc
xchg
dec
mov
push
pushf
jl
inc
xor
add
js
add
pop
or
jmp
jmp
cmc
jo
pusha
fisttp
pusha
add
mov
fcom
cld
int3
pusha
repnz
dec
jo
inc
push
adc
mov
xchg
sbb
sar
stos
dec
cmp
das
and
(bad)
cld
xor
ja
or
idiv
push
and
lods
xor
popf
test
adc
xor
scas
or
int
xchg
add
sub
mov
lock
inc
cmps
fwait
sbb
bound
adc
sub
ins
test
rcl
ret
loope
popa
add
sbb
fmul
inc
fucomp
push
test
and
nop
fwait
data16
jg
pop
adc
loop
adc
mov
nop
push
adc
push
shl
into
aad
std
fnsave
idiv
xchg
adc
push
or
ins
jo
adc
and
leave
(bad)
in
lds
loopne
adc
mov
sub
sbb
ins
sub
lds
rcl
int3
dec
jmp
and
dec
inc
adc
or
pop
jae
ror
inc
mov
jnp
pushf
loop
xchg
or
sahf
push
rcl
push
jl
imul
pop
fwait
adc
inc
out
into
cmp
dec
popf
dec
out
push
add
jne
mov
dec
sbb
mov
push
or
mov
dec
and
movs
dec
hlt
and
push
dec
or
mov
dec
adc
adc
sbb
dec
nop
sub
and
shr
out
lds
int3
mov
sbb
xor
mov
sub
mov
lock
xor
cmp
int
lock
add
xor
push
xor
(bad)
les
or
sbb
pop
stc
fnsave
out
not
xchg
popf
ret
xor
jl
jbe
ror
test
shl
int
enter
stos
xor
test
shr
mov
pusha
jl
leave
mov
int3
adc
cmps
sbb
gs
dec
lods
push
dec
shl
dec
cmp
pop
ins
cs
push
mov
cmp
loop
adc
cld
sbb
imul
pop
mov
and
(bad)
in
xchg
or
sar
int3
mov
fiadd
mov
cmp
pop
adc
pop
cmp
inc
xor
mov
mov
pop
xchg
int3
rol
nop
icebp
int3
push
mov
push
add
xchg
ins
test
sbb
and
pushf
loopne
jmp
lods
outs
or
or
(bad)
test
je
dec
add
mov
call
neg
add
shl
retf
jge
test
rcl
xchg
cmp
in
nop
and
clc
mov
sbb
in
xchg
jmp
xchg
adc
add
push
out
arpl
and
inc
scas
fs
inc
jecxz
popa
xor
adc
sbb
and
and
adc
out
adc
cmp
push
aaa
pop
fnstenv
jge
in
xchg
int3
mov
test
mov
push
lods
and
out
pop
xchg
or
or
mov
in
clc
xor
je
jl
inc
adc
push
in
jl
(bad)
push
jp
add
ret
mov
xchg
(bad)
xchg
fst
add
and
les
enter
push
cld
cld
lds
fistp
cmp
mov
ficomp
sahf
sbb
cld
sbb
int3
loopne
ror
adc
xor
mov
ror
jl
push
hlt
mov
shr
or
push
mov
mov
push
rcr
xchg
push
int
(bad)
jmp
dec
sub
or
shr
aas
jecxz
jo
jl
and
dec
xor
adc
fisttp
arpl
sbb
lods
mov
lods
pushf
push
add
ins
not
add
push
sbb
aas
xchg
cmps
jl
in
pushf
sub
dec
pop
(bad)
fcomip
push
pop
push
in
clc
add
mov
mov
jg
mov
cwde
out
aad
dec
jns
out
jecxz
lock
mov
jae
adc
dec
xor
jp
push
aad
test
mov
call
mov
bound
ins
cwde
pop
cmp
inc
sub
xor
pop
repnz
test
xchg
nop
sbb
jns
leave
xlat
push
jg
test
rol
push
sahf
mov
sti
(bad)
shr
aam
ret
inc
xor
test
popa
xor
xchg
sbb
pop
push
sbb
pop
test
aad
mov
push
rol
push
dec
aas
sub
jge
cmp
push
jae
rol
adc
dec
rol
test
rcl
dec
adc
jae
push
jp
stos
pop
dec
mov
inc
sub
push
inc
lahf
mov
ret
mov
dec
mov
mov
mov
pusha
push
cmps
add
mov
mov
mov
fmul
adc
jg
push
or
cmp
pop
(bad)
(bad)
int3
xchg
pushf
clc
mov
sar
fsubr
push
aas
add
lea
push
dec
call
sahf
and
and
ret
push
sub
xchg
jecxz
std
push
push
mov
xor
xor
ret
rcr
imul
ins
or
pop
push
push
mov
lahf
fistp
inc
and
adc
call
jbe
mov
inc
aam
call
cld
cwde
in
mov
mov
scas
stos
adc
push
aaa
or
dec
popf
jle
add
ret
dec
test
jge
sbb
or
dec
sbb
cs
pop
adc
mov
inc
repnz
jge
ins
or
mov
in
jbe
int3
mov
pop
in
lock
fadd
lock
sar
sbb
inc
nop
push
shl
std
mov
dec
fdivr
xor
and
imul
xchg
adc
mov
and
lods
loope
int3
cmps
fsubr
pop
jb
mov
(bad)
jmp
dec
cwde
shr
dec
loope
xor
sub
push
xor
cmp
outs
ret
sbb
(bad)
sbb
xchg
sub
pushf
dec
rcr
xor
std
adc
out
pop
mov
push
sbb
rcr
and
xor
loope
fdiv
fst
mov
cdq
std
mov
fild
ins
xor
pushf
dec
mov
mov
mov
push
outs
sub
out
and
xchg
push
mov
movs
or
(bad)
in
movs
mov
jge
add
cmc
xor
dec
add
pop
int
xchg
cwde
or
add
leave
mov
popf
jae
push
mov
ret
fild
out
xchg
inc
into
movs
or
std
sahf
adc
add
or
push
pop
lds
mov
inc
mov
jg
paddusw
iret
shr
cmp
xchg
adc
int
les
out
outs
scas
lahf
mov
jge
int
inc
cs
std
leave
inc
retf
das
popa
arpl
inc
push
jmp
fst
xlat
and
adc
pop
dec
shl
repnz
dec
push
or
adc
into
mov
neg
rol
xchg
or
or
jmp
fdiv
int3
mov
mov
jo
cld
shl
and
fadd
sbb
ins
int3
enter
jne
mov
std
repnz
shr
loopne
icebp
mov
sub
adc
mov
xlat
sub
aad
cmp
pushf
mov
fisttp
dec
pop
imul
outs
cmp
jbe
or
pop
int
cld
xchg
xchg
pop
inc
inc
repnz
in
pop
sbb
aad
(bad)
adc
in
jb
or
mov
call
sbb
neg
loopne
xchg
jge
mov
add
mov
ins
mov
mov
dec
sbb
jmp
fisttp
rcl
cmp
test
stc
popf
adc
iret
xchg
fs
jl
xchg
inc
daa
rol
push
xchg
and
or
je
dec
jae
sub
nop
xchg
shl
std
arpl
lock
jmp
or
(bad)
rol
dec
gs
das
in
or
jb
aam
loopne
push
imul
fiadd
pop
pusha
ins
mov
sbb
inc
sbb
out
pop
cli
das
sbb
sub
push
adc
lea
xor
fmul
or
sub
or
inc
xor
lods
inc
out
dec
cmp
inc
mov
xor
fwait
jmp
or
iret
fdiv
in
clc
sbb
ins
xchg
in
push
and
dec
and
shl
popf
and
cmp
lods
loopne
rcr
mov
dec
popf
cli
dec
les
or
add
add
adc
pop
pop
arpl
jns
nop
or
mov
loope
out
aad
pop
jl
jl
cwde
cmps
or
lods
pop
dec
inc
push
lock
adc
add
sbb
movs
mov
and
dec
(bad)
int3
js
xor
jns
stc
in
and
inc
sub
dec
mov
add
movs
mov
aad
jmp
jnp
mov
ror
xor
jae
xchg
sub
nop
out
fldcw
mov
das
lods
lock
scas
enter
cmp
dec
jne
in
sub
and
dec
and
dec
sti
mov
test
mov
ret
mov
ja
lods
or
jno
sub
xchg
fldln2
or
lods
sub
in
jg
mov
adc
jo
(bad)
pop
into
mov
inc
jo
fnsetpm(287
out
call
inc
movs
shr
mov
scas
dec
nop
lea
jp
loopne
in
stc
jb
mov
xor
lods
fidivr
and
push
pop
enter
sub
cmp
xchg
in
rol
add
call
xor
pop
bound
loope
icebp
cmp
pop
inc
pop
adc
push
jae
sahf
test
sub
mov
jle
jmp
jnp
pop
push
fisubr
(bad)
sub
loope
cwde
imul
push
call
mov
pushf
push
or
cmp
inc
mov
sbb
mov
add
add
mov
jo
repz
or
repnz
dec
sbb
lods
xchg
repz
jle
adc
test
sub
test
add
inc
and
sbb
cmps
cmp
call
mov
popa
mov
sub
add
popa
xor
add
mov
aad
shr
icebp
popa
iret
cld
fisub
ins
mov
lock
aad
loop
xchg
jb
jp
mov
out
je
pop
mov
pop
mov
arpl
xchg
pushf
cmp
dec
sub
cli
push
jle
pop
jbe
mov
test
in
and
xor
mov
xlat
adc
push
shl
fisttp
jl
dec
push
fadd
(bad)
lock
cmps
jle
push
or
sbb
lods
pop
pusha
loop
jnp
jp
jmp
jl
adc
adc
bound
shl
sub
or
pusha
or
xor
mov
outs
in
cs
rol
push
dec
push
dec
and
xor
dec
cmp
test
jle
mov
clc
retf
mov
jnp
fld
test
cmp
ss
test
pusha
xor
push
adc
mov
aas
jo
loop
add
mov
sub
imul
add
adc
aad
or
sar
(bad)
ins
pop
inc
or
jne
jecxz
jg
loope
lods
sti
call
leave
stos
shr
int3
xor
and
xchg
mov
je
pop
add
es
mov
icebp
retf
jmp
ins
add
icebp
inc
sbb
repz
xor
push
int
xor
(bad)
in
in
xchg
pop
add
jo
outs
and
stc
jns
xor
lods
retf
or
fisttp
mov
fadd
dec
(bad)
lods
sub
and
adc
xor
int3
ror
push
call
inc
jmp
add
cmp
sub
iret
mov
add
js
cli
dec
or
nop
sti
sub
dec
(bad)
cmp
pop
leave
add
dec
push
pop
cmps
adc
mov
test
fisttp
adc
or
(bad)
js
xor
mov
cmp
in
std
ror
mov
sub
dec
clc
jbe
ins
adc
cmp
mov
push
adc
fs
push
shl
or
cmp
bound
nop
add
push
in
pop
cdq
jge
dec
jno
dec
iret
icebp
vmovss
js
movs
ds
cmp
rcl
ja
adc
push
lock
test
inc
dec
scas
lods
push
nop
sbb
fdiv
pop
shl
in
xor
add
in
jns
xor
adc
sar
fadd
mov
rol
mov
jo
mov
popa
nop
inc
jbe
(bad)
fld
add
nop
(bad)
js
ds
inc
add
popf
int3
js
sbb
pop
xchg
sbb
lods
rcr
inc
pop
fnstcw
ins
in
popf
mov
std
pusha
and
cmovo
cdq
sbb
adc
jg
lods
mov
mov
popf
loopne
neg
mov
cmp
hlt
ficom
loopne
push
xchg
cmp
xor
rcl
pushf
mov
in
xor
retf
or
cmp
xor
loopne
xor
fcom
popa
jmp
sub
iret
loop
adc
fnstcw
inc
enter
add
arpl
out
enter
pushf
xchg
loopne
nop
sub
xchg
lock
je
lods
inc
lea
xor
pusha
sbb
pop
(bad)
cmp
loop
mov
movs
sub
std
or
ins
cmp
mov
in
jge
pop
cmp
mov
xchg
sbb
pusha
or
in
pop
sub
dec
cld
mov
xor
clc
xor
pop
stc
push
or
adc
fimul
mov
je
mov
pop
and
pop
mov
test
and
fs
inc
movs
push
xchg
pop
cmp
nop
adc
ret
xor
inc
pop
jge
jl
das
arpl
lock
mov
sub
mov
ror
jbe
and
cmps
push
mov
sar
inc
ja
jmp
in
adc
shr
loopne
popf
adc
aam
cmp
nop
nop
ficom
xchg
xor
fdivr
mov
lods
aam
sub
dec
mov
xor
call
dec
int
xchg
jo
mov
sbb
inc
dec
sbb
repnz
pushf
(bad)
mov
mov
test
jbe
lds
mov
sbb
lods
jo
and
sbb
enter
pop
xor
mov
inc
stc
pop
nop
stos
mov
mov
and
xor
fs
dec
lock
adc
stos
nop
xchg
mov
imul
xchg
and
inc
pusha
nop
(bad)
dec
lock
xchg
add
rcl
jo
dec
sub
cmp
cld
mov
mov
int3
inc
pop
mov
int
adc
inc
and
cld
and
lahf
ds
sub
lods
and
daa
dec
les
call
lahf
out
inc
or
adc
sub
test
mov
xor
pop
icebp
hlt
xor
xor
int
in
cmps
ds
sub
inc
mov
lods
rcl
mov
pop
lods
pushf
adc
jbe
jo
cmps
mov
das
int
adc
jo
cmp
sub
mov
or
and
add
(bad)
jns
and
and
xlat
inc
scas
inc
loope
int
sub
mov
shl
add
int3
sbb
retf
add
in
cmp
inc
jecxz
shr
sub
and
and
cmp
ror
xchg
(bad)
pop
adc
retf
jbe
jg
xor
lock
add
leave
pop
xlat
adc
lds
popa
add
std
cld
xchg
in
in
icebp
addr16
mov
shr
pusha
cmp
cld
inc
mov
mov
retf
and
daa
ins
ins
xor
mov
mov
jge
push
pop
xor
push
sbb
adc
pop
mov
lock
jge
sbb
in
loopne
scas
in
lods
adc
mov
loope
jno
test
cld
popa
and
fdivr
aaa
dec
cdq
iret
mov
mov
dec
dec
jb
add
fldenv
mov
icebp
push
fstp
cmp
mov
xor
adc
dec
imul
jge
(bad)
pop
clc
pop
push
sub
pop
fmul
xchg
or
rcr
inc
sbb
stc
int3
mov
std
data16
push
adc
push
mov
jb
or
loope
retf
and
repz
cdq
mov
add
mov
jl
cmps
repz
int3
dec
adc
mov
mov
dec
jo
shl
jno
mov
ror
and
dec
scas
not
and
mov
or
dec
sbb
mov
mov
inc
sub
sbb
cmps
add
mov
fnsave
movs
lods
sar
mov
sahf
loop
jmp
add
dec
xor
movs
xor
shl
in
adc
dec
pop
xor
lods
jl
fld
xor
jo
dec
xor
rol
test
pushf
(bad)
pop
and
jmp
ror
imul
popf
dec
push
jg
scas
out
pushf
lock
and
(bad)
fdivr
sub
retf
scas
adc
sub
or
xor
cmp
sub
or
and
dec
xchg
fiadd
or
pop
(bad)
in
das
adc
push
dec
rcl
mov
iret
ins
retf
jg
pushf
add
jg
adc
into
push
mov
xor
rcl
or
xchg
(bad)
jl
inc
lock
xchg
sub
add
std
fldln2
xchg
aad
stc
bound
and
add
and
test
lock
and
sub
cmp
dec
mov
mov
lods
jge
outs
adc
jo
loopne
xor
es
push
les
retf
(bad)
lods
iretw
sar
in
inc
cwde
mov
mov
xchg
sub
sti
sbb
or
retf
push
sub
jmp
ror
inc
cmps
rcl
push
loop
push
add
pushf
push
dec
jno
or
dec
jmp
cmp
cmp
mov
cmp
lods
pusha
rol
lods
fdivp
dec
enter
mov
clc
sbb
adc
push
jle
nop
xchg
and
mov
inc
inc
jmp
aam
into
inc
sub
lea
(bad)
std
or
xchg
fisttp
xor
mov
and
retf
xor
vpshaq
ficom
xchg
mov
sub
enter
jl
dec
mov
popa
movs
mov
cmps
in
shl
and
outs
dec
cwde
adc
scas
sub
gs
outs
xor
clc
f2xm1
stos
add
jl
pop
or
xor
hlt
cmp
xchg
fsubr
in
arpl
data16
cmp
mov
test
fs
arpl
mov
mov
mov
cdq
pop
shl
xchg
mov
in
sub
dec
ror
pusha
lods
pop
mov
xor
cmp
jno
je
jmp
inc
enter
sbb
mov
pop
fisubr
push
add
pop
adc
cmps
gs
xor
aam
ret
adc
sub
jo
loop
or
pop
push
mov
loop
xor
add
mov
mov
call
outs
std
in
add
mov
inc
mov
xchg
fild
or
stos
adc
mov
ss
inc
xor
jo
ins
or
sub
cs
jmp
scas
in
in
dec
or
mov
xchg
cli
add
mov
dec
rol
mov
xor
mov
sub
call
cmp
mov
(bad)
dec
xor
or
lods
sub
sbb
jo
xchg
mov
push
or
nop
mov
or
mov
pop
rcl
test
xchg
(bad)
in
sahf
add
or
fnstenv
add
dec
pop
jo
dec
push
dec
shl
or
shl
pop
adc
inc
mov
mov
xchg
cmp
xchg
and
int
add
inc
jo
or
das
push
mov
ror
add
loopne
in
add
nop
stos
pop
lock
inc
fpatan
jle
mov
pushf
jo
(bad)
lods
jne
xchg
sbb
jl
sub
in
jae
mov
imul
add
outs
rol
or
jl
sub
jmp
lahf
sub
jl
xchg
not
loope
arpl
mov
cdq
fdivr
mov
shr
jle
fwait
cmp
adc
jge
dec
jo
arpl
clc
in
mov
in
inc
lock
(bad)
add
lock
(bad)
in
int3
fdiv
adc
into
xchg
lahf
(bad)
ins
dec
or
mov
mov
bound
aam
fistp
sub
jb
adc
cs
inc
fcmove
shr
mov
rcr
shl
out
out
push
fdiv
dec
jno
aas
push
inc
mov
xlat
int3
inc
ss
repz
mov
aaa
dec
test
xor
ins
mov
and
aaa
std
push
push
and
xor
or
mov
lds
sub
adc
imul
cmp
dec
(bad)
adc
cmp
test
or
cmp
mov
pop
jl
xlat
mov
fwait
cld
sub
loopne
mov
outs
pop
pushf
dec
add
jecxz
mov
imul
icebp
sub
ds
nop
stos
scas
ss
push
ins
jbe
mov
xchg
xor
rcl
jmp
jge
pop
sub
mov
cmp
outs
mov
lods
push
cmp
popf
mov
mov
mov
xor
rcl
push
sbb
inc
inc
fimul
aam
ja
outs
and
dec
cwde
call
and
or
inc
addr16
ss
sbb
inc
xchg
fwait
adc
pop
inc
sub
icebp
ins
sbb
xor
stos
jae
jge
lods
dec
pusha
and
cmps
push
pusha
jecxz
int
iret
push
xlat
test
xchg
pusha
mov
shl
lods
push
sbb
xor
mov
loop
cmp
jns
or
pop
and
bound
js
mov
shr
xor
xchg
inc
das
sbb
cmp
ds
scas
mov
push
std
fsubr
aam
movs
call
int3
inc
and
push
pop
jns
sub
nop
iret
xor
inc
(bad)
jg
ret
add
sub
push
or
retf
and
mov
mov
and
retf
sbb
scas
add
push
cmp
fcom
mov
pop
cld
hlt
xor
mov
ins
cmp
(bad)
iret
popf
xchg
int3
aas
addr16
xlat
in
test
retf
pop
movs
movs
int3
mov
movs
ins
pusha
imul
sbb
cmps
push
add
mov
lock
out
fs
adc
or
cdq
rcl
inc
cs
mov
jb
aad
leave
cdq
cmc
mov
mov
add
dec
dec
adc
call
jbe
mov
xor
lock
out
test
dec
into
dec
fstp
les
jg
ret
inc
icebp
inc
sub
and
jmp
inc
push
cld
in
xchg
scas
loopne
repz
adc
dec
ds
test
cmp
sub
push
inc
jecxz
test
jl
xor
push
adc
std
pop
pushf
jmp
or
mov
shr
ja
inc
push
and
popa
cmp
push
leave
and
in
shl
mov
fistp
test
js
push
inc
ss
je
mov
mov
repnz
pushf
stc
dec
pop
mov
sub
call
cmps
cli
xor
test
pushf
xor
enter
adc
mov
jne
mov
call
nop
xor
fsub
push
cmp
xor
enter
cmp
adc
ins
mov
aam
cmp
minps
js
xor
sub
mov
pusha
in
cmp
cmps
jmp
clc
stc
dec
mov
dec
xchg
dec
pusha
pusha
(bad)
add
fs
popf
or
cld
push
xchg
ins
sbb
push
repz
in
dec
push
lock
sub
mov
sbb
add
fsubr
dec
fmul
or
addr16
pop
sub
or
sub
pusha
fild
inc
cmp
ins
shl
add
fcomp
cmp
xor
cmp
or
lea
xor
mov
inc
cmp
mov
and
pushf
jg
fisubr
and
sbb
adc
mov
or
cli
ja
idiv
jmp
ins
js
(bad)
cli
push
pop
pop
dec
aas
inc
nop
pop
nop
jo
stc
adc
cwde
les
or
pop
rcl
mov
les
and
adc
inc
inc
mov
nop
in
out
ins
sub
jecxz
fstp
ins
adc
ins
xchg
repz
jmp
inc
rcr
mov
call
adc
es
adc
sbb
neg
cmc
rol
sub
lock
sbb
xchg
addr16
and
jne
adc
scas
xchg
push
fs
call
xor
pop
xor
sar
push
push
ins
ja
out
inc
adc
adc
dec
mov
nop
or
jns
ins
stos
fwait
loop
mov
xor
mov
rcl
mov
pop
or
or
sub
mov
mov
push
dec
add
push
imul
add
add
out
jno
mov
fild
lock
out
aas
xor
retf
and
jo
sub
nop
pop
mov
dec
enter
xor
jb
popf
mov
mov
sbb
add
nop
sub
mov
add
and
or
aam
std
xor
add
inc
adc
dec
push
inc
popf
push
mov
ret
pop
sbb
dec
sub
in
scas
jecxz
pop
aad
mov
ins
mov
fwait
sar
inc
sbb
mov
mov
mov
jle
nop
jb
out
mov
mov
sbb
fld
add
cmp
repnz
pop
jge
sub
sbb
movs
rcr
and
add
sbb
iret
add
lods
in
sbb
or
(bad)
outs
pop
jp
mov
and
and
jo
adc
arpl
movs
mov
pop
iret
mov
ins
int3
rcr
loopne
adc
and
aad
and
xor
scas
popf
fdiv
repz
dec
cmp
int3
mov
arpl
in
add
sub
xchg
sbb
jecxz
jo
and
add
xchg
add
pusha
scas
xor
mov
lahf
out
cld
pop
out
dec
cmp
shl
dec
cld
outs
in
pop
jo
and
sub
rcr
and
inc
inc
cld
ins
pop
nop
and
jo
pop
jl
add
jecxz
and
mov
bound
cmp
sub
mov
sbb
int3
or
or
push
cmp
mov
mov
outs
sub
mov
std
mov
add
out
loopne
sub
adc
cmp
outs
test
dec
pushf
inc
jae
fbld
xor
sar
xor
pushf
push
dec
call
std
std
push
xor
sbb
pushf
mov
or
cld
sbb
pop
adc
sub
cmp
retf
pop
mov
cmps
lock
and
sahf
fmul
sub
jmp
xor
out
(bad)
lahf
and
mov
mov
aam
shl
pop
adc
clc
jle
lds
sahf
lds
cmc
leave
pop
shr
cmps
add
dec
add
cmp
shl
(bad)
cmp
int3
sbb
push
fdiv
fsub
and
fld
popa
push
lea
mov
fwait
push
fbstp
jae
xor
sar
pop
adc
bound
pop
mov
pop
fsubr
jb
loope
xchg
xchg
sub
call
mov
ret
daa
in
sub
jns
cdq
push
xchg
mov
sub
mov
dec
dec
add
stos
cdq
inc
sar
or
mov
mov
jno
call
nop
sub
ret
or
push
loope
push
mov
cli
loopne
and
cmp
out
popa
pop
add
popf
xchg
sub
pop
jl
ins
(bad)
or
mov
push
xchg
xor
cmp
fistp
mov
fisubr
cli
cmp
data16
mov
nop
loop
mov
enter
inc
cmps
lods
or
push
cmp
or
test
jno
test
ror
(bad)
out
sbb
lahf
test
das
pop
push
lods
xor
ins
push
jo
in
popf
sar
call
dec
outs
in
add
push
ror
adc
data16
scas
sub
jnp
scas
adc
ja
(bad)
jle
sub
inc
pop
jne
xor
(bad)
aam
mov
cmp
or
inc
jae
cmp
adc
pop
push
into
mov
add
pop
inc
inc
shl
cs
or
push
mov
mov
or
loope
gs
jle
mov
repz
fild
dec
jge
retf
punpcklwd
outs
mov
ins
icebp
cs
std
push
dec
ret
or
jg
pop
cdq
sub
pop
cld
scas
xor
push
jbe
mov
mov
push
xchg
mov
popf
adc
js
call
(bad)
(bad)
shl
fimul
shl
mov
cld
icebp
pop
mov
mov
jmp
nop
mov
repz
clc
mov
pop
mov
cmp
push
xor
pop
adc
cmps
or
scas
or
dec
xchg
mov
dec
aad
mov
xor
push
in
jg
jmp
xchg
mov
shl
add
fidiv
dec
mov
add
call
sub
rcr
scas
(bad)
mov
push
mov
xor
rep
mov
iret
or
xchg
ss
adc
out
arpl
retf
fisub
ins
(bad)
fmul
not
outs
add
aaa
adc
mov
inc
mov
jg
pop
aad
pusha
pop
xor
dec
push
ds
mov
jae
arpl
lea
sbb
ret
aad
in
mov
mov
popa
into
inc
popf
xor
sub
xor
mov
mov
repnz
loope
xor
mov
push
fxch
test
push
inc
mov
mov
lea
stos
push
cwde
nop
xor
dec
gs
xchg
add
jge
mov
fwait
mov
fidiv
cmps
xor
cli
cmp
jl
pop
xchg
xor
rol
retf
rol
mov
sbb
mov
not
in
cld
leave
int3
adc
xchg
pop
scas
adc
daa
je
adc
je
aad
je
cld
div
dec
pushf
xchg
mov
sbb
add
pop
lods
xor
add
cmp
mov
in
rol
mov
and
sbb
jl
cmp
clc
daa
pushf
cmps
lods
inc
sbb
cmp
sbb
aam
mov
push
pop
out
jb
sbb
pop
addr16
and
or
xor
ins
neg
push
in
call
int
jne
fsubr
sub
and
btr
mov
test
jecxz
(bad)
lahf
(bad)
jo
cmps
sub
pushf
pop
aaa
jne
mov
adc
out
jg
dec
rcr
lahf
retf
mov
xchg
xchg
inc
dec
mov
xchg
or
pop
fisttp
cmp
mov
inc
jmp
clc
mov
sbb
dec
out
or
cwde
xchg
pop
leave
bswap
addr16
mov
mov
js
cmp
xchg
cld
ja
dec
iret
inc
pop
xlat
push
rcl
mov
push
sbb
in
xchg
(bad)
arpl
addr16
dec
fwait
push
popf
and
in
fcom
cmp
inc
xchg
mov
adc
(bad)
adc
in
addr16
and
push
pushf
xchg
xchg
pop
mov
sub
and
test
scas
sub
sbb
(bad)
popa
aaa
jmp
ins
or
sbb
pop
or
pushf
mov
fs
dec
into
jp
test
or
in
or
dec
test
mov
repz
cmp
fs
mov
icebp
ror
push
fs
repz
pop
mov
sbb
mov
mov
or
es
dec
ins
add
add
ins
mov
inc
jmp
js
in
cmps
fldenv
mov
clc
mov
or
or
aas
xlat
mov
and
mov
int3
or
fdivp
ror
arpl
or
enter
mov
push
in
(bad)
pop
sub
sub
out
stc
repz
inc
mov
test
dec
push
sbb
add
or
data16
mov
cmp
imul
cdq
push
sbb
cmps
dec
inc
int
fs
je
ja
sub
push
mov
out
(bad)
enter
sbb
sbb
enter
pmuludq
sub
(bad)
cmp
mov
add
addr16
dec
cs
mov
sbb
and
out
out
dec
std
or
inc
jmp
vpackssdw
cmp
stos
mov
jmp
pop
fsubr
pop
cld
jne
xchg
cmp
inc
xor
jle
scas
xchg
mov
cmp
pop
cmp
jbe
jmp
adc
fs
and
clc
xor
xchg
(bad)
mov
adc
xor
shl
jp
ficom
cmp
mov
jle
into
mov
mov
mov
enter
in
mov
ret
sbb
jle
sbb
xchg
(bad)
hlt
lds
imul
mov
or
mov
loopne
mov
bound
push
mov
mov
xor
push
xor
adc
adc
xchg
fistp
xor
outs
adc
dec
push
pop
shl
je
sub
cmp
(bad)
gs
adc
add
adc
lock
mov
dec
leave
inc
xor
adc
(bad)
xchg
popa
adc
xor
cmc
arpl
cmp
xor
popa
xor
mov
sahf
mov
dec
sbb
add
jbe
sub
test
mov
cmc
xor
(bad)
jge
fdiv
jb
push
outs
cmc
xor
out
push
adc
aad
or
cli
inc
mov
dec
sbb
xor
mov
es
mov
imul
cld
push
ja
and
adc
jb
jl
inc
test
xor
test
js
sahf
cld
jge
xchg
outs
(bad)
mov
outs
fist
(bad)
mov
inc
rol
pop
xchg
inc
sub
mov
lahf
and
(bad)
fwait
xchg
or
ret
xchg
(bad)
xchg
rcl
adc
jg
add
mov
push
add
xchg
lods
leave
ror
sbb
sbb
pushf
(bad)
adc
cmp
cs
add
ret
aad
adc
(bad)
mov
push
push
xchg
adc
into
push
aad
mov
retf
adc
cdq
push
in
(bad)
adc
sbb
out
push
dec
(bad)
xchg
mov
(bad)
cmp
out
xor
adc
xchg
popf
push
(bad)
in
in
lods
cli
cli
or
mov
xlat
leave
outs
inc
push
fwait
adc
inc
push
inc
push
inc
xchg
rcl
sbb
push
adc
pushf
out
xor
fidiv
stos
dec
inc
mov
(bad)
ret
call
aad
adc
ret
sbb
cmp
dec
sar
aam
mov
add
adc
in
adc
cmp
mov
push
sbb
mov
push
add
jge
push
adc
push
cdq
int
xchg
inc
inc
cmps
ror
xchg
cld
xchg
cs
cmp
out
out
push
add
outs
mov
cwde
xchg
push
call
inc
rcr
inc
in
cwde
pop
lock
add
fs
xchg
inc
push
cdq
sbb
lds
mov
push
gs
shl
leave
push
lods
xchg
scas
inc
pop
jnp
aam
jge
lock
jle
add
fs
test
cmpxchg
pop
mov
xor
ins
scas
pop
mov
ret
lock
or
fild
jb
(bad)
mov
cwde
sti
js
and
add
fwait
jnp
stc
pop
repz
or
xchg
cmp
retf
shld
daa
les
and
js
cwde
pop
mov
jne
mov
mov
(bad)
cmp
mov
push
sti
add
test
test
(bad)
mov
cwde
jo
dec
(bad)
mov
sbb
cwde
imul
imul
jae
ret
jg
xchg
test
jo
push
jmp
sti
gs
call
cmps
(bad)
je
xor
call
or
mov
out
dec
jo
aaa
jge
cmp
lock
sti
sti
jo
and
std
jae
mov
sbb
sti
xor
push
mov
adc
cmp
pop
jge
xor
jo
xor
fldcw
mov
jnp
xor
xor
cmp
in
inc
mov
int3
pop
ss
cmp
rcr
pusha
test
push
push
xchg
jg
jnp
iret
xor
fs
jge
int
jo
repz
jnp
dec
sbb
int3
xlat
cwde
out
lahf
jo
push
fs
pop
jae
mov
scas
cwde
fwait
dec
stos
std
fwait
in
sbb
inc
mov
fwait
outs
test
sysenter
push
loopne
sbb
jo
(bad)
fcomip
inc
mov
push
(bad)
sti
enter
sti
adc
mov
cmp
clc
in
cmp
push
sti
adc
movs
mov
outs
clc
jno
enter
jo
mov
aam
push
mov
adc
jnp
lock
or
xchg
rol
fucomi
ret
add
and
scas
mov
cmp
mov
adc
(bad)
stc
or
in
push
adc
xlat
adc
mov
stos
sub
inc
cld
xor
mov
cmp
test
in
sub
ss
adc
std
outs
fsub
ja
dec
daa
inc
xlat
adc
std
outs
fst
ret
inc
push
mov
and
or
scas
sbb
pop
dec
scas
dec
adc
push
jae
test
inc
push
and
pop
xchg
cmp
dec
bound
cmp
arpl
mov
stos
jmp
daa
jle
xchg
push
mov
shl
mov
add
xchg
mov
fld
mov
cmp
jmp
fld
xor
pop
adc
or
ins
push
imul
dec
cdq
xchg
xchg
add
or
mov
sbb
xor
outs
or
movs
adc
lock
or
lods
push
loopne
bound
fadd
out
or
pop
xor
cmps
push
enter
bound
cs
push
sbb
(bad)
cld
cmps
fdiv
cmp
dec
jns
sbb
mov
cmps
push
lods
dec
and
test
cld
push
xor
std
mov
or
xor
inc
clc
xor
ror
jl
pop
bound
aam
arpl
adc
(bad)
in
retf
xchg
pusha
ret
mov
jb
pop
mov
cld
call
scas
add
inc
or
outs
test
cmp
clc
bound
inc
mov
ret
or
cld
xor
std
pop
and
mov
inc
pop
add
fsubr
ja
fwait
mov
sbb
mov
adc
sub
jge
push
clc
inc
cdq
adc
or
mov
sub
lahf
push
iret
sbb
fstp
bound
add
push
sbb
fsub
mov
and
sti
cmp
lahf
mov
retf
jle
pop
inc
jl
fcomp
idiv
or
jl
xor
aas
neg
(bad)
hlt
jmp
mov
push
and
les
or
jl
xor
aas
call
mov
outs
clc
mov
in
mov
pop
int3
daa
push
jmp
and
fist
fsub
das
ffree
cmc
sbb
jl
push
and
ret
into
push
jecxz
jg
sbb
mov
cmps
clc
bound
(bad)
add
sbb
pop
sbb
pop
and
or
mov
jle
clc
popa
jle
xor
(bad)
adc
cmp
sbb
out
(bad)
or
std
pop
repnz
outs
out
mov
inc
mov
ret
jl
outs
dec
ds
mov
lea
ficomp
clc
mov
jl
stc
and
dec
cdq
jb
sbb
not
cmc
nop
mov
sbb
neg
jbe
push
sbb
xchg
push
fmul
shl
xchg
push
aam
pop
(bad)
lea
not
push
jb
rcr
jp
cvtdq2ps
cmp
xor
xchg
push
xchg
fdivr
call
inc
outs
outs
dec
jns
adc
out
(bad)
push
(bad)
retf
enterw
push
jl
push
and
ficomp
mov
or
push
jns
(bad)
fiadd
stos
push
xor
repnz
adc
pop
push
sbb
mov
das
pop
xor
xchg
mov
xchg
add
(bad)
(bad)
pop
sbb
mov
or
jb
fcmove
push
pop
sbb
mov
pop
sahf
stc
call
fstp
jmp
imul
rcr
mov
and
mov
dec
fisttp
or
dec
in
mov
dec
std
or
dec
jge
sbb
call
fsub
jge
mov
sbb
or
call
popf
int3
adc
dec
fisttp
fstp
dec
mov
ficomp
fdivr
push
js
call
xor
int
rcr
mov
mov
popf
push
xor
pop
xor
fisttp
ficomp
jge
fmul
adc
sub
mov
xchg
push
adc
repnz
jne
outs
sbb
dec
mov
cmc
xor
in
call
int
ret
cli
and
imul
rol
sbb
stos
rol
push
popa
fild
pusha
xchg
add
aaa
loope
cmp
and
or
mov
bound
xchg
mov
dec
push
rcr
cmp
in
xchg
movs
jge
fld
jae
inc
inc
inc
sub
(bad)
xchg
cli
loope
rcl
mov
push
out
push
stc
push
loope
in
mov
inc
retf
xchg
test
inc
push
in
mov
shl
push
fbstp
or
lea
ins
mov
jne
or
mov
gs
dec
cmp
add
sbb
pop
xlat
adc
inc
add
loopne
jnp
in
xchg
gs
aaa
movs
daa
loope
dec
jbe
aam
mov
jg
jnp
pop
std
aaa
lock
aad
jge
test
sub
pop
movs
iret
mov
shl
push
sbb
adc
mov
enter
arpl
xchg
movs
and
inc
test
and
xor
adc
imul
adc
or
ja
sbb
ja
push
popf
jg
pop
test
add
inc
dec
je
adc
sar
repz
sahf
xchg
and
sbb
outs
enter
cmp
arpl
aaa
jne
or
popa
sbb
mov
fs
jae
(bad)
icebp
ret
xchg
xor
shl
ror
xor
adc
add
fnsetpm(287
pop
int3
and
inc
mov
(bad)
push
or
fdiv
mov
hlt
inc
jo
mov
mov
jo
adc
add
xor
daa
mov
fsub
icebp
push
jb
mov
cmc
add
pop
dec
adc
aas
mov
ins
xor
mov
xor
pushf
sub
mov
ror
or
les
movs
out
add
loope
shl
dec
mov
nop
dec
(bad)
dec
shl
or
lock
pop
inc
sub
and
sub
inc
and
mov
mov
mov
ins
or
fdiv
sub
dec
add
ror
dec
or
hlt
mov
in
mov
les
shr
ds
int3
mov
loope
mov
adc
xchg
fstp
sub
pop
jg
int3
mov
inc
adc
nop
fstp
sub
test
mov
js
cwde
ins
cmp
ja
adc
cmc
sub
add
lea
in
and
mov
push
mov
repnz
mov
call
movs
lods
test
and
mov
inc
inc
int3
mov
push
hlt
fs
jb
mov
jl
or
cmps
(bad)
pmuludq
pop
cli
in
or
sub
or
xor
test
cmp
jns
aas
xor
mov
xor
cli
sbb
std
movs
mov
mov
sub
(bad)
pop
adc
ins
mov
aad
xchg
xchg
xor
jb
push
inc
xor
rcl
xor
inc
xor
push
jae
rcl
xor
xor
es
inc
out
mov
push
inc
xor
mov
mov
fadd
addr16
jg
and
push
rol
dec
pushf
rcl
push
sbb
cli
add
bswap
or
xor
pop
fnstsw
xchg
in
jmp
fs
out
cwde
push
mov
hlt
imul
cwde
fiadd
fidiv
mov
jns
or
into
add
pop
dec
sbb
or
inc
pop
mov
or
xor
ret
xor
adc
mov
mov
jne
dec
push
add
inc
pop
xchg
inc
xchg
xor
xor
cld
jmp
cli
xchg
cmp
jmp
sbb
pop
je
inc
cwde
xor
jnp
dec
(bad)
(bad)
mov
mov
sub
ficomp
inc
rcr
and
in
loope
inc
mov
mov
in
dec
jnp
sbb
cmp
iret
dec
sbb
sbb
or
add
aas
aas
ja
mov
std
mov
jecxz
mov
stos
in
dec
ins
sub
ins
sub
in
stos
in
mov
stos
in
dec
ins
sub
ins
stos
in
retf
ins
or
ins
retf
in
mov
stos
in
retf
ins
or
ins
retf
in
mov
sub
in
stos
in
mov
stos
in
dec
ins
sub
ins
sub
xchg
loop
mov
or
ins
or
inc
or
out
test
clc
xor
das
or
arpl
ins
dec
stos
test
mov
sub
or
sub
dec
popf
stos
lahf
mov
pop
ins
jns
inc
add
mov
in
sbb
add
or
dec
sub
pop
outs
or
add
sub
ins
outs
ins
inc
pop
add
in
in
in
fiadd
or
push
or
sub
sbb
das
in
jmp
mov
dec
ins
outs
ins
outs
or
mov
movs
mov
sub
sub
cmp
loope
mov
stos
in
jmp
or
sub
lods
mov
mov
out
or
jmp
iret
popa
lahf
imul
xchg
cmp
dec
neg
mov
das
shr
and
inc
pop
and
call
sbb
mov
cs
dec
mov
in
dec
cdq
ins
or
(bad)
ja
jl
inc
pop
retf
dec
dec
lahf
push
pop
(bad)
pop
retf
pop
and
sub
cs
pop
(bad)
adc
pop
inc
cmps
inc
sub
lods
ja
push
dec
add
dec
(bad)
sub
dec
and
sbb
test
inc
fisttp
push
in
dec
xchg
dec
ins
movs
dec
dec
ror
push
icebp
and
dec
sar
dec
movs
sbb
sbb
in
push
loopne
enter
or
or
mov
xor
cdq
mov
or
push
jp
mov
add
cmp
pop
fadd
cmp
cmp
sub
cmp
sub
repz
clc
lock
clc
push
fcom
clc
jo
adc
push
fcom
clc
lock
clc
push
fcom
clc
jo
adc
pmulhuw
icebp
sbb
inc
scas
inc
mov
push
jne
adc
xor
jnp
pop
(bad)
jg
imul
cdq
stos
aaa
xlat
pop
mov
cdq
adc
cli
jne
xor
pop
cli
mov
call
pop
mov
mov
pusha
nop
inc
xchg
and
test
mov
mov
and
pop
mov
je
ins
fdiv
jo
jg
inc
lods
jne
sbb
popf
arpl
jno
push
stc
jle
adc
push
clc
cmps
inc
push
clc
mov
mov
mov
sub
xchg
int3
ins
stos
mov
fidiv
cmp
mov
jmp
fnsave
loopne
add
sbb
dec
dec
pop
mov
out
push
aaa
inc
pusha
ror
pop
lods
fdiv
sbb
or
test
mov
or
(bad)
pop
shr
div
inc
fs
std
in
push
jnp
fnstsw
or
(bad)
sbb
js
sub
stc
in
cdq
and
pop
retf
cs
addr16
mov
dec
cmp
(bad)
sub
shl
dec
push
jge
cmp
std
cmc
mov
in
sbb
mov
or
jmp
add
fcmovu
mov
outs
pop
sbb
cmp
sub
pop
dec
lods
dec
or
pop
cmp
sbb
jl
(bad)
cmp
call
fimul
(bad)
cld
fwait
cli
sbb
dec
iret
push
jg
push
shr
pop
sti
dec
xor
outs
sahf
out
mov
fadd
jmp
cmp
stc
jge
pushf
dec
in
mov
dec
cmp
fisttp
pushf
pop
fnstsw
mov
fisttp
jl
das
fnstsw
mov
ins
push
cmp
jl
jmp
test
cvtdq2ps
pop
cmp
(bad)
pop
push
push
sbb
or
or
adc
rcr
test
cmp
hlt
fucomp
pushf
xlat
dec
adc
push
jno
lods
jge
test
repz
jne
ss
push
pop
jle
movs
ret
test
std
aad
jl
inc
adc
cmp
mov
mov
imul
daa
pop
dec
ins
ja
xchg
mov
jge
and
fld
sbb
or
push
dec
cmp
cmp
sahf
push
sbb
sbb
or
pushf
rcr
adc
call
adc
addr16
dec
xchg
outs
cmps
dec
push
int3
pushw
pop
add
dec
mov
jo
rcl
add
cmps
jg
js
push
ror
pop
lahf
adc
sub
aaa
(bad)
fs
cmp
jb
loopne
stos
or
ficom
cmp
mov
sti
inc
sbb
scas
xor
sub
jg
ficom
mov
adc
xchg
jle
sub
cmp
lods
ss
aaa
add
repnz
ja
pop
in
sub
mov
cld
inc
cli
adc
call
push
jnp
call
mov
jmp
pop
inc
jnp
cmp
jle
pop
xchg
sub
mov
pop
sub
ins
mov
push
sub
mov
ja
xchg
or
sbb
stos
inc
cld
inc
jp
or
xor
sar
je
nop
push
(bad)
es
nop
sub
jbe
add
mov
inc
fiadd
xlat
jns
jmp
test
push
gs
dec
sbb
xor
mov
fdivr
ret
ficom
cmp
adc
ror
cld
adc
sbb
dec
ds
imul
xchg
mov
add
jl
jbe
pop
fcmovnu
pushf
fdivr
push
or
add
dec
push
jle
aam
cmp
dec
mov
and
mov
stc
ins
test
jbe
je
xchg
retf
out
icebp
pop
adc
fistp
mov
pop
scas
popf
in
xor
and
outs
add
inc
aad
seta
cmp
addr16
mov
in
test
pop
add
cld
cmc
neg
lahf
mov
push
or
push
in
mov
out
imul
add
dec
aam
add
jmp
mov
sbb
mov
call
fnstsw
mov
push
mov
push
dec
jg
addr16
retf
leave
dec
sbb
push
(bad)
adc
pop
xor
or
ins
xchg
push
and
addr16
inc
push
and
add
clc
inc
out
aam
fbstp
push
rcl
clc
aam
ja
aam
inc
pop
and
ror
add
ret
(bad)
pop
cdq
mov
and
out
mov
add
adc
push
cs
mov
inc
mov
cmp
jg
add
nop
inc
icebp
mov
test
jbe
inc
stc
dec
popa
xchg
outs
dec
pop
mov
popf
stc
cmps
leave
sar
and
outs
and
popf
sar
mov
inc
scas
aas
loopne
mov
outs
add
aad
out
xchg
out
mov
outs
fld
dec
mov
sub
mov
pop
mov
mov
loopne
xchg
and
xor
inc
out
pop
std
jae
mov
and
jno
mov
out
inc
ds
outs
dec
clc
outs
mov
add
nop
xchg
and
inc
add
cmc
inc
xchg
(bad)
outs
adc
xchg
and
xor
in
push
mov
inc
or
sbb
or
leave
inc
ret
xor
bound
repz
add
les
rcl
aad
aam
(bad)
call
mov
mov
or
mov
(bad)
out
loope
ds
aaa
xchg
push
shl
cmp
and
gs
push
loopne
adc
in
push
(bad)
fistp
js
push
cld
mov
mov
jo
adc
add
out
movs
inc
retf
mov
out
(bad)
cwde
(bad)
mov
div
push
mov
daa
jmp
jg
mov
dec
sbb
cmp
out
clc
loope
add
inc
fwait
pop
or
push
scas
xor
mov
retf
hlt
mov
std
xchg
scas
movs
jg
(bad)
sahf
sbb
div
sbb
push
and
outs
enter
inc
pause
xlat
lods
mov
inc
and
add
mov
inc
adc
adc
daa
jbe
mov
push
and
fisub
xchg
adc
les
cwde
xchg
push
push
ja
jl
stc
loopne
mov
pop
mov
inc
retf
loopne
outs
(bad)
call
fwait
lea
mov
inc
xor
mov
pop
pop
cmp
dec
cmp
mov
adc
push
add
xchg
das
add
das
ret
sub
jo
rcl
inc
(bad)
push
bound
pusha
mov
sbb
movs
jo
retf
push
cmps
or
adc
ss
jo
mov
push
push
add
ror
sub
and
rcr
ins
pop
mov
mov
dec
loope
hlt
and
aam
lea
pusha
and
loope
imul
fucom
(bad)
jne
pop
mov
mov
push
imul
mov
ror
mov
mov
mov
int
frstor
ss
loopne
add
ret
jbe
loopne
add
and
push
mov
mov
out
fcmovb
outs
in
repnz
add
loopne
pusha
int
mov
push
adc
push
cmp
outs
iret
or
push
mov
inc
mov
mov
dec
jge
push
jge
add
inc
hlt
stc
fwait
(bad)
cmp
retf
cwde
xchg
out
(bad)
and
call
jne
fdivr
in
mov
xchg
xor
cdq
std
inc
(bad)
aam
mov
loopne
cmp
add
js
ret
xchg
xchg
nop
cmp
cmp
and
adc
scas
cli
(bad)
lds
or
or
sub
inc
fst
push
or
xchg
js
push
femms
xlat
popf
out
shl
jecxz
jb
xchg
cmp
dec
jl
not
adc
addr16
pop
dec
int
ins
push
mul
push
xchg
jecxz
mov
(bad)
sbb
(bad)
popa
loope
sbb
xchg
inc
ja
jbe
shr
jg
popa
and
mov
pop
enter
(bad)
cmp
outs
xor
xlat
push
daa
loop
and
popf
xchg
cmps
in
in
mov
add
adc
sub
sbb
add
inc
loope
shl
rcl
and
arpl
aad
sbb
pop
jmp
xor
push
mov
loop
cs
lock
mov
fisttp
int
(bad)
in
rol
cmps
mov
mov
mov
rcl
pop
add
push
repnz
bound
xor
aam
cmp
add
cmps
inc
repz
pusha
and
fadd
push
test
(bad)
gs
test
ret
jno
push
outs
push
dec
sahf
xor
sar
das
(bad)
push
(bad)
mov
inc
data16
getsec
and
aad
in
(bad)
pushf
push
lods
add
sbb
ins
fsub
loope
sub
xchg
pop
(bad)
pop
fldcw
dec
fcmove
push
lods
test
lods
ds
stc
or
loopne
mov
dec
les
not
jmp
push
imul
jmp
aam
push
jl
in
movs
sbb
mov
imul
aad
mov
mov
xor
loope
xchg
jecxz
pop
adc
sbb
das
inc
pop
fist
inc
mov
mov
and
hlt
test
arpl
aas
fisubr
int
inc
je
or
(bad)
int
or
and
mov
(bad)
aaa
jecxz
cmp
fst
sbb
lds
(bad)
fdiv
mov
jno
add
fcomp
std
aam
in
inc
push
and
sub
test
mov
pop
lods
and
sub
or
add
(bad)
push
and
or
pusha
out
(bad)
and
test
mov
adc
sub
es
cmp
ficom
push
cld
sub
aas
mov
adc
xor
retf
push
mov
xor
rcr
jle
add
xchg
xchg
mov
scas
sbb
dec
adc
dec
mov
(bad)
fstp
add
fidivr
rcr
cmps
cli
sbb
sbb
push
fucom
sbb
mov
lds
mov
push
das
adc
pop
dec
mov
cli
std
js
pop
pop
jnp
fdivr
xor
repnz
sub
ja
adc
xchg
cld
popf
mov
loope
or
ja
mov
js
iret
jg
push
pop
stc
cmps
mov
sub
(bad)
sub
add
mov
cmps
fcom
retf
enter
mov
into
mov
out
call
mov
mov
sbb
sti
pop
pop
enter
dec
addr16
je
adc
call
push
(bad)
arpl
sahf
jmp
nop
mov
sti
scas
mov
add
dec
xchg
push
out
sbb
mov
or
mov
test
ds
or
(bad)
sbb
pop
fnstenv
sbb
cmp
jo
dec
push
fcomp
sbb
jae
test
xchg
test
mov
jmp
pop
pushf
jb
xchg
mov
mov
imul
fnstcw
sbb
jbe
mov
in
out
jmp
movs
add
sti
popf
sti
jb
icebp
lds
mul
je
jmp
addr16
and
je
jns
add
inc
sti
jecxz
jnp
popa
mov
sbb
imul
or
or
dec
add
bound
jmp
cli
mov
jge
dec
hlt
mov
add
cmp
add
(bad)
cmc
sub
arpl
mov
je
mov
fldenv
sti
xchg
or
pop
je
dec
stc
push
ins
sbb
sub
iret
sub
mov
into
stc
sti
sti
fnstcw
jno
dec
sub
test
stos
dec
daa
dec
cmp
dec
cmp
test
or
mov
fsincos
jns
(bad)
push
dec
or
sub
dec
sub
neg
cwde
cmp
fistp
pop
pop
pop
cmp
pop
js
mov
jns
imul
mov
push
data16
inc
int3
(bad)
(bad)
mov
test
jo
cmp
mov
cld
sbb
in
retf
std
or
and
jge
imul
fdivr
sub
fidivr
test
or
jmp
sbb
add
pop
or
xchg
pop
or
jge
push
stos
sbb
or
fs
gs
call
push
loope
jmp
std
std
pop
retf
cli
cmp
and
jp
fidivr
sub
or
mov
pop
arpl
sbb
scas
popf
jns
jmp
aaa
xor
stc
out
aas
arpl
sbb
pop
xchg
pop
imul
ins
sbb
es
fs
retf
in
in
pop
or
sub
outs
xor
mov
cmps
sbb
push
push
push
mov
les
test
fnstsw
in
mov
repz
mov
into
jnp
push
cmp
pop
ror
fidiv
mov
jno
cmps
ins
jecxz
mov
push
fsubr
jbe
arpl
cdq
xor
jg
out
fcom
cwde
imul
test
inc
mov
dec
cmc
loopne
sbb
mov
push
mov
dec
pop
push
pop
test
and
ffree
push
test
(bad)
push
xchg
push
mov
or
inc
bound
dec
ins
push
call
pop
xor
fstp
repnz
mov
sub
fs
dec
adc
push
not
push
rcl
cmp
jno
cmc
jbe
and
je
jmp
(bad)
in
test
fimul
pushf
je
rcl
cmp
rcr
pop
mov
add
ret
leave
clc
dec
jp
mov
xor
cmps
(bad)
cmp
sub
add
cmp
push
jge
or
enter
mov
ret
dec
mov
xchg
xor
cmc
adc
push
retf
xchg
punpcklwd
xor
fidivr
in
clc
loopne
xchg
xchg
jbe
xchg
lock
add
inc
in
mov
in
mov
rcr
pop
push
add
retf
push
pop
stos
(bad)
jmp
loop
jp
inc
ret
movs
push
and
call
xchg
loopne
imul
xlat
cmp
scas
inc
cmp
test
sbb
xor
xchg
in
and
sbb
aad
ja
(bad)
fst
nop
sar
(bad)
push
lods
(bad)
cmps
lods
jb
jl
shl
cwde
add
mov
jge
xchg
jecxz
or
into
test
inc
icebp
iret
fstp
xchg
dec
jne
repnz
gs
enter
push
xchg
ret
mov
(bad)
lods
cmp
fstp
push
inc
jg
mov
fwait
mov
cmp
mov
mov
mov
ja
jno
mov
mov
int
cld
cdq
mov
cmp
mov
div
lea
jl
jle
mov
mov
mov
jne
ja
mov
lea
mov
cmp
lea
mov
mov
jo
jae
mov
mov
repnz
call
jl
mov
mov
mov
jae
jae
mov
mov
int
cld
fwait
mov
ds
mov
mov
mov
adc
not
jno
jo
mov
mov
repnz
call
jl
mov
mov
mov
sbb
cld
mov
popf
mov
xor
lock
div
mov
jb
dec
sbb
mov
mov
das
add
sar
shr
pop
lds
jecxz
popf
xor
and
mov
jl
cmps
cwde
sbb
repnz
(bad)
out
fld
sub
scas
pop
das
add
sar
push
into
fmul
pusha
stos
add
inc
jecxz
repz
add
push
jg
jg
mov
je
popa
test
inc
push
fdivr
add
(bad)
(bad)
ss
mov
jge
nop
sbb
cwde
cmps
xor
push
lock
shl
adc
mov
jle
push
jecxz
ror
seto
xor
jge
xchg
xor
outs
sbb
rol
add
jo
sbb
ins
lods
lods
fild
lods
shl
or
push
loopne
xor
adc
sub
jecxz
xchg
fisttp
cld
test
adc
nop
mov
cli
adc
jmp
cmp
pop
jg
push
adc
lahf
aam
mov
call
mov
cmp
xor
pop
inc
std
cmps
pop
jae
fld
mov
xchg
mov
push
movs
mov
mov
dec
pop
daa
ins
pop
adc
mov
mov
stc
xor
nop
mov
mov
in
sub
jns
inc
ret
shl
dec
mov
jecxz
lock
(bad)
ficomp
xchg
inc
mul
cld
push
mov
xor
(bad)
push
mov
mov
fcmovbe
inc
sub
mov
fwait
adc
test
jo
dec
xchg
test
int3
rol
daa
loopne
inc
mov
jns
setae
outs
loope
and
and
push
adc
pusha
ds
popf
xchg
ins
adc
shl
jp
(bad)
repz
aas
ret
int
(bad)
jge
jnp
stc
rol
test
ins
lock
xor
push
mov
ficom
pushf
adc
jmp
and
adc
loope
jo
or
xchg
adc
sub
mov
sub
fistp
lock
out
mov
jae
or
cmp
pop
outs
push
pop
loope
mov
nop
push
sbb
jg
pop
int3
jns
push
repz
mov
inc
repnz
std
push
sbb
mov
mov
mov
daa
fdiv
fcomp
fbld
into
adc
dec
int
stc
arpl
ja
lahf
sub
inc
movs
cmp
sbb
pop
ret
jbe
(bad)
xor
dec
in
jge
and
xor
mov
fld
jno
aas
mov
mov
test
adc
and
pop
cmp
pop
iret
mov
add
shl
jno
cmps
leave
pushf
ds
mov
(bad)
mov
mov
pushf
cmp
mov
xor
loopne
aas
push
mov
cli
in
out
in
adc
jl
out
sahf
or
dec
mov
mov
push
mov
(bad)
add
loop
rol
scas
pusha
pop
dec
adc
push
xor
jle
pop
push
mov
jmp
(bad)
cmp
and
mov
add
push
adc
ficomp
ins
cmp
xlat
stos
sahf
mov
push
(bad)
sbb
sar
push
cli
outs
xor
movs
cmp
aaa
shl
add
out
into
pop
cmp
xor
lock
int
push
ficomp
sbb
scas
les
and
retf
lahf
fmul
call
cmp
lods
xchg
out
inc
call
cmps
popa
inc
sub
sbb
ins
jb
adc
pop
push
bound
fadd
xchg
(bad)
ret
test
cli
out
and
sbb
mov
jbe
pusha
adc
movs
sbb
jbe
(bad)
mov
sub
dec
adc
or
inc
std
fmul
lods
cmp
cdq
inc
pop
out
ret
mov
addr16
pusha
or
push
sub
test
rol
and
and
test
push
daa
mov
jmp
daa
sub
cmp
nop
test
xor
ja
mov
nop
or
jmp
mov
xchg
dec
test
fdiv
mul
cmp
dec
popa
int
ds
mov
pop
or
jbe
out
rcr
and
and
and
sar
lods
fnstcw
rdmsr
sar
fidivr
aam
cmp
sar
test
outs
and
and
scas
lea
push
mov
push
cmp
xchg
dec
int3
(bad)
in
lock
(bad)
adc
inc
pop
loope
and
inc
dec
ss
xlat
lea
imul
ror
xchg
cmp
sub
sbb
call
(bad)
(bad)
cmp
jne
mov
jmp
cmp
jmp
mov
cmp
jl
lea
movzx
cmp
jge
add
cmp
jl
mov
jmp
movzx
add
cmp
jge
cmp
lea
je
cmp
jge
cmp
jg
add
mov
jmp
test
je
movzx
lea
cmp
jge
mov
sub
cmp
jne
mov
push
call
add
test
je
jmp
test
je
lea
movzx
cmp
jge
cmp
jl
mov
jmp
sub
test
jle
jmp
test
jle
movzx
add
cmp
jge
cmp
jne
mov
add
add
mov
cmp
jmp
cmp
jge
mov
mov
mov
movzx
mov
lea
cmp
jge
mov
cmp
jl
mov
lea
mov
and
cmp
je
test
jne
add
add
cmp
jle
cmp
je
mov
jmp
mov
test
je
test
jne
sub
cmp
jne
mov
push
call
add
test
je
movzx
lea
cmp
jge
mov
add
cmp
mov
jl
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
mov
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
add
add
add
push
push
add
push
push
push
push
push
push
push
push
add
push
push
pop
pop
or
or
or
or
int3
int3
int3
int3
mov
mov
push
push
push
call
add
neg
sbb
neg
ret
int3
int3
int3
test
je
mov
and
shl
add
cmp
jne
mov
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
push
push
jne
mov
mov
cmp
jne
cmp
mov
jne
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
push
lea
push
push
call
mov
add
test
mov
jne
push
push
push
call
mov
and
add
cmp
ja
movzx
jmp
mov
shr
shr
and
cmp
jge
mov
cmp
mov
je
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
mov
shr
shl
mov
mov
pop
pop
add
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
test
je
mov
shr
mov
pop
pop
add
pop
mov
mov
pop
ret
mov
pop
pop
mov
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
jg
inc
add
popa
inc
add
popa
inc
add
bound
lahf
popa
inc
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
cmp
jne
cmp
jg
mov
cmp
jne
mov
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
push
shr
push
and
push
call
add
pop
ret
xor
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
mov
cmp
jne
mov
cmp
jne
push
mov
mov
call
mov
cmp
mov
jne
mov
cmp
jne
mov
jmp
xor
mov
push
add
push
lea
push
call
mov
push
push
lea
push
push
push
call
add
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
push
mov
mov
test
je
push
mov
add
cmp
je
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
pop
cmp
jg
push
push
call
add
add
mov
push
add
push
push
call
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
lea
push
push
push
call
push
call
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
xor
cmp
mov
jne
mov
mov
mov
or
push
mov
mov
mov
lea
push
push
mov
mov
call
add
pop
pop
mov
lea
pop
pop
ret
mov
mov
cmp
je
jmp
lea
movsx
add
cmp
ja
movzx
jmp
mov
mov
call
jmp
cmp
je
mov
mov
call
mov
jmp
or
mov
jmp
movzx
mov
jmp
cmp
je
mov
lea
push
mov
call
mov
add
jmp
xor
cmp
mov
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmp
jne
mov
pop
pop
pop
pop
ret
dec
gs
add
fs
add
fs
add
gs
add
gs
add
inc
add
add
add
add
add
add
add
add
add
int3
push
push
mov
push
mov
xor
xor
cmp
push
mov
jne
mov
mov
add
add
mov
jmp
mov
test
je
mov
lea
mov
mov
lea
push
push
push
push
call
push
push
mov
call
add
test
je
test
mov
jne
mov
jmp
mov
mov
mov
sub
cmp
jg
push
push
call
add
add
push
push
call
add
test
je
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
cmp
jae
lea
cmp
je
add
cmp
jb
mov
push
push
push
push
call
add
pop
pop
pop
pop
ret
sub
lea
push
push
sar
push
call
add
test
je
mov
push
push
push
mov
push
push
push
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
mov
mov
cmp
je
cmp
jne
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
call
add
test
mov
je
mov
mov
push
push
push
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
mov
push
push
call
add
xor
ret
push
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
push
mov
push
mov
mov
mov
push
mov
push
push
push
push
call
mov
add
test
jne
test
jbe
mov
push
push
call
add
sub
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cdq
push
mov
mov
sub
sar
cmp
jl
cmp
jl
mov
push
push
call
add
jmp
lea
cmp
jge
mov
mov
xor
mov
div
push
lea
cmp
pop
ja
mov
mov
imul
imul
mov
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
add
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmp
je
push
push
mov
lea
cmp
push
ja
lea
push
push
push
push
call
add
jmp
push
call
add
test
mov
mov
jle
mov
xor
mov
rep
mov
xor
cmp
mov
jle
mov
mov
test
je
lea
mov
mov
and
test
mov
mov
mov
mov
jne
mov
mov
mov
add
cmp
mov
jl
mov
mov
add
push
add
push
push
push
call
add
mov
pop
mov
pop
pop
pop
pop
ret
int3
push
mov
lea
cmp
push
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
push
lea
and
push
mov
mov
mov
call
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
add
mov
mov
add
cmp
jbe
cmp
jg
add
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
mov
shr
add
cmp
mov
mov
mov
jb
movzx
mov
shl
add
mov
shr
add
sub
xor
cmp
jae
mov
mov
mov
mov
mov
sub
and
mov
test
je
jmp
lea
cmp
jne
cmp
mov
lea
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
mov
jg
or
jmp
mov
xor
test
je
mov
mov
test
jne
push
mov
push
call
add
pop
pop
pop
pop
ret
mov
mov
mov
movzx
movzx
not
and
test
je
pop
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
cmp
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
mov
pop
ret
int3
push
mov
mov
mov
add
cmp
jbe
cmp
jb
push
push
push
call
add
mov
push
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
pop
mov
mov
mov
mov
add
pop
ret
int3
int3
push
push
push
mov
xor
lea
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
or
mov
add
add
add
cmp
mov
jl
pop
pop
pop
ret
int3
int3
push
mov
cmp
jge
push
call
add
test
push
je
mov
mov
push
push
call
add
pop
ret
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
push
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
test
je
cmp
jl
cmp
jg
push
call
mov
mov
add
jmp
push
push
call
add
push
mov
push
push
push
call
add
mov
push
push
call
mov
add
pop
pop
xor
call
add
ret
int3
int3
mov
mov
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
mov
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
cmp
je
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
add
cmp
pop
jl
mov
push
push
push
call
add
ret
int3
int3
int3
int3
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
lea
add
test
mov
mov
jbe
mov
movzx
add
mov
mov
pop
ret
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
call
add
test
jne
pop
ret
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
ret
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
call
test
mov
mov
je
mov
movsx
jmp
mov
mov
mov
mov
test
mov
je
lea
mov
sub
cmp
jne
mov
test
jne
mov
mov
push
push
call
add
test
jne
mov
mov
test
mov
mov
je
sub
cmp
jne
mov
test
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
call
test
je
mov
mov
call
nop
mov
push
call
add
test
jne
cmp
jne
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
push
mov
call
mov
mov
mov
mov
add
test
pop
pop
je
sub
cmp
jne
mov
test
jne
mov
mov
mov
push
push
call
add
test
jne
mov
call
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
lea
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
je
mov
mov
cmp
jne
pop
mov
pop
pop
mov
xor
call
add
ret
mov
or
pop
sub
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
mov
call
mov
lea
cmp
ja
movzx
jmp
test
mov
jne
mov
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
test
mov
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
add
test
push
je
mov
push
push
jmp
mov
push
push
call
mov
add
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
test
jne
mov
mov
jmp
test
je
push
call
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
mov
push
call
add
test
mov
je
mov
mov
mov
mov
lea
sub
sub
push
lea
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
nop
fbstp
inc
jbe
add
jne
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
mov
lea
cmp
ja
movzx
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
lea
cmp
mov
ja
movzx
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
jmp
push
call
add
test
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
xor
xor
mov
mov
lea
lea
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
jge
push
call
add
test
jne
cmp
jle
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
push
call
add
jmp
mov
push
call
add
mov
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
mov
mov
sub
push
add
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
lea
or
inc
add
add
js
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
or
or
or
add
or
or
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
xor
push
mov
mov
lea
cmp
ja
movzx
jmp
call
jmp
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
call
cmp
mov
mov
jl
push
mov
mov
call
mov
add
mov
jmp
cmp
je
jmp
lea
mov
cmp
je
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
jmp
push
call
add
test
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
pop
pop
pop
mov
pop
mov
xor
call
add
ret
call
cmp
jl
push
mov
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
cmp
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
xor
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
push
mov
call
mov
add
test
push
je
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
call
neg
pop
sbb
pop
neg
pop
add
pop
mov
xor
call
add
ret
call
add
test
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
test
jne
mov
push
call
add
test
jne
mov
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
push
call
add
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
lea
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
jbe
pop
pop
movzx
pop
add
pop
mov
xor
call
add
ret
mov
pop
pop
mov
pop
pop
xor
mov
call
add
ret
cmp
inc
add
add
inc
add
test
add
jg
add
jge
add
inc
add
inc
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
sub
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
mov
or
add
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
add
cmp
jne
mov
mov
shl
or
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
je
sub
je
mov
mov
jmp
mov
mov
jmp
mov
mov
test
je
mov
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
fcomp
fnstsw
test
jp
mov
ret
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
add
cmp
push
ja
jmp
fld
sub
fstp
call
add
pop
pop
ret
mov
mov
shl
mov
pop
sub
and
shl
add
pop
ret
mov
mov
shl
pop
sub
and
shl
add
pop
ret
mov
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
pop
ret
lea
add
inc
add
inc
add
test
jmp
inc
or
push
mov
jne
or
pop
add
ret
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
pop
add
ret
push
mov
mov
call
mov
push
jmp
lea
lea
push
push
call
add
test
jne
cmp
jne
cmp
jl
mov
cmp
je
mov
test
jne
mov
push
push
call
add
pop
pop
xor
pop
add
ret
mov
sub
pop
sar
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
mov
push
push
call
mov
add
add
cmp
jge
mov
mov
shl
lea
nop
cmp
jne
add
add
cmp
jl
sub
mov
mov
shl
cmp
jge
mov
mov
shl
lea
jmp
lea
cmp
jne
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
fild
mov
shl
fstp
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
shl
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
push
mov
push
push
xor
xor
xor
cmp
lea
jle
mov
lea
mov
mov
test
jle
add
mov
cdq
sub
sar
cmp
jle
mov
mov
cmp
je
add
add
mov
cdq
sub
sar
cmp
jl
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
push
xor
mov
mov
mov
mov
mov
xor
cmp
mov
jle
mov
cmp
jg
jmp
cmp
jg
mov
mov
mov
sub
shl
add
lea
add
cmp
je
add
add
sub
jne
mov
add
add
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
mov
shl
push
mov
mov
test
je
mov
shl
mov
sub
add
sub
cmp
je
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
mov
lea
add
add
mov
jmp
xor
add
add
test
jne
mov
mov
add
mov
pop
pop
mov
pop
ret
mov
mov
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
cmp
ja
mov
mov
shl
push
mov
shl
push
push
push
call
add
jmp
push
call
add
mov
cmp
mov
jge
mov
mov
shl
sub
xor
push
mov
mov
add
sub
jne
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
xor
cmp
jne
xor
shl
mov
add
mov
mov
pop
pop
pop
ret
add
push
call
mov
add
add
cmp
jle
mov
push
push
call
add
mov
mov
shl
lea
cmp
ja
mov
mov
shl
push
push
push
push
call
add
jmp
mov
push
call
add
cmp
mov
jle
xor
mov
nop
mov
add
add
sub
mov
mov
mov
jne
shl
add
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
xor
push
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
call
add
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
push
mov
je
mov
mov
shl
push
shl
push
push
push
call
add
mov
mov
push
shl
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
lea
cmp
jae
mov
shl
lea
pop
add
ret
fild
fst
fldz
fucomp
fnstsw
test
jp
mov
jmp
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
shl
add
mov
cmp
jne
fcom
fnstsw
test
jnp
mov
test
jne
mov
fstp
pop
add
ret
mov
fstp
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
shl
mov
sub
and
shl
add
mov
cmp
jne
cmp
je
mov
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
sub
je
sub
je
sub
jne
mov
pop
add
mov
jmp
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
mov
push
push
call
add
pop
add
ret
mov
push
mov
call
mov
lea
lea
push
push
call
add
test
jne
mov
test
jne
pop
mov
pop
add
ret
mov
pop
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
cmp
mov
jne
mov
test
push
mov
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
push
push
mov
call
add
cmp
je
mov
mov
add
cmp
ja
push
push
call
add
cmp
jne
mov
sub
cmp
jbe
push
lea
shr
push
push
call
add
cmp
jne
mov
jmp
mov
push
push
call
add
cmp
je
add
push
push
call
add
cmp
jne
lea
pop
pop
pop
ret
mov
mov
sub
cmp
ja
pop
pop
pop
mov
pop
ret
mov
mov
test
push
jbe
mov
mov
shl
cmp
jne
xor
cmp
jbe
push
lea
shr
mov
shl
cmp
jne
mov
jmp
mov
mov
sub
cmp
ja
pop
mov
pop
ret
cmp
je
pop
mov
jmp
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
movzx
mov
cmp
mov
push
mov
mov
jle
mov
mov
call
mov
mov
push
mov
call
add
cmp
jge
lea
mov
mov
mov
shl
mov
mov
mov
mov
sub
jmp
lea
mov
mov
cmp
lea
je
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
add
add
sub
jne
cmp
ja
mov
mov
push
shl
push
push
push
call
add
mov
jmp
mov
push
call
mov
add
mov
jmp
mov
mov
mov
shl
lea
test
mov
jl
mov
mov
shl
lea
cmp
je
push
push
call
add
cmp
mov
jne
mov
test
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
test
jge
mov
cmp
je
push
shl
push
push
push
call
add
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
xor
push
mov
push
push
call
add
ret
mov
mov
shl
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
mov
mov
call
add
add
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
lea
add
add
mov
jmp
xor
add
lea
push
lea
call
mov
mov
sub
add
push
push
push
mov
call
add
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
mov
call
mov
cmp
jne
cmp
jne
mov
cmp
mov
jbe
add
mov
cmp
je
mov
cmp
ja
add
jmp
test
jne
mov
push
mov
mov
call
push
push
push
call
add
pop
pop
pop
pop
ret
lea
mov
call
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
rep
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
mov
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
call
add
cmp
jne
mov
lea
push
push
push
mov
mov
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movzx
and
sub
cmp
ja
push
mov
mov
jmp
mov
or
test
je
test
je
push
push
call
add
mov
test
je
and
movzx
sub
cmp
jbe
pop
pop
ret
mov
cmp
jl
mov
test
je
push
push
call
add
lea
cmp
jne
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
adc
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
mov
mov
xor
test
je
mov
test
jne
cmp
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
or
mov
mov
mov
mov
test
lea
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
xor
cmp
mov
mov
je
test
je
push
mov
push
call
add
mov
cmp
je
test
jne
mov
mov
push
push
push
call
mov
add
cmp
je
cmp
jne
mov
add
push
push
call
mov
mov
neg
sbb
add
push
neg
push
mov
call
add
neg
sbb
neg
test
mov
jne
test
je
mov
mov
add
or
add
add
add
and
or
mov
mov
mov
mov
mov
test
je
test
je
pop
pop
pop
mov
pop
pop
ret
test
jne
mov
test
je
mov
mov
shl
jmp
lea
mov
sub
add
sub
cmp
jl
mov
test
je
push
push
call
add
test
jne
mov
mov
shl
test
je
mov
shl
lea
mov
sub
add
sub
cmp
jne
cmp
jl
mov
jmp
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
test
jne
cmp
jne
cmp
jne
pop
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
and
push
xor
cmp
jle
push
xor
jmp
lea
mov
add
cmp
jl
mov
test
je
mov
push
push
call
add
add
add
cmp
jl
pop
xor
cmp
jle
mov
cmp
je
mov
mov
and
add
cmp
jl
xor
cmp
jle
mov
cmp
lea
je
mov
test
je
push
mov
push
call
add
add
cmp
jl
xor
cmp
jle
xor
jmp
lea
mov
cmp
je
mov
lea
mov
mov
mov
and
mov
add
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
push
push
call
add
cmp
push
push
je
xor
cmp
jbe
lea
cmp
jl
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
mov
test
je
push
push
call
add
xor
cmp
jbe
lea
lea
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jl
mov
test
je
push
mov
push
call
add
mov
mov
cmp
push
mov
push
push
mov
ja
nop
mov
cmp
jae
mov
add
cmp
jbe
mov
cmp
jae
cmp
jl
mov
test
je
mov
push
push
call
add
add
cmp
jb
cmp
ja
xor
mov
add
cmp
jbe
sub
mov
sar
cmp
jg
mov
sub
mov
imul
sar
mov
shr
add
add
add
cmp
jge
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
lea
cmp
jge
cmp
jle
cdq
sub
sar
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
movzx
or
add
cmp
ja
jmp
mov
push
push
mov
call
add
test
je
and
mov
mov
mov
shl
pop
pop
lea
shl
ret
mov
mov
call
cmp
movzx
je
shl
pop
add
pop
ret
pop
lea
pop
ret
mov
mov
mov
push
mov
mov
and
push
mov
call
mov
mov
add
add
pop
lea
shl
pop
lea
pop
ret
mov
push
mov
call
mov
mov
lea
lea
add
add
add
add
add
pop
lea
pop
ret
pop
xor
pop
ret
xor
inc
add
cdq
inc
add
cdq
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
push
mov
test
mov
je
test
je
mov
shl
jmp
lea
mov
sub
mov
add
sub
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
mov
test
jne
mov
mov
shl
test
je
mov
shl
nop
mov
sub
add
sub
cmp
je
mov
cmp
jl
mov
jne
and
jmp
test
jne
mov
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
cmp
mov
jl
mov
test
jne
mov
test
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
movzx
add
cmp
ja
jmp
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
mov
add
mov
push
add
push
push
push
call
add
ret
mov
push
add
push
push
push
call
add
ret
lea
pop
fwait
inc
add
add
fwait
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
movzx
push
push
mov
mov
xor
test
je
lea
mov
mov
sub
test
mov
jbe
cmp
jne
mov
push
lea
push
push
call
add
mov
movzx
xor
test
je
mov
and
and
or
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
test
jne
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
mov
cdq
and
add
sar
cmp
jae
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
cmp
jbe
push
mov
shr
lea
cmp
ja
mov
push
push
push
push
call
add
mov
pop
mov
pop
ret
push
call
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
or
mov
test
mov
je
test
jne
mov
mov
push
push
push
call
add
test
je
mov
push
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
push
add
push
push
call
mov
add
mov
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
cmp
je
mov
call
mov
cmp
jne
pop
ret
push
mov
push
mov
push
push
lea
push
push
mov
call
xor
add
cmp
jle
mov
push
lea
push
push
call
add
add
cmp
jl
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
lea
mov
mov
test
je
test
je
push
push
call
add
add
sub
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
cmp
je
nop
test
jne
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
call
xor
cmp
je
mov
call
cmp
jne
mov
mov
mov
test
je
push
push
call
add
push
call
add
cmp
je
jmp
lea
mov
call
cmp
jne
mov
cmp
mov
mov
je
lea
mov
call
cmp
jne
mov
mov
mov
mov
test
je
lea
mov
test
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
mov
mov
or
lea
mov
mov
mov
test
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
mov
test
je
mov
mov
mov
mov
and
and
or
push
push
mov
call
add
cmp
jne
xor
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
xor
add
sub
sub
lea
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
movzx
cmp
push
ja
jmp
mov
call
pop
pop
xor
pop
ret
cmp
je
pop
pop
mov
pop
jmp
push
call
add
pop
pop
xor
pop
ret
mov
mov
mov
lea
push
push
add
push
mov
call
mov
add
cmp
jl
mov
mov
sub
add
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
add
mov
cmp
jne
push
mov
call
mov
pop
mov
sub
add
pop
pop
mov
pop
ret
xor
cmp
je
call
mov
cmp
jbe
add
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
xor
pop
ret
mov
ins
mov
inc
add
mov
inc
add
pop
and
push
mov
mov
push
lea
add
jne
mov
mov
sub
add
mov
call
sub
cmp
je
test
jg
cmp
je
mov
cmp
jae
mov
add
pop
mov
pop
pop
ret
mov
add
pop
mov
mov
pop
pop
ret
mov
mul
shr
imul
pop
mov
pop
pop
ret
int3
int3
int3
push
push
mov
mov
cmp
ja
xor
lea
mov
mov
mov
mov
mov
mov
cmp
je
lea
mov
call
cmp
jne
call
cmp
je
mov
call
cmp
jne
mov
mul
shr
imul
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
push
push
call
add
ret
mov
mov
mov
and
and
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
mov
mov
mov
test
jne
cmp
jne
mov
or
mov
cmp
jl
mov
test
je
test
je
push
push
push
call
add
pop
pop
ret
mov
and
and
or
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
shl
add
push
push
push
push
call
mov
push
push
push
call
mov
add
pop
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
push
push
lea
push
push
push
push
call
mov
push
push
push
call
mov
add
test
mov
mov
mov
je
lea
sub
sub
test
mov
jne
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
push
push
push
call
lea
add
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
mov
push
lea
push
mov
je
mov
mov
cmp
jb
je
cmp
mov
jne
push
push
push
push
call
mov
mov
mov
add
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
pop
pop
pop
ret
mov
movzx
movzx
and
not
test
je
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
cmp
je
mov
push
mov
mov
mov
mov
mov
pop
push
push
push
mov
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
je
push
mov
push
lea
mov
cmp
jb
mov
mov
movzx
movzx
not
and
test
lea
je
cmp
je
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
call
add
cmp
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
xor
push
push
push
call
mov
push
push
push
call
add
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
push
mov
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
mov
push
shl
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
lea
mov
add
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
movzx
je
shl
add
push
push
mov
push
push
call
add
ret
lea
push
push
mov
push
push
call
add
ret
int3
mov
mov
push
push
xor
test
push
jle
mov
mov
mov
lea
mov
cmp
jg
cmp
jge
sub
je
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
pop
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
cmp
push
mov
ja
jmp
push
push
push
call
add
mov
mov
add
mov
pop
pop
ret
push
push
jmp
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
pop
pop
ret
push
cmps
inc
add
cmps
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
lea
push
mov
lea
push
push
mov
mov
call
add
test
jne
mov
mov
push
push
call
mov
mov
add
mov
pop
mov
pop
ret
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
mov
sub
sar
shl
add
push
mov
mov
test
je
lea
mov
sub
sar
shl
add
mov
mov
test
jne
mov
cmp
ja
nop
mov
sub
sar
shl
add
add
mov
mov
sub
sar
shl
add
mov
mov
sub
sar
shl
add
mov
cmp
jbe
mov
sub
sar
shl
add
pop
mov
ret
int3
int3
push
push
push
mov
mov
push
mov
lea
lea
cmp
ja
mov
mov
shl
push
shl
push
push
push
call
add
jmp
push
call
add
shl
add
mov
pop
mov
mov
mov
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
lea
cmp
ja
mov
lea
add
lea
add
add
add
push
add
add
push
push
push
call
add
jmp
push
call
add
mov
mov
sub
mov
imul
sar
mov
shr
add
lea
lea
lea
mov
lea
pop
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
cmp
mov
jg
add
mov
jmp
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
mov
je
cmp
je
mov
mov
mov
push
mov
push
mov
push
mov
sub
sub
mov
cmp
mov
mov
jne
mov
jmp
sub
mov
mov
imul
sar
mov
shr
add
mov
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
mov
lea
add
push
mov
push
mov
call
mov
mov
add
add
mov
mov
mov
add
pop
pop
mov
pop
mov
pop
xor
call
add
ret
int3
int3
sub
push
movzx
push
push
mov
xor
cmp
mov
jge
mov
sub
add
mov
mov
mov
add
sub
jne
test
je
mov
mov
mov
sub
cmp
mov
jb
push
call
add
push
push
push
call
mov
add
xor
test
jle
mov
neg
shl
mov
jmp
lea
mov
mov
mov
lea
push
push
push
add
call
mov
add
mov
mov
mov
mov
mov
mov
add
cmp
jl
mov
mov
push
push
push
call
mov
push
push
push
call
fild
mov
add
fstp
mov
mov
shl
mov
sub
test
jle
add
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
jne
test
je
mov
lea
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
call
mov
sub
mov
add
cmp
je
push
push
push
call
add
mov
cmp
jbe
lea
mov
mov
mov
mov
mov
mov
sub
sub
cmp
ja
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
add
mov
mov
add
mov
mov
mov
mov
pop
mov
pop
ret
sub
push
push
push
push
mov
call
mov
mov
mov
add
cmp
jne
test
je
mov
mov
test
lea
mov
je
push
push
push
call
add
test
jne
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
test
push
je
call
mov
lea
mov
mov
test
mov
mov
mov
mov
mov
mov
je
push
lea
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jne
pop
xor
cmp
jle
jmp
lea
sub
mov
add
cmp
jg
mov
pop
mov
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
lea
nop
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
sub
mov
add
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
mov
pop
ret
add
push
push
call
add
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jbe
push
push
call
add
mov
mov
shl
sub
mov
mov
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
call
mov
mov
mov
mov
add
cmp
jb
push
call
add
cmp
mov
je
mov
mov
push
mov
lea
push
push
push
call
mov
mov
movzx
push
push
push
call
xor
add
mov
cmp
mov
jbe
push
lea
nop
push
call
mov
movzx
add
add
add
cmp
jl
mov
pop
mov
mov
mov
mov
sub
mov
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
pop
pop
ret
add
push
push
call
add
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
mov
call
mov
mov
push
push
push
call
mov
add
cmp
mov
mov
jle
mov
sub
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
add
xor
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
push
add
push
call
mov
mov
mov
cmp
je
push
call
mov
mov
push
call
add
push
call
int3
int3
int3
int3
int3
int3
mov
cmp
jle
push
push
call
add
push
push
call
add
cmp
jle
push
push
call
add
add
mov
ret
int3
int3
int3
mov
cmp
push
push
mov
push
je
mov
call
mov
mov
mov
sub
mov
mov
mov
sub
cmp
mov
jne
push
mov
movzx
mov
shl
cmp
jg
mov
cmp
jg
lea
push
jmp
add
push
push
call
add
mov
add
cmp
jne
movzx
shl
lea
lea
cmp
jbe
mov
jmp
mov
sub
sar
sub
push
mov
call
mov
add
add
mov
mov
cmp
jne
call
jmp
add
mov
mov
mov
mov
movzx
shl
add
mov
mov
mov
mov
xor
mov
mov
mov
cmp
pop
jae
jmp
lea
mov
add
cmp
jb
test
mov
mov
je
add
push
push
push
call
add
add
pop
pop
xor
pop
ret
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
cmp
jne
call
jmp
add
mov
mov
add
mov
add
mov
mov
mov
mov
add
mov
mov
test
je
push
push
push
call
add
mov
mov
mov
mov
push
call
add
test
jge
pop
pop
mov
pop
ret
mov
shl
sub
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
movzx
cmp
jb
jne
push
push
call
add
mov
mov
push
push
push
call
add
test
jne
push
push
call
add
mov
add
mov
cmp
jb
push
call
add
pop
ret
cmp
jb
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
mov
jne
mov
push
add
push
push
call
add
test
jne
jmp
mov
mov
mov
cmp
je
mov
push
push
call
add
test
je
mov
mov
mov
jmp
mov
mov
mov
sub
mov
imul
sar
mov
shr
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
test
jne
mov
cmp
je
mov
call
pop
ret
movzx
cmp
jb
mov
call
pop
ret
mov
mov
shl
push
sub
push
add
push
push
mov
mov
call
mov
add
test
je
mov
push
push
push
mov
call
mov
mov
add
mov
mov
add
pop
pop
ret
movzx
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
movzx
mov
mov
sub
push
mov
mov
mov
mov
mov
push
push
push
mov
mov
call
mov
add
test
je
mov
add
push
push
call
push
push
push
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
add
cmp
mov
jle
sub
mov
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
mov
add
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
push
mov
mov
sub
push
push
mov
lea
push
push
push
mov
mov
call
mov
push
mov
mov
push
push
push
call
add
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
add
test
jne
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
cmp
je
push
push
push
call
add
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
test
jne
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
cmp
jne
push
push
call
push
push
call
mov
add
push
push
push
call
add
ret
push
push
push
call
mov
add
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
push
lea
push
push
push
mov
call
add
push
push
mov
call
add
test
je
lea
push
push
push
call
add
push
push
call
add
test
jne
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
call
add
cmp
jne
push
push
push
call
push
push
push
call
push
push
mov
call
push
push
push
call
add
lea
push
push
push
call
add
test
jne
mov
push
push
jmp
push
push
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
lea
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
add
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
push
mov
call
add
push
push
call
add
test
je
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
add
push
push
call
push
lea
push
push
call
mov
add
test
je
push
push
push
call
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
lea
push
push
call
push
push
call
push
push
push
call
add
push
push
call
push
lea
push
push
call
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
push
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
add
cmp
jne
push
mov
mov
mov
push
push
call
mov
add
test
pop
jl
push
push
call
add
push
push
push
call
add
pop
ret
push
call
add
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
push
push
xor
call
add
test
je
mov
push
push
call
add
test
je
or
push
push
call
add
test
je
or
cmp
jle
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
push
call
push
push
call
add
cmp
je
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
push
call
add
test
jg
push
push
call
xor
add
mov
xor
jmp
push
lea
push
push
call
push
push
push
mov
call
push
add
push
push
call
mov
push
mov
call
add
mov
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
mov
jmp
mov
push
push
call
push
mov
call
add
test
je
cmp
je
push
push
push
call
add
jmp
call
push
push
call
push
push
call
push
push
call
add
xor
test
je
mov
mov
test
je
mov
add
test
pop
je
mov
add
mov
lea
push
push
call
push
call
push
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
call
add
push
push
call
call
push
lea
push
push
call
add
test
je
push
push
mov
lea
mov
xor
repz
je
lea
lea
mov
add
test
jne
sub
push
push
lea
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
call
add
push
push
push
push
call
add
push
call
call
add
push
push
call
add
push
push
call
call
add
push
push
call
call
push
lea
push
push
call
add
test
jne
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
mov
push
push
mov
call
add
cmp
jne
push
push
mov
call
add
mov
jmp
mov
mov
mov
lea
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
jmp
xor
cmp
sete
mov
push
call
add
cmp
jne
push
push
jmp
lea
push
push
call
add
test
je
push
push
push
call
add
push
push
push
call
lea
push
push
push
call
add
test
je
add
cmp
jle
cmp
je
lea
push
lea
push
push
call
add
test
jne
mov
sub
mov
jmp
push
push
push
call
lea
push
push
push
call
add
test
je
lea
add
push
lea
push
push
call
add
test
jne
mov
mov
jmp
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
mov
add
test
jle
push
push
push
call
add
mov
cmp
je
mov
push
push
push
call
jmp
mov
mov
cmp
jne
push
push
call
add
jmp
cmp
je
cmp
je
mov
push
lea
push
push
push
call
add
jmp
push
push
push
call
add
push
call
sub
push
push
call
add
lea
push
push
push
call
add
test
jne
push
call
sub
push
push
call
add
mov
pop
pop
pop
pop
xor
mov
call
add
ret
mov
push
push
push
call
add
mov
ret
int3
int3
int3
push
mov
push
push
call
fabs
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
push
call
fstp
call
fstp
fld
add
fstp
push
call
fld
add
fstp
push
call
add
mov
pop
add
ret
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
fdiv
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fmul
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
fstp
call
fstp
add
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
push
mov
push
push
call
add
push
push
push
call
fstp
call
fstp
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jne
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jp
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
call
cdq
mov
idiv
mov
push
mov
fild
fdiv
fstp
call
add
sub
je
sub
je
sub
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
mov
push
push
mov
call
mov
add
cmp
jle
push
push
push
call
add
sub
add
mov
fild
sub
fmul
fstp
call
fiadd
jmp
push
push
call
add
cmp
mov
jge
push
push
push
call
add
fild
sub
fmul
fstp
call
fadd
jmp
fld
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
mov
push
push
call
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
lea
push
push
push
call
mov
push
push
mov
call
add
test
jge
lea
xor
test
setl
push
mov
push
push
push
sub
and
mov
call
add
test
jge
lea
xor
test
setl
pop
sub
and
cmp
jge
mov
mov
cmp
jle
mov
cmp
jg
sub
add
push
lea
push
push
call
add
pop
pop
mov
pop
pop
ret
push
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
lea
push
mov
push
push
call
lea
push
push
mov
call
add
cmp
je
jmp
lea
nop
sub
lea
cmp
jb
lea
push
call
add
mov
mov
mov
mov
add
cmp
jne
sub
lea
push
call
mov
add
pop
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
lea
push
push
push
call
push
push
mov
call
lea
push
push
mov
call
add
test
jle
lea
mov
push
lea
push
push
sub
call
add
test
jg
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
lea
push
push
push
call
mov
push
push
push
mov
call
add
test
jge
lea
mov
xor
test
setl
sub
and
push
push
push
call
add
test
jge
lea
xor
test
setl
sub
and
test
jg
mov
mov
cmp
jbe
mov
cmp
jle
pop
pop
xor
pop
add
ret
mov
sub
add
lea
cmp
jg
push
push
call
add
push
push
push
push
call
add
xor
test
jle
mov
lea
mov
movzx
push
push
call
add
add
cmp
jl
pop
mov
pop
pop
pop
add
ret
int3
sub
mov
xor
mov
push
push
push
mov
push
call
mov
lea
push
push
call
mov
add
cmp
jl
push
mov
push
push
call
mov
movzx
add
cmp
je
push
push
push
call
add
lea
cmp
jb
lea
push
call
add
mov
mov
add
add
cmp
jle
pop
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
push
push
call
lea
push
push
call
lea
push
push
push
call
add
test
je
push
push
call
add
lea
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movsx
add
cmp
je
cmp
je
mov
pop
ret
cmp
jne
add
nop
cmp
jne
mov
push
push
call
add
mov
add
cmp
jne
cmp
je
add
cmp
jne
lea
pop
ret
cmp
jne
mov
push
push
call
add
lea
pop
ret
int3
int3
int3
push
push
mov
call
add
add
cmp
ja
movzx
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
xor
test
sete
mov
push
call
add
test
je
mov
pop
ret
xor
test
sete
pop
ret
xor
cmp
sete
pop
ret
nop
(bad)
rol
rcl
inc
add
rol
in
rol
cli
rol
pop
rol
adc
inc
add
rol
rol
cmp
inc
add
inc
add
or
add
or
or
or
add
or
add
or
or
or
int3
push
push
push
mov
cmp
push
mov
jne
mov
add
mov
add
cmp
jae
lea
lea
mov
cmp
jne
movzx
add
mov
add
call
test
jne
mov
jmp
cmp
jne
cmp
jae
movzx
add
add
cmp
jg
movzx
cmp
jg
mov
pop
pop
pop
pop
ret
movzx
cmp
je
add
add
cmp
jb
xor
cmp
pop
pop
sete
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
mov
je
cmp
jne
mov
push
push
call
add
mov
cmp
je
pop
xor
pop
ret
mov
movsx
mov
add
cmp
push
movsx
jae
movsx
cmp
jne
sub
jne
pop
pop
lea
pop
ret
cmp
jne
add
add
cmp
jb
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
xor
cmp
jae
push
mov
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
mov
add
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
add
add
cmp
jb
test
pop
jl
mov
add
mov
push
lea
push
push
call
add
test
jne
sub
jns
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
mov
lea
push
mov
push
push
call
add
test
jne
mov
cmp
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
jmp
lea
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
mov
lea
push
add
push
push
call
add
test
je
pop
pop
pop
pop
ret
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jl
mov
push
push
call
add
mov
mov
push
mov
mov
push
add
push
mov
call
add
test
pop
jne
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
js
lea
lea
cmp
je
sub
sub
test
jge
mov
push
push
call
add
mov
mov
push
mov
sub
push
push
mov
call
add
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
add
push
push
mov
js
cmp
jge
cmp
jne
mov
push
push
call
add
mov
mov
sub
cmp
jb
cmp
mov
push
mov
mov
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
pop
jne
lea
pop
pop
ret
pop
xor
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
mov
lea
movsx
cmp
ja
movzx
jmp
mov
cmp
je
cmp
je
movzx
push
call
add
test
je
movzx
mov
mov
call
mov
test
je
add
jmp
mov
add
cmp
je
mov
push
push
call
add
mov
call
cmp
mov
jne
xor
jmp
mov
lea
movzx
push
mov
call
add
test
jne
movzx
push
mov
call
add
test
jne
xor
pop
pop
pop
pop
ret
mov
lea
mov
call
mov
test
je
add
jmp
cmp
je
mov
mov
call
cmp
mov
mov
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
add
push
mov
mov
call
mov
add
jmp
movzx
mov
call
mov
test
je
mov
jmp
xor
movsx
add
cmp
ja
movzx
jmp
test
je
lea
push
lea
push
push
call
add
test
jne
lea
jmp
test
je
add
mov
jmp
cmp
lea
mov
mov
jne
push
add
push
call
add
pop
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
pop
ret
add
mov
mov
push
call
add
pop
pop
pop
pop
ret
pop
mov
pop
pop
pop
ret
mov
xor
cmp
pop
setne
sub
and
pop
pop
pop
ret
push
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
push
push
add
push
push
call
add
pop
pop
pop
pop
ret
push
push
push
mov
call
add
pop
pop
pop
pop
ret
lea
jne
inc
add
inc
add
xlat
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
call
xlat
inc
add
(bad)
inc
add
xlat
inc
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
mov
push
mov
je
cmp
jbe
pop
xor
pop
ret
sub
sub
push
push
jne
pop
xor
pop
pop
pop
ret
lea
mov
mov
movsx
push
push
push
call
add
test
je
add
cmp
lea
mov
mov
jb
lea
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
je
mov
sub
add
mov
jne
pop
pop
pop
xor
pop
ret
pop
pop
pop
add
pop
ret
int3
int3
cmp
jl
test
jne
sub
push
mov
push
push
call
add
ret
mov
push
push
call
add
ret
push
mov
cmp
jne
mov
push
push
call
add
mov
mov
push
push
push
call
add
pop
ret
cmp
jne
mov
sub
mov
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
test
push
jne
test
je
mov
mov
push
push
push
call
add
xor
test
jle
mov
mov
call
add
cmp
jl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
push
push
lea
push
push
push
call
lea
push
push
push
mov
call
mov
push
push
push
mov
mov
call
add
test
jge
lea
xor
test
setl
sub
and
mov
sub
mov
jns
xor
jmp
cmp
jbe
mov
cmp
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
sub
push
push
mov
add
push
call
add
test
je
mov
sub
lea
push
push
call
mov
add
push
push
call
add
pop
pop
mov
pop
add
ret
mov
cmp
jne
add
mov
mov
jmp
mov
add
add
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
mov
add
cmp
jae
cmp
jne
mov
jmp
cmp
je
sub
add
push
push
call
sub
push
push
call
push
push
lea
call
add
pop
pop
add
pop
add
ret
push
push
lea
call
add
pop
pop
pop
add
ret
push
call
add
pop
pop
mov
pop
add
ret
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
lea
push
push
push
call
push
push
push
mov
call
mov
add
push
push
mov
mov
mov
mov
call
mov
add
add
cmp
ja
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
add
cmp
jbe
pop
pop
pop
xor
pop
add
ret
mov
sub
cmp
jne
add
push
push
call
push
push
call
mov
add
test
jne
test
je
mov
mov
jmp
mov
mov
mov
push
push
push
call
add
xor
test
jle
lea
mov
mov
lea
call
add
cmp
jl
mov
pop
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
lea
push
push
push
call
xor
add
cmp
mov
mov
jbe
lea
cmp
je
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
movzx
add
push
call
add
test
jne
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
mov
cmp
jne
mov
mov
sub
push
push
push
call
add
jmp
mov
movsx
mov
sub
call
push
call
mov
add
add
cmp
jb
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
mov
call
add
add
cmp
ja
jmp
mov
push
mov
push
mov
call
add
pop
pop
pop
ret
push
push
call
mov
push
push
mov
call
push
push
push
call
add
jmp
mov
push
mov
xor
call
push
push
call
add
pop
push
push
call
add
test
jne
push
push
call
mov
sub
push
push
push
call
mov
add
push
call
add
pop
pop
pop
ret
push
push
call
add
test
jne
push
push
call
push
push
call
push
push
push
call
add
mov
push
call
add
pop
pop
pop
ret
xchg
fiadd
xchg
fiadd
iret
fiadd
lods
fiadd
sub
mov
xor
mov
push
push
push
push
mov
lea
push
push
push
call
push
push
push
mov
call
push
push
mov
call
mov
add
push
push
push
mov
call
add
cmp
mov
jne
add
mov
jmp
mov
cmp
mov
je
cmp
je
cmp
je
cmp
je
push
push
push
call
add
lea
push
push
call
mov
add
add
cmp
mov
mov
mov
jle
push
lea
push
push
mov
call
mov
add
test
je
add
lea
push
push
lea
call
add
cmp
jbe
mov
jmp
mov
cmp
jae
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
cmp
jne
mov
cmp
jl
mov
sub
push
lea
push
push
call
lea
push
call
mov
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
push
push
push
lea
push
push
push
call
lea
add
cmp
mov
jb
push
call
add
mov
mov
add
cmp
je
lea
sub
movsx
cmp
ja
movzx
jmp
cmp
jb
push
call
add
mov
mov
add
cmp
jb
push
call
add
mov
mov
mov
jmp
push
push
push
call
add
jmp
push
push
push
call
add
jmp
cmp
jb
push
call
add
mov
mov
mov
add
add
cmp
jne
sub
cmp
pop
pop
jb
push
call
add
mov
mov
add
pop
ret
nop
mov
inc
add
inc
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
push
push
mov
mov
je
movsx
push
push
call
add
test
je
add
cmp
jne
mov
sub
cmp
jb
push
push
call
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
add
cmp
jne
movzx
add
push
call
add
test
je
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
push
push
call
add
mov
sub
lea
push
mov
add
push
push
call
add
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
lea
push
mov
push
push
call
mov
lea
mov
push
lea
push
mov
call
add
cmp
jae
cmp
je
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
add
cmp
jne
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
lea
push
mov
add
call
mov
movsx
sub
add
add
cmp
ja
movzx
jmp
push
push
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
lea
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
nop
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
fnstcw
movzx
or
mov
fldcw
fistp
mov
push
fldcw
jmp
push
push
call
fstp
lea
push
lea
push
call
add
jmp
mov
lea
mov
call
jmp
lea
push
push
push
call
lea
push
push
mov
call
add
test
jne
cmp
jb
push
push
call
lea
push
call
jmp
push
lea
push
lea
push
call
add
lea
lea
mov
mov
add
test
jne
sub
push
lea
push
lea
push
call
add
cmp
jb
lea
push
call
add
mov
mov
pop
pop
pop
pop
xor
call
add
ret
movsx
push
push
push
call
add
jmp
nop
inc
in
add
in
add
inc
add
inc
add
inc
add
inc
add
out
add
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
push
push
push
push
push
push
push
push
push
add
add
add
add
push
push
push
push
add
add
add
add
int3
int3
int3
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
add
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
push
call
add
call
mov
pop
ret
int3
int3
push
mov
push
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
lea
push
call
add
test
jne
push
push
call
add
pop
mov
xor
call
add
ret
lea
push
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
mov
fild
mov
sub
fdiv
fstp
push
call
mov
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
push
push
call
push
push
mov
call
add
test
jg
push
call
add
jmp
push
push
call
add
call
mov
mov
cmp
jne
lea
push
call
add
add
jmp
lea
push
call
add
test
mov
jne
push
call
add
jmp
push
push
mov
mov
mov
xor
repz
jne
push
push
push
call
mov
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
add
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
test
jl
push
push
call
push
push
push
call
add
jmp
lea
push
push
mov
mov
call
mov
add
test
je
cmp
jne
cmp
je
mov
mov
push
add
lea
push
mov
lea
push
push
call
push
lea
push
lea
push
call
add
jmp
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
mov
add
test
jne
lea
push
call
add
pop
pop
mov
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
add
test
jg
push
call
add
jmp
push
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
mov
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
jne
or
jmp
push
push
call
add
mov
push
push
call
lea
push
mov
call
add
pop
mov
and
cmp
mov
jne
push
call
add
mov
pop
add
ret
fild
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
push
sub
fstp
push
push
call
call
push
push
mov
mov
call
call
push
push
push
push
call
fstp
add
push
call
add
pop
pop
mov
pop
ret
int3
push
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
call
mov
push
call
mov
push
push
push
push
call
push
push
push
call
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
add
test
je
push
push
call
add
test
je
push
push
push
call
add
test
je
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
add
pop
mov
pop
ret
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
mov
push
call
add
xor
cmp
setne
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
call
mov
mov
push
call
add
mov
neg
sbb
add
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
je
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
mov
add
test
jne
push
push
push
call
add
mov
pop
ret
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
mov
push
push
mov
call
push
push
call
add
call
test
mov
jne
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
test
jle
push
push
push
push
call
mov
add
test
je
push
push
push
call
push
mov
push
push
mov
call
push
push
call
mov
push
push
call
add
test
mov
pop
jne
push
push
call
jmp
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
add
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
push
push
call
add
cmp
jne
fld
mov
sub
fstp
push
call
add
mov
add
ret
xor
add
ret
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
call
lea
push
call
push
mov
push
push
call
add
test
je
mov
lea
lea
mov
add
test
jne
sub
je
cmp
je
add
lea
push
call
push
mov
push
push
call
add
test
jne
lea
push
call
push
push
call
add
xor
cmp
sbb
pop
neg
pop
mov
xor
call
add
ret
mov
lea
lea
push
mov
call
mov
add
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
mov
push
push
lea
push
push
mov
call
add
mov
lea
push
call
add
cmp
jbe
mov
push
push
push
push
call
add
add
sub
je
cmp
je
lea
push
call
add
test
je
push
push
call
add
test
ja
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
call
mov
sub
push
mov
call
add
test
jne
push
mov
call
mov
add
mov
add
push
call
add
test
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
pop
ret
push
add
push
push
call
mov
add
mov
sub
test
je
push
push
call
add
cmp
jne
push
push
call
add
test
jne
push
call
mov
push
push
call
push
push
push
call
xor
add
cmp
setne
mov
jmp
push
mov
call
mov
jmp
push
push
push
call
mov
add
test
je
cmp
je
push
push
push
call
add
movsx
sub
je
sub
je
sub
jne
push
mov
call
mov
jmp
push
mov
call
mov
jmp
push
or
call
mov
add
add
cmp
jne
jmp
push
push
push
call
add
pop
pop
pop
pop
ret
test
jne
push
push
call
push
call
add
pop
mov
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
test
jne
push
push
call
add
push
call
push
mov
call
add
test
je
call
mov
push
call
push
push
push
call
add
pop
pop
pop
ret
test
je
pop
pop
mov
pop
ret
push
push
call
add
test
je
push
push
call
push
push
call
add
call
pop
pop
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
mov
call
add
sub
mov
je
jmp
mov
sub
push
push
mov
call
add
cmp
jne
test
je
push
push
call
fstp
mov
push
push
call
add
test
jg
xor
add
cmp
jne
call
test
mov
je
push
push
call
add
mov
pop
pop
mov
pop
ret
lea
push
push
push
call
add
test
je
mov
mov
push
push
push
push
call
add
cmp
jne
mov
jmp
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
mov
call
add
pop
pop
ret
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
push
call
push
push
push
mov
call
mov
push
push
push
call
add
test
pop
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
push
push
push
call
add
mov
call
test
mov
jne
push
push
call
add
lea
pop
pop
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
push
push
call
add
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
add
push
push
call
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
int3
push
mov
push
push
call
add
test
jg
push
push
push
call
push
call
add
pop
ret
push
push
push
push
push
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
add
push
call
push
push
call
push
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
mov
add
cmp
jl
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
call
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
mulsd
subsd
sqrtsd
pmovmskb
psllq
andpd
psrlq
movsd
movlpd
movsd
subsd
mulsd
addsd
subsd
mulsd
movsd
andpd
psllq
pextrw
orpd
sub
add
mulsd
mulsd
movapd
mulsd
mulsd
subsd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
subpd
movsd
mulsd
and
shl
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
pinsrw
addsd
pshufd
subsd
addsd
orpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
mulpd
pshufd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pextrw
andpd
pshufd
andpd
movsd
movlpd
movsd
subsd
mulsd
addsd
mulsd
subsd
movsd
mulsd
mulsd
subsd
subsd
addsd
subsd
movapd
pshufd
subsd
addsd
pshufd
addsd
mulsd
addsd
pshufd
divsd
movapd
movapd
movapd
mulpd
movsd
mulpd
mulpd
and
mulsd
mulpd
addpd
movapd
mulsd
mulpd
movapd
mulsd
addpd
pshufd
mulsd
sub
mulpd
addsd
xorpd
pshufd
mulsd
pshufd
addsd
movsd
pinsrw
subsd
addsd
addsd
addsd
subsd
subsd
subsd
subsd
orpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
movlpd
movlpd
movlpd
addsd
andnpd
orpd
sub
movlpd
fld
add
ret
movlpd
xorpd
addsd
mov
jmp
movlpd
xorpd
sub
movsd
pextrw
and
sub
cmp
jb
addsd
orpd
mulsd
movlpd
fld
add
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
subpd
mulsd
addsd
mulsd
subsd
pshufd
addsd
subsd
subsd
movlpd
fld
add
ret
sub
cmp
jae
psrlq
psllq
pmovmskb
andnpd
subsd
movsd
mulsd
addsd
orpd
subsd
mulsd
movsd
subsd
sqrtsd
and
shr
neg
movsd
andpd
psllq
pextrw
orpd
movd
pshufd
sub
add
mulsd
mulsd
mulsd
mulsd
subsd
andpd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
addpd
movsd
mulsd
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
addsd
and
pinsrw
movsd
pshufd
addsd
subsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
movapd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
pshufd
mulpd
pshufd
subsd
pshufd
subsd
subsd
subsd
subsd
subsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
xorpd
andpd
movlpd
movapd
mulsd
movapd
subsd
movapd
pshufd
sqrtsd
mulpd
pshufd
pextrw
mulpd
addpd
movlpd
mulpd
cmpltsd
mulsd
addpd
pshufd
mulsd
andpd
mulpd
andpd
pshufd
subsd
addsd
mulsd
subsd
subsd
mulsd
pshufd
subsd
divsd
sub
addpd
mulpd
pshufd
addsd
and
pinsrw
pshufd
addsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
pextrw
shr
neg
movd
pshufd
movlpd
movlpd
andpd
andpd
addsd
sub
movlpd
fld
add
ret
movlpd
movlpd
addsd
sub
movlpd
fld
add
ret
xorpd
addsd
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movq
unpcklpd
movapd
andpd
comisd
jp
jae
comisd
jae
comisd
jb
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
comisd
jae
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
movq
xorpd
comisd
jae
movq
movq
movq
addsd
psrlq
psubd
movd
lea
movq
movq
subsd
mulsd
addsd
divsd
unpcklpd
jmp
mov
movq
movq
divsd
unpcklpd
movq
movq
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
subsd
subsd
orpd
movq
fld
ret
comisd
jne
fld
ret
comisd
jae
fld
fmul
sub
fstp
fld
add
fadd
ret
fld
fmul
fadd
ret
movq
movq
andpd
ucomisd
jp
mov
shr
fld
fadd
ret
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
nop
int3
int3
int3
int3
call
xchg
jmp
call
fxch
jmp
fabs
fld1
mov
xor
jmp
mov
fabs
fxch
fabs
fxch
fpatan
or
je
fldpi
fsubp
or
je
fchs
ret
fabs
fld
fld
fld1
fsubp
fxch
fld1
faddp
fmulp
ftst
fstsw
fwait
test
jne
xor
fsqrt
ret
pop
jmp
fstp
fld
ret
fstp
or
je
fstp
fldpi
or
je
fchs
ret
fstp
fldz
or
je
fchs
ret
fstp
jmp
fstp
mov
jmp
call
jmp
push
mov
sub
xor
cmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
push
call
pop
jmp
mov
mov
mov
cmp
jg
je
cmp
jg
je
mov
push
pop
sub
je
dec
je
sub
je
dec
je
sub
je
dec
je
sub
jne
mov
mov
fld
lea
fstp
push
fld
fstp
fld
fstp
call
test
pop
jne
call
mov
jmp
mov
fld
lea
fstp
push
fld
mov
fstp
fld
fstp
call
pop
jmp
mov
mov
jmp
mov
fld
fstp
fld
fstp
fld
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
jmp
mov
jmp
mov
fld
fstp
jmp
mov
jmp
mov
jmp
fld1
jmp
mov
mov
jmp
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
fld
fmul
fst
fld
fstp
fld
fstp
lea
fstp
push
mov
call
test
pop
jne
call
mov
fld
fstp
pop
pop
pop
leave
ret
mov
sbb
dec
add
ret
dec
add
ret
dec
add
dec
add
ret
dec
add
ret
push
ret
dec
add
ret
pop
ret
dec
add
dec
add
dec
add
in
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
in
pop
xchg
gs
or
test
mov
test
iret
in
ret
retf
test
mov
mov
jl
push
ret
cdq
(bad)
cli
and
loop
xchg
xchg
idiv
mov
sbb
dec
mov
shr
jge
ins
add
ficomp
dec
mov
out
sub
imul
jle
(bad)
xor
jmp
les
sbb
ins
pop
loop
adc
inc
xor
xor
add
fld
ja
in
xchg
or
ins
jp
pop
pop
add
mov
xor
jmp
mov
sbb
and
mov
sar
arpl
and
sub
mov
pop
leave
in
hlt
inc
aad
add
scas
mov
test
adc
shr
(bad)
hlt
mov
and
je
inc
pop
aad
mov
bound
stc
retf
mov
outs
inc
adc
gs
xchg
xor
pop
or
dec
(bad)
mov
push
or
jno
and
lods
iret
addr16
sahf
movs
ins
aaa
dec
jmp
nop
pop
cmps
cmp
pop
inc
pop
cmp
test
sub
jle
pop
leave
sbb
mov
push
enter
adc
add
pusha
cmps
add
in
and
add
cmp
outs
push
data16
cmp
and
(bad)
call
pop
std
xor
pop
xlat
mov
call
mov
cmp
je
lock
jne
test
fs
ret
cmp
test
gs
and
in
les
jp
repz
cs
jl
jnp
inc
cmps
cmps
jns
sub
leave
jbe
je
xor
pop
dec
push
bound
adc
mov
jb
or
push
push
mov
pop
(bad)
mov
adc
xor
push
inc
push
movs
cmp
repnz
inc
jbe
add
inc
nop
sub
mov
imul
push
sub
dec
inc
test
cmps
lock
inc
ret
dec
addr16
push
jmp
les
sahf
test
xchg
pop
fs
sbb
iret
mov
rsqrtps
mov
xor
or
or
inc
pop
fild
add
clc
mov
inc
jne
xor
cmp
mov
xchg
fisttp
xor
mov
mov
icebp
mov
xchg
(bad)
adc
imul
shl
sub
call
xor
jmp
std
cli
(bad)
scas
inc
push
into
sbb
push
movs
fild
pop
mov
sbb
xor
dec
add
cmp
inc
or
(bad)
dec
imul
push
mov
les
in
aad
and
cdq
mov
pop
aam
push
lods
les
add
jmp
xor
lds
fcomp
xor
push
lea
dec
add
icebp
enter
adc
adc
clc
rcr
jne
cmp
cmps
popf
xchg
jp
dec
rcr
and
push
or
push
xchg
xor
int3
cmps
push
sbb
sbb
(bad)
cmp
mov
mov
js
inc
mov
pop
lods
xchg
movs
shl
pop
aad
popa
pop
dec
xchg
push
inc
sub
or
and
stc
(bad)
nop
xchg
ret
(bad)
cmp
pushf
pop
sub
bound
int3
imul
or
pop
adc
xchg
push
push
movs
xor
sbb
clc
cld
push
mov
pop
adc
mov
push
in
xchg
inc
jo
sub
sbb
adc
push
inc
pop
mov
pop
repnz
inc
int
sub
cmp
das
jmp
xchg
hlt
stos
add
sub
es
or
xor
aaa
add
jp
pop
lahf
sti
or
into
sub
jb
and
popa
(bad)
xor
push
mov
aaa
jmp
daa
inc
hlt
pop
cdq
inc
dec
mov
pop
repz
bound
retf
into
int3
mov
mov
in
xor
(bad)
loop
stos
pop
loope
and
leave
mov
sub
cmc
xor
rcl
hlt
sbb
idiv
(bad)
add
cmp
push
(bad)
call
js
ins
lahf
outs
dec
jg
or
in
out
dec
les
xchg
fdiv
xchg
stos
inc
movs
push
push
(bad)
call
or
fimul
mov
nop
fcmovbe
and
or
pop
daa
mov
adc
out
out
sub
into
icebp
jmp
hlt
adc
aad
fwait
dec
and
sahf
and
retf
pop
in
outs
pop
dec
loop
pop
repnz
movs
jae
int3
sar
stos
pop
mov
iret
imul
popw
pop
popa
call
pop
call
jge
mul
jae
cmp
rcr
or
cmps
xchg
ins
gs
and
fs
inc
stos
test
movzx
lods
xchg
mov
and
pop
add
ret
sbb
pop
mov
xor
xchg
and
or
mov
into
sub
sar
push
xchg
aam
push
dec
and
and
and
adc
mov
ror
lahf
ins
mov
sbb
push
push
dec
cmps
sti
outs
das
mov
push
mov
pop
add
or
test
in
out
and
icebp
inc
dec
push
mov
mov
test
add
movs
mov
stc
inc
nop
add
repz
sbb
test
ror
cmp
or
je
mov
sub
(bad)
bound
scas
and
sbb
movs
or
imul
and
mov
mov
mov
sub
stc
mov
mov
loope
or
shl
cmp
sahf
repnz
ss
push
xor
mov
mov
add
mov
or
sub
mov
mov
jo
cmp
arpl
pushf
cmp
inc
popf
stc
cdq
add
or
aas
imul
aad
ret
ss
push
xchg
loopne
outs
cli
aaa
sub
iret
push
repz
xchg
out
fsub
aad
mov
mov
push
sub
push
cwde
or
mov
jmp
mov
dec
pop
jle
(bad)
cmp
pop
jl
sbb
adc
clc
push
jmp
mov
mov
mov
mov
mov
cwde
and
sahf
push
ins
jp
fld
aam
jecxz
mov
or
jmp
pop
jp
mov
fs
inc
xchg
xchg
pop
dec
in
call
sbb
jle
mov
mov
or
loop
add
dec
lea
pusha
retf
ja
aad
pushf
mov
nop
pop
push
cmps
dec
xchg
mov
cmps
xor
test
call
jp
iret
cld
xor
pusha
test
push
inc
pand
pop
aad
repnz
stos
and
mov
dec
rcr
fiadd
ficom
mov
push
ret
repz
cmp
inc
js
xor
push
mov
sub
ret
arpl
out
(bad)
cmp
cli
aad
push
stos
loope
cmp
adc
jns
dec
cmp
jmp
push
loop
(bad)
mov
push
les
call
add
daa
or
mov
jae
dec
gs
or
sub
cs
jnp
repnz
cmc
outs
cmps
iret
in
dec
adc
jo
hlt
bound
jle
adc
int3
and
int
sbb
sbb
mov
clc
fstp
inc
jns
lea
add
push
int3
and
sbb
mov
es
imul
repnz
js
mov
add
test
mov
cmc
sbb
movs
push
pop
push
daa
retf
mov
push
sub
outs
loope
pop
int3
adc
adc
iret
push
jle
rcr
jns
outs
pop
aas
inc
sub
jge
inc
test
sbb
sbb
mov
pushf
jae
pop
dec
inc
or
sbb
arpl
mov
hlt
sbb
es
push
adc
nop
jl
pop
xchg
pop
(bad)
sbb
or
adc
fmul
mov
mov
jne
imul
mov
sbb
mov
in
retf
loope
xchg
call
lods
sbb
in
sbb
xchg
cmp
adc
addr16
or
pop
add
out
push
sub
ss
shr
adc
icebp
popa
and
and
outs
test
cmp
call
xor
fadd
int3
mov
(bad)
stos
(bad)
cmp
pop
fisubr
xchg
cld
call
pop
push
push
and
xor
jg
(bad)
and
ins
adc
daa
data16
mov
mov
push
xor
adc
ror
push
in
fst
stos
fdivp
scas
cli
sbb
je
mov
jb
out
jmp
and
pop
xor
vmovaps
stos
xor
jns
jmp
test
outs
stos
xchg
xlat
scas
aam
add
mov
or
jo
pop
mov
add
jae
fs
push
sub
test
in
or
sub
cmp
retf
fistp
cmp
test
fs
dec
inc
or
or
xor
fisubr
int3
add
xor
arpl
popf
aaa
or
cdq
push
cs
pop
imul
xor
and
retf
fsub
test
or
mov
jno
rcl
lds
(bad)
cli
mov
jp
push
ss
in
ins
aam
fisttp
sub
or
xchg
pop
daa
pop
hlt
push
fimul
inc
push
and
ror
xchg
div
xor
sub
repnz
adc
pop
int3
imul
add
out
lods
sbb
pushf
and
sbb
fs
mov
aas
cmp
fiadd
imul
ret
add
pop
cld
xor
mov
ret
jno
sbb
sti
cmps
jle
or
out
int3
ins
and
xor
arpl
sub
mov
add
inc
lahf
and
ins
mov
fcom
and
jnp
pop
test
hlt
mov
imul
mov
pop
sub
add
add
cs
cwde
inc
pop
outs
pop
push
and
jae
inc
scas
sub
ds
in
push
dec
xchg
inc
scas
sbb
test
xchg
idiv
mov
lea
jnp
ret
cld
add
mov
adc
jmp
leave
mov
cbw
shl
sub
cmp
sub
imul
sahf
test
ret
nop
dec
mov
cld
mov
pop
mov
pop
pop
ins
sub
addr16
mov
push
push
xchg
mov
or
lds
lods
mov
push
clc
push
mov
push
inc
ret
popa
xchg
dec
stos
sub
cli
je
cld
les
jns
dec
lods
mov
mov
pop
repnz
jbe
and
push
push
test
cmp
retf
lds
mov
pusha
mov
in
mov
add
dec
aad
(bad)
mov
icebp
xchg
call
jno
test
pushf
(bad)
repz
scas
xor
into
loopne
push
int
jmp
adc
pop
lea
div
mov
out
retf
imul
es
iret
aad
jne
call
int
mov
int
pcmpeqb
cmps
and
adc
fldcw
fadd
daa
push
fwait
cmp
shr
jle
cmp
rcl
xchg
mov
xor
out
xor
fcom
adc
ror
push
sub
xchg
adc
loope
push
cwde
dec
lahf
add
enter
sub
lock
mov
ins
jle
dec
xchg
das
in
or
scas
push
push
ins
jo
mov
into
dec
ins
cmp
rcr
mov
pop
pusha
call
and
js
jecxz
mov
sbb
jge
movs
mov
arpl
xor
jg
push
inc
lods
add
sub
mov
mov
nop
clc
jbe
outs
outs
adc
inc
stos
jmp
push
rcl
push
fwait
test
push
dec
out
adc
adc
xchg
iret
jmp
shl
dec
adc
dec
jns
lds
push
ret
test
jp
in
dec
imul
cmc
dec
pop
inc
out
pop
(bad)
test
in
mov
les
cmc
sbb
or
icebp
inc
outs
cmp
fstp
lea
iret
mov
jb
out
aas
xor
daa
mov
sub
addr16
jns
scas
mov
ret
add
push
out
jnp
shl
sbb
mov
jmp
mov
push
xchg
std
xchg
lds
fstp
or
out
pop
fidivr
push
push
mov
pop
popa
jmp
sub
pushf
mov
int3
and
xchg
sub
std
scas
cmp
js
mov
sbb
add
nop
sbb
and
fucom
sbb
fcmovne
or
mov
fldcw
push
lods
and
jmp
xchg
jmp
mov
fwait
jbe
movs
je
fistp
imul
imul
pop
push
cmps
dec
mov
jae
add
test
je
test
inc
push
dec
cmc
cs
movs
mov
mov
sub
add
aad
push
jbe
pop
shr
adc
retf
out
sub
xor
stos
ins
fadd
aas
movs
or
ss
push
mov
ins
jmp
shl
cmp
mov
(bad)
fadd
stc
daa
or
gs
mov
xchg
cwde
out
stos
add
adc
mov
push
shr
push
mov
sbb
neg
cmps
xchg
or
iret
repnz
add
into
mov
retf
(bad)
jmp
fisubr
fcomp
pushf
pop
jne
sub
cdq
loopne
ret
adc
or
jg
pop
out
cdq
retf
push
inc
retf
dec
sti
in
or
(bad)
sbb
add
test
arpl
adc
leave
push
cmp
inc
lock
push
stc
ss
fld
xor
(bad)
mov
call
lea
rcr
dec
movs
adc
pop
mov
mov
loop
mov
fld1
push
fbld
sti
in
stc
fistp
imul
mov
xchg
or
lahf
sbb
call
cli
lods
(bad)
clc
mov
test
mov
popf
das
inc
mul
add
xchg
arpl
out
inc
mov
into
and
jp
push
sbb
mov
dec
and
dec
xchg
mov
adc
fs
adc
add
sub
inc
cld
mov
mov
lahf
sbb
or
inc
stos
pusha
dec
mov
arpl
fsubr
in
mov
pop
jp
retf
and
cli
dec
ds
aad
jns
sti
imul
push
mov
int3
(bad)
icebp
lock
sub
ins
sbb
cwde
std
adc
cmp
(bad)
dec
pand
std
in
xor
sbb
hlt
cld
fld
push
cmc
and
add
adc
xor
in
adc
sbb
pop
jbe
int3
jae
je
cmc
push
cmp
mov
push
jmp
hlt
sub
sub
call
push
mov
mov
addr16
fisub
cmp
inc
and
add
cmp
dec
movq
inc
and
sbb
loope
(bad)
jp
mov
in
in
dec
jmp
pusha
pop
adc
loope
add
leave
pushf
(bad)
xchg
mov
retf
dec
xchg
dec
je
cmp
mov
adc
adc
cdq
loopne
popf
jae
aam
adc
jmp
jno
in
mov
(bad)
xchg
xchg
pop
fadd
cmc
div
mov
movs
sbb
lahf
jae
cmps
aam
jb
outs
mov
pop
call
test
or
scas
mov
idiv
push
or
movs
loope
jp
lods
les
fs
gs
test
pop
dec
out
sub
lahf
jb
shl
xchg
and
xchg
daa
xchg
mov
sub
jmp
adc
dec
sbb
adc
cmps
mov
ins
test
inc
test
mov
push
add
retf
adc
add
jno
sub
sbb
out
leave
jmp
test
test
dec
fld
push
and
stos
cmp
adc
test
fwait
bound
sub
shl
sbb
addr16
push
out
inc
jg
xlat
and
lods
xchg
jmp
xlat
dec
pop
dec
pop
aaa
lods
adc
clc
sbb
jecxz
and
sbb
or
movs
and
mov
cmp
(bad)
xchg
into
and
inc
cli
or
outs
dec
sub
in
pop
sbb
push
out
mov
add
xchg
icebp
push
stos
call
push
cld
les
sar
adc
mov
outs
test
and
ror
xchg
call
jns
adc
jle
daa
out
push
jge
push
push
dec
or
movs
leave
adc
stc
sub
push
sub
push
pusha
mov
sbb
call
and
dec
retf
mov
add
xlat
dec
les
mov
js
sar
hlt
pop
mov
push
dec
fiadd
mov
xor
cmp
rol
(bad)
mov
pop
jbe
jl
jno
inc
bound
mov
mov
shr
add
mov
add
pop
test
cmp
shr
repz
sahf
(bad)
jg
stos
mov
jbe
cmp
lea
jp
mov
mov
fwait
or
outs
adc
jnp
cmp
cmp
mov
leave
retf
test
inc
fnsave
xor
jge
fsub
scas
pop
add
and
push
(bad)
xchg
xchg
mov
mov
jae
gs
imul
inc
adc
inc
adc
call
pop
(bad)
push
or
test
out
pop
mov
adc
bound
mov
fwait
in
push
sub
les
jnp
jge
(bad)
and
inc
outs
shl
lds
ins
add
xchg
jle
add
push
push
sbb
mov
push
xchg
cs
jno
in
push
push
cmc
call
jne
jl
sub
cli
xchg
shl
jnp
dec
test
neg
add
sbb
jno
inc
or
mov
dec
or
sbb
xor
pop
dec
outs
out
push
or
fsubr
jge
pushf
jo
inc
jp
pop
xchg
or
sbb
ja
pop
les
les
inc
sbb
cli
jge
xor
jnp
fld
test
cmp
mov
nop
aas
xchg
retf
push
jge
imul
cmp
mov
enter
and
das
jmp
pop
iret
inc
add
in
retf
daa
or
dec
cmc
arpl
test
add
(bad)
daa
fsub
add
in
int
mov
aam
cmp
mov
pop
(bad)
js
lods
retf
call
loopne
aad
jl
in
cld
push
mov
add
cld
test
adc
cwde
(bad)
(bad)
jge
and
and
inc
dec
mov
dec
xor
mov
xlat
(bad)
ror
push
shr
movs
cmc
test
mov
dec
arpl
cli
out
mov
pop
(bad)
(bad)
adc
cmp
or
push
loop
push
hlt
sub
sub
cli
repnz
add
sub
test
out
push
xor
clc
retf
lahf
sbb
pusha
xchg
push
add
in
and
sbb
xor
mov
dec
xor
push
rol
test
call
sub
jae
xor
xlat
dec
(bad)
adc
in
int
iret
xchg
dec
fwait
test
inc
mov
lahf
mov
sbb
cli
sub
stos
adc
push
push
sub
ret
sub
dec
push
lds
xchg
inc
xchg
sub
in
rol
xor
idiv
push
inc
xchg
xchg
push
mov
add
mov
cli
and
mov
pop
cmp
jl
in
and
push
jb
nop
mov
movs
mov
xchg
gs
adc
cld
xor
icebp
and
popa
retf
mov
hlt
mov
inc
lds
sbb
push
mov
repnz
fiadd
movs
dec
lds
add
fst
inc
fisttp
pusha
xchg
scas
jecxz
push
xchg
fwait
popf
push
jg
into
and
dec
mov
pop
fwait
inc
mov
imul
rcl
dec
add
stos
cmp
push
sti
push
jg
lds
movs
fadd
fcmovne
add
enter
shl
pop
fiadd
mov
jne
add
lods
imul
jb
dec
neg
cmps
aas
nop
pop
nop
dec
inc
stos
add
fstp
mul
retf
add
cmp
dec
mov
inc
pop
cmp
adc
(bad)
or
mov
test
mov
push
mov
ja
push
mov
jp
xor
loope
add
sub
mov
out
fs
jnp
fidiv
inc
sbb
fistp
xchg
hlt
add
xor
push
mov
mov
fwait
xchg
sub
xlat
out
jne
cli
test
inc
fcmove
mov
leave
out
jecxz
xor
mov
les
and
sbb
shr
stos
dec
or
clc
sbb
adc
inc
rcr
pop
inc
jnp
dec
das
inc
add
jns
push
cmps
not
xor
pop
jle
mov
mov
mov
push
sbb
loope
in
pop
dec
xchg
cwde
push
mov
jne
sbb
push
(bad)
stc
cmp
lods
into
pop
mov
cmp
cmp
gs
in
call
es
outs
mov
jnp
push
es
addr16
out
mov
(bad)
dec
stos
nop
les
retf
or
out
push
out
pusha
leave
pop
dec
jl
xor
pop
mov
cmp
push
adc
adc
pop
adc
imul
mov
ins
push
pop
std
mov
and
cmp
and
or
or
cmp
call
pop
in
push
push
arpl
mov
jmp
mov
aam
fchs
cmp
setl
gs
push
mov
adc
je
repnz
fucomip
iret
call
(bad)
mov
loop
jmp
ins
daa
jb
mov
ins
mov
out
push
mov
fdivr
push
or
mov
das
js
mov
bound
repnz
inc
mov
dec
(bad)
in
pop
mov
nop
pop
cmp
ret
rcl
jp
xchg
(bad)
pop
in
xchg
xor
dec
and
ja
inc
js
sbb
movs
jns
fld
push
sbb
imul
and
add
mov
scas
push
cmps
out
or
ret
data16
or
(bad)
mov
jp
jns
cmp
mov
test
mov
shl
mov
(bad)
xchg
fcomip
mov
xchg
mov
push
cwde
cmp
je
jg
dec
test
enter
xchg
sbb
push
fisubr
add
cwde
sbb
lahf
dec
test
jecxz
inc
jno
mov
test
xchg
inc
mov
aad
dec
inc
lods
addr16
sub
adc
ficomp
pop
jns
xchg
gs
pop
mov
sti
push
cli
dec
cld
clc
(bad)
fsubr
inc
aam
dec
adc
popf
test
mov
xor
pop
xchg
cli
hlt
jp
(bad)
jae
std
xchg
inc
inc
cmp
dec
push
shl
lahf
test
addr16
pop
and
pop
rcr
test
ins
out
addr16
dec
xchg
inc
xor
pusha
and
jmp
push
xchg
push
pusha
adc
mov
add
aam
or
fcom
push
addr16
clc
test
es
shr
inc
jne
xchg
aas
cmc
inc
in
cmc
dec
mov
xchg
pop
jne
bound
in
xlat
jmp
or
mov
jno
lods
mov
mov
sbb
leave
mov
jne
lea
dec
or
add
cdq
add
cmp
les
out
push
imul
push
inc
gs
adc
mov
jmp
pop
adc
in
jg
or
sti
stos
iret
test
sbb
jp
mov
mov
fidiv
add
lock
fisttp
dec
movs
(bad)
in
xchg
nop
push
push
ins
loope
inc
popa
push
or
pop
and
jle
ret
mov
jmp
inc
retf
push
or
push
and
in
pop
ins
inc
xor
loope
mov
inc
cli
les
xchg
xlat
xchg
xor
ds
lds
adc
mov
in
out
fmul
sahf
xchg
xor
inc
sti
test
shl
xor
jae
in
and
cmp
push
xchg
push
mov
retf
inc
daa
xchg
cmp
jno
jnp
jp
fs
pop
dec
test
push
mov
imul
popf
dec
xchg
pop
inc
hlt
jl
shr
call
cdq
mul
scas
mov
arpl
and
movs
mov
iret
ret
xchg
and
into
fmul
imul
and
stos
idiv
call
mov
pop
mov
push
sub
cmp
mov
mov
mov
in
adc
bound
cmp
and
movs
dec
popa
sbb
ja
movs
fisubr
pop
dec
nop
push
jg
sub
ficomp
fldcw
and
jmp
add
jl
(bad)
pop
jge
push
jno
movs
lods
bound
in
and
pop
inc
and
cmp
pop
mov
mov
pop
call
ret
int
leave
ds
sbb
mov
les
aam
mov
jecxz
mov
dec
xlat
jl
mov
mov
mov
fs
test
inc
arpl
retf
jns
jae
xchg
jae
dec
scas
inc
push
(bad)
inc
mov
mov
int
fld
cmp
mov
les
mov
aaa
dec
xchg
retf
xor
mov
je
fist
adc
push
in
cld
or
ja
inc
test
jl
das
mov
jp
sbb
or
xchg
inc
xchg
hlt
mov
add
cs
jnp
mov
mul
je
cmp
cmc
and
adc
test
aas
es
pop
je
xchg
nop
(bad)
jmp
xor
adc
sbb
sub
cmp
push
lods
dec
test
dec
cmp
ja
dec
ficom
imul
inc
pop
adc
pop
dec
jae
push
xchg
rol
adc
(bad)
adc
push
sbb
push
div
fcom
cmp
push
sbb
test
mov
mov
movs
out
mov
mov
xor
fucom
xchg
inc
pop
ds
mov
aas
ins
xchg
jb
jmp
stos
enter
dec
adc
jmp
sti
inc
call
out
dec
inc
add
lds
xor
dec
stos
push
shl
call
cmps
outs
aam
fwait
popf
in
cld
mov
scas
sub
scas
cmp
jnp
loop
fsub
lahf
ins
repz
rcr
lahf
pop
sub
fs
fsub
push
adc
(bad)
pop
int3
sbb
call
sti
call
pushf
inc
repnz
mov
clc
sti
sbb
pushf
fwait
mov
imul
jg
aas
push
(bad)
shl
test
pop
ret
jmp
mov
movs
rcl
sub
mov
jl
sbb
hlt
pop
mov
imul
adc
jmp
push
add
push
push
mov
mov
mov
xchg
retf
mov
out
mov
mov
nop
xlat
push
lock
inc
out
ss
neg
lds
xchg
pop
idiv
pop
ins
mov
lea
sbb
push
or
outs
inc
(bad)
cmp
imul
in
mov
jae
push
xchg
js
retf
adc
cmps
ss
and
pop
dec
mov
add
sbb
and
stos
cmps
pop
int3
shl
dec
das
iret
pop
or
dec
pop
jae
inc
jns
call
sbb
xor
dec
mov
call
test
jne
rol
pop
cmps
or
ins
push
ret
pusha
adc
fnsave
retf
out
mov
popa
dec
fs
dec
loope
dec
sahf
gs
push
retf
jg
sbb
icebp
shl
imul
test
mul
test
cld
or
push
(bad)
ss
fmul
cld
mov
aam
sub
jbe
xor
mov
xchg
pop
je
mov
into
not
mov
aas
push
mov
dec
(bad)
mov
push
ficom
or
cmp
es
imul
pop
jo
in
add
out
in
mov
and
push
out
pop
call
les
pop
inc
xor
retf
daa
mov
mov
pop
pushf
aaa
cdq
cs
es
movs
sub
test
jo
adc
add
stos
pop
cmp
mov
mov
movhlps
sbb
and
sbb
inc
les
inc
xor
je
lahf
fcomp
pushf
iret
mov
retf
sbb
adc
push
or
mov
sbb
sbb
mov
cmp
adc
inc
leave
jle
xchg
icebp
mov
fsubr
jmp
ficomp
stos
retf
push
jp
push
stos
rcr
cmps
pop
(bad)
add
xchg
test
sub
ja
hlt
ror
inc
lods
and
icebp
ins
outs
je
xchg
cwde
repnz
je
cmp
stc
cmp
or
fs
and
(bad)
mov
popf
sahf
fnstenv
add
adc
int3
mov
adc
movs
cmp
jp
test
mov
xor
push
idiv
sbb
or
mov
mov
push
imul
fst
fiadd
inc
mov
dec
and
mov
inc
mov
xchg
adc
outs
popa
(bad)
ror
retf
(bad)
clc
add
pop
jno
cmp
mov
clc
add
push
mov
dec
stos
xor
inc
mov
push
outs
xchg
push
lods
bound
mov
xor
add
(bad)
aad
fst
test
hlt
div
cmc
push
push
cmps
jl
lods
bound
int3
push
sub
sti
test
in
xor
dec
sub
add
sbb
mov
mov
inc
(bad)
stos
in
cmps
sbb
and
retf
jg
fwait
rol
push
push
out
ins
jne
test
call
push
push
push
add
clc
or
add
jns
sub
jmp
(bad)
inc
out
movs
test
mov
dec
inc
push
call
push
jne
retf
jl
loopne
es
push
push
add
add
fild
jp
cwde
lods
ss
mov
sub
jno
sti
gs
mov
(bad)
jge
push
mov
sub
in
and
xchg
stos
xchg
stos
icebp
cmp
cmp
cld
cmps
pusha
xchg
adc
imul
add
(bad)
mov
nop
sbb
mov
in
(bad)
fild
adc
inc
ret
(bad)
pop
pop
packssdw
mov
sub
inc
or
dec
cmp
aaa
std
int3
hlt
out
adc
jle
iret
ret
(bad)
mov
pop
(bad)
mov
xchg
test
arpl
stc
xor
mov
pinsrw
loop
cmc
adc
pop
dec
pop
inc
ret
mov
xchg
push
sub
fwait
retf
pop
push
xchg
(bad)
jle
stos
test
inc
mov
push
enter
push
push
pop
jecxz
inc
xchg
movs
adc
sub
out
mov
mov
fcmovbe
f2xm1
xchg
mov
adc
(bad)
jns
or
push
fdivr
mov
(bad)
retf
int
dec
cli
adc
dec
jbe
in
sbb
inc
fsub
shl
mov
fs
xchg
les
data16
or
repz
jmp
mov
mov
xchg
das
mov
jmp
and
adc
cmp
cmc
loop
lods
add
and
push
inc
adc
repz
and
push
lahf
or
jmp
push
loopne
xchg
imul
es
mov
mov
and
popf
pushf
icebp
sub
lds
adc
pop
sub
jmp
sbb
dec
or
push
cmp
pop
pop
or
sbb
mov
mov
pop
pop
jae
int
dec
adc
adc
scas
or
lock
xchg
mov
ficomp
inc
retf
clc
lahf
cmc
push
cmp
and
aas
adc
xchg
mov
adc
xchg
pop
dec
push
lods
push
psllw
(bad)
push
mov
outs
cli
cli
xchg
or
jne
push
and
cmp
or
sbb
nop
test
sahf
sub
pop
push
mov
inc
bound
stos
mov
xchg
(bad)
(bad)
add
push
cdq
int3
push
adc
xchg
cli
mov
dec
cmc
push
pop
adc
cmp
mov
mov
sub
scas
push
imul
and
jmp
inc
jo
sbb
pop
sub
scas
xchg
test
stos
inc
cmps
pop
push
cmps
pop
cmps
mov
jb
addr16
inc
cli
jne
loopne
jnp
movs
push
js
lahf
push
mov
stos
ins
xor
test
out
xchg
or
pop
das
mov
sub
jle
xor
jp
aas
shr
mov
and
cs
sahf
sub
rcr
sub
stos
out
jmp
sub
jp
pusha
inc
out
dec
aam
mov
retf
pop
bound
push
add
mov
jmp
mov
mov
loope
sub
add
dec
and
sbb
call
add
les
loope
pop
test
popa
call
mov
aas
add
pushf
int3
(bad)
cmps
and
(bad)
adc
and
outs
xchg
cmp
push
scas
push
repz
into
xchg
or
sti
jbe
xor
mov
cmp
idiv
(bad)
mov
dec
mov
fcom
in
add
and
mov
hlt
cmp
xor
inc
mov
pop
jnp
or
lahf
cmove
dec
fwait
hlt
xchg
jl
into
mov
daa
pop
pop
gs
cmp
xchg
pop
sahf
and
sub
pop
es
sahf
xor
je
gs
cmc
mov
call
cmp
xor
repnz
fist
inc
mov
sbb
scas
or
ins
cmp
int
cmp
push
test
scas
push
mov
or
jle
cli
cli
push
lods
push
or
cmps
movs
outs
xchg
fcom
ret
dec
dec
cmp
fcom
test
loopne
inc
jbe
mov
xchg
repz
mov
and
mov
jecxz
xchg
ret
push
gs
enter
stc
sti
push
fidiv
jne
outs
int3
sahf
mov
sbb
ins
cmps
fidiv
test
scas
bound
addr16
test
inc
push
mov
sbb
and
(bad)
fstp
mov
mov
lods
mov
xor
pop
cmp
sbb
dec
inc
pop
mov
or
cmp
pop
(bad)
call
gs
push
cwde
fs
int
stc
sub
mov
call
aas
stos
or
je
jmp
sub
(bad)
push
jmp
(bad)
or
add
xor
xor
scas
scas
in
xlat
call
xor
sbb
pop
xchg
stc
iret
imul
pop
push
inc
jmp
in
ficom
in
stos
xchg
cmp
imul
inc
test
jg
xchg
inc
(bad)
ins
sbb
shl
xchg
or
mov
iretw
xchg
dec
in
or
xor
xor
(bad)
and
imul
movs
xor
ins
test
loope
add
test
dec
jmp
hlt
or
dec
lahf
xchg
fist
cli
ins
adc
repnz
or
pop
fiadd
mov
lea
shl
mov
mov
lea
xor
and
sbb
rol
sub
sbb
ret
push
xor
sub
shl
jbe
lods
loope
or
call
scas
jo
sti
dec
jnp
pop
mov
inc
dec
sbb
sub
data16
or
mov
out
xchg
add
pop
pushf
outs
adc
mov
xchg
outs
and
pop
jge
xchg
push
fadd
xor
and
jge
mov
and
pop
cmp
mov
sbb
xlat
or
addr16
sbb
(bad)
aaa
push
cmp
test
mov
sbb
clc
and
imul
sbb
movs
xor
jbe
test
jb
sub
aas
mov
in
(bad)
or
(bad)
retf
jmp
pushf
loopne
test
and
les
dec
test
call
cs
inc
fldcw
mov
xchg
pop
mov
jmp
mov
in
loopne
add
into
sbb
xchg
cmc
cmp
idiv
hlt
mov
sbb
stos
pop
and
or
pop
inc
cld
inc
std
jne
sub
hlt
(bad)
push
popa
push
mov
rcl
add
adc
fmul
test
lods
pop
les
(bad)
imul
(bad)
xor
call
jg
mov
mov
and
sbb
ss
adc
or
(bad)
mov
xchg
(bad)
repnz
fisub
push
inc
push
adc
or
prefetch
or
retf
pop
jecxz
add
jb
dec
mov
lahf
dec
pop
mov
ror
xor
ss
xchg
(bad)
shr
not
rcr
outs
retf
mov
sub
or
dec
or
jg
repnz
outs
cmp
xlat
ret
scas
ins
mov
cwde
pop
stos
retf
(bad)
aam
and
repz
add
xchg
add
jp
sbb
pop
inc
jne
jbe
ror
test
test
push
popa
inc
nop
push
mov
cmp
jmp
adc
inc
ins
loope
sub
push
rol
fcom
xor
mov
pop
in
cmp
lea
in
mov
add
in
or
out
inc
jns
sub
ss
cli
shl
cmps
sti
pmaxsw
imul
pop
scas
push
push
mov
lahf
mov
pop
(bad)
and
test
movs
cmc
movs
pop
mov
test
pop
xchg
dec
jo
sub
enter
push
enter
bound
daa
push
mov
xor
cld
mov
clc
sub
xor
sub
cmp
xor
or
in
movs
imul
loop
or
pop
jae
inc
aas
xchg
out
push
xor
mov
in
adc
pop
sbb
in
fcomp
aaa
dec
jge
inc
sahf
sbb
mov
loop
lahf
xchg
(bad)
cli
inc
mov
mov
popa
cmp
xchg
daa
mov
cmc
cmp
(bad)
jns
out
nop
mov
jg
dec
cwde
xor
mov
mov
pop
bound
push
(bad)
jno
jecxz
adc
mov
leave
test
or
mov
adc
mov
movs
push
pushf
mov
jp
movs
push
sub
inc
cld
imul
inc
push
adc
in
cdq
lea
mov
int3
loopne
jmp
fidivr
jb
xlat
cmp
mov
scas
dec
imul
and
cmp
or
push
push
cmp
mov
jne
stos
xchg
jle
xor
pop
dec
inc
and
fiadd
in
xchg
pop
add
mov
jne
es
push
cmc
ficomp
ror
jo
test
popf
ror
cbw
movs
adc
pop
pop
inc
fsubr
leave
sbb
sbb
and
pusha
inc
xor
pop
and
xchg
and
ins
inc
outs
and
(bad)
jp
fdiv
sbb
cmp
sub
fild
sbb
dec
mov
push
test
lods
ret
push
add
fwait
push
inc
jb
movs
in
test
add
bound
jmp
jmp
and
jne
in
sahf
pushf
in
hlt
cld
sahf
stos
jmp
mov
mov
jle
movs
addr16
ins
call
mov
lock
add
scas
jg
imul
ins
push
dec
sti
inc
inc
push
stos
(bad)
mov
repnz
pop
xchg
mov
call
mov
xor
add
xchg
fmulp
add
and
js
inc
call
(bad)
repnz
sbb
imul
push
lea
addr16
iret
loope
call
add
inc
fld
jecxz
lahf
mov
fstp
jnp
dec
sbb
jp
pop
hlt
ds
jnp
push
push
cmc
xchg
inc
std
pop
ins
push
xor
inc
ins
in
xchg
jl
dec
xchg
sbb
loope
xor
mov
dec
fstp
outs
inc
jae
inc
adc
fs
out
fcomi
pop
pop
dec
outs
call
cmc
lods
jb
sub
adc
push
fldcw
movs
sbb
lds
xor
xchg
inc
mov
mov
xor
pop
cmp
imul
test
hlt
movs
fsubr
jg
jae
adc
ret
or
xchg
push
stc
adc
mov
aaa
mov
out
xlat
inc
je
sub
mov
aaa
mov
pushf
les
jne
inc
stos
je
fs
adc
sbb
mov
scas
(bad)
cmps
jmp
mov
push
in
cmps
and
jp
pop
cmc
popa
fs
pop
push
dec
inc
(bad)
test
cli
xchg
dec
dec
jp
pop
inc
cmp
xor
jmp
jmp
inc
leave
add
mov
repnz
clc
dec
cwde
pop
xchg
dec
inc
push
mov
xchg
stc
add
sub
pop
rcl
and
inc
lods
push
jb
xor
pop
mov
into
inc
push
dec
push
fild
mov
hlt
sahf
mov
xchg
les
pop
xor
leave
fwait
out
stos
rcr
mov
test
cmps
pop
fs
sub
mov
jbe
daa
mov
imul
cmp
pushf
outs
sahf
push
aaa
dec
mov
jae
ror
pop
hlt
rol
mov
xchg
outs
mov
mov
pop
iret
fidiv
scas
cmp
push
sub
cld
mov
or
sub
xchg
pop
mov
xchg
movs
xchg
xchg
mov
or
and
and
mov
inc
mov
stos
push
mov
pop
add
add
pop
dec
mov
or
stos
imul
(bad)
sub
(bad)
or
aaa
mov
inc
xchg
imul
and
xor
mov
cmps
cli
mov
cmp
dec
jne
mov
in
int3
add
repz
xchg
mov
mov
adc
dec
mov
mov
test
sub
or
cwde
mov
sub
popa
mov
cld
mov
fisubr
sbb
jbe
repnz
and
push
mov
arpl
adc
mov
xlat
aam
(bad)
push
jno
push
hlt
out
dec
or
push
dec
test
in
int3
fdiv
jb
fs
sub
fs
push
test
or
fimul
retf
movs
mov
rcl
test
mov
adc
push
rol
mov
cli
xor
fwait
pop
cwde
inc
fmul
mov
icebp
gs
inc
fsub
sub
inc
shl
pop
call
dec
ss
push
add
mov
push
mov
sbb
add
fisubr
sub
bnd
in
pop
mov
and
jae
ja
cmc
and
mov
(bad)
xlat
test
ss
jmp
fistp
sbb
fst
inc
pop
test
addr16
push
inc
call
inc
dec
mov
out
xchg
mov
cmp
out
ja
loope
les
add
aaa
xchg
shl
add
mov
xor
add
hlt
iret
das
stos
(bad)
(bad)
xchg
les
adc
lods
jne
push
add
fisttp
out
imul
xor
shld
jne
jmp
add
xlat
jg
push
test
cmp
mov
addr16
inc
and
imul
inc
lods
fimul
ret
lock
jbe
sub
or
inc
repnz
mov
jne
cmp
rcr
sub
ins
sbb
stc
pmaxub
and
push
cmp
imul
sar
mov
lahf
ins
or
lods
pusha
mov
ss
retf
add
jmp
imul
hlt
mov
jae
jnp
push
(bad)
jmp
test
jmp
les
pushf
mov
jmp
push
mov
sahf
pusha
sti
rcr
lahf
jae
jne
inc
push
jbe
adc
dec
sub
call
movs
dec
ins
mov
ins
jmp
call
adc
sub
cli
sar
es
inc
pop
jmp
das
add
jle
xchg
mov
and
xor
retf
mov
retf
sbb
dec
nop
inc
aaa
xchg
sub
push
inc
cmps
xor
inc
loop
push
call
fs
xchg
jb
sub
fs
in
or
cmp
mov
in
lods
loop
push
fimul
push
in
sub
push
push
mov
jl
rcl
mov
inc
call
sub
push
pop
xchg
cli
shr
les
add
fcomp
xor
pop
pop
pop
cli
push
xchg
iret
or
inc
pop
xor
loop
adc
push
into
cs
lods
cmp
jle
jne
pop
mov
push
mov
mov
lods
or
dec
dec
pop
mov
jl
ret
enter
stc
int3
dec
jmp
sbb
jne
xor
and
stc
sub
pop
out
cmc
dec
sti
mov
push
not
and
pusha
(bad)
jb
fwait
(bad)
out
inc
xchg
(bad)
ins
in
adc
sbb
in
xor
adc
das
push
xchg
push
sbb
xor
arpl
bound
xor
mov
aaa
xchg
adc
push
or
lds
and
stos
cs
cmps
call
dec
mov
jecxz
push
push
cmc
mov
inc
xor
leavew
mov
pushf
xchg
push
imul
and
clc
dec
or
or
sar
push
mov
cli
int3
fcmovbe
jp
adc
dec
in
int
nop
aad
and
out
(bad)
pop
fs
test
mov
and
pop
(bad)
mov
cmps
push
xrelease
xchg
adc
push
jp
popa
mov
mov
fsub
div
aam
mov
push
pop
add
call
sbb
lods
pop
mov
scas
sub
mov
cmp
xor
cmc
add
loop
fbld
cmp
jg
pmuludq
xchg
cmp
retf
mov
fmul
cmp
inc
fld
mov
lods
sbb
mov
add
dec
jo
inc
retf
mov
call
pop
pop
inc
mov
dec
seto
jecxz
cmp
arpl
xor
imul
mov
js
pop
or
adc
sar
mov
add
sahf
pusha
adc
push
add
cli
loop
neg
hlt
dec
push
xchg
push
ror
test
push
stc
pop
(bad)
mov
shl
xchg
pop
mov
mov
push
pop
sbb
cmp
or
or
sub
cmps
adc
fwait
mov
inc
scas
outs
xchg
adc
cmc
mov
cwde
rol
adc
push
sti
xor
stc
fnstsw
push
in
push
cwde
enter
jp
(bad)
xor
xor
mov
or
(bad)
into
jmp
not
inc
shl
jo
and
clc
cmp
push
cmp
out
mov
mov
loopne
jnp
(bad)
adc
and
das
or
jno
fcom
push
cmp
sbb
push
iret
jp
fadd
xor
mov
cli
push
or
dec
sub
mov
sub
and
adc
sub
in
movs
push
adc
mov
push
xor
jg
es
les
fimul
dec
xchg
cdq
test
add
aas
mov
and
or
sahf
hlt
cmp
sbb
inc
push
mov
dec
cmps
xor
sbb
in
fcomp
(bad)
jne
push
std
xchg
push
add
cmps
xchg
pop
test
aam
inc
lds
iret
mov
xchg
push
sub
ss
packsswb
fsubr
mov
ror
mov
or
enter
(bad)
jmp
outs
push
cmc
cmp
nop
js
(bad)
xchg
cdq
das
xlat
lock
cmp
jp
cwde
das
scas
xchg
dec
dec
(bad)
in
test
scas
clc
aad
add
fdiv
cmps
arpl
jl
sbb
sbb
ret
inc
sbb
sbb
nop/reserved
clc
push
in
xchg
dec
cld
jecxz
sbb
loopne
mov
in
leave
mov
and
xchg
pop
xor
in
adc
mov
out
cdq
jne
mov
imul
loop
test
or
mov
cmp
sub
loop
in
mov
cmps
outs
mov
test
repnz
ret
in
pop
shl
pop
sub
pop
adc
dec
jmp
xchg
shr
xor
rcr
cmp
mov
dec
dec
fist
loop
cmps
inc
push
add
mov
(bad)
aad
inc
xchg
test
mov
test
in
jne
pop
xchg
imul
xchg
xchg
je
stos
loop
cmp
fmul
out
retf
add
inc
cs
nop
bound
pop
fistp
into
cmp
enter
inc
(bad)
sbb
sbb
or
or
rol
sub
out
shr
xlat
or
sbb
add
retf
add
mov
or
jns
jnp
jb
sub
ret
jb
push
dec
add
or
in
ret
sbb
out
rol
pop
add
pop
xor
ja
popa
xchg
mov
sbb
data16
adc
or
mov
sbb
ret
push
xor
jo
xchg
stc
ss
adc
sbb
daa
mov
retf
mov
(bad)
or
and
aaa
adc
or
xor
hlt
mov
es
shl
cdq
inc
stos
sbb
xor
adc
jns
in
mov
adc
dec
sub
scas
shl
mov
sahf
and
in
mov
sub
mov
aas
and
sbb
pop
sub
cli
fwait
sbb
pop
inc
mov
dec
xchg
leave
aaa
mov
push
loop
push
ja
hlt
adc
data16
mov
scas
pop
outs
icebp
dec
outs
ins
sahf
add
inc
pushf
mov
fs
add
mov
xor
xor
mov
cwde
push
scas
mov
mov
dec
mov
adc
add
inc
loopne
add
or
dec
lfs
push
rcl
jmp
adc
xchg
nop
dec
mov
dec
mov
sub
jbe
push
loope
popf
outs
mov
rcl
nop
push
cmps
cwde
mov
push
mov
pop
outs
ficom
mov
test
movs
scas
mov
ja
or
xchg
mov
lods
or
xor
fist
out
add
sub
or
cld
clc
push
fwait
sub
sub
jne
mov
xchg
pop
ss
mov
mov
dec
cmp
fs
enter
hlt
clc
retf
add
push
or
lods
adc
xor
jo
in
in
xor
pop
add
pop
scas
daa
movs
xchg
jne
push
je
xchg
daa
out
cmps
cmp
jo
stc
cs
sti
pop
repnz
sbb
gs
push
xchg
sbb
daa
movs
in
and
dec
mov
in
jmp
push
lds
into
sub
push
(bad)
mov
inc
icebp
mov
imul
mov
push
mov
mov
sbb
pop
aas
xor
jp
mov
push
mov
xchg
ret
fld
adc
loope
cmp
pop
xchg
or
sbb
sub
nop
jae
call
mov
ss
and
test
je
mov
push
imul
(bad)
or
sbb
in
adc
dec
and
push
hlt
fs
inc
add
loop
lods
lods
hlt
mov
mov
jne
or
lock
sbb
pop
iret
(bad)
js
pop
call
sub
fcmovnbe
xchg
jno
add
in
cli
pop
pop
inc
or
inc
jecxz
mov
mov
push
in
inc
enter
inc
and
movs
xchg
xchg
sub
add
retf
ret
and
mov
add
pushf
aad
je
call
adc
jmp
jmp
mov
xchg
cmps
lods
nop
gs
loopne
or
xchg
xor
cs
adc
mov
push
in
cmps
mov
sub
mov
and
sub
mov
mov
add
test
or
mov
xchg
test
mov
adc
fdivrp
ret
push
es
and
xor
pop
dec
in
ja
bound
leave
mov
mov
xor
stc
pushf
dec
ror
mov
push
leave
jecxz
adc
jnp
jecxz
inc
and
(bad)
xor
and
jno
inc
xor
pop
xor
or
mov
(bad)
imul
out
fcomp
jnp
js
xor
dec
mov
jns
jno
or
adc
sbb
lods
jp
sbb
aad
stos
aad
movs
pop
push
movs
jae
xchg
cs
hlt
pop
in
mov
add
ins
mov
mov
mov
jmp
pop
fs
test
fist
or
les
xchg
xchg
test
mov
mov
rcr
hlt
popa
pop
out
xchg
cmp
sbb
xchg
adc
mov
out
call
movs
push
rcr
dec
mov
adc
data16
jno
jno
sbb
scas
or
clc
hlt
call
les
dec
add
rcl
dec
xchg
lods
int3
lods
sub
push
in
sub
stc
and
xchg
or
fst
jb
dec
sbb
inc
xchg
lds
add
hlt
jp
mov
xchg
pop
not
pusha
stos
lahf
add
dec
in
inc
punpckhbw
and
bound
jmp
or
mul
push
hlt
(bad)
jmp
daa
fucomi
pop
and
pop
mov
je
sub
or
xchg
dec
adc
iret
aaa
adc
fdiv
movs
inc
pop
inc
sub
mov
xchg
inc
ins
add
mov
add
pop
stos
and
xor
idiv
push
iret
lock
das
sub
add
xchg
and
mov
jg
ins
add
add
lods
cmps
fs
stos
shl
stc
sti
or
mov
pop
es
lods
inc
inc
pushf
add
cld
enter
aaa
(bad)
push
out
mov
sbb
mov
push
xchg
dec
sub
sbb
mov
add
loopne
mov
pop
shr
sbb
add
int
mov
call
and
xchg
jp
in
sti
jbe
rcr
and
or
loopne
cmp
in
(bad)
mov
aaa
stc
pop
push
outs
cld
xchg
jno
cmc
or
out
jnp
adc
add
or
rcl
mov
or
push
dec
jl
dec
pop
rcr
cld
cmp
inc
sti
cmp
pop
mov
movs
lds
jbe
jae
jns
xlat
adc
(bad)
push
push
scas
pop
and
iret
xchg
mov
fbld
mov
mov
cld
movs
les
pushf
fmul
test
call
sbb
cmps
imul
xor
sbb
fistp
inc
inc
sub
cmp
out
test
not
hlt
pop
xlat
ror
jb
bound
sub
push
sub
jl
push
jp
pop
cmc
push
xchg
les
jle
hlt
jge
or
and
cld
mov
cdq
aam
movs
cmp
rol
dec
in
pusha
stc
out
inc
or
and
cli
hlt
(bad)
mov
mov
jnp
dec
mov
pop
mov
ret
cld
push
shl
sub
hlt
lods
mov
loope
xchg
aam
pop
ins
movs
rcl
and
test
pushf
xlat
push
inc
aad
cs
push
jb
loopne
loopne
idiv
sbb
cmp
js
pop
ficom
cmps
jnp
stos
push
stc
jge
sbb
sub
(bad)
inc
popf
sub
push
mov
pop
mov
mov
and
sar
sub
fsubr
cmp
cld
aad
(bad)
add
aad
idiv
out
sti
stos
mov
je
mov
and
outs
mov
jno
xor
ins
movs
push
jmp
push
inc
sub
jp
lock
add
je
mov
mov
pop
inc
inc
mov
push
jbe
(bad)
in
xor
or
ja
cdq
sahf
scas
inc
test
add
es
out
outs
dec
mov
hlt
das
ins
push
arpl
shl
add
adc
push
clc
jecxz
or
inc
stc
leave
es
movs
scas
fstp
xchg
sbb
ret
sbb
pop
mov
stos
and
xor
enter
mov
enter
aas
into
iret
pusha
fist
mov
ret
mov
inc
ffreep
or
mov
scas
dec
stos
jno
xchg
dec
add
and
into
(bad)
xchg
jnp
and
movs
pop
or
nop
pop
je
xchg
jle
sbb
stc
sub
ds
and
xchg
and
inc
into
repnz
cs
mov
fsub
test
stc
out
sbb
jl
data16
loopne
mov
lea
dec
std
mov
lock
or
push
dec
neg
cmp
mov
fstp
or
pusha
outs
stos
je
data16
rcr
cmp
inc
jl
std
ds
dec
test
in
jecxz
ret
mov
mov
retf
push
rcl
hlt
jg
loop
prefetchnta
jmp
jns
jge
push
xor
add
mov
sar
sti
fild
push
or
call
out
cld
jmp
add
sar
aad
push
stc
mov
sub
mov
adc
arpl
jmp
push
push
or
xor
mov
ss
ins
xor
xchg
cs
in
repz
xchg
sbb
xor
out
test
mov
loopne
xor
jno
and
cmp
adc
inc
push
mov
fs
and
mov
add
stos
adc
jb
lock
or
fsub
js
and
push
sbb
fwait
mov
pop
mov
div
add
dec
jnp
(bad)
dec
mov
out
jmp
dec
aam
das
pop
in
retf
mov
mov
and
jae
mov
push
sub
repz
dec
mov
imul
jle
icebp
out
pop
fisubr
fldenv
aaa
dec
xchg
int3
mov
dec
or
inc
fs
adc
inc
sub
fxch
sbb
stc
sub
pop
push
mov
sahf
sbb
or
mov
adc
xor
push
and
xchg
nop
mov
or
repnz
inc
scas
add
cmp
push
call
inc
cmp
dec
jmp
ja
ds
shl
mov
das
jnp
daa
sub
push
jnp
fdivr
das
rcl
mov
ror
sbb
enter
mov
xor
adc
mov
adc
push
dec
loopne
icebp
mov
and
xor
pop
mov
call
mov
test
adc
xlat
fwait
push
mov
(bad)
es
xor
cmp
dec
xor
pop
test
cli
fs
fidiv
push
sahf
dec
and
adc
xor
or
push
dec
or
mov
xlat
fistp
mov
pushf
xchg
adc
leave
sub
and
dec
std
and
stos
and
std
and
fcmovb
push
popf
loop
shl
in
mov
(bad)
aad
pop
stc
gs
inc
rol
adc
repnz
cmp
(bad)
ror
fisubr
cs
mov
xchg
mov
aas
call
sub
jp
sbb
or
dec
ins
dec
cmps
sub
enter
xchg
imul
dec
std
loopne
cld
pop
jnp
xchg
cmps
sub
and
inc
mov
int3
retf
mov
inc
and
mov
push
hlt
xor
sbb
nop
jmp
cwde
cli
and
or
(bad)
cmp
pop
push
mov
jnp
cli
mov
jmp
movs
adc
adc
mov
sbb
fst
mov
movs
fs
sahf
ss
cmp
gs
(bad)
iret
les
cmp
(bad)
cmps
shl
sti
xor
push
push
mov
inc
retf
sbb
push
ret
hlt
push
imul
mov
fcmovnb
mov
push
xchg
clc
sbb
xchg
loopne
mov
imul
add
cdq
into
rol
popf
hlt
retf
jg
push
lds
cli
and
fwait
test
mov
pop
hlt
pusha
(bad)
inc
inc
add
leave
call
loop
xchg
jne
(bad)
cli
data16
push
aad
or
jle
sti
and
sbb
jmp
loope
daa
sub
int3
aad
jle
pop
out
mov
cmp
inc
sti
jns
dec
mov
rcl
dec
iret
mov
mov
pop
and
aam
bound
in
mov
add
inc
xchg
push
scas
cmp
cdq
repnz
inc
into
mov
pop
imul
pop
mov
and
ret
(bad)
repnz
inc
sub
stos
mov
dec
dec
jg
xor
or
rcl
adc
ret
dec
ds
popa
mov
jg
push
(bad)
das
repz
mov
loopne
test
sub
adc
cli
loopne
xchg
add
(bad)
das
dec
jb
cmp
or
rcr
and
cmp
sbb
aas
inc
pop
add
(bad)
mov
xchg
aam
out
hlt
outs
or
(bad)
out
nop
mov
jne
movs
outs
movs
mov
push
xchg
loop
je
inc
scas
pop
ret
cmp
int3
ret
cmp
aam
xor
push
pop
inc
push
sub
inc
repnz
or
add
push
sbb
push
cmps
push
mov
cwde
mov
stc
sahf
mov
and
movs
and
pushf
dec
mov
sub
lds
xchg
jge
push
shl
mov
(bad)
je
pushf
and
fnsave
xchg
xchg
pop
(bad)
dec
(bad)
xor
mov
adc
mov
ja
int3
jp
bnd
loopne
fistp
gs
pop
add
cmp
pop
push
mov
pop
inc
inc
inc
mov
lods
sbb
in
jnp
shl
sub
fs
mov
into
cmps
imul
es
mov
out
push
ss
cmp
or
movs
arpl
push
xchg
cmp
call
pop
pop
mov
sar
or
ret
add
movs
hlt
sub
mov
and
push
lock
fimul
mov
inc
push
and
jg
add
pop
stos
cmp
cmp
in
inc
jnp
cmp
cs
fs
cld
xor
dec
add
arpl
je
sbb
jmp
and
pop
mov
or
js
outs
es
xchg
mov
jno
mov
add
shr
xchg
aas
in
mov
mov
pop
xor
pop
loopne
stos
pop
jbe
mov
in
mov
ins
shl
les
cmp
sbb
mov
adc
mov
std
fwait
in
mov
xlat
popf
mov
jl
cmp
inc
fist
inc
fsubr
jmp
ss
or
jl
aas
enter
in
mov
adc
daa
cli
sub
adc
push
in
idiv
sbb
cmps
xor
add
push
dec
or
sbb
push
jle
retf
xchg
into
sbb
lods
and
add
sub
cmp
(bad)
int
stc
inc
fmul
inc
xchg
dec
xchg
jnp
sub
shl
ror
mov
push
leave
outs
and
push
out
lahf
or
jl
bound
cdq
nop
pop
das
add
push
mov
mov
test
mov
stos
and
mov
xor
es
fcomp
adc
(bad)
adc
int3
pop
push
in
arpl
aam
fwait
test
ins
fs
js
mov
imul
out
mov
cmp
jne
xchg
ins
mov
xchg
xor
adc
stos
in
push
or
add
inc
dec
sbb
add
add
les
jle
cmp
sub
aaa
jne
mov
jg
retf
dec
cmp
fdivr
(bad)
mov
fcomp
ret
mov
mov
sub
cs
jp
in
les
pop
(bad)
adc
jae
mov
psrld
call
lea
pusha
std
pop
add
sub
aam
aam
adc
add
xchg
push
mov
push
push
pop
adc
lahf
mov
inc
(bad)
jb
in
(bad)
sbb
push
(bad)
fiadd
dec
test
jmp
scas
mov
aaa
icebp
fcom
or
jge
and
cmps
push
or
dec
mov
je
daa
mov
test
cdq
jo
sahf
out
mov
pop
pop
out
jmp
outs
aas
sti
xor
push
xor
loop
mov
test
test
xchg
jge
pop
(bad)
pop
je
fs
call
sub
push
xor
and
call
lods
push
imul
dec
dec
pusha
adc
or
and
pop
test
fwait
inc
add
outs
sbb
xor
adc
sbb
aas
les
jne
push
mov
out
test
movs
in
cwde
ss
fimul
outs
test
idiv
movs
outs
mov
xchg
sti
scas
in
mov
pop
cli
sub
push
sbb
sti
and
and
retf
cmc
sbb
cli
push
gs
cli
das
in
xor
pop
sar
sub
mov
and
mov
popf
jmp
ficom
dec
mov
mov
xor
movs
xor
aaa
xchg
scas
inc
or
sbb
pop
mov
xor
cli
add
aam
push
jmp
(bad)
das
cmp
fld
out
out
cli
movs
out
push
pushf
cld
push
cmp
dec
out
mov
push
dec
mov
sbb
add
repnz
xchg
stc
cmp
inc
cmp
test
xchg
jo
aad
add
add
mov
inc
cmp
(bad)
scas
push
cmp
ret
jge
into
mov
or
mov
aam
mov
mov
pusha
or
bound
pop
stos
icebp
mov
movs
xchg
test
in
mov
inc
rcl
pop
mul
maskmovq
movs
out
jmp
inc
sub
or
call
out
mov
or
in
imul
mov
jle
push
es
add
sbb
add
mov
sbb
inc
lahf
sub
inc
jge
and
(bad)
xor
scas
ficomp
adc
les
ret
dec
retfw
push
xchg
sbb
jo
cli
hlt
inc
inc
ds
retf
ficomp
xchg
cli
aas
fdivr
sbb
sub
(bad)
lods
cli
popa
cmp
leave
sub
fstp
sub
cmps
dec
retf
inc
mov
inc
call
mov
and
xchg
mov
not
movs
pop
movs
add
mov
push
shl
jmp
stos
je
sysenter
dec
call
jg
cmps
iret
movs
jae
mov
dec
xor
mov
add
add
and
outs
bound
not
les
dec
iret
xchg
pop
xchg
fbld
fisub
push
push
inc
sub
sbb
pusha
mov
arpl
test
cli
test
cmp
sbb
xchg
xchg
fidivr
inc
test
or
xchg
dec
(bad)
je
in
sub
fstp
fldenv
imul
jp
or
int3
movs
imul
popf
xor
call
movs
sar
mov
mov
pop
and
pop
cmps
push
pusha
push
push
repz
aaa
fisubr
ins
add
sbb
xor
pop
test
jo
sbb
inc
aam
test
fs
inc
enter
mov
rol
add
outs
and
mov
inc
fmul
(bad)
xchg
add
push
lahf
adc
clc
sar
xchg
or
mov
mov
xor
push
fidivr
jmp
cmp
cmp
inc
repnz
push
adc
repz
out
stos
adc
(bad)
rcr
pop
sbb
xchg
or
ins
test
popf
(bad)
mov
fst
(bad)
int
push
or
sub
jns
adc
xor
pop
loopne
retf
call
aam
and
mov
jle
push
add
mov
sub
push
jo
push
repz
adc
hlt
add
pop
stos
cmp
push
sub
push
push
enter
sbb
stos
call
pop
div
pop
addr16
sbb
inc
add
mov
fadd
cwde
ins
cli
xor
jnp
xchg
inc
scas
fistp
jg
or
neg
mov
adc
not
xchg
and
mov
jecxz
lds
push
je
adc
int
scas
fdivr
fist
es
xor
push
jns
dec
das
inc
es
(bad)
push
call
adc
fistp
xor
sbb
xor
(bad)
fsubr
xor
rol
jb
add
cmc
call
les
push
test
ja
sub
inc
cmps
cmp
std
mov
adc
dec
or
inc
pop
ss
or
test
add
dec
jp
in
xchg
dec
sub
adc
adc
clc
scas
xchg
movs
dec
sbb
adc
mov
clc
ds
es
xchg
dec
jg
clc
scas
sbb
dec
cmp
dec
movs
mov
(bad)
xor
or
pop
xor
in
enter
jge
xchg
cmps
lods
add
aam
add
lea
jo
cld
std
push
sub
ja
ss
pusha
cmps
fdiv
dec
stos
js
mov
xor
cmp
aaa
inc
lods
push
repz
xor
in
inc
pop
cmc
cmps
mov
and
lds
cwde
push
pop
imul
adc
push
inc
fild
test
popa
icebp
ret
xchg
mov
into
add
mov
sbb
lds
mov
mov
push
aad
and
(bad)
inc
adc
into
adc
jmp
xor
aad
or
hlt
shr
call
xor
pop
jmp
cdq
js
fwait
(bad)
fistp
jb
sbb
(bad)
int
ins
(bad)
test
in
fwait
xor
fs
cmps
and
push
movs
pop
lahf
in
(bad)
inc
pop
icebp
pop
dec
mov
jo
rcr
out
dec
test
xchg
dec
int3
out
sahf
mov
jecxz
das
mov
test
gs
xor
dec
shl
xor
push
rcr
ror
push
lods
es
push
mov
ret
popf
popf
mov
push
push
sbb
sub
or
movntq
stos
inc
lods
out
into
sub
jne
cmp
cmp
pop
sbb
rcl
jp
bound
and
out
je
scas
es
idiv
(bad)
ds
cli
in
daa
jne
dec
inc
mov
cli
ja
adc
fld
inc
mov
out
mov
push
out
mov
mov
add
inc
lods
daa
jae
or
xor
hlt
lods
ss
or
cwde
loop
retf
xchg
cli
add
pop
or
inc
mov
cdq
ins
fisttp
sbb
jnp
mov
xchg
loopne
jmp
push
jge
(bad)
comiss
add
test
xor
movs
retf
push
stos
js
xor
xchg
imul
jmp
mov
xor
dec
cld
pop
or
pop
fdivrp
je
and
ficomp
bound
jnp
(bad)
mov
or
out
sbb
xor
push
jne
test
in
cmp
fiadd
jbe
sbb
and
fwait
xor
outs
int
inc
cmps
dec
inc
cmps
or
call
mov
ss
adc
shl
inc
ds
test
(bad)
mov
sbb
scas
add
xor
mov
sbb
inc
jmp
scas
mov
add
bound
movs
or
pop
or
outs
je
adc
cmp
(bad)
inc
outs
leave
and
pop
sub
aad
(bad)
(bad)
mov
mov
cwde
push
sub
jo
jbe
inc
dec
xor
jle
adc
rol
adc
sub
jo
ds
outs
(bad)
push
add
inc
push
cmp
movs
and
fisttp
repnz
mov
mov
inc
aam
or
int3
jne
test
sbb
loopne
rcl
(bad)
ficom
xor
adc
inc
into
pop
outs
mov
int
push
mov
sbb
arpl
fbstp
or
imul
scas
mov
push
pop
inc
mov
int3
xor
jmp
movsx
sub
fs
cmp
ss
fiadd
rdmsr
mov
jnp
xchg
mov
fcom
movs
mov
sub
or
es
pop
pop
loopne
scas
push
cmp
and
ror
shl
xlat
or
in
ret
rol
mov
aad
ficom
mov
dec
in
imul
cmps
lods
fst
in
rcl
cs
cli
dec
hlt
test
stos
(bad)
sysret
lods
pop
je
shr
(bad)
aam
cs
retf
dec
rcr
mov
imul
in
jb
inc
or
ss
ss
add
popf
dec
shl
loopne
les
inc
fwait
pop
fiadd
ins
jae
jg
push
pop
aaa
push
lahf
adc
cmp
sub
aam
or
fcmovnb
bnd
arpl
dec
jnp
add
sub
push
cmp
cld
jmp
inc
mov
jp
adc
jle
jne
pop
mov
or
xor
in
xchg
in
dec
int3
and
loop
or
cld
cs
ja
jae
into
in
sti
pop
retf
or
movs
imul
pushf
jae
mov
rol
xor
cmp
stc
sub
out
dec
mov
or
shl
mov
in
sbb
aaa
push
call
dec
push
jne
mov
sub
sub
movs
cli
and
out
jmp
imul
and
jl
jle
mov
hlt
sbb
outs
push
pop
popf
xchg
inc
data16
(bad)
jbe
sbb
cmp
lods
or
sbb
jne
mov
fidiv
and
mov
sbb
jb
pusha
movs
scas
lds
mov
jmp
sub
inc
ss
ret
inc
les
ror
ficom
cld
push
(bad)
dec
mov
out
jne
loope
push
iret
xchg
add
stc
push
push
aam
push
inc
stc
outs
jle
jmp
push
or
dec
adc
cmp
ret
cmps
add
or
mov
pop
sub
cmps
jg
and
adc
aam
test
pop
mov
outs
xor
into
dec
mov
push
je
inc
mov
sbb
jnp
xor
mov
mov
pushf
pop
in
cwde
cmc
lods
xor
sahf
cwde
popa
jmp
jae
jmp
xchg
jmp
xchg
mov
clc
adc
push
cmp
jmp
mov
inc
inc
inc
adc
mov
jae
mov
in
mov
sub
jp
push
rcl
sub
mov
cli
adc
test
pop
pop
dec
ins
stos
push
test
mov
inc
rcl
adc
int3
cmp
mov
push
dec
repnz
xchg
sub
and
lahf
push
das
loop
push
sub
add
mov
sbb
ficom
mov
mov
xor
jns
out
cmp
xchg
ins
pop
sub
pop
dec
xor
je
add
les
mov
pop
stos
pushf
sti
push
cmp
pop
fscale
add
pusha
cmp
in
lods
mov
popf
call
push
or
mov
or
push
bound
cwde
cmp
out
std
xor
or
repnz
jle
cli
sahf
aam
add
rcl
pop
hlt
sub
xor
sub
imul
cmc
adc
(bad)
cmc
xor
push
movs
push
movs
xor
xor
mov
sbb
mov
lea
sub
mov
jp
cdq
ja
push
dec
mov
sti
and
cmp
es
not
pop
cld
test
jp
(bad)
fidivr
push
stos
push
xchg
out
das
in
in
outs
lock
cmp
call
loope
dec
dec
cdq
pop
jne
inc
inc
test
test
imul
mov
aas
lock
or
imul
ins
fdivr
nop
js
fistp
enter
test
xchg
stos
jl
sbb
xchg
cmp
sbb
cli
jecxz
ret
xchg
out
shr
xor
add
iret
mov
(bad)
push
imul
sub
mov
mov
jnp
xchg
mov
dec
stos
fs
xor
and
and
xchg
or
push
sub
movs
gs
ss
out
sub
aaa
jns
or
(bad)
(bad)
gs
mov
stc
xor
addr16
xchg
mov
dec
bound
dec
aad
sti
inc
retf
add
ret
out
adc
in
push
xchg
fdivr
ret
add
and
jp
mov
das
ret
jmp
jnp
scas
xchg
xor
pop
(bad)
push
call
inc
imul
cmc
repz
or
ror
and
jb
jl
adc
neg
rcr
fistp
xchg
cmp
call
fdivr
lea
std
jp
mov
imul
push
adc
or
mov
push
mov
fs
fs
sti
mov
nop
stc
mov
xchg
aas
fistp
push
retf
jo
(bad)
into
cld
leave
push
xchg
adc
call
shr
xor
popf
pop
popf
in
mov
ret
push
in
jmp
pop
cmps
aas
jp
mov
sub
mov
xchg
(bad)
sbb
xor
mov
mov
and
or
sub
pop
push
icebp
add
pop
xor
mov
ret
mov
fld
in
xchg
push
mov
jle
dec
jg
cmp
sub
and
mov
xor
cmp
cmp
add
jmp
fs
cli
in
js
aam
mov
sub
hlt
mov
xchg
(bad)
addr16
bound
or
loope
ins
lods
xor
mov
mov
fwait
mov
ja
lods
bound
jo
add
adc
test
call
sub
shr
sbb
dec
sbb
add
pushf
add
out
(bad)
add
mov
or
xor
dec
push
out
imul
retf
dec
mov
fimul
mov
adc
je
add
fmulp
cmps
stos
add
enter
cmp
jno
add
xor
dec
lods
retf
dec
cmp
int
cmp
movs
dec
ret
jge
pop
sub
repz
outs
pop
adc
(bad)
or
inc
wrmsr
dec
test
lahf
aam
mov
mov
stos
dec
ret
test
imul
mov
stos
jl
mov
jo
int3
jmp
push
jne
fstp
add
jmp
or
je
jne
push
mov
mov
add
gs
or
add
sbb
test
inc
sbb
popf
aad
inc
or
or
jmp
aad
add
xor
sti
fmul
push
sbb
movs
mov
(bad)
call
jmp
inc
jbe
mov
in
mov
pop
mov
mov
inc
gs
mov
push
in
out
sub
sub
sti
jl
rcr
push
cdq
stc
xchg
stos
push
add
push
pop
loope
or
inc
adc
aad
stc
xlat
xchg
leave
pusha
fwait
sar
out
or
pop
int
push
aam
mov
test
rep
test
lods
sti
xchg
mov
jbe
bound
and
or
adc
push
pop
cli
adc
scas
xor
mov
mov
pushf
xchg
push
js
xlat
push
das
std
out
lds
jle
pusha
(bad)
das
fs
int3
shl
retf
pop
jmp
call
push
(bad)
cmp
cmp
mov
call
jno
loope
ror
xor
sub
cmps
jns
arpl
pop
cmp
pop
pop
jno
sub
pop
xor
jne
jge
sbb
call
mov
ds
mov
push
adc
and
jmp
pop
out
jb
out
adc
rol
into
jmp
data16
sbb
cld
out
adc
sahf
mov
jmp
and
mov
test
sub
les
mov
or
mov
popf
inc
daa
aam
sbb
adc
and
cmp
jecxz
rcr
jb
and
fs
in
ins
adc
or
push
aas
daa
js
stc
lahf
fucom
call
mov
gs
and
aam
je
dec
cwde
pop
sbb
fdiv
ins
sub
sub
xor
jbe
add
sti
pop
fidiv
dec
cmp
es
and
hlt
dec
ss
mov
add
outs
idiv
and
cwde
xchg
or
hlt
and
mov
sub
idiv
in
data16
std
test
in
pushf
jnp
inc
cmp
xor
into
or
es
les
xchg
or
pop
(bad)
retf
sbb
stos
xchg
or
hlt
enter
push
je
aad
cmp
hlt
xlat
dec
xor
pop
jp
sub
and
pop
pop
mov
push
pushf
mov
sahf
push
inc
xchg
push
xchg
adc
dec
and
mov
jb
aam
cdq
dec
or
jp
xchg
jl
fs
pop
mov
or
in
add
add
xchg
arpl
out
xchg
add
jmp
cmps
sti
or
jno
lds
inc
adc
sbb
inc
xchg
sub
xchg
aam
sub
push
pop
mov
push
loopne
sub
aam
je
mov
adc
xchg
out
xchg
je
dec
mov
xor
or
pop
push
int3
or
pop
shl
mov
and
xchg
pop
in
mov
(bad)
int3
retf
mov
call
sar
add
jbe
(bad)
fsubr
inc
test
inc
push
mov
pusha
dec
stos
fwait
add
fucomi
mov
jmp
jle
fnsave
xor
or
add
inc
arpl
xchg
cmp
scas
dec
hlt
pop
xor
push
test
sub
outs
in
adc
and
dec
mov
out
adc
xchg
push
sub
cmc
sbb
adc
jmp
jb
setb
jns
out
lea
out
call
cmc
dec
stos
stos
test
outs
stos
lds
arpl
mov
cmp
mov
xchg
cdq
mov
int3
xchg
int
inc
push
pop
out
sbb
imul
fwait
mov
inc
adc
movs
div
mov
dec
les
js
and
mov
call
mov
cmp
cmp
push
popa
scas
out
int3
shr
jle
dec
inc
dec
js
imul
cmp
fiadd
lock
jmp
adc
shl
bound
xchg
out
in
inc
popf
pushf
mov
mov
mov
push
cmp
imul
es
cwde
adc
arpl
jp
xchg
and
dec
mov
fcmovbe
cmps
icebp
jge
xchg
cmc
in
inc
fst
ins
sub
das
icebp
mov
sub
mov
dec
xchg
sub
pop
and
sbb
jle
adc
mov
xor
shl
inc
lds
push
or
das
sar
or
in
dec
xchg
out
jno
imul
or
jmp
fwait
rcr
mov
dec
and
not
sub
and
jbe
mov
sub
adc
push
cmp
(bad)
push
or
scas
jnp
jge
in
inc
inc
xor
xchg
loop
or
mov
pop
in
pop
adc
xchg
cs
cmp
in
je
aad
add
and
jg
jecxz
out
mov
cmp
xchg
jl
ret
cmp
sti
fsub
mov
jmp
adc
shl
jl
and
push
xor
std
mov
arpl
mov
les
popa
cli
add
sub
fsubr
push
jp
sub
pop
adc
add
sbb
test
inc
jb
imul
mov
mov
stos
ins
mov
inc
xlat
out
mov
push
mov
mov
sahf
jnp
sbb
leave
mov
out
inc
pop
arpl
rol
mov
dec
lahf
popa
shr
add
mov
scas
xor
lods
sti
loope
or
and
stos
inc
mov
cmp
fst
xchg
and
jp
sbb
or
mov
sbb
mov
inc
repz
pop
jnp
cli
jg
push
(bad)
movs
in
mov
pop
or
pop
jge
sub
cmp
pop
ins
ins
mov
ss
push
cwde
jo
inc
imul
cs
add
(bad)
mov
push
out
cmc
mov
and
mov
inc
jmp
and
mov
mov
push
mov
sbb
adc
inc
js
lock
sub
clflush
les
test
pop
mov
and
ret
fisub
adc
push
pop
mov
xor
in
push
imul
retf
mov
sahf
std
pop
jl
dec
push
cmc
add
hlt
push
loop
enter
xor
aad
stos
mov
mov
mov
sti
or
lods
pop
inc
sti
and
xchg
push
lahf
adc
sti
in
lds
push
stc
mov
cmp
sti
xor
stos
sbb
dec
pop
mov
dec
sbb
hlt
(bad)
push
movs
xor
hlt
push
add
and
lods
mov
sub
jns
out
sub
std
add
adc
adc
mov
fwait
pop
aam
and
repz
add
popfw
dec
or
adc
and
mov
push
push
aas
adc
call
mov
mov
dec
je
pop
sub
je
lods
push
sbb
pop
or
xlat
mov
push
jge
and
stos
adc
(bad)
inc
xor
and
and
mov
mov
shl
and
jne
rol
jmp
fiadd
lahf
add
mov
cmp
sbb
push
dec
or
clc
pop
pop
frstor
loope
dec
cdq
push
ins
stos
enter
push
xchg
add
inc
xor
mov
les
test
in
bnd
jmp
movs
aad
popf
push
fwait
cwde
sub
mov
jne
lods
push
push
cmps
jns
pop
aas
dec
pop
sti
int
rep
out
aam
adc
ins
ins
push
lds
cdq
mov
sbb
sub
fst
fsub
cmp
mov
push
div
pop
dec
cmps
lds
add
iret
xchg
jmp
ss
mov
jbe
repnz
dec
psraw
data16
xor
sti
fistp
or
call
push
add
jns
imul
ds
movs
retf
dec
adc
adc
es
sub
adc
xor
xlat
jecxz
lds
rcr
jmp
movs
mov
mov
pop
test
pop
dec
jmp
cli
fs
cmp
test
mov
fwait
out
ja
inc
ret
add
jp
mov
fmul
xchg
and
and
loope
push
pop
push
xchg
int3
dec
ins
mov
fsubr
stos
adc
fldcw
jno
inc
jle
cmp
push
sub
and
call
shl
movs
addr16
push
mov
das
mov
loopne
add
les
xchg
test
(bad)
sbb
mov
pop
scas
rcl
xor
mov
cmc
push
pop
pop
xlat
xchg
imul
xor
or
or
sbb
jp
test
cmp
xor
add
outs
leave
or
es
aaa
clc
xchg
ret
test
movs
xchg
adc
push
ror
mov
inc
ins
and
mov
sbb
lds
jle
in
outs
or
or
sahf
inc
sti
aaa
jns
or
pop
dec
or
in
mov
aam
and
aaa
repz
test
popa
in
mov
add
xor
ret
int3
mov
or
jnp
test
in
jp
xor
inc
frstor
cmc
loop
lods
push
mov
sbb
pop
add
sti
imul
dec
add
inc
in
iret
fsubp
enter
ins
sbb
inc
add
aam
ror
rcl
inc
ds
pop
(bad)
into
pshufw
mov
test
adc
or
(bad)
sbb
sub
and
inc
and
pop
loopne
into
mov
push
hlt
or
jae
jp
rcl
and
aaa
inc
and
es
cmp
xchg
jp
les
ficom
push
fst
mov
and
sbb
out
test
dec
pop
xchg
enter
sbb
xor
push
lds
cmc
loope
ret
jns
inc
ds
stc
jbe
aas
cmps
call
jge
jg
addr16
test
xor
push
shr
mov
push
test
jmp
dec
inc
(bad)
in
(bad)
retf
sub
push
inc
dec
ss
hlt
jmp
push
jle
ja
adc
cmps
sbb
xor
push
adc
mov
dec
add
push
cwde
sbb
sbb
sbb
mov
inc
mov
fmul
into
test
xchg
out
sbb
cmc
jmp
adc
cmc
arpl
jnp
push
jno
retf
pop
sub
sbb
push
mov
in
xchg
shr
sub
push
jp
mov
(bad)
sbb
aad
jp
push
int
jae
nop
retf
sbb
push
ret
call
push
aad
push
push
inc
sbb
mov
xchg
mov
jl
and
pop
mov
mov
popa
sbb
mov
das
push
pop
dec
push
jle
adc
mov
and
jnp
dec
mov
cmp
push
sti
ins
sub
push
cmp
or
dec
dec
mov
dec
sahf
inc
push
gs
mov
jle
xor
fsubr
scas
pushf
xor
dec
addr16
pop
imul
iret
(bad)
cwde
pop
inc
jmp
dec
xor
ja
movs
or
fwait
cmp
(bad)
mov
mov
sti
and
sbb
push
push
cmp
dec
test
popa
mov
mov
push
ficomp
test
call
and
shl
hlt
xchg
rol
bound
and
mov
mov
fs
(bad)
pusha
pop
mov
sbb
popf
retf
fsubr
pop
jmp
lods
sbb
adc
mov
add
sub
movs
sbb
fs
ds
sbb
in
out
mov
scas
push
inc
arpl
adc
fiadd
push
stos
mov
sbb
add
or
push
movs
scas
hlt
retf
dec
xchg
cmps
push
xchg
gs
cwde
xchg
jmp
outs
inc
ret
mov
push
rol
call
ficom
mov
dec
mov
out
repz
(bad)
push
mov
out
int3
sub
movs
fiadd
inc
ja
shr
cmp
and
mov
out
(bad)
pop
leave
jmp
cmp
xchg
mov
cmp
je
hlt
and
shr
mov
fimul
hlt
inc
sub
stos
fs
xor
popa
stc
mov
pop
mov
jmp
sbb
mov
je
mov
or
sub
loopne
cmp
fld
mov
arpl
lods
cmps
pop
mov
xchg
xor
cmp
xchg
mov
jnp
cmp
inc
pop
sar
mov
call
(bad)
lds
in
hlt
lds
out
pop
sub
pop
gs
fst
inc
int
mov
mov
arpl
mov
lahf
in
and
std
iret
mov
aas
cli
pusha
ds
jp
push
loope
gs
jns
inc
or
and
adc
icebp
sbb
cld
or
xchg
push
ins
mov
enter
movs
fistp
std
xchg
aaa
pop
or
adc
repz
pop
aam
mov
dec
sbb
dec
test
xchg
add
loope
xlat
cmp
mov
call
pop
xor
mov
cmp
mov
jmp
aas
jno
dec
push
pop
pop
xchg
mov
in
sbb
ror
dec
jb
or
inc
adc
movs
test
xchg
pop
push
add
addr16
movs
add
mov
mov
(bad)
idiv
xchg
addr16
les
xor
and
cld
add
mov
xchg
out
movs
les
fisttp
xor
mov
icebp
jne
push
mov
inc
shl
and
sbb
hlt
pop
or
push
in
xlat
je
mov
add
int
pop
in
fnstcw
and
bound
and
xchg
js
js
xor
fs
push
out
push
xchg
mov
cli
daa
cli
aad
jae
loope
in
mov
dec
cld
xor
add
xor
(bad)
sti
pop
js
mov
mov
lock
xchg
ret
pop
jnp
jb
out
not
adc
stos
pop
sbb
stos
push
add
icebp
xor
mov
mov
xchg
gs
cmp
ja
or
test
lods
sbb
and
dec
xor
and
aaa
mov
dec
rcr
lea
jl
lods
outs
jne
mov
cli
mov
bound
les
cdq
xor
inc
ficom
cmp
scas
lahf
int3
xor
jnp
gs
call
push
dec
daa
sbb
iret
and
adc
mov
push
adc
or
xchg
imul
cmc
ret
push
shr
or
lock
call
cmp
dec
sub
in
jnp
push
(bad)
les
js
mov
in
pop
ins
add
pop
jl
gs
push
stc
cwde
mov
push
lahf
mov
lock
adc
pop
dec
mov
jae
ret
and
je
arpl
aam
loop
xchg
mov
call
sbb
mov
push
not
and
jnp
mov
call
in
(bad)
dec
scas
add
cmc
ja
fbld
adc
cmp
test
push
jmp
ja
ror
js
in
fiadd
mov
inc
cld
inc
loop
loopne
xchg
dec
(bad)
jbe
loopne
sub
fimul
mov
mov
mov
and
stos
aam
xchg
gs
xchg
sub
push
dec
jmp
jp
cmp
mov
sbb
adc
icebp
and
(bad)
std
xor
mov
xor
repnz
push
(bad)
cli
xor
int3
xor
mov
(bad)
xor
mov
xchg
test
cmp
pop
test
pop
sub
imul
(bad)
hlt
movs
xchg
or
xor
mov
mov
push
data16
dec
xchg
jg
add
mov
test
aam
mov
inc
add
jmp
sub
out
and
cmc
adc
movs
xchg
gs
mov
add
inc
push
jp
je
loop
aam
and
daa
es
fstp
data16
mov
ret
push
inc
dec
test
jmp
mov
bound
hlt
movs
push
cmp
sub
pop
mov
and
test
fst
jmp
movs
sahf
jns
dec
loop
mov
retf
push
inc
call
or
adc
stc
mov
aad
cdq
push
loopne
xchg
ins
mov
scas
xchg
cmp
pop
push
xor
cmps
sub
mov
dec
retf
xlat
inc
xchg
inc
pop
or
movs
imul
push
(bad)
aas
outs
xor
retf
mov
mov
inc
call
in
cmp
pop
stos
lock
sbb
imul
jno
push
(bad)
pmuludq
outs
xchg
loopne
pop
cmc
sbb
inc
mov
es
stos
or
aas
aas
xchg
gs
mov
cmp
addr16
xor
pushf
scas
and
xlat
xor
push
popa
cli
pop
test
stos
lods
xchg
lods
jo
pop
sub
dec
pop
jmp
adc
fwait
repnz
jmp
aad
mov
add
push
mov
nop
bound
sub
push
aas
xchg
sbb
movs
aas
imul
call
pop
mov
std
push
aas
add
sbb
push
push
test
fdivr
xchg
sbb
xchg
xchg
(bad)
sbb
lds
sbb
xor
popf
xor
retf
aaa
cmp
xor
mov
not
jno
adc
mov
mov
pop
mov
fcom
push
test
popf
add
mov
push
imul
push
add
loop
ret
call
call
push
inc
arpl
sbb
shl
mov
cmc
mov
mov
sub
ret
jb
cld
push
cmp
mov
add
sub
or
scas
or
jmp
lods
mov
dec
pop
stc
mov
enter
pusha
cmp
mov
lock
add
cmp
scas
fwait
add
cdq
(bad)
xor
or
loopne
jmp
xchg
test
cmps
lahf
mov
fdiv
pop
iret
lods
loop
mov
sub
or
pop
loop
cwde
int
pop
loopne
neg
inc
and
in
sar
scas
adc
or
in
les
loope
push
enter
aam
jmp
push
pop
adc
jmp
pop
sub
outs
jle
push
pop
mov
adc
xor
push
cli
je
add
loope
(bad)
and
cwde
or
loop
arpl
push
bound
mov
fisub
jecxz
aam
mov
lods
outs
cmp
pop
scas
pop
jl
dec
(bad)
jmp
mov
xchg
add
xchg
pop
loopne
outs
mov
push
out
imul
int
xlat
xchg
cli
scas
jno
mov
ds
int
stos
inc
dec
fistp
adc
retf
sub
iret
mov
outs
cli
push
rcr
out
(bad)
sbb
retf
dec
jmp
cwde
push
(bad)
cmps
ja
cdq
lods
cmp
add
push
idiv
retf
mov
push
pop
xor
into
mov
test
aaa
(bad)
dec
test
ficomp
fcom
mov
mov
out
jnp
sub
xor
sub
sub
xor
or
movs
out
sub
mov
ret
pop
inc
in
sbb
sbb
cli
pop
pushf
jbe
add
xchg
and
mov
mov
sub
mov
aam
in
or
add
into
mov
sbb
or
ja
retf
ffreep
ins
stc
jmp
movs
cld
mov
push
and
xchg
mov
jmp
retf
sbb
mov
pop
add
(bad)
js
stos
aas
xchg
call
loope
stos
sbb
les
dec
xchg
inc
inc
fidiv
xchg
stos
fs
cmp
ficomp
hlt
mov
mov
or
xor
outs
in
sahf
sar
mov
idiv
pop
and
outs
xchg
mov
cmps
push
mov
add
jmp
out
imul
aam
pusha
inc
dec
lock
fs
adc
dec
sbb
pop
add
fsubr
int3
(bad)
or
cwde
loop
xor
ror
add
jbe
retf
jnp
int3
xor
add
jnp
jne
push
pop
out
push
jo
ins
jbe
out
pusha
sti
adc
mov
cmp
fchs
(bad)
jp
andps
jmp
shl
lock
xor
sbb
xchg
es
mov
jmp
pop
in
fs
inc
cli
jno
add
cli
xor
fldln2
xor
cmp
pop
jl
jl
pop
mov
sbb
jecxz
inc
shr
mov
jl
fisub
cpuid
mov
mov
(bad)
xor
xor
push
aaa
popf
enter
retf
sub
or
cmp
mov
iret
mov
mov
cmp
pop
enter
inc
fld
aaa
mov
sbb
rcl
rcr
int
iret
xchg
push
in
cmp
push
arpl
scas
add
or
mov
lgs
jmp
fcomi
mov
and
pop
inc
xchg
push
push
jmp
pop
or
inc
sti
sub
adc
fisttp
jmp
xchg
xchg
mov
inc
loop
jmp
push
xor
fstp
sbb
inc
pop
adc
xor
mov
xor
stos
adc
fist
mov
popf
loop
sub
jno
xor
cmp
shr
xchg
les
out
mov
fstp
retf
dec
and
jmp
mov
rcl
leave
jmp
cmp
or
dec
pop
out
arpl
pushf
fdivr
movs
mov
dec
xor
xor
data16
or
cmp
mov
into
fcmovu
xor
fstp
jnp
ret
stos
sub
inc
xchg
retf
in
sub
les
sub
fld
js
pusha
push
add
into
dec
repnz
or
data16
test
ins
mov
jmp
xchg
loopne
inc
mov
add
je
je
cdq
call
pop
enter
sbb
mov
or
std
dec
pop
xchg
movs
mov
test
arpl
jo
sub
jne
out
mov
fmul
xlat
or
inc
cmp
pop
popa
mov
add
sub
mov
jmp
or
jb
mov
outs
cmp
pusha
lods
jae
and
add
xchg
fs
adc
mov
out
lds
and
ret
jmp
mov
in
jns
mov
xor
mov
sub
or
push
cmc
gs
into
in
add
movs
xor
add
movs
pushw
aaa
movs
push
jmp
popa
push
daa
jmp
hlt
and
sbb
push
out
push
xor
add
push
push
pusha
pushf
leave
pop
aaa
push
cmc
gs
repz
test
and
push
and
int3
mov
fiadd
pop
loopne
mov
repnz
es
sub
fs
jo
jge
call
cmp
movs
sub
sahf
(bad)
in
push
xchg
popf
test
jo
xor
push
test
(bad)
lock
adc
retf
push
add
fld
push
add
std
jecxz
lods
cwde
mov
in
mov
jg
call
rcl
out
mov
pop
pop
xor
jne
sti
pusha
jmp
mov
cmp
pusha
mov
jno
in
retf
push
les
push
jmp
test
cmp
(bad)
cwde
popa
pop
ror
jno
test
sub
imul
add
outs
xchg
imul
cli
adc
inc
lock
loop
xchg
out
xchg
loope
pop
xlat
outs
cmps
dec
sar
pop
(bad)
cmps
push
mov
jnp
adc
stos
cmp
ja
adc
out
dec
std
push
push
in
sbb
jne
arpl
out
aam
inc
mov
push
xchg
jl
xchg
sti
test
push
mov
push
sbb
jge
and
gs
jb
xor
cdq
cmp
inc
clc
pop
and
xor
or
jbe
push
jnp
call
jb
lds
pop
mov
add
pop
lds
pop
pop
outs
retf
mov
and
jbe
sub
ror
sub
mov
jo
in
sbb
xchg
jmp
ins
and
mov
sub
js
rol
cmp
pop
adc
fld
cmps
fcmove
mov
movs
mov
sbb
sbb
stos
shl
adc
bound
(bad)
out
mov
scas
jmp
scas
mov
lods
into
pop
cmp
dec
or
dec
dec
push
xchg
imul
mov
add
xchg
jp
adc
js
mov
mov
int3
mov
pop
jp
add
jbe
gs
jmp
(bad)
int3
lods
ret
dec
sbb
fnsave
movs
fisub
inc
push
mov
es
pushf
movs
push
fisttp
mov
mov
xchg
pop
push
icebp
xor
push
jl
or
in
push
ins
aam
movs
out
cmp
adc
fdiv
movs
pop
xchg
add
ins
scas
sbb
and
sub
sub
pushf
inc
aaa
ins
dec
or
ins
mov
push
movs
mov
mov
fld
gs
retf
fs
mov
inc
jle
cmp
mov
std
lods
xor
pop
shl
popa
leave
xchg
test
push
ins
fst
inc
cmp
or
push
push
mov
and
xor
out
xchg
mov
jge
dec
call
xor
and
enter
aas
hlt
adc
mov
and
das
jbe
in
sub
or
mov
fs
jp
iret
ret
movs
jnp
pop
mov
xor
loope
mov
call
mov
scas
pop
add
retf
xchg
mov
pop
sub
adc
inc
xor
stos
sbb
jl
xor
cmps
and
jns
imul
sbb
addr16
fucomip
pop
rcr
inc
retf
rcr
gs
xor
retf
leave
pop
aaa
xor
xor
jmp
icebp
sbb
es
xor
or
shl
mov
xchg
pop
sbb
or
mov
or
lods
cmp
dec
cmp
arpl
rcr
loope
in
mov
movs
jle
arpl
pushf
test
(bad)
sti
les
add
and
dec
mov
sbb
shr
(bad)
jmp
mov
and
sub
ror
rep
push
xchg
mov
mov
jae
sar
jns
or
cli
add
lea
and
stc
push
scas
popf
enter
(bad)
push
mul
movs
push
icebp
adc
pop
cmp
cdq
lds
movs
xchg
test
cld
sbb
push
fstp
add
jmp
push
and
stos
in
fmul
loope
jnp
aam
les
lock
or
adc
daa
cmp
adc
sbb
jle
movs
cs
xor
lahf
shl
add
lods
js
xchg
(bad)
xchg
xor
jecxz
test
push
in
stos
outs
mov
add
mov
jae
mov
push
pop
mov
adc
(bad)
sub
outs
hlt
adc
and
call
inc
jne
inc
mov
fs
mul
icebp
jmp
adc
push
sete
in
mov
cmps
mov
push
xchg
fisub
repz
popa
mov
enter
enter
add
lock
fist
pushf
xlat
push
aad
dec
sub
push
or
and
(bad)
dec
cmp
mov
jmp
shl
xlat
add
or
pop
xchg
out
mov
sub
mov
mov
sete
mov
jp
sub
and
adc
repz
xor
mov
in
pop
retf
xchg
jl
inc
push
pop
not
retf
adc
jmp
jb
in
ds
shl
lods
loop
jno
sub
or
pop
mov
fwait
iret
lods
cs
mov
test
das
cmps
jne
lock
inc
push
adc
dec
retf
sub
cmp
ss
out
dec
pop
out
sbb
sbb
outs
jno
sub
pop
push
push
syscall
mov
sub
mov
sbb
adc
test
sbb
pushf
push
addr16
push
sar
xchg
mov
cdq
mov
pop
cmp
scas
addr16
cmp
jmp
stos
inc
ret
mov
mov
mov
xchg
xor
dec
mov
ror
lods
test
jl
mov
or
sbb
sar
les
mov
int
test
movs
mov
pusha
sbb
pop
jle
(bad)
and
xor
dec
push
dec
fcmovu
mov
addr16
gs
push
loopne
(bad)
push
rcr
lods
add
(bad)
ds
adc
or
retf
and
lds
les
inc
out
sub
cs
ja
sahf
xchg
xlat
xchg
mov
retf
into
ret
mov
or
mov
push
shl
inc
hlt
sbb
push
sub
xchg
data16
push
inc
cdq
ins
outs
push
outs
push
ss
mov
daa
fs
sahf
retf
inc
or
inc
or
stos
xchg
sub
cmp
mov
push
pushf
sbb
call
cmps
imul
cmp
mov
pop
mov
lods
ins
movs
and
cmp
je
mov
pop
add
or
or
mov
enter
sbb
fistp
pusha
rol
es
mov
pop
sbb
mov
sbb
push
sub
mov
mov
inc
push
sub
pusha
fwait
push
cli
retf
mov
dec
bound
ss
sbb
jmp
sub
pop
mov
es
jo
adc
jo
mov
push
(bad)
outs
pop
repz
cs
xor
cs
adc
call
jmp
out
xchg
das
xlat
stos
mov
dec
fs
xor
push
inc
mov
push
iret
mov
pusha
xor
fcmove
sbb
xchg
mov
add
js
into
mov
mov
repnz
rol
ins
mov
fmul
add
mov
jmp
cli
inc
xchg
movs
lahf
gs
inc
lea
dec
xchg
inc
inc
jno
mov
push
push
lods
push
scas
and
or
in
test
stos
mov
and
ss
jmp
jl
arpl
adc
inc
jae
push
push
sbb
callw
test
mov
dec
int
ror
loope
rcl
aam
pop
inc
sbb
sub
push
mov
add
xor
add
cmps
push
mov
pop
push
push
das
mov
cmp
les
and
jae
sub
xchg
cdq
xor
jnp
inc
popa
dec
add
mov
out
fadd
femms
in
push
add
adc
add
shr
push
(bad)
aad
jle
popf
sub
aad
and
(bad)
aaa
lahf
fimul
mov
pop
add
fnsave
mov
pop
inc
sbb
pop
out
jle
dec
xchg
cmc
mov
imul
ror
mov
jae
adc
loope
and
xchg
mov
scas
pop
add
mov
out
push
mov
test
jl
test
jl
and
popa
mov
sbb
(bad)
in
hlt
sub
sbb
popa
int3
xchg
stos
mov
in
push
sar
mov
add
xchg
mov
cmps
mov
mov
hlt
dec
xor
mov
pushf
retf
bound
pop
adc
adc
imul
and
jns
add
push
popa
(bad)
int3
repz
dec
(bad)
mov
cmps
movs
push
aam
ds
adc
ja
push
mov
fwait
iret
lds
data16
add
jns
jge
inc
mov
jp
fs
fdivrp
sar
xchg
jne
or
pop
push
push
xchg
push
sbb
in
xor
sbb
(bad)
sar
pop
out
mov
xor
fild
into
sub
push
jge
mov
dec
test
jmp
dec
inc
inc
inc
xchg
jo
stos
fs
jp
les
inc
mov
push
in
test
or
aad
jmp
fidiv
inc
fs
lods
js
call
adc
sub
pop
popf
sbb
inc
cmps
xchg
xor
xchg
inc
push
cwde
cmp
ds
(bad)
mul
sbb
inc
or
and
inc
mov
xchg
inc
mov
ss
xchg
xchg
push
inc
pop
je
in
mov
stos
adc
pop
jbe
test
adc
sub
out
add
and
dec
jge
xchg
mov
dec
movs
xor
in
xor
hlt
sub
retf
in
jge
push
dec
movs
mov
ins
push
xor
push
mov
sbb
xor
mov
or
add
push
and
push
pop
enter
cmp
xchg
mov
jge
lock
(bad)
add
fnstcw
(bad)
adc
mov
enter
cmp
mov
inc
icebp
pop
(bad)
idiv
sub
fcomp
xor
cli
jns
movs
sub
push
in
add
imul
sbb
movs
scas
adc
mov
lock
les
pop
add
cmp
add
lods
mov
bound
xchg
into
lock
pusha
jl
dec
pop
sbb
push
adc
push
pop
fmul
sub
fistp
outs
xor
cmp
cli
pop
lds
adc
rcr
inc
xor
hlt
addr16
push
jp
mov
ss
stos
les
push
lods
inc
lods
pop
sub
dec
dec
dec
and
jmp
xor
mov
call
hlt
fist
push
mov
mov
imul
xor
mov
hlt
(bad)
nop
cdq
shl
imul
je
ficom
push
cmp
inc
xchg
fs
pop
inc
mov
mov
je
fmul
inc
sub
scas
retf
push
adc
aad
sti
ror
push
inc
xor
aam
mov
arpl
mov
int3
call
xor
scas
in
cmc
sahf
mov
push
push
popf
pop
loopne
mov
and
cmps
fisub
mov
sti
dec
outs
ins
xor
pop
leave
xchg
fs
fwait
push
inc
(bad)
out
adc
add
inc
scas
loope
mov
stc
ja
xchg
mov
ror
out
push
jo
adc
push
jecxz
pop
mov
push
dec
mov
jp
stos
inc
test
jnp
sbb
push
mov
push
jb
ror
je
mov
jmp
xchg
(bad)
add
cmp
idiv
retf
xor
or
aad
int
xchg
jmp
sar
push
lea
inc
mov
je
bound
jmp
fstp
pop
sbb
and
dec
mov
cmc
lock
call
push
hlt
inc
jp
ds
loopne
adc
or
pop
mov
into
adc
call
and
jmp
cmp
push
xor
mov
dec
mov
xchg
int
inc
shl
(bad)
pop
repz
xchg
clc
enter
outs
add
lea
push
outs
mov
jae
inc
mov
jnp
jge
nop
hlt
push
mov
mov
cmps
push
add
mov
cmp
inc
adc
in
test
xchg
pop
aam
mov
jp
call
lds
mov
xchg
dec
cmp
or
pop
pop
sub
dec
out
pop
sbb
xor
add
sbb
mov
stc
push
mov
rcr
adc
mov
mov
dec
and
adc
fbstp
and
mov
hlt
movs
in
pusha
int3
lock
mov
std
sub
sub
sbb
inc
pop
adc
stos
xor
repz
mov
das
call
mov
push
mov
sub
dec
ffreep
int3
add
stos
ret
enter
dec
jnp
lods
xor
mov
in
fwait
jmp
cmc
(bad)
lods
movs
xor
pop
dec
sub
stc
loope
add
lods
or
adc
fisubr
or
jge
pop
stc
xor
lea
hlt
lds
inc
call
and
jp
mov
imul
jo
je
pop
push
fs
sub
mov
int3
into
pop
push
push
imul
cmp
dec
or
push
or
dec
clc
call
xchg
pop
sti
xchg
mov
mov
(bad)
xor
std
icebp
add
mov
repz
scas
aaa
add
xchg
ss
les
sub
popf
xchg
jg
mov
pop
out
and
adc
ja
test
mov
jno
pop
push
jmp
jp
cmp
cmp
fsub
cmp
sub
xchg
push
loop
mov
aas
nop
pop
dec
xor
jecxz
dec
daa
mov
outs
pop
sub
mov
fmul
cmp
je
push
scas
out
sbb
lea
ss
dec
iret
test
pushf
push
jecxz
cmps
in
mov
add
retf
jnp
les
lock
cmps
xchg
inc
adc
dec
xlat
inc
sti
clc
stos
adc
inc
(bad)
loopne
inc
loop
call
(bad)
jmp
jae
pop
sbb
addr16
xor
jns
dec
hlt
inc
imul
adc
adc
dec
push
push
fsubr
ja
test
push
int
les
iret
sbb
dec
mov
adc
dec
dec
xchg
push
jmp
cmp
dec
test
mov
or
push
inc
xchg
(bad)
mov
aam
dec
cld
in
sbb
ds
cmc
add
cmp
jmp
pop
test
out
xor
and
add
cmc
movs
test
xor
add
pop
aam
leave
pop
add
or
adc
leave
jb
sbb
ret
shl
cdq
stos
jg
jne
xchg
mov
adc
test
sbb
aas
inc
addr16
imul
out
fidivr
and
xor
xchg
inc
out
int
shl
es
mov
cli
jnp
aaa
hlt
pop
movs
inc
lahf
cmps
scas
pop
jne
cmc
mov
out
sub
fsubr
inc
scas
jecxz
mov
cdq
bound
mov
movs
jae
iret
mov
stos
adc
push
mov
loop
inc
mov
or
push
aaa
stos
ror
pop
and
hlt
std
cmp
and
mov
jl
push
add
fs
daa
mov
fs
push
aam
mov
jns
jne
pop
ss
(bad)
outs
(bad)
in
push
hlt
pop
ja
pop
dec
dec
mov
lar
in
lea
cdq
sub
push
aad
or
jl
not
aad
dec
jns
dec
add
mov
gs
sbb
fsub
dec
mov
jne
lahf
pop
xchg
std
fwait
(bad)
mov
jl
aad
repz
xchg
sub
mov
add
ret
dec
les
fdiv
xchg
inc
xchg
sub
sub
(bad)
loop
pop
xor
mov
shl
pop
or
and
inc
pop
dec
mov
xchg
scas
sbb
addr16
jle
pusha
andnps
out
add
or
lods
(bad)
in
and
cmps
repnz
fs
mov
mov
ret
vpackssdw
mov
dec
jg
mov
adc
mov
imul
icebp
pop
int
pop
mov
mov
jg
dec
outs
or
cmp
out
and
mov
fisubr
xor
jbe
adc
hlt
ins
fsubr
mov
popa
(bad)
mov
inc
idiv
jb
(bad)
(bad)
mul
sbb
jne
and
jo
(bad)
call
xor
out
(bad)
push
test
in
test
xchg
mov
xchg
sbb
leave
cld
fmul
data16
stos
cmp
inc
cwde
repz
mov
jmp
jae
push
int3
adc
jns
cmp
mov
ins
sub
fcmovnu
pop
idiv
scas
mov
test
scas
dec
out
adc
add
std
leave
dec
xor
xchg
cwde
jp
dec
aaa
pop
pop
mov
shl
pop
and
sti
mov
sub
push
cli
push
sbb
(bad)
mov
test
neg
dec
out
es
xchg
mov
pop
push
jnp
fild
loop
repnz
call
cmp
and
or
sbb
lahf
inc
or
xchg
rcl
jmp
cld
and
les
movs
test
mov
lds
add
inc
scas
pushf
cwde
sub
out
xchg
ret
xchg
jbe
jge
pushf
les
fistp
inc
pop
xchg
stc
dec
mov
xor
and
dec
test
sbb
in
push
and
jns
cmp
xchg
sti
cmp
sbb
cmp
fpatan
mov
pop
mov
dec
jmp
aam
mov
push
pop
cmp
xchg
inc
dec
mov
jne
or
loopne
push
fwait
lods
pop
add
inc
call
add
mov
rcr
call
icebp
cmps
cld
jbe
xor
fsub
mov
in
or
xchg
jb
iret
dec
mov
and
aas
fstp
test
clc
pop
cmps
add
rcr
and
repz
dec
mov
call
retf
pop
(bad)
jmp
push
sub
outs
popa
loope
cmc
stc
ficom
jp
in
les
or
nop
repnz
stos
mov
xor
pop
sub
in
jl
outs
scas
ja
cmp
repz
push
jnp
daa
xchg
dec
clc
or
idiv
mov
mov
sbb
pop
adc
movs
mov
test
mov
ins
js
call
xor
lds
stos
push
push
pushw
xchg
jmp
xchg
(bad)
(bad)
out
mov
cmc
jmp
stos
ficomp
xor
(bad)
push
pushf
sub
jmp
cmp
cld
icebp
stc
retf
and
mov
inc
jp
inc
shl
push
stos
and
in
call
or
imul
retf
push
mov
mov
test
gs
(bad)
clc
push
sbb
push
shufps
test
adc
hlt
fmul
dec
dec
movs
jnp
adc
sub
or
dec
mov
icebp
cmp
pop
add
mov
adc
cld
mov
repnz
adc
lods
cli
out
mov
ins
test
add
int3
jmp
and
adc
push
mov
stos
arpl
ret
cli
mov
sbb
movs
mov
jne
cld
fs
mov
fsubr
fcomp
loopne
lock
popa
retf
xlat
push
std
cmps
sub
js
mov
xchg
dec
repz
mov
dec
mov
dec
add
(bad)
and
jb
jmp
cmp
outs
ret
cmp
test
jbe
push
call
lods
adc
or
pusha
pop
dec
test
xchg
dec
inc
mov
mov
inc
enter
jmp
or
fnsave
mov
mov
mov
inc
test
mov
xlat
stos
xchg
xchg
xchg
out
inc
cmp
push
hlt
jle
test
pop
push
inc
inc
in
out
push
pop
inc
lea
mov
lahf
fisttp
repz
loopne
lds
mov
jp
lea
pop
xchg
xlat
pop
push
sbb
push
lahf
xchg
repnz
add
xchg
test
cwde
or
mov
repnz
or
fisub
outs
jmp
mov
pop
add
mov
loopne
in
adc
(bad)
loope
jp
ins
in
push
cli
push
jge
mov
inc
aam
push
mov
ins
jmp
push
stos
mov
retf
jge
push
dec
cmp
fistp
test
mov
xlat
mov
mov
sti
inc
push
cmp
mov
add
adc
cmp
inc
into
jnp
in
in
adc
sbb
cmps
fs
pop
in
mov
pop
adc
push
sbb
mov
stos
jl
loope
jno
add
dec
dec
in
sbb
outs
loop
dec
pop
adc
xchg
es
repnz
aad
and
push
cmp
cwde
xchg
aas
jnp
sub
sbb
cdq
add
in
ss
mov
lds
mov
dec
js
icebp
test
rol
jmp
popa
sub
inc
add
neg
dec
mov
aaa
out
stos
xor
mov
or
inc
rol
cmp
mov
retf
add
xchg
inc
sub
pop
mov
jb
jmp
stos
aaa
mov
or
inc
dec
std
(bad)
mov
mov
and
mov
cmc
inc
add
bound
pop
out
add
push
outs
in
aaa
aad
icebp
loopne
(bad)
sub
mov
cmp
fs
push
push
inc
mov
xchg
ret
sub
movs
retf
jae
scas
push
les
or
popa
arpl
dec
adc
push
lock
push
sub
lods
out
mov
loopne
lds
pop
popa
test
or
pop
jmp
stc
mov
sub
mov
shr
pop
jb
ret
sub
mov
jbe
add
outs
sub
dec
sbb
(bad)
push
retf
jmp
push
mov
xchg
fidiv
mov
mov
mov
dec
fidiv
aaa
out
imul
xchg
lock
fcmovu
jno
movs
ret
and
push
inc
inc
dec
push
dec
ins
add
dec
sar
outs
das
push
call
mov
jmp
mov
inc
ins
pushf
dec
xor
loopne
mov
cld
mov
mov
mov
inc
xchg
push
into
daa
fucomi
pop
scas
sub
adc
mov
les
push
stos
ret
call
(bad)
loop
(bad)
mov
jne
scas
fsubr
movs
cmp
dec
fwait
or
push
xor
aad
mov
mov
mov
es
xor
add
out
shl
leave
frstor
cdq
sbb
movs
(bad)
cld
leave
xor
and
pop
push
push
dec
rcr
enter
cmp
push
pop
sti
jl
xchg
mov
sbb
jp
outs
xchg
and
cmp
sbb
push
push
sbb
mov
cmp
mov
jmp
mov
pop
or
or
call
movs
and
cli
inc
mov
mov
fs
mov
inc
popa
cmps
rol
xchg
push
into
fs
cmps
dec
mov
mov
mov
arpl
lahf
fldcw
and
xchg
popa
int
add
dec
push
scas
mov
enter
test
pop
retf
adc
push
xchg
(bad)
jp
pop
mov
xchg
cmp
fcmovnb
movs
adc
push
stos
jo
ja
fs
xor
add
setle
cs
add
cli
add
out
mov
pop
sub
(bad)
and
movs
(bad)
and
imul
pop
pop
or
adc
(bad)
xor
xchg
jmp
movs
pop
jge
repnz
adc
iret
(bad)
fidivr
scas
xchg
mov
cwde
mov
jbe
das
jbe
add
push
test
test
movs
cmps
jp
pop
cli
xor
pop
fnsave
and
aam
mov
(bad)
or
jb
cli
ss
push
add
arpl
pop
cmp
cli
mov
mov
pushf
cmp
mov
fmul
inc
fisttp
ss
mov
jnp
adc
and
push
std
and
sbb
pop
mov
adc
push
cmps
por
push
jne
pop
push
(bad)
and
add
retf
xchg
push
jge
shr
mov
int3
dec
mov
retf
and
add
sbb
mov
mov
stos
dec
movs
pop
mov
inc
fwait
mov
hlt
mov
nop
(bad)
adc
jne
cmp
mov
lea
xor
test
sub
jp
xchg
neg
push
pop
adc
clc
sub
test
fs
cmp
out
and
aad
mov
xchg
adc
imul
data16
push
mov
or
jle
lods
cdq
loopne
div
pop
imul
das
jmp
xor
cmps
mov
fdiv
retf
(bad)
and
add
cmp
imul
aas
xchg
pop
ins
mov
mov
sbb
hlt
idiv
mov
loope
scas
xchg
jbe
imul
movs
cmp
call
(bad)
cli
std
xor
push
cmc
fwait
jb
dec
mov
sbb
add
inc
aam
jl
xchg
pushf
(bad)
push
into
cmovle
cld
sub
cmp
sbb
stos
ret
pop
out
test
jle
mov
les
pop
je
jnp
jb
and
inc
out
stos
into
aad
sub
xchg
call
test
neg
xchg
loope
add
cmps
int
cmp
fdivr
adc
ins
mov
pop
(bad)
loop
mov
adc
xchg
ins
clc
and
daa
pop
mov
xor
xchg
xor
mov
cmp
cmp
adc
ror
jmp
mov
and
add
cmp
sbb
sbb
ret
or
mov
xchg
push
or
inc
outs
inc
fcomp
inc
jmp
iret
pop
and
mov
cmp
xor
data16
pop
lock
jmp
push
cmp
mov
mov
dec
stos
dec
je
lock
jne
mov
jl
sub
aas
fs
in
mov
cmp
cmps
pop
cmp
cmp
xor
xor
shl
in
push
sub
sar
push
scas
adc
fs
jno
shl
les
cmp
jl
fwait
mov
inc
jb
les
mov
and
add
cwde
test
ret
inc
inc
fld
into
scas
jg
cmc
jp
xchg
cdq
lods
pop
cmp
in
mov
cli
popa
mov
jmp
mov
mov
clc
xor
jp
or
inc
xchg
mov
adc
dec
jge
mov
mov
aas
pop
mov
das
and
hlt
rcl
fadd
sub
movs
fimul
add
aam
dec
pop
cld
jo
test
mov
movs
call
add
clc
cmp
xor
aam
inc
and
cmp
pushf
and
sbb
adc
int3
mov
sub
push
dec
xor
repz
out
and
mov
test
xor
mov
or
or
push
retf
cmp
jmp
cwde
setnp
loop
mov
xchg
push
or
sub
mov
jmp
adc
mov
pushf
cmps
dec
(bad)
jae
mov
jp
test
popf
push
mov
ds
adc
stos
dec
pop
dec
call
dec
movs
push
lods
mov
pop
pushf
ja
imul
xchg
loopne
sub
mov
mov
ror
xchg
fs
push
xor
xchg
mov
mov
es
(bad)
pop
loop
(bad)
int3
mov
nop
adc
jae
sub
std
push
int
mov
pop
push
ret
or
inc
sbb
sbb
enter
cmps
pop
lods
fidiv
mov
mov
cmp
add
icebp
push
and
retf
jns
push
mov
push
cdq
(bad)
mov
retf
push
rcl
and
mov
push
ret
add
mov
lahf
call
sbb
sbb
hlt
or
bnd
add
jge
xor
hlt
outs
aad
sbb
cmp
sbb
sub
jno
inc
push
push
push
fisttp
xchg
setl
push
(bad)
dec
ja
bound
scas
or
mov
js
bound
addr16
pop
mov
xchg
ds
subps
cmp
mov
xchg
inc
inc
or
cmps
mov
sbb
hlt
movs
jmp
int
push
daa
fstp
add
pop
jno
dec
jl
pop
ja
scas
mov
test
inc
dec
inc
add
retf
mov
movs
jns
sbb
iret
sbb
push
test
xlat
std
cdq
iret
in
dec
jne
inc
cmp
pop
jnp
dec
in
xchg
lods
adc
pop
movs
(bad)
and
push
mov
into
cmp
pop
(bad)
lahf
jmp
cmc
mov
jbe
xchg
lods
ins
dec
push
sub
movs
jne
ret
iret
xor
ds
test
stos
pop
pop
aad
imul
push
pop
sti
paddsb
xor
mov
dec
sbb
(bad)
push
push
mov
fwait
add
sub
sbb
mov
js
jo
fld
imul
iret
aam
pop
sti
icebp
dec
sti
out
fcmovbe
dec
test
mov
in
jbe
jbe
sub
ficomp
ret
adc
dec
add
inc
cli
scas
dec
in
cmc
inc
mov
ins
sub
test
sub
ret
mov
or
or
shl
mov
fiadd
rcr
ss
pop
movs
retf
add
fstp
loope
push
outs
in
or
push
sahf
push
jmp
jmp
lds
hlt
sub
pop
mov
mov
lock
push
add
mov
shr
aam
ss
or
jp
outs
xchg
mov
inc
ins
mov
pushf
adc
fbstp
mov
popf
mov
hlt
xor
out
mov
pop
push
call
jns
xchg
ins
retf
jno
push
mov
scas
inc
out
cli
or
or
mov
sub
or
jnp
or
add
push
mul
scas
iret
sar
lock
ds
test
repnz
mov
xchg
mov
push
push
je
push
sbb
sbb
inc
jnp
fstp
adc
loopne
xlat
jmp
dec
movs
sbb
lock
adc
sub
pop
in
and
out
cmp
int3
mov
jns
int3
mov
add
adc
inc
repz
je
std
or
mov
lea
or
mov
inc
jo
fnstenv
retf
mov
sbb
mov
rcl
scas
into
out
retf
mov
jg
jle
jne
sbb
or
push
jl
out
mov
mov
loop
and
es
sub
pop
pop
jmp
sahf
aas
sbb
push
fbstp
(bad)
(bad)
jne
stos
lock
fs
out
cmp
int3
cmp
push
dec
add
mov
aam
cmp
daa
nop
sbb
sbb
sbb
test
int3
ins
jno
xor
add
add
sbb
cld
fisttp
inc
xor
repz
test
mov
push
cmp
mov
jl
xor
or
ja
shl
dec
retf
call
test
pop
xor
mov
push
push
mov
mov
pop
or
xchg
fild
repnz
mov
inc
jo
add
push
mov
scas
(bad)
pop
out
sar
loopne
inc
jnp
pop
neg
or
mov
cmp
out
int
test
add
push
xchg
xor
je
xor
mov
and
fdivrp
mov
inc
or
inc
jle
xor
jp
stos
movs
sti
stc
and
div
fs
dec
adc
inc
sub
push
mov
and
or
jmp
stos
inc
retf
pop
inc
jmp
and
imul
jnp
push
in
call
test
(bad)
push
mov
xor
in
sub
inc
fidivr
lock
arpl
jns
mov
cmp
aas
sbb
cmp
cmps
push
xchg
xor
ss
mov
cmp
dec
dec
movs
arpl
mov
int3
cli
in
nop
jnp
jne
adc
(bad)
mov
mov
ror
push
je
neg
fucomi
dec
or
jae
lods
push
movs
call
inc
rol
lds
push
or
or
add
enter
dec
push
and
sub
xlat
adc
xor
cdq
int3
mov
mov
fbld
push
pop
and
or
outs
xor
mov
sub
mov
mov
retf
add
add
sbb
jl
in
push
fisttp
outs
lods
call
pop
mov
cmp
aam
ss
and
loopne
lahf
outs
popf
stos
daa
setno
jnp
mov
jo
push
xchg
sub
iret
outs
adc
imul
adc
dec
mov
shl
jg
aaa
retf
cmc
ret
rcr
mov
fld
jle
pop
dec
sub
jg
push
mov
sub
into
outs
cmp
sbb
or
pop
inc
outs
dec
into
pop
fdivr
clc
ret
and
cld
or
cmp
pusha
in
mov
dec
mov
pusha
or
ds
add
sbb
xchg
xchg
dec
(bad)
dec
xchg
(bad)
adc
rcr
daa
jmp
es
lds
bound
inc
xchg
adc
mov
popa
jnp
ret
jns
test
dec
mov
jp
loop
or
cmp
mov
cmp
pop
pop
repnz
fld
sahf
in
cmp
in
xchg
mov
out
ins
out
scas
rcl
dec
push
cli
cmp
call
pop
lea
mov
adc
pop
inc
hlt
ins
(bad)
cs
(bad)
iret
add
xchg
scas
sub
sbb
inc
jne
data16
mov
out
jmp
popf
out
fimul
out
dec
jg
jns
outs
(bad)
addr16
sahf
inc
imul
mov
mov
sbb
jno
js
sbb
lods
xor
jmp
sti
sub
dec
push
xor
sar
xchg
and
mov
dec
outs
je
mov
cmps
push
aad
movs
lahf
jb
je
mov
rol
dec
pop
lea
dec
xor
scas
or
jbe
stos
xor
and
pusha
fs
xor
ror
mov
mov
and
je
jae
push
ds
jbe
or
mov
(bad)
dec
xor
dec
push
call
adc
jns
pop
jle
cmp
ret
push
retf
or
loop
lds
adc
scas
pushf
cmc
jmp
pusha
int
mov
sbb
add
in
push
cli
je
cwde
mov
hlt
repz
ret
xor
and
lahf
stos
iret
jl
push
mov
or
inc
add
movs
push
das
cmp
popa
scas
adc
retf
fidiv
fcom
mov
sbb
adc
mov
sbb
sub
cli
(bad)
repnz
mov
add
loop
jae
add
and
lods
js
mov
push
cmps
sub
mov
push
pop
cs
stos
pop
ret
add
cmps
or
pop
mov
xor
pop
pop
mov
xchg
int3
pop
xor
scas
dec
pop
add
bound
add
popf
pop
xor
fldcw
jmp
jmp
adc
add
stos
hlt
xlat
push
jp
shl
ja
xchg
call
movs
dec
xlat
mov
inc
cli
jle
adc
dec
mov
mov
pushf
jmp
lods
or
loopne
mov
popa
test
lods
ret
dec
cmp
sbb
mov
sbb
mov
push
stos
(bad)
ret
sbb
fist
icebp
dec
int3
inc
outs
aam
xchg
push
jne
sub
push
popf
xor
add
adc
dec
mov
ja
clc
fs
fadd
cmp
popa
cmp
hlt
and
dec
push
dec
sub
sahf
xchg
outs
mov
or
and
dec
cmp
ins
sub
fsub
push
pop
push
data16
je
out
movs
loopne
cld
sbb
sbb
aam
clc
shl
je
xor
call
test
retf
xchg
sbb
xor
and
pop
cmps
fiadd
sub
inc
je
data16
data16
add
xor
dec
inc
fidiv
(bad)
xchg
fs
arpl
xchg
pop
sub
aaa
mov
into
sbb
inc
hlt
mov
arpl
scas
repnz
push
inc
pop
rcr
(bad)
hlt
mov
and
aaa
cmps
(bad)
in
add
inc
in
test
cwde
inc
lock
inc
into
aaa
sub
mov
sbb
jo
pop
cwde
adc
and
clc
or
add
int3
hlt
loop
dec
lods
imul
(bad)
and
popf
fwait
fs
and
cmp
sub
add
dec
pop
add
in
neg
out
dec
nop
sbb
jg
ins
add
mov
out
adc
cmps
push
xchg
and
inc
test
add
sub
ret
pop
cmc
retf
mov
sbb
push
or
iret
pop
inc
ret
and
out
lods
push
out
loopne
in
and
pusha
(bad)
jmp
sub
std
dec
xchg
mov
or
call
xchg
pop
add
or
(bad)
push
addr16
adc
rcr
and
shl
int3
or
rcl
idiv
lds
(bad)
test
adc
cmc
xor
jp
dec
cmp
xchg
jb
push
cdq
cwde
mov
xchg
aad
pop
in
gs
xor
add
shl
jne
mov
add
test
hlt
movs
cli
outs
mov
cwde
dec
xchg
pop
adc
mov
jnp
xlat
sbb
pushf
mov
add
pop
call
pop
jle
adc
sbb
jmp
das
leave
xor
inc
mov
movs
imul
scas
push
xor
ret
jp
xchg
xor
sbb
pop
nop
sub
das
mov
(bad)
mov
adc
pop
cmps
idiv
addr16
and
inc
ror
adc
pushf
sar
cwde
cmp
push
inc
jmp
pop
push
push
rcl
dec
push
xor
cmp
ret
dec
dec
jne
out
jno
movs
push
(bad)
int3
inc
cli
or
dec
data16
aad
mov
fist
pusha
xor
add
mov
adc
add
sub
js
and
sti
adc
test
push
sub
cs
mov
xor
dec
out
movs
jge
(bad)
mov
xchg
jle
retf
pusha
ja
in
cmp
shr
shr
mov
sub
jnp
sar
ret
pop
sti
push
fstp
xor
mov
in
mov
xor
mov
iret
mov
xchg
cmp
bswap
imul
or
leave
gs
xchg
push
lods
add
(bad)
jo
js
mov
repz
out
jmp
xchg
dec
jo
ror
adc
and
out
and
imul
add
outs
push
pop
imul
into
(bad)
(bad)
fwait
shr
mov
jae
mov
mov
mov
dec
or
inc
mov
ret
gs
std
pop
jnp
arpl
cmp
mov
jo
mov
mov
jmp
cmps
retf
mov
popa
sbb
and
les
test
jl
jmp
adc
retf
sub
loop
push
mov
mov
push
call
call
xchg
and
or
mov
dec
mov
push
xor
rol
sar
dec
adc
mov
lods
push
jne
gs
sub
cli
jecxz
cmp
out
pop
mov
or
clc
pop
cmp
jmp
push
iret
add
stos
rcr
xor
lahf
out
call
dec
neg
rol
jne
jl
and
cmp
in
cwde
repnz
movs
rcr
retf
pusha
and
and
cmp
and
jbe
pop
test
push
pop
xchg
push
xchg
scas
inc
call
stos
xchg
xchg
sbb
or
rcr
or
xor
aas
(bad)
jp
cli
push
mov
dec
or
adc
retf
rol
inc
cmp
out
imul
test
jecxz
mov
mov
ret
push
movs
mov
call
cwde
dec
cmp
jmp
or
xor
ins
lds
jg
xor
cmp
jbe
loope
sbb
jnp
cmps
jae
pop
sti
jle
cmp
shl
leave
inc
nop
cmp
mov
hlt
call
jecxz
jmp
push
push
mov
loop
sti
adc
int3
(bad)
adc
sub
dec
aam
adc
mov
adc
and
add
addr16
lods
inc
and
pushf
cmp
sbb
mov
mov
or
clc
(bad)
and
jne
ja
fwait
mov
ror
mov
sbb
mov
les
retf
in
rcl
(bad)
or
inc
daa
femms
dec
push
mov
inc
imul
arpl
iret
retf
sti
retf
retf
sbb
dec
adc
pop
mov
mov
fwait
inc
sbb
stc
das
xchg
push
push
leave
sbb
xchg
mov
mov
sbb
stos
or
push
cmps
call
imul
call
dec
(bad)
call
cld
sub
nop
aad
dec
fidiv
movs
or
pop
inc
icebp
shl
push
shl
adc
dec
and
jb
adc
(bad)
push
cli
out
aas
inc
les
pushf
xor
inc
shl
xor
mov
mov
or
push
fwait
stos
and
jnp
addr16
adc
or
mov
in
outs
in
cmp
push
lock
cmp
cld
mov
movs
cwde
ss
imul
sub
cmp
out
je
add
es
jle
mov
ret
push
dec
aad
es
fs
test
and
mov
dec
adc
mov
ss
sub
dec
(bad)
adc
add
sahf
mov
adc
ficomp
add
leave
aaa
lods
hlt
into
inc
out
dec
pop
cmp
outs
add
inc
mov
(bad)
(bad)
shl
xchg
dec
and
mov
cs
inc
sub
jl
sbb
sub
cmp
jne
dec
out
jne
dec
call
sub
inc
xor
or
cmp
pop
xchg
mov
pop
rcr
popf
add
xor
aas
add
ins
ins
dec
fidiv
ror
or
fist
adc
cmps
les
push
mov
push
jmp
outs
dec
shl
xor
jl
repnz
jg
pop
mov
pop
lds
loopne
adc
add
add
call
scas
retf
add
mov
hlt
and
jne
xor
push
mov
dec
xchg
lahf
and
sub
inc
retf
int
and
lock
adc
lea
(bad)
in
cmp
sbb
ins
xchg
inc
in
imul
xchg
sub
fbld
test
loope
mov
in
xor
nop
enter
mov
hlt
stos
jne
push
popa
pop
fcmove
jns
and
jmp
(bad)
into
sbb
ins
ins
push
mov
loopne
and
jmp
dec
xchg
pop
add
mov
inc
scas
push
int
fdiv
popf
std
xor
into
adc
or
or
out
(bad)
xchg
les
mov
mov
or
mov
mov
dec
mov
add
cli
(bad)
add
push
out
hlt
add
leave
push
mov
fmul
mov
test
xlat
(bad)
or
call
cmp
sub
cmp
es
mov
call
fldenv
sbb
push
sub
add
xor
mov
mov
mov
outs
jbe
mov
jmp
lock
fs
popa
nop
movs
imul
xor
test
add
mov
fisttp
and
push
mov
std
add
loopne
add
xchg
out
dec
pop
aaa
xchg
jae
push
loope
xor
clc
cmp
out
test
cli
and
xchg
mov
cmps
hlt
cmp
cld
js
jns
pop
shl
sbb
adc
ffree
shl
push
jmp
or
xchg
sub
sub
repz
xchg
xchg
sbb
mov
push
jle
or
loope
inc
adc
and
mov
and
push
pushf
and
push
sub
call
push
test
loopne
cdq
stos
push
pop
sub
or
repz
arpl
xchg
xlat
push
or
xchg
xor
mov
je
pop
repz
mov
sbb
jge
lods
shr
shr
gs
jl
inc
ret
inc
fs
retf
cmc
mov
inc
enter
add
mov
adc
retf
or
mov
xchg
xor
jmp
outs
sahf
pop
mov
add
cmp
int
lds
xor
cwde
xchg
cli
pushf
xchg
aam
jl
sub
add
fwait
sub
pushf
cmps
xchg
mov
mov
lock
jmp
fwait
pop
test
add
movs
xor
js
test
inc
cmps
pop
mov
push
sub
mov
dec
sub
jo
ins
pop
sub
(bad)
pop
cwde
ins
retf
push
(bad)
sbb
dec
or
or
cmp
sub
cmp
and
inc
test
leave
ss
jmp
push
in
cs
scas
fmul
rol
xchg
mov
fcomi
in
add
push
jnp
cmp
cwde
mov
sahf
movs
xchg
inc
mov
push
(bad)
test
mov
push
into
xor
push
xchg
add
gs
add
ins
rcl
loope
arpl
mov
das
xor
loope
mov
call
bound
out
jmp
or
mov
mov
sti
sbb
out
cmc
fiadd
sub
inc
fwait
cmp
stos
jae
dec
pop
test
scas
mov
test
jp
pop
sub
push
push
xchg
int
fmul
movs
test
dec
mov
push
cwde
mov
push
imul
sub
dec
neg
add
push
test
push
push
push
data16
jle
or
mov
push
into
popa
sbb
in
cmp
xor
or
sub
cmp
imul
add
aas
mov
ins
xor
xlat
fld
retf
cs
cmp
xchg
mov
xchg
xchg
adc
xor
lods
stc
aaa
dec
aaa
rcl
add
jne
stos
sbb
add
sahf
lods
jp
std
lock
adc
jno
test
das
inc
jo
out
mov
adc
xchg
test
in
mov
sub
les
(bad)
shr
movs
jnp
in
inc
shl
xor
mov
sbb
mov
das
mov
sti
test
jge
sub
icebp
mov
test
stos
mov
rcl
addr16
jae
cs
movs
les
popf
mov
pop
fadd
lds
retf
mov
nop
pop
nop
push
add
sub
repz
in
(bad)
(bad)
mov
or
cmp
imul
jbe
js
call
push
jmp
(bad)
out
movs
jb
mov
lods
jp
jo
nop
sbb
div
(bad)
jmp
dec
jns
cmovbe
xchg
and
call
in
push
mov
or
xor
xchg
add
test
cmp
mov
stc
push
and
inc
shl
add
les
cwde
jbe
fdivr
or
and
xchg
cmp
push
dec
mov
test
mov
aas
repnz
inc
xor
mov
rcr
aad
xchg
or
mov
xchg
sbb
mov
pop
int3
sbb
in
stos
pop
or
stos
fldenv
jle
lods
jmp
es
add
sbb
cs
sbb
jp
sub
sub
pop
xor
cmc
adc
and
pop
xchg
mov
outs
and
rcr
mov
and
xchg
push
inc
jno
jno
dec
ss
adc
cmp
test
cmps
or
sub
push
xchg
or
pop
movs
cdq
in
jb
movs
stos
in
pop
jmp
xlat
xchg
pop
fdivrp
icebp
push
stc
push
xor
scas
cmp
popf
dec
ins
push
sub
jp
sbb
test
xor
pushf
jmp
shl
push
add
daa
aad
ror
or
cld
and
loop
dec
cwde
xchg
inc
xchg
js
or
mov
mov
test
push
jecxz
sbb
mov
jg
sbb
imul
test
je
jno
test
ror
cmp
fdivr
add
sti
retf
push
loop
jnp
inc
push
mov
pop
into
jne
outs
imul
int
sub
add
push
xchg
jmp
lods
js
ret
inc
mov
imul
(bad)
iret
int3
jo
mov
sbb
mov
jmp
sbb
xchg
inc
mov
mov
pop
sbb
mov
lods
es
ja
scas
(bad)
ds
xchg
dec
in
arpl
pop
mov
scas
lea
enter
mov
or
xor
test
jle
test
fstp
dec
xchg
xchg
mov
add
xchg
and
mov
cli
sub
push
pop
xchg
xor
mov
sahf
adc
cmc
and
and
pop
scas
dec
cmp
sub
fmulp
lock
push
idiv
xchg
mov
aad
outs
sbb
test
push
pmaddwd
inc
js
rcr
or
stos
add
(bad)
stc
jg
mov
inc
cmps
les
jge
outs
cli
imul
movs
les
sbb
push
loop
(bad)
call
cmp
lods
xor
fcomip
shl
arpl
jle
cs
sub
adc
aaa
(bad)
sahf
fisttp
jnp
jnp
stos
outs
pop
cmc
fwait
sbb
push
mov
mov
sbb
jp
mov
push
pop
in
push
cmps
int
xchg
fisttp
mov
inc
pop
add
retf
mov
pop
int3
or
push
fstp
and
ins
scas
jl
push
hlt
push
inc
adc
inc
push
test
out
pushf
out
pop
adc
sti
ins
xor
add
cld
lods
repnz
clc
cmp
pmuludq
out
push
arpl
cmp
jnp
repnz
sti
or
sbb
sbb
sbb
xchg
mov
add
inc
pop
sbb
in
inc
shl
call
sub
pop
ror
fs
jl
fcom
jge
xchg
out
sbb
dec
outs
mov
pop
outs
or
and
stc
test
aad
movs
dec
je
enter
addr16
push
jp
push
xchg
push
cmps
je
inc
xchg
push
fs
mov
(bad)
push
popa
int3
mov
test
xchg
push
scas
cmps
mov
mov
mov
inc
retf
movs
sub
or
icebp
push
pop
push
cmps
push
mov
inc
and
repnz
(bad)
jmp
repnz
outs
fcomp
lea
js
sub
jl
in
aas
cmps
shr
jl
(bad)
mov
add
cwde
pushf
jle
pop
jg
jle
pop
lahf
jg
cli
or
add
ror
dec
or
jle
inc
inc
les
cmps
je
mov
push
xchg
and
xor
and
hlt
pop
call
pop
xor
inc
aas
adc
and
push
and
mov
pusha
mov
sbb
(bad)
or
loop
adc
mov
mov
push
int3
push
movs
pop
and
sbb
cmp
pusha
cmp
cli
sbb
out
cmps
cs
sahf
mov
fcmove
xchg
leave
test
and
mov
das
hlt
mov
scas
push
neg
gs
je
xor
sub
mov
loopne
hlt
out
or
jmp
push
push
fs
imul
or
add
repnz
and
or
mov
sbb
add
out
xchg
int
mov
xor
scas
jmp
mov
fisttp
push
mov
into
dec
mov
pop
sahf
dec
adc
ins
test
pop
int3
inc
lahf
pop
scas
add
or
cmp
or
es
jg
jle
ret
mov
inc
imul
rcl
push
lods
addr16
adc
and
cli
call
stos
test
mov
sbb
sub
fcom
(bad)
ds
int3
push
ficomp
(bad)
mov
xchg
cmps
pop
pop
sub
push
mov
aam
inc
and
in
es
outs
mov
pop
jp
sti
inc
retf
adc
dec
clc
jp
outs
ss
cmp
push
fnstcw
js
mov
fs
xchg
or
lds
lahf
fs
dec
adc
adc
sbb
jge
inc
nop
mov
cmp
not
seto
imul
rcl
test
in
aas
icebp
sti
mov
pop
mov
(bad)
sbb
xchg
pop
xor
je
push
xchg
fdiv
pop
shr
ins
in
cli
in
or
inc
movs
jno
test
js
adc
imul
retf
les
cwde
pop
sar
ins
rcr
test
mov
pop
cli
addr16
(bad)
or
fs
fcmovu
aam
movs
sahf
jmp
xchg
pop
push
rcl
in
push
adc
dec
pop
pop
push
sub
jl
xor
pop
icebp
push
rcr
popa
add
cmp
jecxz
stc
fcomp
fs
push
pop
cld
jbe
fs
dec
test
and
add
mov
sbb
ss
stc
push
ret
jae
sub
mov
movs
xor
imul
mov
pop
push
rcr
icebp
pop
ss
hlt
mov
outs
fsub
fiadd
fwait
push
(bad)
movs
dec
bound
mov
cmp
lds
adc
mov
clc
push
or
pop
xor
sbb
jle
ret
xlat
sbb
xor
xor
or
retf
in
mov
mov
mov
push
les
jo
into
repz
sbb
sub
stos
rcr
inc
pushf
leave
repnz
mov
(bad)
dec
sbb
add
adc
cmc
push
sub
jmp
jp
dec
out
test
mov
mov
push
lods
adc
and
sbb
pop
xor
fs
mov
dec
call
fisub
inc
lahf
jl
in
rcl
xchg
xchg
stc
scas
jno
fimul
jmp
shl
pop
jp
leave
fs
mov
mov
ins
cmp
loopne
jbe
rcr
lods
add
(bad)
js
xor
cli
inc
movs
fnstenv
xchg
jbe
out
pop
dec
push
retf
xchg
jmp
or
jb
pop
scas
mov
xchg
mov
pop
call
fistp
xor
sbb
pop
xchg
mov
cli
push
retf
dec
fst
loopne
mov
out
test
adc
in
lock
(bad)
aam
movs
mov
xchg
sbb
je
fadd
and
jb
add
sub
xor
sbb
sbb
pop
mov
push
mov
adc
sti
int
mov
add
sahf
bound
adc
cmp
mov
xchg
loop
mov
push
ss
mov
das
sbb
adc
adc
call
and
loopne
mov
jg
cmps
je
xor
push
sbb
(bad)
std
loop
or
outs
xor
lahf
add
adc
xchg
inc
loop
xchg
test
in
pusha
sub
sbb
push
mov
mov
xchg
inc
or
and
outs
ficom
cmps
jbe
fwait
inc
pop
pusha
sub
leave
sub
gs
inc
jne
mov
add
inc
(bad)
fstp
and
sub
test
scas
sub
add
aam
in
cmp
pop
jmp
fist
outs
sub
test
push
outs
inc
sbb
sub
test
push
ins
cmp
popa
adc
pushf
inc
call
jb
call
pop
clc
les
je
pushf
push
inc
add
mov
bound
add
add
xchg
ds
mov
jae
mov
mov
xlat
push
cmp
outs
adc
fiadd
sbb
mov
retf
xor
add
add
out
jge
gs
movs
sub
lods
mov
mov
add
hlt
cmp
mov
pusha
and
mov
jmp
cli
test
jne
cmp
(bad)
mov
cmp
jns
mov
stos
pop
sahf
dec
std
cmp
sub
xchg
test
loop
mov
aam
cld
push
xchg
test
hlt
stos
and
std
inc
inc
sbb
xchg
les
dec
add
in
mov
inc
or
or
push
ret
mov
js
dec
in
pop
jb
sub
sbb
fbld
imul
lods
and
clc
fwait
gs
cmps
inc
xchg
xor
sbb
fs
add
sbb
aaa
cmc
outs
fs
ss
(bad)
sbb
not
fstp
mov
(bad)
sub
pop
enter
push
rol
inc
dec
sbb
inc
jae
sub
cli
adc
mov
call
sbb
outs
cmp
mov
push
and
inc
sub
fwait
cmc
retf
enter
ins
sbb
xchg
vmovups
test
shr
sub
add
sub
mov
pop
lea
or
cwde
mov
test
sub
pop
not
(bad)
dec
ss
pop
sbb
cmp
sahf
jmp
test
in
dec
test
in
aam
xor
xchg
mov
iret
cmp
cmc
xor
arpl
cmp
mov
push
in
movs
push
mov
push
pop
inc
inc
jae
dec
xchg
pop
mov
out
sub
int
xor
ss
test
mov
sub
pusha
pop
mov
sbb
jmp
cmp
fisttp
int3
stc
and
sub
inc
dec
push
test
jl
inc
iret
push
cmps
icebp
fdiv
mov
or
push
ret
xor
push
ja
stc
pop
mov
xor
push
rep
sbb
out
inc
xor
sub
fwait
out
or
imul
jb
pop
jns
push
push
cmps
mov
push
or
mov
popf
inc
xchg
out
add
dec
adc
or
call
fadd
xchg
push
xor
sbb
fs
adc
out
mov
(bad)
adc
in
xchg
pop
(bad)
or
les
lea
xchg
aam
xchg
scas
add
sub
and
adc
les
pushf
pushf
sbb
arpl
add
sahf
xchg
in
aam
repz
jae
jne
jae
sub
jg
jb
adc
addr16
adc
jge
xor
aam
in
jne
and
dec
jnp
ret
popf
mov
js
dec
pop
fiadd
out
call
mov
leave
gs
jle
out
xchg
mov
std
mov
sbb
and
jb
push
out
fnstcw
and
repz
addr16
sar
xchg
pop
ror
cmp
mov
jge
imul
mov
xor
pop
cwde
js
pop
push
fisub
mov
nop
push
js
gs
je
ja
mov
dec
push
cmp
pop
in
cmc
jmp
cmp
loopne
add
(bad)
and
lahf
ja
mov
jle
and
adc
fdivr
add
rol
test
stos
sbb
xchg
mov
shr
mov
jp
mul
call
sbb
push
dec
xor
stos
fidivr
sbb
jo
xor
in
fisttp
cs
lahf
mov
mov
fs
mov
dec
in
xor
retf
fldln2
jb
push
adc
inc
ret
push
test
xor
push
aaa
adc
sbb
mov
inc
int
pop
push
aaa
or
or
mov
cmp
mov
ror
imul
push
push
push
xchg
ss
not
out
cwde
inc
mov
sub
push
ins
mov
out
(bad)
aam
fsubr
xor
(bad)
nop
retf
mov
fisub
mov
fbld
data16
inc
mov
add
and
dec
ret
and
mov
repz
daa
(bad)
and
ins
xor
and
push
in
cmc
outs
in
and
mov
or
push
fwait
gs
xor
sub
cmc
cmp
mov
in
movs
adc
cli
jne
mov
dec
pop
add
pusha
pop
mov
adc
and
das
sbb
push
push
inc
les
stos
jne
push
add
icebp
sbb
and
sub
xor
cmp
mov
pop
loop
adc
dec
out
sub
fld
cmp
push
xchg
cmp
cmp
or
pop
sub
mov
stos
and
fs
cmps
sbb
fldcw
lds
int
idiv
rol
dec
mov
xlat
sub
(bad)
xchg
xor
retf
mov
xchg
jle
aam
sub
inc
xchg
or
addr16
not
hlt
and
push
cmp
jmp
cld
and
stc
cli
inc
mov
rcl
(bad)
sub
xchg
mov
dec
test
dec
push
dec
sti
jmp
cmp
(bad)
sbb
cmp
jns
adc
sub
rcl
dec
leave
(bad)
aad
sbb
jo
dec
sbb
idiv
in
cmp
inc
mov
jp
jle
xchg
inc
inc
je
into
pop
or
hlt
dec
pop
ficom
and
and
movs
data16
sbb
push
push
imul
jmp
repz
xor
jmp
mov
dec
sbb
jmp
loope
repnz
sahf
out
stos
iret
jmp
clc
stos
push
or
mov
rep
or
push
jmp
cmps
fstp
int3
(bad)
sti
arpl
test
push
mov
imul
xor
test
and
test
rep
xchg
xchg
mov
cmp
(bad)
or
int3
loope
(bad)
lds
jp
jg
xchg
inc
dec
inc
mov
mov
fistp
les
dec
inc
dec
mov
xchg
xchg
es
nop
call
sbb
pusha
call
movs
or
(bad)
xchg
jne
push
aad
fstp
mov
movs
dec
xchg
pop
hlt
enter
out
dec
js
dec
ss
rol
cmp
inc
jmp
adc
jb
xchg
cmps
or
xchg
jmp
xchg
add
aaa
pop
sub
mov
mov
mov
scas
push
xchg
pop
outs
fiadd
mov
and
push
push
adc
sub
(bad)
mov
mov
inc
call
add
stc
push
retf
lds
int3
aad
jb
popf
lahf
jmp
cmp
sti
outs
sub
imul
lds
adc
fcmovnb
add
fwait
xchg
adc
or
mov
stos
out
push
lock
(bad)
dec
in
fs
or
cli
stos
iret
xchg
inc
stos
xchg
push
or
xor
and
jmp
out
movs
cmps
scas
hlt
int
call
test
dec
mov
js
cmc
cmp
jbe
sub
loop
push
xor
lahf
loopne
or
mov
push
popf
sar
mov
clc
and
mov
adc
or
sbb
jp
not
xchg
and
fldenv
push
out
xchg
wrmsr
cmc
jmp
pop
push
mov
das
push
dec
add
loop
lods
mov
imul
cmp
or
jp
call
dec
xchg
mov
out
cmp
and
push
mov
cld
xchg
or
fs
or
sub
push
add
sbb
xor
inc
mov
je
clc
push
outs
mov
dec
fild
in
mov
(bad)
sbb
hlt
imul
mov
xor
cli
push
xor
sub
fnstenv
ss
je
mov
cli
mov
mov
es
cmps
cmc
jecxz
stc
pop
or
adc
pop
(bad)
xlat
push
ficomp
sbb
call
inc
push
cli
sbb
cmp
in
cmps
push
xchg
div
pop
add
cmp
or
ficom
add
sub
xor
mov
cwde
mov
xchg
sbb
lahf
mov
xchg
sub
ss
out
in
(bad)
in
sbb
and
push
fsub
pushf
inc
xor
or
xor
push
ficom
inc
cmp
xchg
xlat
daa
movs
out
lds
dec
mov
xor
stos
loop
adc
repnz
aam
in
push
cmp
enter
adc
aaa
fcom
aam
and
jmp
nop
or
fisttp
sub
je
jmp
test
pushf
test
movs
stos
imul
test
cmc
jno
cmp
jp
int
lds
scas
jb
inc
cdq
sub
mov
push
cdq
rcr
sbb
xor
cmp
mov
imul
outs
xchg
mov
push
dec
inc
jmp
or
cmp
lahf
in
push
fidiv
fcom
adc
fldcw
outs
retf
jecxz
iret
enter
xor
cs
in
mov
ins
addr16
jl
mov
call
add
push
je
sar
add
popa
sub
clc
xchg
cmp
pop
rol
xor
das
add
(bad)
fcomp
push
mov
and
dec
inc
ja
not
maxps
shl
inc
jp
push
dec
add
(bad)
cwde
les
loope
retf
cmps
push
stos
lahf
jmp
clc
mov
jmp
pop
dec
mov
or
pop
jne
call
cmps
in
aam
inc
inc
xchg
adc
adc
stos
and
inc
adc
mov
or
pop
gs
hlt
les
aam
sbb
inc
push
pop
adc
test
sahf
sub
retf
fs
ss
or
jp
adc
pop
xor
mov
ds
xor
add
adc
in
xor
dec
pop
outs
sbb
data16
push
xchg
dec
cwde
and
stos
cwde
inc
pop
inc
call
(bad)
sbb
mov
enter
adc
je
pop
retf
cwde
pop
les
movs
dec
cdq
out
xor
add
cmp
pop
test
movs
out
stc
test
and
fs
xchg
sub
(bad)
aaa
pushw
aam
add
jbe
mov
cmps
je
cli
inc
xchg
pop
out
adc
mov
cli
into
sub
xor
cmp
call
loop
out
pop
sbb
pop
bts
cmp
sub
rcl
into
dec
inc
int3
not
sbb
push
xchg
jmp
sbb
cmp
jno
retf
icebp
push
popa
and
or
mov
daa
inc
cmp
retf
jnp
rcr
dec
std
mov
scas
xchg
mov
push
mul
bound
xchg
adc
and
rcl
add
(bad)
push
inc
and
jne
(bad)
stos
mov
xor
imul
cmp
rol
int3
dec
in
mov
dec
nop
sub
sub
dec
adc
sbb
and
ds
adc
dec
in
stos
xchg
leave
stos
mov
dec
and
inc
call
imul
and
ja
mov
xchg
jns
dec
into
pmuludq
add
push
clc
sbb
pop
jle
je
sub
xchg
cwde
test
inc
(bad)
push
lock
jl
shl
jmp
ror
cli
cmp
mov
mov
(bad)
fwait
xchg
or
pop
push
push
test
or
push
(bad)
adc
cmc
sub
(bad)
out
pop
and
icebp
aas
cdq
addr16
xchg
xchg
pop
stc
ja
mov
dec
push
adc
xchg
clc
push
mul
sub
(bad)
fst
leave
pop
lods
dec
sbb
data16
test
adc
bnd
jnp
movs
xchg
and
leave
jmp
xor
or
mov
push
push
cdq
scas
dec
dec
sub
xchg
sbb
cld
pop
iret
add
(bad)
fimul
dec
call
cwde
aaa
out
cmc
aam
mov
or
sub
push
leave
fstp
les
ss
lods
add
xor
sbb
fbld
(bad)
call
imul
jg
pop
dec
je
ja
cmps
adc
xor
(bad)
push
or
fcomi
ja
sub
xor
add
pop
push
cmps
jmp
(bad)
aad
pop
jmp
cmp
inc
enter
pop
ret
cli
cmps
fidiv
xchg
leave
cmp
fimul
adc
into
int3
push
mov
pop
pop
xchg
xchg
mov
inc
xchg
sbb
out
aad
movs
and
jmp
test
cmp
mov
and
jne
ror
(bad)
cmp
push
mov
retf
sbb
int
jne
loopne
pop
push
(bad)
sti
jge
outs
into
adc
outs
sub
int3
dec
jg
jne
call
cmps
test
std
cmp
pop
add
lods
jae
(bad)
rcr
pushf
cmps
imul
push
push
(bad)
lahf
iret
mov
pop
add
lea
icebp
adc
data16
stos
repnz
test
mov
and
mov
push
push
sub
xlat
leave
(bad)
fwait
test
and
push
or
pop
mov
jmp
jp
je
sti
movs
sbb
fbstp
test
les
push
jns
mov
sub
addr16
push
retf
sbb
ss
xchg
ja
mov
pusha
mov
fwait
xchg
push
jmp
adc
xor
push
(bad)
cwde
push
push
pop
mov
sbb
mov
push
adc
(bad)
movs
sub
movs
into
jnp
test
xchg
inc
enter
push
call
or
retf
cs
aad
retf
add
ror
push
xchg
push
pop
int3
nop
aam
into
mov
sar
xchg
jmp
enter
arpl
sahf
push
xchg
jmp
(bad)
call
and
imul
jne
mov
loope
xor
cmp
mov
sbb
mov
jecxz
dec
or
xchg
dec
push
push
mov
dec
add
mov
mov
leave
xchg
data16
push
mov
sub
xor
in
pop
ret
fsubr
jne
test
in
lock
fld
add
xor
inc
enter
or
push
fild
in
test
clc
mov
pop
push
call
jmp
add
sub
test
push
call
pop
adc
mov
lock
push
sub
adc
push
xchg
xor
(bad)
cmc
rcl
lds
ja
test
into
mov
ja
mov
sub
or
(bad)
arpl
mov
and
test
dec
retf
mov
mov
inc
xor
jne
imul
adc
jb
(bad)
pop
inc
xlat
mov
push
add
js
jbe
gs
mov
sub
push
imul
pop
mov
movs
cmp
movs
or
test
(bad)
retf
sar
(bad)
mov
add
adc
jno
call
stos
jb
inc
pop
out
jne
push
cdq
mov
push
test
enter
push
jmp
push
fwait
sti
push
dec
dec
movs
mov
pop
pop
or
cs
popa
fbstp
cmp
pop
sbb
cmps
push
push
mov
fs
je
loop
mov
(bad)
fwait
imul
inc
and
fs
jae
pop
scas
xchg
xchg
fld
inc
xchg
fist
xor
shl
push
pop
cdq
mov
jg
inc
add
cld
enter
xor
or
mov
pop
push
or
das
fadd
inc
xchg
fwait
push
cmp
fsincos
mul
sbb
ds
movs
mov
in
stos
(bad)
clc
mov
retf
enter
arpl
nop
add
inc
jp
cmps
fcomp
cmc
imul
xor
xor
and
sub
retf
add
jbe
das
mov
mov
jne
push
mov
std
int3
inc
dec
shl
jge
ins
or
les
or
mov
dec
lods
cmp
pop
call
push
and
sub
jnp
and
test
mov
les
cwde
sti
mov
pop
nop
jo
jmp
fs
sub
sbb
push
fsub
cwde
jmp
jmp
jno
jns
xor
aas
mov
jmp
mov
pop
test
(bad)
cs
jns
inc
js
clc
imul
in
push
aad
dec
inc
jne
test
pop
mov
push
cli
retf
push
sbb
pop
mov
jmp
push
mov
movs
cli
jne
mov
pop
nop
push
scas
rcr
pop
mov
ds
xor
stc
int
outs
stos
shr
xchg
call
cmp
and
push
and
daa
pop
mov
mov
aam
push
inc
jmp
rcl
push
jns
adc
ret
adc
mov
(bad)
(bad)
cmp
pushf
lods
jp
test
ret
loope
cmp
ror
frstor
add
xor
test
adc
and
mov
retf
add
les
cmp
xchg
ficom
hlt
inc
adc
lods
push
mul
pop
pop
cmps
jne
mov
xchg
cmps
or
push
fmulp
cmp
in
cmc
cmp
xor
(bad)
xchg
imul
add
and
jbe
sub
fld
retf
jnp
test
push
inc
lods
je
ins
loop
sbb
fdivr
fst
ss
push
fnsave
arpl
popf
add
aad
push
aas
xor
mov
sub
sub
scas
xchg
popf
mov
nop
xor
pop
outs
sub
(bad)
mov
in
jb
xchg
mov
leave
out
xlat
cdq
xchg
jo
pop
push
int3
and
ds
pop
(bad)
jge
push
aad
jg
imul
pop
jae
jo
cmps
pop
(bad)
sub
dec
xor
and
lods
fs
and
push
cmp
sbb
stos
scas
jle
mov
pop
iret
out
les
scas
cdq
(bad)
bnd
int
adc
mov
mov
ret
inc
adc
cdq
stos
cmp
ins
test
add
ins
xchg
xlat
lods
inc
in
push
mov
mov
(bad)
cld
sbb
pop
inc
dec
imul
dec
mov
hlt
lea
sbb
enter
mov
cdq
dec
call
add
pusha
mov
fistp
or
add
push
sahf
dec
hlt
movs
(bad)
fs
mov
push
dec
sub
mov
imul
jle
daa
xchg
mov
push
ret
fcom
add
or
push
or
sbb
jnp
or
dec
inc
xchg
inc
mov
jb
and
cld
sub
fsubr
mov
in
into
retf
dec
xchg
aad
movs
fcmovbe
cdq
xor
mov
pop
lods
add
sub
jo
cdq
sbb
sub
into
inc
call
fidivr
pop
je
aas
cld
sbb
mov
push
jge
adc
push
cli
mov
push
stos
ins
pop
bound
out
div
sub
outs
cmp
push
ret
fincstp
cmps
cmp
pusha
fcom
jnp
and
mov
nop
mov
or
retf
hlt
ficom
mov
icebp
adc
or
out
jmp
outs
xor
int
mov
call
dec
xchg
xchg
loop
mov
nop
es
hlt
neg
push
lahf
mov
ret
push
adc
cmp
jle
cmp
jbe
clc
dec
jmp
cwde
call
inc
xchg
inc
retf
imul
dec
popf
cmp
mov
clc
test
cmp
test
sbb
jmp
sub
call
cld
mov
sub
sar
(bad)
jle
cmp
dec
cwde
sahf
push
dec
push
retf
mov
add
adc
call
retf
jno
test
jno
daa
pop
cmp
call
adc
stos
push
(bad)
in
mov
add
imul
sbb
dec
mul
pop
xchg
mov
pop
sub
fs
fcomp
outs
pop
mov
addr16
es
sti
outs
xor
jo
loope
jne
lahf
out
jbe
fwait
cmp
nop
rol
xor
je
cmp
test
push
mov
xchg
sbb
mov
sbb
or
(bad)
sub
repnz
adc
mov
xor
test
out
mov
lea
mov
stc
jle
adc
push
xor
fnstenv
pop
fld
push
fidivr
sub
mov
cmp
adc
lds
add
aad
cmp
jle
cli
dec
mov
xor
or
cmp
lods
aam
or
retf
fsub
dec
in
fcmovnu
rcr
mov
test
lds
int
and
cmp
pusha
or
and
lods
add
pop
inc
xchg
xor
iret
adc
mov
cmps
cmp
in
mov
push
ret
xor
xor
sub
nop
cli
push
mov
(bad)
in
addr16
loope
sahf
jno
cli
pop
pop
pop
or
fs
mov
(bad)
daa
mov
push
xor
stos
mul
xor
je
popa
push
inc
movs
gs
push
dec
xchg
jne
lock
or
sub
out
and
(bad)
mov
pushf
xchg
scas
xor
in
jno
xchg
push
mov
and
enter
and
mov
mov
xchg
dec
xor
and
inc
push
pushf
adc
data16
cmp
stos
je
pop
and
addr16
mov
mov
cwde
mov
fs
xchg
pop
mov
(bad)
push
iret
inc
pop
xor
retf
jno
cwde
retf
jmp
fadd
dec
icebp
pop
lahf
xchg
jo
mov
jp
or
add
test
pop
dec
shl
xor
retf
in
int
push
clc
sub
ds
imul
mov
js
les
pop
adc
cmc
retf
jecxz
clc
cmp
or
retf
imul
xchg
mov
fistp
(bad)
stos
sub
inc
or
mov
mov
xchg
xchg
jb
mov
ret
sub
push
adc
std
xchg
push
call
ja
xor
adc
(bad)
adc
aaa
in
mov
xor
aam
pop
call
stos
mov
jge
not
std
sub
lock
imul
cmp
call
mov
inc
xchg
sub
sti
xchg
ret
mov
popf
call
(bad)
ss
jp
call
enter
pop
stos
jmp
adc
inc
jo
out
inc
jp
add
sub
loope
inc
and
out
pop
adc
lahf
xor
test
cmp
lds
retf
aam
dec
(bad)
cmp
hlt
jne
mov
jmp
retf
movs
xchg
in
dec
xor
pop
push
mov
hlt
xor
cmc
xor
in
cs
in
dec
int3
movs
pusha
lea
xchg
call
popf
mov
lock
and
clc
jecxz
into
jnp
(bad)
dec
mov
jmp
hlt
xlat
sub
jge
cmc
adc
dec
stc
mov
fimul
dec
pop
call
aam
adc
rep
adc
lds
fs
iret
jno
popa
or
xchg
popf
mov
add
(bad)
ficomp
dec
lds
xor
sub
sbb
addr16
mov
pop
icebp
xchg
jl
fs
mov
adc
cmp
and
pushf
add
dec
pop
das
dec
test
mov
(bad)
xor
test
cmc
mov
or
inc
jnp
fwait
cmp
mov
push
push
in
and
and
pop
aam
xchg
sbb
xlat
pop
or
or
mov
or
fldcw
out
cmc
dec
and
aad
sti
mov
sbb
inc
inc
jno
push
sub
jp
iret
add
sbb
stos
mov
pop
(bad)
fcmovne
jnp
push
test
stos
mov
pushf
mov
test
mov
xor
jbe
rcr
mov
in
cmc
sahf
mov
push
fidivr
add
loop
jbe
mov
push
in
imul
fs
push
cmp
xchg
(bad)
inc
jecxz
xchg
inc
xchg
out
mov
push
out
push
and
or
leave
je
ins
push
mov
mov
jmp
adc
pop
add
sbb
mov
mov
pop
les
sbb
cmps
pop
pop
mov
sbb
lods
cmp
fiadd
pop
loop
adc
imul
add
add
xor
xor
test
test
mov
or
fcom
test
clc
push
cmps
dec
jmp
aam
xchg
aam
cmp
mov
xor
nop
add
inc
mov
jno
xchg
sbb
xchg
or
dec
inc
mov
addr16
dec
and
stos
pop
outs
or
sar
mov
mov
pop
fstp
mov
daa
addr16
push
mov
repz
mov
pusha
pop
jmp
cs
pop
popa
cdq
(bad)
xchg
push
mov
mov
sub
pop
daa
inc
inc
dec
(bad)
adc
and
adc
sti
pushf
jns
dec
lahf
and
adc
xchg
sbb
fst
xlat
popa
shl
outs
iret
adc
or
pop
jmp
outs
jnp
shr
inc
imul
repnz
lds
inc
add
stc
imul
addr16
jb
dec
jg
fsub
imul
add
gs
inc
cmps
imul
push
aam
lahf
jp
mov
adc
aad
loopne
jne
push
das
hlt
sub
in
bound
sbb
fld
mov
cdq
retf
mov
xor
pop
mov
pop
in
pop
repnz
gs
adc
(bad)
mov
addr16
mov
fcmovb
ja
int
sub
xchg
stos
fwait
lds
push
stos
push
cwde
mov
dec
inc
pop
or
int3
adc
jle
scas
rcr
cmp
out
in
je
aas
je
retf
pop
push
lds
call
or
loopne
mov
mov
popa
movs
inc
mov
cmp
dec
repz
fsubrp
ja
xor
outs
es
push
dec
jecxz
clc
dec
jae
and
aam
sahf
stos
lahf
rcr
aam
sar
movs
pop
call
fiadd
jmp
sub
hlt
sti
aas
test
push
fnclex
xor
xlat
add
aad
mov
bound
pop
movs
and
aad
or
cli
cmps
cmp
out
in
add
stos
jmp
jmp
mov
shl
cs
add
stos
xchg
or
loope
sbb
mov
add
out
push
dec
hlt
jmp
inc
stos
out
or
jmp
shl
shl
sub
pop
xchg
es
(bad)
jecxz
dec
mov
fst
mov
mov
xchg
jmp
stos
xchg
int3
iret
(bad)
sub
sub
push
cmps
push
push
jg
aaa
cmps
popf
sub
pop
es
mov
aam
retf
xor
dec
xor
cmps
cmp
es
sub
dec
add
sahf
mov
loope
add
and
(bad)
jecxz
cmp
or
pop
int
and
(bad)
dec
test
jmp
inc
bound
mov
popf
cmp
out
cmp
retf
jmp
jb
loop
cmps
inc
mov
cs
pop
xlat
dec
push
rcl
int
add
xchg
mov
add
not
and
mov
push
in
jp
dec
mov
shr
push
jecxz
rcl
push
pop
cli
cmp
shl
shr
sahf
pop
cmp
popf
dec
mov
fcomp
hlt
inc
repnz
mov
inc
(bad)
sahf
mov
inc
mov
cli
rcl
call
bnd
gs
sar
into
fistp
cmp
in
mov
movs
mov
add
xor
nop
pop
xchg
mov
jb
cmp
cmps
sahf
cmp
shl
push
pop
pop
xchg
out
fcmovne
mov
push
pop
out
(bad)
ds
(bad)
fistp
push
rol
sbb
das
cmp
iret
sahf
xor
ret
push
stos
jb
cli
(bad)
(bad)
jle
jb
sahf
outs
div
repnz
neg
mov
mov
cmp
sahf
scas
xor
mov
(bad)
sbb
stc
mov
mov
into
pop
push
(bad)
and
jle
xor
pop
dec
vorps
cs
(bad)
loope
pop
out
push
pop
jecxz
adc
out
pop
pop
mov
(bad)
push
cmc
mov
xlat
ds
std
imul
jmp
scas
mov
outs
cli
push
inc
gs
push
or
add
xor
pop
ins
ret
mov
mov
not
ds
(bad)
push
mov
es
neg
cmp
mov
push
mov
mov
xchg
jo
call
push
cmp
mov
push
sahf
add
shl
mov
imul
mov
jmp
mov
pop
add
out
push
imul
mov
xlat
push
xlat
add
cmc
into
pop
adc
inc
jmp
sub
mov
add
dec
mov
mov
jmp
xlat
push
mov
rol
xchg
out
out
pop
dec
jl
pop
emms
xchg
and
pop
push
mov
mov
jge
ret
lahf
mov
stos
add
pop
xchg
jge
adc
xchg
pop
xchg
push
add
push
(bad)
es
cmps
ja
push
mov
sub
mul
(bad)
add
(bad)
or
mov
(bad)
push
(bad)
ja
push
into
ja
inc
or
scas
(bad)
pop
cmps
and
mov
mov
inc
call
or
push
mov
sub
scas
std
xor
cli
sub
test
pushf
mov
ret
xor
scas
jb
inc
pop
or
adc
push
pop
aaa
pop
ret
icebp
aam
jae
pop
adc
xchg
shl
push
xor
dec
add
add
rol
cmp
mov
pushf
add
push
sub
xor
jno
sahf
mov
or
adc
mov
pop
sti
and
xchg
and
arpl
aad
pop
std
je
adc
cli
adc
xchg
push
xor
or
mov
lods
jns
jg
retf
popf
mov
aaa
adc
call
mov
mov
mov
popf
pop
or
repnz
cmp
scas
xchg
ss
mov
test
std
fmul
push
cmp
movs
(bad)
adc
sub
fidiv
mov
sub
sub
ja
mov
int3
pusha
and
ret
ret
addr16
xchg
pop
imul
call
bound
xor
mov
(bad)
cld
push
and
enter
out
imul
mov
or
mov
mov
pop
or
or
xor
xor
mov
mov
mov
and
bound
xor
push
mov
jne
loop
popf
imul
aas
push
mov
shr
sbb
xor
xor
pusha
inc
je
shl
in
mov
jo
ss
add
lods
xchg
mov
movs
bound
inc
xor
std
ss
mov
cmc
jmp
lock
adc
mov
ja
loop
out
pop
mov
cmc
mov
mov
sti
xchg
xchg
push
retf
xchg
bound
or
ins
sbb
adc
adc
mov
imul
lock
imul
mov
xchg
mov
sub
ja
add
add
fcom
ror
mov
aas
cld
popa
in
test
or
gs
jle
ins
jns
push
scas
pop
mov
and
imul
pop
mov
call
jns
cmps
sbb
call
mov
mov
xor
or
ins
mov
cmp
mov
xor
cmps
retf
cmps
ins
aam
hlt
jo
mov
xchg
or
lods
inc
in
xor
adc
fdivr
mov
aad
mov
int
mov
ins
push
out
or
and
pop
test
pop
or
in
pop
cld
gs
mov
rol
dec
push
or
xor
movs
fsub
cmp
jne
and
pop
mov
fsubr
cld
mov
fadd
and
movs
cmp
call
sbb
mov
mov
xor
jnp
movs
xor
pop
test
fcom
int3
fdivr
movs
inc
enter
sub
add
les
and
ret
ins
pop
mov
mov
movs
xor
jbe
inc
rcr
lods
xor
sub
pusha
cld
cmp
sub
pop
or
ror
in
aam
movs
push
mov
test
movs
inc
sub
xor
xor
cmp
add
mov
inc
mov
sub
scas
or
retf
test
mov
inc
lods
stos
fsub
ja
pusha
scas
pop
mov
push
retf
int3
lds
mov
xlat
adc
pop
retf
stos
outs
hlt
lea
imul
cmps
repnz
jbe
sub
loope
sbb
sbb
frstor
stos
inc
fsubrp
(bad)
mov
out
cmp
mov
clc
jns
stos
add
fcmovu
mov
cmp
adc
stos
out
cmc
and
sbb
cli
mov
push
sub
adc
dec
push
xor
jmp
mov
sub
lods
pop
mov
call
out
add
mov
test
push
cmp
and
mov
outs
adc
mov
shl
mov
icebp
sbb
cmp
adc
inc
pusha
mov
sbb
push
xor
dec
jle
xor
pop
xchg
add
adc
xor
out
xchg
outs
pushf
dec
xchg
mov
rcr
cmp
adc
push
movs
sbb
loopne
aad
outs
shr
out
fwait
jl
jo
je
adc
nop
arpl
movs
out
cwde
out
pop
call
addr16
jno
ins
mov
cs
rcr
cs
xlat
or
mov
enter
jo
xlat
pop
mov
cmp
test
pop
dec
dec
jnp
inc
ja
dec
pop
jl
fnstcw
mov
push
mov
adc
fnstenv
mov
sbb
out
int3
adc
cmp
mov
test
sbb
cwde
inc
fisttp
sub
mov
cld
sbb
pop
cwde
sub
jns
int
push
mov
loope
sbb
or
xor
cdq
jl
push
adc
ins
xor
or
popf
js
div
pop
sub
fcomp
cld
sbb
mov
fdiv
xlat
cmps
sbb
xor
(bad)
cmp
jae
mov
cmp
cmp
(bad)
mov
pop
push
jg
fdivr
cmp
push
inc
daa
out
or
mov
sub
loope
mov
push
mov
mov
lds
jle
pusha
idiv
js
out
das
sbb
mov
pop
cwde
mov
sub
xchg
jns
xor
mov
push
xor
sbb
inc
clc
mov
aam
push
and
cmp
aam
xlat
icebp
cmp
ins
xor
sbb
inc
jmp
pop
aam
cmp
cmp
cld
lods
lea
mov
retf
sbb
cmps
sbb
xlat
test
adc
adc
lods
stos
fwait
(bad)
xor
jmp
js
sbb
cmp
paddb
and
mov
mov
and
mov
adc
xor
call
pop
cdq
mov
jns
pop
cld
mov
leave
sub
xor
(bad)
popf
sbb
mov
jg
or
jle
xor
mov
push
int3
pop
inc
add
inc
xlat
sahf
fucomi
ins
inc
dec
adc
jae
arpl
js
pop
sbb
push
mov
jb
or
ret
int3
bound
rol
mov
out
cli
and
jb
xor
mov
jecxz
xor
xor
imul
xor
jl
repz
imul
mov
sbb
repnz
sar
shl
loop
mov
fist
xchg
jl
mov
test
repz
ins
push
cli
jecxz
std
pop
mov
add
adc
cmp
sahf
shl
bnd
popa
add
mov
push
pushf
jle
or
pop
adc
aas
es
mov
retf
ja
outs
test
xor
idiv
xor
or
sti
or
mov
lock
popa
jne
add
mov
and
loop
and
test
mov
retf
xor
jecxz
mov
and
sub
dec
jecxz
mov
fstp
stos
sub
mov
push
xor
arpl
jae
xor
jecxz
mov
and
mov
mov
int3
sub
aaa
xor
dec
ja
xchg
int
(bad)
jo
arpl
jb
mov
cmp
pop
cli
repz
cli
xor
and
jae
mov
lds
out
push
clc
stos
sbb
mov
and
mov
mov
sbb
jmp
(bad)
push
movsx
das
push
hlt
mov
push
fcom
fidivr
fldcw
jl
out
cmp
call
sbb
push
fcmove
push
add
imul
xchg
dec
adc
xor
es
int3
sbb
ds
inc
dec
xor
shl
test
add
shr
out
pop
add
fmul
jo
add
jecxz
mov
loope
jo
lods
xacquire
call
cmp
rcl
retf
add
data16
add
sub
dec
into
out
aam
test
jnp
data16
out
jmp
dec
pushf
cmp
dec
add
add
call
mov
pushf
shr
cmps
dec
retf
mov
dec
xchg
sbb
xor
jmp
mov
into
cmp
dec
cli
jl
add
(bad)
call
jb
cdq
push
mov
pusha
xchg
arpl
cmp
mov
repnz
movs
inc
sub
pop
mov
aam
int3
mov
mov
cmp
adc
into
ins
mov
pop
mov
int
dec
jb
aad
cmp
ret
enter
inc
lahf
push
cmps
ss
push
mov
jge
(bad)
shl
or
gs
aam
sub
adc
scas
leave
mov
dec
cmp
mov
pop
push
xchg
add
call
aas
js
(bad)
fimul
and
jnp
push
repnz
mov
push
mov
imul
xchg
jo
and
enter
pusha
pop
cmp
rcl
or
jge
popf
clc
pop
js
sar
pusha
sbb
xor
js
xchg
mov
pop
popa
xor
(bad)
pop
test
cmp
adc
mov
sub
mov
sti
push
mov
jae
push
lock
push
pop
adc
and
xor
fdiv
sub
std
xor
sbb
jnp
int
sbb
mov
sbb
cmp
mov
sbb
pop
cmp
cmp
push
fistp
gs
xor
fcom
mov
loop
cmp
jl
mov
and
mov
mov
loop
mov
lods
pop
addr16
mov
sbb
stc
mov
push
js
pushf
mov
div
jl
js
xchg
mov
pop
mov
std
js
xchg
mov
pop
xor
js
fxch
xchg
lods
cmp
stc
adc
fstp
and
dec
fidivr
dec
fstp
cmc
nop
fdivr
pop
cli
jnp
push
cs
ins
sbb
int
mov
push
cmps
popa
cmp
addr16
adc
or
leave
xchg
test
xchg
adc
jge
or
mov
repz
fwait
hlt
clc
sahf
lds
sbb
mov
add
or
mov
sbb
sub
ins
push
int
test
in
push
xchg
xlat
mov
and
push
jge
(bad)
sahf
jge
fsub
gs
or
and
dec
shl
jno
mov
movs
jno
or
dec
cmp
lock
hlt
adc
push
adc
mov
dec
shl
jns
mov
mov
loope
test
aaa
mov
(bad)
sub
pushf
arpl
dec
cmp
shr
mov
push
mov
jecxz
and
and
arpl
and
jecxz
jecxz
and
and
arpl
and
jecxz
jecxz
and
and
arpl
and
jecxz
jecxz
and
and
arpl
and
jecxz
jecxz
and
and
arpl
and
jecxz
push
loope
and
mov
push
call
arpl
int
jbe
mov
aam
cmc
mov
sub
daa
sub
xchg
stos
xchg
mov
bound
pavgb
ins
test
outs
pop
mov
push
pushf
fst
jnp
fwait
jno
cs
cli
pop
cwde
movs
test
mov
icebp
lahf
push
jg
inc
cli
sbb
jmp
xchg
(bad)
jmp
pop
stos
or
xor
movs
int3
gs
push
push
push
stos
dec
mov
cwde
xchg
dec
ss
retf
ja
cmp
bswap
xor
repz
ins
push
dec
push
ins
push
push
xlat
out
aad
aad
aad
push
ins
dec
dec
icebp
iret
hlt
scas
push
dec
ins
mov
xlat
div
cmc
retf
jns
jbe
jge
jns
lock
icebp
outs
push
push
xlat
out
(bad)
iret
(bad)
out
(bad)
orps
push
cli
ret
cli
retf
or
pop
dec
inc
jp
sahf
scas
clc
loope
scas
xchg
rcl
xor
pop
das
jp
cdq
cmps
cli
and
sbb
inc
or
mov
movs
jecxz
ret
xchg
cld
and
sub
out
mov
cmps
cli
mov
repz
xor
es
lahf
mov
jecxz
ret
xchg
mov
adc
or
xchg
ret
cs
adc
lods
cli
mov
stos
cdq
fistp
xor
unpcklps
(bad)
mov
cli
(bad)
xor
sbb
inc
sbb
mov
mov
xlat
jp
push
arpl
cs
(bad)
stos
mov
test
mov
rcr
inc
dec
arpl
and
mov
lea
and
push
mov
jnp
pushf
(bad)
jl
sbb
cmp
cli
cmp
pop
out
scas
cmp
jge
cmp
adc
add
je
movs
(bad)
aam
inc
xor
mov
(bad)
(bad)
std
out
sub
mov
call
jo
dec
xchg
mov
push
push
jnp
adc
and
das
outs
(bad)
fcom
push
jae
push
cmp
outs
aaa
cmp
fcom
dec
jns
jo
or
cmp
fsubr
jle
jne
pop
jo
dec
pusha
add
push
xchg
pushf
xchg
cmp
sbb
or
pop
push
push
cmp
dec
cli
mov
and
pop
cmp
pop
loop
movs
cmp
fs
pop
jnp
pslld
aaa
sbb
push
pop
pop
push
push
push
cmp
mov
and
dec
outs
sbb
push
cmc
repnz
pop
push
dec
push
cmp
sbb
fs
movs
out
movs
push
pop
jb
mov
push
sub
jg
push
jo
(bad)
jmp
xchg
mov
push
sbb
outs
xor
cmp
fcom
cmp
pop
push
cmp
dec
ret
jbe
xchg
add
cmp
jbe
push
xor
ret
jbe
xchg
add
cmp
jbe
push
xor
pop
xor
add
(bad)
pop
or
sub
arpl
ret
je
adc
jne
add
(bad)
sub
loope
mov
out
xor
pop
loope
cmps
add
in
push
lods
cmp
xor
sub
push
and
push
test
int3
pop
(bad)
inc
lods
daa
mov
xor
dec
pop
cmps
push
mov
pop
lahf
xor
add
dec
fild
mov
mov
sbb
out
mov
cmp
les
xchg
push
ret
jbe
jns
add
stos
sub
les
inc
jge
dec
mov
or
jbe
(bad)
jb
xchg
fsub
add
sbb
je
inc
mov
pop
push
inc
xchg
cmp
jae
aaa
mov
xchg
ret
jae
iret
jle
sub
dec
and
call
adc
sub
cmp
retf
in
xor
mov
stos
(bad)
push
shr
lahf
out
pop
movs
repz
aaa
das
xor
in
hlt
mov
or
add
cld
adc
mov
inc
xchg
outs
pop
inc
xor
into
xchg
popf
cmps
mov
cmp
sub
push
lea
sub
xor
push
fdiv
sbb
rol
push
in
arpl
add
jbe
je
ror
push
push
mov
adc
push
mov
mov
repz
pop
gs
mov
xor
xchg
popw
push
pop
lds
jmp
cmp
or
jmp
and
mov
xlat
dec
inc
cld
mov
add
daa
add
rcl
scas
mov
xor
sbb
ins
mov
xchg
or
dec
inc
dec
jbe
xor
pushf
movs
fcomip
mov
and
ffreep
outs
nop
lahf
xor
aad
movs
ins
adc
pushf
in
psubw
pop
inc
pop
movs
dec
xchg
iret
jecxz
(bad)
retf
xchg
clc
sbb
imul
mov
dec
lock
std
pop
cdq
rol
mov
sbb
bound
cmp
sbb
movs
mov
repnz
pop
cmp
aad
jmp
xor
imul
popf
popf
retf
cmps
leave
push
outs
cmp
adc
or
dec
xchg
fld
mov
in
je
inc
jp
sub
pop
stos
ror
jge
mov
and
mov
dec
mov
(bad)
ret
and
sub
dec
xchg
lea
push
es
inc
aam
pushf
or
(bad)
call
cmp
push
xchg
mov
fld
sub
push
fsub
cli
push
mov
adc
add
cld
add
(bad)
pushf
mov
jmp
pop
cld
rcl
ins
xchg
lahf
addr16
xor
xor
lock
sar
xchg
push
pop
stc
jne
jb
sbb
xchg
loopne
nop
inc
bnd
enter
jmp
ror
mov
adc
lds
mov
bound
(bad)
pushf
or
iret
add
xor
rcr
fnstsw
and
in
xchg
lahf
out
mov
mov
lock
inc
cli
inc
adc
pop
stc
cmc
jp
pop
pushf
cmp
ret
add
aad
xchg
push
push
in
cmc
cli
push
mov
sub
in
jb
sbb
lds
std
(bad)
fcmovbe
int3
sar
mov
(bad)
mov
sub
shr
icebp
pop
mov
popf
sar
jle
fsubr
inc
aam
cmps
inc
mov
cli
sub
jmp
inc
retf
ret
std
adc
push
sub
ins
mov
push
sub
(bad)
pop
shl
fidiv
cmp
rcr
jge
iret
jbe
(bad)
enter
lds
sub
sbb
fldenv
lods
hlt
js
add
sub
xor
pusha
or
mov
and
xor
pop
mov
inc
inc
sbb
jne
mov
aad
or
shr
sub
call
sub
inc
ficom
sbb
xor
mov
push
fidivr
out
cmp
mov
pop
mov
lods
sar
cmp
xchg
iret
xchg
(bad)
dec
xchg
xchg
in
sub
push
mov
in
adc
aam
clc
ret
sahf
enter
cmps
mov
data16
jo
fcmovne
add
icebp
mul
xchg
ficom
xchg
push
mov
push
xor
or
inc
xchg
jne
out
and
xchg
jne
call
jg
adc
rcl
mov
adc
mov
repnz
addr16
inc
test
call
adc
out
push
lea
adc
jmp
(bad)
adc
cmp
(bad)
adc
mov
xchg
jno
xor
adc
cmp
ja
and
mov
daa
sbb
cmp
loop
jl
pushf
(bad)
stos
ins
mov
mov
in
(bad)
adc
call
sbb
add
cdq
ins
xor
addr16
push
adc
xchg
addr16
arpl
bound
in
pop
xor
or
cmp
js
out
loope
jne
stos
mov
imul
test
xchg
cdq
adc
popf
dec
jb
adc
xor
fld
pop
cmp
lods
adc
stos
and
jb
add
lea
sub
jno
xor
repz
push
and
xor
xchg
int
dec
fldenv
test
push
call
fisub
add
jle
sub
aam
sbb
and
add
es
sub
addr16
mov
daa
int
sbb
test
imul
popa
add
sbb
jmp
and
xchg
ins
(bad)
iret
shr
push
sub
scas
push
lahf
(bad)
fs
add
iret
test
pop
cmp
adc
rol
(bad)
clc
dec
loop
add
scas
fild
or
dec
into
sbb
in
or
scas
cwde
lods
jne
inc
or
je
push
sub
xchg
fmul
jmp
test
pushf
push
mov
mov
dec
inc
rol
hlt
scas
pop
push
mov
cmp
and
(bad)
ret
and
push
in
jne
daa
mov
in
and
test
or
sbb
jnp
mov
in
push
dec
outs
ja
adc
or
dec
push
mov
or
dec
icebp
pop
repz
out
pop
mov
or
test
lods
or
add
lahf
sub
or
or
dec
cmp
aam
xchg
jle
pushf
xor
leave
mov
jecxz
in
mov
cld
push
cld
jnp
test
imul
cmps
pop
push
lea
adc
pop
into
mov
fsub
dec
xchg
movs
loop
dec
or
test
cmps
adc
call
je
jmp
ins
mov
jne
es
adc
aaa
nop
push
pop
push
jmp
inc
cld
xor
sbb
mov
lods
push
mov
mov
test
pushf
ins
cmp
aam
inc
test
jmp
cmp
int
in
push
or
dec
xchg
dec
jns
dec
mov
mov
jle
mov
jge
pop
je
push
mov
add
test
push
pushf
jbe
or
add
(bad)
call
int3
xlat
icebp
les
mov
inc
stc
xchg
mul
inc
mov
xor
int3
inc
jge
not
cmps
mov
shl
gs
adc
mov
adc
dec
test
pop
xchg
movs
mov
mov
repz
jmp
movs
xor
jecxz
sti
mov
mov
xor
lods
jbe
imul
pushf
hlt
and
(bad)
in
in
cld
mov
push
adc
in
pop
cmp
call
pop
jo
push
mov
fs
or
popf
cmp
inc
or
push
push
ins
shr
cmp
mov
or
mov
gs
ret
fs
shl
add
mov
fmul
add
ret
dec
push
push
adc
pop
mov
mov
xchg
mov
and
or
jae
(bad)
adc
add
(bad)
or
test
cmp
or
mov
mov
test
adc
call
and
fwait
movs
ds
adc
add
push
out
fistp
js
jns
jae
adc
mov
adc
ja
int
jmp
add
(bad)
jmp
push
pop
out
fld
xchg
cmps
mov
test
movs
xor
jecxz
mov
sbb
movs
dec
push
and
mov
movq
mov
ds
cmp
dec
xor
adc
dec
push
cwde
ss
and
push
jmp
clc
xchg
test
jae
sbb
mov
fld
jge
pop
push
dec
xchg
sub
mov
and
js
pop
fbstp
push
psubsw
sbb
js
loope
imul
ret
sub
push
push
sub
outs
repz
or
mov
push
fsubr
popa
cli
jge
pop
les
(bad)
pop
add
sbb
jl
mov
xchg
pop
lahf
adc
neg
jae
test
push
jle
push
jno
inc
pop
lods
mov
out
sti
jge
dec
ja
addr16
pop
jecxz
pushf
(bad)
js
dec
or
in
ins
mov
push
jb
jnp
arpl
inc
mov
int
jo
pop
xchg
cmps
xor
iret
dec
rol
mov
or
arpl
dec
mov
fs
sbb
pop
mov
jns
ins
pop
outs
xchg
inc
sub
push
jl
mov
sub
adc
into
(bad)
adc
addr16
fstp
mov
mov
jns
movs
push
fcomp
movs
xor
jge
mov
out
ror
cmps
jmp
pop
jl
jge
lods
mov
jbe
mov
or
jmp
rol
stc
(bad)
loopne
mov
lea
int
retf
test
xchg
pop
mov
xchg
mov
fwait
dec
call
sub
sar
lahf
push
jg
out
loop
(bad)
cmp
mov
mov
cli
fisttp
pop
in
sub
mov
dec
jb
std
and
(bad)
cmp
dec
out
jmp
dec
pop
iret
mov
daa
repz
sub
lea
push
into
cdq
cmp
dec
adc
dec
pop
popf
xor
push
outs
sbb
and
dec
out
xor
pop
and
or
jle
enter
mov
cmp
addr16
jno
and
dec
xchg
imul
pop
xor
pop
jecxz
lods
pop
dec
dec
add
cmp
dec
int
sbb
dec
mov
adc
ret
cmp
jge
mov
push
add
adc
scas
xchg
jo
cmp
lahf
std
dec
adc
inc
xchg
fwait
scas
inc
test
cmp
mov
add
and
xor
shl
lods
mov
dec
ror
mov
mov
gs
sahf
sub
out
cmp
cmps
fdivr
jge
xchg
xchg
mov
arpl
leave
(bad)
leave
cdq
sbb
pop
mov
xor
sbb
mov
or
fxch
lock
jns
cmp
arpl
lods
jge
popf
(bad)
jb
fld
mov
(bad)
test
or
cmp
js
retf
test
lea
or
or
dec
or
fs
(bad)
leave
(bad)
aam
xchg
repz
or
dec
inc
leave
lea
fcomp
pop
test
clc
mov
(bad)
lods
enter
xlat
push
(bad)
dec
dec
arpl
add
lea
dec
pusha
dec
jbe
aaa
outs
or
pop
mov
out
movd
dec
stc
fdivr
sti
stc
cmp
leave
mov
fld
cmp
dec
dec
jmp
leave
dec
ficomp
out
fs
or
fwait
cmp
popf
iret
jg
out
int3
imul
or
mov
mov
lea
mov
das
pop
cmp
cdq
sbb
cli
fimul
sbb
pop
pop
or
cld
xchg
(bad)
cwde
fidiv
sbb
sub
pop
mov
loope
js
mov
inc
dec
movs
sub
mov
mov
out
push
sbb
mov
lock
and
les
fs
popf
pop
cmp
jecxz
(bad)
fbstp
adc
jg
pushf
push
xchg
xchg
or
push
inc
cmp
jne
push
call
jp
jp
adc
fbld
cli
data16
inc
pop
push
sbb
jo
shr
aas
push
pop
sar
scas
sbb
jmp
sub
and
in
ret
retf
addr16
jb
mov
xchg
retf
rcl
push
push
and
stos
xchg
sub
push
das
xor
sbb
les
repnz
push
adc
imul
sbb
add
in
fdivr
hlt
push
xor
sbb
jge
movs
(bad)
lea
cmp
aad
fldenv
adc
data16
and
cdq
push
inc
and
xlat
add
sbb
mov
inc
loope
mov
aaa
xchg
push
xchg
jb
push
rcl
dec
and
inc
mov
jb
psrld
loop
aam
adc
add
out
dec
imul
fisub
jmp
adc
das
ins
push
xor
arpl
jne
jle
push
xchg
xchg
imul
and
add
pop
pop
fwait
and
call
mov
push
inc
inc
pop
mov
das
(bad)
mov
dec
pop
and
retf
xchg
add
jp
lahf
shl
jmp
mov
mov
jo
movs
cld
add
jne
push
pop
stos
mov
je
stos
loope
add
add
sub
jp
and
stos
dec
jecxz
out
push
dec
mov
(bad)
jnp
sahf
popa
push
adc
lock
lea
stos
mov
sub
in
fbld
sub
push
and
mov
sar
mov
xor
shl
rol
xor
popa
or
test
push
mov
sbb
mov
jae
xor
xor
lock
test
retf
in
mov
addr16
movs
mov
and
pause
(bad)
jle
nop
shl
xor
pop
je
xchg
hlt
pop
mov
mov
rcl
jae
jo
mov
mov
jmp
rcl
inc
stos
test
mov
xor
arpl
add
fidiv
xchg
test
addr16
xchg
xchg
dec
jne
sub
push
imul
sub
call
pop
cs
push
ins
je
sbb
stc
loopne
out
and
and
jo
push
das
cmc
in
aam
sti
and
and
pop
addr16
sbb
repz
jmp
jbe
push
ins
je
adc
sti
jecxz
loope
daa
sbb
jae
push
imul
aam
sti
and
dec
jbe
push
bound
pop
daa
(bad)
out
in
and
and
jae
adc
repz
jo
push
outs
jbe
sbb
std
in
in
and
push
imul
sub
jmp
push
das
jbe
push
ins
je
adc
sti
loop
jecxz
and
and
pop
popa
js
pop
es
fsubp
(bad)
and
jecxz
jae
adc
bnd
jmp
sub
sub
push
outs
jbe
adc
in
cmc
sub
sub
je
sbb
cli
jecxz
loopne
and
and
pop
data16
push
daa
std
in
jmp
push
outs
ja
pop
cs
ja
mov
dec
mov
mov
mov
aam
sahf
jecxz
cmp
test
pop
bound
movs
fwait
mov
xchg
jae
jmp
loop
mov
inc
mov
inc
movs
cwde
push
stos
sub
adc
inc
mov
(bad)
imul
or
data16
out
test
pop
sbb
call
imul
(bad)
(bad)
fist
cwde
xchg
gs
(bad)
(bad)
pop
je
outs
test
dec
in
call
sub
or
cmps
jp
sub
movs
gs
imul
imul
stc
cmp
sti
xchg
scas
test
xchg
dec
inc
pop
test
push
jno
dec
mov
or
test
pop
call
loope
and
fdiv
dec
pop
sbb
rcr
fwait
lds
jmp
pop
in
call
aad
cmp
fadd
pop
imul
and
push
repnz
mov
jmp
cld
push
push
sbb
xchg
retf
mov
mov
mov
test
dec
cwde
or
sbb
adc
stc
lahf
stos
sbb
mov
fs
pop
or
cmp
mov
out
mov
xor
push
or
xchg
mov
fstp
xchg
retf
xor
jne
add
aad
xchg
mov
mov
fwait
scas
cdq
dec
cld
in
inc
mov
aam
ja
add
int3
inc
shl
adc
mov
call
xor
xchg
push
loope
cmp
retf
push
add
inc
loope
in
fst
inc
cli
inc
push
dec
movs
push
jnp
adc
es
aad
xlat
sub
fwait
outs
imul
je
outs
mov
fst
pop
aaa
sbb
retf
sub
fiadd
xchg
pop
sbb
and
jo
push
lea
push
fcmovnbe
jno
imul
sub
inc
stc
xchg
mov
mov
retf
lds
cmps
imul
dec
dec
jbe
or
retf
fnstenv
cmp
aaa
dec
pop
sub
les
dec
sub
sbb
loope
cdq
aas
mov
push
stos
push
lea
aas
dec
aam
in
cmp
js
mov
das
hlt
(bad)
ins
arpl
mov
xchg
sbb
cmps
mul
cmps
adc
loopne
sbb
sahf
xchg
push
push
sbb
push
test
hlt
scas
sub
cmp
mov
mov
dec
retf
push
dec
lods
mov
cmp
mov
xchg
dec
cmp
sbb
dec
inc
pop
daa
fwait
mul
retf
aam
cmc
cmp
or
test
mov
sub
retf
pop
mov
mov
repnz
jp
iret
xor
loop
stos
rcl
inc
and
dec
inc
cli
hlt
dec
scas
sub
inc
gs
pushf
fs
cli
in
jp
and
das
xor
cwde
jno
jmp
in
mov
ficom
movs
mov
jmp
push
gs
js
mov
in
jmp
inc
das
gs
push
sbb
ss
pop
out
push
test
or
pop
ficomp
les
push
cmps
mov
push
sbb
ret
test
dec
retf
xchg
xchg
pop
mov
push
sbb
add
sub
aad
(bad)
sbb
add
push
mul
loopne
dec
mov
data16
call
or
repz
jne
(bad)
out
je
jmp
mov
daa
jmp
call
shl
push
pop
mov
ss
mov
mov
jp
addr16
adc
fst
les
mov
push
bound
jp
cmps
movs
cwde
lods
stos
test
test
xor
sti
pop
cld
pop
in
bound
fcomip
jl
shl
xchg
push
pop
mov
push
(bad)
aas
nop
aam
daa
cmp
movs
push
cmp
int3
in
or
(bad)
retf
xor
or
lods
cld
mov
xchg
dec
xchg
xor
ins
pop
enter
ins
xchg
mov
pop
sbb
aaa
add
(bad)
adc
pop
mov
mov
cmovb
or
or
icebp
sub
cmp
mov
movs
xchg
les
push
ins
pop
sti
adc
bound
les
cmp
add
or
xchg
scas
pop
div
pop
lahf
xchg
or
sbb
cld
fsubr
or
movs
ror
xchg
ror
mov
or
outs
ror
pop
ror
dec
ror
ror
sub
or
adc
or
add
or
lock
(bad)
ror
mov
ror
mov
ror
jbe
or
push
ror
cmp
or
xor
or
sbb
or
or
or
clc
iret
or
call
iret
or
(bad)
iret
or
mov
iret
or
pushf
iret
or
mov
or
jp
or
outs
iret
or
(bad)
iret
or
pop
iret
or
dec
iret
or
cmp
or
sub
or
adc
or
add
or
out
into
or
fmulp
or
ror
or
mov
into
or
call
add
or
pop
into
or
cmp
or
sub
or
adc
or
clc
int
add
int
add
int
add
int
add
int
add
or
push
int
add
int
add
int
add
or
clc
int3
or
loop
or
ror
or
ret
add
or
mov
or
jl
or
data16
or
pop
int3
or
dec
int3
or
cmp
or
sub
or
sbb
or
or
or
repnz
or
fmul
or
ret
add
retf
or
test
or
jbe
or
pusha
retf
or
push
retf
or
cmp
or
xor
or
and
or
adc
or
add
or
cmps
aam
add
retf
add
add
(bad)
in
add
add
add
add
pop
add
adc
add
or
add
or
add
adc
add
mov
add
add
add
xchg
add
add
add
xchg
add
and
add
push
jecxz
add
jecxz
add
add
add
or
(bad)
in
add
or
mov
or
cmp
or
add
add
rcr
or
mov
or
movs
fimul
xchg
fimul
sbb
add
or
push
fimul
inc
fimul
cmp
or
sub
or
sbb
or
or
or
add
or
repnz
(bad)
or
retf
add
fisttp
xchg
fisttp
xchg
or
jl
or
push
or
pop
fisttp
dec
fisttp
xor
or
and
or
or
or
cld
fmul
out
or
fcomp
or
into
fmul
mov
fmul
xchg
fmul
sbb
add
or
pusha
fmul
inc
fmul
xor
or
out
or
sbb
or
or
or
hlt
fisttp
out
or
fcmovu
or
into
fisttp
ret
add
fisttp
cwde
fisttp
mov
or
js
or
(bad)
fisttp
push
fisttp
inc
fisttp
xor
or
and
or
push
fisttp
add
or
lock
(bad)
or
retf
add
or
cwde
fimul
mov
or
jl
or
je
or
(bad)
fimul
repnz
adc
or
push
fmul
and
or
mov
or
xor
or
inc
xlat
or
push
xlat
or
push
xlat
or
xchg
xlat
or
sahf
xlat
or
stos
xlat
or
mov
or
(bad)
xlat
or
push
fisttp
sbb
or
sub
or
inc
fisttp
and
or
fcmovbe
or
call
xlat
or
or
or
sbb
or
sub
or
fmul
dec
fmul
(bad)
fmul
jbe
or
test
or
xchg
fmul
movs
fmul
push
fimul
inc
fimul
xor
or
and
or
push
fimul
cld
(bad)
in
(bad)
rcr
or
rcr
add
or
mov
or
jl
or
ins
(bad)
pop
(bad)
dec
(bad)
cmp
or
(bad)
push
(bad)
or
or
neg
or
call
fmul
enter
mov
or
add
add
mul
or
fsub
or
(bad)
in
add
add
sbb
or
push
in
add
in
add
add
add
in
add
or
lock
add
in
add
or
shl
or
mov
or
sahf
jecxz
add
or
pop
in
add
add
jecxz
add
or
add
add
ds
add
dec
add
scas
dec
add
dec
add
dec
add
mov
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
scas
dec
add
dec
add
dec
add
dec
add
scas
dec
add
dec
add
mov
add
mov
add
add
inc
add
inc
add
xchg
inc
add
cdq
dec
add
add
add
add
inc
mov
(bad)
sti
dec
add
add
dec
cmps
xor
add
add
add
add
add
enter
enter
inc
add
jae
popa
add
ins
add
add
add
add
outs
add
bound
ins
add
add
add
imul
outs
add
ins
add
add
add
push
add
add
add
add
push
add
jno
jne
imul
jae
add
add
push
add
arpl
imul
add
add
add
add
push
add
jb
imul
add
add
push
add
and
push
add
jno
jne
add
arpl
add
add
dec
add
add
imul
add
inc
add
jae
popa
add
ins
add
and
push
add
add
add
push
add
jo
jo
outs
add
je
add
add
imul
add
jae
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
and
push
add
jo
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
jae
add
inc
add
ins
add
popa
add
jns
and
push
add
outs
add
je
and
dec
add
ins
add
add
add
inc
add
ins
add
popa
add
jns
and
dec
add
ins
add
add
add
push
add
outs
add
add
je
add
inc
add
data16
jne
ins
add
add
add
popa
add
add
add
add
jne
jo
jo
outs
add
je
add
add
add
popa
add
add
add
push
add
jno
jne
imul
jae
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
push
add
add
je
jae
add
push
add
ins
add
jae
push
add
outs
add
add
jp
add
add
jo
ins
add
jae
push
add
outs
add
add
ins
add
jb
add
add
push
add
ins
add
jae
push
add
outs
add
add
arpl
add
add
jo
ins
add
jae
push
add
add
outs
add
add
push
add
ins
add
jae
push
add
js
je
add
push
add
ins
add
jae
push
add
arpl
imul
add
outs
add
outs
add
add
jo
ins
add
jae
push
add
add
popa
add
add
popa
add
add
outs
add
add
add
add
jne
add
arpl
add
add
add
popa
add
imul
jae
je
add
popa
add
add
add
dec
add
outs
add
data16
jae
je
add
imul
add
inc
add
outs
add
add
add
jo
jo
add
add
add
ins
add
imul
jb
add
add
add
jbe
add
add
je
popa
add
add
add
xor
add
add
jae
arpl
jb
imul
add
add
data16
add
outs
add
outs
add
je
add
add
js
add
arpl
ins
add
popa
add
add
push
add
add
add
aas
add
add
add
je
add
add
ins
add
add
js
je
jb
popa
add
je
add
add
add
outs
add
popa
add
imul
add
add
add
jo
popa
add
imul
add
add
add
jo
ins
add
jae
inc
add
add
outs
add
add
jae
arpl
add
jo
ins
add
jae
inc
add
jb
add
jo
jae
add
add
ins
add
jae
add
add
jo
jae
add
add
jbe
popa
add
add
jp
add
ins
add
outs
add
add
add
dec
add
add
add
bound
outs
add
add
add
add
add
bound
jne
add
add
add
add
add
data16
add
add
add
outs
add
imul
outs
add
add
bound
outs
add
je
add
add
outs
add
jb
add
jae
imul
outs
add
add
add
add
jo
jb
outs
add
add
je
dec
add
ins
add
add
jo
outs
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
jo
jbe
add
add
jb
add
jne
ins
add
add
add
dec
add
inc
add
jae
add
add
add
add
push
add
arpl
imul
add
add
add
add
push
add
popa
add
arpl
push
add
add
add
push
add
ins
add
add
add
push
add
add
data16
data16
ins
add
add
arpl
add
je
add
jo
add
add
ja
imul
jb
imul
add
add
ja
imul
imul
add
jae
jns
jae
ja
outs
add
add
add
add
jae
jns
jae
je
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
outs
add
ins
add
outs
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
inc
add
ins
add
outs
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
add
add
arpl
outs
add
data16
add
imul
add
add
arpl
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
jae
add
and
ins
add
imul
jne
jae
add
and
ins
add
arpl
popa
add
add
add
jns
jae
and
ins
add
imul
add
jae
jns
jae
and
ins
add
arpl
popa
add
add
add
add
add
add
add
je
outs
add
add
add
add
add
add
je
imul
and
inc
add
ins
add
outs
add
and
push
add
jb
jae
imul
add
je
add
add
add
add
je
imul
and
push
add
jb
jae
imul
add
je
add
add
add
je
imul
and
inc
add
arpl
outs
add
popa
add
add
outs
add
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
add
jb
outs
add
add
je
jae
pop
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
pop
add
push
add
dec
add
add
add
add
add
add
add
add
outs
add
add
outs
add
add
add
add
outs
add
arpl
add
add
outs
add
add
add
popa
add
add
add
inc
add
add
add
push
add
add
and
ins
outs
arpl
imul
dec
add
dec
add
dec
add
dec
add
dec
add
mov
inc
add
mov
inc
add
aad
add
aad
add
mov
inc
add
inc
add
inc
add
dec
add
and
and
add
mov
inc
add
sbb
inc
add
mov
inc
add
inc
add
mov
inc
add
push
inc
add
inc
add
and
sbb
add
and
inc
add
jae
jo
ins
add
jns
inc
add
jb
outs
add
and
and
inc
add
jb
outs
add
and
pop
add
add
add
jo
ins
add
jns
inc
add
jb
outs
add
dec
add
imul
and
inc
add
jae
jo
ins
add
jns
imul
and
add
jb
outs
add
and
ins
add
jae
jae
popa
add
add
add
add
mov
inc
add
aad
add
inc
inc
add
dec
inc
add
inc
add
dec
add
sub
adc
pusha
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
sub
ror
add
inc
add
inc
inc
add
dec
inc
add
inc
add
mov
inc
add
add
jb
jb
outs
add
add
add
and
add
add
add
ins
add
popa
add
add
add
add
add
ins
add
popa
add
add
outs
add
add
ror
cmp
nop
cs
add
dec
add
cmp
inc
add
add
add
add
aas
inc
add
inc
add
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
add
inc
add
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
add
outs
add
popa
add
add
add
outs
add
imul
outs
add
add
je
add
jo
dec
add
dec
inc
add
inc
add
cmc
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
imul
dec
add
inc
add
imul
and
push
add
popa
add
ins
add
and
je
outs
add
add
imul
and
ins
add
add
ins
add
and
data16
ins
add
and
outs
add
ins
add
add
add
add
inc
add
ins
add
je
add
imul
dec
add
inc
add
imul
and
push
add
add
add
add
js
add
jne
je
add
add
popa
add
ins
add
add
add
add
add
add
pop
add
add
imul
dec
add
and
dec
add
push
add
add
pop
add
push
add
add
add
add
add
dec
add
add
add
add
je
pop
add
jb
add
je
push
add
dec
add
add
add
and
das
add
and
and
and
add
add
inc
add
dec
add
add
imul
and
jae
je
imul
and
add
imul
jae
and
add
add
add
add
ins
add
and
add
ins
add
add
add
add
outs
add
js
imul
ins
add
add
add
dec
add
add
add
add
pop
add
add
imul
cmp
ins
add
jae
je
pop
add
jb
add
je
push
add
ins
add
add
add
add
outs
add
js
imul
bound
popa
add
add
add
popa
add
add
add
jb
jb
outs
add
cmp
and
and
and
dec
add
jae
jae
popa
add
add
add
add
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
inc
add
arpl
outs
add
outs
add
add
add
add
popa
add
add
add
jb
jb
outs
add
and
imul
and
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
dec
add
outs
add
add
outs
add
and
add
jb
outs
add
cmp
and
pop
add
add
add
add
add
add
and
add
add
arpl
cmp
and
and
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
imul
jae
push
add
add
jb
outs
add
add
jae
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
add
add
outs
add
imul
and
imul
je
popa
add
add
jb
and
bound
add
popa
add
jae
add
add
outs
add
je
popa
add
add
add
popa
add
and
outs
add
je
and
jae
jne
arpl
arpl
add
jae
data16
ins
add
add
add
push
add
outs
add
popa
add
outs
add
add
popa
add
add
add
add
jb
jb
outs
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
push
add
imul
and
add
arpl
add
je
imul
jae
and
pop
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
outs
add
je
popa
add
add
jb
and
jne
jo
outs
add
and
add
imul
pop
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
popa
add
add
add
add
add
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
arpl
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
ja
push
add
outs
add
popa
add
outs
add
add
push
add
and
data16
jb
and
add
imul
imul
and
imul
je
popa
add
add
jb
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
jo
popa
add
imul
add
add
add
popa
add
popa
add
add
add
add
add
jnp
inc
add
xor
inc
add
add
inc
add
sub
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
outs
add
and
arpl
ja
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
data16
inc
add
popa
add
ins
add
inc
add
outs
add
add
ins
add
outs
add
je
popa
add
outs
add
jb
add
add
ja
push
add
outs
add
popa
add
outs
add
add
outs
add
je
inc
add
ins
add
outs
add
inc
add
outs
add
add
ins
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
and
add
add
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
jae
je
popa
add
add
jb
add
inc
add
dec
add
add
jae
jne
ins
add
add
add
push
add
push
add
jb
add
add
outs
add
je
popa
add
add
jb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
sub
sub
add
inc
add
inc
add
inc
add
add
add
add
dec
add
dec
add
add
add
add
add
inc
add
dec
add
dec
add
add
inc
add
push
add
push
add
add
add
add
dec
add
add
inc
add
add
add
dec
add
add
dec
add
add
jne
je
add
add
add
add
mov
addr16
add
outs
inc
add
fs
add
jno
add
jno
add
inc
add
jae
add
inc
add
inc
add
addr16
add
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
jbe
ins
add
add
add
add
add
add
add
add
and
add
and
add
and
add
add
add
inc
add
add
pop
add
add
inc
add
bound
add
add
or
add
add
add
and
add
and
add
cmp
add
jns
add
add
je
jb
jne
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
je
push
add
popa
add
imul
add
add
add
jae
and
outs
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
outs
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
jo
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
add
imul
outs
add
ins
add
jae
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
jp
add
add
inc
add
imul
popa
add
imul
add
add
add
add
imul
inc
add
imul
jae
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
jb
jb
add
je
inc
add
ins
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
inc
add
inc
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
sub
and
jo
outs
add
imul
outs
add
cmp
and
and
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
jb
outs
add
inc
add
ins
add
inc
add
imul
add
add
add
add
add
add
add
jb
outs
add
and
je
push
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
jb
add
add
add
add
add
add
js
jo
add
je
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jb
imul
push
add
inc
add
ins
add
add
add
add
inc
add
imul
add
add
add
add
jb
imul
and
je
outs
add
add
imul
and
and
add
add
popa
add
add
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
ja
jb
imul
add
cmp
and
and
add
add
js
jo
add
je
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
add
outs
add
jo
jb
add
jae
and
add
je
popa
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
outs
add
jo
jb
add
jae
and
je
push
add
outs
add
jne
je
and
data16
ins
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
ins
add
jae
add
add
popa
add
imul
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
ins
add
jae
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
push
add
add
je
add
add
dec
add
and
push
add
jae
imul
outs
add
and
push
add
jae
outs
add
jb
arpl
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
add
add
inc
add
imul
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
add
add
js
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
add
outs
add
jo
jb
add
jae
add
add
add
jns
je
add
and
outs
add
and
and
add
add
inc
add
imul
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
inc
add
ins
add
add
push
add
add
and
inc
add
outs
add
add
add
add
add
and
add
je
jb
popa
add
je
imul
and
outs
add
add
popa
add
add
outs
add
add
add
add
add
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
js
je
jb
popa
add
je
and
jo
jb
outs
add
add
ins
add
and
popa
add
add
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
js
je
jb
popa
add
je
add
add
add
add
add
je
je
add
jo
je
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
and
add
push
add
and
imul
and
add
add
add
jns
je
add
and
imul
jae
imul
add
add
add
data16
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
and
imul
je
push
add
add
popa
add
imul
add
add
add
jne
je
jo
jne
je
inc
add
ins
add
add
add
data16
ins
add
outs
add
ins
add
add
add
and
add
add
imul
outs
add
ins
add
and
arpl
popa
add
and
outs
add
je
and
bound
add
add
jne
ins
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
cmp
and
dec
add
popa
add
add
and
popa
add
add
add
popa
add
add
outs
add
add
add
add
add
outs
add
add
imul
and
daa
add
add
add
jae
and
outs
add
je
and
popa
add
add
popa
add
add
add
add
add
jb
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
and
xor
and
cmp
and
and
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jo
add
add
add
popa
add
imul
add
add
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jb
add
je
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
jb
add
add
add
jb
imul
add
add
jb
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
add
jb
imul
and
ins
add
add
sub
and
data16
ins
add
and
imul
ins
add
jb
imul
add
add
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jo
add
push
add
arpl
imul
add
add
add
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
sub
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
imul
jb
add
add
add
add
add
outs
add
add
add
jp
imul
popa
add
imul
add
add
add
add
inc
add
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
jae
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
add
add
add
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
and
add
add
popa
add
add
add
outs
add
and
jb
add
add
outs
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
add
outs
add
and
and
add
add
add
add
and
jo
popa
add
imul
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
ins
add
outs
add
ins
add
and
and
add
ins
add
add
add
and
add
imul
jae
and
imul
jo
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
jb
popa
add
add
imul
add
inc
add
imul
add
add
add
add
add
add
add
and
inc
add
inc
add
add
popa
add
imul
add
and
popa
add
je
add
and
add
popa
add
imul
and
and
add
add
popa
add
imul
add
add
add
outs
add
je
and
ins
add
imul
add
add
add
imul
and
bound
add
add
outs
add
jb
jne
jo
je
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
cmp
and
push
add
ins
add
jbe
imul
and
daa
add
add
add
jb
outs
add
and
je
push
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
add
push
add
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
add
push
add
outs
add
jb
popa
add
inc
add
ins
add
jae
inc
add
jb
add
inc
add
ins
add
outs
add
inc
add
ins
add
jae
inc
add
jb
add
add
sub
add
inc
add
add
push
add
pop
add
push
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
add
add
inc
add
dec
add
push
add
inc
add
pop
add
add
inc
add
add
inc
add
add
inc
add
dec
add
push
add
inc
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
push
add
push
add
push
add
add
dec
add
dec
add
dec
add
dec
add
push
add
inc
add
add
add
dec
add
dec
add
inc
add
add
dec
add
add
inc
add
add
dec
add
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
push
add
dec
add
add
add
dec
add
dec
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
dec
add
push
add
push
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
cmp
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
cmp
add
add
push
add
inc
add
dec
add
add
dec
add
push
add
inc
add
add
inc
add
add
add
push
add
dec
add
push
add
dec
add
inc
add
dec
add
push
add
add
dec
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
push
add
inc
add
push
add
add
add
dec
add
push
add
add
pop
add
add
dec
add
dec
add
inc
add
add
dec
add
push
add
push
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
push
add
push
add
add
dec
add
add
add
push
add
push
add
add
add
add
inc
add
add
push
add
inc
add
push
add
add
push
add
dec
add
push
add
dec
add
inc
add
add
push
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
add
dec
add
add
inc
add
push
add
inc
add
add
pop
add
add
dec
add
dec
add
dec
add
push
add
add
push
add
push
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
dec
add
pop
add
push
add
push
add
add
dec
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
push
add
add
dec
add
push
add
dec
add
inc
add
add
inc
add
add
push
add
add
inc
add
dec
add
inc
add
add
add
inc
add
push
add
push
add
push
add
add
inc
add
push
add
push
add
add
add
dec
add
push
add
inc
add
dec
add
add
pop
add
push
add
dec
add
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
push
add
push
add
add
dec
add
add
inc
add
push
add
push
add
dec
add
push
add
add
inc
add
inc
add
add
add
add
inc
add
inc
add
push
add
add
add
push
add
push
add
add
add
inc
add
push
add
push
add
push
add
push
add
add
inc
add
push
add
dec
add
dec
add
add
add
push
add
dec
add
add
push
add
add
add
dec
add
push
add
dec
add
add
add
add
push
add
inc
add
inc
add
push
add
add
add
dec
add
add
dec
add
push
add
add
add
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
add
add
push
add
push
add
add
xor
xor
add
add
push
add
push
add
add
add
push
add
dec
add
add
add
add
and
add
add
add
add
and
add
add
and
or
add
add
and
or
and
add
inc
add
outs
add
ins
add
outs
add
add
outs
add
cmp
cmp
push
add
jb
jae
add
outs
add
ins
add
outs
add
add
outs
add
and
inc
add
data16
jne
ins
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
jne
jae
je
outs
add
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
add
add
cmp
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
dec
add
je
add
outs
add
ins
add
add
add
ins
add
add
add
add
add
add
outs
add
and
and
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
daa
add
jnp
daa
add
add
outs
add
outs
add
add
add
jne
je
and
outs
add
and
add
add
outs
add
and
daa
add
daa
add
add
outs
add
outs
add
add
add
add
outs
add
add
js
jo
popa
add
jae
imul
and
data16
jb
and
daa
add
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
inc
add
arpl
add
add
add
add
popa
add
imul
ins
add
add
jne
ins
add
add
and
outs
add
and
jbe
popa
add
imul
ins
add
and
add
jo
popa
add
jae
imul
jae
sub
and
and
add
add
add
add
add
outs
add
je
popa
add
outs
add
and
popa
add
add
jns
arpl
ins
add
arpl
and
jbe
popa
add
imul
ins
add
add
add
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
push
add
jo
ins
add
arpl
add
add
add
add
add
imul
and
daa
add
add
add
add
jnp
jge
add
and
jnp
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
dec
add
imul
outs
add
ins
add
add
je
jb
imul
and
daa
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
push
add
je
dec
add
cmp
and
push
add
je
je
imul
and
and
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
inc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
add
imul
and
imul
and
data16
ins
add
and
and
add
dec
add
imul
ins
add
cmp
and
and
add
jae
and
popa
add
and
imul
popa
add
add
add
imul
add
inc
add
outs
add
inc
add
ins
add
cmp
and
dec
add
add
add
add
outs
add
and
data16
ins
add
and
and
add
add
add
add
add
add
outs
add
add
add
add
jb
imul
bound
ins
add
add
add
dec
add
dec
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
arpl
je
imul
and
and
add
popa
add
and
imul
add
jae
and
and
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
dec
add
jns
jae
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
je
and
and
add
add
add
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
and
add
add
add
jae
and
outs
add
je
and
add
imul
inc
add
dec
add
push
add
push
add
push
add
dec
add
push
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
inc
add
dec
add
dec
add
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
push
add
ins
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
je
and
and
add
add
add
add
add
dec
add
imul
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
jb
jb
outs
add
and
and
add
dec
add
imul
ins
add
cmp
cmp
push
add
je
push
add
ins
add
add
add
add
add
add
add
outs
add
add
jae
and
xor
xor
xor
xor
and
push
add
xor
and
jae
jns
jae
je
add
and
imul
outs
add
je
and
arpl
outs
add
jo
popa
add
add
ins
add
and
ja
imul
and
jbe
arpl
jb
add
add
je
pop
add
cmp
add
add
js
add
add
add
inc
add
add
add
add
add
add
jne
jae
je
and
bound
add
add
outs
add
je
popa
add
add
add
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
dec
add
push
add
jae
je
add
dec
add
push
add
je
push
add
add
add
add
je
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
dec
add
inc
add
outs
jbe
ins
imul
gs
push
and
gs
je
jb
ins
popa
jo
jae
je
push
and
and
add
dec
add
inc
add
imul
pop
add
add
add
push
add
outs
add
add
xor
xor
add
push
add
outs
add
add
add
add
imul
xor
xor
cmp
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
imul
popa
add
add
add
push
add
outs
add
imul
popa
add
xor
xor
add
push
add
outs
add
imul
popa
add
add
add
imul
xor
xor
xor
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
push
add
add
add
add
push
add
outs
add
push
add
xor
xor
add
add
push
add
outs
add
push
add
add
imul
xor
xor
xor
add
and
add
add
jae
push
add
ja
add
push
add
outs
add
add
jae
and
data16
imul
add
and
add
jb
outs
add
and
and
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
inc
add
jns
jae
je
add
dec
add
data16
add
add
imul
gs
xor
add
add
dec
jae
outs
ja
xor
jb
arpl
jae
add
add
add
jb
jae
imul
inc
add
and
data16
imul
add
add
outs
add
imul
and
inc
add
jns
jae
je
add
dec
add
data16
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
ins
add
popa
add
add
add
ins
add
add
outs
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
add
add
add
ins
add
add
outs
add
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
ins
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
dec
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
add
add
add
jb
outs
add
and
and
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
popa
add
add
outs
add
popa
add
add
add
inc
add
add
je
add
jo
add
popa
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
je
dec
add
add
ins
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
inc
add
aas
inc
add
sbb
dec
add
pop
inc
add
inc
add
sbb
push
add
ins
add
jae
push
add
push
add
add
add
push
add
ja
popa
add
add
add
add
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
and
jo
popa
add
imul
add
add
add
imul
and
ja
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
je
and
ins
add
arpl
popa
add
add
outs
add
add
add
add
and
je
push
add
add
popa
add
and
arpl
popa
add
jae
add
add
jb
outs
add
ins
add
ins
add
inc
add
add
popa
add
add
jb
ins
add
add
add
popa
add
add
and
daa
add
add
and
ja
popa
add
and
add
je
add
je
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
add
jne
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
jae
and
ins
add
jae
jae
imul
and
popa
add
add
popa
add
add
add
add
inc
add
and
imul
popa
add
add
add
add
jo
outs
add
popa
add
jns
and
add
jb
add
je
outs
add
jns
and
ja
popa
add
and
add
je
add
je
add
add
add
popa
add
add
add
add
add
add
add
add
js
imul
jae
cmp
and
and
add
add
jae
inc
add
ins
add
cmp
and
and
add
add
jae
push
add
popa
add
add
ins
add
cmp
and
and
add
outs
add
add
outs
add
popa
add
add
add
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
and
ja
popa
add
and
jae
jo
add
imul
add
add
outs
add
add
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
daa
add
add
add
add
add
ins
add
dec
add
jae
je
popa
add
add
je
imul
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
outs
add
add
imul
jae
add
add
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
add
imul
jae
imul
cmp
and
and
add
add
and
dec
add
or
inc
pop
add
and
arpl
outs
add
je
popa
add
outs
add
cmp
or
add
inc
add
outs
add
jb
popa
add
add
add
add
add
je
and
outs
add
and
data16
ins
add
jae
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
jbe
add
jb
imul
jae
push
add
je
push
add
data16
add
inc
add
add
add
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jbe
add
jb
imul
jae
and
ja
imul
and
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
popa
add
add
and
outs
add
add
jb
imul
jae
cmp
and
daa
add
add
add
add
popa
add
imul
add
add
outs
add
popa
add
add
add
jne
je
jo
jne
je
and
data16
ins
add
and
daa
add
add
add
add
add
add
add
js
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
dec
add
ins
add
and
add
jb
cmp
add
add
jb
outs
add
add
je
dec
add
ins
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
push
add
jb
jae
imul
and
add
jb
cmp
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
outs
add
jns
and
je
push
add
popa
add
add
add
imul
and
je
outs
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
je
push
add
popa
add
add
add
outs
add
add
add
je
imul
je
imul
and
data16
ins
add
jae
and
popa
add
add
add
add
and
jae
popa
add
add
add
add
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
jae
add
add
imul
cmp
and
and
add
add
jne
je
jo
jne
je
and
inc
add
ins
add
cmp
and
and
add
popa
add
imul
add
add
outs
add
bound
ins
add
and
je
outs
add
add
imul
and
data16
ins
add
and
and
add
add
popa
add
add
add
add
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
popa
add
imul
add
add
imul
and
and
add
and
data16
ins
add
outs
add
ins
add
and
arpl
outs
add
data16
add
je
jae
and
ja
imul
and
popa
add
outs
add
add
jb
and
data16
ins
add
and
imul
je
push
add
popa
add
imul
add
add
and
popa
add
add
add
popa
add
and
outs
add
je
and
jo
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
push
add
arpl
imul
add
add
add
add
add
add
add
jo
add
imul
and
outs
add
je
jo
jne
je
and
jo
popa
add
imul
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
outs
add
popa
add
imul
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
outs
add
jns
and
outs
add
and
jo
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
imul
and
jo
popa
add
imul
add
add
add
outs
add
je
add
je
jae
add
add
add
outs
add
popa
add
add
add
js
je
jb
popa
add
je
imul
and
add
jb
add
je
outs
add
jns
and
daa
add
add
add
popa
add
and
jo
jb
outs
add
imul
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
imul
add
outs
add
push
add
je
push
add
je
ins
add
add
add
and
add
add
add
add
imul
add
outs
add
push
add
je
inc
add
jb
add
je
imul
add
add
push
add
jae
imul
add
outs
add
push
add
je
dec
add
js
add
add
push
add
jae
imul
add
outs
add
dec
add
arpl
jb
add
add
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
add
add
outs
add
popa
add
add
add
add
ins
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
outs
add
and
add
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
and
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
add
and
add
je
jb
popa
add
je
imul
and
add
imul
and
daa
add
add
add
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
imul
jb
jns
and
pop
add
dec
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
add
add
bound
outs
add
je
add
add
inc
add
dec
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
outs
add
je
and
data16
ins
add
pop
add
add
add
add
ins
add
add
outs
add
je
add
add
add
add
data16
jb
arpl
add
jae
imul
outs
add
add
add
add
add
ins
add
popa
add
jae
dec
add
jae
je
popa
add
add
ins
add
jbe
popa
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
ins
add
arpl
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
outs
add
je
popa
add
add
jb
add
push
add
data16
add
jb
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
je
and
and
add
jae
and
add
outs
add
add
jae
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jne
outs
add
je
imul
and
pop
add
add
add
dec
jae
outs
jb
dec
outs
push
jae
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
add
add
outs
add
and
data16
outs
add
je
imul
and
pop
add
add
add
add
dec
add
jae
push
add
jb
je
dec
add
push
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
je
je
add
jo
je
and
je
outs
add
add
add
add
add
add
jb
popa
add
jns
and
pop
add
add
add
dec
add
dec
add
push
add
push
add
dec
add
add
add
add
add
add
and
data16
jb
jae
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
outs
add
ins
add
add
add
add
imul
outs
add
jb
add
je
and
outs
add
ins
add
add
and
outs
add
and
jo
popa
add
popa
add
add
add
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
outs
add
je
add
jae
add
add
outs
add
jae
pop
add
js
imul
add
add
arpl
outs
add
data16
add
add
ins
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
push
add
je
inc
add
jb
jb
add
je
inc
add
jb
add
je
outs
add
jns
sub
sub
and
data16
imul
add
add
imul
and
add
jb
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
add
add
add
and
add
dec
add
dec
add
inc
add
push
add
add
add
add
ja
popa
add
add
add
outs
add
je
add
add
popa
add
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
popa
add
arpl
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
outs
add
je
imul
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
dec
add
popa
add
add
add
outs
add
je
popa
add
add
jb
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
inc
add
and
imul
outs
add
and
ins
add
outs
add
add
and
jae
jne
jo
jo
outs
add
je
add
add
outs
add
add
add
jae
and
jbe
add
jae
imul
and
outs
add
and
push
add
ja
popa
add
add
add
ins
add
jns
add
add
add
add
add
jae
add
add
ins
add
jns
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
outs
add
outs
add
add
add
and
pop
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
jns
add
add
ins
imul
je
outs
and
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
jae
inc
add
cmp
add
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
add
add
add
outs
add
jae
inc
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
outs
add
je
imul
imul
push
add
arpl
imul
add
add
popa
add
popa
add
add
cmp
and
push
add
popa
add
arpl
push
add
add
and
pop
add
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
add
outs
add
add
add
outs
add
imul
outs
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
inc
add
imul
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
imul
and
je
push
add
add
and
add
jbe
imul
outs
add
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
imul
add
jb
popa
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
outs
add
add
add
add
and
ins
add
popa
add
add
outs
add
imul
outs
add
add
je
add
pop
add
dec
add
pop
add
add
add
pop
add
dec
add
pop
add
and
cmp
add
outs
add
je
imul
sub
add
add
add
add
add
add
add
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
pop
add
push
add
pop
add
add
and
jne
outs
add
popa
add
imul
add
jb
add
add
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
dec
add
add
add
data16
add
add
and
ins
add
popa
add
add
jb
add
ins
add
outs
add
add
add
jae
and
add
jo
je
jns
and
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
daa
add
add
add
jae
and
popa
add
and
jne
outs
add
jne
jo
jo
outs
add
je
add
add
add
imul
jb
jns
and
push
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
add
jb
outs
add
and
je
jb
jns
imul
and
je
outs
add
add
add
add
add
add
imul
jb
jns
and
jbe
popa
add
add
and
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
jb
add
imul
jb
jns
and
jbe
popa
add
add
and
daa
add
add
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
dec
add
push
add
add
add
dec
add
push
add
add
add
dec
add
add
add
add
outs
add
outs
add
ja
outs
add
add
jb
jb
outs
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jb
outs
add
cmp
and
inc
add
jb
outs
add
and
dec
add
jae
jae
popa
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
outs
add
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
add
add
add
outs
add
add
je
imul
and
outs
add
je
and
popa
add
add
outs
add
ins
add
popa
add
and
jbe
popa
add
add
add
add
jb
outs
add
dec
add
add
outs
add
add
outs
add
add
outs
add
add
add
and
jbe
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
cmp
and
inc
add
jae
add
je
and
data16
imul
add
add
add
add
add
and
and
push
add
jae
je
outs
add
add
add
add
je
jne
jb
add
and
add
and
add
add
dec
add
jae
je
popa
add
add
add
add
bound
push
add
ins
add
arpl
je
add
add
add
add
add
je
jne
jb
add
je
push
add
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
je
popa
add
ins
add
add
add
je
push
add
imul
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
add
sub
sub
sub
and
inc
add
add
jne
je
imul
and
and
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
ins
add
jbe
add
ins
add
add
add
add
add
je
je
imul
jae
add
and
and
push
add
jb
jae
imul
and
inc
add
popa
add
add
add
and
add
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jo
popa
add
add
popa
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
outs
add
je
imul
push
add
je
push
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jbe
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
cmp
push
add
jbe
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
and
popa
add
add
ins
add
outs
add
add
add
add
popa
add
je
imul
and
outs
add
and
and
add
outs
add
and
and
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
imul
outs
add
popa
add
add
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
imul
and
jb
add
add
outs
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
popa
add
ins
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
popa
add
ins
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
add
outs
add
and
outs
add
add
popa
add
add
outs
add
add
add
add
push
add
add
outs
add
jb
imul
ins
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
dec
add
imul
popa
add
add
add
add
jns
jae
je
add
and
jae
push
add
add
outs
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
push
add
jo
jo
jb
add
jae
imul
and
popa
add
je
outs
add
popa
add
add
and
jb
add
outs
add
je
sub
and
jo
ins
add
popa
add
add
add
add
outs
add
je
and
je
push
add
popa
add
push
add
and
ins
add
outs
add
popa
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
inc
add
outs
add
je
imul
and
je
push
add
outs
add
je
popa
add
add
jb
and
add
add
add
add
add
add
jne
imul
add
add
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
outs
add
add
add
add
add
dec
add
popa
add
add
add
jne
outs
add
add
outs
add
je
popa
add
add
jb
and
inc
add
je
add
and
push
add
bound
outs
add
je
add
and
and
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
and
add
add
add
add
add
add
outs
add
add
imul
add
add
jo
add
popa
add
add
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
jb
popa
add
jo
add
add
add
and
and
inc
add
ins
add
ins
add
je
add
add
outs
add
add
popa
add
imul
add
add
add
add
outs
add
add
outs
add
and
inc
add
arpl
imul
add
add
jae
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
arpl
popa
add
add
outs
add
and
push
add
add
je
push
add
jno
jne
add
arpl
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
je
imul
and
push
add
add
imul
bound
push
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
add
popa
add
add
add
add
add
push
add
dec
add
and
bound
outs
add
add
add
add
and
jo
popa
add
add
add
outs
add
add
imul
and
jo
popa
add
popa
add
add
add
jae
and
ja
add
add
add
ins
add
je
jns
add
add
je
imul
add
add
imul
add
add
jo
popa
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jae
and
outs
add
je
and
popa
add
add
jne
jo
jo
jo
outs
add
je
add
add
add
popa
add
add
and
add
data16
jne
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
jb
imul
jb
jns
and
dec
add
outs
add
jne
popa
add
add
add
popa
add
add
and
data16
jne
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
js
popa
add
je
and
ins
add
je
arpl
push
add
outs
add
and
push
add
jo
jo
outs
add
je
add
add
add
popa
add
add
sub
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
outs
add
ins
add
jae
push
add
outs
add
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
popa
add
popa
add
add
add
add
add
add
popa
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
inc
add
outs
add
add
ins
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
imul
add
dec
add
popa
add
jne
outs
add
je
imul
jae
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
imul
add
add
add
and
dec
add
popa
add
add
jne
outs
add
je
imul
jae
add
add
add
je
jb
popa
add
je
imul
pop
add
add
add
add
xor
add
popa
add
je
imul
add
add
ins
add
imul
add
popa
add
arpl
add
add
popa
add
je
dec
add
dec
add
ins
add
add
jbe
add
je
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
push
add
inc
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
popa
add
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
add
add
push
add
outs
add
je
imul
push
add
je
push
add
js
jo
popa
add
add
popa
add
add
add
add
add
add
bound
outs
add
je
inc
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
outs
add
add
ins
add
add
add
add
add
je
je
imul
jae
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
jae
je
popa
add
add
add
jb
outs
add
add
je
jae
add
add
inc
add
jae
add
je
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
imul
push
add
add
dec
add
inc
add
add
outs
add
add
dec
add
add
jne
add
arpl
add
add
add
imul
push
add
add
add
push
add
outs
add
push
add
add
add
inc
add
jae
popa
add
ins
add
push
add
add
push
add
add
je
push
add
bound
outs
add
je
add
push
add
bound
outs
add
je
inc
add
add
imul
add
imul
inc
add
imul
jae
add
add
push
add
jo
popa
add
imul
add
arpl
imul
add
add
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
push
add
add
js
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
add
dec
add
add
add
popa
add
outs
add
outs
add
add
inc
add
jb
outs
add
add
inc
add
add
push
add
add
add
add
add
add
imul
jb
jns
add
add
inc
add
ins
add
je
add
add
add
outs
add
add
push
add
jbe
add
add
add
outs
add
add
dec
add
jae
push
add
je
je
imul
add
add
inc
add
je
push
add
je
je
imul
inc
add
add
add
add
je
je
imul
add
add
inc
add
dec
add
add
popa
add
add
outs
add
add
outs
add
ins
add
add
add
push
add
ins
add
popa
add
add
add
add
add
add
add
add
ins
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
jb
imul
and
arpl
outs
add
jo
ins
add
je
add
and
jae
je
popa
add
je
imul
and
arpl
ins
add
popa
add
sub
add
add
add
outs
add
je
jae
je
jb
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
je
jae
je
jb
popa
add
and
je
push
add
add
and
jae
arpl
jb
imul
add
inc
add
ins
add
push
add
jb
jae
imul
add
inc
push
push
dec
push
cmp
push
outs
popa
bound
je
and
fs
je
and
jae
jne
arpl
and
jae
jb
jno
imul
and
je
jae
popa
outs
and
ins
jns
and
je
jae
popa
jb
and
popa
imul
inc
js
outs
and
and
jb
gs
outs
outs
imul
popa
and
outs
jb
and
and
je
jo
jb
or
add
add
add
outs
add
inc
add
ins
add
dec
add
data16
pop
add
add
and
add
pop
add
add
add
add
jb
imul
push
jb
outs
jae
popa
je
outs
outs
add
add
and
add
add
add
add
add
add
add
add
outs
jbe
ins
imul
gs
imul
inc
dec
outs
je
jne
jo
jb
gs
js
gs
imul
gs
outs
jb
inc
js
gs
imul
inc
inc
js
gs
imul
dec
add
add
add
inc
add
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
ret
dec
add
inc
add
sbb
inc
add
inc
add
sbb
add
dec
add
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
push
les
test
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
inc
dec
ins
gs
js
gs
imul
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
sbb
fs
add
sbb
inc
add
sbb
push
sbb
clc
les
inc
sbb
inc
add
inc
add
dec
bound
arpl
ror
mov
dec
add
ror
movs
ror
mov
dec
add
dec
add
dec
add
dec
add
add
(bad)
inc
add
jb
push
js
gs
imul
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
loopne
dec
add
sbb
(bad)
and
push
sbb
inc
dec
popa
jo
je
imul
jb
outs
add
enter
push
das
inc
add
xor
inc
push
je
imul
add
inc
dec
add
add
(bad)
inc
add
add
add
add
dec
add
aaa
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
xchg
xor
mov
xor
inc
add
add
xor
add
xor
jns
inc
add
ss
add
xor
add
aaa
inc
add
(bad)
dec
add
ss
add
sbb
inc
add
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
arpl
je
outs
outs
and
outs
ja
and
and
je
jne
je
jb
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
gs
je
arpl
add
in
(bad)
dec
add
cmp
inc
add
dec
add
and
aaa
cmp
inc
add
cmp
inc
add
(bad)
dec
add
inc
inc
add
add
outs
inc
add
cmp
pop
cmp
inc
add
xchg
inc
add
cmp
inc
cmp
ins
cmp
push
inc
inc
add
and
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
outs
je
data16
imul
add
jne
jae
add
xor
xor
add
add
add
add
imul
add
je
je
imul
jae
add
add
push
add
add
imul
push
add
add
jae
add
add
ror
movs
add
add
inc
add
add
add
add
add
add
add
inc
add
dec
dec
add
add
add
add
add
add
add
add
inc
loope
add
add
add
inc
add
add
add
(bad)
(bad)
call
loope
add
loope
add
add
repnz
add
add
add
add
loope
add
loope
add
add
add
inc
add
arpl
popa
je
inc
arpl
js
add
add
je
jbe
je
inc
arpl
js
add
ins
gs
jae
inc
arpl
js
add
inc
jb
popa
je
inc
arpl
js
add
add
inc
add
dec
add
dec
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
js
jo
ins
add
jb
add
add
dec
add
push
add
outs
add
add
outs
add
add
jbe
add
add
add
push
add
jae
je
jb
imul
push
add
outs
add
add
outs
add
add
add
outs
add
add
je
inc
add
jae
arpl
outs
add
outs
add
arpl
je
add
add
dec
add
push
add
arpl
add
je
inc
add
arpl
jae
dec
add
jae
je
outs
add
jns
add
dec
add
inc
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
add
add
jb
imul
add
add
outs
add
outs
add
add
add
add
add
jb
imul
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
outs
add
add
add
add
add
add
outs
add
ins
add
arpl
add
inc
add
jb
add
dec
add
inc
add
arpl
imul
add
je
je
outs
add
add
add
dec
add
inc
add
ins
add
dec
add
jne
add
cwde
enter
dec
inc
add
push
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
dec
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
push
inc
add
mov
jp
inc
add
mov
scas
dec
inc
add
dec
inc
add
inc
add
inc
add
ss
add
inc
add
add
add
dec
inc
add
cs
add
add
test
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
outs
add
add
add
add
add
add
add
add
outs
add
je
jb
outs
add
add
popa
add
add
add
add
imul
add
jo
pop
add
add
outs
add
jb
arpl
add
add
popa
add
add
add
add
je
jns
je
ins
inc
gs
jne
je
dec
dec
popa
outs
addr16
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outs
addr16
add
add
and
add
add
add
add
imul
add
mov
add
add
inc
add
add
add
add
dec
add
pop
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
push
inc
add
add
add
add
add
ins
cmp
das
add
outs
add
add
inc
inc
outs
outs
je
add
inc
inc
imul
add
inc
push
popa
imul
add
inc
push
imul
add
add
ins
imul
add
inc
inc
inc
add
jae
jb
js
gs
imul
gs
jne
arpl
js
gs
imul
dec
add
add
add
inc
add
add
add
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
add
add
inc
add
dec
add
add
add
(bad)
inc
add
add
add
dec
dec
add
dec
add
add
(bad)
inc
add
add
add
dec
dec
add
add
add
inc
add
add
add
dec
dec
add
dec
add
add
add
inc
add
inc
dec
add
dec
add
add
add
inc
add
add
add
dec
add
dec
add
add
add
inc
add
add
add
dec
add
inc
add
fs
add
sbb
inc
add
inc
add
sbb
add
dec
add
pop
inc
add
sbb
inc
add
inc
add
sbb
add
add
push
retf
adc
add
addr16
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
pop
inc
add
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
retf
sbb
push
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
dec
add
pop
inc
add
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pop
inc
add
push
add
sbb
dec
add
outs
inc
add
dec
add
int3
dec
add
jae
add
int3
dec
add
je
add
int
add
int
add
add
ins
add
je
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
add
add
add
add
add
add
int
add
je
add
jle
add
jg
add
inc
add
mov
inc
add
add
add
add
add
add
into
dec
add
jle
add
jg
add
inc
add
mov
inc
add
add
push
push
add
lods
push
dec
add
add
inc
add
add
add
ror
fild
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
scas
test
imul
inc
add
add
xchg
mov
mov
jbe
inc
add
inc
imul
(bad)
call
dec
add
add
add
inc
add
add
add
add
dec
add
nop
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
mov
mov
lea
cwde
lea
mov
inc
add
mov
add
inc
add
mov
inc
mov
test
inc
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
arpl
gs
add
imul
je
outs
outs
add
adc
adc
add
(bad)
inc
add
add
add
inc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
dec
add
add
adc
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
gs
add
add
dec
add
add
dec
add
add
add
ror
xlat
jg
add
scas
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
test
inc
add
inc
add
xchg
inc
add
xchg
inc
add
stos
inc
add
inc
add
inc
add
cmps
inc
add
xchg
inc
add
add
sbb
dec
add
xchg
inc
add
add
sbb
inc
dec
cmp
push
gs
gs
jae
dec
popa
outs
popa
addr16
gs
outs
arpl
add
ins
add
arpl
ins
add
add
add
add
add
add
add
add
inc
add
mov
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
mov
add
mov
inc
add
inc
add
inc
add
lods
inc
add
inc
add
scas
inc
add
cmps
inc
add
add
add
test
add
test
inc
add
lahf
inc
add
inc
add
ror
dec
stos
inc
add
scas
inc
add
inc
add
add
retf
add
add
lods
ror
aas
test
inc
add
inc
add
inc
add
retf
movs
retf
movs
retf
jp
inc
add
test
inc
add
retf
mov
cdq
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
cdq
dec
add
add
add
call
add
add
loopne
dec
add
add
add
pushf
dec
add
add
add
add
add
(bad)
(bad)
push
int
adc
adc
fs
add
dec
add
std
(bad)
inc
add
cmp
(bad)
call
add
add
std
(bad)
inc
add
add
std
(bad)
inc
add
add
std
(bad)
dec
add
add
add
add
std
(bad)
inc
add
ss
(bad)
inc
and
xchg
and
stos
add
push
mov
retf
inc
add
adc
xor
sbb
push
add
jae
sbb
into
adc
inc
ja
push
cmp
sbb
into
adc
inc
ja
mov
jae
sbb
into
adc
inc
ja
add
sub
adc
inc
ja
cmp
dec
add
add
fld
pop
leave
inc
add
test
inc
add
add
leave
inc
add
aam
add
inc
add
inc
add
inc
add
retf
movs
retf
(bad)
in
add
retf
mov
aad
add
retf
pushf
in
add
retf
mov
inc
add
inc
add
aad
add
retf
sbb
inc
add
inc
add
(bad)
dec
add
retf
inc
add
xchg
inc
add
xchg
inc
add
test
inc
add
inc
add
jmp
inc
add
jmp
call
add
xchg
inc
add
lock
add
icebp
inc
add
icebp
inc
add
repnz
add
repz
add
int
add
xchg
inc
add
xchg
inc
add
repz
add
hlt
inc
add
inc
add
sub
adc
inc
ja
rol
add
add
inc
or
add
add
add
rol
add
add
inc
xor
jae
sbb
into
adc
inc
ja
add
add
or
dec
add
fld
test
fld
movs
retf
and
inc
add
leave
inc
add
fld
test
inc
add
inc
add
retf
in
fiadd
push
fild
xor
inc
add
fild
repnz
push
loopne
add
inc
add
in
add
add
inc
add
loope
add
inc
add
inc
add
fild
jge
inc
add
add
add
dec
add
jg
add
sbb
loopne
dec
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
inc
add
inc
add
xchg
inc
add
xchg
inc
add
rol
loopne
inc
add
fiadd
cmp
inc
add
les
or
inc
add
lds
lds
add
add
mov
mov
mov
ret
add
enter
enter
fiadd
clc
fiadd
xor
inc
add
inc
add
enter
fild
fild
push
cmovae
inc
fadd
popa
aad
add
rol
sbb
inc
add
mov
and
inc
dec
gs
inc
imul
pop
dec
add
add
add
inc
add
add
add
add
add
sub
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
sub
cmp
inc
add
sub
fisubr
inc
add
xor
fld
inc
add
sub
loopne
inc
add
sub
(bad)
sub
cli
sub
jg
inc
add
sub
inc
push
outs
add
add
add
add
(bad)
(bad)
(bad)
inc
data16
push
add
add
add
add
jne
add
add
inc
add
js
inc
add
outs
add
add
ins
add
popa
add
cmp
xor
jae
jne
add
inc
add
js
dec
add
add
jb
popa
add
add
add
add
jne
add
inc
add
js
inc
add
popa
add
add
jb
push
add
add
cmp
xor
jae
jne
add
add
inc
add
js
dec
add
add
outs
add
je
jb
outs
add
add
add
jne
add
inc
add
js
dec
add
add
outs
add
add
outs
add
xor
xor
xor
add
add
fs
add
pop
dec
add
pop
dec
add
add
inc
add
dec
inc
add
add
add
add
add
je
outs
outs
imul
inc
add
je
outs
outs
imul
push
add
jne
inc
imul
gs
arpl
push
add
jne
inc
imul
outs
outs
imul
outs
imul
push
outs
imul
dec
outs
outs
imul
push
arpl
outs
outs
imul
push
imul
add
je
jns
je
ins
dec
gs
imul
push
add
inc
add
xor
xor
add
add
inc
dec
push
push
dec
inc
pop
add
arpl
arpl
push
add
jb
add
je
add
popa
add
arpl
inc
add
imul
inc
add
jne
outs
add
add
arpl
arpl
inc
add
imul
add
add
popa
add
arpl
dec
add
ins
add
add
popa
add
arpl
push
add
ins
add
add
add
add
arpl
arpl
inc
add
jae
arpl
jb
imul
imul
add
add
popa
add
arpl
push
add
ins
add
add
popa
add
arpl
push
add
add
add
add
add
arpl
arpl
dec
add
ins
add
add
popa
add
arpl
dec
add
ins
add
push
add
jo
imul
add
popa
add
arpl
dec
add
jns
bound
outs
add
jb
add
push
add
add
je
add
popa
add
arpl
inc
add
arpl
jne
jae
add
add
popa
add
arpl
push
add
ins
add
arpl
je
imul
add
add
popa
add
arpl
inc
add
data16
jne
ins
add
add
je
imul
add
add
popa
add
arpl
push
add
ins
add
arpl
je
add
popa
add
arpl
dec
add
arpl
popa
add
add
outs
add
add
arpl
arpl
dec
add
jbe
imul
je
add
add
arpl
arpl
dec
add
je
push
add
jae
je
add
add
popa
add
arpl
inc
add
inc
add
data16
jne
ins
add
add
je
imul
add
add
(bad)
(bad)
xor
inc
add
add
inc
inc
add
inc
inc
add
aaa
inc
add
aaa
inc
add
inc
inc
add
inc
add
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
add
dec
add
dec
inc
add
dec
inc
add
inc
add
cmp
push
fimul
xor
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
jbe
add
jg
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
inc
add
cmp
pop
cmp
and
inc
add
inc
add
aaa
inc
add
xchg
cmp
adc
cmp
jp
mov
inc
nop
xor
and
add
outs
imul
inc
outs
outs
je
outs
ins
jae
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
add
ins
ins
dec
gs
jo
add
add
arpl
outs
arpl
add
dec
add
inc
add
addr16
add
addr16
add
retf
sub
dec
add
addr16
add
addr16
add
addr16
add
pusha
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
popa
inc
add
pusha
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
inc
add
pusha
inc
add
pusha
inc
add
inc
add
dec
add
add
add
add
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
adc
add
add
add
rol
add
add
inc
and
xor
xor
aaa
add
add
add
add
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
gs
popa
data16
imul
add
pop
add
popa
dec
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
push
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
popa
inc
add
add
add
add
pop
inc
add
add
add
add
add
push
inc
add
add
add
add
add
bound
and
add
sbb
add
lea
add
add
sub
add
ins
push
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
add
lods
fs
add
add
pop
add
add
push
inc
add
add
add
je
add
add
add
add
add
add
push
add
add
inc
inc
add
add
push
add
add
fs
add
rol
sbb
add
pop
inc
add
add
add
add
add
push
inc
add
outs
add
ins
add
je
jb
ins
add
inc
add
popa
add
dec
add
jae
je
dec
add
add
add
add
ins
fs
popa
jb
gs
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
fs
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
gs
add
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
clts
add
add
fs
add
add
add
inc
add
add
add
add
add
push
fimul
add
add
add
add
data16
add
jb
add
add
add
outs
add
je
ja
popa
add
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
cmp
add
das
or
inc
add
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
rcr
dec
add
fisttp
and
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
loopne
add
dec
add
add
add
add
add
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
loopne
add
loopne
add
loopne
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
loope
add
dec
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
loope
add
loope
add
dec
add
dec
add
dec
add
dec
add
dec
add
loop
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
loop
add
dec
add
dec
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
in
add
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
in
add
add
add
dec
add
dec
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
dec
add
in
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
dec
add
out
add
dec
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
dec
add
dec
add
out
add
out
add
out
add
out
add
out
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
dec
add
out
add
out
add
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
add
