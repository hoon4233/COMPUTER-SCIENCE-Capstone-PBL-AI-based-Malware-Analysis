test
add
inc
outs
outs
ins
gs
outs
add
or
mov
inc
popa
ins
jae
add
jb
lea
sub
add
push
fcomi
push
push
nop
inc
add
dec
outs
je
addr16
sbb
fcmovnb
int3
mov
add
jns
ins
es
outs
(bad)
enter
add
add
inc
popa
imul
add
add
das
outs
leave
inc
pop
add
sti
lahf
inc
or
push
je
imul
imul
adc
push
mov
lods
je
in
or
dec
sbb
inc
add
ds
jnp
add
mov
xchg
cwde
pushf
(bad)
fwait
addr16
daa
fdiv
sub
pop
push
dec
bound
arpl
lods
in
cmps
push
pop
sbb
inc
jns
loope
cld
imul
popa
jb
popa
arpl
sbb
add
inc
mov
imul
sbb
pop
add
fdivr
lahf
add
int3
add
jmp
adc
lods
int3
int3
or
xlat
loope
repnz
in
or
adc
mul
jmp
or
ret
cmp
clc
dec
dec
push
push
inc
dec
xor
inc
adc
inc
daa
mov
sub
and
adc
daa
daa
daa
or
xor
clc
hlt
lock
outs
mov
in
call
and
pushf
fmul
paddusb
aam
pushf
pushf
pushf
ror
enter
pushf
pushf
sar
cmp
aas
mov
test
in
in
cmp
xor
aas
movs
paddusw
mov
das
dec
cmove
pushf
cmp
cmp
mov
push
add
mov
and
jmp
add
imul
je
movzx
ret
ss
pop
ret
push
xchg
xchg
fucomi
test
add
js
xchg
xchg
xchg
je
ins
push
cld
outs
fsub
jne
push
add
(bad)
fidivr
jne
xor
pop
enter
mov
mov
pop
icebp
mov
lea
push
mov
mov
inc
cmp
jne
push
mov
mov
jbe
out
jg
nop
mov
mov
ret
scas
mov
mov
xchg
inc
test
xchg
mov
jbe
mov
mov
push
add
pop
adc
mov
adc
add
or
(bad)
(bad)
xor
mov
push
push
mov
mov
jbe
sub
xor
add
rcr
call
mov
out
push
or
push
or
ret
ret
(bad)
inc
mov
or
inc
add
adc
fnstenv
sub
jne
(bad)
mov
push
aaa
shr
test
pop
pop
pop
push
ja
enter
dec
lods
sti
mov
xchg
in
jbe
loope
lock
into
add
call
ja
and
in
pop
rcr
outs
add
or
mov
in
fcmovnu
jne
ret
jmp
pop
mov
add
pop
repnz
mov
sub
jbe
pop
mov
push
mov
jl
sub
mov
aam
in
pop
ret
or
jmp
sbb
scas
sbb
sti
jne
sbb
inc
add
nop
es
mov
cmp
jnp
out
jge
mov
rol
(bad)
xchg
add
add
and
push
jg
ud0
sbb
mov
test
je
mov
mov
mov
add
add
sbb
add
(bad)
push
mov
data16
dec
and
push
xchg
pop
neg
jne
icebp
add
in
xchg
inc
dec
pushf
cmp
in
popa
clc
ret
xor
ja
push
je
mov
push
and
fst
or
lds
scas
mov
in
es
ja
mov
add
ret
into
ficomp
xor
cmp
jp
sub
jp
mov
sbb
jmp
mov
fild
sbb
cmps
mov
jmp
jno
mov
mov
or
sub
cmp
adc
or
mov
jmp
ins
loopne
ficomp
add
sbb
sti
add
pushf
xchg
lds
outs
aas
popf
cmp
pop
cmp
add
and
mov
cmp
shl
(bad)
jbe
or
jbe
scas
adc
xor
sub
push
push
adc
push
mov
leave
imul
or
cmp
add
sub
sahf
nop
out
sub
or
test
add
nop
movs
loopne
sbb
add
add
and
xlat
add
ror
in
out
ja
clc
mov
xor
add
add
bnd
xor
cli
dec
dec
mov
jg
inc
xlat
mov
pop
jl
nop
dec
(bad)
in
je
mov
inc
ds
scas
jle
xor
push
(bad)
pop
add
pop
and
cmp
pop
movs
and
fs
jge
push
and
les
js
mov
cli
jl
jno
inc
and
cmp
dec
clc
mov
xchg
mov
push
sub
clc
call
or
nop
lods
call
jne
sub
sbb
fcom
or
mov
xor
mov
cld
xchg
jmp
jo
mov
jne
xchg
cmp
movs
lds
sub
inc
popf
adc
inc
pop
xchg
(bad)
jmp
ret
mov
mov
mov
lock
jae
mov
push
sub
mov
adc
fidivr
jno
pop
push
test
je
imul
out
jmp
adc
loopne
push
adc
adc
ja
push
jmp
xor
cmp
pop
sbb
add
jns
pop
add
mov
mov
push
mov
and
cmp
or
mov
xchg
popf
adc
sub
(bad)
or
sub
imul
jnp
sbb
leave
jle
hlt
inc
cmp
adc
in
jns
jp
add
sbb
aad
add
pop
pop
pop
push
mov
adc
xchg
or
xlat
mov
in
pop
pop
xchg
push
and
pop
xchg
test
shl
stos
(bad)
iret
add
(bad)
cmp
arpl
adc
add
and
and
imul
sub
je
bound
cdq
mov
or
js
add
(bad)
cmp
pop
ja
sbb
add
adc
add
stc
pop
jg
add
add
sar
test
cwde
mov
jmp
sub
hlt
js
sub
mov
mov
mov
inc
inc
pop
cmp
jmp
dec
fadd
jb
add
or
add
std
push
mov
cmp
add
jmp
retf
add
sbb
cmp
jl
mov
sbb
mov
jb
fcomp
jle
(bad)
outs
inc
or
mov
and
jg
mov
sub
jmp
add
test
cld
inc
adc
inc
mov
jmp
dec
jbe
or
push
or
push
rol
repnz
pop
or
ret
(bad)
addr16
fsubp
push
(bad)
xor
adc
addr16
inc
je
add
cmps
(bad)
xor
sub
inc
aas
add
test
je
mov
sub
cmp
cmp
cwde
dec
push
test
fisubr
push
mov
xor
add
mov
clc
add
in
jmp
fsub
test
jne
mov
(bad)
bound
jp
mov
and
mov
pop
adc
mov
pushf
add
fdiv
xor
jmp
mov
into
mov
pop
pop
push
lea
sub
cld
jg
clc
sub
sub
sbb
mov
jge
mov
sub
out
inc
jmp
daa
xlat
cld
lea
and
mov
in
mov
aad
(bad)
lds
sub
add
adc
rol
pop
in
aad
pop
adc
or
inc
mov
push
xchg
iret
mov
mov
mov
add
sub
jo
arpl
movs
retf
adc
mov
nop
hlt
cmps
adc
mov
mov
mov
sbb
cmp
inc
adc
add
add
sub
cmp
or
mov
pop
cmp
or
mov
sbb
jle
adc
mov
xor
sbb
cmp
call
and
ret
lea
or
scas
sub
lock
mov
cwde
pcmpgtb
sub
es
into
lock
cmp
pusha
xchg
test
pop
add
loope
movs
push
adc
repz
(bad)
mov
popa
popf
sub
hlt
sub
or
sbb
sub
inc
sti
rcr
mov
mov
leave
aam
loopne
arpl
fst
sbb
mov
push
fadd
pusha
pop
pop
inc
enter
stos
pop
int3
(bad)
rol
pusha
or
test
inc
mov
dec
xchg
sar
jb
jg
adc
push
push
adc
or
jmp
lock
clc
gs
cmp
test
pop
movd
lods
pop
mov
lock
pop
mov
pop
je
pop
jmp
fxch
inc
ja
or
dec
sbb
add
jle
mov
jne
rol
sub
cmp
sbb
aad
das
jbe
inc
add
xor
pop
out
inc
sub
xor
dec
pop
jmp
std
jmp
inc
and
leave
jmp
mov
stos
clc
repnz
jne
js
sbb
jae
pop
xor
pop
sub
into
pop
jne
pusha
or
je
sti
clc
lock
stos
jle
inc
cld
jbe
aas
xor
cli
xchg
cld
aas
mov
cmp
push
mov
add
xor
sti
mov
mov
sbb
jg
mov
jns
mov
pop
inc
push
cmp
or
push
or
(bad)
dec
es
jge
inc
(bad)
sahf
xor
pop
pushf
or
and
jecxz
add
inc
jae
jbe
jmp
mov
mov
lahf
cmp
sbb
dec
sub
mov
fdiv
push
or
sbb
shr
enter
ret
adc
pop
inc
ins
popa
push
adc
push
push
inc
mov
mov
stos
daa
jne
out
or
jo
adc
test
adc
adc
fwait
std
pop
stos
pop
lock
test
jne
test
ja
inc
and
or
mov
cmp
sahf
push
add
loope
add
or
test
(bad)
jge
xor
cmp
xchg
push
pop
movq
sub
cmp
bswap
jne
stos
in
cmp
jle
sbb
sahf
lock
lods
dec
mov
adc
ret
sbb
sub
adc
test
scas
dec
add
sub
push
clc
push
adc
xchg
pusha
jo
or
adc
je
shl
pop
cld
rcl
adc
pop
dec
rcr
js
mov
(bad)
sbb
call
push
lods
clc
sub
mov
xor
ret
adc
sbb
not
test
pop
fwait
adc
add
int
scas
(bad)
jge
sub
popf
stos
mov
add
cmps
popa
rol
sbb
pusha
sub
mov
push
pop
and
pusha
cmp
imul
(bad)
sub
cmp
push
fmul
adc
je
xchg
xor
dec
daa
add
inc
lahf
sub
dec
add
dec
or
mov
pop
test
add
sbb
and
push
mov
mov
loop
sub
or
stos
ret
push
xchg
mov
loopne
cmp
xchg
ret
rol
ret
add
or
or
adc
push
or
add
add
adc
adc
xor
pop
test
inc
test
pop
cld
jmp
or
pop
out
adc
ins
ret
(bad)
add
loop
or
retf
xchg
dec
sbb
dec
ss
popa
cmps
test
jle
inc
add
mov
add
in
jmp
xor
mov
sub
dec
retf
dec
je
test
test
je
sbb
enter
div
dec
pop
or
add
push
jmp
mov
jmp
add
mov
repz
push
mov
mov
dec
sbb
pop
mov
ret
rol
add
jb
test
inc
sbb
pop
or
xor
jg
lea
out
mov
out
xor
xor
into
sbb
sar
sbb
idiv
mov
sbb
mov
mov
jg
xor
xchg
aas
and
adc
clc
push
frstor
xor
push
push
in
xchg
fidiv
rcl
test
xchg
iret
call
mov
lock
mov
sub
sbb
ret
(bad)
fcomip
sbb
rol
jl
cmp
jg
add
mov
inc
rep
jmp
mov
ss
leave
jmp
shr
mov
call
ret
pop
adc
stos
nop
sbb
(bad)
mov
mov
loope
cmp
div
je
dec
js
rep
xchg
outs
data16
mov
xor
lea
xor
std
xor
jecxz
add
sar
pop
pop
jmp
rol
xor
inc
test
and
cmp
xchg
cmp
add
(bad)
add
out
in
mov
jmp
cmp
xor
push
xor
sub
add
ja
jne
in
sbb
mov
sub
sbb
mov
xor
jmp
outs
cmp
mov
(bad)
cmp
jbe
mov
mov
inc
inc
adc
cmc
shl
fisubr
test
push
xlat
push
les
mov
fst
lock
cmp
std
enter
cld
xchg
sbb
adc
cmp
ficom
add
jmp
sbb
pop
xor
add
adc
pop
cld
test
xchg
div
push
mov
cld
fldenv
mov
fdivrp
jp
push
pushf
jmp
std
dec
shl
test
jnp
clc
data16
call
and
or
push
push
add
or
pusha
jnp
cmp
or
xchg
add
sbb
cmp
fdiv
push
cmp
ja
sub
es
and
loop
sub
rcr
fnstcw
pop
push
sub
fist
fwait
pop
pop
scas
(bad)
fs
sub
inc
sub
ror
lock
data16
dec
les
mov
scas
or
data16
xor
pop
jo
fsubr
mov
mov
pop
mov
sbb
in
push
sbb
inc
mov
mov
in
(bad)
cli
das
mov
out
mov
or
lea
push
call
push
adc
jno
test
pushf
fstp
clc
ins
jne
push
add
xchg
ret
xor
jae
ins
xchg
cmp
sbb
push
push
or
push
pop
out
lea
div
dec
sete
xchg
fadd
scas
jo
aad
push
in
int3
test
nop
push
fdiv
or
(bad)
div
or
adc
sub
ret
dec
je
add
pushw
test
cmp
mov
sbb
push
jmp
sar
je
inc
add
push
rcr
and
and
aam
dec
pushf
mov
push
inc
push
push
push
push
lea
test
pop
rol
cmp
mov
cmp
pop
fld
dec
dec
dec
push
inc
nop
inc
inc
out
sub
jl
jae
jbe
xchg
push
aaa
ror
(bad)
out
jle
mov
scas
ror
outs
cmps
cmp
test
cmp
jae
cmp
push
xor
out
push
xchg
sub
jp
sar
out
dec
jne
jmp
lea
or
push
push
hlt
pop
add
xchg
push
xchg
and
jne
shl
call
mov
dec
pop
mov
add
push
test
xchg
push
jb
ds
inc
mov
add
sbb
fisttp
scas
jmp
adc
adc
into
adc
cmps
mov
fidivr
data16
push
push
ins
push
clc
fist
cmp
cmp
dec
pop
push
dec
movs
(bad)
addr16
mov
cmps
cmp
jmp
sub
dec
jg
sbb
sbb
fucomi
pop
mov
mov
and
jp
and
push
sbb
inc
popfw
xchg
adc
and
fadd
sub
enter
das
ja
and
dec
push
xor
push
sub
sbb
cmp
inc
cld
adc
mov
fcomp
jmp
push
push
je
mov
cs
test
inc
and
out
xchg
leave
movaps
or
ror
inc
(bad)
mov
push
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
in
das
shr
pop
add
aaa
add
(bad)
or
loop
push
adc
stc
(bad)
push
add
and
je
mov
cmp
jne
dec
je
mov
cmp
jne
stos
push
cwde
cmps
or
call
jns
mov
jbe
cmp
jne
shr
shr
sbb
stc
fdivr
dec
(bad)
push
mov
shr
or
int
out
pop
cmp
cmp
out
rol
pop
and
mov
cmp
jne
dec
dec
ins
call
dec
sbb
and
rcr
jecxz
popa
push
std
add
mov
shl
or
aas
cwde
or
stos
mov
stos
pop
es
imul
mov
cmova
or
push
dec
ins
fld
(bad)
fstp
push
inc
cmp
je
mov
or
je
or
je
fstp
pop
imul
push
xor
fistp
dec
inc
test
and
add
sub
fucomi
xor
or
cmp
ja
lea
push
add
push
shr
int
or
jge
or
aad
std
jg
fdivr
js
pop
sub
jmp
inc
inc
jmp
mov
fnstsw
je
and
xchg
and
popa
add
rol
aam
stos
dec
jge
cwde
aad
cwde
pop
xor
mov
push
xchg
inc
(bad)
in
jbe
xor
pop
shl
sbb
pushf
sbb
sahf
jnp
pop
mov
push
xchg
ret
das
sub
clc
and
push
in
movq
call
sbb
aam
mov
add
lock
or
retf
add
rcl
shl
movs
call
in
std
and
jmp
xchg
adc
or
cmps
nop
inc
mov
stc
inc
jle
dec
pushf
ins
dec
fiadd
mov
aas
das
push
mov
aad
ret
and
test
lock
jmp
(bad)
div
retf
push
cli
add
js
push
and
or
mov
or
fldcw
jmp
xor
add
xor
dec
neg
mov
push
mov
cmp
sub
ins
cli
pop
je
inc
mov
dec
jne
pop
out
mov
pop
sbb
dec
repz
mov
sti
xchg
cs
jl
je
test
int3
adc
lea
fistp
pop
lea
fld
fsubr
add
scas
sbb
pcmpeqb
and
(bad)
jle
int
and
adc
push
adc
retf
stc
xor
mov
stc
jmp
fstp
fld
mov
ins
adc
out
mov
dec
ds
cmp
aas
mov
ds
in
cli
or
or
ret
(bad)
repnz
dec
and
adc
mov
enter
out
sbb
add
mov
das
adc
es
test
jle
hlt
and
mov
adc
xor
leave
sbb
scas
lds
mov
jbe
imul
cmp
mov
(bad)
out
cld
iret
mov
bound
cmp
xlat
fadd
aaa
call
xchg
aas
push
push
int3
into
sbb
call
inc
mov
push
pop
test
enter
movs
outs
movs
push
inc
cmp
and
(bad)
(bad)
(bad)
jmp
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
leave
(bad)
(bad)
(bad)
push
leave
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
(bad)
fbstp
push
stos
mov
cmp
or
mov
pop
out
sub
(bad)
call
inc
imul
(bad)
div
jl
xor
cmp
call
mov
sti
(bad)
(bad)
(bad)
(bad)
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
nop
fild
daa
movs
(bad)
(bad)
(bad)
call
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
(bad)
(bad)
(bad)
inc
mov
ds
push
cmps
scas
mov
pop
or
add
(bad)
jmp
mov
pop
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
(bad)
call
stc
(bad)
repz
mov
sub
and
and
push
pop
aad
bound
xor
outs
xor
(bad)
out
mov
mov
je
clc
pop
jne
push
pop
cmp
add
(bad)
repz
mov
outs
lea
movzx
fld
push
das
sbb
push
mov
das
daa
and
inc
hlt
mov
hlt
push
data16
add
out
fld
sub
cmp
out
mov
jmp
xor
clc
pop
aas
or
sbb
adc
push
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
push
dec
add
push
dec
popa
jae
push
popa
ins
jne
fninit
fwait
aad
mov
add
mov
mov
das
xlat
mov
xor
mov
inc
rep
(bad)
out
push
std
push
or
push
mov
or
dec
cld
jne
dec
mov
xor
xchg
adc
stos
repnz
mov
ss
fadd
sahf
popa
inc
pusha
add
jmp
rcr
dec
pop
aaa
(bad)
sti
or
jbe
rcr
test
or
fsubp
add
movups
mov
cmp
fwait
enter
outs
loopne
mov
inc
push
cld
test
fdiv
rcl
test
dec
clc
add
stos
pop
(bad)
mov
sub
push
mov
push
add
sbb
in
cmp
je
pop
mov
add
inc
sbb
mov
jnp
mov
push
sbb
fild
jecxz
lods
(bad)
mov
mov
mov
sub
inc
adc
mov
cmp
(bad)
jb
jb
add
jmp
rol
rcr
adc
dec
fcomp
test
call
clc
pop
sub
mov
sub
sub
xor
ficom
add
lock
pop
ret
add
add
pop
(bad)
call
sub
cmps
ror
(bad)
dec
setne
scas
jo
jnp
sub
xor
sbb
ret
jne
sar
cwde
cld
mov
cmp
jne
jb
imul
fmul
or
jne
or
cmp
mov
fcom
lds
aas
and
imul
sub
adc
les
sar
idiv
push
mov
mov
cmp
je
mov
leave
jne
mov
add
pop
xchg
jmp
retf
cwde
or
les
push
add
repnz
je
pop
in
neg
loop
inc
pop
add
sub
mov
pop
cs
xchg
add
jle
mov
jmp
inc
mov
mov
fcomp
xor
das
mov
shl
inc
dec
out
es
les
shl
mov
sbb
outs
sbb
xor
sub
data16
(bad)
lods
mov
stos
pop
and
pop
xchg
xor
mov
mov
fadd
jnp
dec
xchg
adc
push
dec
mov
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
xor
jg
jmp
add
jecxz
push
mov
dec
cmp
fistp
pop
sahf
enter
or
mov
mov
call
xor
call
jb
push
pop
add
mov
jl
mov
hlt
xor
dec
adc
sbb
sbb
and
lea
mov
call
stos
sahf
jle
call
adc
sahf
fst
push
clc
mov
je
(bad)
sbb
aaa
enter
dec
cmp
add
loopne
fsub
fadd
mov
push
and
or
pusha
push
idiv
in
xor
xor
(bad)
iret
cs
sub
mov
add
or
jae
jne
rcr
addr16
pop
push
push
and
push
jg
sbb
jmp
jne
movsx
inc
inc
jmp
sbb
pop
addr16
xchg
sub
push
jecxz
nop
fld
push
aas
loop
pusha
fsub
pop
fdivr
adc
ror
or
inc
add
scas
les
jne
fiadd
push
stos
sti
push
outs
mov
adc
outs
lock
jo
pop
adc
je
out
cmp
mov
js
xlat
loop
rol
je
or
jbe
sbb
outs
test
nop
push
into
adc
(bad)
jp
cmp
pop
jbe
pop
cmc
and
(bad)
outs
enter
adc
test
mov
cli
push
jns
adc
addr16
jo
dec
add
out
movs
add
push
sbb
push
sub
cmp
dec
retf
mov
and
sub
mov
fwait
outs
or
inc
add
in
ret
add
test
out
mov
(bad)
out
not
mov
sub
stos
imul
push
outs
je
dec
inc
fst
jne
mov
pop
test
or
ds
test
pop
add
lds
mov
out
aaa
sbb
clc
add
cmp
adc
loope
jne
xchg
mov
jle
sub
or
xchg
push
push
loopne
jne
test
int3
rcr
and
adc
inc
or
out
dec
push
cmp
daa
push
adc
lahf
adc
adc
ins
or
mov
das
inc
pop
adc
mov
and
das
ins
pop
or
xor
arpl
popf
je
or
pop
(bad)
cmps
mov
aas
ret
push
sub
lods
pop
ret
outs
or
mov
adc
push
push
push
mov
sub
fs
inc
sahf
dec
lock
xor
sbb
or
push
add
test
lods
(bad)
fsubr
in
aaa
and
pop
mov
mov
cmc
(bad)
xchg
es
lahf
or
and
push
cmp
push
pop
lods
pop
ins
mov
shl
xor
or
mov
add
mov
add
mov
pop
cmp
push
sub
out
(bad)
push
cmp
pusha
add
sub
jb
je
jmp
cmp
push
stc
adc
xchg
cs
adc
jmp
sub
(bad)
jmp
cmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
(bad)
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
fsub
call
ror
sbb
push
mov
jg
ss
je
push
outs
xlat
and
jp
xor
test
mov
push
push
inc
sbb
or
mov
or
or
mov
sub
mov
add
add
add
add
push
adc
mov
xor
ret
sbb
inc
or
push
jbe
push
mov
sub
sbb
cmp
cmps
add
xor
aaa
repnz
cmp
jne
adc
(bad)
sub
scas
(bad)
xchg
cmp
fdivp
pop
dec
mov
mov
jno
pop
sahf
sub
test
jle
dec
mov
inc
fidiv
rcl
loope
fsub
jg
jecxz
adc
jl
retf
xor
inc
push
cdq
or
mov
pop
ret
sub
xor
js
mov
cmp
jle
add
inc
test
inc
mov
mov
sbb
fndisi(8087
inc
std
ds
shl
stos
sbb
xor
int3
(bad)
test
cmp
popf
out
or
adc
(bad)
sbb
add
sub
push
add
add
movs
ss
add
in
pop
pop
pop
inc
pop
sbb
pusha
pop
gs
dec
add
mov
dec
fiadd
xchg
or
mov
adc
xor
mov
adc
xor
out
push
shl
mov
(bad)
sub
xchg
adc
retf
push
push
mov
inc
out
jbe
mov
xchg
rcr
push
add
adc
ja
add
mov
mov
push
or
cld
out
add
dec
sbb
adc
jne
sbb
test
or
add
or
push
push
movs
jecxz
xor
mov
ret
xor
jmp
dec
jae
jge
cmp
or
fiadd
mov
mov
mov
dec
cmp
push
cmp
adc
stos
adc
pop
mov
call
and
dec
cs
xchg
xor
xchg
iret
es
jne
ds
das
imul
jbe
fwait
popa
mov
ret
push
in
hlt
jbe
or
cmp
je
es
adc
dec
add
add
adc
dec
mov
mov
pop
cmc
fist
mov
loopne
add
mov
ret
pop
pop
xor
call
daa
movs
ss
and
inc
mov
or
int3
test
and
push
cmc
pop
mov
pushf
inc
dec
push
jp
std
clc
dec
jl
lock
push
lea
xchg
stos
icebp
xchg
pop
xchg
add
ret
cld
push
sbb
add
or
lea
jmp
inc
inc
sti
push
call
inc
imul
push
xor
xchg
ins
xchg
adc
xchg
jle
mov
push
pop
jle
push
add
inc
jecxz
jmp
pop
mov
ja
add
push
cld
ins
clc
add
cmp
outs
mov
push
lea
js
iret
mov
das
stc
mov
and
mov
ds
ds
cmp
aas
add
push
daa
test
inc
or
sub
adc
push
js
mov
rol
retf
push
(bad)
cmp
cld
pop
js
or
(bad)
jmp
lea
cmp
pop
js
sub
push
mov
inc
aaa
int3
idiv
outs
loopne
adc
sub
inc
js
jle
sbb
xor
pop
sbb
add
cmp
clc
fdivr
push
mov
push
in
(bad)
mov
je
adc
or
je
mov
add
push
push
jmp
inc
add
push
out
sub
jmp
push
cmp
jbe
cld
sahf
or
or
push
push
addr16
in
(bad)
jl
mov
add
or
sbb
xchg
es
gs
scas
cwde
rcr
rcr
scas
mov
ret
push
and
or
rcr
add
cmp
jl
adc
inc
sub
pop
add
(bad)
xchg
aas
pop
or
lahf
sahf
add
aas
dec
je
or
jns
push
cld
add
cmp
imul
add
and
mov
adc
xchg
cmp
das
sub
jne
out
popa
cmp
je
cmp
sub
add
outs
loopne
cmp
mov
hlt
cld
add
and
mov
fmul
add
adc
sbb
idiv
out
out
mov
mov
jmp
sub
(bad)
dec
jle
xor
mov
sbb
sub
mov
dec
jmp
fcomp
aam
sub
add
cmp
fs
loopne
popa
out
dec
jne
mov
cld
inc
cmp
and
aaa
add
dec
jmp
and
pop
jl
clc
inc
pushf
sbb
add
pop
dec
jne
xchg
sub
sbb
cmp
and
lea
jmp
pop
cmp
add
push
add
jl
sub
(bad)
imul
pop
xor
pop
dec
or
inc
pop
push
mov
cmps
cmp
xchg
sbb
and
or
retf
jmp
sub
out
sub
inc
das
lods
add
and
pop
add
add
je
loop
das
dec
cmp
(bad)
cmc
fnstenv
dec
mov
adc
sub
dec
inc
es
mov
test
js
call
std
sub
sub
dec
jl
cmp
jge
sub
sbb
push
or
sbb
adc
push
std
push
push
xor
xor
jmp
inc
jmp
xlat
push
test
and
aas
inc
out
int3
cmp
pop
icebp
xchg
jge
mov
mov
add
popa
pop
jg
stc
add
lea
inc
dec
movs
push
jmp
fxch
push
dec
cmp
or
(bad)
addr16
int3
lahf
cdq
mov
push
mov
sub
mov
out
cmp
adc
imul
add
gs
cmp
add
mov
mov
lea
lock
add
mov
lock
xor
call
neg
push
ins
dec
js
mov
inc
jb
adc
adc
retf
cmp
mov
sbb
adc
fsub
add
sub
xchg
dec
out
mov
js
add
sub
or
loopne
push
sbb
(bad)
fisub
ret
(bad)
in
jmp
out
(bad)
arpl
cli
pop
cmp
(bad)
pop
jne
clc
pop
xor
sbb
fs
push
retf
cmps
repz
dec
and
add
test
and
xor
lods
cwde
add
jmp
inc
dec
dec
mov
pop
sub
push
sub
aaa
div
cmp
call
shr
sub
in
jno
repnz
cmp
jmp
ror
retf
pop
in
jle
mov
jl
adc
cld
dec
dec
dec
enter
xchg
loopne
(bad)
or
dec
push
das
sbb
pop
push
mov
and
fild
push
mov
frstor
sbb
adc
add
add
add
sbb
shr
and
xlat
and
push
add
sbb
scas
dec
sub
pop
data16
inc
inc
sahf
and
or
adc
ja
clc
push
lods
test
sub
sti
add
xor
dec
adc
dec
cmp
nop
pushf
call
cmp
mov
push
lods
add
add
mov
sub
or
pusha
jecxz
aas
je
jle
cdq
or
call
push
adc
mov
and
xchg
mov
jg
mov
dec
jne
out
cdq
lea
jl
push
fs
push
xchg
jo
pop
test
jg
mov
shl
push
add
pop
jp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
mov
je
and
ror
cmp
mov
or
clc
jmp
adc
cmc
pop
aaa
lods
or
adc
jmp
loop
mov
test
pop
or
pop
cs
cs
adc
cmp
je
imul
pop
jmp
cmp
mov
sub
add
push
jmp
xchg
push
inc
pop
cwde
mov
push
je
push
(bad)
sahf
adc
cmp
sbb
add
and
ds
pop
jbe
test
es
push
mov
inc
ss
jmp
lods
and
pop
mov
cmp
daa
ja
cmp
aaa
xor
fsubr
outs
es
dec
inc
sub
jmp
test
inc
pop
inc
lods
sub
adc
sub
xor
test
cmp
dec
sbb
jmp
leave
gs
adc
ret
xchg
pop
sbb
daa
xor
mov
pop
fdiv
add
cld
ins
dec
clc
push
push
add
cmp
je
sar
add
mov
sbb
imul
cmp
xor
(bad)
fmul
or
je
or
jo
imul
adc
and
mov
fs
cmp
pop
imul
and
lock
lea
mov
jno
repnz
call
loope
pop
jbe
or
mov
cmp
add
jns
xor
mov
fdiv
ds
sub
test
pop
xlat
pop
ins
or
sbb
xchg
mov
iret
pop
ins
and
mov
xchg
dec
in
in
inc
push
popa
jge
nop
inc
cs
pushf
(bad)
pop
sbb
pusha
jmp
ror
out
mov
jae
lock
cmps
mov
adc
data16
loop
dec
xor
add
es
ja
shl
sti
add
add
inc
jmp
mov
add
add
je
cmp
outs
xchg
xor
cmp
dec
fcom
xor
data16
adc
in
pop
xor
mov
add
jle
add
inc
dec
pop
outs
(bad)
call
lods
(bad)
push
push
adc
add
mov
mov
dec
mov
(bad)
lods
mov
scas
push
add
test
iret
ds
or
push
mov
sbb
sar
mov
or
ror
pop
pop
ret
popa
xor
inc
mov
(bad)
xor
sar
or
int
call
or
cmp
(bad)
in
out
fidivr
add
jne
sbb
inc
jmp
cmp
jne
mov
inc
mov
je
cmp
cmp
je
sti
sub
xor
push
fidivr
ins
push
retf
inc
popa
int
jnp
in
ret
or
push
stc
push
jb
out
(bad)
sub
sbb
mov
and
jmp
dec
repnz
sbb
jmp
push
loope
cmp
or
jb
jmp
jl
and
into
sub
jbe
jmp
jg
mov
cdq
aas
pop
push
pop
lods
test
movs
pusha
adc
mov
stos
(bad)
nop
(bad)
nop
inc
sbb
add
jmp
mov
xor
test
push
cmp
sbb
adc
xor
lock
or
or
adc
jg
ret
add
icebp
cld
dec
push
xor
jl
jmp
sub
das
xor
xor
xchg
and
inc
jmp
setl
cmp
je
dec
add
mov
or
push
rol
or
pop
(bad)
cli
pusha
test
xor
push
dec
xlat
and
inc
ret
cmc
inc
ficom
push
pop
loopne
repnz
mov
sbb
cmp
pusha
mov
xchg
pop
mov
movs
mov
(bad)
lods
js
dec
add
leave
add
xor
push
push
inc
add
(bad)
adc
push
push
test
or
mov
pushf
dec
test
call
dec
in
in
cmp
je
xor
(bad)
push
cmp
jne
mov
cmp
jge
adc
rcr
mov
adc
ins
imul
sub
add
inc
loopne
push
in
fstp
inc
mov
pop
dec
stos
cdq
rcl
cs
retf
in
jge
mov
fidiv
or
mov
loope
and
les
(bad)
mov
repnz
push
dec
shl
add
add
jl
cmp
add
mov
test
add
cmps
cmp
(bad)
jo
jle
cwde
or
xchg
dec
jo
and
xor
sub
add
or
cmp
test
fstp
dec
jne
enter
mov
cmp
sub
test
cmp
jg
das
(bad)
xor
lock
jne
je
add
sahf
add
lea
hlt
inc
pop
fwait
cmp
adc
ins
add
mul
test
dec
push
push
adc
cld
push
mov
inc
out
pop
pop
jb
(bad)
sbb
out
(bad)
in
sbb
add
mov
jne
sbb
mov
push
nop
ret
and
bound
jne
pop
pushf
or
add
fdiv
out
and
xor
xchg
sbb
sti
jne
test
mov
inc
sbb
int
or
cs
push
cs
adc
jecxz
jmp
fmul
cli
pop
jne
stos
popf
sub
nop
mov
push
add
mov
mov
sbb
dec
enter
inc
daa
js
fistp
fcom
xor
test
je
ret
push
in
les
std
scas
jge
jp
mov
cmp
js
pop
jne
fdivr
add
dec
sbb
rol
imul
ret
in
jne
mov
fisubr
in
fdiv
outs
pushf
lea
mov
sbb
arpl
(bad)
sub
add
inc
cmp
pusha
jg
gs
fnstenv
dec
ja
in
and
je
sbb
shl
pusha
fstp
jmp
inc
cmp
test
ins
sbb
push
push
mov
inc
xor
shr
sub
dec
mov
aas
ret
imul
gs
xor
cs
ins
pop
inc
gs
outs
outs
addr16
push
mov
push
inc
daa
outs
loopne
push
(bad)
pop
mov
sbb
push
(bad)
mov
inc
out
and
push
jns
cmps
dec
sbb
add
add
ja
inc
jl
add
loopne
jl
dec
icebp
cmp
or
pop
pop
xor
xchg
out
inc
stc
int
sbb
ins
mov
iret
pop
cmp
dec
popa
xor
adc
sti
ror
jb
and
(bad)
push
lods
repz
sub
pop
sbb
test
mov
repz
xor
mov
sar
and
sti
int3
hlt
sub
add
cmp
stos
pop
cmp
jne
adc
popf
inc
or
push
int3
icebp
shr
rcr
xlat
rcr
add
dec
adc
inc
xor
outs
repz
ins
ret
xor
cmc
add
mov
outs
data16
popa
jb
stos
fnstenv
cmps
mov
jae
aaa
pop
lods
pop
adc
inc
cdq
dec
push
ja
mov
or
pop
add
retf
ins
popa
mov
xor
cli
jbe
mov
sbb
sbb
adc
mov
(bad)
jp
mov
add
mov
add
je
mov
mov
dec
loope
push
js
(bad)
fnstcw
out
cli
mov
or
scas
cmp
dec
daa
mov
cld
dec
add
sahf
or
ror
xor
cmp
jno
(bad)
jnp
call
fimul
or
mov
inc
mov
and
call
cmp
cmp
adc
iret
in
jmp
mov
cmp
push
pushf
lock
cld
jne
pop
sbb
inc
push
out
mov
ret
dec
stc
sbb
add
push
or
sbb
es
push
dec
or
sub
dec
push
inc
aam
cmp
sahf
je
sbb
cs
sub
shr
mov
xor
outs
pop
les
out
mov
pop
ret
sbb
add
sti
mov
mov
adc
sub
daa
aam
test
(bad)
or
pcmpeqw
int
pusha
add
adc
cmp
xchg
sbb
(bad)
mov
mov
dec
js
inc
(bad)
or
adc
or
sbb
jnp
(bad)
push
js
aam
arpl
add
sbb
ret
iret
paddusb
lds
push
inc
xchg
psrlw
cli
aam
fidiv
leave
mov
pop
adc
inc
cmp
ja
mov
inc
jmp
cmp
ret
lea
cmp
ja
fcmovb
jmp
or
sar
imul
mov
adc
sbb
and
retf
adc
add
and
and
popf
test
inc
add
xor
dec
jae
cmp
jb
or
dec
mov
lods
sbb
mov
adc
or
clc
mov
pop
add
cmp
lea
ret
xor
pmaxsw
or
repz
dec
retf
test
xor
(bad)
out
or
xor
fdiv
cli
mov
inc
test
je
or
outs
pop
icebp
or
sbb
loope
and
je
cmp
adc
jo
repz
fiadd
or
mov
xlat
js
and
or
mov
pop
data16
ja
lea
dec
dec
cld
mov
nop
lock
pusha
mov
inc
call
scas
sbb
or
mov
and
inc
inc
mov
ret
mov
sbb
sbb
fimul
jnp
xor
sbb
or
jb
push
lock
jmp
daa
out
sbb
sbb
jb
cmps
(bad)
icebp
loop
pop
push
rcr
sub
pop
arpl
in
adc
mov
and
push
push
and
fisubr
cmp
mov
ror
fwait
mov
cmc
retf
pop
imul
adc
push
sbb
xchg
inc
push
dec
cmp
aam
shl
cmc
rol
pop
sbb
jns
and
and
inc
push
int3
and
jns
ds
cmp
adc
lock
push
cmp
or
pop
mov
cdq
push
add
mov
out
add
dec
imul
fimul
jge
data16
mov
in
mov
push
xor
add
clc
aaa
movs
xchg
and
pop
dec
pop
pop
mov
pop
push
pushw
lea
push
push
push
adc
add
and
mov
or
adc
call
push
ins
bound
ret
mov
daa
push
rcr
xchg
mov
mov
mov
mov
cmp
leave
adc
call
push
mul
lds
test
sbb
(bad)
cwde
or
pop
mov
and
test
ins
sbb
jl
adc
cmp
adc
and
in
jecxz
sbb
adc
popf
jl
loopne
enter
dec
cli
adc
idiv
cmp
jbe
rol
aaa
frstor
cmp
cld
mov
lods
shr
or
xor
inc
pop
(bad)
leave
leave
cmps
inc
addps
add
jno
xchg
mov
and
inc
ss
sbb
pop
movs
jmp
loop
adc
call
cmp
jge
or
mov
mov
mov
test
jne
mov
mov
int3
push
test
sti
fcom
jo
and
ret
mov
xchg
sahf
test
cwde
cli
push
gs
or
push
push
push
mov
push
(bad)
dec
push
xchg
leave
es
adc
push
sar
sub
add
iret
jbe
add
add
dec
xor
inc
pusha
dec
stos
push
push
mov
fnstcw
add
push
or
push
inc
sbb
dec
cs
dec
je
xchg
icebp
iret
cs
add
xor
add
ja
and
fs
gs
out
gs
(bad)
or
jb
jns
push
bound
inc
push
outs
arpl
ja
sti
das
inc
gs
jne
je
dec
outs
je
imul
lahf
imul
mov
gs
outs
inc
arpl
or
pop
xor
or
or
jb
xor
cmp
(bad)
outs
ins
bound
outs
js
imul
ja
mov
pop
or
andps
outs
dec
inc
xor
je
outs
ja
adc
add
nop
jl
mov
dec
js
jo
daa
inc
dec
dec
push
daa
daa
daa
daa
ror
enter
daa
daa
sar
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmp
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
xchg
and
add
cld
clc
xchg
xchg
xchg
xchg
hlt
lock
call
in
(bad)
xchg
xchg
xchg
xchg
aam
int3
enter
xchg
(bad)
sar
mov
test
xchg
xchg
xchg
movs
mov
leave
leave
xor
in
xor
jb
cld
clc
hlt
lock
jb
in
call
jb
(bad)
aam
jb
jb
int3
enter
jb
jb
mov
jb
lods
test
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
cmp
cmp
xor
clc
hlt
lock
pushf
pushf
sbb
js
ins
pusha
pushf
pushf
pushf
pushf
pop
pop
push
pushf
jo
push
dec
pushf
pushf
pushf
pushf
dec
inc
inc
cmp
pushf
pushf
pushf
cmp
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
pushf
pushf
pushf
or
ss
dec
dec
dec
dec
clc
hlt
lock
dec
dec
dec
dec
call
dec
dec
dec
fcom
sar
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwde
xchg
nop
mov
cmp
pushf
js
jo
pushf
pushf
pushf
pushf
push
pushf
pushf
pushf
pop
push
push
dec
fild
inc
setae
xor
cmp
mov
and
cmp
cmp
adc
cmp
cmp
or
add
pushf
pushf
pushf
sbb
cld
clc
hlt
lock
pushf
pushf
pushf
in
call
pushf
pushf
(bad)
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwde
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
ins
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
pushf
pushf
pushf
pushf
cmp
xor
pushf
pushf
pushf
pushf
sub
and
pushf
pushf
pushf
pushf
sbb
adc
xor
movzx
shl
or
push
rol
jbe
sbb
xchg
lea
or
xchg
and
out
sti
pop
add
or
nop
xor
shl
es
mov
scas
mov
test
mov
add
or
ficomp
mov
jo
(bad)
inc
push
sub
(bad)
lods
xchg
mov
aas
mov
jmp
add
fmul
repz
or
adc
add
repz
and
dec
and
push
popf
int3
(bad)
sbb
push
inc
cmp
ret
jb
(bad)
scas
cmps
add
push
and
outs
stc
jne
loope
add
jge
repz
pop
inc
pusha
in
push
movs
jnp
or
sbb
push
pop
xchg
sbb
mov
push
push
fs
and
adc
or
xchg
aas
inc
pop
or
adc
push
pop
xchg
mov
cmp
xchg
dec
popa
gs
enter
add
dec
inc
inc
dec
add
outs
inc
pop
push
and
pop
push
dec
dec
dec
push
inc
push
dec
pop
and
mov
out
jnp
dec
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
inc
push
dec
repnz
nop
sbb
jb
dec
jmp
jb
jb
repz
cmc
div
jb
idiv
stc
cli
jb
jb
sti
cld
std
(bad)
jb
jb
jmp
loope
jb
jb
jecxz
in
sahf
mul
out
data16
jmp
repnz
in
out
out
rcl
in
in
rcl
aam
in
in
(bad)
xlat
fcomp
in
in
fcmovu
(bad)
in
in
(bad)
rol
in
in
ret
(bad)
(bad)
in
mov
leave
in
in
retf
int
in
in
iret
mov
in
in
mov
mov
in
in
mov
mov
in
mov
in
mov
in
in
mov
in
cmps
cmps
test
and
dec
out
out
mov
and
leave
jl
mov
cmp
add
in
push
dec
add
stc
dec
pop
mov
js
gs
imul
repnz
repnz
in
xor
dec
gs
jo
nop
mov
mov
push
dec
dec
gs
outs
jb
mov
dec
dec
and
xor
addr16
dec
outs
mov
scas
mov
test
mov
jae
dec
push
ds
xchg
and
leave
in
imul
xlat
push
sbb
cmp
mov
ss
outs
scas
pushf
pop
dec
dec
cs
clc
or
imul
jns
gs
nop
hlt
hlt
dec
mov
popa
outs
imul
pushf
push
into
fucomip
out
outs
jbe
jb
ins
outs
ja
test
jb
inc
test
inc
test
ret
gs
lods
push
jb
mov
scas
imul
dec
jbe
ins
imul
test
ins
jb
mov
scas
mov
or
and
sbb
xlat
ins
or
ins
or
outs
fs
scas
pusha
xchg
or
(bad)
movsx
into
add
push
outs
imul
jmp
mov
in
add
cmovae
(bad)
outs
sbb
outs
sbb
stos
or
mov
shl
cs
adc
sub
inc
push
ins
popa
sbb
aam
push
xor
jno
push
jb
ins
and
fisub
sub
outs
sub
outs
sub
fwait
add
xor
add
cs
cs
mov
fidiv
inc
push
pop
and
(bad)
scas
loopne
(bad)
adc
(bad)
cmp
mov
cmp
push
mov
mov
popa
inc
repnz
paddusb
pushf
inc
int
enter
mov
mov
adc
fsubr
mov
and
push
cmp
data16
jno
(bad)
loopne
in
jno
or
loope
inc
push
stos
push
scas
lods
pop
popa
xchg
mov
popa
adc
add
data16
jno
adc
cs
xor
jmp
jo
pop
dec
invd
xor
and
bound
inc
call
inc
es
xor
fisub
xchg
cmp
adc
jb
popa
mov
mov
push
int3
add
jo
jbe
test
or
pop
(bad)
xchg
xor
cmp
aam
jns
not
lahf
test
out
test
jnp
sbb
shl
(bad)
fist
jno
cmp
jae
push
rcl
jae
xor
push
setb
or
push
dec
ss
mov
imul
es
add
push
fadd
lods
outs
arpl
rcl
jp
mov
or
shr
div
fisub
add
imul
fadd
retf
mov
mov
dec
ins
xor
push
enter
and
pop
nop
cmp
test
add
push
add
or
(bad)
ja
or
mov
pop
or
mov
jg
xchg
dec
pop
or
mov
adc
inc
xlat
xor
(bad)
sbb
cs
loopne
add
gs
mov
fsub
adc
dec
dec
mov
inc
inc
dec
inc
jmp
out
sub
add
pop
push
dec
fisttp
call
or
jbe
(bad)
and
je
movzx
push
push
call
mov
sbb
push
rcr
pop
mov
jne
inc
inc
ds
mov
sub
or
dec
cwde
(bad)
mov
(bad)
call
fisubr
je
loopne
out
sub
pop
pop
jne
or
sbb
or
push
cld
inc
or
je
xchg
and
pusha
sub
pop
ucomiss
sbb
mov
push
pop
add
mov
cmp
pop
je
add
xor
sbb
pop
ret
jmp
pop
test
add
push
jo
add
jne
out
xor
mov
outs
fld
mov
jnp
push
adc
jnp
loop
daa
mov
add
(bad)
fild
mov
repz
cmp
jbe
sti
dec
sub
jge
lds
add
aaa
clc
push
sub
inc
push
loopne
and
int3
addr16
idiv
mov
cmp
sbb
sub
je
movs
pop
ins
fwait
(bad)
jae
cmp
jl
inc
mov
pop
mov
sub
imul
add
or
jae
inc
dec
jne
scas
clc
ret
retf
mov
sar
mov
ja
mov
inc
dec
bnd
mov
idiv
xor
div
dec
out
cmp
jb
push
(bad)
jg
jne
mov
mov
pop
pop
sub
sub
jbe
add
mov
sub
cmp
jg
jmp
mov
dec
jne
push
mov
sub
xor
push
outs
cwde
dec
add
cs
mov
pop
mov
mov
(bad)
xor
jo
and
jo
push
mov
neg
and
dec
fs
cs
sbb
ins
or
dec
inc
and
add
jl
add
rcr
rol
psubusw
mov
dec
add
test
rcr
je
push
pop
(bad)
fild
fistp
ret
add
add
sub
add
xor
ins
ror
(bad)
fdivr
mov
imul
fcom
fstsw
sahf
jae
fld
jg
aad
add
ffree
ffree
pop
aad
pop
mov
sub
add
ds
sar
and
or
and
loop
pusha
and
adc
lods
loop
cli
mov
mov
xchg
push
pop
bound
idiv
and
rcl
ret
cli
and
xchg
dec
aam
sub
outs
jecxz
sbb
inc
jecxz
pop
xchg
js
hlt
and
jae
push
ins
push
mov
das
fidiv
imul
add
(bad)
cmps
cmps
mov
mov
ror
lahf
aas
call
inc
pop
sbb
(bad)
daa
mov
loopne
add
enter
pop
sbb
rcl
fdiv
mov
mov
and
shr
sbb
mov
aas
add
fistp
add
and
mov
repnz
jl
inc
inc
xlat
sub
push
fimul
push
cmp
ins
pop
jmp
jecxz
push
xor
clc
mov
lock
lea
fld
xor
dec
cld
adc
ins
lock
loopne
pop
setne
jmp
ss
push
call
std
cmp
rcr
add
inc
cmp
cmovbe
out
pop
pop
xor
sub
dec
fbstp
bound
test
in
xchg
mov
adc
jmp
and
cmp
mov
ins
inc
fadd
adc
lods
inc
sub
lock
clc
or
mov
add
loopne
ja
adc
inc
ja
or
sub
push
adc
es
sub
mov
clc
mov
push
mov
push
jno
xor
pop
pushf
inc
jae
movs
xor
rol
xchg
das
push
stc
mov
pop
inc
cmc
sub
mov
adc
shl
mov
mov
pop
leave
in
mov
or
pop
xor
cli
xchg
push
mov
ins
out
repz
jae
das
add
cld
jo
shl
mov
jl
xor
inc
arpl
inc
add
rol
push
and
outs
pop
loopne
inc
inc
into
pop
mov
repnz
mov
push
(bad)
dec
pop
addr16
stos
mov
repz
pop
inc
inc
jmp
inc
jecxz
popf
jne
dec
push
jo
add
shr
aas
mov
jge
(bad)
mov
sub
inc
jl
(bad)
es
rol
or
ds
clc
retf
jge
xchg
or
int3
or
pop
push
iret
inc
and
test
jge
lea
jae
and
aad
add
sbb
cs
cmp
out
nop
mov
pop
and
jle
icebp
pop
jne
fidivr
inc
or
sar
cs
push
add
inc
sub
cmps
fmul
lock
adc
mov
aas
dec
ins
push
outs
lock
jle
jmp
adc
shr
jmp
push
jmp
(bad)
jbe
mov
clc
jne
mov
daa
pop
dec
mov
add
and
shl
lods
jg
push
in
xor
push
inc
jp
push
push
hlt
clc
aaa
cli
or
das
cld
imul
(bad)
mov
mov
hlt
enter
adc
sbb
mov
xor
aas
mov
dec
adc
jmp
push
dec
in
fbld
dec
mov
mov
ret
das
lea
push
or
jb
test
pop
dec
jle
ror
clc
sub
rcr
sbb
adc
dec
in
or
mov
retf
pop
cli
mov
pop
adc
pusha
xor
inc
out
fwait
icebp
jge
jecxz
pop
adc
aaa
mul
iret
push
ds
retf
pop
pop
lahf
xlat
mov
xor
outs
mov
xlat
xor
repz
mov
mov
rol
pop
je
dec
sub
sub
mov
mov
jmp
pop
pushf
inc
mov
mov
ror
rcl
shl
and
icebp
jmp
push
and
inc
data16
push
pop
cmps
shl
scas
sub
pop
add
pop
sti
sbb
mov
mov
pop
sub
jbe
movntps
inc
(bad)
lods
mov
mov
push
aam
add
shl
mov
mov
pop
test
hlt
xor
cmps
sbb
mov
pusha
pop
shl
add
or
lds
test
jle
mov
jecxz
adc
xchg
jle
add
jne
pop
ja
addr16
sub
dec
add
lods
lods
pop
jbe
pop
jno
dec
aam
lods
sahf
dec
jl
add
in
iret
jmp
xor
aad
int3
inc
sbb
out
mov
pop
push
mov
adc
or
sbb
mov
sbb
sbb
push
or
xchg
add
cmps
xchg
push
repz
sub
test
sub
adc
jp
jmp
or
and
push
hlt
stos
dec
jne
xchg
sub
pop
inc
in
bnd
mov
call
sub
pop
add
sbb
imul
and
lods
jmp
or
jns
jno
cli
sub
sub
mov
jne
adc
add
cmp
ret
(bad)
call
jae
shr
xchg
pop
mov
cmp
lock
inc
push
xor
mov
pop
fimul
jb
cmp
ja
imul
pusha
sub
movzx
add
and
in
dec
(bad)
shr
mov
push
or
cld
or
repnz
ret
je
jmp
or
xchg
ret
and
mov
sub
cmp
pop
jne
lea
push
sahf
ins
xchg
ficomp
js
stc
push
or
stos
push
test
push
imul
cmp
fisttp
pop
test
xchg
hlt
and
push
push
xor
jp
adc
sub
ins
cmps
fwait
xor
mov
fadd
stos
sub
mov
inc
je
int
rcr
fmul
sar
jmp
push
pop
outs
adc
cmp
(bad)
loope
add
stc
jp
push
cmp
jbe
mov
aad
or
jmp
xor
mov
inc
in
and
jmp
mov
push
fsubr
add
jne
aas
and
jg
cmp
call
pop
js
mov
push
xchg
add
sbb
fdiv
or
jmp
jecxz
mov
mov
rcr
leave
push
push
mov
movs
mov
aaa
sub
outs
mov
repz
sub
add
inc
je
mov
jo
fcmovu
dec
je
dec
jl
mov
mov
or
pop
cmp
jbe
mov
xchg
aaa
sbb
inc
fdivr
xchg
cmp
pop
mov
jno
push
loopne
mov
inc
iret
dec
xchg
clc
xchg
ret
xor
and
retf
lahf
lods
ror
mov
inc
scas
stos
mov
and
push
pop
or
int3
mov
scas
cld
and
and
cli
imul
test
je
vpmacssdql
test
sub
add
sti
popa
pop
ins
add
sbb
(bad)
clc
dec
cld
lea
popa
(bad)
ins
out
or
fbstp
inc
mov
ret
jmp
add
push
pop
test
dec
clc
fiadd
adc
lea
loopne
ins
xor
xchg
mov
lea
push
mov
adc
push
xor
stos
or
stos
(bad)
pop
mov
push
mov
neg
jmp
or
enter
add
stos
xchg
push
mov
(bad)
mov
jl
fbld
dec
clc
in
or
jg
dec
mov
stos
cmp
jne
xor
inc
rcr
xchg
jb
or
sub
jbe
cli
mov
repz
test
(bad)
aam
mov
pop
arpl
xchg
sub
jge
pop
jmp
mov
ins
daa
hlt
sbb
sbb
adc
jb
ror
inc
sti
aas
outs
mov
mov
sub
loop
jae
mov
xchg
dec
mov
shr
test
stc
jbe
je
push
sub
adc
je
add
or
mov
add
jmp
pop
retf
popf
pop
xchg
add
sbb
call
in
mov
(bad)
jmp
push
mov
push
mov
inc
dec
lods
or
xor
jge
sahf
stos
or
(bad)
ret
std
mov
aam
adc
jg
test
stc
std
jl
pop
sbb
std
jp
loope
cmp
sbb
stos
jmp
inc
inc
lods
sti
out
dec
clc
movlps
pop
pop
inc
clc
jne
sbb
pop
push
scas
adc
mov
stos
mov
es
sbb
inc
sbb
mov
sub
add
leave
mov
mov
jmp
sbb
push
aam
mov
ins
rol
fwait
cmp
cli
adc
mov
shl
add
je
mov
dec
add
div
mov
inc
test
jne
sbb
push
shl
jmp
fidivr
(bad)
push
sti
add
je
inc
jne
pop
lock
test
add
jo
and
sbb
mov
pop
cld
lea
retf
add
lea
dec
add
inc
jle
je
push
push
cmp
mov
or
or
add
daa
inc
push
test
pop
pop
inc
loop
les
inc
rcl
test
scas
bnd
and
inc
add
and
and
adc
and
out
in
outs
sub
inc
sub
sub
idiv
jae
sbb
and
sub
fnstcw
not
sub
xor
into
inc
mov
sub
cmps
loopne
xor
cmp
fstp
es
je
mov
mov
in
mov
or
sub
adc
test
xor
retf
jle
lock
mov
add
mov
mov
dec
mov
adc
clc
adc
test
fabs
push
scas
push
std
pop
adc
mov
cld
rcr
scas
or
lods
aad
std
fstp
mov
test
je
fidiv
call
lea
mov
inc
sub
nop
shr
and
add
in
adc
jmp
shr
jns
push
mov
in
mov
or
imul
push
jae
cmp
jb
mov
js
dec
mov
cmp
jmp
cwde
add
add
loopne
data16
mov
xor
mov
mov
push
or
shr
mov
add
js
or
out
xor
or
or
aas
inc
ror
je
push
xor
fisub
push
(bad)
add
adc
add
out
push
inc
sub
mov
loopne
jae
dec
add
xchg
rol
mov
fild
cli
icebp
inc
xor
mov
push
pop
int
movs
(bad)
setnp
and
push
sub
pushf
and
jne
dec
dec
dec
hlt
pop
sub
cmp
and
mov
inc
jmp
enter
or
push
into
cmp
div
pop
jmp
xor
je
mov
iret
mov
lock
pop
das
adc
in
dec
and
push
movsx
cld
mov
f2xm1
fwait
dec
add
jmp
sbb
cmps
mov
ds
lods
or
push
pop
pop
pop
mov
cmp
ret
mov
sbb
dec
and
fistp
mov
xchg
pop
add
jg
jne
mov
sbb
add
push
cli
mov
mov
adc
aas
jmp
fstp
adc
test
add
pop
push
test
ins
and
push
int3
push
mov
test
or
fimul
cmps
(bad)
fiadd
jmp
aaa
mov
lahf
inc
imul
push
push
fld
pop
lock
imul
push
cmp
aaa
add
sbb
add
sub
push
lea
lock
sbb
je
fmul
pusha
xchg
pop
push
rol
enter
pop
add
add
mul
jle
(bad)
(bad)
mov
mov
lahf
xor
aam
fld
fiadd
lock
push
fwait
xorps
pop
repnz
mov
push
in
mov
ret
or
test
sub
iret
mov
div
push
adc
sbb
xor
inc
call
pop
pop
add
dec
or
cmp
inc
stc
inc
push
adc
cmp
test
sub
add
imul
shr
call
popa
fstp
xor
fstp
fwait
lahf
jmp
inc
and
add
retf
movs
dec
outs
movs
stos
mov
adc
add
adc
sar
sar
mov
aaa
loopne
pusha
push
mov
push
cmp
test
repz
iret
and
call
mov
push
enter
loopne
mov
and
fldcw
xor
div
shl
(bad)
sub
adc
mov
or
pop
sub
dec
or
fsub
outs
pop
xor
les
add
std
xchg
lea
inc
jb
ret
mov
adc
daa
ja
and
jb
imul
sti
or
jb
sti
ins
cli
(bad)
cmp
ja
adc
cmps
push
mul
pop
dec
inc
or
dec
jne
sub
dec
mov
aas
cdq
idiv
imul
mov
repnz
mov
ds
ds
add
pusha
ret
or
pop
jnp
rol
std
and
xchg
hlt
std
pop
(bad)
call
fadd
call
dec
in
test
jg
jl
clc
push
loopne
xchg
xchg
clc
hlt
or
inc
or
pop
sub
or
pop
inc
sti
scas
add
pop
dec
data16
cmp
jl
add
retf
ret
inc
and
mov
lock
mov
jg
lock
or
dec
lock
imul
or
add
push
sub
in
dec
gs
rol
loopne
cmp
xchg
sub
mov
cmp
imul
aas
cli
js
mov
jo
ins
pusha
loop
cmp
jb
outs
sahf
rcl
sbb
inc
jmp
or
dec
jne
sbb
push
fdiv
imul
ret
cmp
add
lahf
sub
int3
pop
popf
shl
clc
jge
aam
js
mov
icebp
sbb
pop
rol
jmp
test
mov
cmp
add
call
sbb
cli
mov
inc
lea
cdq
or
add
test
and
stc
fist
xchg
je
aas
mov
or
jb
test
mov
pusha
in
clc
(bad)
push
push
aaa
and
scas
mov
lds
sbb
inc
jbe
(bad)
sbb
add
pop
sbb
add
mov
dec
sti
je
fmul
mov
inc
hlt
out
xchg
pop
lock
push
cmp
jne
out
add
in
jle
jo
add
push
lea
or
xchg
repnz
imul
jb
jecxz
in
ins
or
push
jge
call
jmp
inc
imul
dec
ficom
test
enter
adc
sahf
(bad)
rol
in
xchg
xor
das
retf
in
mov
inc
and
movs
push
inc
lods
mov
js
movs
jmp
xor
xchg
push
mov
lahf
pop
dec
add
outs
cmp
inc
shl
jne
cmps
add
movs
mov
inc
jp
cmp
add
push
jmp
adc
sub
jne
push
add
lock
dec
adc
sbb
ja
movs
sbb
ret
xor
inc
ror
xlat
xchg
and
inc
jmp
in
jo
cmp
iret
addr16
cmp
es
iret
in
ret
xchg
adc
jg
xor
pop
into
int
sub
or
scas
xchg
je
jecxz
push
inc
or
popa
clc
cmp
jne
push
or
add
and
jo
test
fdivr
or
add
fimul
pop
mov
cmp
pop
rcl
pop
mov
pop
xor
test
call
sbb
loop
pushf
mov
call
cmp
jae
pop
(bad)
mov
addr16
cmp
mov
nop
jns
and
retf
mov
jg
push
add
mov
pop
cmp
cmps
out
dec
jne
mov
xor
xchg
fisub
cmp
xchg
ds
pop
jmp
test
iret
or
or
or
or
or
or
push
pop
add
cmp
or
ja
or
jns
out
sbb
cmps
out
sahf
int
push
cdq
dec
jle
in
neg
mov
outs
or
sub
jmp
or
add
sbb
mov
test
xchg
fcomp
dec
sub
mov
mov
cmps
adc
push
lea
and
sbb
inc
mov
xchg
xor
repnz
dec
mov
mov
lock
push
mov
dec
ins
push
movs
xchg
xor
leave
mov
jb
je
add
jmp
loopne
jb
out
aad
push
stc
sub
cmp
mov
inc
ins
dec
and
repnz
cmp
and
adc
mov
(bad)
cmps
or
push
mov
push
add
dec
jg
je
mov
add
fwait
pop
sbb
pop
sub
je
pop
je
jmp
cmp
pop
jmp
pushf
int3
mov
xchg
pop
(bad)
sub
aam
add
fdivr
add
adc
mov
cmp
xor
mov
mov
gs
pop
push
cmp
push
jmp
outs
dec
push
push
jmp
ficomp
call
or
sahf
out
xor
dec
fcomip
fcom
lea
call
mov
dec
scas
adc
jb
and
add
in
xchg
mov
push
or
test
sub
jmp
jg
cmp
cmp
and
xchg
imul
stos
pop
xor
ja
jns
adc
cwde
cmp
cmp
xor
adc
and
call
retf
and
fwait
sti
dec
or
out
ret
je
adc
jmp
adc
sahf
out
call
jge
mov
jo
cs
popf
add
fidivr
cmp
imul
cld
ja
xchg
xchg
aad
xchg
jmp
sbb
push
test
fucomi
add
psllw
cwde
test
(bad)
push
nop
outs
mov
(bad)
mov
mov
adc
sahf
pusha
push
sbb
clc
inc
mov
pushf
les
fnstsw
xor
pop
inc
dec
das
push
dec
into
fcompp
push
xchg
or
adc
mov
verr
pop
clc
cmp
xchg
test
cmp
jne
or
fstp
addr16
mov
xchg
adc
mov
popa
cmps
pop
xor
lea
dec
jo
sub
or
lods
adc
mov
mov
pop
mov
xchg
clc
je
mov
(bad)
int
dec
xchg
loopne
pusha
popf
pop
daa
popa
and
imul
not
pop
(bad)
jmp
mov
imul
or
add
pop
pop
jnp
int
sbb
scas
loopne
jbe
sub
js
add
add
cli
mov
fisub
sbb
cmp
test
pop
dec
sub
sbb
cmp
inc
mov
or
push
sub
ret
(bad)
mov
adc
add
mov
fistp
test
pusha
mov
(bad)
push
mov
out
xor
cmps
inc
fcomp
mov
push
(bad)
cmp
jne
inc
les
daa
arpl
sbb
inc
notrack
sub
je
dec
je
sub
out
jg
push
sub
je
jmp
mov
jmp
push
push
push
les
dec
es
push
inc
mov
jle
fadd
add
pop
xchg
inc
mov
or
xchg
mov
xor
xor
jg
jl
pop
inc
lods
es
push
inc
imul
mov
cmp
jp
mov
ins
(bad)
mov
cld
inc
sub
jl
pop
pop
and
or
stos
add
add
enter
fdiv
jmp
pop
inc
adc
cmp
jg
jg
cwde
aam
pusha
or
cdq
xor
sub
add
sahf
add
add
cmp
jle
adc
pop
and
out
sbb
gs
xchg
shufps
loopne
push
stos
push
cmp
sbb
add
outs
clc
add
in
test
or
pop
xchg
popf
sahf
fmul
sub
pusha
and
mov
dec
sub
cmc
xor
sub
xchg
mov
inc
add
or
inc
add
lahf
ins
fistp
adc
fwait
mov
push
dec
enter
push
mov
hlt
lods
popf
xor
scas
pop
stos
test
jo
mov
mov
jmp
into
add
nop
cmps
jmp
aas
cmp
xchg
sub
jb
and
cmp
push
mov
and
jmp
hlt
hlt
in
cmp
push
sbb
ss
repnz
in
sbb
jmp
lds
retf
pop
push
clc
ja
loopne
or
jo
jge
add
loop
or
mov
push
fstp
fmul
or
mov
cmp
jle
pop
ss
and
fs
jne
mov
add
add
add
repz
popa
xor
out
(bad)
daa
dec
mov
or
ins
shl
cmp
ins
pop
mov
and
jmp
jmp
cmp
test
push
add
jle
in
(bad)
fild
(bad)
movs
cmp
sub
fmul
mov
leave
pushf
fsubr
xor
dec
or
repnz
push
push
jl
out
dec
pop
idiv
add
repnz
mov
pop
dec
or
outs
cmp
rol
add
push
movs
scas
push
sub
repnz
fild
inc
ds
ins
pop
jmp
sub
and
pop
movs
dec
and
(bad)
jmp
push
pushf
ror
leave
push
add
scas
sbb
or
pop
repz
and
pop
mov
push
xor
or
or
retf
cmps
jnp
ret
sahf
mov
add
xor
add
(bad)
push
cdq
in
add
loopne
test
not
les
and
ins
inc
maskmovq
div
or
ds
(bad)
add
and
add
js
cmp
or
and
push
or
or
cld
scas
mov
outs
inc
es
xor
ficom
push
push
inc
dec
in
xor
es
sbb
or
and
mov
xchg
cmp
or
sub
sub
push
ds
add
fisub
in
jecxz
add
(bad)
sbb
int
push
cmp
ret
jne
pop
into
mov
mov
daa
fnstsw
ins
pop
adc
cmps
dec
jb
sbb
in
fstp
fwait
jmp
sbb
out
mov
xchg
fisubr
mov
push
dec
push
push
inc
adc
movs
xor
in
mov
sub
jb
or
xchg
push
adc
jno
jae
dec
fs
call
and
sub
xchg
push
jmp
jmp
std
or
add
les
mov
iret
sbb
xchg
ret
xchg
push
add
jo
pop
mov
loop
clc
ins
inc
adc
leave
movs
cmps
xchg
mov
(bad)
pop
shl
mov
and
push
movs
dec
pop
dec
push
(bad)
repnz
add
inc
xor
sub
push
data16
or
push
push
sbb
nop
js
inc
inc
and
or
mov
cs
out
add
sar
xchg
shl
mov
inc
xchg
mov
popa
jmp
sti
or
or
and
add
pop
push
xchg
push
jge
jae
in
lock
dec
xchg
in
dec
call
xchg
jne
ins
idiv
lods
or
pop
jmp
push
pop
xchg
idiv
push
jl
je
xchg
cmp
scas
sbb
adc
jne
dec
or
or
fwait
xlat
xchg
imul
xchg
sub
mov
into
push
not
adc
js
cmp
test
test
das
in
mov
xor
and
mov
lock
mov
ret
shl
add
pushaw
std
cmp
add
pop
mov
test
fdivr
scas
inc
pop
(bad)
outs
mov
jb
hlt
push
push
test
sbb
and
test
out
out
xor
xchg
or
jne
call
mov
add
es
stos
mov
or
test
cmps
or
jb
sub
clc
xlat
add
and
clc
sub
je
sub
je
scas
ret
push
sbb
xchg
call
add
stos
jnp
jno
xchg
cs
sbb
ds
nop
mov
(bad)
jg
lods
add
sar
ins
ja
ins
mov
mov
scas
inc
cmovp
rol
jle
gs
dec
les
aam
adc
std
add
jmp
fsubr
gs
shl
pop
je
jne
xor
ret
jmp
in
in
jne
or
mov
les
rcr
push
pop
mov
add
add
adc
pushf
sub
and
cs
aas
cmps
sub
pusha
(bad)
(bad)
test
cmp
out
stc
fisub
mov
sar
and
cmp
sbb
out
cmp
test
dec
cmp
and
or
xor
xchg
or
inc
addr16
mov
mov
cwde
sub
rol
repz
or
mov
or
ds
enter
add
fwait
call
shl
pushf
cmp
adc
and
pusha
test
or
jnp
mov
ja
fdiv
lods
add
and
cmp
xor
mov
mov
cmp
mov
sar
mov
xor
pcmpgtd
out
or
or
cmp
test
shr
(bad)
scas
add
pop
rcr
clc
nop
inc
push
or
fnstsw
lea
push
jl
inc
push
test
gs
xchg
scas
xor
jmp
pop
push
xor
lds
pop
dec
sbb
or
cmp
sbb
jg
movs
jne
mov
inc
add
sub
sub
fcmovne
add
mov
sbb
lahf
add
dec
or
add
int3
les
mov
or
lods
xor
div
xchg
cmp
jnp
les
(bad)
data16
push
loopne
scas
retf
je
or
mov
pop
inc
or
scas
nop
bound
movs
mov
lock
mov
push
or
add
and
out
fcmovnu
sub
or
sbb
cmp
jg
sub
loope
xor
ret
icebp
sbb
outs
ss
sti
push
sbb
faddp
xor
mov
rcr
(bad)
cmp
or
lock
pop
(bad)
les
or
cmc
rcl
rcl
retf
adc
pop
dec
jmp
inc
jmp
sets
and
lea
ror
add
or
pop
adc
mov
int
pop
daa
loopne
or
mov
mov
xchg
or
inc
pop
and
lods
and
jl
ss
(bad)
jmp
in
or
jge
rcl
push
mov
ds
loopne
js
movs
loopne
loopne
outs
arpl
jecxz
adc
pop
adc
loopne
outs
mov
ins
ins
add
ja
mov
lea
pop
mov
rol
fsubr
in
jo
sbb
push
sbb
cld
and
jb
cmp
je
jmp
xor
inc
mov
sub
jmp
and
sbb
ret
mov
add
push
pop
call
or
push
pop
(bad)
pop
mov
push
xor
adc
mov
seto
adc
mov
add
ja
jmp
mov
adc
jne
sub
mov
adc
inc
dec
jae
dec
clc
pop
or
or
or
lock
es
xor
rcr
xchg
fs
dec
aas
push
lea
sbb
add
(bad)
out
loopne
nop
mov
jae
or
mov
int3
mov
test
xchg
ror
fild
xchg
jge
enter
mov
mov
call
into
pop
ror
mov
jb
push
test
inc
out
mov
dec
push
and
add
gs
stos
sbb
mov
cld
std
rol
or
ins
mov
sbb
and
div
fdivr
push
addr16
xor
dec
and
hlt
add
dec
ds
push
lods
lock
imul
push
push
pushf
inc
add
jp
mov
cld
inc
and
adc
add
jl
pop
push
sbb
mov
or
cwde
sub
and
mov
adc
fdiv
mov
mov
stos
je
loopne
loop
lock
test
int3
retf
mov
sbb
adc
daa
in
dec
or
lods
cmp
inc
or
adc
lods
pop
inc
cwde
cwde
push
mov
cmp
aaa
sbb
mov
xor
inc
retf
push
mov
cdq
push
push
daa
push
ins
inc
cmp
int3
push
(bad)
gs
adc
push
jns
ror
aam
add
mov
repnz
ds
loope
cwde
or
adc
mov
mov
daa
int3
jge
jnp
mov
jl
pcmpeqw
cmp
cmps
jle
mov
fucomip
int3
icebp
or
mov
ffree
add
enter
adc
adc
or
pop
or
pop
aam
test
mov
outs
popw
or
scas
pop
jmp
pop
loopne
xor
stc
xor
sub
lods
pop
test
mov
mov
and
cmp
(bad)
rcl
js
push
mov
adc
push
or
cmp
pusha
test
xor
call
dec
or
dec
fbld
test
mov
std
retf
and
mov
sub
and
cmp
dec
or
inc
mov
xchg
jo
mov
mov
xchg
add
sbb
fmul
add
std
xor
pop
inc
mov
fsub
xor
cmp
daa
sti
bound
jmp
test
push
stos
test
ins
jg
(bad)
jle
pop
(bad)
mov
jg
mov
scas
das
adc
xchg
mov
push
add
and
aas
adc
int3
hlt
inc
inc
inc
jge
nop
stos
and
sub
jno
add
inc
(bad)
ror
loop
ror
ror
pop
hlt
jge
jl
sbb
and
and
movs
sub
sahf
shl
jb
mov
test
dec
fwait
aas
mov
and
fidiv
fild
push
in
ins
xchg
jle
inc
mov
jg
loope
cmp
xchg
or
or
rcr
add
popa
enter
shl
int
jge
pop
push
mov
mov
scas
pop
jl
ret
sub
aaa
push
daa
out
das
pop
mov
xor
add
dec
sub
cwde
out
jae
mov
adc
xchg
inc
push
pop
stc
add
adc
and
jo
jg
das
movs
aam
add
inc
pop
dec
and
loopne
hlt
adc
mov
xor
test
cli
mov
add
inc
mov
neg
ins
inc
ins
ins
stc
ins
(bad)
mov
in
jmp
pop
jmp
sbb
mov
outs
adc
push
ret
jmp
inc
push
test
pop
mov
cmp
xor
sar
mov
or
ja
jp
mov
test
stos
les
loop
sahf
in
popa
xchg
xchg
sbb
inc
aad
sbb
xor
sub
push
adc
or
je
scas
push
push
enterw
clc
sub
aaa
mov
inc
add
ret
adc
pop
mov
push
jbe
pop
sub
mov
pop
sar
fmul
lock
mov
daa
adc
hlt
(bad)
cmp
inc
fiadd
inc
and
(bad)
push
pop
or
je
dec
inc
inc
and
repnz
(bad)
jne
sbb
repnz
ss
mov
add
aaa
hlt
xor
jnp
clc
push
pop
sbb
adc
or
in
push
inc
ret
add
sbb
aaa
pop
push
icebp
inc
mov
sub
jb
inc
mov
inc
sti
stos
test
mov
jne
mov
scas
or
inc
jne
jg
mov
ret
xchg
pop
ja
pop
add
sbb
sub
int3
(bad)
fbld
push
mov
leave
or
dec
add
adc
jl
dec
data16
enter
jo
mov
mov
mov
aas
dec
mov
mov
sub
lods
add
test
xchg
mov
mov
pop
ja
sbb
pop
mov
jo
add
sbb
mov
mov
mov
inc
inc
into
pop
jne
lea
and
push
push
les
cmps
scas
movs
mov
cmp
xchg
ror
and
ss
dec
jne
jmp
mov
jmp
shl
or
ja
add
sub
add
jne
push
imul
(bad)
dec
cmp
mov
call
adc
call
retf
add
xchg
aad
data16
mov
mov
xor
add
inc
in
das
sbb
sub
(bad)
fiadd
mov
mov
jg
ror
in
mov
mov
bound
fsubr
pop
call
test
popf
push
mov
pop
js
and
daa
int
fcomp
nop
mov
mov
push
fst
addr16
popf
je
rol
cwde
int3
inc
pushf
mov
or
pushf
adc
jmp
or
enter
jb
mov
xchg
add
imul
ins
aas
ret
adc
je
push
push
hlt
sar
rcl
or
mov
push
hlt
xchg
mov
idiv
sub
in
movs
adc
sbb
push
lea
mov
xchg
jg
ins
das
fs
or
jmp
pop
scas
ins
add
fs
dec
cmps
ins
scas
ja
popa
ins
pop
jo
dec
mov
push
lea
rcr
sbb
xchg
(bad)
cmp
pop
push
cmp
push
or
jae
ss
pop
add
xor
in
stos
aaa
ret
arpl
mov
mov
aam
ret
lock
in
mov
push
cld
in
mov
xor
cmp
ins
xlat
sub
or
adc
mov
pop
or
ret
add
lods
pop
ret
xchg
push
pop
loop
xchg
mov
xor
clc
lock
imul
rcl
add
add
xor
xchg
cmc
xlat
sbb
mov
push
rcr
push
adc
add
int3
les
gs
dec
je
les
and
sub
or
adc
ret
push
and
lea
add
push
jo
inc
js
add
xchg
lock
inc
or
movs
lock
ret
xchg
aas
sbb
mov
sbb
fild
add
mov
dec
or
popa
ret
cmp
jg
adc
sbb
inc
cmp
jne
mov
and
push
dec
fstp
sub
pop
push
xor
mov
inc
jmp
mov
mov
(bad)
js
mov
dec
test
ret
in
xchg
dec
push
lea
add
loopne
pop
hlt
push
jl
lds
sub
sub
(bad)
push
mov
inc
or
ins
or
push
in
add
or
and
daa
mov
gs
mov
or
mov
les
push
and
jbe
xchg
pop
test
push
(bad)
sbb
fsubr
dec
loopne
xchg
xor
sub
inc
adc
add
imul
and
rcl
jne
fcomp
adc
sbb
lods
mov
xchg
(bad)
xchg
inc
fldenv
push
int
xchg
or
mov
bound
adc
jle
in
cmp
inc
push
pop
je
dec
xlat
pop
mov
sbb
inc
or
ss
adc
clc
sub
dec
clc
mov
jnp
ja
je
push
(bad)
push
mov
sub
stc
(bad)
int3
jle
adc
push
seta
mov
lea
inc
out
out
sub
sbb
mov
aad
dec
cmp
mul
ins
mov
scas
or
mov
inc
icebp
jg
xchg
sub
lds
xchg
ret
inc
xor
xchg
nop
fnstcw
mov
dec
cmp
inc
int3
(bad)
pop
pop
shr
(bad)
push
cdq
push
push
retf
inc
pop
ds
cmp
inc
or
aas
pushf
or
(bad)
cmp
and
xor
out
and
inc
aad
add
push
fdiv
dec
inc
mov
daa
loopne
rcr
aad
and
lock
or
dec
out
lock
sbb
mov
stc
ror
mov
sbb
sbb
movs
(bad)
inc
pop
xor
stos
adc
mov
retf
inc
iret
add
movs
xor
ins
push
cmp
or
add
popf
clc
pop
cmp
mov
ret
mov
mov
enter
adc
fadd
add
leave
or
iret
inc
sub
movd
pop
test
test
aaa
xchg
fnstcw
and
shr
pop
fstp
movs
sub
rep
test
fsubr
int
inc
add
push
add
aaa
add
or
xchg
mov
mov
in
mov
in
cmp
ror
fmul
aam
push
jns
repz
int3
or
rcr
mov
out
or
adc
movs
mov
pushf
xchg
scas
xchg
adc
mov
jns
repz
test
je
mov
ins
sub
fs
ja
int
pcmpgtb
call
sahf
inc
je
cmp
js
repz
js
jg
sbb
es
idiv
pop
dec
adc
jns
das
sbb
repnz
ror
mov
adc
add
pop
add
jae
mov
add
loopne
clc
inc
lods
pop
hlt
jns
iret
leave
cwde
lock
in
add
fmulp
cmp
mov
loopne
leave
jae
xchg
fsubr
jnp
das
aam
pop
sar
mov
int3
nop
enter
mov
fcomp
cmp
mov
cmp
or
pusha
lods
mov
fcomp
movs
mov
inc
mov
(bad)
push
xchg
cmp
out
fsubr
nop
je
ins
and
and
pushf
push
pop
jb
in
daa
nop
jne
lahf
scas
aad
cdq
push
or
shl
cmp
pusha
mov
pop
sub
pop
inc
add
add
ins
cmp
nop
mov
mov
int
sbb
mov
cmp
rcl
sub
xchg
or
or
fdivr
sub
push
imul
push
cmp
nop
mov
add
enter
les
sbb
mov
into
pusha
sub
pop
jp
leave
pop
xor
adc
xchg
pusha
out
cmp
es
ret
xor
mov
and
leave
push
loopne
mov
push
pushf
push
xor
into
popf
and
add
lods
mov
cmp
ret
ja
push
(bad)
ret
mov
cmp
aam
adc
je
mov
pop
data16
dec
sbb
adc
jp
hlt
or
pop
ret
dec
mov
xchg
push
pop
pop
or
mov
jle
cmp
and
add
cmps
jnp
xor
adc
adc
lock
inc
or
iret
test
ficom
jb
in
xlat
jmp
icebp
rcl
add
or
in
enter
mov
leave
shr
leave
add
adc
pushf
shl
xchg
clc
jecxz
dec
rcr
sub
pop
jmp
(bad)
jp
cmp
cmc
sbb
adc
pusha
and
fmul
inc
clc
and
cwde
fs
adc
sbb
push
sbb
mov
push
add
jb
in
ins
sbb
fninit
shl
sub
bound
nop
fist
popf
dec
xchg
adc
pusha
cmp
rol
pop
js
mov
lea
in
xchg
jmp
test
adc
or
nop
cmps
xchg
cmp
daa
mov
jl
push
add
jns
outs
cmp
mov
jl
rcl
add
ret
xchg
es
push
cld
aad
int
add
and
fnstcw
pop
dec
movs
sub
add
dec
push
jl
test
and
retf
lods
or
mov
xchg
dec
xor
leave
mov
xor
and
mov
xor
and
mov
xchg
dec
int3
int3
rcl
aam
and
and
retf
and
nop
in
retf
retf
fdivr
cld
loopne
gs
iret
shr
or
aam
sub
mov
push
call
rol
xchg
dec
mov
sub
rcl
dec
hlt
mov
and
mov
xor
sahf
jne
ja
dec
add
push
jns
jl
mov
add
outs
je
fs
pop
(bad)
mov
dec
jne
inc
imul
retf
imul
jb
out
pop
stc
repnz
outs
jb
ins
jo
inc
jb
ins
push
je
cwde
nop
and
pop
push
cmp
push
dec
repnz
add
push
jb
adc
inc
jns
(bad)
pop
in
rol
and
cdq
cld
(bad)
cwde
cld
add
and
mov
mov
cmp
jmp
sbb
xor
enter
mov
and
(bad)
into
or
mov
dec
and
mov
test
addr16
sub
das
aam
xor
fs
sti
mov
jns
mov
ss
or
fistp
aam
es
ds
push
arpl
inc
jne
dec
inc
dec
mov
iret
cmp
add
shl
sub
iret
fcom
ins
das
xchg
xchg
adc
xchg
push
inc
mov
inc
mov
and
inc
(bad)
js
mov
or
adc
pop
test
xchg
add
and
mov
inc
push
fld
pop
xor
inc
jb
retf
push
enter
movs
movs
or
popa
adc
fimul
push
jo
nop
adc
or
inc
repnz
xchg
fs
(bad)
ins
and
adc
ins
sbb
cld
dec
outs
in
and
fimul
aam
or
gs
dec
dec
sbb
iret
fstp
cmp
or
jp
xchg
pop
jnp
ins
jo
(bad)
mov
inc
xchg
popf
mov
lds
adc
outs
div
in
add
(bad)
ins
sbb
sub
lods
mov
ret
out
pop
dec
and
add
push
les
fsubr
xor
push
mov
(bad)
int
pop
xchg
xchg
pop
pop
in
dec
jnp
inc
in
add
in
or
frstor
test
in
adc
or
call
xchg
shr
es
pop
jb
push
je
cwde
test
push
loope
outs
and
add
repnz
(bad)
mov
and
enter
and
adc
push
adc
nop
pop
enter
pop
sbb
pop
leave
add
fimul
mov
aad
std
sbb
add
cmp
add
or
clc
sub
xor
adc
add
mov
inc
aas
dec
je
sbb
cmp
dec
mov
xor
std
add
call
adc
mov
daa
fisttp
fstp
pop
fnsave
ficom
cld
clc
pop
lea
mov
mov
dec
lock
xchg
iret
xchg
in
adc
in
jb
cmp
call
fist
jl
ror
hlt
dec
jmp
nop
loopne
clc
imul
loopne
inc
inc
fwait
push
mov
retf
int3
or
pop
ror
loop
les
xor
xor
fmul
add
inc
pop
dec
adc
outs
xchg
push
add
add
loopne
or
mov
fidiv
sub
jmp
adc
out
dec
je
outs
out
ins
mov
aam
adc
add
jmp
pop
daa
mov
jl
test
mov
pop
and
adc
cmp
add
dec
ins
adc
cmp
jmp
inc
ins
int3
and
add
cmp
sbb
and
in
ins
fsub
loop
icebp
add
mov
push
push
pop
jg
rcr
sub
rol
rol
xlat
mov
int3
setg
dec
jle
xchg
push
adc
jge
(bad)
loope
data16
inc
(bad)
mov
mov
add
xchg
sub
fisubr
jmp
sbb
mov
movs
out
push
fs
xchg
inc
shr
pop
mov
call
sbb
test
cmp
cmps
push
add
pop
or
data16
add
pop
bswap
or
test
movs
and
adc
ror
dec
xchg
clc
jmp
and
and
movzx
lock
and
scas
popf
or
inc
xor
lea
(bad)
(bad)
push
call
imul
sbb
stc
rcl
and
and
sub
sub
inc
pop
dec
jmp
mov
jmp
inc
mov
lea
xor
mov
div
mov
repz
dec
jnp
xor
sub
add
in
test
sub
xor
cmp
jne
push
cld
and
xchg
daa
into
mov
sbb
sbb
jg
xor
not
jmp
or
(bad)
xchg
push
jne
mov
out
test
inc
or
test
test
shr
daa
add
test
xor
jmp
cmp
jmp
mov
xchg
jb
mov
sbb
aas
cmp
inc
or
cmps
je
ret
aas
retf
cmp
add
(bad)
clc
mov
xor
fimul
call
sub
scas
repnz
in
or
adc
xor
loopne
in
nop
and
pop
add
mov
jmp
sub
jb
xor
jae
add
and
adc
in
dec
sub
in
cmp
lds
and
in
push
mov
aad
add
xchg
sub
jmp
push
fstp
out
add
sub
add
jb
mov
cmps
sbb
mov
push
adc
xchg
pop
add
repz
sbb
push
or
cmp
cmps
pop
or
mov
movs
xor
sbb
inc
(bad)
adc
out
in
adc
mov
inc
(bad)
cmp
es
jbe
inc
sub
shr
or
pop
ds
arpl
pop
lock
je
pop
jne
adc
pop
or
(bad)
shl
popa
jb
inc
add
or
or
int3
rcl
cmp
out
xchg
iret
add
dec
lock
call
mov
inc
rcr
cmp
sub
jmp
mov
or
cmp
(bad)
out
mov
ins
fdiv
xor
call
sub
(bad)
fldcw
dec
sub
xchg
xchg
jmp
jb
test
pop
jmp
fwait
xchg
push
je
sbb
nop
mov
test
xor
xchg
mov
xchg
jge
arpl
adc
sub
xor
stc
push
repz
push
call
push
sbb
neg
jbe
jae
push
or
sbb
pop
pop
lods
cwde
jmp
sar
inc
pushf
std
or
hlt
call
lds
mov
mov
popa
retf
add
aaa
in
sbb
or
cmps
mov
mov
scas
sar
retf
dec
daa
xchg
hlt
addr16
cmp
pop
jg
mov
in
ror
or
sahf
out
mov
push
jmp
je
xchg
stos
cmp
fdivrp
in
adc
push
test
popf
pop
xor
dec
pop
outs
and
or
je
push
add
loopne
or
xor
or
inc
dec
sti
xchg
or
mov
jb
adc
arpl
es
sub
jo
les
mov
daa
stc
mov
fwait
xor
dec
add
clc
fucomp
jae
inc
ins
adc
fistp
in
dec
xor
push
lock
xor
lock
ds
jp
cmc
adc
push
mov
add
inc
(bad)
jmp
mov
rol
test
dec
or
push
icebp
fsubr
adc
mov
iret
arpl
das
pop
shl
xlat
iret
in
jg
push
call
xlat
dec
mov
adc
fimul
or
sti
(bad)
std
jg
sub
sub
aad
hlt
cwde
(bad)
ins
call
push
cld
sbb
add
cwde
xor
push
cmp
pop
adc
xchg
and
mov
push
cmp
mov
add
sub
adc
aam
dec
pop
mov
test
fistp
cmp
out
and
in
push
outs
cdq
add
in
and
xor
daa
das
push
or
inc
iret
stos
or
aam
push
outs
das
jmp
and
outs
data16
rcr
xor
push
sbb
mov
or
inc
aas
jb
inc
in
mov
repnz
in
test
sar
out
out
cmps
push
sti
out
add
iret
repz
arpl
addr16
jno
fmul
daa
adc
cli
push
or
sbb
jmp
xchg
popw
imul
dec
lea
fstp
sbb
push
sar
cmp
pop
aaa
jl
xchg
push
mov
ins
inc
lock
in
fsubr
mov
mov
(bad)
fadd
mov
xor
mov
daa
in
mov
call
inc
cwde
je
dec
je
jmp
outs
jecxz
sub
gs
shl
fcomp
push
mov
ins
pop
xchg
(bad)
clc
inc
mov
repnz
out
mov
pop
xor
xchg
inc
loop
push
pop
cmp
jnp
daa
repz
adc
ss
or
adc
pop
jns
mov
fld
sub
jno
fild
pop
xchg
pop
add
and
mov
jns
mov
cmp
imul
sub
mov
or
mov
jmp
or
daa
add
xor
or
mov
lods
mov
and
dec
sub
sbb
dec
add
or
pop
add
inc
jae
in
push
outs
in
addr16
jb
mov
stos
(bad)
test
je
jmp
mov
scas
rcl
xor
aaa
xchg
ss
push
push
and
fnstenv
mov
ret
sub
rcr
mov
sbb
loopne
inc
adc
outs
in
loopne
rcl
in
adc
xchg
xchg
xchg
push
dec
not
dec
adc
or
add
cwde
cmps
loopne
std
lds
aas
inc
hlt
inc
hlt
push
add
inc
add
add
jo
iret
sahf
out
xchg
call
add
jp
or
adc
mov
mov
pop
mov
push
hlt
lock
cmps
add
mov
sub
add
adc
out
ss
dec
add
add
stc
add
sub
push
popa
cmp
out
jg
xchg
cmps
jg
cmp
pop
cmp
and
xchg
sub
adc
int
xor
scas
in
adc
xchg
sahf
out
sahf
inc
dec
arpl
add
enter
cmp
movsx
adc
dec
xlat
inc
div
sub
and
adc
xchg
cmp
mov
push
add
into
and
adc
in
bound
pusha
cwde
pop
aaa
test
in
push
stc
xor
aaa
sbb
ins
inc
sub
int3
push
add
inc
dec
call
in
jns
pushf
push
in
push
clc
outs
push
or
hlt
dec
es
shl
in
sbb
inc
out
scas
jns
test
xchg
push
dec
xchg
xchg
push
loopne
ret
jmp
dec
call
adc
adc
ss
push
xor
and
clc
cld
adc
rol
clc
jne
inc
in
mov
or
mov
xchg
inc
pop
clc
xlat
call
mov
sahf
add
loope
dec
fisttp
xchg
pop
adc
dec
ja
adc
fstp
and
push
mov
push
repnz
inc
retf
stc
imul
jns
int
sar
cli
push
and
imul
dec
push
push
iret
sti
rcr
movs
push
mov
xor
lock
repnz
lock
and
std
ss
xchg
adc
bound
and
sub
repnz
(bad)
std
js
and
jl
fimul
leave
les
mov
daa
mov
aam
dec
mov
sub
xor
leave
mov
outs
adc
xchg
clc
xchg
test
pop
std
or
iret
out
cld
or
cmp
and
inc
push
test
loop
sahf
mul
call
cmps
mov
ror
mov
sbb
imul
sub
test
sub
mov
fmul
jmp
and
(bad)
and
in
add
dec
adc
mov
jmp
loope
sbb
jo
clc
call
les
shl
adc
outs
push
jmp
pop
and
push
(bad)
xor
sbb
cmp
les
(bad)
mul
mov
loope
jecxz
push
mov
rcl
repnz
jmp
leave
add
inc
inc
mov
test
adc
leave
enter
fsubr
out
push
add
fbld
jns
cmc
das
outs
mov
dec
enter
test
push
or
jns
add
add
mov
dec
mov
iret
retf
inc
inc
movntq
repz
and
mov
ror
fst
jb
outs
inc
iret
or
mov
add
cmp
pop
jnp
retf
sbb
push
scas
mov
outs
add
js
adc
add
fild
mov
jmp
cmp
cmc
adc
mov
or
sbb
adc
push
das
pop
add
add
(bad)
add
add
push
add
sahf
out
sahf
fs
call
inc
fucomip
push
inc
pop
daa
push
iret
repz
std
or
adc
or
push
int
rcl
mov
fst
int3
add
push
sbb
xchg
adc
pop
rcl
push
imul
sbb
inc
mov
jne
and
mov
inc
and
cmp
dec
push
in
xor
xor
inc
repnz
test
add
cs
jmp
dec
call
xchg
lea
fld
fstp
and
add
inc
adc
test
xor
nop
add
rcr
add
in
data16
pop
add
loope
shl
jns
add
mov
adc
inc
scas
call
loopne
adc
int
cmp
lods
mov
cmp
jns
add
cmp
aam
sahf
outs
leave
repz
ret
pop
pop
jb
test
mov
cmps
inc
(bad)
sbb
xchg
pop
movs
loope
shr
dec
inc
fild
dec
cs
test
push
or
add
imul
add
mov
inc
mov
(bad)
inc
movsx
mov
or
push
sub
mov
scas
add
fsubr
hlt
mov
mov
adc
inc
dec
leave
aaa
int
jmp
ret
push
add
sub
and
ja
pusha
enter
dec
je
loope
inc
push
push
aaa
test
repz
jae
mov
mov
out
dec
jbe
lock
repz
push
sub
push
imul
cmps
fistp
cmp
xor
push
fcmovb
add
sub
cmp
adc
cmc
inc
in
jnp
ins
xor
jg
test
mov
mov
adc
ins
jmp
jno
clc
push
inc
adc
xor
aam
in
shr
adc
aam
js
ja
fwait
iret
jbe
pop
dec
es
fiadd
or
cmp
iret
repz
addr16
repz
call
iret
(bad)
in
and
ss
dec
add
sbb
sub
fild
or
jge
hlt
fild
sub
mov
and
inc
in
inc
add
sub
fild
dec
inc
and
cmp
add
sbb
and
(bad)
adc
push
mov
mov
loopne
add
sub
and
jo
sub
movs
push
adc
jl
inc
xchg
shl
dec
ret
inc
xchg
(bad)
les
cmp
adc
es
cmp
in
mov
adc
dec
data16
adc
xlat
lock
push
and
inc
push
adc
push
mov
push
lock
mov
push
cmps
pop
in
leave
adc
or
cmp
cmp
es
push
pop
or
ins
push
or
push
xor
dec
out
fnstcw
pop
ins
or
sahf
mul
xchg
push
cmps
mov
shr
cmps
push
shr
add
sar
rcl
inc
ficom
adc
or
test
sub
or
mov
repz
push
rcl
nop
pop
or
push
xor
fs
aad
xchg
pop
fdiv
popf
xor
fs
ja
push
mov
retf
(bad)
mov
or
sbb
mov
pop
xor
jno
jns
js
or
inc
(bad)
mov
aaa
cmp
aaa
sub
xchg
cmp
dec
gs
inc
daa
jns
push
pop
or
and
inc
or
scas
sub
mov
inc
mov
mov
lock
jl
jns
pushf
fld
jo
push
leave
push
setae
push
fild
push
inc
push
leave
inc
push
fild
or
push
push
setb
leave
fild
popf
xchg
and
in
fistp
movs
fild
and
sahf
out
adc
push
iret
jae
adc
mov
enter
pop
sbb
sahf
out
ss
ins
(bad)
iret
seto
adc
push
adc
fild
je
shl
sti
push
pop
jns
ins
or
fdiv
mov
enter
push
pusha
test
aaa
dec
adc
sub
inc
sets
mov
adc
iret
imul
fist
push
adc
adc
cmp
ins
adc
(bad)
sbb
imul
cmp
adc
xor
inc
dec
push
pushf
sbb
fild
lods
nop
stos
dec
adc
mov
test
sub
cmp
mov
imul
shl
add
mov
mov
lods
fisub
cmps
add
xchg
sbb
jmp
mov
xrelease
or
pop
jo
push
(bad)
pop
outs
adc
pop
(bad)
leave
or
sbb
adc
mov
push
xchg
adc
xor
dec
je
pop
(bad)
(bad)
push
ins
clc
mov
mov
sahf
ror
je
ficomp
push
imul
hlt
and
pop
xor
hlt
add
imul
pop
mov
sub
pop
xor
add
mov
jmp
xchg
push
daa
push
fmul
dec
inc
inc
add
push
loopne
sub
xchg
or
or
cmp
pop
jg
push
fimul
ds
bnd
adc
rol
cmp
nop
nop
or
xchg
(bad)
and
add
sbb
and
(bad)
and
push
or
pop
and
and
retf
loopne
sbb
rol
or
and
pop
cmp
popf
adc
es
mov
(bad)
loopne
push
xchg
cmc
mov
shl
and
dec
test
and
psubq
ins
inc
dec
adc
push
sbb
repz
repz
ins
mov
int
sbb
push
sbb
and
out
dec
sahf
dec
mul
imul
sahf
mov
pushf
adc
rcl
adc
xchg
inc
jl
inc
(bad)
enter
xor
mov
or
(bad)
push
mov
jmp
add
leave
(bad)
lock
xor
fidiv
add
movs
sbb
cmp
stc
cmp
clc
dec
mov
dec
call
or
mov
add
xchg
in
push
fsub
dec
cwde
nop
jbe
xor
fsub
neg
aam
cwde
bound
aaa
aam
mov
in
rol
dec
shl
js
int3
inc
das
jbe
enter
mov
sti
jbe
test
push
pop
and
nop
les
pusha
sbb
(bad)
add
mov
xchg
or
sbb
sbb
sbb
rep
sahf
int
sbb
sub
cmps
lea
dec
pop
xor
repz
repnz
cs
sbb
sub
sub
in
xchg
mov
mov
ret
pop
add
mov
inc
fnsave
mov
mov
daa
sbb
cmp
(bad)
test
test
mov
adc
xchg
pop
pusha
aaa
aam
neg
dec
enter
mov
nop
inc
mov
xchg
or
pushf
cwde
mov
sbb
(bad)
cwde
xor
stos
xchg
jno
sub
xchg
jmp
adc
jmp
pushf
(bad)
inc
sub
and
and
push
mov
push
lods
leave
mov
mov
xchg
outs
xor
add
icebp
mov
in
and
sbb
push
sbb
mov
mov
mov
and
sbb
call
xchg
push
inc
(bad)
sbb
sub
and
add
ins
adc
les
sub
fs
cmps
pusha
adc
or
out
dec
and
mov
pusha
or
push
scas
cmp
mov
pop
adc
push
dec
nop
jns
cmp
dec
push
push
push
and
jns
xchg
and
outs
mov
sahf
out
mov
in
and
sub
and
push
sahf
out
imul
mov
js
push
cmp
and
add
add
xchg
call
ss
push
inc
pusha
ret
push
inc
push
mov
mov
cmp
cmp
nop
arpl
sar
in
in
es
nop
jno
aaa
loopne
nop
inc
ds
(bad)
movsx
es
cwde
fdiv
fdiv
aam
or
or
aaa
rcl
iret
sub
cmp
imul
inc
sbb
ins
push
dec
or
aaa
xor
cmps
sbb
cmp
test
and
sahf
addr16
jmp
push
xchg
pop
sahf
neg
xchg
daa
aam
icebp
push
push
push
sub
xlat
test
add
mov
adc
mov
xor
fnstsw
sub
(bad)
sbb
mov
mov
pop
cmp
es
mov
aaa
mov
arpl
test
movs
or
rol
movs
aad
call
pushf
aaa
cwde
lods
fstp
cmp
cwde
mov
dec
out
jno
aaa
push
dec
cmp
ror
xchg
jecxz
nop
popf
nop
mov
pushf
aaa
cmp
push
or
dec
add
jo
mov
jmp
in
push
test
sbb
data16
int3
loopne
cmps
cwde
jo
test
push
and
adc
imul
or
xor
ret
gs
fsub
and
outs
stos
push
loopne
nop
cmp
pusha
or
push
push
lea
push
xchg
or
inc
bound
or
or
xlat
nop
xchg
jmp
adc
(bad)
jmp
cmc
or
aad
ja
data16
aas
test
ins
pop
inc
fucomip
add
ja
mov
add
add
mov
retf
ret
push
xchg
xor
shl
xchg
push
sti
pop
data16
shl
xor
add
inc
ins
jb
xchg
pop
or
and
or
pop
es
add
or
push
push
psubsw
jge
test
dec
(bad)
xlat
sub
(bad)
(bad)
rol
mov
pop
jmp
mov
ja
shl
or
dec
sbb
add
lahf
repnz
inc
push
and
push
adc
mov
push
or
xor
mov
and
add
arpl
pop
adc
scas
push
in
lods
das
push
int3
into
je
dec
bound
stos
retf
push
xchg
push
and
push
push
pop
push
jno
adc
or
add
scas
add
inc
sub
sub
dec
xchg
and
xor
mov
into
daa
pop
add
push
push
add
js
jb
or
cmc
or
loop
(bad)
(bad)
pop
jno
cmp
push
or
push
lahf
mov
cmps
or
mov
dec
fmul
mov
shl
ja
dec
cmp
add
push
(bad)
xor
jp
xchg
or
xor
push
ja
sub
imul
rol
shl
mov
jp
sub
das
mov
(bad)
and
cmp
pop
adc
mov
adc
adc
gs
jle
push
dec
aam
das
push
sub
sub
pop
int
mov
sub
out
jg
add
je
xor
push
lds
cmp
ja
jmp
sti
sub
push
xor
jl
jno
loopne
dec
jmp
mov
gs
jmp
adc
adc
mov
pop
sbb
sub
pop
aaa
pop
and
(bad)
sbb
or
and
mov
(bad)
(bad)
and
loope
in
xchg
fadd
mov
or
mov
cmp
fisttp
add
xchg
test
jo
and
dec
jne
in
cmps
mov
ins
popa
and
daa
pop
in
dec
stc
xor
push
ds
add
ret
jle
outs
jne
xchg
jb
outs
arpl
or
push
ficomp
addr16
cmps
mov
push
dec
movs
loopne
mov
mov
daa
stc
(bad)
aas
push
outs
imul
inc
arpl
ins
or
pop
add
inc
iret
push
or
mov
inc
jns
and
pusha
dec
inc
pop
daa
add
aaa
ss
fdivrp
stos
fcom
les
fnsave
test
out
int3
mov
ja
enter
inc
ins
imul
xchg
fdivr
fsubr
sti
add
(bad)
mov
xchg
push
push
push
lock
jno
cli
sbb
lea
sbb
cld
das
push
loopne
adc
xchg
mov
sub
pop
(bad)
jmp
popa
into
add
outs
mov
adc
pop
adc
test
push
or
and
inc
cs
sub
pop
dec
dec
sar
(bad)
repnz
lods
in
push
arpl
lock
sbb
mov
outs
jns
and
jge
inc
push
push
gs
push
or
int
cdq
mov
pusha
and
adc
nop
push
mov
xor
imul
cwde
daa
test
sub
ds
imul
and
or
pop
aam
sbb
ja
add
mov
sub
fmul
xor
add
movs
push
mov
(bad)
enter
ins
pop
sub
ss
jmp
out
enter
jno
push
test
adc
push
push
xchg
cmp
jp
inc
into
adc
jmp
pop
lds
pop
jmp
cmp
je
neg
imul
(bad)
adc
ds
clc
xchg
stos
inc
and
pop
icebp
or
outs
pop
adc
iret
jle
(bad)
imul
inc
out
(bad)
loopne
pop
lea
add
add
add
mov
enter
test
adc
int3
es
rol
dec
test
sbb
cmp
in
xor
add
mov
inc
and
mov
call
repz
mov
jmp
sub
push
addr16
push
jle
sbb
mov
fist
ror
push
xchg
push
in
push
ret
ror
cdq
xor
jnp
loope
mov
test
out
lds
jg
(bad)
cmp
adc
(bad)
test
cmp
xchg
loopne
jb
or
jbe
ror
inc
jns
xlat
sbb
xchg
std
xchg
aaa
repnz
fistp
push
mov
cmp
ret
jno
or
mov
mov
adc
push
fnstenv
pop
leave
imul
scas
mov
push
rcl
(bad)
adc
dec
lock
xor
cld
pop
imul
push
xor
push
cmovno
clc
jl
inc
xor
inc
sbb
mov
cmp
add
sbb
out
add
lahf
cld
mov
inc
dec
fsub
test
outs
sbb
dec
pop
shr
inc
dec
jne
xchg
xor
dec
sbb
xchg
xchg
push
(bad)
fs
movs
nop
mov
out
add
pop
sub
jne
pop
pop
fwait
adc
call
pop
xchg
cmp
mov
shl
add
shl
or
xor
mov
rol
fistp
ins
shr
adc
mov
je
mov
(bad)
fadd
xchg
xor
rol
adc
mov
xchg
fwait
sahf
sbb
sub
push
mov
out
out
div
sbb
sbb
xor
shl
pusha
test
enter
add
jmp
or
lods
lods
cmp
cmp
scas
scas
nop
xchg
cmp
cmp
xchg
xchg
xchg
xchg
cmp
cmp
xchg
xchg
cwde
cdq
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
add
add
sub
stc
nop
inc
add
cmp
lds
imul
or
scas
add
push
mov
add
movs
test
lahf
sbb
mov
add
lea
loop
adc
push
sar
jg
add
mov
xor
test
jne
loopne
mov
sbb
push
cs
dec
xor
cmp
jle
sub
xor
lods
cs
sbb
mov
sub
pusha
jge
aaa
pop
fwait
in
cmc
rcl
sub
in
jmp
adc
test
rol
rcr
push
dec
pop
mov
or
fisttp
lock
pop
cmps
fisttp
mov
push
pusha
xchg
fcomp
in
mov
jg
movs
sbb
add
sbb
pop
je
dec
xor
add
push
jmp
mov
and
je
jmp
cmp
sbb
test
mov
or
out
jne
out
mov
mov
mov
cmp
je
xor
add
jmp
mov
jb
ja
inc
adc
sbb
jmp
mov
cmp
div
xchg
mov
add
rol
add
mov
(bad)
fwait
pop
(bad)
jle
add
jp
jo
mov
in
fistp
pop
fisttp
cmp
cld
inc
mov
mov
cmp
ja
jb
add
add
call
(bad)
sub
lock
mov
(bad)
jo
test
mov
push
lea
jle
jb
inc
cmp
pop
cmp
scas
ret
dec
call
push
xchg
add
or
lods
cmp
call
stos
mov
cmps
test
pusha
fs
sti
les
mov
test
dec
jecxz
inc
fisttp
pop
fsub
lods
inc
das
jne
mov
clc
inc
mov
push
push
dec
xchg
xchg
cmp
call
xchg
lock
cmp
and
sbb
dec
add
or
xor
or
or
imul
mov
dec
test
inc
add
add
or
mov
je
(bad)
idiv
hlt
pusha
adc
cmovo
and
in
rcl
fadd
cwde
xchg
cld
addr16
jecxz
loop
cmp
jmp
xchg
mov
jne
xor
sti
mov
adc
inc
enter
xor
iret
lods
pop
adc
repnz
xchg
add
push
jno
pop
jmp
stos
(bad)
shl
and
add
cmp
cmp
adc
xlat
(bad)
mov
imul
loopne
xchg
mov
inc
cld
out
retf
fld
fstp
jne
leave
jnp
cmp
adc
fiadd
sbb
inc
add
or
pushw
or
cmp
jnp
mov
cmp
stc
fwait
arpl
pop
retf
add
mov
mov
or
test
cld
stos
jbe
out
and
aaa
or
jne
repz
jp
movs
les
push
out
mov
imul
in
rcr
fist
cmp
loopne
test
ja
iret
jnp
fwait
and
pop
pop
push
sbb
or
add
jmp
jo
js
sbb
sub
jmp
jb
push
or
xchg
pop
aad
out
rcl
rcl
pop
pop
jp
mov
sub
jno
push
jge
add
call
mov
push
lock
xor
movs
mov
(bad)
cld
ja
jl
cmp
mov
dec
and
adc
mov
add
xchg
dec
test
jbe
fnstcw
xchg
fxch
fdivr
cmp
or
not
fcom
jne
inc
fwait
or
movs
mov
inc
aam
sbb
(bad)
cmp
daa
sub
js
jne
pop
mov
add
daa
add
jl
ret
aaa
test
jmp
push
or
dec
push
dec
push
dec
pop
push
dec
or
pop
jbe
add
add
invd
dec
push
gs
imul
rol
pop
dec
or
sti
jp
pop
cmp
push
retf
pop
mov
popa
ins
or
or
iret
or
jg
je
or
inc
pop
inc
inc
push
stos
dec
mov
aam
and
push
enter
jae
dec
push
jle
test
movs
xchg
sbb
in
sbb
iret
adc
fsub
addr16
and
enter
adc
pop
not
ins
sar
mov
add
dec
jle
movups
ss
fisttp
or
inc
mov
mov
mov
add
ret
mov
pop
arpl
mov
lock
jmp
aad
pop
dec
sbb
scas
mov
sub
(bad)
adc
clc
unpcklps
push
fdiv
je
inc
push
ja
dec
dec
enter
stos
shr
inc
cmp
in
add
pop
(bad)
push
out
aas
xor
imul
fwait
call
or
jnp
mov
stos
pop
sub
mov
in
in
push
aam
int3
enter
in
sar
mov
call
in
test
int
xor
fild
dec
inc
adc
inc
and
or
sub
inc
ins
imul
test
sbb
dec
gs
xchg
data16
sbb
push
xchg
pusha
mov
inc
push
add
outs
xchg
inc
jae
fs
add
push
inc
imul
gs
add
bound
into
fidivr
sbb
adc
sbb
sbb
sub
in
pop
pop
(bad)
jbe
outs
ins
jns
in
adc
aas
inc
fadd
rol
fisub
jbe
pop
ss
push
mov
inc
(bad)
cmp
or
cmps
or
dec
imul
fs
adc
inc
inc
out
scas
xchg
push
or
xchg
pop
add
push
dec
xchg
cmc
(bad)
fadd
and
outs
shl
aaa
mov
pop
sub
or
or
dec
gs
fisttp
xor
jae
jne
sar
xchg
inc
jne
sar
(bad)
mov
dec
call
inc
jbe
cs
mov
ret
push
push
fsub
sbb
mov
sub
ror
in
add
(bad)
and
mov
mov
leave
cmp
add
push
jp
leave
xchg
mov
in
inc
cmp
inc
or
mov
inc
mov
inc
imul
call
scas
and
cs
cwde
cwde
daa
cs
popa
xchg
or
lock
dec
aaa
inc
mov
dec
pop
lods
nop
scas
inc
dec
or
dec
pop
inc
repnz
mov
call
push
inc
and
xchg
jmp
xchg
pop
cld
cmps
push
daa
ficomp
arpl
inc
pop
leave
sbb
into
dec
imul
scas
mov
adc
inc
ds
imul
enter
mov
or
pop
mov
push
inc
cmp
jns
push
mov
xchg
dec
and
mov
push
fmul
arpl
outs
inc
and
and
and
cwde
add
sbb
jle
add
sbb
adc
fisubr
xor
ins
lods
push
je
repnz
cld
push
lock
add
add
in
ins
add
daa
xchg
in
push
pop
mov
dec
cmp
cmp
rol
or
js
pop
scas
pop
ins
add
nop
xchg
stc
cmps
stos
add
adc
jno
jne
xor
sub
inc
sub
call
loopne
std
push
sub
ret
test
mov
and
scas
addr16
popf
push
push
pusha
or
jb
adc
out
jge
int3
int3
jbe
push
out
stc
ficom
dec
add
je
push
adc
pop
nop
(bad)
pop
adc
fild
jno
mov
je
xor
jae
mov
sbb
pop
xor
loope
mov
cmovns
fmul
jae
fs
jo
jge
das
pushf
jae
push
shl
mov
adc
cmp
iret
dec
ins
test
add
dec
or
mov
adc
xchg
cmp
fs
int
mov
psubsb
js
jl
jge
ja
fwait
adc
jg
inc
std
fdivp
push
js
pop
addr16
outs
in
push
jns
jbe
popf
push
jp
push
jnp
xor
les
mov
aaa
mov
dec
push
or
xchg
sbb
cmp
inc
xor
or
add
movs
jmp
ds
dec
inc
inc
bnd
mov
xor
pop
dec
and
mov
in
mov
xor
push
ins
pop
test
test
adc
jmp
inc
xchg
in
lock
inc
ss
push
or
and
push
adc
out
jge
pop
outs
out
xor
js
mov
loopne
or
lahf
mov
jbe
add
or
aad
mov
dec
rol
mov
pusha
daa
push
xchg
push
pop
je
jmp
adc
cwde
pop
push
pop
dec
shl
and
dec
inc
or
push
dec
mov
or
fisttp
jmp
jnp
mov
add
setb
add
xor
xlat
dec
adc
and
mov
adc
add
mov
add
xchg
pop
leave
mov
daa
sidtd
mov
call
xlat
add
mov
dec
or
dec
and
push
repnz
lock
adc
add
sub
and
cmp
sbb
pop
jb
pop
adc
sbb
pop
jb
and
les
jb
push
add
sbb
pop
add
in
sahf
out
dec
and
push
fsub
mov
sahf
out
shl
sahf
out
jnp
xchg
movs
and
nop
cmp
or
out
adc
inc
rcr
pop
push
xchg
push
es
mov
xchg
jl
push
rcr
iret
in
push
shl
hlt
sar
shl
jns
dec
call
mov
repnz
fbld
inc
mov
or
dec
cmps
add
or
adc
xchg
aaa
sar
cmp
test
shl
pop
push
lahf
jg
lahf
push
add
ss
(bad)
push
push
jl
sub
fld
cwde
push
push
pushf
adc
ins
mov
push
ds
adc
jo
loop
arpl
push
ins
xchg
sbb
inc
push
push
ins
pop
inc
test
mov
pcmpgtd
jo
adc
mov
inc
sbb
xchg
xor
mov
jg
aas
pop
call
rcl
stos
mov
ror
mov
xchg
fmul
cmps
mov
adc
inc
aam
aam
repz
xlat
loope
pop
imul
jmp
push
add
pop
sbb
loop
in
pop
inc
(bad)
int
dec
add
cs
(bad)
dec
sar
push
push
sub
mov
sub
push
ds
cmp
(bad)
clc
je
neg
pop
int3
sbb
push
popf
mov
(bad)
clc
enter
pop
pop
enter
leave
or
retf
mov
sbb
adc
cmp
lods
out
(bad)
ja
mov
std
(bad)
cld
(bad)
sti
int
jmp
inc
cli
(bad)
stc
(bad)
clc
push
push
push
push
push
push
loop
out
pop
sar
and
push
mov
mov
fsub
in
cmp
push
dec
retf
int3
fadd
shr
or
test
mov
cmps
mov
inc
(bad)
fs
mov
cdq
pop
add
add
dec
jmp
sub
pop
add
addr16
aaa
push
adc
xor
out
out
add
or
add
cmp
lock
mov
test
push
inc
push
rol
push
arpl
sahf
dec
cmp
call
fs
loop
push
mov
dec
and
inc
iret
sbb
out
out
mov
push
mov
jbe
inc
lock
push
clc
pop
sub
push
sbb
jnp
fs
call
and
dec
dec
fs
mov
inc
popa
push
ss
adc
mov
sub
push
add
push
push
sbb
push
inc
sub
push
out
ficom
aaa
dec
xchg
cmc
inc
es
cmp
jne
push
and
push
add
je
pop
add
mov
push
sbb
jns
sbb
pop
aam
add
jb
jne
(bad)
scas
jo
add
and
pop
cld
or
pop
or
adc
pop
or
out
sbb
xor
push
mov
dec
js
push
inc
cmp
and
bound
sbb
mov
fadd
sub
adc
retf
or
sahf
or
les
mov
jo
xor
addr16
or
xchg
or
inc
mov
(bad)
sti
jle
je
sub
sub
(bad)
jne
mov
and
jmp
sbb
xor
and
adc
test
cmp
sub
stc
mov
stos
pop
inc
push
mov
xor
adc
pop
cld
sbb
push
jbe
cmp
add
pop
jl
js
mov
mov
std
ins
and
pop
(bad)
pushf
xor
inc
add
xchg
mov
ins
imul
add
xor
clc
mov
adc
data16
daa
mov
mov
push
(bad)
jne
xor
and
pop
sbb
popa
sete
pop
pop
mov
pusha
pop
mov
dec
icebp
pop
jb
or
push
inc
or
(bad)
(bad)
sbb
adc
mov
out
dec
jne
pop
add
and
pop
hlt
jnp
and
sbb
test
mov
jno
popa
pop
add
in
and
add
and
sbb
adc
push
inc
sub
inc
dec
sbb
add
pop
pop
xchg
dec
sbb
pop
gs
rcl
imul
loopne
popf
push
(bad)
pusha
add
cmp
inc
dec
jl
fadd
aad
and
ret
pop
inc
cmp
and
cwde
sbb
adc
(bad)
fwait
cmp
repnz
imul
add
xchg
push
and
or
bound
rol
or
jno
fild
dec
imul
xlat
inc
and
add
adc
mov
and
sbb
imul
jo
inc
adc
sbb
out
repnz
loope
push
(bad)
xor
lea
pop
push
push
(bad)
test
push
int3
stos
pop
push
pusha
add
jg
fcmovbe
cmp
inc
adc
inc
cmp
push
lea
(bad)
ja
stos
pop
les
in
jl
inc
xor
xor
jg
out
inc
dec
jne
(bad)
pop
rcr
xchg
call
outs
lds
inc
sbb
out
mov
inc
rol
gs
nop
sub
cdq
fisub
nop
mov
jno
dec
popf
jnp
inc
cmp
adc
xchg
dec
mov
enter
dec
pop
arpl
sub
and
cli
and
pop
(bad)
in
adc
daa
inc
hlt
add
push
outs
or
sub
test
xor
dec
or
call
adc
ror
cmp
push
stos
adc
or
jne
push
sbb
repz
js
in
or
int
add
xchg
jl
inc
push
call
fwait
xor
outs
repnz
xor
xor
inc
sbb
loopne
imul
jne
imul
icebp
cmp
fcomp
call
mov
jecxz
(bad)
(bad)
dec
call
jo
jecxz
rcr
fisttp
les
mov
adc
xor
push
inc
aaa
pop
pop
retf
jae
push
jb
inc
test
test
test
sbb
xchg
and
(bad)
mov
or
push
jg
pop
xor
mov
cmps
cmc
les
add
scas
sub
xchg
mov
push
aad
mov
xchg
mov
xor
pushf
or
cli
pusha
daa
cli
push
or
pusha
mov
dec
mov
or
ret
adc
add
xor
xor
and
push
enter
call
add
rol
pop
xor
sub
ret
rcl
push
jae
mov
xlat
retf
mov
inc
inc
ret
inc
ins
and
push
lahf
movs
adc
imul
imul
jb
mov
das
dec
jmp
adc
and
cmps
push
add
in
es
fwait
push
ret
adc
ja
adc
sub
cwde
hlt
jp
popa
pushf
mov
or
adc
inc
jno
seto
mov
loope
enter
movs
inc
popa
out
div
loop
fcmovb
pop
cwde
xchg
inc
cmc
and
inc
push
xor
scas
lahf
add
in
sbb
enter
jp
in
sub
cmp
xor
enter
mov
shl
test
cmp
mov
add
xchg
arpl
pushf
and
dec
arpl
mov
into
mov
leave
xor
push
xor
dec
push
in
mov
cmp
scas
cmp
nop
setp
and
pop
sub
or
and
add
addr16
add
push
out
or
or
pop
sub
push
mov
sub
js
outs
test
xchg
shl
pop
sbb
push
jp
jg
ss
aad
cld
cmp
inc
das
jo
fs
pop
popa
and
es
jmp
or
push
mov
cmp
addr16
(bad)
jo
add
pop
test
ret
add
lea
xchg
icebp
or
add
clc
sub
cld
mov
jmp
adc
pop
loope
ins
rol
sub
inc
retf
scas
pop
sbb
sbb
(bad)
cmp
jne
sbb
mov
sbb
mov
pop
mov
add
xchg
outs
mov
add
fcom
add
(bad)
mov
adc
or
cmp
in
cmp
pusha
sbb
imul
test
xchg
and
sahf
pop
mov
add
fs
cli
jo
add
push
scas
ja
or
sar
in
dec
xor
adc
shr
dec
push
jge
ss
mov
xchg
dec
push
imul
dec
mov
and
push
sbb
retw
data16
xchg
cmp
xchg
rol
pusha
outs
mov
or
sbb
lods
rol
dec
nop
sahf
mov
aaa
pusha
push
aas
xlat
arpl
loopne
mov
pop
mov
mov
inc
cdq
and
and
loope
and
adc
push
or
mov
jne
cmp
test
mov
lea
sbb
dec
mov
xor
rcl
mov
jo
je
mov
enter
icebp
ret
sub
push
pop
dec
movs
or
xchg
add
xor
mov
test
push
add
sbb
test
jbe
mov
and
or
inc
inc
arpl
cmp
mov
add
int3
shr
inc
sbb
push
push
test
push
addr16
bnd
xor
aas
imul
sub
fsubr
or
xor
push
or
push
jae
jae
std
push
ret
ret
inc
adc
in
dec
call
leave
push
add
ficomp
add
imul
xlat
and
das
punpckhdq
std
adc
cmc
lods
push
sbb
or
and
dec
or
stos
sti
(bad)
sbb
shl
loop
adc
or
ins
sub
sbb
xor
icebp
push
rcl
jnp
inc
shr
push
mov
fs
popf
pop
inc
or
jmp
pop
pop
daa
adc
inc
mov
sub
mov
adc
test
mov
xchg
add
dec
call
sbb
add
ret
out
ins
cmp
push
sbb
xor
cmps
mov
mov
adc
push
pop
leave
fadd
add
scas
lock
rcl
scas
sub
add
mov
or
add
adc
jne
sbb
mov
rcl
std
jle
or
xchg
jae
cs
jno
push
or
xchg
and
hlt
or
push
jecxz
in
push
lahf
adc
test
mov
or
leave
shr
dec
stos
adc
nop
and
mov
mov
das
xor
sbb
sub
rcl
in
loopne
sbb
add
dec
lods
scas
(bad)
pop
rcr
inc
cdq
fadd
aas
sbb
jle
lock
jle
test
ret
mov
inc
dec
or
xchg
cli
out
and
popf
(bad)
call
std
jg
dec
cwde
ror
or
dec
dec
inc
jno
and
push
xor
rol
sub
adc
xchg
movs
adc
adc
ins
data16
inc
adc
mov
shr
ja
push
push
dec
fsub
xor
inc
das
ds
mov
cld
cmp
test
test
xchg
inc
jne
sub
jne
push
fisttp
sahf
or
inc
outs
add
xor
mov
movs
pop
das
aaa
ret
push
outs
pop
and
mov
pop
dec
mov
movs
test
mov
aaa
adc
cmp
scas
inc
aaa
enter
cmp
rcr
add
mov
and
cmp
outs
movs
cmp
dec
pusha
data16
jg
pop
sar
mov
shl
sbb
jmp
shl
cmp
je
add
push
jae
nop
sbb
push
fisub
retf
add
xchg
push
cmp
aad
fst
and
mov
cmp
jae
add
pop
pop
dec
or
je
stos
adc
btr
push
xlat
and
mov
jle
inc
fwait
enter
out
aam
js
out
dec
or
add
dec
test
mov
adc
enter
and
sar
pop
ja
and
bt
jb
add
mov
push
dec
call
mov
sti
(bad)
jmp
inc
cmp
jne
inc
dec
jne
les
mov
lahf
aaa
xor
sub
xchg
xor
add
xor
ret
imul
sub
in
jno
xor
call
dec
es
dec
add
cmp
lock
xor
add
imul
jmp
and
xor
mov
dec
call
xchg
mov
xchg
dec
rol
push
icebp
cli
ds
or
jno
add
mov
mov
xor
(bad)
into
sub
sbb
rcl
mov
push
mov
aam
xor
or
scas
xchg
cmp
lods
aaa
outs
mov
pop
loopne
mov
add
push
push
iret
dec
pop
mov
fld
mov
sbb
mov
popa
xchg
data16
cmc
add
add
push
into
push
push
push
aaa
into
mov
mov
sbb
aam
retf
mov
push
(bad)
cmp
inc
jle
push
dec
and
cdq
xor
jae
or
mov
xor
rcr
jnp
mov
sub
pop
jae
jns
mov
push
jle
jbe
xor
sbb
adc
int
push
xor
loope
mov
push
(bad)
popa
(bad)
repnz
jg
and
je
lods
lods
dec
xor
call
pusha
ss
icebp
lock
add
sahf
ins
adc
or
and
push
mov
pop
xlat
push
or
xor
(bad)
pop
je
add
movs
std
je
and
xchg
adc
add
pop
ror
and
aam
adc
shl
mov
dec
jae
aaa
push
mov
adc
pop
push
push
pop
pop
call
inc
or
sbb
pop
in
dec
movs
pop
xchg
jo
mov
sub
dec
and
and
rcr
add
inc
jo
sub
sar
inc
ja
daa
(bad)
dec
clc
sar
inc
repz
adc
jecxz
push
es
inc
push
push
outs
(bad)
aad
dec
jge
adc
push
mov
pop
mov
ror
mov
movs
mov
mov
shl
jae
outs
jmp
dec
in
fcom
push
mov
loope
push
(bad)
xor
pop
cmp
cmp
dec
sub
lock
pop
in
xchg
ds
push
in
sbb
mov
out
cmps
mov
ins
add
xchg
mov
add
out
inc
enter
jbe
mov
aas
jbe
stos
inc
mov
cmc
(bad)
iret
lds
fs
jbe
(bad)
hlt
nop
push
cmps
out
lock
shl
and
ss
sbb
fwait
cld
push
mov
xchg
xchg
pop
ret
nop
(bad)
stos
and
loope
aad
(bad)
sbb
in
sbb
ja
dec
dec
ret
sub
cld
lock
push
push
imul
sbb
xchg
mov
jl
add
or
dec
pop
push
cmp
add
pop
shl
or
loopne
xor
stos
add
ret
adc
push
push
in
jns
jne
inc
clc
add
inc
push
adc
or
xchg
shl
jns
adc
fsub
sbb
call
jne
inc
inc
retf
push
mov
in
fwait
pop
call
stos
call
adc
xchg
mov
cmp
out
add
push
loopne
add
mov
push
mov
jg
jns
addr16
push
mov
clc
in
or
pop
stos
adc
dec
cld
xor
mov
and
fcom
test
add
mov
push
cmp
pop
movs
neg
and
inc
jmp
mov
sbb
jle
adc
xor
mov
ror
dec
jle
test
push
mov
into
loopne
xchg
sbb
pop
movs
mov
test
and
mov
cmp
pop
(bad)
adc
out
lods
jecxz
push
pusha
add
pop
rcl
cmps
enter
out
cmp
cmp
or
jo
fiadd
fisttp
push
imul
and
push
ds
fdiv
mov
add
or
jnp
das
mov
ins
je
cmps
add
jnp
add
call
clc
clc
add
dec
pop
jl
sub
sahf
inc
das
jmp
sub
lea
mov
push
xchg
or
adc
sub
jl
test
and
lds
(bad)
outs
sub
int
pop
add
mov
ins
mov
clc
bound
dec
push
leave
inc
jo
add
or
dec
add
push
pop
adc
pop
jno
xchg
popf
loope
adc
mov
(bad)
mov
loop
out
jmp
jge
and
imul
or
retf
push
mov
inc
pop
into
cs
cmp
lds
call
xor
or
aam
xor
jle
js
push
xor
pop
lods
fimul
add
cmp
gs
mov
mov
jo
mov
stos
icebp
mov
mov
je
dec
mov
call
test
das
repnz
inc
add
jle
movs
cmp
repz
movs
in
mov
adc
jmp
mov
adc
popf
outs
jg
(bad)
mov
xchg
dec
inc
jmp
fmul
mov
mov
xchg
mov
or
je
or
test
lods
ja
mov
sub
ins
xchg
and
int
(bad)
cmp
add
test
jg
mov
dec
jno
inc
hlt
cmp
rol
pushf
push
cmp
arpl
sub
push
(bad)
fist
inc
(bad)
cdq
inc
and
jne
cld
pop
call
cmp
pop
mov
cmp
jne
test
or
or
mov
(bad)
jmp
dec
add
movaps
test
aad
nop
inc
mov
jecxz
adc
fadd
add
sub
jb
dec
sub
adc
mov
lods
or
inc
pop
cs
cmp
mov
addr16
adc
pop
ret
adc
ret
push
xchg
adc
mov
push
push
inc
fiadd
jmp
jmp
leave
pushf
lock
rol
xchg
mov
sub
mov
lods
retf
pop
data16
cmp
enter
ins
imul
and
retf
ins
mov
dec
adc
dec
gs
inc
ret
push
adc
sub
inc
pop
adc
pop
and
shr
inc
dec
inc
stos
sbb
inc
lock
mov
push
movs
rol
and
xchg
dec
push
push
test
or
iret
dec
sti
mov
mov
pop
cld
lock
(bad)
push
lds
sbb
or
js
rcr
dec
add
sbb
ds
outs
lock
js
clc
cdq
ficom
(bad)
push
sbb
cmp
aas
mov
(bad)
jmp
and
adc
sub
jge
lea
loope
imul
pop
mov
push
jg
add
aad
jbe
jge
and
pop
adc
jg
test
sub
(bad)
(bad)
add
cmp
out
mov
adc
aas
pop
or
push
mov
xchg
xchg
aaa
pop
repnz
mov
(bad)
mov
sub
or
push
scas
jns
rcl
push
mov
dec
or
loope
add
shr
sti
adc
(bad)
dec
test
movs
test
cmps
sub
adc
sbb
std
ret
inc
aas
jg
nop
or
or
push
xchg
ror
and
mov
push
fisub
fild
mov
enter
xchg
test
sar
in
jl
push
add
xor
lods
lock
add
rcr
out
mov
dec
lea
dec
(bad)
inc
test
in
push
and
add
mov
dec
mov
or
lock
dec
inc
jge
sbb
retf
and
fstp
pop
test
nop
pusha
hlt
jl
xor
xchg
inc
mov
inc
adc
sub
sbb
adc
pop
inc
call
test
cmps
adc
mov
dec
clc
retf
or
jnp
inc
inc
inc
push
push
mov
or
jle
push
cmp
inc
add
out
rol
imul
out
cwde
cmpxchg
pop
add
push
scas
sub
cmp
dec
sti
pop
daa
xor
fimul
inc
pop
lods
ja
movs
xchg
ins
ret
sub
push
sub
fwait
jmp
into
mov
mov
pusha
xchg
(bad)
ja
sub
scas
mov
pop
adc
pusha
sti
inc
sub
jle
(bad)
enter
adc
add
mov
jo
jecxz
cmps
mov
mov
inc
dec
cmps
scas
ins
push
imul
adc
fucomp
lea
ret
mov
xchg
cs
adc
loopne
ror
or
and
add
into
jne
sbb
xchg
pop
es
mov
jne
xchg
arpl
inc
bound
xor
les
sbb
mov
clc
jecxz
mov
retf
push
inc
or
mov
add
ficomp
cvtdq2ps
(bad)
jo
mov
sub
neg
movs
mov
nop
or
pop
outs
adc
mov
es
xor
setp
loopne
jbe
popf
sbb
cmc
adc
int
xchg
adc
or
loop
inc
mov
add
add
jbe
or
sbb
or
and
add
mov
cdq
cmp
add
bound
add
and
mov
xchg
push
adc
dec
mov
cdq
sub
push
cmp
push
mov
jo
ss
xchg
inc
in
mov
mov
inc
cmps
fs
mov
add
push
nop
ret
sub
mov
push
inc
mov
or
aad
das
nop
lds
add
sbb
adc
icebp
mov
sbb
mov
js
add
pop
movs
int3
shr
xlat
mov
and
cmp
xchg
rcr
mov
inc
in
pop
mov
lods
je
jg
mov
jl
ret
xchg
pop
lods
push
inc
xchg
lds
push
stc
repnz
add
test
adc
(bad)
add
in
push
push
push
icebp
and
sbb
sub
mov
imul
xor
add
icebp
mov
add
push
dec
add
lods
push
movs
cmp
add
or
shl
and
cdq
scas
dec
cmps
dec
fisttp
jns
xor
fsubr
add
daa
jmp
dec
sar
in
test
enter
dec
dec
es
push
jo
add
arpl
cmp
fsub
mov
test
push
and
ror
das
aam
or
push
ins
imul
and
pop
add
neg
cmp
cmp
icebp
push
je
or
retf
sub
push
mov
idiv
push
imul
add
je
dec
or
adc
or
push
add
sbb
xor
fimul
ret
ss
and
adc
mov
daa
mov
jno
jb
mov
mov
ret
mov
and
inc
enter
mov
add
or
push
sbb
lock
lea
mov
and
and
jecxz
sbb
stc
xchg
xor
cmps
adc
jne
shl
push
adc
ret
jecxz
cld
test
and
or
rcl
jg
cmp
jp
shr
pop
cld
mov
add
es
(bad)
or
sbb
adc
pop
cmp
sar
sti
je
push
jne
bound
mov
adc
les
sbb
cdq
jmp
xor
je
pop
jmp
inc
jecxz
xlat
sbb
call
or
cmp
add
sub
jnp
jle
or
ror
adc
stos
add
add
lds
sub
push
or
push
test
cmp
or
xchg
nop
mov
pusha
(bad)
hlt
enter
das
dec
mov
mov
adc
lods
add
mov
sahf
mov
xchg
xchg
cmp
xchg
inc
push
add
call
(bad)
lahf
nop
xor
xor
adc
or
inc
lods
adc
js
cmp
inc
jb
jg
inc
mov
retf
iret
adc
push
sub
scas
dec
push
pop
pop
add
add
test
adc
(bad)
fidivr
add
sbb
jmp
nop
das
out
and
bound
fst
jmp
and
dec
push
push
xlat
add
cdq
dec
sbb
xchg
aas
add
jae
adc
adc
push
and
sbb
inc
imul
pop
and
add
mov
cmc
mov
fistp
pusha
aaa
mov
inc
adc
rol
add
or
pop
call
pop
adc
xchg
cmps
adc
or
jl
sbb
mov
ficom
mov
push
jmp
out
mov
(bad)
in
dec
xchg
dec
mov
inc
sbb
sbb
adc
cmp
jae
jo
pop
retf
ret
inc
or
les
push
daa
(bad)
xchg
rol
sbb
in
jae
cmp
push
aaa
sbb
sub
(bad)
loop
mov
jmp
cmp
adc
xchg
(bad)
pop
sub
les
sbb
push
ins
add
clc
push
cmp
fisub
(bad)
jmp
pop
sbb
push
in
adc
inc
leave
mov
mov
mov
inc
popf
mov
jb
movs
or
idiv
jl
ds
push
or
je
movs
add
outs
ja
push
mov
and
sub
jg
ror
stc
cs
push
and
jl
aam
(bad)
imul
jbe
xchg
add
bound
mov
add
add
mov
mov
xor
cmp
sbb
pop
xor
dec
fs
bound
push
mov
shl
cmp
ds
jecxz
sbb
inc
movaps
call
sub
adc
call
shl
fcomp
xchg
movs
pop
fwait
cli
icebp
pop
test
pop
inc
cmp
jl
adc
jmp
push
leavew
sub
push
jb
mov
add
mov
loopne
and
mov
mov
test
dec
push
arpl
ins
push
cmps
mov
cmp
xchg
mov
push
adc
push
or
loopne
ins
mov
arpl
push
adc
mov
fst
pop
xchg
mov
mov
xchg
adc
je
inc
repz
rcl
and
add
xlat
cli
dec
das
mov
retf
bound
push
mov
(bad)
ror
jb
enter
or
pusha
mov
or
push
xchg
jl
add
mov
loopne
inc
or
dec
es
and
ret
mov
xchg
movs
das
push
loope
mov
mov
cmp
pop
push
es
mov
add
jne
jo
loopne
outs
ss
adc
push
inc
adc
push
jne
scas
dec
mov
mov
mov
ret
in
pop
inc
ror
cmps
and
mov
rcr
and
push
mov
adc
inc
sbb
mov
mov
fisttp
push
je
hlt
aaa
push
sbb
jno
test
scas
in
les
and
and
push
arpl
pushf
mov
pop
and
push
inc
retf
adc
cli
pop
call
daa
dec
add
xchg
fucomip
add
(bad)
enter
sub
push
cmp
jmp
les
fiadd
clc
push
push
adc
cmp
adc
out
nop
or
pop
clc
mov
sbb
in
div
(bad)
cmp
push
add
push
push
or
jne
add
jns
and
out
loope
call
xlat
rcl
movs
fwait
inc
jae
push
ins
pop
imul
xchg
adc
mov
inc
div
pop
add
inc
mov
(bad)
les
scas
loop
lea
sub
or
arpl
call
xor
daa
sub
sbb
jg
xor
leave
xor
adc
inc
jmp
retf
mov
xor
ss
jmp
xchg
add
pop
mov
add
adc
dec
je
inc
push
xlat
out
cmp
dec
jne
and
cdq
or
call
ficomp
les
jmp
not
xor
movsx
add
mov
push
push
xchg
pop
sti
cmp
cmp
xor
loopne
cmc
sbb
mov
push
jne
jae
mov
popa
mov
mov
or
mov
popa
sbb
adc
scas
add
push
cmp
xlat
cmps
xor
iret
xchg
push
xchg
jp
stos
jecxz
cwde
and
jbe
jp
sub
add
xor
mov
out
and
jne
mov
fld
dec
jmp
stos
inc
aam
cmp
retf
and
(bad)
and
pop
adc
add
dec
xchg
les
in
sti
lock
add
xor
push
cmp
ss
ins
bound
(bad)
sbb
dec
mov
fcom
dec
jns
jle
push
mov
sbb
cmps
sub
cs
js
inc
outs
gs
rcr
popf
ret
sbb
call
or
lods
and
jl
jae
pusha
aaa
ret
mov
xchg
and
dec
jne
movs
mov
aad
fiadd
mov
iret
or
cmp
aam
inc
add
xor
xchg
ror
or
icebp
daa
push
push
sbb
repnz
and
and
sbb
sbb
das
retf
icebp
in
stc
pop
pop
shl
je
mov
inc
push
xchg
cmp
stc
or
add
les
fs
jmp
pop
cmp
cli
mov
add
test
add
jge
cwde
data16
or
inc
sbb
or
fs
in
sub
not
and
aaa
int3
ror
xchg
add
test
add
inc
jecxz
dec
pop
addr16
pusha
movs
xchg
enter
mov
mov
push
test
mov
add
sub
cdq
repnz
jbe
int
int
xchg
or
scas
adc
shl
sub
jl
or
int
xchg
jo
and
ins
mov
xchg
mov
sbb
in
add
xchg
push
hlt
repz
sub
ja
push
pop
mov
jns
out
dec
sbb
adc
pop
cmps
sahf
jge
pop
dec
sub
retf
pop
xchg
les
pop
sbb
mov
push
and
in
sbb
in
addr16
add
xor
mov
(bad)
fist
mov
clc
movs
sbb
loopne
imul
xor
sbb
adc
add
pop
outs
xchg
or
jne
in
test
dec
inc
pop
repnz
or
mov
xchg
or
adc
xor
fdiv
or
sub
inc
sub
(bad)
repnz
test
push
(bad)
popa
push
xor
mov
inc
movs
adc
lods
test
add
popf
pushf
adc
push
push
nop
in
sub
fadd
sbb
mul
scas
fdivr
push
div
or
(bad)
cli
mov
mov
mov
mov
daa
(bad)
cmp
jae
jecxz
adc
xchg
call
mov
mov
pop
popf
jne
adc
ret
repnz
mov
push
not
jnp
sbb
adc
mov
sub
sub
in
adc
pusha
sbb
push
xor
(bad)
les
mov
push
inc
cs
stc
adc
outs
sar
xor
mov
mov
add
jo
xor
and
nop
mov
cmp
popa
nop
lods
mov
movs
in
rcr
sub
int3
xor
or
lea
cld
adc
inc
adc
(bad)
push
cdq
add
inc
xor
xor
mov
movs
mov
jae
movs
pushf
setp
push
movs
sub
xlat
ret
inc
pop
out
or
ret
ja
nop
pop
lock
inc
push
sbb
sub
ret
call
sub
bound
sti
mov
js
and
jge
popa
sub
add
fs
mov
loope
cmps
imul
sbb
pop
mov
out
push
add
test
movs
cmp
pop
mov
push
sbb
cmp
push
cs
jb
xchg
fimul
test
jmp
xchg
dec
(bad)
add
repz
fstp
add
jb
gs
lock
and
cmp
or
mov
pop
adc
dec
es
lahf
adc
fadd
or
xor
fisub
ja
sbb
push
push
(bad)
cmps
rol
out
out
mov
cmp
push
sbb
inc
ss
add
loope
inc
xlat
cs
mov
sub
jb
data16
movs
pop
inc
das
sbb
inc
inc
inc
inc
js
test
cmps
test
jne
push
jnp
clc
test
and
sahf
movs
jle
hlt
and
ss
fadd
movsx
sub
and
add
mov
sub
dec
cmps
daa
cmp
jno
fs
cmpxchg
test
test
popf
out
movs
mov
mov
(bad)
pop
test
and
cmp
jne
mov
inc
call
mov
pop
icebp
popf
and
cmp
arpl
push
xchg
(bad)
and
fisub
xchg
mov
or
jl
and
sbb
cdq
mov
push
mov
xor
dec
(bad)
(bad)
push
es
stos
test
or
inc
addr16
cmps
mov
adc
and
pushf
outs
test
or
mov
lock
cmp
sub
xchg
stc
lods
js
push
push
add
inc
cmp
push
mov
cmp
pusha
jne
hlt
(bad)
imul
cmp
xor
sbb
loopne
sar
cmp
inc
ror
dec
cmp
jo
xor
loopne
xchg
std
popf
sub
pop
pop
cmp
add
jo
or
dec
inc
adc
stos
mov
sub
sub
inc
ins
stos
or
sbb
and
dec
lock
lock
scas
sub
xor
add
js
add
test
lds
sub
lea
ins
dec
xor
xor
ds
out
js
ror
mov
and
shl
xchg
shl
aad
cmp
mov
or
sbb
call
ror
in
in
xor
ins
add
retf
cmp
jns
push
lahf
mov
xchg
test
test
fld
jg
mov
lods
pop
lock
pop
mov
sub
cmps
hlt
cmp
enter
lods
data16
ret
add
leave
packuswb
add
jne
sbb
xor
mov
and
pop
push
enter
dec
clc
out
xchg
dec
adc
repnz
scas
and
xchg
call
and
xchg
push
pusha
pushf
pushf
cmp
mov
hlt
sbb
cmc
push
imul
sub
clc
jnp
aad
lods
xor
stc
mov
sub
sbb
adc
sahf
addr16
mov
scas
add
(bad)
sahf
out
loop
ds
inc
daa
les
pop
jns
rol
lock
ds
ret
jns
push
(bad)
loopne
call
mov
xor
xor
popf
fcomp
rol
call
dec
rol
test
sub
mov
push
jbe
push
retf
loopne
repnz
sbb
in
fdiv
cwde
dec
xor
daa
or
sbb
mov
pusha
adc
xchg
push
xor
into
push
mov
inc
push
fimul
imul
ror
sbb
rol
clc
push
cmp
mov
sbb
call
addr16
pop
mov
je
push
jnp
or
push
jno
or
and
push
aas
fsubr
pop
push
push
retf
mov
adc
inc
mov
ret
push
cmp
ret
cmp
popf
ins
xor
jge
mov
mov
imul
mov
fwait
and
mov
add
aaa
addr16
xlat
ror
xor
rcr
fcom
mov
sub
pop
aaa
js
movs
fcomi
(bad)
dec
or
pop
mov
out
push
imul
fistp
xor
cld
sub
leave
not
fstp
call
lods
add
cld
add
sbb
pop
mov
fdiv
sbb
or
movs
jge
jne
mov
and
mov
shl
mov
xor
pop
loopne
lea
mov
push
rcr
ins
repnz
je
mov
inc
and
aam
stc
add
fbld
push
outs
je
cmp
xor
adc
mov
ror
loop
adc
or
mov
lds
xchg
dec
scas
xor
das
xchg
(bad)
mov
xor
sub
cmp
je
push
repnz
mov
or
aam
sub
shr
fistp
dec
je
jb
jne
in
pop
pop
(bad)
xchg
dec
popa
inc
test
sub
retf
test
jno
mov
stos
hlt
mov
pop
clc
xchg
int3
lods
pop
hlt
push
and
mov
xchg
lods
mov
mov
mov
mov
inc
arpl
xor
in
mov
push
xchg
mov
mov
or
aad
add
test
inc
sub
loope
and
cmp
(bad)
push
dec
data16
rcl
cmc
stos
ret
jmp
lds
jmp
ins
sub
inc
xchg
loopne
aaa
aad
push
hlt
je
adc
push
fwait
je
adc
mov
hlt
add
not
add
jne
test
mov
aad
test
addr16
mov
adc
call
pop
call
cld
fld
or
retf
aam
jne
jb
dec
daa
mov
xlat
mov
cmp
cwde
xchg
inc
dec
ja
repnz
enter
outs
push
push
popa
and
int3
iret
jae
fsubr
jae
xchg
cld
add
pop
push
inc
ds
fadd
leave
dec
cmp
mov
xchg
cmp
rcr
cdq
adc
push
mov
cmps
mov
lahf
mov
pop
and
cmp
call
add
enter
mov
pushf
fstp
pop
or
add
pop
nop
mov
ins
add
movs
out
dec
ja
adc
pop
cli
les
push
daa
outs
sub
and
scas
shl
retf
shr
and
leave
das
pusha
repz
sub
mov
adc
rcr
mov
test
sub
dec
sahf
pop
dec
mov
mov
sahf
sub
dec
pop
jo
jnp
idiv
inc
add
cwde
pop
cmps
push
sahf
out
sahf
scas
mov
jp
add
pop
mov
aam
pop
xor
nop
dec
adc
and
add
cli
xchg
mov
mov
pop
jnp
ret
and
das
pop
push
adc
jle
out
sub
(bad)
mov
dec
enter
add
cmp
inc
pusha
adc
popa
push
mov
leave
mov
loop
in
gs
and
ins
xor
popa
adc
hlt
mov
cmp
jbe
mov
mov
pop
xchg
lock
ret
lock
mov
inc
aaa
cmp
mov
in
push
sbb
mov
mov
or
inc
(bad)
es
inc
xor
push
dec
inc
jl
dec
or
call
cmp
jge
xchg
loope
test
scas
nop
(bad)
jle
int3
mov
xor
pop
add
push
test
mov
sti
or
add
jl
clc
inc
push
mov
mov
inc
inc
call
push
loope
and
in
xor
pushf
ins
mov
ds
pop
cmps
sbb
mov
sbb
bound
cmps
ror
push
add
test
pop
inc
adc
add
and
cmp
and
iret
(bad)
push
push
jno
jle
movs
xor
cmp
inc
push
cmp
pop
push
mov
test
sub
and
ss
jg
js
xchg
movs
daa
lahf
dec
lahf
call
jne
pusha
lods
xlat
shl
pop
lock
push
inc
mov
or
add
jle
dec
movs
xchg
rcr
rcr
pop
mov
pop
shl
shr
ja
imul
mov
pop
ret
clc
clc
mov
sahf
lea
(bad)
jmp
dec
or
movs
xor
cmp
or
mov
push
xchg
fadd
ror
dec
mov
add
stc
dec
call
inc
das
xchg
or
jg
adc
(bad)
inc
pop
sub
aas
sbb
add
add
xor
push
xlat
xchg
ror
popf
and
cmp
push
push
inc
push
popa
rcl
cs
adc
jae
jbe
dec
in
test
rol
pcmpeqw
fld
shl
(bad)
movsx
or
xchg
and
or
cld
cmps
sub
dec
push
mov
inc
cmp
sub
push
clc
cmp
scas
adc
push
jmp
mov
sti
jbe
ins
push
mov
icebp
fisttp
ret
lock
push
mov
mov
dec
das
mov
hlt
jmp
leave
push
sbb
shr
sbb
dec
enter
cmp
iret
ret
mov
(bad)
or
sub
shl
adc
(bad)
aas
mov
retf
push
mov
add
add
mov
pop
test
or
adc
rol
ret
call
add
(bad)
in
ret
mov
bswap
mov
cmp
jg
out
cmp
add
cwde
or
ds
(bad)
or
jl
adc
jg
mov
push
add
mov
mov
jne
mov
jmp
dec
mov
je
add
sub
fidiv
dec
mov
enter
xor
adc
adc
shr
aaa
or
(bad)
xor
jne
cmps
ret
push
sub
rcl
jl
mov
pop
cmp
rcr
inc
push
cmps
sbb
ins
jne
cmp
outs
movs
mov
mov
add
and
mov
inc
les
dec
xchg
sbb
add
sar
push
push
pop
push
jmp
sbb
test
in
retf
dec
rcl
hlt
dec
sar
je
sbb
pop
mov
adc
and
xchg
and
mov
xor
pop
adc
les
and
add
pop
sbb
sbb
push
adc
cmps
cmp
les
cmp
pop
dec
sbb
frstor
mov
test
inc
sbb
sub
adc
or
xor
mov
movs
jg
mov
adc
sub
outs
jo
jmp
adc
pop
imul
add
inc
sbb
test
test
fsub
and
ins
hlt
mov
clc
and
add
pusha
shl
xchg
adc
into
loope
cmp
pop
arpl
dec
stc
sub
out
scas
jle
or
mov
pop
adc
nop
xor
inc
adc
adc
lea
loopne
xor
imul
mov
stos
repnz
cmp
ret
ds
loop
dec
leave
fcomp
jnp
cmp
ins
dec
sub
fsubr
pusha
xor
adc
fbstp
xor
mov
adc
imul
lds
or
jb
mov
jp
and
xchg
ud2
repnz
repz
sbb
jmp
adc
repz
add
mov
(bad)
mov
mov
sub
or
pop
adc
xlat
(bad)
sbb
jb
fcom
sub
xor
jnp
xor
xchg
(bad)
and
pop
adc
scas
je
ret
xor
shl
outs
fmul
xchg
push
(bad)
cmp
and
push
(bad)
imul
aam
add
aam
inc
add
and
or
dec
(bad)
icebp
push
mov
movs
mov
rol
fadd
pop
adc
mov
adc
scas
cmp
inc
repnz
or
gs
call
mov
add
or
sbb
pop
adc
jnp
mov
mov
stos
adc
dec
call
add
pop
add
outs
cmp
je
pavgw
or
adc
mov
icebp
add
cmp
jl
add
push
dec
lea
cmps
aad
sub
imul
pushf
(bad)
dec
(bad)
fmul
fisubr
setne
add
cwde
(bad)
cmp
or
add
je
mov
test
mov
fistp
jmp
jl
gs
outs
jo
xchg
inc
aas
pop
fistp
cdq
or
pop
(bad)
fmul
add
aaa
inc
jb
rol
inc
pop
inc
not
arpl
data16
cmps
pop
dec
movs
sub
add
adc
lods
inc
retf
mov
aad
inc
ss
push
mov
jne
daa
call
or
dec
add
cmp
dec
mov
and
je
push
repz
dec
retf
or
inc
xchg
pop
adc
ret
popa
pusha
ror
dec
stos
mov
xor
mov
mov
sbb
xor
dec
dec
xor
push
inc
dec
jne
les
pop
xor
xor
les
fsubr
lahf
sbb
jbe
and
sbb
adc
loopne
call
retf
(bad)
jmp
sbb
sbb
popa
retf
pop
push
les
das
mov
stos
aas
daa
adc
pop
push
pusha
xor
cmps
xchg
adc
and
jo
xor
leave
aas
ret
movs
push
xor
push
push
dec
jge
fstp
and
cmp
jg
push
dec
cmp
(bad)
mov
mov
retf
cmps
aad
sahf
jmp
jmp
icebp
mov
mov
jmp
or
sbb
and
mov
call
mov
inc
icebp
and
add
es
rcr
add
ja
repnz
arpl
rol
pop
or
add
cmp
das
gs
(bad)
ins
aas
scas
sahf
xchg
pop
push
pop
pusha
xor
sbb
and
inc
cmp
and
xchg
js
movs
inc
and
inc
retf
adc
mov
pop
setne
jne
rcl
call
adc
or
inc
imul
and
(bad)
add
shl
jbe
jge
(bad)
aas
sub
rcr
dec
nop
cmps
adc
nop
sub
or
aam
pop
pop
push
pop
out
xor
dec
loopne
inc
nop
(bad)
or
fsubr
test
inc
iret
je
jle
sub
mov
lock
int
add
cmps
iret
sub
bswap
or
loopne
add
test
ror
popa
movs
xor
pop
clc
aad
or
lods
sbb
push
js
mov
scas
or
aas
sbb
push
imul
lea
pop
(bad)
and
or
retf
in
jns
mov
je
cmp
call
push
sub
arpl
add
pop
lahf
inc
xchg
out
aaa
dec
dec
dec
dec
popa
into
cmp
ror
dec
push
je
dec
push
out
data16
mov
sahf
jns
sbb
repnz
mov
xor
add
and
xchg
xor
or
mov
inc
test
push
sub
mov
mov
cld
jnp
ror
cmp
jne
pop
adc
cwde
pusha
scas
fnsave
wrmsr
bound
sbb
add
mov
mov
cwde
mov
sbb
inc
mov
fwait
and
add
enter
ror
nop
add
push
or
jae
btc
imul
mov
rol
dec
adc
movs
(bad)
sahf
add
or
cwde
imul
sub
stos
in
iret
fist
pop
dec
leave
lsl
add
xlat
pop
adc
shl
pop
jl
sti
add
add
inc
retf
test
or
inc
sbb
call
pop
in
or
pop
sbb
pop
mov
pop
dec
pop
xchg
popa
sti
rcl
pop
scas
xchg
loope
xchg
pushf
mov
adc
push
adc
jb
sub
inc
retf
(bad)
inc
sbb
gs
push
iret
(bad)
dec
cmp
fisttp
cmc
ror
mov
pop
outs
cdq
or
in
popa
repnz
(bad)
ror
sub
in
call
hlt
add
adc
jae
mul
(bad)
add
clc
fsub
inc
outs
jne
dec
shl
aam
or
mov
mov
jne
jle
sub
cmp
jl
in
iret
jo
or
fwait
sbb
or
push
scas
scas
rol
push
inc
or
mov
push
in
js
fdivr
inc
pop
cdq
lock
pop
or
xor
push
imul
mov
dec
and
xchg
push
pop
push
aad
out
sub
add
loopne
arpl
sbb
push
(bad)
push
outs
sbb
or
ja
sbb
rcr
and
in
je
(bad)
jnp
sub
shl
in
mov
ds
ss
ret
push
add
mov
sbb
idiv
cmp
add
push
mov
add
daa
xor
sub
inc
or
mov
adc
push
lahf
inc
sub
pop
movs
sbb
xchg
dec
movs
sbb
and
sub
push
mov
pop
mov
repnz
or
fstp
daa
in
cmp
sub
aam
add
adc
rcl
ins
and
cmc
aam
and
sub
mov
cmp
adc
push
add
je
add
adc
iret
mov
sub
mov
sbb
cli
dec
add
ins
push
out
ficomp
mov
pop
pop
mov
mov
adc
xchg
mov
add
push
clc
imul
mov
inc
push
aad
mov
pop
or
add
fstp
inc
add
fsubrp
or
pop
add
cmp
fisttp
loope
mov
pop
inc
push
or
jge
xchg
(bad)
stos
adc
cmpxchg
add
retf
pop
ja
scas
xchg
adc
sbb
sar
add
push
daa
cmp
pop
mov
mov
fs
enter
pop
pop
inc
mov
inc
ins
pop
inc
or
or
mov
pusha
fsubr
cli
add
push
xchg
(bad)
test
dec
mov
outs
aam
ror
adc
arpl
push
cld
daa
retf
dec
mov
cdq
outs
arpl
cld
push
jo
les
test
fimul
pop
in
cmp
jns
and
push
xlat
js
mov
adc
sbb
aam
cmp
lea
jnp
inc
scas
or
out
pop
xor
dec
jmp
xchg
in
dec
pusha
mov
inc
sub
mov
movs
sbb
fst
jg
jge
mov
pop
add
(bad)
mov
(bad)
cdq
xchg
retf
popf
jb
in
lahf
fst
add
mov
push
and
pop
test
pusha
and
cwde
ins
lods
pop
dec
dec
pop
mov
fcom
xchg
jbe
cmp
jg
les
sbb
push
add
inc
pop
xchg
inc
adc
xor
ret
xchg
push
adc
or
dec
clc
dec
and
fld
and
(bad)
fldenv
or
(bad)
xor
push
mov
mov
fs
push
into
xchg
das
pop
leave
jl
add
enter
pop
fiadd
push
push
aam
cmp
out
add
(bad)
dec
pop
cmps
add
sbb
push
outs
ret
mov
repnz
scas
push
sub
jne
sbb
retf
cmp
mov
add
lea
mov
shr
je
dec
or
or
test
mov
or
xor
jg
xchg
mov
cs
outs
fild
leave
fisttp
fistp
or
and
int
xchg
pop
xchg
cld
mov
pop
rcl
mov
push
out
lods
cmp
inc
inc
xor
ud2
jae
mov
push
sub
inc
mov
mov
push
mov
ja
fbld
sbb
movlps
mov
sub
dec
fs
in
fnsave
test
out
add
add
adc
push
xchg
fsubr
ss
jo
sbb
add
fadd
adc
lock
or
popa
outs
popa
gs
sub
rcl
(bad)
fadd
adc
add
xchg
sub
mov
pop
sbb
loopne
daa
ss
dec
ret
out
add
test
push
push
dec
mov
or
mov
xor
shl
cmp
and
adc
mov
aam
pushf
(bad)
mov
les
in
int3
call
pop
adc
xor
lods
popa
push
imul
sahf
out
dec
push
pop
scas
sahf
out
sahf
mov
xchg
test
loop
lahf
cmps
xor
mov
pop
cs
sub
aaa
out
jo
ins
daa
nop
sbb
xchg
push
or
push
add
test
(bad)
fisubr
sbb
fistp
or
pop
(bad)
data16
push
fst
lods
mov
mov
mov
in
mov
loop
and
cwde
fisubr
sar
fcomip
mov
ret
lahf
es
jae
(bad)
fimul
xchg
pop
bound
neg
jns
jb
mov
iret
cmp
sub
mov
clc
mov
push
ret
ds
sub
retf
push
add
xchg
stos
(bad)
sbb
sub
(bad)
mov
adc
dec
aam
aaa
fadd
xchg
lahf
popf
bnd
enter
imul
sbb
scas
sbb
test
mov
in
cmp
jo
inc
inc
or
sub
xchg
repz
test
ss
add
hlt
sbb
and
push
pop
or
rcl
js
test
(bad)
sub
call
ret
adc
mov
aaa
repz
mov
ret
mov
add
jg
pop
pusha
cdq
sbb
sbb
(bad)
push
xchg
adc
sbb
xchg
sub
jmp
xor
adc
ins
out
add
(bad)
mov
movs
cmps
sbb
cmp
ins
push
xor
jecxz
push
xor
pop
inc
aam
xchg
fwait
and
pop
mov
add
pop
imul
popa
fcomp
loope
adc
out
retf
icebp
adc
cld
jnp
clc
push
push
popf
jge
add
dec
jle
adc
xor
popf
pop
popa
inc
xor
and
arpl
in
daa
addr16
enter
je
add
xor
adc
jmp
sub
cld
cmp
mov
pop
sar
jecxz
pop
xor
push
pop
movs
cmc
in
jmp
je
out
jns
cmp
add
test
jle
dec
jne
sbb
sub
enter
fsub
and
mov
push
retf
in
loop
sbb
inc
push
cmp
fs
in
push
adc
xor
fst
das
outs
loop
ror
rcl
add
mov
cmp
out
xchg
mov
scas
push
mov
out
fstp
addr16
test
xchg
mov
pop
mov
ja
inc
lods
pop
cmps
int
push
or
pop
adc
call
rcl
inc
fdiv
jmp
les
bound
push
mov
push
add
add
das
fadd
pop
cmp
add
or
adc
call
push
das
fsubr
or
shr
mov
sbb
in
js
fmul
aaa
jmp
ss
dec
lea
mov
push
sbb
movs
dec
into
push
dec
mov
pop
jmp
dec
sbb
xchg
xlat
pushf
pop
jmp
mov
arpl
es
pushf
out
imul
inc
gs
adc
in
lock
out
mov
mov
xchg
or
pop
inc
adc
dec
pop
std
sbb
xor
push
sbb
inc
inc
test
cmps
imul
lock
sub
add
xlat
cmp
and
call
adc
push
cld
stc
je
mov
scas
fs
shl
add
jp
call
imul
stos
push
inc
xchg
and
inc
cmp
and
es
ret
mov
clc
xchg
mov
pusha
enter
xor
pop
rcr
xor
or
stos
add
pop
pop
clc
lods
test
sbb
loope
xchg
lahf
add
mov
xor
call
leave
pop
ret
pop
adc
jno
jbe
lds
pop
mov
dec
cmp
std
dec
je
or
sbb
push
outs
loopne
add
enter
loope
jmp
hlt
jmp
push
xor
xlat
and
sub
(bad)
dec
dec
jmp
mov
mul
ret
daa
mov
lahf
adc
push
cmp
or
or
loope
adc
fs
push
adc
sbb
in
sbb
mov
ror
xchg
test
sub
jmp
push
mov
cmp
out
call
into
in
pop
cmp
repz
push
out
xchg
add
lods
pop
lds
cmc
inc
push
in
push
sbb
pushf
lock
stos
inc
xor
sbb
xchg
lock
mov
sub
adc
mov
std
lods
aas
or
stos
mov
push
test
test
fld
cld
mov
jmp
inc
fnstenv
(bad)
mov
mov
jmp
or
or
add
mov
pop
mov
outs
inc
pop
jl
xor
pop
les
in
ins
pushf
xor
cwde
test
xchg
inc
mov
jmp
jecxz
xor
mov
or
xor
pushw
push
rcr
xor
pop
mov
push
dec
adc
arpl
ja
pop
mov
xchg
dec
xor
and
add
js
push
sbb
sbb
clc
cmps
jle
lahf
inc
sub
cmp
jle
cmps
xchg
fld
pop
inc
add
add
adc
push
das
sub
pop
adc
inc
je
push
lock
das
aam
pop
and
jl
xchg
dec
and
push
inc
sbb
cmp
sbb
fdivr
call
pop
pusha
sub
adc
ret
int3
jmp
push
adc
adc
test
daa
adc
mov
popa
xlat
and
cmp
rol
sub
test
add
push
xchg
push
xchg
push
sbb
inc
ss
es
sbb
and
sbb
jl
inc
or
and
in
push
(bad)
das
adc
or
and
jbe
test
enter
sbb
xor
cmp
pusha
add
jb
push
push
jl
sbb
dec
ss
or
sbb
ins
adc
push
adc
jle
lea
movs
pop
inc
sbb
pop
sub
call
dec
jb
cs
sbb
xchg
dec
fcomp
leave
loopne
and
daa
push
push
inc
dec
push
push
dec
inc
pop
stc
jb
and
add
mov
in
cmps
nop
loopne
inc
in
xchg
or
movs
mov
push
mov
cmp
add
push
aam
xor
fdivr
cmps
retf
cs
fmul
xchg
pop
mov
cmc
adc
imul
outs
or
mov
add
in
call
mov
gs
pop
les
xchg
es
clc
aam
sbb
fcomp
cmp
sbb
and
push
ss
sub
add
and
xor
scas
fmul
sub
and
jle
adc
xor
inc
mov
add
adc
ins
out
scas
imul
ja
sub
dec
jo
and
pop
rol
pop
clc
cmp
jl
adc
fnstcw
in
sub
pop
ss
inc
mov
adc
inc
std
mov
call
push
push
inc
push
xchg
aam
loop
dec
dec
add
add
and
repnz
jge
mov
rol
sub
pop
idiv
inc
cmovo
xor
sub
fnsave
mov
cmp
cmp
sbb
cmp
cmp
or
pushf
sbb
cmp
aaa
cld
clc
pushf
inc
pushf
pushf
hlt
lock
repz
push
xchg
add
cs
in
repz
mov
pshufw
pushf
pushf
pushf
pushf
je
jbe
pushf
pushf
pushf
pushf
js
jp
pushf
pushf
pushf
pushf
jl
jle
pushf
pushf
pushf
pushf
pusha
popa
bound
pushf
pushf
pushf
fs
pushf
pushf
pushf
push
pushf
pushf
pushf
ins
ins
outs
outs
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
xchg
sbb
inc
lahf
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
ss
cmp
xchg
xchg
xchg
xchg
cmp
cmp
and
idiv
jg
loop
mov
test
push
add
push
dec
pop
sub
ins
outs
sbb
(bad)
cs
add
pop
div
xor
cmp
test
in
pusha
jl
xchg
sub
inc
outs
adc
dec
(bad)
outs
je
imul
jo
imul
pop
add
xor
out
dec
and
nop
xchg
arpl
retf
or
cmps
pop
add
lock
mov
gs
sub
pushf
push
sbb
bnd
ins
add
enter
fwait
mov
dec
je
arpl
adc
loope
arpl
outs
gs
sbb
call
ret
cmps
inc
sahf
in
push
or
xchg
dec
imul
mov
add
or
push
jge
push
jo
outs
sbb
push
inc
popa
jae
add
or
je
sbb
or
push
xchg
mov
mov
mov
adc
adc
or
setg
cdq
int
ins
inc
ins
test
push
imul
je
push
inc
jns
mov
adc
nop
and
xchg
adc
imul
adc
mov
jbe
xor
(bad)
adc
push
aas
mov
loopne
ret
mov
adc
cdq
push
ror
add
jne
dec
pop
in
ret
inc
jle
and
bound
add
dec
pop
stos
cmp
jp
or
push
fidiv
outs
int
adc
cs
inc
imul
mov
jae
es
shr
lahf
cli
adc
mov
les
clc
push
add
call
movs
pusha
xor
jle
(bad)
cmp
hlt
andps
xchg
cdq
sbb
mov
adc
sbb
and
cli
inc
es
xchg
cmp
(bad)
pop
cmps
and
mov
cmps
inc
xchg
ins
or
and
cli
rcr
push
lock
and
mov
sar
test
cli
cmp
pop
retf
sub
icebp
iret
pop
adc
ss
adc
mov
push
and
fist
lods
push
mov
pop
pop
neg
test
inc
in
sbb
jmp
cmp
adc
fs
ins
aas
push
push
dec
gs
mov
lods
pop
mov
add
cwde
gs
int3
loopne
or
ja
jmp
push
or
inc
jge
in
jns
aaa
push
imul
rcl
cld
and
stos
dec
call
push
and
pusha
js
sbb
pop
and
add
mov
int
xchg
cmp
add
sbb
push
jo
add
pop
das
push
cmp
xchg
add
iret
add
sub
push
dec
jge
xchg
ds
repz
jl
add
enter
je
addr16
(bad)
std
xchg
pop
and
dec
sbb
call
sbb
push
cmp
xlat
out
leave
and
add
add
dec
push
lods
ror
inc
dec
add
test
ins
je
push
adc
inc
pop
and
sub
sbb
add
inc
push
and
pop
and
mov
jae
pop
sbb
sub
and
ja
rcr
and
pusha
sub
jae
aas
push
call
sub
lods
cli
in
or
xor
shr
test
push
adc
push
adc
into
neg
push
sbb
inc
adc
xchg
ret
sbb
push
add
(bad)
jns
retf
and
test
push
in
cld
out
sahf
out
(bad)
mov
es
sbb
mov
add
inc
int
arpl
out
test
push
out
(bad)
cmp
call
dec
fnsetpm(287
add
push
aaa
(bad)
std
ficomp
adc
or
cmp
dec
fsubrp
in
push
int3
pop
cmp
push
mov
mov
mov
shl
pop
pop
js
rcr
cmp
mov
add
mov
dec
fisttp
lahf
add
ja
mov
jns
and
mov
push
aas
dec
leave
prefetcht2
add
add
sbb
push
push
xchg
sbb
mov
add
cmps
ds
add
xor
inc
inc
hlt
jle
dec
xor
xor
mov
push
cwde
sahf
cs
imul
pop
and
das
ins
adc
mov
dec
mov
pop
std
mov
cmp
fnsetpm(287
xor
std
(bad)
xchg
lods
mov
es
and
pop
add
sub
or
mov
(bad)
jg
inc
mov
or
pop
and
loope
popa
addr16
mov
mov
inc
sub
push
add
ret
mov
mov
xor
repnz
add
add
hlt
cmp
repnz
push
dec
and
rcr
push
dec
pop
dec
push
push
ficom
push
pop
push
push
dec
mov
ds
in
dec
rol
mov
jg
mov
ret
not
and
cmp
inc
les
add
inc
add
je
mov
pop
ret
mov
ins
mov
dec
add
pop
mov
xchg
cmp
mov
xchg
fsub
push
imul
jg
dec
jo
push
js
lock
aas
shl
add
jle
sbb
jns
pop
or
push
outs
cld
jge
js
cs
imul
xchg
jbe
pop
sbb
sbb
nop
daa
sbb
add
sbb
fdivr
or
outs
outs
pop
call
push
xor
xchg
cmp
pop
jle
jle
mov
add
inc
push
jo
jl
jb
add
add
jle
(bad)
out
shl
and
push
fs
test
js
ja
fadd
sbb
imul
add
fdiv
sub
fstp
push
push
push
and
es
dec
mov
and
ret
pop
fadd
jmp
rol
neg
loop
dec
and
xlat
jae
pop
fadd
daa
pop
pop
mov
jno
mov
pop
adc
fs
fdiv
pop
enter
dec
inc
or
fisubr
add
inc
ret
and
jmp
adc
ins
fsub
int3
fisubr
pop
inc
cmp
xor
lods
jnp
inc
lea
push
pusha
fild
or
xchg
sub
loopne
je
movs
ret
push
dec
lock
adc
add
dec
ret
push
or
lock
sbb
add
add
sbb
aas
inc
and
mov
pop
add
pop
and
lock
icebp
jo
xchg
cmps
test
prefetcht2
xchg
cmp
lock
push
sub
test
sub
mov
ret
aad
lods
push
pop
popa
cmp
mov
icebp
outs
punpckldq
jae
inc
aaa
lock
fimul
sar
je
and
sbb
mov
xlat
cmp
aam
mov
inc
rcl
inc
add
jmp
or
sbb
inc
xor
or
push
jle
aad
xor
xchg
push
or
sbb
stos
(bad)
(bad)
or
inc
sbb
pop
repnz
and
dec
(bad)
adc
or
mov
inc
mov
loopne
adc
out
xchg
aaa
nop
dec
lea
xor
ins
add
jmp
mov
frstor
mov
iret
lods
ror
and
xor
mov
jg
mov
sub
push
movs
sub
or
add
rcl
push
cmps
adc
dec
and
aam
push
jp
xlat
arpl
repz
push
daa
arpl
jb
outs
outs
inc
jg
adc
cld
outs
pop
dec
ins
imul
push
xchg
jbe
add
xor
xor
gs
ins
pop
jg
add
ss
imul
jb
cmps
fs
call
pop
gs
ins
outs
ja
fild
or
clc
cmp
imul
mov
pop
pop
or
adc
data16
add
push
imul
dec
and
dec
data16
icebp
or
mov
das
cmovae
cmp
jo
push
pop
imul
or
pushf
push
je
test
idiv
inc
je
inc
push
xchg
dec
add
sbb
cld
ins
add
or
ret
fiadd
je
sub
fdiv
add
push
jmp
pop
inc
add
push
xchg
imul
sbb
nop
cmp
push
mov
or
or
fst
daa
and
and
pop
sub
jg
ffreep
xor
repz
adc
jecxz
fadd
or
daa
mov
sbb
jg
pop
inc
icebp
(bad)
lock
jne
pop
xchg
and
adc
bswap
or
lahf
dec
cs
(bad)
cdq
sbb
push
arpl
add
pop
xor
shr
lods
pusha
cmp
aad
or
xchg
das
or
add
inc
or
test
call
mov
push
mov
js
gs
out
pop
or
push
dec
xchg
test
pop
jbe
rcl
pop
psllq
call
pop
ret
adc
dec
pop
inc
dec
inc
push
push
inc
pop
ja
inc
inc
mov
mov
ficomp
push
pop
dec
inc
dec
dec
arpl
inc
inc
pusha
jg
pusha
push
adc
inc
push
dec
dec
push
mov
and
inc
shl
xacquire
popa
out
inc
inc
xor
xor
div
inc
dec
inc
and
inc
xor
pop
inc
inc
dec
mov
push
pop
mov
stc
push
dec
dec
push
dec
dec
mov
(bad)
lahf
pop
imul
sbb
mov
dec
push
inc
(bad)
cs
push
push
push
push
dec
inc
dec
addr16
push
dec
pop
adc
js
inc
inc
push
push
push
dec
push
inc
scas
dec
inc
dec
pop
xchg
pop
punpckhdq
push
push
add
lahf
sbb
push
out
mov
loope
mov
mov
jo
add
mov
push
adc
test
jl
movs
sbb
jo
add
dec
or
sbb
add
add
inc
sahf
xchg
adc
xor
inc
or
sbb
and
cmp
inc
ss
or
sbb
push
sub
adc
jle
or
add
add
mov
sbb
xor
dec
pusha
ja
mov
jne
or
and
fdiv
sub
loopne
sbb
cmp
adc
stos
(bad)
push
push
aam
aas
push
lock
and
xlat
data16
loope
jmp
push
or
sar
lock
add
in
xor
add
add
das
jo
dec
pop
adc
dec
sahf
arpl
push
sbb
add
mov
push
add
adc
stos
sbb
mov
imul
arpl
loope
mov
scas
pop
xchg
sbb
das
cmp
jo
mov
cwde
add
add
cmps
pushf
das
and
retf
jae
inc
xor
popa
sub
push
cmp
dec
or
pusha
cmp
sbb
mov
pop
or
push
pop
cmp
test
mov
push
ret
jns
stc
dec
out
movs
pop
xchg
or
add
mov
test
ss
xchg
stos
rol
jmp
adc
xor
fiadd
sbb
or
mov
clc
mov
mov
add
push
xor
sbb
push
cmp
(bad)
pop
and
loope
pop
jmp
ds
pop
shl
xor
mov
jnp
loop
push
fcomp
add
js
push
push
pushf
fstp
inc
fild
or
jmp
inc
popf
push
inc
xor
popa
ins
and
sti
adc
aaa
pop
out
jmp
sbb
stos
test
test
dec
les
repz
aam
mov
mov
clc
adc
cmp
inc
adc
xor
les
add
nop
push
inc
sbb
pop
jg
cmps
xor
sbb
add
mov
and
lea
push
mov
(bad)
jbe
or
(bad)
sbb
inc
fisttp
dec
xor
neg
ins
jp
inc
push
xor
push
das
fdivp
fidivr
clc
sbb
push
sbb
xchg
rcr
out
(bad)
mov
cmp
and
xor
inc
sbb
sbb
sti
xchg
pop
inc
ret
mov
leave
add
sahf
or
push
nop
sub
inc
sbb
pusha
and
xchg
inc
push
adc
sti
lock
cmp
loopne
xchg
sub
enter
rcl
stc
les
lods
mov
sar
pop
inc
push
leave
test
sbb
rcl
pop
cld
jmp
adc
push
dec
xchg
push
es
add
jne
fistp
sub
inc
cmp
sbb
mov
and
fcomp
push
mov
add
jp
mov
in
test
mov
dec
inc
or
or
not
push
mov
sbb
sbb
pop
cld
or
movntps
sbb
sub
inc
sub
inc
inc
(bad)
sub
cmp
adc
je
xchg
mov
enter
sbb
xchg
mov
outs
push
push
sbb
or
sub
lsl
sbb
push
out
mov
fisttp
inc
ds
xchg
inc
inc
cdq
pop
mov
loope
push
mov
(bad)
cdq
mov
xlat
lock
add
mov
inc
push
sbb
loopne
and
enter
inc
jbe
xlat
add
in
ins
das
cmp
xchg
mov
dec
or
pusha
aaa
cmp
add
or
in
mov
jmp
je
push
jp
adc
adc
shr
add
pop
call
push
dec
in
pop
sub
shl
xor
adc
and
xor
cmp
(bad)
nop
xchg
mov
mov
xchg
fs
cmp
add
lods
mov
sbb
ins
add
pop
inc
jno
sub
add
push
fcom
dec
gs
jl
sbb
pushf
mov
dec
(bad)
sbb
xchg
bound
xlat
xor
call
push
add
rcr
jmp
ret
loop
clc
(bad)
out
lea
mov
jo
dec
fst
aaa
jge
xor
icebp
pop
jmp
outs
add
inc
mov
sbb
push
mov
mov
push
mov
sub
or
data16
(bad)
pop
or
or
xor
out
out
push
push
or
push
push
test
sbb
mov
xor
or
jns
sbb
push
or
rol
push
in
mul
xor
dec
push
add
cmp
sbb
mov
mov
sbb
pop
rol
mov
adc
and
mov
push
sbb
push
adc
xchg
or
dec
inc
adc
aad
cmp
outs
dec
enter
push
push
in
test
fistp
sbb
ins
pop
ins
repz
pop
xor
outs
or
mov
inc
sbb
repnz
mov
push
mov
cmps
add
and
inc
sbb
and
mov
or
mov
and
ja
sbb
or
add
push
inc
ficom
and
lahf
cmp
cs
cmp
xchg
pop
repnz
aaa
ss
adc
cmp
xchg
adc
mov
cld
push
adc
leave
shl
pop
fwait
add
adc
jae
dec
sub
ret
aas
in
ins
inc
sbb
pop
dec
sar
add
neg
ret
(bad)
nop
fst
adc
push
push
xchg
and
int3
pushf
test
xchg
push
nop
mov
and
daa
add
or
cmp
and
shl
sbb
push
cmps
pop
and
xchg
adc
jge
mov
aaa
cdq
fdivr
data16
or
retf
pop
inc
jae
pop
cli
dec
and
mov
cmp
je
ficomp
mov
pop
call
mov
in
jne
add
add
sbb
inc
shr
cmp
es
clc
test
mov
pop
fistp
xor
add
int
(bad)
loopne
or
and
or
loopne
sbb
hlt
scas
out
mov
mov
not
and
cli
and
cmp
je
dec
and
pusha
cmp
inc
jbe
jle
psubb
inc
aam
cmp
outs
jo
push
add
and
and
outs
lods
nop
fs
into
mov
jl
xor
push
xor
add
sub
test
adc
sahf
adc
adc
sbb
add
call
cmp
jnp
sbb
or
rol
cmp
adc
imul
cmc
sbb
test
sbb
adc
out
add
stos
in
sti
jno
or
rol
sub
or
xchg
pushf
ja
shr
xchg
outs
daa
add
and
ret
nop
les
jo
repnz
(bad)
push
add
inc
js
cmp
popa
cs
ins
fnsave
rcr
es
lods
dec
adc
jae
mov
xchg
imul
inc
sahf
and
adc
lea
jo
cmc
test
sub
fld
aaa
or
mov
push
sub
inc
scas
push
out
add
ret
ds
ss
js
inc
mov
dec
sbb
call
inc
jp
daa
int3
push
push
push
adc
jae
add
add
hlt
bound
cld
test
inc
cmc
retf
(bad)
aaa
cmp
imul
inc
dec
pop
mov
sbb
cld
mov
mov
call
mov
sbb
in
push
shl
aam
jle
push
out
pop
jnp
push
jno
std
je
xchg
pusha
in
pop
sbb
push
pop
daa
jno
pop
xchg
cmp
push
psadbw
add
and
add
push
fidiv
add
enter
fsub
div
shl
and
add
sub
test
push
and
(bad)
jo
push
inc
pop
out
ror
jg
mov
jno
xchg
jbe
pop
sub
test
sub
add
push
pushf
mov
sbb
sub
inc
dec
jmp
add
shl
or
sub
sbb
push
and
or
sub
rcr
add
fadd
xchg
adc
sbb
xor
jge
mov
dec
imul
and
cmps
sbb
and
jbe
sbb
jmp
lock
in
mov
es
pop
mov
dec
add
sbb
lock
imul
sahf
sub
mov
lds
loopne
mov
mov
lods
mov
enter
out
adc
push
leave
dec
sbb
inc
add
and
dec
cmp
punpckhdq
adc
add
adc
(bad)
mov
mov
push
mov
mov
or
loopne
adc
mov
mov
add
add
mov
mov
pop
popa
ins
arpl
sub
and
aas
dec
(bad)
es
test
xor
shl
lea
lea
mov
pop
pop
stc
gs
push
add
jne
stos
cmp
shr
jge
adc
adc
adc
sbb
fiadd
push
aad
push
inc
jmp
adc
aam
lds
mov
xchg
and
push
push
inc
and
ins
mov
enter
adc
dec
jns
jmp
fsub
jp
test
shl
mov
mov
jmp
ret
sti
mov
jns
cli
adc
add
mov
out
pusha
jmp
dec
push
jno
in
mov
jl
fcomp
jnp
(bad)
inc
cwde
or
cld
rol
or
in
add
ds
ds
out
int
xchg
mov
lea
xor
push
dec
jnp
and
daa
jmp
fcomp
xchg
xchg
out
or
jo
xor
iret
fisttp
js
jl
cmps
sahf
mov
pop
mov
les
clc
mov
sub
add
and
das
cs
jne
jne
aaa
or
add
ror
icebp
xchg
inc
pop
xchg
xor
push
test
cld
sbb
dec
add
mov
push
push
dec
pop
ror
clc
dec
xor
fld
fcmovu
out
aas
and
ret
arpl
push
and
popa
jmp
out
movups
xor
sub
xchg
mov
cmp
in
sub
xor
movs
cmps
push
sub
add
dec
sbb
mov
clc
push
sub
push
push
sub
push
mov
or
and
out
fld
lock
outs
or
inc
call
mov
xlat
jnp
pop
dec
in
shr
icebp
push
push
dec
and
push
add
cwde
sbb
retf
sub
js
cmp
and
das
mov
jge
add
inc
pop
and
jg
in
add
add
(bad)
aaa
adc
jb
pop
hlt
cmp
cs
adc
push
sar
add
push
imul
out
popa
add
pop
and
or
push
pushf
stos
shr
outs
lods
and
adc
rcr
push
and
mov
pop
cld
push
push
das
adc
xchg
and
jae
xchg
or
imul
mov
or
test
out
or
pop
add
test
pop
or
pop
test
cwde
movzx
sbb
sub
add
rol
adc
data16
das
loop
test
jle
cmp
jl
aaa
pusha
loopne
imul
or
cmp
jle
and
dec
pop
out
loope
and
mov
or
pop
lods
leave
cmp
jae
inc
xor
push
sub
cmps
dec
gs
pop
jp
add
loopne
sbb
jg
mov
ins
sub
lods
inc
mov
mov
push
pop
push
add
fdiv
popf
nop
fdiv
xor
(bad)
fld
movs
xchg
sbb
scas
mov
xor
or
in
xchg
push
push
fsubr
cmp
sub
mov
sub
jo
xchg
loopne
or
loopne
test
ds
movs
add
ds
ret
loope
in
push
push
jg
or
jl
push
cmp
cdq
mov
dec
mov
int3
push
mov
jmp
dec
jne
cmp
or
add
xor
xchg
xor
cli
(bad)
pushf
call
ss
repnz
inc
adc
shr
adc
adc
sbb
inc
test
popf
push
and
sub
out
inc
nop
mov
or
pushf
nop
pop
cwde
enter
ret
inc
mov
ins
mov
push
mov
jmp
mov
inc
xor
in
rol
jge
cmp
add
push
fdecstp
pop
sahf
mov
push
mov
xchg
movs
aas
movs
mov
push
mov
sbb
or
add
push
loope
test
dec
xor
cmp
or
push
rcl
add
push
sub
inc
aam
xchg
sbb
adc
add
rcl
sbb
lods
xor
test
ret
lock
cmps
mov
das
sbb
rcr
mov
(bad)
call
test
sbb
sub
sti
lea
cmp
jmp
and
dec
and
sub
jge
jnp
add
adc
je
cmovs
and
cmps
mov
jle
ds
jmp
ja
adc
jmp
je
add
adc
nop
mov
and
sub
or
sbb
inc
and
jae
lods
push
daa
and
imul
add
imul
fcom
adc
push
add
push
aaa
icebp
in
push
add
imul
add
or
sbb
push
pop
sub
icebp
and
jo
and
ret
fdiv
(bad)
adc
push
add
mov
add
xlat
hlt
mov
popa
add
test
fild
inc
xchg
data16
cmp
xchg
mov
cs
pop
pushf
aad
or
fimul
sbb
xchg
cmp
cmp
aam
jmp
(bad)
out
jg
jecxz
inc
fbstp
movs
pop
and
(bad)
fsubp
loop
pop
(bad)
out
sbb
mov
es
mov
or
daa
inc
sub
jle
in
xchg
imul
enter
push
in
push
aam
xor
int3
iret
cmp
adc
loopne
sub
sub
push
call
xor
in
loopne
pop
cmps
fidivr
fsubr
dec
dec
mov
fucom
mov
int3
dec
mov
test
in
test
and
mov
mov
out
pop
in
aad
inc
fmul
fcmove
xchg
in
xor
mov
xor
cmps
std
mov
mov
or
lods
data16
or
push
ins
mov
lods
cmps
mov
outs
sub
lods
mov
or
js
add
ins
sti
gs
dec
hlt
test
test
xchg
adc
push
cmc
inc
adc
aaa
pop
hlt
loopne
out
push
fcom
nop
scas
lock
add
add
mov
shr
mov
scas
inc
pusha
xor
adc
adc
xchg
pop
imul
pop
xchg
aaa
pop
mov
sub
mov
in
cmp
xor
inc
jae
or
(bad)
sub
mov
xor
nop
scas
mov
ds
fdiv
push
adc
mov
aaa
fadd
cmp
cmp
dec
addr16
fs
sbb
mov
adc
add
add
icebp
cmp
ja
xchg
or
je
sub
ds
pop
or
gs
fisubr
mov
nop
jo
outs
clc
sbb
xchg
mov
call
arpl
or
pop
or
pop
jne
cmp
sub
pop
xor
lods
sub
shl
cmp
repz
out
mov
ret
inc
pop
fwait
nop
daa
add
sbb
pop
add
inc
xor
mov
test
adc
xchg
imul
sub
pop
ret
daa
and
push
xor
pop
test
push
xor
hlt
cmp
ror
arpl
aam
mov
outs
jb
retf
mov
invd
mov
cmp
or
cmp
add
sub
test
adc
cmps
jbe
mov
shr
loope
mov
add
outs
pop
mov
mov
cmp
clc
sbb
retf
sbb
test
repnz
adc
nop
jb
jns
add
lock
pop
add
add
push
push
mov
add
popw
jge
xchg
sbb
imul
xlat
or
add
push
das
sbb
cmp
adc
inc
dec
jne
sub
add
add
mov
fwait
pushf
push
loope
ja
or
fiadd
jne
push
rol
sbb
push
inc
in
add
or
mov
add
movs
fwait
(bad)
and
pop
shl
cmc
add
xor
push
cmps
mov
(bad)
movs
clc
clc
fcmovb
add
out
mov
jne
pop
dec
sbb
add
jo
cmp
daa
ds
stos
rcl
add
lock
jo
outs
rcl
lods
add
xor
sbb
imul
sbb
sbb
popa
and
add
add
shl
and
add
out
push
pop
cs
jmp
lds
(bad)
or
add
sub
rcr
cmp
or
sub
in
xchg
ret
dec
cmp
daa
mov
or
loopne
adc
ins
lods
mov
outs
dec
and
mov
mov
cwde
sbb
jecxz
lea
movs
aas
push
test
loop
xchg
or
pop
adc
dec
adc
dec
aas
cmps
inc
xor
pop
je
call
push
dec
and
ins
(bad)
dec
inc
jl
push
mov
sbb
inc
or
inc
je
(bad)
les
xchg
sbb
xor
dec
and
add
mov
ret
inc
mov
sub
fild
and
outs
sub
or
mov
push
pop
mov
pop
mov
das
sbb
es
sbb
sbb
sbb
pop
adc
cmp
je
int
push
push
xor
pop
pop
mov
add
in
xlat
lods
xchg
popa
dec
inc
push
or
mov
sub
xchg
arpl
jnp
mov
aaa
or
int
loope
sub
or
dec
js
inc
and
mov
or
js
pop
call
pop
ror
lahf
sbb
and
retf
pushf
data16
mov
test
sub
mov
adc
ss
dec
mov
rcl
jecxz
adc
push
outs
add
jecxz
jl
push
inc
in
mov
test
push
sbb
dec
rol
adc
xor
xor
or
cmp
jle
mov
icebp
popa
or
pop
pop
cs
div
inc
mov
arpl
push
(bad)
fst
ret
or
outs
test
movnti
jns
daa
or
shl
inc
add
arpl
shl
push
mov
scas
or
not
mov
mov
sbb
(bad)
add
adc
shr
test
mov
pop
mov
xchg
lods
outs
mov
inc
rcl
fdiv
jo
leave
retf
inc
xor
and
cli
dec
or
and
sub
bound
fiadd
lds
sub
pushf
pop
mov
xor
jg
movs
add
daa
fisttp
inc
fadd
or
dec
stos
sbb
sub
in
add
add
jecxz
mov
and
add
and
mov
adc
jp
clc
mov
rol
fild
xchg
jne
repnz
xor
sub
lea
enter
pop
push
sbb
neg
push
jge
imul
push
paddsb
aas
push
adc
aaa
push
xor
push
adc
fbstp
cli
(bad)
lea
cdq
nop
imul
and
push
fmul
cmp
and
push
and
add
fistp
leave
push
push
fcmovb
mov
jg
ret
aaa
xchg
pop
adc
inc
push
or
add
adc
or
pop
jmp
ins
scas
stos
sub
arpl
nop
inc
cli
es
pop
and
pusha
jnp
adc
pop
aad
movs
mov
cwde
jl
mov
add
add
xchg
mov
and
je
lock
sbb
mov
aam
ror
adc
add
ins
inc
aaa
mov
inc
sub
push
and
and
push
xchg
or
pop
sub
nop
mov
scas
add
push
inc
sub
js
xchg
dec
mov
mov
mov
in
cld
sub
inc
sub
adc
mov
icebp
mov
xchg
data16
cmp
adc
es
movs
add
es
sbb
mov
sbb
sub
adc
sbb
pop
push
push
jecxz
call
sbb
fs
push
lea
xor
sahf
ins
stos
dec
adc
rcl
or
imul
arpl
push
sub
adc
xchg
xor
je
dec
xor
rcl
sbb
xchg
dec
sahf
pop
mov
out
outs
sti
dec
cmp
push
xor
xchg
ins
sub
mov
sub
ins
into
inc
addr16
and
mov
add
or
leave
add
inc
pop
lea
add
rcl
xchg
rcr
xchg
test
mov
pcmpeqw
add
lds
pop
sub
sbb
outs
add
add
push
stos
loope
fs
imul
sbb
clc
pop
dec
push
adc
adc
in
push
dec
sub
test
cwde
mov
or
loope
adc
arpl
adc
jne
pop
or
adc
lods
jl
je
cmp
ret
xchg
lahf
and
ss
sub
ja
xchg
inc
adc
xchg
mov
add
aas
sahf
retf
test
push
dec
or
or
inc
or
arpl
sbb
push
jnp
movs
jmp
sbb
fcomp
adc
fsin
aaa
dec
outs
and
xor
out
sub
jp
dec
lea
retf
sub
pop
add
push
jo
and
or
ret
jmp
int3
adc
or
lss
dec
push
fsub
sbb
cwde
push
mov
cdq
xchg
es
and
inc
sbb
jge
and
inc
je
inc
enter
push
aad
sub
stc
pop
jecxz
push
adc
enter
js
jmp
fs
out
cmp
mov
mov
push
cmp
sub
add
les
loopne
jmp
outs
mov
movs
dec
inc
mov
add
fidivr
mov
int
call
adc
mov
(bad)
sub
sub
sar
hlt
dec
out
mov
add
(bad)
and
push
mov
pop
jno
aam
push
adc
mov
push
xor
mov
sbb
push
inc
call
ret
inc
xchg
out
cmp
out
xchg
outs
ror
xchg
fmul
fimul
xor
mov
push
or
pop
pop
mov
xchg
or
mov
enter
xor
out
ficomp
push
popa
pusha
dec
xor
pop
arpl
ret
(bad)
add
test
sti
sub
jge
adc
sar
sbb
mov
mov
call
add
ret
jns
push
push
test
sub
and
stc
push
cmps
sub
imul
das
jo
js
cs
cmp
ins
dec
jl
jl
sub
push
mov
xchg
in
push
jecxz
out
sbb
xor
dec
pop
or
add
cs
nop
ins
shl
(bad)
fdivr
jp
or
and
push
sub
loopne
pop
push
dec
call
add
xor
lods
inc
adc
or
pop
rol
push
adc
pop
lds
xchg
jno
sbb
call
in
add
and
loope
cmp
adc
inc
call
loopne
fs
fbld
xchg
or
sbb
push
pop
jb
jns
adc
adc
jle
add
jmp
fs
xor
inc
add
pop
(bad)
jecxz
push
mov
or
movs
add
movs
or
sub
adc
lock
or
jle
dec
and
aad
test
lock
sub
jae
inc
cmp
adc
sbb
mov
adc
outs
or
movs
jbe
adc
push
(bad)
rcl
ins
daa
rol
cmps
dec
fs
xor
jle
jne
mov
inc
mov
or
pop
(bad)
or
push
adc
pop
cdq
adc
pop
mov
mov
push
pop
hlt
xor
in
mov
xchg
fmul
push
test
imul
mov
sbb
add
push
xlat
push
push
add
jmp
pusha
pop
es
inc
push
loop
inc
cs
js
cmp
dec
add
add
mov
ret
repnz
adc
adc
add
repnz
mov
push
not
or
inc
imul
sub
cmp
ss
scas
sbb
or
push
fidivr
adc
push
inc
in
xor
call
xchg
jns
dec
addr16
movs
adc
dec
popa
inc
xchg
jae
mov
sbb
rol
adc
mov
enter
repnz
and
lods
mov
cmp
aas
fmul
adc
js
push
test
adc
mov
retf
out
pop
push
pop
test
mov
cwde
xchg
pop
jb
sub
or
das
movs
push
cmp
aas
cmc
add
pop
fcomp
or
xor
into
mov
inc
add
pavgw
call
xor
jl
push
dec
test
pusha
inc
addr16
cmp
call
jnp
clc
xor
push
icebp
sub
loop
cmp
or
lods
bound
stos
dec
pop
sbb
and
call
add
xchg
inc
loop
pop
nop
call
jo
cmp
push
or
add
xchg
or
ficom
mov
adc
je
jmp
xchg
pop
jle
(bad)
fisttp
cli
sub
pop
sbb
xor
mov
cs
lods
mov
mov
not
sub
xor
fwait
pop
sub
sbb
loop
mov
pusha
adc
pop
repnz
or
inc
pop
shr
dec
pop
in
cmp
mov
jecxz
mov
test
js
pop
sbb
ins
mov
cmps
dec
jo
in
orps
push
adc
adc
pop
jmp
test
pop
dec
adc
int3
push
(bad)
lds
sti
cs
pop
pushf
pop
pop
in
scas
and
ins
jl
mov
ror
dec
push
loope
test
jne
lahf
adc
pop
xor
pop
push
sub
popa
daa
mov
push
push
adc
inc
cld
xchg
push
jl
inc
ins
xchg
mov
into
mov
cmp
je
mov
or
imul
or
or
ins
adc
imul
inc
inc
xor
jns
sti
mov
and
shl
or
sub
add
push
(bad)
sub
les
mov
leave
(bad)
sbb
mov
outs
in
das
pop
or
test
mov
and
or
pusha
dec
mov
inc
xlat
mov
not
add
add
lock
xor
enter
adc
mov
in
or
loopne
dec
pop
pop
pop
stc
jge
sbb
and
add
add
stos
nop
daa
outs
or
xlat
mov
push
adc
mov
je
adc
and
xor
and
inc
jne
aaa
enter
add
sbb
add
bound
inc
sbb
push
or
mov
add
leave
mov
stos
pop
xchg
xor
and
jecxz
out
jb
mov
sub
or
or
cwde
add
cmps
mov
out
or
push
add
fsubr
pop
mov
jae
mov
mov
ret
cmp
add
pop
mov
xor
inc
test
sub
mov
inc
es
or
in
xchg
rcr
jp
mov
out
mov
out
push
fmul
mov
sbb
ins
mov
in
repnz
and
lods
ss
(bad)
int3
sub
sbb
mov
push
xor
jo
lods
add
push
mov
inc
neg
sbb
lea
cmps
sub
cmp
pusha
stos
add
rol
push
in
nop
add
rol
pop
je
scas
fild
cli
ror
inc
cmp
and
and
out
xor
ins
call
loop
in
mov
pop
in
in
jmp
mov
jle
outs
cmp
je
mov
pop
daa
xor
push
adc
add
sbb
inc
mov
dec
loope
xchg
in
jne
popa
add
push
out
fstp
cmova
cmp
cmp
dec
dec
cmp
jne
mov
fisttp
test
or
je
stos
ds
bound
sub
cmc
push
lock
adc
pop
stos
and
bound
push
cmc
loop
xor
sbb
mov
imul
les
pop
pushf
imul
or
cmp
mov
push
mov
sub
xchg
push
and
push
inc
hlt
pusha
xor
pusha
pop
pushf
inc
bound
test
(bad)
shr
mov
jmp
push
xor
or
dec
repnz
imul
loopne
daa
fild
pusha
xchg
fcom
call
int3
or
ror
dec
and
mov
(bad)
pop
sbb
or
call
push
inc
xor
or
jmp
push
sbb
xor
push
jecxz
movs
push
rcr
gs
sbb
xor
lock
lods
lods
push
adc
mov
test
call
add
inc
push
nop
cdq
(bad)
iret
retf
ret
(bad)
cmc
enter
mov
inc
xor
push
mov
mov
add
xchg
imul
xor
push
sbb
pop
leave
(bad)
sub
push
cmp
out
nop
dec
in
rol
(bad)
rol
popa
lea
sub
test
gs
bswap
mov
mov
js
xchg
lods
loopne
ds
xchg
xchg
add
in
ds
mov
addr16
mov
xchg
lock
fs
hlt
sub
movs
cmp
inc
add
mov
test
or
stos
test
inc
pop
pusha
sub
adc
call
mov
(bad)
fld
lock
push
fwait
mov
cmps
lock
dec
mov
ins
imul
jge
icebp
and
fs
imul
in
ror
gs
icebp
and
(bad)
retf
ins
xor
shl
test
test
push
xor
pop
add
jne
ret
add
call
add
fimul
adc
inc
add
lds
xchg
iret
test
adc
or
sub
mov
sbb
dec
xchg
dec
repz
int
inc
fisttp
or
out
inc
and
(bad)
shl
and
xor
cmp
ins
test
push
dec
mov
fwait
push
or
sbb
es
outs
sbb
data16
or
das
dec
imul
fnsave
lods
and
sub
dec
pop
movs
mov
aad
das
movs
aas
pop
or
push
mov
jmp
inc
cs
jb
addr16
xor
mov
mov
xchg
sbb
les
sub
or
cmps
or
mov
inc
lods
loopne
add
ret
test
out
es
xor
loopne
ret
or
or
inc
daa
dec
push
cmp
fisttp
shr
icebp
pop
pop
mov
leave
rcl
mov
(bad)
jp
mov
int3
adc
(bad)
or
add
pop
adc
rcr
push
adc
(bad)
retf
mov
push
push
test
mov
aam
cmps
pop
mov
push
ret
rol
imul
and
pop
mov
inc
popa
sbb
xchg
and
arpl
adc
sbb
mov
(bad)
movzx
push
dec
sub
scas
ror
add
sti
ficom
push
sbb
fmul
dec
pop
or
repz
dec
pop
fsubr
sbb
test
pop
popa
imul
fmul
push
jbe
imul
es
sub
pop
leave
pop
pop
mov
xchg
add
inc
(bad)
add
add
call
jmp
movs
sub
dec
inc
or
inc
leave
sub
inc
sbb
pop
and
add
mov
test
lods
push
out
add
or
inc
(bad)
and
inc
sbb
pushf
pop
mov
adc
sbb
xor
xor
jae
lds
pop
fst
jo
out
enter
loopne
push
cs
lock
sahf
dec
mov
inc
inc
push
jbe
jnp
xor
push
xor
xchg
inc
pop
test
inc
loopne
mov
and
(bad)
leave
dec
mov
lahf
and
fist
cmc
inc
imul
mov
or
or
mov
add
add
cwde
lock
pop
sub
add
hlt
jp
sub
xor
inc
xor
imul
fmul
mov
xor
iret
mov
in
push
mov
adc
pop
sbb
rol
adc
or
sbb
aaa
push
in
sub
das
shl
or
sbb
stos
inc
cwde
cs
pop
test
mov
mov
arpl
and
shl
in
gs
inc
das
sub
ja
dec
jecxz
or
pop
inc
pushf
sub
jb
jg
jl
add
pop
jb
jp
lds
adc
add
mov
(bad)
push
or
sbb
add
inc
imul
dec
or
and
mov
mov
jbe
fs
adc
push
ja
jae
mov
test
mov
mov
stos
popa
pop
cmps
pop
mov
iret
jne
imul
ins
int
aad
sbb
push
pop
adc
hlt
mov
dec
dec
mov
sbb
xor
jnp
inc
ins
dec
sub
aad
jmp
ja
mov
jno
stos
xor
xor
dec
push
lods
xchg
add
addr16
push
(bad)
and
push
xchg
call
xor
mov
sub
inc
xor
push
xor
inc
cmps
cmc
inc
and
sub
mov
sub
movs
adc
or
cmp
fmul
adc
mov
(bad)
and
mov
push
mov
sub
jmp
push
push
leave
adc
sbb
xchg
rol
loopne
icebp
push
sub
jmp
dec
mov
and
jnp
call
(bad)
push
cdq
adc
mov
or
jne
adc
add
pop
jecxz
dec
pop
push
fisttp
movs
push
mov
and
sub
retf
mov
jo
es
cs
and
adc
sbb
aas
bnd
cld
inc
ret
lea
(bad)
mov
lea
push
shr
outs
outs
cmps
cmp
and
jle
jo
es
lock
cmps
lea
frstor
push
je
adc
push
sub
dec
or
adc
lea
in
daa
ins
mov
clc
ja
bound
gs
sbb
cmp
in
dec
add
push
jo
and
mov
and
(bad)
je
loope
or
sub
push
mov
fsubr
adc
jmp
or
ffreep
fild
mov
loopne
loopne
or
push
xlat
fisubr
mov
or
jne
sbb
mov
dec
mov
or
mov
sbb
sbb
adc
iret
and
rcr
pushw
or
push
sub
imul
loopne
loopne
xchg
push
call
das
inc
aaa
inc
push
xchg
cmp
sub
je
rcr
daa
inc
cmp
inc
dec
clc
push
or
clc
or
and
aas
sub
push
pop
sbb
or
mov
push
outs
not
pop
and
xchg
ret
lds
mov
fisub
xchg
fld
push
dec
or
sub
add
inc
in
or
test
push
xor
jne
cmp
inc
push
cmp
fiadd
add
push
in
inc
jmp
ds
sub
scas
add
lds
clc
adc
mov
movzx
push
inc
adc
sub
mov
dec
xchg
xor
lock
in
popa
sub
pop
jbe
xchg
jno
js
mov
xor
sub
mov
je
cmp
call
shl
faddp
test
in
jno
mov
adc
adc
sub
sbb
jl
sub
jbe
mov
mov
and
hlt
mov
pop
nop
jmp
fwait
int3
std
movsx
or
(bad)
test
and
adc
mov
es
jge
in
xor
inc
sub
shl
je
call
add
je
cmp
adc
pusha
inc
in
aam
pop
cmp
ret
call
or
inc
ja
out
or
in
pop
jbe
adc
sbb
xor
pop
dec
and
xchg
add
push
and
pop
sub
mov
lea
pop
xchg
adc
cs
cwde
and
mov
and
ins
or
cwde
and
out
in
pop
call
fdiv
shl
sbb
xchg
push
or
dec
(bad)
mov
fs
je
loopne
push
mov
mov
mov
pop
adc
cs
sub
or
outs
mov
inc
fisub
sub
lahf
add
cmp
inc
mov
int
stos
jo
out
and
push
jle
test
push
adc
sbb
cmp
mov
fld
jbe
imul
xchg
nop
or
add
adc
lods
iret
or
xchg
cmp
mov
add
and
adc
or
xor
inc
add
js
(bad)
push
jmp
or
jo
mov
mov
cmp
jg
or
inc
add
and
in
jnp
(bad)
iret
sbb
xchg
loop
push
or
push
cwde
mov
adc
cmp
out
movups
push
jo
xchg
int
(bad)
fucom
mov
inc
cmps
jge
mov
push
jns
ja
or
jne
(bad)
nop
lea
xchg
inc
scas
or
test
jmp
inc
lock
loop
inc
adc
and
inc
inc
mov
adc
pop
popa
test
fidivr
ins
icebp
and
mov
repnz
(bad)
mov
push
and
xchg
push
or
ins
pop
jg
ror
lea
jp
push
add
ss
loope
jbe
rol
inc
add
adc
or
adc
sbb
inc
xlat
mov
mov
inc
mov
ret
arpl
in
adc
inc
pop
pop
arpl
jb
test
xchg
mov
retf
test
jns
mov
dec
popf
jmp
pop
enter
dec
mov
cmp
pop
pop
mov
shl
sub
(bad)
xchg
addr16
mov
xor
adc
sub
mov
mov
adc
and
in
popa
add
js
lds
ror
loopne
cmp
pop
ins
ins
loop
iret
fbld
popf
jmp
outs
sub
add
push
push
push
inc
rcr
and
sbb
cmp
sbb
mov
push
jmp
add
aaa
or
scas
call
jg
aam
sub
sub
iret
pop
or
mov
js
sub
inc
pop
fcomp
in
mov
imul
sbb
cmp
jae
inc
arpl
inc
in
jo
cmp
adc
or
sbb
push
adc
add
sub
or
rol
add
push
sbb
or
cmps
adc
mov
mov
lock
and
sbb
loopne
daa
and
or
mov
mov
and
sub
mov
jns
jbe
mov
push
popf
cmps
repz
mov
inc
push
loope
jle
mov
cld
cmps
test
or
cmp
or
jle
xor
test
je
push
ins
add
dec
jo
pushf
sub
xchg
fiadd
sub
inc
or
imul
rcr
adc
retf
mov
xchg
sub
ret
pusha
adc
add
lahf
xchg
inc
add
adc
sahf
pop
add
mov
shr
add
mov
pop
fwait
jle
sahf
inc
mov
test
cmps
shl
imul
mov
add
sbb
xchg
and
inc
sub
and
inc
int
out
rcr
push
mov
lds
inc
test
inc
and
leave
add
add
nop
pop
add
imul
rcl
pop
xor
sti
mov
mov
and
es
pusha
mov
sti
mov
sub
prefetch
or
mov
(bad)
pop
std
adc
add
inc
xor
ret
jge
in
mov
xlat
lods
dec
or
jg
pop
(bad)
aam
pop
inc
loope
cs
adc
lock
push
fidiv
popf
stos
arpl
add
xchg
movs
cmp
sub
or
mov
inc
clc
push
jmp
mov
sub
adc
gs
adc
mov
dec
and
call
add
test
xchg
or
xor
pushf
sub
sbb
add
inc
jge
pop
add
imul
cmp
dec
mov
pop
js
dec
mov
cmps
test
push
pop
add
xchg
adc
pop
sub
mov
push
push
cld
(bad)
and
(bad)
stos
pop
(bad)
loope
js
enter
push
shl
hlt
mov
push
test
push
mov
sbb
or
sub
add
ret
gs
cdq
sbb
adc
add
and
scas
dec
fdivr
add
push
xor
mov
or
sub
or
and
mov
sbb
push
cwde
xor
push
pusha
aas
daa
push
mov
(bad)
pop
push
mov
call
and
jg
hlt
mov
aaa
fadd
mov
jnp
sbb
push
loopne
out
xchg
cs
adc
and
jl
rol
and
(bad)
xor
fs
push
(bad)
push
std
mov
add
es
add
clc
pop
mov
in
add
sub
jne
mov
ja
push
ja
mov
ja
mov
pop
lock
sub
sbb
dec
jp
add
add
add
or
jo
or
int3
add
data16
push
mov
add
add
or
sbb
push
test
mov
adc
pop
or
adc
and
push
stos
loop
add
push
mov
mov
loopne
test
test
sub
pop
pop
test
fs
pop
cmovo
aam
push
icebp
add
fdiv
repnz
jecxz
fadd
mov
mov
push
cli
or
clc
div
xchg
push
sbb
sbb
psubsw
pop
push
scas
je
mov
sub
rcl
inc
push
push
lock
(bad)
or
or
inc
cmc
iret
fidiv
inc
ret
mov
stc
aad
push
inc
fsub
enter
retf
sbb
or
packuswb
ja
rol
(bad)
and
movs
loop
movd
xchg
test
ret
add
and
push
hlt
fld
sbb
mov
inc
add
mov
outs
inc
lea
add
sub
or
ret
xadd
pop
mov
ins
push
test
js
xlat
add
dec
fmul
test
aam
popf
adc
sbb
dec
neg
sub
adc
sub
fbstp
add
sub
mov
add
in
push
sbb
pusha
mov
cmp
inc
xchg
(bad)
retf
adc
jle
ror
sbb
and
push
mov
pop
mov
add
push
mov
jg
and
fisub
cmp
or
ds
or
js
fild
adc
or
and
mov
outs
or
lods
mov
jl
iret
test
fs
es
adc
ja
js
idiv
fild
nop
vmwrite
mov
mov
imul
aaa
sub
xor
js
adc
sub
mov
push
cmp
pause
mov
mov
(bad)
ins
je
js
pop
sbb
push
mov
or
push
inc
jb
stos
dec
in
gs
push
gs
test
aam
cmps
mov
add
pop
adc
outs
pop
pop
(bad)
fist
pop
popa
mov
mov
mov
inc
mov
push
js
das
mov
neg
or
out
dec
(bad)
lock
adc
jbe
aaa
movs
pop
add
jle
inc
cmp
mov
inc
inc
inc
inc
inc
dec
dec
push
inc
inc
inc
inc
push
pop
pop
pusha
inc
inc
inc
inc
fs
inc
inc
je
jl
inc
inc
inc
inc
test
inc
inc
xchg
cwde
pushf
mov
movs
test
mov
inc
inc
inc
mov
mov
inc
(bad)
enter
inc
inc
inc
aam
fsub
inc
inc
inc
inc
in
in
lock
add
mov
push
sbb
sub
mov
mov
je
(bad)
rcl
jp
pop
arpl
call
in
sub
xchg
fld
sub
or
ja
mov
inc
and
and
push
movs
xor
test
push
pop
push
pop
jl
adc
lods
push
sbb
aam
inc
sub
jo
je
stc
or
clc
js
and
add
push
push
test
add
nop
pusha
mov
gs
sub
test
mov
movs
xor
mov
adc
add
lods
cld
mov
adc
gs
mov
mov
cmp
dec
push
push
movs
xor
pop
les
retf
or
sub
push
nop
shl
aam
fdivr
fsub
cmp
in
or
sbb
cmp
sub
lock
hlt
stos
cmp
xchg
inc
push
adc
js
gs
fdiv
xchg
retf
push
sbb
inc
ins
outs
jae
fimul
push
(bad)
and
sbb
mov
sub
push
inc
ret
sub
in
sub
aas
push
popa
jb
out
imul
daa
test
pop
daa
push
inc
and
mov
cmp
pop
test
inc
xchg
gs
mov
inc
fcomp
adc
cmp
jno
jae
jnp
and
ins
inc
fs
lea
loope
cmp
ins
jns
mov
sbb
sbb
dec
mov
shr
pop
ja
sbb
loope
dec
call
sub
lock
sbb
imul
fdiv
pop
pop
adc
add
xor
(bad)
fisttp
ret
xor
add
mov
push
pusha
in
cmp
pop
sbb
lahf
jns
fiadd
or
daa
mov
mov
lods
das
fstp
mov
mov
in
pop
xchg
pop
sub
fistp
inc
das
ret
pop
repz
jo
cmp
fs
jg
adc
jns
add
je
addr16
arpl
das
pop
fs
jo
jo
inc
imul
xchg
cmp
sbb
sub
inc
outs
arpl
ror
push
mov
inc
hlt
xchg
pop
outs
push
clc
test
pop
repz
call
or
shl
int3
lods
cmp
aaa
loop
dec
xchg
hlt
cld
jne
xchg
push
les
sbb
daa
or
jbe
jns
add
int
xchg
mov
and
les
daa
jns
xchg
dec
sub
push
dec
cmps
or
outs
adc
sbb
inc
mov
sbb
cmp
sub
jns
and
out
mov
aas
daa
addr16
push
inc
loopne
mov
fwait
xor
pushf
lods
aas
and
xchg
fdiv
leave
leave
xchg
and
(bad)
in
in
cwde
call
in
or
loopne
cmp
cmp
mov
mov
iret
repz
test
iret
popf
movs
lods
dec
push
pop
jne
clc
cmp
inc
add
adc
pop
ins
cs
aaa
arpl
and
xchg
mov
das
sbb
xchg
(bad)
and
adc
add
daa
mov
cmp
push
push
inc
imul
div
add
push
leave
add
aam
adc
or
in
rol
(bad)
call
call
dec
and
and
inc
sbb
clc
iret
mov
cld
mov
mov
dec
movs
sbb
sub
mov
int
in
push
or
sbb
jne
pop
lea
xchg
call
add
push
add
or
or
dec
inc
add
icebp
pusha
retf
pop
xchg
test
cwde
(bad)
lds
and
arpl
cmc
hlt
ss
xor
sar
mov
fwait
call
xchg
inc
push
xchg
push
lods
cmp
sti
mov
sub
mov
ja
dec
es
in
test
cdq
(bad)
and
clc
das
mov
inc
adc
pop
sbb
outs
in
inc
loopne
popa
xor
pop
sbb
sbb
mov
in
ins
xlat
bound
inc
or
mov
inc
xchg
imul
dec
call
int3
add
inc
fimul
pop
ror
sahf
in
in
pop
mov
cmp
call
popa
dec
clc
add
repz
cmp
xor
adc
add
add
add
clc
clc
mov
add
call
or
addr16
call
aaa
cmps
inc
sub
sub
and
sub
push
pop
push
(bad)
outs
sbb
cmp
sub
sub
and
xor
pop
fdiv
sub
mov
icebp
scas
adc
mov
cmps
cmps
out
adc
adc
or
inc
fwait
jg
fwait
mov
xor
call
adc
xchg
es
pop
push
cdq
nop
lahf
lock
enter
xchg
mov
jnp
inc
mov
add
rcr
sub
fldcw
inc
test
cmp
sub
sub
inc
mov
push
repz
(bad)
dec
mov
cdq
jmp
jne
jo
inc
call
mov
and
inc
or
lds
cmp
clc
adc
adc
popf
sbb
adc
movs
je
pop
and
mov
daa
and
sbb
push
xchg
popf
stos
cwde
push
ret
(bad)
jg
or
das
and
test
add
add
add
aam
add
cmp
je
or
je
shl
sbb
pop
and
mov
xlat
ja
jecxz
or
push
mov
sbb
leave
xchg
sub
out
push
sub
pop
ror
test
lods
pop
xor
fild
push
and
add
or
je
mov
addr16
add
lahf
add
push
jg
push
mov
add
mov
fld
xor
neg
sbb
mov
ss
push
dec
dec
dec
inc
dec
push
add
cdq
pushf
mov
add
pop
imul
and
xor
aaa
xor
dec
or
inc
xlat
push
shl
movs
pop
pop
outs
adc
sbb
ss
jge
ficomp
cmp
jne
sub
mov
xchg
mov
inc
jnp
ins
je
adc
xchg
retf
sbb
inc
sbb
stos
mov
dec
mov
ins
xchg
and
outs
(bad)
push
lock
loope
sub
mov
loope
leave
daa
ss
adc
jl
les
mov
lahf
and
pop
jae
add
js
dec
cdq
mov
call
int3
adc
and
xor
pusha
das
neg
sbb
test
sbb
jecxz
cmp
rol
cdq
cmps
popa
cmc
or
inc
shr
hlt
mov
adc
adc
xchg
or
cmp
loopne
mov
sub
scas
push
sub
pop
sub
mov
xchg
sti
sub
mov
adc
clc
mov
xor
bound
xor
in
xor
cdq
mov
xor
mov
jmp
sub
add
xchg
jo
adc
js
add
shl
repnz
cmp
add
fdiv
push
mov
dec
dec
xor
mov
mov
pop
pop
mov
cmp
xchg
sbb
xchg
std
outs
mov
leave
cmp
xor
fs
cs
jmp
in
inc
(bad)
movs
or
mov
ins
jge
popa
inc
movs
pop
push
or
mov
push
(bad)
out
mov
fadd
xor
call
add
fsubrp
push
in
adc
push
cmps
adc
adc
outs
outs
cmp
push
pop
sub
dec
push
add
and
test
ds
xor
call
js
stc
add
movs
pop
rol
ja
inc
cmp
cmp
int
lock
dec
mov
ins
inc
sahf
dec
dec
cmp
je
sbb
push
add
sub
lar
inc
inc
inc
xor
test
nop
xchg
mov
sbb
inc
pop
nop
cmp
mov
hlt
cli
inc
fwait
test
cmp
push
stos
sub
repnz
cmp
mov
jl
jo
outs
repz
imul
push
mov
xor
ins
pop
or
jmp
movs
mov
inc
sbb
add
popa
test
aas
add
sbb
sar
cmovbe
pop
pop
add
adc
test
lods
fimul
mov
mov
or
call
cmps
jmp
inc
cmp
in
dec
ss
inc
fiadd
popa
dec
mov
mov
cmp
shl
cmp
aaa
pop
add
shl
pop
out
(bad)
mov
cmps
movs
lahf
popa
sub
or
dec
or
adc
fild
mov
xor
call
push
dec
or
and
nop
pop
(bad)
aaa
pop
sbb
outs
(bad)
or
mov
pop
dec
dec
das
test
stos
mov
arpl
push
mov
add
pop
jnp
add
ds
xchg
outs
outs
(bad)
mov
ins
pop
push
outs
pop
or
cmps
xor
retf
mov
xchg
test
sbb
xchg
adc
pop
or
dec
push
inc
adc
dec
and
mov
outs
and
pusha
push
cli
push
sbb
push
jnp
(bad)
sub
xor
sti
scas
pop
push
arpl
ins
addr16
push
adc
jo
or
add
push
adc
arpl
and
fdivr
pop
pop
iret
mov
fidiv
cld
mov
mov
pushf
adc
cwde
pop
adc
lods
das
nop
mov
int
js
mov
cmps
cmp
ret
dec
mov
sar
mov
ja
xor
pop
test
test
pushf
cmp
add
push
in
pop
and
mov
xor
cmp
xchg
add
mov
fucomi
adc
arpl
adc
(bad)
aam
in
ja
je
adc
add
cs
fstp
push
stos
and
sub
sub
daa
xor
je
aas
ds
in
push
pop
jo
add
icebp
adc
pop
ins
and
pop
fnstsw
add
pop
add
jnp
loope
shl
xor
and
jle
and
xchg
pop
add
ins
add
mov
add
mov
add
and
stos
js
jnp
push
add
sahf
mov
xchg
lods
and
and
scas
mov
js
js
ret
fs
jae
mov
inc
imul
int
(bad)
int
pop
nop
jl
mov
jb
sub
stos
fldenv
in
pop
stos
loopne
int3
xor
call
cmp
movs
call
pop
js
mov
nop
clc
inc
push
dec
cs
lods
lods
(bad)
aam
inc
leave
sub
or
movs
xor
outs
pop
rcl
mov
mov
adc
and
push
dec
pop
cmp
cmp
popa
fsub
pop
push
test
in
sub
push
movs
push
sbb
je
inc
sub
dec
movs
repnz
popa
nop
js
push
sub
mov
xor
add
mov
pop
fiadd
aam
ins
popa
inc
inc
xor
int
daa
push
sub
pop
rcl
in
(bad)
dec
push
das
push
test
sbb
dec
lods
xchg
mov
fcomp
sub
mov
mov
pop
pop
and
imul
daa
push
jg
add
mov
cdq
in
scas
test
test
add
mov
adc
push
fs
pop
dec
popa
jns
jne
sub
fdiv
or
hlt
or
or
cmp
add
push
pusha
movs
mov
in
daa
add
jae
cwde
outs
mov
add
mov
pop
mov
ins
cmp
inc
add
mov
cmp
push
mov
fistp
cdq
in
mov
mov
jns
mov
push
or
cwde
jle
xor
lahf
xchg
cmp
lods
xor
cmp
sbb
(bad)
push
movs
hlt
ins
(bad)
cmps
(bad)
jle
enter
stos
aam
fwait
fs
mov
inc
(bad)
mov
push
mov
mov
mov
out
cld
adc
(bad)
inc
jmp
push
push
jo
mov
cmp
ror
ror
ins
lock
push
jmp
pop
sub
outs
pusha
or
enter
sub
push
mov
pop
jo
xchg
scas
dec
lock
test
push
stc
nop
xchg
pusha
imul
xor
jns
(bad)
cwde
daa
dec
push
int3
pop
call
xor
pop
add
add
add
add
cmp
popa
jo
jb
xchg
popa
cwde
cld
pop
cwde
icebp
sbb
add
xchg
or
enter
scas
inc
popf
ror
adc
outs
mov
pop
loope
fisubr
mov
ret
bsr
into
pushf
fsub
(bad)
inc
lds
or
add
or
pop
adc
adc
add
je
retf
mov
sub
jb
movs
inc
pop
call
jp
sbb
jmp
addr16
jae
pop
push
fwait
mov
fwait
int3
or
adc
inc
pop
enter
out
sbb
movs
add
adc
pop
jmp
test
push
movs
movs
pop
mov
lea
sbb
add
(bad)
add
icebp
pop
cs
xchg
repnz
in
push
pop
inc
xor
mov
imul
jae
xor
pop
movs
adc
push
sbb
or
add
dec
sbb
or
mov
mov
call
push
or
dec
push
add
hlt
fistp
mov
call
jo
sbb
retf
movs
rcl
jp
cdq
ins
mov
mov
pop
call
in
jns
pusha
push
pushf
mov
shr
cs
xor
jns
add
imul
movs
mov
cdq
jne
aaa
push
imul
cld
jp
les
and
jmp
jp
push
aad
jo
and
sub
retf
test
imul
or
out
cmp
cmp
jo
(bad)
sub
fwait
mov
or
xchg
sbb
pop
inc
call
in
cdq
lea
push
xchg
dec
pop
mov
inc
cs
test
fmul
sub
or
repz
and
inc
outs
fiadd
sbb
xchg
fcomp
rcr
cmp
sub
or
iret
mov
std
xchg
ja
dec
rcr
fdiv
sbb
or
xchg
loopne
xchg
das
in
loopne
add
push
dec
xor
rol
enter
inc
out
dec
js
(bad)
xchg
gs
jecxz
lods
add
fsub
inc
xor
push
je
enter
shld
adc
and
xchg
adc
pop
mov
or
mov
mov
(bad)
jle
imul
test
imul
add
(bad)
in
in
out
and
or
jl
mov
and
or
popf
mov
push
add
test
aaa
retf
mov
adc
nop
js
(bad)
fmul
call
sbb
sbb
sbb
cmp
jne
jbe
jmp
pinsrw
sbb
test
je
jne
or
mov
push
or
sbb
xor
sbb
xchg
sub
xor
inc
mov
mov
jle
fs
add
xchg
mov
pushf
retf
and
jnp
xor
pushf
push
add
mov
adc
loopne
test
and
or
sub
sub
imul
push
inc
adc
pop
ror
jle
sbb
sbb
mov
shl
mov
aas
mov
cmp
and
cmp
jle
je
lods
mov
or
daa
ins
or
pop
sub
push
push
add
xchg
sub
lods
adc
iret
or
mov
push
dec
retf
fcom
fsub
retf
inc
add
scas
jmp
sub
xchg
rol
sar
fsubr
cmp
in
pusha
cs
xchg
push
dec
div
mov
mov
push
jne
mov
mov
and
cmp
add
stc
inc
jmp
pushf
xchg
nop
sub
jns
xchg
data16
xchg
push
cs
mov
push
mov
js
or
dec
ins
ficom
push
hlt
add
out
les
jnp
into
xchg
mov
loopne
add
mov
push
or
adc
cmp
adc
cmps
(bad)
popa
daa
cmp
nop
or
mov
nop
mov
movs
loope
pop
mov
adc
test
jecxz
push
inc
mov
and
inc
mov
in
cwde
xor
stc
mov
out
add
stos
and
or
mov
sbb
mov
leave
out
ins
inc
mov
add
cmp
js
jmp
adc
push
sbb
pop
xchg
or
cld
cmp
call
mov
xchg
mov
das
push
(bad)
jns
add
xor
iret
imul
and
push
xor
je
pop
inc
movs
cmp
les
sti
dec
add
add
add
inc
inc
sar
(bad)
mov
addps
mov
fnstsw
pop
push
int
or
or
je
dec
iret
mov
or
add
retf
and
js
xor
loope
mov
push
enter
mov
add
and
sub
cmp
outs
(bad)
int3
out
dec
int3
xor
push
ins
out
and
push
imul
ror
das
dec
mov
daa
rol
movs
outs
add
push
repnz
inc
add
retf
clc
jno
nop
xchg
outs
inc
jl
int3
or
jns
lea
rol
cmp
ret
pop
call
add
call
adc
add
jns
ja
add
jmp
out
ins
push
sbb
loope
daa
push
mov
test
dec
int3
inc
pop
mov
sub
rcr
push
call
data16
or
dec
add
add
sbb
or
push
or
pop
or
add
aam
pop
mov
je
test
int
ffreep
ffree
push
jecxz
push
mov
cld
movs
out
push
sub
fwait
addr16
jbe
cwde
ror
pop
jnp
outs
adc
adc
inc
add
mov
inc
cmp
jo
movs
mov
in
popa
stc
sub
popa
outs
xchg
sub
mov
retf
add
or
pop
jnp
scas
inc
rol
push
jb
sub
add
cwde
sub
nop
pop
pop
sbb
mov
push
push
or
xor
stc
sbb
mov
add
ins
add
sbb
pusha
mov
add
adc
js
str
inc
gs
pusha
retf
loop
dec
adc
xchg
adc
jne
or
inc
adc
in
adc
mov
std
xchg
enter
adc
fcomp
shl
enter
es
cmp
cwde
sbb
cmp
ret
dec
adc
xchg
jne
sub
sbb
push
push
sub
add
movs
(bad)
push
or
push
movs
lds
sub
aam
push
pop
sub
or
push
movs
and
in
or
mov
add
sbb
push
add
stos
popa
and
mov
cmp
push
outs
inc
or
in
push
add
push
sbb
sub
push
jb
sub
sbb
mov
dec
mov
and
or
add
mov
mov
sub
xor
test
es
enter
sub
call
add
or
fisubr
inc
push
jbe
or
and
sub
cmps
push
mov
out
dec
cs
popa
test
and
adc
rol
adc
mov
mov
hlt
enter
enter
adc
adc
xor
ds
pop
dec
mov
mov
into
(bad)
arpl
mov
push
inc
cs
xor
mov
xor
xor
dec
aaa
ins
shl
cmp
lahf
sahf
das
in
enter
add
js
fiadd
in
clc
rol
add
or
sub
nop
add
fwait
nop
cmp
add
dec
out
or
enter
inc
xchg
inc
ja
out
inc
lock
lock
fst
xchg
xchg
add
test
sbb
add
push
cmp
cdq
pop
test
ins
inc
dec
jnp
cmp
mov
call
inc
in
xchg
addr16
and
or
xor
pop
or
xchg
or
retf
cmp
pop
call
hlt
sub
mov
pop
ja
inc
mov
dec
mov
or
jle
dec
mov
dec
pop
fnsave
bound
pop
hlt
xor
push
inc
les
or
inc
or
xchg
add
ja
add
cwde
retf
dec
or
sbb
xor
imul
adc
retf
push
push
adc
and
inc
xor
adc
aas
out
xor
sbb
adc
xor
sbb
test
aad
inc
push
shl
mov
mov
scas
or
fmul
jmp
(bad)
cmp
mov
xchg
leave
clc
push
jo
jnp
mov
not
mov
fs
inc
popa
in
adc
fsub
and
pushf
add
stos
retf
repnz
add
clc
cmp
or
or
mov
push
mov
pop
jnp
and
and
or
cmp
dec
mov
sub
aas
sub
adc
inc
sub
jmp
xor
xor
int
push
sub
loop
or
shl
ror
imul
lds
dec
mov
mov
mov
ss
push
cmove
imul
jnp
or
(bad)
mov
(bad)
mov
mov
add
inc
add
jg
mov
adc
mov
(bad)
mov
lahf
mov
inc
jg
or
scas
sbb
and
pop
add
cmp
xor
into
getsec
sbb
fild
jecxz
ins
fsubrp
or
add
sbb
cmp
test
add
ja
mov
xor
imul
sahf
sbb
adc
loope
push
mov
not
test
je
add
or
adc
mov
dec
dec
inc
jo
cmp
je
mov
sub
lock
jp
lock
inc
movs
stc
push
jge
push
cmp
adc
adc
or
xchg
data16
hlt
xlat
(bad)
dec
or
dec
repnz
add
retf
pop
enter
loop
xor
aas
and
mov
(bad)
imul
add
dec
cwde
fcmovbe
adc
in
in
rcl
popa
imul
adc
add
adc
dec
jl
and
mov
add
jne
push
dec
jmp
xor
xchg
sbb
xor
mov
push
or
xchg
xor
je
into
push
jg
push
push
mov
sbb
add
rcl
cli
xchg
and
or
hlt
lds
xchg
inc
shl
les
aam
pusha
cwde
clc
push
dec
loope
cmp
inc
mov
or
push
adc
pop
rcr
in
outs
jae
push
push
mov
xchg
mov
inc
pop
and
bound
adc
pop
and
cmp
mov
ret
mov
pop
es
pop
add
shl
fs
call
sub
push
pop
xchg
call
dec
cmp
addr16
adc
cmps
cmp
in
jge
push
shr
lea
lea
xchg
pop
or
jmp
sahf
cmp
mov
ds
jge
jmp
cmp
lods
dec
sub
adc
call
push
or
sti
mov
cmp
shr
dec
arpl
hlt
rol
jmp
xor
xchg
hlt
pop
lods
fstp
jns
push
push
xchg
sub
lock
sbb
loopne
cli
cwde
mov
sub
test
add
mov
outs
sbb
mov
daa
and
pushf
or
daa
cmp
cld
in
in
sar
mov
mov
sahf
dec
outs
out
dec
data16
or
and
mov
dec
dec
dec
dec
and
dec
daa
sub
sub
dec
dec
sub
dec
das
adc
adc
dec
dec
adc
dec
pop
sbb
sbb
dec
dec
sbb
dec
pop
add
add
dec
dec
add
dec
pop
or
or
dec
dec
or
js
test
iret
repz
cmp
xor
sub
cmp
repz
push
sbb
adc
cmp
repz
or
add
out
sahf
addr16
sub
and
sahf
out
sahf
sbb
adc
or
cmp
out
add
sar
(bad)
lock
repz
iret
repz
fsub
iret
repz
mov
iret
repz
je
ins
iret
repz
cwde
fs
pop
mov
repz
dec
js
jo
cmp
repz
xor
sub
repz
pop
and
sbb
adc
iret
repz
or
add
jns
out
pop
cld
sub
and
out
sahf
out
in
fmul
xchg
mov
mov
adc
das
pusha
mov
ja
sub
aam
mov
aam
rcr
icebp
adc
aaa
sub
imul
mov
adc
outs
xchg
add
adc
rcr
popa
inc
inc
push
in
test
dec
adc
pop
dec
cmp
into
xor
add
mov
mov
mov
(bad)
jle
xchg
lock
fadd
sbb
xchg
in
and
push
jecxz
jmp
and
or
dec
sar
fimul
push
adc
adc
sbb
in
mov
mov
lea
adc
call
sbb
and
inc
ins
mov
or
das
ror
dec
outs
mov
sub
mov
mov
andps
mov
pusha
xor
xor
movs
imul
adc
out
adc
inc
push
inc
loope
mov
adc
and
jo
adc
xlat
mov
add
retf
call
pop
nop
iret
mov
dec
sub
push
fisub
outs
ins
outs
out
sbb
les
mov
jmp
ror
aaa
rcl
xchg
cwde
movs
imul
push
xor
cwde
inc
call
add
or
and
jge
adc
movs
xchg
cld
sbb
in
add
inc
sbb
and
and
sub
mov
fisttp
dec
push
(bad)
fstp
shl
add
mov
mov
dec
sub
mov
mov
push
sbb
add
hlt
pop
inc
(bad)
jmp
mov
out
test
pop
add
dec
mov
into
(bad)
xor
add
retf
je
push
add
aad
push
cld
add
xor
lea
sbb
push
mov
cmp
inc
mov
dec
aas
add
(bad)
les
and
rcl
dec
fadd
ins
jecxz
enter
add
jmp
pop
add
es
movs
add
(bad)
call
int3
enter
push
sbb
and
inc
or
cmp
pop
enter
(bad)
ins
dec
inc
int3
inc
adc
cdq
push
dec
pop
or
cld
xchg
sar
pop
dec
sbb
push
mov
mov
ret
fwait
jecxz
ret
xchg
mov
mov
jg
call
(bad)
imul
mov
dec
arpl
or
fistp
rcr
leave
in
aas
mov
sbb
sbb
push
inc
fdivr
sahf
jbe
or
add
(bad)
and
add
adc
push
push
clc
pop
mov
push
push
add
add
or
add
ins
jns
cmps
add
add
xchg
push
xchg
and
je
sub
dec
xchg
push
push
dec
fistp
pop
sub
outs
mov
xor
(bad)
test
or
rol
pop
je
adc
fstp
aam
inc
mov
pop
push
fisub
add
rol
add
stos
or
cmp
and
(bad)
shl
test
inc
cld
aaa
fmulp
cmp
(bad)
cmc
cs
and
adc
adc
nop
sti
outs
mov
repnz
or
in
ret
arpl
add
dec
mov
or
push
mov
sub
pop
loopne
ins
adc
cmp
push
inc
iret
in
cmp
cmps
pop
les
cmp
fbld
(bad)
scas
fild
mov
jae
outs
fdivrp
mov
mov
cmps
adc
out
mov
leave
loopne
loopne
dec
inc
push
dec
lods
sub
imul
or
add
inc
les
test
jo
frstor
in
rcl
sbb
shr
aam
mov
sub
lods
(bad)
aaa
sub
inc
shl
pop
hlt
outs
loope
jo
add
cmp
jns
cmp
push
loope
loope
add
add
sbb
les
adc
push
(bad)
in
out
jle
push
adc
sub
push
clc
fwait
or
je
sbb
jb
je
imul
or
loop
mov
mov
mov
sub
mov
jg
mov
or
jns
in
daa
adc
mov
sub
icebp
add
add
mov
dec
in
adc
mov
loop
inc
adc
retf
adc
sbb
jns
pusha
aas
in
push
in
push
push
add
imul
mov
sub
out
(bad)
scas
test
and
xor
xor
dec
imul
xor
arpl
add
cld
(bad)
jle
mov
add
arpl
ins
push
arpl
imul
inc
outs
pop
js
bound
fdivrp
fidivr
pop
es
jb
jb
popa
out
mov
adc
(bad)
out
mov
jbe
es
out
sbb
addr16
mul
jb
addr16
add
mov
(bad)
mov
arpl
ins
daa
push
neg
sub
sub
ins
ins
fistp
cmps
sbb
call
pop
fbld
sbb
cmp
pop
je
xchg
mov
jb
arpl
jns
ret
out
jnp
outs
dec
pushw
das
add
or
outs
pop
jne
adc
cmc
mov
movs
xchg
mov
mov
fnstenv
inc
sub
loopne
dec
add
mov
in
fs
or
test
cmp
les
and
mov
lods
jbe
or
cld
jl
mov
dec
mov
js
cmps
mov
push
push
add
dec
inc
shl
stos
sbb
pushw
ins
push
xor
mov
into
xchg
iret
xchg
out
mov
cwde
outs
mov
outs
mov
inc
xchg
jne
pop
xlat
add
sub
inc
add
mov
movs
push
rol
push
nop
cli
mov
mov
adc
iret
ror
bound
rol
xlat
pop
add
and
jge
sub
rcl
call
jmp
xchg
fld
fadd
stc
inc
adc
and
push
add
mov
sub
pop
add
mov
mov
and
adc
add
or
sbb
bound
rol
sub
pop
xor
ret
fiadd
ror
lods
fs
out
or
imul
out
jmp
or
or
or
or
or
sahf
movups
adc
adc
sahf
out
adc
sti
jg
out
sbb
and
and
fsub
jns
ins
jmp
ror
jns
shl
hlt
jmp
iret
repz
dec
pop
imul
repz
iret
jnp
loop
mov
push
adc
iret
repz
pop
push
xchg
repz
xchg
mov
mov
or
xchg
imul
add
in
retf
add
jb
adc
adc
cs
sbb
sbb
sbb
xchg
retf
push
or
and
and
cs
sub
dec
sub
xchg
retf
adc
adc
movs
jb
in
inc
push
inc
test
dec
sbb
push
sbb
push
retf
dec
sbb
scas
shr
xchg
pop
sbb
push
movs
repnz
sub
pop
(bad)
pop
and
and
movs
fs
and
retf
repnz
adc
dec
gs
addr16
push
pop
mov
jo
jmp
cld
pop
(bad)
test
ja
fcmovb
fiadd
xor
sub
fadd
cmp
sbb
jne
mov
pop
outs
js
lock
adc
test
and
xchg
push
jmp
fsubr
fcomp
mov
add
sbb
or
mov
xchg
push
fs
add
mov
add
cmps
mov
sti
in
jns
les
add
pushf
dec
clc
das
dec
pop
lods
lea
loope
xor
jmp
push
or
xchg
test
pop
push
enter
out
jnp
ja
push
daa
sbb
add
push
lahf
in
mov
sub
js
fild
ins
nop
jl
sub
mov
dec
outs
jne
add
sub
cmp
addr16
cmp
push
ins
bound
pop
or
popa
retf
jge
or
popa
jb
add
out
(bad)
jle
or
pop
test
cmp
mov
dec
ret
clc
jg
add
bound
ins
fs
mov
or
jle
retf
popf
push
icebp
mov
inc
xor
in
mov
pop
retf
mov
nop
fdivr
fwait
adc
push
or
or
xchg
fsub
cmp
std
pop
ret
jae
out
xor
sbb
jbe
stos
jbe
enter
add
dec
mov
mul
repz
pop
add
test
adc
mov
xchg
xchg
add
test
add
push
outs
pusha
popa
pop
fstp
xor
aas
push
out
sbb
adc
pop
(bad)
sub
out
adc
ins
popa
stos
or
out
or
or
xchg
mov
mov
in
add
sbb
(bad)
ja
xchg
cld
jl
lock
sbb
js
add
les
add
add
cmp
mov
add
mov
shl
ins
sahf
test
and
mov
inc
fs
clc
push
cmps
add
jnp
ja
aaa
mov
push
add
shufps
aad
xchg
in
or
outs
test
lock
icebp
inc
stos
(bad)
jae
or
lods
outs
pop
(bad)
imul
fmul
and
fimul
and
shr
imul
adc
push
xor
and
mov
int
js
mov
xor
sar
pop
pop
pop
std
adc
fdivp
mov
repnz
push
fs
stos
out
push
call
lds
mov
and
add
push
mov
sbb
adc
and
pop
jmp
or
push
imul
aam
call
or
loope
add
inc
inc
pop
mov
jns
dec
cmp
add
inc
jns
add
and
cmp
mov
fs
add
sub
pop
sbb
add
lock
mov
add
fild
inc
(bad)
xchg
jge
in
jecxz
sub
cmp
aaa
add
inc
aam
or
clc
shl
inc
test
in
nop
cs
xlat
das
and
jbe
bound
sub
mov
enter
pop
daa
sbb
jns
sub
(bad)
cmp
jecxz
push
or
aas
add
fwait
inc
mov
xchg
and
pop
sbb
inc
test
mov
test
arpl
pop
scas
mov
or
sbb
ja
inc
inc
xor
cmc
pop
jbe
xor
popf
rol
cmp
sbb
push
push
jl
adc
outs
cdq
sbb
int3
xchg
xor
inc
pop
(bad)
in
xor
das
sbb
jecxz
dec
sbb
out
xor
dec
mov
inc
lds
adc
cdq
nop
add
nop
and
pusha
ror
cwde
cwde
fimul
cwde
das
push
add
and
pop
enter
mov
loopne
test
hlt
int3
popf
imul
daa
cmc
or
cmp
sbb
or
mov
cmp
pop
out
add
inc
sub
enter
mov
mov
push
jmp
call
mov
inc
pop
cmp
add
xor
fiadd
mov
adc
out
popf
jle
loopne
fild
outs
test
and
pushf
cmc
cld
dec
mov
int
inc
add
dec
ins
ror
es
push
push
add
and
xor
scas
add
ret
pop
push
jge
add
or
sbb
add
aas
push
sub
ret
inc
push
fs
outs
(bad)
retf
inc
jo
push
arpl
mov
xor
loopne
mov
repnz
inc
iret
inc
push
or
mov
pop
icebp
pop
inc
iret
test
leave
jne
or
cmp
stos
fdivr
or
fisttp
pop
add
push
push
adc
add
add
fidivr
push
push
jo
out
popa
pop
clc
mov
mov
cwde
add
out
inc
out
and
adc
jns
xchg
or
fcmovne
xor
xchg
sbb
add
cmp
push
in
enter
add
or
or
ins
popa
sbb
cdq
nop
into
add
sbb
ret
sahf
adc
sub
sbb
int
adc
ss
into
clc
inc
push
push
add
xbegin
sub
lea
hlt
(bad)
dec
das
and
mov
cmp
lock
mov
push
fcom
sub
pusha
es
mov
adc
and
or
add
fs
xchg
or
and
add
mov
fisttp
ins
or
sub
mov
imul
jecxz
or
mov
in
push
xchg
or
or
in
sbb
inc
fidiv
jo
in
pop
aam
js
out
dec
cmp
jns
aaa
add
pop
ins
lods
add
sub
ror
(bad)
jns
es
(bad)
mov
pop
cmp
push
clc
adc
dec
cmc
jg
push
pop
shl
xor
xor
(bad)
(bad)
(bad)
cmp
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
xchg
fs
sub
loope
sbb
adc
dec
or
out
ror
push
shl
or
jl
dec
lahf
jle
sub
rcl
push
in
shl
add
call
or
xor
mov
lock
test
pop
sahf
retf
sub
and
add
add
push
mov
jns
add
jmp
push
aam
mov
add
mov
das
xor
in
movs
cmp
pop
loopne
in
xchg
test
(bad)
int
pop
(bad)
in
sbb
(bad)
clc
sub
clc
mov
(bad)
int
jnp
je
or
or
dec
push
inc
jge
ror
imul
or
lods
imul
stos
pop
cli
push
cwde
test
dec
sbb
inc
cmp
adc
push
cs
and
sub
leave
lds
or
or
imul
imul
and
and
aaa
xchg
jmp
inc
inc
inc
clc
loope
arpl
sub
add
cwde
jmp
lock
mov
jmp
xor
jp
call
inc
dec
adc
test
push
sub
or
sbb
cmp
and
pusha
cmp
sbb
jmp
pop
(bad)
pop
push
pop
je
inc
scas
inc
iret
dec
shr
cmp
inc
cvtps2pd
cmp
ficom
imul
int
out
and
mov
and
ret
(bad)
daa
stc
sub
clc
shr
sub
inc
sbb
pop
ins
adc
jne
xchg
and
out
ss
cmp
iret
popa
pusha
xor
nop
inc
cs
sub
mov
mov
mov
sbb
xchg
mov
or
(bad)
or
jmp
inc
(bad)
retf
push
mov
jne
mov
add
or
es
inc
mov
and
sub
je
outs
add
add
xchg
or
adc
icebp
add
nop
imul
or
inc
aas
cwde
loopne
pop
data16
ja
sbb
xor
pusha
je
loop
inc
(bad)
inc
pop
and
and
ret
ret
and
or
popa
popa
or
mov
retf
(bad)
add
ins
clc
xchg
xor
adc
pop
(bad)
jmp
dec
pusha
adc
pop
sub
push
xor
add
cli
sub
jle
in
outs
loopne
imul
mov
cmp
ja
jo
xor
add
mov
jmp
jmp
jbe
fisubr
in
push
xor
and
jbe
aaa
adc
mov
in
fucom
addr16
div
(bad)
push
clc
dec
mov
sbb
lods
cld
in
mov
(bad)
adc
add
jnp
rcl
sbb
mov
cmp
sbb
inc
push
jg
stos
fstp
mov
mov
sbb
out
ins
arpl
push
mov
mov
sbb
inc
(bad)
mov
js
nop
pop
inc
add
nop
lahf
cmps
fs
mov
cmp
gs
push
push
xchg
mov
jl
cmp
xor
or
in
fstp
dec
sbb
movzx
cmp
fnstsw
test
in
add
mov
push
pushw
push
enter
iret
ror
push
repnz
add
cwde
test
adc
les
mov
cmc
mov
js
(bad)
or
push
or
mov
inc
pop
aas
and
loope
xor
and
aaa
ss
shl
and
aas
shr
and
fwait
mov
jo
aaa
adc
repz
or
in
cmp
aas
cmp
push
adc
in
push
aas
and
inc
not
imul
cmp
cmp
sub
sahf
mov
add
jmp
enter
push
cmp
add
or
ins
cmp
retf
(bad)
inc
mov
add
in
dec
call
adc
and
inc
pusha
dec
inc
push
mov
vmovntps
pushf
jge
sbb
sbb
add
xor
push
jmp
and
mov
cmp
adc
or
js
adc
or
sub
push
js
pop
and
mov
xor
pushf
inc
dec
dec
inc
aam
nop
lahf
hlt
fimul
rol
dec
mov
add
fstp
and
sub
adc
imul
outs
sbb
add
and
mov
dec
dec
sbb
les
pop
add
add
jne
mov
mov
xlat
pushf
push
pushf
pusha
dec
sar
pop
(bad)
std
ins
jmp
(bad)
sub
push
push
(bad)
or
dec
sahf
lock
jle
and
jl
or
dec
loopne
dec
sub
je
sub
iret
mov
push
bound
dec
out
or
jmp
jle
hlt
dec
dec
or
xor
or
push
add
rcl
test
test
cwde
cmp
pop
cmp
rol
cmps
cmp
pop
xlat
or
fisttp
shr
fs
dec
xor
es
push
inc
mov
ret
inc
or
xor
adc
sti
adc
dec
cmp
jo
lock
fistp
mov
cmc
in
push
or
push
in
cld
jmp
imul
add
(bad)
push
lea
xlat
xchg
arpl
or
sub
xchg
mov
sbb
jbe
xor
push
jl
push
xchg
inc
xlat
rcr
adc
test
dec
je
movs
add
mov
sbb
movs
inc
lock
add
xchg
in
imul
xchg
cmp
mov
nop
mov
mov
sar
inc
mov
push
dec
fld
or
lods
pop
(bad)
pop
pop
lock
xchg
shl
lahf
lods
sbb
push
ret
sbb
mov
xchg
adc
pop
ins
out
mov
pop
aaa
lds
clc
gs
jl
or
add
out
les
mov
pop
jnp
fidivr
inc
in
jne
mov
je
iretw
ins
clc
nop
or
lds
push
sub
mov
and
or
idiv
jg
dec
inc
cmp
add
adc
mov
data16
mov
dec
cmp
int3
jo
or
iret
pop
adc
cmp
xor
daa
pop
pop
cmp
sbb
lds
popa
pusha
xchg
or
fchs
adc
push
scas
dec
aam
cmp
jge
mov
xlat
mov
push
mov
les
mov
movs
xor
sbb
adc
pop
sub
push
cmp
call
push
nop
or
movs
push
or
add
cs
lock
pop
inc
(bad)
(bad)
dec
pop
enter
nop
xchg
cmc
jmp
pushf
les
jmp
mov
test
in
es
ss
add
add
jecxz
es
call
movs
loope
div
jecxz
or
jmp
shr
or
inc
add
push
and
mov
add
or
mov
mov
and
adc
cwde
jge
sub
sbb
test
jle
fbstp
mov
stos
enter
in
add
call
mov
cld
ror
xchg
add
jle
or
cmps
sbb
js
ins
idiv
dec
mov
sub
dec
inc
cmp
adc
cld
add
movs
jne
daa
adc
movs
push
fdivr
rol
xor
add
or
sub
mov
sub
lock
stos
nop
and
ret
cwde
mov
or
in
sub
push
or
cs
dec
and
sub
lock
data16
jecxz
mov
lock
fcom
dec
or
pusha
sbb
out
adc
test
(bad)
push
adc
mov
retf
(bad)
adc
adc
jl
xor
mov
jmp
push
dec
imul
popa
push
bound
xchg
xlat
or
adc
push
inc
jp
out
inc
cmp
inc
iret
dec
icebp
ins
mov
adc
mov
gs
pop
test
dec
pop
mov
loopne
lock
inc
push
pop
inc
hlt
enter
and
xchg
jo
std
out
lock
jmp
(bad)
cmp
movs
mov
cdq
lock
mov
pop
inc
retf
sbb
sub
and
sub
loop
sub
aas
les
push
sbb
mov
rcl
ss
xor
test
pusha
cwde
xchg
mov
js
shr
xchg
mov
lods
hlt
mov
add
sub
jl
fimul
imul
inc
xor
clc
sub
mov
sub
xor
mov
dec
shl
and
ss
xor
loope
sub
or
ret
icebp
ins
xor
mov
adc
cmp
unpckhps
js
dec
and
lock
cmp
and
cmovnp
jmp
and
add
lock
inc
cwde
pop
inc
jb
cwde
add
jge
xchg
aaa
pop
push
push
inc
adc
int
dec
fcmovnu
imul
adc
push
xlat
mov
jne
xor
dec
xor
sub
fld
mov
jbe
add
sub
dec
arpl
ret
push
or
jo
outs
or
sub
mov
repnz
push
sub
pop
lock
nop
push
mov
rol
pop
movs
inc
fldcw
rcr
test
xchg
or
sub
lea
movs
pop
adc
sbb
lock
push
pusha
xor
cmp
shr
sbb
sub
jnp
inc
ins
stc
ss
iret
hlt
cmp
fcmove
(bad)
iret
hlt
hlt
pop
into
sub
cmps
hlt
sub
inc
jo
lock
lock
dec
clc
or
pop
push
xor
jns
inc
jne
pop
(bad)
fild
push
inc
xor
jge
add
rol
shr
and
inc
in
(bad)
ds
pop
fisttp
sub
push
push
mov
add
sbb
adc
lea
add
sub
ror
adc
inc
loopne
xchg
outs
aaa
fistp
pushf
xchg
pop
or
add
loopne
and
push
sbb
add
popa
sbb
jp
adc
jl
test
mov
call
aas
sbb
iret
(bad)
shl
enter
or
call
add
xchg
fwait
sbb
add
or
mov
les
bound
pop
mov
mov
pop
je
adc
add
pushf
add
(bad)
or
aaa
jbe
push
sub
enter
pop
push
std
inc
mov
sub
jmp
rcl
or
repnz
adc
sbb
cmp
cmp
fnsave
push
and
data16
jo
mov
dec
call
dec
mov
ret
loopne
add
fmul
sbb
daa
(bad)
push
mov
pop
pop
xlat
mov
mov
and
and
dec
daa
call
test
add
shr
cvtpi2ps
mov
icebp
imul
sub
jb
inc
clc
sub
sub
repnz
add
cmp
jns
ret
sbb
mov
inc
dec
xor
mov
arpl
push
pop
fild
test
add
sbb
jns
lock
call
test
or
pushf
movs
ror
dec
mov
cmp
pop
push
out
or
and
cli
scas
mov
mov
das
loopne
fadd
das
inc
sbb
and
ficomp
and
inc
stos
add
jae
jns
adc
and
shl
or
aas
add
enter
imul
adc
adc
xchg
mov
jmp
inc
fimul
jl
jge
cmc
es
(bad)
fiadd
(bad)
out
cld
add
shl
pop
adc
call
aaa
aas
mov
retf
adc
fwait
aaa
xor
je
loope
inc
(bad)
into
mov
popf
(bad)
mov
bts
fist
xchg
mov
push
ins
or
sbb
adc
jp
add
out
jp
repz
ficom
jmp
ins
or
sbb
inc
pop
dec
ss
lods
mov
jb
jmp
xchg
pop
xor
inc
dec
nop
sbb
inc
call
and
fdiv
or
pop
add
scas
pop
and
shl
lock
add
add
ret
ins
mov
add
shl
push
mov
or
inc
push
dec
call
adc
pop
jo
pusha
(bad)
inc
xchg
call
or
inc
add
movs
nop
and
test
ja
ficomp
das
xor
sub
push
or
stc
es
out
loop
ds
inc
mov
xchg
inc
or
ror
or
add
push
ror
cld
ja
sbb
sbb
js
add
mov
xor
jnp
rol
rcr
and
push
add
xchg
nop
mov
loop
fwait
js
inc
arpl
retf
call
cmp
pop
inc
add
mov
jp
stos
sar
push
cmc
fadd
int3
or
scas
push
and
fsubr
xchg
ret
inc
dec
inc
pop
add
enter
push
outs
dec
jle
mov
adc
inc
add
cmp
sub
outs
cmp
inc
mov
and
cmp
pop
add
fs
mov
sub
adc
adc
lock
cmp
les
add
fldcw
push
adc
cmp
je
mov
mov
lock
jg
test
jne
jg
push
jb
fs
push
in
cmp
mov
add
mov
mov
push
lods
out
cmps
cmp
pop
adc
adc
xor
rcl
pushf
test
and
pop
mov
mov
mov
lods
dec
push
jno
out
aas
je
dec
add
sub
into
mov
jne
mov
push
(bad)
jne
arpl
test
outs
adc
in
ss
out
test
cs
outs
mov
int
xor
push
xchg
pop
add
add
adc
push
jl
mov
cmp
mov
mov
or
xor
inc
inc
push
inc
inc
lods
loopne
add
dec
je
outs
jecxz
or
(bad)
inc
xchg
xor
xor
cwde
sbb
stos
mov
pusha
push
pop
mov
mov
xchg
or
test
lea
aas
xchg
nop
sbb
sbb
xor
or
inc
(bad)
adc
retf
pop
sbb
pop
js
clc
sub
cmp
je
and
add
cwde
cmp
fs
and
pushf
(bad)
adc
cmp
pop
mov
pop
add
mov
aam
mov
sbb
lahf
mov
mov
add
push
pop
sahf
or
cs
mov
xor
push
jg
mov
jbe
and
pushf
mov
xlat
out
dec
xor
sar
enter
adc
pop
fcomp
sub
lea
add
sbb
test
fistp
out
pop
push
pusha
jl
sbb
sbb
pusha
pop
imul
jecxz
dec
cmp
jmp
push
lock
loope
ss
or
inc
inc
cmp
jbe
and
mov
xor
stos
es
(bad)
push
inc
mov
sub
cmp
jle
mov
rcl
or
pop
push
or
inc
adc
test
sbb
push
test
fidivr
clc
mov
sub
and
pop
daa
pop
inc
sbb
retf
test
sub
mov
mov
adc
adc
sbb
xor
cmp
ret
push
hlt
sub
sbb
ret
fdivr
test
cmps
sbb
stos
and
adc
jl
ret
sub
jmp
pusha
mov
push
test
xor
lods
shl
or
adc
popf
push
inc
pop
jnp
xchg
call
xor
push
dec
sbb
mov
add
add
inc
pop
mov
psrld
push
adc
jne
or
sbb
mov
xchg
jo
fadd
adc
cli
sar
mov
xor
mov
pop
or
adc
(bad)
inc
out
pop
fnstenv
jno
lods
lods
out
scas
rol
xor
jp
add
jo
retf
cmp
int
xchg
aaa
gs
sbb
jmp
adc
imul
out
ss
mov
xlat
mov
shr
push
cmp
push
sub
ret
xor
and
(bad)
mov
mov
pop
sti
in
mov
push
or
xchg
xchg
in
xor
adc
cmp
daa
lock
out
sbb
sar
add
and
lahf
fs
ja
xor
je
push
scas
mov
cmp
push
jl
pop
and
ja
movs
aas
ins
test
inc
data16
inc
inc
xchg
or
and
jne
push
cmp
push
push
data16
add
sub
cmc
or
adc
inc
(bad)
imul
std
fisub
leave
pop
cmp
pop
or
xor
cmps
(bad)
popa
jle
mov
inc
fst
mov
and
and
and
dec
cs
mov
xor
inc
push
dec
cs
inc
or
rcl
add
(bad)
jno
or
push
push
movs
std
fisubr
dec
adc
test
inc
cld
repnz
data16
test
mov
out
inc
pop
mov
xor
je
add
and
push
addr16
xor
and
adc
jl
push
cmp
cld
fdivr
pop
das
and
push
push
mov
jl
push
ins
inc
out
js
imul
or
loopne
and
das
nop
xor
pop
dec
ffreep
add
add
ins
xchg
push
push
in
adc
(bad)
mov
jb
mov
ins
add
inc
out
gs
jae
mov
dec
pushf
adc
add
dec
push
jmp
nop
push
dec
fist
gs
mov
fadd
pop
cmc
xor
sub
inc
cmp
pushf
xor
or
shr
sbb
sub
call
or
add
retf
add
jle
mov
daa
loopne
or
cs
cmp
add
mov
inc
mov
jne
jae
add
or
mov
test
xchg
push
jne
adc
mov
add
mov
cmp
inc
xor
dec
lock
push
xlat
mov
lods
lock
push
pop
lods
sbb
mov
mov
aaa
push
dec
fist
adc
push
pushf
sar
ds
sbb
xor
pop
add
mov
and
fs
add
rol
and
xchg
addr16
xor
push
out
add
das
and
xchg
out
out
jne
mov
jne
mov
or
mov
xchg
fld
fldcw
pop
mov
sbb
in
loopne
in
or
leave
ret
popa
data16
enter
add
ins
icebp
and
jg
je
les
popf
push
aas
movs
and
mov
aam
rol
jno
fcmovbe
xor
les
dec
push
pop
dec
xor
inc
int
jmp
sbb
aam
pop
inc
aad
je
push
sbb
xor
repz
out
test
les
add
push
push
adc
add
ret
aad
xor
movs
cmp
sbb
in
ds
int3
push
pop
lods
pop
dec
push
lds
lods
cmp
push
out
or
and
or
jge
mov
scas
rcl
loopne
cmp
loopne
fistp
test
add
inc
jmp
les
cld
dec
mov
jns
call
mov
and
(bad)
xor
add
pop
jmp
push
enter
and
add
fwait
cmp
in
xor
(bad)
dec
jmp
inc
fcmovnb
cmp
jmp
push
add
dec
cmp
lods
sub
(bad)
lock
das
aam
xlat
inc
pop
sub
or
sbb
mov
adc
cmps
or
loopne
pop
push
call
sahf
dec
sbb
leave
adc
sbb
sbb
ret
clc
arpl
pusha
sbb
addr16
add
pop
sar
jge
push
(bad)
sub
aas
lea
pop
xchg
sbb
sbb
(bad)
test
sub
and
jle
mul
jecxz
pop
aad
mov
cwde
mov
mov
loopne
in
fwait
or
adc
add
scas
push
and
push
pop
xchg
and
or
jbe
cmps
sub
cmp
jle
xchg
add
jg
shl
pop
jns
arpl
cmps
clc
pusha
(bad)
fcom
js
push
jns
or
cmp
cmc
out
inc
sbb
in
jmp
sub
jl
inc
test
mov
nop
mov
cmp
test
inc
mov
add
(bad)
mov
dec
ret
inc
sbb
out
mov
rol
inc
pusha
sub
out
daa
stos
or
or
sbb
add
add
in
fsub
cs
and
aaa
dec
and
dec
adc
mov
sub
cmp
adc
inc
cmp
cmp
cmp
inc
push
adc
cmp
imul
dec
mov
pop
add
xchg
int3
push
cmp
ror
jl
fadd
(bad)
push
jne
xor
fidivr
bound
outs
test
and
ss
in
inc
add
inc
jp
sub
cld
fdivr
add
cmp
inc
nop
ror
shl
adc
(bad)
enter
lock
jmp
mov
sub
mov
fisttp
and
pop
inc
stc
daa
sbb
cmp
mov
inc
push
xor
pop
push
push
lahf
dec
loopne
shl
push
dec
xor
mov
ret
add
dec
xor
jne
inc
adc
push
inc
div
pop
hlt
xchg
mov
pushf
arpl
push
dec
jg
jmp
and
(bad)
js
leave
(bad)
fistp
push
adc
mov
inc
rol
adc
cmp
add
sbb
push
push
loopne
sub
cld
sbb
adc
aad
cmp
push
ins
jbe
cmps
out
dec
dec
jmp
aam
pop
add
call
js
and
adc
int3
adc
int3
popa
xchg
out
mov
ror
push
mov
add
sbb
push
push
push
mov
cdq
call
jne
add
add
les
adc
pop
or
jb
xor
dec
jo
jl
js
and
inc
push
push
or
cmovno
cmp
push
xor
mov
loop
pushf
push
add
or
pop
ror
sub
jo
or
ret
(bad)
pop
adc
and
std
pop
inc
mov
add
ds
rol
scas
xacquire
jae
mov
adc
rol
pop
iret
cmp
sub
push
add
nop
jbe
or
dec
mov
adc
jl
adc
inc
add
cli
in
mov
icebp
ins
adc
lods
popa
imul
cmps
push
inc
cmp
jl
call
out
and
test
mov
pop
int3
cmp
(bad)
push
sbb
xchg
xchg
pop
pop
add
dec
loopne
or
push
add
push
pop
or
mov
repz
lds
jmp
adc
pop
sbb
js
pop
loop
xor
retf
cli
ret
or
push
adc
dec
push
mov
cdq
hlt
pop
jge
in
(bad)
inc
sub
sub
push
and
ins
mov
call
add
outs
arpl
xchg
scas
icebp
push
mov
ds
jp
xor
pop
shl
push
adc
push
test
xchg
pop
push
dec
inc
mov
repz
ds
add
jne
cmp
push
push
loope
add
or
sbb
(bad)
push
ror
xchg
mov
lds
cmps
call
push
inc
adc
lea
dec
pop
push
fbstp
sub
xchg
rol
shr
popa
sub
je
(bad)
(bad)
mov
pusha
mov
inc
xor
ret
ret
xor
int
into
fdiv
inc
call
ins
jnp
or
mov
cdq
fadd
repz
add
pop
adc
xchg
faddp
lea
mov
jmp
push
xor
xchg
shl
adc
lea
inc
mov
lock
mov
fcom
inc
push
lahf
fstp
or
mov
inc
push
add
rcl
cmp
pop
inc
pop
inc
cmp
pop
clc
jb
stc
sub
inc
emms
std
loopne
adc
ss
icebp
int3
das
(bad)
sbb
ds
sbb
adc
sub
cmp
xor
dec
cmp
inc
cmp
inc
adc
dec
xchg
jl
je
jmpw
dec
push
sar
inc
sub
xchg
add
sbb
mov
es
mov
in
or
add
fst
push
inc
mov
add
and
xchg
rcr
mov
js
xchg
(bad)
pop
test
mov
mov
ret
jbe
scas
dec
push
lock
add
dec
loope
inc
nop
cmp
ds
or
(bad)
jo
fsubr
frstor
mov
xchg
or
add
mov
(bad)
xor
fcom
add
and
push
xor
iret
inc
jl
and
xchg
adc
pop
cmp
xchg
fst
add
push
dec
aas
cmp
dec
inc
dec
inc
xor
inc
dec
cmp
cmp
push
adc
inc
aam
pop
inc
shl
or
dec
xor
je
ret
sbb
test
test
add
xor
mul
xchg
cmp
leave
sbb
adc
ror
cmovp
jg
add
push
inc
and
inc
(bad)
out
push
pop
mov
sub
inc
cwde
je
sbb
and
xor
je
nop
mov
push
nop
adc
outs
sub
mov
and
pop
pop
adc
shl
cmps
inc
xor
jo
les
xchg
jp
jge
inc
push
test
xchg
xor
scas
fiadd
(bad)
aam
scas
cmps
mov
or
mov
jo
stos
ja
and
daa
adc
mov
sahf
lea
fs
inc
or
adc
add
jge
(bad)
(bad)
jmp
sbb
retf
(bad)
out
int3
lods
adc
add
popf
add
aam
call
add
xor
jne
push
into
mov
loop
pop
jl
adc
jns
jno
inc
sub
fs
stos
or
xchg
test
pop
inc
adc
or
(bad)
jmp
sahf
adc
jl
add
push
in
aaa
in
jno
ret
test
push
add
je
ins
or
ins
call
leave
push
clc
pushf
int3
inc
dec
cmp
leave
(bad)
xor
imul
sahf
stos
mov
call
test
jl
jle
lods
dec
rol
adc
movs
daa
cli
fwait
xchg
jge
cmp
xor
inc
lock
out
mov
ins
addr16
inc
pop
mov
aaa
xchg
lods
dec
test
push
es
pusha
pusha
mov
pop
push
ins
fadd
xlat
xchg
and
push
sbb
rcl
loope
xlat
aas
mov
mov
cmp
mov
push
adc
hlt
ret
aas
cmp
pop
mov
pop
je
pop
lea
adc
cmp
mov
or
push
pop
mov
sub
inc
push
jo
sbb
cmp
sbb
inc
jne
arpl
imul
mov
push
cmp
adc
cld
inc
sbb
in
outs
jle
add
adc
cmp
ins
(bad)
in
xor
or
ss
xchg
in
add
cmp
xchg
mov
je
dec
cmps
lahf
push
pusha
arpl
(bad)
jo
add
mov
pop
clc
mov
inc
aas
cmp
sbb
or
add
(bad)
icebp
mov
dec
repz
jae
dec
je
mov
jo
shl
xor
fcomp
jbe
xchg
loop
stos
nop
hlt
cmp
jecxz
push
inc
pop
pop
and
test
cmp
and
cmp
or
push
or
add
adc
sahf
cmp
test
test
xchg
adc
dec
call
sub
ds
pop
pop
cmps
push
daa
test
pop
sub
jl
je
call
or
jl
jo
popf
cmp
imul
cmp
in
mov
jmp
xor
imul
sub
cmp
pop
loop
stos
cli
sbb
inc
push
aam
adc
test
sbb
jl
jl
add
movs
ds
mov
movzx
sbb
adc
add
add
hlt
mov
sub
and
mov
dec
inc
psrad
inc
mov
ja
xor
fdiv
sbb
mov
and
mov
and
cli
leave
sub
add
mov
add
into
or
push
loopne
outs
lods
sbb
hlt
jmp
and
adc
arpl
ins
dec
lea
mov
test
jl
mov
jmp
cdq
dec
sub
mov
popa
fidivr
sub
mov
and
enter
repnz
xor
or
add
inc
pop
xor
jg
xor
adc
mov
sahf
xchg
or
jl
and
in
dec
outs
stos
inc
sbb
imul
or
in
aam
ror
scas
push
popa
call
and
inc
sbb
ja
push
push
lea
sbb
adc
pusha
in
add
es
jnp
add
ficomp
and
rcl
mov
fadd
xchg
adc
xchg
(bad)
fisttp
inc
push
xor
mov
dec
nop
add
dec
outs
jae
and
jo
dec
rol
or
cmp
xchg
xlat
inc
dec
jbe
cmp
xor
in
loope
xchg
cmp
je
pusha
cld
test
(bad)
push
dec
mov
sbb
pop
aam
add
push
or
cmp
repz
loop
fist
inc
dec
jmp
push
lds
push
dec
jecxz
les
add
test
sub
loope
aad
jg
adc
mov
xor
inc
or
push
lock
push
push
imul
add
adc
enter
inc
popa
aaa
add
mov
add
jne
jne
pop
cmp
mov
xor
mov
push
ret
(bad)
or
adc
rol
popa
jo
rol
inc
jb
rol
fwait
sbb
mov
sbb
into
in
loopne
movs
sbb
lea
sti
cld
or
test
cli
dec
jmp
jge
inc
sub
sub
xchg
or
js
add
inc
ins
loope
vsqrtsd
sub
push
pop
(bad)
cpuid
inc
ret
ret
test
mov
es
loope
inc
push
cmp
pop
mov
imul
sar
inc
inc
mov
mov
mov
mov
push
push
mov
add
sub
sbb
aas
sub
or
mov
out
pop
imul
(bad)
xchg
sub
fld
push
stos
mov
in
dec
sbb
and
int
push
add
ficomp
sub
or
loopne
je
scas
mov
sbb
xor
loope
or
cmp
cmp
dec
dec
mov
test
xor
pop
das
inc
or
and
sbb
dec
loopne
test
inc
out
mov
xor
in
jnp
and
je
add
mov
aaa
pop
push
xchg
popa
iret
cmps
mov
xchg
lds
ja
jmp
mov
and
mov
and
lock
add
jne
inc
ret
sbb
xchg
data16
pop
inc
sub
dec
sbb
rol
or
mov
nop
clc
add
jne
stos
mov
dec
std
jmp
sbb
xor
(bad)
neg
inc
jg
test
add
push
outs
lock
xchg
xor
daa
pop
cmp
push
add
fnstsw
lods
aas
adc
cmp
push
xor
jmp
jl
and
dec
mov
imul
js
ret
mov
scas
arpl
fst
jne
fcmovnb
sbb
hlt
jbe
adc
(bad)
or
push
and
adc
ficomp
dec
push
pusha
push
hlt
pop
xchg
push
call
push
ja
adc
push
(bad)
pop
outs
popf
addr16
dec
ror
inc
adc
idiv
push
cmp
jle
repz
ror
cwde
sub
sub
iret
repz
and
and
push
outs
add
sbb
cmp
sub
jbe
and
(bad)
mov
scas
outs
mov
mov
loope
adc
pop
sub
sbb
pop
pop
and
push
pop
push
hlt
xor
sbb
sub
mov
mov
cmp
sti
push
pusha
shl
sbb
xor
mov
push
xlat
add
xlat
xchg
lock
rol
push
pop
mov
pop
int3
push
popa
add
pop
rcr
popa
add
add
mov
add
popa
ins
push
inc
jb
outs
adc
mov
xor
clc
dec
test
push
je
sar
lsl
add
push
test
ins
stos
mov
push
repz
mov
push
jp
je
aam
sub
sub
jo
lock
push
call
movs
mov
pop
and
shl
xor
adc
push
sub
or
push
inc
jl
jnp
xchg
test
or
hlt
movs
push
imul
sbb
sub
fisub
cmp
push
inc
ror
test
mov
sbb
fcom
inc
int3
add
sbb
loopne
inc
dec
jl
jl
adc
jo
jg
push
daa
cmp
jl
adc
jle
and
clc
mov
inc
sahf
push
xor
add
mov
jle
jge
dec
lods
loopne
mov
jle
push
test
aas
xor
xchg
sub
pop
inc
and
add
clc
push
or
jb
lods
jle
adc
push
xchg
and
test
in
sbb
nop
jl
or
test
push
sbb
nop
dec
pop
mov
pop
sub
push
sbb
inc
push
lea
pop
je
inc
pop
pop
pop
xchg
in
xchg
or
mov
xchg
(bad)
add
xor
xchg
ins
pop
push
inc
in
mov
lods
rcl
cs
xor
lock
dec
xchg
push
push
dec
mov
je
or
adc
cwde
and
adc
push
sub
mov
xchg
add
aaa
add
xchg
or
ins
bound
pop
sbb
int3
enter
mov
add
push
adc
enter
aas
or
sub
jae
pop
xor
add
ja
repz
jo
pop
add
jae
push
out
jne
mov
ror
fsubr
jo
adc
pop
push
(bad)
repnz
push
push
fs
xchg
out
imul
xor
add
add
cs
addr16
push
popf
dec
or
loop
ds
pop
cmp
mov
imul
inc
mov
or
pop
or
imul
clc
push
or
jae
jns
pop
je
or
and
cmp
pop
neg
nop
ss
push
mov
movs
add
out
fwait
lea
add
inc
jnp
imul
jne
aam
adc
mov
inc
lock
add
out
rol
hlt
js
inc
mov
xchg
or
push
or
dec
fisub
scas
mov
add
and
add
adc
cli
and
add
ja
pop
or
in
sub
dec
add
push
shr
dec
push
jo
add
retfw
inc
pop
add
mov
push
sbb
dec
xor
inc
sub
push
mov
mov
aam
getsec
pop
les
sbb
int
adc
aas
pop
mov
cmp
pop
or
sbb
data16
add
ss
stc
jne
lods
mov
xchg
test
push
es
pop
push
jb
mov
inc
lea
les
jnp
xadd
cld
xor
and
pop
iret
add
add
or
ds
nop
or
sub
xor
cmp
push
pop
dec
sbb
pop
mov
or
cmps
adc
dec
or
inc
mov
movs
(bad)
mov
or
push
xor
call
addr16
pop
dec
lods
xchg
sub
imul
aam
pop
add
fisubr
out
lds
vmovddup
adc
stos
push
add
lea
shr
cwde
loope
inc
out
js
gs
or
jl
rcl
add
add
jne
nop
pop
push
pusha
mov
nop
push
adc
cld
or
push
jg
cmp
adc
or
dec
bound
pop
(bad)
popf
adc
jmp
rcr
add
aas
add
xor
das
mov
add
mov
sbb
or
lea
or
les
push
push
bound
sbb
popf
push
imul
icebp
ja
out
fdivrp
or
push
rol
mov
lods
lods
scas
out
and
dec
enter
dec
popa
js
mov
bound
add
gs
imul
sbb
invd
pop
mov
sub
mov
movups
push
andnps
add
fs
cmp
pop
and
out
and
rol
imul
leave
jbe
fs
fs
data16
loop
pop
xchg
add
aad
xchg
cmp
xchg
or
mov
xchg
add
adc
mov
sbb
arpl
add
add
add
out
push
push
add
inc
add
add
pop
add
or
pusha
jle
xchg
and
jg
sbb
cmp
cmp
(bad)
push
ss
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
(bad)
(bad)
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
mov
sar
sar
sar
sar
iret
jp
dec
dec
jmp
out
ins
loopne
dec
(bad)
push
iret
jnp
outs
mov
ins
mov
addr16
push
in
cmp
and
mov
fadd
xor
shl
xchg
out
push
pop
ret
fs
iret
repz
int
enter
mov
rep
inc
les
adc
shr
add
ss
in
mov
sbb
mov
cmp
imul
mov
cmps
scas
retf
mov
dec
sahf
scas
int3
push
in
mov
scas
cld
outs
clc
cmp
lods
or
ds
mov
lds
mov
(bad)
push
mov
cs
cdq
push
cdq
(bad)
(bad)
mov
mov
stos
add
cwde
inc
push
stos
jl
leave
mov
sbb
fwait
mov
lea
aam
out
pop
add
inc
mov
jb
aaa
adc
add
mov
adc
popf
sbb
dec
fs
gs
sbb
aas
dec
mov
xchg
fbstp
and
cmps
movs
ss
repz
cmp
movs
stc
push
add
fisubr
inc
push
push
mov
sub
mov
lahf
and
call
dec
or
leave
in
retf
jg
inc
pop
dec
adc
add
shr
jge
jg
mov
iret
lods
je
ins
add
nop
scas
nop
inc
and
cwde
adc
test
inc
sbb
pop
dec
inc
test
add
or
xor
and
cld
dec
aaa
rol
adc
fcomp
push
jo
mov
jbe
or
outs
ja
imul
popa
imul
or
ja
inc
add
cmp
add
pusha
or
push
or
sar
mov
sbb
in
cmps
pusha
mov
outs
data16
and
movs
push
ins
dec
mov
mov
add
scas
cmp
repnz
les
retf
sbb
add
int
add
push
add
in
add
push
jmp
jl
dec
int3
xor
shl
dec
jbe
icebp
push
jo
add
add
ret
test
sahf
and
rcl
add
add
add
(bad)
mov
add
mov
add
sbb
sbb
mov
add
aaa
mov
mov
inc
mov
pop
mov
or
mov
mov
adc
and
jle
mov
clc
call
mov
mov
(bad)
mov
add
push
mov
xor
cmp
push
fwait
sbb
xchg
in
jmp
inc
inc
inc
inc
inc
add
sbb
std
(bad)
mov
(bad)
mov
mov
bound
push
iret
rep
mov
push
lock
icebp
sbb
lods
sahf
addr16
lock
pop
sahf
int
jns
rep
hlt
hlt
sub
jns
ins
cld
les
data16
(bad)
jo
dec
sbb
inc
rol
cmp
cs
rep
push
sbb
nop
lods
cli
add
jns
jno
icebp
pop
push
ins
jl
(bad)
cmp
cmc
cmp
fs
add
dec
add
out
jo
mov
hlt
add
loopne
jnp
mov
ss
mov
push
mov
fdivp
mov
xor
popf
addr16
into
shl
push
pop
sbb
out
ret
daa
stos
jecxz
or
cli
pushf
push
sti
mov
test
sbb
addr16
je
js
adc
push
mov
sahf
int
and
(bad)
cmp
clc
ss
xor
or
mov
xor
sbb
mov
add
xor
add
mov
data16
pop
or
pop
lods
inc
imul
pop
and
mov
or
add
imul
fild
adc
mov
pop
dec
push
push
adc
mov
and
pop
add
nop
push
lock
mov
and
add
push
sub
mov
fdiv
mov
push
adc
outs
fsub
mov
pop
movs
push
lods
or
cmp
nop
add
or
shr
test
sub
sub
pop
cmp
ins
les
shl
or
xchg
ja
xor
jno
mov
mov
sbb
mov
adc
adc
pop
add
inc
and
es
mov
jle
shl
mov
fnstsw
mov
push
cwde
je
call
or
popa
pop
xchg
and
sub
outs
mov
adc
ds
pop
inc
push
pop
pushf
pop
mov
out
add
into
xchg
(bad)
mov
nop
xor
nop
(bad)
fstp
or
or
nop
add
sub
aaa
sbb
sbb
dec
in
adc
mov
jb
push
inc
dec
cmp
rep
jno
vpmullw
into
repz
out
cld
or
push
and
ret
jmp
outs
cs
stc
push
addr16
xchg
jae
js
scas
popa
aad
pop
sub
jl
hlt
int
fldcw
cmp
aas
lods
cs
in
inc
fdivr
cli
xor
inc
mov
push
or
add
inc
mov
xor
lock
std
add
fadd
fst
hlt
push
sub
outs
push
into
pusha
pushf
pop
cmps
lea
cmp
mov
cmp
mov
mov
push
pop
adc
mov
push
adc
xchg
add
call
ret
jp
cmp
and
pop
sub
or
jo
xor
or
or
retf
adc
mov
outs
push
push
icebp
pop
sbb
fistp
mov
and
inc
jae
jmp
pusha
adc
ja
mov
jne
jne
xor
lock
inc
cmp
in
cmp
mov
adc
mov
inc
mov
mov
sbb
sub
mov
rol
jg
add
adc
pop
or
pop
sub
mov
inc
gs
ins
or
or
ins
aam
mov
cmps
int
or
push
or
in
jl
push
inc
push
inc
or
jb
js
jo
daa
or
mov
ins
popa
clts
dec
jbe
add
xchg
dec
outs
and
daa
dec
push
jo
imul
mov
mov
popa
push
sub
dec
mov
or
sub
dec
add
lods
rol
mov
lods
sbb
(bad)
mov
push
outs
daa
lods
and
or
add
xchg
or
sbb
or
les
in
jo
jmp
inc
retf
dec
push
jbe
push
and
and
push
or
xchg
movs
imul
pusha
mul
adc
xchg
in
mul
or
adc
out
sub
mov
push
mov
inc
mov
pop
popa
xor
(bad)
pop
dec
jle
js
add
and
nop
adc
js
lock
adc
and
cmps
or
sbb
rcl
ins
out
dec
mov
add
cmp
jl
jno
fisub
imul
loop
sbb
pop
add
imul
dec
xor
std
sub
js
pop
rol
dec
(bad)
and
cmp
xchg
rcl
test
or
outs
jo
outs
adc
or
xor
aam
pop
mov
iret
push
dec
jp
shl
dec
jne
(bad)
or
scas
or
jmp
mov
lock
aad
es
pop
push
ins
and
push
mov
or
cmp
das
mov
add
jp
movs
push
push
dec
shl
adc
xor
shl
adc
sbb
shl
sub
mov
sub
push
mov
adc
push
push
pop
push
adc
ffreep
jo
jmp
mov
push
cmp
arpl
fild
std
xor
inc
dec
xchg
fidivr
jp
add
inc
sub
sbb
sbb
inc
loopne
inc
(bad)
ds
jp
sub
cli
cld
ja
and
or
dec
pop
scas
xor
mov
mov
out
sub
sub
dec
mov
jne
pop
sbb
adc
pop
inc
jbe
cmp
or
sub
mov
or
xor
inc
int3
sbb
fcomp
dec
add
adc
jbe
pusha
ss
xor
scas
adc
test
div
(bad)
jmp
push
or
ins
or
push
aaa
fnstcw
sbb
or
stos
idiv
or
mov
xchg
sub
nop
rol
jmp
cmp
xchg
sbb
push
int3
add
popa
sbb
(bad)
jbe
ror
xlat
add
std
inc
mov
(bad)
call
xchg
sahf
inc
ret
fbld
retf
iret
dec
or
sub
add
(bad)
aas
adc
imul
xchg
test
ret
sbb
xlat
pop
push
push
or
add
loopne
hlt
jae
mov
or
(bad)
jmp
and
call
inc
pop
adc
les
aaa
sti
and
adc
mov
push
pop
mov
push
repz
push
fidivr
movs
dec
bound
pop
push
pop
pop
and
xchg
cli
scas
inc
inc
stos
jb
mov
iret
mov
ins
lods
or
enter
fsub
sub
test
or
ror
pushf
pop
movs
cmp
or
lods
dec
push
sub
addr16
and
call
pop
dec
or
adc
movs
mov
fdivr
cs
xchg
inc
sbb
xchg
add
xor
(bad)
jae
test
fcomi
daa
ficom
pop
adc
cmps
xchg
and
jbe
clc
push
add
mov
cmp
push
xchg
pop
adc
xchg
in
arpl
adc
neg
jo
add
adc
ja
inc
jmp
jb
jne
mov
jmp
cmp
push
pusha
or
enter
jge
adc
xlat
les
add
imul
sti
rcl
sub
push
shl
mov
shr
sti
sbb
xor
pop
sub
ror
and
not
add
adc
fnstsw
movs
inc
xchg
(bad)
inc
je
fild
fld1
cmp
gs
sar
inc
je
lock
ret
cmp
mov
lods
mov
repnz
sub
lods
inc
xor
sub
jle
jle
xor
and
xor
dec
ja
sbb
inc
aam
mov
(bad)
aaa
xor
cmp
les
push
icebp
js
sar
aaa
adc
in
sub
add
push
ret
add
adc
shl
js
fiadd
pop
push
int
aad
xchg
add
and
adc
lea
btc
mov
jae
pop
test
push
dec
dec
cmps
shl
push
repnz
call
sub
add
js
adc
mov
pop
add
push
ins
jns
sub
mov
adc
add
cmps
add
and
std
push
pop
rol
jmp
(bad)
and
(bad)
xor
jle
sahf
push
mov
jmp
pusha
adc
push
cmps
mov
daa
pop
xchg
or
mov
mov
or
sbb
mov
loope
and
and
shl
or
push
pop
aaa
xchg
adc
scas
adc
and
dec
mov
pop
div
inc
sub
test
ret
(bad)
cmp
xchg
inc
jne
and
cmp
pusha
in
test
and
lahf
cmps
cmp
push
outs
test
sbb
sub
cmp
adc
inc
jmp
div
cmp
push
adc
test
mov
push
push
aad
push
fild
inc
cli
pusha
inc
(bad)
outs
dec
push
push
pop
bswap
xor
inc
cmp
jne
(bad)
(bad)
mov
pop
imul
mov
sbb
adc
dec
xchg
loope
jle
sub
mov
pop
inc
or
dec
mov
push
xchg
sub
sub
hlt
xor
add
push
mov
jne
push
scas
(bad)
retf
mov
inc
hlt
lods
pusha
add
lea
push
pop
(bad)
jmp
xor
push
xchg
push
pop
and
jb
or
es
or
jae
ja
icebp
jl
mov
mov
scas
add
clc
mov
xchg
cmp
xor
aas
call
test
cmc
cmp
cmp
pop
test
adc
(bad)
or
ror
cmp
jne
cmp
push
dec
xchg
push
ret
shr
or
mov
sbb
push
dec
mov
dec
jo
mov
ins
inc
push
adc
mov
popa
out
sbb
xchg
cmps
es
lock
jge
sbb
cs
jns
into
sub
xor
mov
add
jmp
xchg
add
jmp
sbb
add
cmp
je
mov
and
inc
mov
xchg
or
movaps
mov
cdq
ss
or
cmps
nop
lods
ins
mov
test
add
pop
icebp
add
lds
mov
sub
or
mov
add
cmp
ret
mov
cmp
add
cs
push
test
repnz
std
pushf
(bad)
cmp
cmp
mov
cmovno
xor
mul
dec
and
or
pop
pop
or
(bad)
push
jb
int
pop
loopne
push
add
das
inc
sub
sub
sbb
push
push
jno
add
push
cmp
mov
test
cdq
pop
pop
and
lea
adc
lock
loope
xor
push
fild
and
ret
dec
out
sub
mov
mov
mov
inc
fld
inc
test
sbb
adc
fdivr
cmc
sub
out
xchg
pop
mov
scas
pop
pop
push
clc
push
mov
push
aam
push
fidiv
mov
mov
sbb
mov
push
pop
pop
mov
(bad)
lea
js
or
stc
or
enter
(bad)
pusha
jecxz
sahf
cmp
(bad)
es
mov
fld
stc
fstp
into
push
icebp
and
add
out
dec
sbb
sub
jle
xor
jns
sub
imul
push
push
sub
(bad)
ins
pop
sub
rcl
dec
dec
(bad)
dec
adc
ins
outs
jp
outs
jmp
sub
sub
mov
nop
aas
retf
mov
mov
test
sub
loopne
xchg
push
retf
inc
and
enter
dec
jp
jmp
adc
fadd
dec
add
jo
pop
jl
cli
mov
daa
add
and
arpl
and
jecxz
jns
xchg
jne
lea
jl
jno
fimul
jo
mov
adc
add
mov
imul
imul
retf
push
push
inc
rol
rol
dec
inc
jo
cmps
xor
mov
outs
sti
pop
mov
mov
push
dec
sub
lea
js
pop
dec
mov
inc
dec
pop
call
push
sbb
popa
pop
or
dec
sbb
in
fld
add
adc
sbb
push
add
sar
pcmpeqb
fiadd
(bad)
jne
mov
ret
sbb
fwait
sub
inc
(bad)
js
lahf
aad
xor
aas
push
add
inc
clc
mov
fcom
inc
mov
fwait
sbb
sbb
cmps
hlt
and
cmp
xchg
fsubr
xor
adc
loopne
or
mov
cmovl
clc
lahf
and
in
xor
mov
adc
inc
ins
cmc
in
mov
xor
cmp
ins
xchg
gs
sbb
jmp
and
or
loop
mov
pop
je
sub
xor
jge
ret
mov
mov
dec
dec
movs
pop
pop
outs
je
test
fidiv
mov
jle
loopne
push
cmp
out
add
cmp
js
mov
icebp
inc
idiv
xor
out
in
clc
sub
fsub
dec
xchg
jo
mov
or
xor
xchg
or
lods
adc
inc
jmp
mov
push
adc
in
xchg
or
aaa
inc
lock
dec
lea
or
mov
(bad)
ret
cli
push
jl
test
retf
not
outs
adc
mov
gs
mov
mov
mov
pop
ins
push
sbb
daa
push
add
adc
daa
je
fnsave
loopne
dec
ret
jecxz
ins
dec
addr16
adc
inc
faddp
push
add
jno
daa
mov
or
aaa
retf
dec
adc
mov
call
add
add
shl
movs
dec
sbb
out
xor
aaa
adc
and
cmp
add
jns
mov
add
mov
sub
dec
fimul
pop
pop
push
push
cmp
fbld
or
sub
lods
addr16
jnp
sub
out
bswap
cmps
adc
add
add
clc
ins
inc
add
outs
jb
stc
lock
aas
jnp
xor
xchg
dec
(bad)
jmp
jmp
add
inc
ror
sar
(bad)
ror
arpl
hlt
nop
outs
adc
imul
mov
nop
dec
or
push
(bad)
lea
fistp
inc
pop
dec
lahf
test
adc
push
sar
gs
ins
xchg
xchg
outs
sbb
jl
lods
fild
data16
adc
push
pusha
movs
add
or
dec
ja
or
mov
xor
pop
test
push
rol
dec
cwde
cmp
or
iret
pop
daa
arpl
add
rol
pop
pusha
xchg
mov
sbb
jo
test
imul
jns
bound
cmc
lar
or
sub
push
adc
neg
imul
addr16
pop
sub
pushf
clc
push
and
push
adc
xor
or
pop
or
pusha
mov
and
jecxz
add
mov
jmp
dec
out
pop
jmp
cmp
(bad)
int3
in
in
je
mov
test
jbe
push
adc
pushf
(bad)
jge
and
ins
ret
cmp
push
or
adc
movs
ins
dec
pop
je
push
into
xchg
movs
sti
jbe
cmp
cmp
sbb
dec
sar
or
add
out
shr
and
dec
add
sbb
arpl
pop
in
pusha
mov
xchg
xchg
test
xor
jbe
loopne
nop
add
add
jl
adc
lea
retf
mov
sar
mov
xchg
sub
in
mov
cmp
loopne
xchg
push
add
add
inc
imul
xchg
hlt
repz
and
mov
or
xchg
pop
cmp
dec
add
loope
xor
cld
push
bound
test
call
loopne
outs
cwde
mov
mov
mov
dec
or
lahf
js
mov
and
lea
push
cmp
outs
pop
dec
dec
and
push
and
lock
pop
movs
(bad)
call
shl
adc
syscall
popa
lds
mov
and
push
xor
repnz
and
sub
push
xor
mov
cmp
fadd
add
scas
cmp
push
pusha
pop
test
daa
mov
and
mov
mov
pop
sbb
scas
aad
sub
pop
cmp
je
or
and
push
stc
adc
pop
add
cmps
dec
mov
popa
mul
jmp
lods
sbb
add
jb
add
add
pop
pop
fiadd
inc
repz
and
data16
cmc
push
pop
sbb
cmp
(bad)
add
and
add
mov
popf
lods
add
pop
(bad)
pop
sar
pop
mov
pop
mov
xor
ins
cmp
into
xor
cmp
mov
sbb
mov
shl
int3
movs
sub
lds
sbb
pushf
mov
push
xchg
cmp
xchg
hlt
push
out
sidtd
xlat
pop
ret
invd
pop
pop
add
xchg
adc
mov
(bad)
xor
and
jno
mov
mov
fisttp
mov
aam
ins
xlat
loope
cmp
mov
cmp
sbb
inc
or
lahf
inc
setl
mov
push
aaa
or
mov
outs
popf
stc
ins
loopne
fwait
(bad)
sbb
push
add
je
pop
sar
pop
cmp
pop
xchg
aaa
bound
adc
jmp
or
into
pop
iret
test
push
fldcw
xchg
daa
and
mov
sub
jg
pop
in
jo
mov
enter
sahf
inc
shr
retf
mov
aad
test
or
ret
xor
cld
add
inc
daa
dec
dec
push
push
mov
aaa
cs
leave
xlat
lea
xor
sub
push
arpl
sub
ret
popf
psubsb
xor
pop
jb
and
cmp
test
and
dec
pusha
cs
dec
jmp
cmp
dec
cmp
or
js
loop
and
fcom
mov
pop
pop
std
nop
jmp
clc
fbstp
or
pop
dec
rol
je
jecxz
out
fmul
push
out
dec
sub
mov
out
ret
jmp
and
jne
cs
push
je
sbb
arpl
push
dec
mov
pop
dec
push
inc
push
pop
mov
or
and
push
push
(bad)
cwde
jno
push
xor
xchg
js
pushf
mov
fadd
ja
cmp
jne
jge
jne
rcl
or
or
xchg
lock
cli
push
push
push
test
arpl
mov
jle
dec
(bad)
retf
inc
add
add
and
inc
pop
and
aam
lahf
cmp
sbb
dec
js
inc
sub
test
adc
ret
cmp
xchg
pop
sub
popf
or
add
xchg
sub
(bad)
jmp
adc
dec
mov
fwait
add
or
dec
sbb
mov
mov
dec
sub
loopne
js
pop
out
imul
cli
add
or
push
(bad)
xchg
jg
adc
jg
inc
aam
fwait
xchg
test
ja
or
sbb
inc
dec
das
sbb
retf
dec
xor
pop
sbb
or
(bad)
rol
xchg
(bad)
rol
in
push
inc
inc
retf
inc
dec
ins
jnp
add
push
xchg
dec
dec
mov
pop
add
push
inc
or
and
xchg
in
in
scas
aad
add
cwde
mov
jo
mov
pop
sub
lea
push
and
cmp
cmp
test
mov
cwde
adc
add
clc
call
dec
sahf
cmps
adc
lods
daa
or
xchg
cmp
cli
clc
dec
and
mov
push
bound
cmp
rcl
inc
(bad)
cli
cmp
mov
iret
repz
adc
or
(bad)
je
adc
ins
test
ins
push
(bad)
sub
or
mul
jmp
adc
loopne
xor
mov
lods
mov
mov
xchg
or
je
jno
lea
or
or
add
add
push
dec
mov
mov
cmc
movs
jbe
daa
ret
cmp
inc
mov
fiadd
add
lds
int
mov
ja
pop
and
xchg
test
sar
lea
inc
pop
mov
sub
cmp
xchg
add
mov
push
add
lods
pop
mov
add
push
sbb
or
adc
jle
pop
lahf
hlt
hlt
test
out
or
mov
and
stc
or
adc
inc
aam
pop
test
push
or
add
or
rol
pop
mov
sbb
adc
test
xchg
mov
or
push
sub
icebp
(bad)
and
add
jl
mov
or
pusha
or
(bad)
and
cmp
add
das
add
mov
mov
popa
inc
add
inc
imul
push
mov
in
adc
addr16
dec
pop
xchg
je
adc
add
sbb
mov
les
dec
or
or
pop
call
dec
outs
inc
adc
out
xor
pop
sbb
aam
loopne
sar
push
out
mov
dec
and
outs
pop
pop
dec
push
mov
add
or
loop
cmp
ins
add
aaa
imul
call
sahf
or
or
and
leave
mov
lock
lock
pop
test
and
ficomp
or
pop
div
or
xchg
pop
push
ja
mov
fs
pop
cmp
add
adc
rcr
cmp
mov
cmc
jge
add
pop
add
test
mov
xor
push
xor
ja
inc
add
push
sahf
inc
inc
cld
test
je
xor
or
inc
gs
jecxz
adc
push
push
mov
push
mov
sbb
enter
add
pop
call
xlat
xor
inc
pop
test
jp
adc
mov
mov
inc
dec
xor
inc
cmp
xor
lea
aas
cmp
mov
imul
mov
ds
and
adc
dec
sbb
out
cmp
je
jl
mov
xchg
inc
ins
jp
mov
(bad)
add
or
push
sahf
or
pop
jmp
mov
lods
adc
or
lahf
sar
and
xor
loopne
add
jl
adc
push
xor
mov
add
repnz
sahf
adc
push
inc
or
retf
(bad)
inc
aad
dec
sbb
inc
push
mov
ret
outs
cmps
sbb
dec
lea
adc
aaa
push
rcr
aaa
jo
nop
pop
leave
xchg
adc
pusha
add
push
imul
cmps
inc
add
push
mov
push
mov
aaa
adc
mov
push
xor
mov
mov
sahf
stos
add
push
or
mov
push
sar
in
or
xchg
std
jle
je
mov
push
cmps
xchg
pop
pop
sub
out
sti
ss
nop
cdq
sbb
mov
(bad)
mov
dec
not
nop
and
and
inc
mov
push
cmp
mov
jo
or
xchg
pop
pop
pop
or
xchg
dec
dec
inc
pusha
pusha
cmp
data16
data16
shufps
(bad)
mov
fild
jno
add
fs
pushf
mov
ja
or
jmp
out
sub
push
push
(bad)
ror
and
and
sbb
push
pop
sbb
daa
pop
and
xchg
jno
cwde
outs
xchg
js
add
or
pop
les
or
shl
add
ret
xor
inc
sbb
mov
lock
or
test
rcl
ret
dec
into
test
div
test
or
(bad)
pop
sub
mov
pop
mov
sbb
add
adc
test
arpl
pop
addr16
enter
add
loopne
mov
fs
and
dec
xor
push
pop
mov
jnp
add
add
mov
jbe
xor
push
addr16
fcom
sub
das
mov
les
pop
cmps
xor
or
adc
ret
sbb
mov
push
pop
inc
ret
push
inc
imul
push
add
pusha
call
push
pop
sbb
lea
or
add
jge
mov
loope
cmps
jne
inc
test
xchg
adc
sub
xchg
adc
jmp
jl
daa
ret
xchg
xor
je
leave
pop
push
cmp
fiadd
inc
pop
mov
or
or
jo
ror
mov
mov
add
mov
(bad)
sar
out
jne
and
pop
call
shl
mov
fstp
adc
into
or
out
ja
cmp
cld
add
push
popa
inc
mov
sbb
dec
push
push
rcr
lock
(bad)
out
(bad)
in
adc
sub
xor
xor
sbb
psubsw
ss
adc
and
ret
jbe
adc
loop
sar
pop
cli
or
mov
sbb
xor
data16
add
mov
and
jo
sahf
inc
js
or
push
jecxz
inc
push
or
pop
fdivr
push
adc
test
(bad)
xchg
add
cmp
xchg
les
lods
inc
test
dec
add
aad
fwait
adc
ss
dec
jo
mov
aaa
xchg
jb
push
add
add
xchg
sbb
push
call
repnz
adc
dec
adc
retf
stos
hlt
lock
xchg
xchg
jmp
call
push
add
adc
adc
icebp
ins
lods
pop
adc
adc
and
sbb
sbb
mov
and
sbb
pop
dec
sub
lds
sub
ins
ins
push
loopne
jae
xchg
adc
retf
out
adc
adc
xchg
pop
fmul
fild
fsubp
xchg
ins
daa
sub
pop
enter
clc
fwait
lea
fst
outs
jl
mov
push
fucomp
adc
or
cld
adc
and
inc
pop
sub
inc
jmp
clc
fnstcw
cmp
jl
mov
push
sahf
(bad)
out
jle
push
mov
mov
jno
fsubr
inc
aad
out
shr
mov
lods
pushf
xchg
xchg
or
or
or
repnz
enter
inc
add
cdq
mov
add
das
fwait
xor
mov
adc
sbb
rol
cmp
dec
jne
add
add
mov
rcl
fmul
pushf
rcl
inc
sbb
fld
test
lock
neg
pop
lea
pop
bound
mov
loope
shr
or
loopne
mov
test
sub
xchg
mov
or
hlt
add
add
test
or
jg
lock
or
inc
daa
jge
add
ins
add
pop
jl
xchg
dec
and
xor
add
mov
pop
retf
test
or
sahf
jnp
jmp
sbb
add
aaa
push
pop
fdivr
mov
loopne
xchg
inc
repnz
hlt
sbb
add
sub
mov
shr
(bad)
sub
cmp
push
dec
dec
frstor
jecxz
test
sub
cmp
sbb
scas
push
(bad)
aaa
call
mov
cmp
push
add
lods
push
xor
jnp
push
xchg
sbb
arpl
xor
leave
(bad)
call
jmp
mov
rol
cmp
outs
or
adc
mov
xor
jne
push
inc
in
adc
retf
push
add
inc
je
inc
loop
jnp
inc
add
add
je
mov
imul
es
dec
addr16
ss
js
lock
or
adc
or
fmul
(bad)
sti
and
jne
ficom
fisub
jno
leave
leave
pop
fsubrp
xor
mov
imul
xor
or
push
fwait
imul
in
add
mov
sbb
xor
test
in
adc
mov
sbb
adc
fsub
and
xor
popf
mov
jmp
sbb
scas
push
pop
pop
mov
mov
test
int3
push
pop
cmp
xchg
add
xchg
mov
jnp
add
mov
push
jmp
fsubr
ret
stc
sbb
dec
xor
lds
cmp
mov
mov
push
lods
hlt
pop
(bad)
mov
sub
mov
inc
push
jmp
ret
xor
push
sbb
push
pop
not
lock
imul
push
mov
js
jne
pop
push
imul
stos
js
call
lock
hlt
pusha
mov
pop
pop
dec
sbb
jne
push
or
inc
push
loopne
ds
loopne
mov
popa
pop
jge
jae
xor
lea
xor
lahf
in
and
mov
sbb
xchg
mov
adc
imul
(bad)
int3
and
adc
xchg
jmp
pop
sbb
rcr
push
dec
push
ret
cmp
dec
push
pop
push
sub
popf
les
and
adc
or
xchg
xor
shl
adc
fcom
push
lods
xor
push
adc
push
inc
or
das
inc
mov
es
pop
mov
add
ds
mov
or
sub
jmp
pop
xlat
cdq
xor
and
and
clc
push
mov
lahf
cmp
jns
ja
add
or
daa
jo
pop
cdq
int3
enter
dec
dec
mov
std
or
int3
add
jmp
outs
sub
xor
sbb
add
dec
push
or
mov
lahf
push
push
je
push
ret
nop
shl
ins
(bad)
repz
adc
ror
adc
stc
out
cmp
add
push
sub
jb
cmp
or
or
push
loope
rcr
fstp
rcr
pusha
sbb
js
or
sub
int
sub
jge
rol
xchg
cmps
repnz
or
or
pop
jmp
clc
sar
jge
or
dec
xchg
mov
cmps
xchg
cmps
jmp
ret
sub
jo
je
aam
adc
inc
call
outs
push
sub
sahf
cli
dec
mov
jl
in
mov
mov
jmp
ret
adc
jae
addr16
jmp
in
vmwrite
je
add
inc
or
mov
dec
scas
jmp
dec
in
sub
xor
sub
push
mov
push
loopne
imul
push
add
sbb
loope
jp
ins
test
bound
cmp
cmp
mov
adc
outs
retf
inc
ja
xchg
pushf
jne
in
mov
mov
jb
adc
mov
sub
push
mov
repnz
ins
ins
sub
bound
js
add
pop
jmp
ret
aaa
or
sahf
and
(bad)
in
dec
xchg
sbb
mov
jmp
or
push
(bad)
jmp
xchg
push
adc
add
adc
inc
sbb
push
inc
(bad)
enter
or
rdmsr
sub
and
test
mov
push
aad
inc
mov
mov
and
cmp
push
pusha
mov
jno
sub
sub
push
jo
je
test
add
jmp
mov
outs
clc
jbe
or
das
inc
test
add
js
arpl
sbb
in
xor
xor
movs
int
xchg
jmp
add
or
sbb
inc
test
popf
les
pop
mov
sar
shl
adc
movs
xor
cmp
pop
lock
inc
pop
or
shr
xchg
sub
jbe
jne
push
jb
push
pop
add
push
jp
push
push
dec
sbb
mov
rol
mov
fidivr
fldcw
and
enter
ins
ins
mov
push
arpl
mov
fwait
in
add
sub
or
xchg
rol
ds
mov
mov
and
push
jns
rol
xchg
test
lock
cmp
dec
mov
das
or
add
sbb
sbb
push
inc
push
ds
mov
test
dec
shl
lods
fcomp
iret
ss
add
mov
ins
lock
adc
cmps
int3
sbb
push
in
inc
loopne
mov
push
push
(bad)
jecxz
xor
mov
fild
xchg
pop
adc
enter
and
xor
jmp
and
dec
inc
(bad)
ret
dec
and
addr16
(bad)
adc
add
(bad)
mov
mov
push
pop
loopne
gs
imul
cmp
jne
cmp
dec
add
jl
add
and
das
xor
or
and
iret
jl
inc
xchg
jns
pop
jge
(bad)
mov
ret
rcr
jo
nop
mov
dec
es
and
imul
jmp
dec
test
jmp
cli
fimul
push
mov
ds
(bad)
push
addr16
fs
cmp
sub
mov
(bad)
inc
je
aam
ret
pop
aam
push
leave
or
rcr
dec
or
jb
inc
scas
mov
imul
sub
shr
ror
adc
shr
pop
dec
xor
sbb
sbb
push
aam
xchg
adc
inc
in
outs
xor
call
sbb
cmc
stos
jmp
loopne
inc
lahf
mov
push
ins
out
outs
add
test
aas
add
adc
sub
pop
mov
mov
add
and
cdq
ror
leave
aam
mov
lds
fadd
(bad)
enter
push
mov
add
add
popf
mov
(bad)
pop
ret
mov
outs
push
repnz
pop
rcr
and
lods
mov
ss
push
dec
jge
or
dec
cmp
adc
adc
jle
adc
dec
movs
dec
or
adc
mov
dec
es
je
push
fmul
push
add
xchg
aam
fs
sbb
in
add
or
test
push
jne
popf
add
add
je
pushf
pop
push
inc
pusha
or
out
leave
inc
jge
test
fwait
outs
jl
imul
setg
and
jp
jb
xor
xchg
fcomp
jo
or
cmps
popa
les
daa
or
sub
or
xchg
movntps
mov
push
repnz
xchg
mov
and
or
mov
movs
push
aad
cmps
jl
test
pop
sbb
mov
ror
shr
xchg
mov
add
or
xor
cmp
out
pop
pusha
cmp
cmps
mov
and
push
in
outs
push
inc
cmp
mov
push
ins
xor
add
std
dec
pop
(bad)
ins
ret
dec
jb
xor
adc
aam
jo
xchg
in
jecxz
pop
xor
inc
pop
cmp
adc
clc
ret
dec
daa
pop
inc
dec
or
xchg
or
add
jmp
cmp
adc
rcr
pop
xchg
or
sbb
fdivr
addr16
jo
gs
cld
xchg
push
call
cmc
(bad)
xchg
adc
push
xor
dec
dec
or
ret
or
lock
aaa
add
mov
sub
pop
ds
push
and
sub
fdiv
mov
sub
test
mov
xor
xchg
rcr
adc
or
xor
dec
rol
jo
push
ret
jo
push
xor
dec
and
iret
sbb
cs
xor
and
(bad)
dec
bound
pop
mov
pop
ins
loopne
mov
sbb
push
int3
push
clc
cmp
mov
mov
les
inc
push
cmp
fs
add
jecxz
xchg
hlt
cmp
lea
or
in
add
dec
push
movs
mov
add
add
test
add
push
adc
mov
loope
inc
bt
inc
lods
xchg
jl
cmp
sahf
ins
leave
inc
jb
aas
sub
xchg
pop
and
xor
push
jb
inc
ret
mov
mov
push
ror
jno
lea
lods
enter
(bad)
xchg
push
nop
xchg
sbb
cwde
push
loop
inc
cwde
push
adc
inc
loopne
jae
mov
iret
inc
and
and
sub
arpl
add
and
mov
adc
scas
dec
and
and
or
add
sbb
fcomp
cwde
adc
sbb
mov
mov
icebp
sbb
jp
jo
js
add
cdq
ret
pop
mov
enter
scas
fild
mov
jmp
mov
push
add
adc
cli
push
add
jmp
lock
aad
mov
dec
or
cs
dec
loopne
sbb
nop
xor
xor
jl
xor
and
add
addr16
rol
je
add
jmp
bnd
sbb
push
aam
int3
sbb
adc
call
pop
icebp
movs
sbb
rol
and
sub
or
data16
push
dec
push
push
dec
adc
pop
xor
push
(bad)
xchg
inc
dec
(bad)
out
mov
sbb
sbb
or
fadd
(bad)
retf
enter
fisttp
sub
out
(bad)
fidiv
lock
mov
fmul
and
cmp
cs
stos
sub
or
aam
fimul
popa
cwde
push
push
or
inc
inc
push
hlt
aad
inc
retf
pop
mov
les
ror
mov
popf
pushf
fmul
sbb
(bad)
sbb
ret
mov
mov
push
push
out
pop
cmp
pusha
or
inc
movs
fistp
or
je
mov
rcr
jnp
inc
sbb
push
xor
in
xchg
inc
sub
or
sub
dec
sub
push
xor
push
jp
adc
xor
xchg
or
rol
call
xor
pusha
and
push
inc
jmp
adc
cli
out
jmp
ss
movs
aas
frstor
repnz
test
arpl
cwde
rsqrtps
push
sbb
in
add
or
cmp
popa
mov
dec
mov
lods
jo
pop
adc
add
test
icebp
mov
jge
and
nop
xchg
cli
or
sub
sub
xor
in
sub
ror
add
fs
fadd
lea
lahf
inc
inc
lods
mov
sub
dec
cmp
inc
mov
xchg
xchg
movs
mov
xchg
mov
cmp
call
xor
out
cmp
loop
mov
sub
lods
fmul
outs
gs
in
mov
inc
gs
push
jne
shl
mov
adc
sub
push
xchg
jl
add
cmps
cmp
pushf
dec
cwde
test
sbb
xchg
pop
test
mov
ret
imul
fist
shl
(bad)
nop
jmp
inc
pop
inc
or
cmp
loop
addr16
fst
imul
fdivr
jns
bound
pushf
inc
loopne
add
cld
inc
out
int
xor
mov
or
add
out
dec
add
test
cdq
loopne
scas
loop
in
bound
lahf
pop
int3
nop
addr16
push
cmp
and
xor
dec
mov
pmulhuw
out
jecxz
pop
mov
push
mov
sbb
jb
and
mov
mov
cmp
cmp
push
inc
setg
jmp
inc
add
das
(bad)
dec
dec
inc
add
cmp
setle
cmp
xor
movs
inc
es
dec
inc
pop
inc
ret
adc
mov
nop
ss
or
xchg
xchg
mov
imul
jl
ret
lea
dec
pop
push
inc
in
sti
lods
cmp
pop
inc
popa
jmp
fs
call
lock
sbb
xor
sbb
cwde
add
and
push
and
call
aaa
xor
or
mov
int
pop
or
adc
adc
add
or
inc
ins
xor
jmp
aaa
hlt
jmp
sub
iret
popa
mov
mov
ss
or
or
xchg
adc
xchg
retf
mov
call
fdiv
std
add
mov
popf
mov
xchg
add
dec
mov
jnp
test
shl
add
dec
sub
icebp
mov
or
shr
test
xchg
add
jl
or
inc
loopne
xchg
sub
cdq
movs
loop
xchg
pop
or
add
sahf
jbe
and
dec
pop
add
loope
xor
pop
add
imul
lds
scas
push
out
fisub
push
scas
and
shl
push
jno
and
in
arpl
enter
push
or
arpl
in
xor
fs
add
jmp
sbb
or
push
mov
movs
mov
ficom
xchg
lea
sar
sar
mov
adc
and
shl
mov
sub
sar
lods
or
cli
xchg
xor
lock
cs
ins
inc
cli
add
push
cmps
jnp
out
aas
push
addr16
mov
popa
in
push
sub
sub
movs
and
ins
adc
sbb
xor
push
pop
and
or
adc
stos
inc
pop
fwait
xor
lods
mov
out
sbb
sbb
sub
loop
jp
lods
lahf
pop
cmp
jne
jge
sbb
loope
add
mov
sub
or
movs
int3
clc
sub
add
jo
cmp
or
aam
and
adc
and
or
dec
or
dec
mov
cmp
add
mov
addr16
jo
jge
push
sbb
bound
jno
(bad)
sar
iret
mov
adc
outs
and
aam
pop
xor
pushf
xchg
xchg
xchg
sbb
or
into
ins
pop
cmps
jne
inc
jns
inc
out
daa
push
adc
iret
rcr
test
movs
adc
xor
fcomp
or
mov
jo
push
popa
jne
push
mov
nop
test
sar
vpmacssdql
mov
stc
push
bound
sbb
sub
lds
aas
push
xchg
and
jmp
push
rcl
xchg
xchg
mov
xchg
mov
inc
ss
aad
or
outs
shr
jns
enter
xor
inc
mov
div
pusha
and
es
out
or
iret
adc
test
shl
ins
gs
pusha
nop
jb
call
jne
jge
push
mov
stc
or
push
out
imul
loop
call
fisttp
push
push
pop
ret
push
mov
jne
and
mov
xor
jmp
repnz
xchg
outs
and
in
pop
test
mov
xchg
jmp
xor
inc
(bad)
aad
lods
push
and
xor
cmp
or
retf
dec
sub
fild
mov
xor
xor
push
dec
xor
jns
outs
mov
push
in
xlat
or
cmps
mov
pop
push
test
mov
adc
imul
imul
loopne
arpl
cs
cli
rcr
aas
adc
mov
enter
or
push
cmp
(bad)
push
dec
mov
lea
pop
call
mov
and
cmp
popf
mov
movs
or
adc
fstp
loop
or
fsubrp
inc
dec
add
xchg
jbe
push
adc
pop
retf
mov
into
jg
or
add
add
and
cmc
push
xor
xor
or
add
clc
daa
dec
call
pusha
lea
dec
xchg
imul
xchg
jmp
sbb
fidivr
movs
daa
mov
(bad)
(bad)
bound
fwait
xchg
jne
test
daa
pusha
rcr
addr16
mov
call
sar
push
ins
cmp
add
jl
shl
adc
jmp
jmp
adc
sub
push
and
dec
ss
iretw
ins
or
mov
aas
(bad)
mov
adc
jmp
lds
or
ror
mov
sub
adc
jne
arpl
xor
pop
push
stos
fldenv
test
add
pushf
ds
idiv
lds
inc
xor
cmp
idiv
mov
je
add
sbb
ret
pop
adc
inc
out
ret
ret
daa
xchg
call
xor
jmp
pop
sbb
xor
jl
ret
or
mov
ja
jb
lods
dec
xchg
mov
retf
rol
pop
mov
inc
ret
sub
or
inc
adc
mov
ins
dec
cmp
sub
add
and
add
pop
outs
popa
fcomp
icebp
ret
inc
xor
push
imul
std
inc
data16
sbb
das
or
add
rcl
imul
xchg
fwait
dec
xor
inc
hlt
inc
stos
and
hlt
push
push
jne
pop
or
xor
adc
mov
xchg
cmp
add
mov
nop
imul
mov
add
into
inc
or
push
push
jle
or
fstp
sub
add
dec
sub
xchg
or
and
or
cmp
mov
or
inc
adc
adc
mov
add
xor
add
in
sbb
xchg
jo
add
add
dec
aam
sub
ins
sbb
inc
or
pop
pop
mov
movs
or
frstor
add
jg
xchg
nop
mov
adc
dec
mov
sbb
pop
enter
push
inc
inc
jno
fcom
jmp
fadd
xchg
cwde
add
mov
nop
cld
jae
test
inc
push
sbb
(bad)
and
adc
ds
jb
call
(bad)
call
dec
call
cmps
add
retf
(bad)
cmc
inc
add
pop
xlat
inc
pushf
mov
xchg
popf
dec
mov
es
sti
mov
jae
cmp
and
int3
out
popf
inc
push
mov
(bad)
aas
push
add
sub
lahf
cwde
mov
fdivr
adc
cld
int
xchg
and
add
xor
cmp
sub
add
xor
mov
enter
stos
bound
popa
or
test
pusha
xor
not
and
mov
ret
fisttp
ret
lahf
jg
out
popf
mov
push
adc
mov
sub
and
ins
add
gs
cmp
aam
adc
dec
sbb
mov
cmp
pushf
movs
mov
(bad)
sbb
adc
and
fist
xchg
in
sub
fdiv
ins
pop
int
pop
add
cmp
mov
mov
icebp
inc
bound
or
add
add
ins
fist
mov
pop
and
sbb
stos
out
adc
and
pop
add
adc
jne
mov
lods
cmp
cmp
clc
cmp
adc
inc
cmp
cmp
inc
popa
jne
or
lea
or
xchg
cmps
pop
neg
xor
mov
inc
les
loopne
or
in
ins
loope
cmp
inc
cwde
xchg
call
fcmovnb
mov
lds
lock
mov
mov
jmp
ja
or
lock
pop
aaa
mov
push
aam
inc
or
push
sub
mov
push
les
inc
loope
ins
loop
leave
inc
xchg
dec
jecxz
pop
in
pushf
push
dec
rol
xchg
pop
call
push
sub
sbb
in
inc
pop
xchg
add
fidivr
fsubrp
fiadd
shl
fmul
and
pushf
sbb
inc
push
pop
and
inc
sub
icebp
and
sbb
leave
push
jbe
pop
dec
mov
sar
adc
xor
jne
out
and
inc
dec
(bad)
outs
lods
lock
js
(bad)
enter
loope
cmp
out
and
sbb
out
mov
cmp
cmp
dec
cmp
adc
daa
sahf
sbb
xor
or
ret
shl
mov
sub
sar
cmp
adc
inc
inc
nop
je
xor
jmp
dec
lds
call
call
pusha
push
mov
fwait
jo
cmp
je
enter
pop
nop
and
(bad)
and
into
xor
add
push
out
mov
push
push
pop
mov
sub
sbb
mov
sub
out
adc
sbb
rcl
icebp
js
mov
je
sti
xor
push
arpl
inc
mov
fdiv
scas
jecxz
ret
ins
mov
ss
sub
add
sbb
push
inc
test
jmp
les
out
sub
int
ret
mov
inc
dec
inc
jmp
push
mov
out
sbb
lahf
pop
cld
jl
stos
and
and
xchg
add
push
xor
stos
add
cld
add
push
add
push
inc
fisttp
or
lahf
inc
and
push
aad
push
xor
push
hlt
fisttp
inc
or
sub
push
inc
push
pop
pop
test
xor
mov
mov
repz
sbb
hlt
pop
arpl
jo
or
lods
xor
sbb
in
addr16
int3
dec
add
mov
sbb
xor
cmp
sub
aam
mov
and
cmp
mov
loope
inc
loop
popf
or
sbb
and
cwde
jmp
ins
or
pop
jne
ret
or
adc
inc
daa
mov
test
adc
cmp
push
fs
push
inc
xor
and
xor
inc
mov
rcr
inc
adc
inc
je
inc
imul
xor
inc
adc
push
cmp
sar
shr
adc
je
push
pop
loope
loope
cmps
outs
jmp
adc
jo
aad
mov
cmp
or
or
sub
movs
imul
cmp
jnp
adc
jmp
xchg
and
test
jno
cli
inc
sbb
or
sub
mov
ins
dec
iret
cmp
xchg
(bad)
pop
dec
outs
cs
je
test
jo
aaa
aad
adc
aam
inc
or
(bad)
cmp
lods
clc
jl
jmp
sbb
enter
sbb
add
and
mov
sbb
arpl
jecxz
cmp
push
and
(bad)
iret
add
push
sub
push
xchg
mov
or
in
push
rcl
into
dec
int3
inc
dec
cs
add
adc
jno
imul
mov
and
retf
and
or
mov
(bad)
cmps
push
cmp
stc
xor
mov
jecxz
dec
lods
push
jae
pop
test
xor
je
ins
pop
inc
push
or
sbb
inc
jl
sbb
dec
adc
imul
adc
ins
xor
inc
mov
mov
or
popa
jnp
dec
pop
fist
mov
mov
add
and
pop
ds
repnz
jmp
ficomp
ret
shl
cwde
dec
les
jmp
push
xor
pushf
sbb
pop
cld
mov
adc
jmp
or
xchg
cwde
call
or
xor
aas
mov
sub
and
imul
or
inc
xor
pop
lods
push
sbb
jmp
mov
ret
rol
jo
mov
push
add
mov
pop
inc
pop
add
cwde
mov
mov
rcl
push
push
xor
sar
mov
xor
jmp
push
cmp
push
and
sbb
push
fist
inc
push
xor
or
mov
int
in
push
sub
add
and
add
push
add
cmp
inc
dec
out
inc
pusha
sbb
fs
xchg
mov
lds
dec
or
into
add
loope
arpl
loopne
xor
push
jbe
mov
sbb
sbb
lods
data16
inc
imul
(bad)
mov
push
mov
add
inc
stos
pop
inc
pop
mov
repz
push
mov
movs
test
popf
inc
call
mov
dec
jb
dec
or
sbb
retf
xor
dec
unpcklps
pop
push
jbe
out
jns
mov
inc
adc
bound
test
adc
xchg
imul
fdiv
sub
in
push
xchg
jmp
push
cmps
push
cmps
call
dec
jecxz
shr
je
clc
clc
or
jmp
test
jp
inc
add
cdq
dec
rcr
sbb
sub
jl
neg
jo
sbb
in
test
test
inc
pop
and
pop
shr
into
mov
jl
setae
adc
jp
xor
ds
xlat
lock
arpl
add
sub
add
ret
cmps
xchg
pop
(bad)
fld
sub
add
add
jbe
pop
jp
into
inc
out
xchg
jnp
(bad)
mov
lock
(bad)
jmp
mov
add
mov
sbb
push
push
mov
push
sub
pop
lods
retf
dec
shr
cld
(bad)
out
movs
push
add
sbb
into
pop
je
inc
inc
lods
jns
jo
add
test
or
cs
inc
aas
sbb
pop
jae
lea
imul
xchg
xchg
inc
add
add
sbb
loop
test
iret
rol
js
es
inc
(bad)
push
aas
mov
inc
pop
nop
(bad)
aam
stos
or
xchg
and
push
and
push
in
mov
push
fbld
inc
nop
and
pop
daa
int3
test
pop
aas
call
pop
nop
inc
inc
xor
mov
movs
dec
fs
mov
add
xchg
and
mov
lea
push
dec
dec
and
enter
popa
pop
inc
bound
data16
sbb
add
test
loopne
xor
and
(bad)
jne
lods
xchg
cmp
mov
jno
cmps
adc
dec
push
cmps
loope
or
dec
(bad)
arpl
mov
add
push
pusha
dec
jl
pop
jecxz
mov
pusha
test
or
or
jne
inc
or
cmc
lods
std
sbb
sbb
into
inc
ins
shl
jne
adc
pop
adc
lahf
lea
in
sub
out
lock
sbb
pusha
pop
cmp
lea
lea
mov
adc
push
or
xchg
or
ret
adc
aam
mov
push
call
adc
repz
mov
cmp
fld
push
xchg
dec
(bad)
pushf
imul
sub
adc
cs
imul
data16
scas
test
retf
hlt
nop
in
icebp
fwait
test
lock
add
inc
rcl
inc
jnp
popa
loopne
je
movsx
jno
xor
sbb
test
mov
or
cmps
ret
pop
mov
mov
xor
mov
push
xor
xchg
xor
mov
vmread
rcr
div
stc
fs
fist
bound
xchg
pop
scas
test
dec
pop
clc
xchg
add
cmp
cwde
sub
fnstenv
paddb
add
adc
int
je
shl
test
dec
xchg
test
pop
jbe
adc
test
push
lahf
inc
jno
xchg
pushf
es
xchg
adc
movs
popf
div
sub
jmp
push
mov
test
rcl
ret
adc
popf
ret
sbb
inc
test
xor
adc
inc
popa
mov
adc
xor
mov
ret
sbb
mov
mov
inc
adc
push
mov
push
mov
inc
or
or
movs
(bad)
rcr
rol
je
pop
das
inc
stc
arpl
jl
mov
and
xchg
inc
lods
ror
fld
adc
ds
ret
pshufw
das
add
mov
push
repz
push
hlt
jmp
jno
adc
cmp
inc
jge
shr
or
inc
inc
leave
mov
call
cmp
push
cmc
inc
xor
xor
in
(bad)
jns
movs
shl
fimul
mov
aam
or
xchg
sub
arpl
add
shr
sar
popf
retf
stos
(bad)
inc
mov
mov
pop
(bad)
sbb
ror
and
inc
mov
push
popf
outs
adc
jl
xor
repnz
mov
daa
cmp
lock
repnz
and
or
mov
sub
adc
xchg
jne
add
ds
rcr
popa
and
sbb
lahf
in
je
mov
outs
mov
and
iret
adc
je
test
inc
shl
and
movs
dec
xor
(bad)
push
mov
dec
push
dec
pop
lea
ins
jno
xchg
xchg
shr
xchg
dec
les
and
jg
retf
aam
test
xchg
mov
add
aas
ins
lea
cmp
and
sub
sbb
xor
add
push
pop
push
mov
adc
mov
push
sbb
xor
or
ret
cmps
hlt
mov
xor
mov
sub
pop
add
xchg
push
enterw
lock
ja
or
dec
add
pop
imul
lea
push
int3
mov
sub
pushf
ja
hlt
jmp
xchg
scas
pusha
retf
dec
dec
add
sbb
cmps
fcom
pop
add
nop
pop
cmp
test
cmp
std
popa
adc
mov
test
inc
sub
bound
sbb
mov
inc
cmp
add
sahf
xor
mov
pop
sbb
push
push
mov
adc
fistp
mov
push
and
in
call
std
inc
mov
std
inc
fistp
xor
or
mov
or
jns
cmp
and
jge
pop
mov
xor
lea
or
(bad)
test
dec
sbb
mov
pop
cmps
sbb
add
ja
cmp
push
rol
and
stc
dec
test
add
adc
push
and
push
mov
dec
jmp
(bad)
arpl
xor
dec
and
xchg
sub
or
mov
push
adc
mov
cmp
adc
fnstcw
pop
inc
pusha
inc
loopne
add
ficomp
mov
mov
sub
push
dec
movs
loopne
push
pop
sbb
aad
rcr
push
mov
aaa
jns
cmp
inc
add
jo
fimul
adc
pop
shr
xstore-rng
cmps
inc
sbb
inc
pop
and
or
xor
cmp
xor
xchg
iret
mov
inc
cmp
mov
push
ret
stc
icebp
mov
lds
cwde
jo
dec
mov
int
into
mov
outs
push
and
js
hlt
cmp
push
cs
add
test
add
sbb
ror
les
outs
data16
jl
ret
movs
(bad)
and
fisubr
push
sbb
pop
push
gs
cmp
das
es
sbb
sbb
mov
sbb
pusha
jl
and
cmp
dec
imul
add
ret
shl
jb
xchg
out
mov
push
test
out
sbb
jg
movs
mov
push
mov
adc
fadd
repz
rcr
das
mov
mov
push
jb
or
mov
push
mov
scas
inc
mov
pop
push
into
xchg
and
jns
adc
dec
pop
cmp
rcr
aam
xchg
xor
fadd
or
dec
push
mov
sbb
ret
js
push
ret
gs
dec
dec
sub
dec
clc
dec
arpl
ret
jo
cmp
jae
and
outs
mov
es
xor
jns
dec
cmps
xor
loopne
and
je
dec
and
push
sbb
push
push
mov
adc
test
xor
test
cli
popa
femms
adc
xor
pop
ret
pop
jg
(bad)
sub
gs
sub
add
push
inc
push
ffree
push
cmp
jmp
mov
jmp
jmp
xchg
stc
(bad)
push
add
xchg
(bad)
stos
jne
mov
rcl
out
push
add
inc
mov
mov
adc
add
mov
ret
hlt
inc
cs
and
imul
pop
dec
adc
cmp
out
mov
inc
mov
jl
movs
jmp
ret
stos
push
xor
cmp
fsubrp
add
push
(bad)
(bad)
mov
inc
out
add
(bad)
push
add
xchg
mov
cmp
dec
aam
sbb
shl
idiv
lods
dec
add
cs
aas
enter
jmp
cmp
adc
push
cs
mov
push
push
adc
pop
jmp
add
jb
or
aam
aam
(bad)
mov
lods
dec
sti
add
ret
mov
mov
add
loope
sub
clc
xor
shl
popa
add
xchg
mov
pop
(bad)
dec
leave
xchg
dec
gs
sbb
jmp
add
iret
add
adc
cmps
movs
cmp
mov
(bad)
mov
mov
add
iret
mov
xor
jne
sti
aas
dec
xor
cmc
and
ret
aaa
and
addr16
scas
repz
sbb
add
adc
adc
clc
je
pop
sub
mov
push
shl
jge
inc
pusha
loopne
pop
popa
xchg
arpl
inc
aam
test
rcr
cmp
retf
inc
mov
inc
popa
add
cmp
mov
pop
test
mov
and
sbb
in
add
jne
jecxz
clc
test
mov
pop
add
mov
xor
xchg
jecxz
or
out
xchg
and
cld
arpl
je
xor
push
push
stos
cli
add
mov
sbb
jno
inc
pusha
cmps
push
xchg
push
repnz
mov
and
movs
xor
add
push
dec
retf
shl
or
out
movs
jmp
sub
and
jnp
ins
data16
aaa
mov
cs
adc
retf
dec
mov
jb
retf
jne
and
dec
pop
cmp
addps
fidivr
add
push
inc
adc
cld
xchg
ror
clc
int
xor
loop
call
mov
push
call
dec
push
inc
mov
sub
pop
test
rol
mov
inc
sub
je
pop
outs
mov
leave
adc
jo
jns
or
or
pop
out
xchg
sub
les
test
fsub
sbb
mov
mov
pop
mov
adc
xchg
sub
jle
and
jecxz
aad
sbb
push
aaa
pop
(bad)
sub
xor
xchg
lds
xor
inc
out
jo
and
div
xlat
jmp
xchg
mov
jo
jnp
or
les
les
ret
mov
dec
je
push
dec
(bad)
(bad)
imul
sahf
sbb
sub
jnp
js
aam
outs
xchg
loope
push
(bad)
xlat
cmps
loope
sbb
ret
jl
push
sbb
aaa
xor
cmp
pop
mov
dec
out
xor
inc
push
pop
dec
jp
mov
or
pop
mov
jmp
gs
repz
adc
xchg
(bad)
sar
mov
xor
or
push
test
or
or
out
mov
jbe
pop
or
bound
pop
push
push
add
adc
aaa
adc
jge
ds
ror
lds
out
push
jmp
aam
movs
add
and
inc
sbb
movs
sbb
inc
or
jne
mov
pop
mov
mov
adc
inc
xor
punpcklbw
jne
imul
xchg
(bad)
mov
or
pop
jg
mov
dec
xor
and
mov
repz
jmp
adc
clc
call
and
or
nop
or
shl
mov
dec
inc
and
lods
jo
sar
mov
sub
dec
jo
call
adc
push
or
adc
mov
es
cmps
das
repz
fiadd
mov
or
inc
push
gs
sbb
loope
js
xor
adc
in
ins
jmp
cmp
imul
movq
cmp
shufps
dec
adc
inc
fcomp
test
test
sub
xor
push
jp
in
inc
inc
addr16
fdiv
push
adc
adc
ds
arpl
add
jmp
in
(bad)
cmp
xor
jmp
add
sub
(bad)
fmul
movs
iret
je
mov
inc
mov
xchg
dec
mov
cmp
xor
push
sbb
and
push
push
cmp
push
cmp
out
pop
stos
xor
jg
xor
pop
pop
mov
mov
adc
or
adc
test
je
push
ret
add
leave
jo
mov
jae
adc
and
hlt
push
xchg
shl
and
jmp
add
jmp
push
xor
inc
mov
push
sub
or
mov
in
imul
adc
movs
inc
(bad)
sub
dec
xor
and
add
mov
mov
out
test
push
fistp
inc
mov
inc
and
xor
outs
in
scas
cmp
jmp
fmul
jne
test
or
sti
add
popf
mov
test
add
dec
mov
add
mov
mov
jne
imul
add
sub
push
cmp
cmp
push
lock
dec
clc
mov
ror
or
push
push
add
and
xchg
ja
xchg
scas
add
sub
les
call
adc
add
mov
dec
jge
add
loopne
mov
add
gs
push
loop
scas
ficom
mov
or
xchg
add
out
(bad)
(bad)
call
or
xor
add
rcr
and
push
inc
arpl
sbb
cdq
ret
iret
mov
test
push
mov
xchg
inc
mov
xchg
add
jbe
push
sbb
ret
mov
and
imul
adc
push
mov
or
imul
es
sub
add
imul
xor
into
sbb
sub
and
jno
fisttp
imul
call
mov
pop
push
jge
xchg
mov
outs
or
jb
inc
adc
cli
inc
jecxz
dec
dec
scas
sub
sub
jecxz
pop
inc
dec
in
or
ds
hlt
sub
push
dec
sub
dec
clc
clc
lock
dec
jae
imul
sub
sbb
xchg
outs
cwde
xchg
ror
fmul
fcomp
test
popf
gs
xchg
inc
bound
cmp
cmovbe
add
jnp
mov
bound
adc
test
nop
jo
mov
sbb
or
push
mov
xlat
popa
push
push
or
nop
fdivr
adc
xor
(bad)
cwde
cmovbe
jbe
cs
or
shr
sbb
shr
cs
jno
sahf
loop
add
or
rcl
add
(bad)
nop
mov
push
mov
mov
inc
test
iret
mov
cmps
fnstenv
dec
or
add
out
xchg
pop
add
sub
xor
push
mov
mov
or
call
and
sbb
mov
sbb
sub
pop
cmps
pop
fsub
loopne
adc
mov
cs
push
adc
add
fdivr
adc
repnz
dec
add
add
dec
sub
mov
out
push
mov
mov
push
adc
fmul
adc
ja
or
mov
into
adc
lds
add
(bad)
mov
mov
add
jl
aas
dec
mov
pusha
dec
xor
jle
inc
ror
pop
cmp
and
shl
int3
or
sti
mov
xchg
cmp
clc
leave
movs
(bad)
sbb
imul
sbb
push
jge
cs
add
add
pop
jmp
adc
mov
dec
add
jmp
push
adc
sub
das
(bad)
mov
pop
out
ins
pop
pushf
mov
pop
mov
push
jo
dec
lahf
in
pop
mov
adc
pop
scas
and
cmps
enter
dec
dec
and
add
mov
test
add
call
mov
fsub
ins
sbb
aam
ins
stos
scas
adc
sub
outs
cwde
js
cmp
inc
pop
int3
jo
xchg
leave
push
or
stos
dec
pop
mov
dec
pusha
sub
add
inc
cdq
data16
add
int3
(bad)
cmps
sar
sub
out
mov
xlat
in
loop
jno
inc
out
sbb
dec
mov
push
lock
ret
pop
cmp
add
jle
xchg
je
scas
sbb
or
mov
retf
and
cmp
xchg
mov
pusha
xor
and
sub
test
fmul
push
test
hlt
add
pop
scas
jo
add
test
ret
js
fidivr
adc
(bad)
push
mov
mov
loope
mov
arpl
pop
xchg
add
sbb
dec
js
jnp
lock
pop
mov
je
xor
add
rcl
or
lods
add
lock
movs
les
lock
inc
ins
xrelease
std
in
add
push
add
push
adc
movs
movsx
sbb
lods
mov
aam
or
mov
fsubr
sub
lods
aam
retf
aam
dec
repz
sbb
lahf
jae
aam
jge
mov
ret
jbe
pusha
cmp
aam
push
mov
xchg
xchg
xor
(bad)
int
and
push
push
jne
ret
pop
mov
add
aam
add
iret
cmp
pop
fdiv
(bad)
ds
adc
cmp
pusha
mov
dec
movs
push
test
adc
loopne
dec
add
cmp
xchg
lods
cmp
or
and
xor
push
data16
test
fs
je
test
in
nop
or
or
je
and
loope
cdq
aam
cmp
stos
dec
dec
jne
and
or
push
pop
push
inc
lea
mov
(bad)
sbb
add
xchg
cvtps2pi
dec
ret
pop
jmp
mov
gs
inc
inc
pop
lea
icebp
cmp
out
adc
adc
adc
aad
ffree
push
leave
lahf
jne
sub
xor
sti
daa
fdivr
sub
jae
inc
sub
and
nop
outs
sbb
or
or
sbb
(bad)
mov
or
scas
jmp
jecxz
add
test
ds
add
inc
jnp
stos
sbb
sbb
pop
pusha
sub
fadd
push
daa
mov
cmp
mov
pusha
adc
push
push
js
and
lds
fiadd
and
in
push
add
and
fild
mov
pop
add
(bad)
leave
leave
imul
and
mov
adc
imul
or
cmp
add
int
add
mov
movs
and
nop
pop
shr
xchg
add
ret
out
add
mov
fs
dec
sar
dec
and
adc
bound
or
push
sub
lods
test
jp
add
push
mov
rcl
xchg
fdiv
ret
call
mov
and
and
or
push
mov
or
inc
(bad)
(bad)
push
outs
or
(bad)
scas
lods
inc
inc
movs
sar
and
pop
push
hlt
add
pop
push
push
jne
rcl
movs
jno
test
adc
inc
cmp
pop
lods
dec
dec
lods
in
rcl
ins
addr16
pop
dec
add
repnz
jle
clc
dec
mov
add
pop
nop
fs
jbe
loop
add
jb
add
cmp
sub
loope
adc
xor
or
or
add
popf
sub
push
and
mov
cmp
dec
or
mov
add
sahf
push
mov
cdq
adc
add
push
add
test
add
mov
pop
pop
jno
lods
jmp
repnz
jno
mov
leave
pop
repnz
sbb
and
movs
mov
add
cli
mov
and
add
ins
jmp
ins
in
nop
push
jp
daa
aam
jae
cdq
push
inc
sbb
inc
xchg
out
sbb
movs
cmp
call
adc
hlt
jp
ins
ficom
mov
gs
cmp
test
adc
jmp
lahf
ins
jne
sbb
cli
and
arpl
out
inc
inc
repz
fs
add
cmps
add
sub
cs
and
xchg
and
lock
sbb
xor
pop
popa
and
push
dec
retf
imul
or
sbb
sub
adc
cdq
adc
inc
lock
push
sbb
ins
mov
mov
ins
imul
push
dec
scas
js
iret
lock
or
sub
xchg
adc
iret
ret
jae
jno
(bad)
sbb
pop
repnz
xchg
or
push
or
add
inc
in
popa
lods
jns
add
mov
adc
smsw
add
mov
popa
iret
out
mov
inc
add
pop
sbb
cmp
sbb
nop
push
es
lods
add
or
movs
and
xor
aaa
mov
mov
fimul
sbb
clc
push
in
hlt
adc
rol
add
pop
sbb
mov
je
push
out
or
nop
shl
xchg
iret
add
mov
movsx
jmp
mov
inc
sub
movs
mov
add
cmps
repz
adc
arpl
arpl
ret
sub
pushf
adc
ss
in
push
or
in
cld
adc
cmp
test
or
bound
test
ds
lock
adc
popa
jg
push
cwde
mov
movs
or
clc
ret
scas
fdiv
cmp
aam
loopne
pop
aam
into
pop
fist
xor
pop
jo
stos
pop
jo
push
pop
inc
inc
push
(bad)
hlt
push
jno
add
ret
fistp
in
test
(bad)
cmp
ja
je
pop
sub
loope
mov
mov
pop
test
push
retf
mov
inc
mov
xor
js
out
test
adc
mov
xor
sahf
popa
or
inc
pop
and
mov
push
fprem1
or
fld
jmp
jns
sub
sub
jg
aam
dec
pop
xchg
das
add
lahf
das
dec
pusha
inc
push
int3
pop
call
inc
cs
xor
and
nop
pop
retf
add
clc
or
retf
rol
es
push
sub
icebp
(bad)
mov
mov
daa
or
sub
in
je
(bad)
aaa
rol
cmp
ins
pcmpgtb
sub
dec
popf
test
sbb
adc
scas
pop
rcl
pop
mov
or
mov
pop
push
jmp
adc
adc
xor
mov
jne
adc
cdq
cwde
xchg
add
mov
inc
or
out
push
mov
xor
cmps
jb
pop
xor
js
cmps
ins
cmps
repnz
mov
jmp
mov
push
enter
daa
dec
inc
(bad)
xchg
and
out
dec
add
pushf
or
hlt
add
cmp
pslld
sub
jl
push
add
mov
xchg
xor
(bad)
leave
sbb
in
or
adc
mov
ins
mov
jbe
xchg
cmp
sbb
jne
sub
scas
dec
clc
(bad)
dec
add
mov
mov
xchg
test
mov
xor
mov
mov
sbb
add
outs
inc
ficomp
jmp
test
ret
jno
fld
neg
je
push
mov
je
inc
ds
daa
or
jne
and
add
into
inc
inc
lock
enter
push
cwde
cmp
(bad)
jmp
call
mov
fucom
lahf
adc
pop
xchg
sub
jmp
aam
push
jo
xchg
jmp
scas
pop
lods
add
popa
shl
rol
and
push
inc
cwde
cwde
mov
aad
js
test
fmul
sbb
out
mov
in
dec
add
mov
(bad)
pop
movs
mov
mov
add
aaa
aad
(bad)
rcl
ins
sub
addr16
das
cmp
dec
test
jecxz
adc
mov
pop
and
mov
add
push
dec
(bad)
(bad)
ss
and
mov
dec
xor
hlt
and
pop
out
mov
aaa
test
inc
cmp
dec
jmp
stc
sub
ret
mov
add
mov
cmps
cmp
dec
or
adc
(bad)
pop
mov
stc
(bad)
std
mov
je
loopne
pop
cwde
adc
jecxz
(bad)
jmp
sbb
into
push
add
adc
fs
dec
sbb
jp
push
test
ja
mov
pop
push
adc
loope
lds
fdivr
lock
jmp
dec
enter
mov
shr
pop
in
xor
adc
jne
push
cmp
pushw
and
sbb
inc
adc
add
fcom
jl
je
and
add
pop
xchg
add
mov
xchg
add
push
mov
add
push
jl
add
test
cmp
xor
xor
push
push
push
push
scas
imul
fst
ret
inc
scas
cmp
or
int3
and
mov
es
cmps
pop
or
and
jle
xor
inc
stos
mov
cmp
iret
jbe
mov
dec
dec
and
imul
ins
ret
adc
fbstp
jno
sbb
cwde
cmps
cwde
int
sti
dec
xor
mov
mov
add
xchg
and
in
jg
pop
sbb
sbb
out
xchg
test
add
pop
jno
jo
cs
or
and
push
lds
and
add
sbb
fstp
xchg
mul
add
fs
push
sbb
arpl
leave
and
xor
add
int3
popf
add
pusha
jg
or
iret
das
mov
jae
cld
cmp
cwde
in
fs
dec
ret
movs
xor
mov
fistp
sub
mov
dec
sti
dec
cmp
xor
test
cmp
adc
fxch
sub
rcr
sti
pop
(bad)
pop
jnp
or
xchg
ins
cdq
ins
dec
and
inc
xor
and
imul
or
add
add
ins
mov
or
inc
ins
push
dec
ins
jbe
sbb
sar
cmp
mov
dec
adc
ror
and
dec
ret
cmp
ror
test
je
movs
pop
aaa
or
xchg
inc
or
fild
leave
add
retf
rcl
mov
xlat
sbb
jo
xor
in
or
les
mov
mov
mov
(bad)
inc
js
ficom
ret
mov
icebp
sar
cmps
lea
nop
add
jp
inc
ja
daa
mov
in
in
jg
cmp
mov
inc
scas
shl
ret
pop
hlt
aad
into
or
mov
nop
inc
aas
out
cs
rol
test
xor
mov
cmc
jmp
pop
ss
inc
fs
mov
fs
inc
adc
inc
jge
sub
sbb
add
inc
pop
add
xchg
push
adc
lea
movlps
and
ret
xor
js
jmp
rcr
add
push
cmp
retf
xor
cs
mov
or
pusha
push
test
(bad)
sub
outs
or
fcomp
ins
mov
or
sub
cmp
or
xchg
movs
jg
push
mov
dec
jne
or
pop
inc
xor
test
pop
in
jmp
cwde
rcr
inc
int
(bad)
mov
dec
push
sbb
xchg
and
add
or
xchg
jle
sub
push
rol
(bad)
or
or
ins
or
idiv
add
sbb
clc
adc
xchg
adc
push
imul
daa
aaa
adc
sbb
rol
lock
mov
sbb
dec
push
js
pusha
mov
push
push
jmp
daa
or
inc
dec
and
inc
mov
xor
call
pop
add
sbb
cmp
xchg
or
mov
rol
adc
cdq
sbb
xchg
test
(bad)
scas
inc
dec
or
stc
cld
adc
lds
or
push
cmps
sbb
inc
loop
or
call
or
or
test
call
adc
aas
pop
adc
push
mov
into
pushf
popf
shl
or
jmp
adc
xchg
pop
mov
test
cmp
addr16
add
inc
sub
daa
mov
push
call
and
mov
ficomp
mov
neg
sub
pop
cmp
mov
cmp
or
mov
pop
lock
out
cmp
adc
jo
pop
push
enter
and
inc
icebp
mov
add
and
shl
cmp
sub
xor
std
jmp
mov
in
aad
dec
cmp
add
fdivr
add
cmp
shl
iret
mov
mov
pop
or
data16
aam
(bad)
clc
sbb
(bad)
jle
jb
cmp
xor
push
cmp
rol
add
aaa
mov
mov
sub
aas
sbb
adc
adc
add
jmp
ins
and
xchg
jg
aaa
pop
in
mov
(bad)
(bad)
jg
jnp
js
pop
jg
cmp
and
push
jl
sti
pop
push
add
loop
add
pusha
push
sti
jmp
popf
mov
cmc
xchg
jne
fistp
pop
jecxz
repz
push
sbb
idiv
xor
mov
dec
xor
or
call
xchg
xor
fild
loopne
add
mov
nop
(bad)
leave
pop
mov
add
sbb
add
clc
lahf
or
cdq
mov
push
jg
or
nop
pop
loope
sbb
pop
pop
sbb
push
icebp
cmp
xchg
fcom
push
dec
rcl
in
push
xor
add
mov
jnp
adc
jne
ret
push
loop
dec
add
popa
dec
or
or
popa
ds
adc
xchg
pop
popf
dec
xor
aaa
mov
and
and
add
mov
push
or
xchg
add
lahf
in
ds
or
inc
mov
pop
mov
mov
push
stc
push
sub
lahf
add
mov
or
sub
mov
adc
mov
jo
sbb
lock
sub
inc
cmp
lock
jne
sub
movs
loopne
ins
test
mov
mov
ds
push
add
int3
jo
imul
push
and
ins
pop
mov
xor
cs
add
and
mov
mov
jmp
sbb
or
jp
jmp
sub
inc
arpl
sbb
in
sub
mul
jo
pop
add
neg
inc
inc
pop
ja
icebp
jmp
cmps
out
push
sbb
bound
outs
fwait
inc
push
pop
jne
add
js
(bad)
repnz
sub
add
ins
push
shr
inc
push
add
ror
out
imul
adc
fcmovnu
pop
pop
sbb
sbb
mov
xchg
retf
sub
or
xchg
mov
xchg
adc
(bad)
dec
add
and
mov
aaa
xor
loopne
sbb
mov
xchg
nop
xchg
inc
enter
(bad)
mov
push
sub
sbb
push
pop
lock
inc
aas
and
push
test
push
jns
inc
sbb
or
add
je
cmp
cdq
and
mov
add
push
push
in
mov
ja
add
or
pusha
jb
xor
inc
fidiv
add
inc
aad
or
test
test
test
shr
repz
test
add
xor
or
cmp
jne
mov
sar
clc
in
add
sub
adc
imul
or
xor
xor
pop
in
push
add
or
sar
stos
adc
(bad)
xchg
mov
or
inc
rcl
mov
push
ss
cmp
mov
popa
adc
mov
pusha
cmps
(bad)
fstp
stc
xor
les
test
int3
adc
sbb
lods
or
and
(bad)
sbb
sbb
pop
add
xor
xor
cmp
sub
push
push
or
mov
cmc
mov
das
ins
inc
sahf
ins
add
or
inc
push
jp
mov
push
add
jae
fs
lods
dec
inc
nop
mov
mov
test
sar
jns
adc
(bad)
ins
shr
pop
or
fiadd
sub
pop
push
jne
add
mov
pop
adc
add
xor
adc
icebp
mov
push
inc
out
pop
xlat
push
push
(bad)
gs
iret
xor
dec
and
outs
dec
push
mov
jns
pop
and
ret
dec
pusha
xchg
push
and
addr16
pop
push
outs
sbb
cmp
push
js
or
sbb
mov
mov
mov
xor
mov
cmp
enter
push
out
jecxz
xchg
rol
xchg
imul
and
dec
cdq
dec
adc
in
mov
or
and
call
mov
xchg
aaa
inc
loop
adc
or
hlt
hlt
lock
hlt
push
test
cmc
inc
sub
sbb
xchg
or
jmp
inc
jae
scas
test
add
fdivr
dec
clc
push
pop
push
aam
sub
js
sbb
cmp
push
push
xor
adc
mov
sar
retf
stos
cmp
adc
neg
mov
or
sub
test
jge
je
jmp
mov
cmps
cmp
cs
push
pop
or
mov
out
sbb
imul
or
push
int3
sbb
jmp
pop
sub
and
sbb
sub
pop
call
sahf
push
rcl
nop
dec
jo
rol
das
pop
aam
sub
inc
sahf
mov
icebp
or
ja
dec
loopne
aas
add
mov
int3
or
mov
movs
push
(bad)
fs
add
sub
sbb
sbb
fisttp
jo
(bad)
sbb
push
adc
retf
adc
rcr
mov
push
jl
xor
fld
int
fsub
jle
pop
jecxz
rcl
lahf
sub
push
xchg
(bad)
mov
push
fld
push
inc
dec
fidivr
sahf
fild
dec
inc
adc
pop
adc
inc
sub
lock
dec
sub
pop
xor
add
ins
push
mov
cli
stos
rcl
retf
sub
(bad)
xor
shl
outs
adc
out
les
stos
cdq
adc
and
xchg
and
imul
les
inc
adc
popa
jns
xor
pop
inc
sub
or
add
in
daa
ja
lea
or
pop
in
in
dec
sub
sbb
adc
das
shl
test
test
cmp
fsubr
xor
cmp
adc
pusha
add
and
inc
cmp
sub
xor
sbb
lock
mov
or
xor
push
mov
jmp
or
sub
adc
sahf
inc
xchg
xor
pop
nop
mov
xor
data16
jne
mov
mov
add
mov
cmp
jne
pop
cs
out
push
loope
sub
dec
jmp
mov
or
xor
or
or
(bad)
push
retf
imul
mov
sbb
popa
cwde
loope
jb
push
pop
pop
lock
cmps
add
xor
icebp
inc
and
sahf
daa
mov
fs
xor
sbb
xchg
daa
mov
and
mov
push
dec
loope
rol
push
add
cs
mov
dec
pop
out
imul
xchg
cmp
sahf
pop
sbb
sub
adc
cmp
loope
mov
cdq
add
xor
in
daa
push
arpl
and
and
sbb
sbb
or
je
pavgb
push
push
or
ret
adc
in
cmc
mov
sbb
ror
inc
inc
or
ret
inc
test
add
xchg
mov
(bad)
cmps
lods
mov
cmp
push
lods
inc
ins
xchg
cli
or
adc
repz
push
mov
inc
jae
xor
push
adc
mov
or
sti
stc
mov
retf
inc
enter
test
push
and
arpl
jb
cmp
pop
cld
je
popa
cmpps
adc
sbb
in
adc
or
jle
aad
mov
and
mov
mov
inc
inc
clc
jne
push
outs
leave
dec
xor
iret
clc
dec
or
mov
or
push
call
lods
out
fistp
pop
mov
(bad)
and
inc
or
adc
mov
jg
jle
pop
or
sbb
adc
sbb
cs
inc
xchg
pop
push
and
mov
or
add
push
fidivr
lock
ss
adc
in
sti
ss
es
push
lahf
mov
jg
mov
sub
adc
lock
sub
pop
inc
push
and
(bad)
sbb
dec
or
rcl
pop
ins
inc
sbb
xchg
sbb
jle
pop
loop
mov
repz
mov
rcl
shl
jo
pop
jbe
mov
aad
dec
adc
cs
lahf
mov
mov
jmp
jbe
cdq
jbe
cs
lock
jp
(bad)
or
adc
jno
(bad)
sub
cmp
cmp
pop
fsub
add
cdq
jle
xor
pop
jmp
retf
mov
adc
mov
shr
mov
sbb
test
loop
xchg
stos
loope
ins
push
or
dec
cmps
push
ss
ret
retf
in
push
ja
nop
data16
adc
add
pop
call
push
test
js
mov
add
xchg
loopne
fild
push
test
ret
jo
or
dec
fadd
mov
nop
or
add
xchg
pop
ss
pop
popf
mov
loopne
call
or
dec
push
pop
repnz
mov
xor
sub
jmp
push
ins
and
adc
xor
retf
or
inc
dec
shl
(bad)
mov
push
cmp
jg
not
cdq
dec
stos
call
ins
mov
(bad)
xchg
inc
sub
movs
mov
push
or
scas
or
loop
stc
retf
adc
test
xor
add
xchg
lock
in
push
dec
jns
jl
cmc
imul
aas
xor
mov
bound
add
push
push
jae
lods
gs
pop
push
test
pop
js
arpl
mov
xor
jge
dec
scas
mov
jmp
dec
mov
inc
add
and
add
popf
hlt
xchg
sbb
ss
outs
mov
jne
cmp
lahf
sbb
push
dec
xor
mov
push
call
pop
adc
adc
mov
mov
or
fst
mov
add
jbe
push
pop
adc
sti
leave
call
lods
xor
and
daa
lods
retf
xor
sbb
dec
pop
test
loopne
and
push
inc
sbb
retf
xchg
inc
test
mov
adc
mov
fcmovnb
pop
sti
(bad)
inc
add
es
mov
and
scas
lock
add
xchg
and
movsx
dec
add
cmc
das
and
inc
xor
push
xor
push
out
outs
addr16
inc
in
mov
add
and
loop
cmp
cmp
cdq
jmp
movs
push
mov
daa
mov
(bad)
loopne
retf
repz
inc
loopne
fwait
jne
or
inc
bnd
add
dec
xchg
mov
jmp
add
ins
add
and
lea
lea
jmp
cld
sub
das
push
xor
cld
sbb
dec
inc
lea
inc
mov
push
sahf
xor
(bad)
xor
cmc
jge
daa
adc
movs
add
push
xor
fcmovnbe
or
inc
or
xor
pusha
pop
add
out
lods
mov
jl
xor
add
les
sub
jno
xchg
push
fmul
or
inc
mov
mov
(bad)
inc
adc
sar
push
add
adc
aas
ret
rcl
arpl
neg
gs
and
pop
dec
add
adc
push
push
and
push
sub
imul
je
jmp
popa
mov
or
inc
cmps
mov
cmp
bound
dec
push
int3
push
in
sub
mov
movs
jmp
(bad)
or
xor
pop
adc
pusha
or
or
cdq
xchg
inc
in
cdq
js
ds
fwait
pop
mov
sub
es
mov
mov
mov
push
out
cmp
cmp
test
mov
push
movs
cmp
and
nop
retf
clc
mov
pop
repnz
adc
nop
cmp
push
jb
xchg
or
movs
jl
cdq
pop
xchg
xor
out
inc
in
seta
or
push
xor
push
rcl
xchg
adc
ins
fadd
push
inc
gs
shl
push
gs
mov
cdq
and
movs
dec
adc
or
jae
push
loopne
mov
dec
and
jo
inc
test
mov
mov
inc
in
inc
out
mov
inc
xchg
dec
jae
sub
nop
pop
iret
retf
xor
fcomp
jno
es
ins
mov
push
mov
push
fist
mov
scas
jp
mov
push
int
mov
pop
ja
add
mov
inc
addr16
imul
jge
push
sub
je
mov
inc
xchg
mov
cmp
adc
mov
hlt
in
add
sbb
or
adc
mov
lock
adc
je
sub
movs
dec
loope
popf
or
loope
xchg
pop
cmp
(bad)
repnz
sub
mov
cld
and
and
mov
push
sub
add
and
sub
xor
mov
inc
xor
pop
pop
hlt
push
cmp
arpl
inc
sar
cmp
pop
cwde
adc
ror
adc
cmp
push
ins
mov
or
or
js
bnd
(bad)
into
xchg
xchg
xor
pop
aaa
clc
push
mov
shl
mov
and
sub
sub
cmp
push
mov
xor
push
dec
jno
inc
mov
add
aas
sub
movs
sub
mov
adc
xor
cmp
mov
nop
jbe
mov
mov
inc
sbb
leave
loope
(bad)
jmp
or
les
js
lahf
push
(bad)
xor
add
dec
and
mov
pop
iret
mov
aaa
ja
push
pop
cmp
jae
pop
add
dec
sub
cmp
sub
scas
add
push
xor
mov
jg
ss
(bad)
xchg
addr16
push
into
add
retf
sub
fwait
cmp
or
add
pusha
pop
and
enter
les
xor
add
push
cmp
loopne
clc
push
lock
add
push
js
push
push
nop
sahf
add
add
jle
add
mov
pop
lods
fild
lahf
imul
adc
lock
push
mov
adc
and
push
ja
int
inc
pop
js
gs
pusha
xor
inc
adc
cmp
imul
or
push
adc
cmp
adc
xor
inc
add
and
adc
inc
sub
ds
jmp
test
in
pop
pop
sbb
xor
mov
mov
imul
xor
or
or
xchg
push
xor
arpl
mov
ja
mov
sub
bound
inc
adc
mov
adc
inc
inc
pop
retf
stos
(bad)
cmp
inc
xor
jl
cmp
or
pop
jb
adc
nop
aam
in
and
inc
cmp
dec
and
sub
mov
cs
jne
dec
das
xor
pusha
lahf
loope
xchg
add
pop
cdq
pusha
in
pushf
sbb
pop
enter
cmp
pcmpeqw
push
or
pop
xor
ret
popa
popf
pop
push
or
inc
and
enter
jbe
imul
push
out
sbb
sbb
sbb
adc
sub
jnp
gs
in
jl
mov
add
movs
ret
mov
add
rcl
add
call
scas
push
push
cwde
retf
jp
mov
rol
aad
push
pop
mov
adc
add
pop
and
mov
sub
cmp
ret
mov
dec
rol
xor
out
jmp
or
dec
popa
or
jmp
adc
movs
push
adc
adc
(bad)
cmp
cmp
movs
lea
push
(bad)
and
pushf
in
icebp
sub
xchg
xlat
arpl
jae
push
push
cld
inc
jp
add
or
sub
pop
je
xlat
(bad)
popf
jecxz
cmp
xor
cmp
ret
in
or
mov
lock
jnp
hlt
push
fs
lock
xchg
loopne
inc
sti
xor
adc
mov
clc
pop
pop
enter
stc
cmp
dec
inc
push
ja
sub
dec
sbb
inc
or
cmp
aas
mov
iret
jg
sub
shld
add
std
dec
and
adc
popf
sbb
dec
out
mov
xchg
mov
jae
pushf
xor
mov
inc
(bad)
or
les
dec
xor
sbb
jg
rol
movs
in
imul
push
add
or
mov
neg
dec
icebp
inc
gs
imul
ins
xchg
and
push
xchg
pop
shl
mov
mov
imul
add
push
xor
and
mov
inc
adc
and
add
add
cmp
adc
dec
push
mov
jbe
ror
push
pop
popf
dec
sbb
xor
pusha
inc
adc
add
out
add
sbb
mov
push
mov
jnp
adc
es
test
or
adc
push
repnz
gs
sub
inc
test
or
aaa
rol
pop
mov
sbb
adc
xchg
sub
icebp
mov
and
inc
add
cmps
in
cmp
or
push
xchg
scas
pop
out
inc
adc
fst
or
push
mov
sahf
mov
xchg
or
test
icebp
adc
push
in
sbb
xlat
ins
add
imul
cmp
and
leave
xor
repz
jecxz
ja
test
lock
sbb
lahf
adc
in
inc
jl
xchg
add
jne
hlt
fsub
add
div
in
popa
pop
fnstenv
sbb
jb
inc
lock
call
mov
inc
and
hlt
xchg
push
enter
repnz
and
mov
nop
adc
pop
(bad)
jl
mov
leave
call
mov
mov
sub
rcr
scas
xchg
xor
inc
pop
inc
mov
mov
cmc
push
inc
test
inc
ret
cmp
popf
or
or
jmp
lea
mov
stos
pop
repz
jno
add
and
ins
in
and
loope
xor
movs
ror
lahf
ret
sbb
mov
push
lods
or
pusha
shl
arpl
and
inc
pop
out
xor
cmp
(bad)
jl
pop
sub
dec
adc
cdq
inc
add
imul
shr
push
je
mov
mov
sbb
daa
test
fisttp
fdivr
add
mov
xor
cmp
or
inc
repnz
sbb
in
pop
dec
adc
inc
movs
mov
cmps
jmp
cmps
or
pusha
sbb
xchg
(bad)
(bad)
cs
(bad)
inc
fisub
mov
inc
imul
xor
dec
jns
or
sar
inc
ss
xchg
ins
sub
loope
lahf
pop
mov
push
aam
add
and
or
cmps
cmp
(bad)
out
scas
(bad)
xchg
test
in
outs
mov
cmp
mov
adc
stos
ss
add
sub
les
gs
dec
hlt
stc
mov
enter
(bad)
dec
clc
bswap
cmps
lock
or
add
push
sbb
pop
and
xchg
(bad)
sbb
sub
pop
pusha
call
adc
add
lahf
shr
outs
or
ret
inc
test
push
cs
lock
cmp
ins
in
fadd
and
mov
jne
repnz
add
fld
sbb
sbb
shl
imul
popf
push
(bad)
mov
xor
xor
jb
lock
push
or
and
jno
test
in
cmp
imul
popa
xchg
shl
xlat
sub
cmp
xor
call
loopne
(bad)
jmp
and
std
in
loope
push
mov
push
movs
cmp
rol
xlat
mul
or
test
in
repz
pop
sbb
test
xor
dec
in
arpl
or
dec
in
cmp
inc
cmp
loopne
push
pop
jo
vpmaxsq
or
loopne
(bad)
fild
fwait
inc
shl
xchg
xchg
push
ret
iret
in
and
pop
cmp
iret
mov
jo
jne
cmp
cmp
ins
xor
shl
fucomip
mov
(bad)
stos
xchg
das
test
and
dec
pop
jns
jb
pavgw
daa
push
xchg
add
lock
adc
sub
out
aaa
and
lock
jne
in
pusha
or
add
dec
cmp
scas
or
or
xchg
and
adc
push
dec
xchg
loopne
mov
sub
add
shl
jb
test
xchg
lea
leave
adc
mov
or
inc
add
lock
and
sbb
and
xor
rol
hlt
jp
or
(bad)
xor
cmp
jne
(bad)
dec
mov
cmp
fstp
popa
ins
cmp
mov
test
mov
mov
cwde
jae
add
test
das
or
jb
pusha
jae
loopne
xchg
cld
clc
test
je
push
outs
bound
sbb
inc
icebp
jae
lods
pop
test
cld
push
scas
and
cs
and
dec
sbb
adc
xor
cmp
pop
dec
movs
mov
out
jae
or
test
pop
cdq
(bad)
adc
pop
xchg
js
cmps
xor
adc
jmp
mov
add
dec
pop
cmp
ins
rcl
mov
xor
xor
xchg
dec
cmp
add
mov
je
cld
inc
repnz
movs
add
sub
out
xlat
xchg
pop
push
mov
(bad)
mov
push
dec
and
and
add
mov
xchg
push
add
cmps
pop
jl
(bad)
out
out
cmp
cld
inc
sub
or
mov
inc
and
add
ror
hlt
fisub
outs
pop
add
shr
ret
test
or
add
and
push
jbe
sub
pop
jnp
mov
pop
lock
add
add
push
pop
jnp
ds
push
sub
rep
ss
cmp
fdivr
jg
adc
fs
retf
lods
adc
pop
sub
sbb
add
jmp
shr
push
add
nop
add
push
test
sbb
and
dec
inc
add
or
ins
loopne
in
enter
and
add
sbb
shr
dec
add
stc
mov
add
out
(bad)
aam
ret
loopne
push
cld
or
jmp
in
pushf
add
jns
inc
inc
leave
iret
pop
add
mov
add
xchg
test
mov
dec
test
cwde
(bad)
cmp
repz
lock
aaa
mov
jg
push
shr
movs
or
push
adc
push
push
push
mov
jecxz
pop
xor
rol
fistp
pop
enter
or
dec
jp
xor
add
out
mov
aaa
mov
mov
(bad)
fadd
push
mov
in
sbb
add
xor
push
add
mov
push
jp
icebp
sbb
push
aaa
sub
inc
repnz
es
mov
aam
sub
xor
lock
fisubr
push
lea
mov
dec
bound
ret
cmp
(bad)
pop
sbb
adc
add
lods
add
aad
scas
sbb
pop
(bad)
(bad)
movs
jnp
xor
and
inc
or
loope
adc
cmp
int
dec
sbb
xor
cld
rcl
ficom
add
scas
and
enter
mov
aas
test
inc
add
jb
retf
cmp
mov
and
outs
add
gs
sar
call
dec
sbb
mov
xor
jmp
xor
stos
outs
(bad)
out
inc
js
sbb
sub
inc
cld
and
loopne
pop
ret
mov
cdq
mov
mov
enter
mov
cwde
daa
ror
gs
retf
push
aaa
cmp
adc
xor
xor
outs
push
je
cmp
jne
jle
sub
and
sub
jle
xchg
pushf
jmp
je
dec
lods
or
rcl
mov
fsub
or
jno
xlat
cmps
inc
cmp
xor
adc
imul
adc
arpl
ficom
fild
pop
sar
pop
adc
mov
xchg
test
push
xchg
iret
pop
inc
pop
dec
fsub
adc
xchg
adc
stos
pop
inc
call
(bad)
sbb
mov
sub
cmp
fwait
sbb
dec
scas
jmp
push
aad
rcl
pop
or
or
in
sar
adc
int3
mov
mov
mov
mov
aas
sub
enter
mov
les
enter
add
inc
mov
xchg
test
int
add
add
sar
push
ret
lods
pop
add
push
push
rol
imul
dec
loope
jbe
nop
add
sub
mov
pop
(bad)
or
jae
dec
push
fs
fisubr
ret
or
les
xor
jo
je
inc
fimul
popf
test
data16
mov
imul
mov
inc
dec
or
cmp
stos
imul
mov
popa
ss
push
adc
xchg
fwait
sti
daa
push
adc
mov
(bad)
dec
(bad)
mov
scas
fmul
fbstp
test
inc
addr16
(bad)
mov
add
push
in
std
add
sar
imul
xor
or
inc
mov
sahf
mov
adc
je
jne
fiadd
movs
out
jle
out
hlt
jnp
jae
xchg
add
movs
test
cmp
sbb
je
lds
clc
ins
repz
add
pop
mov
add
(bad)
xor
lock
adc
push
pop
fiadd
mov
pop
stos
jne
sub
adc
push
add
or
push
xchg
add
xchg
push
test
xor
push
daa
lds
push
xor
push
je
fdiv
leave
pusha
add
into
js
int
jo
add
cmp
je
jns
inc
sbb
pop
jb
in
push
cmp
sub
cmp
je
jne
das
enter
mov
int
out
mov
test
cmps
nop
dec
sub
mov
inc
fidivr
jg
test
adc
mov
mov
pop
mov
rol
repnz
push
je
mov
pop
mov
push
push
cmp
xor
sbb
ret
pop
sbb
nop
int3
mov
sbb
or
inc
mov
mov
aam
add
ja
sbb
mov
add
mov
inc
cmp
sub
sbb
or
lock
adc
sti
push
cdq
push
call
mov
jae
test
jl
pop
aas
lock
stc
add
enter
outs
dec
out
cmps
out
mov
mov
and
xchg
xlat
imul
pop
xor
or
(bad)
(bad)
sbb
cmp
es
pop
sbb
add
jmp
xchg
xchg
adc
xchg
cs
and
ret
outs
add
xrelease
push
dec
outs
aaa
xor
mov
sbb
add
scas
rol
outs
movs
(bad)
cmp
cwde
lods
mov
and
jne
ss
adc
je
mov
xchg
je
add
dec
sbb
push
sub
ret
and
dec
aaa
rol
add
lock
cmp
mov
sbb
sbb
in
add
sub
and
rcr
or
aas
add
ret
cmps
test
sbb
nop
adc
out
add
int3
dec
add
pop
or
and
aas
clc
loope
push
or
mov
ins
sub
cmovno
sbb
popa
dec
stos
inc
sbb
xor
jmp
xor
sub
xor
int
mov
sbb
push
xor
or
inc
adc
cwde
push
lods
int
enter
cmc
add
adc
rcl
pop
pop
push
ins
outs
fs
add
sbb
and
fidiv
scas
stos
or
aas
push
or
push
push
sbb
and
enter
lods
jae
sbb
xor
push
or
and
mov
adc
outs
mov
aam
xor
or
imul
mov
xchg
adc
jb
jbe
imul
or
pop
mov
aam
mov
xchg
cmove
jmp
sub
inc
and
call
leave
xchg
cwde
add
test
mov
push
aam
mov
mov
mov
mov
sub
lock
mov
int3
push
mov
sub
jo
mov
test
add
xchg
pop
xor
xor
sub
mov
mov
or
mov
dec
inc
nop
xchg
mov
jp
dec
or
sbb
sbb
dec
xchg
push
fcomp
xor
adc
pop
jle
rol
mov
push
bound
fadd
mov
or
or
and
fidivr
and
mov
pop
popf
or
push
outs
mov
pusha
retf
inc
and
pushf
push
inc
fldenv
add
ss
mov
mov
prefetch
xchg
mov
dec
push
mov
movs
sbb
out
mov
das
mov
popa
cmp
mov
sbb
ins
fisubr
dec
mov
add
ficomp
sub
clc
ja
lea
add
out
sar
cmps
add
lea
data16
dec
add
push
sbb
xchg
jne
push
or
jns
outs
loopne
loopne
fsub
js
or
push
xchg
mov
inc
mov
je
imul
jne
sbb
adc
add
call
enter
add
or
and
(bad)
retf
pop
popf
pusha
ret
inc
fmul
jo
addr16
adc
arpl
inc
fist
adc
arpl
mov
adc
inc
and
je
push
push
gs
cld
push
and
pop
ror
add
or
xor
and
and
push
fs
mov
push
jb
ins
popa
jb
or
mov
mov
sbb
shr
xor
pusha
popa
lahf
mov
push
adc
data16
and
inc
or
pop
ds
add
nop
test
sbb
inc
(bad)
adc
mov
inc
in
xchg
or
imul
mov
iret
mov
or
adc
mov
shl
mov
(bad)
rol
ficom
adc
jo
xchg
dec
mov
dec
add
mov
push
movs
(bad)
outs
loope
adc
dec
jae
push
push
push
dec
pop
frstor
mov
rol
nop
neg
fiadd
pop
push
cmps
jle
jmp
retf
pusha
or
or
aam
ret
push
movzx
xchg
mov
fs
pusha
fimul
inc
add
inc
scas
cld
xchg
pop
add
mov
add
loopne
ja
retf
add
sub
ret
jl
mov
xchg
inc
add
cmp
or
add
adc
add
retf
retf
adc
add
rol
int
jo
jns
aam
loope
in
cmp
clc
dec
in
inc
add
pushf
add
xchg
in
nop
add
cs
fcmovnbe
ins
ret
sbb
push
mov
call
ins
add
add
sbb
fstp
push
mov
push
pmuludq
cld
add
add
add
jg
mov
and
pop
add
add
add
add
and
sub
ins
adc
push
lock
mov
inc
mov
mov
push
push
inc
jle
or
out
push
mov
repnz
cmp
sbb
jmp
inc
mov
push
scas
jmp
call
sbb
dec
ss
fist
push
out
int3
ins
lock
adc
iret
out
dec
fdiv
cmp
sahf
addr16
hlt
dec
ins
sahf
addr16
ins
(bad)
lock
repnz
sbb
or
mov
fistp
stc
jo
ds
push
xchg
push
mov
popf
nop
out
fstp
fnsave
cli
lods
or
adc
push
in
hlt
dec
inc
push
aad
mov
sahf
and
push
pop
in
hlt
push
jmp
repz
and
mov
std
pop
retf
or
in
mov
pushw
mov
cmp
(bad)
imul
(bad)
int3
pushf
push
adc
or
push
or
cs
push
pusha
inc
sahf
pop
and
xor
stos
push
cmp
enter
xchg
pop
rol
jl
xchg
add
push
xlat
outs
aaa
ins
psubusw
sbb
push
lock
jb
and
sbb
or
data16
out
loopne
inc
loopne
movs
mov
jl
mov
jno
add
pop
or
adc
or
popa
inc
ins
addr16
xchg
dec
push
(bad)
fist
(bad)
xor
add
adc
loope
add
ins
mov
xchg
and
or
push
cs
ins
stos
add
leave
scas
dec
add
adc
adc
xchg
inc
aad
call
or
cmp
dec
stos
ins
pusha
nop
fadd
xor
sub
dec
punpcklbw
nop
stos
mov
sbb
sub
push
lods
pop
add
push
add
cmp
xchg
or
test
cmp
fisttp
retf
clc
sbb
or
adc
mov
inc
lds
cwde
pop
sbb
outs
sbb
xor
and
jns
push
sbb
adc
ror
push
mov
and
add
ror
pop
inc
or
xchg
mov
and
mov
sub
sbb
inc
leave
and
mov
ins
add
add
mov
sub
adc
cmp
out
mov
cwde
or
jmp
xlat
dec
or
push
sub
mov
imul
fldenv
iret
out
add
cwde
lods
sub
pop
jb
cmp
call
or
push
in
lods
jbe
xchg
out
xlat
ficomp
sbb
pop
sub
dec
ins
fs
jmp
sub
in
icebp
inc
pusha
fnop
das
push
popa
xchg
js
iret
dec
sub
sbb
push
cmp
fadd
fwait
xor
js
jae
data16
add
jecxz
mov
inc
sbb
jecxz
xchg
(bad)
xor
fdivr
pmullw
dec
xor
xor
(bad)
and
add
sahf
or
push
push
pusha
dec
scas
repnz
and
loop
or
ss
mov
mov
xchg
xchg
ja
cs
cmp
mov
xchg
(bad)
popf
out
cmp
gs
sbb
enter
(bad)
int3
pop
add
or
add
repnz
movs
push
jbe
jg
push
dec
movs
pop
add
rcl
or
mov
xor
dec
pusha
leave
ret
mov
jo
pop
cmp
xchg
sbb
cmp
das
dec
cmp
das
dec
mul
and
ds
add
pop
nop
fsubr
dec
mov
jl
iret
ss
mov
or
or
call
inc
inc
in
push
test
cmp
das
inc
add
mov
jae
inc
in
(bad)
add
fcomp
add
push
dec
es
enter
jns
mov
test
in
mov
ins
inc
xor
or
popf
inc
xor
dec
dec
popf
add
cdq
loopne
dec
or
and
dec
add
enter
and
in
mov
jmp
dec
inc
out
gs
add
pop
jb
fmul
cmp
sbb
loopne
push
xchg
rol
mov
xchg
call
pop
mov
inc
js
jo
inc
mov
adc
push
sub
inc
sbb
push
sub
popa
pusha
and
enter
sub
or
push
inc
mov
inc
sahf
fisttp
inc
inc
push
add
jns
pop
add
push
dec
adc
lahf
scas
popf
or
push
adc
cmp
sbb
push
add
push
add
rol
mov
(bad)
in
rcr
test
adc
test
pop
inc
enter
out
pop
add
inc
dec
mov
pop
scas
mov
imul
lods
pop
pusha
push
cwde
aas
jns
jns
add
aam
jmp
test
sub
inc
add
es
or
pop
(bad)
mov
loopne
js
jge
imul
mov
push
mov
mov
or
out
pop
sub
rol
push
xchg
push
mov
pop
cmp
or
add
xor
add
pop
fdivr
pushf
xchg
push
in
scas
push
add
push
ins
cmp
repnz
rol
movs
(bad)
cmp
popa
pop
mov
dec
jle
cmp
or
or
or
add
cmps
xchg
enter
cmps
mov
movs
movs
push
lock
cmp
fiadd
and
and
pop
aas
test
dec
push
andps
or
mov
ins
(bad)
popw
and
stos
adc
pop
test
pusha
jbe
psrlw
dec
das
test
fsubr
(bad)
and
ds
cmps
out
nop
rcl
je
mov
cmp
push
inc
popa
movs
scas
sub
xor
nop
mov
or
push
int3
xor
sub
adc
(bad)
dec
(bad)
lock
cmp
fs
cmp
je
adc
pop
pop
inc
scas
or
es
pop
data16
xchg
cmp
pusha
mov
into
jg
jl
push
pop
cld
popa
fs
add
int
jae
hlt
outs
push
ins
stc
dec
js
cmp
or
movs
movs
and
mov
xor
jo
out
dec
mov
push
push
sahf
add
stc
mov
call
ds
or
repnz
jmp
sub
xor
movs
cli
mov
das
ja
sbb
js
cmp
jle
cmp
ss
push
test
jne
out
ss
movs
jb
pop
mov
jmp
pop
ret
movs
stc
and
lahf
leave
btr
push
loopne
pop
imul
je
mov
mov
rcr
fwait
pusha
push
(bad)
test
cmp
mov
ins
xchg
cmps
and
clc
test
xchg
(bad)
pop
cmps
mov
ret
inc
addr16
mov
nop
in
les
cmps
mov
sbb
mov
xchg
mov
repnz
les
sub
adc
and
and
sub
cmp
fidiv
fsub
or
loopne
mov
dec
xor
sub
gs
add
repnz
xor
add
mov
add
adc
or
pop
jne
cmp
call
movs
cdq
add
pusha
push
and
mov
fcmovb
aas
test
sbb
out
adc
add
add
movs
mov
add
add
cmps
fwait
imul
add
pop
push
aam
leave
push
add
push
sbb
es
iret
xor
and
xchg
shl
lods
aad
fwait
add
push
dec
cdq
sub
je
gs
ds
sbb
cdq
sub
mov
mov
and
mov
dec
or
sar
test
cs
fwait
xor
and
or
sbb
not
ds
push
inc
add
mov
jo
and
daa
xchg
lock
popa
sub
mov
ror
ss
push
adc
xchg
or
inc
or
cs
movs
inc
mov
push
pop
lahf
add
sbb
sub
(bad)
and
hlt
add
mov
xchg
and
add
pop
mov
das
pop
inc
int3
dec
rcl
loop
mov
sub
icebp
cmp
inc
sub
add
add
aaa
scas
stos
fsub
inc
popa
cmp
loopne
push
push
inc
sub
or
push
inc
add
add
add
sbb
in
dec
fs
hlt
xlat
push
loope
(bad)
add
sbb
call
dec
inc
dec
mov
sbb
adc
xor
adc
mov
xchg
(bad)
jbe
test
rol
movs
jmp
add
inc
mul
cmp
cmp
cmp
sub
push
adc
sub
xchg
je
loope
cs
loop
adc
fild
lea
inc
push
inc
sub
(bad)
add
test
out
and
adc
popf
fs
mov
add
lock
sbb
outs
cmp
mov
sbb
inc
and
(bad)
dec
or
xchg
jge
cli
fidiv
adc
add
ins
lahf
outs
jg
add
sub
neg
jmp
arpl
rol
cmp
je
aam
nop
adc
pop
xor
xchg
cli
and
(bad)
loop
push
test
push
es
test
and
push
mov
int
mov
and
pop
stos
adc
fwait
nop
jnp
shr
movs
xchg
test
fld
loope
adc
(bad)
fdivr
push
pushf
sub
sbb
pop
jne
sbb
inc
ds
call
shr
jecxz
jnp
mov
mov
push
xor
mov
sub
rcr
push
inc
pop
neg
shl
push
cmps
sahf
adc
fld
jmp
jae
jg
xor
or
jmp
fs
fidiv
lods
movs
ret
mov
cmp
hlt
sti
leave
aam
data16
jmp
inc
inc
or
cmp
adc
call
retf
adc
(bad)
bound
fadd
call
sub
(bad)
mov
ds
rcl
push
lock
and
mov
adc
or
jmp
(bad)
shl
stos
movs
jge
aaa
and
dec
and
adc
bound
sub
dec
ss
push
add
gs
mov
or
je
ss
popa
stos
movs
inc
cmp
mov
pop
sub
push
sbb
inc
(bad)
mov
out
dec
imul
cmp
mov
and
lods
mov
cdq
daa
xchg
rol
inc
inc
outs
aaa
add
pop
mov
mov
inc
pop
in
mov
mov
add
test
adc
scas
test
js
out
fs
push
push
and
pop
sbb
mov
mov
adc
xchg
mov
or
mov
push
and
repnz
(bad)
jne
mov
sbb
dec
iret
add
popf
add
mov
and
je
mov
repnz
sub
xchg
dec
inc
pop
cli
dec
sub
sub
mov
cmp
sub
movs
mov
scas
jg
adc
add
xchg
les
xor
add
jle
jne
adc
push
add
and
add
inc
mov
or
dec
pop
das
dec
push
xor
loopne
sub
mov
sbb
inc
loop
mov
and
leave
add
add
cmp
sbb
sbb
push
cmp
outs
sbb
adc
dec
xor
ret
xor
push
jae
push
or
leave
int
push
mov
mov
push
test
jge
fst
sahf
add
popa
jae
mov
ret
mov
test
cmp
sbb
(bad)
pusha
loope
mov
cmps
hlt
call
xchg
inc
xor
lods
sbb
xor
test
dec
fcmovnbe
pop
add
sbb
xor
and
mov
inc
jb
cmp
mov
and
sbb
xor
push
sub
sbb
lds
xlat
and
push
mov
or
adc
dec
pop
test
and
push
mov
dec
aad
sahf
mov
clc
sbb
or
jae
lock
loop
and
adc
or
jmp
fwait
push
out
aas
or
adc
imul
not
mov
pop
mov
retf
mov
adc
stos
lea
rol
xchg
int
xchg
and
fs
push
mov
ret
addr16
fsub
inc
sbb
je
and
mov
mov
pop
inc
cld
pop
test
add
retf
mov
and
add
pop
mov
dec
loope
mov
sub
inc
lahf
mov
sub
xchg
and
or
and
lods
push
aaa
test
xor
arpl
(bad)
fld
and
xlat
fnstsw
jne
xchg
jno
mov
sub
inc
xchg
cld
sbb
inc
es
iret
pop
aam
add
jne
pop
or
mov
xlat
and
lock
xor
xor
cwde
out
aaa
inc
shr
(bad)
cmp
ds
les
or
out
sub
pop
push
or
xchg
aaa
inc
and
xor
lock
int3
add
add
sbb
and
push
in
push
or
pop
cmc
add
cmp
mov
mov
adc
scas
dec
jmp
cmp
or
cmp
mov
push
paddusw
or
cmp
xchg
rcl
pop
or
inc
add
xchg
or
stc
(bad)
lds
push
inc
mov
mov
in
scas
pop
jnp
xor
or
fstp
arpl
and
pop
dec
outs
pop
jb
inc
or
and
xor
xchg
dec
sub
add
mov
lea
adc
inc
scas
mov
add
xchg
mov
pop
loopne
cld
add
(bad)
scas
xor
xchg
and
or
rol
daa
dec
sbb
or
inc
add
or
sbb
xor
adc
test
adc
fisubr
lea
push
mov
mov
icebp
adc
inc
pop
fcmovbe
add
outs
or
lds
sbb
out
sbb
pop
and
mov
pop
push
jle
mov
(bad)
dec
ja
mov
inc
fcomip
xor
in
or
sbb
outs
sbb
xchg
enter
icebp
mov
pop
mov
jmp
not
mov
or
xchg
mov
jb
or
push
push
lahf
xchg
sbb
xchg
adc
sbb
cdq
(bad)
or
and
adc
add
aaa
imul
and
adc
and
inc
inc
xor
add
shl
lock
add
dec
je
mov
and
pop
xor
push
sar
mov
movs
adc
enter
cdq
add
sub
push
sbb
sub
movq
popa
sbb
jp
jmp
jns
or
fsubr
icebp
mov
inc
or
movs
add
shl
push
xchg
dec
sbb
adc
out
je
push
and
inc
mov
push
push
fisubr
or
pop
invd
pop
mov
test
stos
rcl
adc
and
loope
inc
in
mov
test
or
lds
push
mov
cdq
add
pop
lds
add
leave
push
xlat
(bad)
cmp
pop
and
les
mov
fnstenv
jae
mov
adc
fiadd
sub
(bad)
push
and
push
add
sahf
cmp
icebp
in
aas
test
mov
and
jge
push
je
and
pop
or
sahf
dec
jg
fst
pop
aaa
in
(bad)
adc
xor
out
xchg
fsub
or
mov
fdivr
cmp
pmulhuw
mov
cmp
or
inc
cmps
nop
sub
xlat
mov
xchg
icebp
test
and
pop
jmp
inc
xchg
js
inc
das
mov
pusha
adc
mov
lock
cld
add
jp
add
push
jge
inc
cmp
das
outs
pusha
out
in
push
daa
or
pop
pop
pop
adc
sub
hlt
test
div
rcr
lds
push
call
inc
sti
fs
sbb
leave
jecxz
imul
loope
cmp
sar
sub
dec
push
adc
cmps
pop
mov
rcr
mul
add
sbb
mov
mov
dec
add
adc
ficomp
mov
cdq
mov
out
shl
cli
dec
mov
rdmsr
jle
dec
add
add
lahf
push
jns
jmp
fs
jb
push
lods
rcl
sbb
xor
(bad)
movs
sub
push
xor
cmp
in
and
push
xlat
in
sbb
pop
ret
add
movs
in
push
push
mov
add
loope
rcl
mov
sub
cmps
or
gs
call
xchg
jnp
enter
hlt
add
iret
cmp
neg
inc
jb
nop
and
pop
(bad)
inc
aaa
sub
pop
jae
test
sub
cmps
ins
movs
add
sbb
adc
shl
daa
push
push
sub
ja
and
mov
lds
fidivr
sub
xchg
sbb
adc
xchg
dec
jp
jle
jne
shl
add
sbb
scas
xchg
sbb
in
js
mov
pop
mov
(bad)
jno
pop
sbb
inc
f2xm1
pusha
retf
cmp
push
(bad)
xchg
and
dec
jecxz
inc
out
mov
(bad)
sbb
push
xchg
fsubr
push
or
movs
(bad)
adc
and
das
inc
int
inc
in
fist
jo
dec
sar
inc
adc
sar
pop
ins
das
daa
or
adc
push
pop
push
and
add
pusha
ret
sbb
push
add
daa
enter
int3
jp
mov
lock
adc
fnstsw
jge
xchg
and
je
mov
push
push
adc
push
jb
sbb
leave
add
ins
and
sub
test
enter
test
xchg
rol
test
mov
pop
push
sub
test
test
sahf
or
sub
nop
xchg
xchg
cmp
test
xchg
mov
inc
loope
dec
xor
dec
xor
add
pop
mov
cdq
cld
cmp
xor
ror
or
shl
dec
imul
pop
aaa
ss
adc
sbb
test
enter
or
adc
xchg
xor
pop
test
jo
push
call
in
shl
into
aaa
fucomi
xor
mov
enter
fisub
ror
or
push
inc
xor
call
sbb
pop
dec
retf
pop
fild
and
and
imul
mov
push
push
sbb
lahf
icebp
jmp
cmp
in
in
jo
js
addr16
jp
lods
fst
and
sbb
mov
pop
mov
pop
cwde
xchg
cmp
sbb
adc
je
call
ja
pop
ins
sbb
cmc
push
pop
fwait
xor
xor
xor
xchg
sub
dec
neg
iret
add
xchg
(bad)
outs
mov
mov
mov
cwde
pop
push
mov
int3
enter
lods
xlat
frstor
daa
push
add
sbb
pusha
cmp
cmp
add
inc
pop
inc
or
pop
arpl
or
push
push
mov
mov
repnz
fld
dec
xchg
dec
call
scas
pusha
jl
mov
jmp
sub
in
scas
pop
xchg
sub
push
sbb
leave
lock
mov
sbb
adc
sbb
mov
pop
add
and
mov
repnz
(bad)
js
aaa
inc
rol
inc
xchg
stos
stos
mov
mov
mov
gs
jo
jp
movs
mov
jl
adc
int3
loopne
stos
popa
cmp
mov
xchg
loopne
or
mov
loopne
test
pop
ins
push
mov
into
or
xchg
jmp
mov
lahf
mov
jmp
and
pop
xchg
cmc
push
cmps
push
test
fisttp
(bad)
push
jbe
imul
jne
dec
add
sub
push
in
cld
ficom
sbb
and
pop
and
ret
lods
nop
jmp
xchg
movs
push
fstp
mov
leave
sbb
adc
sub
test
shl
pop
add
pop
and
mov
inc
jg
hlt
in
pusha
or
cli
movs
jb
or
jmp
or
test
loop
cmp
es
dec
je
mov
add
sub
add
pop
cmovge
xor
test
hlt
or
pusha
adc
(bad)
or
adc
sub
ror
ja
sbb
and
or
imul
cmps
pop
xchg
push
xchg
mov
sahf
sbb
mov
inc
nop
inc
push
movs
xchg
and
or
lods
and
pop
dec
cmp
shr
and
push
and
adc
adc
in
dec
or
inc
pop
shl
add
idiv
movs
lea
jmp
pop
sub
pop
sub
dec
jnp
sub
push
or
add
add
xchg
mov
cmc
nop
in
leave
in
clc
cmp
dec
pushf
pop
adc
hlt
call
or
in
xor
jo
in
mov
add
or
dec
test
and
inc
inc
or
sbb
mov
inc
ror
nop
add
je
js
add
cmp
add
pop
or
sar
sti
js
bound
daa
rcr
push
lock
dec
or
pop
add
adc
and
out
lock
add
inc
shl
cmp
and
shl
data16
and
xchg
or
dec
xchg
and
jg
shr
mov
lahf
fldenv
ret
xchg
adc
sbb
xor
cld
jp
and
inc
add
add
fs
inc
adc
jecxz
mov
loop
popa
enter
jbe
movs
rcl
sbb
dec
add
dec
jnp
in
xor
inc
scas
xchg
cmp
pop
cmp
push
sbb
add
pop
add
pusha
and
scas
xchg
mov
(bad)
scas
popf
cmps
test
sar
and
dec
inc
sti
ss
movs
add
add
inc
xchg
and
imul
dec
js
imul
jle
jmp
jmp
mov
lea
sbb
ret
sub
sub
pop
or
or
rol
mov
push
pop
inc
xchg
xchg
pop
aam
dec
mov
movs
aaa
int
mov
nop
test
dec
add
in
test
fst
mov
in
xor
jmp
push
sbb
movs
push
or
cmp
into
in
in
jo
add
inc
popa
jg
movs
ret
add
iret
push
adc
outs
mov
push
push
push
loop
bound
xchg
mov
jbe
add
les
add
daa
mov
out
mov
mov
add
and
jb
nop
test
into
es
push
icebp
and
imul
pop
pop
pop
mov
xchg
add
sub
xchg
gs
cmps
push
mov
test
in
jne
push
pop
sbb
int3
xchg
mov
mov
dec
ds
mov
jne
stc
add
dec
xor
xchg
or
pop
lods
adc
xor
mov
or
js
pop
fidiv
mov
imul
ins
push
mov
out
cli
mov
ret
popf
pop
mov
mov
(bad)
pop
mov
jnp
lock
adc
inc
jecxz
adc
inc
xor
xor
or
xor
adc
inc
pop
ror
bound
mov
dec
fcmovne
jmp
sbb
daa
mov
js
dec
inc
sahf
mov
rcl
movs
and
inc
cmp
retf
fwait
mov
sbb
sub
sbb
add
add
sbb
inc
jle
mov
cmp
lock
sti
jne
(bad)
or
pop
das
adc
adc
dec
dec
inc
rcr
or
ss
jmp
sbb
int3
cmp
mov
cmp
adc
jo
fadd
sbb
sub
and
adc
test
fisttp
sbb
sbb
lahf
jmp
adc
sbb
or
pop
and
add
pop
pop
adc
or
fmul
jno
xlat
movs
movs
adc
inc
movhps
add
xchg
int3
outs
add
add
hlt
jmp
jno
icebp
fdiv
scas
jnp
pop
mov
add
sbb
add
arpl
cmps
jne
push
stos
and
icebp
xor
call
cmp
adc
lock
ds
adc
imul
pop
xchg
xlat
sbb
add
add
push
inc
test
dec
mov
mov
mov
leave
sahf
out
test
and
jmp
jne
jp
repz
push
mov
in
mov
cwde
mov
mov
icebp
movs
cld
popa
push
sub
cmp
icebp
pusha
daa
fdiv
xchg
pop
nop
and
cmovl
and
(bad)
dec
ins
push
pop
ss
jne
jmp
inc
fisttp
sbb
or
mov
fldenv
push
pop
enter
and
mov
std
or
pop
push
dec
je
mov
push
mov
in
add
sbb
push
ror
jnp
cmps
icebp
test
iret
xor
shr
add
sbb
(bad)
cmc
rcl
jl
lahf
popf
push
pop
mov
data16
lea
add
mov
in
sar
cmps
clc
sub
adc
(bad)
into
pop
loope
nop
jo
push
mov
iret
nop
dec
cmp
popa
and
add
pushf
test
ins
pop
neg
push
fiadd
sbb
push
enter
cmp
sub
es
addr16
cmp
push
jo
rcl
adc
loop
add
sar
ja
sbb
push
bts
je
inc
jo
daa
fst
cmp
pop
mov
xor
sbb
fisubr
popa
add
mov
jmp
sub
inc
mov
pop
and
sbb
fild
fadd
retf
pop
mov
div
jp
add
mov
imul
add
inc
dec
lahf
xor
movs
inc
ja
add
jl
enter
lock
mov
push
mov
in
test
and
mov
cmps
fidivr
cmp
mov
int
add
aad
cmp
cmp
scas
and
jge
jno
and
bound
mov
jno
ss
adc
sub
or
dec
aam
imul
adc
push
and
xchg
test
pop
add
push
pop
push
jmp
cmp
hlt
dec
popa
inc
cmp
mov
add
(bad)
pop
mov
cmp
ret
loope
add
imul
jle
gs
sub
push
push
xlat
push
hlt
pusha
xor
xchg
add
add
lea
aaa
and
imul
fidiv
and
xor
inc
ror
xor
dec
adc
dec
in
adc
jl
mov
mov
imul
adc
inc
cmps
dec
sbb
add
and
test
loope
test
outs
or
in
xchg
mov
xchg
adc
jns
clc
jne
cmp
inc
push
sbb
scas
fiadd
jge
mov
cmp
or
lea
jecxz
mov
push
ficom
inc
add
sub
mov
mov
icebp
xchg
add
dec
jecxz
jb
xchg
push
and
repz
xchg
mov
mov
repnz
adc
psrld
rcl
sbb
pop
not
(bad)
idiv
add
jne
push
mov
rcl
jmp
out
dec
jmp
xor
xchg
and
or
lods
lea
mov
jo
sbb
push
jl
or
or
sbb
js
cmp
aaa
sub
mov
inc
xchg
xor
cmp
or
jmp
(bad)
add
xchg
loopne
mov
push
add
rcl
jo
fs
add
adc
adc
ja
ficomp
push
aas
add
push
imul
sbb
mov
out
or
jmp
loopne
inc
mov
pop
or
test
or
int3
ror
adc
push
push
or
jmp
rol
les
clc
and
pop
xor
cmp
dec
(bad)
(bad)
sbb
xchg
sbb
sar
inc
es
add
or
jb
cmc
push
push
les
out
push
and
int
mov
jp
je
popa
pop
(bad)
in
push
dec
add
inc
js
fisub
into
pop
cmp
js
push
jmp
and
inc
dec
adc
dec
inc
dec
sbb
dec
sbb
dec
push
mov
xchg
out
lds
in
daa
sub
push
loope
adc
xchg
jne
lea
es
mov
test
pop
dec
shl
call
dec
shl
sbb
add
retf
shl
data16
sar
and
sti
inc
popa
cmp
sbb
cmps
mov
xor
mov
push
cli
mov
nop
xlat
and
adc
test
scas
push
inc
add
test
mov
test
iret
je
push
add
sbb
push
and
dec
and
pushf
sub
mov
add
pop
retf
cmp
pop
jnp
inc
mov
jns
jmp
sbb
cli
stos
out
cmp
xor
cmp
je
pop
xchg
add
or
xor
outs
or
add
cld
mov
ja
paddsw
pop
add
cmp
out
lahf
stos
adc
sbb
sbb
xchg
and
fmul
fsubr
add
mov
dec
cmps
push
das
out
scas
nop
push
mov
adc
scas
add
mov
ror
clc
test
jge
(bad)
js
add
shr
mov
jmp
or
push
popf
sbb
les
mov
mov
cwde
dec
sub
dec
icebp
push
xor
dec
jmp
and
in
arpl
sub
leave
aam
(bad)
pop
push
repz
or
test
pop
int
push
jmp
fcomp
js
push
call
js
call
jl
pop
rcl
mov
out
js
ins
mov
mov
pop
jl
or
adc
or
and
mov
and
sbb
(bad)
sbb
bound
add
shr
mov
rcr
push
or
or
xchg
mov
mov
push
pop
scas
xchg
jno
sbb
cmp
pop
pop
popf
inc
dec
scas
xchg
mov
fst
sahf
out
icebp
loop
sub
adc
xor
shl
mov
ror
sbb
xchg
movs
mov
and
inc
mov
std
or
xchg
mov
mov
or
add
lock
and
mov
add
adc
dec
and
aaa
cmp
mov
mov
rcl
rcl
pusha
test
(bad)
push
add
clc
cmc
add
dec
push
and
(bad)
rol
dec
sbb
imul
iret
push
adc
nop
mov
not
pusha
int3
or
fistp
mov
cmp
inc
inc
je
jnp
and
cmp
je
xor
and
loopne
retf
jns
cmp
push
mov
mov
cwde
dec
xor
mov
mov
out
jmp
es
fisub
xchg
push
inc
xchg
cmc
xchg
and
out
out
push
cmp
sub
in
call
and
scas
gs
jno
movs
mov
inc
cmp
inc
(bad)
dec
scas
pop
add
leave
mov
es
mov
adc
or
xor
int3
xor
dec
xor
das
fs
pop
out
ds
sbb
aam
and
jno
sub
mov
pop
push
adc
movs
rcl
xor
inc
mov
or
test
xor
xchg
fstp
lods
xor
push
cli
or
mov
fcom
pop
dec
fcomp
fisub
pop
or
mov
xlat
inc
xlat
inc
lahf
loop
mov
(bad)
mov
cld
dec
jne
arpl
sub
idiv
arpl
int3
push
add
pop
les
shl
sub
out
sbb
pop
and
push
mov
aaa
add
adc
jbe
xor
xor
inc
mov
sti
jne
add
mov
movs
aam
hlt
sub
or
inc
adc
xor
adc
leave
and
sub
mov
or
repnz
popa
test
daa
lods
and
lods
or
loope
rcl
out
and
repz
scas
and
int3
test
sub
or
inc
pushf
mov
loop
jne
les
icebp
es
int3
mov
cmp
add
movs
lock
add
pusha
add
cmp
popa
add
pop
sub
nop
sbb
add
fld
lahf
adc
stos
nop
iret
adc
push
ss
cmp
retf
add
movs
mov
mov
fdiv
fwait
add
inc
(bad)
data16
ja
mov
add
pop
loope
lea
(bad)
ss
and
mov
adc
pop
adc
mov
je
mov
sbb
xor
ror
pop
inc
or
sbb
mov
mov
pop
cmp
and
hlt
and
sub
mov
ja
push
sar
mov
sub
cmp
adc
cmp
daa
loope
and
pusha
in
push
mov
call
push
xchg
pop
data16
jp
imul
mov
inc
add
inc
sub
or
sub
sbb
xchg
aam
call
dec
add
dec
inc
mov
cmp
aad
pop
cmp
mov
das
sub
ins
sbb
pop
mov
push
mov
fidivr
popf
(bad)
repnz
inc
dec
js
mov
xor
loopne
inc
push
push
mov
(bad)
add
mov
mov
push
cmp
pop
sbb
imul
jo
push
or
nop
jp
add
jae
mov
nop
or
cmp
je
dec
xlat
dec
in
addr16
dec
lea
and
scas
popa
inc
imul
cwde
inc
xchg
sub
adc
jmp
or
jno
cmp
sub
xlat
ins
call
adc
and
push
pop
or
sub
dec
jmp
pop
push
(bad)
nop
mov
sbb
xor
test
add
adc
jmp
cmp
movs
and
pop
inc
mov
adc
fdiv
popa
lea
pop
pop
add
stc
cmp
sub
mov
inc
aaa
pop
pop
cmp
and
pop
adc
jge
adc
dec
(bad)
and
add
mov
leave
neg
lds
ds
jo
ror
fistp
scas
inc
nop
jbe
mov
and
std
or
adc
leave
mov
or
add
cmp
jno
sub
jne
push
add
fild
xchg
outs
mov
jne
outs
adc
loopne
rcr
xchg
imul
sub
mov
and
sbb
push
dec
nop
cmp
pop
icebp
fwait
xchg
push
sbb
fdivr
pop
jns
mov
test
pop
je
leave
jo
fwait
xor
sbb
add
adc
(bad)
fsub
jmp
in
pop
add
xchg
stos
pusha
mov
mov
fld
test
inc
jl
cmp
sbb
rol
adc
sub
mov
add
ins
xchg
in
(bad)
(bad)
adc
mov
or
sub
fimul
pushf
(bad)
adc
sub
cmp
xchg
xor
shr
inc
arpl
push
jp
add
push
sub
dec
cwde
test
mov
inc
je
dec
in
imul
sbb
adc
std
add
or
aam
rcr
inc
and
and
sbb
ins
shl
movs
push
mov
icebp
test
add
sub
sbb
inc
cld
sub
xor
fadd
mov
push
inc
pop
inc
les
pop
popa
cmp
xlat
movs
sar
call
(bad)
add
sub
inc
dec
imul
or
add
jl
sti
gs
and
push
xchg
mov
ror
push
xchg
test
or
mov
or
(bad)
sub
jl
xor
xchg
test
or
mov
xor
or
test
popf
inc
pop
jbe
shl
bound
mov
cli
xor
dec
push
movs
push
cli
daa
nop
adc
out
or
je
xor
jmp
ficom
scas
pop
add
inc
push
(bad)
mov
jge
div
repnz
adc
test
jl
arpl
sbb
xchg
jmp
aad
inc
loope
rol
sti
or
gs
dec
mov
jnp
test
and
or
sbb
jae
add
jne
pop
loopne
lods
cmovg
pop
dec
sar
add
fsubr
rol
aaa
in
push
or
jmp
jge
sub
addr16
xor
pop
xor
arpl
jne
movs
lock
or
cmp
fcomp
sbb
test
dec
mov
xor
mov
jbe
mov
dec
cli
or
or
jo
cwde
hlt
dec
cmp
out
sbb
jl
jl
pop
dec
add
adc
nop
add
mov
adc
adc
or
dec
cs
(bad)
adc
dec
or
push
sbb
and
js
call
adc
adc
test
push
inc
push
test
add
mov
lods
add
js
xor
call
jge
out
test
dec
add
test
jge
push
pusha
rep
in
or
sub
mov
or
adc
pop
rcr
dec
lahf
loope
pop
push
rol
or
retf
pop
icebp
jl
jbe
cli
cmp
les
and
and
adc
jmp
das
fmul
test
push
adc
inc
xor
mov
dec
cld
sub
fisub
popa
(bad)
js
movs
aas
cmps
mov
dec
les
inc
cs
push
cmp
imul
mov
les
cmp
pop
stos
or
mov
pop
add
adc
sbb
add
xchg
das
push
push
cld
mov
xchg
(bad)
or
xchg
xor
stos
jne
push
and
pop
cmp
sbb
pusha
retf
mov
add
and
leave
dec
jbe
pop
ja
fld
out
test
or
cmps
retf
adc
sub
iret
cmp
mov
daa
loop
xchg
xchg
mov
push
add
add
cmp
inc
cs
xchg
inc
mov
pop
rcl
and
fnstsw
push
add
pushf
out
xor
mov
sub
xchg
add
inc
pop
retf
shr
retf
(bad)
fisttp
por
jnp
jmp
inc
add
pusha
xchg
mov
sbb
dec
xchg
inc
ja
inc
das
sbb
sbb
inc
pop
adc
jbe
or
or
mov
pop
add
nop
sbb
jmp
mov
add
sub
mov
inc
in
pop
loopne
push
add
and
shl
movs
and
pop
add
xchg
sbb
adc
imul
loopne
mov
adc
dec
movs
or
xchg
jno
fsubr
add
adc
icebp
fild
add
ror
xor
js
pop
push
data16
xor
js
aam
add
in
and
xchg
fimul
hlt
fcomp
or
mov
and
ins
jl
popf
add
and
mov
inc
mov
push
jge
aam
cmp
das
pop
or
dec
add
call
inc
mov
lods
in
dec
fld
sbb
jp
mov
adc
jecxz
lea
sub
or
test
adc
push
mov
mov
aas
sbb
mov
popa
pop
jl
cmps
add
push
iret
or
inc
bound
fdivr
dec
call
push
rol
lock
jo
cmp
push
ret
inc
lock
add
mov
mov
add
loopne
xor
mov
xchg
inc
add
mov
movs
mov
or
or
not
pop
ins
ror
dec
aaa
fadd
push
mov
lea
je
stos
popf
fs
mov
cmps
sub
fs
(bad)
rcl
adc
jne
or
push
fistp
pop
push
xor
add
cmp
pop
leave
cdq
mov
push
lea
dec
lods
nop
das
jne
pop
sub
fistp
fisttp
mov
push
inc
das
(bad)
pop
scas
in
movs
or
sub
sbb
sub
cmp
fwait
adc
pop
add
add
sbb
bound
pop
call
mov
push
push
call
or
shr
daa
dec
inc
enter
lock
push
xor
or
or
or
push
add
lock
dec
das
cmp
sbb
or
clc
adc
fcomip
cmp
test
add
add
mov
xchg
cmps
xor
dec
movs
add
nop
or
andnps
(bad)
jb
or
enter
jg
or
push
mov
lea
pop
push
call
and
int3
cmp
dec
ret
sub
pop
push
mov
pop
sbb
test
and
adc
rol
js
inc
loop
cdq
sti
or
(bad)
ffree
stos
add
mov
or
sbb
stos
imul
mov
jbe
adc
jno
fst
orps
push
nop
or
data16
sub
xchg
call
xchg
push
or
jmp
and
out
push
fiadd
add
outs
add
ret
js
mov
cmp
xchg
(bad)
sub
es
dec
cs
sti
cmp
in
call
inc
arpl
aas
adc
ror
div
fadd
xchg
or
or
jmp
test
xchg
or
dec
mov
add
jcxz
cmp
loopne
add
rol
add
out
pop
and
xor
mov
and
cmp
xor
test
sub
hlt
push
aam
xchg
pop
mov
pop
push
sbb
out
sub
or
mov
mov
inc
jp
xchg
fnsetpm(287
mov
(bad)
fiadd
sbb
dec
and
mov
add
call
pop
ret
add
xor
mov
pushf
push
mov
ss
pop
out
pop
mov
sbb
aaa
cwde
xchg
push
push
fsubr
add
rcr
or
pop
mov
sbb
pop
fcomp
xchg
jle
jmp
lea
arpl
push
mov
outs
js
sub
scas
movs
jb
or
jge
je
or
push
inc
and
mov
jmp
pop
ds
add
inc
cwde
outs
adc
cmps
lock
xchg
sahf
ss
or
int
rol
out
(bad)
jnp
cmp
inc
adc
mov
or
push
inc
mov
cwde
mov
xchg
add
add
sub
loop
out
sbb
outs
sbb
inc
push
cmp
cld
and
add
cld
adc
pop
jb
cld
test
setge
movs
pop
add
sti
test
xchg
not
or
cwde
or
in
sbb
or
xchg
add
push
sub
mov
add
adc
das
push
nop
inc
fistp
addr16
arpl
lahf
iret
add
(bad)
and
xor
mov
push
sti
stos
inc
sub
sub
pop
or
fs
pusha
shr
dec
ja
pop
add
jo
scas
dec
jl
adc
stc
and
cmp
or
push
and
sbb
mov
sbb
pop
pop
es
test
ret
pusha
jno
xchg
dec
in
rol
mov
cwde
mov
cmp
pop
js
mov
mov
adc
adc
imul
jge
mov
test
(bad)
cmp
cmp
dec
xor
xchg
push
or
pop
js
xor
mov
and
lds
mov
loopne
es
sbb
push
xchg
(bad)
(bad)
push
sub
aas
push
sbb
xor
(bad)
pop
dec
dec
and
and
pop
ins
cmp
(bad)
pop
test
xor
jne
push
push
mov
dec
jb
xchg
dec
dec
pop
mov
push
push
adc
push
inc
cwde
je
call
fs
xchg
cmp
dec
dec
in
iret
inc
add
test
inc
pusha
jmp
movs
ins
movs
mov
sbb
or
push
out
inc
or
ret
adc
sbb
add
dec
dec
or
push
call
loope
psubsb
inc
pusha
mov
in
pop
int3
in
cmp
jl
or
jle
mov
enter
mov
cmp
les
aas
dec
jbe
adc
mov
and
jne
out
inc
mov
cmp
dec
lods
jmp
clc
or
jmp
add
adc
jo
aam
mov
fs
test
shl
mov
pop
xchg
popa
inc
adc
xchg
mov
mov
add
add
xchg
sub
pop
outs
cmps
fsub
xor
adc
inc
xor
pop
pop
jae
sbb
test
nop
rol
push
inc
loop
pop
test
sub
lock
lahf
out
pop
adc
push
add
test
in
or
mov
cmc
call
(bad)
inc
dec
jo
iret
imul
fwait
rcr
retf
sub
mov
sub
cmp
bound
call
loop
and
xor
dec
sti
cmp
or
push
out
jno
mov
push
push
retf
xor
add
jno
jbe
pop
neg
mov
inc
sbb
push
jp
and
pop
push
sub
pop
cmp
mov
dec
sub
fist
in
gs
adc
add
mov
jmp
icebp
cmps
jmp
outs
add
sbb
sti
mov
stos
das
ins
shl
cmp
lea
clc
xor
int3
jne
mov
ins
retf
std
rol
xchg
lods
mov
push
push
pop
lahf
jmp
xchg
hlt
cmps
push
push
xor
cmp
push
int
push
dec
pop
outs
or
cmp
cmc
push
push
pusha
shr
adc
rcl
cmp
cmps
pop
scas
push
gs
push
div
add
inc
stos
mov
bound
xor
pop
push
mov
jne
cmc
jp
xor
inc
and
or
bound
fldcw
sub
cs
cli
mov
dec
cwde
mov
mov
das
push
mov
sar
and
add
mov
sbb
dec
or
ret
xchg
ret
and
pop
xchg
jo
inc
xchg
sbb
xchg
pop
aas
pop
dec
cmp
cmp
adc
retf
push
enter
test
outs
enter
xor
dec
call
sub
and
or
dec
and
(bad)
out
dec
inc
pop
add
xor
loopne
popf
sbb
icebp
or
retf
loop
sub
mov
iret
mov
or
not
xlat
add
or
sar
dec
out
popa
aaa
lods
jno
jb
retf
sar
jns
test
and
jmp
nop
dec
enter
pushf
shr
aaa
lods
mov
adc
sbb
(bad)
ins
(bad)
cli
mov
jecxz
jbe
vpshaw
sub
bound
dec
jae
das
inc
or
or
adc
or
push
mov
rcl
es
popa
sbb
dec
das
inc
clc
hlt
push
pop
int
or
mov
bound
sbb
cs
movs
jne
jmp
sbb
jbe
sbb
je
cmp
icebp
in
jmp
sbb
xor
pop
sub
(bad)
ins
sub
movs
or
mov
add
adc
push
or
jne
jp
cli
lock
imul
(bad)
push
dec
cmp
dec
imul
ja
sub
mov
push
aam
in
test
(bad)
xor
loope
sub
inc
sub
inc
and
inc
xchg
lock
sub
pop
add
bound
inc
jmp
sbb
imul
sbb
xchg
add
hlt
or
hlt
rol
gs
and
rol
popa
imul
cmp
mov
or
dec
pop
sbb
adc
clc
adc
mov
nop
inc
jo
xchg
mov
inc
mov
rcl
cmc
push
jp
dec
mov
and
cmp
sbb
push
in
iret
inc
or
mov
mov
push
mov
les
lds
lods
cmps
pop
sub
jge
xchg
jl
ins
fisttp
lahf
mov
rol
add
(bad)
test
loope
(bad)
out
pop
add
or
and
sub
push
xchg
or
add
lock
popa
push
addr16
pusha
movs
xor
add
sub
adc
add
adc
xlat
inc
ds
scas
inc
dec
(bad)
xlat
and
xlat
aaa
inc
sbb
ror
sbb
nop
(bad)
nop
cmpps
add
stos
xchg
shl
fcom
stos
out
xchg
hlt
out
mov
ja
ror
mov
sub
mov
add
adc
loopne
inc
or
dec
xor
cmp
dec
cmp
jmp
mov
add
sub
mov
sub
add
jns
inc
test
sub
inc
and
ret
xchg
iret
xlat
mov
jnp
mov
shl
push
es
mov
sbb
into
or
cmp
inc
dec
ror
mov
inc
and
ins
ss
inc
push
inc
mov
mov
push
rcr
xor
push
push
int3
and
rol
sbb
mov
outs
cdq
ret
dec
mov
mov
(bad)
pop
int3
adc
push
jbe
add
popf
popa
mov
xchg
inc
enter
pop
and
enter
pop
inc
cmp
xchg
pop
pushf
push
mov
mov
pop
into
leave
je
ins
and
or
mov
js
sub
xor
sub
outs
in
push
sbb
(bad)
adc
ret
fsubr
mov
push
or
sahf
add
adc
test
mov
add
out
cmps
popf
movs
push
jno
dec
rcl
shl
in
in
adc
sbb
push
push
ret
mov
and
add
inc
mov
out
dec
test
add
push
int
xchg
xor
pop
adc
jmp
cmp
(bad)
xlat
and
and
das
or
int3
das
dec
jecxz
inc
pop
inc
mov
fild
les
and
sar
dec
or
add
mov
cld
mov
loope
test
ror
add
sbb
ja
pop
add
cdq
push
or
(bad)
arpl
daa
add
movs
pop
pop
not
mov
call
cmp
cld
xchg
daa
fadd
(bad)
mov
mov
mov
and
mov
dec
push
mov
clc
add
sti
and
loope
sbb
pop
inc
pop
enter
sub
adc
dec
enter
vpsubusw
dec
dec
dec
inc
dec
dec
ins
add
(bad)
cs
mov
fdivr
adc
push
cmp
cdq
mov
inc
mov
pop
or
or
lods
lea
sbb
sbb
rol
enter
mov
mov
ror
loop
dec
sub
xor
movaps
inc
add
cmp
xor
add
mov
mov
push
ins
popa
jecxz
or
mov
mov
int
mov
pop
xchg
xor
fs
and
das
aam
out
adc
aam
es
mov
nop
(bad)
sbb
mov
retf
push
int3
add
and
or
rcl
push
adc
push
shl
lock
and
xchg
nop
dec
test
ins
movs
ss
add
xor
sub
jb
lods
repnz
xor
sbb
scas
sub
into
movs
pop
sbb
call
movs
sub
sbb
push
in
xor
and
repnz
cmp
cmp
sbb
xor
in
adc
test
push
lea
xchg
mov
rol
and
mov
fistp
push
push
dec
mov
jae
ror
inc
out
sbb
push
push
dec
adc
sub
sbb
mov
lahf
mov
into
inc
adc
mov
rol
xor
js
and
cmp
stos
adc
dec
jmp
int3
les
sub
mov
sbb
js
dec
dec
daa
fcom
xchg
cmps
xchg
sub
xchg
pop
sar
add
loope
add
jb
retf
jecxz
mov
sub
cs
push
mov
pop
pop
adc
dec
push
cdq
imul
xor
dec
sbb
push
jecxz
mov
adc
add
mov
aad
add
inc
push
dec
in
add
or
or
xchg
and
sbb
push
mov
adc
xchg
nop
mov
mov
cld
pavgb
je
and
cdq
or
mov
jne
test
add
mov
rcr
test
or
and
sbb
pop
or
aaa
sbb
inc
jns
or
xor
xor
sub
sahf
and
addr16
dec
ror
fbld
add
syscall
sub
or
add
xor
inc
add
daa
add
sub
(bad)
pop
out
add
test
fild
xor
ror
mov
(bad)
(bad)
mov
dec
pop
sub
adc
push
dec
push
pop
inc
dec
sbb
shr
enter
xor
cmp
add
inc
fwait
xor
daa
mov
xor
call
mov
mov
cli
sbb
sub
cmp
pop
leave
cmps
sbb
fisttp
add
adc
add
add
repz
sahf
in
retf
or
add
int3
aad
push
popf
sub
pop
sub
ss
(bad)
bound
jbe
sbb
call
rcl
inc
add
imul
cmps
mov
sub
cmp
adc
cmp
imul
sub
aaa
xor
or
and
ins
out
jbe
sbb
out
add
add
and
and
fbld
add
sbb
add
clc
cld
push
xor
push
shl
and
inc
mov
push
cmp
outs
fstp
sub
fcomp
clc
push
fcomp
pop
mov
mov
imul
cwde
mov
or
ss
mov
clc
mov
sbb
pop
cld
js
mov
ret
mov
addr16
or
jno
mov
stos
and
int
inc
xchg
add
inc
int3
adc
in
add
and
test
inc
bound
mov
jbe
inc
add
sub
push
jmp
imul
clc
add
das
push
lock
inc
xor
lsl
add
jns
fdiv
mov
cld
pop
arpl
fidivr
jnp
in
xchg
pop
ret
and
rcr
cmp
and
inc
xchg
js
mov
xor
mov
ret
jecxz
cli
mov
ffree
pop
jge
rcl
push
push
outs
pop
neg
xchg
xor
das
test
or
dec
mov
cmp
push
xor
js
sbb
mov
es
dec
pop
and
jmp
aad
dec
shl
loopne
mov
mov
jmp
(bad)
retf
aam
or
pop
add
(bad)
push
cmp
dec
or
rcr
es
sbb
or
stos
jmp
fist
ja
adc
cmp
test
xor
ror
cmps
xchg
and
sbb
pusha
loopne
cmps
cmp
jne
pop
xchg
je
out
inc
and
jl
sub
xor
inc
mov
out
jbe
fldpi
je
fild
fcomp
mov
push
mov
mov
xor
jmp
out
and
xor
ins
sbb
out
jmp
test
add
xchg
loope
adc
sbb
aas
jbe
ins
je
add
gs
xor
sub
test
sbb
cwde
add
adc
(bad)
mov
push
cmp
and
ret
mov
sub
mov
pop
jo
inc
cpuid
imul
je
jle
shl
inc
push
inc
mov
sti
push
inc
push
dec
xchg
mov
jmp
int3
pop
push
arpl
mov
add
inc
adc
xchg
pop
and
test
sub
pop
icebp
cmp
add
push
pop
or
loopne
(bad)
dec
iret
or
xchg
orps
pavgw
cmp
arpl
jo
pusha
push
pop
mov
push
mov
inc
sub
fs
out
pop
dec
mov
mov
adc
push
movs
inc
add
addr16
xchg
lods
popf
pop
and
mov
fsub
fistp
mov
adc
(bad)
or
mov
test
and
daa
push
add
loopne
cld
fidivr
sub
jae
jne
sub
mov
fcom
movs
adc
ss
xchg
fwait
cli
dec
sub
lahf
iret
inc
push
add
pop
mov
xor
in
adc
sbb
inc
add
sbb
test
mov
push
push
push
or
jecxz
ja
inc
add
jmp
sbb
popa
add
or
fnstcw
jecxz
leave
push
jnp
enter
inc
sbb
and
test
add
or
pop
popf
xchg
fadd
test
add
arpl
jmp
(bad)
(bad)
xchg
scas
ja
mov
cwde
dec
dec
and
jl
(bad)
dec
inc
(bad)
ffreep
iret
adc
enter
call
outs
adc
xchg
aaa
loope
inc
out
add
jne
sahf
loopne
fcom
je
or
test
sbb
xchg
xchg
fdivr
mul
cmp
aad
inc
daa
cmp
nop
addr16
xor
sbb
cmps
cld
or
jmp
ret
movs
mov
fidivr
enter
xor
sbb
div
shr
sbb
int3
inc
xor
stos
aas
movs
xor
and
sub
xor
call
js
dec
ins
lahf
cmp
mov
pop
jmp
xchg
and
dec
sub
and
cmp
std
(bad)
jbe
popf
cmps
adc
shl
mov
jne
lds
sbb
pop
repz
pop
xchg
xchg
push
mov
rcl
mov
push
cli
mov
or
sbb
xchg
jnp
or
rcl
in
sub
dec
xor
push
adc
cmp
ret
into
icebp
inc
add
sti
rcr
mov
bound
sub
outs
cs
call
cmp
xlat
or
(bad)
fnstenv
cmp
adc
icebp
mov
cmp
jl
sbb
add
or
lea
nop
jno
or
push
push
mov
loope
es
sbb
dec
and
sbb
push
sub
inc
pop
mov
inc
movs
xor
dec
add
popa
jne
push
inc
mov
cs
inc
daa
shl
mov
ficom
cmp
scas
inc
in
jmp
sub
push
jb
cmp
inc
push
sub
and
xor
add
cld
hlt
adc
in
jg
je
sub
pusha
(bad)
mov
sub
and
rol
or
and
sbb
or
les
retf
test
sub
popa
adc
test
mov
add
add
(bad)
enter
lock
dec
add
mov
cmp
not
xor
cmp
and
inc
(bad)
lea
add
nop
inc
call
xchg
dec
dec
in
cs
and
sub
in
sbb
inc
push
call
adc
sbb
movs
xchg
xchg
xor
and
and
jp
in
dec
(bad)
retf
add
or
pop
cmp
stc
xor
stos
(bad)
cmp
pop
cmp
and
push
or
movs
scas
and
loopne
dec
inc
jl
psraw
pop
je
push
popa
xchg
push
jecxz
les
mov
dec
out
xchg
test
es
add
movs
jb
repnz
sar
enter
mov
adc
sub
clc
psubusb
adc
mov
mov
push
fadd
inc
adc
imul
in
lea
test
mov
pop
cmp
or
and
mul
inc
add
jge
adc
sbb
dec
push
inc
dec
add
push
push
mov
leave
inc
push
xor
nop
xchg
sbb
inc
ins
jg
dec
(bad)
pop
jo
push
jns
xlat
shr
and
hlt
lods
movzx
push
mov
or
dec
xchg
push
das
add
xchg
and
sbb
and
das
inc
ret
fisub
push
and
push
xlat
jne
add
fimul
nop
and
adc
and
cmp
adc
(bad)
jae
mov
add
inc
or
and
mov
pop
dec
adc
inc
ins
les
xchg
retf
sub
or
xchg
out
ret
xor
ins
dec
cmp
sbb
add
fadd
add
popa
push
cmps
cdq
jp
xlat
clc
shl
inc
jmp
or
(bad)
add
push
push
cmp
jne
jns
add
mov
mov
inc
dec
adc
pusha
inc
mov
scas
pop
sbb
mov
repnz
xchg
aas
loopne
push
les
adc
test
sbb
jns
ret
jo
iret
add
aaa
xor
mov
inc
mov
rcl
sti
outs
mov
adc
dec
ds
call
or
in
push
rcl
call
xor
out
or
mov
or
imul
mov
das
push
rcl
add
add
daa
xor
sbb
sub
sub
and
sbb
mul
rcr
rcr
mov
jbe
pop
ss
add
shr
push
call
add
mov
inc
lods
add
xor
cs
call
daa
push
in
cmp
push
cmove
rcl
shr
or
ja
jmp
pop
pop
mov
jg
or
inc
or
scas
ss
mov
stos
aam
push
pusha
and
sub
and
pop
push
dec
jp
inc
cmps
or
jmp
(bad)
in
xor
or
out
fistp
test
cwde
mov
push
push
add
push
dec
adc
pushf
mov
mov
mov
(bad)
or
inc
inc
or
jecxz
loopne
jnp
data16
sub
dec
mov
loopne
inc
popa
and
push
inc
or
loope
mov
shl
and
daa
lea
std
lds
inc
inc
lahf
cmp
jne
xchg
push
(bad)
adc
add
mov
xor
jg
inc
pop
enter
xchg
push
js
push
call
push
xor
adc
cmp
pop
daa
cmp
jp
mov
mov
push
add
cld
rol
inc
dec
jp
retf
xchg
sub
mov
xchg
sub
mov
sub
or
and
fist
mov
xor
mov
xor
and
and
adc
adc
pop
popa
fsubr
lock
mov
xlat
and
xor
and
inc
xor
mov
repz
in
adc
(bad)
imul
or
jle
jo
or
mov
and
in
xor
outs
retf
js
sub
mov
jae
dec
popa
test
inc
jne
xor
add
push
xor
cmps
mov
ins
add
jle
or
ret
loop
mov
pop
sar
xor
ins
(bad)
sar
cs
mov
sub
xchg
add
or
test
pusha
daa
in
add
add
fisubr
push
and
xlat
inc
dec
(bad)
iret
mov
cdq
idiv
sub
add
mov
inc
jp
cmps
gs
in
lock
enter
inc
test
fidiv
faddp
add
xor
out
lds
pushf
ret
mov
fbld
ja
push
jnp
je
or
push
dec
daa
sbb
cmp
fcom
cmp
add
enter
rol
and
lahf
mov
jmp
outs
sar
popa
mov
or
pop
or
(bad)
retf
sub
or
dec
inc
pushf
add
push
sbb
sub
add
xor
sub
pop
pop
jmp
or
shl
imul
mov
inc
lea
cwde
cld
add
add
add
xor
push
fist
cmps
mov
sub
mov
or
gs
imul
inc
or
add
(bad)
mov
pop
dec
(bad)
(bad)
push
and
cdq
lahf
in
lea
movs
sub
jno
xchg
fwait
add
mov
daa
sub
aas
jmp
cs
mov
nop
add
xchg
retf
jg
push
cmp
ret
push
or
loope
adc
dec
mov
daa
les
int
repz
imul
and
int3
lea
mov
xor
mov
mov
adc
sub
jnp
push
push
push
mov
fcom
or
and
ret
jecxz
jge
sbb
or
mov
dec
push
xchg
adc
adc
loop
mov
xor
mov
push
jmp
sbb
inc
pop
xchg
inc
jmp
repz
clc
imul
popa
push
pop
repz
fcmovb
mov
adc
cdq
in
sub
adc
(bad)
fsub
xlat
dec
xlat
sub
inc
pop
stos
xor
rol
mov
adc
sbb
add
scas
mov
mov
adc
push
nop
popa
dec
shr
mov
jmp
(bad)
xchg
repnz
push
nop
nop
aad
xor
sub
cmp
add
or
mov
ficom
aam
sbb
in
and
jns
sar
jno
dec
dec
(bad)
shr
add
mov
xor
jecxz
aas
mov
ror
xchg
adc
or
push
pop
jb
inc
sub
fst
leave
(bad)
dec
inc
ins
cmp
xchg
xor
dec
shl
pop
cld
outs
inc
cmp
je
test
aaa
lds
sub
sbb
sub
sar
adc
or
es
cmp
and
int3
cmp
cwde
push
jge
xchg
add
or
ret
and
push
dec
retf
ds
enter
in
and
dec
sub
pop
dec
and
pusha
mov
sbb
adc
inc
jo
or
imul
xchg
bound
int
sbb
push
iret
inc
mov
or
out
or
add
add
dec
push
test
push
outs
lods
clc
popa
cwde
in
test
repz
mov
enter
inc
add
cmps
out
gs
inc
mov
pop
lods
adc
jnp
and
shr
mov
inc
push
(bad)
fidiv
stos
or
jb
jbe
adc
adc
rcl
mov
es
enter
test
sub
jbe
ficom
(bad)
mov
xchg
pop
fmul
fadd
and
inc
out
bound
dec
ins
das
scas
fcom
mov
xor
dec
adc
or
in
inc
push
sub
mov
and
sbb
or
inc
jno
add
push
inc
fdiv
movs
mov
cmp
inc
call
mul
adc
mov
pop
add
shl
sub
add
sub
sbb
cmp
and
and
or
dec
mov
mov
imul
and
das
dec
xchg
add
mov
xor
cmps
in
and
dec
pop
and
nop
lods
sub
in
int3
movs
lock
mov
pop
daa
and
dec
int3
xchg
add
dec
sahf
xor
xor
call
loop
jb
sub
adc
jo
jnp
pop
dec
inc
xor
in
mov
adc
nop
daa
inc
xchg
ja
push
cmp
(bad)
push
dec
xor
push
sub
movs
retf
inc
hlt
xor
or
jp
cdq
push
push
dec
push
aaa
test
jo
add
test
inc
das
xchg
cmps
push
adc
movs
sub
sub
dec
retf
mov
dec
jne
repnz
inc
push
mov
mov
fmul
sti
les
or
test
push
pushf
aaa
xchg
dec
mov
dec
sub
scas
sub
enter
dec
das
ror
test
or
ins
int3
mov
pop
and
adc
xchg
inc
movs
fwait
or
and
out
push
sub
aaa
sub
mov
mov
aam
fs
pop
mov
or
mov
jp
in
inc
push
sub
push
je
xchg
(bad)
push
vmptrld
push
sbb
cmp
push
and
mov
shl
or
sub
add
cmps
inc
add
xchg
mov
je
dec
aaa
push
jecxz
je
push
call
sub
adc
stc
sub
add
rcr
sub
sbb
add
nop
lods
and
dec
cld
int3
es
jbe
iret
dec
cld
sbb
pop
es
push
add
inc
repnz
out
arpl
das
test
in
inc
ja
push
push
pusha
pop
pop
xlat
push
cdq
movs
pop
mov
push
es
mov
dec
sub
mov
push
fdiv
scas
mov
sti
and
inc
js
mov
xchg
test
inc
sbb
fs
cmp
pop
xor
ja
mov
jae
add
nop
jle
sbb
pop
cs
jne
adc
aad
fs
enter
mov
push
rcl
loop
inc
in
ins
mov
sti
jmp
push
pop
and
or
and
adc
sub
lea
dec
sti
push
or
in
pop
cmp
pop
mov
pop
call
mov
movs
sub
and
and
xchg
repnz
test
mov
dec
add
pop
mov
js
cmp
lock
pop
lock
cmp
add
pmulhuw
nop
repnz
and
ret
adc
ja
and
cmp
vpunpckhbw
or
inc
rol
and
jg
inc
mov
test
or
fiadd
mov
shr
mov
push
and
or
cld
cmp
je
lea
fs
xor
(bad)
dec
in
ror
add
adc
xchg
or
mov
xor
cmp
mov
rcl
mov
pop
(bad)
in
repnz
std
int3
inc
mov
or
and
les
or
cmc
iretw
ror
imul
out
outs
xchg
xchg
mov
lods
dec
pop
movs
(bad)
das
std
loopne
jb
add
loopne
push
test
loopne
neg
out
ret
inc
push
adc
adc
push
mov
or
rol
jge
add
and
add
push
cli
or
jg
dec
xor
adc
jne
arpl
(bad)
jb
aam
jge
test
inc
add
adc
dec
mov
lea
and
fdiv
and
ins
(bad)
mov
(bad)
(bad)
in
aam
dec
dec
mov
jle
dec
or
dec
push
add
mov
pop
push
rcl
push
fcom
cmps
pop
mov
push
mov
mov
mov
pusha
dec
imul
mov
rol
daa
jno
addr16
adc
dec
mov
mov
push
adc
repnz
inc
test
mov
mov
sub
add
mov
ror
test
gs
lods
adc
and
adc
jp
pop
xchg
pop
push
inc
sub
sub
and
icebp
pusha
mov
or
jae
jmp
xchg
jl
(bad)
ss
or
outs
mov
cmp
adc
mov
cmp
sbb
adc
call
sub
add
bound
adc
div
fs
xor
xor
movs
adc
xchg
add
add
jnp
inc
jbe
mov
fstp
mov
cmp
dec
jne
push
adc
mov
int3
jo
cld
ds
cld
std
pop
xor
mov
dec
add
add
add
ret
dec
push
mov
movs
mov
(bad)
lea
dec
aam
fmul
add
pop
fcomp
mov
in
mov
or
push
push
loop
add
movs
jns
pop
sbb
or
or
inc
adc
or
add
mov
jg
dec
push
stos
inc
dec
jmp
push
enter
sbb
pop
pushf
and
js
loopne
jmp
jmp
mov
out
and
cs
arpl
add
push
shl
mov
out
mov
add
add
adc
sbb
add
loopne
add
add
add
and
jbe
ss
push
mov
fsubr
jmp
push
or
or
push
fimul
and
ja
test
push
inc
push
jne
mov
clc
push
movs
lock
cld
xchg
jge
rcl
jne
xchg
dec
jne
sub
ja
push
stc
push
push
push
xor
add
je
cmps
je
push
or
push
and
ret
push
leave
enter
popf
(bad)
or
lock
mov
sub
lock
jmp
xchg
sub
inc
sbb
add
push
mov
loop
pop
pushf
mov
cmp
in
fcmovnbe
inc
pop
icebp
push
pop
xchg
xchg
in
cmp
xor
inc
pop
popa
loopne
mov
push
pop
fisttp
push
fild
nop
stos
xchg
loope
iret
pop
sub
jno
jmp
daa
xchg
daa
call
dec
lahf
cmp
inc
inc
xchg
jmp
add
jmp
jbe
pop
imul
pop
inc
outs
mov
mov
inc
mov
and
fmul
(bad)
call
dec
push
test
add
and
inc
xor
loope
or
pop
or
daa
jns
pop
mov
jne
(bad)
pavgb
aam
sbb
xor
push
lock
xchg
mov
ss
mov
fisttp
mov
jl
fadd
shld
mov
iret
js
shr
loopne
imul
cmp
jnp
or
arpl
pop
js
mov
pop
cmp
leave
xchg
ja
pop
pop
sbb
add
push
add
into
in
imul
xchg
mov
adc
sub
movs
inc
xor
popa
jb
das
retf
adc
fs
sbb
lock
pusha
int3
sub
mov
add
mov
sbb
ja
fld
mov
push
pusha
and
mov
aam
mov
add
xchg
fidivr
(bad)
xchg
shl
mov
push
lds
ins
sbb
add
and
dec
daa
jecxz
repz
dec
push
push
pop
iret
repz
cmp
jge
addr16
dec
loope
pop
movs
retf
push
push
rcl
mov
mov
cs
and
add
cmps
and
sbb
dec
xor
dec
sub
pop
in
add
cmp
imul
pop
lds
dec
inc
or
iret
repz
popa
imul
xchg
jmp
repz
cmps
xchg
or
dec
pop
jns
inc
sub
mov
bound
loopne
enter
pusha
push
fdivr
jno
sbb
setge
fisubr
xchg
lahf
arpl
push
dec
(bad)
enter
arpl
sub
(bad)
cmp
mov
cwde
push
int3
push
shl
sbb
push
jno
mov
pop
cmp
cmp
add
fsubp
add
pop
push
in
push
jae
dec
add
cmp
je
jg
sub
mov
or
or
scas
fidivr
adc
enter
repz
inc
js
add
inc
mov
(bad)
daa
dec
fwait
inc
ins
jge
and
add
xchg
jg
sbb
mov
sbb
ficom
xchg
push
mov
fsub
pop
hlt
push
jle
mov
sbb
xchg
lahf
sbb
xchg
iret
dec
bound
test
call
fs
jl
enter
fs
xor
add
xor
dec
xchg
adc
push
pop
xor
lods
or
cmp
cmp
adc
adc
jbe
or
addr16
outs
gs
call
gs
adc
pop
fsubr
sbb
fisttp
outs
cdq
ja
arpl
push
and
jmp
push
add
daa
sbb
add
popa
movntq
adc
and
inc
rol
push
jl
adc
add
dec
add
dec
adc
je
sahf
push
sub
or
popa
mov
ja
nop
inc
es
imul
xor
test
data16
inc
mov
sbb
sar
ins
inc
out
push
dec
call
sbb
test
mov
in
hlt
fadd
pop
mov
jb
hlt
arpl
test
cmp
xchg
fsubr
push
mov
add
fs
fdivr
fmul
mov
sbb
sbb
test
and
push
mul
sub
push
sbb
movs
sbb
loop
inc
pusha
push
adc
jmp
add
rol
sbb
jl
pop
or
sub
jmp
call
fld
pop
xchg
das
push
jbe
adc
loop
push
adc
mov
punpckhbw
dec
push
into
add
icebp
jmp
inc
sti
add
sub
scas
fcomp
fwait
xchg
rcr
mov
mov
mov
cmps
jns
mov
xchg
sub
mov
xor
ret
imul
sbb
jecxz
jns
push
push
pop
dec
bound
pusha
lods
nop
retf
cmp
lods
xchg
mov
mov
fdivr
xchg
fnsetpm(287
push
clc
add
ret
mov
test
in
cmp
and
and
sub
and
add
or
shl
cmp
mov
jo
fsubr
inc
push
aaa
popf
add
mov
adc
gs
mov
ss
jmp
dec
int
out
test
fst
ss
sbb
and
repz
add
fmul
rol
imul
loopne
das
ret
mov
add
push
mov
add
pop
imul
fst
in
add
bound
cmp
or
scas
cs
mov
add
push
cmp
in
gs
cmp
or
xchg
lods
mov
lock
or
cmp
pop
mov
nop
push
xlat
push
ins
imul
or
mov
jmp
or
(bad)
ins
jb
sub
push
out
cmpxchg
push
fs
sub
ins
mov
sub
dec
arpl
inc
aad
repnz
cmp
test
xor
sub
ja
aas
movs
mov
pushf
inc
mul
popf
pop
loop
adc
jo
or
popf
test
and
add
test
shl
pop
push
or
call
push
jl
adc
pop
push
push
add
mov
cdq
lea
inc
addr16
arpl
leave
movs
xor
sub
jl
xor
add
mov
pop
add
pop
inc
mov
ss
sub
pop
sub
dec
cmp
inc
adc
and
test
xchg
call
push
and
aas
sub
inc
(bad)
outs
loopne
int
pop
rol
push
push
mov
and
push
xchg
sete
pop
int
lahf
and
outs
fs
scas
inc
sub
jnp
fwait
xchg
push
add
outs
je
adc
pop
add
jg
sahf
cmc
jo
adc
pop
inc
dec
mov
push
or
push
retf
aas
xchg
jmp
and
pop
add
in
and
mul
mov
adc
push
gs
pushf
pop
or
adc
or
or
or
jmp
push
mov
outs
ins
push
dec
js
mov
inc
add
sub
popa
xchg
call
dec
shl
add
or
repnz
loopne
and
push
push
xor
lea
data16
mov
fs
mov
inc
lahf
lock
push
or
fist
arpl
pop
xchg
(bad)
sub
pop
push
das
cmps
fsubr
mov
sub
or
adc
ins
adc
das
add
pop
push
out
gs
xchg
dec
dec
or
movs
xchg
inc
sbb
aaa
nop
outs
enter
or
adc
pop
cmps
imul
inc
neg
ds
repnz
inc
cwde
inc
shl
test
push
(bad)
(bad)
iret
push
in
mov
add
ins
jl
sub
jb
push
add
mov
lds
dec
orps
and
inc
push
neg
pushf
ror
inc
jae
movs
push
cmps
sub
mov
test
xchg
push
jmp
aad
in
ror
push
xlat
aas
jae
adc
cwde
push
push
dec
jbe
push
sub
jae
stos
add
lock
jae
shl
movs
mov
sub
push
fisubr
and
xchg
add
add
dec
push
push
mov
stos
mov
mov
mov
in
mov
nop
out
cld
sub
sub
sbb
and
xchg
and
jb
es
add
and
inc
mov
imul
arpl
xor
aaa
dec
outs
popa
xor
aam
loopne
dec
push
push
ffree
movs
in
ins
push
lea
imul
inc
add
add
add
out
dec
popa
jmp
lea
popf
sar
repz
fwait
movs
xchg
out
mov
mov
iret
add
inc
ss
movs
das
sahf
fs
lock
aas
hlt
add
adc
xchg
hlt
adc
xchg
rcr
pop
lock
int
pop
rcr
dec
mov
(bad)
mov
push
hlt
(bad)
cmc
div
fadd
xor
jbe
sub
test
add
sbb
lods
jmp
fdiv
jb
and
fisubr
mov
adc
fsubp
push
jmp
jmp
dec
sub
mov
cmp
push
mov
adc
and
ds
push
aad
fs
inc
fld
xchg
jo
nop
int3
cmp
sbb
stos
sbb
rcr
sbb
xchg
shl
retf
leave
shl
loopne
mov
and
mov
sbb
add
mov
repnz
mov
test
cmps
les
add
jo
push
and
sbb
or
nop
pushf
or
ins
lea
nop
add
test
movs
outs
leave
dec
push
jbe
sbb
and
pop
xor
lock
adc
rol
and
jmp
pusha
lea
movs
mov
nop
add
test
das
movs
dec
push
push
in
fdiv
enter
sbb
or
pushf
mov
mov
enter
pushf
imul
push
jns
mov
push
fld
jmp
sahf
out
and
test
sahf
(bad)
jne
(bad)
pushf
jns
cmp
repz
mov
and
jnp
repz
cmp
dec
aam
loope
out
fidivr
jp
push
dec
jns
jnp
push
sbb
test
out
jns
out
iret
fsubr
test
sahf
out
push
adc
jns
out
jl
xchg
mov
mov
ss
push
push
call
cmp
push
add
nop
or
dec
sub
sbb
xchg
dec
bound
mov
lahf
ss
leave
xchg
sbb
xchg
xchg
inc
repnz
add
cmps
pop
sbb
dec
pushf
pushf
loop
mov
and
mov
jl
pusha
sbb
add
xchg
add
daa
push
jge
pop
push
jle
adc
sub
ret
and
xchg
sub
repnz
mov
mov
xchg
jg
push
add
and
add
in
add
call
add
aam
add
adc
add
popf
test
cdq
in
xchg
lock
xor
imul
retf
movs
sbb
(bad)
mov
sbb
cmp
xor
dec
sub
xor
sub
cmp
enter
or
or
addr16
dec
sub
fadd
clc
sahf
push
les
mov
aam
and
pop
and
cmp
sub
cmp
cmps
lods
ja
jg
jg
xchg
cmp
add
jns
mov
fst
lods
movups
sbb
add
push
fchs
jg
(bad)
(bad)
adc
in
mov
mov
popa
and
add
jmp
adc
shl
add
pop
test
xchg
adc
mov
dec
loope
push
sbb
xchg
mov
adc
cwde
pop
cmc
and
pusha
adc
xor
or
lods
and
ss
daa
pusha
out
adc
adc
popf
pop
xchg
jmp
adc
add
jne
imul
push
sbb
test
add
dec
sbb
inc
jl
xchg
adc
scas
jmp
lods
rcr
les
stc
or
mov
mov
fwait
inc
test
inc
adc
mov
ret
jno
cmc
in
adc
sub
xor
and
fild
enter
xor
inc
aam
mov
xchg
imul
fs
inc
cmp
rol
and
push
cmp
in
retf
adc
int
add
test
rol
mov
lea
mov
xor
pop
adc
and
test
xchg
mov
push
cmp
or
xor
in
or
(bad)
push
jnp
push
xchg
jno
scas
sbb
and
rol
inc
movs
cmp
test
leave
mov
mov
dec
add
jmp
adc
das
dec
or
pop
dec
(bad)
adc
rol
mov
rcr
sub
xor
mov
push
sbb
or
adc
lahf
dec
inc
addr16
clc
cmp
sbb
xchg
js
xchg
dec
sbb
or
sbb
sahf
test
inc
enter
adc
inc
inc
pop
pop
sub
xchg
adc
shl
mov
shl
pop
mov
xchg
and
push
or
xchg
sbb
movs
adc
test
icebp
popa
mov
fcmovnu
mov
sub
ror
jmp
sbb
sti
and
mov
sbb
jge
daa
cwde
adc
or
mov
and
ss
inc
imul
sbb
adc
inc
or
add
sar
xchg
cmp
inc
cs
add
(bad)
xlat
and
sbb
pop
pop
enter
jmp
push
movs
mov
xchg
push
cmp
mov
pop
add
xchg
push
lea
inc
lods
sbb
adc
fadd
xchg
out
out
nop
dec
aas
ficom
sbb
(bad)
std
add
add
in
inc
add
push
scas
fcom
sub
xor
pop
cmp
sbb
add
ret
adc
arpl
shl
add
xchg
scas
push
dec
rcr
cmp
jne
dec
in
sbb
retf
pop
scas
cwde
or
xor
adc
lods
loope
sub
add
jns
pop
in
(bad)
sub
inc
push
lea
jo
sub
xchg
cmp
fstp
outs
mov
aam
push
add
jl
out
adc
xor
std
add
pusha
pop
jmp
jl
adc
xor
enter
pop
les
imul
sub
xor
shl
adc
sub
mov
mov
push
dec
jno
add
xor
fcomp
cmp
cmp
cdq
xor
adc
jb
push
pusha
je
add
seto
js
int
add
pop
lar
test
jg
inc
test
inc
or
lods
or
sti
cmovo
jne
and
sbb
push
mov
(bad)
jl
sub
or
ins
dec
popf
pop
(bad)
fdiv
fnstsw
test
aam
xor
popf
and
call
sub
cmp
in
inc
pushf
or
sub
mov
stc
push
(bad)
jo
or
sbb
adc
xchg
test
or
push
inc
sub
mov
leave
enter
add
iret
pop
loopne
out
test
add
adc
ss
xchg
nop
adc
jb
out
data16
inc
fadd
xor
inc
call
pop
fmul
test
ins
mov
inc
ds
ud2
loop
popa
or
les
scas
in
shr
xor
mov
xchg
push
push
or
lea
or
fs
outs
je
inc
add
pop
xchg
dec
or
sub
inc
es
push
out
pop
add
bound
mov
call
cmp
in
jmp
inc
sub
mov
mov
push
mov
pop
jno
xor
cmp
je
inc
cmp
jne
push
mov
sub
xchg
jb
pop
inc
push
adc
fs
mov
push
xchg
les
push
ret
fs
fwait
inc
ret
pop
or
outs
in
xchg
mov
xchg
retf
xor
add
push
dec
cmp
or
mov
mov
(bad)
sbb
cmp
mov
add
xor
daa
(bad)
leavew
movs
and
or
push
std
push
loope
movs
and
inc
or
dec
loopne
sbb
push
push
cmp
test
ins
adc
mov
inc
inc
call
sbb
add
adc
push
sbb
mov
add
mov
pop
daa
loopne
outs
and
fld
dec
aad
stos
jge
or
cs
inc
nop
adc
and
mov
popf
or
ss
out
xchg
sub
sub
lock
or
xchg
cmp
mov
adc
jecxz
out
out
xor
jnp
sar
inc
or
cmp
xchg
das
xor
popw
adc
inc
sbb
xor
mov
jecxz
mov
aam
sbb
nop
cwde
push
pop
jae
jae
and
push
pop
pop
push
mov
lahf
sub
popf
push
movs
inc
lea
inc
fwait
(bad)
adc
or
dec
add
jg
and
sub
ror
ret
test
test
mov
pop
test
or
xchg
fmul
add
in
mov
sti
nop
jl
xchg
mov
xchg
fwait
pop
lahf
ins
mov
addr16
push
ror
fcom
sub
sub
test
or
(bad)
stos
cmp
ret
mov
add
xor
or
or
jecxz
push
sub
sub
push
idiv
nop
dec
xchg
shl
sub
out
fidivr
push
jmp
scas
add
jmp
adc
add
xchg
mov
fisub
adc
mov
adc
fisub
or
sbb
inc
push
inc
sbb
test
push
sbb
stc
sbb
nop
jbe
sbb
push
hlt
inc
push
dec
lea
popf
xchg
push
inc
push
dec
add
dec
add
loop
int
push
xor
and
je
push
dec
inc
call
or
and
cmp
xchg
mov
sub
pop
cmp
lahf
dec
xchg
ret
js
lock
aaa
test
jae
and
pop
jbe
or
jg
xor
fsubr
push
push
in
shr
sahf
push
cmp
sbb
xchg
ja
daa
rcl
mov
inc
test
xor
push
pop
rcl
or
pop
fadd
dec
jne
xchg
push
clc
jns
push
or
clc
or
retf
pop
xlat
xor
les
pop
and
sub
dec
and
xchg
jae
js
in
ja
rol
dec
lahf
sahf
xchg
ins
jl
test
mov
aad
push
push
pop
inc
enter
leave
or
add
pop
lock
and
xchg
pop
pop
jl
mov
in
adc
cmp
mov
mov
add
push
inc
movs
repnz
pop
lock
nop
fwait
imul
and
(bad)
or
xchg
sub
sbb
arpl
lea
inc
push
and
inc
clc
and
test
jg
scas
ret
lea
je
xchg
jle
lods
dec
xchg
jae
div
call
dec
push
xor
sub
test
xabort
(bad)
xchg
jbe
inc
mov
add
sub
loopne
inc
pop
lock
ret
xchg
ds
mov
mov
fmul
or
add
nop
dec
xchg
ror
inc
fldenv
and
xchg
add
inc
sub
xor
loopne
mov
pop
mov
jmp
dec
sti
or
rol
add
fsub
loopne
loope
push
or
cwde
cwde
or
or
add
push
xchg
pusha
xor
mov
fidiv
bound
das
push
jg
and
movs
(bad)
aas
pop
test
das
clc
clc
sbb
dec
retf
adc
or
xchg
jmp
inc
add
das
jns
(bad)
mov
seta
cmp
xchg
xor
add
push
dec
loop
adc
in
(bad)
sti
dec
inc
stos
jg
or
retf
adc
test
ror
into
test
add
enter
push
clc
cmp
or
das
add
stc
add
fst
or
adc
(bad)
in
dec
shl
rcl
cwde
mov
mov
add
repz
bound
scas
xor
cld
cmp
pop
jne
pop
add
jecxz
test
or
jno
test
or
cwde
xchg
lea
xchg
shl
(bad)
retf
fdivp
rcl
adc
jl
lea
imul
and
das
mov
inc
add
out
xor
cmp
xchg
jmp
mov
xor
jl
jl
inc
sbb
fadd
sbb
mov
jmp
or
cdq
mov
cmps
mov
adc
and
xor
push
call
mov
and
mov
or
fwait
mov
or
mov
adc
fcomp
fimul
push
inc
pop
fwait
mov
xchg
jmp
mov
jmp
jl
mov
ret
aam
xbegin
loopne
push
je
sub
and
mov
repnz
mov
jge
mov
mov
push
cmp
popa
in
je
(bad)
mov
in
in
jbe
mov
arpl
or
pusha
lahf
add
movs
fld
and
clc
xchg
xchg
les
(bad)
mov
and
shr
retf
dec
je
pminub
pop
test
push
push
mov
out
retf
aad
jp
daa
cs
sub
mov
shl
push
popf
pop
out
imul
mov
cmp
ja
cmp
mov
out
inc
sub
lock
sar
sar
or
or
dec
adc
adc
loope
adc
sbb
retw
mov
or
es
push
clc
pop
adc
into
outs
xor
dec
inc
sbb
fimul
inc
and
and
nop
pop
imul
inc
rcr
push
inc
push
xbegin
inc
mov
fistp
add
in
(bad)
les
ins
outs
(bad)
adc
ror
jns
popf
jae
add
bound
adc
mov
inc
add
(bad)
leave
or
adc
xchg
pop
(bad)
mov
mov
cmp
mov
jne
dec
sub
adc
es
inc
mov
inc
loopne
sbb
adc
stos
cdq
push
sbb
rcr
xchg
enter
pusha
cwde
mov
(bad)
xor
fbstp
gs
mov
jbe
mov
or
add
movs
dec
and
add
jno
bound
xchg
push
inc
pop
popa
or
or
cmp
jnp
and
repz
inc
outs
add
pop
jo
add
add
imul
pop
jb
pop
dec
pop
push
dec
or
sbb
jmp
adc
fcmovne
jnp
inc
in
add
push
push
add
pusha
push
bswap
movs
mov
test
pushf
in
dec
mov
push
dec
mov
xchg
ror
push
inc
loopne
sbb
rol
push
adc
inc
jmp
dec
cmp
dec
mov
add
in
dec
jmp
inc
nop
mov
push
shr
push
cmps
inc
sbb
mov
mov
cld
pop
ins
dec
cmp
mov
cdq
xor
nop
or
sub
js
pop
shr
inc
xor
inc
and
into
push
or
cmps
sahf
aaa
fcomp
xchg
iret
retf
add
cmc
add
add
lods
outs
mov
xchg
test
jne
adc
(bad)
mov
xchg
or
dec
(bad)
sbb
rcl
adc
stos
mov
push
fcomp
outs
xor
scas
das
aam
mov
mov
and
or
ss
das
add
inc
loopne
cmps
add
xor
mov
pop
push
dec
jns
or
cmps
outs
mov
popf
nop
push
aad
loopne
push
imul
cwde
or
gs
mov
ret
pop
cwde
cmp
mov
dec
pminub
rol
bound
lods
and
or
sub
neg
inc
inc
add
mov
push
fwait
inc
add
test
add
fwait
jmp
fld
shl
dec
fcmovnu
stc
in
mov
test
inc
add
inc
(bad)
adc
add
push
inc
lahf
adc
iret
inc
xchg
(bad)
popaw
mul
push
inc
mov
jne
pop
shl
xor
cmp
lea
dec
dec
movs
shl
add
xchg
pop
or
loope
mov
pop
(bad)
mov
pusha
mov
inc
sar
xchg
mov
shr
dec
adc
test
pop
(bad)
stos
sub
xchg
aad
sbb
(bad)
cdq
fimul
lock
push
or
lods
rcl
xlat
mov
sbb
or
pop
push
ds
dec
push
(bad)
mov
imul
xchg
cmp
inc
sub
xor
push
sbb
retf
pop
jmp
sbb
shl
inc
fdiv
sbb
dec
pop
fsub
mov
leave
adc
jbe
push
mov
mov
xchg
mov
xlat
aad
and
(bad)
mov
sar
xchg
add
xchg
aam
adc
sbb
dec
ins
sbb
pop
xor
fisttp
and
xchg
pop
cmp
pop
mov
sbb
pusha
test
imul
sbb
pop
push
sub
xchg
mov
out
rol
pop
sbb
sub
loop
ja
sbb
and
jg
dec
movs
dec
add
add
enter
push
ja
sahf
test
push
push
or
push
std
push
mov
loop
daa
das
les
mov
cmp
repz
rol
dec
push
jo
push
adc
mov
es
pop
mov
push
xchg
xor
or
add
push
mov
nop
fcmovbe
jbe
rcr
pop
and
ficom
pop
mov
sbb
jmp
in
mov
gs
adc
dec
adc
dec
pop
adc
xor
jb
xchg
ret
and
dec
pushw
mov
xchg
ret
jp
pop
adc
jb
add
push
mov
fiadd
fmul
mov
xor
sub
aas
mov
stos
fs
mov
shl
dec
ss
mov
cmp
outs
or
test
bound
bound
stos
add
add
nop
(bad)
inc
adc
jnp
sub
push
sbb
shl
je
xchg
dec
arpl
std
test
add
nop
add
xchg
test
lds
pushf
sbb
dec
mov
dec
enter
push
xchg
sbb
and
jp
cmp
sahf
push
jl
dec
enter
jne
shr
push
(bad)
pop
adc
mov
push
or
inc
push
movs
push
div
fild
inc
xchg
lahf
pop
push
inc
stos
pop
sbb
out
out
inc
push
dec
pusha
or
hlt
push
or
loope
mov
and
add
sub
add
lods
cmps
cdq
pop
sub
mov
sub
jbe
std
or
adc
mov
add
xor
wbinvd
dec
ins
arpl
mov
outs
outs
sbb
xor
add
sub
lahf
xor
push
arpl
jne
dec
xor
or
jbe
adc
and
aam
or
je
adc
inc
je
arpl
outs
std
cdq
rcr
iret
hlt
xchg
mov
dec
adc
ins
js
cmp
and
fidiv
std
push
lods
pop
adc
aad
inc
iret
repz
fucomip
repz
or
pop
lods
push
or
inc
add
push
cmp
or
jl
les
adc
cmc
xchg
push
inc
sti
lfs
sbb
test
imul
dec
outs
scas
js
jb
scas
mov
push
loopne
daa
jne
push
ror
or
pop
mov
add
ds
dec
scas
mov
ja
je
push
mov
push
fild
dec
push
ds
push
jg
add
add
in
cld
xchg
push
add
pop
mov
dec
int3
loopne
push
fs
add
xor
mov
dec
popf
cwde
mov
mov
int
or
leave
iret
sub
hlt
and
das
es
scas
cld
xchg
ins
les
jnp
nop
add
pop
cdq
push
inc
or
aas
xor
dec
iret
sbb
jg
jo
or
push
mov
sbb
xchg
and
mov
lods
sub
test
inc
pop
clc
add
push
mov
inc
or
lock
dec
or
pop
inc
repnz
dec
lea
push
sub
cwde
and
pop
mov
mov
add
das
imul
outs
retf
sbb
icebp
mov
and
and
and
enter
je
popf
ret
sbb
push
jne
sub
add
ror
retf
jmp
cmps
sbb
mov
jnp
push
popa
(bad)
mov
inc
aas
mov
dec
aas
sbb
and
inc
inc
mov
fld
mov
(bad)
mov
jb
cmps
mov
mov
movs
mov
outs
sub
and
addr16
and
xchg
dec
add
es
cmp
loopne
push
test
mov
add
aaa
pop
pop
aad
mov
pop
push
arpl
cs
(bad)
fnstcw
mov
xchg
push
dec
or
push
and
xchg
push
dec
mov
push
mov
inc
cmp
mov
push
mov
inc
push
sub
mov
jo
dec
cmp
aas
mov
sbb
and
adc
daa
ds
test
mov
ja
sub
lods
pop
dec
xchg
adc
cmp
xlat
cmp
inc
(bad)
jmp
cmp
loopne
(bad)
rol
jecxz
inc
les
push
aam
cmps
pop
test
jmp
mov
mov
xlat
test
xor
hlt
mov
pop
repnz
mov
jmp
adc
shrd
imul
in
in
sbb
sbb
push
sbb
mov
sbb
in
lea
add
xor
ret
mov
ror
fmul
mov
popf
cmp
out
or
inc
pop
and
mov
ss
ret
mov
xchg
mov
ret
push
dec
xchg
(bad)
movs
and
nop
pushf
fs
je
add
mov
add
adc
and
add
inc
outs
add
shr
jmp
iret
adc
pop
push
dec
jg
fwait
sub
(bad)
addr16
femms
aas
mov
and
add
(bad)
ins
adc
in
nop
mov
mov
(bad)
xor
in
dec
add
or
scas
int
adc
leave
loop
adc
nop
in
nop
data16
sbb
inc
andnps
and
add
add
add
aas
adc
cmp
pop
mov
aad
or
lahf
fild
add
or
or
and
mov
xor
(bad)
lock
xchg
not
push
(bad)
mov
pop
dec
stos
push
inc
xor
mov
(bad)
mov
or
push
lock
xor
imul
movs
shl
addr16
sbb
test
jae
inc
iret
mov
rcl
data16
cmp
imul
or
lock
loopne
pop
adc
push
push
dec
(bad)
in
nop
es
adc
adc
adc
into
aaa
fadd
mov
sub
dec
xlat
mov
mov
pop
stos
jns
inc
or
pop
mov
mov
dec
adc
cmps
or
jo
inc
pop
add
loope
ja
or
or
imul
nop
push
xor
add
xchg
movs
xor
mov
sbb
or
outs
test
cmc
pop
push
ror
aad
push
mov
cmp
push
inc
inc
jmp
pop
(bad)
xor
(bad)
int3
or
mov
and
nop
xor
pop
push
mov
dec
in
or
fwait
ja
push
xchg
push
push
test
(bad)
cmp
movs
add
jb
aad
aas
movs
frstor
idiv
mov
mov
sub
mov
adc
sbb
mov
shr
jle
and
rol
add
or
or
xchg
nop
xor
add
cs
xchg
dec
cs
scas
movups
adc
adc
xchg
test
push
add
out
sbb
add
test
lea
sbb
inc
xchg
sbb
popf
(bad)
push
inc
cdq
test
test
movs
xchg
sbb
jno
mov
dec
adc
xchg
sbb
inc
or
jns
xchg
sbb
sub
mov
add
js
data16
xchg
mov
mov
and
dec
push
xchg
and
gs
or
shl
push
sub
add
add
pop
add
dec
xchg
and
add
leave
ror
and
stos
loope
aaa
call
sub
and
xlat
adc
pop
jecxz
or
adc
pop
test
jle
xchg
daa
add
gs
in
js
out
jns
sub
adc
jns
test
sub
invd
ins
or
inc
pop
outs
stc
mov
push
nop
stos
les
pop
ficom
int
ss
sub
fcom
das
dec
cwde
cwde
mov
lods
adc
pop
enter
mov
push
pop
pushf
popf
add
xor
sub
mov
aad
cmc
retf
cs
sbb
mov
pop
mov
pop
fldpi
jmp
pop
lahf
mov
(bad)
movs
dec
xor
inc
mov
pop
enter
inc
dec
mov
fdiv
inc
enter
cmp
in
in
push
ins
push
retf
mov
mov
lock
adc
cmps
push
nop
mov
outs
clc
(bad)
aad
pushf
add
fs
or
dec
out
fwait
add
or
ja
mov
sbb
test
test
add
jo
push
sbb
or
pop
inc
sbb
outs
cmp
fld
ja
rcl
mov
jle
adc
adc
xchg
sub
push
leave
adc
sar
pushf
stc
nop
rol
daa
xchg
sbb
add
or
pusha
jno
cmp
dec
addr16
ret
test
rol
retf
ins
sbb
sbb
lods
cwde
cmp
xor
js
add
and
sbb
dec
iret
retf
in
cmps
jecxz
sbb
jns
adc
(bad)
sub
cmp
repz
lds
jg
cdq
cmps
cmp
repz
ror
out
hlt
mov
push
push
sbb
ret
std
ds
adc
sbb
xchg
jo
(bad)
pop
(bad)
or
jnp
js
fwait
out
leave
dec
(bad)
in
pop
push
enter
add
push
mov
syscall
retf
add
bound
cld
push
retf
lss
cmp
sub
in
sahf
aaa
xchg
(bad)
dec
outs
jae
or
xchg
cli
lods
push
dec
sbb
mov
lahf
idiv
dec
cmpxchg
push
jo
les
cmc
test
and
ins
push
sbb
inc
adc
leave
fs
xchg
sub
ret
mov
or
data16
sbb
rcl
jl
gs
inc
and
cdq
sub
cmp
addr16
daa
test
adc
jo
fist
sub
enter
sar
fbld
add
cmp
jo
push
jb
lahf
retf
mov
xchg
push
add
pop
int3
ins
or
push
inc
jno
or
mov
test
mov
ret
sbb
add
or
and
test
or
push
jns
add
dec
pcmpgtd
retf
pusha
or
xchg
test
dec
out
add
call
pop
add
ror
nop
aas
outs
and
jg
adc
aam
(bad)
outs
mov
(bad)
pusha
sbb
mov
push
adc
icebp
inc
mov
push
add
mov
aaa
mov
cmp
mov
fs
add
outs
not
inc
pop
leave
adc
retf
loope
nop
pushf
fs
call
adc
lock
adc
popa
jle
pop
adc
add
add
push
inc
xor
push
push
into
cwde
push
int
mov
and
adc
gs
xchg
inc
xor
push
mov
stos
aaa
sbb
sub
ss
test
int3
cmp
add
xchg
mov
xor
xor
or
mov
xor
sbb
sub
fld
adc
lods
or
xor
and
icebp
je
inc
sub
fst
cdq
retf
adc
nop
leave
enter
push
jo
movs
xor
mov
cs
mov
push
repz
mov
push
push
pop
xor
push
test
mov
cli
inc
pop
(bad)
into
pop
cmp
add
enter
jmp
and
ja
mov
fcmovnb
and
rol
stc
jl
fdiv
adc
dec
pop
xchg
pop
sbb
or
sub
cmp
sub
push
dec
and
in
inc
je
and
lea
pusha
dec
and
mov
cmp
int3
jl
(bad)
cmc
fcom
rol
adc
xchg
mov
cmp
sbb
xchg
cld
cld
push
ror
in
and
mov
das
sbb
or
mov
sbb
movs
cmp
sbb
and
push
in
sbb
dec
xor
pop
jo
jecxz
das
push
xor
xchg
sbb
push
adc
rcl
(bad)
adc
inc
movs
sbb
add
dec
sbb
or
jno
bound
jg
bound
outs
data16
or
mov
add
inc
pop
stos
jb
and
sbb
aaa
add
or
and
arpl
cmp
and
xchg
fstp
push
and
lods
mov
rcl
push
jg
icebp
inc
jmp
xor
add
neg
dec
bswap
lea
fwait
icebp
inc
enter
mov
push
mov
lods
or
pop
rol
enter
mov
inc
or
ret
data16
std
ffreep
add
pop
shl
push
pushf
pop
pop
sbb
loop
push
sbb
shrd
aaa
pop
pop
adc
ror
rcl
imul
hlt
mov
gs
nop
ss
mov
cwde
mov
(bad)
or
rcr
inc
jge
in
jmp
push
push
push
(bad)
pushf
push
sub
add
sub
imul
ret
(bad)
mov
pushf
jmp
std
cld
repnz
je
mov
mov
mov
sub
shl
lea
ror
mov
add
mov
add
leave
not
xor
ja
rcl
rol
neg
sbb
aas
inc
add
movzx
lea
call
sbb
or
mov
add
push
push
push
xchg
xchg
retf
mov
push
xor
rol
shl
enter
(bad)
xor
sub
fs
mov
sbb
popf
lock
pop
call
xchg
mov
test
lods
xchg
in
rcr
pop
(bad)
(bad)
(bad)
inc
inc
push
aas
mov
in
add
adc
or
xchg
xchg
mov
jmp
(bad)
(bad)
inc
movs
mov
push
cld
fsub
ins
test
push
call
cli
(bad)
call
sub
xchg
fwait
inc
(bad)
xchg
ror
ds
cs
and
mov
and
cmps
imul
mov
and
ficomp
subps
outs
and
jo
ja
or
inc
daa
or
aad
cmps
sbb
cmp
loop
push
xchg
out
clc
test
mov
mov
paddb
(bad)
(bad)
(bad)
sbb
int
loopne
cmp
jno
in
and
xchg
push
push
sbb
pop
icebp
pusha
or
stc
xchg
das
imul
clc
push
mov
rol
bound
ss
sbb
push
xor
fadd
add
xchg
lock
push
inc
mov
lock
add
(bad)
or
dec
test
pop
push
sub
add
dec
sbb
push
or
push
pop
(bad)
test
add
mov
inc
sbb
sub
cmps
ja
sbb
in
in
inc
cld
lock
jle
sub
sti
xor
rcr
sbb
and
sbb
adc
sbb
in
and
cmp
dec
adc
js
nop
je
mov
xlat
dec
pusha
mov
sbb
mov
fld
scas
xor
ins
mov
xor
sbb
sub
dec
jae
cld
dec
cld
cmp
fldcw
repz
aam
xor
push
cli
push
dec
ins
xchg
adc
lea
and
sbb
test
sub
aad
in
mov
ret
cs
add
or
pop
lods
xchg
in
add
lods
shl
lock
jae
enter
aam
les
int
loopne
loopne
cmp
out
or
lods
add
cmps
mov
xchg
in
dec
aam
fstp
ins
and
retf
rcr
in
xchg
mov
in
mov
mov
rcr
and
xor
add
inc
sub
dec
pusha
xchg
xchg
mov
mov
xchg
jno
or
cmp
mov
jne
mov
push
test
jmp
push
sbb
test
rcl
js
(bad)
add
cmp
mov
mov
mov
fbld
cmp
mov
aam
push
test
shr
pop
mov
pop
pushf
jge
ins
js
mov
xlat
push
jle
inc
in
int3
jl
sub
jnp
mov
test
push
add
dec
sbb
push
int
pop
xchg
mov
pop
xor
pop
cwde
and
retf
ror
lds
inc
xor
dec
call
test
cmp
movs
and
fmul
mov
or
call
dec
les
cdq
imul
pop
fdiv
(bad)
jg
test
enter
jo
dec
or
mov
sbb
push
fsub
in
or
addr16
pop
aaa
mov
dec
adc
ret
aaa
and
jl
pop
je
sbb
xor
test
and
xchg
dec
cs
or
push
lahf
in
fst
sbb
test
xor
leave
aam
aas
inc
call
jne
cmp
(bad)
lods
jge
mov
push
add
push
sbb
jno
mov
push
push
or
sub
sti
aam
xor
inc
fst
mov
pop
cmp
enter
xor
mov
dec
add
dec
jne
adc
fiadd
enter
in
inc
call
or
mov
shl
dec
inc
push
or
jmp
inc
adc
fild
dec
mov
frstor
adc
stos
imul
test
jbe
fld
imul
(bad)
xlat
jmp
cmp
and
cmp
dec
rcl
and
aas
or
test
gs
sar
sub
mov
pushf
xchg
hlt
add
jge
add
xchg
xchg
xlat
aas
int
(bad)
(bad)
inc
test
mov
xchg
rcr
adc
sub
and
aam
cdq
pusha
shl
fiadd
arpl
add
add
ret
sbb
xor
sbb
jae
jmp
gs
mov
or
mov
je
mov
xchg
xlat
movzx
push
adc
pop
xor
fld
mov
test
cmp
xchg
inc
jge
jle
call
add
loopne
pop
jnp
inc
fs
sbb
mov
cmp
cmp
sbb
ret
xor
push
push
push
or
sub
cmp
push
cs
fmul
or
xor
fadd
inc
inc
fcomp
stos
xchg
add
jo
outs
dec
jo
or
dec
sbb
inc
inc
or
cmp
mov
mov
inc
mov
sbb
add
xchg
push
stos
leave
shl
std
jmp
add
jmp
fmul
mov
mov
sub
out
icebp
sub
sti
push
(bad)
(bad)
(bad)
jg
icebp
neg
movs
mov
(bad)
(bad)
enter
push
mov
pop
xor
add
sub
in
adc
(bad)
push
and
and
scas
arpl
imul
sub
shl
(bad)
(bad)
inc
in
daa
jae
hlt
adc
xchg
inc
fcompp
sahf
mov
movq
mov
gs
(bad)
call
and
pop
fcomip
ins
mov
jp
inc
fldl2t
push
div
mov
mov
test
(bad)
jg
push
pop
cs
(bad)
dec
jmp
push
aad
mov
or
ins
add
aaa
pop
mov
mov
cmc
inc
cdq
inc
test
and
das
das
sub
out
lods
xchg
xchg
cwde
jbe
or
push
sub
cmp
cmp
add
dec
inc
cs
pushf
mov
test
and
fsub
scas
sub
add
mov
aam
imul
mov
fs
mov
xchg
movups
test
cmp
mov
inc
mov
stos
jl
fcom
aas
rol
jne
lahf
xor
push
(bad)
(bad)
and
std
in
or
push
push
(bad)
(bad)
call
iret
out
imul
xor
scas
scas
mov
xchg
shr
mov
outs
cmp
mov
(bad)
(bad)
(bad)
push
xor
rol
mov
movs
mov
stc
inc
pop
mov
mov
xchg
(bad)
(bad)
(bad)
call
out
jmp
adc
mov
(bad)
not
sbb
enter
add
(bad)
(bad)
call
cmp
inc
out
retf
jnp
mov
iret
lea
add
xchg
arpl
sbb
(bad)
(bad)
jmp
cwde
jns
xor
icebp
or
and
jns
add
mov
sbb
popa
jo
mov
adc
daa
inc
iret
out
add
fidiv
push
jns
(bad)
(bad)
(bad)
call
dec
add
pop
movs
push
mov
call
mov
jbe
cmp
xchg
(bad)
(bad)
jmp
dec
or
(bad)
dec
add
sub
and
xchg
mov
ret
pop
cli
imul
jb
and
fucomp
push
or
sbb
(bad)
(bad)
dec
pushf
dec
pop
xor
push
pusha
mov
sbb
dec
retf
jle
fdivr
or
fistp
ret
inc
dec
inc
adc
jns
jnp
popf
(bad)
jg
call
mov
jmp
mov
das
shl
xchg
and
xor
add
push
xchg
repnz
repnz
(bad)
(bad)
jmp
and
std
scas
in
lods
cs
daa
movs
cmp
push
xchg
std
call
test
(bad)
(bad)
call
xchg
and
push
sub
adc
mov
ins
inc
fmul
mov
push
(bad)
(bad)
mov
or
imul
dec
adc
int
dec
(bad)
loopne
adc
push
std
dec
mov
xchg
cmp
hlt
xchg
mov
pop
test
rcr
cli
sub
test
sbb
cmp
test
iret
adc
mov
std
and
mov
nop
sbb
dec
bound
pop
mov
pop
inc
adc
ret
add
jmp
inc
mov
jmp
std
call
xchg
lods
jno
stc
add
cli
test
(bad)
(bad)
call
mov
repnz
inc
adc
xor
push
or
adc
movs
pushf
(bad)
(bad)
(bad)
push
pop
(bad)
mov
popf
xor
mov
pushf
es
xchg
push
bound
or
sar
(bad)
jmp
fcom
mov
xor
xor
popa
mov
popf
dec
fcom
(bad)
jmp
std
push
scas
xchg
xchg
and
or
cmp
or
ds
(bad)
(bad)
(bad)
jmp
sahf
push
push
dec
sub
push
or
mov
call
sub
inc
call
xchg
ret
stos
mov
jnp
je
add
add
pop
fist
cmp
mov
sub
inc
(bad)
cmp
jbe
(bad)
(bad)
mov
imul
fstp
xor
push
pop
stos
dec
add
cmp
outs
mov
xor
fiadd
mov
cli
(bad)
jmp
cmp
add
mov
jne
(bad)
jle
aas
jmp
mov
push
mov
adc
imul
jmp
sbb
sbb
jmp
adc
jo
outs
adc
das
into
sub
das
xchg
(bad)
jmp
(bad)
retf
inc
jmp
stos
jle
mov
dec
imul
jl
push
adc
out
sbb
or
inc
movs
or
(bad)
pop
(bad)
lods
add
push
push
loope
jg
mov
mov
iret
mov
mov
push
int3
in
cmp
inc
and
and
and
add
push
add
or
mov
mov
inc
push
sub
ror
pop
mov
in
pop
aaa
xor
inc
aaa
vfrczss
xor
cmp
iret
adc
push
inc
add
cdq
das
xor
and
xor
aaa
dec
enterw
inc
(bad)
mov
or
or
dec
imul
ins
pop
cmp
in
(bad)
(bad)
fcomip
mov
dec
fld
mov
inc
inc
call
outs
xchg
pop
xor
(bad)
(bad)
dec
sbb
push
cli
adc
movs
(bad)
cmp
ret
popf
(bad)
jl
push
aaa
hlt
scas
ret
sti
setle
push
add
aad
into
add
lahf
test
mov
xor
fcmovu
(bad)
xchg
cmp
cmp
pop
hlt
das
cli
add
add
lods
mov
mov
cmp
fistp
adc
jmp
push
sbb
call
daa
ds
jg
mov
(bad)
push
pop
cmps
les
push
call
cmp
cli
add
add
(bad)
(bad)
jnp
int3
pop
arpl
jecxz
cmp
imul
test
stos
adc
or
push
mov
or
lds
sbb
jl
sbb
fcomp
inc
popf
lods
add
ins
pop
ss
inc
clc
std
iret
cdq
ret
shl
and
inc
ss
add
cmp
sub
jne
jmp
addr16
int
push
sub
add
packuswb
mov
in
(bad)
jmp
in
fwait
(bad)
nop
mov
in
cmp
imul
and
or
add
loop
rol
mov
push
mov
ret
ins
into
aam
mov
and
in
xor
inc
sahf
add
adc
lahf
add
hlt
adc
push
jo
jecxz
outs
mov
shl
pop
imul
or
sbb
xor
adc
add
sub
fdivr
mov
and
mov
hlt
jmp
fstp
ret
mov
jge
lea
mov
lea
lea
movs
cmps
loope
mov
cmp
jne
xchg
dec
aad
cmp
jmp
adc
test
adc
and
mov
jb
adc
scas
mov
cdq
in
inc
mov
jne
push
add
clc
sub
jl
cld
add
mov
or
add
push
mov
cmp
neg
jmp
nop
fiadd
test
sbb
jno
loop
dec
stc
adc
push
int
adc
loopne
push
hlt
and
movs
mov
and
dec
inc
loope
shl
pop
xor
push
loopne
inc
shr
(bad)
fiadd
or
or
add
lea
outs
sbb
and
or
push
xor
daa
mov
pop
out
popf
ins
pop
add
adc
(bad)
fimul
ss
sbb
mov
test
jp
call
sub
nop
cmp
iret
in
or
inc
mov
rcl
jmp
jns
sub
ss
outs
dec
cli
mov
or
sub
jmp
mov
repnz
fidiv
ret
(bad)
lahf
lock
mov
(bad)
jmp
fdivr
add
daa
xchg
rdtsc
xor
pop
push
jmp
pop
stc
(bad)
cmp
dec
inc
int3
push
aad
push
xchg
(bad)
aad
ret
push
std
push
(bad)
xchg
jmp
scas
outs
push
add
mov
and
div
mov
mov
(bad)
(bad)
dec
push
cmp
cmp
adc
das
sahf
lea
jg
retf
inc
cmp
xchg
movs
pop
xchg
push
push
aas
and
mov
and
imul
mov
out
push
shl
stos
(bad)
inc
jnp
jmp
adc
mov
inc
cli
pop
inc
lock
(bad)
(bad)
(bad)
dec
sahf
inc
push
mov
popa
ss
psraw
in
mov
ret
out
pop
add
(bad)
(bad)
inc
cmp
mov
sub
mov
xlat
scas
es
rol
jecxz
out
and
rcr
adc
and
pop
daa
mov
xchg
mov
adc
iret
fld1
(bad)
je
lahf
push
(bad)
(bad)
(bad)
call
aam
in
add
dec
sti
sahf
mov
xchg
push
aad
jp
xchg
mov
(bad)
mov
xlat
into
pushf
mov
(bad)
call
aad
nop
mov
bound
cdq
adc
(bad)
(bad)
call
hlt
xor
adc
test
outs
mov
sub
outs
lahf
out
scas
xor
(bad)
mov
push
jecxz
push
sub
or
dec
enter
or
int3
mov
or
aad
inc
div
mov
xchg
icebp
jle
add
popa
fstp
repz
sbb
pop
jno
ja
(bad)
mov
adc
xor
xchg
add
add
add
rcl
inc
push
jmp
mov
jg
rcpps
mov
or
push
neg
inc
jmp
(bad)
push
fstp
lock
scas
xor
dec
sti
in
shl
imul
dec
dec
adc
and
ret
scas
xchg
dec
imul
mov
das
dec
xor
cmp
jo
retf
jae
dec
push
es
or
xlat
sub
test
push
mov
inc
pop
hlt
fs
inc
mov
push
loope
push
pushf
jnp
adc
sbb
jae
jae
fdivr
push
jg
push
jmp
mov
and
sbb
cwde
mov
stos
movs
arpl
(bad)
(bad)
call
adc
mov
lock
mov
sub
sbb
int
adc
inc
push
dec
gs
in
pop
(bad)
mov
mov
rcl
gs
push
pop
mov
or
push
(bad)
jmp
pusha
pop
push
call
retf
scas
jge
mov
lea
mov
jg
(bad)
icebp
and
ins
leave
mov
inc
mov
jp
(bad)
xchg
in
add
inc
fwait
jmp
push
dec
cmc
bnd
mov
sar
(bad)
(bad)
jmp
jae
arpl
dec
xchg
stos
jnp
jmp
iret
shl
push
std
or
outs
repnz
cmp
inc
loopne
(bad)
aad
rcr
or
pop
jecxz
(bad)
(bad)
push
pop
sar
outs
ficomp
sbb
addr16
imul
out
or
mov
mov
ds
movs
add
rcl
xlat
nop
pusha
seta
mov
retf
push
je
imul
in
pop
lock
mov
jge
fidiv
push
or
push
adc
fld
mov
add
add
mov
nop
push
call
pop
nop
sub
int
pop
je
jo
inc
ret
sahf
in
xchg
(bad)
sbb
daa
pop
aam
xchg
sbb
repnz
test
(bad)
not
(bad)
test
ret
rcr
(bad)
add
mov
mov
movzx
jg
jo
ror
xor
xor
mov
add
xor
data16
retf
push
cmp
xor
sbb
loopne
dec
mov
popf
mov
mov
cmp
xor
jo
xchg
adc
sub
pop
add
movs
xor
push
jge
push
mov
push
lea
mov
add
xor
add
adc
(bad)
mov
pop
call
or
pop
mov
test
mov
mov
mov
js
xlat
cwde
cwde
push
and
aaa
shl
or
pop
or
push
daa
and
stc
cmp
or
xchg
push
in
shl
imul
add
icebp
xor
cmp
jae
xor
mov
retf
(bad)
test
inc
neg
ret
add
push
push
inc
xor
sti
xchg
cmp
pop
jae
leave
xor
xor
jae
(bad)
out
add
ins
mov
fld
sar
jmp
sbb
mov
pop
pop
aaa
dec
or
xor
cmp
(bad)
jmp
sbb
mov
lock
push
pop
xchg
push
jl
push
push
add
(bad)
(bad)
inc
ror
mov
pusha
jo
gs
fs
push
in
pusha
mov
xchg
scas
test
pop
sar
(bad)
(bad)
std
and
mov
cld
mov
cld
cmp
push
out
jo
fist
add
rcr
jmp
(bad)
push
outs
cmp
ret
xchg
xchg
sub
xchg
ret
xor
retf
je
sub
aam
jle
jmp
mov
aam
adc
dec
dec
(bad)
in
pop
mov
xlat
jmp
fisttp
mov
add
dec
xor
pop
imul
fwait
(bad)
cmp
cmc
call
dec
cmp
jmp
out
cmps
scas
addr16
daa
data16
(bad)
(bad)
call
jmp
push
sbb
and
or
and
icebp
and
cmps
(bad)
(bad)
(bad)
call
repnz
cwde
test
cmps
ds
stos
movs
add
scas
sub
fsubr
push
or
int3
or
xchg
pop
xchg
in
push
push
(bad)
jmp
in
rol
gs
cmp
sar
mov
xchg
dec
xchg
aas
jb
mov
jnp
lock
jmp
xor
xchg
adc
or
xchg
fsubr
lods
in
sbb
cmp
(bad)
cli
fnstenv
in
cli
loopne
dec
pop
dec
sti
or
adc
js
inc
and
aam
movs
ins
sahf
int
push
enter
sbb
mov
fwait
addr16
js
rcl
clc
int3
(bad)
outs
int
lahf
fild
aas
in
add
pushf
ins
add
xor
xor
sahf
hlt
les
mov
test
out
int
aam
inc
adc
add
add
pop
lahf
int
repz
adc
loopne
test
(bad)
stc
out
je
nop
add
repnz
add
int
mov
xchg
add
into
mov
ins
(bad)
aam
push
(bad)
iret
repz
xchg
cld
push
int3
les
cmp
and
xor
mov
mov
in
cmp
inc
push
adc
push
aad
out
jl
hlt
loope
or
loopne
stos
sub
fnstcw
ds
call
repz
test
mov
cmp
jnp
ficom
ficom
int3
jl
iret
out
loop
inc
in
enter
pop
push
nop
and
pop
in
xchg
mov
into
add
add
sbb
inc
scas
(bad)
lock
scas
mov
dec
pop
mov
dec
cld
push
int3
push
pushf
push
dec
sub
pop
xchg
repz
push
adc
jbe
jne
fadd
test
cmp
stos
fcomp
jns
iret
out
retf
in
mov
dec
(bad)
out
ins
into
idiv
mov
das
mov
in
out
je
fiadd
movs
jns
call
call
bound
pusha
clc
test
and
es
jle
int3
sbb
aaa
adc
mov
pushf
nop
add
add
wrmsr
xor
rol
in
out
out
aas
pop
add
sar
mov
push
rol
retf
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
fadd
stc
loope
add
in
mov
test
mov
xchg
mov
and
mov
push
(bad)
xor
push
cmp
add
and
sahf
pop
in
pusha
add
sbb
add
pop
jp
push
cwde
test
inc
rcl
jbe
aam
or
mov
nop
lock
xor
jmp
add
mov
add
and
jbe
and
push
repz
mov
iret
repz
mov
cmp
rcr
loopne
lock
sahf
out
add
adc
and
out
sub
cmp
out
sahf
out
pop
pusha
push
sahf
js
mov
inc
jb
push
add
fs
gs
mov
pmuludq
ins
add
daa
inc
dec
mov
or
je
outs
mov
in
inc
enter
pop
imul
clc
(bad)
lods
rcr
and
sub
emms
icebp
sbb
adc
sahf
ja
out
add
adc
add
dec
push
pop
ins
jns
out
adc
sahf
out
in
sub
sbb
repz
sub
dec
push
push
cmp
pushf
add
xor
outs
not
adc
daa
out
push
in
inc
push
push
inc
xor
pop
jmp
pop
leave
pop
enter
sbb
mov
data16
pop
jns
loope
inc
add
mov
and
out
or
and
stc
retf
retf
add
rol
adc
in
test
sub
(bad)
cmp
outs
in
xchg
(bad)
subps
ins
add
cmp
sub
shl
sti
int3
jl
outs
in
mov
push
lock
or
inc
into
mov
add
cmp
push
adc
jae
enter
adc
fst
rcr
lock
jb
or
cmp
push
or
add
in
rcl
add
push
clc
sbb
push
or
and
pop
push
cmp
mov
cmp
subps
je
mov
fwait
and
inc
pushf
or
wrmsr
jb
enter
add
js
inc
mov
mov
fmul
lock
mov
sbb
jb
mov
mov
adc
call
icebp
jp
(bad)
ja
(bad)
add
mov
cmp
jnp
mov
or
push
punpckldq
push
add
add
out
in
add
jle
xchg
(bad)
lock
out
out
or
in
xchg
aad
sbb
pop
hlt
fadd
in
hlt
cmp
repz
lahf
cmps
sub
cmp
repz
repz
nop
pushf
lods
sahf
out
mov
add
adc
jns
out
sub
cmp
dec
enter
sbb
or
out
in
lods
shr
jbe
mov
and
ss
cmc
add
(bad)
(bad)
xor
jle
mov
das
sti
setae
leave
jnp
or
(bad)
xchg
xchg
xchg
xchg
add
adc
movs
fwait
adc
adc
leave
leave
in
or
leave
leave
leave
leave
adc
pop
add
and
(bad)
jb
jb
add
adc
lock
inc
cmp
fs
ins
test
cmp
jl
movs
pushf
xchg
pop
jnp
aas
push
loopne
xchg
nop
push
aam
loopne
lea
imul
mov
je
out
sahf
mov
iret
out
call
sub
cmp
repz
push
pop
ins
jl
repz
mov
add
fadd
mov
or
cmp
test
daa
nop
mov
mov
or
add
dec
jmp
pusha
imul
rcr
pop
add
add
addr16
mov
or
nop
pop
jne
jb
cmp
sbb
sub
cmp
inc
mov
dec
cli
pop
stc
ins
clc
xor
enter
imul
sbb
jb
repz
hlt
icebp
jbe
lock
sbb
xor
inc
in
sbb
jb
push
in
push
and
cmp
mov
add
xchg
jge
push
or
add
jns
xchg
xlat
push
out
std
fild
pop
outs
jle
or
or
add
add
xchg
adc
mov
adc
das
adc
add
add
aaa
or
sub
pop
jb
addr16
pop
add
test
mov
sti
cld
std
(bad)
(bad)
jns
out
add
add
xchg
add
inc
jl
or
and
push
add
push
or
jns
dec
fs
js
cwde
dec
std
call
add
add
push
pop
adc
and
xor
repz
movs
retf
stos
imul
iret
push
sti
cld
xor
out
jl
add
(bad)
xlat
mov
add
inc
stc
push
mov
xor
and
jmp
adc
mov
gs
xchg
dec
sbb
xchg
out
(bad)
lods
dec
adc
push
or
lods
xchg
add
(bad)
adc
fs
enter
inc
aaa
jo
push
and
rol
(bad)
push
int3
push
mov
hlt
test
push
rep
ss
sbb
loop
lock
cs
push
or
cmc
les
push
test
adc
mov
jle
scas
aas
into
jnp
test
pop
add
aam
gs
fimul
data16
pop
push
daa
pop
lock
(bad)
hlt
les
clc
ds
(bad)
xor
loopne
shl
mov
pusha
push
sahf
sbb
push
dec
pop
enter
shl
pop
call
push
aam
sahf
in
cmp
sub
mov
mov
sahf
out
mov
inc
(bad)
div
movs
mov
jbe
mov
mov
fld
and
pop
mov
push
sub
or
xor
jbe
shr
or
shr
add
pushf
adc
(bad)
cmc
push
mov
mov
out
mov
pusha
push
pop
sbb
cs
pop
rcr
fild
push
sub
xor
neg
sbb
push
fsubr
movs
push
les
sub
je
sbb
icebp
sub
jle
sub
aam
and
push
addr16
(bad)
iret
out
shl
dec
mov
sub
cmp
dec
pop
push
inc
xchg
inc
movs
add
fcomp
cmp
xchg
cs
xchg
mov
push
mov
xor
push
cmps
(bad)
cld
lock
call
dec
xchg
fidiv
lock
dec
or
out
ds
bswap
jecxz
cmp
imul
loope
inc
data16
lock
xor
dec
sub
sbb
ss
in
and
rcl
data16
mov
repz
jbe
hlt
aaa
movs
out
fsubrp
scas
or
pop
into
jl
pop
aam
lahf
js
addr16
es
push
pop
ja
mov
es
mov
cmp
pop
xchg
push
cmc
mov
fadd
dec
push
push
cwde
scas
das
mov
mov
xor
data16
mov
cmp
add
mov
in
mov
test
fs
popf
fcom
ins
push
adc
fnstcw
cmp
retf
or
push
data16
call
lods
push
mov
mov
or
ds
ins
(bad)
xchg
cmp
cmp
pop
dec
dec
push
dec
dec
fidivr
cmp
push
rol
(bad)
adc
sbb
out
(bad)
outs
xor
sahf
jbe
call
cs
jbe
add
adc
dec
add
sub
mov
pushf
push
pusha
pusha
adc
movs
jo
dec
add
jmp
pop
push
test
daa
nop
mov
(bad)
call
jbe
sti
imul
mov
or
cmp
loope
mov
and
(bad)
(bad)
(bad)
jns
dec
rol
jl
sub
inc
mov
or
hlt
or
inc
daa
pop
(bad)
(bad)
(bad)
inc
pop
pop
mov
jle
xchg
ins
test
(bad)
clc
test
sbb
and
(bad)
jmp
xchg
cli
data16
outs
push
hlt
dec
mov
sub
and
call
(bad)
adc
(bad)
(bad)
call
pop
sub
push
sahf
pusha
adc
mov
jl
xlat
xchg
cld
ss
lock
fldlg2
cmp
xchg
gs
inc
into
scas
mov
pop
shl
and
mov
pop
add
pop
and
enter
(bad)
dec
sub
div
ins
(bad)
mov
pop
inc
icebp
cmp
mov
(bad)
(bad)
jmp
sti
and
or
adc
mov
or
lock
pop
jae
dec
jmp
(bad)
push
popa
xchg
out
cmp
and
sub
sub
movs
mov
test
call
sbb
retf
(bad)
(bad)
(bad)
(bad)
jns
shl
scas
xor
pop
imul
fmul
shl
and
pop
(bad)
(bad)
(bad)
(bad)
out
push
out
mov
mov
call
fstp
or
test
sub
inc
xchg
jecxz
mov
(bad)
(bad)
(bad)
call
cwde
jnp
inc
push
mov
adc
shr
cmps
outs
lock
movs
stos
movs
mov
(bad)
(bad)
(bad)
(bad)
jle
fisttp
dec
mov
xor
lahf
add
jg
adc
mov
(bad)
mov
push
inc
out
cs
in
inc
xchg
xchg
outs
and
mov
xchg
(bad)
push
xlat
(bad)
pop
call
loope
pop
cmps
adc
mov
xor
call
dec
xor
loopne
test
jecxz
jecxz
mov
push
sbb
das
cmp
(bad)
movs
push
cmp
(bad)
(bad)
(bad)
(bad)
mov
iret
cs
sbb
xchg
stos
pop
fidiv
adc
add
hlt
push
mov
enter
ja
(bad)
call
mov
mov
xor
(bad)
sti
dec
mov
mov
cmp
(bad)
(bad)
(bad)
dec
fisttp
xchg
popf
xchg
jb
loope
int
popf
test
sbb
sar
mov
mov
test
movs
push
in
fbstp
mov
aaa
imul
inc
icebp
pop
dec
bound
mov
dec
or
cmp
dec
adc
div
mov
fwait
jmp
(bad)
(bad)
call
sbb
pop
lock
daa
xchg
inc
mov
out
pop
and
(bad)
ret
(bad)
call
cld
dec
enter
mov
or
mov
in
jno
push
cwde
dec
mov
ret
enter
cmp
jmp
dec
push
pop
(bad)
or
bound
fsub
std
adc
(bad)
(bad)
inc
inc
push
lahf
pop
icebp
sbb
ins
xchg
loope
and
add
inc
fdivr
(bad)
(bad)
jmp
dec
loope
cli
out
sahf
pop
push
push
ja
push
retf
mov
adc
shl
push
sahf
lock
(bad)
jmp
adc
imul
test
or
das
push
jae
pusha
adc
cwde
sub
push
fsub
stos
idiv
mov
and
(bad)
(bad)
(bad)
mov
jle
lods
pop
outs
cmp
sub
loopne
fcom
dec
push
sbb
out
(bad)
(bad)
mov
rcl
loop
lods
sbb
ds
sub
psadbw
stos
xsaveopt
adc
(bad)
(bad)
call
test
mov
xor
inc
and
call
push
(bad)
ins
dec
inc
pop
xchg
or
in
(bad)
(bad)
(bad)
inc
sub
xlat
xor
cmps
xor
jno
loopne
repz
sahf
int
popa
cli
(bad)
add
arpl
(bad)
(bad)
(bad)
call
aad
adc
dec
mov
adc
daa
sbb
push
and
test
xor
mov
clc
call
cdq
jl
sbb
push
jb
or
jmp
out
push
and
out
pusha
std
xor
into
or
cmps
call
loop
in
jno
dec
push
ds
stos
adc
mov
cmp
(bad)
xchg
les
(bad)
(bad)
(bad)
dec
es
lock
ja
and
xor
sar
sahf
sub
xchg
or
jbe
(bad)
(bad)
(bad)
call
adc
pop
mov
jmp
sahf
fucomp
dec
pop
adc
adc
cmc
dec
pop
repz
imul
fisub
(bad)
(bad)
(bad)
call
arpl
sbb
test
movs
popa
fild
in
add
adc
(bad)
(bad)
jmp
pop
addr16
icebp
icebp
push
nop
dec
add
gs
ja
popa
push
test
(bad)
jmp
(bad)
xor
cdq
test
mov
cdq
xchg
test
sbb
(bad)
push
mov
mov
fistp
icebp
cmp
leave
sub
mov
jmp
les
icebp
dec
push
push
outs
and
jmp
and
ins
add
pop
xchg
lds
push
aam
pop
jle
test
(bad)
(bad)
fbld
jns
scas
popf
jns
sub
shl
leave
cmp
push
sbb
cld
add
push
std
(bad)
(bad)
mov
jp
xchg
add
xlat
stos
ficomp
loop
mov
cmps
or
call
mov
mov
test
(bad)
push
add
sbb
xchg
mov
iret
sub
mov
pop
pushf
outs
dec
fisttp
inc
adc
repnz
shl
in
inc
dec
test
(bad)
(bad)
(bad)
push
sub
je
imul
and
or
rcr
mov
(bad)
ds
mov
aas
or
ins
dec
or
(bad)
push
mov
(bad)
lahf
or
call
ret
popa
imul
dec
sti
mov
addr16
cmp
(bad)
jg
fldenv
jle
mov
int
fldenv
ret
aaa
xor
aas
mov
mov
adc
mov
clc
je
push
jmp
test
idiv
scas
fcom
in
and
jcxz
stos
fistp
lods
(bad)
(bad)
mov
call
push
inc
cwde
jb
mov
es
int3
lds
mov
(bad)
(bad)
jmp
add
xor
lahf
mov
sbb
add
hlt
mov
mov
in
je
dec
stos
dec
(bad)
(bad)
(bad)
call
pop
clc
jo
fimul
xor
fisubr
inc
mov
xchg
add
data16
push
push
adc
jnp
cmps
jo
jmp
cmp
aad
dec
mov
jmp
sub
and
dec
jecxz
sbb
(bad)
(bad)
push
loop
xchg
pop
inc
xchg
mov
dec
arpl
sub
ds
jp
jne
xor
call
mov
jle
and
cmp
dec
mov
sub
(bad)
xchg
clc
in
(bad)
(bad)
(bad)
jmp
(bad)
push
pop
(bad)
pop
inc
xchg
movs
pop
cli
and
push
stos
imul
fcom
jns
pop
stos
(bad)
ja
(bad)
push
mov
cmp
xor
sub
lahf
mov
or
fwait
and
data16
(bad)
(bad)
jmp
es
out
add
js
push
(bad)
sbb
loope
(bad)
popf
and
cdq
mov
(bad)
sti
and
iret
pop
mov
ss
sbb
outs
inc
aas
or
(bad)
(bad)
(bad)
jmp
call
mov
lods
mov
scas
pop
out
add
jnp
jnp
mov
jne
lock
(bad)
push
add
xchg
shl
jl
(bad)
jge
bound
inc
clc
add
or
sbb
xor
mov
lds
push
int3
inc
xor
and
or
aad
pop
mov
sub
repnz
push
pusha
pop
adc
mov
adc
mov
stos
xor
mov
push
pop
in
adc
ud0
lock
(bad)
das
inc
in
fbstp
pop
fdivr
jbe
xchg
pmaddwd
(bad)
jmp
dec
aaa
es
xor
scas
cwde
inc
out
mov
mov
sar
(bad)
call
push
cmp
jnp
stos
push
mov
test
(bad)
mov
and
cs
(bad)
dec
mov
jmp
nop
les
and
jp
retf
(bad)
call
lds
cmp
cmc
mov
mov
pop
sti
aas
or
punpckldq
pop
neg
push
mov
(bad)
out
inc
enter
adc
xor
sub
or
mov
pop
cmc
(bad)
call
dec
cmps
(bad)
push
repz
aam
in
jbe
fld
call
(bad)
call
adc
scas
dec
mov
adc
rcl
sti
or
repnz
into
(bad)
(bad)
(bad)
jg
icebp
out
sub
push
(bad)
stc
test
mov
and
xor
mov
mov
dec
call
hlt
(bad)
jmp
or
icebp
pop
enter
(bad)
call
cmp
pop
sbb
aad
das
mov
jge
in
jb
and
ret
push
mov
or
cmp
arpl
mov
adc
cmp
std
sub
mov
sbb
nop
into
inc
rol
outs
mov
add
xchg
push
push
xchg
pop
dec
jmp
push
(bad)
stc
pop
lods
pusha
test
out
pop
inc
jae
aas
xchg
mov
or
(bad)
fistp
inc
xor
out
ss
and
xor
pop
mov
les
(bad)
(bad)
(bad)
call
adc
inc
jmp
js
aaa
push
mov
dec
push
pop
inc
add
mov
mov
call
or
mov
inc
mov
call
adc
xchg
cdq
stc
jb
cdq
aad
sbb
or
dec
sahf
adc
mov
test
dec
(bad)
jle
int
shr
(bad)
(bad)
(bad)
(bad)
in
hlt
fwait
add
lea
shr
jecxz
or
dec
xchg
jle
test
cmp
jge
(bad)
aas
sub
sub
(bad)
(bad)
jmp
in
inc
add
cmc
pop
mov
hlt
and
outs
fst
sbb
test
icebp
mov
das
lods
stos
push
xchg
into
daa
jnp
and
dec
dec
and
test
add
push
jmp
adc
int3
mov
je
dec
xchg
pop
imul
fidivr
movs
(bad)
(bad)
(bad)
inc
(bad)
stos
jl
(bad)
(bad)
jno
sbb
ficomp
loop
cmp
mov
cwde
je
(bad)
(bad)
(bad)
(bad)
jns
fmul
mov
jl
add
add
push
mov
call
(bad)
push
adc
dec
ja
das
xor
inc
xor
hlt
mov
mov
jg
fidivr
(bad)
(bad)
(bad)
stc
push
push
push
inc
outs
and
retf
add
arpl
call
cmp
(bad)
jo
(bad)
(bad)
(bad)
mov
and
test
pop
push
add
mov
xor
fmul
sub
(bad)
(bad)
call
rcpps
into
and
fstp
xor
cmp
pop
xchg
(bad)
(bad)
(bad)
jmp
hlt
jns
xor
(bad)
aas
sbb
jno
cmps
push
das
and
inc
repz
movs
sahf
push
push
xchg
jmp
pusha
sub
imul
sar
out
cli
(bad)
call
mov
fild
jae
out
cmp
stc
test
(bad)
sbb
sbb
fcmovu
in
adc
(bad)
(bad)
dec
sti
jno
or
mov
mov
in
and
punpckhbw
mov
in
(bad)
(bad)
(bad)
inc
mov
mov
inc
mov
pop
xor
push
push
mov
and
jl
fwait
mov
out
cmp
fs
jno
scas
jle
out
mov
ss
hlt
(bad)
(bad)
(bad)
jmp
in
mov
movs
jo
ror
jo
outs
rcr
repnz
and
loop
inc
out
nop
push
(bad)
(bad)
(bad)
(bad)
call
sbb
mov
sub
add
scas
pop
cmp
int3
xor
jae
leave
adc
sar
(bad)
(bad)
dec
mov
(bad)
xor
push
mov
jmp
push
push
(bad)
(bad)
jmp
(bad)
dec
cwde
sahf
loopne
and
jne
(bad)
dec
jne
in
push
ss
dec
stos
fdivrp
push
rol
mov
xchg
mov
repz
mov
(bad)
push
popa
sub
ins
push
cld
mov
mov
ret
retf
xchg
out
call
test
mov
and
shl
xor
loopne
mov
mov
mov
pop
dec
xor
(bad)
(bad)
(bad)
call
sub
bound
jne
mov
mov
into
cli
(bad)
pop
dec
add
(bad)
(bad)
(bad)
inc
mov
xchg
dec
fisttp
inc
mov
dec
repz
test
dec
adc
out
test
jns
data16
aam
(bad)
lock
pushf
(bad)
inc
fsub
inc
aaa
lods
enter
fsubrp
pop
or
ret
pop
cwde
(bad)
cmc
(bad)
(bad)
(bad)
jmp
and
push
pop
enter
in
inc
xor
(bad)
rcr
jmp
pop
mov
(bad)
call
jecxz
cmp
sti
out
lods
jge
cdq
sti
mov
cmp
(bad)
dec
jae
arpl
cli
mov
lock
retf
pop
fdivr
cmp
pop
call
xchg
lods
dec
or
mov
(bad)
jmp
shl
sbb
adc
xchg
add
xchg
(bad)
(bad)
(bad)
(bad)
jns
retf
in
cmp
loop
xchg
jge
cmp
cmps
sbb
pop
sbb
scas
or
(bad)
call
xchg
je
pop
or
push
pop
je
xlat
adc
call
(bad)
inc
push
jo
jno
ret
jle
(bad)
and
pop
or
fistp
clc
jmp
inc
pop
adc
pop
and
arpl
jp
and
std
(bad)
(bad)
jmp
fcmovne
fidivr
in
sub
inc
sar
mov
add
mov
xchg
(bad)
(bad)
push
dec
fcom
push
(bad)
stc
imul
jo
mov
push
js
adc
dec
dec
mov
push
mov
cmp
sub
jno
into
jno
test
jno
test
aam
bound
out
sahf
jmp
mov
das
cmp
mov
mov
ins
jne
call
(bad)
jmp
scas
xchg
popf
adc
rol
fnstsw
mov
jle
add
pop
clc
inc
xor
je
rcl
(bad)
(bad)
xchg
shr
push
test
dec
fs
inc
jo
push
fmul
add
(bad)
(bad)
(bad)
call
xchg
push
ds
test
add
adc
cmps
icebp
mov
jnp
and
ja
(bad)
pop
repnz
aaa
(bad)
(bad)
(bad)
inc
nop
cld
stc
jmp
not
bsr
in
cmp
adc
jp
inc
pusha
inc
ins
jmp
or
sub
or
or
lods
mov
push
aad
pop
ficomp
jge
cdq
scas
jge
(bad)
(bad)
(bad)
inc
adc
shr
and
nop
ins
mov
dec
sar
arpl
push
shl
mov
and
inc
mov
movs
xor
cmps
ret
inc
add
in
lds
retf
jmp
clc
(bad)
jp
ins
mov
fsubr
popf
aad
jb
lods
jg
mov
in
adc
hlt
add
xor
les
pop
mov
popf
cs
enter
jmp
mov
cmp
ins
das
jns
fwait
dec
push
in
mov
(bad)
(bad)
(bad)
jmp
pop
xchg
movs
adc
inc
mov
and
test
sub
mov
sub
out
cli
call
cmp
fist
jnp
bound
mov
(bad)
jg
lea
cmp
cmp
mov
cmps
not
ins
and
call
jmp
jmp
mov
push
dec
jp
bnd
(bad)
xor
dec
test
(bad)
(bad)
(bad)
(bad)
push
mov
leave
mul
and
and
adc
mov
sub
(bad)
call
mov
dec
push
jp
or
jg
cmc
inc
inc
stc
retf
(bad)
(bad)
cmp
rol
idiv
or
movs
mov
sbb
dec
(bad)
adc
out
scas
xchg
sub
add
mov
mov
xchg
push
xchg
in
(bad)
(bad)
(bad)
push
mov
leave
imul
fdiv
mov
jl
mov
(bad)
(bad)
(bad)
call
or
jbe
or
out
sub
call
mov
pop
mov
jmp
or
sbb
jecxz
and
retf
push
cmp
ja
(bad)
(bad)
out
xlat
xor
aaa
adc
push
cmp
retf
push
retf
test
push
out
jg
(bad)
jmp
leave
loopne
push
addr16
mov
idiv
addr16
pusha
scas
cwde
dec
mov
mov
mov
ja
xchg
mov
pop
sahf
nop
sar
inc
shl
cwde
xchg
gs
shl
jmp
mov
shl
rcl
(bad)
(bad)
push
iretw
adc
out
sbb
icebp
sar
arpl
mov
repz
inc
movs
(bad)
(bad)
(bad)
inc
cli
inc
popf
sub
push
or
mov
jmp
inc
enter
cmps
lds
xchg
sar
(bad)
(bad)
push
push
xlat
mov
mov
adc
sti
mov
jle
ja
in
scas
xchg
jae
or
dec
test
(bad)
(bad)
(bad)
jmp
popa
outs
jno
(bad)
es
imul
adc
mov
xchg
popf
aaa
pop
jg
jnp
das
(bad)
(bad)
(bad)
jmp
inc
or
outs
xchg
lock
aad
shl
not
sbb
test
(bad)
ja
jne
das
add
jmp
(bad)
jg
cdq
daa
lock
xchg
sbb
(bad)
fisttp
cmp
mov
test
(bad)
fcomip
push
imul
and
inc
and
int3
test
mov
bound
fmul
(bad)
call
and
jne
dec
cmp
outs
pop
xor
sti
xor
icebp
(bad)
(bad)
jg
in
dec
inc
mov
test
mov
jno
and
jbe
aaa
inc
inc
scas
push
pop
fsub
sbb
mov
mov
xchg
add
add
aas
and
call
or
lds
aas
in
sbb
pop
or
inc
adc
es
(bad)
(bad)
call
std
sbb
cmp
jl
mov
iret
mov
aam
add
iret
push
lahf
(bad)
call
test
mov
pop
or
ins
aas
pop
mov
pushf
(bad)
(bad)
call
enter
cmps
bound
xchg
and
call
(bad)
(bad)
jmp
aaa
rcl
xor
pusha
int
jo
loop
imul
int3
push
in
les
(bad)
(bad)
jg
sub
dec
jge
movs
aam
mov
jbe
popa
pop
xor
and
push
pop
inc
fisubr
fadd
pop
mul
cli
dec
retf
dec
aam
jnp
push
xor
push
mov
lods
(bad)
(bad)
inc
stos
mov
sub
xor
fdiv
xchg
(bad)
(bad)
(bad)
(bad)
stc
out
lods
xchg
mov
js
add
sahf
mov
mov
add
mov
iret
fmul
xchg
mov
pop
hlt
(bad)
call
rol
stos
fld
lods
lods
neg
scas
adc
add
stc
out
(bad)
(bad)
jg
add
lods
mov
sbb
add
imul
into
cmp
(bad)
(bad)
(bad)
inc
pop
xor
fxch
shr
cmp
popf
ret
xchg
push
movs
pop
loop
adc
mov
(bad)
(bad)
(bad)
dec
shr
into
lods
(bad)
hlt
movs
cmp
retf
jb
retf
pop
jecxz
out
cmp
inc
idiv
jg
dec
jecxz
mov
pop
ret
pop
jmp
retf
cmc
mov
mov
clc
outs
ins
es
(bad)
(bad)
call
loop
stos
into
test
enter
das
or
stos
xchg
repz
inc
cmc
iret
outs
pop
cmp
lds
(bad)
(bad)
(bad)
inc
repz
xor
xchg
pop
pop
fiadd
retf
pushf
dec
mov
fild
cmps
jl
mov
das
clc
dec
leave
lds
push
call
sbb
inc
les
pushf
(bad)
xor
push
jno
pop
jb
cmc
hlt
or
sbb
pop
mov
fwait
popa
mov
fnstsw
test
(bad)
(bad)
call
call
lods
mov
jno
iret
or
mov
mov
fsubr
jp
xchg
cld
(bad)
jg
mov
data16
fcom
lds
mov
mov
jg
add
aad
mov
cmp
(bad)
call
in
fcomp
inc
sub
mov
pop
shl
rcl
jmp
cmp
int3
push
xchg
leave
dec
cmc
dec
or
add
push
xchg
sub
ror
push
xor
pop
das
stos
mov
lds
jl
cmp
mov
std
(bad)
(bad)
jmp
or
leave
pop
jns
jge
dec
(bad)
push
ins
je
add
mov
js
sbb
movs
(bad)
(bad)
push
push
jp
mov
push
or
in
ins
mov
add
addr16
push
enter
call
jnp
retf
xchg
xlat
aam
lock
test
inc
pop
cmp
(bad)
(bad)
(bad)
out
dec
push
std
jmp
mov
cmp
les
iret
or
mov
push
and
(bad)
(bad)
(bad)
in
std
adc
mov
cmp
jae
push
jb
pop
in
mov
sahf
(bad)
(bad)
(bad)
jmp
push
lods
lahf
or
stc
js
and
nop
jmp
xor
mov
mov
cmp
cmp
loop
and
popa
mov
xchg
fstp
arpl
jg
jmp
in
shl
cmps
and
mul
mov
xchg
fcomip
(bad)
mov
push
mov
in
lea
je
xor
lods
jns
push
cdq
mov
xor
mov
inc
mov
mov
mov
or
fisubr
pushf
sahf
xchg
repz
cwde
mov
(bad)
(bad)
(bad)
(bad)
cmp
cmp
and
or
and
rcl
or
mov
cmp
jb
(bad)
(bad)
dec
data16
dec
add
pusha
and
test
push
and
sub
outs
sub
imul
das
sub
(bad)
mov
fistp
iret
xchg
rcl
jmp
xor
mov
mov
(bad)
(bad)
call
sbb
sbb
xchg
popa
sbb
xchg
je
push
das
mov
mov
cdq
lea
scas
sub
xchg
lea
sbb
pop
add
mov
(bad)
enter
push
adc
ins
(bad)
aam
mov
cmp
add
hlt
(bad)
(bad)
(bad)
jmp
dec
mov
mul
test
inc
mov
mov
int
(bad)
(bad)
inc
lahf
gs
inc
sahf
sbb
out
mov
cmp
int3
xchg
not
aaa
jmp
call
leave
xchg
cmps
xchg
xchg
aas
mov
scas
adc
rol
inc
out
(bad)
(bad)
call
pop
push
into
fst
cmp
mov
or
nop
and
mov
lahf
(bad)
(bad)
(bad)
push
pop
xlat
out
or
mov
scas
enter
sbb
and
jmp
stc
xchg
pop
ins
jg
(bad)
jmp
mov
stc
and
xor
pusha
popf
retf
push
aaa
mov
pop
cld
call
xchg
clc
add
push
xor
or
int3
sub
es
(bad)
(bad)
dec
stos
(bad)
sbb
mov
xchg
sar
cmp
ret
add
loopne
cdq
sbb
out
sbb
int
add
retf
stos
jmp
retf
dec
call
rol
adc
cmps
and
pop
xchg
movs
dec
xor
and
cmp
cwde
(bad)
(bad)
(bad)
call
dec
cmp
mov
sub
lods
jg
ror
inc
adc
ret
add
mov
cmp
shl
sbb
pop
loopne
mov
sahf
aaa
iret
popf
(bad)
(bad)
(bad)
call
jle
arpl
dec
mov
aas
bnd
pop
inc
test
mov
sub
test
adc
(bad)
dec
cmp
icebp
cli
ins
jmp
jbe
xchg
aas
push
push
mov
inc
jge
(bad)
mov
inc
jmp
fldenv
push
mov
mov
mov
mov
cmp
jmp
out
sbb
and
dec
cmp
pushf
(bad)
ins
out
leave
push
fisttp
(bad)
push
fwait
ds
mov
popf
mov
and
hlt
out
out
mov
(bad)
(bad)
(bad)
dec
out
jnp
sbb
xor
rcl
call
push
mov
aas
or
fwait
inc
out
popa
sahf
pop
push
aam
push
sbb
shl
(bad)
(bad)
jmp
stc
adc
dec
dec
ret
jg
adc
or
in
push
scas
into
push
xchg
(bad)
(bad)
(bad)
inc
jmp
jb
xchg
pop
xchg
inc
fsubr
lods
pop
cmp
pop
add
fadd
cmp
mov
(bad)
(bad)
(bad)
call
mov
pop
(bad)
je
hlt
movs
bound
jl
and
xor
stos
mov
jbe
jg
call
in
inc
scas
jae
retf
lods
mov
push
mov
cdq
idiv
je
out
lods
inc
(bad)
lahf
test
sbb
mov
jmp
sbb
adc
scas
(bad)
(bad)
jmp
dec
mov
push
fwait
push
lahf
or
sbb
add
jns
leave
inc
sar
inc
jp
ja
repz
cdq
adc
scas
cmp
fimul
cmp
sti
enter
push
in
(bad)
(bad)
(bad)
inc
push
cmp
repz
inc
mov
mov
(bad)
jne
out
std
scas
inc
gs
push
(bad)
(bad)
ds
add
aas
inc
and
jbe
ss
lods
adc
xor
in
mov
mov
pop
(bad)
(bad)
(bad)
jmp
test
mov
mov
daa
(bad)
repz
int3
cmp
sti
dec
scas
mov
sub
pop
test
or
inc
cld
pop
or
loopne
mov
aam
cmpxchg
nop
mov
mov
nop
sar
(bad)
push
ins
pushaw
(bad)
sbb
(bad)
and
jmp
call
(bad)
(bad)
jg
xchg
lds
sbb
int
jle
ficomp
je
mov
inc
mul
out
(bad)
scas
sar
(bad)
(bad)
push
sti
push
mov
xor
shl
push
cmp
shl
cmp
aad
inc
push
(bad)
(bad)
dec
or
nop
inc
jg
popf
cmp
fld
sahf
das
test
lods
mov
cwde
ds
test
cmp
(bad)
call
stos
loopne
(bad)
jmp
sbb
nop
xor
hlt
dec
out
push
(bad)
into
and
(bad)
call
add
push
add
push
and
mov
pop
and
(bad)
(bad)
(bad)
jge
std
or
jg
jns
mov
sub
imul
adc
pop
hlt
(bad)
(bad)
(bad)
(bad)
fdivr
jmp
popa
mov
cmp
daa
int
popa
mov
mov
rcr
xchg
loope
mov
adc
popa
pop
mov
inc
retf
(bad)
(bad)
(bad)
call
inc
xor
sar
sub
adc
push
arpl
loop
xor
mov
inc
mov
fwait
loopne
inc
cmps
or
ins
in
rcr
xchg
sbb
push
sbb
(bad)
(bad)
dec
lds
mov
loop
and
push
(bad)
(bad)
mov
enter
icebp
out
into
jb
imul
mov
loopne
ret
(bad)
(bad)
(bad)
jmp
pop
lahf
repz
mov
xchg
push
shr
outs
out
in
in
enter
xlat
test
add
fdivr
(bad)
call
int3
sbb
jmp
(bad)
cmps
ins
pop
sbb
aam
dec
jp
out
(bad)
(bad)
(bad)
(bad)
call
int
sub
dec
jne
mov
sub
mov
xchg
jl
bound
jmp
inc
mov
mov
sahf
pop
or
scas
in
imul
std
mov
cs
push
inc
push
dec
sbb
dec
pusha
inc
inc
or
pop
fs
stc
dec
stc
(bad)
cs
stos
in
and
ja
(bad)
(bad)
call
rcl
cmp
sti
imul
or
leave
das
retf
out
aad
mov
jo
stos
ret
cwde
adc
mov
(bad)
aam
outs
in
stc
test
call
inc
hlt
mov
pop
jnp
push
popa
enter
and
adc
shl
aas
sub
(bad)
(bad)
call
stos
pop
mov
(bad)
mov
pop
xchg
pop
(bad)
adc
mov
cmp
push
jmp
(bad)
inc
add
mov
pop
call
sti
jge
into
jnp
(bad)
mov
popf
cmp
jg
dec
xchg
jle
sub
mov
pop
adc
jae
inc
push
fwait
in
mov
or
(bad)
inc
lods
mov
leave
pushf
sahf
cli
fidiv
imul
scas
dec
mov
ins
inc
push
and
push
jns
cmp
pushf
sbb
ds
xchg
mov
jmpw
(bad)
(bad)
(bad)
push
repz
xchg
mov
fwait
imul
lock
out
repz
ret
(bad)
mov
out
jnp
cmp
(bad)
or
push
je
shr
cmp
inc
neg
fs
or
(bad)
(bad)
inc
push
and
xchg
or
and
aaa
xor
lahf
pop
jne
rcl
icebp
clc
(bad)
(bad)
dec
add
scas
cs
cmc
jecxz
dec
clc
xchg
adc
add
or
push
jnp
push
sub
xlat
jecxz
dec
xor
cmc
inc
push
mov
iret
lds
stos
sahf
push
into
mov
(bad)
(bad)
push
dec
bound
inc
xchg
add
test
outs
sub
popa
xlat
call
les
(bad)
inc
sub
jae
lds
mov
mov
shr
adc
mov
and
cmc
cli
ins
inc
bound
std
sahf
ss
jp
push
(bad)
(bad)
jmp
scas
dec
rcr
out
jne
mov
mov
mov
(bad)
(bad)
mov
adc
popa
jmp
jmp
sub
add
outs
test
mov
(bad)
(bad)
(bad)
call
loopne
pop
pop
push
ret
mov
push
add
outs
retf
stos
and
stos
sti
call
xchg
hlt
(bad)
cmp
push
das
shl
sbb
jg
(bad)
(bad)
(bad)
mov
adc
dec
push
pop
and
enter
adc
std
rcl
and
mov
dec
mov
popa
sbb
fs
push
addr16
and
dec
(bad)
hlt
out
call
(bad)
cld
(bad)
(bad)
call
cmp
sub
lods
loopne
push
hlt
dec
loope
mov
lock
xchg
or
(bad)
(bad)
call
lea
xor
jg
cmp
add
mov
sub
xor
int3
in
(bad)
(bad)
push
js
add
xchg
loope
int3
fxch
gs
push
ss
jmp
jmp
in
pop
outs
mov
inc
sub
push
fsubr
(bad)
push
inc
pop
in
stc
push
repz
lea
cmp
div
pop
push
lea
and
(bad)
(bad)
dec
pop
pop
hlt
lods
lea
xor
arpl
push
cmp
sub
div
dec
(bad)
push
cld
add
dec
rcr
out
test
outs
and
or
addr16
std
(bad)
dec
jmp
pusha
aas
call
repz
add
add
fnstenv
ret
call
cmps
fstp
ins
sbb
shl
in
or
nop
loopne
addr16
mov
sub
test
(bad)
(bad)
dec
add
adc
les
pop
repnz
dec
sub
or
xor
push
clc
xor
aad
jne
jg
push
shl
jl
out
or
or
add
in
inc
mov
aam
data16
pushf
cmps
movs
aam
(bad)
(bad)
jg
pop
stos
or
or
addr16
jbe
add
aam
and
ror
in
aad
(bad)
(bad)
push
dec
es
ret
push
mov
xchg
fcmovnb
inc
jb
or
mov
lods
dec
sub
arpl
cdq
call
(bad)
call
pop
add
sar
scas
fcomp
sub
push
sub
pop
(bad)
jg
add
mov
imul
fcomip
(bad)
call
inc
lahf
add
mov
cmp
add
aaa
iret
xor
call
aam
lock
push
ins
pusha
sub
test
sub
push
mov
cmp
pop
mov
cs
(bad)
dec
ficomp
pop
mov
ficomp
nop
(bad)
adc
adc
or
cmp
ss
out
cmc
(bad)
(bad)
out
cmp
test
pusha
jbe
mov
std
jmp
sbb
push
(bad)
(bad)
call
xor
inc
leave
inc
daa
jnp
jbe
xchg
(bad)
ficom
xchg
push
or
scas
mov
mov
jmp
je
ret
in
pop
jmp
hlt
pop
sbb
iret
out
dec
pop
jmp
inc
in
dec
dec
inc
xlat
iret
pop
cmp
ficom
(bad)
or
jmp
mov
(bad)
call
mov
es
cmp
xchg
shl
or
mov
push
cmc
retf
jl
jecxz
(bad)
(bad)
(bad)
mov
adc
dec
xor
rcl
(bad)
js
mov
cwde
xchg
cmc
imul
mov
and
lods
xchg
push
icebp
and
xor
call
int
int3
movlps
(bad)
jmp
clc
push
jne
cmp
mov
jmp
sar
add
cmps
jae
jmp
add
cwde
dec
adc
jmp
js
in
es
lods
mov
in
aas
fld
mov
(bad)
(bad)
push
enter
std
sar
aam
(bad)
cdq
cmps
mov
push
jl
(bad)
mov
dec
movs
add
push
lods
push
hlt
lods
cli
dec
icebp
inc
dec
enter
mov
push
bound
cwde
nop
ja
sub
cld
aad
lds
daa
(bad)
jmp
pop
leave
inc
adc
inc
pop
jmp
push
stos
jmp
and
jno
aad
push
(bad)
(bad)
(bad)
dec
and
lods
mov
ja
std
ja
aad
or
xchg
sub
sub
push
fbstp
push
es
inc
jecxz
(bad)
hlt
adc
sub
sbb
(bad)
(bad)
push
inc
loopne
sub
cmp
xchg
test
inc
ret
outs
call
jne
pop
lock
(bad)
(bad)
(bad)
(bad)
clc
adc
lods
adc
aam
pop
or
dec
adc
(bad)
loopne
push
lock
jmp
mov
cmp
mov
das
mov
js
jno
(bad)
(bad)
dec
sub
shr
idiv
das
jo
hlt
arpl
mov
sub
xchg
jo
aas
aam
inc
ins
mov
sar
mov
or
and
and
pop
cmc
mov
shl
repnz
dec
fdivr
add
(bad)
(bad)
push
add
jmp
outs
mov
stos
mov
push
pop
ja
loope
frstor
dec
daa
hlt
cli
(bad)
(bad)
jmp
pop
jne
fnstcw
mov
(bad)
fwait
lock
and
jb
jg
(bad)
jmp
call
loop
inc
test
or
jp
pop
sar
mov
stc
rcr
outs
pop
scas
(bad)
aad
fild
xor
jmp
or
arpl
icebp
xor
fwait
cmp
xor
xor
mov
(bad)
in
adc
pop
cmp
pop
mov
in
pop
sbb
loopne
or
cmc
sbb
outs
cmp
inc
pop
scas
xor
mov
hlt
ja
and
jb
sti
and
xchg
movs
and
mov
dec
sbb
scas
sub
cwde
retf
sti
xchg
pop
iret
(bad)
cs
jmp
jmp
(bad)
(bad)
(bad)
jmp
in
cli
das
mul
mov
cli
int3
gs
mov
mov
pop
cmp
rcl
inc
(bad)
loop
mov
xchg
mov
ror
(bad)
(bad)
(bad)
push
add
imul
xchg
movs
and
lea
add
cmps
pop
(bad)
(bad)
(bad)
jmp
mov
ins
lods
sbb
jo
xchg
arpl
out
xchg
and
xchg
nop
xchg
jp
out
cwde
xchg
dec
add
lahf
mov
pop
arpl
loope
leave
sar
outs
mov
or
xchg
stc
add
mov
fwait
sub
cmps
outs
pusha
fld
dec
pop
xor
sar
(bad)
(bad)
(bad)
inc
mov
aam
test
xor
or
cmp
push
sbb
pop
aad
(bad)
(bad)
(bad)
call
mov
or
cld
jo
pop
sub
mov
cmp
xor
push
push
(bad)
(bad)
(bad)
dec
nop
cli
cmps
add
and
inc
cmps
div
push
sbb
(bad)
(bad)
(bad)
call
out
retf
lods
pop
aaa
mov
mov
fisubr
test
mov
xor
(bad)
call
dec
xchg
mov
cmps
pushf
neg
fbstp
stc
pop
cmps
fidivr
mov
retf
in
js
mov
sub
push
or
sub
or
mov
(bad)
(bad)
(bad)
push
mov
and
aaa
or
cmps
in
dec
fs
test
pop
out
cmp
(bad)
(bad)
(bad)
stc
push
sbb
dec
pop
jl
(bad)
push
(bad)
fisttp
shl
or
jbe
test
push
test
inc
mov
(bad)
(bad)
(bad)
mov
xchg
out
mov
mov
sub
test
sti
jmp
gs
mov
push
push
in
arpl
pop
cs
(bad)
jmp
scas
mov
in
popa
shr
xchg
sbb
repnz
(bad)
inc
dec
sti
jp
sub
and
popa
stos
and
sar
(bad)
dec
dec
dec
dec
ja
pop
xor
or
push
and
aam
or
repnz
test
(bad)
(bad)
(bad)
inc
cdq
inc
and
mul
cmps
je
imul
sbb
cmc
outs
in
fnstcw
mov
(bad)
(bad)
(bad)
jle
mov
jmp
int3
movs
loope
or
imul
pop
inc
fdivr
in
aaa
cld
(bad)
(bad)
(bad)
mov
loop
mov
scas
sbb
jo
cdq
in
fs
add
pop
jl
hlt
hlt
fmul
cli
stos
icebp
dec
stos
sub
outs
js
retf
dec
pop
outs
(bad)
jmp
jno
adc
fist
outs
pop
mov
popf
pop
aas
test
push
inc
mov
pop
(bad)
(bad)
mov
shl
pand
jo
movs
cli
xchg
adc
sti
cmp
dec
(bad)
in
jg
(bad)
call
movs
retf
das
das
cmp
ret
xchg
cld
jecxz
jo
fbld
xchg
mov
or
les
(bad)
(bad)
(bad)
mov
and
loope
dec
popf
movs
push
jns
sub
test
enter
(bad)
call
imul
out
push
add
or
push
das
xor
test
dec
or
xchg
push
cmps
or
xor
sub
xchg
mov
mov
jnp
and
sub
(bad)
(bad)
(bad)
call
jo
adc
xor
rol
aam
sbb
and
jbe
sbb
stos
mov
sub
(bad)
(bad)
out
cli
mov
mov
(bad)
or
rcl
test
stos
shr
push
das
mov
jb
mov
nop
sbb
mov
loope
mov
add
cdq
sar
nop
jo
in
jge
ds
xchg
out
clc
in
jmp
fcom
xchg
(bad)
jg
sub
and
push
(bad)
(bad)
call
sub
ins
cs
and
icebp
loope
mov
mov
and
xchg
mov
daa
push
sbb
(bad)
jmp
bound
push
add
lahf
jae
fs
sub
mov
(bad)
(bad)
(bad)
call
jl
test
sar
lds
out
out
xchg
pop
mov
cmp
inc
out
cwde
popf
jbe
dec
(bad)
(bad)
(bad)
(bad)
fadd
imul
dec
(bad)
iret
test
stos
pop
addr16
ins
mov
adc
(bad)
(bad)
jg
into
pop
mov
movs
fdiv
push
jae
xor
jle
inc
fwait
jg
(bad)
(bad)
call
aas
add
sbb
aaa
out
pop
mov
stos
xchg
call
inc
es
in
push
fidiv
push
hlt
out
lea
movs
aad
movs
ja
(bad)
push
sti
(bad)
rcr
jmp
xor
xor
(bad)
(bad)
call
jno
popf
xchg
repz
loopne
mov
outs
call
jbe
xchg
cmp
or
xchg
(bad)
(bad)
jmp
rol
arpl
sbb
sar
adc
inc
mov
cdq
mov
fs
inc
cld
inc
fisttp
out
movs
ins
sar
xchg
shl
in
das
clc
(bad)
jmp
and
mov
mov
mov
repnz
push
das
cli
(bad)
inc
outs
ret
pop
(bad)
sbb
and
pop
ja
test
(bad)
jmp
out
mov
call
repz
and
xor
(bad)
mov
fcom
hlt
fcom
ss
push
retf
jae
(bad)
(bad)
jmp
sub
fs
aaa
loop
jne
repnz
icebp
pop
pusha
cmp
cmp
mov
outs
mov
adc
(bad)
es
retf
inc
jp
inc
mov
fsubr
(bad)
(bad)
(bad)
jg
sahf
rcl
hlt
sub
mov
jno
leave
mov
test
(bad)
dec
mov
out
jnp
push
out
call
test
sub
push
aam
(bad)
(bad)
jmp
cmp
aam
add
fisttp
out
mov
out
sbb
(bad)
(bad)
call
jno
aas
mov
ret
cs
sbb
ds
mov
test
repz
add
sbb
(bad)
(bad)
dec
ins
out
mov
add
aaa
test
or
jae
sub
jbe
mov
sbb
inc
sbb
and
jne
or
inc
(bad)
mov
and
out
dec
inc
icebp
nop
test
test
(bad)
jmp
push
push
movs
cmp
pop
pop
push
sbb
gs
sbb
scas
lahf
jp
add
ins
jnp
scas
mov
or
jecxz
mov
aad
dec
push
(bad)
push
call
stc
call
repz
pop
push
in
es
and
cmc
mov
aad
(bad)
(bad)
(bad)
inc
inc
pop
or
out
(bad)
lahf
call
rcl
dec
ret
sbb
xchg
clc
adc
(bad)
(bad)
(bad)
call
sbb
das
test
mov
lahf
int3
call
fwait
cli
xchg
dec
pop
xor
mov
retf
adc
push
xchg
mov
(bad)
call
mov
mov
cmp
movs
cmp
inc
aad
out
gs
xor
lea
push
cli
call
rol
stos
test
mov
mov
(bad)
(bad)
dec
mov
add
cmp
xor
lahf
enter
sub
out
test
call
sahf
(bad)
mov
xor
mov
xchg
cmp
pushf
repnz
cs
iret
(bad)
mov
or
jmp
test
or
fist
(bad)
fst
(bad)
dec
pop
jae
xchg
mov
outs
mov
mov
(bad)
(bad)
mov
je
xor
je
cdq
in
das
cs
xchg
xchg
rcl
jmp
ins
loopne
inc
inc
xchg
xchg
xchg
adc
ficomp
jbe
pop
cld
(bad)
(bad)
(bad)
out
pop
fs
aam
xor
push
xchg
jle
sti
pop
call
jmp
dec
jb
(bad)
or
pop
std
adc
mov
inc
clc
sti
ja
xchg
or
mov
jp
mov
mov
jl
mov
add
(bad)
(bad)
(bad)
jmp
js
das
sub
sbb
push
in
lods
int3
and
adc
cmps
xchg
sbb
push
ret
jmp
and
mov
(bad)
mov
(bad)
jmp
mov
fcmovnu
leave
mov
xchg
xor
add
sbb
ins
or
mov
push
or
jbe
mov
sub
mov
repnz
(bad)
(bad)
fcomip
out
mov
add
in
repnz
mov
and
test
adc
in
sti
sbb
jle
jl
rol
xor
test
(bad)
pop
mov
jnp
retf
or
xor
loope
sub
inc
cli
adc
popa
xchg
mov
sbb
(bad)
(bad)
jmp
dec
add
jne
sub
mov
and
sahf
push
adc
int3
(bad)
(bad)
(bad)
jmp
mov
sbb
out
mov
mov
lods
cmp
xor
out
mov
mov
out
lods
in
pop
std
jae
pop
lahf
fisttp
jp
(bad)
(bad)
call
retf
xchg
pop
adc
inc
push
lock
mov
(bad)
push
int
fild
out
pop
xor
int3
push
into
std
popa
mov
cmp
outs
inc
adc
(bad)
(bad)
(bad)
jmp
int3
neg
add
repnz
add
cs
out
sbb
in
adc
clc
outs
add
(bad)
jmp
aad
sbb
xchg
das
and
cmp
fimul
dec
ins
(bad)
inc
cld
shl
mov
cdq
loop
clc
add
and
(bad)
call
dec
add
xchg
je
cmp
sbb
cli
(bad)
(bad)
(bad)
call
(bad)
cmp
sub
mov
xor
push
jnp
or
jb
and
pop
(bad)
(bad)
(bad)
push
test
rol
pushf
sbb
pop
loope
xchg
fidivr
call
(bad)
out
cli
jmp
fdivr
test
inc
test
push
and
mov
cmp
pop
push
sbb
jne
mov
jmp
xor
mov
mov
int
(bad)
(bad)
jmp
sbb
lock
cmp
hlt
loope
mov
inc
mov
mov
cmp
icebp
call
pop
lea
inc
jnp
adc
(bad)
pop
loopne
mov
sbb
xchg
hlt
(bad)
(bad)
dec
sub
aaa
sub
clc
test
aas
sbb
or
mov
int3
xor
clc
xchg
xchg
add
std
fmul
cmp
jmp
pop
xchg
add
call
mov
(bad)
(bad)
(bad)
inc
fisttp
test
mov
push
add
xchg
dec
jle
xchg
imul
sbb
(bad)
(bad)
les
push
add
push
push
or
sub
inc
pop
mov
xchg
(bad)
mov
(bad)
(bad)
(bad)
(bad)
sti
jbe
test
inc
rcr
push
movs
pop
xchg
scas
sti
mov
xor
jnp
(bad)
(bad)
inc
jns
jns
mov
call
dec
enter
mov
dec
ds
pop
pop
jmp
dec
xor
mov
push
xchg
xchg
mov
and
(bad)
(bad)
mov
jns
in
inc
js
ret
scas
stos
or
mov
mov
aas
sar
(bad)
mov
or
icebp
adc
pop
dec
sbb
jmp
dec
xchg
adc
pop
jl
test
ret
dec
cli
and
(bad)
(bad)
dec
add
fs
mov
xchg
jbe
scas
fisttp
xchg
push
fcmovnbe
sbb
(bad)
jmp
add
adc
adc
(bad)
out
adc
jnp
or
shl
pop
or
or
test
jl
dec
mov
mov
mov
cmp
sub
adc
xchg
cmp
out
inc
jno
jmp
shl
lods
add
pop
pop
outs
inc
(bad)
(bad)
(bad)
call
shr
cmp
lods
cmp
popf
cmps
xor
pop
or
(bad)
(bad)
push
loope
add
push
(bad)
neg
ins
xor
fldenv
(bad)
iret
push
cmp
sti
add
inc
mov
(bad)
inc
jmp
es
retf
mov
loopne
mov
lods
movs
movs
push
mov
je
mov
cmp
hlt
xor
into
inc
jnp
cmp
pop
sub
std
lods
adc
movs
ret
lahf
mov
(bad)
(bad)
inc
mov
push
jbe
sbb
push
push
adc
sbb
xlat
sbb
(bad)
jg
push
fs
sub
cmp
and
jne
in
push
sahf
fwait
mov
cli
out
rcl
sub
retf
dec
retf
cmp
fisttp
lahf
jge
push
xor
cmp
scas
(bad)
(bad)
(bad)
jmp
mov
inc
and
jo
adc
and
push
repz
pop
push
retf
loopne
pop
icebp
mov
lds
cmp
shl
cmp
(bad)
(bad)
(bad)
call
(bad)
adc
les
cmp
lock
or
ins
nop
(bad)
lock
(bad)
push
(bad)
dec
mov
mov
cwde
fmul
or
jecxz
mov
jl
in
(bad)
(bad)
call
sbb
dec
fild
out
dec
and
dec
dec
inc
sbb
mov
add
jg
in
fwait
pop
jo
mov
(bad)
jmp
adc
sahf
pop
mov
pop
xchg
xor
int3
mov
push
push
lahf
std
pop
(bad)
out
cli
push
pusha
out
(bad)
(bad)
(bad)
call
push
and
je
fcmovnu
cli
add
mov
inc
loope
(bad)
lock
ins
push
frstor
in
(bad)
jmp
sbb
sub
retf
test
xor
sub
dec
pop
cmp
inc
inc
inc
fsub
ds
or
xor
jnp
lock
call
(bad)
jnp
sub
or
fnstenv
sub
add
cmp
jae
(bad)
(bad)
inc
rcl
cmp
sbb
mov
mov
mov
adc
jmp
adc
(bad)
(bad)
(bad)
call
and
mov
mov
out
pusha
imul
fild
fistp
into
popa
sbb
(bad)
(bad)
call
mov
dec
mov
in
mov
aad
mov
pop
shl
and
mov
inc
cld
call
sti
lea
repnz
mov
sbb
ins
iret
rol
adc
dec
adc
pop
les
imul
sub
ja
mov
sbb
imul
ja
stos
xor
mov
xchg
dec
stc
xor
in
or
(bad)
(bad)
(bad)
call
clts
mov
sbb
fwait
repz
mov
pop
lods
loope
push
gs
(bad)
(bad)
call
stc
ret
aad
outs
outs
sar
lahf
jns
nop
sbb
mov
aad
retf
inc
pop
push
std
(bad)
jmp
(bad)
sub
sub
jp
mov
dec
fld
(bad)
jg
push
mov
push
iret
mov
imul
sbb
xor
pop
fcomip
jmp
test
sub
out
lods
pop
adc
add
(bad)
out
pop
add
cwde
mov
fadd
test
inc
jp
push
xchg
js
mov
cmc
enter
mov
adc
nop
out
mov
imul
(bad)
inc
(bad)
fistp
stc
daa
test
gs
push
cmp
inc
iret
dec
and
lods
test
call
mov
jp
xchg
ror
or
add
movs
jmp
and
push
(bad)
(bad)
(bad)
(bad)
jmp
adc
hlt
xor
fdiv
lea
adc
cmp
out
movs
int
aad
add
mov
(bad)
(bad)
call
daa
push
inc
aas
inc
add
out
push
test
cmp
sub
sub
test
push
addr16
jnp
(bad)
(bad)
jmp
movs
xlat
jl
fcmovbe
sub
fist
mov
imul
cs
imul
(bad)
(bad)
call
jg
rcl
inc
mov
xor
xchg
retf
popf
loope
or
xchg
scas
xor
(bad)
mov
call
std
xor
xchg
test
popf
(bad)
call
push
retf
jnp
push
lods
outs
cmp
jl
inc
std
rcl
sub
(bad)
(bad)
(bad)
(bad)
mov
jl
xchg
xchg
fxch
stos
je
(bad)
(bad)
(bad)
jmp
xor
xchg
jno
xor
mov
jecxz
push
mov
mov
or
push
push
add
arpl
arpl
mov
je
inc
add
cmp
dec
out
dec
mov
inc
retf
xor
mov
mov
mov
mov
ror
outs
in
adc
jns
mov
and
(bad)
(bad)
jmp
cmp
adc
retf
(bad)
(bad)
add
mov
adc
rol
push
and
mov
das
lea
jae
loop
mov
mov
inc
fwait
pop
(bad)
(bad)
(bad)
jmp
xchg
sbb
pop
cdq
dec
dec
jbe
or
in
push
into
cmp
or
(bad)
(bad)
(bad)
call
add
and
xor
pushf
adc
cmp
aam
cmc
int
xor
fdivrp
(bad)
(bad)
call
xchg
ss
(bad)
popf
pusha
adc
(bad)
int3
or
aas
or
imul
adc
inc
movs
dec
cdq
push
icebp
sub
add
or
add
ins
loop
cmps
cmc
sub
sar
(bad)
(bad)
jmp
movs
and
lahf
dec
stos
sbb
dec
inc
data16
(bad)
movs
cmp
(bad)
cmp
jb
lods
mov
aas
stos
ins
push
inc
pop
sbb
xchg
aam
arpl
(bad)
(bad)
jmp
les
fstp
jnp
mov
sbb
int
pop
cmovo
sbb
(bad)
(bad)
(bad)
dec
inc
daa
pop
ret
pusha
stc
je
jl
aas
out
jae
in
inc
nop
enter
jmp
fild
jmp
cmp
adc
xor
shl
add
rcl
popf
mov
lods
jge
mov
(bad)
(bad)
push
or
pop
arpl
addr16
add
test
cmc
data16
jae
and
daa
popa
mov
(bad)
(bad)
sbb
and
into
jp
or
leave
cmp
sbb
xor
(bad)
(bad)
call
imul
mov
cmp
hlt
adc
pop
dec
and
jb
retf
jbe
mov
and
addr16
dec
sub
cmps
xchg
adc
pushf
xchg
mov
pop
mov
(bad)
(bad)
push
inc
xor
pop
fistp
in
mov
and
mov
xor
lahf
cli
jl
pushf
jne
inc
(bad)
(bad)
(bad)
(bad)
mov
adc
pop
lds
or
mov
push
mov
mov
out
push
dec
(bad)
(bad)
(bad)
call
xchg
xchg
cmovg
popa
loop
mov
ret
clc
addr16
out
mov
imul
std
fist
leave
(bad)
(bad)
(bad)
jmp
and
das
cdq
push
in
add
and
pusha
stos
fsubrp
mov
test
ja
rol
lahf
jp
das
cli
(bad)
push
dec
icebp
or
inc
mov
outs
jmp
push
push
pop
pushf
and
or
and
add
in
retf
fld
(bad)
inc
cld
inc
jb
cmp
or
and
out
aas
ret
sub
(bad)
(bad)
(bad)
push
js
jl
and
lock
sbb
fcomip
arpl
xor
adc
cs
clc
sbb
pop
and
ja
cld
xchg
push
mov
(bad)
(bad)
inc
push
mov
pop
dec
pop
pop
mov
jnp
cli
sub
mov
arpl
jne
xchg
loop
fmul
pop
sbb
(bad)
(bad)
jg
push
ficomp
ror
dec
mov
adc
into
cmp
mov
fwait
popf
outs
repz
inc
or
xchg
(bad)
(bad)
(bad)
(bad)
mov
scas
sbb
cwde
inc
and
adc
xor
ffreep
mov
(bad)
(bad)
(bad)
dec
mov
icebp
cdq
mov
int
pop
inc
sbb
inc
inc
loop
les
adc
push
xchg
mov
pop
addr16
repz
dec
enter
xchg
out
(bad)
push
pop
bound
retf
(bad)
(bad)
(bad)
dec
mov
fnstsw
cmps
or
inc
and
and
lds
cmc
fsubr
stc
(bad)
(bad)
jg
rcl
movs
out
ret
and
or
arpl
clc
aad
ss
mov
(bad)
(bad)
inc
pop
in
(bad)
outs
jo
cld
fdiv
std
ja
adc
cmp
imul
jg
repz
sar
push
jmp
push
adc
inc
mov
push
xchg
popf
dec
(bad)
push
sbb
(bad)
mov
adc
je
fs
ss
(bad)
(bad)
(bad)
out
pop
or
pop
(bad)
out
fs
ins
mov
cli
shr
call
(bad)
(bad)
(bad)
(bad)
inc
sub
ret
xchg
and
push
or
inc
not
mov
jge
pop
xchg
(bad)
ins
jp
xchg
xor
inc
pusha
add
jp
inc
xchg
push
lods
sbb
pop
fdivr
adc
dec
push
pop
inc
dec
cmp
call
dec
mov
stos
dec
outs
inc
loopne
dec
cmp
daa
inc
das
or
cli
fcomp
sub
mov
and
pop
jb
ss
jle
ror
les
inc
(bad)
mov
sub
out
jae
pop
mov
call
iret
or
scas
lahf
xchg
xor
(bad)
(bad)
call
mov
inc
jmp
mov
cdq
xor
pop
mov
xchg
and
pop
daa
(bad)
(bad)
(bad)
dec
(bad)
bswap
and
dec
(bad)
push
mov
sbb
stos
adc
inc
cmp
jl
dec
sub
(bad)
(bad)
(bad)
inc
sub
push
mov
jb
cmps
xchg
gs
push
push
jno
jmp
mov
(bad)
mov
jg
shr
xor
fisttp
pop
sub
inc
daa
jge
cli
(bad)
(bad)
fucomi
or
mov
add
test
movs
push
inc
fnstenv
xor
(bad)
(bad)
(bad)
call
xchg
and
ret
pushf
jg
sbb
ss
cmp
dec
mov
into
jmp
mov
(bad)
xchg
stos
xor
pop
xor
out
jno
(bad)
lods
sar
pop
into
cmps
(bad)
(bad)
(bad)
(bad)
dec
stc
lea
add
out
pop
push
jge
sbb
cmps
jmp
stos
xchg
lock
cmp
pop
cmp
pop
dec
xor
(bad)
sar
pop
mov
call
lea
(bad)
(bad)
(bad)
push
adc
mov
rcl
ds
adc
add
cmp
cmp
push
(bad)
jmp
mov
test
mov
xchg
add
nop
or
(bad)
(bad)
jg
mov
std
ja
leave
sbb
fld
push
adc
jp
sub
mov
out
jmp
ret
bound
pop
mov
jl
jo
inc
fisttp
or
fwait
xchg
(bad)
(bad)
(bad)
(bad)
out
cmp
dec
pop
fist
xchg
mov
cmp
in
in
add
push
sub
push
std
(bad)
jle
push
popf
jo
xor
fcmovb
add
pop
and
pop
out
fcom
das
cli
(bad)
dec
lds
shl
and
push
xor
add
sub
aad
(bad)
jmp
popf
mov
add
pop
and
adc
out
call
cs
or
pop
fld
dec
mov
jmp
add
xchg
stos
addr16
mov
cmc
push
shr
cld
jmp
xor
mov
(bad)
jmp
fs
addr16
call
(bad)
mov
in
xlat
mov
fist
fcomp
push
nop
jg
std
(bad)
fiadd
pop
jmp
pop
clc
retf
and
pop
mov
iret
sub
and
jmp
push
sbb
sahf
xchg
pop
into
das
mov
(bad)
scas
(bad)
(bad)
(bad)
(bad)
aas
outs
jg
imul
push
addr16
popf
aas
push
sbb
xchg
jbe
xor
or
(bad)
(bad)
(bad)
call
mov
int3
out
dec
fisub
in
jno
repnz
sbb
pop
int3
test
fst
jne
xor
std
(bad)
(bad)
(bad)
(bad)
cmp
or
mov
fs
xlat
movs
mov
aaa
in
sub
es
or
and
call
fst
mov
div
dec
(bad)
(bad)
cmp
sub
(bad)
mov
xor
scas
mov
(bad)
(bad)
(bad)
mov
out
lods
dec
and
cmp
push
jecxz
aaa
mov
call
push
jge
mov
mov
mov
test
call
push
data16
into
std
push
jp
(bad)
jmp
push
fcmovnbe
xchg
mov
mov
bound
ja
in
(bad)
(bad)
call
jmp
sub
popa
cwde
adc
sub
jecxz
add
stos
(bad)
sbb
sahf
jg
(bad)
(bad)
js
and
mov
jbe
(bad)
test
xor
xor
int3
adc
add
push
xchg
sub
outs
cs
bound
dec
fdiv
jnp
(bad)
(bad)
jmp
sbb
xchg
call
dec
mov
xchg
icebp
sbb
mov
sub
(bad)
(bad)
call
adc
repz
(bad)
lock
data16
daa
xlat
jmp
dec
mov
pushf
jno
mov
lock
(bad)
inc
inc
adc
inc
push
in
(bad)
(bad)
mov
movaps
out
bound
outs
jne
(bad)
(bad)
dec
mov
ss
retf
jp
(bad)
mov
cmp
sub
mov
pusha
rcr
adc
sub
jmp
jecxz
(bad)
and
and
daa
pop
rcr
pusha
adc
dec
and
fcomip
(bad)
(bad)
cmp
sahf
xchg
ss
mov
not
cli
addr16
clc
mov
fist
sti
call
adc
push
sub
div
cdq
xchg
adc
push
push
jg
mov
(bad)
aam
push
cwde
es
inc
push
imul
and
stos
jno
adc
sahf
dec
cmp
and
(bad)
sbb
call
mov
cdq
push
call
add
inc
mov
cmp
sub
sahf
cdq
or
(bad)
(bad)
push
aam
cmps
jecxz
inc
xor
je
out
jmp
jmp
(bad)
(bad)
call
jno
ja
(bad)
dec
outs
pop
scas
les
push
in
retf
add
mov
push
scas
idiv
(bad)
(bad)
(bad)
(bad)
ins
les
pop
rol
sub
fcomp
jb
mov
pop
retf
mov
and
aaa
call
(bad)
out
into
xor
mov
outs
das
adc
add
std
(bad)
dec
loopne
cmp
inc
inc
xchg
inc
add
test
outs
and
xor
sub
lock
(bad)
fidiv
mov
into
retf
cmp
mul
in
lahf
adc
mov
ins
cld
(bad)
jmp
fdivr
bound
push
test
ror
cmp
pop
icebp
pop
sbb
xchg
sub
test
scas
sub
(bad)
jmp
ss
mov
or
ins
lea
inc
mov
mov
xor
sub
outs
hlt
div
pop
jmp
xor
or
adc
stc
add
mov
push
rol
loope
nop
test
ins
fstp
shl
push
pop
loopne
pop
iret
ror
ror
out
pop
scas
jle
mov
imul
ja
jne
retf
sub
sar
mov
pop
fdivr
cmp
and
push
sub
psrlq
nop
test
(bad)
test
dec
xchg
test
sub
pop
push
jle
push
out
ucomiss
fdecstp
sti
xlat
shr
(bad)
push
ja
xchg
mov
pop
ret
inc
or
sti
pop
sar
jle
push
out
das
sbb
mov
jl
repz
loope
pop
pop
adc
jb
push
outs
aas
ja
jle
jmp
(bad)
mov
sti
push
cmp
addr16
retf
in
out
jbe
nop
mov
cmps
scas
nop
add
loopne
out
test
outs
ss
cmps
inc
pop
js
cmp
pop
scas
pop
mov
out
jge
jne
(bad)
xchg
push
mov
jecxz
div
outs
out
sub
pop
ret
xchg
mov
iret
pop
imul
ja
outs
pushw
outs
das
jg
xor
fs
xchg
idiv
shl
and
cvtdq2ps
in
sti
mov
(bad)
mov
sub
push
pandn
das
mov
pop
iret
fadd
pop
xor
ret
jne
ja
cmps
mov
enter
inc
pavgb
or
fdivr
cmp
mov
rcl
movd
fisub
mov
push
jmp
loopne
sti
mov
(bad)
(bad)
call
(bad)
loope
inc
xchg
mov
push
jb
mov
or
call
(bad)
(bad)
call
pop
mov
aas
fs
xor
mov
clc
pop
das
test
sar
(bad)
push
clc
clc
aam
(bad)
push
and
loope
mov
and
push
xor
(bad)
jmp
sti
mov
pushf
mov
mov
sahf
pop
bound
daa
pop
fnstcw
(bad)
(bad)
dec
fisub
push
out
lahf
mov
(bad)
fcomp
in
ret
and
gs
jno
ja
aaa
in
(bad)
(bad)
jmp
out
and
cmps
adc
icebp
loopne
mov
lds
out
lea
(bad)
(bad)
(bad)
dec
pop
(bad)
aad
mov
les
and
mov
int3
and
mov
mov
cdq
mov
inc
scas
pop
pop
imul
xchg
cmc
dec
and
pushf
xchg
rcl
ret
pop
sbb
cmp
push
mov
loope
iret
xor
push
cmp
mov
scas
scas
xchg
and
adc
aaa
imul
(bad)
(bad)
(bad)
call
sub
js
push
jg
and
out
ficomp
les
adc
pop
adc
xor
dec
mov
fucom
xchg
outs
push
or
stos
jne
loop
push
push
add
lahf
mov
inc
leave
mov
cs
(bad)
(bad)
jmp
ss
xor
iret
mov
sahf
ss
push
fdivr
xor
movs
stos
cmc
xchg
ds
(bad)
(bad)
(bad)
ds
mov
inc
data16
retf
sbb
sbb
dec
fdivr
mov
(bad)
push
shl
loope
out
or
mov
(bad)
mov
mov
inc
and
imul
loopne
pop
inc
js
cwde
clc
xor
(bad)
(bad)
(bad)
push
add
clc
and
mov
mov
(bad)
dec
mov
inc
mov
aaa
cld
(bad)
push
call
fbld
fst
xor
(bad)
shl
cmp
pop
push
in
or
xchg
daa
(bad)
sub
enter
hlt
(bad)
stos
rcr
(bad)
(bad)
(bad)
dec
retf
pop
or
mov
mov
(bad)
test
xchg
mov
cmp
mov
dec
out
mov
or
inc
adc
call
iret
jle
adc
mov
pop
jae
es
xchg
mov
sar
mov
jmp
(bad)
push
jmp
add
scas
je
dec
retf
push
mov
(bad)
xchg
mov
sbb
mov
(bad)
(bad)
(bad)
call
in
test
fcmovnb
mov
jmp
and
shl
(bad)
std
mov
(bad)
(bad)
dec
mov
xchg
lods
sbb
iret
test
push
jo
into
mov
ret
ret
cs
(bad)
(bad)
push
push
fistp
pop
div
sahf
mov
stos
push
or
fnstcw
and
loop
push
ss
(bad)
dec
mov
add
jnp
adc
cmps
(bad)
cmps
cmp
lock
aaa
push
sub
fs
inc
(bad)
(bad)
(bad)
call
jmp
xlat
imul
xchg
jmp
cmp
jecxz
ret
and
mov
addr16
cmp
(bad)
(bad)
(bad)
dec
xor
jmp
sar
adc
ss
dec
das
mov
fidiv
xchg
call
sub
adc
mov
push
int
xor
test
push
add
inc
mov
pop
push
jmp
call
(bad)
mov
sub
jg
add
rcl
mov
in
out
(bad)
(bad)
call
cmp
cmp
cwde
sahf
push
pop
mov
add
or
pop
mov
add
inc
es
adc
sub
jmp
mov
push
xor
adc
lock
or
rcl
fidivr
mov
adc
jg
ror
or
out
jmp
sub
addr16
shl
xchg
leave
cwde
push
push
inc
jmp
fcomip
(bad)
(bad)
sub
shl
dec
add
icebp
push
xor
add
and
icebp
(bad)
(bad)
(bad)
(bad)
jp
call
add
ror
retf
pop
ss
mov
jge
sbb
lds
mov
push
cwde
in
xchg
out
repz
sub
div
les
(bad)
(bad)
(bad)
jmp
inc
retf
rcr
mov
movs
inc
shl
ss
push
jne
add
jno
adc
jmp
and
lods
(bad)
aad
pop
je
xor
adc
lock
ret
sub
test
(bad)
(bad)
(bad)
call
paddb
push
mov
(bad)
xchg
xor
jge
(bad)
scas
pop
adc
fnstsw
mov
ja
adc
or
fisubr
mov
(bad)
(bad)
dec
jmp
jmp
add
dec
dec
iret
fild
mov
mov
(bad)
inc
aam
in
stos
lods
or
dec
sbb
lea
adc
cmp
add
popa
push
dec
pop
jg
adc
test
push
sub
lds
and
inc
dec
dec
sbb
dec
jmp
inc
mov
add
push
mul
aas
ffreep
out
sahf
aam
push
(bad)
mov
cld
pop
dec
lock
imul
nop
iret
clc
sub
(bad)
mov
pop
bound
add
mov
cmp
stos
outs
mov
sbb
scas
mov
jmp
add
icebp
imul
ins
cmps
xchg
push
dec
sbb
jbe
cmp
mov
test
jmp
in
ffreep
jp
push
mov
dec
push
dec
adc
push
icebp
aam
adc
jge
adc
lahf
pop
fldenv
push
(bad)
(bad)
push
sbb
sbb
popf
jl
dec
xor
leave
data16
xchg
(bad)
dec
fwait
xchg
stos
or
xor
clc
or
pop
jecxz
loop
rcl
jge
sub
je
or
pusha
inc
fdivr
(bad)
call
push
loope
fdiv
inc
adc
int3
cmps
outs
or
sbb
movs
jg
jp
mov
out
cmps
imul
dec
dec
sbb
fadd
ds
inc
add
dec
cwde
(bad)
(bad)
(bad)
mov
outs
bound
xor
out
xchg
lock
mov
mov
jmp
ins
data16
not
inc
push
imul
scas
inc
jb
pop
mov
(bad)
call
mov
add
mov
and
repz
scas
adc
inc
(bad)
(bad)
(bad)
cli
aad
popa
xor
sar
or
xlat
xchg
xchg
xchg
push
out
dec
(bad)
(bad)
(bad)
inc
pop
mov
inc
pop
fidiv
cmp
fst
popf
ins
jo
(bad)
ret
cmp
xchg
pop
xor
dec
and
(bad)
(bad)
push
cmps
std
xchg
shl
mov
shr
or
jle
sub
adc
psrlq
sbb
add
idiv
(bad)
(bad)
dec
sahf
push
out
pop
mov
adc
jmp
pop
sub
push
pop
les
or
(bad)
(bad)
(bad)
dec
test
sbb
xchg
cmp
imul
inc
dec
add
fwait
mov
leave
xchg
pop
(bad)
(bad)
fcomip
loope
(bad)
imul
pop
push
ret
jge
shl
cmp
push
dec
cmp
(bad)
inc
es
jmp
push
lahf
adc
jns
sub
sub
push
cwde
mov
(bad)
call
rcl
jle
repnz
inc
sbb
clc
pop
popf
int3
pop
cli
jmp
sbb
sbb
sub
cmps
ins
xor
imul
or
fadd
pop
rcl
and
cmp
cmc
scas
jnp
es
or
in
jno
(bad)
(bad)
(bad)
dec
push
aas
inc
add
jae
sbb
mov
inc
cmp
test
dec
ins
mov
sub
mov
(bad)
(bad)
(bad)
push
sub
or
mov
pop
fld
mov
mov
dec
and
loop
jg
ja
sub
(bad)
(bad)
dec
int3
sbb
ficomp
mov
add
ss
dec
mov
cli
mov
in
jecxz
mov
retf
cmc
out
dec
scas
clc
ja
push
dec
daa
fsubr
sub
cmp
pop
adc
pop
and
mov
add
mov
sbb
cmp
fmul
xor
sbb
jnp
mov
jle
push
aaa
(bad)
(bad)
(bad)
jmp
retf
jns
adc
inc
xor
add
push
and
mov
mov
pusha
(bad)
ret
push
std
mov
adc
add
mov
int3
xchg
mov
iret
retf
adc
(bad)
(bad)
(bad)
test
leave
or
mov
push
pop
dec
(bad)
in
cwde
pop
movs
cmp
cmp
jmp
xor
inc
or
(bad)
mov
pop
sub
xchg
sub
and
call
hlt
(bad)
(bad)
cmp
ja
adc
int
les
pop
jmp
mov
push
leave
fild
(bad)
(bad)
mov
cmp
ins
sbb
push
rol
mov
outs
sub
adc
jle
(bad)
(bad)
(bad)
mov
inc
add
cmps
mov
jp
xor
dec
icebp
and
push
push
pop
mov
add
(bad)
push
xchg
push
jne
in
cmp
sbb
xchg
popf
xchg
lahf
pop
(bad)
out
mov
or
fs
shr
xchg
test
jbe
pop
hlt
mov
nop
cli
dec
aas
jmp
aam
push
push
bound
icebp
sbb
call
stos
mov
sti
add
cmc
nop
inc
loop
and
and
pop
daa
daa
add
cld
sub
mov
movs
cmps
pop
imul
jns
xor
dec
es
fwait
push
mov
xor
xor
mov
test
ficom
xchg
mov
cmp
or
(bad)
(bad)
(bad)
jl
push
push
add
mov
stos
stos
push
fsub
xchg
jo
rcl
sbb
mov
loopne
(bad)
(bad)
(bad)
dec
ja
mov
jo
pusha
push
pop
add
xchg
pop
popa
push
dec
pop
xchg
mov
mov
outs
dec
loopne
pop
scas
pop
(bad)
jg
xor
mov
pusha
pop
cmc
pop
sbb
into
dec
and
(bad)
(bad)
(bad)
push
fnstsw
mov
sbb
shl
sbb
xor
fisubr
inc
(bad)
(bad)
cmp
adc
cld
xchg
jnp
inc
add
ja
mov
jmp
sti
fisttp
test
hlt
adc
ins
inc
in
xchg
inc
jmp
cwde
popf
int
jbe
mov
inc
sbb
pop
jle
in
mov
add
in
add
(bad)
call
sbb
xor
popa
repnz
loop
jle
and
jge
mov
push
lods
(bad)
(bad)
(bad)
inc
rcr
out
leave
das
adc
lock
pop
add
push
add
into
pop
mov
(bad)
(bad)
(bad)
dec
sbb
push
and
lahf
sub
jae
mov
or
(bad)
push
std
(bad)
(bad)
(bad)
(bad)
clc
cmps
inc
inc
push
adc
out
test
push
jae
cmps
retf
adc
sar
addr16
mov
jmp
inc
sahf
jmp
sbb
addr16
out
scas
push
(bad)
(bad)
(bad)
(bad)
jmp
jge
movs
sahf
aas
pop
sbb
aad
and
fsubr
jno
sar
jne
dec
and
jmp
clc
push
les
js
dec
jbe
aaa
out
out
add
bound
out
or
(bad)
(bad)
jmp
cmp
stc
dec
push
pop
xchg
lahf
adc
(bad)
jge
loopne
pop
pusha
xchg
mul
xlat
lods
popa
loopne
stos
(bad)
dec
or
rcr
jns
mov
xchg
inc
mov
repnz
pop
cld
(bad)
mov
cmp
mov
mov
ss
int
(bad)
out
(bad)
(bad)
(bad)
(bad)
jg
mov
xor
adc
mov
out
lods
pop
pop
jnp
not
(bad)
(bad)
in
push
cmp
retf
jno
push
in
jp
(bad)
pop
inc
lods
ret
push
inc
jno
xor
push
cmp
jmp
fs
out
mov
jne
je
sub
dec
push
test
cmp
(bad)
(bad)
push
outs
inc
xchg
lods
jae
pop
pop
mov
xchg
mov
add
mov
push
jp
push
cdq
adc
xchg
(bad)
(bad)
(bad)
call
cmp
mov
fs
loope
sub
cmps
push
push
cmp
(bad)
(bad)
(bad)
(bad)
mov
fistp
retf
imul
inc
dec
mov
retf
mov
jne
mov
pop
(bad)
(bad)
(bad)
(bad)
jnp
stc
shl
loope
rcl
das
add
ds
sub
frstor
lea
jmp
sar
xor
mov
jns
pop
adc
mov
(bad)
(bad)
(bad)
jmp
stos
fdiv
les
out
jp
xor
loopne
cmc
(bad)
sub
hlt
mov
push
push
sbb
(bad)
dec
lock
cwde
sbb
jp
aam
scas
test
in
dec
das
mov
mov
sub
jge
test
xchg
xchg
(bad)
mov
(bad)
(bad)
fcomip
sub
sbb
mov
mov
pop
dec
les
dec
add
(bad)
(bad)
jmp
mov
out
retf
fld
cmp
sti
(bad)
ins
outs
sbb
push
xor
popf
je
sub
dec
(bad)
jmp
jmp
lock
inc
jb
mov
inc
test
jb
xor
fwait
mul
(bad)
aad
fldenv
call
or
mov
add
jmp
xor
aas
lea
(bad)
(bad)
jmp
dec
hlt
jmp
sahf
and
daa
neg
mov
jmp
ds
(bad)
(bad)
(bad)
jmp
fisubr
inc
push
and
icebp
or
pop
out
jmp
and
cmp
shl
fwait
pop
sar
call
fwait
xchg
paddb
sbb
dec
sti
scas
xor
ret
xor
nop
dec
dec
scas
icebp
lods
mov
mov
outs
adc
xor
out
cli
shr
pop
(bad)
aam
dec
das
jmp
mov
(bad)
jg
ret
enter
hlt
jecxz
ja
inc
sub
mov
test
das
jmp
xlat
cmp
(bad)
(bad)
push
jns
xchg
(bad)
mov
xor
and
rol
(bad)
mov
adc
add
fwait
pop
xchg
dec
fdivr
call
movs
xchg
retf
push
and
mov
push
pop
push
xor
test
cmp
loop
(bad)
(bad)
(bad)
(bad)
mov
fld
mov
(bad)
jg
pop
fcmovnbe
stos
mov
lock
mov
ins
mov
nop
mov
or
jo
add
retw
adc
mov
inc
(bad)
fnstenv
jecxz
xchg
push
jns
test
jmp
rcl
(bad)
mov
add
movs
das
jle
and
call
loop
adc
xchg
lods
xchg
(bad)
call
dec
mov
fcmovnu
or
pop
jmp
fwait
retf
sbb
fcomi
mov
inc
(bad)
inc
cld
and
aam
mov
adc
out
mov
shl
(bad)
push
fadd
cwde
mov
ret
xchg
mov
mov
fsub
(bad)
(bad)
(bad)
call
popf
inc
(bad)
add
leave
adc
cmp
and
loope
cmp
ins
fdivrp
call
jbe
ret
out
xor
stos
sub
adc
(bad)
(bad)
jg
scas
mov
(bad)
jno
push
add
stos
lea
dec
addr16
dec
jecxz
loop
or
xchg
ss
lds
mov
out
sti
int
(bad)
(bad)
(bad)
mov
sub
div
loop
cmp
bound
push
lds
(bad)
mov
sbb
std
push
(bad)
(bad)
(bad)
(bad)
jmp
pop
lds
ss
cmps
daa
repz
(bad)
xchg
popf
pop
pop
adc
fisub
(bad)
call
jne
mov
bound
int
popf
push
add
shl
xlat
aaa
rcl
add
mov
ja
push
dec
fs
jae
xor
xchg
ja
aas
and
(bad)
(bad)
(bad)
std
test
out
pushf
fstp
std
jp
dec
and
inc
sbb
shl
sti
cwde
mov
pop
les
mov
dec
jmp
cmp
call
add
mov
push
movs
inc
aas
cmp
adc
jmp
call
pop
push
sub
jo
lahf
sbb
xchg
leave
adc
out
lods
mov
or
pop
ja
mov
(bad)
(bad)
push
jmp
sahf
dec
inc
inc
lock
adc
pop
bound
enter
gs
adc
cmp
(bad)
fcomp
call
rcl
(bad)
(bad)
jg
mov
cmp
xor
ror
mov
nop
xor
push
(bad)
(bad)
(bad)
(bad)
mov
mov
fstp
adc
ins
jns
mov
pop
test
in
push
fs
call
(bad)
inc
(bad)
xchg
pop
pop
and
add
or
gs
push
xchg
(bad)
(bad)
(bad)
fistp
sbb
out
mov
test
or
cmps
pop
jbe
shl
or
(bad)
(bad)
inc
gs
cmp
mov
or
movs
dec
dec
ror
pop
sbb
mov
(bad)
(bad)
(bad)
push
clc
mov
lods
movs
cmp
sbb
mov
inc
cmp
push
add
cmp
std
(bad)
fcomip
in
pop
adc
mov
push
dec
adc
mov
(bad)
ins
jnp
pop
or
cdq
data16
(bad)
movs
cmc
xchg
push
call
(bad)
(bad)
push
lods
stos
xor
mov
sahf
push
or
lea
je
mov
xchg
mov
and
cdq
xchg
sub
mov
in
(bad)
test
(bad)
(bad)
(bad)
inc
imul
aas
mov
es
add
or
pop
jge
(bad)
(bad)
(bad)
(bad)
(bad)
out
pop
mov
movs
pop
dec
inc
and
xchg
add
jb
call
out
(bad)
(bad)
(bad)
call
outs
cmps
pusha
push
stc
jmp
enter
sbb
(bad)
jne
das
dec
icebp
xor
xchg
std
(bad)
(bad)
push
sbb
je
add
loopne
inc
inc
inc
fistp
mov
pop
add
xchg
sub
aaa
nop
mul
out
jno
daa
retf
cmp
inc
jmp
cmp
xor
jae
or
mov
inc
mov
mov
scas
movs
mov
jp
mov
je
add
shl
or
mov
add
mov
inc
in
loope
cmp
call
repnz
sahf
ins
sbb
mov
scas
and
(bad)
(bad)
jmp
gs
pop
arpl
lds
repnz
scas
test
sub
dec
pop
mov
cwde
aaa
and
cld
cmps
mov
loopne
or
mov
(bad)
cmp
enter
(bad)
jmp
(bad)
shr
js
dec
push
adc
inc
xor
daa
jno
(bad)
(bad)
(bad)
mov
pop
and
iret
in
fwait
sbb
jns
mov
jb
jmp
jno
xchg
(bad)
(bad)
(bad)
jmp
adc
into
jecxz
aaa
dec
inc
cwde
xchg
cmps
sub
fwait
stc
xchg
js
mov
daa
mov
jg
(bad)
call
ss
or
pop
outs
leave
stos
movs
jno
xor
fiadd
fistp
(bad)
(bad)
dec
xor
outs
pop
or
stos
aad
nop
pusha
popa
cwde
stos
pusha
int
inc
pushf
popf
cwde
scas
push
dec
mov
(bad)
call
ja
mov
popf
cmp
cmp
mov
inc
add
rol
xchg
sar
xchg
(bad)
(bad)
(bad)
inc
pop
xchg
aas
inc
je
pop
and
or
xor
dec
(bad)
push
clc
cmps
(bad)
push
cld
(bad)
fst
arpl
mov
retf
pop
jo
fisubr
mov
pop
or
outs
add
rol
loop
mov
(bad)
(bad)
(bad)
call
add
sub
clc
into
pop
je
(bad)
mov
dec
fcom
inc
or
mov
(bad)
(bad)
dec
shl
out
jecxz
mov
xchg
adc
xlat
inc
jl
out
sar
cdq
xlat
movs
fsubr
(bad)
inc
inc
fcom
fdiv
sahf
push
push
in
dec
or
mov
adc
(bad)
(bad)
jmp
sbb
hlt
cmps
push
pusha
push
sub
push
and
pop
mov
hlt
mov
dec
in
(bad)
(bad)
(bad)
inc
(bad)
pop
fidivr
pop
cdq
sahf
jne
cdq
adc
cmp
pop
call
stos
bound
popf
test
push
je
adc
mov
inc
sub
pop
jne
int
pushf
xor
or
call
xor
movs
inc
jb
out
ins
hlt
inc
cs
(bad)
(bad)
(bad)
cmp
into
gs
test
xor
lea
(bad)
jmp
xchg
mov
mov
dec
int
(bad)
(bad)
jmp
retf
test
fucomip
push
call
cli
mov
xchg
sbb
pop
icebp
mov
pop
and
xor
fadd
xchg
jno
mov
(bad)
push
dec
sub
mov
adc
retf
es
fndisi(8087
repnz
push
fwait
scas
bound
jp
(bad)
(bad)
jg
push
xchg
ss
stc
ins
shr
adc
pop
shl
pop
adc
xlat
mov
sbb
(bad)
imul
arpl
clc
rcl
inc
in
scas
hlt
sub
inc
ret
(bad)
call
nop
push
pop
xchg
out
and
mov
or
repz
ss
pusha
mov
(bad)
(bad)
call
jmp
jle
outs
sbb
or
jbe
xchg
push
sbb
pop
jge
mov
mov
outs
cli
call
and
push
or
cmp
test
jmp
add
(bad)
(bad)
inc
jecxz
xor
outs
and
loopne
adc
div
mov
rcl
ret
or
mov
(bad)
(bad)
(bad)
inc
cmp
fld
dec
adc
or
lahf
push
sbb
fst
(bad)
int
jne
(bad)
(bad)
inc
cli
jmp
mov
dec
lock
cmp
stc
add
push
std
xchg
ins
(bad)
(bad)
jmp
aaa
and
add
call
xchg
jp
jmp
call
(bad)
(bad)
mov
stc
out
dec
push
dec
adc
fst
outs
jmp
inc
push
cmc
adc
(bad)
(bad)
call
pop
das
arpl
cmp
mov
or
jmp
jo
adc
(bad)
(bad)
(bad)
fcmovb
cdq
pop
dec
call
(bad)
retf
leave
mov
mov
je
and
ror
push
bound
fiadd
jb
pop
jcxz
(bad)
mov
retf
push
call
mov
in
outs
mov
add
and
cmps
iret
fdivrp
(bad)
(bad)
mov
cmps
xchg
shr
push
ins
add
sbb
sbb
or
repnz
leave
outs
(bad)
(bad)
(bad)
push
test
xchg
inc
sbb
hlt
xlat
xchg
jnp
int3
cmp
(bad)
(bad)
jmp
sub
icebp
xchg
pop
sub
into
in
(bad)
and
pop
int3
fimul
dec
in
(bad)
(bad)
push
mov
fst
out
dec
addr16
mov
cmp
aaa
fidivr
movs
xchg
dec
adc
in
add
mov
xchg
and
(bad)
(bad)
(bad)
call
shl
add
jns
jmp
les
mov
cli
leave
outs
(bad)
(bad)
(bad)
(bad)
fisubr
cmp
leave
(bad)
call
ret
ror
dec
scas
or
mov
clc
(bad)
dec
inc
rcl
add
lds
adc
loope
sub
(bad)
(bad)
jmp
push
inc
aad
jge
jne
adc
jecxz
jmp
scas
pextrw
jno
sar
pop
cmc
inc
in
mov
pop
mov
sub
xchg
lahf
mov
jg
pop
or
(bad)
(bad)
call
or
sbb
cmp
adc
jno
adc
ja
pop
cmp
jmp
dec
daa
pop
or
xchg
bound
test
add
and
(bad)
imul
(bad)
xchg
mov
mov
adc
or
and
cwde
push
mov
push
imul
mov
inc
loop
or
movs
mov
aaa
add
(bad)
(bad)
(bad)
inc
or
(bad)
jge
jecxz
fwait
dec
jo
inc
or
mov
jnp
sbb
jmp
pop
cld
mov
cmp
pop
push
pop
cmps
mov
in
movs
inc
in
mov
movs
mov
call
xor
adc
int
xchg
add
push
js
mov
jns
pop
xor
fimul
adc
mov
(bad)
jmp
call
fs
mov
push
jno
mov
cdq
aam
test
call
xchg
sub
loop
and
call
les
nop
cmp
add
iret
imul
and
jp
nop
or
xor
dec
enter
sahf
push
fcmovnbe
xchg
or
(bad)
(bad)
push
mov
std
jecxz
pop
in
in
retf
cli
jle
scas
or
stos
lods
pop
push
or
(bad)
(bad)
jmp
jge
aas
repnz
push
in
shl
dec
push
mov
data16
in
pusha
xchg
out
xchg
movs
leave
jle
add
aaa
xchg
push
retf
enter
jecxz
xchg
call
test
(bad)
push
hlt
mov
push
cld
fwait
push
or
lea
ins
rcr
xchg
test
and
out
mov
mov
push
jns
test
cmp
mov
(bad)
(bad)
inc
stos
mov
movs
les
mov
cmc
cwde
cmps
xor
and
dec
jg
(bad)
mov
int3
int
sub
mov
popf
mov
imul
inc
sbb
shr
sar
xchg
cdq
push
js
jge
mov
pushf
ins
adc
jns
adc
pop
(bad)
(bad)
(bad)
push
mov
loopne
mov
neg
stos
mov
pop
cs
dec
add
adc
or
(bad)
jg
and
mov
dec
sub
dec
pop
cmp
sub
out
test
adc
loopne
das
inc
jmp
loop
(bad)
nop
stos
es
sbb
fwait
lds
and
mov
scas
cmps
lods
(bad)
fst
jmp
add
mov
fbld
pop
inc
clc
xchg
int3
mov
jge
inc
cmps
cwde
inc
dec
sbb
cmp
movs
ja
pop
or
retf
sub
mov
enter
dec
and
inc
ror
dec
inc
jb
clc
jg
cwde
mov
or
jns
lods
sbb
sahf
and
(bad)
(bad)
(bad)
dec
mov
das
(bad)
stos
fld
dec
adc
push
aad
xor
pop
mov
push
pop
mov
or
cwde
xor
ror
inc
push
outs
dec
mov
iret
(bad)
fcomip
push
add
xor
pop
push
mov
les
leave
push
mov
mov
(bad)
(bad)
(bad)
jmp
das
sti
stc
sub
add
shr
adc
int
retf
dec
jecxz
jmp
jl
enter
test
(bad)
call
fsubr
ror
ror
(bad)
xor
popa
jmp
cwde
jmp
clc
call
mov
xor
in
(bad)
jnp
test
or
xor
in
fwait
cmp
leave
int3
(bad)
pop
cmp
mov
test
adc
sar
call
(bad)
call
push
fsubr
movs
fsub
mov
and
aam
mov
call
loopne
std
push
mov
add
das
xor
sbb
xchg
mov
sbb
mov
xor
fadd
mov
and
(bad)
(bad)
(bad)
(bad)
call
stos
jne
in
mov
xor
fstp
jle
and
outs
das
loope
inc
dec
cs
ja
sar
(bad)
sub
xor
test
xor
add
dec
fs
pop
jne
xor
add
cmp
add
aad
pop
hlt
push
mov
jmp
daa
scas
pushf
mov
gs
mov
pusha
test
scas
jg
sbb
movs
xor
(bad)
(bad)
(bad)
inc
mov
shl
inc
xor
mov
loope
xor
xlat
cwde
pop
add
mov
jecxz
jge
nop
hlt
inc
jo
push
inc
test
(bad)
(bad)
call
fist
shl
jle
sub
nop
test
pop
lods
test
cmp
nop
mov
fistp
jmp
out
add
inc
stos
inc
cdq
lds
jp
das
mov
dec
call
mov
mov
push
pop
(bad)
cli
aaa
cld
call
mov
pop
fdivp
and
mov
(bad)
(bad)
dec
aad
and
push
dec
ja
fsubr
outs
push
iret
stos
cs
jl
jl
(bad)
jg
adc
jmp
les
sbb
pop
sub
popf
cmps
and
call
(bad)
cmp
jg
js
xlat
scas
in
cli
je
(bad)
(bad)
out
jg
push
xchg
mov
stc
mov
(bad)
out
cli
jns
jle
out
pop
push
pop
xor
lds
retf
mov
sahf
xchg
jge
(bad)
(bad)
(bad)
jmp
xor
jle
stos
jecxz
das
dec
ja
rol
xchg
mov
mov
out
sbb
push
loop
(bad)
(bad)
push
dec
int3
jp
or
stos
pop
xchg
gs
sbb
(bad)
mov
rcl
mov
fisttp
push
repz
dec
xchg
push
popa
fcomip
(bad)
dec
mov
mov
and
jecxz
jge
rcl
add
leave
xchg
cwde
fcmovne
jg
(bad)
call
pusha
neg
pop
adc
or
push
pop
sbb
mov
inc
fisttp
mov
scas
cli
inc
cmp
fistp
es
les
imul
imul
scas
jmp
push
pop
jns
mov
add
idiv
popf
sahf
dec
(bad)
(bad)
(bad)
call
and
test
mov
aaa
daa
out
cmp
in
xchg
sbb
cmp
(bad)
(bad)
(bad)
inc
shl
mov
jno
fwait
xlat
ins
outs
clc
or
arpl
mov
(bad)
(bad)
(bad)
call
xor
jns
icebp
gs
xlat
(bad)
outs
push
pop
or
ret
mov
fild
pop
inc
inc
jmp
push
jmp
push
sbb
sbb
xchg
mov
jg
(bad)
jmp
jnp
cmp
mov
dec
sbb
lock
data16
cmp
aad
hlt
(bad)
(bad)
inc
out
adc
aad
xor
jbe
data16
(bad)
jg
cmp
cld
push
fimul
int
adc
mov
mov
xor
shl
(bad)
inc
(bad)
sti
pushf
cwde
mov
xor
lock
pop
and
sub
or
pop
mov
mov
inc
inc
mov
lods
sub
pop
mov
adc
call
cld
xchg
add
popa
nop
adc
jno
xchg
mov
pop
inc
adc
mov
call
jmp
mov
call
push
sbb
jnp
cwde
shl
gs
das
jbe
jl
clc
mov
(bad)
(bad)
inc
mov
xchg
mov
fwait
gs
addr16
cmp
in
jb
xchg
sub
das
cli
das
inc
xor
and
jp
and
repz
(bad)
mov
int
xchg
jmp
jl
mov
(bad)
pop
call
(bad)
mov
(bad)
(bad)
jmp
into
pop
mov
cmp
mov
in
xor
xchg
mov
fild
adc
xchg
push
test
adc
test
(bad)
(bad)
jmp
fcmovbe
dec
mov
inc
xor
cmps
mov
call
sbb
jae
push
js
pop
aad
push
jns
xchg
or
inc
sbb
xlat
(bad)
cmp
(bad)
(bad)
(bad)
dec
lock
ror
push
fstp
xchg
cmp
add
imul
jg
popa
jg
or
push
or
sub
sbb
mov
jne
(bad)
call
jbe
inc
xchg
neg
(bad)
stos
mov
xor
sub
les
clc
xchg
addr16
neg
fisubr
mov
xchg
dec
and
(bad)
jg
push
cli
aas
adc
xchg
push
fldcw
sbb
and
hlt
call
(bad)
fld
icebp
or
lea
repnz
loopne
int
(bad)
fild
(bad)
xlat
dec
push
xchg
inc
sub
jle
adc
or
ins
out
nop
add
int3
xchg
jnp
fwait
scas
cld
jg
jmp
dec
inc
idiv
jg
call
push
mov
xor
leave
mov
mov
loope
scas
(bad)
jmp
or
inc
idiv
xchg
xlat
pop
call
mov
xor
sbb
bound
(bad)
(bad)
push
or
clc
ja
dec
sub
fcmovnbe
add
pop
cmps
fdiv
mov
xor
out
lods
das
repnz
pop
pop
hlt
(bad)
(bad)
push
sbb
xchg
mov
stos
sub
push
sub
fst
pop
cli
shr
call
and
and
sub
in
call
dec
dec
pop
ret
(bad)
jmp
pop
xor
or
mov
jle
std
xchg
jp
cmp
sub
mov
pop
dec
(bad)
(bad)
(bad)
dec
stos
inc
push
nop
mov
lds
jmp
call
sbb
(bad)
(bad)
push
xlat
pop
aas
nop
imul
movs
xor
dec
add
iret
mov
adc
mov
inc
pop
jmp
fwait
pop
aad
sbb
rep
daa
push
(bad)
sub
lods
(bad)
lahf
xor
(bad)
(bad)
call
mov
push
into
pop
popa
or
rcl
push
ins
aaa
push
mov
or
add
mov
inc
or
cmps
jo
adc
mov
jmp
sub
imul
lea
popf
and
(bad)
(bad)
dec
inc
adc
sub
pusha
and
fcmovbe
ret
test
pop
shl
shl
push
leave
sbb
test
stos
inc
inc
pop
pop
out
clc
call
and
test
pusha
sbb
sub
test
outs
aas
add
lea
(bad)
(bad)
dec
mov
inc
lahf
adc
sbb
(bad)
addr16
fadd
cmps
adc
shl
leave
(bad)
(bad)
dec
cmp
mov
xchg
xor
dec
into
repz
push
push
loope
(bad)
cmp
jmp
das
ds
sub
pop
inc
sahf
fidiv
sahf
pop
out
mov
add
dec
stos
dec
sub
outs
xchg
aad
sbb
and
in
jnp
sub
jmp
in
lods
mov
mov
xor
in
(bad)
(bad)
(bad)
inc
adc
dec
pop
lea
ret
mov
outs
cmp
ror
pop
daa
adc
(bad)
ds
xchg
mov
(bad)
outs
xchg
clc
inc
push
jmp
push
jmp
fdivrp
(bad)
(bad)
call
mov
add
jecxz
mov
xchg
inc
mov
cwde
popf
sbb
popa
das
(bad)
mov
mov
mov
test
test
stos
jmp
(bad)
shl
mov
push
stc
in
stc
jne
leave
push
sub
adc
mov
loope
jge
(bad)
(bad)
(bad)
fistp
mov
cmp
hlt
xchg
xchg
inc
cmc
fwait
lods
seta
sub
xlat
push
gs
mov
push
movs
movs
(bad)
jmp
in
lods
push
push
adc
fcmovb
jns
jb
call
into
inc
sub
mov
pop
test
scas
dec
ds
(bad)
call
loopne
popa
loope
in
jns
lds
xchg
cwde
cmp
and
rcr
mov
adc
mov
xchg
xor
xor
retf
or
add
int
push
or
adc
push
loop
adc
cmp
push
icebp
(bad)
lock
(bad)
(bad)
(bad)
call
mov
out
stc
ds
cmp
xor
bound
shl
pop
jmp
adc
scas
push
jbe
mov
scas
dec
(bad)
cmps
mov
icebp
jmp
push
jecxz
(bad)
push
std
stc
mov
stc
mov
pop
je
imul
jmp
adc
mov
sub
or
je
(bad)
jp
pop
jns
(bad)
(bad)
(bad)
inc
dec
pop
mov
shl
dec
mov
and
mov
mov
ja
(bad)
dec
mov
rcr
push
mov
je
mov
jno
mov
inc
into
mov
(bad)
call
shr
hlt
add
cs
xlat
lock
push
and
jmp
push
mov
dec
dec
or
cmps
pop
cmp
push
bound
jnp
(bad)
(bad)
(bad)
cmp
pop
movs
lahf
pop
push
jmp
jbe
sbb
pop
mov
aam
mov
mov
lods
in
mul
push
std
pop
gs
in
addr16
jb
fcomp
cmps
fwait
pop
icebp
mov
js
sti
jnp
or
dec
inc
jmp
das
lock
lods
cmps
popf
arpl
fcos
sbb
push
sbb
sub
dec
ret
jmp
(bad)
(bad)
(bad)
(bad)
push
sar
inc
add
adc
mov
gs
repnz
call
in
popa
movs
sub
cmc
mov
fst
fcmovnu
mov
mov
inc
add
xchg
pop
sub
lock
call
ret
xor
inc
dec
cli
loopne
cwde
xchg
push
nop
lock
jmp
not
inc
sbb
retf
scas
ds
retf
and
or
mov
or
lea
icebp
mov
push
pop
add
div
xchg
das
inc
push
dec
pop
add
out
fstp
mov
pop
add
pop
jnp
out
mov
inc
and
dec
pop
push
and
jge
push
pop
dec
aaa
push
pop
dec
add
mov
fdiv
add
adc
dec
xchg
mov
jmp
push
loop
push
inc
mov
mov
xor
or
dec
jg
mov
push
push
cs
and
inc
push
cs
rol
and
xor
dec
cmp
mov
iret
inc
dec
test
push
rsqrtps
mov
dec
ds
inc
sub
call
push
xor
inc
cli
int
(bad)
or
pop
mov
int
mov
imul
shl
arpl
outs
outs
mov
and
add
dec
push
and
test
out
or
sub
(bad)
mov
outs
popw
outs
data16
push
xchg
inc
ja
imul
ins
push
mov
jb
je
push
imul
pop
pop
push
inc
dec
add
or
js
jnp
add
add
add
add
or
fld
sub
hlt
add
add
inc
out
enter
aas
dec
fwait
dec
div
adc
or
call
in
cmp
inc
test
cmp
loopne
and
outs
jmp
sub
jb
popa
xchg
test
add
jo
push
les
add
mov
push
dec
enter
add
push
pop
push
test
inc
lods
enter
cmp
cmp
sbb
fcomp
lds
mov
or
xor
jle
push
or
int3
mov
int
xchg
fcmovu
ins
and
ins
push
add
inc
(bad)
sbb
and
shl
cmc
pop
ja
rol
xor
outs
adc
mov
jo
fdivr
push
in
cmp
jne
das
cmc
in
stos
push
add
jo
push
adc
dec
icebp
cmps
mov
pop
cld
call
mov
adc
mov
les
inc
and
out
punpcklwd
pop
call
dec
add
inc
adc
or
cmp
sbb
sub
js
(bad)
mov
mov
movs
iret
push
and
and
or
cs
ret
cli
cmove
cdq
shl
shl
fwait
ret
mov
push
sar
xor
pop
mov
shl
es
call
add
jns
test
and
enter
sbb
lock
or
clc
sub
jmp
nop
sar
jb
push
add
call
sbb
paddd
mov
add
jp
or
jle
sub
dec
in
sar
jne
cli
mov
inc
push
call
and
sbb
ins
aas
cmps
push
add
xor
out
xor
push
hlt
arpl
cmp
sahf
adc
(bad)
icebp
ins
lock
inc
pop
pop
or
or
std
pusha
mov
js
popa
ins
fisubr
imul
sub
jb
adc
in
adc
mov
adc
sub
lea
pop
inc
adc
mov
stc
lock
mov
jb
sbb
movs
and
cmps
mov
es
push
pop
cmp
fisubr
rol
cdq
cmp
mov
jbe
adc
rcl
ret
enter
fbstp
pop
xor
mov
sbb
ficomp
sbb
hlt
push
test
push
sub
sub
pop
popa
sub
jmp
mov
fcomp
inc
adc
dec
retf
test
push
pop
sub
mov
mov
xchg
push
retf
rsm
xor
and
leave
xor
repz
out
xor
clc
aas
arpl
mov
mov
es
fisttp
push
and
mov
push
iret
add
ins
jmp
popa
and
mov
push
lods
popa
shl
and
outs
add
mov
mov
jle
xor
fnsave
daa
in
loope
dec
xor
(bad)
mov
sub
loope
in
jle
ret
scas
and
enter
and
and
pop
or
xor
mov
jmp
sbb
and
dec
fdivr
mov
inc
adc
add
cmp
ja
cmp
or
clc
nop
add
movs
ins
mov
lea
jmp
push
pop
and
push
mov
ins
or
sbb
cmps
mov
mov
fdiv
and
les
pusha
icebp
adc
sub
inc
shl
push
pop
inc
ret
adc
push
xchg
pop
jbe
sbb
push
pusha
sub
rcl
repnz
bound
enter
sbb
sub
pop
sub
clc
mov
fst
dec
retf
sbb
cmp
cmp
call
je
jne
rcr
je
inc
cmp
add
push
mov
test
sar
ins
cli
and
pop
pop
bnd
sbb
mov
adc
aad
into
dec
add
mov
adc
cmp
jne
cmp
je
or
scas
add
or
adc
clc
cmp
je
jne
or
add
or
add
push
scas
dec
push
out
and
xchg
shl
adc
mov
out
ins
inc
outs
inc
mov
jb
add
jmp
imul
scas
std
ds
add
adc
or
adc
push
add
push
jno
mov
or
push
imul
call
movs
jo
push
lea
fcom
push
cmps
mov
dec
add
lock
stos
jo
jmp
or
jmp
imul
repz
je
sbb
js
cmps
popf
cmps
loope
lods
push
jb
sbb
mul
dec
movs
(bad)
pop
push
imul
mov
sub
jp
hlt
adc
fidiv
cld
in
pop
push
sub
push
push
scas
jbe
dec
repz
fcom
or
cld
push
(bad)
es
imul
jne
adc
inc
add
jns
popf
inc
das
xor
into
or
and
push
push
cmp
pushf
mov
je
clc
lea
and
push
sub
pusha
cmp
jmp
daa
and
push
ins
rcl
add
add
pop
ds
adc
inc
call
add
js
add
call
popa
into
and
scas
pop
lock
push
je
and
lods
sub
fs
mov
mov
cdq
pop
ror
call
rsqrtps
push
xchg
int
dec
call
sbb
ret
jno
push
cmp
push
ins
das
dec
add
rcl
pop
aam
fadd
and
jbe
push
fld
mov
in
mov
pop
je
cdq
dec
and
sbb
add
cmps
push
cld
mov
add
fs
push
cmp
mov
and
iret
xchg
cmp
mov
jp
aas
adc
dec
hlt
sbb
cmp
aas
add
retf
das
movzx
sub
je
dec
jmp
cld
cli
pop
cmp
div
leave
shr
int
mov
jne
movs
mov
loope
test
push
adc
mov
jp
jmp
adc
mov
je
test
xchg
ror
mov
cmp
jne
jmp
rol
jmp
cmc
push
xchg
adc
mov
xor
in
es
mov
cmp
add
dec
mov
and
and
je
loop
add
jb
addr16
test
jns
and
add
cmp
pop
xor
jne
jge
xor
dec
push
push
jp
cmp
vmptrst
jnp
push
inc
je
es
push
outs
daa
mov
inc
sti
pop
outs
jl
fnstsw
add
cmc
sbb
dec
inc
test
push
or
pop
movs
pusha
jle
call
fnstcw
sbb
dec
clc
shl
push
add
adc
popa
mov
into
mov
mov
sub
mov
shl
or
xor
push
pop
popf
push
lock
loop
sbb
xor
mov
lods
(bad)
mov
and
aaa
call
jae
call
inc
sbb
inc
sti
fwait
jbe
cmp
loop
xor
in
out
xchg
lahf
mov
inc
call
popa
leave
ret
les
pop
sub
add
and
js
shl
js
mov
cmp
shl
adc
or
sar
mov
jl
push
push
push
pop
mov
hlt
jl
jmp
adc
out
add
mov
sbb
hlt
mov
mov
sbb
nop
cmp
or
call
sbb
pop
sbb
mov
or
rcpps
sub
out
lock
add
push
cmc
(bad)
pop
pop
pop
add
cmp
out
push
jb
push
imul
cmp
movs
clc
(bad)
add
cmp
adc
push
sbb
cmps
das
sbb
jmp
add
adc
dec
or
or
leave
movs
or
pop
cmp
mov
jl
clc
and
xchg
rol
add
add
add
pop
adc
jge
movs
retf
arpl
dec
xchg
cs
popf
push
xor
imul
push
dec
mov
pop
imul
clc
and
call
add
add
in
mov
int3
mov
std
outs
mov
stos
mov
push
pop
jle
cmp
push
aam
std
push
mov
pop
jo
xor
cmp
xchg
lock
mov
pop
xor
out
out
pop
loope
lea
pop
loopne
call
loopne
cmp
mov
xchg
pop
pop
clc
push
outs
lds
mov
sub
cmc
cmp
mov
out
cld
cmp
sar
ins
sbb
mov
add
push
je
mov
rol
cmp
add
adc
icebp
or
dec
cld
add
outs
mov
add
mov
hlt
je
je
into
arpl
in
push
cld
pop
fwait
cmc
pop
push
sub
xor
mov
pop
cmp
data16
or
add
outs
lock
cs
scas
push
sbb
jne
iret
xchg
jbe
scas
outs
and
(bad)
lock
pop
ja
and
sub
rcr
pop
test
push
mov
mov
mov
ins
sbb
xor
mov
push
xor
mov
jbe
or
es
call
int3
pop
call
xor
popa
loope
xor
cs
repnz
jno
cwde
aaa
pop
push
pop
fcom
rcl
repz
or
or
jo
mov
adc
add
pop
fchs
sub
fdivr
pop
mov
push
jne
push
push
call
call
pop
adc
cmp
scas
and
adc
scas
sbb
outs
shl
push
pop
add
stos
gs
xchg
sub
jns
je
push
xchg
sub
sub
mov
jb
shl
sbb
adc
mov
ret
in
inc
les
xchg
inc
adc
cwde
push
cmp
pushf
ficomp
aaa
in
cmp
sbb
xor
adc
popf
dec
adc
fcom
out
inc
movs
inc
inc
mov
adc
dec
pop
das
pop
adc
mov
ror
je
add
push
cmp
pop
out
cwde
lock
hlt
jl
mov
lock
inc
sbb
push
call
cmp
call
sahf
push
adc
inc
mov
xchg
adc
lods
cwde
sub
adc
movs
jb
leave
mov
std
adc
adc
add
mov
movs
push
or
adc
jnp
pop
arpl
add
(bad)
jbe
imul
(bad)
into
test
pop
adc
ds
mov
scas
push
xor
mov
(bad)
fsub
or
pop
in
dec
sub
jl
sbb
or
test
ror
or
or
dec
dec
(bad)
fld
xor
loopne
ret
sub
mov
cmp
sub
mov
add
or
xor
dec
div
mov
fstp
mov
cmp
mov
push
mov
xchg
adc
cmp
sub
xor
add
jle
mov
adc
sbb
rcl
aas
outs
sub
imul
gs
fsubrp
fsubr
je
add
ja
xor
sbb
adc
dec
dec
mov
xor
xor
and
lds
test
pcmpeqd
add
push
setbe
outs
ds
sbb
pushf
mov
push
push
ror
dec
sub
clc
xor
ja
ins
cs
retf
push
push
arpl
es
push
je
or
jmp
int3
ja
add
shr
ret
sti
add
add
push
or
xchg
enter
inc
shr
xchg
or
sbb
or
adc
jecxz
cmc
hlt
and
sub
jmp
mov
test
je
inc
hlt
jecxz
dec
jo
adc
dec
rcr
(bad)
adc
mov
xchg
or
hlt
int3
dec
push
inc
add
xlat
push
mov
jnp
cdq
inc
add
adc
aaa
push
push
test
out
pop
inc
inc
push
mov
add
loopne
pop
das
inc
mov
dec
popa
add
fistp
dec
data16
xchg
cs
ror
stos
dec
ins
in
into
out
push
sbb
dec
cmps
cmp
test
loop
retf
add
jmp
push
xor
push
pop
push
push
mov
push
push
xchg
shl
push
inc
int3
out
and
jl
test
push
or
movs
pop
test
or
movs
push
sub
loopne
adc
dec
movs
push
test
movs
jae
iret
in
repnz
adc
push
sub
(bad)
movs
repnz
rcl
push
fsubr
sbb
movs
repnz
movs
push
jmp
(bad)
test
xchg
xor
loope
push
lahf
cwde
leave
ret
repnz
mov
stos
fmul
je
push
mov
mov
cmps
mov
jecxz
mov
adc
mov
ins
sbb
xor
out
sub
push
rcl
ret
sbb
or
test
jle
shl
shl
mov
push
push
mov
fwait
stos
clc
push
jbe
data16
cdq
jns
xor
or
or
mov
inc
jle
mov
cli
je
pop
std
xchg
push
lods
push
call
sbb
call
ret
push
pusha
cmp
into
cmps
adc
add
fisttp
imul
inc
retf
sbb
or
mov
pop
(bad)
loopne
je
mov
sbb
movs
mov
sub
sbb
js
or
data16
or
ja
and
in
into
jmp
in
cwde
push
pop
pop
test
dec
cmp
push
sahf
lock
sbb
fist
ins
lea
push
lea
stos
jne
push
call
inc
cmp
aaa
push
in
mov
add
cld
push
pop
jge
sub
or
and
pop
push
rol
mov
xor
stos
imul
pop
cmp
xchg
push
cmps
daa
inc
fsubr
inc
pop
out
xchg
bound
inc
inc
ins
test
cmp
fisubr
je
add
data16
push
out
dec
add
add
in
pop
mov
cmp
or
pushf
fwait
push
xlat
jmp
jmp
mov
and
push
fld
je
push
push
jbe
and
pop
lock
mov
lea
test
sbb
or
add
adc
jle
retf
add
mov
mov
and
add
push
cmp
in
or
fs
cli
cmp
iret
push
xor
push
add
adc
pop
mov
jnp
xchg
add
sub
je
in
xor
push
push
sbb
test
test
(bad)
(bad)
cmp
fucomi
popf
dec
xor
add
sbb
push
(bad)
cli
nop
icebp
cmp
push
(bad)
mov
aaa
mov
lock
xchg
mov
add
push
loopne
pop
mov
test
or
ins
lock
movs
sahf
sub
jbe
or
add
xchg
mov
xchg
mov
pop
sbb
in
and
pop
movs
inc
inc
outs
and
add
into
mov
xor
lock
aaa
mov
mov
test
dec
jl
call
add
daa
clc
mov
in
scas
pusha
add
add
outs
mov
xor
je
rol
or
stos
pop
cwde
cld
pop
pop
push
jge
mov
jne
jno
call
adc
fmul
jmp
add
(bad)
call
fwait
mov
cmps
push
cmp
adc
scas
(bad)
shl
sub
add
push
dec
jge
pushf
cmc
sub
or
cmp
call
out
sbb
mov
sub
xchg
imul
or
rcr
add
les
add
loop
jecxz
jbe
jne
lock
xor
xchg
push
or
pusha
(bad)
loop
test
test
or
cmp
mov
pusha
out
aam
cli
and
sbb
test
jl
sbb
cmc
cdq
add
jecxz
sbb
mov
cmps
and
(bad)
cmp
loop
(bad)
pop
jl
push
cs
pusha
sbb
sbb
dec
push
fst
in
push
imul
dec
fwait
and
jno
call
add
mov
mov
popf
sbb
or
aaa
mov
pop
cmp
ror
popf
push
das
loopne
add
ds
(bad)
xor
push
push
push
mov
add
add
adc
cli
out
or
add
repz
je
jmp
push
add
test
and
xor
or
push
call
adc
lock
mov
pop
data16
mov
das
(bad)
or
hlt
ret
int3
mov
cmps
push
out
or
push
add
loopne
inc
xor
mov
retf
or
adc
mov
aaa
(bad)
movs
test
aaa
cmp
and
xchg
shl
xchg
jge
cmp
or
mov
add
add
xor
out
add
call
aas
je
inc
int
mov
adc
sub
and
ins
or
or
xchg
push
sub
adc
mov
sub
fs
mov
mov
cdq
cmp
push
(bad)
adc
add
jb
jmp
test
or
add
jbe
mov
or
retf
jne
inc
adc
add
adc
outs
fiadd
inc
inc
and
mov
sbb
leave
jne
or
loope
and
or
daa
mov
imul
in
retf
push
add
mov
cmps
ds
push
fs
jmp
gs
loope
int
repz
test
jae
adc
js
push
add
and
push
into
cmp
ret
(bad)
rep
inc
ins
sbb
jnp
mov
cs
mov
cmp
repz
or
adc
xor
mov
push
in
retf
cmp
xor
mov
hlt
push
add
loop
das
aam
sbb
in
in
jmp
inc
add
out
cmp
xor
hlt
sbb
fadd
fdivr
add
scas
setb
leave
rcr
ret
es
loopne
or
rcr
ds
inc
sar
sbb
ss
retf
and
pop
cmp
add
fs
inc
sub
cli
jns
jo
loopne
fdivp
jae
or
or
cmps
cmp
add
sti
mov
call
leave
push
mov
mov
(bad)
stos
jl
and
call
ds
and
or
sbb
add
call
sub
push
sbb
dec
call
or
or
mov
pop
or
add
adc
enter
pop
jmp
push
or
cmp
xchg
fwait
outs
sub
arpl
xlat
push
dec
test
adc
push
pop
and
rol
mov
push
jl
hlt
cld
push
mov
xlat
inc
(bad)
call
loop
mov
div
lea
pop
push
pop
and
jl
jb
jmp
cmps
dec
mov
add
xor
push
or
cld
add
sbb
stos
inc
mov
mov
and
mov
pop
inc
jne
sbb
or
sub
push
and
ins
cmp
or
xor
and
and
call
sub
iret
dec
cmp
and
es
in
(bad)
adc
cmp
pusha
and
clc
fld1
aas
and
push
push
stc
rcl
cmp
js
add
fstp
pop
sbb
push
sar
ds
sub
jmp
and
pop
jae
outs
or
xlat
sbb
in
dec
out
adc
shl
test
xchg
nop
dec
lahf
outs
push
jnp
sbb
mov
jno
fadd
into
jg
push
gs
imul
pusha
cdq
cwde
cmp
sub
mov
jl
or
in
and
scas
or
mov
sar
jl
or
dec
cmp
movsx
mov
add
jbe
jge
lea
mov
and
adc
mov
(bad)
mov
xchg
mov
fild
dec
inc
add
mov
pop
jb
or
aam
sub
pop
mov
xlat
ror
cmp
das
inc
xor
cmps
loopne
xor
add
inc
pop
xchg
jo
sar
data16
inc
mov
xor
jns
fstp
jo
test
ror
je
xchg
in
je
push
push
push
shl
ret
xchg
push
out
enter
loop
xlat
pushf
or
adc
jmp
inc
pop
push
mov
inc
or
fwait
jne
mov
inc
inc
int3
xchg
adc
push
cmp
mov
(bad)
push
rep
call
in
mov
pusha
pop
pop
scas
lock
mov
mov
cmp
setg
or
add
push
es
mov
or
mov
test
xchg
add
sbb
fs
cmps
repnz
add
mov
(bad)
fmul
out
dec
dec
add
aaa
aas
(bad)
aaa
xchg
jns
sub
push
sub
les
and
into
add
jecxz
dec
push
cmp
jp
xchg
inc
push
cmp
je
into
or
mov
in
inc
outs
(bad)
cs
and
cmp
adc
xchg
cld
xor
ja
xor
data16
inc
imul
push
pop
out
outs
add
pop
mov
mov
test
push
mov
inc
inc
add
cmp
ret
out
or
mov
nop
icebp
push
(bad)
push
into
mov
push
push
push
mov
pusha
dec
stos
push
shl
stos
ror
stos
and
jbe
mov
es
loopne
xor
aas
add
fcom
or
shl
std
outs
ror
xchg
sbb
aas
xor
inc
inc
cmc
pop
test
cs
inc
enter
js
mov
rcl
pop
movs
shr
and
ss
sbb
cli
mov
mov
mov
sub
dec
je
jmp
jmp
rcl
and
jne
push
push
cmps
mov
addr16
jae
add
int
in
sahf
aad
and
sub
aam
dec
push
adc
mov
ins
ins
push
lea
test
xor
sbb
retf
xor
add
pop
or
pop
lods
push
ret
stos
pop
push
jb
mov
popf
and
push
or
cmp
in
jl
iret
repz
push
nop
lods
mov
out
sahf
out
cld
or
adc
cmp
jns
out
bound
int
jns
mov
loop
adc
dec
cmp
repz
je
xchg
cmps
imul
out
or
sbb
jns
out
dec
pop
je
lahf
out
sahf
cmps
mov
retf
cmp
jns
ja
push
cmp
lahf
out
sahf
jle
mov
fsubr
ja
push
dec
push
cs
cmp
jl
or
dec
pop
adc
mov
push
sub
pop
sub
sub
jne
xchg
addr16
sbb
push
fdivr
(bad)
inc
push
push
inc
push
jb
cmp
xchg
inc
mov
int3
inc
cmp
outs
dec
pop
cmp
adc
pushf
push
scas
into
and
pop
sub
je
clc
idiv
outs
adc
bound
jb
pop
imul
cs
bound
test
jb
mov
jnp
fcom
jae
shr
push
outs
push
add
daa
call
add
outs
pop
lods
sub
xor
adc
rcr
adc
jns
dec
mov
dec
xlat
adc
add
ins
leave
pop
ins
add
adc
add
outs
mov
outs
cmp
add
jg
mov
fist
add
ret
sub
pand
sub
and
pop
push
push
adc
mov
mov
mov
out
add
pop
xor
xchg
add
lea
fisub
ja
add
mov
pop
add
sbb
movs
imul
mov
push
xor
ret
mov
cmp
pop
adc
loope
sub
adc
bound
xor
jge
movs
add
push
outs
imul
pushf
add
loope
or
pop
fs
mov
inc
and
mov
inc
jns
or
inc
fxch
add
mov
cs
and
inc
dec
push
lock
pop
dec
add
dec
xchg
cli
push
dec
or
outs
or
fsubr
push
add
js
and
jg
ret
push
je
dec
mov
sub
cmp
mov
add
mov
retf
mov
add
adc
dec
jae
mov
push
push
add
or
sbb
nop
mov
sub
test
das
or
push
xchg
jnp
or
ss
fs
hlt
in
sbb
out
fs
xor
xor
dec
fld
jo
pushf
lea
mov
retf
in
and
loopne
fistp
scas
add
outs
fsub
ss
loop
sub
push
push
jb
adc
mov
inc
and
or
xchg
shl
cmps
add
or
mov
js
scas
dec
push
mov
test
push
imul
or
inc
add
jnp
adc
add
aad
dec
mov
sub
adc
ds
dec
loop
push
or
pop
in
jbe
mov
std
xor
xor
adc
outs
inc
jb
js
mul
das
int
loope
or
mov
dec
ins
pop
mov
fwait
cmp
xchg
shl
ins
ja
jo
mov
cmp
sbb
mov
pop
push
outs
mov
push
jnp
outs
inc
adc
push
jo
inc
xchg
mov
inc
(bad)
push
mov
stos
cmp
mov
daa
jecxz
pop
ret
rcl
addr16
mov
push
dec
je
rol
dec
add
adc
fdivr
pop
pop
(bad)
adc
aam
mov
pop
ret
mov
pop
mov
pop
dec
and
sti
mov
pop
gs
inc
or
xor
mov
jmp
es
arpl
imul
sbb
push
je
push
fldenv
sub
inc
dec
add
inc
nop
and
xchg
xor
xor
xor
xor
dec
loop
push
xor
xor
xor
xor
xor
in
out
xor
xor
stos
cmp
cmp
mov
mov
cmp
jno
mov
cmp
mov
inc
cmp
cmp
jb
mov
cmp
cmp
cmp
fwait
cmp
mov
mov
(bad)
fidivr
xor
pop
ds
mov
lods
ds
ds
ins
aas
jns
lods
aas
mov
mov
mov
call
xor
xor
xor
xor
jno
ja
fwait
xor
xor
xor
inc
xor
mov
dec
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
inc
xchg
xor
xor
mov
dec
xor
mov
xor
push
sub
ss
ss
shl
xlat
ss
sti
ss
aaa
or
(bad)
jmp
jns
(bad)
aaa
cdq
aaa
lds
shl
fnstenv
aam
loopne
adc
sar
cmp
cmp
push
cmp
pop
cmp
cmp
js
jge
or
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
(bad)
inc
cmp
cmp
or
push
cmp
cmp
cmp
enter
dec
cmp
xchg
cmps
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
mov
inc
cmp
je
test
mov
cmp
push
ds
dec
ret
(bad)
(bad)
xor
cmp
mov
mov
aas
xchg
aas
int
in
cmps
and
push
cmp
xchg
xor
xor
xor
pop
xor
(bad)
call
add
mov
(bad)
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
stc
xor
xor
mov
add
xchg
cmc
xor
xor
xor
xor
(bad)
(bad)
jmp
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
ins
(bad)
(bad)
(bad)
push
retf
xor
inc
ss
ss
ss
ss
ss
cmp
xchg
mov
fwait
ss
aaa
fimul
push
aaa
pop
aaa
arpl
mov
popf
aaa
(bad)
(bad)
(bad)
inc
cmp
cmp
cmp
pop
cmp
nop
cmp
cmp
cmp
(bad)
(bad)
(bad)
out
cmp
cmp
cmp
cmp
or
cmp
inc
cmp
pop
cmp
ins
cmp
cmp
(bad)
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
inc
push
cmp
cmp
jp
cmp
lahf
cmp
cmp
call
fstp
clc
inc
cmp
cwde
cmp
cmp
arpl
enter
pop
dec
cmp
cmp
cmp
repnz
sub
outs
inc
push
sar
inc
ds
ds
ds
aas
jo
je
js
jl
push
dec
sub
add
xor
inc
sub
out
adc
inc
or
sar
dec
push
cdq
pop
add
add
iret
repz
sbb
mov
cmp
add
inc
leave
inc
push
inc
stc
repnz
cld
jg
clc
aas
push
pop
jmp
mov
out
rol
add
pop
or
xchg
test
mov
xchg
add
cmp
push
or
push
mov
pop
jo
pusha
push
sti
xor
imul
mov
psubb
or
out
push
out
clc
cmp
data16
out
cmp
fldcw
rol
loopne
lock
cs
push
imul
aas
pop
fdiv
pop
xchg
addr16
lock
fstp
xor
pop
std
cmp
js
add
mov
inc
add
repz
data16
jg
add
fstp
jl
js
aaa
or
pop
pop
stc
add
add
aas
push
xchg
out
loope
or
push
add
nop
enter
jg
push
add
nop
aas
sahf
out
pop
aas
into
push
add
add
out
loopne
popf
push
es
add
mov
aas
dec
pop
outs
push
sub
iret
pop
std
fs
cmp
lock
aas
rcr
(bad)
(bad)
push
dec
add
push
inc
jmp
outs
clc
pop
adc
leave
push
and
data16
jmp
sbb
out
dec
test
inc
nop
or
mov
aas
pop
jle
addr16
cmps
push
(bad)
pop
in
and
les
bound
cmp
in
out
mov
add
sbb
add
scas
jbe
cld
pop
cmp
fadd
push
inc
mov
aaa
pop
push
addr16
lock
inc
sbb
inc
cs
or
mov
std
or
movs
add
mov
cmp
cmp
out
lock
add
inc
add
ficom
and
xor
push
sbb
sbb
addr16
adc
xor
clc
ins
fild
push
sbb
push
sbb
or
ss
sar
xchg
shl
cs
xchg
and
add
and
adc
or
add
rol
into
add
and
add
jnp
add
mov
in
inc
push
aas
cmp
sub
mov
ja
imul
repz
xor
daa
fidivr
cs
xor
iret
pop
retf
daa
and
ja
fidiv
fidivr
or
dec
push
dec
push
mov
int
xor
push
daa
cmp
outs
fst
daa
xchg
push
(bad)
mov
lahf
dec
daa
dec
add
daa
mov
mov
ja
push
daa
clc
push
mov
cmc
sbb
mov
mov
and
xchg
mov
inc
sahf
cmp
inc
cmp
xor
repz
and
daa
inc
(bad)
fiadd
push
movs
daa
dec
sub
in
jns
repz
xor
mov
retf
mov
jns
clc
xor
jbe
cs
js
jnp
ja
push
int3
push
and
jbe
mov
and
mov
cmp
pop
push
(bad)
cmp
and
fs
fs
xlat
push
pop
(bad)
mov
retf
push
and
xor
loope
mov
or
adc
xsavec
push
lds
inc
push
addr16
mov
sub
add
or
div
xchg
adc
inc
pop
into
inc
or
dec
jmp
dec
push
pop
xor
outs
daa
inc
aad
sti
lods
ins
mov
pop
daa
enter
mov
out
in
sbb
jns
push
inc
mov
lahf
dec
(bad)
(bad)
(bad)
clc
add
(bad)
test
mov
daa
ja
sbb
push
repz
pushf
es
xor
sbb
dec
mov
xor
inc
arpl
jns
mov
inc
shl
xor
arpl
cmp
add
ins
lahf
cmp
inc
dec
pop
and
repz
fs
jnp
fist
daa
push
retf
in
cmp
mov
mov
daa
dec
retf
jmp
inc
inc
es
daa
dec
add
cmp
mov
xor
in
repz
xchg
jecxz
push
(bad)
shl
pop
adc
loopne
xor
xor
in
inc
js
(bad)
les
movs
jb
sahf
or
or
daa
xor
xor
cmps
arpl
sar
mov
rcr
mov
push
inc
sub
push
jbe
leave
aas
push
xor
push
sub
add
outs
iret
dec
in
data16
inc
push
shl
mov
mov
daa
cmp
and
inc
aas
mov
aas
clc
daa
fsub
adc
and
pop
lock
cmp
fsub
movs
push
mov
xor
xor
dec
xchg
fs
inc
fisub
mov
cmp
lahf
jp
ficom
jmp
not
pop
xchg
in
and
mov
sbb
or
sub
out
push
cmp
sbb
lock
(bad)
xchg
sbb
pop
adc
or
and
push
jmp
ins
imul
popf
and
clc
or
sbb
xchg
es
push
(bad)
daa
dec
xor
fld
mov
dec
daa
dec
daa
dec
into
cdq
jo
daa
clc
dec
or
dec
out
fidivr
cmp
adc
rcr
dec
out
aas
sbb
mov
push
aaa
mov
out
xor
cdq
cdq
js
call
cdq
and
imul
daa
repz
aaa
cmp
mov
(bad)
xor
(bad)
or
push
sahf
pop
push
mov
adc
push
daa
cmp
in
es
daa
shl
or
aas
push
mov
lahf
adc
pop
push
inc
sub
inc
jae
out
inc
cmp
adc
or
test
das
repnz
aaa
fstp
repz
daa
mov
jl
daa
and
cwde
jns
cwde
and
scas
or
jbe
stos
sub
push
fs
ins
jmp
jbe
mov
outs
dec
and
(bad)
push
imul
retf
repz
mov
cmp
repnz
daa
and
test
add
test
mov
xchg
and
pushf
aas
sub
inc
push
aas
adc
lea
push
repnz
adc
ins
inc
lahf
jp
aad
(bad)
or
cdq
xor
xchg
aas
dec
cld
push
lock
add
pop
mov
lock
xchg
dec
or
xchg
add
jnp
leave
or
fild
lmsw
test
in
(bad)
add
test
ss
add
push
(bad)
jae
enter
gs
xchg
inc
lods
imul
enter
cs
fisub
add
and
inc
stos
sbb
jo
cmp
out
cmp
add
popa
and
jmp
imul
out
add
ss
add
popa
or
fidivr
jae
dec
gs
fdivr
jnp
cmp
aaa
cmp
xchg
pop
jo
ds
inc
ins
sahf
jae
fstp
out
out
gs
out
out
add
cmps
xor
ficom
fdivrp
dec
mov
imul
cmp
aas
sbb
js
pusha
aad
mov
daa
out
and
addr16
pop
jnp
sbb
ret
mov
and
pop
and
cs
imul
sbb
idiv
fsubr
or
outs
arpl
or
mov
xchg
xchg
sub
shl
xor
sbb
popa
sbb
daa
push
div
ret
sub
adc
mov
pop
mov
dec
add
sahf
bound
mov
push
mov
jle
gs
cwde
jecxz
and
xchg
ret
clc
push
jl
push
xor
outs
cmp
add
loop
and
ror
inc
stos
mov
or
aad
iret
jnp
add
ins
pavgw
mov
add
cs
cmp
adc
jbe
out
push
inc
push
jo
adc
mov
inc
jno
imul
xchg
aas
(bad)
fmul
jne
js
mov
push
sbb
lea
mov
(bad)
jmp
xor
inc
imul
mov
or
rcr
add
bt
inc
fild
xchg
or
dec
push
scas
adc
jb
xchg
cmp
add
ds
jp
imul
xchg
imul
sbb
daa
inc
loop
push
add
push
sbb
imul
mov
jle
or
ss
cmp
inc
mov
push
arpl
mov
(bad)
or
sub
jb
adc
shl
(bad)
or
lds
mov
cmp
or
cmp
inc
jle
ins
or
mov
ins
inc
adc
pop
mov
add
ja
push
sub
outs
add
ins
push
dec
shl
stos
popa
adc
div
fidivr
push
retf
cmp
loopne
mov
pop
cld
or
or
add
add
out
lea
or
loope
cmp
push
add
pop
cli
jne
mov
popa
xor
jno
in
add
sbb
push
jle
add
out
loopne
iret
xchg
push
add
scas
jp
jbe
pop
ss
out
rol
add
ins
addr16
outs
sub
sbb
sub
ins
sub
push
or
out
cmps
bound
stos
rdpmc
dec
mov
jo
outs
pop
dec
xchg
aas
aaa
xchg
add
lds
arpl
pop
and
mov
push
xlat
addr16
mov
stos
pop
xlat
ins
xchg
je
je
or
lods
stos
pusha
and
sbb
jbe
lahf
adc
add
out
jg
xchg
inc
jp
lods
fcom
test
sbb
pop
sbb
jnp
push
fild
jo
imul
and
gs
dec
pop
pop
mov
das
cs
es
(bad)
int
(bad)
mov
fwait
js
mov
lahf
dec
pop
sbb
out
hlt
push
cmp
push
ins
fst
popf
or
outs
movntps
jge
(bad)
push
repz
pop
pop
imul
sbb
fimul
inc
dec
mov
adc
add
pop
push
push
out
mov
cmps
cmp
push
or
adc
test
dec
rcl
jno
fs
sbb
dec
pop
loop
adc
loopne
(bad)
pop
jnp
lods
imul
inc
pop
lea
cmp
cli
je
sahf
mov
ja
mov
or
pop
ret
pusha
stc
sahf
out
xor
jmp
lea
ja
adc
push
mov
inc
xor
sub
arpl
pop
mov
sahf
lock
mov
sub
sahf
stos
daa
mov
and
dec
lods
sbb
lods
stos
xlat
imul
inc
sub
out
jnp
fbstp
call
adc
fnstsw
mov
sub
shr
rcr
jbe
sub
das
pop
mov
jmp
jmp
out
dec
scas
loopne
jnp
inc
jb
jo
icebp
xor
jg
bound
mov
retf
sti
add
arpl
push
imul
shr
jae
mov
(bad)
retf
mov
dec
xor
push
rol
les
add
in
rcl
data16
sub
push
push
add
repz
inc
add
adc
push
xor
cmp
push
test
and
inc
(bad)
xor
outs
test
xchg
or
outs
push
jp
(bad)
outs
dec
dec
dec
jo
or
push
out
stos
dec
and
inc
fistp
push
stos
jo
or
movs
xor
sahf
xchg
lds
stos
das
dec
sbb
loope
sub
pop
sbb
or
inc
popa
call
add
ja
adc
pop
ret
add
adc
in
dec
dec
dec
fwait
jecxz
scas
ficom
inc
and
sub
shr
sbb
jg
push
push
sbb
scas
(bad)
pop
pop
pop
xor
sub
ja
cmps
ja
sub
pop
mov
mov
push
jnp
cmps
xor
sbb
push
bound
arpl
pop
mov
or
xlat
aad
jmp
out
or
ret
call
sub
bound
inc
pop
scas
sbb
repz
add
jae
jns
pop
inc
xor
add
sbb
xlat
xchg
push
lods
aaa
mov
push
adc
jbe
stos
aaa
pop
jns
pop
sub
retf
xor
cmp
adc
pusha
sar
pop
jle
dec
ret
sub
jle
mov
stos
es
inc
xchg
mov
lods
out
pop
xor
repz
inc
jge
inc
stos
por
jnp
dec
(bad)
mov
push
iret
adc
jae
es
pop
ins
out
xchg
and
cmps
popa
neg
adc
ss
mov
sub
and
movs
call
scas
bound
pusha
shl
pop
push
aas
fiadd
outs
ficom
sub
outs
add
and
sub
xor
mov
mov
and
je
xchg
jp
and
push
pop
adc
mov
lods
sbb
ins
xor
pop
(bad)
dec
mov
add
or
cmp
fwait
pop
jp
push
imul
sbb
xor
mov
xchg
sub
push
sub
xor
mov
inc
lock
sbb
mov
dec
ins
inc
and
xchg
mov
xor
das
or
inc
sbb
shl
xlat
outs
addr16
pop
scas
inc
sbb
pop
daa
jnp
adc
xchg
inc
stos
push
xor
jmp
pop
loop
shl
sahf
or
mov
jne
aaa
js
in
mov
adc
sti
bound
sub
fs
add
push
bound
js
xchg
push
ror
out
push
xchg
and
(bad)
jg
outs
call
pop
out
xchg
pushf
dec
push
xor
push
ficom
test
lock
add
xor
pop
push
jae
or
outs
daa
or
mov
ret
aas
iret
inc
and
shl
inc
(bad)
not
inc
adc
jecxz
dec
add
sbb
jbe
mov
cmps
pop
and
or
pop
(bad)
adc
retf
daa
cmp
scas
adc
mov
arpl
mov
jns
push
cmp
pop
jb
imul
dec
imul
push
sbb
dec
and
sub
(bad)
xchg
mov
sub
sbb
shl
ds
dec
jne
xchg
add
bound
and
ror
fisubr
add
ds
jnp
adc
jmp
mov
outs
es
or
pop
(bad)
out
jb
mov
cmp
or
jbe
or
add
rep
emms
add
imul
sub
stos
mov
push
cmp
bound
mov
arpl
xchg
or
outs
mov
fs
push
mov
push
jne
daa
or
add
sub
cmp
cmp
cs
stos
push
sub
pop
mov
mov
repz
pop
mov
add
add
jno
pop
pop
out
sysret
push
cmp
leave
add
inc
pop
jno
adc
retf
bound
push
int
fwait
add
pop
adc
xchg
cli
mov
pop
cmps
jmp
popa
call
mov
(bad)
mov
mov
jg
cmp
xor
or
sub
or
xor
adc
data16
arpl
ins
mov
jmp
cmp
xor
cmp
adc
adc
jmp
adc
outs
xor
add
adc
add
adc
sub
and
mov
xchg
sbb
imul
sar
xor
in
jmp
arpl
and
inc
jae
out
push
or
add
cli
xlat
scas
xor
ret
push
pop
mov
and
movs
push
mov
sbb
push
sub
outs
outs
or
push
mov
mov
arpl
sub
xlat
mov
ret
mov
push
add
mov
test
dec
pushf
mov
jno
sbb
push
sti
inc
xchg
and
addr16
fs
loop
mov
xlat
sub
data16
mov
into
jo
pop
or
es
fild
fwait
xchg
int
lds
retf
dec
daa
int
push
push
push
aad
(bad)
jnp
xor
iret
das
or
je
adc
and
call
adc
sahf
cmp
mul
jb
push
or
jbe
add
jne
ret
and
popa
jae
ret
jae
out
imul
loop
xor
sbb
jmp
dec
fwait
xor
adc
test
fisubr
jns
outs
pusha
xor
clc
push
cmps
popa
fwait
fs
imul
xchg
jns
scas
or
mov
or
and
ret
imul
arpl
shl
outs
lahf
jb
jge
jns
arpl
adc
adc
or
sbb
adc
pop
outs
ds
stos
arpl
imul
pop
xchg
dec
xchg
and
(bad)
xor
and
mov
(bad)
pop
jg
(bad)
call
es
aaa
mov
pop
fwait
cmp
dec
push
fiadd
push
inc
ret
shl
inc
push
pusha
sub
xchg
jne
sbb
test
push
xchg
sar
inc
push
outs
outs
xchg
cmc
jo
sbb
dec
shl
sub
adc
adc
push
push
dec
out
sahf
adc
push
popf
mov
pop
imul
adc
push
rol
loope
and
cmps
jne
sub
or
jae
and
or
xchg
adc
xchg
sub
in
rol
(bad)
shl
adc
adc
stc
inc
outs
ins
xchg
js
adc
jo
ds
inc
cmp
or
repnz
fcmovbe
gs
xor
imul
fiadd
int
push
int
adc
push
xchg
mov
adc
add
pop
fimul
mov
mov
dec
in
fmulp
int
xor
adc
sub
ins
jmp
gs
ins
add
adc
mov
xor
cli
sar
mov
push
sbb
or
jl
mov
std
movs
xchg
xchg
jo
push
fs
lgs
fsub
cmp
sbb
mov
outs
jb
in
call
push
jo
sub
cmp
or
loope
fbstp
pop
adc
mov
xor
test
cs
inc
enter
push
xchg
push
xchg
adc
test
xor
pop
cwde
pop
push
xchg
add
xchg
inc
adc
xor
scas
pusha
(bad)
daa
sbb
in
push
inc
dec
mov
cs
adc
movs
dec
adc
fwait
adc
js
pusha
popa
cdq
pusha
pusha
or
iret
xor
sub
dec
dec
xchg
ficom
or
xchg
sub
cmps
add
add
add
adc
sub
xor
sub
and
xchg
add
xchg
popa
lahf
pop
or
xor
or
add
sub
pop
cmps
add
sbb
cs
and
cmps
pop
pop
or
inc
add
or
or
jne
or
xor
repz
or
sub
pop
push
dec
jae
or
push
popa
sbb
pop
shl
or
mov
and
pop
adc
xor
inc
dec
ret
idiv
pusha
or
inc
or
adc
mov
inc
or
lods
add
inc
inc
sbb
mov
pusha
fxch
or
fwait
mov
pop
test
pop
mov
add
add
and
xchg
pop
cmp
adc
movs
or
popa
or
imul
add
cmp
outs
punpckldq
cmps
(bad)
(bad)
dec
js
pop
mov
ficomp
jg
cdq
pop
sub
push
loop
call
dec
jb
pop
mov
push
or
adc
jb
nop
adc
mov
pop
fadd
push
fchs
adc
addr16
or
test
pop
pop
xor
pop
rcl
and
dec
ret
stos
or
and
pushf
add
int3
rol
std
int3
add
or
lahf
add
rcl
jae
iret
adc
std
movs
adc
dec
add
rol
mov
and
xor
pop
lea
pop
add
in
cmc
rcl
or
adc
pop
mov
pop
int
les
fdiv
xlat
xchg
pop
jo
bound
pop
or
bound
sbb
ror
add
aas
loopne
sbb
adc
add
adc
test
xor
dec
shl
sbb
mov
dec
fidiv
add
add
in
add
or
in
pop
add
fisttp
std
xchg
inc
in
test
xor
mov
mov
dec
ins
fadd
dec
push
imul
sti
mov
nop
out
push
mov
(bad)
push
scas
lds
enter
push
push
add
in
add
(bad)
jg
movs
xlat
and
scas
aam
rcl
pop
popf
(bad)
(bad)
out
cmps
xor
xchg
push
sub
js
push
sbb
iret
jmp
xor
rcl
xchg
xor
xchg
pop
jl
inc
rcr
mov
jmp
test
les
ins
sub
out
data16
inc
stc
sbb
out
or
inc
xor
(bad)
(bad)
(bad)
dec
rol
pop
cmp
jno
loop
aaa
cmp
repnz
and
paddusb
(bad)
jge
pop
push
mov
pop
sub
and
inc
add
jl
pop
sub
out
cmp
jae
(bad)
(bad)
(bad)
jl
pop
sbb
retf
retf
lods
ror
sbb
cwde
xchg
dec
cmp
xchg
jae
fdivr
(bad)
inc
add
xchg
icebp
out
cmps
inc
lock
mov
jecxz
(bad)
(bad)
inc
fs
(bad)
daa
jae
pop
lock
mov
(bad)
fld
cmps
movs
mov
in
jmp
lea
add
fiadd
(bad)
(bad)
push
mov
test
das
loope
out
(bad)
(bad)
(bad)
mov
test
xor
jl
inc
sub
jmp
push
mov
lea
mov
scas
es
(bad)
push
dec
idiv
clc
xchg
int
and
(bad)
(bad)
call
outs
das
sbb
adc
sub
in
mov
sbb
adc
inc
dec
cmp
iret
mov
(bad)
(bad)
(bad)
call
pop
inc
inc
in
fcomp
test
iret
jg
jg
pushf
cwde
popa
jmp
mov
pop
outs
mov
(bad)
(bad)
jmp
mov
xchg
outs
add
cmps
pop
mov
out
ret
call
ins
(bad)
(bad)
(bad)
dec
push
adc
pop
jg
inc
iret
mov
fdivr
(bad)
fmul
sahf
xor
(bad)
(bad)
call
sub
cmp
arpl
in
xchg
out
scas
sub
mov
fnsave
ret
data16
mov
add
mov
sbb
dec
mov
pop
stos
mov
xor
adc
(bad)
(bad)
call
loop
adc
pop
inc
cmp
or
xchg
mov
and
jl
(bad)
(bad)
(bad)
push
sub
xchg
out
mov
inc
fistp
lock
repz
jbe
movs
scas
mov
popa
pop
push
pop
dec
(bad)
mov
sahf
add
sub
repnz
xor
(bad)
(bad)
(bad)
mov
dec
push
pop
inc
push
inc
in
jo
mov
pop
imul
or
sbb
ret
mov
mov
in
test
xchg
(bad)
(bad)
fild
(bad)
adc
dec
cli
ins
(bad)
sub
adc
test
xor
pop
(bad)
(bad)
(bad)
jmp
cmp
xchg
cmp
inc
and
cld
imul
btr
push
scas
jno
jmp
cmp
(bad)
call
into
mov
hlt
scas
cmp
in
stc
sub
mov
xchg
or
popf
sub
cmc
or
lock
(bad)
push
mov
call
cmps
mov
pop
repnz
daa
sub
(bad)
call
sub
xchg
jle
test
pop
adc
cmp
cmc
lea
(bad)
(bad)
(bad)
call
cmps
popa
xor
js
mov
cld
or
ror
mov
sub
(bad)
(bad)
(bad)
jmp
mov
mov
cwde
adc
fsubr
outs
pushf
mov
es
(bad)
jmp
mov
cs
ror
xor
mov
xlat
mov
and
pop
popa
dec
cmc
add
pushf
enter
dec
sbb
mov
sbb
jecxz
mov
or
mov
pop
jge
xor
cs
mov
add
popf
in
xor
clc
mov
jnp
cs
adc
cmp
int
(bad)
(bad)
call
pop
and
mov
mov
sahf
push
or
es
punpckhbw
addr16
push
mov
ins
jmp
pop
or
adc
pop
mov
das
or
or
(bad)
(bad)
(bad)
call
lds
jmp
or
addr16
aad
call
dec
(bad)
push
xor
imul
mov
jns
repnz
outs
or
ins
jp
sbb
into
sahf
push
(bad)
(bad)
(bad)
out
pop
lods
scas
cmp
shr
push
clc
fidiv
mov
call
inc
inc
scas
dec
jl
(bad)
mov
push
mov
data16
push
jmp
mov
pop
dec
jne
or
(bad)
(bad)
(bad)
call
fcomp
mov
jbe
out
mov
xchg
mov
jg
lds
call
and
push
cs
xchg
adc
mov
(bad)
(bad)
jmp
or
out
into
les
test
adc
sbb
xlat
mov
test
test
(bad)
call
cmp
frstor
fwait
jl
and
dec
mov
push
xchg
ins
dec
in
(bad)
dec
pop
rcl
int3
stc
jg
daa
add
cmc
jb
xlat
inc
adc
inc
aam
jmp
push
sub
inc
icebp
pushf
test
fmul
in
in
lock
mov
jecxz
test
in
ficom
fcos
(bad)
(bad)
inc
shl
and
aam
je
jmp
aad
aas
or
(bad)
adc
xlat
xchg
int3
jo
pop
xor
fidivr
sub
(bad)
mov
fcomp
(bad)
(bad)
(bad)
push
(bad)
fst
cs
fnstenv
out
mov
es
inc
in
jecxz
dec
inc
pop
out
and
int3
mov
or
cmc
mov
(bad)
mov
inc
out
aad
ret
mov
or
xchg
cmp
adc
fs
lods
fs
movs
xchg
cmps
inc
das
jl
and
xor
sub
jmp
inc
inc
pop
cmp
xor
les
addr16
arpl
clc
(bad)
call
push
cs
(bad)
ss
inc
in
std
fnstcw
call
icebp
push
push
jmp
jae
pusha
std
neg
lods
fisttp
shl
or
(bad)
std
cmp
pop
test
mov
add
mov
sbb
mov
bound
ffreep
in
jmp
jo
lods
sbb
adc
push
imul
pop
cmc
shl
(bad)
(bad)
(bad)
(bad)
fimul
or
add
dec
cmp
pop
push
or
es
fidiv
hlt
scas
push
pop
sub
gs
cmp
mov
imul
(bad)
mov
popa
sub
add
mov
and
fs
call
(bad)
imul
test
aam
pusha
push
lock
idiv
mov
dec
push
stos
pop
adc
scas
popf
jg
push
push
add
cdq
loope
loopne
addr16
pop
aam
cld
mov
inc
sar
(bad)
(bad)
call
push
adc
xchg
imul
jae
fwait
cwde
and
mov
and
mov
cld
scas
mov
(bad)
(bad)
inc
inc
rcr
cdq
adc
mov
jge
and
mov
sbb
mov
xlat
mov
out
mov
(bad)
and
(bad)
inc
nop
pop
push
pop
mov
fld
add
adc
(bad)
(bad)
mov
or
sbb
aad
inc
popa
pushw
(bad)
fbld
(bad)
mov
cmc
mov
push
das
add
pusha
mov
mov
(bad)
jmp
popf
push
push
pop
aad
mov
outs
mov
adc
and
sahf
ins
xor
test
call
cmp
or
(bad)
(bad)
xor
leave
cld
(bad)
(bad)
jmp
push
call
test
rol
test
pop
dec
adc
(bad)
(bad)
inc
adc
sub
and
pop
cmp
add
dec
jns
(bad)
(bad)
call
ins
cmp
jo
dec
out
mov
xchg
movs
in
jne
mov
ret
(bad)
(bad)
(bad)
(bad)
out
pusha
cdq
lahf
fist
or
popf
inc
cmp
push
hlt
jecxz
push
pop
dec
neg
aam
bound
loope
cmp
push
mov
xor
and
stc
stos
adc
arpl
(bad)
jg
adc
push
stc
mov
sbb
retf
cmp
outs
(bad)
(bad)
aas
in
jecxz
sub
scas
push
cmp
les
adc
fist
dec
add
jle
(bad)
cdq
hlt
fcmovnbe
mov
push
ror
jp
outs
(bad)
call
inc
scas
shl
cmp
lock
imul
jmp
aad
mov
pusha
(bad)
(bad)
(bad)
jg
popf
mov
cmp
inc
inc
std
shr
shl
xor
(bad)
(bad)
(bad)
call
icebp
scas
mov
ss
sub
add
adc
and
call
(bad)
std
dec
xor
mul
and
jo
out
sub
xchg
xchg
mov
mov
sub
jmp
and
push
out
adc
cwde
sub
rcl
ror
mov
mov
mov
(bad)
(bad)
(bad)
inc
call
pushf
popa
add
jno
mov
rol
fsubr
arpl
(bad)
sbb
jmp
scas
lock
movs
mov
push
sbb
dec
int
test
push
dec
cmp
adc
fs
(bad)
mov
fstp
dec
add
jmp
(bad)
cmp
mov
jae
push
popa
les
mov
in
(bad)
mov
das
idiv
cmovbe
cli
aad
xor
sub
mov
es
jecxz
ret
push
dec
in
(bad)
(bad)
call
sahf
cmc
test
xor
div
cmp
icebp
jmp
sub
(bad)
(bad)
jmp
test
stc
jo
movs
repz
sahf
cmc
sub
lahf
fsubr
les
(bad)
(bad)
(bad)
(bad)
jmp
arpl
sbb
xchg
push
jno
lock
sub
je
add
scas
clc
push
pop
cmps
pusha
xor
push
data16
xchg
jnp
aad
sub
ret
push
mov
std
jmp
pushf
push
xor
cmc
jmp
ret
pop
mov
mov
mov
dec
push
stos
int3
ins
and
sahf
xchg
iret
cmp
cmp
mov
shl
nop
(bad)
(bad)
(bad)
sti
push
es
xlat
mov
movs
mov
jg
sbb
cmp
call
and
mov
add
sub
out
xchg
pop
adc
(bad)
(bad)
(bad)
out
loop
in
lods
and
rcl
rcl
cmp
ja
sub
daa
fimul
idiv
(bad)
(bad)
jmp
inc
test
aam
out
pop
repz
lods
data16
mov
and
push
das
mov
test
sahf
dec
imul
(bad)
int3
dec
es
(bad)
(bad)
dec
mov
dec
push
inc
icebp
xchg
mov
jmp
(bad)
ins
daa
inc
pop
push
mov
mov
call
repz
cdq
push
or
(bad)
(bad)
(bad)
call
jl
hlt
mov
push
inc
push
adc
scas
sub
ret
mov
call
aas
mov
mov
mov
inc
addr16
dec
adc
or
imul
jae
std
stc
sub
fiadd
mov
or
adc
add
jb
mov
jnp
stos
push
inc
sbb
push
sbb
sbb
or
aam
cmp
(bad)
call
cmp
mov
leave
mov
fdiv
adc
fisttp
cdq
mov
sub
(bad)
(bad)
jmp
ss
pop
movs
fucomi
mov
pop
mov
cld
fcom
pop
sbb
out
int
jne
test
out
xchg
cmps
xchg
and
mov
pop
cmps
(bad)
(bad)
push
addr16
clc
sar
push
loope
jg
sbb
mov
dec
or
gs
retf
(bad)
inc
jp
adc
adc
dec
sbb
bound
adc
lds
or
fist
push
adc
add
sahf
push
ss
repnz
inc
cmp
lea
jge
jecxz
cwde
xlat
call
sub
stos
imul
inc
fadd
push
cmc
test
sub
inc
jmp
or
ss
pop
cmp
imul
xchg
aad
mov
mov
sub
mov
cmp
mov
fidiv
xor
cmc
pushf
jb
in
sbb
into
sar
(bad)
in
sar
retf
lods
stos
ds
or
or
fisttp
adc
cmp
cmp
mov
cmc
add
dec
(bad)
xor
xlat
(bad)
(bad)
(bad)
call
ror
push
or
sub
out
xchg
in
or
pusha
cmc
scas
(bad)
(bad)
(bad)
push
dec
enter
inc
outs
xchg
xor
adc
xor
in
test
test
mov
(bad)
(bad)
dec
lods
imul
xor
mov
push
and
scas
push
pushf
mov
pop
add
(bad)
(bad)
dec
shl
rcr
(bad)
aaa
push
sub
cs
inc
inc
push
push
ss
(bad)
(bad)
inc
stos
cs
retf
mov
pop
jae
in
ins
xor
ins
jmp
push
push
std
dec
or
jb
add
ret
add
pop
retf
xchg
cmp
inc
xchg
push
ret
dec
bound
push
movs
mov
and
sbb
shl
dec
popa
loopne
xchg
clc
cdq
dec
cwde
adc
cmps
inc
imul
mov
cmp
into
push
sub
mov
pop
popa
inc
test
fndisi(8087
adc
shl
or
enter
shr
mov
inc
mov
cld
(bad)
(bad)
dec
mov
inc
pop
dec
push
std
pop
sar
push
aam
cmps
jno
pop
xor
mov
xor
hlt
(bad)
push
mov
jp
or
xor
and
std
clc
out
dec
adc
pop
in
(bad)
(bad)
(bad)
call
aam
xor
sub
pop
jnp
sub
mov
push
or
lock
retf
mov
(bad)
(bad)
(bad)
call
imul
mov
inc
mov
(bad)
test
and
push
int
fadd
mov
retf
jmp
pop
or
sbb
xor
cmc
jecxz
push
bound
or
cld
fwait
(bad)
(bad)
(bad)
call
sbb
in
or
dec
jmp
test
call
cmp
scas
mov
sar
mov
xor
add
and
popf
(bad)
(bad)
(bad)
mov
int
ds
sbb
pop
vpsrlq
or
push
fimul
push
repz
hlt
pop
jne
push
inc
sti
jnp
or
mov
pop
(bad)
(bad)
dec
push
mov
(bad)
jl
push
add
push
jl
mov
and
pop
jge
and
fiadd
aas
jl
scas
mov
ret
in
mov
fsubr
aad
dec
xchg
pop
popa
dec
sub
(bad)
(bad)
mov
dec
loopne
push
movs
mov
push
and
scas
inc
mov
(bad)
mov
scas
jns
mov
sub
pop
cdq
sbb
(bad)
(bad)
(bad)
(bad)
mov
jmp
mov
dec
dec
xor
lods
cmp
mov
cdq
sub
jg
add
(bad)
(bad)
stc
iret
jl
daa
(bad)
jle
xor
dec
mov
fwait
pushf
lds
shl
hlt
(bad)
push
mov
jnp
daa
xchg
pushf
dec
xor
in
xor
loop
retf
jmp
jmp
fmul
adc
(bad)
jb
shr
or
stos
test
shl
es
(bad)
(bad)
jns
fwait
jb
sbb
jg
into
jne
pop
adc
imul
loopne
out
(bad)
(bad)
call
popa
cmps
mov
and
mov
xchg
mov
(bad)
cmps
dec
adc
out
idiv
(bad)
(bad)
jmp
fstp
mov
sbb
jle
fsub
sbb
(bad)
(bad)
(bad)
push
clc
xchg
add
push
iret
jp
sub
dec
(bad)
fidivr
test
retf
adc
call
inc
jecxz
(bad)
(bad)
call
sahf
or
or
push
or
stc
pop
shr
sbb
xchg
stos
js
dec
pop
push
cmps
cwde
mov
popa
fwait
mov
mov
jmp
mov
sbb
fadd
jb
mov
fcom
(bad)
add
pop
xor
stos
(bad)
push
or
(bad)
(bad)
(bad)
call
push
ror
xchg
dec
hlt
mov
dec
shl
cwde
int
xchg
push
push
sbb
in
call
(bad)
jmp
lods
xchg
cs
fs
stos
lods
bound
or
in
cwde
dec
mov
pusha
dec
jmp
(bad)
(bad)
(bad)
mov
cmc
adc
scas
pop
sbb
ja
jl
mov
lock
(bad)
(bad)
sti
icebp
adc
icebp
jo
icebp
sbb
loop
cmc
rcr
or
(bad)
(bad)
(bad)
(bad)
repz
jp
adc
jno
fistp
sbb
mov
bound
cmps
sbb
add
(bad)
(bad)
push
dec
jecxz
add
mov
sbb
push
jg
dec
test
inc
mov
lds
jmp
mov
pop
cmc
in
inc
adc
retf
inc
push
call
pop
jecxz
xor
repnz
pushf
ss
and
sbb
sub
cld
sbb
xchg
bound
pop
cmp
xor
(bad)
(bad)
call
cs
shr
int
mov
inc
out
mov
ret
shr
call
sbb
xor
ins
mov
sahf
aaa
adc
add
xor
out
dec
(bad)
pop
hlt
mov
iret
(bad)
xchg
dec
inc
dec
pop
cmp
loopne
mov
cmp
inc
pop
out
pop
push
dec
mov
xchg
ss
sub
or
call
shl
jle
lock
mov
sub
mov
(bad)
(bad)
inc
mov
mov
scas
xchg
les
pop
mov
nop
mov
repz
(bad)
(bad)
call
iret
in
mov
mov
xor
es
cld
test
mov
inc
adc
fwait
aaa
cld
(bad)
(bad)
jle
shl
(bad)
int
mov
xchg
add
not
sub
(bad)
fcomip
sub
dec
bound
inc
jge
or
hlt
push
or
mov
push
(bad)
push
sbb
mov
push
mov
xor
aaa
mov
push
cld
(bad)
call
inc
add
or
jmp
mov
int
cs
(bad)
cld
push
jg
dec
sbb
sbb
mov
add
mov
inc
adc
js
xor
rep
in
jns
in
and
(bad)
(bad)
call
fld
jmp
pop
push
adc
popa
pop
push
xchg
out
test
push
or
daa
dec
pop
in
sub
les
push
and
lea
push
add
cmc
retf
fsubr
int
mov
loopne
(bad)
pushf
jae
je
(bad)
(bad)
jmp
das
(bad)
jmp
jnp
mov
pop
ret
movs
mov
jmp
push
test
adc
je
repz
aam
add
sbb
mov
mov
mov
push
test
fcomip
call
cmps
fs
adc
jo
in
inc
cld
mov
(bad)
(bad)
jg
test
into
push
xchg
cdq
pop
mov
xor
adc
inc
out
inc
adc
movs
xor
dec
repnz
(bad)
xchg
das
xor
pop
inc
ins
mov
clc
iret
pop
(bad)
sti
lahf
stc
mov
addr16
mov
jmp
movs
mov
aaa
pop
(bad)
mov
(bad)
jg
test
jecxz
popaw
in
pushf
sysexit
or
jecxz
fwait
arpl
and
(bad)
(bad)
(bad)
jmp
shr
or
cmps
lds
cld
xlat
test
nop
ror
(bad)
(bad)
(bad)
aas
rep
div
pop
mov
pop
mov
jmp
aaa
out
mov
(bad)
(bad)
(bad)
jmp
push
push
mov
mov
in
sbb
and
sbb
and
fisubr
dec
(bad)
fcomip
jmp
retf
repnz
push
jl
jb
or
jbe
stos
mov
xchg
push
test
stos
call
cmp
(bad)
iret
outs
stos
jns
enter
fs
mov
fdivr
(bad)
(bad)
(bad)
mov
in
in
fldcw
xor
rcr
movs
and
sar
(bad)
(bad)
(bad)
(bad)
(bad)
xchg
push
in
dec
mov
pop
pop
sbb
sbb
data16
and
ret
outs
and
outs
lods
adc
mov
out
dec
(bad)
repz
jae
pop
popa
hlt
pop
sub
and
(bad)
stos
(bad)
sbb
in
ret
rol
xchg
loop
xchg
dec
cwde
mov
jmp
add
mov
push
fucompp
inc
add
clc
call
repnz
loope
or
sti
mov
cmp
jne
outs
pop
mov
ja
(bad)
(bad)
jmp
shl
pop
lock
mov
mov
pop
es
mov
(bad)
jmp
aam
xchg
ror
pop
cwde
lahf
mov
sbb
sbb
xor
ins
clc
(bad)
(bad)
(bad)
inc
popf
sbb
jno
pusha
bound
add
pop
mov
or
stos
popa
out
sahf
mov
icebp
(bad)
cmp
call
mov
in
mov
jo
enter
inc
pop
das
and
(bad)
hlt
(bad)
cmp
cmp
retf
sbb
adc
sub
push
imul
push
sub
or
pop
xchg
sub
jno
sbb
stos
fxch
hlt
(bad)
(bad)
inc
mov
inc
mov
popf
mov
cmp
ins
push
(bad)
cmc
(bad)
(bad)
fucomip
mov
add
out
inc
ret
xchg
test
lahf
movs
pop
cmps
and
(bad)
inc
mov
and
fwait
pop
inc
movs
and
cwde
sub
add
push
push
push
(bad)
(bad)
jmp
sti
pop
int3
mov
js
jmp
retf
retf
leave
lds
inc
(bad)
(bad)
(bad)
push
cmp
mov
or
jae
fcmovb
ret
xlat
popa
pusha
loope
sub
iret
(bad)
mov
sti
sub
adc
pop
(bad)
mov
(bad)
jg
sbb
fcmovb
and
les
out
mov
and
(bad)
out
jbe
cmp
jp
push
xchg
(bad)
mov
mov
mov
movs
jbe
popa
mov
repnz
add
in
fist
nop
xchg
in
dec
int3
retf
or
jae
cli
inc
cld
inc
push
in
scas
inc
repz
jg
call
sar
inc
(bad)
(bad)
cmp
inc
icebp
push
je
and
repnz
xor
popf
inc
adc
in
xor
dec
jecxz
inc
cmp
cmp
in
lock
mov
mov
mov
stc
out
js
(bad)
es
adc
test
call
(bad)
aam
adc
(bad)
(bad)
dec
adc
test
gs
pop
jnp
sub
jno
enter
imul
push
inc
xor
lahf
xchg
xor
loop
sar
or
shr
addr16
(bad)
(bad)
jmp
xchg
dec
inc
fwait
push
sub
sbb
(bad)
cmp
mov
dec
call
and
(bad)
jmp
push
out
movs
sub
test
adc
(bad)
inc
fild
ror
(bad)
(bad)
(bad)
dec
mov
cmp
sub
xchg
adc
mov
cmc
add
scas
mov
rcl
sub
push
out
idiv
sti
cmp
call
sub
mov
mov
mov
jmp
enter
ins
sbb
mov
(bad)
(bad)
jmp
loopne
push
ja
(bad)
ficomp
mov
xlat
mov
jge
scas
push
xchg
push
sbb
(bad)
(bad)
(bad)
(bad)
jns
daa
push
sbb
lahf
jp
ret
lods
push
mov
pop
xor
mov
xor
(bad)
jmp
loopne
mov
clc
xchg
je
add
cmc
dec
sub
fisttp
aaa
(bad)
call
adc
add
aad
push
jns
retf
fld
loopne
fcomip
retf
cmp
ins
bound
int
mov
xor
mov
jmp
pop
lods
sbb
cmp
sbb
sbb
add
outs
icebp
and
sub
xchg
xor
cli
inc
mov
inc
in
ret
dec
or
ins
dec
fmulp
cs
(bad)
(bad)
(bad)
inc
sub
jae
aaa
mov
and
jnp
adc
mov
les
addr16
or
(bad)
mul
cli
pusha
dec
mul
fdivp
pop
mov
shr
scas
in
or
(bad)
mov
inc
ss
ret
mov
enter
into
jne
inc
pushf
(bad)
(bad)
(bad)
push
je
inc
pop
mov
cmc
xchg
loopne
pusha
and
sbb
inc
sbb
test
(bad)
(bad)
(bad)
(bad)
mov
cmp
mov
push
fistp
movs
idiv
push
add
xlat
xchg
jno
shr
sar
(bad)
(bad)
jmp
xchg
xchg
inc
dec
pinsrw
jbe
jae
fwait
stos
les
movs
clc
jne
iret
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jns
ss
sub
mov
push
push
fnstsw
or
out
inc
cdq
repnz
(bad)
mov
pop
pop
sahf
and
mov
jp
push
(bad)
mov
push
lods
add
mov
(bad)
sub
stos
adc
cmp
ins
or
adc
jo
mul
(bad)
call
(bad)
imul
test
mov
mov
mov
jmp
retf
sbb
sbb
jmp
cmps
pop
test
cmp
inc
and
(bad)
(bad)
jg
sbb
push
inc
outs
inc
les
sar
into
(bad)
les
ror
dec
adc
(bad)
fcomip
or
pushf
inc
and
mov
ror
mov
or
fistp
(bad)
call
cld
cli
add
cmp
xchg
and
fcomp
popa
jae
(bad)
jbe
or
push
ds
dec
jmp
adc
div
das
inc
cmc
cld
mov
add
xchg
ret
jo
(bad)
(bad)
push
cmps
push
cld
iret
mov
out
and
dec
jae
ret
and
push
mov
cld
(bad)
(bad)
fistp
jl
gs
fucomip
cmp
add
push
push
inc
xor
jae
and
das
(bad)
(bad)
push
mov
out
into
ins
push
xor
push
and
in
outs
mov
out
adc
fcomp
fadd
lds
push
pusha
adc
jle
mov
jmp
push
or
mov
cmc
movs
icebp
(bad)
jmp
pop
fs
bound
adc
out
arpl
pop
sub
es
stc
mov
mov
ret
popa
push
(bad)
(bad)
(bad)
inc
out
div
sub
pop
lods
les
fbld
mov
jnp
iret
ss
iret
xchg
xchg
(bad)
dec
mov
jle
out
stc
lds
sti
sbb
test
(bad)
push
cmp
and
hlt
jns
gs
mov
push
in
or
sbb
jmp
add
(bad)
mov
inc
sub
jg
(bad)
call
mov
test
stos
mov
je
and
shl
sar
(bad)
dec
stos
add
mov
pop
js
mov
(bad)
inc
call
xor
mov
dec
sbb
aam
fwait
cmp
out
jns
mov
inc
xor
test
dec
xor
rcl
jo
hlt
mov
mov
pop
popa
clc
ja
(bad)
(bad)
push
cmp
adc
or
cmps
aad
adc
ins
hlt
mov
sub
dec
inc
mov
fmul
(bad)
jmp
mov
imul
(bad)
mov
cmp
jl
mov
mov
lahf
ins
in
ret
xor
leave
mov
(bad)
(bad)
out
xor
stc
dec
sbb
loop
cmp
cs
scas
mov
(bad)
(bad)
(bad)
(bad)
jmp
dec
dec
jle
mov
int
xchg
scas
mov
or
cmp
rol
inc
dec
cdq
ret
mov
cmps
call
cld
fimul
mov
jmp
aam
sti
jg
iret
das
sbb
nop
xor
xlat
repnz
test
lods
outs
and
pop
and
fld
mov
or
pop
imul
xor
(bad)
dec
stos
pusha
and
xchg
pop
push
mov
jg
test
mov
mov
(bad)
(bad)
(bad)
jmp
cmc
stos
mov
loope
popf
(bad)
dec
test
outs
(bad)
xchg
mov
or
nop
sub
imul
sti
jecxz
or
add
daa
daa
jae
mov
xlat
lock
push
mov
mov
stos
jle
sub
push
std
(bad)
fist
xchg
add
call
add
nop
mov
mov
inc
xor
mov
imul
jg
(bad)
inc
fisttp
pusha
push
outs
popf
out
jno
sbb
jae
pop
jp
(bad)
cs
add
(bad)
jg
(bad)
(bad)
cmp
imul
xchg
add
push
add
adc
nop
call
jl
push
mov
dec
mov
out
fmul
push
adc
(bad)
(bad)
jmp
adc
push
mov
loopne
adc
mov
(bad)
(bad)
cmp
fs
cmp
cmp
cmps
sub
fmul
mov
jmp
push
loop
(bad)
dec
pop
(bad)
cwde
mov
mov
adc
jmp
rcl
jns
loop
sbb
xor
addr16
xlat
shr
call
faddp
jo
push
sbb
loop
(bad)
dec
push
and
add
(bad)
(bad)
(bad)
fistp
mov
xchg
lea
cld
mov
xchg
mov
sti
push
jl
ret
xchg
(bad)
(bad)
(bad)
dec
scas
xchg
xor
retf
xor
out
cs
out
lahf
mov
mov
xor
loopne
out
mov
cs
repz
ret
inc
mov
movs
ins
(bad)
(bad)
(bad)
jmp
or
jbe
xchg
cmp
add
mov
fidivr
sbb
ror
inc
test
sub
mov
popf
sub
pushf
shr
cmp
add
cmp
stos
pop
(bad)
(bad)
(bad)
dec
lods
jl
sbb
mov
xor
push
or
mov
pop
out
test
or
(bad)
(bad)
jmp
xchg
pop
cmp
xchg
mov
inc
dec
xchg
or
lahf
sti
dec
pusha
add
mov
push
mov
(bad)
xchg
bound
stos
rol
(bad)
jmp
mov
mov
sbb
mov
or
mov
rcl
dec
shl
mov
(bad)
(bad)
inc
cld
ret
arpl
loope
jl
add
pusha
sbb
out
xor
shl
(bad)
(bad)
(bad)
(bad)
jmp
inc
dec
ss
lock
outs
or
sub
retf
in
mov
jge
into
xchg
(bad)
aas
push
(bad)
sbb
cmps
sbb
push
and
inc
ds
lds
ins
pop
jmp
test
sub
ja
add
jmp
clc
fistp
sbb
ins
ret
movs
pop
dec
ret
push
mov
xor
call
movs
lea
pop
xor
adc
xchg
push
mov
xchg
repz
icebp
adc
xchg
(bad)
(bad)
(bad)
(bad)
jmp
fmul
jle
ins
in
xchg
adc
ror
std
cmp
mov
cmp
call
jmp
sbb
movs
xor
call
add
std
loopne
cmp
push
shl
push
jno
push
jmp
fwait
inc
sbb
sbb
cdq
(bad)
neg
lock
stc
(bad)
call
fwait
ins
movs
fmul
dec
pop
scas
clc
(bad)
call
xor
lods
pop
jnp
iret
pop
add
outs
jl
inc
dec
arpl
inc
add
mov
(bad)
pop
sbb
out
inc
pop
test
scas
enter
jg
ret
mov
out
xor
lods
jg
sahf
fs
mov
(bad)
(bad)
(bad)
mov
adc
fwait
inc
jno
stos
sub
test
outs
les
loopne
dec
rol
ror
cli
sub
cmps
mov
(bad)
jmp
jnp
out
test
or
pushf
cmp
lods
popf
dec
dec
(bad)
sti
bswap
ins
jbe
xchg
mov
jmp
ficom
cmp
dec
dec
aas
add
repnz
gs
int3
test
(bad)
pop
test
jl
inc
push
lds
fild
movs
loope
fdivrp
(bad)
call
xor
xchg
into
mov
dec
add
inc
mov
add
and
fld
popf
jge
(bad)
(bad)
(bad)
jmp
fadd
lea
add
scas
adc
lahf
scas
inc
inc
inc
aas
pavgw
(bad)
(bad)
(bad)
(bad)
mov
test
jb
push
ret
aad
and
sbb
(bad)
and
into
xor
adc
ret
clc
test
mov
(bad)
mov
xchg
data16
add
xchg
mov
rcr
push
sar
jmp
jne
add
dec
loop
out
nop
std
xchg
jle
call
mov
xor
jo
sbb
mov
xchg
je
das
pop
jns
ficomp
stos
call
cmp
les
sub
cmp
rcr
(bad)
call
test
ror
sar
daa
add
add
aam
popa
mov
aas
ja
sar
jge
les
mov
loop
adc
push
jle
(bad)
jmp
mov
aam
rcr
retf
ins
mov
(bad)
xor
(bad)
(bad)
(bad)
jmp
scas
icebp
cmps
xor
clc
or
sub
(bad)
inc
stos
inc
jmp
sub
mov
(bad)
(bad)
(bad)
jmp
cmp
pop
cmp
add
outs
xor
mov
xchg
and
mov
jmp
rol
stos
xor
scas
leave
mov
sub
pop
pop
aas
pop
push
(bad)
(bad)
(bad)
call
or
cwde
mov
fldcw
ret
pop
push
xor
pop
jo
mov
xor
jmp
loopne
sub
sub
ret
add
mov
(bad)
(bad)
jmp
adc
jecxz
loopne
push
xchg
sub
adc
(bad)
mov
(bad)
mov
jp
adc
dec
mov
int3
shl
pusha
push
dec
xor
leave
movs
cmc
cmps
dec
and
(bad)
div
mov
dec
dec
pop
pop
push
jl
inc
cmc
or
scas
jp
lods
std
pop
xor
(bad)
mov
ja
clc
call
add
and
adc
(bad)
(bad)
jmp
jns
push
mov
dec
mov
movs
xor
cmp
jbe
push
dec
(bad)
(bad)
(bad)
jg
lock
pop
sub
push
mov
(bad)
inc
pop
dec
in
and
(bad)
xor
(bad)
jmp
inc
and
xchg
popa
imul
inc
cli
lahf
mov
in
out
add
(bad)
(bad)
(bad)
fistp
or
mov
jbe
std
(bad)
jmp
dec
dec
pop
or
xchg
rcr
stc
js
jno
lods
cli
adc
mov
movups
jae
ds
adc
int
inc
and
nop
bound
jb
ret
inc
adc
lds
push
mov
lock
(bad)
dec
sub
pop
pusha
paddd
dec
pop
or
cmps
sbb
push
leave
pop
jnp
mov
(bad)
push
mov
mov
push
pop
inc
push
mov
sub
inc
retf
stos
pop
(bad)
dec
sti
aas
aas
ja
pop
sub
loopne
sar
popa
mov
(bad)
call
in
jnp
iret
fwait
jbe
xor
repz
movs
mov
mov
jg
loopne
aam
(bad)
dec
hlt
scas
rol
and
imul
sbb
(bad)
push
mov
cmp
outs
fidiv
hlt
mov
mov
imul
xlat
jle
mov
xchg
test
add
daa
mov
lods
mov
(bad)
mov
loop
mov
lock
add
fcom
adc
call
or
out
daa
pop
push
out
loop
mov
jl
mov
hlt
sbb
pop
(bad)
xchg
cmp
add
stos
cmps
cmps
xchg
jg
cmp
xchg
lea
lahf
mov
add
jg
cmc
enter
hlt
(bad)
(bad)
jmp
sub
into
jo
mov
push
jg
push
icebp
mov
mov
adc
hlt
call
rol
mul
clc
clc
(bad)
out
and
pop
mov
mov
cwde
inc
jge
(bad)
(bad)
jmp
sbb
sub
stos
mov
(bad)
push
out
fwait
cmp
xchg
jecxz
cmp
pop
dec
pop
(bad)
(bad)
(bad)
call
int
inc
mov
into
push
(bad)
outs
adc
fcomi
xlat
fwait
dec
pop
xor
(bad)
das
in
pop
(bad)
mov
daa
xor
mov
popf
cmp
cmc
imul
inc
(bad)
(bad)
(bad)
dec
mov
iret
fst
ins
cdq
cld
or
pop
sub
aam
daa
fmul
pop
out
test
xchg
or
push
(bad)
(bad)
(bad)
mov
cmp
je
jno
xor
test
imul
xor
adc
ja
(bad)
(bad)
(bad)
inc
pushf
pushf
sbb
add
push
dec
(bad)
jns
cld
push
xchg
xor
cdq
jmp
ret
jl
stc
push
scas
(bad)
nop
pop
adc
mov
cmp
cmps
fsubr
(bad)
jmp
out
popf
test
adc
mov
(bad)
mov
xchg
(bad)
(bad)
call
repz
pop
cs
cmps
xchg
xor
sbb
mov
mov
aaa
add
mov
add
jg
js
int
jl
dec
xor
pop
shr
mov
adc
(bad)
(bad)
inc
jecxz
punpckhbw
xchg
mov
mov
mov
or
push
mov
jbe
sets
ja
out
js
sbb
push
or
and
jb
(bad)
(bad)
(bad)
inc
out
outs
dec
jmp
aaa
pop
ss
sbb
icebp
adc
mov
jne
les
ja
fwait
test
(bad)
jmp
dec
mul
add
and
jle
mov
in
imul
adc
cmps
movs
cmp
sti
jo
mov
(bad)
jg
call
cmp
neg
dec
ss
and
pop
clc
(bad)
call
rcl
mov
out
mov
push
not
pop
adc
(bad)
call
pop
or
cmp
pop
or
and
inc
xchg
sbb
aad
sub
call
loopne
cmp
frstor
jb
sti
mov
or
xor
inc
call
jg
ja
push
jns
retf
inc
lea
int3
mov
push
imul
(bad)
(bad)
(bad)
cmp
and
push
mov
aad
xor
sbb
mov
in
cwde
mov
in
or
xor
mov
sub
jg
fwait
rcr
push
push
cmp
in
jae
out
xchg
in
xchg
sbb
mov
mov
inc
and
mov
(bad)
(bad)
(bad)
jmp
jmp
dec
stc
movs
mov
shl
dec
in
in
mov
mov
loopne
or
lds
dec
sbb
test
cmp
dec
sub
mov
(bad)
push
dec
xor
lea
mov
ffreep
ror
adc
adc
xchg
sar
pop
in
sbb
(bad)
inc
(bad)
xchg
sar
out
mov
(bad)
mov
mov
jnp
push
sbb
cmp
sbb
(bad)
xchg
test
int
and
icebp
je
out
inc
sub
stc
out
xchg
sbb
cmp
or
adc
mov
sub
test
(bad)
(bad)
(bad)
jg
aaa
shr
xchg
cmp
fdivr
inc
adc
imul
mov
rcl
imul
jne
out
mov
jmp
sbb
lods
fwait
aad
adc
pop
push
and
(bad)
mov
fxam
mov
movs
adc
ins
dec
jne
fsub
out
fwait
inc
jmp
(bad)
xor
mov
inc
jecxz
(bad)
(bad)
call
sbb
iret
iret
dec
pop
adc
rol
push
call
outs
adc
les
ins
sahf
inc
out
mov
mov
aam
jge
pop
push
(bad)
(bad)
jg
aam
xor
inc
inc
out
movs
loope
popf
int
dec
or
dec
rep
aaa
std
dec
adc
ffree
inc
pop
push
jl
xchg
push
call
std
div
into
inc
push
pop
sbb
out
ret
push
and
or
xor
xchg
(bad)
clc
(bad)
(bad)
call
data16
cmp
lds
push
test
data16
enter
retf
idiv
inc
mov
lock
adc
xchg
es
push
mov
sub
pop
movs
mov
sub
scas
(bad)
aaa
sub
int3
aad
sub
pop
daa
fprem
(bad)
(bad)
push
iret
and
ficomp
mov
inc
cmp
out
(bad)
nop
aad
pop
dec
hlt
(bad)
jmp
jge
inc
mov
(bad)
cmp
fwait
push
pop
xchg
and
mov
call
jmp
adc
xchg
mov
fcom
pop
mov
cmc
inc
xlat
add
retf
mov
pop
test
xor
sbb
(bad)
(bad)
jmp
ret
shr
daa
push
adc
nop
xor
mov
sti
iret
or
das
and
(bad)
(bad)
inc
(bad)
adc
icebp
sub
adc
mov
mov
ins
fsubr
xlat
pop
fld
loop
xchg
(bad)
jmp
xchg
mov
or
or
mov
(bad)
popf
loopne
mov
push
bnd
mov
jg
or
fld
ret
xchg
repz
mov
push
std
jmp
sbb
(bad)
fidiv
into
cmp
cdq
mov
loopne
adc
mov
ror
mov
sbb
das
push
in
cdq
fwait
ins
xor
sbb
mov
add
adc
fs
(bad)
(bad)
call
sub
xchg
fmulp
sahf
dec
pushw
sub
jb
cmc
loope
ins
pusha
shl
(bad)
mov
dec
mov
shl
loopne
sbb
out
retf
movs
lahf
dec
dec
jb
lock
dec
jae
loop
in
fldenv
mov
push
mov
inc
(bad)
(bad)
(bad)
call
mov
inc
test
add
movs
mov
push
outs
or
mov
fisub
(bad)
(bad)
(bad)
call
or
add
mov
xor
mov
pop
mov
lods
gs
(bad)
(bad)
push
cmp
mov
sahf
ins
push
mov
or
mov
sub
fsubr
sbb
or
cwde
loope
es
test
mov
and
(bad)
xor
xor
fisub
jne
ret
mov
xchg
ror
xchg
enter
popf
es
fst
fcom
xor
jae
lods
dec
ss
(bad)
(bad)
(bad)
(bad)
(bad)
adc
ficomp
not
dec
inc
popa
cmp
sbb
xchg
(bad)
out
(bad)
(bad)
(bad)
push
sub
loop
adc
or
loope
js
push
ds
bound
push
gs
(bad)
(bad)
(bad)
fld
add
mov
xchg
add
mov
mov
sub
hlt
lods
movs
inc
jmp
(bad)
call
cld
push
repnz
popa
pushf
jbe
pop
adc
ss
push
inc
or
ret
sti
ins
adc
div
div
popf
ret
ja
test
jmp
in
jl
xor
xchg
mov
jnp
mov
nop
leave
xchg
imul
fidiv
jno
sbb
lods
pop
adc
sbb
xchg
xor
jmp
and
dec
sbb
(bad)
mov
xor
mov
retf
push
xor
jno
cs
dec
inc
sub
(bad)
(bad)
jg
xor
sbb
lods
(bad)
xchg
shl
mov
inc
(bad)
(bad)
jg
mov
adc
sbb
jb
adc
jbe
shl
jp
test
adc
leave
test
add
xor
jnp
(bad)
call
leave
pop
adc
pop
pop
outs
sub
hlt
mov
sbb
outs
inc
or
push
jae
out
(bad)
(bad)
call
dec
adc
or
mov
cmp
xor
mov
ss
hlt
(bad)
mov
mov
in
mov
fiadd
jmp
mov
mov
pop
popa
aam
jns
in
or
mov
(bad)
(bad)
frstor
lds
pop
enter
pop
xchg
aad
adc
sbb
or
mov
pop
adc
inc
pop
cdq
adc
jnp
jge
pop
and
jle
push
data16
xor
lods
sar
out
retf
xor
mov
push
mov
(bad)
(bad)
inc
cmc
mov
sub
push
hlt
push
cwde
imul
leave
push
daa
movs
adc
ins
fwait
add
push
ins
and
int
test
lods
nop
lods
and
xchg
push
leave
xchg
pop
sbb
xor
cmp
out
(bad)
(bad)
call
and
leave
mov
je
adc
and
test
lods
dec
ds
repz
sar
(bad)
(bad)
(bad)
fadd
inc
dec
push
repz
dec
rol
repnz
push
and
mov
push
test
aad
jl
mov
(bad)
(bad)
(bad)
inc
and
lods
sti
mov
sbb
add
mov
cdq
dec
cli
repnz
mov
sahf
addr16
jne
pusha
add
lods
call
mov
call
test
leave
(bad)
cdq
dec
mov
push
in
add
cmp
mov
pop
sar
(bad)
push
mov
push
mov
inc
push
ret
cs
dec
scas
xor
pop
call
jmp
inc
lds
fcmovb
gs
ret
sbb
(bad)
mov
jge
xlat
sahf
xor
ss
xchg
outs
fwait
es
aaa
push
retf
test
push
pop
call
cli
outs
hlt
fimul
and
inc
rol
xor
dec
sub
ror
imul
mov
and
push
shr
dec
pop
xor
adc
pop
int3
dec
(bad)
mov
stos
push
mov
in
fdivr
ret
mov
cmps
push
inc
pop
add
xchg
ins
sub
les
data16
sbb
sub
jae
retf
push
ins
sub
sub
(bad)
(bad)
(bad)
(bad)
fmul
xchg
add
adc
sahf
mov
sti
inc
in
inc
sub
jecxz
pusha
adc
jg
(bad)
jmp
out
pop
inc
jno
rcl
xchg
outs
sbb
cli
icebp
add
(bad)
in
loope
mov
jmp
mov
cs
xlat
jmp
mov
xor
shl
jl
jmp
add
mov
pop
fs
mov
mov
stos
jl
imul
mov
jno
shr
pop
pop
ins
icebp
in
add
dec
out
xor
add
call
test
(bad)
(bad)
push
mov
jnp
mov
in
or
pop
and
aaa
cmps
retf
xchg
(bad)
(bad)
push
sbb
dec
lock
inc
jbe
mov
pop
loopne
div
pop
xlat
dec
test
shl
jns
(bad)
jg
inc
imul
push
jge
pop
jl
cmp
outs
jecxz
or
mov
sbb
(bad)
scas
gs
pop
push
xchg
jp
push
sub
(bad)
(bad)
(bad)
mov
pop
imul
int3
xor
test
pop
pusha
push
push
mov
inc
xlat
mov
dec
idiv
(bad)
jg
mov
cwde
ins
(bad)
xor
out
mov
jge
push
cmc
push
(bad)
js
or
movs
arpl
(bad)
aad
ror
in
(bad)
(bad)
(bad)
push
mov
mov
ins
fild
movs
ret
ja
imul
fstp
or
dec
pop
sar
(bad)
(bad)
(bad)
js
popf
fcmovb
xchg
push
or
sar
pop
sti
ficomp
ins
arpl
retf
clc
enter
fidivr
adc
imul
add
sti
or
sbb
push
(bad)
sbb
(bad)
(bad)
jmp
inc
lock
mov
xor
mov
mov
dec
and
retf
push
sbb
sbb
(bad)
jmp
clc
lahf
dec
jp
ror
dec
adc
inc
cmp
fldenv
ror
lock
jmp
les
cmps
jl
rcl
mov
(bad)
mov
sub
sbb
retf
jb
dec
inc
sub
fsub
jmp
(bad)
(bad)
(bad)
push
mov
xor
mov
dec
or
xor
stos
and
ja
daa
dec
fsubr
jle
or
into
(bad)
jge
and
lds
inc
jge
mov
or
pop
sub
int3
scas
mov
xor
or
call
push
or
lods
pop
dec
or
dec
movs
sahf
jp
sub
(bad)
xchg
int
pop
push
push
repz
cmp
(bad)
dec
daa
or
out
add
jbe
mov
push
pop
out
dec
(bad)
(bad)
(bad)
jmp
mov
cvttps2pi
jle
inc
push
fadd
mov
addr16
aam
pop
lock
dec
or
int3
xchg
push
push
push
lock
xchg
shr
shr
(bad)
call
xchg
add
scas
xor
add
test
inc
cmp
and
in
sub
fidiv
push
and
(bad)
dec
pusha
xchg
push
jle
inc
xchg
jge
push
(bad)
(bad)
mov
test
je
add
nop
xchg
mov
push
fs
(bad)
(bad)
(bad)
jle
out
inc
loopne
pop
mov
retf
sbb
cs
dec
lds
popa
mov
add
pushf
cmps
xchg
inc
(bad)
loope
dec
test
les
aam
std
pop
movs
dec
cmp
(bad)
push
jmp
mov
jmpw
mov
mov
loopne
in
mov
lock
sub
les
xor
ret
call
arpl
(bad)
inc
cs
jl
std
sub
shr
pop
inc
jbe
int3
and
jo
ins
stos
arpl
retf
sbb
mov
or
add
(bad)
(bad)
call
or
vmovq
fistp
cmp
cmp
call
cld
and
repz
mov
(bad)
(bad)
cmp
fistp
rcr
sahf
out
push
inc
(bad)
and
lahf
lea
neg
nop
imul
dec
lock
test
outs
push
jg
dec
mov
dec
jmp
call
lods
jne
and
inc
dec
retf
cdq
aaa
sub
call
inc
ins
push
sub
jg
mov
les
enter
push
xor
dec
mov
cmp
daa
rol
pusha
push
or
push
cmp
leave
mov
dec
pop
into
not
push
push
jp
pop
repz
(bad)
inc
fcomp
aam
imul
or
dec
sar
jecxz
pop
or
test
inc
adc
loope
jo
jb
jns
cmp
repnz
sub
(bad)
(bad)
(bad)
jmp
or
sub
xor
into
xor
aad
lods
push
push
dec
xchg
cs
push
pushf
daa
sub
mov
jne
(bad)
(bad)
movs
bound
cli
stos
push
gs
clc
test
sbb
adc
or
(bad)
fisttp
retf
in
mov
sbb
mov
(bad)
fisubr
fs
test
int3
push
in
pop
popa
cmp
enter
push
push
and
mov
add
xor
jecxz
jbe
jmp
stos
rol
(bad)
xchg
mov
pop
lea
dec
or
mov
lds
shl
xor
xchg
cld
inc
je
pop
(bad)
(bad)
jmp
popa
cwde
inc
ss
cmp
add
or
or
(bad)
(bad)
(bad)
dec
cmps
add
mov
scas
dec
xchg
repz
jmp
cld
sbb
adc
out
(bad)
(bad)
(bad)
push
stos
lahf
arpl
xor
aad
js
out
push
or
cmp
inc
dec
scas
xor
sbb
fist
or
(bad)
(bad)
(bad)
jmp
xchg
mov
xlat
cmc
xchg
xor
sbb
leave
enter
inc
jmp
xchg
clc
(bad)
mov
loope
pushf
inc
iret
adc
(bad)
(bad)
(bad)
call
movs
in
xlat
dec
addr16
lahf
xchg
xchg
movs
addr16
je
dec
test
push
jecxz
(bad)
cmc
ss
(bad)
jg
mov
movs
and
icebp
icebp
xor
in
daa
ins
movs
(bad)
icebp
ss
mov
mov
fimul
dec
inc
or
adc
inc
gs
fs
dec
in
lods
es
and
aam
push
push
pop
int
call
cmps
push
ja
jecxz
scas
ja
or
nop
jle
(bad)
(bad)
call
mov
mov
clc
push
gs
shr
pop
sub
mov
dec
loopne
sbb
fist
sbb
ret
std
stos
jno
(bad)
(bad)
(bad)
(bad)
call
bound
lds
cmp
mov
and
mov
mov
ja
or
sbb
repnz
dec
addr16
int3
push
lock
sbb
rcr
aas
adc
ins
cmps
call
imul
out
sbb
mov
test
(bad)
(bad)
fnstenv
lahf
sub
test
clflush
jns
aaa
xor
inc
into
ja
call
ret
mov
enter
and
test
arpl
dec
sub
(bad)
call
sbb
mov
mov
scas
adc
or
dec
inc
cmp
in
adc
ret
push
std
jmp
dec
fdiv
inc
fnstenv
cmp
call
mov
(bad)
(bad)
(bad)
jg
or
mov
xchg
retf
mov
sar
adc
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
popa
outs
test
inc
test
and
fisubr
test
xchg
pop
lods
pop
(bad)
jmp
xor
rol
cmp
repnz
mov
imul
push
(bad)
(bad)
(bad)
jg
cmc
pushf
xchg
sbb
test
lods
movs
fimul
fld
int3
sbb
inc
(bad)
(bad)
jmp
pop
add
jecxz
mov
dec
fstp
or
mov
(bad)
(bad)
jmp
mov
add
lock
inc
gs
aam
retf
fstp
clc
(bad)
(bad)
inc
dec
and
push
cmc
sbb
add
adc
(bad)
(bad)
jmp
imul
mov
call
cdq
or
(bad)
(bad)
fcomp
(bad)
and
xchg
data16
imul
out
xchg
adc
out
(bad)
(bad)
(bad)
call
arpl
or
int3
mov
dec
stc
in
lea
mov
das
sbb
dec
adc
call
int
push
ss
sub
dec
into
add
retf
int3
in
jmp
gs
add
fcmovbe
mov
cmp
ins
adc
ret
(bad)
jmp
push
and
lods
xchg
ror
pushf
or
mov
nop
jmp
cmps
js
push
aad
mov
mov
cs
cs
call
cld
ds
mov
jmp
and
retf
in
dec
je
fistp
(bad)
push
(bad)
into
les
xor
inc
leave
jns
(bad)
mov
sub
test
cs
or
jmp
imul
(bad)
xchg
inc
pop
or
imul
(bad)
(bad)
call
retf
outs
add
jle
pusha
shl
mov
and
mov
fcom
arpl
test
std
fs
(bad)
push
mov
jo
icebp
jo
hlt
pop
repnz
test
mov
(bad)
jg
fild
xchg
(bad)
pop
jg
push
(bad)
adc
jg
call
(bad)
mov
mov
lock
bound
movs
ins
cmp
(bad)
(bad)
cmp
popa
icebp
adc
mov
sub
push
pop
push
neg
adc
iret
mov
call
sbb
scas
xchg
mov
cmp
mov
push
shr
std
push
sbb
jecxz
mov
dec
in
xchg
pop
(bad)
pushf
adc
mov
mov
add
mov
in
mov
mov
inc
push
pop
or
mov
(bad)
sub
test
fcmovb
dec
sbb
mul
daa
mov
rol
dec
cmp
ss
hlt
fsub
sti
es
and
test
test
ins
xchg
repz
mov
je
cwde
push
mov
test
(bad)
(bad)
(bad)
cmp
mov
mov
popa
push
sub
das
dec
aas
fsubr
cmc
jg
jg
xchg
repnz
xchg
mov
pop
leave
cmps
mov
mov
inc
xor
jge
test
jl
mov
mov
push
(bad)
(bad)
(bad)
push
push
inc
xlat
movs
fstp
cli
popf
sub
iret
jle
(bad)
enter
push
or
ins
test
sub
(bad)
(bad)
fld
cli
adc
stc
adc
cmp
loop
xlat
lods
xchg
cmp
call
popf
add
stos
lods
push
leave
jo
sub
std
pushf
push
cmp
xor
cmp
fcomip
and
push
addr16
pop
test
or
shl
ins
push
fdivrp
(bad)
jmp
sbb
jo
xchg
fs
or
into
in
mov
push
mov
ficomp
mov
cli
(bad)
(bad)
in
jmp
movs
and
xor
or
cwde
fwait
pop
pop
cmp
push
jp
loopne
(bad)
(bad)
(bad)
inc
fild
call
pop
test
lods
cmp
sar
mov
(bad)
(bad)
push
jmp
in
cmp
mov
sbb
xor
mov
scas
mov
movs
call
mov
test
jl
sub
mov
mov
ins
inc
xor
fdivr
inc
push
enter
icebp
mov
fcom
(bad)
out
sbb
(bad)
(bad)
(bad)
(bad)
mov
test
push
or
std
ret
daa
shl
sbb
mov
das
(bad)
(bad)
(bad)
(bad)
ficom
dec
jmp
mov
cmp
mov
push
jecxz
pusha
inc
loopne
adc
and
test
mov
inc
mov
cmp
rcl
xor
lahf
pusha
(bad)
movs
test
out
outs
cmp
lds
and
mov
mov
jne
ficom
mov
add
aad
rcr
(bad)
outs
das
xchg
add
(bad)
push
pop
cmp
fstp
ss
les
mov
(bad)
(bad)
jg
ins
xor
adc
fsubr
adc
in
sbb
and
and
cmp
mov
popf
jo
(bad)
(bad)
push
dec
adc
inc
daa
jmp
loopne
inc
cmp
movs
mov
push
xor
les
pop
and
stc
(bad)
loopne
call
xlat
test
icebp
in
xor
xlat
(bad)
inc
mov
inc
out
pop
and
jmp
pop
sub
ret
xor
(bad)
(bad)
call
or
loope
loop
cmp
pop
fistp
push
add
jae
in
jecxz
add
scas
xor
jecxz
enter
clc
aaa
push
clc
(bad)
out
fs
loopne
(bad)
scas
aaa
push
pusha
mov
sub
mov
test
call
pop
mov
loope
push
jmp
in
mov
dec
dec
(bad)
pop
stos
addr16
out
mov
push
cld
das
xor
loop
sub
ins
jno
call
(bad)
call
fdivr
pop
push
mov
pop
sub
cmps
lea
icebp
iret
stos
xchg
mov
(bad)
mov
push
and
retf
jle
xor
cld
shr
(bad)
xchg
jg
(bad)
call
mov
mov
mov
aaa
jbe
test
sbb
js
push
sub
call
push
in
aam
adc
aad
bound
mov
loopne
clc
(bad)
(bad)
jge
mov
mov
addr16
in
enter
and
test
cmc
loopne
icebp
sub
(bad)
(bad)
(bad)
jmp
iret
or
out
mov
jecxz
bound
call
repz
call
(bad)
(bad)
inc
or
jne
sbb
mov
xrstors
mov
dec
lock
hlt
in
js
sub
(bad)
mov
mov
cld
mov
pop
ror
outs
jge
or
in
(bad)
call
sbb
in
shl
inc
das
leave
test
add
push
hlt
pop
mov
pushf
imul
push
adc
dec
sub
fiadd
hlt
ret
iret
int3
pusha
cmp
bound
lock
push
(bad)
mov
mov
lods
outs
dec
adc
stos
nop
xchg
icebp
data16
call
xor
adc
sub
sbb
adc
push
aam
ins
mov
or
(bad)
(bad)
(bad)
fsubr
and
sbb
and
inc
cld
jae
and
xor
mov
fiadd
dec
in
into
(bad)
(bad)
(bad)
(bad)
mov
stos
jns
pop
(bad)
adc
pop
pop
adc
loop
imul
jns
cwde
dec
inc
clc
sbb
int3
or
fild
retf
(bad)
(bad)
dec
addr16
push
cmp
sti
inc
arpl
or
les
pop
sub
inc
adc
(bad)
(bad)
call
xchg
pusha
fidiv
cli
lods
sahf
push
pop
call
cmp
in
push
push
push
clc
fsubr
clc
stos
(bad)
out
popa
mov
xchg
frstor
jmp
sar
mov
xchg
pop
movs
out
xor
ret
push
call
push
mov
sbb
icebp
(bad)
cmp
outs
add
push
stc
(bad)
pusha
sub
(bad)
jg
fwait
aam
mov
or
in
iret
inc
fdivr
jb
int
int3
loopne
(bad)
(bad)
dec
jmp
xchg
mov
xchg
(bad)
popf
inc
and
(bad)
loopne
ds
retf
(bad)
(bad)
(bad)
jmp
and
sub
shl
sub
stos
cmps
cmp
bound
jl
(bad)
(bad)
(bad)
(bad)
fstp
jmp
stos
xor
fwait
jmp
xor
cs
push
sbb
dec
icebp
std
rcl
mov
xor
jnp
or
(bad)
(bad)
(bad)
mov
and
dec
push
call
jno
lahf
xor
pop
jmp
das
clc
(bad)
xchg
xchg
dec
adc
mov
mov
add
in
adc
xchg
cmp
sbb
jmp
mov
adc
popa
mov
ja
(bad)
(bad)
(bad)
call
out
xchg
cmp
fwait
enter
fwait
or
and
call
sti
mov
popf
stc
push
mov
ror
cmc
xor
daa
out
inc
stc
fild
jg
pop
xor
clc
mov
add
ret
outs
push
push
mov
add
(bad)
(bad)
jmp
and
aas
enter
jle
sbb
stos
push
or
(bad)
jmp
sbb
adc
and
arpl
pop
sti
mov
dec
int
xlat
jmp
(bad)
enter
(bad)
cmp
test
hlt
adc
jl
int3
(bad)
(bad)
(bad)
jg
jae
pusha
mov
xchg
test
cs
mov
jmp
inc
sub
push
mov
adc
add
cmp
sub
ret
push
js
stos
aas
pop
ror
enter
jbe
adc
imul
jne
movs
(bad)
retf
cmp
(bad)
(bad)
push
adc
movs
push
xchg
shl
sbb
das
int
add
clc
rcl
ja
repz
(bad)
(bad)
(bad)
(bad)
aas
pop
cmp
cdq
dec
out
push
adc
call
icebp
ficomp
mov
xchg
jnp
(bad)
jg
(bad)
mov
mov
popa
cmps
repnz
mov
mov
pop
xlat
jae
in
sbb
(bad)
(bad)
call
xlat
hlt
sbb
dec
dec
repnz
or
enter
ret
mov
and
add
test
mov
cmps
jne
sub
data16
or
mov
jecxz
mov
popa
inc
cld
pop
adc
imul
jne
nop
call
jno
(bad)
ret
jle
bound
jmp
scas
push
add
cmps
mov
mov
pop
mov
pop
cmc
test
inc
(bad)
(bad)
call
out
xor
mov
iret
data16
sbb
pusha
out
mov
jne
cmp
pop
(bad)
(bad)
(bad)
dec
bound
hlt
stos
das
btr
(bad)
outs
dec
and
dec
mov
lods
pushf
pop
cmp
rcr
mov
int
inc
es
(bad)
jmp
fist
mov
xor
and
(bad)
(bad)
(bad)
jmp
shl
pop
test
and
sbb
fisubr
xor
std
cmp
push
inc
sub
inc
je
imul
mov
mov
cli
iret
in
(bad)
xor
(bad)
movs
(bad)
jg
test
test
pop
leave
aas
pop
cmp
mov
add
(bad)
(bad)
call
push
xor
jmp
mov
mov
hlt
fwait
mov
sub
lahf
(bad)
(bad)
jg
add
dec
stos
jb
sbb
mov
add
int
pop
or
mov
call
out
lahf
pushaw
pop
iret
jno
dec
pop
sbb
enter
pusha
and
(bad)
dec
repz
mov
adc
sar
xchg
sub
stos
ret
aas
loope
jbe
mov
(bad)
cmp
jmp
jecxz
push
jecxz
imul
enter
(bad)
(bad)
(bad)
mov
pop
push
js
pop
pop
cs
sar
outs
mov
popa
mov
jmp
mov
in
(bad)
mov
pop
xor
jne
jecxz
xor
repnz
fsubr
jge
jmp
(bad)
stc
pop
or
xchg
mov
xor
sbb
mov
mov
std
(bad)
(bad)
(bad)
cld
(bad)
adc
dec
cli
sub
stos
scas
or
out
rsqrtps
sahf
xor
lds
clc
jmp
mov
(bad)
pop
out
or
into
(bad)
cli
mov
jne
push
fcmovbe
pop
mov
jmp
jl
add
mov
pop
inc
and
and
cmp
sub
jg
call
sbb
xchg
movs
cdq
xchg
fild
cmp
cmc
add
(bad)
xor
popf
mul
fild
mov
scas
out
sub
push
leave
pop
fucomp
cli
jmp
and
mov
lods
jae
add
mov
(bad)
(bad)
cmp
pop
loop
sahf
and
imul
add
mov
jg
test
ins
sbb
jbe
sbb
cld
(bad)
dec
dec
push
add
imul
cmp
push
data16
cmp
push
mov
jnp
clc
pushf
bound
mov
cs
dec
and
ds
dec
xor
sar
add
cmp
out
(bad)
(bad)
(bad)
inc
pop
loop
popa
outs
mov
call
sbb
in
mov
cli
mov
and
stos
and
sar
push
sub
pushf
icebp
inc
cmps
movs
jg
adc
out
movs
xchg
pop
sub
lods
(bad)
call
sbb
cmps
mov
loop
pushf
cs
add
or
sub
hlt
call
(bad)
jge
xor
inc
mov
sahf
mov
(bad)
fadd
das
loopne
pop
inc
xchg
and
ins
call
call
bound
(bad)
(bad)
call
sub
or
pop
adc
call
call
cli
out
cli
call
ds
stos
das
sub
inc
pop
scas
push
gs
call
(bad)
(bad)
out
cmp
ret
inc
xlat
pushf
xchg
xor
jns
in
jg
(bad)
icebp
mov
ja
xor
push
jne
push
lods
popw
scas
stos
jbe
xor
jg
lock
dec
sub
fsub
inc
das
loop
lock
neg
(bad)
(bad)
jmp
or
test
xchg
inc
and
push
shl
push
aad
lea
fsub
loopne
(bad)
fild
repnz
and
outs
adc
fist
aad
sahf
stos
imul
(bad)
(bad)
loopne
dec
push
in
cmp
pop
retf
pop
push
(bad)
sub
rcr
test
and
mov
jg
mov
repnz
ins
and
pop
int
or
cli
loop
xchg
(bad)
(bad)
(bad)
jmp
jp
cs
stos
fdiv
jns
mov
pushf
ja
pop
fist
(bad)
(bad)
(bad)
jmp
imul
ret
loopne
dec
sbb
loope
dec
mov
rcr
sbb
aad
pop
mov
jne
xor
(bad)
dec
call
pop
jnp
mov
pop
in
(bad)
std
mov
(bad)
push
retf
(bad)
stos
scas
retf
pop
mov
cli
ror
xchg
jmp
cmp
xchg
add
shl
addr16
cmp
pop
(bad)
mov
mov
pop
loope
push
cs
xchg
ds
ds
fwait
(bad)
(bad)
jmp
iret
mov
movs
movs
call
loop
or
mov
sbb
dec
lock
ins
out
mov
repz
mov
fdivp
sbb
push
mov
sub
xchg
xlat
dec
or
pop
dec
jmp
cld
movs
lods
mov
jge
inc
loop
(bad)
(bad)
push
sbb
inc
cs
les
pop
icebp
and
clc
sar
(bad)
inc
push
dec
inc
sbb
aas
jle
mov
jl
or
mov
dec
cs
lods
int
(bad)
(bad)
call
xchg
push
jb
push
add
mov
enter
ins
sub
or
sar
(bad)
(bad)
push
jne
gs
(bad)
imul
(bad)
sub
sub
push
out
(bad)
call
and
sub
js
test
pop
and
jge
repnz
das
(bad)
(bad)
(bad)
push
out
bound
cdq
xor
cmc
jmp
pop
cmp
xchg
adc
xor
sbb
(bad)
jg
hlt
sub
mov
out
lds
test
fwait
inc
sbb
mov
lahf
push
fidivr
pop
leave
mov
inc
adc
aad
cdq
sub
cmp
dec
add
(bad)
(bad)
(bad)
(bad)
clc
lods
imul
outs
call
push
daa
iret
inc
das
mov
jecxz
mov
fucomi
loop
xor
call
ss
xabort
shr
mov
mov
and
movs
mov
and
or
(bad)
mov
pop
in
rol
sub
mov
xchg
push
rcr
fmul
rcl
ficom
les
dec
sti
push
pusha
bound
dec
std
cdq
xchg
pop
push
push
mov
sbb
sbb
pop
jae
pop
cmp
jne
dec
aad
aam
cmp
lock
sbb
mov
(bad)
(bad)
(bad)
push
lea
das
fild
ins
imul
(bad)
ds
adc
scas
inc
add
stc
std
xchg
dec
cld
scas
test
jmp
sub
sub
push
jecxz
sub
lods
xchg
pop
(bad)
(bad)
call
xor
mov
mov
push
jns
jp
rcr
jg
and
pop
shl
leave
inc
iret
sub
mov
sti
aaa
sub
enter
icebp
ror
sahf
sbb
movs
cmp
(bad)
cmp
loop
xor
mov
push
aaa
dec
push
retf
div
call
xchg
(bad)
fcomp
mov
mov
int3
aaa
sbb
jmp
dec
xor
(bad)
(bad)
jg
in
xchg
push
mov
ror
push
mov
jbe
pop
xor
(bad)
(bad)
(bad)
dec
xor
addr16
pop
dec
xchg
sbb
jno
sbb
or
cwde
ins
fsubrp
mov
xchg
and
push
enter
jle
or
lods
mov
imul
mov
int3
call
jmp
call
mov
and
and
mov
dec
int3
or
jne
(bad)
(bad)
push
mov
dec
cmc
(bad)
push
sub
ins
sub
fsub
or
(bad)
call
inc
mov
sbb
sahf
push
fwait
stos
or
pop
out
jge
push
mov
jmp
push
clc
xchg
pusha
adc
loope
xchg
add
jmp
aas
ss
lods
add
into
cmp
sbb
xchg
sub
mov
call
sar
adc
nop
and
pop
retf
lahf
mov
cld
jmp
imul
ja
mov
pop
xchg
add
inc
pop
mov
mov
(bad)
call
mov
xchg
bound
ret
xor
bound
or
push
das
popf
mov
je
cdq
cwde
sub
xchg
push
mov
bound
mov
inc
mov
sub
add
mov
inc
popf
jp
cmp
ja
mov
mov
jmp
(bad)
pop
pushf
scas
scas
and
xor
push
jmp
je
cli
sbb
mov
mov
call
pop
mov
rol
movs
push
shl
ret
mov
and
inc
stos
test
jmp
pop
push
jmp
or
mov
push
out
call
dec
dec
std
iret
push
shl
xor
jae
std
cmp
(bad)
inc
cmps
fwait
out
inc
xor
mov
jmp
pop
xchg
adc
push
(bad)
(bad)
call
mov
icebp
xchg
mov
loope
cs
jge
pop
inc
sbb
inc
or
addr16
sub
(bad)
(bad)
dec
mov
add
or
jl
or
cmc
mov
fstp
(bad)
xchg
ins
sbb
ffree
(bad)
rcl
dec
xchg
mov
sub
call
pop
(bad)
jo
push
loopne
ret
out
xchg
call
es
mov
bound
add
add
cmp
mov
lds
pop
jns
int
loope
sbb
repz
jns
dec
push
inc
(bad)
(bad)
(bad)
push
std
cdq
movs
imul
fs
add
out
je
pop
in
xchg
dec
out
hlt
(bad)
(bad)
(bad)
(bad)
jmp
int
jp
enter
arpl
cmp
retf
mov
mov
(bad)
(bad)
(bad)
(bad)
cmp
fstp
(bad)
lea
or
push
cmp
in
out
pop
cld
jmp
fstp
lea
inc
out
ja
and
sahf
and
stos
(bad)
(bad)
inc
sub
(bad)
or
stos
rcl
call
ret
(bad)
call
int3
in
ror
movs
ins
inc
add
aam
sub
scas
xor
mov
frstor
rcr
jo
mov
outs
xchg
out
lahf
sahf
sbb
ja
dec
neg
into
mov
repnz
mov
xor
pop
mov
or
loop
xor
sub
repnz
cli
mov
out
sbb
and
adc
add
push
push
jp
sub
mov
mov
xor
cmp
ss
or
xor
or
xchg
mov
mov
push
sbb
push
or
std
mov
mov
ret
mov
add
out
cmp
add
mov
pop
(bad)
(bad)
jmp
lock
int3
sub
loop
pop
cmc
loop
iret
scas
enter
fbld
ins
pushf
addr16
call
hlt
add
nop
push
push
cmps
push
jmp
add
das
inc
sti
push
fcmovb
out
rol
jno
test
mov
(bad)
(bad)
(bad)
(bad)
jle
inc
push
and
(bad)
sub
jae
inc
sub
stc
bound
call
adc
test
(bad)
(bad)
inc
jecxz
fisub
enter
jge
out
clc
in
sbb
push
pavgw
mov
ficomp
jg
adc
mov
xor
mov
mov
or
cmp
dec
kmovb
or
mov
jle
test
hlt
pop
(bad)
inc
sub
jmp
mov
mov
(bad)
int3
cmps
adc
js
xchg
(bad)
call
in
pushf
test
jl
shr
push
movs
mov
push
jge
(bad)
inc
(bad)
std
mov
mov
add
pop
daa
sahf
fild
(bad)
push
mov
jae
icebp
stos
ds
xchg
mov
mov
mov
dec
(bad)
call
jmp
cmp
xchg
xchg
mov
and
push
dec
pop
ss
cli
or
je
loop
ins
(bad)
(bad)
(bad)
jmp
xor
cld
ror
push
dec
ins
sub
test
mov
daa
fist
(bad)
(bad)
inc
iret
mov
fadd
mov
pop
ins
add
(bad)
pop
dec
fbld
jne
movs
push
pop
daa
in
(bad)
mov
in
fsubrp
add
sbb
jle
cmps
jb
push
jp
pop
test
(bad)
(bad)
inc
pop
inc
pop
jmp
add
sub
lods
cmp
push
xchg
jns
inc
repnz
(bad)
inc
mov
mov
or
or
in
xlat
inc
cmp
(bad)
mov
bound
(bad)
ss
arpl
arpl
pop
and
in
jle
mov
test
(bad)
out
test
movs
and
adc
sahf
jecxz
pop
add
repnz
xor
hlt
out
jecxz
dec
and
out
(bad)
(bad)
(bad)
aas
ins
xor
pop
movs
pop
jge
dec
(bad)
nop
int3
pop
mov
sbb
stos
pop
and
aaa
repnz
add
xor
push
aad
hlt
and
inc
idiv
jg
sti
stos
stos
jae
retf
(bad)
push
(bad)
pop
call
or
lea
dec
in
cdq
xor
inc
pop
cwde
cmps
mov
jmp
addr16
fs
arpl
(bad)
mov
mov
push
shl
pop
js
adc
test
ret
out
mov
mov
je
and
imul
push
daa
mov
or
call
outs
arpl
(bad)
(bad)
jmp
cmp
jg
cli
int3
jp
xchg
aas
cmp
mov
and
outs
test
not
(bad)
push
std
or
shl
arpl
stos
fsub
mov
xor
(bad)
(bad)
(bad)
(bad)
jge
adc
jno
call
lahf
in
cmp
(bad)
jl
ds
mov
mov
mov
pmaddwd
(bad)
call
ror
mov
sar
loop
add
ds
(bad)
(bad)
call
fwait
imul
mov
push
push
sub
cmps
jg
mov
(bad)
cld
inc
sbb
mov
sub
mov
and
push
jnp
mov
dec
cld
pop
sub
sbb
arpl
and
adc
cmps
bound
(bad)
jmp
dec
std
add
jno
jb
shl
imul
sub
sbb
mov
pop
icebp
jmp
lods
mov
push
inc
sub
gs
movs
jp
fs
(bad)
(bad)
(bad)
call
test
dec
not
(bad)
and
outs
add
add
add
jg
mov
mov
icebp
cdq
ret
(bad)
(bad)
dec
inc
xchg
pusha
pop
sub
lahf
addr16
iret
xchg
enter
cmp
stos
aaa
std
dec
jle
adc
inc
push
lds
fistp
jbe
pop
ror
dec
fsub
fldenv
stc
push
fld
mov
jmp
or
(bad)
rol
(bad)
jmp
sti
retf
push
lahf
js
movs
lods
xchg
enter
and
jmp
mov
jmp
cmp
pop
mov
in
call
mov
(bad)
(bad)
call
call
sub
rcl
sub
int
dec
or
xchg
sub
mov
and
mov
cmp
mov
cli
inc
fcomp
push
hlt
add
es
(bad)
(bad)
jmp
sbb
mov
dec
enter
out
dec
pusha
in
sahf
xchg
pop
mov
inc
fsincos
mov
sbb
call
mov
outs
pop
cmp
fadd
dec
imul
in
or
(bad)
dec
hlt
sub
pop
popa
jge
adc
mov
lds
inc
mov
cmc
mov
push
cmp
jp
xchg
nop
cmp
test
lock
push
or
rcr
retf
dec
jg
sbb
mov
(bad)
ficomp
inc
rcl
fcomp
in
xchg
push
call
ds
pop
test
sti
xor
lahf
dec
not
shl
mov
add
jnp
mov
adc
adc
(bad)
(bad)
(bad)
jmp
(bad)
ret
mov
mov
mov
test
inc
int3
ja
add
inc
std
sti
out
xchg
mov
stos
(bad)
jmp
inc
ret
fcmovnbe
mov
cmc
call
gs
aas
sbb
xor
(bad)
(bad)
(bad)
inc
and
out
rcr
daa
aaa
sti
adc
dec
sahf
sbb
adc
jne
(bad)
(bad)
(bad)
dec
mov
(bad)
push
std
frstor
mov
adc
fist
sbb
hlt
call
enter
sub
push
aaa
lea
(bad)
outs
xchg
adc
cli
mov
push
push
movs
mov
mov
adc
push
(bad)
push
outs
xrelease
loope
and
adc
fcom
mov
cld
cmp
loop
inc
jmp
xor
xadd
icebp
clc
jne
mov
or
xor
lods
loop
cwde
and
aas
aam
mov
(bad)
(bad)
aas
lock
cld
jl
rcr
in
mov
jl
inc
call
dec
loop
dec
and
xchg
int
loop
data16
sbb
(bad)
call
xchg
das
es
mov
ins
cmp
fwait
retf
cwde
mov
jae
mov
(bad)
jmp
dec
push
lock
adc
jns
push
icebp
xlat
mov
(bad)
(bad)
inc
pop
or
xor
sub
cmp
mov
and
jge
popa
fstp
loopne
(bad)
(bad)
(bad)
dec
or
or
cmp
sahf
mov
fistp
add
xchg
xchg
(bad)
(bad)
call
outs
adc
ins
scas
fucomp
ret
cwde
and
loopne
sahf
or
(bad)
loopne
adc
jnp
(bad)
(bad)
inc
nop
je
xchg
sahf
jge
lahf
cwde
push
scas
jg
popa
push
adc
jmp
js
test
inc
push
push
fcomp
call
and
xor
in
aaa
pop
pop
gs
aad
pop
(bad)
dec
je
xchg
cmp
pop
pop
jecxz
jg
adc
movs
and
loopne
das
cli
call
and
in
xor
ficom
mov
cs
outs
push
mov
(bad)
(bad)
dec
js
movs
inc
xor
out
push
xchg
pop
cld
add
out
add
pop
jae
and
(bad)
push
outs
dec
or
jae
adc
push
icebp
xor
outs
adc
movaps
idiv
ret
and
jecxz
lods
movs
jecxz
pop
dec
xchg
lods
(bad)
jbe
and
(bad)
(bad)
jmp
sahf
or
(bad)
retf
in
or
mov
into
mov
arpl
mov
neg
call
inc
es
add
fmul
dec
or
ins
call
push
adc
mov
dec
dec
std
jmp
push
sbb
dec
push
sbb
add
mov
inc
(bad)
call
dec
mov
retf
and
mov
das
mov
adc
mov
cmc
call
sbb
pop
pop
shr
jne
xor
or
(bad)
(bad)
call
xchg
(bad)
fabs
pop
cmp
sub
mov
call
mov
rcr
(bad)
(bad)
(bad)
call
mov
push
push
aam
xor
icebp
pop
ins
out
sbb
nop
or
xchg
xor
(bad)
call
jmp
test
sub
mov
sahf
add
cs
sbb
inc
cld
cld
inc
xor
cld
test
loope
xor
mov
repz
fimul
pop
mov
mov
or
adc
loopne
fmul
sbb
and
push
fwait
inc
test
(bad)
dec
out
and
mov
lods
repz
mov
hlt
stos
gs
jb
aam
push
jo
outs
cmp
add
std
fisubr
retf
jae
(bad)
out
cli
ins
dec
inc
cmp
(bad)
jno
mov
rcl
mov
std
ins
inc
std
cs
push
popa
(bad)
(bad)
(bad)
inc
call
or
je
sar
inc
xor
cmps
or
(bad)
call
jp
mov
pop
xchg
sbb
call
movs
cmp
aaa
fdivr
(bad)
(bad)
push
jne
aad
or
jno
into
dec
dec
out
jle
sbb
pop
sub
ret
daa
fcomp
call
sub
push
push
xor
sbb
mov
lea
test
add
lahf
ins
dec
icebp
jb
call
dec
fidiv
js
and
push
add
arpl
jmp
sub
aas
pusha
fsubr
cmps
add
ss
mov
cwde
(bad)
(bad)
(bad)
jmp
mov
xchg
pop
push
inc
push
repz
sub
mov
and
add
inc
cmp
cmp
sbb
or
inc
enter
inc
pop
sub
in
and
xchg
jb
cmc
cmp
outs
cmp
retf
cmp
or
scas
mov
(bad)
jmp
or
imul
push
add
fisub
or
jb
mov
mov
adc
js
or
adc
push
hlt
(bad)
(bad)
(bad)
mov
sbb
aad
dec
in
repnz
out
retf
jb
or
push
mov
(bad)
jmp
xor
sub
mov
and
mov
clc
sub
jmp
push
(bad)
call
loopne
push
sub
clc
icebp
xor
xchg
adc
push
mov
cmps
jp
ds
(bad)
(bad)
(bad)
jmp
bnd
sub
movs
sahf
mov
daa
dec
in
aam
mov
movs
test
mov
or
jmp
in
nop
add
mov
pop
jmp
inc
or
(bad)
call
sub
sbb
lock
pop
mov
out
sti
jae
pop
xchg
ins
xchg
mov
shl
add
ret
(bad)
(bad)
(bad)
call
push
or
lahf
push
cmp
jg
dec
sbb
inc
out
movs
(bad)
(bad)
(bad)
dec
mov
cmps
pop
add
mov
aas
xchg
mov
cmc
stos
add
adc
(bad)
(bad)
cmp
dec
jmp
xchg
xor
inc
lahf
inc
inc
(bad)
shl
jb
mov
scas
xor
stos
jae
(bad)
dec
push
fnstenv
adc
lods
add
inc
test
fincstp
(bad)
inc
(bad)
mov
cmp
std
jo
scas
arpl
or
push
in
push
dec
and
call
xor
mov
mov
dec
push
add
xlat
mov
cli
inc
xchg
lods
aam
or
std
ins
imul
mov
jnp
and
cli
enter
(bad)
(bad)
cld
xchg
push
add
mov
or
mov
pop
dec
repnz
xchg
mov
jbe
sbb
(bad)
(bad)
(bad)
(bad)
js
xor
leave
jbe
xchg
xor
sub
jmp
retf
xchg
or
cwde
ja
dec
(bad)
(bad)
(bad)
inc
int
inc
test
popa
in
push
dec
int3
inc
xor
test
add
xchg
mov
setge
ret
sbb
(bad)
(bad)
cmp
push
mov
outs
mov
mov
into
clc
outs
sub
push
repnz
mov
add
adc
mov
push
aam
xchg
dec
inc
cld
cmp
outs
call
loop
adc
push
leave
push
mov
push
popa
xor
fld
lods
repz
or
(bad)
(bad)
(bad)
sti
add
fisttp
sub
xchg
push
or
adc
pushf
adc
jmp
xchg
dec
push
daa
rcl
retf
rcl
and
xchg
ficomp
dec
pop
jmp
mov
jb
movs
jb
push
xchg
(bad)
jbe
push
cmc
std
gs
push
jg
movs
(bad)
jno
xchg
dec
cli
inc
and
in
push
xor
retf
fs
jne
push
cmp
pop
and
lock
cmp
mov
adc
pop
sub
imul
nop
cmp
data16
out
fmul
xor
(bad)
(bad)
(bad)
inc
movs
xor
call
test
ss
test
push
fmul
out
fild
cwde
mov
push
(bad)
inc
push
cmps
ror
mul
lock
in
sbb
push
lock
out
call
push
ja
mov
jo
fidivr
pop
jns
mov
cld
aas
mov
mov
sbb
js
xchg
jnp
add
enter
mov
shr
shl
inc
popa
nop
iret
lock
imul
pop
xchg
mov
ja
arpl
push
(bad)
jmp
aaa
xor
jmp
in
xchg
sbb
sub
dec
push
or
jg
jb
and
sub
cmp
xchg
hlt
sub
or
mov
ror
fbld
fs
imul
in
and
ret
adc
nop
lea
jg
call
mov
daa
push
in
arpl
(bad)
jge
xor
cs
sub
cmp
mov
jp
inc
lahf
sub
dec
or
scas
ja
(bad)
(bad)
jmp
sbb
inc
pop
sbb
daa
mov
outs
arpl
push
mov
cwde
test
(bad)
(bad)
call
pop
loop
cmp
push
pop
ja
push
jecxz
dec
adc
(bad)
pop
and
mov
push
loopne
adc
cmp
add
(bad)
(bad)
jmp
pusha
scas
dec
sahf
in
out
mov
retf
repnz
push
cli
jbe
or
(bad)
scas
xchg
jle
xor
jg
shl
push
retf
ret
add
(bad)
jmp
inc
or
adc
(bad)
test
and
push
sub
push
adc
(bad)
xor
mov
inc
imul
or
xchg
gs
sub
inc
popf
inc
pop
sbb
mov
lds
test
icebp
pop
dec
mov
(bad)
fwait
mov
call
sbb
mov
push
xor
out
out
pop
repz
pop
ret
jl
mov
xchg
pop
cs
ret
outs
push
(bad)
mov
ror
(bad)
(bad)
(bad)
(bad)
mov
aas
pop
cli
mov
cli
clc
(bad)
add
xchg
ds
aam
rcr
dec
mov
(bad)
mov
xor
stos
ins
arpl
fisttp
pop
inc
outs
pop
sbb
mov
jle
fcomip
(bad)
call
sbb
pop
lea
outs
aaa
in
jle
int3
into
shl
xor
(bad)
(bad)
jg
out
jnp
xor
sub
cmp
and
dec
sub
pop
imul
hlt
(bad)
in
cmps
fwait
sbb
jb
ss
(bad)
dec
pop
and
cmp
xor
push
data16
inc
mov
(bad)
out
cwde
xchg
(bad)
(bad)
call
fldl2t
jo
sti
jbe
and
mov
(bad)
push
fimul
inc
xchg
push
aam
inc
push
adc
or
xlat
xchg
jle
jmp
mov
pusha
movs
dec
and
imul
jmp
repz
nop
popf
(bad)
call
adc
add
mov
and
and
call
mov
mov
ds
in
test
push
pop
call
aas
out
test
aad
imul
call
sar
jmp
cli
retf
xchg
sub
leave
or
xor
push
jae
int3
(bad)
das
xchg
hlt
das
js
push
xchg
pop
out
push
shl
and
pop
(bad)
ins
inc
aaa
mov
mov
mov
shl
(bad)
jg
lds
jg
lahf
mov
and
in
push
jbe
fwait
mov
jl
(bad)
(bad)
fbstp
pusha
pop
(bad)
xor
test
aam
push
push
es
inc
jb
(bad)
(bad)
(bad)
inc
mov
in
mov
jne
leave
adc
mov
lods
fmul
(bad)
cld
mov
(bad)
inc
cmp
(bad)
add
js
sub
stc
mov
(bad)
(bad)
(bad)
call
jno
mov
mov
dec
jmp
jmp
inc
nop
inc
inc
adc
add
jmp
sub
add
dec
pop
repnz
jg
js
pmuludq
adc
(bad)
(bad)
call
cmps
je
fbstp
in
into
jp
into
cmp
xor
scas
xchg
out
adc
push
xchg
push
push
adc
(bad)
mov
stos
push
es
xchg
xor
push
push
mov
ret
dec
push
cmp
(bad)
dec
fist
out
into
popa
(bad)
pop
loopne
sti
sub
mov
and
mov
(bad)
dec
call
or
sub
sti
xchg
xchg
loop
je
dec
dec
or
pop
sub
std
fild
outs
jle
hlt
add
or
(bad)
(bad)
(bad)
mov
inc
sbb
icebp
pop
int
dec
sub
jg
cmc
(bad)
mov
ss
xor
xor
pop
and
fstp
test
or
cmp
(bad)
(bad)
jg
sub
sub
scas
(bad)
idiv
mov
xchg
nop
dec
pop
int3
dec
addr16
loope
popa
xor
lock
cli
jmp
push
or
mov
mov
and
call
enter
into
and
fs
(bad)
xchg
push
stos
mov
sar
mov
dec
and
fstp
pop
lahf
test
outs
in
(bad)
jmp
mov
adc
cmps
cmps
mov
push
les
xor
mov
add
fiadd
cld
mov
lods
adc
daa
shl
fs
sahf
xor
scas
(bad)
(bad)
jmp
ss
in
push
aas
adc
jmp
retf
xchg
push
sbb
sbb
clc
(bad)
call
ret
and
test
pushf
mov
push
mov
(bad)
(bad)
(bad)
call
fadd
and
stc
inc
adc
idiv
dec
push
fimul
(bad)
(bad)
fldcw
and
(bad)
(bad)
(bad)
push
xchg
outs
xor
fdivr
shr
push
sub
js
sub
mov
(bad)
(bad)
(bad)
cmp
cdq
xor
in
mov
inc
in
loop
adc
add
mov
adc
xchg
jge
(bad)
fcomip
jmp
fldcw
lods
cwde
sub
mov
sub
movs
lds
push
sbb
sbb
cmp
dec
inc
es
jmp
ins
loop
mov
icebp
and
and
mov
jmp
clc
jmp
jge
inc
out
xor
add
shr
inc
sbb
popa
(bad)
push
std
pop
or
call
add
xor
dec
ja
and
push
sar
(bad)
(bad)
cmp
or
ficom
stc
cmp
fiadd
(bad)
scas
inc
sub
pop
push
(bad)
(bad)
dec
cmp
rcr
and
outs
jno
cmp
shl
jbe
(bad)
(bad)
fst
push
in
in
add
mov
fld
add
push
lahf
xchg
fwait
dec
sti
sbb
xchg
xlat
test
out
adc
movs
adc
(bad)
(bad)
dec
inc
inc
aaa
dec
div
pop
lds
retf
jge
test
(bad)
cld
mov
xor
mov
test
pop
or
nop
dec
cs
jae
(bad)
(bad)
(bad)
push
mov
rcr
out
pop
xor
push
adc
test
cld
push
xchg
cmp
(bad)
(bad)
push
jecxz
out
(bad)
ja
imul
sbb
xchg
pop
mov
sub
stos
lea
(bad)
(bad)
call
aas
mov
pop
inc
inc
or
test
stos
test
adc
xlat
leave
ret
(bad)
dec
fsubr
ja
fbld
int
sub
add
or
mov
aam
retf
mov
inc
nop
pop
or
inc
inc
and
pop
test
adc
(bad)
dec
ret
jmp
xor
jb
lds
aas
adc
push
adc
push
jg
(bad)
inc
pop
mov
jnp
add
test
and
and
daa
cli
or
mov
(bad)
(bad)
dec
inc
inc
out
dec
dec
or
(bad)
xlat
stos
pop
push
inc
lea
cmps
lods
test
sar
dec
pop
retf
les
scas
mov
stos
jnp
adc
add
mov
(bad)
jg
rol
xchg
inc
daa
mov
xchg
movs
mov
sbb
lock
xlat
clc
mov
out
repz
or
out
call
or
arpl
pop
(bad)
(bad)
(bad)
jmp
mov
dec
inc
out
shr
add
ss
add
js
(bad)
(bad)
(bad)
jmp
mov
in
leave
cmp
leave
mov
loopne
sbb
in
jle
into
(bad)
pop
std
jmp
mov
enter
pusha
rcl
mov
ins
inc
outs
(bad)
(bad)
(bad)
fisttp
xor
fadd
or
sbb
ret
enter
push
pop
adc
scas
push
(bad)
ds
sub
and
scas
inc
push
dec
pop
mov
push
pusha
out
(bad)
ret
(bad)
jg
adc
outs
sub
mov
or
or
push
hlt
(bad)
(bad)
(bad)
(bad)
jg
or
dec
inc
adc
js
sbb
sti
mov
adc
in
sbb
out
clc
add
mov
jno
pop
repz
pop
pop
(bad)
(bad)
push
int
pop
std
push
add
and
retf
push
dec
lods
sub
push
inc
push
dec
into
fwait
cwde
inc
es
pushf
into
ror
ret
call
cmp
arpl
xchg
sbb
jmp
in
sar
(bad)
jmp
cs
pop
push
pop
inc
pop
in
mov
mov
add
ins
jae
inc
add
(bad)
(bad)
call
aam
adc
cmp
dec
mov
mov
fstp
push
inc
pop
mov
xor
sbb
(bad)
inc
nop
sbb
mov
and
(bad)
(bad)
(bad)
push
aam
inc
out
adc
mov
add
sub
dec
jp
sbb
imul
js
(bad)
(bad)
jmp
movs
retf
and
jns
add
jle
(bad)
dec
rcr
pusha
cmp
out
test
jno
pusha
cs
(bad)
(bad)
jmp
(bad)
push
cmp
enter
jg
sub
adc
push
pop
ins
pushf
(bad)
out
cli
inc
or
adc
loopne
xor
fwait
inc
in
jno
xchg
ds
mov
pop
(bad)
(bad)
(bad)
call
jecxz
fnsave
fistp
aas
mov
data16
sub
test
xor
outs
jmp
test
fwait
cli
or
add
into
and
sub
jb
adc
and
fwait
cmp
jmp
pop
jb
jp
ja
call
popa
push
aad
out
cmps
sbb
sti
std
add
jae
pop
faddp
movs
dec
lahf
aam
(bad)
(bad)
inc
aas
ror
jne
dec
dec
repnz
xchg
inc
mov
jbe
iret
in
xchg
je
cmp
clc
(bad)
(bad)
push
repnz
sub
stc
pushaw
pop
movs
adc
sub
imul
movs
lahf
(bad)
pop
cmp
rcl
push
std
add
cmp
add
mov
(bad)
(bad)
inc
push
xchg
sub
in
mov
aam
jo
xchg
dec
cmp
in
retf
nop
and
int
pop
cmc
test
mul
stos
bound
sar
mov
xlat
call
inc
repnz
mov
dec
cld
mov
pushf
(bad)
cld
(bad)
dec
jge
push
test
mov
leave
int
std
fcmovne
ret
nop
adc
hlt
sbb
jmp
or
adc
or
(bad)
(bad)
jmp
clc
mov
jnp
(bad)
cmp
fsub
cli
outs
pop
dec
cld
leave
xor
adc
std
(bad)
(bad)
dec
push
out
mov
push
lock
bound
rol
mov
push
jno
push
sbb
mov
loop
pop
test
xchg
lock
clc
aaa
push
xor
or
(bad)
(bad)
dec
loop
inc
and
pop
cmp
inc
in
pop
adc
bound
sbb
fcmovnbe
sub
(bad)
(bad)
(bad)
icebp
loope
mov
out
imul
lods
ss
loope
jns
sbb
out
pusha
mov
(bad)
aas
cmp
cmc
std
call
into
pushf
xchg
dec
or
outs
icebp
(bad)
and
push
in
(bad)
(bad)
call
or
pop
in
xchg
movs
xchg
inc
xchg
stc
cmp
sub
mov
lods
pop
movs
or
fsubr
test
imul
and
(bad)
idiv
(bad)
inc
test
leave
loopne
imul
jmp
xchg
adc
out
or
gs
(bad)
dec
test
and
mov
jo
rcr
or
les
sub
dec
fwait
jg
pop
mov
lahf
dec
hlt
jnp
jmp
retf
fld
sub
cmp
(bad)
call
dec
sbb
sub
xor
ds
mov
call
fstp
out
test
ins
cmp
(bad)
mov
mov
mov
mov
cdq
inc
scas
clc
(bad)
dec
fs
fldcw
cld
js
mov
les
or
loopne
fiadd
jle
(bad)
(bad)
(bad)
(bad)
out
fld1
pop
fldenv
dec
ins
test
add
dec
outs
imul
jb
ins
jo
xor
imul
push
cmp
fbld
or
loopne
int3
rol
movs
push
cmps
dec
xor
mov
push
push
jmp
fwait
stos
push
repz
dec
mov
sub
mov
rcr
call
shr
fistp
jae
hlt
mov
xor
and
xor
jno
aaa
fnstsw
(bad)
(bad)
inc
mov
mov
es
fstp
or
ja
inc
or
pop
mov
(bad)
call
jle
or
test
and
xor
(bad)
mov
or
mov
mov
inc
adc
xchg
inc
and
mov
push
in
xor
push
outs
out
retf
psubsw
stos
inc
pop
cmp
lods
sub
(bad)
(bad)
push
nop
inc
fwait
popf
ret
aaa
leave
sbb
pop
jecxz
inc
fld
imul
dec
jp
xchg
push
sar
(bad)
(bad)
dec
jmp
popa
add
jns
fist
pop
sub
pusha
sub
add
xchg
lock
call
std
inc
nop
push
arpl
sbb
gs
ror
loope
xchg
push
call
inc
popa
cmp
in
xchg
mov
sahf
and
inc
add
mov
jmp
dec
fwait
cs
mov
ficomp
out
ins
sub
jl
and
mov
sub
std
jmp
xor
in
ja
retf
int
mov
(bad)
mov
cmc
out
loopne
les
add
sbb
call
jmp
xchg
ficomp
test
popf
adc
adc
adc
je
mov
cli
(bad)
call
adc
xor
in
das
rcl
jge
(bad)
dec
mov
stos
ins
jecxz
add
pushf
xor
fcom
cmp
(bad)
(bad)
call
jno
stc
test
(bad)
fdivr
mov
fsub
lock
jno
push
jbe
rcr
test
pop
adc
sbb
retf
icebp
imul
js
sti
stos
push
or
(bad)
(bad)
(bad)
dec
int3
shl
pop
add
fstp
mov
inc
xlat
int3
push
mul
cdq
mov
pop
dec
dec
aaa
(bad)
(bad)
(bad)
push
les
pop
cmp
popf
into
cmp
inc
cmps
in
sub
lds
clc
out
out
(bad)
(bad)
jmp
sub
shl
xchg
mov
inc
sbb
mov
sub
lahf
call
call
call
inc
hlt
out
leave
inc
lea
jb
daa
scas
in
push
mov
inc
cld
call
sbb
sar
sub
jp
push
loop
dec
add
(bad)
call
in
imul
aam
push
mov
mov
sar
fstp
enter
add
bound
xor
(bad)
fistp
cmp
loopne
clc
cmp
data16
(bad)
(bad)
out
mov
mov
(bad)
das
retf
push
je
pop
aaa
aad
sahf
jge
clc
lahf
push
adc
or
or
or
jne
cs
rol
(bad)
hlt
(bad)
call
leave
pop
xchg
adc
inc
and
ret
aad
(bad)
jmp
jmp
add
cmp
call
(bad)
call
call
inc
xor
sub
dec
mov
sub
cmp
adc
xor
repz
cmp
test
jno
push
sub
(bad)
fild
ss
cmp
xchg
daa
dec
dec
cmp
jmp
pop
or
test
jb
fdivr
mov
cld
fistp
(bad)
(bad)
call
outs
push
sub
cmp
mov
je
push
sbb
sar
cld
jmp
(bad)
rcr
mov
stc
aad
(bad)
(bad)
call
sbb
outs
push
fisub
mov
push
xor
stos
enter
test
or
cld
(bad)
jg
dec
fldcw
mov
loopne
and
test
into
pop
popf
add
pop
dec
std
jg
push
push
jne
les
inc
fnstsw
inc
sbb
dec
inc
(bad)
out
test
mov
mov
enter
adc
(bad)
(bad)
jmp
jb
mov
jmp
out
fwait
jmp
adc
jbe
lds
xor
adc
or
test
jmp
sub
clc
pop
aam
dec
pusha
sbb
das
xor
(bad)
sti
movs
inc
inc
(bad)
in
movs
int3
sti
jp
int3
ficomp
jge
xor
jmp
call
inc
imul
arpl
ins
sbb
(bad)
(bad)
(bad)
call
(bad)
icebp
sub
add
test
mov
aad
push
enter
jmp
dec
mov
jmp
push
jmp
aaa
dec
movs
adc
(bad)
inc
xchg
mov
adc
xor
outs
(bad)
stos
(bad)
outs
xor
cwde
inc
cmp
sbb
or
loopne
je
(bad)
(bad)
dec
out
or
add
adc
push
fmul
mov
mov
iret
addr16
into
jo
adc
stos
stos
popf
cwde
cmps
push
mov
sbb
(bad)
(bad)
(bad)
call
scas
or
lds
(bad)
mov
aas
mov
test
and
jmp
add
(bad)
mov
cmps
sbb
or
cmp
xlat
inc
pop
sub
cmp
push
adc
jl
dec
call
adc
push
pop
ror
rol
loopne
icebp
or
(bad)
(bad)
(bad)
call
mov
xchg
stos
jb
mov
out
mov
mov
mov
aad
(bad)
(bad)
(bad)
fidivr
cmp
mov
inc
test
outs
xchg
mov
mov
mov
cld
mov
dec
sahf
dec
test
xor
icebp
jb
cmp
pop
shl
and
push
in
outs
sub
inc
add
test
(bad)
jmp
movs
adc
sub
xor
mov
jbe
cwde
call
imul
pop
jbe
push
pop
lock
mov
lods
push
xchg
cmp
enter
(bad)
(bad)
(bad)
call
sar
stos
imul
mov
dec
push
push
retf
leave
sub
mov
fidiv
jecxz
stos
movs
cmps
inc
add
(bad)
inc
or
mov
les
popa
pop
and
(bad)
(bad)
mov
pop
xor
sub
fstp
lds
repz
out
retf
jg
test
int3
stos
pop
adc
(bad)
in
push
mov
inc
pop
cmp
lahf
pop
inc
jne
mov
jbe
bound
inc
rcr
retf
mov
test
(bad)
(bad)
(bad)
(bad)
test
jo
sub
push
add
mov
sub
mov
(bad)
jmp
xor
fiadd
mov
sub
inc
push
or
push
loop
out
(bad)
(bad)
(bad)
jg
push
hlt
retf
(bad)
cwde
pop
icebp
iret
int
aas
cmp
add
sbb
(bad)
dec
iret
(bad)
aam
cdq
ret
sbb
push
(bad)
fisub
rcl
fist
cld
rcl
xchg
popa
outs
ins
push
jno
loope
mov
(bad)
(bad)
(bad)
jg
repz
jne
cmp
add
dec
dec
jmp
out
push
xchg
vphadduwd
(bad)
(bad)
(bad)
(bad)
(bad)
es
or
mov
pop
ss
ror
mov
in
ret
mov
sub
repnz
les
xchg
or
call
repnz
fdivr
dec
ficom
or
push
imul
call
adc
add
js
(bad)
push
jp
xchg
loop
(bad)
enter
outs
dec
inc
add
call
loopne
xor
or
repz
add
adc
(bad)
jg
(bad)
hlt
ror
imul
push
nop
popa
daa
cmp
popf
leave
sbb
push
pop
aas
jecxz
pop
(bad)
push
dec
jp
cmp
ins
imul
call
push
pop
and
xor
or
(bad)
(bad)
inc
dec
out
repz
or
mov
sbb
dec
les
nop
sbb
add
or
(bad)
(bad)
call
sar
add
ins
in
frstor
(bad)
scas
push
stos
push
(bad)
pand
mov
mov
(bad)
(bad)
(bad)
inc
fsub
imul
rol
neg
(bad)
pop
jg
mov
in
push
mov
xchg
ret
(bad)
(bad)
jp
adc
mov
and
addr16
div
fmul
jno
pop
dec
and
mov
mov
call
fld1
ja
xchg
shl
push
cld
inc
sub
pop
retf
dec
test
out
loopne
xor
(bad)
(bad)
in
dec
mov
push
test
sti
mov
paddusw
cs
mov
int
and
dec
loope
cmp
jmp
(bad)
(bad)
call
retf
sub
fdivrp
dec
mov
mov
(bad)
(bad)
jmp
cli
xor
jbe
fidivr
call
pop
icebp
lods
retf
iret
inc
sbb
(bad)
jb
mov
(bad)
in
cs
sub
mov
inc
inc
pop
and
aas
leave
mov
(bad)
(bad)
dec
and
fsubr
mov
loop
xor
mov
mov
ret
mov
pop
or
outs
(bad)
call
xchg
push
jne
ret
mov
mov
and
call
cld
xchg
(bad)
dec
test
inc
shl
sahf
pusha
pop
or
repz
sahf
xor
dec
inc
mov
(bad)
call
mov
out
fdiv
aas
rcl
retf
add
xor
(bad)
mov
mov
icebp
jle
xchg
imul
mov
(bad)
jg
push
dec
in
(bad)
rcr
cmp
inc
lods
adc
inc
mov
outs
mov
push
pop
(bad)
(bad)
(bad)
inc
jnp
or
ret
adc
lock
mov
adc
int
sbb
(bad)
(bad)
push
lock
jae
arpl
icebp
ja
rcr
scas
sbb
pop
loopne
xchg
call
(bad)
(bad)
(bad)
push
sbb
push
sbb
movs
lds
movaps
(bad)
scas
sub
dec
jmp
mov
inc
outs
lahf
xchg
mov
push
imul
clc
popa
int3
push
int
mov
(bad)
fisubr
inc
pop
mov
(bad)
mov
push
fild
mov
aam
pop
int
jne
call
mov
and
shr
xchg
mov
mov
(bad)
jmp
aam
mov
xchg
fwait
in
xchg
adc
mov
mov
call
jp
push
mov
daa
sbb
mov
in
jp
xchg
mov
sbb
mov
inc
sub
cld
outs
stos
int
inc
and
jp
pop
jno
(bad)
and
in
fistp
jmp
popf
cmp
mov
sub
sbb
mov
cli
call
(bad)
(bad)
(bad)
inc
pop
sbb
sub
jg
inc
xor
fmul
(bad)
pushf
mov
jmp
ficom
lods
mov
test
sbb
cmps
clc
pop
(bad)
lahf
jno
dec
jmp
shl
loop
(bad)
and
outs
xor
jle
cdq
into
xchg
push
fmulp
jecxz
std
xor
(bad)
push
ficomp
mov
std
ins
cmp
lods
(bad)
inc
adc
inc
sbb
cwde
cmp
cld
les
call
loopne
aaa
(bad)
cld
fldenv
mov
sub
mov
ss
mov
adc
cmp
icebp
xor
jno
pushf
stc
adc
(bad)
call
pop
test
pop
das
sub
int
mov
xor
fcomp
int
mov
xchg
(bad)
(bad)
jmp
in
imul
jae
or
xor
sub
(bad)
push
or
dec
pushf
sub
icebp
aad
jb
mov
jnp
jmp
lods
inc
stos
(bad)
(bad)
(bad)
jmp
mov
(bad)
adc
push
retf
mov
das
std
stos
xchg
enter
add
gs
mov
or
stos
es
(bad)
(bad)
(bad)
jns
sbb
jns
push
in
sub
mov
add
sub
repnz
daa
dec
push
cdq
push
fcom
(bad)
call
scas
stos
ins
push
call
lock
and
aaa
scas
aas
cmps
mov
inc
pop
fistp
push
loopne
sbb
in
bound
xor
or
xchg
pop
sbb
lock
(bad)
mov
lds
xor
test
dec
test
loopne
mov
(bad)
(bad)
fistp
dec
adc
push
jo
pop
in
mov
scas
push
sub
les
(bad)
(bad)
dec
fnstcw
test
test
shl
xor
clc
dec
add
push
std
mov
push
lahf
(bad)
(bad)
(bad)
call
iret
jge
push
popf
pop
rcl
pop
outs
inc
pop
mov
ret
adc
jb
shr
fimul
sbb
gs
loop
mov
repz
mov
xchg
cmp
rcl
inc
dec
std
icebp
pop
loope
faddp
(bad)
(bad)
not
ds
adc
jo
pop
enter
les
inc
(bad)
jmp
and
(bad)
(bad)
jg
jae
lea
clc
xchg
ss
and
and
push
add
push
or
pop
dec
jl
cmp
mov
and
in
(bad)
(bad)
(bad)
jmp
pop
add
adc
out
inc
ds
adc
jmp
adc
mov
xchg
cli
in
sar
aaa
cld
pop
jl
(bad)
mov
arpl
mov
call
adc
or
into
xchg
cwde
stos
inc
xor
xchg
ja
aam
aam
xchg
cdq
stos
inc
or
mov
inc
fnstsw
pop
icebp
push
in
lea
mov
movs
xor
cs
add
sahf
jp
lods
loope
mov
jmp
push
cmp
xchg
cli
(bad)
jmp
push
or
jno
repz
pop
and
jmp
outs
pop
adc
inc
fs
dec
dec
(bad)
call
pop
jnp
inc
push
out
(bad)
mov
enter
xchg
out
mov
inc
or
int
fldcw
cwde
dec
sub
shr
jle
adc
or
dec
bound
(bad)
movs
repnz
cmc
mov
mov
(bad)
(bad)
mov
cli
loop
inc
(bad)
retf
fcomi
in
out
retf
jecxz
push
test
inc
wbinvd
scas
jge
mov
jecxz
fcom
sbb
sbb
test
loop
inc
adc
aad
call
xchg
(bad)
fstp
(bad)
(bad)
(bad)
call
outs
jb
in
mov
call
xor
adc
(bad)
(bad)
inc
stos
into
mov
retf
cmp
push
jne
shr
(bad)
cli
out
xchg
sbb
cmps
lock
jmp
add
mov
mov
scas
mov
(bad)
(bad)
fistp
adc
pop
int
jl
aas
sbb
add
or
and
or
xor
ds
mov
xor
fnstsw
psubb
test
mov
(bad)
(bad)
dec
test
cmps
push
mul
imul
es
dec
push
clc
pop
cmp
add
arpl
add
lods
nop
sub
sahf
push
sbb
jne
jmp
mov
imul
daa
jecxz
jmp
mov
test
icebp
mov
jo
xor
loopne
pop
js
in
mov
imul
add
push
mov
cld
out
mov
push
or
add
femms
cmps
lahf
mov
(bad)
(bad)
inc
xchg
and
mov
retf
sbb
shr
push
ret
mov
sahf
dec
jmp
mov
dec
(bad)
xor
(bad)
(bad)
jg
ins
dec
ins
dec
ret
sbb
jmp
push
jmp
or
cmps
out
sti
(bad)
(bad)
call
ins
jle
inc
les
push
(bad)
pop
cmc
xchg
mov
lock
push
cmp
call
cdq
sysenter
cdq
mov
cmc
test
loope
cmp
or
push
hlt
ret
inc
sar
jg
sbb
idiv
ins
aas
dec
push
mov
shl
mov
pop
jecxz
mov
aad
outs
mov
fld
mov
or
scas
fcomp
mov
jge
xchg
jno
mov
adc
sti
and
inc
cli
cmp
xchg
sub
(bad)
adc
cwde
cmps
mov
lds
cmp
push
jl
hlt
mov
dec
outs
(bad)
(bad)
mul
push
mov
add
(bad)
(bad)
jmp
add
mov
inc
and
sbb
mov
push
fisttp
lahf
or
mov
dec
sbb
(bad)
inc
inc
fisttp
pusha
outs
lea
push
retf
shl
(bad)
sar
(bad)
inc
and
jb
nop
jl
shr
pop
hlt
pushf
push
sub
in
(bad)
(bad)
(bad)
jmp
dec
adc
inc
nop
addr16
push
fldcw
cmp
iret
xchg
mov
(bad)
and
out
fcomp
nop
mov
call
imul
enter
push
mov
jle
scas
sub
js
popf
call
popf
xor
fcos
inc
add
sub
cwde
dec
sbb
test
inc
push
sub
shr
lods
dec
movs
leave
add
(bad)
(bad)
(bad)
mov
outs
test
jecxz
xlat
popa
sbb
repnz
arpl
jge
lds
sbb
inc
(bad)
call
std
gs
gs
movs
sub
mov
bound
add
xlat
sar
fdivr
(bad)
(bad)
(bad)
jp
push
call
in
ins
mov
and
data16
daa
sub
shl
in
lock
test
loope
repz
inc
lahf
dec
aas
mov
pop
es
ins
inc
jmp
loope
sub
hlt
(bad)
(bad)
(bad)
fbstp
adc
ins
xor
mov
aaa
lock
mov
push
push
sub
cld
(bad)
jmp
rol
pop
and
xchg
sahf
retf
in
add
in
enter
push
and
mov
lock
test
(bad)
inc
xchg
mov
mov
push
inc
(bad)
je
inc
ret
inc
and
xchg
lds
cmp
stc
mov
sub
xchg
cld
aam
inc
xor
sbb
inc
mov
push
sub
adc
movs
stos
(bad)
fcomip
(bad)
mov
out
cdq
js
pop
xor
movs
in
daa
imul
leave
mov
(bad)
(bad)
(bad)
dec
cmp
int3
dec
xor
(bad)
and
dec
jp
pop
leave
pop
fmul
adc
or
pop
(bad)
(bad)
(bad)
dec
mov
iret
out
jb
xor
mov
out
cmc
call
and
push
xor
or
rcr
adc
mov
mov
xchg
inc
fxch
jnp
dec
(bad)
(bad)
mov
(bad)
data16
cmp
mov
push
imul
and
push
push
ins
adc
ficom
mov
inc
pop
sbb
mov
dec
or
add
sahf
pop
adc
cmp
std
fcomip
in
mov
jp
pop
call
mov
dec
(bad)
jmp
(bad)
dec
inc
call
push
shr
mov
fimul
or
aaa
aaa
adc
(bad)
jmp
push
mov
jo
(bad)
(bad)
(bad)
jg
es
into
in
push
push
sbb
or
mov
aaa
cld
or
pushf
ds
pop
ret
lods
xor
mov
lock
add
into
loopne
sti
bound
cmp
cmp
rcl
mov
in
mov
ins
(bad)
(bad)
jmp
mov
or
lea
jmp
aam
mov
rcl
call
or
ret
hlt
pop
push
mov
(bad)
js
or
mov
sub
xchg
test
(bad)
(bad)
inc
ror
test
idiv
call
je
xchg
and
(bad)
(bad)
jmp
fnstcw
cmp
mov
xchg
inc
in
les
repnz
xchg
and
dec
loopne
hlt
add
test
mov
mov
clc
out
xor
push
pop
pop
retf
out
popa
cdq
or
shl
pushf
ins
cli
loopne
mov
dec
adc
pop
int
sub
adc
sbb
fild
test
loop
inc
cmp
mov
movs
outs
cmp
xchg
pop
pop
scas
cld
(bad)
jg
adc
rcl
int3
(bad)
js
mov
pop
dec
fucom
icebp
int
cmp
adc
mov
xlat
jo
(bad)
jg
cmp
pop
and
cmp
push
retf
ins
jmp
push
pop
sub
push
sub
push
faddp
rol
(bad)
jo
mov
cld
retf
js
mov
fdivr
(bad)
(bad)
jg
mov
sub
into
ror
lds
popa
(bad)
call
retf
movs
push
and
xor
das
aam
and
dec
cs
jno
inc
(bad)
(bad)
(bad)
jmp
(bad)
sahf
cs
jmp
add
lods
jae
push
push
stc
pusha
or
cmp
mov
(bad)
cld
lods
xor
cdq
imul
xor
scas
mov
(bad)
jmp
(bad)
lds
ret
lods
ret
sahf
pop
pop
ret
xchg
mov
jo
repz
mov
aam
mov
xchg
arpl
xlat
pop
jecxz
or
cli
(bad)
dec
fucomp
jmp
add
xchg
pop
bswap
imul
jmp
mov
push
pop
push
ss
adc
cld
or
(bad)
(bad)
push
jmp
jecxz
xor
and
cmps
push
adc
sbb
mov
out
out
stos
mov
(bad)
call
idiv
jl
ffree
ss
add
add
(bad)
(bad)
jmp
dec
cmc
push
xor
jl
inc
pop
sahf
or
(bad)
(bad)
out
stos
adc
es
xchg
xor
mov
mov
sub
call
mov
pop
jns
add
(bad)
xchg
lahf
jno
mov
inc
cli
(bad)
(bad)
mov
cdq
aas
clc
add
in
leave
jnp
adc
mov
loope
jne
es
dec
pop
adc
shr
xor
or
push
pop
jp
(bad)
(bad)
jg
mov
pop
mov
fisttp
and
xchg
dec
loop
jns
or
add
(bad)
(bad)
push
push
xor
outs
cmp
dec
push
sbb
mov
jbe
sbb
fwait
push
mov
fnstsw
add
call
xchg
enter
inc
and
and
call
sub
jl
sar
jno
mov
(bad)
mov
and
jmp
or
int3
fimul
(bad)
(bad)
(bad)
dec
js
xchg
xchg
loop
mov
pop
xor
bts
(bad)
lahf
mov
popf
jo
nop
pop
loope
adc
les
std
sbb
sbb
pop
cmc
pop
ss
sahf
repnz
ds
cs
jl
cmc
(bad)
(bad)
fst
ss
pop
loope
shr
cmp
outs
clc
(bad)
(bad)
mov
push
dec
fs
cmp
mov
arpl
sbb
mov
clc
sbb
inc
fcomp
loopne
movs
mov
es
adc
(bad)
(bad)
(bad)
push
push
sbb
(bad)
test
and
jmp
add
pop
ret
or
cmp
(bad)
push
lods
bnd
mov
cmp
mov
cmovno
dec
pop
mov
mov
test
(bad)
call
xlat
mov
inc
push
fistp
mov
rol
and
mov
(bad)
(bad)
push
ins
ficomp
mov
ja
cmps
add
inc
dec
sbb
adc
ss
add
cmp
mov
xor
pop
and
jno
mov
(bad)
call
sub
mov
cdq
ins
in
push
jecxz
mov
jmp
movs
sub
ins
cmps
push
fidivr
or
fldenv
(bad)
(bad)
inc
sub
sub
out
inc
(bad)
xchg
(bad)
out
test
xchg
popf
(bad)
dec
hlt
mov
ret
(bad)
call
mov
into
jne
push
fld
aam
jp
cmc
lods
cmp
rcl
pop
push
mov
(bad)
(bad)
push
test
out
and
fwait
pop
xor
jnp
test
cmps
and
(bad)
sub
xchg
(bad)
(bad)
jg
retf
sahf
xchg
aas
adc
sub
mov
imul
(bad)
call
in
and
call
mov
or
adc
jl
xchg
or
cli
cli
aaa
std
(bad)
mov
and
int
cmp
(bad)
and
sahf
(bad)
es
mov
(bad)
push
jle
aas
sbb
pop
mov
leave
cmp
xor
(bad)
(bad)
call
inc
bound
pop
(bad)
xchg
das
add
data16
cmp
pop
sub
mov
push
fadd
leave
xchg
aas
(bad)
(bad)
call
mov
lds
mov
add
ret
mov
(bad)
dec
dec
jecxz
add
repnz
mov
add
dec
sub
outs
in
adc
(bad)
(bad)
(bad)
mov
push
aas
fnsave
rcl
inc
lds
or
mov
sbb
mov
xchg
cmp
iret
fidivr
pop
pop
clc
xor
mov
mov
push
das
add
xlat
pop
add
(bad)
mov
test
dec
cs
push
pop
shl
retf
data16
call
mov
sub
xchg
push
retf
imul
add
shl
in
jb
push
aas
mov
(bad)
(bad)
inc
fnstenv
(bad)
push
and
daa
addr16
je
and
pop
add
pop
rcr
adc
dec
xchg
fwait
jae
jae
rcr
mov
cmovo
(bad)
mov
fwait
cs
adc
(bad)
xchg
stos
jns
adc
int
mov
xchg
jbe
xchg
mov
or
push
mov
loop
mov
(bad)
(bad)
(bad)
jmp
mov
pop
mov
hlt
mov
std
sahf
movs
and
js
xor
call
scas
neg
pop
ja
retf
jbe
daa
es
(bad)
jg
add
dec
fisttp
mov
inc
cld
push
mov
add
mov
adc
jp
push
fs
scas
scas
cli
dec
mov
sahf
movs
mov
xchg
retf
scas
xor
push
cld
inc
jg
mov
inc
popa
add
(bad)
push
call
jmp
mov
outs
es
push
repz
xchg
dec
inc
int
xor
xchg
fisub
mov
jae
imul
(bad)
push
cmc
xchg
dec
rcl
sahf
gs
or
dec
push
ret
xchg
dec
in
sub
clc
dec
retf
push
sbb
outs
xchg
(bad)
pop
jle
dec
pushf
pop
jbe
xchg
and
daa
mov
sbb
into
mov
aas
cmp
or
push
cmps
lahf
mov
push
shr
jle
es
imul
jg
dec
dec
mov
pushf
in
enter
pusha
repnz
jg
cmp
aam
jmp
rol
xchg
jg
and
mov
jnp
xor
lock
outs
repz
cli
(bad)
(bad)
(bad)
jns
add
test
outs
push
mov
ins
or
sub
retf
mov
leave
xchg
(bad)
(bad)
jmp
or
mov
in
adc
test
pop
jmp
ds
mov
pop
pop
cli
out
mov
mov
(bad)
aaa
test
int3
ror
push
sahf
test
(bad)
(bad)
(bad)
(bad)
cmp
and
stos
inc
ss
lods
movs
mov
fld
js
xor
loopne
dec
in
jmp
fistp
retf
inc
push
retf
push
rcl
jbe
loope
int3
jno
cmp
mov
cli
mov
lods
jb
std
sbb
dec
dec
jmp
and
rol
cdq
mov
jmp
sahf
xchg
or
sbb
mov
sbb
(bad)
call
sbb
(bad)
arpl
xchg
fs
ret
jecxz
pop
add
mov
sub
mov
sti
hlt
scas
cli
dec
mov
push
in
push
pop
push
sbb
(bad)
jmp
xchg
inc
pop
into
mov
fcomp
and
xlat
cmps
inc
pop
mov
call
cld
xor
in
arpl
mov
rcl
pop
sub
dec
daa
das
add
(bad)
fdivrp
ret
pop
int3
fcomip
test
lods
mov
arpl
or
(bad)
jmp
repz
shr
push
push
push
sbb
rcl
loope
imul
pop
fcos
jg
daa
clc
(bad)
jl
out
pop
fidivr
sahf
ins
jnp
xlat
movs
jo
mov
ret
and
mov
nop
js
ret
push
adc
or
lds
mov
mov
loopne
(bad)
jmp
cmp
jbe
xor
add
jecxz
fnsave
enter
and
pop
adc
rcl
mov
push
call
movntq
out
xchg
mov
stos
enter
mov
mov
(bad)
(bad)
dec
je
shr
mov
popa
and
bound
mov
pop
and
jmp
jno
(bad)
(bad)
cmp
addr16
btr
push
imul
test
loopne
sub
mov
clc
(bad)
(bad)
aas
lds
(bad)
es
mov
in
push
jae
call
pop
into
std
sub
movs
sub
xchg
(bad)
jg
sbb
xor
xlat
bound
adc
mov
inc
pop
jmp
(bad)
cli
popf
jae
das
sar
mov
mov
or
sbb
cmps
xlat
lahf
ds
(bad)
(bad)
(bad)
cmp
idiv
inc
ja
cmp
inc
sbb
sbb
scas
push
jmp
inc
(bad)
(bad)
(bad)
call
lds
push
gs
vcvtss2si
push
adc
hlt
retf
adc
std
scas
clc
dec
push
aas
push
int3
jl
jecxz
call
shl
(bad)
(bad)
(bad)
fild
add
xchg
sar
in
cmps
mov
pop
pop
fcom
in
adc
jmp
outs
cmp
inc
mov
pop
loope
and
push
jmp
inc
push
jge
inc
outs
fdivrp
loope
das
add
xchg
lahf
pop
sti
or
shr
enter
lds
out
(bad)
(bad)
(bad)
cmp
fcom
in
mov
sbb
push
movs
inc
pop
aam
(bad)
ins
mov
add
cwde
cmp
call
inc
xchg
adc
fbstp
push
cld
dec
shl
pop
retf
loope
pop
imul
iret
aad
cmp
(bad)
(bad)
push
fst
or
aas
popf
mov
movs
add
sub
(bad)
loop
ins
push
frstor
call
and
and
jl
in
fisub
lods
mov
(bad)
(bad)
jmp
hlt
pop
jae
int3
lahf
mov
fcom
cdq
stos
adc
movs
dec
int3
aad
ja
mov
(bad)
(bad)
call
fnstcw
inc
jno
add
inc
sti
test
sbb
jmp
cmp
call
adc
in
or
movs
test
ror
cwde
mov
and
mov
mov
add
ficomp
xor
std
(bad)
push
pop
mov
int
sub
addr16
nop
aam
xor
out
out
clc
inc
aaa
cli
(bad)
(bad)
(bad)
jmp
sbb
pop
sbb
stc
or
popf
adc
cmp
fst
call
xor
(bad)
(bad)
jmp
in
scas
ja
aas
sbb
mov
jns
repnz
mov
mov
pop
mov
jmp
out
mov
mov
mov
xchg
adc
sbb
fisubr
push
daa
pop
xchg
sbb
sahf
les
fdiv
mov
(bad)
(bad)
call
fcomp
ins
test
popa
ds
(bad)
xchg
das
clc
mov
jns
sub
add
pop
fidiv
cmp
jecxz
xchg
inc
jne
(bad)
in
mov
jmp
jbe
retf
test
dec
ja
imul
out
and
sbb
(bad)
jmp
push
xor
cli
xlat
push
rcl
and
jmp
mov
loop
(bad)
inc
jne
mov
pop
out
mov
mov
hlt
fstp
pop
iret
repnz
(bad)
(bad)
(bad)
(bad)
mov
cmps
mov
push
repz
cdq
paddq
loop
das
dec
repz
lods
loop
jmp
and
(bad)
(bad)
(bad)
js
cmp
ret
push
cmp
fst
jnp
sahf
jle
sbb
sub
jl
jmp
jmp
in
pusha
xor
or
(bad)
idiv
(bad)
(bad)
jg
cmp
out
test
movs
int3
dec
or
adc
fld
std
shr
ss
mov
test
aad
lea
fisub
loopne
imul
push
nop
aaa
fs
xchg
xchg
dec
(bad)
call
shl
pop
aaa
add
loopne
or
not
add
sub
popa
mov
xchg
xor
pop
out
inc
outs
push
lock
mov
sub
jmp
fcom
je
lahf
and
psllq
ficomp
push
and
cwde
pop
pop
cmp
nop
sub
xchg
jmp
in
loop
or
(bad)
(bad)
jmp
repnz
retf
add
fwait
jle
retf
sti
mov
jge
add
jl
enter
add
(bad)
aaa
fsub
dec
add
call
mov
outs
cmps
fsub
jle
jne
cmps
jg
fdiv
cmp
(bad)
jmp
sub
mov
sbb
cmc
aad
jbe
pop
or
stos
inc
les
xchg
lea
and
sub
or
jp
cmc
(bad)
dec
or
enter
sbb
setae
cmp
(bad)
jmp
jne
cs
inc
cmc
cdq
pop
add
adc
or
loope
fcomp
push
xlat
sbb
or
jnp
inc
sub
adc
jp
into
xchg
es
bound
pop
sub
sbb
mov
fistp
dec
in
xor
mov
lds
mov
(bad)
stos
call
repnz
cmp
lock
xlat
xchg
mov
mov
jecxz
sbb
cmp
enter
push
fsubr
mov
(bad)
(bad)
(bad)
(bad)
mov
and
int3
test
data16
pusha
sub
cmc
movq
and
pop
and
(bad)
(bad)
dec
ds
mov
mov
cwde
pusha
pop
or
hlt
ja
push
add
mov
outs
fmul
retf
xchg
lock
(bad)
(bad)
mov
cmp
mov
nop
xor
inc
repnz
push
push
dec
das
xchg
cmp
inc
(bad)
(bad)
(bad)
(bad)
cli
push
mov
cwde
add
js
push
pop
cld
pop
cmps
xchg
test
adc
dec
test
jge
out
xor
mov
(bad)
(bad)
dec
test
or
or
fcmovnbe
arpl
dec
xchg
(bad)
fldz
push
adc
stos
call
cli
sar
(bad)
(bad)
(bad)
fistp
sub
mov
cmp
stc
jecxz
loopne
in
pop
dec
(bad)
cmp
adc
(bad)
(bad)
(bad)
call
mov
lds
das
int3
(bad)
pusha
jo
les
jecxz
adc
sub
gs
(bad)
push
adc
push
nop
sub
pop
shl
adc
loop
call
(bad)
aaa
sbb
push
jg
and
ja
push
aaa
push
cld
(bad)
(bad)
mov
inc
fbstp
add
lds
loopne
(bad)
js
stc
lock
(bad)
(bad)
push
mov
aas
mov
fidivr
scas
es
(bad)
idiv
call
je
clc
das
mov
(bad)
jmp
and
mov
call
lock
sbb
or
int3
push
test
mov
pop
movs
fs
pushf
das
pop
adc
adc
sbb
mov
mov
sbb
push
add
mov
pushf
pop
add
mov
mov
(bad)
mov
dec
test
pop
out
enter
or
mov
jnp
adc
pop
sahf
mov
je
imul
fadd
mov
jg
mov
outs
ins
sbb
add
pop
pop
retf
push
mov
ret
(bad)
fistp
scas
jg
mov
sub
inc
sub
fmul
hlt
mov
(bad)
mov
adc
call
dec
lahf
and
mov
sub
stos
cmp
mov
loope
sbb
pop
sub
add
xor
lods
mov
pop
jmp
pop
call
stos
cmps
(bad)
(bad)
(bad)
call
in
cdq
cmc
in
or
inc
cmc
mov
out
xchg
data16
push
mov
scas
arpl
add
aas
push
(bad)
rcl
mov
cwde
or
in
jg
sub
es
xchg
xor
jb
(bad)
(bad)
dec
mov
pushw
or
pushf
aad
cmp
sub
les
cmp
(bad)
(bad)
(bad)
(bad)
push
test
(bad)
and
stos
mov
mov
cmp
stos
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
stos
mov
mov
pop
sub
rcr
mov
(bad)
adc
scas
push
cli
pusha
fcomi
add
lea
fsubp
mov
push
call
pop
cmp
jnp
xor
jno
push
std
and
adc
(bad)
(bad)
(bad)
cli
cdq
call
jnp
sub
int
popa
cmp
rcr
sub
ins
popa
shl
in
jg
popa
hlt
dec
cmc
int
or
cli
mov
sbb
(bad)
jecxz
lods
clc
xlat
mov
aam
call
sbb
dec
cmp
jns
fistp
je
stc
lea
inc
xor
and
arpl
(bad)
(bad)
call
addr16
inc
shl
adc
jmp
jecxz
push
cmp
jecxz
call
or
pop
inc
std
push
cmp
mov
into
aaa
or
cmp
out
(bad)
(bad)
(bad)
inc
mov
sub
mov
cmp
mov
xchg
out
rcl
push
jnp
push
or
leave
jle
sbb
dec
or
cdq
and
retf
imul
(bad)
jnp
cmps
mov
and
jmp
mov
or
jno
rcr
adc
dec
scas
shr
dec
dec
push
jecxz
pop
mov
loop
and
cli
cwde
xchg
stos
stc
arpl
or
push
fsubr
int
mov
cmp
mov
inc
inc
cmp
sub
xor
push
push
cld
inc
xchg
sub
push
lahf
int
add
pop
outs
in
outs
lods
jo
jnp
xchg
ins
adc
pop
rcl
(bad)
ficomp
and
jmp
jae
mov
aaa
inc
shl
popf
inc
je
fcom
push
adc
xlat
call
pop
sub
sub
jmp
mov
dec
sub
ret
daa
shr
call
xchg
(bad)
cld
and
fcom
jne
(bad)
adc
sub
fnclex
(bad)
(bad)
inc
outs
test
scas
setno
xchg
pusha
sbb
adc
loopne
scas
xchg
cld
(bad)
(bad)
mov
in
jae
not
fstp
aaa
add
and
and
sti
and
(bad)
fild
sahf
aas
inc
cmp
shl
xor
(bad)
push
or
mov
dec
xor
lea
push
aad
add
dec
daa
add
xchg
adc
imul
jmp
into
gs
xchg
pop
call
stc
xor
jb
pop
cs
fwait
and
(bad)
pop
push
js
push
aam
(bad)
(bad)
(bad)
(bad)
fsub
(bad)
gs
in
test
mov
dec
mov
cmp
repnz
add
jle
or
ds
sbb
jns
xor
arpl
(bad)
(bad)
(bad)
dec
xchg
test
rcr
push
push
inc
in
js
aam
pop
jnp
and
pop
jo
(bad)
(bad)
(bad)
push
xchg
xchg
mov
inc
popa
ins
pushf
test
enter
subps
add
jg
sub
cdq
cwde
cwde
xchg
ret
popa
inc
adc
jg
loopne
add
addr16
arpl
std
mov
xor
pop
scas
jl
pop
shl
call
mov
sbb
ror
and
xlat
dec
pop
sbb
jge
call
mov
jmp
and
jns
call
mov
and
test
cmp
sar
and
cmc
mov
mov
and
mov
or
sub
adc
cmp
(bad)
(bad)
dec
push
push
push
adc
scas
pop
or
(bad)
inc
sub
mov
dec
cli
mov
sbb
mov
dec
stc
and
imul
mov
data16
xchg
jmp
int
int3
(bad)
pop
loopne
inc
jg
(bad)
call
dec
and
or
and
mov
retf
ds
xor
jno
fwait
xor
cld
(bad)
(bad)
(bad)
mov
cmp
adc
lods
inc
cmp
stos
push
(bad)
(bad)
(bad)
inc
fst
ds
cmps
jbe
mov
sub
cs
jg
call
movs
cwde
sub
mov
clc
cmp
int
shr
out
mov
addr16
pop
cmc
(bad)
dec
jne
loopne
jecxz
enter
and
fwait
loopne
(bad)
jle
dec
xor
pop
cmp
loopne
fild
or
sbb
mov
clc
call
inc
lods
mov
jbe
push
aam
aas
fsub
(bad)
dec
(bad)
or
mov
adc
int3
in
bound
hlt
neg
cmp
movs
mov
mov
jmp
xchg
pop
data16
into
push
imul
fidivr
push
sbb
xchg
repz
xchg
dec
clc
je
test
clc
scas
ins
cmc
mov
jmp
dec
shl
mov
dec
adc
(bad)
call
repz
(bad)
sub
mov
je
or
xor
shl
(bad)
(bad)
call
rcl
test
jbe
fldcw
test
jmp
retf
push
outs
or
hlt
aam
or
pop
in
loope
int3
test
(bad)
(bad)
dec
(bad)
push
(bad)
fiadd
mov
dec
stos
cli
ja
popf
push
lea
call
aad
jmp
(bad)
(bad)
jmp
sar
mov
lods
jg
aas
pusha
out
sbb
fisttp
repz
out
mov
std
inc
xor
mov
push
mov
add
push
xor
dec
and
(bad)
(bad)
jmp
pop
jmp
(bad)
cwde
gs
or
leave
popf
cmp
loop
push
daa
into
test
mov
(bad)
(bad)
(bad)
js
and
retf
in
sbb
loopne
jbe
push
mov
push
inc
jbe
ja
nop
jmp
(bad)
(bad)
(bad)
call
inc
mov
sub
mov
and
rcl
mov
test
out
sub
sar
fs
sub
out
call
loopne
inc
inc
clc
mov
inc
call
inc
inc
aas
mov
dec
shl
(bad)
jmp
pushf
dec
hlt
stos
jnp
shr
add
ret
mov
loope
clc
dec
(bad)
(bad)
out
mov
mov
adc
inc
jg
mov
mov
ret
test
int
xor
cmc
jno
inc
es
fcomip
(bad)
jg
dec
pop
dec
js
and
dec
(bad)
lods
test
inc
mov
retf
shl
test
(bad)
ds
shr
sti
inc
scas
xchg
and
cdq
mov
xlat
mov
jo
ins
sti
rol
(bad)
(bad)
out
movs
mov
gs
pop
fsub
mov
jb
add
pop
mov
mov
scas
mov
(bad)
popa
sbb
pop
sub
in
mov
mov
cmp
mov
cmp
sub
test
(bad)
(bad)
inc
out
dec
or
fst
add
mov
push
test
clc
test
jg
out
retf
pop
mov
jge
push
and
mov
sub
dec
cwde
movq
jecxz
dec
add
jg
(bad)
call
retf
in
jne
pop
ins
xchg
pop
imul
cmp
push
test
cmp
popa
push
icebp
(bad)
call
push
or
jecxz
xor
ret
push
sub
fbstp
pop
add
test
mov
outs
push
cmp
jmp
repz
stc
and
xchg
jge
ja
or
inc
or
je
(bad)
(bad)
out
clc
dec
test
cmc
(bad)
sar
ja
mov
mov
ror
xchg
clc
ja
js
fs
rol
addr16
inc
inc
in
in
mov
mov
(bad)
scas
popa
cmp
mov
(bad)
jg
inc
push
loope
add
lds
lock
mov
(bad)
les
mul
clc
mov
std
jecxz
lods
inc
push
xor
sub
lods
movs
xor
and
xchg
(bad)
mov
(bad)
or
push
ins
(bad)
fst
and
xchg
ins
aaa
out
test
(bad)
(bad)
dec
iret
stos
push
inc
pop
dec
push
out
or
mul
imul
adc
shr
pop
das
push
inc
sub
(bad)
(bad)
(bad)
fisub
shr
jecxz
sub
fwait
outs
jg
push
xor
push
push
stc
mov
(bad)
jmp
jp
in
ja
xor
out
fbld
jg
xchg
lods
mov
es
and
(bad)
(bad)
(bad)
jg
test
vandps
fisub
retf
retf
pushf
xchg
lods
mov
rol
cdq
push
call
cmp
test
inc
mov
retf
js
test
(bad)
int
(bad)
(bad)
(bad)
call
or
add
rol
repz
dec
push
dec
cld
jmp
add
fstp
js
jg
dec
fidivr
not
test
out
into
fnsave
imul
cs
push
xchg
sub
arpl
add
push
fnsave
jmp
dec
xchg
outs
outs
cmp
(bad)
cmp
jno
fstp
outs
stos
push
bound
addr16
retf
add
mov
ja
fdivp
mov
add
dec
or
sbb
inc
aad
add
fsub
mov
add
call
(bad)
ja
into
enter
jp
lock
popf
adc
lahf
cs
and
inc
mov
ficom
mov
imul
jmp
mov
into
fcom
in
adc
pusha
fadd
pop
and
inc
inc
push
xchg
outs
inc
xchg
inc
jne
jmp
pop
sub
jmp
inc
rcl
loopne
dec
xchg
adc
push
icebp
mov
outs
push
std
(bad)
cmp
mov
fdiv
mul
cmps
jb
push
fcom
cmp
mov
pushf
xor
push
std
xor
ja
sub
cli
or
sti
lods
jo
scas
fs
retf
add
(bad)
(bad)
mov
movs
ins
(bad)
mov
inc
mov
scas
js
fist
mov
push
push
jmp
jle
(bad)
(bad)
(bad)
push
mov
test
lods
sbb
gs
cmp
int3
mov
adc
xchg
movs
popa
repnz
push
dec
clc
pushf
pop
jmp
or
push
and
sahf
mov
outs
dec
jae
icebp
xchg
inc
cld
retf
xor
mov
cwde
outs
pop
ret
cmp
jb
rol
std
(bad)
inc
mov
mov
out
mov
js
call
push
xor
dec
pop
aaa
cdq
jmp
cmps
lea
call
not
(bad)
(bad)
(bad)
jmp
add
jo
cmp
(bad)
shl
xlat
mov
mov
jg
loope
xchg
(bad)
(bad)
(bad)
dec
or
adc
jmp
pushf
js
enter
pop
mov
push
xchg
mov
(bad)
inc
mov
aas
and
lock
into
jecxz
cmp
inc
mov
js
sbb
mov
jno
pusha
out
push
std
jmp
fcomp
jns
sbb
call
(bad)
(bad)
(bad)
jmp
scas
mov
adc
mov
(bad)
repnz
ret
fstp
(bad)
(bad)
(bad)
dec
mov
jecxz
push
push
stos
das
push
ja
cmp
push
pop
pop
mov
int3
cwde
aas
or
sahf
jnp
(bad)
(bad)
(bad)
call
cmp
int3
cmps
ds
cdq
outs
cmps
push
add
in
bound
jno
aad
adc
stos
(bad)
dec
iret
dec
retf
stos
jg
call
and
pop
sub
(bad)
(bad)
call
mov
loope
out
imul
pop
dec
gs
scas
push
sub
xchg
dec
jns
and
(bad)
out
clc
aad
xchg
lea
bound
out
xor
ror
or
inc
(bad)
(bad)
(bad)
inc
add
and
sub
js
mov
xor
stos
ins
xor
xchg
aam
aam
dec
aam
pop
cmc
call
test
js
inc
sbb
fmul
and
scas
lock
(bad)
jmp
push
mov
iret
leave
sub
call
call
stc
mov
xchg
aaa
xor
ret
adc
sub
es
adc
(bad)
(bad)
inc
fcom
dec
cmp
inc
aas
call
clc
call
pusha
xchg
in
int
(bad)
dec
adc
push
push
cld
mov
ins
add
mov
push
rol
mov
out
jmp
mov
test
in
push
lds
xor
mov
daa
mov
pop
or
sub
lods
(bad)
bound
nop
out
add
inc
and
lods
movaps
(bad)
xor
xchg
(bad)
call
mov
or
aam
push
iret
scas
std
sub
xlat
push
sti
repz
pop
(bad)
jmp
cli
sub
test
(bad)
retf
push
(bad)
jp
in
retf
add
mov
loopne
jmp
aaa
sti
scas
xor
inc
call
jle
rcl
(bad)
mov
ret
call
ror
mov
out
js
pop
cmps
push
push
repz
or
push
enter
std
cmc
mov
int
mov
dec
call
mov
cmp
mov
pushf
pushf
push
or
in
test
ret
je
(bad)
(bad)
dec
sbb
(bad)
inc
dec
call
js
mov
imul
pop
mov
call
(bad)
(bad)
jmp
cmc
mov
inc
and
jmp
out
mov
sti
test
inc
out
mov
fs
shl
scas
mov
jp
sbb
dec
push
or
cmps
mov
push
adc
out
cmp
jne
mov
(bad)
(bad)
dec
retf
pop
add
bound
push
(bad)
pop
repz
inc
push
aad
push
cmc
ret
(bad)
(bad)
(bad)
jmp
pop
jno
js
sbb
in
push
pop
inc
fwait
adc
sbb
dec
xchg
pop
pop
popf
pop
xor
push
loope
dec
jg
dec
cld
pop
data16
inc
(bad)
mov
imul
pop
mov
(bad)
jmp
call
div
jmp
(bad)
and
inc
out
jne
pusha
adc
pop
add
cs
(bad)
jmp
add
pop
and
ss
(bad)
fcomp
out
outs
add
neg
das
jecxz
mov
ret
dec
jae
aaa
and
pushf
cmp
scas
xchg
xchg
aad
fadd
fs
test
sub
loop
mov
ss
inc
popa
cmc
ins
cld
cdq
rcr
arpl
int
pop
cmc
add
pop
cli
mov
add
nop
xlat
xor
outs
pop
mov
or
fdiv
pop
lods
adc
(bad)
jg
into
pop
push
mov
pop
jmp
aaa
sbb
lahf
mov
(bad)
(bad)
call
out
and
cwde
lea
arpl
std
mov
jae
(bad)
(bad)
jmp
aad
adc
sbb
add
pop
pop
sub
icebp
lods
outs
cdq
das
sub
sbb
(bad)
(bad)
fistp
pop
aam
xchg
sub
das
xchg
jnp
mov
out
out
lods
lea
cdq
sub
gs
(bad)
(bad)
dec
push
out
daa
(bad)
aam
cs
retf
adc
pop
pop
adc
fnsave
jns
or
jmp
or
jecxz
loop
or
(bad)
jmp
fs
push
push
and
imul
sbb
scas
sub
test
dec
je
adc
inc
xchg
call
push
fist
icebp
pop
dec
(bad)
fistp
inc
(bad)
(bad)
(bad)
(bad)
fsincos
dec
sbb
inc
out
ret
mov
or
pop
retf
int
mov
sub
nop
sahf
push
or
(bad)
(bad)
fmul
psraw
sbb
ret
push
and
mov
adc
mov
ror
dec
jg
dec
jmp
inc
pushf
xchg
jg
jle
shl
(bad)
(bad)
(bad)
fistp
or
jge
nop
out
out
mov
push
jge
leave
imul
sbb
lahf
pop
add
fcmovnb
jecxz
popa
jo
repnz
imul
(bad)
call
and
mov
and
rcl
sbb
cmp
cli
fwait
test
(bad)
(bad)
fild
clc
ret
fs
inc
mov
ss
scas
xor
mov
pop
push
dec
test
push
dec
(bad)
sub
push
pusha
addr16
(bad)
(bad)
push
add
mov
pusha
cmp
xor
ret
cs
in
sahf
popa
and
dec
jmp
pushf
in
jo
or
imul
call
es
aas
push
nop
mov
call
cwde
push
imul
jle
outs
fs
je
cld
add
dec
ror
pop
push
or
inc
dec
pop
into
fiadd
cdq
test
push
cmp
pop
jo
pop
mov
aaa
outs
test
into
push
or
adc
or
(bad)
(bad)
call
jbe
sub
jl
stc
out
jmp
ins
dec
add
pusha
cmp
fcom
adc
mov
pushf
cmps
push
cmp
in
sar
dec
ret
(bad)
jmp
cmps
xor
fnstenv
jge
int
push
ret
mov
mov
iret
push
clc
(bad)
les
and
call
adc
(bad)
cld
cmp
jmp
sub
shr
loopne
(bad)
(bad)
(bad)
js
lahf
aas
ss
loop
jmp
test
int3
xchg
test
jp
mov
outs
add
mov
int3
repnz
inc
(bad)
fild
sbb
div
int
das
or
fwait
pop
mov
dec
add
push
hlt
xor
jl
test
nop
xchg
xchg
scas
push
mov
adc
test
mov
cmp
xchg
mov
outs
jge
pop
je
ror
xchg
cld
mov
and
add
xor
sub
sahf
mov
rcl
(bad)
mov
lods
dec
out
clc
rol
sbb
retf
(bad)
(bad)
(bad)
jmp
add
and
and
or
mov
sbb
scas
mov
lods
lods
cs
jl
mov
mov
sub
test
push
cmp
ds
outs
or
pop
lock
jmp
mov
cmps
lods
add
mov
or
out
stos
clc
call
jno
mov
fwait
cmp
mov
xor
add
(bad)
(bad)
dec
fnstenv
jmp
mov
imul
and
mov
leave
dec
and
pop
mov
dec
(bad)
(bad)
(bad)
jmp
mov
sbb
jmp
es
add
push
aas
mov
loopne
mov
pop
(bad)
repnz
add
dec
sub
xor
pusha
add
push
imul
mov
sbb
dec
inc
fadd
and
push
cld
sub
pop
or
push
test
jmp
cdq
pop
repnz
dec
jle
mov
aad
adc
mov
jge
inc
jmp
pop
imul
cmp
sbb
(bad)
or
mov
mov
push
std
fwait
arpl
sbb
stos
inc
call
jl
lods
and
(bad)
(bad)
(bad)
call
faddp
mov
sub
mov
test
aas
cwde
(bad)
popf
out
mov
test
rcl
(bad)
(bad)
fld
jl
xchg
mov
sahf
jnp
iret
push
cmc
sar
jmp
(bad)
aad
rcl
push
sub
adc
into
das
ss
(bad)
(bad)
mov
mov
mov
in
popf
mov
(bad)
(bad)
mov
mov
cmp
les
mov
adc
sub
push
sbb
xchg
and
mov
out
mov
cmc
jns
(bad)
jmp
cmps
add
xor
loop
outs
dec
and
add
stos
es
dec
lods
es
inc
clc
cmp
stos
mov
int
das
mov
push
sbb
mov
aas
stos
(bad)
(bad)
(bad)
(bad)
fiadd
or
mov
sbb
xchg
push
jmp
inc
lods
gs
add
add
jg
dec
aas
dec
mov
das
add
cmps
stos
dec
jae
(bad)
jmp
cli
call
jge
xchg
sub
sub
mov
cmp
int
sub
inc
outs
jle
add
(bad)
(bad)
push
jbe
loopne
fldenv
movs
fld
sbb
add
cs
mov
cmps
es
(bad)
(bad)
jmp
adc
add
jge
adc
out
add
sub
sbb
sub
dec
jne
imul
retf
(bad)
(bad)
push
push
mov
and
sub
in
ss
xor
push
movs
movs
fwait
mov
ss
(bad)
(bad)
(bad)
fisub
fs
and
test
loop
adc
push
leave
xchg
adc
cmp
(bad)
jmp
sbb
adc
repnz
test
stc
add
pushf
lds
add
js
cmc
repnz
mov
(bad)
lds
pop
pusha
add
jle
sub
popf
pop
out
pop
adc
jg
lods
sub
xchg
sub
mov
pop
jmp
jmp
mov
pushf
es
sbb
pushf
stos
pop
or
scas
dec
outs
xor
scas
sar
ds
dec
mov
adc
bound
add
popa
rcr
clc
sbb
sbb
cli
(bad)
call
das
or
jge
div
mov
dec
std
jmp
push
std
(bad)
loop
stos
(bad)
jmp
ror
xchg
int
push
add
xor
add
sub
push
(bad)
jmp
push
inc
add
mov
loop
out
mov
nop
and
mov
data16
jg
(bad)
cmp
rcl
or
cmp
mov
sub
add
(bad)
(bad)
jmp
push
loop
pop
div
lds
ds
push
xor
cmp
add
cmp
call
retf
dec
or
adc
mov
dec
pop
int3
sbb
inc
mov
in
ficomp
push
(bad)
in
pop
cmp
or
sub
test
lods
mov
mov
pop
sbb
scas
shr
lock
xor
pop
push
xor
in
loopne
inc
lods
call
dec
adc
cs
fcomp
jmp
(bad)
pop
cmps
ret
xchg
ins
push
rcr
mov
in
jmp
cmp
out
aad
inc
xor
mov
movs
cmc
sar
(bad)
jmp
dec
cs
adc
ja
mov
adc
mov
dec
pop
mov
(bad)
(bad)
jmp
test
push
inc
aaa
fisubr
mov
mov
inc
or
mov
hlt
add
push
adc
pop
cmp
repnz
pusha
jp
aad
xchg
sar
ja
rcl
les
in
cwde
dec
in
sti
in
and
sbb
and
sbb
(bad)
push
and
ret
lahf
and
in
add
stos
xchg
fistp
ja
mov
mov
pusha
stos
leave
sar
and
repnz
or
shr
push
int
cmps
sub
sbb
(bad)
cmp
and
push
add
xchg
outs
and
cld
mov
inc
xlat
inc
aaa
mov
ret
adc
(bad)
(bad)
call
pushf
push
ror
fcmovnbe
mov
dec
fs
(bad)
pop
xlat
xchg
(bad)
push
cld
out
pop
imul
and
loop
repnz
fld
out
ret
call
add
retf
loopne
or
or
data16
xor
mov
loop
sbb
inc
jp
je
daa
repz
or
fs
inc
call
addr16
daa
xlat
in
leave
mov
xor
mov
(bad)
(bad)
dec
mov
movs
lods
loop
sbb
loopne
sti
retf
pop
psubsb
mov
push
std
(bad)
call
imul
dec
sub
or
pop
fdiv
icebp
xor
(bad)
(bad)
call
pop
lock
movs
push
add
iret
mov
adc
or
and
push
add
and
(bad)
(bad)
inc
xor
inc
ret
push
das
mov
inc
ins
test
mov
dec
mov
push
jne
fs
pop
int3
iret
add
adc
mov
pop
adc
pop
pop
mov
xlat
aad
imul
(bad)
call
mov
mov
cmps
push
and
cld
(bad)
sahf
lds
out
(bad)
cmp
adc
(bad)
outs
cli
fcom
dec
mov
enter
hlt
in
mov
call
push
dec
loope
aam
in
jle
es
(bad)
(bad)
fbstp
xor
(bad)
mov
clc
cwde
cmps
mov
dec
out
nop
enter
fadd
arpl
mov
xchg
lahf
or
loope
and
push
mov
scas
push
cli
dec
rcl
sahf
sar
lods
(bad)
(bad)
(bad)
push
out
pop
jno
dec
shl
enter
adc
xor
mov
(bad)
(bad)
(bad)
cmp
push
or
rcr
lock
cmp
(bad)
pop
dec
call
test
aam
mov
repnz
rcl
lds
aaa
cmp
iret
shr
cmc
popf
jne
or
sbb
mov
push
mov
imul
inc
pop
adc
cli
(bad)
out
mov
pusha
adc
inc
data16
cmp
cmp
(bad)
call
add
adc
lods
dec
das
mov
mov
xchg
dec
cmps
add
cld
call
mov
retf
int3
xchg
pusha
inc
dec
push
or
mov
(bad)
(bad)
dec
ror
out
push
rcr
mov
cmps
xchg
xor
sub
mov
sti
jge
pop
imul
lahf
push
or
fild
mov
xchg
inc
jmp
pop
mov
cwde
xchg
sub
lahf
clc
(bad)
(bad)
call
fld
test
cwde
fs
and
arpl
and
mov
test
std
fisttp
mov
pop
and
rcr
(bad)
(bad)
push
adc
(bad)
cwde
dec
std
sbb
mov
ins
sbb
add
mov
(bad)
(bad)
in
inc
or
mov
sbb
mov
sbb
cmps
sub
jl
cmp
ins
sub
(bad)
(bad)
cmp
icebp
(bad)
mov
addr16
mov
pop
dec
daa
mov
add
jle
xor
xor
cli
inc
(bad)
xchg
cli
icebp
cmp
repz
xor
shl
jno
adc
inc
fisttp
daa
cmp
(bad)
shl
or
mul
or
jg
cmps
cmp
lods
mov
jp
enter
(bad)
push
scas
or
mov
sbb
aad
push
jle
mov
push
mov
fs
imul
mov
or
call
into
rcr
xchg
outs
mov
pop
(bad)
clc
add
push
push
call
addr16
jbe
dec
mov
pop
stc
or
inc
inc
into
js
outs
imul
pop
rcl
aam
out
psubq
(bad)
fcomip
or
dec
or
shr
mov
mov
and
lahf
pop
hlt
mov
sbb
bnd
pop
mov
lahf
int
(bad)
(bad)
jmp
mov
inc
stc
aaa
aas
mov
inc
cmp
iret
out
xchg
push
gs
push
lock
ins
inc
mov
ins
jp
mov
(bad)
(bad)
call
fwait
clc
push
add
pusha
ror
xchg
and
and
jl
aaa
sub
popa
mov
mov
sti
test
loop
das
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
call
sahf
shl
xlat
ret
mov
fstp
loop
cmps
popf
dec
sbb
(bad)
(bad)
inc
or
adc
jmp
repz
loop
cmp
outs
inc
scas
ja
inc
jle
push
sti
inc
ds
push
pop
popa
ret
pop
(bad)
inc
jmp
arpl
pop
imul
repz
adc
inc
jp
sbb
int
sub
cmp
out
(bad)
(bad)
(bad)
fldlg2
pushf
sti
jae
int
pop
sub
xchg
test
jge
and
push
sub
sbb
or
je
outs
clc
(bad)
dec
ins
(bad)
nop
xor
mov
lods
xor
and
stos
pop
arpl
(bad)
(bad)
(bad)
dec
xchg
jg
sbb
rcr
imul
jge
cld
test
addr16
or
(bad)
(bad)
inc
popf
xchg
pushf
xchg
ins
adc
cmp
out
test
jp
inc
xor
arpl
xchg
push
or
sar
test
add
sbb
inc
push
pusha
call
lahf
cmp
in
cmp
xchg
xor
popa
test
push
push
arpl
or
sbb
jmp
xchg
inc
sub
lods
push
(bad)
jmp
adc
arpl
inc
stc
dec
or
dec
lea
cmps
outs
xor
aas
dec
jnp
cs
pop
sbb
and
retf
imul
aam
int
add
or
cmps
push
mov
jl
dec
stc
dec
or
ss
arpl
daa
lock
aad
ja
xchg
or
(bad)
dec
and
ror
mov
lods
push
out
pop
mov
pop
push
add
(bad)
cmp
or
pop
inc
std
ror
movs
fimul
pop
fnstsw
(bad)
jmp
mov
sti
out
or
jg
mov
scas
test
mov
push
gs
mov
ds
(bad)
mov
(bad)
(bad)
(bad)
js
setg
int
pop
push
movs
sbb
mov
cmc
aad
adc
repnz
xchg
mov
or
fisttp
xchg
inc
jb
(bad)
leave
leave
dec
sbb
fldcw
(bad)
(bad)
mov
inc
(bad)
test
retf
mov
lea
inc
cld
inc
(bad)
pop
xor
push
fisub
jle
out
stos
(bad)
(bad)
(bad)
dec
out
into
xchg
or
bound
mov
inc
sbb
mov
mov
out
test
dec
add
cmp
(bad)
pop
xchg
jl
or
mul
push
mov
(bad)
(bad)
call
mov
sti
cwde
xchg
pop
loope
mov
push
mov
xor
addr16
(bad)
(bad)
(bad)
mov
(bad)
(bad)
cmp
mov
shr
xchg
fnstcw
sub
cmc
sar
scas
fwait
xor
(bad)
jmp
scas
cmps
data16
fwait
dec
enter
sahf
xchg
es
xchg
push
std
movs
cmp
cmp
(bad)
mov
sbb
inc
jne
loopne
sahf
or
or
push
and
out
xor
es
mov
cmc
and
jnp
jecxz
cmp
cmp
(bad)
mov
pop
loopne
inc
push
cs
stos
sbb
xchg
aas
sub
or
gs
ret
jae
cli
aad
xchg
rcl
out
(bad)
push
inc
add
dec
popa
push
cmc
in
rcl
outs
shr
cmp
pop
lock
aam
mov
add
movs
pop
ja
add
cwde
push
push
data16
(bad)
(bad)
(bad)
push
and
xor
rcr
into
add
pop
mov
(bad)
mov
cmp
jmp
and
cmps
mov
jl
inc
xor
bnd
(bad)
jmp
pop
mov
aas
in
out
clc
enter
fwait
pop
mov
ja
call
fdivr
dec
sbb
int3
in
nop
jbe
or
mov
loopne
rcr
xchg
dec
fcomip
(bad)
dec
mov
test
fsubr
jg
out
call
not
inc
addr16
push
aam
and
je
clc
pusha
and
xchg
into
mov
dec
aam
jecxz
sbb
jmp
test
lock
jl
inc
cmp
(bad)
(bad)
(bad)
push
jmp
push
dec
sub
mov
cmps
fmul
(bad)
(bad)
fistp
adc
hlt
xchg
daa
addr16
cdq
xor
dec
ret
loop
retf
cmc
fwait
xchg
call
sbb
outs
mov
push
pop
fincstp
jle
(bad)
(bad)
jg
(bad)
or
push
js
xor
(bad)
(bad)
push
mov
in
lods
cli
jnp
ds
sbb
fbld
add
xchg
adc
cmp
xor
sub
out
es
(bad)
call
call
cld
mov
xchg
cmp
pop
xor
pop
dec
out
enter
clc
jns
sahf
mov
add
push
sub
pusha
mov
gs
xor
push
mov
fdiv
(bad)
(bad)
(bad)
(bad)
in
out
adc
(bad)
lods
fcomp
into
pop
adc
in
mov
daa
mov
sbb
ret
sub
cld
jl
dec
mov
loope
or
call
mov
pop
push
das
mov
cs
jmp
loopne
lahf
mov
popf
jge
aas
nop
fld
pop
push
and
(bad)
(bad)
(bad)
(bad)
jmp
stos
fidiv
push
add
xlat
outs
sbb
mov
stc
pop
pop
and
xor
xchg
jb
(bad)
(bad)
(bad)
inc
loope
dec
out
mov
addr16
(bad)
jl
in
adc
pop
mov
(bad)
(bad)
call
cwde
pop
push
add
loopne
jns
dec
push
cmc
xchg
neg
mov
dec
jmp
call
movs
mov
aaa
jecxz
popf
bound
mov
sti
call
(bad)
dec
mov
sti
mov
shr
sub
xor
dec
push
mov
sar
ins
cld
jmp
mov
(bad)
(bad)
(bad)
call
cmp
hlt
test
adc
out
xlat
mov
cdq
or
cmp
sub
data16
stos
inc
jmp
fadd
jns
cmp
(bad)
jmp
call
xor
sub
in
pop
and
fcomp
(bad)
(bad)
out
xor
std
jno
jg
xor
cmp
push
ret
ins
adc
std
fsub
pop
push
mov
mov
fdivr
call
mov
push
jmp
fnstsw
or
(bad)
push
imul
neg
fst
jle
mov
or
push
sbb
dec
outs
call
(bad)
jmp
jle
pushf
push
frstor
sub
mov
cld
mov
jmp
dec
addr16
jl
shr
aaa
call
pop
lods
fisubr
paddsb
inc
xor
imul
mul
mov
and
mov
jp
sar
push
push
lock
mov
fdivr
mov
mov
cwde
xor
(bad)
jnp
inc
jmp
cmp
inc
mov
out
cmp
and
test
mov
cmp
mov
or
inc
inc
inc
in
jmp
call
mov
loope
sub
pop
sub
or
jmp
adc
sti
add
call
shl
and
jb
xchg
(bad)
jg
cmp
ss
sti
rcr
mov
stos
lea
loope
push
pop
dec
mov
aad
inc
push
icebp
movs
dec
jnp
nop
(bad)
jmp
push
xchg
push
jne
inc
js
dec
sub
call
mov
lea
cmc
fsub
into
push
daa
pop
mov
inc
sbb
repz
add
stos
add
mov
xor
ss
enter
scas
mov
call
aam
adc
adc
mov
mov
mov
cld
push
fsub
loope
int3
cmp
pop
inc
inc
lods
push
add
sbb
fmul
push
pop
rcr
xlat
push
retf
outs
jp
xor
add
jb
jb
xchg
push
add
push
sbb
imul
int3
repnz
data16
mov
mov
dec
shr
loop
fcmovnbe
dec
je
add
adc
add
push
inc
sar
outs
xchg
mov
(bad)
jp
shl
push
inc
adc
ds
fimul
add
int
scas
out
std
(bad)
(bad)
dec
pop
cld
adc
sbb
jno
sbb
cmp
shr
push
sbb
icebp
cld
(bad)
call
xor
or
dec
fisub
fidivr
inc
add
movs
sbb
(bad)
(bad)
fisttp
sbb
pop
sub
mov
jmp
mov
out
adc
dec
mov
call
sahf
ficomp
sub
mov
cdq
addr16
push
pop
adc
fadd
dec
add
mov
pusha
imul
add
(bad)
(bad)
jg
ss
and
leave
js
in
cmp
sahf
movs
int3
call
cwde
jne
(bad)
(bad)
(bad)
dec
sbb
(bad)
outs
inc
cmp
mov
mov
jne
sar
lea
mov
outs
cli
dec
and
sbb
outs
xor
mov
and
iret
ficom
int
sahf
mov
stos
scas
jp
(bad)
(bad)
inc
shr
into
outs
sbb
sbb
daa
dec
pop
mov
xchg
mov
jnp
add
add
pop
push
dec
(bad)
(bad)
(bad)
out
xor
push
fstp
out
aad
mov
loopne
ins
shl
aaa
sbb
pop
(bad)
cdq
cdq
je
dec
sti
pushf
(bad)
(bad)
(bad)
jmp
push
jmp
adc
push
jns
inc
js
jbe
ret
aad
sbb
mov
(bad)
jmp
nop
aad
xor
sub
repnz
jb
xor
fcomp
dec
dec
jg
pop
push
int3
pop
add
pop
lea
and
retf
call
inc
jns
(bad)
inc
mov
push
retf
or
mov
xchg
dec
cmp
enter
sbb
(bad)
(bad)
(bad)
inc
call
adc
and
jns
test
ds
cmps
sbb
jecxz
clc
(bad)
fldcw
iret
dec
sbb
mov
outs
mov
cmp
and
mov
mov
(bad)
cmc
sahf
mov
shl
add
mov
arpl
int
fadd
dec
fst
pusha
or
enter
into
jl
lock
das
(bad)
rcl
cmp
pusha
add
sub
inc
lea
lock
inc
mov
dec
clc
inc
add
mov
loope
mov
add
(bad)
(bad)
inc
aad
sbb
add
jnp
hlt
ja
xchg
(bad)
cmp
cmp
xlat
jmp
pop
sub
mov
push
and
mov
xchg
mov
jmp
scas
cmp
idiv
pusha
std
xor
into
je
jg
loop
pop
xor
adc
retf
push
xchg
in
cmp
sub
jmp
(bad)
xchg
jns
xor
xlat
shl
push
add
adc
(bad)
call
mov
jmp
jnp
adc
pushf
arpl
in
retf
adc
pop
xor
dec
jns
cmp
dec
mov
jl
push
sub
mov
retf
icebp
pop
xor
scas
dec
pushf
or
xchg
aas
retf
(bad)
aas
and
call
cmc
call
popf
rcl
das
test
dec
movs
sub
push
adc
sub
jmp
xchg
jae
dec
xor
ret
cli
dec
out
out
xchg
sahf
cmp
pop
lock
adc
jecxz
aad
movs
mov
nop
mov
mov
inc
pop
or
(bad)
aad
push
lods
popf
xor
fist
adc
inc
pop
mov
sub
ja
out
ror
int
sbb
leave
outs
mov
(bad)
jmp
aaa
retf
mov
and
push
enter
push
sbb
xor
rcr
xchg
(bad)
jl
shl
cmc
inc
(bad)
push
dec
fsub
addr16
(bad)
dec
data16
ret
and
add
(bad)
(bad)
dec
cwde
(bad)
push
inc
int3
cmps
jecxz
data16
hlt
xor
cwde
xor
rol
sub
sbb
movs
pop
sub
rol
bound
cmps
je
mov
movs
pop
and
call
inc
retf
in
out
in
popf
setp
mov
pop
xchg
(bad)
into
test
mov
jge
mov
mov
pushf
add
out
pop
stos
jp
es
(bad)
(bad)
(bad)
call
mov
(bad)
popf
sub
js
push
fldenv
das
mov
or
pop
into
add
xchg
(bad)
(bad)
(bad)
call
push
(bad)
in
lds
push
ja
cmp
loope
(bad)
test
sub
cmp
add
jmp
mov
pop
xchg
push
dec
(bad)
std
cmp
dec
or
mov
inc
imul
sbb
push
pop
pop
jns
lock
inc
(bad)
jmp
or
cmp
stc
fild
out
clc
(bad)
(bad)
inc
loopne
bound
or
out
mov
adc
aam
pop
test
ss
call
xchg
inc
add
(bad)
lea
add
and
or
(bad)
(bad)
jg
and
and
mov
jno
push
stc
repnz
outs
cmp
ficomp
cmc
and
movs
jnp
push
call
stos
push
call
sbb
imul
jae
repnz
in
mov
xor
dec
test
(bad)
gs
pop
stc
cwde
pop
add
clc
mov
cmp
les
cmp
in
push
shr
pop
inc
movs
icebp
pop
aam
adc
dec
and
push
out
xor
jmp
in
icebp
pop
add
push
dec
add
xor
cld
jmp
jg
fisttp
dec
icebp
pminub
ins
push
repnz
adc
movntq
fild
cdq
dec
cld
(bad)
(bad)
(bad)
cmp
sbb
jb
sub
int
sub
out
cmp
add
enter
add
xor
fiadd
or
test
sbb
std
mov
lock
(bad)
cmp
adc
jecxz
jo
arpl
pushf
mov
imul
inc
and
ret
ss
or
sahf
mov
inc
pop
ud0
sub
pop
xlat
(bad)
imul
xchg
and
mov
sar
jg
shr
sub
xchg
pop
xor
movs
stos
(bad)
(bad)
call
cmp
ds
or
push
jo
xor
hlt
bound
enter
cmp
out
mov
jmp
jle
xchg
cmp
push
ret
rcl
and
push
hlt
into
loop
xchg
xchg
out
pop
mov
mov
(bad)
(bad)
fdivr
cmp
push
mov
pop
fdiv
dec
dec
pop
jmp
int
scas
outs
(bad)
(bad)
(bad)
dec
pop
push
pop
aad
mov
cmp
adc
pand
push
(bad)
(bad)
dec
push
xchg
and
mov
xor
or
(bad)
pop
dec
push
inc
ret
mov
enter
push
mov
mov
fwait
shl
(bad)
dec
lock
imul
or
pop
dec
retf
pop
push
pusha
mov
mov
xchg
and
(bad)
xchg
jno
pop
aaa
add
jg
rcr
dec
jo
and
fnstsw
dec
pusha
ret
rcr
mov
repnz
or
and
or
(bad)
out
stos
movs
xchg
ret
ficom
mov
je
repz
(bad)
aaa
or
and
push
dec
sbb
mul
inc
and
outs
(bad)
fs
jecxz
inc
out
pop
ins
and
pop
inc
pop
cwde
lods
jle
(bad)
call
push
ja
push
dec
mov
or
mov
push
sub
sub
(bad)
(bad)
inc
ror
sbb
pop
out
jmp
ins
adc
call
jl
xchg
cdq
mov
xor
pop
cld
sbb
loop
fwait
outs
mov
sbb
ret
hlt
dec
xor
(bad)
inc
mov
cdq
out
pop
adc
clc
rol
out
pop
dec
inc
adc
mov
cmps
or
lods
addr16
dec
push
cld
xor
shl
enter
movs
fild
cmc
pop
adc
(bad)
xchg
push
xor
(bad)
loope
cmp
call
(bad)
(bad)
(bad)
dec
push
movs
mov
dec
and
mov
and
cmps
jg
sbb
ss
add
jg
cld
push
mov
jecxz
rcl
pop
movs
mov
aas
(bad)
(bad)
(bad)
jmp
in
iret
xchg
push
iret
inc
popf
sub
cwde
mov
mov
mov
push
sbb
(bad)
call
sub
mov
lock
xor
aad
push
sub
(bad)
call
pop
add
sub
adc
inc
inc
pop
cmps
sahf
adc
das
std
test
xor
or
repnz
loop
rol
ins
dec
mov
imul
addr16
sbb
(bad)
(bad)
inc
aas
jecxz
dec
adc
jmp
out
xchg
test
push
test
in
in
ins
test
(bad)
(bad)
(bad)
(bad)
call
sub
xchg
loopne
lods
mov
outs
cmp
jne
mov
jo
xor
dec
es
cld
cmc
dec
inc
add
sub
sahf
ret
fwait
xchg
sub
jl
or
call
jge
adc
mov
adc
mov
pusha
out
gs
test
mov
inc
aas
mov
inc
jmp
mov
jecxz
mov
cmc
imul
(bad)
(bad)
(bad)
clc
sub
leave
adc
add
leave
fidiv
inc
retf
jecxz
jp
aas
(bad)
aam
push
shr
loope
xchg
sbb
mov
adc
jmp
enter
xchg
(bad)
or
call
adc
or
(bad)
(bad)
mov
jge
push
das
mov
lock
fmul
(bad)
(bad)
cmp
xor
cmp
ss
dec
push
mov
(bad)
(bad)
inc
stc
jecxz
jnp
sbb
mov
(bad)
xor
aad
ins
xchg
hlt
call
mov
inc
rol
fist
adc
mov
stos
sub
test
mov
addr16
mov
fld
inc
vmovapd
xchg
jp
daa
mov
or
call
xor
das
cld
imul
lock
fs
mov
push
and
inc
xchg
add
or
mov
sub
std
fld
fild
lahf
jp
(bad)
inc
mov
call
jmp
call
and
aad
out
push
fidiv
push
clc
mov
stc
or
jg
cs
(bad)
es
lea
pop
cli
sbb
(bad)
(bad)
jmp
cmps
test
aas
ins
and
pop
inc
fist
mov
lods
(bad)
inc
mov
mov
mov
pop
or
mov
sbb
bound
jg
cdq
jns
jo
xor
retf
xchg
scas
push
jmp
cli
fild
cs
and
pushf
cwde
inc
mov
add
out
pop
scas
mov
ins
add
dec
loope
jmp
jbe
mov
(bad)
(bad)
call
in
xchg
dec
sub
xchg
pop
xlat
cmps
popf
pop
inc
shl
mov
push
outs
(bad)
(bad)
(bad)
jmp
sub
aam
stos
jmp
pop
test
pop
push
popa
pop
inc
loop
mov
outs
mov
imul
sar
cdq
push
sub
shl
test
bound
inc
cs
dec
mov
stos
loope
(bad)
(bad)
(bad)
sti
mov
stos
dec
rcl
and
cmc
fidivr
xlat
dec
in
test
push
cli
mov
movs
retf
icebp
(bad)
(bad)
jmp
mov
loopne
adc
mov
test
dec
jl
dec
inc
repz
in
sbb
loop
mov
(bad)
mov
sub
(bad)
xchg
scas
push
sub
adc
ds
mov
jp
es
xor
call
add
push
xor
shl
push
lods
mov
xor
mov
les
mov
(bad)
call
shl
sbb
cmps
inc
sbb
sub
xlat
cmps
imul
pop
jmp
shr
loope
test
jmp
adc
sar
lock
adc
dec
(bad)
push
xor
movs
stos
gs
and
leave
push
sub
jbe
or
push
xchg
(bad)
fcomip
adc
jnp
or
call
push
aaa
xchg
fcos
(bad)
(bad)
push
or
cmp
fnstsw
pop
cmp
stos
lods
pushf
jne
xchg
mov
iret
pop
sub
cld
(bad)
jmp
call
inc
mov
(bad)
retf
sbb
mov
inc
inc
dec
(bad)
(bad)
(bad)
jmp
fs
add
cmc
mov
jae
(bad)
mov
adc
aaa
jl
fcomip
(bad)
cmp
pushf
and
mov
test
fidiv
in
add
add
fst
push
int3
int
push
and
pop
xor
fcomip
icebp
daa
mov
and
ficom
dec
(bad)
inc
or
(bad)
(bad)
inc
fcom
int3
sahf
pop
mov
lea
(bad)
out
jo
aad
ins
and
(bad)
(bad)
inc
movs
ins
movs
xchg
sbb
push
jg
retf
dec
in
mov
push
ins
jo
dec
xor
or
dec
pop
push
inc
(bad)
mov
pop
cmp
xor
jae
and
mov
(bad)
inc
xor
rep
adc
dec
sub
inc
loope
mov
loopne
sbb
push
bound
not
and
jns
pop
dec
pop
mov
in
dec
(bad)
call
pop
movs
bswap
addr16
pop
(bad)
fnstsw
jb
shl
(bad)
(bad)
jmp
ins
mov
gs
or
test
mov
repnz
pushf
xchg
or
gs
(bad)
jmp
popf
xchg
sti
lods
sti
hlt
inc
(bad)
test
cld
and
(bad)
dec
push
push
daa
jne
ss
jne
mov
loope
shl
add
sbb
fwait
ins
jp
(bad)
(bad)
jmp
and
jns
iret
gs
adc
rol
out
sub
outs
mov
dec
push
jo
int3
mov
das
or
adc
mov
jmp
adc
bound
jl
js
sub
mov
dec
fs
clc
xchg
xchg
jno
dec
enter
push
sbb
lea
jl
scas
(bad)
(bad)
jmp
lods
data16
push
lea
jecxz
leave
stos
imul
rcl
fisttp
push
mov
(bad)
fwait
and
les
cmp
dec
cli
mov
(bad)
repz
ret
(bad)
(bad)
fisttp
in
out
mov
arpl
ficomp
jle
fadd
aad
mov
(bad)
(bad)
cmp
lods
and
jo
cmc
jne
cli
dec
jo
inc
bound
lock
std
sti
(bad)
mov
mov
xchg
xchg
(bad)
jmp
ficom
add
ins
fsub
add
adc
fisttp
mov
xchg
lods
gs
inc
mov
push
or
mov
push
ins
mov
cwde
lock
sbb
(bad)
in
cli
retf
inc
sbb
ja
in
mov
mov
cmc
xchg
pop
add
scas
mov
ins
cld
call
outs
jae
mov
add
push
mov
fcmovnu
(bad)
(bad)
(bad)
jmp
inc
xlat
shl
rcr
add
fstp
push
mov
mov
(bad)
into
(bad)
xchg
dec
lock
les
(bad)
ja
xor
add
movs
(bad)
(bad)
(bad)
jmp
adc
cmp
dec
cmp
out
shl
and
mov
enter
je
jmp
(bad)
ficomp
imul
imul
sub
call
xlat
cmp
imul
push
shl
cmp
sbb
lods
lods
test
stos
mov
add
xchg
das
sub
int
mov
or
adc
inc
pop
and
inc
hlt
mov
out
sbb
loop
loopne
mov
inc
loop
leave
cdq
into
jmp
mov
mov
xor
clc
outs
movs
lock
inc
push
test
mov
push
dec
mov
cld
out
xor
int
mov
jl
into
clc
jl
imul
in
(bad)
(bad)
(bad)
push
or
cmp
xchg
cmp
jl
ss
sub
sub
mov
ja
jmp
xor
stos
ins
mov
(bad)
cdq
and
jo
aaa
enter
dec
mov
xchg
adc
ret
pushf
mov
(bad)
(bad)
(bad)
call
js
xchg
xor
sti
loopne
jae
test
sub
scas
cli
push
dec
dec
sub
cmc
test
ins
fisubr
into
(bad)
(bad)
jmp
pop
or
jmp
gs
ins
shr
jo
loope
xor
xor
std
jge
(bad)
jmp
stos
enter
(bad)
push
xor
pusha
sbb
inc
popa
mov
stc
mov
cld
xchg
mov
loopne
aam
ins
jb
pop
call
movs
xchg
nop
lahf
and
nop
dec
cmps
xchg
or
inc
sub
jmp
add
jns
push
hlt
ds
jecxz
in
push
pop
push
(bad)
(bad)
(bad)
jmp
in
sub
in
push
icebp
jl
push
(bad)
pushf
xchg
adc
pop
inc
mov
retf
dec
pop
(bad)
inc
push
loop
je
sbb
aaa
push
call
sub
iret
movs
mov
fmulp
jns
in
(bad)
(bad)
(bad)
jmp
rcr
pop
mov
test
sahf
arpl
cwde
jo
out
shl
lods
pop
sbb
dec
iret
xchg
dec
bound
nop
adc
jb
xlat
xchg
(bad)
add
(bad)
dec
sbb
gs
dec
mov
fist
xchg
(bad)
(bad)
call
mov
jns
(bad)
xchg
call
and
jmp
mov
(bad)
out
jbe
arpl
mov
pop
in
add
outs
jg
in
add
dec
sub
or
sbb
xchg
pop
sub
mov
mov
(bad)
inc
push
xchg
sar
xchg
in
je
lods
ins
adc
jp
jg
vpmacsdd
push
(bad)
jmp
and
add
jmp
adc
div
mov
(bad)
inc
and
pushf
popa
and
lock
fist
cmc
mov
fcomp
jp
mov
dec
ins
inc
test
lods
sbb
push
sahf
movs
sub
gs
pop
or
mov
and
imul
jmp
lock
mov
ret
imul
push
aam
fisttp
shr
outs
dec
scas
sar
ret
in
icebp
mov
pop
pop
les
aas
(bad)
xchg
mov
or
mov
push
and
mov
mov
imul
mov
nop
mov
retf
cs
ret
push
push
clc
push
xor
lods
add
std
(bad)
push
inc
std
outs
jmp
aam
addr16
pop
cmp
mov
div
sti
call
dec
lds
int
movs
pop
pop
aam
push
jl
cmp
in
fwait
push
sbb
outs
xor
jo
test
cmps
gs
(bad)
jg
sub
inc
and
test
in
lock
jo
es
test
clc
jmp
adc
pop
repnz
dec
adc
popf
sub
nop
pop
pop
(bad)
(bad)
jmp
das
push
dec
dec
fs
call
(bad)
test
ins
push
push
pop
enter
(bad)
call
dec
call
jmp
sbb
or
enter
aam
scas
(bad)
out
sar
jo
icebp
mov
shl
xchg
aad
addr16
(bad)
push
add
dec
jmp
(bad)
jns
mov
jge
inc
add
push
sub
jb
mov
(bad)
(bad)
(bad)
(bad)
jnp
popf
les
sub
jle
jp
gs
inc
mov
add
push
xchg
(bad)
(bad)
dec
test
in
outs
mov
push
fwait
or
pop
in
pop
(bad)
mov
(bad)
(bad)
(bad)
call
mov
sub
mov
jno
push
xor
gs
pusha
xor
inc
jmp
mov
stos
cmps
xchg
ret
(bad)
dec
push
stc
add
retf
fist
adc
retf
rcl
sbb
or
addr16
fsubr
or
adc
pop
adc
mul
rcr
stos
push
into
adc
push
popa
push
adc
inc
mov
je
cmp
add
pusha
xor
mov
call
outs
loop
stos
out
push
out
cwde
out
push
and
mov
inc
and
fldcw
in
jae
movs
fwait
cmp
(bad)
jg
adc
sbb
inc
sub
mov
cmp
pop
retf
sahf
or
pop
(bad)
fbld
hlt
cmps
jb
xor
and
icebp
and
xchg
xor
mov
std
adc
jle
retf
leave
pop
mov
dec
pop
mov
sbb
loope
clc
pusha
cmp
adc
cmc
clc
addr16
xor
xor
add
(bad)
loopne
call
cmp
(bad)
(bad)
push
adc
sub
and
loope
sub
mul
cmp
mov
mov
(bad)
(bad)
fxch
sbb
mov
pop
sbb
fldenv
xor
mov
mov
inc
mov
and
or
popa
repz
clc
ins
add
ja
push
leave
cld
inc
jno
add
jmp
call
test
(bad)
(bad)
jg
lahf
cmp
jo
mul
sahf
dec
cmp
in
and
mov
mov
lods
xchg
js
sbb
(bad)
(bad)
(bad)
fisub
loopne
pop
cmp
xor
ds
pop
mov
addr16
mov
(bad)
inc
mov
dec
or
push
shufps
retf
jno
add
(bad)
(bad)
push
push
test
test
or
rol
aad
pop
cdq
mov
in
adc
jns
add
movs
mov
and
dec
test
movs
push
leave
fidivr
dec
call
or
gs
push
jle
sub
cmp
sub
jg
call
pusha
mov
xor
loopne
jmp
out
cdq
jge
mov
call
cmp
hlt
stos
pushf
fistp
shr
jecxz
iret
(bad)
(bad)
(bad)
call
iret
ins
ja
xor
(bad)
stos
xor
sbb
fdivr
jmp
mov
(bad)
dec
ja
pushf
lods
mov
jp
pop
and
in
bswap
stc
fwait
sub
fisttp
inc
or
std
cmp
dec
lock
(bad)
(bad)
call
popa
dec
inc
pop
repnz
test
(bad)
in
fnstcw
(bad)
inc
mov
(bad)
push
push
aaa
cmp
jl
(bad)
(bad)
jg
sti
jmp
cmps
rcr
out
repz
movs
dec
cmp
push
sahf
lds
mov
sbb
out
stc
(bad)
ffreep
jmp
retf
rcr
sub
add
xchg
adc
(bad)
jmp
push
cmp
pop
imul
iret
addr16
dec
sub
fcomp
stos
ins
xchg
push
rol
aas
xchg
lods
mov
mov
(bad)
call
cld
xor
jne
ds
rcr
push
fimul
(bad)
(bad)
(bad)
call
sbb
inc
jmp
dec
mov
lods
sub
sub
pushf
dec
adc
call
movs
xchg
sbb
add
cmp
push
sbb
repnz
fxch
fld
(bad)
fnstsw
(bad)
(bad)
(bad)
call
adc
mov
xor
(bad)
jno
adc
or
test
xchg
inc
mov
dec
in
cli
mov
sbb
(bad)
call
daa
mov
shr
push
sub
or
(bad)
push
rol
mov
dec
stos
inc
loop
sub
jmp
cmps
inc
fs
lock
(bad)
fcmove
hlt
lahf
les
out
push
out
vmread
and
cli
in
fucomi
push
aas
icebp
fcomip
push
scas
fs
retf
fwait
inc
aas
(bad)
aam
sub
sbb
xchg
test
mov
(bad)
push
loop
mov
js
std
cmp
imul
mov
leave
mov
retf
call
adc
imul
(bad)
(bad)
(bad)
inc
mov
mov
cmp
xor
aas
cmp
mov
daa
inc
not
jg
sbb
push
je
out
pop
lods
fdiv
add
jo
xchg
jp
cmp
xchg
(bad)
dec
and
and
into
call
loope
dec
cld
pop
cwde
clc
call
sahf
inc
and
cld
cdq
xchg
pop
adc
add
(bad)
(bad)
call
inc
adc
push
fcomp
sbb
pop
sbb
(bad)
fdiv
(bad)
dec
cmp
in
pop
jmp
dec
or
sbb
cwde
(bad)
xchg
scas
ror
or
mov
sbb
int3
xor
sub
call
sahf
cmp
(bad)
jg
jb
xor
das
jmp
mov
sti
dec
int3
sub
xchg
adc
cmp
jp
inc
aaa
in
movs
fldl2e
mov
inc
xchg
push
test
mov
cmps
sub
jnp
in
outs
ins
ss
mov
sti
mov
leave
mov
ret
movs
inc
add
add
(bad)
jg
inc
(bad)
in
(bad)
cmp
int3
es
jae
push
mov
or
(bad)
(bad)
(bad)
(bad)
cmp
jmp
rcr
mov
dec
sbb
pop
jo
fucom
les
call
add
(bad)
push
push
sar
mov
push
lahf
push
arpl
xchg
jle
es
mov
push
daa
loop
jle
mov
aam
pop
retf
in
sbb
in
fwait
je
push
fdiv
popf
je
cli
out
loop
fdivr
(bad)
(bad)
inc
aam
pop
ss
adc
pop
add
arpl
pop
xor
fiadd
jg
adc
je
cmp
pop
pusha
fisub
jno
fist
jle
dec
pop
inc
pop
cmp
jmp
das
inc
shl
mov
push
sbb
sbb
mov
pop
mov
movs
fmul
(bad)
call
add
add
or
mov
push
mov
inc
adc
in
mov
xchg
pop
push
mov
(bad)
(bad)
(bad)
cmp
dec
hlt
mov
mov
call
into
xchg
bound
push
mov
ficomp
iret
cmp
(bad)
in
and
mov
sbb
and
ins
popa
mov
leave
cmp
inc
in
out
std
lods
mov
cli
and
(bad)
rol
and
xlat
les
in
(bad)
je
xor
fcomip
(bad)
mov
dec
aas
leave
mov
cmp
sahf
mov
dec
(bad)
out
adc
int3
xchg
jo
pop
movs
pop
sub
and
and
clc
scas
test
icebp
out
mov
fdiv
(bad)
(bad)
jmp
add
push
out
push
sub
fisttp
(bad)
repnz
jecxz
jnp
or
in
aas
or
and
(bad)
(bad)
jmp
mov
add
jne
jge
mov
push
dec
lock
push
add
das
cli
sbb
icebp
ins
cs
mov
jns
in
pop
adc
(bad)
(bad)
push
pusha
jae
es
shl
jb
push
dec
ins
mov
std
sbb
mov
cdq
hlt
xor
(bad)
dec
and
(bad)
pop
cmp
sub
(bad)
(bad)
(bad)
call
push
cmp
int
xchg
xlat
or
out
pushf
gs
jae
(bad)
cmp
enter
loop
xchg
arpl
mov
dec
adc
test
aam
lods
jp
loope
movs
stos
mov
mov
fbstp
popf
test
add
xchg
fcmovbe
jge
call
test
call
xchg
mov
pop
dec
mov
adc
fdivr
inc
(bad)
fwait
push
(bad)
rcl
jle
(bad)
in
sub
pop
mov
push
cli
push
adc
out
stos
dec
pop
pop
or
aas
add
inc
(bad)
fcomip
outs
cld
outs
dec
ins
std
enter
cmp
pushf
movs
xchg
ins
mov
lds
inc
sub
(bad)
fdivr
sbb
adc
jbe
hlt
(bad)
jmp
outs
outs
std
scas
mov
gs
or
pop
and
les
dec
call
push
pop
sbb
retf
push
std
sti
jecxz
push
in
icebp
out
out
inc
add
into
sbb
inc
mov
and
xchg
mov
bound
mov
jg
mov
mov
into
nop
jbe
or
popf
outs
mov
(bad)
(bad)
jl
dec
sub
call
aas
enter
sbb
xchg
xor
(bad)
(bad)
jmp
shr
jae
mov
sbb
jg
movs
xor
mov
cmp
call
div
imul
cld
(bad)
jmp
push
add
sub
stos
pop
push
rol
add
add
ret
call
lock
lods
out
mov
out
and
xor
or
xchg
adc
push
pushf
and
pushf
ret
stos
mov
ja
cwde
dec
push
add
mov
mov
cli
sub
(bad)
(bad)
jmp
sar
xor
push
(bad)
fsub
stc
test
pop
pop
sti
hlt
mov
cmp
jmp
mov
leavew
xchg
or
inc
dec
cdq
or
jnp
adc
fiadd
(bad)
mov
jle
mov
mov
int
jge
sub
lock
mov
mov
ins
mov
pushf
pop
loopne
jo
inc
scas
mov
sbb
and
(bad)
(bad)
call
fadd
adc
xchg
test
cmp
cmps
inc
adc
push
stos
adc
push
xchg
push
call
cld
(bad)
cld
jb
push
repnz
fisttp
cmps
and
(bad)
pop
xor
mov
pop
push
(bad)
adc
adc
add
leave
js
pop
or
push
sub
(bad)
(bad)
cwde
jg
daa
dec
adc
fild
movs
data16
dec
pop
mov
sahf
mov
ret
mov
mov
dec
retf
cmp
cmp
fcmove
(bad)
in
(bad)
aas
xor
dec
mov
pop
(bad)
lods
lahf
inc
cld
xchg
ins
pop
cdq
push
add
loopne
std
enter
sub
nop
fistp
adc
(bad)
inc
out
movs
int3
ret
cmc
fisttp
add
fisub
lods
mov
pushaw
push
test
dec
int
xchg
in
ds
add
daa
sbb
fs
(bad)
jp
cmp
dec
inc
idiv
jl
mov
dec
and
(bad)
(bad)
stc
daa
mov
call
dec
or
(bad)
add
aaa
mov
(bad)
jmp
adc
jl
je
push
mov
pop
sub
fidivr
(bad)
mov
and
jbe
scas
scas
fs
sbb
mov
inc
mov
ins
imul
pop
jmp
inc
pop
pop
pop
sbb
jnp
xlat
adc
sub
jg
je
xchg
ins
aam
dec
out
pop
fcmovb
dec
sub
enter
leave
int3
(bad)
jg
(bad)
mov
sti
out
popf
inc
or
and
jae
dec
neg
jge
(bad)
(bad)
push
jl
shl
das
repnz
fucomp
inc
repz
popa
rcr
call
call
popa
pop
inc
imul
std
mov
repnz
call
gs
mov
pop
jp
adc
(bad)
(bad)
ffreep
retf
adc
mov
pop
pushf
or
(bad)
cld
arpl
pop
sub
pop
(bad)
jnp
(bad)
fst
sub
jns
in
push
mov
push
cld
jmp
sar
jno
shl
xchg
adc
or
inc
js
(bad)
xchg
shl
jge
cld
(bad)
ds
or
(bad)
dec
hlt
out
fsub
sbb
(bad)
repz
xor
addr16
cs
(bad)
call
movs
cmp
cdq
pop
mov
popa
sub
in
lea
add
sbb
pop
jbe
sbb
aam
inc
xchg
lock
ret
mov
in
call
jg
inc
loopne
ret
xor
xchg
jge
sub
pop
add
xchg
js
fs
or
mov
int3
into
sub
aam
outs
cli
pop
lock
movs
icebp
xor
hlt
std
mov
xchg
mov
icebp
ins
ret
mov
(bad)
(bad)
jmp
add
(bad)
push
movs
xor
movs
inc
adc
jns
test
daa
jle
mov
inc
fs
test
pop
push
push
mov
lahf
jg
push
sbb
retf
pop
lea
(bad)
(bad)
call
add
test
es
(bad)
adc
fiadd
clc
push
xlat
dec
mov
xor
sub
sbb
jb
adc
mov
push
jecxz
cmp
fidivr
popf
retf
add
mov
(bad)
(bad)
std
and
fisttp
fdivrp
ins
sbb
arpl
mov
dec
mov
inc
mov
mov
test
les
(bad)
imul
and
outs
push
cli
(bad)
inc
xchg
add
out
ss
cmp
mov
jae
pusha
(bad)
(bad)
(bad)
mov
call
mov
push
daa
push
sub
out
adc
rol
out
(bad)
(bad)
(bad)
call
cmp
add
xor
aaa
rcr
and
cmc
xchg
mov
stc
fdivr
fwait
inc
cld
repz
repz
dec
daa
loop
xlat
cmp
mov
enter
mov
call
ins
xor
in
mov
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
popf
xchg
push
and
push
test
xor
sub
jmp
xor
mov
fsubr
mov
(bad)
(bad)
jmp
adc
(bad)
jl
lods
js
or
rcr
cmp
fwait
test
and
jmp
sub
out
add
imul
add
(bad)
call
pusha
jo
xor
int
inc
dec
adc
jns
cli
xchg
iret
mov
cmp
cmc
(bad)
inc
jae
add
sub
and
dec
sbb
into
pop
jecxz
jecxz
(bad)
(bad)
(bad)
jmp
push
or
cdq
std
iret
fdiv
cmps
lds
sbb
lea
dec
sti
dec
cmp
mul
and
xor
(bad)
(bad)
(bad)
(bad)
mov
call
lods
pop
dec
mov
xchg
test
ja
out
cli
push
xchg
clc
cmp
bound
ss
test
mov
xchg
sub
(bad)
out
dec
aad
mov
retf
jecxz
inc
loop
ja
cdq
add
xchg
push
xchg
sar
(bad)
jmp
add
mov
dec
unpcklps
adc
sub
(bad)
call
jne
int3
inc
sbb
inc
adc
xor
xlat
mov
imul
push
ins
lock
sbb
adc
loope
push
jmp
mov
fisttp
ja
cmc
les
pop
dec
xor
add
je
(bad)
(bad)
call
sbb
pop
mov
ds
xor
jns
pop
sbb
push
sbb
lock
ret
(bad)
(bad)
inc
cmp
repz
nop
pop
and
lods
jg
push
cmps
or
add
cld
(bad)
(bad)
inc
inc
stc
fwait
test
dec
inc
mov
push
xchg
mov
mov
(bad)
call
popa
(bad)
pushf
pop
movs
and
cmp
add
mov
(bad)
(bad)
(bad)
(bad)
js
lods
mov
cdq
pusha
outs
imul
mov
hlt
not
and
sub
(bad)
(bad)
(bad)
call
imul
sub
in
aad
call
xor
stc
call
inc
sbb
cdq
movs
xchg
fwait
cdq
or
and
or
xchg
inc
or
cmp
(bad)
call
repnz
xchg
(bad)
fnstcw
or
pop
gs
cmp
add
(bad)
(bad)
(bad)
jmp
dec
cs
fwait
scas
lods
pop
add
scas
int
and
jecxz
jns
shr
clc
jg
push
call
in
mov
clc
iret
(bad)
(bad)
jmp
xor
test
xor
and
xchg
(bad)
sub
dec
out
aad
jne
icebp
sti
sub
call
jo
xchg
test
rcl
(bad)
jg
mov
xor
mov
dec
fiadd
or
sub
clc
popf
daa
push
pop
pop
sub
sar
aad
scas
popa
(bad)
fadd
or
repnz
or
cwde
fwait
out
push
dec
adc
dec
or
out
jle
je
and
or
push
adc
pop
jae
and
(bad)
mov
mov
add
jo
icebp
shr
in
icebp
push
(bad)
gs
movs
cmp
aaa
aaa
or
cli
cs
fist
pushf
(bad)
(bad)
(bad)
jg
in
pop
add
fcmovnbe
add
push
dec
add
mov
addr16
or
lock
nop
mov
or
call
inc
stos
mov
mov
jg
into
(bad)
(bad)
(bad)
push
popa
sbb
dec
jnp
mov
push
shl
xchg
gs
mov
pop
pop
and
fcomip
(bad)
(bad)
mov
xor
fadd
pop
xor
iret
jp
sahf
outs
imul
xor
push
sbb
dec
(bad)
stc
mov
mov
(bad)
(bad)
(bad)
inc
sti
repnz
sbb
imul
pop
sbb
sbb
(bad)
jg
pusha
sub
xchg
xor
ins
cmc
cmp
jns
js
and
jmp
test
(bad)
inc
or
jg
mov
xchg
inc
inc
arpl
shl
test
fdiv
mov
mov
test
inc
jecxz
mov
xchg
and
or
mov
fbld
out
dec
push
push
sub
int3
xor
int3
pop
xor
xchg
loopne
loopne
mov
sbb
pop
xchg
loopne
pop
dec
es
les
push
and
scas
clc
icebp
dec
icebp
pop
mov
inc
aaa
or
repnz
(bad)
(bad)
(bad)
(bad)
mov
ror
push
or
or
xchg
dec
mov
or
pop
repnz
mov
push
cs
scas
mov
xchg
repnz
out
(bad)
dec
je
dec
pop
mov
cmp
sub
sub
push
add
(bad)
call
pop
in
aam
and
push
and
test
outs
ja
clc
jg
or
bound
push
mov
cwde
outs
inc
(bad)
data16
(bad)
(bad)
cmp
jmp
daa
adc
xor
cmc
push
test
call
scas
(bad)
(bad)
(bad)
jmp
mov
rol
jnp
hlt
add
ja
dec
mov
mov
fnstenv
(bad)
call
(bad)
ins
test
mov
xchg
(bad)
and
mov
cmp
push
xchg
mov
inc
(bad)
(bad)
(bad)
(bad)
cmp
call
(bad)
push
sub
cmp
in
push
mov
cdq
je
cld
mov
out
pop
rcl
(bad)
(bad)
(bad)
dec
ds
add
dec
(bad)
mov
inc
cli
lock
cmps
aaa
aaa
out
fs
call
add
jp
mov
sbb
out
js
std
xchg
jmp
xchg
outs
push
mov
das
jnp
add
jmp
sti
call
lea
aaa
das
out
lods
inc
paddw
je
xchg
movs
fs
(bad)
(bad)
push
mov
cmps
xchg
sub
gs
(bad)
xchg
outs
adc
jno
out
sahf
ret
sti
cmp
fadd
jl
mov
and
(bad)
into
dec
lock
mov
movs
sub
mov
mov
dec
(bad)
(bad)
(bad)
call
sbb
in
sbb
ret
imul
push
cmp
dec
mov
(bad)
jmp
clc
shl
jae
sub
sub
fld
call
clc
(bad)
call
icebp
fcomp
sub
clc
cli
(bad)
(bad)
jmp
push
inc
add
out
jo
or
movs
add
cmp
and
call
jmp
(bad)
sub
test
inc
out
mov
inc
psrld
(bad)
jg
inc
pop
stc
sub
das
mov
ja
clc
mov
scas
bound
int
(bad)
(bad)
ds
test
inc
pextrw
mov
mov
loop
mov
test
pushf
and
movs
cmc
loop
(bad)
(bad)
(bad)
std
push
cmp
in
dec
es
ret
dec
jle
dec
cmps
pop
ds
adc
loope
cmp
mov
leave
je
adc
(bad)
(bad)
dec
jmp
mov
pop
cwde
jne
mov
dec
adc
call
hlt
mov
(bad)
(bad)
inc
jmp
mov
mov
xchg
inc
dec
adc
rol
xchg
fcomp
(bad)
inc
sahf
add
xor
xchg
scas
movs
ss
cmp
lods
cmp
ret
leave
mov
xchg
shl
ins
aad
int
mov
lea
popa
and
(bad)
fistp
in
xchg
arpl
xor
popf
add
aam
outs
retf
sbb
clc
adc
out
jb
(bad)
(bad)
dec
and
sub
xor
jecxz
mov
mov
sub
call
xlat
adc
(bad)
test
and
fild
ret
dec
push
jbe
sbb
out
test
(bad)
(bad)
call
inc
mov
ins
cld
stos
push
stos
ins
popf
dec
enter
xor
or
ss
mov
(bad)
(bad)
cmp
test
js
in
cmp
unpcklps
leave
jge
js
jae
mov
cmp
cmp
push
dec
shl
mov
in
outs
mov
fnsave
(bad)
inc
mov
std
or
cli
pop
fadd
sahf
push
popf
sbb
cmp
pop
lods
jae
(bad)
jmp
mov
push
xor
inc
into
imul
sub
nop
cli
dec
mov
dec
push
add
mov
mov
ficom
adc
sahf
and
sar
dec
xchg
sub
lds
or
xchg
movs
cmp
aam
aad
xor
mov
and
mov
sbb
xor
sbb
adc
hlt
dec
ins
je
jns
xchg
cmp
inc
loop
cwde
cld
(bad)
sub
pop
gs
fs
pop
mov
enter
or
dec
cld
fwait
pop
cld
sbb
push
cmp
popa
push
rcr
sbb
outs
xchg
mov
jno
call
sbb
mov
push
fucomp
xchg
xor
mov
outs
xor
call
cwde
push
scas
fild
(bad)
inc
adc
scas
pop
aaa
cmc
sar
sti
cmp
(bad)
call
fistp
sub
hlt
pop
push
mov
fistp
(bad)
(bad)
(bad)
inc
inc
loopne
mov
gs
mov
mov
pop
xor
adc
push
jmp
das
cli
or
cmp
jo
jbe
hlt
cdq
mov
dec
loopne
and
loopne
(bad)
(bad)
ficom
out
adc
jle
shl
sub
lds
scas
call
sub
cmp
outs
inc
mov
add
(bad)
popa
aaa
dec
shl
daa
sbb
(bad)
aam
out
repz
jno
std
mov
retf
sbb
dec
test
cmps
jns
or
and
or
fcmovnb
mov
sub
enter
jbe
aas
pop
sbb
mov
mov
pop
or
(bad)
push
mov
cmp
cmp
sub
mov
imul
(bad)
(bad)
call
shr
sub
cmp
pop
sub
in
ins
push
add
cld
addr16
mov
(bad)
dec
push
pop
push
mov
push
pop
xor
in
jns
push
mov
(bad)
(bad)
jmp
outs
(bad)
aad
fiadd
and
mov
pop
dec
inc
push
sbb
pop
(bad)
call
gs
or
dec
retf
les
cld
xor
add
mov
(bad)
(bad)
jmp
mov
test
hlt
sbb
adc
inc
into
leave
pop
xor
cmp
lods
add
(bad)
(bad)
(bad)
dec
pusha
xor
add
test
mov
jl
or
movs
scas
ss
loop
dec
enter
(bad)
cmp
leave
mov
outs
and
int
jle
out
(bad)
ins
adc
and
push
push
stos
nop
js
fcomp
adc
rcl
xchg
(bad)
(bad)
(bad)
inc
pop
fnsave
push
mov
or
stos
aad
sbb
ret
std
ss
mov
xor
call
sbb
stos
add
xor
sub
xlat
lods
sub
(bad)
(bad)
inc
lock
arpl
call
ds
les
ss
dec
push
xlat
jmp
and
xor
and
(bad)
(bad)
mov
mov
mov
ret
jecxz
std
jne
in
dec
out
stos
xor
mov
mov
mov
fwait
aas
add
aaa
mov
xor
(bad)
(bad)
jmp
ins
(bad)
push
mov
popf
stos
xchg
add
mov
(bad)
sar
xor
(bad)
mov
pop
sbb
cmp
jle
cmp
or
(bad)
out
push
mov
stos
sbb
xchg
(bad)
(bad)
(bad)
stc
icebp
retf
(bad)
push
retf
push
fnstcw
dec
outs
loope
mov
and
fdiv
nop
clc
(bad)
dec
ret
jp
push
sub
pop
add
test
(bad)
fbld
call
popf
adc
pop
jb
mov
aaa
stos
sbb
dec
scas
mov
gs
or
ret
(bad)
(bad)
inc
outs
xor
sub
push
in
mov
test
inc
(bad)
(bad)
push
sub
or
inc
xor
sub
xchg
xchg
fimul
inc
sbb
int
mov
call
test
je
std
sbb
shr
jmp
add
jns
mov
xchg
pop
stos
cmp
sbb
mov
mov
shl
(bad)
dec
jle
out
bound
retf
mov
jno
lds
retf
fimul
shr
pop
js
dec
add
mov
xchg
cmp
loopne
call
nop
push
aam
lea
xchg
dec
shl
popf
hlt
mov
xsha256
cmps
xlat
sub
(bad)
call
leave
pop
ds
push
push
(bad)
sub
(bad)
mov
call
ss
cmovbe
retf
pop
dec
mov
mov
(bad)
dec
test
mov
add
stos
xor
and
(bad)
jmp
loop
ss
mov
push
das
(bad)
pop
cld
(bad)
fbstp
rol
imul
ror
sbb
or
sbb
je
clc
repz
retf
jne
pop
sbb
and
setle
(bad)
(bad)
(bad)
jmp
jnp
cs
rcr
mov
sub
push
mov
cld
dec
and
bound
mov
inc
cld
(bad)
jg
gs
fwait
adc
jno
outs
cmp
adc
(bad)
sub
inc
ror
lods
out
dec
adc
mov
cmp
out
mov
pop
int3
movs
(bad)
(bad)
call
and
mov
mov
lods
xor
stc
adc
push
clc
xchg
xlat
in
(bad)
mov
cs
fadd
cmps
and
(bad)
(bad)
dec
or
mov
lahf
adc
sub
adc
or
loopne
cmp
mov
cwde
(bad)
(bad)
(bad)
inc
mov
cld
mov
outs
sbb
(bad)
stos
ret
inc
lods
test
mov
mov
cli
jg
(bad)
jmp
sbb
mov
hlt
ret
pusha
pop
sbb
repz
(bad)
(bad)
out
call
jae
xchg
jae
jecxz
jae
inc
inc
jae
or
in
call
add
(bad)
(bad)
dec
test
into
inc
lods
mov
push
int3
mov
fst
dec
pop
icebp
xchg
(bad)
jmp
les
hlt
call
pop
sbb
imul
sahf
xor
(bad)
dec
dec
push
cmp
pop
aad
jmp
jg
push
and
push
shl
cld
or
test
xor
(bad)
(bad)
(bad)
jl
(bad)
push
xchg
vpshab
arpl
aad
cmps
push
inc
sbb
jmp
ret
mov
cwde
rol
pop
push
jl
adc
leave
cdq
dec
into
cmp
inc
jo
outs
cmp
leave
out
into
lock
jo
inc
push
mov
repz
(bad)
(bad)
dec
adc
popf
pop
and
imul
pop
in
mov
test
fcomp
(bad)
(bad)
(bad)
jg
(bad)
mov
dec
dec
add
repnz
pop
ins
mov
xchg
push
movs
mov
pop
dec
shr
fcomip
scas
adc
mov
cmp
and
mov
mov
shl
movs
shl
movs
(bad)
(bad)
(bad)
jmp
jb
popa
sti
es
mov
(bad)
aas
add
cmps
push
dec
cmp
aad
mov
sti
xor
add
shl
push
mov
push
and
jbe
adc
inc
inc
inc
cs
(bad)
(bad)
(bad)
clc
mov
lahf
pop
and
jae
into
arpl
sbb
dec
fst
aad
inc
sub
call
and
add
pop
scas
mov
lahf
pop
(bad)
arpl
outs
dec
and
aas
repz
mov
adc
cmps
aam
outs
and
lea
push
loopne
dec
and
bound
jbe
cdq
movs
dec
cmp
jns
sub
xchg
dec
jnp
aam
mov
add
jbe
call
loopne
call
in
mov
(bad)
(bad)
(bad)
(bad)
cmp
rcr
sbb
es
bound
cmp
and
push
cwde
(bad)
pop
pop
jno
mov
(bad)
(bad)
jmp
xchg
or
daa
mov
fldcw
jle
loope
arpl
jp
mov
push
cli
repz
div
sub
cmp
inc
dec
adc
int3
outs
inc
or
xor
sub
(bad)
jmp
ins
push
sub
lods
bound
adc
fld
(bad)
(bad)
(bad)
call
fbld
cli
ss
mov
gs
or
rol
xchg
ret
fcomp
idiv
fbstp
mov
test
pop
(bad)
(bad)
mov
add
(bad)
(bad)
(bad)
mov
jne
adc
fsub
imul
xchg
sub
into
call
(bad)
xor
sbb
stos
lea
aaa
mov
xor
xor
xor
jb
sub
push
jo
cmp
loop
xchg
test
adc
(bad)
sub
or
retf
dec
call
retf
scas
jbe
mov
pop
out
mov
(bad)
hlt
(bad)
jmp
cmp
test
mov
xor
dec
test
call
push
mov
mov
jmp
push
in
inc
pop
loope
or
fild
push
cld
call
ret
sbb
inc
mov
(bad)
dec
test
aaa
push
add
scas
(bad)
(bad)
(bad)
push
sub
stos
cmp
push
push
adc
stc
lock
inc
in
mov
xor
out
push
fld
(bad)
push
loope
in
mov
(bad)
or
cmp
and
inc
fcomp
ret
xchg
inc
(bad)
jecxz
ret
sub
mov
pop
push
pop
mul
out
clc
call
(bad)
dec
cwde
inc
int
std
shl
mov
pushf
mov
(bad)
mov
(bad)
(bad)
call
dec
cmc
shr
and
les
dec
rdmsr
or
inc
mov
inc
(bad)
(bad)
(bad)
dec
fcomp
pop
aaa
(bad)
dec
jmp
das
(bad)
mov
daa
push
sti
leave
jne
inc
std
xlat
jle
int
ds
shl
inc
mov
dec
aaa
dec
repz
call
je
pop
(bad)
ins
cmps
sbb
(bad)
inc
push
jg
inc
pop
pop
ins
pop
shl
retf
into
loopne
clc
out
xlat
mov
mov
call
fs
or
cmc
xchg
mov
jno
(bad)
cmc
xchg
icebp
pop
add
and
sub
xor
repz
(bad)
(bad)
fbld
scas
jg
mov
dec
push
repz
dec
int
outs
cmps
adc
sub
call
mov
fimul
shl
inc
(bad)
pop
xchg
sub
sahf
outs
mov
dec
jg
or
mov
cmp
mov
xor
sub
call
lock
ret
sub
cli
cmp
cmps
and
lahf
cld
(bad)
dec
outs
cmps
aad
dec
cmp
sub
mov
js
adc
test
out
xor
fimul
ret
dec
dec
sub
push
push
mov
mov
lds
dec
jbe
xchg
mov
cmp
xchg
mov
mov
outs
cli
dec
pop
add
out
lds
mov
adc
loopne
push
push
jmp
hlt
(bad)
push
cmp
lods
xlat
jge
repnz
sub
xchg
(bad)
(bad)
call
imul
mov
test
xchg
sti
cmp
test
or
stos
inc
sbb
sub
push
pop
cmps
or
femms
test
cwde
cmp
cdq
popf
(bad)
repz
xchg
mov
jecxz
jbe
adc
jae
xchg
cmps
cmp
outs
fldenv
lods
imul
adc
pushf
mov
mov
call
out
stc
jl
mov
mov
ds
loope
xor
or
xchg
cli
pop
lock
push
outs
and
inc
add
xor
inc
sub
(bad)
(bad)
call
enter
sbb
int3
scas
jmp
jge
jo
outs
fcomip
mov
faddp
sub
(bad)
(bad)
(bad)
mov
repnz
ja
mov
pop
lds
adc
lods
scas
(bad)
pop
jno
sub
repnz
pushf
imul
jmp
jg
(bad)
call
inc
mov
lock
xor
rol
loop
call
xchg
(bad)
(bad)
jmp
aad
adc
jbe
mov
test
retf
inc
cmp
jp
or
jmp
dec
mov
(bad)
(bad)
jmp
stos
out
pop
xor
call
cmp
cmps
shr
or
out
xor
add
mov
cmp
sub
mov
arpl
(bad)
(bad)
jmp
or
cmc
lock
iret
sti
shr
gs
xchg
(bad)
imul
scas
xor
add
mov
mov
sub
mov
inc
out
(bad)
(bad)
call
shl
jge
pop
popa
sar
aas
daa
fiadd
loopne
inc
aas
in
fbld
(bad)
(bad)
call
mov
sahf
pop
dec
mov
xchg
(bad)
inc
mov
scas
xchg
cmp
and
(bad)
jmp
repz
nop
adc
adc
xchg
pop
mov
cmps
and
jl
test
sti
js
(bad)
(bad)
(bad)
jmp
sti
out
sub
loop
imul
fsub
stos
mov
mov
mov
add
sub
and
ds
inc
or
ret
pop
push
inc
dec
dec
(bad)
(bad)
call
xor
addr16
ret
inc
adc
rcr
arpl
mov
push
test
sbb
in
in
(bad)
mov
mov
jno
or
pop
das
test
push
std
mov
xchg
jmp
push
dec
xchg
inc
sub
pop
lock
cwde
call
jae
hlt
stos
dec
sar
(bad)
push
and
pop
cmp
cmp
xchg
sbb
mov
dec
cld
jne
sub
and
repnz
push
add
into
fcomp
dec
fs
xor
call
enter
(bad)
test
push
push
fwait
push
xor
loop
call
(bad)
dec
sbb
cmp
pusha
sub
mov
and
std
(bad)
(bad)
std
cmps
xor
inc
cmps
hlt
ret
inc
sub
mov
lods
push
mov
add
sub
lock
std
xchg
ss
jmp
mov
mov
aam
add
and
dec
cli
sti
add
(bad)
(bad)
(bad)
(bad)
fidiv
loopne
int
gs
loop
pushf
stos
adc
js
jnp
xchg
std
add
xchg
xchg
test
sbb
cld
mov
in
jmp
xor
dec
cmps
add
(bad)
mov
fisub
or
imul
pop
add
dec
inc
cmp
xchg
mov
jl
(bad)
(bad)
dec
ret
jecxz
xor
inc
inc
push
(bad)
ins
aad
iret
jns
(bad)
(bad)
inc
pop
aam
in
mov
mov
push
pop
mov
into
pop
jle
mov
call
int3
dec
jbe
xor
xchg
pop
adc
xchg
xor
rol
cmp
mov
mov
mov
adc
fst
(bad)
dec
ret
imul
imul
callw
or
clc
ds
push
xchg
stos
push
call
(bad)
loopne
mov
mov
outs
jae
pop
push
add
sar
das
and
lods
scas
rcl
adc
mov
add
jmp
loop
dec
clc
push
int3
(bad)
in
mov
aaa
sbb
leave
and
cmc
(bad)
(bad)
(bad)
(bad)
jge
fldln2
add
clc
into
fstp
or
retf
push
test
mov
mov
jle
adc
mov
mov
cmc
cmp
mov
daa
ret
fbstp
sub
xchg
add
xor
mov
(bad)
(bad)
fild
push
push
mov
jmp
addr16
movs
test
and
sbb
mov
bound
add
jmp
mov
(bad)
dec
xlat
movs
out
mov
mov
out
pop
push
out
push
into
sbb
jb
mov
loop
daa
(bad)
jns
call
push
mov
xor
mov
inc
jbe
xchg
retf
cmp
lahf
out
cmps
test
sti
mov
cmp
ja
push
gs
dec
adc
xchg
sbb
jecxz
sbb
sub
or
mov
je
pop
adc
sbb
lea
mov
cmp
hlt
(bad)
out
cli
cmp
cwde
iret
push
ror
test
and
lods
jle
cmp
call
add
nop
aas
pop
mov
inc
repz
(bad)
mov
nop
ret
fdiv
pop
cmps
or
and
leave
jle
mov
mov
adc
repnz
xchg
(bad)
adc
mov
shr
pop
add
dec
(bad)
das
and
lock
xlat
pop
call
add
mov
pop
jl
mov
movs
lahf
in
(bad)
dec
movs
ret
fist
push
sub
data16
aaa
mov
jp
(bad)
(bad)
jmp
xor
pop
out
movs
cmp
int
das
rol
call
(bad)
mov
jmp
std
ins
push
jns
icebp
rol
cli
add
cmps
push
fld
out
lds
(bad)
(bad)
mov
sbb
xchg
cmps
xchg
inc
div
test
cmp
jnp
adc
jp
ss
movs
dec
scas
dec
movs
(bad)
(bad)
jg
(bad)
jp
mov
dec
addr16
push
jmp
in
jecxz
dec
cwde
and
ror
mov
push
xor
call
stos
lods
(bad)
mov
call
xor
(bad)
jg
clc
fld
xchg
push
loop
dec
in
inc
ror
mov
(bad)
(bad)
jmp
cld
ror
dec
pop
aam
enter
or
ja
lods
mov
xchg
(bad)
out
cli
dec
xchg
inc
out
fnsave
jle
retf
shl
aam
adc
adc
(bad)
(bad)
(bad)
call
out
jg
sub
jno
ins
ror
cmps
mov
mov
not
xor
(bad)
jg
jbe
xor
pop
into
push
pop
xor
pushf
cdq
push
pushf
stos
das
xor
div
lock
sar
ins
dec
or
loopne
jne
jmp
sub
(bad)
jmp
mov
adc
inc
aaa
mov
pusha
test
sub
jmp
lock
jo
add
not
stos
clc
rol
jg
or
xchg
mov
push
lods
pop
data16
xchg
imul
nop
dec
mov
lahf
ror
jae
cmc
(bad)
call
lea
loop
retf
mov
jg
int
(bad)
pop
xor
mov
mov
out
jmp
(bad)
out
push
icebp
mov
ficom
cmps
adc
add
jb
mov
dec
loopne
fnstenv
scas
push
push
jmp
in
or
repnz
xor
mov
loop
call
mov
mov
jnp
pop
scas
or
xchg
xchg
cmps
ins
les
(bad)
(bad)
(bad)
dec
out
cmp
mov
or
pop
mov
mov
ins
dec
fisttp
inc
jle
dec
cmp
std
call
xchg
jmp
dec
test
cli
sub
pop
push
sbb
sar
jmp
ret
add
add
movs
push
mov
xchg
in
imul
xchg
stos
inc
(bad)
mov
inc
ficom
mov
fisub
(bad)
call
retf
dec
ss
sub
and
pop
sbb
pop
inc
retf
scas
mov
inc
js
stos
pop
jmp
push
std
or
bound
out
fstp
ins
nop
sub
loopne
(bad)
jmp
out
dec
jmp
cmp
retf
mov
and
hlt
jg
call
mov
(bad)
hlt
mov
mov
xchg
cmp
pop
movs
xchg
(bad)
(bad)
out
adc
pop
loope
clc
movs
xchg
in
mov
inc
aad
or
scas
push
push
ins
jno
loop
xchg
mov
xchg
(bad)
(bad)
call
push
aaa
out
stc
xor
jl
xor
test
in
test
and
xchg
inc
push
fistp
mov
push
ins
push
hlt
(bad)
call
lods
sbb
int3
rol
sbb
fmul
dec
add
dec
xor
add
(bad)
jmp
push
jae
icebp
shl
test
sar
lods
or
xchg
cmps
dec
nop
icebp
jg
(bad)
push
inc
test
sar
(bad)
xor
arpl
xchg
add
ins
std
push
and
icebp
xchg
mov
aaa
adc
lahf
movs
cs
add
jecxz
ror
outs
xor
aad
mov
xchg
(bad)
mov
xor
movs
dec
xor
scas
pop
inc
jecxz
inc
out
sbb
clc
retf
lea
(bad)
(bad)
jmp
ret
jle
or
cmp
xor
xor
(bad)
cli
sub
(bad)
mov
(bad)
dec
retf
push
add
fsub
cmc
mov
mov
inc
and
fwait
retf
mov
add
lock
cmps
add
(bad)
das
into
pop
ds
sar
sar
jno
loopne
call
aaa
out
stos
(bad)
jmp
rcr
movs
hlt
popa
mov
in
stos
aad
and
fnsave
pop
sub
pop
lock
jl
adc
cs
(bad)
(bad)
(bad)
(bad)
mov
pop
jmp
jne
dec
into
(bad)
pop
cmp
hlt
rcr
addr16
mov
aam
(bad)
(bad)
jmp
or
retf
pop
arpl
push
cmc
sub
ret
popf
movs
sbb
test
fwait
add
mov
call
(bad)
(bad)
dec
jno
pop
pop
pushf
inc
inc
add
sub
sub
stos
jp
dec
or
sahf
ret
jbe
xor
xchg
xchg
cli
(bad)
(bad)
call
jmp
not
adc
fsubr
mov
mov
jge
pop
(bad)
icebp
cdq
push
ja
fisttp
in
aad
es
add
push
inc
dec
cli
xchg
jp
and
mov
in
in
call
mov
push
popa
dec
sub
in
dec
or
sub
in
push
push
cmp
pop
das
call
loope
cmp
fs
pop
stc
test
inc
clc
or
sbb
call
and
xchg
mov
pop
out
mov
push
(bad)
fcomip
mov
jmp
and
cmp
(bad)
int3
cmps
(bad)
xor
sar
loope
mov
ja
lahf
(bad)
lods
jecxz
hlt
aaa
xor
fadd
ins
sub
pop
inc
dec
push
sbb
xor
out
int
xchg
and
pushf
(bad)
clc
fisubr
out
sub
sbb
test
or
dec
mov
mov
sahf
jbe
mov
mov
dec
sub
loop
jg
mov
je
jmp
aad
iret
jmp
and
out
inc
add
cmp
jo
or
lahf
sub
pop
sbb
mov
push
pop
xor
(bad)
push
fst
sub
enter
sbb
(bad)
add
rol
mov
push
xor
out
xor
mov
rol
hlt
(bad)
jmp
xor
fstp
jg
xchg
shl
leave
xrelease
mov
dec
push
(bad)
call
mov
fcmovne
es
inc
imul
lock
pop
lock
inc
out
adc
arpl
sti
jb
mov
das
add
shl
push
out
(bad)
(bad)
mov
ror
sbb
jge
in
shr
dec
addr16
fld
test
fbld
push
jmp
aam
ss
xchg
mov
(bad)
push
(bad)
call
enter
retf
xlat
cmps
outs
iret
outs
adc
fnstsw
push
add
sti
jmp
(bad)
(bad)
call
enter
fstp
nop
adc
packuswb
sbb
cmps
ret
arpl
pop
add
mov
repz
dec
cld
popf
lea
imul
popf
repnz
out
push
int3
stc
ret
pop
jb
add
(bad)
enter
(bad)
(bad)
(bad)
jg
ins
or
adc
push
jmp
jle
xchg
es
fadd
popf
mov
stos
add
aaa
fcmovbe
add
call
sahf
jae
test
inc
call
push
std
fimul
mov
das
movs
and
in
out
cmps
dec
xchg
adc
(bad)
jmp
xchg
xchg
mov
sub
jecxz
int
mov
movs
dec
xor
xchg
adc
ret
jmp
loop
cwde
sbb
call
ficomp
mov
and
cmp
pop
leave
(bad)
(bad)
(bad)
call
js
fistp
and
push
jmp
adc
cli
loope
sbb
std
pop
outs
xchg
xor
or
cmp
mov
cdq
xchg
aaa
dec
mov
xchg
xor
inc
sub
(bad)
(bad)
push
or
xchg
ins
fmul
cmp
dec
nop
pop
outs
das
cld
jns
mov
data16
pop
and
fild
mov
push
push
jnp
popa
sti
sti
xchg
stos
outs
loop
(bad)
cmp
ins
jnp
cmp
mov
pop
push
cmp
(bad)
(bad)
jmp
mov
clc
aad
ja
add
jnp
sahf
xor
(bad)
fisttp
call
mov
loope
cs
and
cmp
and
adc
and
sbb
ret
out
xor
jmp
ins
popf
or
ds
aaa
out
std
cmp
scas
test
inc
fcomi
jo
adc
sbb
movs
and
(bad)
push
dec
jecxz
jne
and
mov
(bad)
(bad)
(bad)
(bad)
cmp
lods
mov
and
out
mov
dec
outs
add
sub
scas
nop
idiv
(bad)
(bad)
(bad)
cmp
jbe
ror
aas
dec
arpl
aad
stc
stos
mov
sbb
aam
and
(bad)
(bad)
call
test
test
sbb
sub
and
shl
movs
movs
add
push
mov
sahf
ds
or
pop
out
mov
imul
pusha
out
popf
jecxz
rcl
mov
pusha
push
adc
jmp
jle
adc
repz
jp
mov
pop
add
out
sub
inc
(bad)
std
psrad
(bad)
(bad)
(bad)
(bad)
call
in
jl
sub
adc
mov
push
cmps
outs
or
(bad)
mov
pop
push
sub
(bad)
push
scas
jne
sti
bound
retf
jmp
add
mov
push
pop
inc
add
(bad)
fild
mov
out
scas
sbb
lods
ds
sbb
jmp
push
jnp
test
mov
xor
repz
sbb
out
into
es
in
in
xchg
cmps
cs
mov
neg
leave
push
adc
cli
and
imul
jne
arpl
push
jmp
push
add
cmps
(bad)
jg
or
and
jecxz
xchg
shl
(bad)
mov
(bad)
(bad)
call
into
hlt
pop
or
fdiv
jae
ins
mov
cli
rcl
rcl
inc
call
in
jbe
jg
stos
sbb
xor
gs
push
push
and
mov
leave
jae
out
jo
push
push
(bad)
adc
out
ret
jg
sub
or
imul
pop
push
cmp
(bad)
out
(bad)
mov
lods
je
fcom
(bad)
(bad)
jmp
sbb
fidiv
inc
(bad)
xchg
pusha
das
mov
xor
rcl
ds
test
dec
cmps
and
(bad)
inc
pop
shl
push
call
out
fneni(8087
movs
sub
sub
fsubr
(bad)
(bad)
dec
xor
neg
std
lahf
xor
adc
jmp
add
movs
mov
cld
(bad)
cmp
xchg
push
jo
adc
mov
mov
(bad)
(bad)
(bad)
jmp
scas
mov
adc
popf
cmps
mov
es
jbe
stos
inc
int
jae
out
jb
jg
push
pop
inc
retf
ja
xor
sahf
mov
mov
cwde
popf
inc
push
inc
sti
sub
(bad)
(bad)
call
int3
aad
outs
stos
mov
add
mov
sahf
adc
jne
scas
out
add
(bad)
mov
mov
aas
pop
cmp
ins
or
mov
ja
jg
xor
dec
(bad)
(bad)
(bad)
push
xchg
xor
inc
fwait
xchg
mov
std
dec
pusha
pop
fistp
sub
fdivr
(bad)
(bad)
call
cmps
in
call
mov
stos
mov
xor
hlt
clc
inc
pop
ins
(bad)
(bad)
(bad)
call
pop
lods
or
sbb
inc
sbb
mov
sub
mov
jg
movs
xchg
das
sub
or
inc
cld
jecxz
aad
jmp
(bad)
(bad)
(bad)
(bad)
mov
loopne
mov
and
jns
mov
jge
adc
cmp
inc
sbb
(bad)
cmp
sbb
pop
xchg
sub
mov
ds
out
mov
sub
push
(bad)
pop
adc
cs
xchg
push
es
scas
jle
push
add
mov
jno
push
xchg
(bad)
std
data16
hlt
mov
mov
add
imul
mov
cmp
movaps
pop
jp
test
dec
or
dec
loop
fprem
(bad)
jmp
cmp
and
bound
mov
retf
push
(bad)
call
or
cdq
cmps
adc
aas
(bad)
mov
mov
(bad)
jg
shl
mov
scas
ja
ja
or
inc
cld
repz
not
add
push
loope
jbe
pop
outs
adc
mov
(bad)
(bad)
(bad)
call
pop
in
stos
(bad)
cmp
mov
daa
test
hlt
sub
sub
mov
or
and
jp
add
movs
push
inc
push
mov
lock
cli
cmps
mov
call
add
ret
adc
ins
jnp
push
fldenv
(bad)
jmp
cmps
aam
fmul
js
push
ds
iret
sub
dec
mov
inc
add
or
test
xchg
aad
in
scas
adc
ins
mov
(bad)
jnp
test
test
cld
xchg
sbb
dec
or
(bad)
(bad)
(bad)
jmp
jmp
(bad)
push
clc
ret
jnp
inc
(bad)
sub
aas
and
les
test
add
shr
dec
test
scas
mov
add
outs
cmps
push
mov
jg
(bad)
cmp
mov
push
or
jl
bnd
xor
mov
pop
xlat
add
mov
scas
sar
imul
fdiv
je
loopne
cwde
cwde
(bad)
call
cmps
jmp
adc
ds
mov
in
(bad)
ret
(bad)
(bad)
(bad)
call
mov
mov
push
shl
jnp
jae
mov
mov
adc
pop
cld
jmp
lods
pop
push
data16
sbb
hlt
in
cmp
mov
ja
xor
shr
pop
test
(bad)
(bad)
inc
and
sbb
fcmovb
aas
ret
push
(bad)
pop
xchg
out
mov
and
mov
rcr
pop
dec
cwde
push
loopne
retf
adc
mov
adc
add
shl
test
adc
movs
(bad)
(bad)
(bad)
call
sub
or
mov
(bad)
call
cmp
in
mov
(bad)
(bad)
(bad)
push
dec
dec
xor
bound
cmp
stc
jo
dec
inc
lahf
cli
mov
jne
daa
call
cld
jmp
pop
xor
ret
adc
pop
dec
mov
fwait
xor
gs
call
pop
push
out
sbb
loop
jp
push
lock
(bad)
(bad)
jmp
sbb
pop
int
pop
mov
cs
cdq
mov
imul
mov
dec
adc
fnstenv
xchg
and
cli
xchg
aaa
mov
mov
dec
push
(bad)
lock
aad
test
sub
xlat
mov
push
sub
(bad)
call
fucomi
jg
mov
pop
sahf
in
jp
mov
dec
(bad)
(bad)
call
sar
out
xchg
sbb
mov
mov
mov
imul
les
dec
call
xchg
jmp
(bad)
outs
ja
das
sbb
inc
call
push
popa
jnp
fwait
dec
xor
fcomip
mov
jbe
cmp
in
outs
in
(bad)
xchg
xchg
mov
mov
dec
lahf
push
mov
(bad)
iret
cmp
les
sbb
cmp
cmp
(bad)
pop
mov
(bad)
sub
out
mov
aam
pushf
push
(bad)
cmps
mov
call
cld
imul
sub
xor
push
outs
outs
test
jmp
clc
push
outs
call
sbb
(bad)
push
or
loopne
es
sbb
sub
or
adc
sbb
inc
pop
inc
mov
cmp
sub
push
pop
leave
(bad)
xlat
adc
pop
cmp
sub
(bad)
data16
enter
cld
rcl
inc
call
cmp
add
jg
sar
and
inc
aad
mov
mov
inc
adc
cmp
call
inc
jecxz
cs
adc
mov
fcomp
cmps
adc
and
je
mov
pop
mov
pop
xchg
xor
scas
test
mov
adc
call
(bad)
dec
(bad)
scas
dec
pop
pop
les
adc
addr16
pop
out
pop
rcl
enter
(bad)
js
cmp
movs
sar
addr16
add
adc
jmp
(bad)
call
sbb
jmp
xchg
dec
fisub
cmp
or
mov
cld
(bad)
push
mov
leave
daa
fild
scas
dec
dec
push
sahf
add
jmp
sbb
dec
aas
cli
jmp
movs
mov
push
xchg
and
sar
adc
mov
pop
push
test
or
(bad)
(bad)
(bad)
(bad)
stc
sub
imul
ss
or
fdivr
xor
cld
aas
mov
xchg
cmp
dec
add
or
arpl
adc
xchg
adc
(bad)
lods
out
in
jg
jmp
xor
ret
bound
jb
xor
ss
fadd
repz
ret
(bad)
(bad)
dec
shl
push
dec
jnp
sub
call
jg
call
lea
adc
push
les
call
clc
(bad)
call
jnp
je
inc
hlt
sahf
mov
pop
push
movs
push
lods
in
addr16
(bad)
(bad)
(bad)
dec
push
enter
sar
test
mov
(bad)
mov
or
xor
xor
(bad)
jg
hlt
daa
xchg
js
test
add
sbb
mov
mov
and
(bad)
dec
adc
xor
(bad)
and
cmp
pop
xor
aam
fmul
call
fwait
dec
hlt
push
pop
pop
stc
mov
movs
pop
inc
rol
jno
les
ins
or
add
dec
mov
ds
sar
adc
int
(bad)
scas
xchg
mov
daa
xchg
sbb
int
add
fbld
or
or
mov
(bad)
(bad)
(bad)
jmp
pop
(bad)
and
jo
and
dec
popa
sbb
enter
push
jns
xchg
icebp
outs
cli
call
aas
and
arpl
xlat
aas
fwait
inc
iret
or
and
pop
jp
xchg
mov
nop
xor
cwde
leave
int3
mov
call
clc
xchg
fisttp
pop
jmp
nop
or
stos
mov
call
loope
jp
ss
imul
(bad)
imul
hlt
and
sbb
cli
lock
cmp
(bad)
dec
(bad)
or
aam
addr16
les
sub
fnstenv
cli
inc
std
mov
cmp
aam
mov
push
test
sub
das
pop
adc
xor
mov
push
ins
(bad)
or
inc
sub
jmp
push
sbb
mov
mov
call
nop
inc
iret
jb
pop
jae
int3
jle
mov
cmps
inc
push
clc
(bad)
inc
and
out
xchg
daa
mov
dec
rcl
sub
sub
mov
(bad)
scas
lock
xchg
outs
aam
test
mov
hlt
xchg
sahf
xor
jmp
jne
mov
mov
or
fstp
scas
addr16
dec
(bad)
mov
pop
popa
push
sbb
nop
imul
or
jmp
mov
ja
mov
push
adc
lods
leave
dec
pop
(bad)
jg
fisubr
shr
sub
ins
xchg
pop
and
mov
push
or
inc
loop
mov
mov
cmp
pop
pop
and
jmp
dec
jns
(bad)
(bad)
aas
mov
dec
icebp
retf
push
dec
pop
xchg
popf
add
icebp
fiadd
pusha
outs
push
out
std
(bad)
jnp
mov
push
dec
mov
pop
jo
fbstp
out
pop
dec
mov
(bad)
call
sbb
into
stos
pop
not
fcomp
(bad)
(bad)
call
stos
aaa
daa
sbb
lea
jl
icebp
adc
xor
into
inc
stos
mov
sbb
(bad)
(bad)
(bad)
inc
cwde
mov
xor
dec
sub
sub
scas
pop
adc
jecxz
jne
push
fs
ins
xchg
add
out
mov
test
push
loop
icebp
mov
pop
add
(bad)
(bad)
(bad)
(bad)
inc
inc
xor
push
push
pop
shl
push
not
jmp
mov
or
inc
dec
inc
in
fidivr
fst
fwait
xchg
ret
in
xchg
sub
xchg
test
(bad)
(bad)
(bad)
push
in
mov
adc
dec
test
sbb
test
xor
(bad)
jmp
ins
xor
int
call
sbb
sahf
jns
adc
mov
xchg
shl
ins
sbb
dec
repz
push
mov
ins
push
adc
out
pop
fmul
cmp
adc
call
clc
movs
das
jns
or
scas
inc
test
and
call
clc
iret
mov
std
fs
ds
pop
add
sub
inc
(bad)
(bad)
(bad)
(bad)
cli
mov
add
je
or
xor
mov
adc
fdiv
stc
add
sahf
jno
mov
or
ja
(bad)
(bad)
jmp
sbb
rcr
mov
jb
adc
call
jp
popa
mov
or
(bad)
(bad)
call
add
xlat
(bad)
jne
movs
push
call
mov
sub
mov
xor
mov
mov
retf
(bad)
mov
push
inc
enter
out
stos
js
loopne
iret
aas
pop
rol
(bad)
jg
out
mov
mov
adc
cmp
mov
call
test
ds
daa
or
cmc
stos
or
jge
ds
push
std
inc
ror
mov
lods
dec
pop
call
pop
pop
jo
pop
push
cli
push
adc
xchg
mov
cmp
into
scas
fsubp
(bad)
(bad)
fst
pop
cmp
mov
lods
cmc
pop
bound
(bad)
jge
adc
and
call
sub
xlat
test
add
je
lahf
cmp
jmp
mov
pop
or
push
sti
call
dec
mov
(bad)
call
and
jp
cmp
sti
xchg
mov
inc
hlt
push
mov
push
inc
(bad)
(bad)
call
mov
and
outs
sbb
stc
lea
outs
adc
(bad)
(bad)
(bad)
(bad)
inc
stos
cmp
es
test
adc
and
jb
(bad)
(bad)
(bad)
inc
mov
add
jnp
and
pop
cmp
ins
fcomp
jle
push
dec
and
inc
push
jle
dec
dec
(bad)
pop
repnz
and
fs
mov
(bad)
(bad)
(bad)
(bad)
call
jmp
ror
ja
fcom
xor
lods
inc
int3
sub
pop
or
lods
xchg
rcr
int
mov
xchg
dec
or
in
push
test
inc
aaa
pop
outs
mov
(bad)
inc
ds
mov
cld
mov
add
push
stos
(bad)
mov
inc
cmp
nop
int3
in
out
imul
dec
pop
ud0
(bad)
dec
pop
lock
data16
and
mov
or
les
icebp
mov
cmps
mov
fwait
add
pop
loopne
or
lea
cmc
je
inc
add
sub
mov
adc
data16
mov
lods
push
dec
les
cmp
(bad)
push
or
inc
jnp
loopne
scas
pop
gs
or
test
fisttp
cs
mov
adc
(bad)
int3
ret
out
arpl
sub
(bad)
jg
jae
mov
xchg
dec
pop
cmc
out
mov
dec
and
outs
pusha
std
dec
jl
sti
sbb
add
or
pop
sahf
repnz
lahf
jmp
fadd
js
add
xlat
adc
lods
ret
rol
sbb
mov
fxtract
pop
and
imul
add
pushf
cmp
aaa
loope
jnp
jl
(bad)
(bad)
(bad)
dec
sub
rcr
xchg
enter
mov
test
cdq
or
(bad)
(bad)
call
sub
cmps
int
jne
dec
jnp
adc
add
mov
dec
push
inc
dec
xor
sub
inc
push
dec
aas
sbb
push
jne
cli
jns
(bad)
push
popf
and
mov
cld
or
outs
sub
dec
and
(bad)
fild
xchg
mov
xor
fwait
adc
mov
rcr
cmps
(bad)
jmp
lods
mov
adc
and
jecxz
add
pop
dec
sbb
lahf
or
test
(bad)
(bad)
call
xchg
cwde
and
or
push
stos
stos
xchg
pop
xor
jb
(bad)
(bad)
(bad)
out
xor
scas
inc
(bad)
push
or
mov
stos
xchg
dec
push
test
out
mov
jo
cli
jo
(bad)
(bad)
mov
rcr
push
gs
pop
push
add
cmp
cmp
cmp
(bad)
xchg
sub
cli
(bad)
call
cwde
jbe
mov
pop
add
fisub
movaps
daa
out
add
dec
cld
inc
jmp
shl
popa
mov
add
stos
jbe
sub
lods
mov
jno
inc
in
(bad)
(bad)
dec
lods
mov
stc
mov
bound
or
jmp
aad
data16
out
fwait
in
outs
sbb
push
mov
xchg
mov
adc
push
sbb
jnp
(bad)
jmp
inc
xchg
sub
pop
adc
pop
repz
push
xor
add
jmp
sahf
gs
or
cmp
dec
sar
(bad)
jl
shl
adc
out
fs
(bad)
(bad)
(bad)
fcom
lds
neg
retf
mov
pop
fnstcw
test
(bad)
(bad)
(bad)
call
out
mov
mov
mov
jecxz
fwait
cmp
and
cmp
(bad)
sub
pushf
push
es
pop
(bad)
(bad)
(bad)
jmp
(bad)
xchg
cmc
sub
fiadd
lahf
pop
mul
cmp
add
xor
ins
fwait
pop
add
imul
dec
jmp
(bad)
mov
stc
pop
adc
out
movs
jmp
dec
ds
xchg
inc
jbe
sbb
das
or
out
pop
mov
ret
std
call
stos
mov
sahf
sub
loope
stos
mov
sub
or
jmp
stos
jmp
fcomp
sar
stos
jnp
push
sbb
imul
push
ror
pop
pop
sub
xchg
pushf
push
std
enter
jbe
dec
add
cmp
mov
mov
pop
sbb
inc
lahf
or
iret
xlat
sbb
mov
lahf
ins
mov
push
mov
inc
in
std
add
movs
gs
mov
sahf
xchg
mov
add
xor
(bad)
call
cmp
xor
imul
xor
mov
jbe
scas
outs
sbb
dec
out
mov
clc
mov
dec
sub
popa
dec
inc
add
(bad)
call
aad
ficom
call
sub
push
ret
(bad)
(bad)
(bad)
jg
push
inc
mov
adc
and
cmps
and
adc
in
sbb
push
rol
(bad)
mov
int3
or
sar
(bad)
out
nop
int3
popf
mov
jmp
and
xor
jmp
bound
retf
xor
cmp
push
dec
test
and
not
dec
cs
call
sti
int
xchg
sub
add
and
sbb
jmp
add
cmp
inc
jl
sbb
imul
mov
mov
push
pop
stos
sub
(bad)
(bad)
(bad)
jmp
cmp
mov
mov
and
sub
push
outs
adc
std
xchg
lea
(bad)
push
push
cld
loop
test
cmc
dec
adc
mov
dec
xor
test
(bad)
lods
sti
mov
ja
das
sbb
sub
xor
ror
movs
adc
mov
hlt
(bad)
call
cmc
mov
test
inc
aaa
jmp
dec
inc
sbb
(bad)
addr16
mov
jg
or
jle
or
cwde
sub
or
push
(bad)
jns
cwde
dec
std
push
pushf
inc
jl
pop
(bad)
clc
movs
test
sar
(bad)
ins
dec
outs
push
adc
dec
push
idiv
(bad)
fisttp
out
retf
mov
ins
fisttp
and
(bad)
(bad)
mov
icebp
pop
imul
gs
stc
cmc
add
cmp
dec
dec
cld
and
cmp
out
cwde
mov
mov
cld
test
fsub
(bad)
mov
and
lods
cwde
adc
loopne
jmp
jecxz
lahf
xor
int
ins
jo
fcmovbe
test
adc
(bad)
(bad)
fist
std
mov
cmp
outs
or
sub
jecxz
lea
add
dec
push
cmps
fcom
idiv
(bad)
ror
cli
xchg
aaa
std
dec
xor
or
sub
nop
mov
jae
(bad)
dec
mov
push
jge
add
xchg
inc
pop
mov
rol
(bad)
fisubr
push
xor
dec
stc
cwde
mov
or
and
test
pusha
je
clc
cmc
or
mov
or
sbb
mov
aam
out
(bad)
rol
(bad)
call
push
xor
xchg
push
xchg
test
js
icebp
mov
xor
or
jp
fisttp
push
adc
sub
adc
(bad)
call
pop
mov
push
fsub
pop
inc
or
xchg
(bad)
cs
(bad)
dec
add
jo
jmp
mov
jnp
adc
inc
jmp
in
mov
cli
es
test
call
popf
jae
push
(bad)
(bad)
push
pop
xor
imul
fist
sub
outs
xlat
pop
(bad)
(bad)
inc
xchg
xchg
xor
mov
(bad)
mov
adc
adc
xor
call
aad
(bad)
(bad)
clc
mov
sahf
dec
jo
imul
xor
les
clc
inc
adc
jns
mov
jle
mov
mov
pop
int
mov
fstp
sti
jle
adc
icebp
dec
push
aas
mov
jle
call
(bad)
(bad)
call
mov
or
stos
pusha
rol
cli
gs
dec
mov
cld
call
sbb
fldcw
(bad)
xchg
pop
dec
call
cmc
jns
(bad)
(bad)
call
retf
and
jb
fldcw
and
push
inc
mov
push
add
(bad)
(bad)
push
fisttp
ins
sbb
jl
pusha
mov
jp
retf
mov
out
xor
jmp
movs
mov
lods
rcr
daa
bound
fwait
mov
(bad)
lods
jl
mov
pop
imul
jge
loop
std
inc
mov
icebp
(bad)
addr16
mov
(bad)
push
adc
(bad)
jmp
ja
adc
pushf
sub
inc
sbb
outs
or
mov
jb
call
loopne
stos
cdq
retf
retf
jmp
(bad)
fnstenv
clc
(bad)
jg
(bad)
jmp
inc
cmp
mov
inc
push
dec
inc
inc
xlat
hlt
ret
(bad)
call
call
inc
mov
out
sti
cdq
mov
(bad)
(bad)
jmp
adc
scas
mov
inc
ret
push
jne
fisttp
sti
cmp
mov
dec
jecxz
jbe
pushf
lds
(bad)
out
outs
xor
jle
les
test
arpl
jle
jno
lods
retf
pop
pop
xor
in
jmp
inc
adc
popf
push
clc
pop
mov
leave
add
scas
push
sbb
adc
or
(bad)
mov
aam
popf
jecxz
jae
movs
mov
hlt
adc
pop
rcl
out
pop
sar
push
in
dec
pop
and
mov
(bad)
out
push
ficom
mov
jmp
sub
and
repnz
test
imul
in
adc
clc
es
div
xor
scas
clc
outs
pop
inc
jecxz
sbb
out
xor
push
je
stos
rcr
(bad)
(bad)
mov
test
in
jle
adc
pop
js
popf
pop
mov
fdivrp
mov
(bad)
cmp
cli
fnstenv
cs
movs
ins
daa
sub
push
cli
(bad)
(bad)
call
pop
cmp
aad
mov
mov
cs
pop
jnp
ds
stc
(bad)
(bad)
jmp
sub
shl
mov
ins
ror
push
push
pop
(bad)
push
pop
xlat
popa
or
cmc
cmp
(bad)
(bad)
(bad)
jle
das
loop
iret
das
xor
sbb
retf
mov
pop
test
outs
xor
mov
or
cmp
cmp
jle
sub
mov
cmc
add
(bad)
(bad)
(bad)
mov
mov
call
int3
aaa
jecxz
jmp
aas
jo
neg
fidivr
jmp
data16
or
xchg
call
dec
outs
mov
dec
pop
int3
adc
fild
std
add
cmp
jb
xor
adc
(bad)
(bad)
inc
sbb
mov
pop
mov
inc
repnz
sub
mov
popf
retf
mov
xchg
mov
inc
push
mov
adc
stos
ror
pop
sub
test
test
(bad)
(bad)
(bad)
(bad)
(bad)
mov
out
adc
fwait
xchg
pop
inc
jb
aad
jge
adc
cmp
and
fwait
(bad)
mov
cmp
mov
or
adc
inc
cmp
(bad)
call
mov
out
sub
xchg
fwait
jmp
mov
add
out
pop
loop
xchg
sbb
mov
fnstsw
neg
aad
jno
add
popf
xchg
push
outs
gs
mov
(bad)
(bad)
cmp
nop
pop
mov
mov
in
sub
(bad)
dec
pusha
out
leave
(bad)
imul
pop
out
mov
out
aaa
mov
xor
inc
mov
dec
or
(bad)
push
icebp
ficomp
mov
call
inc
inc
mov
and
imul
ja
sub
add
cmp
cld
bound
das
loope
jbe
stos
sbb
cwde
lea
xchg
inc
movs
(bad)
(bad)
(bad)
std
mov
jb
or
jne
arpl
fiadd
imul
add
mov
daa
sbb
shl
mov
(bad)
(bad)
(bad)
out
dec
push
add
js
dec
inc
and
jg
(bad)
fisub
push
xchg
mov
jmp
or
dec
fnstenv
cmp
mov
adc
outs
and
jmp
ins
jne
add
ja
into
pop
test
jb
dec
push
xchg
shl
(bad)
int3
fadd
out
sbb
adc
mov
rol
adc
(bad)
(bad)
call
cmp
sbb
lahf
push
inc
mov
pop
jno
ins
int3
inc
dec
sbb
push
call
lods
shr
arpl
repz
mov
pop
pop
cmp
fs
sbb
jbe
leave
sub
dec
sar
(bad)
(bad)
dec
xchg
mov
add
hlt
mov
pop
frstor
adc
pusha
(bad)
jmp
mov
xchg
inc
es
xor
push
mov
or
(bad)
(bad)
(bad)
push
xchg
push
sub
ficom
push
stos
arpl
inc
mov
cmps
jns
mov
add
ror
call
dec
imul
into
nop
test
frstor
mov
call
mov
scas
int
xchg
pop
sub
stos
je
mov
je
and
aam
fs
out
xchg
or
(bad)
stos
pop
popf
xor
(bad)
(bad)
adc
xchg
test
dec
fild
mov
mov
dec
enter
in
mov
not
lods
in
add
mov
repnz
(bad)
(bad)
mov
mov
cmp
or
outs
lods
ficomp
popf
sub
jecxz
pop
and
mov
imul
stc
jns
push
add
fs
xor
ins
aas
inc
repz
fsub
dec
int3
inc
clc
pop
cmp
ds
add
cmps
lea
mov
icebp
mov
add
inc
cmp
pop
call
xchg
push
int
(bad)
fistp
sub
call
jns
cmc
les
call
(bad)
(bad)
inc
gs
add
ja
xlat
arpl
das
dec
arpl
push
dec
cmps
inc
cli
mov
(bad)
push
nop
enter
lea
ret
leave
dec
mov
sbb
(bad)
pop
push
fsub
inc
imul
pop
(bad)
pop
jmp
inc
mov
addr16
(bad)
(bad)
(bad)
inc
xchg
push
out
add
mov
mov
mov
loop
jmp
ss
mov
inc
loopne
lock
dec
ds
mov
ins
in
dec
pop
clc
dec
sbb
cdq
xchg
mov
stc
adc
out
cmps
sbb
mov
pushf
cmp
sub
pop
sub
jmp
stos
lahf
jnp
neg
mov
(bad)
(bad)
dec
imul
and
and
push
pop
imul
(bad)
(bad)
out
xor
cs
in
mov
fcomip
cmp
jo
stc
fwait
or
mov
jg
(bad)
dec
mov
mov
movs
lea
fisttp
enter
(bad)
call
nop
or
mov
test
fcomp
cli
ret
(bad)
(bad)
(bad)
push
pop
jmp
sbb
das
dec
es
pop
enter
xchg
jge
sti
fild
push
xchg
gs
sbb
adc
mov
bound
xor
push
mov
int3
cmp
mov
mov
xchg
jmp
(bad)
inc
(bad)
jle
cmp
adc
(bad)
call
fnstcw
and
test
xchg
cmp
fistp
push
leave
into
enter
dec
add
repnz
mov
(bad)
(bad)
inc
into
shl
iret
mov
aaa
inc
(bad)
jne
scas
aaa
xor
movs
jmp
xor
clc
fistp
push
cld
jg
fsubr
mov
loopne
ror
push
fdiv
ds
mov
mov
cmps
xor
ins
jle
or
jno
sbb
cmovae
mov
(bad)
(bad)
(bad)
jmp
test
stos
pop
adc
jl
push
inc
in
(bad)
pop
jnp
int
push
add
mov
call
push
jns
jg
mov
and
mov
daa
or
(bad)
xchg
xchg
aaa
jo
cwde
add
ins
pop
fmul
mov
mov
adc
add
pop
inc
sub
cs
push
sti
(bad)
(bad)
(bad)
call
cmp
dec
(bad)
sbb
lds
jmp
inc
pop
test
lahf
outs
xchg
fs
psraw
inc
repnz
sbb
in
cmp
ficom
dec
push
xor
push
push
dec
dec
adc
xchg
shl
dec
sub
dec
hlt
outs
or
cmp
(bad)
leave
js
mov
(bad)
mov
fisttp
adc
test
sbb
ficomp
push
shl
call
adc
mov
das
(bad)
retf
mov
sub
stos
mov
lea
jnp
pop
scas
or
sar
add
xor
mov
sub
mov
or
sbb
jmp
pop
(bad)
inc
test
lea
addr16
mov
stos
mov
jbe
sti
stos
mov
xchg
ins
cdq
clc
(bad)
jmp
mov
les
mov
sahf
inc
dec
xor
pop
(bad)
(bad)
dec
hlt
push
adc
mov
push
ds
into
sbb
sbb
dec
retf
dec
push
pop
add
xchg
dec
jecxz
pop
cdq
dec
aas
and
fldcw
sub
call
sbb
outs
push
xchg
movs
es
mov
adc
movs
pop
repz
lods
addr16
inc
sbb
add
js
mov
adc
xchg
sub
cwde
dec
mov
and
test
cld
rcr
mov
fcom
int
ret
cli
cs
lea
(bad)
std
jno
jg
mov
sub
cmp
into
and
sti
scas
push
jne
and
(bad)
(bad)
inc
out
(bad)
jb
popa
test
dec
lds
sbb
jno
inc
fld
es
push
mov
add
jg
xor
mov
xor
sti
pop
bound
mov
das
cli
jmp
es
pop
xor
xor
ret
(bad)
dec
or
(bad)
adc
push
cld
lock
test
sbb
les
cld
(bad)
mov
jne
adc
inc
out
outs
add
cmc
cld
(bad)
(bad)
out
inc
mov
sbb
stos
inc
bound
mov
push
icebp
es
add
mov
repz
push
sbb
cli
mov
or
mov
mov
and
ins
lock
adc
ret
(bad)
mov
loopne
dec
retf
outs
imul
mov
ins
loope
scas
pop
scas
call
cmp
pop
and
lods
push
rol
dec
(bad)
fild
mov
mul
adc
inc
mov
outs
sbb
imul
clc
jecxz
int3
cmp
hlt
add
ins
ja
and
inc
sbb
mov
sti
lds
(bad)
call
mov
inc
add
or
inc
shl
into
outs
push
daa
sub
(bad)
(bad)
(bad)
push
fisubr
cwde
lea
jmp
add
pop
push
mov
js
mov
lods
jmp
imul
sbb
cmp
movs
js
mov
jb
hlt
scas
call
(bad)
(bad)
fldcw
int3
mov
ins
and
add
pop
jg
pop
adc
test
inc
push
out
fbld
inc
and
jp
mov
fdiv
mov
pop
aam
aaa
xchg
gs
ret
pop
mov
cmp
push
sub
neg
add
mov
lea
(bad)
(bad)
(bad)
fcmovnb
(bad)
push
dec
pop
or
mov
adc
xor
mov
loop
fcmove
jno
inc
xor
(bad)
mov
test
stos
fwait
jbe
je
add
and
inc
adc
cdq
(bad)
mov
outs
ror
xchg
and
repnz
mov
fsubr
stos
pop
and
loope
fwait
dec
add
mov
mov
jb
(bad)
(bad)
dec
push
and
mov
ret
dec
or
mov
sahf
loopne
add
scas
inc
fidiv
in
stos
imul
push
sub
test
jmp
or
js
pop
out
out
ds
loopne
enter
ret
dec
jg
shr
and
inc
cmp
loopne
std
xor
fdiv
fs
sbb
cmps
add
jle
lds
fimul
mov
in
or
jecxz
sub
in
sar
(bad)
call
or
xor
clc
xchg
xor
scas
scas
jl
adc
pop
pop
cmps
and
jmp
cli
sbb
jns
daa
test
sub
fcomp
scas
leave
pop
imul
fld
jge
add
pusha
inc
mov
out
xor
or
call
jb
push
cmp
cdq
adc
cmp
inc
inc
mov
mov
cli
and
dec
add
add
scas
mov
pop
mov
aad
sub
pop
add
imul
dec
push
(bad)
(bad)
dec
fstp
fdivrp
mov
mov
jbe
or
mov
adc
push
sub
ja
adc
or
sub
(bad)
mov
das
lahf
call
sbb
sub
sbb
call
std
adc
inc
or
mov
jle
stc
add
mov
rcl
xchg
push
test
and
fisttp
push
addr16
push
cwde
call
mov
out
out
dec
in
cdq
cmps
test
sbb
(bad)
jg
jmp
(bad)
xlat
js
aas
add
ja
(bad)
sbb
out
fdiv
cwde
push
inc
(bad)
(bad)
(bad)
jmp
sti
dec
(bad)
lahf
sbb
xchg
test
data16
mul
mov
pop
sub
and
pop
call
cld
push
jl
jns
xor
dec
cwde
aad
jg
or
rol
lea
mov
mov
dec
fisttp
ins
cmp
popa
dec
ins
xchg
pusha
cli
pop
rol
jbe
or
pop
inc
loop
mov
dec
clc
loope
push
mov
adc
mov
popa
xor
lds
jno
pop
arpl
sbb
(bad)
(bad)
jmp
or
loop
mov
fwait
stos
or
xlat
mov
cmp
xchg
mov
shl
inc
push
xchg
cmp
mov
int3
arpl
test
loope
mov
add
repnz
das
cmp
sbb
push
jbe
pop
shl
adc
push
pop
xor
imul
popa
sub
xchg
adc
mov
in
mov
sbb
aaa
cmp
jae
fstp
imul
(bad)
xchg
xchg
ins
adc
js
test
jl
ret
(bad)
(bad)
push
push
fsubrp
xchg
cmp
xchg
mov
mov
jmp
mov
mov
mov
call
fld
jo
inc
adc
call
in
xchg
jns
dec
clc
lods
sahf
mov
jmp
call
push
sub
pop
ror
fstp
xchg
sti
sbb
movs
pop
sti
shl
retf
loope
(bad)
call
push
inc
and
xchg
loop
mov
test
(bad)
stos
push
jne
fwait
pxor
addr16
jns
jno
jg
sub
js
fwait
arpl
sub
and
into
(bad)
(bad)
dec
jecxz
inc
test
cmp
(bad)
bound
int3
jle
inc
cmovne
sbb
dec
mov
jmp
in
mov
inc
push
push
rol
mov
(bad)
(bad)
push
idiv
sbb
mov
sbb
cmp
cmp
jl
imul
inc
call
cmp
ja
cmp
sbb
in
(bad)
(bad)
mov
push
jne
sti
pop
xchg
mov
movs
push
inc
je
mov
inc
jne
fimul
mov
cmps
xor
test
bound
push
popa
les
cmps
movs
jmp
xchg
jp
sub
in
xor
(bad)
jmp
aam
mov
ins
mov
scas
mov
or
add
rol
(bad)
(bad)
dec
cmp
loopne
sar
jp
neg
add
pop
mov
stc
call
(bad)
(bad)
(bad)
call
clc
ss
iret
mov
cmp
fisttp
inc
ins
(bad)
aas
push
xor
(bad)
xchg
(bad)
(bad)
(bad)
jmp
in
xor
fsub
repnz
(bad)
push
mov
arpl
push
inc
les
mov
xchg
(bad)
(bad)
(bad)
(bad)
jnp
jecxz
cmp
or
cmp
pop
out
arpl
xchg
inc
fucomi
push
(bad)
adc
jb
cmc
mov
push
add
lds
xor
dec
pop
jecxz
adc
jb
test
es
popa
jp
or
idiv
(bad)
dec
fs
xchg
es
adc
or
jno
and
sar
mov
aas
lock
inc
push
lea
cmp
add
jmp
cmp
cld
sahf
lods
xchg
adc
arpl
mov
std
jg
jmp
loop
sbb
mov
mov
jnp
inc
lea
shr
cmp
or
add
js
pop
fld
mov
mov
jmp
aam
push
inc
lods
jge
js
xor
sub
add
sub
push
bnd
push
std
push
bound
sar
aam
sbb
cdq
pop
push
pop
ds
js
mov
pop
cwde
cmp
ins
sti
inc
out
gs
xor
(bad)
mov
xchg
jne
jp
ficom
daa
aad
retf
or
into
hlt
or
push
push
sbb
stos
inc
std
cs
jg
sahf
add
sub
mov
std
shl
and
mov
pop
jmp
in
xchg
retf
add
and
cmp
dec
(bad)
loopne
mov
push
retf
push
pop
sbb
jb
dec
mov
pop
adc
(bad)
(bad)
(bad)
inc
push
cmps
fs
adc
push
pop
push
pop
lds
cmp
daa
inc
sub
(bad)
(bad)
jmp
jbe
jbe
scas
sbb
or
mov
fnstenv
(bad)
(bad)
fwait
test
call
pushf
sub
or
sub
aaa
inc
inc
(bad)
mov
pslld
xor
mov
pop
dec
sar
add
stos
and
jne
inc
cmp
push
sbb
movs
mov
(bad)
(bad)
aam
xchg
xchg
ret
ds
ins
(bad)
(bad)
ss
fild
jmp
fnsave
pushf
mov
in
fimul
sar
(bad)
inc
imul
sahf
sub
push
out
in
enter
ins
sub
dec
adc
pop
(bad)
push
or
addr16
test
loopne
in
pusha
cmp
add
bound
adc
or
outs
pop
retf
inc
lods
(bad)
jg
cmps
or
pcmpeqw
shr
fisttp
mov
pop
adc
dec
sbb
mov
xor
xor
push
inc
push
dec
sbb
std
dec
ja
add
dec
mov
test
outs
sbb
hlt
inc
fdiv
rol
int
cli
scas
adc
dec
push
iret
xchg
dec
or
call
movs
les
(bad)
arpl
out
rol
bound
enter
mov
pop
mov
xchg
lock
lock
(bad)
(bad)
(bad)
call
xchg
ins
push
sahf
gs
xchg
lahf
pop
cmp
sar
or
ret
fsubr
mov
cmp
xor
movs
inc
cmp
(bad)
(bad)
push
mov
int
sub
and
cld
sar
sub
out
pushf
and
inc
clc
(bad)
mov
jmp
mov
(bad)
(bad)
dec
bound
mov
pushf
cmp
(bad)
mov
hlt
push
cmp
(bad)
(bad)
cmp
mov
xchg
cmp
and
scas
aas
cmp
(bad)
call
(bad)
out
scas
dec
bound
mov
outs
arpl
daa
das
retf
and
mov
pop
fnstsw
inc
xor
push
call
sbb
sbb
adc
imul
imul
aas
out
aam
adc
mov
jp
movs
mov
push
adc
xor
(bad)
int
cmp
shr
es
(bad)
(bad)
call
test
mov
gs
sahf
mov
adc
outs
retf
push
fist
lahf
mov
cld
inc
pop
repz
fbld
cld
dec
fwait
or
pop
call
iret
inc
(bad)
clc
(bad)
(bad)
call
addr16
cmps
fisubr
jmp
pop
mov
ins
retf
ja
leave
push
les
(bad)
mov
je
das
es
and
outs
fld
mov
cmp
(bad)
(bad)
mov
hlt
jmp
dec
ret
fiadd
(bad)
(bad)
jge
inc
cmp
fisub
xlat
mov
pop
data16
(bad)
(bad)
(bad)
push
and
and
jg
icebp
add
out
retf
leavew
scas
pop
test
jmp
(bad)
sti
push
(bad)
xor
or
xchg
ss
pop
xchg
dec
pop
int3
mov
cmp
xchg
popa
or
pop
(bad)
inc
cli
clc
jle
sahf
cmp
arpl
int3
push
mov
cld
mov
xchg
sbb
inc
xchg
call
pop
mov
stc
fild
popa
out
xchg
iret
call
stos
xor
pop
sti
call
not
addr16
fdivp
aaa
gs
or
push
sbb
(bad)
(bad)
(bad)
jg
dec
dec
es
jp
stos
dec
test
jnp
add
out
inc
ins
pop
cdq
ins
push
xor
pop
or
(bad)
(bad)
push
aas
add
cmp
xchg
out
test
push
jae
out
add
fisubr
sar
cmps
pop
and
les
cs
call
jmp
xchg
dec
cmp
lahf
stos
push
dec
dec
jns
xor
add
rcr
dec
and
mov
add
sar
retfw
jg
(bad)
(bad)
(bad)
inc
loop
dec
sar
mov
out
lods
mov
xor
in
mov
push
leave
mov
(bad)
(bad)
(bad)
ds
or
inc
push
xchg
rcr
enter
les
call
dec
mov
xor
mov
adc
out
jbe
out
jg
mov
cmp
call
adc
mul
dec
loope
inc
call
aas
sti
(bad)
sub
inc
xchg
push
gs
(bad)
and
sbb
or
(bad)
xchg
mov
xlat
sbb
mov
cmp
push
hlt
pop
mov
sub
xor
daa
or
jb
test
xor
pop
nop
(bad)
jae
cld
push
xor
jbe
fdivr
push
mov
mov
add
(bad)
inc
js
lods
or
push
sar
ss
add
sbb
(bad)
(bad)
dec
ins
aad
sti
or
sub
ja
imul
pop
or
pop
loope
shrd
push
shr
fldlg2
xor
mov
(bad)
push
add
fsub
pop
imul
push
push
sahf
mov
leave
pop
(bad)
fsubr
call
lods
dec
icebp
fadd
sub
addr16
dec
aas
repz
and
test
push
pop
jo
cmc
(bad)
jmp
xor
scas
pop
dec
imul
loop
sbb
inc
(bad)
fst
jmp
dec
(bad)
push
leave
add
mov
fild
push
add
(bad)
(bad)
fcmove
bound
push
adc
and
test
hlt
(bad)
(bad)
fisttp
out
or
inc
daa
(bad)
aad
xchg
mov
and
push
(bad)
jmp
add
sub
jl
sbb
fldenv
add
fcomi
(bad)
(bad)
inc
dec
pop
ins
mov
lock
pop
xchg
push
and
lahf
push
in
sub
fdivr
(bad)
(bad)
fist
jl
mov
xchg
sub
aas
mov
sar
mov
add
(bad)
jmp
aam
inc
adc
imul
and
lods
mov
sbb
(bad)
mov
push
retf
mov
test
xlat
fwait
xchg
push
adc
or
movntps
or
(bad)
(bad)
call
ret
call
rcl
jmp
bsf
add
(bad)
(bad)
jmp
mov
das
jbe
repnz
push
imul
xchg
cmp
(bad)
jecxz
cmps
addr16
(bad)
call
dec
xor
or
cwde
pop
nop
mov
xchg
and
dec
push
cmp
pusha
pop
(bad)
jmp
nop
mov
stos
test
xor
and
(bad)
dec
lea
aaa
adc
dec
(bad)
(bad)
(bad)
inc
mov
pusha
mov
sbb
mov
ds
xlat
jmp
cdq
mov
mov
jmp
rcr
(bad)
jg
add
cmp
xchg
mov
test
xor
loope
cli
cld
dec
stos
or
mov
add
add
fwait
mov
sbb
(bad)
out
fbld
(bad)
mov
fcmovu
jle
mov
(bad)
stos
lds
dec
(bad)
(bad)
(bad)
(bad)
cmp
pop
push
lock
mov
or
(bad)
fild
jmp
jae
shl
jg
inc
xchg
jge
ret
sbb
fsubr
shr
lock
jp
jg
cld
mov
jne
(bad)
fild
fwait
mov
jo
adc
pusha
inc
and
(bad)
fistp
fadd
push
push
jne
pushf
pop
adc
push
mov
xlat
mov
xchg
xchg
add
jp
stc
out
call
jbe
imul
mov
sub
xchg
xchg
sar
(bad)
(bad)
out
mov
mov
xchg
adc
retf
nop
and
rol
or
lahf
adc
xchg
movs
stos
(bad)
(bad)
mov
mov
into
mov
dec
call
or
aad
and
repnz
fild
popf
jb
push
xchg
jp
sub
dec
xor
mov
jns
std
(bad)
(bad)
call
mov
push
test
stc
xor
xchg
sub
(bad)
jg
inc
cmp
mov
dec
dec
gs
pop
repnz
adc
scas
pop
cmp
inc
hlt
mov
rcr
mov
adc
push
mov
dec
or
cld
jg
sahf
in
adc
bound
jle
test
mov
pushf
xor
xor
xchg
dec
lods
imul
pop
dec
cli
(bad)
jl
repnz
inc
inc
cmp
in
movs
pop
ins
call
push
rol
dec
sbb
(bad)
out
xchg
(bad)
lods
push
and
lods
xchg
xor
jmp
xchg
jp
imul
fmul
je
adc
in
and
ds
scas
xor
leave
cmp
add
mov
push
mov
dec
fisubr
adc
pop
sub
dec
push
mov
add
dec
xchg
in
push
cmp
mov
or
(bad)
idiv
(bad)
(bad)
(bad)
(bad)
fistp
pop
cmps
mov
lods
pop
pop
xchg
push
adc
adc
push
mov
inc
call
repz
stc
xchg
outs
cmp
lahf
pop
xor
test
(bad)
test
pop
add
xchg
retf
mov
fimul
inc
call
jmp
out
sti
lods
push
pop
xor
cmps
sahf
cmp
imul
pop
hlt
test
and
cmps
mov
enter
loopne
add
mov
cmp
(bad)
(bad)
call
ins
mov
data16
fcom
adc
jne
push
sbb
call
(bad)
das
sub
(bad)
dec
push
add
outs
leave
dec
fnstcw
(bad)
mov
fist
fmul
push
lods
xchg
(bad)
dec
push
dec
loop
jnp
aam
lds
add
cdq
mov
inc
push
clc
adc
dec
inc
cmp
cs
xor
in
mov
cmp
rcl
(bad)
(bad)
inc
jno
cmp
cld
js
mov
shl
mov
jne
sbb
xor
ficom
add
(bad)
(bad)
inc
dec
test
xor
cmp
aad
pop
in
or
enter
call
cmp
retf
outs
dec
jae
daa
data16
fucomip
(bad)
je
pop
add
cmp
outs
pop
pop
(bad)
push
std
adc
xchg
dec
rcl
mov
jl
jae
sub
cmp
hlt
ficomp
(bad)
hlt
ret
outs
push
aas
sbb
repz
(bad)
(bad)
call
cs
mov
jb
dec
(bad)
cmc
mov
sahf
pop
(bad)
mov
fwait
lods
jnp
out
clc
ds
fsub
pop
jecxz
je
lods
add
xor
and
(bad)
call
scas
inc
shl
mov
cmps
stos
xor
loopne
cmps
jbe
not
(bad)
(bad)
call
push
repz
sbb
dec
jg
ret
outs
test
std
or
les
(bad)
mov
(bad)
(bad)
cld
add
pop
pop
fld
inc
jmp
mov
jl
xchg
imul
pop
mov
adc
(bad)
call
int
sub
lods
jle
iret
push
std
add
xor
and
xchg
sub
xchg
sub
(bad)
(bad)
(bad)
dec
jns
mov
cmc
push
push
add
daa
mov
xor
jne
ss
mov
push
inc
xlat
dec
lea
adc
retf
gs
sub
movs
mov
ins
pop
sub
in
(bad)
nop
(bad)
add
imul
push
hlt
mov
push
pusha
push
(bad)
mov
fmul
pop
leave
inc
div
inc
cld
(bad)
(bad)
fst
or
outs
inc
jbe
xlat
xchg
std
rcr
loopne
fwait
dec
cld
call
add
loope
sbb
dec
(bad)
push
enter
mov
popf
aas
es
mov
add
pop
dec
cli
addr16
fwait
inc
call
xchg
loopne
dec
cmp
(bad)
call
and
aas
in
fmul
aad
cmp
xchg
mov
(bad)
(bad)
(bad)
es
mov
push
mov
jmp
(bad)
mov
outs
cmps
inc
adc
adc
jmp
ficom
inc
shr
and
mov
(bad)
pmulhw
mov
mov
jg
sti
lock
(bad)
dec
and
sbb
mov
outs
adc
jecxz
je
ds
ins
jle
(bad)
(bad)
ffreep
cmp
out
stos
push
xchg
std
stos
aas
neg
mov
pusha
dec
aam
int3
clc
(bad)
inc
sbb
pop
repz
mov
cld
push
push
mov
mov
sar
inc
mov
sti
cmp
inc
add
jecxz
sar
xor
or
and
mov
(bad)
inc
push
cld
retf
add
or
sar
stc
cmp
jno
inc
dec
icebp
jmp
add
jno
pop
pushf
jg
mul
jecxz
arpl
test
cli
(bad)
(bad)
call
inc
call
or
js
mov
add
xor
idiv
push
ins
mov
inc
shl
aas
mov
(bad)
dec
sbb
test
mov
fwait
pop
xor
(bad)
(bad)
(bad)
mov
enter
xor
loopne
or
std
les
in
popf
mov
pop
or
(bad)
push
and
cmp
in
in
sub
call
inc
std
mov
fidivr
add
test
cmp
stos
inc
sbb
push
cmps
pop
bound
(bad)
call
cmc
mov
pop
repz
mov
push
pop
sbb
retf
inc
pop
sub
repnz
(bad)
(bad)
dec
or
fdiv
or
jmp
and
inc
jne
xchg
bound
sbb
xor
cld
jmp
xor
not
inc
sub
clc
or
ror
dec
and
das
inc
lahf
cmp
addr16
(bad)
jg
pusha
push
or
xor
sbb
add
ja
das
cmp
sbb
push
xchg
cs
(bad)
call
test
xchg
push
jmp
imul
scas
mov
mov
enter
addr16
push
adc
and
(bad)
(bad)
push
aaa
jg
jbe
xlat
push
or
sub
lods
jg
mov
cmc
or
test
mov
pop
gs
(bad)
rcr
xor
stos
mov
stos
pop
stos
lea
call
(bad)
(bad)
(bad)
call
push
aaa
in
fistp
cdq
(bad)
popa
int
or
sbb
adc
in
pop
jno
(bad)
(bad)
(bad)
call
adc
gs
jns
jne
and
outs
ins
js
cmp
sub
or
cmps
rol
pushf
push
(bad)
out
jno
ja
(bad)
dec
loope
push
mov
loopne
or
xor
push
iret
cmp
das
sar
ficomp
dec
adc
sbb
and
(bad)
shl
jno
fidivr
sahf
bound
cli
std
pusha
out
in
and
xchg
push
xchg
(bad)
jmp
dec
cmps
pop
dec
jge
sub
mov
xor
aas
mov
dec
(bad)
(bad)
(bad)
jmp
sbb
movs
arpl
xor
fwait
xchg
pop
sub
jo
mov
daa
xor
or
push
aam
stos
std
outs
and
nop
in
jbe
adc
pop
cld
sub
jo
sbb
mov
adc
(bad)
call
xchg
xchg
xchg
aaa
xor
sbb
and
popa
movs
sub
mov
sbb
mov
mov
mov
(bad)
call
lahf
(bad)
test
sbb
out
jmp
ss
icebp
push
push
cmp
push
test
imul
jbe
add
xchg
adc
mov
cld
idiv
repnz
std
mov
dec
mov
loope
rcl
push
pop
push
lock
retf
push
in
mov
dec
inc
inc
push
sar
in
adc
jp
jge
(bad)
mov
les
and
add
push
xchg
cmp
(bad)
(bad)
out
xor
(bad)
fmul
xlat
in
push
shl
shl
dec
scas
mov
and
ds
mov
mov
mov
xchg
iret
out
mov
nop
mov
loop
mov
(bad)
call
and
ret
popf
sbb
lods
cmp
jnp
add
jmp
pop
xor
push
add
stc
ret
mov
mov
and
sub
loope
cmp
arpl
adc
(bad)
jmp
(bad)
jbe
rcl
aad
cmc
cdq
pushf
les
(bad)
(bad)
(bad)
jmp
push
cmp
adc
(bad)
in
cmps
bound
icebp
xchg
pop
hlt
dec
repnz
jno
dec
les
call
dec
loope
dec
leave
call
(bad)
push
dec
pushf
push
mov
rol
add
(bad)
(bad)
(bad)
call
mov
in
mov
sub
xlat
stos
jle
gs
test
mov
pop
cs
jmp
sbb
mov
adc
dec
shl
adc
mov
and
sahf
xchg
inc
repnz
adc
xor
sub
outs
mov
jnp
dec
jp
hlt
outs
lock
add
or
adc
fabs
rol
jb
or
jmp
sbb
nop
je
mov
and
xlat
pop
jp
out
jmp
cmp
dec
cld
aaa
idiv
mov
xor
sbb
add
cli
shl
mov
xchg
dec
cmp
or
add
mov
xchg
lods
jmp
icebp
dec
cwde
mov
pop
lods
cdq
jne
sub
dec
out
call
or
fadd
(bad)
mov
jge
lock
inc
clc
xchg
push
das
mov
(bad)
jmp
add
int3
cdq
mov
and
xor
jg
out
lahf
dec
aam
adc
idiv
push
mov
lea
shl
stos
fs
sbb
sbb
or
pop
cmp
jbe
cmp
jmp
mov
and
mov
stos
adc
imul
cmp
lea
pusha
div
mov
inc
inc
(bad)
cmps
jle
hlt
call
mov
push
bound
idiv
out
jmp
push
std
pop
mov
popf
jno
cli
mov
xchg
ret
push
call
fisubr
dec
pop
xor
xor
mov
mov
ja
into
ins
push
test
stos
cmp
loopne
xchg
enter
nop
inc
pop
out
mov
std
jmp
xchg
ins
rcr
xchg
or
pop
xchg
xchg
cmp
mov
outs
daa
aam
imul
pop
jno
(bad)
data16
cmp
lds
in
inc
and
xor
push
xor
(bad)
jo
dec
cs
(bad)
mov
(bad)
popa
pop
shl
dec
jmp
push
aam
push
pop
xor
jp
retf
mov
clc
pop
stos
scas
mov
or
xchg
(bad)
cmp
(bad)
nop
xchg
xchg
sbb
xchg
push
aad
call
scas
and
or
xchg
xchg
xchg
in
mov
in
imul
xchg
add
sbb
cmp
aam
mov
(bad)
mov
leave
call
test
vstmxcsr
aaa
fwait
inc
lahf
adc
(bad)
dec
retf
dec
xor
push
xchg
push
mov
push
cmps
push
loop
sbb
fsub
(bad)
(bad)
(bad)
push
cmps
addr16
inc
xchg
xchg
cmp
xchg
(bad)
jo
cmps
pop
push
test
(bad)
dec
fimul
into
mov
and
je
lds
fsub
adc
int3
fistp
sbb
(bad)
call
(bad)
mov
adc
jno
fdivr
inc
add
or
mov
jmp
cld
mov
mov
pop
or
into
cmps
push
sub
fxch
inc
and
(bad)
(bad)
inc
mov
xchg
jmp
and
retf
pop
pop
or
cs
aam
mov
push
(bad)
mov
iret
cmps
xor
fwait
retf
std
and
sbb
inc
in
cwde
dec
dec
and
xor
cmp
inc
out
int3
xchg
(bad)
jmp
push
sbb
mov
daa
adc
inc
sar
call
push
and
xor
jo
push
es
lds
aas
dec
sub
cmp
inc
sbb
out
loope
je
mov
enter
dec
sti
movs
jnp
sub
push
inc
dec
and
xchg
mov
xor
adc
mov
sub
mov
arpl
and
in
jp
jmp
scas
push
lock
sub
inc
add
or
push
xchg
sar
add
sbb
inc
sub
rol
jmp
loop
sub
lea
jne
(bad)
fld
adc
sub
loopne
cmps
jmp
push
int3
mov
fcomip
jo
dec
adc
dec
scas
inc
dec
not
sbb
add
call
xchg
and
xchg
dec
bswap
lahf
jnp
pop
repz
or
or
int
inc
add
test
aam
sub
cli
sahf
(bad)
xchg
jae
inc
pusha
scas
(bad)
out
add
and
dec
fwait
sbb
(bad)
jne
cwde
iret
je
push
adc
dec
rol
xor
inc
adc
(bad)
(bad)
(bad)
mov
outs
sbb
fistp
cmps
aaa
or
clc
pop
sbb
mov
mov
lods
pushf
dec
dec
(bad)
(bad)
(bad)
jmp
or
imul
outs
mov
jg
pop
loope
jge
jmp
xlat
jmp
aaa
(bad)
push
mov
or
repnz
daa
shr
(bad)
inc
lahf
loope
arpl
xchg
shl
or
jl
push
pop
call
xchg
xlat
jno
cmp
aas
mov
les
outs
pusha
ins
fsubrp
inc
bnd
aas
push
jg
mov
fldenv
loopne
gs
(bad)
push
test
mov
test
push
rol
add
mov
cdq
cmp
(bad)
fcmovbe
imul
dec
xor
adc
inc
mov
push
xchg
les
mov
push
adc
ficomp
pop
out
out
leave
ret
lea
call
xchg
fsub
jb
jp
mov
lahf
mov
or
sub
clc
push
jmp
das
scas
lahf
or
pop
(bad)
fsubp
(bad)
jg
push
xchg
loop
adc
jge
mov
xlat
popa
jmp
mov
jmp
inc
in
int
jo
or
lock
retf
push
ja
push
jmp
stos
rcr
add
pop
cld
adc
mov
clc
add
dec
inc
in
adc
out
jp
mov
hlt
inc
repz
pop
int
(bad)
(bad)
(bad)
call
cmp
popf
retf
mov
shl
arpl
mov
mov
inc
dec
sbb
retf
(bad)
(bad)
(bad)
(bad)
jge
inc
shl
bound
int
mov
les
mov
sbb
xor
test
(bad)
(bad)
(bad)
call
adc
adc
nop
cmp
addr16
stos
and
pop
psrlq
mov
mov
clc
add
(bad)
mov
push
cmp
jecxz
mov
iret
and
call
sahf
jnp
pop
repnz
fxch
ror
mov
inc
pop
and
xor
dec
xchg
mov
xor
imul
(bad)
clc
call
jne
sub
js
int3
call
bound
or
or
cli
jmp
imul
jnp
pop
or
jg
xchg
pop
and
cwde
pop
call
jmp
(bad)
outs
and
pop
daa
sti
mov
enter
push
push
test
and
jle
(bad)
(bad)
(bad)
call
test
pop
mov
adc
fidiv
mov
loop
sar
(bad)
call
je
int
in
cmp
push
retf
cs
leave
jo
xor
(bad)
fdiv
(bad)
(bad)
(bad)
call
adc
sub
aas
push
mov
xor
in
sti
lods
pop
pop
dec
push
sbb
or
shl
(bad)
dec
in
retf
cli
enter
or
push
shr
aaa
mov
stc
stos
xor
dec
jne
pop
cmp
sub
pop
inc
xchg
pop
pop
aad
cmps
loopne
pop
sar
pushf
(bad)
outs
add
call
dec
fidiv
mov
jmp
adc
repnz
cld
mov
xor
xchg
mov
and
pushf
xor
mov
lods
mov
mov
test
lods
test
fstp
sbb
push
movs
dec
fmul
retf
js
out
fild
shl
xchg
push
cmc
imul
inc
mov
xor
(bad)
(bad)
dec
imul
inc
sbb
pop
inc
(bad)
xor
cmp
sub
(bad)
dec
addr16
(bad)
xchg
xchg
inc
not
(bad)
mov
pop
dec
cmp
jnp
div
aam
push
mov
mov
aaa
add
dec
inc
ret
mov
xchg
jmp
cli
cli
sub
fwait
mov
adc
dec
cmp
lods
iret
sti
mov
jge
xor
into
pop
and
cmc
out
add
aad
inc
fs
clc
(bad)
(bad)
jmp
xchg
push
(bad)
sahf
lods
stos
cmps
jbe
cs
pop
rol
cmc
in
jp
test
fnsave
(bad)
(bad)
push
sbb
enter
mov
inc
sbb
jge
pop
or
(bad)
fidivr
sub
pop
popa
ror
xchg
mov
out
and
push
retf
jg
xchg
pop
ss
out
inc
or
(bad)
push
call
xor
sub
retf
or
icebp
push
pop
cmp
jecxz
inc
or
sbb
aam
and
jg
xchg
pop
outs
or
pop
cmp
pop
test
jp
(bad)
(bad)
(bad)
cmp
retf
sbb
int
inc
stos
push
jo
xor
adc
mov
cs
cmc
(bad)
cmps
ret
adc
sahf
les
sub
or
and
fdiv
repnz
stos
inc
lock
pop
mov
loopne
inc
inc
test
cs
(bad)
jg
add
inc
dec
push
out
std
sti
enter
xchg
jp
ss
ret
xchg
sbb
cmps
movs
call
push
(bad)
ds
xor
dec
repnz
mov
jl
test
inc
dec
pop
stc
dec
push
dec
ins
ds
arpl
call
cld
push
xor
cmps
jge
sbb
(bad)
(bad)
(bad)
jmp
std
mov
mov
loop
frstor
jno
loopne
push
fcmovnb
dec
cmp
jnp
mov
je
sub
or
inc
in
dec
test
mov
cli
mov
rcl
and
mov
jmp
dec
lock
and
aaa
sub
sbb
jmp
push
push
jecxz
pop
mov
sub
(bad)
stos
inc
pop
sbb
ficom
ret
(bad)
jg
icebp
xchg
push
imul
push
mov
loop
call
xchg
push
(bad)
mov
loope
xchg
jp
call
inc
outs
add
test
push
imul
mov
jge
call
loop
ficom
xchg
xor
push
fadd
push
stos
ror
jle
and
inc
sbb
(bad)
call
mov
inc
sbb
mov
pop
mov
movs
jmp
xlat
mov
and
mov
sub
adc
mov
imul
lods
jns
cmp
mov
sar
dec
jecxz
repnz
cmps
nop
xchg
add
push
lahf
mov
cmp
lea
ds
mov
push
sub
sbb
pop
idiv
call
std
mov
mov
dec
hlt
xor
jecxz
xchg
mov
and
jmp
(bad)
(bad)
jmp
(bad)
fist
(bad)
ja
dec
jg
xchg
xchg
or
sub
xchg
loop
mov
icebp
xchg
cmp
(bad)
(bad)
call
mov
shl
iret
pop
cmps
inc
mul
fmul
aad
pop
mov
in
xchg
ins
push
and
xchg
jge
(bad)
(bad)
(bad)
push
jb
or
enter
nop
imul
push
push
pop
dec
cmp
cmps
push
dec
cwde
test
repnz
hlt
or
(bad)
ficomp
aaa
mov
inc
jno
or
mov
aaa
out
jmp
or
test
sub
mov
cdq
jg
dec
hlt
outs
std
or
(bad)
cli
or
in
adc
xchg
mov
pop
fstp
sbb
ins
outs
xchg
inc
cmp
inc
cwde
and
stos
push
(bad)
jmp
retf
adc
mul
fs
push
xchg
lea
push
(bad)
(bad)
js
xadd
sbb
xlat
mov
or
mov
stc
dec
push
sub
daa
push
fimul
lock
icebp
hlt
mov
gs
mov
jle
sbb
sbb
mov
mov
(bad)
inc
jmp
push
test
cld
dec
stc
ds
lock
call
iret
dec
bound
(bad)
in
mov
and
retf
jmp
hlt
and
popa
dec
dec
mov
sub
add
mov
in
ret
cdq
call
sbb
(bad)
dec
call
inc
jp
adc
out
movs
xor
sub
inc
lods
push
repnz
retf
dec
fld
retf
nop
call
xlat
data16
pop
loope
add
aam
inc
rcl
cdq
les
sbb
mov
mov
or
outs
add
cmp
pop
jae
or
enter
cli
test
ret
leave
and
dec
loopne
and
js
call
jg
push
and
or
fdivr
xchg
mov
xor
cmps
stos
jo
test
adc
lods
and
cdq
push
(bad)
(bad)
jmp
xor
scas
jo
sub
imul
mov
ret
jmp
cmp
jecxz
dec
jle
jmp
or
popf
or
repnz
(bad)
(bad)
(bad)
fimul
imul
mov
iret
mov
push
sub
fstp
push
clc
add
clc
(bad)
(bad)
(bad)
push
jge
(bad)
imul
retf
push
pop
int3
fnstcw
push
sti
fdivr
hlt
sbb
jecxz
mov
es
xor
(bad)
add
xchg
mov
push
(bad)
hlt
add
rcl
(bad)
(bad)
in
inc
xor
add
ret
push
stos
repz
movs
push
or
and
sbb
(bad)
jg
mov
add
(bad)
in
out
or
addr16
cmp
or
icebp
mov
sbb
or
(bad)
js
retf
cmc
dec
(bad)
aas
xchg
inc
jecxz
outs
rcl
pop
gs
jmp
je
sub
mov
pop
mov
inc
lahf
and
mov
or
adc
jae
std
retf
(bad)
call
stc
dec
out
xchg
add
dec
pop
sbb
std
neg
adc
ins
loope
stos
ror
mov
mov
aad
(bad)
(bad)
(bad)
dec
daa
pop
sar
pop
mov
bound
nop
push
xchg
je
mov
xor
xchg
shr
jecxz
push
iret
cs
jb
(bad)
sbb
scas
xor
dec
test
mov
cdq
xlat
(bad)
(bad)
dec
mov
pushf
mov
out
cdq
rol
mov
dec
add
jmp
ror
jo
jb
sbb
mov
call
stos
mov
add
cmc
(bad)
(bad)
inc
mov
sub
xchg
adc
and
mov
or
xchg
mov
xor
mov
jp
push
mov
(bad)
jg
mov
out
xchg
ja
sub
add
mov
stc
inc
mov
adc
xchg
push
je
jp
jg
sbb
dec
shl
jmp
imul
(bad)
jmp
mov
adc
sub
add
cmps
mov
in
stos
mov
call
push
mov
(bad)
mov
sbb
lea
(bad)
call
cmps
fimul
movs
fs
adc
shr
in
(bad)
xchg
js
(bad)
(bad)
(bad)
in
push
dec
cmp
mov
mov
push
pop
es
fwait
mov
vmwrite
jmp
push
das
adc
(bad)
(bad)
jmp
xchg
aam
fwait
out
jno
xchg
xchg
jo
test
ins
and
inc
cmp
dec
mov
cmc
je
adc
jnp
add
(bad)
(bad)
jmp
cmps
cmps
jge
jmp
cs
jbe
mov
mov
or
pop
faddp
pusha
and
(bad)
jg
mov
test
jae
stc
adc
or
daa
scas
mov
mov
gs
jb
push
mov
xchg
stos
cwde
dec
pop
xor
sbb
fdiv
push
push
push
hlt
push
sahf
or
icebp
cld
mov
cmps
retf
(bad)
(bad)
call
xor
pop
cmc
mov
popa
lock
jl
retf
rcl
mov
test
sar
out
(bad)
(bad)
(bad)
inc
clc
cmp
add
mov
imul
dec
cmp
pop
addr16
shl
pop
pop
(bad)
(bad)
call
sbb
mov
jmp
cmps
xchg
sahf
push
inc
cmp
outs
and
scas
adc
inc
sbb
test
in
dec
movs
jp
(bad)
(bad)
(bad)
call
dec
sub
push
sub
scas
push
in
xchg
nop
(bad)
mov
add
in
call
push
call
mov
pusha
adc
or
inc
daa
pop
into
sar
sahf
sahf
pop
inc
push
or
fcomip
jmp
mov
pop
mov
or
push
stc
out
(bad)
jmp
adc
fiadd
inc
mov
mov
mov
(bad)
jmp
stos
int3
dec
(bad)
xchg
push
cmp
in
fcomip
dec
out
pushw
popf
cwde
jge
xchg
call
add
fistp
inc
(bad)
(bad)
(bad)
call
out
test
loope
xchg
in
out
adc
test
in
hlt
clc
addr16
fidivr
mov
(bad)
cld
push
mov
sub
xor
test
(bad)
mov
cmp
pop
sub
xor
out
pop
cs
cld
mov
push
es
push
hlt
inc
popa
or
sbb
fistp
jno
(bad)
(bad)
fsub
xchg
adc
mov
or
lea
sbb
xchg
sub
stos
addr16
(bad)
(bad)
and
mov
dec
xchg
mov
scas
aam
pop
cdq
clc
arpl
mul
scas
je
push
ins
dec
jmp
fcomip
jmp
mov
retf
inc
(bad)
inc
fnstenv
std
jmp
(bad)
inc
xor
adc
push
(bad)
mov
sbb
or
fistp
mov
inc
jno
cmps
mov
les
push
(bad)
(bad)
(bad)
(bad)
jg
out
or
aaa
ret
jno
cli
mov
jno
jo
fnsave
sub
push
and
lds
rcr
xor
mov
pop
mov
dec
add
cmps
(bad)
jg
mov
mov
pop
call
pusha
push
jle
mov
(bad)
jge
in
mov
push
mov
ss
idiv
push
sub
lods
xchg
outs
sar
and
xor
cmc
sub
sti
cmps
jle
outs
adc
jg
(bad)
imul
pop
add
mov
sbb
jg
xlat
lds
int
lods
aas
aam
idiv
js
jg
(bad)
inc
out
cld
sub
add
jmp
in
mov
out
and
fldenv
icebp
(bad)
call
jb
test
cmc
ret
push
fbld
in
(bad)
(bad)
jmp
ja
lahf
sbb
pop
jg
sub
cli
dec
push
outs
popa
adc
(bad)
jg
jmp
dec
or
pop
gs
popf
imul
push
lds
in
cmp
hlt
pusha
(bad)
outs
xchg
push
or
lods
fs
adc
xchg
sbb
nop
jno
mov
add
jmp
repz
fmul
shl
fdiv
jmp
fiadd
ja
cli
stos
adc
lods
lods
pop
pop
cld
(bad)
call
dec
jge
mov
xor
outs
adc
popf
pop
push
fucom
sbb
jg
push
hlt
xlat
jnp
data16
jnp
std
loop
(bad)
mov
xor
and
xor
imul
sbb
ror
jecxz
xchg
(bad)
inc
jo
push
xchg
retf
call
cmp
shl
call
push
pop
loop
inc
hlt
leave
cwde
pop
repnz
or
scas
outs
ret
arpl
(bad)
jmp
pop
dec
cmovl
cdq
scas
push
movs
push
daa
retf
pop
cli
fcmove
pop
and
cmp
(bad)
jmp
and
es
les
mov
lds
stos
ret
add
pop
add
(bad)
fwait
inc
and
sti
dec
cmp
push
jmp
cmc
call
movs
inc
jmp
mov
sbb
inc
movs
stos
mov
jmp
sar
data16
sub
push
icebp
pop
and
iret
movs
xchg
movs
sbb
jmp
xor
lock
xchg
sbb
jl
dec
pusha
push
add
jns
call
xchg
outs
pop
or
or
(bad)
jmp
mov
push
mov
xchg
adc
js
jnp
mov
fucomi
aad
xchg
pop
stos
lods
sbb
jg
and
and
pop
cli
adc
scas
inc
cmps
(bad)
and
mov
aad
dec
push
or
(bad)
jmp
xor
inc
jne
repz
jp
jmp
lods
stos
xchg
pop
popa
ficom
jg
test
(bad)
jge
pop
(bad)
jg
lock
mov
sbb
fs
xchg
lea
(bad)
(bad)
call
pusha
shr
out
fidiv
repnz
adc
cli
add
(bad)
jmp
pop
sbb
add
movups
loope
mov
jmp
and
(bad)
fcmovnu
mov
push
pop
mov
push
test
cmp
pop
inc
mov
shl
mov
jmp
push
test
mov
stos
test
call
aad
test
(bad)
(bad)
stc
push
ret
mov
sub
mul
test
jmp
mov
cmp
dec
xor
push
clc
aaa
loop
gs
xlat
mov
(bad)
sbb
adc
add
lea
push
and
dec
test
loopne
push
push
(bad)
cmc
mov
shr
je
push
(bad)
(bad)
(bad)
fisttp
cmp
jg
in
shr
sbb
nop
and
mov
out
(bad)
lahf
fild
cld
call
jbe
inc
inc
jne
push
mov
push
addr16
dec
pop
(bad)
(bad)
(bad)
(bad)
jns
mov
mov
or
adc
gs
pop
lock
out
jl
mov
sub
test
mov
or
xor
cli
sbb
cmp
sub
data16
idiv
call
add
mov
push
xchg
mov
das
sub
loope
(bad)
(bad)
(bad)
call
(bad)
jmp
xor
jl
add
and
test
lock
mov
(bad)
jmp
adc
xlat
mov
shl
mov
sbb
jne
jb
repz
inc
mov
xor
mov
lahf
lds
sub
in
mov
outs
les
mov
mov
adc
ficom
jnp
jnp
aaa
(bad)
(bad)
(bad)
inc
mov
inc
sbb
and
jns
sbb
clc
ja
test
sbb
jmp
mov
loop
inc
imul
(bad)
push
imul
(bad)
(bad)
jmp
lods
xlat
mov
jns
aam
iret
mov
push
(bad)
aad
out
addr16
pop
sub
and
mov
inc
cmps
(bad)
clc
push
sub
(bad)
cmc
jb
aad
aad
mov
mul
out
xor
jmp
mov
adc
adc
inc
pop
add
call
stos
cmp
fdiv
icebp
jb
jg
(bad)
(bad)
push
fimul
and
rol
push
and
cmp
sbb
inc
aas
repz
mov
dec
xor
call
push
add
les
mov
je
mov
mov
sub
icebp
pop
(bad)
fbstp
sub
cmc
shl
adc
mov
(bad)
(bad)
jg
retf
aas
push
mov
xor
push
sbb
pop
jb
and
fisubr
and
add
loope
sub
fstp
mov
and
adc
ja
sar
cmp
fwait
mov
fisttp
call
in
scas
aam
jp
xor
adc
jmp
mov
xchg
in
(bad)
(bad)
(bad)
(bad)
fsubr
test
adc
push
dec
dec
pop
hlt
js
test
aaa
adc
(bad)
(bad)
(bad)
call
test
push
outs
sar
mov
adc
arpl
shl
je
(bad)
(bad)
dec
lea
push
popa
nop
inc
loope
test
in
pop
sbb
aaa
mul
lea
ss
(bad)
(bad)
jmp
lahf
sub
lods
stos
jns
jge
cdq
mov
cmp
sub
lock
xor
xor
xchg
cmp
ret
inc
cmp
outs
test
cwde
push
jns
leave
ins
sub
(bad)
mov
stos
stos
add
(bad)
mov
sub
push
(bad)
push
push
stos
jl
mov
rcl
enter
rcr
leave
test
pop
xchg
mov
(bad)
add
pushf
aas
in
lods
ss
mov
pop
jmp
outs
cli
or
inc
mov
xchg
dec
fs
or
aad
(bad)
jmp
xlat
xor
loopne
mov
imul
adc
sub
add
mov
jle
cmp
jne
sbb
add
(bad)
(bad)
(bad)
jg
cmc
dec
cmc
jl
fwait
int3
adc
shl
xchg
gs
scas
sbb
cmp
je
hlt
jmp
mov
dec
rcr
stos
mov
inc
and
call
icebp
mov
imul
(bad)
(bad)
fistp
sti
mov
jbe
dec
and
fidiv
jno
and
imul
out
in
(bad)
(bad)
(bad)
(bad)
jmp
xchg
jne
shl
xchg
jae
fdivr
or
sbb
fwait
sbb
pop
mov
sbb
mov
clc
and
or
jmp
mov
add
stos
mov
shl
add
hlt
mov
dec
loope
pop
inc
repnz
inc
mov
scas
xchg
mov
les
rol
dec
and
inc
pop
mov
movs
fdivrp
mov
lods
inc
push
sahf
pop
cmp
(bad)
xchg
scas
(bad)
(bad)
inc
ret
or
in
jecxz
mov
push
sbb
(bad)
dec
mov
and
cs
cmp
push
sbb
lock
jb
mov
loopne
mov
cmp
icebp
add
pop
xor
mov
push
jmp
shl
push
mov
lahf
jmp
and
mov
lea
jp
(bad)
jmp
mov
pop
jg
fnstcw
test
mov
out
inc
imul
pop
push
mov
jp
mov
outs
sbb
(bad)
jg
mov
jb
or
or
jno
ins
(bad)
(bad)
(bad)
(bad)
mov
push
mov
pusha
adc
jne
xor
popf
pusha
loopne
(bad)
call
hlt
or
jbe
jb
adc
mov
cdq
xchg
(bad)
call
adc
dec
push
and
hlt
scas
push
cmc
mov
inc
es
sbb
(bad)
(bad)
jmp
mov
int
mov
divps
out
ja
sub
xor
adc
outs
(bad)
call
shl
cmp
pop
mov
gs
and
push
dec
inc
je
bts
push
rol
loop
xchg
jg
mov
sbb
push
pop
add
(bad)
jmp
dec
int3
xor
aaa
cld
sahf
xor
add
(bad)
retf
jg
cli
jbe
mov
push
stos
lahf
push
xchg
xor
inc
test
ins
cmc
cmp
(bad)
(bad)
push
vmaxsd
or
fistp
in
enter
imul
(bad)
(bad)
(bad)
jmp
test
fistp
mov
dec
clc
mov
inc
xchg
rcr
stc
lods
adc
fcomp
jl
pop
inc
out
les
or
lods
mov
cmp
dec
aaa
(bad)
(bad)
jmp
adc
retf
sub
sbb
pop
std
(bad)
adc
je
arpl
jg
push
mov
(bad)
(bad)
cli
mov
out
je
adc
and
push
mul
mov
dec
cwde
adc
(bad)
call
(bad)
ds
xchg
fcomp
pop
mov
out
sahf
dec
xlat
ja
xor
cld
lods
sbb
(bad)
(bad)
jmp
aas
jb
push
rcr
int3
sbb
lahf
xchg
test
rol
jecxz
test
(bad)
(bad)
jmp
mov
add
rcr
call
imul
pop
call
dec
jmp
out
sbb
hlt
(bad)
es
jl
rep
call
call
xor
sar
push
in
mov
ins
cmps
sbb
xchg
sbb
cs
(bad)
(bad)
jmp
test
call
sub
sub
test
xchg
int
cmp
std
(bad)
(bad)
jmp
ss
inc
ds
fbld
add
aaa
dec
add
mov
(bad)
(bad)
jmp
jns
push
out
mov
mov
gs
sar
sub
lock
(bad)
call
test
pop
sbb
sub
int3
(bad)
cli
push
ret
inc
rol
ror
retf
pop
shl
xor
add
jge
sub
dec
add
push
dec
cli
retf
rol
pop
mov
mov
jmp
dec
clc
(bad)
(bad)
call
jmp
loopne
mov
mov
xor
and
or
mov
outs
in
loope
(bad)
mov
int3
je
mov
repz
inc
div
scas
bound
xor
xlat
xchg
dec
add
out
hlt
popf
retf
into
dec
(bad)
(bad)
(bad)
inc
test
xchg
test
mov
or
sahf
mov
dec
call
xchg
pop
jbe
in
call
xor
jmp
push
dec
xchg
retf
hlt
ja
aaa
inc
das
in
mov
(bad)
xchg
cwde
out
inc
dec
(bad)
(bad)
(bad)
(bad)
stc
or
pusha
mov
push
aas
repz
loop
test
and
je
mov
(bad)
(bad)
jl
nop
push
cmps
mov
pop
and
retf
push
outs
dec
das
mov
add
xchg
lock
jno
dec
mov
pop
pop
cld
lahf
retf
jo
cmps
test
xor
jmp
into
cmp
or
out
inc
pop
xchg
fnstcw
(bad)
push
sub
add
ret
xchg
pop
daa
sub
rep
dec
or
mov
inc
pop
(bad)
(bad)
(bad)
inc
cmp
push
pushf
popf
imul
div
ret
pop
push
(bad)
sbb
mov
out
retf
iret
ret
imul
fist
test
or
add
fwait
icebp
jo
jbe
lock
fcomip
inc
outs
test
outs
iret
push
pusha
pusha
out
jmp
mov
ja
cli
mov
sub
inc
xchg
loopne
call
std
sbb
inc
and
mov
popf
clc
mov
xlat
pop
push
mov
adc
sub
jmp
jge
and
(bad)
(bad)
jmp
jle
pushf
sub
add
jg
out
stos
dec
das
sti
popf
mov
popa
push
(bad)
(bad)
(bad)
jg
push
pop
mov
int
dec
and
dec
cmps
sahf
mov
push
sbb
lahf
cmp
cmp
fwait
inc
push
cmp
hlt
jg
sub
cmp
or
push
les
jmp
clc
pop
mov
mov
xor
mov
rcl
pop
(bad)
(bad)
(bad)
(bad)
cli
jecxz
or
ins
fs
pop
sbb
sbb
cmc
call
or
jmp
fadd
(bad)
dec
xchg
stos
push
aaa
inc
push
hlt
pushf
pushf
inc
pop
add
ret
push
xchg
fmulp
push
(bad)
(bad)
(bad)
(bad)
cmp
add
movs
pop
rcl
lds
rol
pop
fild
les
scas
xor
dec
add
les
(bad)
out
lods
add
(bad)
(bad)
cmp
enter
cwde
and
adc
and
sub
mov
pop
dec
mov
(bad)
(bad)
(bad)
stc
adc
repnz
mov
lea
daa
jmp
shl
pop
pop
xor
aaa
sub
push
sub
inc
stos
adc
inc
xor
(bad)
in
xor
push
hlt
es
mov
cli
(bad)
(bad)
(bad)
aam
add
loopne
jbe
cmp
pop
fisttp
imul
test
mov
fsubp
mov
jnp
sahf
(bad)
pop
sub
cli
jmp
jbe
or
and
je
sbb
sub
out
dec
imul
pop
mov
ins
sub
cmp
ret
mov
jne
xlat
js
push
aam
sbb
xor
mov
retf
add
and
dec
pop
and
push
out
xchg
dec
push
cmps
adc
(bad)
jmp
nop
mov
xchg
cmp
cmp
xchg
movs
dec
adc
shr
imul
add
push
rcr
pop
or
(bad)
(bad)
push
push
jecxz
inc
std
fdivr
test
push
xor
cld
shr
sar
outs
test
pop
hlt
pop
lds
cmp
adc
mov
mov
(bad)
fbstp
cmps
push
imul
popf
mov
loope
mov
(bad)
inc
dec
fild
cmps
rcl
(bad)
call
fst
push
outs
nop
mov
ds
xchg
lods
jnp
in
push
dec
das
clc
(bad)
call
push
sub
mov
dec
fmul
leave
out
cmps
pop
jl
fistp
and
(bad)
jmp
(bad)
mov
sahf
cs
inc
stc
jmp
dec
jae
push
dec
jp
cmp
pop
movs
adc
es
adc
(bad)
(bad)
jg
clc
cli
jl
idiv
xor
jmp
sbb
mov
ss
(bad)
dec
imul
mov
or
ds
and
outs
sahf
es
jp
cld
call
xchg
cmp
push
div
sar
(bad)
inc
es
in
movs
inc
test
xchg
(bad)
leave
cmps
imul
(bad)
(bad)
mov
jge
retf
lock
adc
(bad)
fwait
imul
(bad)
mov
sar
call
xchg
pusha
or
mov
std
fcomp
add
mov
pop
mov
adc
loope
pusha
push
jmp
clc
jg
sbb
xchg
or
icebp
xchg
sahf
mov
or
scas
xchg
sub
(bad)
jnp
inc
fsub
(bad)
(bad)
fdivr
dec
in
mov
std
or
loopne
aaa
sbb
pop
sub
dec
movs
cmp
sub
push
ss
add
mov
jno
cdq
cmp
imul
shl
ins
push
and
add
inc
cdq
test
mov
(bad)
sbb
out
(bad)
(bad)
call
pop
sub
xor
popf
push
repnz
mov
sub
sub
mov
push
cmp
(bad)
(bad)
dec
pop
aad
lea
(bad)
js
mov
jge
(bad)
pop
or
call
sbb
jg
(bad)
jg
movs
pop
clc
pop
scas
fimul
xchg
jl
lahf
add
(bad)
(bad)
(bad)
dec
xchg
adc
enter
ins
mov
sub
test
stc
or
mov
add
hlt
(bad)
(bad)
(bad)
(bad)
out
mov
or
cmp
xlat
cwde
dec
inc
pop
sbb
(bad)
lea
lods
dec
inc
pop
es
add
pop
add
mov
mov
scas
push
fist
(bad)
(bad)
jg
and
out
jmp
cmp
or
and
xor
fnsave
sub
inc
dec
mov
mov
nop
movs
mov
pop
not
shl
sbb
push
add
add
xchg
clc
cmps
(bad)
call
or
ins
sub
cli
adc
test
(bad)
(bad)
jg
mov
xchg
in
test
xchg
xor
stos
and
movs
sub
mov
call
clc
adc
jge
xor
lock
test
cmps
inc
jnp
mov
outs
mov
xchg
jle
das
in
loopne
pop
call
pop
jbe
jmp
mov
mov
inc
or
pushf
dec
out
push
sbb
(bad)
(bad)
jmp
add
jae
mov
nop
nop
and
pop
pop
add
(bad)
(bad)
call
or
or
daa
or
fcmovu
arpl
scas
(bad)
pop
xor
(bad)
sti
out
(bad)
dec
lock
or
jbe
mov
push
xor
les
ins
mov
or
inc
clc
add
xor
add
in
xchg
scas
clc
call
sub
xchg
mov
jmp
mov
lods
mov
fcmovu
test
stos
stos
imul
dec
mov
dec
xor
lods
retf
fs
adc
(bad)
cmp
mov
pop
jo
push
(bad)
inc
cmp
mov
jno
movs
pop
cmp
sbb
mov
mov
lea
mul
daa
jae
or
jmp
push
xchg
pop
popf
dec
mov
or
std
(bad)
(bad)
(bad)
fild
push
jno
scas
mov
outs
inc
dec
xor
outs
pop
add
popa
movs
xor
ret
(bad)
call
sub
xchg
mov
add
sbb
(bad)
(bad)
jmp
mov
imul
fiadd
push
inc
aas
mov
mov
dec
and
mov
js
jmp
ss
(bad)
call
and
int
stos
add
xor
stos
adc
dec
mov
pop
movs
ds
(bad)
(bad)
(bad)
jmp
(bad)
jno
fsubr
repnz
sbb
cmp
mov
xchg
lea
sbb
rol
jg
jmp
mov
pop
inc
stos
cmp
adc
repnz
out
push
(bad)
inc
push
ss
lea
cmp
into
mov
adc
dec
push
adc
mov
sbb
adc
mov
xchg
adc
lea
je
nop
add
inc
outs
or
sub
dec
movs
sub
(bad)
fs
cld
(bad)
(bad)
push
sahf
pop
retf
inc
ret
aaa
xchg
imul
push
adc
xchg
loope
push
test
mov
pusha
xchg
fsubp
sub
or
(bad)
(bad)
(bad)
cmp
xchg
xor
xor
rcr
push
mov
lahf
mov
mov
aam
dec
repz
clc
jl
xor
(bad)
jg
test
(bad)
das
int3
dec
mov
into
es
mov
das
push
pop
rcr
and
or
pop
mov
mov
(bad)
jmp
xor
sbb
fs
push
(bad)
jge
adc
sbb
loope
cwde
clc
adc
ins
inc
das
bound
(bad)
jp
adc
ret
arpl
inc
dec
mov
aaa
lods
push
(bad)
daa
push
add
js
xchg
inc
shl
xor
(bad)
(bad)
(bad)
dec
jl
jg
aam
mov
mov
mov
mov
xchg
xor
push
fcomp
in
pop
(bad)
jmp
rcr
fisub
inc
das
(bad)
sar
cs
jg
sbb
pop
shl
(bad)
push
jne
inc
imul
sahf
xchg
inc
loopne
mov
jge
add
cmp
push
inc
adc
arpl
ficom
icebp
jg
icebp
sbb
outs
sbb
das
dec
adc
ins
cwde
mov
cmc
out
cmps
or
ins
add
mov
(bad)
jg
mov
mov
outs
and
fisubr
outs
xlat
mov
dec
add
push
ret
out
push
dec
xor
pop
jmp
(bad)
(bad)
(bad)
call
mov
aam
call
call
mov
sbb
(bad)
jmp
cli
sub
(bad)
or
jle
or
in
or
mov
call
stos
leave
push
ds
mov
ja
mov
les
adc
out
mov
push
(bad)
mov
into
aam
js
pop
shl
(bad)
(bad)
(bad)
jmp
or
xchg
sub
jns
add
and
sub
mov
adc
or
(bad)
(bad)
call
or
shl
outs
push
out
dec
stc
mov
lea
dec
call
jbe
lds
stc
jno
push
jne
mov
add
pop
add
adc
(bad)
(bad)
call
icebp
adc
ds
les
clc
push
adc
and
addr16
mov
(bad)
(bad)
inc
cmc
lods
mov
dec
cmp
ja
jmp
cmp
mov
cwde
inc
cmc
repz
xchg
push
push
push
sub
(bad)
(bad)
call
mov
pop
loop
mov
or
dec
leave
inc
adc
fwait
push
xor
call
inc
sbb
mov
or
and
pop
int
fmul
das
rcl
fs
pop
scas
push
inc
or
pop
inc
jecxz
sbb
push
sub
cmp
cld
(bad)
dec
(bad)
icebp
stos
lods
xor
retf
or
or
loopne
in
stos
sub
loope
add
cmp
pop
mov
adc
mov
rcl
sbb
inc
inc
test
ins
(bad)
test
xor
(bad)
(bad)
(bad)
call
mov
add
xchg
loopne
pushf
xchg
xor
rep
ret
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
sub
adc
scas
mov
push
xlat
retf
jo
jmp
fdiv
mov
retf
add
cmp
test
test
add
(bad)
(bad)
(bad)
mov
bound
sub
mov
xchg
pop
jne
cmps
or
adc
popf
adc
jmp
mov
lods
xor
lods
(bad)
(bad)
(bad)
(bad)
out
loope
push
out
xchg
mov
pop
jg
xchg
xchg
mov
fwait
data16
sbb
(bad)
(bad)
jmp
test
dec
aas
icebp
js
imul
(bad)
es
lea
mov
fdivr
inc
ss
cld
mov
adc
mov
cmp
sub
in
push
push
dec
fsubr
cmp
jmp
cmps
or
(bad)
push
mov
dec
pop
(bad)
(bad)
(bad)
mov
daa
ficomp
into
fnstenv
(bad)
pop
push
lock
es
mov
sbb
add
loope
outs
push
mov
mov
lea
cmp
xchg
mov
data16
(bad)
(bad)
mov
push
fild
not
push
sbb
pmaxub
(bad)
dec
ret
mov
add
and
cmps
mov
clc
mov
inc
add
dec
sub
shl
ja
stc
jns
sbb
inc
int3
emms
push
inc
add
mov
daa
adc
pop
mov
xor
out
xchg
adc
cld
mov
mov
xchg
mov
enter
call
ret
mov
enter
lds
rol
call
test
jb
and
mov
mov
(bad)
(bad)
(bad)
jmp
cmp
bound
xlat
jmp
sbb
ret
stos
inc
jmp
and
cdq
adc
aas
(bad)
nop
ja
add
inc
clc
push
es
jle
lahf
xor
xlat
jl
push
sti
mov
xor
mov
fild
add
loope
ja
int
pop
int3
loop
call
pusha
pop
sti
repz
mov
ja
(bad)
mov
bound
mov
mov
ds
push
(bad)
(bad)
(bad)
dec
std
fwait
rol
lods
or
and
mov
js
dec
xor
or
add
bound
outs
cmp
(bad)
(bad)
jmp
pop
(bad)
xor
xchg
jno
retf
mov
adc
sbb
es
cmp
lock
fnsave
(bad)
inc
cmps
xor
adc
sbb
cdq
pop
sbb
idiv
(bad)
(bad)
dec
and
pop
call
addr16
(bad)
xchg
push
mov
(bad)
scas
sbb
jp
or
(bad)
xchg
xchg
ja
(bad)
(bad)
(bad)
jmp
mov
cmp
pop
push
cwde
pop
sub
call
in
test
(bad)
pop
cmp
nop
ss
icebp
add
push
rcr
jle
mov
cld
out
jle
xor
add
mov
sbb
data16
(bad)
(bad)
jg
mov
int
add
xor
pushf
xor
pop
jge
sbb
sub
shl
mov
push
(bad)
(bad)
jmp
mov
sysexit
push
mov
into
inc
scas
xchg
dec
out
icebp
lahf
scas
cmp
stc
lea
sbb
jmp
or
jmp
(bad)
dec
int
xchg
aaa
add
or
out
sbb
sbb
shl
outs
test
jl
gs
adc
xchg
push
dec
repnz
add
pop
fadd
pop
movs
in
out
sub
imul
clc
lods
sub
(bad)
inc
aam
sub
addr16
(bad)
(bad)
push
cmps
pand
iret
ret
fbld
push
out
fstp
hlt
ret
rol
sbb
push
lock
(bad)
call
mov
cwde
inc
ss
xchg
push
movsx
int
dec
aas
add
cmc
in
xlat
mov
frstor
mov
fild
push
sbb
neg
jle
sub
mov
jmp
in
cmp
cmc
dec
pusha
adc
js
iret
popa
shl
push
(bad)
(bad)
fild
fsubp
mov
dec
in
sbb
clc
adc
xchg
cmp
jmp
cli
outs
nop
mov
push
xor
add
lock
outs
ins
pop
xor
(bad)
jg
cli
call
into
dec
sahf
sub
mov
cmp
xchg
pop
pop
push
jp
pop
add
(bad)
(bad)
(bad)
push
push
xchg
add
dec
cmp
imul
dec
enter
inc
pop
cld
call
xor
pop
xchg
dec
clc
push
out
sbb
push
adc
cmp
int3
mov
push
(bad)
(bad)
(bad)
fisub
sahf
jecxz
enter
iret
mov
bnd
rol
gs
push
pop
call
inc
mov
inc
sbb
pop
sbb
test
mov
ror
sbb
pop
xchg
jmp
int3
cmp
jns
cmp
jle
cmps
dec
mov
or
retf
shl
xchg
dec
pop
dec
fstp
xchg
popa
std
imul
sar
fwait
lahf
pop
cld
mov
jmp
mov
repnz
enter
push
sub
aad
lods
(bad)
imul
je
jmp
cmps
popf
js
push
mov
sti
ud1
push
repz
xchg
loop
mov
out
call
(bad)
(bad)
dec
xor
aad
cmps
xchg
rcl
pop
daa
ror
cmp
div
repnz
xchg
lock
std
jo
fnsave
push
inc
push
imul
adc
test
jne
inc
jmp
popa
cdq
movs
int3
sbb
xor
rol
data16
pop
jp
icebp
mov
shl
lock
jmp
in
fldcw
mov
mov
adc
lea
test
jp
in
ins
jl
xchg
fild
xor
fstp
cmp
(bad)
inc
retf
inc
out
sub
test
imul
cmc
(bad)
(bad)
out
push
pop
sbb
mov
jp
jecxz
inc
mov
into
mov
fsubr
(bad)
mov
or
or
sbb
out
mov
pop
mov
lds
inc
mov
hlt
jl
sar
pop
and
test
(bad)
(bad)
dec
mov
adc
cli
cmp
push
add
rcr
stos
test
pusha
or
sar
sbb
call
fimul
lds
cmc
fbld
fld
mov
mov
mov
sbb
and
fistp
hlt
add
loopne
dec
xor
(bad)
dec
sar
out
cmp
pop
(bad)
sub
das
jo
add
jmp
data16
and
(bad)
fistp
call
mov
inc
xchg
add
cmp
xchg
xor
call
or
stos
cmp
shl
add
clc
js
xlat
push
dec
nop
xchg
ja
pop
clc
(bad)
jg
mov
xchg
sbb
xor
test
jp
lock
loope
test
pop
sub
and
jg
mov
fwait
mov
(bad)
jmp
pop
and
js
sbb
fcomp
or
sar
das
adc
mov
and
jns
aas
mov
nop
cs
inc
jg
and
push
mov
pop
pop
xchg
inc
mov
test
xor
pop
fcom
adc
sub
dec
and
mov
loope
jae
ja
out
clc
xor
pop
cmps
add
or
jno
ror
pop
push
xchg
push
xchg
cdq
jle
push
or
dec
repnz
cmp
and
cmc
inc
and
hlt
cmps
data16
test
(bad)
(bad)
cmp
rol
cmp
jae
(bad)
aaa
or
and
jl
push
or
xor
cmp
cld
(bad)
fcom
iret
mov
jge
adc
dec
xor
xchg
xchg
(bad)
call
add
adc
(bad)
mov
pop
ss
or
mov
adc
(bad)
jg
call
inc
daa
inc
icebp
add
repnz
push
stc
mov
(bad)
aad
arpl
dec
xor
aam
xor
clc
inc
cs
sbb
(bad)
sbb
push
mov
pop
sub
xchg
push
jge
es
(bad)
(bad)
(bad)
inc
mov
mov
out
add
dec
sbb
jge
jmp
mov
in
(bad)
(bad)
(bad)
(bad)
(bad)
mov
jb
in
pop
jo
fwait
xor
stos
imul
ror
dec
aas
fld
call
cld
(bad)
fnstsw
add
xchg
and
stos
(bad)
(bad)
(bad)
(bad)
(bad)
mov
hlt
movs
mov
ret
stos
call
push
cs
sbb
push
inc
jmp
cmp
test
push
(bad)
(bad)
aad
lods
mov
mov
cmp
mov
(bad)
hlt
fldenv
inc
sub
out
inc
push
mov
adc
daa
xlat
mov
xor
je
sub
push
fidiv
push
js
jmp
loop
sub
sbb
or
aam
aaa
int3
xchg
inc
pop
push
pop
and
mov
cwde
pop
lock
clc
mov
imul
(bad)
(bad)
(bad)
call
stos
scas
neg
cmp
shr
add
mov
jle
add
mov
mov
or
adc
fwait
and
cmp
out
out
push
pop
and
call
xchg
cli
push
jge
xor
cli
mov
gs
fimul
sar
(bad)
dec
in
popa
cli
mov
ds
push
jle
leave
ret
mov
vcvtss2sd
inc
mov
xor
add
and
ret
call
popa
sbb
xlat
cwde
aad
fwait
stos
or
sar
(bad)
(bad)
out
(bad)
push
sbb
jmp
scas
xchg
sbb
pop
aad
lds
jno
(bad)
(bad)
jmp
(bad)
lock
mov
cmps
ret
adc
push
mov
push
sub
jbe
std
(bad)
call
sti
(bad)
imul
xor
sbb
not
dec
xchg
mov
in
cmp
(bad)
mov
fsubr
lods
outs
cmp
lods
cmp
adc
adc
(bad)
inc
ds
cmp
addr16
ins
(bad)
(bad)
(bad)
(bad)
cmp
push
mov
and
dec
test
push
jmp
(bad)
xor
std
or
sub
add
inc
jl
dec
in
ja
mov
jmp
xchg
or
inc
dec
fstp
pop
inc
or
(bad)
mov
push
icebp
adc
stos
stc
sbb
xchg
cmp
gs
bound
sbb
xor
imul
(bad)
(bad)
call
or
out
cmp
lds
xor
hlt
data16
jecxz
(bad)
(bad)
(bad)
jmp
sub
jmp
jne
xchg
dec
scas
push
push
and
in
push
jl
mov
jmp
dec
test
jge
ins
jl
test
push
loopne
pop
xchg
dec
pop
cmp
cld
(bad)
(bad)
call
add
add
aaa
movs
inc
sbb
and
shl
ins
dec
inc
std
dec
sbb
dec
mov
(bad)
jmp
pop
sahf
and
int
adc
mov
cwde
ror
inc
jnp
inc
adc
ret
push
or
hlt
cmp
jo
mov
mov
pop
