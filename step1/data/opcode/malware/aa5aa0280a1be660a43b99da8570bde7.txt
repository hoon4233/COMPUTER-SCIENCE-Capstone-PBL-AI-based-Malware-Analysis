(bad)
call
push
mov
push
lea
add
dec
pop
popa
push
sahf
lahf
jge
or
icebp
push
(bad)
(bad)
(bad)
jmp
and
outs
popa
or
jmp
mov
fld
adc
(bad)
(bad)
(bad)
call
push
sar
or
pop
iret
mov
sbb
icebp
stos
nop
xor
scas
xchg
inc
jne
adc
(bad)
(bad)
push
mov
jge
hlt
movs
xchg
sub
ins
stos
(bad)
stos
pop
das
pusha
movs
mov
(bad)
(bad)
(bad)
jmp
int3
in
sbb
jbe
clc
mov
lods
mov
adc
movs
rcl
mul
(bad)
(bad)
(bad)
dec
scas
pop
xor
mov
add
sub
ret
retf
in
retf
push
add
stos
pop
mov
mov
(bad)
push
mov
cmp
(bad)
stos
arpl
or
or
sbb
push
(bad)
(bad)
(bad)
inc
inc
adc
jle
in
pop
repnz
pop
test
(bad)
sti
clc
test
les
fcos
(bad)
(bad)
(bad)
std
jmp
and
or
mov
imul
retf
jp
mov
(bad)
call
mov
pop
dec
popa
mov
shl
(bad)
xchg
add
sbb
inc
into
mov
int
(bad)
adc
cli
loop
cmp
push
jge
lea
mov
(bad)
(bad)
call
sbb
pop
dec
sti
cmp
lds
js
dec
cmp
jge
jbe
outs
outs
mov
lods
dec
jns
push
fld
outs
loopne
xor
jmp
dec
and
cmc
(bad)
push
rol
ins
mov
(bad)
(bad)
(bad)
dec
mov
jnp
sbb
cmp
sub
mov
add
(bad)
(bad)
(bad)
jmp
inc
pop
sub
sbb
leave
mov
lahf
dec
mov
ret
adc
xchg
add
push
cmp
(bad)
(bad)
push
ins
(bad)
and
ins
jp
push
or
push
mov
out
push
loopne
xchg
and
stos
(bad)
push
sbb
jnp
repz
pop
and
dec
xchg
test
and
fs
outs
pop
call
mov
mov
push
xchg
jns
push
(bad)
sub
inc
or
dec
xlat
int
dec
enter
fdivr
int
bound
stos
mov
xchg
test
xchg
shr
lahf
test
(bad)
(bad)
(bad)
call
push
mov
outs
sub
or
xchg
cmp
push
retf
xchg
repz
out
retf
cmp
(bad)
stos
(bad)
(bad)
(bad)
dec
leave
aas
arpl
ret
nop
cmp
in
inc
sbb
loope
mov
adc
mov
or
(bad)
(bad)
jmp
push
nop
cmp
add
and
jge
push
add
mov
inc
cmp
push
sbb
(bad)
dec
xchg
jge
and
ds
rol
mov
mov
mov
mov
(bad)
inc
hlt
sahf
pop
(bad)
push
mov
mov
je
adc
pusha
pop
mov
xor
jo
(bad)
(bad)
jbe
sar
or
adc
rcl
push
rcr
sub
jmp
adc
jns
aad
shl
or
(bad)
(bad)
jmp
rol
dec
int
sahf
(bad)
popf
popa
mov
inc
cmp
rcr
pop
mov
adc
(bad)
(bad)
inc
cmps
shl
sbb
pop
jne
push
jb
ret
mov
popf
jge
cmp
cmp
push
(bad)
push
inc
push
imul
dec
call
(bad)
jb
ins
push
pop
test
ss
(bad)
inc
mov
mov
popa
mov
mov
xor
dec
(bad)
push
fs
mov
and
ja
adc
dec
test
fs
dec
add
loop
pusha
xlat
cmps
mov
(bad)
(bad)
(bad)
mov
or
xor
lods
adc
xchg
push
cmp
jmp
idiv
(bad)
call
mov
push
cmp
adc
fdivr
mov
je
test
push
cmp
retf
psrlw
call
add
cld
and
(bad)
(bad)
(bad)
dec
cmps
in
jmp
lods
xchg
sub
adc
fwait
mov
cmc
xchg
(bad)
in
(bad)
dec
inc
bound
into
jo
movs
adc
xchg
shl
icebp
push
lea
dec
push
into
retf
lods
cmps
xor
(bad)
(bad)
dec
scas
in
cmps
fcomp
mov
(bad)
cdq
pop
or
or
loopne
fs
(bad)
(bad)
(bad)
ficomp
xchg
iret
mov
inc
stos
push
fsubr
jle
dec
shl
fdivr
jle
fmul
mov
(bad)
(bad)
(bad)
jmp
fsub
clc
or
push
jp
leave
ins
popf
mov
repnz
fwait
xchg
test
(bad)
mov
test
adc
mov
das
inc
mov
and
(bad)
push
xor
maxps
cmp
jmp
(bad)
xor
int3
repz
std
(bad)
call
xchg
ret
pusha
into
stos
adc
inc
dec
push
pop
mov
call
shl
cmp
popa
shl
xchg
cmp
fisub
(bad)
xlat
iret
sti
mov
(bad)
(bad)
(bad)
(bad)
std
pop
jg
and
inc
ret
or
(bad)
sbb
add
retf
adc
(bad)
(bad)
jmp
xchg
sub
fadd
sbb
call
jb
add
mov
inc
in
(bad)
(bad)
inc
out
dec
sbb
and
out
cmc
xchg
jae
pop
push
aas
cmp
add
(bad)
(bad)
(bad)
call
add
popf
xor
and
mov
sub
jmp
pushf
(bad)
(bad)
(bad)
call
adc
ds
int3
cmp
push
cmps
ja
sbb
adc
das
addr16
in
inc
jb
mov
(bad)
(bad)
dec
dec
test
cli
add
in
sbb
xor
shl
jmp
sahf
add
(bad)
mov
jmp
das
adc
aam
inc
cmp
xchg
movs
and
mov
call
loop
gs
aaa
push
xchg
xor
shr
or
pop
scas
pop
aaa
cld
idiv
in
inc
mov
loop
retf
ss
addr16
rol
jb
push
xchg
repz
mov
(bad)
jmp
and
adc
ins
pop
pop
in
pop
or
test
and
mov
mov
(bad)
(bad)
fisttp
addr16
mov
in
cmp
js
push
mov
mov
test
lahf
sub
sbb
ret
jae
and
and
js
retf
out
fstp
sahf
(bad)
sbb
inc
(bad)
jge
inc
xchg
and
test
jp
ret
dec
mov
(bad)
(bad)
(bad)
inc
mov
push
pop
sbb
or
in
mov
inc
aad
int3
push
push
add
dec
cld
repnz
(bad)
(bad)
inc
popf
or
sub
inc
retf
fcmovb
repnz
xlat
out
jp
enter
(bad)
sbb
or
(bad)
(bad)
jmp
mov
retf
stc
stos
in
dec
mov
repz
jb
cmovne
jno
(bad)
call
(bad)
mov
mov
jno
scas
push
and
mov
jmp
(bad)
(bad)
inc
jge
movaps
jge
outs
outs
xor
push
and
mov
es
(bad)
xchg
adc
call
inc
icebp
lea
mov
sbb
add
mov
dec
push
in
fnstsw
ret
mov
mov
pop
push
pop
std
cmps
push
(bad)
(bad)
call
xor
pop
hlt
jmp
mov
fidivr
or
ss
cli
(bad)
adc
sar
(bad)
(bad)
(bad)
inc
mov
mov
pop
pop
stos
push
mov
pop
or
pop
fidivr
jmp
arpl
jle
sar
dec
adc
xchg
ss
jge
test
fisttp
iret
(bad)
inc
jbe
call
jle
dec
retf
es
mov
cmovns
(bad)
(bad)
call
popf
mov
mov
jmp
mov
inc
call
test
int3
jae
(bad)
(bad)
(bad)
inc
in
dec
sar
fs
mov
sbb
push
dec
push
sub
xor
mov
jg
(bad)
(bad)
jge
loop
fbstp
jnp
sub
shr
mov
jg
(bad)
cli
cmc
or
mov
adc
mov
jmp
sahf
and
sub
inc
pop
rcl
rcl
push
idiv
(bad)
(bad)
call
lahf
sbb
adc
pop
je
cmps
push
into
mov
adc
adc
jle
(bad)
jmp
(bad)
and
mov
mov
std
int
adc
mov
fadd
movs
rcr
(bad)
jle
dec
jmp
jle
clc
inc
dec
mov
mov
jb
jmp
cld
inc
daa
dec
retf
inc
ins
rcl
lds
out
retf
int
(bad)
jne
xchg
ret
std
(bad)
(bad)
dec
outs
mov
jmp
xor
fstp
ret
call
outs
mov
(bad)
(bad)
jmp
sub
das
loopne
lods
jae
sbb
das
or
pushf
retf
pushf
xchg
(bad)
(bad)
call
dec
fnstenv
(bad)
xlat
loope
xor
popf
pop
mov
adc
jmp
outs
lock
retw
sbb
sbb
gs
cmp
or
dec
xor
dec
fmul
repnz
lods
pusha
and
pop
cmps
dec
xor
lods
and
mov
outs
xor
cmp
lds
pop
div
call
repz
scas
loopne
xor
xchg
jmp
(bad)
(bad)
jmp
inc
xor
sbb
jg
jnp
cs
shl
inc
jp
add
call
dec
jbe
cmp
std
aaa
stos
iret
gs
inc
push
(bad)
(bad)
(bad)
push
dec
dec
add
sbb
aaa
xchg
cli
and
dec
ret
mov
(bad)
mov
stos
pop
jb
(bad)
(bad)
dec
jne
cs
or
push
scas
mov
cdq
fisttp
ins
loope
retf
bnd
retf
pop
cmps
shl
out
jg
(bad)
dec
add
cmc
xchg
cmp
sub
xchg
xchg
sub
(bad)
(bad)
jmp
neg
push
pusha
fcmovne
repnz
rol
push
push
loop
mov
(bad)
(bad)
dec
mov
sti
cld
ficomp
fsub
sbb
pop
hlt
stos
cmp
jmp
jecxz
xchg
xor
(bad)
(bad)
(bad)
jmp
xor
inc
mov
cli
jo
xlat
mov
sub
std
mov
scas
loope
fnstcw
mov
ret
stos
dec
lods
call
(bad)
cld
rol
hlt
lock
or
test
or
dec
pop
loopne
mov
jmp
mov
into
cmp
lock
mov
(bad)
(bad)
push
call
sub
test
adc
ret
push
push
cmp
in
xchg
mov
(bad)
(bad)
jmp
call
arpl
cmc
xchg
iret
retf
jo
movs
mov
pop
pop
push
dec
std
push
mov
and
in
(bad)
pop
jns
(bad)
out
jl
mov
test
and
mov
scas
fwait
shl
dec
clc
clc
js
lods
ficom
or
ret
pop
ret
push
push
mov
call
mov
mov
call
mov
pop
ret
push
in
cmp
mov
add
inc
xor
and
pop
mov
or
sbb
mov
sbb
mov
mov
mov
(bad)
push
and
and
or
adc
int
mov
imul
(bad)
ins
movzx
push
push
imul
push
jnp
(bad)
fisttp
mov
test
je
push
pop
ins
lea
mov
sub
je
adc
mov
sti
inc
push
push
sub
mov
mov
sub
sub
sub
cdq
sub
sar
add
push
push
push
fld
sub
mul
sub
sbb
push
int3
mov
cmp
add
ja
fild
test
fild
inc
mov
mul
imul
adc
mov
das
js
mov
push
add
popa
fistp
mov
push
sub
mov
push
xor
adc
ins
mov
mov
mov
out
bound
pop
not
fidivr
jecxz
nop
jmp
movq
icebp
lea
fucomi
lock
std
shl
adc
fstp
(bad)
adc
in
push
loopne
add
call
pop
imul
fld
sbb
out
ror
int
xor
mov
std
jbe
fs
cmp
leave
or
push
or
push
and
mov
jbe
push
push
xor
clc
sub
and
push
les
or
xor
or
mov
je
xor
pusha
or
sub
inc
or
fs
mov
pusha
or
sbb
outs
jo
ins
add
xchg
inc
push
sbb
xchg
dec
mov
push
xor
and
jns
pop
or
les
ins
mov
and
fsub
push
push
popf
ins
call
sub
and
adc
fmul
push
test
and
xor
mov
or
or
out
ficomp
cmps
mov
je
cmp
mov
xor
xor
repz
ins
gs
xor
push
dec
jne
cmp
rcr
inc
imul
jnp
dec
cs
push
sbb
jae
pop
ret
mov
pop
sub
sar
push
push
sbb
repz
or
or
sub
test
xor
and
cs
out
mov
dec
inc
and
push
push
mov
fld
sub
lds
mov
adc
add
add
add
pop
out
mov
je
mov
adc
add
dec
jp
es
je
(bad)
fstp
sbb
adc
cmovo
lea
lods
rep
lea
(bad)
push
js
call
mov
mov
mov
ins
sti
lock
push
inc
in
adc
aas
adc
retw
cmp
mov
loope
ret
rcr
inc
jne
or
mov
dec
or
fnstenv
sub
aam
call
push
cmp
ret
jmp
neg
jmp
or
xor
pop
adc
mov
dec
shl
mov
dec
adc
in
ins
inc
add
(bad)
push
push
sub
test
je
add
sub
je
jg
aaa
in
sub
jne
and
fisttp
out
sub
jne
mov
mov
scas
lods
sbb
dec
adc
mov
sub
call
pop
movs
push
xlat
xor
and
mov
or
inc
add
or
push
or
aaa
mov
and
xor
add
xor
stc
sub
sbb
cmp
(bad)
call
or
dec
add
pop
xchg
jmp
add
add
ret
sbb
fistp
lock
jge
adc
lods
stc
xor
arpl
or
in
addr16
sub
cmp
dec
inc
or
in
lods
fisttp
rol
ret
sbb
push
pop
sbb
xor
adc
mov
mov
mov
fdivr
retf
push
pop
out
and
or
aam
data16
fmul
pop
pop
fbstp
push
lea
out
fmul
sbb
inc
mov
cmp
outs
(bad)
push
dec
push
clc
push
xor
push
inc
pop
mov
sti
adc
ds
sbb
out
(bad)
push
push
std
jae
cmovne
inc
push
sti
mov
mov
jae
jmp
data16
fwait
mov
pop
hlt
push
aaa
lods
fadd
mov
ror
pushf
jle
loopne
or
inc
fisttp
xchg
push
jo
inc
je
or
or
(bad)
inc
xor
leave
fcomp
loopne
enter
mov
out
outs
pop
push
popf
or
loopne
sub
inc
dec
enter
and
and
adc
sbb
or
mov
inc
adc
shl
sub
push
and
xor
add
dec
nop
cdq
es
inc
and
lods
mov
pop
jle
adc
or
sar
mov
sbb
push
or
mov
shl
or
mov
sbb
fcmovnb
or
mov
inc
mov
and
idiv
jmp
lods
dec
sbb
(bad)
mov
call
pop
jl
(bad)
aad
jae
in
mov
push
jns
call
adc
adc
or
clc
adc
jl
fadd
inc
cmp
je
inc
cmp
jb
(bad)
rol
test
sub
xchg
mov
(bad)
pop
sub
add
mov
adc
and
sbb
cmp
pusha
and
push
sbb
sbb
mov
adc
cmp
mov
add
ss
bound
and
scas
mov
cld
fs
mov
cmp
sti
add
mov
and
xor
cmp
leave
in
mov
(bad)
cld
bts
xchg
shl
(bad)
sub
inc
inc
dec
cmp
jb
xchg
bound
or
or
xor
popf
or
ror
daa
xchg
lock
push
pop
add
push
and
push
and
test
inc
pop
sub
xor
mov
popa
loope
sbb
inc
inc
xor
ds
adc
or
mov
dec
ins
fadd
cmp
cdq
mov
clc
and
aam
setnp
cdq
jb
adc
sahf
lock
dec
je
(bad)
pop
in
retf
je
jae
inc
xor
(bad)
jns
aam
rcl
sbb
cmp
mov
push
jmp
xchg
mov
imul
sbb
into
mov
or
shl
pop
in
inc
cwde
inc
fstp
and
xor
sbb
(bad)
jmp
adc
leave
dec
and
inc
sub
pop
les
mov
sahf
test
jne
mov
push
lods
mov
shl
jp
test
mov
push
repnz
sub
xor
mov
inc
adc
jne
sbb
(bad)
cli
adc
sub
add
addr16
or
pop
jns
js
jae
test
dec
or
sti
push
xchg
add
inc
or
ror
jae
lds
sbb
retf
mov
inc
sbb
xlat
js
inc
push
xor
test
(bad)
mov
imul
push
inc
dec
jne
adc
cmp
or
mov
xlat
mov
(bad)
pop
ror
or
or
ret
push
inc
xor
pop
xor
add
sbb
test
dec
push
test
xchg
popa
scas
fistp
mov
sub
int3
adc
push
int3
xor
adc
and
adc
ret
xor
pop
ret
pop
js
setnp
pop
push
pusha
out
mov
or
into
int3
and
push
das
push
sub
and
mov
out
ret
adc
int3
jo
in
in
femms
(bad)
cmp
adc
and
pop
push
ret
out
sbb
and
test
xor
mov
sbb
sub
or
and
es
sbb
sub
cmp
ds
dec
es
daa
imul
(bad)
mov
add
sub
or
sar
push
xor
jle
or
jae
popa
mul
add
cmp
mov
sub
iret
and
ins
int
and
jg
add
fldenv
and
fs
xor
movzx
bound
rol
push
fs
bnd
ins
push
inc
push
jle
sub
lods
dec
es
add
pusha
dec
dec
pop
ss
push
adc
cli
(bad)
stc
sub
push
ja
sub
push
movntq
out
jl
cwde
push
test
pop
push
repnz
test
xchg
or
dec
pop
and
out
mov
add
in
adc
and
and
xor
and
xchg
ins
add
ins
cmp
adc
inc
jo
inc
adc
or
or
xchg
cmp
xor
js
cwde
adc
push
daa
cmps
pop
jl
push
nop
or
mov
es
or
dec
adc
loop
sti
pop
push
dec
sub
dec
jl
nop
dec
jne
xchg
cld
inc
call
fimul
push
ss
or
cmp
loopne
xor
leave
add
and
dec
push
inc
adc
nop
sub
xchg
cmp
cmp
in
es
xor
and
add
mov
test
dec
ds
sbb
cmp
jge
fdiv
aaa
mov
pop
outs
jbe
inc
xor
push
cmp
xor
enter
xchg
dec
and
pusha
xor
push
int3
push
ins
loopne
dec
es
ins
jo
add
jl
sbb
and
xchg
sbb
test
mov
(bad)
inc
xor
je
xchg
imul
popf
adc
mov
adc
adc
mov
or
mov
xchg
shl
pusha
fild
adc
push
call
ret
push
push
push
in
adc
emms
ret
sub
enter
mov
(bad)
popa
daa
ins
repz
cmp
cmovl
cld
inc
fs
int
daa
sub
mov
xor
push
sub
shl
sbb
push
pushf
out
mov
outs
imul
nop
sbb
sbb
mov
xchg
pusha
add
sbb
lea
push
into
inc
push
enter
pushf
mov
icebp
call
and
sahf
retf
cmp
sbb
int
sub
pop
add
adc
sub
cdq
out
and
or
push
stc
cmps
mov
mov
lds
jmp
ficom
es
inc
xor
sbb
and
mov
mov
cmp
nop
nop
dec
es
sub
in
xchg
cwde
add
in
mov
pushf
sub
xchg
or
nop
mov
inc
scas
movs
test
add
add
and
enter
mov
mov
jb
adc
and
pop
mov
inc
pushf
jmp
ror
sub
iret
stos
xchg
or
sub
ins
or
es
ja
lea
push
lea
jae
pop
xor
mov
test
xchg
push
and
add
push
data16
mov
mov
ins
popa
inc
adc
mov
and
les
and
movq
neg
jo
mov
add
adc
sbb
mov
cmp
or
int3
mov
(bad)
sbb
dec
inc
in
push
movs
ss
mov
mov
fadd
movs
pop
adc
(bad)
les
lea
mov
push
fist
outs
cmp
mov
mov
dec
jle
jmp
mov
je
add
pushw
push
xor
lock
xchg
push
inc
xchg
and
bound
mov
push
cmp
or
sub
dec
dec
call
(bad)
(bad)
adc
jae
sbb
and
sbb
fsubr
pop
(bad)
jle
fadd
fcmovne
leave
push
sbb
push
in
hlt
cmp
out
aam
js
mov
mov
jmp
cmp
adc
push
test
jne
cmp
je
iret
fsubrp
vsubpd
cmps
xlat
sub
or
ds
xchg
sub
outs
push
or
push
loope
xchg
add
ret
inc
js
dec
fsub
or
fwait
in
adc
mov
outs
add
push
loopne
and
pop
add
sti
popf
adc
xor
sbb
mov
pushf
ret
pop
xor
ins
ins
adc
jae
inc
cmp
jb
jmp
pop
cmp
or
dec
idiv
xchg
nop
adc
arpl
jg
mov
add
add
(bad)
fld
push
cmc
jae
mov
in
adc
mov
adc
add
or
lds
inc
cmp
inc
xor
xor
call
pop
cmp
jae
dec
(bad)
enter
push
xchg
popf
mov
sbb
cs
ficom
and
and
push
movs
and
mov
adc
sub
inc
cmps
inc
sbb
sbb
and
ja
dec
inc
dec
and
inc
pop
mov
lods
xor
or
jns
dec
lock
mov
sahf
das
test
mov
xor
sbb
or
mov
sub
xor
sbb
push
cmp
cmp
dec
fsub
shl
adc
(bad)
jg
popa
sbb
sbb
dec
jno
or
je
adc
inc
daa
xor
and
xor
jns
and
sub
ins
pusha
shr
gs
fs
loop
jp
or
xchg
dec
adc
ins
adc
pop
and
rcpps
es
repnz
xor
and
dec
jle
xchg
mov
jb
(bad)
enter
xchg
sbb
enter
jb
js
pop
leave
xchg
dec
rol
aam
sbb
add
aam
xchg
and
enter
dec
and
pushf
fsub
call
jb
inc
int
(bad)
and
cmp
aaa
test
ret
pop
xchg
pop
fyl2xp1
pop
leave
dec
inc
mov
stc
cmp
scas
rol
in
and
inc
dec
and
xor
jmp
cmp
add
dec
cs
push
push
xchg
dec
call
je
pushf
mov
sbb
pop
push
bound
test
inc
repz
inc
cmp
call
jne
lock
jne
leave
neg
sub
jmp
sar
pusha
cmp
fs
call
adc
es
adc
mov
sahf
fdivr
es
xor
cmp
cld
inc
xor
fucomip
lock
and
in
push
inc
adc
nop
sub
xchg
lock
scas
in
es
inc
hlt
xchg
and
add
push
in
cld
add
call
adc
push
or
or
or
sqrtps
(bad)
call
ins
jae
je
jae
jo
outs
addr16
jae
xor
jae
fs
jne
imul
xor
dec
push
fs
xor
jne
jg
pop
mov
cmp
xor
jo
imul
rcpps
and
out
xchg
aaa
(bad)
gs
jo
packsswb
call
int
cmp
pcmpeqd
jae
outs
xchg
(bad)
(bad)
adc
data16
jo
je
fdiv
fnsave
rol
popaw
imul
ss
jb
outs
gs
cmp
pop
sbb
sbb
or
or
sbb
das
adc
push
pop
fmul
call
or
push
cmp
push
sbb
dec
imul
xor
data16
inc
outs
push
and
jns
popa
mov
push
jbe
div
in
pop
outs
jbe
xor
xor
js
outs
arpl
mov
dec
dec
push
sbb
adc
pop
cld
lods
imul
sbb
or
pop
ds
sti
mov
pop
movs
xor
or
ja
ds
sub
std
enter
scas
cmp
or
lods
std
add
xor
push
sbb
aad
imul
sbb
mov
jns
mov
add
imul
bndstx
mov
cmp
sbb
jnp
out
sub
sbb
mov
or
xor
or
faddp
out
push
dec
or
adc
out
mov
cmp
emms
mov
dec
mov
out
dec
adc
or
cmp
xchg
add
pop
in
xor
pop
adc
push
dec
mov
xchg
lahf
mov
ret
sbb
sub
cwde
loope
in
or
ds
fild
pop
test
or
or
adc
adc
ss
cmp
(bad)
fimul
and
dec
popa
lods
mov
jns
xchg
jg
in
mov
comiss
pop
jns
push
sbb
mov
mov
cmp
add
sbb
adc
ja
inc
jae
push
or
cmp
movs
lods
test
test
fwait
xchg
cmovo
or
mov
ds
push
cmp
pop
ficomp
xor
je
sbb
in
xchg
xor
cmps
adc
fidivr
pop
sbb
adc
push
or
mov
arpl
push
push
or
rcl
cmp
adc
icebp
out
push
dec
push
dec
pop
push
sub
std
or
pop
sub
or
sub
dec
mov
jg
nop
dec
push
inc
push
dec
push
pop
not
or
das
movups
dec
dec
dec
dec
dec
dec
inc
pop
aaa
ret
mov
fld
adc
dec
mov
mov
aaa
sub
das
push
xor
aaa
mov
add
pop
or
cmovne
das
adc
fcmovne
movsx
das
or
adc
push
movhps
js
jecxz
(bad)
(bad)
movaps
or
sbb
movs
push
rcr
xchg
dec
and
xor
movaps
sub
xor
or
fisubr
cmp
adc
fist
mov
iret
mov
or
pop
fwait
aaa
mov
outs
mov
or
and
xor
and
mov
or
adc
push
test
mov
stos
sbb
sbb
adc
push
imul
fdecstp
xor
mov
sub
xor
(bad)
fs
mov
nop
pop
ss
pop
imul
andps
dec
ins
adc
add
shl
push
nop
adc
ins
push
adc
dec
add
or
rol
dec
cmp
inc
add
jb
outs
inc
jl
fld
inc
gs
popa
or
jb
arpl
mov
outs
popa
fs
imul
push
and
fs
mov
inc
jb
outs
(bad)
outs
outs
or
gs
xor
or
aas
idiv
add
or
ins
adc
(bad)
jg
call
iret
adc
dec
arpl
add
or
adc
(bad)
(bad)
(bad)
jmp
push
mov
and
rol
lock
lock
push
pop
xor
or
mov
and
jmp
sbb
sub
sub
and
add
outs
add
daa
es
add
sbb
jmp
and
icebp
add
sub
and
and
push
test
adc
cmp
ins
sti
jmp
adc
push
lock
mov
out
add
pop
and
mov
pop
sbb
sbb
and
sbb
push
sbb
pop
inc
fsubr
sbb
sbb
and
sub
sub
add
fist
rcl
add
mov
xor
mov
mov
loopne
add
or
or
cmp
outs
jns
mov
adc
push
add
in
push
sub
xchg
pop
sub
scas
nop
add
ja
in
mov
push
mov
pop
cmp
or
mov
cdq
add
nop
jne
cmps
sub
cs
js
mov
cmp
sbb
in
pusha
cs
popa
je
sti
rol
xor
add
push
dec
addr16
imul
es
jo
test
dec
or
push
xor
fsincos
and
inc
or
adc
fadd
add
add
inc
add
add
cmp
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
