sti
cmp
fs
xchg
mov
retf
push
add
ins
inc
adc
jne
inc
and
cmp
mov
mov
add
add
inc
pop
in
out
inc
cmp
retf
jg
jmp
out
mov
pop
inc
mov
retf
aaa
(bad)
inc
or
ins
inc
or
out
repz
gs
dec
shl
inc
cmp
push
dec
cmp
adc
lahf
sub
bswap
sub
adc
test
sbb
inc
data16
(bad)
xor
mov
xor
add
jns
inc
pop
stos
movs
mov
and
retf
fxch
inc
cmp
(bad)
mov
jle
imul
jle
inc
add
out
mov
ret
lds
retf
imul
mov
fcmove
jle
inc
inc
mov
imul
mov
cwde
push
or
cmp
mov
or
cmp
popf
adc
call
retf
push
or
cmp
or
cmp
div
retf
cmp
push
mov
(bad)
dec
sti
adc
cmp
out
mov
push
call
ins
and
jmp
dec
dec
out
into
iret
mov
(bad)
mov
inc
ins
inc
dec
dec
out
dec
rol
xor
stos
dec
xor
sub
xor
mov
push
gs
inc
xor
inc
push
outs
and
inc
gs
ins
ret
or
inc
cld
pusha
fiadd
cmp
dec
shl
dec
xor
retf
mov
ret
ret
call
sti
daa
retf
sbb
inc
mov
jne
add
lea
cmp
test
(bad)
inc
cmp
pop
gs
lods
data16
dec
jge
movs
mov
adc
clc
cmp
inc
ror
retf
call
cmp
retf
xor
push
call
mov
add
cmp
inc
mov
xor
shl
dec
dec
pop
gs
cdq
pop
inc
dec
test
bswap
sub
or
mov
sub
movs
mov
js
inc
cmp
retf
inc
or
cmp
retf
jno
add
lea
test
push
add
jbe
call
cmps
scas
jecxz
gs
gs
leave
(bad)
fimul
gs
inc
gs
xor
inc
call
cmp
retf
bswap
sub
bswap
sub
gs
inc
push
cmp
inc
xor
dec
mov
sti
mov
mov
fwait
xor
inc
cmp
dec
mov
push
gs
mov
adc
inc
push
gs
mov
mov
int
push
xor
lds
retf
mov
retf
pusha
sti
cmp
ror
test
cmp
or
add
repz
and
or
inc
cmp
jns
(bad)
in
or
sub
ret
xlat
jne
pop
test
xor
mov
sti
mov
ret
xor
mov
dec
cmp
retf
bswap
mov
xor
inc
xchg
xchg
mov
add
adc
mov
daa
bswap
mov
(bad)
lea
cmp
xchg
adc
test
sbb
inc
xor
and
sbb
inc
dec
bound
cmp
stos
aaa
in
xor
mov
sti
cmp
mov
xor
push
popf
inc
xor
mov
(bad)
xor
retf
call
or
mov
sti
adc
xor
push
les
(bad)
sub
call
sbb
retf
mov
retf
gs
mov
popa
sti
adc
sti
cmp
sar
cwde
inc
cmp
xchg
mov
xor
mov
xor
aaa
mov
bound
xor
gs
sbb
scas
mov
out
mov
loopne
(bad)
mov
mov
xor
cmp
jg
(bad)
mov
xor
inc
cmp
push
add
es
mov
lods
xor
inc
dec
pushf
repz
add
add
ds
shr
jb
inc
gs
popf
inc
add
jl
cmp
repz
ret
xor
and
leave
cli
out
mov
cmp
xor
cdq
(bad)
call
cmp
inc
or
inc
adc
repnz
lahf
leave
(bad)
retf
and
gs
xor
aaa
fdivrp
sub
arpl
cmp
mov
jns
inc
cwde
cmp
ret
out
mov
cmp
xor
adc
xchg
and
xchg
and
popf
jecxz
mov
ret
pop
inc
aam
fs
and
cmp
jecxz
adc
clc
out
(bad)
push
adc
retf
gs
lds
gs
cwde
adc
xchg
mov
xor
push
pushf
pop
mov
mov
jbe
add
stc
in
lahf
mov
rcr
cmp
mov
xor
or
adc
or
stc
add
push
or
repz
inc
mov
add
stc
in
lahf
mov
aas
jge
pop
gs
push
imul
mov
or
mov
cmp
mov
xor
or
adc
or
stc
add
push
or
repz
inc
mov
inc
inc
mov
ret
jge
ror
jb
gs
push
pusha
lods
or
ins
xor
sub
xchg
push
cld
and
mov
jle
cmp
inc
mov
and
ret
popa
repnz
ror
imul
nop
dec
pusha
sti
cmp
pop
add
ss
stc
fs
outs
cdq
sti
and
clc
xor
push
cdq
push
ins
out
mov
jne
in
xor
in
or
add
call
cmp
and
(bad)
call
aaa
es
sub
lea
retf
cwd
mov
ins
(bad)
(bad)
mov
pop
mov
clc
pop
pop
retf
add
in
or
sub
adc
inc
sbb
cs
inc
mov
les
ret
adc
inc
mov
mov
mov
ins
call
rcr
cmp
xchg
push
retf
cmp
fidiv
pushf
pop
mov
ret
and
retf
mov
cmps
(bad)
mov
adc
loope
(bad)
mov
out
sar
aas
call
xor
xor
in
or
retf
and
mov
sbb
lahf
leave
fsubp
es
push
ins
jne
jp
mov
int3
adc
in
inc
mov
jecxz
mov
dec
es
mov
inc
cmp
(bad)
mov
or
and
dec
gs
in
inc
dec
gs
ins
adc
movs
inc
add
ins
xor
sub
bswap
int
xchg
call
cmps
sti
xor
(bad)
in
(bad)
mov
cmp
mov
retf
cmp
call
mov
dec
mov
aaa
retf
movs
ret
fwait
xor
or
jle
ret
or
cmp
leave
ret
push
xor
cld
xor
inc
les
xchg
push
pusha
lods
or
cmp
jmp
xor
push
mov
dec
jge
mov
retf
bound
inc
mov
mov
jns
repz
cmp
retf
jle
imul
fs
clc
out
fmul
jnp
fmul
push
xor
fmul
mov
adc
mov
mov
int
test
xor
cmp
inc
push
jle
add
call
xor
mov
push
call
push
stc
jns
cmp
and
gs
push
adc
clc
call
(bad)
into
adc
in
(bad)
mov
xor
cmc
inc
cmp
cmp
push
fs
add
inc
mov
gs
ins
mov
sti
cwde
mov
xor
inc
mov
ds
in
add
adc
ret
push
in
add
gs
daa
retf
popf
inc
cwde
or
fdiv
mov
inc
cmp
and
gs
in
dec
cwde
les
or
retf
jle
inc
add
jns
inc
add
(bad)
es
mov
jae
cmp
mov
out
mov
mov
into
pop
mov
xor
mov
cmp
or
fmul
xchg
mov
and
adc
gs
in
(bad)
mov
mov
push
mov
mov
push
inc
(bad)
xor
imul
repz
call
gs
cdq
dec
stos
loopne
retf
movs
mov
test
xor
add
les
and
bound
ret
push
stc
jns
cmp
dec
call
jo
xor
mov
int3
xchg
jmp
xor
mov
inc
add
xor
les
cmps
(bad)
mov
cmp
fsubp
es
push
and
retf
mov
mov
inc
xor
cmp
cmps
mov
xor
cld
out
(bad)
cli
inc
xor
pop
inc
cmp
fwait
dec
jb
add
cmp
cmp
and
retf
add
in
or
imul
adc
add
div
div
popa
dec
and
xor
mov
xor
retf
adc
inc
mov
dec
xor
cld
mov
retf
clc
cmp
xor
out
mov
fsubr
(bad)
mov
mov
mov
add
(bad)
mov
or
mov
sti
fwait
rol
xchg
jle
inc
xor
mov
add
pop
pop
mov
pop
push
mov
mov
mov
mov
jle
dec
jl
gs
call
mov
ja
xor
jnp
and
mov
popf
cmp
leave
cld
bswap
sub
bswap
sub
bswap
sub
gs
gs
(bad)
(bad)
xor
gs
add
cmp
retf
push
mov
dec
mov
dec
mov
and
mov
inc
mov
cmp
imul
retf
mov
sub
add
cmp
(bad)
mov
bswap
sub
xchg
mov
adc
test
pop
retf
adc
test
adc
xchg
mov
xor
cmp
inc
cmp
cdq
push
ins
fidivr
sbb
and
inc
mov
jecxz
mov
or
(bad)
call
jns
and
push
gs
xchg
xor
test
fwait
xor
mov
xor
cdq
dec
cmp
loope
gs
in
dec
hlt
les
and
js
retf
(bad)
jmp
gs
test
inc
(bad)
xor
imul
test
out
fmul
stos
dec
sbb
retf
mov
jp
lds
sub
cmps
(bad)
mov
out
repnz
(bad)
ins
or
cmp
mov
mov
retf
mov
xor
test
cdq
ret
xor
dec
cmp
mov
xor
inc
mov
or
cmps
(bad)
mov
out
repnz
(bad)
ins
or
adc
inc
cmp
xor
mov
(bad)
out
dec
mov
(bad)
leave
xchg
adc
in
or
mov
(bad)
sahf
lock
dec
mov
jl
inc
mov
je
lds
mov
out
repnz
(bad)
ins
or
inc
ret
add
test
dec
mov
gs
cwde
xor
les
ins
retf
mov
int
cwde
xor
cli
int
xor
xchg
ja
les
cwde
inc
cmp
lds
call
cmp
dec
mov
pusha
mov
mov
aaa
mov
imul
inc
rcl
push
dec
xor
dec
jmp
call
leave
xor
xchg
push
retf
in
dec
in
fwait
xor
xor
daa
retf
loopne
inc
cmp
inc
push
cmp
cmp
and
call
les
xor
bswap
sub
xchg
mov
fdiv
mov
and
(bad)
jge
call
xchg
call
mov
retf
cwde
mov
mov
add
or
and
jmp
mov
sbb
retf
sub
xchg
mov
fdiv
mov
jmp
jge
call
xchg
call
push
mov
sub
mov
leave
aas
mov
push
call
cmp
inc
std
(bad)
call
les
xor
dec
cld
loopne
mov
cmp
inc
push
stos
cmp
cmp
and
into
call
les
xor
bswap
sub
xchg
mov
fdiv
mov
jbe
xor
jge
call
xchg
call
mov
mov
add
or
and
call
les
xor
mov
xor
sub
or
mov
test
xchg
xor
jge
call
xchg
call
push
mov
sub
mov
mov
push
dec
push
call
cmp
inc
std
(bad)
call
les
xor
pop
push
mov
int
cwde
xor
fmulp
call
les
xor
mov
xor
clc
and
inc
int3
xchg
fwait
call
xchg
call
mov
xor
test
test
pop
xor
gs
mov
sub
mov
sub
push
dec
push
call
mov
fs
in
xchg
cmp
ret
xchg
xor
push
std
pusha
mov
int
cwde
xor
ja
call
dec
mov
sahf
lock
imul
shr
dec
mov
ror
cmp
adc
in
or
jecxz
adc
clc
call
xor
mov
add
ss
sti
push
mov
mov
xor
xor
imul
mov
(bad)
in
cmp
dec
sti
push
(bad)
aas
gs
mov
mov
adc
sbb
xchg
xor
into
test
inc
adc
inc
cmp
xor
es
loopne
mov
cld
loopne
mov
cmp
lds
call
xor
mov
or
sti
cwde
mov
inc
(bad)
xor
imul
lds
out
repnz
cmp
add
mov
call
xor
mov
add
retf
cdq
inc
cwde
int3
xchg
mov
xor
mov
dec
cmp
cmp
inc
mov
and
mov
xor
repnz
jle
ret
xor
inc
cmp
sub
inc
(bad)
xor
imul
pushf
les
xor
mov
mov
dec
cmp
icebp
retfw
mov
dec
cmp
(bad)
xor
imul
test
fwait
xor
pop
pop
in
(bad)
mov
push
retfw
mov
in
call
les
mov
loopne
mov
icebp
or
inc
mov
mov
dec
cmp
sub
lea
cmp
cwde
adc
es
(bad)
call
jns
inc
(bad)
xor
imul
test
in
adc
in
or
cld
loopne
mov
mov
es
mov
loopne
mov
mov
xor
push
mov
jae
cmp
mov
call
xor
cmps
and
cmp
xor
jg
xor
leave
jle
inc
cwde
cmp
ss
xor
mov
in
call
jecxz
or
mov
xor
retf
lds
js
jno
inc
cmp
leave
jle
ret
xor
inc
cmp
stos
sub
inc
mov
outs
mov
mov
xor
cmps
leave
jle
ret
xor
inc
cmp
in
call
cmp
inc
shr
cmps
inc
cmp
cwde
adc
inc
sbb
cmp
fwait
xor
in
les
xor
enter
adc
call
aas
gs
rol
call
(bad)
into
inc
cmp
in
fsub
lds
popf
xor
and
leave
jecxz
adc
clc
out
mov
cmp
ret
sahf
jmp
inc
lds
or
inc
lds
out
repnz
cmp
add
sub
push
push
cmp
ret
xchg
xor
les
fs
loopne
mov
cmp
xor
mov
les
jmp
mov
ss
xor
adc
lods
ret
xchg
vpsadbw
inc
mov
call
cmp
dec
sub
cwde
xor
mov
leave
call
jl
ja
les
adc
clc
in
sub
cwde
xor
inc
cmp
(bad)
xor
cmp
inc
mov
sti
cwde
mov
mov
mov
(bad)
call
jns
inc
(bad)
xor
imul
test
call
xor
rol
retf
in
dec
mov
mov
xor
sub
cwde
xor
mov
ds
xor
outs
push
gs
imul
push
popa
inc
(bad)
xor
imul
(bad)
xor
imul
test
in
adc
in
or
xchg
xor
inc
mov
inc
mov
or
mov
inc
lds
loopne
mov
sub
bound
or
cmp
mov
mov
push
lds
pushf
dec
(bad)
loopne
mov
fistp
es
in
xor
mov
cmp
dec
mov
mov
gs
(bad)
xor
imul
mov
jmp
xor
cmp
(bad)
retf
mov
xor
ret
int
inc
cmp
ja
les
inc
(bad)
xor
imul
mov
jecxz
xor
imul
mov
out
xor
imul
mov
adc
sub
or
cmp
les
xchg
sbb
cmps
lahf
leave
fimul
xor
inc
push
(bad)
fiadd
cmp
imul
retf
in
out
inc
cmp
ret
xlat
jge
push
ins
in
scas
test
and
add
inc
add
fbld
retf
sbb
leave
lds
dec
and
inc
mov
xchg
xor
test
retf
mov
mov
fisttp
xor
jne
and
inc
cmp
retf
jle
or
pop
lea
sub
mov
cmp
retf
inc
mov
push
rcl
pop
cmp
add
les
xchg
sbb
(bad)
retf
gs
mov
popa
retf
fidivr
jae
mov
push
loope
add
bswap
sub
or
mov
mov
std
xor
sbb
retf
push
xor
cld
cmp
xlat
inc
cdq
push
mov
ret
sub
mov
cmp
leave
cli
call
in
out
inc
fwait
and
cmp
leave
cli
push
or
and
mov
pop
add
mov
jnp
inc
mov
lods
inc
cmp
gs
inc
cmp
inc
jg
mov
gs
xchg
mov
cmp
mov
jp
(bad)
and
or
test
cmp
inc
cmp
iret
mov
retf
inc
dec
aam
daa
retf
jge
add
and
retf
sbb
or
add
sub
inc
add
xchg
and
test
mov
mov
jg
retf
pusha
mov
jp
retf
xor
les
in
jp
retf
inc
add
mov
arpl
inc
adc
leave
jle
inc
adc
call
aaa
addr16
pusha
mov
jns
cmp
and
mov
adc
jno
mov
xchg
cmp
retf
in
(bad)
dec
dec
and
mov
lds
push
fwait
and
xor
out
jp
into
xor
push
or
mov
gs
dec
and
mov
mov
mov
and
mov
adc
jno
mov
cmp
test
mov
gs
int3
mov
and
adc
and
mov
adc
jno
mov
inc
cmp
test
mov
gs
xchg
mov
cmp
inc
cmp
add
in
or
int
shr
jp
enter
or
mov
gs
add
cli
mov
retf
gs
fwait
xor
test
xor
inc
mov
gs
dec
and
mov
mov
inc
cmp
lods
xchg
and
inc
ds
add
fisttp
mov
cli
in
pop
xchg
and
add
or
cmp
es
jp
dec
cmp
iret
js
and
test
call
dec
fwait
and
retf
mov
cmp
xchg
and
test
les
test
dec
inc
add
mov
mov
cmp
mov
jne
inc
mov
gs
test
or
retf
jge
add
inc
inc
mov
lods
inc
xor
gs
xor
or
out
dec
inc
bound
add
pop
dec
inc
cmp
add
stos
retf
sbb
mov
jns
dec
dec
and
mov
mov
mov
cmp
mov
pusha
repnz
jp
and
pusha
repnz
jp
inc
mov
lods
inc
cmp
push
or
sub
leave
jle
inc
add
gs
and
mov
push
mov
gs
and
cdq
adc
add
in
or
pusha
mov
cmp
retf
xchg
(bad)
adc
sub
and
dec
lea
cmp
gs
loope
inc
cmp
cmp
les
loopne
gs
test
xor
(bad)
mov
in
inc
cmp
shl
int3
mov
pusha
ret
gs
jge
int3
mov
adc
rol
xor
cmp
ins
push
cmp
or
dec
dec
dec
and
mov
frstor
cmp
mov
cli
in
cmp
mov
push
dec
lea
in
jp
dec
mov
mov
push
mov
loopne
gs
rcl
int
cmp
out
dec
fwait
and
inc
mov
out
fisttp
retf
in
into
push
add
mov
pusha
(bad)
loopne
imul
retf
imul
repz
sub
jle
inc
cmp
in
cmp
mov
(bad)
loopne
gs
inc
mov
fucomip
mov
retf
imul
jp
repz
aaa
lds
inc
inc
mov
jecxz
cwde
popa
push
cmp
shl
mov
lods
inc
and
jne
inc
js
leave
ret
dec
xor
cld
call
ss
mov
movs
stos
inc
cmp
or
sub
mov
lea
and
imul
dec
xor
cld
or
pushf
test
add
inc
cwde
jne
add
or
pushf
test
add
inc
cwde
xchg
add
or
pushf
test
add
inc
cwde
push
add
in
xor
in
or
inc
ins
lea
cmp
sbb
cmps
lahf
leave
fsubp
es
xor
dec
mov
jecxz
mov
xor
inc
push
in
add
cmp
(bad)
fistp
daa
retf
(bad)
rol
gs
stos
repnz
retf
add
inc
mov
(bad)
leave
jle
or
inc
cmp
scas
mov
jecxz
or
pop
cdq
retf
sbb
scas
nop
cmp
das
ja
gs
leave
clc
out
xchg
cmp
retf
mov
inc
cmp
inc
cmp
push
inc
cmp
int
sbb
(bad)
mov
jns
or
inc
cmp
and
jle
retf
inc
cmp
and
or
jbe
dec
mov
inc
cmp
mov
call
retf
gs
add
iret
enter
inc
lahf
inc
cmp
inc
xor
inc
add
push
mov
xor
cmp
add
lahf
call
retf
test
push
retf
pusha
mov
jns
mov
sub
bswap
sub
bswap
mov
pop
gs
dec
adc
clc
call
cmp
retf
lea
add
iret
enter
and
stos
xor
adc
mov
xchg
push
pusha
lods
or
adc
sub
and
leave
jle
inc
add
mov
push
leave
jle
inc
add
mov
fcmove
jbe
dec
and
mov
es
jle
mov
inc
mov
xor
mov
and
les
xor
cmp
(bad)
mov
sysexit
mov
or
mov
and
stos
xor
gs
cwde
mov
ss
xor
ins
(bad)
dec
jbe
inc
mov
les
test
xor
mov
cmp
or
pop
data16
lahf
leave
fsubp
es
push
ins
inc
sbb
jmp
retf
push
inc
add
gs
ja
pop
xor
push
cmp
inc
cmp
pop
xor
mov
pop
xor
push
xor
mov
pop
xor
les
addr16
and
int
iretw
retf
inc
push
add
jl
les
inc
add
add
push
push
add
repnz
in
xor
xor
ficom
cmps
(bad)
gs
lahf
dec
stos
cmp
push
sub
in
xor
shl
imul
jae
or
mov
lea
jge
gs
cmp
idiv
mov
inc
push
test
push
push
cmp
imul
mov
push
in
test
and
gs
popf
dec
mov
out
lahf
push
mov
fld
lahf
dec
stos
aas
dec
sbb
popf
dec
test
in
(bad)
mov
and
int
iretw
inc
ret
out
inc
mov
ds
das
pusha
retf
inc
cmp
pusha
xor
(bad)
mov
pop
pusha
sbb
jns
retf
in
mov
les
mov
pop
hlt
inc
dec
xor
jae
test
or
mov
and
leave
rol
into
xor
shl
idiv
arpl
sub
idiv
cmp
xor
in
xor
shl
jl
inc
mov
add
ds
inc
mov
jo
inc
cmp
jl
addr16
rol
enter
xor
shl
jl
addr16
test
in
inc
cmp
mov
ret
out
inc
xor
into
inc
push
(bad)
retf
adc
jge
gs
dec
dec
mov
out
lahf
push
mov
fld
lahf
dec
stos
aas
dec
sbb
out
inc
mov
xor
jle
inc
add
pusha
retf
mov
outs
popf
inc
push
ds
in
jle
adc
jl
fs
test
in
inc
cmp
hlt
leave
ret
out
inc
mov
push
inc
mov
lea
jl
adc
jge
gs
(bad)
idiv
and
inc
adc
ds
shl
inc
cs
and
cmp
inc
xor
jge
les
or
aaa
ss
pop
les
test
inc
xor
les
retf
and
shl
inc
dec
xchg
dec
mov
dec
ja
retf
jle
out
cmp
jns
adc
test
mov
sbb
jl
sub
pusha
call
inc
jecxz
and
int
xor
test
(bad)
jp
test
gs
pop
and
gs
inc
shr
cwde
cmp
ss
inc
push
cmp
popa
push
cmp
dec
lea
addr16
aad
aas
jnp
add
fs
inc
mov
xor
leave
adc
in
xor
fs
jle
inc
add
fs
adc
es
push
cmp
xor
out
dec
mov
in
cmp
dec
sbb
shl
out
inc
mov
xor
jg
retf
retf
outs
popf
inc
push
les
test
dec
mov
dec
xor
outs
jnp
inc
jmp
and
xor
push
fs
ss
dec
lea
fiadd
cmp
add
lea
test
cmp
(bad)
xchg
cmp
dec
pusha
gs
xor
mov
mov
and
cmp
ror
(bad)
xor
mov
call
jns
int
xchg
mov
mov
call
jns
retf
xor
in
mov
dec
jbe
idiv
in
inc
pop
test
enter
jl
enter
mov
bound
xor
(bad)
dec
pop
test
sbb
gs
aad
mov
pop
adc
lock
and
scas
mov
movs
sub
lock
sahf
les
arpl
cmp
inc
aad
mov
fbld
and
and
idiv
push
or
pop
iret
mov
xor
xchg
enter
cmp
aad
mov
ret
pop
jo
loope
gs
dec
inc
cmp
aad
mov
retf
das
jo
jmp
out
mov
mov
jns
dec
std
fdivr
dec
xlat
cmp
test
pushf
xor
lahf
les
mov
lock
lahf
les
fadd
ds
in
dec
mov
call
cmp
inc
push
gs
xchg
addr16
hlt
xchg
dec
cmp
retf
clc
ds
les
dec
sahf
les
retf
pusha
mov
jns
dec
in
mov
inc
cmp
mov
mov
jg
in
xor
mov
jle
ret
or
in
mov
push
shl
xor
leave
loope
and
xchg
inc
outs
cdq
inc
je
out
inc
add
ja
aam
xor
mov
dec
mov
retf
push
cwde
ds
in
dec
shl
xor
inc
sub
rol
cmp
adc
cdq
and
call
les
inc
lds
call
aam
xor
mov
jmp
retf
mov
mov
cmp
add
gs
lock
cmp
ficom
les
scas
les
xor
mov
call
cli
mov
sbb
out
(bad)
push
mov
fild
scas
xchg
and
inc
mov
or
cmp
ss
icebp
in
inc
(bad)
loopne
scas
les
xor
inc
dec
shl
inc
mov
call
jns
and
mov
in
or
pusha
test
inc
aad
mov
mov
cmp
dec
fsub
call
(bad)
out
pop
fsub
call
mov
pop
sahf
les
xor
sahf
les
pop
sahf
les
xor
lahf
les
xor
lds
call
popf
cmp
inc
mov
push
lahf
les
xor
(bad)
xor
lahf
les
xor
lahf
les
retf
inc
mov
lahf
les
inc
aad
mov
(bad)
adc
retf
call
mov
daa
retf
lock
cmp
inc
pushf
in
xor
mov
or
mov
rcr
aam
xor
push
cs
imul
in
pop
mov
call
imul
xor
lds
retf
sbb
inc
xor
lock
cmp
(bad)
xor
jge
gs
push
cmp
pop
fs
jle
inc
cmp
dec
mov
call
cmp
stos
(bad)
call
dec
movs
in
xor
mov
fistp
jg
in
xor
js
adc
leave
retf
out
inc
mov
in
cmp
shl
js
adc
leave
retf
out
inc
mov
in
cmp
shl
js
adc
push
shr
mov
rcr
in
xor
hlt
rcl
(bad)
in
jecxz
call
shl
inc
dec
jae
inc
push
fs
out
mov
mov
cs
les
and
loopne
scas
les
inc
push
mov
lea
adc
mov
scas
(bad)
adc
les
in
call
push
fs
gs
inc
cmp
inc
dec
jnp
jl
retfw
gs
inc
cmp
inc
dec
outs
dec
jl
pusha
retf
gs
dec
(bad)
loopne
sahf
les
dec
cmp
xor
dec
mov
call
les
xor
mov
mov
call
aam
xor
scas
les
adc
cmp
mov
in
xor
(bad)
xor
scas
les
mov
test
and
call
les
mov
push
or
pop
iret
mov
xor
in
les
or
pop
ss
pop
mov
ret
cdq
hlt
pop
enter
mov
(bad)
mov
mov
mov
jns
jae
cmp
mov
out
(bad)
mov
mov
ss
mov
mov
push
inc
cmp
inc
jne
test
inc
and
cmp
inc
adc
inc
adc
dec
imul
pop
cmp
add
mov
(bad)
lahf
lock
cmp
shr
add
shl
and
rcr
gs
pushf
retf
gs
data16
pushf
lock
mov
retf
or
inc
pop
gs
sahf
retf
dec
lea
retf
jge
gs
or
idiv
out
cmp
retf
and
xor
and
leave
stc
push
or
outs
cdq
(bad)
fs
cmp
mov
xor
inc
popa
dec
add
js
cmp
cmp
int
ret
pusha
mov
inc
mov
ss
stc
push
or
outs
cdq
(bad)
fs
cmp
retf
gs
popa
dec
add
(bad)
jp
inc
cmp
inc
push
xchg
retf
adc
mov
fs
aas
in
mov
xor
dec
add
jle
retf
out
leave
dec
lea
xor
jo
xor
cmp
retf
rol
xor
out
(bad)
mov
jle
cmp
test
test
retf
in
mov
sar
sbb
cmps
lahf
leave
fidiv
adc
inc
xor
push
adc
int3
xchg
(bad)
in
or
les
inc
ins
bswap
test
xor
inc
mov
dec
mov
and
mov
dec
mov
bound
or
retf
sub
cmp
daa
clc
dec
cmp
inc
add
gs
aas
inc
retf
pop
cdq
inc
cmp
popf
push
xlat
push
mov
cmp
lahf
les
stos
jbe
gs
xor
xor
dec
inc
fistp
xchg
inc
cmp
dec
inc
fistp
retf
out
push
mov
jecxz
mov
sti
mov
popf
jecxz
mov
xchg
push
repnz
lahf
leave
fidiv
jne
jbe
test
aam
mov
cmp
retf
call
outs
gs
cmps
lahf
leave
fsubp
es
push
push
sbb
jecxz
mov
mov
inc
cmp
leave
sub
bswap
sub
gs
adc
test
xor
inc
mov
dec
mov
inc
imul
dec
mov
add
inc
cmp
pop
bswap
push
sar
inc
cmp
or
stos
push
retf
add
in
or
push
imul
test
ss
and
leave
ret
fs
cld
bswap
ret
inc
imul
dec
mov
cmp
mov
cmp
dec
cdq
pushf
test
ss
lea
adc
gs
add
ret
xchg
sub
xchg
mov
xor
push
pushf
pop
test
out
scas
dec
in
inc
sbb
retf
or
mov
inc
push
gs
call
cmp
or
ret
push
xor
cld
out
mov
shl
mov
inc
ins
lea
cmp
xchg
retf
and
leave
cli
out
mov
cmp
xor
clc
bswap
int
cdq
cwde
adc
adc
push
shr
retf
cdq
call
gs
test
ss
lea
scas
dec
retfw
fs
cmp
fidiv
push
ins
ficomp
sub
mov
sbb
cmp
inc
xchg
mov
sub
bswap
sub
or
xor
adc
gs
xchg
push
or
cmp
retf
mov
jno
in
or
mov
les
(bad)
push
rcr
inc
cmp
and
ret
dec
xor
cld
push
or
cmp
sub
adc
popf
retf
dec
ins
or
pop
es
mov
or
or
in
lahf
mov
xor
into
jle
cmps
lea
imul
add
lea
jnp
daa
retf
xor
inc
mov
mov
dec
lea
adc
cmp
cmp
dec
test
es
sbb
jle
inc
or
inc
adc
xor
idiv
adc
xchg
pop
in
add
(bad)
cmp
xor
test
xor
inc
mov
add
imul
pop
mov
ret
imul
add
(bad)
in
(bad)
mov
add
sahf
inc
cmp
mov
aas
pop
call
mov
inc
cmp
push
dec
jl
cmp
mov
push
inc
cmp
cmp
xchg
pop
gs
xlat
push
cdq
push
ins
fiadd
xor
retf
in
(bad)
pushf
mov
lods
xchg
retf
inc
mov
add
inc
mov
sbb
int
cli
pop
add
fmul
inc
cmp
in
xchg
dec
aaa
cmp
cmp
pop
mov
inc
add
cmp
(bad)
mov
imul
mov
retf
pop
cmp
rol
xor
cmp
adc
in
or
push
call
jmp
inc
mov
xor
adc
adc
in
or
and
lea
iret
mov
movs
aam
jle
dec
cmp
mov
add
cmp
inc
cmp
xor
dec
scas
jb
jo
retf
in
(bad)
cwde
mov
inc
add
mov
ret
ja
nop
push
movs
cmps
inc
cmp
imul
(bad)
fs
movs
mov
and
repz
(bad)
lods
xor
xchg
out
fs
movs
mov
(bad)
dec
mov
(bad)
arpl
nop
xor
lahf
mov
jle
jb
add
mov
in
(bad)
nop
mov
inc
add
xor
lahf
dec
xor
cwde
dec
adc
(bad)
movs
shl
cwde
or
xchg
mov
add
pop
clc
cmp
inc
stos
ficom
stc
dec
add
or
stos
cmc
pop
xor
cmc
pop
shr
cmc
pop
add
and
pop
add
and
pop
jns
cmc
pop
shr
cmc
pop
clc
cmp
xor
and
xchg
loopne
shr
cmc
pop
shr
cmc
pop
ret
sti
popa
pop
shr
cmc
pop
xor
stos
add
shr
in
retf
mov
stos
cmc
pop
rcr
inc
cmp
shr
pmuludq
cmp
out
add
jge
shr
cmc
pop
shl
cmc
sti
push
stos
cmc
pop
sar
cmc
repz
mov
stos
cmc
dec
xor
pop
sar
cmc
mov
rcr
pop
shr
fs
mov
addr16
mov
add
mov
xchg
mov
and
shr
jne
inc
stos
bswap
shr
cmc
pop
shr
cmc
pop
xor
cmc
pop
shr
gs
leave
loop
pop
shr
cmc
pop
jno
cmc
pop
shr
cmc
pop
leave
repz
pop
shr
cmc
pop
shr
cmp
pop
dec
inc
add
cmc
pop
inc
ret
cmc
pop
shr
cmc
pop
clc
cmp
xor
cmc
pop
xor
cmc
pop
shr
gs
leave
loop
pop
shr
cmc
pop
jno
cmc
pop
shr
cmc
pop
leave
repz
pop
shr
cmc
pop
shr
cmp
pop
(bad)
and
xchg
push
cli
shr
cmc
pop
shr
cmc
pop
and
add
jnp
cwde
xor
movs
mov
xor
aaa
add
aaa
fdivrp
imul
inc
or
inc
cwde
adc
(bad)
mov
and
shl
inc
cmp
vpmacsww
(bad)
in
or
outs
call
std
and
ror
ja
gs
xchg
jb
inc
gs
gs
rcr
xchg
mov
out
(bad)
mov
xchg
xor
stc
in
lahf
mov
aas
arpl
xor
idiv
dec
je
add
xor
fimul
sub
icebp
in
fcmove
jle
(bad)
arpl
mov
sub
vpmacsww
jbe
jecxz
mov
dec
and
inc
push
ins
mov
int
xchg
call
ror
dec
cmp
(bad)
fwait
retf
nop
imul
cwde
adc
inc
add
xor
sar
call
mov
es
clc
out
inc
pop
call
jae
or
mov
cmp
fsubp
es
push
xor
mov
and
imul
ss
sub
mov
add
and
add
jmp
inc
xor
cmp
std
out
mov
daa
retf
push
enter
cmp
in
or
jle
call
call
xor
retf
shl
retf
das
pop
jp
jns
loope
push
leave
pop
add
in
sbb
pop
xor
mov
cli
or
addps
jns
inc
lahf
cmp
lea
popf
test
sub
inc
push
imul
inc
cmp
and
shr
test
out
pop
call
mov
in
sub
leave
add
mul
retf
out
mov
jns
leave
inc
jmp
mov
and
xor
les
lea
inc
add
jecxz
(bad)
mov
jns
sti
push
mov
retf
mov
mov
imul
mov
(bad)
mov
je
retf
mov
retf
mov
or
mov
mov
push
mov
add
in
add
gs
sub
inc
mov
adc
mov
adc
call
fnstenv
xchg
mov
sub
push
fld
add
in
adc
mov
and
jne
retf
imul
jle
and
xchg
cmp
leave
std
in
adc
xchg
inc
push
out
test
inc
or
add
mul
retf
mov
add
pop
(bad)
mov
mov
cwde
mul
retf
xchg
and
mov
fbld
sub
(bad)
mov
les
lea
leave
inc
out
mov
and
xor
in
adc
add
push
adc
das
lock
inc
dec
out
test
inc
mov
lock
mov
inc
push
lods
pop
add
push
adc
das
lock
fld
lock
xor
and
add
cmp
lea
call
mov
retf
bswap
sub
or
xor
or
gs
add
imul
test
call
shl
add
xchg
add
and
jno
retf
xchg
sub
jle
inc
xchg
movs
mov
gs
xlat
jge
inc
cmp
pushf
pop
test
and
fst
gs
mov
mov
gs
inc
cmp
pop
les
imul
and
jbe
retf
sub
mov
movs
xor
pushf
aad
icebp
in
sbb
mov
dec
xchg
xor
scas
call
retf
in
or
jle
retf
stos
adc
gs
call
mov
cmp
add
mov
leave
stc
out
and
call
jle
test
or
cmp
xor
or
int
retf
xor
les
int3
mov
retf
push
cmp
std
call
xor
add
or
inc
(bad)
xor
or
push
mov
inc
push
gs
call
xor
inc
cmp
dec
mov
call
out
retf
mov
or
adc
sub
call
xor
inc
cmp
xor
mov
cmp
xor
inc
les
test
cdq
sub
xchg
mov
loopne
mov
lods
sub
inc
mov
gs
(bad)
xor
mov
gs
(bad)
xor
inc
cmp
and
ds
or
retf
int
call
cmp
test
gs
xchg
mov
leave
mov
in
or
push
or
add
or
mov
test
gs
mov
add
xlat
jne
push
ins
out
mov
xchg
sbb
cmp
mov
cmp
xor
mov
dec
and
ret
xor
mov
dec
cmp
retf
bswap
mov
xor
jb
ss
in
(bad)
mov
mov
xor
inc
dec
pushf
inc
add
ins
bswap
sub
call
shr
inc
les
ss
das
retf
xchg
sbb
push
pusha
lods
or
dec
xor
sub
gs
or
mov
push
les
fidivr
xor
dec
test
cmp
pop
test
mov
cmovnp
sub
bswap
int
jno
mov
aaa
call
cmp
push
pop
shl
xchg
and
inc
cmp
adc
sub
jne
jno
popf
clc
bnd
inc
int3
add
in
or
inc
cmp
(bad)
mov
imul
sub
mov
xor
shl
inc
cmp
aas
push
or
les
fidivr
les
fidivr
jno
retf
adc
mov
jb
retf
mov
mov
jb
retf
pop
retf
add
in
or
mov
xor
mov
out
mov
es
sar
sbb
popf
retf
mov
cmp
retf
in
(bad)
mov
mov
(bad)
mov
cmp
inc
les
(bad)
mov
jb
retf
adc
jno
mov
int
jge
push
push
mov
mov
jb
retf
adc
mov
jb
retf
mov
leave
ret
fs
cld
call
cmp
add
clc
xor
mov
ficomp
or
retf
gs
lea
cmp
test
sub
xor
fld
inc
add
cmp
xor
rcr
inc
push
mov
retf
bswap
sub
mov
ins
add
retf
gs
mov
xor
and
jecxz
mov
xor
inc
rcl
mov
outs
in
das
adc
in
add
mov
inc
add
retf
leave
imul
dec
aas
retf
cmps
lahf
leave
fsubp
es
push
ins
inc
sbb
mov
and
inc
jp
retf
mov
rol
(bad)
xor
jecxz
inc
mov
mov
and
jmp
mov
sub
cmps
mov
mov
dec
cmp
dec
inc
cmp
rol
retf
ins
adc
in
jle
adc
leave
ret
sub
mov
xchg
gs
adc
mov
cdq
inc
add
mov
mov
jecxz
and
gs
out
(bad)
mov
mov
ss
les
xlat
leave
retf
adc
les
fisubr
mov
ss
stc
fs
outs
cdq
inc
cwde
cmp
and
and
leave
jle
inc
add
mov
cmp
jle
xchg
push
pusha
lods
or
pop
ss
pop
mov
ret
xchg
or
push
inc
add
mov
and
fucomip
(bad)
mov
lea
add
ret
in
or
dec
ins
jp
inc
mov
rcl
cmp
gs
mov
jae
idiv
push
dec
mov
ins
or
push
inc
or
cmp
mov
stc
push
add
xor
fiadd
or
stos
jae
jge
lds
jl
in
xor
and
inc
mov
out
and
xor
and
inc
sub
sub
fucomi
sbb
retf
inc
xchg
popf
sub
mov
lea
pop
cmp
test
add
add
dec
retf
retf
in
(bad)
pushf
mov
adc
out
in
(bad)
mov
and
pop
gs
jae
enter
mov
ss
pop
test
test
sbb
or
inc
gs
xchg
xor
in
call
retf
in
or
mov
xor
cs
les
or
adc
jno
mov
std
ret
call
shr
inc
cmp
outs
retf
xchg
sti
mov
mov
data16
gs
(bad)
aaa
mov
cmp
xor
mov
les
xor
aad
call
aas
gs
and
retf
cdq
xor
sbb
gs
ins
mov
test
es
and
leave
mov
in
or
repz
ret
sub
out
pop
nop
les
and
jmp
xchg
xor
add
call
cmp
push
dec
push
sub
add
call
lea
retf
mov
retf
outs
retf
cld
cmp
cmp
jns
xor
mov
cmp
push
dec
rcl
inc
cmp
rol
push
mov
out
inc
inc
inc
and
jge
retf
gs
xchg
xor
mov
ss
add
lea
test
in
scas
cmp
test
and
inc
sub
cmp
cmp
cmp
jns
xor
mov
cmp
push
dec
push
push
cmp
cmp
xor
inc
mov
and
inc
sub
cmp
cmp
cmp
jns
xor
mov
cmp
push
dec
mov
and
xor
inc
mov
pusha
mov
shl
inc
cmp
mov
aaa
inc
std
(bad)
call
jns
popf
test
and
inc
mov
inc
mov
retf
mov
xor
retf
les
push
mov
and
jle
retf
gs
xchg
xor
shl
push
jge
add
call
mov
mov
mov
shl
mov
jle
retf
ins
and
jle
retf
gs
xchg
xor
shl
push
jge
add
call
pop
and
inc
mov
inc
add
leave
mov
gs
mov
cmp
push
dec
shl
inc
cmp
rol
push
mov
out
inc
inc
inc
and
pop
gs
xchg
xor
mov
ss
add
lea
add
gs
test
in
cmp
in
or
icebp
and
inc
or
mov
jns
inc
std
in
aaa
mov
cmp
(bad)
aaa
mov
mov
ss
jmp
mov
lea
cmp
test
lea
cmp
dec
cmp
fxch
pushf
dec
mov
inc
and
inc
add
inc
cmp
cmp
mov
push
pop
cmp
cmp
and
jg
retf
jne
xchg
xor
inc
cmp
rol
push
mov
out
inc
inc
jbe
pop
enter
mov
mov
test
(bad)
out
cmp
dec
cmp
fxch
pushf
dec
mov
lock
mov
shl
mov
jg
retf
ins
and
gs
gs
xchg
xor
shl
push
jge
add
call
sbb
mov
jmp
mov
gs
mov
push
(bad)
cmp
cmp
retf
jno
(bad)
js
retf
gs
xchg
xor
shl
push
scas
cmp
cmp
xor
inc
mov
xchg
sub
mov
in
or
mov
retf
outs
retf
cld
cmp
cmp
jns
xor
mov
cmp
push
dec
ror
inc
cmp
rol
push
mov
out
inc
inc
inc
and
js
retf
gs
xchg
xor
mov
ss
add
lea
test
out
pusha
cmp
(bad)
cmp
ret
sahf
lods
xor
sbb
gs
gs
gs
mov
xchg
inc
xchg
call
les
xor
mov
inc
(bad)
cmps
mov
or
mov
add
call
idiv
popf
jae
cmp
fxch
pushf
dec
sbb
mov
cmp
test
(bad)
fnstenv
ret
cld
add
int
gs
xor
int
gs
xor
out
jns
retf
jno
(bad)
aaa
mov
(bad)
call
dec
call
lds
dec
inc
cmp
ss
pop
xchg
mov
lea
test
fstp
jno
gs
mov
shl
mov
fadd
inc
cmp
mov
out
inc
inc
jbe
sbb
mov
scas
add
gs
test
(bad)
jmp
gs
pushf
dec
mov
lock
mov
shl
mov
jns
retf
ins
and
xor
inc
mov
pusha
mov
push
jge
add
call
and
retf
mov
xor
inc
cmp
xor
mov
les
xor
(bad)
in
dec
lods
les
cmp
std
mov
cmp
add
les
retf
fmul
inc
les
retf
inc
cmp
cmp
or
retf
jle
iret
inc
repz
popf
xor
adc
gs
popf
xor
lods
les
mov
int
xchg
xor
sub
retf
imul
mov
pop
retf
inc
dec
pushf
inc
xchg
ja
les
sub
mov
out
dec
test
cwde
xor
inc
cmp
dec
mov
cwde
xor
mov
push
pop
retf
loopne
mov
dec
popf
xor
leave
mov
call
dec
jge
cmc
retf
call
lds
mov
lea
add
gs
test
in
cmp
in
or
std
and
retf
cld
cmp
cmp
jns
xor
mov
cmp
push
dec
rol
mov
fadd
inc
cmp
mov
out
inc
inc
jbe
mov
daa
retf
cdq
xor
add
gs
test
lea
dec
cmp
fxch
pushf
dec
mov
and
ss
jnp
retf
ins
inc
mov
xchg
inc
xchg
sar
mov
push
gs
xchg
xor
inc
cmp
xor
icebp
xchg
xor
leave
mov
ins
or
loop
mov
jns
xor
mov
cmp
push
dec
shr
cmp
rol
push
mov
out
inc
inc
jbe
sbb
mov
loop
cmp
test
in
cmp
in
or
in
retf
outs
retf
cld
cmp
cmp
jns
xor
mov
cmp
push
dec
rcr
cmc
inc
cmp
rol
push
mov
out
inc
inc
jbe
pop
enter
mov
adc
gs
test
or
xor
mov
cmp
push
dec
or
inc
cmp
xor
test
pop
retf
outs
retf
cld
cmp
cmp
cmp
and
gs
pushf
cwde
retf
xchg
mov
pop
sar
cmc
inc
cmp
push
push
rcr
inc
cmp
rol
push
mov
out
inc
inc
jbe
sbb
mov
xchg
jg
gs
test
(bad)
sar
gs
cmp
fxch
pushf
dec
mov
lock
mov
shl
mov
add
retf
ins
inc
mov
add
call
add
gs
xchg
xor
shl
push
jge
add
call
cmp
mov
retf
outs
retf
cld
cmp
cmp
cmp
and
gs
pushf
cwde
retf
xchg
mov
pop
ror
hlt
inc
cmp
push
push
push
dec
cmp
cmp
xor
inc
mov
dec
cmp
std
lea
dec
cmp
fxch
pushf
dec
mov
and
ss
add
ins
mov
mov
les
dec
test
(bad)
idiv
gs
cmp
fxch
pushf
dec
mov
and
ss
add
ins
mov
mov
les
dec
test
fld
cmps
mov
or
rcl
rol
push
mov
out
inc
inc
jbe
pop
enter
mov
fidivr
gs
test
call
xor
mov
cmp
push
jge
gs
test
lea
cmp
dec
cmp
fxch
pushf
dec
mov
and
ss
push
gs
ins
inc
mov
xchg
inc
xchg
cmp
cmp
xor
inc
mov
pop
retf
outs
retf
cld
cmp
cmp
jns
xor
mov
cmp
push
dec
shl
inc
cmp
and
gs
mov
in
sbb
inc
cmp
inc
std
(bad)
call
jns
popf
test
pop
retf
mov
cmp
std
(bad)
jmp
gs
pushf
dec
mov
and
ss
push
gs
ins
mov
mov
les
dec
test
lea
jl
gs
cmp
fxch
pushf
dec
mov
and
ss
push
gs
ins
dec
scas
imul
inc
cmp
rol
push
mov
out
inc
inc
inc
and
pop
gs
gs
xchg
xor
mov
ss
add
lea
cmp
test
or
xor
mov
cmp
push
dec
push
mov
inc
push
mov
mov
add
leave
mov
in
cmp
in
or
mov
jb
cmp
inc
mov
ds
(bad)
shl
mov
rcr
repz
cmp
xor
inc
(bad)
shl
mov
add
clc
dec
outs
retf
add
call
test
inc
mov
es
mov
cmp
mov
cmp
movs
mov
gs
jmp
jg
pop
mov
cmp
mov
std
and
mov
xor
(bad)
mov
jns
inc
(bad)
xor
jnp
mov
add
call
xor
inc
mov
call
cmp
(bad)
mov
push
mov
sub
mov
fs
(bad)
call
xchg
aad
retf
mov
add
or
and
inc
mov
lods
or
cmps
addr16
xor
sub
xchg
sub
mov
sahf
stc
aaa
mov
xor
repnz
xor
or
(bad)
stos
cwde
xor
retf
aaa
pusha
retf
inc
cmp
int
cwde
xor
pop
cmp
fwait
mov
dec
xchg
xor
pop
add
retf
outs
ins
inc
adc
pusha
mov
scas
lds
mov
ret
in
or
inc
cmp
dec
cmp
call
les
inc
adc
(bad)
call
outs
addr16
add
call
mov
mov
cmc
fwait
cwde
xor
inc
cmp
dec
xor
call
les
inc
adc
(bad)
call
mov
aaa
mov
cmp
sahf
inc
cmp
inc
aad
cwde
xor
inc
cmp
aaa
mov
aas
lea
inc
cmp
dec
aam
call
cld
pminub
cmp
dec
in
call
cmp
call
popa
retf
inc
cmp
dec
hlt
(bad)
call
cmp
mov
test
mov
dec
sti
adc
push
rcl
cld
inc
cmp
inc
addr16
mov
cmp
mov
ret
push
xor
cld
or
inc
(bad)
xor
hlt
(bad)
call
cmp
xor
mov
(bad)
call
les
xor
mov
(bad)
cwde
xor
mov
call
(bad)
call
rcr
inc
cmp
xor
in
or
inc
cmp
loopne
daa
retf
cdq
xor
les
retf
dec
xor
cld
call
xor
mov
mov
retf
push
and
(bad)
(bad)
call
cld
jle
clc
lds
repz
cmp
push
pop
mov
sti
mov
sbb
inc
cld
loopne
mov
cmp
xchg
gs
xchg
sub
mov
xchg
aaa
mov
pop
mov
xor
imul
fnsave
les
xor
mov
mov
xor
mov
inc
push
gs
(bad)
xor
test
push
retf
movs
(bad)
gs
shl
les
retf
jb
inc
cmp
xor
inc
push
sbb
cmp
dec
mov
shl
repnz
cmp
push
push
std
loopne
mov
adc
gs
cdq
xor
les
retf
push
retf
cmps
ret
or
test
gs
push
retf
loopne
mov
mov
pop
iret
xor
ins
adc
or
and
gs
cmp
inc
cmp
ja
(bad)
call
retf
gs
push
retf
popa
retf
inc
cmp
dec
mov
push
mov
add
call
xor
mov
push
call
sahf
stc
aaa
mov
mov
call
cmp
aaa
mov
les
retf
loopne
mov
add
popf
cmp
mov
ins
lea
inc
(bad)
shr
les
retf
fs
cld
call
mov
loopne
mov
pusha
lods
or
inc
movs
mov
xor
das
fisub
pop
outs
inc
mov
retf
in
or
inc
int3
add
in
or
out
pcmpgtw
leave
stc
add
lds
inc
in
or
mov
ss
ret
xchg
sub
xchg
adc
test
push
retf
cmps
lods
leave
outs
xchg
cdq
test
push
retf
cmps
lods
leave
outs
xchg
dec
scas
or
inc
xor
(bad)
mov
cmp
retf
nop
xor
lahf
mov
and
push
test
mov
retf
movs
dec
cmp
sti
in
(bad)
movs
mov
mov
adc
hlt
cld
inc
cmp
push
dec
les
ret
out
inc
imul
mov
les
(bad)
dec
mov
xor
jg
iret
add
xor
gs
add
ds
adc
cmp
retf
ror
inc
xor
lahf
mov
outs
xchg
inc
add
call
inc
mov
xor
push
gs
sub
mov
inc
cmp
or
ret
push
xor
cld
sysexit
push
rcr
inc
cmp
(bad)
mov
or
push
rcl
cmp
xor
in
or
push
pusha
lods
or
and
retf
push
retf
xor
cmp
inc
bswap
inc
int3
add
test
mov
xchg
retf
loopne
mov
mov
xor
retf
push
retf
mov
pop
inc
cmp
mov
push
call
mov
adc
mov
les
sti
inc
cmp
xor
in
or
and
loopne
mov
cmp
xchg
push
jbe
les
sub
jns
retf
movs
mov
test
call
mov
adc
mov
les
cli
inc
cmp
xor
in
or
dec
ror
sti
adc
dec
scas
out
jb
inc
cmp
movs
add
cmp
cdq
push
ins
out
xchg
dec
test
repnz
in
cmp
in
or
mov
add
mov
cdq
sub
fs
inc
sti
inc
cmp
cmp
in
or
loop
add
cmp
xor
cld
cmpps
xor
sar
push
dec
push
xor
add
and
gs
ins
inc
mov
add
mov
cmp
push
sub
add
call
xor
inc
cmp
push
dec
sar
inc
fadd
inc
cmp
mov
out
inc
inc
jno
pop
enter
mov
xor
retf
ins
jb
cmp
in
dec
lods
in
xor
je
gs
cmp
fxch
pushf
dec
mov
ins
push
retf
push
retf
cld
cmp
inc
fistp
and
cmp
ja
fistp
inc
out
push
ror
inc
cmp
rol
push
mov
out
inc
inc
jno
pop
enter
mov
xor
retf
ins
mov
int
sub
pcmpgtw
ret
jmp
mov
xchg
inc
xchg
mov
inc
cmp
rol
push
mov
out
inc
inc
jno
pop
enter
mov
xor
retf
ins
and
xor
inc
mov
pusha
mov
rcl
stc
inc
cmp
test
mov
aaa
inc
std
cmp
xchg
scas
jns
inc
std
cmp
data16
gs
test
call
cmp
dec
inc
fistp
cmp
cmp
dec
inc
fistp
stc
inc
cmp
push
push
mov
and
or
stc
xor
inc
mov
pusha
mov
push
jge
add
call
xor
inc
cmp
push
dec
push
outs
cmp
cmp
dec
inc
fistp
stc
inc
cmp
push
dec
mov
and
gs
gs
xchg
xor
shl
push
jge
add
call
xor
inc
cmp
push
dec
push
cmp
cmp
dec
inc
fistp
stc
inc
cmp
push
dec
ror
inc
cmp
mov
out
inc
inc
dec
and
pop
gs
xchg
xor
mov
retf
call
mov
retf
call
mov
xchg
mov
loopne
mov
in
retf
mov
retf
add
mov
and
or
stc
xor
inc
mov
pusha
mov
push
jge
add
call
xor
inc
cmp
push
dec
push
cs
cmp
dec
inc
fistp
clc
inc
cmp
push
dec
shl
inc
cmp
rol
push
mov
out
inc
inc
jno
pop
enter
mov
xor
retf
ins
mov
int
sub
or
ret
jmp
mov
xchg
inc
xchg
je
inc
cmp
rol
push
mov
out
inc
inc
jno
pop
enter
mov
xor
retf
ins
xor
inc
fistp
and
cmp
dec
inc
fistp
sti
inc
cmp
push
push
shr
rol
push
mov
out
inc
inc
jno
pop
enter
mov
xor
retf
ins
mov
int
sub
or
ret
jmp
mov
xchg
inc
xchg
call
rol
push
mov
out
inc
inc
jno
pop
enter
mov
xor
retf
ins
and
or
stc
shl
inc
mov
in
push
sbb
retf
fmul
mov
sub
fmul
mov
ins
push
retf
mov
retf
outs
retf
cld
cmp
cmp
jns
inc
lds
test
jno
gs
test
in
cmp
in
xor
scas
jns
inc
lds
test
jno
gs
test
lea
jo
gs
cmp
fxch
pushf
dec
mov
and
retf
call
mov
push
retf
outs
retf
cld
cmp
cmp
cmp
and
gs
pushf
cwde
int
sub
aad
retf
sub
or
ret
push
nop
aam
retf
sub
or
ret
jmp
inc
push
mov
inc
push
gs
and
gs
cdq
adc
ret
imul
mov
push
gs
call
xor
inc
fistp
ss
les
retf
cdq
adc
ins
cmp
cmp
in
dec
mov
std
push
or
shl
mov
xchg
inc
xchg
mov
xor
mov
gs
push
ins
(bad)
pusha
fnstcw
jb
adc
mov
in
dec
(bad)
rcr
fadd
call
mov
sti
mov
cmp
adc
and
inc
cmp
lahf
dec
mov
enter
pop
mov
cmp
mov
cmp
mov
rol
and
adc
mov
shl
retf
dec
retf
loopne
mov
push
gs
lds
lea
inc
cmp
int
shl
mov
aad
retf
mov
inc
mov
call
mov
or
inc
(bad)
xor
hlt
(bad)
call
cmp
xor
in
or
mov
(bad)
cwde
xor
mov
aaa
ins
or
sbb
inc
cmp
inc
(bad)
xor
outs
cmp
lds
call
xor
inc
cmp
inc
lds
popf
retf
mov
push
gs
lds
lea
cmp
test
in
xor
in
or
mov
cmp
xor
ret
xchg
aaa
mov
pop
mov
xor
sbb
int
fnsave
les
xor
mov
mov
xor
mov
inc
push
gs
(bad)
xor
test
dec
retf
movs
(bad)
fs
shl
les
retf
mov
jg
(bad)
call
push
sbb
cmp
dec
mov
shr
in
cmp
push
push
std
loopne
mov
adc
gs
cdq
xor
les
retf
dec
retf
mov
mov
test
dec
retf
loopne
mov
mov
pop
iret
xor
ins
cmp
mov
or
and
ret
fs
cld
or
inc
lds
xor
and
gs
or
inc
lds
(bad)
shl
call
cmp
(bad)
jmp
loopne
mov
rcr
cmp
dec
xor
retf
gs
mov
les
retf
mov
dec
cmp
lds
call
jmp
mov
retf
rcr
les
retf
mov
inc
cmp
retf
call
push
push
xor
and
cmp
inc
frstor
mov
adc
call
icebp
mov
mov
and
dec
fadd
call
(bad)
rcr
les
xor
xchg
retf
lea
cmp
lds
gs
mov
inc
lds
lea
mov
push
gs
mov
cmp
xor
inc
mov
push
mov
mov
retf
mov
pusha
lods
or
inc
movs
mov
xor
xor
int3
cs
jnp
retf
lea
imul
call
cmp
lahf
mov
imul
retf
mov
retf
xor
out
sbb
retf
shl
inc
cmp
int3
inc
imul
retf
and
adc
pushf
sub
add
mov
inc
cmp
or
jp
retf
add
in
or
pop
adc
int
cdq
call
xor
mov
ret
push
xor
cld
out
(bad)
mov
clc
xor
and
cmp
pushf
pop
test
aam
and
gs
call
cmp
or
int
into
jno
mov
leave
cld
or
inc
lds
xchg
xor
xor
gs
call
les
xor
jge
call
shl
mov
push
addr16
test
dec
retf
mov
add
xlat
jno
(bad)
js
inc
add
and
leave
cld
add
stos
push
in
xor
in
or
adc
and
cmp
(bad)
scas
imul
add
push
es
inc
cmp
retf
dec
retf
ror
adc
daa
add
call
loop
cmp
test
call
retf
fs
push
out
jp
and
adc
sar
fld
add
add
inc
jmp
push
pushf
pop
test
mov
inc
ret
in
or
sub
bswap
sub
bswap
sub
bswap
sub
or
mov
inc
push
jne
xchg
gs
in
xchg
gs
xor
icebp
jns
and
gs
xor
in
jp
and
gs
push
xor
cld
bswap
push
push
push
xor
inc
rcr
push
push
push
xor
inc
ror
push
push
push
xor
inc
sar
inc
ret
in
or
jo
push
loop
jp
and
cmp
mov
out
jp
and
adc
sub
xor
repz
and
adc
sub
xor
icebp
jns
and
adc
rcl
out
inc
cmp
retf
push
push
push
xor
inc
rcr
loop
cmp
retf
push
push
push
xor
inc
ror
loop
cmp
xor
mov
mov
mov
cmp
mov
mov
cmp
jb
push
retf
in
(bad)
mov
repnz
lahf
leave
fidiv
push
mov
sti
mov
les
in
jp
and
sbb
mov
mov
add
(bad)
mov
cmp
mov
icebp
jns
and
sbb
retf
retf
push
mov
add
(bad)
mov
cmp
inc
mov
(bad)
in
or
ins
xchg
and
test
inc
retf
inc
add
or
mov
out
jp
and
sbb
retf
call
jne
retf
gs
cmp
mov
in
and
sbb
retf
call
adc
inc
cwde
sbb
pop
leave
jnp
mov
out
jp
and
gs
cli
ret
inc
cmp
ss
cmp
imul
mov
cdq
xor
inc
rcl
ss
cmp
imul
mov
cdq
xor
inc
shl
jno
in
or
leave
fsubp
es
ins
xor
or
leave
cld
or
xor
mov
push
mov
add
xor
sub
call
xchg
and
ror
rol
bswap
adc
sub
cmp
and
int
xchg
call
bswap
mov
cmp
retf
and
imul
retf
jle
loope
retf
xor
mov
sub
xchg
mov
mov
add
or
and
sbb
aad
inc
push
gs
inc
push
gs
and
ret
rol
call
gs
adc
daa
add
or
mov
inc
cmp
into
out
jp
inc
mov
xlat
in
or
je
and
sub
call
stos
fs
and
imul
test
xor
mov
sub
xchg
mov
xchg
add
bswap
test
inc
retf
add
retf
bswap
sub
bswap
sub
bswap
sub
bswap
sub
mov
push
rcl
inc
cmp
or
cmp
mov
out
jp
and
cmp
retf
call
sub
mov
inc
cmp
sub
mov
xchg
add
bswap
test
inc
retf
sbb
cmp
and
sub
call
cmp
retf
or
mov
inc
cmp
sub
mov
add
bswap
test
inc
retf
lds
cmp
retf
push
add
bswap
mov
cmp
fisubr
jmp
inc
cmp
loop
cmp
adc
add
or
mov
inc
cmp
(bad)
out
jp
mov
out
jp
mov
lock
mov
inc
cmp
mov
inc
imul
mov
cmp
imul
push
retf
call
pop
xrstor
xchg
gs
jno
inc
cmp
call
call
retf
inc
retf
lea
cmp
or
sub
mov
adc
clc
out
inc
cmp
mov
inc
cmp
retf
inc
retf
gs
inc
push
gs
inc
push
dec
retf
inc
cmp
clc
sub
pop
mov
sub
xchg
mov
call
retf
inc
retf
in
add
bswap
mov
cmp
retf
add
out
cmp
jl
iret
retf
or
mov
sub
xchg
mov
call
retf
inc
retf
dec
add
fstp
ja
gs
leave
cld
(bad)
enter
mov
out
jp
mov
lock
mov
cmps
cmp
sub
retf
gs
or
mov
sub
lea
arpl
gs
aam
leave
inc
cmp
retf
push
add
bswap
mov
cmp
fisubr
mov
call
cmp
inc
cmp
sub
mov
xchg
add
bswap
test
inc
retf
adc
cmp
retf
push
add
bswap
mov
cmp
fisubr
pop
or
mov
sub
gs
das
add
or
mov
inc
cmp
cli
jmp
les
out
jp
mov
lock
mov
inc
cmp
mov
inc
imul
mov
cmp
imul
cld
bswap
mov
cmp
retf
and
cmp
fisubr
ins
or
mov
sub
gs
imul
cmp
mov
inc
cmp
pop
repz
mov
out
jp
mov
lock
mov
inc
cmp
mov
shr
mov
mov
sub
addr16
movs
call
icebp
jns
mov
out
jp
mov
lock
mov
inc
cmp
mov
shr
bnd
mov
sub
addr16
loopne
inc
cmp
(bad)
in
gs
mov
push
gs
inc
push
gs
inc
push
jge
push
cmp
fisubr
cmp
adc
cmp
cmp
mov
test
inc
retf
dec
add
bswap
mov
cmp
retf
add
shr
pop
or
mov
shr
mov
mov
sub
addr16
push
jmp
push
(bad)
out
jp
mov
lock
mov
inc
cmp
mov
shr
stos
jns
mov
sub
lea
popa
cmp
fmul
popf
xor
inc
cmp
inc
xchg
add
mov
clc
xor
mov
ficomp
fwait
pop
retf
nop
daa
add
call
(bad)
in
or
xlat
mov
mov
call
jp
inc
mov
push
gs
inc
rol
inc
cmp
xor
mov
inc
add
imul
jne
retf
push
gs
retf
jle
loope
iret
xor
(bad)
mov
bswap
sub
or
mov
sub
mov
inc
cmp
imul
call
cmp
xor
xchg
dec
test
xor
mov
sub
mov
add
bswap
test
inc
retf
popa
add
in
xor
in
or
je
and
sub
call
pop
fs
and
imul
test
xor
mov
sub
xchg
mov
xchg
add
bswap
test
inc
retf
add
retf
bswap
sub
bswap
sub
bswap
sub
bswap
sub
mov
push
ror
or
cmp
mov
out
jp
and
sbb
sub
call
cmp
retf
xrstor
das
pmaxub
cmp
adc
cmp
cmp
mov
inc
cmp
and
jp
inc
mov
push
out
add
bswap
sub
retf
push
and
jp
and
inc
mov
add
gs
lea
cmp
dec
jge
xlat
mov
adc
sub
bswap
sub
retf
push
and
jp
and
das
bswap
sub
or
xor
inc
rcl
aad
cmp
retf
push
add
bswap
mov
cmp
mov
cmp
retf
or
mov
sub
lea
cmp
ror
retf
add
in
or
je
and
sub
call
pop
fs
pop
mov
inc
cmp
mov
sub
and
and
retf
retf
rcl
mov
push
push
add
bswap
mov
cmp
fisubr
mov
or
sub
gs
ds
or
mov
inc
cmp
mov
mov
sbb
inc
push
gs
inc
push
gs
inc
push
jne
daa
push
loop
inc
cmp
mov
sub
mov
xchg
add
bswap
test
jnp
inc
cwde
push
arpl
cmp
retf
push
add
bswap
mov
cmp
fisubr
(bad)
gs
(bad)
cmp
scas
sub
gs
jle
add
or
mov
inc
cmp
cmp
jp
dec
xchg
gs
inc
push
gs
inc
push
jne
push
push
fmul
inc
cmp
mov
sub
xchg
add
bswap
test
jnp
inc
cwde
icebp
jns
cmp
retf
push
add
bswap
mov
cmp
fisubr
fbld
push
or
cmp
aam
cmp
adc
and
cmp
mov
inc
cmp
mov
jns
mov
out
jp
mov
lock
mov
inc
cmp
mov
inc
imul
mov
cmp
imul
cmp
retf
call
and
mov
inc
cmp
call
ins
add
or
and
es
ror
mov
mov
out
jp
mov
lock
mov
push
push
jno
inc
cmp
call
ins
add
or
and
es
retf
push
gs
inc
push
gs
inc
push
jge
and
cmp
shr
mov
mov
sub
addr16
sub
inc
cmp
jmp
push
(bad)
out
jp
mov
lock
mov
inc
cmp
mov
shr
stos
jns
mov
sub
(bad)
ficomp
gs
inc
xchg
xor
mov
iret
call
mov
dec
lods
sub
pushf
pop
test
test
pop
in
out
gs
or
mov
inc
push
gs
call
cmp
or
lds
retf
gs
test
jl
inc
mov
dec
mov
push
retf
(bad)
retf
gs
and
iret
popa
retf
in
(bad)
and
int
xchg
call
cdq
call
daa
retf
gs
fldcw
(bad)
out
pop
add
xor
mov
shl
retf
mov
mov
fstp
inc
add
sbb
into
sub
call
mov
add
or
and
(bad)
jge
mov
cmp
movs
mov
gs
push
test
mov
inc
adc
gs
mov
mov
mov
int
gs
jecxz
gs
js
inc
sub
cmp
cmp
sbb
cmp
fld
mov
loopne
mov
inc
jge
inc
mov
je
fdivr
daa
retf
gs
and
gs
fs
std
in
mov
and
test
jge
inc
mov
je
pop
stc
daa
retf
gs
outs
and
rol
xor
jns
inc
lds
call
cmp
xchg
sbb
sbb
daa
retf
gs
mov
inc
call
jns
inc
lds
call
cmp
cmp
push
sahf
or
cmp
dec
inc
les
fld
in
mov
mov
retf
call
mov
gs
cmp
push
xchg
or
cmp
dec
inc
les
fld
in
mov
sub
mov
mov
sbb
jo
daa
retf
gs
sub
mov
adc
sub
mov
loopne
mov
jne
retf
sbb
and
daa
retf
gs
ja
gs
bswap
sub
mov
and
cmp
dec
inc
les
add
lea
add
daa
retf
movs
mov
and
xchg
mov
sbb
retf
jle
inc
mov
push
cmp
std
mov
mov
repnz
into
inc
outs
in
das
adc
pushf
pop
mov
ret
popa
mov
sub
cmp
inc
xchg
sub
inc
ins
lea
pop
cmp
adc
fs
adc
or
dec
sti
adc
sub
ss
and
sar
jmp
cmps
into
inc
outs
in
das
rcl
ret
ss
pop
test
call
in
cmp
int3
call
retf
in
or
(bad)
cmps
mov
loopne
mov
call
rcr
inc
cmp
mov
in
pop
mov
call
les
push
inc
or
cmp
dec
lods
int3
call
cmp
cmp
in
or
xchg
mov
add
call
xor
inc
cmp
ja
ret
call
clc
daa
retf
mov
mov
gs
xchg
xor
push
sbb
add
call
xor
inc
cmp
push
bound
gs
mov
call
les
pop
cmp
(bad)
xor
push
cmp
std
enter
cmp
cmps
mov
loopne
mov
call
mov
call
jns
inc
(bad)
xor
push
cmp
mov
xchg
inc
xchg
call
jns
inc
(bad)
xor
push
cmp
std
enter
xor
fld
test
loopne
mov
call
mov
call
jns
inc
(bad)
xor
push
cmp
mov
xchg
inc
xchg
call
jns
inc
(bad)
xor
push
cmp
std
enter
aaa
adc
sub
mov
loopne
mov
call
mov
call
jns
inc
(bad)
xor
push
cmp
std
enter
xor
cmps
mov
loopne
mov
call
push
adc
dec
lods
int3
call
(bad)
in
sbb
retf
aad
inc
push
outs
or
cmp
dec
test
in
dec
test
call
les
push
mov
call
cmp
mov
or
inc
mov
gs
xchg
xchg
sti
mov
mov
mov
test
movs
xor
leave
mov
ins
or
mov
and
gs
std
(bad)
cdq
xor
repz
rol
(bad)
fs
fdiv
dec
mov
mov
xor
mov
mov
xor
stos
jns
inc
(bad)
xor
pop
cmp
test
out
mov
dec
dec
and
and
cli
clc
repnz
push
or
cli
pushf
aad
icebp
in
sbb
mov
lea
popf
xor
cmp
ret
push
add
mov
add
or
inc
(bad)
xor
pop
cmp
scas
fs
cmc
jnp
cmp
inc
(bad)
xor
pop
cmp
test
mov
inc
mov
ss
pop
jno
inc
mov
gs
(bad)
xor
stos
jns
inc
(bad)
xor
pop
cmp
dec
shl
retf
cdq
xor
and
ret
push
(bad)
xor
push
cmp
(bad)
xor
adc
call
mov
ss
stc
jb
inc
mov
call
xor
inc
cmp
cmp
int3
call
(bad)
vpmadcswd
mov
jmp
dec
sti
push
adc
gs
cdq
ss
imul
leave
mov
in
inc
xor
ret
ret
outs
vunpckhps
(bad)
shl
mov
mov
retf
vpmadcswd
mov
jge
retf
mov
mov
loopne
mov
inc
ja
inc
mov
ss
inc
jno
inc
mov
push
mov
call
les
xor
les
push
mov
push
mov
call
les
dec
(bad)
call
dec
std
out
xor
leave
retf
dec
cmp
std
call
mov
xor
retf
cdq
xor
les
retf
jne
(bad)
xor
push
cmp
(bad)
xor
mov
lds
inc
mov
adc
cmp
popf
sub
out
cmp
(bad)
xor
mov
mov
add
gs
mov
xchg
inc
xchg
call
mov
ss
xchg
mov
cmp
and
sub
int
popf
xor
(bad)
sar
mov
dec
and
retf
jbe
inc
imul
(bad)
xor
cmc
xlat
popf
xor
mov
mov
ret
xor
mov
xlat
popf
xor
inc
cmp
cmp
in
or
jnp
rol
in
inc
cmp
xchg
call
aas
gs
leave
(bad)
scas
push
cmp
inc
sub
adc
jno
dec
dec
mov
jecxz
adc
clc
in
pushw
retf
movs
mov
mov
test
ja
inc
mov
outs
scas
les
call
and
cs
mov
sub
gs
add
jp
or
inc
scas
gs
mov
mov
test
je
inc
push
call
jns
and
sub
test
je
inc
imul
cwde
cmp
retf
inc
cmp
dec
icebp
aad
xor
test
je
inc
push
mov
int
aam
mov
mov
jne
mov
mov
out
cmp
daa
retf
inc
mov
jns
xor
inc
and
inc
cmp
es
fnsave
inc
xor
or
adc
or
mov
les
xor
test
jno
inc
xor
ja
(bad)
call
push
or
cli
pushf
aad
icebp
in
sbb
mov
dec
xchg
cmp
scas
pop
ins
lods
les
xor
not
call
mov
and
das
gs
xchg
or
imul
mov
xor
adc
pushf
mov
icebp
jns
mov
int
(bad)
es
das
gs
call
xor
scas
les
retf
loopne
lods
les
xor
lods
les
xor
sar
mov
bswap
int
(bad)
es
sub
leave
jecxz
adc
clc
bswap
test
push
inc
mov
jecxz
mov
mov
sub
stos
and
cmp
and
xchg
and
(bad)
call
retf
gs
add
shr
mov
stos
jns
mov
sub
(bad)
adc
push
cmp
std
adc
sub
gs
shl
gs
in
dec
hlt
(bad)
call
jns
mov
sub
(bad)
inc
push
cmp
inc
std
(bad)
dec
test
gs
cmp
mov
ror
jnp
inc
push
ret
and
cmp
mov
sub
retf
mov
pop
fld
out
add
call
sub
xchg
outs
clc
jne
retf
xchg
mov
mov
inc
push
mov
inc
jnp
retf
gs
xor
retf
ror
loopne
retf
addr16
gs
and
xor
retf
fstp
mov
xor
shl
mov
cmp
xor
cmp
mov
std
mov
mov
inc
cmp
retf
fstp
mov
gs
dec
cmp
mov
add
inc
cld
and
xor
retf
fstp
mov
sub
int
shl
mov
cmp
xor
cmp
mov
std
mov
mov
inc
cmp
retf
fstp
mov
gs
dec
cmp
xor
cmp
sbb
gs
in
dec
in
(bad)
call
(bad)
in
or
mov
add
in
(bad)
mov
cmp
(bad)
mov
gs
add
jecxz
or
cmp
retf
and
jle
mov
sub
lea
dec
cmp
add
cmp
inc
mov
jecxz
mov
mov
inc
cmp
(bad)
cwde
cld
and
cmp
xchg
retf
gs
sub
add
gs
fstp
inc
push
gs
inc
push
mov
inc
push
mov
mov
or
mov
sub
(bad)
rcl
imul
movs
mov
mov
inc
cmp
retf
aam
mov
mov
gs
pop
in
mov
dec
mov
gs
loopne
lods
les
inc
adc
mov
retf
adc
lock
xchg
mov
inc
mov
gs
lds
call
xor
add
or
mov
sub
gs
lods
pop
mov
xor
mov
test
ret
xor
cwde
mov
inc
lds
bswap
sub
or
mov
imul
mov
dec
call
push
mov
add
bswap
sub
(bad)
(bad)
dec
cmp
test
imul
mov
gs
call
dec
imul
sar
add
xor
pop
mov
call
push
dec
cmp
inc
push
mov
adc
adc
inc
cmp
out
cmp
outs
in
das
rcl
enter
pushf
pop
test
xor
or
retf
jle
dec
mov
cmp
aas
xor
loope
inc
cmp
xchg
xor
jge
fs
loope
inc
cmp
push
cmp
xor
pop
fild
gs
ins
retf
pop
retf
inc
cmp
retf
cmp
test
mov
gs
mov
aas
lods
jns
xor
inc
shl
dec
lods
(bad)
call
cmp
call
mov
aaa
mov
ret
in
or
mov
rcr
mov
out
retf
call
xor
lock
and
gs
adc
mov
(bad)
call
jmp
xor
mov
dec
jp
(bad)
xor
mov
aas
out
pop
xchg
(bad)
call
les
or
retf
retf
mov
dec
dec
pushf
(bad)
call
les
xor
sub
call
std
push
cmp
mov
mov
gs
cmps
int
cmp
mov
sub
daa
retf
jmp
inc
cmp
out
sub
daa
retf
pop
mov
xor
rcr
mov
xor
jmp
retf
xor
ret
in
or
inc
mov
sti
mov
xchg
and
jns
ins
(bad)
(bad)
retf
and
gs
(bad)
retf
daa
mov
leave
mov
in
or
inc
add
ret
pop
int
cmp
mov
gs
mov
rcr
inc
add
lds
jns
cmp
mov
adc
cmp
idiv
push
arpl
cmp
(bad)
jnp
xchg
add
adc
jnp
icebp
jns
cmp
out
jnp
sbb
cmp
(bad)
jnp
lds
cmp
fidivr
imul
ds
add
push
xchg
cmp
call
cmp
dec
mov
sbb
cmp
fidivr
lds
cmp
ret
push
arpl
cmp
(bad)
sub
adc
test
imul
mov
ror
mov
or
ret
sahf
mov
dec
in
cwde
xor
inc
ret
in
or
mov
aaa
gs
xor
inc
cmp
xchg
das
retf
call
les
and
jp
and
xchg
les
pusha
push
mov
add
bswap
test
outs
retf
push
and
jp
and
gs
pusha
retf
mov
lds
call
les
xor
xor
daa
retf
loopne
inc
cmp
mov
mov
xor
mov
cld
rol
inc
inc
les
mov
pop
fs
out
inc
dec
js
inc
push
jecxz
add
call
xor
mov
push
call
cmp
retf
(bad)
and
push
loope
add
lea
cmp
sub
gs
cs
add
cwde
xor
lds
call
(bad)
call
cmp
dec
mov
call
cmp
push
push
push
call
les
(bad)
in
and
xchg
les
pusha
push
mov
add
bswap
test
outs
retf
push
(bad)
in
and
gs
popa
retf
call
dec
mov
and
mov
xor
bswap
sub
or
mov
inc
cmp
retf
ins
retf
mov
dec
inc
les
(bad)
gs
inc
cmp
mov
pop
pop
mov
push
mov
add
bswap
test
ins
retf
push
(bad)
in
gs
xor
test
mov
call
les
xor
in
or
mov
into
cwde
xor
stos
jns
inc
(bad)
xor
dec
cmp
test
or
inc
lds
call
mov
retf
ins
retf
fmul
mov
sbb
retf
or
mov
inc
cmp
retf
ins
retf
imul
mov
in
dec
movs
(bad)
call
les
aas
mov
or
aas
mov
add
inc
mov
gs
loopne
mov
push
dec
add
lea
cmp
std
cmp
jmp
mov
dec
xor
mov
cmp
and
cmp
leave
ret
dec
xor
cld
call
xor
mov
popf
mov
mov
jmp
mov
retf
loopne
mov
push
dec
add
(bad)
test
dec
std
cmp
jmp
mov
out
gs
dec
add
lea
jbe
gs
fs
mov
cmp
xor
ret
mov
mov
add
bswap
test
ins
retf
push
loop
jp
and
gs
retfw
loopne
mov
push
push
(bad)
xor
inc
les
into
jl
sbb
sub
bswap
sub
mov
jae
gs
dec
add
lea
inc
cmp
cmp
retf
call
les
mov
mov
cmp
dec
mov
call
cmp
dec
mov
call
cmp
push
push
push
call
les
jmp
gs
fs
pusha
push
mov
add
bswap
test
(bad)
retf
push
jmp
gs
addr16
loopne
mov
push
push
(bad)
xor
inc
les
into
jl
sbb
sub
bswap
sub
lea
cmp
add
(bad)
loop
cmp
dec
cmp
sar
inc
int
call
mov
pushf
(bad)
fwait
xor
les
xchg
in
or
fs
(bad)
xor
stos
jns
inc
(bad)
xor
dec
cmp
test
bswap
sub
bswap
sub
bswap
sub
gs
and
jb
cmp
(bad)
xor
cmps
mov
sub
fistp
mov
inc
(bad)
sar
mov
ds
adc
add
gs
jmp
les
mov
inc
mov
cmp
push
push
arpl
cmp
xor
inc
push
gs
(bad)
xor
sub
xchg
mov
sar
mov
ds
nop
aaa
mov
jnp
test
xor
cmp
pop
mov
call
(bad)
call
les
retf
call
xor
pop
enter
mov
inc
inc
cmp
mov
pop
retf
sar
mov
aas
gs
and
cmp
mov
inc
push
mov
inc
jnp
jmp
gs
xchg
xor
(bad)
in
in
gs
bswap
sub
call
icebp
popa
retf
push
dec
mov
and
mov
inc
mov
cmp
push
cmc
js
cmp
xor
inc
push
gs
(bad)
xor
sub
lea
mov
aas
gs
fs
cld
call
mov
pusha
mov
inc
cmp
xchg
push
retf
popa
mov
add
or
mov
sub
gs
rol
(bad)
out
pop
push
pusha
xor
inc
rol
xor
(bad)
call
dec
jno
xor
les
ret
pusha
retf
cmp
adc
aaa
ss
pop
mov
ret
pop
dec
dec
mov
cmp
leave
cld
out
(bad)
dec
push
gs
inc
cmp
call
xor
cld
out
push
xor
mov
gs
loope
add
adc
mov
cmp
inc
mov
add
in
jp
mov
icebp
jns
and
aas
gs
in
add
adc
mov
cmp
icebp
jne
retf
dec
outs
xor
inc
ror
inc
cmp
xor
in
or
add
adc
mov
cmp
icebp
jne
retf
dec
outs
xor
inc
rcr
inc
cmp
ja
cmp
cmps
mov
ds
cld
pop
jmp
and
xor
jmp
retf
outs
xor
inc
shl
inc
cmp
pusha
xchg
and
xor
jmp
retf
jbe
jne
aam
inc
rcr
leave
ret
dec
xor
cld
push
adc
lea
cmp
int3
retf
es
outs
add
in
xor
in
or
add
adc
retf
es
add
pop
jmp
retf
out
xlat
fs
and
leave
ret
fs
cld
pop
call
retf
out
xlat
inc
fwait
and
add
adc
retf
es
jmp
and
xor
xchg
and
jnp
cmp
int3
retf
es
add
ins
adc
call
dec
imul
ret
dec
xor
cld
cmp
cmp
xor
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
leave
fidiv
inc
mov
dec
jg
adc
sub
in
xor
imul
test
in
(bad)
mov
mov
lea
sbb
xor
cmp
or
out
pusha
dec
xchg
and
push
inc
xor
jmp
gs
fs
sub
xor
xor
rcl
fiadd
dec
retf
gs
inc
pop
pop
retf
gs
inc
pop
call
pop
ins
sti
add
xor
jb
inc
add
ins
pop
retf
inc
inc
into
mov
repz
xchg
mov
out
inc
stc
ins
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
inc
stos
cmc
retf
gs
