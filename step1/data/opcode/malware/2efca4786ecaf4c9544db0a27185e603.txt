add
add
add
add
add
add
add
add
add
add
adc
add
je
add
popa
repz
add
add
adc
add
sub
add
adc
add
sub
xor
add
add
add
add
add
sub
add
add
add
adc
add
add
add
sub
add
add
add
adc
add
add
sub
add
push
(bad)
sbb
add
adc
add
add
add
xor
pop
sldt
add
xor
add
add
adc
add
add
push
add
or
sub
or
sti
push
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
adc
add
sldt
add
xor
sub
add
add
add
sbb
add
sub
add
or
add
add
push
sub
ficom
or
sti
push
mov
add
add
add
fild
add
(bad)
sbb
sub
add
add
add
add
add
sbb
add
sldt
add
xor
add
add
adc
sub
add
add
add
sbb
sub
sub
push
mov
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
adc
add
add
xor
add
add
add
add
add
add
add
push
sub
fimul
sub
push
add
fiadd
add
(bad)
sbb
sub
add
adc
add
add
add
str
sldt
add
add
sbb
add
sub
xor
add
add
add
sbb
add
mov
add
sbb
sub
add
sub
jle
add
or
sub
ficom
or
sti
push
mov
add
sbb
sub
add
push
(bad)
sbb
sub
add
add
add
add
daa
daa
add
sldt
add
add
sbb
add
sub
xor
inc
add
add
add
adc
sub
add
or
mov
sub
or
push
sub
es
sub
push
sub
ficomp
or
loopne
sub
or
cmc
push
pop
mov
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
xor
add
sldt
add
xor
add
add
add
add
adc
mov
(bad)
lea
add
add
cmp
add
mov
jo
push
cmp
sub
add
add
add
or
sub
mov
js
add
sbb
js
add
sub
pop
adc
push
popa
or
xchg
popa
mov
sbb
outs
push
add
or
fidiv
or
sub
pop
sub
pop
(bad)
or
adc
add
pop
je
add
add
mov
lea
add
add
pop
add
or
add
or
adc
fimul
cmp
(bad)
dec
cmp
(bad)
dec
jl
(bad)
call
push
cmp
add
dec
das
add
add
or
mov
add
add
add
add
add
push
mov
add
add
add
in
add
(bad)
sbb
pop
sub
add
add
add
add
leave
leave
add
sldt
add
xor
mov
add
adc
add
jo
cmp
add
add
jb
add
jo
cmp
add
add
jb
add
jo
cmp
add
add
sbb
cmp
add
add
jb
add
jo
cmp
add
add
and
add
add
add
sub
add
or
outs
sbb
or
and
add
or
add
or
adc
sub
add
or
or
or
add
or
add
add
or
pop
outs
and
add
adc
jae
add
or
push
adc
pop
outs
and
push
adc
adc
outs
add
or
adc
or
adc
adc
push
jae
add
or
pop
adc
pop
(bad)
lea
add
add
or
pop
adc
adc
mov
sub
add
adc
adc
outs
sub
add
adc
outs
sub
add
sub
add
or
or
adc
outs
sub
add
adc
ffree
add
add
adc
(bad)
dec
call
pabsb
(bad)
call
or
sbb
cmp
(bad)
(bad)
call
or
sub
(bad)
call
adc
add
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
add
add
pop
mov
or
adc
mov
add
add
adc
mov
add
add
adc
mov
adc
adc
pop
or
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
inc
sbb
add
add
sbb
add
lahf
add
add
add
add
xor
movs
add
add
add
adc
cmp
add
add
push
cmp
add
add
sbb
add
jb
add
jo
or
sub
cdq
add
jo
or
add
or
cmp
sbb
cmp
push
cmp
add
add
add
jo
or
sub
repz
jo
or
add
or
cmp
sbb
or
jb
add
jo
add
or
sub
add
or
and
add
or
add
jo
sbb
or
jb
add
jo
or
sub
add
or
xor
adc
jb
add
jo
push
push
adc
jb
add
jo
or
add
sub
or
jb
add
jo
or
adc
add
xor
add
jae
add
or
pop
pop
or
or
pop
pop
outs
xor
add
pop
or
or
pop
pop
outs
xor
add
pop
or
or
pop
sub
pop
movlps
sbb
add
jb
add
jo
pop
adc
or
dec
push
jb
add
jo
xor
add
adc
adc
or
add
add
or
adc
or
jb
add
jo
or
add
or
add
or
fadd
add
push
sub
pop
push
adc
inc
adc
add
add
(bad)
call
(bad)
(bad)
jge
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
(bad)
jmp
inc
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
push
(bad)
(bad)
jge
(bad)
call
cmp
(bad)
(bad)
fisub
or
or
or
add
add
add
add
dec
sub
add
or
and
(bad)
call
or
and
(bad)
call
or
and
(bad)
dec
inc
(bad)
(bad)
call
or
inc
(bad)
(bad)
dec
push
add
add
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
sahf
and
add
sub
add
or
or
or
popw
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
add
push
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
push
(bad)
sbb
add
add
add
add
add
add
add
push
add
add
add
or
add
push
add
add
add
add
add
add
add
sldt
add
xor
add
add
add
add
adc
cmp
add
pop
push
cmp
add
sbb
add
jb
add
jo
or
sub
repz
jo
or
add
or
cmp
add
sbb
cmp
add
es
add
jo
or
sub
xchg
add
jo
add
or
cmp
add
add
sbb
or
add
jo
or
sub
cdq
add
jo
or
add
or
sbb
or
jb
add
jo
or
adc
add
xor
add
sub
add
or
or
add
jo
or
add
cmp
add
add
sub
sub
add
adc
sbb
adc
mov
fild
add
or
adc
add
adc
add
or
adc
add
adc
or
add
or
add
adc
adc
outs
cmp
or
or
add
loope
add
or
add
or
or
or
add
aas
add
or
add
or
or
or
add
adc
add
add
or
or
or
add
aas
add
or
add
or
or
jb
add
jo
or
add
or
push
adc
adc
aas
add
or
add
or
movlps
adc
in
add
or
add
or
adc
or
add
aas
add
or
add
or
adc
or
add
push
add
jo
add
or
adc
or
add
aas
add
or
add
or
adc
or
add
jo
cmp
jo
or
movs
add
jo
or
xor
add
or
adc
lea
add
adc
mov
adc
add
add
or
adc
add
adc
add
or
adc
add
adc
or
add
or
adc
sub
add
or
add
or
push
adc
adc
in
add
or
add
or
pop
adc
adc
aas
add
or
add
or
sbb
or
add
fild
jo
add
or
sbb
or
add
inc
add
or
sbb
or
lea
add
adc
mov
fild
add
or
adc
add
adc
add
or
adc
add
adc
or
push
adc
or
fucomp
add
add
pop
pop
pop
push
adc
inc
sbb
add
add
cld
(bad)
(bad)
(bad)
(bad)
inc
std
(bad)
jmp
std
(bad)
call
jmp
std
(bad)
dec
std
(bad)
(bad)
fscale
(bad)
(bad)
jmp
std
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
inc
(bad)
(bad)
(bad)
in
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
fisub
or
pop
adc
inc
add
add
add
add
imul
(bad)
fimul
aaa
add
or
test
(bad)
call
push
cmp
or
xchg
(bad)
dec
cmp
or
cmps
cld
(bad)
dec
sar
push
add
add
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
sahf
and
add
sub
add
or
pop
sub
sub
add
or
and
pop
or
adc
add
add
add
pop
mov
add
add
or
in
add
(bad)
sbb
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
sldt
add
xor
add
add
sbb
add
push
cmp
add
sbb
cmp
add
es
add
jo
add
jo
or
sub
repz
jo
or
jecxz
add
inc
add
or
cmp
or
add
sbb
cmp
or
add
jb
add
jo
or
sub
cdq
add
jo
or
add
or
cmp
add
sbb
pop
jb
add
jo
or
sub
cdq
add
jo
or
cmp
jo
or
movs
add
jo
or
inc
add
or
adc
adc
fild
add
or
add
or
inc
add
or
sbb
pop
sub
or
sbb
add
or
push
push
adc
sbb
xor
add
adc
adc
push
jb
add
jo
adc
pop
jb
add
jo
or
sub
adc
sbb
add
jo
or
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sub
add
or
nop
adc
adc
outs
inc
add
or
add
jo
inc
add
or
or
pop
adc
outs
inc
add
or
outs
dec
add
or
or
pop
adc
outs
inc
add
or
outs
xor
add
pop
or
pop
adc
outs
inc
add
or
outs
dec
add
or
or
outs
inc
add
or
outs
dec
add
or
push
adc
adc
outs
inc
add
or
outs
dec
add
or
movlps
adc
outs
dec
add
or
pop
adc
pop
adc
outs
dec
add
or
add
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
jb
add
jo
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
jb
add
jo
push
pop
adc
add
add
dec
add
or
pop
push
adc
jb
add
pop
pop
adc
adc
or
adc
adc
push
pop
mov
push
mov
fild
jo
adc
sbb
inc
add
or
adc
adc
adc
mov
fild
add
or
adc
sbb
jo
adc
push
jb
add
jo
or
adc
pop
or
add
adc
or
aas
add
or
add
or
add
or
sbb
pop
sbb
adc
adc
push
jb
add
add
or
mov
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sub
add
or
dec
add
or
rol
add
pop
sbb
pop
push
sub
add
sbb
xor
add
adc
adc
push
jb
add
add
or
mov
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
add
adc
cmp
add
sub
add
pop
sbb
pop
adc
lea
add
adc
adc
push
jb
add
adc
adc
mov
fild
add
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
add
adc
movs
add
jo
or
adc
sbb
or
add
or
add
or
sbb
pop
jb
add
pop
sbb
push
lea
add
adc
adc
push
jb
add
add
push
mov
or
fild
add
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
add
jb
push
add
adc
sbb
or
add
or
add
or
push
adc
adc
add
adc
adc
jb
push
add
or
adc
pop
adc
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
push
add
or
adc
sbb
aas
add
or
add
or
add
or
pop
adc
adc
lea
add
adc
adc
push
jb
push
add
or
adc
pop
adc
mov
cmp
jo
or
adc
sbb
add
jo
or
adc
sbb
push
add
or
adc
sbb
aas
add
or
add
or
add
or
and
pop
adc
inc
pop
add
aas
add
or
add
or
add
or
and
pop
adc
outs
push
add
or
and
pop
adc
outs
push
add
or
pop
push
mov
add
add
dec
add
or
pop
and
pop
adc
outs
push
add
or
and
add
add
dec
add
or
pop
daa
adc
adc
push
add
or
sub
pop
jb
pop
add
pop
pop
sub
pop
adc
jb
add
jo
push
add
or
pop
add
or
adc
sub
pop
adc
jb
add
jo
push
add
or
pop
add
or
adc
sub
pop
jb
add
pop
sub
pop
adc
adc
ins
pop
add
lea
add
add
adc
adc
sbb
xor
add
adc
adc
push
jb
add
add
or
mov
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
add
cmp
add
mov
adc
push
add
or
pop
add
or
or
sub
adc
mov
add
lea
add
add
adc
adc
adc
adc
mov
lea
add
add
adc
adc
sbb
adc
adc
push
adc
or
mov
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sub
add
or
adc
push
add
or
pop
add
or
sub
add
pop
adc
adc
adc
mov
add
lea
add
add
adc
adc
adc
adc
mov
lea
add
add
adc
adc
adc
fild
add
or
mov
movs
add
jo
or
inc
add
or
adc
push
add
or
pop
add
or
sub
add
pop
das
adc
adc
adc
rol
add
lea
add
add
adc
adc
sbb
adc
adc
pop
add
or
xor
pop
adc
adc
jmp
add
lea
add
add
adc
sub
add
es
xor
pop
adc
adc
jmp
add
lea
add
add
adc
sub
add
fisttp
add
adc
pop
pop
push
adc
inc
xor
add
add
add
mov
idiv
(bad)
std
idiv
jmp
clc
(bad)
jmp
(bad)
(bad)
jp
(bad)
inc
clc
(bad)
push
clc
(bad)
inc
stc
(bad)
jmp
stc
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
push
(bad)
inc
stc
(bad)
call
stc
(bad)
(bad)
mov
stc
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
(bad)
js
(bad)
jmp
sti
(bad)
dec
(bad)
jmp
cld
(bad)
call
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
(bad)
sti
cld
(bad)
dec
std
(bad)
dec
std
(bad)
call
std
(bad)
jmp
std
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
call
std
(bad)
jmp
(bad)
inc
(bad)
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fisub
adc
adc
add
add
add
(bad)
(bad)
(bad)
fimul
aaa
add
or
popf
idiv
call
adc
call
pop
cmp
or
(bad)
idiv
call
pop
cmp
idiv
call
or
out
(bad)
push
add
add
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
or
pushf
and
add
sub
add
or
push
sub
sub
add
or
mov
sbb
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
add
add
adc
mov
add
add
add
push
(bad)
sbb
inc
xor
add
add
add
add
add
add
or
add
mov
add
(bad)
or
add
or
add
add
push
add
sbb
add
sub
xor
inc
add
add
add
sub
add
push
sub
sub
jae
add
push
sbb
out
push
push
sub
es
or
lock
adc
icebp
pop
lea
add
add
pop
push
push
mov
add
fiadd
sub
adc
add
add
add
add
sldt
add
add
adc
add
sub
add
sbb
add
sub
xor
add
cmp
sbb
sub
push
cmp
add
inc
add
or
cmp
add
push
cmp
add
cmc
pop
add
cmp
add
adc
jb
pop
add
push
sbb
pop
adc
adc
push
sub
add
or
cs
or
adc
jb
add
jo
or
sub
repz
jo
or
add
or
or
jb
add
jo
or
sub
cdq
add
jo
or
add
or
or
or
pop
jb
or
jo
or
or
add
sub
pop
or
pop
and
pop
add
or
or
or
jo
pop
add
or
add
or
adc
push
adc
push
mov
add
add
dec
add
or
pop
movlps
push
adc
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
add
add
dec
add
or
pop
push
adc
push
mov
add
add
dec
add
or
pop
pop
adc
push
adc
jo
or
mov
movs
add
jo
or
inc
add
or
sub
add
pop
mov
add
add
sub
add
sub
pop
sbb
pop
push
mov
add
add
dec
add
or
pop
sbb
pop
push
mov
add
add
dec
add
or
pop
sbb
pop
push
mov
add
add
dec
add
or
pop
sbb
pop
push
mov
add
add
dec
add
or
pop
sbb
pop
pop
adc
pop
push
adc
jb
or
jo
or
xchg
add
add
or
add
or
or
or
jo
or
add
adc
pop
and
pop
push
mov
add
add
dec
add
or
pop
and
pop
adc
sub
sub
pop
and
pop
pop
and
add
add
dec
add
or
pop
adc
push
adc
jo
add
or
sub
add
sub
sub
sub
pop
pop
sub
pop
jb
add
jo
or
sub
pop
jb
add
jo
or
sub
fisttp
add
or
xor
or
xor
add
adc
pop
sub
add
add
or
or
adc
pop
pop
sub
add
es
das
adc
push
or
xor
pop
jle
add
or
pop
xor
pop
push
mov
add
add
dec
add
or
pop
xor
pop
adc
jb
add
jo
add
or
or
xor
pop
adc
jb
or
jo
bound
add
je
add
sbb
adc
xor
pop
adc
jb
or
jo
or
or
add
adc
pop
xor
es
aaa
adc
pop
mov
add
add
dec
add
or
pop
cmp
pop
sub
add
push
pop
cmp
pop
sub
add
outs
arpl
add
adc
clc
or
jo
add
or
adc
outs
add
or
cmp
pop
adc
clc
or
jo
add
or
add
or
nop
adc
adc
sub
pop
cmp
pop
adc
add
or
cmp
add
pop
cmp
adc
pop
sub
add
pop
adc
sbb
adc
adc
jle
add
or
adc
mov
add
add
mov
add
add
or
add
push
es
aas
adc
sub
add
push
pop
inc
adc
and
daa
add
sub
add
pop
inc
adc
sub
add
push
sub
add
fisttp
push
pop
pop
push
adc
inc
inc
add
add
add
add
cli
(bad)
(bad)
cli
cli
(bad)
dec
sti
(bad)
jmp
sti
(bad)
jmp
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
jmp
dec
sti
(bad)
jmp
sti
(bad)
inc
sti
(bad)
call
sti
(bad)
call
sti
(bad)
jmp
sti
(bad)
push
sti
(bad)
inc
cld
(bad)
call
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
inc
(bad)
inc
cld
(bad)
jmp
cld
(bad)
inc
cld
(bad)
inc
cld
(bad)
inc
cld
(bad)
jmp
cld
(bad)
jmp
cld
(bad)
(bad)
clc
cld
(bad)
dec
std
(bad)
call
std
(bad)
call
std
(bad)
call
std
(bad)
jmp
std
(bad)
(bad)
aas
std
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
call
(bad)
(bad)
jle
(bad)
dec
std
(bad)
jmp
std
(bad)
(bad)
mov
std
(bad)
jmp
std
(bad)
(bad)
cld
std
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
ds
(bad)
call
(bad)
jmp
(bad)
push
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fisub
pop
adc
adc
add
add
add
(bad)
(bad)
(bad)
fimul
aaa
add
or
sar
(bad)
call
adc
call
pop
cmp
cli
(bad)
dec
cmp
cli
(bad)
call
pop
cmp
cli
(bad)
call
or
(bad)
(bad)
push
add
add
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
or
popf
and
add
sub
add
or
push
sub
sub
add
or
int3
add
add
sbb
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
add
add
adc
mov
add
add
add
add
push
(bad)
sbb
add
add
add
add
add
add
push
add
add
or
add
push
add
add
add
add
xchg
add
add
int3
add
add
add
add
xor
add
add
push
add
adc
and
and
daa
sub
sub
stc
ror
add
sbb
daa
sub
xor
movs
or
add
or
fldcw
sbb
add
sub
add
(bad)
sub
add
push
sub
or
rol
sub
sub
add
sub
sub
add
sub
or
int3
push
mov
add
pop
or
add
loope
add
(bad)
sbb
sub
add
add
add
add
add
push
push
add
sldt
add
xor
add
add
sldt
adc
or
jo
xor
add
jb
or
jo
xor
add
cmp
add
add
cmp
add
jb
or
jo
cmp
add
jb
or
jo
cmp
add
cmp
inc
add
add
or
jo
aas
add
add
or
jo
push
add
push
sub
add
sub
pop
jb
or
jo
push
add
push
jb
or
jo
push
add
push
sub
add
sub
add
jo
add
ror
jo
jb
or
jo
push
add
push
jb
or
jo
push
add
push
sub
add
adc
jb
or
jo
jb
or
jo
jb
or
jo
jb
or
jo
push
add
push
jb
or
jo
push
add
push
sub
or
push
(bad)
jnp
add
add
outs
dec
add
push
sub
add
jp
pop
push
outs
push
add
push
sbb
test
inc
adc
pop
adc
cmp
add
add
sub
adc
adc
or
add
sub
add
jp
or
add
pop
inc
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
push
add
push
sbb
cmp
add
adc
push
adc
adc
call
adc
add
daa
add
add
add
add
adc
add
or
add
add
add
outs
push
add
push
es
cmp
add
add
or
add
add
add
add
inc
add
add
or
add
push
cmp
add
cmp
add
add
nop
add
add
pop
add
or
add
add
add
or
add
add
add
outs
push
add
push
es
add
add
or
add
add
add
add
inc
add
add
or
add
push
and
pop
add
or
or
add
add
add
add
inc
add
add
or
add
push
fimul
sub
add
or
mov
add
add
pop
add
or
or
add
add
add
add
inc
add
add
or
add
push
adc
(bad)
jnp
add
add
add
inc
add
add
or
add
push
sub
add
or
add
adc
and
pop
add
or
or
add
add
add
push
outs
inc
add
push
adc
or
jo
imul
add
add
add
or
add
add
add
outs
push
add
push
sub
adc
add
add
or
add
add
add
outs
push
add
push
sub
add
adc
cmp
(bad)
call
mov
add
add
dec
add
or
(bad)
jnp
add
add
sub
add
outs
push
add
or
mov
add
add
dec
add
or
sub
or
add
or
mov
add
add
dec
add
or
fimul
and
or
adc
aaa
add
or
add
sbb
push
add
push
cmp
cld
(bad)
jmp
push
add
push
cmp
cld
(bad)
jmp
push
add
sub
sar
call
push
cmp
push
add
push
cmp
push
add
push
cmp
pop
add
sub
mov
or
mov
(bad)
jmp
push
add
push
cmp
push
lea
add
add
adc
adc
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
mov
add
add
adc
mov
adc
adc
pop
or
add
add
adc
mov
add
mov
adc
mov
adc
mov
adc
mov
add
add
adc
mov
add
add
add
adc
pop
adc
mov
add
mov
add
das
add
add
add
push
(bad)
sbb
add
add
add
add
add
icebp
add
add
add
sub
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
adc
sub
sub
sub
inc
sub
and
je
add
add
inc
sub
dec
outs
ins
add
or
outs
outs
add
or
pop
outs
outs
add
or
ficomp
outs
jo
add
sub
ins
add
or
ret
add
or
mov
or
mov
sub
or
mov
sub
je
add
sub
add
sub
sbb
or
add
add
add
or
jle
add
or
sbb
sti
sbb
clc
ficom
push
mov
add
pop
or
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
add
xchg
xchg
add
sldt
add
xor
arpl
add
adc
add
push
sub
sub
sub
push
sub
sub
fiadd
and
and
and
and
xor
push
sub
push
sub
sub
add
aad
sbb
add
sub
or
fadd
sub
or
fld
sub
or
fild
mov
add
add
mov
add
add
sub
add
push
(bad)
sbb
add
or
cld
add
adc
add
add
add
add
add
add
xor
add
add
adc
rol
add
add
jb
or
jo
rol
add
or
jo
rol
add
xlat
add
add
fadd
add
or
jo
fld
add
or
add
add
fiadd
add
or
or
jo
push
add
push
jb
or
add
push
sub
add
sub
adc
or
jo
push
add
push
jb
or
add
push
sub
add
sub
push
jb
or
jo
push
add
push
jb
push
add
push
add
push
sub
add
sub
push
push
sub
add
push
add
push
jb
push
add
push
add
push
sub
add
sub
or
or
jo
push
add
push
jb
push
add
push
add
push
sub
add
adc
push
cmp
(bad)
push
or
jo
push
add
push
jb
or
jo
push
add
push
sub
or
xor
add
or
pop
call
add
add
add
add
add
add
add
add
add
add
call
or
adc
adc
add
or
jbe
add
adc
adc
(bad)
adc
push
jl
add
add
adc
adc
rcl
add
add
data16
or
ja
add
sub
add
jge
add
add
sbb
adc
adc
jge
add
add
sub
add
sub
and
add
sub
add
or
or
add
or
or
add
or
add
or
sbb
add
or
clts
jl
add
add
sub
add
sub
add
jp
add
add
or
sbb
add
(bad)
sub
add
adc
and
das
add
add
push
adc
push
and
add
add
push
add
add
or
add
push
outs
add
push
sub
add
jp
push
pop
sub
adc
push
jl
add
add
or
add
pop
push
(bad)
adc
add
push
sub
add
jp
sbb
adc
push
jl
add
add
or
add
adc
push
push
cs
jae
add
or
add
(bad)
sub
add
adc
adc
adc
(bad)
sub
add
jge
add
add
adc
adc
adc
jl
add
add
or
add
sbb
push
and
xor
add
inc
outs
inc
add
push
jge
add
add
sub
pop
add
add
xor
pop
adc
adc
adc
jl
add
add
or
add
adc
and
xor
add
inc
outs
inc
add
push
jge
add
add
adc
add
add
xor
jae
add
or
adc
jl
add
add
or
add
adc
add
add
add
add
add
or
xor
add
sub
add
jp
sbb
clc
add
add
adc
sbb
sub
add
adc
push
adc
cmp
add
(bad)
sub
add
adc
adc
(bad)
sub
add
adc
adc
(bad)
sub
add
adc
adc
push
cs
adc
pop
ficom
(bad)
lea
add
add
and
add
push
adc
mov
or
adc
jl
add
add
or
add
adc
add
add
and
adc
adc
mov
add
push
sub
add
jp
sbb
sbb
adc
adc
adc
pop
fidivr
jo
(bad)
call
adc
add
add
jge
add
adc
adc
jl
add
add
or
add
pop
push
(bad)
adc
adc
xor
add
sub
add
jp
add
(bad)
sub
add
adc
adc
or
adc
sbb
add
add
push
pop
sub
adc
add
add
adc
sahf
adc
push
jl
add
add
or
add
push
outs
cmp
add
outs
push
push
push
jae
add
or
sub
adc
and
add
jae
add
or
add
or
add
or
mov
add
add
dec
add
or
push
mov
add
add
dec
add
or
ficom
adc
adc
add
or
add
and
add
push
adc
add
or
adc
add
jae
add
or
add
or
and
and
outs
add
outs
add
or
movaps
add
or
adc
sub
add
or
nop
add
or
adc
(bad)
add
add
pop
adc
ffree
add
add
add
push
cmp
sti
(bad)
dec
cmp
(bad)
jmp
push
add
push
cmp
(bad)
jmp
push
add
push
cmp
(bad)
jmp
or
pop
sti
(bad)
call
add
sbb
push
add
push
cmp
push
add
push
cmp
push
add
sub
sbb
(bad)
call
lea
add
add
and
mov
mov
add
add
mov
mov
add
add
add
adc
adc
adc
add
add
or
adc
mov
adc
mov
adc
mov
adc
das
add
add
adc
push
adc
mov
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
add
add
adc
add
adc
mov
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
mov
adc
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
adc
mov
add
mov
adc
adc
adc
push
(bad)
sbb
sub
inc
xor
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
xor
add
add
add
add
sub
sub
sub
sub
add
sub
sub
add
or
ins
add
or
add
or
sub
sub
add
or
sub
fiadd
sbb
and
pop
add
sub
or
ret
add
or
cmc
sub
add
sub
add
fld
add
(bad)
sbb
add
add
add
add
add
adc
pop
sldt
add
add
add
or
push
add
sbb
add
sub
add
sbb
add
sub
xor
add
add
add
add
sub
pop
sub
sbb
push
mov
add
add
aaa
es
mov
add
add
xor
or
add
push
add
add
xor
add
add
sub
jnp
add
add
daa
fidiv
add
or
ret
add
or
mov
or
ret
add
or
les
sub
add
int
sub
sub
add
push
sub
add
fld
add
(bad)
sbb
add
add
add
add
add
gs
sldt
add
xor
add
add
add
add
sub
jnp
add
add
push
add
add
or
add
push
sub
adc
sub
sub
add
push
sub
add
fld
add
(bad)
sbb
add
add
add
add
and
add
sldt
add
xor
add
add
adc
or
or
sub
fisub
sldt
sub
lock
icebp
push
mov
add
add
jno
add
add
fiadd
add
(bad)
sbb
add
pop
sub
add
add
adc
add
add
add
pop
add
sldt
add
xor
add
add
push
sub
add
sub
push
push
sub
pop
sub
sub
pop
jnp
add
add
sub
pop
sub
ror
add
sbb
data16
or
test
add
sub
add
or
push
sub
add
or
adc
sub
data16
or
lods
sub
add
cmp
cmps
or
movs
sub
popf
(bad)
(bad)
dec
sub
sub
mov
add
sbb
mov
add
or
mov
add
add
jno
add
add
loope
add
(bad)
sbb
add
add
add
add
add
test
add
xor
rol
add
adc
and
add
fild
add
jb
add
jo
fadd
add
jb
add
jo
fld
add
sbb
fiadd
add
jb
add
jo
xlat
add
add
add
add
push
cmp
add
add
cmp
add
add
fld
add
cmp
add
add
add
or
or
add
or
adc
sub
add
or
adc
adc
adc
or
or
or
pop
push
pop
outs
and
add
adc
jae
add
or
adc
adc
outs
and
adc
push
adc
or
add
adc
adc
or
jae
add
or
push
mov
lea
add
add
sysret
adc
push
adc
mov
or
or
add
or
outs
sub
add
sub
add
or
movhps
outs
sub
add
adc
adc
adc
adc
cmp
(bad)
(bad)
call
or
sbb
add
and
(bad)
call
or
call
or
and
(bad)
call
pop
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
call
or
and
(bad)
jmp
add
or
sbb
(bad)
call
adc
add
add
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
add
add
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
inc
sbb
add
add
add
add
add
add
add
pop
add
push
jb
(bad)
jo
pop
add
push
mov
add
add
xchg
add
sub
adc
add
sbb
add
push
add
adc
(bad)
jo
mov
add
push
sub
es
outs
mov
add
sub
sub
sbb
(bad)
jo
add
xor
add
add
pop
add
adc
sub
jle
add
or
pop
add
push
outs
mov
add
push
sub
es
sub
add
sub
add
outs
mov
add
push
sub
es
sub
xor
push
sub
fidivr
push
sub
(bad)
jo
outs
mov
add
je
add
add
sub
sub
es
push
sub
ficomp
or
mov
sub
or
retf
or
call
or
out
sub
es
fiadd
or
add
add
adc
add
add
add
add
inc
jb
(bad)
jo
pop
add
push
sub
add
or
add
add
mov
add
pop
add
push
sub
add
or
add
add
xor
add
add
sbb
add
jae
add
or
sub
sbb
add
outs
mov
add
sub
push
add
outs
pop
add
push
sub
es
sub
sub
push
sub
push
outs
add
add
push
sub
sub
or
lds
clc
push
pop
add
add
add
add
loope
add
(bad)
sbb
sub
add
sbb
add
add
add
add
add
add
inc
inc
add
sldt
add
xor
add
add
sbb
add
jae
add
or
sub
sbb
add
outs
mov
add
sub
push
add
outs
pop
add
push
sub
es
sub
sub
push
sub
push
outs
add
add
push
sub
sub
or
lds
clc
push
pop
add
add
add
add
loope
add
(bad)
sbb
sub
add
sbb
add
add
add
add
add
add
inc
inc
add
sldt
add
xor
sbb
add
sbb
add
add
adc
sub
add
push
sub
fimul
or
sti
add
fld
add
(bad)
sbb
sub
adc
add
add
add
adc
or
add
add
xor
add
push
add
sbb
add
jae
add
push
push
cmp
add
add
movs
add
add
add
push
push
cmp
add
sub
cmp
add
adc
sub
mov
pop
jg
pop
sbb
add
xchg
add
or
adc
sub
bound
add
xchg
add
or
or
adc
sub
bound
add
xchg
add
or
fs
outs
push
cmp
add
add
and
add
add
and
add
cmp
es
cmp
add
add
adc
adc
push
adc
add
sbb
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
fst
push
adc
and
add
xchg
add
push
push
pop
adc
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
or
xchg
add
push
push
adc
outs
xchg
add
push
push
outs
cwde
add
or
or
push
outs
xchg
add
push
push
add
add
sub
add
or
(bad)
jo
sbb
or
adc
mov
xchg
add
push
push
push
outs
xchg
add
push
push
adc
push
adc
mov
cdq
add
or
add
add
push
sub
and
add
add
adc
pop
adc
outs
push
or
or
xor
push
adc
push
adc
cdq
add
or
outs
data16
push
sub
pop
outs
add
push
sub
and
add
add
adc
push
push
adc
push
xor
push
adc
cdq
add
or
outs
add
push
sub
pop
outs
arpl
add
adc
push
and
add
outs
xchg
add
push
push
pop
adc
xchg
add
push
push
pop
adc
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
or
xchg
add
push
push
adc
outs
xchg
add
push
push
adc
imul
add
add
push
adc
mov
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
adc
push
adc
mov
cdq
add
or
and
add
add
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
pop
outs
xchg
add
push
push
pop
outs
xchg
add
push
push
pop
adc
mov
outs
xchg
add
push
push
pop
push
adc
mov
push
addps
xchg
add
push
push
push
outs
xchg
add
push
push
adc
push
outs
call
punpckhwd
add
push
cmp
pop
inc
adc
add
push
and
jge
outs
xchg
add
push
push
add
add
push
adc
cmp
add
add
(bad)
call
add
mov
adc
fwait
add
or
adc
add
adc
adc
adc
mov
jl
add
push
outs
cwde
add
or
adc
push
outs
xchg
add
push
push
adc
mov
xchg
add
push
jae
add
push
adc
adc
adc
outs
add
push
sub
and
add
add
adc
adc
adc
push
adc
adc
adc
adc
or
adc
add
push
sub
adc
outs
add
push
sub
and
add
add
adc
adc
adc
outs
push
pop
adc
push
xor
adc
push
adc
outs
cdq
add
or
adc
add
push
sub
push
outs
cwde
add
or
sbb
adc
outs
pushf
add
or
adc
outs
arpl
add
imul
adc
outs
pushf
add
or
adc
adc
adc
add
(bad)
(bad)
cmp
sbb
dec
push
and
jge
outs
xchg
add
push
add
adc
sub
add
adc
add
push
sub
add
adc
adc
adc
push
adc
mov
popf
add
or
sbb
adc
push
adc
mov
cdq
add
or
pop
adc
sub
adc
outs
add
add
fadd
sbb
dec
push
and
jge
outs
xchg
add
push
add
adc
sub
add
adc
add
add
adc
push
adc
imul
push
push
adc
push
adc
mov
cdq
add
or
or
sbb
outs
add
add
fadd
outs
sahf
add
or
outs
sub
add
push
outs
lahf
add
or
and
inc
or
cmp
(bad)
sti
(bad)
dec
xchg
sti
(bad)
dec
jmp
mov
jmp
(bad)
call
add
jmp
(bad)
call
pop
jb
(bad)
jo
pop
outs
mov
add
or
(bad)
sbb
and
and
push
add
add
and
add
and
and
push
mov
mov
mov
add
mov
mov
add
mov
add
adc
sbb
add
add
push
mov
add
mov
pop
mov
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
das
add
add
adc
push
adc
mov
add
add
adc
mov
add
mov
adc
mov
add
add
adc
mov
adc
mov
add
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
mov
add
add
adc
mov
add
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
sbb
and
push
adc
mov
adc
mov
adc
mov
add
add
adc
pop
and
adc
pop
and
mov
add
push
(bad)
sbb
and
inc
add
add
add
cmc
add
add
add
add
add
or
add
add
add
add
add
inc
add
add
add
add
add
or
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
pop
adc
add
add
sub
add
or
jae
add
push
jge
add
add
add
add
add
jg
add
jge
add
add
or
sub
add
push
(bad)
sbb
add
add
adc
add
add
add
sub
or
add
add
xor
add
add
add
add
add
add
add
sub
or
sti
add
fld
add
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sldt
add
xor
add
add
add
sub
add
add
or
jge
add
add
or
sub
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sldt
add
xor
add
add
add
jnp
add
add
push
xor
jnp
add
add
mov
add
push
sub
es
sub
and
or
sbb
fimul
or
jmp
sub
add
fld
add
(bad)
sbb
sub
add
add
add
add
xor
add
sldt
add
xor
add
add
add
jnp
add
add
mov
add
push
sub
fimul
or
sti
add
fld
add
(bad)
sbb
sub
add
adc
add
add
add
add
sldt
add
xor
add
add
add
add
add
jnp
add
add
push
sub
es
outs
xchg
add
sub
add
sub
add
push
(bad)
sbb
add
adc
add
add
add
add
add
xor
add
add
add
adc
push
cmp
add
add
add
add
add
pop
pop
cmp
add
add
add
add
add
push
pop
outs
pop
add
sbb
or
add
es
or
cmp
add
add
push
jge
add
add
or
cmp
add
add
pop
push
sub
add
add
add
add
push
cmp
jnp
add
add
jnp
add
add
pop
push
inc
push
inc
add
add
add
pop
push
inc
push
inc
outs
xchg
add
sub
add
add
adc
or
pop
pop
adc
add
jnp
add
add
adc
sub
and
pop
sub
push
add
add
add
mov
add
gs
sub
add
add
add
pop
or
add
push
adc
or
cmp
(bad)
(bad)
call
add
add
xor
add
adc
add
add
and
(bad)
inc
jnp
add
add
sbb
adc
(bad)
inc
jnp
add
add
mov
add
add
push
jge
add
add
cld
(bad)
(bad)
dec
pop
pop
adc
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
jecxz
(bad)
dec
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
jecxz
add
(bad)
sbb
add
add
add
dec
add
add
add
add
add
add
xor
pop
add
add
add
adc
add
add
pop
maxps
or
push
sub
add
sbb
maxps
sti
pusha
jle
add
add
push
arpl
maxps
xor
add
pop
or
xchg
pusha
push
sub
or
sti
add
fld
add
(bad)
sbb
sub
add
add
add
add
dec
dec
add
sbb
add
pushf
add
add
add
adc
adc
and
add
cmp
add
es
add
adc
and
add
cmp
add
add
xor
add
push
add
add
cmp
add
push
add
add
cmp
cmp
sub
jle
add
add
pop
xor
pop
push
bound
imul
sub
jle
add
add
and
cld
add
add
push
pushf
push
sbb
add
add
sub
jle
add
add
and
add
add
pop
sbb
add
popf
jle
add
add
and
retf
add
add
pop
or
add
shr
sub
add
add
and
(bad)
(bad)
inc
pop
pop
or
imul
sub
add
and
fwait
add
add
sbb
add
add
int
push
jle
add
add
pop
test
pop
push
bound
imul
cmp
and
pushf
push
and
add
add
ficomp
push
lea
add
cmp
add
push
lea
add
add
push
or
pop
jle
add
add
push
pop
or
imul
sub
add
sbb
pop
push
xor
fidivr
sub
test
mov
mov
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
inc
mov
add
add
fld
add
(bad)
sbb
inc
sbb
add
add
add
add
add
xor
add
add
add
sub
add
or
add
add
add
add
push
add
add
add
add
pop
(bad)
jbe
add
jge
add
add
add
push
pop
pop
(bad)
jbe
add
jge
add
add
add
adc
sbb
push
jge
add
add
and
inc
add
lea
add
jge
add
add
and
inc
add
lea
add
add
add
add
or
add
fiadd
add
(bad)
sbb
add
add
add
add
push
add
add
sldt
add
xor
add
add
add
add
add
sub
add
jge
add
add
sub
cmp
add
or
sub
add
push
(bad)
sbb
add
adc
add
add
add
push
add
sldt
add
xor
imul
add
add
adc
sub
add
inc
add
xor
and
sub
push
sub
add
push
sub
sub
push
sbb
sub
arpl
sbb
add
sub
push
add
sub
or
int3
or
xlat
or
fst
add
jecxz
sub
push
mov
add
add
add
fild
add
(bad)
sbb
sub
add
add
add
add
push
push
add
add
add
xor
dec
add
add
add
adc
sub
and
sub
sbb
sub
and
pop
arpl
sub
das
call
sub
fisub
or
fimul
sub
adc
sub
or
icebp
push
mov
add
add
add
fild
add
(bad)
sbb
sub
add
adc
add
add
add
cmp
adc
add
add
xor
and
add
and
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
sbb
add
add
add
jnp
add
add
inc
add
add
add
add
pop
sbb
cmp
es
add
add
jnp
add
add
inc
add
add
pop
sbb
cmp
es
add
add
sbb
push
cmp
es
or
sub
sub
sbb
add
add
add
jnp
add
add
inc
add
add
xor
add
xchg
xchg
sbb
add
push
push
pop
and
push
add
rol
jnp
add
add
jnp
add
add
jle
add
add
add
add
jnp
add
add
jle
add
ficom
jns
add
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
inc
mov
add
add
add
fild
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
sldt
add
xor
add
add
push
add
adc
cmp
sbb
sti
add
add
cmp
add
add
jnp
add
add
xchg
and
add
add
cmp
add
add
add
add
add
xchg
push
cmp
add
add
or
fld
add
cmp
pop
sub
add
push
cmp
add
add
add
add
add
push
cmp
add
add
es
sub
add
add
pop
adc
add
xor
sbb
jnp
add
add
pop
adc
pop
pop
bound
pop
pop
adc
lea
add
add
sub
add
adc
add
add
push
adc
push
sub
add
xor
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
lea
add
sub
jnp
add
add
outs
ja
add
push
pop
and
push
add
add
add
and
(bad)
inc
jnp
add
add
add
add
outs
ja
add
sbb
ficom
cmp
(bad)
(bad)
dec
cmp
(bad)
dec
sbb
cmp
(bad)
(bad)
dec
jmp
add
push
cmp
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
add
sub
add
push
(bad)
sbb
add
add
xor
add
xor
add
add
add
add
add
xor
add
add
add
sub
add
add
add
add
sub
pop
sbb
sub
es
add
add
sub
es
sub
add
add
adc
add
add
add
pushw
sub
es
add
add
add
sbb
es
sub
es
lea
add
sub
push
sub
sub
outs
mov
add
sub
outs
mov
add
sub
sub
push
sub
add
add
das
add
add
add
add
add
add
loope
add
(bad)
sbb
add
adc
add
add
add
add
add
xor
add
add
adc
jnp
add
add
inc
add
add
add
add
(bad)
popa
add
add
add
pop
push
add
jnp
add
add
cmp
add
add
add
cmp
add
add
add
jnp
add
add
cmp
add
add
add
jnp
add
add
cmp
add
add
add
cmp
sbb
add
pop
adc
sub
add
add
add
inc
add
add
xor
add
xchg
xchg
push
xor
pop
pop
or
pop
pop
or
push
xor
pop
push
push
sbb
add
add
add
jl
add
pop
add
add
add
jl
add
pop
add
add
add
jl
add
pop
add
add
add
or
jnp
add
add
push
adc
and
add
add
add
inc
add
add
add
jle
add
add
add
pop
pop
or
adc
add
push
add
add
xlat
push
adc
jnp
add
add
inc
add
add
add
add
add
adc
adc
or
xor
or
push
xor
add
arpl
adc
add
add
push
fnsave
add
add
or
push
add
add
add
push
add
add
sub
pop
pop
sbb
add
push
add
add
add
cmp
add
cmp
js
add
add
add
add
add
add
aas
add
add
js
add
add
jo
add
add
ins
add
push
fucom
add
add
jnp
add
add
push
add
add
sub
pop
pop
sbb
add
push
add
sub
add
add
jo
add
add
ins
add
push
fnsave
jnp
add
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
dec
cmp
(bad)
call
or
adc
adc
push
push
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
add
mov
mov
mov
add
add
add
add
push
add
add
add
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
sldt
add
xor
add
add
sbb
sub
add
add
add
add
add
add
inc
sbb
push
sub
sbb
fimul
or
clc
add
fld
add
(bad)
sbb
sub
adc
add
add
add
and
or
add
add
xor
add
add
adc
sub
add
add
add
jnp
add
add
popf
add
add
add
and
add
push
sub
es
pop
jge
add
add
add
pushf
add
add
add
inc
add
add
(bad)
popa
add
add
add
pop
push
add
sub
sbb
add
jae
add
push
sub
es
sub
sub
mov
add
add
add
fild
add
(bad)
sbb
sub
add
adc
add
add
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
jnp
add
add
push
add
add
and
add
push
cmp
pop
pop
jge
add
add
add
pop
rcr
ins
add
push
push
cmp
add
add
add
inc
add
add
(bad)
popa
add
add
add
pop
push
add
and
add
add
push
push
and
push
add
add
and
sbb
jge
add
add
add
pop
sub
add
push
sub
add
add
add
inc
add
add
(bad)
popa
add
add
add
pop
push
add
sbb
adc
and
add
sbb
pop
pop
jge
add
add
sub
add
push
sub
fidivr
or
dec
(bad)
(bad)
dec
cmp
(bad)
dec
sub
mov
add
add
mov
add
add
mov
add
add
add
mov
add
add
loop
add
(bad)
sbb
sub
add
adc
add
add
add
out
sldt
add
xor
add
add
add
add
sub
add
or
add
add
add
add
add
push
add
inc
add
add
add
popa
add
add
add
add
push
add
das
add
add
add
add
sbb
add
das
add
add
add
add
das
add
add
loope
add
(bad)
sbb
add
add
add
push
add
aaa
add
add
add
xor
dec
add
add
add
add
inc
add
add
xor
add
jnp
add
add
xchg
and
inc
add
jnp
add
add
xchg
sbb
or
es
sub
ficom
push
sub
add
mov
add
add
fiadd
add
(bad)
sbb
add
add
add
add
cmp
add
sldt
add
xor
and
add
add
add
push
sub
sbb
add
jge
add
add
add
inc
add
add
sub
fimul
add
add
fild
add
(bad)
sbb
add
add
add
add
sbb
add
sldt
add
xor
add
add
add
add
add
add
add
das
add
add
cmp
add
add
push
sbb
add
add
jnp
add
add
imul
add
push
cmp
sbb
sub
push
or
sahf
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
cmp
or
sub
pop
pop
push
cmp
sbb
or
sub
add
add
(bad)
push
sbb
jne
add
sub
jnp
add
add
xchg
adc
add
sub
push
xor
add
add
add
push
adc
pop
xchg
sub
add
popf
push
adc
pop
(bad)
das
add
add
add
pop
adc
add
pop
pop
pop
bound
das
add
add
pop
pop
or
add
add
scas
fiadd
cmp
(bad)
(bad)
dec
cmp
cmp
(bad)
dec
cmp
(bad)
dec
jne
(bad)
dec
inc
pop
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
sub
add
push
(bad)
sbb
add
add
add
add
cmc
cmc
add
sldt
add
xor
add
add
add
add
add
add
imul
add
mov
pop
push
cmp
add
add
push
pop
pop
sbb
cmp
add
add
push
push
cmp
add
add
push
push
cmp
add
add
sub
add
add
add
push
sahf
or
pop
adc
add
or
jnp
add
add
in
lea
add
add
cmp
add
add
adc
pop
pop
push
sahf
push
pop
pop
adc
add
sbb
add
adc
adc
push
adc
add
add
add
or
jnp
add
add
push
or
pop
or
add
sbb
add
add
adc
adc
and
or
sub
adc
add
jnp
add
add
pop
pop
pop
(bad)
das
add
add
add
pop
sub
jnp
add
add
sbb
add
adc
add
adc
(bad)
dec
sub
add
add
add
add
pop
adc
add
add
add
or
pop
and
lock
add
add
or
and
add
pop
sub
jnp
add
add
or
pop
and
add
add
add
pop
sub
pop
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
cmp
xor
or
jnp
add
add
pop
xor
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
(bad)
das
add
add
add
pop
sub
jnp
add
add
jnp
add
add
pop
(bad)
das
add
add
add
pop
sub
pop
pop
adc
add
add
add
or
push
add
add
add
or
pop
xchg
adc
sub
sbb
adc
and
xchg
pop
adc
adc
pop
xchg
adc
(bad)
push
adc
jnp
add
add
adc
adc
rcr
or
or
and
push
lds
or
pop
adc
push
cmp
(bad)
(bad)
call
or
add
or
(bad)
(bad)
dec
cmp
std
(bad)
dec
jecxz
(bad)
dec
dec
call
add
add
(bad)
call
adc
adc
adc
push
push
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
adc
sbb
add
add
push
mov
add
add
pop
mov
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
das
add
add
adc
add
add
add
add
push
(bad)
sbb
inc
sbb
add
add
arpl
add
mov
add
sldt
add
xor
add
add
adc
jnp
add
add
imul
add
push
push
sub
add
sbb
jno
add
es
sbb
add
push
push
cmp
add
es
sbb
imul
add
sub
jnp
add
add
add
push
cmp
add
adc
pop
pop
or
push
sub
adc
pop
adc
xchg
sahf
adc
adc
adc
push
xor
add
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
push
adc
adc
adc
add
xor
xor
push
sub
or
and
or
add
pop
pop
add
add
add
mov
inc
add
add
adc
sbb
pop
sbb
das
add
add
or
or
pop
lea
add
add
or
or
or
adc
or
or
adc
adc
sbb
or
sahf
adc
adc
add
push
xchg
push
bound
or
and
or
ret
pop
push
xchg
adc
pop
or
pop
and
push
adc
pop
adc
sub
adc
push
sub
push
sub
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
adc
pop
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
ret
adc
xchg
adc
sub
pop
adc
pop
adc
xchg
sahf
adc
and
adc
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
pop
adc
adc
sahf
pop
push
xchg
adc
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
adc
sbb
adc
pop
adc
push
cmp
(bad)
(bad)
call
or
sete
inc
add
pop
adc
adc
and
add
add
fwait
add
or
adc
adc
adc
xchg
adc
adc
pop
adc
adc
sahf
push
adc
pop
adc
sub
adc
pop
pop
or
sbb
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
adc
pop
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
enter
adc
pop
adc
xchg
sahf
adc
and
xor
(bad)
call
xor
adc
pop
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
pop
adc
adc
sahf
or
cmp
add
or
jp
add
(bad)
add
add
cmp
cmp
cmp
mov
(bad)
call
add
(bad)
std
(bad)
call
add
call
pop
lea
add
add
push
adc
push
push
mov
add
add
mov
mov
add
add
mov
add
add
add
das
add
add
add
add
push
mov
add
add
pop
mov
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
das
add
add
adc
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
das
add
add
adc
add
add
add
push
(bad)
sbb
inc
sbb
add
add
add
add
sldt
add
xor
ins
add
add
add
adc
sub
es
and
cmp
sub
push
add
add
add
xchg
add
add
add
xchg
pop
pop
push
sub
es
sub
push
sub
es
add
add
add
imul
mov
and
sub
or
lds
sub
or
loop
sub
push
mov
add
add
mov
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
push
push
add
add
add
xor
add
add
adc
add
es
sbb
xor
cmp
add
add
sbb
das
add
add
add
add
add
add
sbb
add
adc
add
add
cmp
add
sbb
cmp
add
add
sub
sbb
sbb
or
add
inc
add
add
add
add
add
pop
push
add
or
add
sub
add
push
adc
pop
adc
pop
pop
and
adc
sub
add
add
add
wbinvd
add
add
add
add
push
sub
pop
das
sbb
add
(bad)
popa
add
add
add
push
add
add
pop
or
add
adc
and
add
pop
push
add
cmp
sbb
add
adc
and
add
pop
push
add
sbb
jnp
add
add
adc
and
add
pop
push
add
add
jnp
add
add
cmp
(bad)
(bad)
aas
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
ficom
cmp
(bad)
(bad)
call
add
(bad)
dec
int3
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
add
add
in
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
xor
add
add
push
add
adc
add
es
push
cmp
add
es
sub
add
pop
push
cmp
add
add
add
add
add
add
push
cmp
add
add
adc
add
add
cmp
add
add
sbb
cmp
add
add
sub
sbb
sbb
or
add
add
push
adc
add
or
add
pop
adc
push
adc
pop
adc
pop
pop
and
adc
jnp
add
add
or
add
add
add
add
fmul
pop
das
adc
pop
add
outs
ja
add
or
xor
sub
sub
add
adc
add
push
push
sub
add
add
xor
add
sbb
outs
lea
add
push
cmp
(bad)
jmp
inc
or
or
and
sub
outs
ja
add
add
add
add
xor
add
sbb
outs
lea
add
sub
ja
add
add
add
add
xor
add
pop
or
outs
lea
add
adc
jnp
add
add
cmc
(bad)
(bad)
(bad)
ficom
cmp
(bad)
(bad)
call
add
fdivrp
(bad)
dec
call
add
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
add
add
in
add
(bad)
sbb
add
add
dec
add
add
add
das
add
add
add
add
xor
imul
add
add
adc
sub
add
or
add
add
add
add
add
push
jge
add
add
and
add
add
jge
add
add
and
add
lea
add
jge
add
add
and
add
lea
add
jge
add
add
add
and
add
jge
add
add
clts
mov
add
add
add
fild
add
(bad)
sbb
add
adc
add
add
add
add
sldt
add
xor
add
add
add
add
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
or
sub
add
push
(bad)
sbb
add
add
add
add
daa
daa
add
sldt
add
xor
add
add
adc
jnp
add
add
and
push
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
sub
dec
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
popf
add
add
add
add
add
add
popf
push
sub
dec
add
add
and
inc
add
sub
ficomp
sub
or
cmc
push
mov
add
pop
mov
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
ja
add
add
add
xor
add
add
sub
add
add
add
add
add
push
add
add
and
add
sbb
add
es
add
add
dec
add
add
and
add
add
dec
add
add
and
add
add
dec
add
add
sub
xchg
add
add
sub
add
add
add
xchg
and
inc
add
cmp
add
add
add
pop
and
add
das
add
sub
pop
and
add
pop
push
push
sub
es
and
add
xor
push
push
sub
sub
add
add
add
xchg
and
inc
add
sub
dec
add
add
or
add
push
sub
or
add
popf
or
pop
or
and
add
and
fiadd
mov
das
(bad)
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
dec
cmp
sub
mov
add
add
mov
add
add
mov
add
add
mov
add
add
sub
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
adc
jnp
add
add
cli
inc
add
add
add
push
cmp
add
add
push
cmp
add
add
nop
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
jnp
add
add
xor
jnp
add
add
jnp
add
add
push
cmp
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
push
sub
es
add
pop
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
push
add
add
adc
jnp
add
add
jnp
add
add
push
(bad)
(bad)
call
sub
add
add
xor
fidiv
push
cmp
(bad)
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
jmp
mov
test
(bad)
jmp
add
push
sub
push
mov
add
add
sub
add
push
(bad)
sbb
add
add
add
push
add
add
add
add
add
add
add
add
xor
inc
add
add
add
adc
add
add
jp
add
and
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
jnp
add
add
pop
cmp
add
add
add
add
sub
cmp
add
add
add
add
cli
jle
add
sub
pop
add
add
add
add
add
and
add
pop
adc
add
add
add
add
or
jnp
add
add
add
push
push
xor
sbb
pop
add
add
add
pop
add
add
add
add
add
add
adc
pop
xchg
adc
inc
jns
add
add
add
add
adc
pop
pop
pop
xchg
adc
inc
add
add
jnp
add
add
xchg
add
add
add
xchg
inc
push
add
add
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
aaa
add
add
sbb
add
sbb
add
add
add
pop
pop
and
push
add
add
add
pop
and
rol
add
add
add
add
pop
pop
and
push
add
add
add
pop
and
mov
add
add
add
add
pop
pop
and
push
add
add
add
pop
and
xchg
add
add
jnp
add
add
pop
pop
and
push
add
add
add
pop
and
js
jnp
add
add
pop
pop
and
push
add
add
add
pop
and
pop
add
add
add
pop
pop
and
push
add
add
add
pop
and
inc
add
add
add
pop
pop
and
push
add
add
add
pop
and
and
jnp
add
add
pop
pop
and
push
add
add
add
pop
and
or
adc
aas
ud0
dec
adc
jge
add
add
adc
add
add
adc
adc
pop
das
aas
add
add
add
add
or
jnp
add
add
add
jnp
add
add
or
and
jg
add
and
inc
add
adc
adc
xor
push
pop
pop
and
(bad)
inc
adc
add
add
add
fwait
add
or
add
add
jnp
add
add
inc
inc
adc
or
cmp
xchg
(bad)
dec
mov
(bad)
dec
call
add
call
push
cmp
or
add
or
or
push
mov
add
add
mov
add
add
mov
mov
add
add
add
das
add
add
add
add
push
mov
add
add
pop
mov
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
mov
add
adc
sub
add
push
(bad)
sbb
or
add
add
stos
add
add
add
add
add
add
xor
add
add
adc
jnp
add
add
push
add
add
add
add
cmp
add
push
push
cmp
fild
add
add
add
add
je
jnp
add
add
and
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
je
add
add
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
cmp
add
add
es
jnp
add
add
dec
add
add
push
cmp
add
add
frstor
add
add
add
add
cli
inc
add
or
push
cmp
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
xor
sub
pop
sub
or
add
add
add
pop
and
jle
add
cmp
or
test
add
sub
add
add
add
xor
add
add
add
xor
add
add
add
jnp
add
add
and
adc
add
or
sub
dec
add
add
sbb
idiv
(bad)
call
aas
test
add
add
add
add
xor
jnp
add
add
jnp
add
add
pop
push
pop
pop
outs
jne
add
es
sbb
add
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
xor
add
add
pop
pop
and
add
add
pop
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
sbb
add
add
dec
add
add
add
and
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
je
add
add
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
jae
add
sub
add
add
add
jnp
add
add
or
add
or
push
cmp
(bad)
call
pop
or
jnp
add
add
or
jnp
add
add
inc
sub
push
adc
jnp
add
add
jnp
add
add
jnp
add
add
adc
jb
add
add
add
pop
jge
add
add
add
inc
sbb
and
(bad)
call
add
push
add
add
push
add
add
cmp
adc
cmp
(bad)
jmp
add
push
cmp
std
(bad)
call
add
jmp
add
push
cmp
std
(bad)
dec
cmp
std
(bad)
dec
cmp
std
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
sub
add
add
sub
add
sub
jnp
add
add
jnp
add
add
add
add
sub
xor
add
add
test
add
push
sub
add
add
add
mov
add
sub
push
sub
(bad)
push
sub
sbb
fidiv
sub
mov
sub
or
(bad)
or
jmp
mov
add
add
mov
add
add
add
mov
add
add
loope
add
(bad)
sbb
sub
add
adc
add
add
add
and
add
add
xor
add
add
add
add
add
add
add
add
push
jge
add
add
add
add
sub
fimul
add
sub
add
push
(bad)
sbb
add
add
add
add
add
sbb
add
sldt
add
xor
add
add
add
jnp
add
add
jnp
add
add
add
sub
fimul
or
sti
add
fld
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sldt
add
xor
add
add
adc
jnp
add
add
and
add
push
sub
es
pop
jge
add
add
add
pushf
add
add
add
and
add
adc
pop
jge
add
add
add
arpl
pushf
fisub
or
ror
sub
push
mov
add
add
mov
add
add
add
loopne
add
(bad)
sbb
add
adc
add
add
add
sbb
add
add
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
sbb
es
add
pop
jge
add
add
sbb
mov
jmp
das
add
add
add
loopne
add
(bad)
sbb
add
add
add
add
cs
sbb
add
sbb
add
and
add
add
add
add
sub
or
sti
add
fld
add
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sldt
add
xor
add
add
adc
jnp
add
add
xor
jnp
add
add
and
add
sbb
jge
add
add
add
add
add
pushf
add
add
add
xor
jnp
add
add
and
add
push
sub
es
pop
jge
add
add
add
add
add
rcr
add
push
jge
add
add
sbb
sub
mov
add
add
mov
add
add
sub
add
push
(bad)
sbb
add
adc
add
add
add
add
add
add
xor
add
add
adc
and
add
add
add
add
pop
pop
bound
pop
add
add
and
add
pop
jge
add
add
jnp
add
add
adc
add
add
add
and
add
sbb
push
es
pop
jge
add
add
add
add
add
pushf
add
add
add
and
add
push
sub
es
pop
jge
add
add
add
add
add
rcr
add
adc
add
add
and
add
adc
pop
add
add
or
test
mov
add
add
mov
add
add
add
mov
add
add
loope
add
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
pop
add
add
jnp
add
add
inc
sbb
lock
or
clc
add
fld
add
(bad)
sbb
sub
add
add
add
add
adc
add
add
xor
add
add
add
add
adc
jnp
add
add
xor
jnp
add
add
and
add
push
cmp
pop
pop
jge
add
add
add
add
add
pushf
add
add
fs
add
add
and
add
pop
jge
add
add
add
add
add
jnp
add
add
xor
add
add
add
jnp
add
add
sbb
pop
add
add
jnp
add
add
add
push
sub
es
jge
add
add
push
jge
add
add
and
add
jnp
add
add
add
pop
sub
es
add
pop
jge
add
add
sbb
or
pop
(bad)
(bad)
call
add
mov
or
mov
mov
ror
sub
push
mov
add
add
add
das
add
add
add
loope
add
(bad)
sbb
sub
add
adc
add
add
add
fld
sbb
add
add
and
add
add
jge
add
add
sub
add
or
or
add
inc
add
add
add
add
and
add
add
sbb
sbb
add
push
arpl
inc
add
pop
rcr
sub
ficomp
movs
add
or
loope
movs
add
or
jmp
add
fiadd
add
(bad)
sbb
add
add
add
add
add
aaa
aaa
add
sldt
add
xor
add
add
add
add
add
add
sub
es
pop
adc
sub
sub
xchg
add
push
sub
sub
in
add
mov
add
add
fiadd
add
(bad)
sbb
add
adc
add
add
add
add
sldt
add
add
movs
add
or
sbb
add
add
jb
(bad)
jo
outs
add
or
jb
(bad)
jo
pusha
add
add
sub
cmp
add
add
adc
cmp
add
add
adc
cmp
add
add
push
sub
(bad)
add
add
jae
add
or
cmp
add
push
cmp
add
jae
add
or
add
pop
add
add
or
outs
test
add
push
outs
test
xor
adc
outs
stos
add
or
adc
pop
and
jl
add
push
outs
stos
add
or
adc
and
adc
jl
add
jae
add
or
adc
outs
lods
add
or
add
add
or
adc
sub
movs
add
or
adc
imul
scas
add
add
pop
adc
adc
pop
adc
adc
push
outs
stos
add
or
adc
push
pop
adc
jl
add
push
outs
stos
add
or
adc
pop
push
pop
adc
jl
add
pop
adc
push
outs
lods
add
or
or
adc
push
outs
lods
add
or
or
push
outs
stos
add
or
outs
lods
add
or
or
sbb
add
or
adc
mov
pop
sub
movs
add
or
adc
push
adc
mov
cdq
add
or
adc
push
adc
mov
cdq
add
or
adc
push
adc
mov
cdq
add
or
adc
jb
adc
jo
pusha
add
add
adc
jl
add
push
outs
scas
add
or
jae
add
or
mov
cdq
add
or
outs
scas
add
or
outs
lahf
add
or
or
push
or
xchg
(bad)
(bad)
dec
cmp
or
adc
jo
or
add
or
add
or
adc
or
sub
sub
push
outs
mov
add
push
sub
pop
outs
mov
add
or
or
add
or
sub
or
add
or
adc
or
sbb
(bad)
dec
cmp
(bad)
(bad)
dec
and
(bad)
dec
inc
inc
add
add
add
aad
add
fwait
add
add
add
adc
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
mov
add
sbb
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
mov
add
add
adc
sub
add
push
sub
ficom
add
jle
add
add
cdq
add
push
push
adc
jae
jb
adc
jo
xchg
add
push
push
sub
es
sub
pusha
add
add
sub
es
sub
sbb
sub
es
adc
jo
add
add
push
sub
add
add
add
or
add
add
add
sub
es
or
pushf
add
push
or
sub
or
inc
popf
add
push
jae
add
push
outs
add
add
or
add
add
adc
or
xchg
(bad)
(bad)
jmp
cdq
add
push
sub
sub
add
add
sub
adc
add
add
add
lldt
sldt
add
xor
add
add
das
add
adc
sub
add
add
add
sub
es
sub
sub
aas
add
add
jl
add
add
pop
sub
add
sub
xor
sub
sub
or
aam
sub
or
out
add
adc
add
add
add
adc
jnp
add
add
sub
adc
add
add
jae
add
push
push
sub
es
sub
outs
aam
add
sub
pop
add
add
popa
add
or
sub
es
cwde
add
push
sub
push
add
jle
add
or
sub
sub
cdq
add
push
sub
add
push
add
sbb
add
sub
add
add
sub
add
or
add
add
add
push
add
data16
add
add
add
add
add
add
adc
pop
add
add
add
add
adc
jb
adc
jo
mov
add
cmp
add
add
jnp
add
add
sbb
add
sub
add
or
adc
jo
sbb
cmp
add
add
push
mov
sub
add
add
imul
add
add
cmp
add
add
push
pop
push
mov
cmp
add
add
es
add
add
pop
push
mov
jnp
add
add
imul
es
add
add
sahf
add
push
sbb
mov
add
add
add
add
add
add
mov
jnp
add
add
mov
jnp
add
add
mov
inc
lahf
add
push
jae
add
push
outs
add
add
add
jnp
add
add
add
add
add
add
bound
add
sbb
sub
add
add
bound
add
sbb
jae
add
push
outs
aam
add
add
jge
add
add
outs
call
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
jmp
mov
add
cmp
(bad)
(bad)
jmp
mov
dec
(bad)
(bad)
dec
pop
(bad)
(bad)
inc
add
cmp
sub
add
or
add
add
add
add
xor
add
add
add
jb
adc
jo
outs
add
or
sbb
aaa
add
add
add
add
sub
push
sub
imul
sub
add
add
jle
add
or
sbb
add
jge
add
add
outs
cdq
add
push
sub
outs
cwde
add
push
sub
add
jb
sub
add
or
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
cmp
adc
mov
push
add
add
xor
iret
add
add
add
adc
push
lea
add
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
sub
add
add
add
add
outs
add
add
add
push
jb
adc
jo
mov
or
push
jb
adc
jo
mov
add
sub
adc
jo
mov
add
sub
lea
add
and
add
mov
jo
add
add
cmp
and
add
mov
jo
add
add
xor
add
add
add
add
adc
sub
add
push
cmp
fnsave
jne
add
add
add
sbb
add
adc
jb
adc
jo
mov
cmp
add
fisttp
jne
add
add
add
push
cmp
add
adc
jb
adc
jo
mov
cmp
add
fstp
add
jne
add
add
add
add
push
cmp
add
add
adc
jb
adc
jo
mov
(bad)
add
add
jne
add
add
add
adc
add
ins
adc
jo
rol
or
fisttp
jne
add
add
add
adc
adc
jo
rol
or
fucomp
add
add
sub
add
add
add
adc
adc
jb
adc
jo
ret
or
ffree
add
add
jne
add
add
sbb
xchg
add
add
adc
adc
jb
adc
jo
ret
add
or
fstp
jne
add
add
add
adc
adc
jb
adc
jo
les
add
or
jg
jne
add
add
add
adc
adc
sub
add
or
or
or
adc
jo
mov
ficom
jne
add
add
add
adc
adc
sub
add
or
or
or
ins
adc
jo
rol
or
fisubr
fisub
or
ins
(bad)
(bad)
dec
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
jmp
fiadd
jle
add
or
push
sub
add
rol
add
add
add
add
add
add
add
jb
adc
jo
outs
add
or
push
sub
adc
jo
mov
sbb
adc
jo
add
sbb
add
mov
add
xor
add
add
or
enter
sub
adc
cmp
add
es
pop
jb
adc
jb
adc
push
add
add
add
add
push
push
cmp
add
or
push
add
add
jnp
add
add
jae
add
push
push
cmp
add
add
add
scas
add
add
leave
add
or
add
add
add
xor
inc
adc
mov
add
es
retf
or
cmp
or
or
add
or
add
outs
int3
add
or
lods
add
push
or
add
or
add
inc
adc
adc
add
or
outs
iret
add
or
add
push
adc
adc
add
or
outs
rol
add
sub
add
add
add
arpl
rol
add
adc
or
rol
add
outs
into
add
or
pop
add
sub
sub
add
sub
jnp
add
add
ins
adc
adc
add
or
sbb
into
add
or
inc
(bad)
(bad)
dec
call
or
adc
outs
add
add
fsubr
add
add
push
outs
rol
add
adc
adc
jne
add
add
jb
adc
adc
add
add
aam
add
sub
add
add
add
add
clc
add
add
add
aad
add
adc
add
sub
or
adc
jae
add
or
or
pop
pop
and
and
outs
xlat
add
or
adc
or
outs
xlat
add
or
adc
jb
adc
add
or
adc
jb
adc
add
or
adc
adc
jb
adc
jo
mov
fadd
add
adc
pop
sub
add
or
adc
outs
add
add
adc
or
add
add
add
outs
ins
add
or
push
adc
cmp
sub
or
or
add
or
xor
(bad)
add
or
or
or
outs
add
add
outs
fadd
add
adc
jb
adc
add
or
adc
adc
outs
fadd
add
adc
pop
sub
add
or
adc
outs
add
add
adc
sub
or
add
or
push
sub
adc
fld
add
sub
adc
fiadd
add
add
rol
add
outs
fiadd
add
or
add
aad
add
adc
add
jae
add
push
adc
outs
leave
add
or
add
xor
inc
adc
add
or
add
add
lods
add
push
push
sub
add
sub
add
fild
add
sub
or
add
or
push
or
add
add
jb
(bad)
jo
jb
adc
add
or
push
adc
sub
add
jb
add
jo
xchg
add
adc
add
add
add
scas
adc
sub
into
add
or
and
or
add
retf
or
lods
add
push
add
sub
sub
add
sub
or
or
outs
add
add
fsubr
or
fwait
cld
(bad)
dec
cmp
cmp
or
(bad)
cld
(bad)
inc
add
add
add
out
add
add
add
add
or
add
add
xor
add
add
adc
outs
rol
push
push
cmp
adc
add
es
push
cmp
sub
sub
add
add
outs
fadd
add
outs
rol
push
push
sub
add
or
or
sub
or
pop
pop
sub
jnp
add
add
fiadd
add
xor
pop
adc
je
add
fiadd
add
sbb
sbb
xlat
pop
sub
je
add
outs
fild
add
add
add
add
mov
add
rol
add
outs
into
add
or
or
jo
(bad)
dec
cmp
(bad)
dec
je
(bad)
dec
cmp
call
adc
add
push
add
add
add
adc
sub
scas
add
push
sbb
xor
sbb
push
adc
jae
add
rcl
rol
add
sbb
sub
jnp
add
add
iret
adc
sub
sub
sub
outs
into
add
or
loop
into
add
or
out
add
add
xor
add
add
adc
sub
sub
js
sbb
pop
sub
add
add
add
or
adc
add
or
adc
add
add
or
(bad)
(bad)
inc
pop
pop
pop
sbb
dec
adc
sub
add
or
add
add
outs
loopne
add
push
sub
sbb
adc
pop
outs
jecxz
add
outs
in
add
push
sub
adc
jb
push
add
in
add
pop
outs
out
add
jae
add
push
jge
add
add
sub
cmp
sub
sub
add
adc
add
jle
add
aaa
add
adc
add
add
add
add
add
or
sub
es
js
add
outs
out
add
sub
add
add
add
outs
call
add
add
add
jmp
sub
add
add
add
add
add
add
sub
es
add
add
pop
sbb
sbb
pop
pop
sub
sub
sub
jmp
jmp
add
sub
add
sbb
add
lock
add
add
adc
sub
stos
add
push
push
cmp
adc
sub
push
add
add
add
xor
add
add
add
cmp
add
sub
mov
add
es
push
ds
add
add
add
add
dec
push
add
add
rol
add
push
cmp
add
es
add
outs
aad
add
push
cmp
add
add
add
add
outs
out
add
sub
add
add
add
outs
call
cmp
add
cmp
add
add
add
or
add
outs
loopne
add
outs
in
add
or
add
or
add
add
or
jns
(bad)
call
xor
add
jo
out
add
or
adc
pop
outs
xlat
add
or
adc
add
or
adc
pop
outs
xlat
add
or
add
add
or
push
adc
outs
push
add
or
xor
add
push
outs
fadd
add
adc
outs
xlat
add
or
add
add
or
add
add
or
add
jb
push
add
lock
or
pop
adc
push
xor
adc
outs
push
add
or
pop
adc
adc
outs
push
add
or
icebp
add
or
push
add
jno
add
repnz
or
or
add
or
add
or
adc
outs
enter
outs
fadd
add
add
add
add
repz
or
jnp
add
add
add
add
add
outs
hlt
add
or
jnp
add
add
or
add
or
jnp
add
add
jne
add
add
rol
add
outs
into
add
or
das
or
dec
(bad)
(bad)
jmp
add
or
gs
(bad)
dec
cmp
(bad)
jmp
add
or
test
(bad)
dec
dec
lods
(bad)
(bad)
jmp
fiadd
sub
add
add
add
add
add
call
add
add
add
add
add
add
xor
add
add
add
add
adc
sub
add
add
add
xchg
pop
inc
sbb
rol
add
add
outs
push
add
or
push
sub
add
add
or
xor
push
sub
cmc
add
or
and
or
add
add
fnsave
push
cmp
add
add
or
pop
push
cmp
sub
sub
add
outs
cmc
add
or
cmp
add
sbb
push
sbb
jb
add
es
adc
jo
add
add
pop
add
add
add
imul
adc
adc
add
adc
add
imul
add
aas
or
pop
or
push
cmp
(bad)
(bad)
inc
push
sub
sub
cmp
(bad)
(bad)
call
push
cmp
dec
cmp
(bad)
dec
je
(bad)
dec
call
add
mov
(bad)
jmp
adc
adc
sub
add
add
add
add
cli
cli
add
add
add
sbb
add
sbb
add
xor
add
sub
or
sub
or
sti
es
push
add
fiadd
push
sub
add
add
add
add
add
push
push
add
add
add
sbb
add
sub
add
cmp
add
sub
add
or
add
or
sub
es
sub
sub
es
lea
add
add
pop
push
sub
pop
or
add
sub
adc
add
add
add
push
add
add
add
xor
add
add
adc
pop
add
or
sub
or
sti
es
fiadd
push
sub
add
add
add
add
add
push
push
add
sbb
add
add
add
add
add
add
pop
add
add
add
add
add
or
add
add
add
add
add
jae
add
or
add
or
add
add
jnp
add
add
cmp
add
add
add
(bad)
push
add
push
add
push
sbb
mov
add
add
add
rcl
jo
sti
adc
jo
mov
cmp
or
add
es
add
add
xlat
push
add
xchg
add
or
cmp
add
adc
jb
push
add
cli
add
or
cmp
or
add
es
add
add
pop
(bad)
jo
scas
add
push
push
cmp
or
add
es
add
add
sti
add
or
cld
add
or
add
add
add
in
push
add
jnp
add
add
sbb
sbb
xor
add
in
add
outs
into
add
or
jnp
add
add
sti
push
add
std
add
or
sbb
push
add
in
add
outs
into
add
or
jnp
add
add
jmp
xor
add
add
add
inc
add
add
add
add
sti
adc
jo
popa
add
or
add
push
outs
jmp
add
add
inc
add
push
xor
add
add
add
add
add
add
add
add
sti
adc
jo
outs
jmp
add
add
add
add
or
push
add
push
adc
sub
add
mov
add
adc
push
adc
sub
pop
adc
call
jae
add
dec
push
add
push
add
push
adc
add
add
add
iret
adc
out
add
outs
into
add
or
jnp
add
add
and
add
outs
add
add
outs
into
add
or
push
xor
add
xor
inc
adc
add
or
add
fiadd
fimul
and
adc
outs
add
add
fcom
and
pop
adc
adc
adc
mov
jl
(bad)
(bad)
fimul
push
sub
adc
outs
add
add
fadd
jnp
add
add
aas
pop
add
push
add
push
adc
add
add
add
leave
add
add
jnp
add
add
add
add
push
ds
jnp
add
add
add
add
outs
add
add
adc
cmp
and
add
add
add
add
popa
pop
add
push
add
push
adc
jnp
add
add
iret
adc
into
add
or
jnp
add
add
outs
push
add
or
add
or
jnp
add
add
ins
adc
adc
add
or
and
jnp
add
add
scas
adc
add
jo
jb
add
jo
xor
add
outs
into
add
or
or
and
pop
adc
add
add
fcom
and
pop
add
or
outs
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
adc
add
outs
add
add
(bad)
or
and
adc
outs
add
add
fadd
jnp
add
add
and
add
add
add
add
or
add
push
adc
add
add
add
add
jg
add
push
add
push
adc
add
or
add
outs
or
add
adc
cmp
add
add
sub
add
or
add
jnp
add
add
fwait
pop
add
push
add
push
adc
add
add
add
mov
add
add
into
add
or
jnp
add
add
add
or
add
adc
add
mov
add
add
into
add
or
jnp
add
add
iret
pop
add
add
add
sub
sub
rol
add
outs
into
add
or
add
add
push
add
or
xor
add
add
add
fst
add
add
add
into
add
or
pop
add
add
add
jmp
add
add
into
add
or
or
daa
sub
adc
outs
add
add
fcom
sub
xor
(bad)
(bad)
fimul
adc
(bad)
push
adc
add
outs
add
add
(bad)
or
and
outs
add
add
fadd
jnp
add
add
repz
add
push
add
push
adc
add
add
add
pop
sbb
jo
push
add
or
add
or
add
or
jnp
add
add
sub
adc
add
outs
adc
add
outs
add
add
outs
sgdtd
or
jnp
add
add
inc
sbb
jo
adc
add
outs
adc
add
mov
add
outs
add
add
outs
sgdtd
or
jnp
add
add
pop
sbb
jo
or
sgdtd
or
jnp
add
add
jae
add
or
add
sub
add
add
jo
sgdtd
or
jnp
add
add
mov
add
or
add
sub
add
add
jo
sgdtd
or
jnp
add
add
xchg
sbb
jo
or
add
sub
add
add
jo
sgdtd
or
add
fiadd
fimul
sub
adc
outs
add
add
fdiv
add
or
push
add
add
add
pop
sub
adc
adc
outs
adc
add
adc
outs
adc
pop
adc
sub
push
add
or
jnp
add
add
test
push
add
push
adc
adc
outs
pop
add
or
sub
dec
add
add
sub
sbb
add
adc
add
or
mov
add
adc
outs
sbb
add
jb
sbb
jo
sbb
add
cmp
add
adc
outs
sbb
add
jb
sbb
jo
sbb
add
je
add
add
or
or
add
or
or
adc
adc
outs
sbb
sub
mov
outs
jae
add
adc
or
rol
add
adc
adc
adc
pop
xor
or
or
fs
xor
jnp
add
add
loope
add
push
add
push
adc
add
std
sbb
jo
or
rol
add
outs
into
add
or
or
sub
outs
add
add
(bad)
add
add
or
xor
adc
adc
pop
fs
add
add
or
jo
push
add
or
or
pop
add
or
adc
adc
jo
push
add
or
or
pop
add
or
adc
adc
jo
push
add
or
or
pop
add
or
adc
adc
jo
push
add
or
or
pop
add
or
add
adc
adc
push
adc
adc
sub
retf
add
add
jnp
add
add
jnp
add
push
add
push
adc
add
add
add
pop
sbb
jo
push
sub
add
or
add
or
jnp
add
add
inc
sbb
jo
adc
rol
add
outs
into
add
or
adc
sub
adc
push
xor
add
add
add
dec
push
add
adc
rol
add
outs
into
add
or
unpckhps
sbb
sub
add
add
add
xor
add
movaps
add
or
add
or
adc
das
push
adc
sub
sub
adc
adc
call
jae
add
push
adc
test
add
fiadd
fiadd
adc
pop
pop
adc
adc
adc
mov
aam
sub
fimul
cs
adc
outs
add
add
(bad)
add
fiadd
adc
jo
add
cmp
adc
add
add
xor
xor
adc
outs
add
add
(bad)
add
fiadd
adc
sub
add
or
lods
std
(bad)
(bad)
fimul
adc
(bad)
push
adc
add
outs
add
add
(bad)
or
sub
adc
outs
add
add
fadd
sub
jnp
add
add
xchg
sbb
jo
push
add
push
adc
add
add
add
movs
sbb
jo
jnp
add
add
repz
or
xor
xor
rol
add
outs
into
add
or
adc
jne
add
adc
or
add
or
push
fisub
adc
pop
and
pop
outs
mov
and
xchg
add
adc
fiadd
add
add
add
jne
add
push
outs
sgdtd
or
adc
adc
add
repz
or
mov
sub
adc
outs
add
add
fadd
jnp
add
add
mov
add
push
add
push
adc
jnp
add
add
movs
sbb
jo
jnp
add
add
jmp
xor
add
or
add
or
adc
sub
jnp
add
add
rcl
jo
push
add
push
adc
add
add
add
sbb
add
or
sbb
jnp
add
add
mov
sbb
add
add
into
add
or
sbb
add
add
push
add
or
xor
add
add
add
leave
sbb
jo
sbb
add
add
into
add
or
or
ss
adc
outs
add
add
fcom
sbb
pop
adc
adc
add
add
add
jmp
jl
(bad)
(bad)
fimul
xor
pop
adc
add
add
(bad)
xor
add
or
out
(bad)
call
sbb
div
(bad)
jmp
add
or
add
(bad)
jmp
add
or
adc
(bad)
call
sbb
adc
outs
add
add
fadd
jnp
add
add
and
add
add
add
add
and
add
add
add
add
sahf
add
or
add
add
add
lahf
add
or
add
add
jnp
add
add
outs
and
inc
idiv
call
sbb
push
idiv
inc
add
add
add
add
scas
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
cmc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
inc
push
add
or
add
jle
add
adc
add
pop
add
add
add
add
add
add
add
clc
push
add
lods
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
jmp
add
pop
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
xchg
add
add
in
pop
add
push
add
add
add
add
add
add
add
add
pop
add
or
add
dec
or
add
add
add
add
and
add
sldt
add
add
add
or
add
or
add
add
add
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
add
(bad)
or
add
or
add
add
add
add
add
add
push
add
add
add
test
add
or
add
add
add
sbb
add
and
add
jnp
add
add
imul
jo
push
add
push
sbb
push
add
add
push
push
cmp
add
add
cmp
jnp
add
add
outs
fadd
add
push
cmp
add
add
pop
outs
rol
push
push
cmp
pop
outs
ret
push
push
cmp
add
add
add
fistp
add
push
add
push
push
cmp
add
add
add
mov
add
rol
add
outs
into
add
or
add
adc
jo
lea
add
adc
adc
push
pop
sub
adc
outs
add
or
adc
adc
cmp
adc
adc
adc
adc
jb
add
jo
out
add
or
add
or
add
or
push
outs
outs
add
or
sbb
bound
adc
pop
pop
adc
adc
adc
pop
outs
daa
add
or
adc
inc
adc
or
add
adc
adc
outs
rol
add
outs
enter
adc
adc
jb
sbb
jo
out
add
or
adc
jb
sbb
jo
out
add
or
add
add
adc
pop
pop
adc
adc
adc
adc
add
sub
add
or
add
add
outs
aad
add
sub
adc
add
dec
or
add
or
or
jb
sbb
jo
sub
add
adc
xor
jne
add
add
jo
add
stos
adc
add
or
add
adc
add
jo
add
fild
jo
xor
add
adc
add
fiadd
adc
pop
add
add
add
scas
adc
sub
into
add
or
outs
retf
add
or
xor
add
add
outs
int3
add
or
lods
add
push
or
add
or
add
inc
adc
adc
add
or
outs
iret
add
or
add
push
adc
adc
add
or
outs
rol
add
cmp
je
add
add
or
jnp
add
add
arpl
outs
sub
add
adc
adc
sub
add
or
add
or
add
or
or
adc
sub
or
xor
push
cmp
(bad)
(bad)
call
or
sub
xlat
add
or
adc
adc
adc
outs
sub
add
outs
sub
add
adc
pop
pop
adc
adc
adc
outs
sub
add
xor
add
add
add
iret
pop
add
or
add
or
add
or
or
add
or
inc
sgdtd
add
or
add
or
or
adc
push
cmp
(bad)
call
or
or
or
adc
push
adc
pop
adc
or
or
jae
add
push
adc
test
add
fiadd
fiadd
adc
adc
cmp
or
lods
add
push
pop
outs
rol
push
cmp
add
add
jne
add
add
lea
add
add
add
add
push
sbb
jo
push
add
push
adc
push
adc
or
add
outs
sbb
sbb
cmp
sbb
add
or
movups
pop
adc
pop
add
add
add
outs
sbb
jo
popa
add
or
add
or
push
add
movhps
add
push
adc
test
add
adc
pop
pop
adc
adc
outs
jo
add
sub
sbb
add
add
sbb
sbb
adc
outs
add
add
(bad)
or
sbb
adc
outs
add
add
(bad)
add
fiadd
add
sub
adc
sub
adc
outs
add
add
fadd
pop
pop
or
add
add
add
fiadd
add
aas
ss
(bad)
(bad)
fisubr
or
sub
(bad)
dec
cmp
cld
(bad)
dec
inc
cld
(bad)
dec
call
adc
pop
cld
(bad)
call
adc
adc
outs
add
add
fsubr
adc
cmp
sti
(bad)
inc
inc
lods
add
add
add
dec
add
add
add
mov
add
add
add
add
add
add
add
loop
add
sbb
add
cli
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
mov
add
or
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
sbb
add
cdq
add
add
add
adc
sbb
add
add
add
push
pop
outs
add
or
cmp
add
es
sbb
add
add
push
push
cmp
add
cmp
add
add
add
add
pop
outs
das
add
or
add
sub
pop
outs
leave
add
or
add
sub
fisttp
push
cmp
add
es
pop
outs
daa
add
or
cmp
add
es
adc
sub
push
adc
call
or
add
or
add
or
sbb
jo
mov
add
sub
push
or
push
adc
pop
pop
adc
adc
adc
mov
int3
or
sub
outs
rol
push
outs
pop
add
or
jae
add
push
pop
sub
cmp
adc
mov
(bad)
call
push
cmp
fiadd
adc
adc
aas
ss
(bad)
inc
outs
rol
push
add
add
push
outs
xor
add
add
add
push
jae
add
push
adc
add
add
push
sub
jae
add
sbb
add
push
adc
push
sub
sbb
jo
stos
add
push
add
add
add
mov
jnp
add
add
fiadd
add
adc
adc
sub
add
or
add
or
or
or
adc
outs
add
add
fadd
jnp
add
add
outs
fild
add
sub
cmp
add
xchg
(bad)
(bad)
call
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
aas
add
adc
jnp
add
add
xchg
add
push
add
push
adc
add
add
add
or
cmp
add
push
cmp
jb
push
add
cmp
add
add
or
sub
or
sti
fiadd
add
add
add
fwait
sbb
jo
sbb
add
es
add
or
add
or
jnp
add
add
stos
sbb
jo
outs
into
add
or
pop
and
add
or
outs
add
or
jb
sbb
jo
aaa
add
or
or
or
add
or
jnp
add
add
fstp
add
outs
into
add
or
add
jae
add
push
sub
and
cmp
jmp
lods
add
push
cmp
dec
cmp
(bad)
jmp
add
or
ja
(bad)
jmp
fiadd
fimul
add
pop
adc
add
add
fsubr
adc
adc
(bad)
inc
add
add
add
cmp
cmovns
add
add
add
add
add
jmp
add
pop
add
out
add
add
add
xor
add
add
add
sbb
cmps
add
add
add
mov
add
push
sub
fidiv
sub
or
add
or
sub
cmp
add
push
xor
sbb
sbb
add
or
pop
outs
cmp
add
sbb
outs
cmp
add
push
sub
fimul
add
in
or
hlt
fiadd
adc
jb
sbb
jo
outs
mov
mov
add
add
cmp
add
sub
and
call
pop
ficom
sbb
add
aas
sbb
jo
dec
sbb
jo
mov
sub
adc
push
adc
fisubr
sub
push
(bad)
(bad)
call
add
adc
ficom
adc
push
sub
jae
add
push
sub
adc
fiadd
adc
sub
xor
add
add
aas
pop
add
add
add
add
or
nop
jo
add
add
add
add
add
add
add
mov
add
add
xor
add
add
inc
add
adc
sub
add
add
add
sub
es
sub
sub
cmp
add
adc
jl
add
add
pop
sub
add
sub
xor
sub
sub
or
aam
sub
or
out
add
adc
add
and
add
inc
add
adc
jnp
add
add
sub
es
sub
push
add
push
sub
es
sub
outs
mov
push
sub
add
add
xor
add
add
inc
add
adc
sub
add
add
add
sub
es
sub
sub
adc
add
adc
jl
add
add
pop
sub
add
sub
xor
sub
sub
or
aam
sub
or
out
add
add
jge
add
add
add
add
add
add
add
add
push
add
or
inc
sub
popa
add
or
add
or
add
or
add
push
sub
add
add
add
add
add
jae
add
push
jge
add
add
add
push
add
add
add
add
or
mov
add
jb
sub
add
or
add
add
add
add
test
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
cmp
sub
add
add
add
add
add
jge
add
add
add
add
add
jge
add
add
add
add
add
add
add
and
add
add
add
add
add
jnp
add
add
add
sub
jnp
add
add
mov
add
sub
mov
pop
jge
add
add
pop
jge
add
add
sub
add
add
add
add
mov
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
add
jge
add
add
pop
jge
add
add
sub
add
add
add
add
add
add
add
popa
add
or
fadd
add
sub
add
add
inc
add
add
add
add
jle
add
or
add
add
jle
add
or
add
add
sub
add
add
add
add
or
push
add
or
inc
sub
push
jge
add
add
add
xchg
add
add
add
add
add
xor
add
add
inc
add
adc
jb
sbb
jo
jnp
add
add
das
add
add
das
add
add
data16
or
cmp
add
add
es
sbb
jo
jnp
add
add
das
add
add
das
add
add
data16
or
cmp
add
add
es
sbb
jo
jnp
add
add
das
add
add
das
add
add
data16
or
cmp
add
add
es
add
add
or
jnp
add
add
imul
mov
add
sbb
jo
mov
add
add
das
add
add
data16
or
cmp
es
push
cmp
sub
fwait
sbb
jo
mov
add
add
jbe
add
or
jnp
add
add
call
add
add
sub
add
outs
add
or
xor
sub
jnp
add
add
call
fistp
jo
jnp
add
add
call
xor
add
sub
add
outs
add
or
add
fiadd
pop
pop
and
pop
push
aas
mov
(bad)
jmp
outs
add
or
repnz
(bad)
jmp
add
or
or
add
or
sub
(bad)
dec
cmp
(bad)
jmp
add
or
push
(bad)
(bad)
dec
cmp
inc
add
add
add
add
les
push
pop
add
sldt
add
xor
add
add
adc
sub
add
or
add
sbb
jo
aas
add
or
add
add
add
sbb
jo
aas
add
or
add
add
add
sbb
jo
aas
add
or
add
add
jb
sbb
jo
aas
add
or
add
lea
add
add
add
add
or
add
add
add
add
sbb
jo
mov
add
add
jbe
add
shl
add
sub
add
outs
inc
add
or
jnp
add
add
jb
sbb
jo
fiadd
pop
pop
pop
or
push
xor
add
add
sub
adc
add
add
add
add
jge
add
add
push
add
mov
add
add
add
sahf
add
add
add
add
push
lea
add
add
sub
sub
add
push
sub
add
add
xor
sub
add
inc
add
adc
sub
push
sub
add
add
push
sub
es
push
add
es
sub
out
sub
add
push
sub
add
add
xor
and
add
inc
add
adc
sbb
push
sub
es
push
add
push
push
sub
es
sub
sub
add
push
sub
adc
add
add
add
add
pop
sub
add
lea
add
add
sub
es
push
add
push
sbb
or
es
sub
out
out
add
sub
add
adc
add
sub
add
adc
sbb
push
sub
es
push
add
push
sbb
add
push
push
sub
or
in
out
add
sub
add
add
xor
xor
add
inc
add
adc
sbb
pop
sub
add
push
sbb
add
push
sbb
add
push
es
sub
sub
add
push
sub
add
adc
add
aaa
add
add
add
add
sbb
add
push
sbb
add
push
sbb
add
push
mov
es
sub
sub
add
push
sub
add
xor
inc
add
add
add
push
sub
add
add
sub
es
push
add
push
sbb
add
push
sbb
add
push
mov
mov
es
sub
sub
add
push
sub
add
adc
add
inc
add
add
add
add
lea
add
add
sub
es
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
es
sub
sub
add
push
sub
add
add
xor
inc
add
add
add
add
or
push
sub
es
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
es
sub
sub
add
push
sub
add
xor
push
add
add
add
adc
add
es
add
es
push
cmp
add
add
or
cmp
add
add
add
add
or
add
add
or
lea
add
sbb
or
pop
or
pop
or
add
or
sub
adc
push
adc
sub
adc
adc
call
add
or
sub
or
pop
or
or
pop
adc
adc
adc
mov
xlat
fimul
adc
les
adc
outs
cmp
add
push
and
and
outs
cmp
add
pop
pop
outs
cmp
add
adc
adc
outs
inc
add
or
add
or
(bad)
(bad)
inc
pop
pop
pop
or
push
outs
cmp
add
or
add
fiadd
push
add
or
add
push
adc
add
add
or
sbb
jo
sbb
add
push
sub
inc
add
or
or
outs
sbb
add
jb
sbb
jo
or
add
or
pop
add
add
or
sbb
jo
sbb
add
je
add
sbb
or
or
pop
outs
inc
add
or
fiadd
fiadd
sub
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
into
(bad)
(bad)
dec
inc
sub
add
add
add
add
xchg
add
rol
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
sub
add
sbb
add
sub
add
or
inc
repnz
push
jae
add
or
sub
es
push
icebp
add
push
jae
add
or
sub
sub
add
or
call
or
icebp
sbb
add
pushf
add
add
add
jle
add
add
jp
pop
add
or
add
or
sub
cmp
add
sub
or
add
es
sub
push
outs
xor
add
sub
push
outs
xor
add
rol
add
sub
add
xor
sub
dec
add
or
add
and
add
add
add
sbb
add
fiadd
or
pop
push
sub
or
mov
sub
(bad)
(bad)
jle
add
add
or
mov
(bad)
dec
mov
(bad)
dec
cmp
sub
add
add
add
inc
add
push
add
add
add
add
add
add
sub
add
add
add
jle
add
add
inc
adc
add
or
sub
add
push
add
add
outs
hlt
add
push
push
sub
pop
sub
add
push
sub
es
add
push
add
push
push
sub
es
sub
add
push
sub
outs
cmc
add
push
sub
add
add
xor
add
add
add
dec
add
or
cmp
push
outs
xor
add
push
cmp
push
sub
pop
outs
enter
jb
sbb
add
or
sub
outs
out
add
or
sbb
add
or
pop
jb
sbb
add
or
outs
pop
add
or
add
push
sub
es
sub
add
add
sbb
jle
add
add
inc
adc
add
or
add
jne
add
add
hlt
add
push
sub
fisub
add
pop
push
sbb
ficomp
or
ins
(bad)
(bad)
dec
cmp
dec
sub
push
sub
fiadd
sub
adc
add
add
add
add
add
xor
add
add
add
dec
add
or
add
add
jle
add
add
inc
adc
add
or
add
dec
add
or
add
add
hlt
add
push
sub
push
sub
outs
dec
add
or
add
add
push
sub
dec
add
or
add
add
dec
add
or
inc
push
sbb
fimul
sub
add
push
sub
fiadd
sub
adc
add
add
add
add
add
add
jle
add
or
add
xor
add
add
dec
add
adc
jae
add
push
push
sub
add
sbb
outs
rol
add
push
sub
and
sub
push
outs
iret
add
push
sub
pop
sub
sub
outs
in
add
push
sub
sub
add
sub
add
sbb
add
adc
add
adc
outs
xor
add
sbb
test
add
push
outs
enter
jb
sbb
add
or
push
outs
out
add
or
sbb
add
or
add
push
add
or
outs
pop
add
or
add
sbb
mov
pop
adc
add
add
add
add
add
sub
outs
repz
push
add
jnp
add
add
movs
add
push
sbb
nop
add
add
or
inc
clc
add
push
jae
add
push
sbb
add
add
or
inc
test
add
or
sub
es
inc
test
push
jae
add
push
outs
mov
add
sbb
or
jae
add
push
or
push
sub
or
add
push
add
adc
push
outs
leave
add
push
or
outs
int3
add
push
sub
add
add
add
push
or
outs
leave
add
push
or
outs
int3
add
push
add
outs
jmp
add
or
add
push
push
inc
or
cs
imul
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
ficom
adc
adc
les
add
outs
in
add
push
fiadd
pop
cmp
add
add
test
or
add
or
or
adc
sub
or
or
outs
out
add
adc
adc
jb
sbb
add
or
adc
jb
sbb
add
or
adc
jo
loope
add
jb
push
add
push
add
or
add
or
outs
push
add
or
pop
adc
outs
rol
add
jb
push
add
lea
push
add
or
pop
adc
push
add
or
fiadd
fiadd
adc
pop
pop
adc
pop
cmp
(bad)
call
or
or
aas
jno
(bad)
jmp
push
inc
inc
loopne
push
add
or
dec
add
or
adc
and
inc
loopne
push
add
or
add
fiadd
fiadd
sub
cmp
add
aas
(bad)
(bad)
dec
cmp
(bad)
inc
add
add
add
add
ret
add
add
ret
adc
add
add
add
imul
add
add
add
add
add
add
add
add
add
fiadd
adc
add
add
add
add
sub
es
add
push
sub
adc
add
and
add
dec
add
adc
jnp
add
add
sub
es
sub
push
add
sub
es
sub
outs
push
add
or
cmc
add
add
xor
and
add
xor
add
add
add
add
sub
es
sub
push
add
sub
es
sub
outs
aam
add
sub
add
add
add
sbb
add
sub
pop
push
add
push
add
or
jb
adc
add
add
add
add
jle
add
add
add
add
add
arpl
add
add
or
pop
add
or
and
jne
add
pop
add
or
add
adc
add
add
add
add
push
add
lea
add
add
sub
es
push
add
add
push
call
or
jmp
add
adc
add
xor
add
dec
add
adc
add
pop
add
or
sub
es
jne
add
add
sub
es
sub
pop
outs
pop
add
or
push
sub
es
sub
sub
or
jmp
or
icebp
add
add
add
jb
push
add
add
or
pop
add
or
and
mov
add
or
adc
add
add
add
add
push
add
lea
add
add
sub
add
push
sbb
add
push
sbb
add
add
or
call
or
fld
adc
add
xor
add
dec
add
adc
add
pop
add
or
sub
es
jne
add
add
sub
es
sub
pop
outs
pop
add
or
push
sub
es
sub
sub
or
jmp
or
icebp
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
cwde
add
add
add
push
push
sub
es
sub
add
add
add
or
add
add
add
sub
push
add
add
add
cld
add
push
jge
add
add
jnp
add
add
push
add
or
add
pop
add
or
jnp
add
add
pop
pop
add
mov
add
sub
push
sub
add
add
test
sub
fisubr
or
xchg
(bad)
(bad)
jmp
add
or
movs
or
sub
pop
add
outs
mov
add
or
add
push
fisub
add
add
dec
adc
jo
outs
add
or
add
push
add
add
add
sub
es
add
push
sub
add
add
add
or
jl
add
add
add
xor
add
add
dec
add
adc
jnp
add
add
inc
add
sbb
stos
add
add
or
add
add
add
sub
es
add
add
add
add
push
add
inc
add
push
sub
es
or
iret
outs
pusha
add
or
fsubr
add
push
sub
or
add
jo
outs
mov
add
or
add
push
fiadd
sub
add
add
add
add
add
dec
dec
add
sldt
add
add
sbb
add
add
jge
add
add
add
jb
pop
add
cmps
add
add
or
add
dec
add
add
add
add
add
add
inc
jg
add
add
adc
jg
add
add
dec
add
add
data16
or
ja
add
jge
add
add
lods
add
add
push
add
push
es
sub
add
add
sub
fiadd
jle
add
add
add
add
adc
add
add
add
inc
add
add
add
sbb
add
cmp
add
dec
add
adc
add
adc
sbb
sbb
adc
jnp
add
add
or
add
sub
push
sub
fimul
sub
add
push
sub
or
hlt
es
or
add
sub
add
add
add
add
add
xor
add
sbb
add
add
add
sub
pop
pop
sub
add
push
push
inc
push
inc
sbb
push
es
sub
sub
sbb
push
or
add
sub
add
adc
add
add
add
add
add
add
cmp
or
add
jnp
add
add
inc
sub
sub
add
push
jnp
add
add
push
sub
add
or
add
add
add
jnp
add
add
outs
popa
add
or
add
jnp
add
add
sub
sub
add
or
clc
add
add
push
sub
es
add
push
sub
adc
add
cmp
add
and
add
push
sbb
adc
add
sub
add
pop
sbb
push
sub
es
sub
push
sbb
in
pop
push
sub
es
sub
or
jmp
int3
add
push
sub
push
add
add
push
jp
jae
add
push
push
sub
es
sub
out
add
push
sub
add
add
stc
add
push
sub
add
arpl
add
sub
add
add
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
punpcklwd
bound
arpl
add
data16
push
add
ins
add
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
inc
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
add
pop
nop
add
add
xchg
add
add
add
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
sub
add
je
imul
add
pop
add
and
add
add
and
dec
inc
add
add
add
and
outs
bound
add
add
add
add
add
push
inc
or
add
add
add
add
add
add
add
xchg
add
add
add
lds
add
adc
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
ja
or
mov
add
add
add
add
add
add
repnz
add
add
ins
add
add
repz
add
adc
adc
sbb
or
and
add
add
add
push
add
pop
add
add
inc
add
add
cmps
add
add
add
add
cmps
add
add
cmps
add
add
add
add
sti
add
sti
add
add
or
sahf
push
add
adc
in
push
add
pop
cmps
add
add
sbb
adc
jp
cmps
add
add
jle
or
sahf
or
or
mov
add
or
or
add
or
add
inc
add
add
cmps
add
add
cmps
add
add
pushf
add
add
add
add
or
or
pop
or
add
add
or
add
add
add
or
or
add
add
add
jp
or
fwait
or
add
add
add
add
or
add
add
add
or
xor
dec
or
addr16
je
pop
add
add
push
add
sbb
or
lds
(bad)
or
out
or
femms
inc
or
add
push
pop
add
add
pop
add
add
mov
push
pop
add
add
add
push
pop
add
add
push
sbb
or
add
pop
add
add
movlps
push
add
bndldx
push
add
ud1
add
adc
adc
adc
or
add
adc
push
add
adc
adc
add
cmps
add
add
pop
adc
add
add
add
add
adc
adc
or
or
pop
adc
add
adc
or
push
adc
adc
add
adc
adc
adc
adc
adc
adc
or
test
adc
add
int
cmps
add
add
adc
add
add
add
cmps
add
add
add
add
adc
add
push
add
add
adc
test
mov
xchg
adc
mov
add
add
jp
or
test
sti
add
sti
add
cmps
add
add
add
pop
pop
add
out
pop
add
out
add
pop
add
or
xor
add
cmps
add
std
pop
add
or
sbb
xchg
sbb
adc
add
add
sbb
add
inc
or
add
add
add
sbb
add
inc
add
add
sbb
or
or
cmps
add
add
sbb
sbb
add
sti
add
ins
add
add
sbb
add
add
sbb
or
arpl
cmps
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
js
or
add
add
add
add
add
xchg
add
add
add
add
adc
pusha
add
jb
add
adc
pusha
add
jnp
jle
or
add
add
add
add
xchg
add
add
add
add
pushf
add
add
add
push
add
add
add
mov
add
add
movs
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
iret
add
add
add
add
adc
mov
add
add
mov
add
and
add
add
add
add
add
add
add
add
add
add
sbb
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
add
add
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
push
add
push
add
add
add
std
add
add
push
add
add
sbb
dec
add
adc
add
add
std
add
add
push
add
add
sbb
inc
add
add
inc
add
add
add
push
add
add
add
add
add
add
adc
add
push
push
add
cmp
push
cmp
push
add
push
add
push
sbb
push
add
push
push
add
ins
add
push
or
add
mov
push
add
mov
push
add
push
add
push
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
adc
add
add
add
std
add
add
add
add
add
add
add
add
add
std
add
add
movs
add
add
add
test
add
add
std
add
add
add
add
add
add
add
add
xor
sbb
test
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
std
add
add
push
add
add
mov
cmp
add
mov
cmp
add
push
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
sbb
cmp
adc
std
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
and
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
add
and
sbb
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
add
es
add
add
add
add
add
add
push
add
add
push
add
add
and
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
add
and
std
add
add
and
push
add
push
push
add
cmp
push
cmp
inc
add
push
add
push
sbb
inc
add
push
inc
add
add
mov
inc
add
add
add
add
add
add
add
add
adc
std
add
add
std
add
add
add
add
add
add
add
add
add
add
add
push
add
add
sbb
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
push
add
add
push
add
inc
add
adc
add
push
add
add
push
add
add
push
add
add
push
add
add
add
push
add
push
add
add
add
push
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
inc
add
add
add
push
add
pop
add
add
add
add
add
add
adc
std
add
push
and
add
add
sbb
add
add
pop
and
add
add
sbb
add
add
pusha
and
add
add
sbb
add
add
add
or
jo
add
hlt
and
add
add
push
add
add
cmp
add
add
inc
add
add
add
and
add
add
jmp
add
add
sbb
add
add
shl
add
add
or
add
and
add
add
sbb
add
add
sbb
add
add
push
add
add
and
add
add
add
add
add
add
push
add
add
add
add
adc
repz
add
add
add
add
add
add
adc
test
pusha
add
add
push
sbb
add
add
push
add
add
add
add
add
add
push
sbb
add
add
int3
add
add
push
sbb
add
add
aam
add
add
push
add
add
add
je
add
add
adc
std
add
cmp
adc
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
adc
or
add
add
dec
add
add
adc
or
mov
add
fs
add
add
push
sbb
add
add
ins
dec
add
add
push
sbb
add
add
je
add
add
push
or
add
add
add
dec
add
add
push
or
add
add
add
add
add
add
add
add
add
add
push
or
mov
dec
add
add
add
aaa
add
add
add
add
add
add
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
add
add
imul
add
add
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
add
add
imul
add
add
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
add
add
imul
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
add
add
imul
add
add
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
add
add
imul
add
add
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
add
add
imul
add
add
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
add
add
imul
add
add
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
popa
add
add
add
add
add
add
imul
add
add
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
imul
pop
add
add
add
add
sbb
add
add
add
add
add
add
cmp
add
add
add
popa
add
add
add
add
add
add
imul
or
add
add
add
push
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
imul
sldt
add
add
add
sbb
add
add
add
add
add
add
cmp
add
add
add
add
add
popa
add
add
add
add
add
inc
add
or
adc
add
add
add
push
sbb
add
add
add
add
cmp
add
add
add
popa
add
add
add
add
imul
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
adc
add
add
add
add
cwde
add
add
xchg
add
add
add
add
add
adc
add
add
add
add
cwde
add
add
add
adc
add
add
add
add
add
add
add
stos
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
xchg
fiadd
ins
add
add
scas
add
add
xchg
push
push
dec
add
add
add
add
add
add
add
sbb
adc
add
add
add
add
add
add
xchg
fiadd
jle
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
test
adc
add
add
add
add
scas
add
add
add
push
push
scas
add
add
xchg
jb
dec
add
add
add
add
add
scas
add
add
xchg
retf
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
test
adc
add
add
add
add
add
add
add
add
add
(bad)
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
mov
add
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
push
es
add
add
xchg
add
push
xor
add
add
xchg
add
push
inc
add
add
add
xchg
add
push
push
add
add
add
xchg
fiadd
retf
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
xchg
or
push
adc
adc
add
add
add
add
add
add
adc
add
add
push
adc
add
add
add
pop
daa
push
adc
add
add
push
adc
add
add
push
adc
add
add
add
add
add
adc
add
add
add
add
test
fiadd
push
mov
xchg
sbb
add
add
add
add
xchg
fiadd
push
mov
xchg
dec
pop
inc
push
adc
add
add
add
inc
push
push
add
mov
xchg
fiadd
test
add
mov
xchg
mov
dec
push
sbb
dec
mov
les
popa
pop
inc
push
sbb
add
add
add
add
add
push
push
add
xchg
int
pusha
push
push
add
add
add
xchg
fiadd
test
add
add
add
xchg
sbb
add
add
add
add
pop
ins
push
push
add
add
add
pop
je
push
add
add
add
or
push
add
rol
add
xchg
or
or
rol
add
xchg
or
add
rol
add
xchg
or
or
rol
add
xchg
or
add
add
add
xchg
or
or
add
add
add
add
push
push
add
add
add
out
xor
add
add
add
add
push
push
rol
add
les
rol
popa
add
add
add
les
aam
pop
add
add
rol
add
xchg
add
or
rol
add
xchg
fiadd
push
rol
add
push
sbb
add
add
add
add
add
add
add
jns
add
add
xchg
add
xchg
add
add
add
add
add
stos
add
add
add
add
add
jns
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
add
add
add
add
add
add
call
pop
add
add
movs
pop
add
add
add
add
inc
add
add
add
jne
sbb
inc
or
sbb
dec
or
pop
add
push
add
sbb
fiadd
push
and
fiadd
test
add
add
add
add
add
add
add
add
inc
add
add
dec
add
add
push
add
add
pop
add
add
add
fiadd
push
add
adc
fiadd
push
add
adc
fiadd
push
add
and
fiadd
push
add
or
or
add
add
sub
std
add
add
or
or
or
or
add
or
or
or
add
add
or
add
add
add
rol
inc
or
push
or
fiadd
dec
add
add
add
or
add
xchg
or
xchg
or
mov
add
add
add
or
loopne
outs
or
or
add
add
add
add
or
and
scas
add
add
add
mov
xor
imul
jnp
out
xor
mov
xchg
or
add
or
mov
add
add
add
add
add
add
push
and
dec
add
push
push
mov
or
hlt
push
fimul
popa
add
mov
mov
fiadd
push
psraw
adc
push
psadbw
adc
popa
fxsave
add
scas
add
add
add
add
add
movntq
imul
and
in
xchg
jno
dec
or
add
add
paddsw
mov
std
punpckhbw
mov
or
dec
add
add
add
push
adc
or
ds
or
inc
adc
or
dec
adc
or
add
ins
add
add
add
dec
add
add
add
or
nop
adc
or
mov
add
pcmpeqb
mov
add
or
or
or
add
movq
test
or
or
fiadd
push
add
add
add
add
add
adc
or
add
or
add
adc
or
add
adc
mov
xor
and
jmp
or
add
add
add
add
add
mov
add
add
add
adc
icebp
add
adc
stc
add
adc
icebp
add
add
add
add
or
add
add
add
adc
or
or
or
or
or
add
add
add
add
add
add
add
inc
or
add
add
add
add
push
or
fiadd
push
adc
xor
ficom
jp
xor
out
jp
xor
icebp
adc
xor
stc
adc
xor
add
add
add
add
adc
add
add
add
add
adc
or
add
adc
or
add
mov
add
push
adc
add
add
xchg
or
add
add
clc
vmwrite
jmp
or
push
add
popa
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
or
adc
movs
adc
adc
sub
sub
inc
adc
pop
adc
imul
psubq
push
add
pop
add
add
fs
add
ins
add
add
je
fiadd
push
adc
dec
or
push
add
inc
push
or
dec
or
leave
add
inc
push
add
mov
dec
or
xchg
add
inc
push
xchg
add
inc
push
mov
add
push
mov
or
add
add
adc
fist
jmp
add
adc
or
dec
add
add
add
dec
add
add
add
dec
or
sbb
push
push
mov
add
dec
add
add
add
push
test
push
test
add
push
test
add
push
test
sbb
ret
push
mov
pop
add
push
jp
pop
add
push
xchg
push
test
push
fld
push
push
mov
push
jp
fld
add
fs
mov
adc
daa
push
add
fld
imul
add
pop
mov
ins
add
add
push
jp
je
fst
xchg
push
ins
add
push
ror
add
pop
int
mov
add
or
jle
mov
add
add
ror
mov
push
fs
push
jp
fs
push
xchg
push
mov
push
rol
pop
dec
rol
pop
inc
add
add
add
add
rdtsc
add
inc
push
add
add
add
je
sub
rcl
jp
ins
add
adc
fst
jle
dec
add
push
jp
dec
add
pop
sub
jl
outs
adc
adc
push
mov
adc
push
add
push
jp
push
add
pop
sub
mov
outs
adc
adc
push
mov
adc
inc
add
sbb
xchg
add
ins
add
add
sbb
jmp
psubsw
inc
sbb
pushf
add
add
pushf
add
push
xchg
push
jns
pop
sbb
sbb
pushf
add
test
movs
add
add
js
xchg
sgdtd
add
push
pushf
wbinvd
add
push
jp
adc
adc
or
psrlw
fwait
adc
dec
add
push
test
je
mov
add
add
push
sbb
mov
adc
adc
add
cmc
sbb
test
add
adc
add
adc
adc
add
sbb
rol
sub
add
mov
add
mov
add
jle
mov
add
adc
adc
add
add
add
and
sbb
and
sbb
sbb
mov
adc
fiadd
push
sbb
adc
add
add
add
sbb
mov
fiadd
push
sbb
adc
push
add
add
add
fiadd
retf
add
pop
adc
pop
sbb
fld
jo
adc
adc
add
pop
add
add
add
add
add
add
adc
retf
sbb
add
adc
adc
jecxz
mov
inc
add
add
cmp
mov
add
fiadd
push
sbb
add
adc
push
push
add
ret
add
inc
push
jns
das
sbb
adc
add
add
add
add
add
add
add
fiadd
push
add
or
je
pop
add
add
add
add
add
add
add
mov
js
or
mov
jge
or
nop
add
add
add
pop
add
add
add
add
outs
add
add
add
add
add
add
push
add
retf
push
add
add
add
arpl
add
jnp
adc
ret
or
add
jecxz
push
add
and
imul
add
pop
loopne
jae
xor
and
dec
add
push
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
dec
add
or
or
or
call
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sbb
push
or
jo
jns
xchg
or
out
or
inc
push
push
xchg
push
test
enter
hlt
push
add
or
adc
adc
adc
adc
adc
adc
adc
adc
jl
adc
adc
adc
adc
adc
add
add
add
add
add
add
pop
add
jbe
jge
test
mov
lods
or
adc
sbb
and
sub
das
push
ss
xor
cvtdq2ps
jge
mov
cmps
mov
inc
add
sbb
add
add
add
add
add
pop
add
add
adc
adc
add
cld
rol
pop
add
lds
add
dec
mov
pop
add
add
les
aam
add
lds
add
or
add
or
add
add
sbb
add
add
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
or
cmps
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
aam
add
xlat
mov
add
icebp
or
add
add
add
or
add
mov
add
inc
or
add
add
add
add
dec
stos
pop
add
add
add
scas
pop
add
add
add
or
add
into
pop
add
add
add
rol
add
add
add
add
movs
rol
add
add
add
(bad)
pop
add
add
add
or
add
add
or
pop
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
add
add
mov
add
add
sub
add
add
mov
xor
add
or
iret
or
aad
sub
fimul
sub
in
or
icebp
or
inc
or
inc
or
dec
or
push
or
push
or
xchg
or
cwde
or
or
fisttp
addr16
adc
arpl
gs
add
push
fs
gs
add
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
add
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
add
arpl
ins
imul
arpl
jns
je
ins
add
add
pop
add
add
add
add
add
add
pop
add
add
add
mov
ret
ret
push
popa
ins
jne
push
jns
gs
lea
ret
ret
inc
outs
jne
add
xchg
add
xchg
add
xchg
add
ins
je
arpl
je
gs
gs
je
add
xchg
add
xchg
add
xchg
add
cwde
add
cdq
add
call
add
popf
add
sahf
add
lahf
add
add
ret
add
add
add
adc
add
add
push
add
ret
add
xchg
add
ret
add
lahf
add
or
add
add
dec
gs
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
add
sbb
add
add
adc
add
add
add
adc
add
add
pop
add
push
add
jg
add
add
sbb
add
cdq
add
ret
add
popf
add
ret
add
add
add
add
outs
je
jb
jae
add
add
add
adc
adc
add
popa
jb
push
je
arpl
jb
ins
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
add
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
add
add
push
jo
outs
popa
fs
gs
jb
dec
outs
imul
arpl
push
jns
je
ins
cs
bound
push
gs
imul
popa
jo
je
jo
ins
imul
je
arpl
add
jae
gs
cs
bound
push
gs
imul
outs
je
arpl
jae
push
gs
jb
imul
imul
add
pushf
add
ret
add
lahf
add
dec
inc
imul
ins
add
add
add
push
add
gs
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
inc
je
jb
bound
add
add
gs
jbe
ins
jne
pop
pop
add
add
add
bound
outs
js
add
jae
gs
cs
gs
inc
js
gs
imul
add
je
outs
outs
popa
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
jns
je
ins
cs
ins
ins
add
ins
push
jb
je
jb
dec
imul
jbe
outs
je
popa
outs
fs
gs
push
jns
add
arpl
imul
je
outs
outs
add
jae
gs
cs
arpl
imul
outs
fs
inc
add
push
arpl
dec
dec
dec
data16
je
inc
js
gs
imul
imul
push
outs
jb
arpl
outs
jb
lldt
add
add
add
add
add
add
add
add
test
ret
ret
add
add
mov
inc
gs
jb
arpl
fs
jae
add
jb
gs
xor
cs
ins
add
mov
ret
inc
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
fs
outs
jbe
imul
outs
jbe
imul
popa
outs
fs
add
jae
outs
fs
outs
jne
je
inc
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
gs
je
inc
jae
outs
arpl
jae
ins
je
ins
jo
bound
inc
jbe
outs
je
fs
imul
outs
fs
dec
imul
je
add
add
add
push
add
lar
adc
add
add
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
sbb
add
add
sbb
add
add
add
jg
add
add
ret
add
add
ret
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
pop
add
nop
add
ret
add
xchg
add
ret
add
xchg
add
ret
add
xchg
add
ret
add
cdq
add
ret
add
fwait
add
ret
add
popf
add
ret
add
add
add
add
add
add
add
add
add
push
add
adc
add
add
sbb
add
add
sbb
add
add
ret
add
add
ret
add
xchg
add
xchg
add
gs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
mov
add
pop
add
jae
ins
bound
ret
add
xchg
add
ret
add
xchg
add
ret
add
xchg
add
ret
add
xchg
add
ret
add
pushf
add
ret
add
lahf
add
add
add
push
add
pop
add
or
push
add
adc
adc
inc
gs
bound
arpl
je
add
jb
popa
ins
imul
dec
outs
outs
add
jb
popa
ins
imul
gs
add
add
pop
add
sbb
sbb
sbb
sbb
sbb
add
add
add
jg
add
add
add
test
ret
add
xchg
ret
add
mov
push
push
inc
js
gs
imul
je
jb
jae
push
jns
je
ins
cs
push
imul
add
push
gs
js
gs
imul
je
jb
jae
ret
add
mov
ret
add
mov
ret
add
je
gs
gs
push
dec
add
outs
jae
dec
inc
add
je
bound
jno
gs
add
bound
jno
gs
add
imul
jae
jb
gs
jb
add
ins
outs
popa
fs
gs
jb
xor
fs
je
add
popa
imul
imul
popa
ins
add
imul
fs
jns
jne
bound
add
xchg
add
ret
add
xchg
add
inc
gs
gs
imul
gs
gs
xor
cs
ins
ins
add
xchg
add
inc
gs
jns
je
ins
dec
gs
imul
jb
xor
fs
ins
add
xchg
add
inc
gs
jns
je
ins
dec
outs
outs
add
xchg
add
ret
add
cdq
add
ret
add
fwait
add
ret
add
popa
ins
jae
inc
gs
popa
jae
inc
outs
fs
je
imul
jo
jae
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
bound
jb
imul
imul
imul
push
push
je
je
arpl
je
imul
push
inc
push
push
inc
je
jb
bound
add
arpl
imul
arpl
inc
je
jb
bound
add
popa
jo
outs
arpl
outs
je
gs
outs
fs
je
jb
bound
add
ins
inc
ins
gs
outs
je
je
jb
bound
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
mov
in
call
in
stos
call
gs
jne
arpl
add
fs
js
cs
outs
jb
xor
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
outs
ins
gs
outs
add
je
xor
inc
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
arpl
jae
push
jns
je
ins
cs
imul
imul
push
jb
arpl
jae
jae
jns
popa
ins
add
je
add
arpl
imul
je
ins
cs
gs
add
je
inc
gs
jne
je
inc
gs
jns
gs
push
je
imul
pop
dec
outs
addr16
add
jb
jns
push
je
ins
jae
dec
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
jo
inc
jb
popa
jns
addr16
inc
push
inc
dec
dec
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
xor
cmp
inc
gs
jbe
inc
jns
gs
push
imul
dec
popa
outs
popa
gs
ins
ins
gs
imul
imul
pop
dec
outs
fs
jo
gs
outs
fs
gs
je
inc
arpl
jo
outs
jb
inc
jb
jo
outs
push
je
gs
ins
add
jb
popa
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
popa
add
outs
jae
add
je
push
push
inc
cmp
inc
gs
je
imul
gs
arpl
outs
add
jbe
jb
outs
add
outs
arpl
add
arpl
jns
inc
gs
gs
add
gs
je
jb
add
ins
jo
jb
push
je
imul
arpl
jae
je
jb
dec
outs
outs
add
je
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
inc
jb
popa
je
dec
outs
push
imul
je
jb
add
ins
add
je
je
jb
bound
gs
inc
imul
bound
gs
push
jb
push
arpl
je
add
gs
jb
jb
push
arpl
jb
jb
push
gs
jb
push
arpl
jb
jb
inc
jb
popa
je
push
jb
push
arpl
jb
jb
push
je
gs
ins
push
jb
je
jb
jae
je
inc
jne
outs
inc
ins
jne
push
je
add
jbe
jb
outs
ins
outs
je
addr16
dec
gs
imul
je
jb
je
jb
push
push
inc
jo
push
imul
add
gs
je
inc
imul
jns
inc
imul
jns
outs
outs
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
jo
ins
imul
add
je
inc
js
arpl
popa
bound
popa
je
add
je
push
je
jb
dec
outs
outs
add
je
inc
imul
jae
je
push
jae
push
push
js
arpl
add
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
dec
outs
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
outs
jo
je
inc
outs
outs
jbe
jb
imul
add
imul
outs
jbe
jb
imul
jo
add
imul
je
addr16
dec
popa
jae
js
je
add
ins
ins
add
jne
push
popa
je
dec
bound
arpl
gs
popa
je
inc
imul
dec
popa
je
inc
gs
dec
popa
je
push
gs
dec
popa
je
inc
popa
ins
ins
add
fs
jo
add
gs
add
gs
inc
gs
js
arpl
imul
ins
bound
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
outs
imul
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
jo
jns
inc
gs
bound
arpl
gs
gs
outs
ins
jo
je
jb
addr16
inc
imul
ins
add
ins
gs
jns
je
ins
push
jb
js
add
arpl
jae
data16
push
imul
jae
arpl
dec
jns
gs
imul
imul
je
jae
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
gs
je
add
je
je
add
add
ins
ins
arpl
gs
jb
arpl
jae
jns
add
je
jne
jb
outs
je
jb
arpl
jae
push
dec
outs
je
xor
push
jb
arpl
jae
outs
fs
add
outs
ja
jb
push
je
jb
jae
imul
inc
popa
jae
inc
fs
jae
add
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
outs
jbe
dec
gs
add
je
dec
outs
fs
gs
push
jb
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
addr16
dec
outs
fs
gs
popa
ins
add
jb
add
jb
popa
je
push
imul
outs
push
dec
outs
je
xor
dec
jae
jne
ins
dec
jb
ins
jo
jns
inc
imul
je
jb
push
outs
dec
outs
je
xor
push
outs
dec
outs
je
add
data16
inc
ins
outs
arpl
outs
jo
add
gs
fs
je
jb
add
je
dec
jae
popa
arpl
jb
jne
add
je
add
je
inc
jne
jb
outs
je
push
add
jb
outs
push
je
jne
je
jb
add
gs
inc
ins
outs
bound
add
ins
outs
arpl
ins
outs
bound
add
jb
imul
pop
dec
popa
push
jb
push
imul
imul
je
push
imul
arpl
dec
popa
arpl
outs
add
imul
jns
dec
jo
outs
push
jne
dec
gs
inc
gs
popa
ins
jne
add
gs
je
inc
outs
arpl
jo
outs
jb
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
gs
imul
pop
dec
outs
ja
addr16
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
je
push
outs
jae
je
outs
outs
add
imul
gs
imul
add
outs
add
je
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
imul
arpl
push
outs
inc
jb
popa
jns
dec
outs
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
je
dec
gs
popa
add
je
xor
dec
popa
js
push
jb
je
inc
jns
add
inc
inc
jb
jo
outs
push
gs
imul
imul
ins
ins
gs
imul
imul
ins
pop
ins
ins
push
je
imul
gs
je
dec
gs
inc
outs
gs
je
dec
push
add
je
dec
gs
addr16
dec
push
add
arpl
jo
add
jns
add
jne
push
ins
inc
ins
outs
arpl
inc
ins
gs
jb
inc
jb
jo
outs
addr16
jo
imul
je
outs
outs
add
ins
bound
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
pop
inc
jno
popa
ins
imul
add
jo
gs
push
dec
outs
je
xor
push
dec
outs
je
add
jns
add
outs
je
xor
push
dec
outs
je
je
add
dec
outs
je
xor
inc
outs
fs
imul
gs
outs
outs
add
je
dec
popa
ins
add
je
dec
jae
je
je
arpl
addr16
inc
imul
add
je
dec
popa
jae
ins
gs
outs
je
jns
add
je
ins
gs
outs
je
jns
add
je
dec
jae
jns
data16
imul
bound
gs
je
imul
pop
dec
jae
outs
imul
gs
dec
jae
jb
popa
jns
inc
gs
jb
popa
jns
popa
outs
imul
gs
jns
add
je
dec
jae
jb
ins
imul
je
inc
jne
ins
dec
popa
ins
add
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
je
dec
jae
popa
ins
jne
push
jns
add
je
dec
outs
fs
add
fs
add
je
dec
jae
outs
jne
add
je
dec
je
ins
add
data16
outs
arpl
jno
popa
ins
jae
addr16
inc
outs
jne
je
inc
fs
je
inc
jae
gs
bound
addr16
dec
gs
fs
je
push
outs
imul
addr16
dec
popa
outs
imul
fs
add
je
dec
outs
fs
gs
gs
imul
outs
outs
je
imul
inc
gs
popa
ins
add
jae
ins
bound
popa
ins
add
pop
dec
outs
gs
popa
ins
imul
dec
popa
ins
gs
popa
arpl
dec
popa
jae
dec
outs
fs
data16
bound
jb
outs
add
jo
popa
arpl
addr16
inc
push
inc
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
jae
gs
bound
jae
push
push
inc
cmp
arpl
imul
push
gs
push
jb
je
jb
dec
gs
jne
add
je
inc
outs
fs
popa
jae
add
je
dec
gs
add
jns
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
addr16
push
gs
imul
je
inc
ins
gs
outs
je
je
imul
pop
dec
push
push
gs
imul
jb
je
outs
addr16
jns
je
ins
add
je
push
ins
popa
je
outs
jb
add
popa
je
outs
jb
dec
inc
add
je
dec
outs
outs
gs
js
gs
imul
gs
add
je
inc
popa
je
add
imul
jb
add
outs
je
imul
ins
ins
arpl
outs
add
outs
jne
gs
bound
inc
gs
imul
imul
arpl
outs
je
push
jb
je
push
je
jb
inc
outs
arpl
outs
je
push
jo
imul
jae
outs
ins
inc
je
jb
bound
gs
addr16
push
popa
outs
imul
gs
outs
addr16
add
je
imul
imul
ins
popa
addr16
addr16
dec
jae
imul
gs
dec
jae
outs
imul
gs
inc
popa
jae
push
jns
add
je
push
je
arpl
jb
arpl
push
jb
ins
add
fs
data16
popa
arpl
jb
arpl
addr16
inc
jb
ins
gs
outs
jne
je
inc
gs
jb
ins
add
popa
arpl
jb
ins
add
je
dec
dec
data16
je
push
push
inc
bound
je
js
gs
imul
push
popa
ins
jne
add
je
outs
je
xor
inc
gs
gs
outs
add
je
outs
fs
popa
jae
add
imul
imul
gs
dec
je
ins
add
fs
popa
jae
add
imul
imul
pusha
xor
push
outs
push
gs
js
gs
imul
je
popa
outs
fs
gs
push
push
inc
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
outs
push
gs
js
gs
imul
pop
push
push
inc
js
gs
imul
push
jns
gs
addr16
inc
js
gs
imul
pop
inc
js
gs
imul
arpl
gs
dec
jae
gs
imul
add
imul
outs
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
gs
gs
outs
add
je
outs
fs
outs
outs
add
je
inc
js
je
outs
fs
outs
outs
ins
gs
outs
add
bound
imul
je
arpl
add
je
push
jb
add
je
push
imul
dec
je
jo
bound
jno
gs
add
je
push
gs
imul
je
push
gs
imul
je
jae
je
inc
js
arpl
xor
outs
je
outs
jne
add
jo
imul
inc
js
gs
imul
jo
bound
imul
je
arpl
add
je
push
jb
js
add
imul
inc
ins
gs
outs
je
push
jb
je
inc
outs
fs
ins
gs
outs
je
add
add
pop
dec
add
test
lods
dec
test
arpl
data16
data16
data16
data16
data16
data16
data16
data16
data16
add
push
add
inc
add
add
and
xor
inc
add
add
xor
inc
add
add
add
aaa
add
cmp
add
aaa
add
inc
add
add
ins
add
add
xor
dec
add
pop
add
jo
imul
add
inc
add
xor
ja
cmp
pop
dec
add
arpl
imul
arpl
xor
push
add
add
push
add
xor
jne
pop
add
add
add
add
ja
add
jbe
push
add
pop
add
jp
aaa
add
inc
add
push
add
add
bound
ja
cmp
add
inc
add
add
inc
add
pop
add
add
push
add
sub
inc
add
pop
add
inc
add
add
cmp
outs
add
jbe
xor
cmp
add
add
cmp
dec
add
dec
add
add
ja
push
add
xor
cmp
add
pop
add
outs
add
ja
popa
add
push
add
inc
add
arpl
xor
add
inc
add
add
cmp
add
sbb
jae
imul
outs
add
add
add
jae
add
xor
add
jno
xor
pop
add
pop
add
outs
add
add
inc
add
dec
add
aaa
add
outs
add
inc
add
ja
cmp
add
add
arpl
ins
add
xor
imul
add
js
ja
ja
cmp
dec
add
data16
data16
add
add
jbe
xor
add
add
jno
pop
add
outs
add
ja
popa
add
push
add
inc
add
arpl
xor
add
inc
add
add
cmp
add
popa
add
add
add
add
js
add
xor
jns
add
push
add
inc
add
je
outs
add
jns
jae
jp
inc
add
jb
jp
outs
add
push
add
add
add
jo
pop
add
add
xor
add
add
add
das
add
add
arpl
push
pop
add
jno
pop
add
add
ins
add
push
add
or
add
popa
add
xor
outs
add
add
je
outs
add
pop
add
add
pop
add
add
outs
add
cmp
xor
outs
add
add
cmp
sbb
ins
add
outs
add
je
and
das
add
add
add
add
add
xor
add
cmp
js
inc
add
xor
jbe
push
add
inc
add
add
add
dec
add
ja
bound
push
add
dec
add
dec
add
add
dec
add
je
jp
jns
outs
add
inc
add
cmp
push
add
ja
inc
add
push
add
pop
add
push
add
add
dec
add
add
dec
add
push
add
jp
outs
add
add
jns
cmp
cmp
jne
inc
add
add
xor
pop
add
imul
inc
add
xor
pop
add
ja
cmp
xor
add
inc
add
inc
add
dec
add
add
push
add
xor
add
add
add
inc
add
inc
add
or
jl
jl
and
sub
add
jo
jo
add
je
popa
add
add
add
jbe
xor
push
add
jp
pop
add
ja
dec
add
xor
xor
dec
add
inc
add
add
jae
push
sub
push
add
ins
add
arpl
js
inc
add
xor
xor
data16
xor
pop
add
add
add
arpl
jno
inc
add
xor
xor
dec
add
add
inc
add
dec
add
dec
add
add
inc
add
add
xor
add
je
popa
add
je
and
das
add
and
and
and
and
and
add
and
add
sub
add
add
arpl
ins
add
add
js
add
pop
arpl
outs
add
add
add
and
add
jo
and
pop
and
and
and
add
and
and
das
add
add
push
add
dec
add
add
add
jo
add
or
add
and
and
add
jo
add
add
add
or
add
add
add
add
push
add
inc
add
add
xor
ja
ins
add
add
add
push
add
dec
add
add
add
add
das
add
ja
push
add
push
add
add
add
dec
add
push
add
dec
add
pop
add
das
add
inc
add
sub
jae
pop
add
dec
add
add
imul
add
jne
push
add
jns
push
jae
pop
add
inc
add
bound
add
add
xor
xor
push
add
inc
add
pop
add
imul
popa
add
add
add
push
add
add
dec
add
xor
jo
cmp
imul
outs
add
outs
add
add
add
das
add
data16
push
add
add
inc
add
push
add
dec
add
jns
ins
add
or
add
add
add
add
add
sub
cmp
js
aaa
add
xor
outs
add
je
push
add
dec
add
add
add
dec
add
jo
jo
outs
add
pop
add
push
add
add
add
xor
add
add
ja
dec
add
cmp
ja
pop
add
push
add
inc
add
add
data16
add
pop
add
add
add
add
inc
add
pop
dec
add
inc
add
add
push
add
add
add
dec
add
add
bound
aaa
add
jb
sub
inc
add
js
xor
dec
add
js
push
add
jo
push
add
add
push
add
imul
inc
add
ja
xor
add
add
imul
push
add
arpl
jb
imul
add
push
add
sbb
add
je
add
push
add
add
je
add
jb
add
je
push
add
je
push
add
jo
popa
add
add
outs
add
imul
outs
add
add
je
push
add
add
outs
add
jae
add
push
add
outs
add
add
push
add
add
add
or
popa
add
add
pop
xor
add
and
ins
add
outs
add
add
ins
add
outs
add
xor
cmp
bound
push
add
pop
add
js
push
add
push
add
add
push
add
jns
sub
aaa
add
xor
add
ins
sbb
push
sub
dec
add
jno
pop
add
outs
add
ja
popa
add
push
add
inc
add
arpl
xor
add
inc
add
add
cmp
or
add
js
add
pop
data16
data16
add
jae
add
jae
add
jae
add
add
and
outs
add
add
data16
add
and
and
and
and
add
js
add
and
and
add
add
dec
add
js
xor
xor
add
push
add
xor
jbe
dec
add
push
add
bound
push
add
dec
add
dec
add
xor
add
jb
dec
add
inc
add
jne
arpl
outs
add
add
add
ja
cmp
add
inc
add
add
dec
add
xor
add
add
dec
add
js
outs
add
add
das
add
cmp
or
adc
or
jbe
pop
add
add
add
pop
add
outs
add
add
imul
dec
add
dec
add
dec
add
popa
add
push
add
add
add
dec
add
add
imul
cmp
push
add
add
inc
add
push
add
dec
add
add
add
jb
dec
add
ins
add
add
add
popa
add
inc
add
aaa
add
add
outs
add
push
add
pcmpeqb
ins
add
add
js
add
xor
xor
inc
add
add
add
data16
push
add
push
add
add
pop
add
dec
add
xor
add
cmp
pop
xor
jns
add
je
je
imul
pop
add
sub
inc
add
js
push
add
push
add
xor
add
add
pop
add
add
push
jae
ja
inc
add
pop
add
dec
add
dec
add
jb
pop
add
add
cmp
add
add
sub
cmp
jo
push
add
bound
arpl
dec
add
add
inc
add
jne
cmp
push
add
dec
add
push
add
push
add
ja
add
push
add
push
add
das
add
add
add
add
jne
push
add
dec
add
das
add
push
add
add
push
add
add
popa
add
pop
add
dec
add
add
push
add
inc
add
inc
add
jbe
add
pop
add
inc
add
xor
jne
dec
add
dec
add
cmp
add
xor
outs
add
dec
add
jbe
xor
add
add
inc
add
push
add
ja
dec
add
push
add
add
js
dec
add
dec
add
add
push
add
add
imul
add
jp
aaa
add
add
inc
add
add
jae
data16
data16
add
add
data16
popa
add
pop
add
add
add
popa
add
data16
popa
add
pop
aaa
add
xor
jns
inc
add
pop
add
dec
add
push
add
push
add
add
arpl
dec
add
inc
add
js
inc
add
push
add
xor
popa
add
dec
add
xor
xor
xor
add
js
ja
dec
add
push
add
cmp
add
jae
data16
add
add
popa
add
data16
popa
add
pop
add
jae
data16
add
jae
data16
popa
add
sbb
add
data16
add
add
data16
popa
add
xor
jp
das
add
add
add
add
popa
add
push
add
inc
add
dec
add
add
ja
bound
dec
add
cmp
xor
push
add
jns
inc
add
add
push
add
push
add
je
dec
add
popa
add
das
add
push
add
push
add
cmp
pop
add
jae
add
xor
add
jne
xor
inc
add
push
add
dec
add
cmp
popa
add
data16
inc
add
ja
inc
add
cmp
pop
aaa
add
jb
push
add
sub
xor
inc
add
jb
xor
inc
add
bound
data16
push
add
dec
add
ins
add
push
add
add
push
add
je
push
add
inc
add
push
add
add
add
xor
add
cmp
add
imul
add
push
add
add
inc
add
add
push
add
add
inc
add
jp
push
add
add
add
push
add
dec
add
inc
add
add
imul
add
imul
dec
add
push
add
inc
add
add
push
add
add
dec
add
add
cmp
pop
add
popa
add
add
js
dec
add
dec
add
xor
add
add
arpl
inc
add
add
imul
jp
jo
dec
add
pop
add
xor
inc
add
pop
add
add
push
add
pop
add
imul
add
add
ins
add
dec
add
jae
js
imul
add
push
add
add
jo
data16
push
add
jbe
dec
add
jne
inc
add
ins
add
jo
cmp
aaa
add
push
add
add
add
inc
add
add
inc
add
jns
push
add
jae
dec
add
push
dec
add
add
data16
jbe
ja
dec
add
das
add
add
outs
add
popa
add
push
add
add
jbe
jb
dec
add
xor
push
add
add
cmp
push
add
imul
add
inc
add
add
inc
add
add
add
data16
dec
add
add
cmp
or
add
xor
jge
and
add
and
add
data16
popa
add
adc
add
add
add
add
add
add
add
add
add
push
add
popa
add
je
inc
add
jae
add
bound
ins
add
add
push
add
je
push
add
data16
add
jb
add
add
add
add
popa
add
add
cmp
data16
add
jb
add
add
ja
add
xor
xor
dec
add
add
pop
add
add
add
popa
add
add
or
popa
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
xor
xor
xor
add
add
add
add
jae
and
je
add
jo
ins
add
je
add
add
popa
add
and
outs
add
je
and
jo
jb
outs
add
add
ins
add
and
jo
jb
outs
add
add
jae
add
add
jns
and
push
add
popa
add
je
inc
add
jae
add
bound
ins
add
add
add
and
xor
xor
xor
xor
add
add
and
xor
xor
cmp
sub
add
add
outs
add
jb
jns
jo
je
imul
and
imul
outs
add
je
and
popa
add
popa
add
ins
add
bound
ins
add
and
outs
add
and
je
push
add
add
outs
add
jo
jne
je
add
add
add
outs
add
and
outs
add
add
add
add
add
outs
add
je
popa
add
add
add
add
and
dec
add
add
and
inc
add
arpl
jb
jns
jo
je
imul
and
push
add
arpl
imul
add
outs
add
add
jb
add
jb
and
je
outs
add
add
jae
add
add
add
and
jb
add
outs
add
je
imul
and
data16
popa
add
add
add
add
adc
push
add
add
add
add
add
cmp
and
add
add
inc
add
add
push
add
ins
add
add
add
dec
add
add
ins
add
jae
add
push
add
inc
add
push
add
xor
jno
cmp
data16
arpl
push
add
xor
dec
add
inc
add
add
sub
dec
add
inc
add
inc
add
add
data16
arpl
dec
add
add
jb
add
inc
add
aaa
add
imul
popa
add
push
add
imul
data16
cmp
outs
add
imul
add
push
add
xor
dec
add
inc
add
ins
add
add
add
add
add
add
add
dec
add
pop
add
pop
add
dec
add
add
add
push
add
add
dec
add
pop
add
inc
add
add
push
add
arpl
pop
add
bound
dec
add
sub
dec
add
outs
add
aaa
add
jo
push
add
ja
dec
add
inc
add
jo
dec
add
add
inc
add
add
push
add
push
add
add
add
dec
add
add
add
add
add
xor
inc
add
ins
add
xor
aaa
add
jbe
xor
push
add
add
inc
add
dec
add
inc
add
add
add
outs
add
add
add
add
inc
add
jo
outs
add
add
je
add
push
add
inc
add
das
add
js
jo
outs
add
add
je
add
das
add
push
add
dec
add
jns
push
add
ins
add
add
add
dec
add
add
add
xor
add
add
add
add
sub
add
xor
sub
add
add
add
add
add
add
arpl
data16
add
xor
aaa
add
add
add
add
add
aaa
add
add
add
add
add
add
xor
xor
xor
sub
add
xor
sub
add
add
xor
xor
xor
add
add
add
pop
inc
add
push
add
andnps
dec
add
inc
add
inc
add
add
inc
add
inc
add
dec
add
add
add
push
add
inc
add
add
push
add
ins
add
add
add
pop
cmp
das
add
push
add
dec
add
jns
push
add
ins
add
add
add
add
imul
sub
sub
and
dec
add
data16
jb
ins
add
je
imul
and
outs
add
je
and
jb
add
outs
add
je
add
add
outs
add
and
jae
add
jne
jb
imul
and
jb
add
jae
outs
add
jae
and
sub
sub
sub
add
inc
add
add
add
or
push
add
je
add
popa
add
add
add
xor
add
inc
add
push
add
data16
(bad)
add
imul
add
add
push
add
outs
add
add
dec
add
ins
add
sbb
jns
jae
je
add
add
je
jb
imul
add
add
sub
xor
js
add
and
sub
xor
js
add
jge
add
push
add
ins
add
add
add
add
ins
add
dec
add
or
popa
add
add
push
push
add
popa
add
je
inc
add
jae
add
bound
ins
add
add
je
je
jb
imul
je
add
add
outs
add
add
add
add
inc
add
add
imul
je
add
add
add
push
add
jo
add
add
dec
add
adc
jae
jae
add
bound
ins
add
add
ins
add
arpl
outs
add
ins
add
bound
add
sub
add
das
add
adc
add
add
popa
add
add
pop
dec
add
add
add
push
add
push
add
add
add
js
arpl
add
je
imul
push
add
jo
outs
add
je
add
jae
add
bound
ins
add
dec
add
adc
add
add
add
add
add
add
add
dec
add
adc
add
outs
add
je
dec
add
adc
jae
add
bound
ins
add
add
add
inc
add
add
inc
add
jae
add
or
add
jae
add
inc
add
jae
je
outs
add
push
add
outs
add
add
je
imul
add
jae
je
outs
add
push
add
outs
add
add
je
jns
add
inc
add
add
arpl
push
add
imul
jae
add
inc
add
add
arpl
push
add
imul
add
dec
add
jns
add
inc
add
ins
add
dec
add
ins
add
add
outs
add
je
push
add
jb
outs
add
add
inc
add
je
popa
add
and
jns
jae
je
add
dec
add
data16
jb
ins
add
je
imul
add
push
add
add
jae
imul
add
dec
add
push
add
jb
jae
imul
add
dec
add
push
add
add
add
jb
ins
add
inc
add
pop
push
add
jb
jbe
imul
push
add
arpl
imul
adc
add
jbe
add
push
add
add
add
add
pop
pop
add
add
add
push
add
jb
imul
add
add
add
outs
add
adc
popa
add
imul
add
popa
add
add
and
ins
add
jb
je
push
add
add
imul
add
popa
add
add
add
push
add
ins
add
jbe
add
add
popa
add
add
add
push
add
je
popa
add
add
popa
add
add
inc
add
jne
outs
add
adc
add
add
add
inc
add
adc
dec
add
data16
jae
add
daa
inc
add
arpl
add
je
imul
push
add
add
imul
add
jo
je
push
add
push
add
je
jae
add
popa
add
imul
add
popa
add
add
adc
add
add
popa
add
add
add
inc
add
jne
outs
add
pop
inc
add
jae
add
bound
ins
add
dec
add
add
adc
jne
ins
add
add
ins
add
add
dec
add
push
add
je
inc
add
data16
aaa
inc
add
dec
add
je
inc
add
jo
je
jne
jb
add
imul
add
inc
add
add
imul
je
add
sub
add
outs
add
add
jo
je
jne
jb
add
je
je
jb
imul
je
add
add
pop
dec
add
outs
add
ins
add
jb
popa
add
ins
add
add
dec
add
jb
add
or
bound
popa
add
add
adc
js
arpl
add
je
imul
add
dec
add
jae
jae
popa
add
add
daa
inc
add
arpl
add
je
imul
push
add
add
imul
add
popa
add
add
add
add
je
push
add
xor
push
add
and
xor
xor
xor
add
add
add
xor
jge
and
inc
add
add
add
jnp
xor
cmp
js
xor
jge
add
add
jae
add
data16
je
inc
add
outs
add
add
outs
add
add
jae
add
jae
add
data16
dec
jbe
xor
add
add
add
add
add
add
add
jb
outs
add
and
xor
xor
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
aaa
push
add
push
add
add
add
js
arpl
add
je
imul
add
add
add
add
inc
add
aaa
push
add
push
add
add
add
js
arpl
add
je
imul
add
dec
add
data16
jae
add
dec
push
add
push
add
add
add
js
arpl
add
je
imul
add
js
arpl
add
je
imul
push
add
add
imul
add
jo
je
push
add
push
add
add
add
js
arpl
add
je
imul
add
bound
push
add
je
jae
add
add
add
push
add
push
add
add
add
js
arpl
add
je
imul
add
bound
push
add
je
jae
pop
add
xor
jge
pop
add
pop
and
sub
aas
inc
add
jne
ins
add
add
outs
add
add
add
add
imul
imul
and
je
push
add
bound
add
je
add
push
add
add
add
js
arpl
add
je
imul
add
add
popa
add
je
inc
add
jae
add
bound
ins
add
add
ins
add
jb
je
inc
add
arpl
add
je
imul
jae
inc
add
jb
add
and
jb
add
imul
jae
inc
add
arpl
add
je
imul
add
xor
xor
bound
data16
add
add
add
add
add
add
add
add
add
add
je
popa
add
add
outs
add
jb
popa
add
add
outs
add
imul
add
xor
jae
je
add
add
imul
outs
add
jae
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
cmovae
jne
jb
jb
add
je
add
push
add
jne
je
add
ja
outs
add
or
add
add
sub
ins
add
popa
add
add
jo
outs
add
je
dec
add
add
outs
add
add
jae
ins
add
add
inc
add
je
push
add
jb
jbe
add
push
add
dec
add
sbb
jo
outs
add
je
imul
add
jae
ins
add
add
push
add
ins
add
popa
add
add
jo
outs
add
je
xor
add
inc
add
outs
add
outs
add
add
outs
add
outs
add
arpl
je
and
je
outs
add
add
add
jae
add
jbe
imul
add
add
je
je
outs
add
adc
push
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
inc
push
add
cmp
das
add
add
popa
add
add
jae
add
jbe
imul
add
add
add
popa
add
add
add
outs
add
das
add
add
mov
mov
rcl
aas
pop
jg
aad
cmp
mov
pop
push
sbb
mov
push
adc
or
push
adc
or
push
adc
xor
sbb
adc
push
adc
add
adc
push
or
push
adc
add
sbb
push
or
push
push
add
sbb
add
adc
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
sbb
or
push
or
adc
sub
push
adc
push
add
adc
add
adc
add
push
adc
cmp
adc
or
push
adc
adc
push
adc
add
sbb
adc
push
sbb
push
adc
adc
dec
or
adc
sub
push
adc
pop
push
adc
or
push
adc
and
push
adc
lock
adc
push
adc
push
add
sbb
push
adc
pop
add
adc
sbb
push
adc
sub
add
pop
add
add
cmp
adc
add
add
add
add
or
and
add
and
or
and
push
add
add
add
add
push
pop
add
sbb
add
add
push
pop
adc
add
add
push
pop
add
add
cmp
or
add
push
add
sbb
add
add
add
push
add
add
dec
add
add
sbb
sbb
or
adc
adc
pop
and
add
or
pop
or
add
or
or
push
push
sbb
add
sbb
adc
inc
adc
cmp
popa
sbb
and
add
adc
adc
pop
adc
or
push
push
sbb
add
sbb
adc
inc
adc
cmp
and
adc
or
or
adc
adc
or
add
adc
adc
adc
and
or
adc
push
and
adc
or
adc
pop
and
add
or
pop
or
add
add
and
pop
sbb
add
pop
push
and
add
sbb
or
pop
push
and
or
sbb
adc
or
popa
sbb
and
or
pop
add
or
pop
adc
or
or
adc
or
add
or
or
add
pop
sbb
or
popa
sbb
and
or
or
pop
push
and
or
adc
or
add
pop
or
popa
sbb
and
add
or
add
pop
adc
inc
or
popa
sbb
and
add
adc
pop
and
add
adc
and
adc
adc
add
add
add
and
or
popa
sbb
and
add
or
add
add
add
add
or
add
gs
push
add
sbb
add
sbb
and
or
and
add
add
sbb
push
or
and
add
sub
and
add
or
add
sbb
add
or
and
adc
pop
and
add
and
add
add
and
pop
and
add
and
add
or
and
or
and
add
cmp
and
add
push
and
add
cmp
and
add
add
add
add
adc
add
or
add
adc
and
add
push
and
add
or
and
add
push
push
or
add
adc
cmp
add
sbb
and
add
sub
imul
sub
add
adc
and
or
and
and
add
push
add
add
push
add
ins
add
add
ins
add
add
add
cmp
adc
add
sub
and
add
push
add
push
add
in
and
add
pop
and
add
push
add
and
sbb
and
adc
and
adc
sbb
sub
and
pop
sbb
sub
popa
sbb
and
add
pop
add
add
add
and
add
sbb
cmp
adc
and
add
add
pop
sbb
add
and
add
jno
jne
and
or
add
add
cmp
adc
add
cmp
add
adc
add
sbb
sbb
add
add
cmp
sbb
add
add
cmp
sbb
or
or
adc
sbb
sbb
add
add
cmp
sbb
sbb
push
add
add
cmp
sbb
sbb
sbb
add
add
cmp
add
pop
push
adc
push
and
add
xor
and
add
cmp
add
add
adc
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
add
push
outs
ins
popa
outs
popa
addr16
outs
fs
adc
and
add
jns
and
add
jge
and
adc
and
add
pop
pop
and
add
cmp
add
sbb
and
add
push
or
add
add
add
push
push
push
push
and
add
adc
sbb
adc
push
adc
sub
or
add
add
adc
adc
add
and
add
dec
push
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
add
add
add
add
add
dec
add
or
add
aaa
xor
xor
xor
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
add
push
push
add
popa
ins
adc
imul
arpl
outs
popa
jo
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
add
dec
popa
ins
gs
gs
jb
imul
imul
push
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
inc
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
gs
gs
push
dec
add
sbb
add
add
inc
popa
je
push
jns
gs
popa
jae
ss
imul
add
je
jo
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
outs
popa
fs
gs
jb
xor
add
adc
or
adc
or
adc
xor
add
adc
pop
add
or
or
add
sbb
add
add
add
add
or
add
push
push
adc
add
adc
add
add
add
add
pop
add
add
add
add
sbb
or
add
add
int
and
sbb
add
adc
adc
adc
sbb
or
sbb
add
add
add
sbb
add
add
adc
adc
add
add
adc
cmp
and
push
sbb
pop
adc
push
adc
xor
add
sbb
and
push
sbb
sbb
add
push
add
add
add
or
push
add
add
push
push
push
push
push
and
add
or
or
add
add
adc
adc
push
push
push
push
push
adc
or
or
sbb
add
add
push
or
add
push
adc
pop
or
push
push
push
adc
or
pop
add
push
push
push
push
push
add
adc
add
or
sbb
add
push
adc
pop
sbb
adc
sbb
adc
add
add
add
push
push
sbb
adc
add
sbb
adc
sbb
adc
add
and
sbb
push
sbb
sbb
push
adc
push
sbb
sbb
or
sbb
adc
add
adc
add
sbb
sbb
push
add
add
add
add
add
dec
pop
and
add
sbb
add
push
push
add
add
sbb
push
push
push
add
or
add
or
sbb
pop
add
adc
adc
pop
sbb
push
or
add
sbb
add
add
add
add
add
push
add
add
je
add
adc
add
add
or
adc
or
adc
adc
push
push
push
push
adc
add
push
adc
or
cmp
adc
add
add
push
add
add
add
jno
and
adc
sbb
sub
pop
add
or
add
add
pusha
add
add
fs
add
push
ins
add
add
jo
add
push
push
sbb
add
or
push
add
add
or
add
or
add
sbb
add
or
adc
or
or
and
add
add
adc
daa
adc
add
add
pop
sbb
adc
adc
je
push
adc
xor
add
sbb
or
sbb
or
sbb
inc
sbb
add
add
push
pop
add
dec
adc
add
sbb
push
add
sbb
adc
add
add
add
add
or
pop
add
or
add
adc
push
sbb
adc
and
push
sbb
adc
push
add
push
sbb
sbb
pop
add
or
adc
add
sbb
pop
add
adc
adc
or
add
adc
add
sbb
add
or
add
or
and
sbb
or
add
add
adc
and
pushf
adc
or
or
or
sbb
sbb
pushf
sbb
or
sbb
add
sbb
add
add
add
add
add
or
push
or
or
or
add
add
add
add
or
pop
or
or
or
sbb
or
push
pop
add
or
add
pop
add
or
adc
invd
or
or
or
or
or
sbb
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
or
or
pop
or
or
or
or
add
or
push
or
or
add
add
add
add
add
add
add
add
adc
pop
or
sub
add
sbb
add
or
sbb
adc
add
sbb
pop
or
add
push
add
push
add
add
add
cld
or
add
cmp
cmp
cmp
pop
add
cmp
add
add
push
or
add
adc
or
pop
add
add
ror
push
adc
sbb
adc
adc
dec
add
sub
adc
push
adc
or
adc
and
pop
add
add
add
sysret
or
or
pop
add
or
and
adc
add
adc
adc
push
push
sbb
push
adc
push
or
adc
adc
xor
or
sbb
and
add
add
or
add
ins
add
push
or
add
and
ins
or
inc
add
add
and
adc
adc
pop
and
add
add
add
add
or
fld
or
push
sysret
or
and
or
adc
push
add
add
or
pop
pop
add
or
add
or
loope
pop
add
ins
add
add
ins
or
add
adc
pop
add
add
inc
adc
add
adc
and
adc
adc
adc
pop
adc
push
sbb
and
adc
adc
adc
pop
adc
push
sbb
adc
push
adc
xor
fadd
mov
cmc
add
mov
stc
push
adc
cmp
adc
pop
adc
adc
add
and
sbb
add
push
add
aaa
adc
ins
push
push
push
adc
add
cmp
adc
adc
or
sbb
or
push
adc
adc
adc
inc
adc
or
xor
adc
adc
adc
push
adc
or
xor
adc
adc
adc
adc
adc
xor
and
sbb
and
sbb
add
adc
push
push
and
adc
add
xor
sbb
adc
push
add
adc
push
adc
or
or
sbb
xor
add
or
adc
adc
adc
or
imul
sbb
sbb
adc
add
add
add
or
pop
add
or
xor
adc
push
sbb
adc
or
adc
adc
add
lock
add
xor
xor
xor
pop
add
xor
or
adc
pop
add
push
adc
push
pop
and
add
sbb
push
add
push
push
and
sbb
adc
pop
add
adc
and
sbb
and
add
or
add
adc
adc
sbb
or
or
adc
adc
adc
sbb
add
add
adc
add
sub
push
push
add
sbb
push
add
pop
add
push
sbb
pop
add
cmp
add
cmp
and
adc
add
xor
sbb
adc
push
adc
add
sbb
xor
cmp
sbb
pop
add
push
pop
and
sbb
add
inc
or
add
add
add
sbb
add
sbb
adc
pop
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
cmp
rol
add
add
int
add
or
or
jle
mov
add
add
and
mov
(bad)
push
pop
inc
pop
pop
jg
bound
test
fiadd
add
push
jno
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
sbb
sbb
xor
and
daa
sub
inc
adc
and
jbe
xor
jl
xor
jp
adc
sbb
push
push
push
pop
inc
pop
pop
sub
jo
jp
fs
dec
repnz
add
adc
adc
jo
adc
jno
fs
inc
jne
push
pop
inc
pop
pop
aad
gs
pop
arpl
add
add
adc
add
jno
adc
add
push
push
pop
inc
pop
pop
jnp
gs
imul
add
inc
xchg
adc
add
add
jno
add
add
push
push
dec
inc
pop
pop
jnp
bound
jnp
cmp
add
adc
adc
jno
adc
jno
inc
push
push
push
pop
inc
pop
pop
jnp
gs
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
adc
pop
jnp
bound
jnp
fs
jno
jp
add
adc
jno
adc
add
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
add
ja
jo
add
adc
mov
jno
add
jbe
inc
push
push
push
pop
inc
pop
pop
jnp
bound
jnp
and
ja
outs
ins
add
sbb
adc
rcl
jno
add
jbe
inc
push
push
push
pop
inc
pop
pop
jnp
bound
jnp
es
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
test
adc
adc
adc
jno
xor
jno
dec
jno
inc
push
push
push
dec
inc
pop
pop
mov
scas
gs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
sub
add
cmp
jno
pop
pop
mov
adc
push
icebp
add
push
and
inc
pop
push
sti
or
jo
imul
add
add
adc
icebp
push
adc
jno
and
add
push
push
pop
inc
pop
dec
add
adc
fs
sub
add
adc
inc
adc
adc
pusha
ins
push
jno
inc
cmp
pop
dec
push
jae
push
dec
jo
dec
bound
add
add
adc
pop
push
pop
adc
pop
add
push
push
push
inc
pop
pop
jg
bound
jg
bound
add
wbinvd
cmp
cmp
and
jno
adc
jno
inc
push
jle
pop
inc
push
jo
or
jle
arpl
add
add
pop
jno
adc
adc
jno
push
jnp
inc
push
jl
dec
jb
pop
je
bound
jnp
jne
add
add
sbb
jno
aas
jno
and
jno
dec
push
push
inc
pop
push
pop
jnp
push
fs
add
adc
sahf
adc
adc
cmp
adc
jge
jae
pop
push
push
or
dec
popa
fs
add
or
adc
adc
jae
adc
sub
inc
pop
inc
push
jb
cmp
push
jnp
fs
add
add
push
std
adc
or
jnp
pop
adc
cmp
dec
pop
inc
push
push
push
or
jns
jae
add
add
xchg
adc
adc
jno
xchg
add
and
jo
or
pop
push
arpl
adc
add
jo
adc
adc
imul
adc
adc
push
xlat
inc
inc
pop
pop
outs
mov
je
adc
add
add
outs
adc
xchg
or
adc
pop
or
push
push
push
sub
pop
jnp
loop
je
addr16
inc
add
add
adc
cmp
adc
jno
cmp
add
(bad)
ja
inc
pop
sub
bound
hlt
pop
arpl
add
adc
adc
add
push
push
pop
add
push
dec
jb
pop
cmp
bound
jnp
sbb
add
pop
sub
adc
adc
adc
jno
sub
inc
fisttp
or
bound
pusha
dec
adc
add
xor
adc
int
adc
jno
push
jb
pop
mov
jnp
fs
add
ss
push
add
adc
jno
adc
add
push
push
cmp
push
outs
mul
jnp
pop
inc
add
add
push
icebp
adc
jbe
adc
jno
push
stos
push
dec
pop
inc
pop
sub
bound
pop
arpl
or
add
jge
adc
push
jnp
adc
ins
adc
jno
push
push
pop
sub
pop
jno
imul
sbb
ins
daa
add
adc
jno
adc
xor
jno
dec
aad
push
pop
inc
and
pop
push
jnp
outs
jb
add
ss
push
add
adc
jno
adc
or
push
cmp
push
outs
mul
jnp
pop
inc
add
add
push
icebp
push
adc
push
imul
adc
ss
or
push
jne
inc
pop
sub
bound
pop
arpl
or
add
jge
adc
push
jnp
adc
push
adc
jno
push
push
pop
sub
pop
jno
ins
jo
jg
push
add
add
add
adc
xor
jno
dec
aad
push
pop
inc
and
sbb
fs
jnp
add
add
jno
add
adc
adc
jno
push
push
pop
fcom
pop
jg
jb
je
or
add
std
add
adc
popa
ss
pop
add
adc
jno
inc
sub
pop
inc
xor
jnp
push
add
add
adc
icebp
add
jno
adc
es
push
pop
inc
cmps
inc
jo
jnp
adc
jnp
pop
inc
add
add
adc
add
push
jp
adc
jno
sub
push
pop
jnp
dec
jo
push
arpl
sub
add
adc
and
jno
adc
jno
pop
jge
push
pop
dec
sub
or
pop
push
jnp
outs
ins
add
add
xor
push
imul
adc
adc
or
push
push
push
xor
pop
jnp
sbb
je
addr16
jg
add
fisttp
sub
adc
sbb
adc
jno
inc
push
inc
push
jne
pop
push
push
or
addr16
addr16
add
or
pop
adc
pusha
xchg
add
cmp
jno
dec
push
push
push
dec
sub
dec
jo
push
arpl
add
add
pop
adc
cmp
jno
adc
add
push
inc
dec
dec
arpl
jnp
bound
ins
arpl
xor
add
adc
push
sub
adc
jne
jb
push
push
popa
(bad)
pop
pop
jnp
imul
push
adc
add
mov
add
jnp
sbb
jno
loopne
dec
sub
pop
pop
adc
bound
fldcw
adc
add
or
adc
mov
ins
pusha
or
pop
push
push
push
push
dec
dec
pop
push
cmp
jle
imul
add
or
jno
mov
or
adc
mov
pop
dec
fild
or
arpl
pusha
or
sbb
cmp
adc
add
jmp
or
add
inc
pop
dec
pop
mov
fs
sbb
add
std
adc
bound
pop
and
jno
sub
dec
pop
dec
idiv
jo
jl
mov
add
(bad)
es
adc
jns
adc
jnp
jo
jo
push
push
daa
sub
pop
or
dec
dec
je
imul
or
jo
add
jno
adc
adc
sub
push
push
push
dec
dec
dec
push
cmp
jle
dec
jae
and
add
ja
adc
add
js
add
add
adc
sbb
pop
inc
pop
dec
jae
bound
jnp
outs
dec
cdq
fimul
adc
add
pop
ds
gs
push
jno
inc
ins
ins
test
mov
bound
jnp
les
add
pop
inc
push
adc
adc
jno
data16
inc
and
pop
push
ins
es
outs
jnp
pusha
fs
or
jno
aas
and
adc
jnp
adc
adc
adc
dec
pop
inc
pop
es
or
sbb
fs
adc
ins
ds
adc
pusha
sahf
jo
add
adc
or
sub
pop
pop
ins
jbe
jo
jg
pop
add
fldcw
adc
xchg
push
jno
adc
and
jno
inc
push
push
push
jo
pop
pop
jno
jl
je
push
dec
adc
add
adc
add
add
pop
and
add
push
push
push
pop
push
imul
arpl
add
pop
or
sbb
jge
and
adc
inc
ins
adc
or
push
push
push
push
dec
jo
or
bound
add
inc
add
and
sbb
(bad)
adc
jmp
push
sub
inc
pop
aaa
dec
or
jns
out
push
add
add
rol
adc
and
adc
mov
adc
add
dec
inc
inc
jo
or
addr16
popa
dec
inc
add
or
and
sbb
(bad)
adc
mov
sbb
push
fstp
fs
pop
dec
arpl
adc
adc
icebp
or
push
sbb
jne
sub
dec
stos
push
inc
cmps
inc
ds
push
adc
je
addr16
mov
adc
push
add
and
adc
adc
push
inc
push
cmp
inc
push
cmps
jg
pushf
jae
jl
fs
inc
add
or
sbb
cmp
adc
sub
mov
jmp
inc
pop
inc
push
jo
pop
pop
jno
bound
arpl
add
add
adc
adc
jno
adc
add
push
push
ret
pop
imul
arpl
sub
add
adc
jnp
adc
jnp
adc
inc
inc
push
pop
ja
bound
or
jo
jbe
dec
cs
jno
adc
and
jns
push
jno
dec
pop
jge
pop
xor
inc
jnp
outs
jo
or
inc
add
pop
pop
add
pop
jno
add
adc
adc
push
jle
pop
inc
push
push
jl
je
bound
dec
sub
add
and
pop
adc
sbb
jge
and
jl
dec
inc
jle
pop
inc
pop
cli
push
jne
pop
jns
adc
adc
sbb
aaa
add
push
bound
push
jp
pop
jno
pop
pop
jge
sbb
inc
push
pop
cmc
dec
dec
inc
sub
bound
(bad)
push
jle
aaa
add
or
or
sbb
sbb
jnp
pop
cmp
adc
mov
jno
pop
sub
sbb
pop
dec
arpl
add
add
dec
adc
add
sbb
rol
sbb
push
push
daa
cli
push
push
inc
push
cmp
jle
data16
sub
adc
ja
pop
jno
pop
rol
sbb
js
cmp
inc
pop
inc
dec
pop
jo
or
(bad)
push
jnp
pop
cmps
adc
sub
cmp
jno
adc
sbb
jne
jnp
add
jbe
pop
inc
pop
jo
or
gs
dec
add
sub
adc
add
adc
push
jnp
add
jle
pop
inc
push
dec
jg
push
jo
jge
pusha
dec
push
add
or
add
pop
inc
adc
adc
pusha
add
push
es
jge
inc
jo
jge
in
xor
and
add
aas
xchg
cmp
cmp
jno
ds
pop
gs
push
xor
or
movs
jbe
fs
jno
push
jno
cmp
adc
jno
add
adc
dec
pop
pop
jp
adc
jbe
adc
pop
add
or
sbb
cmp
adc
adc
jge
push
push
pop
inc
push
pop
and
pop
inc
jo
gs
pop
jnp
outs
outs
sub
and
aas
jno
pop
bound
cmp
scas
add
push
push
pop
dec
pop
pop
jnp
bound
arpl
add
add
call
pusha
ins
or
and
inc
push
sub
inc
pop
aaa
sub
bound
arpl
bound
add
add
adc
push
jnp
adc
jno
jnp
add
sub
inc
pop
aaa
xor
bound
bound
bound
add
add
adc
push
jnp
adc
jno
jnp
add
sub
inc
pop
aaa
or
pop
cmp
pusha
sub
sub
jno
cmp
adc
jno
retf
push
push
push
push
dec
jae
jnp
push
or
add
add
adc
pop
adc
jno
adc
add
inc
pop
inc
jae
jnp
push
outs
popa
add
add
cmp
cmp
data16
sub
push
push
jb
pop
pop
ins
or
push
jnp
fs
add
wbinvd
cmp
jno
adc
adc
dec
adc
sbb
add
jo
aaa
and
jno
dec
jo
push
arpl
sub
add
adc
ins
adc
pusha
popa
jne
add
push
and
ins
and
je
jne
adc
sbb
mov
sbb
jae
sbb
pusha
mov
jno
add
and
pop
inc
sub
sub
bound
jb
dec
push
add
sbb
jb
rcr
pcmpeqw
pop
jno
loopne
dec
push
cli
dec
inc
sub
or
pop
arpl
or
adc
jge
push
pop
and
pop
es
or
fs
jp
bound
or
fs
sub
adc
push
and
or
adc
cmovnp
cmc
push
push
sub
js
adc
das
jns
adc
sbb
add
push
adc
mov
imul
mov
or
add
hlt
pop
inc
dec
pop
cli
jb
adc
jnp
(bad)
outs
sbb
pop
mov
jne
rcr
or
mov
outs
sbb
push
inc
and
push
cli
jb
push
dec
push
add
add
push
push
sub
jno
adc
jno
cmp
add
inc
jg
inc
pop
push
ins
cmp
jbe
jb
push
add
or
add
jne
add
push
adc
pusha
or
add
push
arpl
push
jo
jge
ins
jg
pop
add
jne
sbb
jne
sbb
adc
js
sbb
dec
dec
and
pop
inc
sub
or
(bad)
jb
dec
push
add
add
daa
jno
push
rcr
cmp
push
jo
jno
fs
push
sub
dec
inc
je
imul
ja
adc
add
inc
adc
ja
cdq
inc
add
pop
pop
dec
inc
stc
push
ins
jp
je
or
jno
add
add
and
adc
mov
imul
mov
sbb
push
push
push
sub
pop
jnp
sar
push
fs
adc
sub
mov
pop
es
jno
push
push
fmul
jl
inc
push
push
push
and
jo
movs
arpl
sbb
add
adc
adc
adc
jno
adc
add
push
push
dec
jb
pop
jno
bound
jnp
jne
data16
or
sub
adc
adc
and
jno
adc
jno
xor
push
push
dec
push
pop
js
push
jo
jno
dec
add
adc
sbb
jg
cmp
jl
cmp
dec
mov
pop
dec
pop
pop
jnp
bound
data16
add
add
push
jno
adc
adc
outs
adc
add
push
push
push
dec
jo
jge
bound
dec
bound
add
pop
add
adc
sbb
jno
aas
adc
or
pop
adc
dec
jb
pop
dec
or
imul
add
adc
sbb
jb
jl
add
push
push
jo
pop
pop
jge
pop
adc
outs
ja
imul
pop
sbb
cmp
jno
adc
add
inc
pop
pop
(bad)
adc
pop
adc
ins
or
add
or
jno
jp
jno
push
jbe
pop
inc
cmp
inc
push
aaa
push
or
jae
or
adc
mov
bound
add
pushf
mov
cmps
(bad)
andnps
push
push
pop
inc
imul
popa
jo
aam
jbe
sub
add
adc
pop
adc
jno
adc
add
push
inc
pop
sub
jno
ja
adc
or
ins
cmp
adc
imul
jno
adc
pusha
adc
push
ds
push
pop
inc
adc
pop
push
pusha
pop
dec
jnp
outs
jno
adc
jnp
adc
add
sbb
push
add
push
push
push
push
sub
cmc
aam
adc
adc
jbe
sbb
add
adc
sbb
inc
pop
dec
dec
jae
jnp
push
push
adc
and
adc
pop
jne
adc
inc
push
jl
inc
inc
jae
jnp
push
fs
push
add
and
adc
pusha
bound
add
cmp
jno
push
pop
inc
pop
jne
xchg
or
jle
pop
movhpd
adc
jno
adc
jnp
adc
jno
or
jne
push
pop
inc
push
xor
pop
jnp
jae
push
mov
push
sub
jo
adc
sbb
js
outs
jno
pop
data16
adc
ins
cmp
pop
dec
inc
dec
dec
jge
push
packssdw
add
sbb
ins
add
ins
cmp
adc
inc
adc
jle
push
aaa
jecxz
adc
adc
cdq
inc
adc
push
ins
adc
fs
sbb
dec
jl
push
inc
dec
gs
jno
or
fs
ja
add
jne
add
adc
add
pop
adc
pusha
add
inc
and
pop
inc
sub
push
or
jae
push
unpckhpd
jno
add
adc
sbb
pop
fs
or
inc
push
inc
mov
dec
gs
mov
push
jge
jns
mov
mov
bound
bound
push
add
adc
inc
int
push
dec
jo
or
(bad)
jo
outs
adc
cwde
add
adc
push
data16
bound
push
add
add
inc
cmp
pop
dec
dec
push
adc
bound
lods
je
jne
pop
adc
add
adc
pop
add
add
push
pop
jo
pop
pop
jno
pop
jo
jno
jb
adc
adc
pop
add
pusha
add
push
pop
cmp
push
pop
jg
inc
pop
push
push
lods
jo
ja
adc
add
cmp
pusha
push
add
cmp
adc
sbb
adc
push
pop
dec
aaa
jnp
or
je
arpl
add
retf
add
adc
add
inc
inc
inc
inc
dec
push
xor
jnp
push
fs
inc
pop
and
adc
adc
loop
sub
push
jno
mov
jge
dec
push
dec
inc
push
jae
outs
mov
add
pop
imul
xchg
add
pop
push
cs
or
jbe
push
pop
inc
pop
pop
imul
je
arpl
hlt
cmp
adc
movs
pop
push
add
dec
xchg
adc
pusha
sbb
jle
pop
inc
pop
jo
or
bound
jno
sub
pop
adc
cmp
jno
adc
adc
pusha
pop
add
push
pop
jo
pop
pop
jno
pop
jo
jno
pop
add
push
cs
add
adc
imul
dec
aaa
add
push
sub
arpl
test
sub
jno
mov
sbb
pop
cmp
pop
inc
push
push
inc
dec
lods
sbb
outs
push
pop
push
cli
sti
std
adc
adc
pop
add
pusha
xor
push
in
jmp
push
push
inc
push
dec
dec
dec
push
push
jnp
push
or
adc
adc
add
sbb
cmp
adc
fmul
jge
pop
dec
jae
jnp
push
fs
sbb
add
adc
adc
adc
jno
adc
add
push
push
dec
jb
pop
arpl
bound
jnp
jne
pop
push
ins
aas
add
jge
jno
pop
stos
or
adc
sub
push
push
jae
pop
pop
pop
or
pusha
jo
addr16
or
sub
add
sbb
das
adc
sbb
pop
sub
or
inc
adc
pop
je
dec
fs
add
jo
add
aaa
jno
add
sbb
add
imul
jo
push
sbb
add
or
sbb
adc
movs
adc
cmp
bound
inc
daa
mov
js
or
jno
addr16
dec
add
adc
cmp
adc
push
add
cmp
jns
inc
jge
push
pop
dec
push
push
jb
pop
jo
jno
arpl
movaps
add
adc
inc
sbb
adc
pusha
cmp
jno
inc
pop
inc
pop
pusha
lods
pop
pop
jnp
or
jb
in
add
add
adc
jnp
adc
ja
and
rcl
dec
dec
cmps
jp
add
arpl
add
adc
adc
sub
adc
jno
data16
inc
and
sub
bound
bound
sbb
arpl
arpl
pop
jno
pushw
add
adc
sbb
pop
inc
inc
push
push
pop
sub
pop
or
ja
or
daa
add
jno
adc
adc
jno
jnp
add
and
pop
inc
sub
outs
or
push
bound
push
push
add
syscall
cmp
adc
jl
xor
adc
data16
add
push
daa
lahf
push
pop
xor
jg
jbe
inc
jnp
bound
adc
fadd
fs
xchg
adc
sbb
cmps
jge
adc
sbb
push
push
inc
push
pop
pop
jae
jo
jl
or
pop
arpl
sti
std
sub
pop
adc
adc
pusha
push
push
jb
jle
push
pop
dec
ins
push
pop
jg
or
or
add
ins
cs
sbb
pop
sbb
jnp
adc
ins
jge
push
pop
push
inc
pop
pop
adc
bound
jg
or
add
ins
xchg
adc
sbb
push
sub
pushw
add
push
push
pop
pop
xor
jnp
or
outs
mov
add
ds
sbb
jno
pop
aas
jno
ds
inc
pop
push
push
pop
inc
push
dec
outs
bound
jnp
gs
sub
add
sbb
adc
pusha
push
push
gs
push
inc
push
inc
push
xor
pop
jnp
jno
push
xchg
fs
sub
cs
pusha
sbb
cmp
sbb
jo
push
push
daa
sub
pop
or
jo
jno
pop
add
sub
jno
sbb
bound
adc
jno
add
and
pop
inc
sub
sub
bound
inc
arpl
add
sub
sub
adc
jno
out
add
daa
or
aaa
sub
bound
jl
dec
in
add
adc
add
sub
pusha
add
pop
int3
inc
pop
sub
pop
js
jnp
jne
adc
cwde
adc
ins
cs
sbb
stos
jge
jno
pop
add
add
push
push
push
push
pop
aaa
inc
or
arpl
cmp
add
adc
add
jnp
adc
pusha
add
pop
xor
pop
pop
xor
push
jp
dec
jnp
outs
dec
ds
or
cmp
sub
adc
cmp
jno
dec
pop
inc
pop
inc
xchg
dec
push
push
jae
inc
mov
jge
add
adc
inc
jno
adc
add
mov
jnp
add
inc
pop
dec
push
push
(bad)
int3
pop
mov
dec
adc
pop
or
or
pop
add
add
pop
cdq
adc
jno
dec
daa
dec
push
pop
xor
jnp
push
mov
or
mov
add
mov
js
add
inc
push
cmp
inc
pop
push
fstp
imul
adc
add
add
push
addr16
pusha
sbb
adc
jl
push
push
push
push
push
push
dec
jbe
mov
jns
outs
jne
xor
adc
push
adc
add
jo
pop
add
lahf
push
inc
cmp
pop
inc
push
dec
jo
jae
cli
int3
jnp
jne
pop
or
adc
sbb
sbb
jno
push
pop
inc
pop
ret
push
jnp
or
jb
pop
pop
sbb
add
jmp
add
jge
adc
sbb
ins
jge
push
pop
push
push
push
dec
je
adc
jge
adc
call
push
adc
push
sbb
jno
dec
pop
push
push
pop
inc
pop
ret
push
push
clc
pop
dec
jnp
outs
jno
imul
jp
sbb
(bad)
add
add
push
push
pop
inc
cwde
xor
jnp
push
add
add
add
pusha
push
sbb
pop
and
add
pop
inc
or
pop
xor
adc
adc
adc
add
retf
in
aas
jno
pop
cmp
adc
sub
pop
push
pushf
inc
pop
pop
pop
or
push
out
fs
or
add
adc
adc
jno
push
pop
add
pop
js
or
pop
hlt
arpl
sub
add
or
jno
push
bound
ja
popa
adc
sbb
bound
inc
outs
add
pop
dec
push
jbe
bound
imul
add
movaps
pusha
pop
cmp
add
inc
ja
inc
pop
pop
imul
add
add
adc
jg
adc
adc
jo
dec
sub
pop
inc
dec
push
or
push
ja
pop
adc
or
jno
add
jp
adc
dec
add
inc
pop
sub
pop
or
je
popa
imul
add
jge
jno
adc
add
jbe
sbb
push
pop
fsub
dec
cwde
dec
dec
push
jne
imul
aaa
add
pop
adc
pusha
sbb
add
out
pop
and
pop
inc
pop
dec
jl
mov
fs
xchg
add
adc
bound
pusha
sbb
pop
add
inc
push
dec
push
pop
dec
push
cmc
aam
mov
sub
sbb
and
pop
xor
add
aaa
jg
inc
pop
push
push
bound
push
pop
movhpd
adc
add
add
sbb
xor
push
xor
push
push
sub
sub
add
jae
data16
jb
add
add
add
cmps
add
pusha
add
pushf
mov
mov
push
jo
jl
inc
push
dec
push
dec
jo
jno
arpl
add
or
add
push
imul
jno
adc
jno
out
push
push
push
dec
inc
pop
pop
push
or
inc
jns
mul
push
adc
push
pop
adc
and
jno
adc
jno
inc
cs
push
pop
dec
and
pop
loop
arpl
cs
sub
adc
adc
pusha
ins
das
jno
inc
push
sub
aaa
mov
bound
test
dec
add
pop
sbb
pusha
jnp
adc
adc
jno
inc
daa
or
xor
shl
adc
jnp
dec
out
add
pop
ja
sbb
pusha
mov
adc
pop
adc
jno
inc
jg
push
inc
inc
jae
jnp
push
jae
add
or
scas
jno
adc
adc
jno
data16
inc
and
push
dec
adc
bound
push
adc
add
sub
adc
add
push
jno
jp
adc
jno
dec
jge
push
pop
dec
push
dec
jo
push
bound
cmp
or
sbb
les
adc
jno
push
push
push
push
pop
dec
jo
or
pop
cli
arpl
cmp
add
sub
adc
sbb
ja
ret
jnp
sbb
jnp
cwde
addr16
and
jbe
arpl
jo
sbb
add
ja
adc
add
add
nop
sbb
je
adc
jo
push
push
xchg
jae
or
pop
jnp
outs
mov
or
adc
adc
mov
adc
pop
push
pop
adc
pop
sub
pop
push
je
addr16
push
pop
jbe
or
adc
pop
adc
inc
sbb
ins
or
push
push
jb
pop
pop
dec
or
xor
sub
add
es
jge
adc
pop
adc
jno
jo
and
push
inc
sub
xor
jnp
fs
or
adc
jno
add
adc
repnz
sub
push
pop
jo
pop
pop
jno
push
jo
jno
jb
cmp
add
outs
push
adc
data16
adc
add
add
push
pop
push
pop
pop
jns
inc
jo
jg
shr
je
bound
bound
push
inc
adc
adc
jae
outs
aaa
jno
adc
fisttp
es
jge
xor
jge
pusha
fs
jg
add
adc
adc
bound
jnp
adc
push
inc
pop
push
cmp
inc
pop
pop
push
adc
je
addr16
or
adc
add
pusha
pop
sbb
adc
aas
jno
add
cmp
sub
imul
paddusw
ds
adc
push
adc
jno
mov
push
push
dec
jb
pop
push
jnp
jne
add
add
sbb
jne
pop
pop
adc
ds
and
add
inc
pop
dec
outs
add
push
pop
arpl
aaa
push
add
xor
sbb
ja
cmp
rcl
adc
ror
push
push
jo
pop
pop
jno
or
or
add
push
add
jge
jno
pop
add
pop
data16
inc
and
pop
push
push
jnp
push
sub
add
ins
ins
add
push
bound
jnp
adc
push
adc
sbb
pop
dec
sub
or
pop
push
jnp
outs
dec
ds
or
pop
add
jge
jno
jp
adc
jno
push
push
inc
push
dec
inc
dec
pop
push
dec
dec
je
gs
pop
add
add
cdq
adc
cmp
jno
pop
adc
adc
or
push
jg
inc
pop
push
ja
ins
push
pop
push
arpl
or
sbb
jno
pop
pop
adc
pop
adc
adc
adc
pop
jb
pop
pop
push
jnp
fs
add
sub
jno
sbb
ret
jmp
adc
pop
dec
adc
or
jl
inc
jno
xor
jnp
fs
add
add
adc
push
ds
adc
push
adc
jno
push
inc
sub
ja
adc
pop
jns
adc
push
add
(bad)
dec
adc
adc
inc
adc
push
adc
jno
push
inc
sub
sub
add
jno
sbb
jnp
adc
jno
and
add
pop
dec
sub
je
imul
sub
add
push
jnp
cmp
adc
jno
les
push
jle
pop
inc
push
sub
or
pop
arpl
push
add
movhps
jnp
adc
data16
adc
add
es
push
pop
dec
dec
push
push
outs
bound
or
push
add
xor
sbb
je
dec
sbb
adc
inc
push
pop
inc
pop
push
push
sub
bound
sbb
arpl
lar
push
adc
add
push
add
cmp
jno
add
inc
push
push
jno
dec
jnp
js
bound
jnp
outs
pusha
sub
das
cld
adc
adc
sbb
scas
sbb
adc
adc
jp
pop
dec
test
add
jae
arpl
add
add
adc
pop
adc
jno
adc
add
push
inc
js
pop
pop
jnp
inc
jo
jno
pop
inc
add
push
adc
adc
sbb
push
and
inc
pop
outs
(bad)
inc
pop
pop
jns
sbb
addr16
pop
or
jno
add
fs
dec
jno
adc
pop
push
or
adc
push
xor
pop
push
sub
cmp
js
pop
cs
bound
push
jns
add
pop
adc
pusha
je
adc
push
dec
adc
add
push
push
push
and
pop
jg
out
jge
or
add
ins
pop
add
adc
sbb
jge
jno
adc
ja
adc
cmp
push
push
pop
xor
pop
jnp
jbe
jl
addr16
or
sub
add
adc
cmps
sbb
jbe
jle
mov
retf
push
push
push
push
push
pop
jo
or
stos
jnp
or
add
add
adc
pop
adc
jno
adc
add
push
inc
pop
inc
jae
jnp
push
(bad)
ins
add
sub
add
add
sbb
jno
aas
jno
and
jno
jo
push
inc
pop
inc
xor
jnp
push
dec
jne
pop
add
add
adc
adc
movs
sbb
fnstsw
fs
dec
push
es
inc
pop
pop
push
push
bound
sti
inc
add
push
add
adc
sbb
cmp
pop
add
jg
pop
pop
or
jle
data16
jmp
add
adc
pop
sbb
jno
adc
mov
push
es
or
outs
jo
push
pop
add
add
adc
add
jno
adc
dec
push
es
inc
pop
pop
push
add
pop
sti
dec
add
push
add
adc
sbb
cmp
pop
or
jge
jae
pop
pop
or
fisubr
jne
jmp
add
adc
pop
push
adc
jno
adc
jecxz
push
es
or
outs
jo
push
pop
add
add
adc
add
or
jmp
push
es
inc
pop
pop
push
push
bound
sti
dec
add
push
add
adc
sbb
cmp
pop
or
ja
pop
pop
push
or
ds
jae
add
add
adc
adc
push
aas
jno
and
jno
jno
push
inc
dec
dec
pop
pop
jg
dec
das
je
gs
bound
push
sub
add
pop
jbe
and
adc
ds
and
add
push
push
ins
inc
pop
dec
or
jo
jns
jmp
push
or
push
std
pop
ss
push
arpl
jmp
xor
mov
jg
inc
pop
push
push
xchg
bound
ret
push
and
sub
pop
adc
jne
jno
push
cmp
adc
or
push
push
pop
inc
pop
es
call
push
jl
add
adc
jno
xchg
jno
adc
ja
mov
dec
das
push
dec
fs
pop
jnp
jno
jo
imul
add
mov
inc
adc
jns
bound
push
pop
fdiv
jnp
push
dec
add
add
adc
adc
add
dec
sub
pop
pop
imul
addr16
push
add
add
adc
out
adc
push
and
pop
add
inc
push
and
pop
jg
imul
fs
pop
imul
add
sbb
inc
push
push
add
inc
push
and
pop
jg
gs
xlat
jnp
bound
add
add
add
outs
inc
ret
pop
lea
jne
dec
dec
add
jno
jb
pop
jnp
pusha
je
jg
add
add
and
(bad)
adc
adc
jnp
dec
dec
dec
imul
jbe
push
arpl
add
ds
add
and
(bad)
adc
adc
pop
inc
imul
or
or
bound
add
ds
push
add
lea
add
dec
jnp
jnp
bound
ins
sbb
sub
jl
add
or
push
pop
imul
cmp
pop
push
push
fs
dec
call
add
cmp
bound
add
add
adc
or
ins
addr16
adc
adc
adc
adc
ins
cmp
adc
jno
sub
inc
inc
pop
inc
dec
xchg
dec
dec
push
in
(bad)
data16
sti
add
add
jnp
add
add
add
adc
inc
dec
data16
cmps
test
outs
pop
(bad)
jnp
outs
jne
jp
add
das
adc
push
add
or
add
ins
fst
push
jne
sub
jnp
push
jnp
shr
adc
cmp
push
bound
add
outs
ds
enter
pop
push
popa
cmp
pop
jnp
pusha
je
jg
add
adc
mov
sbb
sbb
push
push
pop
push
pop
and
bound
or
add
add
jnp
push
adc
dec
adc
push
dec
jno
sub
or
push
movs
push
dec
dec
add
js
adc
push
nop
pop
mov
jno
push
add
cmp
push
cmp
push
pop
dec
dec
dec
jg
dec
jo
jno
push
or
add
pusha
push
aas
jno
or
jno
jno
push
push
xchg
inc
pop
pop
test
bound
jnp
fs
add
mov
adc
pusha
jne
adc
add
jno
inc
jg
push
inc
inc
jae
jnp
push
fs
add
add
push
jbe
ja
adc
jb
jo
jno
les
inc
dec
jle
pop
inc
push
jo
or
sar
fs
das
add
inc
adc
adc
pusha
add
push
push
pop
xor
push
jnp
or
dec
imul
jns
add
adc
popa
adc
push
mov
call
push
push
pop
jae
sbb
fistp
outs
adc
add
or
jge
jno
push
push
mov
add
adc
or
push
push
push
pop
jnp
dec
imul
sub
js
jnp
adc
pop
sbb
lods
inc
push
pop
pop
xchg
pop
adc
bound
push
leave
mov
push
jge
adc
adc
jno
push
lods
jl
push
push
push
pop
sub
push
or
add
add
adc
jno
adc
jno
adc
add
push
inc
pop
push
or
jp
jb
adc
(bad)
ucomiss
mov
adc
imul
adc
jno
inc
push
push
pop
inc
pop
imul
arpl
add
adc
sbb
pop
mov
cmps
jno
push
in
sub
pop
pop
pop
push
pop
jnp
push
mov
cvttps2pi
sbb
les
jns
and
adc
ds
push
gs
push
or
pop
inc
or
pop
(bad)
ins
pop
pop
inc
push
add
adc
adc
jno
pop
push
push
push
jae
pop
jo
or
ja
add
mov
add
cmp
jae
mov
pop
jne
jno
push
push
push
push
dec
jo
jae
dec
jo
push
arpl
add
push
add
adc
or
adc
sbb
add
inc
pop
pop
push
push
mov
pop
(bad)
jnp
outs
dec
mov
add
ret
adc
sbb
pop
cmp
jno
pop
jne
inc
dec
dec
jg
inc
pop
push
push
pop
dec
sti
add
aad
add
cmp
adc
pusha
push
or
fst
pop
pop
xchg
dec
push
outs
add
pop
ret
ins
push
unpcklps
add
sbb
jl
sahf
jno
adc
enterw
push
push
push
push
push
pop
jnp
jno
jbe
outs
mov
mov
add
sbb
jo
adc
add
cmp
pusha
or
push
push
push
dec
dec
push
push
jne
ins
mov
add
sbb
add
rcl
adc
pusha
sbb
test
push
push
pop
jae
jnp
fs
in
fs
pop
ror
add
adc
push
and
pusha
sbb
ja
inc
jle
inc
push
push
lea
sbb
jp
push
fwait
cdq
cli
adc
adc
add
pop
adc
cmp
jne
outs
push
push
push
bound
dec
jns
pop
sbb
cvttps2pi
push
jae
push
sbb
xor
sbb
cmp
add
jle
pop
inc
push
push
jns
or
ins
sbb
addr16
add
outs
or
bound
jge
push
pop
dec
xor
sbb
fs
stc
add
aad
add
lea
cmps
add
jle
pop
inc
push
dec
jo
jae
addr16
imul
add
push
test
adc
jno
dec
inc
pop
push
dec
dec
xor
jle
and
add
adc
pop
test
jno
add
cmp
pusha
or
inc
lea
xor
jle
dec
add
add
movs
add
push
bound
sbb
js
cmp
adc
sbb
push
push
pop
push
jae
jnp
push
arpl
sub
add
add
pop
scas
adc
je
or
push
add
dec
dec
push
inc
pusha
popf
(bad)
mov
dec
fiadd
adc
aas
jno
adc
adc
jle
add
dec
inc
pop
sub
adc
add
xor
sub
add
adc
add
xlat
jle
fs
adc
jge
push
pop
pop
push
or
push
jns
jae
add
xor
adc
adc
or
adc
or
adc
push
push
inc
pop
and
bound
fisub
jo
add
adc
pop
adc
or
adc
push
inc
jge
push
pop
dec
das
jg
or
inc
jnp
pusha
dec
add
add
jno
adc
test
adc
pusha
pop
adc
jg
push
push
push
jb
pop
pop
sbb
pusha
or
arpl
sub
ja
adc
adc
adc
jno
and
add
push
push
push
arpl
dec
or
ins
jo
jno
outs
jbe
je
ror
add
adc
sbb
push
inc
adc
push
push
inc
push
pop
and
pop
pop
ja
jo
sbb
mov
push
push
jne
movs
jno
pop
jp
and
jno
or
push
push
push
pop
push
xor
jnp
fs
jnp
pusha
dec
add
add
ss
adc
adc
jbe
adc
add
in
push
push
pop
ret
jnp
popa
and
mov
sahf
or
sub
adc
adc
ins
and
adc
adc
and
jge
push
pop
dec
jno
push
jnp
fs
add
xor
push
adc
adc
adc
adc
add
push
push
fs
pop
pop
inc
or
jbe
arpl
add
sub
add
jno
adc
cmp
pop
adc
pop
adc
push
sub
sub
dec
ins
jbe
push
add
or
pop
or
adc
pop
adc
push
jp
adc
jno
cmp
push
push
pop
cmp
pop
jnp
popa
je
adc
add
sub
add
adc
inc
adc
adc
or
inc
push
push
push
dec
aas
arpl
or
or
bound
rdmsr
adc
adc
or
adc
or
xor
inc
push
dec
add
pop
add
bound
push
pop
or
add
(bad)
adc
(bad)
adc
add
pop
leave
jge
jno
inc
pop
outs
loopne
inc
pop
jae
or
sbb
arpl
add
pop
sub
sbb
adc
jp
xor
pop
inc
dec
pop
cmp
gs
pop
push
xor
pop
adc
jnp
adc
jo
adc
push
inc
fstp
pop
inc
xor
jnp
push
adc
push
add
invd
sub
adc
pop
adc
adc
outs
jb
inc
adc
aas
addr16
and
or
outs
jns
fmul
js
add
add
jnp
adc
jo
adc
add
pop
inc
pop
pusha
jne
bound
jle
les
add
movups
sub
jo
adc
jmp
jno
add
push
mov
jno
jno
inc
pop
pusha
scas
pop
pop
jnp
xchg
jnp
popa
jns
aaa
push
pop
push
cmp
adc
adc
adc
push
and
or
push
push
pop
jp
pop
jnp
jae
imul
jb
cmp
add
adc
pop
or
sbb
jp
mov
add
retf
inc
dec
pop
sub
pusha
jo
mul
add
mov
xor
sbb
jnp
adc
or
jge
dec
inc
jnp
jnp
bound
jns
sbb
add
sub
jo
je
dec
inc
sbb
add
pop
push
push
push
jbe
pop
inc
pop
imul
or
outs
dec
inc
das
cmp
add
mov
jno
daa
jp
jp
adc
pop
sub
dec
pop
imul
jnp
push
jle
add
xor
ja
adc
sbb
pusha
cmp
jae
lods
jnp
adc
or
inc
pop
jae
pop
jb
cmp
js
arpl
add
sbb
sub
adc
sbb
pop
adc
pop
add
jno
add
inc
sub
dec
jo
push
arpl
add
adc
adc
bound
aas
jno
ds
pop
gs
push
rol
pop
cmp
bound
ins
dec
or
add
push
jbe
adc
add
push
in
adc
jno
adc
push
push
pop
dec
push
jne
jp
jae
or
cmp
or
ja
push
ja
js
adc
pop
jns
sbb
ins
inc
push
push
jg
inc
pop
push
push
jle
jne
push
adc
pop
push
adc
xor
jbe
jne
adc
push
scas
xor
jle
push
push
push
push
push
push
jo
or
stos
jnp
loopne
or
add
adc
sbb
jno
aas
jno
sbb
adc
add
ds
pop
jb
pop
pop
push
jnp
fs
add
sbb
jg
sbb
adc
adc
jno
push
mov
jo
jmp
jo
data16
and
push
addr16
cmp
ja
push
ja
xor
or
sbb
or
and
pusha
sbb
dec
and
inc
cmp
cmp
xor
ja
and
and
push
jl
adc
push
inc
xor
addr16
imul
jno
das
ja
and
and
jno
xor
jnp
or
jnp
adc
adc
pusha
jo
inc
add
pusha
sbb
and
jnp
pusha
ja
push
daa
and
inc
pop
pop
jnp
bound
jnp
and
push
repz
cmc
or
jns
push
dec
and
jno
adc
add
push
push
pop
or
push
jo
jnp
fs
add
xor
and
adc
and
jno
ja
inc
add
xor
inc
imul
add
jnp
fs
add
xor
jb
and
adc
jno
adc
outs
push
inc
xor
pop
sub
bound
je
arpl
pushw
jne
jbe
ja
add
addr16
adc
jno
adc
add
inc
sub
or
jo
jnp
adc
add
dec
add
adc
in
jo
shl
lahf
aas
ja
xor
cmp
jne
or
retf
add
xor
test
mov
iret
sbb
cmp
pop
arpl
test
sub
cld
pop
inc
(bad)
jmp
mov
int3
dec
cmp
and
call
pop
adc
lahf
cld
xchg
mov
in
ds
retf
das
hlt
inc
outs
cmps
jmp
xlat
(bad)
in
jmp
addr16
out
jb
int3
push
pop
mov
jge
mov
jmp
fisttp
loope
loopne
xchg
retf
mov
jp
push
xor
ins
mov
(bad)
xor
sub
mov
xchg
mov
add
cdq
in
test
call
(bad)
bound
dec
or
aad
push
add
or
aad
mov
xor
sub
fnsave
ror
xchg
mov
ficom
push
rcl
xchg
mov
repnz
outs
xchg
pop
inc
loopne
popf
rcr
xlat
jle
jge
imul
adc
pop
sbb
fdiv
xor
push
dec
xlat
mov
mov
jo
inc
sbb
push
mov
cmp
dec
mov
xlat
jb
fdiv
xchg
or
inc
mov
sub
aad
pop
out
call
mov
scas
je
xchg
bound
mov
loop
lods
sub
rcl
push
cld
bound
sub
push
cmp
je
aad
inc
cmp
xchg
jbe
xor
mov
lods
(bad)
mov
je
pop
push
rcr
jo
aaa
sub
stos
dec
pop
push
sub
adc
sub
mov
call
dec
popf
mov
sbb
cmc
add
pop
outs
shr
mov
loopne
(bad)
clc
pushf
inc
mov
adc
xor
sub
cmp
and
push
movs
sub
imul
test
mov
inc
(bad)
mov
jae
shl
icebp
mov
and
cmp
jl
pusha
(bad)
nop
ficomp
jb
mov
out
xchg
cmps
sbb
cmps
neg
xchg
pop
movs
icebp
dec
out
mov
pop
arpl
jmp
ja
lods
out
stos
push
jns
adc
cmp
dec
pusha
enter
fsubp
fcom
mov
rcr
jp
scas
push
mov
clc
cdq
sbb
add
mov
sub
mov
xchg
aam
ins
pop
not
(bad)
aad
fdivr
cmp
dec
sub
lods
dec
ins
mul
xor
mov
mov
dec
mov
push
popa
ds
les
scas
rcr
add
push
cdq
xchg
cmp
js
mov
mov
stos
stos
imul
ret
xchg
call
jg
outs
inc
rcl
test
mov
adc
dec
push
xchg
cmp
pop
push
xchg
jmp
cmp
mov
jp
jne
mov
push
inc
or
cld
xor
imul
or
sbb
add
xor
lods
pushf
int3
push
rcr
jl
pop
jle
pop
jg
and
rep
add
xchg
adc
fsub
ror
loopne
pop
adc
xchg
pop
fcom
sti
cmp
in
add
push
sub
ret
je
(bad)
or
cdq
cmp
neg
mov
pop
lea
inc
lods
lods
lods
mov
sahf
lea
mov
sti
inc
repz
nop
mov
ds
jns
movs
mov
sub
sub
mov
sbb
dec
stos
cli
sbb
in
inc
dec
inc
je
loope
addr16
or
or
or
inc
movs
push
retf
dec
push
sub
pop
add
xlat
data16
lea
cmp
arpl
or
or
and
sahf
cs
push
pop
cmp
mov
push
pushf
push
push
out
pop
xor
pusha
sub
push
jb
xor
aas
sub
out
push
rcl
scas
cmp
fcom
mov
pop
cmp
daa
add
push
add
cmp
inc
dec
ror
or
clc
fstp
sar
es
xchg
aam
push
fidivr
scas
fs
les
sbb
das
xchg
(bad)
xchg
icebp
xchg
xchg
inc
push
scas
test
inc
xor
ss
(bad)
dec
std
nop
push
cmp
enter
daa
mov
stos
adc
inc
loope
jb
pop
jbe
pop
pop
cmp
in
out
mov
sbb
pop
std
mov
add
xchg
out
add
gs
xchg
cdq
jmp
push
mov
les
jg
dec
or
and
imul
addr16
pop
dec
jg
adc
push
xor
(bad)
daa
xchg
test
sbb
addr16
mov
xchg
inc
fdivrp
cmps
(bad)
dec
or
out
dec
outs
idiv
std
xchg
jb
jmp
xchg
in
mov
fsubr
inc
(bad)
bound
fst
xor
retf
push
inc
and
mov
jge
xchg
pop
lock
add
mov
and
stc
jnp
rcl
test
(bad)
jo
adc
xchg
call
outs
xor
enter
(bad)
push
and
cmp
and
retf
clc
std
cmp
cmp
rol
pop
iret
xchg
les
je
ds
xor
fdiv
cli
adc
push
(bad)
(bad)
jno
push
in
jle
jno
dec
cwde
inc
arpl
cmp
pop
pop
push
sbb
aam
add
mov
and
sbb
rol
xchg
sub
sahf
sti
xchg
movs
xchg
xchg
loope
cmc
lds
inc
sub
inc
mov
nop
cmps
inc
stos
dec
out
shl
call
ja
push
fbld
cmc
xchg
ror
push
test
sbb
mov
cmp
xchg
clc
cmps
ficom
(bad)
cs
rcl
imul
jmp
mov
popf
jge
sbb
add
pop
es
je
xchg
std
and
sbb
fisubr
mov
and
mov
pop
cld
mov
or
popf
in
out
data16
inc
push
xchg
fadd
(bad)
add
dec
xor
cmps
int3
and
cmp
jmp
dec
inc
inc
lea
add
leave
mov
leave
cmp
cs
and
dec
ret
mov
pop
repz
pop
nop
and
jge
daa
xor
out
mov
inc
(bad)
and
sti
(bad)
inc
pop
fwait
js
gs
jae
cld
call
lea
pop
out
cmps
mov
pop
sbb
jno
cwde
jle
aad
xor
sbb
inc
test
shl
ret
jle
dec
sti
mov
sub
fiadd
ficom
imul
sub
iret
mov
adc
and
js
mov
leave
cld
jecxz
mov
sbb
mov
inc
cmp
xchg
pop
xchg
movs
(bad)
jbe
xor
xor
(bad)
loop
stc
enter
leave
sbb
shl
cmp
push
inc
popa
cwde
cmp
mov
pop
push
inc
adc
repnz
cwde
repnz
rcr
xchg
dec
gs
cmps
dec
adc
fdivr
sti
in
clc
sbb
sub
not
sub
mov
lods
ja
bound
xor
dec
mov
test
enter
es
mov
add
movs
pusha
mov
out
xchg
retf
das
hlt
add
icebp
stos
mov
jge
shl
inc
sbb
mov
push
fsubp
test
retf
pop
xor
mov
jbe
jmp
inc
jmp
retf
pop
push
push
xor
jb
and
outs
sub
les
jae
inc
les
out
dec
adc
jno
call
inc
ret
dec
int
and
stos
push
call
jne
mov
imul
fisub
data16
pop
xor
rcl
mov
(bad)
xchg
pop
xor
fsubrp
sbb
sub
repz
adc
ins
lock
adc
outs
in
pop
mov
ret
(bad)
ss
mov
jnp
xor
je
mul
push
test
adc
gs
retf
xlat
mov
lahf
add
stos
fcmovnu
sar
inc
add
inc
mov
push
sub
pop
(bad)
not
and
pop
mov
inc
pop
adc
loope
inc
add
je
push
icebp
loop
cld
rcr
rcl
sub
scas
leave
imul
sbb
cmp
jo
mov
enter
or
sub
(bad)
mov
xchg
aas
ins
xlat
push
dec
sar
aad
outs
rol
movs
dec
test
imul
adc
test
jge
into
sahf
adc
pop
mov
clc
mov
cmps
hlt
jmp
mov
inc
and
aas
enter
shr
pop
pop
into
stos
and
bound
mov
mov
dec
mov
nop
mov
loopne
addr16
mov
sti
(bad)
je
pop
pop
pop
imul
mov
frstor
push
lods
(bad)
adc
addr16
fbstp
lds
inc
stos
and
add
and
mov
sub
cdq
fcmovnu
test
in
sbb
test
pop
ins
imul
retf
ins
xor
rol
stos
inc
xchg
loope
pop
push
xchg
cmc
loopne
sbb
push
lock
dec
mov
or
mov
nop
in
cmp
inc
pop
cmp
mov
(bad)
sti
ss
mov
pop
ins
rcr
xor
lds
and
popa
retf
leave
add
xlat
dec
lahf
loope
and
mov
repnz
xchg
push
xor
rcl
mov
scas
pop
add
mov
out
jle
xchg
je
sahf
xchg
adc
data16
pop
(bad)
xchg
outs
xchg
cmc
test
sbb
pushf
neg
out
push
jmp
mov
pop
xchg
dec
xor
jns
mov
jbe
mov
sti
out
add
inc
jne
(bad)
dec
jo
int
pop
push
or
int3
mov
(bad)
xchg
pusha
mov
rcl
mov
ret
sti
lods
sbb
cmp
data16
icebp
jge
loop
xor
enter
clc
call
mov
sub
lds
mov
push
arpl
bound
loope
add
outs
arpl
xor
mov
enter
aam
xor
cmp
push
sub
mov
out
mov
add
jno
enter
cmp
sbb
jmp
sub
mov
inc
jmp
cs
sub
fisub
or
fistp
aas
push
mov
dec
jg
scas
push
fidivr
out
jg
inc
push
add
mov
js
jle
push
mov
adc
ins
test
push
jmp
sbb
jne
mov
sbb
sub
rcr
mov
mov
nop
retf
pop
mov
imul
(bad)
shl
sbb
xchg
ret
xor
push
out
or
sub
push
xor
mov
add
adc
inc
jo
jb
jmp
xchg
mov
imul
inc
into
sub
mov
gs
mov
dec
mov
(bad)
enter
pop
retf
(bad)
fwait
scas
dec
in
pop
push
test
fwait
mov
xchg
and
push
loopne
add
scas
shl
sub
(bad)
push
sbb
cmp
rol
sbb
mov
xor
test
mov
sbb
cmp
xor
sub
dec
xor
arpl
je
mov
sahf
out
data16
or
out
sub
xchg
out
je
dec
lods
add
stc
ret
enter
call
lahf
pop
or
scas
xor
sub
ins
push
add
int
popf
retf
cmp
test
push
mov
xchg
inc
je
rcr
pop
jmp
push
mov
retf
dec
repz
popf
xchg
mov
fisttp
add
adc
adc
outs
das
test
inc
ds
add
adc
mov
mov
rcr
call
(bad)
int
mov
les
shl
xchg
pop
out
jmp
sub
adc
imul
test
or
bnd
in
mov
js
in
std
mov
push
xchg
adc
cmp
dec
fmulp
sbb
xchg
fwait
dec
sbb
and
jge
jb
mov
dec
sbb
dec
jp
mov
out
enter
es
lock
retf
pop
enter
xchg
imul
out
mov
adc
rol
add
jne
inc
daa
jb
les
lods
das
in
aaa
xor
repnz
mov
jl
retf
jl
aam
sub
cwde
lds
in
sar
loopne
inc
cmps
loopne
jno
mov
add
out
aam
mov
mov
inc
out
and
cmc
in
mov
cwde
pop
sbb
div
or
iret
adc
mov
jp
cmp
jp
ficomp
idiv
xchg
out
in
in
and
ja
fs
shr
xor
data16
(bad)
movs
mov
mov
ins
fscale
push
push
ins
xchg
dec
cmps
jecxz
sub
push
mov
data16
mov
(bad)
mov
mov
out
xlat
sub
xchg
push
arpl
ins
sbb
dec
clc
push
xchg
or
xor
dec
mov
aas
mov
ss
out
stos
mov
mov
pop
(bad)
and
les
aaa
mov
cmp
xchg
mov
les
xchg
(bad)
push
fsubr
mov
push
test
push
jo
mov
add
xor
jge
sbb
call
lahf
fwait
or
sahf
xor
outs
addr16
push
test
lods
dec
mov
hlt
xchg
jl
xor
jo
adc
fld
mov
ret
xchg
(bad)
sub
mov
sbb
and
repz
pop
jmp
loop
mov
adc
cmp
push
sbb
icebp
mov
mov
lock
stos
jl
into
ss
retf
and
les
pop
test
xor
push
mov
sub
mov
aad
adc
jmp
inc
ficom
bound
sbb
sti
pushf
mov
out
push
and
mov
cdq
idiv
xchg
mov
(bad)
stc
add
aaa
mov
scas
dec
push
pop
lods
dec
mov
int
xchg
into
fmul
inc
icebp
in
xchg
stos
int
mov
inc
daa
push
leave
pusha
ret
call
sub
adc
enter
das
or
xchg
cmp
jbe
loope
adc
out
xchg
adc
loope
dec
pop
iret
xlat
call
add
int
cmc
xor
es
jmp
neg
stc
mov
xchg
fwait
(bad)
jp
mov
jle
popf
cmp
lock
push
cld
mov
push
or
cmc
jecxz
int
call
fwait
(bad)
push
jne
(bad)
int
(bad)
dec
mov
or
sub
iret
aam
(bad)
addr16
mov
pop
sar
cmp
push
xchg
call
mov
js
idiv
and
jae
popa
adc
xchg
pushf
mov
pop
shl
mov
ins
jge
xchg
push
pop
int
jbe
das
ret
scas
in
js
sub
and
adc
pop
scas
or
jns
ret
test
cdq
cmp
pusha
hlt
jnp
arpl
push
adc
cmp
in
popa
sbb
push
inc
scas
mov
or
cmp
fisttp
jmp
popa
outs
add
adc
push
mov
pop
inc
add
xchg
ins
xor
mov
int3
jmp
pop
rcr
ja
jmp
mov
cli
repz
das
out
test
icebp
imul
adc
stos
pop
hlt
pop
jp
test
push
xchg
mov
add
mov
jo
call
cmp
xor
sub
in
outs
or
pop
and
lock
jg
ret
in
(bad)
dec
cmps
dec
sti
jmp
mov
inc
cmp
je
sbb
jne
rcl
int
push
inc
jg
jmp
test
aaa
xor
aam
cmp
and
stos
inc
nop
adc
xchg
test
daa
mov
dec
out
out
mov
and
aaa
adc
pop
pushf
call
stc
pop
jle
(bad)
mov
adc
xor
cs
sbb
(bad)
in
mov
add
bound
mov
add
xchg
sbb
shl
lods
lock
push
js
imul
xchg
mov
push
ins
ins
xor
imul
dec
nop
mov
repz
out
jno
loopne
cdq
dec
rcr
push
out
leave
push
pusha
cmp
sbb
sub
out
adc
retf
(bad)
adc
lock
and
and
pop
mov
inc
dec
cmp
pop
hlt
inc
mov
stos
and
or
lea
nop
inc
cmp
daa
add
mov
or
cmp
inc
adc
in
xchg
mov
mov
jmp
xchg
and
jl
int3
mov
retf
cdq
cmp
sub
sub
in
push
fs
jmp
sub
stos
ret
lods
ds
push
pop
jnp
out
and
mov
shrd
or
mov
sub
or
call
hlt
int3
outs
dec
xchg
popa
mov
xchg
retf
(bad)
sub
out
aad
dec
jb
movs
aas
mov
adc
enter
mov
es
or
xlat
inc
leave
pop
aas
dec
jecxz
inc
xchg
int
(bad)
cmps
outs
loopne
loope
push
push
dec
and
clc
in
ins
bound
loop
mov
pop
cdq
clc
outs
or
jp
xchg
pop
lods
pop
xlat
mov
adc
ja
lahf
push
mov
jl
sub
(bad)
mov
mov
pop
add
fwait
xor
stos
les
jo
das
jg
psadbw
lahf
jnp
call
xor
jl
mov
sub
sbb
jge
mov
mov
scas
movs
mov
test
test
mov
jo
lods
je
mov
(bad)
ins
mov
loope
pop
jnp
test
sbb
das
out
pushf
jecxz
rcr
pop
lahf
xchg
not
aam
sbb
sti
jnp
ja
les
popf
inc
mov
fimul
(bad)
in
in
ret
test
cmp
cld
rol
cmp
call
jg
sub
stos
lea
stos
pop
fwait
jae
mov
xchg
cmp
push
push
clc
in
scas
aaa
jne
jbe
loopne
and
sar
in
cmp
and
or
test
or
ja
and
mov
and
mov
into
mov
retf
sbb
dec
or
mov
ss
or
imul
(bad)
addr16
lods
out
movs
dec
mov
jnp
enter
dec
inc
shl
add
sub
cmps
in
cwde
mov
and
sub
cmc
jo
pop
jle
xchg
push
inc
push
(bad)
mov
xchg
and
das
into
stos
sub
mov
mov
pop
pushf
test
jecxz
add
pop
push
shl
mov
test
cs
pop
sub
lds
rcr
lfs
mov
fimul
popf
xchg
ja
shl
ret
inc
fnsave
stos
scas
mov
ds
stos
rol
(bad)
and
adc
data16
mov
xchg
inc
pop
sub
or
(bad)
lds
mov
adc
movs
inc
pop
xchg
xor
add
pop
add
pop
and
or
fild
in
sub
enter
test
jo
cmp
mov
call
(bad)
dec
in
in
add
pop
(bad)
fmul
push
mov
add
sub
mov
push
test
jae
loopne
cli
mov
out
adc
pop
test
sub
arpl
xor
add
jbe
sub
jnp
dec
retf
out
out
loope
and
dec
jne
popf
inc
dec
cmp
inc
add
sbb
and
inc
das
out
das
ror
adc
scas
rol
in
gs
dec
inc
jne
jg
xchg
es
dec
inc
and
stos
lods
xchg
jns
repnz
in
inc
fimul
outs
or
add
or
mov
adc
dec
ins
mov
(bad)
dec
xor
popf
mov
xchg
fdiv
pushf
test
pop
xchg
test
mov
fldcw
pop
push
jp
sbb
add
inc
repz
inc
inc
push
and
adc
and
mov
sub
popf
sbb
out
jne
hlt
and
adc
cmovl
xchg
std
or
jo
mov
mov
test
fsubr
fisttp
cmc
loope
jo
movs
aad
test
clc
xchg
loopne
sbb
pop
scas
outs
cld
shl
mov
popa
add
loope
dec
jp
mov
mov
mov
or
popa
jmp
mov
inc
sub
add
outs
(bad)
pop
adc
shl
inc
inc
cmp
xchg
(bad)
mov
fistp
pop
mov
jne
mov
(bad)
jl
xchg
mov
fstp
jp
lock
adc
je
enter
inc
inc
lahf
pop
loope
pushf
int3
mov
adc
rep
inc
adc
dec
push
retf
ins
inc
mov
xchg
sbb
clc
dec
cs
xchg
mov
mov
push
xchg
xchg
ret
add
jecxz
push
inc
test
cmp
in
pop
adc
adc
ds
rol
jl
mov
std
push
iret
inc
jge
inc
mov
(bad)
inc
cmp
adc
mov
sub
daa
jge
add
cmps
sbb
lock
movs
or
pop
(bad)
iret
aad
scas
ins
enter
sbb
test
sub
pushf
add
xchg
iret
test
movs
lock
mov
addr16
inc
xor
sbb
mov
je
loope
fisttp
(bad)
in
dec
push
mov
test
ins
out
popa
ins
push
xor
mov
cmp
xchg
pop
pop
xor
cmp
fidiv
mov
and
adc
(bad)
sbb
fisttp
test
aas
gs
jp
das
leave
adc
jecxz
add
mov
std
sub
mov
ror
add
push
adc
sti
in
add
cmp
sub
imul
icebp
pushf
(bad)
adc
or
ret
mov
cli
pop
mul
frstor
pop
or
mov
sbb
jo
mov
cli
add
and
mov
sbb
das
mov
push
pop
mov
mov
mov
inc
cmp
lods
arpl
out
push
or
lds
pop
adc
adc
add
pop
int
xor
push
cdq
pop
pop
cmp
call
nop
scas
lods
pusha
jns
or
mov
es
mov
jno
add
enter
inc
xor
jne
int3
push
inc
cmp
dec
xchg
ret
adc
stos
lea
mov
popa
pop
rcl
dec
lea
inc
(bad)
das
adc
push
hlt
sub
and
popa
push
in
es
lods
jbe
adc
jnp
in
loop
das
fisub
mov
daa
popf
add
ret
mov
cmp
cmp
xchg
mov
adc
test
in
stc
add
sbb
sub
fiadd
(bad)
push
pop
or
stc
(bad)
sbb
fstp
mov
adc
jmp
adc
pop
stc
jmp
sub
stos
outs
lea
es
and
inc
fnstcw
stc
scas
xchg
cmps
xchg
jecxz
shr
cmp
fistp
cmp
in
add
mov
dec
arpl
sahf
dec
icebp
stos
cmp
mov
or
(bad)
mov
rcl
add
mov
sbb
and
fcmovnbe
cmc
jns
out
faddp
jns
aaa
push
sub
xchg
push
cmc
jns
pop
jno
icebp
lds
jmp
imul
sub
sbb
int
adc
xor
sub
mov
push
in
dec
out
pop
out
std
pop
cmp
sub
cli
xor
fsubr
sub
xor
mov
adc
adc
shl
ret
dec
int3
cs
das
imul
call
repz
mov
xchg
xchg
test
hlt
sub
call
mov
movs
imul
(bad)
pop
cwde
sbb
add
cdq
push
pop
push
mov
retf
(bad)
adc
push
push
inc
inc
sub
(bad)
ins
inc
iret
dec
push
dec
inc
push
sbb
mov
cdq
icebp
xor
clc
mov
mov
xchg
shl
xchg
pop
fcmovnb
call
retf
mov
cmp
xor
mov
ss
cmp
test
xor
mov
stc
push
xlat
jmp
cmp
sahf
xchg
mov
cmp
sbb
fxch
push
out
and
push
movs
movs
push
bound
daa
test
ins
aaa
rcl
stos
inc
ins
jo
rol
or
mov
pop
dec
das
mov
cmp
mov
cdq
mov
jp
cmp
ja
jg
push
xor
outs
shl
out
or
xchg
push
mov
stc
or
stc
inc
cdq
pop
popa
adc
or
mov
or
jne
sub
xchg
sbb
cmp
add
adc
xor
jmp
jl
and
pop
in
pop
call
int3
xchg
loope
xchg
pushf
push
xchg
mov
bound
push
div
(bad)
stc
add
rep
and
jl
push
mov
in
and
sbb
ins
das
mov
push
bound
mov
je
xor
enter
cmp
shl
mov
jle
inc
sbb
xor
mov
mov
xchg
or
cmp
mov
push
imul
xorps
loop
enter
cs
jmp
rol
pop
mov
aas
not
cs
cmps
movs
movs
pop
test
push
std
pop
call
(bad)
call
repz
xor
(bad)
repnz
mov
in
outs
jnp
push
in
pop
nop
mov
mov
out
push
pop
iret
aaa
pop
(bad)
mov
mov
sbb
aad
mov
add
lea
jae
stc
(bad)
not
stos
jne
adc
push
adc
cmp
cwde
pop
icebp
and
ins
stc
in
loop
pop
sub
sar
cmp
or
cld
fst
xchg
push
lock
arpl
push
(bad)
or
pop
xchg
scas
je
in
cs
adc
fimul
or
cld
pop
push
outs
clc
xor
or
add
fldcw
lds
add
sub
dec
aam
(bad)
outs
or
jl
and
iret
jnp
popf
mov
(bad)
call
ret
jno
aas
outs
add
sub
iret
push
bound
sbb
push
das
lods
cmp
aas
(bad)
mov
retf
loop
test
imul
(bad)
push
cmp
inc
outs
sbb
sti
frstor
popf
hlt
in
jl
(bad)
data16
hlt
cpuid
bound
adc
rcr
pop
sub
jne
test
in
push
icebp
lea
mov
in
cmp
lods
adc
shr
loop
inc
aas
xchg
lds
sbb
push
hlt
cmp
out
or
push
leave
fsubp
xchg
or
fisttp
arpl
adc
ins
fsub
inc
sub
inc
push
mov
daa
sahf
mov
sbb
or
sub
sti
xchg
cmp
repnz
add
cmps
sbb
out
dec
test
xor
xchg
das
cmp
shl
retf
stos
and
push
nop
gs
shr
pop
rcr
adc
lods
sub
cmp
ret
int3
cmps
movs
mov
mov
push
mov
jmp
imul
adc
pop
or
sub
aam
push
sar
aaa
call
cmp
imul
mov
jp
stc
mov
fst
rcl
mov
pop
adc
or
rcr
out
adc
dec
sub
test
retf
cmp
or
add
enter
stos
gs
(bad)
ins
mov
aas
dec
add
pop
stc
mov
fimul
jns
ret
pop
hlt
inc
cmp
mov
pop
(bad)
in
ficomp
sub
add
mov
mov
xlat
mov
je
add
xchg
fistp
mov
enter
ss
mov
mov
ret
and
sub
sub
pop
jmp
lds
arpl
cmp
rcl
loopne
pop
addr16
jmp
push
push
cmp
xchg
push
or
repnz
loope
cli
test
sub
stos
test
jl
jp
sub
(bad)
stc
mov
xor
pop
or
repnz
ret
inc
ds
out
(bad)
popf
clc
xor
and
jl
test
sub
mov
push
inc
hlt
int
pop
call
xlat
lahf
mov
inc
les
hlt
jle
sub
or
pop
bound
popf
test
inc
loop
in
xchg
imul
data16
inc
and
xchg
inc
sar
mov
test
add
les
out
ret
daa
mov
inc
mov
(bad)
daa
aaa
pop
mov
test
bound
xor
and
(bad)
fistp
fstp
add
dec
(bad)
push
sbb
sub
adc
pop
in
rcr
(bad)
xor
movs
xor
mov
mov
cwde
out
loopne
mov
jge
pusha
addr16
pop
push
or
push
ret
pop
adc
jle
inc
fdiv
xor
jp
fld
ret
push
jo
mov
push
push
cmps
inc
fs
test
xchg
shl
int3
aaa
adc
lods
aam
call
dec
or
(bad)
lock
pop
mov
fld
push
pop
mov
mov
dec
popa
rcl
add
jge
and
mov
jmp
sti
js
fidivr
in
jmp
(bad)
add
scas
sub
mov
cld
sub
mov
imul
jns
push
cld
fist
pusha
out
aas
xchg
dec
loope
js
test
and
nop
and
fmul
loope
jb
fs
fistp
call
jbe
mov
and
and
test
adc
movs
mov
daa
lahf
cmp
pop
(bad)
loopne
shl
movs
push
mov
inc
sub
adc
and
push
xor
mov
jg
pop
dec
sub
data16
repnz
setno
mov
loopne
dec
jne
cmp
f2xm1
add
xchg
popa
(bad)
pop
ss
test
xchg
mov
lea
xchg
repnz
js
fldcw
add
mov
sub
inc
dec
xor
add
mov
mov
nop
or
lds
jecxz
jge
and
jecxz
xchg
xor
adc
mov
add
jo
movs
stos
mov
jl
sbb
mov
je
shl
or
add
(bad)
sub
xchg
cmp
xlat
inc
and
mov
or
pop
sbb
imul
jle
inc
jmp
(bad)
pop
push
fs
loope
push
(bad)
pop
inc
addr16
sub
push
dec
(bad)
lea
dec
loop
xchg
mov
xor
adc
sbb
inc
cli
mov
add
jb
test
cli
ret
out
(bad)
cmp
aam
dec
dec
dec
jp
outs
cld
and
xchg
pop
xchg
sti
cli
xchg
pop
call
fs
adc
add
sbb
sbb
popf
push
adc
pop
inc
pusha
jo
inc
jb
sti
sub
dec
ss
and
xchg
mov
outs
xor
or
jmp
out
cwde
jl
push
or
aad
mov
and
das
enter
scas
mov
outs
add
mov
movs
mov
add
out
mov
in
leave
xor
mov
jmp
add
in
and
jne
shr
test
jbe
inc
cmp
pop
leave
aas
jl
mov
mov
bound
or
retf
jmp
ins
(bad)
shl
jnp
movs
daa
jmp
les
stos
adc
pop
xor
cmp
xchg
stos
jg
adc
xor
jmp
and
xchg
jb
std
call
cmc
inc
rcr
or
dec
xchg
popa
or
sub
pop
sahf
sti
inc
stos
mov
jnp
in
in
xor
adc
fcmove
mov
dec
nop
cmp
mov
out
push
and
dec
pop
sbb
or
mov
cli
leave
sub
scas
mov
pop
lahf
cmp
mov
repz
dec
aaa
(bad)
push
mov
into
std
sub
lock
sahf
psubd
stc
jg
xor
sub
aam
inc
imul
add
xor
popa
push
and
push
mov
jmp
push
popf
addr16
rol
shl
adc
out
int3
popa
xor
pause
repz
outs
sub
in
jae
adc
stc
jo
push
xor
mov
scas
push
sub
in
push
retf
mov
shl
dec
fwait
and
mov
and
in
mov
dec
test
cld
push
daa
xchg
mov
retf
add
jmp
les
mov
stc
jmp
fcmovb
ret
imul
clc
or
add
fwait
test
xchg
inc
push
scas
pop
les
cmp
arpl
add
xchg
pop
mov
jl
popa
and
das
jae
mov
xchg
cmp
mov
dec
or
outs
cld
or
xchg
dec
nop
push
fwait
cmp
les
mov
std
dec
div
mov
stc
dec
icebp
rdmsr
jno
dec
test
add
inc
cli
sub
cdq
push
rcr
push
aas
mov
loop
adc
jecxz
push
pop
sahf
mov
pop
repz
push
out
popf
pusha
xor
pop
mov
pop
xlat
xlat
mov
mov
dec
push
std
add
sbb
push
dec
icebp
push
into
sar
dec
popa
test
cmc
mov
movs
cdq
fsub
inc
or
xchg
jae
cld
adc
retf
lods
adc
std
cmp
cmc
pop
xor
mov
jmp
out
xchg
push
mov
pop
or
jno
xchg
dec
and
push
scas
xchg
call
dec
ror
cli
mov
xor
movs
mov
mov
cmp
mov
pop
or
push
xchg
or
push
int3
ss
add
mov
pop
fdivr
pop
in
test
cwde
aaa
adc
xchg
mov
xchg
aas
cld
aad
sti
pop
jmp
adc
pop
mov
cmovns
aad
out
cmp
std
and
jecxz
and
shl
sub
stos
or
leave
xchg
cli
(bad)
cmp
mov
xchg
inc
and
jmp
call
mov
mov
stos
test
fdivr
xchg
push
retf
clc
and
repz
and
in
sub
lods
xchg
inc
mul
std
add
push
or
test
mov
in
movs
sub
mov
jmp
jno
pop
jbe
jmp
nop
inc
fadd
outs
es
sbb
xchg
(bad)
mov
push
mov
fwait
mov
loope
test
dec
adc
fwait
push
imul
inc
push
popf
xchg
fisttp
xchg
mul
cs
outs
loop
cs
ja
lahf
mov
add
jae
jge
mov
or
xlat
pop
(bad)
xchg
jbe
push
int
jmp
(bad)
mov
shr
xlat
movs
aaa
movs
cmp
push
mov
adc
mov
adc
add
add
das
icebp
das
test
or
cld
mov
test
jbe
push
sub
xchg
add
sbb
fwait
add
xchg
mov
cmp
jns
push
and
lods
ss
or
in
cmps
loope
fs
sbb
rol
cmp
sbb
mov
fsub
popa
sbb
ja
lock
sbb
sub
loopne
fsub
add
dec
sbb
cmps
and
xchg
cwde
cmp
cmp
cld
fs
fld
js
jns
cmp
dec
in
xchg
pop
pop
sub
out
call
(bad)
pop
adc
pop
add
cmp
mov
xchg
std
inc
and
icebp
adc
fisubr
popa
cmp
int
jno
jbe
and
jg
dec
mov
jnp
mov
sar
mov
jae
pop
jo
loopne
mov
es
mov
push
gs
mov
push
ficom
stc
cmps
xchg
(bad)
push
scas
lock
or
retf
push
retf
jnp
push
cmp
cmp
and
dec
jb
ss
add
pmaxsw
xchg
pop
xchg
inc
out
xchg
gs
and
jb
push
loop
test
ss
pop
(bad)
movs
in
push
leave
pop
(bad)
ins
jecxz
inc
inc
fcomp
xchg
xchg
(bad)
jns
mov
imul
mov
fwait
and
int3
sub
mov
loope
outs
pop
pop
pop
out
push
mov
dec
jnp
movs
rol
sub
and
sahf
add
push
pop
jp
pop
or
ins
inc
jno
sbb
cld
xlat
into
mov
push
or
or
adc
adc
repz
cmp
push
(bad)
add
es
addr16
xchg
call
lock
sbb
std
std
mov
push
ret
scas
aas
and
adc
pop
retf
mov
pop
pop
jecxz
retf
lahf
or
div
adc
fwait
mov
test
cmp
clc
and
jecxz
ss
adc
sub
mov
fnstenv
adc
push
aad
cdq
in
jne
sbb
xor
xor
out
mov
pop
int
cmp
xor
jo
rol
xchg
mov
pop
push
repnz
sahf
jecxz
push
jnp
jns
ds
rcl
mov
push
mov
cmp
push
in
jne
shl
jmp
push
jnp
jnp
cmp
jne
nop
push
mov
inc
mov
xor
icebp
adc
in
mov
dec
popa
and
mov
rol
xchg
mov
dec
sub
sub
mov
inc
jo
cmp
cmp
fimul
jmp
int
pop
out
cmp
lahf
out
push
dec
(bad)
adc
clc
pop
mov
sbb
dec
out
outs
jmp
aam
inc
mov
and
pop
pusha
fsubr
push
lahf
clc
loope
xor
push
xor
fcomp
inc
jae
imul
test
push
dec
popa
adc
cmp
adc
add
mov
mov
jae
int3
mov
jae
rcl
dec
shl
ds
fdiv
jno
popa
sub
add
pop
es
and
jnp
(bad)
jnp
xor
cmp
std
and
jo
push
cwde
jl
and
movs
dec
scas
sub
repz
pusha
or
les
ins
inc
cli
jl
ins
imul
push
push
cmp
ret
cmp
xor
nop
aam
inc
leave
push
dec
inc
sub
(bad)
pushf
push
mov
cli
addr16
nop
popf
xchg
sbb
adc
sub
jmp
sub
js
lods
pushf
mov
dec
jle
pop
rol
cmp
nop
inc
outs
pop
pop
retf
aas
jb
jmp
jg
inc
daa
les
sbb
out
arpl
jle
popf
pushf
je
mov
sub
mov
dec
rcl
mov
movs
adc
dec
loope
loopne
lock
sti
adc
cmp
data16
je
or
int3
jmp
mov
iret
xchg
jg
lds
mov
adc
or
ss
add
aam
add
cmp
je
mov
pop
fbstp
sub
cmp
rol
cmp
movs
mov
jl
xor
jmp
sar
push
out
or
cmp
jo
movs
push
mov
cs
xor
lds
push
and
pop
stos
adc
sti
(bad)
mov
data16
out
or
inc
imul
sti
sub
mov
setns
mov
push
inc
sub
loope
jp
cs
push
mov
pop
add
mov
cmp
pushf
in
outs
pop
add
(bad)
xor
pop
cmp
mov
dec
inc
mov
in
cs
lods
sub
adc
das
adc
sbb
shl
cld
adc
ds
or
xor
push
addr16
xchg
push
inc
mov
mov
jnp
or
mov
fwait
dec
xor
mov
inc
or
add
shl
mov
pop
out
fnstenv
xchg
test
mov
inc
mov
mov
mov
loopne
cwde
ficom
or
pop
pop
mov
test
sar
inc
(bad)
fwait
xor
sbb
or
out
stos
mov
mov
mov
xchg
cmp
test
(bad)
out
jp
dec
(bad)
inc
push
mov
and
push
mov
add
les
icebp
inc
add
aas
push
fnsave
xor
ss
rcr
in
adc
pop
cmps
xchg
fs
and
inc
mov
imul
xchg
lock
es
retf
repz
arpl
sti
(bad)
dec
mov
xchg
jmp
pop
fistp
adc
cmps
xor
jne
jmp
xchg
fbstp
lock
jge
movs
repnz
push
jg
pop
xlat
mov
jae
ret
dec
and
pop
mov
scas
imul
xor
inc
shr
adc
fld
mov
mov
mov
mov
test
mov
or
aaa
adc
pop
cmps
call
jnp
pop
push
clc
mov
and
shl
test
jmp
or
jno
pop
pop
ds
pushf
cmp
inc
ins
rol
adc
push
sar
popa
dec
out
mov
cwde
push
mov
push
sbb
das
adc
pop
push
xor
out
mov
ror
rdtsc
mov
(bad)
fdivp
sbb
jmp
sti
mov
add
xor
inc
add
mov
lods
iret
test
outs
enter
and
push
push
rcl
int3
aaa
mov
pop
lahf
std
test
call
dec
popf
out
mov
mov
mov
and
movs
ja
imul
pop
jb
lods
cmps
dec
arpl
push
stc
add
xchg
icebp
push
jp
adc
jo
and
imul
in
push
sbb
sub
pop
inc
xchg
retf
pop
(bad)
xor
inc
ins
ret
jmp
push
push
sbb
adc
or
mov
(bad)
adc
loopne
mov
jb
test
aas
pop
jne
jne
(bad)
movs
jl
xchg
ud0
add
aas
add
or
mov
dec
push
adc
cmc
cmps
jmp
mov
sub
call
and
xor
pop
sbb
or
sbb
push
xor
cmp
enter
and
jge
xchg
mov
outs
stos
mov
pop
call
je
ds
test
and
and
cmp
aad
sar
lahf
mov
cmp
jbe
jnp
out
jecxz
pop
mov
(bad)
add
xor
add
scas
and
pop
jp
idiv
les
outs
sub
aad
sti
xchg
xor
xchg
cdq
mov
xchg
je
test
jmp
sub
cmp
xchg
jecxz
sahf
es
repnz
lods
fwait
add
out
neg
mov
sub
xor
cmps
mov
sub
jae
mov
inc
retf
clc
mov
sbb
sub
mov
mov
retf
push
push
stos
add
(bad)
mov
ins
lock
xor
call
xor
xor
cs
pop
mov
mov
rol
dec
push
sbb
push
fdivr
adc
pop
fprem
mov
sbb
int3
xchg
lock
sbb
dec
inc
jno
cmp
adc
dec
pop
mov
sbb
sbb
iret
(bad)
test
(bad)
jb
into
psubsw
pmuludq
push
test
mov
push
mov
(bad)
xchg
xchg
adc
push
cmp
pop
push
pop
(bad)
jmp
and
call
in
ins
ja
call
mov
in
push
and
outs
(bad)
lahf
xor
mov
push
push
imul
add
inc
jecxz
mov
and
and
and
inc
dec
pop
mov
jge
pop
xchg
xor
lock
cmc
fcmovnbe
xor
or
jmp
iretw
add
in
sub
cmps
retf
popa
inc
pop
push
ror
mov
pop
cmp
and
loopne
cmp
mov
ja
icebp
inc
adc
push
push
sar
dec
rcr
push
mov
test
out
dec
pop
bnd
sub
add
and
fldcw
pop
xchg
sbb
cs
lahf
inc
je
push
push
pop
test
and
pop
mov
ror
dec
movs
or
sub
mov
das
in
push
mov
cmps
fild
mov
(bad)
pop
mov
cmps
sbb
arpl
inc
pop
movs
daa
fistp
outs
xchg
aam
xchg
push
fld
add
iret
daa
cmp
(bad)
ins
push
jecxz
retf
jp
mov
and
and
repz
mov
cmp
dec
loop
push
das
fbld
inc
mov
xor
daa
xchg
loopne
imul
push
(bad)
jbe
adc
lahf
and
call
mov
or
jae
inc
adc
jl
jae
out
icebp
(bad)
sub
pop
fwait
mov
movs
inc
ins
push
and
xchg
sbb
(bad)
movs
xor
push
mov
psubq
in
call
xor
xchg
mov
pushf
retf
push
fmul
jns
mov
in
mov
dec
je
xchg
mov
dec
movs
xor
xchg
sar
clc
imul
pushf
push
mov
js
and
or
pop
push
ins
dec
pop
or
cmp
cmp
sub
mov
js
fstp
adc
inc
ror
pop
mov
or
jbe
(bad)
cld
dec
jmp
xor
inc
movs
mov
jno
ins
xchg
das
xchg
sbb
cld
(bad)
enter
and
xchg
outs
popf
cmp
mov
cs
daa
cs
(bad)
(bad)
xor
cmp
dec
sbb
retf
sbb
out
add
popf
repz
ins
push
das
stc
scas
mov
push
push
dec
jno
into
test
dec
mov
mov
and
frstor
pop
mov
pop
je
test
les
mov
repnz
xor
and
dec
mov
sbb
jmp
mov
ficomp
hlt
push
icebp
test
mov
xchg
iret
in
inc
pop
call
sub
cmp
js
inc
cld
adc
fwait
push
adc
push
int
bnd
cs
shl
pushf
adc
cwde
je
popf
jp
scas
xchg
fstp
sahf
ds
adc
or
mov
loope
or
xchg
xchg
adc
inc
pusha
inc
adc
jns
sbb
jno
and
jmp
push
ds
mov
jns
push
cmp
adc
mov
std
fdiv
retf
jle
xlat
lods
pop
adc
setle
push
cmp
xor
add
jecxz
pop
inc
sub
xor
jne
mov
pop
pop
mov
rep
sbb
and
inc
arpl
sub
and
je
or
pop
xchg
push
mov
stc
ficom
(bad)
pusha
fst
ss
test
sub
add
ds
dec
cwde
mov
fst
(bad)
mov
dec
push
sub
mov
stos
das
(bad)
pusha
lods
movs
and
aas
(bad)
push
or
mov
cmp
mov
and
out
xchg
js
es
inc
movs
pop
pusha
int
pop
add
cld
(bad)
cmc
clc
push
sub
fdiv
faddp
and
mov
test
mov
sub
lock
pop
or
ret
adc
inc
rcl
call
push
adc
in
scas
(bad)
stos
and
and
out
pushf
js
cmc
je
or
fdiv
cmp
cmp
and
enter
imul
enter
ss
das
mov
hlt
dec
cmps
aas
cwde
push
adc
sbb
adc
and
nop
out
inc
mov
adc
shl
out
mov
mov
sbb
ret
ins
sbb
(bad)
neg
jmp
nop
(bad)
bound
or
lahf
sbb
jno
add
xchg
jp
sbb
retf
jae
and
sbb
mov
aas
sti
jno
xchg
pop
lods
pop
mov
xchg
pop
int3
mov
sub
out
mov
clc
mov
js
test
push
test
sahf
out
sar
mov
cmp
dec
enter
or
enter
pop
xor
fs
lds
sahf
retf
cli
retf
psubusw
test
(bad)
mov
sbb
mov
fistp
lods
or
loop
das
(bad)
pop
pop
adc
mov
rol
xlat
jle
xchg
fst
mov
jbe
outs
adc
shl
add
sub
pop
fnstcw
in
sti
stos
push
movs
and
(bad)
out
inc
cmp
(bad)
in
mov
xor
sbb
pop
outs
and
mov
shl
popa
scas
fwait
call
cld
cdq
fdivr
adc
push
out
aas
mov
adc
arpl
sar
ror
sar
cmps
pusha
cmp
aam
(bad)
mov
cmp
loope
adc
mov
cdq
cmp
loop
xor
mov
fwait
lea
fidiv
mov
mov
popa
jp
stos
pop
enter
out
iret
shl
pusha
mov
cmc
pop
push
out
or
adc
lds
mov
pop
push
xchg
add
mov
sti
out
lock
mov
mov
rol
push
ret
rcr
cmp
sbb
lock
rol
pop
repnz
fwait
pop
in
(bad)
daa
(bad)
daa
pop
nop
mov
mov
xchg
outs
mov
call
xchg
lds
rol
add
jp
(bad)
int
mov
sub
dec
popa
sbb
mov
pop
out
sar
out
lock
adc
inc
mov
fst
daa
or
dec
sbb
pmullw
sbb
int
pop
inc
xor
fldenv
pusha
cmovg
sub
iret
jo
and
jecxz
sub
movq
mov
ja
mov
int3
sub
aam
js
sbb
jp
loope
xor
fsubr
out
or
test
mov
xor
js
mov
adc
xchg
leave
dec
inc
mov
icebp
add
and
or
in
test
in
outs
jecxz
mov
mov
add
and
ror
mov
fsincos
mov
dec
jge
or
out
xlat
xchg
cli
jg
adc
popf
mov
enter
pop
sub
push
ret
push
or
(bad)
or
add
xchg
inc
stc
repnz
iret
jp
xchg
out
xchg
ds
ins
idiv
cmp
dec
xchg
pop
xchg
retf
(bad)
repz
mov
popa
div
adc
and
mov
inc
adc
mov
ins
sub
hlt
hlt
ror
das
adc
dec
rol
sub
xchg
cmp
int
lock
enter
int
hlt
idiv
push
ins
stos
pop
test
sbb
stc
outs
adc
loop
pushf
int
add
push
dec
mov
movs
add
push
pop
clc
jb
js
mov
test
test
aad
inc
mov
xor
mov
mov
mov
mov
aaa
outs
fcom
repnz
shr
inc
rcr
mov
jne
nop
xchg
nop
add
and
repnz
mov
loopne
fisubr
mov
jle
jl
mov
cld
js
and
pop
xchg
stos
out
out
sub
leave
push
push
(bad)
pushf
push
and
adc
dec
sar
mov
std
jecxz
cmp
sbb
aas
ins
lods
jae
inc
jb
test
std
loope
fsubr
add
cld
push
inc
jmp
lds
call
pop
dec
bound
scas
adc
jae
jle
push
repnz
cli
in
xchg
or
into
aas
fnsave
push
push
mov
cmps
out
mov
xor
mul
popa
stos
xchg
jb
mov
nop
push
inc
mov
jl
cs
fs
or
jo
add
add
aad
cmp
les
mov
inc
inc
or
push
js
mov
pop
adc
int
xor
mov
jp
xchg
xchg
sub
and
das
in
arpl
stc
xlat
ret
loop
stc
and
out
pusha
movs
in
mov
push
cmc
pop
arpl
aaa
or
(bad)
adc
adc
cmp
mov
mov
cmp
shl
pop
or
adc
enter
inc
out
and
and
cmp
ror
in
or
sbb
add
(bad)
aas
mov
test
ss
popf
outs
xor
(bad)
mov
(bad)
outs
mov
movaps
outs
popa
inc
pop
mov
test
mov
and
pop
jmp
clc
frstor
fdivr
cmps
jno
push
pop
xchg
sub
cmc
mov
jmp
je
aam
push
not
inc
cmp
xlat
(bad)
mov
retf
dec
aaa
test
and
inc
add
xchg
adc
mov
and
sbb
dec
retf
fmul
mov
mov
sub
fcomp
xor
sbb
dec
push
ins
out
mov
adc
stos
cli
shr
jae
into
test
ja
jp
(bad)
jo
xor
dec
jge
cs
xor
pop
xchg
ins
or
lods
pusha
jle
xor
jbe
hlt
sbb
xchg
sbb
sbb
mov
jb
xor
mov
sub
mov
mov
aaa
ret
cmp
outs
and
xchg
jmp
gs
sbb
sbb
mov
add
stos
push
pop
ins
hlt
int
arpl
imul
mov
jmp
les
or
xchg
enter
mov
sbb
jecxz
and
fsub
inc
enter
pop
inc
sbb
sub
outs
outs
pop
mov
push
cli
pop
sbb
mov
imul
mov
pop
mov
sbb
arpl
arpl
loopne
jg
ror
mov
adc
push
dec
jle
and
mov
movs
dec
mov
push
pushw
loope
add
and
add
or
inc
pop
stc
xor
mov
xchg
cmps
mov
jne
ror
push
sbb
adc
ds
fbstp
mov
pop
addr16
mov
movs
fs
pop
xchg
popa
dec
repz
xchg
sbb
push
test
dec
fidivr
je
aas
push
call
fwait
push
(bad)
sahf
sub
out
in
out
fldcw
sbb
outs
int
jmp
(bad)
cli
rcl
cmp
push
jl
aam
retf
cmp
jns
(bad)
lods
xor
cdq
popf
outs
xchg
pop
out
fistp
mov
inc
lea
in
mov
ins
xor
les
ss
push
fbld
mov
push
xor
mov
cmp
add
leave
and
pop
dec
fsub
ret
icebp
je
sahf
test
or
push
push
xor
movs
cwde
out
ss
xchg
xchg
bound
loopne
popf
icebp
inc
fsubp
or
scas
dec
xchg
add
scas
or
rcr
jbe
ins
jmp
jne
cmp
and
jg
out
fistp
xchg
mov
int3
(bad)
fs
mov
jno
dec
fcom
xchg
sub
dec
dec
adc
add
in
arpl
lods
inc
push
mov
pusha
cwde
sbb
lahf
ins
inc
pop
mov
push
mov
push
mov
jns
test
jmp
fs
fcomp
xchg
leave
pop
lods
bnd
shl
enter
shr
(bad)
out
je
pop
push
shl
ins
in
sbb
std
xor
lock
pop
leave
xor
mov
dec
retf
add
jne
iret
cmp
adc
pop
pushf
sbb
repz
sahf
cli
xor
stc
mov
jp
bound
sub
das
inc
xor
xor
pop
jle
jno
add
jae
mov
pop
ss
dec
jecxz
mov
outs
(bad)
jbe
mov
out
jnp
mov
not
push
stos
sub
inc
out
push
mov
cmp
inc
ret
add
int
push
pop
lds
shl
ins
ror
mov
(bad)
movs
or
stos
aam
xchg
scas
adc
data16
int3
sub
lods
sti
and
sub
outs
mov
rcr
stos
cwde
xor
mov
out
mov
cmc
(bad)
repz
dec
sub
push
icebp
dec
(bad)
iret
imul
loop
add
cmps
or
fmul
fwait
cli
inc
dec
ins
push
push
xchg
mov
jne
push
or
aaa
xchg
test
ja
fsubr
data16
idiv
or
dec
pop
(bad)
retf
pop
xor
push
shl
xchg
and
ret
cld
sbb
pop
push
sbb
mov
mov
or
ja
sub
cmps
mov
mov
push
ins
mov
enter
out
mov
xchg
popf
jecxz
push
jl
das
mov
sbb
mov
sbb
into
sbb
aam
and
das
lds
inc
bound
mov
aam
adc
sar
ss
mov
les
ficom
sub
test
push
or
(bad)
pop
lods
fadd
xor
mov
or
iret
jl
out
push
push
lahf
xlat
jg
outs
and
gs
(bad)
pop
jecxz
sub
cmp
or
pop
outs
or
push
and
xchg
pop
cmc
ins
inc
cwde
fwait
loop
push
sbb
mov
test
jno
xor
pop
jnp
loop
movaps
cmps
push
(bad)
xchg
jns
jge
jmp
jno
loop
jb
fstp
rcl
or
retf
and
push
xchg
and
push
dec
test
outs
mov
and
pop
outs
and
or
ficomp
xor
pop
jmp
mov
xchg
in
adc
je
lock
(bad)
sub
and
jmp
in
cmp
sub
loopne
fnstcw
pushf
ret
dec
call
ins
add
pusha
hlt
loop
xchg
dec
sbb
cli
ds
loopne
(bad)
ret
rcr
cmc
das
mov
pop
in
push
mov
and
dec
xchg
iret
out
mov
adc
or
push
sub
inc
repnz
xchg
lahf
aam
jb
cmps
nop
sbb
jns
enter
xor
repz
(bad)
in
sbb
mov
inc
jp
test
(bad)
es
movs
xchg
das
adc
jmp
lods
inc
stc
jecxz
jp
cmps
pop
pop
dec
and
xchg
not
pop
xchg
arpl
or
and
xor
or
push
sub
les
test
test
enter
inc
ret
test
add
test
mov
fisttp
lods
imul
les
inc
call
pusha
cmp
adc
sbb
out
int
xchg
ins
xor
mov
sbb
dec
aaa
imul
mov
xchg
mov
or
loopne
cld
imul
aad
mov
mov
mov
inc
shr
xstore-rng
clc
or
jno
pushf
sahf
mov
pop
pop
mov
aas
push
(bad)
stc
out
sub
pop
sub
push
ret
mov
mov
dec
(bad)
cli
mov
cwde
and
push
in
mov
mov
mov
movaps
arpl
in
or
sbb
(bad)
in
in
ins
shl
and
aam
dec
popf
sub
mov
shl
jecxz
div
icebp
xchg
sub
sbb
pop
fnstsw
pop
fstp
adc
dec
aad
dec
xor
mov
pusha
hlt
leave
push
or
in
inc
ins
gs
loope
push
jecxz
icebp
dec
aaa
cli
adc
out
add
or
inc
jmp
jmp
mov
cmc
call
shl
pop
inc
ins
xchg
gs
gs
fiadd
jl
fsub
cmp
cmp
push
retf
xchg
pushf
pause
xchg
leave
fstp
mov
mov
mov
repz
jmp
test
repz
push
pop
add
sub
addr16
repnz
pop
jno
jge
out
neg
aam
mov
es
call
gs
loopne
fild
test
fadd
xchg
adc
retf
sbb
fnstsw
and
ror
adc
mov
clc
adc
xchg
or
mov
vmovq
nop
imul
jle
fsubr
pop
jle
aaa
aam
or
dec
inc
inc
in
inc
bound
mov
push
add
adc
inc
push
arpl
inc
cmp
out
add
pmovmskb
jmp
mov
lds
pop
xchg
jbe
clc
(bad)
arpl
push
push
fst
nop
lds
popf
out
dec
xchg
fisub
pop
xor
add
es
fcom
das
addr16
test
xor
nop
add
lods
mov
sub
add
test
pop
dec
ja
mov
rcr
jmp
out
mov
mov
lea
mov
pushf
movs
push
mov
add
push
jb
loop
push
pop
ins
or
pop
pop
xchg
cmp
std
loop
and
pop
cli
frstorw
pop
cli
xlat
mov
sub
cdq
pop
cmp
enter
int
gs
enter
mov
jp
mov
cmp
jecxz
sbb
outs
push
push
dec
xor
pop
xor
xchg
or
xor
test
or
daa
mov
scas
stos
out
in
mov
cmps
jnp
xchg
and
mov
xchg
inc
xchg
jns
mov
es
cs
ficom
imul
dec
call
es
sbb
pop
imul
sub
push
mul
xchg
cmc
shr
ja
fist
mov
lahf
outs
or
mov
lock
mov
mov
sar
(bad)
mov
jg
repnz
jp
movs
mov
add
lods
sub
jecxz
gs
push
(bad)
jmp
xchg
pop
mov
sbb
outs
out
push
jnp
jae
add
fistp
in
mov
inc
inc
inc
add
ds
int
pop
std
aaa
shl
mov
pop
rol
cld
shr
adc
fs
sti
jmp
imul
inc
add
sar
push
jmp
or
push
leave
call
stos
inc
cwde
mov
dec
mov
push
sar
in
xchg
loopne
test
jae
xor
mov
cld
icebp
adc
sahf
aas
sub
push
mov
scas
dec
xchg
ds
hlt
pop
loopne
sahf
jno
aas
pop
test
mov
std
xor
or
push
dec
bound
(bad)
push
jg
push
std
adc
jnp
test
lock
in
gs
cmp
imul
pop
inc
mov
cmp
mov
jae
out
mov
dec
mov
gs
paddw
add
add
cmps
stos
push
call
jbe
or
and
pop
dec
jl
mov
fcom
dec
popf
sbb
ja
les
sub
test
inc
in
xchg
stos
or
xchg
ins
inc
sti
vcvttss2si
aad
not
xchg
pop
ins
sbb
sti
xchg
dec
in
push
in
cmps
icebp
out
xor
jns
sbb
jg
fcomp
stc
test
dec
dec
xchg
add
sahf
jle
loope
fdivr
in
add
push
rol
(bad)
hlt
push
jecxz
or
mov
leave
mov
in
cmp
in
mov
iret
scas
jae
and
stos
or
jnp
ret
pop
and
leave
out
jb
mov
aam
ror
xchg
add
aaa
xor
xchg
pop
xor
inc
cmp
lods
dec
stos
xchg
jmp
les
push
arpl
push
fs
mov
push
test
or
pop
stos
addr16
xor
ss
jg
aam
stos
xchg
mov
xchg
lea
mov
dec
jle
mov
(bad)
into
dec
sahf
fsubr
pop
xchg
sbb
int
and
cwde
int3
test
lahf
jp
ror
cmp
popf
fild
jle
jbe
rol
les
out
shr
in
ret
mov
loop
pop
dec
xor
xchg
cld
sub
fstp
lock
jp
pop
outs
je
pop
dec
cmp
dec
dec
mov
retf
iret
cmp
and
add
sbb
mov
xor
in
icebp
es
cmp
lock
xor
xor
cmp
dec
fcmovb
or
push
movs
sahf
stos
sbb
stos
inc
arpl
fist
and
pop
xchg
test
imul
lahf
dec
popf
gs
mov
mov
cld
fldcw
mov
iret
add
inc
push
addr16
fdivr
jbe
mov
(bad)
std
lods
pop
xor
jb
addr16
dec
adc
and
mov
je
(bad)
leave
int
shl
inc
sbb
aas
aas
es
dec
dec
cmp
(bad)
mov
inc
ret
mov
(bad)
push
sub
scas
dec
and
in
nop
mov
ds
in
mov
and
jb
cmp
jmp
sti
adc
cmc
pop
jnp
repz
cmp
outs
in
pop
fwait
pop
push
adc
int3
rol
adc
dec
iret
xchg
mov
mov
push
inc
mov
pusha
cmp
in
aam
imul
out
(bad)
pushf
mov
mov
mov
sbb
movs
out
push
push
adc
(bad)
xchg
push
xor
js
not
cmp
hlt
scas
or
hlt
or
in
cmp
sub
xchg
push
cmp
outs
mov
cmp
and
pop
sahf
(bad)
cmps
push
push
mov
and
jae
test
push
out
xor
jl
bound
fs
cdq
cld
cmp
das
or
in
lock
movs
out
push
nop
push
cmp
mov
xchg
or
popaw
sbb
add
fwait
xor
push
retf
push
dec
neg
and
lods
add
sub
sbb
add
test
icebp
and
stc
sub
retf
or
xor
bound
or
add
xchg
cmp
mov
stos
xchg
adc
outs
mov
and
cmp
mov
jne
pop
mov
mov
sub
pusha
mov
sub
adc
in
out
xchg
add
gs
fist
fmul
xor
cmp
in
xchg
xchg
aas
lods
in
xchg
mov
pop
push
daa
xchg
mov
xchg
stos
mov
inc
movs
jo
jecxz
into
cmp
dec
jns
int
not
into
out
(bad)
stos
loop
add
lea
jne
sub
xor
adc
push
mov
mov
xor
(bad)
mov
inc
js
cld
cmp
(bad)
out
mov
and
dec
lods
mov
invd
mov
in
into
rol
mov
into
icebp
mov
loope
(bad)
sub
cwde
jbe
dec
fnstcw
jecxz
retf
pop
pushf
sbb
cmp
push
cld
test
mov
mov
xor
bnd
sbb
sub
sbb
push
(bad)
fs
cmp
(bad)
test
int
test
cdq
into
fst
mov
(bad)
and
repz
push
scas
push
jmp
test
rol
pop
stc
xchg
or
(bad)
imul
test
dec
lea
pusha
xchg
mov
jnp
retf
stos
jbe
inc
das
(bad)
loope
shl
xchg
jmp
mov
fldcw
pop
leave
shl
ficom
mov
test
cmps
sbb
mov
push
dec
fst
(bad)
mov
out
dec
test
aaa
test
fst
mov
imul
fsubr
lods
lock
ja
repnz
add
mov
mov
jmp
add
add
aad
add
(bad)
add
sbb
jl
data16
sub
sbb
fs
imul
stc
stos
adc
lock
adc
or
imul
sbb
pop
js
mov
cmp
mov
fnsave
ins
jge
or
neg
push
in
pop
dec
cs
sbb
pusha
into
adc
(bad)
jge
mov
fcmovu
int
test
outs
and
(bad)
aas
fnstcw
dec
mov
xor
inc
adc
iret
jae
iret
pop
data16
adc
cmc
mov
dec
ins
movs
jnp
(bad)
shl
sub
sub
mov
and
pushf
adc
clc
movs
inc
jecxz
adc
inc
push
push
mov
pop
repz
xchg
xor
xor
sbb
dec
adc
mov
mov
push
mov
scas
scas
sub
movs
(bad)
dec
cmps
call
xchg
loope
call
dec
pop
out
daa
mov
loop
pop
push
pop
mov
(bad)
stos
cmc
cmp
iret
ficomp
xlat
jb
lock
pop
popf
mov
pop
and
cwde
push
add
shr
loopne
push
out
sub
jg
push
loopne
sbb
icebp
stos
or
xor
aas
stos
mov
scas
and
sbb
retf
sahf
sbb
sub
adc
in
push
jmp
ds
imul
div
fsub
ins
xor
mov
adc
push
pop
movs
cld
aad
fldcw
div
test
mov
idiv
ret
imul
movs
mov
retf
adc
call
in
ds
adc
(bad)
div
fs
push
cmp
loope
sahf
jmp
out
pop
ins
imul
jmp
ins
add
jb
mov
data16
xchg
inc
xor
jle
out
dec
popa
adc
dec
xchg
lods
gs
dec
dec
sbb
faddp
mov
mul
or
jmp
mov
cmp
popf
call
xchg
enter
scas
mov
and
sub
add
pop
sub
pop
fadd
jb
addr16
push
jg
ss
dec
xchg
xor
jle
jmp
or
jne
push
or
jne
pushf
lods
das
fstp
or
int3
jecxz
sub
stos
outs
sub
rcl
jb
jl
mov
mov
xchg
jno
inc
in
arpl
mov
xor
sub
pop
fs
sub
push
aam
(bad)
(bad)
mov
and
leave
fwait
jecxz
push
jl
les
(bad)
out
cdq
and
outs
in
cmp
rol
xchg
pop
push
ja
retf
sbb
(bad)
in
cmp
push
imul
xchg
push
pop
mov
mov
ret
push
xor
add
jno
and
rol
scas
push
or
mov
hlt
dec
and
fisubr
inc
test
icebp
iret
adc
call
xchg
pushf
dec
add
fisttp
mov
cli
cwde
shl
mov
retf
data16
cld
push
xor
cwde
mov
enter
shr
jecxz
clc
mov
aam
nop
shr
retf
add
xchg
lods
and
inc
movs
lds
adc
sub
popw
sti
aam
test
cmp
dec
(bad)
sub
dec
push
in
outs
sub
fst
or
cld
mov
inc
mul
mov
inc
cdq
jl
dec
in
inc
jns
mov
mov
in
push
call
add
cld
test
ret
aam
push
sbb
andps
mov
data16
loopne
inc
aas
or
mov
or
inc
shr
or
push
xchg
ins
or
bound
sti
add
mov
inc
in
cmps
(bad)
lock
(bad)
fldenv
cmc
dec
and
add
test
sub
fnstsw
pushf
push
mov
fisub
ror
sbb
mov
(bad)
pop
cmp
(bad)
ds
pop
or
jae
mov
inc
pushf
adc
jle
push
xor
dec
dec
jg
cmp
jmp
out
jl
cwde
jae
mov
(bad)
push
jmp
loope
or
ins
repnz
or
sub
mov
xchg
movs
mov
jg
test
mov
retf
fs
popf
and
push
push
pop
xchg
(bad)
pop
ja
xor
lods
aaa
in
sti
adc
pop
xchg
mov
xchg
push
ror
pop
push
push
inc
leave
xchg
pop
mov
dec
dec
jecxz
adc
das
pop
and
nop
xchg
pop
outs
sti
mov
mov
jmp
mov
cs
icebp
aaa
clc
mov
js
iret
cs
loopne
les
aad
out
mov
fcomp
add
out
sub
pushf
iret
mov
pop
int3
sbb
xchg
xor
loope
(bad)
div
(bad)
pop
add
stos
cmps
arpl
dec
push
fsubp
add
repz
xor
mov
sub
pusha
xchg
call
mov
call
dec
add
outs
not
push
ret
sub
popa
cmc
xchg
sub
xchg
dec
and
das
sub
mov
mov
jl
test
jno
ds
mov
dec
std
pop
push
ins
mov
adc
(bad)
mov
dec
repz
(bad)
adc
mov
or
mov
jmp
fcomp
or
outs
inc
call
sbb
iret
jge
retf
inc
inc
push
push
sti
dec
stc
cmc
jae
fldcw
push
mov
push
into
xchg
pop
mov
sub
xlat
or
aaa
pop
mov
push
rol
ds
daa
sbb
mov
(bad)
lahf
mov
ret
mov
jmp
movs
mov
int
js
stc
bswap
sahf
inc
daa
xchg
push
and
sub
jle
rcr
test
and
mov
or
sar
fld
call
mov
aad
mov
cs
xlat
dec
retf
(bad)
pop
jne
es
xor
jnp
sbb
arpl
in
aad
gs
push
inc
xor
pusha
pop
dec
push
adc
add
stc
leave
fcom
xchg
rol
xchg
sbb
in
pop
pop
pop
dec
imul
mov
sbb
cld
ror
rcr
or
imul
std
mov
and
imul
daa
shl
das
sub
(bad)
stc
push
sbb
xlat
scas
fsubr
pop
fistp
sbb
ror
push
cmp
es
pop
cwde
popf
pop
add
or
into
mov
jge
and
(bad)
mov
cmp
and
icebp
xor
pop
xlat
dec
or
fist
xor
jne
cmp
test
mov
lock
sub
jmp
lods
rol
out
imul
cli
dec
xchg
adc
jno
les
and
(bad)
pop
jae
push
jns
pop
jmp
(bad)
push
stos
or
pop
(bad)
push
test
sbb
and
mov
jg
mov
enter
jmp
add
retf
pusha
int3
dec
rcr
and
jmp
push
loopne
push
pop
or
out
(bad)
sti
(bad)
adc
inc
jnp
mov
push
adc
retf
sub
aaa
xchg
(bad)
sbb
xchg
jno
imul
lahf
sti
and
pop
(bad)
inc
test
adc
fcmove
ret
xor
cmp
adc
push
push
addr16
js
test
mov
shr
arpl
fwait
push
call
and
test
jne
sti
xchg
xchg
(bad)
jbe
nop
ficom
xor
mov
jno
icebp
pop
sbb
dec
mov
inc
pusha
(bad)
push
mov
(bad)
mov
pusha
enter
push
gs
sub
pop
adc
mul
xlat
and
push
push
test
cmp
adc
dec
dec
test
mov
mov
fistp
addps
add
aad
fimul
mov
xchg
sub
mov
out
(bad)
xchg
(bad)
bound
cmp
mov
jge
arpl
push
push
cli
in
xchg
cli
and
xchg
cmps
jae
cmp
and
pop
add
mov
(bad)
dec
test
lods
(bad)
cmc
xchg
fisttp
push
xchg
xor
in
les
test
mov
jmp
xchg
mov
xchg
imul
mov
mov
loop
mov
pop
adc
mov
in
mov
scas
ja
mov
lock
add
jmp
sbb
seta
mov
adc
shl
(bad)
xlat
mov
fnstcw
rcl
push
mov
ror
retf
xor
stc
pop
dec
cmp
not
lds
cmc
xchg
cmp
push
mov
cmps
inc
leave
stos
sti
pop
lds
mov
int
mov
imul
adc
call
xchg
shl
pop
lea
js
xchg
mov
nop
inc
sahf
cmps
mov
jnp
int3
retf
pop
or
jle
cld
cmp
rol
xor
jne
jmp
mov
in
cmp
or
cmps
nop
dec
xor
and
cwde
movs
xchg
cli
loop
(bad)
xchg
push
cld
pop
hlt
jne
mov
scas
pop
cmp
in
cmp
xchg
dec
pop
das
xchg
loop
mov
jl
xchg
shl
xchg
mov
stos
and
or
jo
add
pop
mov
mov
rcl
and
xchg
cmp
xchg
inc
lea
and
mov
ss
out
inc
mov
pop
and
mov
mov
xchg
mov
mov
mov
and
add
fadd
stos
hlt
aaa
cmp
mov
xchg
leave
adc
enter
scas
add
scas
or
fst
inc
nop
outs
push
(bad)
icebp
xchg
das
pop
lds
fsub
lods
sbb
add
jmp
xor
push
push
sub
popf
es
inc
sbb
es
(bad)
fcomp
iret
movs
arpl
jg
dec
pop
jg
jecxz
xchg
add
hlt
pop
add
cdq
fdiv
je
lea
fistp
inc
dec
jecxz
jb
std
cmp
sbb
push
out
cwde
mov
shr
mov
pushf
lea
bound
xlat
cdq
in
mov
arpl
push
pop
lock
leave
arpl
sbb
(bad)
cmc
outs
jae
and
xchg
call
xchg
pop
push
mov
(bad)
pop
cmc
movs
or
ret
es
mov
or
jge
inc
cdq
mov
and
scas
jae
stos
mov
(bad)
xchg
mov
outs
nop
aaa
sbb
cmp
lock
xchg
adc
faddp
loop
fnstenv
mov
dec
pop
jg
adc
cmp
adc
mov
loope
(bad)
es
and
or
sbb
mov
imul
inc
data16
test
xchg
clc
popa
mov
pop
xchg
mov
jmp
fild
stc
mov
rcl
imul
scas
inc
sub
mov
pusha
inc
push
popf
outs
mov
sub
fwait
xor
nop
ins
and
retf
in
xor
lods
aaa
xor
(bad)
(bad)
sbb
xchg
fstp
dec
mov
aad
cmp
or
scas
push
imul
inc
jge
xor
sub
adc
xchg
and
or
div
jnp
ss
rcl
sub
xchg
stc
jmp
sbb
je
cmps
gs
imul
pop
(bad)
lea
ror
sbb
fadd
out
mov
mov
test
or
xchg
in
sub
add
and
fmul
mov
push
fisubr
ret
or
or
adc
clc
fs
cmc
cmps
test
dec
push
pop
mov
aam
mov
mov
stc
int3
bound
mov
js
inc
pop
xchg
sub
dec
dec
fdiv
jae
repnz
xchg
ja
sbb
push
sub
xchg
jne
stos
movs
and
out
dec
aaa
les
ins
bound
stc
das
jo
dec
xlat
fld
dec
loop
das
xchg
cmc
les
daa
dec
xchg
sahf
dec
or
mov
sar
xchg
cwde
mov
ins
icebp
data16
and
mov
jnp
loop
xchg
pop
xchg
fldcw
cmp
outs
into
cmps
jbe
movs
mov
mov
les
add
mov
in
shl
add
ds
push
lahf
and
xchg
lock
mov
push
jg
ins
or
and
pop
pop
mov
mov
enter
cmc
xchg
push
pop
push
popf
or
lods
leave
adc
xor
fisttp
and
inc
inc
dec
pop
mov
or
rol
nop
popa
xchg
mov
inc
or
pop
(bad)
xor
rcr
mov
int3
push
aam
dec
add
dec
shl
mov
mov
mov
jl
push
mov
cmp
les
and
ficomp
mov
jmp
out
jg
test
push
push
or
das
cmp
jo
in
sub
jecxz
mov
stc
pop
pop
rcl
arpl
mov
les
dec
adc
mov
test
lahf
add
mov
les
loope
sub
aaa
imul
mov
out
fimul
cli
push
(bad)
loopne
inc
arpl
xor
dec
ret
outs
movs
pop
cmp
popa
and
adc
jp
mov
pop
xchg
adc
xor
dec
aad
and
adc
ficomp
rcr
xchg
push
sbb
pop
and
and
ins
sbb
xor
mov
hlt
xor
test
call
pop
fsub
movs
cmc
push
ins
fistp
or
dec
jge
mov
sbb
mov
(bad)
mov
sbb
movs
shr
fs
cmp
pusha
sahf
cdq
(bad)
xor
xlat
cmp
push
arpl
push
jb
inc
mov
inc
xlat
sbb
inc
dec
add
mov
dec
cmps
(bad)
jnp
mov
xchg
ror
push
pop
mov
mov
pop
jae
(bad)
arpl
sub
and
rcr
(bad)
fstp
(bad)
ror
xchg
sub
repnz
cmp
es
aas
inc
loopne
mov
in
add
bound
push
jge
call
push
enter
dec
sbb
adc
aad
clc
jbe
push
xor
test
fldcw
out
sub
push
jg
mov
bound
out
enter
inc
sub
stos
mov
int3
jbe
repnz
sub
loope
iret
dec
ret
cmp
pop
push
xchg
sbb
inc
sub
mov
jmp
outs
and
(bad)
fidivr
and
push
and
sub
iret
ror
call
mov
adc
mov
push
sub
cmp
jae
loopne
add
mov
test
jmp
stos
and
aas
jne
je
lahf
pop
mov
ficom
adc
sub
push
sbb
shl
cmc
mov
jne
jbe
ja
add
jmp
sbb
imul
inc
and
adc
and
out
adc
mov
sbb
fmul
add
pushf
(bad)
mov
imul
frstor
repz
pop
inc
ss
scas
pop
lea
aam
inc
gs
sub
sbb
repz
lods
imul
sti
mov
scas
pusha
mov
cli
mov
sbb
pushf
xor
ror
jmp
mov
aam
int3
ss
jl
arpl
mov
pop
pop
pop
xor
xor
test
jno
pop
loope
call
out
push
dec
daa
jl
mov
mov
retf
sbb
adc
test
nop
mov
pop
sbb
adc
lahf
push
jno
sub
pop
pushf
inc
mov
ins
fistp
dec
das
adc
or
sbb
mov
push
sbb
out
out
sbb
lock
fs
out
mov
std
jecxz
aaa
jge
cmp
dec
stos
jle
adc
sti
mov
push
pop
sbb
mov
mov
cmp
dec
sbb
adc
mov
add
or
(bad)
shl
or
aam
std
push
enter
dec
sub
push
xchg
jno
jne
mov
retf
add
out
inc
xor
add
adc
jb
icebp
dec
mov
dec
mov
add
fldenv
std
enter
mov
rcr
jne
ins
xor
mov
fs
or
sub
das
rcr
inc
mov
sbb
push
sar
ficom
cdq
push
jmp
repnz
je
cmc
js
push
mov
inc
xchg
or
hlt
dec
mov
sub
aaa
adc
jmp
lods
pop
jno
xchg
ds
push
push
xor
xchg
inc
in
or
(bad)
pusha
jo
pop
dec
fstp
sahf
cmps
xchg
dec
pop
das
test
jl
pop
mov
push
xchg
pushf
xchg
add
jg
cdq
fcmovbe
sbb
call
sub
sbb
sbb
and
push
in
sub
adc
mov
pop
in
dec
scas
fisub
aam
mov
xchg
out
pop
xor
sub
inc
test
jecxz
sar
jnp
push
dec
xchg
mov
push
adc
cmp
sbb
pop
loopne
stc
bound
retf
xchg
mov
or
imul
or
mov
lea
int3
sub
cmp
mov
sbb
mov
cli
push
fild
dec
mov
aam
je
inc
mov
mov
xchg
xchg
das
icebp
mov
stos
push
inc
mov
mov
and
jecxz
mov
mov
xchg
mov
jae
(bad)
mov
adc
stos
and
pop
jmp
sbb
pop
mov
dec
bound
mov
in
xor
mov
cs
and
lea
popf
(bad)
icebp
test
push
das
push
jp
adc
cmp
dec
dec
inc
cmp
shr
pop
mov
mov
cdq
mov
add
shl
mov
cld
into
int3
ds
ja
call
repz
add
mov
cwde
fistp
xchg
das
mov
mov
mov
pop
lock
cmp
pop
nop
ins
jmp
sbb
stc
ret
(bad)
mov
in
adc
out
ret
test
xor
sub
mov
sbb
clc
retf
push
xchg
mov
mov
pusha
inc
ret
js
jle
pop
fwait
mov
cmp
cmp
mov
mov
pop
cmps
sub
sbb
push
pop
mov
mov
jns
aas
push
mov
xchg
cmp
mov
jno
mov
xchg
xchg
sub
mov
out
(bad)
out
pop
repz
or
imul
icebp
jmp
in
sub
jb
repz
call
or
arpl
aad
push
push
dec
aaa
mov
and
outs
cmp
push
cmp
xor
mov
and
(bad)
arpl
mov
inc
test
mov
mov
arpl
xchg
js
std
(bad)
out
icebp
arpl
and
repnz
xchg
inc
push
sub
adc
dec
test
jne
xor
cmps
pop
out
mov
mov
inc
out
mov
add
mov
daa
cmps
loopne
inc
cmp
or
mov
pop
xor
shl
stc
inc
lea
inc
jno
adc
hlt
jae
repnz
jg
pop
sub
loope
jg
jb
lock
mov
loopne
adc
test
shr
mov
and
xor
mov
xchg
mov
(bad)
jno
retf
pusha
sar
fs
bound
int
xor
je
xor
(bad)
fbstp
or
sbb
sub
int3
jmp
mov
aas
movs
(bad)
xor
adc
mov
adc
cs
xlat
pop
adc
push
xchg
xor
lods
sar
shl
mov
mov
push
push
in
xor
imul
inc
movs
mov
fidiv
das
sbb
add
sbb
jnp
mov
cwde
aaa
mov
ss
jmp
je
aad
inc
rol
or
pop
outs
mov
mov
xor
pop
cmp
sar
stos
call
fmul
push
cmc
sti
test
ficom
pop
add
lea
xchg
jne
and
out
test
fwait
pop
fbld
jno
sub
xchg
dec
fcom
jmp
xor
outs
sahf
or
and
jecxz
inc
jno
xlat
loop
das
je
bound
scas
pop
stos
fild
shl
jne
push
adc
lods
cwde
xor
inc
sub
push
scas
fs
adc
add
in
adc
inc
push
popf
mov
jmp
and
dec
sub
jge
xchg
arpl
or
fnstsw
scas
(bad)
push
mov
add
leave
sahf
shl
lea
sbb
test
sbb
and
add
mov
out
push
fnstsw
mov
repnz
dec
mov
push
xchg
imul
adc
stc
push
mov
iret
(bad)
pop
lock
sub
into
mov
or
loopne
adc
scas
jp
fldenv
not
mov
cli
cmps
ins
sub
pushf
or
repnz
dec
imul
shl
popa
sub
pop
sub
and
test
jne
rol
pop
repz
ins
cmc
and
mov
or
fwait
xor
shl
cmp
or
sub
push
pop
out
loope
aaa
sbb
and
and
lods
ss
cmps
mov
or
jecxz
iret
ror
out
mov
or
sahf
inc
inc
shr
or
or
in
xchg
adc
fadd
mov
cmc
or
adc
mov
nop
ret
sub
push
push
xor
adc
lea
pop
cmp
adc
jge
mov
mov
or
sti
ror
mov
test
pop
jmp
fsubrp
(bad)
jne
in
pop
sub
movs
adc
neg
xor
add
adc
hlt
stos
in
jle
mov
cli
inc
jno
push
push
mov
push
and
mov
mov
or
(bad)
cld
je
popf
enter
test
push
in
cmps
ror
xlat
cmps
scas
cs
icebp
sub
mov
in
add
in
push
pusha
sar
das
call
mov
aaa
jle
(bad)
xchg
or
sbb
repz
lods
jno
popf
leave
ins
push
inc
mov
dec
popa
jg
push
push
fcom
sub
test
loopne
jne
dec
adc
cmp
mov
loop
cmps
mov
call
sub
outs
outs
push
retf
cdq
rol
enter
xchg
sub
fnsave
das
mov
push
sub
es
aam
stc
loopne
pop
xor
adc
scas
scas
imul
shl
xor
adc
not
jecxz
mov
fsub
pop
mov
push
lock
add
and
sub
(bad)
cmp
sti
fnstenv
cs
cmp
jl
push
pop
repz
mov
ret
pop
repz
mov
in
scas
jnp
not
inc
repz
add
pop
and
mov
xchg
cmp
pop
cdq
mov
inc
sbb
int
stc
push
and
or
pop
cld
cmps
xor
xor
pop
fcomp
jno
icebp
mov
jbe
mov
or
jns
mov
stc
mov
dec
fcom
aaa
add
or
cld
fistp
or
pop
cmp
(bad)
aaa
fwait
pop
fwait
pusha
xchg
cmc
scas
in
add
scas
fnstcw
cli
inc
jns
add
inc
mov
inc
cmps
jno
xor
jmp
add
adc
cmp
into
push
add
pop
xor
and
lods
aas
lods
xor
pop
jl
cmp
scas
mov
xor
repz
rcl
dec
dec
push
and
push
xchg
add
xor
in
pop
and
push
cwde
vandps
les
add
pop
icebp
(bad)
ja
xchg
retf
add
test
push
push
mov
pusha
add
xchg
mov
cmp
jne
call
xchg
xor
retf
(bad)
mov
mov
(bad)
jae
rcr
sbb
pop
push
addr16
imul
xchg
test
retf
mov
sub
outs
int
(bad)
adc
sbb
mov
sbb
fadd
popa
out
mov
not
pop
cmc
icebp
dec
and
loop
pop
mov
push
add
dec
inc
lock
mov
loope
out
pop
xor
pop
cmp
shl
adc
cli
jne
pop
in
loop
aaa
add
sbb
pusha
push
push
mov
in
in
sub
jmp
ins
sbb
add
adc
aam
push
cmps
outs
js
or
mov
fsubr
push
shl
dec
add
push
jp
cmc
jb
cmp
inc
imul
ret
and
hlt
lods
pop
fwait
inc
cdq
out
push
jle
dec
test
call
sub
rol
pop
xor
les
movs
or
scas
jne
jb
xor
cmp
call
xlat
fnstenv
aam
add
add
ss
adc
out
in
aam
jb
xchg
sub
jmp
add
mov
add
jge
int3
push
xor
dec
dec
out
dec
std
mov
not
xor
loopne
xchg
adc
lea
push
jecxz
aam
jns
adc
(bad)
add
dec
or
mov
adc
push
xor
fwait
inc
mov
mov
out
cs
push
sbb
or
ss
nop
movs
aaa
jp
push
out
ret
mov
sub
test
push
sbb
cwde
aas
dec
mov
inc
fistp
cld
imul
cmp
add
rol
pop
fwait
test
pop
sbb
xchg
popa
add
xchg
dec
jle
or
jecxz
mov
nop
cld
inc
and
dec
loop
mov
rcr
add
mov
fcmovne
sbb
sbb
iret
and
push
(bad)
outs
jmp
leave
and
xchg
call
fcmovnbe
sbb
les
test
lods
mov
mov
mov
mov
(bad)
jl
mov
jp
icebp
pop
(bad)
int
cmps
lea
cmp
dec
mov
xchg
outs
inc
mov
shr
test
pop
test
cmp
adc
jae
das
test
ins
leave
add
lea
pop
and
mov
fwait
inc
add
sahf
test
push
imul
fcomp
or
push
shl
sar
jo
xchg
inc
mov
sbb
mov
xchg
ins
sub
dec
sbb
aas
jp
xchg
xchg
retf
fs
adc
aam
jnp
xor
bound
xlat
icebp
mov
stc
outs
push
push
cmp
jns
movs
stc
cmp
lock
cmps
sahf
mov
into
sti
mov
add
xchg
jmp
sbb
pop
in
cmc
loopne
jo
out
inc
ss
jge
repz
into
inc
pop
jmp
gs
sub
sub
les
cmp
rcr
test
fisttp
mov
jae
adc
add
rcl
jmp
and
xchg
je
fld
rcr
jbe
loopne
shl
jno
retf
ja
mov
ds
test
jno
scas
or
push
enter
cmp
(bad)
xchg
call
xchg
cmc
ret
ja
add
pop
inc
test
sub
sahf
adc
jnp
cmp
ins
xchg
jb
adc
dec
(bad)
out
mov
jae
jle
xchg
mov
mov
or
mov
das
cld
xchg
add
cmp
xor
mov
mov
mov
lock
push
dec
jmp
in
js
and
adc
add
jmp
lods
mov
push
dec
cld
xchg
mov
out
mov
inc
sbb
jl
cmp
xchg
dec
add
cmp
std
int3
test
xchg
loopne
cmp
or
out
mov
aad
dec
daa
sbb
fild
ja
stc
jno
cdq
in
cwde
ret
gs
or
add
and
or
movs
shl
or
pusha
cmp
adc
mov
jp
ja
mov
and
icebp
mov
jle
test
or
scas
dec
pop
xor
mov
or
sahf
dec
cmc
fcmove
cmp
out
inc
(bad)
jecxz
mov
mov
cmps
js
sub
adc
pop
ror
(bad)
aam
inc
fistp
push
add
mov
imul
sub
mov
add
and
xchg
push
jbe
xor
loopne
sub
pop
mov
clc
lods
js
(bad)
jmp
cmps
mov
neg
cmp
mov
mov
add
repnz
pushf
cld
out
jae
jns
pop
mov
arpl
pop
or
mov
xchg
das
sbb
test
push
dec
adc
sub
inc
pusha
ss
das
pop
ret
mov
mov
add
in
test
jae
test
xchg
shl
mov
adc
ret
movs
rcl
rcl
mov
stos
sbb
lock
mov
sub
popf
add
mov
call
pop
adc
dec
repnz
or
inc
adc
adc
dec
inc
or
mov
push
ret
adc
jnp
push
pop
test
lods
aam
adc
mov
stc
iret
push
std
popf
add
popa
repz
sti
pop
fsubr
(bad)
aad
dec
push
sbb
imul
jmp
dec
std
test
(bad)
mov
push
or
fwait
arpl
pop
sub
add
pop
in
mov
test
add
or
sub
pop
inc
mov
mov
xor
das
std
xor
retf
retf
in
jg
push
scas
sub
imul
pop
xor
jnp
pop
inc
push
sub
cmps
jmp
pusha
dec
inc
and
xchg
xchg
or
retf
xor
loop
add
inc
fild
into
shl
mov
fs
jb
in
push
mov
ja
mov
mov
pop
sbb
jo
pop
pop
dec
add
pop
cmp
pop
ins
or
add
jae
and
mov
adc
or
sti
jne
mov
push
and
pop
and
arpl
or
ss
dec
movs
jge
aad
ins
adc
(bad)
pop
cli
cmps
jle
fdivr
or
cdq
stos
sub
out
jg
loope
push
aaa
mov
shl
icebp
mov
cwde
sbb
push
adc
pusha
jge
add
div
mov
iret
in
inc
sub
fisub
inc
add
xchg
and
mov
ror
loop
inc
mov
fnsave
xchg
sbb
data16
mov
mov
je
loop
jmp
jnp
xor
push
cmc
cmps
mov
mov
dec
push
test
or
(bad)
aas
out
pushf
stos
movs
xchg
hlt
retf
aas
or
mov
cwde
icebp
jmp
mov
mov
and
clc
test
cmp
stos
cmps
cmps
mov
mov
mov
arpl
sub
sub
ins
fldcw
mov
jae
mov
fiadd
dec
push
mov
shl
push
jbe
mov
mov
out
call
sbb
or
push
(bad)
(bad)
mov
add
sbb
xlat
adc
mov
icebp
mul
jb
pop
xchg
out
mov
imul
sbb
adc
(bad)
or
push
inc
cmp
(bad)
xlat
pop
or
xchg
or
mov
addr16
push
jns
push
pop
cs
daa
inc
call
and
sbb
push
lea
sub
or
sub
add
cmps
mov
jb
cwde
mov
cmc
mov
stc
jbe
cmps
xor
xchg
inc
mov
daa
aad
xchg
push
das
push
sbb
popf
sbb
sub
test
out
loope
or
mov
test
mov
add
outs
movsx
push
jl
dec
mov
in
jnp
sub
pop
shl
xor
les
rol
sub
or
sti
xchg
shr
or
sahf
repz
nop
leave
adc
fs
fadd
(bad)
adc
xchg
jbe
sub
cmp
ret
cmp
leave
call
inc
inc
jg
push
push
dec
jp
mov
cdq
je
(bad)
or
jno
mov
xor
or
mov
shl
pop
jmp
sbb
push
xchg
adc
and
or
loopne
mov
xchg
dec
fstp
shr
mov
mov
push
in
push
inc
ficomp
mov
dec
cdq
nop
sbb
xchg
jle
push
xor
adc
jne
dec
pop
retf
lods
mov
cmp
sub
popa
or
jno
xor
sbb
shl
fldenv
mov
dec
jmp
outs
jo
adc
jle
frstor
push
cmp
mov
jbe
cmp
out
inc
mov
sbb
pop
cwde
sub
int
dec
sub
xlat
(bad)
cmc
push
cwde
adc
jp
cli
push
lods
mov
pusha
and
xlat
enter
xchg
popa
mov
mov
mov
adc
call
fdiv
lods
or
nop
(bad)
jl
mov
mov
sti
(bad)
aas
(bad)
scas
lock
stos
pop
out
adc
nop
fild
and
or
fdiv
xchg
daa
test
jns
repz
addr16
xor
fs
sub
cdq
into
lock
inc
dec
xor
xor
iret
pop
fwait
stc
add
pusha
xor
nop
inc
outs
jmp
ins
and
gs
dec
addr16
imul
push
jecxz
jp
stos
inc
mov
mov
rcl
(bad)
jl
imul
fdivp
pop
add
scas
jmp
out
lds
repnz
and
fadd
xchg
test
xchg
lahf
rcr
sbb
xchg
xor
fwait
hlt
lahf
lahf
push
or
jae
mov
rcl
stos
dec
popf
(bad)
mov
int
out
leave
test
xchg
xchg
push
fisubr
ror
call
xchg
adc
pop
sti
or
bound
dec
(bad)
imul
in
ins
jno
ins
mov
fs
test
std
aam
ins
xor
sub
xchg
xchg
rcl
(bad)
in
push
scas
in
fdivr
mov
cmc
fs
daa
test
je
(bad)
daa
sti
add
shl
js
xor
enter
(bad)
shl
in
sub
mov
sub
inc
sti
repnz
jg
dec
or
xchg
fsubr
ret
mov
je
pop
jmp
fld
xlat
call
(bad)
rcr
dec
stc
sti
adc
xor
pop
shr
(bad)
mov
mov
dec
mov
dec
int
sub
call
in
adc
xor
inc
ret
inc
je
mov
loop
repnz
pop
loop
fnstenv
inc
pop
(bad)
test
test
mov
outs
jb
arpl
shr
ds
(bad)
xor
mov
jg
jge
mul
add
fsub
pop
repnz
and
stos
ret
mov
cmp
fdiv
scas
es
test
pop
adc
aaa
mov
dec
pop
cmp
dec
cmp
(bad)
xchg
repz
jl
std
call
ror
inc
jnp
sub
cs
pop
mov
lds
mov
push
fst
sbb
retf
add
dec
xor
ffree
push
jle
mov
adc
retf
xchg
out
loope
cld
mov
adc
cmp
aam
and
mov
sub
ja
sbb
dec
push
lock
sar
jns
mov
mov
lock
inc
jecxz
and
jmp
adc
xor
inc
in
adc
sahf
push
stc
add
in
or
xchg
ja
imul
mov
fldcw
retf
jne
cdq
mov
adc
and
stc
sub
sub
inc
js
mov
popa
cmp
adc
sbb
add
enter
xor
stos
aad
sbb
mov
inc
outs
js
jb
call
je
imul
mov
cld
add
movs
or
mov
xchg
shl
adc
xor
mov
cmc
shl
dec
dec
jnp
les
xchg
shl
lods
sbb
or
jno
popf
test
mov
pop
loopne
or
xchg
xchg
fstp
aam
pop
or
stos
push
inc
ins
push
jo
in
jmp
inc
push
xchg
mov
xor
retf
inc
push
loop
out
mov
mov
in
scas
jle
pushf
jecxz
jo
inc
je
mov
adc
mov
or
enter
scas
loopne
pop
dec
(bad)
and
into
pop
(bad)
iret
arpl
ror
inc
pushf
imul
jecxz
add
dec
dec
fcomp
mov
xlat
mov
jb
and
pop
(bad)
out
ss
mov
add
jnp
xor
sub
xor
sub
retf
sahf
sub
adc
das
pop
ret
and
cld
inc
push
mov
xchg
out
enter
std
push
lds
mov
(bad)
pop
jnp
shl
les
inc
push
mov
neg
and
out
xor
jmp
push
(bad)
xlat
addr16
scas
mov
(bad)
arpl
aaa
pop
push
mov
sbb
push
cmp
sub
(bad)
xchg
std
neg
or
inc
sub
adc
cdq
ins
stos
out
ins
out
dec
xchg
fiadd
packssdw
xor
jecxz
scas
out
dec
je
in
retf
lea
pop
sub
dec
sub
repnz
ins
test
adc
or
push
retfw
and
sbb
cmps
mov
call
xchg
jg
enter
mov
jmp
xlat
mov
ror
(bad)
jmp
vpsllw
rol
lods
ins
inc
jmp
call
or
repz
jbe
loope
dec
pop
or
out
add
cs
(bad)
mov
addr16
fsub
jns
stc
mov
(bad)
clc
jmp
(bad)
dec
cmp
mov
jne
hlt
mov
nop
aaa
inc
mov
sbb
lods
sub
into
xchg
dec
mov
in
dec
mov
inc
xchg
pusha
jnp
sbb
inc
xchg
add
repnz
inc
mov
xor
dec
iret
adc
xlat
imul
(bad)
into
mov
lahf
inc
mov
pop
movs
(bad)
xor
pop
cmp
mov
mov
xchg
cmp
es
sub
(bad)
fcomp
push
or
push
jl
mov
adc
pop
leave
jecxz
stc
push
call
int3
bts
cmps
retf
jb
push
jmp
lahf
pop
add
das
pop
xchg
enter
inc
js
imul
retf
jbe
test
and
jl
sub
sar
pop
or
sahf
jo
popf
mov
pop
cmps
sbb
xchg
xor
add
jl
adc
outs
sub
loope
cmps
xchg
or
and
stos
je
loope
dec
ficom
sub
aas
cs
jge
xchg
popa
lea
movs
fcom
(bad)
jnp
sbb
cmp
push
call
sub
push
rep
and
jbe
popa
repz
aad
cmp
or
cdq
xchg
pop
out
ja
inc
xor
dec
mov
out
push
fs
push
leave
inc
sahf
pop
and
retf
arpl
cli
rcr
jne
add
xor
ins
pop
mov
imul
push
fstp
call
xor
daa
mov
leave
push
aas
retf
push
sahf
mov
es
test
dec
jo
icebp
(bad)
cmps
ds
mov
cld
fcomp
dec
lods
adc
rol
lea
ja
and
xchg
xchg
ja
call
hlt
pop
popf
aaa
sbb
mov
jp
mov
and
pop
mov
aaa
jno
jmp
inc
repz
loop
inc
mov
dec
stc
push
fimul
pop
(bad)
pop
dec
jmp
inc
xchg
ja
daa
ds
int3
push
jnp
in
mov
rcl
xchg
ror
dec
retf
and
mov
packuswb
mov
mov
mov
stc
movs
xchg
xor
mov
std
mov
cmp
mov
pop
inc
cmps
(bad)
mov
cld
mul
inc
sub
(bad)
pop
push
and
cwde
fist
cmc
sbb
inc
and
cdq
xchg
mov
fisttp
retf
sub
icebp
out
in
imul
mov
das
js
xchg
fcomp
and
ja
mov
std
aaa
icebp
or
jno
call
adc
or
cmp
fcom
pop
std
gs
pop
push
and
and
out
add
jns
bound
add
push
cmp
mov
cmp
cmovge
in
or
lahf
mov
std
xchg
push
cvtpi2ps
mov
clc
dec
mov
pop
dec
jle
mov
cmp
scas
jnp
dec
mov
test
adc
(bad)
adc
dec
dec
mov
jae
test
pop
jo
xchg
cs
ds
je
add
fisttp
mov
mov
and
sbb
adc
or
pop
lds
test
mov
xor
movs
sti
sbb
or
jae
icebp
lods
inc
push
sbb
dec
adc
aaa
or
jno
mov
js
xchg
mov
sub
aam
je
jae
adc
movs
dec
push
cmp
jp
adc
xor
mov
movs
mov
rsqrtps
cmp
pop
call
cli
mov
rcl
add
jle
imul
popa
jb
mov
movs
dec
and
shr
movs
imul
xor
push
(bad)
and
ins
lock
cmps
mov
mov
(bad)
std
(bad)
mov
xchg
jle
call
arpl
dec
arpl
cwde
adc
sub
aad
je
and
lods
cli
inc
in
pop
movs
fnstcw
repnz
jp
jle
pop
adc
pop
stos
jl
push
into
xor
or
(bad)
xlat
add
push
mov
cld
(bad)
stc
div
int3
and
mov
jg
hlt
rol
jns
jne
shl
imul
inc
(bad)
cli
sahf
dec
clc
in
dec
pop
mov
dec
mov
add
fucomp
mov
jne
sbb
sub
rol
outs
inc
ror
gs
dec
test
dec
movs
jge
rcl
mov
repz
fadd
xor
fnstenv
inc
(bad)
das
jmp
test
cmp
neg
mov
in
xor
fstp
leave
sbb
ja
jmp
cmp
mov
xchg
std
sub
adc
add
mul
aaa
loop
jns
or
mov
aam
leave
(bad)
xor
mov
sbb
jg
(bad)
jg
push
inc
fild
adc
enter
sahf
and
adc
mov
ins
scas
lods
lock
fincstp
sbb
push
or
arpl
imul
mov
dec
sbb
(bad)
repnz
addr16
mov
mov
xor
dec
mov
clc
test
cwde
mov
out
(bad)
add
mov
push
data16
inc
shl
mov
fcomp
(bad)
inc
adc
fwait
jmp
addr16
iret
jbe
push
cmp
es
push
jge
push
or
sub
ret
mov
fstp
sbb
dec
ins
in
jmp
je
and
(bad)
mov
pop
add
in
lea
xor
jp
data16
jb
xchg
or
xchg
push
xor
sub
inc
ret
mov
in
sbb
call
lahf
sub
js
jnp
inc
pop
retf
adc
data16
in
ja
(bad)
jne
xchg
mov
and
sub
or
jge
icebp
adc
call
pop
lods
scas
cmp
aam
add
fidiv
mov
xor
cmp
and
cmp
xor
out
fsub
leave
sbb
mov
mov
and
push
ret
adc
out
jmp
mov
mov
and
or
inc
xchg
inc
data16
cmp
dec
cmps
mov
lds
jp
adc
jl
cmp
cmps
or
and
loop
sahf
xchg
xor
xor
xor
cmps
jns
(bad)
rcl
jns
shr
jge
sub
stos
je
cmp
xchg
pop
jp
xor
scas
sbb
cmp
fdivr
mov
jp
cmp
test
dec
movs
lds
inc
sbb
mov
lahf
sbb
lods
jo
pop
adc
sub
lods
xchg
mov
es
dec
mov
jmp
sub
retf
neg
clc
sbb
es
arpl
call
je
xor
dec
test
add
enter
and
movs
jl
popf
dec
fidiv
pop
lock
mov
pop
xchg
cmp
mov
leave
push
outs
std
cmps
(bad)
or
cdq
les
jnp
push
or
out
pop
into
dec
add
popa
inc
(bad)
icebp
pushf
test
push
and
je
ds
push
adc
sti
pop
(bad)
jmp
cld
dec
mov
inc
ror
lds
ds
mov
push
inc
nop
cmp
les
ins
push
xor
fs
sub
das
(bad)
movs
dec
call
mov
shl
shr
xchg
push
and
jno
lods
imul
iret
arpl
aam
mov
and
xlat
push
fwait
sbb
leave
imul
jo
push
mov
ins
sbb
or
std
sbb
lahf
clc
pop
cmp
add
xor
movs
sar
out
cmp
mov
in
and
sti
mov
and
pop
and
inc
jae
into
movs
jmp
cmp
leave
mov
sub
jb
jmp
sar
inc
mov
ret
sub
daa
in
sbb
cmp
xchg
shl
icebp
test
icebp
mov
xchg
popf
cdq
mov
adc
push
pop
sbb
push
dec
stc
mov
shl
retf
gs
xchg
aaa
or
mov
lea
push
inc
sub
fmulp
fstp
repz
push
fdiv
in
(bad)
mov
pop
int3
movs
out
sub
or
xor
and
(bad)
pop
xchg
adc
popa
nop
fs
aad
xchg
push
(bad)
sub
jl
loop
mov
fisub
in
inc
and
and
mov
cmps
cmc
movs
lods
test
cli
test
inc
xor
outs
jecxz
pop
inc
jecxz
pop
or
cmp
jmp
sbb
out
mov
dec
push
lahf
(bad)
aas
xchg
adc
cli
aam
xchg
out
mov
rcl
ins
in
push
pop
jb
add
test
pop
pop
xchg
enter
div
xor
jmp
sbb
mov
fistp
inc
xor
test
in
ja
ins
ins
cmp
rcl
inc
test
mov
bound
or
xor
or
test
pop
pop
add
cmp
dec
es
lea
jmp
pop
mov
pop
jb
retf
in
add
pop
cmps
push
cmc
mov
push
cmp
call
mov
mov
outs
ret
mov
mov
mov
jb
aaa
arpl
and
data16
or
(bad)
retf
jecxz
fist
pop
xor
adc
mov
add
push
add
dec
cmp
cmp
out
mov
ficom
out
cld
push
(bad)
and
adc
xchg
jo
and
dec
inc
dec
and
mov
mov
sbb
(bad)
(bad)
xor
call
mov
inc
pop
ret
push
retf
sbb
adc
jne
push
and
(bad)
push
inc
call
les
and
add
retf
adc
or
sub
fcmovne
jmp
imul
test
popa
loopne
xchg
xchg
mov
xor
add
cmp
jecxz
push
outs
lods
ins
fst
movs
mov
mov
mov
adc
cmp
sub
ja
push
mov
mov
ror
and
jmp
in
pop
and
dec
mov
lock
fwait
in
in
retf
push
dec
retf
pop
xchg
mov
xchg
mov
call
push
mov
mov
repnz
popa
mov
int
lock
imul
pop
cmp
xor
rol
arpl
data16
lods
popa
(bad)
mov
fwait
repz
inc
inc
rsqrtps
or
inc
pop
sub
xor
xlat
retf
(bad)
int3
sub
retf
fidivr
lds
loopne
lods
je
push
xlat
(bad)
fcmovne
cmps
xor
xor
nop
dec
push
test
inc
test
or
lahf
sbb
mov
pop
xchg
(bad)
or
pop
outs
jo
jp
or
dec
pop
sbb
inc
push
cmp
fidivr
pop
mov
(bad)
jmp
(bad)
lock
ret
jae
pop
mov
fucomip
test
jle
or
cmc
push
and
adc
fist
aad
sbb
aad
into
ret
mov
loope
sahf
cmps
mov
ins
sub
jmp
dec
and
jl
jl
adc
movs
ret
push
jnp
xor
mov
sub
sbb
jae
in
xor
aas
xor
test
cmp
scas
enter
dec
(bad)
sqrtps
pop
jecxz
je
push
xchg
jmp
sbb
jp
or
sti
mov
and
mov
loope
daa
or
push
neg
retf
repz
arpl
bound
in
xor
inc
dec
data16
call
cmp
add
add
pushf
jl
pop
adc
inc
gs
push
movs
mov
add
adc
in
ja
je
xchg
sbb
or
add
(bad)
ins
sub
jle
mov
retw
dec
mov
and
xor
mov
in
xor
jbe
scas
and
mov
add
pop
clc
cmp
cmp
fidivr
das
mov
jl
pop
adc
fwait
jb
xlat
push
push
jmp
jecxz
repnz
adc
xchg
pop
mov
dec
pop
mov
test
fwait
jecxz
(bad)
cmp
jb
lods
jp
or
and
xor
iret
sub
ss
scas
scas
aad
and
pop
xor
jns
mov
(bad)
xchg
cmp
jmp
dec
mov
mov
mov
imul
mov
jmp
pop
dec
ret
fild
nop
sbb
das
sub
push
mov
mov
mov
push
xchg
sub
add
sbb
mov
push
clc
and
xchg
mov
pop
bound
popf
pop
sbb
add
pop
popf
mov
call
pop
mov
(bad)
icebp
add
add
inc
lea
arpl
aaa
hlt
cmc
rol
lds
inc
xor
jmp
cmp
(bad)
cdq
gs
sbb
ror
xchg
inc
or
je
(bad)
xchg
push
aas
push
jp
jle
lods
add
add
inc
xchg
lea
sahf
pop
sbb
into
ins
leave
clc
xor
mov
mov
fs
xchg
fdivr
mov
sbb
dec
fsub
sahf
pop
add
ret
inc
mov
cmps
or
inc
mov
pop
lods
js
sbb
jmp
out
mov
scas
lods
pushf
rol
xchg
imul
ds
loopne
dec
mov
cli
in
xchg
mov
int3
dec
inc
add
out
push
xchg
(bad)
xchg
repnz
pop
out
xor
mov
mov
or
in
test
and
push
call
in
add
and
cmps
sar
les
mov
xor
cs
jmp
stos
iret
mov
mov
or
dec
push
jne
(bad)
cld
pusha
inc
es
scas
cli
sbb
fsubr
stos
fs
stos
push
out
sti
out
or
ds
clc
adc
ja
and
xchg
lods
call
or
cmp
cmps
xlat
in
js
rcl
cmp
(bad)
idiv
icebp
fimul
cmp
add
shl
scas
popa
mov
xor
repz
push
push
icebp
stc
daa
mov
sub
mov
inc
jmp
xchg
mov
(bad)
or
mov
iret
in
fnstsw
or
leave
pop
ss
in
(bad)
jmp
repnz
ret
nop
xchg
mov
push
inc
dec
pop
push
cmp
xor
retf
push
sti
lock
jo
pop
xor
adc
or
adc
cmp
clc
mov
pushf
aad
popa
in
and
cmps
loopne
adc
sbb
mov
prefetcht0
shr
dec
pop
jecxz
out
xchg
arpl
inc
xlat
or
shr
xchg
sbb
adc
mov
lock
cli
sbb
cmps
push
lods
ins
mov
js
call
jbe
pop
cmp
cld
or
dec
gs
(bad)
outs
push
fs
seta
ja
lahf
or
fld
cmp
or
cmp
lods
and
xbegin
sub
rol
mov
inc
xlat
mov
sub
out
xchg
aas
mov
es
popa
inc
cdq
jo
xchg
jmp
inc
xchg
lsl
mov
aas
mov
in
add
add
shl
je
sti
and
mov
push
mov
xchg
dec
xchg
rcl
cli
jg
dec
mov
scas
push
scas
sbb
dec
sahf
push
fs
dec
push
in
es
ins
and
add
jge
movs
dec
push
xchg
(bad)
jmp
add
xchg
jp
jnp
push
test
xlat
scas
and
fild
clc
push
jl
rol
je
xchg
dec
xchg
xlat
and
mov
sub
jmp
jl
inc
push
and
xor
xor
cmp
mov
mov
repnz
sub
fwait
cwde
sub
rol
retf
mov
pop
jg
imul
push
push
stos
inc
xchg
fs
out
add
adc
jmp
in
sbb
push
xor
ja
dec
(bad)
push
fisttp
sbb
push
cmp
out
and
adc
in
popa
jb
cmp
mov
out
add
lahf
movs
xchg
inc
inc
sub
scas
ins
mov
inc
push
loope
mov
mov
and
add
fldenv
je
push
dec
ret
sub
dec
xchg
test
mov
pushf
out
into
cmc
call
sub
mov
cmp
inc
addr16
xor
mov
sahf
mov
mov
and
jae
jmp
and
rcr
cmp
ss
addr16
aam
jo
or
cmc
adc
(bad)
inc
pop
mov
mov
scas
push
loopne
push
or
outs
rcr
les
icebp
cs
sbb
add
mov
and
inc
out
inc
sub
mov
lock
and
sbb
call
sbb
push
rcr
out
xchg
test
loope
icebp
jmp
mov
std
iret
push
fcom
sbb
add
push
mov
pushf
mov
jae
mov
pop
out
cmp
pop
push
cs
cmps
out
repz
mov
mov
or
in
(bad)
lods
scas
in
or
jno
mov
cmp
lods
les
in
iret
fist
mov
enter
add
mov
xor
xor
jns
push
mov
or
mov
fld1
add
sbb
aaa
shl
imul
sbb
test
clc
xchg
dec
cmp
shl
aas
and
xor
fwait
mov
xchg
stos
ret
lods
and
dec
xchg
jg
es
sahf
dec
xor
(bad)
xchg
inc
hlt
rol
mov
xchg
mov
mov
adc
lds
sub
jo
jmp
dec
xor
push
(bad)
dec
test
adc
xchg
mov
fcom
loopne
ins
sub
or
mov
ss
push
dec
and
inc
xchg
add
ss
stc
popa
call
ja
jne
or
push
(bad)
ss
xchg
cmps
(bad)
jo
xor
add
sub
xchg
lods
or
mov
mov
add
or
mov
push
xchg
fadd
jecxz
aam
push
iret
outs
mov
cld
outs
adc
cmp
pop
retf
jno
or
fidiv
cmp
imul
jbe
mov
test
std
push
push
jl
std
push
ja
hlt
mov
ins
push
sub
add
sbb
cmps
jnp
push
inc
mov
(bad)
mov
jmp
lea
nop
adc
(bad)
push
outs
fld
inc
pop
sbb
inc
adc
cmp
mov
fild
sub
sbb
pop
sbb
xchg
push
jnp
push
sbb
xchg
cmps
ins
int
adc
stos
fadd
es
cli
repnz
xchg
test
ror
mov
sub
out
fild
jnp
mov
ss
xor
push
xchg
or
rcl
dec
dec
jmp
fcomi
pop
js
jmp
retf
movs
xchg
or
ror
sbb
sbb
shr
sbb
cli
pop
and
cdq
pusha
gs
sub
dec
adc
jl
call
scas
inc
stos
rol
maskmovq
idiv
mov
lds
push
clc
ds
jecxz
jns
xor
inc
sbb
mov
stos
xchg
add
ret
xchg
push
add
adc
dec
pusha
xchg
shr
mov
cmp
nop
lahf
xor
pushf
movs
scas
push
in
inc
call
adc
cmp
pop
dec
ins
and
mov
ins
mov
fld
popf
mov
mov
out
xor
sub
jo
std
add
fstp
hlt
movs
out
inc
in
inc
retf
in
sbb
push
or
jmp
das
add
les
push
dec
dec
jle
and
cmp
movs
popa
es
inc
jl
ficomp
sbb
sbb
xchg
xor
rol
push
inc
fdiv
loop
(bad)
push
xor
and
gs
cmp
int3
xchg
lods
xchg
inc
sar
lahf
cmp
cmps
add
inc
adc
call
xchg
jns
cmps
repz
jne
lock
lods
pop
mov
xor
test
ja
jne
movs
arpl
adc
ja
sbb
push
add
(bad)
cmps
sub
xchg
and
pusha
xor
mov
(bad)
pop
idiv
mov
loopne
cmc
xchg
sub
push
push
jae
inc
mov
xchg
std
ja
mov
push
xlat
shr
mov
cld
adc
mov
es
pusha
pop
sbb
rcr
mov
dec
arpl
sub
sub
mov
and
push
inc
test
push
jle
mov
adc
or
adc
inc
aad
(bad)
sub
inc
jmp
imul
push
jg
sbb
pushf
inc
out
or
add
(bad)
xchg
gs
dec
pop
cld
test
pop
popf
lahf
and
pop
repz
and
inc
repnz
in
in
in
inc
mov
ja
popa
xor
js
leave
(bad)
mov
mov
xchg
jge
xlat
adc
cmps
add
nop/reserved
adc
shl
(bad)
in
mov
xlat
jl
fwait
push
jmp
pop
inc
dec
out
icebp
fdiv
inc
aad
imul
enter
int
outs
mov
test
aad
fstp
lods
mov
inc
dec
xor
ja
adc
jmp
ins
mov
(bad)
in
imul
inc
js
call
jp
pop
in
arpl
stc
jns
mov
pop
(bad)
xchg
fstp
mov
(bad)
pop
stc
stc
sbb
stc
call
xor
fisttp
clc
out
add
mov
aas
push
and
dec
jo
or
repz
xlat
jbe
imul
retf
mov
imul
dec
jmp
pop
hlt
(bad)
pushf
(bad)
mov
jp
dec
ds
xor
sub
icebp
loope
add
js
out
test
in
cmc
sbb
adc
or
addr16
mov
jmp
into
pop
adc
stos
mov
dec
(bad)
and
inc
and
mov
mov
xor
adc
leave
jge
mov
arpl
cmps
sub
stc
data16
stc
daa
adc
adc
lea
mov
imul
dec
bound
ret
pop
dec
retf
xchg
lea
in
push
ss
mov
sub
rcl
test
jmp
pop
mov
push
jns
imul
cmp
hlt
mov
popf
rcl
sub
add
mov
cmp
call
or
mov
xchg
icebp
push
cmc
mov
and
ret
mov
dec
out
loope
pop
icebp
inc
push
inc
pop
neg
mov
movs
mov
cmps
stos
je
xor
movs
(bad)
pop
cs
dec
jns
mov
sbb
dec
dec
or
cli
loopne
leave
mov
into
(bad)
(bad)
mov
in
add
xor
into
stc
push
adc
stos
mov
mov
sahf
imul
sub
retf
mov
cmp
sub
pusha
cmp
frstor
stos
les
fidivr
mov
movs
dec
xchg
rcl
and
mov
in
sub
out
push
push
cwde
ror
icebp
frstor
repnz
outs
imul
push
pushf
xor
and
fld
cmp
out
rcr
in
mov
mov
sub
retf
les
or
fucomp
fcomp
ss
xlat
mov
jae
js
(bad)
fstp
xor
adc
mov
cmp
cs
add
dec
(bad)
and
cmp
jl
cs
in
mov
aad
aaa
(bad)
push
pop
sti
retf
dec
int
inc
cld
jle
cdq
mov
inc
lea
ins
pop
push
out
fsub
stos
std
add
jg
cmc
pop
in
clc
shr
pushf
leave
test
add
push
popa
stos
inc
mov
sahf
jb
push
mov
(bad)
loope
push
mov
scas
aam
in
out
hlt
jmp
add
mov
pop
cwde
pop
lea
sbb
iret
cmps
ja
pop
jo
inc
iret
test
ss
ja
pop
in
in
imul
xor
mov
scas
rol
inc
xchg
(bad)
dec
shr
xlat
push
mov
movs
cld
das
je
mov
out
bound
pop
push
inc
in
ja
mov
mov
clc
js
fdivr
jno
mov
mov
in
fmul
jge
cwde
adc
pop
sub
dec
dec
test
je
mov
pop
jae
jae
mov
aas
cmp
ret
push
shl
bound
or
cld
loope
pushf
je
fisub
adc
scas
xor
cwde
ins
or
lahf
data16
or
pop
andnps
mov
inc
lds
pop
js
and
ins
mov
std
cmc
lods
mov
mov
fidivr
pushf
xchg
sub
retf
sub
mov
add
cmp
pop
push
cmps
(bad)
mov
iret
fistp
mov
pop
mov
adc
sbb
(bad)
mov
sbb
add
retf
repz
(bad)
xor
mov
(bad)
mov
enter
jp
jmp
push
out
fmul
dec
mov
xor
xor
push
xor
shl
out
and
dec
add
and
jo
sbb
and
(bad)
sti
jns
xchg
or
push
inc
lods
and
jge
sub
mov
mov
in
ds
cmp
sbb
add
js
and
jne
jnp
push
repnz
sub
leave
fstp
(bad)
adc
fdiv
int3
daa
pop
xchg
sti
and
add
imul
push
shl
aam
lahf
enter
ud1
test
data16
pop
jb
adc
rcr
cmp
adc
xor
or
push
mov
dec
dec
ret
adc
and
jno
xor
mov
int3
fwait
mov
mov
int3
pop
imul
jecxz
fwait
jns
mov
xchg
pop
xor
push
inc
lods
loopne
stos
cmp
xchg
dec
pop
sbb
shr
sub
push
(bad)
(bad)
inc
mov
jb
in
jns
cmp
outs
mov
loop
popf
xor
xchg
dec
jle
mov
cmps
test
push
aad
mov
pop
sub
xor
jle
dec
not
ins
push
aaa
(bad)
cmp
arpl
xor
mov
sti
pop
push
mov
fisubr
fidivr
repnz
xor
jb
adc
int3
or
mov
cmp
xchg
cdq
xchg
leave
out
mov
rol
pusha
adc
cdq
sub
inc
xchg
gs
sub
adc
rcr
arpl
pop
inc
push
jg
mov
lods
push
fsub
add
inc
fbstp
mov
retf
adc
ficom
push
jecxz
dec
jg
(bad)
dec
(bad)
fisub
add
inc
test
outs
mov
lods
dec
call
sub
push
xor
addr16
call
movs
test
das
and
xchg
fisubr
pop
add
ror
lods
adc
in
sbb
in
and
inc
imul
and
fsub
aaa
(bad)
jmp
push
into
mov
push
test
mov
adc
(bad)
scas
add
outs
mov
test
mov
into
mov
inc
cmp
aaa
mov
xchg
and
je
mov
test
out
je
pusha
pop
test
adc
pop
mov
ins
xchg
mov
hlt
mov
neg
jl
mov
rcr
and
mov
ss
mov
and
push
loopne
nop
dec
(bad)
pop
cmp
push
pop
stos
addr16
sub
nop
push
les
punpckhdq
inc
push
mov
(bad)
xlat
sti
imul
mov
rcl
jecxz
inc
mov
mov
popa
mov
sbb
shl
cmp
ins
inc
or
xchg
push
pushf
(bad)
mov
aas
mov
jmp
pop
lods
adc
in
inc
call
pop
js
xchg
dec
sti
int3
sbb
out
inc
xchg
repz
sahf
pop
test
dec
jge
jmp
and
xchg
mov
mov
push
inc
xor
pop
and
mov
push
mov
adc
into
inc
nop
idiv
jo
xchg
js
(bad)
xor
retf
lock
inc
data16
cs
adc
dec
lahf
sub
dec
jmp
pop
fdiv
and
or
test
int3
push
test
adc
add
pop
out
mov
aaa
stc
mov
and
xor
dec
ja
push
mov
shl
lods
mov
or
sub
ss
xchg
dec
cmps
xchg
pop
fiadd
adc
or
add
inc
js
adc
jg
dec
sti
sbb
mov
pop
sub
(bad)
mov
fstp
dec
loope
(bad)
jno
jmp
ds
sub
ficom
pop
pop
aas
or
mov
js
arpl
xchg
sub
sbb
and
xchg
out
repz
lods
idiv
movs
(bad)
popa
jb
pop
xor
or
cmp
movs
jo
stos
inc
inc
pop
enter
add
sub
outs
aas
adc
outs
fist
xor
mov
and
xchg
cwde
jne
mov
ret
ficomp
cmc
stc
test
sub
lods
cmp
fdiv
mov
and
mov
clc
daa
ficomp
(bad)
fst
push
mov
mov
jo
sti
sar
retf
dec
int
pushf
push
in
mov
mov
push
(bad)
pushf
out
test
je
fadd
ja
mov
loop
test
push
mov
mov
loopne
retf
mov
sbb
nop
adc
sub
(bad)
dec
lds
test
aas
call
jp
cmp
inc
loop
xchg
(bad)
(bad)
cli
(bad)
loop
(bad)
pop
ret
add
xor
or
iret
ins
jnp
dec
xor
add
jmp
lock
cdq
sahf
das
xor
jns
ja
fs
shr
mov
imul
xor
std
test
cs
leave
pop
jge
add
inc
pop
cwde
or
or
mov
mov
fisttp
xor
repnz
xor
inc
push
cld
sbb
xchg
mov
xchg
in
imul
nop
dec
and
mov
mov
xor
jbe
mov
mov
aad
jp
cwde
lea
xor
jg
and
stc
pop
jns
mov
jb
mov
retf
or
add
sub
pop
fild
xchg
mov
iret
jae
nop
int
pushf
cmp
sub
push
dec
inc
std
out
cmc
mov
inc
pop
cwde
xor
hlt
and
or
(bad)
xor
in
aam
(bad)
sub
mov
jns
int
add
push
(bad)
sbb
xor
add
pop
call
das
ret
lods
xor
fucomp
cmp
xchg
push
jp
and
adc
xor
clc
fld
ins
int3
sub
inc
cmp
hlt
cmp
dec
inc
pop
inc
sbb
or
fstp
xchg
mov
movs
jg
js
fnstcw
add
xchg
add
mov
mov
or
pop
cmp
je
cmp
aaa
(bad)
(bad)
dec
mov
mov
loop
retf
ret
adc
pop
mov
ins
xchg
mov
inc
rcl
pop
loopne
pop
addr16
sar
retf
fldenv
push
mov
and
lea
dec
cmp
call
mov
fs
add
push
cmp
or
test
xchg
pop
lea
mov
pop
movs
repnz
or
xchg
cli
dec
adc
xchg
dec
jmp
shr
imul
fcom
hlt
mov
sub
aaa
cmp
aam
lods
or
mov
fs
pop
cmps
jno
(bad)
and
stos
and
cmps
push
push
xor
nop
data16
mov
mov
inc
std
xchg
out
out
xchg
mov
jae
fstp
popa
fld
mov
xchg
out
in
add
data16
sbb
sbb
loope
xchg
add
fnstcw
and
cmp
dec
cmp
loop
mov
xor
dec
mov
push
mov
jmp
cmps
das
int
cmp
ret
aas
xchg
adc
leave
or
mov
sbb
out
outs
jb
ja
dec
xor
(bad)
sub
dec
xor
sub
xor
fnstenv
push
adc
out
sub
cmp
pop
push
pop
xor
push
ins
dec
push
mov
icebp
mov
int
sahf
fcom
xchg
or
fisubr
pop
inc
pop
stc
daa
push
inc
shr
xlat
pushf
mov
mov
dec
dec
xchg
es
loop
pop
sub
int
in
jle
jmp
and
xchg
xchg
repz
mov
xor
cmp
cmc
sub
call
inc
jbe
dec
xchg
lds
jno
cmp
test
mov
push
sbb
bound
loope
mov
ja
cmp
jmp
add
dec
or
adc
jmp
cwde
xchg
icebp
(bad)
test
call
out
test
clc
popa
adc
jnp
mov
sub
retf
nop
xor
scas
mov
mov
enter
mov
xor
add
sub
fidivr
icebp
ds
in
and
cld
adc
shl
cmps
dec
jl
fcomip
jg
shl
sbb
inc
ror
and
jae
adc
popf
push
mov
int
inc
jge
das
jae
hlt
or
ss
lods
dec
xchg
ror
or
push
cwde
icebp
(bad)
test
inc
push
pop
jae
xor
push
jns
mov
xchg
lods
push
mov
(bad)
sub
sbb
push
push
in
mov
dec
mov
adc
gs
stos
sbb
sub
je
test
xor
jo
pop
ins
shl
adc
mov
fsincos
pop
jae
fucomi
inc
adc
add
xchg
out
test
(bad)
push
mov
cmp
nop
xor
test
push
pop
sbb
test
mov
daa
unpcklps
lods
dec
dec
inc
xchg
dec
pusha
mov
shl
ficom
xchg
ret
add
mov
sar
std
mov
call
and
xchg
shr
adc
jae
mov
test
pop
sub
ins
cmp
pop
xchg
cmp
cdq
cmp
cmp
imul
mov
jae
ror
xor
mov
aam
dec
and
int
sbb
fidivr
jecxz
test
xor
shl
lods
rol
pop
mov
ror
test
add
jbe
adc
shl
mov
mov
ret
lock
icebp
call
add
out
add
(bad)
sbb
sub
popf
adc
int3
shr
rcr
fwait
ja
xor
call
or
sahf
mov
adc
outs
adc
mov
cmp
daa
in
icebp
cmp
sub
jo
sub
mov
dec
push
mov
aad
fs
imul
sahf
mov
mov
mov
mov
dec
push
dec
push
stos
jmp
lods
out
sub
push
icebp
and
add
pop
cmc
sahf
shr
push
xchg
xor
ret
mov
mov
out
adc
inc
imul
xor
or
ror
std
outs
xor
mov
push
jge
jge
and
nop
sub
outs
jg
mov
lock
mov
dec
adc
stc
(bad)
fsub
aaa
or
push
arpl
retf
test
pop
ds
out
xor
cmp
das
jbe
cwde
gs
push
stos
aad
aad
aam
push
jecxz
inc
ror
ret
sub
dec
and
xchg
pusha
push
jae
paddq
sbb
dec
scas
jae
jae
fistp
les
mov
(bad)
fs
and
cwde
test
mov
(bad)
sub
pop
sub
jge
push
push
nop
mov
sub
jmp
dec
sbb
mov
cmp
xchg
xchg
xor
(bad)
mov
dec
add
in
sbb
cli
dec
mov
fwait
clc
shl
in
sbb
jle
mov
pop
in
and
movs
test
mov
xchg
sti
hlt
into
push
cmp
nop
ins
test
or
fyl2xp1
ficomp
mov
push
xlat
push
(bad)
ja
stos
sbb
in
ret
xchg
cs
pop
add
out
sbb
xor
mov
mov
or
out
jo
sbb
rcl
inc
pop
call
cmps
ret
out
add
jbe
repz
out
and
inc
mov
cmp
fld
xchg
adc
pop
or
push
aaa
movs
in
mov
inc
pop
stos
inc
stos
mov
add
out
jmp
call
jp
xchg
dec
mov
mov
int
out
mov
dec
push
out
retf
pusha
jl
push
pop
rol
retf
push
pop
mov
or
cmp
add
pop
sbb
daa
dec
mov
dec
loop
cmp
lods
push
popa
and
cwde
cli
in
stc
loope
test
scas
les
mov
xchg
xchg
(bad)
pop
cmps
scas
leave
mov
xor
jbe
xchg
adc
pushf
sbb
adc
bound
mov
and
fisub
jmp
imul
and
out
inc
inc
fst
fdivr
mov
sbb
jle
loop
push
or
(bad)
ss
clc
ffreep
pop
cli
or
sar
movs
mov
sub
xor
ss
addr16
ss
mov
push
sbb
outs
shl
mov
xchg
sub
nop
ins
add
jb
stc
test
push
pushf
daa
mov
movs
(bad)
jmp
jae
cdq
mov
push
cmp
enter
outs
loop
xor
add
movs
retf
push
or
jmp
xchg
xchg
addr16
lds
loope
mov
sub
test
scas
out
mov
or
shl
mov
lds
hlt
adc
cmps
pop
and
sub
test
clc
jne
daa
add
imul
ss
movs
jno
mov
daa
rcr
jp
sbb
or
xlat
lea
mov
cmp
fnstsw
sar
and
xchg
jnp
or
test
push
push
lea
mov
call
xor
lods
outs
or
add
jle
cmp
push
xchg
cmp
enter
clc
dec
aas
inc
xor
sub
xchg
mov
pop
adc
cli
loopne
mov
jo
xchg
fdiv
lods
dec
das
nop
and
push
xchg
xchg
lock
or
inc
enter
sub
jno
jae
cmp
mov
movs
cmp
sbb
mov
in
aaa
add
pusha
or
and
sbb
loop
mov
cmp
into
rcl
push
xchg
loop
cld
mov
pop
ja
fidiv
daa
test
push
xlat
fwait
test
out
cmp
dec
or
aam
dec
sub
jg
jno
shl
cld
daa
idiv
popf
js
or
cmp
pop
dec
aam
mov
popf
cmp
shl
ret
xchg
aas
shr
sbb
mov
pop
mov
mov
mov
cmp
sar
popf
sahf
out
mov
ret
sub
mov
imul
pop
and
cmc
push
or
mov
jnp
adc
js
or
sbb
mov
outs
xor
fild
popf
adc
sbb
cdq
xor
iret
and
push
stos
cmp
add
add
outs
in
ror
xchg
jno
lds
pushf
mov
test
add
sbb
xchg
dec
test
dec
and
adc
pop
push
cmps
push
inc
pop
fs
and
jmp
inc
jecxz
adc
in
sbb
cmp
inc
mov
inc
mov
jns
or
add
idiv
mov
push
xchg
push
inc
jle
mov
adc
ds
outs
and
cs
jecxz
xor
sar
(bad)
and
xchg
aas
jae
add
imul
outs
xor
jp
ud0
fmul
mov
fisubr
sbb
sbb
jo
loope
jl
jb
dec
inc
and
xchg
ins
sub
mov
mov
mov
mov
(bad)
cld
jp
mov
dec
arpl
lock
add
pop
mov
mov
xchg
and
adc
mov
jecxz
mov
dec
jno
cmc
stos
mov
ins
sbb
aas
daa
stos
xchg
cmp
or
fild
sub
jne
cdq
sbb
jno
in
adc
mov
rcr
lods
sbb
leave
or
imul
outs
pop
lods
mov
mov
bsr
js
adc
mov
pop
fcom
shl
fist
mov
popa
pop
push
fs
repz
cmp
sub
and
ins
jmp
call
cs
scas
mov
out
ror
cs
fdivp
repz
call
dec
jmp
mov
push
mov
jmp
pop
xchg
push
imul
rcr
jns
mov
jb
popa
xor
icebp
adc
fidivr
pop
dec
jns
dec
add
pop
or
or
pop
push
dec
das
cmp
pop
call
test
add
mov
sbb
pop
ret
lods
mov
or
sub
xchg
jp
jae
cmps
lahf
(bad)
lock
jb
mov
dec
lahf
pop
inc
mov
push
in
dec
adc
mov
mov
mov
call
xor
(bad)
and
addr16
mov
not
push
inc
stos
and
push
fild
daa
inc
mov
hlt
out
cmp
movs
mov
cmp
adc
clc
es
sahf
xchg
sti
scas
inc
dec
daa
or
xchg
test
cmps
imul
xchg
push
or
adc
mov
xchg
popf
mov
jae
xchg
adc
aas
dec
mov
sbb
dec
cld
push
(bad)
pop
cli
mov
pop
pop
sar
out
shl
dec
or
clc
inc
jecxz
mov
(bad)
mov
or
push
enter
in
mov
jmp
jge
sub
arpl
ins
pop
stos
pop
dec
or
xchg
or
ja
jmp
outs
or
and
jo
mov
ret
imul
scas
cmp
jbe
inc
dec
dec
adc
mov
mov
test
xor
jmp
and
aam
repz
pop
add
add
cli
push
fistp
test
pop
push
pusha
(bad)
cmp
ja
sbb
or
inc
xor
mov
in
dec
(bad)
and
movs
jmp
shl
jns
pop
aas
ret
jle
mov
repz
mov
sti
retf
jecxz
jno
push
jae
sbb
push
jg
clc
mov
pop
dec
clc
ja
mov
mov
int
xchg
jae
xor
stos
sahf
js
inc
jo
push
repz
add
sub
je
mov
ja
inc
cmps
repz
lds
fwait
push
push
test
sbb
sbb
mov
mov
out
fdivr
sbb
test
adc
sahf
mul
mov
sbb
push
mov
aas
sbb
sbb
push
loopne
xchg
lea
aad
push
jge
scas
fstp
inc
jge
xor
mov
sahf
cli
dec
sbb
push
inc
test
lahf
add
(bad)
jmp
fcomi
jmp
mov
hlt
es
mov
sbb
push
mov
sbb
fcomp
std
xor
mov
mov
ret
pushf
pusha
addr16
mov
cs
enter
sbb
sar
push
ror
add
movs
xchg
or
repnz
scas
mov
jb
cmps
xor
and
ds
sar
adc
test
lods
in
int
jg
mov
xchg
push
ror
movs
xor
shl
add
push
mov
enter
imul
inc
loopne
sub
clc
cmc
addr16
cli
dec
or
adc
push
jb
stc
pop
hlt
or
in
inc
and
dec
cmp
mov
inc
and
outs
rcr
add
cmps
test
retf
leave
lods
fimul
out
(bad)
fadd
ret
clc
rcr
loope
(bad)
hlt
or
and
std
push
sub
clc
and
push
pop
pop
clc
inc
xor
in
loop
data16
test
and
test
sti
aas
inc
mov
out
js
jns
inc
dec
xchg
push
mov
push
inc
pop
or
bound
mov
rcl
and
push
ror
mov
inc
xor
cmp
call
vpmaxsw
xor
cwde
(bad)
mov
js
(bad)
fidiv
xor
repz
jae
jb
retf
in
sbb
push
pop
xor
xlat
ds
fs
cmc
mov
dec
mov
xlat
jecxz
inc
test
dec
idiv
scas
mov
loope
(bad)
out
add
inc
dec
xor
adc
xor
mov
clc
mov
sub
jne
pop
jg
dec
jne
sub
out
nop
in
imul
cmps
ret
imul
sbb
das
dec
sahf
and
neg
retf
sbb
sub
out
test
test
adc
movs
scas
aas
push
mov
rcl
arpl
out
xor
and
movs
pop
pop
lahf
arpl
jne
out
pushf
mov
imul
std
sbb
push
add
push
lods
mov
mov
ds
test
fdivr
and
pop
cmp
hlt
mov
outs
mov
dec
dec
mov
push
jecxz
mov
sub
(bad)
outs
mov
adc
mov
cmp
push
adc
jne
xchg
or
jbe
adc
jmp
movs
adc
(bad)
jbe
clc
push
sub
jbe
adc
adc
xchg
jae
adc
test
std
cmp
fmul
sti
stc
fistp
cmc
ins
add
fistp
sbb
and
jnp
(bad)
xchg
inc
dec
mov
loope
ja
aaa
inc
movs
mov
and
(bad)
pushf
fldcw
inc
push
inc
jne
das
cmp
(bad)
hlt
jg
cmp
inc
stos
pop
rol
inc
jle
into
xor
cmp
js
dec
adc
push
pushf
ret
stc
xacquire
shl
pop
lods
cli
sbb
cmp
dec
pop
pop
es
pop
mov
mov
lahf
fsubr
leave
xlat
push
(bad)
out
cmp
pop
mov
les
push
jle
sub
cwde
sbb
shl
sbb
lock
lock
or
lds
jns
push
daa
popf
imul
cwde
cmp
adc
sbb
and
pop
adc
push
mov
(bad)
mov
and
loopne
add
ins
imul
imul
out
add
icebp
mov
pop
popa
xchg
in
neg
(bad)
neg
aad
add
aaa
xchg
test
in
push
(bad)
icebp
jecxz
iret
sub
mov
xchg
jg
sub
push
adc
sub
jns
int3
dec
ja
xor
ror
add
je
sub
leave
jg
jae
pop
stc
ins
inc
xor
pminub
mov
mov
pushf
lahf
sub
in
pop
push
or
jb
xchg
daa
daa
lds
cmp
stos
mov
push
adc
imul
inc
repnz
(bad)
mov
mov
nop
xor
add
jmp
fwait
push
and
test
hlt
jmp
mov
rcr
mov
pushf
or
mov
sbb
sub
shl
xor
ss
ss
mov
jb
aad
mov
adc
ror
mov
adc
pop
jg
push
adc
outs
pusha
dec
dec
or
xchg
fadd
popw
repz
push
sub
inc
(bad)
sbb
mov
loop
retf
(bad)
aad
adc
arpl
or
adc
aam
dec
cmp
inc
mov
movs
mov
dec
xchg
add
or
clc
movd
mov
pop
add
jecxz
push
(bad)
loop
jp
mov
mov
cs
mov
sub
xchg
push
rcr
imul
cmp
iret
jbe
mov
xor
add
nop
arpl
cmp
daa
pop
mov
ins
xor
jo
xchg
inc
sub
or
or
jbe
mov
shld
sbb
aaa
sbb
call
and
pop
or
(bad)
adc
jle
adc
gs
cli
cdq
daa
jbe
aaa
in
xor
mov
inc
fisttp
dec
dec
in
and
push
or
jmp
mov
fsubr
or
xor
mov
lods
pop
mov
dec
jae
mov
dec
retf
xor
xor
shl
sub
pop
fisubr
retf
js
sbb
je
fadd
dec
iret
mov
xchg
loope
sbb
mov
inc
push
jg
mov
icebp
das
xchg
hlt
sub
fstp
movs
push
(bad)
fnstsw
imul
xor
adc
jp
jmp
les
adc
add
scas
dec
pop
xchg
mov
and
or
jecxz
xchg
adc
xchg
retf
jb
bnd
loopne
inc
gs
in
sar
adc
inc
or
out
push
push
shl
xor
aas
lea
outs
pop
xchg
or
push
and
xchg
ficom
pop
mov
ss
xlat
add
shr
jbe
xlat
xchg
hlt
mov
pop
out
dec
stos
dec
test
push
sbb
ret
mov
mov
out
mov
mov
call
mov
out
xchg
movs
loope
ficom
add
loope
cmp
jae
sub
in
cmp
hlt
pop
xor
add
jmp
adc
sbb
test
push
sbb
sub
repnz
mov
ret
rcr
dec
xor
fistp
xchg
push
dec
sbb
outs
ror
inc
popa
push
inc
aas
push
pop
or
add
cmp
mov
mov
js
jge
mov
(bad)
mov
fwait
js
or
jbe
mov
pop
push
adc
loop
lods
call
sar
imul
push
mov
sub
aad
jae
push
test
add
imul
inc
xchg
stos
add
mov
bound
pop
xor
lods
stos
jmp
cld
dec
in
fcom
xchg
push
idiv
(bad)
mov
scas
lods
jl
loop
cmp
inc
pop
add
or
sub
jle
aaa
movs
enter
xchg
jne
(bad)
jl
mov
mov
ins
cld
mov
outs
mov
out
jmp
cmp
test
ud1
lock
enter
loop
xchg
fimul
ror
push
sbb
ds
(bad)
movs
shr
aam
pop
pushf
dec
pop
sbb
cmp
sbb
repz
loop
adc
or
call
repz
xor
in
test
test
or
xor
jbe
or
or
ror
in
push
sbb
cmps
(bad)
cmp
mov
xchg
jle
pop
ret
push
lods
xchg
lds
and
ins
lods
jmp
adc
jb
xchg
inc
pop
call
push
cs
ror
mov
fwait
ss
fs
xor
iret
out
or
jne
sub
in
or
mul
xchg
cdq
jecxz
adc
jne
les
xchg
in
int
xchg
lea
pop
fst
pop
cs
xchg
sbb
sar
push
adc
movs
je
out
ss
push
shl
jno
nop
mov
cmp
add
xchg
jp
clc
or
and
or
(bad)
xchg
fimul
(bad)
repnz
int
add
mov
mov
adc
fucomi
movs
out
dec
shr
cmps
jno
xchg
icebp
not
std
inc
add
imul
ret
les
nop
addr16
dec
aad
punpcklbw
nop
cwde
jp
in
inc
cmp
add
push
popa
xor
div
pop
fimul
push
inc
mov
inc
and
(bad)
movs
in
mov
ins
and
add
mov
retf
mov
cmp
enter
inc
leave
lock
inc
iret
jle
inc
mov
mov
add
jmp
les
cmc
jbe
pop
pop
xor
inc
mov
and
dec
cdq
(bad)
loopne
mov
add
and
loope
jns
jno
rol
(bad)
test
mov
int
mov
pop
xchg
icebp
inc
pop
mov
arpl
(bad)
sub
sub
dec
jns
scas
cmp
lds
xor
or
add
arpl
xchg
cmp
call
repz
lods
jmp
test
mov
add
xchg
jno
arpl
ret
xchg
aad
or
cmp
dec
not
sbb
fcmovb
retf
push
popf
pusha
test
jno
icebp
jns
cmp
popf
inc
jnp
fcmovnbe
imul
outs
xchg
pop
xchg
push
scas
xchg
outs
pushf
mov
aaa
push
ds
push
sbb
(bad)
rol
mov
mov
and
dec
inc
inc
outs
jl
cmp
cmp
fs
jg
push
sbb
mov
pop
sti
loope
xchg
or
mov
sbb
inc
pop
mov
mov
test
xchg
imul
arpl
dec
bound
jb
xchg
sahf
js
rcl
cmp
retf
mov
mov
retf
das
fwait
xchg
ror
clc
and
fld
mov
popa
lods
mov
and
sbb
popf
sub
ja
sbb
xor
mov
sti
push
xor
xchg
adc
aaa
ds
jge
mov
sub
sub
push
shl
push
push
rcl
(bad)
cli
push
repz
add
lds
call
jne
frstor
fimul
fucomip
add
cmc
push
shl
out
xlat
inc
jb
sbb
xlat
inc
cld
push
test
and
add
ds
cld
xchg
mov
aam
test
int
or
adc
mov
inc
add
lods
xchg
push
xor
sti
movs
pop
retf
aam
(bad)
dec
cs
and
push
jecxz
enter
enter
arpl
arpl
fsubr
sub
or
repnz
jmp
jg
jne
inc
push
les
jmp
jne
adc
cmp
pop
pop
add
mov
mov
dec
jp
mov
and
cld
sbb
or
and
sub
sti
lock
jmp
adc
jnp
push
cmp
cmps
jmp
daa
xchg
les
clc
mov
lahf
push
pop
(bad)
test
adc
xchg
mov
cmp
sbb
sbb
adc
sti
dec
sbb
cmp
(bad)
push
mov
sahf
rcl
mov
fs
in
fxch
xor
in
bound
sub
pop
rcr
xchg
out
pop
jmp
enter
inc
xor
cld
xor
and
fistp
sbb
mov
test
movs
mov
xchg
mov
and
xchg
jl
mov
dec
xor
sub
push
cwde
sbb
sbb
scas
aas
sbb
mov
data16
or
test
test
fstp
xor
cmp
test
xchg
xchg
je
mov
adc
xor
in
or
(bad)
std
jp
mov
imul
and
mov
jns
jb
(bad)
pop
mov
adc
(bad)
popa
aas
in
shl
inc
mov
loope
aas
fisttp
shl
xor
(bad)
dec
ror
sahf
addr16
cmc
sahf
pushf
adc
std
int3
lods
test
sub
hlt
add
jmp
jo
lods
dec
das
loopne
je
ret
pop
jbe
adc
into
bound
add
xchg
(bad)
cwde
enter
jge
sub
xor
js
inc
enter
xor
mov
adc
mov
sub
cmp
jnp
cmps
sbb
lods
arpl
aaa
inc
ins
sbb
test
iret
je
icebp
sar
mov
into
xor
or
ins
in
add
adc
mov
sub
push
repz
aad
ds
mov
cmc
xchg
push
xchg
test
xlat
adc
div
fcmovbe
cmp
xor
and
jle
sbb
or
daa
stos
push
test
sub
mov
je
push
xlat
jo
xor
sahf
into
or
sar
(bad)
cmp
and
andps
call
pop
push
adc
int3
jg
ret
and
fyl2xp1
sub
adc
xchg
or
pmullw
sbb
gs
test
iret
retf
adc
scas
adc
(bad)
sbb
or
movs
sub
sub
shl
out
in
inc
and
pop
gs
rcr
xor
sbb
repnz
cmc
movs
pop
or
cmps
ror
cmp
ror
inc
stos
outs
push
jmp
inc
push
pop
(bad)
and
and
push
into
lods
(bad)
xor
das
retf
out
mov
ret
pop
icebp
ins
add
inc
or
fadd
rol
cmp
bound
add
xchg
dec
pusha
stc
mov
inc
rol
pushf
repnz
ja
hlt
xchg
push
pop
sti
mov
nop
les
push
repz
sbb
mov
outs
in
ins
sbb
into
xor
mov
retf
mov
cmps
loope
pop
fisub
cmc
icebp
(bad)
push
daa
add
push
pop
push
xlat
(bad)
fcmovnu
pop
cmps
call
dec
and
mov
mov
rol
movs
cmp
inc
xchg
xor
pop
jmp
sbb
jae
xchg
pop
jo
mov
std
or
mov
shl
mov
sti
mov
ret
inc
and
stc
sbb
pusha
call
add
(bad)
stc
jnp
jb
jbe
loopne
sbb
pop
mov
sub
cmps
jno
aaa
int3
lea
into
add
int3
jo
sbb
fcomp
les
jge
dec
aam
xor
sbb
mov
xor
scas
imul
ins
(bad)
xor
cs
cmp
cwde
(bad)
in
int
stc
sub
(bad)
loop
(bad)
xchg
pop
add
aam
sub
xor
xchg
lds
cmp
movs
lahf
out
sbb
push
xlat
mov
in
sub
stos
dec
push
xor
pop
fwait
push
mov
mov
push
sub
repz
packsswb
std
jmp
sub
pop
pop
push
outs
cmc
sar
lea
push
cs
ds
add
xor
ror
sar
mov
stos
adc
sub
sub
and
je
test
rol
mov
repz
stos
daa
pop
inc
xchg
(bad)
imul
xor
pop
int3
mov
or
ins
or
icebp
and
pop
mov
dec
jmp
sub
scas
push
mov
jne
(bad)
fsubp
aaa
outs
es
or
cmp
cmp
shl
pop
fs
stc
bound
aad
xchg
fchs
adc
push
cmovno
mov
sbb
popf
adc
out
out
aad
xchg
xchg
jnp
mov
imul
cmc
dec
cmp
push
or
and
xlat
jns
out
call
xchg
into
inc
ds
inc
dec
cmp
jp
push
loope
xchg
arpl
adc
sbb
mov
xor
movs
sti
leave
fmul
inc
data16
jmp
ins
inc
pop
cdq
mov
xchg
pop
sub
inc
cmp
jns
dec
dec
add
loope
aaa
adc
lods
into
daa
fidiv
pop
sbb
shl
jbe
dec
mov
adc
push
sbb
ins
xchg
loope
xacquire
int
fcom
push
stos
jbe
add
xchg
pop
mov
loop
cmp
(bad)
jl
ds
dec
fwait
xchg
jns
jge
lods
add
and
fyl2xp1
mov
fild
mov
and
push
cmp
inc
mov
lock
into
xor
mov
push
nop
int
push
int3
mov
pop
pop
lods
shr
or
loopne
sub
jge
int3
mov
dec
ja
push
pop
xchg
int3
add
sub
cmp
add
retf
jmp
imul
fsub
and
enter
imul
sbb
mov
jp
mov
ret
scas
not
add
mov
inc
mov
inc
and
clc
bound
jb
fldcw
retf
mov
jns
push
inc
push
nop
or
cmps
mov
push
popf
fistp
push
mov
retf
or
xchg
adc
pop
ja
cmp
inc
jmp
ret
call
clc
gs
push
fsub
icebp
mov
pop
mov
shr
repnz
(bad)
xlat
shl
mov
outs
push
pop
rcl
ror
or
dec
dec
idiv
sbb
dec
nop
jg
retf
pop
fisttp
lods
sar
xchg
and
ins
xor
push
xchg
les
xchg
jnp
push
(bad)
jbe
addr16
mov
sbb
xchg
js
das
ss
pop
mov
scas
in
(bad)
jb
pop
xor
not
or
fwait
cmp
out
push
retf
mov
retf
mov
mov
push
jnp
mov
repnz
push
adc
cmc
jge
(bad)
aaa
jb
or
imul
lahf
mov
and
inc
adc
jge
sbb
pop
hlt
sar
xchg
mov
in
mov
pop
test
jmp
(bad)
jno
test
hlt
push
cmp
sbb
jge
adc
pushf
arpl
mov
push
pop
mov
mov
push
out
sub
(bad)
shl
push
cmp
retf
cmp
in
popf
jmp
sete
into
or
nop
push
pop
mov
in
daa
dec
mov
into
lea
and
ret
call
or
jg
xor
fimul
ret
ror
dec
test
jns
or
xchg
mov
adc
jecxz
push
and
mov
jle
pop
std
js
cwde
inc
xchg
mov
retf
adc
mov
mov
nop
lods
or
add
in
ret
push
fnsave
push
movs
loope
mov
aam
int3
clc
xchg
cmp
int
mov
(bad)
add
in
push
dec
sub
aas
jno
popf
adc
bound
adc
xchg
outs
mov
cmp
push
mov
out
jecxz
jne
das
mov
cmp
fstp
(bad)
sub
jmp
and
pop
pop
xor
jno
lock
add
cmps
mov
add
and
mov
mov
jl
test
and
outs
adc
push
dec
pop
sbb
shr
int3
xor
sub
jns
lea
adc
iret
mov
ret
mov
fisub
(bad)
cmp
add
fwait
or
cmc
push
ins
in
mov
sti
mov
mov
dec
repz
stc
xor
and
inc
xchg
fimul
push
inc
mov
jl
pop
mov
ror
js
jp
aad
and
mov
mov
pop
je
xchg
imul
jl
jg
fsubr
xor
retf
jmp
ret
pop
mov
imul
jmp
add
int
add
mov
scas
fistp
mov
adc
or
cmp
popf
mov
lods
(bad)
out
push
add
jge
inc
ins
cli
(bad)
in
mov
(bad)
out
in
shl
xchg
sub
ins
fwait
jmp
rol
mov
ror
dec
add
fisubr
cdq
int
(bad)
mov
(bad)
mov
sub
ja
aas
mov
cwde
cli
sub
iret
dec
(bad)
loope
fst
cmp
jmp
xchg
mov
and
pushf
ud0
int3
dec
push
stos
stos
das
cmc
sbb
jnp
mov
add
test
mov
cmp
dec
cli
fwait
out
inc
add
in
cmp
inc
fldcw
and
mov
sar
dec
loop
jno
pop
and
mov
cs
xchg
les
dec
popa
jns
sub
xor
cmp
cmp
jmp
repz
mov
(bad)
jle
scas
fidivr
dec
adc
pop
cli
or
add
sbb
cld
xlat
dec
push
cmp
nop
out
jle
adc
addr16
jmp
test
push
pop
jmp
dec
cmc
mov
in
adc
arpl
mov
push
xchg
ret
repnz
or
push
pop
ffree
loope
pop
mov
cmps
xor
sub
repnz
(bad)
dec
add
repnz
das
mov
xor
daa
cmp
dec
js
cmps
push
jne
pop
jns
fmul
xor
cmc
ret
fcomp
imul
mov
mov
sti
sbb
mov
dec
push
adc
pop
jne
jns
sub
or
lock
and
enter
pop
pop
enter
inc
outs
jmp
daa
push
sbb
loop
sub
cmp
or
sbb
fwait
mov
test
or
fcomp
sti
std
call
mov
push
aaa
mov
sub
xor
loop
fcom
pop
enter
(bad)
pop
jmp
add
in
cmp
push
xchg
cmp
std
mov
sub
cwde
cmp
and
mov
vcvtdq2ps
push
adc
test
ret
sbb
rcr
or
movs
popf
inc
pop
inc
jmp
and
and
nop
loopne
fist
in
cli
test
mov
popa
movs
cs
add
xor
cdq
xchg
and
jae
jb
add
adc
ss
mov
in
pop
inc
fcom
shr
js
pop
push
addr16
add
cwde
leave
pop
loop
mov
out
jge
adc
and
xor
in
add
jle
fisub
push
jb
sar
movs
mov
sbb
out
out
xor
xchg
ds
aaa
cmp
out
mov
mov
xchg
out
ds
xchg
push
mov
xchg
test
xchg
cmp
inc
mov
mov
js
or
lock
call
mov
test
push
(bad)
retf
imul
jge
pop
dec
xchg
xlat
xchg
xchg
fwait
(bad)
bound
addr16
js
dec
mov
inc
xchg
out
loop
nop
sub
xor
and
call
adc
mov
add
and
cmp
lods
xchg
sub
sub
pop
es
mov
xlat
ins
loope
sbb
mov
test
outs
xchg
mov
pop
mov
leave
leave
test
pop
sar
ss
jb
mov
mov
mov
jg
cdq
arpl
int
movnti
dec
sbb
inc
adc
call
jbe
or
push
data16
xchg
pop
popa
addr16
cmp
pop
jns
push
lahf
inc
mov
adc
aad
jmp
pop
outs
test
xchg
dec
aam
or
(bad)
mov
int
mov
cdq
xor
jb
fcomi
cmp
adc
xor
inc
out
mov
iret
mov
sub
icebp
lods
mov
jmp
loope
or
cmps
or
adc
mov
lods
shl
cmps
dec
jle
inc
pop
cmp
jno
and
ss
adc
mov
test
neg
jb
jp
fnstenv
mov
bound
pop
jno
retf
std
sub
dec
xor
mov
scas
dec
ds
jnp
std
pop
pop
jb
leave
retf
mov
xlat
(bad)
les
bound
dec
ja
add
pop
out
shl
cmps
pop
push
and
mov
imul
sbb
sub
test
push
outs
jb
aam
in
inc
jl
push
imul
mov
pop
jnp
rcl
inc
and
addr16
sub
sti
push
fcomp
dec
xchg
or
ins
sub
push
push
sub
out
leave
pop
adc
adc
cmc
iret
ss
pop
(bad)
mov
icebp
pop
jne
into
or
sahf
xor
leave
stos
and
or
sub
adc
(bad)
mov
mov
xchg
cmp
stos
and
xchg
cmp
pop
mov
outs
inc
mov
imul
xchg
aam
cld
fs
xchg
mov
xchg
shr
(bad)
ret
cld
mov
sbb
or
out
xchg
pop
into
rcr
(bad)
into
mov
retf
shl
and
aam
(bad)
cmps
leave
mov
jno
(bad)
mov
or
je
push
xchg
push
pop
pop
inc
imul
out
fbstp
mov
cwde
hlt
adc
inc
mov
fsubr
fist
sti
or
xor
cmp
mov
jae
add
xchg
push
jg
imul
inc
call
and
xlat
xchg
dec
xor
pop
pop
sbb
inc
xchg
pop
sub
push
xor
jle
xchg
pop
mov
fwait
pusha
rcl
sbb
jecxz
jno
mov
imul
xor
sub
ror
mov
popa
aam
xchg
dec
movs
sbb
imul
(bad)
pop
cmps
jge
inc
jno
call
and
fimul
(bad)
pop
sbb
pop
lock
jnp
push
or
(bad)
retf
dec
fisub
cld
cmps
out
stos
or
and
pop
push
imul
sbb
push
loope
inc
or
mov
add
xchg
je
mov
popa
mov
push
scas
dec
loop
(bad)
out
push
mov
mov
sbb
inc
fdivr
jmp
ror
fidiv
xor
(bad)
in
add
ror
inc
xchg
in
lock
in
iret
(bad)
lea
in
test
rcr
mov
sbb
test
jnp
stos
lock
dec
xor
pop
mov
popa
cli
(bad)
(bad)
mov
push
adc
fwait
sar
sbb
or
cmc
mov
shl
inc
add
xchg
int
ret
(bad)
repnz
int
out
sbb
retf
jmp
and
mov
jbe
push
bnd
and
cmc
neg
jne
dec
pop
call
mov
push
pop
mov
sbb
adc
pop
ds
es
ss
daa
xor
xor
stos
(bad)
add
jo
gs
adc
xor
ins
cmp
stos
mov
xor
rcl
jne
int
pop
mov
jp
outs
jae
ss
jge
cmps
fistp
xchg
pop
arpl
bound
icebp
ror
inc
pop
or
sbb
movs
outs
dec
adc
adc
out
pop
push
nop
mov
js
out
stc
jecxz
js
or
cs
aas
add
inc
test
scas
scas
jo
mov
inc
aad
es
pop
jge
inc
and
mov
pop
xor
mov
push
jle
mov
daa
inc
lock
cmps
(bad)
fcomp
jmp
lock
lock
ror
jne
std
enter
xchg
mov
or
lock
fisub
push
int3
repz
cmp
sahf
push
das
ins
jg
out
sub
lock
outs
inc
pusha
mov
mov
mov
mov
dec
aam
jmp
repnz
scas
mov
fisubr
mov
xchg
adc
sbb
add
and
inc
jle
and
xchg
test
popf
mov
or
fnstenv
fs
mul
pop
jle
jecxz
cmp
sti
icebp
xchg
shl
int3
mov
push
das
cmps
loope
sbb
dec
jne
jmp
sub
imul
or
dec
(bad)
jb
cld
pop
mov
mov
fistp
imul
jmp
and
xchg
outs
or
pop
in
ins
je
jecxz
clc
and
xor
adc
in
sub
push
(bad)
cmps
rol
push
add
scas
sbb
test
icebp
push
fld
xchg
mov
cs
or
or
mov
mov
mov
fs
pop
xor
into
mov
retf
mov
mov
xlat
sub
cmp
xchg
inc
cwde
data16
outs
inc
dec
add
test
das
add
pop
sti
daa
add
add
bound
sar
mov
lea
sbb
xor
js
in
and
loope
inc
push
or
pop
fidivr
out
sbb
(bad)
jae
or
int
jns
xchg
in
call
xor
cld
(bad)
popf
inc
movs
xchg
test
sub
mov
push
shl
scas
scas
cmps
or
xchg
or
sahf
xchg
cmc
dec
es
adc
sbb
mov
pop
addr16
aas
pop
jmp
mov
fcmovnu
inc
ror
mov
jne
add
mov
and
imul
xor
xor
call
jne
leave
div
test
jne
iret
sub
dec
xchg
mov
adc
dec
push
div
shl
sbb
push
push
inc
movs
mov
push
pop
adc
imul
adc
adc
jle
loope
(bad)
stc
inc
das
jl
sbb
jae
and
nop
sahf
in
dec
mov
adc
pop
out
in
pop
pop
mov
out
frndint
cmp
or
xchg
and
inc
loop
xor
pop
mov
or
xchg
mov
or
aaa
pushf
dec
xor
int
mov
cmp
cmp
fstp
rcr
ror
push
xchg
inc
jo
js
mov
mov
test
imul
pop
add
and
pusha
or
inc
aad
pop
gs
movs
ins
mov
sub
sub
jns
xchg
or
jl
xchg
jbe
sbb
and
jmp
adc
xchg
les
or
movs
popa
popf
mov
fcom
sti
dec
retf
imul
adc
push
sub
fistp
cmp
sub
and
cmp
add
or
add
xchg
dec
add
sub
aad
push
inc
xchg
cld
fisttp
scas
cmove
xchg
lds
pop
mov
mov
mov
cld
cmp
xchg
mov
add
xchg
(bad)
mov
mov
pop
out
or
add
sti
(bad)
retf
retf
or
xchg
xchg
(bad)
int3
mov
mov
(bad)
jp
xor
dec
mov
mov
jmp
inc
xchg
and
or
jg
call
clc
sub
test
inc
(bad)
loope
cld
inc
das
ret
lock
aaa
js
call
sbb
dec
jmp
mov
adc
stc
ror
sti
sub
dec
imul
retf
mov
nop
jo
dec
stos
popa
popf
imul
sbb
push
inc
in
mov
inc
or
push
mov
retf
mov
xor
pop
inc
push
lds
mov
xchg
jb
shr
test
out
ins
in
push
daa
pop
push
push
sub
adc
movs
jno
(bad)
loope
cdq
outs
or
add
sti
cmp
push
mov
jmp
fisub
fst
inc
and
cmc
adc
mov
lods
arpl
jg
cwde
movs
mov
dec
mov
and
push
pop
adc
pop
pop
jl
js
shl
aaa
pop
xor
aad
clc
lds
ret
(bad)
in
push
push
pop
(bad)
sub
push
adc
sar
mov
adc
pop
sub
mov
and
add
or
test
and
aas
and
and
adc
movs
in
sub
fidivr
shl
pop
sub
jbe
lahf
cmp
test
pushf
ins
inc
lods
test
clc
or
push
sbb
mov
xchg
cs
and
daa
loopne
out
pop
lods
sbb
fucomip
or
mov
gs
(bad)
sahf
dec
inc
sbb
lahf
retf
std
ss
repnz
jmp
movs
sub
push
jmp
cld
lods
cmps
mov
call
push
lahf
dec
jbe
(bad)
jae
mov
rol
pop
xor
push
out
loop
add
nop
mov
test
inc
inc
vpmacsdqh
js
jmp
inc
mov
mov
push
test
js
ins
xchg
push
mov
movs
push
nop
in
popf
inc
not
test
loopne
or
stc
pop
sbb
inc
mov
mov
loope
xor
or
out
stc
xor
sti
psubw
jb
pushf
dec
add
js
jnp
nop
pop
sub
mov
pop
lods
(bad)
fwait
std
ret
cld
cmp
push
fnstsw
cld
mov
scas
dec
ret
sbb
mov
jno
and
mov
adc
pop
xchg
adc
leave
push
jno
jmp
adc
jbe
and
ja
adc
jne
add
(bad)
xor
adc
xor
outs
dec
daa
emms
fcomp
add
and
test
sahf
inc
jb
add
mov
jmp
sub
fwait
nop
in
mov
dec
push
pop
loop
movs
nop
mov
xchg
xor
pop
popf
cmc
retf
loope
sar
cmp
sub
dec
xor
fisttp
mov
loope
stos
fidivr
jg
mov
shr
cmp
imul
movs
imul
inc
lds
scas
sub
test
adc
clc
add
push
jmp
sub
mov
jge
je
adc
cwde
jo
imul
scas
mov
pop
fdiv
dec
and
xchg
idiv
mov
xor
xchg
repnz
dec
into
sub
add
shr
pop
aas
loope
adc
shl
xor
adc
mov
cmps
and
add
test
stos
and
xchg
or
cs
ret
or
lahf
dec
jl
inc
enter
cld
push
sub
pop
stos
repz
add
add
cmp
add
xlat
clc
push
adc
das
clc
ja
jge
add
icebp
or
clc
addr16
push
dec
xchg
push
xor
jmp
mov
mov
(bad)
aam
imul
jecxz
scas
push
and
(bad)
jbe
arpl
loopne
xor
(bad)
sub
test
or
pop
adc
sbb
inc
js
jns
mov
jge
cld
cli
sti
addr16
outs
sub
xchg
pusha
or
xchg
inc
dec
stos
jmp
push
mov
push
test
mov
mov
dec
jmp
inc
mov
ficom
jns
sub
adc
mov
in
jb
ds
pop
std
inc
xlat
jecxz
shl
cwde
lds
push
inc
(bad)
in
xor
(bad)
cmp
je
jnp
int
xchg
xchg
inc
(bad)
(bad)
fild
pushf
add
popa
loopne
jns
adc
(bad)
adc
push
jne
mov
jg
ins
test
clc
push
xchg
call
fs
jecxz
sub
or
xchg
inc
jne
adc
(bad)
and
add
mov
js
sub
test
outs
mov
pop
gs
fwait
ins
push
push
cmp
mov
pop
xchg
sub
jae
mov
cdq
test
aam
and
mov
pop
dec
xchg
mov
clc
inc
(bad)
mov
dec
iret
lock
cmp
ins
arpl
test
fstp
les
mov
push
xchg
sahf
dec
push
into
repnz
rcr
jno
mov
mov
ror
fnsave
sbb
in
and
xor
cmps
adc
ins
and
mov
daa
ins
cli
fdivp
nop
mov
sbb
fcomp
xor
inc
js
jno
mov
test
sbb
push
imul
call
jge
jl
jno
pop
mov
xlat
jb
xor
xchg
dec
sahf
(bad)
dec
call
fcmovnb
les
push
loope
cmp
cdq
fimul
pop
hlt
ret
cs
aad
jmp
or
xor
pop
stos
loop
(bad)
stc
dec
jno
jmp
ss
cli
out
test
dec
scas
aad
jnp
or
push
inc
hlt
push
lahf
outs
scas
xor
pop
movs
push
push
lea
fnstcw
dec
cld
ins
enter
loopne
inc
das
mov
mov
not
mov
xchg
push
pop
dec
ss
jle
xor
or
lock
(bad)
not
fcomip
and
fldcw
outs
movs
out
cli
jb
or
icebp
test
arpl
xchg
hlt
imul
jo
jno
dec
inc
ucomiss
lock
sub
inc
daa
cmp
(bad)
and
outs
add
rcr
add
jnp
lahf
pushf
out
dec
ins
scas
xor
fs
cmp
dec
test
sbb
out
aaa
add
jl
test
imul
cli
fistp
ins
add
retf
cs
fdivr
mov
in
push
aaa
(bad)
xchg
or
mov
and
and
sub
pop
push
xchg
and
lods
shl
add
dec
jo
scas
add
cs
mov
(bad)
pop
add
cmp
les
add
into
shr
cld
leave
jmp
dec
mov
(bad)
clc
sbb
sbb
add
and
adc
in
aas
ds
mov
aad
retf
push
ja
int
xchg
cmps
pusha
popf
push
nop
clc
iret
sub
repnz
add
cli
lods
cmp
mov
cmp
in
mov
das
pop
add
fcomp
mov
fidivr
icebp
dec
cmc
lea
sub
cmp
jae
cdq
stos
jns
mov
fcomp
repz
cld
or
sbb
in
in
sub
xor
cmp
ret
retf
sub
add
pop
(bad)
lods
mov
lods
pop
dec
sub
(bad)
adc
sti
stos
dec
add
jo
gs
imul
pop
arpl
push
adc
dec
imul
leave
fidivr
dec
clc
loopne
pop
jle
cmc
dec
dec
cmp
cmp
inc
or
pop
lea
add
add
in
je
sar
leave
leave
call
iret
(bad)
push
ss
jb
dec
pop
lock
out
out
and
push
cmp
(bad)
xlat
and
or
push
and
mov
mov
jns
mov
ret
pop
mov
pop
pop
cli
jbe
mov
push
sbb
out
ss
mov
pop
mov
mov
jp
in
jecxz
sub
movs
(bad)
(bad)
push
dec
xchg
adc
cmps
bound
not
pushf
dec
mov
sbb
lods
inc
fdiv
loop
mov
ret
add
inc
xor
inc
xchg
and
mov
mov
test
std
mov
jns
mov
out
into
sub
jge
jae
jae
retf
pop
aam
test
and
inc
imul
ficom
mov
sbb
out
jmp
(bad)
ja
ror
sub
inc
call
xor
mov
fwait
jp
lds
pop
inc
xlat
jmp
pop
popa
cmp
push
call
hlt
sar
addr16
imul
mov
hlt
xchg
inc
popa
adc
out
push
int
(bad)
sar
xor
cld
rol
pop
test
inc
pop
sbb
movs
pop
jge
push
mov
xchg
inc
cld
sbb
ds
inc
xlat
out
test
mov
addr16
push
mov
mov
dec
mov
mov
fadd
sub
jbe
cmp
mov
(bad)
push
call
daa
imul
shr
push
sub
lods
dec
jno
pop
adc
sub
xchg
pop
fst
xchg
mov
mov
xor
xchg
iret
cmp
mov
iret
sbb
out
(bad)
hlt
inc
jbe
dec
mov
mov
jge
std
jle
(bad)
in
or
jmp
mov
(bad)
dec
scas
movs
(bad)
mov
fsub
les
mov
ret
sub
loopne
sbb
adc
adc
pop
jle
ja
mov
xor
or
aad
push
push
(bad)
(bad)
in
imul
add
xlat
fs
ret
add
cmp
iret
push
stos
data16
xor
xchg
pop
dec
inc
mov
sub
push
add
inc
cld
pop
ja
std
mov
in
push
loope
dec
mov
push
xchg
inc
sbb
sbb
aas
inc
jle
jo
imul
stos
inc
mov
stc
loop
inc
shr
xchg
call
out
call
stc
ret
fdiv
out
clc
jmp
mov
scas
stc
xchg
inc
divps
sub
mov
(bad)
scas
test
xchg
imul
out
jbe
(bad)
jp
psubusw
sub
or
push
add
dec
sub
adc
cwde
ds
cmp
jp
xor
fst
shl
mov
lahf
xchg
dec
out
and
inc
loop
xor
les
dec
push
inc
scas
stos
or
inc
pop
dec
cmc
icebp
leave
mov
sub
test
cld
stc
mov
push
ficom
je
dec
lods
sbb
lods
xor
cdq
cmp
adc
sub
daa
mov
xor
fadd
scas
and
push
mov
mov
push
fst
ds
cmp
mov
add
das
out
dec
jg
mov
or
fs
lea
or
fmul
inc
fmul
fimul
int
xchg
hlt
fist
ja
add
leave
out
ss
jmp
cmps
mov
cmp
popf
jge
pop
fs
mov
sbb
(bad)
xchg
bound
loope
sub
mov
xor
dec
fs
sub
and
stos
adc
ret
jo
pushf
mov
inc
ss
call
mov
sbb
in
cmc
outs
das
movs
popf
loope
aad
repz
adc
xchg
cwde
int3
in
xchg
scas
jbe
pusha
xchg
dec
push
movs
jb
cmp
ret
sbb
xor
cs
jns
loopne
xchg
test
int3
lea
or
jge
fcomi
jle
and
push
dec
mov
xor
idiv
sub
xor
mov
inc
rcl
test
xchg
repnz
cdq
mov
ret
loop
xchg
das
mov
cmp
lea
jmp
dec
add
mov
addr16
gs
retf
inc
test
sar
fisub
inc
adc
sar
pusha
sbb
pop
out
mov
sbb
mov
push
in
cmp
leave
shr
in
jg
cmp
push
test
mov
call
addr16
ds
mov
sub
mov
sbb
cmp
sbb
leave
out
pop
push
pop
ins
stc
retf
daa
jge
cmps
xor
and
outs
mov
jo
sbb
push
pop
dec
imul
push
test
les
adc
pop
push
xchg
movs
xchg
cmp
nop
js
or
sbb
mov
or
inc
jnp
jno
sbb
xor
dec
out
mov
cmp
and
and
fidiv
mov
pusha
dec
pusha
sub
add
pop
mov
push
pop
push
out
inc
ss
ror
and
mov
mov
and
pop
pop
(bad)
adc
mov
sub
stos
lea
int3
jns
ficomp
adc
cmp
jle
mov
pop
sbb
cs
ins
outs
jne
push
gs
mov
xchg
mov
ret
mov
xor
arpl
shl
sub
push
mov
pop
xchg
fnstenv
and
pop
or
fdivr
sar
outs
cmps
push
add
int3
xor
pushf
je
adc
ficom
(bad)
jmp
movs
scas
inc
cwde
int3
sbb
push
mov
push
imul
test
or
add
das
sbb
dec
shl
jmp
or
fsubr
in
and
lods
outs
stos
sub
loop
loope
jo
in
mov
and
icebp
inc
jns
jmp
sbb
adc
loop
jno
sbb
rcl
aad
sbb
xchg
mov
mov
daa
adc
hlt
push
and
push
dec
leave
leave
imul
pushf
xor
mov
in
sti
adc
push
xlat
arpl
(bad)
aad
shl
cmp
pop
test
dec
mov
or
mov
jae
scas
cmp
fld
dec
fstp
push
lock
popf
xchg
hlt
stos
xlat
mov
and
test
fwait
pop
pusha
jle
push
test
mov
cmc
sbb
dec
fcomp
fwait
or
mov
sub
xchg
inc
call
dec
call
shl
and
arpl
stos
out
in
leave
stos
pop
arpl
dec
xor
jns
push
(bad)
imul
jno
retf
sub
aad
scas
pop
scas
mov
push
jp
jp
xor
sub
mov
or
leave
retf
sbb
add
out
(bad)
(bad)
mov
idiv
mov
adc
mov
loop
add
pop
stc
jmp
scas
inc
adc
jecxz
rcr
push
xor
ja
dec
or
movs
pusha
jo
mov
mov
jmp
imul
popa
jbe
repz
bound
test
push
mov
cld
push
push
mov
mov
sbb
and
add
or
pop
xchg
ss
dec
movs
sbb
repz
ja
hlt
jo
push
fisub
xchg
mov
or
push
(bad)
aad
cwde
retf
mov
clc
cmps
test
jmp
xchg
jns
mov
cmp
pop
mov
mov
jg
imul
push
call
(bad)
cmps
idiv
push
ret
test
inc
out
pop
sub
adc
shr
sbb
(bad)
iret
sbb
mov
sti
push
cmp
mov
push
push
push
jno
leave
xlat
add
xlat
xor
movs
mov
lahf
rol
retf
pop
shr
addr16
mov
xor
sub
out
dec
cmp
inc
inc
pop
add
inc
fs
ja
or
sbb
pop
popf
mov
aam
fnstenv
retf
popf
fld
popw
adc
outs
sbb
aad
and
mov
inc
xchg
stos
xchg
cmp
inc
sub
or
inc
pop
repz
xor
in
icebp
sbb
mov
cmp
in
out
test
jb
xchg
mov
cmps
ins
and
add
sub
bound
or
inc
pop
call
mov
into
aad
add
ins
call
jnp
jecxz
stc
pop
mov
leave
das
sbb
cmc
sbb
pop
jne
imul
aam
(bad)
scas
dec
jmp
push
or
stc
add
gs
ins
(bad)
lea
mov
jg
pop
imul
jns
cmp
arpl
repz
nop
add
lods
jg
in
aad
dec
push
pop
mov
je
mov
dec
in
rol
xchg
pop
dec
xor
mov
jae
adc
cld
and
jmp
dec
inc
adc
pop
test
out
pop
push
out
pusha
cmp
and
ja
int3
int3
test
push
ins
ror
lock
cs
pusha
xchg
xchg
int
mov
lods
add
mov
add
ins
mov
sub
xor
ss
jge
cmp
sub
outs
sub
jne
mov
xchg
or
(bad)
mov
es
std
dec
aas
add
sbb
inc
imul
xlat
mov
imul
(bad)
and
les
aaa
lods
jecxz
rcr
xor
sar
jnp
into
lods
ja
je
push
mov
call
pop
mov
add
dec
jp
xchg
jae
xor
imul
retf
leave
scas
test
mov
sub
mov
data16
sub
push
cmp
aad
arpl
dec
bound
jns
cdq
ret
pop
or
cmp
iret
push
jne
mov
inc
jmp
adc
dec
jmp
jb
cwde
or
aam
jne
dec
jbe
xchg
movs
in
pushw
cmp
bound
jl
pop
icebp
mov
fadd
pop
inc
lahf
and
lea
xchg
jmp
sbb
xor
push
sub
add
aas
test
retf
xchg
and
and
test
das
jmp
mulps
cmp
inc
cmp
dec
mov
xor
not
xor
retf
shl
ss
adc
fdiv
or
xor
mov
jae
jbe
mov
div
int
scas
mov
xor
sbb
lods
fmul
call
or
or
bswap
popf
mov
dec
sbb
outs
test
pop
pop
xor
mov
mov
push
fwait
(bad)
mov
push
ror
xor
imul
leave
jp
mov
inc
mov
xor
cwde
call
sbb
pop
lods
jecxz
mov
xlat
mov
jg
iret
sar
icebp
popa
sti
mov
repz
sbb
nop
sbb
shr
xchg
adc
(bad)
pop
mov
test
shl
ja
mov
neg
dec
inc
sbb
shl
loope
ds
and
rcl
stc
outs
lea
aam
or
std
jle
push
mov
fwait
mov
pop
sbb
mov
sbb
fcom
jg
fstp
mov
cli
cld
fwait
popa
loop
movs
sbb
xor
into
mov
js
push
mov
ins
dec
in
stc
popa
xor
or
ja
int
aam
dec
repnz
lock
jns
inc
(bad)
icebp
and
psadbw
inc
out
scas
aas
mov
mov
push
cmp
jno
jmp
(bad)
fbld
pop
les
xor
or
xor
das
jne
push
cli
mov
sub
xor
vrsqrtps
or
sbb
push
shr
or
pop
fldenv
fmul
or
movs
jmp
aaa
data16
fisttp
xor
inc
outs
xchg
arpl
dec
mov
scas
add
inc
lds
xchg
and
sahf
pop
mov
jp
mov
scas
enter
pop
lods
mov
xchg
shl
popa
fmul
xor
or
cmps
scas
xchg
jb
dec
sbb
ins
sub
mov
mov
loopne
aam
push
bound
dec
and
xchg
xchg
(bad)
rcr
mov
xchg
pop
mov
sub
push
(bad)
jne
cmp
loop
sar
test
sahf
call
ret
mov
mov
mov
into
dec
imul
mov
and
pop
add
jg
cmp
cmp
sub
int
push
add
or
adc
push
mov
leave
sub
mov
add
pushf
arpl
ds
cmps
jg
mov
mov
repnz
mov
and
std
pop
jecxz
mov
inc
gs
bound
mov
je
push
pushf
dec
pop
adc
shr
fisub
add
movzx
ret
mov
cmp
pushf
cmp
cdq
pusha
int3
stos
stos
pop
jle
mov
pop
movs
dec
adc
pop
pop
mov
jg
adc
test
lds
lea
sbb
fcom
stos
add
movs
jne
movs
lods
cli
sbb
ins
dec
out
jl
sub
jp
scas
sar
popa
test
inc
sub
cmp
mov
outs
enter
in
ins
cmp
stc
mov
(bad)
mov
add
js
xchg
shl
jns
jnp
pop
push
dec
rol
pop
and
mov
retf
or
jmp
xor
loope
lds
pop
pop
pop
test
into
xchg
mov
or
and
lods
jle
inc
loope
ss
push
sub
(bad)
adc
in
dec
enter
loopne
adc
and
mov
addr16
lahf
dec
push
mov
push
in
dec
cmp
mov
push
fsub
jne
sub
pop
mov
xor
mov
xor
lock
mov
lea
sub
inc
test
mov
sub
adc
outs
cmps
loope
scas
dec
or
pop
jl
int
idiv
mov
arpl
sbb
fdiv
push
cmp
ffreep
mov
dec
aas
mov
mov
jo
mov
pop
std
xor
cs
or
mov
adc
adc
in
push
lods
int
lds
lock
jge
or
retf
mov
lods
mov
jb
or
sub
and
cmp
mov
sub
push
dec
cmc
mov
mov
sub
popa
mov
lahf
mov
ftst
cmp
add
adc
lea
push
repz
or
mov
adc
mov
or
and
clc
jmp
mov
add
out
sub
mov
push
test
push
xor
cmp
ret
dec
fsubr
cmp
inc
ret
sub
cdq
jl
ret
test
mov
dec
call
stos
jle
xchg
push
repz
dec
fild
js
inc
in
idiv
pop
dec
xchg
js
mov
pushf
ins
inc
outs
popf
mov
add
outs
xor
clc
pop
inc
xlat
mov
inc
add
dec
cmp
jb
fisubr
push
call
and
test
shl
mul
sub
or
or
not
icebp
and
inc
scas
lock
ret
sahf
aaa
push
jge
test
cmps
scas
test
xor
imul
and
ret
icebp
retf
xchg
or
inc
pusha
loop
les
in
in
out
repz
xor
int3
or
in
aam
or
xchg
sahf
inc
pop
fistp
cmp
frstor
das
push
mov
push
sub
dec
inc
dec
movs
es
mov
cmp
mov
cmps
sub
movs
fwait
inc
push
add
adc
add
inc
inc
dec
jmp
pop
rcl
in
mov
daa
sub
or
mov
sbb
mov
std
in
mov
jns
arpl
cld
je
pop
push
push
movs
and
imul
dec
jl
lods
call
hlt
or
js
addr16
mov
cmp
push
outs
push
lds
imul
cmp
dec
mov
enter
or
dec
mov
pop
pop
mov
cmp
sti
cmp
add
add
xchg
xor
push
test
mov
(bad)
das
mov
xchg
mov
push
cmp
mov
adc
and
xchg
inc
dec
xor
and
jge
push
xor
ja
nop
lds
in
pop
pop
cmc
mov
pop
clc
cli
stos
movs
cmp
add
pop
mov
js
xchg
pop
add
sub
jle
xor
nop
or
ins
daa
ja
popf
inc
xchg
lahf
push
mov
popa
xor
in
pop
xchg
sbb
cdq
int
mov
push
dec
cmp
mov
dec
int
es
test
fsubr
mov
mov
lahf
xchg
xchg
std
loope
dec
adc
int3
(bad)
adc
test
out
pop
or
(bad)
xchg
push
movs
(bad)
mov
push
shl
outs
dec
and
imul
mov
jecxz
cmc
std
les
pop
(bad)
xor
fcomp
mov
rcr
stos
aaa
test
sahf
add
sar
and
pop
ret
loop
out
push
jge
das
rcl
icebp
add
jle
mov
xchg
and
cmp
mov
(bad)
sbb
ja
or
popf
jne
adc
and
mov
test
imul
push
jp
retf
jne
xchg
mov
cli
and
iret
sub
push
rcl
and
sub
jb
pop
dec
and
add
jae
popf
xchg
ins
sbb
mov
cwde
iret
aaa
mov
outs
aas
sar
out
lock
jno
jle
test
or
dec
jnp
(bad)
repnz
test
mov
stc
cs
jne
ja
outs
lock
jl
gs
cwde
mov
retf
jno
cs
jg
mov
or
and
inc
pushf
cmc
mov
into
aam
xchg
mov
dec
ins
sbb
hlt
call
or
or
xchg
frstpm(287
push
xchg
dec
push
js
sbb
jb
bnd
leave
lods
call
ins
movs
cmp
jl
shr
retf
outs
cmp
lods
and
shl
mov
fdiv
mov
or
push
ror
repz
jb
nop
mov
das
sub
sahf
daa
cmp
cmp
mov
ds
sbb
xlat
iret
rol
(bad)
mov
adc
mov
sub
jnp
mov
jbe
hlt
jbe
clc
jno
xchg
xlat
call
mov
add
in
inc
push
jbe
ffree
mov
arpl
mov
mov
mov
xchg
sub
adc
lock
jo
xchg
icebp
dec
xchg
pushf
push
sub
xor
sub
mov
outs
mul
ins
loop
adc
outs
xchg
je
xchg
xor
retf
mov
lock
mov
lss
xlat
pop
cmp
(bad)
rcr
and
rdpmc
jmp
imul
fcom
jg
xchg
add
leave
jl
and
mov
dec
frstor
and
add
sahf
imul
test
or
mov
shl
hlt
dec
fwait
sub
xchg
jmp
mov
fistp
mov
jb
or
sbb
sbb
mov
xchg
pusha
fistp
inc
or
adc
cmp
aaa
(bad)
pop
mov
push
push
xchg
sub
jge
cmp
fiadd
imul
or
fld
and
out
pop
lahf
fdivr
mov
rcr
push
fcom
jge
ss
jg
call
pusha
fistp
out
lods
fnstcw
xchg
adc
rcl
ja
xchg
xchg
outs
pushf
sbb
ja
shr
mov
out
lahf
adc
cmp
inc
dec
inc
sbb
xor
sbb
xchg
out
fisub
mov
loop
aas
loop
arpl
push
dec
push
test
idiv
and
pop
out
jmp
js
jl
jbe
sub
add
pop
inc
sbb
gs
into
adc
aad
cmp
call
js
addr16
mov
or
leave
add
in
nop
xchg
mov
or
push
test
xlat
and
jb
cmp
and
jns
je
mov
push
enter
pop
(bad)
sbb
push
scas
jne
rcr
test
loopne
scas
xor
mov
push
test
pushf
inc
adc
dec
inc
jns
jg
pop
fwait
add
mov
les
ins
xor
push
das
out
push
adc
mov
pop
xor
in
push
ret
ja
add
inc
mov
xor
xor
fild
arpl
or
dec
into
push
xchg
mov
jg
sbb
(bad)
dec
dec
cmp
jbe
cmps
imul
int
fwait
adc
ret
and
test
xlat
xor
in
call
dec
jmp
pop
cmc
push
jne
pop
mov
fiadd
call
inc
sbb
out
scas
cmp
aas
call
inc
or
push
mov
cmp
cld
jbe
mov
dec
push
hlt
cmp
cmp
xor
cmp
sbb
mov
jle
push
dec
mov
test
in
adc
pop
jl
inc
jno
add
cli
xchg
mov
mov
ss
shl
mov
sbb
add
icebp
cwde
push
cmp
(bad)
mov
sub
jmp
stos
cmc
ins
inc
shl
mov
cmps
outs
mov
inc
sub
push
inc
sbb
pop
push
pop
test
jmp
jp
(bad)
fsubr
dec
sub
test
push
in
dec
mov
sub
mov
inc
scas
sub
sbb
inc
out
mov
fwait
jp
out
sbb
jns
pusha
jb
sub
inc
adc
jbe
cmp
hlt
adc
test
inc
popf
xor
sahf
add
cmp
mov
cld
aaa
stos
hlt
aad
fild
xchg
dec
sar
push
add
dec
rcl
mov
les
cs
dec
cmp
mov
xchg
mov
dec
add
in
shr
adc
xchg
pop
push
(bad)
out
mov
xchg
sbb
mov
mov
mov
and
dec
aad
sub
mov
mov
push
adc
sbb
aas
pop
xchg
push
sub
jecxz
add
cmps
mov
leave
sbb
dec
xor
in
push
fcmovnb
mov
dec
dec
pop
or
jmp
mul
inc
fiadd
in
in
imul
test
or
xchg
sub
mov
add
jg
cmp
and
rcl
mov
sub
mov
push
mov
or
sub
or
scas
in
(bad)
lds
psrlq
jg
adc
pop
pushf
das
and
jb
sbb
aas
in
cld
das
and
sbb
inc
and
stos
jo
mov
mov
fwait
in
xchg
jbe
rol
leave
shl
xor
(bad)
pop
jp
mov
scas
stos
or
lahf
ret
adc
es
ss
xor
jmp
cmp
cmp
push
cmp
clc
sbb
loope
je
fcom
fisttp
bound
or
adc
add
or
mov
cmc
sbb
push
mov
push
arpl
dec
jle
sbb
jmp
jnp
and
(bad)
sub
sub
in
stos
int3
fcom
les
jns
out
xchg
jge
or
mov
sbb
(bad)
cwde
mov
push
add
pop
mov
dec
out
das
push
mov
push
leave
cs
add
pop
mov
add
scas
(bad)
imul
int3
shr
pop
(bad)
fld
sti
retf
je
cmps
add
ret
add
xchg
jne
push
fadd
or
pop
mov
das
ror
sub
add
mov
add
pop
mov
cli
movs
cdq
std
shl
aaa
dec
std
sbb
nop
cmps
es
sbb
rcr
dec
add
cmp
xchg
jge
cwde
in
jmp
and
or
or
xor
mov
adc
or
inc
push
lahf
jnp
arpl
mov
sub
in
adc
sti
lods
push
into
jb
jmp
adc
xor
jge
shl
add
icebp
mov
cmp
mov
and
and
mov
push
pop
jb
mov
out
cmp
je
ja
cmps
mov
sbb
cmp
(bad)
mov
fdivrp
pop
imul
ss
or
mov
or
pusha
stos
jae
int
sub
mov
push
retf
inc
into
jno
jmp
fnstsw
movs
imul
dec
dec
add
adc
jnp
retf
ror
imul
scas
push
jae
arpl
int3
inc
(bad)
leave
cmp
and
outs
jns
jmp
pop
push
pop
xor
in
scas
jno
dec
repnz
loope
sti
in
and
ret
pop
sub
adc
push
rol
add
pop
outs
push
mov
popf
jo
rol
mov
sbb
adc
js
loopne
aaa
in
retf
dec
loopne
test
mov
sub
sub
sbb
sbb
sub
xor
aad
mov
int
jecxz
xlat
mov
push
dec
jno
clc
mov
dec
xor
pusha
mov
or
inc
push
imul
cld
mov
sbb
sub
sbb
xchg
xchg
cmp
or
std
inc
push
out
hlt
mov
or
(bad)
cmp
not
call
xchg
sbb
jae
icebp
mov
in
aaa
retf
mov
lock
mov
pop
arpl
imul
mov
data16
mov
or
jb
mov
sub
fsub
or
in
adc
jmp
xchg
mov
ja
dec
out
pop
ret
mov
cmp
mov
mov
push
nop
arpl
mov
jbe
sar
mov
ins
clc
pop
(bad)
jg
out
xchg
cmp
push
and
rol
fsubr
jo
mov
mov
xchg
in
mov
movs
cmc
rol
gs
movs
mov
fld
and
xor
in
pop
jae
mov
sbb
xchg
xor
mov
jp
mov
inc
pushf
or
rol
dec
out
cmc
in
dec
sbb
adc
cmp
into
inc
sti
xchg
mov
or
or
push
mov
repz
adc
shr
push
cs
shl
mov
es
mov
sub
sub
sahf
int
das
sbb
sbb
push
stc
cmps
xchg
xchg
dec
dec
clc
or
nop
fcmovbe
push
out
(bad)
xchg
inc
test
xlat
mov
xchg
jae
add
and
mov
mov
mov
xchg
int3
lahf
jl
jnp
and
or
jp
lds
loopne
push
ror
hlt
popa
outs
movs
xchg
pop
mov
cdq
out
movs
cmp
(bad)
ds
in
(bad)
adc
fidiv
mov
iret
mov
jb
and
rcr
outs
(bad)
neg
xchg
xlat
rcl
lahf
push
adc
cld
xchg
cld
sbb
cmp
mov
jnp
fdivp
test
shl
inc
push
dec
mov
test
ss
fisttp
inc
pop
ds
sub
fmul
mov
aaa
int3
mov
data16
jl
and
fs
into
mov
pop
and
(bad)
cmc
mov
(bad)
nop
stos
call
sub
mov
sub
xchg
call
cmp
xor
pop
ins
call
xchg
lods
dec
adc
add
mov
adc
adc
hlt
adc
mov
push
stos
inc
push
or
add
shl
jle
cmp
scas
adc
out
sti
xchg
jne
jmp
jg
imul
sbb
loope
mov
hlt
movs
xchg
(bad)
clc
cmp
punpcklbw
cmp
inc
loop
xchg
add
xor
mov
ins
out
mov
mov
cdq
sahf
jge
scas
clc
mov
cmc
add
inc
and
stos
mov
popf
xor
jno
les
movs
test
pop
and
cmp
sbb
add
jmp
clc
scas
je
adc
push
fdiv
and
add
std
push
push
shr
lea
mov
jbe
mov
sub
lods
repz
aaa
xor
stc
mov
push
mov
enter
mov
outs
(bad)
dec
mov
mov
scas
adc
and
lahf
jae
xchg
fsubrp
add
retf
inc
loope
adc
fstp
add
stos
das
fisub
mov
addr16
iret
aaa
je
mov
loopne
movs
js
add
mov
pusha
popf
(bad)
and
and
sbb
adc
xor
das
xchg
inc
out
mov
das
or
mov
out
push
fist
pop
in
or
dec
imul
push
inc
icebp
dec
cmp
jne
sub
mov
ins
scas
mov
jno
loopne
push
movs
stc
imul
fmul
mov
in
add
into
add
jns
test
jmp
mov
jnp
repnz
sbb
shr
stc
mov
int3
dec
pop
xor
jge
dec
add
xchg
xchg
dec
xchg
sbb
addr16
mov
arpl
adc
jl
cli
cli
lahf
bound
into
in
push
and
mov
dec
cmps
lds
cmp
(bad)
icebp
out
punpckhwd
push
sbb
pop
test
xchg
fcomp
leave
cli
inc
pop
push
mov
outs
in
call
mov
test
fst
movs
xor
mov
retf
out
cli
pop
jo
div
test
mov
es
sub
outs
nop
sbb
dec
les
xor
mov
xchg
aam
iret
inc
movmskps
inc
inc
or
rcr
jb
xchg
leave
ror
push
(bad)
mov
push
jae
std
test
sbb
in
mov
cld
inc
out
and
jb
ds
dec
push
lds
sbb
shl
stos
xchg
sbb
pusha
push
mov
mov
and
outs
cld
les
mov
mov
std
mov
mov
xlat
dec
mov
mov
out
(bad)
and
nop
into
xlat
mov
xor
lds
dec
pop
jge
pop
push
rcr
mov
xor
cli
cmp
dec
mov
or
sbb
mov
lahf
mov
sbb
xchg
aam
jp
(bad)
adc
rcr
bound
(bad)
fwait
cmps
sub
adc
aaa
push
dec
mov
dec
or
adc
out
sahf
push
aas
addr16
xor
sbb
mov
or
addr16
jb
push
in
retf
rol
das
ror
icebp
out
ins
push
push
jne
add
cmp
push
jno
fsub
aad
xchg
popf
fisub
xchg
push
into
mov
(bad)
or
push
fild
in
xchg
lods
mov
cmp
sbb
xchg
add
rol
repz
shl
push
push
imul
sar
or
mov
aaa
das
mov
cmps
inc
jp
push
xchg
inc
call
cmp
xchg
(bad)
addr16
push
or
inc
push
cwde
int3
ror
mov
xchg
push
cmps
add
adc
lods
imul
in
lea
(bad)
sbb
dec
cmp
xor
repz
and
mov
pop
or
cmps
mov
xor
iret
push
sbb
xchg
adc
dec
stc
push
gs
mov
or
cmp
stc
fndisi(8087
popa
ret
sub
lahf
popa
inc
mov
in
fbstp
movs
mov
retf
sbb
pop
add
bswap
xlat
pop
(bad)
adc
sbb
(bad)
pop
les
inc
div
arpl
dec
lds
adc
sbb
pusha
jl
dec
call
sbb
adc
sub
and
or
cdq
inc
lods
(bad)
hlt
into
das
daa
loopne
ret
xchg
sti
ja
ret
out
outs
shl
popf
push
dec
mov
ins
fwait
and
cdq
pop
jecxz
add
out
fisttp
pop
(bad)
bound
inc
(bad)
add
lds
int3
(bad)
cmp
fisttp
adc
jp
sub
popf
mov
sub
das
std
xor
jmp
adc
inc
xor
movs
leave
xchg
cmp
mov
iret
pop
xor
inc
pop
sbb
push
hlt
mov
dec
imul
sahf
imul
lock
ss
adc
mov
sub
in
add
cdq
loopne
stos
dec
mov
mov
or
repnz
in
jne
dec
dec
cmp
popa
(bad)
cmp
iret
int3
bound
test
call
mov
push
pop
iret
dec
xor
out
sbb
lds
fsubr
mov
jnp
daa
add
ds
cmp
sub
adc
dec
inc
jae
imul
mov
push
mov
lods
xchg
xor
jno
outs
cs
and
jmp
or
jmp
ins
mov
cmc
xchg
je
xor
call
xchg
loopne
mov
and
sub
lods
out
loop
push
sahf
jne
icebp
in
ins
loopne
test
jns
sar
inc
test
je
test
jmp
imul
dec
data16
int3
dec
mov
xchg
mov
push
mov
outs
sub
sbb
jnp
stos
xchg
and
fst
or
sub
dec
pop
dec
stc
sub
jbe
pop
(bad)
pushf
jae
and
ins
or
jle
les
jmp
mov
fcmovnu
aaa
sar
icebp
push
add
fistp
cmp
xchg
inc
scas
and
cmp
adc
dec
xor
out
add
xor
dec
imul
jno
mov
mov
je
cmp
retf
daa
call
jge
neg
cwde
dec
std
pop
test
ja
rcr
or
xchg
sbb
mov
push
cs
inc
test
mov
xor
call
ins
mov
cmp
sub
(bad)
cld
stos
inc
mov
rcpps
jmp
mov
jbe
mov
fstp
mov
mov
pop
jecxz
push
xor
mov
add
je
xchg
cmp
call
mov
into
sub
push
shl
repz
cwde
cmp
cmp
and
dec
cmps
mov
mov
cmp
sub
mov
xchg
jb
test
inc
push
in
push
icebp
fild
add
rcl
scas
fiadd
pop
fld
daa
lods
pop
mov
mov
mov
mov
add
push
addr16
aaa
leave
xor
xor
lods
aaa
mov
mov
and
ja
inc
mov
fiadd
ds
pop
sahf
and
jecxz
sti
mov
scas
and
jns
push
add
jmp
adc
jbe
addr16
fsub
mov
aaa
pushf
fisub
add
aas
mov
pop
mov
lods
mov
push
xchg
mov
arpl
xchg
and
push
or
xchg
pusha
dec
jnp
jle
outs
lahf
cmp
jp
stc
(bad)
stos
imul
cld
hlt
and
sub
aam
ins
(bad)
pop
and
leave
outs
pushf
and
dec
inc
jae
inc
std
call
or
fldln2
fdivr
js
out
mov
cmp
push
ins
retf
xchg
call
push
das
ins
add
fbstp
ret
imul
inc
add
push
push
fwait
jo
aas
hlt
cmp
mov
push
dec
iret
pop
inc
xchg
push
mov
(bad)
fadd
bsr
mov
into
js
jb
mov
push
ds
das
cmp
cmp
pop
and
inc
movs
mov
icebp
cwde
aaa
lods
test
ins
jne
int3
iret
lea
sub
jo
aam
mov
mov
stos
fdivr
retf
xlat
fs
mov
lds
add
and
daa
shl
sbb
inc
sti
pop
loopne
cmp
mov
push
xor
sbb
shl
add
jns
pop
shl
mov
int
mov
cli
call
sub
xchg
jae
cmp
mov
int
addr16
inc
stc
push
add
(bad)
out
adc
mov
out
test
pop
sahf
dec
add
mov
(bad)
cmp
fst
lods
sub
pop
sub
push
hlt
dec
test
retf
cdq
jp
adc
cmps
xchg
lock
push
mov
add
test
or
bnd
jecxz
lods
fs
out
mov
jle
jecxz
mov
test
enter
jae
aad
pushf
not
mov
push
dec
in
sbb
out
sub
das
les
test
retf
iret
cmp
sbb
push
inc
xor
adc
adc
imul
adc
frstor
inc
mov
xor
lods
jno
int3
dec
mov
xor
ins
popf
dec
call
jo
push
jge
adc
mov
dec
sub
sti
adc
out
scas
ss
mov
pop
rcl
test
ret
mov
push
cmp
push
iret
xchg
and
leave
retf
mov
imul
lock
fstp
xchg
cmps
sbb
xchg
jp
cmps
nop
pop
call
mov
enter
ja
cmp
mov
aas
pop
mov
sbb
inc
cmps
xchg
out
sub
cmps
xchg
jns
adc
mov
les
pop
pusha
push
cmp
out
out
pop
ins
enter
test
adc
cmc
mov
ret
repnz
push
dec
sub
scas
dec
mov
rol
movs
out
jns
and
inc
xchg
shl
dec
aaa
xchg
hlt
xor
xchg
stos
fdivr
cmp
fstp
aaa
jle
nop
nop
and
and
mov
push
loope
daa
or
mov
mov
xor
jl
pcmpgtb
out
ins
mov
xchg
sub
push
mov
test
or
pop
rol
push
push
(bad)
shr
push
leave
adc
lock
cmps
mov
(bad)
out
inc
xor
loop
jo
js
jmp
sbb
or
stos
not
push
cmp
mov
cmp
xchg
icebp
lods
adc
fstp
call
cmp
jge
mov
and
hlt
loopne
in
and
rcr
mov
pop
lods
shl
push
mov
rcl
es
arpl
push
cmp
add
das
test
mov
test
lds
in
mov
push
mov
and
popa
movs
jne
sar
pop
data16
jg
vzeroupper
push
iret
sub
jb
aam
xlat
pushf
pop
jmp
out
add
or
or
(bad)
loopne
mov
mov
out
pop
fwait
es
add
sbb
in
imul
sub
jb
lods
pushf
mov
mov
fnstcw
adc
dec
lea
mov
jb
pusha
out
jl
call
push
std
pop
mov
sbb
test
jo
inc
loope
hlt
push
push
cmps
xchg
jmp
xor
out
or
inc
loop
clc
pop
sbb
scas
sub
cmp
mov
loope
add
in
dec
in
xor
mov
mov
pop
and
mov
rcr
test
cmps
jmp
loop
mov
adc
lods
fbld
es
xchg
mov
mov
imul
into
push
mov
fwait
out
arpl
je
and
push
test
sbb
dec
mov
movs
xor
cli
jmp
mov
mov
retf
(bad)
iret
or
jno
cdq
jge
(bad)
lods
xchg
push
pushf
or
or
or
inc
sbb
clc
mov
dec
pop
dec
dec
and
mov
pop
lea
pop
int3
sbb
adc
popa
cmp
xchg
repnz
sbb
dec
sti
repz
mov
xor
fcomp
xlat
outs
dec
mov
sti
shl
ins
jno
mov
leave
stos
movs
ins
js
ss
call
add
sbb
adc
hlt
sub
push
rcl
cmp
stos
xchg
sub
fcmovne
das
lock
add
push
mov
inc
cmps
add
mov
inc
jecxz
adc
movs
push
pop
adc
cmp
jbe
aad
xor
fisub
inc
push
xor
cmp
ds
es
test
stos
int
lea
addr16
mov
cmp
jle
cmp
xchg
add
xor
cmc
xchg
repnz
std
shl
jno
adc
test
pushf
jmp
lock
pop
xor
jmp
jne
push
push
stc
push
lahf
jne
je
mov
(bad)
out
or
cmps
cs
pushf
das
loopne
mov
pop
xchg
ror
mov
inc
push
and
pop
or
cmps
js
mov
bound
pushf
cs
jmp
add
inc
ds
pop
aaa
xchg
rcl
mov
push
cmp
addr16
idiv
stc
mov
cmp
int
(bad)
adc
test
adc
pop
xchg
sub
ror
mov
test
sbb
cmp
add
xchg
imul
xchg
popf
js
dec
out
das
jl
and
mov
into
outs
das
mov
or
sub
push
and
rol
imul
shr
inc
in
gs
retf
aas
rcl
cmp
aaa
adc
nop
mov
imul
mov
xchg
mov
in
xor
outs
mov
das
jo
loop
mov
and
jno
inc
push
and
jg
add
add
in
daa
cmc
or
fwait
ja
push
movs
js
jno
mov
push
push
add
jo
dec
daa
add
sahf
ins
mov
adc
ins
dec
or
gs
aas
cmp
out
jns
jmp
xchg
into
call
xor
jb
inc
push
push
xchg
mov
inc
daa
pop
add
fmul
test
sub
dec
fidiv
mov
pop
add
sbb
or
jmp
mov
or
xchg
out
cmp
sub
cmp
cmp
push
pop
in
popa
jb
lods
pop
fwait
pop
xchg
cmp
leave
sbb
jo
stos
sub
aaa
retf
inc
scas
ins
sub
in
cmc
jae
sti
mov
sti
pusha
jb
sbb
nop
mov
push
test
aad
out
jmp
pushf
idiv
adc
ins
and
out
xor
push
dec
sbb
jns
add
push
push
test
stc
xlat
repnz
out
or
and
cmps
push
loope
or
imul
push
mov
ins
leave
pop
popf
scas
imul
pusha
dec
push
cmp
push
inc
xor
cmp
mov
lea
fistp
xlat
test
daa
fs
aas
mov
aam
nop
sbb
dec
ja
push
outs
shl
sbb
mov
dec
dec
imul
jp
(bad)
test
je
ja
sbb
lock
stos
cmp
std
dec
mov
sbb
hlt
pushf
sub
mov
mov
mov
pop
cmp
out
das
add
push
stos
les
xor
sbb
pslld
jo
mov
icebp
adc
cmp
cld
or
push
iret
lods
cdq
int3
push
aad
stos
mov
inc
xor
fnsave
xor
fwait
or
sti
mov
sar
aas
(bad)
pop
xlat
sub
(bad)
popa
pop
stos
inc
jmp
sahf
cmp
lds
push
fadd
adc
test
jl
jl
inc
sub
(bad)
xchg
test
adc
add
out
push
outs
add
les
stc
repz
inc
stc
gs
jg
(bad)
data16
pmulhuw
sbb
aas
and
xchg
gs
arpl
retf
cmp
cmc
pop
pop
int3
clc
enter
jmp
into
xchg
sub
repnz
xor
lock
out
enter
mov
dec
mov
in
xchg
cmp
lods
scas
sar
xchg
(bad)
xor
je
jecxz
push
xchg
movs
in
outs
adc
outs
or
fidivr
xor
dec
jne
pop
add
xor
push
shl
call
test
xor
cmp
cwde
inc
test
mov
pop
xchg
mov
dec
add
fild
(bad)
out
stos
arpl
shl
mov
ret
ja
adc
cmp
dec
ds
outs
and
add
inc
addr16
ss
out
mov
adc
sub
add
clc
rcl
lea
cwde
sub
sbb
loop
icebp
scas
les
(bad)
pop
xor
dec
call
jne
lahf
sbb
xchg
retf
and
dec
sub
(bad)
mov
and
pop
stc
push
rcl
dec
fnsave
cmp
mov
in
pop
adc
or
stc
sbb
loopne
cmps
ins
outs
ins
push
scas
aas
sub
movs
xor
pop
sub
xlat
fiadd
pushf
ss
(bad)
xchg
and
mov
xchg
mov
adc
imul
sub
arpl
jno
and
xor
sub
pushf
fadd
and
jo
fiadd
push
iret
cs
or
(bad)
mov
fmul
dec
xor
stos
sub
scas
retw
iret
adc
inc
mov
sar
jl
xchg
mov
iret
imul
cmc
jnp
retf
in
inc
mov
pop
pop
lds
(bad)
mov
lods
jp
stc
inc
jmp
or
je
push
add
int
mov
inc
not
or
fs
out
mov
jns
cld
mov
jo
jmp
jecxz
or
into
jae
cmc
dec
sahf
xlat
out
and
(bad)
jbe
add
stos
fwait
and
xchg
stc
push
stos
mul
cmc
leave
fcomip
add
jmp
push
or
ds
xchg
mov
ret
add
daa
out
xchg
pop
xor
mov
mov
xchg
rcl
mov
inc
stc
xchg
add
xchg
sub
dec
call
pusha
dec
cmps
xchg
es
inc
mov
ret
cmps
mov
jecxz
retf
adc
aaa
js
sbb
fstp
loope
shl
adc
pop
fnstenv
ja
pop
iret
or
gs
mov
sti
imul
cdq
cmp
hlt
inc
jmp
aaa
out
dec
mov
mov
sub
fdivr
enter
imul
cli
fnstcw
sbb
cmc
or
push
adc
pop
fild
push
push
pop
repnz
scas
inc
jg
xor
sbb
sar
fdivr
sbb
xor
jge
pusha
xlat
shl
xor
inc
fsubr
xor
mov
adc
mov
dec
mov
or
sub
daa
sti
mov
pop
aas
out
cmc
pusha
call
rcl
ja
rol
movs
sbb
pop
jns
xor
sbb
lds
adc
in
xor
jne
cmp
out
out
inc
stmxcsr
push
jbe
jne
inc
sub
cmp
mov
or
mov
jmp
cs
ror
or
push
cmp
push
popf
lea
mov
jle
adc
mov
adc
dec
adc
mov
cmp
push
sbb
fsubr
push
jg
push
mov
dec
inc
inc
push
ret
fcmovnu
and
add
repnz
in
(bad)
cmp
sub
add
(bad)
in
jge
adc
mov
jl
jge
sub
mov
sub
ficom
mov
ret
add
pop
es
xlat
aam
jp
push
cli
jmp
lods
push
xchg
push
out
je
push
mov
aas
sub
or
mov
mov
addr16
mov
cmp
test
mov
repz
movs
data16
fsubr
or
enter
dec
cli
adc
pushf
jmp
and
int
adc
push
xchg
lods
sti
pop
lahf
leave
or
stos
or
pop
cmp
loopne
in
fimul
(bad)
mov
aam
or
mov
or
pop
mov
stos
int3
push
aas
cwde
adc
ins
inc
cmp
call
adc
dec
std
sub
pusha
push
dec
or
cmc
push
push
mov
repz
cli
arpl
lds
fldenv
xchg
scas
test
enter
push
xchg
test
or
adc
and
cmp
push
pop
movs
mov
push
and
sbb
xchg
jge
loope
test
mov
les
mov
add
sub
mov
xor
div
and
sti
scas
daa
push
arpl
test
xchg
adc
mov
(bad)
mov
add
lea
inc
xchg
rol
jmp
icebp
pusha
not
call
(bad)
cmp
movs
loopne
xor
jae
jno
mov
pop
scas
movs
add
dec
movs
faddp
ds
xchg
dec
aaa
movs
repz
cs
popa
mov
repz
cli
lds
movs
or
push
pop
or
inc
(bad)
pop
dec
int
cmp
sbb
scas
mov
push
push
addr16
lea
pusha
gs
fnsave
pop
scas
(bad)
into
dec
inc
es
and
scas
icebp
jb
sub
addr16
stos
mov
dec
xchg
cli
mov
push
mov
xchg
pop
sar
dec
fisubr
mov
dec
int
cmp
inc
and
outs
fld
add
(bad)
mov
pusha
int
jno
imul
out
in
mov
jge
sbb
out
inc
mov
repnz
pop
and
in
xor
imul
in
dec
cli
enter
js
dec
xchg
and
sub
adc
fs
sbb
and
inc
(bad)
pop
stos
ins
inc
mov
and
cmp
dec
jne
jno
mov
dec
mov
call
ds
and
inc
push
push
jne
arpl
lds
jcxz
adc
scas
out
jmp
inc
lods
arpl
cli
movs
inc
movs
xor
nop
or
mov
and
push
lods
fcom
in
sbb
xor
or
xor
mov
mov
icebp
dec
pusha
mov
mov
pop
mov
test
cmp
into
cs
inc
lods
out
xchg
sub
ret
and
dec
xchg
daa
inc
mov
sub
xor
xchg
lahf
dec
shl
out
cli
int3
into
or
xchg
cmps
ins
or
cdq
mov
xchg
out
or
pop
repz
in
scas
push
mov
xchg
push
push
daa
dec
sahf
push
retf
aaa
lods
ins
movs
dec
imul
retf
pop
loopne
int
(bad)
scas
stos
jl
xchg
call
ret
gs
fbstp
xchg
push
xchg
add
cwde
sub
sbb
inc
sub
lods
test
adc
popf
adc
inc
jns
push
mov
fsub
leave
fsubr
div
mov
call
xor
lahf
arpl
pop
adc
sbb
mov
add
xchg
movs
(bad)
mov
scas
dec
daa
dec
jae
shr
mov
dec
aad
ffree
or
dec
push
inc
xchg
or
sub
in
pop
mov
enter
jb
jmp
sub
(bad)
pop
imul
inc
dec
out
inc
cli
lods
(bad)
adc
cmps
mov
pop
cmps
aas
(bad)
mov
clc
or
out
mov
xor
rcl
cmp
(bad)
or
(bad)
loope
out
adc
xchg
out
dec
xor
fsub
push
aas
pop
mov
and
or
jecxz
mov
(bad)
(bad)
pop
jno
cdq
push
arpl
and
push
xchg
push
dec
push
repnz
adc
int3
rcr
stos
cmp
mov
imul
mov
push
push
and
mov
xor
outs
push
ret
mov
loope
mov
jle
mov
std
lods
gs
ja
or
inc
jle
or
inc
mov
fild
dec
ror
mov
and
inc
pop
xlat
mov
xor
aad
(bad)
shl
std
push
movs
push
ss
adc
push
(bad)
push
inc
scas
sub
xchg
gs
mov
add
aad
inc
mov
lods
mov
icebp
scas
xchg
(bad)
fwait
mov
clc
mov
add
jecxz
push
or
ins
jbe
test
inc
cmp
mov
xchg
mov
mov
sbb
adc
push
aad
lods
dec
aas
ror
mov
fisub
aas
test
add
pop
adc
xor
lea
pop
xchg
cmp
jmp
inc
mov
loop
out
loope
cli
test
mov
jg
(bad)
retf
sub
in
fisttp
clc
push
jne
adc
out
loopne
pop
mov
mov
or
dec
aad
mov
fst
aaa
int3
in
shl
jg
stos
stos
mov
pop
jnp
shl
and
(bad)
jne
sbb
retf
stos
and
add
test
jp
lock
cmc
cmp
or
shl
push
inc
cmp
shl
jge
addr16
add
repnz
in
shr
jp
shl
pop
add
fcmovb
enter
out
dec
push
xchg
xchg
movs
cmps
push
jb
mov
jl
mov
je
repnz
jmp
ror
test
pop
xchg
dec
sbb
(bad)
sti
mov
call
push
int3
mov
xlat
pop
ss
sahf
bound
xchg
or
cmp
out
xchg
pop
lock
fisub
jg
imul
xchg
push
hlt
push
(bad)
fiadd
push
adc
mov
jbe
xchg
idiv
repnz
push
mov
add
pop
sbb
inc
and
je
in
pop
retf
in
or
adc
inc
add
fmul
inc
imul
int
nop
std
pop
lods
jns
adc
scas
jmp
sbb
enter
ins
repz
je
mov
dec
sub
mov
adc
div
jbe
and
push
test
jg
jne
retf
je
lahf
xor
movs
addr16
loopne
push
int3
mov
popf
outs
add
push
jns
ins
push
adc
shl
test
push
push
outs
pop
mov
mov
push
xchg
ret
mov
and
pop
fld1
push
push
scas
push
mov
dec
movs
and
aas
lds
fild
nop
outs
es
jge
and
mov
hlt
neg
ja
dec
xor
das
daa
shr
cmps
and
jne
test
pop
inc
out
out
add
(bad)
js
(bad)
sbb
test
icebp
shl
pop
sub
push
ret
bound
and
ret
xchg
aad
or
pushf
icebp
rol
mov
xchg
cs
inc
aas
movs
lea
fucomp
sbb
aas
mov
jl
and
adc
cmps
pop
fwait
sti
das
add
(bad)
daa
sub
mov
jne
fimul
imul
xchg
call
retf
xchg
dec
fsubr
clc
loop
sub
das
jb
mov
stos
int3
(bad)
clc
cmp
mov
xchg
repz
jge
mov
push
dec
pop
fdiv
stos
repz
or
mov
inc
je
imul
shl
mov
nop
cmp
pop
pop
push
cmp
adc
int
inc
fldcw
ss
pop
es
inc
or
mov
loope
inc
sbb
xchg
pop
fbstp
mov
out
sbb
mov
xchg
or
push
not
push
pop
mov
inc
clc
popa
push
sbb
mov
pusha
fs
inc
jmp
jnp
cs
es
push
imul
loopne
jbe
dec
sbb
push
adc
inc
mov
test
push
mov
cmp
fiadd
cwde
mov
pop
int
dec
pop
daa
pop
cwde
xor
dec
push
mov
int
xchg
jbe
cwde
add
xchg
cs
adc
pop
mov
and
ja
or
mov
inc
or
pop
inc
sbb
(bad)
dec
iret
lods
sub
cmc
pop
jp
push
jb
jl
and
pushf
pop
gs
rcl
enter
je
sar
mov
xor
test
add
mov
or
push
cmps
add
mov
int3
push
dec
ret
cmc
ins
popf
push
mov
sbb
stos
dec
ror
aaa
xor
lods
inc
jne
scas
push
mov
shl
pusha
mov
pop
shr
xor
mov
add
cmp
shl
inc
jb
out
mul
lock
es
in
jge
lock
fldenv
inc
adc
pop
fucomi
loopne
ds
jecxz
jmp
sbb
pop
loop
sub
push
scas
jno
mov
xchg
xchg
xor
ds
cmp
mov
or
inc
in
jbe
pop
fiadd
mov
jg
sbb
cdq
pop
retf
stos
add
push
inc
outs
mov
cld
lock
cli
std
or
in
out
cmc
add
jle
or
xor
lds
mov
mov
movs
mov
xor
push
stos
mov
(bad)
cs
pusha
xchg
push
sar
cs
(bad)
add
imul
mov
je
loopne
retf
rol
sbb
mov
shl
inc
or
rol
ss
ret
neg
push
adc
leave
test
repnz
lods
mov
cwde
mov
push
rcl
movs
mov
clc
jns
daa
sar
pop
and
pop
push
jecxz
aam
dec
cmp
cmps
or
dec
push
push
sbb
stc
rep
test
mov
sti
xor
and
mov
xchg
inc
push
fisttp
jmp
cld
cmc
in
pushf
inc
popf
jb
(bad)
xor
(bad)
fs
shr
sub
cmp
ss
jno
call
mov
jmp
fnstsw
test
mov
sbb
mov
cwde
and
enter
ins
nop
enter
popf
inc
or
(bad)
sahf
lock
dec
dec
inc
jl
sar
outs
das
pop
clc
cli
pop
dec
inc
call
dec
push
int3
pushf
add
xchg
add
jbe
hlt
mov
cmp
std
dec
cmps
xchg
mov
sbb
pop
imul
mov
pop
cld
fadd
or
adc
aas
jg
enter
adc
lds
adc
cld
data16
xchg
stc
push
or
and
or
sbb
ja
and
dec
les
adc
(bad)
arpl
jle
push
inc
pop
sbb
xor
sub
push
lds
popf
xchg
pop
ret
cmp
aad
cdq
je
mov
(bad)
pop
rol
sar
fcom
or
bound
cmc
bnd
cmp
out
shr
jle
mov
arpl
stc
pop
loopne
(bad)
inc
push
jmp
outs
(bad)
xchg
dec
cmp
mov
ror
push
fdiv
mov
stc
push
push
mov
pop
lods
(bad)
pop
fwait
cmp
pop
push
mov
iret
cs
fwait
push
std
shr
jmp
inc
(bad)
push
lock
dec
(bad)
data16
in
sti
xchg
outs
(bad)
(bad)
adc
jbe
aad
movs
movs
inc
clc
or
sub
and
inc
std
(bad)
loopne
shr
out
call
sbb
mov
and
mov
dec
xchg
push
hlt
sahf
in
test
mov
and
pop
outs
jmp
pop
retf
pop
arpl
jnp
scas
sar
adc
loopne
and
pop
push
sar
rol
xchg
inc
cmp
arpl
inc
cmps
inc
jle
lea
xor
sar
mov
dec
rcr
jmp
jecxz
stc
cmp
cwde
jae
jg
mov
arpl
xor
int3
mov
aas
hlt
lods
scas
sub
push
in
mov
jne
cmp
push
jp
or
dec
rep
das
sub
push
bound
pop
or
dec
ret
xchg
and
pushf
fmul
mov
jo
popf
shl
dec
xor
xor
mov
push
data16
adc
jmp
movs
aad
sar
into
repz
and
cmp
mov
adc
addr16
lahf
xchg
and
(bad)
adc
push
div
and
mov
cmp
sub
mov
gs
adc
cmc
data16
repz
das
aad
dec
push
icebp
inc
mov
or
pop
cmp
xchg
cmps
and
and
xlat
shl
and
or
retf
sbb
mov
add
mov
cmp
mov
icebp
mov
jmp
dec
mov
xchg
repz
push
adc
loopne
pop
cmp
add
test
lahf
js
xchg
cdq
cld
xor
push
lahf
ja
aad
sub
xchg
and
cs
and
sbb
pop
xor
inc
ss
int
dec
add
sub
sbb
jbe
gs
or
sub
bnd
add
data16
pop
jg
int
out
js
test
clc
xchg
ret
jno
xor
jg
cli
pop
xchg
nop
loop
(bad)
addr16
loope
fsubr
arpl
test
cli
popa
ins
mov
cmp
mov
mov
jb
xor
push
xor
sbb
retf
imul
sbb
rcl
pop
dec
fcomp
mov
addr16
or
cmp
xchg
test
lods
push
xchg
and
xchg
mov
scas
adc
add
neg
pop
fcomip
inc
xchg
sbb
mov
ins
cmp
add
mov
cmp
cmp
push
xor
and
add
mov
dec
xor
add
push
cwde
push
and
cwde
aad
(bad)
xor
mov
data16
pop
xchg
js
out
test
jmp
jo
cs
pop
lock
lahf
push
outs
loopne
nop
push
fwait
jp
call
js
xor
outs
daa
mov
mov
dec
add
pushf
push
sbb
enter
loope
mov
hlt
retf
sub
call
adc
fcmovnu
rcl
je
or
das
inc
icebp
mov
repz
(bad)
imul
ja
lea
push
inc
retf
test
fnstcw
add
es
mov
dec
add
in
nop
mov
mov
outs
jecxz
push
mov
(bad)
aad
rcl
sbb
cbw
cwde
out
rep
mov
jae
leave
dec
int
sub
xchg
outs
jbe
test
cwde
lods
call
mov
cli
or
dec
mov
call
mov
sub
repz
inc
cmps
iret
pop
retf
or
mov
test
cmpxchg
cmc
xchg
mov
movs
or
mov
or
push
test
icebp
jmp
xchg
pop
cmps
cmp
sub
push
push
push
fcomp
pop
das
push
add
push
xchg
sbb
adc
push
cmc
inc
sub
dec
jb
pop
xlat
xchg
jle
and
pop
js
sar
out
push
adc
cmp
movs
dec
inc
xchg
xor
mov
xor
jl
push
or
lock
jecxz
push
jmp
scas
xchg
out
aaa
sbb
lea
retf
sub
jbe
pop
inc
pop
js
mov
push
shl
jbe
repnz
in
mov
pop
cmp
sti
adc
jae
sub
leave
cli
(bad)
fdivr
xor
cmp
dec
mov
pusha
fsubr
(bad)
and
shl
pop
mov
lock
push
mov
xor
mov
jne
loope
hlt
sahf
imul
fstp
sbb
jbe
shl
push
ret
xor
xchg
(bad)
ins
pop
repz
sbb
add
es
retf
ja
mov
out
push
sub
pop
mov
fucom
cmp
pop
push
fcomp
add
xor
xor
dec
and
pop
cmps
ret
inc
push
not
and
sar
movs
mov
pusha
fstp
loopne
push
sub
push
inc
sub
scas
jo
test
mov
not
add
push
mov
dec
test
cs
in
or
mov
jnp
stos
jg
outs
sub
push
cmp
scas
arpl
scas
sahf
xchg
ins
fwait
idiv
sub
rol
das
fiadd
sysenter
cmp
jle
or
rcl
and
bound
mov
xor
sar
ds
out
ss
jns
add
dec
retf
fiadd
xchg
(bad)
pop
add
fcomp
mov
das
aas
(bad)
jp
mov
pop
push
mov
in
outs
and
sub
es
fld
push
jg
out
scas
push
sbb
lods
pusha
jmp
arpl
xor
aaa
sub
outs
imul
or
or
cdq
test
pop
call
cmp
stc
pop
rcr
inc
ds
popa
int3
in
scas
fnsave
inc
mov
cmp
cmp
pop
ss
arpl
fstp
out
jecxz
inc
inc
aas
je
sub
add
or
adc
jnp
lds
sbb
cmp
push
popf
retf
add
adc
inc
adc
pop
fild
loop
frstor
mov
js
xlat
pusha
pop
xor
test
xchg
pop
cmps
fdivrp
ss
inc
cmp
(bad)
loope
pop
and
mov
mov
jge
div
sbb
jne
mov
xor
xchg
jmp
sar
shl
dec
mov
dec
push
sti
ins
add
fstp
xchg
cmps
pop
vxorpd
add
sub
adc
sar
dec
adc
mov
sbb
push
jle
enter
mov
mov
or
les
ss
lea
cmp
int3
push
xor
imul
cmc
sub
dec
xlat
call
inc
sti
rol
fs
popa
fdiv
cmp
cdq
xchg
addr16
lock
retf
or
mov
sub
ror
cdq
fdiv
not
mov
popf
jb
mov
xchg
pop
aad
jnp
or
and
push
aaa
in
mov
shl
or
cwde
and
ror
pop
cmp
fistp
jmp
pop
cmp
in
(bad)
cmp
ds
jbe
stos
push
inc
inc
pushf
pop
sub
test
jl
movs
(bad)
inc
mov
or
add
ror
sbb
inc
test
mov
jnp
(bad)
mov
add
js
pop
ficomp
jecxz
in
sbb
add
mov
fsub
cmps
xor
push
leave
ret
es
mov
add
stos
inc
inc
jbe
icebp
jle
in
xchg
ds
idiv
push
jge
mov
mov
pop
and
in
lods
mov
imul
inc
pop
cmp
ror
pop
add
scas
icebp
ins
fwait
pop
cmp
and
int3
pop
cmp
inc
mov
cld
iret
out
data16
bound
xor
xlat
fcom
pop
(bad)
mov
lock
push
jns
inc
loop
pop
mov
retf
inc
aas
adc
push
pop
outs
fs
mov
adc
enter
loop
outs
sbb
cli
aas
fdivr
push
idiv
pop
sub
sbb
inc
add
in
inc
rcl
pusha
jmp
sbb
leave
push
daa
test
movs
jg
mov
push
pop
outs
inc
sti
aad
movnti
fnstcw
inc
push
pop
dec
pop
mov
pop
push
xor
cld
lock
adc
push
ja
test
sbb
jmp
or
jnp
cmp
popf
push
ret
cmc
out
mov
test
es
das
pop
stc
or
mov
cs
or
outs
and
mov
mov
lods
xor
adc
xchg
add
jmp
xor
pop
sub
pop
ins
arpl
push
xchg
inc
lods
sub
in
cmp
sub
ret
pushf
add
mov
dec
nop
adc
arpl
icebp
mov
pop
out
inc
sub
adc
or
test
or
dec
jmp
das
retf
xchg
adc
sbb
xor
movs
int3
xor
or
addr16
mov
sub
in
les
sar
jns
mov
jmp
and
push
es
es
mov
(bad)
clc
sbb
and
jmp
dec
aas
push
aad
fdivrp
in
inc
sbb
icebp
aaa
sub
sar
xlat
mov
sti
inc
std
retf
out
sbb
(bad)
in
mov
mov
mov
icebp
out
mov
or
int
or
hlt
nop
add
mov
mov
sti
mov
fwait
inc
mov
arpl
jno
outs
xchg
mov
lea
aam
push
cmps
cmp
aad
ja
mov
mov
mov
popa
xor
test
mov
rcr
pusha
push
or
and
sbb
inc
test
sub
add
ror
fnstsw
add
jno
popf
in
and
xor
shl
ja
mov
pusha
stc
xor
dec
cmc
and
cmps
arpl
lds
stc
pushf
xchg
mov
clc
sar
bound
fild
sub
in
daa
gs
xor
and
sbb
iret
cmp
jg
stos
xchg
(bad)
xor
test
jb
nop
icebp
push
mov
out
dec
push
das
sahf
aas
(bad)
lock
inc
mov
das
inc
pushf
jp
sbb
dec
xchg
and
test
mov
pusha
add
dec
loopne
push
push
pop
mov
test
mov
mov
cs
test
mov
xchg
xor
push
lds
cmps
push
addr16
xor
pop
pop
inc
push
jnp
data16
sub
daa
loope
cmp
mov
jecxz
mov
adc
adc
push
jg
or
div
iret
inc
pop
test
add
mov
cmp
les
xchg
sbb
mov
sub
call
jge
adc
push
lock
xor
lods
jns
pop
or
mov
and
mov
jle
es
add
test
jg
mov
lss
rcl
pop
not
sub
or
rcl
repz
pop
enter
mov
shl
sti
mov
fimul
cmp
mov
mov
xchg
mov
inc
retf
push
mov
push
mov
mov
and
xor
pop
out
push
faddp
test
loop
xor
xchg
mov
add
call
dec
adc
iret
jns
mov
fnstenv
cli
int
popa
push
push
sub
xchg
or
gs
ret
jmp
dec
add
aam
dec
retf
lds
mov
add
and
and
xor
mov
mov
xor
icebp
out
stc
ror
xor
mov
xchg
(bad)
cmps
mov
xor
shr
(bad)
xchg
imul
fcomp
mov
cmp
mov
cs
cmps
les
jmp
jmp
add
ficom
sahf
cmp
sbb
xchg
inc
shl
add
push
rol
and
fst
push
not
call
cmp
xchg
inc
mov
add
out
mov
sbb
dec
std
cld
out
fwait
and
mov
mov
cs
retf
mov
out
lds
es
push
mov
fnsave
sbb
cmps
add
outs
add
xchg
add
shl
cmp
fld
inc
into
adc
pop
movs
ret
mov
cmc
lods
or
cmp
inc
nop
popa
das
ins
dec
jecxz
iret
cmp
cld
cdq
test
cmps
inc
xor
in
jnp
mov
push
cmp
imul
add
mov
sti
push
push
sub
pop
cdq
push
ret
leave
pop
cs
fwait
adc
hlt
mov
arpl
mov
imul
xor
and
arpl
jl
in
xchg
sub
xchg
js
out
jle
pop
adc
jge
push
arpl
mov
xchg
lock
shl
outs
ins
lock
mov
xchg
pop
mov
sub
pop
cs
cmp
(bad)
xlat
add
adc
arpl
adc
add
mov
xchg
and
(bad)
xor
pop
loop
das
les
out
push
int
mov
sbb
enter
pop
ficom
hlt
cmp
inc
jmp
or
pop
push
into
mov
mov
aaa
mov
adc
xchg
out
dec
fist
xor
sahf
add
mov
pop
mov
repnz
cmp
ds
and
je
inc
adc
repnz
stc
jo
add
push
pusha
or
and
xchg
ret
dec
xchg
mov
rcl
fucomp
cmp
fwait
into
or
sbb
div
fucomp
xchg
cld
fild
pop
mov
cmp
jo
loopne
movs
inc
fdiv
loope
mov
jmp
pushf
add
stos
sub
test
dec
neg
fimul
repnz
jno
popa
aam
sbb
pop
pop
xchg
jnp
or
in
outs
push
push
fdivrp
xchg
and
repz
sbb
push
call
out
test
cmp
std
ror
cdq
into
popa
cmp
jl
in
aad
adc
sbb
adc
bound
jmp
lea
dec
movs
rol
mov
test
sub
arpl
xor
add
push
hlt
jo
(bad)
dec
rol
mov
sbb
ds
test
mov
(bad)
and
into
jmp
ins
mov
jno
mov
xlat
fld
in
scas
dec
cmp
dec
add
stc
xchg
push
xor
add
test
xchg
test
cli
xchg
fldcw
loopne
and
stc
fadd
ret
outs
cmps
xchg
push
out
xlat
xor
pop
icebp
push
inc
pop
adc
sti
(bad)
enter
mov
fdivr
jecxz
lock
jns
adc
lea
mov
and
mov
push
clc
sbb
sub
int
sbb
xor
cmps
xlat
push
or
inc
add
add
sub
cwde
add
dec
jo
call
jmp
pusha
mov
sub
inc
mov
dec
retf
mov
arpl
dec
xor
push
js
shr
dec
mov
sub
or
data16
movs
stc
out
sbb
jg
test
pop
es
mov
not
xor
add
fcmove
(bad)
clc
shr
and
cmp
ds
sub
xlat
lock
xor
mov
dec
xchg
(bad)
out
in
jmp
in
jbe
sbb
and
jecxz
icebp
imul
cmp
and
sub
adc
jecxz
add
add
mov
call
out
cmp
xchg
pop
xchg
or
movs
xchg
jmp
xor
repnz
pushf
mov
mov
push
je
fnstcw
pop
jo
hlt
lods
jp
popa
out
jg
xor
push
cmp
add
dec
(bad)
push
test
sub
or
ins
cmp
add
leave
ins
mov
cmp
inc
stos
or
hlt
sub
pop
push
clc
cmps
loope
mov
ss
or
and
loopne
inc
in
dec
pop
int3
and
lods
jmp
and
enter
test
mov
xchg
das
inc
rcr
xor
and
mov
push
mov
sbb
test
and
in
sbb
ds
mov
ror
in
sahf
fwait
and
sub
jmp
and
push
inc
out
aas
jmp
xchg
sub
rcl
mov
dec
inc
leave
dec
test
js
push
inc
or
mov
outs
xchg
imul
mul
jns
mov
or
jge
loop
aad
imul
retf
jae
xor
je
into
adc
xchg
fstp
int
cmps
pop
gs
in
(bad)
sbb
fist
mov
cld
jecxz
push
mov
mov
popf
movntq
cwde
mov
sbb
ret
packuswb
call
ficomp
mov
sbb
pop
or
cmp
pop
cdq
cmp
iret
mov
pop
jecxz
rol
cli
mov
std
cdq
sub
push
lock
call
call
sbb
mov
ror
push
jecxz
div
adc
in
loop
lea
cmps
push
push
mov
jp
mov
rcl
jbe
(bad)
sub
dec
adc
dec
mov
xchg
sub
xor
imul
outs
push
shl
jl
rcl
sbb
jp
pop
dec
sub
fwait
cmps
fstp
mov
xchg
js
imul
pop
inc
int3
movs
add
into
jns
sti
div
push
imul
cwde
mov
inc
sub
mov
cmps
mov
pusha
aaa
add
dec
sbb
cld
xchg
or
ins
in
into
push
fisttp
jnp
ret
repz
add
sub
dec
cmp
pop
dec
retf
adc
in
xchg
push
mov
aas
xchg
and
xchg
or
adc
mov
xchg
repz
fwait
unpcklps
sbb
je
mov
call
and
jge
inc
xor
fcomp
push
jbe
jge
pop
fdivp
ret
stos
in
loope
outs
gs
cmp
iret
mov
in
repnz
imul
fstp
hlt
in
popf
mov
sbb
lods
sub
data16
test
jnp
push
or
dec
loope
jae
sahf
xchg
dec
jmp
pop
cmp
push
call
sbb
pop
int3
popa
sti
mov
adc
inc
(bad)
ins
fnstenv
pop
xor
push
mov
or
push
movs
add
inc
in
dec
cmp
adc
inc
pop
pop
aam
mov
test
das
xor
pop
or
repnz
sbb
cmps
ss
xchg
add
mov
jl
cmp
sub
shr
mov
stos
push
xor
and
cdq
test
pop
adc
fsubrp
lods
mov
inc
pop
mov
mov
rol
dec
fisub
and
adc
pop
inc
cmps
ds
cmp
aas
cdq
das
xor
leave
or
repnz
(bad)
je
mov
das
sbb
mov
outs
out
mov
aas
xchg
sub
cli
mov
pop
push
mov
mov
dec
pop
mov
and
push
sub
fstp
ins
push
aaa
cmps
pushf
jmp
push
or
jns
aaa
push
sub
daa
icebp
cmp
test
dec
(bad)
jmp
xor
jp
jge
jne
adc
out
dec
mov
and
cmp
fadd
scas
jle
xchg
out
dec
add
jge
sub
inc
cmp
call
mov
sub
fisubr
out
sub
mov
aas
pusha
adc
push
repnz
int3
xor
test
or
xchg
sti
popa
jbe
(bad)
pop
shl
fwait
xor
scas
in
icebp
clc
mov
bound
push
lock
out
fsub
and
mov
test
rcr
xchg
cmp
movs
and
xchg
lock
rcl
movs
xor
mov
push
std
nop
cmp
pusha
push
jl
imul
out
out
(bad)
sub
test
fwait
push
aad
sbb
or
nop
or
sub
sub
and
mov
or
inc
xchg
cwde
cli
shl
std
lea
test
pop
add
dec
cdq
(bad)
sbb
push
ret
mov
xor
fsub
fisub
pop
test
add
xor
cmp
fidivr
stos
pop
jmp
pop
push
jg
cmps
stos
push
js
jg
js
push
push
imul
xchg
xchg
les
(bad)
push
mov
(bad)
sahf
push
inc
adc
cmp
xor
dec
lahf
loope
popa
scas
sub
mov
lods
cli
add
daa
pusha
std
sti
cwde
movs
ret
lock
mul
add
cmps
call
mov
call
xchg
iret
adc
cmps
lods
xchg
shl
(bad)
jl
sbb
clc
xor
cmps
inc
sahf
rol
test
push
cwde
daa
stc
mov
mov
inc
popf
imul
inc
jmp
mov
push
push
lods
jbe
hlt
pop
call
cmp
cdq
or
jge
pusha
push
in
and
jbe
pop
add
mov
(bad)
iret
xor
xlat
xchg
add
imul
je
mov
in
mov
xchg
ret
inc
es
jb
out
or
repnz
(bad)
aad
loop
nop
bound
inc
je
or
sbb
and
mov
mov
sahf
or
adc
ficomp
scas
cmp
push
push
mov
dec
jae
pop
xor
mov
mov
inc
retf
jnp
repz
adc
or
ret
popf
jne
xchg
dec
in
mov
pop
popa
mov
jne
cmp
lea
push
in
add
adc
jge
in
sbb
(bad)
fnstcw
retf
xor
xchg
ret
push
and
jmp
mov
adc
jns
push
int3
pop
inc
inc
pop
shl
xchg
dec
movs
(bad)
jns
outs
hlt
mov
xchg
push
jnp
jb
push
loop
and
cmp
pop
imul
pop
mov
push
daa
pop
or
mov
adc
ja
mov
in
cmps
js
cmps
daa
inc
pop
inc
inc
icebp
ss
sbb
fcmovbe
fld
push
cli
das
sub
ret
(bad)
adc
dec
push
push
adc
inc
add
outs
or
(bad)
push
retf
jo
mov
cmps
cmp
cmp
jo
push
int3
add
ja
aad
lock
dec
(bad)
out
xor
cwde
cmp
cdq
pop
mov
xor
sub
mov
mov
icebp
sbb
or
mov
mov
inc
mov
pop
xor
mov
test
push
mov
mov
out
pusha
and
push
pop
xchg
arpl
fs
dec
popa
imul
fs
jl
daa
mov
or
dec
imul
jbe
call
lods
loop
daa
mov
mov
dec
(bad)
jl
sbb
(bad)
cmp
sub
push
push
ret
cwde
add
xchg
stc
mov
outs
adc
sub
xchg
push
fld
pop
addr16
inc
mov
ins
inc
inc
xor
add
ins
dec
out
sbb
in
cmps
mov
repz
mov
mov
in
mov
xlat
xchg
int
loopne
xchg
xchg
arpl
mov
call
shr
push
pop
icebp
int3
fwait
or
fisubr
mov
out
mov
(bad)
je
and
pop
ins
jecxz
test
lahf
(bad)
scas
hlt
xchg
out
out
int3
sub
shr
xor
cdq
and
dec
push
ins
cwde
mov
mov
mul
scas
add
mov
(bad)
xchg
push
pusha
lods
iret
pop
cmp
cmp
sub
aam
sbb
mov
leave
repz
xchg
(bad)
fbld
mov
call
test
js
cmps
icebp
(bad)
sub
jae
ret
popa
fisttp
nop
imul
add
or
enter
add
cmc
cmp
dec
dec
cs
sbb
jnp
pop
out
xor
or
jp
or
adc
inc
sub
push
loope
fcom
sbb
bound
cld
mov
out
xor
out
lock
stos
test
aaa
jnp
iret
imul
(bad)
jmp
and
jecxz
sbb
xchg
jae
shl
push
mov
pop
es
push
(bad)
mov
sahf
push
scas
mov
mov
icebp
push
ficom
jle
and
xor
shl
adc
inc
out
sbb
mov
call
jb
cmc
add
in
jmp
adc
fist
add
add
daa
pop
cmp
jmp
jnp
fs
gs
pop
pop
jl
(bad)
idiv
sub
js
aam
std
mov
mov
arpl
in
mov
push
sbb
mov
xchg
(bad)
cmp
adc
jle
xchg
jb
js
add
outs
fs
xor
jno
sub
(bad)
jo
cmp
aas
fsubr
or
and
lock
xchg
out
push
clc
xchg
das
inc
mov
sbb
inc
lea
pop
scas
neg
push
adc
and
bound
dec
jae
cmp
movs
je
jle
bnd
or
stos
sbb
cdq
mov
rcl
repz
fild
repz
fdiv
into
mov
cmps
pop
xchg
movs
mov
pop
add
cli
out
lods
nop
xor
cmp
xor
addr16
dec
ja
(bad)
aas
arpl
inc
jmp
or
imul
fst
sbb
adc
rcl
fdiv
inc
in
add
out
(bad)
xor
loopne
jns
and
inc
mov
ins
pop
test
adc
mov
clc
push
or
cmps
mov
or
into
fdivr
and
lahf
inc
and
out
std
add
fdivr
add
mov
pop
cmp
dec
ds
or
std
sbb
cmp
mov
stos
cmp
hlt
xlat
test
loop
xor
out
and
push
test
jns
hlt
retf
push
imul
jo
mov
aas
cmps
outs
pop
push
dec
repnz
add
into
push
call
(bad)
xchg
cmp
fiadd
dec
or
shr
test
and
fld
adc
mov
mov
jb
mov
sti
push
addr16
popa
scas
call
mov
neg
pop
push
pop
mov
dec
inc
adc
clc
lock
xchg
xchg
scas
pop
jns
mov
cld
movs
push
xor
jno
and
add
imul
(bad)
cld
idiv
jmp
cwde
pop
hlt
icebp
fdivr
mov
out
shl
stos
cli
push
ins
adc
jmp
out
push
cli
leave
inc
in
aam
push
(bad)
in
dec
aas
sar
iret
popa
pop
pop
fld
scas
mov
ds
dec
and
push
cli
push
pop
push
mov
jmp
jnp
xor
or
ins
test
fwait
stos
sbb
mov
pushw
(bad)
jae
sbb
cmp
cwde
jge
dec
inc
popf
add
lock
fld
inc
mov
adc
xor
sbb
push
in
mov
addr16
push
test
clc
sub
in
mov
sahf
push
xor
mov
lahf
out
ins
es
fadd
in
sbb
push
xchg
push
cmps
xor
pop
out
and
push
mov
mov
mov
jmp
sbb
push
push
and
out
jne
adc
jbe
pop
xlat
dec
cs
mov
sbb
icebp
dec
sub
(bad)
jl
mov
es
(bad)
outs
push
inc
imul
pop
push
sub
pop
jg
sub
mov
loop
push
icebp
icebp
cld
xchg
cld
mov
retf
loope
xor
js
pop
outs
sar
or
jmp
push
out
pop
push
mov
pop
sub
pop
dec
inc
mov
data16
sub
or
push
xchg
lds
pop
or
cmp
loop
std
fdivr
cli
retf
repnz
lods
cmp
add
(bad)
out
std
cmc
push
xchg
imul
mov
jmp
js
mov
cli
stc
in
jmp
or
int3
fisubr
add
push
push
mov
push
xchg
inc
push
gs
ret
or
dec
sub
mov
fild
test
mov
jb
mov
lods
dec
or
scas
or
cmps
or
dec
sub
xlat
or
test
sbb
cmp
clc
or
hlt
and
pop
mov
xor
push
xchg
mov
test
out
cmp
sbb
pop
les
or
nop
sub
and
jns
nop
cwde
scas
add
add
test
mov
push
dec
test
dec
fistp
lea
xor
mov
xor
clc
mov
mov
push
test
cmps
adc
int3
pop
enter
ror
mov
sbb
sbb
gs
or
or
lods
stos
(bad)
fcomp
xor
sub
push
mov
or
ins
repz
fcomp
shl
ds
mov
push
cmp
jb
xor
movs
sub
cmp
dec
(bad)
div
add
outs
xor
repz
popa
and
stos
mov
leave
sub
jmp
push
jp
fisubr
lods
(bad)
jmp
jno
xor
inc
adc
jge
ss
cs
aas
jp
cmp
addr16
ret
ins
pop
(bad)
pop
pop
(bad)
movs
movs
inc
xchg
and
stos
fbld
jnp
dec
repnz
lods
dec
enter
popa
sub
and
lar
xchg
xor
pop
xchg
into
mov
daa
test
stos
push
sahf
xchg
stc
cli
jmp
gs
jno
aas
ds
push
xchg
in
mov
sub
jmp
inc
test
pop
mov
das
jecxz
in
mov
add
sub
mov
daa
test
mov
pop
imul
test
lods
je
cwde
xchg
inc
xchg
mov
popa
dec
sub
imul
scas
pop
int3
pop
cmp
or
retf
popa
sbb
in
xchg
data16
jae
jmp
repnz
imul
and
add
inc
mov
fcmovnu
fist
mov
add
cmp
retf
or
xor
sub
stos
clc
dec
cs
leave
movs
sbb
jl
cmp
xor
les
pop
inc
dec
movs
mov
in
push
dec
sahf
icebp
add
mov
pop
daa
retf
outs
add
push
aaa
push
cld
inc
mov
xchg
rcl
push
fs
and
(bad)
xlat
stos
test
bound
mov
jno
hlt
or
push
mov
scas
dec
mov
mov
in
fsubr
pushf
retf
mov
mov
sahf
fild
psubd
ficom
outs
ret
ficom
mov
ins
adc
add
dec
or
jno
dec
jb
xchg
add
outs
inc
dec
shr
inc
sub
jl
popf
mov
adc
mov
retf
pop
cli
fadd
add
daa
cmps
sbb
pop
add
lds
arpl
jo
loop
cmp
or
sbb
es
clc
or
hlt
in
into
ficomp
lds
addr16
outs
sub
js
into
in
jle
dec
sbb
mov
push
cmps
nop
inc
leave
push
pop
cmp
data16
push
sti
mov
imul
mov
repnz
out
push
gs
stos
(bad)
scas
aas
xchg
jns
or
pop
adc
or
dec
cld
dec
xchg
dec
dec
call
xchg
sbb
jmp
push
sub
pusha
leave
movs
ss
dec
add
movs
mov
and
movs
jge
vcvtsd2si
pop
hlt
sbb
dec
adc
data16
cmp
mov
mov
jp
jmp
push
test
adc
pop
imul
push
push
dec
loope
aaa
mov
lods
fs
cwde
cmps
mov
adc
test
int3
push
sbb
pusha
call
mov
pop
stc
jmp
dec
or
mov
bound
sbb
iret
sbb
sub
sar
adc
out
jge
push
rcl
xchg
int
xor
jmp
and
cdq
mov
and
je
cmp
sub
out
cmc
pop
addr16
rcl
jecxz
mov
adc
in
(bad)
push
imul
test
jb
(bad)
cld
inc
mov
push
mov
xchg
rcl
lea
daa
sbb
out
fnop
sbb
pushf
je
cmp
or
je
ins
jae
cdq
cmps
sub
je
add
inc
ins
pop
mov
mov
pop
sti
dec
cwde
push
push
cmp
or
aad
sub
push
dec
cmc
xor
cmp
aas
xchg
in
aam
lahf
xor
fistp
mov
(bad)
aaa
mov
jmp
cmp
xor
cmp
jmp
call
sbb
cmp
mov
push
inc
ss
rol
in
xor
lahf
inc
shl
imul
cs
push
call
dec
cmps
sbb
jno
mov
adc
sub
xchg
dec
pop
xor
sbb
mov
add
retf
mov
mov
xchg
out
into
pop
ja
or
je
mov
pop
je
cmps
je
pop
mov
pop
inc
lods
out
mov
fwait
test
mov
mov
mov
shr
cwde
fld
inc
fwait
add
fild
je
inc
jl
cmps
push
imul
lock
pushf
jle
ret
imul
xchg
jp
cmp
shl
adc
or
dec
pop
movs
fcom
xchg
mov
sbb
mov
(bad)
aam
test
push
ins
push
mov
jb
loopne
(bad)
fsubr
(bad)
xchg
nop
dec
pop
mov
xchg
int
jns
les
mov
out
mov
pop
mov
cmps
inc
cmp
test
adc
cmps
pop
repnz
cld
xor
stc
aam
lea
aam
call
xor
dec
sub
aad
push
test
fst
sub
ficom
jmp
xor
sbb
mov
jp
mov
jae
sbb
add
ret
in
pop
dec
aad
ret
dec
dec
xchg
jno
enter
adc
sub
in
cmps
jle
sbb
pop
leave
out
dec
lea
outs
sbb
(bad)
jmp
pop
xchg
loop
xor
js
mov
je
push
pop
es
push
mov
sbb
sbb
dec
inc
dec
test
or
movs
mov
(bad)
(bad)
fidiv
cs
pop
mov
sub
add
mov
gs
pop
pop
lea
jns
adc
fdivr
fist
loope
cmps
dec
or
nop
jp
mov
imul
mov
shl
ja
sub
jle
inc
inc
retf
test
aam
mov
push
add
adc
rcr
mov
or
test
sub
cmp
mov
fcom
mov
sub
aas
sub
movs
xor
pop
out
xor
addr16
adc
fnstcw
xchg
pop
jmp
sub
imul
cmc
cmps
pop
xchg
mov
scas
xchg
bound
hlt
int3
in
imul
inc
fdivr
fs
jl
and
pop
ror
dec
push
fs
xor
jns
fbld
push
or
in
retf
adc
adc
rcl
jg
imul
mov
push
push
ins
clc
in
fisubr
inc
mov
push
aad
adc
sahf
jae
out
mov
cmp
ret
mov
xlat
ins
in
fdiv
loope
je
sti
cmp
mov
mov
sbb
in
adc
in
test
shr
jo
pop
mov
movs
mov
xor
and
enter
fdiv
mov
pslld
adc
imul
outs
jo
mov
(bad)
sahf
dec
test
pusha
repnz
les
add
mov
or
out
cmp
sub
call
sub
push
mov
fadd
call
sbb
cmp
push
jle
scas
pop
inc
fist
push
repz
je
xchg
ror
jo
retf
fs
cmp
fisttp
adc
xchg
and
lods
mov
xor
je
push
fsub
pop
xchg
cmp
shl
in
in
mov
shl
ins
sub
mov
sti
inc
out
aad
movs
(bad)
adc
shl
mov
sub
mov
sub
js
and
pop
or
and
not
xchg
(bad)
into
sar
ja
out
jae
and
(bad)
ror
fist
push
inc
ss
stos
jl
mov
jmp
xchg
fsub
jnp
push
jp
xchg
cld
mov
popa
(bad)
in
xor
mov
loop
addr16
sub
retf
cmp
cmc
imul
add
sub
lods
ins
xchg
add
sahf
adc
into
adc
idiv
mov
into
xor
addr16
push
add
lods
sub
adc
fsubr
or
sbb
push
fisubr
retf
shl
mov
mov
inc
jne
jmp
pop
mov
out
inc
jmp
dec
jge
mov
xchg
fidiv
ins
fnsave
pop
pop
push
add
mov
test
lahf
dec
sbb
sub
fld
push
xchg
rol
lahf
retf
xchg
call
and
sub
push
ror
mov
push
sub
mov
icebp
popa
fisubr
div
or
jns
push
jbe
adc
scas
inc
xor
inc
retf
pop
add
call
xor
inc
adc
mov
adc
dec
xor
and
cmp
push
sub
dec
imul
or
scas
and
adc
cmc
(bad)
jmp
movs
xlat
pop
outs
xor
clc
push
pop
add
xor
jae
aad
mov
sub
in
mov
shl
shl
mov
aam
xchg
iret
and
ja
push
sbb
(bad)
sbb
mov
or
xor
mov
lock
movs
jnp
cmps
test
mov
outs
loope
add
xlat
push
add
ins
fs
xor
push
fistp
repz
in
or
(bad)
movs
je
in
aas
out
xor
stc
mov
cwde
mov
sahf
or
sbb
pop
dec
inc
push
mov
aaa
mov
adc
and
inc
in
outs
dec
in
pusha
pop
test
jnp
xchg
cmc
leave
jge
ja
rcl
mov
pop
xlat
(bad)
cmp
mov
cmp
xchg
int
jg
loopne
repnz
jge
(bad)
sub
inc
jbe
dec
in
pop
lahf
dec
mov
adc
enter
stos
(bad)
cdq
dec
icebp
call
sbb
ret
pop
les
sbb
ins
xor
add
not
icebp
pop
inc
pop
sub
mov
imul
jae
vmulps
or
loop
jle
lds
and
aam
repz
mov
xchg
sbb
lea
mov
sub
hlt
scas
xchg
les
out
ss
dec
mov
lea
cmps
(bad)
push
jbe
cmp
loope
jno
cmp
inc
adc
(bad)
sbb
jns
push
pop
inc
adc
mov
out
or
mov
mov
or
mov
repz
pop
jno
lock
add
cmp
mov
sahf
repz
mov
leave
dec
adc
dec
push
mov
data16
cmc
xor
and
mov
(bad)
iret
and
loopne
aaa
jge
jb
aas
lahf
stos
aas
pop
daa
mov
mov
neg
jb
in
inc
mov
fistp
mov
or
out
scas
test
popa
std
xchg
push
test
jg
(bad)
rcl
and
rcl
jno
mov
cmp
(bad)
push
cmp
inc
push
jle
pop
pop
xchg
push
das
mov
mov
pop
test
hlt
mov
mov
dec
rcl
push
leave
(bad)
in
out
fnsave
repz
stc
aas
jns
popa
cld
mov
shl
sub
dec
cmp
adc
fmul
xchg
pusha
adc
inc
adc
push
add
push
mov
int3
imul
cmps
sbb
inc
push
mov
pushf
inc
push
mov
jno
imul
xchg
loope
ins
cmp
mov
jnp
retf
fist
(bad)
mov
js
xor
pop
sbb
lea
sbb
movs
ror
add
loope
push
popf
mov
mov
sbb
int
out
repz
cmc
movs
xor
lock
ins
adc
jo
pop
push
and
xor
xlat
in
jg
dec
cmp
es
retf
push
lods
inc
jp
mov
cmp
cmovl
jno
push
mov
jecxz
cmp
jecxz
call
outs
popa
sub
aaa
push
jno
fbstp
rol
cs
loope
sbb
dec
sub
mov
ds
aaa
sar
lahf
and
pop
dec
(bad)
(bad)
xchg
mov
pop
aam
jge
(bad)
loope
fidivr
xlat
fmul
shl
repnz
add
test
(bad)
inc
loopne
add
inc
cmp
xchg
xchg
cmc
push
xchg
inc
out
loope
lfs
push
into
jo
pop
mov
cmp
jmp
ds
xchg
lock
nop
xor
add
push
movs
rol
ret
paddsw
xor
jns
dec
repz
loop
inc
shl
jp
idiv
div
xlat
test
inc
int3
sbb
or
sub
aas
mov
inc
pop
or
popa
mov
ds
push
add
mov
es
dec
jno
and
jb
cli
add
imul
cmp
dec
loop
mov
imul
scas
dec
mov
adc
ror
icebp
enter
add
repnz
clc
pop
cmp
loop
cdq
dec
push
xor
mov
and
fisttp
inc
mov
stos
jge
xor
out
adc
in
in
inc
out
clc
adc
cmc
inc
sahf
mov
xchg
xor
jno
xchg
pop
fs
xchg
xchg
add
cmp
xor
xchg
fadd
jbe
cmp
pop
outs
mov
push
jmp
fiadd
ret
push
push
ja
cmc
mov
ds
mov
sbb
stos
dec
pushf
dec
ficom
test
or
adc
ds
fcmovnb
dec
push
fstp
mov
aad
xor
jmp
pushf
and
adc
mov
test
daa
mov
sbb
push
shl
test
stc
mov
sub
cmp
movs
mov
movs
sbb
cmps
stos
(bad)
ins
adc
dec
mov
aaa
pop
out
xor
jbe
popf
in
popf
mov
jl
test
ins
hlt
test
jo
loop
sbb
inc
in
mov
and
test
add
xchg
push
xor
mov
xchg
fld
adc
movs
gs
inc
xchg
dec
mov
sbb
pop
sub
out
adc
arpl
or
fadd
addr16
jns
shr
dec
cmp
cs
test
pop
lods
cmp
retf
ja
arpl
xchg
les
xchg
hlt
adc
add
inc
ins
jge
not
jg
ss
cld
pop
ins
out
movs
sbb
pop
movs
or
outs
jnp
fsubr
mov
mov
push
and
movs
xor
push
nop
fdivr
xor
jecxz
xchg
push
sbb
xchg
mov
sti
shl
push
pop
push
fst
and
and
jge
dec
push
mov
xor
(bad)
movs
cmp
aam
mov
retf
cmp
cwde
and
xchg
jecxz
jns
addr16
fist
cmp
adc
pop
mov
in
or
mov
pop
sub
or
push
cmp
mov
out
maxps
fwait
mov
(bad)
mov
fdivr
mov
lods
xchg
mov
(bad)
mov
pop
fsub
adc
mov
mov
mov
mov
sub
cdq
push
pop
add
mov
push
ret
jl
add
scas
inc
and
test
jae
test
loop
xchg
stos
mov
sub
mov
pusha
adc
lods
repz
sbb
in
cmp
fldcw
jno
and
xchg
cmp
mov
test
jge
mov
push
out
xchg
cmp
ss
(bad)
ins
push
add
mov
xor
mov
repnz
cmp
sub
cmp
aas
sar
mov
(bad)
loopne
cdq
cli
pop
in
cmp
pop
push
rol
and
xor
repz
mov
cs
aas
sbb
hlt
pop
(bad)
push
mov
push
inc
lods
aaa
cli
je
push
pop
movs
mov
add
jmp
dec
outs
fld
mov
push
rol
xor
retf
aad
sub
imul
and
dec
rcl
dec
sub
in
mov
dec
inc
pop
in
and
out
sbb
xor
or
cwde
mov
xor
xor
inc
jnp
mov
movs
dec
imul
les
push
popa
mov
les
xor
ins
jmp
jge
sar
xor
mov
jae
adc
add
mov
jge
add
mov
pop
add
aam
fcmovnb
test
xor
sbb
call
add
sbb
test
or
bound
outs
into
jl
cmc
test
and
fsub
pop
push
dec
mov
ins
sub
sub
xor
mov
and
add
call
push
mov
cli
jo
cli
mov
mov
inc
sub
adc
sbb
inc
add
repz
jns
push
dec
mov
xor
adc
inc
imul
inc
mov
(bad)
std
sbb
adc
xchg
not
fldenv
jmp
inc
lds
imul
xchg
pop
into
mov
arpl
aas
mov
jmp
data16
dec
jg
xchg
adc
inc
cli
and
or
int3
or
repz
jbe
(bad)
mov
dec
xchg
cmp
xor
push
pop
push
mov
add
push
cmc
dec
jle
popa
mov
clc
mov
in
das
jle
outs
pop
xlat
or
loope
imul
ins
pop
es
sub
jnp
push
mov
and
call
or
hlt
xor
sub
ja
pop
xor
mov
and
fld
mov
and
pusha
xchg
dec
jns
add
pop
test
mov
daa
aam
dec
and
imul
rol
sbb
mov
loopne
push
xchg
movs
aad
push
and
push
or
pop
mov
aaa
jns
mov
mov
ret
imul
neg
add
dec
scas
add
mov
fwait
cmp
inc
jo
rol
xor
aas
retf
repz
mov
jbe
sti
stos
int3
popa
pop
fimul
repz
mov
pop
movs
adc
mov
jns
sub
out
shl
xlat
loop
lock
fwait
mov
cmp
scas
jp
aas
add
jns
push
mov
or
adc
stc
xchg
inc
or
ret
nop
jg
pslld
sbb
ss
pop
push
or
dec
sbb
jl
and
inc
fnstsw
outs
not
xchg
adc
cmp
jne
bound
mov
js
aam
test
inc
jae
push
mov
pop
sbb
aas
aad
enter
push
push
push
sub
inc
inc
push
ret
in
push
call
jae
add
jmp
mov
inc
dec
push
sar
sub
in
mov
gs
fsub
imul
not
aam
pop
xor
repnz
enter
gs
xchg
pusha
sub
mov
cmc
iret
test
aas
sbb
mov
pop
fucom
aaa
and
push
xor
rcr
mov
call
mov
test
(bad)
in
mov
or
std
xchg
rcl
dec
mov
nop
xchg
pop
jmp
push
or
sub
mov
popf
test
movs
repnz
lods
jle
or
and
adc
shl
sbb
sbb
xchg
stos
jbe
xchg
sar
pusha
js
dec
xor
repnz
xor
push
cmp
data16
lea
jmp
gs
test
into
enter
pop
loop
lds
neg
call
leave
jae
hlt
repnz
add
lea
pop
je
mov
pop
ins
mov
cli
out
xor
sub
pop
dec
ficom
cmp
mov
les
cmp
ss
xchg
into
jmp
in
push
sub
mov
sar
push
fwait
lds
cdq
movs
mov
mov
mov
js
stos
cmp
xchg
mov
fidiv
xor
mov
adc
mov
xor
dec
xor
push
jp
mov
inc
fadd
sub
mov
int
cwde
dec
pop
scas
mov
in
stc
pop
scas
add
cmp
fiadd
into
push
or
das
ins
mov
pop
int
pop
movs
stc
data16
rcl
mov
in
rcr
mov
clc
out
adc
jns
add
dec
jmp
lods
inc
das
mov
int3
inc
sub
pusha
mov
sti
shld
adc
push
cmp
pop
mov
xchg
out
pop
push
out
add
cmp
nop
jge
mov
push
fisttp
cmp
cwde
movs
cmp
mov
int3
out
xor
xchg
jmp
xlat
mov
stc
pushf
xchg
fcmovnu
adc
cmps
cmps
mov
jbe
push
cmp
data16
sub
mov
and
cs
cmc
repz
movs
mov
push
ss
sub
jns
out
cwde
mov
int3
dec
movs
jg
iret
test
sbb
ins
jge
xor
cdq
sbb
mov
loop
xor
cmp
adc
jle
xor
pop
add
lods
in
cmp
test
jo
das
xor
push
lock
push
push
and
or
sub
add
jmp
les
jnp
imul
fisub
ret
mov
retf
retf
mov
into
push
sbb
xlat
mov
or
jg
(bad)
fwait
pop
cld
push
jecxz
sti
outs
or
xchg
sahf
ret
div
adc
cdq
jno
rcr
and
dec
and
jmp
addr16
adc
movs
sbb
dec
jmp
cmc
or
(bad)
shl
sbb
dec
push
jecxz
test
imul
out
out
jmp
out
or
add
(bad)
mov
jae
jb
sub
xchg
sahf
and
push
aam
test
xor
(bad)
pop
cmps
jno
jmp
sub
test
loop
cmc
icebp
aam
xchg
ins
mov
dec
push
cli
imul
mov
fs
popa
sub
jnp
fisubr
pop
out
xchg
nop
mov
in
pop
mov
int3
pop
hlt
or
pusha
imul
ins
inc
and
outs
jge
mov
out
loop
sub
test
xchg
pushf
or
push
inc
outs
data16
mov
push
out
dec
out
in
adc
pop
mov
xchg
jo
lea
int3
mov
idiv
data16
retfw
loope
push
sub
xchg
add
lahf
pushf
lods
(bad)
jno
mov
mov
and
mov
mov
push
retf
jp
adc
(bad)
pop
dec
mov
mov
mov
xchg
pop
call
inc
xchg
dec
daa
and
xor
xchg
jbe
adc
mov
dec
sar
(bad)
sahf
pop
mov
pop
ins
jge
iret
inc
popf
dec
sub
mov
and
pop
repz
out
push
inc
call
dec
mov
inc
add
dec
jge
(bad)
jmp
jecxz
mul
jle
sub
retf
jno
outs
ret
(bad)
mov
mov
xchg
mov
sub
xchg
dec
mov
add
aad
cmp
arpl
xchg
push
mov
pop
fcmovb
ror
outs
push
test
hlt
xchg
mov
enter
out
stc
pop
mov
pop
jmp
adc
adc
mov
test
repnz
push
adc
mov
das
xchg
hlt
sub
sub
sub
inc
jg
sub
int
bswap
in
mov
push
ret
outs
jae
jle
fcomp
std
cmp
xor
cli
call
or
iret
outs
sahf
add
pop
ins
sahf
sahf
jp
dec
or
jge
sub
aaa
ret
xlat
mov
xchg
mov
add
or
adc
add
in
iret
sbb
leave
movs
bound
cwde
xchg
outs
fs
imul
xchg
daa
xchg
pop
inc
sbb
jl
lods
jl
push
js
test
cli
jp
(bad)
bound
inc
push
pop
mov
dec
lea
or
rcr
sub
jg
adc
mov
movsx
inc
lods
adc
pop
hlt
adc
jle
std
fdivr
sbb
pop
and
cli
jb
cmp
dec
and
or
div
movs
push
into
cmps
dec
mov
sub
shl
pop
mov
mov
popa
sar
push
(bad)
cdq
movs
gs
pop
cmc
adc
pop
mov
js
sbb
sub
mov
dec
sub
push
int
sbb
call
arpl
xchg
inc
cdq
jno
sub
scas
arpl
pop
xor
fldenv
push
stos
es
mov
and
dec
mov
sbb
or
xchg
ja
and
(bad)
pusha
test
mov
imul
or
ret
fadd
sbb
sar
mov
and
jl
hlt
lods
cmp
and
adc
cmp
pop
ds
sti
xor
or
std
sub
test
sub
add
scas
sar
add
cmp
mov
push
ficom
mov
int3
sub
inc
mov
ror
push
adc
fimul
jno
dec
stos
jnp
xchg
cdq
mov
test
add
jl
test
mov
loop
out
fnsave
lock
out
sbb
mov
hlt
push
cli
out
dec
or
bound
daa
(bad)
cmp
sar
and
xlat
out
neg
repz
(bad)
ds
fisubr
mov
mov
scas
iret
mov
sbb
aaa
jle
sub
pop
push
in
into
stc
shl
xor
push
pop
mov
in
jp
inc
out
aad
fist
sub
sbb
xchg
mov
ret
in
aaa
lods
xchg
fld
out
mov
dec
cmp
adc
cmps
dec
adc
ror
stos
dec
rcl
adc
dec
add
(bad)
in
call
or
adc
pop
or
loopne
xchg
jnp
pop
and
retf
test
adc
or
test
jb
adc
jnp
cmp
out
add
jmp
loop
mov
mov
test
mov
push
mov
loopne
mov
xlat
cmp
(bad)
arpl
mov
pop
push
adc
jmp
or
test
and
sub
dec
sub
push
imul
adc
mov
cdq
mov
scas
sbb
cdq
push
and
ds
mov
inc
inc
fistp
ins
xor
stc
push
inc
mov
adc
pushf
ret
mov
pop
jne
sub
mov
adc
mov
adc
test
add
loop
repnz
push
fcmovb
fdivr
mov
inc
aam
call
sub
iret
adc
or
inc
arpl
xchg
sub
in
out
(bad)
daa
lea
pop
mov
sub
jmp
or
fistp
mov
pop
test
out
fild
inc
nop
mov
mov
xor
aam
test
iret
rcl
int3
dec
inc
popf
mov
lds
push
and
ret
lea
(bad)
rol
mov
cmp
pop
test
(bad)
shr
stc
inc
inc
mov
inc
mov
std
(bad)
scas
cmp
mov
addr16
lds
xor
jl
or
sub
mov
outs
mov
xchg
jae
inc
jns
and
dec
arpl
scas
cmp
mov
movs
or
aad
adc
jp
arpl
jae
inc
sub
adc
out
lods
call
xchg
cmp
psubusb
out
test
xlat
adc
mov
clc
std
add
(bad)
out
sub
jmp
sub
push
dec
sub
ret
xchg
ret
les
leave
out
clc
cmps
ins
in
inc
dec
jmp
cmp
lds
jmp
cmp
mov
pop
or
or
repz
jge
or
dec
mov
mov
lods
test
sti
(bad)
jecxz
push
movs
xlat
add
jecxz
sbb
sub
inc
inc
add
push
jbe
mov
mov
data16
aam
ins
xchg
dec
jmp
mov
and
sbb
mov
icebp
neg
jl
je
xor
push
jne
inc
nop
xor
mov
test
mov
mov
mov
aad
jg
xchg
adc
dec
(bad)
fsubp
mov
scas
and
iret
je
arpl
jb
loope
sub
add
loope
mov
and
call
adc
and
mov
out
add
imul
in
hlt
js
and
jns
es
push
pop
sbb
push
jle
pop
cld
add
jle
inc
jmp
adc
loop
retf
(bad)
call
add
loopne
pop
and
push
out
push
xchg
punpckhwd
cmp
xchg
and
jns
jle
jge
adc
(bad)
mov
std
stos
push
mov
and
dec
sbb
jecxz
and
xchg
jnp
ret
(bad)
fwait
retf
pop
test
into
pusha
sbb
sub
repnz
xor
dec
or
xchg
sbb
push
stos
push
fs
sbb
mov
out
pop
lods
addr16
mov
ror
push
cmp
push
(bad)
shl
add
mov
ja
xchg
and
bound
xor
jecxz
inc
mov
xchg
fsubr
shl
je
xor
add
and
pop
jmp
pushf
jmp
jp
jmp
ret
stc
cs
(bad)
int3
pushf
add
inc
retf
unpckhps
jo
xor
fstp
cmp
gs
mov
cdq
dec
jo
shl
adc
mov
sbb
sbb
sub
mov
push
jl
cwde
out
push
nop
xor
nop
inc
sbb
(bad)
inc
sub
xchg
mov
pop
mov
cli
dec
ja
xor
nop
in
cli
sbb
cwde
xchg
mov
mov
xor
jns
stos
lock
hlt
fwait
or
mov
lds
scas
inc
pop
retf
enter
outs
xor
inc
cmps
enter
iret
shl
mov
adc
xchg
xor
je
rol
add
push
cdq
mov
add
adc
pop
inc
retf
in
rcl
(bad)
das
jae
xor
inc
dec
dec
aad
out
xchg
ins
or
or
cmp
test
sbb
mov
and
in
arpl
mov
and
mov
xor
mov
outs
push
jns
push
sar
cmps
pop
cli
sub
xor
cdq
adc
cwde
pushf
pop
sbb
sbb
(bad)
ss
shr
xor
cmc
hlt
stc
cld
add
shr
cs
mov
jbe
mov
pop
das
jb
pop
(bad)
shl
mov
arpl
sahf
rol
adc
adc
in
cs
stc
stos
add
aas
inc
sub
fisub
jb
xlat
mov
xor
mov
cmps
scas
xor
(bad)
jae
fist
mov
sbb
lahf
mov
arpl
loope
das
or
std
adc
mov
mov
rcr
mov
test
cdq
mov
inc
mov
dec
ds
add
or
xchg
jmp
mov
hlt
aam
dec
fsub
or
pop
mov
xchg
imul
cmp
jecxz
mov
mov
dec
sbb
push
push
cmps
sar
test
dec
and
sub
shr
sbb
std
pop
sbb
inc
or
xor
lahf
and
add
xchg
loop
pop
dec
add
dec
sbb
inc
pushf
jae
retf
hlt
pop
mov
std
mov
inc
jne
inc
mov
movlps
dec
xlat
imul
fstp
xor
(bad)
sub
and
in
fistp
mov
(bad)
leave
pop
test
in
mov
pop
mov
xor
dec
and
sub
xchg
mov
pushf
or
adc
daa
mov
jmp
jmp
loopne
pop
sbb
and
pusha
or
cwde
scas
call
push
cmps
xor
out
mov
cld
xor
and
dec
push
xchg
xchg
lahf
cwde
call
inc
in
cli
dec
mov
xchg
push
xchg
cdq
or
xchg
iret
loope
push
xchg
es
and
stos
ins
clc
push
cli
inc
outs
lods
(bad)
xchg
jl
loopne
jg
sbb
mov
fwait
push
stc
and
out
pop
outs
pop
repnz
repz
lea
dec
imul
in
stos
sub
out
pop
jns
int3
mov
sub
sub
and
int
sti
sti
dec
xchg
push
retf
inc
mov
xor
xchg
xchg
call
push
cmp
fs
in
popa
fs
jp
pop
jg
xchg
and
outs
push
sub
sub
inc
push
shr
dec
cmps
je
and
cdq
out
or
(bad)
jmp
fs
jge
es
pushf
push
clc
cmp
inc
mov
and
pushf
mov
pop
sbb
xchg
pushf
cli
fwait
icebp
sub
js
adc
dec
push
mov
xor
inc
inc
pop
cmp
push
cli
neg
mov
xchg
jecxz
(bad)
call
xchg
adc
add
test
mov
jnp
pop
and
push
call
stos
mov
out
push
das
rcl
test
arpl
jg
sbb
cmp
idiv
scas
lods
jmp
adc
inc
daa
stos
dec
popa
test
add
adc
mov
dec
adc
fdivrp
fwait
mov
xchg
aaa
icebp
mov
iret
aam
dec
out
xchg
mov
dec
dec
add
jmp
pop
gs
cld
ror
push
retf
jp
cmp
jae
jnp
leave
mov
fisub
jle
dec
xchg
inc
mov
stos
sahf
shl
mov
mov
mov
push
mov
cmp
push
or
push
mov
popa
ss
push
pop
jns
addr16
xor
push
int3
cmp
mov
fs
inc
xor
scas
in
aad
sub
mov
jns
out
rcr
cmp
lea
prefetcht2
mov
sbb
cmc
jl
aas
mov
ins
std
xchg
jmp
pop
or
lods
sub
aas
cld
fcmovb
mov
xor
pop
fisub
rcl
sbb
inc
cwde
xchg
clc
mov
xchg
mov
push
sub
dec
pusha
clc
add
add
inc
mov
das
ret
cli
dec
mov
addr16
mov
jp
repnz
mov
jo
pop
and
cld
mov
lahf
or
das
cwde
cmp
fwait
pop
xor
ret
outs
and
pop
jmp
inc
mov
jge
mov
inc
cwde
mov
aad
jae
inc
and
int
push
jecxz
rol
jp
jmp
pop
cmp
out
push
jmp
xor
sar
add
or
bound
xor
cmp
push
push
in
add
ret
fst
imul
and
and
xor
dec
sbb
arpl
loop
xor
gs
and
jle
out
and
call
dec
lods
xor
jnp
mov
ror
pop
cmp
ror
or
(bad)
mov
mov
inc
xlat
xor
push
retf
sbb
outs
sub
push
out
les
fisubr
icebp
xchg
ds
movs
mov
dec
push
fsub
inc
bnd
xlat
mov
ja
sbb
ins
das
je
mov
sbb
dec
popa
clc
fucom
or
mov
or
out
push
sub
ret
inc
push
dec
jle
mov
jo
shl
mov
lahf
cld
adc
ja
ins
movs
fnsave
stc
xor
xchg
pop
or
xchg
outs
ss
aad
xor
ror
cwde
mov
inc
mov
in
imul
and
dec
dec
sbb
adc
call
sbb
adc
out
pop
movs
ins
sti
jmp
push
sbb
inc
lahf
jecxz
mov
cwde
jmp
push
loop
ret
les
and
push
push
aam
call
call
mov
repz
adc
in
imul
movs
mov
jg
imul
stc
fidiv
stos
push
jo
les
out
adc
nop
sti
mov
mov
sub
push
test
dec
mov
push
cmp
hlt
xor
fmul
add
jb
mov
and
xchg
loope
xor
mov
xchg
mov
push
sub
pop
cmp
mov
pop
cmp
lea
imul
scas
fs
fisub
inc
xor
add
aad
rcl
(bad)
pusha
adc
mov
call
iret
nop
int3
push
xchg
fs
adc
mov
sub
push
mov
out
cmp
cwde
aas
jne
xchg
call
dec
cmp
cmp
imul
xchg
int3
or
dec
sbb
inc
and
mov
in
add
(bad)
push
add
call
nop
(bad)
sar
push
xchg
clc
or
shl
jle
push
stos
lods
push
icebp
cmp
adc
fwait
push
out
jns
jo
push
push
sub
jbe
and
mov
ret
xor
rol
xchg
call
jne
dec
or
sbb
cld
inc
fs
mov
stc
mov
loopne
and
icebp
shl
das
scas
pusha
cmp
les
push
pop
sub
push
dec
int
(bad)
mov
xchg
or
pushf
pop
cmps
jae
fisttp
xchg
inc
les
and
dec
add
xor
iret
int
jp
pop
adc
inc
fwait
lock
test
lods
dec
daa
and
jmp
les
add
pushf
or
xor
pushf
push
ins
add
dec
and
sub
push
adc
mov
aad
push
jns
xchg
fbld
fadd
pop
sub
cmp
or
mov
stos
fisubr
fist
sbb
and
pop
stc
pop
inc
lods
ret
or
or
pop
retf
mov
or
cs
dec
addr16
ja
int
jnp
inc
psrlw
loop
xchg
repnz
neg
xchg
loop
repz
adc
ret
xor
sbb
sti
adc
iret
pop
ficom
pop
push
pop
mov
and
and
aaa
sub
scas
imul
sub
jo
repz
mov
cmp
popf
push
inc
push
mov
mov
dec
dec
loopne
push
xchg
mov
mov
and
cmps
lea
fild
ret
scas
add
push
fist
jo
add
mov
mov
dec
repnz
sahf
push
int
jae
cs
inc
cmp
into
inc
je
movs
sbb
jne
adc
test
sub
or
dec
or
test
push
fcom
aam
loop
cmp
stc
mov
in
ficomp
xlat
jae
aaa
cmps
add
mov
fwait
and
ret
add
jmp
or
test
cmp
pop
ins
xchg
mov
sbb
cmp
shl
cmps
inc
fs
push
mov
out
rcl
cmp
pop
jmp
rcl
aas
or
fdivp
test
popa
or
leave
fnstenv
jo
xor
out
pop
mov
push
fisub
mov
call
xchg
cli
mov
cs
xor
mov
mov
sub
fsubr
pop
xchg
fwait
jmp
push
pop
jb
push
(bad)
iret
into
cli
jo
in
mov
cld
ret
out
xchg
mov
jp
ja
sub
xchg
inc
adc
stos
ret
push
or
test
inc
fwait
popf
mov
les
sbb
call
adc
pop
repz
stos
push
outs
mov
push
cmps
stos
dec
inc
ror
imul
inc
sbb
cs
out
sub
shl
je
and
mov
ins
or
(bad)
fdiv
add
in
jbe
jmp
inc
jge
rol
(bad)
out
js
add
push
adc
pop
ja
fisubr
std
test
pop
cdq
fwait
hlt
out
inc
adc
and
jae
aam
xchg
push
dec
jae
jns
outs
inc
loopne
fbld
fs
daa
mov
cmp
and
sub
xor
sahf
or
and
adc
xlat
inc
gs
and
mov
mov
pop
out
cmp
nop
outs
jb
enter
not
sbb
mov
or
loope
inc
add
cmp
imul
ret
js
add
test
inc
loope
jnp
cmp
lds
fistp
dec
dec
mov
adc
inc
and
pop
jp
loop
stos
frstor
ror
sub
ds
mov
movs
test
ja
pusha
leave
(bad)
and
nop
jns
adc
scas
xlat
sub
xchg
sub
ret
das
ins
sti
jb
mov
sub
inc
das
cmp
mov
or
inc
cmp
test
push
test
xchg
mov
cwde
ds
xchg
jmp
pop
adc
adc
push
push
mov
sbb
lea
sbb
dec
and
jo
das
and
add
(bad)
sbb
cli
mov
fprem1
inc
das
adc
in
adc
add
inc
ror
shl
pop
add
mov
sbb
add
push
jl
es
jne
adc
scas
mov
std
sbb
sbb
daa
lock
jp
aaa
cmps
loopne
dec
(bad)
dec
pop
shl
fs
ins
scas
or
in
xchg
cmp
adc
test
xor
xor
xor
pop
dec
(bad)
ror
xlat
push
mov
sbb
dec
xchg
and
aam
in
inc
(bad)
retf
jp
mov
sub
xchg
lods
xchg
fdiv
sub
cld
mov
fucomi
imul
mov
pusha
jns
jp
inc
aas
jle
daa
inc
jae
sbb
jge
inc
pop
push
test
lds
push
call
pop
test
dec
das
lods
push
push
xor
nop
test
mov
mov
xor
cmp
imul
dec
or
dec
add
mov
sbb
push
retf
adc
sub
stos
cmp
mov
call
sti
mov
push
mov
jb
jbe
mov
add
add
call
adc
xchg
ss
mov
or
adc
sub
jo
std
sub
adc
dec
leave
pop
mov
stos
mov
mov
xor
pop
addr16
jmp
mov
sbb
rcr
sub
xchg
outs
xor
or
ret
pop
test
or
retf
out
es
out
sbb
iret
dec
or
mov
add
call
stc
fnsave
lock
jb
(bad)
loopne
push
mov
retf
push
push
or
mov
jne
pop
mov
jo
cmp
in
mov
or
or
or
or
movs
mov
popf
adc
nop
mov
test
(bad)
aad
or
inc
push
ins
push
xchg
iret
sbb
cmps
push
in
loopne
or
sbb
push
int3
cmps
jl
mov
test
mov
inc
fst
hlt
mov
jne
jge
ror
aam
fisttp
and
add
or
loopne
and
aaa
inc
pop
outs
mov
loop
rol
add
mov
enter
dec
adc
jecxz
lahf
pushf
aad
pop
das
lea
sbb
stc
jne
call
xor
mov
mov
mov
adc
aas
bnd
jnp
sbb
add
movs
nop
jno
dec
data16
in
mov
cmc
shl
nop
mov
retf
or
mov
mov
cmps
(bad)
daa
fs
or
jl
and
dec
clc
add
fiadd
sub
jnp
push
xchg
sbb
mov
cmp
and
jle
cwde
or
dec
(bad)
jl
inc
sbb
mov
or
stos
xchg
xchg
repnz
fsub
mov
fwait
pop
pop
mov
cld
fdiv
cld
out
ins
add
aad
push
das
stos
ss
ret
xor
or
fstp
cmp
stos
scas
hlt
mov
jg
xor
mov
lds
clc
xchg
xchg
ret
jns
mov
aas
shl
mov
je
xchg
in
stos
sbb
shl
jmp
mov
out
test
das
add
mov
gs
push
popa
sub
pop
xchg
test
adc
mov
push
sbb
mov
push
mov
cwde
jne
scas
arpl
in
add
dec
mov
lea
sbb
mov
pop
mov
jp
das
xchg
daa
das
jmp
in
inc
xor
and
cmp
std
sbb
mov
cmp
ror
loopne
adc
pop
test
scas
in
dec
inc
(bad)
cmps
dec
imul
mov
push
enter
int
call
and
cmp
stc
sub
cmps
dec
or
int
mov
call
jnp
stos
inc
adc
push
ret
lods
inc
loopne
rcr
push
mov
shr
ror
repnz
jo
mov
mov
mov
adc
cmp
mov
xor
pop
ss
and
cmps
cmps
iret
or
into
test
adc
(bad)
(bad)
popa
push
cli
and
jmp
and
loopne
jg
in
cmps
xchg
push
dec
xlat
or
push
or
nop
int
(bad)
(bad)
fcomp
fwait
sub
push
iret
popa
and
out
stos
test
pop
sbb
jp
ins
cmp
ret
pop
mov
mov
loope
jae
or
xchg
inc
pop
seta
xor
leave
add
jnp
les
sbb
add
aaa
inc
fldenv
retf
inc
push
nop
sbb
fs
(bad)
dec
or
mov
test
sbb
popa
pop
test
inc
inc
and
xor
jecxz
inc
cmp
int
std
jb
jnp
fcom
xchg
inc
in
cmovnp
jne
imul
and
imul
inc
dec
add
dec
pop
std
mov
xchg
dec
push
and
dec
sub
sbb
push
cmp
xor
in
mov
xchg
jle
mov
rol
retf
scas
ds
xlat
not
sti
mov
es
jns
shl
movs
mov
adc
out
fild
jge
sbb
loop
movs
test
cld
xchg
in
int3
xchg
xchg
in
out
jge
cmp
push
popf
pushf
or
sub
push
pusha
push
mov
xor
out
mov
icebp
bound
cmp
mov
lods
adc
test
jbe
out
jge
mov
test
and
rol
push
xchg
popa
out
add
int
pop
or
cmp
xor
adc
aam
js
fiadd
adc
or
cmp
mov
mov
and
pop
cmps
sti
lock
out
ins
icebp
cmc
jl
push
or
iret
push
mov
and
call
retf
in
inc
daa
hlt
adc
xchg
add
lods
daa
test
ss
mov
callw
ret
inc
sub
mov
fiadd
sbb
mov
sbb
fidivr
xor
(bad)
fcomp
repnz
lods
frstor
not
js
test
ins
xchg
enter
add
pushf
in
pop
push
add
shl
jp
xchg
jns
sub
push
xor
(bad)
mov
cmc
or
out
das
imul
pop
push
scas
pop
push
xchg
lds
jbe
int3
sti
mov
outs
inc
fmul
adc
pop
enter
xchg
fwait
popf
mov
mov
retf
(bad)
retf
sbb
std
into
push
sbb
jne
push
cmp
test
hlt
fcomi
shl
test
sub
mov
popa
mov
inc
jbe
or
xchg
mov
out
cld
bound
outs
icebp
jg
and
popf
popa
stos
out
mov
clc
push
in
xchg
aad
pop
jmp
push
adc
pusha
ins
pusha
addr16
daa
push
add
and
jecxz
enter
sbb
xor
adc
test
in
adc
cmp
ja
mov
js
adc
xlat
sub
pop
mov
cwde
mov
ret
arpl
in
dec
xor
lock
xchg
inc
push
cdq
xor
xor
or
mov
adc
push
scas
push
aad
(bad)
jns
xchg
ja
clc
ss
pop
jmp
sbb
jmp
xchg
imul
add
jno
mov
mov
dec
jno
scas
lock
hlt
xchg
test
icebp
cmc
cmp
mov
sub
jb
fdivp
mov
ror
cli
xchg
add
mov
add
shl
jnp
mov
push
mov
and
jo
into
fild
nop
add
xchg
scas
push
push
popf
inc
mov
pushf
loopne
cmp
out
dec
mov
push
icebp
stos
call
mov
jae
jp
data16
loop
pop
call
mov
in
add
pushf
xor
test
jg
dec
fiadd
cmp
sahf
call
mov
xchg
mov
loope
lds
pusha
jo
mov
add
jecxz
jge
fisubr
shl
pop
sahf
idiv
retf
add
call
sbb
aaa
or
xchg
scas
mov
mov
dec
sti
je
sbb
popf
add
shl
leave
mov
iret
pop
pop
jb
mov
jecxz
add
pop
mov
nop
pop
rol
fadd
in
fs
aas
out
aas
les
cmc
ret
dec
scas
dec
mov
mov
sbb
mov
jmp
ja
mov
(bad)
cmp
std
lahf
js
fs
mov
or
jmp
jle
push
sub
xor
and
loop
les
hlt
jo
push
wbinvd
ficom
cli
into
neg
out
dec
out
pmaxsw
das
sub
sbb
add
dec
sbb
mov
jb
(bad)
mov
fild
cmp
push
fild
inc
xor
push
sbb
mov
popf
push
inc
aad
movs
test
test
dec
out
test
aas
jns
mov
fyl2x
mov
add
adc
push
jmp
sbb
cmp
arpl
sbb
mov
or
daa
add
and
push
daa
push
sub
and
movs
(bad)
jo
sbb
aam
xor
jmp
aas
outs
jmp
sbb
cmc
sbb
cmp
int3
mov
lods
(bad)
ins
xchg
pop
cmp
adc
dec
and
loop
inc
jb
aad
pop
les
iret
sbb
jns
addr16
dec
add
test
(bad)
lahf
test
iret
push
add
jmp
mov
mov
jbe
sbb
mov
jb
cld
sbb
ficom
imul
xor
add
mov
cli
aad
cmp
imul
leave
pushw
pop
cdq
sbb
mov
ins
out
mov
pop
inc
mov
(bad)
fild
sbb
mov
push
std
mov
push
inc
iret
mov
js
clc
xchg
(bad)
popa
ret
js
je
xor
(bad)
rcl
add
andps
mov
xor
jge
mov
pop
mov
mov
add
lock
push
sahf
out
daa
inc
push
cwde
pop
lahf
jae
cld
out
xor
adc
pop
pusha
dec
xchg
mov
imul
cmps
pop
cmp
add
cli
es
dec
and
(bad)
mov
add
push
add
cmp
fldenv
xchg
test
xlat
outs
sbb
enter
movs
jmp
mov
aaa
inc
sub
mov
cmps
movs
jno
jb
jg
sub
call
push
push
mov
mov
or
xchg
dec
jl
cld
jae
test
cmp
cmc
enter
jo
sti
mov
sub
dec
xchg
test
sbb
lods
mov
pop
xchg
ret
loop
fisttp
or
pop
mov
jbe
inc
stc
sahf
mov
and
or
loopne
(bad)
xchg
mov
mov
xchg
adc
sub
mov
clc
or
(bad)
jl
lahf
ss
inc
add
add
repz
repz
loop
pop
inc
push
push
push
and
inc
(bad)
fld
fisubr
inc
test
dec
mov
cs
int
adc
and
jp
cmp
in
lods
aam
xor
add
add
mov
sbb
ror
sub
mov
aaa
std
pop
sub
cld
out
movs
(bad)
xchg
cmp
jl
ret
cmp
ja
push
movs
test
xor
mov
inc
es
in
add
repnz
pusha
mov
retf
xor
retf
jae
cli
dec
repz
in
retf
adc
pop
iret
sbb
mov
ss
sbb
shr
jb
das
and
cmp
sbb
and
fsubr
sub
mov
cmp
mov
mov
das
neg
push
fist
out
retf
push
les
push
xor
jns
pop
mov
adc
mov
and
in
cli
add
cdq
shr
popf
mov
sbb
cs
dec
in
into
in
pop
mov
mov
jb
jp
into
push
pop
mov
and
loop
in
in
mov
nop
or
std
aaa
mov
in
stc
leave
(bad)
lods
int3
sbb
inc
jne
or
xchg
mov
ja
or
popa
inc
cmp
dec
push
mov
push
adc
icebp
mov
add
mov
les
mov
dec
icebp
inc
out
fbstp
lds
mov
loope
rcr
shr
adc
fimul
(bad)
sbb
jmp
jg
scas
adc
movs
shl
mov
add
jg
pop
rol
inc
sahf
sub
fstp
cmps
dec
lea
add
jne
dec
xor
jns
mov
les
and
adc
in
jecxz
or
jl
push
js
movs
into
into
jmp
sahf
mov
xor
lods
or
loop
dec
loope
jecxz
adc
push
pop
push
mov
ins
jmp
ret
xchg
fdivr
xlat
push
xchg
js
sub
stc
or
mul
scas
es
call
mov
enter
jge
mov
push
loope
aaa
fwait
jle
cmps
into
pop
icebp
sbb
mov
mov
xlat
cmp
es
int3
(bad)
inc
inc
xchg
ror
jg
jge
aam
jmp
mov
cld
inc
adc
jmp
retf
xchg
sub
inc
mov
clc
add
shr
clc
fmul
in
std
and
lods
jae
shl
pop
stos
mov
aam
cdq
sbb
inc
int3
mov
xlat
push
popf
mov
std
add
pop
push
push
inc
adc
pop
push
std
push
js
dec
cli
loopne
or
pop
push
push
cmp
int
xchg
add
sub
fs
pop
jnp
xchg
mov
pop
mov
cmps
div
(bad)
sahf
and
inc
and
pop
push
imul
or
mov
xchg
push
in
int
mov
leave
call
loope
push
sbb
loop
sub
push
sbb
push
jo
jb
push
xchg
mov
jns
push
fldenv
fsubr
idiv
std
cwde
dec
mov
pop
hlt
mov
mov
retf
sbb
jge
sbb
or
neg
ds
jae
cmps
pop
cmp
jl
popa
jmp
lds
sbb
(bad)
xor
or
ins
lea
nop
and
mov
popa
sti
mov
mov
add
je
mov
(bad)
mov
xchg
fisub
push
push
aaa
es
add
inc
sub
leave
(bad)
(bad)
sub
arpl
retf
mov
jl
sub
ret
lahf
scas
mov
out
sbb
ss
push
out
push
or
jl
push
xchg
aad
xor
sbb
dec
xchg
into
int
(bad)
aam
sbb
push
push
rcl
clc
xchg
and
and
cmp
bound
inc
inc
sub
out
std
mov
popf
push
fcmovnbe
sti
icebp
inc
xchg
push
xchg
sar
movs
mov
ror
push
jno
or
adc
xchg
aam
mov
inc
push
dec
dec
aas
call
mov
push
movs
push
xor
out
mov
dec
fcomp
fisttp
and
mov
ins
push
lds
mov
(bad)
adc
daa
cdq
xchg
mov
and
cmp
je
pop
call
inc
(bad)
loopne
js
mov
cmp
cmp
pop
jge
int
mov
xchg
add
xlat
inc
and
mov
pop
adc
push
sub
sbb
iret
cmps
jmp
jo
push
mov
mov
mov
xchg
lods
retf
add
(bad)
and
cmps
sbb
xlat
cli
xor
repnz
mov
mov
cmp
cmps
xchg
jmp
cmps
imul
jbe
xchg
lea
jmp
psrld
bound
jne
aaa
leave
add
inc
and
ret
dec
sbb
xchg
mov
pop
les
(bad)
rcr
(bad)
push
sbb
fcomp
mov
pop
jg
sar
test
sbb
push
dec
mov
xchg
jo
xlat
mov
lahf
pop
push
fisub
fcomp
mov
jmp
sub
sub
mov
dec
mov
pop
rcr
dec
or
push
scas
rcr
push
inc
cmp
xchg
xor
popf
sbb
aaa
gs
repz
je
sub
pop
fwait
dec
popa
sbb
ins
popf
xor
loopne
xchg
into
cmp
push
sbb
and
dec
aam
(bad)
and
inc
out
retf
ds
inc
dec
xor
pop
and
dec
add
add
fisttp
inc
sub
push
dec
pop
daa
mov
jg
xchg
push
mov
sub
pop
ss
inc
leave
repz
cwde
ds
or
inc
cld
jecxz
sub
xchg
xor
stos
fdiv
and
cli
out
scas
mov
fdivr
ficomp
imul
sbb
mov
outs
jnp
inc
mov
mov
mov
std
loopne
cli
loop
mov
in
pusha
sahf
enter
xor
test
push
sar
cmc
out
mov
dec
int3
sbb
fadd
mov
add
add
mov
dec
fmul
jmp
jmp
cdq
test
mov
push
fild
adc
cmp
popf
mov
outs
sbb
adc
sbb
push
dec
push
(bad)
adc
mov
in
xor
pop
push
outs
xor
jp
ror
sahf
bound
mov
mov
sti
sbb
dec
retf
xor
mov
fcmovne
xor
jl
outs
mov
push
xor
js
dec
adc
into
xchg
jle
fdivr
test
jns
int
inc
mov
xlat
fld
and
arpl
jmp
test
idiv
nop
xlat
pop
out
retf
fdivr
test
das
stos
dec
jbe
and
jo
mov
cmc
int3
pop
int
push
neg
sub
sbb
push
cwde
push
fnstsw
inc
clc
test
jo
fnsave
(bad)
in
push
les
push
jg
leave
mov
mov
not
mov
hlt
pop
jmp
push
in
jnp
mov
lods
push
shl
sub
inc
push
ret
xchg
loope
stc
inc
pop
mov
shl
xor
iret
scas
sub
pop
pop
xchg
inc
xor
ss
movs
jmp
add
ins
adc
sbb
jge
fcmovnu
enter
mov
ja
cmp
and
jne
lods
test
dec
xor
in
xchg
pop
shl
dec
cmp
cs
mov
inc
mov
mov
add
rcr
dec
pushf
xadd
inc
mov
mov
call
sar
fst
call
popf
fist
out
xchg
test
je
cmc
lods
mov
mov
loop
xchg
inc
jecxz
mul
mov
cdq
pop
imul
jp
adc
or
push
in
push
or
pop
imul
dec
sar
pop
imul
sbb
call
stos
cwde
cmc
out
aad
call
and
xchg
or
movs
aad
int3
out
push
lahf
(bad)
dec
loope
and
inc
ret
jl
and
or
ds
sbb
lea
repnz
pop
dec
pop
pop
push
jmp
ins
(bad)
add
dec
aaa
mov
jecxz
pop
mov
jmp
or
mul
pop
lods
dec
gs
std
xlat
inc
shr
dec
js
ret
cmp
xor
clc
cmps
test
adc
cmp
std
pop
inc
sbb
mov
mov
fdiv
adc
pusha
mov
(bad)
and
std
outs
fld
add
sbb
xor
sub
stos
sub
mov
fmul
pop
in
mov
sbb
fld
jnp
cdq
adc
hlt
mov
aam
cwde
xor
aam
push
inc
ficomp
mov
mov
shr
(bad)
cli
mov
adc
loopne
bnd
inc
or
addr16
and
loopne
stc
icebp
sub
out
dec
or
ss
cdq
cmps
js
xchg
cmps
loope
mov
int
(bad)
xor
ds
les
cmp
or
cld
jle
js
push
xor
xor
adc
add
pop
push
icebp
mov
jecxz
xor
bound
aam
lods
ret
xor
cmc
xor
jo
push
ret
or
btc
test
cmp
jae
sbb
rol
int3
lahf
jmp
cmp
mov
push
cmp
jb
or
sub
lea
test
adc
jnp
pop
(bad)
xor
movs
sbb
bound
cmp
sbb
mov
pusha
or
leave
cmp
into
bound
xor
scas
sar
fsub
and
les
push
fidiv
mov
stc
neg
stos
lods
movs
daa
in
or
stc
retf
ins
push
mov
movs
push
retf
push
push
push
or
iret
sar
aam
ret
sub
leave
daa
push
xchg
gs
shl
fwait
daa
iret
ins
ins
mov
inc
and
dec
xor
cwde
cmp
jbe
out
int
pop
inc
cmps
mov
add
data16
(bad)
xchg
aad
outs
adc
mov
fisubr
or
js
push
dec
inc
mov
pusha
into
outs
ins
sub
add
sbb
sbb
idiv
mov
lods
rcl
imul
test
jmp
mov
test
test
xor
push
sub
mov
shl
test
push
arpl
xchg
(bad)
fdiv
arpl
repz
mov
dec
enter
add
sub
loop
lock
clc
(bad)
call
popa
cdq
mov
xor
loope
cmps
iret
lds
ret
xchg
fwait
push
inc
pusha
jo
in
mov
and
shr
mov
repz
mov
pusha
pop
loop
cmc
push
in
div
adc
add
ins
add
lea
xchg
clc
popa
aas
(bad)
push
leave
scas
xchg
or
push
jecxz
add
push
mov
(bad)
push
push
fmul
push
fisttp
fdiv
push
stos
cmps
fs
ja
cdq
cmp
or
and
mov
imul
fs
fimul
stc
pop
push
daa
(bad)
sbb
fidivr
cmp
pushf
gs
hlt
test
in
sbb
ins
xchg
ds
pop
stos
lock
ds
inc
sbb
add
cmp
sbb
xor
jecxz
(bad)
xchg
in
sub
or
jle
cmp
mov
ins
mov
shl
and
dec
out
cmp
push
inc
mov
repnz
cli
popa
hlt
mov
adc
pop
xchg
imul
jb
jmp
cwde
adc
sbb
dec
pop
or
add
daa
cmp
mov
sub
popf
pop
jb
sub
dec
xor
mov
mov
sahf
rcr
and
loopne
jnp
dec
ror
pop
ret
xor
xor
inc
in
mov
and
sbb
test
inc
(bad)
xlat
xchg
shl
jmp
icebp
mov
(bad)
mov
mov
fwait
push
pop
cmp
cmp
and
ins
pusha
mov
jmp
pop
call
mov
fistp
mov
xor
mov
icebp
aam
ins
imul
xchg
inc
mov
(bad)
jle
mov
sub
jmp
mov
call
idiv
stos
or
imul
jge
or
shl
stc
shl
adc
mov
xchg
lods
or
sti
(bad)
fbstp
scas
lahf
pop
mov
inc
sar
imul
aas
jp
test
and
mov
mov
(bad)
mov
xlat
scas
test
inc
fisttp
jmp
into
mov
call
repz
(bad)
or
sbb
push
ds
sbb
lea
mov
test
icebp
cmp
les
jne
xor
dec
pop
jge
mov
sbb
sbb
cld
cs
or
mov
or
xlat
mov
bound
mov
icebp
mov
mov
out
rol
movs
sub
pop
cmp
xor
xchg
icebp
mov
mov
dec
mov
inc
stos
test
mov
cmc
pop
sub
mov
scas
(bad)
in
push
xchg
data16
xor
pop
lea
add
and
icebp
inc
repnz
out
mov
add
call
and
cmps
jb
dec
das
retf
or
dec
pop
ins
pop
xor
rcr
pop
jp
sti
sub
icebp
fnstcw
idiv
shl
push
inc
loop
cmp
push
push
jl
div
cs
push
lock
loopne
rcr
aas
out
test
sbb
push
aad
mov
clc
push
mov
pop
loope
mov
sbb
cmps
ins
ds
mov
push
cmp
jb
inc
xor
imul
mov
mov
xchg
pop
loope
add
jecxz
mov
sub
movs
mov
add
push
cdq
adc
lahf
push
sub
mul
jmp
sti
clc
fwait
int3
adc
mov
outs
lea
pop
push
jle
out
je
cmp
push
sbb
adc
dec
ds
mov
or
mov
pop
daa
sbb
(bad)
or
mov
mov
cmp
aam
pushf
and
push
add
pop
fs
mov
and
inc
cmp
nop
and
pop
cwde
fistp
lea
jg
jo
addr16
xchg
nop
inc
aam
aad
add
test
icebp
imul
adc
and
sub
fstp
or
pop
rcl
cmp
stc
test
mov
ffree
rol
loopne
ror
popf
pop
add
sar
(bad)
ds
retf
dec
pop
gs
loope
mov
sub
add
dec
xor
fstp
mov
sti
mov
lea
out
and
cmp
cli
icebp
push
leave
in
add
cmc
(bad)
aaa
jae
mov
out
imul
mov
cmp
test
pop
cwde
nop
jmp
jo
lods
or
adc
arpl
sbb
(bad)
push
mov
sti
fistp
push
or
rcr
xchg
sar
mov
push
rcr
push
scas
fstp
xchg
enter
mov
sbb
xlat
pushf
adc
pop
mov
hlt
clc
je
push
cmps
pop
clc
test
ret
(bad)
ds
add
mov
(bad)
jno
fisttp
xchg
popa
fcomp
xchg
inc
cmp
push
mov
cld
enter
add
call
push
retf
seta
sub
cwde
movs
les
inc
inc
mov
mov
sub
mov
lock
aam
mov
addr16
in
in
mov
adc
push
test
sub
add
pop
fcmovb
mov
shr
cdq
jne
je
out
add
test
inc
stc
inc
add
lahf
jecxz
pop
sahf
mov
inc
(bad)
test
mov
sub
out
mov
(bad)
xor
cmp
fcmovbe
movs
jge
add
dec
xchg
jns
mov
pop
mov
and
sbb
pop
jmp
cs
adc
push
mov
mov
leave
xchg
cmp
mov
or
jo
call
arpl
and
jg
fwait
aad
data16
xor
imul
cmp
cli
xor
ins
imul
inc
add
pop
ins
mov
aaa
inc
pop
dec
adc
retf
mov
(bad)
mov
sbb
adc
mov
pop
inc
mov
loopne
sub
retf
push
sar
jmp
mov
xchg
sbb
out
int3
inc
mov
push
mov
mov
cmp
push
sub
push
adc
in
mov
rcr
mov
call
mov
xchg
daa
xchg
aad
scas
dec
out
test
ja
sbb
sbb
out
jno
push
mov
cld
adc
cs
push
mov
and
pop
push
and
bound
jae
inc
int
cli
arpl
lods
lds
dec
mov
adc
sbb
ficom
mov
idiv
retf
call
ror
lods
retf
push
jmp
fwait
mov
in
sub
mov
outs
add
jmp
push
sbb
xchg
retf
fisttp
sbb
xchg
fisub
push
xlat
(bad)
push
mov
lods
imul
pop
shr
jle
call
addr16
clc
mov
push
sbb
pop
fadd
cmps
sbb
pop
jae
sbb
mov
ret
fcom
cmp
or
bound
and
or
sahf
or
pushf
outs
sub
call
xchg
fwait
mov
or
mov
ja
sub
add
mov
jle
sbb
push
sbb
jnp
(bad)
imul
sub
mov
leave
and
hlt
mov
cmps
outs
add
cmp
out
jnp
fwait
jecxz
fwait
fwait
inc
inc
and
das
pusha
push
xchg
stos
and
jmp
es
push
andps
xchg
mov
ret
fidivr
push
cs
push
jecxz
adc
cmp
add
imul
fwait
add
mov
inc
jle
ss
mov
(bad)
push
fwait
and
sub
pop
inc
std
mov
cmc
adc
and
jg
imul
sbb
cmp
sbb
idiv
push
enter
xlat
jecxz
and
in
jo
pop
dec
mov
movs
imul
ins
xchg
iret
int3
pop
mov
inc
sub
nop
enter
or
jne
dec
xchg
inc
adc
mov
adc
jg
in
xor
lahf
pop
call
lahf
push
jo
icebp
call
dec
mov
jp
sbb
sbb
or
inc
pop
add
pop
mov
js
xor
sti
cmp
pop
add
imul
aaa
mov
test
cmp
xor
rcr
adc
inc
xor
pop
sub
addr16
mov
mov
test
pop
es
mov
arpl
imul
out
mov
cmp
xchg
cmp
lds
dec
mov
sti
and
test
jbe
push
mov
xor
retf
out
aam
or
fs
(bad)
mov
pusha
sahf
and
lahf
fs
adc
sub
dec
inc
or
xchg
or
aas
adc
stos
mov
call
fimul
jnp
fcmovnu
dec
jg
mov
int3
test
push
sar
cdq
mov
hlt
fucomi
loopne
ins
fsub
stc
(bad)
dec
(bad)
inc
and
xchg
mov
xor
ror
stos
xchg
push
leave
xchg
xor
(bad)
push
(bad)
and
dec
sbb
cld
lds
sub
dec
out
rcr
popa
call
xor
xor
pop
adc
js
sbb
cmps
scas
cmp
pop
popf
mov
push
in
scas
dec
scas
or
popf
rol
daa
(bad)
push
jecxz
push
adc
pop
mov
outs
mov
pop
push
xor
adc
dec
jg
sub
imul
xor
dec
xlat
jae
data16
or
mov
enter
call
xchg
mov
jo
pop
hlt
and
rcr
xchg
stos
mov
out
aaa
sbb
or
inc
mov
sub
inc
jo
pusha
ret
test
imul
jbe
mov
pop
mov
add
test
cmp
mov
rol
push
dec
mov
ss
les
mov
paddq
mov
lods
repz
cld
(bad)
sar
rcr
mov
or
jg
mov
(bad)
jnp
sub
sbb
or
pop
dec
sub
xchg
push
arpl
mov
xor
ds
jae
loopne
sbb
loop
pop
test
dec
or
mov
pop
retf
std
and
in
in
jb
pushf
loop
fadd
add
jne
push
pushf
jmp
fld
fdiv
sbb
lock
or
mov
cmp
rcl
cmp
fsubr
aam
adc
lds
fadd
jmp
fisttp
adc
out
call
cs
sbb
sahf
and
or
mov
jmp
jae
iret
ss
shl
sbb
imul
hlt
clc
shl
lock
xchg
aaa
call
jle
and
sti
add
pop
push
adc
fisub
jle
dec
out
pop
mov
outs
xchg
sbb
xor
cwde
pop
sbb
les
dec
mov
push
retf
adc
cmp
sar
addr16
mov
retf
lods
xchg
dec
add
loope
repz
outs
jb
dec
mov
cmp
gs
rcl
or
repz
pop
xchg
mov
sar
and
mov
es
loope
addr16
repz
and
and
add
or
cmp
lock
pop
push
push
aas
adc
icebp
push
in
add
into
je
mov
add
mov
mov
out
mov
mov
icebp
xor
mov
or
shl
mov
cmps
test
sub
cwde
test
inc
daa
dec
jnp
jle
jecxz
jg
loopne
pop
imul
jle
or
lea
daa
add
push
and
not
cli
cmc
and
int3
sbb
sub
int3
neg
mov
xchg
inc
sbb
add
pop
shr
aad
(bad)
pop
shl
dec
ins
pop
cdq
xor
push
mov
jp
les
xchg
mov
mov
sbb
daa
or
hlt
hlt
dec
push
outs
cmps
arpl
or
adc
movs
enter
xor
xchg
shl
inc
and
or
sub
sti
push
or
mov
mov
xlat
(bad)
push
in
mov
jmp
push
xor
es
and
jae
fistp
sbb
test
inc
movs
and
cdq
mov
inc
into
add
sahf
cmp
xchg
xor
sahf
cmps
addr16
sti
xchg
inc
mov
sbb
jge
clc
movs
movs
or
je
mov
ins
nop
pop
aad
cmp
mov
cld
pop
fisub
lods
jbe
cwde
mov
inc
loopne
jmp
sar
outs
or
lods
pop
int
hlt
icebp
cmp
data16
mov
lea
dec
mov
sar
sub
fwait
arpl
and
jb
jno
out
sub
out
and
jo
sub
movs
imul
inc
dec
inc
hlt
mov
cli
jge
mov
sbb
pop
pusha
and
pop
jo
imul
jg
or
aam
xor
lods
call
mov
and
bound
(bad)
icebp
lahf
pop
mov
out
aam
push
push
mov
idiv
sub
pop
sbb
repz
or
xchg
pop
mov
mov
inc
jl
sub
inc
mov
sar
lahf
xchg
shr
lea
js
mov
jmp
sbb
dec
lds
stos
push
dec
psubusb
arpl
jae
repnz
in
aad
and
imul
rcl
shl
sub
call
mov
mov
mov
mov
mov
mov
std
ss
push
adc
xchg
xchg
push
and
int3
jns
cmp
fisttp
movs
ret
xchg
data16
and
dec
push
in
sbb
adc
les
inc
mov
dec
lods
fcmovnb
lods
ins
push
idiv
(bad)
fist
int
push
adc
mov
dec
cmp
test
push
and
pop
and
dec
and
pop
push
mov
lahf
cmps
or
pop
mov
adc
dec
xor
stc
cmp
add
inc
sar
in
in
iret
sub
in
out
(bad)
les
minps
cmp
movs
enter
cmp
adc
pop
fdivr
mov
dec
push
aam
inc
loope
aam
push
mov
or
scas
jecxz
add
push
cmp
mov
in
inc
ret
fiadd
outs
mov
aam
jmp
out
int
inc
sub
out
outs
sub
and
or
and
dec
sbb
adc
sbb
mov
jne
sbb
dec
adc
mov
cmp
inc
iret
nop
lods
add
lea
adc
add
jl
cmp
in
push
inc
or
sbb
popf
fwait
dec
pop
jecxz
mov
or
push
mov
cmp
adc
inc
add
das
cmps
pop
inc
mov
cmp
dec
xchg
mov
loop
mov
scas
jno
sub
xchg
mov
mov
and
jne
mov
cmp
and
adc
jecxz
cmp
pop
cdq
repnz
arpl
mov
cwde
mov
cwde
sbb
popa
and
pop
inc
or
push
es
jne
fnstsw
pop
popa
cmp
and
sahf
nop
ficomp
pop
sub
das
cwde
cmps
add
jnp
add
mov
in
lahf
ins
repnz
mov
call
lods
das
and
ret
(bad)
pop
aas
cmc
mov
cs
dec
sub
(bad)
fstp
test
mov
add
out
test
lods
ins
(bad)
(bad)
pop
or
fisub
sbb
mov
int3
fs
ins
fsubr
in
mov
int
retf
adc
aaa
push
ja
jmp
xor
jecxz
mov
xchg
outs
fidivr
in
mov
stos
or
push
jecxz
push
mov
pop
jb
shr
inc
xor
dec
(bad)
jmp
or
(bad)
outs
daa
adc
enter
(bad)
push
jg
rol
push
(bad)
loopne
lea
in
xchg
rcl
mov
pop
pop
retf
int
rcr
mov
push
xchg
mov
add
cmp
and
out
outs
scas
ins
data16
cmp
call
jge
sbb
stos
sbb
mov
push
mov
pop
scas
xchg
mov
jp
retf
nop
(bad)
mov
adc
jl
clc
jo
mov
mov
mov
push
mov
jb
inc
sbb
and
daa
movs
and
stos
mov
shr
inc
out
adc
xchg
and
mov
jb
cmp
cld
cdq
cdq
sar
dec
pop
xchg
push
add
jbe
ds
xor
inc
cli
mov
or
jne
shl
sbb
jae
jl
dec
and
xlat
adc
push
outs
aas
int
out
push
nop
pop
mov
out
mov
push
div
xor
fisttp
test
aad
pop
ret
pop
push
dec
mov
in
cmc
sbb
pop
and
adc
ffree
shl
(bad)
test
cs
fisub
out
mov
fsubrp
aam
cmp
mov
mov
cmp
sbb
xchg
les
ins
int3
sub
sbb
inc
inc
loop
push
jmp
mov
pop
jl
cli
jmp
or
mov
jmp
and
test
pushf
push
mov
in
ja
sub
and
ficom
(bad)
daa
fldcw
jb
mov
call
push
fidiv
daa
test
lahf
and
sub
push
retf
xor
mov
inc
mov
cmp
aam
mov
scas
out
cld
retf
mov
enter
inc
mov
push
inc
mov
jp
mul
inc
ret
mov
mul
out
cmp
bound
pop
xor
test
xlat
mov
fisttp
outs
sub
dec
mov
icebp
aaa
push
add
es
aaa
mov
es
cmp
sbb
jne
rcr
idiv
xchg
popf
fadd
add
or
fidivr
dec
cmp
ja
adc
push
movq
frstor
ins
pop
test
rol
add
inc
inc
jno
pop
sbb
imul
lods
cmp
mov
sar
mov
lock
les
add
mov
lods
sbb
mov
enter
scas
sbb
lea
sub
mov
push
xor
test
and
lea
xchg
xor
pusha
mov
jo
mov
fcom
ins
inc
adc
xor
mov
adc
xchg
adc
xchg
out
sub
sub
(bad)
stos
sbb
(bad)
addr16
stc
popa
mov
xchg
rcl
int3
cld
mov
xchg
and
sub
pushf
cld
push
mov
fidivr
cwde
stos
jecxz
stc
adc
loope
xchg
mov
or
xchg
arpl
jmp
repz
shr
jle
pop
sahf
push
and
jne
rep
aas
cmc
sbb
jne
adc
or
push
sbb
add
cmp
loopne
xor
sub
lods
ja
xchg
pop
push
sub
mov
push
mov
cmp
fs
out
(bad)
arpl
and
inc
mov
repz
cmp
mov
pop
out
dec
or
call
mov
pop
scas
scas
ret
jae
outs
les
fs
inc
scas
ss
cdq
cmp
fcom
or
out
and
push
add
lock
(bad)
iret
in
xchg
scas
mov
sahf
ins
mov
jmp
or
pop
xor
xor
scas
jne
add
das
pop
in
in
div
rcr
jle
bound
aam
iret
push
mov
mov
mov
cld
mov
sub
test
ss
int
pop
push
pop
vshufpd
mov
shl
jp
dec
dec
jle
jge
xchg
mov
pop
fsub
push
add
push
mov
iret
and
push
ins
rcr
cmp
retf
out
movs
push
movs
(bad)
sar
jnp
lds
jno
cdq
add
jno
cmp
ret
mov
ins
test
xor
xor
into
fst
jmp
pusha
xor
outs
inc
jmp
sub
lea
adc
std
inc
push
leave
mov
dec
aam
push
test
out
iret
xchg
fild
push
call
jge
add
aam
repz
fadd
jmp
sub
hlt
sbb
add
into
mov
fdivr
jmp
fld
inc
jb
cli
fisubr
dec
cmp
cs
fld
adc
sub
sbb
or
out
xchg
or
dec
mov
dec
push
ins
and
xor
out
in
cwde
in
out
(bad)
push
ins
icebp
add
push
or
sti
cmp
adc
mov
icebp
shl
jl
cmp
stos
imul
cmp
push
mov
push
push
xor
ins
adc
xor
cmp
add
dec
xor
dec
pop
jno
pop
sub
mov
dec
inc
dec
jecxz
sub
je
sbb
xor
xchg
mov
dec
jno
dec
jnp
jl
rcr
fnsave
mov
and
mov
stos
mov
pop
jge
data16
jp
cmp
sub
jns
adc
sub
pop
pop
cmp
loopne
(bad)
retf
cwde
pushf
loope
cmp
inc
(bad)
push
fs
or
out
push
js
outs
jo
dec
adc
pop
push
pop
xchg
mov
mov
inc
cmp
cli
xchg
adc
fwait
dec
or
cld
test
cdq
aam
outs
jge
cdq
pushf
je
cs
ins
xor
inc
adc
ss
out
sbb
cld
push
push
inc
popa
xchg
outs
enter
pop
int
fs
sahf
sbb
cmp
popf
fldenv
add
push
sbb
loop
imul
loopne
pop
js
fisttp
mov
adc
dec
add
pop
mov
movs
hlt
push
cmp
or
jmp
sbb
lahf
std
xor
dec
retf
jne
sti
es
sti
cld
pushf
xor
inc
stos
out
shl
(bad)
scas
movs
stos
or
lds
push
pop
(bad)
aam
imul
mov
sub
imul
mov
inc
lahf
pop
cli
adc
retf
loop
rcl
inc
dec
inc
jbe
xor
dec
int3
int
xchg
jns
sbb
push
or
lahf
ins
enter
mov
aam
mov
int
mov
mov
iret
icebp
dec
hlt
(bad)
dec
jecxz
and
icebp
in
ins
movs
sahf
rol
cs
test
add
leave
js
add
(bad)
jno
sub
xor
ret
cmp
fstp
sub
dec
xchg
xor
mov
mov
mov
adc
movs
pushf
rcr
cmp
mov
aaa
add
and
inc
out
std
fdivr
jg
fmul
ins
repz
into
pop
mov
push
sub
cmps
and
inc
jmp
fwait
aaa
rol
icebp
ins
in
cwde
stc
jno
or
outs
(bad)
pop
sub
dec
pop
fucomip
repz
call
call
test
xchg
sbb
jns
dec
addr16
xchg
sbb
mov
pop
daa
dec
pusha
push
aam
mov
cmp
cmp
adc
jp
cmp
xor
xchg
cmc
push
cmp
inc
cld
dec
ins
gs
adc
sub
das
inc
mov
(bad)
call
cli
outs
retf
(bad)
xor
cmp
mov
push
pop
mov
xor
pop
cwde
inc
loop
fild
daa
inc
mov
mov
cdq
sti
add
das
test
or
jecxz
arpl
out
(bad)
mov
retf
jne
sub
ret
rcl
sahf
jg
and
cdq
mov
cld
aad
out
dec
(bad)
rol
xor
enter
pop
sbb
jmp
cmc
dec
dec
retf
mov
and
xor
sub
aaa
arpl
push
xor
or
mov
outs
loopne
xchg
test
inc
pushf
adc
jmp
dec
fcmovnu
ret
adc
dec
aam
add
pop
jbe
lahf
in
inc
mov
mov
dec
pop
adc
or
(bad)
inc
xor
sub
shl
jb
cmp
add
mov
mov
mov
stc
pop
or
clc
sub
mov
pop
sbb
outs
mov
add
pop
push
cdq
jns
ss
adc
xchg
sahf
ret
jns
in
pop
leave
popa
inc
in
mov
jl
xor
xor
inc
stc
pusha
xchg
pop
xor
cdq
pusha
shr
lds
cs
mov
lods
aam
ins
shl
inc
ss
sub
mov
xor
xchg
mov
mov
mov
sti
ins
pop
inc
fld
loopne
fwait
pusha
ss
and
xor
sub
imul
call
(bad)
mov
test
hlt
imul
jmp
adc
cmps
adc
or
iret
mov
inc
ss
add
inc
xor
mov
sub
retf
stos
sub
add
sbb
pop
push
inc
push
in
ins
lods
sahf
test
fwait
mov
fistp
(bad)
cmp
dec
push
loopne
(bad)
fcom
sub
inc
adc
enter
jbe
aad
or
in
fbstp
movs
adc
test
sahf
or
sub
push
es
add
mov
call
cmp
push
daa
xchg
outs
data16
je
out
sar
test
mov
repz
adc
bound
dec
cdq
mov
mov
xchg
sbb
sbb
ret
jb
fcompp
xor
pop
jno
mov
mov
mov
mov
push
xor
and
stos
sub
and
push
shr
ins
dec
mov
mov
mov
mov
adc
mov
icebp
data16
cmp
mov
push
pop
cmp
adc
push
sub
lahf
mov
pop
pop
in
test
adc
iret
jg
dec
sub
and
sub
gs
mov
sbb
cmps
cmp
or
jae
add
add
lahf
hlt
push
pop
stos
push
rol
out
mov
stos
neg
sub
jo
test
push
clc
(bad)
adc
imul
add
dec
mov
cmp
imul
lahf
mul
das
push
jo
inc
pop
or
aam
ret
sti
xor
in
lods
push
int3
call
adc
adc
jnp
inc
lock
stos
sub
(bad)
dec
out
aam
cmps
push
ins
adc
mov
jnp
imul
idiv
mov
out
fist
scas
inc
push
loop
sti
ins
xchg
je
cwde
retf
shr
sub
call
mov
and
inc
repz
jae
test
mov
sbb
jne
push
popf
adc
jbe
mov
lea
xchg
arpl
mov
cmp
call
inc
jbe
pop
lds
xchg
call
imul
mov
xchg
pop
sub
ins
fcmovnbe
or
push
or
jecxz
shl
sbb
hlt
lds
dec
dec
sub
into
js
push
mov
inc
ror
aaa
cmp
dec
cmp
ret
ja
mov
mov
aas
xor
mov
cmp
rcr
inc
out
ja
cmps
mov
sub
sub
imul
adc
mov
xchg
shl
jns
push
imul
xor
dec
lods
xor
sbb
test
pop
dec
movs
push
adc
inc
imul
push
push
adc
pusha
inc
rcr
call
sub
ret
push
lock
xchg
jns
addr16
xchg
and
mov
enter
loope
xchg
jno
xor
aam
icebp
(bad)
jg
jbe
dec
aad
mov
(bad)
out
aas
jne
lock
xchg
mov
jb
jno
mov
dec
dec
mov
stc
push
push
icebp
push
or
addr16
adc
lock
xchg
pop
js
mov
push
scas
fcomp
xchg
mov
jle
pop
jmp
add
cmp
sbb
mov
fs
sbb
cmp
xlat
mov
inc
or
xor
mov
aam
pop
aaa
jp
mov
push
movs
adc
popf
loop
push
and
mov
xchg
sahf
(bad)
jg
jg
push
sbb
cwde
in
and
pop
enter
(bad)
jae
add
push
bound
xor
out
outs
jecxz
outs
add
rcl
pop
fmul
scas
inc
nop
pop
mov
cmc
in
xchg
les
fiadd
sub
inc
in
mov
jmp
cmp
cmp
cmp
ja
cmp
sub
push
leave
and
sbb
sbb
out
dec
(bad)
aaa
pop
adc
sbb
push
lea
push
mov
mov
or
pusha
pop
mov
sbb
stc
pop
sub
enter
jmp
cmps
(bad)
ret
pusha
adc
mov
movs
jne
dec
dec
stos
mov
fsub
mov
mov
pop
arpl
ret
cld
fs
push
mov
sahf
mov
add
out
(bad)
xchg
push
mov
inc
fucomi
fild
pop
jp
mov
and
out
jge
xchg
xlat
xor
mov
out
test
enter
jl
into
xlat
(bad)
lds
(bad)
dec
inc
rol
inc
dec
aad
mov
xor
ror
or
mov
loopne
std
cld
fsub
push
mov
lods
push
cmp
out
mul
idiv
shl
mov
sub
mov
pop
test
rcr
jns
movs
jp
into
xchg
ja
in
adc
aaa
in
xchg
bound
push
fidiv
cmp
pop
pop
cmp
imul
push
aam
les
or
stc
in
sti
lds
push
sahf
stos
push
jl
ffree
les
in
dec
mov
xchg
or
mov
jae
and
or
dec
test
sub
aaa
mov
jmp
cmp
or
mov
fcmove
jb
scas
scas
cmc
retf
int
sbb
pop
out
in
repz
xchg
jnp
mov
push
mov
jns
test
data16
call
(bad)
daa
and
fist
cmp
test
out
ins
fidivr
mov
test
lods
scas
jae
mov
dec
inc
sub
cmp
push
stos
sbb
adc
pop
out
jbe
lods
in
or
push
loop
outs
xchg
movs
xor
mov
jp
mov
xchg
cmp
dec
cwde
add
sub
scas
push
mov
mov
jecxz
jne
hlt
aam
ror
and
cld
xor
sub
pop
cld
push
xor
pop
add
xor
lods
aad
clc
xor
xchg
xchg
xor
(bad)
cmp
imul
in
add
out
stc
cld
sti
add
stc
adc
test
push
ins
icebp
cmp
movs
int
out
rcr
pop
sub
mov
push
movs
(bad)
ja
push
xchg
jp
test
inc
inc
adc
mov
out
sub
add
inc
inc
scas
pop
inc
dec
add
imul
push
push
clc
cwde
or
add
rcr
dec
data16
cmp
mov
cmp
test
cdq
loope
mov
adc
in
clc
dec
mov
pop
sbb
xor
(bad)
push
lahf
lock
(bad)
xchg
aas
or
mov
out
enter
jo
mov
cld
ins
inc
enter
dec
mov
mov
out
or
mov
mov
sar
fisttp
xor
mov
stos
or
pop
dec
jg
jmp
ins
add
sub
cmp
cdq
inc
pop
imul
mov
add
sar
imul
retf
cdq
add
fcmovu
mov
sub
dec
ret
pop
je
xor
adc
sub
out
lods
stc
cs
pop
out
push
sbb
idiv
fidiv
mov
shl
daa
inc
test
xchg
sar
(bad)
rcl
mov
mov
add
jecxz
(bad)
jmp
retf
xchg
mov
adc
les
loop
mov
adc
mov
dec
pop
sbb
mov
dec
pop
icebp
push
mov
jno
enter
fwait
push
cmp
and
(bad)
adc
add
movs
or
imul
dec
mov
shl
and
sub
gs
or
mov
cld
sbb
mov
pop
or
mov
(bad)
push
and
pop
jle
gs
arpl
aas
mov
imul
mov
rcl
jo
pop
lea
mov
iret
int3
pop
mov
xor
arpl
xchg
out
add
int
ins
mov
movs
dec
mov
inc
daa
mov
pop
inc
add
pop
add
repz
push
les
or
and
xchg
icebp
fisttp
inc
pop
les
hlt
push
fsubr
jmp
lahf
repnz
(bad)
(bad)
retf
stos
xor
das
call
cmp
adc
out
push
(bad)
mov
(bad)
and
sub
and
movs
push
imul
and
or
and
(bad)
test
rcr
push
(bad)
fsub
inc
push
pop
mov
sub
and
cmps
mov
jb
std
cmp
das
movs
xor
les
stos
add
sbb
pusha
jb
bound
popa
xchg
and
push
xchg
pop
ds
loope
and
cmc
sub
pop
adc
adc
jnp
cmp
cmps
stos
sar
sub
mov
(bad)
push
mov
loop
push
out
mov
sbb
gs
sub
cmp
inc
not
pop
lea
sub
adc
cmp
push
(bad)
jg
icebp
lock
dec
cmp
inc
jbe
mov
leave
fsubp
movs
or
xchg
jb
push
out
out
push
fist
cmp
pop
(bad)
ins
jg
xchg
push
(bad)
cmp
or
aad
mov
test
pop
shl
ret
test
add
mov
push
in
ds
and
into
cmp
dec
cmp
es
cs
int3
jl
jmp
or
(bad)
pop
int
push
pop
xor
repnz
cmp
pop
xor
jns
aaa
adc
push
mov
cmp
bound
jl
mul
push
mov
pop
add
xchg
mov
imul
pop
aad
or
push
cmp
shr
std
test
sub
cmp
cwde
xchg
and
mov
sahf
xchg
aam
arpl
test
repnz
pop
loope
in
inc
mov
pop
fisubr
push
jae
add
shl
or
dec
aaa
sub
cmps
pop
in
or
cmps
or
scas
pop
stos
mov
mov
in
out
imul
ds
stc
mov
mov
add
loope
mov
out
pop
dec
dec
addr16
sahf
test
(bad)
pushf
xchg
inc
(bad)
jae
adc
pop
sbb
fidivr
out
movs
aad
adc
repnz
mov
mov
jno
js
(bad)
xor
addr16
(bad)
enter
and
push
sbb
bound
mov
shl
and
ins
je
inc
pop
jae
jbe
test
out
retf
xchg
sub
movs
sub
sbb
outs
lock
fadd
xchg
mov
fwait
bound
push
(bad)
push
push
add
aaa
sbb
popf
xchg
sti
jl
lahf
jmp
xor
cmp
iret
jecxz
lods
repz
ins
cmp
shr
dec
cdq
add
push
fiadd
cmp
pusha
mov
fyl2x
sbb
fld
mov
in
inc
pop
add
int
inc
cmps
sub
xor
stos
add
and
sahf
mov
inc
(bad)
or
arpl
sub
popf
enter
outs
add
sub
fwait
popa
mov
and
retf
pop
mov
cmp
cmps
dec
push
jne
jmp
lea
sar
ja
aas
or
retf
sbb
adc
outs
dec
clc
cmp
adc
inc
iret
fiadd
sub
dec
adc
mov
in
and
pop
pop
icebp
xor
dec
(bad)
addr16
xchg
scas
push
shl
sbb
add
ret
xchg
mov
mov
inc
out
fadd
cmp
adc
stos
mov
not
leave
cmp
push
adc
mov
mov
(bad)
mov
repz
mov
lock
loopne
out
gs
in
jle
xchg
inc
jb
adc
and
cmp
mov
sbb
mov
sub
sub
js
and
sbb
xchg
mov
and
adc
popa
or
push
imul
mov
xchg
scas
mov
inc
retf
out
jle
pop
xchg
jnp
es
pusha
xchg
(bad)
clc
popa
lods
inc
add
mov
dec
fldcw
neg
inc
xchg
lea
add
jecxz
mov
dec
out
jmp
push
xor
inc
add
retf
imul
push
div
ja
mov
mov
jg
mov
popa
outs
push
(bad)
dec
fld
imul
dec
add
sub
pop
leave
jb
or
aam
out
jnp
movs
and
cld
loope
xchg
cmps
add
bound
jle
into
jnp
outs
js
dec
inc
add
push
xlat
cmp
test
xchg
and
xchg
ins
test
outs
mov
or
test
jmp
icebp
and
gs
bound
cwde
mov
out
or
rcl
pop
jmp
sbb
fadd
retf
xor
ds
out
jg
push
ins
cmp
outs
or
rol
ds
movs
or
jl
push
jbe
enter
in
xchg
and
or
sub
jno
add
inc
mov
(bad)
jns
mov
les
add
or
sti
test
and
sahf
mov
mov
lahf
data16
mov
ja
xlat
mov
cmp
enter
es
loop
sti
and
dec
div
stc
lds
popa
in
jge
dec
mov
and
pop
mov
test
retf
enter
and
sbb
cli
add
mov
sahf
in
cmp
fisubr
imul
cld
es
xchg
sti
or
ret
in
(bad)
xor
rcl
test
(bad)
stc
pop
in
sbb
fwait
mov
pop
(bad)
stc
sbb
ror
cmps
ficom
int3
mov
loope
stos
adc
iret
push
popa
and
dec
xchg
push
push
push
sar
fist
loope
or
push
in
sub
push
pop
add
bnd
adc
xlat
arpl
inc
sbb
fild
out
test
push
(bad)
xlat
inc
enter
jno
inc
jp
loop
jmp
cmp
sbb
push
inc
mov
dec
ret
cdq
mov
aas
mov
(bad)
add
adc
push
dec
pusha
xor
push
xor
and
pop
mov
inc
push
and
sbb
inc
jne
push
outs
outs
sub
inc
sub
stc
jbe
or
push
ja
sar
rol
sub
aas
inc
ja
retf
and
ret
mov
xor
imul
(bad)
rol
out
mov
jnp
xor
push
sar
(bad)
test
shl
out
int
push
push
out
enter
cmps
mov
pop
(bad)
cmp
cmp
out
mov
aad
xor
addr16
cld
xor
inc
int3
daa
fs
les
sbb
lds
sti
xor
scas
dec
into
push
mov
push
xor
out
pop
mov
jbe
sub
ret
lods
mov
sbb
es
js
mov
(bad)
jne
mov
dec
xchg
xlat
bound
xchg
or
pop
mov
nop
cld
pushf
mov
rol
add
or
mov
jb
sub
push
jp
jo
add
sbb
ins
and
jmp
outs
sti
les
adc
in
ins
in
adc
jg
(bad)
fadd
xchg
cmp
mov
aam
movs
stos
ins
xchg
xor
ja
loope
xchg
sbb
sub
retf
or
and
ins
push
inc
jecxz
pop
loop
cdq
xchg
inc
jo
(bad)
ins
or
and
sub
sahf
call
ins
fcomp
imul
xchg
inc
lods
pop
cli
or
cmps
inc
push
leave
pop
std
call
push
outs
cmps
outs
xchg
pop
cmps
shl
dec
fs
or
(bad)
inc
mov
pop
sti
pop
cmp
pusha
daa
retf
sub
dec
and
out
fnsave
sbb
and
data16
jne
mov
stc
ret
pop
out
fild
add
xchg
mov
mov
mov
mov
push
dec
js
test
das
jae
aaa
aam
sti
adc
imul
sahf
mov
cs
outs
or
daa
sbb
dec
push
sbb
mov
cmp
cmps
xchg
call
jecxz
or
mov
pop
imul
adc
popa
es
xchg
jb
mov
iret
mov
shr
cmps
pop
push
mov
mov
inc
mov
jle
xchg
pop
pop
jnp
push
xchg
add
out
mov
push
jge
mov
dec
mov
mov
mov
imul
aas
out
jo
and
adc
xor
cmp
rcr
cmp
pop
(bad)
pop
retf
int3
(bad)
retf
mov
popa
pop
cmp
adc
retf
aam
add
jb
jns
ja
lock
clc
pop
fnstenv
cmc
sar
add
cmp
cli
inc
pop
mov
cmp
sub
pop
pop
push
ret
add
mov
sbb
stc
mov
mov
test
ins
std
push
inc
pop
mov
call
push
dec
dec
and
jmp
dec
mov
iret
push
out
jge
in
mov
fs
or
mov
outs
rol
(bad)
cmovne
add
frstor
addr16
loope
ret
cdq
out
push
cmps
repz
sbb
ins
js
and
mov
adc
int3
aaa
not
mov
lods
pop
fsubp
das
in
push
xchg
inc
int
push
mov
push
mov
push
xor
int3
mov
rep
sbb
jp
add
fcomi
add
mov
movs
fsub
push
sbb
fs
jae
inc
out
cwde
pop
out
add
shr
push
push
or
bound
jg
test
mov
iret
mov
push
mov
jg
add
fldenv
sub
lahf
xor
(bad)
push
inc
mov
xor
test
push
adc
aaa
imul
xor
or
scas
add
sbb
daa
inc
ins
add
and
push
xchg
retf
jo
icebp
sub
mov
and
fdivr
mov
jno
adc
or
mov
push
xor
pop
dec
pop
(bad)
mov
ss
jp
adc
mov
fs
pop
pop
call
fcomi
sbb
stc
lods
lea
(bad)
icebp
mov
(bad)
cld
pop
or
movs
imul
ret
stos
inc
pop
nop
cmps
rcl
sbb
xor
pop
or
lock
call
out
int
call
hlt
mov
in
sub
(bad)
cdq
jne
stos
or
retf
add
data16
xchg
pop
(bad)
pusha
mov
fcomp
adc
add
jnp
dec
cs
cdq
outs
shl
popa
cmp
dec
leave
pop
out
add
icebp
push
inc
pop
and
xchg
push
int
xchg
lds
pop
inc
shl
ficomp
cli
shr
or
add
add
retf
mov
stos
pop
cmp
fimul
adc
ja
cwde
cmps
repz
push
cld
bound
adc
fwait
pop
jp
cmp
sbb
sub
inc
sbb
shl
cmp
jne
mov
jb
movs
stos
fld
call
out
pop
add
dec
sub
es
mov
pop
and
mov
rcr
jl
jne
sub
lock
dec
imul
and
adc
xor
int
mov
in
mov
jle
sub
scas
mov
xchg
ficomp
dec
and
or
cdq
call
scas
jmp
out
push
sbb
push
sar
xchg
mov
retf
jnp
cmp
bound
enter
gs
(bad)
and
xor
cli
repz
mov
mov
inc
cs
(bad)
pop
xor
les
inc
inc
data16
stos
push
jge
(bad)
dec
push
pop
push
arpl
cmp
cmps
ja
dec
in
lds
inc
xor
adc
data16
or
lahf
outs
adc
cmps
test
and
lea
in
xchg
xor
adc
shl
pop
jge
pusha
outs
mov
xchg
sbb
iret
test
mov
popf
inc
push
out
test
dec
xor
lahf
aad
push
shl
dec
cmc
jmp
dec
mov
jae
jmp
adc
sbb
inc
inc
and
movs
(bad)
mov
mov
mov
pushf
test
mov
in
cli
sbb
hlt
call
sub
pop
mov
push
sahf
lea
mov
and
fwait
mov
mov
pop
jnp
test
repz
nop
cmps
in
pop
mov
jg
dec
cmp
aam
(bad)
pusha
mov
inc
neg
ins
das
sbb
xchg
push
mov
gs
pop
pop
mov
ja
in
inc
ret
or
inc
lea
xchg
test
cmp
dec
jae
ins
sub
fldenv
adc
out
lea
jmp
dec
ret
dec
xchg
fld
push
jecxz
xchg
fucomip
push
pop
shl
mov
lock
imul
and
jmp
pop
loopne
mov
movups
mov
jb
adc
fsub
je
xor
mov
xchg
(bad)
int
or
xor
dec
xor
popa
or
scas
ins
(bad)
idiv
imul
push
sbb
lods
adc
jmp
jmp
push
add
cmp
and
fwait
inc
mov
dec
push
mov
mov
ror
sbb
out
movs
mov
pop
out
mov
jae
dec
mov
scas
lea
les
cmps
repnz
fs
sub
dec
xchg
loope
dec
xor
pushf
fist
xor
xchg
pop
es
shl
xchg
and
daa
dec
push
stos
sbb
sub
push
and
lds
mov
mov
jnp
enter
push
leave
and
add
cld
sub
das
ds
repnz
or
leave
nop
mov
dec
pop
pop
and
ins
outs
call
test
jo
imul
cmp
test
push
pop
or
movs
and
or
adc
out
fiadd
and
stos
cmp
push
mov
popf
mov
pop
push
add
or
cmp
lods
mov
or
call
arpl
test
mov
cmc
loope
fldenv
adc
and
sar
aaa
into
pop
sbb
test
pusha
dec
mov
and
xor
test
push
and
dec
ja
xchg
lahf
sub
mov
jle
fs
fisttp
adc
sbb
imul
push
cs
mov
push
fcom
sub
out
(bad)
add
xor
push
xchg
xlat
mov
js
ret
popa
mov
nop
pushf
jo
sbb
jge
inc
mov
jmp
sub
cmp
loopne
xchg
ror
lahf
imul
out
lods
adc
(bad)
movs
fwait
sbb
call
adc
or
mov
mov
adc
rcl
jle
rcr
lock
stos
mov
and
sbb
rcr
or
out
cmp
pop
js
sub
enter
fsubr
jnp
pushf
(bad)
lea
loop
loope
rol
mov
jmp
retf
test
jmp
xchg
push
mov
sbb
sbb
jg
dec
cmc
inc
pushf
retf
inc
int
push
aad
sbb
mov
(bad)
cmps
xchg
or
in
(bad)
mov
sbb
push
mov
out
push
dec
inc
mov
mov
(bad)
div
sbb
sbb
icebp
cmp
pop
loope
adc
fdivr
icebp
int
and
inc
and
pop
jecxz
adc
stos
les
inc
mov
dec
sbb
cmp
jge
mov
inc
mov
fild
sub
into
xlat
jo
fsub
aaa
scas
scas
inc
das
mov
loope
or
cmp
cmps
push
add
add
mov
popf
lods
mov
nop
dec
sar
mov
add
bound
clc
retf
aaa
and
jnp
cmps
pop
daa
nop
out
js
(bad)
repnz
int3
std
and
imul
push
outs
mov
jbe
push
sahf
bound
jle
cmps
sub
(bad)
es
fistp
ins
xlat
out
xchg
inc
movs
sar
inc
push
inc
mov
push
aam
leave
clc
sub
pop
pmuludq
iret
jl
cmp
or
int
fidiv
inc
lods
rcl
push
dec
call
js
arpl
lods
cdq
repz
pop
jmp
(bad)
int
(bad)
(bad)
repz
and
jmp
sahf
imul
inc
pop
cmp
repnz
je
and
jo
add
pop
scas
mov
sbb
cld
je
jg
dec
cmp
xchg
jns
(bad)
cmps
call
icebp
shl
jnp
aaa
jae
mov
push
movs
pop
inc
hlt
dec
(bad)
(bad)
sbb
lahf
xor
push
mov
es
loope
push
sub
cmp
shl
scas
dec
mov
dec
in
fisub
mov
inc
cmp
aaa
adc
adc
jo
ja
cmps
mov
lods
sub
mov
cmps
leave
cli
cld
jg
int
push
and
out
hlt
aaa
jno
cmp
inc
es
or
push
xlat
xchg
sub
pop
in
and
ds
adc
push
std
or
mov
jne
pop
ja
stc
cmp
cld
and
mov
adc
cmp
jge
imul
xor
fdivr
ins
add
push
xor
mov
aad
addr16
sub
push
js
in
add
cmp
lods
jmp
call
xchg
or
and
inc
pop
dec
cdq
inc
pop
pop
push
jnp
clc
(bad)
scas
push
in
xor
mov
ss
or
sbb
cmp
stos
stos
xor
call
mov
test
adc
enter
pop
mov
add
fild
movs
jae
xchg
and
fsubr
ja
pop
icebp
sbb
lahf
pusha
repnz
and
jle
jno
into
out
adc
jge
cwde
imul
and
mov
add
les
loop
dec
shl
inc
jge
jl
jp
mov
das
push
xlat
shl
xor
int3
repz
cmp
push
iret
lea
mov
repnz
pop
mov
push
aaa
and
add
clc
aaa
xchg
(bad)
xchg
push
into
loop
add
and
cmp
xchg
inc
mov
jo
leave
je
xchg
addr16
jnp
mov
or
out
stc
adc
push
sub
aam
mov
mov
out
ja
inc
repz
repnz
rol
bnd
add
jbe
add
push
scas
retf
lods
fadd
adc
sahf
imul
sbb
adc
ror
mov
mov
icebp
dec
push
cmp
and
push
xor
pop
cdq
mov
mov
xchg
xor
iret
loop
dec
test
aas
inc
xor
and
test
ins
jmp
sub
mov
cmps
sbb
jecxz
mov
jae
mov
mov
addr16
stc
cmp
push
fisubr
adc
popa
cmps
add
sahf
and
test
jnp
mov
or
lods
mov
jne
jmp
pop
scas
lds
test
mov
sub
xchg
and
in
loope
and
xor
or
adc
add
or
adc
lsl
dec
cmp
push
mov
call
push
div
icebp
jp
das
dec
imul
xor
jbe
call
call
mov
or
mov
sub
inc
pusha
ss
inc
cmc
mov
pop
test
jno
jns
mov
cmp
test
sbb
int3
push
popa
std
mov
dec
cmp
in
sar
call
push
cld
mov
push
into
jns
lods
jmp
or
outs
mov
lahf
xor
aaa
in
cmp
icebp
inc
aad
mov
into
dec
lds
es
cmc
js
js
and
lods
or
fild
rcr
mov
cmp
fwait
aad
jmp
cld
sbb
test
test
imul
shl
scas
inc
aam
jp
add
xchg
pop
ins
xor
in
popf
dec
jnp
sub
jb
retf
fisttp
int3
sub
jmp
test
lahf
jl
rcl
dec
inc
sar
mov
jae
popf
push
jae
jge
mov
lods
mov
rcr
fldenv
xchg
mov
dec
cmp
xchg
mov
mov
(bad)
xchg
mov
movs
mov
inc
xor
outs
shl
ja
mov
test
push
mov
aas
aas
loope
xchg
mov
mov
or
and
adc
mov
loop
leave
in
loop
mov
xchg
fadd
pop
lods
movs
in
cld
adc
mov
xor
and
stc
sub
cmp
and
aaa
imul
xchg
cwde
or
gs
inc
retf
and
icebp
aad
jns
or
rcr
adc
and
loop
xor
fadd
rcr
and
into
dec
test
push
push
aad
inc
cs
jae
lock
adc
hlt
cmp
cmp
pop
xchg
cmc
cmp
bound
add
add
or
push
adc
mov
adc
pop
or
ret
adc
and
mov
cdq
and
fs
mov
imul
or
ja
sbb
mov
(bad)
test
and
push
pop
aaa
pop
out
inc
jmp
push
xchg
js
stc
inc
mov
fild
mov
mov
mov
or
outs
sbb
ret
(bad)
mov
inc
inc
adc
and
pusha
xchg
pop
push
nop
fdiv
sti
push
stos
arpl
or
sahf
loop
mov
pop
ss
scas
mov
test
aas
arpl
vpxor
ret
cmp
push
pop
push
add
repz
push
into
lods
mov
xor
jp
les
in
xchg
and
sub
mov
ins
push
loopne
jp
xor
add
enter
adc
pop
aas
fidivr
xchg
aaa
(bad)
sbb
mov
clc
mov
or
dec
cmp
jbe
shl
pop
push
mov
rol
xchg
out
pop
push
sar
mov
outs
stos
(bad)
xor
pop
repnz
dec
adc
pop
mov
ins
rcl
(bad)
aad
xor
xrelease
loop
cwde
int3
inc
and
sbb
pop
pop
mov
adc
cdq
sub
inc
ret
into
cmc
jmp
test
test
pop
ret
loopne
jae
jmp
fcomip
mov
cmp
ds
and
mov
sbb
aas
and
mov
out
push
mov
dec
imul
es
call
int
jmp
jecxz
repz
jge
test
stos
ficomp
push
add
int3
or
daa
dec
push
dec
mov
int
stos
adc
ret
jg
adc
(bad)
sbb
and
xor
add
je
sbb
jb
mov
push
or
je
mov
daa
pop
lods
jnp
sub
inc
lds
movs
leave
cmp
mov
xor
or
je
test
pop
popf
in
bound
mov
jno
push
ins
push
push
push
nop
je
cmp
inc
adc
xchg
push
ja
int
aad
jnp
fild
cmp
mov
xor
std
lock
in
sub
push
ror
aaa
out
inc
loopne
and
(bad)
loopne
or
jne
or
pop
fild
xor
ret
lahf
inc
lahf
jmp
not
clc
push
inc
cli
fxch
mov
sti
popf
lods
or
hlt
call
mov
mov
imul
stc
pop
add
push
mov
(bad)
call
inc
sbb
retf
test
or
xchg
lods
mov
and
je
mov
xchg
mov
in
jmp
inc
shl
adc
sub
ja
xor
movs
test
add
mov
mov
xchg
lea
cmp
cdq
out
arpl
mov
mov
mov
sbb
pop
mov
cmp
popa
(bad)
fisttp
cwde
xchg
loopne
(bad)
lods
xchg
add
xchg
mov
push
in
and
movs
fild
jl
cwde
push
adc
or
add
stos
add
dec
lea
stos
stc
je
cmps
mov
mov
test
dec
aam
mov
shr
clc
dec
leave
inc
jl
sub
mov
int
sub
or
movs
push
sub
xor
jl
stc
adc
call
mov
mov
dec
fwait
das
les
mov
push
(bad)
call
adc
jmp
fcomp
enter
cmc
cmp
pop
ss
add
addr16
mov
jno
xchg
push
rol
xor
xor
outs
add
(bad)
nop
inc
mov
dec
in
jno
into
std
fcmovb
xchg
daa
ficomp
fwait
ret
jmp
dec
pop
add
outs
jg
add
mov
xor
jg
leave
and
jnp
mov
mov
daa
scas
pop
push
popa
dec
call
movaps
xor
lock
icebp
shl
fs
scas
repz
rcr
les
sbb
jecxz
dec
les
(bad)
int3
hlt
imul
jle
inc
jnp
frstor
pop
cli
stos
dec
cmp
inc
idiv
adc
lahf
xlat
sub
(bad)
mov
push
lods
dec
pop
sbb
mov
daa
push
loope
adc
(bad)
idiv
frndint
adc
push
cdq
cmc
xchg
xchg
adc
inc
xlat
mov
mov
sub
pop
enter
lahf
rcr
add
inc
inc
sbb
push
mov
sbb
mov
jecxz
xor
pushf
sub
test
adc
push
pop
mov
hlt
mov
je
ins
movs
dec
(bad)
cmc
pop
lahf
jmp
cwde
fsub
push
push
out
add
mov
inc
data16
ror
(bad)
mov
test
dec
mov
ret
mov
xchg
mov
push
test
mov
into
enter
pop
adc
not
test
imul
cmp
js
jmp
arpl
cmp
pop
clc
mov
cmp
sbb
xor
ret
cmp
repnz
or
mov
(bad)
jae
loope
or
inc
stos
xor
outs
cmp
mov
mov
add
mov
into
xor
sub
sahf
and
test
shl
cwde
(bad)
pop
stos
ins
stos
cmp
xchg
arpl
or
shl
loope
add
loopne
xchg
pop
fistp
cdq
fwait
and
xor
scas
gs
sub
dec
sub
cmp
in
or
sti
push
out
add
cmp
adc
ret
and
mov
mov
out
push
jecxz
scas
pushf
int3
mov
mov
sub
cmp
add
add
std
push
mov
sbb
and
aam
mov
hlt
xchg
fsubr
scas
sub
ret
push
cwde
mov
imul
in
xlat
xlat
and
int3
cmps
loop
icebp
cmp
or
fsubr
or
daa
push
jle
jmp
jb
popf
lea
sub
xchg
mov
lods
std
push
(bad)
and
or
add
push
xchg
pop
dec
hlt
mov
mov
mov
adc
pusha
dec
stc
fistp
push
pop
call
in
or
cmp
add
inc
jl
aas
repnz
adc
adc
addr16
jmp
cwde
(bad)
xchg
in
and
dec
cmp
mov
arpl
jnp
lds
dec
add
ret
sbb
sub
pop
aaa
aad
pop
add
push
xchg
lock
sub
div
hlt
in
nop
stc
loopne
shl
mov
or
xchg
imul
xlat
pop
add
jno
sbb
xchg
call
outs
int
mov
pop
fsub
jecxz
mov
out
and
fwait
stos
sbb
ja
or
jle
sbb
push
je
rcr
pop
sti
lea
mov
or
jne
cmc
cmp
(bad)
push
jmp
adc
xchg
xchg
fistp
sbb
jmp
stos
test
sbb
addr16
pop
cmp
jno
bound
cmps
xchg
jno
dec
mov
stos
adc
bnd
cmp
lds
xor
leave
cmc
(bad)
(bad)
int
(bad)
add
(bad)
push
mov
adc
jns
and
mov
inc
jns
jae
ficom
shr
aam
xor
mov
cwde
mov
pop
loop
jnp
pop
shr
rcl
pop
or
aad
fist
loope
cmp
cmp
(bad)
mov
pop
test
and
mov
das
xchg
pop
mov
lea
lods
mov
test
frstor
cdq
pop
mul
add
sub
jp
or
aas
or
fwait
mov
arpl
pop
jno
(bad)
les
add
dec
pop
inc
in
dec
push
mov
bswap
in
mov
mov
sbb
xchg
adc
push
movs
std
addr16
mov
push
in
mov
test
aaa
mov
mov
ret
pop
xor
repnz
in
push
mov
jnp
xchg
fidiv
in
aad
ins
icebp
mov
imul
sbb
push
rol
rcr
pop
push
bound
test
lods
dec
fsubr
call
lds
sti
out
jge
ss
popa
mov
pop
inc
push
push
cs
cmps
(bad)
popf
add
xchg
test
dec
inc
mov
dec
xchg
xor
cmp
addr16
(bad)
out
(bad)
cmp
jnp
adc
ds
test
inc
and
ror
inc
cmps
adc
ss
adc
sbb
pop
loop
jne
sub
call
push
inc
sbb
jno
dec
lea
and
jno
cmc
nop
pop
cmps
adc
pop
sub
pop
push
lock
mov
daa
lock
es
mov
cld
out
cs
dec
jnp
dec
jl
fidivr
loope
or
jb
mov
dec
jmp
push
push
repnz
dec
sbb
adc
push
or
cwde
aam
sbb
repz
jno
pop
cmp
cdq
pushf
sub
dec
std
out
movs
movs
mov
add
sbb
inc
aas
or
call
adc
and
push
enter
int
shl
mov
mov
sub
mov
pusha
js
mov
inc
pop
jae
and
sub
inc
mov
mov
mov
ret
movs
mov
aaa
fdiv
jns
xor
add
imul
stos
pop
neg
mov
leave
cmps
add
add
imul
lahf
mov
mov
xchg
lds
mov
aam
push
sub
je
or
mov
sbb
outs
xor
jp
inc
cmp
aas
test
and
shl
int3
inc
xor
push
cmp
lods
push
movs
dec
jle
imul
push
movs
xor
adc
fst
sub
pop
push
rcr
jb
and
sbb
push
mov
push
stos
stos
push
in
or
cli
or
es
pusha
es
dec
sub
xor
inc
pop
mov
test
push
mov
mov
jg
(bad)
pop
aaa
jmp
cmp
out
pop
ss
xchg
mov
ins
sahf
popf
sub
fsubr
dec
sub
cmps
jo
dec
xchg
or
test
push
enter
les
jbe
push
(bad)
fld
inc
mov
adc
nop
sbb
jo
dec
sub
xchg
xchg
ja
fstp
adc
pusha
or
and
push
mov
jg
and
xchg
add
retf
sbb
div
shr
sahf
push
or
push
aad
out
mov
adc
dec
mov
mov
shl
outs
adc
pop
gs
lods
jne
jecxz
lds
mov
add
fadd
cmps
push
mov
push
jg
add
test
pop
push
in
(bad)
and
cmp
add
mov
jmp
mov
xchg
or
bound
add
dec
mov
or
les
jae
or
mov
repz
inc
mov
mov
or
add
jmp
mov
and
pop
xor
popa
add
adc
pushf
sar
adc
push
add
mov
imul
outs
ds
cmps
cld
stos
sub
push
pop
sbb
adc
es
jne
jae
inc
aad
shr
sbb
(bad)
out
sbb
test
push
pop
stc
int3
or
pop
add
pop
mov
test
dec
nop
sbb
inc
push
push
jmp
aam
iret
packsswb
push
inc
or
in
cs
sbb
test
mov
ja
push
ins
sbb
mov
or
jb
not
push
les
inc
dec
add
push
dec
fst
aad
ja
pushf
mov
imul
int
or
je
xor
adc
repz
mov
ins
fcom
and
in
daa
sub
cmp
jae
cmp
fwait
sbb
sbb
stc
jp
enter
mov
ret
mov
and
mov
and
icebp
outs
scas
std
sbb
movs
cmp
xchg
dec
cmc
callw
(bad)
cmp
ds
popa
inc
pop
fbstp
mov
enter
jp
cld
mov
lea
adc
add
arpl
dec
add
cmp
shl
or
mov
jbe
cmp
mov
ins
sub
inc
cs
add
add
adc
and
lods
mov
fiadd
dec
enter
and
dec
dec
add
cwde
out
adc
sbb
jbe
icebp
push
mov
(bad)
lds
test
fidiv
adc
dec
rol
push
outs
popa
icebp
loope
inc
and
pop
push
das
push
and
dec
push
adc
stos
dec
pop
mov
and
xchg
add
es
ror
mov
out
out
nop
xor
and
xor
push
loope
cmps
retf
adc
test
mov
adc
out
dec
repnz
sahf
sbb
push
popa
push
cmp
xchg
push
mov
lahf
mov
dec
and
adc
adc
jno
jmp
test
out
push
dec
cmps
aas
repz
daa
add
pop
push
dec
retf
sub
xlat
mov
adc
sub
les
leave
push
jmp
scas
add
fs
push
nop
pop
xchg
aaa
mov
stos
jb
dec
test
enter
in
pop
jge
push
dec
sbb
fiadd
xchg
xor
bound
xlat
and
fisttp
jo
sbb
add
dec
sub
clc
arpl
cmc
cmp
ds
push
test
jle
xchg
call
push
call
adc
mov
mov
mov
xchg
dec
dec
mov
dec
das
dec
jae
add
and
sbb
adc
loopne
jae
out
pusha
mov
lea
mov
popf
icebp
xchg
mov
in
or
jnp
add
popa
lods
ja
sbb
xchg
jnp
ja
mov
mov
test
sti
add
ins
ss
fdivr
aad
sbb
(bad)
cmp
repnz
fdivrp
pop
jae
pop
outs
and
or
inc
jle
inc
mov
dec
(bad)
mov
leave
mov
sub
mov
or
dec
push
les
add
je
shl
push
jnp
lahf
scas
imul
sbb
pop
ficomp
mov
jae
ret
test
mov
pop
shr
jno
shr
pop
stc
out
sub
loopne
jge
lock
or
mov
inc
ss
or
xchg
xor
adc
xchg
dec
xor
icebp
mov
push
ficom
sbb
cli
adc
mov
scas
dec
pusha
add
outs
lahf
push
int3
rcl
in
cmp
cdq
fs
int
cli
out
adc
shr
(bad)
daa
ret
aad
xor
xor
mov
(bad)
push
mov
mov
mov
xchg
push
dec
cmp
add
fdiv
test
xchg
les
(bad)
cmps
cmp
addr16
push
add
syscall
in
in
inc
sub
adc
adc
bound
push
xor
test
ret
xchg
mov
jmp
cmp
inc
into
adc
jecxz
sub
mov
in
xchg
lods
in
neg
jae
sbb
ror
(bad)
loop
add
cmp
push
adc
pop
(bad)
scas
xor
gs
mov
cdq
sbb
cmp
add
dec
sub
push
sub
or
ds
xchg
pop
retf
je
mov
mov
nop
sahf
mov
and
(bad)
cmp
add
ins
cmp
jns
or
into
mov
sahf
std
pop
and
dec
xchg
leave
cmp
push
call
push
pushf
pop
dec
stos
rcr
push
cmp
mov
test
xchg
push
push
cmp
sub
mov
mov
retf
js
imul
mov
sbb
mov
jge
dec
sbb
sbb
cmp
pop
dec
fnstcw
rcr
adc
jne
and
sbb
js
inc
adc
sbb
push
jmp
mov
lods
xchg
xchg
mov
dec
sbb
push
cmp
add
mov
mov
test
and
mov
adc
mov
or
sbb
jbe
jmp
mov
cmp
or
stc
inc
pop
xchg
dec
and
dec
int3
inc
pop
jmp
push
mov
shl
stos
call
cdq
xor
adc
aaa
js
mul
add
push
sub
cwde
shr
jmp
ret
jmp
inc
popf
out
ret
call
pop
out
stos
and
retf
inc
or
shr
in
inc
mov
in
aam
mov
push
scas
test
mov
icebp
stc
rol
pop
push
xchg
pushf
pop
(bad)
ins
popa
mov
mov
movs
mov
aaa
add
sbb
fwait
and
dec
jge
bound
das
sahf
jmp
popf
inc
jg
sub
jmp
sbb
push
xchg
bound
int3
sbb
lock
cmp
rcr
(bad)
or
and
pushf
or
div
(bad)
js
mov
movs
mov
jmp
and
dec
mov
cld
or
xlat
sub
xor
scas
adc
mov
jae
mov
push
popf
mov
dec
lea
out
aad
leave
mov
je
adc
xchg
jmp
push
jno
jecxz
sar
leave
add
cs
xor
or
clc
or
scas
mov
or
loop
daa
(bad)
stos
pavgb
lods
dec
outs
in
sbb
sub
mov
mov
sbb
cmp
cmp
jmp
and
adc
or
jl
jns
in
push
icebp
inc
rol
dec
mov
mov
fcomp
ins
sbb
mov
stc
dec
pop
push
ret
pop
call
test
mov
xchg
sub
sbb
dec
shr
test
xchg
push
or
jb
pop
cmp
mov
or
mov
dec
and
mov
dec
jo
push
scas
mov
push
cmp
aam
pop
mov
clc
pop
lahf
nop
xor
jp
es
idiv
inc
or
mov
jle
fsubp
jns
repnz
jl
cmp
add
pop
sbb
push
rol
les
shr
repnz
xor
jle
iret
loope
enter
dec
aas
mov
pop
xchg
sahf
mov
mov
or
icebp
or
jcxz
dec
dec
(bad)
out
mov
xor
sahf
cld
push
(bad)
jge
xchg
inc
sti
push
pop
sbb
scas
mov
(bad)
aas
push
or
xor
fldenv
lods
add
xchg
or
push
xchg
mov
fld
pop
xchg
int3
mov
push
fidivr
pop
(bad)
and
rol
aaa
cs
fwait
sub
(bad)
ja
or
jle
(bad)
movs
imul
xchg
scas
fiadd
dec
cdq
leave
cmp
push
fadd
dec
inc
in
fdivp
ud0
(bad)
jnp
lds
div
push
and
call
sub
cmp
std
push
(bad)
movs
mov
lock
sub
nop
mov
fdivr
daa
or
or
call
adc
xchg
push
fadd
push
shl
hlt
mov
cmp
retf
data16
add
cmp
aad
jo
jne
inc
cmc
rcr
or
ret
mov
and
push
sbb
outs
(bad)
xchg
mov
sbb
jmp
xchg
sub
(bad)
loop
dec
push
fidiv
sub
imul
sub
sbb
pop
push
or
push
out
shl
(bad)
iret
pmullw
cmps
outs
leave
lds
sti
out
adc
inc
push
and
icebp
lea
fwait
mov
adc
jbe
inc
test
or
(bad)
xlat
dec
and
shl
mov
xlat
pop
aam
repnz
in
fsubr
pop
fisubr
pop
jp
in
mov
xchg
add
jl
push
shl
pop
je
push
sbb
idiv
repnz
fsub
xchg
mov
dec
sbb
movs
jl
pop
xchg
adc
adc
clc
(bad)
ret
or
inc
jno
and
dec
cld
adc
lds
mov
in
out
aas
mov
inc
mov
cdq
jmp
mov
data16
jae
outs
ss
in
jbe
dec
fimul
sbb
xchg
push
mov
rol
mov
push
fcmovbe
retf
es
xor
call
int3
ret
cs
test
lahf
add
fimul
out
cs
sbb
jmp
cmps
push
push
iret
loop
out
aas
imul
inc
push
out
jmp
mov
adc
jg
stos
dec
scas
movs
add
dec
jge
dec
mov
mov
jno
cwde
sub
cmp
inc
pop
mov
pop
jns
add
outs
lahf
(bad)
div
cmp
(bad)
push
(bad)
pop
call
nop
sub
jecxz
ret
stos
imul
push
inc
stos
add
or
push
std
push
mov
ja
push
test
mov
shl
xchg
std
sbb
pop
lods
iret
xor
dec
pop
jmp
(bad)
into
sub
add
pusha
sbb
cld
sbb
fcomp
xchg
add
add
sub
adc
ss
jmp
jmp
adc
outs
dec
or
aas
ret
fld
(bad)
in
sbb
cmp
xchg
mov
rep
mov
jmp
dec
bound
inc
xor
and
dec
jecxz
xchg
movs
xor
int
pop
test
mov
mov
movs
pop
(bad)
mov
xchg
lock
and
hlt
mov
adc
mov
les
add
jmp
mov
in
inc
sbb
mov
(bad)
sub
cmc
out
or
cmp
ins
adc
loop
jge
adc
mov
dec
les
mov
push
sar
shr
xor
and
add
test
aad
div
mov
pusha
(bad)
mov
popf
cmp
sti
test
call
cmp
mov
jp
push
lock
jmp
test
imul
pop
fisttp
test
scas
mov
movs
cs
imul
pop
test
leave
sub
xchg
push
inc
int
cmp
cmp
leave
mov
sbb
push
rol
ins
mov
in
push
and
xor
stc
pop
and
cmp
mov
dec
sbb
(bad)
sub
outs
sbb
test
jg
int
mov
sbb
xchg
xor
adc
out
push
jmp
and
test
push
inc
into
mov
test
lds
enter
fisttp
icebp
cmp
out
in
mov
and
mov
inc
mov
daa
icebp
arpl
or
jl
popa
jmp
inc
call
fld
sub
les
sti
push
das
add
jg
adc
std
mov
cld
lods
dec
movs
xchg
fwait
mov
mov
cs
push
dec
pushf
or
iret
lds
mov
push
in
ds
lods
fcomip
jo
jne
aad
lods
dec
jge
cwde
enter
(bad)
cmp
call
jb
movs
jg
and
jne
repnz
xchg
push
lahf
(bad)
rcl
aas
mov
sub
int
sti
mov
in
std
bound
pop
cdq
sahf
adc
mov
lods
les
loopne
lods
(bad)
or
je
mov
cmp
fwait
adc
push
ins
leave
mov
stos
jnp
push
pop
dec
jl
pop
hlt
arpl
dec
adc
cli
push
call
dec
and
jno
into
mov
sub
sub
loop
pop
pop
scas
movs
pop
inc
repz
test
out
in
mov
arpl
(bad)
cmp
outs
ins
adc
xor
loop
push
sbb
adc
jo
mov
pop
mov
or
cmp
pop
jecxz
enter
call
in
pop
pop
in
rcr
mov
ret
push
and
js
inc
push
fmul
pusha
push
imul
popa
adc
xlat
lea
std
clc
push
jnp
adc
pop
xchg
out
(bad)
fist
in
mov
cdq
mov
test
in
dec
ja
scas
imul
jb
adc
sub
neg
call
movs
in
dec
jbe
les
(bad)
ds
sbb
xchg
dec
dec
pop
push
stos
(bad)
or
mov
out
pop
(bad)
mov
sub
mov
sub
push
das
(bad)
pop
and
cdq
xor
add
xchg
or
and
ficom
scas
xor
hlt
daa
loopne
cli
mov
movs
push
push
or
bound
adc
adc
inc
loope
popf
add
scas
dec
aad
or
fild
(bad)
pop
adc
shl
jmp
cmp
sub
sub
popf
lahf
aam
xchg
mov
add
retf
xchg
inc
jge
xor
(bad)
imul
imul
mov
repnz
cmp
jo
aas
jmp
iret
repz
or
por
push
out
mov
outs
dec
imul
or
sbb
dec
xchg
xchg
ficomp
pop
sub
adc
xor
cmc
fsubp
mov
stos
popf
retf
imul
arpl
xchg
pop
xor
jge
mov
inc
ja
jno
call
pop
lea
imul
(bad)
fist
fsubr
pop
(bad)
clc
in
lahf
call
xor
and
jns
aas
mov
aas
cld
mov
mov
or
cmp
test
fsubr
or
cdq
sbb
sub
jp
jmp
loopne
out
add
das
push
sbb
jb
les
cld
out
into
cmp
outs
inc
lahf
add
sbb
in
push
pop
ins
ja
sub
dec
jg
push
or
mov
das
out
mov
xor
aas
jge
movs
cs
(bad)
mov
mov
xor
dec
pop
shr
sbb
js
mov
shl
test
repz
inc
loop
sub
xchg
pop
rcl
cmc
pop
lods
sbb
loopne
ficomp
inc
add
icebp
inc
iret
sub
dec
es
shl
and
sar
inc
data16
daa
imul
lods
pushf
shl
popf
xlat
ss
jge
jg
xor
pop
fnstcw
push
mov
push
jge
stc
pop
js
adc
test
(bad)
cmp
adc
cmps
lds
mov
cmps
mov
sub
ds
sbb
cmp
clc
xor
in
cli
adc
out
xchg
movs
dec
pop
or
pop
sub
jg
(bad)
adc
iret
or
add
fbld
adc
pop
inc
div
jmp
push
sbb
sub
movs
fwait
mov
add
push
inc
mov
imul
jae
push
mov
mov
push
stc
sahf
push
imul
cld
imul
sbb
push
aad
pop
retf
or
shl
jecxz
mov
mov
sub
hlt
cmp
mov
or
(bad)
cmp
ficom
mov
sahf
ret
push
jle
(bad)
jb
clc
mov
call
jae
int3
mov
std
add
rol
mov
(bad)
pop
or
jg
and
push
jmp
clc
xchg
cmp
push
push
push
push
adc
xchg
imul
add
out
fwait
bnd
inc
cmp
shr
ret
sbb
mov
stc
mov
push
pop
push
mov
xor
add
mov
push
add
out
or
je
jg
(bad)
fimul
jnp
fist
stos
jge
gs
or
push
lods
pop
int3
repnz
lods
fwait
in
retf
or
pop
sbb
pop
jmp
(bad)
lods
pop
adc
cli
xchg
dec
mov
out
inc
pop
jmp
push
add
movs
lock
mov
outs
lods
mov
bound
fstp
pop
stos
shl
loop
pop
clc
movs
mov
lods
repz
cdq
xchg
cwde
cmp
push
cli
fisttp
dec
push
test
sbb
dec
in
or
inc
adc
movs
js
cmp
fs
push
and
int
sub
pushf
jg
lock
repz
mov
add
mov
xchg
popa
ins
or
es
jmp
ret
fcmove
dec
shr
mov
fs
pusha
adc
in
or
dec
sub
imul
cmp
rol
gs
dec
xor
loopne
add
pop
pop
mov
sbb
ret
cmp
add
sub
cli
push
push
outs
xchg
jg
add
lods
movs
pop
cwde
push
je
xlat
xor
mov
push
outs
jbe
fwait
test
out
test
fadd
inc
out
retf
fst
sbb
dec
lea
bound
hlt
sub
loopne
inc
adc
lods
mov
bt
lods
jmp
ret
and
xchg
and
sbb
adc
inc
outs
and
repnz
dec
pushf
pop
call
add
pop
mov
stos
and
xor
out
(bad)
lfs
inc
cmp
pop
mov
jle
or
cli
push
push
sub
loopne
jl
jnp
cmp
mov
jae
lea
jns
sub
fdivr
out
arpl
dec
pop
daa
out
mov
movs
dec
mov
push
mov
push
clc
pop
outs
outs
pushf
pop
dec
test
clc
mov
pop
sti
mov
mov
ds
jae
test
xchg
push
repz
dec
add
in
add
jmp
jns
jne
and
inc
push
add
hlt
mov
jae
mov
arpl
ss
loope
fs
test
aaa
inc
push
in
aad
push
icebp
icebp
nop
sub
cld
pop
(bad)
xchg
ror
pop
mov
mov
out
daa
out
push
pop
ds
xlat
sbb
lahf
lods
cmp
sub
dec
nop
test
arpl
cdq
add
sti
dec
adc
pop
lahf
and
sub
push
jg
aad
xchg
lahf
inc
jp
xchg
xor
cld
mov
loopne
and
jnp
cmp
cmp
addr16
cs
xchg
je
push
fisubr
fcmovu
das
bound
jg
push
jge
jmp
icebp
xchg
mov
dec
out
dec
icebp
lahf
and
js
pop
addr16
call
loop
sbb
jnp
aaa
cmp
nop
pop
popa
xlat
out
fdivr
ret
adc
int
les
ror
outs
leave
ins
popf
mov
cmp
aaa
jmp
jo
enter
pop
and
mov
movs
(bad)
inc
pop
pop
cld
push
jae
jae
mov
in
xor
cmp
or
mov
xchg
(bad)
mov
jge
mov
aam
icebp
mov
mov
jecxz
int3
loope
ds
scas
shr
jge
loope
neg
jae
push
push
test
popf
jnp
iret
(bad)
jne
cmp
rcr
mov
sbb
data16
sbb
cmc
int
popa
inc
pop
sub
sbb
pop
leave
cdq
(bad)
mov
add
inc
xor
test
icebp
outs
sti
pop
add
cs
dec
and
push
pop
rcl
jge
adc
lods
add
xchg
xchg
xchg
iret
in
add
cli
inc
bound
(bad)
adc
pop
cmp
mov
inc
mov
cmps
ss
ret
inc
ret
mov
mov
cli
xchg
fisubr
dec
push
arpl
xchg
sbb
dec
mov
shl
xor
dec
inc
aas
popf
cmp
xchg
adc
mov
je
lods
add
xchg
(bad)
inc
xchg
push
push
inc
add
sub
add
fs
or
fisttp
imul
jne
popa
lods
scas
lahf
xor
mov
xlat
adc
ficomp
(bad)
lea
rol
jne
pop
fnstsw
sahf
cmp
movs
xchg
cmp
outs
aad
push
inc
rol
rcr
or
fcom
xchg
and
mov
push
leave
in
pop
ds
and
fimul
cmovle
or
sbb
and
dec
mov
pop
ret
fs
jge
xor
(bad)
rcl
(bad)
(bad)
pop
sbb
mov
cmp
fmul
inc
xor
nop
aam
arpl
xchg
enter
cmp
ins
adc
pop
add
(bad)
jno
fwait
hlt
jp
(bad)
cld
stc
fdiv
mov
push
movs
pop
add
mov
mov
mov
pop
jmp
(bad)
retf
and
cmps
(bad)
div
push
ret
outs
sbb
jb
pop
xchg
xchg
imul
sub
iret
out
or
les
cmp
sub
push
call
mov
movsx
movs
shr
rcr
jl
push
xchg
gs
jl
lds
lds
jae
pushf
push
es
mov
pop
push
sbb
push
pusha
dec
jl
mov
lds
cmp
mov
or
in
shl
and
imul
aaa
adc
lods
fdivr
fs
les
pushf
int3
ficom
icebp
adc
xor
add
jne
imul
test
and
in
lods
sbb
lock
nop
das
loope
arpl
fisttp
(bad)
xchg
imul
sbb
fld
cmps
adc
retf
or
inc
pop
jb
jmp
stc
repnz
mov
cmp
ret
mov
add
lahf
inc
les
add
jne
cmp
ins
cmp
(bad)
retf
mov
push
sbb
cmp
adc
mov
dec
in
jp
add
rcl
test
cmp
pop
jne
pop
ins
add
sbb
add
imul
and
inc
jg
sti
add
jg
iret
jecxz
repz
jge
fld
data16
push
mov
out
addps
mov
push
(bad)
adc
push
bound
or
movs
sbb
pop
cmp
cmps
jb
(bad)
jmp
adc
sub
arpl
dec
pop
pop
sahf
or
mov
mov
and
jmp
inc
mov
sub
mov
jge
xchg
pop
mov
lock
dec
jae
pop
xor
mov
cmp
out
dec
xchg
xchg
xor
mov
pop
push
mov
dec
hlt
add
push
jb
arpl
out
out
es
jmp
xor
jo
mov
fst
xchg
xor
sub
adc
jecxz
and
dec
xchg
(bad)
fisttp
ficom
inc
pop
push
push
jo
mov
jno
dec
stos
jmp
dec
gs
adc
cmps
sar
sbb
fstp
adc
ins
adc
movs
and
cmp
jmp
sbb
nop
jb
add
jp
mov
and
push
pop
xchg
push
pusha
call
xchg
lock
sub
mov
fcmovnu
pop
pop
add
loopne
in
push
test
icebp
arpl
loope
ss
adc
fldln2
ds
lds
fnstenv
daa
pop
std
or
mov
(bad)
push
jg
jle
cmps
sbb
mov
repz
dec
xor
push
pop
mov
dec
mov
and
in
push
fistp
push
jnp
adc
adc
adc
test
cdq
(bad)
dec
jle
pop
add
lock
repz
fmul
or
and
retf
adc
push
aam
ins
aam
sub
mov
icebp
lods
pushf
lods
xor
push
(bad)
dec
lods
fistp
fst
cs
nop
pop
int3
les
xchg
cmp
sbb
ret
(bad)
push
loopne
cwde
mov
popa
xchg
scas
call
test
push
icebp
mov
jbe
inc
inc
cmp
xchg
sub
xchg
leave
push
mov
(bad)
lea
sbb
jno
out
cmp
pop
pop
mov
data16
pop
cmp
stos
daa
ins
and
repnz
inc
leave
nop
adc
xchg
and
pop
xor
rcl
pop
std
mov
test
dec
jmp
jp
lds
jecxz
sub
sbb
add
mov
movs
xor
dec
xchg
das
rcl
test
outs
movs
gs
int3
mov
icebp
fidivr
xchg
mov
dec
inc
jl
retf
dec
mov
repnz
inc
mov
nop
jb
out
leave
push
xor
xor
mov
(bad)
dec
and
scas
mov
out
dec
or
sbb
push
in
adc
daa
dec
or
nop
mov
mov
xchg
iret
jp
mov
push
outs
add
sti
rol
popf
adc
push
xchg
cmps
jle
sub
sbb
mov
sbb
nop
pop
out
ins
scas
jmp
sub
icebp
popa
inc
pop
mov
xchg
adc
retf
mov
lock
mov
js
push
sar
xchg
inc
(bad)
sbb
mov
mov
iret
jecxz
jo
and
cmp
xor
mov
dec
xor
sub
dec
movs
aam
cmp
ret
mov
(bad)
mov
jle
faddp
or
mov
arpl
inc
repz
cmp
stos
jae
out
cmp
sbb
xor
fwait
dec
sbb
dec
aas
lds
sbb
in
je
adc
scas
adc
adc
mov
bound
(bad)
fwait
out
into
lods
cli
inc
sbb
push
rcr
or
ja
or
movs
sbb
sub
nop
pushf
xor
jnp
test
dec
aas
push
push
imul
xor
je
mov
outs
add
mov
add
sbb
cmp
mov
sbb
cmp
pop
and
daa
cdq
out
xor
aas
outs
add
stc
das
adc
mov
ret
sbb
mov
in
push
sbb
xchg
shl
test
aad
mov
rcr
dec
sub
inc
xchg
xchg
daa
xchg
dec
push
and
and
dec
rcr
sub
popf
push
out
jecxz
or
xlat
push
and
add
rol
jnp
fsubr
xor
cmps
push
cli
div
cwde
pusha
fsub
jmp
(bad)
icebp
clc
jle
and
ror
sub
fsubr
adc
hlt
cmp
xor
loopne
adc
xchg
and
and
inc
sub
xchg
in
es
in
push
jle
lahf
push
sbb
jne
out
mov
call
aaa
sbb
ficom
mov
mov
mov
call
sti
jmp
inc
cmc
aam
cmps
sbb
call
pop
addr16
dec
xchg
retf
test
dec
imul
mov
sub
mov
mov
fiadd
pop
sbb
test
int
repz
dec
ret
test
add
or
popa
mov
push
inc
js
xor
sbb
icebp
and
jno
imul
dec
leave
adc
mov
dec
pop
shl
loope
xor
or
pop
and
sub
cmps
fcom
pop
jne
outs
xchg
xor
mov
jne
pop
sbb
jmp
jp
imul
pop
adc
mov
outs
push
add
cli
les
outs
xor
aaa
pop
cmc
dec
jmp
fisubr
mov
dec
xor
mov
das
ja
xor
imul
neg
cli
adc
and
pusha
int
and
int3
or
add
mov
mov
adc
or
xor
ins
movs
cmp
leave
mov
dec
ins
stc
ret
fldenv
xchg
mov
xor
stc
push
sub
ret
xchg
sbb
xchg
pop
mov
mov
push
inc
leave
idiv
add
xchg
movs
xchg
push
adc
cmps
cmp
push
sbb
xor
lods
adc
int
ret
pop
hlt
stos
je
mov
pop
xchg
pop
push
jno
cdq
push
ror
or
shl
sub
push
dec
fidiv
hlt
nop
lock
mov
push
adc
push
add
stos
inc
push
mov
popf
cmp
pop
sbb
xchg
gs
jecxz
xchg
mov
sbb
jb
in
or
cmp
cdq
adc
cmp
test
push
ret
jg
add
mov
pop
sub
add
sbb
(bad)
test
mov
mov
push
push
es
adc
add
xor
dec
bound
fs
adc
add
call
mov
add
div
xchg
jp
mov
fst
or
repnz
xor
mov
ja
sub
stos
lods
lds
xchg
or
dec
jg
push
out
jb
xor
cmc
inc
push
jecxz
mov
mov
loopne
lahf
mov
pop
cld
mov
dec
xchg
jmp
dec
mov
das
leave
test
mov
mov
int3
xchg
lahf
push
and
ja
push
xlat
sub
icebp
pushf
sbb
pop
inc
pop
test
(bad)
loopne
or
sub
and
push
pop
in
xchg
rcl
scas
loopne
sub
dec
lods
rol
lock
les
add
cmp
jb
cmps
pop
mov
(bad)
movs
xchg
sbb
test
fmul
mov
dec
in
inc
and
fwait
mov
inc
add
jmp
adc
inc
ret
arpl
pop
and
aaa
out
test
outs
scas
data16
xchg
push
fcom
(bad)
add
popa
push
mov
and
pop
ret
les
div
xchg
dec
jp
pop
mov
loope
aas
mov
sbb
pop
cmp
out
add
xchg
push
ret
ret
in
hlt
sbb
lods
stos
sbb
call
pop
and
xor
repz
(bad)
mov
mov
fistp
jo
xchg
sbb
in
call
xchg
in
std
(bad)
imul
or
aaa
into
jb
repz
or
mov
pushf
sub
inc
mov
clc
add
call
pop
stos
adc
gs
sub
sar
out
or
test
rol
sar
inc
cmp
sbb
xchg
arpl
adc
or
(bad)
mov
jnp
sub
mov
or
push
fnstsw
mov
iret
outs
add
daa
or
push
mov
inc
rol
push
sbb
and
fcomp
fwait
clc
sbb
retf
data16
jb
mov
in
xchg
push
dec
iret
lods
sbb
pop
ja
pop
jmp
cli
scas
js
jmp
aas
sbb
cmps
inc
rcr
mov
push
push
mov
jmp
jo
push
fbld
sbb
fist
mov
push
jg
add
stos
jp
or
xchg
pop
cld
dec
shl
lods
mov
out
dec
aaa
cmp
popa
rol
inc
or
cmp
gs
repz
arpl
sbb
outs
cmp
js
aas
xchg
jecxz
jbe
and
jo
icebp
xor
ss
mov
jle
rcr
fwait
in
add
mov
adc
sub
push
add
sti
mov
mov
out
push
dec
lods
scas
mov
pusha
jle
push
and
retf
dec
sub
(bad)
xchg
repnz
fild
sbb
inc
cmp
lea
leave
fidiv
fnstsw
jbe
outs
stos
sub
jno
ret
(bad)
ror
in
fsub
nop
movs
mov
adc
enter
xchg
fsubr
cmp
test
lock
jbe
push
cmp
or
add
ds
fsubrp
not
inc
mov
push
push
cmp
std
clc
push
jae
lods
shr
das
push
daa
in
xor
pop
stos
inc
jnp
mov
mov
pop
mov
sub
out
mov
inc
mov
es
add
movs
pop
add
push
cmps
mov
jl
out
mov
sub
dec
mov
adc
fcmovnbe
addr16
sub
inc
mov
(bad)
jns
rcr
push
stos
outs
pop
mov
mov
jle
mov
daa
ret
cmp
add
cmp
sub
mov
jle
dec
retf
ret
or
lahf
xchg
or
mov
push
cmp
add
jg
jnp
lahf
jns
cwde
xchg
nop
loop
xor
ret
push
xlat
jg
adc
or
cmp
pop
out
add
sbb
hlt
imul
(bad)
and
mov
std
and
jmp
fcomp
xor
lock
mov
clc
dec
(bad)
ret
cmp
jecxz
out
xor
push
mov
add
sahf
cmp
hlt
xbegin
jl
push
enter
test
sti
adc
dec
ds
mov
xchg
cmp
lahf
add
into
cmp
adc
fdivr
pop
data16
inc
in
lods
sbb
xor
int
mov
jno
pusha
pop
push
add
cs
ja
(bad)
sub
sbb
jne
push
retf
sbb
mov
jge
in
outs
cld
mov
add
(bad)
adc
mov
cs
clc
ror
mov
test
inc
ja
fidiv
sub
sub
jle
and
mov
pushf
icebp
rol
mov
in
mov
and
nop
push
ja
or
jp
icebp
adc
popa
test
mov
shl
or
push
out
jle
fcmovb
and
movs
or
sub
cmp
xchg
mov
pop
add
sbb
mov
cld
mov
sub
xchg
arpl
jne
sub
fldcw
adc
jae
sub
push
jmp
or
add
gs
or
sub
sahf
jae
sbb
out
pop
imul
(bad)
lods
lahf
inc
xchg
pop
in
pop
lds
loopne
jmp
out
outs
mov
pop
scas
mov
out
mov
fdivr
xchg
test
jmp
mov
pop
or
mov
adc
sub
test
push
sti
mov
mov
ins
pop
xchg
adc
jbe
push
out
add
pop
push
dec
aaa
adc
jno
bound
cmp
dec
popf
sub
cmps
fisttp
ja
retf
xchg
add
retf
inc
arpl
ror
push
mov
mov
xchg
(bad)
fst
movs
dec
mov
sbb
movs
push
pop
lock
xchg
ds
mov
retf
loope
es
hlt
fmul
(bad)
pop
inc
cmc
aaa
pop
retf
fcomp
lods
inc
and
adc
lahf
(bad)
pop
pop
sbb
mul
xchg
scas
movs
enter
or
fwait
cmp
in
push
dec
out
xor
into
hlt
rol
inc
sub
fadd
popa
xchg
add
or
data16
(bad)
jl
outs
std
cmp
jmp
in
jae
jns
aad
xchg
push
sbb
in
inc
test
pop
call
add
dec
xor
sbb
loope
dec
or
clc
pop
lds
adc
rcl
fcmovnb
mov
dec
push
sbb
pusha
cmp
arpl
add
leave
dec
sub
cmp
jle
clc
rcl
add
scas
mov
mov
adc
test
sahf
ss
(bad)
fsubr
cmp
or
add
xor
mov
test
mov
push
out
xchg
push
and
mov
push
adc
test
and
sub
mov
sbb
lods
fadd
xlat
retf
jecxz
fucom
push
mov
jg
add
(bad)
xchg
or
in
jg
jecxz
fsubr
xor
sbb
pop
inc
dec
sub
cmps
inc
adc
call
fiadd
sbb
cmps
gs
std
and
(bad)
ja
jg
xchg
sub
mov
enter
data16
mov
or
dec
ficomp
mov
jp
inc
cmp
pop
repnz
pop
sbb
in
cmps
adc
mov
mov
movs
dec
or
int3
repnz
jp
loopne
pushf
and
jno
std
cwde
std
or
(bad)
dec
adc
mov
sub
and
mov
mov
add
cmp
mov
test
(bad)
pusha
pop
or
(bad)
lods
sbb
pop
push
out
jno
push
cmps
dec
or
ss
jmp
(bad)
push
addr16
ss
lahf
mov
pop
xor
cmp
sub
mov
test
fstp
xchg
pop
sub
ror
pop
inc
or
adc
mov
lahf
jle
pop
lods
jmp
pop
pushf
(bad)
xchg
retf
test
fnsave
inc
(bad)
les
cs
jmp
adc
dec
out
in
add
pusha
push
sub
xor
call
loope
dec
mov
mov
add
push
mov
out
add
pop
jo
or
mov
xor
mov
loopne
enter
gs
and
push
nop
ret
fcomp
inc
dec
lods
pop
cmp
dec
pop
popa
push
lods
jge
js
sub
retf
dec
xlat
popa
cmc
mov
jno
cli
push
leave
mov
aam
or
inc
shl
das
and
xchg
mov
jp
or
cld
xchg
push
mov
add
dec
adc
stos
iret
inc
mov
and
add
push
cmp
jge
fisubr
call
cmp
jae
inc
sti
or
popf
in
pop
mov
adc
pusha
sbb
xchg
cmp
(bad)
xchg
(bad)
mov
sub
jbe
lds
xchg
adc
push
xchg
dec
stos
ret
pop
jmp
es
mov
(bad)
sbb
push
loop
lods
inc
mov
cmp
lods
xchg
js
push
dec
xchg
fwait
sti
or
xor
xchg
mov
and
push
ds
fstp
cmps
pop
mov
mov
icebp
(bad)
cmp
lds
shl
icebp
jg
pop
not
int
mov
sbb
pop
inc
std
not
inc
push
stc
(bad)
dec
rcr
and
sar
das
fsubr
xchg
(bad)
int3
pop
and
sbb
dec
inc
ja
mov
and
mov
adc
mov
mov
in
mov
or
lds
push
test
pop
jno
jl
xor
mov
fsub
movs
inc
stos
int
push
sub
(bad)
mov
imul
aas
jae
test
cmps
fs
lods
xchg
(bad)
rol
test
mov
push
aam
imul
and
mov
into
cmp
and
push
and
jnp
xor
adc
jg
aas
in
lea
ins
out
inc
adc
lock
cmp
or
aas
jmp
sub
(bad)
adc
dec
call
popa
loopne
push
not
xor
mov
fsub
test
add
pop
jge
mov
fdivr
mov
xor
das
xchg
ffree
mov
fcmovb
in
lods
adc
push
or
pop
call
xlat
dec
jle
inc
dec
inc
stos
lods
jbe
enter
or
jno
mov
js
xlat
adc
ja
int3
add
xchg
pop
sub
call
popf
or
aad
dec
adc
js
stos
push
add
dec
ja
mov
(bad)
js
retf
pop
xchg
jo
mov
xor
loope
lock
add
aaa
pop
jg
dec
(bad)
and
(bad)
fcom
into
or
icebp
inc
cmc
push
sub
or
push
inc
loop
mov
sbb
cli
add
mov
aad
call
lds
out
pop
rcr
(bad)
cmp
jge
jnp
int3
inc
jecxz
retf
in
push
jno
jmp
and
mov
mov
dec
or
mov
call
fld
mov
out
sbb
repz
jno
cmp
stc
mov
imul
cmp
sub
push
cmp
mov
mov
adc
xchg
mov
popf
test
repz
shr
sub
xor
je
jae
adc
sar
ret
(bad)
aad
mov
add
(bad)
sti
cmp
add
jmp
dec
pop
(bad)
call
dec
cmps
nop
adc
mov
dec
imul
sub
xor
xchg
mov
xchg
adc
popf
pushf
jge
mov
(bad)
out
fsub
xlat
add
mov
pop
push
test
std
push
or
mov
arpl
mov
rcr
dec
or
sub
sub
pop
adc
je
(bad)
sbb
mov
test
ins
add
and
shl
mov
xor
iret
or
shr
inc
jb
jo
ss
fld
push
es
int3
xor
sar
add
xor
inc
mov
dec
mov
leave
jmp
test
or
das
fincstp
adc
adc
aas
or
or
std
jg
push
arpl
sbb
fldcw
jbe
sub
call
jbe
rcr
test
and
jge
sbb
sub
in
sbb
push
xchg
mov
fldcw
mov
sbb
out
mov
mov
scas
iret
sub
psubusb
push
or
xchg
jg
sub
ja
xchg
js
and
pop
shl
cmp
cwde
scas
jmp
mov
test
popa
out
add
cdq
and
ins
pop
dec
adc
inc
loopne
dec
retf
xchg
lea
add
mov
ins
mov
pop
cli
fistp
out
call
or
xor
adc
test
push
iret
shl
popa
pushf
mov
bound
js
fs
mov
clc
idiv
adc
push
mov
fs
lds
aam
mov
pop
jno
sti
jmp
jo
cmp
mov
mov
xor
dec
dec
mov
jb
out
loopne
mov
mov
dec
inc
xchg
pop
lods
call
out
mov
scas
pop
jge
jbe
pop
in
mov
loop
sub
pop
and
mov
pop
sub
out
ds
pop
push
xchg
jl
jmp
sti
sub
mov
jmp
stos
xchg
xchg
cli
push
pop
dec
adc
shr
call
mov
add
ret
xchg
mov
pop
(bad)
add
xor
mov
inc
arpl
mov
(bad)
cmp
cmp
data16
add
sub
test
fnsave
jo
jecxz
sti
jns
mov
in
mov
xor
xor
hlt
mov
push
mov
xchg
imul
popa
jmp
jle
mov
adc
mov
ficom
dec
mov
icebp
cmp
pop
add
xorps
adc
cwde
inc
xchg
enter
sbb
enter
in
or
and
stos
inc
arpl
jp
mov
push
jno
call
mov
mov
pusha
inc
and
mov
(bad)
lods
fiadd
mov
mov
test
call
lds
stos
jmp
into
loope
pushf
scas
push
cdq
shl
cmovp
dec
and
lahf
fsubr
in
sti
cmp
fcom
out
shl
scas
sahf
mov
outs
enter
add
(bad)
mov
push
push
sub
in
sub
inc
mov
push
ficomp
not
sbb
or
jmp
cmps
in
jns
pop
adc
mov
stc
inc
jge
popf
aad
jnp
mul
mov
mov
cs
paddb
jns
call
pop
sub
jnp
call
scas
mov
out
or
xchg
cmp
popf
lods
jecxz
add
sbb
xchg
test
jo
sub
push
(bad)
jl
add
and
xchg
in
jl
test
test
xchg
pop
fcmovnbe
mov
xchg
push
mov
cmps
out
das
in
adc
push
mov
shl
call
cli
xchg
pushf
mov
mov
or
and
mov
adc
fimul
pop
std
ss
jle
call
and
or
bound
imul
cmp
mov
in
aas
mov
mov
dec
push
mov
fs
mov
jb
bound
xor
xor
xor
out
xlat
pop
je
jecxz
pop
mov
xchg
mov
sbb
or
cmp
imul
cmc
dec
jo
lock
(bad)
jo
mov
mov
xchg
stc
icebp
xchg
push
idiv
mov
shl
adc
hlt
or
repnz
test
mov
push
idiv
fistp
jmp
outs
mov
lods
add
ss
pusha
aas
ds
push
or
mov
pop
fcom
xchg
jg
mov
or
nop
test
jb
mov
cmp
jb
cmp
mov
loope
sti
scas
cs
jne
cs
sahf
cmp
mov
pop
mul
cmp
jmp
outs
dec
push
fwait
sbb
sbb
aas
fdiv
cli
lds
jb
and
mov
sub
sub
je
or
(bad)
mov
in
pop
add
mov
or
adc
xor
push
sub
and
js
mov
sub
inc
loopne
leave
xlat
dec
jl
and
add
mov
mov
cs
and
or
xchg
mov
jg
call
sub
or
rcr
pushf
push
pop
(bad)
and
cli
sahf
adc
arpl
xor
push
and
inc
inc
das
push
fild
test
sub
jo
push
mov
nop
ds
stc
jg
dec
aam
clc
js
(bad)
xlat
ror
sbb
dec
shr
ror
add
mov
sahf
pushf
sahf
pop
std
(bad)
fwait
cwde
sahf
xchg
push
inc
retf
xchg
mov
mov
test
add
cdq
ss
jg
push
cdq
mov
out
and
retf
shl
gs
xor
sbb
add
ds
call
push
mov
js
mov
pop
or
repnz
mov
pop
adc
xchg
imul
das
retf
popf
clc
movs
xchg
jo
xlat
push
mov
scas
or
rcr
shr
jno
loope
pusha
mov
imul
sbb
mov
sbb
test
sub
pusha
xor
sbb
arpl
ins
aad
push
pop
jae
inc
es
imul
lahf
pop
xor
xor
pop
mov
sbb
jae
mov
or
push
test
fcmovne
cmp
mov
dec
lds
pop
fisubr
cmp
(bad)
or
aad
push
cs
push
in
add
cmp
add
aaa
int
popa
jmp
jp
test
add
cmp
xchg
pop
add
jmp
ins
pop
cld
aad
push
mov
mov
out
dec
and
int
jbe
jnp
mov
fadd
jne
xor
dec
xlat
outs
call
js
sbb
leave
or
inc
or
(bad)
inc
ins
test
mov
cmp
repz
mov
lahf
imul
loop
inc
imul
movs
psllw
repnz
xor
and
cmps
fbld
mov
idiv
lds
test
adc
(bad)
push
inc
rcl
and
(bad)
pop
les
xchg
jno
pop
push
cmp
jp
adc
xor
aad
imul
loop
mov
inc
cmp
pop
fwait
jno
mov
mov
aad
sub
sti
adc
xor
rcr
daa
clc
lea
dec
ins
das
adc
sar
and
leave
inc
(bad)
pushf
daa
ds
pop
sbb
in
fwait
pop
out
add
push
pop
adc
hlt
pop
push
lahf
dec
fcom
inc
sbb
and
aaa
inc
pop
imul
xor
or
aas
inc
pop
or
mov
and
xchg
sar
xor
popa
aad
adc
in
xor
ret
mov
jmp
push
sub
mov
cmp
xchg
mov
xor
cmp
mov
rol
movs
push
lods
imul
(bad)
mov
mov
jcxz
rcr
movs
inc
or
jb
inc
mov
jnp
lahf
mov
loope
sub
into
inc
and
add
add
js
mov
sbb
in
mov
push
mov
fnstenv
aaa
pop
jmp
xchg
inc
push
mov
in
ds
inc
bound
sahf
and
imul
pop
or
or
pusha
jo
mov
loop
aam
pop
out
mov
into
pusha
shl
jmp
fs
xchg
add
push
lock
frstor
fidiv
mov
dec
jae
popf
mov
sahf
xor
xchg
rol
inc
jae
(bad)
ja
xchg
movs
mov
mov
cmp
punpcklbw
es
idiv
sbb
push
jmp
cmc
or
cmps
cmp
xor
pop
in
shl
stos
xchg
adc
dec
stc
aaa
dec
adc
fcmovb
push
or
(bad)
(bad)
jecxz
push
mov
adc
test
iret
dec
cli
jo
shl
mov
cli
jmp
mov
aaa
(bad)
je
mov
jle
sbb
fidiv
pop
mov
adc
xchg
and
shl
xor
addr16
fld
push
or
mov
repz
sahf
jae
push
fwait
out
mov
jmp
xchg
mov
cmps
aam
fwait
ret
fst
adc
int
xchg
int3
fmulp
das
adc
adc
ja
mov
push
adc
cs
pop
aas
pop
mov
in
movs
xor
lods
mov
cmp
int
add
adc
retf
mov
lds
sub
je
(bad)
idiv
clc
sahf
push
push
cdq
cld
pop
scas
les
mov
sub
into
adc
lea
sbb
mov
push
sbb
cs
pop
add
addr16
aaa
mov
xchg
cmp
iret
mov
(bad)
xchg
lods
xchg
inc
aam
aaa
cli
in
add
shr
and
mov
mov
or
xchg
or
mov
sbb
adc
mov
mov
ffree
movs
sub
aad
dec
add
int3
in
push
xor
fdivr
int
jae
out
loop
lahf
dec
mov
mov
jge
mov
std
jae
imul
sahf
or
sti
mov
stos
lods
sub
pop
daa
popf
add
push
push
ror
inc
cli
daa
icebp
neg
hlt
push
ffree
lahf
jns
jnp
inc
mov
(bad)
mov
sub
xor
add
dec
lahf
loope
icebp
mov
mov
push
mov
push
retf
dec
outs
or
push
hlt
sub
xchg
mov
loop
jae
retf
or
(bad)
iret
retf
mov
sub
and
jmp
pop
or
xor
aas
into
ror
lds
jne
dec
imul
jp
inc
rcl
dec
adc
cdq
pop
pusha
icebp
shl
or
push
arpl
test
dec
sbb
inc
dec
pop
dec
rol
out
sbb
jmp
shl
je
fld
int3
mov
mov
jns
jnp
jle
int3
sub
inc
push
push
(bad)
(bad)
mov
test
ror
pop
push
xor
add
mov
mov
loop
xor
mov
aaa
adc
lahf
test
and
mov
jnp
jmp
shl
sbb
mov
mov
es
push
lock
daa
sar
ss
fld
js
or
sub
or
ret
dec
(bad)
call
mov
dec
dec
inc
int3
mov
xchg
(bad)
js
imul
scas
inc
lock
out
push
xchg
sbb
pop
dec
in
rol
xchg
out
push
(bad)
loopne
ds
pusha
push
sub
daa
or
rcr
or
jp
inc
sub
test
repz
mov
movs
xchg
add
xor
inc
cld
ret
jge
jge
repz
not
sub
lea
pop
push
xchg
push
(bad)
pop
sub
dec
loop
or
into
sub
mov
inc
xchg
je
cdq
es
lahf
and
ins
mov
sbb
cmc
in
nop
xor
adc
(bad)
cmp
jmp
mov
pusha
add
(bad)
jle
cmps
sub
pop
out
out
jle
xchg
cld
sbb
mov
rsqrtps
cmp
outs
dec
xchg
test
and
mov
jns
mul
push
sets
in
and
das
mov
mov
dec
rcl
movsx
mov
je
fidiv
jge
push
dec
pushf
or
fild
out
dec
cmp
jp
push
fcomp
mov
push
adc
dec
cmp
ror
ins
stos
mov
out
in
jg
ja
shl
xchg
mov
aas
(bad)
fild
push
arpl
xchg
(bad)
mov
(bad)
jmp
pop
xor
jg
inc
arpl
cmps
leave
ret
xchg
add
int3
pop
dec
outs
retf
dec
pop
jo
push
inc
mov
sub
lods
pop
push
mov
cld
sbb
retf
dec
cmp
fidivr
xchg
test
rcl
test
mov
int
in
mov
cmp
jg
and
sub
loope
mov
or
jae
sbb
pushf
addr16
retf
xor
cmp
daa
test
push
push
(bad)
lods
(bad)
cmp
int3
std
test
adc
sub
lock
cmp
mov
leave
(bad)
cdq
jo
sbb
jge
push
cmp
jo
mov
pop
test
daa
inc
fistp
mov
dec
(bad)
sar
xchg
mov
dec
push
ret
outs
push
not
daa
jo
push
xchg
add
inc
loopne
adc
clc
int
push
std
xchg
jns
mov
je
add
xlat
inc
add
xchg
das
sbb
scas
mov
xor
sbb
and
in
test
jmp
jecxz
xor
cld
test
cwde
pop
pushf
mov
dec
stos
test
aas
clc
or
pop
jae
test
in
mov
mov
(bad)
hlt
aaa
adc
sub
jmp
outs
aam
sbb
scas
xchg
mov
aaa
int
(bad)
sub
push
call
ror
inc
je
bound
sub
fwait
or
test
dec
sar
mov
sub
cmp
data16
mov
pusha
sbb
mov
movs
cmps
shl
xor
movs
loope
pop
fst
loopne
mov
jg
hlt
rcr
das
lock
xchg
xor
movs
mov
stos
xlat
cmp
bnd
in
adc
out
leave
stc
retf
add
jg
clc
mov
pop
lea
out
sbb
or
stc
push
gs
add
aam
dec
loope
adc
push
mov
sahf
dec
fisub
ds
scas
pop
xchg
jmp
dec
jmp
jle
leave
mov
cld
dec
repnz
scas
push
out
inc
push
stos
pop
adc
into
aaa
jl
stos
push
rol
push
pop
xchg
test
in
add
fisubr
sub
mov
enter
mov
repnz
pop
ror
ffree
and
div
cmp
xlat
lds
jae
lods
xchg
mov
pop
xchg
inc
es
mov
mov
mov
and
add
push
mov
adc
jmp
jmp
push
imul
pop
retf
fmul
push
jge
jge
outs
out
adc
sahf
jp
daa
or
mov
shr
adc
scas
repz
ins
(bad)
retf
jecxz
inc
test
xchg
jg
(bad)
xor
int3
sub
sbb
sbb
cdq
cs
or
cmp
cmp
xchg
mov
pop
mov
sub
sahf
dec
sub
call
dec
xor
fldenv
mov
sbb
cwde
push
xor
xchg
sbb
mov
fnstsw
ror
movs
push
push
mov
pop
add
pop
into
add
adc
jmp
inc
pushf
(bad)
enter
popf
xor
or
outs
lahf
and
icebp
push
or
addr16
pusha
pop
cld
nop
addr16
mov
or
push
xor
std
mov
movs
mov
mov
mov
mov
popf
jl
and
ret
js
inc
sub
cld
xchg
enter
ss
add
mov
mov
adc
in
(bad)
addr16
dec
or
and
sbb
daa
mov
inc
lods
jecxz
in
xchg
in
sti
cmp
dec
clc
jns
jge
imul
inc
sti
jo
xchg
xor
gs
mov
inc
out
scas
imul
mov
cli
cmps
lods
cmp
(bad)
mov
movs
add
xchg
aaa
outs
stos
mov
mov
cmc
stc
add
repnz
fstp
jmp
xor
in
mov
mov
inc
iret
push
scas
dec
je
arpl
push
mov
add
cmp
scas
pop
cwde
cli
leave
push
lds
jle
ins
imul
mov
inc
jl
jne
in
movs
int3
jp
int3
and
mov
pop
lock
(bad)
(bad)
fcomp
movs
adc
push
add
adc
ins
jmp
ficom
inc
adc
push
jns
(bad)
mov
repnz
and
fs
in
fisttp
mov
pop
add
rol
mov
dec
sbb
cmp
imul
popa
das
pop
mov
or
pop
mov
jmp
test
pushf
das
call
add
xchg
push
(bad)
mov
test
das
call
jo
aas
jne
push
mov
hlt
in
jle
sub
std
mov
inc
or
(bad)
out
retf
pop
mov
sub
cmp
mov
dec
out
jne
push
dec
pop
ss
in
mov
bswap
sbb
pop
arpl
retf
retf
adc
cld
cmps
add
cmps
int
pop
sbb
xlat
jae
mov
fadd
sar
mov
pop
retf
jne
out
repz
cmps
call
xchg
leave
jae
adc
mov
dec
jno
push
push
add
ins
push
or
repz
pushf
dec
or
push
in
cmps
ret
mov
out
pusha
push
mov
pop
jae
(bad)
in
cmp
sbb
mov
cdq
and
mov
idiv
push
and
dec
jae
sbb
mov
test
icebp
mov
in
xor
jns
in
cmps
in
in
pop
lods
xor
jle
rcr
sbb
sbb
jmp
loopne
sbb
sub
mov
xchg
push
ror
and
hlt
out
mov
int
inc
mov
cmp
xchg
and
movs
dec
enter
mov
pop
bound
js
aad
fdiv
mov
xchg
ror
pop
push
fisttp
(bad)
bound
pushf
popa
mov
inc
sbb
ins
push
out
aam
cmp
stos
sub
sub
ss
jno
das
hlt
dec
cmps
daa
add
sub
lock
outs
dec
nop
jo
not
inc
sub
(bad)
lahf
xor
dec
xor
rcr
jo
iret
cmps
ins
inc
in
cmp
mov
add
dec
aaa
dec
fisttp
and
or
bound
pushf
(bad)
(bad)
fist
out
aam
mov
shr
retf
add
repz
cli
scas
cmp
adc
mov
xchg
adc
cld
nop
daa
mov
sbb
xchg
pop
out
mov
repnz
xchg
outs
sub
xor
movs
in
or
mov
pop
cld
int
sub
daa
cmp
popa
mov
add
sbb
bound
daa
mov
dec
ror
jbe
push
outs
das
mov
adc
retf
and
dec
dec
jge
test
push
jae
ja
jo
pop
push
cmps
mov
pop
aam
push
mov
ror
fnstenv
add
sub
xchg
aaa
in
ror
lds
sahf
stos
lock
inc
cmps
out
or
inc
sub
dec
mov
cmps
xchg
jp
ret
fadd
mov
sbb
cli
(bad)
push
mov
adc
movs
sbb
int
mov
sar
jae
out
movs
push
mov
add
push
movs
div
sbb
push
(bad)
sbb
out
xor
cmp
pop
sub
pusha
je
xchg
ret
cmps
int3
sub
lahf
sbb
imul
gs
(bad)
and
(bad)
push
xchg
std
ror
das
ficom
lahf
repz
mov
sar
inc
dec
addr16
js
dec
mov
xor
aaa
xchg
ret
das
aam
int3
adc
jecxz
div
cwde
lahf
mov
clc
adc
add
out
mov
stc
ret
retf
and
push
int3
mov
or
pop
daa
cmps
fimul
dec
mov
fidiv
repnz
mov
movs
mov
into
ror
jge
out
xchg
dec
mov
mov
out
pop
ror
xchg
ror
sbb
sbb
adc
jp
mov
mov
adc
adc
cmps
inc
adc
xchg
mov
test
shl
sub
add
mov
call
das
cmp
inc
ret
mov
adc
call
rcl
push
jmp
xchg
xor
ret
adc
push
daa
jmp
lock
bnd
mov
ret
out
test
inc
xlat
cmp
or
xor
(bad)
fcom
cmp
xor
mov
xchg
leave
dec
cs
icebp
pop
out
inc
xchg
mov
mov
and
nop
in
mov
xchg
fsubr
out
clc
or
jmp
or
clc
adc
push
xor
mov
sbb
(bad)
and
add
gs
and
jecxz
sub
sub
fs
movs
mov
add
sbb
push
(bad)
repz
xor
mov
(bad)
scas
pushw
adc
inc
cmc
jle
jno
push
xor
jl
test
int
enter
push
pop
es
mov
jecxz
inc
xor
cmps
fs
mov
add
mov
xchg
(bad)
jbe
mov
sub
jecxz
dec
adc
mov
sub
sbb
lahf
ins
mov
push
or
daa
cmp
pop
aas
popf
add
enter
fidivr
pop
test
mov
fldenv
out
hlt
push
cmp
fxch
sti
jl
jno
sbb
inc
rol
rcl
mov
ret
ret
loopne
xchg
shl
inc
frstor
daa
bound
pusha
push
or
lds
dec
fmul
lds
dec
sbb
mov
loope
out
adc
gs
std
adc
push
das
push
xchg
fadd
cmp
mov
fstp
call
idiv
add
fiadd
(bad)
mov
cmc
jno
add
mov
inc
(bad)
in
mov
fbstp
test
stos
pop
push
std
pop
(bad)
retf
ret
add
ss
ret
in
push
sar
sbb
fcomip
xor
xchg
daa
mov
imul
shr
popa
jg
out
adc
repnz
jp
adc
out
dec
aas
jnp
dec
cmc
push
push
push
fsubr
call
test
and
and
icebp
int
icebp
ret
jo
mov
(bad)
jo
sbb
ds
out
fst
ret
mov
test
lea
(bad)
popa
fadd
sub
inc
jne
or
mov
push
mov
sbb
inc
push
fsubr
cmc
daa
aam
ret
add
clc
jmp
pop
mov
mov
mov
popa
sub
mov
cmp
in
test
add
push
xor
cs
movs
jg
(bad)
popa
and
jnp
jae
pushf
jo
sub
adc
pop
je
(bad)
out
jbe
rol
and
enter
lds
retf
cmp
push
icebp
sahf
xor
mov
adc
fcomip
ret
clc
mov
cdq
stos
lahf
lods
jg
jo
push
mov
lods
dec
mov
jbe
test
loopne
mov
fisub
sar
mov
adc
mov
pop
lods
(bad)
les
cmp
rcl
js
mov
add
fsubp
and
clc
or
mov
inc
mov
cmps
retf
jae
add
ins
jle
sbb
dec
mov
sbb
adc
push
and
aaa
push
mov
push
imul
sbb
jmp
mov
xchg
outs
stc
arpl
add
mov
pusha
out
adc
sub
int3
pop
ins
idiv
or
xor
js
jae
xchg
cli
fwait
in
mov
push
mov
aaa
lds
arpl
xor
stc
pop
jns
and
sub
aad
imul
call
inc
out
neg
test
mov
push
das
popf
iret
push
popa
mov
inc
loop
imul
bound
outs
cmp
dec
or
lock
int3
loope
cmp
ret
dec
aad
movs
xchg
inc
fcom
cmps
xor
xchg
fs
sub
inc
push
ins
dec
test
shl
cmps
mov
lahf
fstp
arpl
in
scas
pop
pushf
pop
test
cmp
xchg
ret
and
or
std
mov
ret
movs
out
and
jp
jg
je
cmp
stos
adc
shl
test
std
pop
out
shr
sub
jbe
icebp
xchg
push
add
bound
xchg
fmul
outs
pop
xchg
and
ret
adc
push
mov
cld
mul
sar
mov
xchg
(bad)
stos
(bad)
mov
or
mov
push
scas
shr
ds
push
inc
pop
dec
aaa
daa
xor
aas
cmps
adc
pop
stc
push
mov
mov
stos
and
loop
mov
daa
jge
outs
fs
pop
neg
in
sbb
dec
push
lods
push
mov
call
mov
repnz
inc
cli
jp
ret
popf
adc
arpl
addr16
sub
push
mov
movs
xchg
pop
imul
jl
push
fsubr
adc
ss
jl
dec
or
jecxz
mov
scas
mov
mov
bound
xor
les
js
xor
mov
fiadd
addr16
es
popf
rep
call
icebp
pop
dec
mov
cmc
mov
cli
sbb
or
addr16
(bad)
scas
pop
inc
push
and
lods
push
cwde
rcr
xor
dec
inc
and
cdq
pop
and
jns
lods
pop
sbb
sub
push
push
push
add
mov
test
jmp
nop
int3
rol
dec
push
scas
jl
cmp
xchg
std
inc
xchg
test
cdq
push
dec
add
push
into
and
and
sub
imul
in
call
nop
mov
movaps
lahf
adc
xor
sub
sti
cmp
xor
icebp
add
push
cmp
cmp
jl
cs
dec
rcr
pushf
int
mov
cld
repnz
xor
and
movs
inc
lds
ja
fnsave
mov
push
test
mov
adc
push
jmp
scas
aad
loopne
out
cmp
cwde
loope
jnp
push
stos
fimul
aaa
retf
cmp
add
xchg
adc
cmp
popa
(bad)
jb
jge
add
mov
and
sbb
(bad)
jmp
push
pop
add
scas
jecxz
pop
ins
and
push
cmp
mov
mov
addr16
inc
stos
clc
sub
push
add
sub
mov
je
mov
sti
je
pop
xchg
sbb
inc
xor
jno
xor
jge
sub
(bad)
les
mov
lea
aas
stc
bound
xchg
cmp
jbe
jo
push
sub
std
(bad)
lods
loopne
inc
loope
jge
mov
outs
lahf
adc
loopne
add
jae
pop
outs
scas
stc
dec
push
sub
retf
daa
repz
ret
dec
mov
dec
or
adc
ins
fcomip
lods
lods
jns
adc
adc
mov
pop
cmp
pop
push
out
cmp
and
sub
sub
add
cwde
jne
sbb
es
mov
mov
xchg
jp
fs
sub
xor
imul
dec
out
pop
jnp
sbb
jmp
fmul
or
mov
fcom
leave
dec
push
adc
stos
mov
std
cmc
ja
int
jne
stc
fidivr
or
out
rcl
push
push
adc
stos
loope
fnstcw
sbb
xchg
out
cmps
dec
adc
pop
ds
jne
jae
sbb
ins
jns
add
int
sub
fld
ret
les
mov
daa
xchg
xor
xchg
ret
test
sbb
sub
jp
into
adc
test
std
out
jp
hlt
clc
stos
pop
mov
mov
adc
mov
bound
hlt
dec
rol
fmul
adc
(bad)
je
aaa
sub
ins
xor
rol
mov
mov
pushf
in
mov
sbb
iret
adc
xchg
dec
pop
jmp
xchg
mov
pop
test
loop
xchg
nop
mov
out
clc
push
imul
mov
xchg
push
jne
jb
ret
nop
mov
shl
inc
cmp
xchg
(bad)
imul
pop
sub
push
cwde
sahf
les
clc
enter
lods
lods
dec
sbb
xchg
dec
ins
mov
out
add
dec
enter
push
mov
sbb
lock
ja
sub
nop
push
pop
in
dec
mov
neg
push
push
rcl
xor
sbb
mov
jmp
daa
test
jnp
iret
mov
xor
xor
push
fiadd
xor
xlat
iret
int
aas
push
and
bound
sti
es
inc
mov
in
xor
mov
xor
xor
sub
dec
and
loop
cli
jmp
cdq
(bad)
(bad)
mov
mov
add
jne
mov
scas
sub
dec
cmp
dec
pop
daa
fdivr
inc
popf
pop
stc
inc
pop
cs
lahf
or
(bad)
sar
xchg
in
ret
adc
jge
mov
xchg
test
dec
icebp
dec
bound
ins
mov
xchg
add
jmp
scas
adc
dec
push
jmp
and
xchg
xchg
push
or
mov
push
icebp
push
xor
jnp
adc
pop
push
(bad)
test
aam
and
inc
int3
and
cmp
jno
imul
dec
mov
xor
mov
cmp
xor
test
cmps
xor
and
jmp
and
test
xor
sbb
dec
adc
fwait
xchg
call
sbb
imul
adc
loopne
mov
jle
aaa
inc
test
mov
push
hlt
xchg
not
jae
mov
push
ins
jno
in
xor
lods
pop
cmp
dec
out
add
dec
xor
jb
pop
sbb
imul
ret
in
in
cmp
mov
or
jg
(bad)
cmp
mov
push
cmps
clc
sbb
mov
fisttp
sbb
fsub
xor
push
inc
push
test
clc
xchg
fwait
mov
inc
bound
add
jmp
(bad)
adc
lods
bound
cmps
arpl
jnp
icebp
daa
out
call
mov
(bad)
fsubr
add
(bad)
(bad)
cmps
dec
not
mov
scas
mov
neg
push
imul
fincstp
popf
scas
xchg
adc
pop
(bad)
mov
vmovupd
cdq
adc
push
xchg
popf
lahf
leave
xchg
pop
dec
pop
xor
xor
cmps
or
push
fisub
mov
push
fcmovnu
push
xchg
sbb
push
add
stos
mov
data16
sub
data16
or
in
fdivr
das
push
jmp
mov
(bad)
push
and
mov
inc
hlt
cmp
add
push
or
lods
nop
aam
dec
pop
mov
xor
pop
test
movs
push
xor
sti
int
adc
jecxz
stc
inc
jae
sbb
sub
cmp
xlat
dec
(bad)
loopne
cmp
aad
xchg
and
std
or
push
inc
adc
fistp
adc
mov
cli
cs
jb
jl
xor
or
mov
fimul
inc
inc
movs
stos
adc
das
stc
dec
inc
xlat
jl
(bad)
popw
jg
mov
imul
sub
(bad)
loope
dec
je
test
pop
fnsetpm(287
mov
push
push
(bad)
push
aaa
pop
hlt
jl
add
scas
mov
add
ds
aam
loop
sbb
or
clc
popf
scas
inc
pop
(bad)
(bad)
mov
add
push
movs
and
push
dec
scas
add
xor
jns
(bad)
aaa
dec
sbb
jo
jo
retf
mov
pop
mov
dec
aad
out
scas
cwde
inc
stos
jp
mov
das
add
imul
adc
jle
mov
outs
cmp
mov
add
ins
out
(bad)
imul
mov
je
sbb
int3
add
test
sbb
leave
fucom
mov
add
jmp
jecxz
sbb
stos
pop
das
mov
(bad)
dec
jnp
ja
fs
or
fnsave
sbb
jecxz
test
sub
add
ror
inc
int3
pop
jg
es
adc
mov
pop
inc
pop
(bad)
pop
jne
adc
fwait
shl
mov
inc
and
cmp
in
test
hlt
adc
(bad)
data16
mov
sub
mov
mov
repz
xor
dec
jns
cwde
cmp
or
pushf
sub
cmps
inc
add
dec
icebp
call
adc
(bad)
(bad)
mov
fist
sub
mov
xor
test
push
sahf
mov
hlt
arpl
push
fninit
add
test
and
aad
mov
inc
pop
xchg
rol
mov
sti
mov
sub
mov
aad
loope
cmp
cmp
xor
dec
add
jns
push
mov
or
mov
int3
dec
sbb
sahf
xor
movs
cmp
retf
push
cmp
and
cmp
add
movs
sbb
arpl
repnz
adc
adc
jns
and
inc
cdq
fs
push
adc
es
and
leave
mov
dec
inc
js
loop
outs
push
sbb
js
dec
xor
jle
es
ss
adc
call
jnp
(bad)
aas
rol
sbb
scas
xor
outs
xor
mov
sbb
test
lods
xor
mov
push
mov
mov
sbb
sbb
retf
lds
dec
stc
cld
movs
xor
pop
and
push
xchg
in
jae
add
ret
fs
sub
arpl
inc
jbe
mov
dec
push
popf
push
sub
push
mov
or
xchg
dec
cmp
pop
cmp
mov
ret
fucom
je
pop
ret
shl
aas
pop
mov
cmp
xchg
int3
xor
jo
cmp
jmp
jp
imul
enter
mov
or
sub
adc
jge
retf
mov
stc
xchg
and
loope
inc
mov
dec
cmp
lods
pusha
fadd
mov
or
jl
aad
pop
mov
adc
stos
sbb
push
idiv
xor
fsubr
retf
mov
lds
cmp
push
push
stos
scas
cmp
jp
ins
ss
or
sub
or
jecxz
popa
pusha
mov
jnp
push
mov
clc
data16
rcr
ja
xor
jmp
cwde
movs
add
lds
popa
sti
fnstsw
xor
cmp
movs
aam
mov
jns
cli
or
stc
add
fs
cmp
xor
out
and
xchg
addr16
dec
les
aaa
retf
not
dec
xor
sar
mov
pushf
inc
mov
push
inc
leave
push
rcl
xchg
sub
daa
std
sbb
cs
dec
cmp
mov
mov
push
sar
and
test
fld
out
out
adc
(bad)
lods
xchg
das
out
mov
jl
sub
cmp
jne
jl
pop
xor
lock
cmp
xchg
sar
xchg
ror
rcr
(bad)
scas
das
cmp
mov
xor
add
scas
jnp
adc
leave
loop
test
sbb
and
cmp
push
rcr
scas
test
inc
movs
inc
mov
jno
inc
sbb
or
xor
cmc
into
mov
jp
lea
out
mov
mov
jge
jecxz
xor
sub
aad
clc
add
mov
push
jmp
jmp
daa
into
es
nop
jmp
fwait
xor
push
dec
xchg
xlat
xor
mov
push
aam
bound
push
shl
or
js
sub
xchg
jns
add
rol
(bad)
or
(bad)
push
push
jno
mov
cmp
cli
cli
xchg
and
and
push
ins
test
push
inc
sub
mov
inc
loop
outs
mov
hlt
pop
shr
ficomp
cmps
mov
mov
push
popf
fild
ret
ficom
or
cdq
mov
mov
aam
daa
mov
pop
sub
rcl
shl
aas
cmp
sub
xchg
add
daa
ror
in
mov
jno
xor
ret
mov
or
ss
or
dec
mov
jmp
mov
neg
dec
jnp
js
jbe
shl
add
sar
sbb
ret
mov
xor
out
scas
mov
mov
ja
popf
retf
daa
loopne
xchg
mov
frstor
xlat
das
adc
je
push
cld
cmps
ja
cmps
mov
data16
mul
addr16
jge
aad
xor
xchg
call
les
lods
add
pop
mov
(bad)
lods
dec
lahf
cmp
mov
ins
hlt
push
not
popa
mov
nop
call
add
icebp
stos
jge
jae
into
ins
mov
adc
or
dec
pop
mov
in
xchg
or
xor
add
dec
movs
pushf
sbb
fsubp
xor
int
lods
or
fdivp
stos
pop
jge
mov
aam
jl
enter
fs
loope
xor
xchg
xor
cmp
pop
push
cs
cld
repz
mov
test
lea
cs
cmp
or
jmp
das
and
in
sbb
movs
jnp
int3
sub
popa
ja
sbb
fs
test
xlat
lods
jmp
(bad)
hlt
lods
sar
mov
jns
push
adc
int
fistp
xchg
mov
cmc
jae
sub
inc
dec
daa
retf
pop
jl
fcomp
xor
mov
and
(bad)
xor
shl
sbb
sbb
nop
out
add
fwait
adc
les
out
mov
gs
outs
repnz
popa
sbb
lods
push
push
imul
or
fsub
test
mov
push
scas
arpl
std
inc
xor
cld
fisub
dec
fst
xor
test
mov
push
push
fcomip
mov
jp
mov
pop
(bad)
mov
mov
push
call
rol
mov
ins
inc
add
test
pop
imul
out
bound
sar
daa
mov
xor
xor
adc
out
push
push
mov
mov
(bad)
fidivr
imul
push
(bad)
call
into
mov
inc
rcl
push
js
pop
aam
movs
xor
lahf
xor
lods
dec
xor
mov
and
mov
and
dec
not
push
sbb
cmc
xchg
div
imul
mov
in
push
push
jmp
dec
inc
xchg
or
mov
sti
div
pop
jge
pop
and
gs
nop
(bad)
inc
or
cmc
pop
repz
xor
push
in
scas
cdq
loopne
pop
ror
out
cmp
jmp
ret
ins
gs
xlat
imul
push
dec
lahf
pop
adc
jmp
hlt
push
sahf
and
inc
pop
add
push
mov
push
add
mov
ficom
ficomp
xor
xchg
sub
imul
into
mov
ds
std
and
(bad)
cmps
pop
(bad)
jae
push
push
dec
add
sti
sub
sub
mov
mov
mov
js
arpl
in
jo
sub
jnp
inc
jge
adc
jmp
jo
aaa
dec
inc
shl
lock
adc
mov
stc
adc
sbb
mul
xor
cwde
sub
pushf
and
sub
adc
and
addr16
mov
sti
sbb
cwde
in
sbb
(bad)
pop
daa
pop
xchg
push
sbb
out
mov
pop
pop
cmp
push
loop
test
mov
jle
std
scas
push
hlt
aam
push
rcl
test
daa
daa
cmps
rol
jmp
mov
(bad)
sbb
or
and
pop
dec
jmp
jmp
pop
rcl
or
xor
dec
add
sub
movs
hlt
(bad)
xchg
movs
mov
and
pop
punpckhbw
mov
mov
test
xchg
cmp
loope
sbb
fild
mov
push
(bad)
scas
sbb
sub
mov
cmps
lds
adc
test
shr
push
pop
and
cmp
daa
mov
add
or
sbb
push
lods
jne
nop
shr
mov
bound
retf
movs
inc
push
cs
leave
std
scas
jl
arpl
or
dec
mov
push
div
imul
call
cwde
retf
sbb
mov
xchg
int3
(bad)
cmps
ss
mov
jl
out
push
popa
cli
push
pop
push
xor
pop
xchg
jns
and
inc
jbe
sbb
out
iret
mov
jp
loop
mov
and
xchg
dec
fbstp
loope
and
pop
xor
mov
sbb
sbb
mov
and
cmp
and
push
(bad)
cmp
xor
aas
ss
jmp
dec
cli
sub
add
cmp
ret
or
js
pop
test
push
xor
mov
jecxz
mov
adc
into
push
mov
mov
dec
and
aaa
mov
stos
bound
sbb
(bad)
in
clc
lods
lods
mov
repnz
dec
mov
jge
cmp
(bad)
pop
ins
test
push
(bad)
std
xor
inc
retf
pop
mov
inc
call
(bad)
shr
mov
pusha
dec
mov
pop
mov
ret
xchg
pop
in
test
outs
rcr
sub
inc
mov
int
inc
adc
xchg
mov
push
movs
push
add
dec
ins
pop
cld
jmp
sub
cmc
xor
lahf
add
stos
(bad)
inc
add
out
iret
fisubr
mov
jb
jns
mov
ins
and
or
daa
lea
pop
cmp
dec
es
test
test
and
ins
dec
adc
adc
scas
cmp
ret
dec
ds
push
in
sbb
mov
fsubr
cmps
push
bound
fld
add
add
mov
inc
or
repz
ret
iret
pop
gs
or
xchg
sub
jg
jle
dec
test
mov
xchg
sbb
gs
cmps
inc
sub
loop
les
xchg
bound
inc
pmaxsw
jp
sub
leave
inc
inc
packuswb
ins
xor
sbb
pushf
std
push
out
push
pop
aam
jns
jp
clc
fcomp
in
dec
sar
push
shl
aaa
je
xor
cmps
lods
gs
fwait
loopne
call
mov
push
out
jno
add
out
rcl
sub
xor
outs
das
scas
xchg
cld
or
xchg
mov
add
jle
lods
test
mov
lahf
out
sbb
pop
pop
(bad)
jge
fwait
dec
dec
es
pop
movs
inc
cmp
retf
xchg
xchg
scas
jno
mov
rcr
aaa
mov
outs
sti
retf
mov
imul
adc
jmp
hlt
dec
jno
outs
pop
std
shr
xchg
sub
sbb
(bad)
and
call
push
mov
int3
mul
movs
add
stos
sub
inc
mov
or
dec
rcl
ret
dec
stos
jmp
cmp
aas
jmp
adc
mov
push
aad
pop
arpl
call
push
adc
mov
jne
js
pcmpeqd
cld
lods
mov
dec
call
push
scas
mov
xchg
pop
in
enter
(bad)
bound
xchg
das
xchg
pop
adc
ins
inc
adc
add
mov
popa
ror
xchg
add
add
or
in
aad
cli
in
lock
xor
push
and
push
xchg
fimul
sbb
dec
cld
test
mov
or
sbb
es
fs
xchg
push
xchg
aam
xchg
inc
aam
and
xchg
test
pop
jae
movs
cmp
das
ja
lods
(bad)
pop
pop
inc
out
icebp
or
push
inc
fsub
repz
jnp
cmp
(bad)
es
fstp
jl
adc
mov
sub
rcr
jecxz
les
fwait
cmc
mov
call
lods
bound
push
add
movs
jne
outs
sub
test
data16
add
cmps
shr
cld
stc
or
call
cmp
sbb
fincstp
mov
mov
mov
mov
cli
jp
ss
mov
or
in
cmp
cmc
push
cmp
mov
push
scas
cli
repnz
outs
cmp
sub
fistp
sbb
inc
idiv
pusha
mov
cwde
out
pop
(bad)
mov
imul
in
mov
dec
and
retf
shl
add
mov
imul
fimul
je
sbb
lods
mov
ins
js
dec
shr
mov
xchg
(bad)
push
mov
out
loop
jge
imul
mov
nop
add
cmp
sub
inc
fcomp
sbb
mov
out
xchg
xchg
dec
xchg
stos
xlat
add
xchg
loope
cwde
call
inc
adc
enter
(bad)
in
xor
dec
mov
xor
cmp
ss
xchg
push
ret
mov
and
not
sub
pop
ins
enter
gs
retf
jmp
and
sbb
cmps
cs
int3
int3
mov
(bad)
fwait
das
test
inc
sbb
les
add
sbb
pop
loopne
mov
ss
scas
push
mov
ins
inc
retf
push
mov
push
inc
pop
mov
and
lods
cmp
stc
sbb
and
std
les
das
pop
sub
pop
fistp
mov
outs
mov
adc
jg
clc
xor
sbb
out
inc
xor
test
jp
repz
or
sbb
dec
and
cmp
xchg
xor
dec
fcom
addr16
aas
nop
inc
cmps
out
enter
cmp
rcr
cmp
sbb
icebp
jp
ror
add
not
cmp
push
adc
sbb
dec
and
and
xchg
mov
inc
jae
(bad)
repz
imul
in
fsubr
(bad)
iret
arpl
and
outs
mov
mov
popf
or
dec
inc
cdq
cmp
popf
or
rcr
sbb
outs
fldenv
sbb
or
call
push
jns
fcmovne
and
outs
movs
es
scas
mov
ss
std
or
clc
in
cdq
and
(bad)
cmp
mov
cld
iret
ret
mov
jp
adc
xchg
jo
out
lea
in
retf
xchg
daa
xchg
xchg
sbb
xor
mov
cmps
scas
jmp
cmc
and
adc
xchg
repz
cmp
leave
hlt
gs
aad
lock
je
add
outs
cdq
loopne
push
popa
rcl
lahf
neg
or
xor
dec
test
pop
sub
loope
stos
loop
pop
pop
retf
rcl
daa
sahf
jg
(bad)
pusha
(bad)
leave
scas
push
test
mov
push
test
dec
add
movs
sbb
cmp
or
pop
pop
jg
xchg
outs
shl
adc
ins
ret
mov
fnsave
mov
fs
or
repnz
ret
fistp
mov
daa
enter
in
lods
sub
cdq
mov
mov
dec
out
dec
loopne
add
add
outs
xlat
outs
outs
popf
ret
pop
out
cld
jg
fidivr
push
cli
and
mov
enter
dec
pop
out
adc
jmp
dec
push
push
dec
ja
out
scas
sbb
aam
mov
cmc
inc
xor
scas
or
sub
sub
sbb
mov
or
add
js
push
jmp
ss
je
test
xchg
ret
dec
out
xor
mov
(bad)
out
sub
cwde
and
adc
imul
fidiv
pop
test
inc
xor
jecxz
mov
fs
ret
rcl
dec
cwde
adc
outs
cmp
loopne
jns
inc
inc
outs
jmp
das
inc
jge
sbb
imul
rcr
retf
int
xchg
(bad)
inc
jecxz
jne
and
xchg
(bad)
pop
push
jmp
mov
pusha
dec
pop
int3
dec
cmp
mov
adc
pop
mov
outs
test
stc
mov
fwait
nop
lea
pop
mov
push
inc
jmp
cmc
test
add
dec
aad
in
mov
imul
rsm
loop
enter
mov
loope
repz
xor
in
test
xchg
sbb
and
mov
clc
in
call
inc
dec
ins
xchg
test
xchg
or
ja
movs
shl
sbb
inc
shl
adc
inc
cs
mov
xor
mov
movs
dec
inc
das
mov
push
xchg
or
and
jle
enter
jle
mov
aas
add
sub
adc
pop
pop
pusha
pop
push
adc
jmp
das
xchg
inc
cmp
mov
xor
jecxz
mov
test
cmc
xor
jb
push
inc
mov
lahf
daa
std
mov
dec
ss
inc
mov
mov
inc
lock
pop
lods
cdq
xchg
ss
jecxz
push
sbb
fimul
fisttp
jns
pop
add
inc
cwde
scas
pop
std
movs
rcl
mov
fstp
in
dec
std
dec
fisubr
inc
jbe
(bad)
xlat
xadd
xlat
adc
push
mov
les
mov
fnstsw
add
mov
adc
push
mov
sbb
pop
loope
xchg
(bad)
pop
dec
rcr
stos
mov
(bad)
xchg
test
pop
std
pop
push
mov
outs
int3
mov
daa
push
outs
push
add
mov
push
cwde
cmps
das
sub
rcl
fs
fdivr
test
into
outs
shl
inc
jge
call
leave
test
test
int
mov
int3
(bad)
lods
out
jp
pop
push
inc
sahf
or
sbb
jbe
and
aam
adc
int3
cdq
aaa
(bad)
or
or
arpl
pop
std
es
fstp
adc
call
pop
xchg
add
add
and
stos
jp
fnstsw
and
jg
leave
pop
(bad)
(bad)
push
test
pop
jnp
mov
mov
or
cdq
add
dec
jne
ret
imul
mov
ret
ret
ins
cmp
add
jns
pop
push
mov
jae
pop
or
les
pop
mov
pusha
mov
pop
ins
jmp
lds
mov
imul
inc
adc
data16
and
xlat
jmp
stos
sbb
test
outs
int
pop
cs
test
or
push
loop
jl
or
(bad)
push
sub
sahf
mov
mul
dec
outs
repz
inc
cmp
pop
push
xchg
adc
push
js
mov
mov
cmps
sbb
sub
pop
fidivr
leave
ds
int
push
adc
cmp
loope
and
out
lods
movs
mov
mov
sbb
cwde
push
dec
xchg
inc
jns
mov
(bad)
test
inc
jmp
xor
mov
dec
add
rcr
adc
xor
(bad)
scas
push
cmc
fstp
clc
test
sbb
dec
xchg
adc
jnp
sbb
pushf
inc
hlt
push
scas
pop
inc
das
(bad)
xchg
jecxz
arpl
dec
sub
jge
jnp
jp
repnz
jmp
mov
test
xchg
xchg
js
mov
sti
dec
mov
pop
inc
pusha
test
adc
inc
(bad)
xor
inc
jecxz
movs
sar
and
inc
(bad)
mov
xor
pop
pop
sahf
loop
test
jne
sbb
push
xchg
cmc
in
in
fwait
(bad)
cmp
shr
fcom
test
dec
dec
int3
adc
xor
cmp
sub
lock
adc
test
add
inc
shr
call
push
sub
(bad)
sti
call
pop
inc
cmp
repnz
xlat
and
pop
ds
mov
lea
cdq
mov
call
sbb
pusha
inc
adc
xor
(bad)
adc
push
jae
retf
test
or
xor
nop
outs
sbb
mov
cmp
js
loop
xchg
sub
fs
and
pop
pop
lods
jl
das
inc
loopne
mov
popa
pop
rol
pop
mov
gs
inc
adc
popa
mov
jno
xor
inc
sub
mov
(bad)
loopne
cmp
das
inc
jnp
test
pop
pop
sbb
ss
sbb
jg
cdq
adc
sbb
xor
loopne
and
push
stos
into
push
cmp
leave
cmp
and
rcr
mov
fs
dec
jl
ss
ds
xchg
pop
pop
add
and
xchg
(bad)
mov
stos
inc
cmp
test
xchg
lods
mov
jg
jmp
adc
xchg
xchg
stos
je
pop
int3
jge
xor
iret
push
or
xchg
sub
enter
mov
dec
push
iret
push
shl
mov
aaa
mov
and
push
jmp
mov
adc
sub
shl
int
mov
enter
inc
leave
movs
sahf
cmp
add
xchg
sub
addr16
clc
add
cmps
mov
xor
push
jp
jmp
(bad)
jns
ss
mov
or
loop
(bad)
out
cwde
jg
pop
xchg
lods
cmc
arpl
inc
cwde
iret
push
cmp
and
inc
aam
es
pop
dec
retw
std
out
sbb
and
mov
test
aam
fld
push
cmps
popa
stos
setb
push
(bad)
ss
xor
jge
sar
sub
into
out
jmp
dec
lods
gs
cli
outs
xchg
xchg
jg
dec
(bad)
neg
or
xchg
iret
cld
xchg
adc
jbe
jne
jmp
outs
outs
mov
leave
outs
call
cmp
pop
and
dec
sbb
pop
dec
aaa
mov
and
nop
iret
mov
mov
dec
or
add
adc
adc
js
inc
fcomp
adc
sbb
sbb
sub
and
mov
or
mov
mov
xchg
push
iret
mov
in
dec
push
retf
das
mov
mov
inc
cmp
pop
adc
dec
popf
daa
mov
movs
mul
push
aad
dec
adc
clc
test
es
and
jmp
dec
mov
cdq
sub
in
inc
das
ins
mov
shl
not
into
inc
arpl
jp
int3
bound
jno
push
jo
xchg
retf
gs
ret
retf
pop
shr
test
inc
cmp
daa
pop
jge
mov
nop
dec
dec
lods
push
push
inc
push
fild
fldenv
ins
push
add
pop
arpl
mov
in
xchg
(bad)
data16
and
and
icebp
mov
add
push
(bad)
data16
push
mov
gs
sub
pop
xchg
mov
stos
xchg
test
adc
sub
ins
in
inc
sbb
and
loopne
mov
in
cmp
scas
sbb
mov
lahf
jnp
cmp
es
xchg
mov
pop
sbb
hlt
movs
jo
retf
dec
add
fbstp
adc
push
add
dec
test
in
pop
rol
dec
xlat
xchg
add
mov
les
std
fs
test
scas
mov
cdq
mov
in
pop
test
sbb
jg
dec
in
mov
pop
cmp
add
sti
sbb
pusha
sub
rol
jmp
stos
push
fwait
push
imul
xchg
cmp
into
sar
cmp
into
jmp
cmp
pop
add
test
shl
xor
movs
movs
jmp
outs
jge
movs
push
bound
or
ret
test
jne
or
mov
jb
or
in
or
mov
movs
push
cmp
fwait
repnz
dec
jae
xor
cmp
int3
test
cwde
shl
jge
and
inc
or
mov
popa
clc
xlat
and
sub
dec
dec
jae
push
pop
xchg
popf
(bad)
fsub
xchg
mov
inc
(bad)
jae
mov
inc
inc
sar
retf
mov
xor
jne
sbb
(bad)
arpl
(bad)
bound
dec
cs
aad
ret
add
inc
adc
jge
outs
(bad)
jge
sub
sbb
mov
push
xchg
lods
xor
shr
mov
xchg
xor
(bad)
and
push
icebp
inc
push
xchg
dec
test
adc
(bad)
mov
sbb
fdiv
ins
fcom
mov
mov
inc
sbb
cmc
mov
jmp
xchg
pop
outs
hlt
mov
fimul
sar
lds
nop
or
inc
pop
rcr
mov
scas
pusha
data16
mov
les
inc
pop
ins
aad
cwde
shr
add
iret
mov
adc
out
mov
mov
xor
shl
loope
hlt
in
loope
fcomp
outs
cmp
or
push
retf
fwait
and
inc
sub
adc
shl
and
scas
pop
cmp
(bad)
xor
imul
adc
sub
into
jmp
mov
mov
icebp
dec
iret
dec
sbb
mov
or
js
int3
cmc
(bad)
fdivr
add
mov
mul
sti
mov
dec
jp
push
retf
jmp
test
cmp
sbb
movs
sahf
or
adc
sub
aaa
or
fdivr
push
xchg
clc
mov
out
xchg
retf
xchg
movs
xlat
aam
dec
imul
out
inc
inc
inc
mov
cmp
cmps
out
test
pushf
stos
xchg
sub
and
pushf
cld
ja
pop
adc
adc
adc
cmps
xchg
shl
mov
pop
int
add
mov
xchg
lock
mov
(bad)
xor
mov
scas
mov
cmp
les
enter
jo
movs
stos
cmp
dec
fsub
iret
call
mov
mov
loope
mov
jg
pop
bound
ds
popf
push
aad
mov
pop
push
jecxz
cmp
ja
sub
push
xchg
and
jmp
je
inc
imul
cmp
xchg
mov
mov
retf
and
inc
test
in
(bad)
xchg
mov
daa
test
in
mov
mov
mov
mov
push
loop
mul
test
mul
retf
mov
jb
cld
bound
in
push
jmp
cld
sbb
jecxz
cdq
cmp
test
aad
repz
jns
jo
pop
iret
or
frstor
mov
scas
mov
xor
jmp
cwde
inc
call
add
jg
retw
cli
scas
lea
loopne
add
jecxz
aam
std
and
pop
test
or
loope
je
jecxz
mov
mov
leave
outs
mov
out
cmp
popa
aad
call
jl
push
repnz
cs
cmp
jne
scas
aad
sbb
or
fldcw
add
loope
neg
xchg
sbb
ret
loop
ret
pop
adc
mov
stc
lds
shl
(bad)
push
mov
mov
pop
dec
int
push
or
aaa
and
(bad)
xlat
in
pop
mov
or
or
add
fsubp
jns
rcr
das
lahf
sub
mov
and
jmp
pop
inc
(bad)
or
call
mov
int
imul
jno
ret
idiv
in
ret
fs
xor
jns
inc
imul
mov
jno
adc
movs
in
rol
mov
xlat
retf
test
mov
xor
push
test
cmps
jnp
repnz
inc
(bad)
xchg
(bad)
jmp
and
rcl
data16
pop
addr16
gs
or
nop
add
sub
inc
packsswb
fst
sbb
adc
ja
xor
(bad)
stos
jae
cli
aad
(bad)
mov
dec
mov
sbb
dec
mov
pop
sub
and
push
xor
(bad)
or
push
idiv
div
pop
cdq
dec
cmp
xchg
out
dec
nop
mov
adc
cs
lock
leave
adc
sub
test
push
sbb
inc
push
scas
adc
test
or
test
dec
inc
lds
bnd
addr16
ret
(bad)
(bad)
shl
jmp
inc
cmp
std
xchg
push
dec
jl
outs
call
jl
push
mov
aad
jmp
add
pop
mov
into
shl
jl
inc
push
out
add
inc
mov
xor
jmp
icebp
iret
fidivr
dec
repnz
adc
fcom
adc
push
ins
sub
ret
arpl
jo
mov
xor
fdiv
mov
cmp
scas
lahf
sub
pushf
test
clc
aam
xor
xchg
dec
pop
cmps
in
mov
ret
mov
and
imul
in
and
enter
rcr
repz
ins
pop
fwait
(bad)
cld
jle
mov
fist
xchg
fs
stos
dec
push
sbb
mov
test
and
inc
lods
js
test
inc
pop
xchg
push
(bad)
std
(bad)
and
and
pop
sub
cmc
xor
xor
add
shl
ins
scas
loop
xor
jl
js
fcom
and
push
sbb
stos
mov
sub
pushf
das
pop
cmp
adc
jae
mov
dec
jmp
icebp
fcomip
pop
repnz
cmp
stos
push
nop
push
das
mov
pop
xchg
std
cmp
arpl
add
jnp
mov
inc
or
xor
cmp
inc
int3
popa
cmp
pop
in
cmp
out
aam
push
xchg
push
aam
loopne
mov
mov
daa
bound
cld
pop
push
add
xlat
push
mov
xor
push
retf
adc
inc
cdq
rol
retf
movs
inc
sbb
outs
fcomip
out
dec
cld
inc
(bad)
shr
jle
aaa
sub
ins
ret
dec
mov
arpl
jno
cmps
mov
or
or
sub
jmp
or
mov
jns
mov
mov
inc
fdiv
cmp
and
sar
lods
or
in
addr16
jl
cmps
ret
pop
jmp
ffree
popa
out
stos
jb
jbe
test
cmp
mov
mov
push
dec
cmp
mov
shl
mov
out
sbb
fisub
mov
cmp
xor
popf
pop
xor
test
mov
inc
mov
or
dec
dec
(bad)
in
xor
and
(bad)
xchg
inc
cdq
enter
mov
xor
xchg
rcl
push
or
pop
push
clc
mov
sahf
pop
rcr
push
pushw
mov
mov
imul
sub
(bad)
adc
or
mov
xchg
das
add
xchg
call
and
test
cdq
(bad)
fidiv
nop
sub
ins
mov
inc
xor
lock
lock
lods
adc
aam
xchg
sahf
(bad)
bound
mov
lods
mov
cwde
mov
push
gs
push
push
inc
inc
or
inc
pop
pop
and
sbb
inc
test
test
(bad)
pop
sbb
in
xchg
cmc
test
sbb
push
mov
jecxz
imul
cld
test
add
add
mov
push
xor
adc
sbb
fistp
push
hlt
ss
(bad)
xchg
pop
push
inc
lods
jmp
and
fst
je
je
sub
mov
and
sbb
and
cmps
jp
mov
jbe
ret
dec
aad
mov
inc
das
aad
jle
aaa
pcmpgtw
aad
adc
(bad)
aam
jo
dec
inc
push
ins
fdiv
push
enter
cs
int3
jecxz
movs
or
mov
sub
test
adc
xor
sti
sub
mov
cmps
stos
mov
or
adc
mov
fst
adc
pop
push
push
mov
or
ja
adc
stos
xchg
mov
iret
outs
stos
out
add
hlt
mov
stos
pop
jl
ficomp
retf
inc
sub
jno
inc
es
xor
mov
scas
sbb
jns
out
ins
mov
add
js
retf
pop
nop
mov
cmp
inc
popa
add
push
jno
inc
data16
push
in
nop
pop
cmp
mov
xchg
les
mov
(bad)
(bad)
mov
fdivr
sub
pop
cmps
push
mov
dec
icebp
aad
push
mov
xchg
sbb
cmp
mov
loopne
ja
pop
loop
adc
mov
jle
movs
aad
fidiv
in
div
cwde
mov
ret
mov
sti
push
imul
jns
cmps
cmp
loopne
sbb
in
rcl
popa
hlt
(bad)
pop
cmp
loop
mov
lock
pop
shl
and
bound
dec
add
xchg
cwde
or
pop
fucompp
movs
add
xor
xor
and
dec
retf
and
cwde
cmps
jbe
popf
iret
inc
jb
retf
push
push
mov
or
retf
loopne
jne
out
sub
je
mov
hlt
xchg
bound
add
loop
fcom
shl
jg
outs
fstp
hlt
xchg
mov
xor
es
addr16
sar
or
(bad)
retf
or
in
stc
sahf
int3
shr
cld
(bad)
aad
xchg
sbb
sbb
or
inc
(bad)
cmp
fstp
cli
sub
lods
pusha
div
lds
sbb
sub
push
xor
mov
aad
icebp
(bad)
mov
adc
sbb
mov
mov
adc
daa
xchg
sub
dec
loope
push
dec
adc
inc
push
mov
add
lds
adc
ins
inc
mov
(bad)
(bad)
pop
loopne
rcl
or
retf
xchg
ins
mov
ins
push
jb
rcl
repnz
shl
cld
lea
mov
ins
sub
mov
mov
mov
dec
jmp
fdivr
sbb
ss
fsin
pop
and
out
std
mov
mov
cdq
leave
cld
push
and
xchg
mov
pushf
pop
ss
adc
pushf
jmp
push
xchg
jl
cmp
call
test
mul
cli
not
(bad)
call
test
xchg
imul
imul
ss
lock
pop
fs
shl
and
neg
test
lods
jge
xchg
js
sub
dec
lea
sbb
cmps
cmp
sbb
inc
cli
jle
mov
loopne
mov
jg
dec
repnz
lds
xor
fadd
mov
ficom
dec
adc
pop
(bad)
mov
(bad)
nop
adc
jge
or
daa
sub
mov
sub
call
mov
mov
repnz
push
jb
push
dec
stos
cli
mov
call
sbb
loop
ss
jo
das
stos
and
adc
cld
dec
fisub
movs
ins
add
jg
inc
int3
inc
out
loop
loopne
cmp
test
lock
int
add
iret
pop
add
into
lock
push
jle
jmp
dec
hlt
jbe
or
enter
mov
shr
jmp
mov
movs
add
std
cmp
xchg
std
xchg
test
aam
and
add
xchg
mov
(bad)
jnp
jg
and
jmp
mov
std
sbb
stc
fstp
lds
test
and
add
in
jbe
xchg
push
cmc
jp
lods
leave
sub
or
addr16
out
add
cdq
push
popf
out
push
addr16
adc
repz
push
addr16
pop
and
jecxz
mov
mov
loope
xchg
out
pop
outs
sub
jmp
mov
(bad)
pop
mov
push
sub
(bad)
mov
sbb
test
imul
jo
jecxz
les
das
int3
rol
rcr
adc
push
xchg
loop
cli
clc
add
or
mov
mov
inc
xchg
outs
or
sub
mov
dec
cmp
ficom
mul
sar
and
adc
dec
add
fistp
xor
xchg
add
scas
shl
into
fcmovbe
adc
inc
jl
inc
data16
adc
call
cld
and
mov
icebp
mov
jae
mov
push
inc
adc
jno
fisttp
adc
mov
cmp
test
ret
imul
ret
or
ins
adc
inc
aad
mov
setle
(bad)
or
popa
fsub
into
mov
push
inc
pop
xchg
mov
pushf
bound
sbb
call
rcl
pop
sub
mov
pop
pop
cmps
xchg
mov
adc
xor
ss
add
imul
lods
xor
mov
das
imul
sbb
mov
out
adc
and
shl
pop
popf
fisttp
sub
data16
push
dec
mov
test
pushf
cli
in
loop
out
sub
pop
into
inc
imul
add
out
movs
cmps
lock
cmps
adc
xchg
mov
cdq
pop
pushf
and
and
inc
neg
cmp
mov
out
mov
mov
push
hlt
mov
xor
pop
pop
sub
inc
inc
lock
jmp
clc
and
and
push
sbb
lds
int3
sbb
mov
or
test
xor
lahf
jmp
je
lock
mov
pop
popa
fwait
cmp
(bad)
fiadd
xor
call
ja
push
outs
out
adc
push
xchg
into
ror
mov
push
mov
fsubr
mov
movs
retf
(bad)
(bad)
push
mov
ins
jns
test
fcmovnb
xchg
adc
dec
(bad)
adc
movs
push
ja
hlt
iret
xor
lock
sub
daa
hlt
xchg
pop
jmp
mov
push
call
fldpi
in
xor
mov
stos
or
sbb
rcl
retf
push
out
inc
mov
and
sbb
xchg
sbb
popa
scas
push
sub
xchg
xor
inc
mov
ror
mov
dec
mov
lahf
stos
pop
icebp
(bad)
(bad)
cmp
sbb
xchg
shl
xchg
dec
push
push
sub
jo
adc
in
in
cld
sbb
xor
in
cmp
jg
adc
arpl
mov
clts
out
loop
sbb
xchg
xor
dec
xchg
shl
in
mov
ins
and
pusha
repz
repnz
fcom
jne
jb
idiv
shl
mov
xor
jns
pop
stc
xchg
les
xor
dec
mov
add
xlat
xchg
add
cmp
adc
outs
fbld
mov
dec
mov
jecxz
repz
cs
test
mov
xchg
outs
push
(bad)
push
fwait
repnz
(bad)
pop
xchg
or
pop
rcr
mov
mov
leave
pop
sub
add
mov
aam
pop
inc
or
sub
mov
xor
add
pop
adc
repz
and
das
aas
cmps
mov
cs
loope
and
rcl
xchg
xor
aaa
mov
fistp
in
nop
jmp
inc
sbb
jbe
push
cdq
push
out
clc
jbe
jno
scas
cmps
ret
sbb
mov
or
push
or
pop
pop
inc
in
xor
xor
push
push
out
mov
cmp
adc
pop
adc
daa
imul
in
mov
cmp
mov
test
fs
xor
push
or
lods
ret
stos
lahf
pop
(bad)
in
mov
repz
out
fistp
push
inc
pop
pop
inc
push
dec
sub
mov
mov
std
and
dec
sub
inc
es
sub
gs
lods
jle
add
call
in
fs
sbb
sahf
(bad)
fistp
fnstsw
popf
test
fdiv
out
add
imul
bound
mov
jae
xchg
add
fwait
dec
inc
cmp
imul
sub
xchg
cdq
cld
retf
or
call
ins
ret
leave
es
push
add
aad
jmp
mov
sbb
mov
push
mov
out
push
imul
sbb
aaa
jmp
arpl
sar
hlt
and
cmp
and
enterw
inc
rol
stc
(bad)
jl
push
retf
mul
dec
sub
lahf
rcl
nop
adc
not
ja
int
loop
pop
packsswb
sub
jg
fcmove
mov
mov
fstp
loop
mov
imul
mov
fs
sbb
(bad)
cmp
in
fld
add
mov
cmps
adc
loopne
jp
stc
push
fcomp
ja
sub
dec
mov
cmp
ins
jle
xchg
hlt
pop
mov
cdq
dec
sub
mov
or
mov
dec
arpl
adc
mov
lahf
mov
test
pavgw
pop
jbe
jbe
sar
pop
(bad)
cmp
lods
mov
cs
mov
mov
inc
push
xor
call
pop
lods
dec
iret
cmps
and
add
fistp
or
out
jmp
inc
mov
pop
mov
pusha
jecxz
div
js
and
push
push
enter
mov
rcr
pop
inc
pop
or
or
outs
push
or
fwait
cmp
loopne
push
jns
ret
jnp
xor
ja
movs
mul
cmp
mov
into
adc
mov
jmp
xlat
add
dec
jb
in
mov
int
call
push
push
lods
int
mov
loop
loopne
idiv
sub
jp
jb
mov
fidivr
and
cmps
add
retf
xchg
fwait
dec
jmp
push
and
in
mov
les
pop
jns
test
sbb
cli
imul
inc
adc
or
das
dec
sub
fs
push
test
push
nop
stc
xchg
(bad)
adc
sub
jbe
repz
into
jo
mov
and
fsub
sbb
inc
inc
push
mov
in
push
stos
sti
(bad)
xchg
add
inc
cdq
sbb
pop
mov
add
lahf
ror
ins
pop
adc
call
jb
call
inc
cmp
stos
sub
and
imul
jns
jae
clc
ja
or
jle
pop
push
popa
clc
rcl
cmps
xchg
or
adc
xlat
rol
sbb
xor
pop
int3
adc
push
repnz
mov
(bad)
rol
aas
test
retf
add
leave
mov
mov
hlt
sahf
mov
scas
ficomp
fs
xor
lods
ss
nop
shl
sub
stos
sub
out
stc
cwde
or
add
xor
pop
xor
aad
jno
xchg
cmps
xor
cmp
icebp
push
and
rol
repz
fdecstp
push
cdq
pop
aad
mov
fistp
clc
test
jmp
jl
cmp
add
cli
adc
dec
pop
xor
jl
jmp
push
rcl
jg
xchg
mov
xchg
mov
jl
fmul
ss
mov
pop
mov
aad
mov
je
icebp
mov
movlps
test
out
cmp
mov
gs
mov
xor
mov
dec
push
sub
and
loope
jo
adc
movs
jmp
mov
add
ss
fisubr
push
shl
fs
push
mov
adc
jg
popf
test
test
mov
push
dec
pop
neg
xor
out
outs
inc
dec
sbb
xchg
cmp
xlat
mov
mov
xchg
and
dec
cmp
arpl
aaa
jno
mov
dec
sbb
jp
repz
addr16
push
scas
pop
mov
sub
mov
test
fidiv
enter
les
sub
pop
sub
outs
es
sub
mov
jle
fbstp
repz
mov
popf
sub
mov
inc
push
in
cmp
std
mov
addr16
out
xor
enter
lds
or
jnp
and
cwde
push
mov
shr
xchg
dec
adc
inc
adc
out
xor
dec
imul
shl
fldenv
fwait
push
into
mov
es
push
int3
fist
add
loope
aas
sub
adc
popf
xlat
add
lock
pop
icebp
jo
sub
xchg
mov
inc
mov
cmp
cli
cmp
xor
out
fadd
push
xor
pop
cmp
mov
xor
mov
mov
mov
jle
push
scas
mov
push
and
adc
mov
push
and
sbb
jmp
fs
mov
lahf
das
mov
pop
jle
sbb
cmp
jle
cmc
jns
and
push
and
mov
pop
(bad)
adc
(bad)
mov
mov
adc
mov
cwde
in
test
pop
inc
jb
mov
outs
rcr
jle
enter
popa
add
rcl
aas
fsub
xchg
cwde
fistp
lahf
ja
add
xchg
jecxz
xchg
sub
cmps
mov
add
cmp
mov
loop
mov
in
out
mov
mov
cld
inc
(bad)
sbb
sub
lahf
xchg
cwde
test
jmp
xchg
cmp
xor
das
lahf
movs
gs
xor
jns
or
sbb
stos
in
push
mov
test
xlat
lahf
xor
or
adc
add
mov
js
cmp
leave
aad
sub
xor
inc
sub
ret
mov
outs
rcl
aad
fwait
outs
mov
mov
inc
out
fnstenvw
lock
jle
sbb
xchg
int3
dec
outs
lods
jmp
test
outs
fimul
pop
out
cwde
dec
popf
dec
mov
imul
jge
enter
push
mov
retf
inc
jecxz
test
push
fstp
dec
pop
cli
push
mov
jb
jnp
mov
mov
push
mov
(bad)
pop
or
sub
loop
adc
je
jmp
sbb
sar
lahf
mov
dec
ret
les
sbb
ss
int
sbb
in
jb
loope
idiv
mov
(bad)
jae
and
into
dec
ins
mov
mov
jle
xlat
add
dec
jp
clc
vmovhps
addr16
pop
scas
cld
push
jmp
jp
mov
push
sbb
outs
cmps
jl
fisttp
cmp
jle
lahf
dec
imul
jo
cdq
pop
popa
mov
pop
ror
xchg
sbb
xchg
test
mov
addr16
add
ja
(bad)
rcr
ds
lods
or
std
xchg
adc
inc
cmps
xor
aad
jmp
call
sbb
sbb
cmp
mov
rcr
ja
aam
add
sub
xchg
cmps
or
xchg
mov
ins
mov
sub
icebp
mov
inc
mov
test
add
les
sbb
ss
popf
jbe
(bad)
or
jmp
and
sub
adc
push
int
ss
retf
(bad)
fdivr
pop
(bad)
sub
jg
es
mov
add
sahf
mov
je
and
xor
jl
mov
xor
or
enter
lods
je
shl
xadd
mov
es
ss
xlat
mov
dec
mov
add
sahf
xor
adc
xchg
jbe
ds
aas
sahf
xchg
int
sub
or
jl
adc
mov
cmp
scas
inc
je
sbb
and
popa
jns
xor
dec
icebp
addr16
xor
inc
ret
pusha
mov
mov
jno
retf
jo
(bad)
aas
add
mov
push
arpl
mov
jae
repz
add
mov
sub
gs
add
les
sar
fdivrp
jp
pushf
pop
popf
clc
adc
sahf
and
sbb
pop
enter
aam
push
push
add
pop
dec
pop
and
sbb
cld
dec
jo
xchg
push
inc
pop
(bad)
aad
cmps
xchg
lea
sbb
(bad)
sub
xchg
test
packssdw
pop
clc
sub
inc
outs
xchg
jmp
mov
call
mov
aam
sbb
scas
adc
mov
jbe
out
pushf
push
es
mov
pop
add
outs
push
pop
cli
lea
and
jo
les
repnz
das
test
popf
dec
inc
je
sahf
inc
inc
int3
in
test
into
adc
je
dec
dec
mov
add
jg
mov
data16
imul
pop
inc
jnp
or
mov
icebp
imul
xchg
pop
jl
and
mov
ror
hlt
repnz
dec
lds
mov
xchg
mov
imul
xchg
xor
addr16
jnp
mov
sub
into
inc
xchg
iret
or
adc
iret
cli
mov
nop
or
mov
push
add
pushf
or
popf
sub
fisub
(bad)
gs
jns
hlt
arpl
cmp
ret
loope
je
dec
pusha
and
sub
dec
repz
or
or
pop
add
aam
ins
fadd
sbb
and
push
(bad)
mov
mov
int3
jecxz
xor
in
mov
in
rcr
mov
adc
xchg
mov
dec
sbb
mov
push
cmp
push
pop
and
in
ss
cmp
dec
add
in
outs
ror
jg
(bad)
arpl
inc
xor
fcom
lods
test
fisub
icebp
xchg
into
add
sbb
cmps
mov
pusha
es
mov
test
fistp
push
sub
or
shl
cld
xchg
xor
retf
jmp
xor
hlt
xor
xchg
sub
test
jne
rsm
shl
dec
xchg
inc
out
scas
in
mov
mov
jns
jmp
bound
mov
in
loopne
loopne
jns
shr
jns
mov
repz
cli
bound
test
mov
mov
sbb
mov
mov
arpl
add
cmps
or
(bad)
popa
sub
popf
push
pop
out
pop
js
mov
pop
(bad)
(bad)
or
scas
pop
loop
(bad)
pop
push
je
call
xchg
xchg
or
rol
idiv
rcr
push
cld
out
lahf
sbb
pop
into
cmc
imul
je
call
jmp
sahf
jge
outs
and
in
inc
out
adc
cmp
mov
pop
and
into
add
mov
daa
pop
aas
aas
scas
cli
adc
push
(bad)
pop
pop
inc
push
mov
enter
push
mov
retf
aam
sahf
dec
popa
pop
sbb
jp
pop
ret
xchg
stos
addr16
jns
lahf
lahf
and
push
add
or
xchg
cwde
in
jp
(bad)
cmp
rol
jae
mov
mov
mov
sub
mov
and
push
inc
repnz
mov
pop
test
ins
(bad)
lds
ficomp
pop
adc
mov
mov
mov
fiadd
lea
outs
add
push
cmp
in
mov
inc
xor
fcmovnu
nop
mov
jmp
rcl
hlt
retf
fiadd
add
jne
inc
xor
push
sub
(bad)
loop
aaa
(bad)
lahf
pop
jne
mov
rcl
and
mov
lds
pushf
mov
adc
and
int
stos
pop
adc
xlat
mov
sti
xchg
mov
repz
mov
add
inc
push
cmp
add
ret
fsubp
stc
int
mov
adc
mov
fcom
arpl
movq
mov
xchg
cmp
mov
adc
(bad)
jle
xor
add
int3
popf
sub
sbb
ss
(bad)
(bad)
lock
xchg
outs
xor
xchg
xchg
test
mov
popa
push
(bad)
popf
ss
mov
icebp
jns
movs
mov
adc
cmp
jo
push
ret
aaa
pusha
jp
cmp
(bad)
mov
mov
mov
push
pop
xor
ds
shr
leave
sub
dec
sub
cmp
mov
mov
xchg
pusha
aas
outs
scas
ficom
jmp
jle
xchg
repnz
ss
mov
ror
push
xchg
mov
out
xchg
push
push
int3
jns
sbb
aam
cs
mov
lods
stos
jge
cmps
call
jmp
pusha
or
mov
stc
test
call
ins
or
std
jl
jo
xor
cdq
add
cmp
fld
push
dec
icebp
sbb
sbb
cs
jecxz
sti
call
xchg
dec
add
fadd
mov
test
push
jecxz
jle
xchg
or
add
cmp
xchg
xchg
fs
clc
jb
pop
stos
push
xchg
pop
add
out
add
out
sbb
pop
leave
pop
lds
inc
sbb
xchg
test
js
jmp
add
imul
ins
inc
or
xchg
mov
dec
mov
xchg
int
mov
and
pop
inc
cmps
mov
xor
fistp
push
push
mov
out
std
push
and
cmps
push
iret
fcomip
or
and
mov
imul
jmp
push
cmp
loop
jmp
dec
push
stos
push
loopne
dec
(bad)
leave
test
int
cld
ja
xchg
sub
pop
fimul
adc
mov
test
mov
mov
sti
xor
sbb
call
(bad)
aam
push
mov
call
int3
cmp
out
inc
je
les
jbe
xchg
mov
xor
call
mov
cmp
xor
outs
repz
in
stos
add
lock
or
(bad)
or
ds
(bad)
movs
pushf
sbb
scas
jg
je
movs
movs
dec
xchg
jne
pusha
mov
cmp
mov
fisttp
xor
push
pop
mov
add
xchg
lds
dec
mov
retf
mov
adc
jp
stc
pop
aas
test
mov
push
sbb
out
add
(bad)
(bad)
mov
add
arpl
mov
xor
test
xchg
dec
mov
aad
and
shr
popa
rcr
push
stc
push
loope
loopne
mov
rcr
inc
ins
ret
rcl
cmp
jge
or
sub
imul
cld
popf
and
jno
jle
je
inc
mov
not
sub
push
imul
and
push
pop
mov
rcl
sahf
xchg
cmps
push
cmp
data16
mov
(bad)
mov
lahf
mov
out
jb
daa
nop
xchg
imul
adc
sub
push
dec
inc
call
inc
mov
ret
fidiv
sub
daa
jge
mov
popf
lock
dec
mov
das
pop
and
inc
jmp
adc
fmul
aas
add
fcmovb
or
scas
int3
jmp
sahf
js
mov
inc
in
bound
sbb
pop
inc
inc
adc
jne
imul
scas
pop
lahf
xor
jmp
stc
test
fs
xor
mov
imul
ins
out
mov
stos
mov
mov
cmc
mov
int
cmp
xlat
adc
sbb
jg
adc
mov
push
aaa
and
jns
call
adc
jmp
cmp
mov
dec
(bad)
clc
and
inc
xchg
test
bnd
cmp
daa
or
mov
aaa
adc
outs
jb
fsub
je
xor
lahf
jo
add
int
cmp
mov
cmp
or
push
test
pop
sbb
mov
(bad)
fild
(bad)
jb
test
pop
movs
ins
and
pop
or
aas
push
mov
jg
ret
ja
iret
sbb
xchg
jg
lock
sub
mov
sub
and
push
aam
sbb
inc
cld
in
or
aaa
out
sbb
ret
imul
adc
mov
add
mov
fdivr
add
test
adc
lea
xchg
jecxz
jae
in
and
sbb
dec
shr
mov
rsqrtps
push
cmps
sbb
and
jecxz
sahf
enter
fnstcw
daa
addr16
sbb
cwde
cmp
inc
aas
test
push
jae
and
aaa
xor
pusha
mov
stos
scas
adc
fs
iret
fs
fimul
adc
fdiv
xchg
sbb
jmp
arpl
popf
mov
movs
fidivr
sbb
mov
out
gs
cmp
mov
jno
js
mov
xor
sbb
mov
test
cdq
in
fild
push
retf
mov
rol
pushf
and
es
div
and
push
mov
mov
test
cmps
add
dec
xor
inc
lahf
pusha
sbb
bound
sahf
pushf
or
rcr
mov
in
repz
mov
into
or
test
aam
mov
push
cmc
xchg
repz
dec
add
xchg
and
ss
xchg
cmp
add
ja
std
test
ret
fist
push
inc
add
add
xchg
jae
mul
mov
cmp
shl
push
lock
outs
fldcw
mov
fld
and
stos
inc
or
push
push
and
and
push
daa
test
cmp
push
in
cmp
fstp
sub
fnstenv
aad
and
adc
xor
clc
js
inc
cmp
movs
cmp
nop
sti
lea
mov
jp
cld
jp
xchg
fs
and
mov
xor
mov
add
js
js
xor
mov
pop
cmps
add
icebp
mov
dec
rol
add
cld
xchg
inc
call
dec
out
sbb
fnstcw
into
das
das
imul
jecxz
inc
push
cld
jb
jns
ror
int3
test
and
push
loopne
mov
sar
pop
mov
iret
push
inc
(bad)
test
xchg
pop
loopne
cld
aaa
outs
xor
test
dec
retf
popa
loopne
or
push
pop
push
shl
mov
push
add
add
loope
out
xor
and
mov
pop
iret
loop
stc
fndisi(8087
pop
sbb
stos
and
jae
lods
es
movs
(bad)
cmp
xchg
mov
dec
rcl
xlat
imul
faddp
add
mov
push
jmp
test
outs
jl
xchg
(bad)
jmp
rol
xchg
or
ret
test
test
adc
push
retf
call
add
jb
pop
push
ret
inc
adc
jbe
add
push
xchg
into
pop
sti
push
mov
mov
pop
test
add
xor
hlt
adc
imul
aad
mov
ficomp
loope
or
adc
into
(bad)
cmp
mov
pushf
jecxz
cmp
pusha
jo
sbb
sbb
call
sub
jle
ds
xor
add
sub
inc
movs
or
adc
jb
pop
push
call
add
xchg
sub
arpl
(bad)
fstp
adc
push
jg
sti
popf
mov
scas
adc
dec
push
into
xchg
retf
fsub
mov
lock
add
jecxz
mov
add
cli
test
push
push
aaa
icebp
rol
cmps
dec
xchg
(bad)
push
loopne
adc
ins
ficom
sti
lds
shr
es
(bad)
mov
and
lds
mov
xchg
imul
xor
in
(bad)
test
mov
cmp
pusha
fcmove
cmc
arpl
pusha
pop
call
fwait
mov
mov
out
inc
adc
xchg
pop
ins
pop
stc
push
imul
aad
fiadd
jb
repnz
jae
mov
call
cmps
jne
mov
test
adc
sbb
mov
push
(bad)
pop
push
pop
cwde
nop
xchg
pop
ins
inc
out
repnz
mov
cmc
clc
ds
cmp
jl
and
push
aaa
dec
daa
scas
aas
jg
mov
cmp
fdiv
and
into
mov
scas
popa
(bad)
fisubr
mov
mov
inc
ret
hlt
inc
retf
add
mov
(bad)
push
pop
addr16
mov
mov
stc
pop
mov
cli
inc
adc
push
cs
lods
xchg
aad
leave
ins
jno
cmp
icebp
aam
stc
repz
mov
pop
aam
out
loope
cmp
popf
into
dec
jmp
popa
cli
fdivr
cmp
jecxz
mov
cmps
stos
test
lea
mov
addr16
sahf
fld
gs
test
(bad)
lahf
inc
cld
ret
je
cmc
es
and
test
(bad)
jmp
mov
out
mov
sbb
push
mov
xchg
test
push
jmp
xchg
mov
sub
xchg
std
xchg
mov
test
adc
pop
xchg
dec
shl
mov
clc
lods
push
inc
repnz
(bad)
push
mov
jmp
push
sbb
lock
das
inc
mov
mov
repnz
mov
xchg
pop
mov
mov
fstp
sbb
movs
mov
scas
cmp
lahf
gs
add
pop
(bad)
fbstp
in
jmp
out
shr
mov
push
pop
push
aaa
aas
xacquire
or
fs
dec
dec
je
fs
(bad)
imul
lock
pushf
jmp
outs
inc
xchg
mov
mov
inc
scas
xor
xlat
gs
and
mov
push
into
lea
cmps
and
shl
dec
adc
iret
rcl
xor
sub
push
fucomip
mov
and
sbb
add
scas
xchg
enter
(bad)
loope
and
pop
fcmovu
je
xchg
es
sub
lods
aad
ss
jno
pushf
cmp
dec
jge
and
jb
stos
adc
jge
mov
inc
out
imul
lds
cs
mov
push
push
scas
xlat
stos
push
mov
call
and
pop
icebp
jo
rcl
sub
jbe
pop
cwde
xor
movs
push
outs
sub
nop
xor
mov
push
cdq
fmul
lahf
push
xor
shl
and
gs
ins
jge
pop
pop
test
(bad)
retf
jbe
mov
arpl
inc
jno
je
pop
mov
and
ds
adc
jae
jo
pusha
fs
imul
cs
add
fwait
add
adc
adc
push
retf
cmp
dec
push
icebp
pop
and
dec
cmp
dec
in
repz
sahf
sub
retf
xor
jno
lods
clc
int3
sub
mov
in
gs
outs
ja
push
sbb
xor
int3
push
shr
mov
xor
fisttp
mov
pop
movs
cmp
add
mov
clc
inc
adc
(bad)
enter
aaa
push
aam
dec
sub
xor
out
pop
jns
inc
adc
mov
(bad)
cmp
ret
repz
inc
cmp
loope
dec
loop
sbb
mov
movs
dec
arpl
xchg
scas
(bad)
in
mov
jbe
mov
fistp
fmul
dec
jecxz
cli
lahf
sub
inc
mov
cli
inc
dec
loope
out
xchg
mov
or
jns
xchg
mov
in
(bad)
jp
xchg
imul
lods
mov
retf
nop
push
mov
and
call
sub
int3
loope
jb
repnz
fadd
ror
js
pushf
inc
push
in
adc
jl
scas
retf
adc
outs
in
mov
jmp
mov
ss
fwait
and
rol
dec
test
inc
lods
rep
or
out
mov
shr
test
cmp
cmps
pop
and
jmp
(bad)
xor
in
xchg
push
les
rcr
inc
mov
clc
lock
sahf
rcpps
dec
mov
push
icebp
loop
sbb
mov
loop
jmp
mov
cwde
sub
inc
clc
leave
movs
push
dec
fcomp
inc
stc
cld
outs
and
dec
or
cdq
cwde
les
or
push
jge
rol
(bad)
popa
sub
add
xchg
jp
mov
adc
push
sti
dec
and
or
(bad)
mulps
mov
arpl
cmp
push
fidiv
pop
fisubr
(bad)
sti
out
cmps
xor
cmp
mov
adc
dec
std
test
addr16
xor
add
rcr
int3
ja
pop
loop
or
ds
test
ret
pop
popf
mov
jl
into
loopne
pushf
or
mov
outs
mov
cmp
jns
cmp
sub
and
daa
jecxz
mov
sub
jmp
(bad)
hlt
inc
fiadd
push
in
pop
mov
in
in
out
mov
dec
adc
retf
imul
add
sub
jle
mov
cmp
into
add
sbb
jnp
stos
(bad)
push
fnsave
lock
adc
in
add
sbb
(bad)
xchg
mov
fcmovne
retf
mov
popf
nop
ret
retf
jns
js
aaa
addr16
push
sub
aad
mov
stc
xchg
shl
add
xchg
jp
cs
mov
ror
fsubrp
outs
mov
cmps
sub
stos
jecxz
jg
scas
retf
movs
xlat
sbb
and
retf
pop
sti
repnz
fmul
adc
pop
popa
inc
fidivr
jmp
das
hlt
das
mov
sti
push
pop
fdivp
test
jle
lahf
js
cmp
jbe
pop
inc
dec
push
call
out
sub
mov
inc
jno
movs
ffree
retf
push
jnp
sbb
lea
mov
jmp
jl
jmp
sub
mov
or
inc
jns
pop
aas
xor
push
js
daa
sub
rcl
xchg
mov
mov
leave
hlt
in
stc
jp
mov
push
sub
xchg
jmp
mov
push
dec
les
xor
cmc
dec
adc
fdivp
dec
cmp
sub
pusha
out
dec
pop
shl
ja
jb
(bad)
cmp
add
jmp
jle
push
in
jbe
add
cld
ja
loopne
(bad)
(bad)
xchg
mov
xchg
lahf
add
jp
addr16
mov
inc
outs
jno
push
mov
mov
(bad)
pop
outs
add
inc
lock
adc
icebp
dec
push
cwde
push
pop
movs
dec
mov
xchg
cmp
push
and
xchg
scas
(bad)
adc
in
popa
fs
dec
adc
movs
mov
or
xchg
xchg
xchg
sub
mov
or
in
fcom
icebp
ss
mov
cmps
shl
in
jo
and
add
je
sbb
movs
cli
(bad)
jmp
repz
cld
mov
scas
mov
push
push
div
shl
or
dec
push
call
iret
push
aas
aam
pop
in
jge
aam
std
ds
imul
xchg
sbb
fild
jmp
inc
stos
movs
sahf
xchg
push
add
out
arpl
call
xchg
jmp
cmps
mov
loope
dec
pop
(bad)
icebp
std
out
or
mov
sbb
in
inc
imul
sub
outs
retf
mov
outs
pop
neg
push
or
dec
retf
dec
add
push
mov
or
xchg
(bad)
dec
inc
and
data16
adc
popf
fisttp
jmp
scas
push
sbb
mov
leave
pop
jmp
sbb
jb
xchg
or
add
sbb
xor
ds
into
pop
outs
push
cli
clc
mov
js
dec
mov
sbb
and
aad
mov
or
mov
dec
inc
xor
test
sbb
(bad)
push
fild
cmc
shl
cmp
in
mov
pop
iret
mov
jne
fwait
cmps
fdivr
popf
add
sbb
shl
mov
xchg
push
scas
mov
push
lods
sar
xchg
stos
fidivr
xor
loop
gs
add
pop
fdiv
mov
movs
pop
jns
pop
ret
cmp
add
jnp
dec
rcr
mov
rol
dec
inc
mov
push
outs
mov
mov
imul
pusha
pop
imul
mov
add
sub
popf
fwait
mov
mov
retf
sub
mov
rol
or
mov
xchg
test
xlat
xlat
push
jo
retf
mov
test
fwait
pop
sub
mov
mov
test
add
push
es
stc
cld
les
mov
xor
rol
jns
mov
inc
xor
leave
sbb
inc
mov
pop
mov
push
xchg
inc
stc
push
sub
pop
mov
push
shr
sahf
mov
add
lock
sub
mov
scas
sub
cmp
(bad)
aas
les
test
mov
mov
mov
popf
sub
mov
inc
test
movs
loopne
mov
sub
popa
movaps
rcr
ret
pushf
loop
push
fdiv
aam
mov
inc
xchg
fwait
dec
inc
(bad)
aaa
repnz
retf
fdivrp
mov
(bad)
bound
push
xchg
(bad)
xchg
mov
mov
ja
ins
pushw
loop
int
push
(bad)
aaa
cwde
retf
out
lods
inc
stos
or
cmc
mov
pop
add
fisubr
cs
es
adc
popa
stos
loope
out
pop
arpl
sbb
cmp
mov
or
div
jl
ds
push
fs
popf
div
arpl
out
hlt
repz
dec
jge
out
ss
popf
(bad)
fild
lods
(bad)
dec
fadd
sub
push
jne
xor
adc
mov
xor
test
dec
mov
call
sti
arpl
loopne
lds
mov
cmp
mov
retf
mov
test
sub
mov
mov
dec
ins
mov
inc
mov
mov
cld
push
xor
hlt
push
outs
or
adc
jmp
dec
cmp
outs
into
(bad)
and
in
xchg
xchg
sbb
inc
ins
mov
or
fldenv
or
outs
mov
adc
and
outs
cmp
and
arpl
adc
dec
fmul
mov
cmp
cs
cwd
std
call
mov
xchg
in
mov
ffree
inc
mov
ds
jne
fwait
push
repnz
icebp
sbb
jae
outs
aas
shl
dec
outs
jge
pop
push
mov
jo
adc
push
sahf
mov
movs
dec
scas
jne
pop
ins
(bad)
idiv
dec
fstp
inc
daa
mov
jae
(bad)
xchg
push
fnsave
dec
imul
sub
mov
retf
enter
scas
pop
(bad)
mov
add
cmp
mov
mov
das
mov
xor
retf
push
(bad)
fsub
add
xor
loopne
push
mov
fwait
dec
mov
adc
mov
cwde
cld
lods
dec
mov
and
ret
push
pop
arpl
int
xchg
(bad)
movs
xlat
adc
sbb
mov
ja
xor
out
adc
xchg
xchg
fistp
dec
dec
sub
shl
pop
add
or
in
rol
xor
imul
ins
cmp
or
int3
xor
mov
sub
mov
mov
mov
mov
(bad)
push
ret
cld
pop
mov
push
cmc
dec
adc
and
mov
test
js
pop
in
sub
sub
rol
in
pop
je
test
sar
clc
pop
(bad)
cmp
imul
xchg
hlt
clc
jecxz
xor
leave
cdq
gs
lds
leave
pushf
pop
std
push
xchg
in
lea
push
mov
inc
test
dec
mov
cdq
fidiv
add
or
(bad)
popa
add
pusha
inc
cmp
dec
add
pop
add
and
ins
push
lahf
cmp
sbb
mul
jo
push
clc
test
dec
xchg
and
imul
cmp
add
loop
fmul
shl
popf
pop
sbb
cmp
retf
and
xchg
out
ja
outs
addr16
mov
add
add
sbb
(bad)
push
in
in
mov
sti
pop
sbb
sbb
ds
call
add
mov
mov
xor
inc
icebp
mov
hlt
outs
les
ins
pop
inc
cmps
movs
es
jmp
int3
mov
jecxz
call
dec
int3
jle
and
in
popf
cld
fistp
test
jo
loop
xor
xchg
pop
inc
pop
ret
jmp
outs
nop
jmp
in
int
cld
xor
xchg
pop
add
fidivr
popf
setnp
icebp
add
inc
mov
push
sbb
in
and
xor
mov
sbb
(bad)
and
out
push
into
or
or
xchg
mov
imul
lods
cmp
mov
push
push
cmp
mov
inc
inc
cdq
and
mov
xchg
out
(bad)
aam
push
sub
or
add
and
(bad)
popf
stos
test
stc
mov
(bad)
mov
test
call
out
inc
push
js
enter
cmp
adc
jmp
xor
push
or
push
mov
es
mov
mov
test
out
and
mov
ins
jae
leave
xchg
cmp
dec
je
pop
sar
inc
stos
add
or
stc
push
je
jmp
adc
(bad)
mov
mov
gs
mov
or
jae
mov
pop
sub
in
sbb
mov
pushf
sub
arpl
fadd
xor
int
adc
jecxz
mov
rol
scas
mov
mov
dec
sti
or
fs
loop
scas
mov
add
popa
fdivr
rcr
mov
pushf
jns
data16
imul
xor
jecxz
shr
inc
xor
jae
leave
hlt
jb
dec
inc
loope
inc
cmc
and
clc
add
ror
jp
push
(bad)
rcl
mov
pop
pop
adc
lahf
or
sbb
cmp
in
(bad)
dec
push
mov
lock
add
stc
into
retf
ss
sub
fwait
pop
ret
scas
imul
inc
(bad)
gs
mov
cwde
popf
and
xlat
jmp
fcomp
xor
jne
addr16
and
mov
mov
xchg
or
pop
or
pop
test
cli
adc
push
ficomp
push
hlt
mov
pop
push
pop
adc
push
outs
push
(bad)
nop
aam
xchg
sbb
or
sbb
pop
fs
fld
cmp
imul
lahf
sbb
ror
mov
ror
aam
cmp
mov
xor
int
or
sar
int3
iret
xor
ja
imul
mov
mov
ret
inc
mov
mov
inc
outs
repz
pop
push
xchg
mov
loope
xor
fucomip
xchg
push
and
mov
sti
jmp
push
out
pop
mov
ja
loop
call
jbe
inc
movs
fwait
enter
sbb
inc
mov
in
dec
jmp
jle
inc
mov
nop
icebp
lods
xsavec
leave
scas
ins
rcl
mov
shr
mov
pop
lock
pop
add
jg
cmp
mov
pop
and
sub
out
shr
jle
or
push
inc
adc
xchg
ss
inc
mov
jne
int3
jle
imul
iret
cmp
cli
repnz
mov
div
mov
sub
lea
and
call
ins
enter
or
pushf
scas
stc
scas
mov
inc
loope
ret
jge
das
enter
rcr
sahf
push
out
mov
or
mov
sbb
xor
je
or
(bad)
mov
cmps
fs
gs
loope
mov
push
je
jnp
leave
stos
cmps
repz
sub
loope
and
stc
(bad)
cmps
inc
(bad)
pop
scas
aaa
dec
xchg
retf
inc
sub
mov
fmul
fs
mov
hlt
nop
mov
cmp
(bad)
pop
mov
ror
das
inc
xchg
hlt
sub
pop
jno
pop
fwait
pop
shrd
push
stos
adc
mov
icebp
or
jns
in
outs
mov
inc
(bad)
out
loopne
inc
loop
shr
cld
fwait
in
in
mov
fabs
mov
mov
jmp
(bad)
jle
adc
xor
mov
xor
loop
js
repz
xlat
loopne
dec
data16
not
loope
mov
xchg
inc
lds
retf
out
push
aam
imul
ret
ins
lods
sbb
retf
inc
dec
sub
popf
adc
mov
adc
test
mov
inc
push
mov
(bad)
scas
add
outs
mov
add
adc
jge
popa
and
pop
sub
or
outs
cld
cmp
scas
in
or
(bad)
bound
test
mov
pop
cmp
bound
jo
xor
jp
retf
fmul
jne
loopne
xor
inc
inc
sub
lods
mov
mov
mov
sub
mov
iret
inc
ins
push
mov
cmp
jecxz
inc
xor
add
test
pop
xor
inc
fmul
adc
dec
loope
push
sbb
fsubr
repz
ja
or
push
push
push
ins
and
or
sub
cmp
add
or
call
test
leave
cmp
mov
adc
mov
dec
push
inc
outs
push
into
xor
stos
and
loopne
adc
jne
out
or
rol
addr16
pop
shl
nop
fadd
mov
mov
or
shr
add
mov
fidiv
int3
ret
dec
in
in
mov
pop
mov
ins
(bad)
pop
ja
or
movs
arpl
pop
push
dec
cmp
popa
xor
sbb
mov
outs
scas
ret
call
call
loope
clc
sbb
mov
mov
stc
adc
push
pop
push
stos
cs
pushf
push
push
aas
(bad)
loopne
mov
sbb
clc
sahf
sub
push
mov
repnz
sub
cs
arpl
xor
jne
fs
jnp
mov
or
test
push
test
popf
les
shl
mov
pop
test
xchg
(bad)
mov
adc
cli
in
in
popf
ror
jae
xor
rol
out
jne
sub
lock
imul
xchg
hlt
(bad)
pushf
sub
mov
test
or
adc
adc
std
cmp
and
dec
mov
xchg
outs
out
mov
fs
retf
imul
inc
mov
dec
pop
pushf
push
xchg
push
out
int
mov
push
xchg
leave
lds
movs
cld
popa
rol
mov
ds
and
mov
jmp
rcl
int
xor
sub
movs
push
lock
daa
pushf
push
(bad)
xchg
cwde
clc
out
push
inc
lahf
ss
std
push
lock
push
mov
push
cmps
enter
in
dec
les
xlat
jns
xchg
bound
mov
inc
mov
add
sti
pop
cmp
xor
fild
call
cmp
stos
leave
adc
cmp
mov
add
sbb
adc
aam
sub
clc
sub
dec
test
or
xor
rcl
and
cmp
lock
dec
push
mov
push
pushf
into
clc
dec
mov
xchg
retf
psadbw
add
dec
adc
mov
mov
xchg
imul
push
outs
cmps
jg
das
inc
out
test
dec
mov
outs
mov
(bad)
fstp
xchg
xlat
stos
pop
xchg
or
rcr
icebp
cmps
(bad)
bound
stc
idiv
cs
cdq
pop
pop
or
cmps
sti
jae
out
jns
aaa
ins
mov
xchg
shr
fwait
aam
in
mov
lods
ret
sub
and
lock
out
add
lods
xor
sbb
dec
jmp
push
push
dec
push
fwait
movs
adc
adc
add
aam
rol
shr
(bad)
repnz
push
adc
sbb
cmp
popf
shr
lea
mov
add
and
out
xor
push
stos
mov
jno
dec
inc
lahf
cdq
aaa
sbb
shl
int
stc
sbb
iret
aam
outs
jne
shl
test
je
push
mov
and
sbb
mov
or
inc
or
out
popf
adc
inc
into
cli
jl
movs
scas
push
lea
push
das
xchg
xor
rol
ret
and
push
jg
retf
add
cmp
aad
ins
or
push
data16
adc
inc
jmp
popa
fwait
mov
ficom
push
sub
sbb
call
jmp
and
push
jmp
add
adc
and
ja
repz
call
enter
mov
adc
fwait
data16
aas
test
rcr
sbb
iret
out
cmp
dec
cmp
fisubr
add
mov
(bad)
shr
in
test
outs
mov
cmp
enter
xor
push
aad
dec
test
xchg
mov
ss
loopne
push
cmps
scas
das
enter
sbb
cmp
(bad)
fbstp
dec
cmp
or
fneni(8087
bound
and
xor
pop
push
(bad)
cli
cmps
or
stos
jmp
jo
imul
aaa
xchg
pop
nop
clc
xor
inc
int3
outs
push
xchg
ret
cmp
adc
cmp
dec
push
popf
xor
pop
test
and
mov
mov
(bad)
test
cdq
iret
sbb
mov
je
xchg
pushf
out
pop
je
aaa
and
ja
arpl
imul
pop
fistp
out
or
or
lock
jb
or
xchg
dec
sub
lods
inc
stos
add
push
std
lods
repnz
jmp
ins
xor
add
arpl
adc
mov
out
repz
int
shl
pop
mov
jl
xor
jae
sbb
mov
xor
xchg
je
ins
sbb
test
xchg
xchg
call
mov
pop
sbb
or
jle
nop
aaa
test
data16
call
daa
daa
shl
jle
mov
jle
les
bnd
(bad)
pop
cmps
cs
add
jmp
mov
dec
iret
loop
add
inc
stos
jae
xlat
addr16
repz
jmp
fsub
cmp
adc
or
jge
cmp
and
xchg
xchg
jge
das
cld
cmp
pop
sbb
jb
leave
push
in
cmps
or
push
xor
jns
xor
mov
mov
inc
test
jge
adc
clc
lahf
and
xor
data16
mov
daa
push
pop
add
das
sbb
cwde
mov
gs
push
or
lods
stos
push
xchg
stos
ror
aam
push
addr16
jns
out
ds
mov
inc
ret
shl
push
enter
rcr
mov
and
adc
cmps
jnp
iret
out
div
xor
push
icebp
cmc
and
mov
bound
push
xor
cmp
sbb
loop
imul
adc
cmp
arpl
push
mov
adc
or
arpl
mov
push
sub
out
add
xor
addr16
pop
jge
loope
xor
cli
rcr
pop
xchg
cli
in
hlt
or
mov
cmp
jg
out
aaa
or
out
pop
and
test
dec
enter
nop
and
add
xchg
les
mov
rcl
in
pop
retf
addr16
daa
loopne
mov
popa
inc
fnstcw
aas
push
hlt
xchg
lock
cdq
stos
sahf
sti
ror
mov
in
push
push
cmp
xchg
(bad)
js
iret
lds
mov
cmps
fmul
jecxz
or
mov
sub
(bad)
fiadd
dec
push
pop
shl
and
pushf
push
push
popa
loopne
rcr
pop
ins
adc
inc
fwait
cld
ret
ret
int3
inc
sub
sbb
(bad)
cmps
nop
and
or
test
or
test
mov
mov
and
jge
test
push
adc
adc
bound
addr16
sub
psubusb
push
jmp
fsubrp
xor
cmp
popf
jle
addr16
stc
sbb
jbe
or
mov
inc
cli
xchg
fsub
mov
pop
lahf
xor
mov
sbb
and
mov
inc
fcomip
cmp
mov
push
fdiv
xor
(bad)
into
stc
ror
sbb
push
cld
mov
lds
or
jno
data16
jecxz
(bad)
int
nop
add
mov
mov
sub
mov
sub
or
out
ret
fadd
push
mov
and
mov
mov
add
pop
lods
xchg
dec
jne
cmp
sub
fisttp
push
add
pop
daa
daa
sysret
mov
dec
sub
add
mov
icebp
mov
cmc
call
dec
xchg
loopne
dec
mov
imul
mov
push
push
adc
add
push
les
(bad)
fldl2t
sbb
int3
mov
ds
jmp
cmc
mov
push
xchg
cmp
aas
adc
xchg
iret
retf
shr
push
std
jae
add
or
inc
push
add
fdivr
aaa
jge
rcr
push
add
sbb
hlt
mov
cs
jecxz
loope
sbb
lods
push
outs
movs
fwait
rcl
jae
sbb
arpl
lock
mov
pusha
push
rcr
xlat
ins
inc
call
mul
jmp
les
(bad)
xchg
xchg
fmul
mov
jle
lods
outs
loope
lds
mov
gs
(bad)
out
imul
aas
dec
fisttp
addr16
or
fcmovnu
and
jmp
aad
into
pushf
icebp
xchg
or
pop
jmp
bound
in
cmc
cmc
ins
jle
and
push
retf
lods
mov
lahf
or
(bad)
jmp
sar
stos
std
es
scas
add
sub
add
sub
test
or
loop
div
dec
push
in
sbb
sbb
imul
cld
dec
test
cmp
shl
xor
mov
int3
and
dec
ret
shl
(bad)
leave
repnz
sub
nop
fimul
xchg
stos
sti
fisttp
push
push
jle
ins
jb
ins
mov
or
test
fadd
test
jo
loopne
out
pop
aad
popa
dec
aaa
xor
out
and
fild
adc
cmp
mov
aam
sub
pop
jns
(bad)
jmp
jge
jg
jge
loop
jbe
cli
fsubr
dec
xor
pusha
gs
adc
adc
div
mov
(bad)
sub
jnp
aaa
and
leavew
push
stos
or
mov
outs
int
je
add
push
pop
pop
cmc
jne
cli
adc
loope
aaa
push
push
outs
sti
mov
arpl
bound
and
pop
ins
cmp
sub
adc
push
jo
jecxz
or
inc
stc
out
dec
les
dec
add
sar
popa
movs
or
scas
(bad)
pop
pop
ins
sub
fimul
and
in
shl
fsubr
or
leave
and
call
sub
ds
dec
and
out
and
call
or
pop
dec
jle
adc
iret
inc
repz
xchg
fwait
fwait
fwait
inc
(bad)
jae
cmc
cmc
add
pop
push
enter
ror
je
ror
mov
push
jo
sbb
push
popf
mov
ret
sub
pop
mov
cmp
pop
cmps
ins
jge
add
pop
call
inc
shl
and
adc
(bad)
fwait
fs
into
lds
pop
and
lds
(bad)
fsub
out
mov
aam
fwait
aaa
iret
pop
inc
xor
jmp
adc
(bad)
mov
mov
sahf
lahf
pushf
lock
push
ror
scas
pop
adc
bound
push
fmul
jbe
cmc
pop
je
(bad)
pop
ret
addr16
inc
int3
pop
pop
outs
call
push
sbb
gs
mov
push
call
dec
mov
sbb
xchg
sbb
pusha
and
push
and
movs
fs
mov
popa
push
movs
and
repz
sub
imul
cmp
les
retf
sbb
outs
sub
push
daa
pop
js
jp
(bad)
mov
lds
iret
aas
es
push
cmp
dec
ret
cmp
cld
fcom
icebp
inc
cmps
xchg
push
mov
test
lods
sbb
test
jmp
iret
arpl
sti
pushf
cmc
cmp
inc
jle
push
test
popa
out
mov
jecxz
xor
push
sar
fld
mov
mov
sbb
adc
arpl
adc
xchg
or
cli
cmp
(bad)
cld
rol
fs
pop
sub
cmp
add
sbb
jmp
pop
dec
mov
or
retf
sbb
sbb
aaa
jnp
mov
jp
loopne
sbb
mul
inc
(bad)
outs
pop
cmp
jp
add
ficomp
push
or
jae
repz
mov
push
stos
movaps
hlt
pushf
fnstcw
mov
jecxz
xlat
(bad)
int3
(bad)
bound
div
or
lods
mov
cmps
mov
mov
push
test
cdq
pop
and
das
sub
or
mov
push
push
cmp
sti
cmp
mov
jns
sub
jbe
inc
adc
sbb
jae
xor
stos
push
mov
mov
loopne
stc
gs
out
out
(bad)
call
mov
mov
je
or
push
daa
sbb
sbb
jmp
dec
jecxz
jge
or
js
adc
push
aaa
inc
outs
pop
dec
movs
inc
jo
cs
inc
in
iret
cmc
mov
dec
imul
mov
or
dec
jge
(bad)
sub
pop
jecxz
adc
in
or
mov
cmps
pop
(bad)
ror
sbb
or
(bad)
mov
mov
mov
dec
retf
pop
loope
mov
pop
add
xchg
mov
movs
(bad)
and
adc
cmove
dec
or
(bad)
out
ret
xor
pop
addr16
jne
popa
dec
mov
test
add
imul
inc
fsub
hlt
cmp
call
pop
fldenv
hlt
(bad)
retf
mov
or
stos
mov
dec
push
push
mov
pop
sbb
xor
inc
bound
xchg
push
je
jns
aad
int3
mov
push
pop
xor
fidiv
cli
xchg
sub
pop
int3
push
adc
fcom
push
jne
rol
dec
add
sbb
jmp
(bad)
hlt
sahf
aas
scas
hlt
(bad)
jmp
xchg
xchg
mov
add
bound
pop
lods
in
jmp
mov
and
outs
fiadd
push
imul
adc
add
stos
arpl
aaa
stc
fwait
ins
loopne
inc
leave
jne
inc
popf
jmp
sub
mov
scas
dec
pop
lahf
xchg
inc
jmp
cs
xor
jb
jmpw
sti
and
outs
xor
push
mov
call
in
push
hlt
and
xor
add
add
movs
cs
jno
movs
adc
or
and
inc
cmc
adc
ins
in
mov
lahf
adc
or
les
push
mov
sub
jae
out
scas
sub
fisubr
cmp
xor
and
push
inc
xchg
sahf
sbb
pop
xchg
xchg
add
retf
jge
xchg
cmc
and
sbb
div
adc
aas
(bad)
pop
leave
outs
scas
aaa
retf
ds
das
xor
add
pop
aas
aaa
dec
push
pop
jp
add
repnz
call
push
adc
ins
mov
imul
lods
adc
push
adc
push
lea
cmp
sub
xchg
jmp
fwait
sub
push
jle
(bad)
fld
and
bound
lea
mov
sub
iret
push
push
(bad)
dec
out
or
push
xchg
adc
jle
ins
mov
dec
add
out
sub
nop
ret
or
jmp
popf
in
jb
test
fdivr
or
jne
jle
cmp
cwde
daa
push
ror
dec
imul
lock
fmul
add
xor
mov
xchg
push
test
stos
cld
fidiv
stc
(bad)
jmp
stos
test
cmp
and
adc
in
mov
fs
adc
dec
cld
pop
fs
cmp
fdivr
cmps
scas
sahf
sbb
xchg
pop
mov
cmps
dec
mov
sub
leave
mov
mov
out
xlat
rol
loopne
sub
xor
clc
cmps
aaa
inc
sti
(bad)
sti
jno
pop
imul
sbb
pop
adc
inc
mov
sub
(bad)
outs
sti
rcr
cmc
add
xchg
mov
add
sub
cwde
jbe
cs
jo
sbb
mov
ins
sub
imul
arpl
jno
add
jle
sub
pop
mov
inc
rcr
popf
add
mov
(bad)
es
pop
outs
dec
(bad)
mov
xchg
lods
mov
jmp
movs
das
fisub
sub
ss
cmps
gs
cmp
fsubr
mov
arpl
and
mov
pop
and
and
jae
mov
mov
lock
sub
clc
iret
stc
sbb
xchg
or
(bad)
fwait
(bad)
fld
and
mov
sub
fcomp
jne
sub
fistp
das
sub
and
mov
pop
pop
fwait
sbb
and
mov
scas
mov
push
push
int3
mov
fsub
inc
rol
sbb
shr
xlat
add
and
sbb
ret
test
fcmovnb
jle
push
ja
movs
jne
adc
pop
sbb
cmps
jecxz
sbb
pusha
fistp
mov
test
mov
xlat
test
add
mov
mov
bound
mov
ins
xchg
mov
outs
lods
xlat
fiadd
in
or
(bad)
adc
(bad)
xor
pop
sub
cs
xchg
sar
pop
in
mov
lds
add
xchg
les
mov
(bad)
sahf
repz
in
lods
fisttp
pop
out
cld
jecxz
inc
xor
inc
or
mov
leave
clc
fiadd
jmp
sub
sub
xchg
into
movs
fld
icebp
xchg
mov
push
or
div
inc
hlt
test
dec
sbb
dec
pop
push
xlat
ret
jne
fwait
dec
mov
mov
call
imul
loope
(bad)
push
shr
lods
cli
repz
or
out
shl
or
stc
pop
jl
adc
int
push
std
adc
push
scas
dec
cmp
mov
scas
daa
jns
int
out
lods
loope
(bad)
fcmovbe
dec
sbb
retf
jno
lea
add
xchg
and
js
cmp
sub
imul
lods
out
fstp
lahf
push
scas
jle
jnp
(bad)
mov
jb
dec
xchg
add
aas
sub
cs
xor
adc
cmp
sub
rcr
lods
movs
cmp
stc
(bad)
repz
arpl
mov
mov
test
jo
push
adc
scas
popa
add
jno
fsubr
ror
ds
stos
inc
fst
shl
xchg
mov
xor
rol
scas
or
sub
mov
pop
(bad)
push
sbb
call
sub
and
mov
enter
arpl
mov
mov
push
mov
cmp
popf
in
imul
jo
jno
mov
rcl
push
ins
ss
cmc
push
jnp
ret
test
cwde
sub
sbb
push
in
lods
cmp
and
push
jo
icebp
push
aaa
or
add
outs
ret
jg
inc
movs
mov
call
ret
int3
cmps
xchg
cli
mov
repnz
ds
mov
or
adc
pop
cmp
outs
and
in
mov
cmp
and
(bad)
shl
loop
mov
popa
cmp
jnp
and
lods
mov
adc
pop
xor
mov
add
in
xor
adc
mov
mov
ins
inc
aaa
jle
cmp
iret
pop
jo
jo
jae
push
sbb
shl
dec
(bad)
call
or
stc
out
test
inc
add
(bad)
and
or
inc
div
mov
mov
cmps
mov
mov
ret
(bad)
std
dec
inc
sbb
cmp
iret
mov
jmp
stos
dec
repnz
fadd
push
cdq
ror
daa
stos
xchg
test
pop
jmp
sub
je
aam
shl
in
mov
call
xchg
cwde
cmp
xlat
popf
push
adc
add
(bad)
clc
stos
or
push
test
retf
xchg
pop
adc
ret
aad
fs
cmp
sbb
or
dec
push
sub
cli
jp
clc
inc
or
xchg
mov
(bad)
fnsave
push
xor
rol
hlt
pop
in
mov
xor
mov
in
out
addr16
add
sahf
ret
sub
pop
push
push
icebp
mov
loopne
adc
pop
mov
push
outs
inc
jbe
lock
jmp
fsub
cdq
push
cwde
mov
add
adc
test
inc
gs
das
movs
movs
es
jp
dec
adc
enter
(bad)
loop
shl
pop
mov
or
daa
mov
xchg
jbe
addr16
into
out
aam
dec
xchg
dec
or
cmp
xchg
mul
sbb
fs
fadd
popf
mov
sub
sub
(bad)
addr16
push
rcr
push
mov
cwde
loop
bound
cmp
ffree
sub
mov
mov
jmp
mov
in
popf
xchg
sahf
repz
xor
daa
popf
jle
in
adc
mov
fdivr
fucomip
sahf
iret
push
aas
jae
sub
aas
xor
add
ss
ss
or
je
iret
loopne
jmp
mov
out
int
aam
add
call
cwde
stc
in
xchg
xchg
or
inc
xchg
call
mov
push
sbb
sahf
mov
out
mov
fstp
leave
jb
sbb
inc
in
mov
imul
jne
adc
push
lods
pop
pop
shl
rol
xor
movs
pusha
cmps
mov
ret
xchg
cmp
rcl
repnz
mov
sbb
mov
cs
push
mov
add
das
mov
adc
out
sbb
xor
and
mov
jb
mov
xor
xchg
pop
dec
shl
push
inc
dec
out
jb
(bad)
repz
ret
js
pop
loopne
jg
cmp
std
repz
fldz
adc
mov
pop
ficom
aad
mov
icebp
inc
push
sahf
cmp
mov
ret
mov
push
into
adc
fisub
jp
sbb
add
sub
cld
xchg
fsubr
mov
out
sbb
loopne
jecxz
(bad)
aas
jae
aad
push
inc
(bad)
sbb
pop
fistp
cwde
or
cld
mov
das
pop
mov
cmp
mov
fcmovu
jecxz
aad
out
push
ss
and
std
jne
mov
dec
pop
adc
cmp
sbb
out
pop
xchg
inc
inc
dec
and
inc
or
cmps
and
and
fcomp
cli
div
call
pop
popa
or
jl
dec
sub
mov
or
rcl
idiv
mov
cwde
stos
adc
mov
or
fucomi
dec
mov
ja
arpl
xchg
pop
dec
and
pop
inc
or
imul
or
dec
mov
inc
mov
or
cmp
mov
cs
push
mov
data16
lahf
and
mov
mov
repnz
loopne
lea
cmp
clc
dec
mov
cdq
bound
jmp
(bad)
mov
xor
pop
shr
movs
mov
int
mov
sub
aam
and
jbe
mov
int3
cmp
sbb
pop
mov
mov
ds
mov
sub
and
(bad)
stos
and
jbe
jnp
outs
inc
sub
xchg
icebp
scas
cli
jecxz
or
sbb
repnz
stos
push
dec
inc
fnstcw
(bad)
fstp
cmp
inc
push
jmp
inc
dec
fs
mov
in
inc
fisubr
cmps
neg
xlat
bound
hlt
xchg
inc
loopne
outs
test
bound
push
adc
mov
mov
call
ret
mov
push
push
mov
inc
add
ret
mov
ret
enter
nop
int3
adc
and
fs
stc
jae
inc
jp
pop
or
cs
sub
pop
push
xor
leave
int
ins
fisub
or
stos
lods
mov
sbb
paddsw
sub
nop
mov
dec
call
loope
sahf
mov
mov
int
cmp
adc
test
mov
daa
adc
and
mov
mov
dec
cmp
jl
outs
stos
outs
inc
xchg
push
aas
push
add
xor
aas
adc
bound
add
jge
clc
xchg
push
pop
jle
sbb
adc
test
gs
add
jmp
push
jne
xchg
ret
sbb
mov
pop
sahf
scas
out
out
jo
and
add
rep
dec
outs
xor
add
into
stos
sub
iret
and
mov
mov
retf
jo
cmp
(bad)
adc
mov
in
xchg
test
cmp
add
sub
repz
sub
rcr
icebp
clc
lea
stc
shl
loopne
std
leave
jmp
pop
or
popa
cdq
pusha
pushf
mov
inc
fst
xlat
mov
sar
mov
stos
outs
sub
adc
xor
and
ins
cmp
fnsave
and
pop
jecxz
hlt
in
xor
in
sahf
sbb
mov
xlat
xlat
xor
adc
jbe
sti
sub
push
(bad)
xchg
jno
mov
cmp
adc
add
cmp
xchg
jb
xchg
push
mov
push
push
pop
fdiv
aas
inc
scas
xlat
fld
mov
leave
repz
push
xchg
stc
push
stos
ret
push
(bad)
mov
jle
mov
scas
sti
xlat
nop
and
mov
in
fxch
pop
pop
mov
sbb
out
je
in
dec
mov
pop
cmp
test
test
adc
(bad)
test
inc
je
cmp
cmp
jmp
sbb
jmp
cmp
fldcw
cwde
into
sar
adc
sub
(bad)
jle
mov
hlt
retf
sub
mov
or
jge
lods
es
adc
out
sub
push
iret
inc
mov
or
cli
adc
mov
enter
mov
gs
cmps
nop
jmp
test
adc
ret
call
je
and
dec
shl
int3
dec
mov
imul
sahf
push
hlt
iret
xor
sub
jecxz
stos
movs
lods
xchg
repz
int
fdiv
and
stos
mov
and
test
loope
pop
fdivr
scas
ret
scas
mov
pop
xchg
out
mov
data16
bound
(bad)
test
mov
hlt
mov
xlat
comiss
fistp
pop
pop
nop
cmp
sbb
mov
push
mov
ror
stc
das
cmc
fisttp
dec
sub
movs
xor
icebp
mov
push
cmc
popa
and
or
inc
test
mul
jl
mov
lods
inc
ret
pop
hlt
imul
mov
(bad)
or
adc
mov
test
mov
test
mov
mov
fcomp
loopne
adc
mov
push
in
add
retf
test
ret
and
dec
lods
aam
and
inc
sti
and
(bad)
test
mov
inc
pop
xor
push
add
lods
outs
aaa
xor
les
cmp
sub
adc
push
or
cs
mov
ins
mov
add
pop
pushw
xor
mov
sti
sub
inc
cs
repnz
shl
neg
jp
cmps
cmp
dec
inc
(bad)
add
pop
imul
and
cdq
cdq
std
cmp
add
iret
(bad)
(bad)
out
sahf
adc
fiadd
or
inc
aas
test
stos
retf
sbb
jmp
fcomp
call
popa
jo
aas
retf
cmp
sbb
sub
inc
inc
xchg
mov
stos
test
xor
jp
inc
xor
cwde
das
jl
adc
and
dec
jo
pop
ds
xor
mov
sbb
and
xor
fadd
stc
xchg
dec
xchg
(bad)
sahf
xchg
call
or
push
lods
inc
sub
ret
stos
mov
jmp
mov
xor
inc
pop
mov
test
inc
scas
retf
push
(bad)
je
sub
popa
scas
pop
ficom
clc
stc
cmps
sub
mov
add
pop
add
(bad)
jg
xor
pop
pop
mov
cmps
and
scas
xchg
imul
jnp
fisub
lods
es
retf
mov
sbb
push
ret
sar
and
add
hlt
mov
(bad)
or
adc
jno
ss
ss
jecxz
mov
adc
inc
pop
mov
enter
push
jmp
sbb
cmc
outs
fwait
(bad)
mov
pop
lods
sub
cmp
iret
jmp
pop
hlt
sub
pop
loope
movs
fwait
cmp
mov
bound
repnz
mov
fstp
popa
fmul
ret
xor
sub
fwait
jmp
clc
aam
xlat
mov
or
mov
popa
add
mov
cwde
test
sub
aas
jge
jmp
sub
cmps
jmp
jp
rcl
movs
jecxz
push
cmps
mov
pop
cld
(bad)
jl
out
les
pushf
lods
or
pop
cmp
jbe
mov
popf
shr
mov
mov
or
jp
pop
fdivr
leave
cdq
jno
and
jp
push
(bad)
ins
mov
call
xchg
addr16
aam
bound
xchg
(bad)
js
(bad)
ret
fwait
xor
mov
nop
daa
in
adc
or
mov
jnp
fisttp
test
fs
pop
pop
dec
add
or
inc
retf
mov
mov
jecxz
mov
add
pop
imul
jne
push
adc
push
push
jle
mov
sub
sti
cdq
fucom
icebp
aas
imul
hlt
push
adc
cmp
add
adc
push
mov
xchg
loopne
pop
mov
test
jge
cvtps2pd
stos
addr16
loope
push
aas
mov
cmp
jmp
shl
xchg
popf
test
adc
cld
adc
jl
or
xor
dec
js
mov
ins
cmp
sar
int3
cmp
lods
mov
mov
aaa
adc
lock
and
outs
sbb
mov
dec
call
adc
sub
xor
into
jecxz
daa
jns
jne
leave
ds
stos
cmp
das
sbb
retf
cmp
mov
mov
pop
sub
shl
mov
mov
mov
push
jmp
icebp
ror
dec
(bad)
das
movs
inc
lock
push
add
call
sbb
cdq
aas
loop
test
stos
jp
xor
add
adc
out
test
sahf
inc
jae
pop
out
ror
xor
mov
jb
mov
popf
add
sti
fisttp
popf
pushf
mov
xchg
mov
or
push
pusha
push
daa
fs
inc
retf
jo
jmp
in
shl
test
mov
int3
imul
jo
pop
(bad)
jmp
mov
dec
adc
jnp
js
shr
daa
jnp
jo
dec
cmp
cs
sub
daa
mov
cmps
rol
jl
aam
mov
cmp
add
scas
cmc
push
test
jg
je
daa
daa
call
sub
ja
jl
and
retf
jmp
xchg
inc
icebp
sub
ret
or
xor
lea
mov
test
jnp
test
mov
shl
xchg
mov
mov
cmp
inc
lea
jne
nop
add
pop
or
dec
pop
xlat
hlt
mov
and
rcl
sub
cmp
adc
mov
lods
fimul
add
add
cmp
gs
hlt
cld
dec
mov
xchg
fs
arpl
test
xchg
xor
sbb
daa
and
mov
pushf
cdq
inc
repz
jecxz
jae
jae
aam
out
bound
or
ja
or
addr16
pop
pop
push
mov
fild
and
cs
mov
jbe
jne
xchg
popa
pop
cmps
jge
sbb
rcl
mov
add
or
mov
jmp
mov
fbstp
hlt
or
bound
dec
push
out
enter
inc
scas
je
jp
out
sbb
ins
inc
das
xor
shl
mov
mov
shl
pop
outs
std
outs
imul
lock
and
out
aad
push
and
fild
cdq
mov
xchg
repz
rcr
into
xchg
cs
data16
aad
repnz
fwait
or
or
jmp
fwait
inc
loope
fdiv
pop
jno
pop
mov
jmp
jo
test
lods
leave
jo
call
scas
xchg
cmp
xchg
dec
mov
in
je
mov
leave
std
pop
ins
sbb
imul
or
cmc
hlt
sub
dec
mov
mov
xlat
mov
cpuid
dec
inc
inc
mov
test
xchg
clc
xchg
imul
push
ss
pop
(bad)
jmp
or
lds
test
int
jecxz
mov
test
add
fld
push
rol
xchg
pop
xor
inc
push
shl
pop
mov
(bad)
and
mov
sub
push
ja
jge
xor
lods
aas
and
cmps
clc
inc
sbb
adc
fidivr
sti
out
dec
fcomp
movs
xor
not
xor
or
stc
aaa
inc
mov
sbb
add
jns
mov
sbb
mov
xchg
pop
jecxz
test
jne
test
out
mov
xchg
stc
or
dec
loopne
out
adc
jnp
fs
sahf
xor
xlat
rcl
push
jb
jnp
test
adc
dec
cmp
xor
lock
ss
xchg
xlat
es
or
sbb
push
mov
std
scas
test
aas
jle
mov
ret
xchg
inc
cli
scas
push
cmp
xchg
pop
dec
sub
fld
fld
jge
jns
sub
shl
inc
push
add
loop
or
popf
in
inc
stos
dec
mov
and
not
jge
out
pop
add
in
in
pop
push
mov
sbb
gs
mov
inc
or
sbb
or
js
cmp
lea
fs
jle
ja
mov
movs
push
dec
sbb
call
aam
sbb
je
repnz
(bad)
mov
mov
outs
xchg
mov
outs
gs
ss
clc
movs
popa
retf
push
in
cld
mov
jb
xor
dec
and
mov
arpl
dec
jle
mov
jnp
mov
jb
mov
mov
out
xchg
mov
in
aaa
sub
sbb
push
aas
out
cmp
cmps
push
shl
or
xchg
fidiv
adc
ja
inc
outs
and
gs
mov
mov
dec
fldcw
sbb
int3
xchg
sbb
std
outs
lds
pushf
scas
fs
data16
xor
cs
sbb
inc
fmul
and
fcmove
pop
je
push
test
fisttp
push
cmps
mov
and
xchg
inc
in
test
pop
mov
sbb
mov
push
pop
xlat
retf
xchg
in
cld
repz
aaa
push
out
fdivrp
aam
cli
sbb
fbstp
jle
das
(bad)
pop
xor
scas
aaa
rol
(bad)
rcl
mov
aas
push
adc
cmp
outs
push
xor
mov
(bad)
cmp
jg
sub
add
dec
jnp
or
xchg
test
les
adc
inc
xor
mov
(bad)
loopne
xchg
add
sbb
xor
cmp
aam
push
out
push
or
mov
mov
push
je
icebp
cwde
cmp
sub
xor
jmp
jp
push
mov
leave
ds
(bad)
stc
data16
lods
dec
mov
repnz
leave
sbb
scas
mov
mov
add
push
push
pop
push
outs
inc
fidivr
retf
popf
int3
pop
cmp
sar
jo
dec
iret
cmp
mov
jne
in
je
mov
jg
cmp
and
imul
aas
call
fisubr
adc
cli
jmp
mov
popa
stc
(bad)
int
jl
mov
adc
xor
(bad)
mov
sub
push
fcomp
mov
js
clc
js
popa
push
stos
inc
inc
sub
ja
gs
pushf
xor
cmp
pop
sahf
pop
out
xchg
pushf
push
mov
aaa
and
ror
sub
in
rcl
movs
xor
outs
je
sbb
sub
cmp
cmps
lock
mov
mov
pop
fs
jbe
fnstcw
call
push
out
mov
jne
inc
lods
gs
test
xchg
test
inc
mov
push
cdq
aam
clts
pusha
mov
inc
ds
cmp
repz
ror
iret
push
repnz
(bad)
call
fsubr
stos
and
or
fstp
mul
cmp
das
or
adc
ret
in
std
inc
outs
xchg
adc
in
mov
inc
ja
dec
imul
cli
dec
dec
push
pushf
jl
inc
ins
mov
and
dec
xchg
and
add
mov
daa
cmp
and
or
in
test
pop
and
icebp
in
push
dec
test
lea
xlat
mov
(bad)
xchg
(bad)
mov
add
add
adc
pop
push
mov
adc
mov
mov
mov
leave
sahf
xor
cwde
pop
mov
sbb
cld
add
std
xchg
shl
in
icebp
mov
mov
jb
xor
sbb
pop
hlt
pop
push
cmp
cmc
cmp
out
and
out
push
fwait
arpl
mov
sbb
add
hlt
pop
icebp
cmp
fnstsw
jge
clc
cmp
test
dec
push
cmc
pop
mov
call
or
and
shl
(bad)
jle
adc
jp
inc
xchg
and
dec
repnz
lock
ins
call
inc
or
out
outs
imul
xchg
push
out
ficomp
xor
inc
xor
imul
adc
jle
call
prefetcht1
push
pop
std
inc
xchg
std
adc
int
xchg
cdq
and
imul
mov
mov
add
in
jno
iret
cdq
sub
nop
call
shl
ror
ins
add
adc
jecxz
sub
lods
stos
push
sub
cdq
je
and
rol
xor
pop
jns
movs
fistp
cmps
sbb
loope
shr
aas
ret
lea
jno
test
sub
mov
int
inc
fadd
rcl
popa
lods
sub
fild
pop
hlt
cmps
jae
push
dec
jle
push
loop
mov
stos
push
push
mov
ins
mov
cld
mov
loop
mov
(bad)
outs
dec
dec
stos
mov
mov
fldcw
mov
jecxz
and
xor
cmps
and
or
mov
fwait
stc
(bad)
(bad)
fist
test
adc
or
adc
ret
movs
inc
sahf
jge
loop
jns
or
ja
xchg
jbe
pop
call
cdq
sub
pop
cmc
cmps
stc
addr16
fisubr
bound
or
jae
and
std
les
jle
or
xor
inc
inc
sub
xor
stc
fld
std
inc
jb
jns
aam
cmc
xchg
mov
push
fbstp
loop
sub
imul
mov
es
sub
sbb
loop
xchg
xor
adc
jge
xor
xlat
jns
inc
inc
mov
adc
push
jg
push
retf
loop
jnp
mov
frstpm(287
xchg
xor
iret
(bad)
and
sti
int3
cld
and
push
push
mov
jb
mov
push
enter
out
inc
adc
adc
scas
scas
cmc
cli
jns
xor
dec
inc
push
mov
jmp
cs
dec
fwait
in
popa
imul
adc
enter
fs
call
jecxz
jle
mov
iret
push
cmp
imul
xchg
inc
icebp
push
adc
inc
cdq
clc
pop
jmp
xlat
adc
cs
mov
(bad)
icebp
and
xchg
inc
bound
dec
sub
cmp
test
mov
xor
js
or
(bad)
fnstcw
mov
mov
inc
dec
inc
mov
test
imul
(bad)
or
aad
aaa
ror
rcl
jmp
dec
mul
rcl
pusha
lds
pusha
jg
sbb
xor
pop
mov
lods
into
sbb
adc
out
xchg
push
jne
aas
fcmovbe
jge
enter
(bad)
mov
adc
fisub
movs
push
cmp
and
out
(bad)
jl
jle
and
jecxz
jp
pushf
inc
repnz
inc
dec
rcl
ins
push
lock
ffreep
inc
adc
sbb
test
jb
inc
les
jo
daa
cli
cmp
xchg
mov
rcr
pop
mov
mov
jnp
stos
sbb
inc
fmul
daa
cmp
mov
sub
add
mov
push
mov
xchg
mov
into
cs
cwde
cmp
mov
int
sbb
out
ror
xor
aaa
jmp
add
and
leave
out
mov
xchg
xlat
stc
xchg
lds
jne
xchg
mov
pop
fnstenv
xchg
loop
(bad)
push
int
retf
aad
mov
and
bound
push
das
xor
or
imul
js
dec
xlat
pop
dec
lea
mov
mov
fldenv
cmp
fdiv
mov
mov
js
mov
push
imul
shr
sahf
inc
xor
dec
inc
aam
repnz
into
mov
dec
test
pushf
mov
inc
jp
or
out
(bad)
hlt
ins
js
fld
out
push
ret
xchg
sbb
inc
ror
aaa
cmp
xchg
pusha
aaa
cmp
mov
dec
imul
pop
jmp
adc
add
outs
lods
repnz
imul
loopne
jg
mov
ret
adc
dec
cmp
push
scas
dec
mov
jo
cmp
inc
mov
dec
int
sub
adc
mov
cs
std
mov
mov
sbb
dec
rol
add
pop
stos
sbb
mov
test
leave
imul
push
stc
stc
leave
repnz
and
mov
test
cmp
mov
fs
ficom
fnsave
cmps
or
cld
bound
call
mov
sbb
jg
fnstsw
and
arpl
or
sbb
push
in
out
xor
dec
addr16
(bad)
mov
ret
loopne
popa
test
je
xor
dec
inc
sub
adc
cmps
adc
hlt
adc
mov
dec
js
mov
out
rcl
stc
outs
int
shl
fs
mov
dec
popa
das
push
or
test
in
scas
daa
sbb
mov
xor
sub
ret
sub
lock
jae
les
mov
lods
stos
mov
popf
xor
in
retf
xchg
pop
jecxz
add
sti
sub
xchg
outs
xchg
jp
mov
dec
pusha
enter
jge
fwait
xor
pop
repnz
in
mov
jmp
mov
nop
call
je
sub
sti
in
stos
scas
fldcw
fdiv
daa
movs
cmp
inc
out
ss
dec
mov
cmp
cmp
cmp
and
cli
fnstsw
dec
xchg
sub
and
sub
aaa
lods
pop
repz
mov
adc
(bad)
fnstcw
scas
(bad)
jb
in
push
sub
inc
push
aam
push
dec
fs
clc
fcomp
and
add
aad
pop
sbb
int3
fisub
and
fcom
push
push
popf
fisttp
adc
test
fwait
ja
ror
jbe
test
dec
stos
mov
cmps
lods
test
jnp
dec
sbb
push
xor
(bad)
fmul
lock
into
push
cmp
stos
mov
fld
aaa
clc
scas
(bad)
mov
sar
mov
mov
test
popa
pop
adc
mov
(bad)
mov
lock
cmp
int
pop
mov
test
fs
das
rcr
fwait
or
dec
inc
sbb
dec
mov
push
or
test
xor
mov
mov
ror
in
call
xchg
xchg
lods
pop
pusha
xchg
fistp
jno
mov
cli
adc
mov
xchg
inc
inc
loop
cmp
rcr
das
rol
xchg
in
push
mov
xlat
int
adc
add
jae
jmp
mov
int
popa
jb
xchg
cmp
or
imul
clc
movs
dec
add
cld
pusha
cmp
cmp
xchg
out
(bad)
(bad)
push
cmp
xchg
(bad)
cmp
xor
cmc
push
loope
lods
into
xchg
and
in
aaa
jnp
jmp
sub
test
xor
aad
cmc
punpckldq
xor
ret
imul
xchg
push
sbb
lods
call
push
sbb
movs
sahf
xchg
fmul
xchg
jmp
add
cmps
sub
pusha
aad
mov
(bad)
cmp
mov
sbb
xor
popf
push
push
jae
xor
iret
add
xor
imul
retf
test
sahf
je
jne
out
addr16
cmp
ficom
lock
push
jb
rcl
pop
movs
stos
pushf
fld
push
(bad)
fs
xchg
ja
and
push
hlt
jl
dec
adc
cmps
ficom
add
inc
jmp
sbb
xchg
stc
test
aaa
(bad)
jecxz
ficom
pusha
pop
clc
repz
aad
ret
out
mov
in
adc
mov
xchg
and
mov
push
jl
stc
pop
push
out
sub
push
xor
adc
nop
cmps
add
mov
dec
push
fmulp
std
adc
add
mov
pusha
sti
aaa
sub
cmps
jecxz
call
sbb
je
xor
call
xor
mov
ins
inc
out
adc
(bad)
mov
mov
pop
and
mov
jge
push
jl
xor
add
nop
push
push
jne
mov
mov
xchg
stos
jno
loop
(bad)
jle
xlat
fdiv
push
mov
add
mov
lods
xchg
movs
sti
sbb
push
(bad)
loopne
out
cmp
sub
xchg
repz
and
sbb
push
dec
mov
mov
mov
shrd
pop
(bad)
repz
daa
dec
aad
and
(bad)
data16
xor
mov
scas
or
not
jp
mov
gs
xor
sbb
and
(bad)
icebp
mov
xchg
pop
cwde
dec
loopne
xchg
or
adc
in
imul
jo
jne
cmp
sbb
push
pop
nop
aas
shl
cs
mov
or
adc
fild
call
movs
dec
repz
out
nop
dec
push
test
mov
adc
adc
jne
jecxz
xcrypt-ofb
cmps
push
or
mov
mov
mov
sbb
loope
jp
cmc
xchg
cmp
shl
loop
test
repnz
pop
nop
and
ins
dec
ret
adc
fnstsw
lea
shl
stc
retf
push
push
adc
bsf
mov
popa
aad
jae
pop
xchg
jo
enter
data16
gs
lods
bound
cs
jbe
add
sub
mov
mov
cwde
loop
sti
inc
cmp
add
fist
xor
inc
cmp
jb
mov
pop
popf
jae
xchg
ffree
sbb
jns
sbb
mov
push
and
cld
cmp
mov
push
test
pop
aaa
mov
mov
push
pop
fwait
pop
cmp
sbb
jo
ret
lds
xchg
shl
test
cdq
dec
mov
pushf
out
ret
je
mov
push
sbb
ja
push
pushf
cmp
lahf
out
pushf
gs
nop
sti
ins
jge
ret
into
mov
in
movs
sub
push
push
mov
xor
nop
out
push
cmp
popf
sbb
dec
jmp
mov
fmul
pusha
dec
ins
std
scas
dec
(bad)
jp
or
jl
pop
lods
sti
pop
sbb
idiv
sub
or
cmps
and
or
lods
mov
and
mov
repz
pusha
mov
dec
push
add
sbb
push
scas
fild
xor
mov
push
mov
daa
xchg
mov
adc
ficomp
in
cmc
sar
(bad)
pop
or
clc
push
repnz
adc
(bad)
stos
or
in
cdq
neg
xor
repz
mov
mov
sbb
mov
dec
dec
(bad)
call
cmp
adc
push
mov
mov
jmp
xchg
pop
mov
or
sub
ja
fbstp
or
xchg
add
ret
iret
nop
xchg
mov
cmp
mov
(bad)
mov
nop
sub
into
ficomp
mov
jno
push
sti
jecxz
xchg
ror
cli
xlat
stc
test
inc
ret
std
lods
adc
sbb
lea
nop
or
js
jo
popf
xor
jl
addr16
adc
xor
jno
push
sbb
jbe
call
fs
cmp
(bad)
xchg
adc
xchg
lea
or
call
lds
popa
jns
ins
sti
inc
in
addr16
(bad)
jle
mov
addr16
mov
or
sub
push
loop
mov
or
aad
xor
rol
das
and
lea
sbb
cmps
idiv
shr
mov
mov
and
or
out
add
jecxz
sbb
push
ins
pop
daa
pop
cdq
and
mov
jno
push
mov
xor
test
test
test
dec
add
loop
cmps
js
mov
ds
mov
mov
imul
jle
add
dec
mov
adc
fxch
not
imul
adc
int
adc
mov
dec
fldln2
rcr
shl
cmp
adc
imul
sar
pop
add
je
pop
popa
das
clc
mov
in
mov
inc
fst
cmp
loope
dec
popa
pop
call
jnp
cmp
jb
sbb
and
mov
out
ins
into
push
into
sbb
pop
lea
fs
lods
mov
mov
sbb
call
in
add
push
xor
jge
mov
cmp
dec
push
clc
loopne
adc
pop
xchg
mul
sub
push
pop
xor
inc
sbb
push
ja
pop
outs
jne
fsub
mov
xchg
ja
sbb
add
fwait
adc
imul
int3
iret
sbb
inc
movs
arpl
stos
sub
dec
cmc
jmp
cld
jae
cmp
lock
jmp
inc
leave
(bad)
scas
jno
cwde
les
sub
shl
pop
push
xchg
jne
in
(bad)
mov
inc
push
aam
lods
das
dec
and
rcl
les
or
or
sbb
xchg
jle
pop
mov
xchg
adc
xor
out
jb
aad
lea
movs
xchg
and
sbb
mov
and
xor
iret
adc
cli
ins
mov
lods
je
xchg
jno
nop
pop
fucomip
xor
popf
mov
sub
pop
fist
adc
(bad)
js
mov
fnstenv
mov
fadd
(bad)
ins
add
push
in
cmc
fist
adc
xchg
dec
out
mov
call
ss
rcl
out
push
pop
scas
inc
out
cmp
jnp
sub
fnstenv
repnz
push
addr16
outs
push
imul
jo
jl
inc
cdq
push
retf
lds
adc
cmovne
sbb
ins
movs
mov
or
push
jne
stos
or
add
cmp
jbe
xor
and
push
inc
lea
and
push
mov
out
xor
cmp
(bad)
xor
dec
in
imul
test
in
cmc
and
out
sbb
and
or
sub
lahf
jb
and
adc
dec
mov
ret
outs
cwde
popa
out
pop
das
scas
adc
dec
xor
xchg
jg
inc
push
mov
push
adc
add
lods
sbb
jecxz
leave
adc
imul
dec
sub
push
dec
fdivr
dec
pop
and
sub
adc
push
sub
mov
pop
adc
lds
cdq
aaa
bound
ficomp
js
enter
dec
popa
popa
adc
sbb
sar
xchg
das
cld
(bad)
jne
es
lods
test
or
cmp
push
enter
popf
(bad)
(bad)
jmp
pop
mov
pop
jno
jg
pop
push
outs
cmps
adc
pusha
test
mov
mov
fcomp
push
push
dec
xlat
adc
xchg
mov
inc
daa
mov
or
inc
mov
jg
popa
addr16
test
mov
mov
dec
ds
mov
inc
lds
in
or
sbb
mov
and
mov
repnz
add
out
in
or
dec
pop
ins
sub
fld
pop
repnz
mov
jnp
clc
mov
and
iret
push
lods
test
pop
mov
push
repnz
popf
sbb
in
js
dec
(bad)
mov
(bad)
(bad)
pop
jae
and
dec
pmulhw
or
cmp
movs
and
xor
push
fsubr
cmp
inc
mov
xrelease
pop
imul
cmp
movs
or
mov
scas
(bad)
add
movs
sbb
out
js
(bad)
or
icebp
and
jl
and
jl
cmps
inc
cmc
in
cmps
add
mov
cmp
and
push
shl
(bad)
sbb
inc
rcl
mov
or
imul
xor
(bad)
shl
addr16
pop
push
mov
and
imul
xor
lea
add
aam
int
outs
push
push
xor
call
pop
or
mov
fiadd
mov
xchg
test
mov
out
es
sahf
cmps
sbb
shr
int3
icebp
xor
xchg
jb
dec
mov
push
loop
fdiv
xchg
in
ins
cmp
mov
mov
retf
mov
cld
fst
nop
jmp
test
jmp
mov
fld1
std
add
push
fwait
call
cmp
dec
mov
not
xchg
aad
sbb
(bad)
into
dec
dec
(bad)
mov
mov
imul
sbb
jbe
je
inc
int3
sbb
mov
call
xchg
or
sbb
cmps
aaa
fldcw
scas
out
cmc
push
xor
nop
nop
jo
dec
inc
out
add
cdq
inc
lds
out
pop
mov
or
sub
loop
ss
cmp
nop
retf
movs
xor
scas
cmp
hlt
push
mov
les
dec
ds
dec
jmp
add
cmp
imul
ret
sub
out
sbb
bound
mov
pop
or
mov
fcom
cmps
push
lods
adc
dec
sub
rcl
loope
jae
sbb
sbb
cmp
int3
cmp
and
aam
mul
in
adc
rcr
daa
pusha
adc
xchg
add
cmp
cmp
or
or
sub
jge
movs
int
dec
cld
jmp
aam
leave
cmp
daa
rol
pop
fs
and
xchg
mov
jmp
jae
pop
into
cmp
cmps
jg
shr
retf
outs
aad
sbb
iret
xor
push
es
out
jg
outs
jne
inc
dec
or
xchg
push
dec
into
sub
retf
jae
dec
mov
iret
ds
cdq
sbb
push
dec
adc
pushf
les
out
adc
fisttp
loopne
loop
xchg
mov
int
mov
pop
sub
jb
cmp
and
leave
fadd
jp
jno
test
cdq
out
outs
pusha
daa
loop
inc
dec
cmp
add
outs
cmc
daa
push
sahf
(bad)
loopne
mov
mov
jnp
fdivp
aad
xchg
pop
jb
enter
mov
cmps
pop
cmps
push
mov
enter
adc
cs
and
jp
push
or
(bad)
xor
icebp
jns
in
lods
call
inc
outs
mov
dec
jl
ror
je
fst
out
test
outs
jne
enter
cmps
fcom
test
xor
pusha
neg
mov
cs
inc
outs
fmul
jmp
mov
(bad)
xchg
(bad)
jbe
in
or
sbb
push
addr16
xor
cmp
test
jle
not
add
in
jmp
pop
push
loop
icebp
mul
mov
mov
retf
cmp
cdq
or
push
mov
aaa
cmp
mov
cmp
inc
push
sub
(bad)
js
pop
mov
cmp
stos
movs
lods
call
iret
or
mov
stos
stos
add
dec
ss
les
imul
scas
adc
adc
jg
sti
ret
xor
xchg
jbe
add
arpl
or
pop
mov
fdiv
push
mov
jnp
cs
in
ficom
add
or
dec
movs
retf
mov
add
mov
jo
cmp
lods
(bad)
cs
js
mov
or
cmp
outs
or
push
mov
inc
mov
mov
mov
xor
inc
jmp
(bad)
stos
dec
cwde
dec
std
dec
mov
jecxz
ret
iret
in
mov
imul
mov
stos
lods
mov
mov
mov
aaa
and
stos
pop
rol
jmp
pop
addr16
push
pop
imul
jl
sbb
shl
ret
lock
jecxz
test
pushf
outs
popa
fwait
xor
les
mov
std
gs
(bad)
iret
dec
mov
in
add
jae
sar
xchg
and
shl
adc
aaa
mov
xor
xor
sub
adc
test
fs
sub
sub
sahf
and
test
push
fsubr
dec
repz
mov
xor
mov
dec
adc
pop
ins
xchg
jge
stos
cmp
bound
out
pushf
mov
xchg
push
loop
sub
xlat
call
cmp
out
lsl
hlt
pop
xchg
dec
jecxz
jno
cmp
mov
mov
std
xor
jl
test
aas
fld
lods
mov
nop
inc
outs
mov
cmp
or
mov
dec
sbb
fsubr
jno
cmps
icebp
pop
fldenv
push
popf
jnp
push
mov
push
and
pop
mov
xor
in
xchg
stos
adc
stos
adc
nop
inc
xor
sbb
and
mov
jnp
(bad)
mov
or
nop
mov
lahf
scas
shr
mov
xlat
xchg
loop
jmp
in
imul
mov
push
inc
cs
retf
xchg
aad
sub
inc
in
out
sbb
arpl
and
out
or
or
fnstsw
mov
adc
jmp
jns
jns
retf
pop
mov
and
jae
cmp
push
popa
shl
retf
mov
out
cmc
mov
and
dec
fidivr
and
mov
es
xor
push
scas
cwde
(bad)
lods
pop
push
jae
sbb
icebp
mov
push
jecxz
lods
xchg
das
or
fsubr
ret
cmps
std
sahf
hlt
jmp
or
add
xor
ret
aas
cmps
xor
cmp
jmp
inc
pushf
rcr
in
or
imul
cmp
sbb
dec
das
mov
jno
and
cmp
xor
xchg
sti
push
ins
pop
(bad)
pop
test
loopne
jmp
repz
add
fmul
cs
xchg
inc
inc
and
sbb
adc
mov
or
push
inc
sub
xor
jle
add
mov
fcomp
daa
call
dec
sti
xchg
mov
hlt
test
inc
aad
fwait
mov
in
leave
scas
in
mov
imul
and
fsubrp
xchg
scas
mov
int3
dec
xor
cmp
jle
cmp
ds
ss
fmul
xor
mov
jecxz
mov
dec
inc
cmp
push
pop
std
pushf
sub
unpcklps
cld
aaa
pop
mov
test
cmp
xor
jne
and
dec
push
(bad)
test
out
ss
leave
scas
je
not
jmp
jnp
ret
sub
jb
call
mov
dec
and
retf
jns
pop
cwde
das
jne
fs
mov
cdq
jne
push
fist
add
mov
xor
sti
les
jp
out
rcr
lea
(bad)
shr
mov
(bad)
push
fisub
adc
fadd
fist
jmp
js
out
adc
mov
sbb
enter
adc
mov
mov
ret
ret
rcr
xor
ss
xor
repz
add
and
cdq
pop
and
sti
sub
ja
inc
inc
pushf
pop
lds
sti
daa
iret
push
push
xor
fstp
cdq
out
es
pop
xor
mov
sbb
popw
div
jge
mov
xchg
mov
loop
mov
adc
stos
out
mov
(bad)
ja
pop
fcomp
push
pop
push
lods
and
jmp
frstor
mov
mov
or
add
cli
lea
aas
or
cmp
sub
push
mov
mov
hlt
cli
sbb
gs
mov
add
loop
imul
int3
xchg
inc
icebp
push
les
cmp
adc
bnd
mov
inc
mov
sub
push
daa
sahf
lea
sbb
movs
xor
mov
dec
dec
push
mov
(bad)
or
push
mov
inc
mov
es
rcl
sub
mov
cdq
dec
add
outs
test
nop
mov
iret
les
mov
jg
aad
mov
cmc
xchg
mov
dec
or
ret
out
jnp
sbb
ins
mov
xlat
sbb
sti
xchg
sub
or
mov
fld
(bad)
push
add
mov
jae
push
mov
sub
mov
ins
mov
icebp
lods
pushf
ret
adc
dec
fld
lods
in
fs
lods
lock
cdq
outs
mov
or
call
popf
enter
add
aas
jp
test
(bad)
ins
pop
add
mov
enter
adc
movs
test
pushf
push
clc
sbb
jp
push
xchg
inc
popf
cwde
mov
push
packsswb
mov
push
ins
iret
out
std
push
idiv
and
push
mov
test
sub
add
stos
sbb
mov
cwde
jp
jmp
adc
int3
sbb
pop
ins
sbb
dec
jo
(bad)
shl
add
mov
ds
les
sbb
cmps
push
sub
dec
add
sbb
lahf
sbb
push
ret
mov
xlat
adc
aas
nop
jmp
scas
push
nop
xchg
hlt
mov
ins
sub
nop
in
ss
pop
lods
or
jns
leave
and
(bad)
xor
call
mov
sbb
xor
ret
cld
jg
sbb
pop
mov
mov
mov
push
iret
or
aas
or
xor
cld
adc
jmp
push
and
inc
out
sbb
sbb
out
dec
mov
lea
outs
stc
shl
rol
adc
iret
lods
jg
cs
mov
sub
dec
(bad)
xchg
cld
hlt
or
or
pusha
test
stos
sahf
gs
mov
enter
in
jmp
and
mov
outs
mov
mov
adc
in
cdq
rcr
xchg
call
lds
jp
les
mov
jmp
nop
fild
jns
jle
dec
clc
enter
and
ficomp
add
js
mov
mov
mov
add
jl
xchg
cdq
xor
xor
jecxz
test
ret
daa
cld
jmp
outs
out
xchg
push
leave
fldenv
ja
cwde
cmp
pop
mov
xchg
out
outs
imul
jp
jbe
sysexit
sbb
dec
sub
jmp
and
mov
adc
stos
gs
fldz
iret
adc
out
aam
fcom
sti
push
or
adc
imul
add
inc
or
movs
jle
sbb
jnp
xchg
imul
mov
leave
cmp
(bad)
inc
in
xor
into
xchg
cdq
lods
clc
cmps
inc
ins
icebp
push
aam
adc
inc
bound
adc
mov
call
lods
adc
ja
adc
cld
hlt
cmp
mov
adc
inc
push
rcr
sub
in
sub
dec
sbb
mov
xchg
(bad)
(bad)
adc
iret
arpl
inc
sbb
pop
push
jge
mov
(bad)
jb
pop
cmp
stc
fmul
pop
push
cwde
dec
ffreep
jl
sub
jmp
mov
cli
add
push
and
vpmulhuw
fs
in
xor
mov
and
mov
iret
cmp
sbb
(bad)
hlt
stos
inc
sub
out
jl
jo
out
pop
inc
je
sar
cmc
sahf
or
fst
mov
arpl
and
sub
xor
xchg
cmp
inc
jmp
sub
add
or
adc
mov
inc
mov
push
xor
and
jns
lds
mov
sti
cwde
retf
mov
int
sti
ja
mul
dec
mov
xor
aad
das
or
xchg
outs
mov
sub
or
jns
dec
dec
push
pop
add
cwde
pop
test
aam
sti
sub
es
push
(bad)
sbb
pop
mul
add
mov
lods
jg
add
adc
cmps
cwde
ficomp
mov
aas
ret
cwde
mov
adc
leave
rol
xor
int
add
jg
mov
adc
scas
mov
bnd
repnz
in
test
pushf
jo
dec
test
test
pop
mov
sahf
stos
mov
jp
push
xchg
pop
jmp
out
mov
mov
dec
push
inc
pop
pop
leave
sub
mov
lods
in
movs
neg
adc
jb
add
in
sbb
jb
ficom
inc
cs
movs
sub
ret
or
cli
aas
or
cmp
out
sbb
pop
mov
xchg
sar
imul
in
sbb
inc
sti
xchg
add
loopne
rcl
fisttp
iret
cld
ins
sbb
in
jmp
adc
inc
in
add
adc
or
sbb
jbe
fcomp
sbb
dec
push
add
lods
in
add
jl
rol
sub
cli
pushf
mov
add
test
pop
das
adc
jns
out
and
sbb
xchg
(bad)
xchg
hlt
and
lods
std
not
dec
mov
sbb
addr16
jge
mov
pop
arpl
push
stc
out
and
xlat
push
fdivr
dec
pop
ins
sub
and
jp
inc
shl
hlt
call
add
idiv
nop
dec
lods
adc
pop
outs
sub
int3
aam
push
in
cmp
mov
and
iret
sub
cmp
retf
fwait
shl
mov
push
jae
push
pusha
outs
add
cld
scas
pop
(bad)
sar
ds
repz
bnd
cli
push
loop
dec
arpl
and
ja
inc
(bad)
in
pop
test
(bad)
xchg
and
push
in
sub
out
mov
pop
repz
gs
mov
dec
mov
or
retf
ja
jo
pop
adc
jo
mov
cmp
push
cli
clc
mov
test
adc
pushf
inc
dec
cmp
xor
repnz
xor
mov
sbb
inc
sub
adc
daa
sub
sub
movs
dec
pusha
mov
(bad)
inc
adc
jb
jno
popf
test
sbb
and
pop
je
and
or
dec
add
lahf
pop
mov
arpl
push
cdq
(bad)
pop
xor
hlt
das
adc
pop
punpckhbw
mov
jnp
mov
cmp
push
sub
adc
inc
lea
pop
pop
(bad)
stc
pop
cld
sbb
xor
lods
dec
data16
imul
xchg
mov
dec
cmp
dec
mov
lock
sti
xchg
mov
imul
xchg
enter
jmp
adc
push
cld
or
je
cld
xor
mov
push
dec
ja
sbb
outs
xor
dec
or
dec
adc
test
mov
aad
dec
les
mov
out
lds
mov
outs
cmp
icebp
jp
push
loope
adc
shl
sti
outs
hlt
mov
sub
ds
xchg
int
cmp
cmps
hlt
sbb
loop
stc
xchg
mov
inc
popa
or
sub
aam
cmps
stc
fbld
xor
dec
cmp
xor
loope
outs
cmc
cld
addr16
outs
and
xchg
(bad)
int3
scas
mov
(bad)
icebp
out
xlat
add
pop
sbb
sub
idiv
and
inc
sub
icebp
cs
pop
mov
mov
retf
lock
sbb
leave
mov
inc
lahf
stc
scas
push
ret
cmp
cmps
lods
pop
push
mov
test
xchg
mov
(bad)
out
iret
sub
in
xor
pop
cld
out
jne
jmp
add
cmps
leave
jecxz
push
and
jle
and
dec
movs
pop
dec
out
(bad)
adc
xor
(bad)
and
pop
sti
rcr
(bad)
dec
call
ss
mov
repz
cmp
push
mov
ins
div
xor
cmp
pushf
xlat
into
frstor
rol
sbb
mov
adc
xor
in
(bad)
fisubr
shl
dec
or
cli
xchg
ins
cmps
cmp
and
sbb
test
inc
ror
dec
mov
cmc
sub
xchg
push
popf
mov
scas
(bad)
fwait
and
pushf
or
jp
and
cmp
sbb
jge
shl
ds
mov
lds
sbb
leavew
xor
(bad)
loope
sbb
jl
and
test
cmp
mov
push
sbb
sub
push
shr
ins
jge
(bad)
add
lock
jecxz
(bad)
push
repnz
fwait
ret
adc
test
fbld
out
data16
stos
(bad)
idiv
sbb
mov
cmp
in
fisubr
push
addr16
lahf
pop
retf
mov
xchg
jl
cs
addr16
out
or
int
inc
ds
sbb
(bad)
cmp
and
xchg
lahf
xlat
repz
inc
fld
sti
or
inc
gs
imul
push
push
xor
inc
jle
stos
pop
pusha
test
mov
sbb
mov
dec
lds
mov
imul
mov
pop
cmp
pushf
shl
jge
cmps
ins
(bad)
std
(bad)
loope
mov
sub
ror
(bad)
dec
inc
sbb
data16
push
les
jb
ins
jecxz
cdq
xchg
loop
push
cmp
pop
lods
scas
inc
not
int3
jo
jmp
xor
and
call
push
scas
or
aas
mov
or
jmp
pop
sub
popa
scas
stos
sub
inc
xlat
mov
into
adc
enter
xor
jno
jl
out
or
rol
(bad)
mov
mov
stos
ss
xchg
push
add
xchg
inc
dec
lea
or
cmp
btc
sbb
xor
jg
push
fadd
push
inc
and
(bad)
aad
cld
xor
mul
rcr
mov
ds
sbb
popf
mov
in
ds
ins
dec
(bad)
cmp
and
dec
jmp
ins
inc
fcom
add
lahf
xchg
or
repz
sbb
popa
loope
mov
pop
mov
mov
fcomi
adc
cdq
push
lahf
or
daa
cmp
bound
mov
adc
mov
inc
mov
ins
mov
out
adc
cli
sub
dec
ret
stc
jmp
jno
pop
in
mov
add
into
sbb
jle
fld
gs
out
jo
pop
mov
sahf
xor
pop
fdivr
mul
lods
adc
push
shl
inc
and
pop
ins
out
shl
fisub
movs
push
popa
int
fucomip
add
mov
or
in
cmp
hlt
stos
xchg
jp
enter
adc
sub
inc
cmps
ss
and
popa
leave
imul
cwde
xchg
pop
adc
cmp
ins
pop
or
clc
jg
mov
sti
adc
out
shl
out
mov
and
rcr
add
sub
fnstsw
mov
rcr
cmp
jmp
or
pop
out
inc
(bad)
jecxz
(bad)
fisttp
(bad)
dec
mov
repnz
jnp
jns
or
cs
inc
jbe
jnp
mov
test
xchg
pop
inc
into
pop
(bad)
sti
push
dec
mov
mov
sbb
daa
lea
xchg
adc
xchg
fidivr
jnp
call
int
inc
cmp
sub
and
pushf
arpl
or
fsub
clc
mov
push
cmp
inc
shl
dec
xchg
out
or
fsub
sbb
push
lahf
pop
bound
lods
ret
push
shl
jnp
les
aad
jae
cmp
lsl
mov
mov
or
cs
jmp
iret
push
mov
cli
movs
mov
retf
xchg
mov
add
popf
mov
cmps
sub
mov
inc
jno
jmp
jo
mov
movs
out
fcom
das
aad
fisub
aad
xor
loope
sbb
pop
mov
aad
dec
hlt
xchg
jecxz
sub
and
inc
jno
mov
test
push
cmp
inc
fbstp
sub
clc
mov
pop
sbb
jge
mov
jmp
js
or
pop
cmps
sbb
mov
cmps
and
xlat
cmp
popf
sbb
call
rcl
jae
cmp
jle
aaa
mov
pusha
cmp
mov
xor
adc
pop
dec
adc
or
loope
pop
cmp
(bad)
and
jo
jmp
mov
nop
das
loop
daa
cmp
xor
scas
mov
sub
out
mov
jnp
stos
push
push
cmps
popa
lea
jnp
cli
jmp
mov
push
jmp
arpl
data16
or
jo
inc
iret
xchg
addr16
or
mov
(bad)
and
or
shr
daa
or
xor
mov
fdiv
xchg
aam
(bad)
es
repnz
fs
jo
int
rcr
sbb
inc
adc
cwde
mov
imul
jae
fimul
sub
mov
int3
ins
cli
sahf
inc
sub
popf
fsub
cmc
leave
icebp
fs
sbb
jno
(bad)
scas
jne
mov
and
dec
(bad)
inc
cmps
(bad)
adc
dec
push
sbb
inc
adc
inc
dec
push
pop
ds
aas
push
dec
neg
ja
not
and
xor
repnz
test
mov
loop
in
int
or
cmps
adc
add
mov
or
cld
mov
cmc
les
adc
adc
jmp
xchg
mov
inc
rcr
inc
into
loopne
dec
adc
mov
call
jecxz
sbb
aas
and
jns
dec
push
in
dec
xlat
fstp
out
ret
pop
aas
mov
lock
ja
movs
mov
(bad)
test
add
dec
shl
jae
or
jne
and
sub
sti
cmp
fwait
repz
cmp
pushf
add
out
ins
addr16
jo
sub
jmp
jecxz
test
jle
mov
loopne
out
push
add
mov
daa
or
jbe
int3
sub
dec
mov
das
cld
nop
push
repz
pusha
add
cmps
lods
fcomp
in
call
std
cmps
jmp
ds
jmp
std
bound
stc
dec
xchg
push
or
and
mov
sbb
iret
arpl
jmp
les
sbb
dec
add
push
xchg
in
repz
pop
sub
adc
cmc
cmc
xor
rol
inc
jle
sbb
dec
push
push
stc
mov
stos
in
aaa
shr
(bad)
(bad)
or
shl
mov
mov
fcomp
jmp
popa
sbb
(bad)
push
xor
es
push
xor
inc
pop
cs
sar
pushf
jecxz
mov
push
xchg
dec
cmp
int3
inc
add
xchg
dec
adc
add
les
call
add
aad
jns
(bad)
leave
push
sub
mov
push
sbb
mov
mov
add
lods
jne
mov
adc
xor
jecxz
inc
test
ja
push
(bad)
xchg
jae
ss
push
cs
cmps
ds
mov
je
test
jle
es
ror
(bad)
pusha
sar
adc
fsub
loopne
push
aaa
mov
push
jae
sbb
inc
imul
inc
sar
enter
inc
cwde
push
int3
scas
outs
add
pop
cmp
out
test
cwde
mov
adc
cmp
fs
sbb
icebp
in
sub
into
dec
sar
cmc
aam
sub
jmp
out
or
pop
sub
cmp
fild
sub
aaa
cmp
sbb
mov
mov
leave
retf
(bad)
scas
test
mov
mov
push
shl
adc
test
(bad)
mov
cdq
dec
push
add
sbb
inc
out
ins
in
cwde
sbb
sub
repz
call
dec
fmul
outs
inc
mov
jmp
and
fdiv
ret
out
out
dec
mov
cli
sub
aam
jbe
mov
cmps
sub
xor
sbb
dec
jno
mov
sahf
jmp
dec
out
loop
loopne
fbld
xor
rcr
mov
out
dec
jge
outs
push
lea
stos
adc
pusha
push
fs
or
pop
loopne
add
(bad)
xor
stc
(bad)
and
mov
ss
and
jmp
add
pop
xor
in
shr
mov
and
cmp
sub
push
push
mov
aaa
or
sbb
jle
outs
scas
push
sbb
mov
sbb
xchg
in
lock
jnp
in
sub
aas
dec
adc
mov
and
mov
mov
loopne
ret
jmp
jne
pop
push
cdq
mov
div
pop
fist
in
push
sub
fld
scas
bound
scas
aad
push
sti
dec
mov
dec
ins
and
call
push
xor
cdq
push
inc
leave
cmp
adc
xchg
icebp
sub
loope
cli
jg
lds
sub
jne
mov
adc
popa
daa
xor
test
cmps
push
fwait
cdq
xor
icebp
xchg
xor
std
addr16
fcom
nop
jmp
cdq
xor
sar
cli
xlat
pushf
shl
adc
inc
mov
mov
dec
pop
lods
out
push
jae
out
(bad)
xchg
xchg
push
in
or
xor
jae
mov
loope
jmp
test
cs
ret
mov
push
std
sub
hlt
sub
clc
out
or
jae
inc
pop
dec
or
pop
aas
loop
js
mov
mov
pop
mov
fidivr
clc
js
inc
or
lds
je
popa
les
or
shl
ins
dec
jmp
pop
mov
enter
fadd
push
in
in
pop
outs
stc
mov
std
or
lods
sbb
test
repz
pop
pushf
xchg
sbb
or
hlt
pop
jno
jo
repnz
cdq
std
sub
sbb
and
and
frstor
push
mov
jp
rcr
cld
dec
pop
inc
add
nop
in
out
dec
push
retf
jmp
pop
pop
stc
push
mov
lock
repnz
pushw
ja
xor
jo
jg
aam
dec
fs
movs
push
call
sub
shr
mov
js
stos
xchg
adc
stc
xlat
das
jbe
jno
movs
int
aaa
push
push
dec
and
jle
in
lock
adc
dec
es
jmp
adc
add
push
je
mov
inc
in
data16
ss
inc
repnz
mov
in
jl
test
add
stc
pop
sbb
stc
sub
movs
add
mov
loope
fadd
sbb
rol
les
add
cmp
or
scas
jl
and
fidiv
test
push
mov
call
mov
add
push
gs
cwde
or
push
arpl
pushf
and
stc
int3
call
scas
mov
(bad)
mov
jne
add
push
mov
add
push
stos
mov
push
jne
rol
call
jmp
popf
pop
push
js
pushf
xchg
and
dec
mov
and
mov
sub
cld
dec
and
les
mov
pop
call
cmp
mov
stc
std
lock
pusha
fs
mov
push
cwde
(bad)
xor
cmps
cmp
push
inc
mov
mov
mov
fisubr
or
add
ret
xchg
sub
int3
imul
gs
stos
or
imul
dec
push
lds
hlt
fwait
xchg
mov
add
add
adc
daa
std
jmp
and
ja
dec
jecxz
pop
push
sar
and
push
mov
(bad)
imul
pop
mov
sub
lahf
ins
xchg
(bad)
je
ins
test
jbe
adc
pop
idiv
cmp
fcmovnb
jmp
mov
loope
sbb
pop
sub
inc
push
push
addr16
ror
movs
cmps
popa
pop
adc
test
xor
aam
(bad)
leave
pop
retf
xor
movs
pop
leave
and
retf
in
cmp
jb
imul
test
cmp
and
mov
mov
and
xchg
clc
adc
sbb
mov
frstor
jnp
call
(bad)
mov
dec
sub
pop
cdq
aad
iret
inc
sar
push
rcr
inc
arpl
cmp
or
popf
call
(bad)
jmp
mov
mov
aad
mov
inc
lods
pop
xor
inc
mov
pop
mov
pop
outs
mov
sbb
sbb
adc
dec
in
fidiv
fwait
add
and
sub
scas
call
cmp
js
push
and
and
pop
cmps
daa
pop
(bad)
cmps
push
mov
inc
push
jecxz
stos
xchg
call
call
jmp
into
out
rcl
mov
loopne
pop
fist
fwait
cmp
gs
call
js
icebp
mov
inc
cwde
xor
imul
in
loop
jl
push
jmp
adc
mov
test
lods
adc
jbe
sbb
cs
out
or
ins
cwde
sti
int
movs
sbb
fiadd
xchg
das
add
cmp
and
hlt
dec
push
cmp
(bad)
fmul
int3
pop
(bad)
and
in
push
and
xor
push
add
shl
mov
inc
inc
movs
gs
push
es
mov
aad
mov
cld
xlat
sbb
jmp
push
les
sub
dec
dec
xchg
les
shl
jns
enter
mov
nop
je
jno
(bad)
cmp
rol
repnz
jmp
ret
mov
fist
iret
push
outs
mov
xor
fdivr
jno
in
lds
ins
mov
dec
pop
test
sub
shr
cmp
xchg
(bad)
pop
popa
in
aad
jge
jp
mov
fbld
frstor
sbb
jecxz
retf
leave
mov
inc
cmp
push
xchg
dec
or
pop
or
ret
setns
pop
cmps
mov
stos
xchg
xor
scas
lods
sub
cmp
aas
out
sub
int
pop
adc
jecxz
stos
mov
pop
mov
or
outs
in
jmp
push
push
pusha
push
into
xchg
dec
pop
outs
or
lds
dec
and
jmp
neg
pop
movs
push
cmp
aas
inc
cld
cmp
add
cmp
add
xor
jo
js
mov
out
outs
ror
push
mov
xchg
adc
sbb
int
xor
mov
ror
call
int
dec
dec
loopne
inc
push
xchg
and
add
fisub
cmp
frstor
jge
std
push
scas
xchg
cwde
mov
gs
retf
dec
and
pop
imul
dec
and
jmp
ficomp
or
mov
jecxz
outs
pop
lods
(bad)
lea
arpl
test
jbe
sub
stc
(bad)
in
add
(bad)
push
xor
jp
call
mov
xor
stos
sbb
push
inc
jg
cmp
mov
jp
ins
xor
adc
out
pusha
inc
lds
rcr
ja
repnz
pop
dec
int
sub
jne
vpmaskmovd
das
jo
(bad)
bound
lods
sahf
daa
cmp
retf
movs
outs
vphaddbd
pop
ds
shl
ss
adc
mov
(bad)
nop
sub
std
pop
scas
je
sbb
into
and
test
xlat
jnp
sahf
sub
in
xor
xchg
cmp
xchg
loopne
push
mov
enter
add
stos
inc
or
cmp
lea
jmp
cmp
pop
daa
inc
push
int3
or
pop
fcomp
dec
leave
sti
test
nop
clc
shl
jge
push
test
mov
outs
repz
in
add
pop
in
jbe
(bad)
inc
out
mov
shl
mov
(bad)
(bad)
shl
std
or
xchg
adc
popa
icebp
mov
gs
inc
jecxz
loope
call
and
sbb
mov
push
lea
mov
mov
mov
fwait
push
leave
dec
jmp
iret
test
sub
cmps
or
(bad)
jmp
fist
inc
pop
dec
jno
sahf
in
clc
pop
sbb
or
adc
ror
int
shr
lahf
in
(bad)
retf
vorpd
xchg
pop
push
imul
mov
xor
loope
jns
mov
ret
sbb
mov
leave
(bad)
fisttp
lahf
cld
(bad)
mov
mov
sbb
repz
sbb
lea
mov
sub
mov
mov
adc
pop
xchg
and
sub
dec
enter
sub
add
mov
xlat
sbb
pushf
outs
fadd
push
adc
out
add
cmps
psrlq
xor
cmc
mul
xor
retf
es
xor
icebp
push
push
inc
movs
and
jmp
or
pop
sbb
inc
stos
dec
dec
pop
fucomp
outs
pop
(bad)
mov
retf
adc
dec
loope
scas
push
pop
(bad)
mov
dec
or
push
pop
xchg
jle
inc
cld
mov
sub
push
fadd
test
(bad)
das
data16
xchg
ss
inc
retf
xor
mov
xor
(bad)
bound
mov
inc
and
ret
jbe
ret
sar
pop
inc
aaa
adc
and
call
mov
mov
sub
mov
sbb
rcr
call
inc
push
std
out
add
adc
sbb
mov
xor
mov
sbb
imul
xor
adc
sbb
push
mov
jns
enter
xchg
push
adc
or
xor
(bad)
cwde
cmp
add
inc
popf
scas
dec
clc
xchg
adc
mov
mov
add
mov
or
outs
ret
pop
push
imul
daa
outs
inc
movs
cmps
popf
mov
(bad)
aas
or
mov
ins
or
and
mov
cmp
xchg
jo
add
jmp
je
(bad)
push
push
shl
lahf
ror
test
hlt
jno
ret
shr
mov
(bad)
mov
xchg
dec
test
mov
mov
jle
in
pop
pop
dec
and
fsub
ins
sub
pop
sub
dec
mov
sbb
fwait
add
add
stos
jae
xor
loope
hlt
and
sbb
imul
and
leave
ss
mov
mul
or
sahf
or
ins
sub
dec
inc
jl
cmp
or
jb
fisubr
dec
sbb
sub
dec
mov
inc
(bad)
int3
mov
ins
(bad)
jge
adc
mov
or
pop
gs
xor
xchg
ret
inc
or
xchg
dec
inc
fcmovbe
push
ins
add
ins
sbb
pusha
pushf
sub
pop
idiv
jmp
sar
push
std
sar
in
(bad)
sbb
fnstenv
xor
jns
mov
and
sbb
fcom
pop
pop
les
jnp
mov
lea
cs
pop
jae
jae
rol
mov
hlt
jae
pop
pop
add
(bad)
cmp
adc
(bad)
retf
dec
cld
push
adc
pusha
das
push
or
lock
jg
and
aam
daa
add
aas
xor
imul
xor
leave
pop
scas
inc
sbb
call
sbb
xor
retf
jecxz
push
sub
or
pop
lea
push
mov
or
xchg
dec
jl
jno
mov
cmp
sub
push
stc
ror
mov
add
std
jbe
fst
push
lods
shl
je
arpl
sbb
dec
pop
mov
jo
mov
mov
pop
jp
aad
xor
mov
and
xor
xchg
jge
cli
cmp
sbb
cmps
jl
(bad)
jnp
icebp
xor
or
mov
mov
adc
mov
inc
mov
test
test
pop
fsubr
stos
test
inc
leave
xchg
mov
mov
aam
fisttp
out
add
scas
sub
cmp
push
xchg
mov
jns
add
movs
(bad)
cs
test
sub
arpl
cs
xor
adc
lods
jl
sbb
loop
ret
addr16
popf
add
and
or
push
cmp
aas
jmp
(bad)
cmp
shr
dec
xor
and
mov
loope
and
aam
loope
jns
cmp
out
sub
push
inc
(bad)
cmp
xchg
jl
inc
push
mov
fimul
xchg
(bad)
std
cmp
gs
push
push
xchg
(bad)
or
int
mov
pop
cmp
and
mov
pushf
scas
jns
iret
dec
pop
les
add
mov
sub
dec
shl
rol
jl
ss
jmp
push
shr
pop
loopne
push
push
inc
pop
mov
mov
xchg
repnz
mov
xchg
inc
sbb
sbb
adc
fimul
aam
jns
xchg
xor
fs
push
push
sbb
mov
faddp
mov
add
rol
frstor
out
inc
sbb
push
mov
sti
(bad)
pusha
clc
jns
sub
lds
call
jns
inc
and
imul
(bad)
in
pop
xchg
jb
stos
mov
imul
sar
pop
push
inc
fistp
mov
push
adc
sub
jmp
jle
add
aas
in
mov
(bad)
rcr
movs
mov
jg
and
sbb
scas
and
or
fwait
and
mov
adc
sbb
push
popa
and
jmp
fsub
mov
addr16
dec
(bad)
pop
sub
cmps
sbb
pop
cmp
repnz
pop
int
test
aaa
cmc
das
dec
call
outs
ja
arpl
pusha
xor
fild
xor
push
es
fcom
inc
imul
add
fld
inc
push
repz
jmp
mov
lods
mul
sbb
pop
push
dec
jl
dec
pop
cmps
adc
out
lods
or
popf
inc
pushf
ins
xor
adc
jne
dec
sbb
fstp
scas
je
push
xchg
aaa
das
adc
(bad)
adc
mov
sbb
xchg
popa
cdq
dec
lock
push
mov
mov
test
add
mov
pop
xor
fisttp
cdq
popa
aad
imul
shr
or
pop
outs
out
jnp
mov
mov
xchg
jmp
imul
loopne
push
test
pop
iret
retf
stos
jle
sub
(bad)
aad
pop
adc
jp
mov
ds
hlt
loop
out
aaa
lahf
adc
add
out
sbb
and
lea
imul
push
sti
lds
and
test
push
outs
mov
outs
call
dec
push
dec
xchg
inc
push
xchg
push
dec
dec
add
inc
push
jg
sbb
xor
dec
pop
sub
repz
and
test
les
inc
jle
mov
push
in
cs
hlt
test
test
not
imul
add
or
cwde
xchg
pop
test
mov
out
dec
rcl
pusha
ja
mov
mov
cs
adc
frstor
sub
xchg
xor
js
sbb
xor
inc
inc
and
lods
ss
es
les
mov
test
or
icebp
xchg
and
mov
or
dec
pop
ja
pop
xchg
cld
out
or
outs
fwait
test
xlat
push
shl
push
and
test
ret
cmp
pop
vpsrlq
dec
outs
fsubr
jb
daa
and
enter
and
fist
xchg
cwde
das
jmp
retf
pop
pusha
gs
aaa
dec
mov
jl
sbb
pop
test
or
xchg
leave
mov
dec
sub
push
xchg
je
rcr
xor
cdq
mov
add
jno
mov
xor
lods
inc
xor
dec
ins
pop
ja
or
test
or
into
test
mov
push
mov
xchg
sahf
lods
cmp
jae
pop
jns
rcr
jno
mov
test
fdiv
xor
(bad)
les
es
and
mov
sub
dec
sbb
sahf
int3
pushf
out
or
lods
cmp
fbstp
inc
xchg
xchg
fld
je
out
test
shl
pop
fidiv
mov
in
jp
loopne
test
out
xchg
retf
in
test
loopne
push
jne
(bad)
aas
aam
(bad)
cmp
xor
sbb
sub
jp
cwde
je
xchg
outs
cmp
das
or
cwde
enter
push
mov
and
xchg
mov
dec
sub
sbb
cmps
mov
or
out
push
mov
ja
mov
pop
lock
inc
test
fwait
xor
mov
iret
out
mov
arpl
ss
sbb
rol
mov
pop
cmp
sbb
mov
cmps
pop
dec
ds
sbb
jbe
xor
cli
mov
cld
mov
xor
jg
jne
or
jmp
mov
adc
(bad)
stos
jge
arpl
jmp
sub
loop
fcomp
pop
lahf
jmp
push
xor
push
mov
shl
or
div
pop
push
retf
fs
popf
sub
xchg
sbb
or
movs
sub
inc
push
add
(bad)
mov
fiadd
movs
push
aad
inc
mov
mov
call
push
inc
and
cmp
retf
cmp
mov
or
out
adc
xor
call
jae
mov
fidivr
scas
jge
or
sar
pusha
mov
and
sbb
loopne
push
push
push
inc
add
out
ja
mov
js
pop
dec
add
xchg
adc
data16
push
mov
jno
push
sub
xchg
sbb
std
push
ror
adc
xor
push
jge
adc
jae
push
fsub
aam
mov
or
stos
mov
or
rcl
mov
jne
inc
or
cs
popa
je
das
sbb
jmp
ja
or
fidiv
and
in
out
push
jo
ud0
fs
popf
out
aad
mov
iret
pop
data16
inc
xor
xor
ds
add
inc
das
aas
ins
pop
add
push
cmp
add
dec
lea
push
add
ins
jne
sbb
fiadd
jge
fbld
inc
daa
pop
frstor
es
call
cmp
sbb
fbstp
loop
adc
add
int
or
mov
in
retf
in
stos
imul
inc
js
fisttp
or
fldenv
lahf
xchg
mov
sub
scas
sahf
inc
dec
ret
mov
fild
dec
cs
lds
mov
or
cmp
aad
inc
mov
shr
hlt
mov
xchg
jno
dec
ret
xlat
inc
inc
cmp
clc
leave
out
enter
es
outs
les
scas
xchg
push
rol
ja
push
push
fwait
jae
je
(bad)
aam
ret
(bad)
loop
or
aad
pop
lods
ins
xchg
stos
(bad)
out
into
push
test
fs
out
and
scas
xchg
xor
sbb
xchg
pop
inc
jbe
(bad)
lods
sti
rol
ds
add
addr16
add
xchg
inc
jbe
or
jae
movs
mov
fiadd
hlt
loop
dec
cmp
sub
jo
sub
push
mul
movs
xor
add
and
mov
ins
(bad)
sbb
inc
adc
repnz
push
cld
add
jo
xchg
nop
cmp
lahf
fisubr
inc
mul
fisttp
sbb
std
mov
push
fistp
push
mov
loop
jnp
xor
mov
lock
int3
movs
adc
lock
scas
xchg
inc
xor
pusha
xor
mov
add
aam
shl
popa
pop
aas
sub
cmp
and
sub
sub
(bad)
fdivr
inc
mov
lds
dec
jmp
adc
leave
cmps
xchg
pop
jmp
sub
pop
jl
out
mov
pop
pop
mov
cmp
fnsave
pop
push
jno
dec
mov
jl
retf
hlt
scas
push
es
popf
mov
mov
aad
mov
ja
mov
or
add
int3
jno
mov
dec
cmps
mov
shr
adc
jg
ret
and
jecxz
mov
fld
mov
jb
test
push
dec
inc
xchg
adc
inc
shl
pop
inc
dec
add
push
out
push
out
xchg
cld
hlt
jne
xor
movs
and
or
adc
ins
push
mov
jae
xchg
xchg
adc
mov
push
scas
jae
adc
or
sbb
retf
stc
and
push
dec
add
inc
jge
sbb
mov
mov
mov
and
aam
add
cmp
fnstsw
outs
pop
sbb
and
pop
add
sbb
es
inc
sbb
rcl
test
in
mov
test
scas
dec
cmc
xchg
les
xchg
dec
sub
nop
scas
in
lds
stos
dec
xor
mov
iret
and
leave
jg
je
ins
push
sub
sbb
jno
mov
outs
and
(bad)
rol
outs
pop
rcr
fld
daa
cli
jns
es
gs
or
subps
dec
(bad)
shr
(bad)
mov
or
pop
xor
push
sub
and
mov
xor
cmp
popf
out
imul
sar
xchg
or
(bad)
call
push
out
cmp
mov
(bad)
sub
pushf
hlt
jnp
inc
mov
mov
cwde
mov
adc
das
out
int
adc
xchg
jge
adc
jmp
and
adc
xchg
je
sub
mov
sbb
inc
jo
push
stc
cmp
jecxz
popf
push
rcl
or
mov
or
add
add
fst
inc
mov
sbb
js
mov
jb
scas
lods
enter
addr16
adc
pop
pop
(bad)
lods
idiv
dec
sub
aaa
(bad)
scas
ret
cmp
pop
or
sar
add
mov
(bad)
jmp
nop
adc
pop
ins
scas
mov
jp
jecxz
jmp
add
shl
inc
push
jae
and
pop
and
stos
pop
dec
cli
sbb
jle
inc
out
push
pop
sub
fiadd
mov
jno
jmp
jp
shl
and
mov
enter
js
test
lods
pop
xchg
mov
sbb
shl
std
adc
add
nop
mov
test
mov
mov
fmul
aam
push
addr16
(bad)
add
cmps
test
push
mov
out
fbstp
push
or
and
mov
mov
push
ins
add
out
retf
xor
loope
fs
mov
repz
sub
jne
jmp
dec
cmp
or
test
clc
jl
aas
and
ret
dec
fadd
stos
repnz
shl
inc
cmp
stos
mov
dec
sub
xchg
scas
dec
mov
aad
movs
out
mov
cmp
and
pop
xor
dec
(bad)
cmc
jle
jmp
jp
sub
mov
adc
icebp
dec
stc
or
add
push
rcr
loopne
loopne
adc
retf
dec
(bad)
jb
out
and
pop
push
popf
test
xor
xchg
js
movs
xor
ins
loop
and
inc
test
lahf
outs
inc
pop
or
imul
(bad)
outs
cwde
addr16
sub
cmp
loope
push
ret
in
pop
je
sbb
pop
ror
loop
jb
je
xor
inc
rcl
icebp
mov
sti
dec
(bad)
popf
cmovbe
and
scas
sbb
push
xchg
lock
mov
xor
(bad)
aad
adc
clc
aaa
inc
(bad)
sub
outs
aaa
mov
mov
enter
fsub
mov
push
pusha
push
add
iret
shr
mov
mov
hlt
mov
pop
ret
mov
clc
(bad)
iret
fwait
push
xor
jne
cmp
push
cli
sahf
xor
(bad)
pop
test
fcmovbe
cmp
outs
scas
in
in
int3
push
mov
repnz
adc
push
push
loopne
dec
dec
(bad)
mov
inc
jmp
fcomp
adc
push
jnp
pusha
inc
dec
nop
push
data16
mov
aas
or
mov
test
mov
(bad)
jp
push
cmp
mov
push
xchg
jg
jnp
xor
sbb
ds
sub
or
imul
add
jne
in
inc
add
fild
adc
sbb
or
or
jns
xchg
adc
inc
cmp
or
in
out
test
out
xchg
push
cmp
ror
in
test
shr
ja
sbb
into
adc
in
cmp
jp
popf
mov
imul
cmp
fild
xchg
jge
clc
test
clc
or
push
adc
aaa
jmp
push
push
mov
jo
(bad)
sahf
test
inc
ret
sbb
mov
fs
push
mov
add
cmp
push
scas
cwde
fiadd
into
retf
cdq
push
dec
mov
xchg
sub
add
jmp
cmp
test
sbb
sbb
js
test
mov
mov
pop
jp
retf
mov
add
out
jg
jbe
pusha
outs
aas
fild
ret
pop
jnp
add
push
xchg
adc
fld
cld
mov
stos
cmp
push
hlt
addr16
je
mov
pop
mov
mov
aam
movs
push
push
inc
les
pop
int3
jmp
pushf
(bad)
not
(bad)
or
arpl
lahf
pushf
scas
inc
and
and
lock
adc
sub
icebp
dec
jmp
iret
stos
or
inc
mov
ficom
ins
das
and
ret
fstp
push
jnp
pop
loopne
daa
mov
movs
jnp
inc
mov
jb
mov
pop
into
or
(bad)
jle
enter
dec
jl
nop
jae
sbb
dec
iret
jns
adc
sbb
out
xor
cli
loop
and
dec
xor
cmps
fidivr
pushf
pop
arpl
in
sbb
out
sub
inc
cdq
sbb
clc
aad
push
dec
inc
mov
xchg
mov
or
ret
xchg
sbb
jnp
addr16
xor
(bad)
sbb
xchg
sar
sbb
mov
loop
push
cdq
shl
test
iret
mov
sub
adc
addr16
test
pop
test
aas
xor
inc
in
mov
mov
xor
leave
mov
pop
cmp
mov
aas
push
repz
and
push
mov
hlt
push
(bad)
inc
mov
(bad)
shl
ror
lahf
ss
mov
leave
sbb
mov
ds
cmp
dec
mov
jbe
int
pop
call
mov
jb
cmp
and
fidivr
mov
and
and
scas
cmp
mov
fistp
adc
add
shl
pop
mov
push
idiv
addr16
ja
mov
sub
xchg
jo
retf
arpl
xor
mov
push
dec
adc
adc
addr16
adc
mov
pusha
cmp
out
cmp
pop
inc
test
xchg
and
jno
mov
push
aam
and
into
cwde
pop
lds
mov
lahf
nop
add
sar
jp
jne
cmp
cmp
cli
mov
push
adc
cs
fidivr
push
mov
movs
les
out
(bad)
cld
fisub
pop
retf
and
and
jb
cmp
retf
mov
or
lods
fsubr
shr
arpl
sbb
jae
cmp
xchg
retf
mov
and
jge
in
adc
adc
sub
jae
mov
ficom
jmp
adc
xchg
push
sbb
cmp
stos
xor
jge
pop
push
dec
repz
mov
push
add
xor
jnp
(bad)
clts
jge
add
stc
sbb
js
test
push
sbb
out
mov
dec
cmp
or
inc
and
push
mov
dec
lods
push
pop
xchg
loope
add
push
dec
adc
in
mov
jne
(bad)
push
mov
mov
mov
leave
lea
fistp
dec
push
xor
mov
mov
js
outs
std
clc
ret
scas
xchg
cli
ins
in
mov
xor
adc
sbb
jbe
sub
push
sbb
movs
sub
xchg
and
pop
push
retf
jmp
push
outs
and
mov
jo
not
mov
xchg
out
int3
cmp
xchg
mov
dec
mov
xchg
push
mov
hlt
test
test
fs
call
sbb
jnp
cmp
lock
push
and
aad
lock
adc
mov
test
jg
aad
mov
movs
or
imul
pusha
push
pop
fisttp
sahf
fisub
sar
and
sti
add
mov
leave
imul
adc
gs
cmc
call
in
movs
retf
or
mov
test
jno
aas
xor
cmc
test
fs
sub
xor
fnsave
mov
adc
(bad)
enter
sbb
mov
push
ins
cmp
stos
adc
ds
rcl
adc
ds
adc
jbe
test
mov
and
ds
fs
fnsave
fmul
lods
out
je
jecxz
jmp
sub
push
imul
push
pushf
call
repnz
ss
cmc
popa
mov
lahf
in
frstor
loope
xor
adc
arpl
sbb
sahf
mov
test
mov
push
ja
mov
inc
(bad)
neg
mov
loopne
sbb
push
push
xchg
jl
mov
push
push
out
xchg
mov
mov
sbb
sbb
cmp
xor
lock
inc
mov
cdq
and
cmp
mov
out
test
mov
pop
jae
mov
add
fmulp
sar
mov
cld
lods
cs
inc
ins
loopne
cmc
mov
sti
mov
pop
out
addr16
adc
stos
cmp
xor
adc
push
add
sbb
sbb
in
push
mov
mov
retf
and
sbb
mov
fs
pushf
jo
dec
mov
fldenv
(bad)
(bad)
mov
in
cdq
sub
in
pop
(bad)
cmp
push
lahf
dec
xchg
and
dec
cmc
sbb
stos
mov
call
xor
push
(bad)
xchg
call
test
xchg
cmps
or
and
xchg
sub
adc
sub
pusha
mov
aad
adc
push
push
pop
aad
aas
mov
into
mov
cs
and
es
push
jmp
mov
jb
pushf
jne
shr
sbb
ins
xor
mov
push
dec
pop
lds
sub
xor
dec
(bad)
add
in
cmp
or
(bad)
pushf
sbb
cwde
loope
outs
cli
xchg
repnz
jnp
cwde
jl
jmp
adc
jbe
movs
pmaxsw
cmps
sbb
mov
pop
stos
mov
jne
daa
popa
pop
xacquire
sub
sbb
stc
mov
data16
shl
imul
mov
aam
fwait
iret
sbb
push
inc
mov
fsubr
and
xchg
bound
ja
(bad)
xor
mov
nop
fimul
mov
lea
and
cmc
add
pop
dec
ss
loope
cmp
movs
mov
scas
push
or
fwait
mov
cs
xor
das
mov
inc
push
push
xchg
pop
xchg
icebp
stos
js
xor
push
push
jmp
mov
rcl
jmp
mov
clc
shl
loop
out
(bad)
adc
loopne
retf
daa
adc
mov
xchg
cmp
push
mov
fdivr
clc
cmp
sub
adc
hlt
xchg
jl
movs
push
movs
aam
shl
and
in
adc
sub
stc
int3
sub
jno
mov
jnp
pop
mov
jmp
jno
or
adc
xor
mov
cli
int3
jmp
pop
xor
cmc
mov
dec
jg
daa
ins
pop
hlt
rol
mov
ret
adc
or
and
ret
jge
outs
imul
cmp
ins
add
mov
ds
mov
inc
loope
pop
cmp
mov
add
aaa
in
movs
xchg
cwde
lods
jae
stos
sbb
in
mov
inc
inc
sub
xchg
pop
cdq
push
sub
retf
mov
mov
(bad)
shl
stc
push
mov
retf
add
pop
jmp
add
jbe
fist
inc
fsub
sub
jg
lods
mov
push
das
and
xchg
div
neg
jno
sub
and
push
sub
mov
sbb
xor
retf
mov
out
inc
mov
pushf
sub
mov
daa
mov
xchg
stos
mov
mov
pop
sub
js
add
hlt
push
push
push
sub
xchg
loopne
aaa
test
loopne
ss
fsubrp
mov
inc
je
pop
dec
xchg
(bad)
push
mov
and
ret
popa
aam
(bad)
(bad)
int
xor
mov
jns
daa
ret
imul
(bad)
jnp
cmp
inc
and
xor
and
retf
jbe
cmp
xor
std
xchg
sahf
pop
mov
sbb
mov
inc
or
xchg
in
mov
push
push
iret
push
xor
mov
not
(bad)
cmova
cld
imul
movs
jnp
dec
xor
pop
mov
sub
inc
xchg
xchg
jp
ins
mov
test
(bad)
push
addr16
jmp
lea
out
push
jp
mov
not
adc
repnz
pop
pusha
popa
inc
mov
cmp
mov
push
mov
mov
sub
pop
enter
fstp
cmc
mov
popa
mov
fmul
mov
std
call
pop
dec
mov
sbb
push
shl
and
into
sub
push
jbe
jmp
add
outs
xchg
jo
cld
pop
add
jae
mov
or
jle
xor
es
repz
adc
fist
sar
cmps
adc
pop
dec
push
imul
mov
push
xor
xchg
daa
sar
(bad)
(bad)
fadd
push
ins
mov
test
das
sbb
sub
push
xchg
dec
jae
dec
jne
int
xor
inc
adc
mov
jno
push
loop
or
mov
call
cmps
sbb
movs
adc
inc
pop
pop
jmp
cmp
pop
aas
out
mov
retf
js
mov
dec
call
jne
or
ds
adc
into
jnp
and
sar
push
push
sub
popa
call
adc
add
inc
inc
jp
sbb
pop
das
stos
jae
test
push
imul
(bad)
sub
cli
aam
fnstsw
loop
scas
nop
ds
cmps
repz
sub
sub
int
test
repz
jns
cwde
test
xlat
sbb
sub
cwde
dec
mov
or
out
mov
xor
push
ss
out
cmp
mov
hlt
mov
push
mov
or
shl
aam
dec
sub
loope
and
fs
das
add
ret
cmp
in
mov
push
push
mov
pop
adc
(bad)
adc
cmps
jbe
push
mov
add
cmps
aas
mov
pop
mov
and
idiv
mov
inc
dec
pop
gs
(bad)
sbb
xchg
dec
shl
sub
mov
cmp
rcr
sbb
je
pop
and
xchg
push
sub
pop
or
imul
or
rol
in
sub
cmp
jb
pusha
icebp
jecxz
inc
lds
sti
das
adc
bound
mov
(bad)
dec
or
dec
push
dec
mov
imul
pop
in
xor
pop
sbb
sub
cmps
sub
std
stc
xor
leave
add
je
shl
pop
into
xchg
adc
mov
(bad)
mov
lds
cmp
or
mov
and
inc
leave
ins
es
ret
jmp
(bad)
rcr
sbb
dec
xchg
cmps
fst
jg
push
sbb
imul
push
inc
shr
push
fisubr
dec
test
ins
dec
xchg
xor
xor
push
cwde
and
lods
in
sub
xor
mov
mov
popa
lds
imul
fnstenv
(bad)
enter
rcl
mov
mov
or
outs
mov
in
sti
add
fs
or
jae
push
mov
xor
imul
push
(bad)
and
xchg
add
lock
mov
xor
mov
mov
pop
test
push
lea
and
aaa
mov
mov
cmp
loopne
sahf
jge
cli
sub
push
(bad)
jge
test
fwait
ror
sahf
mov
mov
imul
mov
add
bswap
dec
outs
and
dec
mov
pop
push
(bad)
daa
xor
xor
bound
out
cld
xor
fldenv
dec
pop
shl
cs
ins
test
retf
js
test
pop
div
imul
aas
sub
cmp
ds
pusha
rol
push
cdq
sbb
pop
iret
ret
and
dec
add
and
inc
loope
daa
pop
adc
aam
out
cmps
pusha
or
xor
mov
aad
adc
push
mov
fcmove
dec
xchg
mov
imul
mov
push
xchg
loop
pop
aaa
xchg
push
popa
jnp
mov
or
std
pop
mov
dec
mov
fcmovnb
mov
rcl
mov
adc
add
push
sbb
push
and
ret
int3
aad
adc
jp
adc
hlt
mov
arpl
xor
jnp
mov
pop
ins
sub
push
mov
mov
sub
cmps
inc
sbb
inc
loope
outs
push
cmp
sbb
in
div
push
loope
lods
stos
aam
pop
stos
int
pop
sbb
or
int3
cmp
mov
adc
outs
jnp
push
xlat
imul
add
and
mov
jp
in
in
ja
aas
xchg
add
xchg
out
sar
jle
xor
mov
test
or
sbb
push
fwait
loop
mov
xchg
stos
mov
enter
mov
sub
cld
sbb
(bad)
sbb
sub
cdq
xor
div
daa
xor
int
int
fiadd
loope
dec
and
xlat
push
lods
mov
sbb
js
xchg
shl
adc
jns
popa
(bad)
push
stos
xor
or
mov
ret
mov
sbb
stos
push
push
mov
adc
fcom
add
mov
je
cmp
das
cmc
clc
sar
stos
mov
loopne
mov
scas
enter
(bad)
iret
pop
ins
into
imul
es
mov
cwde
mov
dec
adc
cmp
inc
push
xchg
xchg
aaa
dec
call
and
adc
out
sbb
mov
stos
or
ds
stos
bound
out
sahf
nop
(bad)
cmps
ret
jmp
lds
movs
mov
and
lds
sti
lods
pop
lods
cmp
inc
ins
ins
movs
cmp
out
push
add
cmps
cmps
push
(bad)
les
fmul
out
mov
jge
rcl
sub
popf
popa
fidiv
not
dec
mov
fcom
cs
sbb
add
mov
push
outs
das
(bad)
sbb
mov
int3
dec
neg
dec
stc
ins
dec
sub
imul
sar
mov
aas
sbb
add
dec
inc
loop
xor
cmp
sub
dec
push
sub
jmp
jo
repnz
mov
(bad)
ins
pop
xchg
dec
xchg
test
mov
mov
clc
stos
daa
mov
cld
(bad)
mov
daa
pop
push
mov
push
jge
mov
ss
sti
add
push
adc
sub
cmps
cmp
loopne
mov
hlt
adc
cld
adc
xchg
and
(bad)
rcl
cmc
js
jp
lds
aam
loopne
inc
dec
fstp
fst
fild
mov
inc
adc
lea
mov
or
std
test
outs
lock
and
jmp
jbe
aaa
lods
movs
(bad)
xchg
push
cld
push
adc
sbb
jp
sub
outs
fucom
xchg
nop
pop
les
adc
adc
popf
push
fidivr
lods
jb
mov
test
sub
mov
sub
adc
popa
cmp
cmp
push
ins
(bad)
dec
add
push
add
xchg
mov
in
dec
sub
mov
je
leave
jg
daa
mov
mov
ror
add
outs
cmp
retf
mov
inc
pop
xor
outs
test
or
adc
pop
jecxz
lock
int3
fistp
adc
(bad)
xor
mov
nop
stos
xchg
(bad)
ficomp
and
inc
push
loop
inc
inc
gs
mov
jno
test
sti
(bad)
sub
les
aad
dec
or
adc
lods
retf
(bad)
sub
test
mov
outs
sbb
jl
dec
push
mov
mov
ror
sub
int
xchg
mov
repz
jnp
aad
mov
popf
inc
fisttp
fst
jle
sub
inc
aad
adc
fs
pop
and
mov
mov
fwait
ret
pushf
loope
and
push
(bad)
jle
scas
mov
in
lahf
push
nop
push
(bad)
shr
scas
dec
sbb
push
cwde
jno
cmp
pushf
adc
fnsave
adc
aaa
sub
rcr
cli
jne
inc
sub
lods
dec
add
xchg
inc
pop
push
jp
add
sti
push
sahf
jbe
add
inc
xor
cmp
push
jecxz
adc
pushf
bound
add
call
push
movs
sbb
(bad)
aam
push
aaa
shl
dec
jmp
mov
cs
or
movs
cld
mov
aam
lock
daa
cmc
fwait
test
repnz
mov
loopne
(bad)
ret
add
jp
inc
inc
xor
push
mov
adc
sahf
inc
or
mov
sbb
and
ins
adc
lods
loopne
xchg
(bad)
or
ds
jo
mov
and
hlt
pop
fwait
push
add
loope
dec
inc
(bad)
push
aaa
mov
fst
fadd
loopne
ret
jecxz
shl
cmp
test
ficom
addr16
add
and
push
sbb
mov
sbb
in
retf
out
pop
loope
loope
dec
fmul
pop
sbb
and
pop
imul
dec
jle
sub
push
xor
cmp
shr
dec
mov
out
cmp
mov
fnsave
inc
adc
push
movs
push
fcom
shl
xchg
mov
lahf
mov
imul
pop
cdq
pop
in
or
xor
dec
mov
adc
or
imul
add
xchg
and
imul
and
mov
push
aaa
push
xchg
mov
out
mov
jecxz
sti
repnz
sbb
aas
loopne
clc
pop
loopne
mov
mov
movs
jge
xor
xchg
mov
mov
or
fadd
shl
int3
jno
mov
mov
add
jb
call
(bad)
push
jge
mov
loopne
fsub
or
pop
pop
sbb
dec
jl
pop
jno
nop
(bad)
adc
xchg
xchg
pop
sub
jp
scas
mov
cmp
ja
cmps
xor
in
jns
jno
push
loopne
add
sub
bound
ds
jnp
jbe
imul
sub
mul
mov
mov
xor
sub
jb
pushf
aas
(bad)
mov
fldl2t
and
sbb
out
leave
dec
aam
popa
jp
xchg
adc
popa
add
inc
dec
mov
adc
repz
mov
xchg
fisub
push
shl
push
je
adc
les
in
mov
dec
scas
mov
sub
rol
jp
std
fidivr
jecxz
pop
mov
popf
sbb
xchg
xchg
sbb
jge
test
jo
inc
(bad)
cmps
sub
outs
cmp
cs
xor
or
call
xchg
addr16
cmc
test
mov
jge
iret
cmps
std
retf
adc
mov
aaa
popf
mov
jl
in
adc
mov
sbb
test
fsub
loop
repnz
pop
jmp
call
pop
imul
push
adc
pop
inc
mov
dec
push
cmp
ds
mov
div
jmp
das
mov
lahf
inc
popf
int
pop
retf
das
mov
xchg
test
js
mov
loop
enter
adc
push
fisttp
inc
cld
add
inc
mov
fwait
xor
std
jmp
mov
cmp
aam
add
inc
mov
push
add
ins
jno
fcom
sahf
into
and
(bad)
mov
test
loop
retf
mov
das
pusha
jg
sbb
cmp
call
dec
int
cmps
arpl
imul
and
push
push
inc
aas
arpl
retf
out
enter
shl
in
mov
mov
jno
push
cmp
fs
retf
rcl
cmps
fcom
test
mov
dec
push
push
call
inc
mov
mov
sub
inc
int
push
add
push
lods
cmps
jbe
loop
pop
repnz
test
repz
test
shl
or
es
and
jmp
ins
xchg
jmp
inc
xlat
clc
int
cmp
and
cmp
mov
out
(bad)
jle
inc
mov
ds
es
pop
fucomip
push
add
adc
jns
cmp
jne
jnp
nop
mov
sbb
or
or
xlat
call
outs
sub
call
push
sub
jno
maskmovq
idiv
sbb
push
ret
int3
xor
sub
push
inc
mov
bound
push
(bad)
jp
dec
inc
cmp
sub
xor
mov
mov
ins
pusha
mov
xor
out
jae
jno
xchg
or
cmc
cmps
dec
add
push
in
scas
and
cmps
mov
push
xlat
out
sti
lods
jnp
jno
push
push
and
push
cdq
pop
pop
or
pop
cmps
enter
ret
mov
fidiv
push
push
ss
icebp
pop
dec
retf
mov
pop
aad
test
mov
inc
popf
js
add
mov
sbb
cmp
movs
jle
push
enter
sbb
std
sbb
push
(bad)
mov
inc
adc
lea
inc
push
inc
push
imul
rcr
pop
sbb
mov
ficom
pop
rcr
adc
(bad)
sbb
dec
push
push
xor
mov
mov
xchg
adc
dec
mov
xor
fcomip
pop
frstor
xchg
add
test
mov
jns
stc
mov
mov
cmp
iret
sub
inc
leave
xchg
sbb
(bad)
and
hlt
imul
pop
adc
js
adc
mov
xchg
mov
mov
cmp
stos
jge
scas
jp
add
pop
fnstcw
adc
jns
sbb
fidiv
dec
inc
jns
mov
xchg
or
ja
sub
loope
xchg
xor
call
sub
adc
dec
jb
out
ja
cmp
sar
cld
xor
js
inc
mov
xchg
outs
sbb
xor
(bad)
frstor
mov
dec
jne
or
les
shl
daa
push
cmps
mov
daa
repz
jnp
and
dec
ret
test
mov
in
cmps
sahf
push
sbb
push
outs
cmps
xor
in
pop
iret
pop
sbb
jmp
(bad)
lock
and
pop
pop
stc
retf
jle
mov
dec
ds
or
and
arpl
pop
scas
jl
lahf
out
hlt
(bad)
sub
fld
xchg
aam
cwde
cmp
mov
test
in
pop
ret
dec
mov
xchg
int
jne
mov
lock
xchg
retf
retf
in
xor
add
das
inc
cmp
mov
push
ficom
push
rol
loope
push
aas
sahf
mov
aad
inc
cdq
dec
sahf
push
cs
fcom
popa
leave
mov
push
pop
add
popf
lds
dec
enter
sbb
loope
mov
js
push
xlat
imul
nop
pop
mov
jmp
and
cmc
and
xor
inc
pop
dec
mov
cmp
push
test
xor
loop
lock
push
bound
or
shr
jge
or
repnz
mov
out
mov
hlt
push
test
inc
stc
mov
mov
scas
mov
push
add
js
or
and
scas
push
or
dec
lods
xchg
ror
and
inc
pusha
lods
jno
lock
call
add
pop
xchg
sub
mov
sub
and
adc
movs
les
je
xlat
push
(bad)
fcmovnbe
inc
std
push
xor
shl
cmps
daa
inc
std
xchg
mov
fdivp
add
or
cli
inc
jmp
sub
idiv
retf
pop
mov
mov
mov
loop
scas
push
jp
inc
clc
cmp
leave
cli
js
jno
or
adc
mov
movs
jecxz
cmp
div
popf
fs
inc
outs
mov
fdivr
push
lods
dec
movs
sub
and
mov
xchg
out
ror
rol
popa
jmp
stos
jecxz
fist
mov
jnp
add
add
cmp
clc
jmp
mov
cmp
fs
ret
out
add
dec
imul
ror
push
mov
inc
rcr
mov
in
xor
jmp
add
mov
lods
mov
and
add
sbb
sbb
mov
shl
loopne
dec
sbb
push
push
iret
xor
inc
loope
mov
mov
or
fs
cmp
dec
xor
dec
mov
sbb
bound
shr
mov
inc
idiv
lods
add
jmp
xor
in
cmp
add
or
enter
jne
neg
jno
cdq
mov
mov
push
repnz
xor
into
jmp
mov
shr
loopne
test
(bad)
inc
jae
sar
cmp
mul
in
or
mov
push
or
mov
push
or
out
xchg
into
lods
sbb
fwait
cmp
mov
ins
xchg
or
push
add
jae
sar
mov
dec
repz
call
push
cmp
stos
adc
mov
je
cmp
pop
aas
pop
add
push
retf
push
and
xchg
test
adc
pop
ret
and
sbb
ss
jle
repz
pushf
xchg
mov
xchg
and
push
mov
clc
mov
jl
gs
inc
mov
js
add
pop
out
sub
and
mov
jge
jmp
jmp
je
std
add
les
mov
dec
rcr
in
jp
mov
pop
xor
sti
and
aaa
xchg
popf
cmp
mov
call
cmps
mov
xor
xchg
in
push
mov
cmp
and
test
out
and
adc
xchg
and
sub
cmp
sahf
pop
jo
push
adc
jge
fwait
push
retf
xor
ret
ficomp
test
xlat
fistp
push
xor
inc
rol
mov
imul
and
enter
inc
sub
mov
and
loope
mov
pop
sti
mov
adc
clc
(bad)
pop
in
and
ret
test
dec
xchg
mul
ret
inc
rep
jne
in
retf
test
dec
(bad)
clc
in
test
mov
jl
push
daa
xor
push
sbb
test
add
aaa
fdivr
aam
aad
out
shl
fisub
fcmovnb
fld
aad
aad
lock
call
xor
sbb
das
repz
aas
xor
push
jge
dec
add
(bad)
lea
aaa
push
(bad)
and
mov
movs
mov
adc
mov
aad
data16
push
mov
gs
out
or
add
push
sbb
sbb
cmp
push
mov
pop
xor
and
loope
fnsave
and
dec
and
xchg
retf
out
push
add
clc
aam
mov
je
inc
movs
push
ins
and
dec
into
jno
mov
jbe
in
sbb
add
stos
inc
out
push
retf
xlat
rol
retf
mov
adc
sub
test
cmps
(bad)
shr
lock
(bad)
xor
push
lock
js
sub
shr
ja
jmp
add
jne
fdiv
aaa
pop
jmp
inc
dec
mov
shl
cs
ds
xchg
fcomp
or
sub
xchg
jecxz
and
in
add
mov
ss
add
into
mov
adc
xor
sub
call
push
pusha
add
mov
dec
push
xor
push
shr
cwde
das
ds
jmp
test
mov
pop
or
xchg
push
dec
in
cli
imul
push
jnp
cmp
xor
push
outs
or
push
mov
xchg
jmp
cmc
jbe
adc
sahf
push
mov
xchg
das
or
adc
gs
lea
sub
das
and
sti
push
(bad)
sbb
pop
cs
xchg
push
popf
sbb
mov
data16
push
inc
cwde
xor
stos
dec
jbe
and
enter
cdq
adc
and
test
loopne
cmps
(bad)
rcl
cmc
les
ja
loope
aad
das
cmps
push
adc
mov
mov
mov
clc
mov
or
nop
add
dec
dec
inc
sbb
jne
mov
add
sub
nop
pop
fs
fist
test
jno
fmulp
mov
stos
mov
sub
cli
lock
dec
shl
jns
mov
lods
dec
ja
retf
mov
sbb
data16
les
jae
push
retf
adc
add
(bad)
adc
test
pop
imul
fadd
jp
nop
xchg
frstor
and
call
lock
jg
imul
mov
rcl
rcr
in
pop
arpl
adc
fisttp
hlt
jb
mov
mov
jno
fldcw
call
xor
xor
mov
iret
fld
push
push
adc
sar
leave
lods
div
mov
hlt
push
push
and
adc
adc
sub
js
mov
into
fwait
xchg
cmc
in
call
mov
in
add
ficom
lock
adc
adc
jle
pop
mov
inc
adc
es
or
pop
shl
test
ins
push
push
ret
mov
mov
push
aaa
add
sti
xchg
int
jmp
popa
bound
daa
sub
adc
sub
cmp
hlt
js
pop
in
mov
pop
inc
popf
nop
sub
push
cmp
retf
stos
inc
loope
dec
adc
je
sbb
xchg
lock
inc
mov
mov
jecxz
(bad)
test
cmp
pop
retf
pop
enter
sub
in
pop
mov
ds
(bad)
(bad)
cwde
inc
jecxz
out
clc
or
jbe
pop
cmp
pop
or
pop
imul
dec
lock
aad
jge
mov
and
jecxz
aaa
dec
jl
pop
or
sbb
mov
jge
stos
push
pushf
lock
mov
sub
into
addr16
add
jns
(bad)
pop
cmp
ds
sbb
cmps
mov
les
out
cmp
xor
mov
mov
pop
movs
adc
mov
and
xor
movs
and
bound
pushf
adc
imul
fidivr
jb
ret
and
cmp
xor
sti
out
or
push
lea
inc
push
adc
inc
adc
xor
dec
sub
and
pop
cli
sub
mov
or
cmp
lds
test
mov
sbb
push
and
xor
mov
rcr
dec
fist
inc
and
or
dec
jle
add
ret
dec
push
mov
dec
hlt
mov
imul
retf
(bad)
retf
and
sbb
int3
inc
(bad)
into
jae
or
push
ret
lds
stc
jp
aad
and
(bad)
pop
dec
sbb
adc
out
xchg
nop
xor
jl
push
cs
fcomp
mov
ror
popf
pop
into
or
ret
(bad)
cmp
cmp
inc
jmp
inc
icebp
ret
js
push
mov
psubusw
pop
das
fsubr
mov
dec
xor
or
mov
and
sbb
aam
mov
cwde
add
aam
cdq
pusha
stos
dec
scas
push
repz
cmp
movs
dec
daa
imul
or
mov
fucomp
push
push
rol
xlat
repnz
fstp
aas
(bad)
lea
xor
pop
fistp
(bad)
int3
out
dec
bswap
pushf
mov
sbb
call
shl
push
jge
sar
adc
add
push
(bad)
jnp
mov
mov
sti
mov
xchg
or
daa
iret
mov
adc
xor
add
stc
sub
mov
xchg
call
xor
mov
(bad)
jp
lahf
xchg
mov
jp
fsubp
sub
rcl
add
and
lahf
cs
mov
dec
(bad)
dec
xchg
push
cld
sbb
outs
or
and
sbb
sub
dec
mov
add
pop
pop
paddusb
jae
mov
sub
jb
pop
repnz
mov
jge
cmp
add
sbb
aam
cwde
das
pop
out
cmp
pop
imul
sub
and
sbb
aad
ss
enter
clc
or
shr
fldcw
add
shl
push
sub
stos
jl
sub
add
mov
es
repnz
dec
mov
jmp
mov
pop
stc
add
xor
lods
and
cmp
out
jnp
mov
add
frstor
adc
cmp
adc
ror
aam
rcr
inc
inc
xchg
xchg
push
out
sub
repz
mov
aad
sbb
dec
jmp
dec
adc
in
and
xor
or
inc
push
and
add
mov
cs
and
in
(bad)
xor
lods
and
fwait
pop
add
out
call
scas
loop
jmp
iret
call
inc
int
inc
int3
and
lock
dec
pop
je
jmp
cli
mov
jnp
arpl
and
adc
int3
cmc
dec
addr16
dec
lods
fisubr
jecxz
enter
push
adc
cwde
pop
rcr
or
mov
retf
adc
int3
aad
xchg
int3
test
hlt
les
push
rcl
test
dec
test
fcom
inc
sub
test
add
xlat
arpl
pop
arpl
xchg
pop
xchg
pop
mov
sbb
in
iret
test
aaa
xchg
inc
adc
std
data16
seta
fucomip
xor
adc
sbb
dec
mov
ret
adc
lahf
adc
in
movs
or
xor
or
push
or
hlt
sbb
cmova
mov
fisub
call
cmps
fld
push
shr
inc
dec
cld
mov
sub
inc
test
add
sub
repz
sub
inc
rcl
mov
ss
std
fist
xchg
inc
inc
sbb
lods
adc
mov
popf
pushf
cmp
lea
add
enter
cmp
pusha
lods
fmul
mov
sub
ins
shr
(bad)
fs
int
(bad)
dec
mov
arpl
dec
xlat
dec
jnp
outs
xchg
loopne
mov
bound
aad
stos
cld
mov
cmp
inc
test
test
xchg
mov
sahf
out
adc
dec
ins
inc
push
paddusb
xchg
pop
loopne
daa
add
ss
rol
loop
loopne
gs
pop
sti
inc
jmp
jbe
inc
clc
jb
cmp
jecxz
cli
add
cmps
call
ja
stc
pop
fwait
les
and
lea
mov
cld
lds
loopne
pop
mov
add
push
push
mov
push
sbb
mov
cmp
ret
push
fs
lock
pusha
inc
(bad)
imul
in
sub
mov
jmp
scas
and
mov
rol
cmp
sub
sahf
shr
cmp
pop
in
inc
repnz
std
mov
jne
adc
jo
cmc
xor
xor
aaa
das
pop
lds
movs
retf
ret
test
cmps
xor
iret
nop
cmps
xor
add
inc
mov
mov
mov
lods
fdivr
pop
(bad)
pop
add
mov
mov
mov
dec
jle
fisub
jno
pop
xor
sbb
leave
sub
(bad)
out
repz
xchg
xor
pusha
and
mov
push
out
enter
in
xor
jecxz
cmp
mov
call
aam
and
and
adc
mov
fcomp
jg
mov
inc
dec
(bad)
(bad)
jmp
fdiv
es
and
sbb
outs
push
clc
pop
dec
mov
sbb
neg
shl
outs
scas
ins
lea
dec
jns
jle
(bad)
out
sub
push
or
call
nop
cmp
out
scas
cdq
add
xchg
mov
bound
bound
es
mov
jp
jl
rcl
xor
std
jno
sbb
and
adc
mov
in
inc
and
addr16
xchg
add
inc
ror
sub
cli
shl
xchg
mov
inc
rcl
leave
pop
or
xor
shr
mov
lods
xchg
lahf
rol
hlt
fiadd
adc
pop
repnz
sbb
inc
scas
and
pop
mov
xchg
push
pop
jmp
out
mov
test
mov
sub
cmp
test
mov
xor
clc
push
iret
leave
cwde
push
pop
sar
fsubr
xchg
retf
imul
and
call
loope
ja
add
mov
cmp
ins
sbb
imul
daa
cmc
xlat
sub
std
mov
mov
div
inc
mov
xor
cmp
pop
call
int
daa
mov
into
mov
dec
mov
xchg
lds
out
or
imul
je
fsub
in
(bad)
xor
dec
or
cmps
pop
mov
mov
dec
sbb
in
cmps
test
test
ja
mov
xchg
dec
or
push
in
add
mov
inc
or
pusha
adc
(bad)
iret
aaa
cwde
cmps
inc
xchg
dec
loope
jns
ins
arpl
cmc
ret
retf
stos
nop
leave
add
xor
dec
sub
mov
xchg
loope
mov
xchg
jo
mov
mov
cmps
out
sbb
mov
loop
cs
call
test
mov
dec
cmps
pop
adc
xor
in
imul
sub
add
cmp
xchg
(bad)
daa
add
pop
adc
push
dec
xchg
mov
fisttp
jge
cwde
pop
out
inc
push
aam
add
jmp
packssdw
cmp
test
xchg
shr
scas
rcl
retf
neg
dec
in
sub
retf
sub
pop
repnz
jecxz
inc
mov
fwait
inc
jae
inc
fisubr
mov
hlt
dec
int
cmp
cmp
fcomp
fwait
xchg
vcompressps
sub
pusha
xor
mov
(bad)
mov
int
jmp
dec
cmp
push
mov
fimul
pop
lock
fild
aas
out
and
out
aad
jmp
sub
daa
sub
jne
arpl
lods
xor
push
mov
and
je
inc
lahf
and
rcl
add
pushf
popf
stc
push
pop
and
mov
aad
mov
stos
out
cs
ret
mov
jecxz
rcr
ret
adc
popa
mov
pop
loop
sbb
push
call
repz
jecxz
aaa
psrld
pop
out
dec
pop
es
jge
push
movs
movs
jns
enter
adc
cmp
adc
push
or
in
mov
lds
mov
movs
fcom
xor
leave
jecxz
inc
pop
popf
pop
data16
int
mov
or
aas
pop
rcl
cmps
shr
xor
jmp
loop
pop
add
psubsw
pop
sahf
loop
xlat
mov
xchg
add
in
daa
es
mov
ret
(bad)
(bad)
repz
push
push
push
scas
pop
out
fistp
test
xchg
test
stos
popf
sub
sbb
mov
jo
(bad)
mov
push
push
out
jb
test
cmp
fsubrp
and
cmp
fst
sbb
pop
shl
inc
cli
push
sub
jns
ror
(bad)
mov
popa
test
xchg
pop
pop
dec
or
cmp
mov
aad
xor
and
add
push
inc
mov
mov
cli
sbb
mov
mov
jl
sbb
es
fld
lock
outs
lods
and
xchg
int
pop
cmp
test
call
push
push
xchg
sbb
gs
mov
fistp
in
jno
aam
mov
pop
dec
adc
(bad)
mov
pusha
push
popf
pop
sub
neg
jb
or
repnz
(bad)
mov
and
pusha
jo
setnp
or
mov
cmp
inc
mov
mov
ret
push
pushf
push
dec
(bad)
cmp
xor
mov
imul
out
nop
pop
pushf
push
pop
push
dec
jne
sub
push
ret
xor
add
push
dec
mov
sbb
fbld
fldln2
dec
fiadd
adc
jecxz
cmc
xchg
retf
aam
test
mov
push
and
div
fldenv
stos
inc
mov
xchg
cmp
ins
and
add
mov
mov
add
fldenv
mov
cwde
mov
gs
mov
xor
jmp
pop
call
sahf
pop
pop
jns
aas
pop
ja
dec
mov
and
rol
into
dec
inc
jbe
and
aaa
inc
xsave
mov
or
js
call
aad
mov
fdivr
test
sub
addr16
sbb
adc
repz
push
mov
mov
mov
push
mov
or
xor
xchg
jg
mov
mov
cmps
mov
scas
mov
ror
sti
stos
outs
in
enter
push
or
inc
pop
ja
ins
fld
jecxz
in
mov
icebp
retf
outs
dec
(bad)
xor
leave
pop
cmps
iret
in
dec
adc
cmp
jno
in
jmp
lock
in
xlat
inc
sbb
sahf
sbb
sbb
sbb
rol
jl
jle
and
sbb
or
cmp
xchg
icebp
xor
mov
and
xor
mov
mov
adc
xchg
call
inc
cli
jnp
dec
pop
mov
(bad)
div
cdq
and
jno
ja
aaa
rcr
cli
ins
fidiv
ins
and
jp
mov
stos
shl
cmp
or
mov
repz
xor
(bad)
pop
gs
pop
pop
push
movs
sub
pop
push
cld
jp
test
mov
or
fiadd
jno
xor
mov
pop
(bad)
repz
(bad)
aad
in
ins
adc
add
ins
add
inc
xchg
dec
aad
xchg
cmp
jns
push
in
xchg
pop
mov
cld
sub
mov
aas
jl
cdq
outs
adc
lock
mov
push
(bad)
sbb
jo
stc
out
and
sti
mov
loope
sbb
mov
aad
neg
mov
out
fst
stos
aaa
fimul
jmp
or
scas
and
mov
outs
cwde
test
aad
(bad)
push
mov
push
imul
icebp
mov
(bad)
cmps
dec
xlat
mov
cld
inc
shr
inc
fisub
aad
loop
pop
pop
jge
lods
ins
jbe
sti
sub
jecxz
bound
mov
xchg
inc
xor
out
xchg
jp
sbb
cmp
mov
xchg
ins
iret
gs
xchg
xor
sub
add
xor
xchg
xchg
sar
retf
and
dec
movs
das
add
stc
nop
ds
bound
mov
cmp
retf
xor
cs
stc
mov
in
enter
sub
mov
jge
call
les
and
push
test
dec
pop
xchg
test
add
xchg
fcom
(bad)
jb
ins
push
hlt
sbb
sbb
cmp
clc
iret
pop
pusha
jp
or
or
jno
lahf
int3
scas
fcomp
lds
test
sbb
pushf
ins
cmp
fbstp
cmp
enter
movs
loopne
inc
adc
in
clc
gs
inc
mov
inc
lea
mov
cmc
(bad)
enter
pusha
aad
jl
inc
adc
lds
inc
jl
(bad)
mov
jg
rol
imul
and
mov
mov
test
data16
mov
lds
enter
sub
add
xchg
int3
push
jp
fadd
dec
movs
scas
lock
iret
xchg
data16
popf
clc
jle
pop
imul
mov
push
jge
push
cmp
dec
sbb
push
push
sbb
jmp
hlt
jg
hlt
xchg
and
dec
add
mov
pop
jmp
imul
leave
sub
adc
push
add
mov
repz
adc
sbb
gs
call
add
dec
mov
and
push
push
lods
dec
nop
sub
fistp
shl
pop
mov
mov
lds
push
pop
cmps
push
mov
aas
int
and
xchg
fisttp
adc
mov
shl
call
(bad)
out
cmp
daa
pop
cmp
fdivr
imul
xlat
test
xor
lahf
aam
ror
inc
stc
pop
push
rol
mov
out
and
jb
fidivr
daa
cwde
scas
fisubr
pop
dec
jns
mov
lods
int3
and
xchg
xor
sub
inc
inc
add
mov
push
jp
sub
cmp
fsubr
dec
repz
or
imul
int3
xor
das
stos
and
(bad)
pop
sub
mov
sub
xchg
inc
(bad)
jg
cmp
mov
xor
add
hlt
mov
test
retf
sub
mov
test
in
std
ret
out
fidivr
jge
jae
xchg
dec
and
mov
je
jne
and
cmc
inc
aas
mov
xlat
shr
adc
(bad)
aaa
aaa
ret
retf
xor
daa
sbb
retf
aam
je
and
push
(bad)
cmp
mov
add
ins
jge
cli
stc
fsubrp
fisttp
jle
jno
mov
mov
add
push
pop
inc
mov
add
fs
add
add
imul
or
cmp
(bad)
enter
call
xchg
dec
(bad)
das
add
xor
adc
lods
cmp
sahf
xchg
shl
in
adc
mov
mov
(bad)
xchg
cdq
add
add
push
mov
cmp
and
ins
jmp
inc
clc
cmp
xor
cmp
cmp
test
lock
dec
sub
fmul
mov
test
push
and
mov
into
and
fst
xor
jmp
mov
stos
test
in
jge
xor
repz
nop
xchg
fdiv
pop
ror
push
mov
inc
inc
cmc
pop
and
lods
mov
ds
sbb
xchg
out
pop
popf
(bad)
xchg
jp
xor
dec
pop
popa
push
je
scas
test
ja
pop
push
sub
lods
sbb
(bad)
jge
(bad)
aad
or
cmp
xchg
sub
xor
pop
and
mov
imul
out
fld
iret
xor
xlat
(bad)
dec
add
jge
fadd
pop
xor
fs
in
jb
es
pop
out
ja
xor
jmp
in
cmp
iret
inc
mov
xchg
mov
(bad)
out
outs
shr
stos
lds
stos
add
cmp
test
pop
mov
mov
js
popf
jb
sar
xlat
sbb
cs
rol
sar
dec
dec
xchg
cmp
test
fcmovnb
fucomp
pop
jnp
ins
aaa
cmp
inc
inc
sbb
test
lods
fisub
sti
sti
mov
rcr
(bad)
das
inc
push
ja
scas
sub
rcr
outs
(bad)
jo
dec
sub
adc
lds
mov
adc
call
stos
mov
sti
arpl
adc
jl
enter
push
jo
adc
lock
jno
mov
int3
mov
dec
ss
xor
ror
push
jnp
outs
por
or
add
das
frstor
adc
pop
shl
sub
fcomp
dec
(bad)
and
mov
xchg
jae
push
cdq
aaa
ror
lds
in
adc
loopne
popf
mov
dec
mov
mov
out
sti
inc
mov
sbb
cmp
test
jne
mov
js
dec
ja
data16
push
int3
adc
mov
inc
adc
int
mov
jns
mov
sub
rol
pop
xor
xor
xchg
mov
sub
mov
xchg
shl
shl
fldpi
cmp
dec
hlt
pop
cmc
sar
das
dec
lahf
mov
sub
(bad)
fist
jge
pop
mov
in
adc
xchg
pushf
sbb
sub
(bad)
adc
inc
cmp
cld
loopne
pop
aam
pop
sbb
icebp
cli
xor
pop
sub
pop
and
or
sbb
dec
loope
push
inc
in
xor
adc
(bad)
or
js
adc
out
ja
(bad)
es
cmp
stos
bound
adc
push
fdivr
je
lods
xchg
and
xor
fwait
pusha
sar
push
and
outs
(bad)
pop
and
mov
jnp
out
and
outs
mov
fisttp
aad
sub
(bad)
pusha
ficom
pop
test
ss
xor
call
fdiv
push
sub
in
dec
popa
clc
rol
adc
mov
ss
xor
cs
jne
pop
add
pop
push
mov
or
out
sbb
cmps
dec
mov
sub
icebp
enter
sub
ret
test
mov
mov
push
sbb
ret
dec
and
and
test
push
fwait
jecxz
lea
cmp
in
sub
in
retf
dec
stos
inc
(bad)
das
push
push
mov
imul
enter
mov
std
aam
inc
push
stos
test
loope
xor
jae
xchg
test
dec
xchg
mov
mov
cmps
push
add
mov
mov
jge
retf
sbb
hlt
adc
(bad)
mov
test
ret
xor
outs
mov
cmc
xor
sbb
sahf
scas
mov
test
int3
(bad)
pop
stos
pop
sbb
cmp
fdiv
imul
xor
movs
(bad)
and
outs
ja
ret
push
cdq
repnz
out
jb
ret
jbe
retf
push
cmp
or
call
popf
or
aaa
mov
cdq
jnp
sbb
movs
cmp
cmc
sbb
cld
int
dec
sbb
repz
fnstsw
shl
test
retf
stos
rcl
stos
popf
jmp
stos
and
mov
retf
mov
mov
hlt
pop
call
xchg
adc
cli
jae
dec
mov
mov
jecxz
(bad)
push
loop
rcr
and
int
movs
aad
adc
jnp
imul
push
xchg
xchg
fdiv
ins
pop
mov
mov
int
cmp
je
jecxz
bound
ja
and
sub
and
pop
sti
in
sub
add
mov
cmp
adc
idiv
jg
scas
adc
mov
cld
jmp
jae
pop
jo
les
fldenv
out
gs
loop
mov
inc
jecxz
push
leave
lea
dec
gs
push
fstp
mov
push
int
push
jmp
sbb
bound
pop
pop
mov
add
or
movsx
jmp
or
mov
inc
sbb
aam
(bad)
sbb
jbe
(bad)
mov
fistp
mov
mov
adc
push
out
test
lea
rol
dec
cwde
fsub
or
ret
mov
cwde
sub
jecxz
mov
out
inc
test
jg
loopne
push
pop
ret
(bad)
xlat
inc
pushf
push
ja
jmp
test
cld
movs
cmps
jecxz
dec
(bad)
retf
cld
xchg
je
xor
push
les
xchg
test
scas
cli
jge
test
pop
and
and
or
xchg
xchg
or
lea
sub
sar
fcomip
mov
jns
dec
scas
xchg
pop
pop
scas
fistp
dec
test
call
mov
loop
(bad)
jecxz
and
cli
xor
mov
fnsave
pop
jmp
add
cdq
xor
leave
scas
adc
call
push
pop
inc
fnstcw
add
ffreep
int
movs
js
xchg
fisubr
sahf
nop
add
loope
fisubr
(bad)
and
ret
sub
sti
inc
mov
xlat
cld
mov
(bad)
push
xor
fwait
cdq
and
leave
leave
push
sbb
and
cli
in
cmps
cmp
hlt
and
(bad)
mov
pop
mov
into
loop
push
mov
xchg
imul
(bad)
and
add
add
imul
lods
add
adc
out
(bad)
and
cli
out
jno
cmp
dec
xlat
jg
sbb
into
mov
pop
hlt
jns
add
add
data16
lds
mov
aam
xchg
jecxz
mov
cli
xor
push
das
shl
test
mov
jnp
push
xchg
push
out
sub
cmc
jge
jns
cmc
inc
sub
xor
mov
sbb
jae
cmps
mov
cwde
push
xor
adc
lods
push
lods
pushf
mov
retf
(bad)
push
and
movs
icebp
cmc
mov
bound
fisttp
pop
adc
loop
sub
ss
cmp
test
not
xlat
jo
retf
mov
retf
faddp
sbb
sbb
aas
movs
sahf
out
push
outs
mov
xchg
xchg
xchg
(bad)
js
xchg
jbe
out
mov
loopne
sub
mov
jle
cli
cmp
xchg
dec
sub
outs
mov
jmp
clc
jnp
adc
test
movs
xchg
outs
into
ss
and
xchg
add
pop
sar
(bad)
out
and
lods
mov
and
pop
inc
mov
dec
fadd
push
jge
and
add
jo
test
and
ja
test
sbb
dec
pop
imul
xor
jae
movs
imul
mov
or
xor
inc
dec
lods
pop
push
call
jno
pop
repz
mov
mov
mov
addr16
add
hlt
xchg
cmovl
aam
imul
lods
xchg
ins
fcom
lds
adc
sub
std
es
hlt
mov
imul
pop
movs
dec
scas
lds
dec
pop
dec
sbb
mov
fsubr
add
sbb
loop
pop
sbb
push
in
cmp
cli
loope
call
shl
out
xchg
dec
out
dec
daa
aas
sbb
push
aas
dec
cdq
sahf
mov
imul
mov
dec
nop
add
les
sub
cmps
outs
dec
adc
adc
or
outs
(bad)
repnz
movs
jle
ss
call
add
hlt
cmc
pop
add
mov
mov
push
aam
js
jl
xchg
push
mov
dec
push
mov
in
dec
in
xchg
int
xlat
push
mov
movs
pop
(bad)
cmp
arpl
and
xchg
mov
and
retf
xchg
sub
sub
int3
int
imul
mov
out
int
or
gs
cwde
push
pop
dec
popa
push
ret
in
mov
aam
cld
ret
mov
and
ret
sub
inc
lods
popf
aaa
sub
sub
scas
jge
out
push
ja
cmp
dec
jg
mov
mov
hlt
retf
hlt
cmps
or
mov
inc
loop
iret
stos
fwait
inc
das
add
aam
sub
or
and
mov
sub
push
lds
add
in
jmp
inc
mov
cmp
jmp
mov
or
pop
jae
fild
fs
es
jne
pop
ror
mov
lea
push
int
push
gs
ja
pop
pop
cmc
js
call
sub
or
or
cwde
stc
icebp
jae
mov
and
add
hlt
mov
pop
clc
or
sub
and
push
pusha
dec
rcr
hlt
xor
mov
sub
adc
mov
sbb
imul
div
pop
and
mov
jecxz
je
jb
outs
in
popf
aad
bound
std
lahf
sbb
inc
jno
lock
aas
scas
xchg
push
add
add
push
sbb
hlt
enter
push
jb
inc
xchg
fiadd
loope
in
arpl
add
dec
mov
push
mov
mov
mov
lock
scas
fistp
sbb
jecxz
pop
repnz
imul
pop
bound
push
or
fwait
push
leave
repz
jo
stos
imul
ret
das
es
pop
or
jne
mov
ins
xor
fidiv
mov
ds
xor
mov
jmp
loop
(bad)
cld
jg
mov
jmp
push
mov
add
stos
int3
into
xchg
mov
clc
dec
data16
inc
sar
inc
sub
adc
loop
dec
mov
xchg
popa
movs
or
xor
mov
sbb
xor
xlat
shr
ins
movs
shl
lds
xor
(bad)
xchg
aaa
xchg
call
xchg
add
push
ja
or
sub
test
sub
into
scas
fs
and
les
movs
mov
mov
jmp
(bad)
push
shr
hlt
adc
mov
jmp
in
popa
xor
jns
jmp
push
push
and
adc
repnz
retf
pushf
xchg
push
les
xchg
arpl
popa
(bad)
adc
or
push
or
test
and
and
cmp
test
or
mov
sub
add
mov
rol
pop
jle
iret
pop
ja
pop
cmc
pop
je
icebp
out
mov
xchg
icebp
aad
addr16
imul
call
cwde
push
lds
sub
jnp
push
sub
out
or
ds
jno
cmp
scas
inc
fxch
retf
pop
fndisi(8087
pop
lds
mov
xor
push
mov
mov
push
xor
push
iret
lahf
xor
int3
dec
xchg
movs
pop
rol
jmp
adc
adc
not
adc
rcr
mov
das
out
xchg
push
aaa
stos
pop
sbb
xor
stos
add
sub
arpl
fst
xor
pusha
pop
push
retf
data16
aad
gs
sbb
mov
fcom
pop
imul
cmps
dec
jg
aaa
xchg
jnp
xchg
xor
xchg
lds
pop
fidiv
or
add
mov
leave
cmc
inc
addr16
sub
adc
ja
pop
sbb
in
(bad)
xchg
arpl
div
sub
inc
jbe
scas
je
inc
outs
daa
dec
(bad)
push
ret
dec
lock
(bad)
pushf
pop
jne
jecxz
pop
sti
sbb
shr
bound
ins
mov
mov
into
add
add
aad
mov
jp
pop
mov
int3
sbb
test
test
out
xor
pop
les
inc
(bad)
je
dec
jne
data16
dec
dec
shr
dec
imul
push
leave
mov
pop
xchg
pop
repnz
je
repnz
repnz
sbb
div
xchg
in
push
sbb
into
add
inc
add
cmp
pushf
movs
xor
sahf
call
jl
neg
cdq
xchg
push
dec
inc
call
lods
mov
repz
sbb
mov
or
xchg
dec
xor
or
or
jp
mov
push
or
fst
in
dec
xor
mov
xchg
scas
push
mov
in
in
xchg
pop
lds
imul
gs
xchg
lock
jb
mov
sbb
jg
pcmpeqb
cmp
sbb
popf
jne
xor
push
leave
ja
mov
dec
xchg
in
div
lods
dec
inc
cmp
jmp
cs
jge
inc
movs
xlat
jle
sub
cmc
dec
cli
xchg
dec
adc
or
sub
ret
cmp
clc
out
mov
jmp
sbb
xchg
inc
jp
scas
pushf
mov
in
imul
xchg
adc
fs
not
dec
xchg
cwde
js
mov
mov
jns
push
mov
or
dec
jmp
int
lahf
fwait
aad
clc
repnz
xlat
shl
lock
xchg
je
retf
std
ja
and
mov
sbb
lock
adc
in
bound
or
or
inc
sbb
lock
test
dec
sub
sar
jecxz
or
les
jl
pop
repz
adc
je
loope
imul
jnp
push
push
sbb
stc
mov
and
aas
xor
fs
mov
fdivr
and
jmp
mov
add
shr
or
gs
adc
or
jecxz
mov
test
mov
push
lds
jno
iret
pusha
dec
xchg
outs
iret
ins
xor
push
jbe
(bad)
lods
xchg
fcmovnu
lods
ret
cmp
ins
jmp
adc
mov
cmc
retf
js
mov
mov
sbb
loop
pop
or
cs
outs
clc
dec
xlat
ds
scas
fbld
loop
inc
(bad)
or
xor
mov
out
leave
pop
mov
adc
jbe
pop
ret
mov
or
push
(bad)
push
pop
sbb
adc
mov
popa
je
fidiv
div
pushf
sub
ins
addr16
fdivr
mov
add
mov
jge
scas
out
pop
pop
jmp
jnp
inc
xchg
popf
pop
push
les
xchg
loop
stc
and
adc
inc
add
(bad)
outs
mov
sub
jae
adc
dec
inc
mov
mov
sahf
cdq
int3
mov
xor
xchg
loop
sahf
into
add
or
sbb
cmp
mov
push
mov
(bad)
(bad)
sahf
or
and
dec
inc
rol
lods
cmp
mov
repnz
sub
xor
inc
pusha
inc
inc
cmps
xchg
mov
jb
jge
hlt
nop
fs
pop
aad
mov
mov
jno
mov
js
das
out
outs
fs
rol
repz
adc
sti
or
rcl
and
outs
pop
pop
add
clc
inc
mov
mov
xchg
xor
mov
int
adc
out
mov
adc
and
dec
jecxz
inc
test
or
jmp
push
test
jp
hlt
mov
rcl
push
fwait
movs
div
mov
mov
mov
sbb
inc
pop
aad
dec
fld
add
jnp
xor
aas
mov
or
dec
neg
fyl2xp1
push
test
xchg
inc
or
fwait
sbb
(bad)
mul
push
adc
cwde
push
retf
aas
stos
sti
mov
outs
xor
(bad)
adc
mov
popa
retf
add
cdq
(bad)
mov
mov
jnp
fstp
sub
adc
ret
mov
std
adc
scas
mov
push
inc
mov
jnp
out
jb
xchg
push
ss
mov
jns
or
rcl
push
dec
cmp
inc
ja
das
inc
shl
aas
xchg
(bad)
xchg
cmp
ret
fist
in
jmp
xchg
int3
das
xchg
test
cld
or
xchg
std
sub
dec
into
retf
xchg
add
in
push
pop
and
cmp
mov
adc
and
xor
push
movs
out
xchg
mov
dec
add
(bad)
push
in
sub
neg
and
loop
outs
or
js
in
test
adc
loop
in
dec
ins
ss
add
cmp
pushf
mov
(bad)
mov
mov
xchg
push
mov
icebp
vmread
(bad)
call
xor
push
cmp
adc
xor
jg
clc
stos
push
cmp
enter
sbb
aam
sub
(bad)
fwait
je
cmp
in
fucomp
and
push
or
test
xchg
loopne
imul
(bad)
das
in
pop
outs
fstp
jno
loope
lea
sbb
cmp
or
cmp
test
test
jmp
pop
fsub
out
iret
ret
push
jo
push
cmp
mov
mov
aas
movs
sub
dec
repnz
(bad)
fnstenv
dec
xor
xchg
js
add
mov
test
dec
(bad)
jmp
(bad)
or
xlat
dec
xchg
retf
pop
imul
and
aam
mov
enter
add
pop
mov
iret
mov
mov
mov
js
aad
loope
repz
xchg
std
and
sbb
mov
pop
mov
lods
sub
and
pop
stos
ds
(bad)
fs
movs
sub
ret
std
es
add
mov
dec
fild
scas
fisub
and
lods
mov
mov
dec
scas
add
sub
outs
adc
xchg
dec
xchg
loope
(bad)
fldenv
adc
mov
jmp
inc
gs
mov
nop
mov
pushf
in
cmp
mov
outs
retf
loop
push
mov
pushf
outs
cmp
fstp
sbb
enter
sub
push
outs
hlt
outs
sbb
ret
in
xchg
scas
outs
movs
bound
or
mov
into
or
lock
sbb
add
cli
scas
ror
jmp
jae
aaa
mov
pushf
jae
fcom
xor
or
adc
(bad)
and
push
and
dec
add
xchg
push
out
in
push
sahf
inc
inc
xor
dec
add
out
adc
mov
xchg
xchg
dec
je
icebp
sbb
icebp
inc
mov
test
or
imul
dec
jbe
adc
pop
repnz
jge
cwde
(bad)
mov
dec
sbb
repz
loopne
mov
retf
pop
mov
push
retf
or
mul
(bad)
mov
xor
jb
mov
int
mov
shl
jbe
push
into
pusha
test
xchg
inc
retf
std
xchg
push
aad
cmp
rcl
and
xchg
aas
ret
in
mov
dec
enter
pop
test
dec
mov
repz
jne
xor
daa
pop
ficomp
(bad)
fwait
dec
pop
rcr
sub
cmps
std
jmp
cwde
xor
sub
ror
cmp
pop
mov
imul
or
jl
aaa
les
test
(bad)
fsubr
mov
in
dec
mov
and
adc
inc
test
jg
in
and
ret
pop
cmp
imul
mov
ror
sbb
jg
sar
imul
pop
inc
div
jo
rol
ss
sub
or
sbb
out
adc
movs
cmp
xor
inc
in
inc
dec
xor
cmp
inc
xlat
je
jae
mov
add
(bad)
push
add
jbe
xor
cld
mov
mov
test
shr
push
lahf
and
mov
(bad)
sub
stos
xchg
leave
xor
arpl
sbb
push
jmp
jg
mov
push
mov
(bad)
mov
sbb
add
lea
add
xor
add
jle
dec
fisttp
in
push
jns
jle
int
inc
and
pop
xor
in
mov
pop
jne
sub
and
cli
test
(bad)
(bad)
loop
inc
add
sub
(bad)
sbb
or
xchg
inc
fbstp
jl
fs
jge
push
retf
pop
cmp
shl
je
cdq
push
imul
ret
mov
mov
cmps
daa
aaa
jno
daa
in
or
lock
xor
je
sahf
jae
inc
es
clc
mov
xchg
aas
jnp
xchg
out
fisub
inc
mov
imul
aad
or
fprem1
iret
mov
fsubr
add
in
sti
push
pop
pop
int
cmp
das
pusha
pusha
inc
dec
pop
scas
xlat
fsubr
mov
xchg
scas
cmp
pop
lods
jmp
fnstsw
mov
in
sbb
popa
add
std
xchg
cmp
mov
int3
test
in
mov
imul
inc
(bad)
callw
outs
call
cdq
cli
imul
sbb
out
clc
or
fisttp
adc
mov
call
call
ret
in
pushf
push
adc
and
fldcw
popf
test
aad
xchg
sub
adc
(bad)
das
add
imul
pop
(bad)
int3
lea
inc
or
or
and
inc
mov
dec
ds
call
pusha
xchg
pop
xor
(bad)
jns
mov
pop
cmps
loopne
xchg
adc
stc
mov
cmp
leave
inc
xor
scas
retf
sbb
(bad)
in
lea
fmul
sbb
inc
ins
rol
xchg
cdq
mov
enter
dec
and
inc
sti
sub
add
jl
mov
ret
clc
in
inc
out
jge
int
aad
mov
mov
mov
dec
sub
mov
lahf
stc
mov
test
(bad)
repnz
push
inc
jl
leave
jg
cmp
pop
cld
imul
adc
loopne
or
xchg
mov
sub
push
cmp
js
sub
in
loopne
mov
fwait
inc
repz
fisub
ja
xchg
sahf
sub
mov
mov
gs
jp
jno
sbb
out
pop
jo
xchg
repnz
inc
dec
sti
jge
jecxz
jle
mov
js
cvtps2pi
xor
fcom
(bad)
adc
push
test
push
mov
sbb
fcmovne
and
popf
add
das
sbb
pop
psubusw
cdq
call
and
out
in
pop
dec
nop
sbb
mov
add
sub
inc
test
mov
call
dec
aam
int
pop
inc
fstp
xchg
arpl
dec
push
gs
adc
jo
jp
cmp
and
bound
dec
ins
sub
and
in
push
or
stos
push
sbb
pop
mov
mov
jmp
outs
idiv
xchg
sti
shr
or
xor
fidiv
call
push
inc
add
pop
in
sbb
shl
xor
sbb
and
jg
loope
test
je
fisttp
or
xor
push
mov
jge
add
add
js
add
(bad)
in
sahf
cmp
xor
and
test
cmp
push
xchg
jle
xor
push
fucomp
out
aas
(bad)
lods
aaa
sbb
mov
gs
clc
jne
inc
cmp
mov
fbld
push
push
inc
test
xchg
add
popf
mov
addr16
lock
fidivr
push
outs
mov
outs
pop
push
in
dec
and
shl
and
hlt
stc
pushf
scas
xchg
push
cdq
jmp
ss
jge
dec
nop
jecxz
cld
out
loopne
test
jg
push
loopne
adc
outs
loope
ret
mov
pop
repz
jg
adc
jnp
mov
inc
stos
cmp
push
and
je
add
cld
add
mov
in
push
adc
add
retf
fild
mov
pop
leave
cmps
scas
xchg
ss
push
sbb
shl
leave
es
xchg
cld
mov
cmp
arpl
mov
lods
repz
dec
cmp
nop
sub
add
mov
ret
aaa
xor
jns
sub
pusha
mov
shl
cmc
rcl
pop
dec
lahf
push
xchg
and
and
and
call
sbb
stc
loop
sysret
mov
add
sub
jae
aad
shl
pop
mov
(bad)
or
inc
in
or
ret
jns
inc
jl
pop
cmps
jae
pop
sti
pop
inc
loopne
push
dec
rcl
into
jns
popf
call
sbb
clc
fwait
xor
jnp
ins
cld
fdivr
xor
sahf
sub
and
pop
dec
pushf
jmp
rcr
lods
pop
mov
adc
mov
adc
clc
and
hlt
js
push
data16
(bad)
fidivr
retf
cmp
lea
in
dec
inc
push
mov
sbb
shl
jl
or
jmp
call
dec
jne
add
test
clc
lea
test
sbb
inc
ins
ins
inc
cmps
inc
inc
int3
pop
mov
cmp
inc
imul
sbb
and
mov
sahf
lar
pop
cmp
mov
cmp
fsub
fnstcw
add
xor
and
ret
push
and
leave
mov
add
enter
push
fs
lahf
inc
in
jge
fadd
loopne
rcr
jmp
push
pop
mov
push
gs
call
jl
sub
mov
push
inc
fs
aaa
mov
jb
loopne
out
enter
lock
aam
mov
adc
adc
add
das
mov
mov
xchg
jecxz
mov
std
cmps
pop
fcmovnbe
lock
mov
out
loop
dec
test
sub
sbb
jl
nop
push
sar
push
sbb
xchg
sbb
push
mov
jecxz
stos
adc
inc
cmp
pop
mov
xor
int3
or
push
mov
fistp
stos
jmp
xlat
shr
mov
(bad)
cmp
pop
xlat
sbb
push
pop
pop
and
pop
or
lock
push
inc
(bad)
sub
mov
pop
jge
ffree
sub
rcl
sub
in
adc
nop
xor
ret
ds
sub
sub
ficomp
push
jbe
(bad)
push
sbb
pop
js
jo
and
fisttp
stos
(bad)
dec
inc
mov
std
cmp
inc
jmp
jns
inc
adc
sysenter
pop
not
pop
and
inc
cli
sar
pop
xchg
pop
jg
sahf
mov
ins
cmps
les
jns
jg
sub
movs
stc
xor
mov
jne
shl
cs
clc
mov
sub
imul
les
es
xchg
test
mov
fwait
icebp
pop
cli
popf
jbe
cs
lea
sbb
cmp
sahf
mov
js
in
shl
or
push
repz
cmp
inc
add
push
jge
and
and
xor
lds
dec
push
push
(bad)
xchg
sub
cmc
inc
test
pop
push
fs
jmp
dec
push
pop
ins
(bad)
sahf
out
sahf
push
imul
lods
dec
lds
dec
jb
inc
mov
ins
sti
jle
jb
aas
(bad)
mov
jns
cmp
ins
pusha
inc
pop
iret
ficom
inc
cmps
arpl
cmp
(bad)
sti
stos
jle
or
mov
in
cmp
test
pop
sub
lock
(bad)
cwde
mov
xchg
cmp
jbe
cdq
mov
call
and
sub
jbe
adc
add
repz
stos
test
shl
xchg
les
loopne
int3
stos
pop
ret
sub
dec
mov
xlat
xlat
lock
sbb
fimul
and
mov
xlat
aas
or
add
leave
dec
out
int3
sbb
adc
imul
pop
test
add
push
repz
mov
dec
out
sbb
mov
mov
not
cmp
adc
jp
pushf
mov
call
adc
xchg
(bad)
or
out
cmp
imul
stos
iret
rol
rol
xchg
sbb
movs
pop
adc
sub
imul
aad
jle
int
sbb
mov
lock
enter
cld
inc
(bad)
sub
test
add
cmp
std
test
adc
ds
adc
inc
(bad)
mov
into
into
mov
mov
push
das
jmp
adc
mov
call
pop
mov
jg
pop
pop
iret
push
jo
rcr
or
out
and
retf
mov
mov
xchg
sar
(bad)
gs
out
aaa
mov
call
pop
lea
mov
pop
or
lahf
mov
jae
or
mov
pop
mov
lock
hlt
add
cmp
cmps
test
push
daa
in
mov
arpl
and
out
in
das
xlat
push
fstp
or
enter
ins
ror
ins
xor
sbb
sbb
aas
adc
in
and
fidiv
cmps
stc
pop
das
out
mov
push
push
cdq
or
jnp
shl
sub
dec
jp
out
aaa
mov
mov
dec
pop
shl
inc
gs
cmp
test
aam
jno
pop
inc
dec
fs
push
(bad)
adc
fcom
xchg
dec
fs
lds
rcl
loope
retf
dec
mov
add
fstp
sbb
fcom
in
adc
mov
and
push
xchg
push
add
arpl
pushf
mov
daa
(bad)
jg
and
push
cwde
arpl
aas
and
cmps
or
and
cwde
loopne
pop
aam
jg
imul
int
adc
adc
test
jne
lea
nop
in
push
daa
inc
leave
or
mov
pusha
lods
jp
sub
movs
popa
dec
push
xchg
cmp
stos
or
push
add
mov
into
or
call
(bad)
out
xchg
int
or
sub
xor
inc
mov
mov
std
adc
mov
or
stos
fist
out
shl
outs
in
inc
aam
das
dec
jge
add
push
mov
cmp
sub
mov
sbb
xor
bnd
push
out
cdq
or
and
add
jmp
add
sub
dec
in
jmp
imul
adc
call
cmp
(bad)
adc
adc
mov
fild
into
and
std
mov
or
dec
cmps
icebp
mov
pop
push
push
pop
cmp
push
lea
mov
xlat
push
mov
sub
cvtps2pd
mov
ss
xor
cmp
mov
and
or
pop
adc
jmp
imul
std
gs
push
shl
addr16
xchg
ror
cmp
inc
in
jns
cmp
xchg
mov
mov
xchg
hlt
mov
add
outs
mov
pusha
add
cmp
sbb
inc
fwait
out
dec
mov
xor
aaa
stos
jbe
pop
push
pop
mov
adc
enter
jae
cmps
sub
and
pop
imul
daa
add
adc
nop
cmps
shl
sub
mov
sar
fs
xchg
jns
fiadd
xchg
pop
dec
fcomip
pop
jnp
aas
and
xchg
es
loop
stos
xchg
mov
call
repnz
or
mov
cmp
adc
push
dec
sti
loopne
adc
pop
repz
xor
cli
fidivr
loop
jns
scas
xor
cmp
pop
in
xchg
cmp
repz
jp
push
xor
ret
mov
aad
popa
ret
shr
jne
push
pop
nop
xor
fstp
fsubr
in
mov
fs
mov
dec
(bad)
jno
test
push
setbe
(bad)
mov
retf
jo
mov
lahf
mov
loop
add
mov
mov
xor
aad
shr
cmps
xchg
cwde
mov
jecxz
pop
retf
stos
out
or
and
cmp
cmc
ja
hlt
jnp
jecxz
jae
adc
pop
jl
mov
cmp
mov
scas
add
and
test
mov
and
repnz
das
mov
and
fwait
inc
fstp
repz
sbb
popa
ds
sub
mov
and
sahf
xor
mov
aad
sbb
push
xchg
jmp
stc
int3
mov
lock
int3
inc
das
inc
outs
(bad)
fld
lods
mov
je
inc
inc
stc
test
cs
call
enter
inc
pop
(bad)
sbb
std
fld
push
in
pop
shr
or
inc
jbe
test
jno
lods
sti
mov
add
or
dec
mov
dec
inc
or
or
or
pop
mov
add
into
cmp
(bad)
jbe
or
leave
(bad)
mov
repnz
add
leave
nop
pop
stos
retf
xchg
push
mov
jg
rcr
ret
push
push
add
clc
mov
enter
dec
jmp
jle
lea
loop
cmp
cs
int
mov
xor
mov
popf
cmp
sbb
mov
jne
pop
mov
stc
js
cmp
mov
pop
scas
pop
pop
out
xchg
fcmove
(bad)
push
inc
popa
mov
mov
inc
pop
lds
imul
cmps
or
test
imul
jo
mov
mov
and
mov
jp
jmp
out
adc
test
mov
cmp
into
cld
iret
out
xor
jns
cli
test
pusha
xchg
icebp
enter
ret
dec
and
test
(bad)
outs
bound
xchg
sub
sub
mov
das
fistp
jns
fsub
pop
xor
outs
lods
adc
dec
push
sbb
sub
push
sti
test
mov
sub
push
or
cmp
sub
push
sbb
nop
aaa
stos
scas
outs
mov
(bad)
or
cmps
(bad)
psrlq
sar
rdtsc
daa
push
jl
xchg
aas
mov
imul
stc
in
(bad)
mov
inc
cmps
lods
and
push
mov
sub
fcomp
lock
sbb
imul
lahf
adc
add
pmaddwd
push
xor
jnp
lods
pushf
mov
ret
mov
jl
js
mov
jne
scas
push
and
inc
adc
cmp
in
outs
add
pushf
cmp
or
scas
cs
mov
cwde
imul
and
loope
adc
ja
cwde
fst
outs
scas
sbb
call
scas
scas
or
adc
pop
fcomip
bound
es
pusha
push
jo
dec
fadd
repnz
xchg
pop
mov
push
xor
add
push
adc
adc
std
int
mov
or
mov
xchg
das
jle
in
(bad)
sub
fwait
sbb
fnstcw
fcmovnbe
mov
add
hlt
cmp
or
pop
mov
mov
mov
xor
lods
xor
push
pop
pop
fimul
or
iret
dec
push
cld
mov
setae
dec
fwait
or
sbb
adc
daa
jbe
ss
ret
mov
popf
xlat
and
cwde
retf
mov
in
sub
mov
mov
adc
sbb
inc
mov
imul
addr16
mov
pusha
shl
jecxz
adc
sub
ror
mov
lds
mov
fcmovnb
xor
lds
mov
cmp
and
jmp
sub
pop
mov
sub
hlt
clc
mov
jnp
fstp
mov
push
in
shl
stos
lahf
ret
jmp
stc
jg
ja
lods
scas
and
jae
push
adc
(bad)
pop
push
mov
or
(bad)
fs
pop
sbb
popa
sti
fsubr
(bad)
clc
daa
arpl
mov
pop
mov
rcr
lds
pop
push
or
ins
pushf
or
or
push
pop
xchg
pop
sub
and
sbb
cmp
cmps
dec
(bad)
hlt
pop
inc
lahf
or
pop
pusha
sbb
sub
fdivr
ins
iret
inc
and
cmp
rcl
jne
imul
add
sub
dec
sub
and
or
jl
stos
mov
scas
sub
inc
stc
inc
nop
gs
mov
mov
shl
adc
leave
jmp
fsub
stos
mov
cld
into
pusha
iret
and
(bad)
sbb
stos
(bad)
add
sub
outs
cmps
comiss
int
out
jb
ds
fcmovne
mov
dec
pop
jecxz
mov
or
cmp
mov
test
and
push
lods
xor
mov
mov
je
loope
push
adc
test
or
popa
jg
leave
fcomp
cmp
fadd
mov
movs
inc
(bad)
mov
add
lahf
in
bound
icebp
test
not
std
and
mov
imul
cmp
js
jne
out
jecxz
retf
and
daa
call
aas
stos
mov
retf
call
xor
(bad)
or
cmp
shl
fdiv
inc
idiv
cmp
mov
ds
and
add
jno
sub
dec
mov
xlat
adc
and
sub
fdivr
sub
sbb
clc
sbb
in
jo
out
push
test
adc
add
in
jmp
mov
es
push
mov
nop
add
stos
pushf
shl
(bad)
cmp
bound
mov
call
push
sub
jbe
mov
aaa
push
mov
dec
mov
into
inc
sub
ins
fadd
cmp
mov
push
data16
sar
and
xchg
(bad)
sub
or
aam
sbb
hlt
cli
stos
mov
mov
out
cld
adc
xchg
fld
jns
inc
out
mov
sub
dec
push
mov
cmc
lods
inc
push
xor
and
pop
aas
pop
jp
dec
cwde
adc
movs
aam
mov
test
rcr
popf
mul
cmps
fs
xchg
rol
jecxz
jbe
sub
out
sub
xor
xlat
push
dec
inc
adc
pop
cmp
dec
xchg
dec
lahf
push
mov
inc
pop
leave
pop
jle
mov
dec
add
aad
jnp
or
(bad)
retf
hlt
jmp
add
(bad)
out
cmp
mov
test
inc
mov
sub
push
das
out
mov
cmp
arpl
sbb
add
dec
jmp
in
int
and
cli
cmps
lods
sahf
mov
and
stc
cmps
jp
sub
mov
mov
dec
ins
pop
outs
add
mov
push
(bad)
push
in
addr16
dec
sti
fild
out
out
cmovb
popf
test
test
xchg
pop
sar
cwde
nop
cs
jmp
inc
push
lahf
cmc
aas
cmps
inc
adc
mov
sub
in
adc
push
mov
cmp
int
pop
pusha
add
in
outs
jbe
test
xor
mov
and
retf
cmp
mov
fs
xchg
loope
and
movs
jno
push
ins
in
cld
retf
not
adc
sbb
xchg
fdivr
push
pop
add
jne
and
lds
xlat
retf
xor
mov
add
pop
jl
aas
jmp
js
xchg
jl
popa
int
lods
mov
fstp
push
cmps
les
mov
cmp
push
jne
shl
icebp
aad
repz
rol
jecxz
in
pop
fwait
or
cld
jmp
inc
sbb
mov
add
fisub
push
mov
lods
push
push
ja
jns
mov
stos
xor
or
cmp
mov
stos
mov
imul
scas
adc
lods
fild
jecxz
inc
or
test
inc
leave
cmps
inc
mov
dec
les
and
cmp
jb
daa
jne
mov
imul
mov
cmc
cli
mov
mov
inc
test
(bad)
sti
jbe
inc
je
das
adc
jne
sub
cmps
call
(bad)
mov
inc
fild
sub
ins
inc
aam
fwait
push
and
clc
xor
push
fcmovu
aas
in
sbb
sbb
add
fild
out
mov
sub
cmps
push
repz
jg
(bad)
shl
ins
pop
push
cld
ror
mov
cmp
loopne
jbe
sub
jne
xor
std
rol
dec
xchg
adc
push
sti
dec
pop
ret
in
aas
mov
pusha
sbb
adc
call
cmp
or
pmulhuw
sub
(bad)
das
ins
sub
mov
push
sbb
mov
movs
enter
cwde
jmp
mov
mov
(bad)
add
mov
xor
push
ds
xchg
popf
sar
cmp
sbb
add
pop
sbb
push
jecxz
not
loopne
inc
int3
dec
inc
push
repz
repz
into
loop
cmps
adc
movs
dec
enter
popf
out
sub
aas
data16
loope
push
jmp
cli
push
movs
mov
scas
cwde
cmc
aad
je
or
fs
mov
pop
mov
movs
push
out
lock
cwde
das
jge
jb
pop
xchg
inc
and
sub
mov
mov
aas
inc
in
push
or
bound
fxch
mov
cmp
sub
es
pop
je
(bad)
xchg
fisubr
xchg
push
cmc
sahf
or
adc
mov
cmp
pop
push
sbb
fxch
popa
inc
(bad)
sbb
das
jmp
loop
enter
dec
mov
sub
xchg
jb
inc
mov
(bad)
lock
xchg
push
mov
shl
xlat
jb
fld
inc
mov
pop
cmp
dec
shl
dec
jnp
sbb
xor
retf
test
loop
mov
retf
imul
retf
mov
mov
push
fcom
dec
loopne
retf
mov
sub
jno
mov
and
pop
push
sub
adc
jmp
xchg
dec
in
jns
lea
or
cmp
pop
push
and
sbb
push
inc
add
sub
fucomip
cmp
mov
add
and
data16
pop
sub
sub
lahf
in
in
inc
mov
mov
dec
sbb
push
aas
mov
mov
mov
in
adc
dec
std
fadd
jmp
outs
sub
xchg
fistp
aad
mov
inc
fcmovu
mov
bound
jnp
(bad)
inc
cld
sahf
sbb
mov
and
and
sub
and
jae
mov
mov
std
jne
mov
sbb
pushf
mov
fdiv
cmps
mov
sub
inc
jo
lahf
pop
out
rol
mov
sbb
dec
adc
nop
call
and
dec
aaa
push
in
aaa
add
out
(bad)
in
mov
setb
lahf
jne
jbe
mov
pop
in
push
pushfw
loop
jno
jo
push
cmp
int3
mov
fxch
dec
or
fdivr
adc
mov
ror
int3
dec
call
ror
rol
lock
(bad)
mov
and
jae
or
in
push
in
out
cwde
inc
xor
push
popf
mov
mov
mov
bnd
popf
cmc
pop
jne
inc
lods
jl
push
mov
lea
sbb
mov
push
cmp
cld
movs
dec
jg
stos
jmp
and
and
shl
bnd
xor
(bad)
xlat
mov
sub
rol
mov
xchg
retf
outs
lds
or
mov
and
push
ret
and
or
ds
ficom
into
jp
loop
xor
mov
movs
ja
sbb
adc
jae
jg
pop
jp
data16
mov
ins
int3
push
icebp
jmp
adc
hlt
out
ret
sub
imul
jp
movs
jo
push
sub
in
aaa
mov
stc
iret
adc
pusha
stos
and
mov
mov
inc
outs
test
push
into
sub
rcl
call
fisubr
hlt
xor
js
push
leave
les
call
test
pushf
cmp
fist
fnstenv
sahf
imul
add
and
mov
add
aas
loop
pop
mov
inc
(bad)
lock
jl
jno
cmps
dec
mov
mov
add
inc
push
scas
jle
mov
xor
movs
jp
push
add
bound
gs
popf
inc
fdivr
and
imul
int3
ins
ret
mov
std
jmp
xor
fmul
rcl
or
aas
retf
xor
dec
push
cmc
mov
out
test
sbb
xlat
stos
push
iret
mov
and
pusha
mov
adc
js
cli
mov
mov
fisubr
mov
out
inc
jo
adc
add
mov
cmps
mov
mov
mov
push
pop
jge
dec
mov
dec
mov
ins
jo
mov
(bad)
mov
in
leave
ds
and
(bad)
dec
mov
jno
lds
pop
xor
mov
icebp
push
cli
pop
mov
mov
sbb
mov
or
jmp
jg
outs
lock
retf
jnp
push
inc
sbb
pop
and
sbb
xor
jecxz
and
sub
mov
dec
fild
in
popa
pusha
mov
stc
fs
cdq
mov
cmps
xchg
dec
mov
cmps
int3
pop
loope
cmp
lahf
imul
jmp
rol
cli
xor
fisubr
adc
push
jns
(bad)
push
test
mov
jg
retf
push
sbb
sbb
cmc
xchg
mov
dec
pop
adc
popf
rcr
sub
mov
push
mov
inc
push
cmp
push
cmp
cmp
mov
arpl
mov
ror
test
xchg
xor
icebp
cmps
xchg
pushf
icebp
lock
sub
int3
adc
and
rcl
jnp
cmps
cwde
rcl
rcr
mov
in
xlat
jbe
stos
cld
ss
jmp
iret
fisubr
mov
xor
adc
sub
clc
xor
push
jmp
jge
sbb
sub
add
xchg
mov
push
cmp
cli
mov
mov
add
sbb
shr
add
gs
adc
push
mov
mov
xchg
and
jle
jp
loop
out
cmps
call
scas
retf
and
icebp
add
jmp
and
mov
shl
jne
inc
jge
repnz
xor
daa
pop
bound
stos
aad
push
mov
xor
pop
pop
add
jne
in
jle
mov
ret
mov
and
jno
call
pushf
movs
or
xchg
fistp
xor
loop
int
movs
inc
sbb
inc
cmp
cmp
inc
leave
cdq
iret
iret
out
pop
loope
push
movs
pusha
(bad)
and
pop
fs
xor
or
push
pop
movs
hlt
cmc
les
jo
jbe
data16
jae
push
icebp
shl
push
mov
jle
fsub
shr
xchg
jg
sub
inc
or
sub
fsubr
inc
sbb
xchg
add
jecxz
mov
jp
jmp
(bad)
mov
xor
dec
int3
lock
test
je
adc
in
mov
jae
xchg
xor
lods
mov
das
inc
jno
fistp
test
cmp
mov
push
popf
or
jae
cs
enter
push
xchg
mov
cwde
mov
cdq
jmp
sub
sbb
lds
add
cmovno
call
mov
lahf
and
ja
rol
dec
jns
xor
and
xchg
push
stos
je
cdq
add
aas
ret
loopne
dec
popf
js
test
(bad)
adc
jmp
(bad)
inc
lea
std
loopne
sub
xchg
out
lea
shl
pusha
push
imul
add
ins
sti
mov
jae
mov
mov
and
mov
outs
cmp
jle
sub
pop
add
int
(bad)
adc
pop
inc
sub
cdq
aad
outs
imul
cmp
cmc
xchg
scas
sub
pop
ror
in
sbb
vxorps
iret
sub
lods
cs
bnd
mov
mov
ror
sbb
es
pusha
popf
jg
xchg
jecxz
mov
xor
inc
push
test
rcr
in
push
test
push
shl
or
mov
icebp
add
push
aam
mov
frstor
bound
call
ss
mov
add
xchg
jecxz
xchg
mov
pop
or
stos
stos
xchg
push
jp
es
shl
adc
xor
dec
mov
popa
sub
jae
out
movs
mov
retf
cmp
daa
out
jle
jno
sbb
xchg
arpl
scas
iret
add
inc
push
push
push
jno
cdq
cmp
cmp
hlt
retf
std
or
jne
add
xchg
lds
push
fucomip
add
in
loop
call
in
cmps
jno
xor
adc
les
scas
mov
push
xor
mov
inc
mov
jae
loope
xor
inc
pop
and
out
mov
pop
aaa
jno
and
adc
jmp
(bad)
div
xchg
pop
inc
fist
push
outs
icebp
cmps
xor
scas
pop
bound
add
call
xchg
in
lock
mov
nop
jl
adc
dec
bnd
push
inc
into
cdq
out
ja
repz
test
rcr
pop
loopne
mov
movs
push
inc
adc
out
out
jl
popf
fcom
mov
cmps
cmp
sub
cmc
lea
ror
push
or
aad
jb
popf
fnstcw
lock
cmps
or
and
pusha
call
test
sub
dec
cli
dec
mov
xchg
stos
aam
movs
xchg
popf
hlt
mov
repz
mov
ins
jmp
mov
dec
mov
cmp
pop
stos
xchg
lea
int
movs
test
inc
daa
aas
in
pop
dec
(bad)
mov
mov
bound
push
xlat
mov
scas
inc
mov
sbb
push
arpl
xchg
pop
jae
add
sbb
std
(bad)
out
lds
int3
jecxz
scas
dec
inc
jmp
and
mov
in
jno
fwait
stos
in
dec
(bad)
clc
dec
mov
lahf
das
iret
(bad)
pop
outs
jg
xor
adc
cmp
xor
ja
ds
ret
popw
mov
jne
das
nop
and
jmp
aas
sbb
clc
(bad)
lods
lods
jmp
outs
mov
cmp
add
out
repnz
clc
xor
leave
(bad)
ja
std
xor
or
sbb
(bad)
hlt
fadd
and
dec
cmp
push
addr16
pop
(bad)
jg
stos
in
ficom
out
popa
jp
cli
addr16
jp
(bad)
mov
fstp
inc
jl
xlat
and
xchg
xchg
(bad)
pop
inc
(bad)
push
hlt
lea
mov
cmp
cmc
or
addr16
lahf
mov
xor
mov
inc
je
jb
test
(bad)
sub
xchg
ins
pop
mov
outs
in
test
in
test
mov
fwait
dec
cmp
push
pop
add
loop
xor
lahf
and
inc
leave
test
jnp
inc
mov
mov
daa
cld
xchg
jecxz
push
mov
and
jge
push
dec
call
mov
(bad)
inc
mov
add
jg
test
push
loope
pop
call
add
mov
add
jecxz
jg
imul
aad
push
sub
xor
and
ds
push
enter
and
xor
push
jecxz
retf
cmps
inc
and
add
call
aam
adc
pop
(bad)
push
mov
or
test
(bad)
pop
xchg
cli
int
outs
(bad)
imul
daa
jecxz
ins
pop
je
addr16
js
bound
out
imul
inc
push
jle
xchg
cmps
aam
sub
pop
sub
int
mov
hlt
fneni(8087
mov
shl
fimul
call
fsubr
repnz
arpl
cmp
add
or
or
mov
fcom
inc
out
jmp
jg
sub
ds
(bad)
in
xchg
ficom
mov
jno
push
or
adc
xor
adc
mov
fwait
es
push
mov
cld
hlt
out
dec
dec
pop
int
shl
rcl
call
pop
aad
xlat
jo
nop
sti
cs
xor
hlt
xchg
imul
mov
test
jno
(bad)
or
ja
or
stos
es
mov
lods
test
xchg
jns
ret
outs
dec
push
aas
cmp
and
dec
pop
movs
test
jmp
sti
mov
shl
jecxz
mov
mov
xor
cmp
in
imul
pusha
rol
test
fnsave
ss
jl
pusha
sub
ret
or
xor
sbb
test
jno
lods
and
and
out
inc
jns
in
dec
fs
rcr
mov
out
mov
(bad)
cmps
pop
fld
js
cmp
(bad)
sti
mov
ins
rcl
or
lahf
lods
add
xchg
fwait
add
mov
dec
pusha
icebp
inc
das
lahf
pop
in
in
and
int
jecxz
lea
xchg
int
jo
out
int3
pop
add
addr16
fst
inc
dec
ret
aam
into
and
ficomp
shl
push
test
nop
sbb
clc
xchg
xor
mov
add
popa
daa
leave
aam
adc
(bad)
mov
(bad)
fldenv
adc
pushf
scas
cwde
adc
jns
mov
lock
fnstcw
mov
mov
scas
sub
pop
cmp
dec
cli
jo
add
push
inc
pop
cmp
rcl
rol
dec
or
push
test
inc
gs
jle
ficomp
cmps
xchg
lea
or
ins
fmul
leave
mov
fs
add
push
adc
jmp
jmp
dec
cmp
xor
cmp
mov
cmps
fdivp
mov
into
mov
add
dec
repz
scas
push
or
jle
cmp
jl
nop
xor
adc
(bad)
enter
(bad)
or
xchg
inc
shl
sub
jmp
jb
jnp
data16
sbb
cmc
int
add
in
fsubr
cwde
rcr
rol
or
rcr
outs
lock
jo
adc
jne
mov
or
inc
fld
pop
mov
xchg
pop
add
xor
popf
add
iret
and
dec
cmc
mov
mov
and
push
inc
fcmovne
sub
jle
jmp
mov
cmp
sub
fidiv
jno
and
scas
jnp
fs
std
scas
and
lods
push
sar
sbb
or
mov
stos
mov
test
sti
daa
jns
ja
lahf
das
into
pop
dec
aam
xor
js
dec
sbb
outs
xchg
out
fisubr
iret
add
jmp
and
mov
addr16
cdq
fisttp
and
jnp
loop
cmp
push
cmps
in
push
rcl
dec
aad
mov
or
int3
fdivrp
sub
clc
xor
inc
jp
fnstsw
and
dec
and
pop
adc
mov
sub
ficom
xchg
call
lods
mov
imul
mov
cli
dec
in
xchg
lds
jmp
frstor
xchg
sahf
mov
imul
pushf
cvtdq2ps
xor
push
push
xor
loopne
shl
out
leave
scas
inc
scas
loopne
mov
add
ss
sub
imul
and
lahf
adc
add
rcl
inc
fst
test
cmp
pop
movs
mov
cdq
loopne
adc
cmp
mov
sbb
into
stos
fdivp
xlat
sub
xchg
ins
(bad)
rcr
out
push
cmp
or
ret
dec
mov
out
adc
pop
cmp
inc
xchg
jle
std
leave
inc
xchg
push
outs
repz
add
cmp
mov
data16
mov
(bad)
xchg
xchg
or
pop
ja
jno
cli
jbe
push
repz
inc
lods
lods
sahf
retf
cmp
and
mov
ss
pop
jbe
xchg
enter
mov
pop
mov
cmc
test
outs
call
(bad)
jnp
add
leave
test
jmp
int
imul
scas
mov
dec
adc
xchg
mov
inc
or
xchg
fadd
jbe
dec
sub
mov
(bad)
lahf
les
xchg
or
jnp
gs
jnp
stc
inc
imul
jmp
clc
imul
sbb
leave
leave
movs
es
sub
dec
jmp
movs
loopne
mov
call
test
test
gs
mov
mov
jae
pop
shl
mov
lds
sar
dec
(bad)
ja
rcr
outs
jno
(bad)
clc
inc
or
inc
sbb
jo
out
bound
sbb
out
inc
cli
cmp
out
loope
imul
dec
push
inc
push
fld
ss
retf
jecxz
fild
pop
inc
push
adc
clc
stos
jg
test
rol
add
mov
inc
inc
add
sub
int
pop
dec
push
(bad)
aad
ins
loop
jne
jle
popa
(bad)
in
and
mov
es
adc
push
ret
(bad)
arpl
das
xor
dec
rol
add
mov
pop
push
mov
xchg
cmc
fadd
aas
mov
mov
mov
inc
hlt
daa
pushf
aas
cmp
add
ja
scas
and
mov
ror
inc
xchg
sti
and
or
mov
mov
imul
loope
push
cmps
push
jl
xchg
mov
and
pop
adc
fadd
aad
or
xlat
fmul
ins
mov
jns
mov
adc
ret
mov
cmp
push
sub
and
jae
in
int3
push
or
int
gs
push
dec
call
ins
imul
(bad)
push
xor
and
jae
xor
add
fidivr
fistp
icebp
(bad)
cmp
test
into
ror
scas
fs
mov
into
ret
neg
or
out
jge
jmp
cmp
cmp
inc
mov
lods
and
enter
mov
stc
call
loope
sbb
push
jl
mul
repz
jne
push
mov
pop
scas
inc
inc
repnz
mov
xor
fsubr
xchg
jnp
into
jns
jo
(bad)
xlat
ja
inc
mov
lods
inc
cdq
inc
pop
inc
sar
xor
sub
aas
ds
shl
push
repz
and
ss
(bad)
adc
imul
test
dec
shl
ficomp
mov
iret
jmp
add
stos
sub
mov
push
imul
hlt
rcr
adc
jge
das
push
add
or
pop
int
pop
icebp
ds
pmuludq
mov
mov
out
retf
dec
lahf
adc
pop
ja
(bad)
add
mov
mov
cdq
inc
sbb
add
jmp
inc
cdq
fcom
fwait
ds
(bad)
cmps
sbb
ror
fmul
adc
add
cs
push
pop
repz
jae
shr
fiadd
rcr
add
loopne
sbb
inc
adc
inc
scas
cmp
add
retf
push
stos
inc
xchg
cld
loope
jno
enter
jo
or
or
adc
dec
icebp
mov
aaa
dec
pop
and
mov
xchg
jge
(bad)
in
loopne
cmc
xchg
(bad)
cmp
push
pop
push
cmp
or
jle
cmps
loop
(bad)
in
or
mov
inc
pop
fmul
adc
jecxz
and
adc
xchg
jnp
dec
xchg
stc
test
test
fwait
or
mov
mov
jmp
leave
cld
(bad)
adc
aas
cs
jae
mov
loopne
in
imul
sub
or
fld
or
arpl
popa
jno
ror
lahf
adc
ucomiss
cmp
or
xchg
mov
cmp
sub
and
mov
repz
cmp
out
iret
xor
test
pop
sar
and
(bad)
ds
pop
mov
mul
mov
mov
push
cmps
(bad)
(bad)
jns
dec
cli
dec
push
mov
mov
call
mov
and
ficomp
xchg
mov
cld
dec
imul
sub
daa
inc
rol
mov
push
inc
pop
xor
das
xor
prefetch
lea
fdiv
push
(bad)
retf
or
mov
les
xor
mov
ins
sbb
mov
in
data16
fisub
sti
test
mov
fist
retf
jae
lods
(bad)
jae
mov
and
popf
(bad)
js
stos
sbb
fild
ss
xchg
js
jo
in
ret
lods
stos
sub
xchg
cmps
adc
frstor
in
repnz
push
pop
and
xor
push
push
fistp
xchg
jl
dec
test
add
aam
jbe
les
xor
(bad)
mov
icebp
cmc
test
jns
mov
scas
out
push
pop
dec
jp
mov
pushf
js
call
sub
mov
mov
std
dec
cdq
adc
add
jne
cmp
xchg
pop
sub
leave
sahf
mov
pop
clc
dec
push
mov
lods
sub
inc
ficom
pusha
(bad)
and
mov
ret
push
fild
out
xlat
adc
stos
ss
adc
sub
(bad)
sbb
ins
sub
adc
(bad)
daa
xchg
(bad)
cli
cli
frstor
jmp
aas
mov
xor
cmps
test
xor
(bad)
push
aaa
shl
dec
ficom
pop
fisubr
adc
in
and
cmp
fisubr
mov
xchg
push
popa
and
(bad)
xor
add
and
adc
adc
(bad)
lsl
ds
mov
pop
out
sbb
xor
inc
jge
push
test
daa
cmp
and
cmp
inc
(bad)
mov
push
scas
js
jg
aam
push
push
or
call
addr16
(bad)
outs
xor
(bad)
sub
call
lods
lods
cli
fimul
js
jae
fisubr
addr16
mov
inc
rcl
jnp
inc
add
sbb
add
in
push
xor
ds
adc
adc
test
test
retf
in
pop
fbld
lds
out
bound
xchg
sti
test
test
sub
cli
call
sub
mov
dec
jmp
cs
movs
outs
aad
sub
fld
dec
ror
xchg
fmul
push
dec
repz
pop
dec
test
pushf
test
leave
xor
inc
and
inc
xchg
icebp
leave
cmp
push
push
aaa
cld
arpl
scas
out
xchg
sbb
popa
push
inc
sub
movs
sbb
and
in
push
xor
sahf
adc
jle
loope
mov
frstor
outs
pop
mov
cmp
daa
out
sub
jmp
jmp
retf
push
test
mov
in
aas
inc
(bad)
popa
cmc
daa
pop
cmps
sub
lock
push
ret
sti
or
dec
rcl
mov
mov
sbb
(bad)
lea
adc
les
mov
xchg
scas
fxch
mov
cli
and
pop
sub
shl
adc
iret
push
sahf
sub
jno
repnz
xchg
mov
or
test
fnstcw
jmp
dec
add
imul
pusha
pop
sub
adc
mov
pop
cs
in
shr
and
fisub
or
pop
cmp
dec
xchg
out
or
fadd
dec
cmp
push
cmp
repz
into
sub
push
sahf
sar
inc
sub
push
pop
add
jbe
mov
lods
inc
push
adc
(bad)
pusha
inc
aaa
push
mov
in
(bad)
lods
xor
cld
add
dec
mov
fidiv
(bad)
inc
mov
mov
les
enter
jns
adc
bound
arpl
mov
repz
daa
add
pop
or
mov
repz
lea
in
div
cld
call
cmp
mov
cli
shl
push
dec
xchg
mov
packssdw
repz
adc
jg
loop
mov
or
sub
inc
adc
pop
xchg
scas
repnz
pop
xlat
pop
sub
retf
adc
outs
ds
adc
push
mov
xchg
and
fld
cli
enter
shr
mov
mov
cli
pushf
(bad)
mov
cmp
lock
retf
adc
repnz
repnz
mov
jg
stos
rol
rcl
xlat
movs
addr16
lock
push
popa
sub
push
push
call
pop
and
mov
and
cmp
jno
mov
push
pop
push
inc
jmp
add
jp
ins
mov
cdq
cmp
aad
aaa
dec
js
pop
fsub
rcl
push
or
out
sbb
(bad)
outs
pop
xchg
jl
bound
outs
popa
push
dec
pusha
push
pusha
gs
or
mov
push
icebp
adc
pop
push
mov
and
jp
xchg
xor
pop
mov
dec
mov
xor
loopne
arpl
je
icebp
mov
mov
pop
fcmovu
enter
add
mov
pop
jns
repz
sbb
or
rcr
push
cmp
inc
movs
lea
retf
or
and
(bad)
aad
jbe
mov
sti
movs
adc
cwde
(bad)
scas
or
and
int3
cmpps
push
fstp
fs
outs
jl
test
(bad)
jmp
cli
cli
stos
jmp
and
repnz
and
cmp
push
jp
ret
fild
stc
cs
popa
rol
ds
dec
or
rol
jae
jp
scas
sbb
fwait
jge
mov
pop
leave
mov
inc
addr16
addr16
ret
push
jecxz
pop
sub
aaa
add
add
in
sub
cmc
test
es
add
add
cwde
add
pusha
sub
dec
mov
inc
mov
es
(bad)
cs
push
stc
sub
xor
mov
mov
aaa
xor
ins
mov
jecxz
std
test
add
lds
push
ss
loopne
mov
aas
pop
jno
outs
sbb
pop
in
push
jns
(bad)
jmp
cmp
xchg
retf
in
cmc
fadd
jle
xchg
jg
cmps
jp
xchg
mov
in
mov
loopne
mov
push
xor
lock
mov
push
jmp
jns
leave
or
push
outs
aad
arpl
scas
shr
xor
mov
in
push
je
or
lods
push
and
jmp
test
mov
add
cmp
cmps
or
repz
into
frstor
jmp
dec
retf
xchg
sbb
icebp
pop
js
imul
cmp
push
or
es
pusha
popf
mov
cmps
sub
inc
ret
imul
jbe
dec
ja
scas
xchg
xchg
lods
jnp
push
jle
adc
data16
or
mov
add
aas
xor
iret
xchg
jno
gs
enter
jno
adc
xchg
je
mov
dec
das
cld
mov
xor
shl
enter
xor
xor
and
jns
ss
fidivr
dec
int
xchg
int
or
fwait
sub
add
(bad)
popf
sahf
loopne
cmp
sub
outs
inc
ins
fwait
mov
je
add
mov
sti
xchg
call
cli
stos
sbb
in
or
jp
lea
xor
mov
push
and
imul
rcr
enter
scas
stos
pusha
fs
retf
add
inc
leave
adc
xor
pusha
or
jbe
shr
sbb
cmp
sub
inc
stc
into
jl
xchg
mov
lods
das
mov
push
jge
xchg
pusha
out
mov
jp
push
inc
sbb
mov
retf
cmps
nop
or
bound
lods
outs
inc
cmps
int
mov
push
lods
pusha
add
lock
pop
ins
sbb
rol
into
addr16
mov
mov
sub
sar
mov
adc
scas
mov
mov
xlat
xchg
cmp
out
mov
test
fadd
hlt
popf
mov
push
push
jp
iret
sub
dec
jmp
pop
xor
test
pushf
lock
push
sbb
mov
in
add
retf
pop
and
mov
dec
lods
push
push
cmps
xor
fnstsw
cmp
sub
mov
rcr
ret
add
maxps
movs
stos
adc
add
mov
dec
retf
xor
cmp
lahf
mov
push
aad
and
xchg
xor
pop
lock
lods
adc
(bad)
mov
lds
or
in
lahf
xlat
aam
add
fbld
sahf
bound
sar
and
test
cs
mov
hlt
in
xchg
imul
mov
push
gs
mov
ret
jmp
push
pop
inc
push
adc
ds
inc
ret
std
cmp
test
sar
cmp
push
xor
cmp
xor
mov
xchg
mov
add
sub
mov
inc
adc
mov
pop
xchg
mov
sti
pop
mov
inc
data16
outs
xchg
and
push
and
int
dec
inc
jmp
test
ins
xor
icebp
nop
aam
das
arpl
ret
dec
ins
scas
and
and
std
fst
mov
out
mov
cmp
(bad)
dec
add
std
sub
aam
lea
das
sti
nop
adc
sahf
out
ds
and
inc
out
leave
push
or
or
aam
mov
xor
inc
adc
pop
inc
jmp
(bad)
mov
mov
mov
retf
mov
test
add
icebp
pushf
pop
test
sub
les
sub
fs
sti
xor
scas
add
push
cdq
outs
mov
repz
cmp
mov
dec
xor
fisub
jge
mov
outs
nop
mov
cmp
pushf
inc
fxch
pop
mov
xchg
push
xor
pop
js
cmp
cli
inc
jbe
jns
mov
std
popf
movs
and
subps
xchg
or
push
pop
inc
cs
rcr
outs
jge
fld
jb
sub
sub
mov
mov
faddp
xchg
(bad)
and
fild
sbb
inc
adc
xor
add
mov
mov
jle
cld
dec
sahf
inc
scas
scas
jo
sub
jg
mov
ss
sub
dec
sbb
jae
iret
pop
icebp
adc
(bad)
call
fistp
sub
or
bound
adc
fcomp
inc
cmps
pop
dec
or
push
jmp
sub
or
aad
cmp
in
fs
xchg
shr
dec
popf
pop
sahf
or
popa
jp
jecxz
mov
add
sub
push
movs
sti
mov
(bad)
xchg
test
in
fsub
pop
dec
dec
add
ret
inc
adc
mov
bound
test
sbb
cmps
enter
stc
xchg
jbe
stos
mov
xor
js
dec
dec
sub
aam
mov
sti
(bad)
lahf
ret
movs
js
push
or
mov
dec
fsubp
mov
push
js
adc
mov
jle
pop
test
lock
cld
dec
loopne
push
dec
fsub
jns
retf
push
mov
pop
data16
inc
test
cmp
cmp
(bad)
fisub
xor
push
pop
mov
out
adc
daa
sub
mov
ret
add
int
xor
loope
retf
arpl
hlt
jg
jns
add
mov
pop
push
clc
js
push
sub
retf
rol
jle
ret
push
mov
popa
and
(bad)
ficom
inc
inc
lods
nop
mov
jnp
xchg
add
ror
in
into
mov
mov
or
add
cld
fs
repz
pop
sbb
xchg
mov
add
xor
mov
xchg
rcl
sbb
xchg
mov
and
xchg
adc
retf
jmp
add
sahf
mov
imul
imul
cmps
jmp
xchg
enter
pop
jecxz
ret
outs
jbe
add
cmps
mov
std
push
out
add
cmp
adc
push
push
and
xchg
xor
dec
aad
inc
mov
inc
jb
dec
mov
retf
mov
jl
popa
jmp
lods
adc
sub
es
xor
addr16
ds
arpl
test
add
sar
adc
dec
retf
pop
ret
test
push
and
sub
mov
es
xor
cmp
in
loope
test
push
sub
test
mov
mov
(bad)
fidivr
lock
lods
mov
jbe
or
data16
fbld
mov
(bad)
fisubr
or
pushf
ins
call
xor
pop
adc
adc
mov
cdq
dec
push
pop
mov
cmp
ins
gs
(bad)
cli
lods
dec
mov
daa
punpcklwd
call
subps
dec
lods
sub
gs
(bad)
adc
sbb
in
fild
xor
jb
repnz
not
cmp
stos
loopne
push
or
(bad)
push
(bad)
arpl
or
shr
xchg
adc
jl
stos
fnstsw
inc
add
lods
dec
je
mov
pusha
scas
(bad)
call
into
xor
dec
and
xchg
test
xlat
popf
fimul
scas
inc
mov
xor
add
fldcw
movlps
rcl
repnz
jns
sub
into
sti
jp
add
jne
cmp
push
rol
out
jp
xorps
inc
fsub
and
jmp
int
scas
rcr
retfw
pusha
adc
sub
ds
lock
mov
call
mov
(bad)
dec
mov
add
adc
jp
ins
inc
cmp
push
out
repnz
bndldx
call
or
mov
mov
mov
pop
sti
jbe
xchg
(bad)
imul
ret
sub
sub
add
and
loop
xor
jnp
iret
test
xchg
cmp
sbb
movs
cld
lock
mov
jge
mov
in
adc
hlt
out
ret
iret
dec
sbb
test
int
stc
in
dec
or
xor
test
fsub
mov
movs
clc
xor
jmp
xchg
out
sbb
paddq
dec
cmp
mov
stc
cli
imul
lds
(bad)
stos
inc
mov
jmp
aad
imul
inc
fldenv
adc
out
xchg
xchg
in
(bad)
pop
hlt
mov
clc
test
jne
mov
push
sbb
(bad)
fnstcw
out
inc
data16
(bad)
inc
xchg
xchg
pop
inc
pusha
and
ja
jp
idiv
hlt
out
mov
retf
add
pop
lods
xchg
cmp
dec
or
shl
mov
popa
and
xchg
std
in
mov
ret
xchg
(bad)
fs
mov
pushf
or
xlat
sti
(bad)
ret
(bad)
enter
xor
xchg
cmp
inc
fisubr
call
lock
cmps
and
aas
retf
pop
dec
sbb
std
jmp
mov
cli
sbb
rcl
adc
lock
mov
jmp
popa
test
dec
or
ins
fwait
movs
push
pop
push
mov
aaa
mov
cmp
pop
inc
(bad)
outs
in
adc
dec
sbb
fmul
imul
cmps
shr
xchg
mov
ror
inc
imul
stc
push
fcom
mov
fst
inc
daa
inc
sar
cdq
and
add
inc
into
or
retf
enter
xchg
xor
repz
push
cld
adc
or
bnd
popf
imul
test
lods
leave
repz
add
(bad)
xor
iret
in
fdivr
stos
retf
mov
in
pop
shl
xor
mov
loopne
xchg
add
sbb
mov
mov
(bad)
call
nop
(bad)
mov
jno
pusha
addr16
jmp
mov
push
jno
(bad)
ficomp
scas
out
dec
daa
pop
in
je
pop
fwait
sar
cmp
push
data16
push
mov
aam
jne
ret
fisubr
ins
dec
and
adc
dec
sub
aam
inc
gs
and
dec
ret
mov
clc
out
pop
(bad)
outs
lock
jo
pop
inc
call
jmp
repnz
sbb
cwde
adc
repnz
add
jnp
les
test
add
and
fsub
dec
pop
iret
jg
mov
sbb
xor
jns
test
out
fstp
sbb
xchg
xlat
mov
fstp
jmp
stos
push
adc
xchg
push
add
mov
add
ss
rcr
cmp
in
sbb
aam
out
mov
lahf
and
jge
mov
xchg
inc
mov
into
xor
xor
pop
arpl
add
loopne
(bad)
fadd
not
push
or
xor
xor
jb
mov
xchg
cmp
xchg
or
dec
cwde
(bad)
(bad)
(bad)
stos
int
xchg
push
inc
inc
or
mov
jns
inc
cmps
pop
adc
ins
jb
mov
xor
rcr
mov
(bad)
outs
int
and
mov
movs
retf
outs
popa
addr16
and
jne
cld
clc
pushf
outs
gs
adc
adc
in
mov
rcl
stos
fild
addr16
loope
retf
push
mov
mov
pop
pop
mov
xchg
dec
push
aad
lahf
push
adc
mov
push
(bad)
mov
mov
cdq
lahf
inc
push
jns
es
xchg
jmp
stc
pop
jns
cs
int3
fistp
inc
sbb
or
outs
(bad)
xchg
mov
jmp
fcomp
int
mov
add
bnd
call
sub
adc
repnz
sti
add
je
repz
dec
arpl
pop
les
fcom
or
mov
adc
or
rstorssp
movs
jae
bound
sub
aam
icebp
std
out
movs
dec
(bad)
(bad)
dec
ret
and
and
pop
ror
mov
sub
es
inc
scas
cmp
into
push
sti
xlat
sbb
out
in
(bad)
xlat
daa
loop
and
in
or
jns
repnz
bound
out
mov
push
out
test
pop
repnz
cmpxchg
ds
adc
mov
sbb
ret
in
and
pop
lods
mov
adc
dec
popf
retf
sbb
dec
dec
cmp
xor
outs
cwde
imul
frstor
ret
fisubr
cs
push
repnz
jne
mov
xor
sbb
int3
dec
and
sbb
cwde
(bad)
loop
(bad)
cmc
push
xchg
mov
inc
retf
mov
in
mov
xchg
pop
inc
(bad)
sbb
mov
sub
fnstsw
adc
cmp
inc
xchg
mov
das
movs
bound
jmp
adc
sar
fcomi
xchg
cmp
mov
stos
test
sbb
(bad)
pop
lock
aas
push
int3
call
ret
call
pop
pop
pop
jmp
push
test
movs
xchg
cdq
addr16
mov
popf
jl
cdq
push
xchg
xchg
movs
movs
bound
jae
sub
in
dec
cmp
loope
mov
(bad)
sti
sbb
call
dec
test
scas
jl
nop
and
add
idiv
test
jp
in
push
pop
pop
movs
(bad)
and
jg
adc
fisubr
jae
sub
push
popf
(bad)
lahf
repz
retf
js
pop
iret
sbb
fimul
imul
adc
dec
and
cmp
xchg
or
sbb
cmp
mov
rol
stos
mov
cli
sub
shl
icebp
in
and
fsub
scas
add
adc
add
xchg
adc
mul
idiv
aas
mov
(bad)
jb
iret
sbb
test
fnstsw
lahf
xchg
sahf
inc
pushf
rcl
xlat
aad
add
inc
mov
inc
out
ja
and
(bad)
adc
cmp
dec
jp
shr
fsub
or
dec
inc
dec
inc
jp
push
bound
rcl
sbb
xor
add
repnz
jecxz
mov
gs
fadd
jmp
mov
pop
leave
sub
ds
xchg
jnp
hlt
cmp
add
jl
addr16
xor
fcomp
jmp
pop
jmp
out
push
bt
mov
mov
sub
or
pop
daa
sahf
sub
pop
jmp
push
pop
ins
ins
inc
in
in
inc
jb
push
(bad)
or
and
mov
movs
and
addr16
mov
cwde
iret
ret
lods
xchg
sub
mov
mov
push
mov
iret
jmp
sub
jmp
xchg
sbb
lock
jne
in
lds
inc
mov
div
stc
lock
sub
cld
jnp
mul
aad
jno
call
ss
inc
pop
fwait
or
push
push
ja
inc
sbb
(bad)
sub
out
jne
push
dec
jg
adc
or
mov
int
fist
jnp
mov
sub
sti
push
xor
sub
mov
cmc
dec
ret
mov
out
push
jge
sub
mov
mov
ror
fbld
xor
movs
jo
push
xchg
ds
lahf
(bad)
and
les
xchg
bound
mov
mov
dec
sbb
add
(bad)
ins
es
inc
adc
sub
xchg
xchg
jp
test
std
jmp
repnz
mov
or
icebp
aad
lds
scas
adc
jmp
cwde
fdiv
sub
hlt
test
addr16
fistp
cmp
mov
mov
aam
ins
int
add
scas
(bad)
nop
out
mov
sbb
mov
and
mov
pop
sub
out
enter
sbb
and
pop
inc
stos
sub
sub
imul
fwait
outs
jnp
xlat
mov
mov
pusha
pop
mov
or
sbb
mov
stos
cmp
nop
addr16
mov
adc
sbb
and
movs
jo
test
sbb
pop
pop
jne
scas
xor
push
pop
mov
out
mov
popf
push
push
addr16
dec
es
mov
xchg
ja
ret
call
leave
mov
cmp
lahf
jmp
icebp
jp
pop
pushf
(bad)
imul
mov
push
outs
mov
or
sbb
xor
iret
cmp
ret
or
or
ins
dec
xchg
push
inc
mov
fwait
mov
cli
dec
lds
xlat
xor
and
stc
or
add
sub
sar
sub
or
loopne
out
or
xchg
push
ret
mov
jmp
jmp
adc
dec
inc
sar
pop
popf
loopne
xchg
add
jmp
jno
out
sbb
pop
sub
sbb
lds
fcmovbe
jecxz
mov
push
sub
mov
cmp
adc
(bad)
and
nop
mov
pop
inc
cmp
rol
push
cmp
push
into
bound
aas
arpl
frstor
or
shr
jne
out
mov
add
xor
in
mov
jmp
mov
add
add
out
mov
cmps
fnstcw
test
mov
outs
mov
stc
pushf
inc
test
xor
shr
jmp
cs
cdq
fdivr
retf
or
and
nop
shl
pop
(bad)
xor
inc
shl
enter
icebp
jle
jmp
pop
pop
movs
iret
mov
ins
loop
mov
pusha
xchg
ss
xchg
and
inc
outs
mov
dec
or
stos
xchg
mov
sti
loope
jns
xor
and
cwde
jne
imul
loope
fdivr
inc
loope
gs
in
daa
jb
pop
ficomp
out
mov
push
loop
test
pushf
mov
push
icebp
pop
test
shl
js
mov
xor
fistp
inc
xor
sbb
dec
mov
xchg
out
and
ss
pushf
rcl
and
xor
sub
xor
daa
test
(bad)
mov
addr16
xchg
xor
fwait
dec
add
jno
adc
sub
xor
fimul
xor
or
or
xchg
xchg
pop
ins
movs
ret
idiv
push
arpl
rcr
push
xor
xor
cmps
pop
sub
adc
jmp
popf
aaa
ins
add
outs
xor
sub
add
ret
movs
and
into
mov
inc
cld
mov
sub
push
jo
addr16
inc
aam
cmps
cmps
out
enter
xchg
lahf
xchg
ds
mov
add
fidivr
add
gs
popf
aam
stc
cmp
push
adc
mov
shr
hlt
pop
mov
cmp
xchg
jb
pop
jg
jns
cld
xlat
sub
(bad)
cmp
or
stc
dec
ins
mov
imul
xchg
jmp
xlat
mov
add
pop
(bad)
lock
repz
test
adc
and
mov
push
and
xlat
(bad)
shl
dec
movs
adc
push
ret
adc
nop
(bad)
(bad)
ins
outs
and
lods
mov
mov
or
mov
adc
in
fadd
jbe
bound
call
mov
test
inc
jno
sahf
pop
fdivr
sub
lods
ret
push
jne
mov
push
iret
jbe
push
cmps
rcr
test
or
jne
pop
jp
mov
into
dec
jo
sbb
pop
fcmovb
(bad)
xor
add
(bad)
mov
stc
cmp
xor
out
adc
jbe
in
xor
(bad)
aam
not
mov
fisttp
repnz
in
jge
or
sahf
ds
nop
popf
repz
pop
push
pop
push
adc
retf
jbe
and
ja
retf
jge
sbb
dec
mov
fdiv
and
cmp
xor
dec
or
adc
pop
aam
movs
or
fs
loop
lock
shl
inc
ins
loope
dec
pop
ins
arpl
cmp
sbb
mov
mov
fadd
das
test
cmp
push
cmp
(bad)
nop
jmp
inc
popf
mov
sbb
pusha
jg
pop
adc
outs
cwde
icebp
cmp
xchg
les
sbb
mov
sub
int3
cdq
xchg
or
pop
jle
adc
jmp
add
lahf
and
xchg
jp
xor
clc
lea
sahf
and
lods
fidivr
sar
data16
es
and
cdq
push
sbb
sub
pop
mov
mov
add
and
adc
(bad)
sbb
mov
arpl
lods
sbb
push
jns
(bad)
arpl
add
sub
aam
add
pop
cld
add
dec
xor
mov
adc
or
movs
inc
gs
xlat
sbb
cmp
sbb
fdivp
sbb
inc
cmp
cs
adc
cmc
jge
or
pop
push
cmp
pop
(bad)
pop
loope
cmp
fcom
out
js
mov
sbb
xchg
pop
add
xchg
ja
aaa
xchg
add
mov
das
cld
fimul
mov
xchg
mov
rcl
pushf
imul
push
adc
cmp
jmp
ins
sahf
imul
pushf
int
lods
sbb
pop
dec
jno
daa
js
scas
lahf
sub
xchg
cmp
into
or
movs
sbb
arpl
repnz
adc
jns
mov
fdivr
popa
daa
icebp
mov
jmp
push
dec
ret
pop
dec
out
inc
daa
icebp
ss
xchg
in
lahf
dec
stos
cmc
push
xchg
xor
xchg
jnp
pushf
cdq
mov
or
test
xor
push
(bad)
shl
retf
lahf
adc
add
dec
popf
add
cmps
cmpps
imul
popf
fdivr
jmp
add
ja
jae
loope
(bad)
daa
xchg
xchg
xor
push
push
stc
jge
sbb
inc
dec
inc
movs
outs
and
or
jns
xor
xchg
aad
sub
call
sbb
mov
pop
inc
sub
pop
loope
mov
pusha
add
or
mov
std
mov
jecxz
mov
jb
jno
and
fidivr
ins
add
aas
push
cmp
xlat
add
jo
push
cld
add
lahf
addr16
and
fadd
sbb
inc
jb
ds
fcmovnbe
mov
fs
jge
imul
into
outs
(bad)
dec
jmp
jmp
icebp
loopne
or
jl
xchg
mov
ficomp
in
mov
and
mov
movs
jne
mov
or
pusha
mov
lahf
scas
jmp
inc
xchg
xlat
add
cmp
addr16
adc
(bad)
xor
dec
div
jp
cmps
hlt
push
xchg
and
jmp
sti
mov
ja
ja
inc
sub
pop
push
or
repz
cmp
bound
int
and
stos
in
mov
push
loop
les
out
rcl
dec
dec
scas
inc
or
aas
out
inc
mov
lods
xchg
not
push
jbe
mov
inc
add
rol
enter
ficomp
jle
idiv
rcr
mov
adc
xor
leave
aas
xchg
ja
pushf
push
mov
(bad)
cmps
stc
fadd
inc
adc
out
cs
neg
aam
out
push
mov
jne
add
test
(bad)
jmp
enter
push
xchg
xor
or
add
cmp
pop
call
(bad)
stos
mov
jbe
sub
sbb
mov
loope
xchg
push
mov
fnstcw
cmps
in
xor
aas
mov
dec
(bad)
lea
sub
pop
jns
out
mov
shl
ja
shl
jmp
aas
test
pop
cmp
les
jb
mov
xchg
or
das
in
iret
enter
jnp
arpl
and
arpl
pop
je
mov
daa
cmp
popf
sar
mov
imul
shr
movs
inc
rcr
mul
shl
dec
mov
sbb
pushf
cmp
scas
movs
nop
xchg
adc
mov
stc
push
add
dec
movs
js
mov
and
out
push
or
es
push
mov
jg
or
dec
inc
out
std
shr
push
sar
jo
jae
inc
daa
(bad)
mov
push
pop
dec
loope
es
in
sbb
mov
je
jg
rol
lea
mov
xor
dec
mov
push
xchg
jo
inc
pop
mov
jl
clc
scas
inc
inc
and
pop
lods
lahf
and
iret
ret
xchg
fxch
fisub
jno
and
sbb
stos
push
cwde
clc
sbb
adc
ret
mov
pop
dec
inc
loope
cmps
xchg
and
fwait
push
push
or
push
mov
add
pusha
push
pusha
rcl
dec
nop
mov
loopne
inc
cdq
frstor
or
js
pusha
inc
adc
clc
loop
xor
mov
push
mov
mov
pop
lods
xchg
sbb
in
or
ins
call
inc
jecxz
add
inc
out
out
push
leave
adc
mov
enter
fisubr
xor
rcl
clc
(bad)
mov
lock
jge
xchg
imul
pop
les
mov
addr16
retf
ins
and
call
xchg
sbb
jbe
jbe
push
and
inc
pop
test
pop
xor
cmovl
shl
xchg
mov
inc
movs
mov
(bad)
cdq
or
xor
dec
xor
sbb
mov
and
outs
aas
adc
pop
sub
jnp
out
dec
xor
push
add
out
jb
jb
sub
sbb
dec
adc
js
add
es
xor
ins
mov
push
cld
xchg
(bad)
shr
int
fisttp
cli
mov
inc
cld
int
jae
test
jno
mov
cmps
popa
neg
lods
test
inc
cmp
adc
add
push
shl
enter
stc
and
sbb
adc
fdiv
aas
and
adc
cmps
retf
popf
xchg
push
pop
or
test
stos
out
mov
out
fstp
pushf
push
sub
mov
cmp
xchg
sbb
imul
es
add
retf
xor
ins
or
daa
ins
jo
sahf
push
xor
mov
ficom
mov
ret
lahf
ss
dec
adc
add
in
fwait
push
cmp
sbb
pop
dec
xchg
cmp
rol
aas
push
jns
xor
ror
pop
cld
push
daa
push
add
in
push
call
retf
xchg
ins
pop
(bad)
out
imul
add
stos
sbb
popf
dec
lods
cs
lahf
repz
add
call
mov
or
sub
loopne
aad
nop
(bad)
jle
out
mov
pop
sub
mov
xchg
lds
add
pop
adc
mov
imul
cld
sub
pop
ins
push
mov
mov
sbb
mov
xchg
push
add
clc
add
push
mov
push
in
ins
imul
jne
xchg
push
mov
stos
xchg
bound
sbb
add
mov
xor
fst
jae
adc
(bad)
mov
cmp
pop
push
mov
inc
pop
sub
cli
(bad)
retf
cmp
pop
cmp
push
jmp
test
js
stos
cmps
ror
sub
ss
les
xchg
add
or
dec
fsub
fcomi
jb
jbe
fs
mov
clc
jmp
(bad)
mov
mov
adc
stos
mov
sbb
push
fistp
lods
psrlw
jns
shl
(bad)
inc
mov
mov
push
gs
mov
movs
popa
fild
addr16
aam
add
adc
dec
jne
rol
hlt
sbb
xchg
push
out
ins
stc
and
lds
add
or
cs
in
repnz
or
sbb
mov
stc
xor
push
mov
scas
fiadd
int3
pop
data16
lods
leave
jno
push
loopne
jns
loop
ret
inc
mov
inc
iret
push
mov
fidiv
push
xor
jge
or
aam
inc
dec
inc
nop
mov
jmp
daa
mov
popf
out
xchg
sbb
and
scas
call
push
sbb
in
frstor
add
gs
adc
cld
sbb
test
xchg
(bad)
cmps
fiadd
cwde
mov
jge
test
lahf
movs
fidiv
dec
fucom
mov
xlat
mov
stos
and
sar
fnsave
push
mov
dec
lea
loope
cmp
ror
and
cdq
ss
mov
and
inc
lods
xchg
out
push
push
scas
pop
or
inc
xchg
in
les
out
rol
test
addr16
mov
and
push
inc
lea
stos
pop
mov
stos
js
dec
fwait
rcl
mov
jae
push
mov
out
dec
cmp
cmps
mov
jge
rol
adc
pop
addr16
mov
(bad)
out
mov
daa
sub
adc
jno
pop
imul
jb
gs
mov
xor
cs
cld
xchg
cld
jmp
mov
pop
push
jb
push
xchg
xchg
ret
out
sbb
out
outs
sbb
gs
jo
xchg
(bad)
inc
cwde
loopne
adc
loope
mov
push
jnp
jno
not
les
ja
mov
and
add
sbb
lods
add
retf
mov
pop
add
xlat
and
xor
into
sti
cld
sbb
jmp
sbb
mov
mov
mov
clc
aad
daa
ds
mov
pop
pop
cmps
retf
(bad)
cmc
leave
into
dec
xchg
cmps
mov
mov
stos
inc
test
retf
adc
mov
leave
sub
std
sub
sub
push
(bad)
in
inc
push
add
int3
xchg
in
and
cs
sbb
out
aaa
pop
jne
jmp
mov
ja
pop
fstp
xor
fstp
mov
out
imul
sbb
cwde
add
pop
mov
adc
add
movs
loopne
cmp
pop
adc
neg
push
push
enter
mov
cmp
xchg
aam
pop
push
int
xor
pop
aad
jg
fs
call
sbb
xchg
ds
cmp
ss
pop
aam
fild
jl
adc
pop
or
add
or
adc
pop
push
pop
pop
cmps
in
in
(bad)
xchg
clc
sbb
and
rol
xchg
js
in
add
imul
mov
scas
or
inc
adc
call
out
call
mov
imul
lea
and
inc
jbe
outs
and
int
xchg
imul
add
pop
mov
add
aas
adc
jmp
out
and
ror
mov
or
mov
outs
fdivr
xor
scas
sahf
sub
sub
inc
push
adc
aam
mov
popa
push
dec
jmp
jne
in
out
cmp
mov
stc
pop
dec
(bad)
or
sub
and
lahf
push
outs
mov
sub
mov
fmul
fcomp
daa
addr16
fild
mov
adc
fwait
sbb
jb
xchg
in
push
mov
popf
shl
push
pusha
imul
push
fisubr
adc
inc
aad
jnp
retf
push
fucomi
jns
or
xlat
jo
int3
mov
cld
add
dec
add
or
cwde
mov
pop
pop
fwait
out
aaa
pop
dec
aas
retf
scas
mov
add
leave
stc
retf
sbb
sar
out
or
popa
cmp
lock
loopne
cwde
xchg
aas
ins
inc
out
out
and
addr16
sti
mov
push
push
icebp
push
jle
dec
cmp
imul
inc
adc
mov
cmp
sub
and
fnstsw
cmp
mov
mov
xchg
ret
out
push
mov
icebp
xchg
add
or
pop
into
xor
xor
cmp
into
cdq
xor
or
pop
add
adc
jbe
pop
xchg
sub
cmp
jle
mov
sbb
adc
cmp
or
mov
rcr
cmp
mov
(bad)
sbb
pop
sub
jecxz
xchg
add
repnz
cmp
dec
pop
aas
push
scas
jmp
sbb
xor
adc
movs
dec
mov
add
adc
pop
jbe
adc
cmc
adc
cmp
shr
movs
sub
jmp
jmp
ret
jno
leave
movs
sub
lds
sti
jecxz
jmp
xlat
addr16
adc
rol
cmps
lea
icebp
jle
mov
mov
movs
or
add
xchg
or
add
imul
clc
mov
enter
inc
je
jno
jb
mov
dec
cmp
cmp
outs
add
pop
pop
(bad)
call
push
dec
sbb
push
js
or
mov
stos
retf
data16
sub
in
scas
scas
mov
and
jno
nop
sbb
cmc
cmp
adc
out
adc
jecxz
xor
push
push
addr16
inc
mov
sub
movs
aam
mov
mov
fstp
lds
lods
sti
mov
js
sbb
jo
ins
mov
rcr
or
dec
sub
add
into
sub
adc
lods
lods
inc
push
or
and
nop
scas
cld
dec
xor
retf
sub
pop
jae
add
and
data16
sbb
mov
push
out
daa
pop
pusha
in
and
ja
and
sub
push
pop
ins
inc
xor
xor
dec
mov
sub
pusha
cmp
xor
pop
scas
cmc
imul
sti
push
xor
mov
outs
aad
lods
retf
movs
fcom
mov
dec
add
enter
mul
out
imul
fisttp
scas
in
cwde
popa
cmp
pop
xchg
cdq
mov
mov
lods
pushf
lods
add
loopne
dec
dec
cmp
cmp
push
mov
into
mov
pop
cmp
jg
cmp
sub
xchg
jae
cdq
int
in
shl
xor
lock
sbb
std
fcom
mov
or
and
sub
and
sbb
inc
xchg
outs
sub
jns
inc
mov
mov
pop
enter
(bad)
ror
jo
pushf
js
outs
pop
nop
rcl
jecxz
mov
jbe
adc
push
test
ja
inc
daa
sar
mov
loop
movsx
mov
inc
push
lea
dec
inc
shr
mov
pcmpgtd
mov
mov
sbb
cli
daa
enter
imul
pop
dec
ds
not
add
(bad)
call
sbb
in
mov
add
sbb
pop
pop
pop
xor
jnp
ret
loop
inc
pop
mov
idiv
test
mov
pushf
rcl
dec
cmc
fidiv
push
(bad)
jmp
inc
loope
adc
dec
inc
cmp
ss
mov
xor
(bad)
sti
pop
stc
sub
pop
bound
les
xor
pop
mov
lock
ficomp
clc
std
in
aad
div
mov
adc
xchg
hlt
xchg
cmp
xchg
mov
jno
push
(bad)
lahf
test
out
das
jns
add
sbb
or
inc
xor
dec
popa
movs
mov
not
push
dec
out
mov
push
inc
pop
cmp
in
push
mov
dec
or
jb
ins
loopne
push
adc
xor
inc
mov
dec
pop
cwde
or
cmps
scas
dec
rcl
fdivr
or
ret
cmp
jg
xlat
std
mov
sti
out
imul
lock
mov
stos
add
fnsave
add
xor
mov
test
push
fnstenv
push
popf
fmul
inc
clc
push
cmc
push
fdiv
fcomp
xchg
ret
adc
adc
jno
push
xor
mov
xor
pop
dec
gs
loope
ss
and
mov
xor
cmp
push
cs
and
adc
pop
sbb
cmc
mov
or
jmp
(bad)
imul
dec
pop
xor
stc
xchg
jl
add
sub
mov
int3
xchg
out
mov
sbb
jae
add
pop
and
data16
lea
or
imul
rol
pop
mov
test
sbb
jp
pushf
call
jg
push
cld
pop
movs
ins
dec
shl
pop
adc
scas
ret
cmp
cmp
rcl
cmc
jp
inc
push
in
xchg
jns
sub
test
sahf
mov
cmps
scas
push
jns
pop
sahf
pop
add
enter
cld
cmp
shl
inc
sub
loop
sub
jnp
and
xlat
mov
jmp
and
lock
add
push
sbb
sub
shl
js
dec
mov
mov
or
inc
jle
into
rcl
rcl
fild
int
out
push
scas
in
mov
mov
add
outs
xlat
mov
addr16
jns
enter
mov
outs
inc
and
pop
dec
shl
movs
cmps
or
jge
xchg
test
test
nop
pop
call
xchg
rol
push
ficomp
add
lahf
xlat
push
mov
lea
xor
and
loope
adc
aad
iret
int3
int
mov
dec
jbe
mov
or
pcmpeqd
rol
add
(bad)
inc
push
ret
cmp
mov
popf
adc
rcl
dec
and
into
push
pop
jmp
call
xor
push
xor
adc
sbb
adc
sbb
jge
mov
xor
jp
jae
add
aaa
mov
inc
inc
in
push
addr16
xor
mov
xor
pop
xor
ja
inc
xor
sbb
xchg
pop
adc
rep
ins
mov
call
push
push
leave
jmp
out
das
sti
and
ins
xor
cmps
or
(bad)
icebp
pushf
cmps
inc
inc
xor
hlt
or
rol
sbb
xchg
sbb
out
lods
stc
imul
cmp
ret
arpl
xchg
call
imul
cmp
int3
mov
out
ins
in
popa
xor
jge
and
fmulp
les
jns
jmp
fisubr
xchg
mov
jecxz
cmc
sub
pop
fimul
ret
xlat
repz
dec
stc
inc
and
jle
xlat
cmc
test
outs
mov
fstp
dec
fld
les
int
pop
fidivr
js
sub
xor
xchg
lock
mov
in
adc
pop
pop
sahf
and
cmp
and
xchg
test
test
add
es
push
inc
dec
sub
pop
pop
movs
dec
mov
inc
ret
adc
inc
push
sbb
iret
mov
cmp
inc
jle
pusha
test
imul
sub
add
jae
(bad)
aad
sub
sbb
xchg
fisttp
xor
add
mov
jecxz
pop
out
pushf
call
xor
inc
adc
cwde
sahf
test
jo
(bad)
pop
and
xchg
test
call
rol
pusha
jnp
sub
dec
mov
mov
mov
push
add
shl
cmp
inc
push
adc
push
inc
and
pushf
pop
adc
and
cmp
pop
and
adc
popf
adc
xchg
mov
cmp
xchg
stos
in
nop
jp
in
loope
pop
lahf
jno
pop
int
arpl
mov
xchg
sbb
push
cmp
mul
pop
cmp
mov
mov
fwait
push
movs
pop
sub
jecxz
pop
fadd
call
daa
aaa
ja
mov
xchg
sahf
outs
mov
scas
(bad)
jge
and
jne
fcmovnb
push
shl
and
dec
push
mov
int
fs
sbb
mov
gs
out
push
mov
movs
rcr
pushf
add
push
xor
adc
sub
scas
sahf
xor
mov
add
or
inc
outs
xor
rcl
xor
les
inc
pop
(bad)
pop
mov
stos
mov
stc
fcmovnb
pop
cmc
mov
jns
mov
out
nop
push
sbb
or
pushf
jge
fstsw
inc
push
push
je
cwde
or
push
jl
outs
outs
jecxz
cmp
push
retf
mov
jge
mov
sbb
push
pop
push
rcl
jae
in
test
pop
adc
movs
dec
mov
jecxz
fwait
mov
ins
jmp
xor
inc
std
je
jo
xchg
mov
mov
sbb
aaa
lods
add
push
(bad)
push
pop
adc
(bad)
dec
icebp
cld
or
push
sbb
xchg
pushf
sahf
and
push
fmul
xchg
nop
xchg
pushf
push
jp
xchg
mov
inc
pop
push
sbb
inc
jg
es
mov
addr16
ficomp
rol
in
or
bound
(bad)
mov
shr
jecxz
rol
lea
add
cmps
jbe
arpl
int3
retf
inc
hlt
sbb
dec
das
rcr
cmp
sub
mov
mov
push
push
shl
push
das
jae
mov
pop
xchg
mov
iret
dec
popf
push
push
mov
frstor
xchg
shr
test
int
inc
and
pop
mov
rcr
imul
call
and
cmc
mov
sbb
and
mov
mov
xchg
xchg
data16
(bad)
(bad)
push
dec
clc
adc
push
mov
das
aad
rol
ret
retf
ja
(bad)
mov
add
inc
sti
dec
push
inc
(bad)
repz
and
rol
sub
mov
xchg
cmc
inc
stos
lea
fucomp
and
idiv
pop
mov
cmps
das
add
cmp
call
sbb
out
fwait
inc
add
in
xchg
mov
cs
outs
movs
pop
push
cmp
not
pop
(bad)
xor
jns
inc
xlat
mov
into
lods
xor
sbb
imul
push
xchg
pop
jns
cmp
xor
pusha
pop
xchg
cdq
push
popa
xchg
xor
loope
push
test
ja
ret
leave
dec
imul
jmp
pushf
pop
pop
jg
(bad)
cmp
cmps
popf
jo
inc
add
jno
sub
or
add
(bad)
idiv
sbb
adc
dec
hlt
aad
hlt
in
mov
pop
add
adc
clc
inc
sahf
cmps
pop
(bad)
in
jnp
nop
aad
scas
cmp
push
in
and
mov
lea
pushf
jp
pop
cli
cmp
jbe
loopne
jg
sub
pop
jmp
xchg
and
sbb
fistp
sub
mov
in
imul
call
mov
out
mov
sub
pop
push
jne
(bad)
sbb
bound
test
in
xchg
mov
xchg
mov
mov
mov
jns
or
jno
pop
cmps
nop
ins
sbb
cmp
xor
dec
pop
xchg
jno
jmp
or
scas
in
ret
(bad)
mov
test
jo
mov
retf
movs
test
dec
pop
data16
mov
mov
std
leave
inc
mov
les
or
scas
xchg
stos
fsubp
add
jnp
aad
cmc
call
out
sbb
lods
mov
call
jl
mov
or
and
stos
inc
or
sub
mov
mov
mov
idiv
(bad)
test
add
push
fs
adc
adc
xor
inc
mov
pop
mov
bound
cld
or
enter
dec
inc
sbb
add
enter
jns
mov
cmp
stos
mov
inc
shl
cwde
jns
int3
jno
call
imul
inc
lods
mov
sub
out
ja
mov
in
fist
cdq
adc
jge
stc
add
das
imul
sbb
data16
cld
sbb
xor
mov
icebp
pusha
dec
retf
scas
xor
mov
int3
aad
mov
cli
jo
or
loope
loop
mov
jecxz
(bad)
out
pop
cdq
fldenv
in
and
in
dec
mov
retf
dec
add
inc
jle
dec
pop
add
pop
cli
cdq
dec
repz
int
fcmovnu
dec
mov
push
imul
jae
pusha
xchg
add
xchg
and
xor
cmp
or
cmps
adc
imul
sbb
fsubr
fstp
mul
and
cmp
scas
out
xor
es
inc
xor
nop
movs
push
dec
jae
and
push
(bad)
xchg
add
mov
pop
leave
gs
ret
dec
xchg
inc
ins
push
cmps
test
stos
(bad)
xchg
addr16
rol
cld
ret
pop
inc
stos
ss
add
jle
test
inc
sub
imul
movs
cld
stc
add
add
fcom
fld
test
(bad)
and
inc
daa
ss
enter
mov
test
cs
push
and
out
jmp
movs
jbe
push
in
pop
pop
mov
cmp
or
fs
lea
mov
pop
jge
outs
into
pop
enter
lock
xchg
retf
mov
adc
enter
cwde
cmps
xlat
xchg
ret
ret
push
fild
inc
jmp
cmps
and
jnp
or
pop
mov
gs
stc
fs
nop
jmp
je
stos
gs
and
loope
(bad)
sbb
adc
popa
pushf
ror
aaa
add
jmp
pop
inc
ret
outs
dec
push
xchg
movs
leave
mov
sti
pop
leave
push
xlat
mov
lods
mov
xlat
sbb
aam
stos
out
add
pusha
inc
punpckhbw
(bad)
mov
dec
sub
shr
dec
out
das
sub
aam
jecxz
pop
shl
xlat
push
mov
cli
enter
pop
mov
inc
fbstp
or
in
adc
outs
aam
ret
jle
fistp
jb
faddp
or
call
mov
imul
out
out
test
movs
push
ret
mov
or
(bad)
jp
xor
fwait
mov
shl
inc
popa
adc
and
imul
loop
adc
(bad)
lahf
xor
ins
push
shl
std
or
pop
scas
stc
out
adc
sub
clc
cmps
(bad)
xor
mov
iret
gs
leave
in
xor
pusha
adc
cmp
retf
in
or
xor
sahf
mov
xchg
mov
mov
mov
jmp
pushf
inc
fsubr
sub
push
shl
mov
retf
fistp
sub
cmp
in
adc
or
mov
sbb
imul
sbb
imul
mov
adc
fild
neg
das
aam
fst
jp
sub
adc
push
out
inc
adc
scas
push
enter
fcomp
idiv
das
pop
sbb
sbb
xlat
cmp
out
call
cdq
sub
into
test
(bad)
push
add
sbb
inc
das
sti
dec
xchg
das
jns
mov
cmp
scas
and
rcr
jecxz
retf
cld
pop
je
fimul
push
jmp
jle
aam
rcr
sahf
mov
xchg
push
adc
dec
test
popf
cmps
mov
rcl
sub
mov
add
adc
pminub
aam
lahf
pushf
pop
rcr
lods
(bad)
jl
je
dec
je
frstor
mov
cld
test
sub
mov
dec
pop
lods
sub
or
jae
push
sbb
fbld
jmp
mov
mov
sbb
mov
daa
push
jmp
cmp
jl
adc
js
mov
jl
adc
xchg
les
loope
out
loop
adc
lock
mov
jo
popf
pop
rol
lock
popf
jo
or
lock
sbb
jp
mov
pop
jnp
pop
lea
dec
js
sbb
cmp
imul
dec
sbb
push
hlt
dec
arpl
add
jns
jp
sbb
arpl
stos
dec
nop
mov
out
leave
xchg
aad
sbb
pusha
cmp
out
popf
fwait
jmp
cmp
bound
in
lea
mov
call
pop
rcl
push
(bad)
outs
push
call
scas
repnz
dec
or
retf
push
call
call
xlat
pop
neg
mov
push
and
sti
sbb
fisttp
(bad)
enter
sub
fsub
rcr
stos
leavew
test
inc
sbb
test
retf
sub
sbb
cmp
in
sub
mov
jo
jae
xor
gs
ret
clc
push
repnz
ror
dec
repz
ins
aas
das
xchg
div
inc
mov
mov
fmul
ret
push
inc
cmp
push
jge
add
dec
jno
sub
push
lods
sbb
inc
or
(bad)
pop
mov
xor
jmp
sub
or
lods
bound
mov
(bad)
ja
jge
nop
and
mov
cld
aas
fadd
dec
dec
call
push
pop
add
and
cwde
call
add
sar
add
xchg
push
lds
push
dec
rcr
add
mov
push
(bad)
fist
les
aam
xor
fwait
pop
cmp
into
outs
scas
retf
jno
loopne
ds
lds
in
test
dec
out
arpl
mov
add
mov
pop
loop
xor
cmp
dec
hlt
mov
out
dec
and
mov
out
mov
mov
sbb
mov
pop
and
or
js
scas
and
stos
add
gs
(bad)
out
idiv
adc
pop
mov
push
jae
out
addr16
push
cmps
mov
idiv
lods
adc
mov
jnp
data16
fimul
mov
push
pushf
aas
push
sub
fadd
sub
mov
mov
inc
jmp
xchg
loopne
retf
push
mov
adc
dec
cs
arpl
pop
pop
aam
inc
jmp
mov
ins
xor
stc
bound
sub
aam
les
cdq
xchg
out
xor
xchg
repz
mov
sbb
mov
dec
jns
jge
test
jnp
lahf
inc
add
shr
dec
push
jne
out
jo
into
jb
jo
push
mov
mov
test
icebp
jns
dec
scas
and
mov
rcl
in
inc
std
outs
xor
add
push
ror
repnz
and
test
and
out
pop
dec
(bad)
mov
loopne
mov
aad
push
dec
es
cld
jo
nop
cmp
jmp
enter
sar
inc
adc
dec
loopne
fild
mov
ret
test
sbb
mov
push
pop
mov
mov
sbb
fdivr
mov
loope
fsub
pop
sar
fldcw
inc
pop
enter
fldenv
jmp
xchg
stc
shr
cmp
sti
adc
xchg
in
mov
xchg
repz
sbb
ds
adc
shl
test
jb
push
pushf
lock
in
cdq
or
mov
pop
sbb
icebp
stos
loop
jmp
fwait
mov
cwde
mov
call
outs
push
inc
xor
mov
int3
push
stos
pop
mov
add
pop
clc
xor
stos
jb
and
xchg
retf
int3
mov
popf
pop
mov
jne
int
and
nop
sub
imul
dec
dec
sub
mov
jmp
fcomp
test
sahf
xor
sub
mov
data16
cmc
ins
ja
mov
ins
sbb
pop
push
mov
xchg
jae
int3
sub
dec
sub
outs
inc
fs
ret
int
das
mov
jecxz
cmp
shl
cwde
popa
ins
add
inc
pop
cmp
and
ins
sub
sub
icebp
fisttp
mov
pop
cmp
(bad)
dec
stos
jp
jecxz
(bad)
push
push
xchg
jge
ret
xlat
inc
in
aam
mov
xor
aas
outs
pop
out
(bad)
jge
sbb
pop
setp
not
cmp
dec
push
sub
xchg
push
or
add
xchg
jecxz
addr16
into
pop
mov
push
ficom
dec
sbb
or
xchg
ds
cwde
sub
inc
mov
mov
sub
aad
test
sbb
pop
xor
xor
xor
push
out
test
sti
movs
ja
je
sub
sbb
ins
mov
in
or
cmp
inc
retf
enter
or
adc
shr
inc
pop
jg
xlat
movs
mov
pop
mov
xchg
xor
jmp
ja
or
dec
xor
cmps
sbb
pop
push
call
and
cmp
sub
pop
pop
(bad)
stos
add
jns
scas
hlt
cwde
call
or
jae
pop
sbb
test
mov
mov
xchg
ins
cmp
ds
sub
mov
call
pop
iret
xor
ds
mov
cmp
add
pop
sub
adc
push
(bad)
mov
fisttp
mov
fs
aam
jb
jbe
add
icebp
inc
mov
jg
gs
sbb
push
stc
push
gs
js
retf
mov
movhps
or
nop
dec
pop
mov
retf
pop
xor
div
gs
mov
mov
push
add
repz
cdq
cmps
ds
ficom
and
cmp
jne
ret
jmp
mov
or
scas
repnz
sar
fucomp
ss
jne
inc
gs
(bad)
mul
mov
in
cmp
push
jnp
(bad)
mov
xchg
or
mov
int3
out
icebp
add
dec
imul
mov
sbb
(bad)
dec
pusha
or
and
xchg
sbb
std
aaa
mov
xor
jp
mov
xlat
and
out
pop
ficom
fs
or
mov
mov
fisub
pop
out
pop
dec
(bad)
aam
sub
aad
and
test
(bad)
cmc
push
jle
shl
lods
sbb
movs
cmp
jge
imul
gs
pop
push
or
das
ja
pop
jle
cmp
dec
iret
or
loopne
lahf
sbb
jb
test
sub
dec
sub
addr16
or
test
daa
ds
lock
dec
cmps
add
push
inc
push
push
(bad)
pushf
mov
cmps
xchg
jmp
mov
fimul
sti
data16
xor
or
adc
call
inc
adc
fidiv
pop
fcomi
lods
jecxz
test
ins
xchg
xchg
and
mov
movs
repnz
cmps
mov
cmps
call
out
fwait
xchg
scas
pop
arpl
aam
sbb
fcom
jne
cmc
pusha
(bad)
push
outs
add
mov
fwait
movs
js
pop
jbe
mov
pop
lods
xlat
mov
stc
scas
cmps
stos
shl
mov
dec
cmp
sbb
call
sbb
mov
add
iret
jb
jb
lea
dec
and
xor
jmp
ror
xchg
mov
xor
inc
inc
or
arpl
aas
test
and
int
ins
push
inc
mov
shr
(bad)
jecxz
call
cld
mov
fild
mov
mov
sub
(bad)
loopne
stos
mov
cld
or
or
fucomip
cdq
sbb
xchg
dec
mov
dec
in
retf
mov
xchg
out
out
dec
pop
mov
xchg
sbb
repnz
lods
fstp
enter
adc
aaa
xlat
push
loop
mov
imul
cmps
add
cmp
aam
push
ror
out
fimul
stos
mov
in
or
or
jg
push
mov
dec
frstor
leave
cli
inc
mov
cld
jg
ss
scas
add
int
mov
push
mov
lods
pop
test
leave
xlat
adc
call
push
pop
ror
or
mov
jmp
loopne
add
adc
xlat
hlt
or
pop
cdq
cmp
in
sahf
cmc
mov
mov
repz
cmp
(bad)
dec
fucom
mov
fldcw
xchg
test
jp
daa
jl
out
outs
xlat
and
scas
retf
imul
fmul
jb
out
lock
inc
xchg
sbb
xchg
scas
inc
dec
in
pop
xor
add
dec
(bad)
or
div
mov
imul
sub
pop
pop
cmp
aas
aam
mov
retf
add
cld
ds
xchg
mov
out
push
dec
adc
lods
and
ja
pop
xor
hlt
mov
int
pop
cdq
rcl
mov
push
mov
imul
jge
mov
dec
loope
mov
sbb
inc
daa
jmp
sbb
das
repnz
adc
clc
push
mov
cmp
int3
aad
inc
aad
stos
pop
jnp
sub
imul
in
ins
dec
xor
add
xchg
bound
adc
stc
test
sub
mov
shr
mov
sub
call
mov
cwde
pop
inc
mov
fmul
pop
xchg
xor
(bad)
fsubr
mov
pop
sub
pusha
mov
out
jo
ret
(bad)
outs
pop
cld
clc
and
dec
mov
pop
test
data16
les
aad
out
or
das
and
stos
mov
mov
mov
mov
loopne
xor
or
dec
cmps
xchg
and
dec
ror
mov
adc
outs
call
(bad)
(bad)
out
adc
div
pushf
cwd
xlat
imul
(bad)
and
jmp
sbb
mov
sbb
push
les
xchg
shr
jo
arpl
ins
popa
mov
call
xchg
mov
xchg
push
adc
xor
shl
(bad)
idiv
icebp
jmp
sti
cmc
sub
fidiv
into
dec
push
xchg
adc
enter
xchg
adc
sbb
jp
jae
or
iret
fidiv
jmp
aam
dec
data16
mov
leave
lock
mov
imul
int3
frstor
adc
scas
imul
mov
cli
test
fmul
jmp
adc
push
fstp
lock
xchg
dec
mov
shl
pop
in
test
mov
or
rol
and
nop
inc
data16
sbb
mov
fist
xchg
enter
pop
daa
and
jl
push
jb
jbe
mov
pop
lea
cwde
mov
pop
xor
pusha
in
dec
or
sub
push
pop
adc
in
mov
fxrstor
aaa
push
cmps
cmc
jnp
jnp
shl
shl
mov
sbb
les
push
in
pop
and
jb
arpl
test
and
xchg
push
cmps
(bad)
rol
shl
or
adc
cmc
int
into
les
push
cmp
push
pop
add
mov
pop
add
add
push
or
rol
inc
fmul
jne
sub
xchg
hlt
sbb
mov
scas
sahf
test
(bad)
(bad)
fldenv
bswap
scas
cli
inc
in
inc
fadd
inc
cmp
or
aad
fiadd
movs
push
clc
inc
test
sub
icebp
mov
sbb
test
and
imul
not
sbb
xor
mov
dec
pop
dec
(bad)
mov
pop
sbb
(bad)
enter
push
mov
fmul
mov
das
inc
ret
mov
in
jle
sub
mov
mov
shl
(bad)
push
iret
jecxz
or
and
sahf
cmp
mov
fiadd
test
xchg
ret
inc
sub
xchg
pop
das
cmc
fnstsw
lds
push
leave
aam
mov
adc
mov
lea
or
adc
stc
pusha
bound
or
and
mov
add
mov
clc
xchg
dec
sub
mov
sbb
cmc
pop
push
out
lea
sbb
push
inc
sub
cs
ficomp
push
inc
jecxz
aas
popf
retf
or
in
js
arpl
dec
adc
sub
pop
fld
psrlq
mov
xor
lea
inc
sbb
jle
sub
sub
sub
push
test
xchg
lea
push
lods
ret
sub
(bad)
fisub
ret
fidiv
js
push
dec
pop
sub
out
in
repnz
jg
push
aam
xchg
dec
jmp
int3
push
ins
loop
dec
sbb
lods
cmp
sbb
stos
call
cmc
sbb
and
(bad)
fisub
(bad)
xchg
xchg
cwde
jno
ss
adc
sbb
out
pop
jbe
xchg
ins
mov
test
es
ror
inc
pop
mov
retf
or
movs
or
mov
jne
(bad)
repnz
ss
push
dec
movs
mov
push
cs
cmp
mov
icebp
mov
adc
pop
or
pop
fnsave
inc
cmps
dec
cdq
lds
fs
mov
mov
addr16
mov
mov
mov
xchg
push
pop
and
xor
cmps
cmp
cmp
jnp
pop
mov
sbb
leave
and
adc
repz
or
mov
xor
loop
in
xchg
add
jnp
jne
xor
sahf
and
xchg
mov
mov
stos
in
xchg
mov
lods
sub
(bad)
js
push
inc
adc
xchg
retf
add
scas
ret
icebp
inc
(bad)
(bad)
mov
das
push
or
cdq
cmp
aad
(bad)
or
cwde
and
mov
xchg
mov
cdq
inc
(bad)
dec
fbstp
lods
js
ja
scas
pop
jbe
clc
jbe
sbb
jmp
pop
in
sub
fwait
cmc
xchg
mov
fucom
pop
les
outs
stos
jne
pop
fdiv
repz
stos
dec
nop
sbb
fs
inc
jge
in
or
fsubr
fadd
jae
out
int
xlat
xchg
push
mov
int3
jbe
pop
shl
jne
dec
fwait
xchg
test
dec
fcomp
call
and
call
inc
mov
sbb
(bad)
mov
mov
or
mov
or
in
xchg
in
pushf
stc
inc
or
call
fs
add
imul
out
jae
in
mov
xchg
mov
lahf
sar
movs
sub
(bad)
push
push
push
fs
push
out
mov
dec
mov
int
xchg
jmp
jmp
call
dec
xor
add
sahf
mov
call
jmp
jmp
test
lea
add
push
fs
adc
push
push
aam
jecxz
jle
mov
cmp
and
(bad)
pop
sub
push
or
aam
daa
jb
adc
call
or
aam
push
inc
stos
retf
and
jbe
(bad)
jle
or
xchg
sbb
imul
mov
lea
xchg
and
lock
clc
inc
loope
xlat
outs
in
xchg
mov
inc
call
adc
in
cmp
and
pop
push
cmc
xchg
hlt
ror
jno
push
cmp
mov
stos
fistp
xor
iret
iret
push
rcl
mov
ins
pop
inc
and
or
popf
sbb
sbb
inc
test
gs
leave
mov
jle
aam
mov
mov
jne
adc
jmp
jo
je
mov
mov
sbb
hlt
pop
mov
fisub
pop
loope
je
into
xor
outs
sub
cmp
mov
sbb
dec
jns
nop
adc
jb
jp
arpl
nop
cdq
repnz
outs
repz
mov
cmp
int3
or
jmp
fadd
repz
aas
fnstsw
sub
arpl
cs
dec
sahf
call
adc
hlt
xchg
cmp
cli
(bad)
mov
jmp
mov
jb
xchg
mov
adc
jg
sbb
ficomp
xor
cmp
in
call
lock
xor
shr
cdq
sti
sbb
fiadd
mov
or
repz
hlt
shr
aas
inc
and
push
add
ins
cmps
cmps
cdq
mov
or
xlat
ins
mov
repz
sub
dec
and
stc
(bad)
gs
xchg
dec
mov
jmp
add
xor
add
mov
clc
sbb
bound
bound
ja
repz
inc
xor
ins
fdivr
xchg
xor
shr
xor
mov
shl
inc
push
mov
les
cmp
xchg
mov
int3
cmp
and
xor
call
fnstenv
dec
mov
jmp
js
out
add
jne
add
es
sub
ja
and
test
mov
mov
(bad)
nop
outs
ror
jmp
mov
inc
cmc
fsubr
jecxz
and
cmc
pop
fcomi
pop
push
mov
ja
sub
jle
jae
fisubr
inc
imul
push
in
fisubr
or
jns
adc
mov
cmc
je
xor
mov
jg
sub
jo
shl
sbb
bound
jno
mov
push
mov
in
scas
xlat
and
inc
mov
retf
xchg
or
sbb
aad
or
mov
fstp
(bad)
int
test
xchg
mov
cli
sbb
(bad)
ds
loope
shl
pop
and
data16
mov
jecxz
test
sub
idiv
pop
inc
pop
daa
aad
lods
aas
in
dec
out
add
add
movs
and
int3
pop
sbb
dec
or
shl
mov
daa
push
push
lods
dec
in
mov
pop
mov
cmp
cmps
push
fidivr
test
xor
adc
inc
push
mov
out
jecxz
ss
outs
mov
jmp
mov
sbb
xlat
cld
imul
inc
scas
fwait
jp
inc
xchg
cmp
mov
jecxz
cmps
dec
add
daa
test
push
cmps
hlt
push
add
mov
mov
in
sub
mov
pushf
cmp
adc
sbb
stos
mov
and
(bad)
dec
ret
push
fbstp
inc
loope
daa
je
adc
inc
dec
and
test
push
sbb
test
gs
and
inc
cmp
rcl
or
int3
fstp
call
ins
adc
inc
and
inc
mov
mov
popw
sub
out
repnz
loopne
stos
gs
aas
mov
data16
inc
mov
add
add
fist
sub
sar
repz
sub
jbe
adc
inc
idiv
stc
push
call
call
es
les
adc
cdq
pushf
cwde
imul
loop
pusha
xor
imul
pop
sahf
mov
shl
sub
ins
in
and
jo
inc
xor
inc
lds
ja
xor
lods
dec
aas
outs
ret
sub
sbb
xchg
pop
lahf
dec
imul
mov
dec
xlat
add
cs
adc
test
dec
in
mov
idiv
fist
jmp
lds
std
ror
mov
jg
sbb
std
xor
inc
jno
in
and
push
out
fs
(bad)
pop
inc
popf
xlat
fisub
and
and
inc
mov
test
inc
mov
push
shr
push
(bad)
jnp
ret
sbb
pop
add
(bad)
int
mov
pop
add
data16
sbb
repnz
in
call
jmp
lods
inc
fst
push
pop
cmp
adc
jo
pop
sub
jae
xchg
imul
out
mov
cmp
dec
jp
cli
ret
lods
add
mov
in
mov
adc
mov
mov
mov
loope
js
pop
outs
pop
push
push
jnp
push
dec
adc
shr
rcr
scas
or
inc
popf
sbb
cmp
add
fnstenv
cli
or
cli
mov
mov
sbb
ret
pop
push
repz
neg
and
movups
or
sbb
and
jecxz
xchg
mov
mov
mov
cmc
jbe
mov
dec
out
out
lods
cmp
add
xchg
je
ja
(bad)
data16
hlt
mov
push
retf
hlt
retf
call
mov
stos
ss
or
or
pop
xor
mul
xchg
push
in
cmp
push
push
sbb
inc
dec
mov
mov
adc
stc
fwait
mov
sbb
loopne
and
loopne
cmp
sahf
inc
imul
loop
adc
hlt
fnsetpm(287
ins
or
cmps
lds
hlt
ins
adc
lea
aas
(bad)
cld
pop
jnp
xor
ins
dec
inc
mov
dec
mov
pop
push
xor
pusha
push
mov
mov
xchg
dec
push
or
and
in
cmp
sbb
jge
cld
jecxz
mov
bound
or
stos
lahf
cld
mov
call
add
mov
push
cs
or
xor
pusha
mov
aam
loop
popa
js
lds
in
mov
bound
xlat
out
clc
jp
xchg
jle
sub
retf
add
test
test
mov
jle
inc
rcr
xor
repz
test
mov
jp
cld
shl
jle
pusha
add
push
int
xor
pop
pop
xchg
sar
adc
mov
jl
inc
arpl
jmp
loop
xor
mov
daa
std
and
add
packuswb
and
out
push
sub
jecxz
fnstenv
lahf
mov
test
out
int3
and
sub
or
retf
mov
cmc
out
mov
and
mov
adc
mov
mov
sub
xchg
push
mov
into
cmc
cmp
xor
xchg
or
add
es
pop
sub
and
movs
sub
test
xlat
cmp
cdq
inc
adc
cmp
lock
jg
out
js
fstp
fwait
ja
pop
cmp
std
xor
mov
adc
xlat
leave
add
push
mov
stos
sub
lods
ret
push
xlat
popf
dec
ret
mov
xchg
push
test
or
shl
(bad)
repz
aas
jmp
jg
mov
in
sub
mov
sub
inc
movs
jo
pop
and
sar
ficom
mov
sub
sbb
mov
and
es
shl
xlat
add
xor
ss
ins
jecxz
or
adc
(bad)
out
xchg
retf
adc
push
xor
sbb
rcr
add
or
jg
movs
inc
inc
ret
cmc
imul
(bad)
jl
inc
mov
jmp
adc
push
mov
push
popa
(bad)
pop
gs
jb
call
stc
adc
daa
cdq
add
xor
sti
or
inc
std
cmp
mov
arpl
test
js
inc
outs
aaa
sub
jb
sahf
xchg
jp
ret
pusha
call
cmp
cmp
jp
sub
lds
cmc
sub
inc
ret
push
ins
leave
and
jmp
inc
das
cmp
xor
cld
pop
sbb
sub
lahf
sbb
pushf
(bad)
add
fild
cmps
aas
ins
pop
jle
xlat
adc
push
mov
jb
mov
sub
pop
or
icebp
pop
dec
fiadd
retf
das
mov
dec
push
jo
les
nop
arpl
jo
jge
ss
in
loope
movs
xor
out
fcom
inc
xchg
mov
mov
repnz
pop
inc
leave
sbb
inc
lods
or
loop
push
in
lds
out
mov
add
add
push
or
test
sbb
dec
inc
add
jge
fsubr
ins
jbe
pop
dec
dec
loope
and
cmp
add
pop
mov
sub
cmp
popf
pusha
rcr
add
stc
(bad)
(bad)
cvtdq2ps
mov
ror
fs
and
ins
mov
xchg
call
bound
les
ins
ror
arpl
gs
sub
push
sbb
(bad)
rcl
call
jmp
retf
mov
pusha
and
movs
retf
jae
outs
(bad)
call
pop
pop
and
out
mov
call
or
je
mov
inc
std
lahf
icebp
in
ror
out
frstor
cmp
or
pop
inc
sbb
test
out
lods
jns
(bad)
or
out
nop
loop
das
lods
mov
(bad)
jmp
cli
mov
nop
pop
loope
mov
mov
repnz
mov
xor
in
mov
ret
cmps
dec
mov
cmps
xor
or
(bad)
cld
add
sub
fsubr
int
dec
fld
out
pop
push
cmp
jecxz
pop
mov
pop
xor
pusha
or
rcr
and
imul
mov
pop
sub
scas
add
call
sub
fcmove
cmp
pushf
popa
adc
(bad)
dec
pusha
jecxz
pop
ins
(bad)
dec
push
cld
cmps
mov
fisttp
dec
sbb
test
push
imul
pop
or
jo
(bad)
retf
mov
cli
sub
xchg
aas
(bad)
bound
fwait
dec
push
stos
daa
xor
push
mov
std
ret
push
ja
rol
pop
icebp
mul
ret
fsubp
hlt
scas
mov
mov
pop
adc
mov
jmp
(bad)
outs
sbb
xchg
shl
aam
cmps
jp
mov
push
or
jmp
loope
jmp
fistp
iret
out
mov
fstp
test
adc
ja
push
mov
repz
pop
in
jg
xchg
call
outs
movs
clc
ret
push
push
pop
and
aad
movs
ds
jae
and
pop
sub
sti
cmps
(bad)
xor
mov
in
pop
mov
lahf
mov
jl
fucomp
lahf
jle
and
adc
sbb
nop
out
aad
sub
pusha
sbb
(bad)
nop
cld
pop
in
push
cli
leave
xor
(bad)
or
sbb
xchg
rol
xor
add
xor
fild
or
gs
(bad)
or
mov
mov
xchg
sub
iret
dec
push
and
cmps
int3
test
fstp
test
sub
and
add
sbb
mov
(bad)
ins
mov
lds
test
movs
fild
out
cmps
xchg
mov
das
xor
dec
retf
sar
jbe
cmp
mov
xor
shl
adc
jmp
push
loopne
pop
xchg
add
jl
dec
lods
and
xchg
idiv
push
and
add
xor
inc
adc
iret
lea
(bad)
test
mov
sbb
ss
sbb
(bad)
dec
ds
call
mov
cmp
jmp
pop
loope
inc
dec
iret
loope
push
jb
or
loopne
cwde
in
push
inc
push
inc
je
inc
call
xchg
neg
stc
sub
aam
mov
cmp
lods
cmps
(bad)
jle
aaa
sub
sub
pop
mov
leave
call
jo
xor
outs
inc
icebp
cs
inc
sbb
leave
mov
dec
push
gs
hlt
popa
mov
inc
js
int
ret
cdq
hlt
dec
scas
xor
hlt
outs
push
sbb
jge
and
call
imul
jnp
mov
outs
fld
cmp
dec
push
inc
bound
js
jne
cmp
inc
adc
dec
js
test
clc
mov
mov
fbld
sbb
scas
sub
xchg
inc
ror
push
movs
hlt
inc
mov
inc
test
(bad)
sbb
and
sahf
bound
dec
mov
pop
sbb
cmc
xor
pushf
(bad)
fcom
add
cmp
sbb
inc
and
mov
jl
test
dec
jmp
dec
icebp
fimul
lods
mov
mov
inc
push
pop
jg
xor
adc
push
and
or
cmp
adc
dec
jb
dec
dec
scas
cmc
fisttp
cmp
dec
mov
mov
xchg
jno
les
cmp
adc
rcr
xlat
cwde
push
lods
out
shl
adc
pusha
add
je
push
mov
pop
sub
xchg
iret
ror
sti
test
inc
popf
(bad)
fldcw
xchg
imul
jmp
mov
ja
hlt
dec
lea
pop
into
das
aam
mov
scas
ja
mov
push
nop
test
mov
adc
xlat
cld
or
inc
ins
dec
mov
cdq
int
icebp
mov
mov
pop
xchg
call
mov
int3
sub
cmp
cmc
xor
sub
fmul
cld
mov
dec
loop
or
adc
lea
icebp
add
sar
pop
cs
scas
add
mov
repz
cmp
ret
pop
shr
hlt
inc
outs
add
sbb
div
cli
fs
fbstp
pusha
scas
shl
mov
mov
dec
sub
dec
dec
or
xlat
jns
sar
xchg
movs
call
(bad)
fisub
fwait
stc
mov
and
mov
aad
test
dec
xor
mov
dec
push
jno
mov
aam
int3
pusha
push
out
in
lods
dec
test
and
loop
sub
(bad)
int3
or
pusha
fcmovnu
adc
fisubr
push
mov
fist
jbe
xlat
scas
rcr
adc
(bad)
mov
and
popa
call
inc
cmp
xchg
jns
fyl2x
cld
xchg
mov
ins
fimul
jb
jae
outs
(bad)
dec
mov
data16
mov
dec
mov
mov
mov
int
mov
fnstsw
les
or
mov
xchg
mov
ror
push
xchg
cmp
xor
fcomp
lock
dec
jbe
fild
aaa
inc
adc
or
lods
xchg
loopne
fisttp
push
cli
call
adc
inc
mov
pop
and
(bad)
(bad)
int
jns
repnz
into
in
mov
out
jnp
mov
imul
ret
jge
loop
test
adc
jnp
int3
addr16
pop
cmp
fistp
mov
jmp
sbb
push
sahf
xor
int3
xor
jmp
das
jp
in
and
pushf
push
div
jo
popf
add
push
shl
xchg
mov
shl
or
push
in
mov
test
lahf
enter
adc
scas
xchg
xchg
bound
add
fwait
test
mov
xchg
fisttp
leave
arpl
sub
pop
das
pop
mov
add
or
sub
idiv
int3
ds
sbb
stc
push
xor
ret
push
mov
ret
hlt
(bad)
jo
pop
rcr
dec
test
adc
push
cld
int
cld
pop
cmps
cmp
xor
xchg
xor
inc
jmp
push
call
fadd
mov
jb
push
es
test
sbb
fadd
push
xor
shl
push
pop
push
push
data16
lds
xchg
leave
cwde
and
fldcw
imul
xchg
movs
jmp
test
xchg
or
(bad)
data16
and
push
xchg
mov
sbb
lods
add
js
mul
pop
mov
inc
into
mov
jae
push
xor
pusha
cmp
push
sub
mov
push
arpl
push
in
jno
fdivp
call
or
adc
xchg
adc
int
push
ror
and
ds
and
pop
jae
outs
mov
ds
inc
cmp
push
and
les
outs
outs
stc
jno
xchg
pop
push
test
(bad)
or
or
call
cmp
pop
in
mov
jb
add
mov
sub
xor
inc
sbb
pop
push
mov
imul
ds
inc
cmc
cmp
adc
lods
and
cmp
ds
jbe
(bad)
cmp
inc
std
js
rdmsr
xor
repnz
sub
imul
pop
repnz
mov
xchg
cmp
inc
or
add
or
fld
push
clc
js
ins
ror
xor
add
mov
lea
push
sub
fist
ins
mov
inc
jp
inc
retf
(bad)
(bad)
bnd
frstor
ins
enter
pop
add
xchg
sets
pop
je
test
sub
mov
add
jmp
sub
scas
inc
xchg
and
xor
push
pop
movs
and
inc
add
test
inc
dec
pushf
stc
mov
mov
jbe
test
fidiv
adc
scas
and
jecxz
jae
dec
js
sub
rcr
xchg
call
jmp
ret
inc
scas
xlat
dec
fld
leave
test
dec
push
jne
push
dec
add
push
mov
dec
retf
mov
adc
(bad)
shr
mov
and
sbb
and
loopne
out
imul
mov
lods
mov
dec
(bad)
outs
mov
pop
sbb
sub
test
mov
pop
fcom
pop
stc
mov
movs
jl
pop
xchg
xor
and
jmp
jno
(bad)
das
bound
sbb
mov
mov
jp
test
ror
xchg
pop
adc
repz
xor
jae
jae
aaa
jmp
loop
rcl
addr16
sbb
das
push
arpl
push
adc
add
xchg
(bad)
mov
xchg
test
xchg
lds
sar
push
mov
daa
mov
ss
in
movs
mov
cmp
mov
xor
stos
xor
movs
into
mov
xlat
add
mov
dec
fidiv
xlat
icebp
pop
arpl
inc
cld
push
mov
jo
and
and
retf
retf
xchg
pusha
jb
or
mov
push
pop
(bad)
fild
xchg
push
inc
stc
dec
fs
daa
into
enter
mov
pusha
loopne
test
push
stc
out
mov
es
sbb
sbb
(bad)
fisub
and
daa
pop
fsubr
jb
out
xor
mov
int3
mov
jg
sti
mov
and
jmp
call
jne
pop
jp
repnz
inc
pop
(bad)
pop
mov
xchg
mov
pop
xor
mov
add
jmp
fidivr
jmp
cmp
inc
in
loope
jecxz
cmp
rcr
push
mov
jl
aam
mov
xchg
dec
jmp
int
xchg
fdivr
fwait
lds
cmc
dec
xchg
cld
jge
cmp
push
xor
sub
push
mov
and
sbb
movs
ins
mov
sbb
mov
jno
int3
adc
call
cld
daa
sbb
sub
add
out
and
xor
fdiv
lea
mov
pushf
inc
push
sub
jae
dec
stos
cmp
xchg
add
add
jecxz
shr
add
cdq
add
stos
pop
mov
xor
ins
xchg
adc
cdq
mov
mov
mov
lea
mov
mov
add
inc
pop
ror
or
cmp
xchg
jg
jg
cmp
repnz
pushf
cs
cmc
sti
ins
cmp
push
and
xor
test
js
add
imul
or
and
jg
mov
lock
add
retf
push
jl
or
in
mov
je
aas
pop
xchg
sub
stos
sub
das
dec
movsx
mov
sbb
mov
cli
rcr
stos
sub
test
popa
sub
rcl
push
and
adc
cmp
aaa
lds
ss
cmps
xor
mov
push
xor
pop
sbb
dec
sbb
adc
add
popf
test
mov
ins
pusha
and
xchg
jg
add
adc
imul
lods
inc
and
ins
sub
addr16
sbb
mov
and
or
ds
mov
mov
push
add
out
jb
mov
test
mov
outs
sub
sbb
jmp
mov
sbb
(bad)
add
je
dec
in
sub
mov
dec
call
test
jg
pusha
push
add
xchg
sub
adc
clc
shl
aam
int
sub
push
jmp
ret
sbb
xor
test
mov
jmp
loope
cwde
or
mov
mov
sbb
sbb
jno
or
test
pop
in
jmp
out
neg
pop
div
mov
cdq
test
mov
dec
jg
fisub
add
adc
push
icebp
pop
lods
sub
cmp
jns
or
pop
push
cs
add
push
ins
add
cwde
(bad)
dec
and
pop
push
fs
sahf
fcom
push
sub
dec
xchg
dec
xor
rcr
rol
adc
popa
aaa
pop
(bad)
aam
outs
inc
add
xchg
out
or
mov
lods
adc
jle
jecxz
or
inc
push
add
adc
inc
fs
mov
jno
jmp
and
push
cmp
add
pushf
jg
xchg
dec
sbb
mov
lods
sub
fdiv
xor
dec
jmp
and
mov
fadd
lock
leave
mov
jns
hlt
pop
or
inc
dec
inc
in
push
and
rcr
repnz
fs
adc
jae
push
push
je
xor
push
adc
mov
pop
pop
(bad)
adc
pop
jge
mov
sar
dec
ins
rep
data16
call
or
rep
fist
xchg
daa
inc
fcom
sub
push
adc
add
iret
es
or
jmp
ins
les
les
pop
push
std
popa
shr
fist
cwde
dec
sub
and
test
clc
in
push
sub
iret
in
into
mov
mov
movs
retf
adc
and
jbe
mov
fst
mov
outs
push
cmc
icebp
std
ins
inc
adc
(bad)
rol
jne
xchg
adc
mov
clc
ret
mov
repz
movs
repnz
jg
jns
push
and
adc
or
scas
jge
fwait
mov
imul
adc
loope
dec
ins
mov
mov
inc
inc
xchg
sub
in
jg
mov
je
mov
ja
jb
mov
mov
imul
adc
js
adc
jle
shr
xor
cdq
inc
adc
fadd
mov
cmp
adc
mov
dec
jle
or
inc
or
xor
pop
adc
nop
neg
cs
and
int3
into
sbb
daa
inc
movs
(bad)
pop
push
dec
(bad)
les
mov
cmp
imul
cli
push
lea
pop
or
mov
cli
mov
out
mov
and
test
sahf
xchg
push
ds
and
mov
push
sub
or
pop
lods
into
jg
mov
sub
inc
jp
inc
lods
pop
sub
std
int
aas
in
inc
jle
jp
out
cmp
sti
mov
aaa
inc
mov
aas
popa
les
jp
pop
sbb
adc
adc
test
fs
fldpi
jp
dec
mov
(bad)
push
mov
ds
cmp
push
sbb
xchg
jg
stc
and
outs
imul
jp
push
addr16
inc
loope
mov
jo
jbe
test
shl
jne
dec
daa
inc
adc
mov
mov
add
xchg
out
and
jae
test
xlat
dec
jg
xchg
aas
push
(bad)
not
nop
inc
jge
mov
mov
inc
fwait
mov
jno
daa
inc
fnstcw
inc
movs
lahf
and
imul
jg
xor
jle
mov
int3
cmc
dec
in
retf
lods
mov
sub
mov
cwde
mov
pop
mov
out
adc
mov
gs
mov
sbb
icebp
jae
push
dec
not
adc
test
xor
cmp
in
add
sbb
out
sbb
into
icebp
dec
xor
xchg
adc
sbb
(bad)
(bad)
mov
ins
lea
jno
nop
(bad)
adc
adc
dec
and
shl
sar
sbb
hlt
(bad)
or
cwde
sbb
test
js
sub
pop
aad
pop
test
inc
dec
inc
dec
xor
add
shr
imul
pop
das
sub
or
push
(bad)
dec
js
cmc
test
xchg
lahf
xchg
ror
movs
icebp
push
jnp
jmp
inc
in
test
fistp
mov
cmp
int3
(bad)
push
mov
pop
out
iret
mov
jp
mov
pop
std
movs
jg
adc
mov
jo
sbb
pushf
push
sub
push
dec
rcl
jl
(bad)
out
fidivr
cmp
enter
punpckhbw
loope
pop
mov
jae
push
sub
sub
and
or
adc
(bad)
jo
fs
cli
xor
out
jmp
add
mov
aam
mov
scas
js
mov
mov
ret
mov
cmp
add
mov
mov
add
cwde
and
dec
sti
fs
jecxz
scas
pslld
scas
xor
and
loopne
test
std
cmp
aas
xchg
aaa
movs
inc
stos
arpl
and
dec
fs
stc
ret
shl
add
mov
pushf
pop
repz
out
arpl
arpl
(bad)
test
jmp
mov
add
pop
mov
nop
jo
mov
jnp
iret
sbb
xor
inc
ficomp
or
jg
mov
pop
mov
cdq
setg
addr16
ret
retf
xor
enter
and
push
and
cmc
gs
aam
arpl
mov
sub
xchg
sbb
retf
cmps
arpl
inc
cmp
xchg
nop
xor
add
jl
(bad)
pop
mov
ss
adc
repnz
(bad)
in
sub
fbstp
cwde
adc
hlt
(bad)
nop
pop
add
test
ds
ins
mov
sub
cmp
scas
fs
(bad)
mov
fsubr
test
push
mov
mov
or
xchg
adc
rcr
rol
cld
mov
lahf
aam
inc
mov
add
sbb
test
jp
stc
jo
mov
bound
dec
jge
sahf
std
inc
and
adc
jecxz
add
enter
fs
leave
jae
jno
mov
pop
dec
push
lds
pop
mov
xchg
jne
push
fstp
aaa
in
push
in
arpl
js
fst
das
cmp
std
clc
inc
xor
addr16
pusha
in
out
sub
hlt
push
inc
call
inc
mov
xchg
cmp
sahf
mov
push
stos
dec
ret
movs
xchg
or
mov
bound
icebp
jae
inc
inc
ret
lods
movs
mov
add
and
or
pop
mov
imul
sub
add
sbb
aas
stos
enter
std
mov
and
lock
movs
sbb
in
push
leave
mov
out
cld
leave
jno
pop
mov
cmp
pop
add
pop
movs
adc
jecxz
rol
xlat
dec
adc
sub
push
fist
xchg
call
cld
shl
ins
mov
jmp
and
or
or
mov
pop
enter
(bad)
or
mov
dec
mov
fcmove
pop
jns
inc
inc
sub
aas
int3
cmp
mov
in
addr16
push
mov
jno
sbb
inc
inc
pop
and
fcompp
sub
int3
push
jp
mov
pop
scas
test
mov
mov
mov
adc
dec
push
stos
ret
ret
xchg
imul
jmp
cmp
repnz
mul
popa
cmp
test
imul
mov
or
je
mov
push
js
bound
adc
retf
cmps
xchg
pop
icebp
xchg
xlat
add
xlat
push
pop
mov
sar
pop
xor
xchg
sbb
add
(bad)
pusha
dec
jle
pop
jnp
jg
fdivr
aad
daa
mov
push
dec
mov
(bad)
mov
adc
iret
mov
ja
retf
xchg
cli
cmps
jl
xlat
cmp
mov
(bad)
je
ror
ss
(bad)
cmp
gs
inc
cmp
push
pop
push
mov
add
dec
dec
xchg
mov
ss
out
and
mov
jg
test
call
outs
jns
dec
mov
cmp
mov
retf
pushf
cmps
leave
mov
jecxz
loop
aaa
fstp
push
jne
inc
adc
xor
dec
aas
add
mov
mov
out
add
cld
bound
pop
in
(bad)
dec
jae
icebp
mov
je
xchg
mov
in
(bad)
in
push
dec
aam
ins
shr
mov
xchg
ds
and
mov
fnsave
push
jl
or
nop
aas
xchg
mov
jmp
sub
push
cli
imul
cmp
out
int3
leave
cmps
ss
out
mov
lea
adc
jge
inc
test
sub
stc
jge
loope
add
xchg
repnz
ret
and
push
pop
rol
nop
add
aad
popa
sub
cdq
xlat
jg
fcomp
and
and
adc
cmovns
in
das
stos
call
nop
xchg
in
mov
movs
stos
(bad)
bndstx
outs
jb
push
int3
into
sbb
daa
cmp
fs
loope
aaa
cmp
mov
lds
xchg
int
cmc
in
pop
(bad)
jno
call
nop
aad
jbe
mov
jp
xchg
sbb
scas
daa
rcl
dec
sti
aad
push
push
shr
call
add
inc
mov
and
cmp
push
aas
pop
inc
pop
jle
add
xor
ss
mov
dec
xchg
sbb
fidivr
lods
sar
dec
dec
sub
xor
pop
dec
int
ds
ss
lds
mov
ins
lock
xor
dec
test
fsubrp
pop
xchg
pop
jecxz
hlt
mov
push
addr16
push
out
stos
jge
push
xchg
and
xchg
lds
mov
sbb
rol
cdq
das
call
cmps
fwait
jb
ficomp
cs
sbb
pop
xchg
dec
leave
es
adc
push
maxps
out
mov
sti
xchg
cld
movs
jno
cmps
mov
jg
mov
out
or
jmp
(bad)
sub
sub
stos
xchg
rcl
or
mov
dec
dec
outs
fiadd
in
les
fdivr
out
fnsave
inc
pop
and
neg
pop
scas
clc
xchg
scas
or
add
ret
imul
stc
outs
sahf
jecxz
xchg
fwait
cmp
hlt
out
imul
fcmove
daa
jne
dec
aam
push
xor
retf
pop
mov
xchg
aas
in
xor
dec
std
movs
(bad)
imul
inc
cmp
outs
adc
mov
mov
(bad)
xchg
xchg
xchg
dec
loope
or
pop
nop
or
inc
ss
idiv
pop
push
inc
pop
je
and
pop
mov
mov
sub
popa
call
out
icebp
fsubr
jle
mov
mov
int
aas
imul
test
cmp
mov
fnsave
leave
(bad)
daa
aaa
cmps
inc
jecxz
add
mov
pop
test
in
push
add
addr16
aaa
mov
xlat
push
mov
aam
or
fldenv
in
jle
adc
addr16
mov
test
and
arpl
mov
repz
xchg
mov
adc
push
shr
out
jg
(bad)
in
es
jl
fdivr
mov
test
mov
(bad)
sbb
adc
push
and
clc
sbb
out
dec
imul
loope
mov
cld
mov
inc
aad
stos
mov
loope
mov
lahf
sbb
cmp
aam
cmp
hlt
call
data16
push
ja
cmp
sti
ins
push
rol
(bad)
outs
in
dec
imul
xchg
pop
jp
(bad)
mov
inc
out
cmp
jecxz
(bad)
loopne
cmp
and
or
xor
jmp
adc
jnp
pop
mov
push
repnz
xor
mov
in
mov
dec
mov
cdq
dec
mov
sub
bswap
cmp
pop
and
addr16
push
xor
jns
loop
add
jmp
cmp
push
xchg
jecxz
adc
shl
outs
aaa
push
lea
or
sub
fucompp
inc
dec
push
out
enter
cmps
test
push
loope
iret
mov
mov
jb
push
loopne
adc
cmps
xchg
rol
cmp
stc
xchg
mov
dec
mov
adc
and
mov
lods
int3
dec
shl
aad
jns
ins
dec
mov
cdq
adc
sbb
scas
addr16
adc
and
test
jle
pop
(bad)
retf
add
(bad)
sbb
imul
scas
jp
rcl
int
adc
adc
rcr
loope
in
xlat
cmp
jge
mov
jb
pop
frstor
push
imul
rcr
adc
push
aam
push
jle
adc
in
cmp
imul
pop
inc
stos
pop
addr16
jb
cmp
daa
pushf
add
inc
data16
js
mov
cmp
push
cmps
ss
cld
pop
lods
mov
jb
loop
sbb
mov
lahf
jg
xchg
mov
iret
and
neg
mov
xchg
pop
(bad)
and
in
out
lea
mov
les
or
jb
xchg
fucomp
push
cmp
fcmovne
aam
pop
and
int
pop
mov
mov
scas
fdivr
add
loope
das
dec
sub
in
(bad)
adc
mov
cmp
xchg
pop
or
sub
sub
xchg
xor
lods
pop
mov
jmp
pusha
dec
adc
inc
dec
sahf
jge
ins
lods
in
fbld
push
jge
push
pop
cwde
in
sbb
mov
adc
dec
in
test
repz
aas
push
ins
outs
push
das
pop
xchg
fadd
pop
das
lods
in
xchg
outs
shl
mov
ins
cmp
cmps
mov
loope
add
mov
fs
cmp
sbb
and
out
mov
add
inc
mov
in
in
mov
cmps
(bad)
push
add
sbb
cmps
or
sbb
js
fsubr
iret
dec
push
pusha
arpl
push
add
stc
pop
add
or
imul
cmovle
inc
add
push
xchg
lods
fnstsw
out
dec
std
xlat
mov
ror
mov
sub
sub
outs
shl
shl
sbb
push
stos
push
jg
shr
aam
int
mov
fsubr
pop
lods
ja
enter
fcmovb
in
or
inc
dec
je
je
and
cwde
inc
mov
out
enter
test
bts
push
pusha
movs
xor
addr16
fisub
lds
scas
push
mov
sar
sub
xchg
mov
jne
icebp
stos
jmp
and
ret
xor
jae
jl
push
mov
or
fstp
and
push
in
xor
sbb
push
pop
fdiv
popf
xor
popaw
les
lods
fadd
mov
call
movs
shl
stc
jp
mul
mov
mov
stos
leave
lahf
out
xchg
leave
aam
test
int3
cwde
leave
iret
cmc
mov
ss
or
mov
(bad)
pop
fwait
out
jl
lock
aam
out
xchg
call
loopne
or
sub
or
and
sub
aaa
jge
xor
pop
inc
and
shl
mov
nop
cli
xchg
push
int
(bad)
cli
sub
leave
pop
outs
jle
push
xchg
fs
mov
int3
mov
inc
add
mov
addr16
mov
xchg
(bad)
or
cmc
enter
loop
mov
outs
xor
mov
push
stos
fdivr
xor
sub
neg
xor
lea
js
jmp
scas
push
jmp
add
outs
cmc
adc
add
inc
mov
add
sbb
ret
mov
sub
sti
mov
out
cmp
icebp
xor
jnp
xchg
mov
js
cmps
out
mov
outs
sub
enter
lods
popa
and
inc
add
rol
dec
popa
adc
or
call
dec
cmp
and
or
lock
dec
aad
popf
daa
mov
xor
jmp
xor
in
dec
inc
mov
ds
rol
mov
repz
aad
mov
jp
mov
out
rol
(bad)
jnp
push
push
outs
call
repnz
push
test
cmp
or
mov
xchg
xchg
nop
dec
clc
dec
nop
mov
cwde
pop
lods
xor
ret
out
or
fadd
xor
inc
(bad)
dec
dec
mov
sub
int
ins
fisubr
mov
movs
repnz
out
adc
clc
mov
inc
push
movs
inc
jp
xchg
fsub
out
out
or
nop
or
mov
outs
test
lock
mov
push
(bad)
out
ret
mov
jnp
enter
das
in
cmps
int
repz
jmp
test
and
sub
xor
mov
or
xor
popa
pop
xchg
out
mov
mov
je
xchg
mov
or
lods
out
add
mov
inc
jle
pop
push
ins
xchg
cmp
imul
outs
iret
jmp
xchg
sti
mov
bound
dec
adc
movs
jge
mov
inc
andnps
adc
ficomp
and
clc
sub
(bad)
fimul
(bad)
jmp
sbb
mov
mov
stos
pop
retf
cmp
nop
sub
imul
fs
adc
(bad)
mov
push
loop
cmpxchg
add
inc
sub
jne
jmp
sbb
and
jo
jle
imul
not
std
pop
push
mov
and
jno
out
mov
loope
lds
xchg
or
stos
dec
sbb
jo
aaa
popf
and
or
pushf
dec
cmp
mov
dec
push
add
repz
in
xor
cmc
push
adc
and
clc
rol
fmul
cmp
push
cmp
mov
in
shl
(bad)
or
sti
(bad)
into
pop
or
jmp
jge
mov
push
jne
pop
daa
jge
xor
fild
fwait
dec
xor
sub
sbb
daa
shr
clc
aaa
sar
jmp
adc
adc
imul
iret
push
mov
retf
pop
push
out
leave
push
(bad)
popa
add
adc
cld
pushf
div
push
fs
arpl
add
or
pop
test
gs
fiadd
push
ja
inc
xchg
leave
or
jmp
daa
loope
pop
aad
imul
add
push
movs
mov
cs
jb
enter
mov
inc
cmps
mov
call
clc
aam
add
or
rcr
pop
mov
stos
shr
sahf
ss
mov
xlat
xchg
pop
fadd
(bad)
stc
cmps
cdq
ret
inc
movs
jbe
clc
jecxz
jno
and
mov
popa
xchg
imul
jl
addr16
rcr
in
or
xchg
pusha
sbb
pop
jl
dec
not
ja
(bad)
or
add
jmp
mov
test
and
lea
bound
fild
shl
sbb
outs
xor
or
les
lods
aad
add
add
ss
adc
out
or
inc
ret
fisubr
inc
xchg
ja
fs
add
imul
cs
sub
clc
sbb
ror
sub
mov
add
pop
lds
sub
jne
mov
xchg
pop
adc
daa
mov
fcomp
(bad)
mov
neg
dec
rol
xor
cmp
(bad)
pop
sbb
cs
(bad)
pushf
sbb
dec
movs
test
rcr
fs
aaa
aam
jle
mov
push
ret
into
mov
ss
xlat
aam
sub
inc
pop
push
and
sbb
push
jp
call
jl
lds
in
cmp
xchg
fcomp
inc
les
mov
leave
dec
inc
dec
mov
mov
jle
cs
push
add
mov
and
adc
fwait
xchg
ret
xor
push
out
cdq
retf
dec
xor
xor
mov
push
retf
jmp
cs
test
or
daa
add
push
cmps
imul
or
call
out
iret
add
retf
(bad)
es
add
retf
mov
jl
xor
into
xor
shl
hlt
push
mov
pop
in
adc
dec
or
aad
add
enter
add
and
out
sub
std
(bad)
jl
retf
aad
mov
push
fmul
(bad)
fwait
sub
push
ret
lods
sbb
nop
pop
fimul
sar
mov
rcr
aam
scas
xchg
mov
xor
repz
mov
not
xchg
inc
in
stc
xchg
xlat
adc
cmp
mov
aaa
cmp
pop
or
push
push
xchg
push
ss
pop
fbstp
mov
mov
mov
popa
pop
out
repz
pop
xchg
fistp
sbb
aam
popa
inc
pop
mov
div
in
fnsave
ja
aam
iret
mov
data16
fild
mov
or
mov
lods
mov
xchg
and
mov
mov
push
outs
pop
mov
pop
test
jl
lods
inc
aad
es
push
add
sub
call
dec
mov
into
movs
push
(bad)
mov
add
hlt
push
fmul
pop
xchg
inc
in
ja
inc
xor
mov
jg
sbb
test
sub
sti
inc
addr16
and
gs
imul
or
lds
mov
add
mov
and
inc
clc
into
sub
or
cmp
sbb
add
mov
jb
xchg
ror
sub
cmps
clc
icebp
jbe
fcom
mov
fisub
pop
(bad)
clc
mov
jg
xchg
fist
stos
daa
mov
cmp
push
ja
xchg
add
pop
lea
push
stos
popa
mov
(bad)
jbe
cmp
ss
push
cmp
outs
enter
ins
int
or
call
mov
fldenv
int
fidiv
je
(bad)
mov
(bad)
test
xchg
scas
adc
fstp
and
and
pop
jl
nop
cmc
clc
fisubr
jbe
cmp
fisttp
mov
(bad)
pop
call
sahf
add
pop
or
sub
pop
(bad)
sub
pop
pop
mov
out
sub
and
daa
das
or
fcomp
inc
mov
sbb
imul
or
sbb
dec
iret
and
pop
xor
sbb
popf
push
sbb
lea
cdq
in
mov
inc
fiadd
pushf
ins
das
dec
retf
js
adc
mov
fs
jmp
mov
xchg
jns
dec
in
lods
dec
mov
imul
fadd
or
sub
das
and
mov
adc
or
cmp
sub
mov
push
mov
sub
and
cld
xor
jno
mov
adc
int3
in
mov
xchg
outs
fistp
add
mov
mov
sbb
push
mov
inc
inc
or
std
and
and
ret
mov
je
loope
sub
mov
push
les
and
out
(bad)
iret
in
ins
lods
lea
fadd
aad
(bad)
adc
cmp
mov
aad
mov
aam
or
rol
sti
mov
out
shl
enter
push
or
ret
push
push
cmp
xchg
clc
hlt
jb
jge
enter
xchg
add
mov
add
cmp
jmp
dec
cmps
sub
sub
test
int3
push
sub
out
(bad)
xchg
dec
and
mov
mov
jl
xchg
imul
stc
jecxz
out
ss
inc
xor
(bad)
popa
sub
add
pop
outs
or
and
pop
inc
push
sbb
mov
(bad)
jns
and
mov
pop
mov
aam
loop
jp
adc
cmps
and
jmp
fcomp
xor
mov
pop
(bad)
jg
adc
cmc
fnstsw
dec
sbb
pop
cmp
dec
imul
dec
mov
hlt
pop
retf
retf
add
lahf
outs
and
es
mov
dec
es
mov
and
dec
push
sahf
rcl
ins
cld
outs
imul
or
ins
es
std
xchg
jge
into
pusha
pushf
arpl
ins
nop
inc
lods
pop
pop
cld
aaa
hlt
cwde
push
push
outs
adc
sbb
cmp
mov
data16
int3
sahf
ficom
test
xor
dec
or
jbe
stc
cmp
fmul
mov
(bad)
fldenv
fcomp
(bad)
mov
dec
retf
jl
in
cmp
jmp
adc
int3
lahf
add
or
push
shl
cmc
mov
mov
mov
cli
loope
dec
jmp
jecxz
xchg
out
aad
ja
mov
pop
mov
xchg
fld
imul
xchg
mov
jno
pusha
loope
inc
sete
ds
mov
or
push
inc
(bad)
(bad)
or
jbe
fdivr
jbe
pop
xor
sub
xor
xor
adc
retf
mov
push
cmps
ret
mov
xchg
cmps
adc
jge
outs
gs
(bad)
push
add
fbstp
mov
pop
xor
jne
jae
add
pusha
adc
jmp
and
clc
mov
(bad)
sub
adc
test
cmc
mov
dec
cmps
mov
daa
fild
in
pop
jmp
pop
pushf
cs
out
mov
sti
push
mov
mov
jge
cs
dec
data16
or
clc
xlat
jae
(bad)
mov
pop
jbe
jns
test
repz
jmp
jmp
bound
xchg
sub
xchg
mov
fs
jbe
call
xor
xor
inc
push
xor
xor
ja
data16
ds
jae
xchg
es
add
scas
ss
sahf
icebp
(bad)
fndisi(8087
fild
sbb
adc
dec
xchg
add
xor
cdq
sbb
add
pop
addr16
jl
and
cmp
rcl
push
sub
repz
test
mov
loopne
adc
lahf
and
popf
lds
or
fidivr
xchg
(bad)
jnp
cmp
mov
test
out
cmp
mov
rcr
adc
aad
ret
int
cmps
test
pop
mov
push
inc
adc
gs
and
add
push
mov
pop
enter
mov
out
movs
in
fwait
mov
mov
(bad)
call
test
clc
fcmove
dec
or
loopne
sub
aaa
ins
jns
out
mov
es
outs
xchg
mov
mov
hlt
xchg
pushw
popa
call
adc
add
push
add
mov
leave
add
cmp
aas
cmp
jle
daa
add
mov
movs
mov
adc
(bad)
ins
or
xchg
je
fdivr
jge
pop
jne
retf
or
scas
add
dec
not
das
xlat
repz
ins
in
popf
or
cmp
xchg
lea
push
retf
or
pop
mov
aam
outs
push
cmp
push
mov
adc
cdq
cdq
cli
push
data16
adc
or
into
not
out
mov
in
sar
inc
enter
xchg
pop
icebp
sbb
cdq
pusha
xor
ja
dec
xor
arpl
xlat
mov
cmc
mov
sbb
pop
(bad)
(bad)
lock
mov
and
xor
mov
cs
or
retf
or
dec
ins
inc
imul
mov
or
ret
pushf
pop
jnp
rcl
mov
arpl
push
out
jne
cmp
mov
xchg
(bad)
push
add
add
and
push
out
data16
shr
shr
push
mov
aaa
cmp
xor
imul
xlat
out
pushf
xchg
enter
xor
push
out
push
adc
adc
retf
push
loop
push
das
lods
xor
dec
jb
inc
and
pusha
and
out
sub
add
shl
imul
(bad)
inc
jmp
jmp
cs
(bad)
mov
add
push
jb
sbb
dec
or
xor
in
pop
sti
mov
jmp
jmp
dec
(bad)
shl
enter
es
movs
loop
jbe
call
jb
mov
xor
dec
ss
repnz
ss
(bad)
rcr
js
inc
xchg
les
stos
fimul
inc
shr
jecxz
bound
scas
sahf
lods
add
pop
push
push
popf
gs
pushf
push
sub
repz
movs
mov
es
data16
dec
push
div
cld
jno
enter
out
jecxz
inc
call
xchg
cmc
xor
ficomp
ds
pop
mov
sub
adc
ds
pop
dec
leave
mov
mov
mov
arpl
(bad)
std
ds
int
dec
add
imul
outs
push
dec
pop
inc
hlt
fdiv
push
mov
(bad)
jle
fs
mov
(bad)
pusha
and
and
cs
shl
(bad)
(bad)
rol
(bad)
iret
je
xor
fdivr
add
cli
xchg
jbe
aaa
out
scas
faddp
(bad)
or
or
xor
(bad)
rcr
lods
(bad)
ds
jle
cmp
aam
scas
push
outs
ret
test
sbb
(bad)
enter
pop
cmp
push
mov
sub
xchg
test
mov
ret
xchg
or
fisubr
mov
mov
(bad)
stc
pop
dec
inc
and
inc
movs
push
and
sbb
add
ss
cs
iret
mov
cmc
fst
imul
push
sub
in
ss
into
pop
aad
mov
(bad)
shl
call
cmp
jnp
pusha
loop
or
out
xchg
fldcw
js
daa
push
push
or
test
shl
ds
inc
dec
test
lahf
fcmovnb
test
xchg
xor
shr
pusha
(bad)
adc
dec
or
mov
fadd
jbe
mov
mov
shr
movs
xor
cs
jmp
fwait
push
or
into
cmp
jl
aas
push
gs
push
push
xchg
lds
cli
aaa
push
outs
not
fild
popf
adc
test
jo
sbb
inc
lds
hlt
repnz
hlt
jb
inc
or
or
xchg
sbb
movs
mov
mov
jle
xor
fdivr
(bad)
xor
cmp
div
imul
ret
mov
sub
addr16
out
cmp
mov
push
jne
mov
popa
ret
and
push
aad
lds
js
mov
pop
arpl
jb
xor
pop
fcmovb
xchg
rcr
jge
mov
xor
inc
(bad)
outs
sbb
jge
mov
sbb
mov
fnstcw
mov
xchg
push
aaa
hlt
div
mov
imul
(bad)
popf
int
dec
and
sbb
shl
cmps
je
sbb
cli
jmp
jl
dec
xchg
nop
hlt
cmp
fcomp
xor
cmp
mov
fist
mov
and
not
pushf
pop
cmps
mov
hlt
out
pop
aaa
test
ins
mov
cdq
jle
iret
ret
fwait
mov
inc
jg
xor
lods
shr
jge
xlat
or
xchg
out
mov
in
test
call
jns
ror
mov
(bad)
fisttp
adc
xchg
out
in
in
les
jl
jns
(bad)
jp
mov
loope
adc
pusha
jmp
mov
fs
sub
adc
and
mov
mov
sbb
fchs
repz
sub
fwait
or
loopne
fiadd
xor
mov
out
popf
call
pop
ror
sti
inc
outs
inc
mov
mov
addr16
inc
jge
pop
pop
jno
pusha
mul
inc
add
cmp
bound
cmps
adc
add
mov
lods
mov
pusha
jle
push
inc
js
ret
jnp
aas
ins
cwde
fucom
aas
arpl
inc
xchg
cmp
inc
push
lods
pop
cs
ja
cmp
mov
sar
inc
xor
mov
fcmovnbe
les
daa
xchg
inc
sub
pop
inc
cmp
aam
push
sub
adc
cmp
movs
dec
int3
dec
push
movs
jo
pop
mov
xchg
cmp
xor
mov
xor
fdiv
jno
xor
sar
enter
pop
push
movs
clc
in
in
jno
inc
test
test
pop
fcomp
mov
cmp
adc
jns
ins
mov
popa
cmp
div
adc
or
jmp
cld
std
imul
stos
not
push
sub
lock
dec
push
cli
mov
push
addr16
adc
sti
aas
cmp
(bad)
pop
mov
stc
jmp
ins
cmps
cmp
ret
int
cmp
and
inc
add
cmp
cdq
xor
push
adc
cwde
punpcklwd
cmp
inc
adc
or
mov
outs
dec
mov
test
gs
sar
push
push
cmp
enter
adc
or
xor
mov
ins
sbb
and
push
fnstsw
(bad)
jnp
mov
shl
jle
rcr
mov
fimul
aad
out
xchg
ins
hlt
mov
push
jmp
jmp
add
mov
xchg
adc
rcl
fdivr
pop
cmp
xchg
imul
in
xchg
inc
out
cmp
mov
lahf
adc
and
jo
push
addr16
out
imul
jbe
jmp
xchg
xchg
push
(bad)
loopne
dec
out
cld
pop
dec
push
data16
xchg
iret
dec
add
fidiv
sahf
mov
data16
dec
push
into
push
add
cmp
mov
cld
cli
enter
jmp
sbb
and
loop
and
loop
test
sbb
daa
movs
pushf
or
pop
push
pop
push
fmulp
xchg
cmp
or
loop
adc
cmp
pop
adc
and
icebp
inc
dec
ret
add
(bad)
xor
ins
ss
cmc
(bad)
(bad)
xchg
and
mov
xchg
mov
mov
pop
xchg
nop
fisub
xchg
push
outs
les
pop
mov
inc
dec
dec
jae
xor
push
jmp
(bad)
movs
inc
mov
push
js
or
and
add
imul
test
pop
shl
xchg
scas
cmp
in
ins
sbb
fld
dec
sub
cld
sbb
xchg
adc
fdivr
cmp
add
inc
jo
dec
push
(bad)
repnz
sbb
adc
cli
neg
mov
jmp
mov
sub
fidivr
ins
repnz
adc
shr
mov
and
jmp
cld
inc
aad
call
outs
std
dec
xchg
fdivr
push
push
rcl
movs
retf
sub
adc
arpl
shr
rol
cmp
je
xor
sti
mov
lea
aas
arpl
add
repnz
push
push
inc
dec
(bad)
shr
sbb
adc
push
neg
push
push
retf
jns
mov
dec
xchg
in
cmc
(bad)
outs
cmp
retf
add
push
cmps
cmp
popf
inc
sbb
cdq
inc
mov
push
sub
test
sti
mov
das
mov
scas
push
sbb
pop
cmp
(bad)
mov
dec
dec
push
and
sub
xor
jns
(bad)
jmp
pop
mov
daa
daa
call
scas
ins
and
mov
inc
push
mov
inc
jb
sahf
xchg
push
loope
repnz
lahf
and
xlat
stos
stc
call
ds
arpl
push
adc
or
cmps
adc
nop
dec
leave
and
xchg
test
xor
cli
lods
call
mov
leave
push
in
and
clc
or
push
sub
ret
add
mov
popa
sbb
mov
sub
mov
dec
pushf
or
out
add
xor
and
mov
(bad)
jg
lds
and
hlt
test
fcomp
pop
pop
je
dec
push
push
mov
dec
sub
push
pop
pop
push
movs
in
sub
mov
mov
fs
mov
cmps
jl
test
out
mov
data16
fdivr
xchg
xchg
or
push
push
out
push
aam
iret
sar
ja
neg
aas
aas
dec
jge
popa
stc
xchg
xchg
dec
nop
dec
outs
ret
pop
in
mov
lods
mov
(bad)
int3
les
in
cmps
fisttp
push
shl
pop
push
adc
jae
mov
icebp
push
pop
pushf
mov
cli
test
mov
add
stos
push
mov
and
stc
sbb
stc
mov
cmp
mov
mov
add
xchg
push
or
push
rol
iret
add
mov
xor
pop
inc
pop
mov
mov
and
iret
ins
inc
dec
inc
or
cmp
outs
mov
out
dec
inc
sub
adc
jae
adc
and
jno
jns
das
mov
jmp
out
inc
out
nop
mov
sbb
mov
jae
adc
stc
pop
in
pop
out
dec
mov
std
inc
jnp
push
in
mov
mov
xor
xor
fdivr
cdq
int3
retf
retf
jle
in
cmp
sub
ror
push
sbb
out
les
adc
xlat
popf
arpl
jle
or
jno
sbb
xchg
dec
sub
push
repz
ret
loope
repnz
fild
pop
dec
retf
into
(bad)
scas
push
ret
dec
inc
xchg
int3
iret
mov
xor
mov
mov
data16
aaa
mov
sar
(bad)
push
pop
push
cld
xchg
sbb
dec
xor
(bad)
and
add
or
mov
and
retf
ret
iret
sbb
mov
sub
(bad)
or
ss
cli
rcr
rol
push
inc
push
mov
shl
ret
mov
mov
sub
xchg
jb
mov
es
mov
mov
mov
xor
pop
mov
test
out
sbb
jne
cmp
pop
pop
ss
frstor
popa
push
or
mov
pop
fidivr
sub
and
popf
adc
sti
inc
lahf
sar
in
ret
je
cmp
fucomp
enter
inc
mov
rcr
pop
icebp
cmp
leave
call
dec
xor
popa
inc
loop
test
popa
in
stos
cmps
call
fbld
push
rcr
mov
pop
lock
sbb
repz
bswap
stc
adc
push
mov
jno
data16
jb
jecxz
push
pop
arpl
sbb
shr
jns
xor
ret
jecxz
hlt
mov
xchg
pop
lods
cmp
in
mov
mov
add
add
sub
pop
cmc
push
sbb
dec
jns
loope
mov
mov
pop
out
popa
fs
and
dec
and
lock
cmps
pushf
jno
cmc
pop
push
arpl
call
popa
popf
fcomi
int
movs
or
sub
push
adc
out
(bad)
pop
pop
dec
cmp
stos
xor
xor
sbb
mov
pop
stc
xadd
rcr
mov
jl
sub
cmp
mov
push
clc
jg
aam
and
add
or
or
test
xor
sbb
retf
fcomi
sahf
call
jo
into
mov
int3
clc
adc
loop
or
mul
dec
fcomp
test
std
dec
cmps
jbe
xchg
inc
mov
xchg
sbb
sbb
in
in
inc
add
shr
lahf
pcmpgtd
xchg
cmp
add
push
leave
(bad)
in
mov
dec
inc
pusha
ret
ins
imul
adc
sub
jge
dec
stc
mov
xor
rcr
outs
pop
fild
(bad)
shl
sbb
mov
repnz
sbb
movs
or
jno
xlat
out
jmp
cmps
ret
mov
cmps
imul
inc
pop
pop
cmp
fidiv
mov
xchg
stc
lahf
nop
sbb
mov
adc
inc
cmp
rcr
xchg
mov
movs
jb
add
xchg
dec
lods
xchg
stos
inc
xor
out
xchg
icebp
or
repz
dec
imul
or
pop
rcl
cmp
movs
mov
cmp
mov
ja
jbe
xchg
cmp
daa
mov
jae
iret
mov
loopne
jg
cli
add
ins
(bad)
dec
mov
les
lahf
daa
cmc
cmp
cmp
xchg
sbb
jno
push
jbe
in
cdq
jnp
inc
inc
inc
xor
push
mov
clc
das
mov
(bad)
xor
clc
and
and
popa
movs
pop
add
cmp
aaa
(bad)
ins
rcl
jb
out
pop
hlt
push
sbb
jnp
mov
ret
and
mov
pop
ins
add
jb
lods
dec
and
cmp
(bad)
fldenv
or
mov
rcl
out
fwait
cwde
fidivr
push
and
mov
imul
or
mov
dec
imul
adc
add
xchg
enter
das
stos
and
adc
jb
mov
xchg
(bad)
out
xchg
and
das
add
mov
fistp
xchg
(bad)
pop
sub
xchg
push
dec
out
inc
xlat
mov
out
sar
aaa
mov
lahf
jo
fild
jg
jnp
mov
out
repz
aad
mov
inc
scas
ins
cmc
pslld
jmp
out
mov
pushf
icebp
(bad)
repnz
data16
dec
mov
pop
(bad)
enter
ss
sub
mov
out
into
out
je
cmp
(bad)
fisttp
pop
cmp
cmp
mov
xchg
cmp
xchg
fs
xchg
and
inc
sbb
dec
mov
sbb
cmp
add
fld
cmp
rcl
pop
mov
xchg
test
ror
and
pop
cld
mov
jg
dec
jle
imul
daa
xchg
mov
jno
in
movs
lods
fnstcw
ins
cmps
movs
sbb
stc
dec
push
dec
rol
dec
retf
push
data16
mov
arpl
add
shl
pop
mov
push
ficomp
in
pop
adc
dec
mov
out
imul
popf
add
and
cmp
fsub
fld
inc
ret
xchg
mov
pop
popa
mov
and
(bad)
and
xchg
lahf
call
or
ins
inc
cmp
adc
cmp
cwde
cs
mov
aas
add
adc
into
pop
push
fisub
push
or
cmp
adc
cmps
(bad)
cmp
and
into
xlat
ds
pop
fbld
pusha
or
jge
jo
aas
aas
ret
mov
and
movs
xlat
xchg
and
les
mov
cmp
inc
adc
sbb
bound
pop
jmp
pop
adc
loope
jle
adc
sbb
(bad)
pop
add
je
in
fld
sbb
out
push
dec
pop
dec
mov
(bad)
mov
cmp
test
dec
out
pop
aad
cmp
inc
dec
and
ss
ja
fsub
(bad)
in
in
retf
pop
(bad)
xchg
sbb
shl
adc
repnz
cld
ret
inc
mov
push
cmps
dec
add
inc
and
jecxz
ror
addr16
cdq
jo
arpl
stos
out
push
push
ins
add
mov
add
rol
and
rcl
xor
loope
inc
or
sbb
and
mov
call
add
adc
jb
and
shl
push
sbb
push
xchg
outs
push
add
lahf
jbe
sbb
repnz
fiadd
jmp
fsub
in
push
jns
inc
pop
cwde
test
and
jmp
lods
in
hlt
fisub
sbb
or
mov
mov
push
call
leave
jecxz
inc
sti
and
xor
in
fst
sbb
mov
sbb
ret
cli
sbb
test
push
(bad)
popf
inc
(bad)
push
sub
jbe
or
and
mov
xchg
addr16
jmp
in
test
mov
clc
sbb
jns
rcl
xchg
scas
jmp
ret
xchg
mov
or
int
in
lahf
jg
dec
cmp
cmps
aam
pop
push
addr16
(bad)
xor
retf
retf
ret
call
pop
xchg
mov
ret
adc
pushf
adc
test
pop
mov
xchg
jno
cmc
adc
mov
push
outs
das
xchg
mov
mov
(bad)
cmc
jl
stc
inc
xchg
and
pop
add
imul
loopne
push
inc
add
push
pop
mov
test
mov
mov
jb
loope
cmp
xlat
(bad)
cwde
sahf
adc
das
mov
rol
je
dec
retf
cld
push
js
out
cdq
or
rcl
lahf
clc
jmp
rcl
cdq
out
stos
fadd
in
out
cmp
fadd
mov
jecxz
test
jne
push
aaa
test
mov
mov
jmp
xchg
scas
test
jns
loop
mov
mov
mov
mov
and
pop
mov
add
ficomp
jecxz
fs
ret
ds
arpl
cmp
pop
in
jo
inc
mov
dec
data16
addr16
das
or
out
lods
lods
add
repnz
std
xor
mov
repnz
into
xchg
loope
out
ds
(bad)
and
cmps
mov
sbb
out
and
dec
popa
out
aas
in
cmp
or
fmul
mov
jnp
mov
and
sub
pop
loope
sub
test
clc
inc
inc
mov
add
jmp
mov
pop
mov
jns
or
mov
fwait
and
adc
les
add
das
mov
in
sbb
jmp
dec
call
loop
push
mov
dec
dec
div
rol
xor
mov
outs
pop
dec
pop
mov
mov
jmp
mov
hlt
push
mov
dec
mov
adc
int
jae
adc
in
jbe
mov
popa
mov
xchg
outs
cwde
frstor
out
add
lods
or
jmp
(bad)
mov
lea
mov
hlt
inc
pop
lahf
mov
test
jecxz
and
jne
dec
sub
inc
jno
lds
jl
stos
lea
movs
dec
cmp
mov
sub
jle
xor
(bad)
dec
fwait
dec
repnz
mov
sub
pop
adc
cmps
data16
adc
cmp
arpl
test
fadd
je
ret
popa
jge
sub
ret
xor
jge
sub
pop
sti
outs
stos
dec
fsub
pop
fisttp
neg
jge
aam
adc
retf
inc
or
adc
mov
pop
fsubr
pop
in
jno
fsub
push
nop
rcr
es
(bad)
xchg
xor
mov
ins
mov
mov
push
outs
das
or
xor
lds
pop
into
jo
mov
(bad)
mov
jge
cmp
shr
inc
clc
or
inc
or
arpl
mov
fisub
leave
jae
xor
lea
dec
add
xchg
popa
setp
lds
sub
mov
aaa
movs
sbb
jle
fwait
(bad)
call
sub
mov
movs
cmp
mov
outs
dec
dec
ret
push
scas
rol
jno
add
jmp
fimul
(bad)
mov
pop
sbb
aam
pop
mov
dec
push
daa
pop
stc
inc
push
xchg
or
out
inc
je
aad
imul
jmp
mov
pop
(bad)
sbb
data16
stc
jno
sbb
cmp
xor
jmp
xchg
add
or
mov
push
push
xlat
push
ja
mov
sub
push
sub
jg
add
dec
xchg
ss
and
repz
lahf
movs
mov
aad
add
into
aaa
jmp
and
jne
arpl
out
test
add
test
retf
int3
or
repz
daa
and
call
xchg
jecxz
lods
neg
add
loope
dec
mov
fmul
shr
shr
rcr
movs
es
dec
inc
nop
idiv
stos
shl
mov
cmp
movs
call
cs
pop
push
mov
and
js
xor
push
mov
mov
in
ja
sbb
pop
fnstsw
or
mov
xchg
lahf
jnp
in
mov
not
pop
and
hlt
and
xor
push
xlat
dec
push
pop
(bad)
lds
int
(bad)
int
std
iret
aam
add
stos
inc
mov
js
int
dec
mov
nop
retf
les
xor
pop
into
retf
jmp
sub
lock
xor
(bad)
sar
xlat
pop
sbb
pop
xor
mov
add
shl
pushf
ret
leave
jne
sub
push
shl
rol
xor
adc
xchg
into
pop
std
xchg
cmp
push
scas
cmp
push
daa
lods
mov
call
(bad)
fimul
sub
push
cmp
out
jns
inc
cmp
fs
ds
push
fs
or
jp
outs
popf
test
xor
fs
call
pop
(bad)
lods
pop
jmp
sub
popa
iret
push
cmp
fstp
jmp
dec
jp
and
adc
mov
and
push
scas
mov
ficom
mov
js
pop
xor
jbe
xor
pop
push
inc
movs
jae
xor
xor
mov
sbb
dec
cli
bound
ins
xchg
or
mov
jns
fistp
push
push
arpl
mov
retf
jne
lods
push
mov
lods
popa
push
cmp
ins
sbb
jmp
mov
jmp
in
gs
mov
in
les
unpckhps
scas
shr
add
push
fwait
sub
push
shl
sahf
in
stc
adc
sahf
std
or
mov
test
sbb
xchg
popf
dec
imul
mov
imul
sub
push
fwait
adc
int3
push
push
cmp
gs
cmp
mov
outs
into
les
loopne
fdivr
pop
mov
js
sub
test
push
movs
fwait
push
dec
fwait
aas
mov
pop
fistp
and
pop
in
aam
xor
bound
adc
mov
fmul
test
cmp
xchg
int
push
fst
aam
in
xor
popf
xor
lds
(bad)
cmps
pop
js
inc
inc
loop
cmps
imul
inc
or
xchg
mov
sti
outs
int3
xor
fbstp
es
(bad)
sbb
jl
pop
sbb
es
ss
or
or
dec
push
ss
ss
jno
(bad)
push
inc
jl
sbb
sub
cmp
sbb
(bad)
push
mov
pop
xor
push
lea
outs
rcr
cli
cmp
cmovnp
and
mov
sub
push
jnp
pushf
and
pop
in
xor
mov
test
call
push
inc
pop
ret
shr
pop
adc
add
mov
sub
sbb
push
push
pop
pop
pop
mov
arpl
(bad)
xchg
paddb
xor
or
or
rcr
xor
xchg
mov
xlat
xchg
out
xor
gs
test
pop
das
ret
jbe
or
ror
jl
mov
outs
dec
mov
pop
stc
add
jp
imul
adc
pushf
cdq
jecxz
xor
mov
hlt
ins
leave
rcl
stc
dec
push
stc
pop
std
cld
xlat
cs
cmc
fist
and
iret
(bad)
mov
fst
out
js
add
inc
aas
mov
(bad)
inc
dec
aad
sub
jmp
jecxz
stos
lahf
xchg
outs
cmp
loop
add
std
pop
adc
or
xor
stos
pop
adc
xchg
mov
jae
(bad)
and
rcl
sbb
cld
loope
cmp
pop
sub
int3
cmp
pusha
xor
adc
xchg
es
mov
fwait
mov
cmp
mov
mov
sbb
or
je
dec
or
push
xor
mov
mov
push
pop
mov
out
ficom
inc
lds
(bad)
jmp
loope
or
gs
icebp
(bad)
out
(bad)
hlt
or
icebp
or
push
add
cdq
xor
aaa
pop
xor
and
push
int
test
jg
std
ficom
sbb
(bad)
push
and
stos
mov
mov
lds
imul
(bad)
test
dec
inc
call
add
aam
pop
out
push
test
ret
ds
adc
mov
shl
scas
aaa
pop
jmp
inc
mov
test
(bad)
js
push
shl
mov
pusha
in
mov
jo
add
inc
icebp
repnz
or
push
inc
mov
outs
repnz
and
lahf
cmp
sub
test
out
dec
sbb
jge
add
sbb
clc
imul
push
mov
xchg
cmp
xchg
cli
leave
hlt
int
jg
sub
dec
add
xor
pop
clc
pop
xor
cmp
ins
iret
cwde
stos
fld
pop
in
scas
mov
push
mov
and
hlt
neg
movsx
arpl
test
imul
fimul
push
adc
and
leave
xchg
sub
dec
dec
rcr
movs
push
push
sbb
add
or
test
sub
fild
(bad)
dec
jmp
xchg
js
fmul
cmps
test
pop
cmp
push
mov
xor
movs
fldenv
push
add
and
fs
sti
inc
xchg
cmp
push
inc
dec
push
es
imul
stc
mov
jno
inc
mov
sub
mov
(bad)
mov
lds
or
jmp
fdivr
fdivrp
or
dec
jge
loop
mov
inc
and
out
les
mov
mov
jb
jmp
ja
aaa
mov
(bad)
mov
fmul
sar
inc
mov
jp
xchg
scas
jle
adc
jno
stc
adc
shl
das
nop
ret
xor
xor
mov
push
aad
inc
jg
loopne
clc
sbb
sub
xor
mov
xor
cmp
sub
aam
bnd
scas
jnp
arpl
push
fwait
cmps
ret
xchg
cmp
xchg
mov
jne
popa
xchg
into
xor
dec
mov
or
scas
shl
adc
dec
mov
jmp
fsubr
stc
(bad)
leave
sub
loop
inc
xor
sub
lods
addr16
mov
scas
fsubr
add
push
out
loop
lods
adc
mov
test
nop
or
sub
(bad)
inc
test
bound
lds
int
push
adc
push
ret
push
shr
enter
leave
mov
leave
test
mov
rcl
lahf
test
fld
ret
shr
enter
jp
jmp
fdivr
and
dec
lods
mov
ins
xchg
enter
mov
test
mov
mov
cmps
addr16
cli
pop
pop
add
out
xor
out
xchg
mov
mov
jp
mov
lea
aad
dec
leave
test
movs
cmp
mov
in
ret
xchg
outs
cli
adc
mov
pop
push
sub
(bad)
cmps
jp
adc
xchg
mov
add
adc
and
shl
sub
adc
jmp
dec
add
pop
test
das
add
cmp
int
ficom
push
inc
or
iret
pusha
mov
dec
push
out
mov
clc
mov
and
out
int
fwait
inc
cmps
jmp
add
xor
ror
mov
mov
(bad)
pop
pop
pop
cmp
jo
dec
inc
mov
outs
mov
pop
or
jge
aas
in
adc
cmp
bound
icebp
jmp
mov
push
ds
xchg
push
icebp
pop
dec
jge
ins
cmp
fsubr
mov
(bad)
ret
sbb
adc
jl
maxps
sbb
stos
(bad)
xor
pop
rcl
scas
cli
mov
sub
and
jo
xchg
or
sahf
jecxz
lock
lds
sti
jne
mov
dec
repnz
xchg
xchg
iret
daa
jge
lods
movs
rol
xchg
clc
cmp
mov
(bad)
cmp
push
add
push
stos
call
enter
stc
xor
mov
cmp
xchg
xor
popf
int3
pop
stos
repnz
adc
sbb
cwde
adc
inc
adc
addr16
inc
jg
into
outs
(bad)
fst
and
scas
mov
mov
pop
jmp
test
xchg
stos
cdq
push
adc
scas
mov
sbb
xchg
xchg
prefetch
(bad)
retf
cmp
push
fistp
lods
sbb
rcr
sub
je
sbb
cmp
and
addr16
lods
or
ror
add
shl
das
add
inc
fcompp
nop
fiadd
add
jns
out
and
pop
lahf
cli
cld
add
add
ins
add
out
stc
les
in
adc
cwde
mov
jl
jb
int3
sbb
inc
out
jb
into
sahf
mov
xor
gs
out
push
push
mov
popf
hlt
jg
pop
mov
xchg
mov
cli
mov
rcl
add
jb
add
mov
ins
(bad)
out
mov
ja
idiv
gs
ins
push
xor
in
and
scas
fild
ret
test
sub
aad
and
ds
and
inc
idiv
mov
sbb
cmp
sub
aas
out
push
jge
jle
cmp
sbb
std
or
xlat
cmp
jae
mov
push
js
call
je
cmp
adc
popf
imul
into
add
xor
mov
jmp
adc
xchg
sub
outs
jle
cmp
retf
test
stos
out
(bad)
cmp
mov
jo
mov
mov
push
ret
push
xor
loop
mov
sub
outs
inc
mov
dec
pop
xchg
add
loop
stos
pop
ror
inc
mov
pop
jne
cmp
inc
cmp
(bad)
stc
xor
inc
xor
test
dec
ret
sub
inc
scas
add
xchg
cwde
rol
cmp
mov
or
jmp
or
fiadd
sahf
jle
push
mov
xchg
jge
or
loopne
dec
pop
das
add
add
je
das
sub
(bad)
movs
mov
mov
mov
pop
je
movs
fistp
pop
mov
push
leave
mul
out
fwait
push
mov
fimul
loope
jl
call
push
not
int
outs
inc
push
lea
rol
dec
cmp
dec
xchg
dec
aad
dec
sar
out
mov
pop
sub
stc
cmps
jmp
addr16
xor
add
and
aaa
sub
bound
mov
enter
mov
xchg
jecxz
idiv
mov
or
pop
pop
or
mov
sub
pop
adc
outs
aam
push
std
mov
(bad)
or
iret
and
nop
cwde
fdivr
pop
mov
mov
rcl
in
xlat
cmp
dec
xchg
dec
(bad)
in
sbb
sar
ss
por
pop
xchg
adc
shr
jmp
jp
adc
nop
xchg
jg
sbb
inc
in
cmp
xor
data16
dec
sti
dec
mov
and
fmul
add
cli
push
cmp
inc
or
fdiv
cmp
sub
add
sub
sbb
and
ins
xlat
mov
(bad)
fidiv
adc
dec
repz
inc
pop
add
dec
pop
cdq
mov
mov
xor
lods
jecxz
and
fwait
push
jp
call
xchg
pop
push
mov
test
adc
(bad)
rcr
lahf
addr16
cmp
push
jb
push
sbb
inc
rol
hlt
(bad)
fdiv
imul
and
or
fucomip
mov
add
sbb
lahf
inc
out
loop
movs
cmp
shr
mul
xor
pop
push
push
mov
cmps
dec
repnz
repz
mov
xchg
daa
xor
fdiv
sbb
inc
retf
mov
push
sbb
call
out
add
cmps
ret
sbb
xor
imul
into
jno
(bad)
xlat
push
push
pop
in
pop
or
jg
xlat
mov
(bad)
jmp
adc
jo
cwde
ss
xchg
xlat
mov
cmp
xor
(bad)
or
push
movs
jge
inc
repnz
std
inc
jb
rcr
lods
std
ja
(bad)
fimul
ds
ds
jecxz
sub
xchg
sbb
dec
ins
lds
sbb
push
add
add
in
or
cdq
and
int
and
push
push
mov
jmp
push
cmps
inc
retf
retf
mov
push
test
or
pop
sub
sbb
out
jne
test
adc
movs
inc
sahf
mov
sbb
and
loop
dec
sbb
adc
ja
or
repz
cmp
mov
fnstenv
inc
retf
mov
and
pushf
aas
imul
mov
stos
pushf
inc
add
mov
lds
jl
sbb
ret
xor
dec
mov
or
add
int
push
or
test
rcl
sub
and
inc
addr16
mov
push
add
call
jo
cmp
out
or
jno
fbstp
mov
(bad)
jns
inc
mov
pop
in
push
loopne
and
int
sbb
add
xchg
cmc
adc
fwait
adc
into
xor
push
das
test
push
mov
jp
ins
ss
and
dec
and
xchg
jns
leave
loop
cmp
cmp
jmp
into
dec
dec
or
mov
xor
cmp
test
push
and
call
fstp
add
mov
daa
cmp
and
adc
pop
xchg
loopne
and
ins
mov
repnz
push
pop
xor
sub
in
or
ficomp
fld
outs
pop
aad
fs
mov
jno
ret
pop
cmps
sub
js
mov
cmc
lahf
xchg
push
pop
or
cdq
and
cmp
rcl
clc
(bad)
push
cli
push
lea
push
out
int3
das
sub
mov
ds
adc
(bad)
(bad)
popa
push
loopne
jb
cld
mov
push
aam
daa
int
jecxz
mov
cmp
sub
clc
xor
daa
pop
clc
lods
mov
push
xchg
in
test
mov
mov
pop
adc
pop
sub
aas
push
into
xchg
das
jp
xlat
popa
mov
mov
scas
jecxz
or
cs
mov
mov
dec
ret
cmp
sub
loop
mov
ret
xor
jg
rcl
sti
sahf
inc
jecxz
ins
or
ss
push
fs
jae
popa
mov
push
jb
mov
jae
adc
lock
sub
ins
add
imul
xchg
xchg
cmp
movs
outs
imul
push
xor
pop
ret
push
adc
push
es
adc
test
sbb
xchg
push
lea
(bad)
mov
ja
jge
fstp
mov
jno
pop
jbe
xchg
pop
in
cmp
xor
sub
jb
and
pop
imul
jne
call
lods
sub
pusha
jl
add
cmps
not
dec
loopne
adc
jb
cs
cmp
or
xchg
in
dec
mov
inc
mov
cmp
sub
and
mov
hlt
jbe
dec
pop
pop
repnz
sub
imul
int3
cld
mov
movs
cmp
scas
cmp
mov
jo
jp
shl
dec
ret
mov
xor
xor
scas
rcl
enter
adc
fcmove
cld
inc
push
cdq
mov
mov
dec
repnz
mov
stos
leave
add
and
shl
cmc
inc
movs
pop
stc
out
aaa
add
add
inc
enter
adc
sbb
add
repz
test
fidivr
mov
sub
mov
and
jne
or
mov
fidivr
pop
daa
ret
fdivr
lds
sbb
or
mov
push
sbb
icebp
and
int3
mov
sbb
xor
cdq
pop
inc
xor
fcomp
pop
or
retf
fcomp
imul
xor
aas
add
jae
sar
xor
shr
and
and
repnz
mov
scas
arpl
arpl
lods
nop
or
xor
lea
jmp
mov
sub
call
lock
(bad)
lock
call
adc
or
jmp
mov
dec
sub
push
stc
ret
or
push
sub
fwait
daa
add
pop
mov
daa
rcr
aad
and
cmp
ss
movs
jno
inc
gs
imul
enter
jns
cmp
imul
dec
fstp
nop
mov
inc
jno
dec
sbb
test
scas
ficom
jno
sub
inc
test
out
cld
fisub
addr16
js
dec
lds
pusha
sub
jbe
(bad)
ds
mov
jge
adc
lea
shl
dec
add
add
pop
cwde
loop
bound
aas
mov
xchg
(bad)
cli
add
and
dec
aam
cmp
mov
sti
cmps
leave
and
mov
mov
adc
sbb
inc
fcmovu
icebp
in
mov
jbe
in
mov
out
jns
push
mov
fs
div
xchg
loope
lds
out
inc
cmp
jmp
mov
mov
jb
stos
cwde
fwait
sbb
inc
data16
outs
popf
cmp
or
jmp
xor
xchg
cmp
pop
pusha
into
bnd
loop
(bad)
jmp
out
out
add
mov
inc
das
sub
and
adc
cmp
sbb
out
mov
enter
outs
jbe
add
fs
das
push
jmp
add
enter
cdq
(bad)
sti
pop
inc
jg
cmp
xor
add
ret
jmp
jnp
dec
in
pop
movs
pop
je
int
int
sbb
movs
sub
outs
in
out
repnz
cmp
jne
shl
pop
clc
push
out
add
stc
ss
inc
fstp
and
es
iret
out
sbb
retf
iret
and
scas
imul
or
mov
jnp
loopne
rcr
fild
pop
lods
xor
jg
mov
mov
(bad)
mov
pusha
mov
test
std
mov
xor
dec
push
xchg
xchg
shr
imul
enter
sbb
or
mov
sub
sub
mov
sti
smsw
in
movs
fdivr
aas
sub
xor
mov
mov
loopne
outs
mov
out
daa
pop
mov
jbe
fimul
jge
data16
pushf
xor
jl
jbe
mov
mov
dec
cwde
sbb
sahf
mov
xchg
in
ret
cmp
imul
mov
je
fst
out
sbb
or
in
and
add
cld
fwait
mov
fld
out
cmps
inc
xchg
sub
cdq
pop
sbb
es
data16
mov
adc
scas
sar
xchg
push
inc
repz
inc
adc
or
xchg
imul
out
adc
mov
or
rol
mov
inc
shr
pop
xor
xchg
xor
push
loop
pop
lods
mov
retf
or
(bad)
jne
or
inc
ins
ja
rol
mov
and
jmp
cmp
int
mov
aas
xor
push
sub
fisubr
adc
xchg
fnstcw
je
movs
pop
cmps
lock
mov
mov
jg
aas
sbb
add
xlat
shl
push
xlat
or
retf
inc
pop
fnstsw
(bad)
std
dec
ret
test
(bad)
mov
fs
push
lea
ins
lea
lahf
popa
pop
inc
mov
adc
jecxz
jge
mov
test
in
lea
jb
mov
out
or
nop
adc
sbb
jle
test
jmp
push
or
inc
cld
mov
inc
in
mov
pushf
pusha
int
in
jl
lock
jmp
mov
movs
in
cmp
pop
xor
sbb
cmc
and
scas
(bad)
cmp
dec
mov
add
cmc
bound
mov
pop
xchg
sub
shl
call
rcr
lahf
ss
sub
xor
std
cmc
fs
fs
and
xlat
mov
ret
loop
dec
imul
int3
cmp
mov
aaa
jl
cli
stc
sub
out
lods
cmps
add
jl
div
add
mov
xor
push
mov
mov
ins
jmp
add
pushf
rcr
and
lea
aam
call
dec
scas
(bad)
and
cmps
dec
retf
sub
pop
aas
shl
cld
icebp
test
xchg
scas
daa
mov
(bad)
ret
mov
loope
mov
into
call
jmp
stos
lea
push
ss
adc
fistp
shr
jns
xchg
imul
sub
pop
fild
cs
in
enter
pop
out
xor
call
in
inc
xchg
cmp
mov
rcl
shl
mov
aad
mov
sub
aaa
jecxz
cs
mov
test
jg
out
xchg
stc
loop
clc
add
iret
test
and
lea
cs
jmp
mov
call
and
fwait
add
fimul
pop
ja
repz
xchg
add
adc
imul
jmp
imul
repnz
inc
rcl
xchg
rcr
sub
xchg
adc
loopne
dec
sub
xchg
ins
iret
lods
inc
push
xlat
lock
mov
pop
adc
idiv
enter
adc
shl
push
lds
adc
call
jecxz
pop
xlat
jb
pop
jbe
in
mov
cmp
mov
or
aaa
in
dec
call
cmc
jmp
dec
xchg
sbb
stos
or
imul
int
sbb
rol
mov
bnd
ffree
in
cmp
dec
adc
jl
aas
pop
cs
mov
cmp
aas
xor
jne
cmp
xchg
or
cmp
mov
bound
fbstp
test
shr
xchg
cmp
(bad)
leave
out
xchg
jecxz
movs
(bad)
or
shl
mov
das
aas
push
mov
cdq
or
ss
mov
jne
dec
hlt
and
sbb
sub
(bad)
clc
adc
pop
mov
movs
or
fbld
mov
je
in
jmp
cwde
xchg
outs
push
dec
out
fidivr
lahf
mov
mov
xchg
pop
ja
sti
stc
lods
data16
movs
iret
xchg
mov
inc
scas
pand
mov
shr
xor
sbb
ins
jbe
scas
pop
xchg
jg
push
lods
shl
and
cld
in
mov
repz
nop
gs
add
inc
and
inc
imul
repz
jg
dec
pop
out
mov
mov
jle
adc
data16
scas
mov
mov
adc
not
push
rol
mov
xchg
sbb
test
bound
dec
jo
mov
cli
sbb
jg
adc
cwde
loop
inc
xor
in
push
ror
adc
ss
fadd
je
and
ret
std
movs
xor
add
neg
jmp
pop
or
jle
test
add
retf
push
cmp
imul
(bad)
or
(bad)
sahf
data16
pop
fnstsw
pop
xlat
push
(bad)
std
push
jle
out
retf
shr
shl
repz
cmp
mov
das
push
inc
xor
xor
and
mov
lods
shl
jne
sahf
retf
mov
dec
rcl
pop
pop
jne
mov
lods
and
jecxz
not
mov
fiadd
jbe
call
aas
or
sub
inc
or
or
and
std
enter
test
adc
movs
or
imul
fwait
xor
into
mov
rol
imul
loope
cmp
lods
or
inc
cli
adc
or
sub
mov
fcomi
scas
pop
dec
xchg
mov
arpl
jb
inc
imul
gs
fbld
cwde
xor
push
leave
and
test
pop
hlt
adc
or
ja
push
aad
imul
dec
pop
test
mov
loop
nop
bound
repz
mov
shl
nop
test
stos
and
ja
mov
imul
mov
dec
inc
sti
cmp
(bad)
call
adc
mov
sub
jne
push
mov
adc
leave
out
dec
cmc
imul
(bad)
fsub
(bad)
pop
mov
mov
stos
jmp
mov
mov
push
adc
pop
mov
add
push
inc
stc
(bad)
out
xchg
xchg
push
sub
pop
daa
jb
fisub
mov
cmps
push
jmp
rcl
jnp
aad
pop
and
mov
xchg
in
test
js
outs
aad
jmp
enter
sub
add
push
pop
les
mov
sub
test
sbb
ror
leave
xchg
pusha
sub
xchg
mov
sub
and
popa
cmc
push
inc
pop
xor
or
dec
mov
(bad)
clc
pop
rol
dec
and
(bad)
jp
inc
daa
(bad)
shr
in
mov
int
and
ins
add
aaa
fcomp
or
pop
push
and
loopne
int3
jp
stos
cmp
mov
ror
cmp
jg
call
sub
ror
and
xchg
mov
xchg
xchg
sar
out
sbb
xchg
int
sahf
in
(bad)
jns
sub
or
fucomip
inc
into
pop
mov
cmps
rcl
inc
mov
lods
mov
cmp
xchg
lea
add
xchg
jns
retf
dec
(bad)
movs
add
ds
fs
and
xchg
call
sbb
push
push
and
add
imul
out
mov
dec
xor
dec
xchg
sub
sbb
jmp
xor
jae
xchg
test
call
aas
push
nop
jge
or
ins
add
sbb
retf
mov
cmp
sub
mov
and
retf
imul
cmp
aam
xor
les
mov
cmps
ins
pop
lds
push
arpl
stc
or
addr16
mov
or
push
and
leave
or
and
fisub
mov
sbb
mov
xchg
adc
or
ret
scas
adc
es
fstp
(bad)
call
inc
sub
jno
mov
or
loopne
cmps
fist
sbb
enter
add
adc
mov
cmp
test
xor
dec
ins
and
lock
pop
aad
in
mov
std
sub
hlt
(bad)
lods
retf
inc
call
int3
sub
iret
ins
sub
dec
xchg
dec
out
imul
and
xchg
popf
ja
stos
pop
lahf
lea
mov
push
adc
jle
movs
jb
loope
test
iret
into
stos
das
push
and
fadd
shl
data16
push
pop
jb
push
pop
or
lods
imul
jne
cmp
and
in
fnstcw
mov
in
push
mov
mov
cmp
push
inc
fild
jg
mov
or
rcl
in
sub
cli
or
int3
inc
sar
sbb
leave
cs
pop
enter
fstp
push
push
mov
push
out
dec
xor
add
add
shr
test
pop
sub
cmp
sbb
mov
stos
mov
push
push
jg
cmps
call
inc
pop
inc
xlat
repnz
bound
push
pop
cs
rcr
shr
into
jle
fcmove
mov
iret
test
sub
push
and
add
sbb
push
jp
mov
xchg
jbe
clc
and
adc
or
je
sbb
pushf
mov
xor
add
and
and
mov
push
cmp
sub
dec
push
arpl
add
mov
sbb
cmp
fcmovnb
sbb
cmps
mov
add
xlat
jns
jbe
int
xchg
repz
fwait
dec
lea
fwait
jg
add
shl
sbb
cmps
int
add
and
stos
(bad)
jle
stos
mov
mov
std
sti
sbb
sbb
inc
push
lods
jae
repnz
out
arpl
jmp
loop
pop
call
dec
call
in
shl
arpl
mov
ror
cmps
cmc
cmp
mov
das
das
cmp
in
fcomp
sub
bound
in
inc
out
mov
sbb
(bad)
repnz
dec
cmc
sbb
adc
test
add
jecxz
into
pop
in
test
cdq
mov
push
pushf
test
mov
add
or
pop
cmc
es
mov
nop
jp
add
pop
push
sbb
ret
add
jmp
movs
xchg
mov
hlt
iret
jne
sub
dec
cwde
push
cmp
sub
cmps
mov
xchg
fiadd
push
shr
test
aam
call
fwait
or
mov
adc
fstp
pop
pushf
(bad)
jo
dec
xchg
mov
dec
cmps
lods
in
call
jbe
mov
(bad)
pop
sub
jmp
aam
js
sub
out
push
leave
push
mov
popf
and
out
lods
add
cmp
fwait
inc
rcr
mov
cli
daa
inc
daa
pop
stos
in
test
jae
mov
sub
cmp
rcl
dec
inc
push
test
xor
sbb
out
bound
fbld
scas
mov
test
lock
push
mov
cmp
sub
pushf
mov
bound
jb
xchg
jmp
jg
(bad)
ins
mov
dec
adc
arpl
jecxz
mov
cmp
add
int3
addr16
adc
push
in
retf
cmp
xchg
mov
push
xchg
stos
fdiv
xchg
inc
mov
xor
xchg
mov
xchg
mov
iret
mov
pop
sahf
addr16
sti
cmp
mov
movs
rol
fdiv
and
pop
icebp
shr
jge
imul
inc
pop
arpl
cmp
sbb
mov
test
mov
pop
dec
fwait
scas
fidivr
push
imul
sub
ror
adc
cmp
(bad)
int
test
jmp
dec
push
dec
(bad)
out
push
lock
inc
mov
test
ins
jae
pop
cwde
jmp
adc
xchg
fwait
xor
add
mov
jnp
jnp
out
scas
lock
cmps
rcr
push
arpl
popf
loop
aas
dec
inc
retf
and
cmp
jmp
test
sub
js
xor
xor
scas
sub
pop
rcr
and
dec
adc
out
imul
sub
adc
rcl
add
das
xchg
repnz
or
push
mov
pop
adc
push
add
xchg
cwde
cmp
or
sahf
stos
jno
dec
lea
ins
xor
hlt
call
clc
retf
cmp
(bad)
inc
loopne
loope
or
call
iret
std
scas
sbb
add
shl
pop
scas
(bad)
cdq
imul
xchg
lods
sub
ds
test
fild
sbb
mov
frstor
ins
push
mov
sub
jl
or
pop
aam
aas
pop
ret
dec
pop
retf
cmp
or
mov
movs
xor
sub
test
add
loope
adc
mov
xor
dec
or
repz
xchg
jge
pop
cli
data16
sbb
cmps
stos
mov
push
pop
xor
sbb
xchg
sub
mov
xchg
sub
lods
sbb
jmp
imul
mov
out
jecxz
lds
mov
call
fcom
sar
adc
mov
jmp
lock
dec
jle
jns
adc
les
inc
aam
cmp
add
fdivr
mov
cmp
mov
pop
jbe
sub
fsincos
fimul
jp
sbb
and
add
(bad)
test
cmps
sub
data16
cmp
int
daa
xchg
push
iretw
(bad)
cmp
sub
xchg
ret
mov
into
dec
jge
sbb
dec
sub
sbb
or
xchg
jmp
stos
aas
shl
pop
test
mov
js
sbb
xor
arpl
dec
or
addr16
sub
push
enter
inc
sub
iret
mov
bound
adc
mov
or
fisttp
mov
xchg
nop
mov
es
pop
xor
dec
aad
jae
mov
pop
cmps
lock
and
(bad)
sub
jae
cmp
jl
movs
gs
dec
adc
jg
add
mov
jp
movs
out
arpl
push
stos
xor
add
mov
inc
inc
mov
popa
arpl
mov
inc
idiv
cmp
jmp
sub
test
stos
mov
push
xchg
push
push
inc
out
cmp
dec
dec
dec
psrad
sbb
mov
jbe
loop
push
dec
xor
mov
mov
adc
fsub
out
xor
jmp
mov
inc
mov
rcl
lahf
push
rol
ficom
xchg
push
das
xchg
xor
arpl
or
cmc
cs
std
frstor
call
in
push
xor
mov
pushf
pop
jle
sbb
push
adc
pop
sub
xchg
push
jecxz
into
and
or
mov
jmp
icebp
test
inc
mov
cwde
or
xor
cli
je
lea
into
fbstp
je
xor
scas
test
cmps
pop
int
in
nop
pop
inc
lods
xchg
xchg
nop
sahf
into
movs
scas
in
je
jnp
dec
and
stos
fstp
(bad)
bound
shl
lods
sub
js
sub
xchg
cmps
arpl
stos
nop
mov
jl
out
rcr
popa
mov
jbe
das
push
mov
inc
hlt
sub
xchg
fistp
mov
dec
lods
or
or
sbb
(bad)
test
jno
neg
mov
cmps
and
inc
repz
das
imul
xor
cmp
cmps
(bad)
pusha
test
cs
cmp
push
in
nop
es
pop
call
push
cmp
retf
add
cmp
arpl
js
push
mov
dec
or
data16
jno
aad
push
clc
pop
sbb
add
bound
sub
out
ins
pop
fbstp
push
cmps
pop
dec
adc
pop
add
mov
pop
ins
cdq
jge
ins
setne
daa
mov
shr
cmp
xchg
in
rol
mov
stos
inc
push
das
cli
jns
dec
dec
add
aam
mov
cmps
pop
outs
or
imul
rcr
loope
mov
mov
pop
aaa
push
pushf
push
push
sbb
adc
sub
push
mov
xchg
leave
add
leave
mov
and
mov
sub
inc
std
leave
mov
out
test
retf
cmp
in
cmp
imul
pop
test
es
int
push
fcmove
enter
rol
inc
aam
sbb
sub
scas
jmp
mov
dec
xor
aad
popa
out
sub
and
ret
sbb
or
sub
and
inc
push
xchg
in
or
push
xor
imul
cmp
and
mov
inc
cmp
ins
add
pusha
pop
push
pop
bound
inc
fbld
imul
lock
jge
sub
or
(bad)
in
mov
stos
iret
push
or
arpl
dec
and
push
lahf
adc
pop
rcr
lds
xchg
add
cmc
pop
inc
dec
cmp
outs
push
pop
sub
push
xchg
aam
imul
addr16
sub
ret
xor
adc
jmp
(bad)
inc
cli
dec
mov
into
sbb
xchg
inc
aas
lahf
retf
fidivr
repz
add
scas
push
jmp
fist
mov
xor
pushf
dec
xchg
lock
ror
add
lock
addr16
je
jno
retf
sbb
or
jb
cmp
shl
inc
sar
out
xor
or
ins
pushf
jl
lds
add
(bad)
jne
cmp
push
mov
mov
and
shr
das
shr
das
and
mov
lds
and
mov
(bad)
pop
test
imul
lahf
mov
bound
jns
ficom
mov
cld
(bad)
cmps
or
inc
inc
mov
xchg
mov
call
mov
rol
adc
xor
adc
mov
cmc
call
sbb
inc
out
pop
cli
jp
mov
ss
out
mov
aad
xor
cmp
mov
jbe
or
icebp
das
push
xorps
push
mov
(bad)
sub
arpl
fdivr
mov
sbb
fs
cdq
xor
js
fild
push
mov
cvtpi2ps
ds
data16
dec
jmp
mov
(bad)
xor
and
xor
xor
test
mov
mov
ret
outs
sub
stc
test
imul
push
in
push
jo
stc
adc
jmp
cwde
repz
jmp
das
lea
test
jne
lahf
les
cs
push
adc
imul
or
pusha
xor
xor
rcr
cmp
mov
push
jp
sbb
mov
xchg
les
fnsetpm(287
push
outs
xor
jmp
imul
pop
fwait
push
cdq
das
inc
adc
(bad)
call
mov
xor
outs
out
jo
mov
jmp
jnp
push
cmp
xchg
shl
fwait
lahf
mov
cmp
dec
std
aaa
and
stc
and
pop
cmp
jp
(bad)
inc
int
in
pop
hlt
xor
jmp
test
jo
sub
std
dec
and
and
loope
xchg
xchg
sbb
cmps
and
cwde
(bad)
xor
jae
out
into
outs
jmp
cmp
or
daa
push
jmp
in
pop
lods
je
(bad)
loop
pop
test
sar
jae
add
imul
ins
xchg
mov
dec
pop
pop
cmp
jl
lods
or
pop
jg
ret
sbb
jae
shl
adc
pop
sub
(bad)
int
sub
daa
outs
outs
mov
push
cmp
(bad)
xchg
stc
outs
cmps
sub
xchg
jecxz
rcl
add
imul
ret
inc
imul
div
scas
test
ja
lea
movs
sub
xchg
xchg
jo
scas
mov
dec
loopne
mov
aaa
sbb
jae
xor
cli
(bad)
sbb
inc
mov
push
(bad)
rcl
iret
test
mov
adc
dec
icebp
xor
mov
daa
cli
cmc
fsubr
dec
jmp
mov
push
sbb
stc
(bad)
fchs
(bad)
fdiv
jle
pop
add
pop
inc
iret
push
pusha
jbe
fst
xchg
and
stos
ja
mov
push
jmp
dec
in
inc
mov
sahf
jl
clc
cmp
ins
(bad)
movs
fwait
loop
je
adc
jo
lods
mov
mov
sub
out
jne
repz
sub
retf
cmp
sub
(bad)
xor
sahf
inc
dec
sub
iret
retf
pop
fwait
int
xchg
push
sub
cmc
in
fs
ss
loop
leave
(bad)
cdq
dec
(bad)
sbb
mov
pop
dec
jns
cmp
push
mov
mov
push
or
sbb
fs
mov
cdq
push
jmp
test
mov
aaa
std
add
xchg
popf
inc
push
lods
jge
push
inc
stc
je
scas
popf
in
mov
aam
mov
push
add
adc
repnz
daa
push
cli
cmp
mov
mov
(bad)
arpl
xchg
sub
lahf
sbb
sbb
jmp
iret
and
dec
ret
data16
aaa
outs
popf
fld
cdq
outs
outs
fiadd
int
jmp
mov
lea
inc
inc
int3
fisub
push
repz
xchg
mov
stos
stos
push
fsubr
hlt
inc
int
push
cld
aam
pop
cmp
adc
pop
out
push
add
mov
loop
imul
jmp
adc
pushf
popf
out
jnp
dec
add
pop
hlt
rcr
or
ficom
xchg
adc
lods
fistp
xor
ret
jne
lods
and
call
xor
jmp
dec
or
loop
push
btc
xchg
pop
je
inc
and
jo
jmp
sbb
xchg
lahf
mov
int3
je
out
fld
hlt
jl
test
out
jb
dec
lods
jmp
mov
ins
ds
mov
adc
ins
cld
ret
push
jae
and
stos
data16
sub
loopne
inc
movs
mov
cld
addr16
arpl
ret
jae
mov
fwait
add
out
movs
dec
repz
addr16
aad
int3
mov
pop
aad
aas
push
(bad)
or
pop
sub
xchg
xor
mov
out
js
ins
ror
mov
addr16
or
cdq
imul
cmp
add
fnstcw
sti
ror
sbb
sub
xchg
push
rol
in
cwde
mov
and
outs
lods
repz
in
ret
push
ss
cli
add
mov
jbe
pop
jae
or
and
sub
xchg
jmp
mov
mov
jl
mov
test
mov
adc
xor
xor
xchg
mov
jmp
push
mov
mov
mov
mov
ror
sti
adc
jo
test
jne
xor
mov
jmp
data16
aas
cdq
push
hlt
(bad)
sti
ret
pop
mov
(bad)
xlat
inc
dec
addr16
jb
fst
test
push
cwde
sti
pushf
xor
cmp
inc
sahf
int3
movs
jnp
pop
jae
test
xchg
jnp
jecxz
imul
pusha
pushf
push
add
push
pop
push
mov
lahf
(bad)
mov
into
add
lock
addr16
sub
inc
adc
test
movs
stos
daa
mov
fsubr
xchg
iret
icebp
pop
push
lahf
adc
(bad)
fild
cmp
jl
push
in
sti
aas
aaa
xchg
xchg
mov
(bad)
std
mov
into
add
jne
popf
ficom
ins
xchg
adc
inc
test
mov
or
fxch
mov
sbb
(bad)
fs
mov
fistp
sbb
clc
pusha
nop
mov
punpckhdq
fisub
ret
mov
push
jbe
dec
in
jl
cli
jo
xor
fcomp
arpl
js
mov
test
sbb
push
cmp
jno
not
sbb
mov
jo
mov
(bad)
adc
mov
outs
sub
cmp
push
js
mov
cmp
cmc
and
adc
aaa
loope
jne
stc
pusha
push
push
pushf
push
dec
sahf
and
or
mov
sub
(bad)
inc
dec
mov
imul
adc
fs
or
ja
mov
mov
aam
mov
inc
xlat
sbb
outs
out
mov
mov
clc
mov
pop
sub
sbb
ret
int
sbb
mov
dec
fisub
xor
shl
inc
pop
lds
or
mov
mov
fdivr
shl
or
push
divps
xchg
xchg
push
retf
leave
in
fcomp
and
imul
push
fldenv
rcl
mov
js
adc
imul
je
add
pop
mov
inc
scas
in
retf
rcr
jge
fnstcw
mov
leave
inc
daa
lock
adc
lahf
pop
bound
pop
pop
(bad)
xchg
adc
push
push
test
test
jmp
ret
mov
or
xor
add
sbb
jp
pusha
dec
outs
jge
sub
rcl
loop
push
lahf
add
es
add
out
jae
mov
mov
fs
stc
lahf
pop
cmp
(bad)
jp
xchg
js
mov
adc
fdivr
lods
push
jns
lds
in
ret
sar
inc
and
add
leave
stc
dec
push
push
pushf
mov
sub
cmp
inc
or
cmp
jb
adc
imul
(bad)
cmp
outs
fisttp
loope
mov
(bad)
retf
in
jnp
xor
iret
push
mov
push
and
pop
sub
pop
push
inc
jmp
xchg
jbe
fs
gs
bound
xor
retf
jb
mov
dec
cmp
inc
add
push
(bad)
nop
outs
ret
mov
jmp
mov
ja
rcr
add
jp
xchg
mov
aas
arpl
mov
push
loop
cmp
inc
mov
jne
xchg
mov
mov
mov
jns
xor
nop
aam
stos
push
retf
jno
test
in
push
adc
mov
retf
imul
pop
shl
leave
(bad)
adc
push
mov
xor
jnp
shr
aam
aaa
pushf
xchg
and
jb
or
nop
push
ficom
cmc
push
cmps
gs
das
xchg
ins
sbb
or
(bad)
mov
hlt
jle
nop
mov
movs
js
loop
ss
push
cwde
data16
inc
aas
pop
scas
in
int3
adc
aaa
jecxz
dec
mov
inc
or
push
mov
pop
repnz
test
and
hlt
inc
add
xor
int
jns
data16
jmp
ds
imul
mov
lods
mov
adc
or
loope
fdiv
xor
ins
(bad)
and
mov
xor
sbb
lock
sahf
mov
ins
fwait
scas
adc
pop
js
sbb
mov
jg
and
push
add
push
aas
fadd
xchg
(bad)
adc
scas
or
cmp
mov
enter
pop
adc
pop
div
scas
aad
jmp
pop
fs
mov
sub
and
xchg
push
sbb
loopne
test
loopne
(bad)
xor
sbb
mov
test
mov
pop
(bad)
add
aam
mov
stos
inc
jo
add
test
pusha
pop
add
mov
mov
jmp
cld
ror
pop
dec
pop
sub
xor
aas
cmp
pop
push
and
cwde
fcomp
dec
mov
cmp
and
jg
ja
call
out
sub
int
jge
xchg
mov
add
loope
mov
mov
mov
scas
pop
scas
mov
in
leave
push
enter
jmp
ficom
cli
sbb
fs
ds
lahf
out
sub
xadd
mov
xor
frstor
or
ficom
out
inc
aas
ins
fsubr
push
js
std
scas
out
retf
cli
jp
mov
inc
jmp
test
fdivr
leave
xchg
ja
and
mov
inc
push
pop
cld
mov
or
in
fist
xlat
add
leave
cmp
or
int
pop
cmp
pop
lds
sbb
dec
jbe
xchg
outs
sub
inc
aas
mov
in
mov
(bad)
imul
(bad)
dec
mov
ss
nop
scas
mov
xchg
xchg
inc
out
mov
and
xchg
lods
lock
adc
popf
sub
sbb
dec
sub
sub
xor
movnti
fsub
and
lods
cld
call
mov
add
fist
in
jg
cmp
sbb
add
imul
test
addr16
push
jmp
fcmovb
popf
and
inc
mov
and
dec
xchg
(bad)
outs
cwde
shl
hlt
and
inc
ret
mov
jns
test
fst
jo
popa
movs
jmp
std
xchg
and
ja
push
dec
ins
cmp
addr16
ret
leave
push
gs
sub
jge
fwait
inc
push
xchg
mov
pushf
mov
mov
or
xchg
lods
sub
inc
dec
add
data16
sub
or
shr
lods
adc
push
sbb
push
out
imul
in
and
stos
data16
sub
popf
xchg
xlat
lea
sbb
and
fwait
pmaddwd
or
fisub
dec
stc
out
sbb
dec
lds
ins
bound
sbb
mov
scas
pop
dec
jp
dec
imul
mov
jne
jno
lods
cmps
push
shr
jle
ficomp
mov
test
jns
out
pop
push
and
xor
imul
stc
dec
push
sub
jecxz
in
pop
inc
cs
fidivr
test
push
aaa
pop
xchg
retf
sub
jnp
scas
fcmovne
movs
(bad)
xlat
retw
ja
sub
gs
or
sbb
leave
jmp
xor
pushf
iret
aad
and
xor
stos
retf
add
div
push
call
sbb
mov
cmp
lock
dec
popf
xchg
les
aas
and
cmp
or
push
popf
inc
push
loopne
cli
sbb
loop
cmc
or
sbb
cld
aad
xor
sbb
ret
add
mov
data16
and
iret
push
jne
inc
sti
retf
in
sbb
mov
pop
dec
xchg
jle
daa
out
mov
loopne
(bad)
jns
fist
fcmovnbe
addr16
in
mov
fnstsw
adc
cmp
rcl
sbb
xchg
dec
fisttp
ror
sbb
ds
mov
ja
ins
cmp
mov
cmps
daa
arpl
mov
(bad)
(bad)
mov
push
inc
aam
out
cmp
ds
pop
inc
test
and
pop
daa
sahf
dec
dec
jmp
mov
add
jmp
adc
and
aam
stos
(bad)
jmp
fnstsw
push
(bad)
jmp
mov
cmp
push
and
popf
cmp
adc
les
and
push
or
aas
ins
mov
test
fcom
cmp
mov
pop
mov
cmps
push
mov
dec
dec
push
out
fldcw
sbb
mov
into
xor
imul
outs
sti
aam
push
cli
pop
aam
push
(bad)
inc
test
sbb
fwait
jns
mov
movs
aaa
inc
mov
sub
scas
aam
xchg
loop
adc
xlat
cmp
mov
rol
push
cmp
lock
aad
mov
int
out
push
fld
cmps
pusha
rol
sbb
into
xchg
sbb
sar
cmp
call
mov
xchg
and
stos
fild
xor
inc
fcmovb
and
push
in
inc
call
mov
leave
das
in
das
xor
(bad)
xor
scas
aas
lahf
icebp
dec
dec
mov
pop
mov
add
push
xor
xchg
xor
xor
test
jge
test
mov
mov
fnstcw
or
outs
and
(bad)
inc
or
nop
arpl
push
mov
loope
jmp
jmp
jnp
aad
add
push
sub
cmp
mov
adc
sbb
xchg
call
loopne
mov
dec
xchg
or
pop
mov
dec
add
jmp
out
inc
add
push
pop
dec
inc
bound
push
aad
dec
and
sbb
pop
xchg
mov
or
out
xchg
ss
sbb
xor
fisubr
lods
sub
mul
add
repnz
out
and
ret
pop
push
mov
call
fdiv
mov
leave
call
mov
cmp
fwait
mov
push
call
pop
lea
ja
dec
sub
fdivr
movs
jns
mov
bound
and
stos
mov
mov
mov
pop
std
mov
push
dec
cdq
or
js
xor
retf
jne
mov
dec
int
or
sub
mov
mov
sbb
stos
(bad)
loopne
(bad)
call
fstp
add
jmp
movs
jle
(bad)
inc
lods
dec
xor
cs
jl
jo
jp
fcom
sti
or
mov
xchg
mov
clc
pop
addr16
jb
xor
lock
adc
dec
shl
or
pop
call
sbb
imul
(bad)
mov
ds
jnp
push
or
push
out
std
jae
mov
int
ds
vcmpunordsd
popf
fldcw
dec
and
div
adc
stos
xor
leave
(bad)
pop
mov
mov
or
rcl
fdivr
cmc
mov
dec
imul
mov
cli
pushf
aad
or
dec
test
ins
jbe
add
fldcw
test
jb
int
mov
dec
xchg
add
jmp
in
(bad)
fsubr
fmulp
adc
retf
cmp
jge
or
iret
(bad)
jno
adc
ss
mov
in
dec
cmp
mov
stos
call
fs
movs
sub
stos
jge
xor
jb
cmc
add
daa
mov
cmp
mov
mov
call
adc
pop
mov
call
add
int3
fisubr
sti
fldenv
out
loop
out
sub
div
xchg
cmps
sub
mov
repnz
arpl
dec
(bad)
sub
in
mov
sbb
test
inc
xchg
inc
mov
mov
xor
out
movs
es
repz
call
mov
push
adc
ja
test
jge
and
jl
xchg
fs
es
adc
std
mov
push
mov
mov
leave
mov
icebp
repz
scas
arpl
jge
fisttp
adc
sar
adc
push
cmps
xchg
jnp
xchg
sub
add
mov
in
lahf
push
ins
dec
jo
ins
ss
mov
inc
sub
mov
cmp
xlat
jb
and
fisubr
addr16
xor
push
cdq
xor
daa
je
fwait
xchg
pop
in
fist
jmp
fild
push
cmps
fild
rcr
gs
jno
push
iret
icebp
jp
not
mov
lea
and
pop
cmp
bound
sbb
fdivr
sbb
(bad)
stos
call
xor
es
xchg
lock
fsub
bound
adc
xor
ins
and
inc
cmp
cmps
out
jmp
xchg
out
cmp
lahf
push
dec
mov
pop
xchg
cdq
and
retf
ins
jmp
lock
cmp
(bad)
repz
dec
xchg
daa
pop
imul
dec
pop
pop
fdivr
adc
mov
mov
dec
(bad)
pop
mov
je
push
ja
push
popf
inc
test
cmp
pop
ss
call
xlat
ret
sti
push
mov
pusha
nop
and
and
int3
daa
movs
add
clc
out
ret
inc
xor
xor
mov
jp
sahf
aas
in
test
fsubr
shl
sbb
cmp
pop
mov
dec
fstp
or
hlt
aad
dec
stos
into
xchg
and
dec
dec
mov
mov
dec
dec
addr16
sar
pop
cmps
in
ret
add
mov
cmc
push
sub
pop
xchg
cmp
push
jns
arpl
jl
das
lds
xchg
mov
dec
xchg
add
aaa
in
pop
jb
jp
fnsave
jae
xor
xchg
mov
mov
fstp
mov
retf
fsubr
jl
jge
push
fist
nop
clc
jge
rol
cmp
fcmovb
adc
push
(bad)
repz
iret
sbb
push
mov
jne
ret
test
cdq
mov
xor
sbb
(bad)
adc
fstp
(bad)
in
push
sub
(bad)
fsubr
neg
add
xchg
popa
mov
lock
lock
sbb
scas
je
sar
xor
js
(bad)
xor
mov
and
cwde
icebp
mov
xor
inc
es
neg
push
or
sbb
gs
add
dec
es
nop
sub
push
add
cmp
adc
stos
ficomp
aaa
cmp
add
add
push
fld
retf
or
out
retf
repz
mov
inc
test
and
and
pop
(bad)
xlat
dec
iret
repz
fbstp
and
add
sbb
push
push
pop
sub
and
inc
(bad)
dec
cmc
into
repz
dec
bound
and
push
sar
sub
sub
sbb
retf
das
das
das
sbb
ins
jmp
sub
cwde
mov
fcom
sbb
movs
mov
mov
mov
aam
mov
pop
inc
aad
xchg
cmp
add
mov
fcom
fidiv
scas
mov
xchg
mov
mov
sbb
xor
stc
ds
enter
pop
lahf
add
mov
pop
loop
call
sub
push
sar
and
aam
and
push
xor
pop
mov
xchg
jae
cwde
xor
sbb
dec
push
or
test
jg
dec
dec
(bad)
mov
sbb
adc
ret
mov
mov
es
push
and
pop
add
xor
ss
ret
push
or
daa
mov
and
mov
jo
push
add
mov
sub
lock
jge
dec
stc
jo
das
pop
push
in
mov
repnz
leave
jg
fs
sub
lods
test
pusha
sub
nop
into
jl
cs
in
sbb
xor
sub
add
loop
fwait
and
xlat
sbb
(bad)
dec
out
lahf
scas
(bad)
loope
pushf
mov
xlat
ins
pop
lahf
add
xchg
stc
jo
cs
in
dec
es
xor
xchg
nop
xchg
jecxz
call
js
inc
push
cmp
outs
lahf
mov
movs
inc
lods
adc
mul
cmp
popa
fsubr
pop
mov
push
jge
inc
jp
cmp
inc
mov
push
adc
test
mov
push
adc
mov
(bad)
outs
sub
cmp
adc
scas
repnz
call
rol
mov
arpl
cmp
(bad)
arpl
cwde
stos
das
push
sub
dec
ins
adc
push
push
outs
lods
call
sbb
or
pop
sub
pop
mov
mov
cmp
imul
ss
lea
sub
jbe
xor
aad
in
fidiv
push
mov
and
icebp
cld
cwde
cmp
pmulhw
retf
je
lahf
ror
ret
call
loope
(bad)
jmp
jl
sub
lds
ret
lea
xchg
jp
test
(bad)
arpl
mov
push
mov
xor
bound
fsubr
add
jg
push
out
add
imul
or
xor
test
mov
rcr
pop
adc
dec
retf
jo
pop
inc
(bad)
or
call
stc
pop
ja
cli
cmp
jge
or
inc
sbb
inc
or
popf
xor
jno
xor
add
pushf
stos
xchg
sub
js
or
arpl
out
inc
loopne
aam
pop
sub
aad
pop
jnp
mov
cmp
std
push
inc
movs
(bad)
fist
cmp
lea
sbb
stos
jns
pop
test
xchg
mov
xor
sbb
mov
fbstp
adc
imul
push
sub
(bad)
in
arpl
retf
outs
rol
nop
inc
push
sahf
inc
popa
rcr
(bad)
and
leave
dec
or
lea
cwde
xor
sub
loop
pop
dec
push
adc
leave
cld
dec
mov
in
aad
test
cdq
out
push
fs
mov
pop
test
jbe
out
repnz
pop
mov
push
mov
dec
lods
adc
mov
leave
and
xor
nop
pop
cmps
sbb
aad
ins
mov
pop
lods
movs
jp
xor
fstp
test
retf
mov
mov
xor
push
scas
dec
push
sbb
shr
pop
and
out
loop
iret
(bad)
mov
repz
cmovbe
push
or
lock
leave
sub
sbb
push
or
ja
popf
and
inc
arpl
cmp
sbb
pop
jns
dec
xchg
push
cmp
out
cmp
or
int3
in
mulps
add
push
cmc
sahf
inc
jmp
ficomp
call
adc
rcl
xor
cmp
loope
aas
adc
push
mov
loop
add
and
push
push
retf
adc
pushf
repnz
jmp
lods
rcl
xchg
adc
retf
sbb
rcr
and
cmp
lahf
mov
ret
sub
pop
movs
adc
test
mov
in
push
jmp
dec
hlt
scas
cmc
adc
stos
sbb
mov
(bad)
dec
push
cmp
hlt
ret
cdq
sti
adc
and
pop
stos
sub
mov
mov
jnp
cmp
xor
lock
mov
call
inc
jo
call
push
cmp
xor
ins
in
xchg
push
jae
jmp
sub
sahf
ins
leave
push
mov
nop
add
mov
push
pop
mov
mov
into
mul
lods
mov
cmp
push
in
scas
cld
jmp
push
xor
movs
adc
or
(bad)
stos
out
out
into
inc
lock
pop
inc
loopne
lods
cmps
test
add
sbb
sub
lea
sbb
push
xchg
hlt
in
jne
fld
test
repz
dec
test
add
mov
jne
out
jbe
jno
xchg
and
sbb
dec
ja
out
sbb
push
or
pop
adc
in
popa
cs
inc
push
jns
(bad)
jge
jo
sub
into
push
or
add
push
pushf
fwait
cld
arpl
jmp
pusha
xor
scas
cmp
jl
inc
aam
adc
rep
pmuludq
dec
mov
fwait
push
and
adc
mov
xchg
dec
stos
mov
fsub
cwde
pop
out
inc
sub
inc
sbb
pop
xor
cmp
jne
sahf
adc
out
or
jmp
xor
enter
aam
ror
or
icebp
or
outs
add
or
dec
cld
lock
dec
add
pop
xor
es
(bad)
or
(bad)
fucomi
loop
push
out
rol
push
and
adc
ror
dec
and
test
fwait
ret
loopne
xor
retf
push
pushf
and
xchg
cmp
pop
bound
(bad)
(bad)
popa
test
in
loop
dec
push
arpl
push
xor
and
inc
icebp
add
add
in
pop
je
xor
dec
sub
inc
cmps
mov
in
popa
call
sbb
stos
das
pusha
add
fstp
(bad)
adc
xor
jl
sub
mov
(bad)
mov
aaa
cmp
mov
pop
add
sub
fist
jnp
pop
add
push
imul
xor
xor
loope
test
mov
push
mov
(bad)
mov
fiadd
cmp
gs
inc
inc
aas
fistp
adc
mov
fadd
and
pop
sti
rcr
jg
mov
outs
cs
sbb
mov
call
in
mov
call
push
pop
dec
mov
jmp
mov
ret
mov
inc
cs
ins
adc
mov
stos
aas
cmp
fcom
add
sbb
(bad)
and
jecxz
rcl
push
inc
cs
sub
sub
call
sbb
cld
jg
mov
repz
cld
out
stos
mov
pop
mov
test
xor
xchg
mov
cmc
sbb
dec
mov
ins
addr16
test
mov
in
mov
and
pop
xor
xchg
das
out
xor
xchg
jge
jne
inc
in
inc
(bad)
cli
push
sbb
push
fisubr
inc
sub
mov
cmc
mov
and
jmp
xlat
fisub
xchg
and
mov
repnz
cmp
mov
cmp
sub
test
push
fwait
inc
stc
loope
xchg
in
pop
je
xor
rol
daa
mov
and
lahf
lods
mov
das
xor
dec
mov
adc
and
mov
retf
xchg
cmc
cli
jle
or
fwait
xchg
pop
mov
and
test
ror
inc
jecxz
jb
jmp
mov
xchg
ja
stos
in
sbb
(bad)
mov
cmc
fisubr
add
imul
and
movs
jo
dec
je
leave
repnz
cmp
sub
loope
test
test
call
imul
mov
nop
cmp
cdq
pop
xchg
mov
pop
xchg
adc
mov
aas
jl
push
(bad)
pop
mov
fld
hlt
cld
addr16
mov
pop
daa
clc
pusha
jmp
int3
aas
adc
pop
adc
inc
popf
std
mul
push
xor
xor
arpl
pop
rcl
xchg
cmp
push
ror
mov
popa
and
jmp
ds
ds
mov
mov
or
scas
sub
jle
inc
imul
ja
adc
repz
push
iret
mov
xor
inc
mov
mov
pop
or
xor
mov
xor
sub
aas
int3
mov
and
(bad)
lahf
dec
xor
and
test
lods
adc
xchg
jmp
add
inc
xchg
repnz
jne
retf
hlt
outs
cwde
push
add
add
xor
adc
mov
jb
mov
js
ret
retf
mov
push
rcl
out
cs
inc
icebp
test
mov
jbe
mov
add
jno
mov
inc
rcr
repnz
out
std
xchg
ss
cmp
inc
pop
lds
jae
or
leave
and
xchg
movs
fisub
aad
adc
outs
(bad)
or
test
leave
repz
(bad)
jb
fs
sbb
and
dec
inc
out
push
and
(bad)
fwait
mov
out
push
(bad)
imul
jae
int3
outs
pop
and
xchg
(bad)
push
aas
outs
hlt
scas
aad
out
mov
inc
inc
fldl2t
mov
cmp
and
inc
icebp
dec
mov
jbe
push
sbb
ins
inc
scas
out
push
shl
sub
jbe
in
mov
mov
xchg
sbb
jbe
pop
repnz
js
sub
ret
shl
out
push
bound
pop
inc
jg
pushf
mov
inc
iret
int3
adc
xchg
mov
imul
sahf
jmp
retf
mov
pop
ins
cmps
and
int
outs
shl
xchg
mov
or
mov
mov
jno
pop
cld
test
xor
mov
mov
rol
sub
addr16
mov
in
je
movs
arpl
not
mov
test
int
test
sbb
and
push
(bad)
jmp
(bad)
mov
jge
cmp
outs
mov
jmp
mov
hlt
into
sbb
arpl
jae
pop
xlat
pop
mov
js
dec
das
pop
mov
(bad)
xchg
cmp
add
fwait
mov
loopne
cld
jge
out
ins
dec
ror
movs
jl
inc
jg
lock
stos
cmc
xchg
add
xor
retf
mov
push
daa
push
scas
or
sbb
sbb
cld
sbb
les
dec
addr16
ja
pop
scas
and
inc
cs
out
jo
mov
mov
mov
sub
repnz
cli
add
adc
cdq
retf
lds
movs
cmp
mov
push
mov
(bad)
pop
cmp
inc
xchg
dec
ret
out
mov
mov
xchg
ja
call
das
mov
inc
jle
aaa
stos
dec
xor
add
and
aad
inc
mov
jmp
cmp
dec
xchg
push
loopne
pop
(bad)
faddp
aaa
pop
inc
adc
adc
push
cld
pop
jmp
and
xor
cmp
loope
aaa
xchg
loopne
mov
movs
add
pushf
lock
sbb
pop
push
xor
add
push
call
pop
mov
xor
jno
inc
fsubr
aas
int
xor
test
add
dec
sbb
mov
adc
mov
sbb
or
xchg
mov
xor
dec
sbb
lahf
fsubr
leave
mov
mov
jb
scas
pop
cmp
jmp
int
rol
fstp
jns
jno
cwde
pop
mov
add
sub
mov
pushf
js
shl
xor
pop
pop
or
cmc
mov
popf
add
mov
jb
jno
adc
popa
sub
inc
cmp
xor
out
mov
pop
fsubrp
mov
(bad)
cmp
ins
(bad)
mov
jg
retf
mov
repz
xor
fimul
xor
fild
sub
jne
or
aad
push
pop
in
lahf
in
mov
aam
(bad)
push
inc
mov
gs
stos
adc
pop
mov
repz
sub
xchg
adc
mov
outs
xor
js
mov
test
jbe
das
into
out
push
sub
xlat
mov
rol
imul
ja
lea
jecxz
call
test
xor
add
dec
sbb
xor
xchg
mov
sbb
fadd
or
fmul
(bad)
in
cmps
clc
fstp
retf
sti
ds
call
retf
adc
xchg
jns
stc
movs
or
sbb
call
or
fdiv
lock
pop
mov
ficom
fst
push
mov
mov
or
mov
dec
pshufw
sub
jmp
mov
repnz
xor
loope
or
ins
jmp
cmp
loopne
repnz
test
test
loop
push
addr16
out
cmp
sub
xor
fimul
inc
sub
mov
jb
push
mov
lahf
mov
push
in
jg
mov
jns
mov
xchg
inc
or
add
jecxz
test
xor
clc
mov
out
fdiv
xor
jns
hlt
xor
jmp
imul
in
js
mov
xchg
xor
imul
outs
inc
xor
sub
scas
stos
mov
cld
sbb
jge
cmp
and
pop
adc
int
sub
ud1
dec
scas
imul
jns
push
jmp
bound
cdq
pop
or
xor
sahf
jge
call
stos
xchg
je
pop
inc
and
or
aas
(bad)
lock
stc
rcl
add
retf
cmp
sahf
movs
rol
into
jo
xor
dec
aam
mov
add
jle
fs
cmc
icebp
lods
xchg
ja
sub
xor
or
mov
mov
call
add
mov
dec
std
in
(bad)
scas
fdiv
out
inc
adc
gs
mov
stos
adc
adc
sti
mov
in
push
shl
pushf
mov
test
pop
add
mov
stc
pop
stc
cmp
sub
sub
psrld
cmps
out
inc
dec
loopne
and
mov
push
xchg
sub
jnp
jnp
sub
cld
out
test
jns
int
inc
sbb
jp
cld
scas
mov
cmc
mov
and
shl
aam
cmp
stos
shl
jns
js
cmps
cmp
sbb
xor
mov
mov
xor
mov
sub
rcl
popa
push
loop
jl
mov
jb
push
xchg
cmps
lahf
in
jne
push
icebp
or
dec
push
int
in
add
test
cld
mov
aam
mov
(bad)
cmps
mov
pop
and
sti
loope
(bad)
and
out
in
cmp
dec
adc
adc
fild
push
les
repnz
lods
inc
in
scas
mov
cmps
sbb
outs
mov
mov
mov
sub
mov
imul
xchg
mov
mov
adc
scas
lea
int3
cmps
push
dec
fmul
xchg
outs
out
inc
xchg
mov
xchg
lods
xchg
(bad)
pop
mov
daa
iret
xor
imul
hlt
lea
push
jo
push
pop
pop
fsubr
retf
or
aaa
jge
mov
mov
pop
retf
enter
cmps
ja
xchg
sbb
mov
arpl
jbe
out
push
pop
and
sti
jmp
iret
xchg
sbb
aaa
push
push
jle
popf
gs
jae
add
mov
mov
mov
retf
loop
jb
fnstcw
aam
pop
xor
or
dec
cmc
mov
loopne
xchg
jle
imul
test
xchg
mov
retf
cmc
lods
inc
cs
nop
xor
adc
cld
xlat
mov
daa
mov
xchg
(bad)
pop
xchg
sti
enter
stc
cmp
push
int
(bad)
and
ja
mov
mov
sub
xchg
mov
jne
mov
jmp
mov
add
xor
jne
and
sbb
adc
mov
jmp
adc
sar
mov
cld
call
adc
jns
cmp
and
xor
mov
mov
push
sbb
pop
jg
movs
shr
sub
jl
es
neg
jl
xchg
(bad)
in
push
movs
jnp
mov
jle
push
nop
or
xchg
pop
lods
jns
xor
es
adc
mov
test
jmp
iret
push
je
and
xor
rol
and
inc
mov
push
pop
outs
adc
aaa
cmc
and
push
push
mov
jl
fmul
sbb
inc
mov
js
cmps
aaa
dec
shl
mov
pop
xchg
leave
pushf
rol
nop
or
inc
push
(bad)
repz
dec
push
mov
xor
outs
popf
arpl
and
xor
inc
icebp
mov
pop
call
arpl
aam
xor
xor
lds
into
jl
iret
mov
pop
icebp
clc
std
mov
jp
ds
mov
ret
out
jg
stos
arpl
fimul
ret
xchg
pop
jg
pushf
dec
jbe
test
cli
into
adc
dec
xchg
push
xor
mov
dec
sub
add
mov
outs
jns
cmp
cmps
jg
cwde
pop
test
or
cmps
in
mov
sbb
out
xchg
lods
sbb
fist
sbb
addr16
fidivr
pop
sub
dec
je
push
inc
rcr
outs
ficom
jne
(bad)
sahf
nop
jmp
out
add
xor
cld
and
retf
mov
test
rol
cmc
sbb
mov
or
push
pop
(bad)
push
dec
mov
inc
ret
sbb
in
cmp
dec
add
(bad)
push
mov
scas
jnp
jb
push
imul
mov
xchg
adc
clc
std
xor
xchg
leave
loope
push
xchg
fcomp
std
jo
xchg
nop
lods
add
pushf
xchg
imul
ss
push
jae
cld
test
dec
js
or
sbb
xchg
jb
or
out
sti
jmp
mov
ffreep
push
fucomp
cmp
in
sbb
inc
mov
das
lods
pop
arpl
jg
(bad)
inc
inc
push
dec
in
popf
push
adc
fisttp
add
adc
ss
mov
sbb
xor
(bad)
not
xor
call
and
inc
ja
sar
out
pushf
cmp
or
mov
mov
outs
mov
hlt
cli
mov
fisttp
push
scas
jg
sbb
jno
pop
ja
es
sub
fidiv
adc
xchg
xor
aaa
add
es
or
mov
inc
push
push
fdiv
push
es
fwait
loopne
xor
out
jge
mov
shl
rcl
mov
movs
add
outs
jle
mov
jnp
mov
xchg
jne
jl
into
mov
lock
cmp
add
jl
mov
dec
push
mov
test
loope
add
nop
enter
rol
sahf
lds
mov
ror
xchg
mov
shl
xor
ins
and
outs
scas
sbb
movs
mov
sub
aaa
xlat
ret
xor
ss
(bad)
fiadd
inc
inc
jmp
enter
ret
scas
mov
mov
add
repz
(bad)
ja
pop
add
cmp
mov
sub
fsub
sti
sub
loop
pushf
cmp
sbb
or
sub
addr16
xchg
or
sub
and
cs
popf
fist
push
out
pop
sub
addr16
cmps
mov
jmp
adc
or
dec
push
inc
cmp
call
ja
jb
(bad)
adc
aas
call
cmp
test
fidiv
push
outs
inc
push
stc
adc
sbb
aam
les
xor
dec
mov
aas
adc
lds
push
(bad)
lds
mov
inc
mov
pop
dec
pushf
xchg
xchg
inc
sub
mov
add
pop
jmp
cld
cwde
mov
cmps
mov
add
dec
sar
dec
push
or
fmul
fcom
ja
jmp
adc
mov
push
or
mov
mov
ret
and
les
lods
es
(bad)
jp
push
iret
adc
(bad)
pop
pop
push
pop
mov
xchg
fisttp
(bad)
adc
cmp
mov
push
mov
jecxz
push
cmps
(bad)
(bad)
int
sbb
mov
cmp
loop
shl
outs
aaa
int
shr
mov
push
test
xchg
mov
push
(bad)
mov
mov
sub
outs
outs
mov
add
sti
inc
jmp
pusha
loopne
push
sub
inc
add
xchg
fcompp
jecxz
sbb
sbb
arpl
out
push
aaa
ret
out
pusha
mov
xor
movs
pop
aad
add
xlat
inc
int3
addr16
fnstsw
jb
jg
inc
pop
sub
aaa
dec
add
cld
div
out
fld
shr
scas
push
mov
lods
cld
adc
cmp
aam
pop
cli
mov
xchg
xchg
push
fisub
(bad)
mov
push
(bad)
jg
scas
sbb
ds
arpl
mov
les
inc
inc
inc
mov
ss
rcr
aas
dec
xchg
rcr
in
xor
inc
fcompp
(bad)
jb
sahf
ret
movs
pop
pop
xor
pop
movs
dec
rcl
fild
pop
bound
mov
lock
test
jmp
pop
adc
movs
push
ins
sub
mov
pop
daa
je
lods
cmp
das
adc
mov
cmp
inc
jae
pop
aad
cmp
mov
dec
push
push
sbb
fstp
arpl
popf
out
movs
(bad)
mov
sahf
rcr
jno
fdivr
(bad)
addr16
rcr
test
es
ins
repnz
sbb
jg
ds
or
adc
mov
and
pop
push
mov
test
push
inc
movs
sbb
(bad)
push
mov
fs
pop
jmp
in
lea
sbb
call
in
push
and
imul
sar
stos
pop
cmp
adc
xchg
cmps
dec
outs
ins
xor
loop
sub
cmp
pop
inc
sub
sub
sub
and
adc
fldpi
(bad)
nop
mov
(bad)
repnz
push
and
push
das
ret
hlt
dec
lods
movs
cmp
cdq
cmp
sub
sbb
mov
mov
sbb
cmp
ret
cmp
cs
bound
push
jno
xor
mov
or
clc
bound
stc
cmps
ficomp
mov
dec
pushf
jno
fwait
pop
stos
xchg
mov
xchg
loop
movs
mov
push
dec
iret
les
inc
jle
icebp
xchg
mov
out
sub
jb
aaa
clc
movs
cmp
mov
dec
sub
and
nop
in
sub
or
stos
ficom
cmps
sbb
jmp
push
fnstenv
dec
cld
fucomi
fnstcw
stos
cmp
and
retf
aam
push
lock
sbb
add
inc
popf
lock
jne
leave
adc
fistp
hlt
add
(bad)
ja
js
(bad)
setbe
sub
fsub
test
das
mov
xor
mov
das
dec
push
or
ja
imul
inc
(bad)
ins
jae
jne
or
xchg
adc
mov
push
xchg
jmp
inc
ror
fcomp
jle
inc
mov
aam
xchg
les
pop
out
sub
ds
and
sbb
pop
inc
dec
or
jmp
sub
cmps
test
cdq
mov
scas
int3
call
pop
(bad)
gs
push
rcl
nop
jo
cmp
sbb
retf
rcl
rol
in
lea
retf
and
xchg
aam
xchg
std
mov
xor
scas
outs
fcomp
stos
ins
test
and
hlt
hlt
lods
jo
mov
push
es
std
outs
dec
(bad)
adc
pop
push
sti
sbb
sbb
(bad)
aam
aad
push
loope
(bad)
xchg
shl
push
xchg
repnz
jmp
sub
cmp
int3
in
out
nop/reserved
dec
dec
mov
cdq
push
ds
lahf
push
stos
pop
in
add
sub
int3
ja
lods
adc
test
ds
jecxz
jmp
mov
gs
sub
jne
xchg
pop
(bad)
push
icebp
or
out
shr
pop
xor
adc
pushf
mov
pop
fisub
mov
stos
in
je
cmp
inc
push
frstor
adc
shl
mov
cmp
add
xor
mov
fld
rcl
sub
imul
xchg
pushf
sbb
out
je
div
pop
xor
shl
not
retf
(bad)
lahf
je
iret
mov
fs
(bad)
adc
sub
xchg
sbb
aaa
mov
inc
jnp
scas
leave
sub
sbb
add
sbb
(bad)
jae
shr
rcr
icebp
out
cmc
jmp
(bad)
pusha
les
data16
mul
dec
in
sub
out
ds
jg
cmps
mov
in
mov
pop
fidivr
mov
iret
and
or
add
jbe
inc
inc
in
fst
inc
dec
inc
cmp
jmp
sbb
cmp
sub
cmp
fsub
lea
add
std
dec
mov
inc
dec
jge
sbb
sar
pop
xchg
dec
or
pop
cmp
int
out
jmp
or
add
in
sbb
test
shl
cld
push
jbe
push
(bad)
jbe
inc
inc
aas
je
(bad)
ja
jmp
(bad)
mov
push
mov
jno
add
mov
ins
int
dec
jecxz
es
mov
loop
push
aas
fcom
test
sbb
jl
fwait
setp
das
pop
enter
cmps
jns
enter
fwait
daa
enter
mov
mov
sbb
mov
pop
inc
out
out
out
and
mov
lock
and
out
daa
test
push
in
movs
and
cmc
add
stc
xor
xor
test
xor
pop
dec
lock
xchg
cmps
(bad)
imul
and
jbe
pop
leave
sti
push
call
sahf
dec
repnz
mov
ins
call
jnp
stos
bound
ret
jl
popf
xchg
jne
add
mov
jmp
ds
in
out
shr
sahf
aaa
pop
popf
xor
clc
or
out
xchg
fs
xor
repz
pop
cs
in
xchg
xchg
loope
mov
scas
fwait
(bad)
popa
adc
jmp
fdiv
gs
dec
sti
push
aas
push
fldcw
xor
fcomp
test
test
jmp
or
mov
retf
sub
and
push
pushf
(bad)
int
push
sar
add
add
adc
stos
jo
scas
ins
cdq
xchg
mov
aas
and
std
loopne
test
ins
push
in
icebp
lea
mov
jmp
push
fild
sbb
xlat
leave
jae
pusha
outs
mov
dec
shl
cmp
das
pop
das
xchg
xchg
std
xor
cwde
or
aad
lahf
pop
inc
lock
ret
lds
pusha
xlat
add
das
test
jmp
sbb
mov
call
xor
js
inc
mov
and
call
retf
sbb
inc
mov
push
ret
scas
xchg
mov
sti
sbb
mov
call
mov
mov
mov
pop
neg
retf
adc
cs
mov
movs
lds
cmc
stc
xor
sbb
mov
in
js
adc
(bad)
push
test
stc
pushf
jmp
mov
idiv
clc
in
inc
aaa
xor
into
ins
push
movs
add
arpl
arpl
or
out
gs
xchg
xchg
test
repnz
cs
ins
es
or
out
leave
in
fwait
xor
jno
push
lods
push
push
sbb
es
mov
push
or
enter
inc
aaa
jge
or
test
mov
or
pop
inc
cwde
iret
xor
sub
jno
jl
cdq
gs
jp
dec
cdq
inc
test
mov
js
sub
jns
jb
adc
adc
js
push
xchg
sahf
call
xor
and
cmp
div
loopne
mov
imul
jmp
lahf
sub
call
cwde
movs
mov
pop
cmp
int
push
mov
inc
mov
in
or
das
das
call
(bad)
push
retf
jp
sbb
mov
fs
rol
loope
(bad)
mov
xchg
xchg
pop
push
cmp
scas
test
push
das
push
pop
inc
dec
jle
push
sub
ret
adc
mov
loop
mov
(bad)
into
pop
ficom
call
jmp
pop
add
inc
popf
adc
jb
retf
mov
pop
dec
jmp
xlat
fcmovu
shr
jo
mov
mov
sahf
or
xchg
mov
inc
mul
or
or
(bad)
sub
fldenv
lds
jnp
push
push
test
retf
lods
sbb
js
and
cmc
dec
(bad)
rol
sub
xor
cmp
out
lock
pop
in
sub
das
dec
mov
cmp
test
popf
mov
pop
adc
retf
icebp
pop
aaa
ret
xchg
retf
in
mov
test
sbb
sbb
out
movs
in
fbstp
cmp
adc
pop
loope
cmp
dec
or
or
mov
clc
test
sub
push
mov
stos
mov
push
popf
daa
and
pop
(bad)
jle
js
(bad)
cli
gs
add
or
jno
shr
addr16
adc
inc
(bad)
sub
fidiv
mov
dec
mov
jecxz
inc
pop
daa
ror
addr16
xchg
and
movs
sbb
push
xchg
call
jl
sahf
inc
mov
and
psubb
sbb
imul
mov
cmc
pusha
push
xchg
xchg
icebp
xchg
sbb
or
adc
stos
xor
dec
loopne
mov
jp
inc
stos
ret
aad
xchg
hlt
std
xor
adc
jo
call
xor
adc
call
jp
add
sbb
cmp
mov
jle
popf
cmps
mov
jg
sub
push
or
fisttp
fs
test
(bad)
jmp
je
loope
inc
retf
cmp
xor
adc
stos
mov
iret
xchg
push
mov
(bad)
jl
fstp
cmp
lods
and
mov
(bad)
arpl
(bad)
hlt
mov
jae
push
xor
adc
(bad)
jno
mov
jb
xchg
nop
adc
jo
adc
and
add
in
fucomi
sti
lds
jmp
test
and
and
shr
fistp
mov
imul
out
bound
iret
xor
std
push
outs
pop
pusha
jnp
sub
rcl
jge
xchg
pop
cmps
push
fimul
inc
repnz
not
aam
adc
xchg
add
arpl
rcr
xor
xor
jnp
lock
cmp
mov
mov
push
sbb
add
xchg
ficom
ds
div
jne
or
pop
in
jecxz
adc
ins
test
lea
mov
dec
ins
cmp
in
ins
pop
push
and
push
iret
(bad)
test
sbb
fs
xchg
sbb
add
xor
(bad)
xchg
repz
push
pusha
or
iret
mov
es
or
fcom
jge
fwait
jmp
jae
adc
xchg
push
bnd
bound
sbb
add
cmp
popf
add
pop
jns
xor
test
inc
pop
lock
ficomp
xchg
mov
out
fs
cld
leave
push
jne
pusha
push
bound
jl
inc
pop
jnp
clc
enter
jecxz
pusha
jb
test
in
sbb
rcr
mov
cmp
fcomp
cmp
test
scas
or
or
int
bound
push
pop
cli
adc
adc
js
or
call
mov
(bad)
and
push
lods
adc
xchg
imul
arpl
test
xor
imul
inc
(bad)
in
xchg
xor
xlat
sub
jmp
fadd
push
cmps
loopne
icebp
call
aad
imul
push
shl
and
mov
inc
into
fidiv
dec
dec
mov
pop
outs
ret
mov
cmp
je
xchg
loopne
mov
sahf
dec
add
push
mov
arpl
xor
pop
xchg
out
mov
rcr
vshufps
jbe
sbb
scas
in
loope
mov
jns
(bad)
cli
js
pushf
inc
ds
stc
dec
sub
test
jb
rcr
cmp
stos
stc
jmp
lock
or
or
jnp
adc
sub
dec
dec
adc
lahf
mov
jo
aad
jmp
movs
xchg
ins
push
loopne
jno
es
fsub
xlat
push
ror
xchg
mov
pcmpeqd
lahf
aad
arpl
xchg
icebp
cdq
leave
outs
mov
sub
sbb
cmp
neg
ins
pop
mov
aad
hlt
dec
lds
data16
add
rcr
scas
jmp
push
inc
in
imul
add
jmp
das
mov
add
popa
or
xor
cmps
popf
cmps
xorps
fcomi
int3
cmps
mov
ret
jno
and
lds
loop
icebp
out
or
ret
pushf
inc
in
jecxz
(bad)
fnstsw
adc
add
pop
push
repnz
iret
jne
pop
xchg
cmps
mul
xor
enter
enter
mov
dec
lahf
arpl
outs
sbb
popf
jl
pop
test
sahf
ins
xchg
in
fcmovb
mov
sub
and
xchg
xlat
sbb
mov
outs
add
dec
cmp
clc
retf
loopne
js
fwait
jmp
dec
jmp
cmp
mov
rcr
dec
cli
call
lods
or
fnsetpm(287
sbb
into
inc
out
cdq
mov
or
fsubr
(bad)
sub
push
aam
into
mov
mov
stc
pop
pop
aad
enter
adc
dec
les
jecxz
cdq
sub
adc
inc
les
in
or
icebp
or
and
sar
dec
cs
gs
in
xchg
and
inc
inc
cdq
mov
xchg
sbb
xor
(bad)
ja
retf
or
fidiv
dec
(bad)
enter
mov
xor
adc
pop
xchg
imul
cs
adc
cmc
push
ins
push
push
mov
sbb
arpl
push
and
out
in
lods
in
mov
mov
inc
jb
jbe
pushf
js
mov
daa
call
dec
push
mov
dec
cmp
sbb
ret
pop
push
mov
aaa
sar
xor
mov
sbb
jmp
rcl
push
cld
cmp
iret
xchg
mov
cmp
popf
cmp
(bad)
imul
pop
pop
cmp
pushf
push
les
jb
mov
cmp
lods
sbb
and
ret
out
xor
cli
stc
sbb
xchg
or
imul
nop
mov
xchg
mov
sub
in
pop
hlt
xor
cmp
out
jmp
sahf
sbb
pop
dec
pop
sbb
(bad)
pop
sbb
push
push
js
cdq
xor
enter
in
cmps
pop
mov
repnz
movs
sub
fcomp
stos
and
push
arpl
mov
jg
push
scas
(bad)
imul
mov
in
pop
mov
out
mov
loopne
inc
int
call
dec
movs
sub
sub
inc
mov
enter
rol
adc
xchg
mov
dec
push
lock
sub
out
adc
bnd
cmp
das
jmp
mov
dec
or
pop
pop
lock
repnz
movs
pop
push
lahf
test
into
int3
jb
pop
cmps
pop
adc
fwait
sub
push
sbb
add
xor
push
cld
dec
pop
xchg
push
inc
icebp
dec
cmp
xchg
push
xchg
push
cmp
xchg
outs
sub
les
mov
rcr
jl
or
sar
xchg
test
pushf
xchg
ss
mov
stos
mov
jge
and
test
lea
(bad)
pushf
ja
rol
ret
aas
mov
lock
adc
fwait
mov
xchg
movs
(bad)
cmp
out
sub
jne
sub
inc
pop
mov
or
add
pop
push
fcomi
lods
inc
adc
fs
cmp
std
push
js
into
ins
pop
xor
sbb
or
popf
icebp
push
fst
jo
adc
adc
sub
mov
fisttp
repnz
in
sbb
out
icebp
outs
jmp
pop
lahf
pop
add
pop
neg
xchg
xor
jmp
cld
mov
es
div
std
popa
je
push
dec
mov
bound
std
jo
fistp
inc
loope
je
int
bound
pushaw
cmp
movs
test
xor
out
mov
popa
fistp
or
mov
pop
cmp
retf
cli
sbb
pop
add
jle
and
outs
lods
mov
test
rol
push
xlat
sbb
push
xchg
out
loop
in
ret
imul
pusha
movs
push
inc
mov
out
test
or
mov
popf
pop
sbb
(bad)
into
mov
sbb
jmp
and
movs
pmuludq
in
fiadd
stos
int
xchg
cs
xor
arpl
adc
xchg
mov
xor
mov
mov
int
mov
and
adc
(bad)
scas
mov
pop
push
cmp
push
out
js
jae
dec
cs
dec
inc
pop
adc
xchg
iret
sahf
ins
push
loope
je
call
fidiv
call
jg
add
int3
mov
jb
jle
fldcw
cmp
adc
(bad)
mov
jmp
adc
repnz
rcl
stc
add
into
sub
addr16
adc
jno
xchg
stc
mov
enter
pop
jae
jecxz
je
sbb
ror
mov
sahf
loop
test
aaa
das
pop
adc
pop
retf
adc
add
adc
pop
jmp
in
(bad)
loop
movs
(bad)
jp
rol
push
add
dec
int3
jno
loop
sbb
inc
jo
in
cmp
mov
cmp
mov
iret
mov
cdq
and
pop
or
fidiv
mov
outs
in
xchg
mov
pop
fwait
int3
retf
or
add
in
mov
mov
mov
inc
adc
and
ror
cmp
xor
cmp
push
push
jae
cmp
ss
sbb
movs
or
shl
dec
mov
or
xchg
mov
(bad)
jecxz
cmp
cmp
dec
pop
push
retf
add
jg
ret
jmp
retf
mov
inc
jmp
loopne
pushf
dec
pusha
mov
push
(bad)
fcom
mov
push
pop
add
pop
or
xor
out
push
outs
cld
std
sub
fisttp
repz
or
add
(bad)
(bad)
jae
inc
test
mov
test
nop
and
outs
mov
mov
and
mov
push
jnp
jne
addr16
leave
mov
test
pop
adc
mov
cmp
lds
jo
mov
push
sub
xlat
push
jne
mov
aad
jne
mov
cmp
jns
sbb
pop
inc
mov
pop
out
in
pop
mov
cmps
in
in
stos
xor
mov
or
icebp
mov
xor
add
dec
mov
(bad)
xchg
dec
push
cmps
xor
pop
(bad)
dec
adc
add
dec
xchg
mov
mov
jnp
mov
xor
and
mov
into
aas
lahf
dec
pop
rcl
pop
dec
xor
inc
push
adc
test
push
push
movs
jp
jecxz
xlat
and
cmps
mov
retf
ror
xlat
mov
call
cmp
cdq
and
sbb
cmp
call
scas
jbe
mov
jp
adc
pusha
movs
call
shl
test
push
sub
sub
or
mov
push
mov
call
cmp
pop
rcl
int3
test
mov
sub
loopne
xchg
cwde
stos
xchg
jae
sar
jge
or
mov
mov
mov
icebp
or
pop
arpl
imul
mov
cdq
dec
mov
movs
leave
ins
inc
scas
addr16
js
push
out
xor
loopne
lods
pop
fwait
cmp
movsx
fidivr
imul
cmc
xchg
sbb
stc
stos
jp
cmc
push
xor
sbb
cmc
adc
and
movs
mov
pop
mov
jmp
mov
mov
les
call
jbe
cmp
jb
les
mov
and
cmp
dec
jnp
fisttp
fst
ja
cmp
xchg
rol
inc
fcom
dec
lea
mov
mov
sbb
inc
pop
push
movs
dec
sahf
jns
int
push
mov
push
stc
and
cmp
ret
ficom
mov
inc
(bad)
mov
add
xor
add
jmp
inc
mov
ss
pop
adc
jo
jne
jp
stos
or
xchg
add
mov
mov
js
dec
pop
call
test
cmp
stos
mov
in
pop
int
(bad)
jmp
das
xchg
xor
mov
or
mov
push
sub
loop
jnp
xor
cld
dec
idiv
push
cwde
(bad)
lock
or
push
out
push
jns
iret
xchg
xor
adc
ja
cmp
jmp
cmp
adc
sub
inc
xchg
push
add
xchg
xchg
sbb
sbb
ficomp
ret
sbb
stos
jmp
adc
iret
dec
in
lock
push
and
out
sub
jle
jno
cmc
shl
and
jl
cmp
test
mov
(bad)
lds
out
sbb
dec
adc
mov
xchg
cld
inc
outs
sar
pop
xchg
arpl
into
movs
into
inc
ss
mov
ss
fidiv
fadd
mov
or
and
dec
dec
out
jae
sub
sbb
sbb
xlat
xor
(bad)
outs
test
lock
jl
scas
scas
out
cmps
fcomp
inc
cmc
add
sub
cmp
stos
add
push
sti
sbb
fld
(bad)
pop
mov
retf
std
pop
dec
cld
and
pop
cdq
push
push
fcmovnbe
pop
xor
out
adc
sub
je
je
aas
inc
inc
loope
dec
mov
clc
lds
arpl
shr
repz
push
pushf
cmp
(bad)
loopne
mov
loopne
mov
sub
pop
(bad)
jns
mov
jns
jno
lahf
ficomp
ret
dec
xchg
sbb
fcomp
mov
push
sbb
pop
hlt
mov
out
pusha
cmp
stos
cmp
call
cld
loope
into
mov
pushf
mov
(bad)
bound
outs
rol
sbb
int
into
fcom
movs
add
mov
mov
data16
mov
cmp
call
ins
and
jb
xchg
shl
lds
xchg
mov
adc
stos
call
lahf
imul
ins
cmps
dec
pop
imul
inc
inc
push
outs
mov
(bad)
(bad)
sub
lods
xchg
pusha
aaa
and
pop
push
stos
xchg
in
or
mov
add
pop
mov
cdq
inc
mov
test
loop
adc
(bad)
or
cmp
test
push
ds
and
sbb
leave
repz
ret
jle
xchg
ja
into
sar
icebp
inc
sub
xor
lahf
mov
mov
cmp
adc
sub
xchg
daa
test
push
push
pop
mov
shl
push
inc
mov
fiadd
idiv
(bad)
stc
mov
xor
sbb
sub
xor
jno
or
data16
sbb
fld
fld
stos
(bad)
adc
in
cpuid
mov
xor
imul
jg
push
lock
out
pop
dec
lods
test
jnp
jno
cmp
add
pop
sbb
pop
arpl
push
mov
cwde
jne
fsub
adc
push
xor
mov
icebp
shl
cmps
mov
sbb
and
outs
ja
(bad)
(bad)
(bad)
nop
arpl
push
ss
into
call
pop
js
das
jae
shl
mov
cmc
int
mov
jbe
sahf
call
mov
xor
inc
adc
xor
int
jnp
rcl
pusha
mov
adc
daa
cmp
pop
xor
mov
out
push
bound
clc
push
push
outs
aam
imul
mov
adc
dec
(bad)
aam
jmp
xchg
(bad)
aam
xchg
and
adc
out
xchg
mov
fmul
dec
gs
cmps
pop
mov
cwde
cs
or
inc
pop
lahf
mov
out
mov
add
mov
push
add
xchg
adc
hlt
ins
in
hlt
aad
imul
add
loop
call
push
or
nop
xor
lea
jl
je
xor
pop
lock
outs
pop
in
push
pop
(bad)
xor
mov
adc
mov
pop
or
dec
das
fwait
cli
mov
inc
sub
gs
xor
jp
sahf
jp
sti
bound
lods
push
sbb
ret
nop
(bad)
or
in
bound
cmp
shl
lock
out
retf
push
mov
fstp
mov
inc
jmp
cmps
(bad)
fidivr
lock
popa
or
cmp
cmp
loop
fcomp
(bad)
test
pop
cmp
ret
fwait
jl
sbb
pop
push
loop
inc
fisub
jne
sbb
sub
ficomp
push
cmp
dec
add
mov
and
test
jne
xchg
and
mov
and
inc
or
aaa
leave
push
ret
stos
aam
test
mov
sub
or
xchg
pop
popa
(bad)
int3
fsubp
mov
mov
xor
xchg
mov
xchg
stc
xchg
test
dec
xor
jmp
inc
repz
lods
jg
aam
iretw
int3
fdivr
(bad)
loopne
(bad)
out
jmp
rol
pop
add
aam
(bad)
(bad)
mov
int3
or
out
or
or
add
push
(bad)
sti
pop
mov
ins
xchg
mov
das
fucomip
sub
xchg
cmp
inc
pop
test
in
pop
and
loope
pop
mov
mov
outs
adc
add
sbb
ins
in
pop
stos
jnp
test
scas
je
and
loope
(bad)
mov
popa
pop
fisubr
or
in
and
mov
fmulp
pop
sub
mov
scas
dec
jb
int
xchg
jl
das
lods
test
xchg
sub
mov
and
sub
iret
mov
push
cdq
or
jmp
xchg
pop
adc
sub
jge
add
call
xor
mov
xor
movs
test
test
pop
in
inc
inc
sbb
mov
add
jl
sub
and
inc
dec
cs
int
jno
jle
in
jb
jmp
pop
leave
outs
jb
leave
cmp
sbb
popf
adc
push
mov
pop
pop
iret
xor
ins
pop
cld
daa
arpl
repnz
frstor
pop
repnz
(bad)
adc
into
sbb
out
cli
rol
mov
stos
in
adc
fisubr
mov
dec
mov
(bad)
iret
push
les
adc
or
inc
mov
fwait
mov
adc
xchg
div
and
xor
xor
or
gs
test
mov
cmps
jb
outs
dec
cmp
aaa
dec
out
dec
push
dec
(bad)
pop
adc
push
jo
push
fnstsw
dec
(bad)
sbb
(bad)
(bad)
clc
bound
push
popw
lods
push
xchg
push
(bad)
in
sbb
ja
test
js
mov
shl
cmp
rcr
adc
jo
sahf
cmps
xchg
sti
sbb
sahf
xor
and
test
cmp
in
xor
cmps
or
mov
outs
sub
dec
vpmacsdqh
outs
mov
cmp
out
imul
sub
ja
out
enter
call
ds
imul
div
imul
add
ss
outs
or
or
sbb
dec
cmp
out
sub
cmp
(bad)
ins
arpl
fmul
inc
out
pop
cs
retf
or
cs
ror
bound
mov
ret
nop
pop
ja
int
imul
and
add
iret
repz
in
fmul
stos
pusha
cmp
movs
add
sub
dec
out
push
adc
or
in
outs
push
lods
mov
stos
repz
outs
outs
xchg
or
hlt
sbb
lods
mov
neg
cdq
iret
push
das
xchg
outs
cmps
enter
add
rcr
sahf
mov
cmps
xchg
and
add
das
mov
fnstenv
and
or
sub
jmp
repz
pusha
cld
cmc
dec
das
(bad)
xchg
inc
fs
jge
std
les
mov
js
lock
dec
iret
(bad)
push
push
mov
int3
movs
nop
jb
jo
pop
mov
push
xchg
push
jno
pop
loop
push
mov
shl
(bad)
mov
ds
mov
or
adc
popf
mov
sbb
push
sub
(bad)
lds
ds
xchg
push
xor
push
xor
sahf
(bad)
or
stc
adc
lods
cmp
sahf
lods
int
mov
mov
mov
hlt
mov
sbb
in
test
dec
(bad)
pop
push
pop
push
div
ss
outs
(bad)
daa
dec
aaa
or
rep
jo
sbb
pop
outs
xchg
pop
repnz
push
add
imul
ja
add
cmps
pop
cdq
pop
jge
movs
push
(bad)
jecxz
or
movs
js
dec
movs
adc
adc
(bad)
xchg
pop
loope
dec
dec
fild
movs
ja
jl
enter
adc
push
cmp
aaa
ins
push
xchg
out
jb
int3
pop
aaa
out
adc
fcom
fstp
rcl
js
ror
dec
ret
test
xchg
repnz
jae
in
lahf
movs
into
bound
push
pop
fidiv
div
imul
add
(bad)
imul
xor
or
mov
test
and
jnp
mov
pop
cdq
sub
loop
pop
cwde
mov
dec
(bad)
aad
mov
shr
pop
inc
push
xchg
or
fst
inc
outs
mov
ret
pop
(bad)
stc
movs
jmp
dec
add
ins
cs
add
mov
and
inc
mov
test
ss
pop
inc
das
sbb
jb
push
push
adc
adc
ins
jge
popa
ror
lock
sar
shl
jno
add
test
in
movs
push
mov
je
outs
int3
xchg
jbe
and
out
lods
sub
icebp
iret
loopne
push
xchg
mov
cmp
hlt
push
push
pop
gs
dec
icebp
pop
aas
add
push
pop
addr16
dec
mov
dec
pop
scas
hlt
loope
fdivr
aam
cmp
xor
xchg
call
add
int
(bad)
pop
add
scas
shr
call
cmp
in
cmp
inc
pusha
cmp
repnz
mov
gs
and
inc
inc
add
jb
add
or
mov
mov
pop
fistp
xchg
lock
sub
mov
ins
(bad)
cmp
mov
pop
nop
pop
xor
arpl
jb
xchg
pop
jno
imul
or
scas
jp
rcl
lahf
adc
loop
kmovw
stc
push
ins
(bad)
bound
dec
dec
xchg
test
mov
popa
popf
in
push
jmp
mov
out
lods
add
shl
fadd
mov
call
fwait
jns
arpl
repnz
cmps
xor
sbb
add
or
out
xchg
retf
in
mov
mov
jnp
lods
mov
fldl2e
dec
clc
in
in
scas
lahf
xchg
pop
in
pop
mov
pop
xchg
test
add
movs
pop
dec
(bad)
mov
jle
aad
pop
ja
mov
add
aam
push
or
int
fidivr
push
sbb
cmp
rcl
mov
(bad)
add
retf
and
mov
jns
out
push
js
sbb
dec
xchg
inc
cmp
pop
clc
mov
cs
fwait
jmp
adc
jmp
fdivr
sub
in
retf
and
aas
sub
das
mov
xchg
add
mov
mov
mov
mov
je
add
int3
ins
mov
sahf
sar
push
icebp
add
push
and
adc
mul
nop
es
push
cmp
rol
sub
shl
shl
or
mov
or
lods
fwait
mov
adc
pop
(bad)
and
dec
jl
inc
addr16
adc
jg
jle
sub
call
in
add
xor
sahf
mov
sub
popa
adc
(bad)
sbb
mov
ss
add
sub
cs
(bad)
xor
fcmove
push
sbb
out
push
leave
pop
clc
out
inc
xchg
mov
mov
dec
movs
xor
shl
push
mov
mov
jle
mov
adc
sub
out
adc
mov
pusha
fmul
mov
test
mov
hlt
jecxz
xchg
mov
mov
add
mov
aas
pop
push
imul
(bad)
sti
out
xlat
popa
and
mov
pop
in
les
jl
jb
adc
test
jmp
cmp
xchg
(bad)
fsubr
int
or
sar
mov
into
push
out
test
icebp
std
into
stos
scas
fsub
sub
ins
and
(bad)
jae
add
lods
cmp
pop
or
scas
jmp
hlt
mov
lock
pop
ins
rol
in
adc
and
and
jno
mov
mov
lds
xchg
mov
stc
dec
ret
xor
xor
ins
and
sbb
imul
leave
add
or
mov
pushf
imul
xchg
fldcw
dec
stos
popf
pop
sbb
bound
sbb
clc
icebp
rol
iret
out
ins
mov
mov
pop
add
sbb
pop
imul
jmp
or
sahf
out
jno
pop
inc
fld
dec
popa
rcr
call
sub
xchg
xor
test
lods
push
jb
shl
add
xor
xor
movs
aas
nop
sub
add
inc
rol
sub
gs
lods
pusha
daa
jae
pop
lahf
sahf
leave
inc
mov
adc
stos
ret
dec
sar
sti
mov
pop
or
add
cmps
sbb
mov
jno
jo
or
cmp
retf
jae
out
mov
cmps
inc
test
dec
xchg
jmp
rep
push
hlt
outs
mov
imul
inc
pop
mov
fmul
mov
push
(bad)
xlat
fld
stos
sbb
popa
in
xchg
sbb
cmps
dec
mov
shl
nop
jl
test
out
inc
addr16
cmp
outs
xchg
out
into
xor
pusha
dec
ja
sbb
add
call
mov
xchg
ss
xchg
xchg
psubd
outs
mov
sar
std
mov
inc
pop
xchg
xor
inc
js
inc
xchg
clc
fadd
js
ret
or
loop
jmp
cmps
cmp
clc
mov
adc
mov
dec
je
mov
mov
fsubr
or
frstor
xor
mov
or
mov
mov
pop
jmp
or
gs
stos
mov
cmp
push
dec
popa
pop
lods
adc
xchg
fcmovnb
cwde
inc
add
jns
fcomi
pushf
pop
dec
ret
daa
retf
jge
inc
mov
cld
call
imul
rol
popw
ret
jmp
cmps
inc
(bad)
cmc
sbb
inc
cmp
imul
rcl
jae
or
out
int
jg
cmps
cmp
push
enter
lods
into
or
xor
rdpmc
sub
pushw
dec
jbe
and
icebp
adc
cmp
pop
add
fistp
sbb
repnz
cmps
bound
or
(bad)
pop
(bad)
mov
push
in
xor
outs
cmp
dec
js
adc
mov
jp
fmul
outs
push
and
popf
jecxz
mov
shr
push
les
push
sbb
ficom
test
inc
fs
push
out
sbb
push
test
mov
inc
jo
mov
std
nop
mov
mov
dec
lea
mov
push
es
adc
cmp
xor
sub
mov
xchg
jl
lgs
daa
aas
sub
iret
dec
push
out
inc
inc
xor
mov
into
or
popa
and
jne
sub
es
push
mov
adc
cmp
jno
lods
ficom
hlt
cmp
dec
sub
les
jmp
or
sub
and
mov
out
adc
pop
std
adc
rol
jp
in
mov
ins
call
out
mov
push
inc
int3
jl
jns
ins
mov
nop
outs
cmp
xchg
out
or
add
(bad)
push
enter
adc
cwde
in
mov
xchg
mov
dec
movs
push
xlat
int
mov
int
and
addr16
es
or
mov
sub
scas
test
push
iret
mov
push
in
push
je
fld
pusha
and
inc
and
loopne
punpcklwd
pop
sub
addr16
mov
dec
xor
rol
scas
push
mov
cmp
les
adc
fsub
xchg
imul
xchg
ds
mov
dec
push
or
in
jge
inc
cmp
sbb
test
(bad)
and
xchg
dec
dec
and
lods
jmp
mov
mov
mov
jmp
ds
aam
cmp
out
jmp
(bad)
pop
mov
out
jmp
call
inc
fwait
stos
dec
int3
loope
clc
test
js
cmc
inc
in
nop
sbb
xchg
pop
dec
mov
sbb
nop
cs
test
hlt
cmp
jmp
mov
cmp
jp
jne
(bad)
mov
scas
pushf
pop
fsubr
in
retf
mov
add
sbb
loopne
mov
mov
aad
jb
cs
jmp
xor
mov
sbb
and
jne
mov
test
cmp
jbe
lea
add
cmp
adc
pop
mov
xor
jmp
mov
jbe
movs
cmps
adc
add
or
aaa
xchg
mov
pop
mov
int3
or
push
xchg
xchg
cmp
mov
and
mov
fild
mov
test
mov
or
jnp
call
pop
jle
aad
mov
mov
test
fidiv
out
ds
jp
mov
(bad)
clc
pop
mov
mov
das
jns
popa
lds
outs
stc
sbb
xor
mov
sbb
jbe
xor
addr16
mov
push
repnz
mov
out
stc
dec
sub
pop
xor
fcom
imul
push
jno
aas
int
jge
std
add
stc
cmp
sub
pop
repz
add
aam
aaa
sbb
mov
call
or
sbb
xor
int3
popf
push
outs
and
mov
out
(bad)
test
mov
in
ins
jecxz
stc
mov
clc
in
jns
(bad)
cld
ins
jo
sti
icebp
inc
push
les
mov
sbb
xchg
retf
inc
aad
cmp
cwde
jo
jmp
loopne
push
or
pop
xor
jb
xchg
push
jl
(bad)
mov
jge
shl
xlat
or
pop
adc
mov
loop
out
pop
mov
push
adc
dec
xor
lds
shr
dec
sub
mov
mov
test
xlat
rcl
ret
dec
out
(bad)
in
jecxz
lahf
into
sub
pop
cmp
ins
call
inc
cmp
mov
lahf
push
and
mov
aad
and
xchg
es
pmuludq
jle
mov
sti
in
aas
jle
sub
mov
test
mov
fisubr
mov
sub
fwait
popa
stc
ret
int3
sub
mov
inc
scas
int3
add
xor
cmp
jg
out
add
push
test
mov
ror
out
dec
xchg
or
pop
sbb
imul
lahf
enter
sub
ror
xchg
imul
push
fsubr
pop
in
out
mov
sbb
imul
call
xchg
mov
cld
int3
cmc
push
das
fidivr
xchg
sub
lods
aad
push
push
dec
or
ins
(bad)
pop
mov
sub
mov
or
pop
mov
out
jge
mov
fnstcw
outs
lock
jg
stos
dec
fcom
xchg
jne
sub
and
inc
movs
arpl
mov
cld
das
add
inc
xlat
and
xor
dec
sbb
cs
fwait
mov
inc
cmp
lods
popf
retf
sbb
aam
neg
adc
repz
pop
(bad)
fidiv
popf
mov
cmps
adc
adc
inc
cdq
pop
in
jl
fidivr
ds
mov
out
fisttp
sub
rcr
outs
lds
call
out
mov
stos
push
sbb
fst
mov
push
scas
imul
iret
sub
rcr
jg
outs
fmulp
or
push
cwde
int3
adc
fs
daa
call
lds
jecxz
mov
fwait
cmps
in
inc
out
(bad)
fwait
xchg
push
push
mov
jecxz
ds
inc
inc
iret
aam
(bad)
aad
loope
clc
fnstcw
stos
aad
jno
loop
pop
dec
lea
pop
ret
test
pop
add
cmp
jno
mov
jmp
pop
fiadd
mov
lea
inc
int
mov
(bad)
nop
mov
or
sub
xor
cli
jbe
cdq
sub
sbb
xchg
push
inc
repnz
lds
lds
ins
mov
scas
xchg
inc
adc
(bad)
in
mov
mov
cmp
cmp
cmp
imul
lahf
cmp
fistp
push
sub
mov
push
inc
shl
(bad)
sub
inc
xchg
sub
cmp
daa
inc
mov
(bad)
je
cdq
xlat
and
mov
and
lock
retf
add
test
pop
pop
in
inc
xchg
test
loopne
dec
sbb
sti
ror
aam
cmp
rcr
out
add
dec
fistp
je
cmp
xchg
mov
mov
mov
pop
test
lahf
and
(bad)
(bad)
mov
aad
lahf
and
loope
sahf
js
push
or
or
mov
int3
dec
sub
push
xchg
test
inc
mov
loope
(bad)
mov
and
pushf
imul
lds
dec
jg
gs
popf
jp
add
mov
push
xor
js
adc
jo
xor
cwde
jmp
mov
rcl
(bad)
mov
js
jns
push
jl
test
pop
cs
setg
lock
movs
jns
cld
out
xchg
call
add
hlt
dec
push
cmp
jmp
mov
pushf
repz
push
pop
xchg
jmp
push
mov
add
fisttp
sbb
aam
js
xchg
mov
lods
popa
das
je
cdq
pushf
aaa
mov
or
clc
mov
into
adc
hlt
iret
pusha
and
pop
aas
cmps
pop
jb
icebp
mov
test
pop
cmp
mov
rcl
int3
sahf
pop
outs
std
loopne
adc
aaa
js
pop
call
arpl
cmp
dec
cmps
jbe
cmp
in
sbb
mov
das
jp
cmp
adc
push
icebp
cmp
lods
into
js
xchg
or
lahf
xchg
lods
mov
rol
cmps
les
jmp
add
add
jmp
int3
cmp
sbb
sub
cmps
mov
pop
xchg
into
retf
arpl
and
push
inc
fcmovu
into
repnz
add
and
inc
adc
add
or
test
repz
daa
or
popf
test
jg
mov
mov
push
les
in
(bad)
mov
xor
addr16
ins
rcl
push
rol
enter
inc
in
int
push
stos
jg
rcr
out
pop
(bad)
imul
and
out
xchg
nop
push
xor
mov
jb
lahf
xor
xchg
jl
jp
mov
mov
shr
in
cmp
imul
xchg
out
inc
icebp
add
xchg
cdq
out
pop
xlat
cmp
push
add
mov
mov
or
mov
retf
repz
jle
dec
sub
in
les
es
lods
es
mov
jecxz
push
adc
mov
adc
(bad)
push
xchg
stos
dec
cwde
add
test
xchg
sbb
sub
test
xor
ds
inc
test
mov
bound
dec
and
lods
dec
cmps
dec
in
mov
xchg
sub
sub
pop
adc
jo
in
std
loopne
daa
lods
jb
sub
sbb
dec
push
mov
pushf
test
stos
daa
call
loop
movs
inc
adc
sti
sub
cmp
loope
xchg
pop
xor
nop
into
fimul
push
movs
and
stos
add
cmp
cmp
add
popa
push
cs
fwait
popa
inc
sbb
mov
jmp
mov
mov
inc
adc
pop
mov
sahf
xor
test
out
mov
push
sbb
outs
fnstenv
lds
in
mov
mov
ins
or
retf
adc
bound
or
pop
jae
jmp
cli
fstp
sbb
ins
mov
add
jp
(bad)
push
jbe
mov
jmp
repnz
mov
fsub
jecxz
mov
xchg
(bad)
daa
dec
idiv
loopne
xchg
push
popa
jp
dec
or
imul
sahf
sahf
fistp
(bad)
mov
or
lock
test
pushf
xor
ucomiss
sub
pop
cmp
or
popf
stos
(bad)
loope
cs
and
xchg
call
pop
mov
mov
or
call
sbb
loopne
jecxz
xor
mov
cmps
pop
mov
xchg
mov
into
mov
inc
das
mov
mov
retf
cdq
repz
push
inc
out
mov
jo
loop
mov
ja
test
push
adc
test
cdq
pusha
call
pop
ficom
mov
inc
loop
add
(bad)
test
push
xor
inc
es
ja
pop
jecxz
xchg
cdq
xor
xchg
mov
js
pop
or
call
mov
aaa
fcomip
sub
repnz
cmps
in
inc
lock
cmp
and
pop
push
push
push
mov
push
mov
inc
imul
pop
test
je
sub
stos
dec
mov
jne
nop
aaa
out
cmp
mov
sub
int
sub
mov
cmp
mov
pop
and
aad
push
ret
out
out
or
xor
jns
cmp
jns
(bad)
or
push
aad
add
das
mov
addr16
aam
lock
arpl
pop
cmp
inc
pushf
mov
pop
imul
psadbw
push
push
jmp
outs
(bad)
push
sub
push
jmp
mov
aam
xor
cmp
call
loope
mov
push
adc
xchg
pushfw
out
dec
ror
cmp
pushf
es
and
and
test
xor
cmps
jb
iret
in
sub
and
sbb
retf
scas
fst
jne
adc
jns
je
or
int
dec
and
es
lahf
xor
push
xor
test
sahf
xor
jns
mov
fsub
dec
push
nop
cdq
push
out
mov
cmc
(bad)
jecxz
jmp
add
cmp
xchg
mov
pop
inc
pop
pop
cmc
retf
hlt
repnz
(bad)
fwait
scas
inc
popa
test
mov
movs
outs
in
ror
loopne
sbb
fisub
ror
or
push
jnp
cdq
mov
or
cmp
cmp
scas
mov
cmp
test
into
xchg
rcl
push
sub
xlat
mov
jge
and
cmp
iret
ins
push
add
ss
data16
sbb
icebp
sbb
pop
pop
sbb
mov
mov
inc
sbb
or
sub
mov
out
push
mov
xor
mov
adc
and
cmp
jl
xor
je
xchg
ret
push
retf
mov
test
push
mov
repnz
mov
(bad)
loopne
test
xchg
jp
and
jo
stc
jnp
mov
sub
call
dec
js
push
push
push
sbb
in
dec
dec
jns
add
sub
js
add
gs
out
mov
adc
lds
sub
cli
mov
in
xchg
mov
pop
in
test
xlat
in
cmps
mov
loopne
cwde
sbb
inc
pop
xchg
outs
fldcw
xor
ror
push
out
aam
cmps
sub
test
dec
movs
or
xchg
mov
ins
scas
sbb
imul
jecxz
inc
jo
mov
cmp
js
call
sbb
cdq
jmp
jg
mov
int
add
sub
push
pop
fldenv
mov
and
pop
cli
push
push
and
jb
push
mov
ret
mov
jmp
xor
lock
xor
jbe
xchg
push
mov
(bad)
rcr
pop
(bad)
popa
adc
xchg
mov
mov
leave
or
arpl
inc
fmul
inc
mov
(bad)
je
push
add
mov
dec
adc
in
inc
test
lods
cld
push
sbb
ins
sub
xor
out
pop
daa
test
jae
mov
mov
fs
ins
and
jnp
fwait
pop
pop
sub
xlat
test
or
std
loopne
sub
es
loope
jbe
fst
and
pop
mov
mov
aas
mov
mov
pop
stos
shl
push
outs
(bad)
aaa
push
rcl
adc
and
push
es
mov
sbb
pop
push
jg
push
ret
loopne
push
sub
aad
lods
in
int3
stos
add
dec
test
push
mov
fwait
scas
repnz
fs
push
ins
inc
(bad)
enter
cmp
call
sbb
xor
daa
jmp
adc
xor
dec
or
js
pop
retf
pop
pop
cmps
add
push
lahf
add
sti
aas
shl
mov
icebp
jo
or
rcr
jae
loopne
(bad)
sub
movs
cwde
xchg
inc
pushf
scas
out
and
dec
mov
leave
outs
mov
jne
nop
jg
pop
mov
jmp
xchg
fst
retf
out
nop
mov
mov
push
mov
adc
bound
xrelease
push
push
mov
add
xor
mov
mov
xor
or
mov
mov
fnstenv
pop
aad
test
aaa
rcpps
jge
test
mul
jl
cwde
popa
or
inc
adc
dec
mov
xor
or
sbb
mov
hlt
and
add
retf
les
das
jp
mov
mov
mov
dec
lock
push
mov
das
in
jno
jge
and
ss
pop
lock
test
and
movs
scas
outs
cmp
sar
jae
movs
lock
jbe
stos
add
push
sub
retf
aam
push
mov
scas
dec
in
mov
movs
push
jp
sbb
mov
dec
push
inc
add
inc
ret
inc
je
inc
mov
shl
sub
popa
sub
push
mov
xor
(bad)
cmp
and
movs
xchg
add
adc
repz
and
movs
push
xlat
fstp
loopne
mov
dec
nop
sub
fist
stc
mov
xchg
test
cmps
mov
lods
vmread
mul
jb
arpl
hlt
ror
fwait
sub
int3
(bad)
sub
clc
clc
sbb
adc
pop
push
jmp
inc
lock
and
dec
scas
int3
add
addr16
mov
xchg
and
adc
sub
cdq
mov
mov
ret
dec
test
and
out
lods
imul
pop
jo
jnp
jae
pop
add
mov
icebp
pop
test
adc
jl
sbb
dec
scas
dec
jns
and
sbb
popf
outs
imul
ds
pop
data16
cwde
dec
in
mov
adc
jmp
ins
(bad)
(bad)
push
pop
call
pop
shr
cmovns
sbb
dec
cld
sbb
gs
cmc
ins
nop
fwait
jecxz
sub
out
sub
stos
jle
arpl
sub
sbb
movs
pop
jecxz
cmp
(bad)
xchg
xchg
mov
jg
mov
clc
pop
ret
aas
out
out
adc
mov
dec
inc
xor
aad
fs
inc
call
inc
push
push
cli
jle
pop
in
lds
jmp
cld
mov
dec
nop
xor
cs
jl
repnz
pop
inc
sub
xor
and
sbb
aas
or
add
push
lods
jnp
(bad)
icebp
fcom
xchg
or
lods
cmp
push
outs
mov
test
add
add
in
mov
mov
pop
inc
add
mov
push
pop
nop
ja
mov
mov
icebp
popa
sar
inc
push
push
push
cmp
adc
inc
jecxz
fmul
cmp
push
jo
or
mov
outs
inc
outs
add
fucom
test
xlat
jg
jecxz
add
jne
loope
in
rep
xor
or
aaa
mov
xor
sub
(bad)
loopne
shl
xor
test
mov
cmp
xor
inc
mov
sbb
add
fnstcw
fidivr
and
(bad)
xchg
out
outs
mov
dec
lds
xchg
jbe
mov
jbe
inc
lods
xchg
mov
mov
cld
loop
test
add
mov
in
and
push
or
mov
and
jecxz
mov
fwait
xor
nop
fild
pop
adc
push
add
and
fidivr
das
in
je
jge
push
sbb
jne
neg
aaa
mov
lea
jno
add
add
daa
xchg
push
enterw
jle
xchg
and
ror
out
mov
shr
test
add
and
test
mov
aas
enter
cmp
mov
jno
mov
cmp
xor
(bad)
jl
pop
xor
sbb
xor
(bad)
and
push
xchg
icebp
pusha
movs
repz
xchg
inc
cmp
jo
add
movs
mov
adc
cmp
cmp
cs
add
gs
je
jb
or
xchg
in
xlat
cmps
dec
jae
cld
aad
dec
aad
sbb
and
mov
jmp
lock
test
or
aam
mov
out
in
push
lea
in
jge
imul
add
shl
clc
ins
leave
jg
sbb
add
daa
add
mov
sub
aaa
or
je
mov
lods
pop
stos
clc
sahf
(bad)
or
push
ret
pop
lock
inc
jmp
push
mov
fadd
push
cmp
push
add
push
retf
(bad)
call
add
xchg
mov
es
in
adc
push
dec
stos
pop
movs
or
cmp
push
or
add
push
(bad)
mov
cmp
shl
scas
mov
fcom
pop
mov
mov
cld
pop
aaa
scas
daa
mov
jge
sbb
mov
cmp
jae
jecxz
(bad)
jmp
mov
hlt
jno
jno
dec
cmc
popf
neg
sub
mov
sbb
ret
add
cmp
push
add
loopne
add
xor
mov
fmulp
and
jmp
jb
adc
mov
add
inc
aam
or
push
inc
pop
xor
jb
cmp
in
cdq
dec
add
in
in
adc
inc
sbb
pop
sub
in
ss
adc
pop
cmps
(bad)
and
or
xor
repnz
and
dec
call
dec
mov
sub
in
jmp
fild
dec
test
inc
jg
scas
(bad)
mov
lea
test
call
push
add
push
aaa
push
fs
xor
xchg
or
mov
push
xor
je
rcl
push
or
neg
mov
cdq
sub
push
lock
push
vmovq
gs
repz
and
cwde
add
test
push
mov
mov
sti
xchg
cmps
push
and
hlt
push
and
std
ror
jmp
pop
xchg
xchg
push
fs
mov
or
pop
mov
mov
xchg
ret
push
fcmovbe
dec
jl
sar
xchg
in
(bad)
stos
lods
div
sahf
enter
rol
retf
mov
fdivr
mov
inc
pop
in
push
and
push
call
push
xor
cmps
les
mov
and
fist
in
or
jb
idiv
popa
sar
pushf
pop
shl
test
lods
pop
std
pop
mov
inc
dec
cmp
jge
mov
sbb
test
aas
mov
mov
dec
fwait
mov
loope
out
sbb
pop
mov
mov
gs
shl
jmp
fidiv
aam
jmp
outs
loopne
ds
retf
xor
add
sbb
add
jo
xchg
dec
sub
pop
adc
pushf
std
fld
fdivrp
movs
cli
sub
mov
in
aas
shl
(bad)
ficom
lock
xor
or
mov
stos
jmp
push
je
add
or
fcomp
scas
shr
mov
adc
add
fmul
pushf
mov
popf
xchg
ds
ss
dec
lods
icebp
inc
add
aaa
cmp
in
pop
call
int3
sub
loop
cmp
scas
pop
aam
test
dec
dec
test
test
into
mov
and
rcl
js
mov
and
aad
mov
rcr
adc
push
jbe
mov
les
iret
rol
add
aad
test
loopne
xchg
in
mov
mov
pop
pop
mov
ret
adc
inc
(bad)
inc
dec
add
or
int
pop
or
adc
mov
popf
cli
pop
mov
in
clc
inc
and
jmp
aas
stc
popf
test
fst
imul
xchg
das
sub
ret
sbb
or
add
ss
ja
clc
pop
jp
or
int
test
jno
leave
(bad)
out
jmp
inc
sub
xor
jmp
fistp
inc
std
int3
xchg
add
sbb
std
or
jns
popf
bound
mov
inc
ss
enter
(bad)
movs
or
sub
arpl
add
and
rol
mov
or
cwde
mov
and
ins
nop
or
mov
call
or
pop
bound
adc
inc
xchg
sub
jmp
xchg
jle
les
sub
out
xchg
or
xchg
push
int
jl
mov
add
es
retf
arpl
out
jbe
add
out
dec
pop
fnstsw
std
(bad)
ins
adc
aaa
jg
inc
js
xlat
push
jmp
iret
int3
mul
out
lds
or
and
mov
mov
mov
and
dec
and
popf
scas
cmp
imul
mov
mov
push
cmp
jmp
xor
loop
loopne
inc
ja
loope
(bad)
mov
sbb
sub
repz
popf
sub
mov
cmp
lods
idiv
xchg
mov
cmp
adc
aaa
dec
(bad)
jge
add
adc
jmp
sbb
mov
nop
lea
sub
jbe
cmp
mov
(bad)
shl
jne
test
jae
fcom
(bad)
retf
repz
adc
ret
test
data16
cmps
or
clc
cmp
addr16
adc
mov
cmp
shr
and
mov
out
inc
popa
mov
sub
push
stos
rcl
dec
push
inc
sbb
lds
popf
pop
cmc
xor
mov
push
and
pop
jge
dec
mov
mov
cmps
and
and
mov
mov
loop
or
cmp
stos
mov
stos
push
mov
test
cwde
mov
xor
mov
mov
and
shl
test
fcmovb
stos
add
mov
mov
jb
fsubr
push
(bad)
mov
push
out
mov
sbb
push
jge
in
movs
outs
add
hlt
lea
dec
sub
stc
xchg
cmp
jl
sbb
movs
call
fwait
fs
pop
mov
out
add
scas
push
and
inc
jmp
mov
imul
add
adc
ins
ss
outs
or
(bad)
xlat
les
inc
loopne
les
test
ins
lock
mov
add
fisubr
xor
mul
ins
loop
dec
jno
pop
gs
pop
xchg
jae
call
inc
sti
call
dec
lahf
adc
enter
bound
(bad)
int3
nop
cmp
into
test
fs
or
test
stc
movs
push
push
inc
sub
or
push
mov
pop
stc
xchg
fwait
into
cli
sub
cmp
xchg
js
leave
and
dec
dec
in
push
fild
lahf
jnp
sub
ja
xor
jnp
fcmovnb
pushf
cmp
adc
push
mov
mov
jmp
mov
mov
or
test
push
xor
ret
or
pop
sti
or
push
adc
ret
test
jne
mov
pop
int3
add
inc
sub
mov
cmp
jns
xchg
popa
in
cdq
sbb
fnstsw
xchg
inc
ret
(bad)
addr16
xchg
xor
dec
or
sub
out
xchg
adc
sbb
inc
dec
shr
iret
mov
mov
mov
outs
pop
lock
loop
dec
jl
dec
cli
lahf
or
ins
ret
ret
xor
cmc
mov
imul
outs
mov
(bad)
loopne
and
adc
sbb
jns
test
jge
enter
xor
ja
xor
mov
jne
sub
cdq
test
or
test
mov
cld
mov
inc
and
nop
out
pop
cmps
inc
fcom
or
stos
xchg
xchg
cmp
(bad)
cmp
pop
add
push
call
pushf
out
or
dec
sub
loopne
sbb
pop
xchg
sar
lds
retf
adc
or
loopne
jg
(bad)
je
xchg
cmp
sbb
pusha
cwde
jmp
test
pop
mov
mov
int
sub
inc
cmp
inc
mov
ret
aam
cmp
add
cmp
ja
fisubr
stos
sar
mov
mov
pop
pusha
xor
mov
ror
in
(bad)
adc
retf
jl
pop
bound
adc
push
in
pop
jmp
and
push
mov
imul
std
or
addr16
pop
mov
add
pop
mov
push
mov
call
out
xor
scas
(bad)
loop
fstp
in
mov
mov
or
sub
fidivr
push
or
xor
xchg
dec
call
fwait
rcr
cwd
inc
cmc
loop
jg
out
xlat
pop
sbb
adc
mov
(bad)
cmc
ror
lods
repz
sbb
push
xor
xchg
add
dec
mov
mov
fst
(bad)
and
or
sub
outs
xchg
adc
pop
xor
leave
outs
int
inc
pushf
or
pop
inc
stc
pop
mov
or
(bad)
or
jbe
cli
mov
ins
jb
jmp
mov
adc
aas
fnstsw
das
ret
and
add
xchg
push
imul
clc
dec
xor
fcmovnbe
imul
lds
mov
dec
sub
ret
adc
movs
dec
sti
add
cmp
pushf
dec
sahf
jl
popa
cmp
mov
dec
jnp
rcr
mov
int3
mov
stos
or
pop
daa
(bad)
fistp
cpuid
arpl
adc
rcr
jge
mov
cmp
cli
lods
jo
and
cmp
ins
movs
mov
xlat
pop
push
dec
fsubr
mov
fstp
pop
enter
das
and
add
out
pusha
les
movs
sbb
jnp
push
mov
test
mov
cmc
dec
mov
arpl
xchg
js
lods
pop
ss
inc
or
cld
sar
stos
jle
je
jle
fisubr
sbb
jp
pop
cmp
xor
push
and
stc
daa
cmpps
pop
ds
cdq
inc
dec
sub
push
jno
jmp
and
push
pop
leave
mov
stos
jb
mov
popf
xchg
mov
loope
popf
push
jno
push
dec
add
mov
loopne
pop
lods
push
stc
pslld
xlat
imul
xor
inc
(bad)
clc
les
adc
inc
stos
inc
sbb
pushf
push
aaa
std
popa
inc
xor
inc
jne
int
stos
test
pop
ins
fild
lahf
scas
mov
mov
mov
xor
sbb
iret
lods
iret
inc
or
cmp
lahf
mov
mov
sbb
in
(bad)
fs
js
test
mov
cmp
xor
adc
or
test
(bad)
inc
pop
cmps
mov
es
xchg
mov
pushf
out
sbb
loopne
stos
inc
mov
pop
mov
adc
mov
mov
loopne
in
fiadd
push
add
pop
into
jb
and
ins
mov
mov
push
push
loop
(bad)
(bad)
jecxz
pop
cmps
pop
jl
jns
add
gs
dec
inc
shl
add
(bad)
cwde
fsubr
test
fwait
not
adc
push
and
stc
ja
call
jo
nop
mov
or
int3
sub
sahf
dec
lea
inc
pusha
out
jge
pop
dec
pop
or
rol
xor
xor
lods
js
mov
fimul
cmp
retf
jmp
sbb
xor
mov
aad
mov
cmp
sahf
shl
pop
test
jae
(bad)
mov
mov
and
outs
out
and
(bad)
pop
imul
push
adc
dec
ja
(bad)
std
sub
sahf
frstor
pop
and
loop
sub
repnz
lahf
popa
xchg
dec
mov
and
pop
jecxz
int3
mov
aas
(bad)
pop
sbb
jae
ins
out
jge
sub
fucomp
xchg
ret
icebp
mov
xchg
cmc
push
lds
cmps
out
cmp
mov
push
xchg
and
sbb
mov
aas
imul
fst
push
inc
add
pop
ds
inc
fadd
xor
ret
clc
mov
and
push
out
inc
rcl
cmp
es
clc
cmp
xor
popf
fstp
xor
inc
sahf
out
mov
xchg
imul
sub
dec
add
daa
ror
aam
mov
addr16
mov
pop
aaa
mov
(bad)
jmp
fsubrp
ja
ins
and
cmp
dec
xor
pop
(bad)
jns
fstp
or
dec
or
push
mov
push
sar
loope
pop
retf
aad
adc
dec
mov
push
ret
cmp
adc
mov
and
sub
lock
(bad)
lea
ins
adc
inc
add
mov
sub
push
mov
xchg
add
jmp
add
jmp
add
sbb
push
test
mov
cmp
adc
fs
fmul
sub
mov
bound
rcr
sub
or
call
mov
add
mov
sub
jno
mov
jno
xlat
in
dec
dec
mov
stos
xchg
add
fsubr
neg
fdiv
xor
int3
nop
leave
fcomip
pop
std
mov
sbb
add
mov
aas
sub
frstor
sbb
les
xor
stos
test
inc
dec
loope
call
push
test
gs
lock
pop
inc
xchg
ins
jb
jle
cli
cmp
jmp
inc
sar
inc
cmp
and
sbb
dec
inc
lahf
adc
movs
adc
test
aas
pop
or
inc
push
mov
mov
jmp
push
inc
pop
enter
dec
jns
shl
ss
jo
outs
out
dec
rol
rcl
out
and
shr
pop
and
adc
enter
xchg
and
loop
xor
xor
and
sbb
hlt
adc
out
inc
test
mov
pshufw
mov
pushf
out
in
jmp
add
shr
repnz
pop
add
pop
jnp
dec
cwde
xchg
adc
movs
data16
movs
sub
aaa
enter
pop
xchg
or
cld
ins
ss
dec
daa
adc
push
sti
mov
aad
aam
(bad)
stos
adc
and
inc
jmp
repz
pop
push
sti
jb
pushf
stos
(bad)
(bad)
lea
rcr
push
dec
xor
imul
and
rol
adc
fwait
cmps
fwait
lods
pop
and
adc
cwde
pop
jae
sub
aaa
lods
daa
and
sub
outs
jne
pop
mov
les
fist
test
add
push
(bad)
neg
jnp
jecxz
sub
xor
lods
inc
or
repz
stos
dec
pop
add
xor
fsubr
or
adc
jl
add
push
ror
sbb
scas
lds
adc
pop
pop
xor
repnz
adc
adc
fld
jb
(bad)
cmc
out
cmps
mov
adc
mov
sbb
or
rcr
icebp
jo
mov
div
adc
cmp
rol
std
test
inc
inc
mov
inc
jg
xchg
sbb
cdq
lds
xor
aad
xor
and
xchg
xor
ret
jge
inc
adc
cmp
out
mov
fiadd
cmp
fisub
sti
mov
mov
ror
mov
(bad)
gs
mov
inc
mov
cmp
rol
and
mov
pop
dec
pop
outs
xchg
inc
(bad)
pop
pop
(bad)
popa
mov
or
scas
pop
cwde
ror
xor
inc
(bad)
scas
ins
cmps
xchg
adc
push
repnz
adc
arpl
fisub
mov
out
mov
mov
ja
mov
cmp
pop
mov
(bad)
(bad)
call
int
cdq
movs
pop
mov
jg
push
mov
repz
xor
mov
enter
jnp
push
dec
mov
sahf
jns
sahf
and
popaw
mov
das
and
sahf
xchg
(bad)
lds
xchg
fadd
cmps
cwde
mov
in
pop
icebp
addr16
test
test
push
and
ret
push
scas
adc
out
cmp
stos
pusha
xor
add
fidivr
dec
mov
sub
push
fcomp
add
inc
adc
stos
cmps
push
inc
sbb
xor
mov
mov
inc
jmp
xchg
xlat
stos
push
xchg
out
jle
sub
xchg
mov
loopne
add
xchg
jo
popa
sub
das
push
and
add
nop
and
pop
sahf
and
(bad)
xchg
sbb
sbb
mov
and
xchg
bswap
push
fs
inc
jle
mov
jb
add
mov
push
(bad)
ja
ins
ja
aad
mov
push
stos
jbe
and
xchg
push
das
or
mov
repz
js
adc
mov
movs
pusha
out
arpl
call
mov
inc
mov
mov
xor
or
jg
cmps
retf
sub
ins
fimul
sar
shr
xchg
mov
scas
fcmovu
stos
dec
(bad)
mov
je
popa
push
or
pop
out
add
imul
cmp
jmp
pop
jae
adc
or
lds
rol
adc
rcr
fcomp
mov
scas
mov
xchg
loopne
jnp
sub
push
lea
int
aas
pop
shr
push
das
aad
shl
xor
cli
mov
pop
sub
add
fisub
mov
lahf
jmp
dec
leave
aaa
mov
mov
mov
cmp
aad
test
jge
sbb
loop
bound
dec
xchg
mov
mov
inc
cmp
push
fsubr
and
pop
cwde
cli
mov
sub
fs
scas
addr16
imul
inc
cmp
adc
pop
mov
lods
mov
pushf
add
cmps
loope
bound
cmps
cmps
mov
adc
rcl
push
inc
mov
stos
or
call
addr16
(bad)
mov
mov
jecxz
data16
cmp
cli
mov
cwde
aas
test
mov
loopne
popf
adc
das
test
aaa
mov
push
mov
push
xor
xchg
aas
push
push
rol
into
push
data16
sbb
mov
in
pop
jb
sbb
sub
cld
fnsave
outs
hlt
xchg
jmp
gs
sbb
xor
ret
into
in
movs
mov
mov
mov
ss
or
push
pusha
mov
ins
inc
pop
movs
test
call
xchg
xchg
repz
mov
scas
das
aaa
xor
dec
sbb
das
jmp
and
lods
rcl
fnstenv
fsub
div
jmp
and
sbb
and
js
xor
std
pop
std
lock
jbe
ret
fs
lods
call
dec
outs
jg
loop
mov
add
xlat
sar
xor
ret
push
adc
sub
rcl
mov
add
fdivr
mov
inc
daa
fwait
mov
inc
jle
cmp
jecxz
mov
lods
xor
gs
repnz
sar
pop
jle
cmp
inc
pop
fild
stc
shl
adc
loope
sub
mov
ret
lock
arpl
inc
jnp
iret
jae
xor
repnz
sbb
pop
(bad)
push
xor
dec
shr
adc
mul
xlat
retf
repz
test
enter
cmps
jecxz
inc
and
mov
jns
mov
xchg
xchg
xor
retf
pop
nop
jle
ret
jne
push
cmp
call
mov
jge
and
test
mov
rol
cs
cmp
mov
jle
mov
xchg
push
pop
iret
mov
(bad)
adc
jle
jmp
xchg
xchg
mov
push
cmp
das
xor
sub
loop
jo
sub
or
ror
hlt
in
pop
mov
movs
popf
aaa
cdq
cli
inc
xor
cmps
or
in
or
cwde
push
inc
jecxz
fcmovu
xor
addr16
push
xchg
int3
test
push
arpl
mov
dec
test
js
push
lea
xchg
popf
mov
leave
add
push
(bad)
loop
and
push
in
lahf
frndint
mov
jnp
sub
xchg
jle
cmp
loopne
pop
js
fcmovb
mov
repz
loope
xor
daa
or
call
sbb
xchg
dec
fist
mov
rcr
out
dec
mov
mov
cmp
jle
ret
(bad)
out
inc
movs
sub
push
scas
cli
mov
inc
popa
not
sub
clc
inc
daa
rcl
mov
dec
jbe
icebp
push
jg
faddp
adc
sbb
jmp
enter
fwait
out
pop
loop
rol
jno
ror
movs
xor
out
cmp
mov
sbb
xchg
cmp
enter
addr16
xor
push
push
repz
mov
loope
dec
or
ret
fbld
fsub
test
sub
and
clc
cld
pushf
inc
jp
pop
mov
hlt
repz
inc
xor
add
inc
mov
loopne
xchg
scas
fs
xor
daa
shl
mov
jmp
sbb
cmc
inc
inc
sub
dec
mov
push
addr16
int
or
cmps
sbb
ficom
enter
sti
mov
lods
pop
stos
jns
lock
pop
inc
mov
mov
cwde
shr
cmp
cwde
cmp
rcr
cmps
adc
jle
call
or
xchg
or
cmp
xlat
out
movs
sub
adc
outs
scas
push
mov
cmp
mov
daa
jge
mov
push
adc
xchg
and
bound
xor
inc
sbb
xor
data16
pop
pop
(bad)
out
test
xchg
dec
lock
and
jmp
aam
cmp
cmp
inc
add
pop
cmp
xchg
into
fnstcw
mov
mov
inc
xor
cli
mov
stc
std
cmps
push
mov
pop
pop
adc
sbb
sub
ret
fist
or
pop
inc
cs
sbb
ins
mov
pop
dec
and
test
(bad)
sub
aam
lock
mov
lahf
jmp
cmp
not
je
pop
(bad)
movs
aad
ret
xchg
int
jae
aam
pop
jae
or
push
aas
and
jle
push
jns
je
js
repz
out
mov
cmp
mov
popf
pop
xor
mov
add
scas
mov
out
js
aas
test
cmp
push
test
jne
cmp
push
mov
dec
cmps
es
lea
sar
dec
cmps
lds
mov
stos
or
fnstcw
shl
ds
int
imul
daa
jge
aad
in
jo
xor
in
arpl
or
add
sbb
xchg
fwait
enter
xor
sub
push
arpl
xchg
inc
push
ja
xchg
xor
jb
in
bound
mov
jg
popa
in
mov
cld
mov
xchg
adc
mov
sub
lds
mov
push
aad
push
in
push
shl
xchg
mov
mov
or
gs
cmp
sub
cmps
test
js
fwait
push
jmp
push
retf
sbb
inc
ret
dec
mov
loop
shl
push
enter
jmp
arpl
mov
mov
pop
mov
hlt
mov
aam
push
and
iret
jno
repnz
jmp
ficomp
cs
sub
aaa
jp
ja
dec
and
mov
shl
es
push
mov
push
es
push
and
cmps
dec
call
stos
xchg
popa
or
fnstenv
lods
xchg
mov
and
pusha
sub
push
jp
add
loop
int
call
int3
inc
stos
ins
sbb
mov
dec
mov
dec
push
xor
dec
cmc
jp
and
add
sub
inc
mov
inc
rol
int3
(bad)
fisubr
sti
add
pop
fadd
shr
movs
add
rcl
imul
sub
sbb
cmp
sti
out
sub
and
dec
jecxz
mov
jb
xchg
les
add
mov
jle
aad
jge
adc
mov
and
dec
mov
pop
in
xchg
(bad)
ds
mov
jge
mov
stc
popf
add
mov
inc
ficomp
xchg
mov
imul
jge
push
mov
ja
mov
jns
jbe
adc
(bad)
icebp
cmps
push
in
add
xor
fldenv
call
(bad)
rol
add
xor
mov
cmps
hlt
xchg
dec
sbb
cmp
test
adc
neg
push
cmps
cmp
ds
or
and
cmp
mov
xor
mov
pusha
adc
jmp
or
adc
xor
fisttp
dec
stos
aaa
and
push
mov
mov
inc
in
ja
push
ficomp
mov
xchg
mov
mov
stos
push
mov
push
sahf
or
cmps
mov
cld
(bad)
and
test
xchg
(bad)
push
outs
movs
jmp
xor
ret
xor
xchg
pop
and
xor
in
int3
mov
xor
or
adc
sub
loop
adc
cmp
movs
xor
xor
cmp
sbb
fistp
mov
sbb
pop
cli
inc
push
les
pop
mov
fst
iret
and
pop
sbb
xor
dec
frstor
mov
push
inc
push
mov
adc
push
sub
xchg
mov
enter
fiadd
ins
fidiv
popa
int3
pop
jb
and
mov
jno
add
out
mov
daa
push
scas
adc
and
bound
sbb
stos
aaa
xchg
test
mov
mov
xchg
mov
jg
test
cld
movs
cmp
add
inc
xchg
test
sub
pusha
repnz
(bad)
in
call
cmp
xchg
cmp
pop
retf
punpcklwd
fcomp
dec
les
sbb
sbb
mov
add
mov
dec
xor
push
sbb
loope
xor
inc
xor
nop
ins
cdq
push
(bad)
jmp
cmp
lods
sub
inc
push
add
loop
jge
iret
cmp
ret
sbb
fwait
jge
sbb
test
push
iret
push
stc
inc
(bad)
and
loop
jmp
fsubr
cmc
imul
out
jo
rcl
sub
aaa
loope
jg
(bad)
test
xchg
(bad)
jb
jo
loop
mov
aad
xor
lea
push
push
shl
fmul
or
scas
cmps
movs
xchg
loopne
inc
js
and
adc
fidiv
and
cmps
in
pop
call
fst
movs
cmps
push
fistp
push
cmp
popa
cmp
sub
and
jb
div
lods
and
rcr
mov
pop
les
dec
jmp
loop
cwde
stc
pushf
mov
aam
add
scas
pop
sub
pop
mov
cmps
mov
or
jo
arpl
rcr
and
into
sbb
aaa
dec
add
dec
sbb
nop
loopne
cs
stc
ficomp
jb
call
repz
cmp
pop
aam
mov
test
ret
sbb
ins
pushf
(bad)
lea
jb
out
aad
stos
mov
mov
jl
jmp
xchg
(bad)
jmp
and
push
jae
neg
rcl
scas
push
push
xor
loopne
pop
mov
mov
gs
pop
jg
mov
stc
add
fs
in
loope
test
lods
push
shr
repnz
imul
leave
sbb
stos
and
xchg
retf
adc
xchg
popa
jmp
repnz
jno
pop
call
lock
push
imul
out
ins
inc
test
xchg
sub
call
ins
outs
test
push
popa
pusha
out
comiss
stc
inc
xchg
(bad)
mov
mov
test
dec
inc
xchg
dec
test
stos
push
xor
call
xchg
cmp
mov
jnp
add
inc
push
aad
pop
daa
jae
icebp
sub
loopne
fsub
push
cs
inc
sahf
imul
shl
fsubr
jmp
xchg
clc
pop
mov
je
aas
cs
lahf
shr
call
pop
xchg
fwait
jp
add
sbb
cmp
shl
sub
std
stos
cmp
push
sub
(bad)
sbb
push
sub
call
add
or
mov
xor
jecxz
jmp
jmp
ins
int3
or
mov
pop
int3
and
inc
push
call
fnstenv
pop
or
push
dec
push
dec
cli
xor
and
mov
jle
int
popa
outs
leave
ins
pop
fdiv
and
push
cld
xor
xchg
mov
xor
push
add
aaa
retf
scas
inc
loop
shr
mov
(bad)
and
mov
sar
cld
mov
mov
leave
or
jecxz
into
(bad)
pop
aam
lods
int3
(bad)
or
(bad)
mov
pop
shr
mov
xchg
adc
fwait
mov
jl
jns
repnz
sbb
or
cmp
lods
fbld
xor
clc
fsub
inc
nop
fstp
popa
adc
push
add
dec
pop
and
test
test
jns
sub
je
sub
mov
inc
ins
retf
gs
les
fwait
pop
mov
push
loope
hlt
pop
xor
movs
pop
call
or
test
cdq
xlat
clts
xlat
pushf
mul
popf
imul
fcmove
cdq
or
mov
sub
sbb
pop
xor
cmp
pop
repnz
js
jmp
push
push
mov
movs
mov
lahf
inc
fcomp
fdiv
icebp
test
out
fcomi
mov
xchg
aad
ins
xchg
mov
xchg
push
push
mov
pop
popf
cmp
jge
inc
jnp
jecxz
enter
pusha
pop
enter
sbb
in
imul
pushf
sar
aam
mov
cmps
div
and
nop
hlt
pop
push
hlt
push
in
jmp
repz
cmp
test
les
or
pop
cmp
pop
inc
out
xchg
js
scas
mov
inc
fsub
mov
mov
mov
lock
iret
cmc
sar
dec
into
mov
fstp
dec
(bad)
popf
and
inc
shl
hlt
add
mov
mov
or
fcom
neg
aam
adc
int
je
je
sbb
cld
jmp
mov
movs
inc
(bad)
pop
inc
sbb
inc
test
pop
call
bound
mov
xchg
xchg
mov
out
in
jmp
lds
mov
push
xor
dec
out
xchg
pushf
sub
mov
(bad)
push
pop
jbe
hlt
popa
(bad)
or
sbb
or
push
pop
stc
jbe
add
arpl
test
sub
fstp
jnp
or
cmp
xchg
jecxz
(bad)
cmp
jmp
add
aad
out
fiadd
mov
mov
inc
sub
xor
jns
ins
push
xchg
cmp
jo
or
imul
push
in
aaa
popf
mov
lea
sbb
jl
out
or
dec
hlt
xlat
push
push
stos
cmp
addr16
xchg
mov
add
je
shl
xchg
mov
sbb
leave
sbb
xchg
scas
cmp
or
inc
pop
xor
push
in
imul
inc
and
dec
sub
adc
mov
stos
loope
cmp
add
loope
test
xor
les
add
call
shl
sbb
fs
outs
jae
and
push
std
in
or
sub
fadd
retf
ins
xlat
lea
arpl
mov
imul
inc
push
mov
mov
popw
sub
pusha
into
push
inc
add
pop
lea
jge
xchg
pop
aaa
shr
push
rcl
jmp
mov
lds
cmp
cwde
jns
pop
pusha
(bad)
ins
iret
call
out
in
push
sti
in
add
or
cmp
inc
mov
pop
(bad)
pusha
xchg
movs
les
mov
adc
test
enter
sbb
aam
add
adc
aas
loope
movs
push
cdq
fwait
mov
adc
add
cld
or
push
add
pop
ret
mov
adc
sub
scas
pushf
or
sbb
cmps
push
fist
xor
aaa
mov
mov
dec
out
or
gs
mov
push
jae
(bad)
xor
jl
jge
jmp
jmp
out
outs
lods
test
loop
frstor
xchg
push
shl
dec
add
lods
and
inc
adc
mov
ja
shl
dec
mov
into
ja
fmul
fsubr
jl
fincstp
xor
inc
xor
xchg
fistp
push
jmp
stos
mov
mov
xor
xchg
inc
fwait
jl
add
call
xlat
ret
cmp
stc
sbb
or
push
loope
xor
pop
hlt
push
dec
xchg
retf
xchg
ins
mov
xchg
ret
test
out
jnp
fisub
push
sti
outs
fcomp
jo
jne
stos
sbb
jo
fisubr
adc
or
pushf
jl
jmp
cmps
lods
add
cmp
paddd
inc
or
sbb
int
add
or
cli
jp
push
in
inc
(bad)
loopne
jns
jmp
push
cmps
in
in
push
shrd
jp
jo
cmc
test
xor
jmp
adc
jne
test
data16
sbb
mov
xchg
sbb
test
xchg
push
les
mov
out
out
sti
xchg
div
(bad)
in
add
pushf
dec
data16
cmp
aaa
mov
aas
bound
call
add
(bad)
sar
out
sub
mov
and
daa
cdq
inc
lods
add
lods
in
aad
stos
into
out
rcr
jmp
(bad)
mov
sbb
mov
dec
js
push
inc
shl
pop
cmp
int
imul
sub
adc
mov
mov
cld
add
loopne
cmc
dec
pop
or
sti
push
or
(bad)
(bad)
mov
pop
sbb
ins
dec
push
dec
mov
push
fcomp
daa
jp
daa
xlat
xor
mov
inc
add
mov
mov
and
and
or
leave
std
or
clc
mov
push
cli
(bad)
loope
cmp
dec
sbb
stc
xor
mov
jb
sbb
das
ins
cld
jecxz
mov
aam
xor
xchg
sub
aas
dec
cmp
clc
popf
xchg
pop
and
dec
in
aas
int3
pop
out
loop
ins
xor
and
cmps
pop
fucomi
sti
xchg
and
mov
add
test
pop
pusha
cmps
cmp
cmc
jo
xor
mov
retf
mov
jbe
push
adc
jmp
sub
js
sub
les
jne
icebp
inc
inc
cmps
pop
jo
loope
leave
or
jno
inc
mul
lods
aad
rcr
fld
cwde
fisttp
sbb
xor
sahf
xor
cld
jmp
adc
loope
pop
arpl
or
push
ret
xchg
sbb
sub
into
adc
ins
loope
repnz
(bad)
imul
adc
sub
into
jp
sub
popf
push
in
iret
int3
jbe
xor
add
cmp
mov
jge
lahf
jp
xchg
test
adc
lock
pushf
inc
test
xchg
lock
mov
les
or
test
fdivr
add
lods
mov
mov
cwde
(bad)
mov
(bad)
fisubr
push
cmp
ds
pop
js
mov
arpl
pop
clc
mov
or
xor
jmp
or
push
dec
lock
mov
mov
out
mov
or
add
ret
pop
cmp
cmc
(bad)
xchg
mov
mov
icebp
pop
pushf
mov
test
movs
rcr
cld
out
clc
out
int3
je
iret
cmps
scas
test
push
not
mov
fmul
or
int3
xchg
push
mov
into
test
in
mov
xor
aam
mov
sub
dec
test
xchg
out
shr
mov
lahf
xchg
scas
call
neg
inc
mov
xchg
cmp
lock
push
in
push
movs
and
pushf
shl
out
and
int3
fnstcw
enter
xchg
aam
pop
mov
js
sbb
mov
xor
pusha
cwde
mov
mov
bound
nop
adc
xlat
xchg
dec
repz
sub
lock
popa
fnstsw
scas
add
unpcklps
bound
dec
jle
adc
jne
gs
sbb
jnp
mov
pop
call
out
aaa
popa
dec
push
mov
or
sub
adc
fdiv
mov
mov
sub
(bad)
jmp
and
in
je
mov
leave
mov
ret
mov
das
sbb
jmp
jb
sbb
scas
cmps
fsubr
xchg
(bad)
inc
sub
fist
adc
jns
mov
cmps
or
push
push
cmp
mov
xchg
xchg
push
rcr
stos
push
mov
sbb
add
adc
mov
mov
xchg
jp
dec
dec
jns
add
sbb
push
out
or
pop
inc
mov
jne
push
test
retf
xchg
mov
imul
or
pop
xor
out
stc
clc
ret
test
mov
pop
imul
add
adc
and
pop
pop
movs
mov
(bad)
and
ss
aaa
test
push
sub
sub
add
dec
push
mov
lock
leave
cmp
xchg
mov
lods
in
xor
pop
dec
push
rcl
pop
outs
cdq
sub
or
and
sbb
adc
adc
scas
xchg
outs
sub
dec
sbb
xchg
stos
popf
scas
push
das
das
in
repz
xor
dec
add
mov
add
xchg
xor
mov
sbb
cmp
cwde
jp
in
and
push
push
adc
(bad)
test
arpl
mov
or
pop
shl
and
pop
xor
adc
pop
jge
and
dec
cmp
mov
fwait
retf
inc
movs
cmp
cli
push
cmp
or
inc
stos
jl
mov
cld
cmp
out
or
stc
and
jecxz
int
mov
pop
repz
mov
cli
les
test
and
mov
and
cmp
aaa
mov
stc
xor
add
bsf
mov
push
shr
pop
les
sahf
lock
push
aaa
(bad)
loope
xchg
jecxz
push
pop
punpckhbw
(bad)
push
cld
dec
mov
add
adc
push
mov
cmp
js
cmps
inc
fs
or
sti
mov
(bad)
enter
xchg
and
sub
mov
dec
scas
pop
iret
push
fstp
ror
sbb
repnz
(bad)
enter
in
stc
sub
lahf
sbb
and
ins
fidivr
(bad)
sahf
retf
ins
cwde
cwde
push
pushf
sub
xchg
jne
dec
std
add
imul
ds
(bad)
in
sub
les
(bad)
aam
fbld
idiv
scas
dec
aam
hlt
gs
out
int3
sub
test
sbb
movaps
xlat
mov
inc
cmp
mov
(bad)
cli
and
dec
mov
mov
clc
adc
sbb
xchg
test
mov
add
(bad)
rcr
cmp
jnp
add
xlat
int3
les
xchg
(bad)
(bad)
int3
jnp
xchg
test
adc
(bad)
imul
mov
dec
pushf
mov
add
jmp
mov
and
dec
addr16
arpl
sbb
and
lods
or
jmp
xor
mov
lods
retf
(bad)
popa
cdq
aas
sbb
or
mov
jns
fdivr
or
fisttp
sbb
pop
movs
daa
ins
jnp
pmaxub
(bad)
push
fnstsw
mov
xchg
pop
jb
inc
adc
push
pop
or
and
sub
ret
idiv
jg
push
sbb
sub
lods
adc
cli
adc
aas
out
mov
mov
fwait
scas
rcl
int
shl
adc
(bad)
xchg
jo
sub
fcomp
xchg
fmul
mov
push
push
jne
or
push
mov
xor
stc
cs
jo
add
push
jae
jno
sbb
fmul
leave
mov
and
in
jmp
mov
add
or
clc
scas
jb
(bad)
aad
cwde
mov
dec
dec
mov
xchg
jb
pop
std
mov
(bad)
pcmpeqd
fwait
into
xlat
dec
pop
push
test
xchg
pop
(bad)
mov
and
add
jp
inc
and
outs
xor
cmps
imul
pop
hlt
inc
xchg
aas
jmp
pop
mov
jmp
mov
sub
and
mov
push
sar
aaa
nop
sbb
mov
arpl
sub
pushf
rol
aas
out
lock
repnz
mov
sbb
or
pop
xlat
std
sahf
cmp
jnp
xchg
sub
mov
mov
or
fwait
sar
lods
popa
adc
or
or
in
shl
sub
inc
ficomp
sub
mov
in
jp
cmps
jl
and
and
fldenv
es
mov
xchg
les
xchg
xchg
push
xchg
cmps
jp
les
pop
jmp
jle
pop
sbb
mov
popa
icebp
aam
adc
inc
fld
(bad)
cmp
sar
mov
jmp
dec
and
or
and
(bad)
xchg
fcom
cmc
mov
mov
ins
mov
scas
in
pushf
jmp
jb
or
loopne
dec
inc
pop
push
mul
movs
sub
add
ja
or
and
iret
inc
pushw
mov
cli
sar
adc
and
push
test
xchg
dec
or
sub
(bad)
shl
or
int
jbe
fisttp
(bad)
std
and
nop
pop
lea
movs
pop
push
je
add
add
int3
sub
inc
stc
sbb
gs
stc
cmps
stc
add
shr
sbb
imul
cdq
(bad)
(bad)
fmul
outs
into
jnp
lds
nop
push
cvttps2pi
xor
fstp
add
jno
sbb
xchg
jne
movs
ret
pop
dec
fwait
mov
out
and
adc
inc
or
out
jnp
bound
dec
in
mov
test
mov
mov
xchg
mov
jp
dec
int
imul
push
cmp
dec
ss
lock
pop
rcl
idiv
and
mov
fisttp
sub
cmp
add
adc
jmp
(bad)
adc
addr16
mul
or
xchg
shl
inc
sub
adc
jb
fnsave
jg
jp
js
add
fwait
int
cwde
and
jmpw
xchg
js
rol
xchg
int3
or
dec
jp
cmc
stos
in
cmp
adc
into
mov
mov
push
adc
adc
shr
ret
sbb
adc
pop
mov
and
leave
sub
mov
sbb
movs
das
retf
cmp
sahf
sub
mov
mul
sub
repnz
loopne
movs
lds
das
pop
mov
or
xchg
cdq
mov
daa
in
push
or
push
cld
sbb
mov
ins
mov
cs
push
mov
mov
push
(bad)
jmp
mov
pop
popa
jnp
inc
sub
xchg
mov
test
test
push
inc
mov
jp
(bad)
sbb
jmp
das
mov
ror
out
cmp
pop
xor
xlat
stos
pop
mov
bnd
sahf
mov
arpl
das
test
pop
mov
imul
daa
sub
mov
mov
xchg
cmp
xchg
loope
lea
cdq
inc
fidiv
add
mov
fwait
jp
cmc
dec
xchg
add
js
adc
rcr
mov
cmps
mov
mov
in
pop
jno
push
into
out
arpl
xlat
push
loopne
sti
fs
sbb
pop
mov
push
mov
jge
retf
ror
ror
jmp
xor
ins
movs
or
jle
sbb
retf
pop
pop
jo
test
pop
adc
mov
or
adc
mov
loop
outs
outs
and
inc
xor
lahf
outs
les
push
(bad)
in
ret
icebp
int
loop
mov
dec
jmp
and
inc
pop
rcr
mov
sub
mov
jl
dec
mov
je
xor
fist
or
cli
jne
jnp
sbb
repz
sbb
mov
hlt
cmp
pop
mov
adc
shl
fdivr
pop
cmp
rcl
jmp
xchg
dec
or
mov
fistp
mov
test
pop
fmul
and
lods
lods
pop
pop
cmps
push
inc
pop
cdq
xor
lods
pop
shl
lods
xor
add
sbb
mov
int
lods
inc
test
mov
inc
jl
cdq
xor
and
call
inc
mov
test
pop
pop
out
inc
outs
adc
(bad)
in
jb
jmp
js
cvtps2pd
loop
inc
sbb
bound
daa
sbb
dec
aas
repnz
sub
xor
aam
fsub
icebp
stos
int3
sub
test
ficomp
dec
and
mov
cs
mov
and
mov
pop
test
fistp
call
ds
pop
jbe
mov
xchg
lahf
xor
retf
dec
add
pop
in
mov
jb
pop
in
sub
fstp
lahf
cmp
rcl
pop
aaa
cwde
shl
arpl
pop
push
icebp
add
cmc
imul
jp
jl
pop
fsub
das
mov
test
push
sbb
enter
(bad)
sub
jbe
mov
sub
sub
shl
dec
(bad)
cmc
popf
or
rol
icebp
fadd
ret
mov
mov
ds
or
cmps
dec
cs
ins
out
ja
stos
retf
mov
push
push
in
cmp
adc
test
adc
fld
ins
(bad)
not
outs
test
mov
aas
mov
mov
test
(bad)
sbb
outs
jbe
jo
lea
jg
sub
cmps
jnp
push
fs
cmps
inc
dec
pop
or
(bad)
mov
retf
sti
clc
inc
adc
mov
mov
enter
push
outs
sti
dec
sbb
ret
popf
nop
inc
mov
in
in
adc
sbb
xchg
lock
aas
pusha
pop
scas
push
mov
jmp
cmp
out
mov
mov
iret
jno
pop
fisttp
fmul
lahf
xor
jmp
sbb
js
daa
repnz
xchg
stc
dec
inc
cli
xor
dec
mov
les
mov
hlt
mov
ss
loop
out
mov
or
call
jnp
adc
pop
push
push
outs
lea
iret
cmp
sub
sbb
pop
neg
push
in
mov
mov
mov
mov
push
push
out
inc
outs
in
push
mov
mov
mov
call
dec
out
es
or
pop
dec
ja
pop
dec
jno
pop
nop
mov
adc
or
pop
sti
je
dec
test
hlt
jb
sti
dec
pop
cli
or
cmp
xlat
xchg
xchg
sbb
push
add
sub
je
sub
jnp
push
pop
xchg
clc
sbb
outs
mov
and
xadd
xchg
js
sahf
in
(bad)
js
retf
repz
mov
out
push
int3
pop
int
mov
(bad)
push
aad
mov
pop
fcomp
addr16
xchg
xor
(bad)
pop
sub
out
cmps
cmp
or
and
pusha
retf
stos
xchg
(bad)
repz
arpl
(bad)
sub
adc
pop
mov
add
nop
ror
add
mov
lahf
add
(bad)
push
fild
pop
or
adc
pusha
repnz
dec
int3
or
in
cmps
ins
jnp
int
jne
pop
mov
jno
mov
pop
gs
jnp
dec
mov
mov
pop
pushf
mov
jge
in
mov
out
ins
lock
pop
cmc
mov
lods
popa
adc
arpl
dec
lods
rcr
xchg
mov
push
frstor
sub
in
sbb
add
outs
pop
pop
loop
scas
xor
xchg
test
add
dec
xchg
fucom
pushf
add
into
add
inc
imul
loop
in
dec
push
scas
scas
pop
and
fidiv
in
mov
arpl
jmp
test
xor
int3
sub
and
xchg
xchg
pop
push
jg
stc
shl
mov
jne
out
xor
dec
and
fisttp
add
repz
sahf
out
fs
sahf
xor
mov
jo
mov
js
fnstenv
push
hlt
ja
gs
mov
push
sub
xchg
jmp
outs
in
rcr
push
pop
cmp
sub
mov
aaa
add
push
pop
cmp
inc
push
sahf
mov
cmp
cdq
dec
or
icebp
fimul
cdq
push
add
out
push
cmp
pop
push
or
gs
xor
xor
jge
cmps
loopne
add
repnz
or
xor
jle
loopne
mov
pusha
pop
mov
sbb
or
push
mov
ss
stos
mov
cmps
jns
pop
movs
fimul
je
into
stc
push
shr
cwde
dec
xchg
scas
xchg
cli
fs
sub
retf
int3
int
inc
imul
cdq
jbe
push
mov
movs
xor
mov
imul
xchg
push
push
dec
test
add
pop
scas
mov
push
pushf
(bad)
bound
sub
or
fst
push
lahf
dec
popf
fdivr
lods
and
sti
jge
pop
cmp
popf
pop
push
push
cvtdq2ps
or
jnp
push
cmp
mov
adc
(bad)
or
lahf
jecxz
not
mov
fstp
mov
xlat
mov
jae
jp
fwait
pop
add
push
lods
mov
dec
gs
push
ins
(bad)
sub
lods
inc
sub
inc
nop
popa
and
or
test
in
dec
outs
mov
(bad)
(bad)
out
jp
rol
jno
inc
and
inc
inc
push
ja
test
and
call
xchg
scas
bnd
sti
in
fild
shl
fs
push
loopne
pop
aad
add
frstor
shl
dec
xchg
pop
(bad)
mov
ret
ins
ins
ss
add
shl
add
imul
outs
test
stos
xchg
movs
push
add
out
int
pop
ret
aad
sbb
dec
jle
mov
push
mov
jno
and
sub
mov
fxch
sbb
stos
(bad)
enter
cmc
imul
outs
xor
mov
cld
aad
int
fwait
cmp
jae
ror
clc
mov
inc
cmc
add
cmp
xor
fbld
cmc
sub
xchg
jbe
and
pop
or
(bad)
(bad)
push
stos
je
inc
dec
adc
cmp
fldcw
pop
fmul
loop
test
das
nop
and
cdq
sub
rcr
pop
mov
inc
mov
cmps
adc
adc
ds
imul
fst
push
in
stos
gs
adc
loope
cdq
jle
(bad)
div
push
mov
outs
out
jecxz
jp
(bad)
mov
lods
mov
pushf
inc
cwde
(bad)
retf
sbb
(bad)
arpl
mov
push
sub
mov
pop
icebp
or
and
dec
popw
jae
fild
xchg
sar
stos
mov
mov
test
and
cdq
mov
jns
inc
push
mov
adc
stos
dec
mov
and
pop
(bad)
fstp
xor
nop
fcmovb
pop
adc
and
data16
jnp
push
adc
loopne
imul
test
push
inc
adc
fild
pop
test
shl
dec
push
mov
xor
mov
test
adc
inc
into
ds
out
xchg
sbb
sbb
shr
call
lods
pop
in
ret
call
sbb
push
fimul
add
and
add
adc
loopne
push
xchg
cmp
mov
sahf
ds
xchg
add
add
push
or
mov
xor
xor
js
mov
xchg
mov
ficomp
icebp
mov
nop
iret
add
xchg
xchg
sbb
mov
pop
pop
sbb
sub
loope
lea
outs
add
pop
or
sbb
or
jno
rcr
jg
lea
ins
mov
push
inc
js
dec
dec
lods
and
inc
sbb
in
xchg
aad
dec
and
push
or
in
daa
bound
inc
rcl
add
lds
sbb
gs
jmp
les
jo
adc
pushf
pop
ret
pop
mov
cli
push
retf
lea
inc
(bad)
push
stos
lea
loopne
mov
sub
and
pop
cmc
adc
out
mov
xor
dec
lahf
xor
jp
push
and
xor
xor
pop
xchg
iret
cmp
push
jmp
mov
add
pop
xor
jns
mov
pusha
int3
xchg
std
int
retf
sbb
push
stos
mov
inc
xchg
jb
sahf
ins
int
outs
cmp
jo
push
movs
neg
jg
daa
add
jg
outs
and
adc
push
adc
mov
adc
dec
gs
je
lock
mov
cmp
sti
or
xchg
mov
retf
inc
xchg
adc
push
shr
out
bnd
mov
repnz
push
pop
cmc
sub
test
ins
in
adc
loopne
add
sbb
mov
ror
pop
fisttp
lods
xor
cmp
mov
in
push
aad
or
hlt
xor
push
mov
aam
cwde
and
xchg
cmp
ins
mov
jae
xor
and
adc
enter
test
dec
arpl
jmp
adc
in
cs
inc
es
push
xchg
(bad)
hlt
stos
xor
int
rcl
retf
fucomi
or
fisttp
or
add
in
out
mov
loope
imul
push
jecxz
or
iret
jmp
movs
imul
push
inc
mul
imul
les
inc
outs
call
push
inc
push
je
mov
stc
popf
push
cli
cmp
dec
out
loopne
mov
mov
aaa
inc
sti
retf
scas
sbb
(bad)
jae
and
(bad)
mov
call
pop
mov
push
push
push
mov
dec
mov
xor
and
cmp
mov
repnz
jb
xchg
sub
jl
dec
jae
out
inc
mov
ins
dec
sbb
fwait
mov
ret
inc
jmp
out
fdivr
rol
mov
cmc
rcl
std
jl
push
mov
dec
mov
pop
out
pop
inc
push
xor
test
xlat
shr
dec
cs
mov
nop
sti
loope
ret
jno
ins
sub
pop
pop
test
mov
adc
inc
and
movs
aaa
je
scas
fidivr
call
dec
cmps
out
out
xchg
sahf
inc
mov
mov
stos
(bad)
jae
inc
and
js
mov
sbb
sahf
lods
push
nop
bound
aad
pop
fwait
xor
adc
jmp
ja
push
cmps
popa
xor
call
js
xor
outs
icebp
adc
sti
dec
xor
cld
inc
jge
in
mov
sti
cmps
das
lea
xchg
test
push
out
cmps
out
movs
adc
add
sub
dec
inc
mov
jl
sbb
mov
fdiv
sub
cli
retf
and
in
sahf
jp
add
push
std
pop
xchg
jb
adc
sub
(bad)
aam
ins
dec
movs
sbb
outs
popf
jae
xchg
sahf
xor
out
cmp
es
sbb
neg
pop
pop
mov
xor
mov
mov
cmc
std
xchg
mov
cmp
les
mov
ret
lahf
inc
daa
movs
stos
lahf
scas
dec
push
or
and
loop
call
pop
je
data16
push
xor
sbb
xor
outs
sub
sub
cmp
enter
fnstenv
(bad)
shl
fimul
in
add
add
xchg
sbb
stos
dec
dec
ins
xor
pop
xor
xchg
push
sbb
dec
loop
xchg
xor
or
dec
fs
pop
aam
pop
daa
dec
shl
shl
icebp
push
xor
sub
shl
mov
in
cmp
neg
push
faddp
loope
sbb
out
hlt
jg
stc
mov
loop
mov
(bad)
imul
call
jmp
in
into
imul
sub
push
adc
adc
std
cmp
push
pop
lds
sti
add
xor
and
push
jnp
cld
loop
scas
sbb
pop
jbe
mov
inc
stc
sbb
adc
mov
jbe
stos
sbb
sub
into
or
adc
sub
dec
jmp
pop
cmp
jg
hlt
repz
fcomp
mov
push
cmp
mov
add
data16
pop
and
outs
sar
pushf
inc
cmp
adc
push
mov
dec
cs
dec
shr
sub
jns
cmp
mov
or
push
es
jae
leave
and
pop
ins
hlt
jbe
mov
scas
jmp
aad
sub
pop
adc
mov
and
addr16
fwait
add
jmp
call
xor
out
mov
mov
repz
lock
xchg
aad
fisttp
mov
fisub
out
ja
(bad)
lock
mov
cmp
imul
inc
imul
fist
das
popf
or
test
ins
scas
into
idiv
sub
nop
add
pop
cli
xchg
inc
movs
adc
push
aam
and
sub
inc
or
push
xor
repnz
loope
bnd
dec
cwde
cmp
fild
enter
or
cld
(bad)
movs
adc
aam
dec
mov
call
mov
ja
mov
xchg
dec
stos
sbb
add
cmps
push
ss
mov
aas
mov
shr
(bad)
cmp
out
fld
mov
movs
fadd
jns
cmp
mov
fild
mov
pop
outs
dec
stos
lods
and
in
mov
fild
bound
js
test
push
ja
scas
mov
aam
adc
add
jg
pop
push
dec
cwde
pop
sub
xlat
dec
sti
(bad)
out
rcr
pop
dec
arpl
clc
sub
mov
sar
jecxz
pop
in
inc
and
fbstp
aad
pop
fsub
dec
pop
ret
mov
push
shr
addr16
in
shl
cmp
ss
aad
jmp
xlat
xlat
and
jmp
rcr
push
dec
mov
sub
push
ins
aad
pusha
rcl
fs
dec
mov
fdivr
mov
mov
pop
and
fdiv
fcomp
int
adc
test
mov
mov
test
xor
gs
cmp
sbb
xor
clc
and
xor
leave
ss
iret
or
push
or
sub
ror
push
adc
jge
retf
out
adc
lds
enter
les
and
and
out
pusha
jne
xchg
adc
xor
dec
inc
lock
jecxz
scas
je
cmp
nop
xchg
sahf
shr
jb
jns
pop
adc
dec
(bad)
mov
inc
stos
in
arpl
fdivr
jne
les
pop
push
and
or
cwde
jl
(bad)
mov
(bad)
push
mov
fmul
loop
icebp
mov
jne
mov
and
out
ficom
data16
es
call
cs
ds
in
fcomi
popa
cdq
xor
add
movs
(bad)
jmp
fdivr
jmp
das
jnp
jmp
sbb
test
rol
xchg
pop
jle
sbb
pop
push
adc
xor
outs
call
mov
gs
xor
and
in
popf
mov
inc
add
push
(bad)
out
mov
call
mov
xor
test
mov
dec
jnp
out
int3
xchg
dec
inc
or
jmp
leave
ret
jmp
(bad)
jne
data16
or
dec
popf
or
int
sub
out
mov
lock
sub
inc
fbld
jp
leave
adc
out
mov
fdiv
fwait
data16
inc
sbb
leave
adc
dec
imul
into
xchg
hlt
and
fcom
retf
push
jbe
iret
adc
sbb
fldcw
mov
idiv
fdiv
add
inc
jl
fidivr
pop
mov
push
in
cmp
sbb
xor
add
shl
les
mov
inc
lahf
gs
data16
ds
cmc
mov
mov
je
in
movs
aas
cwde
out
push
cmp
fcmovnb
in
loope
and
dec
sub
fidiv
scas
pop
cmp
xor
ds
push
fnstenv
push
jp
jne
cmp
inc
mov
aas
js
mov
jns
ret
inc
aaa
jmp
test
sub
mov
pop
dec
mov
cmp
jae
adc
retf
aaa
arpl
in
xlat
enter
popa
pop
push
push
push
cmp
ins
aas
or
sub
stos
sbb
cwde
(bad)
imul
push
jg
xor
fbld
out
cdq
mov
or
ds
repz
mov
je
ret
inc
jmp
jae
loope
sbb
test
mov
std
cli
mov
retf
push
jbe
aam
and
inc
or
imul
idiv
xlat
popf
mov
outs
sbb
xor
repnz
pop
movs
pop
sub
push
lods
shl
gs
and
and
or
and
mov
push
xchg
mov
dec
retf
loopne
dec
sbb
das
arpl
mov
ret
jo
mov
and
adc
adc
adc
rcr
sbb
jns
(bad)
xor
(bad)
clc
(bad)
pop
lock
cmp
fisttp
cdq
and
jge
push
sub
or
dec
or
jns
push
mov
sub
cmc
cld
(bad)
xor
fisttp
imul
mov
je
and
push
dec
shl
sbb
je
ds
and
xlat
shr
mov
inc
sbb
xor
shl
xlat
cmc
jmp
push
mov
bound
lahf
aam
xchg
or
xor
pop
retf
mov
and
aaa
sbb
mov
dec
daa
aas
xchg
fisub
jno
lods
fdiv
push
and
jno
nop
push
adc
(bad)
fcom
pop
pusha
test
xor
mov
cmp
and
push
jge
(bad)
fcomip
sbb
push
lods
push
out
ins
ss
cmc
loop
out
dec
add
ds
pop
xchg
cmp
mov
lods
cwde
(bad)
hlt
jp
retf
aaa
add
pop
bound
loop
sub
(bad)
loop
ins
out
jbe
cmp
cmp
das
push
scas
xchg
dec
cld
xchg
lea
ror
int
mov
fild
inc
pop
mov
jns
data16
xor
add
push
adc
adc
xor
sub
mov
add
es
test
shl
pop
cdq
stc
ret
dec
jmp
xor
or
test
sahf
lds
pop
sub
push
adc
repz
cli
push
inc
test
imul
ds
jno
dec
hlt
push
xchg
pop
cmp
dec
jecxz
movs
and
dec
sti
or
imul
mov
or
jbe
arpl
(bad)
cmp
stc
inc
xchg
cld
push
repnz
mov
retf
sar
xchg
leave
jbe
idiv
cmp
movs
bound
inc
dec
push
aad
and
inc
mov
js
cli
test
dec
inc
xchg
es
mov
jno
mov
add
jp
rol
dec
mov
inc
add
or
loope
jl
and
push
iret
mov
pop
jns
xchg
iret
push
stos
jl
clc
jb
mov
pusha
jecxz
stos
push
aam
ds
inc
mov
inc
dec
daa
loopne
nop
sub
and
shr
push
std
shl
push
out
or
(bad)
popf
nop
out
aam
mov
stos
lea
rcl
or
call
leave
sub
pop
jge
ror
inc
sbb
jbe
xor
pop
loope
pop
pop
movs
xor
imul
xor
jo
cmp
dec
sbb
adc
mov
pusha
sbb
dec
mov
push
sub
add
sbb
ds
mov
call
xor
sbb
ror
xchg
popa
mov
or
mov
lock
mov
jnp
imul
ss
or
loope
cmp
and
pop
mov
lock
out
and
loopne
jmp
fild
jecxz
in
pop
or
mov
bswap
jb
loope
mov
cwde
jmp
into
pop
add
adc
into
test
mov
push
xchg
lahf
pop
xor
sahf
sbb
dec
dec
cli
daa
jmp
adc
cmp
mov
jl
sub
pop
out
mov
(bad)
idiv
sbb
mov
and
(bad)
lock
xor
clc
jno
fs
or
cmps
sub
inc
cmp
cwde
inc
mov
fst
je
sbb
sbb
jo
pop
mov
les
ja
mov
xchg
adc
xchg
das
in
mov
push
sub
add
dec
les
and
ja
pop
add
lds
adc
retf
sbb
fidivr
inc
cmps
cmc
(bad)
jnp
pusha
mov
push
out
fidivr
enter
xor
out
lds
pop
pusha
mov
retf
pop
and
inc
push
je
inc
adc
sub
out
sub
pop
clc
fdiv
push
pop
push
mov
pusha
cli
cmp
addr16
ss
fs
xchg
push
lds
lods
fmulp
inc
lods
xor
xchg
ret
mov
clc
push
adc
hlt
mov
ficom
mov
adc
jle
add
repz
mov
pop
mov
jnp
lahf
cmp
jne
in
lds
cmps
lahf
jp
aad
mov
cmp
xchg
aaa
outs
mov
pop
iret
push
cmps
xchg
cli
jo
jge
xchg
inc
jb
pop
cld
sar
xchg
sbb
lds
xlat
test
or
adc
loope
or
or
popf
sbb
pusha
int3
(bad)
push
sahf
sbb
cmc
stos
mov
xor
jle
stos
push
(bad)
mov
add
jmp
push
loop
ss
inc
inc
sub
xor
sbb
mul
push
jmp
fnstsw
pop
bnd
push
ret
ret
lods
add
mov
adc
imul
dec
mov
pop
xor
in
mov
push
popf
mov
cdq
ds
jne
repnz
jmp
fs
in
push
bound
iret
test
(bad)
mov
xchg
stos
jb
stc
test
out
cmp
call
xchg
outs
fsub
pop
mov
sbb
push
mov
xchg
xor
mov
jl
cmps
repnz
mov
int3
and
enter
pop
mov
push
cmp
call
adc
std
sub
mov
cld
(bad)
out
in
(bad)
sub
fs
jnp
pop
out
neg
dec
lods
and
or
(bad)
fisttp
dec
pop
rol
fcmovb
out
sbb
jle
sbb
xchg
xor
cmps
mov
fwait
pop
leave
dec
xor
jg
push
add
outs
stos
or
dec
pushf
sub
lea
pop
mov
inc
fimul
mov
fld
mov
adc
gs
inc
and
add
lock
fwait
inc
cmp
push
push
ins
(bad)
sbb
sub
out
cmc
aaa
mov
xor
(bad)
int3
or
and
(bad)
fsub
and
mov
push
mov
jp
retf
xlat
sar
sub
stc
jae
mov
in
cmp
sub
pop
push
cld
mov
repz
xor
adc
jne
adc
jmp
cmp
dec
clc
dec
aaa
cmps
add
mov
jmp
push
xchg
and
shr
shr
lock
dec
lds
mov
pushf
push
or
pushf
arpl
xor
lahf
test
xchg
stc
sub
cmps
and
mov
hlt
mov
idiv
mov
push
repz
ins
mov
lock
pushf
frstor
sub
daa
pop
in
cld
stos
adc
fwait
jmp
or
push
fst
xchg
movs
inc
test
iret
ja
xchg
and
out
push
sub
stos
movs
shl
stos
jns
jnp
in
(bad)
test
iret
jbe
xchg
lea
dec
fisub
fsubp
pop
pop
mov
imul
sbb
in
fwait
retf
ins
imul
cmps
fadd
ret
(bad)
and
fistp
cdq
inc
xchg
dec
stos
pop
xor
mov
in
ss
movs
add
lock
cmc
or
je
aad
(bad)
add
aas
ss
pop
xchg
imul
ja
mov
jns
nop
sbb
(bad)
xchg
push
(bad)
inc
into
(bad)
fdiv
int3
push
frstor
cmps
hlt
jnp
pop
mov
in
rol
dec
in
lods
xchg
repnz
cmp
adc
xor
pushf
cli
cmp
nop
sbb
inc
adc
add
mov
mov
test
mov
stos
dec
mov
sub
xor
fnstsw
sub
mov
ficom
or
sahf
jae
call
arpl
add
mov
add
cmp
xchg
dec
mov
ret
jo
icebp
cmp
pop
and
cmp
fldenv
or
pusha
loope
aaa
xor
jecxz
test
sbb
cmps
aas
ja
dec
call
inc
es
in
xchg
or
mov
rcr
fisubr
jle
inc
cmp
and
int
rcr
sub
jnp
or
sub
ret
imul
xchg
(bad)
out
jl
pop
adc
popa
cmp
ds
sbb
(bad)
lea
cmps
(bad)
mov
dec
jne
sbb
xchg
rol
sbb
test
ret
add
mov
jbe
neg
mov
lock
leave
call
popa
(bad)
and
les
xchg
push
shr
sbb
and
retf
int3
cmp
push
adc
mov
push
shl
mov
aad
fcomp
xor
pop
rol
xor
test
xchg
mov
mov
int3
sbb
cmps
outs
or
adc
jmp
out
mov
pop
sbb
sbb
mov
in
push
add
es
loope
push
push
popf
test
pop
test
loope
ins
call
push
(bad)
jnp
push
(bad)
mov
sub
cmp
jle
lea
not
dec
dec
stos
dec
jecxz
mov
nop
jns
call
xlat
add
les
adc
adc
sbb
sub
pusha
pusha
movs
mov
xchg
mov
add
in
icebp
jp
mov
jae
add
and
push
cmp
retf
les
mov
lods
aam
pop
add
ret
(bad)
cmp
add
mov
push
test
and
push
inc
adc
vcmppd
int3
call
add
sub
xlat
jp
sbb
and
xchg
sbb
mov
aaa
mov
or
cli
ret
cdq
icebp
repz
xor
and
pop
cli
sbb
shl
mov
(bad)
or
(bad)
ins
ret
mov
int3
dec
outs
div
out
pop
push
xor
shl
mov
ret
lods
inc
lods
add
test
cmp
inc
cld
and
stc
movq
cmc
daa
jae
and
or
dec
fsub
mov
dec
stc
mov
scas
push
shl
aad
pop
and
mov
mov
(bad)
jmp
cmp
(bad)
sbb
push
mov
neg
cmp
jnp
lea
clc
push
cmp
popf
hlt
test
jg
xchg
hlt
xchg
mov
lds
push
(bad)
mov
mov
cmp
in
dec
lods
out
and
cmps
cmps
in
out
sbb
mov
mov
loope
cdq
jl
push
xchg
es
aam
ins
xchg
repnz
fbld
mov
push
int
daa
jmp
jl
mov
hlt
and
mov
add
xchg
add
xchg
pop
mov
pop
retf
push
xchg
fisub
(bad)
push
imul
inc
fdecstp
sti
mov
jle
xchg
mov
xor
jo
idiv
dec
stos
xchg
push
inc
sub
enter
pop
pop
sbb
xchg
inc
cmps
push
xor
dec
xlat
lds
and
adc
mov
hlt
pop
xchg
xchg
bound
adc
dec
jmp
xlat
push
mov
push
xchg
les
adc
outs
and
shl
in
imul
mov
call
push
test
fwait
addr16
fnsave
dec
add
push
xchg
bound
jo
push
not
xchg
mov
fs
je
dec
mov
add
cld
imul
cli
sti
les
pop
push
and
mov
mov
fs
jae
jl
fild
mov
pop
ds
sar
pop
sbb
lds
out
cli
dec
retf
hlt
int3
into
inc
lea
lods
mov
inc
into
push
mov
jge
scas
ja
rcl
xchg
stos
imul
repnz
sbb
shl
or
mov
in
mov
aad
adc
pushf
popf
into
push
adc
cmps
jb
jne
movs
xor
ret
out
jo
lds
mov
aad
imul
mov
xor
in
xlat
and
cwde
pop
pop
lods
into
imul
push
adc
in
repz
or
cmps
into
and
mov
(bad)
int3
jns
fisubr
xchg
sub
rcl
xor
arpl
imul
jbe
cmp
rol
cwde
inc
push
jb
lods
inc
js
out
test
retf
mov
sub
(bad)
and
cld
and
(bad)
jmp
test
ret
mov
mov
inc
push
or
dec
out
fs
adc
daa
jmp
push
and
sar
pop
outs
or
shr
retf
(bad)
mov
inc
stc
jnp
dec
dec
add
xchg
int
inc
cdq
shl
in
rcl
dec
jne
inc
mov
jnp
retf
push
mov
inc
scas
test
dec
das
adc
and
fwait
sbb
int
mov
or
mov
nop
test
pop
jmp
inc
fstp
or
scas
pop
loope
(bad)
push
dec
jge
jge
push
cmp
mov
fsubr
or
cdq
gs
xor
adc
push
push
adc
and
or
xchg
cmps
cmps
pop
outs
xchg
gs
adc
adc
pop
xchg
repnz
cs
lds
js
jecxz
cwde
xor
xchg
cs
push
loope
neg
xchg
sar
jle
and
loopne
push
adc
xlat
pop
sub
ret
mov
jne
inc
or
dec
das
stos
je
js
ror
and
inc
std
lock
jne
popf
rol
pop
or
retf
xchg
sub
mov
idiv
fs
adc
push
mov
or
mov
push
shr
xchg
jns
out
daa
loope
scas
push
imul
jnp
inc
inc
xor
cld
pop
adc
mov
jo
xchg
sbb
inc
mov
pop
out
and
fs
jns
ss
or
loopne
test
shl
pop
pop
push
es
cmp
cwde
sbb
or
daa
push
aas
int
addr16
ret
fwait
nop
jecxz
add
adc
js
cmp
mov
std
adc
or
retf
loopne
xchg
and
repz
jle
mov
sar
sar
loopne
mov
pushf
or
(bad)
pop
sbb
ins
ja
inc
mov
xlat
jno
ret
bound
cld
imul
or
sbb
aam
popa
mov
mov
shl
iret
xchg
fidiv
pusha
or
das
shl
inc
dec
jo
pop
sahf
mov
test
ror
sub
mov
xchg
xchg
repz
(bad)
cmp
and
push
inc
ret
mov
mov
sub
xlat
fwait
add
jo
dec
inc
cmp
int
xlat
xchg
shl
test
xchg
pop
push
sub
loope
fisttp
aam
lds
mov
imul
lahf
and
xor
or
call
jbe
pop
ja
push
mov
mov
inc
xchg
test
xor
inc
push
pusha
test
arpl
sbb
jg
dec
jmp
mov
(bad)
or
cwde
push
out
scas
ins
mov
xchg
inc
mov
je
push
rcl
mov
call
pop
jmp
mov
add
dec
arpl
out
retf
fs
and
dec
xor
sti
xchg
or
mov
push
das
jmp
fxch
inc
popa
mov
int
or
daa
out
sar
or
jae
js
outs
es
int3
jnp
int3
jge
cmp
je
adc
xchg
stos
xor
push
(bad)
fidivr
mov
lock
mov
xchg
jno
lock
mov
dec
mov
imul
in
and
mov
and
jne
inc
pop
imul
mov
jmp
adc
retf
push
loop
cmps
sbb
loop
sahf
jae
inc
sti
je
and
push
jg
sub
xor
mov
aad
jp
loopne
xchg
add
ds
xlat
mov
out
ds
loop
ss
push
in
mov
jl
shl
jo
sbb
add
jle
pop
lahf
mov
xchg
jae
mov
test
xchg
sub
pop
clc
aaa
and
mov
mov
and
lahf
cs
scas
dec
retf
jl
dec
scas
mov
std
mov
jns
imul
popf
fisttp
push
fist
mov
fsub
cdq
arpl
pop
cld
lahf
xchg
jo
or
mov
stos
stos
jp
xor
jmp
jnp
xor
or
mov
sbb
lods
mov
jg
ss
xchg
psubw
xchg
rol
or
and
xor
(bad)
pop
push
sbb
jge
movs
cmc
popa
pop
or
in
(bad)
cmp
cmp
jp
and
dec
popa
lods
mov
enter
daa
jnp
adc
dec
sar
es
push
push
div
dec
loope
cdq
dec
xor
pop
repz
imul
mov
aam
fsub
cmp
pop
movs
cmp
in
jmp
ja
and
(bad)
aam
shr
arpl
jne
loope
and
jg
shl
test
mov
cmc
imul
mov
inc
mov
aaa
iret
xchg
ja
cmp
sahf
sbb
ficomp
mov
ret
fsqrt
pusha
pushf
sar
jb
mov
ins
arpl
div
clc
xchg
ror
cmp
xor
mov
xor
jno
loop
call
out
icebp
push
(bad)
dec
lea
into
fcomp
test
stos
mov
xchg
outs
mov
sti
mov
pop
sub
in
push
mov
icebp
loopne
inc
jae
cs
push
outs
add
mov
xchg
push
mov
xchg
jae
inc
(bad)
mov
push
push
or
shr
(bad)
loopne
lods
xchg
stos
pop
inc
out
ret
aad
jmp
cmp
movs
sbb
jg
mov
jnp
out
or
dec
jg
jo
mov
pop
mov
dec
jbe
push
into
mov
mov
inc
and
mov
(bad)
loopne
cmp
stos
sub
lahf
add
mov
hlt
and
add
cmps
and
(bad)
xchg
jmp
dec
mov
push
ficomp
push
mov
mov
mov
push
mov
cli
lods
mov
or
adc
sub
outs
jmp
xchg
daa
dec
outs
or
sub
fwait
in
xchg
scas
jbe
and
js
iret
movs
push
and
push
inc
adc
xor
mov
ss
xchg
push
ficomp
retf
(bad)
jae
(bad)
pop
pop
adc
xor
mov
pop
xchg
(bad)
dec
popa
cs
outs
xchg
mov
sbb
outs
daa
push
and
add
lods
push
test
mov
cs
sub
std
mov
mov
push
or
jge
adc
and
jno
and
jmp
pushf
push
shl
ins
(bad)
push
cmps
sahf
je
or
xchg
lea
test
pop
adc
adc
ds
jecxz
mov
push
(bad)
lahf
ret
fistp
out
repz
pop
cmp
pop
mov
(bad)
fstp
or
js
popa
pushf
or
pop
mov
and
imul
repz
icebp
clc
push
adc
sbb
test
cmp
ins
xchg
sub
fidiv
ja
mov
and
rol
and
or
jmp
dec
jo
pop
repz
mov
shl
xchg
push
repz
(bad)
and
fwait
mul
inc
int
daa
es
clc
or
jae
and
jnp
mov
into
int3
jno
jg
add
mov
adc
fisub
out
loopne
stos
rep
inc
add
fisttp
cmp
popa
rep
sbb
sub
push
hlt
mov
retf
aas
adc
cmp
sbb
jo
mov
jmp
mov
sbb
fsubp
cmp
out
mov
loope
lods
sub
hlt
sub
sub
sbb
sbb
ret
inc
ja
shl
call
mov
mov
sbb
pop
call
dec
rol
xchg
and
or
adc
in
popa
xor
stos
dec
test
xlat
sub
cli
cmp
xor
pop
cwde
ins
gs
push
lahf
pop
or
xchg
rcr
or
push
outs
retf
push
das
sub
mov
cmp
add
xor
cwde
rcr
fwait
pop
stos
mov
jmp
sbb
sti
cs
fwait
bound
mov
in
or
mov
adc
sbb
enter
or
std
imul
fisubr
ss
sbb
(bad)
repnz
sub
sbb
xchg
adc
add
out
iret
in
scas
inc
lods
rcl
stos
enter
xchg
xchg
fidivr
repz
mov
imul
xor
data16
xchg
(bad)
pop
xor
pusha
addr16
mov
adc
pop
adc
ins
cmp
sbb
inc
jg
xchg
das
movs
mov
and
ret
mov
and
rol
mov
sub
jno
mov
or
ja
(bad)
xlat
fidiv
jmp
xor
fdivr
fdivr
or
sahf
inc
in
push
sub
repnz
pop
sti
leave
push
and
dec
jge
jns
add
dec
cmovs
enter
dec
xor
mov
dec
sub
cmp
pop
daa
push
mov
mov
inc
xchg
out
out
mov
cdq
dec
push
push
adc
adc
mov
pand
nop
cmp
(bad)
push
in
pop
jnp
pop
outs
sub
mov
dec
cmp
int
movs
movs
mov
pop
xchg
shr
out
aas
xchg
mov
sbb
cmp
adc
icebp
mov
(bad)
ja
jecxz
movs
fucom
jp
push
call
pop
daa
mov
pop
icebp
jmp
rol
div
fs
sbb
ror
sbb
jne
add
adc
outs
xchg
out
sbb
add
pop
inc
mov
xchg
jo
vmovq
cwde
inc
sub
repnz
mov
lahf
jecxz
daa
xchg
and
mov
cmps
mov
add
mov
pop
mov
mov
inc
jnp
inc
in
jecxz
add
mov
fwait
test
nop
outs
dec
inc
inc
jecxz
int3
test
jmp
jne
sbb
cdq
jmp
mov
retf
adc
add
lods
retf
mov
mov
adc
not
jne
pop
ins
mov
inc
mov
inc
xchg
stc
stos
lea
xchg
stos
ins
sbb
movs
std
and
popf
les
scas
sub
push
shr
jg
(bad)
jle
add
inc
nop
ja
call
push
fidivr
inc
arpl
fmul
sub
mov
mov
mov
and
xchg
int
iret
loopne
push
inc
sahf
xor
enter
add
fsub
inc
lds
popf
jmp
jbe
add
(bad)
dec
push
mov
loopne
inc
adc
jne
or
rcr
mov
mov
loope
push
mov
nop
ret
xor
or
push
and
mov
enter
jmp
into
jp
(bad)
xor
add
enter
movs
fistp
cdq
iret
mov
jbe
cs
sbb
das
fwait
cld
(bad)
sub
in
add
ror
pop
popa
xor
pop
jle
gs
into
int
cmps
sbb
xor
xchg
and
repnz
fsub
and
mov
pop
add
or
jl
jbe
aad
adc
mov
mov
sti
xchg
stc
push
mov
push
jmp
sbb
into
jmp
gs
aas
rcr
cmp
sbb
outs
(bad)
fiadd
add
pop
das
mov
icebp
shl
test
sbb
lock
pusha
add
fdivr
gs
lahf
sbb
popf
lods
inc
jne
push
into
fadd
inc
imul
xor
clc
vmovsd
into
or
jl
dec
jp
in
sub
ins
push
xlat
xlat
fisttp
jae
lock
push
dec
std
jns
pop
imul
sahf
adc
je
les
push
xchg
cmp
mov
xchg
inc
mov
fwait
cmps
fwait
int
jl
icebp
mov
rol
cmps
mov
cld
dec
test
dec
add
test
mov
(bad)
sbb
jp
int
(bad)
(bad)
mov
pushf
push
les
and
aaa
ins
iret
dec
and
xchg
test
inc
xor
sbb
(bad)
mov
sbb
repz
div
outs
imul
aas
pusha
inc
stos
mov
xchg
xor
jnp
mov
push
(bad)
adc
out
cs
sbb
dec
sbb
nop
inc
xchg
int
test
nop
sub
sbb
and
fld
icebp
ds
into
popa
sub
lock
xchg
cld
mov
jmp
adc
stos
jp
addr16
cmp
loop
mov
movs
fmul
and
pop
xchg
push
or
sub
sub
pop
pop
mov
aam
sbb
push
and
mov
cmp
repnz
xor
cmc
mov
mov
push
mov
inc
loop
scas
mov
mov
pop
adc
add
repnz
fldcw
(bad)
pop
mov
lods
sub
sub
movs
sub
dec
xchg
aas
inc
lock
mov
or
lock
xor
mul
mov
pop
imul
push
loopne
push
lods
movs
nop
icebp
or
movs
into
push
repnz
jmp
fcmovnb
test
lock
in
mov
inc
cmp
mov
dec
aad
enter
clc
je
sahf
sti
add
jmp
repnz
mov
arpl
pushf
(bad)
movs
(bad)
mov
add
mov
ret
(bad)
enter
popf
push
jnp
or
das
sub
inc
jp
hlt
in
pusha
leave
in
ficomp
dec
jne
push
mov
or
sub
push
mov
mov
sahf
in
jae
fsub
add
add
outs
sti
adc
fwait
shl
int3
fs
sti
test
push
stos
fs
in
mov
and
ret
jge
mov
pop
sub
pop
xor
inc
lods
arpl
mov
inc
mov
repnz
cmp
jnp
mov
add
and
jo
add
loop
inc
stos
out
bound
xlat
cmp
into
fmul
mov
push
sub
cli
out
not
sub
imul
dec
mov
pop
inc
push
in
push
and
mov
(bad)
sub
push
push
outs
adc
pop
not
lods
sub
lahf
xchg
cmc
add
popf
ficomp
pop
stos
sbb
ss
stc
lds
or
push
fimul
mov
out
pop
imul
pop
inc
neg
cmp
sbb
shl
(bad)
out
outs
mov
cmp
int
jb
ss
or
popf
push
push
push
shr
int
mov
stc
fdivp
xchg
out
mov
in
sti
xchg
fisubr
lock
lods
add
inc
cmp
rcl
sbb
jnp
cmp
jns
adc
das
push
cmp
pop
jmp
and
scas
into
(bad)
xchg
sub
fwait
adc
dec
push
dec
aam
imul
arpl
mov
ja
(bad)
sub
sub
dec
cmp
aad
leave
adc
inc
mov
inc
xor
stos
push
jg
aam
push
xchg
fdiv
sub
cdq
cmp
dec
adc
pop
push
mov
xchg
mov
js
imul
dec
cmp
jge
popa
pop
(bad)
mov
push
push
ret
jbe
jnp
cmc
or
lods
or
jo
jb
adc
mov
cmps
pop
outs
mov
test
out
adc
jecxz
loope
sahf
mov
sbb
pop
movs
int
push
xchg
mov
xchg
stos
cld
adc
sub
add
popa
fist
adc
sub
fisubr
ror
(bad)
cmp
fcomip
cmp
mov
push
aas
inc
adc
jnp
nop
mov
add
or
or
scas
xor
test
add
pop
mov
daa
sbb
movs
pop
test
xlat
dec
cmp
loopne
fwait
std
dec
inc
sbb
sbb
stos
pop
fistp
or
aas
fidiv
mov
nop
and
push
lahf
enter
rcl
push
mov
test
sbb
test
cdq
lea
inc
pop
popa
loope
xchg
shr
cld
adc
mov
(bad)
jno
cli
and
push
mov
dec
into
push
inc
push
xchg
leave
test
sbb
(bad)
retf
shl
mov
push
int3
xchg
mov
(bad)
leave
push
in
fadd
fnstsw
outs
xlat
dec
add
scas
adc
ins
loope
mov
gs
hlt
xor
jmp
cmp
das
mov
mov
(bad)
iret
or
mov
jno
adc
push
rcl
cli
sub
sahf
ss
lahf
jp
mov
sti
(bad)
lahf
imul
cld
mov
cmc
cmp
mov
out
push
ja
inc
cmc
jmp
aas
(bad)
cmps
call
not
mov
fnclex
dec
or
shl
fild
jge
mov
add
xchg
cwde
(bad)
or
dec
loope
outs
adc
adc
push
out
lds
fldl2e
sub
(bad)
call
push
test
xchg
call
pushf
or
(bad)
cmps
daa
sub
es
jge
jno
push
xor
xlat
es
sahf
pop
and
aad
dec
clc
jns
jno
jg
in
jns
fxch
push
pop
les
mov
leave
sti
popf
repnz
aaa
jge
scas
div
call
add
mov
or
fidiv
inc
cmp
add
es
(bad)
(bad)
hlt
or
mov
add
cmp
or
mul
xchg
lods
fcom
icebp
lock
inc
mov
ss
sub
mov
cmp
mov
dec
loope
push
icebp
mov
xchg
rol
shl
lods
jl
pop
out
fisttp
and
adc
cmp
ficom
inc
fnstcw
dec
loope
adc
fimul
imul
pop
(bad)
(bad)
(bad)
xchg
pop
and
sub
push
xchg
inc
(bad)
cmp
inc
mov
inc
adc
jnp
aas
lds
into
pushf
(bad)
mov
push
jmp
movs
outs
pushf
and
mov
adc
mov
test
mov
mov
pop
inc
jns
outs
dec
or
pop
sbb
fadd
adc
ret
xlat
sbb
jb
gs
out
ss
lea
add
out
arpl
push
mov
loope
rcl
loope
pop
leave
fmul
clc
and
cmp
cs
dec
push
sbb
push
daa
fs
retf
cmp
leave
cmp
jp
pusha
xchg
ret
ins
add
mov
inc
pop
push
lds
fnstcw
sub
sbb
add
jns
fcom
push
mov
jne
sbb
pop
mov
pusha
xchg
iret
mov
mov
mov
and
dec
sahf
pop
shl
pop
sahf
in
mov
cmp
jbe
out
sahf
xor
js
data16
test
push
out
into
les
mov
xchg
or
test
sbb
sti
mov
jno
pushf
leave
jl
push
jl
or
scas
mov
cld
out
pop
out
xor
imul
cld
(bad)
jge
movs
fs
fdivr
call
inc
aad
call
mov
pop
mov
lea
sub
mov
adc
xor
sbb
inc
push
push
sti
popf
cmps
cli
jmp
sbb
call
aam
fisub
or
mov
rcr
retf
je
out
push
mov
addr16
fcmovb
cmps
out
into
cwde
mov
ds
and
jno
jmp
xor
jb
out
fcom
shl
cmps
or
xchg
cwde
add
repz
xchg
push
push
inc
loope
dec
dec
retf
xchg
scas
loopne
sbb
push
xchg
sbb
pop
js
or
out
ret
pop
push
fcomp
pop
enter
scas
fimul
mov
mov
or
mov
mov
fidivr
sub
inc
hlt
icebp
push
cwde
div
mov
adc
cmp
data16
sub
stc
(bad)
mov
enter
or
add
mov
fs
aam
mov
pop
mov
and
inc
inc
inc
pop
fs
xchg
popf
xor
call
or
aad
push
(bad)
mov
dec
xlat
jne
pop
pop
mov
stc
and
fstp
enter
adc
lea
mov
xor
sbb
xor
jo
xchg
fcomp
mov
jle
lea
mov
std
test
jbe
(bad)
fisttp
dec
jmp
scas
lea
test
pop
dec
(bad)
cmp
jbe
mov
jb
adc
movs
and
mov
mov
push
lods
cld
in
or
into
(bad)
xchg
popf
fs
ret
lahf
ja
jnp
in
daa
mov
or
int
dec
mov
cs
push
mov
lods
gs
into
(bad)
scas
pop
dec
dec
movs
dec
imul
(bad)
sti
in
std
out
jae
pop
mov
scas
ror
jmp
imul
ins
jl
packssdw
jp
xor
add
inc
clc
dec
stos
cmp
popf
jne
cmp
iret
jbe
pop
cmp
dec
into
lods
jmp
xor
(bad)
sar
aaa
rcl
cmps
adc
fwait
int
sbb
in
jae
xor
stc
sub
int
js
adc
stos
mov
cli
fcomp
jne
xor
fnstenv
stos
aaa
cmps
mov
jl
leave
pushf
out
movs
lock
mov
mov
aam
outs
sti
xchg
fist
pop
sbb
xchg
in
xchg
cdq
out
outs
mov
aam
into
cmp
outs
xchg
or
xchg
add
inc
rol
jns
and
loopne
mov
imul
lock
mov
nop
pushf
mov
clc
movs
loop
add
pop
mov
je
paddsw
push
and
ret
cmp
jle
cmp
push
and
mov
add
jae
loop
ss
jne
popf
and
popa
ins
lahf
outs
fs
jnp
cmp
adc
ss
call
mov
mov
dec
cmp
movs
aam
cmc
mov
jle
add
inc
stos
push
sub
add
jns
xchg
scas
mov
cmp
dec
scas
or
xor
das
inc
or
add
sbb
xchg
ins
shr
stos
fmul
mov
ret
popf
mov
jne
(bad)
or
mov
dec
pop
and
in
dec
mov
mov
call
popa
ins
div
mov
push
inc
push
(bad)
jg
inc
into
shl
out
(bad)
aad
xchg
and
xor
das
fbstp
lods
mov
sub
jmp
loope
sub
adc
hlt
jns
adc
or
repnz
mov
jp
scas
jmp
mov
out
fs
sbb
gs
xchg
lods
in
call
bound
pop
cs
pop
movs
aaa
inc
imul
add
gs
ds
mov
xchg
int
mov
mov
dec
or
sub
retf
jnp
ret
push
or
fucomi
push
dec
jg
cmp
test
fisub
mov
or
out
inc
fwait
movs
push
mov
outs
enter
jmp
dec
cmps
mov
imul
fwait
cmps
xchg
gs
cmps
ss
lods
push
adc
cmp
lods
test
inc
xor
mov
xchg
xor
push
mov
mov
leave
loop
out
rcl
cwde
test
(bad)
enter
dec
mov
std
sub
aaa
mov
scas
sbb
cmp
shl
ror
push
loop
(bad)
daa
repnz
add
inc
mov
mov
mov
push
arpl
(bad)
mov
(bad)
pop
cs
mov
adc
mov
mov
test
xchg
test
lahf
jns
push
cdq
push
pop
out
fldenv
stos
pop
sbb
pop
add
pop
lea
fwait
aam
and
cmp
mov
inc
pop
shl
xadd
pop
lds
mov
cmp
mul
test
stc
std
dec
push
mov
inc
push
dec
inc
pop
(bad)
leave
lock
jl
out
sbb
sub
adc
int3
and
shl
xor
sub
loope
pop
xlat
inc
lods
sub
dec
fs
leave
add
sti
aam
cmp
and
daa
xor
xor
mov
clc
out
push
mov
and
push
cmps
or
ja
xchg
add
fistp
sbb
cli
clc
fst
lock
shr
dec
cli
push
xor
sbb
punpckhdq
loop
jecxz
add
sub
xchg
add
dec
fcomp
xchg
dec
clc
cmp
xor
add
cdq
jecxz
imul
xchg
les
lahf
(bad)
or
loopne
cmc
mov
mov
bound
rol
and
jle
call
and
and
(bad)
push
push
xchg
add
jle
(bad)
int3
(bad)
inc
inc
fwait
jno
mov
adc
fisub
cmps
dec
pop
mov
push
iret
and
arpl
mov
or
mov
mov
imul
or
push
sti
fbld
dec
or
dec
xchg
cmps
aad
cdq
dec
mov
push
retfw
and
sub
ins
dec
cmp
inc
das
pop
ror
jb
jae
stos
mov
jae
mov
ins
dec
cmp
rcr
dec
in
adc
or
or
and
and
jge
in
pop
rcl
mov
mov
fdivr
dec
arpl
repnz
pop
jp
ret
sbb
clc
sar
es
cmps
pop
fistp
fnstenv
(bad)
pop
and
mov
or
xchg
sahf
scas
xchg
je
les
mov
retf
mov
lods
jmp
jae
call
out
(bad)
jle
jmp
and
into
shl
dec
push
movs
iret
cdq
fcom
push
jge
shl
(bad)
mov
xor
pushf
pop
cmp
pop
shr
(bad)
jne
adc
and
ja
jo
(bad)
and
ja
hlt
ret
sahf
xchg
mov
and
gs
cld
xlat
call
cmp
call
jno
scas
push
and
or
neg
mov
and
shl
cmp
ss
pop
out
add
pop
shl
scas
pop
call
ss
ja
sbb
adc
cmc
iret
fwait
jae
sub
cmps
push
scas
mov
xchg
inc
imul
cmp
test
mov
sub
or
cmp
imul
add
mul
and
add
aam
mov
mov
dec
aam
pop
ret
cmp
jle
add
push
(bad)
xlat
je
fbld
fwait
jp
das
push
or
fimul
xor
imul
cmp
adc
stc
xchg
adc
inc
dec
(bad)
movs
jp
hlt
ins
mov
ja
xchg
add
cmp
pop
or
fmul
sub
sbb
and
push
adc
ins
scas
lods
jno
jg
push
shl
cwde
outs
inc
adc
dec
push
mov
jmp
jle
repz
mov
aad
in
jg
xchg
aam
bound
inc
fsubr
adc
fs
push
jno
shl
out
(bad)
jp
cmp
rcl
out
add
out
imul
mov
adc
mov
push
mov
es
rcr
xor
or
cwde
or
jmp
jns
xor
push
movs
or
push
push
(bad)
jae
in
lahf
icebp
fsubr
fdivr
or
push
jmp
addr16
dec
loope
or
mov
popf
js
push
loop
call
xor
push
mov
test
retf
(bad)
sbb
test
ins
adc
and
in
in
rcl
or
sar
mov
push
into
daa
or
push
mov
mov
addr16
xlat
pop
and
jbe
jp
inc
sub
dec
xor
jle
inc
push
add
pop
sbb
push
data16
push
sti
fst
ds
xor
fs
xchg
cmp
int
div
ret
es
push
jge
mov
stc
rcr
inc
cmp
ret
xchg
dec
xchg
add
fs
and
dec
fnstcw
pop
call
rol
push
push
xor
pop
mov
(bad)
inc
rol
add
mov
lods
ficomp
in
sbb
outs
push
jne
stc
shr
xor
sbb
mov
scas
jb
aaa
data16
or
ins
ret
xchg
and
or
sar
in
cmps
in
arpl
fisub
xor
dec
jecxz
jb
and
jl
sub
inc
loope
sub
or
ss
mov
sbb
adc
inc
jmp
mov
in
xor
xchg
adc
push
adc
sti
pusha
pop
jecxz
lods
(bad)
push
ins
push
sub
stc
clc
xor
js
ins
sbb
inc
rol
adc
popf
ror
(bad)
popf
xchg
jmp
(bad)
mov
sbb
adc
(bad)
jge
pop
jecxz
popa
mov
inc
cli
lods
mov
pop
neg
xor
pop
scas
inc
mov
push
xor
outs
popf
test
clc
jns
call
mov
jmp
fldcw
push
pop
mov
inc
clc
sub
add
sahf
mov
hlt
xor
or
mov
arpl
sahf
loop
dec
and
mov
jecxz
inc
int3
sbb
imul
push
retf
jge
das
push
lea
sub
and
xor
stc
les
inc
mov
fld
lods
pop
fadd
mov
das
movs
mov
mov
lock
jmp
push
push
repz
sub
xchg
ins
fdivr
pop
adc
jae
shl
inc
fcmovbe
jmp
xchg
fbstp
and
fsub
inc
(bad)
enter
and
cld
adc
pop
and
or
sahf
ret
dec
mov
adc
(bad)
cmps
jp
ror
sbb
daa
xor
jmp
aad
aas
sbb
mov
push
mov
dec
push
dec
ret
and
mov
dec
out
outs
in
mov
cdq
jmp
push
imul
icebp
cmp
sbb
jne
sti
enter
mov
ds
pusha
shr
adc
std
push
jg
je
fdivr
int
jp
pop
mov
push
add
pop
xchg
add
jle
jecxz
movs
dec
add
xchg
sbb
pop
popf
gs
hlt
mov
dec
add
hlt
mov
lea
and
(bad)
push
adc
or
and
mov
out
sar
imul
inc
pop
hlt
aas
sti
ins
aaa
ins
cld
cwde
je
inc
jg
je
dec
fiadd
ins
out
scas
hlt
mov
pusha
jp
mov
mov
or
dec
jge
bound
inc
dec
dec
cwde
mov
xlat
jp
add
cmp
sti
mov
mov
cmp
mul
sub
fcomp
xor
sub
cmp
fadd
xchg
add
and
adc
nop
(bad)
adc
push
and
push
and
out
ins
(bad)
in
xor
test
sbb
(bad)
mov
inc
adc
stos
mov
inc
mov
jg
sub
mov
mov
mov
rol
cli
inc
mov
(bad)
fs
icebp
pop
(bad)
mov
mov
and
inc
ficom
push
leave
repz
cmps
push
lds
aas
mov
pusha
es
shl
mov
add
stos
inc
cmp
repnz
sahf
mov
mov
ins
lock
fld
sbb
mov
fs
popf
shl
ret
loopne
gs
sbb
dec
cmc
and
mov
test
mov
aam
fld
inc
mov
lea
gs
mov
cwde
into
push
scas
cmc
inc
nop
in
aam
imul
dec
lods
mov
ja
bound
mov
bound
je
add
push
and
sbb
dec
add
cs
jecxz
out
loop
push
mov
(bad)
aad
cs
das
int
aas
loope
lods
mov
je
fcom
dec
sbb
jb
inc
jmp
or
cld
cmp
add
sti
xchg
loopne
stos
fild
jmp
jmp
out
ds
jno
cmps
in
scas
add
pop
adc
mov
daa
cmc
inc
cwde
jae
les
push
cmp
clc
outs
push
clc
jge
sub
push
jae
and
and
xchg
psubd
mov
in
cmp
xor
adc
aam
push
add
and
arpl
ds
cmp
scas
arpl
movs
dec
inc
iret
ins
inc
std
outs
call
mov
mov
pop
push
mov
cmc
scas
pop
fcom
push
xor
and
arpl
inc
fcomp
outs
imul
jle
imul
jb
push
call
or
ja
adc
push
dec
or
not
nop
fs
stc
jbe
clc
dec
je
sub
adc
dec
data16
mov
sbb
inc
popa
lods
lods
cmp
fiadd
rcr
aad
xchg
cmp
cmps
adc
pop
inc
push
sub
ins
aad
xlat
fsubr
aad
lds
fnsave
outs
xchg
xchg
fiadd
push
cmps
outs
push
xor
add
test
rcl
mov
adc
loope
in
movs
enter
inc
div
mov
dec
mov
into
sub
rcr
bound
mov
sti
cmp
mov
jno
popa
gs
stc
iret
xor
loope
sbb
aam
push
aam
push
adc
pop
sub
mov
fistp
add
push
icebp
push
(bad)
(bad)
je
arpl
jge
sar
frstor
xchg
sbb
push
dec
inc
mov
movs
ror
and
mov
call
retf
inc
mov
mov
adc
cli
cmp
je
sub
pop
loopne
out
jo
inc
sar
out
loop
add
add
inc
or
(bad)
inc
je
lock
cmp
rcr
arpl
jb
xlat
sub
pop
clc
stc
cmps
and
retf
out
out
shr
arpl
scas
mov
adc
inc
adc
xor
mov
outs
xchg
xchg
test
retf
push
cmp
aad
mov
pushf
imul
or
scas
mov
mov
jb
pusha
or
push
gs
sbb
mov
xor
push
push
stos
shl
loop
call
xchg
push
rcr
mov
das
inc
aaa
and
cmp
ror
mov
push
push
sbb
nop
mov
in
cwde
loop
mov
mov
jl
sbb
or
std
inc
mov
into
inc
icebp
ret
adc
stos
push
or
dec
adc
sahf
jmp
sub
xor
sbb
ret
in
outs
sub
cwde
sub
inc
adc
pop
movs
fmulp
into
inc
inc
inc
push
fwait
mov
je
mov
jl
mov
inc
lahf
mov
clc
mov
popf
mov
mov
ret
dec
sbb
std
daa
cmp
adc
mov
test
(bad)
aas
mov
adc
sar
jmp
mov
jne
jle
in
xlat
add
pop
xor
jae
and
mov
ins
or
cmp
mov
push
jg
aad
jecxz
outs
adc
jnp
outs
ja
or
add
scas
add
clc
mov
in
or
and
mul
pushf
adc
stos
lds
test
or
xchg
jns
pop
mov
movd
pop
out
shr
pop
sti
cmps
stos
push
in
dec
fistp
sub
add
sar
mov
dec
stos
nop
daa
xor
cmp
test
cli
xor
jg
(bad)
(bad)
xchg
icebp
mov
pop
push
sub
xor
adc
push
mov
push
loopne
dec
in
mov
lds
in
popa
imul
popf
int3
jae
jnp
inc
into
add
out
sahf
dec
fwait
xor
push
add
ds
push
pop
jns
sub
imul
or
jo
dec
pop
xchg
xor
xchg
and
dec
push
mov
ds
iret
and
pushf
stos
sub
clts
sbb
mov
and
and
hlt
fisubr
fld
sar
out
add
sub
aas
xor
stos
and
ret
(bad)
and
repz
in
movs
sub
or
add
xchg
sahf
rep
jno
cmp
pop
inc
cdq
dec
loope
call
imul
dec
inc
jno
in
in
int
and
cdq
mov
add
aas
mov
lahf
aam
jbe
and
jp
adc
fldcw
mov
ds
outs
pop
pop
bound
lea
pushf
f2xm1
jb
out
test
add
pop
(bad)
adc
shl
(bad)
sbb
call
pop
sub
adc
imul
gs
aam
push
push
dec
repnz
mov
sbb
xchg
dec
push
sahf
neg
pusha
xchg
fisubr
mov
sub
bnd
jb
in
rcl
fcomp
pop
push
cli
adc
sbb
sti
sbb
add
pop
and
gs
jecxz
mov
inc
and
lods
outs
pushf
xchg
dec
push
mov
(bad)
mov
arpl
adc
sub
out
cmp
das
sub
or
aam
inc
push
mov
mov
icebp
(bad)
cmp
inc
in
push
popa
pushf
pushf
(bad)
scas
(bad)
xchg
imul
loop
sahf
cld
and
mov
xor
sahf
clc
jb
arpl
cmp
mov
push
mov
sar
mov
aad
jg
lods
mov
inc
js
push
xchg
jmp
cmc
mov
jg
inc
mov
push
sub
xchg
adc
jne
(bad)
jbe
in
sti
push
add
dec
mov
sbb
and
sbb
and
and
dec
pop
push
xchg
pop
aaa
dec
mov
cmps
fwait
nop
cmp
sbb
nop
retf
or
loopne
cmp
cmps
adc
adc
out
nop
sbb
adc
sti
jl
fsubrp
pop
test
push
int3
jge
mov
jmp
dec
(bad)
sub
sbb
in
ss
(bad)
popa
inc
mov
cmp
mov
or
mov
cdq
pop
or
mov
leave
jb
jbe
mov
or
inc
sti
add
shl
pop
or
add
fistp
test
adc
xor
or
sbb
aad
adc
icebp
jae
sub
sub
mov
mov
sbb
in
mov
lock
lock
mov
pop
and
cmp
ins
adc
xor
loopne
js
test
add
fisubr
jl
push
cmps
jg
aaa
xchg
or
jb
add
sbb
xchg
mov
sti
jmp
xchg
push
shr
push
retf
in
mov
pop
lahf
dec
mov
retf
fisttp
mov
jecxz
fidivr
push
retf
adc
out
loope
mov
xchg
pop
jle
jp
xlat
push
sbb
ret
jns
pop
cmp
fidivr
mov
pop
mov
cmps
sbb
out
sti
in
shr
ss
leave
es
mov
call
jmp
sbb
push
ficom
mov
pop
mov
inc
or
test
or
mov
dec
daa
pusha
loop
test
icebp
shl
shl
fidivr
movs
cmp
mov
mov
test
jge
mov
jbe
sahf
xchg
cmps
shl
or
call
stos
aaa
rol
js
out
and
jb
das
xor
jmp
call
ret
call
lahf
jmp
test
dec
adc
xchg
xor
jmp
sbb
sub
out
test
hlt
sub
(bad)
in
mov
lods
rcl
das
add
cs
push
mov
ins
cdq
push
pop
add
cld
jne
push
sti
xchg
or
retf
adc
fld
cmp
cmp
mov
clc
pop
jns
sti
loope
popf
mov
(bad)
in
xchg
fbstp
rcl
sub
shr
push
(bad)
mov
pop
neg
(bad)
cdq
jle
xchg
stos
push
lahf
mov
pop
fisubr
jne
(bad)
sub
stc
jne
psrad
test
arpl
pop
aad
in
or
adc
mov
lock
lods
and
cmp
push
jbe
or
fwait
ret
xor
sar
movs
cmp
jb
xor
xor
sub
jb
sub
mov
rcl
or
shl
sub
lea
call
add
mov
ds
fisub
aaa
in
inc
push
retf
pop
jbe
pop
jbe
add
and
cmp
aam
mov
iret
and
lock
add
int3
ja
cmps
push
mov
call
cmp
addr16
mov
imul
clc
pop
icebp
push
and
test
jo
push
daa
xchg
lea
and
test
movs
add
pop
xchg
sub
xchg
sbb
inc
push
les
inc
int
xchg
hlt
cmp
(bad)
rcr
jae
jns
xchg
xchg
or
mov
cmp
sub
js
mov
lahf
mov
in
retf
nop
jae
or
pop
js
cmp
add
loopne
mov
push
sub
mov
inc
shl
repnz
add
out
lds
push
jecxz
or
inc
gs
pop
cmps
mov
mov
mov
and
and
cmp
fild
or
and
daa
(bad)
je
stos
cmp
call
sub
cmp
push
(bad)
cdq
jns
pop
jb
jecxz
ds
(bad)
jb
xor
pop
hlt
aaa
ins
ds
mov
dec
out
jo
out
ins
push
and
ret
mov
jle
mov
push
mov
lods
dec
retf
out
into
movs
adc
push
mov
push
xchg
jge
mov
popa
cld
lods
jmp
stos
arpl
das
retf
jmp
dec
fwait
in
test
inc
push
(bad)
cmp
jmp
xor
push
btc
push
push
lea
xlat
fisttp
das
pop
pop
xchg
loopne
dec
xchg
cld
(bad)
dec
adc
mov
std
iret
push
push
push
or
inc
push
jmp
(bad)
in
sub
push
sub
bound
int
sub
scas
mov
push
outs
jb
xor
and
aas
enter
inc
call
jno
push
and
xor
enter
int
mov
adc
xchg
cmc
shl
pop
ins
(bad)
jmp
popa
mov
aas
pop
jo
pusha
and
mov
cli
jo
mov
out
sbb
sub
ficom
clc
gs
xor
adc
dec
push
es
rol
in
adc
xchg
fistp
or
fidivr
jp
test
cmp
cdq
ds
sahf
dec
clc
mov
fmulp
call
(bad)
pop
mov
repz
and
xor
push
xchg
mov
and
and
xchg
or
repnz
mov
popf
jae
test
push
dec
cmp
and
inc
pop
cmc
cld
aaa
out
inc
push
outs
mov
adc
or
push
pop
push
(bad)
pusha
imul
xor
push
push
pop
add
dec
sub
cmp
je
call
cmp
dec
cmp
or
adc
popa
stos
inc
fdiv
mov
nop
sub
push
adc
test
inc
or
jecxz
mov
call
repnz
cmp
push
jle
jge
neg
jle
xor
out
jmp
inc
icebp
cdq
xchg
dec
xor
retf
xchg
jo
dec
outs
std
adc
cwde
xor
out
scas
popa
jmp
gs
out
pushf
mov
inc
fcomp
les
sbb
mov
test
in
mov
sbb
daa
mov
xor
enter
dec
cmp
or
int
mov
and
push
jb
xlat
dec
jo
sbb
cmp
and
int3
ins
out
je
jno
dec
sbb
nop
or
(bad)
and
ja
dec
xchg
(bad)
cmc
jl
jns
or
push
repz
ret
shl
mov
fimul
test
xor
inc
cmp
cld
movs
dec
cld
movs
mov
jg
sbb
call
cmps
inc
pop
out
xchg
mov
test
pop
sbb
inc
xchg
mov
adc
mov
out
daa
nop
pop
clc
add
pushf
xchg
ret
xchg
lods
jge
dec
repnz
rol
das
xchg
lea
scas
call
fwait
das
call
ja
xchg
outs
xor
mov
(bad)
mov
dec
cmp
loope
pop
cdq
and
pop
inc
pop
jns
(bad)
out
sbb
mov
stos
and
mov
pop
lea
xor
mov
pushf
cmp
adc
leave
inc
lds
aas
add
mov
es
inc
popa
nop
mov
pop
mov
xchg
aam
add
test
fimul
shufps
cmp
pusha
in
cvtdq2ps
imul
and
pushf
sub
dec
push
cld
in
ret
jecxz
movs
scas
pop
add
sbb
push
mov
jp
mov
fisttp
cmp
(bad)
cli
hlt
dec
add
or
inc
popa
int
sbb
push
jae
sti
imul
fsubrp
test
sti
aad
mov
cmc
cmp
xor
bound
sub
fidivr
push
pop
push
pop
loop
inc
fbstp
aad
xchg
mov
xchg
outs
inc
scas
js
add
fwait
xchg
inc
ud1
test
pop
das
lods
imul
adc
inc
mov
icebp
icebp
sbb
int3
jecxz
ficomp
js
push
pop
jl
popa
lds
dec
pop
inc
mov
jp
push
dec
aad
lea
cdq
push
push
sbb
ja
mov
outs
cmp
sti
xchg
(bad)
sub
mov
call
jge
js
jle
push
out
outs
in
jno
push
stc
push
lods
mov
daa
cmp
daa
cmp
or
inc
jns
mov
loopne
push
xchg
add
cmp
fwait
pcmpeqb
fild
imul
xchg
gs
stc
mov
and
or
cmp
sbb
pop
test
daa
jmp
and
movs
and
scas
sub
loop
movs
inc
daa
mov
jmp
or
ins
aaa
cld
sbb
or
or
cmps
add
hlt
mov
in
mov
scas
pop
mov
mov
ror
mov
mov
pop
add
mov
(bad)
(bad)
sbb
dec
aas
mov
mov
fidivr
add
loop
daa
mov
push
movs
rcl
mov
call
stos
cmp
in
fsubr
dec
cmp
ss
retf
test
jbe
inc
ins
ret
inc
fnstcw
or
jo
mov
enter
hlt
retf
mov
and
inc
jno
stos
inc
push
into
in
das
popf
jb
(bad)
mov
jle
pusha
push
or
add
retf
aaa
loope
shr
(bad)
or
and
cli
pop
aaa
stc
mov
adc
mov
stos
ds
iret
rcr
aaa
test
push
ds
push
push
cdq
aam
cdq
je
(bad)
ss
sbb
and
xchg
fmul
fdiv
xchg
push
(bad)
fmul
mov
inc
sbb
sub
pusha
retf
xor
xchg
into
or
test
enter
mov
add
into
into
mov
loop
push
inc
xor
push
add
cmp
pop
leave
sub
mov
sub
or
imul
les
or
cwde
mov
sub
data16
xchg
or
mov
icebp
mov
or
rcl
push
xor
pop
(bad)
ins
sub
push
push
sub
call
fiadd
push
push
(bad)
in
sub
jns
inc
mov
pop
lock
enter
push
push
dec
int3
popf
push
adc
outs
mov
ret
sub
dec
pop
mov
ins
mov
dec
ja
sub
rcl
addr16
lock
or
shr
jnp
clc
clc
test
sbb
mov
xchg
mov
int
(bad)
sbb
xchg
or
mov
dec
mov
(bad)
mov
push
sbb
cmp
or
dec
test
push
cmps
je
cmp
outs
xchg
pop
ins
aam
not
push
les
int
data16
push
dec
(bad)
ja
std
add
cmc
mov
push
pop
cmp
pushf
push
sub
adc
icebp
loopne
sub
jo
jecxz
push
and
dec
pop
xor
fsubp
xor
rcl
sbb
xchg
mov
xchg
sbb
pusha
test
mov
dec
test
je
cvttps2pi
and
adc
fldcw
jbe
daa
pop
pop
or
push
rcr
outs
add
mov
and
xor
fisubr
into
imul
mov
imul
inc
sub
ror
in
mov
(bad)
test
push
jns
stos
jge
jecxz
cs
div
daa
push
jle
in
jns
mul
mov
sub
sar
xchg
mov
push
dec
fdivr
leave
adc
retf
pop
inc
push
fcomp
adc
nop
push
loop
xor
xchg
push
ja
cmp
pop
cmp
and
mov
scas
push
out
push
xchg
jnp
aaa
rol
push
xchg
jne
mov
inc
in
sbb
mov
data16
xchg
push
sbb
pop
es
js
fcmovnb
adc
add
in
dec
adc
cmp
jnp
fstp
dec
fwait
pop
les
pop
sub
ret
arpl
push
and
test
fmul
mov
movs
fbld
ds
and
jno
dec
mov
je
mov
sub
js
call
outs
arpl
daa
mov
xchg
sub
mov
sub
cwde
push
or
std
aam
adc
hlt
xchg
adc
xor
cmp
xor
mov
aas
add
push
cdq
or
es
inc
ror
mov
retf
ja
pop
add
outs
xor
sbb
sbb
inc
add
(bad)
pminsw
xchg
out
mov
push
cmp
mov
mov
xchg
pop
retf
sbb
push
cmps
aas
xor
(bad)
pop
iret
(bad)
out
add
add
mov
stos
mov
(bad)
js
add
scas
lahf
stos
mov
(bad)
xchg
mov
mov
inc
dec
mov
(bad)
and
cdq
pop
imul
mov
fist
(bad)
jg
pushf
inc
add
ins
cld
ror
adc
push
xor
or
daa
mov
pushf
mov
mov
push
mov
fwait
rol
or
sti
mov
sbb
jbe
cmp
mov
call
cmc
outs
sub
std
or
icebp
sahf
je
fs
rcl
loopne
(bad)
mov
xor
or
jno
repz
sti
mov
rcr
pusha
mov
stos
pop
sahf
and
mov
xchg
mov
scas
and
rcr
imul
push
(bad)
outs
call
adc
push
loope
pop
mov
loopne
xchg
outs
pop
movs
pop
mov
stos
sbb
jmp
xor
mov
mov
in
outs
push
stos
pop
cli
add
out
dec
jbe
mov
stc
and
movs
pop
inc
repz
jp
or
inc
das
popf
inc
xchg
add
mov
pop
dec
ins
js
popf
mov
(bad)
call
or
ds
jg
pop
sbb
pop
inc
sbb
(bad)
pop
cmp
push
imul
mov
pop
int3
xor
stos
inc
xchg
(bad)
push
mov
cmp
aas
outs
(bad)
movs
xor
nop
sub
sbb
fdivr
(bad)
mov
push
xlat
ffree
and
fild
add
cmp
mov
pop
pop
fs
rol
cmp
push
sub
xor
repz
push
mov
es
add
es
ret
lock
stos
shl
mov
or
js
mov
and
jne
in
dec
mov
push
loopne
(bad)
cmc
inc
dec
push
xor
shl
add
(bad)
cmp
adc
mov
popa
std
in
inc
not
dec
and
movs
sbb
pop
shr
cdq
movs
adc
mov
mov
adc
sar
outs
sar
xor
in
ret
stc
das
cmp
cmp
dec
push
push
stos
inc
pop
inc
or
xchg
cmp
push
jmp
xor
and
mul
ja
or
sbb
mov
shl
cmp
stos
sahf
and
pushf
mov
scas
ins
icebp
inc
dec
xchg
or
int
rcl
cmp
int3
cmp
mov
mov
movs
jle
pop
xlat
lahf
sbb
dec
enter
mov
dec
xor
pop
or
nop
sbb
mov
in
push
xchg
push
sbb
adc
arpl
mov
jnp
cmp
cmc
rcl
dec
movs
mov
repnz
je
les
add
jmp
xchg
(bad)
hlt
std
mov
or
push
rcpps
icebp
push
lods
dec
shld
lods
dec
xor
pop
jp
or
lods
xlat
shr
jl
scas
jb
cs
ret
and
and
push
sbb
shl
pop
and
sub
jnp
fidivr
cwde
jnp
jnp
ins
and
vmptrst
repz
or
push
sar
and
xchg
jecxz
cmp
shl
dec
cmps
add
ficomp
pop
addr16
sub
mov
call
xor
pop
inc
cmc
in
lods
inc
push
dec
push
dec
push
push
push
dec
repnz
ss
cs
mov
add
bound
adc
push
ret
sti
push
pop
add
jge
fidivr
push
je
cmp
movs
test
fcom
mov
mov
pop
push
push
fidiv
ror
lods
js
fadd
popa
cwde
or
je
leave
loop
pop
mov
sbb
inc
push
sbb
mov
lahf
xchg
mov
cmp
adc
inc
jmp
xor
in
cmp
xor
fst
or
jo
and
bound
add
jne
sub
enter
test
sub
mov
mov
inc
das
popa
mov
arpl
mov
pop
push
and
stc
mov
cld
mov
jnp
mov
xchg
outs
or
adc
sti
jnp
push
mov
stos
adc
sbb
mov
stc
inc
mov
push
sbb
dec
or
outs
(bad)
mov
adc
push
jmp
inc
(bad)
ins
in
dec
push
add
or
pop
stos
sti
push
dec
xchg
cmc
test
push
inc
loop
mov
mov
pop
lods
ficomp
push
push
add
mov
(bad)
hlt
cmc
push
sbb
ficom
out
popf
ds
jmp
repnz
dec
xor
ja
adc
fiadd
aaa
mov
jge
mov
or
(bad)
loope
push
xchg
mov
shl
mov
xchg
jecxz
mov
ss
and
int
pop
adc
dec
retf
xor
jo
cmp
pop
mov
scas
dec
and
stos
stc
movs
add
dec
push
outs
jg
mov
and
pop
aaa
in
int
ret
bound
int3
mov
push
movs
dec
das
in
adc
fmul
jmp
dec
adc
enter
into
cdq
xor
adc
outs
test
jae
leave
sbb
dec
mov
mov
or
movs
xchg
cmps
mov
sbb
cmp
xor
hlt
arpl
xchg
loopne
fwait
retf
sub
jne
movs
pop
data16
xor
test
lock
inc
mov
es
lods
dec
lock
fs
(bad)
push
mov
xor
push
rcl
dec
xor
ret
or
inc
and
icebp
pop
js
pop
(bad)
jns
(bad)
loop
ins
mov
test
into
cmp
mov
mov
or
inc
stos
les
pop
in
test
and
sub
mov
dec
push
scas
loope
xchg
mov
adc
rcr
pop
(bad)
jmp
lds
sub
mov
pop
cli
or
mov
aad
mov
fs
fcmovnbe
xchg
fild
daa
and
adc
daa
imul
cld
add
test
test
lock
ret
shrd
imul
out
dec
and
xor
gs
add
cmc
stos
cmp
xchg
cld
test
dec
vsqrtpd
xchg
xchg
loop
mov
imul
mov
out
ds
jl
(bad)
fisttp
mov
jg
pop
adc
(bad)
adc
sti
mov
daa
and
mov
pop
std
or
xor
sbb
jg
in
scas
or
outs
fwait
bound
cmp
shl
fcom
stos
outs
inc
jecxz
leave
fnsave
test
add
inc
jno
xlat
cmp
popa
inc
and
mov
adc
push
push
leave
loope
push
mov
loopne
jo
pop
inc
pop
daa
out
loopne
(bad)
(bad)
daa
out
fsubr
mov
fdiv
xor
out
aad
or
fld
jae
inc
gs
(bad)
loop
pop
das
adc
pop
(bad)
movs
sbb
repnz
push
out
mov
aam
ins
cmc
or
dec
cmp
mov
xchg
pop
add
mov
in
push
daa
sub
xchg
mov
jmp
pop
push
dec
movs
fmul
shl
jmp
cmp
aaa
loopne
cld
xor
or
std
jp
sbb
cmc
mov
jg
mov
pop
cwde
and
loop
stos
sbb
dec
inc
dec
test
pop
cmp
inc
jecxz
hlt
xchg
ror
cmp
test
cmps
fs
inc
ss
mov
imul
iret
sub
push
and
fistp
pop
icebp
ins
inc
mov
sub
div
shl
push
or
ss
call
test
jecxz
(bad)
leave
imul
sbb
jge
push
sbb
inc
mov
pop
sahf
popa
lods
or
and
cmp
jg
jae
mov
stos
das
dec
fst
push
mov
iret
out
shl
push
and
and
jge
and
mov
int3
aad
in
inc
mov
in
addr16
pushf
cdq
or
and
hlt
mov
aas
xchg
add
daa
and
jmp
jmp
dec
clc
loope
jne
call
mov
imul
iret
fist
jle
ins
iret
sub
neg
ret
ret
add
xor
(bad)
xor
cwde
or
xchg
ja
pop
(bad)
aam
mov
fild
movs
stos
sbb
in
dec
mov
cmp
not
mov
add
outs
mov
sub
cmps
int3
or
dec
ins
das
dec
test
mov
popf
popa
cdq
fnsave
dec
std
and
and
outs
sbb
mov
adc
fist
add
(bad)
fwait
and
push
fldcw
int
rol
not
or
mov
xor
pop
fstp
aas
mov
jmp
pop
mov
cmp
icebp
shl
pop
out
test
xor
or
dec
(bad)
sahf
scas
push
in
icebp
xchg
aad
and
into
movs
fstp
inc
outs
pop
arpl
jmp
stc
and
fistp
adc
cli
cmp
jp
dec
mov
push
mov
fwait
(bad)
xlat
dec
je
test
retf
xor
(bad)
or
and
jo
cmps
and
not
xchg
push
aaa
jns
lods
lds
imul
push
ja
xlat
jae
sub
mov
(bad)
mov
test
aam
jecxz
sbb
inc
xchg
lock
dec
repz
cmps
cli
xchg
fisubr
dec
cmp
jl
fcmovu
jecxz
int3
xchg
mov
ss
out
jp
mov
cmp
sub
iret
cmps
jle
pop
dec
push
(bad)
or
mov
ficomp
pop
jl
mov
movs
mov
jne
iret
sbb
lods
loopne
arpl
les
cwde
getsec
xor
jns
loope
xor
pop
test
test
sub
dec
push
push
pop
push
mov
xor
faddp
or
aad
sbb
ror
retf
jecxz
pop
js
call
shr
stos
mov
imul
or
or
fdiv
push
test
loopne
fwait
mov
test
xchg
sahf
mov
jecxz
mov
mov
or
jmp
jecxz
mov
outs
or
mov
les
cmp
retf
dec
sbb
movs
xor
cdq
mov
hlt
in
sub
popa
int
and
and
shr
mov
sbb
pop
jmp
inc
xchg
add
and
sub
pusha
(bad)
leave
mov
fcom
jp
mov
jmp
jbe
stc
xchg
(bad)
into
mov
jns
fisttp
push
(bad)
stos
or
push
or
repz
lods
in
bound
xchg
std
xor
push
and
adc
add
daa
mov
adc
out
cmp
adc
xor
inc
inc
iret
stos
mov
or
jno
aad
mov
sub
mov
jmp
shr
push
pop
sbb
mov
mov
scas
fst
neg
shl
xor
cmps
xchg
nop
stos
jns
gs
dec
lods
add
inc
test
jp
and
stc
(bad)
sbb
mov
sub
dec
xlat
push
xchg
xchg
int3
xchg
and
lods
mov
mov
or
push
movs
icebp
pop
in
cmp
mov
sti
inc
jbe
push
pop
fadd
in
pop
out
imul
call
call
xor
bound
nop
and
aam
test
and
pushf
repz
std
sbb
in
jle
ret
cs
sub
les
sbb
push
adc
mov
popf
mov
xchg
jp
(bad)
loopne
push
or
add
cmps
mov
sub
dec
push
xchg
lock
cmp
dec
mov
mov
push
iret
lods
out
das
sbb
mov
and
loopne
cld
ss
add
adc
push
cmps
adc
movs
and
dec
int3
add
xchg
jmp
out
cmc
icebp
push
push
imul
loopne
mov
cmp
leave
pusha
call
push
fisub
icebp
lds
shl
xchg
(bad)
gs
lods
lea
adc
add
or
mov
(bad)
aam
jmp
js
pop
mov
mov
loop
mov
loope
loope
cmp
mov
ret
cdq
rcr
lods
xor
rcr
mov
phaddd
xchg
sub
test
ins
pop
jle
xor
rol
sbb
xchg
pop
mov
dec
and
and
nop
fisubr
fwait
pop
xchg
addr16
shl
push
lahf
es
aaa
mov
push
out
scas
movaps
sub
test
adc
test
mov
dec
add
or
or
xchg
das
enter
push
pop
(bad)
dec
ret
adc
std
sub
stos
jge
add
out
inc
mov
mov
cwde
movs
and
fwait
and
je
imul
and
push
xor
mov
xchg
lock
ret
xor
xor
jle
inc
sub
sub
adc
test
arpl
scas
mov
dec
bound
adc
(bad)
mov
hlt
data16
inc
ins
add
outs
imul
push
or
repz
mov
bound
outs
sub
xchg
fisub
data16
pop
inc
daa
ret
jns
fstp
sti
cmp
in
std
fst
sbb
shr
mov
xchg
popa
shl
adc
icebp
mov
pop
jne
pushf
lahf
pop
pop
push
mov
test
push
mov
cmc
add
scas
jge
mov
mov
xchg
and
lods
ss
lahf
sbb
lods
les
pop
out
stos
in
or
stc
mov
and
ins
test
push
pop
inc
mov
std
jmp
push
repnz
hlt
cmp
xor
adc
adc
fs
ret
dec
and
sbb
pop
cli
les
inc
call
jl
data16
push
jmp
les
pop
jmp
and
stos
rcl
push
mov
sti
mov
add
out
and
scas
adc
sahf
xchg
or
adc
inc
pop
add
mov
add
xor
mov
mov
sub
dec
cmp
(bad)
adc
xchg
(bad)
xlat
rcl
push
mov
inc
aam
or
add
ret
mov
adc
mov
inc
adc
mov
push
cwde
gs
fs
fisubr
cmps
sbb
clc
js
das
(bad)
push
fsub
push
sub
mov
loop
sbb
pusha
rcl
ins
or
dec
iret
in
xchg
push
jns
jns
jns
inc
lods
jmp
dec
mov
mov
shl
aad
(bad)
aas
cli
inc
add
dec
fadd
xor
xchg
mov
mov
pop
mov
and
xchg
cdq
mov
call
(bad)
in
mov
mov
xchg
xor
xchg
stc
(bad)
pop
push
stos
shl
je
dec
cld
cmp
leave
mov
enter
(bad)
and
add
std
sub
ds
es
push
inc
cs
gs
cmp
jnp
and
xor
or
scas
xor
daa
adc
ret
mov
or
mov
stc
push
push
or
ja
jp
out
jns
cs
dec
in
(bad)
cli
(bad)
das
ror
repz
xor
fisttp
jg
push
inc
mov
adc
test
imul
pop
jns
push
push
xchg
xcrypt-ofb
cmps
ins
lock
mov
fadd
stc
mov
fidiv
inc
inc
fst
xor
fwait
dec
(bad)
popf
inc
call
das
stos
lds
dec
mov
aam
adc
dec
sub
leave
ror
cdq
xchg
cmovs
outs
(bad)
movs
xchg
inc
mov
push
arpl
dec
xchg
sar
mov
dec
mov
inc
sub
pop
fsubr
pop
sbb
cmc
and
frstor
or
out
and
inc
in
scas
jnp
movs
push
(bad)
xor
and
xor
mov
xor
jg
sbb
outs
dec
mov
xchg
adc
aam
data16
mov
pop
lock
test
aaa
movs
and
dec
push
shl
sbb
push
add
mov
pop
lea
imul
sub
sub
inc
adc
(bad)
mov
movs
jo
adc
cmp
repnz
sbb
jle
aad
xor
jo
stc
dec
lock
fwait
pop
les
shr
jno
push
push
fild
repnz
int
mov
add
test
or
inc
or
fild
xor
and
pop
and
mov
les
inc
popa
inc
cmp
fiadd
stc
fdivr
inc
je
fld
arpl
jp
lods
rcl
outs
dec
push
stos
mov
sub
aad
mov
or
mov
push
push
jp
mov
test
icebp
aaa
sbb
jne
loop
cmps
xor
cwde
sbb
arpl
leave
out
call
xchg
xchg
enter
ins
adc
mov
sbb
rol
pop
jge
xlat
xor
mov
test
push
fldenv
idiv
mov
repz
cmp
or
test
adc
cmp
push
pop
shl
add
cmps
cdq
push
sub
dec
jo
aaa
repz
test
mov
arpl
(bad)
sub
pop
out
rol
sbb
fdivr
cmp
sub
sub
out
cmc
pop
ins
or
fwait
ret
or
pop
fsub
inc
imul
xor
mov
pop
inc
outs
push
push
sub
jecxz
jo
cmp
xor
adc
arpl
pop
(bad)
mov
(bad)
add
jo
sti
or
das
mov
mov
lods
int3
cmps
mov
cli
mov
cmp
rol
cli
or
inc
call
pusha
mov
sbb
push
(bad)
fst
xchg
arpl
in
jb
cmp
(bad)
aam
data16
ds
sbb
or
jb
mov
imul
mov
cmp
push
mov
into
icebp
fwait
out
shl
mov
or
mov
in
inc
stc
and
fdivr
fisub
or
icebp
mov
sub
cld
mov
popa
mov
mov
daa
or
dec
add
push
ja
aam
sbb
xor
jle
jmp
cmp
add
fbld
test
pop
sbb
pop
fnstsw
lock
mov
cmp
lahf
cli
add
mov
loope
in
cmp
iret
sbb
leave
inc
cmps
xchg
jg
push
pop
movs
je
adc
loope
mov
mov
sbb
adc
retf
sbb
je
add
and
adc
pop
stc
fbstp
mov
fst
repnz
inc
push
outs
mov
mov
ret
sub
fnstcw
xor
fstp
jbe
dec
mov
scas
inc
pop
pop
clc
add
add
je
pop
(bad)
iret
dec
sbb
sbb
pushf
ret
fstp
jg
xlat
std
fist
inc
dec
push
dec
nop
inc
add
clc
lods
hlt
dec
loope
cmp
add
pop
mov
scas
jbe
scas
adc
add
sbb
fwait
aaa
out
int3
sub
pusha
add
or
test
inc
(bad)
jb
pop
iret
xchg
add
ror
add
enter
pop
leave
jae
add
out
pushf
(bad)
shl
adc
(bad)
xchg
jne
js
or
mov
pop
dec
out
dec
fwait
jl
jmp
pop
popf
mov
mov
pusha
inc
inc
jb
lahf
fwait
add
fwait
stos
jp
popa
verr
aad
les
pop
pop
fsubr
inc
xor
add
bound
out
cmp
cmp
sub
sub
sahf
fcmovnbe
ins
cmp
inc
add
lds
loope
sub
jle
ror
icebp
sub
inc
cmp
nop
jp
fld
dec
(bad)
cdq
xchg
push
jnp
inc
add
mov
sbb
push
adc
outs
mov
xchg
lods
add
ins
adc
or
das
inc
mov
out
add
add
xor
jns
inc
ins
cmp
fnstenv
mov
mov
xor
dec
cli
fwait
jecxz
mov
fdivr
xchg
fisub
loope
cmp
dec
and
scas
mov
movs
stos
mov
fild
adc
push
or
loope
adc
adc
rol
pop
mov
std
icebp
leave
jge
ja
jbe
icebp
mov
dec
nop
mov
adc
mov
fisubr
pop
sbb
out
shl
push
gs
inc
xor
jns
je
popa
aaa
or
push
sti
xchg
and
pop
imul
mov
daa
push
cmp
std
mov
xlat
retf
sub
jb
ins
sar
or
popf
inc
movs
add
das
mov
mov
shr
or
sti
push
repz
cmp
aam
mov
sbb
push
fistp
dec
in
cmp
sub
push
or
push
retf
inc
jecxz
cs
hlt
pop
retf
aas
retf
iret
cmp
or
pop
mov
ss
bound
in
xor
sub
into
or
int3
lahf
mov
pop
in
mov
and
or
push
(bad)
push
adc
jns
mov
xor
out
rol
js
lea
call
fldenv
xor
xlat
sub
test
retf
clc
mov
mov
sahf
xchg
push
das
lods
dec
push
icebp
bound
lods
push
add
mov
sbb
les
enter
stc
ss
es
jecxz
xchg
mov
popa
xchg
dec
(bad)
iret
pusha
stos
adc
popa
xchg
ins
cld
mov
out
fidivr
mov
mov
or
ret
in
jmp
(bad)
xlat
fucomp
rol
das
adc
or
mov
fisub
neg
cmp
hlt
popa
movs
adc
lods
out
cdq
pop
jp
(bad)
ss
pop
xchg
je
jae
jg
adc
loope
jl
jge
xchg
xchg
dec
loope
rol
cmc
dec
shr
mov
inc
mov
out
sbb
cmp
in
das
dec
adc
xor
mov
jb
lock
aaa
je
and
push
sti
leave
movs
pop
aaa
retf
adc
sbb
cmps
test
not
xlat
dec
ds
jns
dec
out
lods
les
cmp
lea
and
popa
mov
in
xchg
popf
and
rcr
xlat
pop
test
jbe
add
in
sar
sbb
add
cmp
mov
das
xor
outs
cwde
shl
movs
pop
cmp
shl
aas
push
xchg
sbb
sbb
and
inc
ret
xchg
xchg
mov
xor
out
(bad)
inc
push
sbb
ret
mov
cmps
vrsqrtss
sbb
mov
(bad)
shl
shr
inc
movs
push
xchg
aaa
sub
pop
xor
or
fwait
pusha
pushf
scas
xchg
or
arpl
shl
shr
adc
mov
jnp
jns
jle
outs
lods
icebp
test
mov
xor
pushf
push
jmp
loopne
dec
ror
test
jnp
cmp
sbb
add
xchg
xchg
jge
add
jg
add
fiadd
push
xchg
popa
and
jmp
pop
pop
das
or
(bad)
movs
inc
bound
lock
cmp
scas
cmp
xor
jp
scas
cmp
dec
sub
jle
idiv
pop
call
rol
push
pop
cmps
jle
push
bound
dec
jnp
ret
or
mov
or
(bad)
xlat
add
xor
push
(bad)
mov
lods
dec
jmp
and
jbe
enter
mov
repnz
or
cmp
ret
sbb
sti
dec
sub
and
sbb
lds
pop
and
loopne
sub
sub
call
loopne
outs
inc
adc
fild
pop
sub
idiv
dec
fwait
mov
push
push
sbb
sahf
pop
repnz
ins
jle
mov
(bad)
fdivr
popf
pop
mov
add
out
jo
xchg
mov
dec
lds
arpl
pop
test
call
int
ins
stc
lahf
mov
movs
jns
jnp
jl
mov
fcmovb
jmp
call
xchg
iret
je
rol
sub
xlat
lahf
lds
dec
mov
push
movs
js
or
fidiv
and
jnp
mov
xchg
and
shr
mov
popf
mov
popa
add
nop
mov
fs
sbb
aad
xlat
int3
add
into
dec
pop
lods
(bad)
in
aaa
push
dec
mov
mov
ins
leave
pop
loopne
jbe
xchg
push
shl
das
sar
inc
sti
rcr
pushf
inc
outs
mov
retf
ja
int3
push
mov
cmovbe
jb
xchg
(bad)
pop
sub
js
add
sub
xor
outs
fist
and
dec
add
adc
push
pop
inc
test
xchg
mov
pop
mov
push
je
sub
sahf
xor
out
lods
cmc
mov
push
sti
nop
mov
inc
add
sub
sbb
jp
out
jl
cmp
jp
jecxz
mov
push
in
sub
shr
jo
or
jae
ds
pop
(bad)
push
cdq
jb
dec
iret
mov
dec
adc
xor
cmp
into
push
add
dec
sbb
sti
je
and
ret
(bad)
jmp
add
test
and
fisttp
test
xchg
sahf
inc
enter
punpckhwd
adc
into
pushf
mov
dec
aaa
pop
test
fnstcw
adc
mov
dec
dec
sub
movs
scas
jp
ret
inc
out
arpl
mov
sub
xchg
inc
jne
adc
add
adc
pop
repnz
in
fild
add
sbb
adc
loopne
and
inc
jne
jns
aas
jle
dec
repnz
mov
mov
jge
push
repz
icebp
loopne
pusha
dec
lods
cmp
jmp
cdq
push
add
frstor
jl
xchg
mov
scas
adc
mov
ins
mov
jae
and
into
fstp
(bad)
jl
cs
push
adc
push
jae
repz
das
jecxz
xchg
push
ds
cmps
fcomp
int3
push
outs
mov
mov
jno
jbe
adc
push
jge
fwait
nop
pop
aas
fwait
dec
ins
cmp
(bad)
(bad)
push
fist
lea
int
mov
repz
stos
xchg
mov
and
pusha
imul
lods
arpl
sbb
sub
xor
loopne
mov
aad
jne
cmc
cmps
and
cmps
and
loopne
xchg
jl
neg
jge
cmp
mov
push
pop
xor
es
mov
inc
cdq
xchg
mov
mov
sub
push
pop
dec
sbb
cwde
cmp
cdq
nop
je
jg
inc
add
and
div
adc
shl
mov
cmp
inc
sahf
mov
jae
mov
retf
jp
and
popa
loopne
frstor
mov
sar
or
int3
pop
jae
add
xor
(bad)
pop
mov
in
push
pop
and
fild
in
or
dec
mov
int
mov
sbb
scas
xchg
adc
jmp
ror
sbb
or
mov
mov
int
jmp
into
cmp
push
retf
(bad)
push
xlat
cli
dec
add
adc
and
cmp
push
(bad)
jmp
mov
popf
push
scas
gs
shl
stos
fsubr
push
not
lods
and
jnp
pushf
jecxz
add
fwait
push
mov
cwde
add
add
mov
mov
fldenv
xchg
mov
(bad)
jl
mov
das
adc
jnp
xor
jmp
push
mov
pop
dec
xor
jne
fisttp
mov
mov
sbb
cmp
cmp
lahf
mov
addr16
lods
push
mov
xchg
icebp
lea
dec
cmps
push
mov
xchg
and
out
movs
out
mov
cmp
mov
xor
jle
xchg
pop
mov
enter
and
ret
sub
jae
adc
push
xor
repz
mov
shr
mov
jg
jnp
outs
aaa
popa
jbe
aaa
aaa
bound
(bad)
out
rcr
inc
mov
sub
mov
push
ja
fwait
stos
adc
sbb
mov
(bad)
data16
aaa
hlt
jbe
push
mov
int3
jl
arpl
(bad)
lods
cmp
mov
in
das
mov
fsub
mov
sub
in
adc
mov
test
xchg
test
cmp
cs
inc
std
add
(bad)
push
addr16
in
xor
imul
inc
out
pop
pushf
test
sub
pop
mov
or
jmp
sbb
(bad)
outs
and
push
add
mov
popf
sbb
sti
fdiv
fild
cmc
pop
mov
ins
nop
sti
mov
lahf
out
retf
push
pop
js
icebp
push
sbb
lahf
lods
mov
or
dec
mov
sub
inc
rcr
mov
jns
out
inc
mov
in
popf
mov
stc
push
mov
lahf
ins
leave
add
adc
xlat
jl
jecxz
pusha
aas
inc
mov
inc
ficomp
imul
push
(bad)
hlt
or
xor
pop
mov
fadd
fcom
imul
jecxz
pusha
sbb
je
bound
xor
and
js
and
xchg
sbb
xor
je
retf
and
mov
loope
repnz
cmp
sub
xchg
sub
addr16
adc
add
popa
(bad)
jb
jp
jp
xchg
mov
sbb
jg
ficomp
bound
in
test
shr
push
pop
cmp
cmp
ret
adc
push
daa
dec
jmp
gs
daa
or
lahf
and
inc
jl
inc
iret
inc
pop
loope
(bad)
ret
mov
mov
mov
sub
mov
and
movs
push
adc
dec
jmp
out
push
aas
retf
ds
and
xor
dec
cs
sub
gs
fmul
pop
outs
cwde
pop
repz
fmul
jnp
mov
xchg
xchg
inc
rcl
jle
xchg
jae
sub
test
push
or
ret
jbe
les
aam
ret
out
loope
jecxz
xchg
push
or
pop
stc
adc
sbb
js
mov
xchg
fidiv
mov
cmps
xchg
scas
or
sub
add
lahf
cld
(bad)
lahf
fnstcw
aam
cmc
stos
mov
mov
push
jns
inc
popa
sub
out
enter
cmps
popf
(bad)
lea
dec
repz
push
add
and
pusha
pop
test
add
adc
xchg
aam
cs
xchg
out
dec
ds
cli
adc
or
ror
pop
sbb
push
hlt
je
dec
out
daa
xchg
outs
retf
mov
mov
inc
add
stos
and
aad
int3
pop
jge
pop
test
imul
cmc
sbb
adc
aad
inc
lods
sahf
das
ret
jecxz
inc
inc
shr
addr16
in
inc
and
es
sti
adc
or
das
jo
inc
mov
loopne
sahf
jle
les
inc
dec
inc
pusha
out
xchg
loope
outs
pop
ins
sub
loopne
fiadd
ror
dec
push
jns
sahf
sub
dec
les
xor
rol
inc
arpl
fcmovnu
sahf
jecxz
sbb
lahf
aaa
push
call
sub
and
adc
pop
mov
cld
fwait
stos
lods
pop
loope
push
push
sahf
lods
mov
pop
jbe
and
or
or
in
mov
mov
pop
jl
(bad)
cmps
and
mov
(bad)
arpl
xchg
cmp
cmp
xchg
js
ja
dec
xlat
std
js
and
inc
out
jmp
popa
xor
push
add
or
(bad)
out
mov
js
push
jl
stos
aas
rol
and
daa
mov
dec
push
adc
dec
popa
jl
into
or
jmp
(bad)
pop
add
add
mov
daa
scas
mov
loopne
test
mov
pop
repz
lahf
sub
(bad)
xlat
mov
cmc
mov
xchg
push
imul
daa
cmp
mov
xor
aad
arpl
imul
adc
cmp
in
jecxz
xchg
retf
mov
dec
neg
sub
data16
lock
inc
sbb
xchg
ror
(bad)
enter
jmp
sbb
mov
outs
pop
shl
inc
mov
lock
mov
inc
or
inc
mov
and
push
adc
cmc
jle
mov
cmps
mov
and
aam
dec
push
adc
popf
ret
daa
popa
jge
nop
nop
lock
lock
and
and
int3
ins
push
rol
sbb
mov
push
loopne
adc
call
sub
ds
icebp
push
adc
pushf
jo
les
rcl
push
mov
xchg
scas
inc
or
push
mov
lahf
push
xchg
jo
daa
mov
adc
repz
gs
add
xchg
loop
nop
ss
into
xchg
sbb
inc
cmps
out
or
sub
sub
sbb
ficom
js
out
cmp
pop
pop
ds
xlat
ret
inc
nop
out
retf
ror
sub
mov
push
daa
bound
dec
adc
xchg
jnp
sbb
mov
fild
mov
ret
cli
mov
and
retf
(bad)
jl
ins
aam
dec
xor
jge
lds
out
std
cmps
sub
popf
cmp
dec
mov
movs
(bad)
jg
cmps
fs
std
cmps
push
ins
repz
xor
addr16
pop
xchg
pop
(bad)
cmp
aas
(bad)
pop
mov
sub
mov
sahf
in
je
or
je
sbb
xchg
cmp
jno
daa
aaa
pusha
ds
pop
add
ds
das
adc
pushf
aas
cmp
mov
ja
out
inc
or
sbb
imul
or
pushf
cmps
test
pop
bound
cmc
clc
sub
or
mov
or
lea
imul
xor
shl
sbb
and
jle
jae
ret
test
xchg
pushf
dec
mov
mov
push
pop
add
jmp
cmp
jmp
stc
pop
cmp
dec
ret
aaa
(bad)
cmp
sub
pop
arpl
cmp
clc
xor
(bad)
test
xchg
adc
ds
cs
add
mov
add
arpl
stos
nop
xor
repz
aad
xchg
retf
jne
pop
mov
inc
popf
push
add
cli
ds
iret
and
xchg
xor
or
fwait
je
mov
(bad)
cmp
mov
cld
dec
leave
or
mov
pop
sbb
adc
fst
cmc
ret
js
cmc
dec
xchg
and
add
dec
test
mov
pop
nop
jb
vunpckhps
jns
aaa
sbb
sti
pop
push
and
shr
add
fbstp
xor
call
loopne
call
ja
aad
ret
(bad)
pop
dec
sbb
lods
sbb
xchg
lea
mov
and
push
mov
mov
std
or
pop
xor
xchg
es
pop
xchg
sub
jbe
mov
mov
mov
cmp
and
je
leave
jae
rol
dec
inc
ret
inc
(bad)
pop
(bad)
(bad)
lock
jnp
dec
stc
pop
inc
mov
sub
imul
jbe
rcr
js
push
mov
jns
cwde
mov
sbb
mov
stc
or
inc
mov
rcr
hlt
mov
fs
adc
sub
mov
jle
sbb
lods
jae
sbb
inc
add
cli
fimul
or
(bad)
and
sub
jne
mov
movs
jp
jne
xchg
popf
clc
cmp
jle
popf
xchg
sub
or
scas
cli
mov
mov
inc
jbe
sbb
shr
jle
adc
push
jg
out
adc
xchg
leave
inc
jne
in
cs
pop
mov
sub
jmp
add
jno
mov
mov
or
mov
fstp
adc
and
mov
(bad)
xchg
inc
rol
xor
sbb
call
cwde
push
dec
mov
jp
cmp
in
fsub
cmp
aaa
mov
nop
not
adc
and
mov
iret
jo
and
retf
popa
das
fcmovu
cmp
mov
xchg
jg
jge
mov
xchg
xor
in
dec
jb
outs
push
mov
cmp
mov
xor
pusha
sbb
push
js
cdq
clc
bswap
inc
dec
stc
iret
pusha
add
or
push
push
rcr
add
or
xor
aaa
out
cdq
cmps
push
mov
fcomp
xchg
mov
push
or
sar
and
shl
cvtps2pi
add
(bad)
pop
out
sahf
ins
aad
xchg
jbe
ror
addr16
je
inc
(bad)
scas
sub
pop
dec
mov
mov
xchg
push
push
inc
shl
(bad)
pop
or
push
jg
or
or
cld
inc
jnp
cmp
pop
addr16
rcr
or
sub
dec
push
sub
sub
jge
mov
adc
stos
xor
repz
pop
mov
(bad)
stos
mov
and
bound
jnp
mov
xchg
cmp
push
pop
cmp
cmp
or
and
xchg
stos
fucomp
xor
and
sahf
and
pushf
aas
stos
cmp
add
in
pop
push
dec
adc
dec
rcr
aam
dec
push
mov
add
dec
jns
mov
out
mov
cmp
in
push
jp
or
idiv
je
pop
leave
xchg
adc
jle
xchg
adc
nop
ror
xor
dec
push
sub
and
sub
jo
inc
xor
dec
add
mov
inc
fild
cmps
xor
bound
pmaxub
lock
adc
call
je
sub
dec
push
jae
jecxz
not
jno
loopne
imul
cmp
ja
ret
fld
daa
(bad)
(bad)
sbb
add
(bad)
push
cmps
adc
xor
adc
sti
loopne
repnz
fmul
daa
test
cwde
ret
loope
sub
cmp
imul
scas
xlat
xchg
movs
jge
xchg
test
jge
dec
movs
shl
dec
sbb
cmp
sbb
mov
inc
popf
fistp
sub
scas
dec
mov
mov
iret
push
push
mov
ret
mov
jl
test
sar
jae
mov
mov
loop
or
and
imul
rol
pop
mov
and
xor
xchg
loopne
mov
xchg
movs
popa
outs
mov
push
and
or
fwait
push
(bad)
cdq
add
repz
into
inc
loope
and
out
mov
(bad)
leave
pop
xchg
cmp
dec
int3
sub
adc
jmp
pop
aam
cmc
stos
ins
cdq
xor
test
push
test
mov
je
std
retf
and
dec
and
lock
fst
int3
add
pusha
mov
push
mov
jo
inc
add
jp
dec
enter
and
dec
es
mov
xchg
cld
sahf
pop
xor
adc
sub
mov
(bad)
cmps
(bad)
aam
cmp
jns
add
rcl
das
jbe
loop
jne
mov
push
mov
pop
retf
cmps
loop
jmp
xor
pop
sbb
cmps
and
xlat
ja
pusha
mov
xor
call
adc
(bad)
enter
or
lock
push
dec
pop
add
add
cmp
dec
xor
call
rcr
fisub
jg
jmp
dec
ins
mov
dec
inc
xor
int
jge
push
rcr
loop
xor
and
mov
push
jl
add
mov
add
or
or
mov
in
pop
add
dec
test
xchg
pop
push
mov
add
mov
int3
xchg
add
mov
xchg
fistp
mov
lods
movs
xchg
cmp
mov
xor
push
in
xchg
mov
sub
inc
xchg
push
rcl
adc
enter
addr16
jmp
(bad)
pop
dec
pop
inc
adc
pop
ds
inc
ds
cmps
fucom
outs
(bad)
clc
push
cmp
cli
add
in
adc
outs
aas
inc
lods
cmp
pop
aam
mov
fisubr
inc
or
and
or
push
fistp
push
fisub
inc
fwait
mov
sbb
mov
and
sub
popa
pop
mov
xchg
cmp
imul
xor
sub
es
push
imul
pop
push
movs
xlat
cmp
push
sbb
inc
outs
and
mov
cmp
test
ins
rcr
in
xlat
inc
ds
in
mov
jecxz
xchg
mov
cs
dec
icebp
xor
(bad)
sti
fisttp
in
jo
into
fdivr
bound
(bad)
jecxz
or
adc
dec
push
stos
mov
jnp
pop
gs
leave
fst
cmp
cmp
ins
dec
inc
sbb
sub
scas
std
adc
addr16
in
(bad)
(bad)
jmp
pushf
sti
xor
push
aam
sub
inc
and
mov
pop
pushf
xor
sub
leave
pop
or
sti
mov
xchg
sbb
adc
inc
push
pop
test
dec
and
imul
xchg
adc
les
add
ror
fisttp
add
jnp
sbb
sub
cmp
movs
mov
js
cmp
gs
ins
or
pop
adc
mov
xor
je
imul
sti
shl
leave
mov
mov
inc
and
push
in
(bad)
cmp
mov
mov
pop
adc
xor
enter
xor
mov
mov
xor
loop
fwait
rol
mov
and
int
retf
adc
mov
push
fsub
xor
mov
je
inc
xchg
jmp
add
add
neg
mov
sbb
xor
ds
jb
dec
rcl
jno
ins
pushf
into
cmps
jo
inc
ret
xchg
in
xchg
neg
lods
not
sbb
lods
es
or
sub
retf
push
adc
(bad)
ja
xchg
pop
push
or
add
add
hlt
or
ss
in
mov
mov
xchg
iret
jb
sub
sbb
add
mov
mov
jnp
sbb
or
and
xor
jae
loop
imul
xor
out
jecxz
or
pop
dec
mov
stc
fistp
and
sub
xor
jg
inc
enter
mov
mov
clc
cwde
cmps
xlat
nop
sub
dec
sahf
xor
in
add
outs
xor
push
xchg
add
jno
cmp
adc
mov
and
inc
stos
adc
dec
in
cmc
retf
adc
fwait
gs
jno
imul
ret
inc
(bad)
and
sub
jne
add
adc
lahf
imul
pop
dec
leave
inc
repz
stc
(bad)
rol
jl
div
mov
iret
xchg
rcr
or
jne
dec
push
or
out
pusha
lods
shr
(bad)
xchg
retf
inc
mov
inc
dec
fild
dec
mov
xor
mov
xchg
mov
dec
inc
data16
push
xchg
movs
sub
jp
test
icebp
in
inc
shr
xlat
or
add
inc
in
imul
jae
shl
mov
inc
adc
xchg
out
mov
ja
pop
mov
ins
cmp
cmps
ja
cdq
movs
add
fidiv
loope
fadd
lock
inc
push
cmp
sbb
adc
mov
inc
xor
aaa
cmp
test
jo
mov
inc
sub
scas
inc
add
daa
jnp
adc
or
stos
cld
mov
movs
mov
es
dec
sbb
mov
push
test
jl
inc
daa
inc
cmp
shl
lods
repnz
xor
mov
adc
pop
into
imul
and
int
ret
mov
cwde
repnz
add
xor
aas
jno
out
out
leave
sbb
xor
retf
psllw
xchg
jne
adc
ret
push
cmp
cwde
dec
jge
adc
add
mov
add
sub
daa
pop
pop
and
sbb
test
es
cld
or
aad
and
popf
bnd
into
out
iret
sub
inc
jmp
test
mov
and
and
in
push
rcl
daa
retf
mov
mov
add
pop
aad
mov
add
mov
xchg
(bad)
xchg
jns
cmc
fld
call
push
loopne
sub
push
pop
sub
jnp
xor
out
xor
jp
fs
call
sbb
xchg
out
sbb
iret
jge
or
movs
scas
aad
and
inc
outs
push
in
mov
mov
fs
cmps
test
sub
xor
push
adc
inc
mov
imul
xor
nop
sub
and
test
lock
adc
test
jmp
fadd
shl
push
fiadd
popf
push
and
sbb
cmp
lahf
mov
adc
mov
or
ss
or
mov
add
mov
fdivr
xchg
cmps
xor
test
cmp
adc
cld
mov
sbb
rcl
pop
pop
ret
xchg
cwde
out
xor
scas
inc
mov
(bad)
mov
push
inc
add
movs
fs
sub
add
loopne
mov
fist
mov
xchg
mov
loopne
dec
loopne
and
aas
int3
fistp
loope
test
xlat
inc
lods
addr16
add
out
out
xlat
jg
jg
out
jp
les
iret
or
enter
popf
pop
and
arpl
xchg
rcr
and
popa
(bad)
lock
ds
jge
dec
std
adc
xor
out
mov
repz
adc
inc
call
repz
pop
fst
jno
add
in
xchg
adc
xchg
out
pop
jp
or
(bad)
mov
ret
sbb
sbb
les
(bad)
ja
jbe
adc
fstp
mov
jecxz
push
jnp
imul
push
cli
in
mov
push
aas
sbb
fdivr
and
jmp
sbb
inc
or
dec
out
mov
(bad)
cmp
ret
std
out
rcl
inc
retf
cmp
dec
push
and
mov
pop
xchg
(bad)
push
sub
mov
jnp
or
mov
sbb
pop
fist
push
pop
pop
jmp
push
in
mov
ret
dec
aaa
add
cld
push
xor
call
sti
bound
bound
push
mov
call
dec
add
sub
cmp
sbb
pop
and
jne
ds
sub
jecxz
cmp
and
aas
mov
sbb
in
mov
fwait
repz
mov
jl
sub
sbb
mov
or
xlat
sbb
mov
push
arpl
mov
jmp
loop
push
ja
sbb
retf
mov
iret
(bad)
push
aam
dec
outs
dec
shl
out
ins
je
inc
pop
xlat
mov
aam
mov
mov
push
cmp
add
add
repnz
add
xchg
and
rcr
je
pop
pop
movs
cld
test
cmp
pop
out
mov
pmulhw
or
cs
loop
rcl
scas
push
push
fiadd
popa
dec
cwde
push
pop
dec
mov
sbb
or
pusha
jns
xchg
xor
mov
fnstenv
mov
loope
mov
xor
(bad)
jl
xlat
sbb
xchg
stos
scas
lods
aas
movs
mov
out
dec
sbb
xor
shl
mov
pop
aas
inc
or
push
stos
rol
cmp
xchg
mov
adc
mov
xchg
fimul
(bad)
jp
repnz
xchg
aam
cs
cdq
ror
popa
sub
pusha
ja
hlt
mov
mov
sub
add
les
std
stos
rcr
jno
rol
xlat
in
mov
mov
and
push
ss
(bad)
jno
or
xchg
sub
xchg
jbe
mov
cwde
(bad)
mov
xchg
inc
cmp
in
inc
jo
shl
dec
in
mov
mov
lea
idiv
adc
out
(bad)
fstp
sbb
fistp
leave
xor
icebp
bswap
test
stc
xchg
popa
rcpps
les
je
js
push
cmp
(bad)
mov
inc
jle
mov
sar
mov
xor
cmp
and
jp
loop
adc
not
mov
into
aaa
mov
mov
movs
sbb
aam
mov
dec
ins
mov
je
push
outs
inc
ficomp
dec
push
test
or
aaa
and
movhps
out
iret
mov
jno
mov
and
mov
test
xchg
pop
inc
inc
or
les
xchg
dec
pop
push
ss
movs
push
push
mov
mov
rcr
icebp
add
enter
cmp
xchg
retf
inc
mov
sbb
ror
mov
inc
call
push
and
push
movs
std
xchg
jl
test
push
sbb
mov
out
repnz
jns
pop
pop
cdq
pop
sub
dec
test
jmp
jg
pushf
push
(bad)
nop
cmp
(bad)
or
ret
mov
repz
jmp
xchg
dec
aad
out
cmp
cmps
dec
rol
and
sub
adc
icebp
stc
out
(bad)
xor
(bad)
and
hlt
mov
cmp
cld
dec
lock
dec
xchg
fbld
repz
test
ret
or
mov
dec
test
(bad)
div
mov
push
in
sbb
dec
jae
fs
(bad)
mov
mov
mov
jle
mov
mov
ror
mov
outs
sub
adc
repnz
sub
sub
iret
push
sub
enter
and
sub
in
xlat
test
jae
cmp
sub
cs
sbb
aad
jecxz
ins
mov
fcmovu
jmp
cwde
arpl
jge
dec
sub
inc
das
xchg
xchg
jmp
retf
movs
push
outs
or
test
or
inc
push
or
(bad)
push
ds
pop
xor
mov
fisttp
xor
loopne
fsubr
or
cwde
cmp
or
mov
iret
movs
ret
test
push
dec
xchg
jno
push
add
sub
push
mov
xchg
repz
mov
test
pop
adc
add
xchg
mov
xchg
push
jno
mov
movs
mov
(bad)
jns
xchg
xchg
lods
iret
or
aad
mov
fnstcw
cmp
and
jp
or
int
scas
cld
push
rcr
cld
ret
(bad)
lds
push
jo
xchg
jne
int3
xchg
push
pop
dec
stc
xchg
imul
aad
fnsave
gs
xchg
or
and
call
rol
gs
outs
out
and
and
push
adc
and
inc
adc
add
pop
jle
xor
sar
sbb
inc
scas
add
movlps
pop
mov
fld
xor
jecxz
repnz
cs
cmp
and
stos
cmp
inc
test
mov
inc
add
loopne
inc
lea
lea
out
sti
movs
lods
fcomp
leave
daa
jg
xlat
(bad)
ja
int
jnp
pop
dec
push
push
adc
add
add
fsubrp
retf
das
sti
out
inc
jns
jnp
cdq
pop
jle
adc
jnp
ror
lock
loop
xchg
mov
lods
sbb
jmp
adc
inc
sbb
xchg
dec
outs
mov
push
add
setg
lock
mov
icebp
aas
jge
add
retf
mov
jl
or
lods
adc
xchg
leave
xchg
push
rol
js
sbb
pop
mov
neg
pushf
jo
test
jmp
sbb
mov
and
call
mov
xchg
pop
sub
sti
das
fst
xor
sbb
adc
inc
inc
pop
ret
fisttp
push
add
js
int3
cmp
cmp
inc
imul
cmp
jns
mov
shl
mov
or
mov
(bad)
in
push
fadd
mov
clc
cld
adc
sbb
ret
sbb
push
inc
jae
test
xor
clc
push
mov
fist
ds
lahf
imul
not
pop
(bad)
adc
mov
push
in
cli
mov
push
inc
and
jae
out
sub
sub
push
in
pushf
ins
inc
cmp
iret
and
mov
jmp
pop
pop
ins
inc
pop
repz
adc
mov
in
inc
test
inc
ficomp
stos
ins
mov
mov
ss
iret
push
and
cmp
in
daa
std
rol
div
loop
ds
test
mov
pop
pop
(bad)
xchg
push
jnp
clc
cvtpi2ps
mov
int3
xchg
mov
add
cmp
mov
and
sbb
call
cmp
inc
cld
xlat
fwait
jno
outs
inc
pop
inc
(bad)
dec
add
and
and
xchg
xlat
mov
lock
inc
xor
in
dec
mov
pop
xlat
sub
sti
retf
jno
(bad)
imul
cld
add
sbb
adc
aam
stc
mov
mov
push
cs
push
es
mov
scas
mov
or
or
clc
std
add
lods
add
js
inc
arpl
add
push
mov
cwde
imul
pop
jo
dec
sub
dec
fs
cmp
data16
data16
das
push
or
mov
dec
add
jb
out
mov
mov
xor
xor
or
shl
stc
adc
sub
cmp
mov
cs
and
sub
mov
push
push
mov
adc
ret
rcl
jae
cwde
shl
iret
dec
out
sub
imul
fld
clc
loopne
inc
nop
or
pop
sahf
xor
xchg
pop
adc
es
pop
ja
jmp
sbb
dec
lods
sub
mov
int
cmp
dec
jecxz
jmp
mov
test
ja
rcr
out
fwait
jae
pop
ret
in
jmp
inc
addr16
nop
and
mov
sbb
jae
ins
cmps
sbb
ss
int
mov
pop
adc
das
call
outs
out
inc
test
cli
jl
cmc
add
xor
mov
retf
xlat
inc
in
sub
adc
sub
mov
mov
push
bound
pop
fs
mov
jmp
movs
cdq
scas
and
cdq
adc
in
adc
push
mov
pop
loop
out
xor
xchg
or
jne
lock
imul
ss
jae
xchg
sahf
push
cdq
adc
cmp
sar
add
or
cmp
fild
outs
jmp
add
jo
rcr
push
or
pop
push
dec
cdq
cmp
jno
jns
ror
or
les
loop
cmps
fisttp
mov
and
ins
sbb
movs
push
jae
push
and
(bad)
ins
xchg
scas
cmp
frstor
idiv
sti
sub
addr16
call
ror
das
loope
ret
lea
div
test
jno
sbb
add
daa
ret
jecxz
mul
leave
mov
ret
inc
dec
scas
mov
add
outs
dec
(bad)
jo
jo
add
inc
mov
cli
mov
add
jmp
push
movs
cmp
push
loope
mov
stc
adc
ret
jmp
in
retf
out
outs
dec
fidiv
xor
ret
adc
push
mov
jg
mov
ror
arpl
leave
jns
cdq
pop
popa
scas
jae
ins
fstp
fstp
mov
push
mov
popa
or
jnp
les
ret
inc
test
add
hlt
lds
adc
jg
cs
int
push
add
sub
(bad)
xor
pop
dec
mov
jno
adc
sbb
push
mov
mov
ja
push
movs
add
fsubr
cmp
xor
add
mov
cmc
dec
int3
add
out
fs
es
inc
(bad)
sub
or
stos
das
xchg
pop
dec
jbe
mov
inc
cmp
or
enter
(bad)
stos
pop
lds
sbb
jp
pop
lahf
popf
jl
sub
sbb
inc
mov
imul
sbb
test
data16
outs
push
push
mov
sbb
xchg
or
push
pop
sbb
dec
inc
fild
xlat
inc
sub
mov
pusha
mov
js
mov
inc
ds
jmp
mov
cmp
pop
dec
in
js
fcom
and
push
arpl
cmp
rcr
xlat
popa
arpl
(bad)
pop
pop
cmp
pop
mov
cmps
or
bound
imul
gs
push
pop
ficom
dec
inc
pop
add
or
pop
loope
jno
jmp
jg
sar
cld
out
mov
call
neg
test
sbb
xchg
pop
pop
addr16
pushf
add
loop
test
in
js
lea
xor
push
ss
xor
aaa
mov
push
xchg
dec
lds
and
mov
pop
or
jl
jno
cmp
test
push
movs
gs
imul
cli
push
or
push
mov
and
mov
dec
fstp
mov
dec
adc
call
cli
push
mov
sbb
cmps
std
(bad)
adc
rcl
adc
rdtsc
jb
xchg
sub
cs
rcl
std
ins
lds
mov
cwde
shl
in
in
xchg
adc
push
ja
mov
push
dec
or
test
iret
inc
push
sbb
mov
mov
push
push
push
jl
movs
inc
add
add
cli
bound
and
push
mov
rcl
inc
cdq
pop
inc
xchg
and
and
mov
mov
out
or
jg
dec
dec
sbb
xchg
nop
mov
loop
mov
js
cmp
adc
in
or
jnp
jle
pop
xchg
jge
retf
leave
popf
clc
ins
xchg
movs
inc
dec
add
sub
xchg
dec
add
or
mov
(bad)
repnz
cmps
inc
cli
ficomp
into
int
lea
add
xchg
mov
cwde
and
popf
(bad)
pop
and
dec
fisubr
inc
leave
sbb
fbld
(bad)
add
fistp
in
int
cmp
(bad)
shl
imul
leave
or
inc
lods
mov
jno
sub
cs
jmp
mov
fsubr
xchg
adc
xor
sbb
sbb
mov
adc
inc
push
xchg
or
push
mov
(bad)
in
mov
cld
ds
push
cmc
pop
cmp
movs
or
pop
shr
push
push
mov
fsubr
adc
loop
mov
out
fwait
jnp
mov
xor
add
inc
mov
mov
or
mov
sbb
jbe
loop
push
xchg
pusha
mov
nop
cs
sbb
xchg
add
adc
iret
dec
xchg
ds
(bad)
lods
ja
clc
jne
jmp
mov
data16
arpl
cmp
xor
clc
cmp
push
push
or
jmp
push
dec
repz
jmp
loopne
imul
lds
(bad)
push
ins
scas
mul
jbe
pop
cwde
ror
cmc
cld
push
xor
(bad)
stos
in
pop
cmp
sub
scas
mov
cmps
mov
push
adc
pop
sub
je
mov
or
in
(bad)
ins
clc
jb
cmp
jae
cmovns
mov
lock
out
in
pushf
pop
fistp
ret
xchg
cmp
or
aad
inc
push
inc
fstp
pop
sbb
xchg
jns
jmp
hlt
cwde
fcomp
cmp
cli
xchg
and
dec
sub
and
bound
icebp
push
addr16
int
fnstcw
mov
sub
lea
dec
push
pop
(bad)
ds
adc
ja
loopne
push
mov
inc
xchg
loopne
fnstsw
cmp
jecxz
fwait
lds
imul
xor
xor
or
jmp
mov
sbb
mov
popf
shr
nop
or
(bad)
mov
push
call
sti
adc
and
sbb
test
shr
stos
pop
mov
inc
push
jb
mov
test
loope
xor
jb
adc
pop
lods
mov
lock
(bad)
adc
xchg
mov
int3
sti
lods
sbb
jae
push
mov
ja
fisubr
push
mov
scas
jns
aaa
mov
sti
and
inc
sti
aam
gs
and
cmps
mov
arpl
push
xchg
add
dec
mov
imul
in
jecxz
nop
(bad)
mov
imul
mov
add
fwait
test
mov
gs
xor
jns
rcl
jle
scas
add
cmps
push
repnz
fimul
cmp
sub
clc
pop
pushf
push
stc
std
xlat
cmp
jle
pop
pushf
arpl
inc
cmc
mov
scas
stos
test
mov
jbe
add
add
cmp
jge
inc
pop
mov
cmps
sbb
lahf
int3
mov
and
retf
hlt
in
adc
neg
mov
jo
ds
fild
arpl
dec
lea
add
gs
or
add
js
mov
inc
adc
sar
add
ret
imul
jmp
ror
sahf
push
loopne
add
mov
cdq
lods
into
sub
mov
cdq
jle
and
ins
push
inc
xor
je
dec
inc
mov
xor
or
sub
sub
pop
pop
jecxz
lahf
inc
pop
sub
pop
inc
ror
xor
icebp
sahf
das
lods
mov
pop
adc
add
push
jnp
out
or
fwait
xor
mov
sahf
lods
pop
je
add
js
lock
dec
fst
add
(bad)
jmp
pop
dec
cmp
shr
sub
ds
xchg
jg
sbb
mov
retf
jge
dec
add
xchg
mov
or
mov
sti
lock
sub
out
dec
into
cmp
jle
add
outs
repz
ja
cwde
and
mov
cli
cli
xor
push
mov
(bad)
adc
xor
out
das
inc
inc
stos
mov
push
jmp
in
loopne
jno
imul
inc
mov
sbb
xchg
sahf
out
adc
in
jb
jecxz
lods
imul
ss
xchg
(bad)
cli
sbb
pop
mov
iret
xchg
jno
out
out
outs
xchg
sbb
mov
bound
pushf
les
cmp
xor
call
and
jl
cmp
dec
mov
mov
aas
and
(bad)
movs
push
dec
out
or
leave
and
push
dec
loope
movs
les
adc
jne
stc
or
pushf
or
in
xor
sbb
jnp
push
cmp
mov
cmps
pop
push
out
loop
les
mov
xchg
into
and
pushf
pop
dec
mov
and
pushf
es
ins
push
test
dec
sub
pop
out
mov
mov
cmp
and
fldl2e
popa
jbe
test
inc
mov
mov
add
add
scas
xchg
aas
push
sub
ret
(bad)
test
(bad)
dec
cmp
mov
bnd
mov
fucomp
mov
lds
inc
pop
inc
mov
fwait
push
mov
scas
mov
fmul
mov
and
int
sbb
dec
mov
ret
call
fcomip
and
bound
and
jns
jb
sub
hlt
adc
call
(bad)
(bad)
mov
leave
mov
cmp
add
or
dec
loope
into
lea
jmp
or
and
mov
(bad)
jns
sbb
xor
shr
push
jo
ret
cwde
gs
iret
cmp
adc
int3
push
cmp
fisub
jp
(bad)
fld
loope
(bad)
ret
xor
mov
mov
cmp
mov
mov
cmc
aad
jecxz
push
mov
jns
test
jmp
inc
sti
dec
sbb
mov
pop
aam
and
imul
mov
jne
js
pushf
pop
dec
cmp
imul
div
(bad)
xor
mov
push
xchg
pushf
outs
shr
fwait
stos
push
xor
sbb
jmp
pop
xor
xchg
dec
iret
sub
test
popa
ret
dec
jae
mov
es
push
add
in
stos
shl
cmp
mov
push
jb
cmps
adc
in
gs
xor
fstp
adc
or
retf
enter
fild
sub
mov
sub
xchg
and
rol
ret
fisttp
enter
push
mov
mov
pop
add
jmp
into
retf
scas
scas
push
or
in
icebp
cli
dec
lahf
addr16
mov
imul
pop
sar
pushf
fcomp
xor
int
rcr
leave
in
in
(bad)
adc
cmp
lea
into
mov
rol
push
sub
retf
in
(bad)
sbb
xchg
out
retf
pop
jl
(bad)
pop
dec
sbb
sbb
shl
daa
imul
jns
dec
cmp
(bad)
in
aam
je
xor
mov
mov
sti
push
ror
out
pop
daa
mov
test
retf
shr
(bad)
sti
xchg
dec
imul
mov
mov
inc
push
xlat
mov
dec
(bad)
cmp
mov
dec
or
mov
mov
cmp
ror
addr16
div
jae
dec
jns
mov
jnp
mov
(bad)
cmc
std
cmp
push
pop
sbb
cdq
pop
dec
and
cmp
ret
in
dec
cmovbe
mov
xor
xor
mov
xor
iret
lock
mov
adc
mov
jg
sbb
adc
or
adc
mov
mov
dec
mov
lods
push
dec
pop
sub
mov
mov
push
adc
in
push
outs
inc
cmps
je
stos
pop
jns
fsub
and
inc
lock
xor
out
adc
in
pop
mov
fisttp
cmp
mov
ins
cmp
add
inc
loop
lods
icebp
test
sub
int
sub
add
cmp
sbb
pop
ret
xchg
pop
out
ret
lods
cmps
dec
jecxz
inc
push
pop
sub
sar
ror
mov
clc
ja
sahf
jmp
in
into
sbb
cmps
mov
out
icebp
je
(bad)
test
retf
in
dec
ror
xor
loope
mul
inc
pop
mov
arpl
xchg
(bad)
cmps
push
adc
jmp
das
nop
pop
add
mov
lock
xor
xlat
dec
shl
retf
push
scas
dec
add
aaa
cmp
lods
pop
inc
retf
and
push
iret
inc
inc
mov
dec
push
clc
bound
push
or
dec
cld
add
sub
stc
into
adc
sub
sbb
sbb
je
popa
dec
xor
push
or
retf
nop
fcmovnbe
imul
loop
es
xor
and
and
xor
scas
pop
leave
push
push
pop
jnp
inc
and
test
jno
dec
ins
jmp
add
pop
sbb
xor
sahf
xor
jmp
xchg
nop
lock
in
fistp
dec
pop
xor
sbb
out
mov
jno
aad
or
add
jmp
xlat
and
push
icebp
loop
adc
icebp
add
das
pop
mov
xchg
loope
mov
iret
push
cmc
inc
xchg
sahf
dec
cmp
call
arpl
lahf
out
icebp
add
imul
push
int
inc
fsubr
xor
pop
arpl
hlt
cdq
push
mov
es
hlt
push
add
mov
js
pop
or
push
mov
loop
or
push
add
movs
pop
add
scas
shl
pop
mov
mov
test
in
ffree
inc
scas
add
pop
aam
add
mov
jg
cmp
imul
adc
mov
inc
(bad)
xor
das
das
push
jbe
cmc
inc
fisub
rcl
ret
aaa
mov
push
jmp
mov
jne
adc
out
jns
cmp
mov
mov
fucomp
mov
inc
je
mov
out
ret
call
xor
mov
mov
cmp
(bad)
cli
adc
mov
jb
enter
mov
mov
daa
aaa
out
cmp
xchg
xor
xchg
cs
icebp
sub
adc
xchg
cmp
hlt
sub
cli
cmp
pop
sbb
adc
adc
mov
(bad)
imul
loop
iret
(bad)
adc
jp
mov
stos
pusha
cmp
nop
inc
adc
xor
cmps
jae
ins
fild
cmc
push
pop
daa
call
les
cwde
sub
hlt
pusha
ror
sbb
retf
jg
jb
push
std
enter
sahf
mov
mov
pop
sub
add
push
movs
mov
add
sub
inc
cmp
xchg
push
ret
lock
xor
movs
add
stc
mov
pop
dec
pop
mov
shl
cli
xchg
lahf
cmp
fmul
xchg
mov
and
or
jno
mov
add
or
cmc
adc
jbe
mov
test
sar
push
xor
pop
adc
mov
jle
xchg
push
mov
sub
and
pop
sub
pop
ss
mov
inc
push
jmp
cmp
jnp
jne
addr16
nop
cs
stos
push
inc
jmp
jg
nop
inc
pop
pop
sub
and
add
scas
into
call
popa
adc
pop
cs
push
fnstenv
push
jg
jae
sub
cmp
sbb
test
inc
jae
ins
sub
imul
dec
sbb
adc
xor
xor
mov
sti
out
ror
mov
jo
cmp
jl
pop
aas
cs
jnp
mov
adc
out
and
push
in
pop
mul
inc
ss
mov
xor
add
lds
xor
fs
xor
mov
add
push
(bad)
in
sub
cmps
or
jl
mov
ins
pop
and
int
lods
retf
mov
mov
push
mov
push
fs
cmp
push
lock
xchg
stos
or
aam
jp
push
repz
cmp
inc
add
jmp
ret
(bad)
cld
jo
sub
mov
shr
cld
sbb
sub
mov
mov
je
push
ror
jp
sbb
adc
pop
test
mov
mov
add
and
pop
in
or
sbb
push
test
xor
mov
into
add
sahf
test
aaa
adc
leave
stc
cdq
or
mov
aad
std
aad
hlt
test
dec
addr16
adc
sbb
cdq
aas
and
mov
shl
mov
outs
mov
int3
inc
jmp
jecxz
imul
xlat
sbb
pusha
cmc
mov
test
dec
mov
push
daa
in
jo
jmp
dec
aad
xchg
jp
mov
lods
mov
mov
mov
mov
mov
inc
xchg
pop
aas
cmp
mov
cmp
inc
mov
mov
cmp
push
dec
jae
push
adc
xchg
ret
adc
retf
and
inc
or
in
push
fs
stos
sar
fstp
(bad)
stos
movs
cmc
imul
nop
mov
xor
retf
and
mov
lock
aas
test
xor
push
xchg
cdq
out
sub
xchg
dec
cld
xor
add
rol
xlat
or
int3
push
loopne
pop
or
cmp
ror
push
mov
(bad)
sub
rcl
cmps
jo
sbb
sbb
mov
push
hlt
jb
leave
not
jmp
ds
popa
iret
xor
mov
add
mov
push
push
jnp
cmp
fld
xor
adc
xor
(bad)
mov
mov
pushf
push
js
repnz
inc
stos
(bad)
aad
mov
mov
xchg
mov
jg
and
sub
inc
pop
cmp
nop
ret
rcl
popa
inc
add
xchg
mov
aad
(bad)
in
mov
jle
lea
adc
loop
ja
pop
mov
xchg
aam
push
lahf
inc
mov
mov
or
add
cmc
pop
inc
pop
mov
scas
jge
dec
or
push
xchg
jnp
inc
jmp
fst
iret
ds
pop
inc
jmp
fistp
jle
jae
into
adc
test
out
and
cmps
mov
outs
jo
sub
xchg
xchg
jmp
mov
sub
mov
inc
push
mov
je
(bad)
in
or
add
mov
dec
out
lods
cmp
sahf
fs
or
push
popa
sub
adc
or
stos
faddp
clc
and
mov
cmp
(bad)
stos
sar
push
gs
(bad)
test
out
(bad)
mov
pop
test
jecxz
inc
cld
add
shr
popa
dec
aad
in
mov
mov
retf
retf
dec
lock
sbb
mov
sub
into
mov
daa
pop
pop
inc
and
shl
pop
clc
test
aas
xor
push
mov
cmc
clc
xchg
jmp
push
rol
imul
aam
pop
mov
mov
mov
shr
cmp
cli
mov
loop
pop
and
xor
adc
fsubp
cmp
ins
xchg
cs
sbb
data16
retf
push
fst
es
js
leave
mov
mov
mov
sahf
pop
inc
ret
imul
imul
dec
in
stos
loope
call
mov
lds
mov
test
icebp
dec
pop
mov
mov
aaa
xor
adc
cld
fbstp
push
xchg
fnstenv
sbb
movs
jb
stc
fcomp
xchg
out
out
sub
popa
or
jo
(bad)
sbb
ss
pusha
ficom
sub
xchg
xor
pushf
sbb
cmp
shl
mov
(bad)
pop
xchg
add
dec
push
jno
movs
dec
adc
fidiv
mov
arpl
(bad)
xchg
imul
inc
cli
sbb
add
ins
fidivr
(bad)
dec
dec
cmp
(bad)
idiv
inc
(bad)
enter
lea
mov
scas
call
xchg
adc
fsubrp
call
fwait
xchg
and
(bad)
pop
xor
mov
loopne
arpl
xor
es
ja
dec
(bad)
sub
neg
outs
out
out
cmp
pop
pop
aas
mov
mov
test
test
mov
xchg
(bad)
xor
fld
fimul
dec
daa
push
or
xor
ins
cmp
outs
push
xchg
and
scas
xor
aad
ficomp
jp
push
loope
cmp
dec
inc
sbb
in
sbb
push
repz
adc
retf
shl
les
sbb
ins
fnsave
aas
pop
fisubr
adc
cld
mov
pop
pop
dec
fild
sub
inc
movs
outs
(bad)
mov
mov
dec
xchg
in
push
pop
(bad)
fistp
fsubr
pop
xor
iret
cmc
out
aad
mov
ror
jmp
or
jmp
repz
clc
add
aaa
jb
xor
retf
or
mov
sahf
adc
scas
int
xchg
test
lds
pop
and
xrelease
add
out
pop
enter
(bad)
pop
sub
pop
(bad)
data16
mov
jns
lds
sahf
and
in
adc
mov
adc
sub
xor
adc
mov
cmp
cmp
dec
call
xor
popf
push
mov
(bad)
shl
(bad)
sub
cli
imul
in
js
mov
mov
mov
cmc
movsx
popa
mov
push
dec
add
inc
repz
mov
imul
scas
dec
inc
xchg
ds
sbb
dec
fdiv
loope
call
std
add
gs
test
ins
mov
inc
xchg
xchg
lea
pop
popa
lea
cdq
jo
push
push
fimul
jmp
fldenv
gs
jge
xchg
aaa
or
in
dec
xchg
neg
jae
mov
pop
jbe
cmp
mov
cwde
jge
psubusw
inc
mov
sub
mov
cs
ret
push
scas
xchg
push
xor
mov
mov
arpl
out
or
out
inc
jno
popf
jg
sbb
inc
mov
dec
pusha
jmp
dec
call
mov
sbb
or
cmp
jge
das
stc
fsub
movs
jmp
sbb
aaa
ja
cmp
int
mov
cld
push
push
mov
ja
sbb
jmp
std
stos
push
jbe
imul
sbb
loopne
jne
mov
mov
out
jle
clc
mov
test
sub
repz
dec
pop
sub
inc
pop
mov
in
mov
lods
add
jnp
dec
inc
pop
mov
xchg
mov
xor
enter
addr16
inc
or
mov
push
cwde
jns
push
xchg
ret
loopne
cmp
stos
daa
jae
fwait
mov
cld
adc
jae
lahf
pop
xchg
pop
les
(bad)
rol
sbb
or
movs
arpl
leave
jmp
cmp
ins
scas
pop
int
mov
outs
pushf
pop
sub
loopne
sahf
stos
mov
arpl
mov
xchg
int3
icebp
leave
sbb
xchg
int
push
adc
fs
fadd
lods
mov
ja
into
mov
mov
es
jmp
mov
xchg
jbe
jmp
fstp
scas
push
pop
xor
add
movs
(bad)
aad
sti
and
jo
aas
cmp
lahf
or
icebp
repnz
fcomp
push
mov
mov
mov
mov
xchg
cli
into
mov
mov
jb
xchg
mov
sbb
movsx
test
stos
xchg
loopne
ficom
scas
movs
lods
push
in
jno
out
mov
xchg
imul
xor
ficom
push
jne
and
addr16
jl
(bad)
test
and
mov
jbe
sbb
push
icebp
cmps
stos
xchg
adc
fld
imul
adc
and
das
dec
sbb
lds
lods
inc
out
imul
movs
mov
rol
push
iret
cld
mov
out
or
lea
lea
adc
adc
aas
inc
jnp
shl
rcr
mov
pop
mov
jnp
stos
outs
sahf
xchg
jmp
in
in
call
jecxz
sahf
cli
add
imul
mov
retf
jp
enter
xchg
icebp
loope
add
movntq
dec
arpl
dec
or
leave
lods
test
xor
repnz
repz
loopne
stc
and
sbb
mov
scas
repnz
jp
std
jb
test
addr16
push
xor
mov
in
mov
inc
and
in
clc
or
stos
out
add
inc
mov
(bad)
mov
add
pop
dec
retf
mov
xor
imul
pop
push
mov
xor
(bad)
cmp
jae
inc
sbb
ins
push
pop
dec
sub
or
jno
or
and
mov
popf
sbb
imul
jp
mov
call
jne
fs
daa
outs
dec
add
sbb
cdq
test
sub
fidiv
cmps
sti
aad
or
inc
push
outs
xor
sub
fistp
sbb
cdq
and
scas
js
call
inc
outs
dec
shr
(bad)
dec
fs
ins
pop
jns
pop
inc
mov
pop
sti
faddp
push
aad
mov
aas
sbb
push
ds
outs
aam
pop
push
movs
sbb
and
or
(bad)
das
test
and
sti
in
or
aad
jle
xchg
add
pop
mov
add
imul
xor
xchg
xor
inc
xchg
fstp
aad
xchg
mov
sub
xchg
dec
adc
xchg
mov
call
fsubr
pusha
and
out
adc
test
les
inc
xchg
iret
int3
or
pushf
push
stc
sub
xchg
mov
xor
repnz
lea
sub
sti
xchg
add
or
pop
push
aaa
ja
xchg
rcr
mov
mov
inc
mov
(bad)
mov
xchg
lds
jmp
fcmove
mov
xor
clc
out
mov
push
nop
cmp
pusha
movs
neg
xor
adc
imul
push
jb
mov
sub
test
mov
stos
retf
mov
aad
in
ja
sbb
sbb
retf
jge
movs
mov
and
mov
dec
push
mov
jmp
xor
pop
(bad)
jns
cmc
adc
and
cwde
movs
or
dec
pusha
stc
jbe
das
inc
and
cmp
pushf
cwde
repnz
pop
mov
outs
dec
stos
xchg
mov
mov
cwde
add
inc
clc
sub
or
mov
call
imul
inc
out
push
jbe
mov
fcomp
fst
xlat
fwait
shl
lods
imul
jns
push
nop
imul
scas
adc
in
and
cmp
adc
push
mov
sub
icebp
ret
jnp
push
add
les
push
pop
add
push
sub
inc
out
inc
loopne
or
outs
in
jle
cmc
jb
les
ins
into
or
pop
mov
xchg
inc
test
jmp
inc
(bad)
out
xchg
push
xchg
fild
xchg
xor
std
dec
bound
jmp
pop
push
xchg
push
in
xchg
js
fnsave
sbb
loop
stc
popa
cmp
pusha
push
repnz
pop
cmp
movs
or
jl
and
add
mov
sbb
(bad)
push
ds
pop
jno
mov
das
rcr
stos
(bad)
out
cmp
mov
and
and
xor
add
adc
adc
mov
jb
push
sbb
add
sahf
cmp
and
dec
div
imul
add
aaa
xor
and
cmp
movs
scas
inc
lds
popf
stc
adc
lods
jbe
mov
not
mov
ss
or
mov
fnstsw
cmps
mov
xchg
xchg
cmp
out
xor
dec
inc
call
retf
movs
adc
pop
inc
and
pop
inc
xchg
cmp
iret
retf
sub
or
inc
cmp
and
ret
dec
imul
push
push
dec
imul
mov
idiv
sbb
imul
dec
lods
dec
cmp
mov
sbb
xchg
dec
pusha
add
push
retf
cmp
cmp
mov
jnp
inc
adc
sbb
test
shl
mov
mov
in
aaa
test
inc
es
adc
(bad)
push
adc
hlt
sbb
cs
push
xchg
fisub
in
push
mov
ss
(bad)
inc
in
cmp
mov
xchg
ret
shl
sub
push
mov
and
cmp
rol
pushf
sub
cmp
adc
and
xor
mov
jmp
push
loop
sub
and
jge
xlat
repnz
push
fisubr
mov
inc
mov
arpl
dec
pop
dec
ins
xchg
or
jl
push
adc
dec
mov
ret
fcomp
out
mov
xchg
(bad)
cmps
cmp
test
xchg
jle
adc
inc
aam
mov
loopne
retf
inc
jmp
mov
movs
mov
jp
jns
and
aad
push
pop
dec
adc
jnp
aaa
and
popf
repnz
mov
das
xchg
adc
ja
les
jbe
xchg
mov
cmps
push
mov
gs
movs
ins
clc
stos
les
(bad)
shr
or
inc
loope
ficomp
je
sar
adc
gs
stc
sar
dec
push
dec
lods
xor
imul
sbb
imul
cli
sub
jae
scas
xchg
cmp
or
mov
mov
adc
jl
rcl
in
cwde
sbb
or
in
ror
ficomp
push
enter
or
bound
xchg
ftst
fcomp
stc
jmp
test
and
arpl
sbb
add
and
icebp
aaa
jecxz
cwde
sbb
sub
inc
or
sbb
xchg
addr16
lods
mov
adc
pop
das
inc
retf
mov
jae
push
dec
bound
sar
adc
xchg
dec
xor
inc
(bad)
lds
add
pop
cwde
call
jp
dec
cmps
pop
push
js
or
xor
jnp
sbb
fstp
test
mov
aas
call
lods
xlat
push
adc
ret
dec
ins
xchg
repz
arpl
adc
cdq
fstp
xor
mov
add
loop
(bad)
movs
mov
cld
popa
mov
sbb
pop
inc
sub
xchg
xor
and
out
ret
xchg
inc
scas
push
xchg
sub
adc
xor
sub
movs
or
adc
les
xchg
mov
fld
cdq
inc
sbb
test
cmp
sub
out
das
shr
mov
adc
jecxz
dec
rcr
ret
retf
cmp
ss
outs
(bad)
inc
xor
call
xchg
(bad)
out
loop
in
repz
popf
mov
jns
xor
ins
push
in
push
repnz
or
leave
gs
mov
xor
mov
sbb
and
sub
lock
loop
aaa
daa
sahf
mov
inc
mov
push
push
sahf
fisttp
lods
and
(bad)
push
jle
mov
xor
arpl
jmp
sub
mov
lods
mov
in
in
mov
cld
xor
sbb
in
adc
cmp
movs
add
jg
jge
js
pop
aad
dec
jae
ror
addr16
mul
loop
lods
cmps
sbb
xchg
xchg
fild
pop
or
fs
xor
imul
addr16
mov
fistp
retf
xchg
(bad)
dec
xor
mov
and
call
lds
iret
pop
aad
jo
and
push
push
inc
jae
mov
pop
(bad)
mov
mov
inc
sbb
daa
lock
sar
xchg
mov
call
mov
add
pop
mov
pop
mov
inc
test
cdq
lahf
stos
or
xchg
mov
sub
out
inc
jnp
adc
hlt
aaa
leave
pop
jmp
les
add
imul
or
and
jb
dec
xor
out
inc
xor
ins
hlt
jno
ret
je
push
es
in
cwde
adc
or
les
in
test
lods
push
mov
ret
adc
test
(bad)
mov
pop
out
movs
arpl
mov
sub
(bad)
into
test
in
jns
in
call
push
cmps
aaa
jno
push
mov
mov
and
cmp
test
and
mov
dec
pop
add
jo
test
pusha
int
jg
lods
sbb
adc
and
outs
sbb
jge
mov
out
rcl
xor
bound
mov
(bad)
das
(bad)
mov
bound
repz
in
imul
and
out
add
daa
sub
arpl
jl
fisttp
mov
loopne
idiv
cmps
out
mov
movs
lods
std
lahf
(bad)
fdivr
scas
pop
jb
aad
cdq
cmps
mov
adc
test
out
(bad)
dec
xchg
inc
mov
or
dec
mov
out
and
dec
call
xchg
(bad)
(bad)
xchg
addr16
std
cmp
push
mov
in
push
mov
xor
popf
dec
add
pop
xchg
out
mov
out
jns
fbld
pop
icebp
les
addr16
in
call
setne
adc
nop
inc
nop
enter
pop
sbb
lahf
add
aad
stos
fisubr
ds
lds
movs
fucomi
cmp
jbe
lea
imul
mov
cmp
pop
and
cli
sar
cli
gs
(bad)
pop
adc
es
in
je
push
call
mov
pop
enter
cdq
dec
rcr
mov
and
mov
push
xor
push
fsub
xor
inc
xor
out
(bad)
sti
call
xlat
imul
adc
(bad)
outs
cmp
add
out
push
jno
(bad)
fdiv
mov
mov
adc
repnz
sbb
push
sbb
adc
sbb
test
sub
sub
mov
fsubr
mov
dec
xchg
inc
popf
test
nop
cs
xchg
in
add
pop
sti
movs
lds
mov
shl
cmp
sub
or
xchg
dec
dec
fdivp
test
psrad
mov
(bad)
mov
addr16
(bad)
paddw
pop
repnz
or
mov
mov
jb
shl
mov
sbb
mov
push
push
popf
mov
jg
adc
jle
mov
lods
imul
mov
aaa
and
push
pushf
jne
inc
test
cmp
mov
push
pop
fld
jae
mov
repz
sub
pusha
xchg
das
and
int3
cmc
lea
ja
jo
xchg
dec
lahf
push
xor
fnstsw
cmps
sub
retf
enter
cli
pop
sahf
(bad)
push
sahf
dec
xchg
jl
sub
push
cmps
add
in
inc
adc
cmp
push
push
arpl
mov
mov
pop
cmovae
mov
or
pop
fistp
idiv
test
jmp
pushf
cmp
das
jmp
mov
scas
push
inc
loop
adc
and
adc
lds
nop
push
add
add
pop
outs
jmp
addr16
(bad)
addr16
icebp
out
jg
mov
arpl
dec
mov
(bad)
push
mov
out
fdiv
imul
cld
stos
sub
cmps
xchg
add
xlat
jae
mov
mov
mov
pop
mov
popa
inc
sbb
dec
inc
loope
push
xor
jmp
dec
and
mov
jmp
movs
adc
sbb
push
aaa
lods
sub
mov
stos
mov
hlt
mov
stos
inc
or
jp
pop
in
cmc
ja
or
aad
inc
jnp
ret
mov
push
xchg
pop
lock
or
test
imul
inc
lods
and
push
cwde
inc
sbb
in
add
mov
arpl
jb
xchg
sub
pop
push
mov
outs
loopne
aaa
lods
pop
ror
mov
or
retf
mov
add
pop
pop
test
test
out
shl
repz
xlat
movs
mov
adc
jmp
icebp
outs
shl
gs
pop
dec
inc
popa
bound
pop
xor
add
ins
aam
push
jge
jbe
pushf
ds
(bad)
in
popa
hlt
call
gs
mov
xchg
test
mov
repz
xchg
pop
mov
mov
sbb
push
lahf
jo
mov
out
jnp
dec
loopne
lods
add
jge
dec
addr16
std
sbb
lods
lahf
mov
mov
jg
or
pop
fst
mov
retf
mov
(bad)
movs
call
add
and
mov
or
fisub
add
mov
mov
test
rcr
cmp
retf
xor
cmp
pop
iret
(bad)
push
fmul
sbb
ins
push
das
jl
or
jb
retf
or
mov
cmp
daa
xor
xchg
ja
mov
fwait
pop
push
mov
fwait
loope
and
sbb
xor
sbb
hlt
jo
xchg
mov
pop
hlt
mov
mov
jo
cs
jg
mov
cs
cmp
jge
xchg
xor
popf
stos
jge
je
mov
adc
cmp
aaa
fs
pop
dec
hlt
xor
pop
hlt
movs
fcmovne
ins
fisub
and
sub
sub
jmp
mov
fdiv
pop
push
sub
loopne
inc
adc
(bad)
int3
cmp
mov
and
cmp
lods
lods
fwait
js
dec
mov
ja
lea
int3
mov
daa
cs
or
add
clc
test
js
lods
xor
stos
sub
pop
test
pop
mov
int3
call
mov
bound
mov
arpl
cwde
mov
jae
and
clc
jg
xor
nop
xchg
pop
outs
pop
clc
sbb
icebp
(bad)
mov
add
fs
rcr
fcmovne
mov
stos
into
sahf
(bad)
mov
cmp
jg
fwait
jle
cmps
xor
jg
mov
push
dec
and
cmc
cmp
sbb
or
mov
mov
xchg
loop
icebp
data16
icebp
fwait
call
jo
nop
dec
sbb
cli
les
mov
outs
jle
and
scas
popa
sbb
push
(bad)
mov
movs
cwde
inc
push
push
shl
mov
xchg
cmp
dec
rol
enter
or
dec
mov
adc
iret
push
cmc
push
out
add
mov
arpl
xor
add
push
stos
add
(bad)
mov
mov
pushf
fiadd
mov
xor
movs
dec
mov
or
ins
stos
push
(bad)
mov
dec
pop
xor
mov
and
pop
dec
mov
mov
add
cmc
fcmovne
shl
(bad)
jno
gs
jg
xor
ficomp
or
jmp
cmp
icebp
sahf
cwde
or
and
push
xor
jmp
shr
pop
mov
ror
cmps
xor
hlt
jg
(bad)
out
pop
cmps
jmp
pop
xchg
push
mov
out
lods
retf
popa
ja
rol
sub
pop
sub
and
retf
lahf
dec
dec
push
jnp
jno
jne
cdq
and
rcl
mov
pop
mov
pushf
in
mov
mov
sub
adc
or
cmp
mov
push
sub
and
dec
outs
mov
out
(bad)
ror
sbb
pushf
jns
hlt
push
shl
ret
cmc
xchg
(bad)
mov
sbb
inc
or
mov
rcr
jo
push
pop
sbb
loope
jl
into
enter
addr16
rcr
push
inc
jp
cmps
outs
dec
and
bound
ja
cmp
popa
mov
in
jo
mov
xor
add
add
cli
fidiv
push
shr
jl
xor
adc
mov
lds
das
mov
xlat
lahf
je
popf
push
adc
sub
dec
and
push
aam
sub
cmps
push
ja
(bad)
nop
push
mov
nop
in
xchg
cs
jecxz
je
dec
vpscatterdq
rol
fild
ja
sub
sbb
sub
sbb
in
xor
xlat
es
adc
rol
adc
pop
pop
jge
pop
sbb
out
movs
inc
sbb
jo
outs
(bad)
sub
sbb
movs
sbb
cmp
or
jmp
movs
sub
scas
pop
inc
int3
outs
loope
or
leave
xchg
push
cli
and
cld
retf
adc
movs
cmps
test
stos
sbb
push
or
setge
xchg
call
imul
movzx
inc
scas
or
loopne
and
inc
frstor
ret
pushf
jecxz
pop
or
mov
pusha
xchg
lahf
je
push
mov
repz
cli
and
xchg
xor
cmps
aam
mul
jae
rol
dec
loopne
movs
adc
nop
mov
fstp
enter
into
mov
mov
fdivr
mov
pop
xlat
mov
not
addr16
outs
lea
xchg
jp
adc
stc
mov
adc
mov
sub
sub
dec
cmp
inc
adc
call
inc
or
mov
cmp
cli
out
jg
dec
xchg
mov
test
mov
ret
add
inc
push
add
leave
stc
fcomp
jae
mov
test
push
push
aam
aas
pop
aaa
arpl
mov
leave
and
or
mov
xor
(bad)
jmp
test
neg
pop
mov
test
(bad)
lahf
lahf
push
(bad)
mov
mov
xchg
jo
aam
xor
(bad)
aam
xchg
push
mov
out
fmul
repnz
inc
mov
and
lods
dec
mov
pop
daa
push
stc
push
sar
xor
inc
inc
sahf
fnstenv
cli
cld
inc
pop
in
mov
lock
rcl
cld
shr
pop
test
adc
gs
iret
leave
add
ins
arpl
adc
and
push
shl
call
jge
mov
je
imul
imul
inc
shl
inc
dec
inc
adc
and
iret
sub
(bad)
push
or
jge
lock
sbb
aam
mov
push
xchg
aas
pmuludq
or
or
pop
push
je
mov
adc
and
push
sbb
mov
shl
inc
and
push
mov
popa
stc
add
call
sbb
fdivr
jmp
call
push
push
loop
sar
cli
retf
inc
cmps
es
xchg
inc
jle
adc
inc
push
mov
xor
(bad)
ror
outs
pop
sub
sahf
mov
test
inc
pop
mov
mov
stc
retf
cmp
jle
dec
add
movs
mov
cmc
xchg
push
(bad)
aam
test
jbe
sub
cdq
loop
xchg
and
fistp
cmp
and
xchg
or
sbb
rcr
xchg
pop
scas
shr
hlt
outs
sub
popa
sbb
lods
xor
cmp
test
call
es
ds
fcomp
pop
cmp
repnz
pop
cmp
sub
pop
cmp
sub
lock
aam
sub
cmp
mov
xchg
inc
push
mov
inc
cld
rol
cld
dec
lods
and
out
(bad)
(bad)
ja
jo
sbb
test
test
push
inc
push
out
les
ins
xchg
mov
push
xchg
ret
mov
mov
pop
repnz
xor
imul
sbb
jne
lahf
gs
push
push
adc
dec
add
jae
push
addr16
xor
push
cmp
cmp
xor
cmp
xchg
push
es
inc
adc
movs
(bad)
pushf
dec
sub
scas
mov
xchg
fld1
pop
call
push
xlat
push
cli
(bad)
xchg
dec
dec
mov
dec
mov
pop
popf
repnz
cmc
into
sub
daa
dec
es
(bad)
imul
aad
gs
add
fnstcw
outs
mov
mov
mov
push
cs
cmp
cmp
or
test
ds
add
mov
add
mov
mov
rol
push
(bad)
in
sbb
fld
shr
fistp
jmp
or
fwait
adc
sub
adc
inc
jp
sub
push
cmps
pop
aad
cwde
cmp
xor
call
retf
icebp
xchg
ins
(bad)
push
pop
push
shr
inc
aas
dec
jmp
scas
mov
cmps
hlt
push
out
mov
bound
ror
adc
jg
jmp
pop
(bad)
loope
push
pop
mov
repnz
cmp
mov
adc
in
or
ret
ficom
fcmovnu
mov
pop
jmp
mov
pop
dec
lahf
jmp
sub
xchg
jbe
push
mov
pop
push
or
dec
call
jmp
dec
jb
adc
pop
jae
and
les
ja
adc
mov
push
stos
(bad)
pop
jp
push
cwde
test
aad
cmc
push
adc
jle
mov
push
lahf
cmp
xchg
mov
cdq
pop
outs
arpl
jmp
out
cs
xor
fldcw
pushf
repz
mov
mov
fs
(bad)
iret
iret
cdq
scas
inc
fisttp
mov
mov
adc
pcmpgtw
cmp
and
jecxz
sbb
not
ja
dec
mov
cs
dec
shl
stos
sbb
mov
or
sub
mov
xor
mov
adc
in
jne
addr16
idiv
call
push
out
xchg
dec
pmulhuw
lods
xor
sbb
push
jmp
dec
add
pop
(bad)
sbb
xchg
or
loopne
dec
jns
push
jp
xor
or
push
stos
mov
sti
mov
sub
pop
cli
or
pop
cmps
jo
pop
and
(bad)
dec
out
fistp
mov
mov
or
mov
push
xor
bound
jl
mov
cmc
mov
ss
and
rol
pop
push
ins
sub
gs
mov
xor
xchg
loop
xor
test
mov
jbe
sti
(bad)
outs
cwde
push
ss
dec
pop
loopne
dec
jp
out
inc
dec
call
cmp
pusha
push
jo
sbb
jl
push
jns
push
outs
jo
out
inc
inc
(bad)
adc
add
mov
cmp
out
ss
ret
fwait
imul
sub
cdq
sbb
sti
mov
fdiv
jmp
push
cmp
mov
xchg
lock
(bad)
sbb
dec
scas
mov
mov
icebp
jmp
jb
adc
mov
mov
push
ret
mov
stos
lods
xor
mov
ins
outs
push
pop
lods
shr
add
pop
and
or
xor
ds
inc
out
mov
xor
js
sahf
rol
aas
leave
push
mov
sbb
sahf
push
nop
mov
xchg
mov
push
loop
jmp
jno
push
pop
xor
xchg
jo
dec
aas
(bad)
icebp
dec
popf
or
fild
or
jge
enter
and
ret
retf
fwait
mov
pop
or
add
xchg
popa
out
das
popa
movs
jns
inc
push
fwait
cmc
pop
mov
cmps
mov
les
leave
in
sbb
xor
xchg
icebp
clc
ins
fisubr
jnp
rcr
mov
dec
push
sub
sub
inc
in
xchg
xor
pop
movs
or
or
mov
cmp
dec
outs
(bad)
stc
jl
rcr
out
mov
or
pop
jo
(bad)
rol
mov
mov
push
pop
cld
enter
pusha
adc
mov
sub
shl
mov
xor
dec
shr
es
(bad)
xchg
or
mov
add
pop
jno
mov
adc
or
jg
pop
cmps
mov
pop
(bad)
mov
or
jge
icebp
dec
mov
cmps
jne
lea
imul
inc
or
mov
in
jle
sub
je
test
imul
int3
cmp
int3
es
adc
mov
sub
adc
sti
dec
or
add
(bad)
cmp
aad
fistp
retf
sbb
popa
mov
or
out
test
jp
pop
or
cmp
xor
jp
jne
(bad)
js
mov
dec
sbb
imul
inc
cmp
jbe
push
aaa
test
cmp
xor
das
icebp
xor
dec
mov
jmp
add
test
jae
fs
scas
cmps
jb
not
mov
jno
into
(bad)
cmp
jns
add
xor
pop
dec
aam
mov
inc
aad
sub
mov
cwde
popf
dec
push
pop
pop
ret
cmp
jl
es
push
fnstsw
int
enter
nop
dec
and
retf
(bad)
pop
mov
mov
ror
push
adc
nop
pop
cmp
jns
pop
enter
jb
in
je
repnz
push
sar
adc
retf
or
mov
mov
(bad)
gs
pop
sbb
push
pusha
les
std
jno
and
jmp
add
sub
cmp
mov
and
jne
and
sbb
fld
xchg
pop
push
sbb
or
in
push
or
jg
cld
mov
pop
loopne
lods
jae
lds
sar
test
jno
push
inc
jge
sbb
mov
mov
pop
adc
or
mov
jb
sbb
xchg
mov
adc
popa
adc
jecxz
sub
adc
inc
int
cmp
repnz
test
int3
jle
cld
out
sub
ret
mov
mov
out
jl
clc
mov
sbb
iret
cli
ret
xlat
stos
adc
pop
mov
mov
cmp
mov
add
in
es
cmc
mov
inc
std
inc
add
ins
pop
adc
pusha
mov
xchg
ror
mov
mov
aaa
int
inc
les
mov
xor
cmps
jbe
sbb
jle
push
lods
jne
mov
jge
(bad)
mov
cmps
push
popf
jns
out
test
inc
xor
(bad)
jbe
(bad)
lahf
cmps
push
add
mov
ins
xchg
hlt
sbb
push
retf
push
pushf
(bad)
sub
fnstenv
cmp
mov
and
ficomp
jmp
pop
push
sbb
jge
mov
mov
push
cmps
mov
jmp
mov
dec
jno
xor
pop
int
ds
cmp
inc
mov
fisubr
mov
cld
stos
jp
adc
pop
mov
dec
sub
pop
mov
pop
into
cld
mov
popa
xor
hlt
std
les
pop
and
(bad)
push
dec
jmp
mov
ins
pop
or
(bad)
lahf
(bad)
jmp
pushf
push
adc
aam
repnz
aas
(bad)
sub
lods
dec
push
data16
cwde
adc
pop
int3
loope
lahf
xor
(bad)
xlat
xchg
xchg
cmp
sub
repz
dec
xlat
dec
stos
adc
test
(bad)
in
mov
sbb
inc
push
retf
sbb
sbb
cmc
push
or
cli
rol
lds
out
adc
pop
xchg
mov
loopne
es
and
cmp
outs
jne
cmp
fadd
bound
sub
cmovge
neg
xchg
or
push
pop
loope
out
or
adc
test
sbb
inc
mov
pop
rcr
daa
or
jne
cmp
sbb
outs
cwde
pop
pop
stc
inc
fcom
loope
stos
push
inc
and
mov
push
adc
push
mov
outs
mov
cmp
imul
jbe
push
pop
pop
les
and
fld
mov
jne
sbb
cli
sbb
sub
mov
stos
pop
mov
out
(bad)
sub
jp
mov
pushf
inc
mov
xchg
stos
sub
stos
ss
mov
push
inc
xchg
rol
cmp
lock
sub
jb
push
outs
sub
and
sbb
mov
push
sbb
mov
test
inc
(bad)
jmp
ret
sahf
scas
pop
mov
jne
push
imul
push
retf
and
dec
pop
xchg
sbb
and
lahf
imul
inc
jne
repz
enter
retf
inc
inc
jecxz
mov
aaa
fistp
xor
cmp
mov
shr
(bad)
fdivr
fisubr
test
fwait
mov
mov
in
add
inc
mov
xchg
cs
repz
mov
je
sbb
jo
bound
add
jnp
cmps
jae
(bad)
jnp
cmps
jo
pop
pop
xor
ins
mov
fcom
icebp
dec
jmp
mov
in
xor
mov
xor
jb
div
mov
outs
sti
fdivr
xchg
in
adc
inc
jne
cld
push
stc
add
sub
repz
icebp
inc
mov
sbb
pusha
mov
sub
mov
ins
rol
push
(bad)
daa
int3
add
ret
dec
inc
loopne
les
add
fiadd
cwde
das
mov
rcr
cmp
xchg
fnstcw
and
inc
repnz
aam
dec
push
mov
dec
sub
cmps
sbb
inc
clc
jmp
out
push
xor
sub
cwde
jmp
loope
xor
int
test
jge
sar
dec
xchg
mov
dec
stc
icebp
pop
stc
movs
adc
pop
and
cmp
mov
test
ins
mov
inc
in
outs
mov
add
sub
jns
cmp
stos
dec
pop
leave
cmp
cdq
fstp
xchg
inc
jp
aam
cmp
xchg
mov
or
sbb
jp
aaa
mov
aad
pop
fmul
cld
push
js
and
or
sub
sub
in
scas
aad
jns
or
enter
add
in
adc
add
jmp
sahf
call
les
ficom
jne
aaa
ja
jo
clc
pop
push
fisubr
repz
out
xchg
dec
adc
sbb
loope
cmps
and
lock
jl
push
cli
ins
inc
ucomiss
cmp
cmp
mov
adc
test
pop
add
jns
push
cmp
pop
in
movs
call
lock
js
cmps
in
adc
loope
movs
and
cwde
mov
pop
xor
mov
cmp
adc
mov
mov
call
dec
fs
stos
mov
stc
push
sub
mov
scas
(bad)
dec
into
les
xor
sahf
ficom
xchg
mov
pop
and
mov
pop
cmp
fwait
cli
test
sti
rcr
adc
pop
cmps
iret
fdiv
fnstcw
sbb
shr
clc
jmp
inc
jbe
and
lds
mov
adc
xchg
dec
ins
xor
scas
ss
and
pop
js
aaa
sub
dec
ret
movs
xchg
icebp
adc
mov
sahf
fwait
out
(bad)
jbe
repz
(bad)
jge
imul
mov
jo
push
scas
inc
and
loop
mov
push
add
mov
inc
inc
mov
(bad)
iret
jno
sbb
enter
cli
and
sar
mov
js
repnz
xor
pop
dec
adc
or
in
or
(bad)
in
xchg
mov
cmp
lahf
fild
mov
sub
(bad)
sub
or
(bad)
popa
stos
inc
mov
sbb
imul
and
mov
ds
mov
stc
(bad)
pop
shl
inc
out
mov
popf
popf
sub
inc
retf
pop
xlat
push
inc
cmp
xor
das
aaa
dec
gs
les
fiadd
jmp
mov
adc
cdq
mov
mov
aaa
mov
add
cmp
jle
cmps
sbb
fcmovu
test
stos
(bad)
pop
xchg
push
xchg
nop
cmp
(bad)
call
and
cmp
lahf
pop
inc
sub
scas
sbb
jle
mov
xchg
mov
imul
cmps
int3
fnstsw
sub
movs
lahf
or
daa
imul
add
dec
lods
sub
mov
jecxz
pop
pop
push
mov
mov
js
sub
add
and
mov
rcr
inc
imul
pop
aad
jle
inc
outs
ins
mov
jp
fnstcw
inc
mov
mov
jge
adc
cmps
in
shl
in
fst
outs
clc
xchg
add
in
mov
fs
mov
push
rcr
sbb
add
adc
push
int3
(bad)
fsubr
pop
and
aaa
call
mov
inc
ds
aaa
dec
push
or
cmc
or
cmp
pop
test
xchg
lods
mov
movs
mov
ss
dec
jg
pop
cld
ins
iret
sbb
sahf
retf
out
xchg
sub
js
sbb
fiadd
xor
jle
add
cmp
es
adc
loop
xchg
retf
xchg
cmp
mov
and
fistp
rcr
loope
push
repz
int
test
aaa
test
iret
add
sub
lea
repz
dec
or
retf
loope
ror
pop
(bad)
mov
mov
retf
aad
cdq
icebp
adc
inc
cmp
or
inc
jo
jo
push
push
sub
and
pop
dec
xor
lods
aam
outs
inc
jl
inc
pop
cli
cwde
push
(bad)
daa
mov
repz
add
sbb
xor
dec
or
pop
jmp
ja
mov
push
test
loope
aas
pop
(bad)
(bad)
fdivr
in
add
std
cli
call
daa
or
gs
fild
outs
cmps
jb
push
aad
sub
cmp
cmp
mov
fstp
xchg
iret
(bad)
jp
mov
mov
xor
enter
cs
cmp
popf
shl
arpl
in
cmc
popf
sub
mov
daa
sub
lds
into
fimul
(bad)
mov
adc
cmp
jge
out
aas
popa
and
adc
mov
das
outs
pop
test
cmps
xor
shl
push
push
(bad)
fyl2x
cmps
cs
js
shl
sub
mov
inc
(bad)
out
std
and
pop
inc
mov
aas
fcom
adc
(bad)
loope
(bad)
in
and
mov
mov
fistp
jmp
inc
out
xchg
ss
cs
adc
cmps
adc
jmp
push
out
xlat
iret
xchg
push
cld
loopne
mov
jle
sbb
or
adc
push
in
pusha
push
dec
iret
jnp
sbb
lea
sub
sar
sahf
(bad)
mov
xor
fcmovnb
xor
hlt
clc
lods
iret
mov
dec
or
sbb
sbb
ja
xchg
push
(bad)
stos
imul
std
dec
ins
cmp
fld
push
mov
in
adc
xchg
retf
mov
das
clc
fsubr
inc
xchg
xor
inc
add
test
dec
gs
push
mov
lock
aad
in
int
repnz
mov
out
and
ret
js
push
ss
mov
mov
pop
xlat
movs
inc
call
mov
aad
jno
and
ret
jl
cld
not
xor
iret
int3
jmp
cwde
gs
mov
xchg
jle
mov
dec
imul
xchg
fisttp
xchg
pop
fwait
lods
mov
pop
mov
pop
sub
test
inc
xchg
sub
and
push
pop
int
push
sub
std
rcr
mov
jb
js
sbb
push
(bad)
into
mov
xchg
cmp
addr16
pop
add
inc
push
nop
adc
add
call
xor
xor
dec
xlat
out
lock
shr
push
cmp
inc
repz
in
push
movs
out
mov
mov
jmp
(bad)
(bad)
(bad)
mov
out
fsubr
sbb
mov
jp
fwait
scas
nop
arpl
fcompp
ins
pop
scas
pop
mov
gs
hlt
loope
lahf
push
pop
jmp
pop
fwait
in
data16
ins
push
jnp
repz
jns
dec
test
push
iret
call
test
gs
push
dec
add
sub
mov
jg
imul
lods
or
mov
stos
(bad)
aaa
push
out
cdq
jns
and
hlt
cmc
adc
in
jmp
outs
fdiv
jns
out
or
xor
cmp
ret
adc
cs
lahf
fs
call
xchg
dec
es
jno
hlt
inc
rcr
mov
gs
scas
mov
ds
sbb
les
mov
lods
cmps
cmp
or
fs
repnz
push
call
int
pop
sar
cmp
push
fdivr
push
int
dec
xor
frstor
or
jecxz
xlat
adc
ret
fdivrp
cs
sub
dec
cmp
stos
fsubr
dec
ret
push
jge
pop
int
push
pop
pop
cli
cwde
(bad)
shl
ss
enter
pop
push
sub
sahf
iret
and
int3
jmp
push
push
pop
test
stos
adc
stos
mov
ss
xor
sahf
mov
cld
out
adc
repnz
rcl
inc
test
xchg
mov
pop
call
or
and
mov
dec
inc
push
mov
cmp
mov
push
xchg
pop
fistp
jecxz
jmp
ret
jmp
jl
dec
in
and
into
test
or
xchg
sbb
pop
std
pop
adc
shl
popa
sbb
inc
leave
xor
test
mov
dec
lock
(bad)
sbb
mov
ret
add
clc
addr16
jge
les
mov
sbb
push
cmp
pushf
inc
pop
les
cmp
aas
test
fwait
mov
push
cmp
dec
sbb
lahf
xchg
cmps
lods
fnstcw
and
sbb
out
mov
les
xchg
iret
lea
aam
aas
xchg
stc
adc
lods
out
push
dec
and
mov
aam
cmp
movs
imul
mov
push
leave
cmp
loopne
out
push
push
add
xchg
int3
cmps
add
fstp
call
cmp
inc
mov
xor
xchg
jmp
inc
fdiv
fs
iret
push
fild
std
out
adc
sub
dec
cmps
sub
add
mov
fs
test
adc
adc
imul
inc
or
push
xchg
jbe
cmp
lods
inc
imul
repnz
xchg
fdivp
pop
fs
mov
push
dec
sti
sub
or
add
fwait
imul
pusha
icebp
cli
icebp
in
jge
test
pop
sub
jbe
pop
imul
mov
sbb
into
movs
pop
test
pop
imul
mov
movs
sbb
(bad)
mov
adc
mov
ins
pop
pop
icebp
jmp
add
and
add
leave
sub
mov
call
iret
mov
popf
sar
xlat
ja
cmp
jmp
pop
fs
in
les
adc
(bad)
es
mov
sub
pop
xor
(bad)
cli
cmp
mov
adc
stc
repz
out
je
mov
xor
mov
cmps
jl
push
xchg
sbb
mov
pop
ja
or
jns
jmp
rol
mov
and
loop
mov
loopne
inc
cmp
jmp
inc
pushf
cmc
lods
jne
mov
cs
popa
add
mov
add
fdiv
mov
xchg
ret
lea
mov
scas
fcomp
les
xchg
cwde
retf
in
sahf
pop
jle
enter
outs
imul
mov
add
cmp
mov
bound
fild
xor
jmp
jle
enter
push
sti
mov
inc
mov
stos
retf
pop
jl
mov
cmp
loop
cmp
xchg
cmps
dec
popa
sub
sar
scas
aaa
repz
sbb
test
leave
mov
mov
pop
movs
push
imul
pop
les
mov
scas
or
push
lods
jnp
cmp
movs
mov
push
enter
aas
jmp
shl
pop
iret
sub
out
aad
adc
jmp
jg
or
fidivr
lods
inc
js
(bad)
retf
or
xchg
jnp
out
dec
in
or
pop
mov
in
mov
lock
xor
xchg
inc
std
pop
cwde
fwait
push
xlat
mov
stc
jno
mov
call
fcomp
loopne
mov
cmp
in
dec
je
push
out
mov
xchg
push
pop
mov
shl
jp
cmps
inc
lods
mov
mov
loope
shl
call
ds
(bad)
cwde
xor
push
jmp
mov
or
sbb
nop
dec
add
aaa
cmp
mov
add
cmp
xor
pusha
sti
test
int
xor
imul
mov
sbb
xchg
ror
xchg
mov
movs
cmp
out
hlt
ins
cwde
xor
jmp
(bad)
cwde
shl
adc
arpl
dec
rol
push
adc
ja
add
and
cdq
xor
fild
pop
fild
ror
in
ret
daa
fild
dec
add
fdivr
and
jae
aam
scas
movs
jmp
int
lahf
fisub
sub
jo
fwait
pop
mov
fld1
test
mov
les
or
and
dec
xchg
mov
cmps
out
cmps
cmp
movs
jae
or
mov
pop
imul
into
jns
sahf
and
mov
loopne
lods
rol
pop
or
sub
clc
repz
push
sub
popa
jp
sahf
add
in
mov
leave
cmp
cld
fwait
les
cli
pushf
xor
xchg
cmps
call
or
sar
je
leave
aaa
retf
lods
scas
mov
scas
pop
fisttp
and
fistp
pop
cld
rcl
aad
repz
repz
stos
cmp
cmp
(bad)
pop
add
es
pop
jno
mov
into
mov
sbb
pusha
xchg
cs
cmp
gs
aaa
gs
dec
fwait
ror
jno
jbe
jae
mov
pop
sbb
std
leave
mov
push
mov
dec
pop
(bad)
jo
out
sub
push
mov
jb
into
inc
std
cs
stos
add
addr16
or
sub
jmp
fcom
add
sbb
shr
mov
scas
retf
add
add
addr16
and
pop
fdiv
rcl
jecxz
icebp
add
mov
push
cmp
xor
loopne
xchg
fdiv
push
xchg
push
scas
data16
imul
xchg
add
sti
stc
out
dec
jp
mov
mov
loope
xchg
inc
fmulp
pushf
js
retf
ins
test
xor
sbb
fstp
rcl
sahf
mov
adc
push
lods
dec
mov
push
inc
sahf
mov
sbb
jnp
jnp
loopne
jge
xchg
cli
dec
and
loop
dec
pop
xor
xchg
add
test
js
repz
js
test
add
fsubr
lods
xor
sub
aaa
cmp
fsub
mov
xchg
or
shr
xor
daa
hlt
jno
xchg
in
jno
xchg
loop
ja
push
pop
leave
xor
movs
inc
sub
les
fcom
ss
test
sbb
jl
dec
or
fs
shr
lods
xchg
sub
pop
mov
xor
pop
mov
daa
sbb
clc
imul
dec
mov
sbb
repnz
sahf
rcr
sub
out
dec
mov
iret
jb
ins
iret
loopne
mov
mov
pop
inc
and
mov
xor
pop
push
sahf
jmp
and
push
ds
sub
je
mov
xor
sar
addr16
push
sub
fimul
movs
lahf
sbb
outs
push
daa
add
push
test
xchg
dec
mov
mov
dec
adc
ret
test
push
(bad)
xchg
dec
mov
lock
add
ror
ret
push
imul
xor
jbe
out
and
shl
sub
push
mov
sub
add
pop
sbb
mov
stos
add
lea
cmp
lea
out
cdq
xchg
jge
shl
jge
and
mov
arpl
and
ja
loope
cwde
inc
dec
push
ins
add
push
mov
ins
test
inc
or
adc
jl
js
sar
lods
dec
add
aaa
cwde
mov
jmp
outs
ret
mov
das
sub
call
push
stos
popa
and
dec
sub
inc
mov
fiadd
or
cmps
and
adc
cmp
cmps
sahf
in
dec
(bad)
jb
test
dec
inc
cmp
je
je
cld
or
mov
rol
pop
pop
test
scas
call
inc
xor
cmc
nop
push
or
retf
je
leave
and
mov
mov
loop
jl
xchg
inc
daa
lahf
es
and
or
loopne
dec
cmp
push
and
inc
mov
dec
and
popa
adc
mov
retf
push
adc
js
addr16
mov
sbb
mov
cmps
(bad)
(bad)
cmp
push
pop
xor
jmp
inc
jge
scas
pop
push
fs
and
xchg
fs
ja
hlt
add
ins
inc
xor
movs
xchg
push
cmp
outs
sti
mov
and
ins
jae
pop
iret
adc
mov
lds
out
xor
or
stc
pop
shl
add
inc
cmp
imul
lds
ds
cmp
dec
and
push
xlat
sub
xor
fistp
mov
pop
cmp
lock
xchg
mov
into
cdq
outs
lahf
jge
xor
mov
test
(bad)
int3
test
shl
rcr
adc
pushf
shl
pop
push
rcl
popa
cli
add
scas
imul
call
push
(bad)
lock
adc
repnz
xor
bound
hlt
inc
sub
neg
or
gs
shl
les
mov
push
(bad)
movs
mov
sub
ins
adc
retf
dec
xchg
adc
mov
scas
inc
aas
lds
add
(bad)
sti
repz
adc
push
rep
out
cmp
outs
not
punpckhwd
xor
lahf
stos
xchg
(bad)
cld
pop
into
out
iret
xor
je
xor
mov
mov
stos
nop
sbb
aaa
push
scas
pop
push
inc
data16
mov
icebp
(bad)
call
ins
rcr
xor
push
mul
xor
pop
stc
mov
adc
jo
adc
dec
(bad)
push
out
scas
fisub
jb
push
add
mov
push
mov
call
jne
inc
data16
xor
les
pop
mov
out
xchg
mov
or
dec
lahf
ret
stc
das
cmc
fcom
daa
out
xchg
bound
lods
inc
stos
movs
data16
nop
popa
mov
pop
icebp
out
pusha
add
push
cmp
aad
bound
ret
push
gs
xor
cmp
aas
ins
cmp
leave
add
jae
jle
xchg
xchg
(bad)
push
fmulp
push
(bad)
loop
idiv
movs
lds
ficom
jmp
mov
sub
xchg
fisubr
inc
lea
rcr
(bad)
xor
sbb
sbb
ins
pop
inc
push
cdq
sub
push
daa
aad
test
out
pushf
push
or
stc
(bad)
stc
lods
bound
push
adc
adc
mov
push
push
icebp
xchg
xor
stos
shr
dec
mov
cmp
xor
icebp
and
fs
push
xor
popf
lods
iret
clc
or
xchg
jb
int
add
js
jge
jno
fidiv
rol
daa
jns
bound
cwde
mov
sar
pop
ja
pop
adc
out
xor
dec
pop
sbb
(bad)
mov
retf
dec
es
and
enter
movs
xor
out
add
icebp
and
pop
sbb
cmp
and
shl
mov
jno
push
fstp
dec
mov
(bad)
cmps
pusha
daa
or
repnz
movs
adc
mov
xor
xor
xchg
int
aaa
scas
cdq
xchg
scas
in
or
pop
fst
jmp
and
sub
push
sbb
int3
test
push
cli
push
lea
(bad)
int
icebp
mov
mov
imul
pop
sbb
aas
sub
xchg
cmp
out
xchg
clc
leave
mov
cmp
inc
or
mov
nop
push
cld
add
sar
xchg
sbb
xor
pop
setne
das
push
mov
jp
sti
and
sahf
cmp
dec
icebp
and
lods
in
ffree
in
and
sbb
jl
pop
repnz
and
les
jmp
pop
add
sbb
in
js
sbb
outs
in
cmp
cdq
inc
mov
call
inc
mov
movs
pop
push
adc
frstor
lock
(bad)
out
gs
inc
adc
stc
push
fcom
jmp
fnsave
nop
dec
inc
inc
adc
sahf
cld
scas
neg
xchg
das
lea
xor
sti
cmc
lods
xor
inc
xor
sub
and
dec
push
or
or
mov
clc
and
xchg
mov
shl
and
mov
fiadd
mov
popa
in
dec
out
not
mov
mov
shl
loop
xor
adc
xchg
int
pushf
or
add
daa
lock
dec
cmps
ins
lahf
in
mov
outs
jmp
fimul
fldenv
sub
out
adc
or
(bad)
mov
mov
or
test
dec
lock
mov
loop
ds
lock
cli
mov
mov
dec
xchg
jb
gs
push
fsubr
lock
pushf
or
xchg
nop
cmp
cmp
cdq
xchg
shl
ret
je
mov
pop
shr
test
rcr
lods
adc
mov
and
jno
and
adc
or
push
rcr
in
cs
fadd
iret
cli
in
fbstp
(bad)
mov
aam
stos
inc
dec
sbb
lock
repz
mov
xor
push
sub
xlat
push
xor
fild
cmps
or
jbe
add
bound
pusha
sti
and
das
add
lods
fcomp
fld
push
ss
push
jbe
jmp
add
icebp
mov
xor
cdq
call
stos
jge
dec
mov
pop
xlat
xor
mov
sbb
fst
dec
sbb
repz
or
inc
mov
or
test
test
popf
cs
aas
sub
int3
xchg
not
inc
and
jle
mov
in
(bad)
xor
aad
inc
inc
inc
fdiv
or
mov
sub
test
xor
rcl
ins
lahf
inc
mov
xchg
xor
push
ja
xchg
mov
add
stos
nop
fdivp
jle
(bad)
xchg
iret
push
imul
sbb
iret
pusha
inc
mov
sub
push
(bad)
xchg
mov
loopne
(bad)
in
pop
push
and
fist
or
mov
cmp
inc
pop
lods
or
push
fs
loop
mov
mov
icebp
pop
add
add
adc
repz
sar
inc
inc
adc
add
dec
sub
dec
mov
cmp
out
fnstcw
stos
aam
mov
inc
out
arpl
pusha
adc
mov
xlat
call
shl
and
inc
js
mov
loop
cmp
iret
inc
ret
and
int
(bad)
jae
aam
inc
sar
lods
pushf
sbb
test
dec
ret
mov
ja
arpl
fnstsw
cld
mov
cmps
(bad)
mov
mov
dec
or
rcr
imul
jge
(bad)
cmp
pop
dec
out
push
xchg
adc
inc
inc
mov
xchg
movs
aad
mov
dec
jmp
jl
aad
xlat
push
fld
add
jb
not
cmp
je
mov
aaa
fld
xchg
xchg
jge
mov
jp
mov
and
or
aas
ret
ins
iret
test
lock
rcl
out
push
sti
sub
cmp
jmp
and
xchg
or
icebp
jno
and
div
cmp
out
int3
add
adc
ret
fisub
jo
cmc
sbb
or
int
fs
out
and
outs
fidiv
in
icebp
mov
add
cld
sub
mov
mov
(bad)
pop
into
dec
mov
out
xor
sbb
imul
dec
mov
xor
gs
xor
inc
xlat
sbb
sub
movs
call
sub
retf
xor
push
repz
jb
or
mov
outs
dec
fwait
xor
xor
ss
jne
ss
push
jle
mov
mov
inc
in
mov
add
cmp
(bad)
hlt
mov
sub
lock
jmp
iret
and
pop
or
mov
cmp
jo
dec
(bad)
xchg
jg
lahf
xor
sbb
ins
dec
xor
(bad)
adc
pop
or
and
mov
and
xor
jnp
addr16
in
fcmove
xchg
xlat
daa
aam
(bad)
pop
ja
mov
(bad)
cmp
inc
(bad)
add
add
inc
arpl
mov
dec
call
fld
outs
mov
inc
add
js
sub
push
ins
in
into
add
mov
push
push
push
push
hlt
out
das
stos
imul
pop
in
and
mov
adc
fisttp
pop
icebp
and
rcr
add
hlt
shl
or
adc
mov
mov
dec
add
add
sub
into
and
push
push
fld
lock
dec
call
ja
and
popf
mov
jbe
xlat
out
das
mov
loop
xor
aam
popa
mov
and
and
les
sar
out
test
dec
jg
xor
adc
retf
sub
adc
sbb
push
leave
imul
mov
fcom
xchg
jnp
rcr
jo
out
inc
sub
outs
dec
lods
mov
pushf
push
sar
test
mov
add
adc
xchg
(bad)
pop
cmc
mov
and
jb
pusha
xchg
pop
sti
dec
scas
inc
test
mov
mov
and
jno
pop
inc
hlt
mov
and
addr16
pushf
sbb
push
lods
je
push
cmp
cmp
mov
nop
lea
ret
xchg
jbe
push
jle
and
xor
icebp
push
es
mov
dec
cmp
cmp
sub
(bad)
mov
gs
idiv
aaa
fdivr
popa
adc
je
scas
out
dec
and
call
fs
adc
push
fldcw
adc
repnz
pop
and
mov
test
(bad)
test
int3
(bad)
in
fmul
arpl
stos
xor
jmp
rcl
mov
int3
dec
scas
nop
fadd
or
adc
imul
inc
sub
adc
fild
loope
and
fwait
pop
sub
jmp
les
cmps
fmul
jp
int
xlat
jle
xchg
cld
ins
fcmovne
out
inc
out
shl
dec
iret
add
jbe
popf
(bad)
les
aas
inc
popa
ret
push
dec
pop
movs
loopne
dec
dec
jl
sub
sub
inc
push
call
pop
push
xor
and
(bad)
rcl
adc
out
out
mov
jge
add
cmp
inc
shr
or
and
movs
cmps
ds
in
mov
mov
jb
js
adc
loop
or
adc
int
daa
push
xor
add
sbb
xchg
sub
inc
sub
push
pop
cmps
inc
jmp
test
loop
dec
xchg
and
mov
aaa
pop
or
mov
sub
mov
mov
shr
adc
sbb
cld
int3
jmp
cmp
pop
int3
aad
fwait
(bad)
or
mov
mov
jb
mov
inc
shl
mov
sbb
sub
stos
sbb
xor
mov
mov
add
aam
pop
cmp
xchg
jbe
push
ss
test
aad
fimul
and
sub
adc
or
cmp
xchg
xor
jge
pop
popf
pop
ror
xchg
pop
jp
gs
scas
xchg
push
mov
retfw
and
ret
add
xor
mov
js
push
fadd
lea
test
jns
(bad)
sbb
fisub
aas
xchg
sbb
(bad)
cmp
pop
int
outs
popa
jge
cmp
test
pop
mov
out
sub
test
xor
pop
inc
mov
push
int
ror
push
stc
mov
sub
hlt
movs
adc
pop
cs
sti
mov
xchg
jmp
jno
mov
je
aad
(bad)
dec
(bad)
mov
ins
sub
imul
in
pcmpeqd
retf
ds
ror
jg
clc
shl
sbb
xchg
repnz
in
push
in
scas
mov
push
mov
ret
fwait
outs
inc
cmps
cdq
inc
add
das
not
dec
push
pop
add
sar
hlt
add
add
fwait
pop
pop
jns
and
loop
je
cmp
daa
movs
movs
in
leave
adc
mov
sbb
jns
jg
sbb
dec
iret
cmp
or
mov
cmp
pop
fsub
fisttp
into
loop
shr
cli
mov
das
mov
xor
fild
jle
loopne
aaa
xchg
aas
jge
mov
adc
pop
jmp
loop
jmp
movs
aas
push
mov
jg
mov
sub
or
les
and
popf
pop
jle
add
cmp
xchg
pushf
dec
popf
inc
enter
sbb
sti
or
shl
and
ja
outs
ins
aas
sub
cmp
sub
repz
fisub
push
xor
sub
retf
and
pop
xchg
test
sti
dec
jmp
ins
sar
les
popa
inc
es
inc
adc
leave
inc
push
add
inc
mov
fs
adc
arpl
fdivr
fist
cmp
unpckhps
arpl
push
push
inc
adc
push
push
movs
pop
inc
int3
popa
dec
test
xchg
mov
in
xlat
jge
jbe
inc
and
sub
sub
jge
test
push
inc
sub
and
push
push
cmp
xor
mov
stc
fninit
inc
inc
repz
mov
mov
imul
fsubr
idiv
mov
lea
lods
mov
lds
or
test
arpl
fisub
ins
sti
adc
dec
repnz
cli
inc
cmp
adc
aaa
or
or
push
mov
test
(bad)
sbb
sbb
pop
push
in
sub
hlt
sub
sub
dec
or
(bad)
int3
iret
sbb
out
test
popa
dec
mov
dec
sub
call
fs
mul
(bad)
lods
and
std
cld
xor
(bad)
cdq
les
es
or
shl
cmp
fiadd
xor
dec
push
movs
iret
xor
or
sahf
push
shr
inc
or
adc
add
arpl
dec
jg
push
or
add
cmp
dec
pop
mov
dec
repnz
(bad)
push
sbb
sbb
loope
into
rcr
push
dec
dec
aam
or
xlat
xchg
in
adc
sub
push
sub
ss
cmp
push
sub
dec
pop
mov
push
lock
test
push
push
xchg
push
xor
push
sbb
inc
add
sbb
cmps
movs
repz
or
sbb
scas
push
cli
sub
or
add
lea
adc
jmp
shl
test
adc
fs
jbe
mov
not
ins
popa
loopne
push
ins
xor
sub
mov
mov
bound
(bad)
sbb
dec
push
out
dec
mov
fidivr
add
hlt
sbb
mov
retf
dec
(bad)
div
xchg
fcomp
jne
jge
int
dec
xchg
mov
fadd
retf
xor
adc
pop
mov
mov
xor
mov
xchg
pop
ins
cli
jmp
mov
fimul
call
jo
lds
stc
fldenv
stos
into
mov
es
ror
cmovae
inc
pause
ins
sub
imul
mov
js
inc
push
leave
(bad)
xor
and
pop
jne
hlt
xchg
push
adc
jno
sub
dec
(bad)
cmp
repnz
sub
dec
inc
pop
call
in
sbb
cwde
mov
repnz
mul
mov
and
cmps
loopne
mov
test
clc
mov
push
sar
stos
jne
shl
and
lahf
sar
mov
into
push
aad
jbe
retf
cli
xor
in
push
idiv
aam
push
pop
sbb
in
aam
aam
stos
jne
fnstsw
neg
repnz
sar
jns
les
fdivrp
push
repz
popf
imul
je
popf
xor
sub
xlat
xor
xor
xchg
cli
sbb
pop
sub
fwait
mov
mov
sbb
sbb
call
xchg
cmp
bound
cmp
mov
pop
jp
data16
cmp
and
xchg
stos
sahf
sub
adc
gs
sti
lods
or
cld
outs
push
xor
stos
scas
aad
xchg
out
or
scas
xchg
out
scas
sub
fwait
push
fldcw
std
pop
daa
loop
sbb
jb
jmp
xchg
adc
fldenv
lods
push
jp
stc
out
test
cmp
mov
xlat
sbb
movs
mov
fiadd
je
mov
push
retf
fisub
retf
pop
push
in
mov
enter
mov
add
mov
jecxz
xor
test
fisttp
push
mov
sbb
and
mov
dec
std
ror
inc
xlat
sub
jle
sub
cmovg
add
inc
xor
sbb
lods
scas
dec
cmps
xor
pop
gs
jl
pop
gs
repnz
jl
mov
sub
jbe
stos
pop
rcl
ins
sub
or
inc
out
out
pushf
xor
cmp
movs
retf
test
cmp
out
in
push
fbstp
pop
xchg
sub
out
cmp
cld
mov
jne
retf
ja
dec
jmp
sub
lahf
add
or
fist
hlt
and
loop
mov
paddb
(bad)
scas
push
cmp
cmps
pop
pop
leave
aam
xor
sahf
rcr
std
sbb
push
add
icebp
mov
daa
leave
cdq
pop
mov
pop
adc
stos
and
loope
xchg
jne
jecxz
mov
jg
ins
sti
rcl
adc
push
push
and
mov
xor
adc
pop
(bad)
push
cmp
pop
inc
enter
call
or
ins
leave
push
cs
pop
mov
(bad)
sub
and
je
inc
xlat
xchg
mov
(bad)
jmp
repz
bound
push
bswap
sbb
xchg
test
xchg
mov
adc
std
hlt
xchg
jno
push
adc
xchg
or
adc
push
push
pop
ds
pop
aas
mov
sub
xchg
push
iret
outs
pop
mov
adc
adc
fmul
mov
push
enter
fbld
fadd
xor
(bad)
mov
dec
mov
shl
vpunpckhqdq
dec
cmps
shr
sar
in
retf
adc
xchg
jle
inc
mov
pop
mov
and
jecxz
fmul
sar
loope
(bad)
sahf
mov
out
out
xor
push
(bad)
ja
pop
jp
fimul
aad
ret
push
jl
xor
push
sub
jp
pop
and
mov
push
adc
sub
fcom
mov
out
and
mov
retf
sar
idiv
rol
pop
mov
jecxz
(bad)
jb
(bad)
fsub
das
mov
out
nop
lock
imul
pop
imul
dec
cmc
movs
shl
cli
mov
aad
mov
inc
fwait
mov
enter
stos
mov
xchg
push
sbb
shl
aam
xchg
cmp
push
jb
js
jge
xchg
out
cmp
dec
sahf
data16
adc
es
test
cld
push
cdq
lds
(bad)
cs
mov
add
inc
mov
sub
cld
int3
stos
and
(bad)
xchg
jno
js
ror
sbb
retf
pop
aad
mov
mov
cmc
push
cdq
leave
fadd
repz
addr16
or
push
jge
pop
dec
pop
imul
imul
pusha
vprotd
sub
enter
sub
adc
sbb
pop
pop
jg
dec
adc
mov
and
mov
adc
pop
es
repz
test
sbb
frstor
ss
clc
outs
pop
sbb
imul
cld
jmp
inc
sub
adc
mov
ret
shr
mov
cmp
ins
jo
sub
cmp
arpl
mov
jecxz
aam
inc
cdq
retf
xchg
jge
jb
retf
fimul
pushf
jns
int3
scas
push
(bad)
retf
icebp
dec
fs
out
out
std
push
or
cmc
icebp
jmp
add
and
xlat
cmp
push
nop
or
mov
and
xchg
std
mov
xchg
xchg
xor
stos
neg
ss
push
fisubr
xchg
inc
mov
test
inc
jge
xor
test
lock
mov
add
xchg
and
(bad)
fisttp
mov
es
and
cld
mov
not
xor
push
sub
cdq
inc
push
dec
inc
sbb
pop
adc
mov
lods
xchg
push
test
adc
pop
test
push
mov
addr16
pushf
mov
lods
or
cmp
sub
nop
(bad)
mov
adc
idiv
xlat
xchg
pop
jbe
out
fisubr
into
pop
or
add
jmp
and
sbb
in
int3
cmp
and
xchg
stos
sysenter
inc
xor
iret
adc
stos
inc
dec
adc
inc
and
in
xchg
xchg
push
push
or
sti
(bad)
mov
add
stc
les
test
aam
sbb
or
add
push
int
nop
scas
ss
movs
jg
pop
mov
mov
jo
push
loopne
mov
ss
cmp
cmp
lods
sub
jnp
cmps
stos
mov
cmp
shl
add
cmps
std
xchg
mov
pop
and
add
sbb
inc
aad
fcomp
pop
arpl
cmp
in
(bad)
adc
fisubr
aas
adc
into
fmul
pop
jp
cmp
iret
and
cmp
add
gs
iret
push
and
mov
fidiv
ret
xor
jmp
imul
xchg
out
xchg
cmps
addr16
dec
inc
xor
push
cli
pop
sbb
sar
les
fdivr
mov
xlat
xchg
in
sbb
test
cdq
aad
imul
push
mov
dec
shl
dec
mov
xor
rol
stc
jo
or
fidiv
jnp
mov
retf
dec
ja
inc
push
movs
pop
mov
push
imul
js
aam
fidiv
test
mov
retf
sbb
mov
xchg
mov
int
push
dec
fwait
cmp
push
jb
jnp
and
loop
dec
xchg
in
mov
xor
push
outs
inc
lea
jo
leave
sbb
stos
aam
mov
(bad)
mov
or
loopne
push
cmc
jae
cmp
mov
jp
push
jns
adc
mov
lods
lock
mov
mov
cwde
cmp
jb
imul
(bad)
je
arpl
cmp
xchg
sbb
or
fldenv
mov
dec
sub
ds
and
popa
fs
lods
neg
and
adc
inc
push
inc
dec
enter
pop
outs
sbb
and
icebp
and
hlt
jbe
mov
and
jp
and
pop
adc
mov
dec
(bad)
push
out
add
jmp
mov
jmp
in
xchg
(bad)
gs
les
pop
jno
popf
es
jno
add
lods
call
sbb
dec
nop
mov
mov
xchg
sbb
cmp
into
ins
xchg
dec
dec
ds
dec
sbb
xor
push
test
aas
and
int3
inc
icebp
or
push
lods
cmps
sub
xchg
xor
sub
xor
sub
push
popa
adc
jl
add
mov
call
dec
mov
repz
test
or
inc
mov
push
retf
mov
jae
add
inc
push
fs
fdivr
pop
or
mov
fisttp
mov
out
sar
add
popf
or
xlat
or
dec
mov
dec
inc
in
ret
ins
int
dec
lods
cmp
cld
xchg
je
mov
leave
jp
push
es
fsubr
push
add
movd
sub
jmp
push
inc
fistp
mov
cmp
dec
mov
std
pop
xor
jmp
mov
adc
jge
adc
loop
sub
jne
popa
push
sbb
imul
cmps
and
or
cmp
nop
in
std
xchg
inc
js
cli
mov
push
mov
jl
sub
adc
push
add
mov
mov
jmp
jg
out
out
xchg
mov
and
cs
mov
mov
loopne
div
aad
push
mov
sbb
cmp
mov
lods
cmps
dec
fcomp
xchg
sahf
xor
inc
sbb
dec
lock
cmp
out
mov
push
add
sub
add
sub
lods
addr16
mov
add
mov
jmp
and
lods
loopne
pushf
jg
pusha
cld
cmp
ret
clc
cld
fisttp
push
gs
test
(bad)
pushf
mov
test
pop
popf
aas
mov
retf
fstp
jae
xchg
jnp
aam
jecxz
mov
adc
jge
xchg
push
sub
jle
xor
fnsave
ins
iret
cmp
sub
jle
cmc
add
xor
lock
rcl
cmps
xor
(bad)
rol
or
mov
push
icebp
push
in
outs
dec
lds
inc
in
cmp
loope
inc
cwde
push
leave
push
push
or
bnd
jmp
mov
jne
push
ja
lods
addr16
ror
sub
dec
sar
loop
int3
adc
push
mov
shl
mov
jb
and
repnz
add
and
daa
int
xor
xchg
repz
push
push
lar
int3
icebp
(bad)
(bad)
push
outs
movs
push
int
mov
mov
xchg
mov
fcomip
sbb
dec
xor
sbb
push
xchg
or
ret
and
xchg
inc
cld
pop
aam
jbe
cmp
lds
mov
dec
unpcklps
fs
cmc
ret
push
scas
(bad)
sti
sti
mov
aas
inc
cdq
push
jl
push
or
ins
mov
dec
or
(bad)
jb
mov
int3
push
movs
ret
or
mov
jb
gs
and
xchg
retf
xor
cmp
mov
(bad)
stos
jecxz
mov
adc
cmp
jns
loopne
jb
adc
retf
jl
aam
jnp
test
dec
push
inc
mov
out
je
cmp
into
xor
dec
rol
dec
inc
daa
and
xchg
fcomp
fdivr
jns
fiadd
xor
dec
(bad)
(bad)
inc
inc
jbe
sti
pop
(bad)
fsubr
imul
and
jae
add
not
xor
int
adc
loope
add
jecxz
mov
sbb
mov
add
mov
and
jne
ins
out
sbb
sub
mov
adc
sub
iret
jle
aas
pop
lock
push
fsubrp
dec
jge
xchg
pop
fnstsw
aam
dec
ja
(bad)
fisub
lahf
test
retf
(bad)
dec
psrlq
stc
xchg
sbb
cmp
stos
push
(bad)
cwde
out
pop
lods
push
hlt
and
xor
pop
fdivr
outs
adc
(bad)
retf
into
or
push
pop
lods
(bad)
sti
and
ins
jecxz
jecxz
dec
in
sbb
cmp
call
call
pop
sub
mov
jl
fisub
pop
test
inc
adc
jns
movs
add
sub
test
dec
xor
into
mov
div
add
xor
mov
adc
push
jnp
cmps
movs
shl
and
outs
xor
jle
popf
ret
test
jno
imul
push
outs
sbb
lods
imul
loope
xchg
daa
outs
pop
inc
(bad)
jo
test
push
lods
sbb
mov
xchg
jg
ss
out
mov
retf
es
sti
mov
or
ins
test
jge
sub
sbb
xchg
fwait
jl
stos
je
adc
jns
fs
mov
stos
xchg
jns
daa
pop
int3
std
enter
inc
inc
gs
push
hlt
movs
not
retf
xchg
adc
psraw
push
and
icebp
pop
mov
mov
dec
pop
sbb
(bad)
lock
adc
in
jno
cmp
jl
inc
(bad)
nop
pop
sbb
loope
xor
add
dec
jbe
sbb
xchg
into
sub
jle
enter
clc
into
sbb
jl
push
jmp
sti
sar
aam
mov
ret
scas
cs
pop
lods
sbb
js
cmp
adc
fnstcw
jns
ss
jae
dec
xor
ss
retf
fcomp
mov
test
cmp
and
cmps
pop
mov
outs
fsub
inc
jns
and
sbb
out
mov
fst
adc
mov
mov
inc
aaa
cmps
mov
mov
in
fwait
push
fidiv
push
in
mul
or
idiv
lea
test
(bad)
cmp
sbb
cmc
sbb
cmp
dec
sahf
pop
lahf
ror
dec
add
and
add
ds
push
cmps
lds
jecxz
mov
pop
mov
stos
mov
jecxz
(bad)
clc
icebp
add
push
ds
adc
ins
rcr
mov
aam
cdq
sub
or
shl
clc
es
fcom
outs
mov
sub
loopne
xor
jg
inc
inc
imul
and
sub
mov
in
inc
inc
jge
rcr
sbb
sbb
js
jg
xor
enter
dec
fnsave
leave
adc
sub
cmc
stos
add
sar
adc
stos
sub
jne
pop
push
jmp
jno
jecxz
aas
push
stos
jge
sbb
push
out
and
jle
or
cmp
pop
es
xor
mov
sub
pop
mov
sbb
shr
inc
sbb
dec
nop
gs
arpl
inc
dec
mov
adc
lods
adc
addr16
lods
test
fsub
sbb
mov
dec
test
inc
push
inc
dec
jae
imul
xchg
mov
sar
and
adc
or
aas
sbb
add
xor
lahf
and
mov
sahf
and
adc
(bad)
movs
mov
dec
adc
dec
mov
mov
mov
movs
pop
(bad)
jbe
pop
pop
adc
sub
cmc
xlat
(bad)
imul
sbb
sbb
and
inc
cmc
mov
(bad)
call
jge
dec
cdq
imul
leave
(bad)
pop
test
out
(bad)
mov
aad
fisub
popa
repnz
jecxz
mov
lods
jp
test
stc
dec
test
jae
jne
mov
cmp
test
out
lock
dec
lahf
add
rcl
es
cmp
in
dec
fld
pop
out
jmp
mov
xchg
std
xor
jns
fdivr
fiadd
jne
popf
std
fsub
pop
pop
frstor
fwait
inc
push
pop
lods
(bad)
scas
mov
mov
das
push
cmp
mov
(bad)
int3
xor
pop
xor
sbb
popa
(bad)
jae
js
repz
dec
ror
sar
mov
arpl
pop
icebp
ss
mov
repz
pop
pushaw
adc
leave
xor
sti
cmc
inc
cmp
daa
int3
or
ret
inc
clc
or
call
mov
out
and
mov
sbb
nop
jge
xor
xchg
test
lock
(bad)
fist
or
sbb
mov
xchg
inc
sbb
loope
lock
gs
outs
pop
lods
sub
mov
add
inc
dec
cld
cmp
aam
je
outs
ins
sbb
add
in
mov
rcl
shr
and
and
dec
jnp
sysenter
mov
mov
jno
(bad)
sti
(bad)
sub
inc
sar
push
mov
(bad)
in
jl
leave
lahf
in
sbb
sbb
jle
push
push
xor
stc
pop
clc
add
sbb
(bad)
or
xor
mov
mov
pushf
ja
imul
push
xchg
sub
cmp
mov
imul
cmps
push
rcl
sbb
mov
or
retf
mov
stos
push
sub
(bad)
leave
cmp
adc
ss
mov
sbb
div
int3
push
add
cmp
mov
sub
test
mov
mov
mov
sbb
push
pushf
sbb
sbb
inc
addr16
pushf
or
mov
test
movnti
xchg
into
loop
ret
arpl
push
ud0
movs
movs
out
sar
xchg
dec
out
mov
ret
cmp
aam
out
jno
sbb
adc
imul
mov
sbb
out
ficom
dec
imul
xor
push
retf
retf
repz
adc
sub
xchg
in
sbb
out
xchg
movups
ja
xchg
(bad)
xlat
jl
mov
ds
add
push
sbb
jns
pop
adc
sti
dec
cmp
fs
jg
add
dec
movs
ret
dec
cld
push
inc
ins
add
das
and
fiadd
cmp
adc
addr16
mov
sbb
and
lahf
add
fnstcw
not
cld
icebp
xchg
movs
test
in
fwait
xor
loope
mov
push
mul
ins
jle
test
mov
mov
es
jne
xor
nop
movs
int3
int3
sbb
mov
adc
jmp
cld
mov
out
gs
jns
dec
pop
adc
pop
(bad)
sbb
fisub
xchg
iret
cdq
mov
ss
add
rcr
jg
bnd
hlt
jne
outs
dec
(bad)
jne
xchg
pop
pop
jb
shr
and
lea
test
lods
inc
lods
ins
push
and
pop
push
xchg
adc
enter
adc
xor
push
imul
repnz
dec
pusha
adc
lock
jmp
ins
test
ss
stos
mov
lds
mov
mov
mov
push
cmp
pop
pop
ins
inc
fmul
addr16
cli
mov
add
pop
push
stos
mov
mov
outs
rol
movs
fs
push
xchg
std
outs
daa
add
jmp
retf
out
in
dec
jl
inc
jg
int
dec
add
sbb
xchg
shr
pop
mov
icebp
fistp
xchg
enter
cmp
mov
jne
lahf
xor
cmp
call
mov
sub
iret
in
test
scas
scas
loop
sub
sbb
sar
inc
inc
ds
call
push
mov
push
repnz
cs
call
sti
clc
cmp
sti
ds
mov
(bad)
imul
jecxz
retf
dec
clc
inc
pop
inc
cwde
adc
jb
mov
push
pop
or
imul
push
xchg
dec
ss
add
or
add
mov
stc
mov
inc
sar
retf
xchg
xor
cmp
retf
inc
mov
xor
cwde
xchg
test
test
and
inc
retf
mov
or
jl
fsubr
neg
xor
xlat
popa
pop
and
stos
jnp
pop
jbe
push
(bad)
enter
es
outs
mov
dec
rcl
(bad)
loopne
fdivr
mov
jmp
ror
xchg
fcmovnbe
adc
pop
jno
popa
push
popf
add
inc
out
pop
outs
mov
in
stc
outs
leave
test
cmps
loopne
xor
mov
sbb
push
data16
out
hlt
aam
mov
jmp
mov
jl
ins
(bad)
push
xchg
and
jae
dec
pushf
lods
fs
out
aam
clc
hlt
mov
shl
lods
in
std
(bad)
popa
push
jo
ins
adc
ds
rol
clc
pop
and
jnp
jge
push
fidivr
mov
pop
fmul
dec
pop
cmps
mov
ret
sbb
xor
add
call
repnz
mov
std
rcl
pop
lods
and
dec
ja
retf
xchg
pop
(bad)
fnsave
dec
enter
mov
ins
je
mov
mov
add
xchg
out
lock
fadd
mov
add
pop
movs
dec
inc
sar
xlat
pop
(bad)
ja
jne
dec
dec
add
or
xchg
out
inc
cli
mov
cmp
in
and
or
or
sar
mov
or
fisub
jbe
mov
dec
sub
cmova
inc
and
push
sub
jmp
scas
lea
dec
xchg
loop
cwde
and
and
mov
repz
add
cmp
adc
loopne
jne
inc
jb
pop
add
into
hlt
pop
adc
call
call
push
fisubr
inc
cmp
cld
xlat
dec
sub
inc
hlt
gs
outs
dec
shl
loope
dec
xchg
call
test
jno
mov
sbb
push
mov
adc
popf
xor
mov
scas
mov
cli
jo
jns
(bad)
stos
mov
mov
lahf
add
add
pause
std
clc
aam
lods
ficomp
dec
inc
xchg
mov
sbb
in
out
push
cmp
mov
inc
(bad)
cli
es
out
sbb
rcr
inc
ja
xchg
nop
push
ja
push
sbb
adc
jne
jo
adc
cmp
popf
mov
push
aaa
inc
push
ret
mov
push
(bad)
sub
or
daa
inc
rol
mov
ficomp
cmp
faddp
xchg
jnp
sbb
scas
das
mov
in
rcl
add
push
inc
add
jmp
pop
xchg
arpl
mov
test
cmc
cmp
cmp
rol
jae
mov
push
pusha
pop
sub
in
in
and
outs
(bad)
fcmovu
cmps
call
into
sbb
jmp
or
mov
js
jnp
stos
or
mov
jnp
(bad)
loop
sub
jo
imul
jmp
mov
and
dec
sbb
ret
mov
mov
ins
sbb
dec
ins
call
dec
loopne
out
xchg
or
xchg
call
mov
je
nop
jne
dec
xor
cmp
popf
jmp
add
aaa
jp
fs
jmp
popa
jg
push
push
mov
(bad)
test
stc
nop
xor
fcmovnbe
sbb
jns
lock
lock
mov
mov
or
mov
pop
add
adc
and
mov
jae
mov
mov
(bad)
jnp
psubb
push
cdq
adc
add
cmp
add
loopne
cld
push
add
in
jg
das
dec
test
mov
aas
int3
leave
sbb
imul
fadd
xor
and
in
mov
sahf
jae
jno
jl
push
inc
aaa
mov
adc
push
movs
sub
sub
int3
addr16
mov
mov
in
cmps
popa
fdiv
sub
addr16
adc
jge
sub
lods
int
repnz
(bad)
sahf
dec
push
adc
xchg
(bad)
dec
mov
xchg
icebp
mov
in
dec
dec
icebp
sbb
inc
icebp
aad
cmps
test
xchg
and
mov
ret
nop
clc
xchg
loopne
add
imul
out
es
add
pop
xchg
movs
adc
sbb
pop
call
jno
dec
pop
nop
sbb
ret
dec
pop
out
sub
rol
sub
sbb
vpaddw
jp
mov
sahf
out
xchg
xchg
or
lods
loope
int3
icebp
nop
mov
push
gs
ret
out
test
mov
stos
sbb
add
xor
or
pop
aas
frstor
cld
sub
call
cmp
and
in
jbe
cmps
leave
mov
bound
shr
aas
push
test
xchg
call
xchg
mov
pop
mov
xlat
mov
and
inc
jne
push
ins
aam
fidivr
movs
outs
add
movs
loopne
sub
xchg
xchg
inc
bound
pop
ret
ins
lahf
shl
ret
pusha
popf
xlat
push
enter
adc
or
add
les
int3
scas
and
xor
inc
cmps
mov
adc
push
push
push
outs
fcomp
idiv
pop
js
inc
out
enter
aam
jg
xor
sti
lahf
scas
jnp
inc
xor
outs
xor
jl
fwait
(bad)
fmul
arpl
out
data16
in
xchg
jle
adc
int3
out
scas
push
(bad)
pop
aam
(bad)
fucomi
mov
xchg
bts
cmps
mov
ss
icebp
out
lea
xor
out
dec
ins
shr
les
jo
(bad)
and
mov
jae
sti
push
popa
scas
cmp
add
mov
jle
inc
add
arpl
cs
xor
lahf
in
lods
pusha
lds
jae
jno
in
cmp
add
shl
test
add
fbstp
pop
mov
sub
pop
scas
xchg
in
and
add
xchg
mov
mov
xchg
mov
fdivr
(bad)
in
xor
fist
adc
loope
(bad)
in
enter
pop
adc
fs
inc
pop
or
push
out
pusha
iret
xor
sbb
jmp
cmp
xchg
test
push
sub
dec
mov
pop
stc
rol
rcr
loopne
out
rcl
pop
fcmove
jle
lods
jl
arpl
jmp
not
pop
movs
int3
push
xor
in
or
(bad)
mov
add
jnp
adc
pusha
nop
cmp
xchg
sbb
pop
rol
cdq
mov
cmp
jmp
push
std
iret
jb
push
sbb
ins
and
sahf
cmp
xchg
or
xchg
jp
inc
sub
mov
int3
shl
hlt
aaa
nop
lds
adc
mov
(bad)
push
push
sbb
sub
pop
outs
rcr
sbb
sti
add
or
cmp
out
push
pop
leave
jns
or
cmp
jnp
(bad)
pop
addr16
jno
arpl
inc
fwait
(bad)
lea
push
movs
xor
sub
mov
push
cmps
xor
add
sahf
in
in
or
leave
xchg
xor
sahf
mov
dec
push
add
mov
cld
lods
xchg
sub
cmp
inc
jb
enter
ret
xchg
stos
sbb
inc
cmp
or
mov
add
cmp
push
jmp
je
(bad)
mov
and
clc
adc
xchg
jnp
dec
xor
xor
outs
adc
pop
aam
mov
das
stos
je
adc
test
repz
xchg
adc
shl
ja
sbb
outs
xchg
fdiv
imul
push
jo
mov
cmp
daa
out
sub
cmps
pop
pop
push
add
cmp
sub
mov
(bad)
cli
xor
iret
inc
dec
(bad)
mov
mov
(bad)
xchg
xchg
test
in
cmc
sbb
aam
jge
in
and
stos
jns
and
fucomp
mov
xlat
rcr
inc
data16
mov
aas
gs
fwait
hlt
dec
pop
inc
jns
inc
adc
mov
fsubp
mov
(bad)
aaa
idiv
push
sbb
cmp
or
outs
repz
push
add
sub
loop
xlat
mov
xchg
rol
or
in
mov
leave
pop
ret
fbstp
movs
retf
fist
inc
ds
mov
jb
add
fadd
cmp
push
fsubr
fcmovu
mov
retf
mov
mov
ins
addr16
out
popa
test
cmp
pop
push
out
or
cmp
fiadd
fld
dec
fs
imul
sbb
push
jne
icebp
iret
cmp
arpl
adc
popf
inc
call
cmps
(bad)
icebp
fnstenv
mul
cmp
js
xor
adc
xor
xchg
lds
sub
jns
jg
rcl
pusha
mov
pop
ins
data16
sub
das
pop
push
mov
adc
mov
jl
adc
lea
cs
push
xor
and
cli
push
lahf
cli
bswap
outs
mov
test
bound
xchg
pop
in
xor
rol
sub
mov
es
pop
hlt
cmps
jecxz
inc
jle
ins
cmp
inc
inc
outs
gs
push
test
or
pop
(bad)
xor
mov
or
or
fild
enter
pop
mov
das
push
sahf
dec
js
mov
mov
dec
xchg
shl
imul
dec
iret
lock
xchg
sar
sar
test
sub
sbb
jmp
sahf
ja
or
(bad)
movs
gs
fisubr
retf
xchg
jecxz
movs
xchg
aam
mov
xchg
(bad)
jg
loope
idiv
cmp
sub
add
push
cs
imul
fs
lea
xor
inc
out
outs
inc
sub
add
int3
sahf
retf
jge
adc
mov
repnz
movs
xor
add
xchg
sbb
mov
fadd
ss
or
lock
add
mov
enter
jns
outs
cmp
cmp
pop
dec
or
and
jg
sub
mov
data16
js
inc
jp
jo
jle
popa
push
sub
fsubr
cdq
fist
add
gs
mov
aaa
adc
shl
push
jecxz
xchg
fsubr
rcr
cmp
mov
out
dec
and
daa
xchg
mov
sbb
out
sub
push
scas
and
and
pusha
cmp
jns
xchg
lods
pop
or
xchg
sub
and
pop
jns
shl
push
nop
push
add
sub
lods
adc
lea
lods
mov
mov
retf
lahf
or
rol
mov
mov
pop
movs
and
aad
mov
adc
mov
cld
ins
jl
fst
ss
(bad)
rcl
bound
lock
adc
mov
outs
imul
pop
fst
jmp
dec
inc
cld
cmp
sar
add
ficom
mov
mov
test
dec
jge
fsub
lahf
xchg
outs
jo
test
push
pop
mov
mov
addr16
jmp
lods
(bad)
repnz
repz
pop
in
push
jae
or
lods
add
je
in
mov
ins
mov
adc
dec
(bad)
cli
pop
popf
daa
fdiv
mov
mov
jg
jmp
inc
dec
fild
(bad)
in
stc
gs
rol
lea
rol
cmp
(bad)
(bad)
adc
mov
mov
push
pusha
sub
rcr
xchg
push
loope
xor
out
dec
aad
adc
push
inc
xacquire
cmp
jns
lds
(bad)
fistp
ror
push
lock
and
aad
add
mov
sub
add
xor
jnp
lahf
xlat
push
push
aad
test
and
dec
mov
mov
or
push
std
std
retf
and
imul
movs
ds
xchg
jne
in
scas
gs
mov
dec
and
(bad)
xor
dec
push
repz
into
movs
repz
retf
mov
mov
xor
pop
movs
and
mov
out
xchg
cs
add
push
pop
xchg
push
inc
add
jns
iret
push
fsubr
fld
ds
not
mov
pop
imul
fcmovnb
sbb
ds
cmps
jns
loop
jle
aam
and
inc
std
xchg
jo
int
cmps
loopne
mov
test
xor
mov
test
jnp
outs
or
aaa
aam
fst
cmpps
out
mov
scas
add
test
sub
adc
adc
mov
mov
mov
adc
push
or
shr
ror
and
outs
dec
push
popa
push
mov
xchg
shl
in
cmps
stos
xlat
(bad)
pop
adc
or
jge
stos
pushf
shl
inc
push
gs
fst
fstp
push
lahf
dec
test
xchg
enter
adc
popf
and
ss
mov
mov
sub
hlt
(bad)
jmp
jo
push
add
aad
sar
adc
es
xchg
adc
shr
xor
loopne
stos
mov
mov
out
mov
fidivr
scas
call
popa
retf
jge
mov
add
jmp
fistp
jle
xchg
jg
std
push
add
add
push
adc
jbe
imul
out
lahf
aam
pop
mov
xor
(bad)
jnp
sub
aas
fmul
jno
inc
sbb
cs
mov
sbb
push
ror
hlt
mul
xor
push
in
inc
push
pop
adc
jns
repz
inc
dec
add
add
out
fdivr
mov
xchg
cmps
jae
jmp
clc
mov
cmc
bound
xchg
and
daa
mov
cmp
pop
xchg
cwde
inc
add
inc
shr
pop
cmps
xlat
inc
aam
popa
lahf
arpl
pop
push
je
xor
sbb
xchg
mov
and
call
cdq
pop
xchg
repz
or
clc
mov
adc
and
scas
popa
pop
rcl
and
scas
sbb
mov
std
stos
mov
dec
sbb
and
or
out
push
adc
sbb
in
call
and
fucom
dec
bound
mov
(bad)
jnp
xchg
outs
aas
adc
pop
jo
std
pop
and
jo
fcom
jmp
push
mov
shr
icebp
sub
in
inc
cwde
lods
into
ja
mov
in
inc
outs
mov
stc
sbb
pop
xor
mov
dec
dec
mov
pop
mov
jg
dec
loope
jnp
mov
push
push
mov
adc
xchg
movs
inc
pop
push
pusha
into
mov
and
jg
cwde
add
inc
scas
jmp
cdq
xchg
inc
mov
cdq
pop
and
repnz
mov
gs
dec
lods
xchg
jns
dec
mov
retf
dec
or
cmps
lds
test
dec
mov
das
sbb
pusha
xor
mov
stos
inc
(bad)
mov
bound
test
jo
jnp
jmp
ficom
into
xchg
scas
inc
push
ja
scas
test
push
push
inc
int3
js
xor
gs
(bad)
xchg
movs
push
and
cmps
bound
cld
sub
sahf
inc
mov
(bad)
adc
xor
test
daa
int3
pop
arpl
addr16
dec
adc
jmp
push
pop
sub
aaa
push
sub
movs
ss
xor
sub
test
sbb
pop
dec
pop
adc
mov
imul
xchg
into
cs
inc
or
add
div
cmp
stos
pop
jle
lahf
cmp
pop
loop
hlt
sti
test
retf
jnp
pop
mov
test
dec
repnz
ret
xchg
lods
sub
test
ins
cmp
pop
push
adc
xchg
stos
sub
fld
pop
rcr
mov
add
shr
daa
mov
jl
shr
mov
jnp
adc
jbe
and
nop
pusha
shl
pop
fisttp
fwait
add
test
dec
aad
icebp
pop
sub
popf
push
adc
pushf
iret
stc
lds
cmps
mov
and
mov
mov
mov
imul
popf
inc
add
push
adc
mov
pop
ficom
stos
repnz
push
dec
loope
pusha
sub
inc
inc
clc
call
ds
aad
xor
mov
push
ins
push
jmp
inc
jg
push
arpl
sub
sub
fimul
add
jge
inc
inc
inc
inc
sub
idiv
inc
dec
das
mov
adc
sar
cmp
mov
jle
xor
into
pop
mov
loop
and
dec
call
jae
call
fninit
pop
aaa
movs
std
mov
cdq
jl
push
out
xor
std
pop
(bad)
jae
mov
mov
cmps
in
movs
popa
inc
add
sub
mov
arpl
(bad)
push
pop
dec
sbb
inc
stos
jle
jae
out
pop
sbb
xor
xchg
rcr
sar
iret
pop
mov
jbe
mov
sub
adc
shl
fidiv
lock
mov
push
enter
fnsave
mov
std
mov
push
xchg
push
pusha
std
sub
stos
xchg
sub
cmp
dec
retf
add
jmp
lock
sub
fld
xchg
sbb
pop
mov
fs
dec
lods
addr16
mov
daa
xchg
mov
and
scas
sbb
es
push
test
retf
xchg
das
sti
jg
mov
ja
mov
test
jl
fnstenv
jg
pushf
xor
dec
adc
outs
push
cmc
xor
mov
xor
fxam
je
sbb
jns
mov
xchg
and
dec
cmp
ins
mov
xor
inc
div
int
cmc
fisttp
xor
movs
sub
xchg
add
pop
sub
and
fmulp
retf
aad
stc
sahf
dec
add
push
inc
sbb
(bad)
into
adc
dec
fldcw
push
mov
pusha
jbe
in
out
or
mov
lea
jns
add
cmps
test
xchg
ret
jae
stos
jmp
repnz
lock
dec
mov
and
arpl
sub
sbb
jecxz
iret
push
shl
mov
bound
(bad)
lds
adc
loope
push
fisttp
(bad)
idiv
xor
test
mov
std
adc
repz
xchg
clc
retf
xchg
call
mov
jo
xchg
mov
pop
aas
mov
cld
xchg
mov
in
xor
jmp
not
inc
clc
adc
call
movlps
inc
sub
outs
test
out
stos
stos
jb
mov
inc
(bad)
adc
xchg
ss
sbb
xor
push
adc
xchg
scas
xchg
xchg
pop
push
dec
jg
mov
(bad)
pop
sub
retf
jmp
mov
cli
pusha
sub
in
add
mov
(bad)
fnstenv
sub
cld
out
fldcw
sti
mov
jle
imul
cld
sti
outs
test
imul
mov
ficom
dec
mov
or
popa
lds
and
shl
mov
add
cmc
or
inc
pop
(bad)
fimul
and
sub
jae
push
add
jle
call
jo
imul
idiv
fdivr
mov
sub
jnp
nop
mov
test
in
lds
call
call
jbe
cmp
mov
sub
sbb
push
fs
sbb
setbe
dec
inc
gs
pusha
jmp
jno
xchg
aam
fstp
inc
mov
fimul
adc
fstp
jecxz
into
outs
lea
loop
xchg
or
scas
(bad)
sahf
xchg
jnp
loopne
aad
mov
imul
stc
sbb
daa
fs
jns
je
mov
cmp
jbe
mov
or
call
imul
push
jbe
xchg
js
jle
jo
les
lea
(bad)
sub
or
push
ret
mov
(bad)
retf
inc
mov
and
or
sbb
lds
mov
(bad)
in
movs
xor
sbb
mov
cmp
jle
jo
pop
out
mov
push
xor
mov
imul
or
or
sub
and
int
sbb
mov
imul
cmc
dec
jl
or
push
ret
mov
and
adc
and
call
jns
dec
lds
aaa
lea
jno
and
sub
je
in
xor
lds
inc
ins
jp
jg
fild
hlt
dec
or
sub
or
fimul
inc
cmp
add
arpl
rol
out
mov
fadd
pop
sbb
push
retf
sbb
inc
(bad)
shl
int3
jno
aaa
dec
jno
in
(bad)
ret
int
(bad)
fimul
xchg
cmp
dec
adc
scas
adc
add
popa
mov
fsub
sub
out
mov
fisubr
pop
inc
int3
xor
sbb
dec
push
pop
aas
hlt
leave
movs
les
jb
add
jecxz
xchg
cs
sti
push
ss
sbb
mov
hlt
adc
push
mov
jnp
in
pushf
dec
mov
int
mov
cmp
sub
rcl
leave
mov
pop
cmp
loop
aaa
inc
data16
(bad)
out
pop
es
outs
adc
adc
std
aaa
mov
retf
pop
cmps
xor
dec
mov
add
test
leave
aaa
dec
and
jmp
ss
shr
lods
sbb
or
call
(bad)
imul
adc
stos
nop
mov
and
imul
xchg
and
lods
adc
jl
test
popf
repnz
mov
lods
call
sti
mov
in
adc
rcr
or
or
fwait
or
and
push
sahf
or
es
dec
shl
test
pop
leave
sbb
fcomp
sbb
shl
cwde
int
jbe
jb
ret
jnp
xor
mov
jno
xor
test
or
xor
clc
loop
mov
mov
movs
sub
fimul
test
fdivr
cmp
outs
call
sub
or
pop
aam
or
punpckhdq
out
or
or
icebp
mov
and
test
cmp
(bad)
inc
test
div
fnstsw
push
shl
xchg
lahf
push
repz
std
in
sbb
(bad)
xchg
mov
cmp
sbb
fs
cmp
int3
loopne
push
adc
call
adc
add
in
stc
into
jbe
into
fdivr
adc
xchg
jb
sbb
add
neg
pushf
ds
xchg
ja
leave
(bad)
not
inc
ret
cmps
and
jae
ret
jnp
es
out
xor
aaa
popf
je
mov
int
lock
jno
call
mov
push
push
test
mov
retf
xchg
out
ds
xlat
push
mov
xor
mov
jp
hlt
lods
popf
lea
out
(bad)
daa
xchg
cmp
test
(bad)
(bad)
adc
inc
and
xchg
sbb
icebp
and
pop
iret
inc
cmp
dec
xchg
fsub
mov
loop
fld
jle
add
std
inc
inc
div
jnp
adc
add
add
les
bound
mov
sub
jl
or
icebp
inc
(bad)
jmp
jmp
cmc
(bad)
adc
(bad)
call
dec
sub
mov
lods
ror
sub
add
iret
aaa
aas
jae
xchg
mov
mov
cmp
adc
adc
(bad)
daa
push
or
mov
in
cmps
outs
fiadd
fistp
mov
addr16
loope
inc
jbe
xor
xor
or
cmp
pop
cmps
ss
add
test
call
push
leave
jmp
xchg
push
sbb
sub
fs
(bad)
mov
xor
in
mov
xchg
cmp
pushf
pop
sub
jge
xlat
enter
mov
cdq
cmp
xchg
adc
test
xchg
push
sbb
aad
push
in
test
and
je
push
sub
bound
mov
push
sbb
add
jb
std
hlt
jnp
mov
shl
push
mov
(bad)
outs
add
popf
mov
sbb
push
mov
mov
cmp
cs
aad
cmps
ins
sbb
stos
push
push
shr
daa
add
or
dec
cmp
inc
retf
stc
jns
gs
jp
(bad)
xor
ss
jmp
loope
aad
dec
pop
fstp
jle
cmp
add
jl
sets
mov
in
dec
fwait
ror
loop
dec
jno
jnp
lds
sbb
mov
push
xor
xlat
sub
fisttp
cdq
push
xchg
rol
push
loop
cmp
cwde
(bad)
out
xchg
mov
inc
mul
jae
neg
enter
arpl
sbb
clc
pop
sub
xchg
pop
cmp
fwait
push
mov
(bad)
ficom
stc
retf
mov
retf
(bad)
in
outs
js
inc
pop
loope
retf
adc
in
jge
jbe
scas
and
clc
mov
pop
es
stos
(bad)
iret
(bad)
in
push
inc
push
jbe
xchg
div
pop
in
pop
pop
mov
in
call
fld
mov
inc
std
or
and
sar
add
in
fidiv
push
dec
das
out
je
popf
icebp
in
addps
push
scas
push
pushf
std
inc
mov
out
push
pop
pop
add
jno
cmp
inc
(bad)
fld
dec
cld
fild
repz
xchg
pop
loope
mov
pop
div
jbe
cwde
(bad)
sub
dec
sti
jmp
aas
dec
inc
ja
pop
pusha
mov
imul
(bad)
loopne
arpl
fst
or
call
icebp
in
xor
sbb
cmp
push
lahf
sbb
loope
pushf
jmp
dec
or
and
jle
sub
adc
cmps
fs
mov
sbb
popa
lods
jo
jge
push
(bad)
sbb
mov
push
shl
pop
pusha
push
mov
pop
push
lahf
mov
fisttp
push
dec
out
shl
sbb
mov
sar
mov
jnp
sbb
push
or
scas
imul
sub
or
cmps
jne
fs
cmp
sbb
fwait
pop
mov
adc
jp
jmp
inc
or
cli
scas
bnd
add
lods
movs
xchg
pop
jno
mov
sub
sahf
ss
jl
xchg
cs
sub
sbb
pusha
js
ror
or
and
stc
clc
cdq
aaa
adc
rcr
pop
mov
push
aad
lds
pop
dec
das
shr
jle
out
mov
es
inc
(bad)
out
dec
iret
out
adc
mov
lods
mov
and
seta
out
mov
inc
js
out
xchg
(bad)
shl
push
dec
fsubr
mov
sahf
aam
ficom
push
xor
xor
pop
stos
xor
xor
pop
hlt
push
sbb
lahf
out
mov
add
hlt
js
mov
aas
jmp
push
adc
pop
push
ret
scas
movmskps
sbb
push
enter
sbb
or
clc
mov
(bad)
mov
mov
in
inc
movs
mov
mov
test
fisttp
pusha
and
adc
call
mov
ja
cmp
mov
bound
imul
mov
retf
mov
dec
or
repnz
inc
mov
lea
add
loopne
pop
dec
jmp
jbe
jae
inc
retf
dec
sub
mov
xchg
jmp
jns
daa
push
sahf
cdq
push
movs
fldenv
test
jbe
repz
or
into
ins
(bad)
mov
outs
and
cmp
call
xchg
xchg
sahf
jns
jl
test
dec
outs
cmp
aam
bound
mov
push
ins
jp
push
pop
xchg
sti
sbb
std
lea
stos
sub
stos
je
inc
int
stc
loop
repnz
jae
fist
adc
out
test
(bad)
jecxz
or
push
and
and
in
and
fld
test
sbb
jo
loope
gs
sahf
xor
sub
jo
bound
(bad)
mov
es
adc
(bad)
leave
mov
fwait
out
or
out
push
push
adc
add
lock
ret
or
mov
aam
sub
or
pop
inc
add
scas
icebp
jecxz
cmp
jbe
xor
jns
and
pop
pop
enter
mov
sar
push
pop
dec
mov
push
adc
rcr
pushf
mov
sub
lahf
pusha
and
sbb
arpl
cdq
mov
mov
pop
adc
shl
jne
pusha
pop
icebp
push
pop
out
jle
arpl
movs
cdq
push
lods
mov
dec
inc
das
mov
(bad)
lock
out
popa
push
loopne
push
lods
xor
pop
pop
test
in
cdq
pusha
int3
inc
xor
shl
repz
push
retf
pop
ins
xor
ins
fdivp
add
or
inc
scas
pushf
inc
das
(bad)
mov
out
ins
shl
xchg
shr
fcomp
loop
scas
mov
inc
jmp
dec
outs
xor
cmps
sub
aaa
add
inc
pop
push
inc
call
fld
ins
xchg
sub
out
ss
movs
fnstcw
fs
push
lahf
pop
dec
mov
fiadd
dec
scas
cmp
fdiv
cdq
or
pop
jle
and
loop
xor
in
aas
bound
pop
sub
loope
mov
bound
mov
inc
inc
dec
out
adc
inc
bound
inc
add
dec
and
aad
xor
cdq
sbb
fnstenv
fidivr
enter
leave
mov
pop
mov
stos
pop
cvtdq2ps
lds
xchg
lock
jmp
or
and
add
outs
push
add
cmp
mov
xor
je
add
push
gs
retf
pop
pop
and
jp
mov
call
mov
call
cmp
sbb
into
(bad)
xor
ret
mov
cmps
cmp
mov
cmp
mov
mov
mov
int3
int
das
fwait
sbb
clc
inc
neg
pop
outs
mov
xchg
test
add
mov
pop
ret
(bad)
xlat
repz
mov
out
xchg
cmc
arpl
jns
push
dec
inc
mov
inc
jae
fadd
fisub
lock
xor
movs
or
jb
jnp
in
rcl
cwd
jp
cmp
xchg
xchg
(bad)
cmp
mov
xchg
xor
cmp
jbe
iret
inc
rcr
inc
stos
loopne
mov
dec
jo
out
out
std
repnz
sbb
sar
jo
ficomp
aam
bound
adc
fs
or
inc
jne
test
mov
mov
jg
and
sub
cmp
das
and
xor
jg
jae
scas
mov
push
test
enter
inc
ins
lods
pushf
push
fisubr
ss
xlat
sti
jecxz
pusha
repnz
mov
push
(bad)
call
cwde
(bad)
xchg
arpl
adc
inc
lods
test
not
sub
sub
dec
mov
or
adc
fwait
(bad)
paddq
add
sub
int
psllw
mov
cmc
(bad)
out
inc
jnp
jp
or
mov
daa
ror
cmp
test
outs
jmp
retf
inc
dec
sub
push
ins
mov
arpl
cmps
dec
mul
lock
push
pop
jb
dec
stc
mov
jae
or
dec
push
and
int
jne
or
retf
fst
stos
cmp
inc
add
push
je
jl
in
clc
push
push
dec
loop
push
cdq
add
mov
cmps
sub
mov
and
mov
dec
adc
int
cs
or
push
jbe
sbb
sbb
add
xchg
adc
fs
xor
retf
sub
gs
jecxz
or
out
call
sub
aad
sub
xor
and
mov
jmp
mov
inc
daa
mov
adc
xchg
pop
mov
jo
cmc
sahf
imul
outs
test
inc
fld
adc
mov
adc
fstp
(bad)
iret
mov
dec
inc
(bad)
xor
movs
in
retf
inc
out
and
or
into
inc
cld
popf
add
sub
mov
jbe
out
ja
and
ins
xchg
dec
pop
pop
retf
adc
pusha
mov
daa
cs
movs
xchg
ficomp
data16
cmp
lds
ret
out
xchg
add
push
cmp
(bad)
(bad)
and
sti
das
fnstsw
rol
dec
pop
add
(bad)
es
outs
mov
cli
mov
and
(bad)
jmp
das
and
cmps
add
cdq
push
test
jbe
cmp
ror
(bad)
aam
stos
test
retf
movs
inc
sbb
and
jnp
out
xor
sub
ins
(bad)
bound
mov
rol
push
xchg
stc
or
rol
es
cs
sbb
mov
sub
fwait
pop
xor
pop
mov
lea
mov
in
adc
int3
fcomip
fcmovnbe
cli
in
mov
xor
ins
cs
mov
out
mov
mov
pop
retf
test
popf
xchg
xor
jge
add
push
call
repnz
movs
pop
pop
mov
imul
cdq
xor
adc
test
sbb
xchg
stos
movs
pop
mov
call
fdiv
stc
xchg
cmc
push
pop
sbb
push
fcomp
xchg
test
call
xchg
aam
loop
ret
std
pop
cld
ret
ror
jmp
dec
sbb
xor
mov
dec
je
or
gs
cmp
in
loopne
dec
pop
call
fidiv
imul
jmp
rol
icebp
pop
lods
in
sub
mov
or
push
mov
leave
inc
mov
mov
xchg
pop
sub
inc
retf
xor
sub
into
inc
test
and
(bad)
sahf
fsubr
shr
xchg
mov
mov
xor
xor
imul
(bad)
iret
scas
mov
ins
dec
jmp
movs
mov
out
mov
stos
repnz
add
aaa
adc
xchg
popa
dec
ds
nop
popa
jno
pop
push
(bad)
push
mov
fwait
pop
fcmove
and
pop
jecxz
jnp
movs
push
addr16
or
xlat
pop
xchg
jae
xor
dec
aas
xchg
mov
cs
jne
cld
sbb
push
call
call
aas
scas
inc
nop
in
arpl
add
inc
pop
push
(bad)
xchg
not
push
sbb
push
pop
xor
xor
pop
ja
ja
fbld
cli
dec
adc
adc
scas
pop
cmps
xlat
fs
pushf
mov
or
jb
sub
xor
mov
rcr
cli
adc
xor
inc
retf
frstor
adc
inc
push
or
(bad)
sub
and
cwde
aad
aam
test
sub
cmp
into
push
stos
cmp
mov
xchg
sbb
fldcw
inc
nop
(bad)
call
fld
jbe
repz
mov
aam
in
fisub
out
mov
ret
push
rcl
mov
pushf
ror
or
hlt
dec
mov
gs
inc
(bad)
mov
and
jge
adc
inc
sbb
je
adc
call
jle
movs
mov
push
retf
not
rcr
dec
popf
jae
sti
sub
fs
jp
pop
out
call
mov
xchg
and
jp
xor
add
into
addr16
or
xor
sub
inc
sub
(bad)
stos
mov
popa
mov
inc
in
mov
scas
(bad)
movs
dec
adc
ja
mov
retf
cdq
fsub
in
sti
mov
in
retf
inc
neg
das
ret
pop
lock
out
ss
push
popf
jns
jb
xchg
dec
pop
and
test
dec
cmp
lods
test
mov
mov
movs
dec
adc
(bad)
inc
mov
push
jae
mov
xchg
cmp
int3
jg
jo
cmp
adc
sub
int
fist
cdq
dec
aas
pop
cmp
outs
push
xchg
ins
push
stc
mov
nop
sbb
xor
(bad)
sub
fwait
dec
xchg
pop
dec
mov
or
sti
sub
and
in
imul
sti
iret
cmp
(bad)
jne
inc
hlt
xor
scas
lahf
ss
shl
imul
or
or
repz
popa
inc
es
inc
repz
mov
das
mov
and
stos
lods
(bad)
das
sar
dec
frstor
ins
icebp
lahf
hlt
pop
xchg
mov
ret
jno
and
xor
dec
retf
or
and
fs
aaa
lahf
ret
outs
aam
jecxz
clc
lods
sub
repnz
into
jo
and
mov
in
lock
loop
jno
sub
push
in
fldenv
ret
shl
push
cmp
mov
fild
ja
ret
stos
mov
xchg
mov
test
cmp
cmp
cdq
jp
rcl
std
psubusw
fs
repnz
outs
cmp
test
push
cmp
jmp
ins
fmul
push
dec
lahf
outs
jmp
lahf
sar
cmp
imul
add
pop
mov
gs
lds
cmp
sub
in
das
xor
jg
scas
cld
shl
sahf
xchg
jecxz
icebp
mov
jg
adc
xor
out
mov
adc
xor
in
sbb
inc
sbb
sar
push
inc
jae
sbb
jp
cdq
rcr
and
jl
imul
mov
inc
out
fistp
jae
scas
xchg
fnsave
pop
in
or
int3
mov
jl
and
imul
ds
dec
repz
mov
mov
inc
dec
mov
pop
cmp
iret
cmps
mov
xor
repz
pop
rcl
mov
dec
dec
retf
mov
icebp
fwait
inc
movs
adc
cwde
pop
fadd
xor
jne
pop
jo
push
sub
and
ret
scas
add
adc
adc
pop
ins
test
nop
mov
mov
inc
or
or
mov
enter
sbb
scas
sub
jmp
mov
hlt
rcr
add
cmp
jno
test
jne
popf
inc
fdiv
and
and
fistp
jns
mov
mov
cli
cwde
jo
cmp
cmc
cwde
jl
inc
(bad)
mov
cmp
ss
pop
scas
adc
add
cmp
fwait
pop
xchg
mov
aad
dec
mov
mov
mov
(bad)
mov
das
mov
loopne
ret
jmp
pop
xor
and
adc
adc
jne
pop
cmp
arpl
jmp
psubsw
push
cmp
and
out
div
and
push
and
les
mov
movs
or
inc
inc
in
push
sbb
les
mov
add
dec
cwde
add
pop
(bad)
std
leave
out
outs
push
adc
sbb
in
jo
aam
cmp
xchg
test
int3
mov
lods
iret
fsub
in
push
sahf
push
fld
shl
mov
pop
ja
cmp
out
cmp
push
xchg
scas
mov
pop
mov
ror
gs
and
dec
and
lds
mov
lahf
add
sbb
lods
mov
jbe
(bad)
jo
cdq
ss
adc
jae
iret
mov
inc
jmp
jp
and
and
ret
call
dec
fucomp
xchg
hlt
arpl
inc
mov
(bad)
outs
dec
aaa
push
pop
and
daa
and
push
(bad)
xor
psrlw
pop
add
dec
in
ret
jo
cli
cmp
xchg
sti
ss
(bad)
xor
push
jo
jg
xor
ins
shr
mov
in
mov
push
fstp
out
cmp
inc
jl
clc
add
add
cmp
call
aaa
(bad)
addr16
pop
inc
dec
pandn
scas
fild
sub
and
es
mov
les
and
sahf
add
pop
test
sub
je
das
inc
xchg
sbb
pop
sbb
out
or
ror
bound
fwait
mov
push
ins
xor
loope
out
(bad)
outs
sbb
rcl
jbe
sub
adc
push
jbe
stos
dec
mov
pusha
add
pusha
fcomp
js
out
cmp
aas
pop
stc
shl
cmp
lahf
jmp
fcmovbe
bound
sub
dec
ror
push
pop
sub
and
in
mov
jo
dec
xor
xlat
lods
sar
test
sub
lods
test
ins
jb
xchg
aaa
pop
repz
adc
cdq
mov
rcl
shl
sub
jbe
or
mov
loope
xchg
idiv
cli
push
mov
sub
fidivr
cwde
pop
rol
push
in
mov
and
arpl
daa
arpl
bnd
clc
mov
mov
mov
mov
(bad)
stc
mov
sbb
mov
not
add
mov
cmp
pop
out
mov
adc
mov
cmps
cdq
mov
stos
mov
xor
aaa
fmul
add
sub
test
inc
mov
cmps
inc
and
(bad)
in
inc
mov
push
pusha
mov
loope
lahf
xchg
jae
ret
xor
jp
retf
ss
ja
jne
pushf
test
(bad)
xor
imul
test
mov
es
mov
pop
retf
jns
cmc
and
sub
cwde
and
jmp
mov
test
or
ja
push
outs
mov
jno
push
push
dec
or
dec
mov
lods
mov
(bad)
xor
adc
or
idiv
mov
(bad)
dec
or
in
loope
adc
dec
jecxz
lahf
retf
and
ret
(bad)
adc
xchg
mov
fsubp
enter
mov
inc
dec
sbb
cmc
or
in
adc
fstp
cmp
push
push
aas
clc
adc
adc
fild
mov
mov
iret
mov
xchg
push
into
aaa
sub
ret
sub
push
cli
sti
or
aad
repz
and
and
out
mov
movs
div
push
push
(bad)
jnp
pushf
mov
mov
addr16
jle
pop
ins
mov
inc
ficom
cmp
aam
loope
jns
loop
sti
rol
gs
pop
pop
sahf
gs
jne
es
outs
adc
dec
cli
cdq
jl
mov
adc
push
clc
(bad)
ror
ret
push
xchg
ret
jecxz
sub
mov
dec
mov
je
in
xchg
inc
fs
mov
in
pop
in
push
adc
retf
pop
push
cmp
mov
test
xor
mov
cld
out
ret
pop
call
push
adc
call
cmps
in
jecxz
mov
lock
sbb
leave
movs
loopne
cmp
inc
imul
push
mov
xchg
push
hlt
or
cmp
push
cmc
test
or
and
xor
movs
and
test
push
ss
ins
jle
js
in
popa
movs
into
xchg
xchg
or
movs
shl
inc
xor
ins
fs
dec
pop
mov
sub
scas
push
cmc
xor
xchg
jo
xchg
fwait
test
pop
push
and
mov
adc
lea
pop
ins
or
enter
mov
mov
add
fbld
dec
sbb
std
repnz
push
cmp
or
imul
cld
adc
dec
fistp
std
cmp
pop
cdq
(bad)
and
test
sub
xor
(bad)
pop
or
and
call
cmc
call
loop
ds
mov
sbb
mov
retf
cdq
jnp
es
cmp
mov
shl
sub
(bad)
cmc
cmp
mov
rcl
(bad)
cmps
fs
mov
stos
fild
pop
and
les
jno
(bad)
repz
xlat
ror
push
lods
pop
imul
add
(bad)
icebp
sub
loopne
add
inc
out
outs
pop
shr
aad
push
dec
xor
cmc
(bad)
jns
hlt
jmp
cmp
xchg
shr
fidiv
inc
xlat
jp
fidivr
aaa
sbb
ret
sti
xlat
push
push
fldenv
jb
popf
mov
add
(bad)
mov
push
out
imul
cmps
and
call
fs
sub
jnp
rcl
pop
popf
aaa
add
mov
or
mov
arpl
add
in
jo
jmp
icebp
pop
xor
xchg
add
push
in
or
sahf
movs
cmps
and
jl
loop
neg
(bad)
jb
leave
cmc
cmp
push
jg
in
mov
sub
dec
cmc
dec
in
mov
mov
push
movs
cmp
xlat
stos
mov
in
ss
cdq
mov
pushf
pop
fwait
mov
dec
push
lea
cdq
xchg
outs
call
clc
and
int
mov
or
jno
and
stc
inc
push
pop
mov
jo
daa
sbb
adc
inc
clc
lock
gs
jl
push
inc
mov
dec
int3
das
jno
pop
xor
or
repnz
adc
adc
add
stos
stos
inc
cli
test
test
mov
movs
fld
cmps
fcom
adc
rol
sub
in
subps
sbb
call
mov
ja
lds
sub
jmp
pop
call
push
cmps
push
mov
bound
retf
xchg
sysexit
mov
push
aas
pop
cli
das
jp
pop
fadd
idiv
movs
jg
jg
sbb
(bad)
mov
ret
loopne
(bad)
mov
jo
ss
sbb
push
push
ds
or
sbb
in
stos
hlt
pusha
loope
sbb
jae
xor
ret
bswap
sub
out
(bad)
jmp
int
or
push
inc
and
outs
mov
cmc
xchg
sbb
add
dec
stos
adc
adc
imul
mov
and
shl
xchg
ffree
movq
gs
gs
shl
sbb
mov
jmp
retf
lea
jle
pop
mov
cld
jecxz
ficom
lahf
cmps
in
inc
inc
dec
cmc
(bad)
sub
sbb
loopne
inc
xchg
into
fsubr
addr16
ds
mov
push
jo
mov
jb
or
add
and
pop
mov
sub
or
ds
mov
je
test
clc
stos
dec
scas
popf
xchg
es
in
dec
add
sub
cs
mov
cmc
push
dec
lahf
jmp
arpl
sbb
add
sub
xor
into
adc
push
push
add
add
lea
int
inc
ins
(bad)
mov
mov
les
jmp
idiv
(bad)
push
sbb
pop
shl
add
mov
sub
dec
xor
cld
test
xchg
jl
aam
inc
lea
mov
leave
pop
ret
leave
cld
pop
mov
pop
push
jg
cmc
inc
jl
and
mov
jo
sub
sbb
pop
gs
pop
out
arpl
bound
push
imul
cmc
xor
arpl
xchg
sub
fcmove
daa
and
mov
lock
aaa
cdq
inc
push
ss
sub
popa
and
(bad)
aad
sub
dec
sub
jns
add
mov
adc
shl
cmp
lds
cld
xchg
xlat
and
mov
jl
ins
scas
push
ja
cs
mov
mov
(bad)
shl
fdiv
push
test
adc
fmul
ins
test
(bad)
scas
push
mov
out
sti
mov
hlt
jb
out
push
fild
or
sbb
mov
cmps
adc
sub
pop
xor
js
addr16
xor
xchg
rcr
fwait
push
sbb
adc
in
jge
sbb
pushf
jns
dec
fild
fsubrp
jne
push
and
inc
mov
ins
and
cmc
sub
nop
jecxz
mov
lods
hlt
mov
pop
into
in
stos
mov
mov
add
pop
scas
xchg
xor
lea
mov
mov
fisubr
push
push
pop
cli
jecxz
or
xor
shl
dec
out
and
cwde
jl
leave
es
sub
sub
inc
repnz
mov
mov
push
mov
test
push
pop
out
cmp
popa
cmp
mov
push
inc
xor
nop
push
(bad)
jp
sbb
push
xchg
loope
shl
fld
inc
ds
ret
in
or
stos
js
xchg
pop
aad
stc
sbb
jmp
cmps
adc
or
retf
sub
pop
xor
lods
sub
push
jno
jbe
scas
xor
cmp
push
mov
(bad)
lock
push
scas
xchg
inc
retf
iret
lea
outs
sbb
push
xchg
add
cdq
js
scas
push
daa
scas
lock
gs
in
adc
js
arpl
cmc
test
icebp
ficomp
sahf
shr
jge
ret
shl
sbb
or
ror
pusha
inc
jg
push
or
fs
and
lods
popf
pop
daa
dec
xor
(bad)
add
mov
(bad)
fadd
arpl
in
fld
add
repz
mov
(bad)
rcl
std
sub
adc
(bad)
xchg
sar
ret
push
aam
not
xor
jge
xor
sbb
das
jecxz
jecxz
out
mov
leave
jecxz
jmp
ror
ret
sbb
aam
dec
and
fadd
retf
xor
popf
jo
or
leave
leave
pusha
or
mov
imul
mov
xor
in
test
mov
push
jne
fsubr
and
pop
test
repnz
adc
ins
or
test
int3
pop
mov
ficom
mov
pop
repnz
jmp
xor
mov
adc
mov
cmp
fld
add
mov
mov
push
add
or
inc
and
jmp
xlat
je
out
xchg
mov
fsubrp
pop
cs
xchg
dec
das
mov
xchg
dec
loope
imul
push
add
xchg
mov
ret
xlat
xor
add
(bad)
fldenv
out
xor
std
cmc
mov
xchg
(bad)
cli
cmp
adc
xor
ds
mov
gs
cdq
mov
mov
repz
sbb
pop
xor
in
adc
out
aam
adc
sub
push
adc
sbb
and
mov
sahf
lea
push
enter
mov
cmp
add
add
or
les
inc
sbb
xchg
xchg
retf
test
cmp
mov
int3
test
xor
push
or
jl
scas
ja
ret
ja
pop
mov
scas
fwait
out
inc
outs
fst
cli
and
retf
inc
sub
imul
sbb
neg
dec
shl
lahf
add
ins
jle
jmp
test
mov
xor
jno
sbb
out
pop
pop
jecxz
dec
out
dec
push
repz
sbb
inc
and
xchg
je
or
push
push
out
(bad)
push
cli
(bad)
iret
retf
aad
cld
xor
mov
cmps
popa
aam
aad
or
pop
in
(bad)
jo
ins
gs
js
xchg
das
pop
mov
sahf
mov
add
cmps
std
fisttp
inc
pop
je
xchg
push
add
leave
or
call
xchg
mov
out
xchg
stc
stos
test
mov
jb
lock
lods
pusha
ins
xlat
jno
inc
dec
pop
sub
jb
aas
icebp
icebp
and
jbe
xor
adc
add
repz
int3
loopne
cmp
jnp
fwait
pop
(bad)
cmp
cld
lds
jmp
aas
ss
arpl
adc
imul
gs
scas
cmps
or
pop
loopne
mov
push
pop
sbb
gs
adc
popf
or
add
int3
ins
inc
clc
and
loop
outs
cmps
rol
xor
inc
jg
ss
loop
pop
xor
outs
add
adc
(bad)
cwde
je
out
call
mov
add
jbe
data16
mov
xchg
out
lock
loopne
test
jmp
(bad)
sub
dec
adc
pop
and
out
jmp
or
inc
pop
jge
leave
jns
sbb
xchg
call
loope
xchg
add
xchg
test
adc
jns
fdiv
inc
mov
xchg
(bad)
jg
fdiv
ss
pop
loop
inc
loop
sub
and
pusha
cmp
iret
mov
jecxz
lahf
xor
and
push
cdq
xchg
xchg
call
xor
mul
stos
dec
jns
add
fistp
add
neg
xchg
mov
bound
rcr
xchg
out
imul
push
mov
jge
adc
push
repnz
dec
std
cmp
inc
xor
xchg
sbb
or
hlt
mov
adc
sahf
call
mov
jge
or
cmps
in
loopne
mov
and
lods
mov
dec
push
sub
push
mov
out
mov
je
sub
test
cmp
or
sub
rcr
in
retf
sub
dec
mov
xor
cld
push
jge
shr
add
je
jp
bound
mov
aad
lahf
(bad)
(bad)
call
cmps
jns
test
jmp
out
leave
inc
test
xchg
jecxz
jae
fist
in
push
mov
push
fucomip
ins
dec
es
or
add
ja
retf
out
add
xchg
or
pop
es
shl
rol
aam
cmp
xlat
ds
(bad)
sar
and
pushf
sti
shr
(bad)
jecxz
les
das
repz
add
les
mov
retf
ret
xchg
lock
jne
jp
popf
pushf
pop
enter
das
inc
leave
pop
push
les
add
adc
dec
aad
and
outs
sbb
idiv
inc
std
loopne
push
bnd
arpl
fnsave
cmc
mov
push
stos
shl
cwde
cmp
xchg
std
(bad)
xor
les
jns
mov
(bad)
in
iret
scas
(bad)
(bad)
jp
mov
pmaxub
sti
addr16
jmp
icebp
bound
stc
ds
inc
fs
xchg
mov
fisub
test
mov
or
mov
dec
add
in
fcom
pop
adc
lock
mov
popf
imul
scas
xchg
shr
cmp
out
pop
sub
lea
pop
aam
xor
fwait
dec
scas
arpl
int
cmp
int3
push
xchg
sbb
popa
pop
jecxz
(bad)
dec
adc
and
mov
or
lea
and
rcr
adc
mov
mov
pop
add
fistp
ror
loope
test
xchg
jo
pusha
cmc
sub
and
push
daa
int3
push
enter
outs
lods
cmps
fldcw
ins
cmc
adc
pop
clc
(bad)
mov
dec
repz
dec
outs
xchg
loope
adc
stc
xchg
test
inc
addr16
addr16
sbb
iret
popf
cmp
sti
js
das
pop
mov
xchg
mov
imul
mov
xchg
data16
adc
cmp
in
ss
adc
fcomp
dec
adc
jl
xchg
ins
or
mov
push
and
call
push
inc
push
sbb
push
jp
cmps
pop
pop
repz
enter
aas
jl
adc
jmp
retf
fsubr
test
or
outs
ret
fisub
sbb
sbb
push
dec
mov
js
ins
cmp
xchg
add
and
jnp
jmp
lahf
ss
adc
sti
cmp
gs
sbb
dec
test
sub
(bad)
xchg
sbb
xor
scas
sbb
pop
add
les
out
mov
push
xchg
in
dec
mul
pushf
seto
cmc
jl
cmp
inc
stos
xor
dec
nop
cmp
(bad)
int
outs
xchg
retf
pop
dec
fistp
inc
inc
sub
jp
push
or
xchg
aaa
xchg
(bad)
pop
xor
jmp
int3
xchg
in
out
or
jb
sahf
int3
sahf
js
inc
adc
inc
jge
repz
leave
cdq
lods
jbe
stos
repz
add
in
ins
fnstcw
push
jg
fdivr
je
fdivr
mov
outs
cmp
daa
scas
lock
(bad)
cmp
sbb
lock
movs
cmp
xor
jae
mov
cmp
and
addr16
or
or
hlt
mov
or
or
pop
retf
test
add
cmp
bnd
mov
or
mov
cmp
adc
pushf
xchg
sbb
xor
fdivp
cmp
cmc
pop
mul
addr16
loop
ss
xor
test
stos
cs
rol
or
imul
(bad)
in
jmp
jns
rcl
jnp
or
xor
xchg
pop
inc
data16
les
test
sbb
rol
push
mov
xchg
iret
mov
inc
mov
nop
jbe
mov
sti
sti
cld
dec
dec
(bad)
jbe
retf
or
lea
fnstcw
dec
pop
inc
stos
ret
movs
jp
jle
adc
mov
fisub
data16
push
mov
mov
add
adc
div
ret
push
xor
ficomp
call
adc
mov
or
ss
pop
rcr
dec
dec
mov
outs
cld
add
leave
pop
inc
and
lock
mov
adc
cdq
out
mov
xchg
cmp
or
and
pop
sbb
dec
and
(bad)
out
ss
sbb
aas
aas
sub
cmp
ss
sahf
jge
sub
mov
je
int
or
retf
dec
stos
cmp
iret
fwait
sbb
test
pop
cli
jecxz
scas
xchg
pop
lods
adc
jnp
rol
xchg
cmp
fisttp
movs
ds
push
(bad)
push
jmp
aad
test
test
mov
es
sub
lds
cs
retf
out
pop
lahf
dec
and
mov
leave
and
jbe
cs
mov
std
jmp
mov
fadd
test
aas
dec
xchg
lea
scas
les
shl
outs
xchg
jb
xchg
icebp
mov
mov
inc
fisub
dec
pushf
int3
sahf
dec
lahf
xlat
sub
mov
xchg
mov
push
gs
fmul
push
push
inc
pop
sbb
sbb
adc
inc
cdq
out
div
sbb
retf
dec
lods
ds
repz
stos
pop
jmp
inc
(bad)
adc
jns
sub
sbb
cmp
dec
mov
xchg
(bad)
mov
or
add
cdq
push
xor
and
sbb
lea
and
int
inc
repnz
add
add
stos
adc
add
sbb
idiv
stos
push
repnz
dec
arpl
pop
lahf
push
and
mov
add
jo
push
ins
push
es
dec
push
es
jmp
das
sub
icebp
sub
cmp
xchg
loope
mov
sahf
jl
mov
inc
pushf
call
jb
rol
dec
cmp
stc
enter
inc
jl
mov
cmp
jmp
xchg
jne
packssdw
push
in
stos
push
ret
add
sbb
mov
ins
adc
mov
sub
and
or
fsub
hlt
in
lea
test
xor
fs
inc
out
mov
and
sbb
push
cmp
adc
cmps
adc
and
movs
jnp
add
into
add
inc
sub
or
pop
mov
sub
mov
sahf
pop
fimul
hlt
pop
add
jle
push
aas
mov
sti
fsub
(bad)
xchg
(bad)
in
rcr
rcl
clc
sbb
cli
pop
pop
xchg
cs
xchg
xchg
xchg
pop
out
arpl
icebp
jnp
hlt
fsub
iret
shr
stos
xor
test
fdivr
xchg
bound
lds
add
sub
xchg
push
movs
mov
lock
les
das
sbb
xor
sti
imul
xor
fsubp
(bad)
inc
lock
int
fwait
cmps
sahf
adc
iret
xchg
test
dec
cld
pop
pop
sbb
jb
mov
jp
push
fnstenv
pop
fidivr
cmp
loope
clc
xchg
ds
xchg
push
and
popa
fist
mov
xchg
jb
in
mov
ss
jmp
mov
retf
in
pop
repz
mov
xor
jg
push
inc
add
bound
dec
movs
mov
repz
dec
or
jno
aas
int3
aas
mov
bound
in
inc
retf
cmc
fsub
movs
mov
ins
push
iret
lea
lahf
aam
leave
sub
mov
cmp
inc
cmp
out
pushf
pop
pushf
ret
lahf
addr16
mov
xchg
rol
inc
fidiv
shl
mov
push
test
add
add
jae
jno
sbb
test
pop
lods
sbb
mov
xchg
mov
xor
fsub
outs
xchg
pop
addr16
mov
shl
ds
add
hlt
jge
jmp
cmp
jge
js
fcomip
jns
ss
popa
lods
(bad)
mov
push
fild
mov
shr
femms
pop
outs
mov
push
and
ins
(bad)
cli
sbb
(bad)
xor
fwait
sub
out
call
xchg
ror
mov
or
popa
pop
push
or
(bad)
popa
and
jle
push
lahf
dec
push
jo
rol
cmp
cmps
fcomp
jg
adc
jnp
dec
jbe
cwde
and
sub
stos
in
pop
mov
inc
push
mov
cmp
dec
or
add
xor
ret
out
adc
lock
add
div
imul
dec
mov
mov
push
leave
adc
not
nop
mov
or
out
sbb
jl
cmp
cmp
cmp
push
and
lods
pop
or
sub
in
inc
(bad)
cmp
sbb
adc
push
cmp
scas
adc
jecxz
pop
movs
ret
sti
mov
sub
push
cmps
imul
aam
mov
pop
push
inc
cmp
inc
push
ins
js
gs
retf
cmp
std
out
es
rcl
bnd
adc
imul
imul
bound
mov
push
rcl
out
scas
mov
in
jns
inc
mov
repz
push
mov
jl
cmp
sub
sub
push
jae
mov
adc
pop
and
popf
xchg
jecxz
cwde
mov
mov
sbb
mov
popa
xor
cs
add
mov
mov
int
into
xchg
xchg
pop
jo
loopne
(bad)
or
sub
mov
cmps
adc
or
hlt
retf
repnz
cmp
mov
add
mov
retf
pop
xchg
add
pop
mov
addr16
adc
aam
xor
jo
pop
cdq
push
retf
mov
sbb
addr16
inc
fwait
or
loopne
lea
dec
push
xchg
pop
ret
retf
jp
bound
sbb
aas
int
mov
and
movs
dec
or
cwde
les
in
test
cmc
stos
nop
inc
or
xor
mov
popf
xchg
inc
jecxz
jnp
(bad)
mov
idiv
or
les
outs
lahf
adc
ja
push
jo
lea
jb
movs
test
cmc
test
test
outs
sbb
jns
ret
xchg
xchg
lods
and
and
pusha
push
mov
push
push
fstp
loope
std
cmp
mov
mov
into
int
retf
dec
xchg
mov
xchg
sub
mov
(bad)
iret
vcvttss2si
or
movs
loope
xlat
sbb
mov
enter
les
sub
inc
adc
stc
push
das
jl
dec
(bad)
in
mov
cld
nop
lock
scas
push
inc
sbb
jge
sbb
in
pop
adc
jbe
fild
outs
dec
ret
sahf
dec
push
mov
mov
dec
jl
retf
fcomp
mov
fwait
rcr
or
pusha
sbb
and
xchg
push
mov
test
push
sbb
sbb
in
ja
iret
outs
sbb
jecxz
cmp
ja
mov
mov
pushf
pop
out
fmul
rol
and
pop
jns
movs
pop
jle
jl
dec
add
add
push
inc
repnz
sbb
out
jmp
sbb
test
gs
mov
leave
fdivr
xor
int
xlat
add
icebp
fidivr
and
xor
sub
fsubr
push
retf
aam
sub
test
or
xor
mov
scas
or
(bad)
js
popf
ins
setnp
inc
stos
cdq
lock
cmp
jmp
and
nop
repz
into
mov
ret
icebp
or
mov
mov
push
inc
pushf
mov
int3
pop
adc
dec
fadd
jle
jne
jb
or
retf
dec
fimul
jmp
inc
sbb
dec
jle
cld
sbb
pop
sbb
mov
popf
xchg
adc
jns
fsubr
sbb
das
pop
mov
pop
adc
sbb
scas
jo
mov
gs
stos
mov
arpl
pop
xor
call
dec
nop
dec
mov
pop
rol
loop
mov
sub
scas
or
sub
inc
icebp
shr
and
int3
cmps
jmp
sbb
scas
xchg
lods
clc
mov
sub
and
cmps
and
lds
push
jp
xor
mov
sti
xchg
addr16
pop
pushf
sahf
push
sub
cld
mov
test
(bad)
pop
push
bound
cmp
sti
or
ins
hlt
std
fucomi
call
or
push
push
mov
mov
xchg
or
adc
jmp
mov
push
fcomp
sbb
in
xchg
push
mov
xor
and
aas
xor
sbb
iret
push
xor
and
ins
xchg
shl
jne
inc
jo
lods
jb
int
xor
into
sbb
mov
loop
jmp
cld
pop
jae
js
inc
add
imul
mov
pop
scas
add
xor
push
xchg
imul
dec
mov
or
jg
xchg
push
mov
mov
mov
push
sub
add
(bad)
mov
sub
es
cmp
push
cmps
fisttp
push
out
xor
ss
pop
add
div
xchg
call
arpl
loop
xor
ins
std
and
fst
clc
sahf
fstp
jg
mov
mov
mov
mov
call
nop
push
mov
rcl
fist
adc
js
mov
inc
sahf
and
xor
fpatan
aaa
nop
adc
or
in
mov
sbb
inc
out
push
pop
into
ins
(bad)
das
leave
imul
add
movs
test
in
mov
(bad)
(bad)
test
popa
sbb
popf
je
cmc
retf
ja
ins
jno
adc
pop
mov
mov
and
arpl
mov
pop
movs
outs
lea
sar
xchg
and
cmp
pusha
xor
xchg
popa
adc
(bad)
std
dec
rcr
push
mov
mov
xlat
sar
or
(bad)
in
fs
ror
lods
in
and
inc
mov
xchg
sbb
xchg
xchg
dec
jae
ss
cs
push
xchg
push
mov
pusha
fisubr
push
dec
cli
jmp
mov
adc
ret
fidiv
ds
sbb
sbb
or
aaa
icebp
or
dec
out
push
cld
popa
xor
pusha
sti
ficom
movs
xchg
or
mov
add
mov
leave
xchg
push
jnp
inc
popa
out
xor
inc
rcl
mov
add
test
add
inc
and
sar
sub
mov
jmp
inc
jne
dec
retf
(bad)
cld
sti
out
pop
dec
add
popf
icebp
inc
jmp
in
aam
sub
pop
scas
test
push
or
enter
and
mov
cmc
adc
cmps
aam
or
pop
mov
scas
sbb
jl
add
pop
retf
push
clc
xchg
outs
cs
push
mov
mov
(bad)
repnz
in
push
out
xchg
push
daa
jl
aaa
fsub
pusha
mov
xchg
mov
ins
in
sub
sbb
push
sbb
jns
jno
inc
in
push
sti
mov
sbb
out
cmps
das
and
sbb
push
js
xlat
cdq
sar
clc
and
sub
ficom
and
mov
test
aaa
cmp
bound
push
pop
xor
add
xor
lds
adc
out
mov
or
pop
add
cmp
adc
stc
sub
es
jmp
add
cwde
dec
sbb
stos
sub
xor
sbb
lods
mov
mov
cwde
add
dec
shl
mov
movs
ds
add
sbb
mov
push
push
inc
fistp
cmp
xchg
xor
sti
mov
fidiv
or
pop
lahf
sub
enter
xchg
iret
xor
pop
(bad)
mov
js
test
xor
stos
(bad)
mov
cmp
imul
push
fst
(bad)
mov
cld
sbb
in
sub
dec
adc
xor
rol
dec
in
fisub
or
div
bound
in
fisubr
cs
and
test
push
cmp
fucomi
mov
push
call
call
aaa
lods
jg
in
jae
mov
mov
lods
xchg
xor
xor
xor
or
lahf
repz
ins
rcr
inc
cs
(bad)
push
arpl
push
fwait
stc
out
pop
(bad)
mov
sub
mov
ss
lds
push
fs
xor
sbb
test
imul
fstp
paddsw
imul
push
xor
mov
xor
icebp
push
mov
test
std
adc
movs
inc
loope
xor
push
jbe
add
je
push
jle
fiadd
dec
sbb
push
mov
push
bswap
aam
lock
adc
in
push
nop
aas
or
jbe
cmp
aaa
pop
sbb
scas
jmp
inc
jns
push
in
sbb
test
test
jbe
cs
sar
cmc
jmp
xchg
enter
fmulp
jmp
out
call
push
jl
lods
lods
jp
sbb
sub
jnp
(bad)
mov
aas
xchg
xchg
jb
xor
sub
xlat
pop
nop
fnstcw
lea
xchg
inc
mov
retf
xor
out
in
jb
(bad)
mov
inc
enter
jo
or
cli
jl
or
jl
test
mov
popa
in
imul
(bad)
mov
inc
sahf
fld
dec
sub
add
(bad)
dec
popa
pop
push
lea
stos
jo
pop
test
and
mov
xchg
push
cmps
jno
dec
sub
jae
mov
xor
jb
popa
pop
adc
sbb
add
jnp
sbb
iret
sbb
and
arpl
retf
or
out
xchg
mov
aaa
fwait
std
pop
iret
add
jl
cmp
ss
fwait
xlat
ja
or
fidiv
mov
(bad)
into
jecxz
dec
mov
cmps
inc
xchg
fld
ror
adc
leave
(bad)
repz
dec
dec
dec
out
and
or
inc
or
sub
adc
sbb
jnp
les
cld
imul
mov
xor
jge
or
sbb
and
add
xchg
ret
push
je
mov
pop
sub
or
ja
push
and
push
mov
mov
arpl
mov
imul
push
in
pop
popa
cmps
in
js
push
test
shl
jl
leave
sub
ret
sub
inc
cmp
push
sbb
pusha
out
(bad)
adc
cmp
pop
das
cmp
movs
pop
jo
aas
pusha
test
imul
mov
pop
dec
and
cmp
jbe
mov
aas
sub
push
sub
xor
iret
vmovdqu
inc
clc
scas
add
cmovae
xor
or
test
data16
mov
out
xchg
add
in
xor
cmps
jg
sub
mov
clc
fmul
xchg
loopne
xor
or
inc
cmps
xchg
inc
jnp
(bad)
popa
jmp
pop
gs
leave
(bad)
jne
not
jge
lods
(bad)
mov
call
cmp
adc
xchg
retf
pop
cmp
rcr
jp
movs
call
push
stc
(bad)
fmul
inc
jle
mov
add
or
mov
mov
pop
add
fwait
inc
mov
cmp
test
cwde
push
jge
dec
jge
adc
scas
pushf
jno
or
aam
xchg
add
push
ss
loope
fldcw
dec
popa
dec
pop
inc
es
mov
adc
cmp
loope
xor
inc
cdq
sar
sub
stos
add
ins
pop
adc
mov
mov
sub
clc
mov
pop
lods
push
jo
in
pop
lods
push
and
test
jmp
jecxz
in
mov
es
and
push
push
sbb
cmp
in
sar
fcomi
ficom
into
cld
xchg
clc
leave
fst
inc
pop
jl
call
cld
sub
sbb
xor
or
jp
into
xor
test
mov
jb
mov
movs
sub
mov
and
adc
iret
mov
mov
sub
mov
xor
leave
add
fldenv
mov
mov
ret
adc
js
inc
mov
sbb
mov
push
(bad)
neg
pop
out
(bad)
pop
xchg
jp
xchg
sbb
call
rcr
mov
fstp
js
fisub
jne
xor
push
sub
push
push
push
sti
cld
mov
mov
out
jns
out
out
jae
mov
ror
sbb
jle
jg
ja
or
inc
push
pop
add
fwait
adc
imul
scas
adc
ds
cs
mov
gs
xor
adc
or
gs
shl
ins
adc
shr
jnp
nop
(bad)
sub
inc
sbb
pop
outs
popa
fcomp
push
xor
sahf
jns
mov
cmc
ret
pop
cmp
mov
shl
out
cli
test
adc
fld
shl
pop
test
mov
fst
push
adc
mov
bound
cmp
pusha
xor
push
cli
movs
dec
iret
data16
fs
leave
test
loop
int3
push
mov
int
lea
mov
cmp
adc
sbb
mov
loopne
adc
in
cmps
repnz
xchg
or
cwde
rcr
fistp
les
jle
ins
jae
cmp
push
pop
mov
sub
pop
or
inc
dec
inc
lea
ss
xchg
fistp
movs
test
adc
and
(bad)
(bad)
pop
arpl
shl
mov
jg
lea
test
xchg
inc
mov
pop
pop
into
imul
dec
dec
push
xchg
cmp
and
cmp
dec
in
adc
mov
cmps
scas
inc
lods
daa
lahf
push
jle
push
outs
pop
sbb
out
add
sbb
fiadd
ficomp
and
dec
mov
add
mov
cmps
mov
icebp
les
mov
gs
xchg
(bad)
jg
jne
and
jne
rcr
movs
bound
jecxz
pop
(bad)
push
mov
retf
sub
cmps
mov
mov
(bad)
mov
js
imul
mov
das
cmp
fidivr
stos
sbb
mov
lock
arpl
xchg
clc
pop
rcl
adc
cmp
call
adc
pop
mov
pop
(bad)
add
pop
xchg
mov
cmp
mov
cld
rcr
mov
and
cmps
add
shl
or
jmp
and
aas
fistp
sub
ret
cmp
add
dec
jg
rdtsc
jl
add
retf
adc
test
js
pushf
pusha
pop
mov
cdq
cmp
pushf
cwde
mov
arpl
lock
mov
dec
mov
imul
mov
ins
mov
scas
aam
inc
retf
loop
addr16
out
ins
xor
cmps
or
imul
stos
inc
push
retf
xchg
inc
hlt
or
cdq
in
dec
outs
pop
mov
cmp
loope
cmpps
jbe
iret
fwait
sub
xchg
mov
(bad)
stos
dec
add
adc
xchg
hlt
(bad)
shr
mov
cmp
stos
imul
in
mov
addr16
aam
mov
out
cmp
adc
outs
jb
inc
or
jge
fild
pop
ins
push
les
out
ss
out
pop
mov
mov
inc
mov
pop
ret
cmps
xlat
inc
call
pop
movs
rol
xchg
rol
sahf
and
jo
xor
das
sbb
popa
(bad)
ss
or
dec
cmp
jp
shl
pop
inc
clc
or
int3
fidiv
xchg
inc
add
in
jl
sbb
sbb
call
sti
jnp
fst
mov
mov
sub
sub
sbb
das
out
ss
popf
mov
ja
sub
pop
push
(bad)
jnp
push
(bad)
xor
xchg
add
pop
sbb
sti
cld
(bad)
js
or
mov
mov
lods
push
std
mov
sbb
vmread
or
fild
xchg
adc
(bad)
(bad)
loopne
jnp
ret
pusha
ins
mov
adc
sahf
loopne
imul
pop
jmp
mov
retf
inc
add
ins
fnstenv
imul
pop
sti
cmp
cs
push
mov
sub
fistp
pop
or
int3
cwde
in
addr16
cwde
mov
jmp
les
icebp
fs
shl
push
js
(bad)
mov
inc
pop
or
inc
mov
mov
das
fbstp
out
jg
retf
mov
jmp
icebp
in
(bad)
(bad)
out
test
sub
je
mov
fild
pop
push
icebp
jle
aam
outs
push
jle
popf
xor
cs
jmp
imul
xor
or
inc
xchg
mov
jge
daa
sub
sub
and
mov
mov
repz
add
xchg
mov
cmps
stos
stos
cwde
fsub
in
lahf
sahf
sbb
xor
arpl
xchg
cmps
(bad)
pushf
je
aaa
aam
repz
in
ror
mov
shl
or
sub
sub
mov
pusha
push
xchg
int3
mov
inc
adc
js
mov
mov
jns
push
jg
and
retf
jge
xor
loop
jmp
std
mov
xor
cmp
outs
push
and
scas
push
fs
sub
or
mov
je
ret
mov
fadd
sub
inc
inc
jmp
mov
mov
xchg
rcl
push
and
jnp
ds
arpl
out
fild
jecxz
fwait
mov
enter
xchg
aas
adc
mov
ret
call
fdivp
ds
sbb
test
into
ins
mov
mov
jecxz
push
mov
xchg
mov
daa
cmps
fisub
sub
stos
out
inc
gs
div
ja
retf
arpl
idiv
shr
pop
mov
jmp
adc
pop
rol
ficom
pop
jae
sub
mov
lahf
es
xchg
pushf
jns
mov
imul
ins
stos
xchg
mov
(bad)
sub
pop
jle
jl
pop
push
adc
and
add
dec
fild
xchg
fwait
pop
add
xchg
pop
retf
sti
adc
mov
pushf
push
mov
push
lods
shl
les
xor
(bad)
pop
jecxz
into
xor
fist
fnstcw
retf
pop
out
mov
and
repnz
movs
bound
sub
hlt
or
dec
or
in
sbb
in
nop
push
ss
lds
add
in
cmp
push
cli
cmp
pop
or
jns
sub
pop
in
fs
leave
xchg
pop
mov
adc
xchg
jle
stc
mov
xchg
fmulp
add
dec
mov
or
mov
sbb
sub
retf
sahf
xchg
add
jp
dec
add
sbb
movs
call
push
cld
sahf
cwde
std
adc
pop
jmp
sar
(bad)
ds
test
mov
mov
aad
retf
data16
loop
(bad)
cmp
test
cdq
mov
scas
xor
or
xchg
stos
rcl
pop
movs
hlt
dec
and
and
mov
jmp
push
inc
sub
add
aas
xchg
jo
into
cmp
out
lds
dec
ror
call
imul
pop
or
dec
dec
mov
jl
pop
(bad)
pop
das
stc
jg
jecxz
sub
mov
cdq
jecxz
and
and
jne
xchg
aad
popf
cmp
jle
inc
mov
in
adc
inc
pop
jmp
xor
jb
and
jp
mov
inc
stc
mov
cdq
sub
sti
cmps
popf
ins
or
xchg
adc
cmps
dec
cmc
dec
mov
mov
jg
pop
scas
and
xchg
sbb
xchg
push
aad
cmp
arpl
dec
mov
scas
movs
jae
int3
xor
xchg
mov
adc
sar
gs
int
in
jb
jae
sbb
xor
out
xor
and
leave
jns
nop
test
fsubr
mov
push
bound
data16
rol
leave
sub
lods
out
pop
xor
jle
xor
dec
lods
lods
mov
cmp
push
adc
sbb
mov
ss
cs
sub
scas
in
daa
xchg
mov
and
pusha
fild
add
pusha
sub
jle
mov
push
int3
movs
(bad)
cmp
or
daa
call
stc
lods
mov
cmps
cmp
xchg
jne
int3
shl
ret
adc
add
jp
xchg
test
sub
adc
sub
fs
mov
or
sbb
add
mov
fsub
test
jae
adc
in
lods
jmp
out
adc
jle
(bad)
sbb
lods
xchg
imul
xor
pop
stos
int3
stos
xor
and
xor
cmp
neg
jo
fucom
inc
dec
adc
dec
outs
pop
add
xchg
inc
sbb
sub
jg
fs
sar
push
xor
hlt
bound
cmps
aas
gs
mov
loopne
mov
jge
and
adc
leave
std
mov
test
stos
pop
adc
xor
push
jmp
hlt
outs
repz
cwde
xchg
jle
test
inc
gs
rcl
add
inc
fstp
cs
jg
movs
icebp
arpl
jg
pop
jbe
ficomp
add
cmp
push
mov
dec
push
aas
inc
cmc
push
in
popf
push
xchg
sub
call
or
sub
leave
sbb
sti
pushf
(bad)
es
cs
mov
imul
daa
or
outs
repz
xchg
add
cld
sar
mov
xchg
push
adc
cmp
jb
xor
sub
dec
lods
test
jle
movs
cmp
jns
ffreep
test
jmp
ins
mov
ds
xchg
stos
push
popa
mov
ror
sub
daa
(bad)
(bad)
sub
or
repnz
jg
inc
cmove
lock
add
mov
popf
daa
test
xor
pop
outs
cmps
push
xchg
outs
pop
ja
lea
cmp
sbb
inc
into
mov
pop
leave
loope
fild
mov
inc
arpl
lock
dec
cmps
push
aas
out
ins
or
push
lods
push
repz
sub
mov
test
sub
or
xor
mov
sbb
push
fnsave
push
int3
mov
mov
add
mov
mov
(bad)
loopne
sbb
mov
xchg
addr16
es
xor
xchg
sahf
jg
mov
sbb
sbb
sub
pop
mul
ds
or
adc
ror
ret
pop
lds
pop
js
ja
les
in
repnz
inc
xor
mov
(bad)
cmp
fbstp
mov
xchg
cwde
add
add
dec
mov
sbb
fcom
sbb
pop
adc
or
xor
jl
stos
out
out
xor
add
xchg
ror
into
push
mov
gs
test
push
ja
(bad)
xor
sbb
inc
mov
jne
jb
and
dec
js
sub
lock
pop
push
das
mov
mov
mov
mov
sbb
loop
mov
pop
retf
cwde
ror
shr
sbb
addr16
and
sbb
sub
xor
sti
and
push
mov
mov
outs
jbe
sub
mov
pop
xor
addr16
mov
out
fnstenv
add
jns
push
or
fadd
bound
jae
mov
mov
or
pop
arpl
fsub
mov
(bad)
pop
cmp
push
jg
mov
shl
fs
cmp
adc
fadd
pop
imul
push
(bad)
adc
stos
lods
pop
fdiv
jge
repz
xor
inc
sub
jl
inc
movs
bound
int3
or
sub
iret
mov
stc
jecxz
outs
bnd
mov
cmp
sbb
sub
loopne
out
adc
sub
loop
and
jg
xchg
cmp
inc
mov
jmp
add
dec
iret
cmp
sub
in
cmp
cmp
movs
pop
sbb
in
clc
fs
sub
nop
data16
lea
xchg
stos
int
xor
add
retf
aas
(bad)
retf
out
and
outs
jae
in
xor
(bad)
and
shr
in
xchg
or
ret
push
pop
(bad)
jo
dec
push
in
scas
loope
fiadd
outs
lock
adc
aaa
inc
clc
call
cmp
mov
fild
push
lea
aad
sahf
push
sub
mov
div
ja
aas
aad
and
add
jo
jmp
xor
lods
or
out
adc
xchg
mov
mov
rcr
jle
sbb
and
dec
es
fs
ret
jge
jb
int
xor
add
int3
popa
add
push
loopne
adc
inc
sub
cmps
sub
outs
out
or
jge
js
addr16
add
xor
cdq
and
mov
sub
mov
(bad)
in
adc
cdq
fisttp
push
fcom
inc
fisub
mov
aaa
push
sub
repnz
aaa
retf
pop
mov
push
add
pop
ret
(bad)
jp
fisttp
dec
inc
rol
dec
and
jmp
mov
pop
gs
push
sbb
sbb
(bad)
rol
test
inc
loope
enter
mov
cwde
or
scas
dec
xchg
cmp
jns
or
daa
and
mov
out
addr16
cmp
in
fwait
mov
pop
push
out
lods
gs
mov
xchg
aam
xchg
pushf
dec
in
xchg
inc
(bad)
mov
xchg
popa
push
(bad)
pop
xor
mov
in
adc
mov
fild
fild
je
aam
(bad)
pop
mov
loopne
and
sbb
xchg
add
adc
enter
or
cld
(bad)
jmp
inc
dec
sub
mov
(bad)
rcl
cmp
clc
(bad)
pop
arpl
out
mov
inc
xchg
movs
jbe
mov
pop
ins
cmp
mov
in
jl
js
leave
gs
cwde
fwait
push
jge
or
and
pop
enter
add
jae
or
sbb
dec
pop
mov
ja
loope
push
push
inc
xchg
dec
stos
scas
ret
int3
out
loope
jl
jne
mov
mov
or
xor
jb
leave
outs
fbld
add
dec
addr16
popf
stc
add
sub
pop
repnz
shl
push
out
dec
dec
int3
inc
mov
or
cmp
sti
sbb
cld
imul
(bad)
call
cmp
cmp
push
cmp
std
out
js
in
cmp
sahf
fist
xor
jp
xor
push
int3
ficom
int
imul
(bad)
push
cmp
fistp
mov
mov
fcmovnu
aaa
mov
mov
(bad)
xchg
mov
inc
and
mov
in
xchg
and
je
mov
fist
adc
dec
cmp
push
mov
cmp
call
seto
aam
xor
xchg
jge
or
dec
stos
dec
iret
mov
icebp
test
jb
mov
ds
mov
loop
movs
imul
cmp
rol
and
xchg
fs
pop
push
je
shr
add
dec
pop
xchg
lock
ret
mov
jp
mov
mov
adc
repz
inc
jo
stc
(bad)
pop
stos
imul
mov
mov
loop
pop
push
popa
push
sub
xor
or
leave
ror
xor
push
adc
xor
gs
mov
call
xor
mov
mov
scas
or
cld
inc
call
cmp
fstp
jae
(bad)
movs
sub
xor
mov
pop
mov
sbb
fistp
in
adc
cmps
jnp
jl
pop
lea
in
push
and
inc
mov
pushf
imul
adc
xor
pop
mov
cs
push
rcr
pop
pusha
add
in
dec
and
stos
jne
dec
mov
mov
mov
or
dec
jl
pop
addr16
js
mov
mov
inc
stos
bound
push
add
aam
mov
icebp
call
ret
sbb
lods
mov
sub
daa
xchg
jo
pop
outs
xlat
lock
lods
cli
retf
cmc
jae
addr16
push
jne
call
sti
mov
and
xor
or
add
add
mov
bound
xchg
psrlq
or
xlat
inc
xor
dec
push
das
repz
cdq
mov
mov
push
pusha
call
jno
push
sbb
loop
mov
lea
jmp
cmp
adc
sahf
aad
shl
mov
inc
or
fwait
mov
mov
or
mov
push
jge
xlat
mov
(bad)
psrld
and
data16
stos
aad
mov
dec
cmp
sbb
xor
or
cmps
into
aam
push
jge
cmc
out
cmp
loopne
das
test
inc
xchg
shr
psubw
and
dec
add
xchg
pop
fcmovnu
outs
dec
mov
lods
cmp
adc
stc
lahf
xchg
xchg
cmc
push
xor
hlt
cdq
test
inc
ss
(bad)
movs
jae
aad
dec
shl
dec
xchg
inc
int3
add
sysexit
mov
xor
jg
shl
gs
jg
outs
(bad)
xor
mov
fisub
adc
xchg
pop
sar
cmp
movs
dec
aas
sahf
xlat
sbb
pop
fwait
outs
xor
in
sbb
dec
int
push
imul
jbe
dec
sbb
cmp
lahf
push
push
mov
mov
or
shl
cs
inc
push
cmp
retf
inc
pop
sub
shl
je
bound
mov
dec
test
push
inc
sar
and
out
or
or
jp
sub
mov
cmps
add
mov
jmp
inc
pop
mov
iret
(bad)
(bad)
jl
cwde
pop
data16
frstor
cmp
dec
sar
and
adc
lds
sub
dec
dec
push
test
fbld
mov
mov
push
and
cmp
(bad)
std
inc
inc
and
xchg
lds
dec
jb
and
cmp
ds
pop
icebp
add
jecxz
scas
retf
je
sti
rcr
fild
sub
neg
test
inc
and
mov
out
loop
push
dec
repz
sub
fnstsw
sub
adc
pop
in
jne
hlt
dec
retf
xor
adc
pushf
imul
imul
and
sub
push
inc
inc
cld
out
mov
inc
cmps
mov
sbb
or
jb
or
enter
out
sbb
ss
aaa
inc
scas
aaa
jne
jae
out
and
test
or
add
xor
push
test
sbb
or
dec
shl
(bad)
jne
dec
jne
gs
mov
xchg
movs
rol
lock
lods
add
loopne
mov
retf
jne
or
out
(bad)
jb
pop
inc
pop
mov
mov
push
and
pop
nop
pop
repnz
sub
jne
dec
movs
jnp
mov
scas
dec
nop
sbb
mov
push
xlat
add
retf
ins
mov
or
popa
mov
inc
mov
ret
adc
adc
rcr
sub
int
es
stos
and
cdq
mov
inc
test
fisub
sub
sub
sbb
mov
arpl
cwde
sbb
scas
movs
cmp
cli
mov
ds
inc
leave
nop
sbb
push
(bad)
shl
retf
div
in
add
sbb
out
push
adc
inc
cmc
push
hlt
js
and
lods
fisub
cmps
xchg
mov
mov
nop
jo
add
mov
(bad)
aaa
sub
rcl
shl
test
adc
push
loope
or
mov
jmp
pop
mov
mov
sbb
mov
rcr
jg
mov
neg
jmp
repz
call
ja
jb
xchg
scas
and
dec
retf
jp
jp
adc
out
push
xchg
test
sahf
jbe
bound
and
retf
add
mov
cld
loope
mov
jle
add
stos
xor
fimul
xor
push
jmp
pop
jp
and
scas
cmp
or
arpl
mov
popa
mov
mov
fsubr
adc
lea
call
add
sub
(bad)
xchg
jle
xchg
add
lods
push
sbb
and
mov
fnstcw
inc
mov
into
adc
repnz
aam
inc
pop
cmp
adc
dec
into
sub
mov
xor
jo
sbb
xchg
fsub
inc
ret
loopne
cmp
imul
sahf
push
imul
inc
sub
mov
and
mov
or
jle
or
jl
sub
pop
xlat
lock
enter
push
ss
sub
inc
xchg
mov
dec
jb
rcl
out
sub
mov
idiv
call
push
in
mov
in
in
add
fsin
std
or
cmc
or
bound
test
dec
into
cdq
outs
pop
sahf
push
dec
jno
add
mov
cs
inc
mov
das
add
adc
xchg
(bad)
js
stos
rcl
push
ins
gs
in
fwait
jno
in
dec
or
loope
cmp
sub
mov
cld
xor
or
jb
push
pop
arpl
pop
and
test
repz
gs
adc
dec
hlt
jb
inc
mov
pop
daa
xor
xor
call
add
and
cmp
les
test
inc
cwde
adc
ja
and
cmp
and
scas
repz
sub
mov
jmp
jae
mov
cmps
fldenv
mov
xor
xor
sub
js
push
and
mov
mov
xor
sub
cmp
sbb
aad
xor
(bad)
out
push
out
xchg
dec
adc
out
push
scas
(bad)
je
sbb
out
push
mov
cmp
gs
int
xchg
xor
(bad)
out
xor
cmps
movs
cmp
pop
sub
pop
dec
es
movs
push
cmp
push
jns
mov
mov
xor
enter
sti
fbstp
mov
subps
xor
das
add
cmps
arpl
movs
daa
or
int
pop
(bad)
adc
and
inc
dec
xor
dec
nop
je
nop
cmc
add
xchg
sub
ret
test
lahf
and
hlt
mov
dec
bound
movs
lods
fcom
xchg
(bad)
out
loop
retf
repnz
lods
leave
movs
std
fisub
pop
iret
adc
inc
out
shl
repnz
mov
cmp
test
jmp
cmp
nop
adc
pop
mov
sbb
int3
add
sbb
enter
jl
call
mov
neg
pop
push
or
fist
shufps
mov
pmulhw
jge
imul
pop
movs
(bad)
sbb
push
sbb
loopne
cli
popf
push
jp
adc
stos
int3
es
add
pushf
dec
sbb
sbb
mov
aas
mov
jge
shr
or
xchg
aam
mov
cmc
sbb
jne
data16
fimul
xrelease
or
(bad)
cmps
es
mov
les
stos
and
cli
pop
push
cmp
jmp
push
mov
jb
push
xchg
push
mov
call
shl
aam
ror
mov
xchg
mov
pop
mov
test
hlt
push
jnp
in
sub
mov
stos
xchg
push
cmps
adc
or
mov
cmps
xchg
loopne
mov
add
cmp
icebp
fucom
xchg
pop
dec
sub
fisubr
movs
xchg
inc
es
cmp
mov
rcr
jb
sar
xchg
adc
fstp
fsub
repnz
jge
into
push
pop
add
xchg
js
dec
dec
imul
or
iret
in
outs
rol
cmps
pop
cdq
les
shl
jp
mov
leave
in
pushf
movs
sub
cdq
das
jmp
sti
xor
cli
mov
sub
push
ror
out
scas
call
loop
mov
or
emms
adc
in
or
pop
popa
xor
adc
into
and
push
push
pop
cmc
push
fmul
xor
repnz
cmps
hlt
adc
push
aam
repz
jmp
je
push
int3
pop
pop
pushf
retf
adc
loopne
pushf
outs
add
cmps
cmp
call
ror
jne
sbb
pop
(bad)
mov
add
movs
dec
movs
les
add
and
(bad)
xlat
inc
sub
stos
cmp
xchg
pushf
add
stos
out
imul
pop
and
and
dec
sub
retf
packuswb
gs
sub
pop
pop
jle
(bad)
stc
adc
(bad)
push
push
add
xchg
jnp
call
mov
mov
adc
outs
bswap
(bad)
and
xor
jne
enter
jmp
xor
add
retf
cmp
mov
cmp
lahf
sbb
xlat
xor
jmp
lock
adc
js
pop
xchg
into
sar
xor
cmp
inc
add
hlt
cmps
das
loope
jo
loope
mov
jns
ficomp
jmp
loope
mov
out
add
add
ret
inc
nop
mov
sbb
or
jmp
pop
std
icebp
or
push
adc
inc
fisttp
inc
into
push
pop
inc
int3
movs
adc
mov
ja
icebp
outs
popa
sub
pop
loop
push
jo
out
mov
push
inc
arpl
imul
std
outs
arpl
fwait
sub
(bad)
pop
jle
nop
push
test
pop
stos
inc
jbe
fwait
ret
mov
retf
sub
pop
jecxz
cmp
dec
adc
ret
int3
icebp
mov
fisub
pop
sub
sub
movs
jo
shr
call
dec
fldcw
ror
xchg
and
pop
push
les
cmp
mov
nop
outs
pop
jae
mov
leave
loop
mov
jmp
retf
(bad)
xchg
int
daa
cmps
dec
mov
out
pop
popf
mov
fld
inc
ja
cld
or
mov
inc
jmp
shl
(bad)
aam
adc
cmc
enter
pop
cwd
outs
hlt
ror
movs
push
or
inc
push
adc
pop
cmp
adc
or
sahf
popa
in
leave
mov
test
add
ja
cwde
sahf
loopne
(bad)
sbb
mov
aas
in
aaa
test
sub
sub
sub
mov
ja
cmp
das
mov
adc
mov
pop
jns
mov
imul
bnd
loope
adc
pusha
pop
dec
jo
and
shl
scas
push
sub
mov
mov
jmp
jmp
icebp
dec
mov
sub
movs
iret
fnstsw
lock
push
push
mov
fs
hlt
sbb
dec
jle
xchg
dec
mov
pop
cdq
outs
jae
lahf
and
aaa
pop
mov
pusha
rol
(bad)
stos
sub
lods
test
mov
je
out
in
cmps
aas
pop
sti
jb
int3
cmp
push
data16
mov
inc
ins
shl
xchg
sar
ja
stos
xchg
xchg
ret
fsubr
inc
jecxz
gs
or
scas
xchg
not
fmul
mov
mov
in
mov
sub
out
add
sbb
xchg
data16
add
clc
mov
and
xor
into
inc
outs
add
(bad)
push
in
xchg
in
ror
fild
inc
loopne
mov
dec
jnp
pop
and
or
outs
stos
push
cwde
in
mov
mov
cmp
in
push
pop
xor
repz
out
mov
in
cmp
adc
call
add
dec
mov
std
mov
jo
popa
leave
movs
pop
mov
inc
xchg
push
ins
jae
retf
(bad)
mov
div
imul
out
push
pop
xchg
xor
xchg
xor
cmps
sub
loop
xor
cmp
mov
push
rcr
fstp
rcl
inc
mov
popa
lods
sbb
jl
test
jns
and
inc
push
cs
pop
dec
out
repz
or
inc
lock
or
add
push
pop
dec
ss
xchg
icebp
ds
inc
call
das
jae
and
(bad)
pop
aas
sahf
inc
sbb
sub
xor
in
add
inc
inc
js
xchg
sar
dec
mov
retf
out
sbb
push
adc
mov
push
inc
xchg
jmp
mov
xchg
push
xchg
lahf
dec
mov
addr16
aaa
and
ss
sahf
lea
rol
mov
push
sub
fsub
hlt
push
sbb
mov
or
xchg
mov
les
mov
pop
out
mov
ss
scas
mov
lods
cdq
dec
cmps
call
dec
lods
stc
mov
add
stc
sbb
movs
es
das
movs
test
cwde
fsubr
and
cdq
dec
and
clc
push
mov
cli
call
xor
and
retf
jecxz
lock
in
pop
cmp
add
mov
dec
cs
dec
into
mov
aaa
push
sub
cs
or
in
mov
cdq
nop
add
cmc
bnd
test
popa
stos
popa
mov
push
aad
cmp
dec
cmp
push
or
and
test
lea
mov
ja
clc
or
pop
sub
ss
gs
aad
(bad)
(bad)
clc
(bad)
repz
inc
push
aad
inc
adc
jno
out
gs
pop
push
rcl
test
cmps
je
jp
fcom
cmp
mov
jmp
rcl
cmp
fnsave
xor
jo
push
mov
cmp
loop
sbb
inc
xchg
bnd
pop
xchg
retf
mov
mov
cmp
movs
addr16
pop
nop
sbb
sbb
xor
mov
cli
and
inc
push
inc
pop
daa
fidiv
std
adc
add
jb
xchg
or
call
icebp
push
aaa
and
push
div
mov
add
nop
into
test
or
push
mov
push
fsubr
sub
fdivr
fild
fdivr
mov
imul
push
dec
aas
pop
or
out
imul
lea
jno
sub
adc
ss
imul
ins
pusha
jecxz
stos
out
jae
mov
fild
sub
mov
xchg
adc
sub
cs
test
pop
test
ret
out
ja
js
cwde
xchg
jns
cs
pusha
add
cmp
mov
ds
outs
pop
or
xor
or
(bad)
rol
push
cmp
arpl
outs
adc
fiadd
fs
cmp
mov
xor
mov
into
repz
data16
outs
cwde
jnp
add
sbb
push
jnp
dec
cmp
dec
inc
in
cmp
(bad)
lock
cmp
xchg
mov
int3
dec
pop
pop
shr
mov
dec
adc
pop
mov
push
push
cmps
scas
fwait
movs
ja
lea
push
sahf
jnp
outs
pushf
into
call
cmc
int
out
fist
(bad)
ss
lahf
mov
adc
test
sbb
and
outs
push
fwait
jl
dec
pop
stc
sahf
add
arpl
stos
scas
sub
shr
push
pop
add
(bad)
inc
xor
push
sbb
ja
inc
fsubp
xor
push
cmp
(bad)
xor
cs
retf
or
test
xchg
xor
mov
mov
push
ins
sbb
mul
adc
sar
pop
dec
inc
imul
ss
ror
fs
jnp
sub
add
and
xchg
data16
mov
mov
xchg
adc
sbb
icebp
es
cmps
pop
retf
inc
xchg
jp
jbe
pop
out
into
adc
fstp
neg
mov
rcr
push
ds
mov
mov
jnp
jbe
push
xor
fld
repnz
dec
dec
nop
dec
jno
mov
int
inc
rcr
push
hlt
cli
xor
sbb
inc
fsubr
mov
mov
xchg
les
and
fnstsw
add
sbb
dec
(bad)
mov
addr16
(bad)
mov
jnp
rol
push
jbe
add
mov
jge
and
scas
aas
shl
xchg
dec
fs
in
cwde
jmp
cmp
mov
pop
(bad)
push
ror
xchg
dec
and
pop
mov
push
stos
into
je
out
inc
inc
jmp
fs
out
aam
popf
dec
lock
lea
fcom
and
bnd
ret
mov
pushf
sub
inc
mov
and
fidivr
(bad)
pop
sub
mov
icebp
jnp
mov
ret
mov
mov
fimul
xchg
pusha
inc
push
fcmovnbe
jmp
repnz
daa
les
sbb
and
and
xlat
call
fisttp
js
fstp
or
mov
xchg
jo
in
ja
push
cmp
ffreep
pop
adc
mov
mov
cmp
mov
shl
pop
jb
(bad)
fwait
add
(bad)
aaa
mov
xchg
mov
jl
aad
dec
dec
loopne
clc
sub
stc
add
mov
sub
push
mov
ror
push
xchg
xlat
das
jmp
sub
mov
leave
xor
jne
sbb
mov
aaa
ja
neg
adc
sub
or
hlt
dec
inc
out
jge
icebp
cmp
fidivr
or
movs
clc
xchg
stos
iret
and
retf
adc
inc
cmp
mov
js
or
adc
xor
sbb
inc
mov
not
pop
test
mov
data16
adc
repz
cmps
jo
popf
jle
jnp
mov
mov
push
mov
mov
sub
pop
mov
aaa
push
rol
mov
jnp
add
(bad)
mov
cmp
mov
mov
call
lods
scas
cld
mov
mov
pop
mov
mov
je
mov
xchg
(bad)
addr16
test
repnz
test
inc
or
inc
sub
or
mov
mov
das
cmp
mov
aam
mov
and
scas
pop
pop
(bad)
ss
sub
int3
pop
mov
lock
pop
(bad)
adc
xlat
outs
adc
(bad)
mov
rsqrtps
pop
mov
ficomp
add
retf
cmp
out
add
jl
push
rcr
fst
pop
push
mul
jo
or
es
ss
inc
push
shr
pop
fstp
pop
test
inc
or
pop
cdq
ficom
mov
or
fidiv
hlt
dec
mov
lea
stos
cld
jne
xor
jp
aas
add
movs
cdq
in
movs
mul
dec
mov
leave
push
mov
push
pop
aad
sbb
jns
mov
xor
xchg
aaa
retf
enter
add
xchg
and
push
mov
shl
mov
lea
mov
fistp
loope
add
xor
in
popa
mov
aad
or
jb
adc
xor
or
popf
jecxz
sub
mov
cmp
pop
fs
stos
xchg
add
sub
mov
xchg
fmul
sub
div
mov
inc
mov
daa
mov
fdivrp
hlt
xor
and
(bad)
js
sub
daa
ret
push
pop
push
push
mov
xchg
push
(bad)
enter
sti
mov
ins
cmp
dec
repnz
jg
or
jle
loope
add
mov
mov
loopne
ja
std
out
loope
mov
in
sub
add
sub
out
mov
mov
sbb
mov
dec
sub
xor
test
fwait
xor
mov
xor
cmp
mov
or
mov
inc
dec
(bad)
clc
mov
int3
jl
push
jns
xchg
addr16
sbb
push
adc
nop
sub
out
xchg
dec
inc
sub
mov
or
loopne
xor
mov
mov
hlt
xlat
adc
pop
and
mov
pushf
das
mov
call
jo
aaa
lahf
call
fsubr
jns
out
xchg
fidiv
mov
mov
jp
or
in
push
les
popa
jle
scas
int
mov
dec
inc
or
scas
daa
stc
daa
cmps
mov
dec
mov
jb
push
stos
sbb
add
sti
cmp
mov
cwde
sub
mov
cmp
sbb
retf
push
pop
dec
fcompp
cmp
mov
mov
loop
jle
or
jne
mov
push
and
mov
leave
dec
cwde
bound
jg
mov
lock
sbb
mov
xchg
push
jmp
imul
add
mov
sub
repz
sbb
dec
repnz
test
lahf
outs
mov
aam
sub
out
out
xor
loop
and
cmp
enter
cs
dec
mov
call
loop
or
adc
mov
mov
inc
inc
nop
xor
adc
popw
mov
shl
daa
mov
inc
les
pop
test
cmp
xor
pop
sub
rol
lea
sbb
fld
(bad)
push
xchg
inc
sub
retf
cld
cdq
popf
scas
ss
nop
fsubr
add
sub
ret
(bad)
aas
inc
inc
sub
in
pop
fmul
sbb
repz
mov
nop
pop
push
call
aas
mov
mov
sbb
ins
mov
and
xchg
dec
push
xchg
pop
inc
in
sbb
xchg
jge
or
xor
push
test
ss
jecxz
cwde
out
jns
rol
mov
sub
or
dec
es
push
cmp
into
mov
pop
dec
xor
push
xchg
jns
frstor
aas
out
inc
or
ja
cmp
ficomp
push
sbb
mov
or
pop
pop
dec
push
retf
stos
mov
adc
inc
sbb
rcr
in
jle
je
neg
mov
mov
dec
xchg
shr
push
mov
stc
out
les
xchg
sbb
pusha
mov
sbb
xchg
ins
call
ror
(bad)
or
pop
cmp
mov
dec
sub
(bad)
cld
mov
aaa
in
mov
mov
mov
mov
lods
and
fisubr
clc
je
pop
lods
call
sub
cmp
jo
cmp
bound
jo
arpl
je
xchg
push
jmp
test
dec
jne
cmc
popaw
mov
pop
outs
lea
jnp
add
xor
push
sub
add
jne
lds
adc
pop
mov
test
ror
sub
and
lea
pop
pushf
mov
and
shl
add
cdq
(bad)
cmp
pop
jmp
mov
data16
fldcw
lods
hlt
ds
ds
dec
cmp
mov
(bad)
sub
call
sbb
and
cmp
jge
inc
mov
pop
sub
mov
mov
pop
jg
ret
fwait
adc
sub
jecxz
add
mov
cmps
add
out
imul
sbb
test
or
mov
cwde
push
stos
test
jns
inc
adc
into
sub
sbb
mov
pop
cmps
inc
cmp
fcom
iret
mov
sbb
sti
or
clc
popa
or
inc
das
xchg
fcomp
mov
push
mov
mov
loopne
ret
mov
cmp
jl
stos
cmp
cwde
sbb
or
sub
add
push
and
ss
jle
adc
call
lahf
int
nop
mov
iret
mov
sbb
pusha
mov
imul
xor
xor
mov
jl
dec
adc
pop
out
ss
call
cmp
test
or
outs
ja
mov
inc
cs
repnz
pop
and
daa
sub
jmp
leave
xchg
(bad)
ins
retf
sbb
pushaw
pop
fiadd
in
and
aaa
or
loope
test
iret
cmp
sbb
test
sbb
int
icebp
imul
or
hlt
mov
pop
jmp
add
repz
loop
pop
test
pop
push
rol
test
outs
jo
gs
sbb
and
xchg
jne
jno
dec
mov
xchg
paddsb
push
push
jmp
jmp
ss
mov
movs
stc
in
adc
mov
lods
push
into
loop
loope
cdq
and
in
pop
mov
(bad)
jg
fsubrp
out
xchg
test
jae
jp
loope
stos
mov
push
or
out
outs
shl
lock
sub
xor
xchg
pop
cwde
jge
or
loope
iret
pop
test
inc
and
inc
in
jb
dec
mov
ret
cmps
loope
repz
scas
cmc
int
jb
mov
mov
scas
jns
pop
and
das
adc
xchg
or
and
sti
leave
fmul
aas
lea
xchg
mov
fadd
fidiv
mov
or
adc
in
dec
aas
aaa
inc
les
sbb
ss
arpl
push
movs
sbb
push
int3
mov
dec
push
add
out
outs
daa
repz
stc
mov
mov
xor
ins
push
push
out
dec
out
push
cmp
shl
cmp
cmp
imul
jmp
cmp
fs
sbb
sbb
push
inc
scas
mov
inc
mov
xchg
add
add
les
push
xchg
add
dec
or
adc
cwde
addr16
dec
loop
push
and
mov
lahf
adc
movs
or
xchg
sub
sbb
ror
loopne
daa
ss
jmp
shl
aad
or
mov
pop
pop
mov
ss
addr16
addr16
loop
mov
pop
retf
fcomp
inc
loop
lods
retf
jl
mov
jp
cmp
(bad)
sub
loope
(bad)
pop
xchg
into
add
int
not
push
imul
or
paddb
or
test
iret
test
dec
test
push
mov
sub
leave
dec
jecxz
cli
jae
scas
mov
mov
sahf
or
(bad)
ins
movs
sub
inc
jle
push
sub
iret
out
cli
cli
rcr
test
in
sti
dec
popa
pop
mov
add
jmp
cmp
mov
popf
sbb
jno
leave
das
and
hlt
popa
shl
jp
or
push
xchg
push
jge
icebp
mov
xchg
sbb
pop
and
and
cmps
pop
xor
mov
cmps
cli
dec
cld
inc
sar
sub
and
pop
adc
mov
add
test
arpl
push
das
ss
pop
lods
(bad)
sub
push
call
pop
outs
push
nop
stos
and
bndldx
push
and
xchg
shl
fmul
iret
push
xchg
pop
and
scas
arpl
mov
and
(bad)
adc
sbb
fistp
mov
and
outs
sti
mov
and
lods
or
call
cli
outs
fcmovbe
sub
stc
in
jp
mov
push
inc
aad
xor
test
and
ins
inc
mov
popa
dec
loopne
xor
mov
jo
xor
xor
adc
imul
fmul
add
shl
jo
inc
addr16
xchg
sub
push
movs
pop
pop
xchg
adc
aad
mov
fmul
jg
jo
jne
cdq
xor
mov
pop
xor
mov
add
not
aad
imul
shl
popf
sub
(bad)
jo
(bad)
std
leave
push
sbb
add
jno
ret
xor
mov
dec
mov
leave
mov
scas
mov
clc
push
mov
cdq
sbb
sbb
aaa
(bad)
aas
xchg
mov
xchg
mov
xchg
dec
add
std
lods
pop
dec
loope
sub
jnp
in
fsubrp
push
or
mov
add
or
hlt
jl
ret
add
inc
into
jecxz
cmp
pushf
push
test
push
call
sub
mov
xor
in
xchg
xor
adc
cs
fst
add
(bad)
pusha
pushf
arpl
call
push
outs
(bad)
hlt
(bad)
xor
pop
lods
mov
lea
popf
neg
lock
cmp
mov
test
outs
int3
jp
stc
leave
mov
jae
bswap
mov
pop
push
adc
(bad)
(bad)
pusha
stos
fild
retf
sbb
popa
int
ror
cli
into
movs
sub
mov
mov
sub
and
push
and
push
mov
(bad)
mov
jbe
cmp
inc
inc
mov
test
imul
sbb
arpl
mov
cmc
(bad)
ret
cmp
(bad)
xor
cmp
mov
sub
pop
mov
mov
dec
xor
add
cs
icebp
xchg
mov
pop
les
mov
or
int
pop
movs
in
mov
jb
mov
dec
xor
pop
js
xchg
seta
sbb
sbb
sbb
xor
fdivr
loope
ror
mov
bound
das
push
fcom
or
inc
les
sub
add
push
test
rcl
daa
inc
ins
pop
pushf
mov
int
sbb
xor
cmc
sub
(bad)
jle
pop
xchg
scas
les
int3
dec
fild
inc
jmp
inc
stos
pop
rcl
jp
xor
add
cmc
in
stos
mov
test
mov
out
xchg
pop
shl
in
sub
stos
and
push
pusha
jb
adc
mov
xchg
jnp
or
mov
pop
cmp
mov
test
mov
lods
in
mov
outs
pop
mov
inc
ret
pop
iret
sub
js
add
xor
jno
(bad)
imul
xchg
jno
inc
jns
add
rcr
mov
das
adc
cmps
push
ret
mov
and
pop
add
and
jae
and
inc
test
movs
xchg
(bad)
outs
cmp
hlt
jae
adc
adc
jl
addr16
je
pop
in
(bad)
sbb
or
sar
jge
retf
imul
add
mov
ds
scas
in
data16
push
scas
xor
cmp
movs
xchg
mov
add
dec
popf
adc
xor
retf
rol
cmps
and
je
ror
jae
cmp
xchg
pop
lods
mov
and
cmps
int3
mov
mov
pop
cmp
stc
and
pop
dec
pop
inc
mov
imul
pop
div
shr
out
test
repz
pop
jmp
inc
lods
inc
push
cmp
mov
pop
push
adc
pushf
cmps
in
mov
inc
mov
mov
sti
push
xor
sub
cmp
test
pop
xor
xor
pop
call
add
jne
xor
add
or
jo
jnp
je
jmp
dec
or
push
mov
test
adc
lods
int
adc
lds
sub
push
call
scas
mov
out
imul
xor
mov
(bad)
push
(bad)
or
mov
adc
stc
ins
cld
or
fcomp
mov
movs
dec
inc
pop
cmp
cs
(bad)
mov
jle
addr16
stc
call
sahf
jge
ins
mov
add
push
fldcw
outs
cmc
retf
mov
fwait
cmp
pop
loopne
outs
cmp
jle
push
dec
jl
xor
cmp
adc
(bad)
daa
das
cmps
ss
sub
jae
mov
js
loop
(bad)
stc
fs
rcl
ja
loop
add
cld
enter
cmp
hlt
icebp
scas
in
mov
push
fdivp
rcr
push
outs
xor
shr
fs
and
adc
cmps
les
or
dec
jge
(bad)
jae
repnz
mov
cmp
loope
clc
xor
pop
add
cs
and
sub
sub
pop
mov
or
mov
mov
dec
nop
jne
jg
xor
call
dec
popf
and
xlat
ds
xchg
shr
and
lock
(bad)
stos
fld
jb
jbe
add
outs
mov
pop
inc
test
aas
inc
mov
iret
add
nop
xor
cli
call
push
sbb
clc
mov
hlt
icebp
fild
stc
popf
sub
popa
adc
push
push
jbe
test
(bad)
bound
imul
inc
cld
sbb
ret
or
inc
lea
aaa
int
mov
jmp
(bad)
sub
add
cmps
outs
mov
(bad)
mov
pop
push
inc
sbb
mov
push
mov
loopne
test
fbld
add
push
stc
mov
cmp
rcl
ins
pop
out
in
in
mov
cld
mov
push
and
lea
popf
and
dec
push
retf
es
mov
pop
cmp
and
pop
fcom
not
sub
sub
jge
mov
inc
aaa
or
bound
shl
xor
sbb
pop
adc
fdivr
xchg
dec
ficomp
loopne
cwde
cmps
repnz
xor
pop
sahf
loope
mov
leave
sbb
les
or
jmp
in
jnp
jne
(bad)
fsub
mov
sbb
push
jae
and
dec
mov
sub
lahf
pop
xchg
pop
xchg
fst
jmp
test
dec
dec
sahf
dec
out
enter
movs
icebp
stos
add
bound
sbb
shr
mov
in
cdq
mov
jne
cwde
sahf
es
ds
loop
mov
mov
(bad)
jle
loop
adc
xchg
dec
loop
xchg
data16
dec
cmp
add
push
or
dec
popf
stc
xchg
nop
add
mov
(bad)
mov
(bad)
dec
cmp
cmps
ret
loope
mov
dec
xchg
cmp
fidiv
(bad)
mov
push
nop
bound
pop
push
inc
inc
xor
sub
std
lods
and
jl
clc
out
and
in
pop
push
adc
cmp
dec
je
xchg
adc
out
dec
xchg
hlt
cmp
sub
mov
or
mov
dec
sbb
cmp
cli
in
inc
inc
ror
jmp
adc
adc
clc
xlat
daa
ret
test
mov
pushf
jmp
mov
push
jg
dec
outs
push
data16
ss
popa
pop
rcl
in
sbb
mov
popa
call
pushf
cmp
(bad)
iret
out
cmp
lods
enter
shl
mov
pushf
fs
scas
cdq
xchg
cli
stc
inc
std
inc
mov
loopne
mov
or
aam
fnstcw
mov
test
jge
into
ret
push
cli
mov
mov
xchg
call
or
inc
ins
sub
or
pushf
dec
and
in
bound
mov
xor
or
inc
sub
xor
stos
jge
or
add
sti
leave
test
cld
push
jae
fs
jae
xchg
pusha
shl
mov
outs
cmp
loop
stc
lds
adc
sahf
lds
mov
lods
idiv
(bad)
pushf
add
or
fwait
adc
adc
ja
ret
cmps
xchg
inc
adc
jae
xchg
movs
cli
cmp
push
sti
fild
not
sub
adc
hlt
js
cmc
std
mov
dec
fwait
push
pop
int3
hlt
ins
pop
push
push
sub
leave
push
dec
dec
hlt
mov
pop
scas
(bad)
xor
sub
adc
or
rcr
enter
xor
(bad)
sbb
scas
adc
xchg
push
xor
std
fdivr
xchg
dec
or
scas
pushf
in
pusha
test
or
xchg
cdq
call
inc
cdq
push
mov
or
bound
xchg
mov
ret
or
jbe
pop
mov
out
xchg
scas
xchg
stos
pop
mov
pop
retf
add
cmove
jle
lods
icebp
or
push
inc
shr
inc
test
adc
fnstcw
ins
arpl
jle
jecxz
push
fs
mov
lea
icebp
xchg
shl
retf
dec
rcr
sbb
jge
xorps
lods
inc
pop
sbb
sahf
sbb
div
push
movnti
arpl
pop
mov
cmp
icebp
jp
movs
popf
dec
push
jns
stc
mov
inc
clc
xor
loopne
nop
inc
fisub
loope
das
jno
jecxz
aaa
mov
arpl
cmc
push
mov
and
dec
stos
mov
mov
mov
jp
sub
not
push
push
add
push
lods
sub
sbb
or
sbb
(bad)
pop
test
repnz
xchg
sub
sbb
loop
(bad)
pop
cli
mov
repnz
cmp
cmp
ret
adc
ins
mov
mov
inc
sbb
iret
call
mov
pushf
setne
gs
arpl
jmp
xor
pushf
pop
inc
sbb
fs
pop
rol
xor
fdiv
dec
mov
test
pop
fistp
jmp
inc
jecxz
jl
dec
mov
push
hlt
push
(bad)
ja
push
jle
jne
inc
mov
dec
jmp
push
mov
pop
fidivr
movs
out
mov
mov
addr16
test
pop
in
nop
not
and
out
mov
pop
retf
test
cmp
mov
clc
loopne
mov
cmp
sub
pop
push
xchg
std
fidivr
sub
or
push
je
inc
push
mov
es
pop
pop
leave
jle
je
adc
mov
xor
pop
or
out
jmp
jecxz
shl
out
cli
(bad)
fiadd
(bad)
jge
dec
pop
(bad)
inc
into
in
inc
aam
sbb
in
mov
stos
pop
div
cmc
in
xchg
xlat
add
loopne
shl
aaa
xlat
mov
dec
fstp
mov
push
mov
out
aam
in
pop
ret
add
mov
pop
ficom
xchg
dec
jbe
adc
(bad)
mov
dec
bound
pushf
repz
arpl
adc
sub
test
and
sbb
push
sbb
jno
sbb
dec
sbb
lahf
mov
mov
or
hlt
push
and
push
add
adc
mov
sti
std
shl
scas
inc
mov
cs
repnz
sub
push
sbb
stos
cmp
inc
push
dec
inc
xchg
xchg
cli
push
in
xchg
adc
jmp
push
cmps
movs
ret
movs
push
rcr
je
test
xchg
je
cld
clc
fcom
cmc
add
jno
fst
sub
ds
sbb
cmps
fst
outs
aas
mov
out
and
adc
mov
pop
lea
sbb
xor
pop
inc
xor
xchg
xchg
and
ror
mov
fcmovnbe
dec
push
mov
sbb
cmp
push
outs
push
push
aaa
mov
loope
aad
xchg
add
mov
sbb
fidivr
cdq
push
fisubr
fild
inc
sahf
jb
push
aam
xlat
inc
mov
stc
pop
sbb
push
cmc
dec
sub
scas
(bad)
cli
or
ins
adc
xchg
xchg
xchg
pop
cmp
inc
push
jns
lahf
fst
mov
xor
and
add
xchg
pop
and
test
imul
sub
sbb
icebp
adc
test
in
movs
(bad)
jecxz
mov
ins
pop
pop
and
mov
jns
add
xchg
inc
(bad)
cmp
out
fistp
(bad)
pop
sub
sub
fcmove
movs
repz
mov
loopne
mov
or
sar
and
cmp
jle
mov
(bad)
jg
xchg
add
das
jecxz
adc
ret
data16
sub
xchg
(bad)
aam
dec
mov
stos
sub
xor
clc
loopne
jp
and
dec
cmp
fwait
js
in
xor
fst
mov
(bad)
rcl
mov
pop
add
and
sbb
dec
push
nop
dec
inc
outs
inc
push
push
outs
hlt
js
add
bound
cmp
test
pop
xchg
sbb
ja
xor
mov
add
push
sbb
mov
jecxz
test
mov
rol
push
pop
pop
xlat
xor
loope
dec
int3
jns
mov
and
adc
and
xchg
xor
in
inc
push
xchg
push
push
add
xor
clc
sbb
push
pop
cmp
out
xchg
leave
pusha
fidiv
jg
rcr
retf
pushf
cmp
loope
sbb
xor
test
xchg
or
cmps
xchg
jno
xchg
or
push
(bad)
cli
inc
mov
jecxz
pop
inc
and
cs
into
imul
adc
or
adc
mov
iret
ins
xchg
(bad)
aad
push
sub
xchg
adc
popa
push
jnp
clc
xchg
push
pop
or
fnstsw
ret
sbb
jb
dec
mov
jmp
push
add
push
inc
aad
adc
push
jnp
fidivr
or
ds
cmp
outs
mov
das
shr
out
loopne
adc
xor
mov
popf
cmp
sar
push
repz
jecxz
sbb
jecxz
shr
jo
(bad)
shr
lods
mov
jne
fnstsw
fistp
sub
sub
cmc
xor
mov
adc
sbb
ins
pop
je
pop
sbb
jmp
bound
inc
jns
jmp
dec
or
push
out
inc
iret
icebp
and
sbb
add
out
(bad)
hlt
aad
mov
lods
adc
popa
outs
push
add
xchg
pop
movs
aad
pop
pop
(bad)
iret
sbb
icebp
pusha
xchg
jge
push
mov
push
xchg
mov
xor
push
xchg
push
gs
comiss
jbe
mov
mov
sbb
bound
cli
es
xor
pop
jmp
ror
add
movs
in
xchg
std
add
ret
fisttp
xlat
(bad)
mov
add
mov
cs
loopne
retf
ficomp
or
aaa
es
(bad)
jge
movs
cmps
fist
jle
mul
mov
cmp
dec
sbb
and
jno
mov
mov
xchg
mov
in
jns
leave
int3
jecxz
dec
loop
or
mov
sti
push
retf
xchg
cmp
(bad)
mov
mov
(bad)
stos
xchg
pop
imul
jns
ror
nop
dec
in
(bad)
gs
add
loopne
cmps
and
test
jno
cmp
scas
repnz
aas
and
or
xchg
repnz
jnp
inc
int
imul
(bad)
ror
cdq
arpl
jns
jo
push
xchg
movs
repz
imul
pop
je
stos
jmp
inc
pop
or
imul
adc
mov
mov
pop
cmps
add
add
aaa
popfw
(bad)
in
push
fisubr
popa
in
xchg
mov
jb
rol
call
outs
xor
add
or
call
push
inc
call
(bad)
jg
mov
push
jg
xchg
aaa
sti
imul
or
cmps
add
(bad)
adc
fdiv
xor
pop
dec
xchg
xchg
(bad)
cwde
shr
and
out
mov
cmc
push
loope
imul
inc
mov
mov
inc
daa
mov
or
out
xor
xchg
inc
int
inc
out
sti
push
mov
fnsave
or
fidivr
inc
mov
icebp
cli
clc
leave
fstp
add
scas
mov
mov
aam
dec
in
mov
gs
in
ds
out
lea
enter
aam
inc
jl
push
in
dec
pop
clc
hlt
pop
jle
push
sbb
mov
sbb
(bad)
rcl
test
cmps
push
sub
dec
aas
ret
fwait
data16
cmps
mov
and
cdq
inc
push
inc
(bad)
cdq
adc
inc
loope
mov
mov
cli
(bad)
and
retf
mul
fucomi
push
(bad)
cmp
sub
xor
movs
or
mov
cmp
test
mov
iret
lds
sbb
jmp
sub
rcl
xchg
mov
add
xchg
jmp
jnp
push
mov
jae
ins
rcr
jbe
push
jb
jg
inc
jmp
lock
arpl
(bad)
jno
test
rol
xchg
mov
dec
push
adc
fucom
mov
jb
inc
(bad)
xchg
mov
bndstx
aaa
ins
dec
retf
(bad)
xlat
xlat
cs
or
(bad)
mov
jg
fcom
mov
mov
cmc
jp
imul
int
sbb
sub
sub
cmps
mov
cmp
popa
jns
scas
adc
cld
mov
das
cmove
push
or
cmp
mov
xchg
sbb
cwde
data16
and
es
ret
aad
xchg
stc
lahf
(bad)
xchg
js
push
xchg
xchg
mov
mov
retf
mov
test
stos
dec
aam
push
test
inc
inc
repnz
push
scas
xor
xadd
les
or
out
xchg
mov
xchg
or
xlat
outs
jg
cli
stos
neg
out
cmp
cmc
ret
aas
call
setno
mov
and
pop
(bad)
call
and
les
mov
(bad)
sub
jl
ret
iret
imul
cmp
pop
adc
push
inc
fisttp
ins
push
mov
lock
xor
jae
inc
mov
test
retf
sub
sub
cmc
mov
or
fwait
adc
push
addr16
jmp
fyl2x
lock
(bad)
in
mov
adc
fstp
cmp
pop
sub
popa
movs
inc
jns
sbb
xchg
sbb
pop
pop
push
push
xchg
sub
push
push
mul
and
dec
js
scas
out
pop
jne
lea
xor
std
push
push
xor
inc
cmp
les
push
add
sub
in
jb
popa
xchg
dec
push
retf
xchg
aaa
test
lahf
pop
cmp
mov
lods
sub
push
popa
inc
mov
bound
fidivr
iret
(bad)
cmp
addr16
xor
mov
or
not
mov
jo
repz
and
mov
(bad)
ins
movs
add
data16
fstp
imul
xchg
jne
inc
sub
ss
sub
sub
inc
dec
xor
ffreep
imul
jl
cmps
mov
mov
mov
pop
das
xor
sbb
mov
fcomi
pop
ror
out
stc
idiv
dec
dec
cmc
neg
jmp
cld
jnp
fxch
mov
xor
sbb
adc
pop
cmps
es
sub
jl
out
aas
fcomp
dec
mov
lods
es
mov
retf
push
jae
fwait
and
and
cmp
mov
pop
jg
dec
jp
pop
ret
pop
clc
dec
ffreep
or
les
push
jns
ds
sbb
addr16
mov
mov
add
xor
xchg
pop
cld
add
outs
pop
repz
sub
data16
jnp
xor
shr
adc
ret
lahf
pop
jo
xchg
movs
shl
or
xchg
or
(bad)
cli
xor
rol
hlt
cmp
lock
xchg
pop
sub
ins
test
or
hlt
call
leave
xor
jnp
in
inc
xor
(bad)
ret
adc
jp
fstp
stc
test
pop
loope
test
sub
mov
sub
dec
push
mov
in
call
sahf
dec
neg
(bad)
mov
loope
iret
lahf
or
ss
pop
(bad)
rol
cs
mov
push
cwde
call
push
add
push
add
lahf
or
sub
in
aam
add
in
xchg
mov
ds
pop
outs
jbe
sbb
xor
jb
add
inc
pop
sahf
and
daa
xchg
and
sti
test
retf
push
jns
bound
je
in
fs
jmp
popa
xchg
pop
cli
push
pop
js
rcl
push
scas
mov
in
hlt
mov
nop
fcom
jp
sti
and
inc
(bad)
cwde
fucomi
fwait
push
adc
pop
test
mov
inc
push
call
and
call
inc
aaa
loope
es
sub
mov
mov
clc
aas
fwait
and
lods
popw
enter
ds
cmc
les
fisttp
jecxz
aam
jbe
jmp
pop
add
and
jo
cmp
mov
jle
or
or
xchg
pop
jecxz
lea
adc
cmp
dec
cld
movs
les
arpl
sub
xchg
stos
inc
popf
das
shr
or
xor
cmp
pushf
xchg
or
xlat
mov
xchg
or
dec
jge
xor
xor
dec
mov
cli
sub
(bad)
inc
or
aam
sub
pop
repz
out
ret
mov
jl
dec
jae
mov
xchg
ins
dec
imul
jg
into
inc
adc
cs
xchg
mov
mov
lea
fsubr
adc
mov
test
test
and
jmp
xlat
cmp
inc
out
push
xchg
call
cmp
xchg
jg
icebp
dec
jmp
int
lods
inc
std
or
add
arpl
lds
inc
jecxz
push
dec
and
xor
jmp
inc
mov
dec
sub
pop
sbb
call
jg
push
mov
cld
mov
or
inc
push
sbb
into
sub
xchg
and
imul
push
(bad)
xchg
mov
into
pop
leave
imul
std
mov
add
push
mov
adc
jg
int3
inc
(bad)
enter
(bad)
hlt
dec
mov
popf
into
in
jge
inc
push
call
inc
jp
sub
fwait
out
call
jae
push
add
sbb
shr
mov
or
loope
xchg
adc
mov
std
mov
ja
pusha
mov
jle
out
and
ret
pop
cmp
or
les
xchg
xor
adc
mov
in
out
inc
test
pop
inc
inc
idiv
retf
mov
ss
mov
lahf
test
mov
test
cmp
cmp
adc
arpl
retf
lahf
xchg
mov
mov
pop
pop
sub
dec
sbb
xchg
sub
mov
sub
mov
mov
aaa
mov
inc
and
leave
mov
mov
scas
pop
sbb
push
ret
and
gs
mov
mov
into
jmp
mov
fist
jge
adc
dec
sub
dec
lahf
sbb
push
sbb
dec
lea
shr
cmp
aaa
sbb
clc
bnd
scas
js
prefetch
sbb
mov
dec
sbb
in
addr16
push
inc
sub
lds
cmp
ds
mov
fstp
adc
lods
test
cmp
jo
lea
sar
adc
in
push
jae
sub
jmp
mov
call
push
aad
add
xor
inc
adc
add
loop
cmp
imul
mov
fld
add
or
dec
aas
jge
mov
mov
xchg
jmp
in
sub
pop
and
push
lods
aad
push
retf
mov
dec
ds
mov
mov
fisttp
in
dec
xor
and
outs
outs
sub
sub
xor
mov
mov
call
push
stos
sub
mov
mov
and
data16
(bad)
shl
rol
mov
mov
arpl
xchg
cmp
mov
mov
lahf
lock
xchg
sub
xlat
scas
cmovnp
jl
sub
stos
or
data16
mov
push
cmp
mov
dec
inc
sbb
and
fist
cmp
div
pop
sbb
ss
pop
cmp
and
fldenv
iret
mov
mov
cmc
jecxz
int3
dec
and
shr
ja
or
popf
xlat
push
jle
push
fnsave
fst
lods
push
aaa
xchg
mov
retf
inc
sbb
push
or
push
rcl
mov
mov
aad
push
ret
push
cmp
push
mov
repz
out
lods
xor
cmps
mov
sahf
mov
mov
sbb
pop
mov
in
mov
fcmovnbe
aas
dec
out
lds
xchg
js
(bad)
imul
bt
inc
scas
(bad)
dec
stc
xor
or
and
jle
sub
inc
movs
or
cmp
call
pop
(bad)
aas
retf
xor
(bad)
lock
test
sub
loop
mov
in
fadd
xor
test
mov
arpl
mov
mov
ins
adc
stos
push
sahf
bnd
fiadd
cmp
inc
lahf
pop
outs
sub
jmp
out
mov
or
add
add
xor
stos
xor
in
jns
(bad)
sbb
mov
jmp
mov
std
aad
fwait
push
add
xor
push
xchg
cli
imul
ins
outs
ja
and
xchg
shl
dec
adc
fcom
es
pop
mov
and
xor
sbb
mov
jmp
cmps
xchg
out
jp
movs
sbb
loop
pop
stos
fadd
adc
lea
imul
test
jae
dec
lods
(bad)
xchg
jbe
or
(bad)
jecxz
inc
mov
add
push
stos
fs
outs
mov
add
std
sbb
fdiv
xchg
lods
or
pop
popf
lods
dec
repz
ins
and
sbb
add
adc
or
jae
cmc
adc
fidiv
test
push
adc
adc
push
(bad)
mov
adc
aas
leave
inc
jmp
es
sub
js
loop
shr
imul
sti
pop
cmp
jecxz
sbb
out
xor
nop
jl
outs
retf
mov
mov
aas
add
sbb
loop
jno
jbe
scas
add
cld
jge
xchg
adc
pop
outs
xor
pop
jo
mov
sbb
jb
adc
mov
aas
(bad)
shl
and
loopne
inc
adc
jge
inc
xchg
stc
inc
das
xor
loope
mov
sub
mov
mov
cwde
outs
cmp
or
cmp
mov
adc
cdq
fisttp
cmp
shr
jae
jne
jo
lds
cs
mov
xor
and
sti
dec
cmp
rcl
push
mov
jl
imul
aas
sub
stc
mov
inc
xor
push
cmc
sti
out
fsubrp
stc
jl
out
fimul
push
in
arpl
xchg
enter
jno
ret
cmp
outs
fldcw
es
(bad)
sub
in
sbb
push
add
fild
and
ds
xor
add
jl
inc
sub
add
xchg
adc
cmp
aas
pushf
mov
fdivr
mov
rcr
xchg
clc
lock
(bad)
aam
xor
daa
dec
dec
mov
cmps
cmp
pop
or
push
or
push
add
ins
push
cmps
or
jecxz
push
stos
popf
sbb
lea
xchg
pop
xor
push
xchg
mov
aad
ret
mov
loopne
mov
mov
mov
ficomp
out
in
adc
inc
xor
push
add
adc
ins
addr16
(bad)
inc
fs
mov
lock
push
push
and
xchg
das
cli
or
pop
sub
out
int3
dec
jno
mov
aas
stos
jl
or
mov
mov
mov
mov
xchg
or
neg
in
adc
and
or
xor
lods
and
mov
jno
not
loope
sar
add
addr16
ret
jecxz
adc
icebp
shl
sti
mov
scas
jecxz
cli
xlat
jo
mov
sbb
retf
cmp
jmp
sbb
fsub
adc
cwde
jno
mov
xchg
ins
inc
stc
std
mov
and
xchg
mov
out
mov
jle
les
jge
mov
or
xor
gs
fsubp
ret
mov
call
mov
xchg
js
inc
fcmovbe
ss
cmps
sbb
cmp
mov
pop
inc
add
(bad)
les
out
cmps
push
adc
lahf
cmp
adc
addr16
ins
xor
mov
int
pop
xchg
push
mov
movs
pop
mov
push
ret
and
inc
aaa
pop
mov
lahf
and
inc
inc
mov
mov
cmps
add
xor
mov
xchg
loopne
push
xor
pop
and
sbb
or
aas
out
inc
nop
or
imul
mov
mov
inc
jmp
in
pop
gs
adc
stc
mov
jb
cmp
popf
daa
sub
pop
imul
push
fld
xchg
dec
or
lods
dec
mov
sbb
lahf
push
mov
dec
xor
clc
movs
sub
jmp
fmulp
sbb
cmps
out
add
loopne
in
or
sub
(bad)
int
aad
push
int
ins
daa
mov
cli
xchg
xchg
data16
mov
nop
sub
loope
jecxz
(bad)
mov
(bad)
jmp
arpl
jmp
rol
shl
and
es
es
leave
cmp
and
pop
jecxz
clc
sub
mov
sbb
jl
dec
jbe
mov
mul
dec
stos
call
or
mov
pop
outs
pop
push
call
imul
xchg
dec
retf
mov
sahf
add
sbb
and
mov
cmp
(bad)
mov
ins
gs
cmp
and
out
mov
pop
xchg
mov
lock
xchg
cmps
jmp
inc
jbe
mov
jecxz
pop
dec
bound
or
call
adc
push
xor
pop
dec
aas
cmp
es
jbe
cmp
in
ins
xchg
mov
add
jb
inc
bound
dec
jle
and
cs
(bad)
fcmovb
inc
je
dec
sub
outs
sti
outs
mov
cwde
mov
mov
and
retf
dec
ror
push
push
jno
fs
data16
or
cmp
mov
into
ret
shr
in
out
pop
mov
in
pushf
xor
ds
jns
jecxz
(bad)
sub
stos
outs
ja
fdiv
lahf
and
mov
rcr
fwait
sbb
retf
fs
mov
pushf
(bad)
mov
(bad)
adc
repz
ret
pop
mov
push
fcmovnbe
aam
outs
inc
jo
add
mul
aaa
cmp
ja
push
inc
imul
inc
fs
and
mov
ja
mov
mov
retf
out
xlat
sahf
mov
mov
mov
dec
ja
iret
(bad)
rcl
xchg
xor
fcomp
frstor
mov
jmp
mov
sub
sbb
das
jb
fdiv
jge
cmp
mov
popf
or
dec
ss
loopne
out
sub
mov
bound
add
or
pop
(bad)
sub
dec
ds
ins
and
sub
fsub
and
pop
push
fcom
pusha
das
xchg
cmc
mov
mov
lds
pop
sar
lock
ds
test
sar
push
mov
cli
dec
dec
jmp
xor
inc
shr
out
int
add
loop
adc
out
outs
ret
pushf
sub
push
sub
imul
jno
retf
test
inc
xchg
popf
dec
vpsubw
push
jg
adc
aam
mov
cli
sub
inc
popa
mov
inc
mov
shr
mov
mov
adc
in
jo
pop
psadbw
push
pusha
push
jo
dec
mov
(bad)
xor
cmps
scas
das
adc
or
not
mov
arpl
dec
std
scas
dec
jl
and
or
adc
(bad)
push
stc
jmp
je
adc
inc
lods
cwde
sbb
xor
jno
xor
clc
pusha
xor
dec
mov
add
popa
rep
push
nop
es
rcl
fisttp
pop
mov
fnsave
mov
(bad)
(bad)
lahf
int3
neg
jno
stos
nop
retf
pop
xor
fcmovnb
mov
jnp
xchg
mov
sbb
adc
mov
sub
sub
add
cwde
and
in
lahf
fcomp
sub
nop
jmp
cmp
ins
mov
push
xor
add
(bad)
fistp
(bad)
add
iret
(bad)
test
mov
adc
call
call
rcr
dec
test
test
leave
fbstp
jmp
mov
or
(bad)
lods
xchg
std
mov
sahf
xchg
shr
push
rcr
movs
sbb
and
adc
push
cli
push
xlat
jecxz
push
retf
retf
inc
sahf
push
in
aad
in
mov
pxor
lods
sub
and
scas
test
cmp
and
sub
inc
jle
mov
sub
repnz
and
pop
pop
pop
xor
neg
add
daa
(bad)
test
push
rcr
data16
inc
pop
mov
mov
sub
ja
ja
xor
jge
inc
retf
shl
fadd
cmp
sar
hlt
in
xchg
mov
cmp
pusha
lea
lods
(bad)
xchg
mov
inc
cld
jecxz
(bad)
mov
lods
call
das
ss
sti
mov
jl
ins
aas
das
and
mov
mul
stos
mov
xor
xor
mov
js
dec
dec
cmc
add
xchg
mov
and
nop
pop
xchg
mov
sar
aaa
jbe
(bad)
out
mov
cld
in
inc
into
leave
lods
mov
das
shl
not
call
push
and
es
xchg
mov
cmp
sbb
sub
fwait
mov
jae
mov
sub
lds
mov
inc
cmp
dec
jge
fiadd
mov
or
mov
ds
es
pop
(bad)
jno
mov
popfw
add
hlt
mov
jnp
inc
hlt
dec
sets
sbb
bound
or
test
adc
xor
loope
mov
aas
jae
sub
imul
jl
sbb
imul
pop
cmps
sub
sti
scas
mov
cmp
es
js
(bad)
jecxz
push
jmp
inc
ja
jg
into
xor
ret
stc
mov
xchg
cmp
mov
sbb
pop
or
ins
xchg
jg
xor
inc
adc
lock
leave
jo
pop
inc
cmp
sbb
(bad)
pop
or
mov
jbe
sbb
retf
test
xchg
paddsb
out
fwait
imul
push
cs
dec
mov
jae
ss
shl
call
ret
and
repz
cld
mov
mov
mov
shl
cmp
out
mov
xchg
mov
cs
xchg
push
js
ror
push
call
or
mov
xor
push
add
test
adc
sub
hlt
out
cmp
sub
je
popf
(bad)
in
push
adc
mov
lods
movs
pop
xor
mov
test
pop
loop
inc
mov
mov
mov
mov
mov
or
int3
imul
sub
sbb
div
xchg
sbb
nop
sub
in
adc
jp
xor
jns
(bad)
stc
cmc
push
mov
add
pop
outs
aad
fs
xor
int3
add
jae
js
aaa
fistp
xor
popf
daa
push
loopne
retf
jno
out
dec
inc
fs
enter
shl
aaa
dec
mov
and
xor
mov
cwde
sub
xchg
fild
dec
ins
mov
sub
push
stc
cmps
cmp
xlat
lea
neg
push
push
aaa
fwait
cmp
push
cld
add
sub
push
mov
popf
pushf
sbb
test
mov
in
push
retf
in
enter
pusha
cmp
das
and
sbb
adc
lods
sbb
les
not
ja
dec
sti
mov
lock
xor
cs
cmp
pusha
icebp
mov
cwde
jne
pop
jp
ret
out
jl
out
pop
dec
mov
xchg
daa
xchg
add
fistp
sbb
mov
pop
adc
cmps
mov
inc
dec
sub
cmp
pop
mov
loop
in
inc
adc
ret
mov
loopne
jno
neg
xchg
cli
adc
mov
push
aam
in
dec
mov
cmp
push
and
inc
cmps
inc
add
test
xchg
pop
add
out
int3
push
in
dec
ins
adc
mov
call
popa
sub
int
in
jp
das
push
jmp
das
mov
retf
xchg
jmp
push
cmps
je
push
sti
xor
sti
out
in
test
xchg
push
call
and
xchg
int
and
inc
and
dec
arpl
aaa
and
pop
jmp
adc
mov
pop
lea
dec
sbb
pop
std
bound
push
mov
fcom
sub
xchg
mov
jge
test
cmps
test
xchg
es
jmp
xchg
sbb
jge
pop
mov
ins
mov
sub
push
jl
add
outs
jmp
stos
and
nop
int
clc
ficom
inc
push
data16
push
ret
fcmove
imul
or
cmps
lahf
jnp
cdq
dec
mov
dec
inc
jnp
inc
pop
sbb
hlt
or
dec
push
movs
mov
repnz
add
int
or
rol
out
cdq
inc
es
or
dec
inc
cli
movs
lock
and
call
and
rcl
aad
in
jecxz
push
xchg
add
cmp
cs
jle
(bad)
(bad)
into
sbb
mov
mov
repz
push
jnp
cmp
bswap
dec
pinsrw
ficomp
inc
int3
pop
inc
repz
popa
ja
mov
inc
mov
push
dec
les
jb
inc
add
xor
push
(bad)
fstp
das
jmp
scas
(bad)
lea
ins
out
loop
addr16
mov
push
and
pop
lods
add
stos
fwait
pop
or
out
ffreep
cwde
xchg
pop
xlat
cmps
inc
ficom
jne
mov
inc
xor
or
cmp
xchg
inc
mov
adc
mov
jmp
adc
jge
scas
cmp
(bad)
pushf
jecxz
je
aas
or
pusha
cmp
repz
cmp
jmp
inc
fld
fstp
xor
fwait
sbb
std
aaa
mov
xchg
(bad)
in
(bad)
or
jge
pop
dec
leave
xchg
mov
in
test
jae
scas
or
push
cmp
out
jge
inc
(bad)
repz
mov
popf
pop
inc
xchg
lods
daa
jo
out
cld
pop
out
push
or
out
cli
sub
loopne
lds
dec
(bad)
stos
cmp
bnd
jge
mov
or
mov
lahf
jmp
gs
test
inc
pop
cmp
imul
or
adc
xor
and
test
in
je
test
sti
in
push
iret
sub
movs
pop
(bad)
in
push
in
ins
aas
pop
mov
dec
hlt
and
int
pop
or
shl
add
push
movntq
idiv
test
add
and
inc
mov
ret
jp
push
shl
(bad)
in
stos
push
ins
sub
movs
mov
mov
inc
pop
cmps
sub
in
cmc
ret
dec
add
cmp
or
in
sahf
or
pop
nop
outs
clc
sbb
dec
ret
add
out
pop
and
cmp
pushf
mov
stos
repnz
jnp
add
neg
xchg
xlat
clc
inc
(bad)
cmp
ss
repz
cmp
dec
mov
jmp
je
or
mov
mov
js
es
adc
pop
das
nop
dec
inc
xor
sub
mov
mov
cmp
mov
movs
adc
fidivr
ret
scas
test
mov
adc
push
adc
mov
jbe
outs
bound
sbb
mov
(bad)
leave
jbe
js
mov
mov
mul
les
xlat
repz
sbb
push
jb
dec
push
out
cmps
neg
mov
and
gs
call
mov
nop
add
stc
ret
hlt
add
test
push
sub
push
cmp
xor
push
xor
xchg
adc
hlt
mov
les
add
xchg
out
nop
and
push
adc
enter
out
xchg
mov
cmp
in
jnp
cs
js
mov
sti
push
(bad)
lahf
leave
add
std
mov
jae
xor
inc
cmps
dec
js
pop
mov
mov
and
adc
inc
mov
mov
adc
pop
and
out
add
push
es
test
mov
clc
retf
add
movs
nop
xor
jae
xchg
pop
pop
adc
in
pop
test
inc
xor
nop
mov
in
inc
inc
fistp
in
mov
(bad)
push
mov
adc
in
push
inc
sbb
push
push
cmp
jmp
jmp
sub
mov
test
fsubr
std
(bad)
mov
aam
mov
mov
sub
push
call
test
xchg
sbb
das
xchg
fistp
xor
test
push
sub
mov
sahf
pop
pop
bound
cdq
push
mov
and
jecxz
sub
(bad)
push
sub
pusha
and
sar
in
mov
bound
dec
push
test
xor
jg
push
jno
or
mov
inc
adc
out
cmp
adc
fscale
out
xor
out
cdq
movs
stos
idiv
and
jb
inc
mov
arpl
sub
add
lods
inc
dec
in
xor
aad
pusha
cmp
push
xchg
fstp
jne
mov
sub
retf
(bad)
out
cmp
fnstcw
out
and
ret
jns
mov
lock
je
(bad)
test
ja
add
xor
inc
push
mov
mov
cs
cli
mov
add
rcl
xchg
dec
xor
and
or
adc
jno
jl
pusha
nop
mov
jg
xchg
fcom
mov
push
sti
mov
retf
mov
mov
xor
push
sysexit
mov
fadd
js
sub
pop
(bad)
out
pushf
push
in
adc
xchg
paddb
jb
inc
fld
sub
bound
jl
mov
push
sbb
mov
or
pop
test
push
int
adc
jle
or
sbb
mov
scas
mov
mov
mov
or
push
retf
mov
pushf
inc
sub
stc
or
mov
mov
inc
retf
xchg
jmp
gs
popa
or
ret
dec
mov
gs
jb
adc
xor
push
sub
(bad)
fs
gs
loopne
ficom
int3
and
xchg
movs
jmp
fstp
mov
inc
sub
jne
repnz
popf
and
jmp
daa
in
xor
add
sar
mov
mov
cld
push
scas
nop
repz
int
and
mov
repnz
pop
(bad)
adc
xor
mov
fidivr
jnp
inc
rol
iret
shl
data16
lea
ins
lock
ja
aas
mov
and
int
push
leave
shr
pop
ror
push
sub
sbb
inc
and
cmp
cmp
out
pop
adc
(bad)
jbe
fnstenv
movs
out
mov
cmps
pop
mov
xor
repz
add
jecxz
ficom
cmp
cmp
outs
xchg
mov
cli
lds
fmul
mov
es
push
jg
fdiv
mov
add
mov
sub
ins
sar
cmp
mov
push
jnp
sbb
lds
mov
in
and
inc
push
mov
xchg
scas
aas
and
jmp
mov
(bad)
dec
xor
push
fist
sbb
adc
in
push
in
adc
pop
mov
fwait
and
xchg
mov
lods
push
jle
mov
(bad)
jmp
mov
add
sahf
pushf
or
add
nop
(bad)
fild
aad
(bad)
push
shl
and
or
cmp
sub
repz
jno
data16
push
fnstcw
pushf
(bad)
mov
mov
xor
pmaddwd
sub
aad
imul
sti
inc
inc
pop
cdq
fnstcw
stos
push
jg
int3
or
cmp
mov
(bad)
cld
pop
jmp
xchg
fmul
jle
or
and
jl
ret
fisubr
pop
push
pop
sub
test
xchg
mov
call
xchg
xor
(bad)
call
xor
mov
cdq
xchg
sub
fadd
lods
gs
outs
pop
xchg
cmp
repz
xchg
imul
sbb
add
sub
mov
xchg
out
das
xchg
cmp
call
stos
pop
xchg
bswap
mov
pop
imul
in
mov
call
xchg
aaa
enter
call
cmp
nop
push
lods
loopne
mov
cdq
call
sub
jbe
in
out
pop
in
test
cmc
mov
xor
dec
sbb
dec
(bad)
in
dec
leave
xchg
sbb
test
sbb
(bad)
lea
adc
pop
add
repnz
cld
sahf
(bad)
ins
adc
cdq
imul
(bad)
push
adc
pop
pop
in
mul
cs
ror
jmp
in
fwait
xor
sub
ss
fild
or
arpl
push
cmovne
aam
aaa
adc
icebp
into
xor
cld
xchg
fisubr
mov
dec
mov
mov
into
cdq
xchg
pusha
or
test
xchg
stc
push
lods
loope
jo
sbb
in
pushf
jne
pop
sub
imul
and
push
inc
push
dec
lahf
fs
push
(bad)
cmps
add
(bad)
mov
mov
xchg
gs
xchg
sbb
ss
add
mov
push
inc
dec
scas
mov
dec
sub
mov
cli
jno
push
aas
xor
xchg
popa
jns
sub
xchg
aaa
dec
xlat
mov
mov
mov
ror
sbb
pop
ss
repz
push
outs
mov
xchg
adc
xchg
push
icebp
inc
icebp
push
dec
pop
sub
aaa
gs
addr16
add
repz
add
jbe
clc
rcl
call
xor
dec
inc
(bad)
ror
mov
push
adc
mov
xor
pop
cmp
sub
js
or
xor
cmc
mov
data16
jl
in
rcr
(bad)
jp
ja
jnp
in
dec
(bad)
imul
mov
push
and
clc
in
mov
mov
cdq
(bad)
popf
daa
in
fidiv
ja
inc
loope
mov
sbb
data16
add
in
jnp
jne
cmp
clc
js
cli
push
bound
push
cmp
pusha
dec
xchg
in
xchg
and
xlat
ret
pusha
xchg
jecxz
enter
arpl
repz
dec
ins
sub
(bad)
in
aaa
js
mov
cmp
mov
mov
repnz
jb
sub
les
loopne
xchg
mov
shl
dec
dec
sub
mov
gs
sti
test
xchg
ret
rcr
lods
mov
or
or
xor
cld
xchg
dec
scas
int3
fldcw
bound
jg
shl
int3
loopne
add
test
mov
dec
in
mov
rcr
or
jbe
xchg
mov
loopne
ins
dec
pop
add
push
or
pop
and
ins
in
ss
jo
mov
mov
jns
sbb
lea
mov
mov
sbb
lock
push
xchg
sub
(bad)
and
stc
nop
dec
mov
adc
sahf
jb
lock
mov
fcomp
aam
shl
dec
dec
lods
mov
xor
inc
and
enter
fs
xchg
sahf
scas
jb
lods
mov
mov
aad
mov
js
movs
mov
dec
popa
jg
idiv
shr
cld
icebp
xchg
mov
jnp
dec
cmp
dec
repnz
inc
movs
test
scas
fstp
jo
popf
add
jmp
test
es
stos
clc
lods
fild
not
sub
pop
mov
cmp
and
jp
push
lahf
pusha
enter
das
cmp
mov
and
imul
call
fs
out
inc
push
sti
das
push
pop
mov
aad
out
dec
dec
leave
ss
lock
shr
call
sub
xor
and
mov
add
mov
jmp
(bad)
push
fsubp
ds
ins
ficom
lods
push
push
push
xchg
int
add
sub
sahf
jae
test
sbb
mov
xor
(bad)
dec
jecxz
jno
sub
xor
lods
pop
cmps
push
inc
shr
test
scas
ficomp
dec
cmp
xor
sub
xor
pop
mov
jmp
jne
rcl
push
retf
fdivrp
pop
and
stc
dec
data16
add
into
push
pop
mov
lods
outs
shl
dec
jno
mov
cmp
fisub
int
xlat
or
nop
fdivr
fwait
loopne
jbe
push
add
inc
ret
push
xchg
xor
mov
stos
pushf
(bad)
sbb
cli
(bad)
and
pop
sub
sub
and
inc
adc
int
pop
ins
add
in
fnstenv
aam
cdq
sub
xlat
sub
movs
cmp
mov
test
data16
fcom
(bad)
mov
pop
lds
les
btc
ja
sub
addr16
fsubr
xor
add
clc
pusha
xchg
mov
and
inc
jmp
gs
movs
inc
add
jge
cmps
std
int3
scas
pop
push
jb
sar
cmp
push
dec
add
pop
ret
push
and
mov
cld
xchg
lock
add
cmps
pop
jo
minps
pop
jb
fidivr
mov
jo
retf
pop
inc
in
test
pushf
out
(bad)
xor
arpl
xchg
mov
jecxz
aas
fs
adc
test
stos
push
mov
sahf
(bad)
sub
inc
cmp
jl
nop
push
lea
dec
pop
mov
into
les
bound
mov
cmp
fistp
fisub
or
sbb
test
sbb
push
xor
dec
cld
lock
or
push
and
mov
daa
ins
push
xchg
imul
ja
mov
xor
cmp
cld
(bad)
cmps
and
loope
mov
retf
aad
jle
dec
nop
and
in
loope
cmp
adc
loopne
xchg
xlat
vmread
jmp
jecxz
jg
cmp
daa
cmc
and
dec
popf
mov
sub
ret
xor
in
ror
inc
lods
(bad)
cdq
adc
xchg
mov
pushw
cmp
mov
xor
ror
mov
jnp
push
mov
shl
jl
adc
adc
lods
sub
ss
scas
scas
push
adc
mov
xchg
lods
jp
xchg
ret
test
or
ds
movs
arpl
cld
mov
mov
push
jecxz
push
inc
mov
stc
pop
iret
in
xchg
movs
xlat
xchg
dec
push
sahf
push
push
stc
or
cmps
inc
jecxz
sub
scas
in
jae
lahf
mov
inc
(bad)
dec
fcomp
cwde
push
nop
pop
and
jne
(bad)
test
cmp
xor
std
xor
jbe
addr16
rcl
push
xor
jmp
fld
je
xchg
movs
pop
retf
int
or
or
sub
addr16
mov
mov
aaa
sbb
sub
lds
dec
mov
pop
(bad)
xchg
cmc
sub
and
xchg
pop
jnp
xchg
xchg
add
rcr
inc
das
inc
shr
mov
sub
push
mov
dec
sub
in
xchg
stc
mov
cdq
out
jmp
add
scas
fsub
sbb
in
fst
jp
ins
movs
out
inc
cmp
or
ds
jle
fdivr
call
push
rcl
cmp
sub
and
vphaddbw
(bad)
aad
add
xor
imul
cmp
div
pop
mul
adc
mov
xlat
ins
call
and
or
repz
push
jp
nop
or
add
or
and
dec
dec
sub
and
arpl
call
cld
cld
dec
mov
xor
jmp
dec
es
sbb
jns
xor
and
clc
jmp
cmp
loope
jmp
inc
out
cmp
jne
nop
cdq
cld
pushf
push
mov
shl
mov
out
adc
leave
pop
pop
or
xlat
jbe
pop
aad
repz
push
jg
ins
pusha
jmp
lahf
xchg
mov
dec
jp
loope
das
daa
sbb
popa
cs
push
js
loope
xchg
test
mov
jge
scas
jbe
dec
outs
xchg
fwait
jg
in
xrelease
addr16
add
sahf
loopne
jl
lods
addr16
and
mov
mov
pop
jle
add
in
or
icebp
sbb
jae
sbb
sbb
stc
push
or
mov
inc
mov
(bad)
add
fwait
xor
fdiv
daa
std
xor
test
add
inc
loop
mov
cld
xchg
cmc
cli
mov
repnz
call
or
aad
pop
loop
mov
cmp
pop
out
sbb
bound
jbe
push
call
fwait
push
and
je
xchg
test
rcl
bswap
mov
lods
mov
mov
cmp
std
int3
xor
sbb
cmp
add
out
(bad)
out
mov
mov
daa
push
push
push
cmp
mov
enter
add
enter
jmp
and
aam
fadd
ss
mov
in
mov
jmp
mov
jle
inc
sub
push
imul
jge
mov
mov
jb
loopne
jo
lds
mov
outs
rcr
mov
pop
push
pop
lock
das
fdiv
jmp
sahf
ins
xchg
dec
xchg
hlt
gs
repz
arpl
jae
push
test
jne
cmps
stos
sbb
in
dec
repz
fcomip
arpl
xchg
mov
test
mov
ja
ins
and
jge
xchg
cs
push
imul
xchg
jle
dec
mov
shl
int3
jge
cdq
mov
iret
mov
xor
adc
cld
(bad)
out
or
push
fwait
adc
push
rol
jl
lea
push
adc
gs
lods
jmp
push
pop
ret
xchg
(bad)
xor
cmps
jecxz
in
fucomp
jg
cwde
dec
xor
ss
xlat
or
(bad)
or
jmp
adc
inc
and
add
lahf
or
dec
sub
lods
jg
cwde
test
outs
jle
mov
push
call
fld
std
and
in
std
mov
inc
(bad)
test
mov
gs
or
jnp
je
enter
pop
or
push
test
mov
imul
add
and
fs
adc
xor
nop
or
push
popa
inc
or
jns
out
adc
mov
pop
jle
and
ret
sbb
pop
fcomp
movs
bound
sti
sub
mov
(bad)
dec
clc
mov
dec
mov
push
mov
ja
jle
push
jno
mov
mov
lods
push
jmp
push
push
mov
sti
xchg
retf
fcomp
fld
pop
test
mov
xchg
loope
pop
mov
sub
dec
cmp
outs
sti
mov
loopne
cmp
popf
mov
dec
pop
sbb
mov
push
pusha
rcl
into
retf
mov
sbb
outs
nop
pop
daa
pop
movs
pop
adc
mov
push
fldenv
mov
addr16
cmps
push
adc
inc
mov
pop
mov
nop
cmps
mov
cmp
test
cdq
fimul
mov
or
popa
out
sbb
push
mov
bswap
ja
je
mov
jl
dec
xor
push
mov
inc
dec
push
mov
mov
ja
into
cmp
or
out
xchg
mov
pop
sub
push
pusha
jne
mov
pop
outs
scas
xor
add
mov
int
pop
aam
mov
sbb
pop
sub
xchg
push
and
pop
pushw
aam
test
sbb
inc
int3
arpl
inc
lahf
movs
adc
sbb
xlat
shl
push
ror
div
sub
rcl
dec
xchg
jns
mov
mov
or
and
or
mul
push
mov
mov
stc
push
cmp
lahf
or
or
fwait
sub
ss
ds
es
cmc
in
inc
jne
sbb
stc
jo
lods
lahf
ficomp
jno
jle
and
fnstenv
outs
jmp
retf
add
sub
jnp
ror
push
jo
in
sahf
lods
es
pop
int
loopne
cmp
outs
enter
mov
leave
jb
call
xor
in
aad
sbb
ins
int
push
cmp
fbstp
(bad)
push
cld
fst
in
adc
and
pop
(bad)
sahf
pop
fcmovbe
xchg
jae
fnstsw
push
pop
push
jg
icebp
dec
comiss
data16
(bad)
movs
es
jns
mov
(bad)
mov
xor
lods
sub
arpl
icebp
cli
aaa
ror
mov
push
stos
lods
int
inc
xchg
pop
xchg
inc
xchg
call
adc
call
cmp
inc
and
fiadd
test
rol
lea
icebp
ins
nop
xchg
push
pushf
dec
test
dec
push
cmc
call
fiadd
int3
jb
fstp
adc
fldenv
sub
or
shr
adc
icebp
addr16
mov
push
or
sbb
dec
mov
mov
push
scas
loope
jnp
test
fwait
adc
je
dec
pop
in
jmp
lods
out
jecxz
pop
and
ret
xchg
scas
fstp
inc
pop
push
cmp
or
loop
mov
add
fwait
cmp
mov
movs
add
ss
jmp
lods
sbb
ins
dec
sbb
stos
retf
(bad)
adc
repnz
dec
in
xor
push
mov
rcr
inc
stos
dec
inc
xor
inc
(bad)
out
jg
mov
and
xor
shl
nop
pop
inc
int
cmp
ins
(bad)
dec
mov
retf
lods
imul
fist
mov
push
pop
pop
mul
jns
fwait
dec
mov
dec
rcl
push
jge
fwait
xlat
mov
inc
mov
popa
push
adc
xchg
pop
xlat
xor
mov
xchg
xchg
jne
mov
or
bound
je
xchg
push
call
shr
xor
adc
pop
xor
jmp
mov
in
shl
mov
(bad)
inc
mov
ins
movs
or
in
sbb
xlat
dec
xchg
sbb
xchg
cwde
es
push
cdq
xor
cmc
fwait
cmp
mov
pop
popf
and
jg
add
vsqrtsd
xor
inc
ret
mov
mov
pop
or
and
mov
mov
jecxz
cmp
add
dec
jnp
cli
das
mov
lods
aam
push
sub
mov
lahf
loope
push
jae
stc
inc
lahf
clc
pop
jp
mov
or
mov
xchg
pusha
mov
lods
call
jbe
mov
sar
fucomp
mov
test
leave
jg
push
aas
cdq
push
cwde
mov
into
(bad)
xchg
or
pop
(bad)
lahf
ret
inc
(bad)
cs
dec
call
imul
dec
xchg
pop
xchg
xor
pop
and
int3
and
ins
fs
xor
sub
push
dec
iret
push
ins
inc
cmp
dec
mov
in
and
aam
call
ret
and
mov
movs
popf
cdq
push
xor
sub
mov
xchg
scas
lahf
push
mov
sbb
test
pop
inc
hlt
in
pusha
jp
test
push
daa
lea
dec
scas
sbb
ins
mov
adc
jo
int
rol
daa
adc
xor
jp
loope
jo
les
push
xchg
sbb
aam
call
call
js
pop
imul
dec
push
popa
stos
(bad)
pop
mov
mov
jecxz
(bad)
adc
jmp
mov
pop
out
mov
(bad)
xor
pushf
cmp
lods
daa
push
js
adc
jge
test
clc
mov
jmp
scas
pop
(bad)
fidiv
shl
and
inc
sub
fcomp
(bad)
leave
push
mov
mov
mov
stos
lahf
and
sub
mov
data16
mov
jb
shl
lahf
call
fnsave
inc
or
cwde
push
add
loopne
bswap
xor
scas
loopne
inc
mov
and
add
jle
xchg
jmp
pop
rol
sahf
jne
push
jmp
or
dec
adc
xchg
or
or
sbb
xchg
fnsave
daa
adc
xor
mov
outs
sub
ja
cmp
xlat
mov
ins
call
stos
leave
test
or
out
cli
out
ud1
aaa
aad
dec
sahf
push
scas
ins
jb
ret
xchg
and
dec
or
sbb
icebp
pop
inc
lds
fstp
jne
dec
adc
out
in
ror
or
xchg
aam
dec
stos
cmp
or
js
sbb
je
mov
push
gs
xchg
ds
jecxz
adc
fild
pop
push
ja
scas
out
(bad)
sbb
inc
pop
mov
ficomp
adc
pop
and
adc
jae
xchg
arpl
sbb
mov
stc
dec
stc
shl
add
iret
pop
adc
int
mov
mov
dec
mov
test
cmp
mov
cli
sub
push
sbb
xor
push
inc
xchg
sub
aad
into
pop
in
iret
ret
popa
ja
mov
mov
mov
jae
mov
mov
hlt
movs
shl
dec
out
mov
cmp
outs
dec
mov
push
xchg
xor
inc
cmp
push
dec
bound
fldcw
cdq
outs
aam
aam
test
cli
mov
fisttp
adc
lahf
ret
mov
jae
leave
sub
fsub
imul
pop
cs
into
push
repnz
pop
shr
mov
lds
pop
jo
dec
psllq
data16
stos
cli
cmovb
jmp
dec
shl
aaa
repz
push
jmp
mov
stos
mov
add
das
mov
loopne
mov
ficom
fwait
sti
pop
in
jg
ror
cmp
sbb
aas
push
mov
movs
push
imul
xchg
pop
sub
jl
aaa
sub
or
data16
rol
loop
stos
aam
popa
enter
sub
out
and
xchg
(bad)
mov
(bad)
jae
clc
repnz
jae
push
outs
gs
sbb
jns
xlat
xor
sbb
jmp
fistp
ret
stc
retf
fldlg2
xchg
pop
jo
ss
jge
sbb
addr16
push
cdq
sub
leave
or
sub
cmp
(bad)
adc
data16
aas
inc
(bad)
cmp
dec
arpl
add
shr
outs
sbb
or
ins
sub
pop
jo
std
mov
xchg
ins
ret
and
or
add
add
test
cmc
outs
xchg
dec
imul
xor
cmps
cmp
outs
aad
daa
jmp
add
sbb
rcr
loope
pusha
inc
imul
fadd
loop
stos
dec
push
pop
push
cwde
sub
jnp
push
sbb
cmp
xchg
movs
jecxz
mov
pusha
les
popaw
in
gs
rcr
and
pop
inc
xchg
pop
mov
inc
fnstcw
pop
xchg
or
dec
iret
icebp
daa
rcr
sbb
ret
push
iret
retf
movs
mov
and
cli
mov
(bad)
dec
and
retf
adc
xor
cwde
cmp
es
arpl
(bad)
sbb
push
ja
(bad)
and
sahf
mov
movs
(bad)
lock
fmul
ror
pop
neg
daa
out
popf
sub
cmp
enter
or
push
hlt
lods
sbb
lea
fsub
mov
or
loope
shl
mov
out
mov
test
pusha
mov
daa
cmp
movs
std
jo
xchg
int3
xor
stc
shl
out
loopne
cli
lahf
inc
outs
gs
push
adc
popf
scas
stos
in
into
outs
call
jg
xchg
imul
push
aas
add
and
jp
lods
std
jge
xchg
mov
mov
(bad)
sbb
xor
sbb
xlat
retf
sbb
dec
addr16
mov
test
int
popa
or
movs
leave
jp
mov
and
sub
adc
scas
fnstsw
xor
or
xchg
lock
repz
shr
inc
(bad)
int3
sbb
cs
dec
shr
pusha
out
in
xchg
gs
neg
mov
lea
fdivr
add
mov
call
pop
ret
pop
and
aas
dec
ins
xor
and
aaa
add
ds
stos
scas
rol
jns
jae
inc
push
xor
jp
addr16
hlt
(bad)
pop
retf
jecxz
jecxz
in
idiv
pop
cmp
das
push
cld
jmp
jle
sbb
xchg
adc
jmp
into
retf
mov
jo
or
dec
fst
outs
xor
ja
pop
jp
mov
iret
jmp
add
push
add
push
fadd
sti
and
pusha
xor
fiadd
xchg
fist
pop
test
sbb
movs
inc
stc
clc
sbb
stc
sbb
lods
jnp
movs
dec
cmp
clc
xchg
arpl
push
dec
or
mov
cmps
aad
jae
ins
mov
push
in
jl
dec
pop
inc
les
and
shl
rcr
jno
push
outs
leave
fisub
jnp
adc
lea
mov
mov
test
xor
repnz
fmul
inc
xor
bound
(bad)
cmp
dec
test
sub
fadd
cdq
int
nop
loop
mov
sbb
push
push
scas
std
sub
sub
jge
inc
repz
inc
(bad)
daa
jmp
xlat
pop
and
aas
pop
fwait
out
repz
cmc
push
jmp
out
inc
ror
sti
int
dec
mov
add
(bad)
out
div
push
cli
inc
cmc
inc
nop
mov
stc
xor
sar
pop
cmc
sub
adc
push
sub
inc
jmp
and
hlt
outs
int
mov
nop
and
sub
cmp
cmp
xor
jecxz
jns
cmps
xlat
mov
mov
ins
push
es
out
loope
pop
in
and
dec
adc
imul
gs
ror
add
push
mov
push
sbb
or
mov
ret
xlat
call
sar
scas
mov
cmps
lods
jmp
shl
nop
dec
ss
out
xchg
or
push
or
out
dec
adc
loop
add
add
sub
jle
lods
inc
shl
xchg
rol
inc
stos
jbe
jne
aam
jo
pushf
push
nop
daa
adc
movs
mov
pop
test
push
shl
bound
xor
(bad)
shl
ss
pusha
add
movs
xlat
iret
loopne
adc
sub
cdq
in
movs
push
arpl
mov
push
pop
jo
outs
xor
inc
inc
jb
adc
sbb
mov
xor
jl
sar
mov
cmp
rcl
repz
pop
repnz
imul
jo
mov
daa
mov
push
cmps
loopne
jmp
fcomp
and
jl
xchg
cmc
or
pop
push
sbb
je
sar
adc
mov
inc
into
cmps
mov
mov
jmp
scas
nop
adc
cmc
outs
rcr
fcmovnu
jae
sub
out
sar
jge
sub
sbb
outs
retf
fs
lds
cmp
cmp
inc
mov
sar
mov
ss
jg
outs
dec
mul
enter
xchg
rol
xor
pop
imul
imul
cmp
dec
jne
pop
lahf
cmps
mov
sbb
dec
sub
dec
mov
xor
fiadd
shr
or
sub
jge
fist
and
repz
push
sub
xchg
test
cli
loopne
lods
xchg
imul
test
dec
idiv
iret
xchg
(bad)
pushf
andps
xchg
loop
cli
pop
add
and
mov
sbb
call
mov
mov
int3
ins
xchg
push
leave
mov
jnp
call
scas
out
cmp
xchg
or
or
ds
xchg
or
sbb
(bad)
adc
xor
pop
in
lahf
(bad)
mov
jb
test
std
inc
in
inc
outs
jbe
outs
dec
sar
sti
push
mov
add
and
mov
test
fsubr
loop
retf
sub
mov
xor
adc
std
xchg
popf
adc
repnz
cmp
sbb
imul
cmp
cld
ror
dec
fld
nop
dec
inc
push
pop
imul
push
xchg
jecxz
push
adc
and
jecxz
jne
test
xor
sbb
icebp
test
ja
inc
adc
(bad)
cmp
stos
mov
add
mov
add
mov
dec
std
js
lock
jns
push
inc
ror
jp
imul
xchg
mov
adc
pop
push
mov
or
xor
dec
inc
ds
ret
adc
imul
movs
and
cmp
mov
push
sbb
inc
loop
fld
data16
xor
mov
cmp
ja
outs
out
inc
sbb
or
jbe
(bad)
int3
and
mov
(bad)
loope
mov
xchg
(bad)
pop
or
or
scas
hlt
push
mov
test
clc
les
test
mov
add
cmps
xchg
call
les
out
sbb
jno
add
retf
pop
popa
cli
sbb
mov
int
push
and
cmp
sar
mov
cs
hlt
or
mov
push
enter
adc
(bad)
hlt
push
clc
xor
inc
lahf
inc
xchg
dec
push
stc
sub
push
cmp
pop
mov
adc
push
mov
push
jmp
xchg
jo
pop
test
int
push
xchg
cmp
adc
sbb
fdiv
adc
stc
and
inc
std
movs
xlat
sahf
push
and
stos
push
or
jno
(bad)
rcr
retf
fnstcw
test
or
mov
or
lds
es
cmp
jge
mov
std
cmp
jg
in
loope
out
lods
clc
and
dec
fcomp
(bad)
sar
in
rcl
pop
mov
mov
mov
outs
jmp
and
jmp
jne
mov
ror
enter
or
(bad)
das
cld
push
shr
aaa
out
shl
sahf
xchg
fsub
imul
repz
or
add
mov
lods
out
stc
lock
clc
jae
loope
scas
pusha
sbb
popa
outs
xor
cmp
pop
add
int
cmps
(bad)
scas
push
mov
test
jb
outs
stc
ins
mov
add
jmp
(bad)
lods
push
ss
mov
lds
pop
pop
xor
mov
stc
push
push
mov
fs
mul
adc
adc
mov
adc
add
hlt
inc
repz
lock
jnp
mov
dec
adc
cs
clc
std
adc
sub
iret
call
push
les
inc
out
std
xchg
xor
push
add
dec
(bad)
rcl
jecxz
in
(bad)
stos
adc
pop
cmps
ins
or
stos
imul
aas
or
stos
mov
inc
mov
push
loop
das
pop
add
mov
outs
mov
(bad)
cld
and
out
out
jecxz
out
stos
sbb
outs
xor
arpl
pusha
shr
fst
call
stos
xchg
mov
cmps
and
bound
fidivr
push
pop
fsub
mov
leave
jo
jb
ds
pop
setb
cs
cmp
inc
push
clc
sar
add
cld
or
jo
mov
mov
xchg
out
mov
and
mov
sbb
ins
fldcw
jp
mov
pop
jbe
mov
call
mov
jo
into
inc
xchg
and
push
fwait
ror
aaa
pop
inc
jmp
add
push
push
rol
mov
and
mov
lahf
push
imul
dec
jmp
cmp
xor
aam
loop
mov
out
(bad)
push
lock
cdq
cmp
daa
pop
jp
adc
jg
dec
leave
inc
fs
push
cdq
add
movs
cwde
cdq
push
mov
cmps
push
data16
shl
adc
or
inc
dec
or
aas
cmp
sbb
cmps
dec
xchg
call
dec
adc
sahf
xchg
(bad)
test
mov
iret
cmp
test
push
dec
inc
repnz
pusha
cmp
out
dec
sbb
xchg
cdq
push
dec
cmovle
neg
jecxz
aam
cli
shl
outs
adc
fstp
push
(bad)
imul
rol
aas
cli
cmp
shl
xchg
dec
jmp
adc
sbb
and
jge
jl
jl
jae
mov
sbb
and
aad
arpl
sti
aas
(bad)
sar
dec
ficomp
mov
cli
fsub
daa
sub
mov
enter
xor
add
aas
jp
repnz
xor
in
inc
popf
movs
arpl
sub
repnz
mov
in
xor
mov
dec
int
movs
imul
call
push
xor
aas
cwde
sbb
cmp
adc
fsubr
sub
mov
call
push
and
cmc
push
rcr
sub
push
add
push
pusha
jae
cs
xor
push
sub
or
std
mov
idiv
mov
mov
xchg
movs
stc
pop
sbb
cmps
out
pop
ror
out
(bad)
sbb
sahf
pushf
mov
jbe
es
or
xchg
push
fldcw
es
push
pop
in
int
mov
test
std
inc
addr16
test
iret
addr16
sub
or
fs
add
mov
push
mov
and
push
imul
sbb
pop
cmp
ins
adc
pop
push
jo
adc
adc
jno
xor
js
jbe
imul
bound
jnp
or
add
aaa
movlps
or
xor
jo
cmp
and
inc
pop
pop
aas
dec
bound
imul
push
push
add
jno
adc
push
inc
cmp
adc
rol
xchg
pop
push
push
jnp
aaa
aaa
sbb
bound
jnp
fs
mov
sbb
call
adc
adc
add
push
push
push
je
pop
pop
xor
jnp
xor
add
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jg
bound
jnp
fs
add
add
adc
adc
jno
adc
add
push
push
inc
inc
pop
pop
jg
bound
jnp
fs
add
sbb
adc
sbb
ja
stc
push
loop
push
inc
dec
pop
or
js
pushaw
add
add
push
ja
dec
jne
adc
jno
adc
push
dec
push
out
push
repnz
pop
pop
inc
cmovl
jnp
push
and
or
push
jno
sbb
push
adc
sbb
jge
adc
psadbw
push
ror
jge
les
jns
fs
add
sbb
je
ret
jle
adc
ja
push
inc
pop
inc
push
inc
ror
push
fs
adc
out
add
adc
pusha
cmps
pop
adc
add
cs
dec
inc
pop
pop
call
jnp
jne
pop
add
mov
jno
add
test
adc
or
inc
inc
inc
push
cmp
fist
inc
bound
gs
pop
or
add
sbb
add
adc
and
inc
xchg
inc
pop
inc
xchg
sbb
imul
adc
adc
cmps
pop
push
jno
pop
bound
dec
push
into
inc
and
pop
ficomp
sbb
jnp
ja
pop
push
add
push
ja
ret
jno
pop
jno
pop
jno
push
pusha
popa
add
push
(bad)
pop
inc
push
cmp
dec
ins
or
and
fs
jb
adc
add
push
xchg
jge
adc
add
inc
dec
inc
push
das
sbb
jo
outs
aaa
jo
add
or
cwde
add
adc
jno
add
dec
push
lahf
inc
adc
pop
lods
sbb
fwait
jno
pop
or
and
sbb
jno
add
adc
add
adc
fist
inc
push
push
in
out
pop
jge
mov
adc
adc
add
adc
push
add
sub
push
ja
add
push
inc
inc
cmp
pop
js
pop
ins
xor
add
sbb
cmps
inc
add
call
jno
or
add
outs
dec
dec
inc
pop
pop
sbb
jnp
jl
adc
cdq
or
jno
or
push
adc
or
mov
mov
push
push
dec
pop
out
pop
jge
pop
imul
add
adc
add
loope
adc
xchg
push
jmp
inc
int
ins
jo
bound
je
add
add
push
arpl
call
jno
pextrw
add
dec
lods
dec
pop
pop
xor
jnp
jg
adc
or
adc
(bad)
push
adc
push
push
jge
adc
sbb
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
sub
adc
adc
jno
adc
add
push
push
pop
inc
dec
pop
or
jns
bound
add
add
pop
adc
adc
jno
adc
add
push
push
push
inc
pop
pop
imul
jo
jnp
fs
add
add
xchg
jno
adc
adc
jno
adc
loop
inc
push
pop
push
jnp
push
jnp
bound
jnp
imul
adc
mov
jno
sbb
adc
jno
jmp
inc
js
inc
or
je
(bad)
fs
and
adc
adc
jno
adc
add
(bad)
push
pop
inc
push
pop
pop
or
je
arpl
add
push
add
adc
adc
jno
adc
and
inc
push
inc
push
mov
or
sub
fs
sti
add
add
jb
jno
add
jno
adc
add
push
push
push
pop
inc
push
pop
jnp
pop
jo
jnp
fs
add
sbb
adc
adc
jo
adc
xor
jg
rcl
inc
pop
pop
dec
or
xor
add
cmp
adc
push
adc
adc
jno
adc
imul
pop
pop
jnp
sub
jnp
fs
add
add
inc
jo
adc
adc
jno
adc
das
add
pop
push
gs
(bad)
pop
jns
bound
jp
fs
add
add
adc
jle
jno
push
jno
adc
jno
xor
inc
pop
ror
push
gs
ds
adc
adc
jno
adc
add
retf
inc
sbb
or
jo
jp
fs
add
inc
add
adc
adc
lds
inc
push
push
push
mov
pop
cmp
sub
jnp
gs
add
scas
adc
adc
jno
adc
add
inc
mov
jo
jnp
fs
add
pop
add
push
jno
adc
adc
jo
adc
xor
or
inc
pop
pop
dec
or
xor
add
and
and
adc
xor
cs
adc
add
inc
retf
pop
push
inc
je
jnp
fs
add
push
lea
adc
push
mov
adc
pusha
add
iret
push
dec
inc
push
jo
jg
fs
cmp
adc
jne
adc
adc
mov
call
push
rol
aaa
or
jo
jnp
pusha
sti
add
mov
adc
adc
jno
adc
add
push
inc
push
xchg
pop
push
shl
fs
add
add
add
add
push
(bad)
jno
adc
pusha
add
xchg
push
dec
inc
push
pop
mov
jle
fs
add
movs
jns
adc
adc
jno
adc
add
adc
pop
xor
cmp
jnp
ins
cmp
adc
adc
pusha
sbb
jo
adc
or
addr16
ror
pop
dec
or
jns
jp
fs
or
add
add
and
adc
jo
mov
push
pop
inc
test
lea
jae
js
cwde
gs
dec
std
add
adc
pop
push
ja
jnp
pop
pop
adc
sbb
push
adc
inc
ins
pop
sub
imul
sbb
adc
sbb
adc
sbb
jb
adc
or
gs
jns
jge
jne
mov
gs
or
add
jno
add
sbb
and
pop
ja
jl
dec
push
pop
inc
sbb
or
je
addr16
add
add
adc
jmp
sbb
pop
mov
or
jb
in
jne
add
adc
adc
not
push
jno
adc
jno
push
dec
xchg
push
dec
inc
pop
pop
imul
bound
jnp
ins
scas
pop
pop
add
add
adc
sbb
jae
adc
jno
inc
push
inc
pop
inc
inc
outs
pop
jp
adc
arpl
xor
inc
add
adc
adc
outs
push
ja
adc
push
push
inc
ficomp
or
inc
pop
arpl
xchg
xchg
push
outs
adc
jno
xor
push
pop
mov
adc
add
je
push
pop
inc
dec
pop
fmul
sbb
jnp
inc
add
add
adc
xor
imul
inc
pop
pop
js
mov
fs
add
add
adc
mov
push
push
push
push
fsub
pop
jnp
jno
sbb
bound
and
pop
jns
adc
adc
jno
aaa
adc
adc
add
inc
push
pop
inc
(bad)
jl
or
bound
popa
jno
add
(bad)
add
adc
add
inc
pop
fbstp
adc
jno
push
push
imul
pop
pop
lahf
sub
jo
jnp
sub
adc
add
jno
adc
adc
adc
jno
inc
push
inc
push
sub
pop
jae
sbb
jnp
fs
jnp
adc
or
push
adc
jno
adc
jno
adc
daa
inc
push
push
push
dec
inc
(bad)
pop
ins
or
lock
arpl
adc
retf
adc
adc
je
adc
add
jae
push
pop
inc
dec
pop
mov
pop
inc
add
adc
sbb
xor
add
adc
dec
push
mov
pop
ins
or
arpl
fs
and
add
add
pop
adc
dec
add
push
pop
push
mov
pop
jnp
je
sbb
je
imul
adc
sbb
ds
adc
add
push
adc
pop
jae
or
bound
bound
adc
or
add
adc
add
les
pop
adc
add
push
dec
inc
dec
pop
cmp
jo
jnp
mov
jmp
jno
adc
or
jno
adc
add
push
inc
ja
inc
mov
jo
jnp
fs
dec
add
fs
adc
adc
jno
adc
or
cs
push
push
push
pop
pop
fcomp
or
les
fs
jp
add
or
adc
jbe
adc
push
push
pop
inc
dec
pop
mov
jnp
dec
add
adc
jo
adc
cmp
add
adc
addr16
fidivr
inc
pop
pop
jge
in
addr16
repnz
add
unpckhps
pop
adc
jns
popa
push
jno
or
pop
jnp
je
push
jae
gs
add
add
adc
push
bound
ds
and
jno
adc
add
inc
push
jae
aaa
ins
jnp
bound
jnp
ins
dec
add
add
jno
adc
sbb
jo
adc
jno
push
push
or
dec
inc
je
xor
jne
push
or
arpl
jno
adc
adc
sub
jno
and
inc
push
push
dec
fild
pop
dec
or
je
arpl
aaa
or
adc
adc
imul
push
push
push
dec
inc
push
jo
inc
arpl
add
test
adc
es
sub
adc
jns
adc
add
push
pop
inc
cld
or
inc
jnp
pop
add
add
jno
adc
das
adc
jno
sbb
add
(bad)
push
inc
pop
pop
jge
lock
jnp
idiv
add
add
add
adc
jno
adc
or
fs
call
or
jae
gs
add
add
adc
sbb
adc
jno
sub
adc
add
inc
jmp
jnp
bound
jnp
bound
xor
fstp
add
adc
adc
not
push
jno
adc
jno
inc
push
mov
pop
xchg
bound
jnp
fs
or
pop
push
adc
adc
adc
jns
adc
jno
inc
push
push
push
pop
dec
dec
pop
inc
or
je
arpl
adc
adc
adc
adc
jno
sbb
jno
adc
inc
inc
push
push
push
pop
inc
in
push
inc
or
push
cmp
add
jmp
jno
push
jno
adc
js
adc
push
push
pop
inc
dec
inc
mov
jnp
daa
add
add
jno
adc
push
adc
jno
sbb
mov
inc
pop
pop
push
stos
jns
jp
fs
inc
add
add
add
adc
test
push
push
push
add
pop
pop
jnp
je
mov
add
add
add
sbb
jb
adc
adc
add
int
adc
mov
jo
jnp
outs
les
add
add
adc
add
sbb
mov
cmp
adc
add
pop
test
rol
jo
jnp
jl
pop
adc
push
add
adc
or
jno
adc
add
push
inc
ja
dec
out
pop
das
or
je
jecxz
ja
add
ret
adc
adc
adc
pop
push
shl
adc
add
(bad)
push
dec
bound
mov
cmp
je
arpl
adc
adc
adc
adc
jbe
adc
add
push
push
fadd
js
add
sub
and
add
jo
adc
pop
adc
jns
pop
xchg
add
push
push
pop
inc
jnp
jge
cmp
pop
fs
add
and
std
adc
adc
mov
push
push
xor
push
pop
pop
jnp
fs
ja
data16
add
adc
sbb
jb
xor
jno
adc
add
pop
pop
push
aas
inc
repz
jne
std
push
retf
dec
add
adc
adc
aam
or
adc
jno
inc
push
stc
pop
sub
pop
add
je
gs
jne
push
jno
adc
adc
jge
pop
jg
stos
inc
jno
inc
push
push
push
(bad)
dec
jl
pop
or
fs
sbb
jo
enter
jno
push
jnp
sbb
jae
adc
ds
push
push
push
sbb
ja
or
jo
inc
arpl
adc
adc
jbe
jno
adc
jae
adc
add
push
push
pop
inc
pop
inc
cld
or
fs
inc
push
mov
pop
jae
adc
adc
jb
sbb
ret
push
push
push
pop
inc
pop
pop
cmp
jns
fs
add
push
push
call
adc
jno
pop
lds
lds
push
pop
inc
pop
pop
js
and
aas
jne
repnz
add
jnp
jmp
adc
ja
lds
push
iret
inc
pop
pop
jnp
popa
jo
js
imul
add
push
pop
cmp
jae
adc
jb
add
aas
pop
rol
jnp
bound
jnp
jl
pop
inc
add
jno
adc
adc
jno
adc
add
adc
leave
pop
fisttp
bound
jnp
and
ins
or
pop
movs
adc
adc
adc
imul
push
push
push
push
inc
out
push
cld
or
jo
jnp
fs
xchg
adc
adc
jno
push
jge
mov
rol
push
push
push
pop
inc
pop
inc
cld
or
fs
inc
push
mov
mov
adc
adc
jb
sbb
add
push
push
push
pop
inc
pop
pop
cmp
jns
fs
add
push
push
mov
adc
jno
pop
lds
adc
pop
js
and
aas
jne
data16
add
add
push
jb
sbb
adc
ja
lds
push
mov
pop
jnp
popa
jo
js
imul
jno
pop
cmp
jae
adc
jb
add
aas
pop
lods
inc
sbb
jnp
jl
pop
inc
add
add
adc
adc
jno
adc
add
adc
mov
sahf
or
je
pusha
and
ins
or
push
in
adc
adc
adc
imul
push
push
push
push
inc
out
push
push
(bad)
jo
jnp
fs
in
adc
jno
adc
adc
jno
push
jge
or
add
push
push
push
pop
inc
pop
inc
cld
or
fs
inc
push
mov
cmp
adc
jb
sbb
mov
push
push
pop
inc
pop
pop
cmp
js
fs
add
push
push
mov
adc
jno
pop
lds
jg
lods
push
pop
inc
pop
pop
js
and
aas
jne
data16
add
add
jnp
cmp
pop
jo
adc
ja
lds
push
pop
inc
pop
pop
jnp
popa
jo
js
imul
add
push
pop
cmp
jb
adc
jno
adc
add
aas
pop
ss
dec
pop
jnp
bound
jnp
jl
pop
inc
add
add
adc
adc
adc
jo
adc
add
adc
aas
pop
pusha
or
je
pusha
and
ins
or
pop
push
adc
adc
adc
imul
push
push
push
push
inc
out
push
push
or
je
arpl
inc
add
test
xor
adc
adc
jno
push
jge
sub
push
push
push
pop
inc
pop
inc
cld
or
fs
inc
push
mov
cmp
adc
jb
sbb
add
push
push
pop
inc
pop
pop
cmp
jp
gs
add
push
push
pop
adc
jno
pop
lds
iret
push
push
pop
inc
pop
pop
js
and
aas
jne
addr16
add
add
add
jnp
aam
sub
adc
ja
lds
push
inc
pop
pop
jnp
popa
jo
js
imul
add
pop
jno
pop
cmp
jae
adc
jno
adc
add
aas
pop
inc
inc
pop
pop
jnp
bound
jnp
jl
pop
inc
add
add
adc
adc
adc
jo
adc
add
adc
cdq
pop
xor
bound
jnp
and
ins
or
push
push
adc
adc
adc
jb
adc
add
push
push
push
pop
inc
rcr
arpl
jle
fs
add
js
adc
adc
adc
jno
inc
push
mov
inc
pop
pop
ja
bound
jnp
bound
push
add
adc
jno
adc
adc
test
adc
adc
add
push
push
push
xchg
inc
pop
pop
jp
xchg
jbe
jnp
fs
add
add
push
adc
adc
inc
jbe
adc
add
push
push
push
pop
inc
aas
pop
jnp
arpl
jl
fs
add
call
jbe
adc
jno
inc
push
cld
push
pop
inc
pop
pop
aam
bound
jnp
arpl
or
adc
adc
jno
adc
adc
add
lods
inc
pop
pop
jns
data16
jnp
fs
add
add
adc
adc
jno
adc
jo
add
push
pop
inc
push
push
jnp
arpl
jae
fs
add
data16
adc
adc
adc
jno
inc
push
jmp
pop
inc
pop
pop
mov
bound
jnp
ins
add
test
adc
jno
adc
push
jno
adc
push
adc
add
jnp
pop
pop
jp
xchg
jbe
jnp
fs
add
add
push
adc
adc
loope
adc
add
push
push
pop
inc
aaa
pop
jnp
pusha
jo
jb
fs
pop
adc
adc
adc
jno
inc
push
out
pop
pop
inc
pop
pop
mov
jo
jnp
popa
add
fmul
adc
adc
jno
pop
adc
adc
or
push
push
gs
pop
pop
jp
xor
jnp
cmp
add
add
adc
sbb
jnp
adc
add
pop
push
push
pop
inc
loopne
jnp
pusha
jo
jno
fs
pop
adc
jnp
adc
adc
jnp
adc
jno
inc
push
cmps
pop
pop
inc
pop
pop
mov
bound
jnp
outs
add
sub
add
adc
adc
jno
push
adc
adc
or
push
push
loop
pop
pop
jp
stos
jnp
jnp
fs
push
add
add
adc
sbb
jge
adc
add
pop
push
push
pop
inc
or
jnp
popa
jo
ja
fs
add
les
adc
adc
adc
jno
inc
push
mov
pop
bound
lahf
add
jo
jnp
push
jmp
add
adc
sbb
adc
ins
sbb
adc
push
cwde
dec
pop
pop
jns
movs
jge
jnp
fs
add
pop
add
pop
adc
pop
adc
jl
adc
add
inc
lods
push
jnp
imul
arpl
adc
add
adc
adc
jno
inc
push
inc
pop
pop
inc
pop
pop
cs
bound
jnp
imul
add
pop
jno
sbb
adc
sbb
pop
adc
cmovb
push
mov
or
fs
or
or
sbb
adc
jae
into
pop
push
push
pop
inc
sub
or
add
fs
pop
adc
adc
adc
adc
jno
inc
push
and
inc
pop
pop
add
bound
jnp
imul
add
push
jno
sbb
push
jno
sbb
push
adc
or
push
push
push
or
or
jle
jnp
adc
add
add
adc
adc
jae
xor
inc
jl
jnp
data16
jne
fs
add
fs
adc
adc
adc
jno
inc
push
ficomp
inc
pop
pop
or
bound
jnp
push
add
add
adc
sbb
adc
inc
sbb
adc
or
push
push
push
das
dec
pop
pop
jp
sbb
fs
sbb
jno
adc
sbb
jno
adc
jne
fcomp
push
pop
inc
(bad)
push
jnp
fs
jne
fs
add
add
xchg
adc
adc
jno
sbb
inc
push
sub
inc
pop
pop
cld
push
bound
jnp
push
add
add
adc
sbb
adc
ins
sbb
adc
push
daa
dec
pop
pop
jns
in
je
pusha
fs
or
pop
add
pop
adc
sbb
jno
adc
jbe
jp
push
push
pop
inc
hlt
push
jnp
pusha
jo
jne
fs
add
xchg
jg
adc
adc
jno
sbb
inc
push
stc
pop
pop
inc
pop
pop
add
bound
jnp
imul
add
push
jno
sbb
push
jno
sbb
push
adc
or
push
push
push
or
or
fs
add
add
adc
adc
jae
sbb
push
jnp
data16
jne
arpl
add
adc
adc
jno
sbb
inc
push
jmp
push
bound
jnp
push
add
add
adc
sbb
adc
ins
sbb
adc
push
in
pop
pop
jns
inc
jle
jnp
fs
or
add
adc
adc
jae
into
pop
push
push
pop
inc
cmp
jnp
pusha
jo
jne
fs
add
inc
jg
adc
adc
adc
jno
inc
push
ficomp
inc
pop
pop
rol
jo
jnp
imul
add
add
adc
sbb
adc
sbb
adc
dec
or
push
push
push
or
or
jnp
jnp
fs
add
add
push
adc
sbb
imul
add
pop
push
push
pop
inc
loope
jnp
pusha
jo
je
fs
pop
adc
adc
adc
jg
adc
jno
inc
push
or
inc
pop
pop
cs
bound
jnp
outs
add
push
jno
sbb
adc
sbb
adc
cmovb
push
aam
pop
pop
jp
or
jnp
xor
add
add
push
adc
sbb
jno
adc
jo
sbb
push
push
pop
inc
push
push
jnp
arpl
je
fs
add
dec
jge
adc
adc
adc
jno
inc
push
pop
push
pop
inc
pop
pop
pop
push
bound
jnp
push
add
add
adc
adc
ins
sbb
adc
push
push
inc
pop
pop
jns
inc
jle
jnp
fs
or
add
adc
adc
jae
into
pop
push
push
pop
inc
aam
jp
pusha
jo
je
fs
pop
adc
adc
jno
sbb
inc
push
outs
pop
pop
inc
pop
pop
aad
bound
jnp
push
add
add
push
jno
sbb
push
jno
sbb
or
test
jp
sbb
fs
sbb
push
sbb
jno
adc
jo
pop
pop
push
push
pop
inc
aam
jnp
arpl
jbe
fs
add
fwait
jle
adc
adc
jno
sbb
inc
push
test
inc
pop
pop
ret
add
jb
scas
imul
add
add
sbb
sub
jae
adc
rcr
jno
adc
or
or
or
jg
jnp
fimul
add
add
push
adc
sbb
jno
adc
ja
(bad)
pop
pop
push
fild
pop
fimul
in
scas
js
fs
in
add
add
stos
adc
adc
jno
adc
inc
add
push
inc
push
fs
fcomp
or
jo
jns
fs
add
aaa
adc
jb
adc
adc
jb
adc
cli
add
inc
xchg
pop
cld
or
movs
jnp
pop
add
add
adc
push
or
adc
xchg
push
jl
cmp
adc
push
dec
push
mov
xchg
or
popa
jmp
jp
loope
pop
add
add
pop
adc
adc
jae
adc
lds
push
push
inc
fcomp
or
repz
xor
adc
out
sub
push
adc
arpl
adc
jo
push
add
rcl
inc
push
cld
or
jbe
add
dec
pop
cmp
adc
dec
pop
fidiv
adc
pop
push
ss
add
or
bound
sub
pop
arpl
dec
add
add
jno
adc
dec
adc
arpl
sub
dec
inc
sub
dec
icebp
or
ja
out
add
adc
bound
lock
test
test
pop
imul
inc
pop
(bad)
sbb
jo
jp
ja
add
pop
movs
jo
add
pop
xchg
jo
push
or
adc
xlat
push
jbe
mov
or
jae
jle
gs
adc
pop
ret
push
add
adc
retf
adc
gs
cwde
add
inc
lods
push
mov
call
outs
or
rcl
imul
adc
adc
jo
add
inc
inc
inc
mov
sbb
push
jno
add
jb
gs
add
adc
add
adc
out
push
mov
or
gs
jge
cmp
cmp
pop
shl
in
or
fs
pop
add
pop
ds
dec
inc
fcomp
push
jae
retf
outs
adc
adc
xchg
adc
mov
dec
adc
jae
push
bound
sbb
push
in
inc
add
push
or
jnp
addr16
add
adc
pop
jae
add
add
jo
push
test
push
or
or
xchg
jge
pushw
adc
add
pop
ja
out
jae
not
push
jbe
pop
xchg
jae
adc
add
inc
pop
push
sub
dec
imul
jno
pop
pop
icebp
adc
add
adc
adc
adc
xor
jo
add
add
adc
pop
cld
or
ja
jp
jae
add
mov
jne
lods
jo
pop
sbb
es
adc
not
inc
fs
retf
sbb
mov
add
push
add
lds
mov
push
loope
push
dec
in
(bad)
jb
arpl
arpl
add
sbb
(bad)
leave
adc
adc
imul
sbb
add
stos
inc
ficomp
sbb
js
jnp
data16
aad
inc
sbb
pop
or
sbb
dec
or
mov
push
mov
cli
or
push
loope
mov
pop
add
add
jns
push
add
sub
pop
imul
dec
dec
push
and
pop
adc
jne
addr16
or
add
adc
jae
push
bound
fist
dec
je
ficomp
adc
jne
bound
or
add
sbb
pop
inc
jo
push
bound
sbb
clc
or
ja
pusha
pop
pop
push
jnp
jge
jb
push
pop
jb
dec
sbb
or
pop
cmp
pop
jno
pop
not
dec
js
push
xchg
jae
sbb
and
inc
mov
add
mov
ins
aaa
push
sbb
imul
adc
imul
jo
push
add
jnp
add
pop
sbb
jl
sub
add
imul
jae
push
(bad)
sbb
sahf
(bad)
js
push
in
repz
(bad)
push
fcomp
push
mov
jb
data16
int
add
sahf
or
js
pop
(bad)
or
imul
jo
sti
dec
mov
inc
xchg
inc
cdq
add
jle
jp
push
push
rcr
sbb
add
enter
sbb
cld
imul
or
add
push
push
dec
adc
inc
pop
ins
adc
sbb
add
pop
sbb
xchg
push
dec
adc
pop
mov
add
fist
fs
jmp
addr16
cmp
mov
jo
adc
adc
jne
adc
pop
add
push
(bad)
pop
jbe
adc
add
jge
outs
dec
add
sub
push
xor
push
jno
push
push
jno
adc
push
add
push
mov
sbb
or
fs
add
add
or
adc
adc
pop
add
aad
inc
inc
mov
clc
or
jo
jg
fs
add
mov
pop
adc
jne
adc
rol
mov
inc
dec
pop
fwait
or
jo
jnp
pusha
cmps
add
rcl
jno
pop
mov
(bad)
jno
adc
jno
adc
push
mov
inc
pop
pop
push
jp
fs
add
adc
cmp
push
push
jo
adc
pop
add
ss
jae
pop
pop
sbb
jno
xchg
js
gs
add
jo
adc
adc
rcl
jno
adc
push
mov
or
jb
jnp
pusha
popw
pop
add
push
adc
jae
adc
adc
jae
adc
enter
test
jp
jnp
fs
add
xor
push
cmp
adc
jne
adc
push
aam
int
repnz
icebp
pop
pop
or
out
sti
add
pop
out
cmp
lahf
jne
adc
adc
ja
adc
ja
adc
push
mov
cmpps
mov
test
cld
add
pop
jns
adc
push
cdq
jns
sbb
rol
pop
pushf
pop
clc
inc
fcomp
pop
jns
jb
ins
fmul
or
or
sbb
jnp
push
xor
inc
jnp
adc
or
push
inc
push
pop
inc
pop
pop
xchg
add
jo
jnp
push
add
adc
jno
adc
add
xor
pop
pop
push
jnp
cmp
add
inc
xchg
adc
sbb
xchg
adc
jae
adc
add
inc
push
sub
pop
jns
data16
jnp
fs
add
adc
adc
jno
adc
jae
inc
push
pop
push
pop
inc
push
pop
jo
pusha
jo
jnp
fs
add
xchg
jno
adc
adc
popa
jno
adc
add
inc
push
inc
inc
jp
bound
es
inc
adc
pop
adc
adc
jnp
adc
add
inc
pop
pop
mov
jnp
gs
add
jnp
jo
push
jo
adc
xor
mov
inc
pop
fdivr
bound
jnp
fs
add
adc
adc
jno
adc
add
pop
push
pop
inc
pop
pop
jae
bound
jnp
fs
or
adc
adc
jno
adc
add
loop
pop
inc
pop
pop
jns
bound
jnp
fs
add
adc
adc
jno
adc
add
add
inc
pop
pop
jns
bound
jnp
fs
or
adc
adc
jno
(bad)
add
push
push
pop
inc
pop
pop
outs
or
jnp
fs
push
add
add
add
adc
jno
adc
arpl
pop
push
inc
push
inc
inc
dec
pop
or
push
jnp
fs
add
adc
aaa
jno
adc
adc
jno
adc
add
inc
push
jo
dec
pop
push
or
pop
jnp
fs
add
adc
adc
adc
jno
adc
add
push
push
inc
inc
loope
jnp
bound
jnp
addr16
add
and
shl
sbb
adc
jns
adc
or
inc
mov
js
jnp
ins
mov
add
call
jns
adc
add
xchg
pop
pushf
inc
dec
push
jnp
bound
inc
or
jo
addr16
push
pusha
js
jo
cmp
jbe
push
popa
jnp
jbe
add
and
and
sbb
jnp
adc
and
pusha
fs
jnp
adc
adc
push
jp
add
adc
inc
sbb
pop
sub
bound
xor
data16
adc
jp
adc
jno
jae
jno
jo
adc
ss
aas
cmp
xor
add
push
imul
jno
push
ja
jnp
adc
jl
adc
daa
cmp
push
sbb
js
sbb
adc
jo
outs
outs
add
ja
sbb
adc
pop
push
push
gs
ins
and
xor
push
jp
adc
or
arpl
bound
ja
jno
pop
daa
inc
adc
pop
xor
and
das
xor
sub
or
adc
adc
imul
adc
jl
sbb
jbe
cmp
cmp
ds
add
and
adc
jno
adc
pop
smsw
gs
jae
pop
jno
jp
adc
(bad)
movs
mov
adc
xchg
add
rcr
in
mov
xchg
add
and
xor
adc
cwde
xlat
hlt
rol
xchg
(bad)
fwait
in
cwde
jmp
les
(bad)
fwait
mov
movs
mov
rcr
xchg
(bad)
cwde
fdivr
mov
xchg
rcl
jae
cmp
ins
xor
add
xor
xor
xor
push
jl
sbb
pop
or
adc
inc
jnp
push
adc
aas
ja
add
push
ins
jno
push
xor
push
sbb
sub
ds
push
add
add
add
jo
push
jae
bound
pusha
cmp
adc
pop
jno
push
ss
and
aaa
sub
cmp
push
or
inc
push
jae
adc
add
inc
jno
push
js
jno
push
xor
or
sub
push
ins
push
adc
add
ja
ja
inc
jne
addr16
push
adc
jns
data16
jno
sbb
xor
sub
dec
es
inc
gs
sub
add
adc
sbb
inc
adc
bound
popa
daa
es
push
sub
aaa
xor
imul
add
pusha
jno
pusha
adc
jnp
add
push
je
cmp
jnp
add
cs
aaa
and
and
push
jle
adc
or
or
ja
pusha
jno
inc
or
adc
adc
adc
pop
popa
and
cmp
and
or
add
outs
bound
ja
ds
adc
popa
inc
add
sbb
daa
push
xor
js
sbb
sbb
or
pop
inc
jae
pop
adc
adc
add
jge
ja
jno
xor
and
aas
daa
das
pop
cs
add
xor
outs
data16
and
pop
jnp
adc
adc
and
sub
cmp
cmp
xor
add
popa
jo
ins
pusha
ja
ds
adc
popa
and
bound
jbe
add
add
cmp
addr16
and
add
add
imul
adc
addr16
popa
adc
add
add
xor
pop
push
and
push
or
adc
add
jno
jp
adc
ja
add
jl
add
or
inc
addps
adc
inc
ins
jno
push
ja
cs
jp
data16
jno
dec
adc
jbe
adc
and
sub
sub
add
push
ja
arpl
ja
pusha
sbb
adc
adc
push
jno
pop
jp
jbe
cmp
sub
ins
divps
adc
add
popa
ins
ins
fs
jae
jno
and
inc
daa
adc
and
push
or
pop
or
or
dec
je
pop
xor
add
xor
inc
inc
and
and
jno
jne
sub
add
push
jo
cmp
pop
imul
jae
dec
cmp
sbb
pusha
adc
or
xor
cs
sbb
adc
adc
or
jae
ins
ja
push
jae
add
adc
ja
es
jo
gs
cmp
aaa
sub
adc
outs
bound
sbb
adc
or
dec
push
adc
popa
pusha
adc
cmp
jge
js
jno
sbb
es
cmp
imul
or
add
add
push
pusha
jno
ja
ja
pop
popa
jge
add
sub
and
daa
sub
jp
das
and
pop
or
inc
je
pop
push
bound
jno
js
dec
pop
push
jno
pusha
sbb
jno
sbb
inc
push
cmp
bound
out
sar
cwde
jno
jne
adc
inc
jl
gs
adc
xor
xor
sub
push
and
sub
add
add
push
add
data16
popa
cmp
adc
jae
adc
xor
aas
pop
or
cmp
dec
or
jnp
add
data16
pusha
adc
js
jno
adc
adc
sbb
add
and
ss
jnp
pop
sbb
aas
push
pop
adc
popa
ja
push
imul
jns
inc
jl
ja
addr16
js
jb
xor
adc
daa
xor
add
pop
adc
popa
ja
push
jno
popa
jno
jbe
add
jo
ss
xor
daa
xor
sub
xor
pop
addr16
or
dec
addr16
add
or
push
jne
add
jnp
ja
add
or
das
push
or
xor
sbb
adc
add
add
pop
push
inc
push
pusha
jno
adc
sbb
push
arpl
xor
cmp
and
adc
push
xor
adc
popa
ins
jo
ins
data16
push
adc
data16
adc
addr16
imul
push
push
xor
cmp
sbb
add
imul
bound
jae
push
jnp
jl
push
jae
push
pop
jbe
or
and
xor
xor
adc
cmp
push
addr16
dec
ins
jno
add
push
or
popa
add
xor
adc
cs
sbb
and
add
popa
jnp
pusha
ja
pop
je
ja
push
or
add
and
cmp
pop
adc
sub
jg
add
sub
pop
or
jo
add
ja
push
ja
pop
adc
addr16
jno
ss
addr16
sub
sub
popa
or
je
push
sbb
data16
push
jno
push
jnp
ja
add
jp
inc
jge
sub
and
daa
sub
or
or
clts
or
popa
jp
add
jl
xor
sbb
push
jno
push
sub
xor
das
push
and
or
daa
sbb
arpl
push
push
jo
push
adc
jp
sbb
jle
jle
push
adc
push
adc
cmp
cmp
ds
inc
or
or
push
jp
jno
inc
jge
jbe
push
inc
jl
sbb
cmp
and
das
jno
adc
adc
pusha
jno
jne
ja
and
add
adc
sbb
sub
(bad)
add
adc
cmp
or
add
outs
jge
adc
adc
add
and
aaa
push
cmp
xor
js
and
add
fs
push
adc
imul
pop
xor
bound
(bad)
retf
xchg
jecxz
repz
out
or
movs
mov
data16
fs
adc
pop
ja
jno
daa
and
push
ss
sbb
bound
adc
push
fs
jno
pusha
pusha
cmp
adc
jle
dec
sbb
adc
es
or
jl
add
jnp
or
outs
fs
adc
jge
adc
xor
jnp
ja
aaa
imul
xor
and
ss
adc
adc
es
imul
fs
jne
inc
je
jae
jge
inc
dec
cmp
adc
sub
or
adc
add
push
push
inc
imul
jl
jno
jne
ja
pop
pop
jl
add
xor
xor
cmp
dec
or
jnp
adc
imul
popa
pop
jbe
add
add
push
add
jnp
arpl
cmp
daa
aas
xor
imul
adc
add
pop
jne
jle
cmp
jl
xor
adc
ss
pop
and
add
punpckhwd
push
sbb
pusha
gs
ins
add
movs
mov
xlat
out
(bad)
in
rol
int3
sar
in
xchg
retf
retf
mov
mul
mov
shr
adc
jmp
adc
shl
fcom
retf
cli
jo
jmp
shr
xlat
out
xchg
rol
xchg
(bad)
fwait
rcr
jecxz
cli
mov
mov
pusha
add
ja
adc
jge
add
sbb
jno
rol
xchg
(bad)
fwait
rcr
adc
push
ins
add
data16
jge
jno
jnp
jbe
sbb
jne
imul
ss
and
inc
or
es
jbe
inc
addr16
jno
pop
push
jbe
sbb
jo
aas
jge
cmp
ss
cmp
sub
adc
pop
es
jno
inc
jno
bound
xor
add
add
inc
jge
ja
ss
aas
cmp
ins
adc
je
or
adc
inc
addr16
jno
add
push
or
add
jne
ja
cmp
and
cmp
sbb
addps
pop
pop
cmp
add
ja
dec
fs
addr16
and
jno
ins
add
pusha
jno
jp
xor
aaa
cmp
daa
das
or
add
adc
adc
adc
jo
jle
inc
adc
inc
jnp
jno
jo
push
ins
jno
adc
and
adc
and
pop
add
sbb
or
add
jp
pusha
adc
jno
bound
push
adc
popa
sub
and
ds
sub
pop
imul
(bad)
pushf
sar
rcl
mov
cmp
adc
daa
xor
and
cmp
and
adc
adc
data16
addr16
push
jbe
jno
pop
adc
ins
add
ss
cmp
pop
adc
sub
or
popa
add
pop
jbe
sbb
addr16
ja
add
push
and
ins
push
sbb
cmp
adc
fs
pop
adc
add
adc
or
add
add
sub
aaa
or
sub
sbb
es
add
dec
ja
add
push
or
inc
pop
jp
push
imul
or
or
sub
or
arpl
pop
push
jnp
jl
push
jo
jno
jp
pop
push
bound
ss
and
xor
dec
or
add
pop
push
jb
ja
jg
pop
ja
and
adc
adc
pusha
jno
or
push
adc
daa
cmp
inc
or
sbb
sub
adc
pusha
sbb
jno
jp
add
jno
inc
xor
xor
cmp
and
ins
push
das
cmp
adc
pusha
ja
pop
inc
jo
jno
jo
or
push
sbb
addr16
jnp
imul
sbb
pop
ins
bound
and
adc
bound
jg
xor
adc
adc
adc
add
xor
sub
xor
jno
adc
pop
adc
ja
pushw
jge
jbe
push
popa
cmp
jge
jns
adc
jnp
push
adc
cmp
inc
adc
cmp
lsl
inc
data16
push
pusha
add
ss
cs
jns
jno
pop
xor
xor
cmp
ins
pop
jo
and
or
pusha
add
ins
pop
push
jl
adc
adc
push
jno
adc
add
cmp
cmp
sub
jno
add
push
dec
adc
imul
pop
jp
ja
push
bound
pusha
arpl
ja
jno
and
xor
cmp
xor
or
pop
das
imul
ins
adc
jle
adc
cmp
jo
ja
cmp
cmp
ss
aas
pop
sub
aas
add
or
jp
push
data16
sbb
jo
adc
push
inc
popa
adc
cmp
aaa
cmp
inc
pop
sbb
adc
add
outs
pusha
fs
adc
inc
adc
adc
pop
jbe
ja
add
xor
pusha
or
pop
pop
imul
jbe
jle
jno
or
xor
js
jae
sbb
add
xor
or
jo
(bad)
shl
mov
xlat
xchg
test
xchg
out
push
fwait
repz
out
jmp
or
jo
imul
add
addr16
popa
push
sbb
adc
daa
das
push
sub
cmp
(bad)
adc
sbb
imul
jo
jp
jge
sbb
popa
sbb
adc
ja
adc
and
xor
cs
cmp
imul
xor
sgdtd
fs
inc
jbe
jl
and
add
jno
pop
fs
addr16
adc
cmp
dec
adc
sbb
xor
adc
dec
ins
fs
ja
add
jno
adc
add
daa
sub
bound
adc
popa
jbe
jo
add
pop
je
add
ja
je
jno
inc
jge
addr16
aaa
das
and
ins
bound
or
ja
jbe
pusha
ins
adc
jo
ja
adc
data16
addr16
daa
cmp
and
inc
das
and
ins
bound
push
adc
add
imul
jno
addr16
jno
add
pop
data16
xor
cmp
inc
add
adc
push
fs
popa
data16
pop
jo
inc
jl
ja
adc
ja
adc
xor
xor
push
sub
jl
add
adc
pusha
add
push
pusha
adc
popa
jno
fs
and
pop
jb
and
sub
adc
vmread
add
sub
add
ja
ins
jno
dec
ja
xor
je
ja
pop
cmp
jo
ins
add
xor
pop
adc
cmp
jnp
or
bound
push
ins
outs
ja
xor
pusha
add
pop
je
adc
pop
jno
add
and
cmp
jl
pop
sbb
arpl
pop
push
jno
jo
bound
jo
addr16
jno
fs
arpl
and
sbb
das
ds
or
adc
popaw
gs
push
push
jno
inc
ins
add
sbb
push
jnp
bound
addr16
sbb
cmp
aaa
pop
ds
or
or
push
or
arpl
push
pusha
add
popa
adc
push
jo
data16
inc
xor
and
and
cmp
adc
sbb
sub
xor
jp
bound
pusha
adc
addr16
and
sub
aas
sbb
pop
xor
movups
add
popa
pusha
adc
cmp
jp
add
push
xor
aas
and
push
adc
adc
ins
pusha
jbe
data16
jno
push
popa
jp
cmp
popa
popa
adc
xor
cmp
push
js
sbb
or
add
ins
popa
data16
inc
pusha
adc
pusha
jno
jge
popa
sbb
xor
and
pop
adc
ins
pop
cmp
add
outs
inc
ja
data16
add
pushaw
adc
cmp
ins
das
and
das
adc
pop
aas
push
pop
punpckldq
dec
pusha
outs
bound
imul
jno
popaw
data16
add
and
daa
ss
jge
add
push
push
dec
and
imul
sbb
add
inc
popa
pop
data16
or
cmp
cmp
ins
push
aas
push
adc
pop
adc
outs
jbe
add
pop
data16
ja
or
pop
adc
addr16
adc
and
sub
cmp
or
inc
pusha
jno
fs
jge
jno
addr16
popa
jno
jl
add
push
adc
jge
xor
pop
sgdtd
inc
ja
data16
add
js
sbb
adc
adc
and
sub
sub
sbb
push
add
ja
pusha
push
pusha
add
popa
adc
push
jnp
bound
xor
xor
cmp
ins
and
or
push
adc
add
jne
pushw
jl
adc
popa
jno
gs
jnp
sbb
xor
inc
sbb
cmovle
xor
jno
add
jo
jno
cmp
adc
jg
jge
ja
push
or
das
cmp
push
adc
push
ins
jo
fs
pusha
adc
jno
popa
adc
adc
bound
jbe
xor
and
cmp
or
adc
adc
imul
add
jnp
inc
jns
adc
adc
imul
push
adc
sub
sub
or
adc
or
jbe
jbe
inc
data16
xor
xor
jno
adc
sub
xor
cmp
sbb
adc
pop
or
data16
pusha
jnp
ja
add
addr16
jle
adc
daa
cmp
or
add
pop
adc
ja
gs
inc
jge
and
jno
jo
jnp
pusha
add
adc
inc
pop
xor
xor
das
sub
or
add
adc
addr16
dec
bound
inc
popa
adc
or
inc
jno
jnp
add
cmp
ins
bound
adc
xor
add
ja
inc
sbb
jno
gs
je
push
pusha
addr16
sub
daa
or
popa
or
je
pop
push
packssdw
fs
ja
pop
adc
pop
sbb
push
je
adc
jp
push
sub
xor
daa
das
pop
xor
adc
or
ja
push
push
inc
pusha
add
push
adc
jl
jne
adc
jno
xor
jns
daa
and
pop
add
and
jo
jbe
jnp
pop
popa
adc
ja
adc
adc
add
sbb
and
sub
aaa
pop
fs
adc
adc
dec
gs
ins
popaw
adc
ja
cs
jp
jl
adc
jl
inc
xor
xor
cmp
addr16
push
or
inc
ins
ja
jge
add
pop
addr16
jle
push
push
pusha
pop
push
ins
xor
ds
cmp
jnp
or
pop
punpckhdq
add
pop
jp
ja
adc
adc
adc
pusha
xor
ss
aas
push
jl
cmp
adc
arpl
pop
inc
jp
add
and
add
jge
jne
xor
and
aas
pop
cmp
push
and
add
fs
push
gs
jne
and
pusha
adc
addr16
adc
sub
xor
or
xor
pop
clts
or
jbe
je
ins
jne
cmp
push
jnp
push
adc
jne
aaa
ins
xor
aaa
and
xor
imul
cmp
imul
data16
jno
adc
dec
and
jns
pusha
ins
and
xor
cmp
ds
dec
or
add
pop
push
ins
addr16
jne
add
jb
add
daa
cmp
cmp
das
cmp
inc
movups
push
arpl
adc
imul
push
ja
cs
gs
adc
and
xor
aaa
xor
or
jo
sbb
or
push
pop
jno
ins
ins
add
push
pushw
jg
adc
jno
adc
jbe
sbb
cmp
pop
aas
push
jl
xor
add
add
dec
ins
jo
adc
dec
cmp
jnp
data16
and
adc
adc
cmp
and
pop
aas
ins
push
adc
pop
jbe
outs
sub
addr16
data16
jno
jo
push
data16
xor
ss
daa
sub
jl
sbb
sbb
fs
jae
pusha
addr16
pop
adc
jge
jbe
jp
jge
ss
and
sub
push
sbb
pop
and
data16
jo
adc
pusha
jno
addr16
jno
add
inc
add
and
cmp
sub
ins
push
and
or
add
jo
jne
pusha
pusha
or
add
popa
jno
inc
inc
xor
daa
xor
cmp
das
sub
popa
add
add
inc
bound
jno
add
add
cmp
ja
jno
daa
aaa
adc
sub
dec
or
add
push
adc
dec
cmp
jbe
jnp
jno
jae
adc
pop
cmp
aas
jnp
pop
add
cs
and
inc
addr16
ja
jge
jne
push
ja
cs
jnp
adc
adc
add
ss
sbb
add
push
dec
xor
ins
ja
cmp
pusha
ins
add
push
pusha
je
sbb
and
cmp
ss
imul
cmp
inc
pushaw
jge
ja
or
add
push
ins
add
das
cmp
and
sub
sbb
outs
or
or
popa
jbe
dec
imul
pusha
cs
inc
jno
push
data16
push
push
xor
and
sub
adc
add
jnp
jno
pusha
adc
pusha
jne
popa
jae
pusha
js
sbb
inc
cmp
ds
or
add
ins
pushw
add
and
addr16
add
or
add
xor
or
das
or
push
fs
push
jl
data16
cmp
adc
ja
jno
data16
arpl
xor
xor
push
adc
adc
je
jno
jp
jne
jae
ss
and
pop
adc
pop
adc
es
adc
jge
jo
push
add
ins
bound
jg
pop
push
adc
ds
jno
data16
jo
and
pop
cmp
imul
pop
adc
add
dec
and
add
add
jne
add
cmp
ds
pop
add
push
arpl
or
arpl
ins
jae
adc
jbe
ja
add
bound
addr16
and
aaa
es
adc
es
or
add
add
xor
jo
inc
jo
adc
daa
sub
aas
cmp
cmp
fs
push
adc
fs
jge
jno
jo
adc
sub
xor
add
sub
or
pop
sub
adc
add
ja
adc
data16
popa
adc
xor
adc
xor
and
push
ds
add
and
push
or
jb
jne
jnp
or
inc
or
jno
cmp
adc
aaa
daa
aas
and
inc
or
pop
or
or
fs
fs
addr16
jnp
ja
adc
pusha
add
ins
xor
add
and
xor
cs
jl
add
add
ja
jge
addr16
adc
inc
push
pop
jnp
inc
and
ins
xor
aaa
and
cmp
or
sbb
sub
push
add
add
dec
addr16
pop
data16
gs
push
push
ins
xor
and
cmp
inc
or
inc
dec
arpl
add
jo
data16
xor
adc
jns
and
add
sbb
cs
aaa
das
sbb
jl
sbb
push
pop
add
gs
jo
pop
jge
jbe
cmp
add
js
popa
push
add
and
pop
or
adc
jl
add
jle
push
jae
adc
push
adc
push
jno
ja
adc
adc
and
punpcklwd
or
pusha
jbe
push
ja
jno
add
push
jbe
sbb
popa
pusha
adc
ins
push
cmp
xor
cmp
addr16
je
or
push
ins
pusha
adc
ja
xor
add
pusha
and
adc
es
pop
sub
das
pop
adc
smsw
data16
jnp
adc
dec
cmp
jno
sbb
daa
xor
sbb
and
adc
push
adc
or
jno
add
jl
sbb
adc
data16
jno
pop
add
and
cmp
ins
push
das
cmp
adc
pusha
dec
arpl
add
cmp
adc
xor
adc
xor
sub
pop
adc
adc
pop
fs
inc
ins
jno
push
jae
sbb
add
jno
jge
cs
cmp
das
pop
sub
adc
add
add
imul
xor
jne
pop
jnp
and
adc
jle
push
popa
or
cmp
cmp
aaa
pop
cmp
or
push
xor
jbe
ins
ins
jne
pop
popa
jge
push
addr16
pop
push
sbb
inc
pop
xor
aaa
xor
pop
cmp
push
cmp
dec
inc
inc
add
pop
push
jbe
sbb
jl
adc
or
push
cmp
sub
xor
jnp
pop
add
ss
packsswb
jno
imul
push
adc
jno
jnp
sbb
pop
add
sub
cmp
sub
cmp
dec
push
sbb
push
adc
adc
inc
jbe
ja
jo
add
ins
pop
pusha
jo
push
data16
push
adc
xor
jl
pop
sbb
push
or
jge
jbe
push
popa
push
add
pusha
add
jl
sbb
push
cmp
sub
das
xor
popa
push
sbb
add
adc
ja
pusha
jbe
data16
popa
jno
jo
or
adc
jno
jno
cmp
push
sub
sub
sbb
adc
add
outs
jp
ins
jg
adc
popaw
add
popa
add
xor
cmp
or
sbb
or
or
jno
popa
addr16
adc
push
add
sbb
jns
and
add
and
push
or
adc
sub
add
jno
jno
pop
jno
cmp
or
adc
adc
cmp
das
push
es
aaa
inc
sub
or
jo
jnp
fs
add
data16
jp
add
adc
pop
add
cmp
inc
das
pop
invd
pop
jo
jnp
fs
add
sub
jg
jo
pop
adc
jo
cmp
push
adc
and
push
cmp
pop
dec
or
adc
add
xor
and
adc
adc
jno
adc
add
push
xor
inc
aas
pop
pop
or
push
jnp
fs
add
jge
pop
adc
gs
adc
push
push
sbb
inc
cmp
or
add
push
adc
jl
adc
adc
xor
aaa
push
and
sub
pop
adc
jnp
fs
ja
push
ins
adc
dec
adc
adc
jl
adc
inc
adc
add
sub
pop
or
jo
jnp
or
and
adc
xor
adc
jbe
cs
adc
add
sbb
inc
cmp
or
jo
jnp
fs
add
outs
adc
sub
adc
jno
adc
add
push
and
aaa
inc
xor
or
jo
jnp
fs
add
adc
adc
pop
sbb
adc
adc
cmp
push
sub
sub
or
jo
jnp
data16
inc
add
jns
sub
adc
push
ss
aas
push
ds
xor
or
jo
jnp
or
push
adc
jg
adc
das
jno
adc
adc
cmp
push
bound
pop
jnp
and
jnp
fs
add
bound
data16
adc
cmovbe
adc
adc
das
push
xor
inc
cs
sbb
push
jo
jnp
fs
add
data16
jnp
add
js
inc
adc
sbb
push
and
dec
aaa
or
adc
push
pusha
jno
adc
adc
adc
aaa
jno
adc
add
push
xor
inc
js
push
or
add
or
adc
jno
adc
adc
jp
fs
adc
add
push
pop
jbe
xor
or
or
data16
popa
adc
adc
jl
jge
data16
add
push
xor
inc
push
pop
invd
pop
jo
jnp
arpl
add
bound
adc
ss
pop
add
es
xor
pop
or
inc
jo
jnp
adc
jae
xor
adc
adc
jno
adc
adc
cmp
push
jl
das
pop
or
or
add
daa
adc
jno
adc
adc
adc
sbb
push
cmp
inc
jg
adc
jnp
add
daa
adc
ss
adc
jno
adc
add
push
cmp
inc
das
pop
adc
push
jo
jnp
fs
add
push
adc
adc
pusha
adc
adc
xor
push
and
pop
push
or
jo
jnp
jg
add
push
pusha
jno
adc
adc
adc
sbb
fs
push
inc
sub
pop
or
or
fs
add
bound
adc
jno
adc
push
add
push
ds
jnp
sub
or
add
fs
add
adc
adc
adc
popa
adc
push
add
push
xor
inc
js
pop
or
jo
jnp
fs
add
ins
adc
jl
push
adc
adc
push
add
jo
cmp
pop
or
push
jo
jnp
fs
add
ins
adc
das
adc
pop
xor
adc
sbb
jg
push
inc
jle
cs
or
pop
jo
jnp
fs
add
adc
das
adc
adc
jge
arpl
adc
add
push
es
jle
pop
dec
pop
or
jo
jnp
fs
je
push
outs
adc
adc
adc
jge
xor
adc
add
js
jl
sub
or
add
inc
fs
add
jp
xor
adc
adc
jno
adc
sbb
push
sub
pop
sbb
or
fs
pusha
add
jno
adc
adc
jno
adc
adc
push
cmp
inc
ss
pop
or
jo
jnp
data16
add
outs
adc
bound
adc
jae
data16
adc
add
push
cs
sub
pop
jnp
xor
jnp
add
jo
jl
jge
add
adc
add
push
and
inc
jg
or
inc
jo
jnp
fs
add
ja
ins
jno
adc
adc
das
adc
push
add
push
jb
xor
pop
adc
add
jnp
fs
add
ins
adc
ss
adc
jno
adc
push
add
push
jb
xor
pop
pop
or
jo
jnp
fs
add
outs
adc
jno
adc
adc
jno
adc
push
add
cmp
or
jo
jnp
fs
add
bound
js
jns
jno
pop
jno
adc
adc
cs
cmp
inc
sub
or
jo
jnp
fs
jbe
add
adc
jl
inc
adc
jno
adc
push
add
push
xor
pop
aas
or
jo
jnp
fs
add
jne
jge
jno
adc
pop
jno
adc
jno
pusha
push
push
jb
inc
xor
pop
or
jo
jnp
fs
add
jle
aas
adc
jg
jbe
ja
add
inc
pop
ins
push
pop
inc
add
and
pop
jo
pop
xor
bound
ja
je
jne
pusha
adc
adc
inc
adc
add
push
xor
pop
jnp
or
sbb
add
outs
adc
adc
add
bound
adc
jno
adc
push
sub
pop
or
or
fs
add
data16
adc
jns
adc
inc
adc
add
inc
cmp
or
push
jnp
fs
push
adc
jle
sbb
adc
sbb
cs
xor
inc
xor
or
jo
jnp
fs
popa
add
data16
data16
adc
pusha
adc
add
xor
push
and
pop
pop
or
xor
or
push
js
jle
adc
dec
jno
adc
adc
das
push
aaa
push
ss
cmp
or
jo
jnp
fs
add
add
sub
adc
adc
adc
adc
dec
add
push
and
pop
inc
or
dec
jnp
fs
add
cmp
adc
adc
jno
adc
add
push
and
inc
gs
pop
or
push
jnp
fs
add
daa
adc
ss
adc
jno
adc
push
add
push
ja
push
pop
or
pop
jo
jnp
data16
add
add
jae
add
xor
adc
jno
push
push
jl
je
pop
or
jo
jnp
fs
add
daa
adc
jno
adc
add
jnp
js
ja
or
sub
push
xor
cmp
pop
pop
jo
jnp
fs
add
cmp
adc
adc
jne
data16
adc
add
ds
or
dec
jo
jnp
fs
add
jae
data16
adc
adc
jae
jns
je
sbb
cs
xor
inc
pop
or
ds
jnp
or
ins
adc
jge
adc
jno
ja
data16
adc
add
push
cmp
inc
cmp
jo
jnp
fs
add
bound
jbe
jae
add
jo
cmp
addr16
adc
add
aas
push
sub
pop
jnp
adc
jnp
add
outs
adc
jnp
sbb
adc
dec
add
push
pop
adc
daa
or
jo
jnp
or
outs
adc
jae
adc
adc
push
add
xor
or
jo
jnp
adc
bound
xor
adc
adc
jno
adc
add
sub
push
sub
pop
sub
sub
jnp
fs
add
push
adc
pop
adc
adc
xor
xor
or
inc
sbb
jo
jnp
fs
add
push
adc
xor
adc
jno
adc
add
push
cmp
inc
xor
jo
jnp
or
and
jnp
jle
sbb
adc
pop
add
push
push
jle
adc
or
fs
add
add
pusha
jno
adc
adc
adc
pop
jno
adc
add
inc
xor
sbb
push
jo
jnp
fs
push
add
adc
gs
adc
ja
dec
jno
adc
add
inc
xor
sbb
push
jo
jnp
or
data16
dec
adc
adc
adc
push
add
push
xor
inc
pop
pop
jnp
xor
jnp
add
outs
adc
jno
adc
adc
adc
pusha
adc
add
push
and
inc
pop
pop
adc
adc
or
and
pop
jno
adc
adc
adc
push
add
push
js
pop
push
or
jo
jnp
data16
ins
add
jae
add
data16
adc
adc
push
sbb
push
pop
jnp
and
jnp
fs
add
xor
es
or
jne
pop
jno
adc
add
and
or
jo
ins
xor
arpl
inc
add
popa
adc
adc
ja
ins
jno
or
add
push
xor
inc
cs
push
or
jo
jnp
fs
add
data16
push
jno
inc
jno
adc
push
add
push
and
cmp
or
jo
jnp
cmp
data16
jl
adc
js
ja
adc
inc
adc
add
cmp
or
jo
jnp
sub
pop
adc
adc
adc
gs
adc
push
xor
or
aaa
jnp
fs
imul
add
push
adc
adc
ja
jb
jge
or
inc
jbe
push
ss
das
pop
push
or
jo
jnp
adc
jnp
fs
adc
adc
ja
data16
pop
add
push
xor
inc
cmp
add
add
add
add
cmp
adc
add
bound
push
cmp
pop
push
or
push
jnp
fs
add
and
xor
xor
adc
jno
adc
add
push
and
inc
sub
or
push
jnp
fs
add
and
xor
xor
adc
jno
adc
and
push
push
jbe
js
jnp
pop
or
push
jnp
fs
add
and
xor
xor
adc
jno
cmp
xor
js
sbb
or
add
and
xor
xor
adc
jno
adc
sbb
push
and
aaa
inc
sub
or
pop
jo
jnp
fs
add
ja
adc
inc
adc
adc
popa
adc
add
es
push
pop
ja
sub
or
jo
jnp
fs
add
data16
jge
pop
adc
pusha
adc
push
add
inc
sub
or
cmp
adc
ins
adc
adc
adc
jp
popa
jno
adc
add
push
and
pop
inc
cmp
or
jo
jnp
imul
add
jae
jno
pop
jno
adc
adc
es
aas
push
xor
or
jo
push
add
pusha
adc
bound
adc
jno
adc
add
push
and
pop
add
push
jo
ins
xor
add
jne
jno
pusha
adc
adc
adc
xor
xor
push
xor
xor
or
jo
jnp
or
inc
adc
jae
sbb
jns
xor
push
add
jbe
js
jnp
pop
or
push
jnp
fs
add
add
inc
jno
adc
adc
ja
data16
adc
add
jbe
js
jnp
pop
or
push
jnp
fs
add
and
adc
push
adc
adc
jle
jge
jno
adc
ss
aas
push
aaa
inc
xor
jo
jnp
fs
add
cmp
xor
adc
pusha
adc
sbb
push
pop
pop
push
pop
sub
cmp
jp
gs
sub
xor
dec
adc
xor
xor
jno
sbb
add
push
das
push
sbb
pop
or
pop
jo
pop
ds
add
xchg
adc
xor
adc
fcom
inc
nop
pop
jp
push
jno
jp
gs
add
add
jo
adc
data16
jo
adc
repz
pop
popa
pop
pop
or
icebp
jno
jp
gs
add
add
ins
adc
inc
adc
bound
add
ds
ret
pop
inc
or
jno
jp
gs
jnp
movs
add
adc
adc
mov
jo
adc
leave
push
sahf
inc
pop
jge
or
jno
jp
gs
add
inc
adc
xchg
adc
jge
jge
inc
adc
rcl
sbb
pop
or
jno
jp
gs
add
add
adc
adc
jge
dec
jo
adc
repz
pop
dec
xor
jo
jnp
fs
add
adc
adc
sub
jo
adc
daa
push
or
pop
sbb
out
aaa
jp
gs
add
add
sbb
gs
adc
gs
jo
adc
add
inc
add
or
jo
pusha
push
les
add
adc
adc
jo
adc
je
and
pop
push
or
je
das
or
dec
adc
jo
add
je
pusha
adc
jno
ins
push
xor
inc
aaa
pop
jnp
pop
jo
jnp
fs
aaa
add
add
inc
adc
adc
ss
pop
add
push
cmp
inc
jg
or
sub
jnp
fs
add
push
adc
adc
jno
adc
add
das
pop
xor
or
and
inc
adc
data16
adc
ja
ja
addr16
add
push
cmp
inc
sbb
or
jo
jnp
fs
push
xor
ja
add
adc
push
add
inc
xor
adc
or
jnp
fs
add
add
pop
jno
adc
adc
jae
jo
adc
sub
add
push
sub
pop
or
das
jnp
adc
pop
adc
dec
adc
adc
adc
adc
add
cdq
pop
daa
pop
sub
ins
ja
jp
or
pop
push
sbb
hlt
clc
sbb
pop
cs
adc
add
push
push
pop
inc
dec
push
jl
ja
ins
jp
push
or
add
push
jns
adc
ja
push
imul
pop
push
dec
pop
jge
jo
jne
ja
outs
add
add
sbb
sbb
add
jns
pop
add
adc
push
pop
pop
bound
outs
or
jp
jge
popa
adc
sbb
adc
adc
adc
xor
add
inc
push
pop
push
dec
jnp
bound
gs
push
add
and
add
adc
inc
adc
adc
and
adc
inc
push
inc
adc
dec
sbb
ins
jbe
outs
jno
or
add
add
pop
adc
adc
jg
adc
jno
adc
push
push
pop
dec
push
push
jle
pusha
jno
jns
bound
or
arpl
jno
or
imul
pop
push
pop
push
dec
push
push
jne
ins
jle
jnp
push
add
add
sbb
sbb
adc
je
adc
je
adc
or
push
pop
dec
push
push
jge
popa
jle
jne
pusha
inc
add
or
and
adc
jg
sbb
jb
push
or
dec
and
imul
je
pop
add
jne
adc
add
push
ja
imul
or
push
pop
push
pop
pop
pop
jl
arpl
jnp
push
add
or
or
jno
or
adc
or
or
push
push
pop
push
dec
pop
pop
jns
push
ins
outs
or
pop
adc
or
or
adc
adc
sbb
add
inc
pop
pop
inc
pop
push
jae
fs
hlt
jmp
bound
add
add
add
mov
adc
arpl
aad
push
pop
dec
pop
pop
imul
xor
and
or
sbb
add
xor
jb
inc
push
push
ja
dec
push
push
pop
punpckhdq
data16
or
add
adc
xchg
fst
adc
mov
rol
push
push
dec
inc
push
jnp
imul
ins
jle
adc
or
pop
ins
pop
xor
icebp
call
inc
js
pop
push
jne
jp
jge
ins
je
test
xor
add
nop
or
push
adc
arpl
jne
push
inc
pop
push
push
pop
pshufw
adc
or
pop
jae
sbb
sbb
xor
xor
popa
or
pop
pop
js
dec
sbb
jl
imul
add
add
adc
push
xor
xor
adc
popa
sbb
dec
pop
dec
or
pop
or
xor
data16
sbb
adc
jns
sbb
add
xor
jns
dec
pop
jbe
dec
pop
inc
dec
xor
push
jne
jnp
pusha
sbb
add
pop
arpl
arpl
adc
or
inc
inc
jne
dec
push
dec
jnp
imul
ins
je
sbb
and
or
push
icebp
mov
sbb
ja
push
sbb
sbb
and
pop
dec
push
bound
imul
aam
imul
adc
arpl
jns
add
aad
pop
ins
pop
bound
sbb
dec
jp
jl
jae
xor
dec
push
or
inc
push
xor
xor
jns
add
push
push
jne
inc
sbb
sbb
jno
imul
or
sbb
add
xor
jns
inc
sbb
sbb
pop
push
pop
push
ja
inc
dec
or
je
arpl
and
add
or
pop
or
sbb
jns
add
jb
data16
inc
pop
pop
jp
bound
outs
jno
addr16
or
pop
sbb
push
jns
add
adc
add
add
adc
push
inc
push
inc
pop
pop
imul
jb
popa
add
push
adc
sbb
cmp
push
jg
add
jo
jno
sbb
inc
sbb
jns
xor
sub
jno
je
cs
outs
ins
pusha
jae
sbb
jno
push
jo
sbb
cmp
adc
adc
and
xor
sub
data16
addr16
popa
add
add
or
jo
add
adc
pop
add
adc
push
dec
pop
inc
push
pop
or
jne
arpl
add
jae
jno
inc
or
adc
cmp
jo
and
and
xor
xor
or
pop
pop
adc
pop
dec
push
imul
ja
xor
adc
popa
and
pusha
push
jno
sbb
ss
add
xor
add
adc
pop
inc
push
jae
addr16
dec
cmp
jae
ja
dec
dec
jno
inc
push
inc
inc
inc
inc
dec
pop
jg
arpl
jg
gs
add
add
pop
adc
pop
add
adc
ja
adc
push
push
pop
push
or
or
hlt
loop
inc
addr16
sbb
pop
adc
movups
adc
je
inc
push
push
inc
fsubr
pop
pop
imul
push
or
push
add
pusha
xchg
mov
xchg
mov
jg
inc
push
push
push
dec
ret
jnp
ins
ins
jp
fs
or
push
arpl
jno
pop
or
or
push
dec
push
push
pop
dec
inc
pop
jnp
pusha
ins
push
or
or
fmul
or
xor
jno
sbb
bound
pop
push
dec
pop
pop
jne
push
data16
retf
mov
add
xchg
pushf
pop
adc
add
pusha
xchg
icebp
jns
inc
push
pop
pop
dec
ret
jnp
jo
popf
imul
adc
jo
sbb
sbb
adc
or
push
jbe
pop
dec
dec
fcom
jne
inc
popa
or
sti
push
icebp
inc
icebp
jecxz
pusha
xchg
lods
sbb
xchg
lods
jns
ret
inc
fdivr
push
inc
jne
inc
jno
cli
jb
pusha
and
pop
adc
jae
sbb
adc
or
jae
adc
inc
inc
xlat
dec
push
dec
pop
pop
imul
lods
pop
add
adc
ins
sbb
jg
adc
jg
sbb
dec
push
xor
xor
cmp
push
jp
jo
pop
bound
add
add
sub
sbb
adc
xchg
xor
mov
pop
push
js
inc
pop
jne
addr16
imul
or
add
adc
arpl
adc
or
push
push
dec
pop
pop
pop
push
jne
addr16
js
jns
sbb
or
and
pop
xor
adc
je
xor
jns
inc
dec
push
dec
pop
dec
push
push
jnp
arpl
imul
or
or
arpl
ins
pop
or
jne
adc
add
push
push
push
inc
jnp
jp
popa
popa
jae
ins
jns
or
push
adc
sbb
push
xor
jno
sbb
bound
(bad)
add
mov
jle
pop
arpl
add
or
adc
jg
add
jae
adc
pop
sbb
inc
pop
pop
push
pop
inc
push
push
dec
cmovbe
ins
jbe
push
push
adc
sbb
ins
sbb
icebp
mov
sbb
xchg
fcomp
dec
pop
pop
pop
push
dec
push
push
jae
push
jp
jle
outs
or
pop
sbb
jns
adc
sbb
sbb
jnp
sbb
or
pop
pop
pop
push
dec
pop
js
or
jp
push
add
or
or
sbb
adc
pop
xchg
fcom
adc
pop
dec
pop
push
ja
pop
push
inc
js
gs
ins
push
pop
sub
or
jg
sbb
sbb
jb
sbb
and
(bad)
cli
push
dec
pop
pop
imul
add
sbb
or
xchg
fcomp
sbb
push
icebp
mov
push
pop
pop
dec
ret
pushw
push
jl
inc
fs
add
add
pop
push
jo
xchg
fst
pop
adc
or
(bad)
out
inc
pop
push
jne
ins
jle
jne
arpl
or
or
fadd
adc
sbb
and
ins
pop
sbb
aam
inc
fsubr
dec
pop
jno
ins
jle
dec
jle
push
test
add
sbb
jae
xchg
fadd
dec
push
inc
or
dec
sbb
jno
pop
outs
addr16
ins
push
or
jle
jnp
push
add
pop
jo
popa
adc
push
or
dec
push
inc
sub
pop
dec
sti
mov
jbe
imul
or
add
adc
pop
adc
sbb
jno
sbb
add
dec
push
push
inc
pop
pop
or
je
jno
jg
and
sbb
xchg
stc
adc
jns
sbb
add
push
pop
pop
push
dec
push
push
jae
addr16
cmc
bound
inc
add
adc
jo
xchg
in
or
pop
adc
add
xlat
into
inc
push
dec
pop
jl
jl
ins
jle
fs
sbb
xchg
mov
xor
xchg
mov
xor
imul
dec
ret
cli
pop
jnp
jp
jo
bound
push
and
or
add
or
sbb
je
adc
sbb
push
adc
or
push
push
push
pop
pop
pop
js
push
jl
addr16
or
or
add
sbb
adc
adc
jg
sbb
pop
dec
pop
pop
pop
push
dec
inc
push
jae
jo
jnp
ins
ins
ins
sbb
or
or
sbb
pop
pop
jo
xchg
test
arpl
dec
ret
ret
xchg
jo
in
jle
gs
xor
sbb
inc
sbb
je
adc
jbe
push
inc
adc
push
push
push
dec
dec
fsub
sbb
shl
arpl
or
add
cmp
add
sub
jno
pop
add
or
dec
push
push
inc
dec
push
dec
push
add
fnstsw
ins
addr16
add
or
adc
inc
addr16
pop
jnp
inc
cmp
xor
sub
xor
das
pusha
adc
add
bound
add
sub
adc
adc
add
and
cmp
inc
and
dec
fs
add
push
push
adc
nop
adc
adc
jno
(bad)
push
push
pop
bound
jnp
bound
jnp
fs
add
adc
nop
adc
adc
jno
inc
push
or
xor
and
inc
add
sbb
pop
add
sub
js
adc
adc
push
adc
jno
inc
push
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
sbb
adc
adc
jno
adc
add
push
push
push
or
je
arpl
add
add
adc
adc
jno
push
jno
inc
push
push
push
pop
inc
pop
pop
mov
push
jo
jnp
fs
add
inc
adc
adc
pop
adc
aas
add
pop
pop
(bad)
or
mov
fs
add
push
jno
adc
adc
jno
adc
jno
inc
push
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
inc
add
inc
adc
adc
push
adc
adc
or
push
ds
xor
jnp
bound
jnp
fs
jno
bound
jp
popa
adc
adc
adc
pop
add
push
push
pop
inc
jmp
push
or
jne
xor
jbe
push
ins
adc
push
adc
adc
ja
pop
jno
adc
add
inc
pop
pop
jp
push
jo
jnp
fs
add
popa
adc
adc
adc
sbb
das
push
xor
inc
das
pop
or
bound
jnp
fs
add
add
inc
jno
adc
adc
jge
jns
bound
add
cmp
or
jo
jnp
fs
add
xor
adc
push
add
push
cmp
inc
xor
or
jo
jnp
fs
add
add
and
adc
adc
jnp
js
ja
xor
push
cmp
pop
adc
adc
jnp
or
add
inc
jno
adc
adc
ja
adc
and
add
adc
inc
aaa
pop
push
or
adc
fs
add
adc
adc
jno
adc
pop
add
push
push
fs
push
pop
jp
sub
jnp
add
bound
js
pop
adc
adc
ja
adc
inc
adc
add
push
and
inc
sub
or
jo
jnp
add
add
cmp
adc
adc
ja
jae
jae
sbb
push
sub
pop
or
or
jnp
adc
add
push
jno
adc
adc
pusha
adc
sbb
sub
aaa
push
xor
sbb
jo
jnp
fs
add
add
inc
jno
adc
adc
ja
data16
adc
add
inc
and
or
inc
jnp
fs
ins
adc
addr16
adc
inc
adc
add
sub
push
ss
pop
pop
dec
or
jnp
fs
add
add
sub
sbb
adc
adc
sbb
and
push
and
pop
sub
jnp
fs
imul
add
cmp
inc
adc
jno
adc
jno
inc
push
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
test
add
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
jno
adc
add
push
push
pop
inc
pop
pop
jnp
bound
jnp
fs
add
adc
adc
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
xor
add
xor
add
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
and
