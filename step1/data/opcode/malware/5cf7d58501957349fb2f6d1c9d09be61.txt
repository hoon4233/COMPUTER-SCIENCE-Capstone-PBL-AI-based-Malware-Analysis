nop
sahf
pop
add
add
add
add
add
add
add
and
add
add
add
add
cmp
add
and
add
sub
add
xor
add
add
add
add
adc
add
jo
pop
add
jo
adc
or
push
jb
add
jo
push
pop
jb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
ja
add
push
sbb
jo
push
push
jb
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
jo
push
pop
push
jb
add
jo
push
pop
(bad)
xchg
add
push
pop
adc
add
jo
push
pop
adc
add
jo
push
pop
adc
add
jo
push
sub
add
push
add
lea
add
add
pop
push
add
add
add
mov
pop
add
jo
lea
add
add
push
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
jb
add
jo
or
push
add
push
sub
add
push
movs
add
add
mov
add
add
add
je
add
sbb
push
sub
add
xor
add
add
adc
lea
add
add
jb
add
jo
fild
add
pop
lea
add
add
or
or
sbb
adc
push
add
push
es
add
jo
lea
add
add
or
sub
add
adc
add
cmps
add
jo
push
lea
add
add
push
add
push
mov
add
push
or
add
jo
rol
add
pop
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
push
je
add
sbb
out
add
rol
add
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
push
je
add
sbb
jo
rol
add
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
push
je
add
sbb
add
adc
add
jo
rol
add
pop
lea
add
add
adc
adc
jb
add
jo
rol
add
pop
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
push
adc
sub
add
push
or
add
adc
mov
jo
lea
add
add
or
add
adc
adc
jb
add
jo
sub
add
adc
jb
add
jo
add
or
add
adc
sub
add
push
adc
adc
push
sub
add
push
or
add
jo
dec
add
jo
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
add
jo
or
adc
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jb
add
jo
adc
jo
adc
jb
add
jo
adc
or
add
jo
adc
push
add
push
sub
add
push
je
add
add
or
add
jo
sbb
add
add
adc
add
jo
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
add
jo
adc
push
jb
add
jo
or
lea
add
add
push
adc
pop
add
adc
add
mov
add
push
ficom
adc
adc
sub
add
push
sub
add
push
fiadd
sub
add
inc
sbb
add
add
outs
add
add
add
add
add
add
sub
add
xchg
add
jo
repz
jo
push
lea
add
add
push
add
push
sub
sub
add
sub
add
xor
add
add
add
add
adc
add
jo
adc
or
push
jb
add
jo
push
pop
jb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
add
jo
push
sbb
ins
add
jo
push
sbb
jo
push
push
jb
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
add
jo
push
pop
or
jo
push
pop
push
jb
add
jo
push
pop
(bad)
arpl
add
push
sub
add
push
jb
add
jo
push
lea
add
add
pop
push
jb
add
jo
pop
pop
jb
add
jo
pop
sbb
add
jo
pop
sbb
add
jo
pop
sbb
add
jo
pop
sbb
add
jo
pop
sbb
add
sbb
jo
pop
push
jb
add
jo
pop
pop
or
add
jo
pop
pop
or
add
jo
pop
pop
or
add
jo
pop
pop
or
pop
add
pop
pop
or
jo
pop
sub
add
push
adc
lea
add
add
push
add
sbb
add
mov
or
push
add
push
sub
add
xor
add
add
add
add
add
sbb
add
or
add
sbb
add
or
add
sbb
add
sub
sub
add
xor
sbb
add
add
add
add
sbb
add
or
add
sbb
add
or
add
sub
add
add
sub
add
xor
add
add
sub
add
push
or
sub
add
push
or
adc
adc
adc
pop
add
jo
or
add
je
add
add
sub
add
push
sub
or
push
or
add
add
adc
xor
adc
or
add
add
add
xor
or
add
add
add
push
sub
add
sub
add
sub
add
xor
add
add
push
add
adc
add
adc
add
add
pop
lea
add
add
pop
push
adc
sub
add
or
add
cmp
add
pop
add
adc
mov
mov
lea
add
add
push
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
push
sub
add
add
add
add
sub
add
sub
add
add
add
add
or
push
add
pop
add
or
push
add
or
add
sub
add
add
or
and
add
add
or
add
add
add
add
or
add
sub
add
add
add
outs
or
add
sub
push
add
add
or
and
add
push
add
or
add
add
add
add
sldt
or
add
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
je
or
fdivr
cld
test
add
mov
inc
fwait
bound
int
add
in
mov
mov
push
js
in
(bad)
leave
fisub
(bad)
sti
fiadd
clc
jecxz
cdq
ins
repz
jl
not
jnp
push
push
loope
loopne
out
jo
sbb
fst
mov
pop
stos
mov
rcr
adc
std
jo
push
outs
push
std
jns
ficomp
hlt
push
add
je
add
rol
add
add
cmps
add
add
add
test
add
ins
add
add
add
xchg
add
add
cmc
add
add
add
inc
pop
add
add
add
push
add
cmc
add
add
add
jecxz
add
fild
add
mov
add
popa
or
add
add
add
add
add
or
add
add
in
add
mov
or
add
add
add
add
dec
adc
dec
pop
dec
ds
sub
dec
push
dec
das
dec
jp
dec
dec
dec
dec
cmp
dec
dec
dec
and
dec
add
popa
dec
sub
dec
jl
push
dec
inc
dec
and
add
add
dec
jge
and
dec
sbb
dec
push
dec
push
push
dec
addr16
dec
dec
ins
dec
push
dec
push
dec
push
dec
pop
dec
and
dec
add
dec
adc
dec
xor
dec
pop
dec
jae
js
jae
adc
dec
outs
dec
sbb
dec
jns
inc
dec
imul
or
dec
pop
dec
inc
dec
cmp
dec
ins
dec
xor
es
dec
dec
push
dec
cmp
dec
cs
dec
dec
pop
dec
and
dec
inc
dec
ds
imul
or
dec
bound
dec
inc
dec
and
dec
push
xor
adc
add
add
push
dec
pop
dec
push
dec
adc
dec
adc
dec
push
dec
pop
dec
jp
jbe
addr16
cmp
dec
jbe
dec
dec
adc
dec
pop
dec
add
dec
push
dec
je
add
dec
adc
dec
adc
dec
adc
dec
inc
dec
jge
pop
dec
addr16
push
dec
dec
dec
pop
dec
inc
dec
sbb
dec
or
dec
ja
je
add
dec
inc
dec
or
dec
dec
dec
inc
dec
and
pusha
dec
cs
or
dec
jnp
aaa
dec
dec
dec
adc
inc
add
adc
dec
and
dec
pop
dec
or
dec
jne
jl
xor
dec
and
pop
dec
xor
dec
dec
dec
xor
dec
inc
dec
xor
dec
adc
dec
cmp
dec
add
addr16
jbe
push
inc
add
dec
dec
dec
dec
dec
jb
push
dec
dec
dec
jne
dec
or
dec
pop
dec
pop
dec
inc
dec
ds
dec
dec
jl
inc
dec
gs
jbe
pop
dec
sbb
dec
cs
push
dec
add
dec
sub
dec
or
dec
xor
dec
inc
dec
jg
dec
dec
pop
sub
dec
and
dec
add
dec
cmp
dec
sbb
dec
xor
dec
jb
push
dec
bound
dec
dec
jl
jo
dec
dec
add
dec
dec
dec
pop
dec
jl
sub
pop
dec
inc
dec
jns
add
xor
dec
sbb
dec
jno
xor
dec
pop
dec
jne
pop
dec
je
dec
dec
xor
dec
cmp
jne
dec
dec
sub
dec
dec
dec
sub
dec
mov
and
dec
or
dec
pop
dec
xor
dec
bound
dec
or
dec
cmp
dec
sub
jl
push
dec
push
dec
arpl
dec
sub
dec
inc
dec
dec
dec
jbe
sbb
dec
dec
dec
add
dec
push
dec
cmp
xlat
add
xor
dec
bound
dec
dec
dec
jo
dec
dec
ins
dec
arpl
dec
jno
adc
dec
adc
dec
sbb
dec
jbe
jae
pop
dec
adc
dec
jbe
jo
xor
jecxz
add
inc
dec
sub
dec
xor
dec
arpl
dec
add
push
dec
dec
dec
sbb
dec
and
dec
jge
dec
dec
aaa
dec
sbb
xor
dec
add
dec
dec
push
dec
add
dec
sub
and
dec
ds
add
sbb
add
dec
or
addr16
popa
dec
and
dec
adc
or
inc
dec
jo
ja
cmp
dec
arpl
dec
xor
dec
add
dec
ss
pop
dec
inc
dec
add
dec
pop
dec
inc
dec
sbb
dec
addr16
aas
dec
shl
add
dec
sub
dec
jl
add
dec
dec
dec
jl
and
dec
pusha
dec
and
dec
sub
dec
add
sbb
dec
jno
bound
dec
popa
dec
and
dec
or
pushf
add
cmp
dec
cs
cmp
dec
jns
add
dec
and
jo
jo
push
dec
sub
dec
or
dec
adc
dec
cs
cmp
xor
dec
dec
cmp
dec
inc
dec
ss
pop
dec
in
add
dec
inc
dec
jb
sub
dec
jne
jns
js
and
dec
pop
dec
push
dec
xor
dec
sub
dec
add
dec
push
sub
ja
pop
dec
pop
dec
jle
pop
dec
pop
dec
push
dec
and
dec
pop
dec
pop
dec
jge
cmovle
jb
inc
dec
jns
sbb
std
add
xor
or
dec
and
dec
add
dec
push
dec
xor
dec
adc
dec
pop
dec
pop
dec
ss
push
dec
push
dec
dec
dec
sbb
dec
jg
fwait
xor
add
dec
dec
push
dec
xor
dec
xor
dec
jge
dec
dec
adc
dec
push
dec
push
dec
xor
dec
cs
inc
dec
adc
sub
dec
bound
dec
aaa
dec
add
dec
add
jns
add
or
dec
push
adc
dec
jle
inc
dec
outs
dec
cs
jge
dec
dec
push
dec
sbb
fs
outs
dec
daa
dec
cmovle
je
and
adc
dec
or
dec
jne
daa
dec
and
dec
push
dec
and
dec
adc
add
sub
dec
pop
dec
dec
dec
sbb
dec
sub
push
dec
push
ins
dec
aaa
dec
cmp
dec
jnp
push
dec
cs
xor
dec
add
dec
pop
dec
and
push
dec
adc
dec
dec
dec
and
dec
pop
dec
pop
dec
adc
dec
cs
jno
and
dec
sbb
dec
add
jne
imul
cmp
dec
dec
dec
cmp
jns
push
dec
retf
xor
cs
dec
push
dec
inc
dec
cmp
dec
xor
dec
cmp
dec
pop
dec
jns
dec
dec
add
dec
pop
dec
add
dec
cmovle
dec
xor
dec
jb
pop
jne
add
jb
pop
dec
pop
dec
push
dec
and
outs
dec
js
inc
dec
jl
ins
dec
pop
dec
pusha
dec
adc
dec
sub
dec
sub
dec
inc
dec
cmp
dec
sub
dec
xor
dec
inc
dec
inc
dec
jp
dec
dec
adc
dec
ja
sbb
dec
inc
dec
and
lods
add
xor
daa
dec
adc
dec
pop
dec
push
dec
xor
dec
pusha
dec
add
dec
popa
dec
inc
dec
aaa
dec
sbb
dec
sub
dec
jnp
jbe
add
dec
pusha
dec
add
aad
add
dec
sub
dec
dec
dec
js
adc
dec
sub
dec
jbe
fs
cmp
dec
push
dec
jl
pop
dec
dec
dec
jge
sub
dec
cmp
dec
push
pop
add
imul
dec
jp
bound
dec
cmp
dec
inc
dec
sub
dec
dec
or
dec
das
dec
jae
push
dec
bound
dec
arpl
dec
gs
jge
ds
imul
adc
dec
ins
dec
inc
xor
jnp
dec
ja
ds
pop
dec
pop
dec
add
dec
fs
addr16
add
dec
dec
dec
jle
or
xor
dec
jnp
add
inc
dec
jp
add
dec
bound
dec
addr16
push
dec
and
dec
es
and
dec
add
dec
ds
and
dec
dec
dec
push
dec
cmp
add
dec
cmovle
push
dec
jle
and
dec
and
dec
ins
dec
fs
pop
dec
imul
sbb
dec
sub
dec
aas
dec
and
dec
cmp
dec
pop
dec
addr16
sbb
inc
dec
pop
dec
push
cmp
dec
sub
dec
adc
cld
out
add
dec
cmp
dec
pop
dec
imul
dec
aaa
dec
inc
dec
imul
dec
dec
outs
dec
bound
dec
cs
inc
dec
and
dec
inc
adc
add
dec
add
dec
or
dec
pusha
dec
jbe
sub
dec
ins
dec
pusha
dec
imul
pop
dec
sbb
dec
push
dec
inc
dec
xor
dec
cmp
dec
pop
dec
sub
dec
jae
add
dec
pop
dec
push
dec
je
dec
dec
sub
dec
adc
dec
inc
dec
push
add
dec
aaa
dec
adc
dec
je
sub
dec
inc
dec
and
dec
add
pop
dec
dec
dec
aas
dec
dec
dec
add
dec
add
dec
pop
dec
jns
inc
dec
adc
dec
adc
dec
adc
dec
ins
dec
addr16
or
dec
pusha
dec
inc
dec
sub
test
dec
add
dec
or
dec
or
dec
push
dec
push
dec
pusha
dec
popa
dec
push
dec
dec
dec
push
dec
dec
dec
das
dec
pop
dec
sbb
dec
add
dec
jge
jl
xor
cmp
push
dec
daa
dec
jae
or
dec
inc
dec
ins
dec
sub
dec
adc
dec
sbb
dec
sub
adc
dec
gs
xor
dec
jg
push
dec
push
dec
jb
push
dec
ss
inc
dec
aas
dec
imul
dec
dec
dec
push
add
daa
dec
sbb
popa
dec
pop
dec
jp
js
xor
adc
dec
push
dec
xor
dec
and
dec
or
sti
push
add
jge
xor
dec
imul
sbb
xor
dec
cmovle
dec
ja
arpl
dec
xor
dec
jp
cmovle
dec
dec
dec
jb
pop
dec
sbb
dec
push
dec
sbb
xor
dec
pop
dec
jmp
pop
add
iret
dec
add
int
arpl
dec
ret
dec
(bad)
sbb
inc
cld
arpl
mov
inc
dec
cmp
shl
retf
or
dec
jno
push
fidiv
std
repnz
scas
fsubrp
into
lods
push
in
pop
push
loop
dec
shl
test
icebp
enter
arpl
xchg
dec
mov
(bad)
cld
aaa
test
or
mov
or
fdivr
or
or
jle
inc
jno
sbb
pop
or
or
dec
pop
jle
pusha
mov
shl
pop
mov
sbb
inc
mov
add
daa
mov
stos
cmps
mov
dec
or
jmp
(bad)
sub
in
mov
(bad)
mov
shl
push
xor
sbb
push
cs
jle
gs
repnz
jne
dec
mov
imul
jp
inc
mov
push
scas
mov
sbb
mov
sbb
pop
mov
add
mov
pop
int
lahf
xor
jno
hlt
push
sti
or
adc
and
sar
mov
push
jne
xchg
or
aas
int3
push
push
and
and
test
movs
or
test
mov
push
das
adc
and
ret
cwde
xor
out
jb
in
ret
mov
sbb
out
das
(bad)
jmp
popf
sub
mov
jl
inc
add
push
hlt
xchg
lahf
jae
mov
fild
outs
pop
leave
push
test
fs
pop
lahf
mov
ret
pop
mov
mov
imul
cld
in
retf
sti
pop
dec
je
xchg
loop
mov
mov
push
mov
add
std
xchg
inc
push
ror
mov
(bad)
xchg
imul
shr
lds
cmp
scas
sbb
push
pop
clc
addr16
add
dec
out
pop
jo
adc
xor
test
mov
jle
push
add
jle
sbb
mov
fsubr
jl
(bad)
mov
pop
std
xchg
jnp
inc
sub
dec
dec
push
nop
mov
and
jo
nop
sub
xor
push
int
add
jo
dec
or
cmc
mov
adc
sti
repnz
dec
call
push
xor
dec
ins
mov
or
(bad)
fstp
cmps
pop
xchg
or
pop
jne
fld
and
icebp
nop
bound
xchg
ins
sbb
push
mov
stos
(bad)
jge
pop
cmp
adc
mov
popa
mov
xchg
cmp
or
dec
rol
mov
stos
rcl
xchg
movs
jmp
mov
dec
hlt
mov
and
or
sbb
cmp
jge
xor
lds
mov
retf
data16
ret
cmp
xchg
sti
mov
push
or
push
push
in
mov
loopne
xor
fwait
bound
and
aas
jp
sbb
sub
mov
pop
or
out
push
pop
in
shl
enter
mov
mov
xchg
iret
xchg
mov
sub
ins
mov
dec
push
add
pop
sbb
dec
jle
cdq
push
aaa
adc
xor
mov
movs
inc
or
cmp
inc
aas
sbb
popf
cmps
mov
add
mov
mov
loopne
enter
fwait
lahf
mov
jne
retf
movs
cmp
not
or
mov
or
loop
jecxz
enter
jmp
pop
push
mov
(bad)
sub
sti
sbb
and
mov
or
loopne
xchg
inc
mov
mov
cmp
jno
push
push
add
adc
push
dec
lods
jns
pop
add
mov
inc
psrlq
or
popa
ror
imul
(bad)
jp
repnz
imul
inc
push
mov
stos
xchg
arpl
pop
mov
add
cmps
inc
mov
aam
out
push
arpl
jo
push
or
call
test
cmps
add
stos
out
sbb
repz
inc
adc
dec
das
jno
push
sub
or
pusha
popf
retf
not
aam
mov
mov
sbb
ss
sbb
cli
sbb
imul
mov
sahf
xor
in
(bad)
(bad)
in
ins
adc
push
ss
push
push
jbe
push
sbb
jmp
sar
lock
popa
test
cwde
xor
sub
push
mov
idiv
mov
pop
xchg
sub
cmp
and
pop
iret
jo
sub
or
(bad)
pop
mov
jp
int
jge
hlt
ins
stos
cdq
cs
inc
(bad)
lods
lock
psllq
ins
icebp
inc
test
lahf
xchg
ret
not
jmp
aas
hlt
ror
pop
clc
jg
js
gs
mov
cmps
loope
inc
lods
lds
add
xor
mov
dec
push
movlhps
hlt
xchg
mov
bound
jne
pop
sbb
sub
call
dec
cmp
arpl
cmp
jl
ins
ret
push
adc
mov
mov
sub
cmps
and
mov
enter
xor
cmc
test
adc
mov
mov
clc
xor
(bad)
(bad)
or
stc
sbb
loop
jns
aad
dec
push
ja
stos
dec
push
push
ret
test
push
mov
mov
mov
loopne
(bad)
mov
add
jo
push
push
imul
jno
ja
dec
popa
rol
pop
cmps
pop
leave
outs
mov
xchg
call
scas
jo
xchg
pushf
out
pop
mov
jbe
adc
clc
mov
and
xor
dec
rcr
cdq
cmps
(bad)
ffree
out
int
loope
stc
dec
das
neg
xor
stc
fdivr
mov
lods
pop
dec
xchg
inc
xor
jp
iret
movs
adc
popa
inc
push
loopne
stc
das
pop
mov
mov
pop
gs
dec
adc
cmp
in
mov
push
neg
jg
(bad)
fwait
rol
mov
addr16
cmp
or
inc
arpl
xor
jle
push
adc
imul
mov
rol
jmp
scas
sub
cld
aad
cdq
ins
test
clc
cmp
clc
cmp
xor
or
xchg
loopne
popf
les
sbb
rcr
lds
sbb
arpl
adc
add
nop
test
ins
int3
arpl
retf
xchg
test
inc
add
xchg
mul
ins
add
sbb
shr
pop
cmp
mov
sbb
out
popf
mov
fisubr
xor
add
mov
pop
(bad)
jp
cwde
mov
sbb
pop
cmps
mov
pop
cmps
push
mov
out
cmp
scas
sti
xor
xor
and
aaa
adc
fld
xchg
(bad)
clc
or
push
sbb
cdq
fwait
xchg
fld
xor
jb
dec
aaa
pop
cwde
int
lock
cmp
mov
pusha
cmp
(bad)
mov
or
cmp
pop
adc
pop
out
call
add
fcomip
lods
div
xor
jmp
push
out
(bad)
mov
add
sbb
sti
popa
mov
push
and
xchg
test
mov
lea
addr16
xlat
inc
sbb
xchg
leave
fwait
dec
scas
jge
xchg
or
iret
xchg
add
and
lock
cmp
adc
xchg
dec
lahf
mov
adc
xchg
sub
ret
into
xor
or
xchg
dec
push
test
gs
aas
repnz
inc
mov
arpl
aaa
(bad)
jns
ror
xchg
fdiv
mov
jo
fisubr
hlt
call
mov
lea
lods
mov
cmp
jge
cmps
retf
pop
pop
sbb
ror
scas
jne
cmp
lea
add
bound
loopne
xor
jo
sbb
cmp
jb
push
mov
pop
call
ret
repz
into
mov
aam
test
std
push
pusha
sbb
shl
cdq
fwait
inc
(bad)
mov
sbb
or
jbe
jns
paddsb
mov
bound
test
mov
push
sbb
or
sbb
and
push
xor
jg
jl
loopne
popa
sahf
push
(bad)
dec
dec
mov
sbb
lea
sbb
ins
xor
dec
or
pop
hlt
sbb
sbb
sub
idiv
stos
mov
mov
inc
ins
mov
retf
imul
loope
dec
xchg
mov
enter
div
sub
mov
pop
cmp
rcl
leave
mov
dec
inc
test
int
jmp
mov
mov
lock
lds
ins
cmp
sub
or
push
addr16
jb
mov
loop
(bad)
mov
mov
je
add
test
ins
xchg
add
call
sti
or
mov
stos
push
addr16
jg
inc
aad
mov
push
sub
pop
mov
add
cmp
ret
jns
gs
loope
sbb
ret
xor
fistp
inc
inc
add
imul
mov
aaa
dec
push
in
mov
push
jmp
ins
hlt
sub
cli
mov
popa
xchg
xor
daa
jp
call
mov
loop
sub
sub
out
mov
lods
pop
iret
adc
xlat
and
xor
add
test
xchg
int3
push
(bad)
jnp
out
add
das
inc
scas
push
dec
add
xor
test
jbe
out
out
add
mov
add
daa
mov
shl
mov
shr
xchg
push
idiv
mov
shr
dec
sar
fstp
sub
adc
test
xor
mov
or
mov
xchg
aas
jp
aas
mov
inc
test
jle
add
push
fidiv
xchg
mov
sbb
addr16
call
ins
jb
fnstenv
xchg
sbb
sti
push
(bad)
xchg
rcr
sbb
pusha
dec
jbe
add
sub
push
test
pop
pop
and
jg
shl
out
jecxz
xchg
push
jmp
and
mov
outs
fcom
lahf
sub
or
lock
pop
and
and
jo
or
inc
in
jmp
inc
jge
call
mov
mov
adc
imul
in
xor
inc
loop
pop
out
push
or
lock
pop
push
dec
neg
xlat
imul
sbb
(bad)
jle
scas
sub
mov
pop
jecxz
fist
sub
pop
xor
test
pop
int3
and
or
push
jmp
cmps
mov
enter
js
in
jmp
retf
out
cs
mov
jp
mov
js
pop
outs
out
push
sbb
test
es
add
dec
bound
fcomp
jbe
fbstp
mov
xor
jo
cmps
inc
out
dec
xor
into
dec
sbb
popf
sub
mov
out
mov
gs
cmp
test
and
fistp
push
mov
add
test
push
ja
cmp
bound
jmp
fadd
icebp
shl
(bad)
inc
inc
pop
fisub
test
jg
push
pop
mov
ja
cmps
pop
push
test
mov
mov
mov
cli
mov
mov
mov
inc
jecxz
push
popf
adc
cmp
punpcklbw
bnd
mov
dec
inc
in
imul
dec
movs
mov
ins
mov
(bad)
hlt
rcr
inc
je
fistp
retf
mov
loop
jns
sub
daa
out
addr16
xchg
sbb
xchg
xchg
push
(bad)
(bad)
ins
lahf
(bad)
out
ror
pop
dec
sbb
test
xor
jmp
or
xor
fidiv
sbb
xchg
adc
je
add
stos
repz
rcr
(bad)
xchg
mov
mov
jp
cmps
mov
jecxz
or
cmps
sahf
jge
push
sahf
ror
sub
(bad)
inc
push
loopne
out
dec
dec
test
jo
inc
data16
jne
mov
out
jno
call
je
jecxz
pop
retf
scas
mov
call
or
xlat
cmp
xor
pop
pop
loopne
xchg
(bad)
push
jle
sbb
fdivr
mov
and
jmp
popf
shr
push
mov
popa
(bad)
xchg
push
pop
jbe
pop
stc
sub
out
inc
in
xor
jmp
xchg
int3
pushf
ret
inc
dec
repnz
lock
out
movs
dec
pop
xchg
sub
or
jmp
hlt
aad
out
loope
sub
mov
inc
xor
fcom
jp
test
pop
js
push
pop
pushf
inc
leave
push
jns
lods
jmp
ja
or
jns
pop
xchg
inc
dec
mov
pop
xlat
dec
jmp
inc
aad
lods
adc
sub
xchg
gs
push
popa
or
inc
repnz
xchg
test
inc
mov
dec
rol
dec
mov
cmp
fwait
xor
xor
adc
pop
aaa
(bad)
out
rcr
cwde
dec
ficomp
pop
or
enter
inc
mov
mov
xor
pop
mov
movs
or
pop
cmps
jns
movs
xor
sbb
ins
outs
jb
xor
jg
(bad)
jmp
rep
sbb
xchg
rol
xchg
or
push
mov
jg
stos
pop
dec
dec
mov
push
cmp
inc
out
(bad)
in
ss
xchg
or
add
sbb
in
cmp
sbb
aam
adc
jecxz
stos
dec
add
aaa
retf
into
addr16
jle
aad
inc
leave
mov
aam
push
ret
ret
jne
(bad)
or
xchg
xchg
sub
cli
mov
sbb
int3
cmp
div
sbb
bound
pop
cmp
mov
cli
dec
pop
and
or
inc
(bad)
add
mov
inc
xchg
and
sub
into
and
xor
aas
das
adc
mov
retf
adc
and
gs
pop
pop
dec
adc
mov
cmp
mov
mov
add
xor
fsub
mov
lock
dec
xor
pusha
xchg
xchg
mov
fild
and
jmp
add
mov
cmps
add
(bad)
sti
dec
lea
adc
mov
xchg
shl
xchg
sbb
xchg
sub
test
fnstsw
cmps
mov
icebp
adc
sbb
movs
inc
aad
mov
int3
stos
popa
sub
dec
inc
mov
fisttp
add
jmp
into
push
gs
(bad)
hlt
inc
inc
repz
xor
or
xchg
xchg
cmc
and
jns
into
loopne
inc
push
outs
out
int
cmps
int3
cmp
ins
in
sti
mov
outs
test
scas
gs
adc
push
jne
and
jns
lea
fild
pop
cmp
stc
fisttp
fcom
jb
pop
inc
and
out
cld
aam
rcl
dec
inc
inc
sub
into
sbb
and
mov
cmps
int
lds
shr
cwde
dec
and
push
mov
div
xlat
pop
(bad)
add
jle
jno
or
(bad)
jge
add
fmul
jmp
xor
adc
mov
push
dec
out
xor
aas
xchg
mov
aaa
fsubr
cs
sub
sbb
(bad)
xchg
(bad)
bound
into
bound
repnz
scas
pop
jae
cld
mov
adc
inc
leave
shl
add
mov
mov
fcmovnu
cmp
pop
cmp
in
dec
inc
std
popa
and
mov
xchg
int
or
daa
nop
rcl
imul
adc
ret
mov
std
test
loope
retf
movs
mov
dec
xchg
das
das
loopne
add
jbe
sbb
or
sub
xchg
jle
(bad)
sar
arpl
adc
fiadd
and
or
jge
xchg
jmp
test
pop
xchg
mov
in
mov
add
int
js
or
mov
shr
lahf
add
ror
mov
in
or
mov
mov
cmp
jbe
rcr
mov
push
xor
repnz
dec
mov
add
xchg
pusha
cmc
imul
mov
mov
adc
mov
repz
xchg
shr
mov
xchg
int3
repz
jbe
test
test
movs
in
out
dec
xor
xor
jns
push
sub
mov
sahf
adc
ins
loopne
inc
push
sbb
icebp
ficomp
mov
(bad)
loop
fisub
movs
in
jg
and
pop
sti
ret
push
fcom
cmp
movs
sbb
or
(bad)
cmp
xchg
test
test
add
cmc
outs
aaa
sbb
aaa
jbe
xor
dec
xor
dec
or
clc
dec
mov
mov
lods
mov
fisub
shl
mov
sbb
nop
xchg
bound
int3
cmp
mov
into
sahf
sub
fmulp
scas
out
ins
das
pop
jmp
dec
xchg
je
add
mov
outs
fsubr
push
stos
popf
or
adc
and
add
add
or
icebp
jo
jno
les
xor
mov
mov
xor
fadd
inc
xchg
fdivr
or
mov
pop
lock
add
inc
ds
fadd
cmc
into
or
add
mov
fdivr
out
inc
cwde
push
inc
adc
in
push
cmp
inc
sbb
jg
sbb
sti
add
push
(bad)
loop
jmp
jae
cli
mov
data16
pop
adc
push
ficom
push
mov
cmp
icebp
fdiv
mov
imul
rcl
adc
imul
mov
mov
jnp
pop
dec
push
adc
dec
mov
and
pop
jae
int
sub
fwait
add
int3
jns
dec
call
adc
(bad)
sahf
cmps
es
imul
adc
mov
rcr
or
pop
dec
arpl
xchg
mov
dec
mov
nop
and
int3
adc
(bad)
dec
dec
pop
stos
and
popf
imul
into
pushf
or
jp
mov
pop
push
ins
imul
(bad)
push
push
mov
adc
out
out
xor
in
cdq
sub
xor
or
mov
xchg
cmp
lods
shl
rcr
in
popa
call
sbb
mov
cdq
mov
fs
retf
fdivr
mov
sub
or
ret
or
mov
shr
je
jo
fadd
repz
jg
sahf
fisub
lds
mov
cwde
sahf
aam
pop
mov
loopne
(bad)
add
pop
rcl
inc
inc
xor
push
lea
mov
mov
loop
test
inc
xchg
or
bound
pusha
mov
sbb
dec
ret
and
jno
cmp
outs
mov
jns
xor
(bad)
mov
addr16
stc
(bad)
mov
jb
adc
dec
pop
add
xor
lods
jns
mov
cmc
movs
adc
les
pop
cmps
and
out
cld
mov
int3
inc
imul
add
mov
shr
sbb
ja
int
retf
xchg
stos
inc
in
(bad)
mov
daa
mov
pop
scas
push
jl
test
mov
inc
scas
mov
cs
outs
mov
mov
(bad)
nop
je
and
adc
cmps
sub
push
fidiv
repnz
out
imul
or
pop
jbe
sub
and
das
daa
sub
popa
mov
in
push
int3
mov
repnz
push
out
or
gs
popa
sub
cwde
push
bound
cmp
fld
dec
ds
fmul
cli
pop
cs
popf
lods
cmp
adc
xchg
shr
ja
mov
cmps
(bad)
push
enter
fstp
push
add
jnp
cmp
stc
and
push
jns
jle
cmp
rcr
mov
push
adc
arpl
clc
push
or
(bad)
cmp
out
sub
les
ret
repnz
dec
clc
rcr
out
jo
add
es
jns
sahf
mov
hlt
enter
inc
repnz
cld
shl
call
or
adc
sbb
std
loop
ins
sbb
pop
xor
int
nop
ud2
inc
adc
call
mov
or
in
xchg
call
(bad)
dec
push
mov
lods
mov
retf
rcl
inc
fbstp
and
mov
rol
fbld
jne
nop
iret
retf
cmp
jns
fcomp
ss
(bad)
mov
mov
lahf
inc
sub
sbb
fsub
adc
jmp
mov
xchg
imul
out
int3
mov
adc
jecxz
lock
push
cmps
test
out
neg
push
fld
nop
sbb
jmp
fild
pusha
dec
mov
jge
inc
pop
(bad)
hlt
mov
popa
pop
pop
les
sbb
or
push
lods
and
aas
adc
jae
push
arpl
stos
shl
pop
adc
xor
in
pop
pop
mov
les
hlt
and
call
mov
pop
xchg
das
aaa
sub
mov
(bad)
scas
mov
or
retf
data16
cmp
fmul
xchg
or
push
lea
cmps
fcom
xlat
inc
popa
test
sub
jmp
add
or
outs
ret
dec
rol
ja
cmp
sbb
sub
mov
inc
mov
adc
cdq
es
pop
ret
jg
mov
inc
xchg
clc
inc
push
dec
out
into
inc
outs
and
test
mov
in
inc
cmp
out
dec
cwde
loopne
push
or
ins
mov
jbe
push
aaa
retf
adc
ins
sub
in
xchg
adc
xor
dec
or
outs
cmp
inc
mov
movs
out
lahf
or
out
retf
pop
xchg
pop
adc
mov
aam
or
mov
add
(bad)
push
jnp
add
bts
cwde
dec
jno
fsub
inc
pop
jmp
es
leave
shl
sbb
or
mov
sti
clc
xor
std
adc
sbb
ret
jp
fstp
test
loop
(bad)
fcomp
pop
jmp
mov
and
(bad)
push
in
ins
not
popf
mov
push
inc
aaa
call
push
xor
lock
sbb
call
xchg
fistp
inc
dec
push
shl
lods
mov
aaa
aaa
mov
sub
or
dec
or
cmc
xchg
icebp
aad
mov
push
fistp
pop
or
stos
cmp
pop
inc
mov
adc
pop
(bad)
aad
mov
push
shl
fxch
jl
cmp
jmp
dec
mov
icebp
adc
push
or
shr
in
popf
jge
std
in
and
cmc
sub
xchg
sub
loopne
out
ret
sahf
jnp
add
pop
lods
xor
mov
sti
or
or
jge
rcl
cld
cmps
xchg
xchg
rcr
in
clc
sub
fwait
mov
cmp
in
xchg
mov
(bad)
rol
or
(bad)
loope
inc
dec
add
mov
js
push
(bad)
or
mov
jle
ret
lods
in
cmp
mov
lock
jle
daa
or
mov
in
mov
mov
push
sub
ror
lods
jns
(bad)
fild
hlt
jg
jecxz
(bad)
call
jmp
jp
inc
mov
xchg
sbb
push
js
add
fiadd
add
ror
mov
cmp
stc
dec
cmp
sub
mov
push
neg
jno
mov
scas
jae
stos
adc
mov
push
jecxz
or
mov
scas
repnz
add
call
mov
push
and
mov
xchg
popf
rcr
xchg
pushf
mov
and
cmp
or
push
mov
jne
pop
sub
jmp
mov
inc
out
ret
dec
mov
add
jge
and
gs
or
or
pop
and
out
lock
mov
sbb
aad
inc
sbb
cmps
sub
mov
clc
push
sbb
xchg
sbb
jne
adc
repnz
adc
xor
adc
jge
outs
inc
push
ret
adc
(bad)
in
out
mov
lahf
xor
pop
(bad)
push
frstor
sub
cld
test
xor
push
inc
mov
les
cwde
push
ret
xor
lock
ja
inc
stc
jb
jbe
mov
(bad)
mov
jp
mov
sub
in
mov
fs
and
(bad)
and
lea
into
pop
dec
retf
sar
jno
data16
fmul
fisttp
mov
inc
addr16
movs
mul
pop
jbe
fnstcw
pop
lods
xchg
jne
sbb
scas
jp
mov
(bad)
(bad)
scas
mul
out
push
ins
xchg
daa
xchg
push
mov
push
popa
aaa
cs
mov
(bad)
and
push
sbb
cmp
adc
pmulhw
jl
(bad)
iret
stc
mov
jns
fcmovb
jmp
mov
ja
test
xchg
nop
mov
sahf
push
mov
es
ins
movs
pop
mov
lea
repnz
and
sub
jnp
xchg
xchg
add
pop
inc
add
push
mov
mov
inc
mov
and
ror
in
bound
retf
mov
mov
mov
jbe
(bad)
cmp
jb
repz
aad
test
rcl
pop
lock
ins
sub
into
inc
imul
clc
cmp
popa
fsub
push
and
int
sub
and
xchg
into
xchg
xor
push
jmp
push
ss
mov
xchg
xor
or
dec
retf
hlt
push
push
push
pop
out
push
and
sbb
mov
push
mov
jp
jge
pusha
jbe
mov
cmp
lods
xor
retf
xchg
xchg
mov
mov
xchg
adc
es
test
loope
aas
fwait
xchg
movs
or
dec
cs
inc
cwde
dec
test
inc
ss
pop
scas
test
pop
in
add
push
push
pop
nop
mov
adc
sahf
ss
ss
rol
sbb
mov
js
pop
les
or
sbb
push
in
or
xchg
jge
push
outs
mov
xchg
sti
lods
ja
adc
adc
dec
push
cdq
minps
movs
shl
aam
ins
xchg
call
xor
mov
push
fmul
cmps
rcr
sub
lods
fst
es
mov
sbb
dec
mul
sbb
nop
cmps
or
daa
pusha
mov
jl
pop
imul
add
data16
cmp
cmp
cmc
paddq
sti
cmp
call
pusha
jne
sbb
repz
xchg
ss
lock
adc
or
pop
aam
add
jnp
jmp
sub
movs
int3
in
cmc
pop
lds
xor
xchg
push
inc
ror
xor
mov
pop
xor
pop
mov
cmp
cwde
arpl
jne
out
data16
sbb
lods
retf
inc
mov
pushf
rcl
scas
pushf
mov
stos
outs
xchg
(bad)
adc
and
cs
test
(bad)
fidivr
sub
mov
arpl
sub
ds
jo
in
sbb
arpl
xor
mov
sub
idiv
movs
mov
cmc
test
std
iret
ins
es
movs
xlat
je
in
ds
add
mul
mov
jecxz
scas
adc
fsubr
cmp
push
sar
lods
xor
or
paddq
add
aas
fiadd
push
or
and
bound
mov
sub
icebp
arpl
imul
mov
and
std
dec
jl
ja
mov
push
add
jp
out
push
sahf
jl
out
xor
mov
mov
ror
movs
cli
mov
push
test
mov
pop
xchg
bound
mov
dec
int
and
ins
js
jmp
aad
fs
add
fimul
enter
sub
outs
cmp
xor
mov
dec
cmp
repnz
pop
dec
pop
xor
sar
je
enter
test
mov
jp
adc
mov
pop
jnp
and
and
xchg
push
push
cmps
pop
jns
and
aaa
adc
mov
dec
pop
cs
js
mov
add
cdq
mov
ss
ret
xor
fst
jmp
cmps
jne
sub
imul
add
les
outs
xor
push
out
gs
pushf
std
loop
les
jne
dec
push
mov
xor
push
call
mov
adc
es
sbb
and
sub
test
jle
mov
adc
mov
inc
dec
gs
dec
test
lea
pusha
sar
imul
in
retf
lahf
cwde
or
fsubr
call
sahf
(bad)
movs
test
or
inc
scas
push
mul
xchg
pop
mov
enter
fwait
jge
and
sbb
cdq
push
adc
pushf
jle
ror
add
mov
xor
add
and
fbstp
add
imul
cdq
seto
mov
outs
repnz
mov
pop
scas
pop
jle
addr16
push
mov
pop
jns
push
test
icebp
mov
xchg
outs
int3
push
mov
push
adc
pop
dec
pop
movs
repnz
jne
or
and
pop
jp
ins
fwait
mov
icebp
adc
jg
dec
inc
xor
pushf
mov
cs
and
pusha
ret
mov
mov
mov
jle
popa
popf
add
push
nop
pop
test
push
mov
mov
js
cwde
bound
mov
push
js
inc
cmp
jl
call
and
adc
jnp
sbb
test
jne
leave
jne
sahf
cmp
cli
adc
fild
sub
push
jmp
push
ins
mov
and
mov
xchg
in
push
cmp
xchg
and
jg
jno
sbb
add
cmps
jg
retf
add
aad
cmp
sbb
or
xor
or
inc
fstp
jecxz
test
inc
mov
push
repnz
cmc
aam
out
jmp
fstp
mov
in
adc
imul
cld
cmc
loopne
adc
enter
adc
icebp
and
cld
push
jge
ins
in
cmp
mov
push
pmullw
retf
mov
dec
popf
out
lahf
pop
add
pop
movs
loopne
xor
daa
and
xchg
pop
ins
jg
movs
mov
dec
or
les
sbb
sahf
pusha
dec
pop
ins
cmps
in
add
rcr
mov
nop
jmp
sub
dec
leave
shl
add
mov
js
mov
mov
jge
push
dec
cmps
jl
jmp
in
xchg
mov
(bad)
int3
cld
aaa
fwait
cdq
fwait
(bad)
adc
nop
pop
mov
arpl
frstor
inc
test
pushf
stos
xchg
stos
scas
adc
imul
add
rcr
(bad)
retf
mov
or
pop
jbe
add
add
outs
idiv
push
xor
sub
in
clc
leave
sbb
pushf
jmp
scas
xor
scas
std
sub
loope
add
xor
scas
movs
aad
sbb
leave
sbb
add
add
pop
push
scas
lahf
test
ins
push
ficom
jge
and
add
out
fsub
xor
in
ficomp
mov
mov
mov
ds
mov
mov
mov
pop
dec
and
dec
shr
leave
xor
or
xchg
dec
neg
shr
pop
arpl
fidiv
push
cmp
pushw
gs
sbb
mov
mov
(bad)
pop
jbe
cmp
adc
stos
rcr
jp
in
mov
xchg
sub
push
or
pop
mov
popf
repz
xchg
sub
aam
dec
shr
or
xchg
test
add
js
inc
in
xchg
(bad)
pushf
inc
jne
je
xor
mov
test
(bad)
fstp
loop
cmp
mov
fistp
inc
out
dec
adc
sar
fidivr
pusha
or
adc
out
ja
bound
pushf
jge
ror
inc
sbb
test
sub
mov
inc
aad
(bad)
and
pop
rcl
add
ds
call
mov
sub
lfs
mov
and
mov
aaa
push
jmp
jno
jge
sub
mov
jo
fst
and
(bad)
out
fcmovne
sbb
adc
cmp
push
pop
fld
int
repz
leave
hlt
pop
sbb
push
inc
add
push
jb
popa
out
sahf
jge
jbe
mov
and
das
and
jb
mov
out
call
fcomi
gs
lea
xor
aam
movs
mov
or
push
jmp
mov
xor
stos
inc
mov
mov
lea
stos
jns
ins
mov
scas
mov
stc
lods
jne
sub
(bad)
aas
dec
je
jg
inc
push
sahf
mov
out
(bad)
fwait
ret
sub
or
add
(bad)
mov
pop
and
xchg
test
leave
sbb
mov
cmps
retf
(bad)
mov
mov
pop
inc
add
xor
pop
call
mov
sbb
add
aas
jbe
movs
aaa
and
mov
jb
fwait
retf
push
xor
adc
push
add
sub
repnz
mov
xchg
push
and
lods
adc
je
fcmovnb
xchg
shr
sub
(bad)
(bad)
cmovge
inc
sti
jg
ins
stos
adc
jp
jno
jno
inc
or
or
stos
or
packssdw
sti
inc
in
scas
add
scas
pop
out
or
xchg
fimul
aas
sub
xchg
mov
jg
or
mov
jo
scas
bound
daa
rcr
fldenv
jae
out
aam
mov
mov
outs
sub
imul
fsub
pop
mov
jp
jge
jb
jbe
or
pop
outs
adc
(bad)
adc
xor
(bad)
outs
ror
mov
xchg
popa
mov
hlt
push
dec
dec
div
or
dec
pushf
push
dec
dec
sub
xchg
cs
and
daa
xor
xchg
xchg
(bad)
or
cmps
int3
enter
test
mov
test
sbb
xchg
or
mov
loope
outs
sahf
dec
and
or
data16
xchg
cdq
or
and
xor
rcl
mov
xor
mov
dec
clc
ret
mov
ror
pop
mov
add
(bad)
xchg
sbb
dec
mov
mov
out
xchg
repz
pop
ss
push
xchg
inc
jg
or
or
jbe
rol
inc
in
bound
gs
stc
add
int
sar
sub
jmp
xlat
movs
js
jb
inc
and
push
mov
mov
jb
(bad)
hlt
jo
jmp
inc
dec
xor
push
es
and
test
mov
mov
cmc
fsubr
js
in
cmp
inc
(bad)
jmp
imul
scas
mov
pop
and
dec
dec
mov
fadd
out
adc
xchg
inc
jnp
xlat
in
ret
mov
dec
lock
push
inc
cld
neg
retf
out
jo
and
cli
push
faddp
clc
out
mov
fidivr
inc
mov
mov
cmp
push
(bad)
pop
and
jge
xchg
fsub
sub
cmps
mov
lds
mov
pop
and
ret
cdq
outs
scas
fisub
dec
and
sub
stos
nop
pop
rol
out
cld
into
fidivr
pop
or
and
test
and
movs
aas
inc
fadd
inc
(bad)
(bad)
and
jb
clc
sub
jb
or
xor
add
xchg
adc
jb
outs
adc
adc
cmps
gs
jo
mov
ss
std
mov
jmp
and
jle
idiv
lea
sub
mov
(bad)
sbb
cld
outs
icebp
loop
push
jo
pop
jmp
cmp
fild
pop
cmps
aam
dec
mov
loopne
and
ins
jns
add
cmp
ins
adc
xchg
repz
adc
pop
sub
lock
pop
dec
jmp
hlt
cmp
xchg
gs
mov
in
mov
jg
call
mov
scas
fdivr
inc
fbld
xor
and
push
mov
rcr
js
sbb
stc
jb
retf
test
out
xchg
in
cmp
sbb
cmp
lods
ds
pusha
mov
in
jecxz
(bad)
jl
cdq
or
push
mov
or
dec
mul
mov
or
(bad)
mov
inc
popa
xor
push
ficom
fimul
adc
and
rcr
rol
dec
je
fwait
call
scas
les
inc
cwde
add
enter
tzcnt
sub
cmps
fisubr
lock
jg
jae
and
retf
mov
pop
xor
pop
(bad)
stos
and
xor
jne
xchg
and
loop
mov
sub
adc
rcr
pop
sub
push
push
cmps
fild
retf
add
out
mov
leave
popa
push
daa
or
outs
xor
push
xchg
in
or
je
mov
add
outs
cmps
adc
xlat
sbb
pop
fmul
push
cmp
unpcklps
adc
jecxz
xchg
iret
cmc
lods
pop
in
ins
sub
push
push
adc
retf
cmps
push
cmp
scas
or
popf
or
pop
fs
iret
xchg
sub
sub
inc
sub
jle
pop
in
sbb
push
sub
lea
pusha
add
test
(bad)
mov
lahf
mov
dec
mov
xchg
cmp
scas
call
or
mov
test
nop
sbb
xchg
mov
dec
pop
adc
push
fdecstp
xchg
sbb
cdq
lock
loopne
mov
ss
push
adc
jle
and
mov
fild
sahf
mov
inc
mov
test
call
inc
jl
cdq
leave
aaa
imul
jae
jns
ds
sub
sbb
mov
int3
push
xor
call
xchg
into
pop
sub
mov
add
fidivr
mov
push
daa
xor
adc
mov
adc
leave
int3
enter
cli
mov
rcr
add
jge
(bad)
mov
(bad)
rcl
pop
and
pop
push
(bad)
jmp
(bad)
mov
jnp
cmp
xchg
jno
xor
(bad)
cmp
xchg
sub
mov
mov
nop
jnp
add
adc
dec
sub
add
xlat
inc
jmp
mov
ror
sub
jo
scas
movs
push
imul
test
cmp
cwde
jp
ins
inc
cmps
cmp
lds
outs
ss
push
call
mov
(bad)
rol
fwait
pop
xchg
bound
sbb
pop
daa
push
add
sbb
repz
je
shl
xchg
mov
jnp
jl
and
pop
cmps
adc
pop
cmps
retf
fdivr
dec
jno
enter
data16
or
jbe
jmp
add
es
xchg
bound
psubusw
inc
mov
add
jmp
or
jns
(bad)
jns
imul
mov
lea
sti
xor
arpl
xchg
pop
or
pop
push
int3
mul
push
ss
mov
push
mov
sub
jge
movs
fnstenv
mov
pop
repnz
mov
(bad)
shl
add
and
add
lods
scas
pop
mov
mov
lahf
sub
or
xcrypt-cbc
cmps
push
jle
inc
mov
scas
mov
(bad)
aad
cli
push
cs
icebp
pop
push
loop
adc
popa
add
xor
push
sbb
mov
enter
(bad)
outs
rcl
or
push
rol
cli
arpl
out
shr
push
push
leave
and
test
or
sub
push
cmp
mov
leave
leave
mov
dec
lsl
xchg
mov
cmp
call
int3
loop
push
add
jno
(bad)
lds
xchg
aam
xchg
popf
mov
bnd
mov
aas
push
loop
repz
sub
lea
jo
shl
aam
push
inc
lock
scas
in
and
ins
inc
lods
jne
pop
add
xor
out
div
push
aaa
push
movs
shl
stos
je
lahf
or
adc
test
std
adc
mov
fwait
jp
mov
push
nop
int
sahf
movs
adc
int
gs
test
outs
pop
mov
jl
lods
shr
add
pop
jecxz
sub
mov
scas
jle
in
addr16
fisttp
rcl
ins
inc
loop
sbb
retf
into
dec
ins
arpl
inc
inc
daa
data16
or
mov
(bad)
jl
mul
mov
push
pop
iret
jns
jge
add
sahf
stos
jge
cmp
jae
cmc
gs
fistp
jp
fwait
lods
mov
inc
mov
pushf
mov
mov
scas
jmp
mov
(bad)
sub
adc
jmp
mov
outs
ror
(bad)
pop
sub
ror
xchg
push
mov
mov
popf
push
shr
xor
add
add
mov
mov
push
dec
push
test
and
aaa
mov
cmp
mov
mov
push
mov
nop
add
xchg
mov
into
loopne
jnp
inc
cmp
sbb
scas
or
pop
ja
lea
bound
mov
xchg
repnz
add
jl
popa
xlat
cmp
dec
mov
into
hlt
aad
cmps
aad
loope
or
push
fist
pop
ja
mov
int3
inc
mov
push
stos
popf
sbb
and
xor
mov
setne
iret
xchg
aas
jo
xchg
and
dec
ret
jo
dec
rdmsr
pop
adc
sbb
xor
jne
aas
repnz
adc
inc
or
jbe
call
dec
stos
mov
mov
xor
mov
xchg
mov
lods
sub
(bad)
adc
cld
je
cmp
and
daa
adc
ja
xchg
pusha
dec
push
scas
ja
repz
sbb
cld
mov
or
sub
gs
shl
jge
(bad)
out
lods
cmp
mov
push
xchg
jl
xchg
push
dec
call
jmp
and
jmp
xlat
inc
dec
aas
xor
mov
ror
lods
mov
(bad)
xor
and
cmovbe
sar
aas
sbb
xchg
fmul
retf
in
mov
xchg
push
repnz
and
stos
or
repnz
inc
(bad)
inc
outs
push
cwde
mov
popa
or
ror
jmp
ror
in
lock
loopne
(bad)
fsin
daa
mov
fiadd
je
adc
addr16
pop
mov
add
jge
jae
fcmovb
popf
sub
or
fisubr
cmp
test
movs
sub
icebp
rcr
scas
jmp
in
pop
add
movs
test
add
and
xor
js
inc
mov
mov
mov
jns
pop
test
repz
sub
lods
mov
rol
jl
test
mov
jmp
jb
jns
sub
lods
lock
enter
adc
out
scas
ss
jp
icebp
sub
xor
push
fdivr
ins
jnp
jmp
inc
mov
clc
lds
icebp
mov
mov
clc
loope
push
sbb
lock
cmp
sbb
stos
loopne
mov
mov
sahf
mov
mov
repnz
inc
mov
xor
repnz
dec
inc
(bad)
cmps
gs
push
add
gs
push
daa
push
movs
pop
popf
inc
iret
loop
sbb
push
cmp
jle
mov
xchg
add
ins
inc
ins
cs
outs
call
cdq
mov
fs
pusha
push
push
and
dec
push
or
mov
jge
sbb
mov
add
xchg
add
xor
mov
xor
add
(bad)
add
xchg
xor
pop
inc
lahf
call
push
lods
(bad)
fsubr
xor
outs
movs
push
shl
movs
cmp
fs
xchg
push
fild
cmp
mov
fs
jl
push
mov
xchg
or
fmul
fnstenv
jae
cmps
fwait
call
fisttp
xor
inc
xor
fs
or
(bad)
rep
sbb
call
mov
adc
jbe
cmps
cmp
cmps
shl
call
sbb
hlt
iret
mov
popf
call
stos
ss
xlat
jle
adc
push
shl
movs
in
popf
cmp
xlat
mov
mov
add
push
movs
daa
cmps
call
add
jmp
ret
jnp
add
fst
dec
scas
mov
outs
push
scas
xchg
(bad)
scas
in
fbstp
inc
or
and
enter
push
data16
bnd
push
add
push
fist
fsubp
fmul
(bad)
cmp
push
mov
push
iret
mov
adc
outs
and
jb
(bad)
lds
loope
imul
sub
(bad)
outs
mov
scas
fdiv
pop
cli
call
push
(bad)
cwde
scas
cmp
or
or
icebp
inc
in
cmp
push
in
mov
(bad)
das
fnsave
(bad)
mov
call
jne
xchg
cmc
outs
mov
outs
xor
push
sbb
inc
xchg
cmp
pop
adc
into
jbe
ja
add
ret
pop
aaa
(bad)
push
cmp
sti
and
or
or
lods
aaa
dec
dec
push
lods
nop
sti
popf
lods
mov
pop
sahf
jae
xor
jle
bound
cmp
jmp
add
sbb
mov
outs
sbb
mov
cmp
cwde
pop
adc
test
retf
dec
jmp
and
add
mov
mov
out
sbb
loope
pop
fnsave
xchg
add
mov
mov
ins
jmp
or
sti
test
sub
lahf
test
mov
mov
repnz
loop
adc
scas
add
in
dec
sbb
or
jmp
mov
int3
push
sbb
or
add
data16
adc
push
add
aad
mov
xor
and
mov
sbb
pop
add
sub
jge
fwait
add
stos
mov
cs
jmp
cmps
ficomp
mov
adc
or
sbb
cld
cdq
out
jl
pushf
pushw
sbb
sbb
test
icebp
mov
xor
mov
jp
lds
push
and
aam
inc
ins
jge
xchg
sbb
jb
(bad)
jg
aaa
mov
test
outs
scas
ret
outs
clc
and
mov
jbe
sbb
adc
and
es
cmc
imul
(bad)
mov
mov
leave
sar
mov
pop
pop
test
ret
push
pop
repnz
fdivrp
stos
inc
mov
addr16
push
xor
inc
cmp
daa
adc
push
mov
and
push
das
pop
idiv
rcl
mov
arpl
cmps
in
xchg
outs
outs
lea
mov
gs
mov
cld
pusha
lock
call
imul
sub
and
ret
aad
int3
mov
xchg
fmul
cwde
push
shl
in
das
(bad)
sahf
imul
aam
es
push
push
jge
mov
push
dec
or
inc
mov
xchg
push
repz
scas
ins
and
inc
or
xchg
jns
mov
add
ret
pop
(bad)
jg
shr
sbb
xchg
and
fwait
jb
mov
add
adc
into
std
sub
sub
and
loopne
xor
cmp
imul
or
push
mov
mul
aas
mov
push
outs
cli
xchg
xchg
and
dec
push
aam
(bad)
data16
fdivr
scas
mov
mov
dec
retf
ja
pop
jmp
bound
dec
xor
sbb
lea
push
out
cdq
sbb
xchg
clc
xor
jge
cmp
add
test
mov
mov
js
adc
mov
inc
dec
aam
and
icebp
push
test
cmc
scas
sbb
daa
inc
fistp
(bad)
sti
scas
push
pop
bound
mov
(bad)
sbb
or
sub
adc
imul
jns
das
push
mov
xor
or
and
into
push
cwde
or
jg
xchg
sahf
test
cmp
adc
sub
mov
inc
mov
in
mov
test
xor
ret
lock
xor
sbb
mov
cmp
sbb
mov
inc
xchg
or
push
jecxz
jecxz
mov
shl
(bad)
(bad)
mov
add
push
xchg
ret
div
loope
ficomp
lods
iret
jno
sahf
mov
sbb
rol
in
sbb
mov
stos
lea
fisub
std
aad
aam
rcr
(bad)
cwde
fs
les
icebp
or
js
fdivr
add
push
mov
push
sub
mov
fs
xor
test
in
test
pushf
sar
adc
adc
movs
and
lahf
in
pop
movs
add
int
jl
nop
add
jge
into
rcr
xor
imul
dec
mov
arpl
pop
cvtps2pi
push
sbb
pop
rcr
mov
dec
mov
rcr
arpl
mov
dec
(bad)
push
je
ds
inc
sbb
pop
loop
pop
repz
xor
jae
or
sbb
sub
call
(bad)
test
push
push
(bad)
out
rep
and
hlt
or
sbb
retf
pop
ja
push
inc
inc
lahf
add
xor
adc
ss
cs
ss
ins
jecxz
ffreep
or
cld
std
(bad)
and
mov
jmp
ss
aad
jb
adc
sbb
(bad)
mov
sub
push
pushf
pusha
(bad)
sub
and
nop
jno
fisub
inc
inc
call
jmp
cld
jo
xor
mov
fcomp
fisubr
cli
fwait
pop
test
adc
jmp
retf
ss
ret
adc
sbb
pop
mov
pop
and
dec
test
sbb
mov
cmp
cld
mov
and
add
push
scas
or
lea
pop
shr
mov
int
ins
adc
inc
inc
add
pushf
cmp
inc
add
adc
adc
outs
pop
pmulhw
or
call
shl
mov
pushf
ret
jae
dec
jmp
pop
inc
int3
dec
adc
ret
mov
sahf
and
push
adc
mov
lods
fiadd
repnz
pop
xor
mov
push
(bad)
movs
ins
bound
inc
dec
loopne
hlt
sbb
pop
imul
(bad)
pushf
in
stos
std
paddw
aaa
neg
mov
(bad)
out
hlt
inc
mov
inc
in
mul
jl
outs
jp
and
dec
fs
retf
cwde
sub
ja
js
fldcw
jo
and
sub
xor
adc
hlt
xchg
jmp
sub
aas
fs
mov
jg
cmp
ret
inc
hlt
xor
pop
add
leave
sbb
push
repnz
mov
test
leave
add
retf
(bad)
fnstcw
push
loopne
loop
cmp
mov
add
in
push
repnz
repz
retf
call
ins
and
and
lock
jne
push
sub
dec
xor
xchg
(bad)
pop
dec
pop
cmc
add
sahf
leave
stos
mov
mov
imul
inc
daa
dec
xor
add
(bad)
jne
jo
mov
push
retf
movs
int
add
pop
dec
xor
outs
lods
mov
add
repnz
dec
mov
xor
dec
in
lds
sti
repnz
(bad)
cmp
cmp
std
jmp
rcl
ss
cld
sbb
push
fnstcw
mov
aas
enter
and
into
paddusw
aas
cmps
mov
out
repnz
scas
sub
mov
or
push
pusha
stos
popa
or
cdq
mov
inc
iret
mov
jge
sahf
mov
cs
or
ja
xor
xchg
outs
out
jmp
lds
popf
js
mov
or
ror
jecxz
mov
loop
popf
(bad)
fidivr
imul
loope
in
mov
add
retf
mov
out
arpl
loope
loopne
jne
inc
cmps
imul
cs
shr
(bad)
imul
call
cmp
movs
xchg
mov
pop
mov
pop
gs
xchg
jmp
les
ret
popf
cmp
test
push
cmp
dec
push
xor
push
jecxz
mov
outs
out
popa
push
(bad)
mov
(bad)
in
hlt
dec
pop
xchg
fdivr
stc
lods
jecxz
jl
push
and
adc
shr
pop
scas
test
push
enter
popa
xchg
lods
(bad)
jle
push
out
jne
push
test
and
inc
das
cmp
xor
cmc
or
pop
push
ins
add
xor
aas
movs
jecxz
add
loope
outs
(bad)
pop
sbb
mov
xor
push
ret
dec
(bad)
pop
mov
daa
mov
inc
xchg
dec
cwde
and
mov
and
pop
sbb
xor
pushf
hlt
xchg
add
dec
mov
pushf
mov
sar
sub
fs
call
in
imul
pushf
xor
sbb
out
nop
jnp
test
sub
ins
adc
jb
leave
fidivr
ja
daa
test
pop
ins
pusha
fmul
int3
aaa
retf
add
call
les
daa
xor
cs
mov
and
dec
into
and
cdq
mov
cdq
cmp
inc
sub
cmps
ret
push
stos
icebp
sub
cmp
inc
popa
cmp
rcl
icebp
add
jecxz
add
push
push
and
out
loop
mov
inc
into
jno
out
jnp
dec
out
mov
sub
shl
mov
cmp
or
adc
xor
sbb
sub
jle
scas
rcl
out
mov
loop
and
and
sub
mov
pop
mov
add
rcr
sbb
es
ret
shr
or
jg
pop
fnstcw
imul
not
iret
mov
mov
out
shr
ret
ficomp
xchg
(bad)
and
sub
adc
add
out
sbb
and
jmp
pop
(bad)
popf
jecxz
(bad)
and
enter
pusha
pop
lahf
xor
jmp
mov
mov
jmp
inc
xchg
or
sub
stos
and
pop
and
js
cli
imul
out
mov
push
xchg
push
scas
cmp
pop
les
das
mov
xor
sbb
jg
arpl
mov
cmps
retf
clc
push
jecxz
mov
ror
outs
dec
dec
bound
cmps
push
loop
cmp
jno
cld
loopne
pop
es
(bad)
cwde
mov
adc
scas
lahf
clc
jno
movs
bound
lea
jp
lds
xor
std
push
aad
xchg
push
fdivr
enter
sti
inc
fsub
cmc
jecxz
push
jmp
into
fist
loope
out
bound
movs
jne
push
sbb
sub
dec
lods
dec
adc
add
imul
pop
adc
mov
mov
pop
add
and
xchg
push
sahf
scas
adc
imul
sub
test
call
ins
xor
fnstsw
lea
and
xchg
xor
dec
inc
mov
cmp
inc
inc
scas
add
sbb
ds
outs
mov
sahf
jno
and
jle
pop
jg
cmps
and
ds
push
aam
pop
pop
lahf
ja
ins
push
or
repz
mov
das
xor
sub
dec
jle
sbb
xchg
mov
mov
inc
or
adc
fdivp
(bad)
idiv
adc
and
dec
das
or
call
add
xchg
adc
sub
cwde
cli
int3
fcmovnbe
xchg
lods
or
push
mov
xchg
cwde
cmp
hlt
aas
rcr
shl
jbe
fidivr
inc
xlat
fld
and
sbb
clc
jmp
jle
fld
dec
and
nop
in
into
sbb
out
icebp
or
jno
inc
fs
in
jl
(bad)
jmp
push
(bad)
sti
stc
sub
or
or
mov
dec
mov
xchg
jbe
xchg
mul
pop
in
movs
mov
lock
inc
sti
mov
jbe
cwde
lea
retf
fnstsw
inc
cmp
aad
test
sbb
pop
jne
cmp
leave
inc
pusha
dec
sub
inc
icebp
fstp
stos
out
xchg
xchg
dec
cmp
call
lods
cs
in
xor
push
jne
jae
in
cld
mov
ror
cmp
jecxz
dec
dec
clc
inc
int3
mov
in
out
mov
or
or
cmp
lods
mov
mov
fdiv
pop
retf
test
sub
and
in
or
enter
jmp
stc
mov
arpl
mov
mov
adc
dec
mov
mov
add
into
inc
dec
cmp
dec
cmp
mov
mov
dec
cli
test
dec
and
loope
sbb
rol
(bad)
(bad)
loope
or
fcmove
xchg
scas
and
sbb
repnz
mov
cmp
pop
add
std
inc
out
cmps
pop
movs
loop
dec
mov
je
mov
pop
lods
mov
dec
sahf
or
out
icebp
sub
in
lea
push
fldcw
mov
arpl
ret
sub
cs
jle
dec
mov
ficomp
mov
aas
xchg
daa
nop
mov
xchg
pop
inc
push
push
jns
popa
pop
cmc
test
outs
icebp
and
sti
sbb
and
scas
mov
jo
dec
(bad)
out
imul
in
aas
pop
rcl
xlat
push
pop
shl
xor
mov
mov
(bad)
arpl
inc
popa
or
xor
mov
out
dec
cmp
ja
adc
push
inc
and
mov
mov
int3
cwde
ror
cmp
les
call
cmps
fist
cdq
hlt
sbb
jmp
cmp
mov
repz
scas
add
inc
push
push
lds
stc
push
icebp
fisttp
fisub
xchg
ins
loop
shr
jecxz
jne
dec
jnp
cmc
push
mov
pop
or
pop
scas
and
cmp
js
jno
lods
pop
cld
sbb
lds
aas
sahf
mov
gs
call
retf
aaa
and
out
and
mov
imul
lds
jecxz
xor
ins
mov
push
imul
outs
mov
movs
les
idiv
mov
push
jg
shl
in
push
cli
push
xor
into
jns
add
lock
jb
add
fisttp
lods
mov
ret
(bad)
pop
arpl
retf
mul
retf
sub
shl
xor
je
stos
fidiv
not
mov
mov
fidivr
cmp
arpl
mov
add
jecxz
cdq
(bad)
cmp
call
shl
or
cwde
mov
add
sti
inc
retf
outs
xchg
sub
outs
outs
dec
iret
aad
out
popa
scas
clc
cli
fs
pop
retf
jle
imul
add
cmp
scas
add
aad
out
mov
mov
jnp
stc
ja
push
and
pop
sbb
out
das
jb
add
loope
mov
mov
push
in
fistp
jae
jbe
jne
sub
mov
pop
daa
push
cmp
outs
stc
addr16
or
popf
push
cmp
lahf
out
ins
sbb
lods
sub
and
movs
in
leave
and
or
or
outs
and
sahf
pop
add
ficomp
js
test
popf
ins
sti
ja
imul
(bad)
push
xor
jp
in
pop
xchg
idiv
mov
es
xor
sbb
jb
ins
ja
test
adc
ror
jg
add
jnp
(bad)
dec
sub
inc
aaa
test
sbb
push
or
retf
pushf
cmp
idiv
in
xchg
dec
jecxz
loop
mov
in
(bad)
push
std
add
outs
fcomp
idiv
adc
jl
sub
outs
mov
lock
pop
xchg
aam
mov
jbe
popa
fwait
js
pushf
clc
sar
cmp
mov
es
loopne
pop
lds
sti
shl
push
adc
fild
ds
mov
dec
int3
icebp
xor
and
jns
jge
sub
cs
dec
xchg
push
icebp
aaa
(bad)
es
std
popa
pop
imul
fcomp
retf
jmp
imul
call
addr16
cmp
fld
mov
pop
scas
ret
repz
cmp
addr16
mov
cmps
loop
rcl
addr16
mov
pop
or
mov
mov
mov
mov
icebp
add
out
pop
dec
and
movs
lds
out
dec
mov
fwait
push
cs
mov
ss
cmp
push
pop
ins
mov
pop
mov
mov
mov
test
jp
test
xlat
iret
sahf
(bad)
(bad)
cmp
iret
int3
sbb
pop
pop
stc
(bad)
mov
ss
ret
xchg
and
xchg
mov
add
jb
sub
jg
push
inc
lahf
out
out
mov
scas
ficom
cs
xor
neg
cmp
push
or
and
pop
ret
call
xchg
cli
and
lock
std
loopne
scas
cmp
adc
cmp
mov
add
sub
loopne
sub
sbb
mov
jge
retf
cmp
dec
in
push
into
mov
lds
inc
stc
ja
lock
dec
sbb
pop
sbb
aaa
dec
mov
fstp
dec
mov
mov
dec
mov
add
cli
lds
(bad)
adc
cli
inc
mov
jge
push
lahf
popf
jmp
adc
sar
inc
popa
dec
aad
dec
and
lock
les
pop
jl
push
jnp
xor
xor
or
ins
repz
data16
neg
xor
cmps
jno
movs
or
das
mov
pop
pop
mov
and
jecxz
jnp
mov
mov
ss
aam
scas
push
stos
add
lods
mov
dec
repz
add
jmp
fbld
push
push
lock
cmps
sub
dec
pop
in
pop
or
push
cdq
aas
cli
xchg
fnstcw
and
mov
pop
adc
jb
jge
das
fs
fbld
mov
mov
mov
fadd
add
ins
sbb
or
mov
je
hlt
add
dec
sub
fwait
adc
out
mov
mov
xor
sbb
outs
arpl
test
inc
dec
push
arpl
adc
arpl
mov
out
pop
adc
xchg
jge
pop
inc
fidivr
push
test
jns
push
push
int
inc
mov
data16
sbb
or
lods
cmc
pop
ret
pop
mov
sub
cmc
mov
cld
and
movs
sub
or
int3
push
popf
or
mov
jae
mov
cmps
pushf
ins
cmp
stos
add
pop
push
jle
xor
leave
les
mov
adc
mov
test
mov
fiadd
xor
xor
pop
cmp
cwde
ss
into
inc
adc
xor
xchg
mov
pop
hlt
dec
push
mov
pushf
jbe
pusha
sub
mov
stos
jnp
pop
gs
lahf
adc
jl
(bad)
out
popa
jb
adc
jo
dec
ficom
es
enter
fstp
icebp
fnstcw
jg
adc
sti
test
retf
test
pop
push
mov
(bad)
jg
and
add
inc
repz
mov
mov
adc
shl
jns
adc
inc
fbld
cdq
call
addr16
push
pop
retf
push
push
call
mov
call
lahf
sub
inc
mov
xchg
push
jnp
push
or
rcr
(bad)
sar
pop
mov
inc
xchg
in
pop
and
lock
dec
mov
scas
je
add
xor
jnp
pop
mov
xor
pop
mov
cdq
(bad)
data16
(bad)
aaa
cmp
jmp
and
pop
lods
fucomip
jmp
aad
out
pop
or
sbb
mov
push
or
mov
repnz
inc
mov
lods
push
sub
or
add
pop
or
xor
xchg
cmps
lods
cld
sub
je
dec
mov
shl
mov
jp
std
out
fcomp
shl
push
jno
or
dec
rol
fdivr
add
add
pop
push
add
cmp
xchg
inc
jle
add
mov
clc
and
adc
push
sub
retf
mov
dec
jmp
adc
mov
sbb
dec
add
mov
ror
mov
fnstenv
jo
aad
push
into
add
adc
gs
outs
outs
fst
push
arpl
ja
xchg
out
jnp
jnp
arpl
xor
das
into
sbb
imul
imul
ret
rol
and
fstp
icebp
mov
add
in
mov
shl
xor
adc
ins
add
cwde
mov
dec
pop
pushf
adc
xor
mov
dec
test
sbb
jns
mov
sub
out
xor
out
shl
popf
mov
cwde
xchg
ds
cld
enter
adc
and
adc
cld
inc
sub
pusha
inc
in
(bad)
int3
jne
cld
test
movs
aam
retf
gs
mov
nop
push
lods
cmpxchg
push
test
mov
push
ins
in
out
sub
adc
push
xlat
sti
add
neg
mov
stos
or
or
call
sbb
add
fnstcw
fidivr
stc
sub
xor
jge
(bad)
and
pop
loope
jmp
xlat
jo
out
push
mov
fcom
div
push
inc
fist
sbb
loopne
aaa
not
xor
ins
or
or
retf
daa
cmps
loop
sub
push
jbe
fmul
or
shl
out
rol
push
mov
pop
push
dec
mov
or
in
push
imul
mov
ds
dec
xchg
fcmovb
ret
sbb
jmp
xor
mov
(bad)
sbb
jg
inc
cmp
jp
int
fnstcw
xchg
jbe
aaa
in
add
pop
pop
mov
jp
cdq
cdq
or
mov
mov
push
or
gs
jle
sbb
cmp
in
xchg
add
jl
cwde
push
push
mov
test
pop
adc
mov
(bad)
adc
sbb
push
aaa
cmps
push
or
xor
in
cmp
cmp
cmp
gs
cli
jg
xor
das
fidivr
pop
dec
cmps
push
xchg
jl
sbb
cmps
call
rol
test
scas
mov
sar
out
addr16
aas
sbb
sub
stos
mov
fnstcw
ja
sahf
jne
jmp
ja
adc
and
adc
scas
icebp
mov
cs
cli
(bad)
jb
fdiv
gs
into
or
push
mov
ins
ins
aas
sbb
out
ja
out
loop
mov
add
push
mov
retf
sub
cs
lods
call
mov
inc
out
icebp
jmp
sbb
loopne
cmp
cmps
jmp
lahf
loope
loop
mov
mov
stos
mov
dec
out
adc
loopne
and
push
repnz
out
loop
jmp
jp
dec
frstor
jmp
cdq
pushf
adc
rcr
int
xchg
jo
push
call
inc
inc
loope
pop
cli
stos
dec
xchg
into
mov
call
mov
sbb
dec
inc
ror
inc
test
fisttp
fistp
test
daa
into
ror
jb
push
lods
mov
gs
pop
pop
rcl
mov
in
xor
movs
adc
loop
scas
adc
stc
jno
and
pop
cs
push
stc
sbb
dec
add
fidivr
xchg
jo
test
shl
fisubr
aas
(bad)
dec
lods
cmp
xchg
dec
outs
pop
inc
mov
dec
fnsave
aam
shr
xchg
dec
pop
push
push
and
pop
push
sub
mov
add
jl
fist
adc
rcl
mov
add
xchg
nop
js
(bad)
cld
out
xlat
dec
shl
je
dec
stos
daa
enter
lods
mov
mov
add
xlat
js
arpl
js
and
(bad)
xor
inc
sub
repz
and
outs
cmp
cli
js
pop
fsubr
mov
push
ror
test
mov
je
adc
call
sbb
push
popf
(bad)
in
jp
mov
or
jp
mov
adc
jne
pop
jl
inc
push
pop
or
and
sbb
cmp
iret
fisubr
fiadd
cli
push
xchg
ins
sub
popf
je
jecxz
pop
and
inc
xchg
jmp
add
mov
jp
lods
mov
mov
mov
pop
(bad)
jg
push
sbb
and
ins
adc
xchg
xor
push
dec
or
inc
popf
sbb
adc
stos
(bad)
repnz
push
jg
mov
and
inc
fisttp
popa
sbb
push
add
(bad)
into
test
adc
pop
arpl
popf
xchg
add
mov
mov
mov
push
xor
push
sub
jg
jb
les
mov
push
out
adc
pop
fstp
pop
sbb
sbb
cli
jne
repz
or
push
fstp
pop
push
stos
add
mov
fbstp
mov
ss
in
pop
mov
(bad)
mov
cld
inc
ss
xchg
sub
bound
sub
outs
or
fisub
test
dec
cdq
mov
inc
sbb
pop
std
data16
adc
pop
jnp
xor
repnz
mov
and
repnz
popa
adc
(bad)
mov
into
out
call
mov
stc
jmp
mov
xor
in
iret
mov
sti
jl
or
fild
test
dec
mov
mov
sbb
shl
cmp
sbb
xchg
stc
nop
lahf
add
jl
sub
push
cld
mov
xchg
rol
add
rol
pushf
nop
cmp
push
sbb
int3
inc
out
xor
popf
xchg
inc
fcmovnbe
jb
fsubr
or
retf
add
mov
mov
pusha
mov
popf
aad
add
aad
int
arpl
sbb
in
arpl
jno
leave
stos
sbb
int3
fisttp
xchg
push
sub
pop
or
mov
fadd
xor
retf
dec
fbld
or
fsubr
cwde
icebp
cmp
and
lds
mov
lods
imul
clc
sub
stos
js
jge
nop
shr
and
test
test
sbb
or
push
jnp
adc
push
shl
out
test
push
adc
xchg
dec
pop
mov
pop
ret
xor
mov
pop
scas
pop
and
mov
(bad)
addr16
cld
gs
and
out
test
ins
cmp
xchg
mov
mov
mov
push
les
lods
fwait
adc
outs
pop
pop
or
(bad)
popf
shl
dec
jbe
jmp
pushf
or
(bad)
aad
xchg
cmps
ret
sub
push
out
stc
xor
js
or
cs
sub
std
test
push
jno
fdiv
push
stos
bound
xor
xlat
data16
out
sbb
cmp
call
add
mov
nop
pop
pushf
fidivr
xor
mov
jle
xor
pop
inc
jne
pop
dec
jle
push
outs
dec
cmps
in
ins
fs
(bad)
enter
push
ror
cmp
lock
movs
mov
mov
test
mov
lock
repnz
jb
into
sti
icebp
dec
pop
pushf
out
xchg
ror
inc
xlat
sbb
fdivr
(bad)
aad
cmp
xchg
jnp
xor
xor
and
ins
sub
test
outs
out
ja
mov
icebp
push
jb
push
push
cmp
or
in
fs
mov
jns
rcr
outs
(bad)
jge
sub
in
sti
adc
outs
cmps
ret
imul
in
repz
into
push
and
push
dec
sti
out
pop
inc
repnz
adc
iret
cmp
movs
sbb
jmp
and
jle
aam
retf
adc
cmp
sub
sub
cwde
sub
sbb
jae
mov
shl
or
dec
shr
push
xchg
inc
stos
stc
pop
sbb
pop
inc
mov
xchg
add
push
rol
stos
mov
repnz
mov
jp
call
jne
test
imul
xchg
dec
out
popa
loopne
fdiv
fbld
pop
loop
ins
jmp
loopne
sub
bound
mov
xchg
popf
cmp
clc
imul
cmp
pop
jnp
and
jmp
pop
call
and
sbb
test
mov
das
stc
mov
inc
clc
adc
pop
jl
or
rol
sub
inc
jecxz
stos
pop
jle
adc
fs
adc
jl
cmp
leave
test
into
inc
fidiv
ror
test
or
shl
push
aam
mov
xor
mov
jecxz
push
pop
xlat
jae
fisub
fisub
repnz
out
shl
add
shr
rcr
mov
daa
lods
xchg
jg
and
fsub
mov
adc
mov
and
pusha
push
mov
mov
dec
or
mov
jle
pop
mov
dec
and
data16
mov
mov
push
mov
cdq
aad
test
inc
dec
sub
xor
retf
pop
pop
push
pusha
xor
test
lods
test
cdq
jne
mov
loope
mov
dec
stc
push
lods
mov
test
push
mov
jo
mov
mov
or
mov
ret
adc
scas
fcom
icebp
dec
ins
fistp
push
xor
iret
push
fidiv
cs
fbld
push
movs
leave
add
repnz
sar
scas
stc
pusha
test
adc
sbb
rcl
(bad)
xchg
and
push
out
ins
push
or
ins
or
xchg
std
lods
sbb
cmp
pop
(bad)
and
jp
aas
repnz
lock
jmp
int
inc
xchg
arpl
popf
sub
ds
sub
retf
sbb
xlat
outs
cmc
xor
adc
adc
mov
(bad)
sbb
xchg
mov
push
call
ins
sub
repz
push
mov
mov
mov
inc
setne
and
pop
fld
xchg
fs
out
sbb
mov
sar
pop
sbb
in
out
repnz
mov
inc
mov
icebp
movs
arpl
mov
pop
push
push
xlat
sahf
loopne
cmp
stos
sub
or
xor
and
mov
mov
mov
sbb
clc
or
mov
inc
push
and
loope
mov
push
rcl
xor
loopne
inc
dec
mov
cmp
nop
mov
xrelease
mov
rol
loop
jge
aas
ja
pcmpeqw
shr
inc
aam
ror
inc
cmp
mov
mov
or
xor
push
sub
test
int3
xor
fimul
xchg
enter
div
aas
cmps
cwde
mov
xor
xchg
inc
mov
shl
es
in
rol
push
(bad)
mov
mov
dec
fist
mov
call
push
cmps
mov
mov
in
inc
retf
jmp
fist
dec
add
js
and
loopne
shr
in
jmp
sbb
stc
cmc
sbb
leave
adc
inc
and
iret
scas
or
mul
rol
xchg
loopne
fwait
pop
push
loope
add
sti
push
push
and
xor
test
xchg
fistp
int3
dec
jle
mov
retf
cs
sub
daa
jge
std
xchg
jo
scas
jnp
and
push
xchg
dec
mov
inc
jg
repnz
int
pushf
out
inc
icebp
dec
out
mov
add
mov
adc
cmc
mov
rcr
mov
aas
xchg
je
and
aas
das
push
and
ret
(bad)
mov
movs
inc
nop
cmc
aam
xchg
neg
in
and
(bad)
dec
ds
or
dec
jmp
xchg
cs
mov
adc
fsubr
xlat
cmp
into
popa
dec
loop
xor
popf
rcl
ret
out
push
dec
ins
lods
imul
pop
shr
xor
imul
test
inc
mov
iret
scas
cmp
add
mov
hlt
lods
push
hlt
inc
xor
add
jns
out
cmc
std
ret
xchg
cmp
dec
xor
or
mov
inc
or
dec
and
sub
push
clc
pop
mov
test
test
pop
adc
sub
and
sbb
xlat
or
xor
or
pop
push
bound
add
div
lods
pop
clc
or
pop
xor
jo
jge
int
pop
ins
in
sbb
cmps
adc
cmp
cmps
xchg
pop
(bad)
sub
xchg
push
cmp
pop
js
gs
push
adc
js
lods
add
and
mov
add
mov
nop
shl
xor
or
adc
xchg
push
lock
fisttp
mov
aaa
mov
in
call
and
mov
and
lock
bound
jmp
mov
xchg
cmps
and
cmp
in
arpl
dec
push
mov
aaa
pop
mov
adc
jmp
cs
and
out
stc
adc
iret
aad
jo
fbld
mov
ds
cmp
fisubr
mov
xchg
clc
or
pop
ja
int3
cmps
lock
pop
add
scas
out
pop
dec
cmp
cs
dec
arpl
sbb
ins
fwait
pusha
pop
pop
mov
xor
or
scas
bound
add
nop
rcl
pusha
or
cmps
sub
adc
imul
cmc
inc
jae
out
pop
mov
or
stos
pusha
in
loop
mov
call
fsub
dec
or
cmp
lea
xor
popf
ret
sub
stos
popa
loope
push
mov
and
pop
inc
ret
pop
fnstenv
mov
fimul
fs
jne
sub
jg
pop
retf
pop
xchg
xchg
jmp
std
cmp
repz
jg
jg
aam
sub
jecxz
aad
movs
sahf
inc
ins
dec
pop
mov
retf
lods
or
dec
sbb
loopne
xchg
mov
(bad)
push
fldlg2
int3
xchg
sbb
jecxz
stc
pop
pop
out
push
bound
fcom
mov
fwait
cli
fadd
and
push
test
and
xor
repnz
(bad)
aad
mov
inc
movs
dec
rcl
popf
mov
shl
scas
adc
bound
inc
ds
jns
inc
popa
mov
dec
add
or
inc
add
das
test
mov
(bad)
(bad)
popf
cmc
and
xor
fdiv
cmps
jno
aas
adc
ret
test
xor
sahf
xor
mov
push
mov
test
out
jge
stc
lods
out
out
fwait
imul
test
pusha
imul
sub
add
ret
outs
pop
jbe
les
(bad)
popf
adc
jmp
or
sub
pop
mov
xor
inc
idiv
sbb
mov
icebp
movs
pop
dec
repz
cmovae
add
cdq
aam
ja
xchg
xor
mov
test
xchg
sbb
mov
sti
sub
xchg
aas
clc
std
sbb
cmps
fimul
adc
mov
sub
dec
std
mov
push
push
xchg
fmulp
ret
pusha
lea
in
lods
out
scas
scas
add
jg
and
pop
add
fcmove
jns
and
(bad)
xor
xchg
jmp
(bad)
push
loope
shl
jne
inc
ficomp
adc
xchg
inc
ds
int
fimul
or
or
mov
test
xor
idiv
lods
adc
lods
pusha
inc
popf
test
adc
jmp
shr
pop
inc
jb
and
les
imul
sbb
daa
test
mov
std
mov
sahf
pop
xchg
les
push
test
add
xchg
dec
sub
or
sbb
das
mov
xchg
rcr
jo
xchg
leave
mov
jne
test
ss
mov
cmp
cmps
dec
pop
jno
pop
jo
fs
xor
js
mov
in
aas
add
push
mov
movs
mov
sahf
xlat
movs
push
push
enter
mov
out
xchg
push
jae
mov
jnp
in
mov
add
movs
xor
imul
xchg
(bad)
std
mov
pop
addr16
out
mov
dec
or
mov
add
mov
push
jmp
mov
mov
test
sahf
inc
aad
adc
sub
cmp
or
sub
jbe
mov
sub
fs
out
frstor
(bad)
jne
adc
mov
les
jne
popf
mov
adc
mov
movs
and
stos
rol
ror
les
in
mov
ret
ret
mov
pop
dec
push
out
loope
lds
out
xor
cmps
jno
icebp
mov
movs
fist
cmp
ins
cwde
int
mov
lods
into
iret
push
icebp
mov
test
dec
sub
adc
in
scas
mov
cli
call
mov
xchg
clc
mov
inc
mov
out
cmp
lahf
pop
loopne
jmp
jns
or
les
nop
adc
movs
mov
jg
push
sub
jns
ds
dec
pop
push
call
fwait
sub
add
jo
push
sub
je
cmp
js
rcr
push
pop
test
xchg
out
das
daa
sti
ret
xchg
icebp
pop
inc
in
adc
ins
jge
sbb
lea
mov
mov
mov
dec
pushf
or
call
xchg
xchg
push
js
popa
cmc
xchg
lods
pop
add
pop
(bad)
shl
ror
adc
dec
mov
fidiv
retf
add
dec
mov
xchg
push
outs
mov
add
mov
test
jl
and
ret
pop
jmp
imul
data16
jbe
sub
mov
lods
ficom
xchg
dec
mov
mov
mov
clc
fs
inc
lea
arpl
adc
push
fmul
ret
iret
mov
daa
cmc
fnsave
test
cs
(bad)
call
jecxz
add
mov
fcomi
fst
add
test
add
aad
lds
aaa
mov
loope
(bad)
pop
aaa
adc
test
lahf
movs
and
retf
sbb
(bad)
into
in
outs
out
xchg
int
xor
aam
xchg
add
add
jecxz
cmp
mov
mov
sbb
sbb
int
mov
outs
push
scas
or
sbb
imul
cmp
or
xor
inc
cld
mov
cmp
in
daa
mov
inc
test
jns
xor
or
inc
push
xchg
and
in
cmp
in
mov
shr
dec
jge
or
repnz
add
cmp
(bad)
sbb
adc
sbb
(bad)
jmp
aaa
lods
aas
pop
jecxz
sub
jno
or
test
xor
sub
inc
mov
outs
test
bound
scas
add
sbb
mov
mov
mov
cmc
pop
test
mov
lahf
mov
dec
test
jmp
and
inc
lea
dec
stos
sti
fcom
in
enter
(bad)
jbe
mov
add
push
ja
dec
cs
sub
pop
mov
repnz
or
xor
cli
mov
in
int3
pop
mov
push
jmp
cmp
xor
mov
cmp
cli
xchg
aaa
pusha
ins
pop
mov
cmps
ins
in
push
addr16
jge
iret
push
pop
push
fs
sub
jmp
mov
adc
mov
jae
int3
hlt
dec
pop
lods
movs
ss
push
call
loopne
retf
test
scas
dec
sbb
leave
imul
jle
out
popf
sub
xchg
pop
mov
adc
pop
xchg
aas
les
js
mov
sub
mov
mov
movs
enter
or
call
out
jb
pop
std
jb
aaa
mov
adc
in
ja
js
xchg
xchg
ins
aas
add
xor
out
dec
mov
jmp
pop
jnp
les
ins
cmc
dec
xchg
inc
pop
pop
xchg
in
pop
and
add
jbe
outs
cmps
lods
mov
loopne
out
test
cmc
arpl
push
sbb
mov
jae
sub
stos
dec
repz
and
jmp
jmp
cwde
dec
inc
popf
inc
mov
mov
or
pop
clc
sbb
cmp
and
mov
aaa
cld
repz
aas
in
xchg
outs
in
inc
pop
sti
adc
imul
nop
or
jp
xchg
in
jb
sbb
mov
and
das
cmp
rol
jmp
cld
mov
add
jecxz
pop
push
inc
push
ret
les
pop
or
mov
mov
xchg
xchg
(bad)
std
xchg
cld
inc
mov
sar
test
dec
movs
push
pusha
(bad)
xor
out
test
xor
or
in
mov
add
arpl
popf
mov
icebp
mov
mov
sbb
jbe
xchg
dec
inc
mov
dec
lahf
imul
rol
add
jp
pop
mov
push
fwait
popa
hlt
sbb
jge
or
add
cmp
shr
mov
sbb
pop
bound
leave
std
retf
retf
fld
setg
pop
add
fnstenv
mov
call
and
xor
(bad)
retf
jecxz
pop
test
outs
xchg
mov
or
fwait
xchg
fcomi
(bad)
lods
or
or
lea
jo
sbb
popa
cmp
shl
enter
ja
lahf
lods
cdq
add
xor
add
mov
fdivr
push
push
xor
jp
sbb
pop
(bad)
(bad)
fistp
xchg
sub
dec
ret
pusha
mov
mov
gs
sbb
ds
xchg
cmp
pop
cmp
mov
add
inc
adc
xchg
sbb
pop
cs
pop
dec
cmps
mov
mov
in
(bad)
jg
cmp
scas
or
fiadd
xor
sbb
addr16
ins
add
sub
sub
cmp
pop
mov
xor
cmp
pusha
mov
cmp
in
xchg
fisub
xor
jecxz
add
inc
(bad)
jmp
inc
in
add
icebp
mov
fmul
fdivr
dec
sbb
pushf
add
idiv
jbe
sti
or
pop
lock
out
lock
adc
jns
fcom
shr
jae
clc
sub
xchg
mov
push
cwde
mov
sbb
push
mov
mov
mov
sub
stos
xchg
shr
dec
(bad)
shl
repnz
cmp
aad
push
mov
jmp
cwde
mov
xchg
aas
or
retf
out
repz
and
dec
push
data16
mov
scas
mov
jmp
mov
mov
ret
adc
je
pop
loop
fsubr
lea
cmc
adc
jb
mov
fidiv
xchg
out
retf
in
aam
fs
inc
and
shl
hlt
sub
xchg
sub
adc
xor
imul
loop
mov
jmp
je
loopne
ins
add
or
xor
imul
pop
add
test
mov
retf
or
sbb
xchg
ins
jp
imul
iret
adc
js
inc
cmp
ret
dec
icebp
cmp
push
(bad)
xchg
and
dec
stos
xor
hlt
sbb
xchg
ss
ror
dec
and
pop
mov
jne
or
push
dec
dec
fs
les
outs
test
xlat
imul
loopne
mov
shl
loope
sahf
fistp
outs
adc
adc
cwde
adc
mov
pop
sbb
leave
sbb
xchg
sbb
cmp
push
mov
jmp
(bad)
sbb
test
call
xlat
ret
dec
popa
push
dec
call
xchg
push
ds
jmp
xchg
push
and
mov
out
jne
or
dec
in
les
xor
cld
mov
scas
cli
in
adc
mov
sbb
retf
mov
les
ja
aas
aaa
jl
mov
cwde
das
loop
fisub
cmps
je
and
enter
or
mov
mov
push
loope
mov
pop
pop
ret
call
jmp
inc
shl
cdq
ins
aas
not
and
outs
xor
ror
ret
ds
pop
adc
pop
aaa
mov
lea
sub
aaa
xor
inc
mov
outs
stos
xor
call
fcmovnb
push
pop
lahf
fmul
frstor
and
push
movs
pop
mov
jp
das
push
aam
mov
aaa
adc
sbb
ss
push
out
icebp
(bad)
xor
loope
cmc
popa
jp
cmp
inc
and
lods
cmps
sbb
push
out
jp
mov
push
dec
es
(bad)
cmp
jae
not
inc
mov
int3
ins
mov
inc
cwde
retf
aad
sbb
pop
and
and
sbb
jbe
push
stc
out
cmps
shl
push
cwde
inc
and
(bad)
aad
dec
jne
mov
mov
sti
mov
cld
lock
or
inc
mov
adc
sub
out
icebp
xchg
dec
int3
push
iret
out
repz
or
inc
push
adc
xor
mov
fwait
loope
push
(bad)
adc
sub
in
adc
mov
xor
ins
dec
mov
cdq
(bad)
pop
es
fwait
pop
mov
adc
in
les
arpl
jle
inc
xor
and
add
push
fs
push
ins
mov
jge
icebp
dec
and
mov
test
xchg
pop
jge
push
lods
and
(bad)
lds
imul
jecxz
les
xor
push
cmp
ror
mov
sbb
mov
repnz
fst
lock
sahf
and
adc
outs
jb
push
sub
ins
gs
pop
cmps
push
mov
div
dec
cmps
cmp
jo
retf
int
push
mov
(bad)
icebp
sbb
pop
sub
rcl
int3
retfw
jbe
pop
push
sbb
jns
rol
int
nop
cmp
sbb
cmp
mov
push
or
fstp
ins
leave
add
outs
sub
mov
sbb
add
push
cmp
test
jl
jecxz
mov
cmp
sub
jecxz
inc
adc
push
js
mov
mov
push
adc
mov
cs
or
repnz
jne
sti
inc
mov
and
cmp
jae
(bad)
cmps
lods
into
jecxz
push
sar
in
mov
mov
inc
and
movs
fimul
push
lods
xchg
out
mov
repz
scas
xchg
ins
sub
or
stc
lods
jp
pop
xor
xchg
mov
xor
js
or
aam
mov
push
fsubr
sahf
xchg
test
mov
or
lods
jg
mov
mov
nop
sbb
out
pop
sbb
pop
leave
push
dec
loopne
mov
and
retf
push
call
aas
scas
or
(bad)
jge
call
xor
in
std
push
daa
pop
sub
(bad)
jmp
mov
mov
dec
test
push
add
add
or
popf
lods
scas
(bad)
or
(bad)
fdivr
pop
aam
push
push
inc
loopne
sahf
push
scas
pop
jne
pop
(bad)
std
pop
loopne
dec
mov
jg
stos
shl
test
call
in
cmc
repz
add
fisttp
pop
inc
cli
pop
inc
mov
nop
call
call
int
popa
bound
cmovp
loopne
jmp
enter
(bad)
cli
push
not
add
sub
or
add
jle
lea
dec
fs
and
neg
rcr
fcomp
add
sub
rcr
fldenv
popf
dec
(bad)
add
cs
inc
mov
mov
push
mov
sbb
in
mov
xchg
jmp
aas
mov
std
xchg
das
aaa
cld
push
mov
clc
aas
add
repnz
lock
ss
fsub
cdq
cmp
scas
repz
(bad)
aas
dec
mov
mov
mov
cmp
xor
or
aad
cmps
adc
xchg
nop
and
fidiv
in
push
jp
test
fbld
icebp
arpl
sti
jecxz
pusha
repz
push
(bad)
xchg
jp
stos
or
pop
pop
push
and
loope
ds
inc
adc
and
aaa
push
sub
ret
sub
xchg
cmps
xor
in
and
(bad)
fsubp
adc
mov
stos
mov
pop
pop
add
sub
xchg
inc
jno
test
cld
(bad)
xor
add
daa
int3
mov
xor
fild
out
imul
icebp
retf
dec
scas
xlat
sbb
and
(bad)
adc
mov
mov
addr16
out
mov
adc
cmps
cli
sbb
pushf
movs
adc
lods
popf
rcr
xchg
ss
ss
icebp
stos
dec
dec
ss
out
ror
or
icebp
mov
xchg
mov
push
scas
xchg
xchg
sbb
fs
cwde
mov
mov
imul
hlt
dec
jno
jg
or
sahf
xchg
push
mov
ins
mov
mov
jge
and
mov
add
sub
std
add
leave
stos
out
or
icebp
xchg
xchg
pusha
lods
adc
cmps
or
pushf
lods
out
movs
cmps
jno
arpl
rcr
(bad)
test
mov
jmp
xchg
shl
sbb
pop
cmp
add
(bad)
sar
xor
add
pushf
or
test
push
arpl
daa
xchg
fist
mov
inc
cmp
xor
dec
adc
mov
and
push
gs
adc
aam
repnz
les
pop
inc
rcl
xchg
call
pop
xchg
aad
clc
icebp
jmp
adc
cli
ror
mov
test
sub
mov
adc
out
mov
jmp
xor
add
push
mov
(bad)
dec
cmp
mov
add
into
stc
lds
xor
retf
in
or
jmp
push
iret
cs
push
or
jge
jbe
jns
lahf
sub
repnz
mov
or
mov
data16
(bad)
jmp
xor
xor
shl
ret
imul
inc
xor
ds
call
mov
scas
clc
lock
pop
mov
jl
mov
cmp
cmp
test
mov
bound
cmovl
(bad)
fadd
jne
mov
and
mov
sar
adc
push
call
pop
push
shr
adc
sub
jns
retf
mov
push
shl
or
fadd
push
ins
or
lods
mov
(bad)
mov
jbe
test
inc
fcom
push
mov
mov
xchg
mov
pop
xchg
sbb
and
jmp
push
addr16
out
jg
and
aam
sbb
les
push
lea
fidivr
xor
xor
data16
test
pop
pop
adc
call
or
fucomip
adc
jne
or
(bad)
jmp
retf
out
fsubr
sub
mov
jns
sti
push
arpl
(bad)
(bad)
out
(bad)
mov
or
inc
sub
sbb
inc
push
jne
add
jmp
gs
icebp
push
test
test
mov
cmp
jo
pop
out
cmp
push
adc
sbb
jb
aaa
and
ret
pop
mov
or
in
xchg
retf
jmp
outs
dec
icebp
repnz
mov
ss
xchg
cli
pushf
pop
leave
mov
scas
fcomi
mov
movs
data16
mov
cli
fnstsw
test
push
nop
adc
cmps
sbb
bound
lock
and
aas
sub
and
sbb
nop
ficom
shl
pop
shl
xor
frstor
and
adc
pop
jb
sahf
adc
mov
enter
dec
lea
xlat
std
and
data16
iret
add
mov
fidiv
retf
imul
and
mov
movs
jno
add
add
fdiv
cmc
push
mov
shr
jmp
add
cmp
sub
mov
pop
sub
inc
lods
bound
stc
int3
addr16
mov
xor
fst
jg
fdiv
mov
aaa
pop
mov
pop
lods
jge
sbb
and
mov
fistp
es
push
mov
push
jmp
loope
pop
push
(bad)
scas
imul
(bad)
shr
pop
cld
sub
adc
mov
or
pop
cmp
add
(bad)
mov
xchg
lea
adc
pop
sahf
cmp
lock
adc
into
cmp
cli
sub
repz
adc
out
call
xor
fldenv
or
pop
cmps
mov
add
hlt
mov
jns
dec
test
cmp
daa
fstp
pop
inc
jno
popf
mov
lods
hlt
sbb
in
jl
aad
push
xchg
jecxz
fcmovnb
scas
arpl
fs
push
out
repz
stos
sub
xchg
mov
fdivr
ss
fnstcw
jg
leave
cmp
or
and
or
inc
push
mov
lea
push
cli
or
push
fldcw
in
icebp
sub
test
adc
fcomp
cli
inc
movs
mov
cmp
movs
or
shr
sub
imul
mov
imul
sub
mov
ins
pop
push
stc
test
sub
dec
inc
and
and
ins
mov
mov
scas
jmp
fs
mov
data16
je
cwde
inc
adc
leave
movs
jge
jae
xor
pop
addr16
gs
loope
bound
add
imul
rol
cmp
popa
xor
dec
add
or
mov
lahf
xchg
adc
in
inc
dec
popa
imul
inc
adc
scas
adc
fldenv
add
inc
inc
push
add
mov
push
dec
xor
push
ins
sbb
mov
lock
cmp
xor
mov
dec
es
mov
call
out
aam
xor
adc
push
inc
and
sub
lods
cmps
and
je
gs
lods
sbb
aam
push
(bad)
mov
imul
ins
dec
loopne
sbb
or
pop
movs
stos
aam
dec
and
mov
(bad)
aas
push
and
rcr
jl
push
jmp
das
sub
push
cmp
jle
stc
mov
pop
and
(bad)
fidivr
mov
test
leave
and
xor
mov
sbb
mov
sbb
lds
jb
cmps
adc
pusha
stc
xchg
adc
test
jno
(bad)
mov
iret
ret
push
call
in
popf
rcl
aas
jbe
mov
aaa
xchg
push
(bad)
inc
jno
and
outs
daa
cwde
jne
mov
gs
sbb
hlt
or
(bad)
mov
adc
ficomp
fsubr
repnz
icebp
xchg
jmp
ret
imul
adc
or
inc
scas
adc
or
mov
test
(bad)
out
lahf
or
sbb
ins
inc
arpl
repz
sbb
(bad)
xchg
push
out
mov
xchg
in
jae
pop
mov
and
out
xor
mov
test
and
or
pop
pop
in
cmc
and
mov
lds
stos
fdivr
icebp
test
mov
pop
add
mov
(bad)
aaa
lea
or
mov
inc
bound
push
js
sub
rol
pop
or
sti
mov
nop
jae
push
enter
pop
and
sar
in
mov
pop
jecxz
in
mov
scas
mov
dec
icebp
mov
in
jnp
sub
(bad)
fdivr
jns
bound
ja
(bad)
mov
(bad)
jns
mov
clc
iret
into
mov
add
test
lods
xor
sub
and
aas
aad
mov
scas
add
mov
outs
inc
sahf
sbb
mov
sub
(bad)
adc
inc
or
or
mov
aas
or
jp
sbb
jg
and
ret
add
cmp
fadd
nop
test
or
add
jge
mov
mov
fstp
or
dec
(bad)
fcmovnu
or
sub
outs
sbb
into
mov
mov
outs
hlt
out
sub
dec
or
data16
ret
jnp
(bad)
mov
mov
lock
or
sub
dec
sub
test
adc
in
or
mov
cmp
stos
sub
mov
mov
in
cs
cmps
mov
sbb
aad
jle
ror
scas
sar
mov
xchg
out
xchg
sub
xor
sahf
retf
and
pop
test
nop
mov
push
push
and
inc
retf
fwait
(bad)
jg
jmp
add
xchg
dec
es
fmul
and
sbb
fistp
xchg
mov
sbb
push
je
imul
mov
nop
mov
push
dec
sbb
or
add
out
lods
push
or
xor
or
jp
push
add
xchg
jmp
(bad)
gs
add
add
int3
sub
dec
xlat
ins
enter
scas
cmp
inc
shl
cmp
and
jl
hlt
cmp
in
sar
and
out
test
sbb
xor
inc
ds
cwde
(bad)
inc
clc
dec
and
test
adc
push
(bad)
or
sub
repnz
and
cdq
(bad)
bound
sbb
loope
xchg
sub
gs
lods
jmp
mov
xchg
ret
jne
fdivr
sbb
inc
test
(bad)
cwde
sar
cmp
mov
adc
xor
pushf
xor
cmp
add
movs
in
mov
ins
dec
pop
imul
inc
jge
repnz
lods
call
cmps
je
pop
ja
fdiv
mov
popa
mov
mov
xchg
cmp
ret
test
mov
test
(bad)
mov
hlt
jle
pop
inc
push
fld
repz
dec
pop
fsub
int3
rol
adc
arpl
mov
nop
sbb
sub
fimul
mov
es
push
aaa
ss
add
rol
push
sahf
mov
aaa
fucomi
retf
xchg
fnstsw
push
loope
ds
jg
add
in
int3
jg
(bad)
xor
dec
add
mov
sub
ja
out
sub
ss
scas
ss
xor
mov
imul
jne
test
ret
les
das
aam
call
pop
jg
sub
xor
outs
in
leave
hlt
mov
jo
and
adc
and
inc
cmp
sbb
gs
fild
loope
and
push
call
mov
mov
retf
xor
mov
test
nop
or
cmp
pusha
adc
jmp
jns
je
pop
repnz
cmp
mov
retf
push
and
pop
(bad)
ficom
xor
movs
dec
out
loopne
mov
xlat
shl
lock
cli
cdq
and
dec
setp
sub
div
pop
into
scas
dec
jge
out
gs
addr16
ins
movs
mov
add
enter
pop
loope
cmp
test
jg
das
or
jmp
out
inc
scas
adc
int
mul
shl
mov
sbb
movs
(bad)
rcr
add
jbe
jl
mov
call
push
jmp
mov
out
xor
(bad)
(bad)
dec
inc
mov
mov
dec
les
push
cmp
jl
pusha
lea
sti
inc
movs
hlt
or
jnp
fldcw
mov
bound
push
mov
push
ficom
push
cmp
add
jmp
add
and
in
jmp
jmp
mov
add
es
add
(bad)
shl
pop
add
mov
data16
xor
dec
xlat
retf
mov
or
xchg
and
int3
fadd
adc
enter
and
sub
cld
fiadd
loope
imul
and
xor
dec
aad
loop
push
jb
and
adc
push
test
and
xchg
lea
push
sub
sub
jecxz
pop
mov
dec
sbb
aam
push
pop
loopne
mov
lds
aad
adc
mov
inc
mov
xchg
push
outs
jns
daa
popf
cdq
clc
stc
retf
movs
aas
xchg
out
push
lock
stos
stos
pop
int
adc
fdiv
adc
sub
stos
xchg
xchg
cwde
push
jae
inc
or
xchg
(bad)
mov
and
jo
and
call
sbb
(bad)
mov
dec
mov
push
mov
mov
add
fisubr
dec
je
mov
gs
sbb
adc
mov
pop
aaa
adc
out
push
sub
push
pop
jne
mov
je
sub
sar
pop
pop
push
mov
ja
enter
call
out
dec
sti
pop
fcomp
push
popa
mov
lahf
pop
mov
retf
sub
push
ficom
test
ss
push
aad
cmp
sbb
add
fs
jne
jb
rcr
pop
sbb
popf
add
into
mov
mov
jo
ds
int
add
mov
push
pop
aam
fs
sub
xor
icebp
in
jno
ret
call
jl
cdq
loopne
(bad)
neg
xchg
sar
out
repnz
cmp
pop
ret
ret
in
rol
jbe
out
aas
out
push
das
push
mov
mov
mov
cmp
not
inc
fisub
not
sub
inc
inc
dec
psubsw
movs
leave
jns
mov
in
test
imul
jp
push
not
pop
out
pop
pop
and
cmp
adc
popf
lods
mov
(bad)
retf
arpl
daa
xchg
push
and
dec
pop
mov
fld
test
test
outs
and
aaa
fld
sbb
jecxz
jl
cmps
adc
jp
add
dec
jne
xchg
mov
add
mov
dec
xor
inc
test
mov
fdiv
das
pusha
cmc
add
xchg
mov
movs
mov
je
dec
jnp
lds
icebp
es
test
out
(bad)
sbb
xor
jno
push
sub
pushf
sti
fs
stos
loope
call
add
cmp
int
sub
(bad)
push
sti
or
and
push
mov
jnp
(bad)
pop
(bad)
hlt
addr16
nop
jo
mov
aam
aam
div
bound
out
lock
fidiv
shl
pop
lea
mov
dec
push
push
xchg
or
sbb
js
fdivr
repz
pop
cmps
mov
ror
cmps
xchg
sbb
add
xchg
mov
push
xor
ror
or
push
dec
dec
call
call
pop
daa
cs
aam
or
cmp
mov
push
lea
int3
mov
pop
ins
test
xor
dec
mov
mov
jge
loope
and
push
retf
or
push
inc
test
pop
sbb
sub
lea
nop
push
mov
call
daa
out
adc
fcmovne
mov
mov
sbb
push
sub
mov
mov
xor
cmp
retf
xor
(bad)
in
int3
jmp
pop
mov
add
adc
out
push
mov
add
popa
cmp
and
xchg
sbb
fwait
or
mov
enter
xchg
fmul
jle
cli
outs
pop
jne
mov
xor
xchg
(bad)
mov
imul
and
pop
xor
add
iret
int3
xor
test
jne
imul
dec
test
inc
push
sub
sbb
adc
sub
add
int3
mov
out
loopne
add
and
add
pop
aam
inc
jnp
popf
mov
pushf
inc
mov
mov
aad
fsub
mov
les
mov
pop
imul
cmp
xchg
mov
jge
fldenv
mov
xor
popf
hlt
scas
es
jbe
outs
out
cmp
cwde
cmp
fidiv
(bad)
mov
xor
iret
in
sbb
add
or
loop
push
mov
test
mov
inc
je
sbb
pushf
ret
or
sbb
cmp
retf
jo
cwde
push
pop
pop
sahf
pop
adc
pop
mov
jp
xchg
adc
jo
or
not
pop
xor
or
adc
inc
cwde
jecxz
mov
inc
and
mov
cs
movsx
and
inc
mov
inc
ja
inc
je
jnp
stc
in
xor
test
mov
inc
lahf
xor
std
outs
mov
mov
gs
mov
sbb
out
sub
mov
pop
retf
jle
push
and
addr16
and
retf
dec
add
push
(bad)
iret
xchg
dec
add
jp
ret
sbb
popa
sbb
cmp
gs
or
xchg
js
sub
inc
jg
sub
out
out
pop
dec
and
pop
cli
loope
jbe
dec
jo
push
or
in
mov
jne
push
sbb
dec
or
bound
aaa
pop
push
xor
mov
push
jns
or
mov
mov
scas
rol
cs
js
mov
mov
pop
mov
and
pop
retf
fnstcw
jbe
and
fs
faddp
test
movs
push
mov
aaa
or
dec
push
dec
pop
imul
sub
dec
movs
mov
fs
jge
xchg
pop
sar
lods
or
int3
push
dec
inc
cmp
push
adc
enter
sub
mov
xchg
fbld
xor
jb
jno
repz
aas
xchg
ss
mov
pop
push
inc
stos
loope
fs
lahf
dec
push
lds
sub
outs
or
sahf
lods
push
xor
movs
sbb
aas
mov
mov
push
xchg
les
shl
(bad)
mov
and
leave
jp
packuswb
mov
jns
test
cmps
scas
jb
(bad)
mov
xchg
mov
xchg
pop
jg
ds
lahf
shl
or
push
cmp
aas
push
jne
out
push
rcr
ret
call
jno
stos
rol
sub
jbe
xchg
retf
sti
push
mov
ror
and
ss
cmp
in
xchg
or
inc
inc
cli
xor
push
mov
mov
sub
mov
inc
add
out
cmps
sbb
in
pushf
mov
addr16
sbb
mov
(bad)
jae
enter
movs
xor
and
ins
pop
popf
sbb
mov
mov
jle
cmp
out
daa
push
fadd
add
fs
cli
sub
bound
jno
stos
outs
xchg
and
loope
dec
xchg
pop
addr16
inc
mov
sbb
pop
pusha
stos
ja
mov
inc
pushf
lods
add
(bad)
movs
aad
xchg
push
shr
or
jmp
in
jno
mov
pop
test
dec
lea
pop
jnp
into
dec
xlat
add
cmp
xchg
mov
cs
xor
ss
enter
repnz
fld
push
cmp
xchg
fsub
call
sahf
sahf
loopne
pushf
mov
rol
mov
(bad)
iret
and
scas
sub
retf
xor
inc
hlt
adc
out
sbb
adc
test
mov
cld
jge
shr
inc
pusha
mov
sub
pop
adc
scas
xor
pop
push
xor
fadd
sbb
jmp
arpl
jmp
pop
sbb
cli
pop
ins
xor
pop
fld
jmp
push
inc
(bad)
xchg
push
sub
push
add
push
fild
dec
xor
push
inc
and
rol
fild
repz
dec
fstp
shl
cmp
clc
loop
xchg
cdq
rcl
dec
mov
dec
xchg
fwait
jg
fwait
adc
add
imul
and
sar
dec
mov
neg
aas
std
es
popf
inc
sar
ja
push
out
mov
daa
jecxz
sbb
sub
push
(bad)
sub
call
call
stos
(bad)
cld
(bad)
push
adc
hlt
mov
pop
(bad)
out
push
out
daa
sbb
stos
add
(bad)
and
arpl
dec
mov
shl
sub
repnz
icebp
enter
rcr
outs
dec
dec
xchg
data16
mov
push
cmp
or
stos
jno
std
cmp
shl
dec
outs
in
and
addr16
js
fdiv
mov
pop
fidivr
stos
push
adc
mov
sbb
sbb
mov
xchg
adc
shr
test
arpl
pop
add
and
add
and
iret
imul
pop
movlps
call
hlt
mov
mov
adc
mov
mov
inc
out
cs
lods
loopne
mov
and
mov
dec
cmp
neg
mov
xor
sub
stos
sub
loope
adc
retf
dec
xor
pop
jp
jnp
fidivr
daa
push
xor
mov
xchg
(bad)
fild
test
pop
xchg
adc
cmc
mov
pop
pop
adc
je
mov
add
pop
sahf
je
xchg
lahf
xchg
fsubr
push
repz
xor
icebp
mov
arpl
sbb
cld
add
inc
cmp
cmp
cmc
int3
push
sub
(bad)
das
leave
xchg
or
ins
add
mov
movs
push
fmul
fisubr
mov
lods
adc
inc
sub
mov
sub
push
jmp
int3
mov
stos
sbb
cmp
or
lods
popf
cld
in
pop
dec
or
pop
add
sbb
xor
in
xlat
xchg
jno
dec
in
xchg
inc
dec
cs
push
dec
movs
jp
scas
xchg
inc
stos
imul
mov
adc
leave
stos
loope
inc
jne
aas
lea
cwde
mov
mov
nop
or
xor
sar
jbe
cld
popa
rol
aam
mov
cmps
mov
test
sub
xchg
pop
mov
mov
or
or
jle
push
les
(bad)
jne
and
out
pop
stos
popf
retf
jle
add
jg
ins
sub
or
(bad)
stc
pop
(bad)
fcomp
sub
aaa
repz
jbe
lock
ins
loopne
add
or
movs
mov
push
dec
dec
(bad)
es
stc
leave
mov
jns
(bad)
into
mov
outs
mov
add
dec
push
and
inc
inc
and
stc
inc
jl
mov
lock
jle
push
push
adc
push
xchg
mov
jmp
adc
popf
std
aaa
push
pop
add
pop
push
inc
adc
sar
add
jmp
xor
cmc
lock
push
ins
dec
jge
shr
xlat
fs
fstp
mov
jg
xchg
mov
sbb
and
imul
and
sbb
int
pop
and
popf
iret
pop
jns
inc
scas
rcl
xor
cmp
mov
cmps
shl
xor
ins
cmps
push
fsub
jmp
loop
das
push
jbe
dec
cmp
stos
pop
shl
lods
jle
cmp
xor
imul
and
icebp
dec
adc
ficomp
(bad)
mov
imul
sub
xchg
add
sbb
mov
push
hlt
aam
mov
mov
and
inc
add
in
sub
xchg
or
cmps
ror
call
loopne
loope
nop
jnp
dec
add
stc
ss
jns
or
adc
push
jge
pop
cmp
aas
mul
xor
cld
mov
test
and
jne
mov
test
jge
push
add
call
data16
jmp
push
pop
fadd
jp
inc
jmp
retf
push
nop
jg
mov
mov
mov
mov
cmp
fstp
mov
dec
xor
fwait
jp
inc
popa
jmp
add
dec
or
cmp
scas
add
(bad)
xchg
sbb
mov
pop
pop
mov
cmp
pusha
aas
or
pop
push
mov
dec
mov
pop
data16
or
sub
ins
sahf
lods
xchg
outs
into
sub
sub
jo
inc
in
and
fmul
and
outs
stos
arpl
push
dec
push
mov
dec
mov
movs
mov
and
pushaw
cld
or
fs
xchg
and
or
xchg
push
mov
lock
fcompp
lock
clc
add
mov
xor
dec
jbe
adc
jbe
xchg
push
mov
xor
aad
das
push
mov
imul
push
inc
hlt
cli
pop
mov
test
lock
dec
hlt
add
xchg
or
fisubr
loopne
repnz
inc
in
mov
pop
sub
xchg
dec
inc
pop
mov
outs
and
jbe
sbb
add
aaa
lods
sbb
and
fcmove
inc
shl
sub
xchg
neg
pusha
addr16
cld
mov
adc
sbb
int
in
sar
inc
scas
jns
test
pop
scas
fcomp
ret
sbb
inc
scas
shl
jle
test
adc
pop
nop
addr16
pop
repnz
inc
cmp
push
inc
outs
sbb
mul
mov
and
int
jb
mov
imul
shl
imul
es
retf
add
xchg
push
(bad)
fucomi
in
push
mov
in
aad
daa
dec
adc
pop
push
add
out
shl
xacquire
or
jns
pop
mov
push
clc
mov
rol
xor
lock
push
ret
jl
and
mov
lock
push
xor
aam
inc
out
in
scas
les
outs
adc
mul
(bad)
adc
xor
std
dec
add
ja
movs
mov
test
icebp
hlt
dec
rcl
in
jge
or
stc
test
test
pop
imul
mov
xor
icebp
mov
sbb
jp
mov
push
ds
movs
dec
push
push
add
je
push
push
loope
cmps
pop
add
xchg
pushf
fcomp
out
mov
lea
in
rcr
ins
jns
adc
call
das
retf
cmp
xor
dec
int
adc
popf
mov
and
test
cmovae
dec
bound
nop
jb
push
xchg
ins
pop
and
inc
xor
mov
leave
imul
daa
xchg
push
xor
mov
mov
mov
xor
aas
(bad)
repz
cmp
retf
jns
js
ja
std
push
and
clc
fistp
shl
pop
rol
cmp
in
(bad)
repnz
repz
sbb
das
mov
sbb
jne
jne
ror
cmp
dec
outs
pop
(bad)
loop
add
loope
hlt
data16
js
daa
and
cli
and
std
popf
or
ret
shl
xchg
sub
push
mov
sahf
dec
sub
clc
pusha
xor
jmp
or
jg
pop
sub
or
dec
(bad)
sub
cmp
xchg
aad
outs
mov
dec
pop
int3
sub
hlt
test
out
mov
pop
loop
lods
mov
movs
sbb
scas
outs
bound
push
mov
sahf
mov
in
add
adc
inc
popf
std
das
xor
mov
arpl
adc
dec
lock
and
cmp
inc
fisubr
(bad)
shl
dec
inc
adc
test
sbb
int
xchg
inc
rcl
ret
in
push
fild
pop
sub
and
lock
mov
xchg
pop
add
sub
mov
pop
dec
fs
mov
xor
out
jecxz
call
outs
int
daa
adc
bound
xor
jae
rcr
dec
cmp
shl
hlt
sub
loopne
xchg
js
inc
or
sub
daa
aas
out
mov
mov
inc
(bad)
std
out
fiadd
lods
retf
cmp
ds
inc
retf
adc
jmp
cs
mov
adc
pop
std
or
repnz
es
xor
dec
add
shl
neg
arpl
xor
mov
es
jo
arpl
xchg
jp
jmp
out
ins
movs
lock
rcr
sub
adc
xchg
scas
shl
jmp
mov
push
in
movs
sub
(bad)
cmp
and
fmul
add
and
ss
ss
or
data16
push
pop
fucom
aaa
xchg
lahf
pop
and
xchg
mov
sar
das
(bad)
xchg
mov
stos
js
dec
jmp
push
mov
dec
push
jge
push
loopne
xchg
push
rcr
push
sar
push
cmps
clc
aas
push
(bad)
xor
lock
das
std
xchg
pop
or
js
retf
out
add
pop
adc
cmovae
loopne
lock
sahf
jmp
mov
xor
out
rep
sub
adc
inc
in
push
mov
bound
stos
cwde
dec
add
sti
sahf
jns
out
sub
adc
outs
fsubr
(bad)
mov
mov
and
mov
les
xchg
jno
in
jmp
and
mov
aas
cwde
jecxz
clc
add
jno
iret
bound
(bad)
test
and
aad
icebp
sbb
sbb
sbb
cmps
sub
dec
adc
xchg
xor
xchg
loop
xchg
jecxz
sbb
xor
(bad)
in
sub
push
jne
sbb
das
shr
push
cmp
ror
bound
fwait
pop
and
push
test
and
popf
push
ficom
inc
xchg
cmp
movs
out
sbb
mov
imul
mov
or
loope
and
and
and
es
int3
cmps
xchg
mov
cmp
sbb
stos
dec
icebp
or
cmp
mov
jecxz
outs
lea
and
push
aad
jns
fld
sbb
and
mov
popa
sub
add
inc
sbb
data16
jl
xchg
sbb
retf
adc
mov
lock
mov
xchg
dec
add
pop
add
(bad)
cmp
jae
icebp
fnstcw
lods
jmp
adc
xchg
jmp
enter
push
or
or
repz
mov
nop
int
mov
dec
xchg
shl
out
stc
loope
(bad)
call
cmps
sbb
js
lds
das
aam
add
aam
lahf
scas
push
nop
in
pushf
cmp
and
(bad)
clc
inc
push
sbb
mov
aaa
icebp
fld
int3
dec
xor
ja
or
(bad)
div
in
sub
cmp
or
movs
push
scas
mov
jns
or
addr16
sbb
xchg
mov
jle
cli
movntq
stos
cwde
push
js
inc
sbb
ss
inc
js
push
push
fs
dec
sahf
mov
lahf
lock
jmp
mov
nop
das
xchg
ret
or
std
and
jns
(bad)
in
jmp
in
jbe
sub
lods
inc
leave
cmp
mov
arpl
push
pop
call
in
inc
aad
clc
aas
pop
jge
dec
inc
mov
fs
mov
ins
add
fadd
int
xchg
rcl
lea
ss
mov
dec
outs
data16
scas
pushf
push
rol
fs
pop
and
pop
std
push
sub
dec
pop
enter
and
cwde
in
arpl
add
(bad)
bnd
out
inc
sub
sbb
pop
les
dec
pop
lahf
xchg
sbb
dec
and
cmp
push
or
aam
(bad)
in
int
jmp
hlt
mov
xchg
fimul
pushf
pop
arpl
add
dec
push
ficomp
mov
mul
inc
adc
sbb
dec
test
inc
pusha
or
packsswb
mov
add
inc
cmp
jg
dec
(bad)
call
inc
mov
mov
sbb
pop
lods
retf
pop
fcomp
out
pushf
mov
in
mov
pop
mov
xchg
mov
mov
mov
ja
mov
lds
mov
jmp
jl
mov
jne
push
jle
dec
mov
mov
xchg
stos
xchg
scas
mov
and
push
stos
and
jno
lods
fldenv
mov
jnp
mov
retf
mov
fistp
sbb
push
das
jb
or
sbb
repnz
cs
sub
mov
je
call
jmp
aam
dec
sbb
jp
in
movs
retf
sub
mov
shl
mov
repz
ficom
jl
jl
mov
and
popf
mov
pop
fstp
mov
xor
sub
adc
jge
dec
(bad)
sub
fs
leave
cmp
das
(bad)
lods
cwde
xchg
mov
ins
ss
shl
mov
jb
fidiv
mov
mov
(bad)
outs
iret
jb
or
push
mov
test
inc
fcmovbe
xchg
push
push
test
jg
(bad)
gs
loop
fs
popa
mov
jmp
test
int
sbb
jle
lds
mov
xor
pop
fstp
dec
jecxz
add
push
mov
xor
mov
fiadd
out
jmp
mov
jecxz
aas
mov
cmps
sbb
cmps
scas
adc
add
pop
mov
icebp
loope
add
cmp
inc
pop
adc
js
out
cmp
sahf
dec
add
out
das
adc
and
and
sbb
mov
in
scas
stc
xchg
daa
cmps
lds
cmp
jnp
stos
cmp
push
nop
stos
rcr
(bad)
hlt
add
data16
gs
inc
shl
cmps
or
mov
in
(bad)
jl
iret
jae
inc
sbb
jbe
cli
add
rcr
test
clc
dec
pop
mov
adc
jecxz
jo
movs
mov
cmps
jecxz
movs
inc
jecxz
iret
call
dec
test
jb
sub
mov
adc
pop
sub
test
cmps
shl
adc
je
fwait
test
js
imul
dec
add
ja
cmp
or
mov
mov
sbb
or
xor
jecxz
stc
(bad)
jmp
test
(bad)
cmp
sbb
(bad)
test
in
push
out
jge
mul
iret
push
imul
ds
push
ins
and
movs
test
movs
movs
out
and
rcl
jo
mov
mov
jne
movs
push
pop
retf
cmp
cmp
out
sbb
or
dec
adc
daa
pop
imul
daa
pop
(bad)
sahf
outs
mov
ss
into
pop
test
mov
cmc
test
in
bound
mov
jno
sbb
or
lock
les
das
(bad)
test
add
inc
jge
hlt
addr16
cs
outs
in
iret
lahf
fwait
stos
shl
out
clc
or
push
into
pop
push
stc
xchg
jmp
or
xor
xchg
fwait
popf
mov
dec
out
xchg
outs
fcmovne
js
sub
mov
or
aaa
xchg
mov
ins
repz
xor
sub
cmp
scas
cld
test
icebp
retf
mov
dec
inc
and
inc
lds
stos
movs
sbb
sub
lods
inc
inc
leave
(bad)
dec
push
sbb
dec
push
xchg
movs
dec
clc
bound
push
cli
sub
jp
sub
je
mov
mov
test
jo
imul
or
repnz
cmp
dec
test
rcr
mov
imul
cmp
loope
push
mov
les
add
push
mov
lock
stos
dec
jmp
dec
cmps
mov
ss
xchg
popa
mov
mov
cmps
mov
scas
or
das
(bad)
mov
pop
mov
outs
iret
loope
sbb
out
add
adc
sub
xor
jbe
mov
retf
sbb
or
xor
push
in
push
les
movs
ins
sub
mov
mov
push
ins
lds
push
and
loop
xchg
jbe
or
fistp
arpl
sub
adc
stos
mov
adc
(bad)
mov
adc
dec
jecxz
mov
out
lock
add
les
bound
cmp
cmc
jecxz
je
es
in
ret
xchg
cmp
pop
xchg
pop
rol
leave
daa
(bad)
mul
and
jmp
clc
(bad)
push
pop
or
nop
das
fwait
std
rol
and
mov
test
xchg
call
ss
repnz
mov
pop
push
sysret
das
in
(bad)
aam
call
in
cmp
fcomi
(bad)
lea
xor
ins
push
mov
mov
rcr
or
push
mov
popf
inc
fs
mov
add
aam
inc
inc
sub
cmc
pop
or
in
xor
popf
fst
inc
push
jmp
push
int
and
aam
sub
mov
push
loope
push
sbb
dec
pop
retf
cs
in
xor
sub
inc
ret
sahf
or
jns
sub
scas
inc
xchg
gs
fdiv
movs
push
xor
shr
das
mov
sti
fs
xor
mov
les
retf
addr16
xlat
jne
mov
sub
sub
cs
in
ss
shl
mov
dec
test
xor
aas
in
in
cmc
adc
push
movs
std
cdq
outs
call
mov
mov
loopne
(bad)
pop
lea
nop
aaa
cmp
mov
(bad)
lahf
lock
ins
(bad)
fisttp
rcr
mov
mov
int
dec
jbe
xchg
sub
inc
pop
jo
xchg
dec
out
cmp
sbb
stos
mov
(bad)
pop
retf
scas
lds
jmp
and
arpl
xlat
shl
push
fist
icebp
jo
jmp
pop
inc
out
test
xor
pop
es
xchg
div
or
ds
dec
add
cmc
adc
out
jns
sub
push
leave
repnz
jle
std
and
inc
mov
ja
out
inc
pop
dec
clc
mov
push
sbb
push
bound
sub
sub
adc
sahf
sbb
ds
add
in
add
sub
pop
fnstenv
call
test
mov
mov
xor
or
mov
add
mov
push
xchg
jo
fbld
std
mov
pop
shl
into
and
out
and
int3
loop
imul
cs
mov
shl
mov
mov
sub
fmul
fisttp
arpl
fs
mov
inc
clc
mov
push
enter
out
sub
xchg
test
inc
xor
data16
clc
xchg
pop
ror
cs
mov
cli
dec
mov
sbb
fidivr
add
nop
into
jp
inc
sbb
shl
or
push
or
mov
(bad)
lahf
jl
and
sbb
aaa
cdq
inc
sbb
push
test
add
push
inc
cs
popf
fs
mov
int
add
dec
inc
xchg
(bad)
data16
arpl
mov
or
shl
mov
test
jb
imul
shl
aad
enter
mov
sbb
and
push
dec
ins
xchg
sbb
int3
xchg
mov
call
popf
sbb
ret
add
inc
push
(bad)
jae
xor
sbb
or
test
sbb
jne
push
ret
test
(bad)
add
(bad)
pop
test
in
(bad)
jmp
in
in
push
mov
fldenv
pusha
jge
lds
ret
mov
adc
xchg
inc
fisttp
xchg
sahf
sbb
enter
xor
add
sbb
inc
hlt
or
(bad)
stos
test
jle
jne
stos
(bad)
mov
or
push
movs
dec
movs
fcmovne
mov
push
retf
cmp
jecxz
jno
arpl
pushf
mul
fstp
aad
cmp
daa
es
mov
dec
fwait
or
scas
scas
mov
or
mov
test
dec
adc
ss
push
cli
stos
fs
repz
popf
in
push
repnz
sbb
add
out
fidiv
pop
jae
ss
stos
sub
pushf
pop
std
loope
xchg
nop
clc
jecxz
imul
push
das
jmp
(bad)
fisub
pop
mov
adc
jl
pop
jo
cmps
mov
xchg
adc
sub
mov
push
pusha
adc
jbe
out
fs
xchg
sub
cmp
in
loope
aas
cmp
cmp
inc
and
sub
retf
iret
mov
push
pop
jg
jle
(bad)
or
xor
sub
out
and
imul
xchg
loopne
push
xor
es
xor
jmp
rcr
addr16
mov
or
addr16
es
mov
imul
jecxz
call
aas
cdq
or
(bad)
ins
clc
dec
lds
repz
leave
adc
pop
mov
xor
scas
lods
sub
xchg
test
and
dec
mov
test
sbb
(bad)
retf
cmps
mov
mov
aam
inc
sti
push
les
jnp
int
inc
sub
cmp
fimul
sub
in
push
adc
jo
mov
pop
icebp
jecxz
ss
aaa
mov
or
scas
jmp
adc
imul
adc
jmp
pusha
test
push
pop
pusha
nop
adc
lea
loope
mov
int3
pop
push
xor
loopne
cs
test
mov
cs
push
mov
mov
sbb
pushf
mov
mov
test
add
lahf
jp
addr16
leave
add
adc
xor
push
push
and
std
(bad)
pop
popa
push
dec
mov
aad
ficom
out
mov
jno
push
repnz
ret
rol
mov
aam
std
cmp
fs
mov
inc
pop
bound
mov
xchg
retf
in
outs
(bad)
and
loop
cmp
popf
(bad)
stos
inc
fbstp
(bad)
dec
std
pusha
lods
inc
pushf
inc
movs
call
sub
bound
and
sbb
pusha
and
or
inc
adc
pop
data16
stos
jo
push
lods
or
jo
aam
cs
rep
pushf
jp
cs
aaa
gs
mov
stos
loop
jne
stos
sbb
fidiv
dec
sbb
test
jns
xchg
sti
xchg
or
jge
push
rol
stos
cdq
(bad)
sbb
jno
ins
call
clc
and
out
or
pop
sbb
ret
inc
out
int3
(bad)
xchg
sahf
cli
cmp
push
std
fiadd
fdiv
mov
sub
add
fwait
jl
test
sub
aaa
repz
lods
mov
adc
call
gs
push
call
pop
sbb
sub
xchg
jns
jns
cmp
xchg
sbb
and
cmpxchg
or
out
adc
cli
cmp
ret
push
xchg
fs
(bad)
ja
pop
pushf
sar
inc
fisubr
sti
pusha
in
rcl
xor
in
mov
jo
pop
jecxz
push
mov
hlt
adc
inc
sbb
icebp
int3
(bad)
mov
icebp
push
inc
(bad)
in
xor
xlat
jp
and
outs
xchg
cmc
xchg
pushf
scas
int
or
das
test
cwde
jl
xor
stos
sub
jno
mov
fucom
enter
mov
adc
in
jae
push
sbb
mov
adc
push
xchg
lahf
ins
or
dec
mov
fptan
jmp
xchg
clc
into
scas
push
and
cmp
neg
mov
(bad)
mov
inc
call
or
push
mov
retf
shl
xor
js
mov
hlt
repz
jnp
loopne
mov
mov
sbb
inc
dec
and
(bad)
loope
sub
fisub
jmp
push
pop
sbb
jp
adc
sbb
sbb
scas
sub
out
add
push
sbb
cmc
or
mov
mov
cli
gs
into
out
pop
fst
adc
(bad)
out
scas
mov
push
mov
jae
cmp
ret
jl
pop
mov
mov
push
sbb
std
stos
(bad)
pop
xchg
pop
push
jne
xchg
iret
movs
cmp
cmp
in
cli
cmc
cmp
jmp
in
sbb
loop
sti
cmps
xor
or
outs
in
mov
in
cmps
pop
or
sbb
loop
repnz
mov
int
mov
leave
outs
outs
jg
int3
jne
mov
movs
sbb
outs
ins
add
sbb
lods
arpl
fwait
sbb
test
xor
call
mov
sar
lods
in
lds
adc
call
xor
pop
sub
sbb
icebp
push
(bad)
rol
xor
outs
and
sti
mov
aas
sbb
shl
mov
inc
and
xchg
outs
sahf
jmp
iret
mov
cmc
mov
pop
pop
mov
adc
pop
aam
pop
and
mov
xor
out
movups
jnp
scas
mov
mov
rcr
cmp
icebp
das
mov
sbb
aam
fsubr
mov
cmc
sbb
fbstp
and
dec
pop
add
int
jle
mov
xor
bound
sbb
les
aaa
dec
mov
cmp
push
jno
sub
push
jecxz
mov
(bad)
rcl
fstp
cs
adc
inc
cmp
add
xor
sub
icebp
aas
fwait
push
xchg
jge
fisubr
xor
sti
into
and
pop
outs
push
xor
out
std
or
push
(bad)
cmp
sbb
loop
cmp
cmp
xchg
adc
push
mov
jbe
xchg
xor
or
fisub
pop
mov
loope
or
daa
push
dec
push
les
mov
in
out
into
xchg
jecxz
cmp
lods
sbb
test
call
xor
lds
out
push
mov
mov
lahf
ja
or
xchg
add
jmp
int3
push
dec
xor
mov
lock
push
mov
shr
test
repnz
(bad)
(bad)
mov
pop
jmp
or
mov
push
add
aam
push
add
rcl
cwde
or
push
adc
stos
cs
push
ret
xchg
xchg
aam
test
and
sbb
adc
in
push
sub
ss
inc
ss
pop
out
es
pop
or
clc
in
push
dec
stc
mov
cmp
stos
mov
lahf
(bad)
jne
mov
cmps
dec
push
clc
inc
into
pushf
rcr
mov
or
sbb
popf
mov
out
cli
call
xchg
clc
daa
rol
mov
pop
(bad)
push
test
test
cmp
inc
sub
das
dec
mov
sbb
xchg
pop
call
inc
add
pop
mov
sub
jl
(bad)
xchg
es
ss
(bad)
dec
mov
stc
nop
aas
dec
push
lea
mov
inc
in
inc
xor
adc
icebp
cs
jmp
in
retf
xchg
mov
dec
mov
mov
outs
dec
movs
push
mov
push
inc
sub
js
push
js
xor
out
fld
mov
repnz
push
mov
pusha
mov
(bad)
fldcw
or
nop
(bad)
pop
xchg
pop
sub
xchg
mov
cdq
into
test
and
hlt
in
sbb
std
std
mov
shl
aad
and
jmp
and
inc
jno
or
in
mov
mov
dec
xchg
and
jb
adc
fst
imul
jae
mov
cmps
push
jge
or
hlt
btr
js
and
jg
sub
add
mov
cmp
mov
(bad)
pop
xor
lods
add
in
hlt
jmp
popf
fwait
jg
inc
repnz
sub
cmp
jb
xchg
popa
daa
xchg
jl
(bad)
mov
imul
fs
sar
push
push
dec
sbb
rcr
sbb
dec
idiv
ss
sbb
jnp
call
mov
xadd
rcr
jp
mov
mov
imul
mov
push
pop
xchg
pop
sahf
cmps
push
adc
mov
mov
out
cdq
js
inc
in
xchg
sub
out
out
pop
sbb
arpl
int3
stos
movs
add
push
xchg
dec
or
mov
mov
mov
push
jnp
test
mov
or
inc
mul
shl
dec
dec
je
repnz
lds
and
pop
outs
xlat
aaa
sub
adc
sbb
sti
fcomp
int
sbb
mov
out
sub
shl
mov
jg
push
lods
pop
jae
push
mov
sbb
sbb
aad
push
shl
outs
and
in
out
add
fdiv
lods
adc
int
add
outs
sar
pop
test
or
test
loopne
mov
rol
(bad)
xchg
and
sub
call
xor
xchg
push
daa
push
jnp
sti
jb
mov
add
mov
cmp
lods
(bad)
stos
push
cmps
(bad)
ret
pop
pop
dec
cld
(bad)
mov
add
arpl
imul
lock
inc
mov
mov
push
je
inc
lods
movs
adc
loope
cmc
pop
fldln2
in
(bad)
mov
jge
push
jnp
jo
jae
dec
and
gs
mov
loope
dec
ror
inc
retf
add
cwde
pushf
jp
jne
bound
dec
jno
movs
dec
pop
add
mov
mov
jmp
sub
nop
daa
data16
jmp
es
jbe
inc
(bad)
mov
ret
push
jle
jno
jmp
fisttp
fbstp
sub
and
cs
ror
jne
xor
sub
es
lods
mov
aam
xlat
inc
cli
pop
daa
dec
xor
jo
jp
sbb
dec
pusha
or
xor
mov
jmp
inc
lds
ret
movs
out
and
sbb
cdq
mov
pusha
jo
dec
push
push
mov
mov
xchg
adc
pop
pushf
and
sbb
mov
in
(bad)
sbb
add
xchg
pop
or
push
stos
adc
adc
dec
xchg
xchg
add
lahf
add
(bad)
cmp
mov
gs
mov
repnz
mov
xor
jb
mov
inc
sub
aaa
loope
xor
jo
shl
xor
loope
mov
jg
mov
sub
ja
add
and
lock
dec
rol
mov
cmc
bound
add
and
inc
fdiv
sub
in
jae
add
xchg
outs
mov
mov
or
test
rcr
jo
aam
push
fist
dec
push
sti
pop
outs
hlt
lods
sbb
shl
iret
push
cmps
dec
ss
cli
shr
push
into
js
sbb
jle
call
inc
mov
or
jle
mov
(bad)
shl
pusha
cmp
aam
gs
(bad)
fcomi
hlt
fwait
pushf
dec
int3
mov
add
lods
mov
jns
xchg
sub
dec
adc
jle
adc
loopne
xchg
repz
jl
xchg
cld
xchg
add
lock
and
lahf
fst
shr
fs
mov
sahf
int3
pop
in
popa
fidiv
jl
leave
xor
jmp
mov
mov
sub
xlat
xor
sub
cmps
outs
add
aaa
stos
sbb
pop
cmp
xor
stos
cwde
inc
aam
push
sub
popf
sub
in
pop
jnp
movs
sbb
js
bound
pop
inc
ret
push
xchg
repnz
dec
jb
pop
mov
scas
(bad)
cmp
sub
fisubr
cdq
cmp
mov
jle
loop
and
je
push
or
cwde
bound
mov
in
test
int3
(bad)
aas
sbb
cmps
pop
mov
cwde
pop
(bad)
jecxz
mov
xchg
mov
lock
sbb
mov
dec
jnp
hlt
and
xor
imul
call
and
push
(bad)
dec
mov
sbb
ret
movs
fbstp
mov
sbb
in
scas
fucomp
jge
sub
mov
mov
and
inc
mov
lea
hlt
push
cmp
dec
sub
fdivp
cwde
ds
mov
xor
mov
mov
das
call
sbb
mov
call
inc
mov
mov
xchg
pcmpgtw
ja
scas
mov
mov
rcl
movs
int
xor
add
fsubp
jg
mov
nop
aaa
scas
rcr
mov
dec
mov
enter
adc
add
jmp
test
pop
xchg
xchg
inc
cmp
mov
out
xor
cmp
mov
pushf
in
enter
mov
adc
push
jb
mov
out
mov
mov
scas
(bad)
jle
inc
ins
xlat
shl
shl
scas
pop
mov
pop
dec
outs
and
xchg
jge
inc
xchg
arpl
pushf
out
xchg
inc
mov
(bad)
dec
retf
int
mov
cdq
and
je
jbe
gs
inc
loopne
jp
std
sbb
adc
into
mov
jmp
retf
lahf
jno
enter
mov
xchg
jecxz
and
jae
xor
lock
fst
pop
sub
daa
pop
call
jecxz
mov
dec
pop
inc
fidivr
mov
inc
repz
sub
adc
xor
push
inc
push
push
lds
mov
push
fnsave
mov
add
dec
imul
stc
sbb
jecxz
and
and
in
lock
addr16
iret
or
rcr
retf
scas
(bad)
mov
out
and
sub
inc
out
cmovae
(bad)
out
std
gs
ds
mov
out
in
ret
add
ja
sbb
inc
cmp
in
and
int3
std
lock
stos
sbb
cs
imul
cmc
pop
sub
inc
ficom
xor
fist
push
xchg
cmps
xchg
push
sbb
movnti
pop
shr
in
inc
cmp
sub
retf
stos
push
call
mov
movs
cld
jecxz
mov
fwait
mov
xchg
push
fmul
lock
pop
ror
aad
not
shl
std
inc
inc
xor
nop
adc
mov
ret
std
loopne
and
scas
nop
bound
popa
add
jg
jns
or
jecxz
jbe
or
mov
sub
push
sbb
xor
mov
mov
xor
mov
fcom
call
iret
scas
mov
push
pusha
cmc
clc
xchg
jp
das
in
cmp
xchg
adc
or
add
xor
rcr
push
sbb
aad
ins
lods
sbb
and
cmps
xor
in
pop
xor
jbe
sbb
xchg
cmp
adc
loope
jmp
aam
mov
sbb
cmps
sbb
movs
cmp
mov
(bad)
es
dec
out
dec
arpl
cwde
lods
iret
sbb
test
lock
mov
cmps
xchg
sbb
mov
xor
ret
outs
cwde
push
mov
mov
out
(bad)
push
mov
sti
daa
fwait
pop
push
mov
neg
mov
ror
fidivr
outs
fwait
rol
fnstenv
push
cld
sub
and
cwde
leave
mov
call
jnp
out
cmp
imul
test
fstp
push
imul
push
ficom
adc
or
ja
inc
jo
(bad)
xchg
and
dec
mov
inc
mov
mov
adc
mov
das
cmp
fcomp
in
js
push
inc
in
es
leave
ret
dec
loop
jb
lds
and
bound
(bad)
fidivr
inc
xchg
fcom
cwde
fxch
inc
mov
mov
or
push
ret
aaa
test
icebp
aam
cmp
test
dec
ss
scas
inc
jl
call
dec
cwde
mov
ins
test
pop
jbe
sbb
ins
sub
push
(bad)
je
int
icebp
lea
out
out
movs
and
cmc
into
nop
pop
or
push
pop
pop
dec
or
sub
rol
mov
pushw
scas
xor
loop
mov
fistp
jns
jecxz
adc
daa
(bad)
fld
in
add
fwait
(bad)
pop
jns
inc
(bad)
aas
push
rcr
int
jecxz
pop
xchg
cs
out
push
mov
pop
jne
mov
mov
inc
mov
sub
lahf
sbb
repz
pop
rcr
lea
outs
out
jno
mov
add
add
rcr
and
in
div
mov
pop
add
ins
dec
jl
xchg
cmp
mov
xlat
movs
sbb
fs
cmp
loop
xor
add
shl
mov
loop
pop
dec
fs
and
shr
jmp
in
mov
enter
lahf
test
mov
out
pusha
inc
inc
or
les
scas
jge
or
fmul
loope
repnz
push
push
ins
repz
and
(bad)
out
das
and
sti
inc
sbb
xchg
dec
sbb
push
xchg
dec
ja
retf
(bad)
pop
push
sub
inc
fwait
cld
aam
call
inc
cmp
ret
iret
test
and
jp
int
jmp
lock
inc
push
pop
add
or
mov
aaa
inc
jle
enter
pop
test
add
jae
and
lahf
mov
jb
das
fwait
in
mov
and
or
ret
adc
lods
add
xchg
pop
(bad)
bound
pop
push
clc
(bad)
and
add
mov
mov
into
pop
test
pop
ret
test
call
or
sbb
aad
lods
sar
fst
pop
add
fstp
(bad)
pop
jmp
dec
test
dec
outs
loop
ins
push
xchg
fsub
mov
in
pop
rcr
aad
or
xor
mov
xor
push
cmps
inc
xlat
cmp
push
cmp
mov
addr16
xor
lea
mov
mov
xor
mov
dec
(bad)
cli
mov
push
xor
js
pop
mov
xchg
popf
int3
int3
inc
iret
cs
test
sbb
jge
scas
xchg
cmp
icebp
aas
sbb
push
xor
outs
xor
jmp
adc
nop
push
fstp
cwde
dec
inc
fisubr
cmp
cmp
mov
xor
and
xchg
dec
sub
xor
xchg
jecxz
or
aaa
fidivr
add
div
sbb
sar
inc
movs
(bad)
pop
jmp
jl
cmp
sbb
call
stc
(bad)
sbb
dec
inc
or
mov
mov
aas
(bad)
out
pop
stos
mov
hlt
popa
mov
jmp
adc
adc
mov
mov
xor
mov
sbb
in
or
fdiv
and
jmp
scas
dec
rcl
mov
mov
pop
ds
sbb
data16
mov
popa
jne
xor
jno
adc
fiadd
loop
push
and
push
test
cmp
xchg
mov
xlat
ret
mov
imul
cli
mov
arpl
or
call
adc
aad
jmp
xchg
push
shl
sti
xchg
jbe
loop
imul
inc
xchg
int
adc
fdivr
dec
add
sbb
retf
jg
mov
xor
xchg
repnz
pop
bound
aad
sub
push
imul
cli
jp
add
cdq
adc
jg
jno
test
xchg
scas
ins
push
mov
(bad)
call
mov
les
inc
ds
sbb
mov
sbb
popf
push
or
ficom
xor
xor
push
jge
fwait
sbb
jo
mov
fdivr
lods
loopne
pop
pushf
sbb
cs
(bad)
mov
inc
xor
add
inc
adc
repz
jnp
adc
xor
mov
adc
rcl
out
repz
cmps
ret
mov
hlt
xchg
dec
(bad)
sbb
cmp
xchg
mov
sub
movs
ins
add
into
or
push
inc
cmps
fst
(bad)
icebp
xchg
xchg
pushf
jge
outs
daa
mov
xchg
or
(bad)
sub
rcl
jae
jno
cmp
call
dec
push
mov
aaa
loope
ficom
loop
and
lods
movs
sbb
shld
dec
cmps
jle
fdiv
js
(bad)
cmp
fidiv
rol
ja
rcl
xchg
(bad)
inc
pop
rdpmc
sbb
cmps
loopne
dec
movs
sub
test
mov
sub
mov
xchg
sbb
icebp
inc
adc
pop
cmps
dec
sbb
xchg
sub
mov
in
mov
jg
loop
xor
push
mov
icebp
xchg
sbb
into
sbb
adc
imul
into
push
push
add
pop
in
dec
cld
ror
pop
jae
push
enter
call
push
shl
cmp
inc
or
fcom
jb
add
push
inc
cmp
jne
(bad)
sub
and
sub
mov
xchg
add
test
adc
sub
les
cli
fimul
or
push
pop
aaa
clc
dec
gs
enter
pop
xor
arpl
jecxz
sub
and
mov
push
or
mov
mov
jne
das
pop
jle
in
icebp
and
cmp
push
mov
or
cmp
jnp
repz
jp
cmp
xchg
xchg
test
add
xchg
fcomp
mov
jno
xor
push
stc
jl
outs
mov
jae
jmp
xchg
mov
and
bound
inc
add
push
fimul
push
std
dec
cmp
xchg
cmc
push
adc
sub
ss
shl
dec
sbb
cmc
(bad)
ret
sbb
repnz
inc
es
mov
(bad)
(bad)
adc
xchg
adc
jmp
adc
mov
lea
ror
sbb
push
int
sub
adc
mov
dec
jns
sub
lock
ja
js
out
enter
add
pop
sbb
in
adc
movs
test
mov
push
sbb
sub
xchg
aaa
sbb
test
outs
and
sbb
jno
cmp
out
(bad)
mov
sti
mov
push
ja
jbe
xor
movs
inc
(bad)
in
pop
inc
add
gs
sub
pmuludq
int3
xchg
xchg
mov
scas
lods
push
xchg
adc
out
repnz
daa
jge
sahf
div
stos
pop
out
xor
inc
ds
add
js
retf
lea
stos
shr
icebp
and
lock
xor
scas
repz
outs
jle
movs
add
lahf
sbb
sbb
dec
inc
loopne
cmp
repz
cld
nop
cwde
je
pop
loope
pushf
xor
cld
or
sbb
cmps
jmp
dec
data16
adc
push
retf
ins
jmp
call
movs
push
pop
or
loop
xchg
push
jp
pop
jmp
retf
call
pushf
stos
add
push
aas
fstp
pop
sub
xor
dec
sbb
and
in
imul
jae
lds
pop
inc
mov
(bad)
jno
(bad)
sti
cmovns
repz
mov
push
ins
push
out
call
adc
enter
xlat
call
jmp
rol
jb
iret
or
or
pop
cs
icebp
sub
inc
dec
xor
pop
sahf
pop
(bad)
xchg
fistp
sar
ficomp
popa
jl
jecxz
movaps
int
das
aaa
aam
mov
scas
and
or
jne
or
clc
(bad)
in
mov
mov
mov
sbb
aas
popa
ja
test
test
ja
in
mov
pop
not
enter
adc
popf
dec
inc
pop
dec
push
mov
xlat
dec
mov
dec
scas
ficomp
cmps
int3
or
push
jp
jbe
add
lds
dec
sub
or
inc
out
call
lods
lods
test
inc
lods
jmp
or
js
inc
mov
int
mov
pop
push
jne
mov
sar
jno
sbb
inc
es
test
std
call
xlat
ds
pop
lock
push
stc
cli
cmp
pop
xchg
cdq
cmp
(bad)
mov
cmp
ror
jle
push
push
jg
mov
std
cmp
(bad)
ret
test
and
mov
jg
shl
mov
jmp
ret
xor
ret
jmp
pop
mov
mov
mov
sub
jne
xchg
movs
lea
lods
repnz
mov
out
and
aas
xchg
outs
mov
gs
shl
jecxz
mov
jge
mov
dec
popa
lods
cmp
retf
fxch
leave
in
dec
(bad)
jecxz
xchg
retf
pop
rcl
mov
push
int3
cmps
clc
xchg
cdq
inc
cmps
loopne
mov
mov
pop
xchg
push
add
rcr
icebp
retf
inc
cs
lock
iret
sbb
push
(bad)
pop
(bad)
mov
mov
xor
test
pop
mov
ins
inc
xchg
scas
mov
jnp
hlt
xchg
test
push
mov
cli
repnz
sbb
xor
push
xchg
push
fwait
cmp
pusha
mov
ficom
sbb
fs
inc
je
mov
into
aaa
mov
clc
mov
(bad)
outs
int3
mov
lds
inc
cwde
add
sub
push
or
cmps
aad
ss
rol
pop
call
test
fdivr
cdq
ins
jmp
xor
sub
xchg
call
inc
and
pushf
in
nop
pop
out
mov
dec
repz
test
shl
jge
lahf
ret
movs
cmc
lock
gs
xor
mov
in
cmp
scas
and
inc
into
shr
sub
or
inc
dec
dec
cdq
pop
jmp
xchg
repz
rcr
adc
jae
xor
add
xchg
call
and
out
sbb
imul
xor
ror
xchg
jne
imul
cld
xor
jb
cld
sbb
aaa
stc
inc
jne
jbe
pop
jmp
test
js
les
(bad)
cmp
sub
adc
sub
stos
fs
mov
das
xchg
mov
sub
mov
cmp
aaa
cmps
cs
lods
push
(bad)
dec
aas
outs
inc
jmp
shl
and
fisub
lea
loope
ins
shl
(bad)
cs
fcmovnu
aaa
idiv
out
sub
loop
pop
pop
gs
push
mov
push
les
add
mov
stc
stc
(bad)
sbb
jg
jle
sub
jbe
adc
mov
jecxz
nop
cmps
sbb
add
js
push
push
sbb
push
xchg
jne
gs
push
cs
out
adc
cmp
mov
sahf
pop
test
xchg
test
call
mov
rcr
sbb
pop
jb
xor
shr
cdq
ins
pop
mov
mov
imul
push
stos
pushf
pop
push
dec
mov
xchg
cmp
xor
mov
ds
ja
das
ins
xor
mov
cmp
and
mov
jbe
popf
xchg
into
inc
aad
dec
mov
add
mov
push
ret
stos
inc
lahf
dec
movs
sbb
xchg
int3
jbe
ja
pop
fsubr
inc
xor
cld
inc
lock
sar
xchg
pop
das
call
paddq
shl
adc
xchg
mov
or
add
rol
mov
cmp
dec
pushf
sub
xor
js
aad
mov
loope
mov
pop
jecxz
(bad)
push
jmp
bound
jle
cmp
or
fsubr
push
sub
inc
push
rcl
sbb
mov
or
cmp
mov
in
jl
test
sbb
xlat
bound
pop
sbb
xor
imul
sub
shl
add
clc
enter
adc
lock
imul
je
(bad)
and
cmp
inc
shl
pushf
scas
adc
shr
in
dec
out
and
sub
xchg
pop
pop
pop
shl
pop
jae
loop
aas
push
and
int
in
sahf
ins
sub
fwait
pushf
enter
jmp
xor
test
or
int
cmps
push
xchg
cmp
mov
jg
jmp
dec
sub
lods
shl
into
xchg
mov
gs
sar
stos
mov
jnp
mov
mov
ins
scas
push
mov
mov
mov
out
fistp
pop
test
lea
retf
jmp
jns
das
(bad)
jecxz
stos
adc
test
fadd
popa
sub
clc
fiadd
cld
inc
xlat
add
dec
shl
xlat
add
cmp
and
jmp
out
sub
icebp
push
icebp
sub
inc
adc
jmp
movs
jecxz
icebp
ja
js
cs
inc
pushf
hlt
pop
imul
and
pop
sbb
mov
aad
daa
mov
jl
pop
fs
mov
xchg
repz
loop
jb
cmp
adc
fwait
test
sub
ret
pushf
(bad)
test
dec
daa
movs
xor
xor
mov
xchg
push
xor
jbe
out
mov
cmp
add
jecxz
mov
xor
dec
jo
mov
ds
pop
out
cs
imul
or
(bad)
in
xchg
dec
sub
jo
or
sbb
or
pop
push
(bad)
test
sbb
sub
cmp
add
mov
inc
push
jp
xor
pop
ds
fdiv
rcr
push
xchg
enter
xchg
stos
stos
dec
adc
movs
mov
cld
xchg
push
mov
mov
jle
(bad)
ja
push
add
fldenv
(bad)
jbe
push
fwait
test
nop
std
mov
xor
fld
movs
fbld
push
rcr
mov
mov
xchg
(bad)
cmps
mov
mov
mov
xor
adc
xchg
xchg
loop
(bad)
fld
xor
xchg
mov
pop
dec
retf
cmps
mov
test
inc
push
push
dec
push
lods
fdiv
jns
sti
push
and
dec
mov
lods
stos
push
cmp
out
prefetcht1
div
jmp
ret
repz
jmp
hlt
inc
inc
iret
in
mov
push
cwde
or
std
inc
mov
mov
and
jmp
mov
adc
fidiv
dec
mov
and
mov
mov
inc
icebp
fs
push
clc
jmp
test
or
mov
outs
adc
cmp
xor
mov
xchg
fwait
sti
cmp
retf
(bad)
mov
scas
and
xchg
loop
les
(bad)
nop
into
fld
loopne
xchg
rol
call
mov
mov
jl
add
aam
mov
cmps
inc
in
mov
adc
into
jne
fidivr
sbb
fdivr
jmp
test
mov
inc
pusha
mov
and
mov
mov
mov
daa
sbb
fst
mov
jle
ficom
test
mov
and
mov
jp
mov
into
gs
rol
add
dec
pusha
sti
fcom
in
mov
shr
movs
inc
fwait
into
push
mov
and
fcomp
dec
jb
adc
pop
push
lods
leave
cmp
fadd
sub
and
fisubr
retf
mov
dec
test
add
popf
test
jle
aas
iret
ret
add
ficom
xor
cwde
out
xchg
dec
xchg
fs
sbb
shr
mov
scas
mov
push
ja
in
inc
xchg
mov
xchg
bound
push
jl
and
call
inc
outs
scas
fwait
retf
sbb
cmps
cmps
jne
sub
push
cmps
push
cmc
inc
jp
test
sub
ds
outs
mov
cmp
loop
ret
or
sub
inc
add
sub
or
or
xor
pop
push
aas
or
stos
shl
fcom
inc
jle
jb
xchg
das
rcl
mov
into
push
sbb
jne
mov
imul
push
sub
sbb
push
ret
mov
xchg
icebp
xor
test
gs
xor
ja
stos
inc
xor
sub
pop
jo
scas
mov
inc
arpl
popa
cwde
fidivr
mov
je
inc
mov
sti
dec
retf
std
push
test
xor
ja
adc
push
fisubr
int3
fld
dec
sub
mov
das
xchg
xchg
movs
ds
(bad)
push
imul
daa
sbb
(bad)
dec
mov
loopne
push
cmp
cs
out
push
loop
dec
inc
gs
std
dec
sbb
(bad)
mov
sbb
sbb
setb
mov
and
xchg
pop
and
adc
mov
xchg
sub
dec
push
les
mov
(bad)
imul
sub
pop
call
lods
js
neg
dec
mov
das
pop
sbb
cmps
gs
or
xchg
xor
mov
pop
sub
mov
push
fs
adc
jg
in
push
sbb
fst
sti
mov
xor
sub
test
lods
stos
stos
adc
dec
sub
ret
stc
shl
cmp
push
add
fcmove
xor
std
jecxz
call
jbe
scas
call
popf
ret
cwde
jg
mov
push
pop
cmp
repz
xor
ret
pop
push
outs
ins
clc
jmp
lds
movs
dec
push
jg
push
int
stc
pop
xlat
cmp
sbb
daa
bnd
rcl
sub
loope
pop
or
or
fucomip
test
jg
jb
clc
dec
call
fistp
dec
retf
add
popf
test
dec
retf
cmp
cli
ja
call
or
clc
rdmsr
inc
mov
jne
rcl
(bad)
jo
mov
in
xchg
(bad)
jmp
lahf
push
jbe
xchg
lods
into
jo
adc
clc
ret
aad
(bad)
repnz
shr
sub
ror
jae
adc
mov
add
mov
pop
push
add
push
pop
fs
(bad)
stc
frstor
call
xor
pop
mov
loop
lods
retf
push
pusha
adc
js
mov
pop
ins
dec
mov
(bad)
mov
shr
in
outs
pop
ret
or
shl
mov
nop
sbb
pop
(bad)
leave
cmp
les
cmps
lea
ret
(bad)
shl
int3
mov
rcl
call
out
fnstenv
mov
clc
inc
sbb
repnz
(bad)
mov
jo
out
fiadd
push
sahf
inc
leave
xchg
pop
shr
cmps
jmp
call
dec
ds
or
or
loop
push
cmp
dec
shr
sbb
int
fadd
int
add
inc
pusha
mov
ds
wbinvd
pop
pop
retf
pushf
jne
imul
mov
jb
xor
or
int3
es
jp
fimul
test
xchg
mov
pminub
fisttp
add
leave
or
push
mov
and
xor
sti
dec
push
push
jecxz
pop
idiv
or
cli
js
clc
cmps
cld
mov
nop
cli
cwde
jp
imul
mov
inc
fmul
sub
int
xor
sbb
loope
(bad)
push
lods
movs
ss
test
icebp
mov
jbe
ret
mov
(bad)
into
stos
(bad)
lock
pop
clc
int3
fs
popa
pop
dec
out
mov
ds
enter
sbb
pop
and
xor
ins
add
jmp
cmp
cmp
jecxz
sbb
sbb
dec
sub
or
popa
pop
cmc
mov
adc
inc
arpl
not
jmp
int
cmp
es
xchg
mov
dec
xchg
imul
push
push
pusha
call
neg
mov
sbb
push
jmp
mov
sub
push
cli
and
aas
shl
mov
or
outs
lock
add
inc
mov
pop
mov
mov
add
nop
sbb
push
lahf
xchg
xlat
iret
adc
dec
push
pop
pop
dec
mov
lahf
mov
or
icebp
push
sbb
call
sahf
pop
pushf
xchg
mov
cmps
cwde
push
fwait
shl
test
add
sbb
cld
mov
push
cmp
sub
mov
test
mov
push
push
jmp
aaa
mov
and
mov
fdivr
push
sub
in
adc
fdivr
pop
and
or
cdq
push
adc
mov
pop
pusha
mov
icebp
div
retf
jle
mov
push
loope
cli
dec
movs
rol
mov
xchg
xor
push
mov
xlat
mov
dec
inc
sete
xor
test
das
mov
cld
mov
shl
lods
je
jecxz
push
in
retf
fistp
repz
lahf
popa
dec
loop
dec
push
ds
and
jae
test
adc
push
(bad)
loopne
push
jne
dec
jge
jg
int
mov
adc
stos
mov
xor
add
cwde
ret
pop
xor
mov
mov
or
inc
(bad)
or
push
add
lock
(bad)
lods
jecxz
and
dec
and
mov
(bad)
push
mov
dec
les
push
(bad)
es
(bad)
jo
inc
punpckhbw
loopne
daa
je
ins
mov
adc
or
dec
stos
mov
ja
xchg
add
lahf
xchg
xchg
xchg
pop
add
add
scas
pop
test
rcl
ret
mov
movs
xor
data16
jmp
xchg
ror
pop
inc
mul
xor
std
push
aad
mov
cs
dec
inc
mov
aaa
jne
ins
addr16
mov
push
(bad)
lods
fisubr
fwait
call
sbb
push
push
dec
mov
push
imul
mov
sub
bound
pop
mov
pop
push
mov
jne
aam
mov
mov
out
pop
punpckhbw
add
js
enter
mov
(bad)
jae
sbb
pop
aam
jno
sub
enter
sar
jo
lock
sbb
xchg
dec
jb
ret
and
(bad)
sub
mul
mov
push
xor
xchg
mov
add
pop
mov
add
cmc
mov
ins
jmp
arpl
test
in
cwde
mov
xor
pop
pop
ja
inc
adc
inc
in
(bad)
(bad)
jmp
dec
push
mov
mul
dec
mov
jns
push
jnp
push
and
add
jmp
add
ret
adc
mov
dec
ins
mov
mov
gs
sahf
sbb
and
mov
es
mov
dec
mov
dec
jmp
mov
pop
mov
xchg
mov
sahf
pop
(bad)
call
mov
arpl
addr16
in
loope
mov
rcl
sub
mov
(bad)
lea
xor
pop
repz
inc
(bad)
pop
dec
lea
cmp
xchg
cs
bound
inc
push
je
jae
xor
in
arpl
std
out
ds
mov
mov
repnz
cmc
popa
and
cdq
jb
mov
je
fwait
sub
mov
mov
loope
bound
inc
push
jo
stc
ror
inc
mov
retf
jge
jecxz
int3
xchg
mov
sub
enterw
cmp
imul
cmp
xchg
sbb
fcomp
in
mov
fisubr
(bad)
call
jns
cld
ins
adc
pop
nop
scas
data16
cwde
lods
gs
jmp
hlt
pusha
loope
test
and
cmp
push
and
or
fistp
xor
dec
push
rep
jbe
retf
test
sbb
jae
fdivr
call
mov
jg
movs
sub
dec
jle
xchg
fwait
add
sub
cmps
jmp
scas
leave
jecxz
jo
scas
lds
lods
or
xchg
or
jg
mov
sbb
(bad)
lea
adc
jle
jg
rol
pop
scas
test
shl
in
sbb
mov
ss
dec
ins
cwde
leave
pop
sbb
mov
je
push
ror
enter
mov
cmp
ins
stc
cmp
aaa
pusha
dec
repz
pop
jnp
movs
test
inc
call
lock
dec
(bad)
(bad)
shr
push
shl
enter
adc
daa
inc
dec
rcl
push
cmps
ins
xor
shr
jae
xor
stos
jge
inc
jl
mov
ficom
(bad)
ds
add
loopne
nop
scas
mov
mov
xor
jmp
push
clc
push
pusha
xchg
loopne
push
xor
daa
aam
xor
rol
mov
aad
shl
jo
mov
adc
repnz
xchg
test
fidivr
jb
sub
cmp
sti
cli
fsubp
cmp
pop
adc
xor
(bad)
retf
loopne
xchg
mov
clc
inc
outs
cmp
in
in
cmp
pusha
aam
xchg
inc
sbb
mov
hlt
xchg
scas
xchg
orps
mov
push
daa
out
fs
repnz
xacquire
xlat
bnd
pop
or
retf
mov
lock
pop
test
shl
aas
out
sub
cwde
push
sub
xchg
mov
push
pop
add
or
les
add
mov
jmp
xchg
jbe
mov
push
xor
mov
xlat
inc
repnz
mov
push
ins
gs
cmp
ins
sub
adc
clc
fwait
push
dec
fidiv
fisttp
fs
mov
xchg
js
push
cmp
xor
mov
cmps
and
xchg
int
into
div
pop
xor
retf
or
inc
xor
or
aaa
movs
xchg
aam
test
(bad)
shr
jae
in
daa
push
and
sar
fistp
sub
fabs
or
xchg
pop
dec
mov
xchg
repz
test
retf
add
int3
mov
dec
popa
inc
(bad)
(bad)
loop
push
pushf
mov
sub
imul
in
dec
gs
xchg
xor
jno
inc
cmp
xor
dec
adc
and
push
clc
pop
cmp
in
out
repnz
in
(bad)
jnp
(bad)
dec
jecxz
cdq
mov
jge
stos
retf
mov
inc
dec
cs
inc
dec
sbb
std
inc
popa
dec
push
int3
cmp
mov
and
mov
outs
or
sbb
in
adc
jp
jbe
push
and
fs
mov
xchg
xor
sbb
(bad)
mov
jl
test
rcr
xchg
pop
rcr
jecxz
popf
mov
arpl
inc
sbb
call
add
cmp
sbb
loop
nop
hlt
xor
or
sbb
cs
mov
push
ins
add
pop
ja
test
sub
add
shl
sbb
test
sub
call
cld
sbb
out
xchg
push
cmps
mov
adc
pop
daa
push
cdq
arpl
hlt
out
sar
movs
sub
and
retf
mov
icebp
ins
dec
jno
and
mov
dec
(bad)
mov
ror
in
add
jp
inc
xor
pop
xchg
test
in
sbb
sbb
sahf
mov
xchg
sub
fidivr
sub
aaa
jb
pusha
ins
aas
dec
stos
dec
(bad)
cmc
inc
add
sbb
and
addr16
cmp
xchg
call
stos
out
mov
movs
mov
cld
daa
into
inc
imul
fwait
enter
cmp
aaa
or
xor
or
(bad)
jl
mov
ss
jg
ss
xor
lea
mov
xchg
jo
push
imul
and
ret
imul
add
or
add
in
jo
dec
adc
jns
jmp
or
sub
sbb
cmc
test
mov
xchg
aad
lea
leave
ja
les
mov
jne
out
jnp
ret
inc
test
mov
scas
loope
aaa
jnp
idiv
dec
int3
fisttp
sbb
movs
fistp
add
(bad)
loope
lahf
iret
mov
push
jno
push
repnz
mov
push
cmp
lock
cmc
out
mov
outs
js
push
adc
(bad)
xchg
sbb
std
into
es
push
xchg
dec
iret
jae
cwde
pop
or
mov
aam
daa
into
(bad)
jae
bound
mov
leave
cmp
pop
jg
jmp
xor
xor
icebp
sbb
fcomp
mov
mov
mov
inc
shl
fistp
or
test
(bad)
fiadd
cmp
sub
mov
jecxz
popa
fstp
shr
ret
aam
es
dec
sbb
and
and
hlt
mov
clc
call
loope
(bad)
cmp
lds
or
and
and
lea
stc
iret
test
popw
mov
jmp
imul
cld
(bad)
mov
pop
and
(bad)
cmp
(bad)
adc
aad
imul
mov
jnp
and
test
jecxz
aaa
jp
ins
pop
div
mov
loop
sbb
arpl
aaa
push
inc
mov
addr16
pop
adc
xor
xchg
push
push
xor
add
(bad)
jg
cld
cmc
imul
fld
into
dec
sbb
adc
in
mov
mov
retf
(bad)
cmc
push
cwde
mov
mov
mov
outs
not
into
pop
jl
clc
retf
or
movs
inc
sti
retf
and
sbb
inc
js
hlt
mov
push
enter
arpl
ret
or
dec
dec
hlt
cmp
push
adc
sub
retf
sub
dec
pop
xor
mov
sub
(bad)
xor
cmps
cmp
pop
cmc
pop
sub
push
sub
retf
call
jo
add
push
(bad)
lahf
ins
scas
loope
mov
das
(bad)
icebp
mov
sub
int3
cwde
hlt
inc
xchg
lods
sub
jecxz
push
mov
push
xor
or
test
xor
arpl
and
cli
call
inc
(bad)
loope
test
mov
rcl
(bad)
aam
add
clc
pop
add
aaa
daa
inc
dec
mov
xor
dec
push
cmp
in
sbb
inc
retf
xchg
mov
in
movs
pop
enter
xor
retf
popf
jbe
xor
inc
outs
xor
xchg
or
into
mov
add
push
push
xchg
mov
out
call
jae
nop
stos
hlt
pop
sub
mov
fwait
inc
into
mov
and
loope
into
es
cmp
js
jmp
fnsetpm(287
add
ret
jecxz
sub
imul
or
ret
fs
es
call
mov
fs
test
pop
popf
les
xlat
cmc
adc
and
into
sbb
sub
inc
movs
ffree
cmp
cmps
lods
lods
pop
mov
in
add
cld
pop
in
jle
gs
jmp
scas
mov
xchg
repz
jmp
sub
xchg
mov
nop
pop
nop
adc
sbb
cmps
out
and
and
pop
add
cwde
adc
add
hlt
lock
xchg
aad
cmps
popf
jns
or
add
sbb
pop
sub
and
daa
sbb
pop
jge
bound
(bad)
ja
dec
rcl
pop
or
lock
dec
mov
push
sahf
pop
xchg
push
sub
push
fwait
(bad)
sar
xchg
mov
loope
add
fdivr
xchg
pop
adc
mov
loop
and
je
xor
inc
xchg
pop
nop
fst
pop
mov
sub
dec
rcr
aas
outs
or
neg
mov
bnd
dec
dec
inc
sbb
or
cmp
dec
pop
lods
out
ficomp
push
(bad)
cdq
je
retf
outs
sbb
add
pop
sbb
scas
inc
jp
fidiv
fdivp
out
ret
pop
lods
shr
bound
or
sbb
popf
or
int
retf
pushf
fcom
mov
mov
mov
adc
adc
stos
add
fs
ret
ret
shl
in
fwait
dec
hlt
int
cmp
imul
div
int
mov
pop
mov
adc
popa
xchg
or
add
enter
data16
or
sahf
icebp
mov
push
fs
call
xchg
xchg
xor
mov
ret
fwait
xchg
test
add
add
retf
xchg
pop
fcom
mov
in
cli
mov
mov
pusha
adc
mov
cmp
aam
(bad)
in
mov
add
(bad)
sub
cmp
js
setl
mov
inc
dec
sub
or
movs
sbb
push
jae
add
push
jge
leave
dec
push
add
sbb
in
enter
cmps
adc
scas
repz
mov
mov
repz
shr
jno
retf
or
fcmovnu
pop
addr16
les
iret
vunpcklps
push
fld
push
fcomp
out
fwait
or
outs
jp
inc
fs
test
mov
outs
adc
jmp
stos
icebp
or
pop
mov
movs
xor
enter
mov
xchg
repnz
addr16
call
pop
sahf
jnp
outs
jne
test
jae
ds
push
mov
ret
push
aad
aad
je
inc
push
aad
popa
cmps
outs
or
mov
xchg
mov
bound
jne
fs
hlt
mov
hlt
cmps
dec
into
sub
mov
icebp
rol
xlat
dec
imul
or
inc
fwait
ror
pop
test
icebp
aaa
xor
mov
xchg
push
rol
dec
stos
ins
aaa
ret
hlt
jle
cli
mov
call
xchg
jge
out
xor
add
pop
push
cmp
cmp
aas
jecxz
stc
gs
daa
xor
cmc
cwde
test
mov
push
ins
dec
inc
std
fnsave
icebp
cmps
mov
jecxz
movs
in
nop
and
test
mov
mov
xor
dec
jne
dec
(bad)
cmp
arpl
lahf
mov
sbb
cmp
inc
cdq
aas
push
out
push
cdq
push
mov
xchg
xchg
int
xchg
loopne
sub
pop
(bad)
inc
sub
mov
in
and
mov
int
test
popa
inc
sbb
mov
shl
pop
sbb
push
mov
lods
pop
stos
nop
addr16
in
test
jne
pusha
jne
retf
add
jecxz
and
mov
jbe
aaa
mov
xor
bound
mov
or
fwait
shl
and
mov
scas
rol
mov
fs
popf
mov
sbb
cmp
pop
xchg
ins
mov
push
out
rcr
jmp
fwait
loopne
cmp
mov
add
std
pushf
sbb
icebp
mov
and
push
and
test
into
inc
push
and
repnz
pop
or
nop
pop
test
mov
nop
sbb
xchg
mov
inc
jns
inc
dec
inc
and
daa
xchg
xchg
push
adc
pop
scas
enter
push
outs
and
push
mov
mov
dec
xor
cmps
sbb
mov
cmps
test
cs
sub
cdq
(bad)
into
xor
jge
lods
pop
or
cmps
jg
mov
hlt
jg
popa
xor
je
(bad)
imul
enter
add
repnz
mov
hlt
test
fxam
xchg
sub
nop
retf
(bad)
loop
fimul
movs
test
xor
jecxz
jmp
jns
clc
repz
xor
das
adc
adc
retf
xor
data16
mov
xor
aas
mov
mov
mov
jmp
scas
popf
pop
lahf
mov
dec
cmp
jmp
out
dec
push
pop
mov
sbb
cmp
pop
cmps
jmp
test
int
nop
aas
leave
add
jns
push
xor
xor
inc
sub
out
jo
outs
mov
and
stc
xor
push
fisttp
fidivr
cs
bound
sti
loopne
cmp
jp
jbe
adc
clc
leave
dec
xchg
sbb
cmp
mov
or
jno
pushf
or
ins
xor
ja
aas
cmp
fxch
jae
pop
scas
xlat
mov
sbb
add
cmp
mov
lds
add
push
adc
mov
enter
pop
loope
lods
inc
dec
mov
nop
xchg
mov
mov
cmp
int
ret
popa
xchg
daa
scas
ficomp
push
add
rol
and
push
lods
in
mov
enter
push
push
inc
xor
mov
or
or
lods
and
sti
rcr
xchg
sbb
mov
into
xchg
lds
jmp
leave
jno
std
mov
int
xchg
add
add
outs
enter
fistp
in
adc
ror
sub
push
(bad)
enter
mov
add
sbb
mov
adc
mov
js
dec
cwde
cmps
cs
out
movs
jae
repz
test
jp
jp
and
jge
cmp
rcl
inc
add
in
push
loopne
sub
popa
sar
retf
aad
mov
sub
inc
scas
cmova
arpl
ss
(bad)
sbb
lods
xchg
pusha
stos
cli
mov
ins
movs
xchg
icebp
bound
jae
movs
pop
mov
ret
pop
jl
fdiv
std
sti
ds
lods
paddd
scas
xchg
fist
xlat
es
mov
and
sub
fcmovnu
dec
push
push
mov
(bad)
repnz
sub
retf
je
mov
hlt
movs
test
sti
sub
dec
dec
cs
jp
popf
in
(bad)
ror
inc
and
dec
popa
gs
xchg
hlt
cmc
jb
mov
jno
fadd
mov
xor
sbb
push
in
push
mov
leave
int
iret
int3
fisttp
sub
xor
cmp
adc
addr16
or
mov
push
fsub
and
adc
lea
xchg
dec
pop
ret
(bad)
aaa
daa
mov
jp
sub
adc
cmp
or
add
jmp
mov
lods
jp
sub
(bad)
test
ja
xchg
push
xchg
cs
mov
mov
loope
inc
aad
and
stos
fs
lds
dec
adc
std
dec
fs
popf
pop
xor
xsaves
int
mov
mov
jmp
imul
xchg
dec
pusha
jmp
push
mov
push
and
xlat
ins
xlat
test
mov
ret
xchg
shl
(bad)
cdq
lds
inc
sbb
movs
shl
cs
sub
xor
or
(bad)
popf
lock
mov
in
inc
sti
jecxz
adc
and
mov
add
in
(bad)
jle
or
fidiv
jb
mov
pop
data16
icebp
push
and
xchg
pop
out
and
adc
out
aas
test
lds
ds
retf
(bad)
stc
cmc
push
bound
test
dec
xor
xchg
sbb
and
ins
xchg
jmp
popf
arpl
cdq
mov
or
or
pop
pop
ins
mov
imul
mov
mov
pop
mov
add
and
aas
repz
jge
sub
(bad)
leave
dec
add
test
and
sub
imul
add
cmp
sub
inc
jmp
(bad)
repz
imul
jmp
les
shl
mov
dec
pop
in
mov
jp
rcr
push
fmul
or
out
add
mov
cdq
pop
xchg
leave
dec
push
sub
movs
dec
jge
xchg
mov
xchg
fs
dec
cdq
adc
pop
dec
xchg
ret
cmc
cmp
fiadd
inc
push
call
cwde
adc
or
add
push
push
mov
in
fiadd
add
ss
(bad)
lds
ins
add
sub
mov
ficomp
imul
dec
stos
scas
out
jle
jge
xchg
mov
and
je
call
inc
ror
pop
add
and
repnz
ins
lds
out
fimul
pop
pop
jg
hlt
cld
push
test
jg
xchg
mov
clc
adc
push
aaa
cmp
ins
dec
das
inc
imul
inc
sahf
out
pop
repnz
jle
ret
fmul
pop
pushf
sub
and
inc
repz
mov
mov
or
pushf
cmp
pusha
inc
ss
xchg
dec
(bad)
scas
push
or
clc
(bad)
shr
rol
jp
stos
lods
es
jl
test
cmp
dec
mov
inc
inc
cwde
loope
and
sbb
jg
fst
push
push
jmp
les
ins
outs
inc
pop
nop
outs
inc
imul
xchg
or
cli
dec
sbb
iret
lea
pop
inc
sub
sar
pop
pop
loopne
xor
pop
pop
pop
pop
add
repnz
leave
add
xchg
test
push
pop
adc
mov
mov
push
cs
pop
in
sub
inc
jnp
push
dec
test
sub
into
or
dec
test
out
in
or
cmps
cmp
jae
retf
test
dec
imul
jl
or
into
mul
jno
push
jg
stos
fistp
jns
aam
in
test
ret
xor
stos
push
pop
call
jnp
loope
adc
adc
mov
push
or
xor
cmc
jge
add
popa
adc
and
and
or
jmp
sbb
dec
jge
fcomp
in
xor
imul
popf
fwait
call
lds
in
push
jmp
call
test
leave
pop
jb
fimul
lds
neg
popf
idiv
shl
cld
mov
mov
mov
das
loopne
and
ror
pop
out
retf
push
push
pop
repnz
in
dec
(bad)
jne
add
sub
mov
dec
adc
ret
xchg
mov
ror
sub
jmp
fdiv
inc
in
movs
push
adc
(bad)
adc
xchg
jmp
inc
dec
pop
in
std
out
jecxz
sbb
test
invd
xor
xchg
and
mov
ins
mov
add
shl
aaa
scas
icebp
jnp
aad
call
add
cmps
mov
les
inc
repz
sahf
neg
mov
into
xchg
inc
fs
sub
cmp
std
popf
dec
js
jno
cdq
pop
dec
sbb
mov
mov
jne
jo
push
push
in
iret
jae
jb
mov
dec
daa
movs
add
sahf
retf
call
ins
mov
push
aas
pop
test
cmc
fs
pop
(bad)
and
ret
push
cdq
pop
retf
retf
movs
aad
mov
mov
adc
in
fisttp
popa
test
mov
pop
inc
sbb
push
jmp
ret
adc
jp
je
pop
cdq
dec
adc
adc
or
lahf
lods
ret
out
mov
std
rcl
cld
mov
mov
hlt
test
mov
int3
or
sub
inc
or
out
loop
out
push
in
pop
(bad)
iret
and
mov
ret
inc
sar
into
sub
outs
inc
push
loope
nop
repz
sbb
out
mov
cld
repz
and
aaa
fild
adc
(bad)
das
jl
jp
popa
inc
dec
sar
sub
xor
das
ds
lds
aas
mov
cmp
pop
sub
neg
in
dec
cmp
push
adc
push
mov
out
das
jl
retf
sti
call
mov
jmp
movs
(bad)
adc
bound
sbb
cmp
test
inc
adc
stos
das
sbb
(bad)
div
out
inc
cld
pusha
sub
outs
test
mov
and
iret
and
jge
out
arpl
xor
test
mov
dec
or
out
and
cmp
cmp
lock
inc
outs
bound
or
cmps
pop
cmps
imul
jae
(bad)
cmp
mov
hlt
and
retf
lock
ss
mov
jge
iret
es
or
bound
adc
xchg
xchg
inc
mov
add
mov
jge
xchg
or
stos
jle
add
movs
inc
retf
cwde
push
cmp
pop
xchg
sahf
cmps
jne
iret
pop
or
mov
push
jecxz
mov
out
sbb
push
push
push
dec
ja
sub
imul
adc
push
pop
sub
mov
dec
inc
test
ror
mov
or
pop
push
dec
xor
and
scas
mov
dec
inc
sub
lods
cmps
cwde
cmp
push
adc
aaa
pushf
jae
sbb
mov
cli
cmp
push
xchg
dec
(bad)
stos
mov
mov
dec
int
bound
daa
cmps
lods
add
fwait
scas
and
pop
das
in
cmp
movs
pop
push
mov
mov
and
cwde
mov
xchg
out
aaa
pop
loope
and
add
int
in
jne
pop
stc
call
lds
cmp
mov
out
lods
pop
sbb
ins
arpl
jl
fmul
cmp
sbb
xchg
mov
or
jle
imul
arpl
jl
and
fmul
mov
in
and
inc
sbb
pop
fisubr
sahf
cmps
cwde
in
xor
jmp
rcl
pop
icebp
push
adc
sbb
(bad)
cwde
jne
mov
mov
dec
retf
sbb
retf
xor
mov
sbb
cdq
imul
lahf
adc
or
mov
inc
pop
int
repz
cs
jno
cdq
fisttp
nop
rcr
xlat
mov
movs
ins
pusha
push
jl
or
push
sti
(bad)
pop
pusha
push
test
iret
add
add
mov
sbb
mov
rcl
adc
pop
aaa
std
xchg
aaa
into
xor
add
fsubp
adc
add
pushf
sbb
cmp
cdq
pop
sub
add
cmp
xchg
xchg
add
dec
add
dec
or
shr
dec
lds
loopne
cli
loope
mov
cmps
cdq
clc
sub
sub
fiadd
jmp
ret
push
inc
pop
mov
iret
mov
(bad)
int
inc
mov
into
cmps
sub
sbb
jno
mov
jl
adc
icebp
call
test
cld
cmp
mov
pop
ja
and
in
xchg
sbb
retf
sbb
xchg
mov
add
sub
outs
je
imul
scas
mov
fist
scas
sub
dec
loop
push
das
dec
sub
sbb
add
jle
xor
or
xor
pop
fisub
sbb
dec
cmp
clc
add
call
jmp
in
mov
cs
pop
push
in
jnp
lea
imul
int
xchg
cwde
pop
(bad)
popf
je
popf
adc
cmovge
out
adc
push
xor
imul
xor
sub
cmp
retf
lock
inc
lahf
outs
inc
lods
mov
pushf
mov
and
sub
sti
mov
push
mov
clc
out
scas
and
inc
cs
mov
push
jecxz
jbe
push
not
mov
and
fisttp
and
add
mov
and
sbb
xchg
aad
inc
mov
(bad)
scas
loop
inc
inc
push
inc
test
rdtsc
inc
(bad)
mov
ret
int
iret
inc
jle
xchg
aas
test
mov
inc
and
mov
mov
push
repz
movs
xchg
aad
out
retf
xchg
repnz
ss
call
jns
(bad)
call
aad
cmps
out
cmps
xor
test
jb
push
adc
(bad)
mov
outs
ins
mov
mov
in
sub
jecxz
xor
ins
rcr
fst
(bad)
dec
add
cmps
fs
(bad)
mov
aas
fld
std
out
inc
pop
popf
shl
mov
mov
xchg
sub
div
push
add
jmp
ror
inc
sbb
sub
jno
enter
jae
pop
sahf
scas
mov
mov
dec
or
pop
jmp
push
mov
xor
fcom
pusha
push
leave
in
dec
inc
mov
pop
mov
ja
xor
jg
dec
in
pop
xchg
pushf
mov
jg
xor
fmul
xchg
inc
or
or
and
cs
fwait
int
je
push
mov
inc
xlat
mov
adc
(bad)
(bad)
xchg
dec
lods
lea
(bad)
es
sbb
fdivr
aaa
cmps
call
movs
loope
in
mov
bound
adc
not
out
fwait
mov
shr
stos
movs
lock
xchg
fimul
repz
bswap
pusha
fs
and
lds
fwait
xchg
retf
leave
push
xchg
out
jae
imul
mov
dec
pop
mov
out
xlat
push
dec
in
inc
xchg
push
mov
jmp
dec
les
scas
rcr
loopne
repnz
inc
test
inc
sub
jne
(bad)
daa
repnz
mov
call
add
imul
(bad)
js
xchg
push
fmulp
in
cmp
nop
neg
out
pop
xchg
sbb
mov
adc
adc
fisubr
sub
adc
fisub
jbe
pop
jne
or
and
dec
xchg
aam
into
sahf
pop
mov
fidiv
aad
retf
sbb
dec
test
or
addr16
cdq
xchg
shl
fisub
adc
or
add
lahf
loop
add
icebp
data16
les
or
out
fmul
jo
xor
retf
inc
enter
(bad)
movs
adc
(bad)
sbb
jge
add
and
xor
add
push
push
or
mov
test
loopne
arpl
out
or
test
jns
dec
or
cmp
call
cmc
or
or
ins
lds
cwde
xchg
stc
scas
cmps
and
cmp
adc
movs
cmps
cmp
sti
repz
ja
into
ins
adc
xor
pusha
int3
or
out
int3
shr
mov
push
mov
retf
imul
adc
dec
iret
sbb
jb
and
(bad)
fmul
jne
xor
sub
out
imul
movs
inc
add
rol
mov
xor
push
xor
and
sbb
(bad)
pusha
pusha
cdq
add
aam
adc
mov
inc
mov
mov
mov
stos
xchg
ja
rcr
cmps
xlat
jmp
sub
popf
push
jne
ja
push
outs
in
fisttp
fcmovnb
out
cmp
fwait
pop
mov
imul
loopne
or
inc
mov
popa
cmp
mov
and
xchg
push
ja
inc
adc
jns
imul
mov
int
lock
lahf
mov
pop
out
fcom
sahf
fstp
div
loopne
js
push
mov
pop
gs
test
jmp
and
push
push
dec
inc
scas
and
out
fwait
jmp
inc
inc
bound
xchg
or
bound
mov
xor
into
sub
xor
loop
jge
add
enter
cmps
jl
ds
mov
sub
dec
test
mov
add
and
sar
pop
es
add
xlat
ror
out
(bad)
movs
loopne
xchg
or
mov
dec
ret
(bad)
(bad)
gs
pushf
jb
gs
xchg
xor
gs
inc
fdivr
cmp
ds
sahf
movs
sar
es
mov
push
mov
mov
imul
jecxz
addr16
push
sbb
cwde
sbb
push
ja
fadd
hlt
out
pop
mov
bound
movs
xor
icebp
mov
or
fstp
in
add
add
shl
popa
scas
inc
ins
dec
sbb
dec
sub
(bad)
lods
jo
ins
ds
ins
mov
jno
jmp
xlat
outs
dec
ins
inc
jns
setno
xchg
stos
pop
psubq
add
mov
jg
cwde
movs
lds
push
sbb
idiv
cmp
cdq
adc
and
out
pop
and
pusha
dec
dec
rcr
cli
sub
out
test
loop
mov
call
adc
lods
adc
mov
neg
fsubr
sbb
mov
jno
outs
fild
cmp
xlat
shl
pop
pop
fnstenv
mov
push
fist
xor
mov
inc
xlat
leave
aas
shl
sbb
inc
clc
cmps
sbb
lock
adc
test
fidivr
adc
mov
push
sub
clc
xchg
(bad)
jo
repz
aam
or
pop
sbb
xor
pop
fsubr
dec
ins
pop
pop
retf
jo
jb
mov
mov
loope
outs
sahf
fs
mov
std
cmc
xor
addr16
xchg
ret
adc
push
lds
hlt
jmp
pushf
(bad)
xor
popa
cmp
shl
and
gs
jmp
bswap
(bad)
out
adc
add
jp
lods
fs
sub
dec
fdivr
sbb
push
movs
movs
push
or
rcr
(bad)
dec
xor
sub
push
jae
bound
int
cs
hlt
mov
add
cmps
test
push
adc
rcl
sbb
pusha
fcmovbe
jmp
xor
out
mov
cmp
fidivr
ror
mov
sbb
ror
sbb
fldcw
xchg
or
mov
mov
mov
sub
push
sahf
test
fisub
dec
stos
inc
(bad)
adc
aas
push
jmp
in
adc
and
daa
sbb
xchg
fnstcw
push
js
les
adc
inc
inc
adc
or
or
test
lock
in
push
ins
adc
lahf
and
mov
test
call
push
sbb
mov
sub
sahf
loop
fmulp
xlat
jmp
adc
jnp
imul
bound
icebp
jl
pop
jb
shl
push
mov
inc
jmp
sbb
sbb
cmp
in
nop
mov
cmc
iret
pop
fld
jmp
push
(bad)
lods
sti
fnstcw
inc
in
push
ins
jmp
mov
mov
add
xchg
jecxz
inc
in
mov
push
fld
jbe
jb
aad
outs
scas
jmp
js
xlat
pop
sbb
shl
cmp
mov
push
sbb
cmc
inc
ss
sub
xor
sub
inc
shr
(bad)
push
cmps
ret
jmp
jge
fdivrp
rcr
push
push
ins
pop
jae
mov
imul
mov
mov
cmps
aam
sub
jbe
jno
test
popa
push
push
iret
es
push
popa
xchg
pop
push
fsub
jb
mov
xchg
xchg
or
sub
push
xchg
mov
and
mov
test
sbb
xor
pop
push
dec
jle
js
and
stos
(bad)
inc
jne
mov
mov
sbb
xchg
cmp
pop
nop
dec
es
xor
pusha
pop
cmp
fisttp
mov
and
or
nop
pop
push
mov
fisttp
adc
jl
lahf
cmp
push
ret
hlt
in
loope
jo
dec
mov
xchg
test
adc
and
enter
test
in
jmp
adc
pusha
aad
or
ror
hlt
inc
aas
test
cs
lds
add
pop
out
lahf
or
in
xchg
into
rol
cdq
out
(bad)
repz
fild
int3
cdq
cmp
pop
sub
aas
clc
retf
cld
loope
push
inc
cwde
jg
dec
xor
popf
mov
scas
cmp
xor
mov
pop
sbb
cmp
mov
shl
add
push
push
scas
sbb
pop
rol
call
mov
or
(bad)
lahf
les
sbb
aaa
enter
jmp
jmp
xchg
pop
cmc
out
not
std
out
mov
dec
xor
repz
pop
sahf
in
xchg
add
pop
arpl
mov
inc
repnz
cli
mov
lock
and
in
shr
mov
popf
rcr
movs
jnp
mov
mov
fcom
mov
ja
sub
sbb
movs
mov
in
sub
dec
mov
mov
dec
hlt
adc
sbb
dec
xchg
pop
lea
xchg
ja
lds
cmps
call
pop
fimul
xchg
jmp
inc
pop
aas
mov
sbb
adc
pop
inc
cmps
jecxz
ret
fnstcw
sub
add
xchg
xchg
aaa
add
xchg
add
sti
fstp
mov
fild
les
daa
shl
leave
stos
xchg
out
or
adc
shr
and
push
xchg
jbe
mov
push
or
xchg
cmp
dec
outs
out
je
aad
imul
mov
(bad)
sub
sbb
pop
xchg
mov
cdq
sub
lods
pop
nop
ror
sub
mov
ja
(bad)
test
lahf
pop
fwait
ror
mov
mov
mov
popf
pop
icebp
stos
outs
cdq
dec
iret
push
out
push
add
mov
add
ror
and
ffreep
scas
loope
jo
and
stc
imul
aaa
int3
shl
cmps
and
push
or
push
mov
inc
or
add
fstp
cmp
dec
jmp
js
inc
je
xor
(bad)
xchg
ja
retf
adc
dec
jo
push
repnz
movs
jle
mov
popa
sbb
cld
or
sar
sar
stos
push
fadd
lds
pop
hlt
pop
and
sbb
sbb
inc
pop
push
push
(bad)
jnp
sub
(bad)
iret
repnz
outs
xchg
mov
jbe
mov
outs
(bad)
jnp
hlt
js
aas
push
add
lea
stos
mov
imul
ins
sti
sbb
adc
nop
and
pushf
ja
mov
lahf
mov
dec
in
jl
pop
push
(bad)
rol
or
rcr
jp
call
xchg
sahf
or
dec
mov
pop
adc
jb
mov
fwait
and
aas
cmc
jp
mov
ins
push
inc
neg
dec
push
push
mov
dec
sub
dec
ds
cmps
cmp
pop
int3
mov
xchg
add
es
lahf
stc
ja
mov
mov
mov
not
adc
ins
mov
xor
jl
pusha
pop
ds
mov
mov
sub
inc
cmp
jmp
jmp
pop
cld
out
enter
gs
add
add
popa
mov
es
push
inc
jb
cmp
mov
fst
or
data16
lock
cwde
fwait
xor
cdq
bound
inc
cmp
retf
mov
fsubr
cmp
jb
aas
mov
aas
lock
inc
(bad)
lock
dec
in
xor
bound
fwait
xchg
xor
pop
xchg
sub
das
mov
mov
icebp
mov
loope
neg
in
mov
sub
out
stos
xor
xor
cmp
call
mov
mov
mov
mov
xchg
sahf
shl
outs
lahf
adc
in
cmp
retf
outs
repnz
jle
push
sbb
inc
xchg
adc
fiadd
int3
fiadd
ds
stos
lods
mov
adc
mov
xor
jno
jecxz
sbb
(bad)
(bad)
or
cwde
test
and
mov
lds
push
test
std
repnz
ss
inc
mov
addr16
push
(bad)
mov
or
int3
test
sub
out
out
push
(bad)
fidiv
fcmovu
push
push
neg
fsubr
pop
js
icebp
jne
add
aas
push
xchg
into
rol
or
cmp
adc
inc
lahf
out
dec
push
sub
sbb
mov
data16
adc
push
cwde
retf
xchg
mov
mov
mov
(bad)
cmc
jb
inc
call
push
mov
add
sbb
scas
push
inc
ja
mov
or
loopne
xchg
xor
stos
repz
sbb
dec
pop
cmp
or
cmp
push
cmp
mov
add
jecxz
int3
ss
pop
xchg
jge
into
pop
clc
cwde
xchg
(bad)
clc
cli
das
sbb
push
and
icebp
fstp
mov
xchg
add
or
mov
cmp
test
and
pop
push
sti
sbb
movs
xchg
stos
xchg
add
ret
push
inc
jl
push
fisttp
(bad)
jl
inc
add
shl
sbb
add
fdivr
in
mov
mov
daa
popf
sub
push
inc
and
or
jmp
mov
cmp
pushf
push
push
jns
ror
cmp
sub
jmp
jbe
push
es
aas
test
pusha
into
mov
iret
mov
mov
(bad)
or
es
adc
cmp
push
push
xor
jge
(bad)
mov
push
inc
push
fistp
cmp
push
or
jge
jecxz
fst
or
sub
mov
jmp
adc
out
jae
sbb
xor
retf
push
mov
je
push
fs
daa
adc
push
(bad)
imul
add
dec
jno
into
bound
add
fwait
jl
add
xchg
sti
daa
das
sub
cmp
popf
jb
push
loope
sar
out
sub
pop
loop
add
xor
mov
and
mov
mov
mov
fisttp
cmp
push
out
xchg
cmp
repz
aam
clc
push
pop
jecxz
add
push
sbb
aad
or
popa
jmp
jle
dec
pop
adc
adc
mov
sbb
ins
(bad)
cwde
mov
add
in
push
icebp
xchg
ins
mov
test
in
sub
xchg
psllq
xchg
inc
push
push
inc
jg
dec
pop
push
pop
xchg
add
and
adc
inc
lods
sub
jle
aaa
imul
jle
outs
jnp
jno
or
inc
fdivr
and
jle
ret
mov
cmp
inc
jg
sbb
pop
xor
retf
add
(bad)
mov
pop
call
sub
lea
pop
or
dec
mul
push
jmp
and
dec
mov
push
xchg
test
inc
inc
scas
xlat
cmp
lahf
sub
mov
adc
jbe
xor
fs
sti
or
mov
sub
and
in
inc
ret
cmps
xor
ret
pop
mov
sbb
adc
cmps
or
xchg
test
pop
repz
iret
xlat
outs
xor
xor
mov
mov
push
pop
cwde
dec
retf
xor
cmp
cmps
mov
jnp
pop
out
lds
push
xor
out
retf
stc
and
or
pop
dec
sub
stos
sub
jb
dec
mov
les
mov
inc
(bad)
xor
addr16
jns
cmp
adc
and
push
fstp
cmps
sbb
retf
adc
cmps
adc
in
jmp
xor
cmp
test
mov
cmp
push
mov
add
stos
daa
push
and
dec
mov
push
je
movs
aad
cwde
or
ins
or
sbb
push
mov
sub
push
xchg
xor
popa
imul
mov
jno
dec
and
or
pop
jle
aad
adc
xchg
psrld
xor
inc
retf
and
int
cld
add
mov
adc
push
popf
xchg
mov
sbb
icebp
jp
cld
mov
jno
(bad)
sti
add
aam
add
es
sbb
int
sbb
xor
sub
cmp
inc
imul
pop
iret
dec
jg
jmp
das
sbb
retf
inc
ss
fidiv
rcr
or
cmp
cmp
cmc
sar
gs
vcmpeq_osps
mov
fwait
xor
hlt
add
mov
test
out
mov
xchg
sbb
retf
ins
aad
xchg
xchg
test
rol
inc
push
jb
pop
mov
push
pop
fisttp
(bad)
mov
add
icebp
aaa
pushf
test
out
cmp
fist
sbb
and
rcl
push
iret
inc
cwde
nop
shl
fst
cmp
sub
out
lods
adc
je
into
cmp
pop
mov
in
inc
cmp
and
mov
js
mov
mov
shr
push
inc
dec
(bad)
dec
add
inc
les
inc
dec
mov
outs
shr
in
fcomp
pop
add
(bad)
mov
and
add
mov
add
add
inc
sub
inc
pop
xor
mov
dec
shr
div
imul
sbb
xchg
xor
fsubr
(bad)
sbb
div
rcr
push
mov
and
sar
sbb
pop
jle
call
mov
lock
sbb
dec
xor
sbb
data16
inc
cmps
nop
jb
sub
js
mov
add
push
outs
dec
cmc
pop
jp
jle
loopne
push
imul
fidiv
test
test
in
(bad)
jbe
jmp
xchg
sbb
cmp
lahf
sub
hlt
cmp
daa
imul
pop
mov
frstor
sti
push
call
xchg
retf
stos
pushf
fmul
test
dec
es
mul
scas
adc
outs
enter
aam
in
ja
dec
cdq
scas
or
dec
lods
fst
test
cmp
jmp
repnz
cdq
pop
and
lods
mov
add
movs
cmp
retf
out
push
mov
enter
jecxz
mov
scas
xor
jmp
(bad)
mov
cmp
pop
inc
pop
in
or
jnp
or
call
enter
addr16
int
xchg
stos
sub
mov
and
mov
ss
pop
push
xor
xchg
cli
sub
inc
ss
pop
scas
xor
mov
sub
mov
(bad)
sub
and
call
test
mov
cmp
(bad)
repnz
push
dec
lahf
rcr
xor
mov
pop
cld
mov
pop
xchg
enter
or
jge
inc
adc
aad
inc
lds
push
adc
pop
shr
jecxz
pop
cmp
call
mov
aas
enter
or
repnz
inc
or
(bad)
push
or
dec
dec
imul
cmc
and
ins
pop
(bad)
pusha
imul
adc
sbb
inc
mov
rcr
inc
dec
pop
sub
push
and
add
popa
cmps
movs
push
mov
imul
rcl
call
add
movs
scas
pop
jmp
add
inc
cmp
sub
in
int
cmp
pop
cmp
(bad)
jbe
push
push
pop
ins
jns
imul
aam
in
push
fs
jae
jns
jo
sub
in
jp
test
stos
sti
adc
or
xor
cmc
mov
push
call
shr
stos
cmps
jge
stos
cmp
and
aaa
push
cmps
pop
ins
mov
neg
xor
cmp
movs
inc
ins
pop
int
mov
mov
ss
(bad)
jnp
jmp
enter
pop
mov
mov
addr16
popf
fldcw
ins
je
fcomp
pop
cmps
or
(bad)
sbb
out
sar
in
jle
loope
cmp
dec
mov
fld
mov
xor
imul
jbe
shld
lock
lods
cmp
bound
xsaves
fist
adc
add
ins
sub
adc
mov
hlt
scas
icebp
retf
mov
mov
mov
outs
nop
sub
sub
iret
mov
dec
add
dec
in
nop
jge
(bad)
jmp
jmp
repnz
mov
pop
xor
out
fwait
xchg
pusha
pushf
(bad)
jmp
cmc
lea
inc
or
sbb
call
test
iret
add
pusha
add
rol
(bad)
xchg
and
inc
push
fs
les
retf
and
dec
popf
sub
xchg
fs
shr
pop
icebp
inc
and
and
add
ror
(bad)
loopne
sbb
and
fnstsw
mov
cmp
out
sub
sahf
sbb
jmp
xor
push
mov
mov
jl
xlat
mov
push
dec
push
rcl
arpl
ficom
cld
ret
adc
sub
iret
xor
jge
dec
push
sti
imul
nop
inc
mov
out
into
rcl
inc
clc
int
imul
call
dec
(bad)
icebp
push
pop
adc
sti
das
mov
inc
addr16
ss
push
xchg
mov
adc
movs
jo
mov
and
loop
icebp
repz
call
test
fst
cdq
stos
bndstx
mov
jp
scas
pop
jbe
pop
mov
mov
add
inc
xchg
mov
jne
push
mov
loope
xchg
ins
push
jnp
lock
mov
xor
out
cmp
retf
out
inc
mov
adc
pushf
mov
fdiv
adc
mov
xrelease
dec
mov
or
inc
hlt
push
mov
add
pop
jg
rcl
inc
xlat
pop
or
mov
jmp
clc
mov
pop
adc
sbb
pop
jne
int
cmp
push
jne
mov
mov
pop
stc
fdiv
fcmovnb
rcr
push
sub
retf
out
xchg
into
rcr
pop
cmp
retf
lods
inc
sbb
push
cmp
jns
mov
ficomp
adc
or
out
jb
loope
push
movs
push
out
(bad)
ss
pop
out
mov
stos
cmps
sar
and
ror
cmp
fiadd
out
push
mov
fbld
xchg
push
adc
aad
jae
sbb
cwde
sub
mov
scas
pop
adc
stos
repnz
icebp
retf
jle
ret
out
dec
jle
shr
fdiv
jno
int
(bad)
push
push
in
dec
mov
push
leave
add
call
shl
push
ins
sbb
mov
push
enter
ficom
rol
icebp
aad
push
pop
cli
mov
push
push
add
push
icebp
cmps
and
inc
jbe
pusha
xchg
pop
cld
jmp
jne
inc
mov
jbe
sub
mov
push
out
inc
dec
jne
inc
popf
imul
out
jb
dec
pop
cmp
lock
(bad)
inc
mov
daa
pop
in
or
enter
mov
cwde
pop
dec
cmp
retf
ja
in
xchg
add
js
cmp
sub
fld
rol
addr16
add
sub
ret
inc
pop
je
add
add
loop
pop
sti
xchg
outs
popf
mov
shl
pop
dec
or
and
inc
je
cmp
daa
mov
iret
data16
and
jmp
push
ds
push
(bad)
xor
push
pop
mov
pop
and
imul
adc
xor
movs
mov
(bad)
xor
sbb
gs
retf
add
mov
jne
fs
jp
dec
js
out
add
shl
pop
cmp
repnz
dec
xchg
shr
xlat
xor
fsubr
aad
jb
call
imul
fs
cmp
jmp
jp
jecxz
mov
fisttp
daa
(bad)
and
fsubr
pop
popf
bnd
lods
jmp
ror
xor
jmp
movs
les
sbb
popa
pusha
pop
enter
xchg
push
loope
addr16
mov
lods
sub
test
std
push
adc
xor
pop
repz
(bad)
pop
xchg
mov
mov
and
xchg
mov
jp
cmp
(bad)
in
inc
movs
and
int
jecxz
pusha
push
push
loop
dec
(bad)
and
pushf
xor
outs
cld
sysret
pusha
mov
adc
sahf
xor
push
jbe
sbb
loope
aas
jge
outs
jbe
in
inc
xchg
dec
jnp
call
jne
push
sbb
ja
mov
push
mov
push
cvtdq2ps
test
cmp
lods
les
push
mov
cmp
sbb
iret
ret
addr16
pop
mov
inc
scas
mov
cmps
pop
sub
mov
push
or
xchg
shl
arpl
sahf
or
pushf
cmp
call
in
and
ss
rcl
mov
or
mov
push
(bad)
icebp
mov
mov
jg
push
pop
shl
push
cli
adc
and
idiv
sub
lahf
mov
push
not
xchg
inc
mov
and
mov
and
ret
fs
mov
push
dec
test
xchg
dec
es
fistp
popa
daa
mov
std
test
jns
or
xlat
xor
cs
and
(bad)
xor
mov
inc
idiv
into
and
pop
clc
aaa
pop
and
add
add
cwde
mov
jmp
leave
movs
test
adc
fcmovnbe
cmps
or
sbb
and
add
fucom
int
cmp
pop
out
or
ret
jge
shl
ins
cmc
mov
ss
pusha
in
mov
out
xchg
in
jb
movs
ins
lea
retf
std
push
scas
push
(bad)
imul
fld
mov
int
psubusw
dec
les
add
cmp
xchg
dec
jno
mov
mov
jl
(bad)
aad
adc
push
jp
sub
movs
pop
shl
je
push
in
xlat
mov
and
ret
lods
pop
push
add
or
mov
out
(bad)
les
jbe
add
pop
cld
mov
lds
cs
cli
clc
lea
sub
or
mov
inc
cli
stc
repz
scas
inc
popa
imul
cli
cmp
pop
adc
repnz
inc
out
out
int
enter
sbb
or
mov
test
in
fisubr
movs
pop
inc
shr
add
call
out
(bad)
cwde
sub
sti
mov
jmp
ret
dec
or
push
cmp
sbb
cli
xor
push
mov
cmps
fistp
enter
push
push
push
add
in
outs
push
or
mov
pop
mov
sub
sub
aad
xchg
mov
pop
inc
jmp
xchg
sbb
js
adc
repnz
xor
sub
pop
ss
test
in
pop
mov
test
jmp
push
inc
test
adc
ret
cmc
bound
sub
cmps
leave
aaa
xchg
push
sbb
pop
stos
ss
xchg
neg
sbb
xor
jp
and
jmp
out
and
stos
fsub
adc
adc
fsubr
imul
xchg
xchg
dec
xor
stos
ins
arpl
test
xchg
jecxz
jne
iret
dec
bound
stc
sti
(bad)
push
mov
jp
stos
jecxz
xor
shr
dec
xor
adc
mov
xchg
push
jns
stos
adc
sbb
lock
mov
add
pop
add
dec
addr16
cmps
push
scas
jb
in
neg
jae
pop
mov
xchg
out
sahf
(bad)
xchg
in
test
mov
test
cmp
fimul
js
or
ficom
outs
xor
mov
mov
cwde
jbe
scas
pcmpeqd
call
dec
adc
aaa
cdq
ret
mov
sub
inc
in
enter
call
sahf
push
mov
xor
cmp
mov
xchg
mov
pop
lea
mov
iret
add
sbb
jmp
cmc
and
and
cdq
test
cmps
inc
popf
bound
test
and
out
mov
push
retf
and
sbb
sub
call
test
mov
inc
mov
lahf
push
pop
sti
inc
mov
fwait
mov
icebp
fild
out
push
sbb
mov
jnp
out
xchg
or
ss
sub
sar
add
push
fstp
mov
xchg
pop
outs
sub
mov
xchg
push
pop
out
xchg
clc
or
imul
rol
iret
pop
pop
lods
mov
or
test
test
xchg
jnp
adc
push
push
add
mov
mov
dec
mov
call
mov
and
xor
sub
fwait
xchg
or
pop
inc
lea
std
push
test
jge
dec
and
iret
(bad)
adc
stos
call
mov
xchg
retf
mov
daa
jne
push
sbb
in
fst
cmp
or
push
pop
fild
jmp
jbe
sub
add
or
xor
sub
cmc
mov
sbb
loop
fmul
sub
fs
cdq
jb
outs
dec
loope
jmp
out
test
mov
imul
cmp
sbb
outs
lea
loope
jge
sbb
jno
imul
jmp
inc
or
sub
jne
mov
icebp
sar
mov
cmp
mov
fild
fistp
push
popf
imul
imul
retf
mov
jecxz
sub
ins
push
push
xchg
mov
mov
jmp
mov
add
inc
aas
jp
movs
pop
mov
or
in
out
pop
inc
sub
jne
sub
xchg
jmp
rcr
repnz
jae
or
sub
movs
stos
inc
mov
mov
adc
mov
and
inc
push
les
pusha
pavgb
and
jle
or
hlt
mov
dec
xchg
push
pop
mov
xor
rcl
pop
mov
out
xchg
hlt
loope
pop
movs
push
stc
add
dec
mov
inc
xchg
inc
(bad)
mov
in
cmovbe
push
mov
cmp
pop
ins
add
xchg
jmp
popa
lahf
inc
retf
ficomp
mov
pusha
mov
inc
push
les
int3
(bad)
aaa
sbb
rol
in
mov
ins
call
xchg
push
xor
jp
loopne
lods
push
or
out
cmp
xlat
jge
iret
sbb
pop
jle
call
stc
jne
daa
cli
mov
test
lahf
in
aam
add
xchg
mov
bound
out
push
shl
jo
daa
das
inc
inc
(bad)
add
dec
ret
sub
(bad)
gs
(bad)
sar
ds
cdq
push
add
imul
jo
xchg
lods
adc
sub
arpl
out
sub
push
sbb
sub
ret
rep
pop
dec
pusha
test
movs
pushf
xor
psadbw
aad
movs
call
pushf
popa
lahf
mov
gs
mov
fadd
arpl
fwait
call
lods
fstp
mov
cmc
fxtract
pop
xchg
mov
sbb
and
sar
xor
push
xchg
imul
and
popf
pop
xor
push
stc
fimul
xlat
jecxz
pop
enter
aas
retf
inc
idiv
xor
pop
mov
leave
or
retf
shr
jmp
and
cmp
pop
mov
dec
pop
adc
popa
out
or
jno
test
or
and
jecxz
fwait
push
cmc
pop
add
ins
mov
sub
(bad)
into
mov
jle
pop
jecxz
jecxz
ds
popa
push
sub
xchg
mov
mov
or
loope
gs
aad
add
cmp
js
cmp
and
mov
pop
pop
jecxz
mov
xor
rcr
xchg
adc
cmp
loope
int3
clc
xchg
adc
pop
mov
call
aam
shl
retf
in
mov
mov
push
enter
adc
retf
fadd
dec
outs
dec
ror
xor
mov
in
mov
cmp
outs
jge
loope
fs
movs
gs
js
aam
cs
out
outs
out
das
punpckhwd
cld
mov
retf
int3
pop
push
in
sbb
cmps
push
push
xor
jge
mov
sub
pop
ret
lahf
push
and
dec
sub
test
loopne
mov
arpl
aaa
push
int
sbb
jecxz
jecxz
pushf
inc
jge
ror
movs
xchg
pop
arpl
adc
mov
retf
loope
push
fs
dec
les
mov
mov
(bad)
push
adc
cli
ret
mov
call
bound
imul
xor
out
clc
cmp
mov
das
(bad)
iret
add
push
test
or
add
out
mov
sub
or
aaa
mov
pop
into
fistp
push
mov
sbb
sub
mov
mov
fdivr
mov
cwde
mov
ins
iret
adc
mov
and
outs
dec
iret
adc
cmps
dec
sub
sbb
pusha
and
pop
movs
inc
xchg
test
push
ss
and
mov
std
call
xor
mov
or
jp
loope
or
pop
mov
jle
jbe
xchg
repz
(bad)
xor
push
mov
or
xor
or
pop
mul
xchg
js
outs
call
push
sub
or
sbb
fld
and
scas
jmp
jle
lods
in
mov
push
test
mov
mov
rcl
aam
rcr
cmp
adc
mov
int
cs
and
fwait
or
inc
ror
mov
scas
leave
mov
cdq
mov
call
inc
and
push
ror
mov
out
and
rcr
push
cld
pop
aad
out
mov
push
in
adc
ficomp
lods
stc
rcl
sbb
das
ds
popf
leave
popa
xor
xor
mov
ja
mov
enter
mov
mov
ret
mov
out
xchg
aas
mov
push
test
sbb
mov
adc
cs
popf
add
outs
add
push
retf
popf
cmp
or
sub
mov
pop
pop
add
mov
test
push
out
or
pop
pop
push
jo
mov
dec
call
frstor
sbb
mov
and
add
icebp
cs
and
mov
sbb
imul
arpl
adc
adc
shr
adc
cmps
aas
shl
lahf
movs
adc
aam
es
movs
xchg
not
add
test
sub
dec
lahf
rcl
xchg
movs
push
outs
xchg
movs
jp
mov
(bad)
lds
mov
mov
iret
or
int
inc
or
pop
out
retf
test
mov
adc
cmps
mov
mov
sbb
cs
(bad)
fild
jns
inc
fwait
and
sbb
mov
xor
mov
sar
or
call
mov
xor
mov
pop
stc
neg
dec
mov
jge
sti
xor
ret
lea
mov
push
sti
jecxz
out
jmp
jb
cmp
sar
adc
push
push
and
call
push
sbb
sbb
int3
mov
jae
inc
adc
sub
imul
stc
dec
jmp
out
imul
and
mov
popf
and
sub
push
push
(bad)
jne
movs
pop
sti
shl
movs
push
adc
push
mov
or
inc
dec
jne
arpl
xor
and
icebp
or
ja
outs
mov
mov
jo
sbb
inc
sbb
sub
jns
push
int
sar
out
or
(bad)
(bad)
jmp
test
inc
adc
jne
jns
jge
inc
add
cmc
lahf
es
test
sahf
cwde
gs
dec
push
push
cs
sub
inc
jb
retf
sub
jmp
inc
shl
mov
mov
stos
arpl
retf
test
sub
(bad)
fist
cmps
lods
ffreep
pop
jnp
aaa
jmp
sti
xor
mov
pushf
fimul
mov
fadd
mov
hlt
mov
fld
mov
gs
mov
mov
retf
mov
rcl
mov
mov
nop
cmp
xor
sar
lea
sub
out
or
mov
xor
int
mov
hlt
pop
mov
je
mov
arpl
adc
mov
push
ss
or
or
pop
add
mov
clc
dec
pop
sub
outs
xor
dec
outs
clc
test
ins
bound
mov
movs
popa
mov
mov
pop
adc
adc
mov
popf
push
push
jmp
xchg
aas
push
mov
(bad)
mov
sar
cmp
mov
popa
addr16
cwde
outs
xchg
xor
sbb
xlat
cmp
(bad)
and
fimul
and
movs
test
retf
dec
loopne
lods
out
popf
unpckhps
xchg
dec
or
loope
shl
mov
pop
ret
jae
push
jns
add
into
inc
push
out
pop
fcomp
shl
or
pusha
clc
movs
mov
push
mov
movs
adc
cmp
(bad)
push
shl
and
add
cmc
out
in
inc
jp
test
push
sbb
ficom
ins
xor
mov
xchg
xchg
push
push
cmp
daa
mov
add
jmp
xor
or
ins
aad
xor
xchg
std
mov
sub
cmp
add
push
std
mov
fist
sub
inc
push
push
xor
xor
rcl
not
pop
pop
xor
out
add
sahf
xchg
xchg
rcr
sub
mov
and
add
pusha
pushf
loop
add
cmc
inc
fdiv
aaa
loop
push
gs
or
lahf
test
in
in
(bad)
xor
fidivr
jb
cmp
push
es
ja
xor
shl
inc
sub
cmp
mov
sar
enter
xchg
outs
out
(bad)
ret
sub
imul
push
jg
dec
lods
mov
xchg
sbb
ins
dec
call
in
fisttp
mov
pop
xor
idiv
sbb
inc
ds
nop
sbb
cmp
shr
jb
addr16
int
or
out
scas
in
and
mov
jecxz
dec
push
mov
add
js
loopne
push
stos
adc
data16
push
mov
aas
ss
push
xor
in
cs
cwde
js
mov
mov
cmp
pop
cmp
arpl
dec
out
stos
mov
add
arpl
mov
jg
cld
popf
or
imul
push
stos
movs
ret
(bad)
ficomp
cmc
popf
(bad)
jmp
mov
pop
sbb
ins
xchg
xchg
xor
test
mov
and
movs
dec
push
cmps
mov
xchg
fnstenv
lods
arpl
into
cmp
fistp
adc
test
mov
and
in
and
push
jns
outs
fs
lods
dec
mov
cmp
fs
pop
push
mov
sbb
sbb
les
xor
fisubr
retf
inc
dec
jb
push
cmp
out
or
les
cs
repnz
repz
xchg
repz
pop
in
(bad)
cli
xchg
pushf
mov
mov
aas
lock
dec
xchg
mov
jmp
sbb
add
in
adc
leave
jne
inc
dec
out
cdq
sti
je
pusha
jo
sub
cs
pop
and
sub
fidivr
or
or
loopne
inc
inc
pop
xchg
(bad)
xor
jg
sub
inc
jmp
jle
pop
xchg
adc
lods
lock
dec
and
stos
out
retf
icebp
test
iret
or
jae
icebp
inc
cld
div
sti
fnstenv
sbb
mov
jg
ja
mov
xchg
sbb
sbb
outs
aaa
mov
add
push
(bad)
(bad)
jmp
and
xchg
xlat
(bad)
icebp
xchg
adc
adc
sbb
ds
lgs
cs
and
cmp
int3
inc
(bad)
mov
bound
add
xchg
iret
lods
jmp
dec
xchg
mov
xor
cmc
push
into
and
loope
addr16
sbb
jp
rol
cdq
mov
xchg
xchg
shl
push
inc
jge
jae
add
add
in
xor
je
cdq
adc
lods
dec
xchg
ss
mov
inc
lahf
mov
lock
jl
xor
jp
jae
scas
in
inc
mov
adc
jnp
xchg
loope
ins
dec
mov
sub
jecxz
neg
pop
(bad)
in
adc
or
inc
inc
fcom
adc
inc
xchg
cmp
cmc
mov
sbb
aad
xchg
mov
or
and
cwde
mov
ins
aas
in
cmp
dec
test
enter
push
mov
xchg
je
adc
js
test
mov
test
repnz
mov
shl
push
in
xchg
sub
jo
inc
adc
mov
retf
call
inc
outs
das
(bad)
lea
mov
pop
xor
xlat
add
cmps
fst
bound
xor
sbb
inc
fwait
popf
inc
adc
pushf
or
mov
xlat
mov
push
outs
push
test
into
wbinvd
add
jb
xlat
jp
cld
and
aad
bound
shl
test
mov
mov
scas
leave
push
(bad)
jae
dec
adc
dec
repz
fisttp
xchg
add
repnz
icebp
(bad)
mov
sub
dec
inc
int
in
loope
int3
jno
cdq
dec
xchg
push
pop
xchg
jecxz
fwait
ret
mov
fwait
shl
adc
je
xchg
bound
out
fsubr
imul
inc
ret
test
or
(bad)
popf
fbld
inc
jg
repnz
(bad)
test
sub
lods
adc
dec
mov
pop
je
popa
sub
pop
shl
movs
rcl
mov
and
mov
cmc
mov
mov
inc
fsub
not
loop
rcl
cmp
lods
xor
mov
in
mov
lea
pop
dec
(bad)
enter
push
dec
xchg
add
das
cmp
or
push
lds
adc
push
dec
fstp
cmp
jmp
jle
outs
adc
jle
nop
mov
add
lods
imul
xchg
(bad)
push
out
fld
shr
add
ds
repz
cmps
mov
mov
mov
cmps
aad
aad
leave
les
sub
sub
or
in
fadd
scas
sbb
jae
xor
xchg
repz
(bad)
cli
and
repz
aam
xchg
pop
stos
daa
nop
in
stc
and
test
(bad)
stos
dec
lock
pop
xor
dec
dec
add
mov
mov
mov
adc
push
cli
in
xchg
dec
jmp
jmp
rcr
push
outs
jle
ficomp
(bad)
push
or
je
sbb
jmp
and
popa
into
push
xchg
sar
je
sub
into
pushf
or
jae
xor
ds
fisttp
jmp
cs
popa
jno
jmp
xchg
xchg
rol
sub
jge
fadd
add
xor
adc
fisub
xchg
xchg
aas
jge
fiadd
pop
xor
push
xor
mov
or
test
cmp
sbb
cmp
div
arpl
lock
call
push
mov
lods
lea
and
sub
out
xchg
mov
test
pop
test
into
sub
jne
outs
das
and
outs
sbb
and
dec
mov
cmps
(bad)
loop
xor
or
mov
push
mov
jp
int3
add
add
cmp
xor
sub
popa
(bad)
jge
mov
imul
jl
iret
out
in
xor
fcom
jne
shl
lods
or
arpl
mov
push
loopne
das
add
(bad)
push
mov
jnp
ja
out
mov
mov
stos
(bad)
mov
pop
and
(bad)
enter
push
ss
xchg
xchg
das
and
mov
not
inc
sbb
fld
jo
data16
stc
sub
into
cmp
cmp
push
fsubr
cmp
fwait
sub
dec
add
inc
bound
sub
dec
test
push
or
pop
adc
(bad)
pop
push
movs
mov
mov
or
pop
iret
sti
clts
sub
dec
iret
push
add
sahf
(bad)
ins
xchg
imul
retf
ret
(bad)
fdivp
iret
mov
sbb
cmc
inc
mov
jecxz
lds
ins
neg
daa
out
sbb
cmp
(bad)
iret
xchg
rcl
or
shl
jns
adc
mov
jns
jns
frstor
dec
xor
fidivr
add
xor
pop
cwde
outs
jb
inc
ins
(bad)
xchg
mov
xor
mov
jle
pop
mov
mov
lea
imul
pop
repz
mov
jmp
lea
icebp
dec
mov
mov
(bad)
bound
ja
retf
(bad)
lock
call
fld
lods
movs
or
gs
out
lahf
cs
cdq
pop
adc
sub
jbe
aam
adc
lock
push
dec
sbb
(bad)
jg
pop
(bad)
push
mov
fwait
das
lahf
push
ret
fsubr
mov
loop
xlat
xor
inc
outs
jl
out
dec
jno
in
icebp
push
push
out
bound
jle
aam
lds
mov
ss
jns
add
popa
add
outs
jnp
xor
sub
push
and
add
push
sbb
cmp
push
shr
test
add
mov
(bad)
push
jp
ret
or
ret
jmp
lods
or
das
and
imul
and
int
aad
adc
sub
or
pop
fs
mov
pusha
pop
jg
imul
inc
cmp
jbe
hlt
or
movs
push
sbb
or
arpl
mul
aad
and
hlt
push
inc
ins
jge
(bad)
scas
push
stc
mov
mov
fst
inc
push
shl
int3
and
xchg
sub
mov
add
mov
push
mov
mov
pop
gs
mov
aaa
and
lods
jns
sub
cmp
push
adc
push
sbb
pop
fcmovnu
test
adc
xor
xor
(bad)
pop
(bad)
push
enter
aam
cmp
and
(bad)
call
out
cmp
pop
in
fcomp
ss
(bad)
sti
mov
fidivr
mov
sub
outs
or
std
inc
pushf
jmp
lods
pop
dec
mov
repz
shl
sbb
loop
sar
and
lods
adc
xchg
or
xchg
(bad)
data16
fcmovu
cmp
jg
ret
cwde
jmp
and
daa
mov
or
mov
push
mov
in
loopne
mov
fsub
xor
and
cmp
outs
addr16
cmp
add
sbb
(bad)
je
stos
div
out
ret
pop
imul
pop
pop
bound
dec
push
inc
inc
test
mov
pop
and
mov
dec
sub
dec
bound
call
cld
xchg
and
xchg
mov
inc
ret
out
fs
inc
jecxz
adc
add
lods
and
jno
sbb
lea
inc
xlat
int3
loop
dec
nop
mov
mov
jp
mov
in
dec
cmp
out
loope
mov
sbb
std
push
sbb
inc
xor
ret
sti
into
push
xlat
mov
sti
mov
jnp
inc
aas
xchg
(bad)
rcr
fdiv
ds
add
xor
mov
daa
mov
add
push
in
in
push
cld
cdq
mov
pop
mov
inc
cmp
in
hlt
xchg
jbe
cmps
mov
in
outs
xchg
(bad)
call
mov
loope
inc
cmp
jo
call
push
les
dec
xor
pop
xchg
repnz
and
call
(bad)
dec
das
cmp
retf
iret
lea
ds
mov
push
aam
dec
test
loope
scas
sar
into
inc
jmp
lock
push
rcl
mov
mov
aad
sub
pop
pushf
bound
xchg
aam
or
fwait
push
pop
push
sub
shl
or
or
das
ret
xor
mov
or
in
lock
xor
sub
hlt
dec
xchg
(bad)
mov
sub
adc
jbe
aas
(bad)
pop
test
stos
bound
push
repnz
xlat
in
cmps
push
dec
push
imul
xor
aaa
mov
pop
mov
rol
lahf
xchg
ja
cmp
add
outs
jbe
and
cmp
rcr
pusha
leave
mov
int
or
fisubr
pop
sub
add
call
ror
and
xchg
jmp
sahf
inc
xor
movs
mov
push
sub
mov
add
add
jmp
add
push
sub
shl
push
lods
mov
xor
pop
(bad)
retf
mov
pop
push
xor
loop
xor
loope
(bad)
or
jmp
mov
cmp
add
and
or
mov
xchg
hlt
push
test
(bad)
mov
dec
hlt
cmp
mov
dec
pop
ins
sub
xor
mov
retf
ins
xor
sti
mov
(bad)
data16
ret
push
or
adc
xor
xor
mov
ss
mov
pop
jge
pop
popf
movs
call
in
mov
ja
xchg
and
cld
fstp
ret
lahf
ret
mov
cmps
pop
fwait
pop
sbb
adc
mov
pop
out
mov
loopne
ret
push
fsubr
mov
adc
pop
outs
pop
loopne
shr
pop
pop
push
stc
pop
dec
dec
cmps
jae
int
inc
addr16
pop
inc
int
push
ror
idiv
ins
clc
mov
aas
rcl
frstor
dec
mov
cmp
enter
cmova
into
sub
nop
jge
test
add
fs
(bad)
cld
and
cmc
inc
iret
inc
idiv
add
jmp
push
(bad)
or
les
pavgb
push
imul
mov
sub
jb
xchg
test
xchg
sahf
mov
xchg
ins
push
iret
mov
jle
push
sub
daa
sub
out
dec
outs
push
out
fidivr
sbb
add
mov
xlat
sbb
or
ds
f2xm1
stc
repz
sub
adc
jge
and
inc
test
or
sbb
aas
(bad)
shr
int3
scas
(bad)
adc
xor
test
mov
dec
mov
clc
arpl
add
sbb
mov
aaa
xchg
lea
ret
sbb
les
adc
cmp
out
mov
xchg
xor
pop
fst
mov
jmp
xchg
sbb
je
rcl
outs
in
mov
sub
je
push
sbb
sbb
pop
shl
call
push
pop
popf
jno
sub
sub
mov
jmp
xchg
mov
pop
lock
jno
mov
jp
icebp
inc
adc
cmp
in
push
ds
rcl
ret
jg
test
clc
je
adc
mov
xor
fisttp
pop
loopne
pop
mov
pop
pop
inc
xchg
inc
call
mov
call
mov
push
stos
mov
and
jbe
add
dec
jb
mov
shl
sbb
dec
lea
and
bound
rol
xchg
xchg
cmp
mov
pop
popf
add
loopne
or
imul
xchg
adc
mov
cmps
xchg
sbb
adc
mul
pop
or
aaa
mov
sbb
mov
(bad)
push
loop
or
cmp
sub
add
sbb
pushf
repz
pop
mov
sahf
je
sbb
add
cmps
sub
xor
add
arpl
pop
push
sub
adc
bound
xchg
pushf
sub
(bad)
jae
dec
mov
xchg
(bad)
or
mov
loopne
rcr
bound
bound
mov
in
popa
adc
cwde
fdivr
pusha
loopne
imul
(bad)
dec
outs
lods
or
retf
fiadd
test
dec
or
enter
sbb
cmp
scas
xchg
clc
movs
pop
inc
and
push
fcmovu
test
jns
stos
mov
add
pop
pop
sub
and
inc
arpl
add
into
arpl
cmc
push
xor
cs
dec
jb
and
cmp
mov
adc
repz
pushf
add
xchg
ins
les
sbb
(bad)
retf
(bad)
rcr
xor
and
ret
jp
mov
es
aaa
inc
push
pop
out
push
or
les
and
ins
js
cmp
push
pop
mov
jbe
mov
cmps
(bad)
sbb
dec
dec
xchg
push
clc
pop
retf
sub
dec
cwde
push
add
sbb
pop
shl
push
jl
aas
iret
ds
xchg
xchg
mov
scas
jne
neg
iret
fcomp
jb
iret
xlat
inc
ds
mov
jbe
or
xor
push
fidivr
mov
xchg
(bad)
and
xlat
sbb
mov
inc
push
cdq
xor
in
das
sub
dec
push
adc
cwde
add
pop
inc
in
or
test
iret
jbe
loopne
push
ret
mov
mov
out
xchg
cmp
jmp
je
mov
and
xchg
cmp
sbb
or
jmp
icebp
sti
adc
cdq
ins
sub
test
push
push
vmovq
add
cmp
sub
fucom
das
or
pop
popa
and
aam
cwde
push
or
add
imul
arpl
std
clc
stc
int
ds
ins
and
sbb
pushf
sub
push
xchg
pop
mov
dec
fisttp
inc
inc
add
pushf
cmps
ins
es
pop
in
dec
cmp
repnz
sbb
jns
stos
xor
jl
jbe
jle
das
leave
call
push
push
je
xor
cli
add
fidiv
mov
in
mov
push
dec
adc
or
mov
stos
mov
mov
inc
mov
stc
fiadd
arpl
mov
fdivr
dec
js
jl
or
pop
and
xchg
sub
js
add
(bad)
adc
dec
jge
pop
frndint
jp
jns
sbb
hlt
pusha
sbb
ret
adc
pop
mov
test
test
jo
add
jp
sub
pop
xchg
mov
and
pop
mov
iret
popf
xchg
dec
inc
repz
xor
pop
and
inc
cmp
stos
in
push
outs
or
sti
or
adc
es
bound
sbb
and
adc
in
jne
push
sahf
(bad)
cli
nop
push
or
lods
and
or
push
inc
xchg
push
xor
ss
adc
fistp
les
mov
fcom
sti
shr
sbb
lea
push
in
clc
retf
jmp
and
outs
dec
and
or
inc
icebp
loope
std
jl
je
pop
or
mov
int3
mov
mov
stc
ret
cmp
pop
in
out
bound
cmp
xchg
fbld
ja
sahf
dec
push
xor
and
fild
mov
stc
mov
jne
mov
add
jmp
pop
or
inc
jmp
jecxz
inc
xor
push
or
pop
jmp
out
loop
rcr
sbb
jbe
push
cs
ss
dec
test
adc
dec
jno
out
mov
int3
pusha
xchg
jle
movs
sbb
mov
retf
xor
es
xchg
fbstp
inc
xchg
arpl
cs
jns
xor
test
clc
pop
dec
mov
adc
cmp
cli
outs
xchg
cwde
dec
dec
mov
test
push
fimul
pushf
mov
mov
retf
dec
scas
inc
or
cmp
and
shl
xchg
mul
mov
and
rep
rcr
outs
shl
ror
fld
fidiv
fcomp
xchg
xor
lods
inc
fsubr
cmps
(bad)
fsub
mov
jae
es
xor
cdq
je
fild
cdq
mov
je
cmps
xor
popf
ficom
mov
stos
mov
mov
sub
fist
jecxz
mov
int3
in
dec
fmul
pusha
fstp
inc
arpl
or
aam
in
cmc
inc
xchg
popf
out
ret
cdq
push
or
or
mul
sbb
out
les
xchg
loope
lock
cld
lods
xchg
imul
add
mov
pop
jbe
sub
push
push
imul
fsub
aad
adc
cmp
retf
clc
ins
(bad)
retf
adc
cmp
mov
or
cmp
in
aad
xchg
dec
js
sbb
aam
in
ror
cmps
sti
fcmovb
or
xor
cmp
or
cmps
das
mov
int3
cmc
sub
add
dec
inc
cwde
inc
movs
jle
pop
imul
(bad)
call
mov
dec
ja
movs
aam
mov
dec
mov
popf
fwait
xor
sub
aad
(bad)
pop
jno
shr
and
das
nop
or
sbb
sbb
loope
ss
cmps
leave
jae
fidiv
xchg
xchg
inc
bound
ret
(bad)
cmp
sub
mov
mov
xchg
clc
in
xchg
rol
fsubr
gs
stos
xchg
mov
je
cmps
call
push
mov
aad
and
mov
sbb
cmps
dec
retf
push
jns
inc
loopne
jns
push
inc
in
inc
cmp
xchg
xor
lods
jmp
cmps
mov
mov
cmp
mov
test
xchg
jle
in
add
jmp
or
lods
xor
adc
lods
mov
mov
mov
ja
dec
or
push
or
dec
sar
add
scas
sub
and
mov
and
fiadd
sbb
scas
stos
mov
je
or
call
push
sbb
push
xchg
loop
das
push
daa
popf
mov
test
and
cmp
xlat
ins
ret
jbe
cli
loope
sbb
xchg
test
pop
fiadd
pop
nop
adc
sbb
cmp
fdivr
stc
cdq
(bad)
inc
pop
jb
mov
pop
cmp
mov
cli
stos
mov
pushf
stos
movs
mov
and
cmps
call
call
xchg
push
adc
pop
aaa
xchg
movs
cdq
loop
xor
fs
ror
push
jg
adc
cld
cmps
add
xor
cmp
jno
add
mov
clc
test
sub
xor
mov
add
mov
push
int
mov
pop
imul
pop
dec
popf
inc
sbb
inc
inc
lock
push
inc
cld
inc
cmp
arpl
push
dec
popa
sub
inc
pop
xor
(bad)
fnstcw
(bad)
xchg
xchg
clc
(bad)
and
push
mov
or
and
and
fdiv
and
jbe
add
xor
and
xor
sbb
je
fs
test
cs
push
inc
cmc
ds
into
sar
xor
mov
ret
sub
outs
loopne
pop
popf
inc
inc
les
test
xor
mov
out
cmp
in
and
or
and
pop
aas
xchg
dec
mov
aas
bound
push
sahf
daa
idiv
ds
cwde
or
dec
add
cdq
mov
mov
jecxz
xor
mov
mov
and
add
mov
xor
push
fucomi
je
test
xor
enter
jmp
jmp
dec
out
pop
rol
push
scas
jo
rdtsc
cmp
adc
(bad)
ins
pop
mov
imul
jae
rcr
in
xchg
mov
and
nop
fdivr
xchg
data16
test
enter
icebp
fsub
int
mov
clc
sar
xor
jne
adc
xchg
(bad)
mov
repnz
imul
sub
in
scas
ds
push
jg
outs
or
lahf
pop
mov
sti
(bad)
cli
mov
dec
sub
adc
and
les
xchg
pop
(bad)
es
jmp
data16
lods
jle
inc
idiv
cdq
dec
jp
ret
pop
cmps
in
daa
rcr
jns
ja
or
cmp
jne
repnz
mov
inc
mov
or
ret
xchg
jmp
mov
scas
jae
jbe
mov
mov
push
in
inc
out
js
xor
xor
es
shl
ins
push
xchg
xchg
or
cmp
dec
jg
xor
adc
fs
jbe
int3
fs
sub
jbe
shr
outs
cli
(bad)
jbe
dec
mov
pop
adc
jmp
sbb
test
adc
push
fisubr
lods
rcl
cmp
into
in
jle
call
shl
dec
xor
adc
out
adc
mov
add
jae
mov
push
jmp
rol
shl
mov
and
sbb
push
out
cmp
and
pop
fs
(bad)
pop
movs
jmp
fwait
inc
xchg
leave
jae
jae
fist
jns
sti
pop
push
mov
or
scas
mov
push
push
jle
jo
mov
add
jns
xlat
fisttp
inc
mov
mov
adc
lods
pushf
frstor
arpl
shl
arpl
cwde
aam
retf
adc
aad
sti
daa
pop
mov
ins
rol
into
in
dec
pop
adc
cwde
sti
or
fxch
inc
jp
xor
sar
movs
ins
cmps
jge
dec
out
pop
jbe
xchg
aam
(bad)
stc
fbstp
repz
(bad)
hlt
jg
stos
retf
rol
push
inc
rol
(bad)
int
ds
addr16
shl
mov
inc
in
cmps
enter
mov
add
mov
aaa
mov
(bad)
sub
jne
cmp
inc
sub
dec
sub
or
adc
cmc
xlat
hlt
(bad)
loopne
jmp
cmp
outs
pop
xchg
mov
loopne
ret
int3
pop
adc
mov
and
and
shl
adc
std
mov
lock
adc
jl
mov
leave
aad
pusha
and
aad
push
int
inc
popf
test
sbb
mov
fcom
ret
mov
push
out
xor
test
out
shl
push
mov
retf
arpl
call
mov
sbb
xchg
fyl2x
mov
leave
call
push
bound
repz
fldcw
mov
lods
imul
dec
xchg
outs
adc
or
jae
fidivr
adc
imul
xor
femms
es
fwait
dec
jbe
fistp
lods
retf
inc
pop
push
icebp
mov
jns
(bad)
fild
sbb
in
mov
cmps
ins
push
cmps
mov
pop
xchg
pop
adc
ss
test
imul
test
or
push
dec
retf
or
les
or
call
in
shl
cmp
icebp
lahf
inc
add
clc
sar
daa
pop
cmp
cmp
sbb
sbb
lods
inc
repnz
cmps
sbb
shr
mov
les
out
cmp
push
aam
loop
push
inc
jmp
sub
leave
inc
dec
lds
add
and
jb
aas
neg
dec
or
sub
sub
sbb
jmp
rol
call
push
ror
nop
add
xchg
mov
jp
mov
jge
dec
add
mov
retf
imul
mov
push
push
sbb
ror
cmps
sbb
and
pop
rcl
into
lds
pop
gs
add
push
dec
xchg
adc
or
mov
shl
je
loope
fwait
mov
or
sub
pop
mov
loopne
xor
jg
pop
adc
jne
and
mov
or
icebp
imul
outs
jle
mov
and
js
push
jno
fstp
pop
call
jle
or
jae
js
jp
adc
xchg
xchg
(bad)
dec
lahf
ror
mov
pop
popf
cmps
xchg
repz
iret
jmp
fbstp
data16
sti
cmp
adc
sahf
cmp
pop
shl
stos
mov
mov
imul
fidivr
mov
jg
sub
add
sbb
cmps
push
repz
mov
sbb
xor
popa
repnz
mov
(bad)
mov
(bad)
ins
je
(bad)
ins
test
out
push
adc
mov
adc
nop
sub
xchg
lahf
push
pop
stc
call
outs
pop
mov
jp
dec
lods
aad
test
in
rol
test
sar
pop
dec
scas
ja
xor
(bad)
jecxz
jecxz
bound
cmc
push
fmul
add
cmp
mov
or
shl
and
movs
test
adc
pop
scas
inc
leave
xor
add
loopne
in
push
cld
lock
push
xchg
gs
ja
mov
add
adc
cmp
push
or
cmp
(bad)
icebp
ret
pop
mov
out
inc
icebp
dec
leave
cld
sbb
xchg
dec
out
pop
sub
mov
lods
jmp
or
sbb
mov
jge
in
das
les
repz
out
cli
sbb
sbb
add
fs
jl
mov
mov
movs
pop
aam
push
dec
sbb
ins
fsubr
pop
push
hlt
fistp
adc
bnd
fwait
leave
lods
mov
xor
mov
or
repz
adc
jbe
mov
cmps
fidiv
fwait
pop
cmp
pop
inc
push
mov
jg
pop
sub
aad
pop
sti
push
retf
(bad)
scas
inc
dec
std
and
mov
repnz
cld
sbb
lods
and
movs
stos
adc
sbb
das
or
dec
push
sti
adc
push
jp
retf
xchg
xor
loop
fmul
scas
sar
xchg
pop
ror
cmp
inc
lods
arpl
push
push
jns
jge
xor
in
adc
mov
nop
mov
adc
icebp
inc
inc
xchg
and
scas
add
call
cld
mov
jmp
mov
arpl
ror
out
adc
in
(bad)
movs
add
or
jmp
xchg
pop
ja
xchg
bound
pop
js
clc
or
pop
movs
pop
pop
mov
iret
mov
mov
imul
call
cmc
push
mov
outs
cmp
or
mov
add
aam
cmp
outs
cmp
cwde
out
and
pop
mov
mov
inc
(bad)
rol
jecxz
repz
pop
push
nop
and
cdq
or
sub
push
fbstp
mov
and
dec
pop
ss
or
inc
push
(bad)
ins
es
ss
ins
jl
and
mov
or
lahf
stos
rol
cmp
scas
xor
xchg
pop
sub
adc
dec
dec
mov
(bad)
shl
das
scas
sbb
mov
sbb
(bad)
clc
popf
rol
mov
mov
nop
sub
lods
rcr
inc
add
mov
not
(bad)
cdq
dec
xchg
mov
nop
inc
xchg
aam
mov
adc
clc
mov
jle
in
or
ins
pop
push
or
cmp
add
push
mov
mov
add
and
mov
jecxz
das
sbb
xor
pushf
movs
mov
leave
leave
(bad)
jmp
jecxz
add
scas
mov
or
std
and
int3
shl
dec
xor
or
mov
scas
mov
and
fcomp
pop
aaa
adc
add
clc
push
pop
cld
sub
aas
pusha
or
out
and
out
sbb
push
daa
lock
jmp
data16
xor
and
jo
loope
push
dec
push
push
push
daa
nop
add
cwde
jle
lds
mov
gs
das
stc
mov
cdq
lahf
mov
sub
or
cld
leavew
sub
pushf
jmp
push
or
mov
pop
sahf
je
in
daa
and
pminub
xor
or
enter
in
pusha
and
push
xlat
mov
mov
jbe
scas
sahf
ret
call
xchg
addr16
test
cwde
cmp
in
adc
out
jmp
mov
fst
or
push
and
sti
sahf
gs
addr16
xchg
leave
lock
mov
push
sub
rol
xor
push
lods
out
pop
repz
je
adc
mov
lods
js
in
stos
movs
imul
cmp
add
std
xchg
jmp
sbb
test
add
push
mov
(bad)
stos
adc
stos
mov
fdiv
dec
in
(bad)
xor
jg
sbb
jg
pop
pusha
sbb
and
dec
ins
outs
jecxz
jmp
ins
push
repz
add
push
test
jle
fwait
inc
les
ss
loop
outs
jecxz
repz
pusha
sbb
jp
fs
lds
sbb
out
test
mov
mov
jmp
outs
mov
lahf
lods
jg
xor
cmp
sub
sahf
(bad)
lea
retf
dec
jae
hlt
cmc
sub
es
mov
(bad)
cmp
stos
sbb
aas
xchg
cmp
mov
mov
arpl
je
ret
push
adc
ret
sub
ret
push
aad
in
pop
or
add
mov
movs
ss
lods
mov
hlt
and
xchg
popa
movs
add
sbb
aam
adc
fcmovnbe
cmp
outs
jbe
cmp
sbb
sbb
hlt
addr16
ins
xchg
rol
ds
pop
rcr
or
(bad)
and
mov
mov
out
push
cdq
fdiv
les
pop
or
xchg
imul
cdq
add
xchg
mov
mov
dec
push
fstp
add
cli
xchg
ja
xchg
add
imul
xchg
(bad)
jmp
mov
add
je
push
dec
pop
xor
or
xor
js
or
jl
pop
mov
mov
jmp
or
lahf
aas
jp
sub
and
imul
add
add
call
pop
mov
(bad)
(bad)
imul
ins
adc
push
sub
test
test
ror
sbb
in
pop
movs
fidiv
and
mov
(bad)
aaa
mov
retf
push
lods
mov
jo
sbb
dec
jb
and
es
cs
and
in
out
pop
aas
push
pop
lods
fbld
lahf
adc
mov
jmp
outs
push
dec
loopne
mov
or
sbb
inc
(bad)
cmp
cli
shl
or
dec
pop
(bad)
mov
pushf
scas
retf
arpl
scas
mov
dec
leave
arpl
pop
div
push
add
xchg
repnz
push
or
fsubr
mov
sub
(bad)
add
rcl
pop
xchg
fcmovnbe
pop
call
push
mov
inc
call
pop
iret
push
aam
in
imul
cdq
sub
push
stos
ja
je
push
sti
push
data16
leave
shl
(bad)
and
lock
jp
into
sub
out
shl
inc
out
and
push
mov
sar
in
jmp
sbb
pop
add
fdiv
and
and
rcr
sub
shl
sub
fiadd
test
and
xchg
adc
dec
pop
leave
xchg
ror
shl
jne
mul
cwde
push
rcl
repz
ret
cmps
(bad)
hlt
test
xor
inc
popf
dec
pop
add
cmps
sub
pop
repz
ds
dec
jge
pop
inc
fiadd
into
sub
ja
lahf
xor
pop
pop
inc
lea
enter
mov
mov
push
jl
outs
push
push
ja
fs
inc
sub
(bad)
dec
aaa
dec
sbb
gs
xchg
mov
push
enter
and
xor
inc
jnp
jb
scas
fbld
cs
pop
stos
es
cmps
test
sub
push
and
mov
cwde
out
scas
ret
fadd
sti
mov
retf
mov
pop
adc
mov
aas
xor
ror
adc
xor
dec
inc
nop
push
loop
dec
leave
scas
and
fdivr
and
mov
cmp
xchg
dec
popa
jle
jnp
pop
xchg
push
mov
cmp
cmp
jge
outs
int3
(bad)
dec
jno
mov
add
mov
mov
lods
cli
ret
pop
jns
pop
dec
cmp
mov
es
lea
aad
test
mov
xchg
lods
ja
jnp
pushw
adc
mov
jmp
or
mov
adc
sub
(bad)
sub
iret
add
repnz
stos
ins
sbb
push
add
aaa
xchg
pop
cmp
cmp
cld
mov
dec
dec
call
into
sahf
cmp
test
or
push
push
in
enter
mov
jmp
push
inc
aaa
je
das
mov
mov
push
inc
(bad)
dec
cdq
cld
js
or
sbb
add
cmc
iret
(bad)
dec
fs
pop
test
cmp
push
cmps
push
retf
or
popf
fscale
mov
dec
mov
xchg
dec
push
push
sub
mov
xor
clc
(bad)
ins
push
test
test
xchg
sub
test
jbe
pop
leave
jae
ja
shl
jne
adc
aas
add
and
mov
sub
sub
jne
test
shl
or
nop
mov
add
or
xor
dec
ror
lods
jmp
mov
xor
mov
or
inc
enter
(bad)
(bad)
sbb
xor
pop
mov
jnp
ja
inc
leave
cs
loop
int3
retf
clc
jp
xchg
mov
or
push
cld
iret
pop
ins
mov
jmp
sahf
mov
in
in
add
(bad)
and
outs
sti
mov
and
aad
(bad)
mov
add
movs
sbb
ror
pop
inc
mov
movs
fld
pop
popf
jl
mov
shl
test
cmp
movs
jecxz
in
bound
std
fld
imul
push
js
mov
call
cmc
sub
test
sub
jne
test
pop
leave
xchg
pushf
and
into
xchg
stc
sbb
cmps
sub
push
xchg
test
and
shr
and
xchg
nop
ficom
pop
(bad)
cmp
sahf
lods
mov
xchg
in
dec
clc
movs
ins
(bad)
mov
movs
mov
sub
ins
aas
push
pop
jle
in
xlat
stos
jmp
lahf
xchg
ins
and
push
pop
add
aam
es
dec
sbb
adc
nop
pop
shl
xchg
xchg
inc
sbb
cmp
sti
retf
xor
inc
out
(bad)
jge
dec
jmp
sti
dec
add
jno
mov
into
outs
jbe
je
stos
add
dec
pop
scas
test
push
retf
rcl
push
sbb
cmp
js
mov
mov
xor
xchg
mov
push
mov
lods
setne
repnz
ss
cmp
jmp
xor
xlat
(bad)
les
adc
or
jmp
inc
repnz
fnstenv
pop
test
or
push
cmp
mov
push
add
jno
retf
outs
add
arpl
mov
pop
iret
retf
imul
xchg
shr
psubusw
push
scas
mov
retf
arpl
cwde
pop
mov
repz
mov
repnz
ret
mov
(bad)
movs
int
sahf
movs
dec
rsqrtps
xchg
push
in
and
in
retf
jp
xchg
pop
shl
dec
push
iret
sti
test
cmp
outs
mov
dec
push
mov
add
ins
push
cmp
cmp
out
push
sbb
mov
dec
jns
enter
or
xor
mov
bound
movs
cmp
std
jne
xchg
mov
call
sbb
repnz
push
lea
sbb
stc
push
jne
push
inc
retf
mov
gs
xchg
cwde
sar
call
mov
outs
sti
push
in
sbb
ins
into
push
das
imul
bound
jo
sub
idiv
mov
dec
mov
inc
inc
(bad)
sub
call
fs
int3
pushf
neg
pop
test
inc
aam
cmp
jne
jecxz
xchg
std
and
outs
sbb
inc
add
ja
dec
pop
push
sub
pop
iret
fs
mov
jge
popf
fdivrp
ss
repz
inc
xchg
retf
cmp
jb
xchg
add
sbb
test
cmp
nop
and
retf
mov
fdivr
push
(bad)
jns
test
jg
jmp
rol
xor
out
jno
xor
(bad)
div
mov
sub
cmp
xchg
rol
add
pop
pop
test
call
test
inc
popa
pop
out
mov
xchg
sub
sub
sub
pop
(bad)
sti
xor
mov
je
adc
nop
lea
dec
sahf
int
inc
push
movs
cdq
in
repnz
stc
int
(bad)
xchg
or
jae
ja
fistp
xor
cs
ror
fldcw
push
sbb
in
sub
mov
cmps
jl
mov
pop
push
sub
js
sub
movs
mov
mov
xchg
int3
lock
dec
adc
imul
or
push
add
lahf
fsubp
out
inc
push
jecxz
inc
mov
aam
sbb
adc
test
xchg
jae
mov
rol
add
ins
xor
imul
mov
iret
push
push
lods
mov
ja
xor
adc
xchg
dec
push
push
fwait
dec
jnp
jmp
repnz
mov
iret
test
aad
pop
lds
mov
cmp
pushf
enter
jge
xchg
ss
(bad)
hlt
es
jnp
xchg
fld
push
jmp
cmp
icebp
add
pop
add
sub
es
movs
pop
stos
ret
xor
pop
sub
or
and
pop
cmc
cmps
sub
pop
mov
cmp
sbb
or
or
shr
ja
sbb
idiv
(bad)
jae
js
test
adc
(bad)
inc
jecxz
sub
xlat
sub
icebp
cdq
in
ret
push
inc
inc
scas
scas
mov
(bad)
push
mov
and
push
scas
addr16
jo
xor
cmps
fistp
fdiv
xlat
sti
xchg
ins
inc
or
inc
or
push
in
(bad)
push
and
into
js
inc
inc
rcr
mov
mov
push
sub
push
js
jmp
inc
xor
and
in
adc
out
adc
push
add
xchg
sbb
xlat
sub
mov
xor
add
or
hlt
rol
and
cwde
fisttp
and
mov
add
or
invd
jne
sub
pop
shl
(bad)
aad
icebp
movs
pop
sbb
add
out
cmp
dec
mul
shl
fdivr
xor
xchg
adc
or
fwait
mov
retf
dec
out
push
inc
imul
pop
retf
sbb
stos
sbb
mov
sti
cmps
cwde
fiadd
les
sar
stos
outs
and
jae
je
pushf
mov
mov
ins
imul
pushf
cwde
adc
add
call
jmp
retf
xchg
sti
sbb
jge
or
das
pop
bnd
std
cmp
adc
mov
inc
scas
in
cmp
arpl
shl
or
mov
shr
cmc
or
add
xor
sub
pop
mov
das
pop
dec
addr16
js
fdiv
fs
push
mov
jns
repnz
or
mov
mov
cmps
adc
into
sub
loopne
std
jmp
nop
or
leave
cmp
ffreep
mov
aad
bound
popa
(bad)
arpl
lock
and
jbe
xchg
pop
aad
out
daa
cdq
mov
or
dec
and
repnz
xchg
lea
out
push
inc
pop
or
int
retf
bnd
outs
aaa
mov
mov
xchg
inc
ja
lea
or
mov
pusha
int
sbb
push
std
and
mov
cdq
lock
fwait
jne
mov
stos
(bad)
in
aad
add
pop
mov
inc
cld
jo
jp
cmp
lahf
adc
cli
pop
sub
inc
dec
ds
fnsave
js
xchg
mov
aad
neg
add
popa
adc
mov
leave
pop
sub
sbb
out
inc
dec
mov
sub
jle
sub
or
or
daa
imul
pop
pushf
dec
mov
imul
mov
mov
enter
xchg
push
cli
sub
dec
mov
stos
lock
xchg
rcr
dec
or
std
sub
loopne
aas
cld
add
(bad)
(bad)
pop
fucomip
shr
fistp
imul
sbb
sbb
mov
or
inc
arpl
mov
jp
cmp
add
out
sbb
inc
pop
inc
xor
xor
mov
jg
mov
rcl
cmp
jl
xchg
cmp
aad
hlt
cmp
cmp
or
xchg
in
popa
jae
adc
jo
les
pusha
(bad)
gs
test
adc
mov
repnz
js
mov
(bad)
pusha
retf
scas
icebp
jmp
pop
or
fist
nop
mov
imul
ins
in
ret
pop
add
sbb
inc
lahf
pop
ins
sbb
or
push
mov
mov
cmp
std
mov
push
pusha
push
push
xchg
pusha
(bad)
ror
nop
push
hlt
xchg
sub
(bad)
jle
gs
jmp
xor
inc
push
mov
add
pop
mov
movs
adc
shr
ds
dec
loope
rol
scas
cmps
cmps
gs
sub
je
mov
dec
stos
xchg
and
mov
repnz
shl
dec
push
sbb
jl
ret
pop
ret
xchg
push
mov
jo
bound
rcl
aaa
hlt
mov
and
dec
pop
pop
jmp
and
pop
mov
dec
jmp
xchg
dec
mov
in
ins
shl
sahf
lods
loop
inc
or
not
cdq
rcl
ret
outs
test
jge
loopne
pop
add
es
(bad)
aas
xor
push
xchg
jmp
xor
rcr
jmp
xchg
jb
jle
sti
jb
jb
dec
ins
dec
lock
cld
mul
out
ins
int
sbb
adc
in
(bad)
loopne
or
enter
mov
bound
test
mov
lahf
leave
dec
les
xchg
(bad)
mov
push
push
inc
xchg
retf
in
or
ret
dec
mov
jle
cmps
add
(bad)
dec
sub
int
out
dec
mov
cmp
xchg
jne
stos
pop
movs
adc
loope
cmp
jne
je
fwait
sahf
int
fsub
aaa
sbb
push
and
push
or
or
add
jl
lods
fst
movs
imul
ret
mov
in
ins
inc
lock
(bad)
repz
cmc
xor
out
mov
xchg
xchg
add
enter
div
dec
xchg
(bad)
scas
loop
and
mov
popf
sbb
mov
out
jae
sbb
pop
test
hlt
cmp
test
ins
push
sub
push
add
aaa
add
sub
pop
and
aam
arpl
(bad)
(bad)
into
mov
loopne
aam
test
lahf
icebp
pop
pushf
push
mov
jo
(bad)
not
cmc
dec
xor
lahf
adc
es
imul
jno
sar
adc
arpl
popa
mov
jnp
jecxz
inc
or
out
ds
jmp
cli
cmp
inc
cli
test
dec
cmps
xlat
adc
jae
adc
std
loop
xchg
sbb
popf
xchg
cmc
xchg
fcomp
rcr
jl
ret
push
sub
test
mov
lea
test
and
in
fcomi
add
cmp
adc
pusha
lock
jl
xchg
cmp
std
sub
add
add
adc
sub
dec
xchg
(bad)
loop
or
(bad)
mov
push
ret
cli
popf
pop
popf
into
addr16
inc
retw
push
nop
popf
sahf
into
push
adc
dec
test
mov
bound
fwait
xchg
add
inc
cmp
jecxz
mov
retf
outs
pop
ja
pop
loope
sub
cmp
bound
cwde
pusha
pop
movs
inc
fs
es
retf
mov
or
push
or
dec
(bad)
xchg
pop
mov
movs
or
cmp
xchg
cs
setae
xchg
lahf
je
xor
out
xchg
mov
das
or
cmp
xor
push
loopne
loop
mov
test
retf
cmps
mov
jg
jge
mov
bound
dec
mov
int
fcomip
cmps
leave
bound
add
mov
pushf
add
outs
es
inc
into
pusha
jl
mov
popf
add
xchg
mov
hlt
or
sub
fcmovu
popf
outs
ficom
xor
jnp
outs
ror
cmp
ror
dec
mov
jp
popf
xchg
lock
ds
add
sbb
push
scas
mov
mov
stos
adc
push
mov
arpl
xchg
or
data16
sub
fcom
fdivr
xchg
push
or
test
iret
repz
cs
or
mov
cmp
out
cmp
add
push
jns
sti
mov
inc
jmp
pop
push
pop
gs
push
test
inc
mov
sbb
repz
fcmovne
add
es
xlat
lods
cmps
mov
cmps
inc
mov
gs
adc
shl
lds
mov
inc
inc
push
fcmovbe
push
add
dec
or
rol
ficom
or
sbb
mov
adc
pop
sbb
mov
sbb
add
shl
(bad)
or
xchg
xor
xchg
pushf
push
dec
cwde
sbb
test
add
call
cld
nop
loope
dec
mov
lds
xor
inc
cmp
cmc
push
jg
jp
iret
out
mov
addr16
pop
movs
inc
addr16
or
fwait
sbb
push
inc
outs
xor
cmp
in
jnp
retf
inc
hlt
call
xchg
pop
(bad)
jmp
push
jmp
das
mov
sbb
sub
sar
retf
lds
fucomip
push
sub
mov
es
adc
jne
mov
aas
call
xor
mov
test
call
sub
mov
jmp
pop
dec
push
xchg
or
int
loope
sbb
ja
fucomip
push
cmp
cmp
mov
icebp
repz
(bad)
dec
xor
push
or
loopne
push
rcl
outs
fadd
cmps
adc
(bad)
(bad)
sbb
out
shr
clc
(bad)
pop
push
mov
addr16
into
push
or
imul
sbb
pushf
addr16
cs
inc
sbb
or
ret
xchg
jo
in
xchg
xor
lods
mov
xor
adc
cmp
loope
xchg
xchg
push
xor
xchg
push
call
call
(bad)
sub
ja
movd
cs
jmp
xlat
cld
pop
sub
xor
retf
add
(bad)
xor
inc
stc
imul
adc
lods
out
test
add
sbb
xor
mov
inc
aaa
xchg
jecxz
call
pop
sub
and
aad
pop
call
push
jnp
lea
ret
or
gs
adc
mov
das
arpl
jecxz
mov
mov
outs
jae
ins
adc
aad
arpl
pop
add
jb
cmps
or
or
mov
into
scas
xchg
iret
or
add
mov
pop
xor
push
mov
test
stc
ja
jns
inc
sbb
mov
pop
icebp
out
ret
add
and
enter
lahf
mov
aas
aam
and
rol
ret
ficomp
xchg
mov
sbb
inc
sub
pop
js
jo
add
out
jb
fmul
dec
sahf
add
(bad)
pop
retf
aas
mov
call
cmp
pop
(bad)
push
mov
and
mov
dec
cmps
sub
fld
and
fadd
lea
mov
mov
cli
or
and
pop
je
nop
cmp
outs
lea
adc
in
dec
xor
lock
or
nop
(bad)
pop
inc
xchg
sbb
in
(bad)
pushf
sti
sbb
mov
or
dec
inc
push
xor
call
out
js
pusha
inc
sbb
dec
push
push
repz
or
fs
data16
aas
ins
cld
mov
imul
inc
gs
jne
aad
jge
push
xchg
call
dec
mov
add
shr
data16
xchg
popa
int
movs
mov
movs
(bad)
cmp
loope
cld
int3
sub
xchg
sbb
mov
repnz
push
lods
into
jne
stos
stos
sbb
stc
push
mov
sar
xor
push
out
push
mov
pop
push
in
lahf
les
pop
mov
ret
daa
inc
cmp
ins
sbb
in
inc
leave
dec
in
aaa
cmps
hlt
call
(bad)
pop
adc
js
imul
cmc
mov
fst
push
mov
pop
lea
xchg
xchg
out
inc
popa
pop
sub
rcl
push
push
ror
or
jae
ret
dec
loop
adc
dec
mov
push
sub
loope
adc
mov
pop
cmp
rcr
imul
and
scas
sub
hlt
mov
cmp
int
lea
cmps
int
std
inc
and
sbb
jle
test
bound
cmp
inc
jo
xchg
and
retf
lods
in
(bad)
adc
arpl
push
push
dec
fdiv
ds
fcmovbe
scas
movs
(bad)
xlat
jo
cmp
xchg
inc
push
vphaddbq
pushf
jb
xchg
mov
stos
cwde
cmp
and
stos
adc
mov
cmp
retf
inc
add
je
pop
add
xchg
out
es
and
das
addr16
add
mov
lahf
pop
push
inc
inc
mov
hlt
pop
aam
jg
push
pop
mov
js
or
push
std
cmp
pusha
push
loope
jae
movs
test
repnz
out
ss
pusha
jmp
jo
sub
push
popf
sbb
js
ret
xor
push
sub
jmp
push
push
nop
dec
mov
adc
idiv
push
xchg
mov
pop
int
sub
ins
fmul
sahf
outs
jb
out
je
test
pop
cmp
dec
lea
repz
cmp
test
fsub
fld
fnstenv
aas
xchg
xchg
sti
lea
xchg
cmp
test
and
xchg
ja
(bad)
(bad)
clc
mov
out
cmp
leave
dec
push
(bad)
xlat
and
stos
aaa
movs
es
adc
retf
sbb
sub
iret
pop
es
and
movs
push
repnz
in
mov
(bad)
rcl
adc
pop
jmp
in
in
add
push
lds
dec
shl
jns
fst
dec
cmc
pop
shr
lds
push
call
xor
mov
ja
lods
hlt
pop
push
jle
or
into
xchg
pop
pop
mov
not
mov
dec
lods
lahf
retf
sub
int3
mov
jne
loope
pop
or
adc
shr
cmp
xchg
sub
(bad)
mov
sub
rcl
or
gs
inc
xor
out
inc
pop
and
sbb
shl
mov
outs
mov
mov
and
add
sbb
cmp
scas
push
xor
outs
shr
ret
dec
imul
(bad)
stc
or
std
mov
imul
scas
jno
sbb
sub
xor
pop
sub
xor
in
dec
or
dec
or
vshufps
jp
cmps
xor
stos
mov
push
adc
inc
mov
aaa
hlt
add
popf
inc
lods
idiv
clc
in
test
or
xchg
into
cmp
and
and
sub
outs
mov
dec
test
cdq
and
pop
inc
in
leave
dec
fisub
fidivr
inc
jl
xchg
scas
push
xor
push
(bad)
out
sub
adc
inc
dec
push
(bad)
jg
fisttp
add
nop
daa
test
mov
xchg
jmp
shr
xlat
or
stc
fstp
and
(bad)
jmp
js
mov
das
test
sbb
lahf
sbb
mov
pop
xchg
pop
scas
lock
fcomp
adc
int3
(bad)
add
rcl
out
ss
cmc
lahf
push
mov
sbb
pop
inc
jge
cmp
fcomip
mov
fist
stos
jmp
call
cmp
test
nop
xchg
push
or
sahf
and
(bad)
push
daa
sbb
out
inc
div
sub
pusha
ror
movs
outs
enter
cli
add
movs
gs
sti
mov
(bad)
dec
enter
js
stos
add
add
push
in
jp
sbb
fld
push
push
jmp
sti
unpcklps
fistp
pop
aaa
loopne
pop
xchg
stos
dec
xlat
jle
pop
cmp
enter
nop
push
pop
popa
xchg
test
cmp
mov
xchg
cmc
adc
pop
cmp
sbb
std
mov
jg
xchg
or
mov
mov
jmp
(bad)
fmul
mov
in
call
pop
adc
into
push
loop
sti
mov
retf
pushf
or
sbb
cld
and
rcr
gs
imul
and
pop
cld
and
lods
jl
(bad)
pop
dec
les
fsubr
ins
adc
fwait
test
test
aad
in
imul
data16
or
pop
jl
fcom
arpl
es
push
mov
ret
push
ret
or
rcl
outs
inc
mov
movs
pop
fsubr
cdq
lods
mov
mov
(bad)
fst
in
rcl
out
fadd
pushf
xlat
int3
push
dec
xchg
jmp
ret
fild
aas
pop
aam
rcl
aad
fistp
cli
adc
test
mov
(bad)
aas
dec
test
or
(bad)
mov
sahf
inc
scas
jl
aad
retf
hlt
mov
jno
mov
inc
aad
fidivr
in
movs
sahf
(bad)
dec
(bad)
ror
push
int
xchg
push
or
jecxz
das
out
xchg
mov
daa
ss
push
inc
push
pushf
loope
cld
(bad)
mov
mov
push
loope
cmp
mov
xchg
and
imul
sub
pusha
push
push
retf
jno
xchg
sar
fstp
es
js
(bad)
xlat
xor
mov
iret
push
inc
sbb
adc
sub
add
jg
stc
sub
mov
jnp
daa
fmul
shl
add
mov
aad
inc
int3
dec
(bad)
movs
test
repnz
jne
and
ins
js
mov
pop
pushf
outs
(bad)
daa
(bad)
or
(bad)
fdivr
sbb
shr
aas
push
fidiv
inc
cmps
jmp
adc
std
jne
push
jge
mov
(bad)
rcl
sbb
mov
or
or
mov
and
add
lock
in
jp
jae
movs
je
icebp
dec
fst
imul
jecxz
ins
mov
dec
push
jecxz
xchg
xchg
js
pop
fisttp
push
(bad)
mov
lock
push
push
aam
pop
and
rcr
and
inc
push
out
test
aam
cld
add
repz
mov
out
ds
nop
xor
bound
rol
mov
jo
in
xor
test
fcomp
add
inc
out
inc
mov
pushf
movs
sub
jb
sti
push
mov
xor
ds
jmp
jge
test
cmp
jne
(bad)
dec
pop
lods
sub
sub
sub
mov
or
xchg
mov
fdivr
and
out
rcl
adc
das
push
pop
dec
xchg
dec
and
cli
outs
test
ror
mov
mov
push
dec
push
repnz
jl
cmp
mov
repnz
std
push
popa
aas
pop
xchg
fs
mov
aaa
sbb
xchg
nop
cmc
fidivr
sub
aas
int3
cwde
lods
ins
or
mov
mov
stos
or
mov
sbb
iret
and
in
add
and
dec
xchg
pusha
jb
jl
(bad)
cmps
xchg
push
out
sub
out
aaa
test
and
mov
mov
shl
pushf
sub
cs
or
dec
rcr
and
fistp
imul
movs
jb
mov
ss
(bad)
test
xchg
sub
aaa
and
loope
jae
push
ja
dec
gs
(bad)
retf
xchg
lock
shl
mov
add
loope
cmp
jp
iret
les
inc
cmp
inc
cli
pushf
das
mov
(bad)
mov
out
outs
inc
jo
jmp
dec
cmp
call
pop
inc
sar
or
(bad)
push
or
jecxz
(bad)
sbb
dec
ja
lods
xchg
in
mov
ss
imul
bound
jbe
inc
sti
xchg
es
push
inc
dec
fidiv
int
pusha
rcl
addr16
scas
popa
mov
sbb
mov
dec
cmp
call
div
push
dec
dec
inc
inc
mov
sbb
jb
imul
mov
stos
jecxz
mov
std
adc
mov
xlat
or
or
jb
dec
ss
ja
outs
jns
inc
icebp
or
(bad)
loopne
fdiv
cmc
out
(bad)
jecxz
mov
add
xchg
push
mov
int
fdivr
or
xchg
dec
add
xchg
lock
inc
push
mov
inc
std
sub
inc
xor
xchg
xor
pop
xor
icebp
loopne
xchg
out
addr16
jmp
xchg
aam
scas
pusha
cmp
pop
stc
mov
cmps
mov
sbb
addr16
not
and
sbb
mov
pop
pusha
ss
push
mov
mov
dec
adc
(bad)
pushf
xchg
(bad)
push
and
jns
dec
call
out
bound
cmp
outs
ja
xchg
mov
sub
xchg
imul
out
fwait
xor
inc
sub
add
test
push
cmp
pushf
mov
and
mov
and
fistp
cmp
(bad)
jl
push
loopne
or
jle
fst
not
fucom
or
gs
fidiv
aaa
or
inc
mov
movs
fwait
pop
ret
int
cwde
loopne
push
dec
pop
mov
dec
repz
xor
inc
jbe
test
outs
push
pushf
mov
and
pop
call
dec
lea
jmp
mov
out
jmp
imul
dec
xor
jge
dec
sbb
push
hlt
sbb
jmp
mov
sbb
cli
clc
jbe
lods
leave
sub
std
iret
in
cmp
and
jns
ror
aas
cdq
cmp
aam
outs
in
xchg
hlt
adc
ja
inc
test
mov
adc
test
push
xchg
pop
add
fisub
or
(bad)
xor
ss
out
hlt
je
and
or
mov
xchg
xchg
addr16
push
and
mov
ret
dec
adc
and
mov
ret
adc
imul
(bad)
div
cs
es
bswap
jg
stc
xor
pop
in
dec
enter
stc
xchg
jecxz
mov
mov
dec
xchg
aas
daa
test
mov
mov
daa
jl
stos
mov
out
or
pop
adc
sub
cmp
push
xchg
fistp
pop
adc
dec
mov
sub
adc
mov
dec
xchg
jge
adc
mov
jl
dec
or
shl
stos
push
inc
fldenv
fist
ftst
xor
je
outs
mov
(bad)
dec
inc
inc
div
test
ds
mov
adc
sar
pop
jp
leavew
cmovnp
xchg
mov
and
mov
inc
sbb
leave
mov
cmp
pop
mov
sbb
sbb
push
retf
xchg
mov
retf
outs
std
mov
xor
jb
push
fcmovnu
jbe
or
dec
lods
icebp
popf
cmp
dec
jmp
and
cmps
in
outs
mov
cmps
jns
mov
shr
jb
bound
sbb
jo
cmp
(bad)
ds
cdq
imul
pop
imul
mov
xchg
gs
mov
xchg
pop
test
cmp
jbe
adc
and
mov
into
jmp
ret
mov
add
lea
mov
int3
outs
fiadd
(bad)
mov
fs
mov
mov
jb
jb
fwait
arpl
hlt
cmps
arpl
xor
std
adc
les
icebp
loope
jae
cmps
xchg
or
out
jle
cmp
lods
(bad)
cmp
(bad)
or
repz
xor
sbb
inc
jle
sbb
or
add
and
stos
fld
inc
xchg
push
out
pop
(bad)
loopne
retfw
rol
cdq
popa
dec
fadd
sbb
out
xchg
pop
inc
cs
pushf
cwde
stos
xor
cmp
or
mov
ins
mov
outs
sbb
jnp
ins
test
fst
adc
das
rep
(bad)
adc
mov
inc
push
cmp
jno
ret
mov
repnz
lahf
clc
jle
cmc
add
sti
mov
and
fucomip
(bad)
js
cmp
pop
mov
dec
mov
std
dec
sub
mov
fcom
xchg
mov
fidiv
push
mov
lahf
dec
mov
mov
repz
je
shl
cmps
imul
add
ds
jg
xor
lock
adc
js
cmp
mov
sub
pop
mov
sub
cmps
retf
add
lods
ficom
int
imul
xor
clc
iret
(bad)
push
xor
daa
js
xlat
rol
mov
idiv
dec
sbb
xor
popf
inc
xor
pop
cld
cmp
or
dec
dec
addr16
sbb
xchg
ret
enter
rcr
jae
in
sub
inc
sub
or
push
(bad)
add
or
out
sub
lock
sub
mov
rcl
rol
mov
addr16
inc
std
cmc
pop
std
pop
and
call
movs
xchg
xchg
or
push
dec
fisubr
mov
cs
or
adc
das
inc
lahf
jbe
cmp
ret
xor
sbb
ret
sbb
mov
retf
es
mov
shr
mov
jnp
rol
or
or
loopne
cmp
xchg
jo
ds
jmp
pop
out
leave
fldz
mov
sub
sub
xchg
out
rcr
cdq
(bad)
loopne
test
enter
pop
ficomp
lds
jecxz
jl
fdiv
cld
jmp
jle
ret
adc
xchg
and
mov
sub
call
push
lahf
dec
xor
mov
mov
mov
jmp
add
dec
dec
fidivr
loopne
popf
js
adc
jl
lock
pop
cwde
push
cmp
mov
in
push
arpl
dec
shr
setbe
aas
jg
(bad)
adc
test
mov
xchg
xchg
inc
mov
inc
ds
pusha
mov
jae
movs
ss
int
mov
xchg
popa
adc
sbb
lods
call
mov
movs
add
scas
sbb
aas
add
jp
dec
call
in
jmp
enter
mul
outs
retf
xchg
pop
retf
repnz
pop
call
retf
(bad)
jae
mov
fdiv
ins
ficom
cld
dec
cmc
adc
test
or
iret
sbb
push
cmp
push
xchg
xor
mov
mov
jb
adc
mov
mov
je
xor
push
lods
or
cmp
repnz
push
clc
push
(bad)
ss
sub
sbb
mov
out
xlat
and
lods
xchg
retf
shl
int3
pop
inc
pop
aam
(bad)
xor
loop
ja
add
clc
mov
call
mov
out
imul
lds
fadd
pop
mov
inc
lds
adc
test
or
movs
dec
mov
mov
outs
in
jo
(bad)
mov
jmp
jns
add
fadd
rol
movs
or
sti
xchg
(bad)
sbb
mov
xor
cmps
in
and
mov
push
dec
sar
mov
sbb
fstp
push
mov
pop
repz
addr16
or
pop
and
jg
dec
pop
xor
mov
cmp
mov
sub
(bad)
jb
xchg
adc
imul
inc
xchg
imul
out
das
sbb
fistp
xchg
add
std
adc
dec
mov
test
fst
jl
aam
mov
fistp
pop
call
neg
push
add
dec
dec
ins
leave
test
xor
add
(bad)
mov
outs
jg
and
unpckhps
pop
jmp
lods
pop
jnp
movs
mov
test
mov
ds
jle
and
ret
xor
cdq
xor
jecxz
in
push
and
push
xchg
test
mov
add
ins
cmp
add
add
int
shl
rol
bound
jmp
push
cmp
adc
fcmovu
add
cmp
add
stos
in
int
mov
cmp
stc
xlat
mov
rol
xchg
dec
pusha
cmps
shl
pop
mov
(bad)
mov
ror
adc
lds
pop
and
sub
and
mov
xchg
sbb
arpl
mov
jp
shl
mov
jb
sbb
mov
dec
push
aaa
movs
mov
iret
adc
ror
ficomp
mov
sbb
dec
add
addr16
lods
sub
fistp
xchg
pop
in
int3
sub
adc
call
rol
aaa
out
xchg
sbb
pop
dec
mov
pop
aaa
call
in
(bad)
test
cmc
pop
cwde
jle
push
inc
imul
jecxz
and
xchg
cmps
mov
cmps
jae
test
xor
addr16
inc
mov
fsub
div
inc
jmp
mov
por
call
test
jge
push
lds
cmp
imul
rcl
outs
jmp
pop
jae
setno
js
not
in
fucomip
mov
retf
add
mov
sub
lahf
cdq
fdiv
mov
or
cmp
xchg
fld
dec
push
xor
cmp
xchg
xchg
sbb
rcl
mov
jge
pop
je
add
imul
mov
mov
push
pushf
xchg
rcl
cli
mov
in
into
mov
in
jae
adc
mov
pop
aam
jnp
dec
xchg
cmp
mov
stc
idiv
push
mov
mov
inc
aam
and
inc
jnp
scas
push
daa
add
jge
test
and
xor
mov
add
lods
xor
(bad)
fldenv
repz
dec
push
dec
inc
fnsave
ret
test
mov
mov
lock
ret
sbb
fstp
test
sub
inc
je
outs
inc
jbe
in
jnp
mov
jp
packuswb
inc
inc
(bad)
in
xor
mov
cli
push
arpl
dec
adc
aad
sahf
lods
dec
xor
inc
mov
div
ret
pop
push
xchg
scas
imul
push
sar
out
enter
lods
movs
mov
and
movs
out
cmp
sub
nop
cs
aad
dec
int3
cmp
shr
out
or
adc
pusha
stos
mov
lods
mov
mov
(bad)
mov
ins
xchg
push
and
jecxz
stc
test
lods
fisubr
add
cs
push
mov
mov
mov
inc
or
std
mov
add
adc
sub
es
fsub
les
xchg
xor
add
aam
loopne
jo
leave
lods
mov
inc
jmp
adc
jmp
into
dec
(bad)
call
call
lock
adc
sub
aas
cmps
mov
lds
int
xchg
pop
cmc
lds
imul
dec
sbb
jle
test
cli
sti
aad
cli
inc
fidivr
scas
and
push
enter
sbb
and
push
dec
mov
popa
sub
jns
mov
pop
lods
imul
std
addr16
xchg
lds
in
xchg
jne
add
cmp
test
loope
imul
dec
cwde
dec
mov
pop
sbb
lahf
out
cld
jmp
push
neg
and
jo
sbb
push
push
mov
stos
ja
pushf
and
push
xor
test
xchg
dec
fiadd
push
pop
mov
jbe
jp
outs
pushf
add
repz
ss
comiss
in
add
mov
cmps
into
enter
push
push
sub
enter
shr
(bad)
sbb
(bad)
add
fcmovne
cmps
xchg
mov
push
ficom
movs
test
pop
push
jno
push
out
push
jecxz
or
inc
sti
ins
gs
mov
xchg
aad
push
test
dec
call
adc
jmp
mov
mov
outs
sbb
mov
pop
inc
aad
mov
loop
in
and
push
fistp
and
add
xlat
adc
cs
adc
cs
push
inc
in
lea
cld
es
in
ja
in
or
gs
and
dec
pop
cmp
in
int3
dec
sbb
mov
pushf
shl
mov
jb
fadd
and
pop
and
stos
test
xor
out
push
xor
sahf
jno
neg
fdiv
lea
mov
sub
pop
test
repnz
test
out
push
lods
jle
jmp
mov
cld
xchg
cmp
sub
push
lods
cmps
test
in
mov
cmp
daa
out
mov
int3
int
pop
adc
dec
mov
and
push
xchg
mov
mov
mov
dec
out
ss
ret
jne
push
dec
shl
sub
retf
fdiv
pop
(bad)
and
fistp
stc
int3
sub
mov
push
stc
out
and
xor
das
and
xchg
ds
stos
clc
cmps
loop
cdq
cmp
int
pop
sbb
sbb
mov
clc
jns
or
lods
gs
in
fwait
mov
inc
inc
mov
das
adc
test
lods
imul
dec
pop
cli
and
sar
inc
and
cli
or
mov
xchg
ret
xor
push
call
div
dec
stos
and
lea
je
mov
inc
js
and
cwde
cwde
out
and
dec
cli
add
out
cmc
jno
mov
xchg
and
push
repnz
loop
cwde
sub
xchg
push
and
mov
rol
and
fcom
mov
add
ins
dec
cld
mov
dec
jmp
fucomip
aaa
mov
jmp
pop
push
sub
(bad)
dec
add
frstor
ds
cmp
je
test
js
test
cmps
mov
mov
(bad)
es
in
mov
mov
std
add
jmp
xchg
mov
sahf
shl
lock
or
mov
sub
out
mov
jbe
add
mov
mov
call
inc
psrlq
mov
stc
jns
add
and
psubb
push
lods
repnz
cdq
in
loopne
je
xor
add
out
sbb
loopne
mov
dec
(bad)
call
sbb
fcmovbe
addr16
outs
jge
ins
repz
and
inc
add
jg
test
cmp
and
mov
push
aad
add
jnp
in
in
and
pop
inc
(bad)
ss
ins
mov
pop
dec
add
out
repnz
fisub
mov
sub
xor
imul
mov
mov
movs
stos
inc
mov
or
fst
pop
mov
jb
outs
cmps
pushf
push
adc
cs
jecxz
mov
fldenv
int3
mov
jge
lds
jmp
inc
inc
sub
arpl
pop
scas
out
xor
add
xlat
iret
daa
mov
repnz
mov
sub
fldcw
(bad)
jmp
(bad)
cmp
dec
movs
inc
out
push
mov
aaa
jae
cld
mov
dec
call
xor
inc
cdq
sbb
mov
pushf
lods
cmp
mov
test
aaa
cwde
push
xchg
shl
pop
in
cli
push
test
dec
cwde
mov
pop
icebp
repnz
aaa
inc
pop
pop
sub
arpl
(bad)
in
in
mul
in
push
jg
in
pop
leave
out
lods
push
das
test
push
ins
mov
push
(bad)
out
outs
in
bnd
(bad)
test
cmp
or
jl
les
xchg
cmp
mov
in
outs
mov
jle
fiadd
retf
jp
cmp
mov
cmp
push
popf
add
movs
xchg
cmp
sbb
(bad)
ds
adc
fist
add
jo
inc
add
in
jmp
cmps
mov
mov
lea
fcomp
xchg
test
push
mov
cmp
lods
out
sub
fwait
push
xor
push
fsubr
rep
sub
outs
inc
hlt
and
xor
movs
lods
jno
sbb
sub
mov
dec
and
div
sub
mov
stos
fistp
push
cs
sbb
fwait
int3
shl
or
mov
inc
push
inc
movs
sub
inc
out
mov
mov
stos
pop
xor
ins
test
pop
push
scas
dec
jns
xor
xchg
pop
adc
pushf
mov
mov
mov
fwait
and
inc
mov
fdivr
imul
arpl
mov
rcr
mov
sbb
pop
jge
and
cmp
xchg
mov
xchg
jno
add
pop
js
les
cld
popa
ins
mov
repz
ficomp
xor
mov
stos
outs
outs
push
jge
dec
jae
xor
xor
outs
cmp
ror
fnstsw
inc
(bad)
cmps
stos
jp
cmp
cmp
or
sbb
cmp
call
push
mov
add
shr
je
in
test
rcr
push
mov
dec
push
in
sbb
(bad)
in
or
lahf
xchg
sub
adc
mov
xor
pop
xor
jg
imul
jns
test
dec
jle
lds
cmp
fst
and
xlat
rol
sbb
add
jle
xor
fwait
pop
arpl
addr16
daa
mov
mov
out
inc
in
cwde
inc
stc
xchg
fucomi
movs
or
imul
stos
inc
inc
ret
push
or
call
addr16
dec
xchg
cmps
push
jnp
mov
test
popa
or
pop
jne
push
repnz
mov
stos
in
lds
sub
or
push
mov
jle
cmps
movs
mov
sar
sub
in
cmp
cmp
int3
jbe
sub
lods
enter
jmp
pusha
(bad)
(bad)
xchg
cmp
pop
(bad)
retf
mov
inc
les
pop
jbe
add
adc
dec
pop
sahf
cwde
cmp
inc
mov
mov
fnsave
in
or
scas
inc
pushf
rcl
push
into
mov
xor
imul
lahf
lea
xchg
jbe
popa
sub
mov
fs
jno
sahf
cmps
jo
add
mov
cdq
pop
mov
ss
fldlg2
push
or
fisub
jns
xchg
inc
rcl
leave
cmp
pop
test
cmp
pop
sbb
movs
xchg
rcr
mov
inc
jle
add
out
or
ficom
test
(bad)
cmp
jo
popa
mov
dec
div
cmps
jecxz
mov
sub
repnz
repz
adc
cdq
xchg
(bad)
and
jecxz
retf
mov
outs
ins
mov
mov
stos
(bad)
popa
rcr
mov
int3
mov
push
dec
sbb
test
fmul
xchg
xlat
mov
scas
rol
(bad)
mov
test
add
fxam
daa
fsubr
adc
inc
(bad)
push
or
adc
arpl
dec
xchg
lahf
mov
in
stos
ror
add
fs
and
dec
jnp
int3
into
js
in
enter
sub
mul
xchg
sahf
aas
mov
fisubr
(bad)
pop
call
cli
cmp
les
inc
fldenv
sahf
xor
rol
jmp
loopne
xor
movs
clc
xor
cmp
jmp
xchg
mov
mov
icebp
dec
cmps
lods
add
jnp
ja
jno
in
jg
pop
ja
pop
daa
mov
pop
dec
daa
inc
es
xchg
daa
xor
lea
fld
pop
fdivr
sti
adc
loop
add
jmp
or
cmp
ret
inc
or
ins
inc
das
in
scas
pop
pop
xor
mov
and
test
lods
jo
loopne
xor
jns
adc
(bad)
in
or
push
sub
cli
fs
cs
mov
sbb
push
fdivr
jp
sbb
dec
jmp
popa
pop
pop
pushf
dec
mov
out
add
js
inc
push
movs
inc
adc
sub
int3
loope
(bad)
popf
jg
dec
out
(bad)
sub
pop
psllq
lods
pop
jmp
and
push
dec
or
add
mov
xchg
rcl
add
fist
push
gs
cmp
sub
loope
out
test
js
or
js
xor
fist
fdivr
push
dec
push
aad
xchg
or
or
mov
(bad)
loopne
sar
out
aam
dec
xchg
inc
jmp
leave
shl
cli
pusha
inc
lods
mov
push
ja
jp
sub
cmps
mov
cmp
jbe
add
pop
adc
push
cmps
mov
sub
xchg
in
out
imul
jnp
inc
cmps
sbb
xchg
mov
mov
mov
imul
or
inc
cmp
push
call
xchg
stos
iret
pop
sbb
test
xchg
add
push
dec
ror
or
dec
shl
pusha
gs
pop
cdq
test
mov
(bad)
mov
(bad)
ins
cmp
xchg
cmp
push
mov
repnz
les
jbe
adc
push
mov
enter
jns
sahf
sub
bswap
cmps
fiadd
mov
mov
fwait
and
loop
popf
out
push
xchg
push
mov
lds
adc
cmp
mov
or
out
add
(bad)
and
pop
mov
xchg
imul
xor
xlat
pop
mov
inc
sub
mov
xchg
addr16
popf
inc
push
outs
pop
ins
mov
scas
pavgw
pop
pop
xchg
outs
mov
pusha
jl
leave
jbe
sbb
sbb
inc
fild
or
fisttp
popa
sub
enter
xor
adc
xor
imul
sbb
sub
test
ds
inc
test
bound
mov
lds
shl
mov
(bad)
jnp
cwde
arpl
in
cmps
stos
add
mov
sti
dec
sub
mov
mov
aam
mov
push
pushf
loopne
rcl
jns
mov
push
mov
cwde
add
inc
loop
cld
jne
icebp
push
xchg
ins
bnd
pusha
popa
dec
imul
jle
xor
mul
sar
sub
dec
sbb
imul
fmulp
cli
adc
stos
jo
fsub
clc
sub
mov
push
addr16
and
out
idiv
add
into
inc
cdq
mov
outs
mov
cmp
into
or
(bad)
mov
jge
nop
fld
sbb
push
push
and
test
mov
xchg
xchg
les
test
push
sbb
pop
bound
bound
in
push
cmp
lods
divps
push
pop
nop
outs
mov
adc
adc
inc
pop
addr16
xor
test
add
hlt
jmp
cmp
daa
xchg
pop
hlt
sbb
les
dec
jae
sti
dec
lock
std
pop
(bad)
loop
xor
outs
cdq
pop
pop
in
and
jns
es
mov
popf
xor
stos
adc
cmc
fdivr
dec
hlt
mov
push
sub
sar
sbb
add
cmp
pcmpgtd
cmps
int
push
mov
std
jbe
jne
cmp
shl
lea
out
hlt
xchg
inc
sub
es
sbb
test
outs
fmul
mov
adc
push
xchg
das
cli
fisubr
xor
adc
(bad)
(bad)
cmp
and
fild
xor
jno
fadd
sub
jo
or
ins
stos
xchg
(bad)
mov
push
arpl
dec
jae
loopne
mov
xor
fdivr
jecxz
fdivr
repz
dec
ret
test
mov
push
imul
push
mov
popf
jge
cwde
and
movs
dec
push
popa
lods
in
test
jne
sar
mov
cmp
dec
data16
and
or
pop
(bad)
jne
in
mov
retf
stos
clc
sub
pop
mov
sbb
jmp
and
jg
sub
xchg
ret
pop
ja
inc
pushf
movs
std
dec
cmps
xor
pop
push
nop
out
pop
mov
jp
cwde
out
mov
mov
ja
adc
mov
stos
aaa
bound
outs
jno
xchg
(bad)
jl
add
pop
xlat
cmp
fsub
add
and
push
fstp
jns
inc
imul
pushf
dec
sbb
push
lahf
mul
mul
js
mov
lahf
jmp
call
mov
xor
std
hlt
push
retf
fmul
clc
imul
xchg
scas
(bad)
scas
cmps
lahf
out
lods
dec
lahf
or
daa
(bad)
pop
in
repz
loopne
adc
repz
mov
cmps
inc
sbb
mov
in
mov
mov
(bad)
(bad)
icebp
cmp
mov
and
sbb
clc
out
and
call
pop
push
and
leave
xchg
mov
adc
adc
cs
mov
cwde
pop
movs
push
pop
sbb
xor
aaa
in
and
inc
push
pop
mov
inc
push
lds
ror
fdiv
hlt
out
inc
lahf
ret
(bad)
loop
push
sub
cmp
mov
and
(bad)
stos
add
pop
xchg
call
or
lods
mov
data16
jl
popf
mov
in
lock
pop
ja
mov
push
retf
mov
ins
jo
cdq
jnp
sbb
scas
pop
cs
sbb
jns
pop
jmp
arpl
mov
adc
rol
sub
popa
repz
daa
xchg
mov
jle
mov
jl
lods
pop
or
lods
loope
dec
sti
jl
ja
jno
cwde
push
int
lock
outs
inc
xchg
cmp
repz
(bad)
into
pushf
jbe
ja
rep
pop
in
push
push
inc
pop
sub
repnz
sub
cmps
and
pushf
(bad)
jmp
mov
in
adc
dec
fldenv
idiv
gs
ret
xchg
ret
xlat
adc
(bad)
dec
imul
sub
arpl
jp
stc
xchg
sar
call
add
lods
push
jns
xor
aaa
lods
push
icebp
pop
mov
mov
icebp
mov
(bad)
jg
into
das
cli
fs
adc
lods
icebp
popa
(bad)
retf
mov
xor
dec
movs
jo
scas
repz
cmc
fiadd
scas
fucomi
test
fisttp
or
or
push
push
pop
jmp
adc
jb
pop
out
mov
pop
xor
imul
out
jg
or
push
ret
jmp
(bad)
in
lods
inc
xchg
pop
mov
jecxz
arpl
shr
(bad)
cwde
fmul
push
inc
test
out
leave
sbb
sti
cdq
jmp
sar
bound
dec
jp
sbb
(bad)
ins
mov
jge
nop
div
fsubr
inc
inc
xchg
punpcklbw
ffree
ret
inc
add
adc
stc
sbb
icebp
adc
or
add
xlat
ins
inc
dec
pop
or
ds
test
add
mov
lds
sysexit
add
ret
pop
jno
mov
inc
ret
dec
sbb
hlt
imul
push
aam
jb
sub
int
dec
arpl
cdq
add
mov
pushf
int3
cmp
pop
ss
jl
jecxz
push
mov
pop
imul
or
and
imul
aad
aam
fwait
push
add
sbb
add
mov
adc
outs
sbb
or
fstp
stos
scas
stos
loop
loopne
or
cmp
in
pop
test
cli
dec
pop
cmp
sbb
mov
arpl
in
(bad)
push
push
dec
test
pushf
push
ins
nop
not
push
pop
adc
and
push
clc
int
mov
mov
das
or
jg
cmc
xchg
mov
and
dec
xlat
iret
push
add
add
enter
pop
mov
outs
pop
das
enter
iret
mov
xor
fbstp
push
cmc
cwde
push
or
sub
cmp
imul
pop
sar
mov
inc
push
mov
jnp
pop
jg
rcr
cdq
icebp
out
ret
jbe
fcom
and
pop
aaa
(bad)
js
arpl
ret
mov
inc
hlt
das
or
xchg
dec
jo
xchg
hlt
or
aad
add
add
dec
or
pop
mov
xchg
lahf
jo
imul
push
lahf
movs
xchg
or
jle
push
ds
xchg
test
cdq
or
push
push
lds
mov
lods
xchg
mov
mov
pop
outs
rol
scas
test
enter
mov
lods
pop
mov
lods
scas
push
repz
jo
fwait
inc
jp
mov
sbb
or
dec
div
mov
xchg
sub
push
out
mov
push
test
jne
push
(bad)
loop
adc
arpl
pop
mov
pop
imul
inc
ret
jnp
sbb
xchg
jae
xor
or
jno
push
fisub
inc
aad
jnp
inc
mov
jns
jmp
not
mov
add
add
push
jl
std
push
sbb
(bad)
or
mov
mov
cs
outs
sub
cmp
ins
sub
ds
mov
leave
push
int3
xchg
enter
jg
dec
xchg
stos
sub
mov
dec
shr
dec
test
int3
xor
outs
sahf
mov
test
out
xor
add
push
jge
push
sahf
movs
dec
sbb
sahf
loopne
clc
pop
ret
and
pop
sbb
adc
dec
cli
hlt
stc
inc
pop
sti
jg
jge
shr
and
dec
xlat
icebp
xchg
push
stc
inc
add
ror
scas
popf
fisttp
xchg
cmp
jo
add
mov
call
push
fxch
ins
jne
shr
rol
sub
mov
cdq
cmp
lahf
rcr
inc
sub
sub
call
call
dec
lock
movs
icebp
repnz
clc
sbb
push
in
or
test
or
dec
test
inc
mov
push
mov
adc
and
sbb
dec
(bad)
sub
fcom
or
jecxz
sub
jecxz
jle
shr
sbb
lahf
clc
shr
mov
sbb
gs
push
pop
adc
js
push
adc
mov
xlat
sbb
mov
fcmovne
pop
fs
xchg
xchg
test
adc
pop
(bad)
leave
mov
pop
ins
int3
push
push
and
push
dec
push
xchg
sub
in
mov
ror
dec
out
fcomp
sbb
es
and
push
scas
mov
les
cmp
xor
sub
movs
push
push
jno
ror
cld
fsubrp
dec
daa
ss
pop
sub
rcr
dec
out
push
add
dec
xor
mov
push
push
mov
push
clc
xor
ja
pop
outs
xchg
mov
sbb
jnp
push
or
ins
and
(bad)
push
sahf
rcl
xchg
or
ret
adc
sub
mov
pusha
icebp
xor
or
data16
pusha
inc
xchg
mov
jle
mov
(bad)
(bad)
aad
repz
out
int
cmps
dec
cwde
aad
mov
hlt
xchg
arpl
xchg
and
dec
sti
ds
pop
or
jmp
mov
movs
(bad)
fmul
add
xor
mov
(bad)
pop
and
retf
xchg
shl
shr
inc
dec
ror
push
jle
mov
ds
add
xlat
pop
leave
inc
(bad)
push
cmp
imul
mov
mov
call
cdq
mov
std
jp
mov
cmp
outs
jb
jne
and
int
out
cld
sub
pop
mov
fiadd
stos
fst
pop
xchg
mov
data16
call
js
(bad)
retf
in
les
lea
fisubr
pop
aas
xchg
retf
in
mov
dec
test
nop
ror
aad
jo
cwde
movs
sub
push
ja
retf
imul
xor
ins
xchg
sbb
repnz
mov
ss
enter
mov
icebp
ds
lock
inc
mov
cmp
push
dec
xor
out
adc
pop
aaa
sbb
push
dec
cs
pop
dec
rol
cmps
pushf
xchg
sahf
dec
xchg
jle
movs
jnp
sbb
push
xor
popa
cmps
neg
test
push
dec
(bad)
cmovne
loope
sbb
jno
sub
mov
(bad)
push
xchg
shr
(bad)
jnp
(bad)
push
dec
sub
ret
or
rol
stc
jmp
shl
and
or
mov
cmps
into
sub
daa
aaa
mov
(bad)
cwde
inc
mov
sub
push
lds
fdiv
add
push
int
nop
sbb
rcr
retf
int
sub
sbb
inc
xor
sar
clc
and
jg
pop
jg
xchg
sub
pop
pop
(bad)
repnz
shrd
les
xor
xchg
pushf
inc
mov
bound
sbb
pop
out
es
scas
clc
ret
pop
pushf
fild
cmp
retf
(bad)
ss
inc
inc
inc
lahf
lds
ss
loop
pop
(bad)
adc
in
enter
pop
out
dec
mov
pop
loope
scas
push
in
inc
sub
clc
push
call
or
fimul
sbb
inc
add
cmp
jbe
cmp
mov
test
cmps
repnz
push
mov
into
add
ficomp
mov
sbb
jp
mov
ret
pusha
test
scas
push
dec
dec
popa
pusha
out
jecxz
test
and
push
out
mul
mov
inc
or
pusha
xor
push
push
cli
adc
pop
repnz
push
add
mov
(bad)
mov
pushf
jno
push
adc
mov
pop
pop
repnz
mov
and
push
out
mov
and
mov
es
mov
outs
lea
pslld
ja
push
(bad)
ins
push
or
xor
inc
sub
jno
in
dec
push
fidiv
xchg
jmp
dec
aas
add
cmp
call
loopne
bswap
scas
mov
cmps
or
jecxz
fiadd
sbb
gs
jmp
and
cli
in
inc
outs
(bad)
shl
or
nop
or
jmp
mov
sbb
aaa
mov
(bad)
push
cmp
icebp
xor
out
ret
scas
rcr
push
daa
dec
pop
icebp
fs
pop
pop
mov
add
xor
dec
lods
xor
out
push
push
aam
mov
arpl
lods
jmp
out
stos
dec
out
cmp
(bad)
rcl
into
jmp
ret
retf
jle
enter
cmp
or
lds
mov
adc
xor
jo
packuswb
fs
jnp
mov
dec
inc
pop
add
mov
mov
lods
push
ret
ss
or
xchg
mov
add
loopne
pop
xor
jae
or
pop
dec
sub
adc
adc
jge
sub
hlt
inc
jno
sub
xor
adc
lock
inc
mov
push
shr
loopne
adc
hlt
sub
inc
ret
sahf
adc
mov
mov
sbb
pop
(bad)
pushf
and
aas
push
dec
out
stos
sub
cli
ret
retf
leave
xor
call
stos
xchg
fst
sti
fcomp
lds
and
loop
mov
adc
inc
repnz
ds
out
pop
rcl
ret
jg
jae
xor
les
add
repz
jecxz
popf
adc
rol
xor
pop
mov
ins
add
sub
popf
popa
imul
cmp
jb
cmp
dec
xchg
dec
icebp
jmp
dec
dec
call
cmps
add
push
ins
je
sub
scas
ret
(bad)
add
xchg
int3
xchg
mov
cld
fcomp
mov
sti
mov
jb
sti
ins
lahf
aad
ins
in
sub
xor
xlat
loopne
sti
mov
add
inc
pop
jg
dec
push
(bad)
cmc
xor
dec
mov
xlat
cmp
jmp
outs
repz
xlat
adc
jecxz
xchg
jo
adc
dec
push
mov
(bad)
imul
fstp
mov
mov
(bad)
mov
aad
stos
loope
outs
into
jmp
jbe
jg
test
psubusw
out
in
(bad)
xlat
xchg
inc
stos
mov
xor
jo
adc
movs
jmp
dec
clc
xchg
or
mov
imul
iret
adc
arpl
in
fdiv
cmps
cmp
jecxz
nop
into
sub
sub
scas
sahf
shl
push
push
into
sahf
push
add
fidiv
push
cmp
inc
ja
sub
xchg
mov
gs
aad
mov
pop
add
cs
xor
into
call
inc
std
ja
jecxz
jge
cmps
push
loope
dec
cmp
cs
dec
mov
stc
or
inc
fisttp
int
pop
in
mov
mov
push
sbb
cmp
pop
in
mov
jg
push
fwait
cmp
sub
lock
adc
(bad)
test
xor
mov
xchg
hlt
and
scas
and
adc
jmp
inc
cmp
jp
les
ret
push
push
int
mov
push
repnz
or
scas
outs
imul
popf
cmp
sub
sbb
adc
xor
popf
push
cmp
adc
or
shl
cmp
cmp
adc
mov
push
mov
cdq
stos
fidivr
lods
lods
adc
lea
loope
leave
rcl
cmps
in
arpl
jnp
mov
or
movs
push
(bad)
dec
or
daa
cmp
sub
add
call
add
gs
cmp
pop
or
test
mov
fdiv
cmc
sub
lahf
or
stos
lods
pushf
test
ret
pop
xlat
xor
mov
xchg
mov
test
mov
dec
mov
adc
push
adc
jl
ror
pop
(bad)
jle
mov
fnsave
outs
loope
loop
sub
mov
mov
test
push
mov
or
fisub
mov
clc
mov
jne
mov
dec
push
pop
rol
movs
dec
into
adc
cmc
xchg
mov
ret
or
add
outs
popf
add
and
xor
mov
mov
mov
xor
daa
loop
sbb
pop
call
sub
push
gs
enter
pop
cld
push
jb
enter
inc
rcl
je
xchg
mov
shl
mov
cmp
mov
pop
imul
enter
fnstcw
imul
fiadd
add
push
cwde
sub
inc
mov
repnz
inc
and
mov
and
stos
(bad)
cmc
inc
pushf
push
imul
daa
adc
into
inc
xor
adc
movs
int
xchg
jns
int3
outs
mov
fdivr
add
jo
cld
mov
shr
cld
out
std
ja
pop
repnz
adc
out
xchg
or
or
push
mov
add
sbb
sbb
lahf
mov
hlt
ja
and
lds
cmp
sbb
add
push
sti
inc
pop
mov
xchg
in
fbstp
repz
mov
call
push
ss
xchg
jp
or
sbb
sti
lds
call
out
in
push
scas
rol
inc
in
int
mov
pop
mov
sub
pop
jmp
adc
movs
mov
mov
dec
mov
cmp
pop
xlat
test
adc
inc
fwait
inc
int3
and
pop
call
test
adc
jae
adc
mov
mov
cmp
cmp
jg
into
sub
cmp
xlat
test
jbe
push
jmp
mov
pop
jno
pextrw
or
cmp
xlat
stos
dec
xor
iret
(bad)
je
pop
cli
adc
jle
jns
jae
js
xor
call
sti
rol
mov
mov
stc
push
loopne
pop
or
call
pop
push
mov
mov
test
mov
mov
add
mov
(bad)
dec
cwde
sub
pop
aad
repnz
dec
addr16
mov
(bad)
sub
nop
xchg
pusha
inc
fs
(bad)
xchg
sahf
jnp
mov
push
cmps
jmp
mov
repnz
stos
xor
out
add
pop
adc
out
rol
adc
popf
and
xor
jmp
ret
int
push
ja
add
xchg
mov
mov
mov
in
cmp
imul
stos
scas
hlt
mov
inc
dec
enter
(bad)
jno
fistp
(bad)
sar
or
outs
ins
fimul
ficom
cmp
add
loope
stos
ffree
jge
dec
inc
pcmpeqw
lods
push
jle
jge
inc
rcl
int
icebp
scas
(bad)
sti
mov
fnstenv
cmp
and
pop
js
aad
cmps
(bad)
aam
and
mul
aaa
pop
or
mov
dec
cld
in
adc
imul
outs
sbb
popf
nop
xchg
adc
das
or
jo
xchg
push
or
cmc
sbb
push
xchg
or
or
and
(bad)
jno
push
jo
ret
int3
lds
or
sbb
cmp
xchg
push
sbb
cmp
mov
dec
mov
sahf
rol
fdiv
mov
hlt
je
push
xchg
iret
pushf
je
fstp
sbb
mov
mov
sbb
mov
push
xlat
ror
mov
jmp
push
pusha
(bad)
popa
inc
and
shl
cmp
ficom
adc
neg
jne
jbe
test
(bad)
test
dec
scas
leave
movs
xlat
aad
or
push
movs
push
iret
cmp
es
and
xor
inc
aad
call
ja
and
sub
stc
std
or
das
adc
jg
add
loopne
push
xchg
pop
lock
repnz
pop
dec
jno
cmp
aas
or
enter
inc
add
ins
and
out
arpl
sub
clc
loop
or
push
jbe
push
scas
push
push
pusha
out
dec
imul
dec
inc
push
cmp
ficom
xchg
dec
(bad)
mov
cvtpi2ps
jge
cs
sbb
test
pop
inc
mov
xchg
sahf
nop
adc
jmp
push
movs
cmp
(bad)
sbb
pop
into
cmps
inc
fmulp
jo
mov
out
jae
push
bound
(bad)
(bad)
enter
mov
mov
pop
sar
into
pop
neg
or
push
(bad)
int3
loop
xor
cdq
je
or
aas
out
jp
sbb
mov
push
fcomp
mov
mov
jne
push
test
repz
arpl
repnz
jp
sbb
jae
cmp
pop
fstp
jp
xchg
out
or
hlt
push
add
push
pop
inc
mov
dec
mov
jecxz
sub
jb
inc
shl
mov
cmps
xlat
ins
stc
jmp
(bad)
int
jb
adc
hlt
dec
pop
inc
pop
xor
push
lahf
xchg
xchg
movs
jecxz
adc
mov
push
jmp
push
daa
dec
inc
push
cmp
xor
fild
out
cs
sub
pusha
aam
mov
stos
add
jbe
cmp
jmp
jne
out
push
cmc
sub
sub
push
outs
push
jg
xor
in
xor
dec
mov
fsubr
rcr
push
fldcw
ret
xchg
sti
mov
lods
fcomp
sub
retf
(bad)
loopne
mov
ss
dec
mov
sbb
and
int3
sub
mov
xor
adc
iret
popf
push
push
out
push
adc
call
mov
repz
fldenv
xlat
mov
cmc
inc
std
arpl
adc
and
outs
jmp
(bad)
mov
inc
sahf
pop
aaa
jecxz
imul
push
pop
jne
test
stc
rol
jmp
jo
cmp
bnd
call
sub
sbb
or
or
inc
ret
mov
lods
adc
xchg
ins
arpl
mov
inc
in
(bad)
out
xlat
sub
shr
mov
mov
(bad)
fist
outs
mov
ret
cmp
jge
adc
(bad)
sub
jle
popa
sti
cmp
jb
or
jae
pop
pop
(bad)
es
or
std
aam
push
sbb
push
adc
(bad)
mov
(bad)
nop
sbb
lock
dec
or
in
sbb
jo
push
cwde
je
pop
or
in
retf
hlt
in
movs
adc
out
sbb
clc
pop
out
push
xor
outs
sti
mov
xor
push
push
std
sbb
sub
adc
jae
rol
ins
sub
mov
pop
mov
sbb
(bad)
aad
sar
cmp
xchg
or
pop
mov
fstp
push
icebp
xor
dec
xchg
nop
fdiv
jl
cli
je
into
lods
sub
loope
pop
ss
lea
inc
enter
stos
jbe
or
int3
fxch
cmp
or
dec
pushf
fist
mov
in
shl
sub
gs
(bad)
xchg
out
dec
push
pop
xor
iret
sbb
cmp
bound
jmp
test
stos
test
in
out
and
sbb
add
mov
call
repz
jecxz
push
iret
sub
ret
seto
outs
push
repnz
rcl
fwait
sbb
outs
mov
dec
(bad)
shl
pop
jb
(bad)
sti
adc
sbb
adc
and
std
jmp
sbb
xchg
stos
leave
sbb
sub
shl
mov
jecxz
movs
mov
cmp
mov
add
popa
push
repnz
test
mov
(bad)
test
fcomp
icebp
mov
pop
sahf
sbb
jg
dec
mov
repz
sbb
sub
mov
arpl
sub
push
mov
push
sbb
adc
sub
push
add
adc
fmul
(bad)
xchg
scas
fistp
add
jne
mov
stos
fs
sbb
pop
push
jmp
mov
sbb
call
mov
mov
mov
mov
inc
lods
aaa
es
push
ret
push
lods
xor
hlt
movs
mov
xchg
lock
or
inc
mov
push
xchg
test
push
sbb
aas
mov
mov
push
xor
pop
xor
xchg
mov
cmps
dec
ret
inc
jnp
cld
jecxz
imul
adc
jecxz
test
stos
sbb
popf
shl
dec
pop
repz
dec
(bad)
js
pop
test
adc
jmp
add
sbb
pop
daa
loop
add
jns
out
mov
movs
ins
mov
bound
push
jp
mov
mov
das
xchg
and
fcomi
lods
lock
xchg
add
int
je
in
int
out
stos
aas
inc
lea
or
pop
test
push
ins
lock
adc
or
adc
mov
sub
iret
jmp
push
ins
inc
dec
dec
fidiv
pop
pop
out
movs
mov
fwait
lods
loopne
mov
xchg
jp
dec
call
jmp
and
or
sbb
adc
mov
xchg
add
(bad)
sahf
clc
test
test
repnz
movs
jo
xor
retf
mov
jo
rcl
in
cli
(bad)
pop
fdiv
xchg
push
scas
test
movs
dec
scas
lods
xor
aas
(bad)
out
cmps
xchg
inc
adc
outs
sub
push
je
shr
xchg
jb
push
mov
mov
push
dec
lods
rcr
das
push
xchg
lds
mov
inc
xlat
push
das
and
imul
adc
push
in
rol
sub
sub
xchg
test
test
in
lods
pop
or
jmp
out
jp
mov
jmp
lds
shl
retf
ret
push
cmp
stc
dec
loopne
add
mov
inc
fadd
scas
sti
adc
jp
js
adc
dec
pop
sbb
daa
in
sbb
push
clc
pop
scas
push
rcl
ja
and
iret
dec
cmps
mul
ins
push
mov
inc
push
and
jb
aas
dec
mov
jo
inc
pop
out
push
iret
mov
mov
gs
push
push
mov
jmp
fisub
and
fldenv
scas
inc
pop
jb
daa
or
lea
ror
lods
pop
mov
add
cmp
sub
test
and
pop
outs
sub
mov
and
dec
cmp
mov
xchg
mov
xor
stos
popa
cmp
xor
cwde
inc
xor
mov
cmp
je
movs
push
mov
test
in
pop
out
inc
xchg
cwde
add
and
loope
fsubp
and
aas
sar
mov
mov
ins
fsubr
mov
addr16
mov
sub
mov
movs
cwde
imul
das
mov
(bad)
das
push
ficomp
push
(bad)
lock
push
jmp
jge
test
dec
pop
aaa
xchg
jmp
ss
retf
lods
retf
xor
dec
stos
popf
out
mov
and
jl
and
lea
cmp
arpl
add
inc
fadd
stc
xor
popf
ret
push
or
jg
mov
lods
cmp
sub
je
and
gs
retf
jmp
push
fxch
jae
push
mov
and
jno
fwait
les
in
cmp
ja
pushf
shl
(bad)
out
dec
int
pop
iret
and
sti
jmp
xchg
popa
mov
cmp
and
pushf
dec
rol
xchg
cdq
add
fst
or
mov
jp
fs
loopne
push
mov
or
xchg
or
jnp
dec
daa
push
xor
pop
(bad)
adc
scas
movs
or
sub
or
xchg
mov
idiv
frstor
mov
(bad)
pop
inc
lods
loop
(bad)
or
imul
fs
fnstenv
mov
pushf
push
stos
pop
inc
add
fistp
jmp
inc
cdq
rcl
inc
inc
sub
cmp
ja
movs
loope
cwde
(bad)
out
ficomp
js
div
adc
add
sbb
mov
out
pusha
or
cmps
shl
aam
rcl
test
jle
cli
fcomp
inc
add
jmp
push
outs
(bad)
retf
mov
adc
sub
mov
loope
sub
inc
inc
mov
pop
lahf
mov
xchg
fwait
dec
jne
mov
sti
je
mov
inc
dec
mov
lahf
and
add
xchg
in
or
and
inc
xor
test
and
and
cs
push
sti
cmc
dec
rcr
outs
(bad)
sbb
jnp
sub
ss
cmp
das
idiv
movs
pop
ins
or
push
cmp
jae
imul
repnz
dec
mov
push
mov
movs
daa
cli
in
push
je
adc
iret
jo
mov
adc
cmps
adc
sbb
imul
dec
mov
mov
adc
jge
push
jmp
push
xchg
loopne
push
inc
push
test
fistp
les
sbb
(bad)
mov
ror
xchg
lods
jne
adc
rol
jl
mov
call
xchg
fist
pop
xchg
in
or
xchg
lods
repnz
pop
mov
int
ret
fisttp
mov
and
dec
push
xor
je
int3
dec
aam
hlt
dec
sub
leave
mov
cli
aad
add
outs
aad
xchg
mov
jmp
cli
sbb
mov
mov
mov
cmp
jmp
jge
add
bound
jge
cmp
hlt
mov
or
pop
fisub
cmp
sbb
pop
jecxz
xor
xor
or
inc
mov
iret
and
aas
pop
jb
mov
les
sub
data16
movs
sbb
xor
outs
jmp
sub
jns
cmps
les
or
jae
or
(bad)
jle
inc
popf
aaa
jmp
lahf
inc
vmread
loopne
lds
jb
inc
and
mov
xor
mov
xchg
mov
in
cmp
fstp
jmp
xor
xor
sbb
bound
mov
pop
pop
xchg
in
sub
cli
xor
cmp
mov
or
pop
test
cmp
mov
retf
scas
sbb
outs
pusha
xchg
(bad)
clc
stos
pop
push
test
fistp
imul
retf
push
call
inc
sub
cli
out
xor
lods
inc
leave
add
mov
loope
(bad)
cmc
ins
imul
scas
dec
into
loope
mov
mov
mov
ss
pop
jp
mov
clc
(bad)
xchg
sbb
or
xor
jbe
and
jmp
ja
add
push
xlat
xchg
jle
and
pop
sbb
hlt
scas
fs
dec
(bad)
icebp
xchg
add
ds
xor
int3
clc
pop
clc
repnz
sbb
push
(bad)
cdq
adc
jns
(bad)
hlt
leave
fsubr
or
jmp
add
test
xlat
pop
mov
gs
int3
inc
sahf
xor
xor
cwde
add
sbb
dec
retf
cwde
ds
iret
pop
push
adc
sbb
mov
sub
pop
test
(bad)
mov
pop
cwde
aas
loope
lods
xchg
cmp
pop
push
gs
call
aam
mov
(bad)
fst
push
rol
mov
bound
pop
or
mov
push
mov
mov
push
pop
mov
jmp
test
leave
mov
inc
ins
mov
fisub
sar
cld
jp
stc
lods
pushf
mov
xchg
enter
adc
enter
mov
hlt
(bad)
push
loop
(bad)
fld
mov
and
pop
fwait
inc
test
sbb
inc
js
sub
dec
cwde
in
sbb
sub
add
ins
pop
imul
xchg
or
call
push
stc
pushf
push
cmp
scas
stos
mov
daa
mov
ja
cmp
or
push
add
jmp
jecxz
add
stos
xlat
mov
jmp
out
pop
mov
or
push
test
xchg
sub
pop
retf
ins
out
(bad)
add
call
add
lods
pop
leave
rcl
cmp
outs
pop
xchg
sub
adc
ret
popa
mov
mov
fisttp
xchg
stc
lock
neg
inc
push
test
inc
cmp
fiadd
inc
sub
std
pop
iret
test
push
pop
hlt
mov
xchg
test
lock
mov
adc
push
jge
jmp
push
out
aam
xor
rol
jne
dec
and
pushf
fsubr
aas
pop
mov
inc
pop
adc
mov
scas
push
lds
cld
jge
cs
xchg
jno
xchg
lods
(bad)
mov
ins
clc
mov
pop
pop
es
push
mov
call
mov
and
xchg
imul
imul
dec
pusha
and
push
mov
sbb
bound
pop
mov
push
adc
dec
xlat
and
scas
dec
xchg
in
std
repnz
dec
mov
repz
mov
pop
add
cmp
leave
mov
shl
hlt
cmp
les
jmp
jecxz
in
gs
mov
movs
xchg
mov
sbb
icebp
(bad)
dec
aam
xchg
xor
jl
adc
adc
pushf
pop
je
push
mov
cmp
jmp
fisub
push
mov
in
mov
popa
cmp
cmp
sbb
jbe
aam
mov
lock
sbb
or
scas
sahf
inc
push
sub
call
jmp
xor
xor
or
(bad)
in
mov
hlt
pop
retf
mov
loopne
imul
mov
je
popf
ret
scas
cwde
cmp
add
dec
pop
mov
fcomp
ins
mov
les
repz
pusha
dec
loop
dec
es
rcr
push
int
jecxz
mov
jg
mov
jp
imul
mov
push
mov
neg
icebp
and
sbb
add
ret
mov
sbb
popa
jp
dec
or
xor
mov
sbb
xchg
push
cs
imul
scas
iret
dec
push
or
sbb
mov
mov
pop
inc
xlat
mov
xor
xchg
fdivr
shl
mov
inc
inc
xchg
pusha
and
or
sar
fst
xor
jg
leave
inc
dec
adc
add
dec
loop
mov
push
mov
dec
and
jle
xchg
stos
(bad)
pop
outs
push
mov
movs
pop
sar
loopne
push
ret
cli
dec
shr
in
xor
cmc
mov
sbb
and
inc
leave
fimul
mov
cmps
mov
push
inc
mov
adc
in
nop
dec
nop
xor
push
mov
or
sub
retf
add
or
scas
jl
lock
cmp
cmp
dec
(bad)
sub
dec
bound
mov
push
fsubr
mov
movs
int
inc
scas
pop
xor
xor
pop
fcmovnb
es
cdq
repnz
and
inc
xor
mov
imul
es
inc
retf
jmp
lock
cmp
(bad)
test
cmp
jle
mov
xchg
mov
(bad)
jmp
sti
push
sbb
popf
clc
push
call
inc
ret
add
cmp
mov
sbb
jmp
pop
mov
ret
nop
inc
cld
neg
sbb
xchg
shl
in
pop
dec
cmc
ficomp
cld
jecxz
mov
mov
stos
or
adc
cs
pop
cmc
mov
fwait
inc
mov
jecxz
call
and
pop
sahf
push
add
mov
sbb
sbb
pop
sub
adc
stos
cs
lods
call
aas
mov
pop
sbb
mov
mov
enter
je
test
pop
cs
add
lock
addr16
and
pop
ja
pop
test
mov
test
sti
bswap
jne
movs
neg
push
repnz
shl
idiv
mov
inc
fisub
mov
call
push
inc
push
fwait
push
ds
push
int3
mul
pop
or
sub
pop
add
ror
jp
jge
popa
adc
xchg
arpl
jge
aam
je
dec
lods
(bad)
jecxz
jns
jae
inc
inc
lahf
dec
pop
(bad)
cmps
adc
aaa
in
fs
shl
inc
push
fidiv
out
xor
dec
leave
xchg
pop
or
sbb
cli
lods
mov
out
push
mov
test
in
inc
enter
sub
addr16
mov
das
cdq
dec
jnp
lds
mov
rcr
outs
shl
aam
and
imul
inc
cs
out
pushf
addr16
out
test
and
cmp
dec
mov
(bad)
in
add
xor
or
sbb
sbb
test
push
call
jmp
add
push
cwde
inc
daa
sbb
loop
call
cwde
call
push
pop
add
rcr
or
cmp
ins
in
xlat
(bad)
aas
mov
jg
lds
xchg
or
mov
ins
pop
addr16
imul
or
dec
push
or
adc
sub
pop
fadd
repnz
jecxz
dec
shl
mov
and
and
jo
fwait
sbb
cmp
push
mov
cmp
(bad)
xor
mov
(bad)
(bad)
aad
xchg
mov
fdiv
sar
add
jg
ret
(bad)
jle
jbe
push
xchg
sbb
fdiv
adc
push
cmp
fs
push
sub
loopne
pop
pop
out
bound
ss
cdq
mov
fdiv
fisttp
mov
mov
mov
rcl
and
push
jp
pop
lods
sti
enter
and
add
stos
int3
mov
pop
aaa
popf
add
pop
in
inc
pushf
xchg
in
mov
and
mov
mov
retf
shr
xchg
pop
mov
push
push
aam
xor
ins
push
iret
cmps
dec
in
jmp
div
xchg
out
clc
int
in
jp
ror
mov
fwait
push
sub
xchg
pop
out
cld
jns
xor
or
imul
dec
ffree
dec
pop
fwait
cmp
cwde
push
(bad)
mov
(bad)
xchg
call
mov
add
mov
out
push
syscall
adc
mov
mov
dec
mov
sbb
jmp
xchg
pop
mov
dec
cmc
enter
bound
shl
xchg
mov
fucomip
push
jecxz
cs
sbb
hlt
pusha
cs
scas
(bad)
cmp
mov
pop
add
dec
out
enter
mov
sub
sbb
xor
sub
jge
(bad)
in
out
sub
ret
add
xlat
pop
cmps
js
daa
mov
jo
and
sbb
push
add
pushf
fcmovnbe
xor
push
fcomp
sub
in
push
sub
iret
cmp
stos
jno
and
sub
rcr
sub
scas
cs
dec
daa
pop
push
jmp
call
(bad)
mov
inc
jl
xlat
push
add
push
stos
int3
push
jecxz
ret
sub
(bad)
enter
and
push
retf
fcmove
int3
out
jmp
jmp
cmp
dec
hlt
inc
fisub
clc
sbb
xchg
add
add
cmps
cwde
cmc
add
jnp
pop
mov
sub
packuswb
jno
stc
jl
mov
ds
or
(bad)
lock
xor
rcl
sbb
out
adc
jmp
mov
jne
aas
push
cmp
or
int3
push
push
mov
iret
cs
popa
adc
or
outs
pop
out
mov
and
ss
mov
jl
cmp
fld
jo
mov
add
or
lods
movs
out
(bad)
xchg
and
jmp
and
inc
push
sbb
pop
mov
add
add
out
xor
xchg
jno
dec
cmp
push
sub
(bad)
mov
stos
out
inc
sti
imul
jge
ret
loopne
sbb
into
clc
aaa
(bad)
ds
xor
clc
or
cdq
xchg
sbb
sbb
and
sub
call
jl
pop
jb
xchg
dec
scas
test
adc
inc
inc
jle
dec
cli
xchg
pusha
push
pop
pop
add
push
mov
xor
inc
in
jle
scas
pop
adc
sbb
call
shr
jbe
ss
and
int3
movs
(bad)
mul
addr16
(bad)
push
arpl
aaa
sub
popa
push
mov
fwait
adc
pop
int3
inc
add
mov
dec
jg
cmp
jecxz
inc
iret
mov
mov
cmp
inc
or
imul
rcr
cwde
mov
movs
loopne
cmp
pop
fild
dec
shr
dec
inc
int
push
mov
mov
sbb
popa
std
repz
xor
xlat
adc
mov
cdq
xor
call
test
test
mov
and
add
sub
stc
jae
mov
das
popf
and
or
cmps
pop
fst
xor
pop
cmp
jae
cld
enter
ror
inc
add
dec
in
int3
dec
dec
dec
je
movs
data16
gs
(bad)
adc
adc
pop
aas
ficom
xchg
xchg
(bad)
sub
inc
sub
sbb
inc
or
retf
sbb
inc
sub
sbb
xchg
iret
pop
or
jno
xchg
repz
jns
add
shr
pop
mov
sub
or
cmps
mov
icebp
inc
inc
jno
push
cmp
adc
repz
cmp
leave
sbb
xlat
cmps
pop
cmc
xor
aaa
xchg
sub
and
cli
ret
dec
xor
dec
xchg
mov
sbb
das
xor
xchg
or
cmc
ins
int
mov
cmp
scas
fs
dec
push
mov
or
scas
sub
inc
iret
jnp
into
das
leave
xchg
call
pusha
xor
wrmsr
test
adc
xor
xor
sahf
loope
fwait
xor
push
lods
outs
xor
lods
mov
sub
rcr
scas
icebp
jnp
(bad)
jge
adc
xchg
jmp
loop
cli
dec
mov
mov
aas
leave
data16
aas
jmp
sbb
mov
daa
push
lods
sub
outs
loopne
in
std
add
repnz
cli
retf
and
in
inc
mov
mov
enter
xchg
(bad)
push
aam
and
arpl
arpl
icebp
dec
mov
fs
jb
cmp
cs
mov
xchg
call
jp
jmp
cmp
leave
std
xor
in
jno
imul
fstp
out
mov
jge
dec
adc
dec
or
mov
mov
icebp
push
xchg
int
retf
adc
dec
ds
cmp
jnp
mov
add
scas
test
dec
ret
jnp
sbb
cmp
sbb
loope
cdq
cmp
ror
dec
inc
xor
or
mov
js
inc
popa
ret
loopne
dec
xor
test
aad
imul
adc
(bad)
(bad)
shl
fstp
xor
mulps
inc
hlt
sbb
xchg
dec
mov
hlt
xchg
jecxz
add
pushf
push
lods
mov
test
inc
jne
arpl
gs
sbb
repz
(bad)
inc
push
mov
xor
jne
fsubr
or
and
mov
sub
lods
or
ret
fisttp
neg
mov
mov
ror
imul
jmp
icebp
xchg
lds
mov
fmul
sub
xchg
sbb
pop
call
call
jns
mov
and
pusha
(bad)
cld
pop
push
push
push
push
nop
adc
bound
jo
fld
lods
push
pop
shr
adc
call
mov
daa
not
cwde
icebp
mov
xchg
jnp
out
cmp
cli
push
dec
pusha
xchg
popf
popa
or
inc
mov
outs
outs
stos
add
push
and
pop
pop
sub
cmps
cdq
sub
gs
repnz
sti
fwait
pop
in
sar
push
xchg
fild
into
movs
repnz
(bad)
push
dec
in
push
lods
adc
pop
ficomp
aaa
or
aaa
(bad)
xor
jp
dec
cwde
jno
cmp
and
cmps
mov
hlt
fcmove
lea
sahf
mov
push
push
and
outs
mul
fnsave
sbb
lds
mov
dec
ds
push
mov
mov
je
sbb
pop
les
std
mov
jno
add
mov
mov
ins
test
rcl
jno
out
dec
ds
mov
cmps
pop
js
stc
pusha
std
pop
or
mov
mov
inc
push
ds
mov
int3
retf
mov
jbe
xor
neg
push
mov
add
add
fdivr
cli
push
cmp
ja
mov
xchg
aad
xchg
push
arpl
je
dec
test
and
ss
mov
rcl
clc
pop
adc
push
fnstsw
mov
outs
shl
aad
rol
scas
mov
xor
ret
ror
xor
push
pop
xchg
mov
in
mov
add
lods
pop
push
in
daa
sbb
jecxz
mul
jae
sti
jmp
cmp
lock
xor
in
daa
cmp
clc
retf
cmp
sbb
xchg
xor
in
sbb
add
adc
jge
jo
aas
pop
cwde
mov
aaa
(bad)
dec
add
cmps
mov
fwait
ja
xor
adc
jnp
sbb
movs
shl
daa
ins
and
cmps
cmc
inc
jb
daa
arpl
pop
xor
push
sub
into
lds
clc
push
out
push
imul
and
fnstsw
mov
mov
test
or
lahf
fsubr
inc
lock
in
or
sbb
out
sbb
jbe
push
mov
(bad)
rol
mov
out
xor
les
je
and
test
pop
test
sbb
fbstp
xchg
rcr
push
hlt
fs
maskmovq
div
xchg
lock
pop
mov
(bad)
bound
push
(bad)
xchg
scas
cli
dec
gs
and
icebp
mov
aas
xor
xchg
xor
and
cld
xchg
sbb
fst
(bad)
fistp
cmp
bound
pushf
xor
dec
add
mov
ffree
mov
sbb
xor
das
pop
fs
dec
adc
int
xchg
fidivr
fmul
lahf
imul
push
pop
loop
jmp
jle
arpl
fsub
add
lds
les
loopne
mov
gs
enter
sub
(bad)
(bad)
pop
ret
pop
(bad)
nop
push
in
mov
mov
stc
and
sub
jno
mov
outs
mov
retf
popa
push
test
add
push
adc
into
retf
shr
xor
push
cs
jae
jae
or
push
push
xor
ja
mov
mov
push
mov
mov
neg
xor
xchg
pop
adc
push
sbb
shl
stos
mov
jle
dec
cmp
(bad)
xor
mov
dec
popf
push
cmp
mov
imul
xchg
and
outs
rcl
mov
mov
cmps
aaa
mov
movs
pop
test
inc
mov
or
arpl
fdivp
pusha
mov
push
pop
mov
stos
rcr
movs
xor
xchg
(bad)
in
hlt
push
mov
sbb
or
cmp
call
imul
clc
repnz
and
jmp
mov
xchg
mov
repz
cmp
outs
xor
jmp
add
jbe
repnz
lods
(bad)
push
sub
fidivr
xor
test
dec
sub
sbb
cmps
push
jge
inc
lods
in
jl
in
push
jmp
jl
scas
push
xchg
xor
cmps
mov
test
push
push
jle
ds
cwde
(bad)
inc
aad
ret
fwait
inc
inc
cmp
inc
dec
movs
xor
jo
push
cmp
add
sahf
pop
mov
xchg
dec
xlat
or
or
pop
cli
push
ja
stos
cmc
and
fsubr
adc
cmc
adc
in
cmp
or
cmp
cmps
in
lds
xchg
loop
(bad)
data16
mov
jl
ret
fucom
inc
aad
fnsave
mov
lock
xor
mov
jge
stos
repz
movs
mov
lahf
mov
shr
push
rcr
in
adc
and
sbb
cmp
mov
fiadd
pop
mov
pop
int
adc
jg
retf
adc
sbb
or
xchg
adc
xchg
mov
bswap
cli
jg
jecxz
in
(bad)
std
pop
in
aas
push
push
outs
inc
fldenv
sub
jle
mov
scas
push
fmul
sub
int
fsubr
test
push
add
into
ins
or
sti
pop
retf
stos
add
(bad)
jp
dec
into
inc
xlat
pop
jbe
or
mov
adc
setae
stc
loopne
ret
push
xchg
pop
adc
icebp
shl
setno
movs
mov
test
ins
outs
int3
xor
mov
dec
daa
mov
inc
inc
xchg
sahf
mov
inc
and
xchg
mov
push
adc
xchg
in
fidiv
jp
mov
or
push
in
jge
cmp
pop
test
mov
add
loop
out
add
test
outs
add
cmps
push
loope
outs
mov
push
sar
stc
ins
(bad)
in
xchg
mov
aam
les
sbb
xchg
hlt
jle
or
js
data16
ins
xlat
mov
cmps
xchg
scas
enter
icebp
inc
fsub
mov
sar
aad
es
mov
jmp
xchg
arpl
mov
push
data16
call
mov
aaa
adc
push
cmp
mov
in
xchg
(bad)
in
inc
in
mov
stc
jae
movs
ret
test
rol
xor
cmp
dec
push
test
sti
jmp
mov
in
out
or
rcl
fcmove
xor
stos
pop
retf
hlt
cmp
inc
(bad)
push
mov
push
pop
mov
fwait
repnz
int3
das
xchg
fdiv
inc
dec
add
dec
inc
imul
adc
push
repz
sub
test
in
mov
mov
into
dec
arpl
push
cli
paddq
test
nop
jae
dec
xchg
(bad)
xchg
mov
aad
je
sbb
hlt
push
push
stos
mov
loopne
test
aaa
xor
sbb
test
je
outs
inc
aaa
or
test
into
inc
sub
lods
inc
div
lock
loope
mov
push
jnp
jne
jno
jne
stos
popf
xchg
mov
dec
xchg
cmp
movs
dec
add
cmp
cmp
push
(bad)
jo
xlat
ins
jb
cmovno
add
jb
pop
cmp
pop
sub
loope
push
dec
js
cmp
hlt
ret
shl
test
push
stc
sbb
rol
xor
daa
add
aad
and
clc
pusha
popa
lods
std
mov
ins
out
mov
lahf
lahf
mov
mov
mov
add
fs
(bad)
mov
push
(bad)
sub
mov
nop
sahf
popa
mov
mov
arpl
lahf
arpl
fs
mov
xchg
xor
test
add
inc
inc
jae
pop
pop
jge
or
adc
int
jl
push
outs
ret
cmps
mov
jmp
popf
inc
mov
and
movs
test
popa
add
int
jg
lds
inc
fs
imul
jmp
ret
out
jno
mov
mov
mov
pop
adc
push
imul
adc
cmp
push
and
data16
fwait
xor
ds
lods
push
std
sbb
int3
add
or
add
fwait
sbb
aam
jmp
cmps
(bad)
jl
gs
fwait
or
(bad)
das
xor
dec
(bad)
adc
pop
sub
outs
dec
or
pop
nop
je
aaa
jl
pop
push
repnz
icebp
(bad)
sub
ret
dec
dec
sbb
imul
call
pushf
sub
xor
inc
jl
in
push
sbb
ds
adc
xchg
xchg
sbb
jb
xchg
push
cs
adc
not
mov
in
fisttp
jge
cmp
or
mov
mov
mov
test
in
(bad)
(bad)
mov
popa
lds
sub
imul
scas
xor
inc
in
dec
cmp
and
xchg
jp
dec
adc
aas
gs
(bad)
lods
jge
popf
xchg
add
xchg
arpl
enter
inc
inc
stos
in
stos
call
mov
sbb
inc
fild
xchg
pusha
loope
sub
shl
gs
sub
pop
mov
clc
xchg
out
addr16
seto
movs
sbb
mov
pop
sbb
adc
adc
dec
pop
and
ja
ds
leave
inc
(bad)
mov
les
pop
dec
sbb
ins
mov
shr
jg
push
rol
sub
cld
mov
out
cmp
dec
lahf
mov
sub
test
mov
sbb
nop
in
dec
sahf
sbb
xchg
xchg
cmc
mov
or
(bad)
ja
mov
inc
fadd
outs
sub
push
lds
xchg
adc
pop
mov
imul
scas
fcomp
les
push
test
jge
mov
add
cmp
ret
pop
adc
cld
pop
push
mov
adc
jg
xor
mov
cld
add
inc
ret
test
dec
aad
or
addr16
sub
pusha
pop
and
jg
fadd
cmp
xchg
and
inc
xchg
sahf
dec
hlt
(bad)
sbb
push
js
ins
scas
sub
pop
xchg
inc
gs
lea
sahf
mov
push
loop
cmp
outs
sub
fidivr
jge
lods
dec
mov
scas
test
repnz
xor
imul
ret
push
clc
icebp
cmp
mov
movs
adc
sub
cs
out
test
mov
mov
mov
gs
sub
rcr
jne
pushf
out
sub
push
fwait
int3
outs
jmp
scas
add
outs
pop
int3
in
addr16
aad
ror
adc
in
push
test
sti
adc
scas
rcr
iret
sub
xchg
push
jg
popf
ror
daa
mov
cmp
mov
xchg
jl
popa
gs
(bad)
pop
movs
popf
and
push
pop
push
adc
lds
jge
push
arpl
mov
cdq
les
loopne
adc
pop
jae
stos
push
sub
sbb
test
mov
add
in
lods
rcr
xor
fstp
mov
(bad)
fwait
mov
and
loop
or
sahf
arpl
adc
test
fisubr
ret
or
ror
fist
sbb
dec
mov
int3
adc
dec
mov
push
lods
pop
pop
ss
test
pop
add
mov
or
sar
jb
push
loop
shl
mov
imul
push
xchg
pusha
loop
pop
push
mov
mov
pop
js
mov
retf
push
scas
test
push
movs
sbb
movs
cmp
jmp
gs
fcom
cmc
xor
cmp
sub
dec
inc
jl
push
inc
add
jmp
mov
xor
pop
pushf
mov
pop
xchg
jl
jmp
pop
mov
imul
fucomp
dec
(bad)
std
jecxz
daa
push
pop
mov
les
int3
test
sub
addr16
push
add
xor
stos
adc
xor
popf
out
jbe
ror
outs
xchg
pop
or
mov
rcr
xor
ins
imul
ins
leave
gs
sbb
ret
mov
push
(bad)
stos
xchg
lock
std
pop
sub
clc
popf
(bad)
movs
retf
xchg
out
add
mov
xor
aaa
push
push
cmp
cli
jmp
or
cmp
jg
pop
add
sti
or
outs
lahf
and
jo
test
out
or
cmp
int
xchg
outs
mov
aam
xlat
sbb
xor
arpl
mov
les
push
fsubr
lds
add
sub
popf
daa
push
adc
jmp
stc
dec
fistp
dec
xchg
mov
cmp
loope
mov
shl
mov
scas
inc
inc
in
dec
in
mov
xchg
add
or
jnp
pop
icebp
xor
loope
sub
movs
cld
rcl
mov
or
ins
in
scas
adc
jg
xor
dec
pop
jo
and
aaa
or
add
ror
add
lods
cmps
push
outs
sub
into
cmp
stos
mov
and
loopne
outs
(bad)
pushf
push
div
jo
mov
mov
iret
imul
adc
pop
les
sti
or
xor
inc
rol
jae
jae
push
movq
cmp
js
xlat
imul
push
inc
push
sbb
stos
sahf
(bad)
fsubp
mov
add
mov
mov
xor
dec
and
sti
jge
jne
pop
scas
out
push
add
daa
jo
xchg
cdq
repnz
dec
push
push
add
retf
xor
push
stos
pop
push
in
aas
cmps
imul
push
jmp
xlat
cmp
push
mov
fs
mov
(bad)
test
xor
not
xor
pop
aas
imul
test
out
lods
idiv
xchg
xor
mov
popa
pop
out
stos
xchg
sahf
mov
mov
mov
aam
outs
or
push
movs
es
jl
retf
pop
xchg
aaa
rcl
mov
idiv
sbb
retf
enter
test
or
cli
movs
lahf
add
clc
popa
xchg
and
test
std
mov
add
and
test
movs
std
mov
adc
cmp
sti
out
adc
retf
sbb
je
ins
popf
in
imul
sub
cmp
mov
push
dec
les
jmp
jbe
sub
ins
jl
inc
mov
cmp
test
mov
lahf
fild
fsub
mov
adc
xor
xchg
and
cmp
lock
and
int
idiv
pop
test
xchg
mov
cwde
sbb
inc
pop
popa
xchg
jge
outs
and
xlat
xchg
push
sub
jecxz
push
xor
add
ficom
aas
test
dec
and
(bad)
(bad)
mov
pop
xchg
cwde
call
jo
in
in
sbb
pusha
push
xor
cmp
or
jmp
fld
imul
dec
cmp
pop
lods
idiv
stos
mov
jecxz
fwait
cmp
xchg
movs
clc
int3
retw
add
mov
es
add
neg
dec
or
(bad)
test
push
dec
cmc
xor
adc
out
or
sbb
pop
jbe
mov
dec
mov
in
shl
and
adc
inc
jnp
and
leave
sbb
ror
cmp
inc
mov
or
jle
cwde
and
push
aas
xchg
ss
shl
daa
fstp
dec
add
out
adc
cmps
in
pop
push
dec
add
inc
mov
call
movs
xchg
add
mov
fisubr
mov
xor
sub
sar
lea
ffreep
pop
sub
clc
fldenv
jnp
xor
xor
lea
fdivp
leave
adc
mov
call
test
mov
push
dec
fisttp
mov
dec
xchg
hlt
xchg
sahf
push
and
enter
jg
lods
mov
lock
inc
shl
jb
or
jl
sbb
mov
arpl
sbb
mov
ins
and
dec
imul
pop
popa
mov
int
add
dec
lea
mov
fmulp
sbb
mov
aam
daa
or
sar
add
adc
js
jge
pop
dec
jbe
sbb
xor
mov
mov
xlat
sbb
mov
fimul
pushf
fild
jbe
fstp
shl
xchg
dec
xor
ror
or
fnstsw
xchg
sub
rcr
outs
cmp
cmp
xchg
cmp
jo
dec
sbb
(bad)
mov
mov
jecxz
or
push
mov
dec
mov
cmp
xor
pusha
stc
jmp
sti
adc
dec
aad
outs
jnp
retf
aaa
jnp
push
std
fild
int
dec
cmc
xchg
cmp
push
jnp
inc
cmp
push
aaa
sahf
out
adc
or
cmp
shl
cmp
cld
inc
lods
call
(bad)
addr16
call
xlat
pusha
mov
inc
ret
xchg
cmps
das
mov
sbb
call
mov
adc
ret
scas
call
mov
aam
loop
daa
cmp
sbb
neg
pop
(bad)
retf
jmp
hlt
ja
or
jecxz
inc
jbe
loopne
ins
out
sti
jbe
(bad)
xchg
sahf
push
in
ins
call
movs
sbb
cli
lods
popa
cmp
cmp
ror
dec
xor
cdq
iret
jb
jl
push
(bad)
mov
cwde
sti
mov
mov
jecxz
push
jo
xor
mov
sbb
sbb
cmp
mov
sub
inc
mov
or
int3
dec
scas
ja
loope
sar
lods
mov
popa
push
sahf
mov
cmps
cli
sbb
pop
mov
sbb
inc
into
sub
push
lahf
call
stos
test
add
sub
mov
fs
jge
call
push
jbe
xor
and
loopne
jmp
jp
jo
cmp
pop
sub
jae
pop
fs
mov
fwait
pop
lea
enter
mov
adc
or
sub
bound
cmp
aam
or
in
les
xchg
fwait
mov
push
sub
cwde
test
push
das
es
enter
xor
jne
adc
shl
daa
js
cmp
mov
push
sbb
cmp
push
mov
ins
dec
out
push
lds
call
mov
xchg
or
or
xchg
leave
inc
dec
sbb
arpl
jmp
jns
mov
repnz
ret
ja
push
retf
mov
call
pop
std
in
repz
add
mov
inc
sub
(bad)
je
add
inc
jg
push
xor
and
push
mov
dec
mov
jl
mov
pusha
ds
jb
aaa
das
mov
or
(bad)
mov
sbb
cmps
ret
lods
(bad)
push
or
mov
inc
pop
push
ds
push
add
or
push
jb
jg
or
aaa
mov
cmp
cmps
jbe
mov
cmp
mov
add
or
sti
int3
pop
fmul
outs
cwde
inc
adc
sbb
scas
mov
lock
test
cdq
mov
lea
cmp
add
in
jmp
enter
scas
adc
retf
jno
loope
sub
xchg
push
dec
adc
push
jg
pusha
and
into
dec
test
and
mov
shl
std
mov
mov
dec
ss
xchg
xchg
mov
jge
loope
adc
call
and
adc
mul
popa
dec
movs
xor
fidivr
sbb
aad
fnop
lods
loopne
sub
or
xor
sbb
fstp
dec
inc
sub
jmp
dec
cmp
arpl
xchg
je
cmp
mov
xchg
pop
push
jne
push
and
mov
jae
mov
push
lds
lds
mov
jo
ret
mov
push
jmp
dec
xlat
fdivr
jns
(bad)
jnp
push
xchg
pop
jae
lock
jno
sbb
jg
(bad)
shl
call
cmps
dec
xchg
dec
ja
jno
add
imul
xchg
cmps
enter
sbb
and
ins
std
pop
pusha
mov
loop
xor
mov
leave
mov
movntps
fstp
sbb
ds
mov
jno
addr16
pop
imul
dec
mov
lods
adc
and
adc
call
stc
sti
ret
in
aad
mov
arpl
js
in
jp
sub
or
fld
pop
mov
inc
shr
mov
adc
cmp
imul
adc
pop
das
rol
xchg
sbb
(bad)
out
in
pop
mov
mov
pusha
mov
hlt
pop
add
dec
(bad)
loop
dec
mov
hlt
ds
leave
ret
xchg
xor
jg
adc
jmp
jg
and
add
or
jns
sti
jne
js
pop
mov
sbb
fadd
out
jge
sahf
lods
pop
frstor
dec
mov
rcr
in
fnstsw
out
sbb
or
ins
sbb
sti
in
xlat
xlat
mov
loopne
and
lea
ja
mov
mov
and
outs
inc
mov
adc
push
xor
repz
sub
push
outs
fsub
pop
jbe
and
mov
and
xor
lock
in
cmp
sbb
fistp
mov
cmps
(bad)
popa
call
dec
push
xlat
pop
mov
jle
in
leave
inc
push
loope
rol
mov
jb
pop
sub
call
xchg
idiv
cwde
jb
ja
out
movs
aaa
inc
pop
or
sub
popf
aas
pop
aaa
dec
sti
and
or
push
pop
jl
jle
repnz
in
or
jp
lock
add
out
mov
and
daa
pushf
fs
xor
lea
jne
dec
adc
lock
add
inc
and
in
arpl
jg
fucomi
and
sub
xor
iret
adc
sbb
adc
test
mov
movs
adc
js
push
(bad)
popf
push
leave
gs
into
xlat
stos
cdq
aaa
sbb
movs
jno
lea
cld
add
mov
jmp
in
dec
out
mov
sub
dec
pushf
cmp
iret
push
icebp
xor
ds
loopne
(bad)
xlat
lahf
fwait
push
ss
enter
and
jb
and
xchg
lds
push
pop
xchg
cmp
push
icebp
and
dec
pop
add
and
out
mov
add
sub
ss
xchg
mov
mov
test
int
push
cmp
dec
hlt
add
cmp
push
adc
ds
push
or
popa
mov
(bad)
mov
aad
inc
(bad)
adc
lds
push
jle
shl
jl
cli
mov
fwait
jge
adc
push
(bad)
mov
mov
sbb
xor
fsub
mov
cs
dec
pop
inc
daa
jecxz
cs
pop
shl
mov
push
sub
fstp
hlt
pop
inc
mov
shl
push
rcl
or
mov
das
stos
retf
mov
push
cli
xchg
imul
jmp
jb
nop
aam
cmc
sbb
mov
(bad)
lds
rol
sbb
sbb
or
shl
(bad)
pusha
mov
push
mov
(bad)
bound
or
adc
dec
out
stc
jmp
or
push
lods
jb
xchg
enter
inc
add
in
(bad)
dec
out
cmp
jne
mov
xor
movs
sub
fwait
in
fild
repnz
mov
pop
push
jnp
addr16
jne
xor
mov
sub
xchg
adc
and
xchg
test
pop
arpl
aam
bound
mov
pop
test
loope
mov
in
push
cmp
lea
jo
cs
int3
adc
dec
ja
mov
or
repnz
fimul
dec
sahf
out
mov
mov
ins
or
pop
cmps
imul
test
mov
mov
hlt
mov
xor
and
movs
scas
xchg
popa
adc
xor
mov
mov
data16
fsub
dec
enter
mov
sub
test
sbb
repz
sbb
test
xor
or
push
sti
mov
daa
inc
jle
mov
fsub
push
sbb
push
repz
mov
dec
push
jmp
mov
out
add
mov
movs
mov
aaa
push
popf
cmp
rcl
into
and
ins
dec
es
jmp
inc
cld
fldenv
out
sbb
(bad)
xlat
jge
nop
mov
jno
lea
xchg
push
xor
ss
xor
dec
mov
sub
jo
sar
pushf
daa
ror
fst
fwait
es
sbb
fcomp
sub
pop
xchg
lods
icebp
sbb
mov
jl
hlt
mov
in
gs
enter
cmp
test
rcr
lahf
lock
fisttp
and
and
mov
or
out
push
and
push
fistp
cmp
sub
inc
fwait
push
stos
cmp
push
mov
inc
xor
dec
mov
sub
imul
mov
adc
lods
push
fistp
xchg
dec
sbb
mov
jo
adc
add
and
inc
psllw
mov
adc
test
add
jns
and
pop
fistp
test
cmc
scas
js
mov
pop
xchg
push
jnp
pop
nop
push
movs
jmp
retf
mov
loope
aas
addr16
or
sub
push
addr16
lods
fsub
pop
or
call
sti
mov
sub
xchg
mov
pusha
mov
sub
jp
push
pop
jl
inc
pop
xor
movs
xlat
lds
fnsave
lahf
inc
jg
sbb
inc
add
dec
test
imul
je
sub
sub
arpl
adc
pushf
int3
pop
dec
ss
clc
lods
and
sub
mov
sub
jmp
mov
adc
xchg
dec
int
jp
inc
aam
push
imul
pop
sbb
cmp
push
mov
outs
xchg
fldcw
or
loope
int
cdq
fcmove
jge
fwait
inc
sbb
mov
push
xchg
fs
pop
cmp
and
pop
shl
xor
and
pop
inc
inc
xchg
sub
mov
cmp
sub
pop
call
or
xchg
in
daa
ret
pop
call
(bad)
int
int3
cmps
jle
xchg
stos
es
mov
mov
sahf
jl
adc
lock
js
bound
movs
sbb
ins
ja
inc
out
xor
sub
cmp
fisubr
mov
test
xor
cmp
test
inc
push
pushf
dec
inc
not
cwde
sub
(bad)
repz
cld
jb
pop
push
fild
rcr
icebp
(bad)
movs
inc
mov
inc
shl
inc
cmp
movs
and
loope
and
jnp
loope
int3
mov
pop
lock
pop
pop
jo
xchg
lods
sbb
adc
fmul
dec
jecxz
adc
das
lock
addr16
inc
dec
mov
cmps
xrelease
inc
les
scas
movs
add
test
mov
inc
push
fcmovbe
(bad)
sahf
sbb
pop
mov
(bad)
rol
shr
and
sub
or
scas
jnp
repz
dec
sbb
cwde
push
mov
fnstsw
xor
mov
or
data16
xchg
jb
mov
add
cmp
ficomp
xor
mov
inc
mov
cmps
inc
daa
and
imul
dec
xchg
and
ins
test
pop
jecxz
add
jnp
or
loopne
and
xchg
xchg
test
ins
out
fdivp
mov
ds
pop
enter
int
ss
stos
and
(bad)
add
pop
cmps
pop
imul
and
or
inc
push
imul
stos
icebp
add
add
mov
mov
mov
jp
shl
pop
cmp
push
inc
pop
mov
sub
xor
fcom
adc
and
dec
and
cld
pop
rol
retf
sbb
push
mov
xchg
les
nop
mov
ja
sub
arpl
mov
ja
cmp
loopne
pop
pop
pop
or
imul
bound
xchg
push
mov
aam
outs
pop
adc
add
pop
mov
adc
push
test
mov
mov
fs
outs
xchg
fidivr
mov
imul
int3
in
push
adc
outs
loop
mov
push
xchg
pop
ss
mov
xchg
jp
jmp
out
or
push
mov
xor
add
or
data16
and
and
arpl
fincstp
xor
inc
retf
shl
mov
adc
lods
jo
push
std
jmp
das
cmp
jp
add
jo
mov
(bad)
xor
mov
in
sub
rcr
fist
pop
cmp
sbb
int
dec
fcom
iret
jns
cmp
or
xor
jp
(bad)
cmps
add
push
loop
inc
movzx
int3
imul
sti
icebp
xchg
mov
lea
cmps
and
mov
push
(bad)
aaa
xchg
test
adc
fimul
mov
add
push
add
sub
mov
sahf
sub
inc
mov
pop
sub
jnp
xchg
addr16
int
mov
cmp
inc
gs
add
jg
dec
sub
push
cwde
femms
push
movs
xlat
imul
xor
or
cmp
cmp
ins
or
rcr
rcl
push
mov
aam
xchg
mov
test
mov
sub
mov
sbb
in
scas
cld
mov
jb
mov
push
cmp
adc
dec
dec
sbb
cmps
xchg
sbb
mov
ds
cmp
ins
adc
dec
push
mov
inc
dec
jle
jb
in
iret
cmp
cmp
push
pusha
scas
mov
pop
pushf
and
inc
sub
jmp
add
add
cs
adc
jb
jbe
xor
inc
xrelease
sub
sahf
fcmovnb
or
cdq
cmps
test
in
fcmovnbe
push
or
call
fwait
popf
ins
inc
and
fcomp
mov
(bad)
movs
cmp
cmps
pop
loopne
pop
mov
fdiv
mov
mov
jecxz
ins
dec
or
arpl
adc
inc
and
or
inc
xor
push
gs
jg
in
repz
cmps
ja
js
inc
shl
or
aad
inc
pop
adc
push
out
inc
stos
int3
nop
leave
pop
pop
cmps
push
lods
aam
int3
into
loope
and
pop
adc
icebp
test
xchg
mov
add
xor
shl
shr
and
jnp
cdq
fucomi
(bad)
push
or
cmp
ins
cmp
inc
adc
bound
out
cmc
pop
fldenv
fsubr
jne
scas
mov
cmp
adc
jl
inc
pop
scas
jmp
in
into
mov
test
cmp
clc
imul
mov
mov
ficomp
and
scas
jno
cdq
sar
push
cs
or
sub
adc
push
mov
aad
imul
int3
inc
dec
mov
adc
shl
iret
and
xor
arpl
lea
cwde
jge
popf
mov
sar
stos
(bad)
push
in
addr16
in
push
ret
in
fs
cmp
sbb
xlat
aaa
push
dec
iret
popa
pop
lds
shl
add
clc
inc
jno
lock
pop
xchg
cli
gs
icebp
icebp
xchg
fisttp
or
loop
shr
(bad)
aad
fldl2t
sbb
stos
popa
js
xor
jne
data16
outs
outs
fwait
inc
(bad)
scas
lock
enter
call
lea
mov
loop
sbb
sbb
(bad)
pop
or
fild
xor
push
mov
push
in
scas
push
fdiv
in
pop
inc
mov
mov
sub
sbb
and
movs
inc
xlat
sub
js
or
sar
cmp
inc
js
or
add
(bad)
mov
ja
fs
mov
add
sbb
or
icebp
scas
pop
mov
inc
sub
push
cdq
movs
test
clc
lea
call
adc
fsubr
aaa
xchg
mov
rcr
dec
cmp
icebp
push
mov
ret
ret
push
or
push
test
xlat
inc
ret
dec
shr
adc
mov
das
push
pusha
push
aaa
call
mov
jge
test
nop
sbb
(bad)
pop
mov
fidiv
cmc
push
jp
mov
out
or
cwde
sbb
push
xchg
daa
xlat
jno
repz
jmp
rol
xor
push
sar
sbb
cmp
shl
retf
adc
mov
pusha
je
mov
mov
cmp
adc
addr16
into
push
push
inc
dec
gs
and
loop
inc
xchg
sbb
aaa
out
ins
inc
mov
scas
or
jae
xchg
pop
pop
ins
mov
cmp
ret
inc
mov
mov
inc
and
cmp
mov
push
push
add
dec
jg
push
bnd
mov
jmp
clc
add
imul
mov
dec
lahf
scas
sub
(bad)
hlt
dec
fucomp
xchg
out
mov
bound
dec
imul
shr
ss
add
icebp
repnz
sti
data16
cmps
dec
or
fwait
xor
fldl2e
or
xor
sub
pop
inc
mov
mov
xchg
mov
mov
dec
inc
aaa
test
dec
outs
mov
push
outs
push
push
inc
jmp
mov
outs
rol
xor
jns
loopne
push
shr
test
hlt
mov
add
sub
adc
cwde
sub
xlat
push
mov
cmp
xchg
(bad)
(bad)
test
pop
adc
xlat
ja
sub
xchg
(bad)
sbb
rcl
(bad)
les
cmps
adc
inc
xor
sub
add
sub
fs
mov
test
push
xchg
ret
es
and
mov
xor
add
sub
pusha
inc
adc
cmps
push
ins
adc
pop
mov
repnz
aas
mov
mov
dec
cmp
xor
and
xor
loope
inc
xchg
pop
push
xchg
sub
dec
pop
cli
cld
aas
dec
dec
xor
daa
dec
ret
lods
add
scas
test
jae
pop
add
cmps
nop
fadd
or
retf
push
adc
push
psubsw
imul
push
add
ja
and
sbb
retf
in
and
push
arpl
aas
jle
jo
ins
push
in
sub
popf
xchg
retf
movs
mov
jbe
cmps
jnp
ror
push
ds
mov
and
arpl
xor
(bad)
pusha
pop
out
fisub
xchg
fs
jmp
clc
jbe
pop
push
leave
lods
add
popa
aaa
jne
in
xor
clc
xlat
test
retf
xchg
add
mov
xchg
shr
or
pop
inc
jmp
test
test
lahf
jbe
adc
xor
and
push
push
dec
out
out
aam
lods
out
sub
cmc
mov
mov
mov
stos
into
test
arpl
movs
push
ret
pusha
mov
mov
rol
out
xor
jno
and
pop
push
mov
repnz
and
imul
or
nop
pop
and
jge
add
or
(bad)
outs
mov
lock
sbb
inc
dec
mov
xor
cld
enter
xor
icebp
mov
imul
jp
mov
push
jns
mov
xchg
cmp
jmp
jmp
sub
fcmovu
inc
loope
push
in
test
sub
and
loopne
and
sahf
xchg
adc
call
xor
es
nop
cmp
cmovo
add
sbb
sahf
imul
test
or
add
mov
cmp
cmp
mov
hlt
xchg
clc
xchg
(bad)
ror
dec
icebp
pop
push
push
mul
add
jae
mov
rcl
(bad)
loop
mov
retf
test
add
mov
sub
fucomp
in
cmps
sti
pop
push
cmp
test
cli
jb
pop
int3
push
imul
or
mov
jge
pop
push
ret
out
repz
int3
(bad)
push
imul
test
in
jg
lahf
mov
in
ds
in
mov
repz
mov
inc
sar
push
mov
pop
call
push
in
jmp
pushf
ud0
aas
in
xchg
mov
rol
push
or
or
cli
ret
lds
dec
xchg
call
jp
into
mov
push
rcr
jmp
dec
sub
sti
sahf
and
in
dec
push
push
cmp
pop
mov
call
jmp
sub
xor
mov
lock
xchg
ins
sti
das
cld
dec
out
cmps
(bad)
int
cli
mov
lds
dec
adc
or
das
mov
cmc
add
and
jl
sbb
xor
ror
push
jnp
pop
dec
pop
pop
jnp
lods
and
bound
cmp
out
cli
sbb
mov
fnstcw
popa
inc
push
outs
mov
ret
add
pop
bound
aaa
enter
imul
inc
ficomp
hlt
xchg
into
dec
push
je
test
shr
iret
in
inc
(bad)
push
je
pop
cdq
jnp
pop
pusha
jno
xlat
mov
xor
test
adc
cmp
lods
xchg
ins
pop
popa
(bad)
repz
jmp
clc
(bad)
push
or
mov
push
iret
xchg
ins
pop
imul
jns
das
pop
lock
xchg
cmp
fnsave
aad
adc
int3
stc
cs
jne
xchg
mov
gs
(bad)
mov
ret
sbb
mov
mov
mov
popf
or
dec
inc
in
adc
fist
and
xor
xlat
cmps
repz
mov
mov
in
(bad)
sub
xor
shl
pop
loopne
jmp
retf
pop
jae
jns
pop
cmp
inc
pop
mov
sub
mov
mov
mov
sbb
adc
xor
jge
pop
cld
in
pushf
jne
int3
inc
mov
fisttp
xchg
push
jne
call
mov
xor
or
sub
sbb
jecxz
jle
push
mov
fld
loope
enter
jecxz
inc
ret
adc
daa
mov
or
fist
jbe
(bad)
in
test
adc
mov
dec
repnz
xor
stos
je
push
and
jns
jecxz
leave
cli
mov
inc
add
xor
mov
pop
add
aam
push
or
push
xor
mov
ficom
jb
call
push
leave
ror
cmp
mov
jno
xlat
jno
(bad)
iret
push
push
loope
mov
add
jb
and
nop
shl
or
mov
arpl
xchg
mov
mov
(bad)
sub
push
pop
das
(bad)
cdq
jmp
ret
ror
jmp
mov
fdiv
(bad)
std
ret
jnp
aas
loop
adc
sahf
sub
ins
adc
xchg
cli
or
and
adc
cmps
data16
or
mov
pop
xchg
cld
or
adc
mov
fcmovb
js
call
aaa
mov
push
aas
and
xchg
adc
fnstsw
stos
inc
cmc
or
hlt
push
stos
mov
test
add
xchg
scas
dec
jb
ins
shl
fmul
pushf
or
test
scas
push
dec
pop
and
mov
int3
cmp
and
pop
mov
ds
sub
rcl
cmp
mov
dec
or
sbb
sahf
adc
aaa
shl
inc
ja
xchg
pop
fwait
(bad)
mov
shl
out
fwait
jp
std
jge
cmp
mov
in
mov
rcl
and
mov
rcl
imul
sbb
pusha
je
sub
and
clc
jnp
arpl
cmp
jnp
dec
sub
test
jp
sbb
and
fdivrp
mov
ficomp
je
xchg
mov
mov
lds
test
sub
cwde
callw
in
ret
lods
mov
(bad)
fld
jge
jg
sbb
dec
imul
sar
xlat
or
call
shl
mov
pop
pop
inc
mov
addr16
lods
and
xor
push
std
repz
pop
hlt
or
lods
cmps
and
inc
shl
add
mov
mov
data16
aas
dec
mov
jle
fdiv
inc
jae
or
enter
inc
in
jg
jb
jae
retf
mov
push
sub
push
pop
sbb
and
outs
retf
inc
inc
adc
fs
xchg
cmp
dec
inc
sbb
rep
hlt
(bad)
jp
gs
dec
sti
add
je
iret
jle
aas
fdiv
fisubr
ret
inc
je
aaa
and
pusha
icebp
(bad)
out
mov
xchg
sahf
bound
push
je
aaa
cwde
stos
pop
fisttp
or
xor
mov
cmp
sbb
pop
(bad)
jmp
fsubrp
movs
outs
bound
cmp
mov
imul
ins
xor
jg
int
repnz
jge
mov
jae
cmp
cmp
mov
int3
nop
scas
jne
add
push
les
ins
mov
scas
mov
fcom
cdq
(bad)
mov
js
das
pop
out
jge
dec
inc
add
xchg
sub
ja
out
aad
push
repnz
test
sti
jle
mov
out
sub
outs
and
lods
imul
mov
or
dec
pop
jb
sub
cmp
int3
out
xchg
dec
pop
stos
pop
mov
out
loop
dec
mov
jecxz
repz
imul
or
jb
jle
sbb
cdq
imul
mov
outs
lods
lock
mov
aas
and
lahf
pop
xchg
daa
lock
inc
(bad)
fisub
das
pushf
cmp
mov
jno
movsx
ficom
sbb
popf
jbe
mov
test
repz
jmp
mov
jbe
and
in
arpl
xchg
inc
xor
pop
mov
and
cmc
aas
sti
movs
pop
or
dec
mov
fnstcw
sub
add
cmc
or
sub
pop
jb
jg
nop
cld
(bad)
sbb
mov
pop
gs
out
cmps
and
cwde
jae
bound
dec
adc
bound
push
outs
and
and
cmc
push
push
rol
add
ja
push
data16
ret
test
shl
ins
test
jns
movs
adc
push
xchg
adc
add
fdivr
push
and
ror
mov
(bad)
mov
push
lock
fs
fwait
outs
(bad)
push
sbb
mov
inc
mov
dec
push
push
xchg
jecxz
mov
add
jmp
fs
and
mov
neg
stc
xor
aam
(bad)
jno
lahf
and
xchg
or
popa
sbb
std
mov
add
call
xor
sub
repnz
cmp
das
fxsave
daa
xchg
fbstp
imul
bound
cmp
leave
inc
fsub
and
aam
lds
xchg
cdq
jne
dec
fwait
jp
xchg
test
mov
adc
arpl
call
test
dec
jge
mov
std
shl
dec
cli
dec
adc
je
out
xchg
and
fisub
dec
jno
push
cmp
call
ins
out
lods
push
jp
dec
fcom
or
fucomp
call
push
lods
xchg
dec
adc
imul
or
leave
sub
mov
aaa
pop
loop
jge
cld
xor
xchg
cmp
dec
dec
mov
mov
inc
int
mov
lea
test
mov
xor
jmp
jp
outs
repz
cmps
cmp
cmp
in
sbb
and
fmul
aam
(bad)
dec
inc
fsub
scas
stc
clc
stos
fadd
aas
fisubr
push
mov
or
gs
in
(bad)
sub
movs
push
xchg
fistp
adc
push
jl
xchg
push
cmp
xor
leave
rcl
jnp
add
mov
(bad)
mov
mov
inc
pop
ror
mov
sub
out
stc
dec
mov
arpl
outs
jp
sar
xchg
movs
fs
(bad)
pop
mov
fs
test
xchg
inc
mov
pop
aam
(bad)
jecxz
clc
daa
das
dec
push
test
in
out
add
push
xchg
inc
mov
add
test
add
shl
hlt
or
add
pop
add
xchg
pusha
xchg
pushf
push
push
ror
into
or
add
inc
mov
mov
ins
mov
movs
je
adc
jnp
stos
ret
adc
dec
fisubr
movs
movs
mov
push
addr16
popa
fstp
dec
repz
sub
inc
dec
push
repnz
add
add
stos
dec
jae
aad
pusha
jbe
hlt
dec
bound
mov
xor
cmps
mov
inc
leave
lods
dec
push
(bad)
jmp
retf
int3
out
mov
shl
in
xor
adc
and
mov
mov
std
cld
jns
imul
dec
adc
or
cmp
xchg
leave
adc
leave
jl
rol
into
sub
cmp
pop
xchg
in
xchg
retf
sub
stos
xchg
mov
ins
xor
jnp
movs
dec
dec
lods
loop
xchg
jmp
clc
mov
(bad)
cld
xchg
loope
pop
sbb
mov
in
and
lds
fisttp
jne
repz
mov
out
adc
movs
and
or
jno
add
cmp
push
push
mov
aad
popa
jmp
mov
jo
ins
mov
cwde
jae
mov
lock
fcom
enter
sub
xor
and
mov
popf
mov
push
mov
adc
mov
sub
stos
pop
and
xchg
shr
fdivr
push
clc
inc
fwait
ret
loopne
imul
movs
push
pop
out
pop
cld
mov
repz
add
mov
aaa
pop
stc
pop
(bad)
call
mov
adc
(bad)
mov
push
pusha
sbb
retf
dec
mov
xor
sbb
add
jp
stc
sub
adc
push
xor
pushf
mov
data16
out
js
jmp
test
mov
movs
scas
in
clc
dec
adc
imul
adc
jecxz
aaa
jb
add
cmp
push
mov
je
mov
push
sbb
push
andnps
jb
pushf
xor
mov
into
add
rep
ins
or
loope
jmp
xchg
jb
nop
test
xchg
shl
shl
mov
retf
movs
int
retf
rcl
test
dec
sub
ret
in
mov
push
mov
jge
popa
sbb
push
mov
jno
rol
dec
or
daa
pop
call
mov
cwde
out
cmp
sbb
push
in
ss
jle
xchg
push
rol
arpl
popf
xor
and
sbb
push
xchg
movs
jl
aad
mov
cdq
pop
push
movs
jns
pop
mov
push
movsx
shr
dec
jbe
or
push
mov
cmp
dec
or
fdivr
hlt
push
retf
icebp
es
dec
(bad)
push
movs
add
or
in
stc
sbb
std
lahf
bound
(bad)
xor
pop
(bad)
jecxz
cmp
leave
cmp
fs
add
push
mov
or
mov
mov
push
sbb
aad
cmp
jno
and
and
adc
jbe
and
call
mov
xchg
sub
adc
ins
(bad)
in
scas
icebp
mov
bound
loope
cmp
cmp
rcl
imul
pop
jo
aas
xor
fcom
iret
mov
mov
push
adc
sub
aas
xchg
sahf
xor
imul
add
push
repz
cs
pop
sub
fild
aaa
rcl
mov
daa
add
xor
and
pushf
stos
xchg
xchg
movs
test
sub
push
outs
fs
outs
mov
aas
inc
pop
adc
dec
ss
cwde
sub
ins
cdq
mov
cmps
leave
aam
mov
xchg
loopne
inc
(bad)
js
daa
loope
cmps
pop
sbb
cld
ret
jno
dec
daa
shl
push
xchg
and
mov
les
adc
movs
dec
push
push
inc
mov
(bad)
icebp
repz
scas
push
ss
jl
pop
ret
test
pushf
jne
mov
push
dec
arpl
jecxz
ret
mov
aam
jbe
iret
(bad)
ss
popa
push
or
lods
icebp
mov
outs
mov
mov
inc
int
mov
cmovb
(bad)
lock
fwait
aaa
mov
push
es
out
aas
xor
imul
xchg
fwait
mov
dec
jmp
or
int
sbb
(bad)
jl
(bad)
leave
xchg
stos
shr
div
jle
pop
outs
push
pop
or
cli
test
sbb
push
imul
(bad)
ds
cmps
call
out
je
dec
sbb
pop
inc
lods
ins
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
push
add
add
aas
in
xchg
in
mov
mov
in
sahf
in
lods
in
nop
in
stos
in
lods
in
mov
mov
in
mov
mov
in
xchg
in
and
mov
add
add
pop
in
xchg
in
mov
mov
in
lahf
in
mov
mov
in
mov
mov
in
movs
in
xchg
mov
in
mov
mov
in
xchg
mov
in
movs
in
xchg
in
mov
mov
in
test
mov
push
add
add
pop
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
and
mov
mov
in
and
xchg
in
and
xchg
in
cmps
in
mov
add
mov
in
scas
in
sahf
in
and
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
and
scas
in
and
mov
mov
in
mov
mov
in
and
test
mov
in
mov
mov
push
push
add
add
mov
mov
in
mov
mov
in
mov
mov
in
lods
in
mov
mov
in
call
in
test
mov
in
mov
mov
in
xchg
in
mov
mov
in
call
in
mov
mov
in
xchg
in
mov
add
mov
in
popf
in
mov
mov
in
popf
in
and
stos
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
add
inc
in
lahf
in
stos
in
nop
in
mov
mov
in
and
test
mov
in
movs
in
mov
mov
in
call
in
test
mov
in
mov
add
mov
in
xchg
mov
in
mov
mov
in
and
scas
in
scas
in
mov
mov
in
movs
in
scas
in
cmps
in
(bad)
in
mov
mov
in
cmps
in
(bad)
in
xchg
in
xchg
in
mov
mov
in
mov
mov
in
mov
or
add
jne
mov
in
test
mov
in
mov
mov
in
cdq
in
xchg
in
mov
mov
in
cdq
in
mov
mov
in
stos
in
lods
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
push
or
add
jne
mov
in
test
mov
in
movs
in
mov
mov
in
test
mov
in
mov
mov
in
xchg
in
mov
mov
in
fwait
in
mov
mov
in
mov
mov
in
cmps
in
mov
mov
in
and
lods
in
test
mov
in
cmps
push
or
add
inc
in
xchg
in
xchg
in
xchg
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
call
in
(bad)
in
mov
mov
push
or
in
mov
mov
in
pushf
in
mov
mov
in
and
movs
in
xchg
in
and
call
in
mov
mov
in
and
xchg
mov
in
nop
in
lahf
in
xchg
in
movs
in
nop
in
and
lods
in
cmps
in
mov
mov
in
and
lods
push
push
add
add
mov
in
nop
in
mov
mov
in
mov
mov
in
and
mov
mov
in
cwde
in
mov
mov
in
mov
mov
in
mov
mov
add
push
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
test
mov
in
nop
in
mov
mov
in
mov
mov
in
mov
mov
in
lahf
push
adc
add
dec
in
xchg
mov
in
mov
mov
in
and
xchg
mov
in
lahf
in
xchg
in
test
mov
in
mov
mov
in
mov
mov
in
call
push
adc
add
cmp
mov
in
cmps
in
mov
mov
in
xchg
mov
in
movs
in
cmps
in
test
mov
in
mov
mov
in
mov
mov
push
adc
add
dec
in
cmps
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
movs
in
mov
mov
in
mov
mov
in
nop
in
mov
mov
push
adc
add
pop
in
lahf
in
test
mov
in
mov
mov
in
cdq
in
test
mov
in
(bad)
in
call
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
nop
in
cmps
in
lods
push
adc
add
push
in
cdq
in
mov
mov
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
fwait
in
(bad)
in
cwde
in
mov
mov
push
adc
in
mov
mov
in
xchg
in
lods
in
xchg
in
xchg
in
stos
in
sahf
in
xchg
in
mov
mov
in
mov
mov
in
xchg
in
fwait
in
xchg
in
test
mov
in
xchg
push
push
add
add
xchg
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
in
call
in
mov
mov
in
movs
in
mov
mov
in
popf
in
scas
in
xchg
in
test
mov
in
test
mov
in
xchg
in
mov
mov
in
mov
pop
add
add
mov
in
lods
in
and
mov
mov
in
pushf
in
test
mov
in
call
in
test
mov
in
pushf
in
mov
mov
in
test
mov
in
and
lods
in
mov
mov
in
popf
push
sbb
add
dec
in
movs
in
mov
mov
in
stos
in
mov
mov
in
popf
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
push
sbb
add
dec
in
mov
mov
in
mov
mov
in
mov
mov
in
movs
in
mov
mov
in
and
test
mov
in
mov
mov
in
mov
mov
push
sbb
add
jb
mov
in
popf
in
call
in
scas
in
mov
mov
in
call
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
in
xchg
mov
in
xchg
in
cdq
in
mov
mov
in
mov
mov
push
sbb
add
pop
in
and
and
xchg
in
movs
in
test
mov
in
lods
in
sahf
in
stos
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
test
mov
in
mov
mov
in
mov
mov
add
outs
in
mov
mov
in
mov
mov
in
mov
mov
in
popf
in
stos
in
call
in
lods
in
mov
mov
in
mov
mov
in
xchg
in
cmps
in
pushf
in
test
mov
in
mov
mov
in
xchg
push
sbb
in
mov
mov
in
test
mov
in
xchg
in
mov
mov
in
nop
in
xchg
mov
in
xchg
mov
in
xchg
in
test
mov
in
(bad)
in
mov
mov
in
cwde
in
add
add
add
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
nop
in
test
mov
in
mov
mov
in
mov
mov
in
stos
in
mov
add
mov
mov
in
mov
mov
in
stos
in
xchg
in
cmps
in
mov
mov
in
xchg
in
sahf
in
xchg
in
mov
mov
in
xchg
in
mov
mov
in
lahf
in
mov
mov
in
xchg
in
xchg
in
scas
in
cwde
in
call
in
test
add
mov
in
xchg
in
mov
mov
in
sahf
in
mov
mov
in
xchg
in
mov
mov
in
test
mov
in
mov
mov
in
cmps
in
pushf
in
mov
mov
in
mov
mov
in
xchg
in
mov
mov
in
mov
mov
add
push
in
xchg
in
xchg
in
mov
mov
in
popf
in
fwait
in
nop
in
scas
in
scas
in
mov
mov
in
popf
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
and
dec
add
adc
ss
in
and
mov
mov
fs
jp
sbb
mov
pop
mov
and
and
(bad)
hlt
push
hlt
jle
dec
mov
imul
jb
rcl
push
push
shl
push
es
cs
fwait
aam
idiv
push
inc
movs
arpl
and
fild
test
(bad)
mov
pop
rcr
sub
mov
and
loop
pushf
pusha
mov
ror
cmp
cmp
ret
std
xchg
jmp
retf
in
ds
enter
outs
dec
out
sub
test
cmp
sbb
ret
cld
mov
mov
pop
fcom
mov
add
test
mov
test
or
mov
in
lods
and
push
ds
in
dec
aaa
shr
test
cmp
ins
xor
jmp
repnz
scas
ja
mov
in
lods
push
and
js
jne
or
cmps
iret
xchg
inc
mov
dec
daa
sub
loop
pop
sub
adc
and
rcr
sbb
out
aaa
std
lds
imul
movs
xor
dec
add
ja
push
in
cdq
jmp
fstp
add
inc
cld
fs
sbb
hlt
int
xchg
leave
movs
test
cmp
pop
movs
dec
push
jle
push
mov
dec
jae
daa
sahf
and
ror
popf
gs
fs
xchg
bound
xchg
mov
hlt
out
mov
mov
mov
inc
dec
jmp
cmps
es
in
les
ror
jmp
repnz
ja
movs
or
inc
stos
or
push
pop
xchg
dec
mov
fldcw
push
xchg
pop
and
mov
xchg
imul
(bad)
sub
xchg
sub
movs
call
pop
mov
xor
popf
mov
sub
or
jnp
stc
(bad)
mov
jns
cs
mov
sar
push
cmps
dec
aad
mul
(bad)
neg
sbb
rsm
fdiv
push
jns
ins
and
aam
into
push
add
dec
mov
ds
cmp
inc
pop
leave
mov
jmp
add
jne
imul
push
bound
loop
sub
loope
and
jle
leave
stc
mov
mov
xchg
sar
in
push
test
jb
aaa
nop
int3
jns
popa
push
mov
icebp
pop
and
or
or
cmp
xor
cld
mov
rol
push
in
pop
loop
fild
int
(bad)
fild
daa
rol
adc
icebp
icebp
rcl
not
mov
push
dec
fwait
jae
aaa
daa
push
out
jae
fucomip
cwde
xchg
jmp
xor
push
xchg
pop
mov
stc
nop
mov
sbb
ficomp
cwde
addr16
shr
pop
mov
xchg
xchg
mov
or
add
jl
push
aam
arpl
pop
gs
ja
in
push
(bad)
add
loope
ja
mov
out
ins
out
popf
cmc
xchg
cmp
outs
dec
das
test
inc
push
mov
pop
jp
push
dec
jecxz
movs
xchg
push
pop
jns
cmp
lds
in
and
into
fisttp
rcl
leave
pushf
outs
loopne
pusha
sbb
adc
pop
mov
push
ror
sub
(bad)
xlat
in
inc
ins
adc
pop
jae
cli
push
retf
push
xor
jmp
jmp
push
sbb
cmc
stc
ds
cld
mov
aas
daa
sar
sub
add
in
cmp
xor
jne
inc
mov
sub
shl
pop
cmp
nop
sub
add
fcmove
xchg
movs
call
(bad)
or
mov
and
pop
shl
sbb
push
stos
sbb
ret
jb
loop
popf
sub
retf
cmp
add
loope
pop
mov
or
mov
xchg
jp
mov
and
cmp
mov
cwde
rcl
popa
or
lea
jne
xchg
dec
lods
shl
call
cs
test
jo
push
mov
mov
test
mov
aaa
jg
imul
dec
pop
aam
inc
xor
xor
cmp
hlt
cli
xchg
sbb
hlt
pop
dec
sar
sub
(bad)
cmp
jnp
ds
fdivr
ja
test
or
pop
mov
imul
test
mov
std
stos
xchg
leave
push
nop
ffree
add
lea
adc
fdivr
xchg
lods
mov
test
xor
sub
movs
or
mov
test
push
(bad)
aad
fcom
xchg
add
fld
dec
in
sbb
movs
dec
mov
cmps
repnz
pop
cli
or
popa
adc
out
fdiv
push
imul
mov
movs
out
add
mov
jne
dec
retf
sub
or
push
(bad)
xor
cmp
pushf
fisubr
enter
or
push
bound
xchg
sub
mov
rcr
mov
loope
cli
jmp
pushf
push
iret
cmps
sub
frstor
cmp
jge
repnz
jecxz
mov
arpl
xchg
push
dec
cdq
add
ficom
push
and
mov
push
mov
dec
cmps
jae
retf
push
dec
(bad)
jmp
call
inc
retf
cmp
sub
shl
mov
adc
das
jl
(bad)
loopne
dec
retf
out
lock
gs
outs
jns
mov
ror
jle
dec
sar
mov
cmc
in
jo
cmp
ret
loop
cmp
adc
std
fnsave
sar
pusha
sub
mov
loop
add
mov
(bad)
enter
rol
or
scas
mov
cwde
movs
stos
(bad)
leave
test
or
mov
aas
jo
push
aas
jg
jb
jb
cmp
jns
js
xchg
pop
in
pop
xor
sbb
pop
ror
dec
aas
stos
sub
repnz
sbb
mov
shr
xor
int
aaa
push
add
int3
sbb
add
sub
(bad)
(bad)
pusha
jl
push
cmc
jecxz
mov
dec
adc
mov
ss
dec
mov
add
stos
cmp
(bad)
mov
nop
ret
pop
and
cmp
enter
and
mov
and
push
movs
scas
mov
add
jp
fwait
add
enter
xchg
lock
mov
je
repz
imul
pop
push
xchg
xchg
inc
outs
stos
icebp
mov
scas
push
outs
clc
add
sar
(bad)
data16
loopne
mov
stos
jle
jbe
cmp
mov
push
sub
jae
and
fdivrp
cs
sbb
pushf
addr16
outs
xor
lock
jle
sbb
fsubr
arpl
jecxz
iret
adc
test
xchg
adc
(bad)
jmp
cwde
nop
lds
dec
add
hlt
ss
mov
(bad)
addr16
retf
int
pop
out
je
cli
icebp
or
cs
jae
bound
mov
dec
sbb
lock
cli
into
xor
arpl
mov
mov
push
push
pushf
pusha
std
lods
pop
sbb
or
jmp
icebp
in
mov
mov
jmp
lahf
out
dec
lods
call
fild
mov
add
mov
xor
push
xchg
cmc
xchg
push
fcomp
mul
scas
popf
retf
xor
ja
add
ret
jo
aad
jnp
rol
mov
push
xchg
ins
rol
mov
aas
sbb
sbb
add
mov
inc
aaa
cmp
(bad)
xchg
aam
jbe
int
cld
pop
(bad)
inc
jmp
mov
dec
ror
ror
jl
and
add
xor
mov
ss
mov
(bad)
fnsave
clc
inc
hlt
push
leave
sub
xor
mov
push
(bad)
cld
push
and
in
push
cld
jnp
jmp
jnp
mov
push
inc
inc
out
das
hlt
jo
jbe
xchg
jmp
ds
aas
idiv
loop
int3
pop
cmps
mov
push
pop
push
mov
gs
movs
lock
mov
jnp
lock
cmp
adc
jmp
inc
push
sub
mov
adc
in
sbb
imul
or
inc
dec
push
cli
in
jbe
jne
pop
cld
adc
sbb
pop
ret
mov
stc
mov
cmp
mov
out
dec
jno
sub
dec
jo
cmp
push
mov
inc
out
out
lock
add
sbb
es
and
shl
dec
jns
mov
cmps
xchg
jecxz
imul
xchg
out
pop
sti
push
add
(bad)
ret
ja
std
or
lds
fstp
and
bound
push
dec
xlat
pop
ins
add
loop
mov
mov
ja
lea
dec
shl
rol
add
jne
(bad)
mov
sub
adc
inc
gs
fisttp
outs
sub
push
ds
les
data16
add
popa
mov
pop
adc
dec
fmul
mov
(bad)
xor
adc
inc
jg
or
add
jae
jmp
mov
add
in
jae
mov
test
pusha
add
push
jmp
mov
outs
cs
test
inc
dec
into
mov
(bad)
(bad)
mov
mov
adc
dec
lahf
mov
inc
pop
pop
ret
mov
test
pop
pusha
shl
(bad)
mov
cmp
retf
retf
xchg
nop
cmps
pop
mov
imul
mov
and
addr16
imul
lods
fdiv
dec
inc
mov
mov
dec
add
pusha
stos
dec
jns
jae
imul
dec
pop
pushf
cmp
pop
jmp
inc
das
shl
cmp
rol
ins
repz
or
jecxz
pop
cmp
dec
pop
adc
pop
xor
xchg
sub
xchg
or
ret
adc
repnz
imul
mov
dec
ss
(bad)
cmp
mov
scas
mov
adc
xlat
out
retf
cmp
push
imul
push
sub
stc
pop
sbb
rcr
xchg
xor
ret
mov
mov
addr16
bound
enter
cmc
(bad)
mov
call
mov
lahf
ss
loope
jne
inc
js
movs
fisttp
sti
mov
sub
inc
test
pushf
jnp
or
fst
inc
add
add
aas
sub
inc
cmp
push
xchg
int
sub
bound
test
jo
cdq
pop
xchg
and
jmp
xchg
adc
sbb
fisub
sahf
out
imul
daa
push
lahf
popf
aad
sub
push
push
ret
in
push
mov
and
inc
out
test
xlat
and
sub
or
sbb
icebp
mov
sbb
stc
mov
test
xchg
test
cmp
mov
dec
jl
xchg
ins
xor
fst
pop
ror
mov
aam
jne
and
stc
mov
ins
mov
cmp
fild
daa
add
retf
fmul
repz
jb
xor
sub
pop
and
dec
adc
stc
pop
fsub
mov
pushf
outs
xchg
xchg
mov
pop
lds
repz
movs
or
or
les
push
push
jecxz
(bad)
fisttp
push
ja
repnz
aas
mov
sbb
xor
in
rol
jecxz
inc
mov
stc
xchg
and
push
repz
aam
fdiv
fsubr
js
cs
aas
jae
xor
and
jne
pop
adc
and
cmp
mov
(bad)
neg
pop
out
pop
push
call
xchg
jmp
je
in
call
test
dec
cmp
sub
lods
xchg
and
lahf
lea
in
sub
std
or
das
call
hlt
and
shl
addr16
sbb
loop
cli
repz
cmp
mov
(bad)
into
(bad)
jmp
stos
push
ins
scas
xor
lock
inc
push
adc
dec
and
jns
arpl
jg
cmp
in
or
stc
and
fcmovu
adc
mov
xchg
pop
or
push
retf
mov
and
cmps
sti
xchg
lea
mov
adc
jmp
mov
mov
push
dec
(bad)
hlt
xor
pop
mov
adc
jno
inc
gs
sbb
scas
test
dec
(bad)
jae
sbb
ins
jnp
movs
and
imul
daa
data16
sub
repz
lods
adc
leave
xor
and
rol
push
dec
in
shl
icebp
xor
sub
aam
sbb
call
(bad)
ds
add
nop
and
pop
arpl
mov
dec
aam
addr16
mov
xor
add
inc
lods
retf
cmp
sbb
pop
push
xchg
retf
sbb
aam
inc
and
pop
icebp
dec
movs
cmp
ss
xchg
xchg
in
or
cmp
sbb
int
dec
mov
pop
cmp
pop
adc
dec
aas
mov
enter
pop
test
cli
or
jmp
dec
push
cmps
pop
dec
push
mov
loop
sbb
push
inc
sbb
adc
shl
or
add
xchg
mov
dec
adc
mov
stos
and
dec
(bad)
arpl
(bad)
mov
scas
repnz
xchg
retf
imul
frstor
bound
add
mov
push
xor
pop
pop
mov
(bad)
test
dec
out
sub
mov
or
push
cmp
pusha
popa
pusha
fwait
into
jno
push
cmp
adc
sub
inc
daa
push
cmp
pop
mov
push
aam
retf
mov
fcom
jecxz
neg
repnz
sbb
stos
fisub
sub
int3
xor
fcomp
dec
jle
inc
xor
in
fnstsw
clc
mov
mov
ficom
cdq
mov
std
xchg
ffreep
stos
(bad)
loopne
sub
xchg
pop
popf
pop
pusha
ret
dec
shrd
cmp
stos
jne
mov
jg
mov
xchg
sub
push
mov
loop
jno
xor
mov
cmc
xor
and
or
in
sar
sub
mov
xor
adc
rol
adc
outs
push
add
cwde
(bad)
mov
inc
xor
adc
push
(bad)
and
xchg
or
call
mov
loop
cs
mov
pop
add
fcom
jp
push
push
ficom
lahf
sbb
aam
hlt
xor
mov
mov
mov
push
xor
mov
mov
rcr
sahf
cwde
cmp
xor
sahf
mov
xchg
lock
cmp
pusha
ds
(bad)
popf
(bad)
repnz
gs
adc
fcomp
call
jo
cmp
dec
movs
pop
nop
add
add
fild
popa
sub
in
inc
inc
pop
je
fcomp
add
and
les
or
push
fninit
pop
or
sub
shr
gs
or
or
dec
inc
mov
dec
in
retf
ret
jnp
or
ds
inc
or
inc
enter
je
shl
jg
test
inc
sbb
push
fdiv
add
imul
jb
or
enter
and
fldenv
push
mov
stos
jg
ins
xor
retf
jle
sub
sahf
retf
pusha
jmp
pop
and
pop
cld
(bad)
neg
mov
int
out
ret
sbb
repnz
test
push
nop
js
and
hlt
test
rol
sar
xchg
jmp
fdiv
xor
dec
push
sub
and
push
mov
out
mov
or
jle
xchg
iret
xchg
arpl
fcomp
(bad)
jle
jae
cmps
add
movzx
xor
das
repnz
jl
popa
inc
outs
add
jbe
xchg
or
stc
sub
pop
pop
mov
jle
(bad)
inc
ins
out
scas
aad
add
push
int3
ret
outs
mov
xor
hlt
add
test
sbb
(bad)
nop
pop
dec
(bad)
loope
sub
cmp
lods
xlat
fldenv
jge
push
inc
in
sar
es
(bad)
dec
push
(bad)
(bad)
push
push
into
in
lock
xchg
xchg
stos
call
int3
fsub
dec
ret
xlat
test
neg
popa
out
jmp
test
(bad)
ins
sbb
push
mov
xchg
cmps
sub
jnp
adc
test
or
mov
test
lahf
iret
or
(bad)
lods
mov
cmp
gs
xchg
xchg
ja
(bad)
test
xchg
outs
sahf
sbb
sub
cmp
cli
cmovnp
scas
xchg
xchg
pop
sbb
mov
mov
in
jle
inc
scas
test
xor
cld
cmp
out
inc
inc
sub
xchg
cmps
dec
inc
fst
popa
xor
sub
data16
cmp
lahf
stc
add
pop
icebp
xchg
mov
shl
mov
aam
mov
sahf
sub
sub
mov
push
mov
add
fistp
rcl
std
adc
js
dec
in
push
mov
sbb
push
adc
jo
and
adc
push
inc
aad
xchg
cmovl
add
inc
movs
imul
xchg
pop
mov
inc
lock
ins
fwait
int3
cmps
jmp
dec
cmp
xchg
pop
aaa
lea
in
dec
mov
cmp
test
fs
adc
test
jmp
das
or
jae
and
test
and
jmp
push
test
mov
stc
add
pusha
hlt
retf
inc
iret
test
mov
inc
cmp
leave
sub
cmp
shl
inc
shl
or
mov
aam
int
rcl
push
aaa
fld
rcl
(bad)
loop
and
xchg
das
sti
pushf
arpl
and
pop
inc
pop
dec
nop
and
test
pop
xchg
aaa
pop
fild
outs
aad
imul
cmp
cmc
in
imul
xor
iret
add
pop
or
push
mov
jp
lods
cli
mov
sub
pusha
push
out
jne
sahf
lahf
xor
dec
xchg
fdiv
mov
dec
int
call
or
push
xor
sub
dec
cmp
cmps
cmp
pop
dec
imul
les
stc
mov
push
xchg
mov
and
inc
fdivr
stc
je
push
scas
and
pop
imul
sbb
dec
out
fs
pop
call
pop
imul
xor
pop
pop
or
mov
pop
push
cmps
fnstcw
or
cmps
push
jmp
pop
adc
add
iret
mov
pusha
dec
cmc
jg
pushf
bound
push
pop
and
test
fwait
mov
cmp
repnz
outs
adc
mov
cmp
mov
ss
and
mov
inc
inc
add
iret
arpl
add
and
inc
add
sub
imul
inc
lock
add
je
loope
fs
retf
add
add
(bad)
in
jnp
shl
shl
fbstp
clc
fcomp
outs
jb
push
cmps
daa
xchg
mov
dec
movs
neg
jl
or
jbe
adc
pop
dec
lahf
inc
ins
test
jg
ds
xchg
mov
aas
or
lods
mov
mov
imul
test
sub
push
cmc
loop
rol
jne
cs
cs
xchg
xor
xchg
mov
push
mov
xor
push
mov
adc
into
jno
mov
push
jmp
xchg
push
pop
outs
loope
cli
cdq
xor
rcl
lahf
push
dec
cmp
jb
imul
out
scas
clc
shl
push
fwait
jecxz
or
mov
imul
sub
call
push
jecxz
dec
popf
jbe
sub
cmc
or
nop
cmp
mov
aaa
push
mov
jmp
fwait
loope
icebp
cmps
push
adc
popf
cmp
sahf
pop
mov
in
stc
inc
xchg
and
sbb
mov
std
dec
nop
dec
int
scas
push
icebp
push
mov
aaa
cmc
jg
stos
cmp
pop
loope
mov
retf
js
test
jnp
inc
xchg
inc
jg
mov
xor
pop
inc
int
jne
inc
xlat
cmp
pop
or
ret
dec
(bad)
and
(bad)
daa
mov
call
push
adc
mov
add
mov
cmp
mov
pusha
in
mov
cld
xor
xchg
xor
mov
pop
xor
shl
adc
bound
xor
stc
inc
imul
mov
mov
add
ret
test
sbb
mov
or
(bad)
push
and
ret
pop
imul
and
into
sub
sbb
shl
outs
lods
xchg
push
hlt
or
mov
xchg
in
pop
fs
outs
xor
and
sub
inc
xor
pop
mov
mov
jp
fisubr
dec
xchg
jle
fild
xchg
jnp
retf
push
push
mov
jns
fwait
jb
xchg
xchg
rol
mov
stc
stos
dec
shl
sub
push
jle
sbb
loop
pop
mov
and
data16
test
sti
call
mov
mov
aad
cmp
dec
retf
js
sub
inc
into
jle
mov
fimul
lds
push
jecxz
add
cmp
fcomp
out
daa
fnstcw
repnz
mov
ds
call
test
pop
stc
and
lea
hlt
inc
mov
popf
mov
jae
mov
jge
pop
cmp
mov
xor
scas
stc
int3
sti
pop
dec
rcr
jb
sub
mov
adc
dec
pop
push
cmp
sub
cs
out
mov
cli
mov
rcr
xor
stos
push
push
or
inc
loopne
cmp
xlat
adc
mov
out
jecxz
cli
ins
scas
clc
(bad)
std
sbb
mov
into
out
mov
mov
sub
or
pop
inc
jae
mov
push
dec
outs
push
(bad)
add
retf
rcr
push
outs
out
sbb
dec
ins
sbb
sub
jmp
lds
and
out
xchg
jno
xchg
movs
push
sbb
add
xor
nop
xchg
jecxz
ins
popf
lds
inc
jo
jge
xor
sub
inc
adc
sub
(bad)
rcl
lods
call
cmp
fs
mov
and
lods
cmp
cmp
aaa
add
ins
sub
pop
jno
sub
dec
pop
out
push
mov
dec
cs
push
sub
mov
xor
jmp
inc
pop
sub
lods
cmp
pop
not
mov
out
pop
adc
add
stos
or
imul
(bad)
loop
xchg
sbb
mov
or
mov
mov
mov
push
stc
xrelease
fistp
pop
mov
inc
pop
adc
rcr
pusha
mov
(bad)
cdq
movs
cmp
out
mov
shr
aaa
mov
outs
fstp
shl
push
(bad)
movs
pop
mov
inc
mov
jb
or
cmp
scas
rcr
inc
sar
sbb
jg
sub
sar
mov
retf
pop
jae
mov
mov
clc
adc
addr16
mov
cmp
mov
clc
adc
out
fistp
fild
mov
in
jp
inc
je
retf
fsubr
xchg
inc
jae
xor
inc
test
pop
push
pusha
cmp
mov
int3
nop
mov
cmp
test
daa
sti
(bad)
out
out
xor
lds
cmp
dec
into
repz
and
add
adc
scas
movs
jecxz
cmp
jae
lsl
pop
mov
mov
push
cdq
cld
jo
movs
jmp
clc
(bad)
(bad)
ss
movs
and
imul
jmp
arpl
mov
jmp
test
aad
pushf
mov
push
pop
jno
mov
xor
out
fild
dec
loop
loopne
fstp
push
push
mov
mov
jmp
inc
cdq
ss
popf
cs
shl
mov
(bad)
adc
stos
sbb
xor
and
retf
int3
fadd
cmps
cmp
push
stos
add
jo
and
jno
loopne
mov
add
nop
inc
movs
mov
call
sub
lods
xchg
mov
inc
push
pop
dec
int
cmp
imul
add
and
sub
rcl
into
loope
mov
xor
dec
cmp
xchg
jecxz
jl
dec
inc
cdq
lds
(bad)
and
arpl
inc
cmps
push
or
outs
into
clc
mov
dec
jns
iret
pop
icebp
sub
(bad)
jl
daa
adc
push
mov
or
pop
cmp
push
push
ja
into
das
icebp
loope
test
lods
or
test
leave
call
ficom
(bad)
fcom
daa
jnp
dec
and
and
push
dec
cmc
je
out
xchg
mov
sub
jge
jno
cmp
xchg
rcl
daa
fwait
xchg
inc
jecxz
cmp
push
xor
lock
jecxz
sub
push
pusha
pop
cmp
iret
pop
and
outs
jmp
ret
mov
cli
ret
in
aaa
popa
ds
cmp
sbb
mov
repnz
mov
adc
iret
pop
imul
cmps
pop
retf
add
js
jge
cmp
add
mov
clc
push
fldenv
mov
inc
pushf
mov
out
mov
jae
adc
mov
xchg
xchg
fwait
xchg
xchg
cmps
repz
std
pop
adc
scas
fdiv
xchg
cmps
mov
jmp
add
loop
push
std
push
and
outs
loop
fadd
pusha
(bad)
xlat
xor
cmps
test
inc
je
or
inc
cdq
inc
lods
rcl
js
es
daa
stc
dec
push
xchg
lods
in
(bad)
out
sub
mov
ret
test
rcr
cmps
fiadd
shl
rol
jecxz
inc
out
je
das
popf
enter
add
dec
inc
rol
rcr
scas
add
test
ret
lock
mov
shl
jp
int
enter
jns
das
mov
inc
cmps
cmps
mov
mov
jo
into
fldenv
mov
lods
jnp
xchg
add
imul
(bad)
fisttp
pushf
sub
int
mov
mov
outs
xor
mov
xchg
test
and
push
mov
jmp
add
stc
adc
xchg
sub
out
jl
mov
aaa
inc
cmp
pop
push
mov
inc
push
fld
ins
loopne
mov
jg
sub
mov
dec
aas
xor
xor
mov
mov
adc
aam
dec
add
pop
mov
iret
mov
add
jmp
mov
inc
mov
sub
mov
cld
cmp
not
adc
jmp
or
add
mov
in
bound
push
adc
sub
rcl
push
mov
ror
adc
and
pusha
xchg
push
sbb
xchg
dec
or
jb
mov
repz
repnz
jmp
xor
les
fmul
mov
imul
ins
sub
aas
aas
and
xchg
das
outs
cmp
aam
fsub
mov
loope
mov
pop
ud0
jmp
mov
aas
dec
jge
lods
repnz
ss
jmp
dec
loop
or
icebp
xchg
sub
pop
xchg
xor
mov
xor
scas
sar
sub
fwait
mov
out
mov
stos
mov
scas
jb
ins
mov
push
cmps
push
sbb
add
or
mov
lock
dec
in
inc
test
dec
mov
inc
jne
ss
aas
cmps
loope
(bad)
call
lods
arpl
cmp
sbb
or
or
fcomi
pop
outs
cmp
stos
retf
mov
shl
sbb
in
fs
repnz
pop
jns
sbb
cli
and
loope
fld
adc
lahf
jae
xchg
mov
mov
int3
aam
xor
dec
dec
inc
call
aad
sbb
test
nop
mov
xor
jmp
xchg
dec
xor
add
leave
fisubr
iret
adc
mov
sahf
arpl
in
sub
push
and
inc
push
dec
mov
xor
scas
std
(bad)
jp
push
mov
addr16
pop
mov
cmp
jae
jge
adc
in
jns
neg
inc
or
inc
sub
pop
mov
jp
movs
hlt
jle
enter
mov
cdq
or
push
std
jbe
shl
retf
shr
sub
sub
ror
retf
into
lods
fistp
sti
sar
test
xor
mov
cmp
icebp
push
xor
ret
mov
imul
loopne
mov
inc
shr
xor
xchg
xchg
pop
test
idiv
sub
add
add
and
adc
imul
outs
cmps
mov
fstp
sbb
jns
push
push
mov
int
sbb
repnz
scas
in
fwait
gs
jecxz
(bad)
dec
scas
scas
or
ss
push
call
rcr
js
lea
mov
std
js
(bad)
ins
shl
movs
cmp
xchg
ins
out
cmp
xchg
popa
inc
lods
jae
scas
lods
addr16
mov
repnz
js
sbb
add
fstp
ins
je
ins
inc
pop
test
(bad)
je
pop
out
xlat
xchg
mul
adc
jp
add
mov
mov
jo
stos
mov
push
arpl
out
jg
sar
mov
lods
imul
xlat
loope
xor
and
xor
push
dec
es
and
jg
aam
dec
mov
aad
ds
sbb
pop
fisub
mov
ja
jp
loop
mov
retf
lea
mov
fadd
das
xor
in
inc
sub
ss
call
scas
movs
inc
pop
scas
sbb
add
bnd
xor
mov
pop
fsub
sbb
movs
fistp
or
(bad)
inc
fdivr
imul
dec
sub
mov
das
mov
(bad)
mov
jns
xor
fcmovbe
ss
or
or
add
cmps
push
sbb
jno
std
inc
leave
jg
movs
jns
inc
push
mov
dec
and
mov
inc
cmp
rsm
adc
pop
jne
mov
repz
ins
sbb
and
in
push
adc
add
push
lock
lock
lahf
jb
cmp
jle
(bad)
jae
and
stos
test
mov
jno
mov
ins
sbb
(bad)
in
jbe
out
inc
mov
in
inc
mov
push
push
inc
imul
test
sbb
mov
mov
xchg
cwde
std
das
cli
pop
icebp
iret
push
pop
mov
cmp
dec
(bad)
fdiv
mov
fstp
into
xor
xchg
adc
leave
in
call
add
cwde
lahf
movs
sti
jl
(bad)
mov
xchg
push
(bad)
int3
jmp
inc
ja
jge
xor
pop
or
add
cld
rcl
and
outs
dec
jnp
or
loop
call
dec
dec
rol
sub
sar
sub
xor
ror
dec
iret
cld
adc
nop
fadd
ret
pusha
xor
xor
xchg
jmp
adc
mov
add
and
xor
mov
rcr
fwait
jne
ja
pop
ins
ss
cdq
or
mov
mov
pushf
pop
or
xchg
sbb
ss
out
inc
call
mov
sbb
cdq
fxch
mov
imul
outs
arpl
pop
aas
test
mov
cmps
icebp
mov
or
clc
lods
or
add
loopne
pop
xor
pop
idiv
dec
fst
push
div
imul
cdq
out
mov
push
adc
out
mov
xchg
in
xlat
cmp
jmp
sub
adc
mov
inc
ja
pop
je
scas
cld
push
xor
xlat
adc
retf
(bad)
ins
je
push
xlat
sub
outs
xor
test
je
jbe
adc
or
dec
add
sub
adc
in
daa
mov
ror
inc
pop
pop
and
mov
xchg
lods
xchg
call
mov
xchg
adc
fsubr
pop
pop
fld
fs
loop
sti
imul
pop
sub
cmc
les
std
or
or
inc
jg
(bad)
cmp
jno
jmp
xor
(bad)
pop
fwait
xor
or
or
ins
and
push
aas
retf
adc
jle
add
mov
add
iret
jecxz
js
sbb
sub
in
in
push
cdq
cmp
mov
out
push
aam
cmps
movs
imul
sahf
icebp
add
cli
cmp
push
(bad)
add
cmp
or
aam
inc
or
cdq
mov
mov
cli
push
scas
sub
adc
and
cmp
repnz
or
or
push
pop
inc
imul
dec
mov
mov
xchg
and
xor
fsub
ret
jg
in
repz
sub
cmp
mov
jo
aad
pop
push
popf
adc
push
mov
stos
or
mov
xchg
pop
es
or
inc
and
mov
call
cmp
loopne
sti
mov
mov
dec
int3
and
pop
int
pop
mov
xchg
cli
sub
push
mov
lea
mov
aaa
mov
xor
aaa
dec
lahf
repz
jl
jnp
pop
sti
imul
sub
or
mov
jo
cmc
dec
ret
es
or
push
mov
cwde
jns
add
mov
jnp
jno
in
jecxz
adc
ret
sub
mov
sti
ror
ret
ds
shr
ja
jns
loopne
gs
adc
enter
movs
mov
push
and
inc
pop
loop
dec
pushw
adc
sti
or
rcl
enter
call
pop
inc
fwait
test
popf
adc
loopne
add
in
mov
mov
dec
and
mov
mov
mov
or
pop
adc
sbb
and
imul
test
pop
sub
inc
pop
call
push
xchg
ins
div
mov
and
inc
or
sahf
es
repz
sar
mov
push
popa
add
stc
xchg
xor
in
jno
jne
(bad)
sbb
xchg
xchg
inc
or
es
adc
xor
test
lods
or
xchg
and
arpl
sub
xor
xor
fdivr
out
sbb
sbb
cmps
and
sti
lds
xchg
out
addr16
mov
mov
retf
bound
push
and
mov
loopne
jo
sti
xchg
stc
ror
add
lods
stos
test
fild
pop
popf
jmp
cmp
mov
mov
out
and
mov
pop
mov
mov
lods
sbb
inc
inc
jl
xor
movs
mov
test
fist
cdq
sahf
jmp
push
mov
adc
jae
dec
pop
adc
(bad)
out
and
sub
mov
mov
pop
sti
adc
ficom
sub
inc
sub
arpl
ret
into
or
daa
xchg
cld
inc
ret
aad
xchg
push
nop
mov
push
xor
jo
hlt
xchg
retf
das
jns
inc
in
fisubr
mov
push
adc
sub
lds
les
sbb
retf
call
ss
addr16
sti
pop
stc
mov
ja
cld
sbb
mov
test
fisttp
out
scas
push
ror
(bad)
imul
inc
and
inc
sbb
cli
cdq
inc
add
sbb
test
stc
cmp
sbb
mov
imul
pop
cmc
rol
inc
inc
repz
and
mov
fwait
imul
cld
(bad)
sti
(bad)
cmps
cmp
adc
ins
mov
or
ins
adc
movs
bound
inc
je
fisub
push
mov
push
fnstsw
pop
push
and
dec
jbe
cmps
xchg
imul
jns
mov
xchg
mov
retf
(bad)
inc
push
mov
adc
mov
mov
xchg
cmp
leave
mov
imul
sbb
mov
inc
(bad)
stc
add
jno
js
cmps
repnz
fdiv
and
je
pusha
inc
imul
push
mov
inc
in
scas
mov
jmp
loope
or
out
ins
adc
sbb
(bad)
dec
sti
xchg
fist
inc
dec
das
mov
and
popf
fild
pop
dec
(bad)
sbb
mov
mov
mov
lahf
mov
inc
dec
daa
loop
jmp
fisttp
pusha
sub
xchg
movs
xchg
loope
mov
cmp
mov
ins
cwde
rol
rcr
sub
gs
aas
pushf
xchg
push
or
pop
loope
or
inc
test
and
test
or
dec
cmp
dec
pop
mov
repnz
scas
mov
test
fistp
push
dec
out
movs
dec
sbb
mov
sar
add
ins
jno
sbb
fs
jmp
shl
es
pop
sbb
push
adc
stc
mov
xor
cmp
pop
pop
pop
mov
push
dec
push
xor
mov
loop
mov
pop
gs
push
and
test
jmp
idiv
cli
or
mov
shr
fimul
push
jae
cld
fdiv
pushf
scas
sub
loope
inc
pop
cli
in
push
aad
lahf
jnp
sahf
xchg
leave
movups
dec
mov
lods
and
gs
xor
inc
sbb
mov
xlat
jl
pop
mov
cmp
test
mov
or
ficom
pop
push
xlat
mov
movs
mov
cmp
jo
jbe
push
scas
fist
push
jbe
(bad)
push
cli
inc
ret
movs
in
pop
push
movs
pop
in
cdq
stc
fmul
aas
adc
mov
push
jmp
mov
dec
(bad)
mov
sbb
push
jle
dec
and
mov
pop
cmps
pop
fadd
xchg
maxps
inc
jno
mov
sbb
pop
and
mov
cmc
(bad)
idiv
cmp
or
mov
cmp
mov
xchg
or
or
xchg
movs
clc
jge
(bad)
cmp
or
add
cmps
xchg
push
mov
pop
out
lods
fild
mov
cmp
dec
dec
lahf
push
cld
push
mov
test
rol
retf
xor
or
fmul
push
imul
jmp
xchg
add
movs
fnsave
fild
(bad)
fistp
call
sbb
test
dec
sti
dec
inc
mov
movs
jb
test
mov
cmp
nop
mov
mov
ja
jnp
cwde
push
xchg
ins
sbb
pop
mov
fist
or
hlt
xor
lahf
pop
dec
and
div
xchg
xor
sbb
int3
out
inc
jp
sub
clc
jle
mov
xchg
and
ret
cmp
sub
popa
cmp
cli
aam
jne
dec
add
in
fstp
sub
sbb
inc
in
dec
inc
les
data16
xor
inc
(bad)
jnp
and
pop
mov
or
mov
(bad)
loop
stos
jg
nop
and
in
mov
in
or
push
fisttp
ins
in
and
outs
arpl
cmp
push
or
xor
aas
aad
rcr
pop
cmp
ffreep
fimul
movs
mov
inc
mov
sbb
xor
scas
add
imul
cmps
and
nop
fstp
xchg
mov
mov
pop
aaa
out
pop
mov
lock
dec
sahf
and
pop
cmp
xor
fmul
jp
xchg
cld
xor
lods
(bad)
jne
xchg
and
inc
aaa
and
inc
outs
pop
adc
popa
dec
push
fstp
out
jno
sub
stc
mov
out
sti
add
cmp
pushf
adc
imul
push
les
cwde
cmp
(bad)
jne
pop
dec
lods
adc
push
mov
test
dec
jne
loope
clc
pushf
mov
test
jecxz
retf
data16
test
ret
aad
jge
fld
jge
xor
stos
mov
js
mov
ror
sbb
(bad)
stos
push
dec
cmp
hlt
stos
lods
je
mov
cli
jge
adc
sub
xor
mov
addr16
cdq
xchg
push
adc
xchg
dec
cli
fist
dec
imul
jae
into
movs
pop
cmps
jbe
int3
dec
sbb
cmps
(bad)
call
lea
and
mov
jp
stos
fistp
data16
jl
mov
jmp
shr
retf
loope
push
mov
sub
and
xor
pusha
xor
or
inc
or
adc
bound
add
fiadd
aam
and
imul
sub
(bad)
rcl
push
sbb
ds
cmp
fistp
dec
adc
rol
and
ror
pop
in
push
lock
in
out
mov
call
mov
imul
(bad)
dec
call
sbb
lea
stos
and
dec
mov
dec
xchg
sar
push
in
xlat
std
adc
jle
imul
pop
adc
cld
cmp
sbb
lods
out
sti
dec
cmc
mov
push
sub
inc
and
pop
into
add
shr
sahf
ins
icebp
pop
lods
popf
pop
mov
cmps
push
lea
mov
nop
ins
ret
push
push
dec
call
inc
icebp
sbb
sub
lds
(bad)
cli
sbb
and
aas
adc
cmps
mov
mov
mov
jmp
adc
retf
addr16
leave
je
retf
lahf
test
pop
(bad)
in
data16
sub
and
imul
xor
cdq
jmp
push
jbe
adc
mov
aaa
(bad)
jb
nop
xchg
adc
outs
fild
and
ins
ret
leave
lods
pop
ja
into
jae
mov
mov
cmc
dec
fcmovb
inc
bound
mov
xchg
in
stc
sub
ret
or
xor
bound
test
and
and
xor
xor
inc
cmp
popa
push
jle
les
jge
enter
jae
(bad)
mov
shl
xchg
jge
xchg
jg
repz
sbb
push
mov
mov
sub
inc
jbe
xchg
aad
mov
pusha
dec
push
daa
stc
bound
fld
out
mov
retf
mov
mov
mov
xlat
je
imul
inc
inc
jnp
loop
shl
mov
add
push
jmp
ja
fistp
(bad)
mov
(bad)
sbb
int
and
sti
adc
adc
sar
xchg
dec
xor
add
pushaw
mov
cmps
inc
ja
popa
xchg
and
or
ja
sbb
mov
xchg
cmc
add
and
xchg
aad
pop
jl
push
adc
rcl
icebp
cmp
dec
aaa
das
pop
hlt
jno
adc
inc
mov
retf
cmp
arpl
sbb
fimul
add
lock
xor
adc
mov
mov
out
dec
mov
jbe
stos
ret
sar
das
fwait
lahf
rcr
pop
std
test
pop
jmp
mov
lahf
xchg
cld
dec
pusha
les
mov
jl
jecxz
hlt
xchg
and
and
dec
add
scas
adc
fcomp
adc
adc
movs
jecxz
adc
loope
scas
dec
inc
and
aas
cli
mov
imul
out
adc
in
call
sti
je
fld
add
jns
pusha
mov
fsub
jg
das
and
push
and
jb
mov
mov
les
ins
push
fnsave
mov
cmp
aam
fisub
xchg
mov
sbb
cmp
mov
cmps
pop
push
pop
test
repnz
lods
mov
add
xchg
hlt
ret
xor
daa
push
sbb
mov
mov
mov
cmp
or
add
cli
imul
popa
inc
mov
lahf
mov
mov
mov
add
jnp
mov
je
imul
and
retf
push
ins
xchg
rcl
add
push
or
or
pop
mov
icebp
jo
xor
jo
out
push
out
push
(bad)
inc
mov
mov
pop
mov
xlat
push
ror
das
xor
sub
adc
(bad)
sbb
mov
pusha
popa
iret
dec
test
(bad)
push
sbb
pop
pop
pop
repz
mov
xor
setl
or
lea
outs
repnz
dec
jae
mov
xchg
jle
pop
add
lods
cmp
cli
cmp
sub
outs
ins
bound
daa
mov
xchg
into
mov
cmp
test
mov
inc
sbb
pop
call
shl
or
add
test
(bad)
xor
in
es
jmp
mov
shl
je
movs
aam
dec
jecxz
pop
xor
test
jp
mov
aam
mov
sub
and
test
xchg
das
mov
mov
dec
lods
jmp
mov
pushf
int
stos
shl
gs
cmps
mov
mov
jg
outs
arpl
cmps
xchg
test
sbb
mov
adc
cmp
jb
lahf
imul
scas
push
dec
sti
adc
pop
fidiv
sbb
bound
pusha
or
in
fbstp
inc
sub
jle
shl
mov
push
cmp
dec
test
or
fs
dec
cdq
pusha
and
icebp
inc
lods
movs
(bad)
push
mov
add
xchg
sbb
out
out
in
jne
xor
adc
cwde
fistp
xchg
mov
inc
ror
and
pop
repnz
cmps
imul
iret
ds
inc
lds
pop
push
lock
hlt
sub
sbb
xchg
jb
pushf
div
aam
and
lock
data16
or
stc
add
and
aaa
jbe
cdq
lods
mov
mov
fwait
mov
hlt
rcl
into
jl
push
movs
push
repnz
mov
dec
js
in
enter
or
adc
mov
cwde
imul
adc
das
mov
inc
shr
push
dec
(bad)
pop
push
inc
movs
xor
int
jne
pop
xchg
pop
jmp
imul
js
cmp
add
repz
mov
mov
sbb
cmp
push
pop
inc
stos
nop
mov
imul
ins
add
and
jno
or
xor
dec
fisub
xchg
mov
out
pusha
add
xchg
ficom
cmp
call
or
int
(bad)
clc
adc
aam
mov
xchg
enter
in
mov
aas
and
rol
fbstp
cmps
sub
shl
xor
jmp
inc
mov
test
mov
(bad)
mov
pop
fist
out
mov
out
jae
cmps
inc
push
mov
xchg
(bad)
jmp
loop
inc
stos
lea
lea
mov
cmp
mov
cwde
jg
xor
pop
cmps
lock
rcr
lods
adc
pop
lods
jbe
sbb
sbb
or
xchg
mov
pop
cmp
js
(bad)
adc
xchg
xchg
sub
int3
jno
inc
test
rol
xchg
jo
sbb
or
iret
xchg
sti
leave
cmp
dec
stos
sbb
repnz
mov
dec
add
and
dec
cmp
jge
stc
mov
loopne
movs
mov
mov
repz
and
idiv
jne
aas
xor
cmp
cmp
xchg
nop
dec
sub
stos
call
pushf
or
sbb
pop
add
jae
sub
add
push
cmp
movs
push
test
mov
cmp
imul
mov
mov
cdq
sbb
in
lock
sbb
inc
pop
mov
and
std
icebp
les
idiv
imul
xor
jge
pushf
sub
(bad)
push
sub
jnp
mov
shr
jb
outs
test
add
adc
(bad)
iret
jno
inc
sub
add
scas
pop
adc
push
pop
jp
and
fcmove
jge
jg
movs
xchg
mov
mov
hlt
hlt
mov
stos
arpl
jae
aam
scas
push
add
jns
xchg
cs
movs
sbb
(bad)
ficomp
dec
inc
bswap
test
es
pop
inc
into
int3
lea
in
jns
pop
mul
pop
out
out
sbb
inc
sbb
xchg
and
shl
jns
(bad)
sbb
std
js
xor
add
mov
retf
nop
(bad)
ror
pop
jns
mov
dec
cmp
or
js
test
daa
js
mov
inc
and
sub
fmulp
jl
out
cmc
popa
xlat
test
pusha
ins
mov
push
fcmovnb
int
mov
(bad)
adc
pop
mov
cmp
repz
inc
scas
xor
sar
inc
xchg
popa
popa
aam
push
xlat
pop
mov
shl
mov
jge
push
pushf
(bad)
fcomp
dec
scas
aas
mov
jmp
xchg
rol
in
cmps
push
dec
mov
push
push
(bad)
fdivr
sub
mov
ins
xchg
xlat
mov
test
xchg
rcr
aam
sti
jmp
fwait
xchg
or
aad
daa
in
push
cmps
or
jo
mov
push
test
xor
sbb
stos
daa
add
hlt
dec
sub
mov
es
pushf
(bad)
test
or
neg
pop
(bad)
xor
mov
mov
and
sub
dec
sub
mov
dec
sub
movs
ds
shl
xor
jb
xor
jae
ins
dec
or
out
(bad)
inc
and
mov
lahf
mov
hlt
stc
lds
(bad)
jmp
sbb
fild
add
pushw
jbe
adc
ret
repnz
cmp
mov
leave
push
fmul
add
loopne
jmp
sbb
pop
dec
sub
sbb
(bad)
pop
mov
mov
scas
pop
movs
jecxz
in
lock
push
call
in
retf
or
jbe
mov
dec
pop
popa
jno
ret
sub
lods
ins
adc
cmp
test
and
push
pop
sbb
retf
int
dec
into
retf
cs
into
mov
dec
jg
in
(bad)
or
(bad)
icebp
lods
ret
repz
movs
jbe
push
bound
out
test
lahf
fild
mov
push
ret
test
pop
xchg
mov
xor
into
dec
lods
popf
imul
inc
repz
jg
ds
jge
mov
icebp
adc
ds
lods
ss
push
dec
or
pop
xor
cwde
push
mov
push
minps
push
inc
mov
mov
adc
sahf
cmp
sti
and
pop
int3
sbb
out
pop
fstp
(bad)
stc
cs
xchg
jle
adc
out
push
mov
cmps
push
test
cli
rol
sub
and
sub
cwde
in
mov
sti
syscall
(bad)
cmp
jbe
xlat
xor
adc
push
iret
sbb
xor
cdq
rcr
fld
xchg
in
sahf
xchg
pop
mov
stos
add
mov
fistp
mov
aad
cmp
cld
pop
inc
inc
fdiv
sbb
add
mov
and
xchg
mov
pop
(bad)
outs
lds
pop
add
scas
cmc
jnp
xchg
rol
sbb
mov
call
fcom
dec
xchg
mov
sub
movs
jl
cmc
mov
inc
mov
into
add
mov
xchg
jg
push
and
cld
cmp
sub
push
cmp
jmp
data16
pop
call
jg
fist
icebp
mov
xor
pop
mov
outs
xor
mov
repz
cwde
cmp
mov
add
leave
mov
add
les
dec
call
into
push
or
mov
nop
stos
sbb
in
push
dec
mov
cmp
lods
jno
mov
mul
push
sbb
xchg
sub
ins
(bad)
in
mov
mov
cmc
push
xlat
sar
cmp
sti
in
fldcw
and
cmc
shl
push
(bad)
ret
dec
jg
mov
stos
dec
into
pop
fwait
cwde
cmc
pop
movs
dec
or
imul
je
(bad)
kmovw
inc
push
loopne
enter
push
mov
mov
call
add
sbb
mov
mov
ds
or
pop
call
cmps
jns
rol
mov
pushf
jl
lock
adc
inc
fidivr
mov
data16
and
(bad)
mov
movs
sbb
retf
push
dec
call
arpl
ficomp
(bad)
pop
les
mov
ret
sub
cmp
pop
dec
movs
scas
scas
es
inc
adc
fst
xchg
pop
xchg
push
or
adc
(bad)
or
push
addr16
push
scas
jno
and
imul
push
xchg
sti
and
jbe
cs
add
lods
in
mov
cwde
xor
mov
cdq
add
jmp
inc
cmc
inc
mov
outs
popf
xlat
mov
in
sbb
jne
sbb
sub
xchg
hlt
add
ja
sbb
push
adc
cmp
(bad)
retf
in
mov
jb
xor
and
mov
das
push
inc
dec
cmp
mov
xlat
hlt
and
adc
inc
out
std
cmp
sahf
leave
cmp
(bad)
pop
lock
inc
outs
or
jns
or
clc
dec
out
std
push
sbb
jnp
ror
retf
add
push
jns
xor
xchg
inc
xor
jge
popa
pop
nop
push
inc
xlat
nop
sub
imul
into
pop
mov
shl
push
mov
test
cli
dec
mov
mov
lock
adc
pop
ins
and
les
xchg
iret
push
mov
inc
pop
mov
mov
mov
jle
adc
push
sbb
call
jmp
sbb
icebp
cwde
enter
retf
enter
sbb
out
and
sbb
sbb
int3
sbb
and
or
sub
cmp
jns
push
mov
ins
stos
fwait
loop
out
add
xchg
idiv
pusha
adc
cmp
sub
push
nop
(bad)
lock
ret
push
ins
jmp
in
mov
inc
or
jp
call
jg
and
int
or
out
fidiv
adc
pop
pop
adc
imul
sub
pusha
xchg
adc
stc
lods
cmp
aaa
loop
rol
push
lahf
add
scas
aam
dec
jmp
pop
jno
popf
adc
(bad)
pop
sub
dec
sbb
repnz
push
shl
std
mov
add
push
das
int
jns
pushf
(bad)
lds
add
pop
(bad)
add
retf
mov
mov
fldenv
dec
pop
shr
jp
ins
jle
inc
(bad)
lods
jnp
cmp
xchg
xlat
adc
es
sub
cmp
imul
sti
xlat
add
mov
jmp
cmc
pop
mov
jle
gs
ds
add
pop
cld
lods
push
and
in
or
cmp
mov
sbb
inc
sbb
popa
cdq
fcmovnbe
movs
or
idiv
ficomp
loop
jl
int
bound
sbb
pop
pop
push
mov
mov
inc
mov
repz
pop
cmp
add
pushf
xor
jae
mov
popa
je
xchg
cmp
imul
jns
rol
push
inc
ins
xor
test
xlat
xchg
push
stos
mov
sbb
mov
outs
aam
sbb
push
pop
leave
lahf
cmp
cmp
pushw
hlt
push
fcomi
mov
sahf
mov
lock
cmc
pop
lods
sub
and
jns
repnz
out
das
rol
(bad)
xor
cmp
mov
call
sub
push
gs
sbb
jae
mov
adc
and
pop
or
dec
test
out
nop
cwde
dec
jmp
jbe
pop
dec
jne
cs
inc
cmc
mov
imul
shl
or
xchg
push
aaa
add
pop
lods
xor
mov
int3
outs
loope
sub
inc
hlt
ss
stos
mov
mov
mov
pop
or
jle
jne
mov
sub
add
inc
adc
mov
pop
daa
push
sbb
xor
ss
(bad)
addr16
and
lahf
cmp
mov
mov
cmp
(bad)
xlat
lods
in
xchg
xor
inc
cmp
push
bound
adc
mov
push
xlat
rcl
xchg
push
add
jb
mov
fucomip
jno
xor
shr
adc
add
cmp
imul
mov
lahf
xor
rcr
dec
outs
cmps
sbb
pop
sub
push
or
shr
jae
mov
jbe
push
push
pop
cmp
shl
das
std
outs
sub
adc
imul
jb
outs
(bad)
jmp
arpl
fcomp
shl
jae
shl
adc
mov
and
push
sbb
adc
mov
mov
out
packsswb
repz
add
sti
leave
adc
fcomp
xchg
loopne
daa
mov
mov
mov
jge
dec
mov
adc
cmps
xor
ss
mov
test
inc
call
fst
call
push
push
inc
ret
lds
nop
call
aaa
loope
int3
int3
lahf
xchg
imul
jo
adc
test
cmp
dec
int3
shr
aas
leave
sbb
outs
fcom
fcomp
and
add
pop
push
mov
jle
pop
daa
adc
mov
adc
stos
call
jno
ror
addr16
je
inc
enter
shl
fwait
sbb
(bad)
sar
push
push
adc
popf
and
mov
jge
scas
adc
lock
xor
inc
add
mov
das
les
sbb
adc
(bad)
mov
xchg
pop
pop
int3
stc
test
add
xrelease
and
cmp
(bad)
dec
sbb
sbb
pop
xor
pop
ins
jns
retf
push
jl
xor
cld
cs
cli
mov
arpl
inc
or
(bad)
jmp
adc
xor
stos
jbe
inc
icebp
mov
in
adc
fs
xchg
repz
lock
cld
cmps
in
(bad)
sti
fcmovnbe
add
fwait
jmp
sub
dec
cmps
ds
xchg
adc
cli
push
idiv
fcom
shr
jno
pop
std
adc
mov
mov
aad
pop
jecxz
test
repnz
xchg
mov
repnz
not
cld
into
pop
ds
jbe
test
pop
pop
add
popa
sub
lea
inc
sbb
fild
and
dec
inc
aas
xor
cmp
and
mov
and
dec
jae
loop
adc
addr16
push
jg
xor
adc
add
aad
pop
xor
adc
imul
(bad)
pop
sub
fist
or
pop
lods
jle
and
icebp
push
pop
shl
dec
dec
or
pop
out
inc
std
mov
lods
jle
pop
adc
lds
jb
pop
and
jo
inc
sbb
arpl
mov
xchg
repnz
movs
mov
pop
lods
test
sub
in
dec
das
mov
int3
jo
pop
and
popf
adc
jno
not
inc
adc
fidivr
or
imul
int3
out
(bad)
cmp
cmps
lock
iret
loop
pop
dec
ins
mov
ins
popa
add
movs
inc
test
lock
mov
xor
in
inc
mov
jp
xchg
mov
pcmpeqd
dec
into
popa
dec
jae
rcl
mov
retf
gs
push
sub
push
inc
leave
mov
icebp
lahf
ins
or
or
inc
jno
or
sbb
sbb
sub
ja
and
pop
outs
push
test
and
mov
into
int3
out
cwde
mov
xor
push
mov
lock
inc
in
mov
adc
inc
adc
xchg
call
cdq
dec
pop
cs
mov
cmp
es
retf
xchg
in
(bad)
jmp
mov
icebp
lahf
dec
push
idiv
fwait
cld
js
das
cmp
and
repnz
inc
inc
mov
(bad)
cli
mov
push
loope
js
outs
mov
aad
bound
sub
sbb
dec
xlat
cld
loope
inc
sahf
add
iret
add
fisubr
lahf
cmp
inc
mov
retf
jno
pop
cmp
sub
mov
pop
push
ja
jnp
(bad)
aad
xchg
dec
ret
(bad)
into
xlat
mov
xchg
(bad)
cmp
dec
cmps
cmps
pop
sub
fs
dec
and
or
sbb
inc
ins
repz
in
cmps
inc
test
ficom
pop
jo
dec
out
push
ficomp
cmp
fst
adc
std
test
fmul
push
adc
test
cdq
cli
cmp
or
shr
jb
cmp
ficom
pop
mov
mov
pop
hlt
fwait
loopne
and
inc
fnsave
dec
jo
test
jb
mov
inc
fcomp
xchg
retf
sti
in
jo
imul
in
shl
xor
inc
js
or
add
iret
push
int
dec
ds
sbb
sub
pop
in
inc
mov
aam
sub
cwde
sub
pop
pop
pop
outs
dec
into
mov
icebp
push
(bad)
sbb
(bad)
xchg
add
sub
inc
mov
ret
add
jl
sbb
mov
sub
push
cmp
jns
dec
std
(bad)
ficomp
mov
xor
in
bswap
jno
aas
jb
mov
rcl
xor
push
add
mov
cmps
dec
mov
sub
and
xchg
mov
push
or
data16
jo
(bad)
in
adc
sbb
std
fild
jmp
cmps
jbe
sub
xchg
adc
test
(bad)
je
or
sti
cmp
or
ret
(bad)
fbstp
cmp
jne
adc
and
dec
out
loopne
and
add
popa
mov
sub
(bad)
push
leave
jae
pop
call
pusha
and
test
jbe
dec
push
mov
pushf
dec
push
js
test
xchg
dec
push
pop
pop
cmp
clc
dec
push
mov
pop
lods
cs
loop
nop
sbb
xor
daa
pop
sub
fcomp
or
(bad)
pop
pop
pop
stos
stc
or
lods
leave
pop
cmp
and
daa
scas
add
retf
mov
dec
push
outs
mov
jb
fst
sbb
sub
ror
push
bsf
pop
cmp
loopne
mov
mov
mul
aaa
jo
in
int
in
outs
sbb
outs
pop
push
div
(bad)
bound
or
in
xor
lock
jns
mov
xchg
xor
mov
fwait
(bad)
aas
sbb
pusha
jae
push
lods
bound
mov
push
repnz
daa
add
jge
jns
push
sub
add
daa
into
jns
out
lods
scas
push
push
aas
push
pop
xchg
stos
pop
mov
cwde
adc
xchg
jle
pop
adc
out
out
push
push
fnsave
ret
inc
add
imul
cmp
in
jmp
push
inc
or
jmp
scas
lock
dec
push
sub
push
push
sub
imul
dec
pop
inc
(bad)
cmp
sbb
sbb
inc
outs
aam
fbld
inc
or
jb
test
ja
jmp
inc
mov
setg
aas
cs
ret
push
(bad)
ss
mov
inc
out
add
mov
jb
xor
xchg
sbb
mov
adc
mov
jns
mov
imul
push
sbb
pop
inc
mov
and
xor
cmps
mov
adc
dec
jb
gs
mov
mov
pop
div
mov
scas
sbb
sub
adc
inc
out
xchg
dec
and
cld
(bad)
das
rcr
push
fxch
adc
sub
fld
cld
sahf
push
mov
stos
retf
aaa
call
xor
add
movs
xor
daa
xor
inc
cmp
adc
ja
xor
push
jmp
inc
jne
stc
in
stc
gs
jo
in
movs
nop
data16
repz
movs
inc
sbb
stos
dec
xor
jmp
dec
mov
addr16
ror
pushf
jne
(bad)
push
sbb
ins
popa
(bad)
cmps
pop
js
push
cmp
add
push
push
fild
aaa
test
int3
xor
xchg
outs
ja
mov
cli
clc
pop
sbb
and
aad
ds
iret
mov
add
mov
or
fistp
imul
ins
mov
mov
in
push
pusha
xchg
add
shl
fcom
(bad)
and
add
and
sub
popa
or
sub
popf
pop
jmp
dec
les
jmp
add
dec
(bad)
iret
push
pop
mov
jae
sbb
sbb
aas
repz
and
pusha
daa
aam
push
cmps
mov
js
sbb
jns
test
jecxz
(bad)
iret
int
xor
push
jl
inc
in
arpl
add
mov
xchg
mov
out
dec
iret
neg
jmp
dec
dec
jl
push
inc
push
mov
(bad)
into
sti
pop
xor
or
dec
jecxz
push
movups
push
cwde
or
jmp
or
inc
dec
xchg
mov
sbb
test
mov
jns
and
cmp
jne
inc
or
add
out
sahf
push
(bad)
rol
xlat
cmp
imul
(bad)
jb
mov
sahf
push
push
cwde
int
popf
mov
ss
pop
xor
ins
push
xchg
xchg
scas
and
and
ret
mov
adc
nop
pushf
fwait
mov
mov
xor
sti
jmp
pop
adc
mov
cwde
sub
int
shl
mov
or
in
mov
je
push
js
pop
mov
xchg
pop
stos
(bad)
cmp
shl
pop
pop
stc
movs
adc
js
push
add
xchg
pusha
add
(bad)
push
pop
(bad)
adc
fmul
pop
xchg
add
scas
fild
lods
xchg
lods
mov
popa
push
(bad)
or
push
xor
test
mov
jb
js
nop
call
add
hlt
inc
cmp
(bad)
xlat
pop
ins
adc
mov
mov
xlat
pop
aas
mov
sub
add
push
or
sbb
pop
cdq
lahf
das
ins
setae
cmc
scas
jge
and
ret
cmp
mov
lea
mov
inc
xchg
pop
xchg
shr
data16
adc
mov
inc
test
or
lds
mov
and
inc
cdq
xlat
mov
add
mov
arpl
dec
mov
sub
out
pop
mov
test
aam
mov
pushf
mov
rol
add
test
mov
sahf
out
in
scas
jp
jle
mov
and
test
pop
movs
jge
call
movs
fidivr
data16
xor
or
sbb
popf
pop
stos
scas
data16
cld
add
dec
fild
dec
aaa
adc
xchg
loope
ins
jmp
into
aad
push
mov
sti
ficom
mov
jno
ror
pop
mov
fwait
push
outs
stos
jnp
or
mov
pop
mov
add
pop
push
add
stc
push
nop
jnp
inc
mov
fcom
daa
retf
fild
mov
xchg
out
ins
and
pop
sub
jbe
pop
push
sbb
dec
mov
fisttp
rcl
mov
fidiv
movs
sub
sbb
mov
add
repnz
test
stos
push
mov
test
imul
mov
sub
xor
jp
movs
into
xchg
sub
rol
pop
pop
test
dec
loopne
jl
add
in
jbe
je
dec
sub
jg
adc
jl
cs
inc
out
mov
cmps
or
jmp
mov
mov
retf
xchg
pushf
jle
ja
sbb
xchg
inc
push
and
sbb
and
out
les
or
jno
fldcw
test
icebp
lahf
and
shr
pop
cli
pusha
or
mov
out
mov
xor
or
(bad)
lock
mov
rcl
xor
in
jnp
cli
mov
fld
push
jecxz
inc
sbb
push
xor
test
fisubr
popa
les
gs
cmp
ficom
fdiv
sti
jmp
or
pop
or
repz
push
xor
add
push
and
ds
test
jl
mov
jo
add
cdq
stos
lods
cmp
int
int
xchg
pop
push
adc
sbb
ror
pop
sbb
add
hlt
jp
icebp
add
out
and
pop
jmp
or
cmp
and
mov
outs
into
mov
jmp
retf
pop
inc
enter
jmp
dec
mov
inc
cli
cmps
je
dec
iret
(bad)
pop
aam
pushw
mov
jb
rcr
mov
std
push
sub
test
xchg
fld
xchg
fcom
xor
or
and
cs
mov
dec
dec
jge
ja
idiv
or
push
shl
push
xor
les
dec
popf
inc
cmp
das
xor
xor
fnstenv
and
push
fcom
sub
ror
fild
into
fst
sbb
cmp
aaa
jae
jg
xlat
push
mov
pop
mov
shl
dec
div
and
data16
add
sbb
dec
sar
aam
imul
inc
push
xor
lahf
lods
or
mov
mov
dec
jae
aaa
mov
fsubr
mov
jmp
mov
xchg
enter
clc
xchg
icebp
or
adc
popa
xor
add
call
inc
dec
xor
cmps
xor
mov
in
mov
ja
in
pusha
mov
push
ret
lds
pop
inc
loopne
repnz
cmp
cmps
sub
out
rcl
xchg
imul
loopne
les
(bad)
neg
rcr
jbe
add
pop
jge
push
not
inc
cmp
cmp
into
imul
pushf
mov
in
jg
dec
xchg
fld
fild
xchg
jae
mov
jae
in
xor
pop
jmp
inc
push
outs
pop
sub
(bad)
jno
cmps
mov
pushf
gs
(bad)
pop
lahf
cmc
iret
ins
das
jb
xor
aas
movs
jg
cmp
cmp
in
jbe
mov
(bad)
jp
out
cmps
mov
mov
xchg
and
push
mov
push
fcomi
inc
out
fwait
and
jg
stos
or
push
jne
xor
cli
sub
and
inc
mov
pop
push
in
sub
xchg
push
pop
retf
nop
inc
stos
and
cmp
jge
dec
jnp
mov
push
iret
into
and
int3
pushf
jge
fisubr
arpl
sbb
xor
rcl
arpl
ss
lea
mov
mov
jp
xchg
aaa
jae
es
xor
fisttp
sar
mov
stos
inc
popa
sahf
xor
sbb
xchg
inc
mov
add
push
jmp
xchg
clc
jl
lods
adc
dec
mov
add
xor
ss
js
lock
add
push
jl
jne
ins
mov
mov
fist
repnz
xchg
retf
cdq
cmps
jl
cmp
loopne
xchg
xor
cld
jmp
stos
dec
in
call
int
add
push
dec
xor
and
ds
push
es
test
push
xchg
jno
mov
(bad)
aam
xor
fwait
cwde
fist
les
out
jns
ins
ror
arpl
movs
xchg
daa
push
cmps
and
xchg
ficomp
dec
cmp
out
idiv
out
adc
cmc
ins
enter
xor
mov
jno
loope
shl
fmul
sub
adc
mov
push
mov
rol
outs
not
loop
cli
jno
fcmovnb
push
into
hlt
adc
popf
cmp
gs
mov
js
out
and
mov
jo
test
sti
shl
inc
jo
push
dec
inc
nop/reserved
sbb
scas
shr
call
inc
movs
call
jne
mov
dec
sub
ss
jne
sahf
jne
dec
scas
cmp
fs
std
mov
xor
test
jg
(bad)
xchg
into
xchg
jb
loope
push
fld
adc
ret
mov
lahf
push
dec
aam
out
add
ret
and
scas
add
mov
(bad)
aas
sub
imul
ja
sbb
dec
lock
int3
in
jg
sahf
(bad)
repz
leave
or
pop
popf
pop
call
xor
sbb
and
cmc
inc
xchg
jle
jmp
jb
ret
dec
je
(bad)
lahf
jne
test
movs
mul
icebp
gs
daa
cmp
dec
or
fucomp
inc
add
fbstp
cs
or
int
sbb
cmc
imul
dec
add
ja
add
push
sbb
xchg
movs
xor
and
mov
and
xor
jmp
push
into
movs
dec
dec
jmp
daa
mov
ror
jl
inc
popa
addr16
jbe
pop
xchg
bnd
or
hlt
cli
(bad)
loop
call
pop
imul
push
out
mov
pop
std
mov
jmp
pop
and
jo
mov
retf
push
arpl
xor
pushf
adc
push
(bad)
rol
or
push
xchg
(bad)
pop
mov
mov
sub
push
mov
push
rcr
shl
push
cmp
jmp
add
shl
push
nop
mov
sub
and
push
xchg
pop
shl
mov
daa
mov
pushf
lods
mov
cmp
mov
ja
(bad)
cmc
dec
ret
or
sahf
stc
push
jo
into
pushf
inc
mov
add
add
fidiv
lock
stc
rcr
hlt
jbe
mov
les
stc
cld
in
loopne
sbb
and
mov
jnp
sbb
add
mov
fs
repz
(bad)
and
push
dec
jecxz
inc
inc
cmp
dec
pusha
sub
xchg
dec
push
sbb
(bad)
mov
xor
(bad)
shl
outs
test
popa
adc
and
gs
adc
movs
addr16
aad
add
sti
idiv
scas
xor
push
xchg
das
jnp
ins
repz
mov
clc
daa
(bad)
xchg
fidiv
or
adc
mov
pop
or
jmp
adc
pop
lahf
int
push
int
xor
or
mov
hlt
xlat
ret
or
jne
rcr
dec
int3
prefetch
das
(bad)
xlat
in
add
in
(bad)
jge
fwait
sbb
add
and
rcr
jmp
lods
sbb
cmp
in
xchg
imul
test
xor
cld
out
sbb
sahf
fadd
dec
adc
loop
jge
lahf
xchg
or
inc
jge
xchg
push
pop
jnp
jl
xor
out
sahf
dec
inc
mov
repnz
bound
outs
pop
(bad)
(bad)
jnp
stc
pusha
(bad)
sbb
mov
popf
daa
loopne
fdivr
xchg
dec
cmps
or
sub
pop
sub
pop
cmp
aam
xor
adc
pusha
loop
sub
jmp
inc
adc
ficomp
mov
jle
int3
bound
xchg
xchg
leave
ins
loope
xlat
sbb
push
std
sub
or
or
int
(bad)
or
dec
das
mov
add
arpl
loopne
and
js
test
or
aad
and
pop
aam
pop
push
fmul
sbb
cmp
dec
jo
sti
ror
pop
addr16
cmp
je
enter
cs
xchg
jne
or
ins
daa
das
jb
xchg
mov
ret
aas
int3
dec
adc
jge
fidiv
lods
mov
adc
adc
and
ss
(bad)
hlt
or
xor
loop
add
aaa
movs
jl
push
jns
sahf
push
pop
sub
(bad)
adc
ds
jb
jno
(bad)
xor
jb
call
or
shl
retf
sbb
mov
cmps
or
arpl
xlat
mov
mov
jmp
pop
push
push
sbb
push
mov
mov
jle
jp
fucomp
and
dec
into
sub
in
addr16
aas
sub
and
repz
movs
or
mov
in
mov
cmp
test
sub
ins
scas
icebp
shl
aas
mov
jmp
out
pop
loope
and
out
inc
repnz
nop
fs
test
or
or
adc
sahf
push
sub
cld
push
add
cmp
pop
push
xor
mov
outs
or
daa
imul
or
sub
mov
fidivr
stos
sub
inc
(bad)
fmul
jo
adc
out
test
add
ficom
dec
(bad)
xchg
jmp
das
out
pop
imul
xchg
jecxz
aad
in
pop
sbb
ficom
ret
jns
and
fs
jmp
sbb
mov
popf
std
inc
lea
loopne
(bad)
push
dec
stos
mov
cmp
sahf
gs
aad
leave
pop
imul
mov
dec
sub
gs
stos
jbe
dec
or
popa
lds
push
sub
ror
mov
push
mov
enter
lods
out
adc
cdq
sbb
sub
dec
test
or
stos
mov
movs
dec
and
fptan
jmp
out
pop
jbe
pop
ror
sbb
leave
mov
inc
mov
inc
inc
popa
fld
xor
cli
pop
mov
fmul
retf
lahf
push
movs
aaa
inc
xchg
xchg
mov
fidivr
cmp
jne
jmp
mov
xlat
ins
leave
ds
sahf
fild
movs
dec
xchg
cmp
call
imul
(bad)
mov
mov
cmps
cs
push
mov
sbb
movs
mov
push
xor
je
imul
xchg
sar
and
in
dec
test
xchg
dec
mov
jmp
and
fsubp
hlt
addr16
xchg
fld
aaa
jle
lods
pop
add
pop
je
or
call
clc
call
push
xor
dec
(bad)
ins
mov
mov
rol
in
iret
fimul
hlt
adc
ret
out
fist
xchg
loope
movs
dec
mul
mov
test
cdq
xor
mov
in
mov
call
mov
ror
pop
xchg
sub
and
fstp
fadd
pop
jb
je
(bad)
movs
sub
int
das
cmps
(bad)
sbb
ror
xchg
add
pushf
mov
push
mov
shl
jns
(bad)
sub
cmp
fmul
inc
inc
sbb
or
or
sub
movs
mov
out
lods
repz
mov
inc
xchg
pop
movs
dec
loopne
push
rcr
or
xchg
xor
pop
mov
fcom
mov
adc
xor
jno
xor
outs
stos
sbb
dec
mov
jae
dec
add
outs
je
sbb
fs
push
xchg
gs
and
push
test
lahf
sbb
dec
add
aam
cmps
ror
xor
daa
and
adc
pop
dec
stos
call
mov
jb
push
(bad)
cmp
mov
popf
daa
cdq
fld
and
pop
dec
mov
hlt
mov
fnstsw
dec
stos
jp
loop
aas
cwde
lock
xchg
and
cmp
sub
jb
dec
(bad)
push
ret
xchg
shl
int
push
sahf
test
xchg
sbb
and
icebp
xor
mov
dec
pushf
sbb
sub
ficomp
rol
stc
add
fs
inc
shl
test
popa
pop
add
call
sbb
pop
cmp
and
dec
dec
xor
and
add
int3
pop
andps
or
mov
ret
mov
das
xchg
movs
jp
add
inc
fidiv
call
ret
es
sub
aaa
jne
outs
push
mov
imul
xchg
mov
adc
xor
jecxz
fscale
cdq
hlt
in
sahf
stos
shl
les
inc
inc
mov
icebp
lods
or
pop
inc
ror
repz
adc
sahf
inc
out
pop
and
cmp
repz
add
lock
xor
rol
inc
shr
scas
pop
xor
dec
imul
jno
push
clc
jp
pop
popf
push
aad
dec
test
xchg
adc
(bad)
fwait
push
ret
pop
pop
neg
mov
test
adc
fnstcw
dec
cmp
dec
out
outs
and
fdivr
fisttp
xchg
movs
rcl
xor
jnp
sbb
repnz
movs
fbstp
xchg
xchg
sub
push
sub
cmp
not
cmp
dec
mov
call
in
xchg
(bad)
pop
inc
das
add
and
pop
out
shr
leave
loop
or
xchg
loop
xor
dec
call
push
cmp
not
jl
icebp
adc
inc
ficomp
mov
mov
(bad)
(bad)
div
jecxz
cmp
xor
jae
leave
in
gs
push
mov
jae
imul
inc
loope
cmp
cmp
out
ret
sar
jb
inc
and
call
out
call
sbb
jo
push
mov
in
xor
cmp
hlt
cli
shr
dec
jo
aam
xchg
ins
test
push
gs
dec
lods
mov
clc
and
loopne
call
pop
pushf
jne
and
bsr
lock
lods
xchg
pop
pop
cli
shl
aad
inc
mov
jb
jmp
sub
inc
bound
pusha
movs
inc
ss
xchg
pushf
mov
pop
xor
test
movs
xor
ins
mov
or
cmp
lahf
jno
jae
jno
je
pusha
jl
pop
pop
fldcw
mov
cdq
mov
in
xchg
sub
loopne
retf
xchg
imul
aam
call
adc
lds
ja
lds
ss
pushf
outs
sbb
aaa
addr16
inc
xlat
outs
ret
ins
mov
jp
fiadd
int3
popf
pop
dec
mov
es
xchg
inc
aad
sub
std
push
stos
pop
inc
and
mov
mov
xor
fs
in
popa
inc
sub
pop
pushf
sbb
xor
int3
mov
aas
shl
dec
ja
push
pusha
stos
add
jo
pusha
xchg
sub
mov
out
cmp
dec
jo
out
scas
cs
xor
add
pop
pop
fwait
dec
popf
dec
sub
add
fisttp
cmp
enter
jae
stc
shl
xlat
jmp
mov
add
sub
js
xchg
inc
aaa
xchg
pop
jge
jne
stos
loopne
xlat
push
cmps
stos
test
jb
inc
clc
mov
mov
pop
pusha
sub
(bad)
js
jle
mov
pop
shl
mov
xchg
or
out
js
jnp
jnp
mov
clc
je
aam
rol
les
jns
jg
scas
aaa
cmp
stos
xor
(bad)
imul
ror
inc
mov
push
in
jnp
nop
sub
xchg
es
loop
and
sbb
cmp
add
dec
or
or
push
fld
pop
loopne
and
jle
lods
packuswb
cld
out
or
int3
push
xor
iret
dec
fnsave
mov
enter
in
(bad)
out
push
enter
jns
jg
popf
pop
es
xchg
mov
bound
fist
jmp
fsub
inc
(bad)
jae
cmp
stos
add
add
imul
ss
cmp
leave
dec
ja
(bad)
repnz
push
mov
ins
mov
addr16
add
jle
jmp
and
sbb
repnz
inc
test
or
fcomp
ror
cmp
push
pop
(bad)
jae
lahf
adc
push
bnd
ja
adc
mov
aam
nop
fsubr
stos
in
shl
mov
push
stos
push
out
dec
pop
cmps
jbe
jbe
cmps
cmp
xchg
mov
dec
shr
inc
mov
das
dec
pop
sub
push
or
scas
sbb
cdq
imul
(bad)
push
neg
pop
adc
sbb
popa
mov
or
and
mov
call
ja
loopne
mov
cdq
(bad)
sbb
adc
jp
fnstcw
dec
xchg
in
push
adc
mov
mov
push
xchg
scas
jge
in
add
enter
rcr
(bad)
out
gs
jae
inc
les
fsubr
jl
loop
gs
mov
test
test
mov
lds
stos
mov
gs
xchg
out
mov
and
retf
loopne
nop
lods
or
not
sub
(bad)
leave
cmp
fwait
or
or
sti
js
cli
daa
aam
data16
icebp
das
icebp
push
bound
loope
xor
in
sub
mov
sar
dec
sub
mov
fiadd
mov
into
test
and
arpl
scas
mov
push
js
push
pop
call
cld
stos
adc
sbb
sbb
(bad)
rcl
add
sub
mov
xchg
mov
or
jb
leave
aad
mov
clc
and
(bad)
jne
lahf
pop
fnstcw
pop
stos
or
sti
jl
push
add
xchg
icebp
imul
into
es
lea
or
nop
xchg
scas
xchg
loopne
and
bts
jnp
sbb
xor
daa
fwait
inc
shl
aad
fs
xchg
mov
jns
inc
fcomp
and
xchg
outs
or
out
ja
sub
ficomp
xchg
lods
cli
cs
xchg
je
adc
pop
add
or
mov
ret
mov
sub
das
sbb
inc
ret
lods
and
jecxz
je
ret
or
push
xchg
fwait
jmp
inc
in
repnz
and
add
or
mov
movs
jmp
mov
and
(bad)
cmp
jecxz
mov
loop
jb
adc
mov
sbb
or
jbe
mov
retf
cmps
jns
dec
mov
inc
sbb
int3
fcomp
push
movs
lock
dec
sbb
popf
imul
outs
adc
and
dec
cmc
pop
mov
jp
sub
dec
rol
addr16
and
pushf
push
mov
jmp
sbb
push
sub
xchg
leave
xor
xchg
ds
enter
js
cld
aad
test
cmc
ds
xor
sbb
push
test
aaa
call
adc
cwde
push
dec
jae
pusha
in
jle
inc
out
pop
push
and
adc
sub
bound
mov
adc
sbb
jecxz
ja
mov
jp
std
push
retf
test
jnp
test
out
mov
sahf
dec
les
push
inc
or
push
cmps
fucomip
movs
mov
ja
jnp
xor
pop
adc
sti
lds
fwait
mov
xchg
aaa
iret
cmc
sbb
and
sbb
loopne
mov
sub
xchg
(bad)
mov
jge
loope
push
or
xor
in
popa
aad
call
push
hlt
mov
movs
cs
dec
sub
xor
cs
cmp
jp
fnsave
mov
xchg
jbe
rol
mov
les
jl
jno
jns
or
pop
retf
dec
ret
sub
mov
sti
mov
(bad)
xor
ss
or
push
push
jae
and
dec
fmul
(bad)
icebp
mov
test
stos
sbb
ins
(bad)
jmp
adc
fisub
sub
push
lds
sub
fstp
(bad)
movs
(bad)
pop
out
imul
mov
idiv
push
test
cwde
jge
dec
push
cli
mov
inc
cmp
sub
or
in
in
sti
jecxz
data16
out
fistp
pinsrw
mov
push
add
pop
pop
outs
push
add
outs
xlat
sub
mov
push
das
outs
fwait
fwait
pop
out
jo
and
lods
dec
xor
xchg
loope
ds
push
mov
loop
adc
retw
push
xchg
(bad)
xchg
jmp
dec
and
sub
mov
out
mov
jl
add
sbb
mov
shr
cli
lds
je
or
add
xor
pop
movs
movs
test
aaa
sbb
(bad)
call
lods
xchg
loopne
or
sub
sub
imul
js
lods
dec
inc
dec
vcvttsd2si
pushf
push
clc
cmc
adc
sahf
dec
cmp
push
ret
adc
and
add
adc
mov
or
iret
mov
in
jg
and
sbb
mov
sub
add
pop
out
mov
xor
(bad)
xchg
scas
icebp
jb
ins
std
sub
js
push
stos
or
cmc
sbb
adc
dec
push
fwait
les
sar
sbb
aam
loopne
test
fstp
cli
mov
aaa
adc
lea
ret
sbb
and
mov
retf
mov
xor
(bad)
sar
leave
dec
call
ret
rol
mov
pusha
int3
sti
push
fs
rol
lods
adc
in
xor
lock
add
sti
cld
sbb
mov
mov
les
cmp
dec
sub
(bad)
push
mov
lea
sbb
(bad)
and
jne
inc
ins
test
mov
pop
cld
mov
out
xchg
push
test
cmp
mov
xlat
pop
add
mov
sbb
out
pop
xor
cmp
icebp
outs
daa
out
and
cmps
sub
(bad)
vsqrtpd
push
arpl
mov
or
int3
test
push
stc
sahf
cs
pop
(bad)
cwde
cs
je
mov
repnz
pop
pop
dec
or
mov
loopne
cmps
clc
outs
adc
test
loope
ret
xor
es
jecxz
mov
xor
or
arpl
in
sub
dec
das
or
pop
mov
xor
inc
xchg
and
(bad)
mov
call
cs
dec
inc
sbb
sar
mov
fidiv
outs
mov
sub
xlat
dec
test
mov
dec
aas
shl
or
in
stos
jbe
sub
push
daa
ret
fistp
jecxz
sub
jecxz
dec
loope
add
loopne
sbb
arpl
js
push
dec
stc
addr16
bound
mov
xor
rcr
mov
fist
cli
mov
lahf
lea
adc
stos
lahf
jmp
stos
fldcw
icebp
aad
lahf
pop
fadd
push
into
add
popf
fwait
inc
out
sub
cdq
vshufps
mov
js
les
fistp
add
and
pop
call
call
or
dec
xchg
movs
cdq
clc
cmp
and
sbb
int3
sbb
xchg
jmp
or
outs
and
mov
ret
mov
lds
test
in
test
sub
jns
loopne
(bad)
stos
pop
sub
lods
rcr
adc
lea
ss
adc
cli
pop
(bad)
fiadd
sbb
jmp
dec
scas
push
mov
loopne
jo
inc
fisub
or
test
sub
adc
aas
inc
mov
mov
movs
mov
movs
mov
lods
mov
je
add
sub
or
scas
mov
jnp
dec
lock
not
jle
(bad)
in
sub
xchg
fadd
pop
int
sbb
push
and
pop
mov
lods
aaa
sbb
std
aas
ret
push
lahf
scas
mov
mov
lahf
add
ja
aad
test
sbb
stc
mov
push
dec
mov
push
lds
iret
mov
es
push
mov
push
hlt
mov
jno
dec
in
cld
adc
nop
inc
and
mov
daa
sbb
mul
push
stos
aas
adc
push
mov
scas
fs
xchg
sbb
(bad)
dec
cs
pop
adc
out
xchg
jbe
jl
loop
add
pusha
jl
cmc
(bad)
fcom
jne
jge
out
dec
mov
jae
aaa
or
jmp
dec
sbb
imul
push
in
rcl
(bad)
std
retf
and
xchg
lock
bound
dec
mov
or
scas
pop
add
retf
dec
inc
aam
xlat
mov
rcl
adc
in
std
inc
je
in
inc
inc
push
ins
ret
pop
xor
xor
cmp
lea
lods
push
mov
adc
addr16
or
popf
dec
fdiv
mov
daa
loop
fst
fimul
inc
jg
jnp
sti
mov
fistp
das
sbb
in
out
xlat
xchg
jmp
push
push
retf
xchg
les
inc
adc
mov
mov
xchg
and
jg
sub
lods
cmp
pop
pushf
jno
fsubr
inc
stos
push
js
stc
sbb
push
push
sbb
jp
iret
mov
aad
test
(bad)
lods
ret
pop
imul
outs
ret
push
push
(bad)
hlt
inc
scas
shl
mov
xor
nop
mov
outs
push
je
sub
cs
(bad)
int3
add
or
xchg
rcl
and
adc
cmps
ret
xchg
mov
fcomp
jmp
pop
arpl
leave
jmp
cmp
push
or
inc
xchg
mov
push
cwde
pop
push
iret
push
popa
out
jne
data16
stos
push
popf
test
sti
rep
cmp
loope
and
repz
(bad)
xchg
dec
jecxz
sbb
clc
xchg
pop
shl
push
sahf
pop
mov
lea
xchg
jno
jo
inc
cli
pop
mov
mov
(bad)
hlt
mov
pusha
mov
mov
push
xor
xchg
and
mov
idiv
push
dec
repnz
loop
int3
data16
inc
dec
rcl
push
jnp
idiv
mov
test
mov
jmp
jae
dec
popf
aas
scas
jno
call
sub
inc
sahf
pop
js
dec
jp
add
mov
repnz
push
cmp
lea
xchg
cmps
in
mov
xor
pop
mov
gs
sahf
pop
mov
test
test
jbe
inc
pop
pop
push
out
(bad)
call
mov
mov
scas
mov
add
jmp
inc
dec
xor
push
dec
and
scas
out
rol
cdq
push
popa
adc
xchg
mov
sti
jne
jne
push
nop
or
test
ins
ror
pop
repnz
mov
mov
(bad)
or
mov
push
shl
jg
push
pop
push
test
inc
fild
int3
ror
jmp
xor
lock
ror
jle
push
push
mov
out
in
test
push
sbb
xor
(bad)
dec
popf
pop
iret
sbb
stos
mov
pop
imul
push
fs
test
jmp
fld
mov
mov
icebp
mov
sub
cdq
out
(bad)
xlat
(bad)
cmp
mov
es
sbb
dec
add
test
rcr
xchg
or
push
adc
mov
mov
ror
fadd
sar
popf
pop
dec
push
and
inc
fld
int
sub
xchg
cmp
imul
test
inc
retf
or
xchg
jno
frstor
mov
mov
pop
int
mov
fcomp
movs
push
ficomp
pop
stc
pop
ja
sti
stos
fisubr
test
add
loop
movs
mov
retf
mov
push
fnstcw
movs
xchg
sub
fiadd
dec
in
add
xor
push
xchg
shr
cmps
lods
ret
add
aad
inc
test
xor
pop
movs
add
and
ss
mov
cmp
and
sbb
das
mov
lods
aad
inc
retf
pop
xchg
push
mov
xchg
into
mov
xor
adc
neg
mov
(bad)
cli
xchg
aas
push
cmp
shr
mov
pop
push
fwait
aas
xlat
shl
mov
xchg
xchg
add
imul
xor
cmps
lea
data16
push
and
xor
out
in
pop
(bad)
add
mov
aad
enter
into
sbb
cmp
mov
mov
mov
loop
cmp
jecxz
ror
jmp
or
sub
dec
inc
sub
xchg
retf
ret
jg
pop
imul
pop
pop
repnz
adc
fisubr
dec
push
dec
push
mov
in
fcomp
jns
jne
sbb
and
and
fnstcw
in
adc
and
pop
bound
in
dec
mov
outs
loop
cmc
dec
(bad)
out
repnz
bswap
es
je
xor
repz
(bad)
sbb
movaps
mov
mov
inc
mul
inc
mov
std
rcl
lock
dec
pusha
pop
push
and
xchg
cmc
pop
fst
popa
je
inc
fisub
xor
adc
xchg
clc
jge
hlt
dec
mov
movs
scas
div
xchg
inc
or
retf
rcl
test
dec
jmp
xchg
xchg
out
mov
inc
imul
iret
iret
outs
outs
dec
xlat
ins
repnz
mov
inc
sub
sbb
(bad)
mov
rcl
aad
cmc
sub
shr
int
jno
sub
imul
push
in
and
out
cmp
mov
and
mov
pop
lahf
cmp
add
pop
or
sbb
mov
jl
push
leave
or
cmp
call
int
push
inc
mov
push
and
cdq
sub
fprem1
jg
and
xlat
outs
out
and
mov
imul
dec
sub
jg
sub
jns
outs
hlt
xchg
shl
popa
shl
das
fiadd
push
aas
push
das
inc
mov
repz
out
(bad)
movs
sub
cmp
or
aad
lock
mov
inc
rcr
mov
rcr
cmps
cs
sub
jmp
jmp
or
inc
cmp
pop
ds
sub
sbb
into
and
nop
cs
ror
mov
test
push
loopne
push
jae
out
icebp
pop
push
sar
stc
cmp
sahf
or
mov
js
sbb
inc
jnp
hlt
stc
pop
call
mov
xor
out
es
sbb
outs
mov
and
cmc
fucomi
add
xor
sub
xchg
test
mov
pusha
lahf
stos
push
es
or
mov
xor
jno
or
int3
xor
or
or
leave
call
gs
imul
cmp
jnp
loopne
inc
inc
sbb
aad
pop
and
pop
sbb
xchg
or
push
in
xchg
jb
push
cmp
je
sbb
pop
ds
sbb
lock
sub
sti
sub
mov
adc
xlat
mov
mov
cdq
inc
sub
ret
idiv
test
xchg
xchg
shl
mov
lock
clc
adc
dec
or
stc
pop
jo
repnz
mov
add
xor
jmp
xor
mov
retf
pop
into
push
outs
adc
adc
loop
mov
mov
loope
loope
es
mov
inc
imul
gs
aaa
jb
lahf
adc
and
mov
lods
add
ds
mov
inc
retf
xor
sbb
out
cmps
cmp
lds
inc
sub
cmps
jb
lahf
bound
mov
jg
fisttp
xor
push
sbb
or
data16
mov
repz
mov
loopne
ds
ficom
dec
mov
(bad)
mov
push
dec
mov
and
fadd
xchg
scas
fld
sub
loopne
add
xor
push
in
pusha
fidivr
mov
xchg
scas
sahf
dec
mov
nop
out
mov
mov
popa
push
sbb
xchg
push
(bad)
out
repnz
jmp
call
ins
cmps
add
xchg
ret
out
int3
scas
cwde
aad
movs
jecxz
cmp
mov
call
sbb
ds
aad
(bad)
lahf
pop
sbb
cdq
addr16
movs
dec
ret
(bad)
push
rcr
test
(bad)
push
mov
xchg
add
(bad)
ss
sti
cmp
add
pop
mov
mov
mov
shr
pop
xchg
inc
shl
std
(bad)
imul
jecxz
add
add
rcr
mov
sub
push
sub
or
mov
retf
cmc
xchg
push
push
xlat
adc
test
jae
mov
cmps
fcomp
push
xor
and
or
mov
inc
push
pushf
aas
mov
xor
fadd
dec
es
xchg
test
ins
inc
push
in
shl
jle
lea
mov
jecxz
add
mov
add
mov
adc
adc
cwde
test
scas
xchg
push
cmp
jmp
mov
and
pop
loop
shl
movs
ret
push
inc
icebp
xlat
mov
cld
int3
push
jl
jge
xchg
cmp
call
xchg
aaa
or
mov
(bad)
test
mov
inc
pop
in
add
cmp
mov
cmp
jne
jmp
push
xchg
out
bnd
or
cmp
hlt
call
jae
sar
mov
and
or
(bad)
pop
cmp
or
iret
xchg
or
mov
sbb
add
pop
mov
push
push
int3
inc
xchg
xlat
fdivr
inc
push
mov
sbb
pop
je
(bad)
das
or
sbb
outs
sub
xchg
mov
shl
or
mov
xor
jmp
repz
sub
mov
movs
xchg
sbb
fs
hlt
sbb
and
cli
jnp
cli
jg
iret
adc
push
ror
aam
inc
sti
sbb
or
add
pushf
hlt
test
mov
mov
cld
leave
rol
add
or
hlt
dec
sbb
movs
ins
ins
xor
ds
push
(bad)
jbe
mov
(bad)
pop
cdq
or
jnp
mov
leave
mov
fbstp
popa
xchg
pop
out
cld
mov
jl
or
push
push
push
call
scas
sti
retf
inc
das
dec
mov
dec
inc
jecxz
push
aad
pop
jo
dec
mov
jno
pop
jbe
test
or
pop
cmp
jae
jecxz
pushf
inc
lods
mov
clc
xor
xchg
add
mov
jno
mov
stos
test
sti
in
adc
mov
push
jno
jo
aad
xchg
(bad)
jae
test
and
cs
adc
imul
push
jnp
(bad)
mov
sti
inc
cdq
adc
ds
inc
imul
push
and
mov
and
addr16
mov
shr
fisub
lds
out
xchg
out
loope
push
inc
ret
or
in
sbb
sbb
xor
xchg
xchg
add
add
or
sbb
out
and
mov
and
arpl
divps
xchg
cmp
xor
push
adc
(bad)
call
sbb
adc
sub
call
cmp
mov
and
fistp
mov
fninit
rcr
pop
jo
das
aaa
dec
shl
nop
sti
(bad)
stos
cdq
and
rol
hlt
shl
mov
popf
inc
mov
adc
test
cmp
mov
inc
pop
xor
sub
rcr
mov
and
shl
mov
adc
or
dec
iret
leave
mov
jmp
jmp
jb
out
fcomp
sbb
lods
add
cmp
popf
fidivr
jb
scas
inc
inc
ficomp
xchg
pushf
push
(bad)
jle
xchg
dec
cmp
ins
adc
(bad)
call
mov
and
inc
push
iret
jge
test
out
push
xchg
pushw
dec
sub
rcr
in
outs
stc
jl
and
xor
ins
push
adc
jnp
push
test
pop
xlat
mov
outs
bound
(bad)
outs
shl
cmp
and
(bad)
add
into
int3
in
mov
leave
cwde
xchg
mov
adc
cmp
ffreep
test
push
xchg
out
jnp
retf
les
fld
jno
adc
adc
bound
cmp
pusha
and
out
imul
add
inc
outs
dec
outs
inc
push
mov
pop
cli
mov
pop
cmp
xor
cli
add
sub
aam
int
adc
dec
sbb
xchg
jne
mov
jmp
mov
push
lods
inc
aam
pop
sub
lods
(bad)
retf
popa
mov
mov
xor
xchg
ja
ret
daa
repz
cwde
xlat
nop
dec
test
fnstenv
cmp
repnz
in
mov
dec
cmp
pop
aas
pop
jle
jno
mov
shl
jb
or
mov
fnstsw
dec
mov
(bad)
jno
jmp
daa
ss
in
imul
aam
mov
int3
mov
das
ja
(bad)
shl
pop
outs
pusha
push
adc
mov
lods
pop
xor
jecxz
cmp
jecxz
sub
popf
(bad)
dec
pop
idiv
cmp
pop
movs
mov
xchg
das
(bad)
aaa
cmp
pop
or
xchg
iret
or
(bad)
xchg
(bad)
in
mov
xor
pop
jl
mul
mov
push
jns
fs
dec
cdq
cmp
or
mov
jns
in
cmp
retf
mov
mov
jmp
fwait
shr
xor
retf
pop
and
or
outs
int3
cmove
fidivr
sub
mov
out
xchg
ror
add
pop
ficomp
outs
arpl
es
lahf
sub
rcr
lds
fldenv
dec
and
mul
scas
daa
mov
iret
mov
fiadd
adc
repz
rcl
xchg
imul
in
call
mov
icebp
sub
fcmovu
jo
xor
cmc
cmps
jp
(bad)
enter
enter
into
addr16
and
sbb
es
(bad)
sub
pop
rol
enter
inc
jnp
dec
and
mov
or
jb
pop
mov
or
xchg
sub
xlat
and
pusha
cmp
bound
sub
xchg
(bad)
and
or
cmp
mov
mov
add
inc
adc
inc
jmp
ins
aad
std
loopne
add
jmp
loope
ret
xchg
jns
inc
mov
sti
in
mov
jo
jnp
add
cmc
cmp
outs
leave
dec
fdivr
sbb
push
lahf
stos
rol
gs
or
mov
stos
adc
cmps
js
or
adc
test
(bad)
pop
lock
xor
bound
mov
sbb
popf
or
adc
adc
mov
sub
mov
lds
hlt
dec
or
aad
pop
lahf
dec
adc
fs
jb
aaa
dec
sbb
sbb
mov
mov
das
xchg
pushf
cmp
push
aam
int
xor
cs
test
aaa
or
stos
xchg
pop
ss
sbb
xor
mov
hlt
retf
jae
mov
add
sbb
stos
ja
retf
(bad)
stc
lahf
in
into
cmp
xor
test
test
lods
rol
test
stc
sbb
push
ret
rol
stos
mov
clc
mov
shl
stos
into
jae
ins
add
cmp
sub
jo
add
mov
xlat
xor
jns
test
push
inc
jb
add
leave
gs
jge
dec
not
jnp
jb
mov
and
jp
push
jno
mov
fistp
pushf
pop
add
pop
sti
dec
ficom
xchg
xlat
mov
shl
adc
bswap
imul
aas
sub
mov
inc
jmp
dec
loope
push
mov
enter
shl
jp
jmp
jl
enter
mov
mov
dec
dec
add
mov
das
cmc
ror
cmp
jge
pop
punpcklwd
sub
xchg
push
cmp
cmp
jns
outs
push
xchg
call
lock
inc
xor
inc
cmp
lds
sbb
sub
mov
in
push
jl
sbb
iret
mov
mov
xchg
mov
or
outs
rcr
jecxz
ds
pop
xchg
pop
xchg
pop
add
nop
or
mov
jbe
not
pushf
inc
dec
xchg
loopne
sbb
cmp
pop
pop
dec
pop
enter
xchg
cwde
cmp
pop
add
loop
test
mov
movs
xchg
and
cmp
add
das
dec
pop
and
leave
dec
sub
pushf
xchg
jmp
push
dec
cli
push
mov
aad
xlat
dec
mov
xchg
test
cmp
scas
cli
or
jge
or
(bad)
lock
imul
imul
mov
sbb
aam
xlat
cmc
xchg
mov
jg
cmps
inc
add
cmp
fisubr
cmp
pop
je
gs
mov
push
test
mov
sar
nop
rcl
push
xchg
adc
fpatan
in
cmp
jmp
ficom
popf
repz
in
ss
sbb
adc
ret
adc
hlt
ret
shl
(bad)
into
push
jle
popa
inc
mov
pop
mov
frstor
mov
pop
fimul
dec
repnz
aam
or
or
xor
gs
ds
clc
sbb
mov
and
mov
jmp
add
mov
xchg
retf
cli
cdq
std
sub
out
xor
push
in
push
int
xor
adc
push
lea
mov
cmp
mov
dec
pop
adc
and
add
mov
adc
iret
mov
imul
or
loopne
test
fwait
cmp
push
xchg
push
loopne
js
pop
ins
call
nop
cmps
pop
pop
xlat
rcr
test
pop
xchg
das
nop
or
js
cmp
test
test
call
fdivr
ret
mov
fnstcw
mov
imul
ret
mov
(bad)
scas
cmp
mov
lahf
mov
out
mov
mov
jae
inc
fcomp
push
xchg
mov
inc
imul
inc
sbb
arpl
call
aam
push
shl
xchg
enter
or
cmp
dec
pop
xchg
xchg
cmc
lods
scas
icebp
loop
dec
daa
pusha
push
ins
ins
pop
pop
in
or
jmp
xchg
jmp
mov
pop
inc
jns
push
and
cdq
movs
arpl
std
sar
mov
imul
aaa
xor
das
sub
sar
push
dec
cmp
push
aas
pop
sbb
in
pusha
(bad)
cmp
sar
mov
cmps
and
add
inc
mov
cmp
push
sub
mov
or
pop
pop
sub
push
in
sbb
inc
xor
jne
ss
cmp
mov
fstp
les
jge
push
adc
mov
dec
jmp
sub
scas
jno
and
mov
sbb
jle
mov
(bad)
mov
xchg
div
dec
addr16
push
out
test
lock
or
push
cmp
pop
lods
xchg
fisubr
loope
movs
cmc
mov
push
push
scas
cli
cld
jno
or
(bad)
or
or
sub
inc
popf
xchg
cmp
fsubr
daa
cmp
test
outs
gs
add
xor
jb
jae
or
sar
push
mov
mov
cwde
adc
push
mov
pop
imul
xchg
lahf
outs
cld
dec
sahf
pop
fs
push
xor
fwait
loopne
adc
pushaw
aaa
mov
add
mov
mov
out
in
fcmovbe
sub
ret
sbb
ficomp
cmps
dec
mov
(bad)
pusha
sti
mov
lock
jge
cmc
dec
mov
mov
cmp
ins
aam
ins
sbb
pop
mov
pop
shr
ins
ja
pop
xor
adc
ficom
in
push
xchg
bound
pushf
arpl
scas
out
mov
lods
or
fld
xor
mov
lds
out
outs
fist
mov
(bad)
adc
or
js
dec
cmp
sub
sahf
jb
add
adc
es
push
nop
test
and
ficom
lds
pop
cmp
pusha
call
mov
lea
add
mov
mov
push
rcl
cs
fwait
add
jg
or
dec
bound
jmp
(bad)
inc
mov
mov
or
imul
fucomi
test
jne
lock
rcl
jbe
adc
xchg
mov
imul
inc
cmps
adc
inc
retf
mov
fnsave
sahf
push
and
inc
imul
cmc
xor
repz
in
adc
test
add
jo
les
sahf
jg
inc
in
xchg
adc
int
repz
lock
aad
in
les
mov
sti
jl
mov
lahf
iret
or
sbb
sub
mov
add
adc
mov
pop
loopne
int
mov
daa
fmul
repnz
mov
fcom
cmp
mov
xor
jnp
xchg
ja
jmp
sub
das
lds
ds
inc
rcl
jb
int
mov
xchg
(bad)
stos
mov
inc
xchg
inc
cmp
inc
icebp
neg
rcr
mov
mov
pop
push
xchg
sbb
and
popf
cs
ds
mov
pop
(bad)
hlt
inc
data16
and
push
rol
and
jecxz
retf
and
das
jl
aas
cmp
stos
and
repnz
or
leave
jnp
fstp
ja
pop
lahf
or
lds
cmps
xor
in
mov
xchg
mov
dec
addr16
fmul
push
call
test
or
ins
xor
xor
nop
push
fwait
inc
pop
sub
ja
jle
lds
in
xchg
aad
fdivr
mov
cmp
lods
sahf
mov
mov
xor
jge
jmp
mov
xchg
xchg
jmp
loope
mov
pop
imul
(bad)
jbe
dec
adc
(bad)
out
jne
pop
xchg
scas
jne
add
cmp
aad
fwait
clc
loopne
dec
lods
daa
sbb
jmp
add
adc
sub
sbb
mov
add
test
scas
(bad)
lock
jns
test
push
jae
test
sbb
mov
dec
inc
xchg
xchg
jp
xor
mov
rol
pop
aad
push
push
add
frstor
or
jne
hlt
rcl
jbe
cmp
xchg
mov
addr16
in
(bad)
test
mov
or
mov
in
add
lods
pop
test
lods
sub
pop
mov
mov
pop
jecxz
repnz
cmps
enter
bnd
jle
mov
(bad)
lock
inc
test
or
movs
clc
mov
push
add
mov
stos
mov
xor
loope
mov
lahf
repnz
push
mov
out
mov
xchg
(bad)
int3
stc
push
sub
stos
mov
pop
pop
sbb
daa
add
into
shl
lahf
addr16
fistp
add
enter
push
(bad)
xchg
cdq
or
sbb
adc
mov
xchg
cwde
adc
popa
mov
outs
loopne
retf
add
or
shl
addr16
and
aad
sbb
sub
inc
sub
adc
icebp
or
aas
add
xlat
in
ret
lock
mov
mov
cmps
xchg
jb
(bad)
or
out
cmps
popf
jns
aam
push
gs
adc
outs
pop
sahf
in
out
mov
cdq
and
inc
jnp
scas
xlat
fidiv
push
push
mov
nop
push
xor
cmp
mov
dec
jne
jle
inc
popf
pop
and
in
xchg
adc
je
mov
xor
test
mov
int
shl
fdiv
mov
in
push
xchg
adc
jns
or
stos
pusha
mov
cmp
cmps
mov
jle
sub
xchg
lock
lea
jne
jecxz
ss
pop
add
xor
mov
aaa
jb
in
pop
pop
pushf
iret
cmp
mov
jecxz
je
imul
cmp
push
mov
xchg
jg
les
add
push
jp
or
rcr
dec
jp
jne
mov
or
or
aas
sbb
(bad)
fisub
push
ret
pop
lods
(bad)
adc
dec
push
call
or
dec
(bad)
shl
xlat
or
test
cdq
mov
sar
adc
inc
retf
icebp
jnp
push
inc
sbb
jge
and
or
mov
push
jbe
mov
lea
pop
cs
jl
ins
outs
inc
pusha
cmp
das
sar
dec
cmps
add
xchg
jns
add
rcr
rcl
test
cmps
test
into
popf
cli
cmp
loop
push
jmp
lahf
adc
pop
push
xchg
pop
popa
mov
inc
sub
fs
push
imul
stc
ss
mov
push
(bad)
cmc
cmp
(bad)
shl
sbb
popa
mov
mov
les
jl
xchg
jmp
or
std
mov
out
fstp
jo
out
imul
adc
dec
rol
jge
cmp
ja
jecxz
add
ss
cmps
sbb
mov
clc
cld
ds
aam
fadd
into
or
adc
ficomp
bound
mov
pop
or
loop
nop
pop
sbb
xchg
stos
aas
push
lods
pop
cmp
dec
lea
fwait
xchg
out
or
and
(bad)
or
mov
mov
test
cli
in
int
xor
fisttp
ds
inc
out
jmp
mov
sahf
inc
pop
inc
inc
push
xor
lea
add
scas
pop
shl
cli
mov
push
js
dec
cdq
mov
or
dec
push
mov
xor
mov
ret
pop
loope
mov
out
rcr
jo
ror
and
stc
leave
dec
out
pop
push
dec
push
or
pop
adc
push
and
pop
xchg
sahf
add
out
and
loope
cmps
add
or
xchg
popa
or
xchg
js
pop
int3
retf
and
ret
seto
mov
jle
mov
push
jp
and
cmp
xchg
xchg
cmp
xor
mov
lods
jbe
fs
mov
les
xchg
xor
shl
push
js
arpl
out
xchg
mov
in
or
push
pop
xchg
push
xchg
iret
pop
push
scas
mov
cmp
or
out
sub
ja
mov
fnstenv
adc
push
mov
sti
and
mov
add
repnz
imul
inc
adc
mov
push
jae
adc
xor
mov
add
mov
push
sub
mov
jno
sub
sub
(bad)
fldl2e
cmps
push
mov
add
jb
cmc
inc
adc
and
(bad)
mov
mov
push
nop
retf
retf
xchg
cmc
mov
popf
push
stos
repnz
loop
imul
loopne
mov
push
(bad)
xchg
mov
jnp
mov
or
retf
cmc
mov
shl
xchg
sti
lods
xor
mov
call
xor
push
xchg
sbb
xchg
xchg
fimul
mov
iret
inc
sub
mov
cmps
out
adc
push
fwait
or
cmps
mov
es
dec
nop
cmp
adc
pop
dec
dec
jmp
inc
pop
xor
cmc
push
gs
mov
js
fst
jmp
sbb
mov
(bad)
push
pop
and
or
retf
dec
mov
add
jno
dec
aaa
sar
imul
or
dec
out
rcl
cld
add
(bad)
mov
ja
dec
dec
xor
cwde
fs
sar
adc
or
lds
mov
mov
xor
mov
fdiv
(bad)
xchg
xor
punpckhdq
leave
add
sbb
popf
rcl
cmp
pop
jmp
and
clc
dec
push
ja
or
add
int3
mov
fcomip
add
rcl
ds
out
fwait
adc
shl
out
cmpxchg
push
lock
cmp
enter
sbb
bound
pop
dec
jmp
xchg
sbb
xchg
add
popf
adc
icebp
ins
fimul
cmp
das
xlat
pop
not
mov
xchg
bound
mov
jmp
pusha
push
std
enter
mov
push
aad
or
jge
mov
dec
ins
fisub
adc
xchg
xchg
ror
dec
cmp
pop
add
adc
ret
repnz
es
shr
dec
ror
es
push
lahf
into
lds
inc
fs
repnz
add
push
push
lahf
(bad)
fisub
cld
jecxz
fdivr
out
int
in
dec
pop
or
ja
and
add
pop
outs
fs
rcr
mov
movs
xchg
les
popa
push
pop
out
push
sub
mov
push
push
and
mov
es
adc
xchg
or
sbb
pop
sar
add
(bad)
ror
xlat
jns
push
mov
xor
mov
scas
sbb
push
mov
xlat
xchg
mov
ror
data16
mov
xor
mov
sbb
sbb
xchg
icebp
sbb
xchg
movs
dec
not
pop
popa
mov
or
mov
jne
fdiv
loopne
push
jmp
jp
inc
test
mov
leave
push
ins
movs
jnp
push
jns
in
jnp
dec
leave
mov
repnz
xchg
gs
jle
xor
test
mov
jbe
retf
and
and
pop
adc
push
mov
xor
inc
mov
mov
xlat
cmps
and
pop
add
outs
pop
dec
sti
push
sti
retf
pop
in
xor
xor
adc
or
popa
popa
call
push
pop
mov
dec
adc
mov
mov
div
push
inc
test
jg
mov
and
dec
pop
clc
push
add
add
loopne
xor
sub
gs
mov
mov
sub
icebp
call
inc
and
add
sti
pop
cmp
in
add
xor
adc
adc
inc
inc
push
enter
(bad)
into
jnp
xchg
or
jmp
fistp
sbb
cmp
xchg
fwait
or
mov
stos
add
test
mov
cdq
int3
jg
inc
add
mov
mov
jae
inc
jno
repnz
mov
jmp
sti
and
add
xor
aad
inc
stos
daa
add
pop
(bad)
cmc
mov
jo
fs
int
or
mov
push
shl
sti
inc
or
mov
cmp
mov
push
call
ds
sbb
in
jbe
lea
and
inc
loopne
mov
pop
sub
mov
add
sbb
xor
test
pusha
imul
bound
mov
jne
mov
lds
pusha
lahf
sub
jbe
cwde
dec
jle
pop
arpl
sti
repz
(bad)
cli
or
gs
dec
jno
je
(bad)
dec
mov
jnp
ror
add
push
repnz
jns
mov
ud0
icebp
xor
call
mov
cmp
scas
pop
rol
lea
push
(bad)
cli
not
xchg
je
ror
push
iret
je
scas
sbb
and
adc
imul
inc
mov
stos
sti
dec
mov
cmp
adc
mov
shl
outs
add
jmp
out
mov
pop
movs
(bad)
aad
jecxz
sbb
enter
sti
inc
pop
dec
cmps
jmp
adc
sub
fistp
mov
sub
dec
(bad)
cmps
mov
es
mov
xchg
dec
dec
dec
jo
jns
sbb
(bad)
dec
mov
adc
push
mov
popa
jge
pop
xchg
or
sbb
jmp
(bad)
adc
jmp
arpl
repnz
mov
xchg
add
jge
call
inc
mov
pop
arpl
sub
stos
push
sti
popf
pushf
sub
xor
and
mov
aam
mov
dec
(bad)
std
xor
into
lea
sub
xlat
adc
push
imul
jo
mov
jo
ss
cmc
dec
cmc
sbb
inc
fs
mov
mov
mov
add
imul
add
les
push
add
adc
cli
and
shl
int3
mov
sahf
leave
(bad)
mov
pop
pop
sub
(bad)
into
xchg
in
ror
mov
add
call
js
jo
push
or
ins
xchg
retf
stos
adc
and
pusha
repz
inc
lock
dec
and
or
imul
icebp
dec
adc
adc
cmc
cmp
cs
mov
pop
sub
mov
xlat
sub
push
push
arpl
pop
ins
and
xchg
(bad)
call
test
cmp
daa
xor
pop
js
add
push
leave
(bad)
scas
imul
bound
or
mov
imul
pop
xchg
inc
dec
ror
ins
clc
out
pop
mov
xchg
lahf
scas
out
lea
fldenv
and
fcmovnbe
fdiv
mov
(bad)
imul
repz
pop
dec
mov
dec
or
xor
loope
push
ret
fxch
das
test
iret
push
mov
jecxz
jmp
cdq
sub
in
loop
imul
cmc
push
cmc
mov
stos
arpl
xchg
sub
cmp
pushf
(bad)
cmp
jp
or
sub
mov
sub
cmc
inc
push
das
stos
fcmovu
shl
std
push
test
jns
test
jbe
adc
jle
fcmovnb
mov
call
xor
in
push
inc
sti
inc
add
jns
(bad)
outs
mov
adc
and
iret
dec
sbb
jns
xchg
and
imul
repz
adc
es
(bad)
fiadd
arpl
aam
ss
scas
xor
xchg
add
scas
sbb
dec
jle
ret
nop
xor
aam
jno
out
pop
mov
mov
mov
jmp
lock
shr
iret
call
cmps
in
sub
mov
rcr
adc
call
stos
jmp
jns
dec
or
xor
scas
cmp
hlt
push
push
imul
pop
in
cld
cmp
call
cli
xchg
push
xchg
aas
jp
les
fidiv
movs
push
xlat
sahf
sbb
jecxz
jns
hlt
outs
in
lods
pushf
xchg
sahf
popf
popf
gs
push
in
adc
jo
mov
mov
les
icebp
cdq
imul
mov
xchg
lods
cmp
(bad)
das
jp
fwait
cmp
xor
and
pop
push
ficom
inc
mov
dec
test
ins
sbb
fist
test
mov
adc
mov
ret
loopne
xor
call
cwde
data16
test
cli
push
cwde
push
scas
cmp
sub
fwait
mov
in
jmp
cwde
mov
aaa
mov
cwde
push
stos
(bad)
mov
sub
mov
ds
dec
loopne
pop
aas
mov
imul
xor
mov
outs
(bad)
mov
(bad)
and
xchg
jmp
dec
leave
inc
aam
adc
movs
retf
mov
jmp
gs
sub
xrelease
jo
mov
cmp
cmp
in
mov
divps
cld
sbb
sbb
loop
dec
mov
mov
mov
div
mov
sub
push
imul
pop
enter
add
sbb
fnstcw
xchg
cwde
inc
or
fisubr
icebp
test
sbb
bound
xor
push
cmp
mov
dec
xor
stos
leave
ret
into
sub
pop
xchg
mov
add
and
movs
inc
lods
fs
cmc
pushf
adc
dec
fisubr
ds
sbb
pop
push
sti
cwde
in
inc
fnstsw
pusha
inc
scas
sbb
rol
jns
rol
mov
cmp
call
loop
shr
jb
out
jae
fild
aam
and
out
inc
push
ds
sbb
outs
rol
xchg
pop
and
stos
mov
inc
ret
adc
mov
xor
pop
add
loopne
test
mov
lock
mov
sti
gs
mov
push
fidivr
or
mov
int3
mov
sbb
and
and
inc
pushf
xor
(bad)
ds
shl
xor
ret
add
push
cld
movs
(bad)
test
jmp
cmp
pop
jbe
xchg
movs
int
push
ins
or
cs
rcl
pop
sub
sub
out
bound
jb
push
mov
mov
loop
retf
cmp
inc
jmp
pusha
ret
push
xlat
inc
rcl
sbb
mov
mov
mov
arpl
(bad)
rol
push
push
push
cmp
add
add
jp
sbb
cmp
cmc
dec
test
(bad)
ins
inc
xor
idiv
cmp
(bad)
int3
lea
shl
mov
icebp
xchg
or
out
je
in
cli
pop
bound
dec
add
dec
add
and
movs
jg
js
arpl
pop
inc
jno
ds
outs
sbb
push
fdivp
loopne
fcomi
ja
cmp
pop
outs
scas
int
adc
and
cwde
pop
inc
(bad)
aad
or
movs
retf
gs
scas
(bad)
scas
mov
sub
mov
(bad)
rol
lahf
adc
das
cmp
xchg
lods
pop
xor
adc
nop
xchg
sub
and
outs
clc
mov
pop
xchg
or
in
jbe
and
call
cmp
ja
(bad)
dec
add
fld
pop
cmps
dec
retf
mov
mov
fisubr
scas
hlt
cmp
add
push
adc
ins
ins
push
mov
push
es
sbb
pop
sbb
mov
fcomp
or
shl
inc
and
lods
mov
push
pop
jne
sub
cs
jnp
cmps
add
or
push
not
or
xor
mov
mov
push
gs
inc
xlat
mov
ins
adc
and
pop
add
xor
nop
or
push
retf
bound
jno
(bad)
not
push
inc
test
dec
popa
aas
jp
jns
mov
inc
ret
sbb
jae
ja
rcl
inc
daa
lods
leave
movs
popf
add
or
or
jl
xor
shl
sub
push
shl
mov
inc
adc
jnp
imul
adc
ret
and
and
and
adc
push
(bad)
mov
xchg
int3
shl
push
lock
or
retf
adc
repnz
xchg
mov
fstp
into
fdivr
sub
add
inc
and
data16
les
sbb
pop
bnd
pop
add
shl
dec
lods
jno
xchg
ds
push
jmp
mov
dec
icebp
cmp
cmp
xchg
outs
jns
mov
stc
push
mov
not
xchg
lea
fdivr
add
in
cmps
hlt
(bad)
imul
xor
cld
push
jmp
out
call
nop
jmp
div
xchg
retf
loope
mov
mov
jecxz
(bad)
cmp
and
in
popa
xchg
inc
xor
xchg
push
xchg
sub
cmp
ds
sahf
lock
mov
adc
jnp
add
xlat
fstp
out
push
aam
fadd
cmp
push
mov
sbb
add
mov
mov
dec
xor
inc
repz
cdq
mov
or
fxam
jae
(bad)
pop
mov
dec
xor
inc
pop
xchg
jns
popa
xor
data16
sbb
fldenv
(bad)
and
pusha
mov
psraw
xor
ror
pop
arpl
aad
jp
xchg
mov
adc
mov
jmp
mov
add
test
fdivp
xchg
aas
cmps
enter
shl
repnz
ret
and
jg
inc
xchg
(bad)
test
pop
mov
xchg
sbb
sti
inc
mov
(bad)
iret
and
and
lods
int3
in
pushf
outs
sub
daa
push
fsub
fcomp
retf
jns
lahf
stos
popa
pop
mov
popf
in
and
push
xor
jmp
js
test
xor
jb
jmp
pop
bound
popa
jno
adc
out
test
xchg
lods
shr
xor
xchg
shl
jns
dec
dec
ficom
cwde
cdq
and
sbb
outs
out
fidivr
test
ds
push
xchg
loop
fild
dec
fcomp
ds
inc
sub
ret
(bad)
fist
int
sbb
mov
push
push
cld
cs
sbb
test
xchg
icebp
repz
cmps
dec
rol
pop
in
ja
test
frstor
push
mov
jl
scas
lock
mov
(bad)
sahf
pop
dec
inc
test
gs
pop
fisttp
sbb
lds
mov
adc
cmps
cwde
daa
inc
mov
xchg
jmp
mov
add
mov
das
(bad)
std
jecxz
cmc
sub
sbb
mov
sub
adc
adc
dec
sub
inc
call
xchg
jb
ret
jl
outs
test
iret
inc
or
push
mov
test
repz
repz
dec
(bad)
ds
inc
mov
(bad)
adc
push
aad
rcl
cmps
clc
nop
arpl
pop
icebp
mov
out
inc
cwde
stc
cs
xlat
adc
jae
xchg
pop
xchg
or
pop
pushf
dec
scas
xchg
and
adc
sahf
and
outs
mov
sub
cmp
dec
mov
stos
bound
test
imul
pop
lds
retf
ror
jne
aaa
stos
(bad)
push
inc
cld
(bad)
pop
xlat
ins
push
adc
mov
retf
aas
cmp
dec
fcomp
int
fiadd
fisub
add
sub
test
mov
push
cmps
mov
pusha
icebp
xor
mov
fistp
mov
popf
add
loopne
xor
xchg
je
loop
mov
push
push
cmps
xor
jecxz
jp
loope
dec
add
ss
mov
mov
add
or
jbe
push
jmp
fidiv
fxch
retf
fdivp
xchg
or
retf
adc
imul
std
inc
push
cmc
or
mov
fsub
xchg
xchg
and
xchg
pop
pop
sbb
or
push
fcmovb
ret
mov
xor
lock
jne
dec
adc
cli
inc
mov
sbb
in
inc
pop
mov
mov
mov
inc
rcl
mov
sub
in
loopne
enter
dec
xchg
popw
cs
pop
cmp
shr
or
dec
es
dec
dec
retf
add
cmp
dec
out
mov
sar
mov
(bad)
movs
mov
and
sub
adc
dec
call
arpl
jmp
add
adc
cdq
jne
pop
mov
call
adc
and
mov
or
push
fdivp
mov
xchg
or
xchg
and
in
cmp
loopne
call
xor
push
rcl
stc
adc
icebp
int
fs
xor
mov
jo
mov
int
mov
aaa
add
inc
dec
add
cmp
mov
addr16
cmp
icebp
push
sbb
inc
adc
jbe
xchg
imul
lahf
mov
lods
fidiv
xchg
mul
pop
fucomip
fs
mov
cmps
push
mov
inc
bound
jecxz
movs
(bad)
jnp
test
adc
je
test
aas
jmp
and
popa
mov
lods
mov
retf
push
pop
mov
lods
shr
sub
or
push
je
lock
rol
mul
xchg
repnz
pusha
adc
lahf
xlat
retf
push
int3
test
dec
cdq
add
std
xchg
xor
jl
pop
push
fidivr
mov
dec
dec
mov
popf
cli
aad
xor
clc
mov
out
cmp
rcr
mul
fs
jecxz
mov
adc
jmp
test
push
sub
sbb
xchg
icebp
cld
and
in
xchg
sti
xchg
aad
inc
dec
add
push
popa
out
sub
pop
xchg
dec
push
jmp
add
mov
mov
jge
shl
xor
inc
repz
int
mov
push
xor
mov
outs
mov
je
jne
outs
sbb
sar
pop
jg
fidiv
arpl
mov
mov
dec
and
xchg
ds
adc
es
xor
ret
inc
lods
es
mov
out
cmp
mov
data16
imul
xchg
iret
sub
(bad)
sbb
movs
jae
rcl
pop
jmp
sub
cmp
enter
lock
push
retf
mov
int
and
sub
fild
pop
sub
jbe
push
mov
nop
les
imul
test
rol
ss
cmp
jnp
pusha
ins
rol
in
pop
mov
adc
push
js
inc
mov
or
mov
cmp
ja
sub
outs
add
das
stos
or
push
and
mov
jo
and
cmp
pop
cmp
mov
xor
push
(bad)
cmps
jb
mov
add
shr
xchg
push
sbb
ins
push
lods
xchg
in
dec
cmp
ret
outs
pop
pop
push
pushf
push
aas
jl
repnz
dec
jmp
aam
das
mov
aad
cs
jns
inc
leave
sub
jne
iret
(bad)
(bad)
call
xor
mov
xchg
je
mov
push
mov
rcr
sbb
jnp
fwait
shl
aaa
mov
dec
loop
shl
xchg
or
sub
(bad)
(bad)
sbb
jge
mov
(bad)
or
shl
(bad)
and
mov
or
mov
mov
(bad)
pop
inc
addr16
jo
mov
mov
mov
push
mov
sar
lock
adc
test
fist
and
mov
xchg
sar
inc
outs
ins
aad
sbb
dec
push
add
push
(bad)
je
jns
aad
add
fisub
jno
adc
call
push
xchg
inc
dec
addr16
mov
or
push
(bad)
cmps
xchg
call
(bad)
sti
sub
ss
jne
xor
sbb
or
or
lock
push
adc
xor
dec
dec
dec
mov
enter
adc
daa
out
cmp
inc
jl
mov
cli
xor
aam
movs
test
lea
sub
aad
add
xor
xor
push
jecxz
xchg
(bad)
mov
xchg
bound
jecxz
fwait
mov
stos
ja
adc
je
outs
adc
imul
mov
mov
data16
dec
sbb
inc
out
mov
jge
lds
add
dec
mov
mov
ret
loopne
xor
or
iret
js
sub
jne
xchg
push
ret
fisttp
stos
and
adc
inc
mov
ds
retf
mov
(bad)
sbb
xchg
pop
push
gs
cmp
jmp
fdiv
inc
es
sbb
mov
sbb
cmp
in
cld
dec
out
out
sub
shr
shl
add
je
adc
dec
push
xor
pop
mov
and
dec
push
in
mov
out
rcr
mov
ja
pop
imul
adc
ret
mov
dec
shl
movs
daa
pop
cdq
mov
push
outs
adc
mov
mov
push
xor
push
add
popa
ret
cmp
or
test
pop
arpl
sub
leave
or
xchg
pushf
es
leave
leave
add
cmp
xor
test
mov
es
and
je
mov
inc
inc
xchg
loope
ret
fld
pop
inc
fs
lds
and
jecxz
call
sbb
test
xor
push
sbb
in
mov
adc
and
cmp
mov
shl
xor
adc
or
sar
ds
mov
add
clc
inc
cmovno
sub
ret
jmp
cli
out
out
mov
fbstp
out
mov
xor
popa
jb
jnp
pop
ret
xor
dec
mov
aaa
jmp
ins
in
or
(bad)
cmps
cwde
and
xor
or
sar
pusha
dec
cld
stos
add
cdq
adc
mov
pop
push
or
xchg
jp
call
loopne
jne
mov
sbb
test
mov
dec
sub
ret
nop
ss
sbb
pop
inc
(bad)
repz
jno
cmp
scas
fs
retf
inc
or
mov
in
and
add
cmp
fldcw
aam
leave
sub
pusha
shl
jle
xchg
pop
and
popf
dec
and
jl
lds
test
out
aam
ds
scas
sub
lds
pop
adc
cdq
jg
pop
aam
push
hlt
sub
call
fsub
movs
jmp
(bad)
mov
out
jle
push
mov
pushf
pop
(bad)
add
lds
shl
gs
xchg
cld
retf
adc
xchg
test
inc
in
jno
push
pop
or
xor
dec
scas
loopne
shl
in
pop
cmp
lods
mov
mov
(bad)
mov
das
loopne
push
or
jns
adc
imul
mul
push
xlat
xor
push
jecxz
ins
lds
pop
push
popf
mov
push
cmp
mov
pop
push
(bad)
sub
inc
in
cmps
mov
out
pop
rcr
bnd
push
rcl
push
repz
rol
in
mov
fadd
and
cmp
sbb
cmp
pop
fucomi
out
mov
retf
lock
mov
sbb
add
cmp
and
or
add
mov
push
loopne
arpl
ss
outs
rol
sbb
(bad)
fist
fwait
jmp
outs
cmp
adc
cs
sbb
and
xchg
fadd
mov
sub
neg
adc
push
stc
(bad)
pop
push
jne
sbb
jmp
adc
cmp
or
out
or
cmc
jne
adc
js
(bad)
mov
jmp
dec
popf
rcr
shr
pop
xchg
jl
out
ror
rol
inc
movs
inc
and
xlat
or
or
lock
inc
cmc
adc
add
repnz
push
jae
dec
or
and
mov
mov
sahf
cmp
mov
cmp
mov
sub
jge
ror
xchg
sub
mov
push
(bad)
pop
mov
cmps
sub
or
xchg
aad
retf
or
add
xor
rcr
lds
adc
je
hlt
(bad)
repnz
rcl
jle
jle
ret
or
mov
outs
or
sbb
mov
adc
pusha
xor
ja
sub
pop
pushf
aad
pop
bound
gs
into
cmp
sub
push
cmp
outs
fsubrp
out
call
xor
mov
xlat
mov
adc
rcr
xlat
dec
neg
mov
xchg
mov
adc
add
xchg
(bad)
push
clc
std
mov
test
mov
std
jne
and
loope
aas
mov
into
and
inc
pop
mov
cmps
(bad)
cli
aad
mov
dec
bnd
dec
ds
mov
fnstenv
cli
ja
dec
inc
repz
xchg
(bad)
addr16
das
stc
inc
jge
push
repnz
cwde
and
cli
sar
into
jge
mov
sub
retf
jno
and
fcmovb
div
hlt
sbb
fwait
into
jb
(bad)
lods
(bad)
pop
add
dec
mov
xor
cli
xor
cmps
nop
stos
das
adc
add
test
cld
or
lea
jp
jns
(bad)
iret
dec
inc
or
jl
stos
jecxz
push
or
cmps
mov
inc
adc
(bad)
aam
dec
(bad)
or
and
clc
inc
in
add
mov
shl
es
pop
sub
js
movs
js
xor
stos
shr
outs
and
sbb
or
inc
xor
inc
in
jle
outs
push
mov
cmc
or
sbb
adc
mov
mov
dec
retf
pushf
or
sahf
xor
pop
test
push
and
movs
push
ja
xchg
lods
or
sub
leave
add
jb
mov
mov
pop
cmp
repz
test
cwde
hlt
ds
pop
pop
cmp
ins
jmp
pop
lods
xor
cmps
jnp
ds
jle
mov
inc
and
dec
xchg
(bad)
mov
loopne
fcomp
pop
or
fdiv
pushf
fdivr
bound
push
mov
add
push
xchg
inc
xchg
mov
enter
out
sub
pop
sub
jle
scas
mov
fcomp
and
xor
push
xchg
push
in
mov
jbe
dec
jl
call
hlt
dec
jb
lea
fprem1
or
adc
cmps
daa
iret
inc
aam
lods
test
daa
xchg
push
addr16
adc
jne
stos
sbb
(bad)
or
inc
call
xchg
cmps
les
daa
sub
jmp
sbb
loop
fwait
cli
pop
add
das
sbb
jmp
fsub
fcomp
dec
push
(bad)
push
dec
sar
xor
sub
call
cmp
jbe
pusha
ret
lock
cmp
mov
cmp
stc
mov
cmps
xor
pop
sbb
ror
xchg
jnp
aad
jnp
jl
adc
xchg
retf
push
loope
not
fisub
adc
shl
daa
bts
aad
sbb
(bad)
fsub
(bad)
loop
push
cmovno
or
jp
fidivr
dec
jecxz
(bad)
jne
popa
add
inc
and
in
inc
jno
hlt
nop
into
jae
fcmovnbe
or
pusha
cld
ss
test
outs
or
pop
mov
xchg
dec
xchg
(bad)
xchg
mov
pop
js
cli
cmp
int3
pop
mov
dec
ds
rol
mov
mov
enter
jp
loopne
ficom
push
fnstenv
lock
in
lock
xlat
jle
jo
jle
add
bound
in
jns
cmp
les
cmp
in
clc
inc
and
adc
fmul
mov
fdiv
(bad)
xor
inc
xchg
pop
iret
fwait
stos
aaa
sbb
mov
and
(bad)
adc
xchg
or
sbb
repz
or
adc
mov
stc
and
aas
xchg
loopne
xor
mov
push
lods
clc
or
xchg
pop
inc
fcmovbe
xor
lds
mov
retf
and
movs
dec
hlt
mov
inc
push
or
sub
and
xchg
xlat
dec
outs
dec
cmp
sti
test
adc
nop
xchg
sbb
cmp
jnp
adc
test
adc
lods
inc
xchg
imul
mov
js
mov
stc
sahf
pop
ds
dec
ja
lods
int3
mov
jge
and
xchg
jbe
stc
xchg
std
outs
mov
je
daa
dec
push
inc
imul
cld
aas
leave
fist
in
add
(bad)
jmp
add
cmp
sub
(bad)
jne
stos
push
mov
pop
pop
daa
loop
sub
push
push
nop
ja
cmps
xchg
scas
pop
and
push
int3
pop
adc
and
pop
(bad)
jle
cli
xor
cmp
mov
arpl
pusha
aad
int3
scas
repnz
mov
xchg
cmp
ja
or
lahf
xor
addr16
ds
loop
jg
cmps
test
and
inc
cli
mov
pushf
sbb
mov
mov
pushf
scas
push
in
mov
dec
gs
mul
xor
push
in
das
inc
sahf
ss
mov
sbb
das
cmp
idiv
adc
ret
adc
mov
push
xor
fdiv
fstp
stc
fbld
hlt
mov
or
cli
aaa
xchg
sbb
sbb
shl
les
(bad)
sub
cmp
sub
retf
push
dec
inc
xchg
inc
call
jo
imul
mov
das
nop
mov
retf
fld
clc
lds
in
sub
shl
xchg
add
xor
xchg
push
sti
call
stos
rcl
sahf
sub
sub
mov
and
xchg
adc
inc
mov
xor
retf
cmp
xor
mov
xchg
aam
dec
es
fldenv
sub
add
dec
xchg
and
push
test
shl
sub
cwde
(bad)
aam
mov
push
ret
inc
outs
in
dec
pop
inc
pop
xor
mov
aas
pop
les
dec
sbb
std
lods
ret
(bad)
cmp
sub
ins
fild
mov
shr
call
lods
shr
sbb
pop
movs
movs
inc
sbb
addr16
cli
test
js
jmp
fild
xchg
mov
add
push
sub
sbb
mov
test
aas
scas
xchg
leave
add
gs
inc
pop
inc
mov
xlat
scas
xchg
inc
retf
ror
fdivp
mov
(bad)
mov
inc
outs
adc
sbb
xor
jne
rcl
je
mov
ja
into
pop
xchg
clc
dec
into
add
mov
ss
mov
lock
mov
jns
xor
lock
jne
test
les
jae
or
scas
mov
sbb
in
lods
jl
pop
inc
jecxz
jg
push
jp
mov
mov
dec
mov
mov
mov
imul
add
xchg
enter
imul
and
adc
sbb
(bad)
in
push
sbb
int
stos
hlt
fimul
dec
add
sbb
in
fdivrp
(bad)
shr
stos
push
dec
push
call
in
hlt
add
pushf
daa
and
sub
aad
iret
xor
rol
gs
out
or
sbb
cmp
sub
mov
sbb
add
mov
xor
shl
test
cmps
push
out
lods
loop
mov
inc
push
out
ds
ret
cmps
sbb
push
aad
sti
sbb
aam
fist
and
mov
ficomp
pop
xchg
mov
imul
cs
nop
mov
lea
xchg
sub
daa
test
daa
add
(bad)
pushf
push
sti
sbb
cmp
and
pop
bound
add
int
nop
(bad)
cmp
out
jne
mov
push
imul
xchg
add
inc
mov
fcmovu
adc
jo
into
(bad)
test
mov
mov
ja
mov
cwde
push
push
add
fist
jnp
das
clc
pop
inc
cdq
add
add
not
ret
adc
mov
loope
dec
lods
cld
neg
dec
arpl
sbb
jns
(bad)
rol
push
push
ds
stos
int3
lods
xlat
aaa
outs
pop
xchg
jp
sub
test
fwait
jg
adc
jg
sub
cmp
lods
jge
out
into
pop
(bad)
lods
mov
push
dec
fadd
sbb
or
dec
inc
mov
pop
stos
add
mov
stos
retf
and
mov
sbb
xchg
out
out
xlat
xor
xchg
clts
mov
push
int
imul
ror
retf
push
into
push
enter
jbe
adc
mov
ffreep
ins
mov
xchg
adc
or
aad
push
pop
test
mov
leave
mov
adc
mov
hlt
ret
cmp
mov
add
xchg
rcl
fsub
jo
push
(bad)
cmp
ret
jg
and
movs
shl
mov
loop
mov
jle
lahf
mov
imul
ins
or
xrelease
rcl
cmps
in
and
leave
cmp
xchg
imul
ss
ins
dec
inc
es
dec
hlt
ffreep
cmp
jnp
fucomp
cld
adc
(bad)
daa
xchg
into
mov
std
push
and
adc
adc
std
xor
add
mov
xchg
push
dec
jo
data16
fmul
fsubrp
(bad)
loopne
sub
neg
mov
ss
ins
pop
mov
push
push
loope
arpl
inc
jmp
jo
xchg
adc
fsub
pop
pop
dec
xchg
pop
cli
or
shr
outs
ins
xor
loop
push
fld
clc
mov
mov
xchg
div
mov
ret
mov
or
mov
ret
inc
add
das
scas
pop
xchg
ss
out
dec
ror
mov
loopne
outs
pop
ins
xchg
sbb
(bad)
scas
sbb
cmc
pop
sahf
inc
stc
aad
jnp
repnz
fstp
xchg
push
xchg
cli
inc
inc
cwde
fisttp
call
arpl
mov
or
mov
sub
push
scas
sub
shl
inc
(bad)
xchg
dec
mov
xchg
les
add
retf
clc
or
mov
pop
xor
push
push
xor
adc
out
aaa
or
mov
xor
mov
xchg
pop
push
sub
add
(bad)
lahf
push
cli
jg
xchg
xor
cli
cmp
retf
in
sbb
xor
rcl
cs
xchg
push
or
fidivr
imul
xchg
pushf
loopne
or
pop
repz
cmp
mov
imul
xor
lea
test
xchg
mov
int
imul
cmp
mov
loopne
aad
repnz
dec
cmp
xchg
push
cli
sbb
out
test
int
and
loope
sbb
(bad)
mov
xor
cdq
mov
xchg
jp
call
push
and
rcl
hlt
stos
test
mov
bound
or
outs
add
cmp
dec
loope
and
nop
ins
or
inc
stc
ret
dec
mov
pop
int
ins
push
pop
in
jns
xor
rcr
sub
adc
adc
xchg
jbe
push
push
icebp
jge
stos
sbb
(bad)
adc
xchg
sbb
jne
or
mov
in
dec
nop
enter
js
lock
(bad)
scas
pop
mov
push
push
xor
sub
call
jno
(bad)
mov
stos
add
jno
outs
mov
cmp
sbb
xchg
jge
pop
das
movs
seta
pop
sub
xor
mov
push
lock
sbb
sbb
dec
mov
inc
mov
dec
fwait
mov
mov
mov
jge
js
sub
stos
ja
and
cmps
ja
push
pop
xchg
jbe
adc
ret
pop
xchg
add
cmps
mov
clc
(bad)
retf
call
adc
idiv
fdivr
xchg
out
push
mov
mov
pop
into
inc
cmp
pusha
add
push
js
dec
fst
ret
cs
stos
pop
lods
les
outs
gs
push
rcr
or
xor
pop
add
test
(bad)
cmp
daa
xchg
cli
das
packssdw
fwait
add
jne
push
jb
xchg
xchg
mov
xor
out
test
ret
inc
add
mov
mov
pop
sub
mov
xor
mov
or
xchg
fild
inc
shr
fstp
fcom
(bad)
mov
mov
mov
jecxz
dec
(bad)
or
add
mov
ins
test
rol
clc
out
sbb
sub
popf
test
aas
pop
(bad)
mov
mov
out
loope
aaa
push
in
xor
test
cmp
cs
stos
shl
and
cdq
pop
jle
shl
mov
das
dec
rcr
rcr
xchg
clc
mov
jmp
div
lods
in
adc
xor
sbb
jl
pop
mov
call
int3
xchg
pcmpgtw
movs
sbb
mov
out
jae
xchg
sbb
pop
or
pop
and
inc
jnp
les
adc
or
hlt
pop
xchg
sub
scas
mov
mov
mov
in
push
mov
into
iret
(bad)
out
jg
cmp
ret
mov
mov
lods
fisttp
clc
loop
dec
cmp
or
test
push
aas
mov
(bad)
test
mov
test
retf
mov
pop
dec
mov
xchg
aam
cli
cmp
mov
repz
inc
mov
mov
ins
push
(bad)
cmp
lds
xor
test
mov
push
jmp
je
nop
inc
cld
loop
ja
(bad)
jmp
mov
out
dec
das
je
push
xor
or
icebp
repz
or
cmp
call
xor
into
jmp
inc
cmp
aam
xor
and
add
add
gs
imul
xchg
cwde
les
dec
mov
ja
mov
lods
inc
stos
pushf
ss
shl
cld
xchg
int
outs
jo
mov
movs
popf
mov
sar
xor
js
xor
push
in
jo
add
cwde
xchg
ds
inc
aad
mov
in
xchg
cmps
lahf
jmp
pushf
(bad)
jb
int
out
pusha
cli
xor
cmp
mov
mov
pop
out
jnp
sbb
sub
inc
loope
mov
daa
inc
xchg
rcr
mov
aad
(bad)
push
jns
sar
out
adc
mov
test
fild
mov
jo
cmp
mov
cmc
jle
add
push
loope
sbb
and
js
test
test
bound
retf
loope
neg
mov
nop
ror
push
sub
lahf
aaa
cdq
sbb
inc
pop
adc
add
scas
arpl
cmp
loopne
stos
and
sub
cmp
pop
xor
pop
mov
push
pop
call
out
ret
and
sbb
fld
lods
bndldx
cmp
lock
ror
and
call
add
inc
mov
xchg
not
jbe
mov
scas
cmp
and
or
hlt
dec
shl
xchg
push
add
xor
push
push
imul
loop
neg
sub
imul
stos
repz
popa
xor
or
retf
push
mov
jns
inc
(bad)
push
out
lds
inc
jg
cmps
cmp
js
dec
loop
dec
mov
push
jg
xchg
outs
or
mov
fcmovne
imul
ins
dec
jno
xor
and
xor
inc
cmp
push
ja
idiv
fwait
sbb
and
sbb
dec
sub
js
fst
jbe
jge
ret
stc
add
sbb
and
ficom
fmul
push
mov
(bad)
call
mov
cmp
dec
mov
fs
daa
push
aaa
scas
out
das
jo
call
push
fmul
inc
inc
sahf
adc
std
loop
loopne
jle
js
fimul
xchg
jg
lahf
fs
inc
js
add
cdq
bound
mov
jb
clc
cli
xor
retf
and
sbb
sbb
mov
sbb
mov
xor
mov
and
push
in
daa
adc
frstor
imul
add
push
xor
sahf
and
shr
ror
or
lea
sbb
adc
int
(bad)
pop
(bad)
movs
gs
push
mov
mov
scas
or
sahf
jecxz
out
pop
test
scas
sub
jl
ret
test
cmps
stos
lock
jb
sub
jbe
ss
pop
dec
adc
mov
cmp
gs
mov
push
sbb
dec
or
jae
mov
cmc
sahf
popf
or
clc
sahf
ror
ins
or
movs
es
pop
js
and
push
and
cmp
je
pusha
das
pop
stos
das
adc
xor
add
push
aas
jmp
xchg
xchg
and
jmp
movs
arpl
mov
push
inc
or
jg
int3
in
jae
repnz
retf
gs
stos
cmp
pop
fwait
enter
sub
mov
push
rcr
ss
mov
adc
add
ja
cmp
xor
cmp
xor
cmp
sahf
cli
test
dec
jmp
mov
adc
inc
sbb
jbe
iret
shl
push
cmp
jne
popa
sbb
fild
xchg
aaa
ins
popf
mov
aaa
adc
push
loopne
adc
stc
iret
dec
mov
scas
push
popf
sbb
out
cmps
sbb
gs
add
push
pop
int
cmp
lea
inc
pusha
cmps
daa
ins
pop
inc
mov
call
stos
aas
cmp
pushf
cmp
sbb
pop
test
movs
loop
cmps
mov
imul
cmc
or
and
mov
and
mov
cmps
mov
je
les
mov
push
mov
inc
int
pop
xchg
test
mov
cmp
inc
ret
(bad)
inc
xor
out
push
into
jecxz
aas
shl
clc
call
push
jp
xchg
or
cmp
mov
int3
mov
mov
(bad)
ret
ja
popf
mov
movs
bound
pop
loopne
mov
cmp
mov
xchg
outs
pop
fidiv
xor
cmps
sub
shl
clc
retf
mov
retf
pop
cdq
pop
test
jl
fsub
xor
repnz
lock
xor
test
fs
cmp
(bad)
jge
jmp
popa
and
mov
fld
dec
js
sub
add
dec
shr
cmc
dec
icebp
push
mov
jno
iret
test
xchg
(bad)
mov
std
pop
call
mov
and
sbb
outs
data16
enter
(bad)
jmp
mov
sub
xchg
and
(bad)
lock
loop
stc
fcomp
aam
xor
xchg
jp
std
add
fild
push
sbb
nop
push
push
or
(bad)
and
cmps
movs
ss
pop
je
xor
push
inc
ror
leave
pop
xor
add
sar
out
push
pop
and
or
push
cmp
push
out
(bad)
or
ret
retf
aaa
dec
sub
int3
stos
inc
sub
add
jl
(bad)
lock
sbb
xchg
push
jo
call
sub
and
(bad)
clc
push
sti
cmc
add
and
inc
mov
xchg
push
xor
sbb
icebp
fist
pusha
(bad)
xlat
dec
fisttp
hlt
mov
int3
inc
out
jne
jb
pop
xor
popa
and
aaa
jmp
dec
out
imul
enter
bound
pop
xor
call
stos
sub
inc
sbb
push
add
pop
sub
pop
test
add
push
pushf
es
adc
inc
pop
xchg
mov
and
(bad)
push
ret
aas
sar
dec
mov
out
and
jecxz
cld
movs
jecxz
sahf
pusha
aad
jmp
cld
repnz
xor
and
mov
ret
test
inc
out
addr16
pop
xlat
adc
jg
sbb
adc
retf
pop
xchg
cmp
stos
fstp
std
xor
test
or
nop
es
mov
ret
adc
add
setnp
ins
mov
mov
mov
xchg
mov
and
(bad)
sar
cmp
test
pop
push
stc
adc
add
dec
in
add
jle
lea
test
or
push
icebp
jecxz
add
fist
push
add
pop
jne
pop
xchg
adc
push
outs
cmp
loop
call
or
mov
mov
movs
cwde
icebp
dec
jp
cmps
pop
stc
sbb
loop
jle
std
mov
xchg
mov
call
add
xchg
push
xchg
clc
xchg
xchg
adc
mov
dec
sbb
pop
enter
test
sbb
xchg
mov
adc
out
clc
lahf
call
jmp
push
mov
lods
je
and
mov
jg
je
push
mov
sbb
ins
out
lods
mov
sub
dec
fisub
push
fwait
icebp
in
xchg
dec
and
test
xchg
sar
cs
movs
ficomp
arpl
cli
inc
aaa
cmp
add
inc
out
cmps
imul
adc
rol
clc
outs
sbb
fisubr
repz
cmp
mov
add
and
test
jo
in
fbstp
es
add
sub
mov
dec
cwde
inc
mov
dec
add
loop
sti
aad
xlat
je
and
adc
pop
cmp
mov
and
ins
aas
inc
dec
addr16
cmps
push
cmp
cmp
xor
pop
inc
dec
mov
sub
stc
ins
jo
mov
stos
jle
out
out
and
sub
mov
jno
jne
fucomp
loopne
push
mov
push
mov
xchg
fidiv
xchg
ret
pop
call
adc
push
push
inc
ficom
cli
cmp
mov
sub
mov
fsubr
pop
sar
xor
mov
cdq
xor
out
inc
out
loope
es
(bad)
sub
dec
pushf
mov
jno
lea
(bad)
mov
cmps
sub
loop
push
hlt
loope
push
sub
adc
xchg
mov
aaa
inc
in
mov
ds
push
push
test
lods
dec
xchg
jecxz
xchg
xchg
sbb
inc
sub
xchg
fnstsw
sahf
push
arpl
out
(bad)
jecxz
lods
push
add
pop
js
mov
sub
sub
mov
xchg
enter
jno
cli
loope
xor
pop
repz
aas
inc
lea
mov
mov
mov
cwde
cmps
in
in
push
stos
sub
movs
out
or
out
call
stos
mov
lock
rol
outs
cmovno
adc
mov
mov
push
sbb
sbb
push
pop
test
movs
scas
rcr
pop
pop
push
or
xor
mov
test
mov
inc
and
xor
aaa
inc
(bad)
out
icebp
add
cmps
fstp
jmp
xchg
inc
jmp
rol
outs
or
out
xor
pop
or
sbb
fwait
push
pop
cmps
pop
cmp
cmp
ss
retf
loopne
fist
jmp
mov
fbld
jge
adc
inc
push
stos
sti
es
pop
fldcw
inc
stos
dec
sbb
inc
sub
(bad)
dec
nop
jle
(bad)
xor
loop
xor
add
mov
(bad)
push
gs
ret
push
pop
out
pushf
and
mov
dec
xchg
fcom
inc
test
push
adc
jmp
push
(bad)
add
pop
push
sub
pushf
outs
mov
lock
iret
xor
adc
fidiv
add
inc
push
test
dec
rcr
leave
mov
les
push
jecxz
sub
ins
stc
jne
or
or
and
and
cmp
repz
repnz
mov
inc
fnsave
inc
and
pop
test
lods
call
rcr
loopne
shr
cmp
pmulhuw
aas
gs
rcl
sar
pop
sub
pop
je
in
xchg
inc
add
mov
or
stos
push
movs
or
push
call
pop
fs
retf
dec
add
push
sbb
add
push
fstp
fcomip
push
mov
mov
push
xchg
dec
pop
sbb
cli
pop
repz
jg
rol
std
cmps
out
sbb
movs
or
xchg
xor
xor
jne
adc
fistp
repz
call
mov
xchg
jns
in
fisub
pop
test
mov
neg
push
adc
mov
and
leave
pop
and
mov
add
add
popa
and
shr
ss
xor
cmp
fcomp
push
ins
ffree
xlat
mov
call
inc
sbb
ret
mov
inc
adc
xchg
xlat
cmc
cdq
adc
sbb
mov
xor
mov
sub
dec
or
mov
mov
inc
(bad)
and
or
push
jb
xor
pop
jns
pop
cmps
(bad)
jno
mov
ret
inc
call
les
sub
js
fwait
add
inc
cdq
pushf
fistp
inc
mov
sub
mov
jb
ds
sub
pop
dec
inc
stos
retf
jns
sbb
out
mov
in
cmp
cmp
cld
pop
cwde
adc
adc
and
or
ja
(bad)
and
leave
repnz
scas
xchg
mov
loop
xor
mov
pushf
mov
ss
jecxz
push
xchg
mov
sahf
aaa
xor
pop
popf
scas
mov
jl
sahf
aaa
xchg
aas
pop
push
daa
add
jge
push
ja
cdq
adc
cmp
outs
xor
loopne
add
pop
jnp
sar
das
xchg
test
jg
jbe
addr16
xor
push
imul
(bad)
adc
idiv
sbb
dec
cmp
push
ja
sbb
inc
cwde
mov
sub
mov
or
mov
pop
dec
fdiv
pop
mov
test
xor
jbe
in
jg
mov
sub
cmp
add
xchg
add
add
jae
das
sbb
out
pop
jp
jl
push
std
dec
test
mov
ret
push
push
loopne
sbb
pushf
gs
adc
aas
into
sti
int
xor
imul
jge
ss
loop
fs
call
jo
cs
in
imul
inc
dec
cs
lock
out
es
cs
mov
push
scas
sbb
jmp
jmp
pop
fld
lahf
xchg
xchg
and
mov
cmp
sbb
xor
mov
cmc
jmp
(bad)
popa
jb
cli
out
adc
cli
ja
add
xor
jmp
mov
mov
dec
push
add
lods
cwde
aas
adc
fwait
mov
or
int3
and
and
mov
imul
test
(bad)
int
push
pop
stos
sbb
daa
fs
popf
mov
and
in
outs
mov
pop
ds
xor
xor
xchg
fwait
sub
xchg
inc
mov
(bad)
iret
int
inc
push
lea
inc
(bad)
popf
mov
int3
xor
les
ret
dec
sbb
or
inc
cdq
stos
cld
cs
dec
add
xor
pop
outs
sbb
sub
xchg
lea
sub
mov
and
add
movs
push
mov
aad
cmp
sbb
cmp
sub
mov
mov
icebp
add
xor
sub
out
sub
dec
and
pop
push
push
hlt
rcr
enter
in
and
(bad)
jl
cld
push
inc
cmp
mov
xlat
cmp
fcomp
sahf
outs
in
in
adc
and
inc
sbb
mov
pop
inc
ror
dec
push
retf
push
add
nop
retf
(bad)
jmp
mov
add
dec
outs
adc
cmp
adc
push
push
sub
enter
xchg
sbb
add
fcmovb
mov
dec
xor
daa
push
jle
out
and
ins
loop
dec
xor
lahf
push
(bad)
jb
popa
push
in
jno
mov
dec
jl
push
(bad)
pop
arpl
rol
movs
pop
push
imul
lock
inc
push
push
pop
mov
enter
shl
sbb
mov
mov
pop
add
mov
push
xchg
jns
es
pusha
add
mov
mov
sbb
out
bswap
inc
addr16
adc
mov
ror
out
jecxz
dec
aad
sbb
cmp
cmp
rcr
xor
popa
mov
fsubr
(bad)
popa
fidivr
pop
call
pop
lea
sbb
adc
or
cwde
ja
shl
mov
push
je
imul
lahf
cmp
cmps
fnstenv
addr16
lods
jo
push
cmp
jmp
sub
jl
adc
fucomp
xlat
jp
cmps
inc
lahf
shufps
sbb
mov
jmp
hlt
stos
xor
shr
xor
into
pop
adc
lds
retf
mov
or
es
stos
inc
push
test
mov
xchg
lds
dec
ins
ja
and
sbb
jo
nop
enter
std
call
jbe
das
pop
dec
call
int3
inc
ja
pop
aad
sub
stos
outs
add
mov
les
and
fst
xchg
retf
xchg
dec
fwait
(bad)
jbe
leave
mov
add
aad
push
adc
fwait
mov
fstp
add
imul
cdq
jbe
mov
inc
sti
sub
lds
pop
lock
sub
enter
gs
lods
cwde
(bad)
sub
inc
fdiv
(bad)
mov
xchg
sahf
push
mov
dec
adc
out
push
cmp
cmp
aam
sbb
iret
xchg
add
cmp
in
stos
jmp
inc
int
xchg
mov
in
cli
and
dec
scas
in
js
test
call
cwde
inc
call
pop
outs
in
sbb
repnz
cs
xchg
aad
xlat
dec
sub
aam
sub
ficomp
leave
pop
bound
daa
adc
xchg
mov
dec
fld
repz
nop
fstp
sub
xchg
push
jns
ret
dec
cmps
test
xor
xlat
inc
or
and
mov
mov
pop
mov
aaa
outs
adc
popa
lods
mov
pop
mov
mov
ret
inc
mov
and
sti
pop
mov
scas
movs
inc
std
ins
jnp
mov
xchg
(bad)
push
jnp
inc
and
sti
adc
sub
pop
push
push
dec
or
push
mov
push
loopne
test
aas
(bad)
ins
rcr
and
mov
int
xchg
or
and
mov
repnz
lahf
add
cli
sub
jo
mov
(bad)
icebp
iret
push
iret
adc
lea
xchg
aam
adc
pop
hlt
stos
jmp
sub
adc
out
sub
je
mov
push
cmc
cmp
leave
outs
test
push
movs
into
std
fcomp
fcom
jbe
mul
cmp
jle
std
push
and
jmp
sub
fisub
inc
mov
int3
(bad)
arpl
xor
xlat
cmp
leave
sub
and
xchg
jle
(bad)
mov
aad
sub
push
imul
out
rol
jno
inc
xlat
push
jle
cld
push
and
fmul
push
jae
test
stos
lods
arpl
fwait
mov
and
xchg
adc
jl
es
cmp
iret
jecxz
je
mov
xor
mov
mov
adc
icebp
xor
push
mov
push
jle
cli
cmps
xor
inc
xor
and
fwait
stos
sub
xchg
and
or
mov
ss
push
into
not
xchg
je
mov
fucomi
pop
and
(bad)
pushf
cmp
add
sbb
add
cs
mov
mov
shr
out
mov
je
stos
imul
xchg
cmps
push
les
pop
add
and
nop
js
imul
add
sbb
sub
dec
cwde
dec
lods
cwde
jno
xchg
or
xchg
aaa
cs
test
mov
fwait
sahf
jge
icebp
into
dec
jo
cdq
dec
ins
popf
sub
mov
jmp
test
add
mov
push
pop
outs
or
xchg
icebp
xchg
jg
sub
shl
ins
test
jo
jecxz
adc
push
mov
imul
xchg
mov
test
mov
inc
xchg
jp
lds
cmp
jne
mov
pop
clc
(bad)
js
aas
jmp
push
pop
pop
cmp
js
cmc
xchg
xchg
xchg
aas
js
rcl
jno
xchg
stos
sub
pop
adc
les
cli
add
pushf
mov
xor
jmp
mov
rcr
aad
loop
mov
push
pop
(bad)
mov
adc
pushf
es
into
adc
inc
stc
cmp
shr
jmp
test
push
cmp
test
test
and
imul
or
icebp
shl
jge
xor
into
mov
nop
sar
loope
(bad)
dec
mov
dec
inc
imul
sub
rcl
xchg
inc
push
adc
push
add
adc
jg
out
mov
push
(bad)
fild
aam
dec
inc
cmp
cmp
mov
fs
shl
adc
out
lahf
(bad)
jbe
jecxz
jnp
stc
call
add
leave
ficom
cmc
sub
sbb
popa
mov
loope
push
or
fldcw
xor
mov
(bad)
jns
add
mov
mov
lods
push
fadd
and
icebp
xchg
and
popf
adc
dec
jns
(bad)
rcl
in
fmul
das
mov
call
shr
xchg
pop
hlt
fs
(bad)
inc
mov
dec
mov
fwait
outs
dec
cli
movs
jmp
mov
mov
push
and
stos
je
mov
mov
rol
in
mov
and
dec
sub
dec
jge
mov
mov
repnz
or
sti
mov
push
push
push
pop
je
add
inc
ficom
ss
or
fiadd
repnz
and
mov
dec
es
int3
gs
pop
mov
pop
sbb
cmp
inc
or
xchg
mov
cs
xchg
ret
js
or
pop
inc
adc
adc
jp
jb
cmp
hlt
pop
mov
jmp
popf
aaa
cmps
adc
out
retf
mov
into
in
inc
xchg
inc
retf
jbe
hlt
aaa
frstor
cmps
mov
adc
les
push
or
sbb
sbb
cmp
push
inc
pop
xor
cmp
jo
pop
mov
sbb
fwait
stos
out
and
(bad)
mov
sbb
cmp
inc
and
fbld
lds
add
cmp
out
sub
add
cmps
cmp
push
push
pop
xchg
pop
sahf
ins
sbb
xchg
and
inc
mov
add
add
adc
data16
xchg
or
mov
push
mov
push
cdq
jno
jo
call
push
sub
push
jmp
sbb
(bad)
mov
mov
popa
and
test
enter
mov
jmp
or
lock
cmc
mov
test
test
lods
or
shr
dec
xchg
inc
test
test
imul
cmp
xchg
jg
stos
jg
xchg
int3
ficomp
(bad)
lods
int
sbb
out
lock
popf
dec
faddp
dec
test
dec
sti
rdmsr
jmp
push
pop
mov
enter
adc
lods
in
fidiv
cmp
loope
push
arpl
(bad)
mov
call
je
push
fbld
retf
dec
mov
imul
jbe
pushf
loopne
(bad)
inc
loope
mov
test
(bad)
fdivr
cmp
inc
add
lea
push
rcr
or
ret
mov
pop
jae
pusha
cmp
mov
je
push
mov
js
mov
push
pushf
cdq
dec
stos
ret
in
movs
fmul
int3
sub
adc
mov
jg
fistp
imul
jg
ss
inc
sbb
mov
leave
rcr
push
fisub
mov
out
pop
loop
mov
call
mov
popf
stos
loopne
pop
loope
xchg
fwait
mov
ficomp
jo
mov
or
mov
push
sub
cmp
xlat
mov
repz
mov
add
std
shr
ins
fcom
mov
xor
je
inc
in
jg
push
aad
cmp
jo
ret
rcr
pop
out
inc
(bad)
pop
sub
pop
cmp
jmp
jnp
pop
or
push
xor
mov
mov
xchg
aad
inc
xchg
retf
addr16
inc
retfw
es
mov
push
jb
push
xchg
add
fadd
sub
out
adc
jl
push
sbb
mov
inc
dec
xor
xor
pushf
ja
(bad)
xchg
push
mov
mov
outs
inc
repz
jmp
ds
sbb
cwde
dec
add
mov
sar
scas
popa
rcr
pusha
push
xchg
inc
std
std
mov
xor
jo
sbb
and
cmp
jns
push
dec
aaa
push
push
push
jge
rcl
cli
sub
mov
stos
pop
push
and
mov
outs
xchg
mov
mov
js
and
cmp
fdivr
push
add
and
out
sbb
sbb
aad
adc
jecxz
cmp
xchg
cmp
clc
jg
scas
(bad)
sbb
fnstcw
and
adc
addr16
jge
or
cdq
or
pop
jmp
sar
inc
mov
lahf
je
sar
adc
mul
mov
mov
ret
push
jae
add
stos
xor
jmp
jmp
rcr
inc
pop
push
dec
dec
mov
jecxz
inc
or
retf
sbb
pop
inc
mov
sar
mov
jl
addr16
or
pop
dec
cmps
loopne
push
xchg
dec
mov
bound
cs
jmp
sbb
xor
or
das
xor
cmp
push
dec
in
and
fild
lahf
pop
arpl
mov
shr
push
rol
push
mov
pushf
xlat
cli
inc
sbb
pop
cwde
xchg
call
sub
shl
imul
loopne
(bad)
jmp
ret
icebp
dec
cmp
or
ins
adc
jge
pop
jb
fwait
cmp
fbstp
dec
lods
inc
test
xchg
mov
leave
ins
fwait
(bad)
fistp
sub
xor
rcr
sbb
pop
mov
mov
shr
out
outs
shl
sbb
push
(bad)
pop
add
push
dec
sub
cmps
push
xchg
inc
mov
shl
cmp
jecxz
js
add
inc
nop
lds
cmp
mov
sub
push
xor
arpl
sbb
imul
xor
sub
cs
loopne
pop
retf
call
(bad)
fwait
pop
mov
loope
xchg
mov
js
or
push
ss
loop
dec
sub
pop
jbe
das
push
es
fidivr
retf
push
add
xchg
jl
aam
dec
mov
dec
mov
iret
mov
sbb
and
and
pop
xchg
loop
das
push
jg
test
ret
sbb
dec
add
and
into
(bad)
jle
mov
inc
xor
mov
jae
adc
ja
mov
outs
addr16
mov
jae
mov
repnz
sbb
jns
mov
repz
cmps
cdq
sub
push
sbb
cmps
sub
mov
pop
das
pop
mov
test
nop
dec
repnz
jl
or
jecxz
rcr
mov
cmp
icebp
dec
inc
mov
and
pop
push
arpl
lds
adc
scas
dec
jl
data16
mov
add
push
mov
cmp
cld
lds
clc
sbb
dec
mov
dec
push
inc
sar
mov
pop
dec
lock
jnp
xchg
dec
(bad)
mov
cmp
sbb
iret
add
fisttp
into
rol
mov
push
push
test
jmp
in
push
jg
jp
mov
xchg
iret
jnp
mov
pop
pop
push
data16
pop
mov
es
cmps
push
sbb
rol
movs
fwait
mov
out
adc
out
js
pop
or
ins
cmps
stos
or
push
test
js
(bad)
push
sub
add
add
add
out
mov
jo
and
xchg
fwait
out
pop
pushf
jns
je
adc
ret
repz
aaa
aaa
adc
dec
stc
in
into
push
out
movs
stos
cli
lea
in
das
or
not
add
fst
jae
ret
lock
sbb
bound
dec
out
js
jnp
mov
gs
mov
add
mov
adc
sti
loope
sar
adc
pusha
jp
dec
ret
push
fwait
cmp
adc
push
push
popf
mov
sub
dec
pusha
xor
aaa
sub
cmc
(bad)
cmc
push
mov
push
unpcklps
int3
ss
ins
nop
mov
jne
in
enter
mov
add
cmp
cmps
push
fdivr
ss
sti
data16
cmp
xor
neg
test
data16
mov
iret
mov
cmps
lods
movs
inc
fimul
xor
cmp
pusha
hlt
pop
lds
xchg
jmp
dec
pop
mov
pusha
lea
adc
nop
test
rcr
pop
cmp
inc
fsub
jmp
ret
jmp
inc
(bad)
pop
cld
or
and
or
outs
ins
jg
cmp
and
bound
adc
and
pop
lahf
jmp
pop
pop
jl
out
dec
fild
(bad)
sti
shr
or
sbb
pushf
popf
pop
jae
mov
in
inc
ds
stos
mov
adc
js
add
mov
movs
aas
adc
sub
mov
push
dec
dec
enter
add
mov
loop
mov
fiadd
xor
pop
stos
arpl
sbb
dec
add
mov
ds
or
fwait
sbb
jmp
cmp
push
cdq
cmp
mov
retf
adc
mov
sbb
fwait
jecxz
cli
push
xchg
and
and
mov
mov
jecxz
repz
stos
fucomip
jg
mov
outs
add
in
sub
pop
push
jmp
add
(bad)
mov
mov
imul
xchg
adc
shr
loop
pop
or
ret
dec
xor
cmps
xchg
mov
sbb
push
xor
(bad)
int3
repnz
push
sub
and
jge
movs
add
mov
push
xor
xchg
mov
or
xchg
shl
sub
mov
int
push
int3
mov
adc
mov
popf
dec
ds
or
pop
inc
ss
cs
cld
jp
sub
push
adc
stos
pop
test
mov
mov
call
jg
jmp
or
mov
adc
ret
dec
push
inc
aad
leave
loop
lds
push
inc
clc
mov
(bad)
cmc
in
retf
fsubr
ret
sub
jg
mov
xor
mov
fist
retf
jmp
sub
shr
sti
push
mov
leave
js
xor
repnz
out
inc
(bad)
(bad)
data16
jmp
sar
iret
or
sub
mov
fld
outs
ficomp
inc
test
int3
or
push
jno
xor
cmp
add
nop
mov
mov
jns
std
jle
aam
mov
in
test
or
gs
mov
mov
sahf
xcrypt-ecb
cmps
or
out
inc
pushw
les
jge
xchg
sub
and
add
out
adc
jb
ror
xor
mov
sbb
or
push
push
dec
or
ins
lea
lods
cwde
icebp
inc
pop
pop
or
push
ins
mov
aas
nop
in
mov
mov
or
test
xchg
movs
mov
adc
mov
inc
xchg
je
mov
enter
mov
mov
imul
and
or
scas
xor
sti
icebp
div
arpl
test
fcmovu
pop
mov
mov
mov
in
mov
xchg
gs
nop
in
(bad)
cmp
fnstenv
out
sbb
(bad)
adc
dec
fdiv
fiadd
jnp
and
push
je
fdivr
and
sbb
pusha
(bad)
xor
test
popf
sbb
jp
pop
(bad)
sbb
push
jl
cmps
hlt
test
pop
pop
jmp
(bad)
mov
sbb
ja
xor
stc
imul
mov
mov
xor
jnp
repnz
loope
outs
jp
push
in
fstp
dec
movs
jge
in
popf
dec
inc
in
in
xor
data16
mov
les
xchg
mov
mov
sub
loop
mov
mov
rcl
jo
(bad)
(bad)
popf
and
js
scas
xchg
pusha
(bad)
adc
mov
scas
sbb
fisub
rcl
mov
fnstsw
mov
movs
les
fmul
push
outs
push
adc
aad
jp
pop
loopne
xchg
push
int
sbb
mov
and
mov
jae
movs
icebp
adc
aaa
daa
std
sub
xor
das
loopne
ds
sbb
inc
out
pop
cmp
dec
sahf
sub
jns
inc
fnstsw
push
adc
jae
in
and
test
fucomp
dec
addr16
xor
pop
sub
stc
dec
sbb
adc
movs
mov
mov
push
sbb
pop
cmp
retf
xor
mov
inc
ds
mov
mov
(bad)
jp
mov
xchg
add
cld
pop
out
fisub
jo
mov
out
pop
push
sar
mov
inc
cmp
xchg
mov
cmc
mov
mov
adc
dec
fiadd
nop
scas
leave
hlt
cmp
or
sub
and
inc
sub
mov
jmp
fsub
jne
inc
sub
xchg
rol
pop
sbb
adc
rcr
(bad)
rcr
dec
and
push
nop
call
pop
push
mov
sbb
jne
jmp
loopne
test
mov
push
stos
(bad)
icebp
mov
pop
cmp
lds
mov
into
push
xchg
pop
adc
mov
fistp
xchg
push
push
arpl
xor
push
dec
pushf
retf
add
pusha
bound
xor
adc
in
push
mov
xor
pop
cs
mov
mov
call
cmp
(bad)
pushf
retf
push
mov
lock
pop
pop
js
adc
sub
out
inc
and
pusha
add
or
loopne
aad
fs
mov
retf
and
outs
cmp
or
mov
pop
(bad)
movs
sub
sar
stos
(bad)
push
pop
jmp
mov
push
rcl
sub
dec
aaa
loope
movs
aaa
or
dec
push
popa
add
cwde
push
xchg
ja
jo
(bad)
dec
mov
push
les
mov
inc
jmp
pop
test
jns
xchg
fcomp
ds
or
cmp
sbb
fcomp
dec
sub
stos
push
into
(bad)
jnp
inc
ret
mov
xchg
iret
mov
adc
jo
jecxz
jge
sahf
jno
aas
sub
add
dec
pushf
dec
push
icebp
repz
cmps
xor
jg
xor
shr
in
test
(bad)
or
mov
dec
(bad)
es
or
imul
jg
xor
mov
or
and
repnz
mov
pop
ins
gs
or
inc
push
pop
ret
popa
sbb
out
mov
das
mov
or
imul
sub
stos
jmp
je
xor
out
cmp
loop
push
out
push
imul
xor
test
push
sti
xchg
push
jo
jnp
scas
daa
es
mov
fdivr
push
pop
pop
and
push
lahf
pop
(bad)
mov
out
push
bound
inc
push
xchg
cmp
retf
test
sahf
adc
and
dec
pop
or
retf
pop
dec
jnp
hlt
cmp
xchg
sbb
mov
sahf
shl
jns
retf
pop
scas
cs
in
cdq
(bad)
mov
out
sub
xchg
bound
push
ins
xchg
cmc
ss
xor
in
adc
or
aad
pop
fadd
inc
sub
arpl
retf
cmp
pop
mov
inc
cdq
inc
movs
push
int3
and
in
hlt
imul
rcr
dec
jl
(bad)
scas
pop
sub
mov
aam
fiadd
adc
repz
cmp
ret
push
call
inc
loope
fiadd
ret
jle
rcl
jno
mov
xor
mov
mov
adc
xchg
adc
sub
ins
add
cmps
fnstenv
jmp
and
inc
movs
push
rcl
cdq
add
hlt
sbb
mov
lahf
out
cmp
mov
call
inc
jmp
mov
lods
les
add
loop
into
leave
popf
stos
daa
jmp
pushf
mov
js
xchg
adc
popf
daa
arpl
xchg
mov
imul
mov
xlat
into
mov
movs
sbb
pop
jne
test
sbb
retf
jmp
into
rcr
jle
(bad)
mov
jecxz
div
fld
(bad)
addr16
pop
cld
stc
inc
in
or
pop
arpl
mov
daa
inc
pop
data16
(bad)
jle
fcomp
add
push
mov
push
sub
and
jecxz
jb
(bad)
ds
inc
jne
mov
std
pop
cli
loopne
jge
push
test
inc
mov
shl
int3
movs
cwde
mov
rep
inc
jae
ret
and
lods
sete
push
into
adc
out
xor
iret
adc
inc
dec
or
xchg
pusha
mov
dec
mov
out
mov
xchg
inc
inc
out
in
std
and
cs
lahf
imul
dec
pop
mov
arpl
jle
and
mov
add
xor
mov
test
fdivp
dec
hlt
call
ins
jb
daa
scas
sbb
sbb
pop
push
pushf
xchg
movs
jb
rcl
(bad)
jg
cmps
arpl
in
xor
jle
xlat
(bad)
jle
jns
cmp
ror
aas
(bad)
(bad)
jmp
das
ins
shl
mov
adc
(bad)
dec
adc
cmp
dec
jmp
call
adc
imul
std
daa
retf
sub
enter
aad
mov
les
push
dec
sbb
out
sub
jbe
pusha
jmp
dec
inc
hlt
les
cmp
repnz
lock
shl
test
add
or
int
and
jne
push
iret
not
mov
push
cmp
jecxz
cmp
jbe
mov
fild
or
(bad)
cmp
hlt
jg
mov
aam
xlat
fldcw
popf
(bad)
sub
jl
sbb
in
pop
dec
outs
jmp
xchg
mov
sbb
mov
dec
loope
aas
mov
pop
out
loop
in
cwde
sbb
mov
(bad)
jle
inc
push
and
pop
mov
rcl
mov
ja
sbb
xor
xor
les
dec
movs
fcomp
cmps
sbb
jmp
jb
dec
pusha
inc
je
dec
ins
fwait
sti
mov
sub
loope
pop
mov
mov
cmp
cmps
js
stos
mov
adc
ins
xor
jbe
push
pop
cmp
add
js
sti
cmp
ret
ret
aad
js
fdivr
cmp
mov
call
dec
xchg
mov
lods
pushf
mov
jno
inc
dec
scas
and
jmp
push
dec
(bad)
jmp
adc
dec
cmp
in
push
mov
mov
scas
(bad)
jp
jb
adc
mov
sub
ret
in
jge
in
iret
add
scas
les
gs
hlt
sub
add
pop
push
mov
test
inc
pop
inc
enter
aad
pop
sbb
xchg
ja
nop
and
cs
data16
and
gs
mov
gs
inc
push
ror
dec
dec
pop
xchg
and
iret
mov
pop
cmps
shl
in
mov
pop
dec
ret
into
je
xor
sub
mov
std
dec
cld
lock
(bad)
pop
sahf
inc
sbb
out
xchg
dec
mov
ins
cwde
pop
(bad)
push
not
dec
jmp
push
xchg
xchg
icebp
ins
pop
(bad)
pop
push
jnp
aas
retf
jb
xor
popf
pop
xchg
mov
xor
sti
mov
aaa
iret
test
cs
mov
cmc
cmc
xchg
push
adc
xor
(bad)
adc
mov
jecxz
aas
retf
pop
pop
mov
sahf
or
push
xchg
sub
jl
and
cdq
push
not
data16
mov
inc
add
leave
retf
in
mov
mov
jp
int3
mov
xlat
pop
das
and
pop
sbb
jmp
scas
mov
scas
cdq
das
iret
dec
push
and
gs
or
out
movs
push
stos
pop
sbb
jge
pushf
pop
rol
out
ds
sub
mov
jg
out
push
les
push
enter
shr
in
outs
inc
xchg
jne
mov
mov
int
xchg
pop
xor
pop
ficomp
out
sub
mov
ja
lea
in
ret
pop
std
inc
bound
in
cmps
mov
adc
sbb
jg
dec
mov
push
jbe
pop
mov
or
(bad)
(bad)
clc
adc
icebp
cld
dec
mov
call
jae
gs
pop
jno
(bad)
data16
dec
xchg
inc
imul
ror
fld
clc
clc
jg
and
mov
add
push
ret
and
push
xor
mov
(bad)
push
fwait
ins
cmp
mov
pop
xchg
adc
cmp
push
push
fs
mov
xchg
pop
cmp
movs
mov
out
push
push
stc
add
inc
or
ret
call
push
sahf
jmp
xor
push
and
dec
inc
mov
jo
js
fwait
sbb
das
bound
popf
daa
cmp
loopne
and
or
mov
sub
test
scas
scas
cmp
popf
xor
pop
xchg
int3
and
push
ret
fcomi
sbb
jl
xchg
or
ja
jae
xor
in
ficom
lds
stos
sub
or
dec
xor
retf
aaa
cmp
xchg
lahf
shl
call
push
aas
test
scas
int3
fucomip
fisub
pop
into
mov
and
dec
data16
aas
mov
out
fisub
enter
sub
dec
xor
sub
adc
call
and
cwde
test
push
mov
sti
out
push
inc
mov
repz
or
dec
into
jmp
rcl
xchg
ds
cmp
test
out
retf
pop
iret
add
(bad)
loope
and
sub
inc
cmp
jp
shl
out
fucomp
into
mov
lods
les
push
sbb
mov
repnz
dec
mov
into
scas
sbb
cmc
stos
add
repnz
fsub
inc
jle
push
fidiv
test
mov
sub
aaa
in
xchg
add
leave
and
add
popf
aad
fidiv
fsub
mov
fld
xchg
retf
mov
xchg
push
outs
mov
movs
push
add
test
mov
mov
sbb
inc
cwde
leave
clc
ret
out
ret
sti
mov
daa
clc
dec
hlt
in
cli
in
mov
and
montmul
cmps
adc
arpl
out
inc
pushf
mov
jecxz
shr
retf
pop
mov
out
imul
adc
push
in
fld
js
(bad)
stc
outs
inc
sti
sub
or
out
mov
test
aam
add
lahf
jnp
push
movs
pop
pushf
or
fdiv
xor
fisub
sub
mov
add
out
jecxz
int3
sbb
sbb
and
adc
pop
clc
inc
and
test
jp
inc
jle
sbb
movs
aad
mov
mov
push
scas
dec
fdiv
sbb
jbe
cmp
(bad)
mov
push
adc
dec
(bad)
stos
lock
aam
add
xor
ss
mov
dec
nop
mov
test
mov
retf
mov
in
call
mov
and
cmps
mov
mov
sbb
outs
dec
stos
adc
addr16
out
jne
pop
mov
mov
pop
repz
(bad)
cld
xlat
aas
sub
lods
das
cmps
in
or
icebp
movs
pop
mov
add
mov
cmps
cmp
loope
xor
arpl
inc
pop
jp
aam
inc
mov
(bad)
ins
mov
shr
xchg
mul
jp
(bad)
inc
in
bound
dec
or
scas
call
mov
xchg
adc
fwait
sub
ins
aad
sti
loop
cld
mul
es
push
daa
sub
clc
cmp
popa
div
mov
mov
or
int
jmp
adc
dec
loopne
xchg
push
neg
dec
adc
pop
cmps
ror
xor
sub
or
or
sbb
xchg
int3
mov
in
hlt
jae
dec
rcr
inc
add
pop
in
rcr
(bad)
xchg
push
call
and
jns
std
pop
lea
sub
xor
or
sbb
aaa
xor
sub
push
scas
int
(bad)
pop
jmp
xor
scas
push
or
sub
sbb
xor
ror
mov
ror
aas
pop
ret
(bad)
loopne
sti
mov
or
fcmovne
jg
adc
lods
sbb
jns
loope
mov
das
push
cmps
and
push
outs
or
mov
dec
inc
out
ret
adc
es
ror
data16
ja
mov
(bad)
in
add
fidiv
or
in
call
aam
mov
pop
movs
sub
and
mov
mov
popa
and
js
or
push
cmp
inc
mov
sbb
ss
loope
or
cmp
sbb
adc
and
sbb
mov
mov
lods
dec
mov
and
jg
lds
lahf
mov
cmp
cmp
das
sti
test
cdq
mul
fist
fld
jb
cwde
(bad)
icebp
jbe
push
lods
dec
into
(bad)
mov
hlt
sub
dec
or
xor
test
bnd
sub
mov
mov
outs
popf
fldenv
dec
inc
sub
ja
arpl
jae
movs
mov
inc
xchg
repnz
cmp
jmp
inc
pop
test
clc
movs
adc
mov
push
inc
xlat
sub
popa
xchg
jns
xchg
cmp
ror
jecxz
outs
dec
int3
push
shl
add
mov
imul
repnz
icebp
(bad)
(bad)
addr16
mov
ins
je
inc
inc
adc
sbb
jno
push
xor
dec
outs
cmps
retf
push
and
retf
add
outs
cmc
adc
shl
inc
(bad)
sti
pop
and
je
cmps
cmp
neg
je
or
inc
test
xor
(bad)
pop
adc
mov
les
mov
jp
out
lds
xor
add
(bad)
mov
ja
mov
jg
pop
imul
push
ins
inc
(bad)
in
call
dec
(bad)
ins
pop
and
lea
stc
xor
aaa
test
js
popa
aas
inc
ins
dec
cmp
push
dec
test
pop
and
je
sub
adc
fldcw
into
jae
xor
sub
push
mov
and
xlat
sub
jp
mov
loope
mov
pop
int
sbb
jge
stos
aas
xchg
lods
lock
mov
sahf
xchg
fwait
(bad)
std
push
inc
fwait
mov
es
jnp
jnp
test
inc
test
sahf
sbb
push
jb
adc
xchg
fsubr
push
xor
mov
and
clc
push
shr
in
adc
mov
add
ja
or
loop
push
jnp
retf
loopne
mov
call
pop
jp
jmp
or
push
outs
shl
push
cld
fldenv
mov
fdiv
ret
enter
or
xchg
xchg
sub
xchg
rol
clc
jno
in
dec
lea
call
cmp
xlat
aas
jne
scas
gs
repnz
scas
imul
dec
mov
clc
mov
xor
aad
daa
sub
pop
push
inc
js
popa
loope
scas
sub
lods
shl
repz
lock
mov
lea
aam
push
movs
sub
stc
pop
cmps
popf
inc
mov
push
lahf
(bad)
popa
sub
arpl
les
das
add
sbb
jl
scas
or
mov
or
inc
jg
mov
mov
mov
lods
in
mov
jl
fwait
ror
mov
and
add
adc
jecxz
cmp
in
adc
int
mov
and
mov
imul
js
(bad)
mov
push
fiadd
loopne
push
fdivr
arpl
(bad)
cs
fidivr
aad
xor
dec
popf
add
and
aad
lock
pop
lock
mov
lods
cmp
aam
pop
adc
xor
lods
jp
loopne
cli
and
mov
inc
leave
push
call
jle
jmp
cmp
jbe
pushf
sbb
xchg
mov
lds
pop
retf
mov
lock
xchg
das
push
add
inc
and
cmp
or
dec
mov
add
inc
add
and
lea
xor
push
aas
ja
push
lahf
pushf
scas
lds
popa
cs
pop
and
cdq
mov
rcr
xchg
fwait
mov
jle
loope
imul
xchg
cmp
xchg
cmp
sahf
sbb
sub
dec
cmp
lds
or
bound
push
push
ja
pop
mov
mov
div
loopne
(bad)
cmp
and
aas
aad
rcr
mov
bound
pop
adc
pop
(bad)
in
loope
dec
stc
cmps
(bad)
rcr
or
(bad)
mov
xchg
shl
aam
or
push
sub
mov
in
sahf
cmps
sub
ds
xor
je
xor
lods
pop
mov
mov
pop
xor
add
shr
mov
rcl
movq
or
inc
retf
inc
mov
popf
in
push
data16
jge
scas
push
adc
sti
pop
cdq
retf
jo
push
dec
and
fld
cmc
shl
sub
std
xchg
mov
pop
test
and
add
loop
push
dec
dec
lea
fbstp
clc
or
call
mov
xchg
out
xor
ss
jle
xchg
mov
fist
arpl
sbb
mov
mov
ret
shl
clc
add
out
test
mov
lods
out
cmp
fs
fbld
jl
popa
jl
jo
popa
dec
shl
sahf
jnp
xchg
jle
mov
cli
sub
out
and
push
mov
jo
xchg
mov
mov
mov
and
movs
mov
faddp
test
sbb
cs
std
xchg
je
popf
hlt
repz
outs
sub
out
xchg
mov
dec
and
scas
movs
dec
call
mov
and
cmp
pop
cmps
mov
fisub
cmp
xor
add
and
add
xchg
xor
shl
arpl
or
rcr
add
outs
movs
les
mov
xchg
mov
inc
out
mov
das
fdivr
inc
jno
mov
mov
xchg
dec
xor
loope
dec
les
inc
retf
cmps
xchg
cmps
adc
fbstp
and
dec
ret
pop
pop
add
cli
push
(bad)
das
mov
dec
add
cmp
push
jl
ror
dec
sbb
fcomp
(bad)
ror
cmp
je
cld
xor
xor
mov
push
mov
gs
jb
mov
(bad)
idiv
push
sub
jae
push
scas
cmp
lods
enter
mov
test
xor
and
xor
mov
sub
mov
hlt
retf
adc
call
cmp
test
outs
sub
or
shr
cwde
pusha
pop
out
stos
loopne
xchg
and
iret
stc
jmp
cmps
int3
and
adc
outs
loope
push
aam
xchg
mov
out
or
mov
jmp
fsub
repz
jle
or
movs
mov
into
mov
jb
and
loop
bound
icebp
ret
into
push
(bad)
int
jnp
pusha
cdq
lea
sbb
push
dec
sti
addr16
stos
rol
xchg
cmp
loope
mov
xchg
jmp
mov
call
xor
push
loop
(bad)
(bad)
xchg
jecxz
add
pop
retf
scas
in
jle
dec
jnp
out
sbb
jmp
pusha
popf
arpl
push
imul
mov
sub
pop
leave
mov
and
cmp
add
push
jne
std
xchg
out
or
add
jecxz
out
jp
xchg
or
xchg
pop
xor
mov
xor
nop
int
mov
repz
std
sbb
nop
jo
jae
aaa
push
lods
not
sbb
inc
ins
sub
ins
inc
out
add
push
sub
movs
pop
(bad)
femms
cdq
data16
cmp
push
pop
add
loop
jp
push
xchg
cmp
rol
nop
dec
pusha
xor
sub
or
call
push
adc
shl
movnti
pusha
retf
jbe
jmp
outs
ja
mov
fsubr
(bad)
(bad)
cld
jb
xchg
sbb
lea
adc
or
(bad)
and
jae
popa
(bad)
xlat
sbb
sbb
or
sbb
xchg
xchg
add
pusha
pop
(bad)
fsub
test
mov
lods
aaa
mov
jbe
(bad)
fimul
stos
dec
xchg
mov
and
(bad)
sti
arpl
mov
out
in
mov
xor
dec
xchg
out
call
or
sar
xor
sahf
or
pop
and
xchg
inc
xor
out
shl
out
pop
enter
inc
int
leave
mov
imul
data16
mov
stc
push
rol
inc
popf
push
(bad)
fneni(8087
and
jle
test
pop
xchg
mov
push
jge
sbb
mov
fistp
test
cmovae
add
jbe
sbb
inc
rcr
or
shl
fnstsw
adc
cwde
cmp
inc
mov
popf
xor
push
sub
fimul
mov
dec
lods
in
sub
xchg
lock
push
popf
fistp
(bad)
inc
in
fisub
icebp
les
mov
addr16
scas
jno
add
xchg
lods
jle
ja
aam
das
ja
movs
je
inc
sbb
pop
test
cmc
sub
jle
mov
pop
pop
(bad)
jl
and
in
jns
(bad)
or
(bad)
das
outs
xchg
mul
nop
ror
dec
push
cdq
jl
aas
and
imul
xor
jmp
sti
jno
sti
aas
or
pop
pop
int
scas
mov
test
(bad)
sbb
or
inc
mov
cli
push
ss
jg
xchg
push
in
int3
mov
call
sti
(bad)
(bad)
ja
retf
or
ss
mov
or
cmp
push
in
inc
rol
pop
int
test
and
mov
pusha
pop
pop
or
mov
mov
dec
lds
movs
je
stos
test
(bad)
rcr
(bad)
jb
sub
add
jmp
shr
adc
call
sub
jecxz
aaa
inc
cmps
or
jae
xchg
int3
xchg
sub
les
imul
clc
add
inc
int3
bound
cmp
push
xor
stos
pusha
xor
cdq
sahf
mov
es
push
rcr
in
or
loope
ss
sbb
sbb
xor
popa
arpl
daa
mov
jge
mov
pop
mov
ret
and
fcom
lahf
stos
ins
inc
jge
inc
cmp
xlat
aas
clc
push
aaa
mov
fsubr
sbb
out
dec
pop
jle
pop
jl
jg
dec
mov
push
mov
rol
mov
ds
adc
mov
js
xor
in
pop
test
add
pop
cs
inc
ja
(bad)
and
lea
into
mov
push
xchg
cli
int3
in
mov
push
loop
or
lock
repnz
popf
mov
push
aam
mov
scas
add
xor
push
adc
xchg
clc
ds
mov
test
xor
mov
ret
dec
and
mov
mov
sub
and
test
ret
bnd
aaa
cmp
and
lahf
jmp
(bad)
outs
inc
imul
fwait
xor
adc
add
sbb
push
xor
jmp
ins
in
outs
jae
jmp
jns
push
hlt
(bad)
and
inc
ds
mov
pop
(bad)
hlt
retf
fldcw
sbb
sbb
mov
movs
mov
or
in
add
mov
fstp
add
fadd
inc
arpl
mov
shl
in
xor
cmps
lods
push
inc
inc
adc
ja
fcom
adc
cmc
sti
fsubr
jmp
ror
pop
add
pop
xor
ficom
popa
or
push
xchg
mov
xor
sbb
cs
push
mov
jnp
adc
jno
gs
ss
mov
gs
adc
jo
addr16
inc
xor
fdiv
cmp
test
push
pop
adc
dec
sbb
and
retf
inc
les
push
sbb
in
mov
jne
inc
add
frstor
aaa
sub
inc
inc
mov
or
pop
js
lock
cmps
cmp
bound
jmp
mov
xchg
push
outs
out
xchg
in
imul
xchg
fstp
xor
loope
call
leave
mov
call
pop
pop
test
mov
mov
loop
popa
imul
dec
enter
popf
das
dec
rcr
and
sub
daa
push
sub
das
pop
pop
stos
hlt
ror
jo
mov
and
aad
gs
in
mov
xor
sub
push
and
mov
inc
mov
jo
xor
sub
mov
xor
nop
pushf
jnp
pop
mov
shr
inc
enter
jne
jae
fild
bound
pushf
aas
xchg
ret
pop
xor
ret
or
mov
adc
mov
je
(bad)
je
xchg
dec
pop
mov
(bad)
div
sti
adc
call
lea
ficomp
and
push
pop
dec
pop
mov
push
and
add
pushf
and
loop
xor
jbe
and
cmp
cmp
gs
jmp
jo
jg
mov
xchg
and
sbb
xlat
repnz
sbb
das
xchg
mov
inc
mov
inc
jle
mov
shl
test
mov
mov
mov
adc
sbb
test
xor
(bad)
outs
xor
or
pop
mov
(bad)
add
inc
mov
dec
out
or
pop
pop
(bad)
push
outs
sub
retf
in
cs
pop
cmp
or
pop
mov
scas
sbb
loope
push
add
sbb
push
mov
dec
push
rcr
mov
fidiv
sub
adc
stc
imul
mov
sub
mov
mov
sub
adc
add
pusha
mov
fstp
lods
cmp
dec
aad
xor
das
cmp
cmp
sar
xchg
or
jno
inc
rcl
mov
call
sub
loope
jb
lahf
mov
lahf
push
movs
xchg
pop
dec
cmp
(bad)
jmp
xchg
mov
in
arpl
loopne
cmps
jbe
clc
add
div
xor
sub
call
cmp
pushf
inc
test
test
mov
stos
jbe
xchg
push
mov
push
scas
cdq
sbb
daa
pop
mov
add
or
and
mov
test
push
imul
adc
fdiv
mov
cld
pop
dec
test
loopne
mov
daa
cwde
es
ret
push
push
push
cmp
cmps
add
xchg
mov
stos
into
into
pop
rcr
out
xchg
or
das
add
loope
xor
fidivr
adc
pop
(bad)
jmp
lds
cmp
jmp
add
jge
pop
sbb
lea
jno
pusha
sub
cmp
xlat
(bad)
outs
pop
xchg
and
inc
xor
sub
lock
test
ins
mov
cmp
mov
cli
jo
jmp
push
pop
aas
ins
test
lea
adc
jb
adc
cdq
shl
and
jp
push
jb
test
mov
mov
movs
retf
movs
mov
jns
into
and
and
(bad)
mov
ja
std
and
xchg
loope
add
aad
cmp
mov
(bad)
aaa
inc
cmps
inc
jno
std
sbb
inc
adc
mov
inc
int3
out
mov
cmp
or
enter
sub
repnz
and
jmp
mov
mov
sub
lahf
outs
sbb
scas
stos
test
clc
inc
mul
jmp
mov
adc
daa
jno
sub
xor
mov
xchg
pop
dec
fcmovbe
call
or
push
push
stos
rcl
sub
mov
xor
lds
ja
leave
retf
aad
cli
xchg
test
(bad)
test
ins
dec
jb
jns
jb
lahf
fst
mov
cdq
mov
add
adc
jge
fs
outs
retf
in
jne
iret
out
dec
pushf
fimul
mov
call
dec
or
leave
cmc
mov
test
sub
dec
push
xchg
aaa
cmp
pop
daa
xor
dec
sbb
xchg
aaa
sbb
mov
dec
and
mov
(bad)
fst
inc
sbb
jge
std
shl
rcl
mov
(bad)
push
jne
ins
push
outs
cld
cmp
imul
jbe
add
jae
mov
and
scas
stc
test
inc
mov
push
test
popf
test
or
pop
push
fdiv
lods
jg
shl
pushf
sti
data16
cs
mov
retf
fimul
sbb
xor
dec
push
jbe
fadd
adc
ds
pop
mov
test
push
fld
dec
xor
fcomp
jmp
out
fwait
addr16
jmp
outs
ret
sbb
sbb
call
sub
js
ret
mov
adc
aaa
jno
sbb
in
or
mov
mov
mov
test
mov
xor
jmp
arpl
mov
data16
in
jg
hlt
dec
pop
dec
cmp
xor
das
les
test
or
fidivr
fstp
mov
xor
arpl
cmps
pop
cli
rcr
addr16
pop
gs
es
out
inc
and
movs
mov
div
ins
cdq
nop
mov
cmps
mov
loop
inc
je
enter
mov
push
std
mov
sub
inc
neg
add
std
ss
xor
jnp
not
mov
movs
jmp
sbb
es
test
jb
adc
rol
nop
dec
sub
jg
mov
adc
xlat
mov
mov
inc
mov
push
not
hlt
and
les
das
adc
ficom
mov
dec
fisttp
daa
push
fsubr
mov
push
mov
or
(bad)
push
and
mov
daa
pop
inc
cmc
cwde
mov
shr
daa
xchg
sub
ret
clc
iret
inc
mov
xchg
dec
test
adc
add
test
adc
jle
push
push
add
cs
mov
jl
cmp
jno
out
gs
cmps
aam
movs
enter
cld
and
aam
pushf
cmp
jp
jge
out
jb
jmp
or
fdiv
movmskps
mov
sbb
dec
sub
xor
mov
cld
xor
in
pop
in
imul
sbb
ret
arpl
mov
ins
mov
sbb
adc
loope
cdq
in
std
sub
sub
sahf
inc
mov
rcl
sbb
jno
mov
fsubr
or
xchg
mul
(bad)
pop
imul
inc
btc
sub
cmp
push
in
arpl
out
iret
jne
jne
imul
clc
mov
pop
jl
loopne
movs
xor
mov
stos
jae
sub
rep
(bad)
xor
and
sub
dec
cmc
call
xchg
int
stos
jge
gs
mov
sbb
pusha
iret
jno
sbb
cdq
cld
data16
ds
shl
inc
inc
add
test
mov
jnp
lock
dec
in
pop
pushf
mov
js
push
in
ret
gs
(bad)
es
jge
in
inc
jne
inc
(bad)
xor
and
fstp
hlt
jmp
lods
(bad)
in
test
std
and
push
jmp
cmp
xchg
div
mov
mov
xor
pop
sub
mov
(bad)
pop
popa
pop
jbe
sbb
mov
popf
push
or
clc
jno
mov
mov
push
push
sub
imul
gs
out
jmp
movs
je
jmp
ins
imul
add
lods
ins
dec
and
mov
adc
xchg
leave
dec
inc
es
cmps
mov
loopne
adc
mov
and
and
jno
sti
jae
mul
cmp
loop
inc
and
cmp
push
jecxz
fst
xchg
test
xchg
add
push
sti
and
jno
div
xor
push
hlt
pop
popw
push
or
test
mov
push
shr
popf
popf
push
(bad)
scas
and
loopne
push
out
xor
xor
mov
(bad)
jmp
repz
sti
outs
pop
aad
cli
adc
mov
mov
xor
mov
stos
fistp
jmp
arpl
mov
rol
jmp
popa
mov
daa
or
sbb
jmp
ins
mov
inc
arpl
jl
xor
in
mul
mov
(bad)
cmc
jne
sti
into
iret
mov
mov
pushf
sbb
cmp
jo
test
push
push
mov
dec
xor
jnp
xchg
jns
(bad)
cmc
mov
xor
(bad)
bound
js
jmp
add
adc
inc
inc
ds
mov
xchg
mov
movs
adc
clc
not
ror
inc
in
or
xchg
test
inc
das
inc
in
jmp
mov
mov
dec
xchg
mov
mov
stos
or
jbe
sub
jnp
inc
adc
pop
xchg
jno
pop
xchg
xchg
xchg
iret
dec
and
pushf
sub
add
pop
sahf
pop
pop
add
shl
jbe
int
and
jnp
iret
lods
pop
push
or
or
mov
and
mul
adc
ror
pop
xlat
and
inc
inc
in
adc
cmp
inc
jnp
sbb
cwde
fiadd
xchg
cmp
je
cmc
(bad)
loope
inc
repnz
jmp
jnp
cs
xor
into
jg
scas
repnz
jge
push
sbb
and
(bad)
loope
call
pop
add
ss
jnp
or
shl
out
lock
bound
mov
cli
neg
mov
dec
inc
sub
xchg
jmp
test
inc
xchg
pop
addr16
lea
leave
xor
(bad)
mov
pushf
ins
push
cmp
add
inc
jae
mov
sub
aad
mov
aas
lods
push
or
push
pop
ins
movs
arpl
addr16
int
jl
inc
ds
popa
xchg
gs
jp
repnz
loope
cmp
(bad)
out
cmp
call
punpckldq
pop
bound
sahf
cmps
aaa
mov
xchg
cmps
mov
adc
or
push
xor
es
xor
and
mov
popa
mov
shl
outs
mov
inc
xchg
fnstenv
mov
and
imul
sbb
imul
fld
add
retf
mov
xchg
inc
push
hlt
retf
idiv
std
jl
pop
jnp
xor
add
fidivr
inc
and
(bad)
mov
std
and
into
mov
push
jbe
inc
dec
hlt
sub
mov
fwait
lahf
sti
mov
jecxz
pusha
push
jmp
and
(bad)
imul
std
in
or
pop
(bad)
rol
pop
jnp
cmp
jne
push
mov
xor
fwait
mov
stc
pop
sti
scas
pop
dec
aad
scas
pop
mov
dec
pop
xchg
out
mov
out
xor
and
inc
sbb
mov
mov
pushf
lods
sub
push
dec
dec
stos
inc
fbstp
loopne
mov
adc
push
mov
mov
inc
dec
aad
stos
mov
dec
dec
adc
int3
mov
push
cmc
sbb
fiadd
in
int3
pop
or
lods
aaa
test
mov
dec
jne
adc
pushf
or
jae
cmps
addr16
sub
sub
iret
in
jecxz
ret
es
adc
mov
aas
jle
or
out
in
dec
mov
(bad)
aad
popa
xor
push
enter
push
rcr
mov
arpl
dec
mov
pop
shr
mov
xor
xor
rcr
or
cs
stos
fs
jecxz
(bad)
sbb
dec
pop
in
(bad)
dec
scas
test
jb
xor
call
add
push
add
fistp
(bad)
scas
pop
rol
test
jbe
popa
mov
jno
inc
scas
inc
cmp
sbb
cmp
(bad)
jmp
sahf
mov
fsubr
add
xor
in
jg
jle
mov
and
in
sub
lea
(bad)
push
xchg
mov
push
mov
xchg
retf
test
xchg
imul
out
fs
add
mov
cmp
lods
dec
loope
(bad)
mov
scas
mov
sti
add
retf
cs
and
scas
in
or
lods
jns
mov
ret
jle
retf
jns
ins
(bad)
pushf
int
add
int3
jmp
ss
shl
inc
leave
data16
jecxz
dec
lahf
mov
xor
mov
push
shr
adc
sbb
mov
push
mov
inc
pushf
pop
mov
not
add
mov
out
pop
mov
add
mov
jp
cmp
mov
push
scas
mov
pusha
or
mov
lods
cmp
cmp
sub
fwait
js
mov
ror
sub
mov
mov
(bad)
sti
mov
pop
mov
cld
repz
xor
call
cmp
or
or
ret
inc
mov
push
pop
retf
add
out
mov
shl
retf
mov
gs
je
mov
fld
lea
mov
add
stc
jne
(bad)
add
adc
fwait
movs
imul
ror
rol
sub
or
hlt
and
(bad)
adc
lods
xchg
adc
hlt
inc
popf
xchg
and
retf
ret
scas
out
jae
loopne
mov
add
scas
sub
sbb
les
sub
jno
out
pop
aam
daa
push
js
lods
mov
addr16
in
mov
int
ds
mov
dec
shr
jp
adc
cdq
or
mov
imul
in
mov
dec
addr16
mov
mov
fst
adc
jge
jecxz
fistp
inc
(bad)
in
ret
sbb
sub
scas
xchg
pop
ret
adc
jnp
xchg
int
shl
test
dec
arpl
out
bound
mov
jmp
call
pop
daa
leave
fld
cmps
adc
adc
fwait
rcl
repz
push
ins
(bad)
js
int3
cs
dec
adc
cmp
mov
jge
inc
jb
mov
jo
sahf
mov
xor
clc
stc
fstp
aas
popf
dec
inc
mov
pop
ret
xchg
sahf
xchg
push
mov
daa
cmp
pop
(bad)
mov
fs
call
loop
add
(bad)
add
mov
lock
sbb
lods
ins
pop
pop
cmp
mov
push
int
cwde
push
rcl
mov
clc
fwait
call
les
or
(bad)
rcr
and
mov
pushw
inc
ss
sub
jecxz
pop
in
mov
cdq
xchg
popa
sti
jg
lock
in
dec
xchg
jg
xor
xlat
jns
and
rcl
rcr
cmp
leave
add
pop
ror
dec
add
jmp
mov
outs
xor
fldcw
movs
push
ja
pusha
mov
xor
outs
push
pop
(bad)
push
push
call
mov
fwait
xchg
sbb
cmps
dec
ret
xchg
fisttp
mov
inc
sar
add
ins
imul
popa
jbe
cmp
adc
pop
sub
ja
call
sti
imul
stos
xchg
fmul
bound
retf
inc
inc
movq
xor
dec
xchg
fsubr
(bad)
adc
(bad)
mov
xlat
pop
sub
data16
lahf
pop
out
sub
daa
xchg
in
cwde
jnp
dec
retf
cmps
jp
mov
jns
xchg
push
push
sbb
call
mov
dec
cs
mov
mov
jo
rcr
lea
scas
ret
lds
out
stos
hlt
cli
push
and
hlt
pop
jae
mov
mov
fmul
and
movs
mov
jbe
mov
pop
mov
mov
out
test
jmp
mov
sub
rcr
pop
sbb
mov
jbe
iret
push
adc
pop
aas
adc
scas
call
loopne
imul
xchg
(bad)
fxch
and
div
and
jnp
or
cmp
loope
push
mov
fiadd
neg
jo
push
lods
ins
outs
ins
fsub
mov
jl
xlat
mov
(bad)
sbb
and
sub
(bad)
call
vsubps
and
xchg
fisttp
repnz
pusha
inc
bound
mov
cmp
sub
inc
sub
cmp
xor
sahf
sbb
inc
cmps
push
stos
push
sbb
mov
or
sub
arpl
pop
inc
xchg
xchg
scas
dec
mov
sbb
jne
fcomp
adc
mov
pop
mov
out
mov
sbb
iret
imul
dec
fist
xor
mov
and
xor
jmp
movs
cli
xchg
mul
dec
cmps
push
ins
test
inc
push
cmc
arpl
mov
push
ret
push
loopne
and
and
or
cwde
aad
push
outs
out
cmp
mov
test
outs
jecxz
test
std
scas
or
inc
inc
(bad)
sub
push
fsubr
sbb
popf
xchg
mov
sahf
cmp
mov
mov
push
mov
or
(bad)
pop
cmp
fs
popf
popa
loope
jmp
lea
sub
sbb
xchg
mov
cdq
jne
push
mov
push
sbb
sub
mov
fwait
sti
stos
idiv
fwait
cmp
inc
outs
outs
and
movs
jne
ficom
xchg
xor
sahf
fbld
push
jg
sbb
cld
scas
add
ss
(bad)
dec
mov
and
jbe
dec
(bad)
movs
imul
test
popf
(bad)
repz
in
in
je
lods
push
mov
and
cmps
and
add
and
jb
test
stos
xlat
sub
cmp
jnp
sbb
jg
dec
aaa
inc
cmp
je
movs
xchg
or
call
mov
xor
fpatan
pop
jmp
iret
sub
ret
test
and
cs
and
add
and
dec
fadd
int
mov
pushf
repnz
loop
add
sub
out
shl
lods
rcr
daa
mov
or
push
inc
dec
outs
(bad)
in
das
nop
mov
mov
xchg
pop
inc
and
adc
xchg
stos
hlt
and
or
mov
xchg
sub
mov
es
shl
test
cmp
das
dec
clc
xor
mov
js
push
mov
mov
loop
xchg
mov
or
call
sub
loop
mov
pop
mov
push
cmp
sub
xchg
inc
cli
jecxz
jmp
scas
ret
push
(bad)
add
xchg
xchg
dec
adc
push
dec
lods
and
jnp
or
clc
cli
push
push
push
push
adc
les
cmc
mov
add
mov
popa
push
test
(bad)
(bad)
out
mov
xor
xor
sub
dec
in
nop
xchg
mov
or
fcom
sub
cmps
loopne
add
pop
cmp
sub
je
jb
gs
ja
cmp
sub
push
repnz
inc
mov
xchg
xchg
xchg
icebp
adc
mov
push
es
push
lods
xchg
push
xchg
xor
mov
out
std
mov
jbe
sar
inc
add
inc
mov
adc
js
adc
fucom
addr16
fs
inc
pop
xchg
outs
mov
mov
je
push
sub
repnz
mov
mov
mov
and
add
sub
push
cmps
clc
es
jbe
or
push
das
fadd
ret
gs
mov
outs
sti
nop
popf
stc
movs
std
nop
pop
rcr
mov
out
gs
mov
int3
cmp
bound
mov
nop
xor
push
jmp
xchg
inc
into
and
dec
jp
(bad)
(bad)
and
fld
lods
dec
mov
or
sbb
mov
mov
lods
test
pop
and
xchg
fcomp
pop
mov
inc
add
fs
inc
or
sub
outs
jp
and
push
or
cmp
(bad)
mov
stc
test
mov
loop
ret
sub
movs
xchg
and
leave
push
mov
lahf
sub
shl
add
lock
mov
leave
retf
push
jge
pusha
test
xchg
xchg
jg
cmps
lods
aad
mov
inc
mov
add
push
mov
jp
adc
movs
jmp
mov
push
and
enter
jge
jmp
mov
pop
sti
ins
xchg
mov
test
sbb
rcl
pop
adc
add
fstp
les
add
movs
into
xchg
rol
pop
xchg
mov
and
stos
rcr
xor
js
lock
jl
push
pop
xor
out
test
lods
mov
(bad)
cdq
pop
cmp
dec
stc
movs
scas
mov
sbb
mov
or
jb
sub
rcr
dec
push
pop
test
cmc
jne
cs
xchg
add
mov
arpl
cmp
imul
or
stos
gs
dec
mov
pop
mov
imul
push
pop
mov
mov
gs
movs
test
cdq
js
sbb
push
das
cwde
mov
cmps
les
sbb
xor
mov
dec
dec
ss
imul
adc
movs
cmc
jge
mov
mov
pop
cmp
mov
pop
jmp
sub
pushf
adc
ins
repz
cs
in
mov
pop
sub
arpl
leave
cli
inc
imul
mov
icebp
movs
sbb
cli
nop
fimul
out
inc
std
das
adc
retf
call
ffree
adc
movs
pop
push
pop
test
push
dec
mov
lods
inc
mov
sub
scas
dec
retf
call
mov
add
sbb
or
mov
aaa
lock
imul
lods
int3
pop
outs
inc
pop
cmps
mov
stos
retf
(bad)
in
rol
mov
fldcw
add
popf
ja
test
sbb
mov
cli
mov
(bad)
movs
jge
rcl
ins
cmovae
xchg
mov
out
mov
sub
xchg
or
ins
jl
cmc
lahf
or
push
push
jbe
cli
es
jb
(bad)
mov
add
xor
sub
and
repz
into
cmp
adc
scas
icebp
retf
mov
push
inc
xchg
jb
mov
dec
popf
loop
test
inc
sub
cdq
mov
(bad)
cmp
fdivr
outs
pop
mov
stos
enter
mov
stos
cmp
lahf
add
cmps
je
cli
out
pop
jnp
imul
daa
and
inc
out
test
enter
test
cld
mov
mov
jl
ret
js
scas
pop
add
xor
(bad)
in
xchg
rcr
sbb
sub
mov
(bad)
icebp
lods
sti
rol
dec
jp
or
sbb
pop
xor
xchg
jge
jnp
sti
cmps
push
fdiv
fwait
cmps
(bad)
(bad)
or
cmps
mov
jo
aaa
push
in
repz
inc
cmp
mov
daa
cmps
jg
mov
cdq
std
lds
iret
icebp
mov
add
xchg
cli
mov
scas
fiadd
mov
loope
scas
cmp
repnz
xor
jge
dec
and
repz
lods
inc
push
xor
mov
shl
je
xchg
inc
push
cmp
add
jle
and
aaa
popf
aaa
and
mov
pop
or
(bad)
shr
fchs
xchg
pop
mov
or
adc
push
sti
dec
jp
xor
std
dec
lahf
ret
rol
xor
loop
jb
and
into
cmp
bound
mov
pop
mov
ss
add
lahf
adc
sbb
mov
fdivr
pop
jp
adc
sbb
mov
mov
popa
push
aaa
inc
mov
test
dec
popf
ret
gs
sahf
sbb
and
(bad)
js
jmp
sub
into
(bad)
repnz
pop
mov
and
enter
in
pop
cmp
mov
mov
mov
popa
mov
(bad)
pop
data16
jne
popa
outs
clc
leave
lea
repz
xor
push
and
xchg
dec
mov
les
mov
aam
fs
push
movs
sbb
jl
pop
mov
mov
inc
pop
sub
rol
(bad)
sahf
imul
xchg
inc
add
mov
aas
push
pop
imul
jle
jmp
jo
xchg
imul
fdivr
ret
loop
jecxz
add
jno
and
or
cmp
mov
jl
repz
jae
in
je
sub
or
out
dec
push
mov
jnp
(bad)
jmp
popf
inc
inc
retf
les
inc
mov
hlt
mov
or
int
stos
cwde
cmp
lds
ja
cwde
lahf
cmp
mov
icebp
out
enter
xor
call
stc
jae
aaa
cmp
push
je
lock
stos
test
out
stos
mov
inc
add
ins
push
mov
mov
lahf
or
pop
mov
push
jnp
or
in
cmc
jno
xor
cmp
mov
test
movs
fmul
test
lods
xchg
dec
stc
xchg
clc
aad
cmps
aaa
push
mov
shr
rcr
mov
mov
rcl
cmp
iret
xor
ins
push
dec
sti
sub
idiv
mov
sbb
and
sbb
test
fs
fcomp
in
xchg
sub
push
adc
shl
test
pop
stc
pop
mov
(bad)
xchg
xchg
jbe
adc
and
pop
cwde
rcl
in
jo
shl
jecxz
leave
mov
jmp
fwait
mov
jmp
fwait
or
or
and
sbb
pusha
inc
pushf
or
pop
and
dec
add
cmc
sbb
mov
mov
popf
ja
sbb
nop
or
xor
std
ficomp
cmps
nop
jmp
aaa
jae
imul
sbb
out
pop
pop
inc
sub
add
pushf
shr
push
jo
and
cmp
mov
ret
pop
add
xchg
inc
cli
xor
out
fild
outs
out
lock
in
fwait
pop
icebp
lahf
add
je
adc
test
int3
in
imul
pop
inc
fs
fidivr
das
int3
xchg
popf
dec
dec
add
inc
fild
push
(bad)
xlat
aad
or
nop
std
sbb
(bad)
loopne
xchg
xor
jl
pop
ss
adc
in
sbb
xlat
or
or
cmp
mov
shr
push
jmp
push
scas
push
sbb
mov
add
and
iret
ds
mov
aas
mov
popf
nop
jmp
nop
les
shl
sbb
add
pop
dec
sub
(bad)
(bad)
mov
loop
xchg
xor
xchg
mov
aas
nop
stos
add
into
lods
or
push
mov
mov
fist
rcl
or
ret
mov
xor
and
jbe
jg
xchg
jmp
daa
aaa
xchg
imul
cmp
inc
movs
dec
rcr
jle
dec
fchs
cld
es
and
std
adc
mov
mov
push
das
adc
fimul
sub
in
call
or
call
inc
movs
push
icebp
xchg
xor
inc
sbb
inc
mov
pop
(bad)
popa
push
cdq
add
mov
shl
adc
xchg
ret
xor
jge
jp
je
mov
xchg
cmp
xchg
or
sar
scas
push
jl
sub
pop
lods
imul
stc
jb
in
adc
adc
sahf
mov
add
xchg
js
pop
xor
test
xchg
mov
cwde
pop
ja
(bad)
sahf
cmc
mov
test
mov
in
in
mov
pushf
mov
or
in
out
push
jns
mov
pop
jo
repz
jg
xchg
clc
int
sbb
ja
pop
xlat
jp
bound
les
mov
cmp
dec
loopne
cmp
sbb
pop
test
pushf
mov
sub
aaa
shl
adc
in
fwait
push
sar
bound
dec
ins
mov
inc
push
test
scas
aam
lods
stos
sub
pop
out
sub
sbb
out
push
push
mov
sbb
jno
mov
imul
mov
jl
mov
fst
pop
jle
mov
push
jle
fst
or
adc
out
js
jge
outs
movs
shr
xchg
xchg
jecxz
mov
xor
mov
jmp
add
stos
js
fistp
cld
sbb
xor
cmp
fadd
jg
add
iret
push
and
inc
in
or
(bad)
jge
mov
cmps
jl
mov
mov
xchg
inc
xchg
fnstenv
rcr
push
scas
fwait
sbb
push
int
imul
mov
lods
pop
test
dec
mov
fs
and
cmp
test
push
jg
pop
bound
iret
jecxz
sub
ror
hlt
mov
pop
push
push
mov
lock
push
and
cmps
pop
sbb
mov
(bad)
shr
call
mov
bound
cmp
dec
(bad)
cli
out
add
xchg
arpl
sbb
bound
adc
stc
shr
stc
std
mov
pop
sbb
add
xor
jmp
xchg
inc
push
popf
push
out
std
sub
mov
jmp
sbb
jmp
dec
jg
add
sbb
cmp
mov
and
push
pop
mov
call
rcr
dec
and
scas
test
out
dec
adc
jbe
sub
ret
ror
sbb
fbstp
inc
and
and
fidiv
jns
push
dec
adc
or
push
shr
mov
(bad)
sar
outs
xchg
test
mov
cli
mov
jmp
xchg
cwde
xor
inc
test
gs
mov
shl
jns
mov
sbb
nop
mov
int
fist
dec
or
(bad)
retf
mov
adc
jecxz
inc
sbb
mov
bound
scas
add
push
ss
pop
outs
jns
cli
sahf
cdq
push
pop
pop
rcl
jnp
sti
or
in
and
jecxz
sub
out
mov
ror
out
js
sti
sub
pop
mov
cmps
cdq
out
movs
mov
out
pop
jmp
ret
jno
mov
jmp
xchg
pop
adc
sti
add
ss
push
mov
in
cmp
call
xor
imul
add
loopne
fs
mov
xor
add
outs
loope
inc
mov
aaa
out
dec
ja
sahf
test
push
and
sti
mov
cmp
out
xor
mov
test
cmps
jo
leave
ins
fdiv
jns
bound
cmp
cmps
or
outs
jmp
dec
fdiv
pop
cmps
mov
std
pop
mov
sub
test
lock
icebp
and
in
cmc
leave
dec
jmp
rol
loop
test
maskmovq
idiv
movd
in
push
fld
js
stos
jne
sub
jns
daa
popa
jns
and
mov
push
pop
cmp
push
cli
stc
out
pop
and
test
(bad)
jae
dec
pushf
clc
dec
sbb
xchg
sub
int
mov
or
jno
dec
or
fucomp
and
icebp
adc
inc
inc
js
mov
fsub
xor
icebp
xor
or
stos
inc
in
fst
mov
aaa
jmp
cdq
test
push
ret
sub
or
pop
clc
xchg
cmp
stos
hlt
daa
or
pop
mov
add
mov
cmc
retf
push
ficom
pop
(bad)
pop
xchg
pusha
inc
jb
jbe
ds
push
inc
xor
js
jne
add
aam
lahf
jae
xor
(bad)
and
push
cmp
lock
(bad)
aas
pop
in
retf
outs
xor
mov
xor
mov
mov
retf
fwait
out
lods
pop
sar
cmp
mov
ret
dec
cmps
or
ss
cmps
std
call
movs
jb
enter
mov
call
jns
or
sub
or
or
inc
sbb
pop
or
rol
adc
mov
enter
xor
cmps
dec
inc
pop
fldcw
mov
sbb
repnz
test
pop
std
push
pop
fmul
inc
add
pop
dec
sub
pop
sub
cmp
adc
pop
or
gs
jns
outs
jge
add
xor
mov
push
pop
ds
lods
lods
cmc
sbb
pop
dec
arpl
cmp
fcomi
dec
aam
mov
cmp
in
inc
aad
xor
mov
sub
and
ds
repz
sbb
pop
pop
(bad)
(bad)
mov
test
or
mov
xor
not
imul
inc
jb
lods
lea
fdivr
imul
rcr
scas
ja
jbe
xor
add
push
mov
sti
push
sar
push
xchg
mov
mov
shl
lahf
xor
sub
test
leave
sbb
xchg
lock
enter
sahf
push
or
fs
mov
arpl
sar
cmp
adc
pushf
push
mov
cdq
inc
sbb
jo
dec
xchg
lock
cmp
fnstenv
jnp
add
movs
jmp
adc
mov
sub
out
pushf
movs
xchg
inc
mov
enter
jmp
cmc
or
fidiv
outs
out
inc
push
loopne
cmps
push
and
loop
ror
out
pop
push
xchg
leave
push
cmp
call
mov
mov
pushf
add
xor
and
jns
popf
lea
jl
add
fsubrp
clc
fisub
sbb
xor
and
hlt
xor
pop
out
outs
xchg
out
mov
add
mov
cmp
bnd
xor
adc
fcmovu
shl
retf
inc
mov
sbb
rol
invd
imul
pop
xchg
lock
inc
retf
inc
or
mov
jp
pop
sub
mov
ds
jle
inc
movs
dec
mov
clc
stos
test
and
call
mov
add
leave
daa
cmp
test
xlat
stos
and
cmp
hlt
sub
cmc
loop
jne
out
cmp
stc
sbb
arpl
stos
mov
dec
pop
hlt
icebp
clc
cli
loope
aam
in
test
aad
pop
dec
xchg
dec
pop
ret
pop
sub
and
add
es
(bad)
in
and
retf
(bad)
cld
stos
xchg
call
sar
pop
fwait
sbb
sbb
enter
mov
mov
scas
enter
mov
je
sub
inc
push
loope
sub
sub
aaa
xchg
jge
xor
sbb
mov
sub
sbb
inc
imul
cmp
push
sbb
rep
jge
pusha
cmp
mov
es
in
mov
fistp
push
xchg
ror
xchg
(bad)
sbb
mov
mov
adc
inc
pushf
xchg
dec
mov
push
or
js
nop
push
dec
inc
lods
and
xor
out
jge
out
(bad)
aaa
pusha
fidivr
xor
clc
pop
sub
int3
cmp
jb
jo
xor
in
pop
push
pushf
movs
jmp
push
mov
push
daa
rol
shl
cmp
mov
ror
sbb
inc
mov
repz
cmc
mov
xchg
retf
repnz
shl
(bad)
ins
sub
jns
repnz
xchg
push
fwait
enter
addr16
push
lahf
test
add
xchg
mov
fadd
pushf
pop
bound
pop
repnz
add
sbb
call
cmp
icebp
dec
not
test
adc
mov
adc
xchg
xchg
inc
cmp
jnp
xchg
push
cmp
ja
xchg
push
cmp
hlt
mov
jb
leave
cmp
dec
sub
jo
gs
cmps
ror
xor
adc
mov
pop
xchg
mov
(bad)
sub
popa
mov
(bad)
or
xchg
lahf
mov
sti
and
(bad)
in
les
xor
xchg
fistp
aad
in
mov
loope
aam
ds
sub
push
out
xlat
in
cmc
daa
or
jns
ss
arpl
test
inc
and
xor
xor
(bad)
xchg
outs
addr16
and
out
(bad)
mov
lea
fsub
xchg
pushf
mov
and
push
inc
xor
or
ficomp
add
cwde
jmp
(bad)
retf
dec
mov
fmul
jno
push
adc
into
(bad)
add
mov
icebp
in
call
lahf
outs
ins
xor
hlt
push
jnp
addr16
sub
dec
mov
xchg
adc
xor
out
bswap
adc
clc
push
nop
sub
ficom
outs
inc
add
jl
adc
xchg
mov
jmp
cmp
push
push
pop
adc
lock
push
repnz
push
adc
adc
inc
adc
dec
imul
(bad)
mov
call
dec
dec
push
into
dec
stos
xor
jg
hlt
aam
cmp
cmp
sar
sti
pop
es
lea
repz
xor
rol
mov
xor
sbb
jb
add
popf
or
movs
jno
sahf
lods
cmp
and
jge
mov
and
lock
mov
ins
shl
cmc
rcl
add
imul
push
pushf
jbe
mov
in
mov
mov
outs
jb
mov
cmps
outs
scas
and
or
or
push
(bad)
pop
retf
xor
(bad)
jmp
cmps
push
adc
lea
pushf
rol
into
adc
retf
mov
xor
dec
pop
adc
das
jne
or
inc
fistp
mov
sub
mov
jecxz
add
mov
xchg
shr
sbb
sti
dec
mov
dec
add
ror
cmps
mov
ja
rcr
iret
mov
adc
shl
add
push
(bad)
mov
fisttp
inc
xchg
sub
cwde
adc
cmp
inc
es
out
cmp
test
jo
aaa
lds
loope
test
ret
and
into
leave
sub
xor
dec
cmc
xor
mov
xor
jp
push
sbb
ins
xrelease
nop
fiadd
mov
xlat
dec
mov
and
mov
mov
fstp
mov
loop
loope
cmp
test
mov
arpl
test
pushf
lods
retf
pop
xchg
dec
cmps
mov
pop
mov
aaa
push
sub
bnd
sar
dec
movs
push
jno
cld
xchg
mov
lds
cmp
cmp
stc
push
mov
jae
and
dec
mov
adc
cwde
fistp
or
loopne
fidiv
dec
cmp
pop
movs
pusha
jbe
cmps
lds
push
cmp
pop
inc
pop
dec
es
out
fs
lods
push
jmp
xor
push
retf
add
mov
pinsrw
pop
inc
cwde
repnz
aas
push
sub
or
jno
lods
pop
push
loope
mov
(bad)
sub
mov
inc
or
outs
repz
mov
into
jne
in
adc
fwait
mov
add
adc
xchg
std
sbb
sahf
cmp
shr
es
mov
xor
mov
sub
dec
ins
dec
loop
push
out
or
lock
movs
pop
fdiv
mov
mov
in
pop
or
sbb
push
hlt
inc
dec
nop
test
add
out
pushf
jo
stos
not
aam
dec
das
xchg
cmp
movs
leave
cmp
out
cdq
dec
xor
adc
lea
jmp
and
mov
jle
jbe
jo
imul
fidiv
mov
push
shl
cmp
popf
cli
std
cli
dec
lahf
out
push
fidiv
in
push
movs
inc
jge
or
test
xor
out
or
xlat
shr
inc
xor
push
add
or
mov
or
stc
(bad)
addr16
icebp
inc
fcom
mov
in
sar
mov
mov
(bad)
dec
out
and
push
push
and
adc
jg
out
call
scas
into
call
ja
or
add
neg
xor
(bad)
aaa
mov
xchg
or
and
and
aad
scas
fwait
pushf
test
(bad)
ja
dec
jns
pop
stos
retf
jecxz
push
or
sub
shl
cmc
fbld
sub
dec
fadd
ret
cmp
or
dec
xchg
cmp
movs
aas
cld
push
lods
call
push
jbe
call
push
mov
sbb
add
fcom
dec
arpl
add
xlat
pushf
pushf
xchg
xchg
fsubp
ret
dec
xchg
fbld
(bad)
cld
jne
xchg
daa
adc
sbb
enter
icebp
pushf
lock
out
dec
inc
or
sti
add
mov
xchg
xchg
cld
sub
adc
das
movs
lock
sar
lods
xchg
cwde
iret
cmps
adc
ins
dec
jmp
pusha
mov
xchg
shl
or
not
pop
mov
imul
dec
xor
ret
pop
sub
jae
inc
dec
movs
mov
ret
rcr
lods
cs
retf
addr16
fnsave
sbb
pop
mov
dec
cmp
push
icebp
dec
sti
outs
(bad)
push
and
rcl
mov
popa
dec
push
pop
dec
jl
aaa
fwait
ror
push
xor
fistp
add
xlat
hlt
scas
je
mov
jmp
cs
movs
sbb
adc
rol
aaa
mov
jecxz
push
sub
addr16
and
adc
mov
inc
sbb
add
push
cmp
lea
aad
jmp
ror
or
ret
and
or
mov
out
shl
add
push
cmps
repz
sbb
xchg
mov
mov
clc
aaa
aas
xchg
sahf
ja
stos
add
push
fild
xlat
mov
jnp
pop
xor
cmp
push
and
int3
ss
xor
fwait
xchg
dec
ins
ret
and
jnp
cmp
xor
iret
sub
jge
add
adc
enter
sbb
aaa
dec
(bad)
and
repnz
gs
jns
dec
bound
rcr
sbb
stos
sub
mov
mov
mov
cdq
psubb
fwait
lds
push
dec
dec
sbb
mov
pop
sbb
and
cmps
repz
xor
jge
repnz
das
cmp
xor
les
sahf
iret
ds
mov
jae
push
aam
adc
push
inc
shr
push
jne
sbb
je
idiv
push
dec
jmp
mov
rcr
pop
or
or
sub
into
cmp
jmp
mov
fidivr
xor
mov
sti
outs
inc
outs
push
das
stc
call
shr
in
jp
cmp
mov
int
add
hlt
icebp
sbb
xor
lock
test
or
add
adc
pusha
xchg
gs
div
mov
inc
cli
inc
inc
data16
xchg
and
mov
int3
bound
popf
test
test
mov
inc
mov
mul
sub
test
fnstsw
mov
scas
pushf
and
or
int3
fstp
mov
mov
jle
add
add
sub
jecxz
or
or
mov
div
jle
xchg
adc
test
inc
push
ja
mov
gs
mov
retf
ja
and
pusha
daa
or
dec
cld
imul
fbstp
sbb
sbb
into
adc
aad
lock
test
or
inc
mov
dec
xor
sbb
popa
cmps
cmc
movs
jmp
(bad)
xchg
mov
mov
(bad)
test
xchg
je
loop
jno
loop
cmps
sub
mul
sub
add
sbb
shl
and
jge
scas
scas
inc
adc
adc
pop
sbb
mov
inc
push
bound
in
push
sbb
or
(bad)
les
or
shl
mov
mov
and
cmp
push
into
push
ja
lock
inc
stos
test
addr16
push
and
dec
call
out
xor
sar
stc
(bad)
and
push
mov
jno
xor
push
fmul
pusha
popf
movs
dec
mov
mov
(bad)
cmp
add
cli
outs
mov
or
adc
sub
(bad)
xor
ror
pop
clc
in
mov
inc
outs
(bad)
sub
xchg
push
lds
xchg
mov
mov
cmp
adc
cs
int3
aaa
mov
cmps
sbb
in
mov
and
fs
aam
retf
test
mov
movs
je
mov
ja
in
mov
dec
jl
jo
mov
mov
cmp
imul
sbb
test
jmp
dec
add
pop
or
or
in
aaa
inc
test
and
pop
adc
mov
mov
and
retf
gs
jle
shl
ret
ficom
xor
cwde
or
fwait
pusha
aam
out
jp
sub
aam
ins
loop
inc
adc
push
imul
pop
pop
add
mov
push
test
mov
rcr
xor
push
lods
push
loop
ret
jp
cs
popf
jge
pop
push
mov
leave
loope
sbb
lds
(bad)
test
iret
add
add
inc
lds
and
add
inc
aad
jg
into
xchg
jg
jne
ins
pop
xor
unpcklps
jb
cld
dec
and
out
pop
not
push
xchg
xor
popa
pop
stos
cmps
mov
js
imul
ins
jge
jb
pop
mov
outs
sub
dec
aam
data16
jecxz
jp
pushf
std
loop
lahf
pop
(bad)
dec
das
mov
push
div
xchg
scas
mov
push
jo
div
test
in
or
adc
jge
push
push
jmp
sbb
push
sub
cmp
scas
adc
mov
pop
push
push
popa
xor
fnstcw
ficomp
bound
mov
pop
mov
adc
aam
inc
cmp
mov
stc
int3
and
movs
jg
xor
dec
popa
push
cmp
out
sbb
sbb
(bad)
fwait
dec
push
or
or
iret
sahf
xchg
and
fsubr
aaa
out
and
jns
ss
lds
pop
jmp
xchg
loop
lock
jns
int3
add
mov
or
sbb
loopne
cmp
push
and
fimul
xor
inc
push
xchg
(bad)
icebp
and
mov
js
out
mov
lea
jmp
dec
movs
push
jmp
jne
movs
push
retf
mov
cmps
push
dec
inc
pop
ins
fld
test
call
dec
jo
add
add
mul
ret
scas
mov
xchg
cmc
xchg
mov
lahf
cld
movs
sbb
add
test
and
and
popa
jns
mov
push
ret
xor
retf
sbb
mov
inc
xor
xor
in
aam
mov
inc
jmp
lahf
aam
adc
enter
test
sbb
cmp
test
xchg
and
scas
add
xlat
dec
enter
xchg
loope
jmp
retf
cmp
(bad)
jo
mov
pop
outs
in
icebp
lds
in
mov
jo
sbb
ret
scas
inc
sub
clc
pushf
cmp
stc
shr
pop
cdq
out
ja
inc
(bad)
xlat
jnp
sbb
cmp
imul
mov
outs
sbb
mov
pop
add
rol
std
aaa
call
pop
jo
push
hlt
fcmovnu
and
jl
rcr
dec
es
mov
pushf
std
pop
pop
je
in
add
dec
adc
xor
cmp
and
int3
and
shr
enter
(bad)
sbb
sub
movs
jge
test
lods
ret
(bad)
popf
add
std
mov
pop
sub
and
pusha
in
into
(bad)
dec
in
jbe
dec
das
out
push
test
rcl
mov
xor
in
xor
or
sbb
push
test
inc
(bad)
out
loopne
dec
jecxz
movs
xlat
imul
aad
in
dec
cmc
icebp
mov
pop
sbb
aaa
jbe
dec
stos
add
stc
fwait
call
jo
pusha
xchg
cmp
mov
xor
in
sub
clc
js
fxch
iret
mov
fnsave
pop
mov
mov
sbb
hlt
sbb
cmc
inc
jle
adc
push
addr16
popa
dec
mov
xor
sub
xchg
xchg
pushf
mov
int
test
mov
icebp
mov
pop
mov
mov
ror
mov
cmp
movs
pop
sub
hlt
dec
cmp
fistp
pop
sbb
faddp
bsf
jmp
fisubr
lods
add
(bad)
sbb
or
dec
imul
jno
hlt
fisttp
stos
js
push
mov
out
inc
sar
xchg
dec
jae
jo
dec
or
fadd
arpl
ins
pop
lea
in
mov
mov
test
sbb
pop
test
cmps
mov
mov
(bad)
and
sub
mov
push
jnp
jmp
dec
cmp
pop
mov
or
mov
mov
jmp
les
xchg
cdq
sbb
xor
stc
lea
add
jns
push
add
mov
fs
add
aas
cmp
pop
ds
xchg
xor
lods
xor
cmp
(bad)
inc
test
call
mov
inc
and
int3
adc
movs
les
mov
arpl
cmp
inc
int
xor
fdiv
add
loop
fst
(bad)
dec
adc
jno
mov
push
or
mov
jae
cmc
inc
pushf
jmp
mov
and
jmp
mov
xor
out
pop
(bad)
xchg
ds
sbb
leave
push
into
daa
cs
or
dec
xchg
push
dec
add
clc
cmp
cdq
out
(bad)
shl
mov
cmc
jp
pop
xchg
xchg
xchg
out
add
xor
rcl
jp
fbld
ins
cmp
(bad)
(bad)
hlt
pop
inc
inc
imul
pushf
push
or
add
and
mov
inc
lahf
xchg
mov
sbb
mov
aaa
xchg
outs
and
lods
jmp
out
or
jae
mov
mov
push
rcr
xchg
add
adc
das
mov
add
and
bound
xchg
das
in
mov
dec
outs
pop
add
xchg
and
xchg
sbb
pusha
mov
fwait
or
xor
push
scas
or
sub
xor
inc
jno
dec
and
cld
cs
add
cdq
mov
push
adc
pop
xor
push
cli
(bad)
repz
scas
div
cmps
enter
inc
dec
inc
adc
add
or
or
adc
push
int3
test
adc
sub
div
add
jle
jb
cmp
inc
repnz
rsqrtps
xchg
jp
movs
pop
or
js
mov
sub
fwait
movs
sahf
ins
in
adc
xor
inc
outs
in
add
mov
ret
in
xchg
jmp
clc
sub
in
xchg
les
xchg
mov
sbb
lods
dec
test
sub
shr
es
push
xchg
cmp
jno
call
and
gs
sbb
adc
scas
jl
and
int3
dec
add
call
arpl
movs
cmc
daa
aad
mov
std
push
jmp
pop
sbb
adc
xor
nop
pop
imul
(bad)
dec
daa
xchg
ss
ret
add
fidivr
mov
dec
xlat
mov
sbb
add
call
sub
popf
push
push
pop
lahf
xchg
je
pop
jno
nop
jp
(bad)
hlt
iret
ror
add
fs
(bad)
std
xchg
aad
(bad)
cmps
lea
push
aas
enter
mov
lock
adc
sub
imul
retf
pop
mov
dec
ror
push
ja
fs
(bad)
icebp
loope
mov
adc
dec
imul
xor
dec
jecxz
test
test
int
or
mov
push
mov
sbb
sbb
arpl
addr16
mov
pusha
dec
mov
arpl
xchg
loop
enter
lods
sub
call
pop
adc
in
call
cmps
jmp
cmp
lock
mov
inc
mov
pop
mov
adc
bnd
stc
inc
jnp
xchg
xor
cmp
or
inc
mov
scas
std
(bad)
lds
or
and
sbb
sbb
mov
xchg
push
pop
jne
retf
hlt
int3
xchg
imul
nop
mov
cmp
test
xchg
or
repz
push
jne
push
outs
out
fwait
or
cmp
idiv
clc
jns
inc
aam
adc
les
sub
cmc
sbb
and
xchg
movs
dec
xor
in
push
sahf
or
xchg
pop
test
xlat
int3
dec
cdq
and
mov
pop
xchg
scas
mov
and
dec
jmp
mov
stos
xchg
or
xchg
icebp
imul
leave
loopne
hlt
retf
inc
outs
js
sbb
gs
dec
push
cmp
mov
cmp
xor
or
push
or
ins
lds
mov
push
inc
addr16
aas
out
xchg
out
cmp
shl
in
js
mov
es
push
jmp
adc
inc
das
cmps
mul
push
(bad)
clc
jle
es
aas
push
push
xchg
scas
mov
int
mul
les
or
add
or
jle
mov
mov
inc
popf
clc
pop
pop
sti
cmp
mov
scas
mov
xchg
inc
xchg
adc
cwde
in
sub
jns
mov
test
cmps
inc
push
xchg
mov
jb
xchg
pop
fstp
inc
data16
nop
sub
jle
add
lods
jmp
cdq
mov
mov
adc
cmp
push
je
sti
repnz
pop
in
jo
fwait
xor
lods
and
sub
in
sub
and
jne
js
pop
cmps
out
jmp
push
call
mov
jno
retf
push
add
sbb
mov
sub
cmp
mov
pop
sub
cmp
cmp
mov
rcl
jmp
inc
sbb
(bad)
out
dec
int
dec
adc
sub
push
idiv
sub
pop
mov
test
cs
out
adc
rcl
inc
add
sub
push
xchg
outs
sbb
xchg
jl
pop
in
adc
sahf
loope
gs
or
sub
push
adc
mov
jnp
sub
xor
cld
in
leave
cmp
jb
xchg
test
jp
cmps
lds
std
jb
xchg
and
(bad)
mov
scas
push
clc
aaa
test
cli
(bad)
icebp
inc
push
mov
fstp
leave
mov
shr
(bad)
jmp
aas
inc
fs
jmp
pop
adc
xor
xchg
xchg
ss
inc
add
jb
cdq
call
call
rcl
movs
jecxz
or
adc
jo
das
adc
sub
jmp
mov
fiadd
lds
xchg
fld
push
add
jo
mov
retf
push
mov
mov
(bad)
aad
or
pop
outs
or
popa
or
lods
aam
out
and
jmp
loopne
(bad)
(bad)
sbb
ins
ds
jns
shr
ror
jmp
rcl
leave
les
lock
dec
xor
gs
jp
clc
push
xor
xor
mov
inc
ss
rcl
push
bound
sbb
jo
jp
retf
hlt
jb
and
mov
dec
push
mov
jmp
call
test
stos
lods
pop
sub
in
je
jge
enter
gs
sbb
ret
push
sbb
dec
out
or
inc
out
sub
xchg
ins
aad
ficom
dec
inc
in
es
xchg
and
ss
xor
add
xlat
iret
sub
je
cmp
mov
das
mov
aas
aad
ss
aaa
adc
shld
js
rcr
out
add
mov
mov
addr16
push
push
and
sub
mov
fcmovb
test
fistp
jmp
or
sub
adc
pop
push
nop
movs
test
pushf
inc
dec
jne
add
and
sbb
call
mov
sahf
(bad)
stc
inc
jmp
dec
and
dec
push
cs
mov
lock
inc
sub
pop
shl
xchg
rol
or
mov
push
or
repz
xchg
mov
xor
xchg
mov
fist
addr16
into
mov
dec
cmp
cmp
ins
sbb
mov
les
pop
sub
jle
(bad)
dec
jb
punpckhwd
in
call
cs
mov
mov
adc
js
jns
fsub
repnz
leave
ins
nop
out
dec
pop
mov
pushf
jb
lock
xchg
rcl
inc
int
mov
xlat
xlat
movs
jmp
imul
xchg
cmp
test
adc
dec
stc
int
rcr
cld
xor
mov
rol
ins
xchg
ret
rcr
add
push
add
add
outs
jecxz
arpl
adc
sar
cmp
cmp
xchg
mul
sub
enter
xchg
pop
scas
jmp
push
les
imul
push
adc
nop
aaa
push
js
push
mov
pop
retf
jae
cmps
adc
daa
or
pop
in
in
or
inc
and
(bad)
retf
leave
and
mov
fidivr
cmp
jae
rol
push
mov
mov
test
add
add
scas
gs
pushf
add
hlt
xchg
sub
add
and
push
xchg
cmp
mov
lahf
or
cmps
cmps
xchg
mov
daa
or
fist
push
arpl
sub
call
repz
sahf
mov
mov
jmp
or
jo
pop
jns
sbb
mov
inc
into
pop
inc
test
test
imul
lahf
dec
jp
push
ja
push
ds
sub
neg
push
pop
sar
add
fxch
hlt
fcmovne
stos
popf
sub
sbb
mov
jl
mov
mov
cmp
mul
mov
call
jno
(bad)
pop
sbb
xchg
sub
(bad)
adc
(bad)
cmp
sti
fwait
stc
fld
pop
dec
cmp
clc
sub
(bad)
and
rcl
xor
call
jle
shr
loope
in
cmp
fisttp
adc
popw
adc
test
(bad)
cmp
inc
movs
jecxz
es
fisubr
xor
sub
mov
mov
mov
mov
stc
xor
xlat
push
fdivr
aas
clc
cli
inc
jns
lods
xor
icebp
leave
das
in
push
sbb
js
xchg
jno
adc
pop
sbb
out
hlt
xchg
stos
and
std
add
aad
not
inc
cmc
test
cwde
jp
xchg
sbb
push
in
sahf
repz
adc
out
add
pop
rcl
xchg
lods
aad
daa
cld
and
fst
xchg
pusha
ds
add
mov
call
adc
push
dec
sbb
fiadd
jg
or
jbe
pop
and
add
adc
inc
push
pop
and
scas
test
scas
inc
mov
dec
cdq
jmp
and
addr16
addr16
or
mov
add
mov
ins
or
add
into
xor
mov
add
sti
jl
enter
sbb
cmps
adc
ins
dec
xchg
fwait
and
jae
into
xchg
fucomi
cli
lds
dec
sbb
shl
scas
shr
popf
fs
xor
mov
or
jbe
adc
xchg
movs
lea
dec
push
dec
ss
movs
inc
cmps
xlat
and
mov
pop
scas
inc
cmp
jp
outs
psrld
jae
push
pop
adc
adc
pop
mov
lods
or
aas
cmp
pop
push
loopne
or
(bad)
xor
fwait
pop
push
inc
mul
test
push
lods
in
shl
ret
and
mov
mov
rcl
push
fdivr
rol
ins
xchg
pusha
pop
outs
or
mov
cmp
(bad)
imul
jp
cmp
sbb
lods
sbb
and
push
mov
add
imul
aad
cmp
aad
mov
jg
cmp
xchg
cmps
add
sub
scas
xchg
mov
out
sub
stos
sbb
imul
jg
push
in
mov
aas
arpl
mov
nop
dec
cmp
xlat
stos
stc
cwde
dec
push
(bad)
call
jp
push
test
std
sbb
mov
popf
hlt
inc
jl
jb
repz
xor
stc
xchg
inc
inc
enter
jmp
fsubr
rcl
sti
ss
dec
jno
add
cmp
std
jmp
ror
adc
jmp
jge
xchg
sbb
popa
leave
inc
and
cmps
push
and
mov
scas
cli
fcmove
jnp
mov
call
out
sbb
test
mov
shr
push
das
out
jbe
sbb
sbb
mov
rcr
mov
fnsave
add
jmp
pop
and
pop
pushf
mov
idiv
data16
rcr
mov
jecxz
fxtract
(bad)
push
test
cmps
and
mov
lea
(bad)
mov
ficom
shr
inc
mov
and
rcl
repz
(bad)
pop
loop
sub
jb
(bad)
push
test
cmp
pop
dec
out
cs
cli
adc
sub
or
jnp
je
jns
clc
xchg
add
loopne
and
cmp
daa
mov
or
sbb
sub
test
push
cmp
mov
mov
xchg
add
icebp
inc
mov
push
pushf
dec
das
loopne
stos
ins
mov
in
adc
aad
xchg
nop
mov
das
xchg
scas
lahf
sub
mov
retf
lahf
sub
in
mov
pop
jecxz
push
test
test
je
scas
je
into
inc
mov
xchg
popa
jle
pop
imul
popa
popf
inc
sbb
mov
movs
mov
sahf
dec
sub
cmp
movs
iret
call
jge
cmp
xlat
and
cmp
in
sbb
pop
push
adc
dec
std
lods
sub
jnp
xchg
scas
adc
xchg
out
dec
mov
stos
stos
stc
call
sbb
jne
aad
jecxz
mov
dec
call
cmp
rol
mov
cmps
jns
add
and
mov
dec
gs
sbb
pop
or
xor
movs
push
out
lds
pop
push
dec
pop
sub
mov
pop
push
das
into
(bad)
int
push
cmps
jmp
fadd
xchg
mov
out
mov
sar
(bad)
mov
push
movs
xchg
cmc
or
mov
lock
test
les
lahf
imul
in
out
ja
es
cmp
jg
xor
push
jmp
cmp
add
mov
jecxz
fs
sub
and
mov
test
dec
inc
adc
mov
data16
addr16
ret
push
xor
ret
adc
ret
and
imul
dec
js
and
xchg
arpl
xchg
inc
dec
mov
test
cmp
test
adc
aam
xor
cmp
test
lods
shr
adc
loop
lea
push
sbb
mov
cmc
pop
or
(bad)
shl
aam
movs
and
cld
adc
mov
mov
xlat
std
pusha
mov
adc
jg
or
nop
cmp
mov
test
or
sub
mov
shl
cmp
xor
mov
outs
add
xchg
xor
pop
sbb
sub
xchg
std
cmc
les
sub
jnp
out
dec
shl
fadd
dec
cli
mov
mov
pusha
dec
fucomi
ror
(bad)
mov
imul
fdiv
add
mov
and
int
fdiv
mov
fistp
or
cmp
(bad)
scas
push
cli
in
push
ret
jl
shl
test
mov
mov
mov
mov
cmp
iret
and
pop
mov
imul
mov
dec
mov
int
(bad)
movs
loopne
sub
ins
outs
(bad)
loope
in
sti
cmp
or
in
or
mov
xchg
test
mov
outs
(bad)
lahf
fisubr
xchg
adc
xchg
or
xor
aam
adc
pop
sbb
mov
(bad)
call
jmp
mov
sti
cdq
inc
push
mov
cwde
bnd
sbb
or
mov
inc
inc
(bad)
fcmovne
sbb
jl
sub
gs
icebp
ret
fimul
adc
pop
(bad)
addr16
les
stos
xor
in
mov
aas
xchg
cmc
dec
sub
cld
and
arpl
jno
out
fstp
dec
xor
in
shl
sub
pop
and
push
mov
popa
add
outs
sbb
mov
push
and
into
mov
fcmovnb
mov
imul
mov
in
bswap
retf
cdq
mov
or
cmp
jmp
xchg
mov
in
imul
sar
stc
hlt
dec
cld
cmp
xchg
sub
cwde
cmp
sub
mov
cli
push
pop
xor
or
in
iret
scas
leave
add
fsub
jno
jmp
cmps
dec
imul
xchg
cli
cdq
jo
sti
cmp
sbb
aas
pop
cmp
test
fnstcw
pop
loope
dec
dec
inc
outs
scas
and
cld
xchg
jg
mov
and
add
inc
cmps
ror
push
loopne
push
imul
das
add
push
jg
aaa
and
fcmovb
into
inc
cmp
sub
inc
icebp
push
pop
pop
call
jg
lods
ds
or
(bad)
fsubr
sub
add
into
sar
out
arpl
clc
pusha
cli
xchg
mov
outs
enter
adc
inc
xchg
sbb
sbb
jnp
mov
outs
inc
mov
sub
pop
adc
mov
pop
xchg
js
pushf
adc
fndisi(8087
ins
pusha
es
in
es
sbb
sbb
adc
jno
xor
mov
xchg
push
cmps
cli
cli
imul
dec
inc
cmp
sbb
dec
mov
enter
test
retf
ds
pop
and
mov
add
loop
inc
jbe
pushf
and
std
inc
pop
hlt
int
dec
int
cli
pop
push
cli
sbb
cdq
push
mov
or
retf
hlt
sbb
cmp
adc
cli
sub
popf
(bad)
js
lods
int3
mov
fisttp
ret
jb
mov
in
mov
out
fs
sub
xor
enter
jl
cli
je
aaa
push
xchg
fwait
jmp
dec
lods
or
inc
test
adc
lods
mov
inc
into
add
pop
mov
jl
mov
(bad)
sbb
icebp
jmp
mov
add
jnp
mov
push
xchg
add
aam
inc
dec
cmp
or
inc
and
and
das
sub
and
lods
add
daa
mov
mov
jbe
shr
in
loop
adc
pop
or
mov
and
push
push
in
sub
xchg
mov
pop
out
retf
add
jns
push
int3
ja
int
aaa
adc
daa
sub
and
ficomp
and
push
add
jmp
push
retf
mov
pop
xor
xor
mov
in
fsub
(bad)
sub
adc
(bad)
adc
xchg
ror
sbb
xchg
mov
call
xchg
or
loope
fisubr
les
je
dec
fwait
cmp
mul
sbb
pop
les
and
(bad)
inc
inc
and
(bad)
cmc
mul
cmp
sbb
pushf
jp
out
mov
push
inc
es
neg
adc
ror
or
jmp
push
sub
lods
jo
xchg
jg
push
pop
frstor
ja
mov
outs
and
push
sbb
fs
dec
jae
(bad)
mov
mov
jo
cmp
pop
or
aaa
inc
(bad)
fwait
dec
(bad)
in
xchg
mov
imul
pop
xor
lock
nop
mov
pop
cs
les
mov
ss
dec
sub
lahf
xchg
rcr
in
xor
xor
cdq
retf
xchg
add
lods
int
cs
imul
xor
into
and
call
push
jle
inc
sti
push
enter
and
daa
sahf
or
popa
jge
pop
cmp
hlt
pop
cmp
or
lods
dec
lock
(bad)
fisub
iret
(bad)
xchg
inc
or
sbb
jecxz
stos
dec
jge
mov
adc
jecxz
push
bound
sahf
iret
adc
lods
mov
mov
addr16
imul
not
sbb
adc
sub
xchg
push
push
stos
leave
jno
cdq
adc
inc
push
sbb
or
jae
jmp
add
mov
movs
retf
xor
jae
out
cmp
sbb
mov
div
(bad)
pop
nop
and
jmp
xchg
jne
arpl
push
pusha
ret
inc
push
xor
leave
or
js
push
mov
pop
lock
jae
sbb
(bad)
pop
icebp
mov
adc
(bad)
mov
push
lock
cwde
cmp
xchg
fnstsw
xchg
retf
cs
sbb
mov
sbb
inc
nop
jae
loope
xchg
retf
sub
adc
jae
jp
popa
xchg
jg
sahf
ins
cwde
(bad)
or
mov
pop
cmp
aas
inc
jmp
inc
std
dec
outs
scas
sbb
in
xlat
fimul
xchg
fs
int3
sub
loop
test
xchg
xor
repz
aad
push
test
mov
cld
jno
stos
xchg
shl
xchg
inc
scas
clc
ins
fwait
icebp
mov
cmc
push
out
lods
cmp
in
xchg
scas
fnstenv
cmp
lahf
test
cmp
dec
fwait
(bad)
aas
mov
es
test
or
adc
std
ror
test
jno
pop
mov
loop
loop
(bad)
rcl
data16
ins
inc
inc
addr16
cmps
mov
and
(bad)
pop
push
jl
sbb
inc
nop
repz
repnz
pop
jne
xchg
jbe
out
ret
jmp
jmp
(bad)
sub
cmp
push
xor
sub
fs
and
out
mov
hlt
sub
xchg
jo
dec
xlat
into
das
cmps
jge
mov
cld
push
aaa
mov
sahf
test
cmp
and
add
cli
ror
pop
mov
adc
scas
das
mov
jae
daa
imul
cmp
fimul
and
icebp
jno
mov
lock
add
lahf
test
push
das
cmc
xchg
mov
call
fidivr
rcr
clc
xchg
push
inc
pop
mov
push
sbb
cmc
aas
aas
push
(bad)
pop
retf
(bad)
aad
push
inc
dec
jge
and
cld
pop
addr16
adc
xor
ins
movs
in
jno
inc
out
jo
add
cmp
jno
es
sbb
cmp
mov
into
xchg
or
rcr
mov
mov
xchg
imul
add
inc
stc
push
adc
stc
mov
xor
test
scas
aas
sti
mov
rsqrtps
add
addr16
cmps
loop
mov
jae
or
inc
(bad)
pushf
in
pusha
push
pop
jmp
in
jb
jno
cmc
pop
dec
icebp
adc
adc
mov
mov
mov
jae
push
movs
sahf
out
xlat
pop
jno
pop
xor
and
sub
stos
sub
jne
imul
(bad)
into
or
pop
sbb
test
aad
mov
cmp
call
xlat
inc
mov
jl
jg
add
outs
sar
xchg
popf
mov
push
stc
mov
add
pcmpeqd
mov
ja
pop
(bad)
jns
test
jae
bound
inc
(bad)
push
inc
out
push
cli
pop
push
sub
clc
mov
test
enter
js
or
sbb
cmp
pop
daa
(bad)
fild
or
paddusb
xor
dec
dec
inc
mov
clc
and
pop
test
(bad)
test
cmp
scas
int3
pop
int3
andps
stos
push
push
test
arpl
pop
mov
stos
bound
cdq
ins
hlt
jl
xchg
inc
push
push
lods
mov
sbb
xchg
ins
mul
push
lock
sbb
xchg
pop
aad
call
jge
dec
(bad)
iret
sub
xchg
xchg
stos
cmp
fisttp
outs
sbb
stos
retf
sbb
mov
cmps
in
fmul
mov
sub
mov
sahf
aas
push
add
pusha
cmp
pop
mov
mov
pop
pushf
inc
rcl
and
or
cmps
jno
xchg
outs
ret
push
in
fstp
pop
and
dec
icebp
and
mov
imul
sub
lds
test
xchg
dec
add
mov
cli
imul
repz
cmp
cmp
movs
(bad)
cmp
test
call
inc
mov
jle
jecxz
xchg
push
xchg
and
(bad)
xor
dec
xchg
(bad)
inc
es
repz
adc
out
jnp
ret
sahf
cmp
ret
xor
leave
rol
pop
add
xchg
mov
xchg
jmp
mov
jl
or
(bad)
stc
sbb
and
jmp
dec
pop
inc
inc
loop
movs
mov
push
or
mov
xor
fnstenv
call
sahf
cmp
mov
sti
(bad)
sti
push
dec
inc
dec
out
scas
ins
daa
test
in
sub
xchg
rcl
and
lods
hlt
cmp
sub
ja
cs
repnz
inc
ret
imul
add
jno
retf
cmp
dec
fst
dec
(bad)
cwde
es
ds
jns
pop
int
or
lahf
dec
cmp
dec
mov
loop
es
jnp
(bad)
push
ret
(bad)
mov
mov
push
and
jnp
ds
pop
lods
jbe
adc
ins
dec
pop
push
adc
jae
jno
cmovl
loop
sub
mov
push
stc
ror
inc
mov
push
mov
es
pushf
xchg
and
es
daa
lea
sar
mov
xchg
dec
jns
jmp
pop
sub
jp
loop
arpl
es
mov
imul
mov
xchg
movs
rcl
add
loope
push
push
xor
xchg
cdq
popa
pop
ror
push
dec
outs
test
in
dec
rol
dec
dec
inc
pushf
mov
pop
lock
(bad)
out
shl
repz
loopne
adc
stc
js
pop
(bad)
in
mov
push
rcl
out
xor
ret
push
ror
adc
fisttp
pop
dec
xor
test
or
stc
add
out
pop
mov
sub
dec
inc
dec
cld
xor
pop
out
test
push
mov
in
cmps
in
jp
mov
jae
inc
pop
mov
push
in
dec
into
nop
xchg
add
add
aam
or
cmp
enter
push
cmps
ret
sub
int3
sar
push
cli
cld
adc
repnz
cmp
mov
test
jae
mov
cmps
jl
fimul
movs
inc
enter
inc
push
loopne
jne
fadd
out
jb
mul
movs
int
sbb
cs
add
mov
dec
mov
movs
cmc
xor
dec
das
sahf
ror
rol
xchg
test
xchg
out
xchg
xchg
ret
cmp
shl
push
rcr
mov
addr16
sbb
lea
das
push
das
adc
sbb
stos
dec
into
mov
ror
pop
xchg
push
sti
mov
xlat
arpl
and
mov
mov
jns
jmp
sub
(bad)
lahf
xlat
cmp
pop
(bad)
xor
pop
inc
xchg
movs
imul
sbb
pop
clc
out
pop
out
or
jp
xor
sbb
test
adc
lock
add
ret
push
sub
(bad)
in
inc
sub
mov
sbb
retf
mov
pop
nop
in
mov
ror
aad
test
addr16
mul
ret
div
adc
ss
fsub
fldl2e
pop
scas
inc
int
or
push
cmps
jno
in
inc
nop
stc
add
jp
enter
and
stos
sbb
push
adc
cmp
push
lahf
jge
or
lahf
loop
jge
cmp
sbb
cmps
jmp
sub
jle
push
sbb
int3
jno
scas
pop
or
or
out
pop
cmp
call
je
(bad)
xchg
stos
mov
inc
inc
jge
or
lahf
cmc
in
aam
dec
int3
xor
dec
aam
inc
cmp
or
sbb
ror
add
ret
loope
enter
jmp
jg
lds
mov
push
cmp
jb
cmp
push
jnp
fisubr
and
scas
(bad)
das
mov
pop
pushf
nop
pop
ja
js
nop
retf
out
add
pusha
pop
jnp
adc
not
(bad)
fsubr
in
in
add
(bad)
iret
push
test
(bad)
adc
mov
out
pop
cwde
popf
dec
xchg
xchg
adc
dec
sahf
adc
je
mov
test
jge
xor
push
test
ins
xchg
pusha
fldcw
and
sbb
cwde
jle
dec
jb
fist
and
xchg
mov
mov
popf
push
inc
sbb
mov
ss
and
jle
fisttp
jecxz
xor
in
push
call
into
sub
pusha
loope
push
fldcw
pop
bound
rcl
lods
mov
mov
or
or
clc
cld
lods
sub
mov
add
push
sub
mov
gs
sub
movs
sub
lods
adc
inc
movs
mov
sub
pop
scas
mov
ds
call
movs
lds
and
push
(bad)
fidiv
imul
dec
add
dec
fmul
mov
fnstenv
cld
add
jmp
pop
into
adc
jnp
mov
test
in
cmp
pop
jp
in
jbe
pop
cmp
cdq
(bad)
(bad)
jno
sub
or
jne
lahf
lahf
test
aad
push
jl
movs
cld
push
mov
push
cmp
aaa
xchg
cld
adc
sbb
sbb
push
mov
popa
mov
or
xor
mov
push
fst
sub
adc
repz
dec
mov
iret
out
sbb
out
jbe
lds
aad
xchg
mov
dec
cmp
push
xor
jmp
(bad)
jge
mov
cmps
jg
nop
cmp
xchg
push
bound
shl
and
add
pop
jns
shl
cli
dec
pop
or
jge
daa
xlat
mov
js
push
adc
xchg
sbb
(bad)
stos
add
xchg
xchg
(bad)
ins
loop
retf
cld
repz
jg
dec
xchg
repz
movs
pop
xor
mov
push
sar
mov
fstp
mov
leave
shr
pop
mov
ins
mov
and
push
jmp
adc
or
push
dec
loopne
inc
lods
pop
sub
pushf
repz
inc
push
sbb
cmc
dec
popf
jp
inc
bound
cmp
add
or
popa
mov
sub
jl
pusha
sti
leave
add
dec
(bad)
jbe
pop
fistp
sbb
push
in
xor
cmp
add
mov
push
(bad)
jmp
je
or
pop
jo
xchg
xor
sbb
pop
and
outs
sbb
fst
adc
cmp
mov
aad
adc
adc
cli
(bad)
push
jmp
push
or
inc
dec
dec
sbb
xor
clc
pop
test
stos
mov
cmp
fadd
mov
dec
in
mov
cmp
in
pushf
repnz
inc
loopne
xchg
ins
mov
inc
js
repnz
aad
out
dec
or
retf
pop
sub
add
sub
cmp
cs
cld
(bad)
outs
sar
xchg
ins
sbb
mov
rol
movs
mov
cs
cmp
jmp
sbb
aad
nop
and
stos
jmp
cmps
push
or
call
cli
fbstp
shr
neg
or
movs
sahf
pop
and
xchg
pop
lock
jne
xchg
adc
test
mov
bnd
xchg
add
out
in
jb
ins
sbb
sar
jl
cmp
movs
cld
cmp
adc
jne
(bad)
scas
pop
mov
out
loopne
scas
aad
shl
xchg
and
cs
mov
or
and
leave
add
or
mov
push
mov
repnz
mov
fnsave
dec
aaa
xchg
sub
dec
xor
rol
inc
dec
lds
aad
sub
arpl
sbb
sub
gs
mov
les
pop
jmp
mov
scas
and
ins
mov
mov
pop
sar
jge
sub
or
stos
lods
mov
mov
inc
movs
sbb
mov
mov
in
lods
mov
imul
mov
fwait
xchg
aas
nop
sub
xchg
and
mov
or
aad
std
push
or
out
out
mov
or
idiv
(bad)
push
into
inc
sub
dec
popa
clc
int3
mov
jp
(bad)
jle
mov
pop
lds
dec
xchg
js
fwait
xchg
mov
rcr
out
fidivr
cdq
jge
fucom
xor
mov
sbb
lods
and
dec
ds
and
dec
pop
test
fidiv
add
mov
ret
cdq
fisubr
int
inc
cdq
pusha
repz
adc
icebp
pushf
jae
test
fcomp
add
popa
int3
(bad)
fxch
or
in
mov
test
or
out
call
movs
(bad)
xchg
push
jb
or
cmp
sti
imul
pop
data16
loopne
test
ds
pusha
jg
xor
jo
add
out
xchg
mov
add
imul
inc
jmp
push
mov
pop
bound
shr
aas
or
or
adc
ss
dec
mov
scas
(bad)
iret
xstore-rng
cmps
(bad)
int
(bad)
ror
cmp
mov
aad
loop
mov
ror
shl
hlt
daa
cli
jmp
leave
ret
loope
and
sbb
or
add
cmp
fst
pop
fistp
or
jb
adc
retf
(bad)
call
in
mov
xor
out
shl
repnz
push
pop
mov
ins
inc
mov
ins
adc
push
shr
fwait
pop
jae
loopne
outs
mov
and
test
out
icebp
test
sub
neg
lock
lea
mov
aas
cld
and
das
mov
sub
fmul
or
aad
movs
retf
jle
push
loopne
jmp
pop
or
ins
add
lock
mov
add
cmp
rol
xor
fcomp
imul
stos
mov
ins
repnz
dec
daa
pop
(bad)
push
cmp
mov
jno
xchg
or
push
jbe
(bad)
out
jmp
xor
lock
adc
and
xor
xchg
rol
repnz
jnp
mov
mov
ret
ja
cmp
push
test
pop
pop
push
stc
cli
inc
outs
mov
scas
mov
int
jp
sbb
inc
stos
arpl
jecxz
ss
scas
xchg
popa
mov
lock
cmc
mov
icebp
mov
pop
je
and
(bad)
stc
icebp
mov
fs
bound
test
or
in
pop
addr16
inc
lods
mov
or
fsub
mov
ja
and
iret
inc
loope
mov
fadd
inc
aad
out
stos
sub
sbb
mov
or
lds
xor
dec
in
leave
and
stc
(bad)
mov
(bad)
fistp
xor
add
jb
cmp
mov
test
enter
int3
jp
scas
sbb
push
sub
mov
fdivr
jo
cmp
cli
stc
and
mov
dec
outs
ins
cmp
mov
mov
aam
pop
adc
mov
xchg
push
add
fst
cmp
cli
add
xchg
cdq
cli
dec
sti
push
xchg
sub
sar
dec
push
xor
push
repnz
mov
test
cli
inc
pop
push
sub
xchg
add
mov
push
cs
sti
daa
fstp
mov
cmp
js
das
push
lds
(bad)
xor
arpl
retf
fcom
pop
sub
leave
sub
dec
sub
mov
retf
out
mov
nop
sub
and
and
sbb
mov
jo
fs
test
popf
clc
fld
xor
out
xchg
push
push
mov
cmp
push
outs
rdtsc
aas
loopne
clc
xchg
inc
sbb
pop
adc
(bad)
dec
fbld
jno
xor
sahf
mov
stos
int
mov
mov
pop
das
or
addr16
add
cmp
or
enter
sbb
mov
inc
xchg
mov
xchg
and
xchg
fmul
leave
sub
out
loopne
not
fs
cmp
or
outs
call
lahf
mov
push
mov
xor
mov
adc
pop
inc
mov
cmps
fst
pop
jp
mov
aas
push
iret
inc
mov
call
jmp
push
jmp
cwde
or
test
outs
mov
or
in
inc
jno
jne
retf
jge
mov
cmp
sub
fiadd
jmp
fcomp
(bad)
call
cmp
in
loope
cmp
push
or
lea
cs
push
sahf
cmp
mov
inc
pop
sub
loop
jae
inc
nop
aas
das
push
movs
pop
or
test
movs
lds
dec
dec
dec
sbb
stos
inc
and
lea
jb
pushf
xor
bndstx
mov
add
bound
inc
mov
mov
sbb
sbb
loop
xor
mov
ror
sub
add
pop
adc
mov
aas
arpl
sub
aad
cmp
inc
inc
test
out
dec
mov
arpl
xor
xor
popf
jge
jp
pop
arpl
mov
(bad)
jp
js
and
imul
mov
and
popa
sbb
ret
fcom
stos
out
ss
lock
jp
cli
xchg
lods
int
pop
mov
add
jbe
inc
(bad)
adc
dec
fisttp
push
xchg
cdq
xchg
ret
jb
xlat
jp
pop
cwde
push
mov
mov
(bad)
cmp
leave
mov
xchg
rcr
enter
aam
cld
rcr
out
leave
(bad)
fdivr
sub
xor
leave
movs
jg
rcr
(bad)
jmp
add
or
inc
ja
and
or
inc
mov
sbb
jb
mov
dec
xor
xchg
add
mov
je
pop
repz
lock
inc
call
das
ins
xchg
fst
popf
sbb
(bad)
push
push
pop
sti
stc
retf
pop
jno
mov
xor
imul
shl
jne
add
in
test
aaa
fs
add
into
add
mov
sbb
in
cli
jno
push
mov
loope
pop
mov
jmp
xor
cmps
dec
ret
dec
test
mov
out
push
mov
adc
enter
inc
add
push
dec
in
sub
(bad)
pop
adc
push
loop
mov
mov
(bad)
(bad)
jle
aam
lods
mov
cdq
(bad)
add
mov
sbb
aam
xchg
xor
mov
mov
mov
stc
or
loopne
pop
sbb
xor
adc
jge
mov
pop
in
fnstenv
gs
jl
(bad)
sub
mov
and
sti
pop
rcr
dec
imul
adc
xor
std
fadd
imul
aaa
scas
or
fdiv
inc
mov
mov
mov
jecxz
dec
ret
fucomip
fild
push
jns
dec
ror
mov
arpl
xor
add
hlt
les
add
jne
jns
stos
or
mov
adc
(bad)
scas
xor
cmp
push
bswap
mov
(bad)
push
fnstenv
and
xchg
and
push
imul
mov
and
sbb
ja
inc
cmp
or
or
aad
div
(bad)
enter
call
adc
adc
and
mov
mov
cld
or
xor
jne
cmps
addr16
xchg
xor
shl
xchg
cld
inc
add
call
loop
mov
(bad)
idiv
rep
je
jmp
scas
rcr
inc
sub
inc
dec
cs
fsub
out
mov
adc
adc
daa
sbb
idiv
jb
int
popf
jmp
mov
sbb
dec
idiv
sbb
mov
inc
and
add
inc
pop
and
movs
and
shl
jle
stos
(bad)
cmp
addr16
sbb
dec
mov
adc
inc
adc
xlat
je
xor
mov
push
xor
in
cmps
idiv
pop
or
mov
psubw
sub
bnd
or
push
mov
adc
cmps
jg
xchg
out
pop
pushf
daa
xchg
xor
pop
sahf
sub
mov
pushf
cmps
dec
retf
std
pop
iret
adc
jbe
jp
and
push
int
xchg
jge
aaa
ins
xor
sub
imul
and
dec
aas
cmps
fs
adc
int
stc
or
cmps
xchg
add
repnz
jo
push
push
arpl
test
xchg
add
loop
inc
je
pop
gs
push
dec
inc
push
(bad)
jg
push
mov
xchg
mov
inc
mov
sub
hlt
ret
inc
dec
sti
(bad)
mov
xchg
pop
lods
sub
repnz
adc
add
sub
pop
aaa
and
jns
repnz
int3
cmp
call
add
pop
inc
add
xor
stos
push
test
(bad)
(bad)
test
cmps
aaa
adc
imul
fs
dec
int
xor
mov
movs
mov
stos
dec
test
sbb
and
popf
inc
dec
cmps
pop
add
dec
outs
idiv
add
mov
push
push
hlt
dec
mov
hlt
imul
xchg
jnp
mov
ret
out
and
aam
int
lea
jmp
dec
push
ret
sub
cmp
xor
or
arpl
icebp
sub
ficom
sbb
test
adc
mov
gs
gs
aam
xlat
(bad)
shl
std
sbb
cwde
push
mov
mov
test
and
(bad)
je
imul
movs
retf
push
out
ja
mov
(bad)
mov
lea
jmp
repz
bound
jmp
pop
scas
mov
and
and
mov
adc
xor
sbb
mov
inc
jl
adc
iret
mov
push
in
inc
cmp
mov
pop
jae
push
or
jmp
sbb
mov
fs
lock
mov
pop
popa
movs
mov
add
sub
test
out
icebp
loopne
pop
mov
and
xchg
in
test
dec
dec
pushf
imul
xcrypt-ctr
cmps
pop
(bad)
iret
cld
sbb
enter
dec
ficom
add
mov
popa
les
addr16
push
push
les
cli
jae
mov
fadd
dec
imul
mov
push
rcr
fild
add
in
rcr
es
gs
pop
xor
xor
test
fcomp
jae
shl
andnps
jmp
jae
fiadd
or
adc
mov
or
dec
icebp
ins
ins
sahf
fdivp
loopne
sbb
push
in
push
push
jg
rcr
(bad)
mov
inc
jno
(bad)
jmp
mov
out
mov
movs
scas
mov
in
ficom
xchg
out
test
ins
mov
add
test
popf
push
aad
inc
mov
popf
cmps
stc
add
icebp
push
xlat
or
jge
add
js
xchg
enter
jnp
out
xchg
cld
call
mov
cli
inc
lods
mov
cmp
mov
ret
out
cmp
aam
les
jb
call
sbb
mov
test
clc
hlt
into
test
leave
pop
fs
xor
mov
and
sbb
mov
int
xor
in
mov
mov
sub
mov
mov
jns
mov
and
mov
mov
fisttp
ret
cmps
xchg
in
mov
stos
inc
out
sti
sbb
adc
xor
xor
pop
mov
xchg
push
call
lock
cdq
push
das
mov
jmpw
out
nop
test
(bad)
gs
dec
sbb
es
pop
jp
mov
data16
sbb
rcl
mov
dec
imul
stos
xchg
dec
gs
mov
popa
aad
jb
xor
pop
mov
cmp
lds
fs
sub
jne
fisttp
dec
adc
out
std
cmps
cmp
push
iret
inc
mov
mov
inc
aas
in
sub
push
std
sub
jl
aaa
add
add
nop
call
sbb
test
into
fs
lds
loopne
dec
pusha
or
test
outs
out
cmp
mov
out
nop
test
jo
(bad)
fabs
dec
adc
sbb
jb
mov
inc
sub
call
aas
pushf
js
dec
xchg
ins
xlat
ret
fwait
lahf
pop
push
icebp
and
mov
mov
(bad)
adc
sub
aad
xor
jg
call
mov
(bad)
ds
dec
xchg
repz
xor
stc
inc
jmp
pop
and
sub
push
or
je
xchg
xchg
cdq
gs
inc
jnp
imul
push
daa
sbb
test
std
xor
mov
in
xor
jne
aad
pop
aam
add
dec
xchg
stos
test
movs
ds
mov
mov
pushf
jle
inc
mov
jp
pop
dec
in
out
inc
jmp
cmp
pop
hlt
repz
xor
popf
fucomp
mov
(bad)
push
mov
fwait
cmp
dec
rol
scas
call
or
mov
iret
pop
mov
in
push
pusha
or
add
push
pop
and
outs
jg
movs
outs
mov
gs
in
and
push
mov
and
mov
(bad)
arpl
mov
dec
pusha
dec
xor
push
popa
inc
ret
jge
mov
push
xchg
adc
add
xchg
ja
push
(bad)
xchg
fst
inc
retf
es
or
rcl
mov
xchg
sub
popf
adc
outs
mov
add
clc
mov
or
call
dec
nop
sub
add
jae
clc
loope
sub
add
loopne
jns
or
test
lock
pop
xor
shl
dec
jbe
nop
mov
faddp
repnz
dec
cs
jns
icebp
dec
sbb
dec
stos
(bad)
lock
xchg
hlt
in
xchg
and
fwait
mov
mov
fbstp
and
inc
fwait
jae
mov
jno
push
sbb
test
cmc
ja
fisub
icebp
(bad)
out
mov
jl
leave
(bad)
push
stos
aas
or
mov
xor
xlat
add
add
cwde
ret
dec
test
stos
into
ja
adc
int3
add
fadd
push
add
add
test
push
xchg
js
jle
pop
jg
jle
pop
adc
or
adc
mov
stc
lods
jo
xor
shl
mov
sub
xor
outs
sti
mov
mov
in
in
aam
iret
inc
push
pop
out
mov
inc
ror
outs
ret
jecxz
xor
bnd
(bad)
mov
add
aad
(bad)
jp
lods
jo
jp
cmp
jb
mov
cmp
sbb
xchg
xchg
xchg
fadd
add
mov
push
inc
adc
out
push
xchg
mul
jae
(bad)
mov
sub
ins
add
xchg
inc
mov
mov
jmp
inc
dec
inc
cwde
dec
sbb
fwait
cld
in
or
clc
push
idiv
test
ret
mov
pop
inc
or
jge
and
into
nop
fidiv
shl
mov
cld
shr
repnz
cmc
xchg
sub
out
in
mov
cmps
fldcw
test
cmp
inc
cmp
std
loopne
mov
stos
dec
call
scas
jb
sti
jmp
retf
movs
dec
ficom
ret
test
(bad)
pop
push
retf
repnz
lds
das
and
pop
ja
jl
(bad)
arpl
jb
push
push
stos
sbb
loope
mov
out
lahf
xchg
add
pop
sbb
iret
ret
mov
mov
fadd
xor
sahf
xor
mov
sub
mov
adc
sbb
or
sbb
xchg
jmp
lfs
mov
adc
push
sub
pop
sti
xor
dec
mov
xor
data16
push
or
mov
sbb
sub
rcl
dec
mov
ins
test
fstp
pusha
movs
pop
fistp
push
sbb
inc
sbb
inc
sbb
mov
push
pop
daa
es
and
std
jns
loop
fld
rcr
jecxz
jg
ror
cmp
xchg
call
movs
rol
pop
push
out
test
mov
addr16
jl
sbb
and
in
add
sub
inc
call
xor
sbb
sub
and
mov
and
dec
pop
push
sub
jne
stos
push
into
out
cdq
pop
dec
and
mov
add
pop
and
mov
inc
ret
sbb
push
aad
jp
aam
jnp
repz
or
push
int3
call
inc
sbb
lock
aaa
scas
xor
icebp
jg
or
imul
std
das
out
mov
hlt
jge
jnp
inc
and
dec
data16
out
adc
imul
xchg
je
in
out
sysret
mov
in
les
cmp
rcl
xchg
(bad)
cmp
fistp
mov
inc
and
outs
stos
mov
jge
mov
mov
cmps
xlat
jl
loopne
inc
xchg
push
icebp
retf
outs
jo
iret
xor
ror
ror
out
(bad)
dec
pop
add
xchg
mov
push
test
in
movs
mov
push
aad
aam
into
(bad)
shr
dec
stos
cwde
jl
mov
push
push
imul
xchg
and
aaa
stc
jmp
add
jle
jbe
mov
mov
sbb
cmp
lds
xchg
stc
and
out
pop
arpl
mov
mov
scas
or
mov
mov
adc
das
mov
aam
add
sub
ret
test
aam
add
dec
mov
lea
add
push
rcl
mov
arpl
mul
clc
retf
shr
ror
mov
test
pushf
cmp
sbb
test
dec
push
push
stc
sbb
stos
mov
int
ins
push
xor
pop
and
jp
sar
outs
cmp
or
in
mov
or
fsub
cmp
push
pop
je
push
lds
(bad)
xchg
daa
jae
movs
sub
inc
enter
in
fwait
dec
sub
jle
push
cld
imul
xchg
sti
or
loopne
push
pop
xor
push
push
inc
push
lods
adc
(bad)
es
sbb
and
push
dec
and
xor
sub
sbb
stos
sub
fnsave
mov
aam
stos
mov
cmp
(bad)
mov
fistp
mov
int
(bad)
inc
sbb
push
or
leave
add
xlat
xor
mov
ja
test
and
xlat
ss
mov
fcmovne
out
xor
jo
sbb
push
enter
push
sahf
lea
ss
pushf
out
loop
push
(bad)
pop
add
sbb
dec
arpl
cmps
retf
xchg
dec
pushf
icebp
or
stc
imul
stc
jp
bound
inc
and
xor
lock
add
sbb
std
out
xor
or
(bad)
movs
xchg
dec
jecxz
in
mov
and
xor
jnp
pop
retf
js
push
enter
add
and
hlt
lock
ret
ds
inc
cmp
jo
ds
push
mov
stc
imul
test
xor
sti
ss
(bad)
ds
je
test
jne
lock
mov
dec
ffreep
sub
inc
fwait
scas
in
sub
call
xor
sbb
lods
push
js
inc
(bad)
pop
pop
mov
mov
jl
aaa
push
jmp
push
scas
lods
adc
loope
out
imul
out
icebp
cmp
repz
(bad)
scas
push
(bad)
xchg
fmul
push
adc
jb
add
and
mov
data16
and
fstp
fiadd
loop
mov
dec
out
fisubr
(bad)
sti
jg
data16
shl
imul
add
adc
jne
enter
jb
mov
pop
ror
and
stos
scas
aas
inc
je
or
scas
(bad)
bound
adc
sbb
add
xor
outs
sub
cmps
mov
sub
cmps
iret
pop
pop
in
nop
out
and
in
ret
cmc
pop
sti
pusha
mov
push
mov
mov
popf
movs
fiadd
inc
push
cmp
mov
cmc
arpl
xchg
inc
in
adc
out
shr
xlat
jge
mov
mov
sub
outs
arpl
loopne
lahf
and
mov
jb
call
mov
je
test
dec
xchg
sub
outs
aas
or
sbb
cmp
pop
sti
stos
aaa
pop
ret
cmp
dec
add
movs
das
dec
sbb
mov
shl
jns
fisubr
and
(bad)
shr
and
int
stos
aas
push
sbb
jmp
pop
pop
dec
add
cmp
call
fstp
rcl
xchg
std
dec
ins
jnp
adc
popw
imul
add
es
clc
cli
dec
cmps
cld
es
sub
inc
and
adc
jmp
mov
loop
ret
fwait
test
pop
shl
pop
hlt
jb
fld
repz
pop
sbb
inc
rcl
xchg
out
inc
fistp
repnz
aas
adc
pop
mov
sar
push
push
add
push
int3
sub
push
(bad)
test
ret
fimul
sub
jae
push
push
dec
call
(bad)
data16
popa
sub
mov
jecxz
mov
add
arpl
repnz
xor
fbstp
cwde
xchg
jno
and
ss
xor
loop
mov
pop
ss
out
jmp
je
xor
xor
cmp
push
push
sub
adc
icebp
in
adc
loop
inc
leave
xchg
fisub
inc
pop
sti
inc
loop
adc
mov
push
hlt
pop
xor
and
sub
stc
sbb
add
dec
cmp
dec
movs
and
mov
popa
sbb
lods
(bad)
call
sbb
cmp
fld
lea
in
and
cmp
jnp
mov
in
int3
test
ret
popf
cmp
sahf
nop
push
jge
xlat
mov
mov
out
xchg
outs
pop
push
fcom
mov
mov
stos
lds
adc
push
ins
dec
jg
jne
push
movs
jnp
sub
retf
in
ins
cmp
sti
cdq
lds
mov
inc
adc
aaa
ins
mov
xchg
int
add
(bad)
enter
push
ret
adc
or
aad
hlt
mov
push
cmp
je
mov
ja
push
imul
and
sbb
movs
shr
pop
call
mov
scas
xchg
pop
stc
inc
mov
jmp
mov
push
or
test
in
push
dec
ins
mov
or
cs
rol
push
enter
jmp
pop
adc
mov
and
sub
push
mov
shr
sahf
mov
ins
sub
(bad)
fst
sbb
ret
jo
lods
push
xchg
mov
cdq
in
lock
sbb
rcr
push
sub
and
dec
ficomp
sbb
fsubr
cmps
sub
jb
sbb
pop
and
xchg
mov
loopne
jmp
dec
add
xchg
mov
movs
xchg
xchg
inc
xor
cmp
jg
(bad)
cmps
sar
jbe
int3
pop
mov
mov
int3
sbb
xor
das
fmul
dec
xchg
jl
mov
popf
adc
daa
popf
push
mov
add
and
cmp
and
jl
(bad)
emms
rcl
xchg
xchg
lea
push
xlat
cmp
pop
fld
add
inc
out
les
sub
fld
jmp
test
les
pop
clc
push
adc
push
jp
push
add
imul
sub
and
push
(bad)
adc
dec
mov
dec
mov
lea
jg
mov
inc
jge
push
xor
push
inc
inc
adc
(bad)
sbb
and
push
push
and
sahf
mov
stos
and
cmc
inc
jb
jl
xacquire
mov
pop
xchg
in
inc
jle
xchg
dec
mov
sbb
mov
ds
int3
sub
out
xchg
and
push
sbb
jmp
ror
inc
adc
inc
mov
dec
arpl
jp
(bad)
cmp
xor
popa
jbe
arpl
fcmove
push
jmp
leave
fstp
jge
retf
ds
push
adc
push
movs
inc
adc
ins
jno
jge
(bad)
bound
push
(bad)
repnz
mov
hlt
out
push
(bad)
push
sbb
mov
xor
push
adc
cmc
rcl
cmps
mov
mov
pop
sbb
xchg
push
lds
cmp
sub
sub
pusha
push
or
loope
jns
xchg
ins
jb
scas
clc
jo
xchg
cs
loope
cs
lea
xchg
aam
jbe
push
cmps
fst
mov
in
adc
in
repz
fidiv
call
stc
sahf
sub
mov
(bad)
cmps
repnz
push
faddp
xchg
adc
jge
lds
push
mov
stos
mov
sahf
lods
mov
dec
push
sahf
lods
stos
(bad)
cmp
xchg
stc
mov
ds
outs
lods
fldcw
dec
out
xchg
pusha
jge
test
mov
adc
push
fcmove
jmp
mov
pop
movs
xor
and
enter
fwait
jmp
mov
mov
add
mov
jl
sbb
lods
mov
sbb
add
push
rcr
(bad)
fidiv
xor
add
aaa
and
idiv
pushf
mov
or
mov
je
pop
test
pushf
pop
test
aaa
dec
bound
mov
loopne
pop
fnsave
push
push
cmp
cli
enter
je
lods
add
iret
xchg
pusha
pop
(bad)
adc
cld
(bad)
in
pop
jae
xor
and
rcr
pop
test
rcr
fisttp
fs
dec
xor
inc
bound
test
inc
ret
mov
hlt
mov
push
outs
rcl
sti
pop
jg
or
jle
inc
pop
sbb
mov
mov
daa
nop
test
jmp
out
xchg
and
nop
in
stos
pop
bound
rcr
xor
ins
xor
and
out
push
add
mov
aaa
inc
adc
(bad)
inc
ret
mov
xchg
or
mov
mov
outs
sub
aam
fdivr
cmp
fwait
pop
dec
retf
or
sbb
jge
push
or
nop
add
lock
inc
mov
xor
pop
mov
pushf
cwde
imul
mov
fwait
inc
pop
div
(bad)
and
into
call
lea
enter
sub
imul
mov
ror
je
ja
rcl
jb
mov
dec
cmps
adc
out
sub
mov
jg
rcl
pop
push
and
and
push
or
popa
shr
out
and
mov
xor
xor
(bad)
sbb
mov
pop
fdivr
mov
adc
nop
ja
and
jne
es
jle
aas
jp
out
mov
push
push
test
inc
jno
xchg
loope
imul
mov
or
or
push
scas
test
std
ret
sub
icebp
fisubr
and
xchg
ror
movs
jg
outs
std
sub
out
or
(bad)
and
xor
jb
inc
(bad)
arpl
mov
add
inc
mov
lods
ja
test
mov
stos
xlat
(bad)
aaa
mov
shr
push
add
in
sti
mov
iret
imul
mov
cmp
push
aas
sbb
mov
and
cwde
fist
repz
outs
ret
dec
test
sbb
fst
aas
xor
cwde
dec
or
xchg
popf
sbb
mov
les
mov
or
push
imul
cmp
mov
and
outs
pusha
jnp
dec
stc
mov
jb
xchg
push
and
hlt
pop
jmp
push
jns
test
fdivr
scas
ret
arpl
and
in
pop
and
in
daa
out
mov
xor
repz
mov
push
push
xor
lock
mov
mov
addr16
adc
aas
aas
hlt
mov
sub
mov
xchg
dec
mov
jl
arpl
(bad)
sbb
repnz
push
out
jns
xchg
pop
add
xor
pusha
out
cmp
push
js
cld
neg
fs
jb
addr16
enter
xchg
sub
dec
jb
push
mov
sbb
(bad)
les
add
dec
cmp
mov
out
dec
inc
mov
push
cmps
lahf
aas
xlat
pusha
cmc
retf
mov
sbb
(bad)
call
inc
xchg
push
aam
jne
test
cmp
dec
pop
fcomp
inc
stos
sub
arpl
scas
in
gs
add
mov
scas
xor
dec
inc
mov
jno
(bad)
es
movs
and
xchg
sub
mov
xor
sub
ret
dec
rcl
inc
(bad)
cmp
add
dec
loope
mov
dec
mov
in
repnz
lock
pop
and
out
aad
fsub
sbb
push
add
ror
popf
pop
jmp
xor
pop
(bad)
leave
les
push
xor
sub
add
mov
sahf
dec
mov
fsubr
ds
(bad)
rcr
sbb
call
loop
nop
add
mov
cmp
int
ret
mov
retf
mov
or
xor
iret
int3
mov
in
cmp
xor
outs
in
lock
mov
mov
fcomip
fstp
jg
inc
imul
fadd
or
jg
pop
fidiv
jl
mov
in
iret
xchg
xchg
into
push
push
dec
jge
or
je
jmp
popa
daa
bound
call
xchg
daa
jmp
fcomp
pop
bound
loop
push
dec
pop
inc
aad
dec
jnp
fwait
stos
lock
icebp
push
jmp
adc
fimul
inc
add
and
fnstcw
xor
hlt
cmp
xor
pop
mov
jp
or
sbb
ss
inc
pop
push
out
sub
sbb
test
aam
and
outs
xchg
mov
nop
lods
add
fidiv
push
mov
(bad)
push
ins
in
jbe
pop
test
sbb
cmps
mov
or
pusha
cmps
dec
cmp
ja
xchg
jae
(bad)
mov
lahf
mov
out
movs
jno
mov
mov
into
cli
(bad)
sbb
jns
xor
movs
xchg
ror
(bad)
daa
out
add
xor
adc
dec
push
xchg
fcmovnb
mov
sbb
cmc
and
pop
cmc
aad
cmp
mov
cmp
mov
stc
and
adc
rcr
pop
std
repnz
test
mov
push
sahf
movs
xchg
dec
push
xchg
inc
push
pop
sahf
shr
mov
xchg
popa
jo
aaa
dec
call
ficom
(bad)
jae
mov
into
or
cmp
adc
sbb
inc
aam
sbb
and
sar
gs
inc
mov
rcl
sub
jne
movs
sti
pop
mov
mov
cmp
arpl
push
xor
mov
and
ja
or
pop
rcr
dec
mov
pop
inc
push
jnp
(bad)
test
in
jl
aad
dec
test
shl
jns
ror
lods
jecxz
ins
imul
xchg
push
sub
mov
cmps
xor
lahf
push
out
in
jle
inc
cwde
inc
retf
mov
jo
mov
hlt
or
or
leave
or
or
stc
in
or
sti
cdq
mov
es
out
retf
cmp
fsubr
push
cli
ins
xchg
dec
push
mov
scas
push
mov
mov
add
call
aaa
sub
dec
jmp
fsubr
scas
xchg
mov
mov
or
and
jg
loop
jb
sbb
mov
mov
fst
push
(bad)
mov
inc
call
dec
retf
or
and
cli
jb
cdq
jp
inc
xchg
pop
mov
adc
ret
jo
add
js
shl
int3
mov
push
jns
jo
mov
mov
ins
mov
mov
add
jb
adc
mov
out
fld
xor
retf
push
in
jbe
mov
jnp
inc
cmp
mov
dec
sbb
icebp
mov
pop
cli
xor
es
xchg
ficom
mov
dec
dec
push
test
add
lods
bound
cli
add
mov
and
aam
pushf
cld
mov
or
add
int
fldenv
shl
std
inc
sub
jo
ror
mov
ds
scas
jmp
les
data16
popf
fucomip
stos
pop
dec
les
retf
es
jno
cmps
dec
imul
dec
push
shr
mov
mov
jp
mov
and
adc
je
or
pushf
adc
les
mov
adc
pop
cs
inc
outs
dec
jle
aas
mov
pusha
scas
outs
xlat
jle
pop
fs
arpl
retf
or
arpl
jg
movs
lds
mov
push
int
js
or
daa
xchg
push
sub
(bad)
popf
adc
dec
(bad)
loop
add
inc
inc
shl
xchg
mov
xchg
in
pop
mov
ret
xchg
and
scas
out
lock
ss
daa
jo
(bad)
sub
push
jo
sbb
ds
sub
xor
adc
cmp
dec
int
push
push
jp
test
mov
push
mov
mov
pop
mov
jns
inc
pop
fnstenv
in
loope
pusha
inc
call
inc
popa
stos
es
jle
jg
or
and
mul
sbb
sti
aad
fisttp
mov
es
loope
fwait
es
mov
cmp
cmp
cmp
push
fsub
dec
xor
mov
das
sbb
mov
ss
fnstenv
push
mov
mov
outs
(bad)
in
inc
in
mov
or
pop
bound
test
mov
jbe
retf
fidiv
nop
inc
stos
adc
retf
stos
fdiv
pop
loope
mov
out
fucomip
mov
adc
push
ja
test
cmc
mov
js
push
pinsrw
xchg
xor
sub
out
retf
sbb
fldenv
pop
and
data16
repnz
popf
pop
mov
lahf
ror
mov
adc
xchg
dec
rcl
lods
sbb
jp
aam
dec
push
nop
push
stos
xor
bound
push
pop
xor
cdq
lahf
psubusw
mov
xchg
jmp
inc
mov
int3
sbb
jp
and
mov
cli
dec
mov
sub
mov
enter
movs
sub
push
and
push
into
(bad)
cs
pop
enter
jo
fst
fs
push
ret
jb
ss
xchg
mov
xor
cmps
in
not
mov
xor
sbb
pop
rcr
vaddsubpd
add
mov
jge
in
fisttp
push
jmp
inc
mov
int3
push
cmp
test
sbb
lea
popf
mov
mov
mov
hlt
(bad)
mov
dec
xor
xchg
fmul
push
das
int
inc
ja
adc
loop
out
xchg
xchg
add
or
jnp
ja
push
cmp
lock
out
cmp
(bad)
xchg
sub
add
mov
mov
and
sub
mov
or
cmp
ret
loope
pop
cli
jmp
outs
push
cs
retf
xchg
clc
test
fldcw
enter
outs
sbb
and
fisttp
pop
adc
jge
(bad)
lds
xor
jb
std
cmp
outs
fwait
addr16
pop
cmp
add
xchg
mov
retf
xor
mov
xchg
dec
fiadd
or
int3
retf
jbe
ret
retf
mov
inc
retf
in
push
sbb
fsub
and
push
push
outs
add
fld
jmp
aam
repnz
mov
repnz
(bad)
inc
mov
mov
not
add
sub
sbb
shr
xor
sar
adc
mov
aas
enter
test
std
(bad)
pop
push
aad
and
adc
in
xor
loope
inc
sahf
int
test
dec
sub
fdiv
mov
fild
sub
xor
mov
dec
push
fmul
xor
mov
pop
sub
pop
addr16
pop
push
sbb
adc
jecxz
(bad)
movs
das
ret
adc
dec
sar
cmp
jno
cmp
int
lahf
mov
or
sbb
pop
jmp
jmp
stos
out
push
pop
xor
mov
inc
in
and
cmc
into
sub
aam
push
add
test
xor
cmp
(bad)
jb
cmp
lock
rcl
push
das
and
jge
cmp
fsub
push
fst
(bad)
repnz
mov
pop
xchg
data16
cmc
daa
out
jge
icebp
dec
dec
pop
jecxz
imul
movs
inc
inc
mul
jnp
fstp
rcr
jnp
aaa
push
cmp
pop
xchg
neg
call
pop
add
or
sar
and
xchg
dec
jle
cld
fucom
push
out
cmp
pop
imul
push
adc
lods
(bad)
mov
adc
xor
hlt
shr
mov
ret
jmp
xor
mov
mov
push
out
or
retf
add
xchg
cmp
ins
mov
adc
frstor
stos
stos
or
fisttp
sbb
stos
or
aas
sbb
bound
push
add
adc
aaa
icebp
je
mov
xchg
stc
dec
cld
and
fs
les
jae
les
mov
in
outs
sbb
push
icebp
clc
and
test
setle
mov
sahf
into
aam
fucom
ins
push
sub
dec
rcl
cs
inc
sbb
mov
sbb
cmps
and
push
mov
popa
inc
cmps
sub
push
ja
jns
add
dec
inc
cmp
lahf
les
pusha
sub
jbe
xchg
cmp
mov
pop
imul
out
test
pop
mov
pop
sub
jbe
mov
int
shl
adc
fucomip
xor
mov
inc
xchg
fs
mov
adc
and
retf
dec
out
in
xlat
shr
jp
jp
pushf
rol
cli
dec
add
mov
inc
adc
mov
dec
test
mov
cdq
xchg
lahf
scas
aam
jo
std
(bad)
mov
jbe
push
dec
mov
cli
iret
push
int
jmp
push
daa
gs
inc
jge
loopne
je
retf
push
push
jle
sbb
dec
mov
xchg
js
mov
lds
pusha
mov
sub
mov
inc
mov
or
mov
in
iret
adc
clc
adc
jo
shr
inc
fist
adc
ret
xchg
jmp
cmc
mov
cwde
sbb
sbb
out
push
repz
ror
retf
jns
and
lods
cmp
inc
jp
pxor
push
add
sti
mov
dec
(bad)
jge
dec
jae
movs
in
inc
inc
dec
xchg
ja
push
or
scas
sub
loopne
pop
les
sub
dec
and
pop
sub
and
mov
mov
test
xchg
loope
ja
mov
call
jno
push
add
cmps
cmps
and
int
mov
xlat
push
mov
inc
xchg
test
gs
cmp
dec
sub
push
add
xchg
pop
pop
or
sub
shl
sbb
bound
mov
(bad)
into
shr
inc
mov
inc
fild
xchg
jne
leave
or
rcl
shl
out
jns
daa
imul
pop
test
lods
sub
test
cmp
out
cmp
cmp
jge
xlat
push
jne
ins
mov
and
jne
mov
lock
adc
ficom
jle
sub
mov
jns
mov
(bad)
jo
das
sbb
lods
(bad)
(bad)
mov
imul
and
mov
lods
inc
mov
push
shl
mov
rol
jmp
xchg
mov
mov
out
cmc
push
test
ins
push
xor
and
add
ja
pop
not
das
xchg
xchg
and
test
fwait
loop
push
sub
popf
fnstcw
pop
je
jp
stc
retf
jbe
loopne
mov
lods
mov
mov
mov
xchg
out
cld
jmp
call
xor
and
repz
(bad)
sub
adc
mov
retf
ds
mov
jmp
ins
jne
out
cmp
(bad)
je
jmp
shl
leave
ror
jecxz
inc
stos
mov
ds
fwait
inc
test
push
xor
xor
dec
sbb
jp
xor
cdq
dec
fsubr
jmp
jle
inc
cld
push
into
hlt
xlat
movs
(bad)
xchg
or
jae
pop
fiadd
push
jo
movs
sbb
adc
jb
(bad)
call
pop
mov
ja
retf
inc
push
int
ds
jb
ret
mov
rep
(bad)
cmp
std
clc
mov
mov
inc
dec
jecxz
out
xor
dec
jecxz
repnz
jge
out
les
js
jmp
sub
lock
test
shl
dec
out
xlat
fucomp
clc
dec
or
aas
pop
les
sahf
adc
xor
vmread
sbb
and
in
pop
out
pop
es
adc
call
scas
mov
jg
in
clc
fcomp
push
cld
popf
add
call
repz
mov
aad
lea
push
pop
loop
mov
xchg
cmp
repnz
cld
xor
inc
ja
mov
push
call
pop
es
push
fdiv
xchg
mov
dec
out
imul
inc
adc
push
push
add
xchg
(bad)
cdq
mov
pop
fmul
pop
aad
test
ja
xchg
popa
stc
es
pop
mov
mov
or
bound
push
std
sub
sbb
and
pop
dec
push
mov
mov
xchg
xor
inc
sbb
pop
mov
leave
add
mov
cmp
(bad)
and
jge
cmp
sbb
or
(bad)
imul
repnz
sbb
mov
sub
cld
int3
cmc
neg
out
scas
dec
call
pusha
and
(bad)
jecxz
mov
or
fisubr
mov
or
and
xchg
(bad)
in
rcr
stos
inc
call
jp
sar
hlt
inc
int3
(bad)
fcom
(bad)
in
jno
push
outs
leave
add
adc
jmp
out
mov
jae
addr16
std
jecxz
push
outs
xchg
nop
jl
(bad)
cli
hlt
call
repz
sub
sub
cdq
int
mov
icebp
dec
xchg
stos
sub
jns
inc
xor
std
sbb
outs
jnp
pusha
arpl
dec
popf
cs
jl
sbb
cs
inc
data16
xor
dec
ficomp
retf
sub
inc
dec
outs
sbb
mov
and
push
mov
push
add
shl
in
jmp
xchg
xor
das
sub
dec
jg
cwde
sub
(bad)
shr
sbb
mov
push
cmc
jle
fild
fnsetpm(287
(bad)
mov
jmp
mov
fstp
fld
rcr
hlt
mov
push
addr16
sti
xlat
test
add
xlat
pop
fadd
ret
imul
sub
into
dec
mov
in
push
movs
call
xor
shr
daa
ja
aaa
adc
mov
stos
call
das
dec
jns
dec
xchg
sbb
push
test
stos
ja
into
je
cwde
cmp
xchg
pop
xchg
xchg
in
push
movs
les
or
stc
retf
pushf
and
fisubr
popa
xor
mov
data16
lds
sbb
addr16
cwde
retf
dec
outs
inc
or
push
xlat
(bad)
bound
dec
daa
(bad)
fisubr
xchg
xchg
jo
dec
nop
cmps
call
retf
mov
pop
cdq
cmc
inc
test
dec
ret
fs
rcl
fldcw
cmp
sbb
jbe
call
lea
fsub
and
xchg
push
dec
loope
or
mov
and
lds
in
xchg
loopne
movlps
outs
xor
ret
pop
das
enter
pop
push
cmps
in
xchg
mul
test
shl
cmp
je
adc
enter
dec
repz
jb
inc
pop
gs
into
iret
jg
jb
fwait
xchg
stos
dec
jecxz
jp
jmp
(bad)
in
dec
adc
cmp
push
ret
mov
pop
outs
xchg
gs
xchg
or
mov
(bad)
cli
out
sub
into
arpl
inc
dec
cmp
jnp
and
push
aaa
stc
sbb
or
and
aam
add
cwde
ret
in
stos
mov
jge
addr16
std
int3
(bad)
jb
mov
cmp
mov
mov
pop
dec
arpl
shl
jl
(bad)
mov
xor
test
sbb
xor
stos
call
jnp
dec
icebp
jp
fs
jne
xor
(bad)
outs
dec
aad
xor
je
sbb
mov
icebp
test
rcl
jbe
popf
xchg
aaa
and
stc
ret
inc
pop
ins
daa
add
fwait
add
inc
push
mov
sahf
js
cli
inc
push
fsubp
pop
cbw
rcr
dec
enter
call
leave
dec
mov
jle
inc
(bad)
mov
mov
test
add
jo
sbb
xchg
ins
pop
cmp
idiv
imul
jns
adc
movs
inc
out
add
(bad)
xchg
inc
adc
ins
mov
and
shl
je
push
mul
iret
cli
adc
stos
push
pushf
and
cmc
xchg
(bad)
sub
dec
retf
nop
stc
sub
aam
dec
mov
jnp
daa
movs
movzx
ror
mov
aad
mov
dec
jge
in
aad
lds
jge
in
jmp
(bad)
ins
call
mov
xchg
fsubp
add
fwait
scas
adc
test
adc
mov
iret
jp
add
xor
inc
out
dec
pushf
stc
push
pusha
jle
sub
mov
mov
data16
retf
shr
adc
or
mov
pop
xchg
ins
cmp
push
cli
fwait
ins
sub
leave
test
sbb
imul
add
jge
into
cs
movs
jo
pushf
mov
jle
and
loope
cdq
inc
cmps
push
cmps
xor
xor
xchg
ret
inc
push
cmp
(bad)
call
mov
cwde
or
scas
jecxz
push
jno
test
les
or
movs
sbb
xor
push
mov
jns
and
mov
add
push
in
inc
mov
ins
call
mov
movs
cld
inc
pop
jns
sub
pop
les
dec
cs
adc
inc
sbb
jg
sbb
hlt
xchg
ficomp
rcl
cdq
sub
or
dec
jle
jge
mov
push
test
pop
sub
mov
mov
sub
pop
and
or
adc
and
cmp
xor
out
push
ret
ss
dec
(bad)
jle
adc
jl
(bad)
jmp
mov
adc
jge
push
push
sbb
arpl
jmp
inc
jmp
pop
fist
jge
jmp
sub
fisttp
dec
call
aaa
adc
pusha
pusha
sbb
jle
leave
mov
bound
and
hlt
int
aam
out
call
xor
gs
hlt
(bad)
es
dec
or
rcl
jae
mov
or
cmp
pop
clc
mov
dec
add
rcr
fist
je
push
sub
imul
sar
(bad)
jl
(bad)
lea
icebp
std
push
stos
fcomp
in
mov
call
dec
mul
jle
pop
shl
movs
sbb
and
inc
adc
push
and
leave
push
in
mov
outs
dec
ror
sbb
xchg
or
fadd
loop
and
xchg
int
pop
xor
ret
push
or
popf
retf
ins
inc
(bad)
ins
std
movs
push
push
fnstsw
dec
sahf
dec
ds
mov
pop
lahf
and
nop
lds
shr
push
push
pusha
jne
or
mov
xchg
mov
aam
inc
out
cmp
imul
(bad)
jne
mov
(bad)
jp
arpl
in
iret
cli
sbb
pop
jbe
push
test
or
test
das
dec
ins
xchg
test
bound
mov
adc
stos
mov
test
fisubr
ret
cdq
fild
ret
mov
adc
pop
jno
std
(bad)
push
fcomi
sub
xchg
adc
jo
mov
sub
cmps
and
mov
(bad)
fild
inc
lock
cmp
jle
pop
push
adc
sbb
lds
or
arpl
into
add
inc
ds
xor
fnstcw
jne
mov
mov
mov
jne
icebp
ret
pop
movs
fldenv
mov
and
lahf
dec
(bad)
cmc
sub
mov
adc
push
imul
lahf
or
cld
fst
(bad)
cmps
push
inc
das
lds
jl
xchg
xor
retf
jnp
sub
mov
push
sti
ds
push
mov
add
(bad)
push
jmp
test
(bad)
stos
inc
movs
cmp
clc
fld
aaa
loop
daa
xchg
inc
sub
je
pop
xchg
retf
mov
pop
je
(bad)
js
cmps
push
popf
nop
inc
ins
pop
xor
(bad)
xor
xchg
cmp
add
pusha
(bad)
and
adc
xchg
fidivr
jne
sub
mov
jne
cmc
pop
inc
dec
add
push
jns
sti
jge
dec
inc
repz
mov
sbb
out
in
gs
or
jb
or
mov
ror
or
cmp
adc
pop
pop
cmp
les
ret
and
mov
sub
or
mov
sbb
inc
mov
cmp
popf
pop
cmps
push
add
xchg
sub
(bad)
push
mov
cmp
popf
retf
push
retf
(bad)
pop
sbb
div
jnp
jmp
jne
dec
shl
add
mov
mov
add
cmps
add
push
cld
push
ja
jg
and
lods
mov
loop
lea
je
aad
fnstcw
aaa
cmc
ret
imul
cli
inc
arpl
hlt
imul
push
(bad)
xchg
xor
xor
add
pop
movs
mov
sbb
xchg
mov
xor
jo
cli
cmp
stos
jbe
add
jns
xchg
dec
movs
repz
int
and
loopne
cmps
out
mov
and
adc
pop
xor
retf
sub
movs
adc
jbe
add
xchg
dec
xor
mov
add
push
push
mov
inc
retf
mov
enter
adc
out
jb
add
dec
mov
mov
sub
and
mov
stc
xchg
xor
fstp
ret
rol
and
push
lods
xchg
jecxz
xadd
add
lods
das
(bad)
adc
mov
and
jae
loope
cmp
xor
aas
cs
mov
mov
popa
nop
cmp
sbb
out
(bad)
or
xor
std
jno
loopne
sbb
adc
std
jp
js
bound
jb
arpl
jle
fst
jne
sbb
jnp
ins
mov
mov
iret
(bad)
sub
jo
sbb
push
cmp
into
jb
mov
std
pop
sbb
mov
and
call
retf
(bad)
and
in
push
inc
xor
cdq
inc
iret
fsub
mov
pushf
(bad)
call
lds
mov
adc
sbb
dec
out
jg
(bad)
popf
adc
ror
ja
stos
push
retf
cmp
inc
into
imul
inc
mov
pusha
push
mov
popf
test
push
enter
cmp
cmp
mov
pop
and
es
xor
sar
mov
mov
xlat
mov
pop
mov
hlt
and
test
rol
(bad)
shl
nop
imul
out
outs
inc
jge
mov
dec
inc
popa
in
pop
cmp
sbb
cmp
outs
jo
jnp
xlat
cmp
sbb
inc
cmps
fldenv
push
aaa
cmp
jmp
pop
(bad)
pusha
mov
cwde
lods
jge
xchg
sti
xchg
add
retf
in
dec
add
xor
mov
aad
arpl
loope
fbstp
(bad)
aaa
ret
mul
pushf
lar
call
pop
sub
arpl
(bad)
mov
sbb
fsubr
enter
pop
(bad)
cmp
pop
ins
xor
xchg
adc
ds
xchg
aad
mov
mov
add
push
dec
std
jb
pop
add
aad
jge
inc
sbb
xor
xchg
mov
and
(bad)
in
xchg
push
pop
cmp
lock
and
xchg
mov
cmp
clc
push
aam
cmc
div
sti
mov
daa
pusha
shl
ins
jnp
loope
lods
dec
movs
inc
jge
adc
and
pop
and
sbb
mov
mov
and
dec
lahf
push
fwait
outs
hlt
and
push
mov
jecxz
outs
xchg
imul
cmp
inc
pop
mov
xor
jo
sub
xchg
jle
stos
std
or
iret
cmp
or
loope
loope
icebp
mul
outs
sbb
shl
mov
popa
(bad)
pop
xchg
movs
stos
imul
ret
fcom
ins
mov
mov
(bad)
int3
shr
inc
aam
mov
or
lds
test
call
sbb
mov
pop
inc
fadd
in
movs
xchg
jmp
xchg
pop
and
imul
xchg
js
xor
scas
jmp
psllq
or
test
lds
xchg
pop
fsub
and
sbb
and
test
jo
ss
fs
add
lahf
mov
or
push
arpl
test
and
xchg
dec
adc
addr16
stc
cmps
inc
icebp
mov
cmp
stos
inc
lds
mov
out
cmp
sub
dec
in
stos
inc
fbld
mov
jb
ss
dec
mov
das
push
into
mov
pop
sub
cli
adc
ret
pop
pop
mov
clc
cmps
push
call
ret
cmp
jp
lea
mov
inc
mov
jne
lock
xchg
data16
inc
ret
jno
mov
pusha
ins
(bad)
inc
fadd
add
(bad)
out
mov
repz
mov
mov
cmps
and
pop
push
fwait
sub
in
fadd
test
or
shl
je
sub
mov
dec
jp
aam
jp
jg
fwait
mov
xor
or
cdq
test
(bad)
sahf
test
or
mov
or
add
dec
pop
rol
jg
dec
dec
call
arpl
cwde
ret
fcom
scas
sbb
pop
outs
cmc
loopne
dec
xor
inc
pop
add
mov
fisub
std
mov
dec
push
add
cmp
sub
sbb
pop
sbb
xchg
mov
adc
xlat
ss
fwait
or
xchg
(bad)
pop
pop
pushf
or
ds
pop
cmc
sub
aas
(bad)
mov
mov
pop
and
jp
sub
ja
std
adc
pop
in
enter
cli
lds
sub
retf
xchg
jg
daa
aad
in
push
fnstenv
push
out
pop
jbe
push
das
int
fmul
bound
add
and
inc
std
cmp
out
fs
xor
xchg
outs
push
pop
sub
inc
arpl
enter
(bad)
shl
pop
leave
es
mov
std
jecxz
sti
dec
pop
push
sbb
mov
mov
repz
jae
adc
shl
ins
cmp
sub
xor
xchg
push
rol
cwde
sbb
and
cli
jle
sar
int3
jge
leave
mov
pop
mov
sub
mov
jp
or
adc
(bad)
and
movaps
push
outs
ret
sahf
push
add
imul
push
jg
sub
jmp
xchg
mov
icebp
inc
mov
int
dec
mov
fnstenv
lock
icebp
shl
add
jge
ficom
xchg
adc
jae
jecxz
pop
daa
in
xor
pushf
jmp
js
mov
push
call
lods
mov
add
mov
mov
es
mov
cmp
imul
and
pop
mov
xchg
test
(bad)
cli
mov
das
inc
dec
shr
dec
fnsave
or
dec
loop
mov
mov
and
loopne
call
mov
jmp
dec
mov
jmp
mov
mov
cmc
sbb
jge
sub
jae
inc
bound
cmc
jecxz
call
and
xchg
cmp
inc
in
mov
jg
scas
imul
add
dec
(bad)
in
push
sub
xchg
adc
out
cmc
xchg
push
cdq
arpl
cmp
add
inc
scas
push
jmp
ds
jne
inc
and
imul
fdivr
popf
push
movs
push
xchg
dec
add
jecxz
push
inc
xor
rcr
xchg
sahf
and
jnp
xchg
xchg
aam
mov
add
sub
out
test
inc
inc
mov
aas
inc
repnz
clc
xor
or
push
outs
lods
jae
imul
stos
and
dec
mov
fld
es
jmp
pop
and
shl
xlat
outs
dec
sub
push
adc
mov
stos
xchg
mov
mov
mov
movs
jmp
pop
sar
sub
mov
(bad)
pop
fwait
rcr
sbb
(bad)
push
scas
cmp
lods
jnp
loop
fwait
mov
jle
jmp
retf
jno
inc
pop
imul
cmp
data16
mov
mov
mov
repz
test
addr16
adc
fcmovb
inc
mov
dec
and
fstp
jae
adc
and
test
fldcw
xchg
dec
sbb
xchg
sbb
lds
or
push
(bad)
sub
ins
ss
push
jns
call
push
jmp
pop
jl
test
cld
shl
loopne
(bad)
call
inc
cmp
jp
cmps
repnz
xor
push
enter
or
mov
sbb
hlt
mov
je
xor
pop
ds
leave
pop
inc
pop
daa
push
mov
aas
jmp
xchg
push
ds
dec
xchg
movs
les
mov
(bad)
retf
outs
popa
adc
xor
fild
leave
pop
or
or
shl
jne
clc
jbe
cmp
cs
mov
pop
arpl
fmul
mov
(bad)
imul
imul
emms
aam
ror
xor
xor
jae
shl
lods
adc
cld
mov
add
les
mov
in
test
in
ins
iret
add
daa
xor
icebp
aaa
mov
jmp
cdq
push
jmp
cdq
lods
push
xor
xchg
lds
rcl
sti
cmc
and
mov
push
jne
push
push
adc
cwde
stc
sahf
jmp
pop
and
loop
daa
icebp
sub
inc
pop
push
sub
in
(bad)
pop
movs
repz
lea
stos
fadd
dec
jne
je
push
add
pop
cs
ficom
inc
dec
or
and
inc
mov
(bad)
mul
int
mov
leave
pushf
sahf
loop
or
ins
test
je
pop
cmp
dec
enter
div
sbb
sahf
jb
push
add
test
(bad)
test
fist
jne
in
or
sbb
dec
mov
sub
movs
loop
xor
int
fiadd
aas
jbe
or
adc
push
xor
cmps
and
sub
shufps
sti
shl
mov
inc
mov
rcl
call
repz
cmp
fistp
out
movs
scas
lock
sbb
add
jb
hlt
cmp
sub
outs
hlt
adc
sub
(bad)
pop
add
icebp
adc
dec
mov
aad
adc
or
fdivr
or
mov
popa
jae
cmps
adc
mov
inc
sub
cmps
jbe
fcom
pop
ins
out
pop
push
and
aas
adc
out
gs
and
mov
loope
or
popa
test
arpl
jecxz
or
xor
int
fist
mul
mov
sti
lods
addr16
push
mov
inc
stos
imul
xchg
(bad)
xchg
push
and
pushf
push
and
mov
cmp
into
iret
push
sub
jg
or
pusha
jg
xor
add
movs
xchg
and
mov
jne
jne
jo
loope
mov
je
jmp
(bad)
sbb
pop
sbb
ret
add
xor
aaa
lock
and
movs
out
mov
aam
cmps
fiadd
pop
push
movs
jle
call
(bad)
xor
xor
jbe
int
int
stos
pop
outs
push
xchg
fdiv
dec
mov
outs
movs
lahf
retf
ffree
or
loope
add
adc
mov
cmp
rcr
xchg
ds
call
je
cmp
sahf
repnz
jmp
out
nop
in
add
or
ds
retf
retf
or
sahf
rol
fisttp
xor
cmp
stos
xchg
sbb
ja
in
add
jecxz
ins
ds
push
and
push
adc
stos
or
fst
movs
jecxz
test
add
popa
in
outs
jne
adc
fsub
cmps
fisub
sar
mov
daa
into
jbe
loopne
int
jnp
js
in
ret
mov
shl
repz
inc
mov
in
fcomp
jb
cmp
jge
sahf
jl
and
inc
push
add
pop
stos
scas
push
mov
push
sbb
gs
div
pop
pop
out
movs
lods
stos
xchg
jno
add
fnsave
std
jno
or
cmps
nop
addr16
fdivrp
fs
push
or
xlat
jbe
sub
idiv
daa
xor
xchg
jne
aas
sti
in
loope
in
sub
push
addr16
and
popa
dec
call
fimul
push
retf
js
lock
dec
pop
arpl
sub
outs
ins
fwait
iret
out
repnz
xchg
adc
loope
mov
(bad)
jl
or
sbb
adc
adc
and
adc
mov
test
inc
mov
enter
cmp
jp
rcr
push
push
pop
jge
jbe
pushf
(bad)
mov
push
jle
mov
enter
pop
loope
add
shr
cs
movs
stos
dec
das
xchg
or
call
icebp
xor
shr
mov
mov
xor
daa
fadd
dec
xchg
fnstcw
xlat
out
rcr
popf
mov
into
repnz
xlat
(bad)
int3
mov
test
xchg
mov
fisub
daa
xchg
cmps
outs
je
inc
and
js
sbb
daa
lds
je
stos
dec
jo
sar
pusha
pop
jb
adc
sbb
in
fld
or
nop
idiv
push
pop
shl
add
scas
cmp
dec
mov
out
hlt
imul
sub
inc
popf
call
xor
ror
xchg
pop
imul
loope
in
or
pop
mov
xor
popf
sbb
gs
mov
mov
imul
inc
ds
sti
not
mov
push
ss
push
pop
mov
fisubr
ret
mov
add
or
sub
push
mov
sbb
cmp
mov
jecxz
xchg
pushf
inc
ret
inc
pop
lods
inc
repz
loop
fsubp
add
test
ins
scas
movs
lds
ficom
pop
jo
or
and
mov
sub
cmp
into
in
shr
inc
or
cmps
outs
push
cwde
cdq
push
ins
jmp
ja
jecxz
icebp
aaa
leave
sbb
lods
pop
outs
mov
aam
loope
sub
jge
xchg
jbe
mov
out
movs
dec
jnp
bound
inc
mov
nop
imul
pop
sub
and
retf
gs
(bad)
and
pop
pop
cmp
push
push
mov
out
xor
pusha
(bad)
inc
adc
cmps
jmp
call
outs
xor
cmps
and
leave
cwde
test
fs
xlat
dec
xor
ins
inc
(bad)
xlat
mov
push
push
push
sub
std
mov
sub
scas
fdiv
mov
adc
sub
push
mov
pop
loope
adc
xchg
out
cwde
and
loope
push
mov
inc
jne
repnz
mov
or
cwde
pop
push
push
lds
lea
cmp
add
pop
frstor
popf
cdq
cmp
mov
mov
int
adc
fcomip
xor
jns
jmp
xor
in
scas
jns
in
inc
popa
mov
clc
pop
jno
int
inc
ret
ins
pop
cdq
inc
ret
dec
(bad)
gs
xchg
daa
addr16
dec
mov
pushf
(bad)
retf
inc
ins
fcmovnbe
cmp
arpl
loopne
dec
sbb
sti
jo
cmp
xchg
mov
gs
add
pushf
ins
test
pop
adc
cmp
mov
cmp
xor
sahf
xchg
mov
fisubr
mov
mov
(bad)
jae
fwait
jbe
push
mov
mov
es
dec
push
cmp
sub
push
sbb
add
das
and
int
add
sbb
(bad)
in
cmp
or
sahf
ins
mov
dec
retf
not
adc
cwde
xchg
pop
xor
jmp
add
push
ins
sbb
ror
cmp
mov
dec
inc
(bad)
fmul
inc
ds
mov
mov
jge
rol
dec
mov
ret
push
pop
jmp
mov
aad
es
fiadd
push
std
sbb
dec
repnz
stc
push
fwait
cmps
jmp
in
es
inc
mov
sti
and
dec
or
add
xlat
jmp
shr
movaps
adc
sub
test
xor
mov
mov
in
xchg
jl
push
adc
or
stc
inc
mov
add
push
ja
sub
push
aad
mov
aam
sbb
inc
adc
pop
jl
cmp
dec
loop
in
add
test
pop
xchg
add
mov
jo
push
ret
jmp
pop
adc
movs
push
sub
adc
scas
inc
add
and
and
cmp
push
iret
imul
sbb
adc
loope
ret
mov
xchg
sub
cs
test
adc
sar
ja
test
lds
add
and
xchg
pop
add
mov
cmps
or
sub
test
repnz
shl
inc
sbb
pop
(bad)
mov
push
pop
movs
aam
scas
das
mov
ins
std
add
enter
or
inc
mov
ss
retf
cs
mov
pusha
sub
jp
mov
leave
jl
sahf
icebp
arpl
pop
enter
push
push
inc
pop
pushf
cmps
jno
xchg
pop
xchg
mov
cs
outs
push
sbb
jne
(bad)
mov
in
sbb
xchg
ror
out
sub
das
das
xor
ror
lea
adc
call
sbb
push
cmp
popa
popf
(bad)
add
cmp
(bad)
movs
sbb
sub
(bad)
cdq
xchg
xor
xchg
dec
fnstsw
in
xchg
lock
int
or
fdivr
cmp
(bad)
sub
add
(bad)
sub
mov
xor
iret
sbb
mov
scas
mov
mov
sbb
inc
xchg
call
test
and
shl
add
repz
xor
in
clc
lods
push
ds
jmp
les
dec
not
dec
push
enter
fs
shr
pusha
lahf
cmc
jecxz
cmc
stc
dec
popf
pop
(bad)
data16
inc
sub
movs
popa
xor
jae
out
lods
icebp
sub
sbb
sti
cmp
pop
jns
xlat
add
imul
jge
stos
or
dec
mov
dec
sbb
scas
pushf
xor
daa
pop
movs
jg
push
mov
mov
shl
loopne
jno
pop
dec
jl
sub
xchg
xor
sub
cmc
outs
pop
loope
fimul
scas
sbb
ins
retf
inc
xor
jmp
mov
pop
outs
shl
inc
out
inc
mov
imul
lahf
pop
sbb
(bad)
loopne
dec
popa
out
or
call
cli
xchg
xchg
mov
jg
fwait
xor
cmp
enter
adc
movs
dec
dec
push
ds
mov
das
bswap
xchg
xchg
scas
jg
dec
or
cdq
jecxz
pop
test
xor
mov
xchg
out
sahf
xchg
pop
icebp
or
retf
jmp
scas
xchg
ins
mov
xor
movs
pop
sti
push
test
je
xor
pop
jge
mov
test
and
stos
mov
lea
xchg
ret
rol
xchg
mov
cdq
retf
cmp
push
inc
stc
lahf
and
mov
imul
pop
in
sub
lock
xchg
cmps
stos
inc
outs
sahf
and
pop
fisub
cmps
sbb
push
(bad)
mov
xor
fld
inc
lods
je
sub
mov
push
sahf
add
sbb
mov
inc
sbb
add
push
mov
pop
pop
icebp
add
je
mov
sbb
jmp
rcl
xor
cmp
out
xchg
clc
ret
adc
xchg
pop
test
cmp
push
sbb
lea
xchg
or
xor
test
xchg
jmp
stos
int3
mov
push
(bad)
adc
pushf
syscall
ins
add
cmp
lahf
mov
cli
mov
nop
outs
push
jb
push
dec
lock
cld
sbb
xlat
clc
xor
inc
cmps
sub
jae
and
inc
movs
add
jmp
sub
add
push
stos
xchg
and
scas
cwde
cli
add
(bad)
rcr
add
data16
xchg
jl
push
addr16
fmul
div
cmp
jno
mov
push
ins
xchg
add
arpl
mov
lahf
mov
and
adc
and
ror
pop
sub
and
retf
sub
cmp
outs
dec
clc
jmp
aam
dec
cli
xchg
test
mov
movs
push
int
shl
sbb
pop
lahf
mov
lods
ja
test
lods
sbb
clc
out
sub
ins
sbb
fs
fstp
xor
adc
mov
mov
rcl
ds
jbe
in
pop
aas
fdiv
arpl
aaa
arpl
lods
fdivp
iret
add
aam
push
ja
cmc
test
mov
cmp
repz
mov
cli
sub
mov
sbb
cwde
push
loopne
sar
mov
push
cmps
mov
mov
jge
mov
adc
icebp
aad
cwde
xchg
ja
push
add
or
test
mov
call
ret
dec
out
cmps
sub
loop
ins
mov
pop
cmp
inc
loope
pop
shl
jmp
inc
call
inc
repz
mov
addr16
jo
mov
(bad)
fdiv
fbld
pop
bound
movs
hlt
xchg
loopne
adc
mov
enter
mov
mov
in
push
or
xchg
loope
(bad)
popa
rcl
add
mov
ret
pop
out
and
das
in
test
cmp
mov
add
in
adc
mov
sbb
out
ror
aam
mov
cwde
imul
fisttp
lahf
(bad)
pop
jne
pop
lea
mov
ja
push
fmul
push
movs
or
inc
rcr
inc
je
mov
mov
inc
adc
jmp
xchg
out
sub
(bad)
xor
fwait
es
push
dec
ficom
cwde
push
mov
dec
mov
xchg
add
or
pop
fincstp
push
cmp
or
sub
cdq
cdq
or
stc
inc
out
jecxz
rol
jecxz
sub
adc
pop
and
cmp
repz
enter
fs
fs
daa
xor
cmp
push
stc
cwde
out
stc
sbb
pop
pop
sbb
ss
cwde
pop
adc
pushf
xchg
push
icebp
sbb
jmp
xor
ds
iret
mov
test
xor
and
mov
inc
xor
push
mov
or
mov
sbb
mov
sub
(bad)
icebp
mov
lock
aad
fs
xchg
and
ss
sbb
ss
mov
lahf
data16
jmp
jmp
inc
sbb
xor
pop
xor
mov
arpl
push
loopne
sub
cs
stos
ffreep
mov
pop
jl
scas
das
clc
sahf
cdq
sub
loope
into
(bad)
sub
pop
imul
jg
lds
mov
xchg
mov
adc
cwde
in
inc
ficomp
dec
sbb
mov
dec
loope
sub
popf
mov
mov
mov
ficomp
add
clc
dec
stos
jno
mov
xchg
rcr
imul
push
loopne
js
fistp
fild
mov
mov
sub
cmps
out
sub
pop
int3
pusha
dec
jb
(bad)
or
es
div
inc
xor
cmc
xor
jae
xchg
and
mov
iret
dec
test
out
(bad)
(bad)
push
je
scas
or
ins
je
(bad)
lock
(bad)
cs
les
jo
cmp
sub
daa
and
add
mov
push
stos
sub
dec
scas
adc
mov
je
cdq
sub
test
imul
xor
mov
mov
call
mov
pop
call
jecxz
sub
jmp
cmps
pop
mov
xchg
xor
mov
out
xchg
mov
cmp
or
pop
imul
daa
mov
sub
arpl
mov
push
out
cmp
xchg
xchg
sub
fwait
jb
sub
fiadd
call
lea
adc
fs
jg
in
(bad)
enter
mov
(bad)
call
(bad)
aaa
pushf
sub
enter
jle
jo
popf
push
xlat
ins
or
adc
hlt
scas
rcl
pop
fmul
sbb
dec
xor
iret
test
sti
jnp
test
cmp
jp
pusha
dec
pop
push
or
fcmovu
in
dec
inc
leave
pushf
gs
jae
mov
mov
(bad)
cli
inc
in
sbb
movs
or
shl
and
push
pop
test
pop
mov
xchg
aaa
imul
push
stc
pusha
mov
adc
dec
inc
in
xchg
loop
inc
jecxz
in
mov
xchg
sub
jbe
and
retf
mov
fs
(bad)
fistp
lock
cs
mov
push
cwde
repnz
mov
scas
lods
sbb
push
stos
(bad)
in
scas
in
shr
sbb
cmp
sbb
pop
jmp
sub
bound
push
pushf
adc
xor
cmp
cmp
dec
pop
mov
cmp
(bad)
push
outs
ret
cmp
mov
ja
lea
mov
jb
push
repnz
ret
adc
fcomp
add
xlat
mov
cwde
sar
xor
push
in
or
dec
mov
fadd
out
test
mov
sahf
push
in
es
loope
faddp
pop
pop
dec
loop
push
js
sbb
clc
xlat
fld
dec
rcr
pop
cmp
add
nop
xchg
stos
cmc
stos
les
or
jle
sbb
test
push
(bad)
or
or
push
(bad)
int
lock
lsl
stos
movs
sbb
fdivr
clc
or
fnstcw
adc
or
inc
xchg
retf
mov
les
stos
mov
dec
pop
inc
je
mov
mov
sahf
sbb
(bad)
jmp
(bad)
fdivr
mov
pop
sub
(bad)
jno
les
shl
jmp
jo
icebp
inc
out
(bad)
jo
popa
pop
movs
fwait
test
(bad)
mov
adc
mov
(bad)
repz
in
cmp
cmp
into
call
mov
lahf
sub
cmp
out
mov
syscall
stc
push
push
adc
and
shr
or
jns
shl
dec
lods
inc
xor
mov
sbb
sqrtps
dec
dec
jecxz
outs
iret
cmc
sar
mov
push
je
xor
das
neg
mov
and
xchg
mov
test
rcl
outs
dec
mov
pop
in
mov
jne
ss
std
es
popa
test
sahf
add
jmp
pusha
xchg
dec
push
(bad)
jne
neg
add
scas
pop
mov
jae
shl
cmp
jecxz
lea
xchg
sbb
sbb
sbb
les
je
jbe
adc
(bad)
push
dec
mov
arpl
pop
jno
or
repz
test
sbb
int3
test
add
dec
repz
push
or
xchg
xchg
inc
push
mov
(bad)
fcmovnbe
cmp
neg
add
jmp
mov
test
jae
shl
test
int
mov
dec
mov
inc
jmp
retf
pushf
test
scas
sub
ror
imul
dec
pusha
fild
inc
and
push
xchg
getsec
sbb
xor
pop
(bad)
lock
mov
jmp
xchg
cmc
add
std
mov
dec
(bad)
jmp
add
std
dec
jmp
mov
push
imul
ins
nop
std
fidivr
in
mov
xchg
mov
cmp
inc
push
or
add
mov
mov
ret
xchg
mov
adc
fdiv
pop
adc
jno
addr16
cdq
call
leave
sub
pop
sub
cld
mov
add
jl
push
ret
dec
cwde
xchg
xchg
dec
cmp
outs
push
movs
push
iret
sub
pusha
and
pop
jmp
adc
mov
ins
fld
test
pop
xchg
xchg
adc
add
cmp
pop
jle
int3
jecxz
cmp
lods
jo
push
hlt
enter
cmp
pop
xlat
(bad)
in
mov
sub
sub
cmp
sahf
mov
out
cld
fnsave
jg
push
pop
jecxz
jecxz
pop
and
int
sbb
adc
xchg
outs
scas
dec
inc
add
loopne
cdq
and
data16
and
mov
pop
lods
fild
addr16
sbb
mov
cmc
cmps
or
inc
(bad)
fld
test
lock
add
mov
add
inc
dec
inc
in
ins
cmp
push
cld
pop
retf
clc
mov
dec
cmp
and
xchg
and
test
mov
jne
xchg
and
mov
sub
leave
mov
test
add
pop
rcl
jmp
cmp
lds
movs
cmps
adc
nop
inc
sbb
xor
pop
inc
fst
(bad)
out
and
popf
loope
inc
ja
cli
pop
in
rcr
mov
jle
xor
test
(bad)
popf
shr
dec
cmp
pop
jne
xor
xchg
mov
mov
lock
fcmovu
dec
idiv
or
sub
das
dec
clc
jg
scas
adc
dec
xchg
sub
add
cli
pushf
fisubr
push
icebp
xor
daa
scas
aad
push
push
fs
lds
push
leave
into
aas
loopne
movs
fild
cdq
dec
nop
jbe
mov
retf
jmp
paddb
push
push
outs
sbb
adc
xchg
push
push
iret
cmp
pusha
test
scas
add
dec
cmp
add
test
fadd
ins
sub
pop
and
mov
mov
mov
(bad)
cdq
jbe
ja
iret
xor
(bad)
out
(bad)
xchg
lea
enter
imul
jo
test
imul
jae
or
jnp
or
mov
xchg
stos
test
mov
push
in
push
push
add
pop
add
or
jbe
pop
mov
jecxz
cmp
add
pop
and
fmul
in
dec
test
mov
sbb
mov
and
in
out
xor
and
pop
sbb
pop
test
pop
scas
fistp
jle
adc
mov
xchg
int3
and
xchg
inc
mov
push
xor
xchg
push
xchg
pop
cmp
or
fild
jmp
call
int
jp
(bad)
int3
mov
jno
sub
xchg
stos
out
enter
mov
movs
dec
fcmove
xchg
bound
and
clc
outs
daa
and
test
jl
pusha
inc
adc
scas
nop
ss
inc
pop
repnz
jns
xchg
mov
or
jb
add
daa
sub
mov
repnz
loopne
clc
aam
mov
add
mov
sub
leave
repz
repnz
out
and
mov
pop
mov
shr
xchg
adc
aad
mov
push
enter
int3
jp
pop
popf
in
stos
dec
inc
pop
std
jbe
jmp
les
outs
cmp
(bad)
(bad)
push
push
in
aad
pop
jmp
xchg
xchg
sub
mov
sbb
shr
sbb
pusha
mov
out
inc
xchg
pop
aaa
jmp
cs
in
sti
and
bound
test
out
into
imul
cmp
shl
jb
cld
sub
xchg
(bad)
shl
xchg
dec
add
mov
add
int3
imul
loop
push
pushf
lods
ins
and
xor
cmc
(bad)
stos
cmp
icebp
js
cmp
out
cmp
int3
je
loope
scas
es
shr
(bad)
fstp
pusha
fisub
push
mov
sar
test
xlat
pop
stc
jp
sub
xchg
cmp
inc
inc
inc
dec
cmp
aaa
sub
loope
xchg
and
sbb
mov
sub
adc
push
out
sub
nop
mov
xor
js
(bad)
cmp
hlt
push
xor
jnp
outs
aad
xchg
lock
mov
push
fcomp
or
sub
or
(bad)
cmp
push
(bad)
mov
pop
rcl
popa
jle
imul
mov
mov
pop
add
jno
push
ret
jl
nop
push
mov
je
mov
dec
push
ss
(bad)
fs
jo
xchg
jl
push
(bad)
jbe
xchg
sbb
cli
ins
and
push
xlat
fisttp
loop
data16
mov
cmc
mov
xchg
jmp
inc
leave
cli
mov
inc
lods
sub
xchg
jg
lods
mov
(bad)
or
push
push
pop
sbb
scas
cmp
cdq
not
sahf
ror
xchg
cwde
add
cld
pop
outs
cmc
mov
pop
scas
cs
jbe
adc
test
mov
ins
das
in
leave
push
add
jecxz
es
or
mov
jo
sbb
aad
and
fisttp
sbb
jae
retf
push
adc
fwait
not
mov
popf
mov
cmc
xchg
and
lock
icebp
lods
jae
inc
outs
adc
dec
or
jb
sub
inc
imul
test
scas
jo
daa
xchg
mov
jmp
xor
leave
push
in
scas
sub
shl
loopne
xlat
jl
pextrw
inc
xchg
(bad)
or
xchg
xor
pop
imul
jnp
pop
repz
ret
iret
and
mov
jne
pop
mov
int
pop
dec
sar
out
clc
fadd
arpl
push
mov
jecxz
shl
and
cmp
or
pop
jo
out
pop
leave
push
out
ja
jl
and
xchg
add
pop
push
sub
out
sar
mov
inc
dec
adc
cmps
data16
jmp
ficomp
inc
jbe
dec
pop
daa
push
mov
ror
call
mov
stos
cmp
arpl
mov
mov
lea
jmp
stc
(bad)
(bad)
daa
test
fisttp
mov
mov
mov
lods
mov
jo
das
das
push
fistp
jmp
call
pop
sbb
inc
dec
retf
pop
outs
dec
movs
ror
or
shl
jle
hlt
jle
enter
aad
dec
pop
in
or
pop
sub
add
xchg
test
xor
inc
call
shl
mov
sar
jne
xchg
inc
(bad)
cmp
push
add
sub
cmp
and
(bad)
out
push
xor
lock
cmp
mov
enter
mov
push
in
cli
dec
push
int
mov
add
mov
dec
sar
cmp
xlat
addr16
addr16
gs
cs
repz
mov
or
ret
sbb
push
adc
mov
retf
or
sbb
mov
and
mov
shl
sti
dec
pop
and
inc
jne
mov
xchg
jns
xchg
into
mov
jae
sub
neg
or
cmp
mov
pop
mov
push
je
jl
les
mov
and
xchg
xchg
xchg
scas
inc
neg
xor
inc
repnz
inc
fwait
fwait
mov
mov
pop
cmp
push
into
(bad)
outs
mov
clc
aas
or
out
fs
and
test
imul
and
inc
sar
or
ds
sub
ds
cmp
in
sahf
inc
mov
clc
in
call
add
sbb
icebp
pop
xchg
mov
push
lahf
mov
jg
popa
pop
das
adc
jmp
sbb
cli
jl
call
loope
int
adc
clc
test
into
cs
sub
in
dec
mov
fdiv
rcr
and
fldlg2
out
lods
fild
nop
arpl
nop
loope
int3
sbb
in
xchg
push
stos
les
arpl
xor
test
jmp
inc
push
and
hlt
aad
mov
pushf
push
xchg
adc
mov
dec
arpl
xchg
and
mov
push
aaa
js
adc
stos
xor
sbb
inc
sahf
stos
aam
repz
mov
cli
mov
inc
cmc
inc
pop
add
xchg
enter
rol
scas
scas
sbb
(bad)
aaa
rcl
das
sbb
std
rcr
cdq
sub
dec
adc
movs
and
cmps
(bad)
or
mov
add
mov
pop
inc
popf
fild
xlat
pushf
adc
dec
in
sbb
(bad)
or
jmp
and
dec
inc
ror
push
jb
jle
(bad)
sti
mov
xchg
pop
gs
outs
jns
enter
loope
movs
das
sahf
dec
jl
add
xchg
xor
add
mov
xlat
add
inc
lahf
sub
sbb
mov
mov
imul
dec
loop
sbb
call
mov
mov
es
fwait
in
mov
mov
mov
xor
add
inc
and
sub
push
xchg
xchg
pslld
hlt
mov
pushf
adc
or
pop
jmp
xchg
pop
sub
dec
clc
sbb
add
mov
dec
in
retf
ss
in
push
sahf
aad
lahf
loope
and
fld
mov
repnz
sub
sub
ins
fst
xchg
bound
in
sahf
cwde
push
xlat
jb
ins
dec
mov
inc
jmp
repnz
dec
push
jp
das
mov
dec
jge
mov
loopne
adc
jnp
or
imul
movs
adc
and
mov
xor
sbb
icebp
push
lahf
(bad)
daa
or
xor
pop
xor
ficom
loop
loopne
das
inc
pop
adc
(bad)
sbb
pop
dec
cmp
pushf
xlat
push
sahf
xchg
not
adc
push
aaa
es
(bad)
pop
sub
sar
cwde
mov
mov
jne
sbb
cdq
inc
xor
jp
test
mov
add
add
nop
xor
mov
sbb
or
xor
popa
mov
jno
fcom
or
push
cld
push
fs
add
mov
push
cmps
push
outs
mov
dec
dec
mov
es
sub
pop
ds
cmps
(bad)
movs
or
inc
daa
popw
ja
pop
(bad)
xlat
and
dec
xor
in
add
fsubr
outs
pop
xchg
outs
inc
xor
jno
sti
sub
in
or
push
aaa
pop
cmps
leave
repz
out
test
xor
call
jo
pop
in
stos
dec
sub
and
add
int
mov
das
cmp
cli
mov
sbb
xchg
scas
mov
push
push
or
in
mov
xchg
pop
dec
push
xchg
lods
add
(bad)
loope
jl
or
xor
outs
(bad)
push
and
lea
add
mov
stos
fst
xchg
out
mov
je
push
imul
js
imul
je
aaa
(bad)
lods
(bad)
sub
cwde
or
in
scas
shl
std
sub
inc
pop
jae
jbe
dec
xchg
fcmovnbe
mov
sub
pop
and
mov
jnp
lahf
inc
into
cwde
das
or
jle
dec
jecxz
dec
dec
add
pop
adc
add
in
xchg
add
idiv
cmp
movs
or
mov
sub
sbb
cmp
adc
xor
mov
into
sahf
and
(bad)
ror
push
imul
inc
pop
inc
stc
stc
cmp
xor
dec
mov
daa
fld
sub
leave
mov
xchg
pop
imul
adc
add
retf
inc
adc
xor
or
push
mov
fs
lods
ds
pop
repnz
pushf
dec
xchg
push
shl
fdivr
sbb
xchg
push
cmp
and
stc
mov
mov
xor
imul
push
iret
inc
aad
or
jns
into
lods
les
leave
jmp
mov
inc
sahf
jns
retf
(bad)
fsub
xor
lahf
fst
int
stos
push
jno
imul
fdivr
or
out
nop
outs
lea
dec
jge
mov
sbb
mov
mov
xor
push
pop
and
pop
mov
pand
scas
fsub
aas
fild
stos
enter
call
enter
int3
imul
popf
pop
pop
jo
push
repz
or
jecxz
inc
jns
cmc
(bad)
icebp
mov
xor
add
pop
jmp
mov
mov
push
in
fldl2t
test
pop
data16
in
mov
ja
push
sahf
or
jbe
inc
inc
adc
xchg
outs
or
push
sub
cwde
mov
int3
dec
call
push
xchg
icebp
sub
pop
push
jecxz
jae
dec
or
pop
pop
cwde
stos
in
mov
aad
outs
and
sbb
sub
inc
cs
xor
out
int
popa
inc
div
pop
mov
mov
(bad)
jp
push
dec
inc
retf
(bad)
mov
loop
in
repz
dec
mov
out
adc
or
push
xor
xlat
mov
in
mov
push
adc
mov
adc
inc
std
jae
add
push
sbb
jg
cmp
scas
iret
and
test
js
and
ins
lods
jecxz
jne
lea
shl
jbe
in
mov
mov
push
inc
mov
retf
xchg
pop
pushf
pop
aam
arpl
jnp
lahf
pop
mov
hlt
mov
mov
mov
mov
add
pushf
int3
cs
jle
test
mov
mov
inc
lea
ret
mov
dec
xlat
mov
les
inc
inc
fadd
and
add
(bad)
cmp
leave
(bad)
fnstcw
mov
xchg
int3
push
lds
sar
jnp
dec
cdq
ret
adc
pop
jmp
rcr
adc
dec
or
adc
nop
cmp
add
cmp
cmp
inc
sar
jne
cmp
cs
shl
dec
jge
add
or
jae
les
shl
iret
cwde
cmc
cld
ficomp
or
sbb
out
pop
icebp
popf
call
push
dec
inc
ffree
xchg
cmp
popa
add
aad
in
dec
mov
call
arpl
ins
test
(bad)
push
addr16
jl
test
add
test
retf
add
aad
mov
mov
daa
and
es
clc
stos
dec
ins
mov
jae
hlt
iret
push
and
call
mov
out
inc
(bad)
fdiv
bswap
test
xchg
bound
jp
cmps
inc
xlat
sub
or
lods
cld
or
aas
into
or
movs
pop
xor
inc
adc
out
cdq
pusha
jo
cdq
stc
(bad)
lods
mov
adc
dec
jmp
lock
jae
repz
leave
sub
or
dec
outs
hlt
cmp
mov
jno
jg
je
dec
push
or
hlt
xchg
xor
test
xchg
and
arpl
test
dec
aad
inc
inc
aas
call
sub
inc
stos
xor
lds
sbb
inc
inc
mov
cmp
movs
jmp
test
fst
mov
sub
mul
retf
pop
fwait
mov
outs
mov
cli
clc
(bad)
outs
add
pop
inc
mov
dec
mov
out
mov
(bad)
and
pop
push
gs
sub
cmp
mov
lds
mov
inc
pushf
je
mov
loope
popa
pop
test
mov
cwde
test
jle
lock
std
push
jns
and
gs
inc
push
(bad)
or
xor
(bad)
add
jb
in
aad
add
cmps
pop
xchg
daa
inc
in
sbb
test
pop
mov
pop
arpl
push
das
xor
mov
and
jo
or
(bad)
enter
jle
(bad)
mov
lds
lock
lea
lock
mov
test
jne
stos
sbb
repz
lmsw
xchg
push
scas
cmp
int
cmp
jecxz
dec
add
pop
mov
pop
fadd
xchg
push
call
in
das
movs
outs
add
jmp
std
adc
mov
ja
adc
and
mov
mov
neg
push
mov
inc
xchg
out
push
enter
mov
aam
dec
(bad)
xor
sbb
push
pop
rcl
cs
or
test
mov
sbb
add
repz
cmps
out
xor
cmp
inc
popa
add
adc
gs
daa
rol
(bad)
cmp
call
mov
call
dec
mov
xor
retf
pushf
and
mov
push
inc
inc
jg
mov
mov
ins
add
test
push
ret
(bad)
or
sbb
dec
mov
and
pop
push
fnstsw
ffreep
aad
mov
repz
and
add
and
or
sub
mov
ss
lods
clc
mov
mov
mov
(bad)
sub
ror
push
jg
jnp
add
jp
cli
fsub
or
mov
pop
aam
and
cld
sub
mov
fistp
adc
xor
psubusw
pop
push
jmp
jae
imul
pop
sub
xlat
hlt
dec
sub
enter
jns
jae
bound
xchg
ror
add
cs
mov
iret
ror
test
xlat
fidiv
in
xchg
ins
mov
imul
xor
adc
pop
mov
and
jno
out
enter
cmp
jbe
mov
out
add
and
push
pop
sub
xor
jle
fild
dec
nop
(bad)
jmp
dec
cmp
jo
cmc
cmp
jns
jmp
sub
ins
push
xor
sbb
dec
mov
gs
push
sub
dec
push
dec
(bad)
enter
or
xor
neg
loope
addr16
and
out
loop
daa
retf
jmp
mov
fdiv
pop
out
icebp
es
adc
add
mov
push
stos
xchg
jle
sub
push
dec
pop
or
mov
jl
(bad)
jle
les
inc
mov
dec
in
push
test
mov
test
add
add
jle
jecxz
fsubr
in
les
adc
popf
sub
jne
sbb
(bad)
(bad)
push
pop
bound
xor
bound
and
es
data16
(bad)
mov
fcomp
push
dec
sbb
mov
inc
mov
int3
xor
dec
mov
sahf
cmp
loopne
mov
aas
shl
les
cmp
inc
ja
adc
ja
(bad)
sbb
or
(bad)
and
xor
bnd
gs
mov
adc
jp
or
cmps
xchg
and
or
cmp
push
clc
fstp
movs
lock
mov
or
pop
cmp
mov
cmc
jbe
xchg
jmp
pop
gs
push
daa
rol
push
add
mov
dec
xchg
sbb
loopne
cwde
setbe
push
xchg
pop
or
or
aad
aad
(bad)
loopne
xor
jecxz
sbb
dec
xchg
dec
mov
aaa
cmps
push
pop
imul
and
ins
das
dec
mov
lahf
cmp
das
adc
fidiv
or
sbb
es
sub
or
dec
popf
mov
(bad)
mov
add
out
leave
dec
ret
push
inc
dec
out
fisubr
pop
jbe
repnz
sbb
(bad)
je
jmp
xlat
push
pop
hlt
push
dec
mov
addr16
push
xchg
mov
add
mov
lahf
out
add
pushf
add
cmp
sub
movs
lahf
and
push
jmp
mov
cdq
mov
push
jnp
push
jo
out
pop
sti
fnsave
push
repnz
dec
mov
xchg
pop
in
js
xor
inc
mov
into
pop
(bad)
ret
xchg
mov
mov
xchg
sub
jae
mov
repz
xor
jecxz
(bad)
retf
adc
inc
jns
xchg
fidivr
ss
cmp
mov
mov
xchg
call
arpl
fucom
pop
pusha
sbb
test
idiv
iret
ret
rcl
add
fcomp
call
les
pop
mov
adc
push
jne
imul
fsubr
out
jmp
mov
fwait
addr16
arpl
push
in
or
mov
pop
dec
or
(bad)
xchg
add
or
add
scas
and
pop
mov
fs
popf
ja
out
sub
call
std
inc
inc
or
lods
mov
jle
int3
inc
mov
mov
mov
sbb
mov
(bad)
cmp
push
enter
fdiv
xchg
sub
add
js
pop
fdiv
cld
add
out
push
(bad)
sbb
push
mov
in
sub
pop
or
fdiv
stos
or
fimul
mov
add
inc
sub
cmp
vmulpd
add
jae
ins
adc
jae
arpl
inc
jle
repnz
fmul
push
cli
xchg
out
sub
sbb
pusha
out
jmp
sub
add
add
mov
xor
aaa
lahf
fidivr
pop
mov
daa
loop
retf
out
xor
in
add
adc
(bad)
pop
imul
jp
adc
ds
adc
leave
mov
pop
fild
pop
cld
lods
outs
xlat
jecxz
ins
xchg
xchg
sub
lods
push
pop
jmp
push
xchg
in
test
dec
mov
(bad)
jp
cmp
fst
(bad)
fdivr
stos
hlt
std
add
test
pop
stos
retf
aad
cs
mov
jl
jae
push
addr16
sub
and
cmp
aam
and
mov
jb
push
xor
addr16
jl
fidiv
cmp
push
adc
retf
(bad)
adc
sbb
imul
dec
sub
add
xlat
test
mov
jmp
mov
stc
xor
and
arpl
sbb
mov
sub
nop
lea
test
aad
xchg
mov
mov
call
jecxz
mov
inc
adc
call
pusha
pop
aas
out
addr16
nop
and
adc
lock
cmp
jns
out
fstp
jns
sub
inc
jb
jbe
or
arpl
xchg
xor
inc
sub
imul
and
stos
pop
data16
inc
popa
dec
dec
cwde
pop
sbb
ins
mov
cmp
lahf
rcl
cmp
sbb
cmp
fmul
cwde
sub
pop
adc
xor
mov
cs
(bad)
cli
lods
push
jecxz
fs
stc
add
cld
dec
hlt
xchg
jle
inc
add
mov
dec
and
mov
in
add
jge
pop
pusha
out
jp
stos
ins
jae
sub
scas
xor
arpl
fisub
mov
add
arpl
mov
fdiv
and
pop
mov
jno
mov
pop
pop
cld
mov
shl
ds
inc
out
ret
xor
popf
dec
dec
mov
jp
mul
mov
mov
scas
je
adc
test
add
mov
stos
sahf
cld
out
ror
movs
pop
loope
(bad)
shr
das
push
iret
rol
mov
dec
pop
pop
push
xchg
add
enter
in
cld
(bad)
in
push
cmp
pop
imul
test
mov
je
adc
outs
pcmpeqb
mov
push
shr
outs
add
push
lock
pop
aad
xchg
push
movhps
add
mov
xchg
or
adc
push
push
mov
pop
addr16
retf
fwait
xchg
repnz
int
mov
ins
ret
mov
or
jae
push
jp
outs
add
mov
pop
mov
in
push
ss
pop
xor
addr16
mov
adc
sbb
mov
stos
imul
aas
jge
xor
fsub
jo
cmpxchg
pop
loope
sbb
addr16
xchg
cs
int3
test
pusha
(bad)
gs
mov
stos
push
call
mov
jae
dec
out
cmps
lods
cmp
inc
jae
jb
push
push
loopne
pop
enter
cld
adc
xchg
inc
ja
cmp
jno
loopne
stos
cli
push
test
nop
dec
cmps
jb
in
enter
mov
jo
adc
in
push
adc
pop
dec
(bad)
aas
popf
push
dec
outs
and
pop
jne
inc
ffree
test
cmp
dec
pop
xchg
mov
das
sub
inc
pop
adc
loope
add
add
push
mov
lods
ret
call
ss
xor
jne
inc
push
mov
pop
ss
or
jg
hlt
ror
out
cmps
mov
out
xadd
sahf
pop
out
adc
mov
popa
and
xor
lahf
xor
fs
pop
xchg
mov
jbe
nop
fist
(bad)
daa
daa
push
mov
push
arpl
imul
dec
lods
add
push
xchg
lea
cs
dec
cmp
push
sub
lock
in
enter
jmp
cmp
fmul
dec
mov
mov
xor
cmp
bnd
sub
movs
add
sub
test
xchg
inc
mov
jb
xchg
iret
lods
add
pinsrw
fld
adc
push
ss
sub
addr16
jmp
dec
xchg
in
xor
mov
pop
jmp
pop
ins
nop
aaa
mov
call
mov
cmp
call
ss
aas
mov
aas
xchg
inc
shl
sbb
mov
bound
or
or
enter
rcl
ret
loopne
jne
add
(bad)
int3
pop
imul
push
pop
pop
jl
outs
sub
cdq
call
sar
les
add
in
aam
xor
adc
dec
xchg
scas
cs
call
sbb
ss
sub
jo
push
loope
sbb
or
mov
dec
xor
xchg
adc
jns
or
cmc
loopne
test
test
stos
mov
mov
das
idiv
invd
dec
fcom
je
inc
test
fist
dec
sub
sahf
repnz
int
sbb
out
adc
mov
cli
and
mov
retf
xchg
fcmovnb
push
lods
push
mov
add
sbb
mov
jge
pop
lds
sub
mov
lods
test
mov
and
push
push
nop
aaa
sahf
sbb
in
or
add
xchg
xchg
jno
adc
jmp
pop
mov
or
inc
cs
cdq
push
xchg
shl
and
sbb
inc
cmps
push
popa
or
pop
in
enter
mov
sub
pushf
xor
das
popa
into
test
in
pop
rcr
cmp
mov
mov
pop
mov
jo
mov
sub
mov
sub
ja
inc
aaa
xchg
add
movs
xchg
mov
fldenv
xchg
in
add
pop
aad
push
das
cs
pop
hlt
out
adc
push
mov
dec
out
push
mov
addr16
ret
les
test
xchg
enter
dec
dec
pop
(bad)
xlat
cmp
push
int
lahf
pushf
jl
cmp
adc
enter
mov
ds
xchg
cmp
retf
dec
sub
sbb
sub
les
mov
mov
push
sahf
popa
leave
mov
ror
cld
lds
iret
and
lea
cmps
not
imul
xor
xchg
cmp
hlt
dec
inc
fimul
inc
jns
in
push
mov
adc
(bad)
enter
add
bound
jbe
jmp
cmp
cmp
or
cwde
mov
add
jae
iret
je
or
icebp
inc
and
(bad)
out
mov
jmp
xor
xchg
ins
add
xchg
std
sbb
pop
call
adc
daa
lods
xor
(bad)
imul
cmp
out
outs
jecxz
imul
jge
inc
cmp
cmp
or
cmc
push
ja
in
std
add
cmp
mov
sub
mul
fldenv
fsubr
dec
shl
aam
add
mov
ss
mov
(bad)
pop
shl
jecxz
inc
mov
xor
int3
mov
jl
pusha
sub
repnz
popa
lea
pop
pop
sub
cmp
test
sbb
mov
add
dec
mov
aam
sbb
call
mov
and
sub
jae
ss
xchg
ins
test
bnd
push
jb
inc
jbe
ret
mov
push
js
xlat
adc
and
scas
(bad)
sti
dec
mov
les
pushf
dec
pop
sbb
leave
mov
sti
cmp
inc
call
add
fcmovbe
inc
cld
ds
mov
cmc
dec
(bad)
xchg
aad
sub
fidiv
jg
push
loope
jmp
fadd
popf
xchg
stc
sbb
push
aam
std
clc
sub
jnp
sub
jg
xlat
out
into
imul
mov
outs
in
dec
sahf
daa
popf
mov
imul
pop
xor
lahf
ss
push
ret
je
pop
daa
xchg
sbb
add
pop
fnstsw
ss
aaa
stc
or
mov
shl
iret
xchg
dec
outs
push
into
mov
rol
inc
loopne
test
aaa
jne
stos
sub
out
adc
lea
mov
inc
icebp
or
aas
and
push
rcl
mov
mov
or
sub
cmps
retf
inc
jp
cmp
lahf
adc
cmp
lea
enter
fcmovnu
mov
shl
in
dec
js
cmp
push
dec
lods
test
jns
or
outs
test
dec
adc
sub
xor
xor
jb
xchg
int
mov
inc
int3
lds
mov
cwde
daa
mov
push
cmps
outs
cmc
mov
xchg
clc
mov
jl
adc
dec
pop
cmp
gs
pop
ret
dec
mov
push
or
ss
or
mov
fiadd
xchg
mov
test
and
pushf
ins
repz
stos
test
jge
ds
(bad)
test
rol
imul
shl
fstp
jne
les
push
pop
loop
pop
jmp
adc
push
xor
lods
xchg
cs
arpl
dec
lahf
stos
cld
inc
or
daa
leave
xor
dec
arpl
cld
adc
(bad)
xchg
jge
cmps
jnp
xor
adc
mov
mov
and
dec
pop
add
ret
pop
pop
mov
aad
div
xor
pop
pop
add
and
stos
test
add
call
loopne
or
jle
clc
scas
push
pop
or
shl
sbb
pusha
lods
sub
iret
in
xchg
cmp
sub
out
jne
mov
pushf
ss
js
inc
add
cs
and
pop
cmc
shl
ins
movs
in
fwait
adc
cmc
or
pushw
dec
jae
fs
cmp
push
(bad)
in
add
retf
ins
in
push
in
mov
icebp
aas
pop
or
gs
mov
dec
push
mov
push
gs
cwde
test
test
and
lahf
(bad)
push
out
pop
shl
(bad)
je
jg
sti
adc
mov
aad
outs
into
ss
push
push
and
sub
hlt
aaa
lods
inc
dec
aaa
stos
gs
inc
xchg
fs
cmp
xchg
cmp
clc
(bad)
adc
pop
call
mov
fistp
add
hlt
sbb
int
ja
push
mov
jo
add
int3
ja
xor
mov
inc
out
mov
and
fcomp
out
movs
jb
push
dec
dec
daa
jmp
call
mov
or
dec
jmp
das
sahf
(bad)
shl
sub
xlat
mov
mov
lods
xchg
mov
fild
and
(bad)
mov
and
hlt
dec
jmp
(bad)
sub
sub
or
int
movs
bound
and
shr
inc
cmps
fisub
gs
mov
sbb
leave
sbb
int
imul
mov
push
jae
lahf
aam
sub
fucom
nop
dec
cmp
outs
mov
cdq
jle
or
adc
jns
or
sub
retf
xchg
retf
pop
or
xchg
int
xlat
mov
adc
ss
jge
sbb
xchg
fsubrp
ds
mov
sahf
cmp
movs
fld
xchg
or
fs
(bad)
jl
adc
(bad)
mov
fbld
jo
test
mov
mov
pop
outs
pop
test
icebp
mov
push
mov
ins
push
loopne
mov
imul
gs
mov
pop
jbe
xchg
outs
xlat
dec
sbb
push
jns
adc
push
fs
scas
test
icebp
pop
xor
bound
fwait
scas
push
lods
inc
nop
mov
mov
fcomp
retf
push
sub
outs
xchg
repz
adc
cld
aad
gs
ficom
movs
iret
clc
cmp
inc
mov
cmp
pop
jmp
shl
xchg
mov
pop
movs
cwde
jo
pusha
jns
pushf
cli
ins
inc
mov
bound
fcomp
out
outs
or
push
jne
aaa
add
push
call
ins
sbb
jnp
adc
mov
jge
mov
mov
sahf
add
dec
fstp
sbb
daa
rcl
inc
rcl
rol
movs
jecxz
push
sub
icebp
mov
je
or
addr16
adc
dec
fidiv
loope
out
retf
scas
sub
add
or
sub
mov
cmps
cli
fimul
dec
pop
test
mov
arpl
jmp
loop
ins
sbb
pop
pop
rcl
sbb
mov
hlt
popf
(bad)
xor
out
scas
ds
adc
test
adc
js
lock
retf
mov
popa
fcomip
sub
mov
cmp
xor
in
xchg
dec
sbb
push
and
push
mov
xchg
jbe
sbb
fld
retf
jecxz
xor
mov
(bad)
ucomiss
jle
pushf
movs
dec
icebp
outs
sub
imul
(bad)
(bad)
xor
push
rcr
fst
xchg
lods
out
add
cmp
adc
ret
or
rcr
add
test
sbb
retf
pop
push
div
xor
and
cmp
je
lds
mov
pusha
lods
dec
cld
mov
in
mov
sbb
inc
and
call
sub
gs
sub
inc
cli
jg
cli
lods
sbb
xchg
sbb
mov
add
sbb
sub
repz
push
mov
(bad)
dec
and
sbb
pop
or
inc
popa
add
hlt
mul
pop
jns
mov
aaa
push
dec
mov
sub
adc
nop
cmp
mov
mov
mov
adc
mov
mov
jne
xor
in
cmps
inc
scas
stc
fld
sti
add
fsubp
add
(bad)
pop
addr16
add
je
mov
xchg
adc
enter
xchg
sbb
inc
mov
rcl
mov
fwait
jne
enter
call
bound
or
(bad)
sbb
pushf
lods
lock
scas
shl
sub
sbb
int
hlt
sub
lahf
mov
(bad)
mov
pop
popa
bound
fadd
call
in
es
sbb
cmp
retf
in
movs
cwde
movs
retf
push
sub
sbb
cli
(bad)
dec
test
sub
loop
test
stc
popa
and
or
pop
jmp
(bad)
js
(bad)
out
cli
jne
xor
xor
test
mov
and
out
xchg
push
dec
not
(bad)
mov
push
ins
shr
in
jmp
pop
ja
lock
and
jo
fstp
xchg
mov
mov
add
adc
fadd
xchg
sbb
pop
xchg
cmp
mov
popa
and
sub
gs
cmps
or
mov
div
bound
rcl
push
xchg
mov
imul
jecxz
popa
push
mov
iret
pop
mov
mov
sbb
imul
xor
adc
cld
imul
sbb
cs
sub
jno
shr
push
pushf
fs
into
xchg
jp
lods
mov
jnp
scas
push
lea
xor
dec
and
not
pop
repz
push
mov
cld
retf
jo
out
inc
outs
shl
fisttp
ret
fistp
cmp
xchg
sub
xchg
pop
sbb
xchg
loop
inc
outs
xchg
repz
xchg
xchg
ror
cmp
pop
jae
xchg
repz
ficom
(bad)
xchg
call
std
push
xor
add
not
mov
jbe
jge
pop
pop
in
cwde
mov
xchg
push
sub
jl
imul
stos
mov
sub
mov
pushf
cmps
leave
pop
movs
lock
out
jnp
fnstsw
sahf
fist
dec
cmp
and
ror
mov
es
add
add
jb
icebp
test
and
or
mov
cmp
sbb
lods
jns
sub
(bad)
pop
stos
in
dec
mov
sub
inc
mov
(bad)
dec
std
pushf
push
fbstp
add
fs
dec
shr
sahf
jp
adc
mov
dec
(bad)
mov
inc
cmp
mov
test
in
hlt
rol
jb
mov
xchg
add
clc
div
std
jl
popf
fmul
iret
repnz
sub
rcl
xchg
inc
shl
js
aaa
and
sahf
jp
or
adc
leave
mov
cwde
je
sti
repz
dec
add
cmp
rcr
arpl
(bad)
mov
xchg
lods
sbb
sahf
shl
mov
fbld
movs
int
out
rcr
inc
jno
jge
mov
add
cdq
es
retf
pop
add
fmul
inc
test
xchg
pop
cmp
ss
mov
sbb
jmp
hlt
push
movs
outs
jmp
rcr
cwde
nop
fadd
fld
jp
cli
aad
dec
cmps
nop
aad
or
jecxz
scas
sar
out
mov
bound
gs
test
add
test
sub
sbb
xor
push
test
inc
pop
xchg
hlt
outs
loopne
mov
jmp
jl
push
xchg
imul
dec
push
mov
cld
mov
ficomp
lock
stos
mov
stos
hlt
aaa
in
push
push
cmp
sbb
pop
pop
mov
push
js
pop
clc
cmp
gs
xchg
push
dec
xchg
pop
repz
xchg
or
jmp
or
xchg
cmp
inc
sti
cmp
dec
jb
aas
addr16
sbb
loope
lock
lahf
or
inc
xor
ret
fwait
cwde
mov
sub
aas
xchg
out
fst
mov
rol
sti
test
and
mov
shr
adc
add
leave
hlt
mov
ror
sbb
aad
(bad)
sbb
fsub
lea
out
es
pushf
xchg
and
es
pop
push
xchg
fisubr
jae
mov
xor
cmp
ret
popf
push
push
mov
push
jmp
pop
mov
jne
inc
xchg
in
leave
shl
cmp
test
aas
inc
xchg
mov
inc
push
pusha
inc
out
mov
pop
dec
cmp
pop
or
icebp
out
lock
sub
dec
out
cwde
fwait
(bad)
cld
mov
gs
ss
iret
sbb
push
adc
xor
mov
jecxz
inc
ds
dec
ja
ficomp
or
ror
xchg
xchg
adc
in
pop
enter
outs
xchg
cwde
mov
and
push
clc
adc
pop
xor
adc
(bad)
arpl
and
jl
xlat
sbb
add
push
out
sbb
ret
data16
leave
pushf
pop
xchg
mov
mov
int
pushf
push
ret
jbe
popa
jge
mov
scas
lods
push
data16
das
inc
nop
pusha
mov
iret
stc
sbb
jne
push
jo
xchg
(bad)
cmp
pop
xchg
pop
test
cmp
push
out
pop
fcmovne
mov
fst
cmp
sub
xor
add
jbe
adc
xchg
pusha
jns
js
out
stc
fwait
in
jl
and
test
pop
loopne
add
xor
push
punpckhwd
je
mov
jmp
retf
rcl
(bad)
xlat
leave
imul
ror
addr16
pop
mov
mov
out
call
sbb
push
adc
ror
or
xor
dec
loop
adc
adc
xor
mov
fldpi
pushf
es
(bad)
popf
imul
mov
call
das
mov
call
inc
push
mov
fcom
jb
cli
pcmpeqb
out
(bad)
mov
shr
gs
icebp
sub
leave
addr16
mov
cld
add
retf
jg
sbb
stos
movs
and
test
in
mov
fwait
icebp
cmp
(bad)
adc
xchg
retf
jb
jl
sbb
or
push
test
cs
mov
cdq
mov
pop
das
pop
in
xor
sub
mov
scas
or
clc
imul
xchg
mov
dec
pop
aam
scas
or
addr16
fbld
cmp
imul
mov
mov
sar
mov
dec
adc
bound
inc
icebp
or
or
jl
mov
mov
fiadd
xchg
and
movs
pop
out
xchg
out
push
inc
adc
dec
mov
mov
ret
add
jae
jp
sar
popf
push
jge
mov
push
or
jmp
popf
sbb
dec
sbb
test
imul
std
int3
scas
js
stos
scas
inc
dec
inc
fld
add
sbb
jo
mov
mov
icebp
mov
repnz
inc
add
mov
or
xchg
out
call
jmp
mov
sbb
cmp
jbe
xlat
pop
sbb
adc
add
mov
and
pop
add
test
cmc
lods
mov
in
mov
pop
retf
cmc
jne
sub
scas
fsubr
xor
push
retf
sub
mov
xchg
pop
or
vmovd
or
retf
push
movs
xor
lock
add
adc
jns
shl
jb
ficomp
loopne
xor
sbb
push
pop
adc
retf
mov
and
sub
test
aaa
jmp
stc
pop
ror
pop
loopne
push
icebp
mov
cmp
ja
dec
push
movs
push
adc
cwde
or
add
in
jns
jnp
cmps
pop
mov
mov
js
lods
mov
lds
(bad)
adc
icebp
sub
(bad)
retf
test
xor
sbb
jge
or
test
xor
ficomp
push
in
jb
xor
xor
(bad)
sar
retf
call
add
cld
cmp
mov
push
call
jmp
lds
addr16
sbb
jmp
jp
sti
leave
cli
pop
std
mov
(bad)
dec
shr
cli
pusha
push
push
dec
and
das
sbb
sti
mov
pusha
pop
outs
sar
stos
jp
or
mov
scas
xchg
imul
in
dec
shr
sbb
pop
pop
lea
push
cmp
cli
movs
inc
push
pop
fmul
outs
jg
cdq
dec
push
aas
in
add
sub
or
push
rol
jno
xor
dec
popa
sar
cwde
xchg
rcl
pop
dec
cld
push
mov
add
push
cmp
lds
jg
xchg
fwait
jo
fld
movs
mov
xchg
popa
dec
xchg
in
mov
outs
jb
jno
add
gs
add
ficom
lock
adc
push
mov
mov
movs
adc
jmp
and
cwde
in
in
(bad)
pop
test
aad
stc
out
arpl
sub
retf
std
and
add
dec
pop
movs
mov
jl
cmc
jns
lsl
jno
icebp
cmp
jge
mov
add
aam
or
jb
ins
or
movs
add
lods
ror
lock
jmp
and
pop
pop
sub
daa
add
or
ss
push
imul
sub
stos
jae
sti
fidiv
addr16
je
dec
shl
inc
pop
sub
mov
cmc
pop
mov
scas
test
push
out
out
push
sbb
cmp
cmp
jno
imul
add
ins
(bad)
inc
dec
push
sbb
dec
(bad)
mov
adc
add
jge
js
test
jl
mov
test
mov
fdiv
and
pop
iret
jo
shr
in
ror
adc
rcr
jle
(bad)
pop
and
daa
mov
or
push
jmp
and
(bad)
inc
sahf
pusha
push
adc
bound
out
aad
in
mov
jl
add
stos
lods
xchg
sub
int3
fcomp
jno
xor
lea
xchg
fiadd
pop
leave
movs
mov
jecxz
push
fbstp
fimul
pusha
stos
adc
std
adc
nop
xchg
test
dec
outs
push
cmp
mov
in
test
stos
inc
push
mov
mov
or
sbb
aaa
dec
dec
fiadd
outs
cld
pop
adc
scas
addr16
int
mov
fabs
xor
mov
and
inc
into
lods
mov
xor
icebp
mov
inc
ins
popf
mov
or
pop
loop
repnz
push
xor
mov
int
push
sbb
outs
lea
out
pushf
pushf
and
mov
dec
das
push
in
sub
jbe
dec
movs
(bad)
mov
aad
pop
movs
pop
jns
test
lea
nop
push
cmp
adc
pop
retf
ins
out
out
push
adc
mov
sbb
cli
mov
out
mov
mov
mov
adc
repz
pause
jmp
hlt
cmp
add
lods
push
retf
mov
mov
nop
daa
lods
mov
add
out
sub
ror
hlt
sahf
fneni(8087
hlt
xor
xchg
and
push
lds
loopne
xlat
mov
add
in
call
xchg
cwde
or
ss
or
mov
(bad)
js
sub
ficomp
fldenv
loop
adc
push
std
test
(bad)
push
(bad)
(bad)
cmps
jo
clc
cmps
dec
(bad)
in
popf
fiadd
dec
imul
scas
add
in
mov
ret
jo
add
pop
out
cmp
cwde
out
loopne
jnp
sub
ja
sbb
inc
dec
sub
dec
(bad)
popa
mov
jecxz
bound
adc
xlat
aaa
iret
cwde
and
dec
sahf
and
mov
(bad)
repz
mov
ja
outs
xchg
mov
inc
outs
inc
pop
jmp
ss
sbb
test
sbb
xchg
dec
dec
lock
into
jae
dec
outs
movs
add
cwde
jb
test
fiadd
mov
mov
inc
jne
mov
out
and
ret
aad
enter
call
stos
arpl
shl
ficom
jmp
mov
cwde
jb
or
movs
dec
lahf
sti
pop
pop
sub
cwde
hlt
inc
mov
adc
and
call
cmp
xor
lods
addr16
sbb
jp
int
add
aam
add
out
in
or
mov
into
icebp
push
mov
imul
fidivr
stos
jb
pop
stos
xchg
sub
rol
repz
jo
add
repz
jno
popf
xchg
(bad)
retf
push
xor
imul
adc
mov
pop
fcmove
mov
retf
mov
cdq
sbb
out
sub
fidiv
push
(bad)
fwait
daa
pop
or
sub
mov
xor
mov
mov
adc
jno
addr16
dec
jb
xor
mov
cli
cmp
lock
sbb
test
(bad)
lock
in
cmp
das
lahf
push
shl
test
loop
inc
fcmovbe
xchg
xchg
mov
loopne
mov
sub
xchg
pop
popf
inc
lods
mov
inc
pop
stc
and
popf
jbe
push
data16
(bad)
sbb
das
jns
lea
push
sub
ja
inc
and
rcl
ins
shl
mov
push
retf
aaa
xor
cmp
push
mov
pop
jp
sbb
pop
jecxz
mov
call
mov
jecxz
dec
clc
cs
mov
cwde
add
cs
retf
out
push
cld
mov
cmps
cmps
add
pop
sub
enter
loope
and
call
scas
imul
dec
and
movs
mov
rcl
jno
imul
lock
or
fs
xor
xchg
cmps
test
retf
into
sub
ds
mov
call
and
sbb
push
push
sbb
pop
pop
push
stos
cmp
xor
out
cmp
xor
pop
scas
jbe
call
je
adc
stos
xor
push
push
ror
pusha
sbb
mov
pushf
lds
out
mov
in
inc
inc
fdiv
sub
cld
nop
jmp
rcl
or
add
xchg
mov
add
pop
and
push
or
stc
add
iret
stos
bound
xlat
jae
push
fnstenv
imul
das
jae
aam
out
repz
inc
pop
pop
mov
jle
call
cmp
out
mov
xchg
pavgb
sub
bound
xchg
addr16
enter
cs
pop
dec
pop
mov
xchg
mov
iret
shl
xchg
lahf
dec
ret
sbb
fwait
mov
mov
push
sub
test
jnp
dec
xor
jno
jge
iret
push
shl
inc
iret
je
shl
call
pop
cwde
xor
inc
push
lahf
push
pop
xor
pop
inc
and
mov
test
or
add
dec
mov
retf
rcl
mov
(bad)
jp
mov
mov
jl
mov
xor
cmp
push
push
push
mov
mov
xchg
dec
ss
aad
lock
and
inc
pop
cmp
push
ja
and
mov
adc
stc
sahf
rcl
mov
fsubr
push
rol
mov
test
cmp
cmp
pop
pop
cmp
mov
adc
push
inc
sahf
repz
jmp
dec
out
xlat
imul
jae
dec
cmps
mov
push
xchg
cmc
pop
and
jecxz
les
and
call
adc
add
add
sbb
lea
shr
pop
aam
lock
push
imul
ja
popf
loop
adc
mov
in
in
cld
fbstp
scas
ror
mov
mov
mov
push
mov
inc
sbb
xor
fidiv
call
jg
adc
pop
imul
rcl
data16
je
lahf
dec
jb
test
xor
mov
aaa
mov
cmp
or
mov
sbb
mov
mov
lock
in
push
sub
ins
sbb
or
sbb
dec
cdq
and
jno
xor
cmp
pop
sbb
mov
or
popf
test
mov
cmp
mov
mov
mov
(bad)
and
jmp
ja
push
arpl
pop
jmpw
aaa
xor
movs
adc
push
retf
cmp
jns
test
inc
arpl
mov
inc
cdq
sub
or
ins
scas
mov
(bad)
test
mul
sub
cdq
push
dec
mov
iret
aad
mov
sub
adc
dec
test
mov
dec
rol
mov
hlt
mov
add
stos
fwait
sbb
jmp
mov
out
fstp
jae
jb
nop
stc
fwait
in
int
fnsave
int3
add
dec
jns
cmps
sbb
and
lods
or
lahf
dec
bound
and
ja
cmps
xchg
mov
fisubr
and
jp
ror
sub
jns
dec
mov
out
shl
push
or
popa
in
ret
inc
xchg
cmp
test
js
iret
xor
ja
stc
pop
xlat
pop
pop
sbb
dec
jmp
inc
aaa
test
dec
ret
mov
aam
jmp
mov
call
jo
inc
cdq
neg
pop
jb
jg
sbb
xor
mov
dec
stc
hlt
(bad)
in
jb
fwait
ret
iret
movs
push
jnp
pop
adc
sub
lea
push
xor
dec
addr16
pop
pop
ss
push
in
fs
pop
in
es
pop
sbb
push
push
pushf
aaa
jmp
or
adc
sbb
es
and
dec
cld
rol
jns
pop
xor
mov
dec
retf
retf
mov
rol
cld
sti
sbb
jae
add
inc
cs
ss
jmp
mov
push
ret
rol
call
jb
and
pop
not
jne
mov
mov
cli
jb
inc
sub
push
inc
push
out
cmps
or
or
mov
mov
cmp
outs
lds
in
push
mov
aad
nop
adc
mov
xor
shl
or
jno
(bad)
xchg
into
add
rol
rol
in
daa
rcr
ss
data16
sbb
mov
mov
push
jae
loopne
sub
dec
pop
sbb
jo
popa
xor
ja
dec
xchg
test
mov
push
retf
or
mov
jg
push
pop
sti
loopne
mov
aad
cs
js
pop
and
retf
xchg
cmc
xor
xor
retf
jl
imul
jns
loop
mov
add
jno
mov
and
dec
(bad)
dec
ficom
dec
pop
adc
pop
or
pop
in
pushf
inc
adc
stc
cmp
in
add
call
jbe
jnp
ror
scas
add
lods
pusha
pop
stos
inc
mov
mov
shl
sub
and
sub
sub
fwait
int3
sub
xor
out
cmp
fcmovu
dec
xchg
push
add
cmps
xchg
mov
rol
pop
jno
scas
or
out
jb
cmc
add
mov
lods
push
fist
in
and
xchg
(bad)
dec
jbe
jge
jle
pop
je
fs
icebp
dec
les
dec
aad
cmp
ja
xchg
ja
sub
inc
adc
test
and
lock
xchg
sub
adc
shl
jle
cld
mov
fidiv
add
xlat
push
sbb
je
imul
sub
out
dec
cmc
sbb
les
push
call
aad
jle
and
lock
in
inc
ror
lds
loopne
or
imul
add
add
pop
push
outs
jmp
xor
data16
(bad)
adc
or
in
adc
test
mov
pusha
adc
sub
nop
ret
sbb
cdq
push
ss
data16
cdq
mov
or
shl
in
or
jae
pop
popf
jecxz
mov
mov
(bad)
jl
xchg
dec
jmp
in
fucomi
out
aad
xchg
enter
inc
stos
mov
iret
fldcw
mov
xchg
pushf
sbb
addr16
jbe
pusha
pusha
dec
cmp
rcr
stc
js
mov
mov
out
pop
jecxz
jl
leave
jb
mov
adc
jne
push
inc
add
jecxz
mov
ins
jns
or
and
je
fs
loope
cmp
push
and
or
or
inc
retf
mov
pop
sub
retf
rol
inc
add
xor
xchg
js
push
or
bound
das
pop
stos
dec
popa
push
and
retf
int3
(bad)
repnz
les
(bad)
in
mov
cld
adc
add
fidiv
rcr
outs
add
xor
lds
hlt
ins
lock
iret
inc
push
pop
push
push
(bad)
lahf
loopne
push
in
call
add
or
loope
aam
sbb
push
xchg
in
mov
hlt
lahf
xchg
cs
out
adc
and
aad
cld
pop
js
jl
cmp
inc
jnp
(bad)
je
pushf
or
jle
cld
and
lods
sbb
jecxz
push
inc
pop
sbb
(bad)
jle
fwait
sbb
je
jne
cli
or
mov
ret
jp
ins
icebp
gs
xchg
dec
or
je
lahf
inc
ds
dec
iret
fild
jle
dec
fdiv
in
lods
pop
mov
adc
push
sub
hlt
push
bound
sbb
in
xlat
cdq
fxch
mov
xor
icebp
inc
cmp
or
dec
xor
cs
sbb
pop
leave
mov
cmps
push
test
mov
sub
mov
pusha
int3
dec
push
mov
mov
and
imul
nop
or
jae
xor
adc
test
cld
add
dec
cmc
ror
sti
in
dec
fisubr
sbb
mov
jae
fld
pop
mov
jmp
loop
or
push
addr16
fild
inc
jmp
fdivr
lds
push
pcmpgtb
repz
push
mov
push
inc
aas
call
aam
cmp
sbb
pop
in
cmp
ret
sbb
jnp
xor
call
sbb
sub
aad
clc
and
xor
lds
addr16
mov
pop
int
xor
and
into
bswap
dec
cdq
popf
imul
adc
das
mov
inc
call
push
push
xchg
enter
cmps
arpl
arpl
xor
fstp
push
push
pop
outs
ins
out
adc
fs
xor
retf
iret
jg
push
hlt
dec
call
dec
mov
xchg
fs
add
cmovl
push
nop
dec
add
fsubp
dec
add
inc
xchg
mov
ins
sub
jae
inc
call
jne
popa
popf
mov
sub
loop
push
aaa
mov
cli
adc
daa
sub
les
sub
add
loope
sar
movs
mov
dec
popa
in
(bad)
mov
fstp
mov
retf
pop
sub
mov
repz
inc
cs
lahf
jmp
mov
mov
(bad)
icebp
xchg
inc
adc
pop
push
test
xor
mov
imul
bound
adc
xor
div
xlat
sahf
adc
dec
push
adc
shl
xor
retf
test
push
addr16
mov
and
push
adc
mov
call
cmp
add
or
mov
lods
clc
jmp
sbb
pushf
push
inc
dec
sbb
cmps
xchg
xchg
sbb
mov
xchg
test
xor
lock
fisubr
clc
mov
xor
cld
push
in
stos
sbb
clc
mov
pop
inc
clc
mov
ins
ins
jl
sbb
test
test
lds
add
sub
mov
movs
movs
call
push
sub
jmp
je
sub
cmp
jbe
ja
fadd
das
fisub
lock
dec
test
sbb
jecxz
lds
fidivr
lods
mov
cld
data16
cmp
popf
test
loop
jmp
lock
ins
out
mov
xchg
or
lods
jp
cdq
cmp
jno
sar
out
dec
xchg
add
gs
push
pop
xor
mov
fwait
jl
add
mov
add
and
and
adc
or
push
xor
xchg
adc
daa
scas
xlat
xchg
dec
arpl
push
adc
add
sub
xchg
ss
shl
pop
lods
test
and
or
add
ficomp
cmp
test
xchg
lock
mov
adc
(bad)
les
out
mov
enter
std
bnd
jae
fsubr
mov
hlt
(bad)
or
dec
jecxz
data16
fld
inc
fisubr
and
retf
xchg
addr16
test
call
sbb
sub
stos
sub
ffreep
aad
in
mov
add
aad
mov
adc
jno
dec
in
cmps
ds
ret
xchg
sub
cmp
xor
fistp
dec
xchg
cmp
aas
outs
ror
outs
jbe
repnz
out
cmc
retf
or
mov
int3
lea
outs
lds
mov
push
inc
jnp
add
inc
(bad)
mov
(bad)
enter
push
inc
xor
imul
into
add
bound
pop
mov
jbe
in
loopne
sub
inc
mov
and
xor
jmp
shl
cmp
je
sub
cs
stos
adc
jle
mov
out
pop
pop
pop
mov
adc
fisttp
pop
pop
inc
dec
cmps
jg
and
xor
inc
ret
(bad)
cmp
int
cs
pop
in
test
arpl
or
out
push
jp
aas
enter
(bad)
mov
inc
pusha
stos
cmp
out
xor
fdivr
xchg
das
ja
sub
inc
out
mov
(bad)
mov
mov
jg
int3
pop
dec
shl
ror
stc
out
out
popa
pushf
adc
dec
pusha
fwait
inc
mov
pop
sub
(bad)
adc
mov
test
retf
ret
cdq
fild
(bad)
mov
pop
jae
or
neg
stc
add
and
cmp
not
in
es
pop
xchg
mov
push
sub
mov
mov
stc
out
cmp
adc
dec
aaa
popf
sbb
ins
dec
(bad)
lock
out
fistp
scas
(bad)
fadd
ins
xchg
inc
push
pop
rcl
ss
mov
and
push
xor
popf
cmp
mov
cmp
(bad)
aam
inc
mov
sub
lods
cmps
cmp
mov
mov
sbb
cmp
int3
push
xlat
xchg
(bad)
pop
push
mov
dec
cmp
push
fcomp
scas
push
mov
adc
imul
sbb
jnp
fistp
inc
xchg
mov
jno
cdq
push
or
inc
nop
xchg
sti
outs
sub
into
les
stos
jne
xor
das
clc
push
cmp
cdq
or
push
jae
shl
jp
aam
ss
and
popf
xchg
aam
dec
fwait
jl
cs
sub
jmp
add
fstp
sbb
(bad)
pop
jns
jnp
in
scas
xor
push
jmp
inc
leave
mov
test
aad
adc
adc
push
xchg
fstp
xlat
jno
fsub
mov
xchg
pop
bnd
mov
pop
dec
sbb
jmp
cmc
bound
jecxz
jae
int
dec
cmp
sub
js
lds
inc
pop
dec
movs
arpl
xchg
ficom
pop
aad
or
(bad)
fwait
in
aam
inc
ficom
mov
push
in
lea
add
sbb
push
leave
scas
cdq
mov
dec
ror
sahf
inc
into
jmp
ret
sbb
fst
ja
pop
gs
sbb
ret
jo
in
imul
push
or
xor
dec
mov
fwait
xlat
xor
inc
pop
adc
mov
jbe
mov
inc
int
sub
xor
mov
push
xor
(bad)
cmp
inc
xlat
mov
movs
hlt
loope
mov
fdivrp
push
call
int
in
push
xchg
pushf
cs
das
push
sbb
int3
into
loopne
jne
fiadd
out
mov
idiv
fsubr
xchg
cmps
rcl
sbb
out
dec
les
mov
(bad)
mov
mov
(bad)
icebp
pusha
shr
xchg
jmp
or
push
std
xor
jge
arpl
cmp
mov
sar
push
das
aaa
ret
dec
push
and
mov
nop
ret
adc
rcr
fsubr
pop
adc
mov
push
fiadd
inc
dec
push
imul
xor
sbb
cmp
pushf
dec
fild
xchg
jmp
in
mov
push
sbb
in
pop
arpl
dec
jmp
jg
inc
mov
cmps
inc
mov
nop
mov
clc
dec
mov
mov
icebp
ins
dec
imul
and
pop
int
mov
loop
dec
clc
pop
sbb
sub
sub
mov
push
or
retf
pop
jnp
adc
xchg
test
jnp
adc
nop
in
or
mov
pop
(bad)
xchg
pop
sbb
xlat
leave
cmps
lds
sar
fimul
(bad)
jmp
add
jnp
xchg
cmp
data16
inc
test
xchg
nop
arpl
xchg
sub
fwait
nop
ja
test
js
ret
add
mov
bnd
test
test
cmps
es
jle
lahf
xchg
out
inc
aad
int3
adc
in
(bad)
stos
sub
pop
into
mov
lods
pop
movs
leave
scas
xor
jne
in
fwait
pop
push
jb
outs
popa
in
popw
das
psllw
daa
push
outs
std
stos
and
push
cmp
xor
mov
shr
dec
inc
xchg
xchg
jp
push
xchg
inc
cs
adc
sbb
xchg
jb
cld
add
adc
pop
outs
pop
push
add
xor
and
mov
dec
add
jmp
int
push
ja
jmp
sbb
add
push
pop
mov
adc
sub
push
pop
xlat
cmps
cmp
sbb
cmp
inc
mov
scas
mov
sbb
mov
das
loopne
inc
mov
out
xchg
ins
out
in
sbb
mov
mov
shr
add
lock
fisttp
mul
mov
cs
test
sbb
es
mov
test
stos
or
sbb
mov
lds
enter
inc
and
call
pop
mov
pop
movs
daa
mov
loope
add
or
and
fs
push
or
mov
int
sub
inc
test
pop
fist
nop
movs
adc
or
(bad)
inc
retf
inc
icebp
add
jmp
inc
shl
xor
loope
sub
inc
mov
neg
push
jne
in
xchg
scas
leave
inc
push
push
gs
ins
cmp
dec
jne
jg
pop
dec
or
loope
mov
mov
(bad)
mov
and
push
mov
stos
cs
outs
inc
xor
(bad)
test
add
mov
adc
aam
jae
jge
mov
retf
dec
xchg
sti
lahf
icebp
and
std
or
scas
dec
dec
add
or
or
or
jp
push
in
rcl
leave
push
jle
(bad)
cmp
xor
mov
add
ret
es
shl
mov
push
cld
in
setae
jg
mov
xor
jle
nop
jg
jp
jmp
and
and
icebp
ret
mov
adc
dec
mov
std
in
(bad)
sti
pop
dec
or
jo
lock
in
gs
jle
cmp
jb
mov
loopne
(bad)
(bad)
push
mov
out
xor
mov
adc
dec
xchg
push
mov
jno
je
mov
push
add
dec
adc
add
addr16
mov
pop
push
mov
push
cmp
lods
push
ins
cdq
std
into
or
(bad)
xchg
jge
js
push
aam
xchg
mov
lods
mov
mov
sub
push
pop
inc
(bad)
adc
ud1
cpuid
fisttp
ins
fisttp
sub
sub
(bad)
jge
aam
jmp
(bad)
jne
mov
mov
ds
adc
sahf
scas
mov
loopne
arpl
jnp
mov
jno
xor
xchg
out
xstore-rng
cmps
inc
mov
icebp
stos
xchg
dec
jae
popa
lds
dec
leave
ret
inc
(bad)
jae
stos
cld
sbb
out
test
ins
out
xor
int3
xchg
jmp
fwait
xchg
call
jmp
leave
adc
fimul
les
(bad)
retf
aas
sub
jo
jbe
jo
pop
sbb
push
xor
and
and
lods
cmp
cdq
enter
pop
cmp
scas
jno
mov
add
nop
retf
and
(bad)
out
jl
push
cmp
bound
mov
push
cmp
inc
es
mov
int3
test
call
rcl
sbb
sub
out
xchg
fisttp
mov
movs
mov
mov
xor
out
add
test
jno
sbb
fstp
in
inc
xchg
xor
ja
push
mov
mov
jne
sub
les
(bad)
jle
xchg
jbe
adc
fistp
pop
in
test
gs
enter
and
ficom
sbb
out
cmp
pop
push
ret
daa
cmps
test
xor
jecxz
or
push
jo
out
jns
out
or
movs
loope
lods
sub
lock
dec
es
and
movs
mov
(bad)
jle
and
push
addr16
cwde
sbb
sub
push
cmc
xchg
dec
jno
xlat
xor
jb
inc
loopne
sub
xchg
xchg
in
push
or
mov
adc
retf
xchg
inc
movs
mov
and
lock
mov
or
test
inc
pusha
mov
(bad)
xchg
push
sub
pop
test
aam
mov
sub
mov
call
jge
mov
ja
or
iret
jle
jbe
xor
adc
(bad)
push
(bad)
sbb
xchg
pop
push
sti
or
inc
cmp
in
add
daa
xchg
fs
inc
adc
cmc
sbb
xchg
aas
mov
ror
sub
sbb
or
test
push
mov
or
and
sub
ins
es
jge
inc
sub
pop
js
sub
(bad)
mov
in
push
(bad)
setge
jge
push
pop
outs
out
xchg
movs
ss
xchg
dec
(bad)
and
loopne
fisubr
sti
daa
adc
hlt
bound
cmps
mov
cmps
retf
int3
pop
xchg
js
pop
(bad)
mov
dec
jecxz
mov
and
inc
(bad)
mov
push
inc
mov
idiv
stc
call
xor
push
leave
jae
pop
mov
das
fidiv
pop
push
xchg
cmp
inc
mov
movs
sub
adc
push
mov
lea
ja
mov
addr16
cmps
movs
test
in
xor
ja
cwde
pop
shl
aas
nop
inc
inc
add
fbstp
jmp
ins
std
cdq
imul
int
xchg
cld
dec
pop
or
pop
shl
stos
add
outs
es
sub
add
and
test
inc
jb
dec
inc
fisub
sbb
aam
sbb
sar
int
jbe
xchg
aam
and
out
(bad)
aaa
in
sbb
data16
(bad)
push
mov
rcr
mov
dec
pop
iret
xor
sub
arpl
and
popf
push
fxtract
inc
cmp
call
fadd
mov
xchg
pop
pop
lock
not
mov
je
les
test
(bad)
cmp
ret
ret
mov
mov
push
test
jo
push
push
ret
loope
push
mov
adc
sbb
adc
xor
jne
inc
or
lea
mov
aam
add
push
lea
shl
sub
pop
icebp
repnz
pop
mov
pop
pushf
into
in
mov
ins
jne
jne
fidiv
pop
mov
dec
and
(bad)
cmp
push
and
xor
int
out
pop
mov
ins
mov
push
add
aas
push
cmp
mov
mov
push
outs
dec
ja
sbb
pop
retf
mov
cmp
add
cmp
inc
or
jmp
lea
mov
call
dec
cmp
add
push
mov
mov
shl
mov
es
push
or
daa
pop
cmp
in
outs
ret
push
shl
out
dec
rcl
outs
pop
hlt
aaa
fsubr
out
mov
sbb
cmp
jb
cwde
call
xchg
adc
outs
fxch
dec
mov
mov
imul
xchg
pushf
jae
(bad)
loopne
jbe
mov
loopne
sub
das
popf
dec
movs
js
pushf
(bad)
push
ret
sbb
or
add
cli
mov
xor
(bad)
lahf
clc
mov
cmps
jb
(bad)
bound
adc
pop
xchg
stos
lds
and
cmps
cdq
jbe
push
mov
ds
mov
bound
sbb
(bad)
test
xor
mov
(bad)
icebp
mov
jns
imul
add
retf
inc
jbe
xor
cmp
mov
imul
pop
jae
inc
gs
test
add
loopne
sbb
out
jae
fld
sbb
cmp
xor
cmp
repnz
clc
push
(bad)
mov
mov
popa
mov
pop
bound
cwde
imul
pop
jmp
sbb
add
or
std
cmps
jae
ds
jne
jp
cmc
inc
repz
mov
shl
ins
aad
inc
push
div
sbb
jb
pusha
cmc
js
xchg
cmps
outs
add
xlat
xchg
pusha
pusha
jp
les
adc
sbb
jle
imul
sub
(bad)
iret
into
dec
ins
jg
mov
or
test
xchg
xchg
inc
sbb
stc
stos
add
scas
mov
sbb
retf
mov
xor
add
mov
cld
jge
push
adc
call
neg
js
mov
mov
fsub
xor
push
loopne
js
rcl
jae
sahf
xor
cmc
pop
movs
jmp
mov
sub
push
mov
and
xchg
lahf
sbb
cmc
jnp
jmp
(bad)
mov
and
adc
dec
sbb
mov
ins
cmps
jg
adc
adc
daa
out
(bad)
cmp
hlt
and
pop
mov
push
push
cmp
nop
and
push
or
mov
xor
push
or
push
inc
dec
outs
sub
sub
scas
shl
cmps
push
adc
add
bound
xchg
cmp
xor
jmp
push
jmp
adc
push
pop
cwde
inc
dec
bound
mov
and
push
cmp
sbb
or
dec
call
loop
out
add
add
adc
jo
not
pop
lahf
stc
push
outs
stos
movs
popf
ret
sub
sti
clc
call
lods
add
and
add
jge
sbb
dec
inc
jns
ja
mov
int
out
or
pop
push
cmp
std
jb
xchg
xlat
ret
test
scas
jnp
(bad)
and
(bad)
mov
les
outs
adc
jmp
in
inc
and
mov
icebp
mov
xchg
out
dec
xor
and
lock
xchg
lock
mov
xor
jmp
or
mov
mov
xchg
adc
and
mov
cmp
not
mov
leave
mov
push
cmp
xor
adc
jle
inc
test
daa
and
add
call
icebp
icebp
xchg
xchg
fisttp
adc
pop
out
push
push
lds
movs
sti
cmp
xchg
fistp
loope
mov
inc
jmp
dec
jl
or
push
(bad)
scas
int
ins
mov
outs
std
mov
pusha
(bad)
std
xchg
ret
mov
mov
aad
xor
jmp
test
cmp
ins
inc
xor
data16
add
mov
adc
out
test
push
pop
sbb
dec
jae
sub
loop
inc
clc
std
enter
cmp
lea
jb
mov
pushf
pop
pop
push
test
push
sbb
imul
add
inc
jge
push
cmp
jb
xchg
or
fsub
int3
imul
jl
inc
lds
fisttp
in
imul
jno
movs
es
mov
in
dec
push
jge
fldenv
push
mov
mov
jae
jmp
cmc
xchg
rol
push
mov
mov
lds
jae
sub
icebp
mov
add
aaa
sbb
stc
cmp
jmp
and
(bad)
stc
fisttp
(bad)
mov
adc
das
das
and
stos
(bad)
jne
dec
lds
push
cmp
and
pop
sub
jl
push
add
or
mov
retf
push
ja
stc
sub
pushf
inc
and
scas
aad
es
mov
xlat
gs
test
vrsqrtps
mov
in
jo
push
(bad)
rcr
test
shr
lock
js
sar
popf
inc
mov
adc
sub
push
into
lods
dec
sub
inc
mov
dec
das
push
inc
cmp
stc
xchg
mov
push
xor
mov
stc
cmp
retf
xchg
lahf
test
sub
loopne
cmp
test
and
cli
repz
add
and
jge
test
into
out
jl
popa
aas
sub
jl
push
cmp
or
inc
push
mov
cmp
int3
xlat
mov
aad
mov
cwde
popa
lods
fidivr
sbb
cmp
std
xor
std
mov
sbb
add
shl
(bad)
dec
add
xor
loopne
xor
popa
das
test
ja
xchg
cmp
ret
push
sbb
xchg
and
push
addr16
out
out
inc
jo
inc
push
test
jmp
cdq
mov
pop
push
mov
std
and
ins
stc
xor
retf
dec
sbb
mov
sbb
movs
loopne
ret
test
add
jne
mov
out
push
lahf
fsubr
cmc
cmp
adc
stos
dec
xor
call
pop
sub
push
adc
sub
hlt
repnz
cmp
inc
jge
cmp
mov
pop
sub
loopne
pop
outs
push
das
ins
jmp
into
adc
pop
int3
sub
pop
pop
(bad)
pop
jmp
sub
in
popa
shr
xchg
adc
add
sbb
div
repz
in
popa
dec
cmp
int
stos
repnz
in
outs
sub
mov
and
es
mov
sbb
stos
loopne
je
or
cmc
xchg
cld
mov
out
aas
out
inc
adc
xor
cdq
push
imul
leave
xchg
push
push
xor
loop
inc
ret
cmp
scas
cmp
repz
jmp
ret
adc
lahf
mov
and
adc
aam
(bad)
pop
loope
mul
mov
cmp
into
mov
jmp
fld
out
stc
jmp
ins
sub
add
adc
add
retf
mov
mov
mov
icebp
and
test
test
ds
movs
adc
add
pop
mov
mov
mov
enter
xchg
retf
nop
and
adc
sbb
inc
xor
les
push
xchg
push
adc
dec
int
(bad)
mov
ja
and
dec
cs
addr16
mov
mov
mov
mov
aas
sti
into
jl
pop
out
(bad)
daa
mov
int3
cmps
cmc
outs
fldenv
jno
loop
inc
movs
cmp
jb
pop
dec
xchg
sub
and
enter
out
xchg
adc
push
mov
or
dec
cmp
cmps
ret
jae
stc
ja
fwait
cvtdq2ps
icebp
sti
and
fnstsw
adc
addr16
ret
sub
xor
or
mov
in
dec
push
adc
add
and
psadbw
ret
dec
dec
xchg
push
(bad)
adc
int
adc
or
xor
push
push
jge
cmp
adc
popa
or
stos
sub
adc
lods
fdivr
ret
movs
jae
or
(bad)
popa
jecxz
cmp
mov
jnp
aas
scas
in
cs
dec
jo
inc
sbb
pop
pop
xchg
cdq
xlat
jg
pop
fnstenv
push
inc
and
repz
inc
into
inc
sub
(bad)
jge
call
pop
cmp
mov
mov
xor
addr16
mov
push
pop
mul
rcr
xor
sbb
ss
imul
jae
and
ret
cmc
imul
mov
inc
sti
enter
xchg
adc
jns
dec
outs
in
push
sub
mov
stos
add
dec
test
test
pop
stc
test
out
bound
scas
nop
imul
test
in
je
sub
test
pop
inc
or
(bad)
out
xchg
pop
jecxz
push
dec
imul
stc
dec
inc
imul
sub
int
xchg
inc
test
ins
or
xchg
jo
inc
dec
stos
xchg
push
retf
loopne
idiv
(bad)
test
push
out
jge
int3
adc
out
xchg
fldenv
loop
sub
ins
aas
xchg
cdq
aaa
or
sbb
push
popa
dec
mov
pop
and
xchg
adc
mov
jg
int
fsubr
shl
repnz
push
mov
adc
mov
lea
jmp
out
leave
(bad)
outs
jno
call
(bad)
in
or
jg
xlat
jg
fisttp
inc
sub
adc
dec
sub
pop
jae
or
sti
xchg
cmps
in
mov
or
bound
xor
iret
repnz
mov
out
call
mov
sub
inc
mul
mov
cmp
fs
mov
dec
cmp
(bad)
test
popa
xlat
aad
imul
aad
popa
jo
jno
and
fdivp
push
call
xchg
ret
sbb
loop
add
js
add
repnz
sbb
or
push
dec
jle
popa
(bad)
outs
aaa
jnp
sbb
(bad)
cmp
jg
xor
movs
je
daa
adc
mov
sbb
test
ss
sbb
push
out
xchg
mov
mov
push
jns
pop
(bad)
(bad)
shl
mov
push
cli
fs
sbb
pop
leave
sub
adc
sbb
inc
mul
xchg
rcr
mov
in
out
cmp
pop
xchg
xor
sbb
sti
das
out
stos
pusha
jg
rcl
and
mov
shl
jno
and
inc
sbb
push
loope
cli
lea
addr16
popf
imul
xchg
sbb
inc
mov
cmps
(bad)
shl
dec
push
push
enter
xchg
sbb
lods
stos
xchg
jae
lds
jae
nop
lods
(bad)
lods
push
in
daa
or
inc
shl
(bad)
loope
mov
sub
mov
jo
lea
dec
lock
rcl
jnp
jecxz
xchg
xchg
ins
int
popa
test
in
loope
dec
retf
add
fld
retf
retf
stos
sbb
sbb
adc
add
mov
lds
cmp
(bad)
or
adc
push
pop
mov
add
mov
lock
and
push
outs
mov
inc
in
rol
add
sub
std
arpl
xor
or
jp
sbb
jo
cli
mov
outs
jbe
cmp
mov
xor
dec
dec
sti
push
xor
cmp
test
pop
test
rcr
inc
out
and
retf
push
aad
mov
xchg
or
and
out
lods
fidiv
lock
gs
sub
xchg
cmp
jmp
push
mov
(bad)
push
imul
ror
call
and
les
xchg
dec
pop
ja
retf
pop
into
jnp
cld
inc
imul
imul
push
je
idiv
sub
mov
jae
inc
mov
and
mov
cmps
ret
ja
shl
fsubr
push
(bad)
call
mov
adc
push
push
sub
adc
xchg
mov
cmp
mov
imul
mov
ret
cmp
mov
lahf
ss
ins
out
ds
push
push
pop
xor
movs
inc
mov
mov
and
jge
cld
mov
sbb
enter
xchg
sbb
and
movs
mov
popf
fisttp
daa
add
test
ret
adc
outs
bound
push
iret
ins
jl
mov
xchg
push
clc
xchg
sbb
mov
pop
js
lods
fdivr
xor
mov
mov
les
cmp
mov
xchg
(bad)
bound
in
mov
sbb
push
outs
push
and
push
adc
dec
shl
into
and
repnz
js
fs
push
mov
sbb
lods
clc
add
jnp
in
or
and
inc
pusha
jno
cli
sub
ss
shr
shr
sbb
lea
cs
shl
mov
cwde
lock
aad
test
or
lahf
add
cmp
mov
sbb
es
xor
js
sbb
repnz
pop
mov
(bad)
and
popa
clc
sub
sti
aas
xchg
loopne
in
xor
mov
popa
test
mov
push
fisttp
xor
imul
adc
and
xchg
pusha
push
jo
sub
lock
inc
into
inc
fldenv
je
mov
xchg
std
lods
mov
add
and
(bad)
xchg
shl
in
adc
ret
jno
jo
and
xchg
mov
popf
mov
pusha
lds
aas
ror
lds
mov
popa
mov
adc
cmc
out
and
push
xor
shl
xor
call
fwait
repz
gs
sub
jmp
cmp
xor
pop
sar
jnp
pop
pop
sti
xor
mov
jmp
test
cdq
fsubr
pop
add
enter
jb
les
out
int
mov
je
or
lock
nop
mov
clc
in
leave
cmp
mov
in
js
mov
fmul
call
cmc
sub
mov
sbb
fwait
loopne
xchg
clc
mov
adc
int
or
iret
xor
push
and
inc
mov
cmc
cmp
mov
test
or
mov
xor
fstp
mov
(bad)
int3
rcr
inc
push
jp
mov
pop
cmp
cli
dec
aaa
or
jae
and
sub
jmp
and
loope
icebp
int
push
scas
retf
mov
mov
cmp
push
or
xor
xchg
push
cli
(bad)
aam
adc
ins
adc
cmps
lock
adc
jmp
xchg
mov
cli
sahf
scas
outs
inc
jge
and
cdq
cmps
cmp
cmp
inc
dec
and
in
dec
test
mov
inc
cmp
repz
sbb
xchg
ss
jg
addr16
xor
sbb
test
xchg
and
repnz
retf
jmp
sahf
popf
xchg
pop
out
iret
jmp
xchg
mov
test
mov
aas
ins
rcr
enter
push
inc
fnstcw
pop
fs
aaa
imul
test
dec
pop
(bad)
(bad)
mov
lea
(bad)
lods
rcl
push
mov
dec
or
sub
jge
sub
in
loope
mov
dec
inc
out
cmp
scas
stc
bound
sbb
mov
xlat
or
and
pop
(bad)
fstp
mov
jg
(bad)
add
pop
outs
dec
add
sub
adc
and
ja
push
xchg
shr
popf
out
das
fabs
mov
fsubr
pop
adc
cs
mov
lock
je
pusha
cmps
(bad)
pop
in
mov
xor
mov
inc
(bad)
push
mov
ds
mov
push
rcl
or
mov
jmp
into
xchg
sahf
nop
xchg
pop
add
add
sar
or
sbb
xor
out
loope
xlat
mov
xor
outs
std
jecxz
or
les
pop
pop
icebp
addr16
cmc
ss
mov
out
cmc
sbb
into
sbb
das
add
mov
fst
mov
ror
cmp
xchg
mov
sub
dec
cmc
movs
pop
dec
js
test
out
jle
inc
(bad)
out
mov
jne
sub
stc
retf
fld
mov
(bad)
mov
scas
cmp
mov
jb
push
popa
cmps
jno
jns
bound
stc
pop
nop
loope
push
shl
xor
out
ins
inc
lahf
pop
inc
mov
xor
aad
jmp
repz
stc
repnz
jo
dec
lock
stos
retf
es
inc
jnp
sub
mov
hlt
add
retf
icebp
push
jl
out
pushf
dec
popa
cmps
mov
dec
adc
add
add
mov
push
and
xchg
xchg
movs
shl
sbb
js
jo
mov
xor
aas
jg
je
mov
sbb
(bad)
jbe
sbb
(bad)
out
add
shl
(bad)
xchg
push
shl
jecxz
repnz
call
das
push
cmp
mov
ror
push
or
stos
movs
ror
dec
push
mov
out
(bad)
cld
scas
mov
movs
in
sub
cli
ds
test
call
js
pop
dec
data16
in
mov
hlt
dec
mov
adc
out
lea
sub
and
das
xchg
inc
nop
or
and
sbb
repz
xchg
out
fcmovbe
mov
ja
sub
out
add
imul
push
cmp
fwait
adc
cmp
fmul
outs
in
or
mov
xor
jg
xlat
out
outs
add
mov
pop
mov
sbb
repnz
scas
pop
dec
add
cmp
cmp
pushf
mov
in
popa
enter
std
jge
sbb
inc
inc
sub
jmp
fisttp
add
mov
dec
(bad)
jnp
aaa
cmp
push
or
jne
cmp
cs
cmp
enter
mov
cmp
outs
xchg
inc
inc
add
lock
mov
sbb
(bad)
mov
dec
jne
inc
movs
mov
fadd
pop
xchg
pop
cmps
or
shl
pop
(bad)
jle
dec
jmp
fadd
jle
pop
mov
arpl
call
xchg
mov
mov
cmp
fidiv
lock
cmps
mov
push
adc
test
pop
mov
cmp
push
push
out
sbb
sahf
pop
addr16
cdq
mov
sbb
rcr
or
aam
sar
mov
dec
rol
cli
test
daa
(bad)
js
add
movs
xlat
pushw
mov
push
imul
and
sub
int
sub
out
and
fcmovnb
push
jmp
mov
dec
lock
xchg
inc
mov
mov
cmps
inc
fcmovb
push
push
adc
adc
jmp
ret
(bad)
inc
mov
jbe
mov
cmp
mov
pop
pop
out
loopne
(bad)
and
cvtps2pd
and
push
pop
scas
icebp
mov
jo
(bad)
fsubr
mov
mov
les
mov
mov
xor
out
call
sahf
cmp
jp
stc
adc
mov
sub
ins
sti
xchg
cld
mov
dec
xchg
iret
xchg
or
mov
cli
push
ret
sbb
dec
mov
pop
rol
ss
cmps
mov
cwde
mov
scas
mov
pop
fwait
imul
outs
jl
push
int
out
mov
jg
sub
jecxz
jns
pop
dec
leave
repz
pop
(bad)
call
cmp
fldenv
(bad)
dec
xor
or
add
sbb
sub
nop
push
pop
mov
imul
mov
mov
mov
fs
jnp
ret
jg
adc
lods
pop
mov
aad
fdiv
push
push
fld
sub
pop
movs
xor
pop
mov
mov
popf
sub
mov
sbb
adc
out
push
sbb
mov
mov
mov
adc
adc
out
sti
cli
add
pop
dec
mov
movs
pop
pop
push
fcomp
test
jmp
pop
xor
xor
sub
xchg
xchg
inc
arpl
cli
mov
pop
push
push
xchg
sbb
mov
or
pushf
test
loopne
adc
xor
shr
push
mov
mov
cs
jo
dec
movs
xor
jno
inc
(bad)
or
push
fstp
push
(bad)
push
mov
or
pop
sti
fisub
pop
add
xchg
nop
add
lods
push
ret
or
jp
out
dec
js
xchg
push
xchg
mov
mov
enter
ret
add
loop
iret
mov
cmc
pop
cmp
ja
mov
sub
loop
repnz
sbb
or
mov
cmps
ds
mov
ds
nop
jmp
mov
enter
fcomi
mov
and
imul
xor
mov
dec
cmp
in
mov
clc
mov
add
sub
mov
out
scas
push
sbb
xchg
jmp
push
into
int
stc
jle
or
push
cmp
scas
cmp
rol
pop
cmp
shl
aam
pop
inc
mov
stc
add
or
push
sbb
test
mov
rol
ins
scas
dec
daa
push
cmps
mov
movlps
sar
xor
pop
jno
mov
pop
repnz
inc
cmp
jl
call
jne
cmp
mov
mov
jge
les
xchg
imul
sar
stos
sub
or
adc
xor
mov
je
add
pop
dec
push
mov
fcomp
das
ret
pop
ins
sbb
dec
cmp
mov
movs
sub
mov
inc
xchg
fst
push
sbb
dec
and
iret
mov
bound
in
mov
cmp
jecxz
jle
sbb
adc
mov
mov
daa
adc
stos
mov
ja
xchg
inc
call
retf
adc
inc
sub
jae
fsubr
jo
adc
xchg
rcl
lea
pop
repz
out
fs
xchg
cmc
pushf
clc
lds
or
fwait
pusha
add
dec
loope
cmp
movs
stos
push
lods
dec
les
arpl
cmp
or
ret
xchg
(bad)
loop
mov
cdq
pop
mov
mov
adc
test
retf
loopne
mov
dec
lods
xchg
in
stos
adc
test
ins
mov
pop
adc
hlt
imul
stos
xchg
pop
imul
sar
in
mov
clc
add
add
push
enter
fs
jmp
fistp
xor
test
scas
or
inc
les
dec
mov
add
jmp
add
les
out
ret
dec
retf
out
scas
mov
fidivr
fcomp
mov
jno
xchg
push
hlt
sub
inc
pusha
pop
sti
xchg
push
xchg
fldenv
fimul
cmp
call
sbb
lods
push
pop
or
cmps
icebp
xchg
inc
cld
mov
ret
outs
mov
(bad)
ins
adc
jae
adc
mov
inc
test
and
repz
or
cmc
mov
push
push
js
or
mov
das
pop
pop
push
stos
ins
addr16
iret
xor
repnz
mov
sti
test
scas
dec
nop
int3
iret
mov
es
(bad)
push
mov
push
inc
push
bound
mov
sbb
mov
retf
inc
gs
lock
xchg
(bad)
fisttp
test
mov
dec
out
mov
(bad)
sub
pcmpeqw
sbb
mov
push
adc
inc
mov
push
jne
pushf
xchg
pop
mov
lahf
sub
adc
and
(bad)
repz
jno
sbb
inc
retf
mov
inc
jge
vphaddbq
add
xlat
inc
pushaw
stos
das
fldenv
push
iret
push
leave
dec
sbb
cs
stc
(bad)
(bad)
fstp
in
pop
cld
inc
ficomp
popa
stos
sub
mov
sub
aad
sbb
inc
push
pop
mov
or
xchg
enter
jae
popa
dec
(bad)
ret
mov
sbb
call
dec
imul
xor
push
out
jno
jo
add
add
and
iret
jmp
or
inc
xor
xor
icebp
rol
sub
add
or
aam
fldenv
xchg
add
(bad)
(bad)
jb
retf
inc
sbb
mov
xchg
mov
arpl
mov
int
iret
loop
enter
jo
aad
popa
stos
mov
jp
and
shr
sub
xchg
push
imul
jl
jg
fs
hlt
push
sub
fwait
xchg
movs
mov
inc
loop
je
and
push
out
or
xchg
adc
aad
sub
lds
mov
inc
add
sbb
mov
outs
inc
popf
(bad)
into
mov
xor
ror
xor
sub
hlt
dec
inc
mov
pop
ja
loopne
ficomp
(bad)
test
push
cmp
gs
lock
adc
cmp
enter
call
ds
ins
retf
xchg
lods
mov
inc
js
sub
lahf
pop
mov
adc
cmps
inc
mov
idiv
pop
arpl
sti
add
cli
push
push
repz
sbb
inc
test
push
or
mov
out
jmp
mov
push
cmps
stc
cmp
sar
cmps
push
jnp
shl
push
pop
call
xor
addr16
jno
es
stos
outs
ret
stos
adc
add
test
jns
enter
push
mov
jmp
je
pop
cvttps2pi
outs
mov
ja
adc
xchg
fcomp
mov
xchg
push
fsubr
ss
test
sub
add
or
popa
inc
cmp
mov
jne
push
push
push
dec
mov
and
jecxz
outs
adc
add
cmps
ds
xor
xchg
shr
pop
mov
(bad)
std
loopne
data16
cwde
pop
mov
pop
daa
mov
xchg
pushf
je
inc
xor
in
pop
not
lock
fwait
aaa
push
fcom
iret
int3
call
add
jno
iret
out
push
dec
push
mov
cmp
scas
loopne
dec
int3
out
or
sbb
sbb
das
sti
sub
(bad)
fild
cdq
pop
popf
lahf
jge
jle
or
xchg
dec
or
addr16
sbb
cmp
push
ins
xlat
xchg
out
pop
inc
xchg
lods
dec
xor
inc
je
push
push
rcr
mov
mov
ds
je
mov
lahf
push
(bad)
mov
cdq
je
into
xchg
fwait
dec
fisubr
in
sub
sbb
shr
xor
and
test
mov
jecxz
mov
ins
stc
fdivr
dec
cmp
call
push
or
inc
nop
addr16
xor
js
or
pop
mov
add
es
ins
mov
jl
push
stos
xchg
and
popa
mov
test
aam
fcomi
or
loope
mov
stc
mov
xor
and
mov
aad
adc
mov
and
movs
mov
sbb
nop
mov
loop
xor
ret
fisttp
mov
mov
xchg
jp
mov
mov
(bad)
imul
inc
shr
xchg
cmp
mov
mov
aad
outs
adc
or
and
adc
clc
outs
sbb
leave
cli
xchg
ja
mov
add
or
sbb
int
mov
fadd
loop
add
addr16
mov
or
push
stos
retf
mov
je
pop
add
mov
mov
pop
or
fst
arpl
mov
mov
add
fcomip
inc
ins
and
fidiv
or
inc
jnp
repnz
jecxz
push
(bad)
lods
addr16
dec
mov
(bad)
mov
xor
shl
dec
dec
push
(bad)
adc
cmps
neg
xchg
mov
retf
mov
add
dec
(bad)
icebp
cmc
sbb
mov
pushf
lods
in
xchg
cmp
sbb
out
test
or
repz
test
and
xchg
jge
sub
imul
mov
pop
inc
adc
sti
mov
test
mov
daa
sub
(bad)
inc
adc
push
sbb
call
ds
or
out
pop
dec
xchg
jmp
push
cli
nop
dec
(bad)
push
push
pop
jp
test
icebp
addr16
push
cmc
xchg
mov
cmp
xor
dec
pop
jb
xor
outs
loop
fld
add
lock
or
mov
mov
pop
sub
hlt
xchg
imul
pop
fist
call
xor
je
cmp
and
mov
pop
push
hlt
and
dec
mov
loop
jle
shl
cmp
add
sahf
lds
jge
push
aaa
test
(bad)
imul
fidiv
(bad)
fist
push
pop
push
(bad)
mov
in
fld
adc
mov
lods
adc
lahf
cmp
adc
xchg
or
test
jle
cwde
push
mov
mov
cmp
xchg
push
aas
js
and
gs
aas
aas
test
jmp
cs
mov
jbe
pushf
repnz
sub
push
mov
mov
adc
dec
mov
mov
ins
leave
popa
add
jmp
pop
inc
mov
mov
bound
int
adc
pop
aas
sub
std
cmp
fwait
jae
pop
rcr
pop
fistp
fidivr
je
mov
inc
sar
inc
sub
mov
jne
lock
or
mov
div
fwait
(bad)
jmp
push
loopne
xlat
je
dec
shl
xchg
jo
ds
data16
push
fstp
fidivr
jno
fistp
icebp
push
mov
push
ds
fidiv
scas
jo
fwait
mov
ds
repz
sbb
out
(bad)
and
pop
xchg
xchg
or
shl
das
js
jnp
push
loope
popa
dec
movs
sub
mov
jmp
fadd
pop
inc
(bad)
mov
in
inc
mov
outs
mov
mov
pop
mov
xor
iret
and
and
sbb
mov
jno
mov
dec
add
push
dec
fmul
mov
pusha
fwait
sub
sub
jl
xchg
dec
mov
sbb
jmp
push
sahf
push
add
mov
sub
fsub
sub
(bad)
gs
or
rcl
bnd
xor
fnstenv
fisttp
cli
rol
arpl
mov
call
add
lds
sub
test
push
xor
xchg
adc
and
imul
push
sub
sbb
std
ret
aam
enter
mov
lock
cmp
ret
ja
pop
movs
cmp
sahf
in
test
jnp
mov
pop
xor
mov
mov
pop
dec
sbb
call
aaa
scas
mov
xchg
inc
inc
or
pop
and
mov
jnp
cld
or
mov
or
dec
dec
pop
push
inc
lea
add
dec
mov
mov
aas
adc
call
push
jp
das
pop
fsubrp
sbb
shr
aad
pop
dec
push
shl
dec
mov
jge
bound
mov
xor
icebp
retf
sub
sub
sbb
sbb
mov
data16
ins
fld
shl
shl
mov
or
mov
(bad)
(bad)
mov
mov
cmps
mov
push
inc
pop
(bad)
and
and
into
sbb
jmp
int
adc
xchg
retf
pusha
arpl
cmp
xor
inc
ins
ins
xor
nop
loopne
mov
add
mov
aad
sub
lods
dec
sub
ins
jnp
inc
or
adc
cmp
xlat
bound
xchg
in
test
dec
int
mov
out
mov
sub
pushf
adc
push
mov
(bad)
shl
inc
stc
ret
call
movs
pop
sub
cld
sahf
pushf
push
call
pop
shl
fdiv
loop
fisttp
js
xchg
data16
cmp
cdq
mov
mov
out
mov
jge
adc
das
sti
call
push
loope
nop
mov
lock
mov
mov
adc
push
and
retf
pop
retf
push
sbb
mov
and
dec
push
cs
in
(bad)
adc
test
fwait
gs
push
pop
jecxz
mov
clc
push
push
pop
cmp
mov
pop
pop
in
xchg
pop
inc
sub
add
push
fucom
mov
ror
je
imul
mov
inc
push
jae
mov
pop
sub
cmp
popa
(bad)
repz
arpl
sbb
scas
or
push
or
cld
call
das
pop
mov
dec
cmp
js
cdq
push
xchg
(bad)
rol
push
xor
push
add
test
sub
cmp
xchg
sub
pop
retf
addr16
loop
mov
xchg
popa
(bad)
stos
pushf
and
ret
movs
es
mov
cwde
and
int
inc
push
outs
mov
into
call
cdq
mov
push
cmp
pop
push
jo
xchg
xor
adc
movs
(bad)
pop
mov
and
call
stos
xchg
pop
push
dec
sti
aaa
shl
cwde
xor
outs
add
cdq
enter
jo
xchg
push
push
jns
je
dec
out
xor
sub
mov
jmp
loopne
xor
fdiv
retf
pop
jnp
clc
xchg
neg
sub
push
xchg
int3
sbb
inc
jmp
mov
add
mul
jmp
xchg
xchg
rcr
mov
out
cmp
sbb
ja
xchg
es
nop
test
xchg
lods
aaa
sbb
sbb
cmp
sahf
pushf
cmp
cmps
pop
jo
push
(bad)
lea
push
jns
or
cwde
and
xchg
aad
(bad)
inc
shl
push
or
ss
adc
lahf
mov
sbb
mov
pop
jle
test
pop
pushf
(bad)
addr16
retf
loop
jp
sbb
cmps
and
(bad)
pop
div
push
test
mov
sbb
xchg
cmp
pop
push
out
in
(bad)
out
rcl
stos
repnz
or
add
push
sub
xchg
repz
jecxz
jb
(bad)
adc
mov
mov
xchg
dec
sbb
ds
xor
shl
(bad)
mov
mov
cmp
add
daa
push
jno
and
mov
cld
scas
push
add
inc
bound
call
mov
jb
mov
int
movs
aad
mov
cmp
mov
in
and
sti
pop
sar
push
xor
ds
in
inc
sub
jl
cdq
sub
imul
mov
nop
adc
and
pop
push
push
in
(bad)
mov
sti
add
loope
ja
pop
clc
in
inc
mov
imul
jo
ja
inc
movs
adc
loop
mov
push
ds
xchg
imul
sbb
mov
inc
loopne
aad
daa
fst
jecxz
dec
fdivrp
fmul
add
mov
ret
or
je
xchg
ins
adc
test
movs
nop
xchg
xchg
mov
ret
cmp
punpcklwd
mov
(bad)
dec
mov
or
scas
pop
jnp
pop
push
(bad)
fnsave
xlat
sbb
pop
out
int
je
fnstcw
push
jne
scas
adc
cmps
push
pop
repnz
inc
stos
stc
stos
sub
xchg
test
int3
adc
mov
adc
add
in
dec
or
lock
add
dec
dec
ds
mov
mov
mov
scas
lock
in
int
loop
adc
out
jp
ins
in
enter
cld
cdq
outs
repz
repnz
hlt
dec
jno
out
adc
jp
sar
scas
ins
and
add
mov
sti
retfw
cmp
retf
inc
lds
pop
cmp
add
cmps
ds
(bad)
sbb
adc
pop
jns
and
nop
mov
nop
jmp
sub
jae
lods
iret
(bad)
jmp
test
das
cmp
ror
sub
repnz
mov
out
push
aas
pop
pop
jb
fst
jo
call
aad
shl
cmp
stos
(bad)
(bad)
sub
fisub
(bad)
sub
rcl
lods
mov
iret
lea
pop
push
push
in
cmps
mov
test
push
mov
inc
or
(bad)
fwait
xor
popa
mov
jae
test
cmp
sbb
or
push
sub
shl
xor
fsub
add
pop
fcmovnb
inc
push
cli
daa
fadd
ins
out
push
mov
dec
test
fsubr
jae
mov
mov
mov
popf
inc
gs
pop
ficomp
or
outs
leave
xchg
iret
call
sbb
rcr
(bad)
icebp
je
add
push
scas
and
pop
cmp
sub
out
inc
icebp
lock
inc
xor
es
out
sbb
push
pusha
sub
and
test
imul
out
fist
pop
or
test
popa
push
or
aaa
ror
xchg
mov
mov
arpl
jle
xchg
push
cld
mov
data16
fimul
mov
aas
xchg
adc
in
mov
scas
paddsw
fstp
jle
in
xor
fnstsw
loop
jb
fcmovnu
adc
sub
out
(bad)
pop
sub
sbb
hlt
push
jno
outs
sub
push
mov
(bad)
mov
mov
mov
mov
cli
push
loopne
push
jl
and
retf
adc
stos
sub
imul
ja
cld
test
and
adc
and
or
cmp
(bad)
iret
inc
mov
xchg
mov
inc
xor
clc
push
cmc
xbegin
jecxz
into
mov
mov
loopne
in
mov
xor
cli
ja
sahf
dec
scas
xchg
jmp
pusha
adc
lods
xlat
pop
ins
cdq
or
clc
aam
xor
daa
test
imul
in
(bad)
push
xor
lods
hlt
or
mov
xchg
inc
push
pop
aas
imul
sbb
mov
(bad)
mov
into
sub
pop
xor
xor
ins
scas
xchg
outs
test
jmp
push
jmp
push
out
jne
nop
and
shl
fild
seta
stos
inc
adc
sbb
push
mov
call
or
out
leave
enter
pop
push
in
cmps
dec
cli
sbb
dec
test
jmp
out
jb
mov
xor
xchg
and
test
pop
(bad)
cmp
adc
add
mov
mov
(bad)
push
int3
jno
stc
call
cmps
and
jb
push
jg
inc
mov
adc
(bad)
sti
adc
es
cmp
lds
in
jae
cmc
in
xor
popf
lea
shl
fwait
jecxz
mov
jae
repz
in
imul
adc
test
adc
(bad)
mov
xchg
pop
(bad)
push
pop
mov
push
jo
into
ret
sbb
mov
(bad)
and
sahf
pop
dec
in
mov
dec
cld
fisub
mov
push
cld
pop
das
cmp
pusha
add
aaa
call
push
dec
addr16
fcomi
out
out
add
xchg
jle
inc
(bad)
mov
scas
sbb
jno
int3
popf
add
jl
cdq
xchg
adc
jge
jb
shl
cmp
test
scas
jno
es
lods
xchg
mov
inc
bound
inc
ret
repz
xor
xchg
ins
outs
or
jecxz
mov
xchg
or
mov
lahf
xor
add
push
into
xchg
xor
pop
fsubr
repz
lds
fisub
aaa
call
mov
mov
jge
cmc
not
(bad)
movs
and
aas
lea
mov
sub
popf
sbb
(bad)
stos
add
adc
cmps
adc
xchg
add
jbe
retf
call
lods
gs
shl
or
fisubr
xchg
cmps
(bad)
outs
cmp
ret
ins
mov
add
in
inc
call
xlat
mov
cdq
js
cld
into
xchg
mov
mov
and
lods
scas
adc
in
(bad)
xchg
fwait
dec
movs
ins
cs
bnd
clc
xor
div
xchg
movs
mov
adc
inc
loopne
imul
cmp
cmp
mov
sub
in
add
add
pop
(bad)
or
or
aam
adc
lds
pop
xor
add
nop
or
xchg
rol
dec
pushf
xor
rol
popf
loope
mov
jge
(bad)
arpl
dec
push
push
push
mov
fst
push
mov
mov
push
mov
sub
ja
les
mov
adc
imul
into
dec
test
out
scas
inc
cwde
xchg
dec
ss
ds
sbb
shl
sbb
add
push
icebp
cld
dec
cs
or
cmp
sub
push
ins
mov
(bad)
leave
xchg
or
sbb
pop
cs
mov
hlt
jo
pop
lods
(bad)
fist
push
fild
mov
mov
mov
(bad)
aad
out
out
add
xor
fwait
repz
mov
xchg
sub
test
enter
mov
push
mov
or
aas
es
out
pop
xchg
sahf
jb
outs
(bad)
lods
jne
ss
sub
loop
or
mov
sub
adc
dec
lods
jo
dec
mov
mov
es
xchg
mov
and
dec
sub
add
mov
test
cmp
pop
xchg
into
sahf
popa
push
ret
loop
pop
mov
xchg
loopne
repz
adc
pop
cmp
mov
(bad)
movs
(bad)
pop
mov
mov
sub
xlat
sub
cld
sbb
mov
add
(bad)
daa
out
movs
add
mov
cmp
lea
aaa
xchg
xchg
mov
movs
dec
pop
das
push
sti
pop
mov
cmp
rol
enter
ficom
push
fs
je
loop
(bad)
add
mov
sub
mov
jb
stos
inc
mov
push
adc
loopne
mov
add
dec
jbe
mov
in
shr
push
fsub
mov
test
cmp
scas
xor
in
test
fcomp
inc
push
retf
cmc
inc
mov
test
loope
dec
(bad)
pop
adc
xchg
mov
inc
rol
sub
add
mov
cmps
aas
cli
jp
and
lock
fmul
mov
xor
cmp
xlat
dec
cmp
push
cmp
adc
aaa
add
or
in
mov
jbe
mov
vpor
mov
(bad)
lahf
inc
push
rcl
popf
pop
push
add
in
cmc
dec
or
lea
pop
out
mov
leave
add
leave
adc
aam
stc
mov
cmp
mov
out
cld
aam
adc
call
out
xor
and
js
mov
mov
push
mov
test
mov
sub
mov
xor
adc
sub
xchg
adc
sub
sti
test
shl
cmp
(bad)
adc
inc
dec
or
xchg
lds
jle
mov
cmp
sub
lea
dec
push
mov
pop
retf
add
or
dec
arpl
loopne
add
mov
imul
leave
pushf
xor
cld
add
xlat
sub
xor
sub
aas
push
ja
and
pop
mov
mov
imul
inc
ins
or
enter
fs
cli
xchg
mov
pop
and
int3
xchg
std
retf
lds
retf
bound
jbe
xchg
(bad)
cmp
jb
mov
and
mov
stc
mov
inc
rcl
mov
lahf
loop
push
and
adc
imul
into
pusha
fstp
cmp
or
dec
or
and
or
out
inc
or
stos
dec
jno
outs
sahf
rcl
jns
pop
xchg
lahf
add
mov
lods
scas
mov
mov
mov
mov
ret
aad
in
push
ins
cwde
cmc
les
or
pop
push
adc
test
popa
shl
adc
clc
sbb
push
cmp
add
jl
pop
loope
jbe
xlat
jnp
jne
and
sbb
in
mov
hlt
mov
dec
retf
stc
xchg
sbb
mov
xor
push
pop
mov
and
daa
push
sahf
inc
ds
push
cmp
jmp
mov
cmp
add
cmc
leave
pusha
addr16
cmp
jne
addr16
fisubr
jmp
sub
in
sahf
mov
lock
mov
stos
aam
jno
nop
aam
movs
(bad)
pop
je
aam
jg
xchg
lea
sbb
sbb
dec
loop
xlat
pusha
out
(bad)
pop
scas
rcl
jp
lahf
pop
imul
sbb
scas
jle
mov
imul
cmp
stos
test
out
in
inc
or
pop
iret
shr
imul
xor
les
mov
ins
pushf
mov
mov
mov
mov
jmp
fstp
inc
cmps
push
lock
nop
in
ret
mov
out
repz
arpl
into
mov
leave
jns
and
(bad)
jp
outs
inc
jmp
(bad)
fbld
cld
pusha
popf
push
addr16
cwde
popf
ds
sbb
out
pop
int3
int3
sti
pop
sub
retf
pop
pop
and
jmp
or
sub
rol
push
xor
(bad)
call
push
js
push
add
and
adc
loop
ss
xchg
test
or
loope
xchg
or
nop
icebp
std
xchg
(bad)
push
jge
mov
xchg
cli
push
es
call
inc
dec
mov
inc
xlat
mov
mov
xchg
mov
mov
push
push
sbb
imul
and
ret
xchg
push
or
retf
push
cmp
and
dec
dec
add
movs
pop
(bad)
mov
outs
hlt
mov
push
push
adc
mov
xor
push
ret
or
rcl
mov
stc
call
sbb
push
add
xchg
jbe
mov
xor
sub
daa
cmp
(bad)
xchg
jnp
inc
inc
pusha
mov
and
push
cli
sbb
sahf
cld
scas
ss
scas
xor
mov
nop
push
adc
lahf
xchg
jo
xor
(bad)
ja
data16
(bad)
ror
lock
jne
sub
mov
lahf
mov
add
ret
dec
add
(bad)
(bad)
fxch
cmp
push
fst
jae
cmp
scas
xor
mov
sbb
leave
push
test
mov
dec
test
cmps
mov
in
adc
mov
movs
pop
push
xchg
fs
(bad)
push
xchg
(bad)
das
and
lods
std
test
or
cmps
sahf
repz
jge
addr16
push
cmps
(bad)
fdivrp
xor
fdivrp
jg
fcmovbe
pop
dec
add
stc
pop
shl
out
ins
shl
test
(bad)
jnp
cmp
mov
mov
jg
mov
push
add
push
lds
xor
shr
inc
inc
fisttp
push
xchg
xchg
pusha
nop
icebp
mov
and
xor
outs
pop
jp
rcl
fwait
mov
lea
pop
aas
ror
fst
push
mov
xor
imul
cmp
scas
iret
xchg
inc
xchg
push
inc
cmps
mov
cmps
dec
(bad)
cmc
sbb
sub
rcl
in
mov
hlt
mov
(bad)
sbb
jmp
cwde
cld
sbb
(bad)
fs
cmps
loope
push
ja
adc
push
push
mov
jle
enter
div
pop
lods
inc
mov
fwait
in
mov
int
sub
out
push
and
jecxz
push
out
inc
pop
out
stc
adc
mov
inc
jecxz
jno
or
push
pop
pushf
cmc
les
inc
push
jmp
jg
retf
jnp
inc
cmc
stos
mov
sbb
ds
shr
dec
fdiv
mov
arpl
jecxz
(bad)
fadd
xchg
pop
cdq
stos
adc
(bad)
mov
into
jbe
push
clc
adc
push
sar
push
gs
cmp
xchg
inc
lods
mov
sbb
loope
push
jp
rcl
cwde
out
sub
test
cs
hlt
inc
add
and
xchg
xor
or
scas
adc
cwde
push
imul
out
ins
imul
push
dec
sbb
icebp
and
(bad)
mov
sbb
or
add
pop
into
sub
cmp
and
mov
int
popf
pop
xor
ja
out
mov
cmp
pop
adc
jae
mov
(bad)
jmp
sub
rdtsc
mov
adc
out
dec
push
iret
and
pusha
xchg
movs
cli
dec
xor
sbb
jae
in
add
jge
leave
jmp
and
push
mov
push
cmp
cmc
outs
jmp
push
gs
mov
call
sbb
jle
dec
hlt
jb
rcl
push
jo
mov
das
cli
shl
call
push
ret
mov
iret
mov
mov
sub
stos
pop
aaa
cmps
mov
cmp
aaa
nop
repz
mov
in
xchg
pushf
xor
inc
nop
mov
out
fwait
mov
fadd
(bad)
popf
not
push
push
and
fldenv
sbb
lock
inc
(bad)
lea
nop
jmp
dec
scas
mov
mov
jl
cwde
add
or
adc
or
pop
xor
and
std
mov
xchg
or
(bad)
gs
mov
jl
cmp
push
mov
xor
test
and
push
in
dec
xor
inc
and
add
clc
cmc
xlat
test
in
push
clc
addr16
loope
cmc
pop
sbb
dec
push
push
mov
jno
iret
mov
mov
int
xor
mov
mov
adc
aaa
xchg
mov
fucomip
inc
sahf
ror
xchg
mov
sub
jne
pop
pop
loop
icebp
stc
ficom
xlat
mov
aas
repz
js
out
les
icebp
in
sahf
dec
sqrtps
jp
hlt
xor
mov
in
addr16
mov
cmp
jmp
push
inc
icebp
xchg
jecxz
dec
out
pushf
cmp
xchg
stos
in
fimul
icebp
mov
sub
int
mov
mov
xchg
pop
xor
ror
xor
enter
push
sti
iret
inc
popf
add
test
call
add
and
add
jmp
loope
xchg
adc
push
ret
aaa
retf
(bad)
mov
and
inc
jge
inc
je
imul
cmp
clc
xor
mov
pop
pop
pop
mov
dec
xor
mov
add
icebp
(bad)
and
mov
mov
jl
stos
xchg
sub
or
pop
scas
out
push
jmp
mov
loopne
dec
cli
lods
outs
repz
aas
mov
les
test
dec
ins
mov
mov
mov
(bad)
mov
push
xchg
int3
mov
push
xor
mov
iret
jge
scas
cmp
pop
call
test
mov
xchg
mov
mov
xor
inc
popf
das
adc
stc
jmp
add
out
pop
js
test
into
jb
sub
cmp
push
jae
cld
add
movs
push
dec
or
adc
rcr
mov
mov
in
push
sub
nop
ja
sub
aaa
sbb
cdq
rcr
sar
push
in
pop
adc
pop
dec
pop
mov
push
neg
movs
outs
inc
mov
pop
sub
cli
push
mov
sub
repnz
ds
pop
cld
cmp
cdq
ins
adc
cld
lock
ret
sub
push
push
push
add
popa
jmp
jecxz
inc
cmps
call
outs
xor
enter
call
cdq
dec
faddp
out
inc
call
movs
xor
hlt
fs
inc
mov
add
fnstenv
clc
or
or
ficom
adc
jb
js
bound
push
dec
jge
push
cmp
dec
popa
jnp
lds
mov
fwait
add
adc
push
scas
or
and
xchg
mov
vmread
call
xor
pop
bswap
jnp
bound
popf
or
fistp
jp
lds
sub
pop
div
mov
jno
cmp
daa
cs
aas
xchg
cdq
lea
dec
xor
jnp
lods
sbb
mov
pop
inc
in
(bad)
outs
push
dec
push
mov
(bad)
mov
and
mov
jo
pop
les
bound
inc
into
push
push
or
push
stc
push
(bad)
jb
outs
pop
mov
mov
stos
shr
jbe
mov
pop
nop
xor
pop
mov
jmp
sbb
and
xor
stos
retf
push
aaa
sahf
cs
ins
bound
mov
mov
mov
call
in
pop
push
xor
mov
std
sub
add
pop
mov
sub
loopne
ins
and
pop
and
call
or
shr
test
aam
pop
gs
sysexit
cli
or
fsub
add
or
lea
xchg
mov
lds
mov
mov
in
and
adc
enter
mov
xor
push
sub
ja
out
iret
loopne
adc
rol
push
or
push
mov
icebp
jl
icebp
adc
imul
hlt
pop
jne
mov
cs
sti
jmp
aas
repnz
(bad)
cmp
pop
outs
mov
in
outs
xlat
jmp
sub
xor
and
push
mov
daa
inc
mov
pop
adc
pop
sub
mov
mov
iret
mov
mov
rcl
loope
in
push
shl
repnz
movs
jo
lahf
retf
(bad)
jle
inc
repz
fdiv
inc
mov
sbb
in
das
push
(bad)
daa
cmp
push
ror
mov
or
jmp
sbb
scas
cmp
cmp
test
push
arpl
(bad)
sbb
adc
sbb
inc
iret
cmp
nop
in
ins
mov
ret
daa
push
out
loopne
icebp
rol
mov
rol
or
mov
pop
mov
cmp
cmps
outs
sahf
mov
data16
faddp
xor
sbb
ds
movs
je
pop
pop
cmps
cmps
pop
repz
dec
mov
sbb
cmps
mov
test
inc
in
lds
xchg
cmp
jmp
mov
repz
jmp
test
es
scas
pop
test
jecxz
(bad)
lahf
adc
out
pop
fwait
aad
popf
pushf
lea
std
mov
outs
jo
xchg
cmp
rcr
cmp
jb
shl
int3
outs
inc
data16
xchg
dec
in
add
pop
adc
lock
fsub
mov
nop
aam
pusha
call
mov
dec
lahf
lods
adc
mov
rcr
test
test
test
dec
daa
mov
adc
les
push
inc
hlt
jmp
(bad)
xor
add
mov
push
jne
pop
push
outs
(bad)
jmp
sti
xlat
xchg
inc
fisub
gs
pop
int3
mov
scas
cmp
jmp
adc
aam
es
mov
cmp
cmps
and
inc
inc
mov
movs
psubw
xchg
jnp
mov
lock
int3
jo
mov
out
mov
lds
retf
cmp
ins
lods
dec
sub
jp
cld
retf
add
pop
test
aas
inc
dec
sahf
out
nop
rol
mov
sub
pop
mov
fwait
rcl
aad
or
mov
mov
int3
xor
dec
(bad)
std
xchg
fst
pop
shl
cmp
dec
pop
cmps
sub
int3
add
push
ret
jmp
push
lock
pushf
cmps
cmp
sbb
pushf
(bad)
mov
push
pop
pop
loope
xchg
out
cmps
in
xchg
mov
repnz
xor
jnp
cmp
(bad)
aaa
ins
(bad)
pop
dec
mov
lock
in
je
movs
cmp
out
int3
enter
jcxz
loope
dec
stc
mov
jge
mov
pop
rcl
cmp
inc
dec
(bad)
push
xchg
lds
cdq
mov
fild
mov
enter
rcr
jne
jmp
sbb
mov
bound
mov
or
test
loopne
ins
hlt
loopne
and
adc
rol
pop
and
inc
fdivr
nop
pop
ror
icebp
sbb
popf
sbb
xor
mov
jl
cs
popf
mov
jge
push
cmp
test
pop
xor
mov
int3
push
nop
inc
fiadd
call
ins
or
jle
test
jbe
hlt
cmp
mov
aad
imul
pop
push
sahf
push
sbb
xchg
and
movs
pop
cmp
inc
ds
add
dec
out
add
jbe
cmp
pop
cmp
adc
push
sbb
call
cmp
sbb
pop
jg
cmp
pop
nop
int3
mov
sub
loopne
outs
mov
(bad)
rol
scas
mov
push
mov
cmp
sub
neg
test
or
jp
jae
(bad)
fcmovnb
mov
sbb
sbb
xor
mov
cld
pop
ret
retf
mov
jl
aas
xor
loopne
xchg
mov
test
cmc
loop
cmps
add
fs
stos
mov
stos
sub
adc
inc
jae
jns
mov
push
stos
adc
pop
in
mov
mov
popf
cmp
cdq
movs
xchg
xor
add
mov
aad
xor
dec
outs
jns
xchg
daa
mov
ja
and
sub
cdq
adc
mov
test
adc
js
xchg
push
mov
fnstcw
call
std
dec
mov
popf
ins
dec
call
mov
in
jbe
movs
push
push
add
aad
jo
mov
cmc
cmps
in
and
js
adc
sub
lock
pop
adc
sbb
lahf
retf
pushf
rcl
cs
leave
pop
adc
dec
jl
mov
xchg
cmp
and
add
sbb
jmp
xchg
jmp
movs
inc
mov
imul
push
xchg
in
sbb
mov
enter
add
xchg
xchg
fcmovnbe
(bad)
cmps
call
pop
inc
pop
xchg
repz
cmps
arpl
popf
xor
jge
(bad)
mov
sar
adc
dec
dec
xor
aam
stos
int3
fcom
mov
push
mov
or
jno
inc
lds
lahf
push
scas
std
test
daa
cdq
pop
jae
push
dec
inc
stos
mov
pop
adc
adc
and
mov
ss
rol
std
sub
cmp
jae
xchg
retf
or
sbb
fst
scas
inc
lods
jle
inc
fs
jecxz
mov
retf
xor
icebp
mov
jl
aaa
push
int
ror
loop
and
loopne
scas
ds
pop
mov
gs
(bad)
xchg
jno
aam
inc
cmps
push
jb
mov
sub
imul
cdq
sub
cs
push
and
mov
clc
pop
adc
pusha
adc
aad
imul
gs
push
pop
in
inc
into
mov
mov
mov
dec
(bad)
and
mov
lea
push
mov
or
repz
loop
mov
lea
sbb
xchg
xchg
and
popa
cmp
out
out
je
jo
cmp
mov
ficomp
ret
dec
div
stos
or
inc
cmp
in
clc
pop
mov
add
out
cmp
adc
ret
int3
push
hlt
in
xor
leave
mov
xchg
adc
mov
arpl
or
das
add
mov
adc
mov
mov
leave
jae
xor
(bad)
and
adc
sbb
icebp
sbb
iret
cmp
shr
test
mov
int3
mov
(bad)
or
ins
aad
fist
clc
or
jcxz
cmp
xchg
lock
imul
xor
or
retf
xor
(bad)
jno
stc
out
loopne
sub
jmp
outs
sub
mov
mov
mov
rol
aam
push
mov
jae
mov
mov
push
popf
stos
pop
leave
cmc
inc
ins
cmps
or
cmp
movs
add
inc
cdq
ss
sbb
xchg
scas
sti
enter
cmp
mov
cmp
cwde
push
lods
mov
sbb
enter
push
jb
popf
cmovge
in
add
cli
and
pop
aas
jmp
dec
adc
lods
lea
iret
push
add
adc
ins
mov
inc
jmp
addr16
cmp
ins
push
mov
or
mov
mov
out
clc
push
push
mov
and
imul
xor
aad
jbe
mov
mov
out
ss
outs
sbb
mov
and
cwde
cmp
xchg
add
int
xor
ja
mov
(bad)
mov
outs
jb
dec
div
cmps
fmul
shl
ss
pop
ret
push
nop
clc
imul
and
movs
pushf
inc
mov
push
(bad)
stc
push
sub
jmp
pop
sar
cmps
fimul
in
add
inc
(bad)
mov
test
nop
mov
loopne
fdivr
mov
icebp
add
nop
test
inc
retf
aaa
scas
pop
mov
outs
mov
mov
int
repnz
test
pop
mov
mov
ins
pop
inc
aad
stc
fimul
sbb
inc
(bad)
xchg
(bad)
sub
rcr
mov
cmps
outs
xchg
retf
cwde
sub
scas
and
scas
int
mov
fs
outs
push
mov
mov
icebp
mov
pop
pop
push
mov
xchg
or
dec
popa
push
pushf
dec
hlt
icebp
cli
inc
(bad)
out
add
movs
sbb
out
std
sbb
pop
aad
mov
cmp
cmp
inc
mov
xor
pop
or
adc
dec
and
cwde
into
sti
xchg
cli
daa
or
iret
mov
jb
popa
mov
adc
lock
and
mov
pop
and
icebp
sub
push
aad
mov
ret
mov
rcl
jbe
dec
lock
mov
pop
push
sar
dec
sbb
fmul
or
xchg
call
mov
frstor
inc
pushf
lock
aaa
icebp
inc
pop
pop
ficom
(bad)
jp
jge
int3
pop
push
or
push
pop
fisub
inc
jmp
dec
jle
mov
sub
or
pop
inc
or
mov
mov
jb
jge
mov
push
and
jecxz
jbe
jnp
iret
mov
sahf
mov
loop
imul
loop
lods
mov
or
xchg
rcl
jne
ins
mov
add
xchg
sbb
les
test
dec
add
or
ds
int3
pop
test
imul
jmp
sub
cli
shld
loope
jo
or
xchg
movs
movs
ja
leave
xor
mov
out
xlat
cmps
sbb
daa
out
mov
mov
push
sub
mov
(bad)
mov
mov
out
mov
cmp
push
mov
adc
mov
cmps
(bad)
xor
xor
dec
jecxz
dec
dec
dec
inc
idiv
fidiv
mov
cmp
retf
repz
push
out
xor
xchg
pop
jmp
mov
jmp
inc
data16
sub
outs
sub
and
fld
add
cmp
jmp
lods
mov
lahf
dec
into
iret
fld
pusha
push
iret
call
shr
xchg
mov
dec
clc
sub
push
jmp
shl
repnz
iret
cmp
pop
(bad)
divps
pop
test
daa
aaa
scas
pusha
(bad)
jg
mov
pushf
xchg
xor
cs
fbld
add
mov
inc
and
das
or
add
mov
es
mov
sbb
cmp
push
add
dec
and
push
fwait
pop
repz
dec
pop
sbb
out
arpl
add
sbb
add
sub
xor
jecxz
push
repnz
mov
nop
imul
int
jp
int
das
sbb
xchg
out
cmp
sbb
dec
out
inc
sbb
mov
xchg
int
mov
sbb
or
dec
idiv
or
loop
adc
test
jecxz
in
jl
clc
js
aaa
rol
ret
mov
and
jl
xchg
push
pop
repnz
jns
sbb
xor
fisub
iret
mov
enter
loopne
rol
push
test
xchg
cwde
movs
out
jbe
pop
aam
jno
lods
rol
loop
cs
movs
mov
pop
mov
enter
jno
in
pop
lock
scas
fidiv
jmp
inc
cmp
or
(bad)
or
outs
xchg
mov
push
push
pop
test
and
cmps
push
aam
aas
(bad)
jp
movs
mov
or
mov
xchg
mov
and
fimul
mov
xor
push
adc
in
dec
rcl
les
pop
jns
nop
scas
std
mov
sbb
pop
movs
push
xchg
bound
mov
jmp
jmp
inc
sbb
aad
cmc
outs
jmp
add
add
je
pop
aam
jmp
ffreep
jg
dec
push
jge
adc
push
pushf
iret
and
push
out
(bad)
sti
movs
cmp
gs
push
fwait
or
or
adc
mov
neg
js
cwde
inc
jl
sub
neg
and
mov
dec
stos
sub
mov
cmp
mov
mov
outs
sbb
mov
rol
and
push
cs
jo
test
clc
jno
dec
push
jb
push
and
adc
jae
repz
sbb
push
imul
xor
push
ds
sbb
stos
ret
(bad)
sub
mov
sbb
xlat
ins
mov
je
adc
sub
sbb
adc
mov
push
call
addr16
push
mov
iret
shr
aad
dec
push
push
add
dec
cmps
test
sbb
xchg
leavew
or
ficomp
pop
das
push
stc
xor
lock
ds
or
(bad)
je
push
lds
pop
mov
xchg
loope
fdivr
repz
cmp
and
add
push
ins
inc
shl
leave
xchg
jp
and
jmp
pop
mov
cs
rcr
cmp
cmp
test
cmp
mov
ficom
inc
jmp
xchg
cmp
jmp
cli
pop
adc
jle
fisub
ss
loope
lds
xor
fld
fild
leave
retf
dec
outs
fwait
jg
pop
ins
inc
fs
xor
ins
shl
out
js
pop
adc
stc
sbb
div
pop
ficom
rcr
jge
pop
xlat
jmp
mov
das
call
pop
mov
adc
in
inc
mov
or
and
in
dec
xacquire
jb
adc
cld
pusha
dec
push
cmps
clc
je
stc
push
dec
mov
dec
jmp
cld
pop
enter
outs
mov
push
in
jmp
push
sub
dec
(bad)
imul
aad
and
and
loopne
fst
jbe
(bad)
fisttp
sub
sbb
pop
cmps
inc
xor
add
ss
push
in
mov
(bad)
jnp
fidivr
arpl
sar
mov
addr16
inc
popf
adc
mov
mov
xor
add
dec
add
xor
mov
jecxz
xchg
lahf
pop
sbb
xlat
push
pop
shl
iret
mov
loopne
sbb
inc
gs
movs
cmp
inc
cmc
stc
and
mov
out
outs
cmp
mov
jmp
movs
adc
cwde
mov
imul
(bad)
jno
(bad)
add
cmp
cmps
jbe
sub
fidivr
push
jmp
leave
fwait
and
xchg
or
pusha
mov
test
mov
jo
lods
mov
mov
add
aad
mov
stos
cmp
push
inc
test
mov
dec
movs
cmps
add
mov
jmp
pop
xor
xchg
pop
sbb
jmp
pop
pop
mov
add
(bad)
std
(bad)
fs
or
hlt
dec
arpl
fldcw
dec
cmp
mov
int3
adc
ins
(bad)
repnz
(bad)
sub
popa
cmp
mov
(bad)
xor
loopne
cmc
sbb
add
pop
cmps
lock
xchg
mov
scas
mov
xor
mov
and
jo
pop
cmp
jle
inc
cmp
xchg
(bad)
and
add
add
sahf
sar
mov
mov
add
repnz
jmp
and
ins
xchg
jecxz
test
and
xor
(bad)
jmp
cdq
movs
ds
(bad)
js
shr
mov
ins
fwait
sub
out
mov
push
aaa
rcl
out
cmps
jne
and
imul
jne
pop
out
cmps
imul
xchg
push
jge
dec
sbb
mov
(bad)
scas
lock
imul
push
lods
loop
aaa
cmp
inc
out
int3
jmp
push
aam
enter
test
or
pop
push
pop
in
call
xor
loop
mov
mov
cmps
adc
fldcw
fcomp
(bad)
data16
sbb
repz
dec
repz
inc
dec
jo
out
sbb
mov
(bad)
jbe
adc
xchg
cmp
dec
xor
jns
bound
pop
or
mov
inc
fidivr
stos
push
loope
das
(bad)
lock
adc
jo
test
je
lds
neg
sar
pop
cld
test
fwait
mov
hlt
jle
in
scas
outs
ds
adc
fsub
jp
inc
inc
scas
mov
cmp
fdiv
add
mov
dec
add
pop
mov
fnstcw
test
pop
popf
sub
cdq
cmps
fst
xchg
data16
and
pop
fimul
add
push
cdq
fisttp
adc
je
pop
xchg
fst
loopne
retf
ds
dec
sbb
mov
dec
fidiv
push
hlt
out
pop
mov
aad
xor
push
ins
adc
loope
add
fiadd
sub
mov
ja
push
inc
mov
std
xor
or
frstor
add
dec
and
fst
and
sar
bound
pop
ror
xchg
arpl
mul
scas
test
ds
fldcw
ss
xor
movs
sub
lock
dec
(bad)
inc
pushf
or
mov
daa
int
ja
inc
fimul
jge
cli
mov
xchg
test
popf
jle
retf
dec
bound
mov
fldenv
mov
std
adc
inc
lahf
sbb
add
dec
stc
stc
mov
out
mov
cmps
out
and
js
stos
fxch
and
pop
and
inc
inc
pop
mov
push
adc
ret
mov
and
icebp
mov
xor
js
imul
sahf
xor
push
cmp
(bad)
sbb
mov
sar
fsubr
dec
mov
ret
push
push
mov
sbb
lock
sub
sub
nop
push
test
jnp
and
(bad)
adc
inc
cmp
stos
aam
and
or
in
jmp
hlt
ret
mov
call
lods
mov
adc
jecxz
pop
sub
mov
das
fisttp
ins
cmps
inc
mov
ins
dec
cmp
fdivr
neg
loop
movs
(bad)
jmp
iret
xchg
js
mov
jns
sub
cmps
push
and
and
pop
arpl
add
mov
cmp
sbb
cmc
into
movs
scas
push
sbb
or
adc
or
mov
call
lods
test
xchg
dec
test
dec
rcl
and
mov
int
xor
sub
(bad)
mov
adc
js
cmp
mov
mov
je
inc
shl
ins
aad
cmp
imul
int3
mov
dec
push
sar
xchg
icebp
xchg
gs
hlt
call
in
pop
cmc
inc
mov
lock
retfw
inc
cli
lds
mov
xchg
xlat
les
fstp
es
pushf
fcmovu
(bad)
mov
sbb
mov
ins
arpl
leave
and
add
cld
cwde
int
and
sub
in
jns
push
int3
fbld
sbb
xchg
jo
inc
nop
inc
sti
dec
mov
or
push
imul
test
xchg
xchg
(bad)
xchg
dec
ret
fiadd
pop
iret
sbb
sub
adc
dec
sub
mov
lea
jp
loop
call
xor
les
cmp
aaa
dec
mov
test
xor
adc
push
aam
(bad)
jbe
rcr
dec
jnp
jne
mov
(bad)
pop
dec
and
jg
mov
test
int
add
ficom
call
movs
cwde
mov
cdq
adc
mov
sahf
call
push
mov
mov
adc
loopne
fild
addr16
inc
(bad)
xchg
cld
jge
jp
mov
xchg
das
lods
shl
jnp
imul
jb
cld
mov
in
addr16
dec
lahf
pop
sub
icebp
shl
jns
lods
jno
adc
call
or
(bad)
xor
out
push
dec
sbb
scas
(bad)
scas
inc
inc
bnd
push
mov
dec
or
call
jns
jne
xchg
xchg
mov
jmp
rcr
out
mov
and
or
mov
out
or
sub
push
movs
jno
imul
adc
or
test
data16
jg
enter
sbb
push
bound
ja
sbb
push
push
mov
or
push
adc
sub
int
inc
jno
call
das
add
nop
mov
jle
ror
mov
movs
jo
xchg
xchg
fs
fistp
repz
xchg
daa
xor
fstp
cmc
xchg
out
inc
adc
test
cdq
in
repz
xor
adc
mov
push
xchg
pop
cs
mov
jl
xor
iret
mov
jne
in
dec
and
sbb
sti
ins
mov
in
lock
(bad)
loop
movs
adc
fisub
icebp
or
sub
popf
pop
inc
or
test
sbb
push
adc
dec
lahf
mov
movs
mov
out
(bad)
sbb
lds
arpl
in
cdq
sub
retf
leave
repz
rcr
mov
dec
mov
xchg
das
add
dec
(bad)
arpl
call
test
mov
jp
and
loopne
fcom
push
mov
imul
dec
sti
sub
xlat
pop
cmc
inc
jmp
inc
dec
xchg
in
pop
ds
cmc
inc
test
push
jmp
dec
jne
cli
loope
sbb
cwde
pusha
pusha
hlt
xchg
ins
xor
int3
clc
(bad)
adc
mov
test
xchg
je
push
add
cmc
add
fs
xor
fnsave
xor
jns
fld
out
cmp
clc
fidivr
jg
cmp
mov
add
mov
push
in
dec
pop
in
inc
es
jo
call
xor
js
sbb
push
(bad)
inc
adc
mov
add
out
out
into
cld
mov
dec
repz
xchg
mov
cmp
leave
xchg
cmp
and
xor
test
lea
sub
xor
std
pop
cmp
int
loop
enter
imul
cwde
mov
push
mov
arpl
aas
mov
mov
dec
inc
scas
cmc
xchg
fild
mov
inc
test
dec
xor
mov
push
in
sahf
mul
mov
shl
mov
jne
fidiv
lock
and
popf
jp
mov
jo
test
out
adc
(bad)
popf
lock
aad
cmp
cwde
imul
fld
stos
inc
add
jns
push
movs
pop
lahf
pusha
mov
shl
fucomip
push
inc
mov
lahf
mov
pusha
and
pop
call
and
push
mov
adc
inc
stos
gs
or
jecxz
loope
jge
movs
cmp
dec
mov
cmc
inc
(bad)
cmc
neg
neg
cmp
pop
dec
xor
jbe
div
and
mov
cmp
movs
bt
cmp
bound
mov
jb
adc
ds
inc
int3
sbb
sub
aam
jo
mov
pop
push
jae
cmps
pop
sti
and
mov
fisubr
dec
test
pop
mov
xor
and
sbb
inc
xor
or
(bad)
sbb
push
sub
cmps
pop
mov
or
xor
pop
jecxz
fs
mov
das
scas
pop
mov
xlat
push
scas
leave
aad
xlat
pop
pop
push
sti
sbb
daa
mov
mov
(bad)
push
mov
aam
push
aad
push
outs
sti
adc
lahf
jge
push
dec
sub
xchg
jg
push
das
jp
sbb
es
pop
add
vminpd
adc
fisttp
sub
inc
xchg
cmp
or
jmp
call
jl
in
pop
shl
xchg
sub
or
push
loopne
imul
ins
dec
nop
mov
fs
dec
loop
std
imul
fild
int3
sbb
in
popa
push
dec
add
add
push
mov
jge
cmp
or
out
outs
jo
repnz
fldenv
push
xor
or
dec
push
call
sbb
pop
or
leave
pop
pop
iret
jmp
jmp
xchg
out
push
addr16
jns
je
xchg
and
sbb
sub
xchg
jmp
out
pop
ror
or
in
or
dec
(bad)
shl
adc
mov
movs
pop
lods
ins
mov
fistp
shl
push
sub
pop
loope
xor
pusha
pusha
xor
cmps
ret
mov
(bad)
call
dec
out
sub
stc
ret
jg
mov
xor
cld
mov
jno
inc
in
and
ins
and
or
scas
sub
add
mov
into
cwde
in
out
leave
aas
scas
pop
aas
sub
cmp
lahf
ja
adc
aam
retf
xchg
xchg
cs
add
loop
inc
jmp
lahf
add
ficom
dec
retf
xchg
test
sub
(bad)
mov
sub
aam
fist
ins
mov
push
icebp
push
lock
cmps
dec
xor
imul
cmps
dec
mov
and
and
adc
repnz
inc
nop
sti
fsubr
xor
cmp
or
bound
sub
ror
loop
out
xchg
fs
lods
xchg
jbe
mov
push
lods
lods
sbb
fldpi
cmp
cwde
fdivrp
xchg
retf
lds
ins
mov
mov
inc
jp
(bad)
xchg
loopne
cld
arpl
out
cmp
std
inc
into
jp
and
mov
jo
aam
repnz
add
adc
dec
jbe
jecxz
ret
(bad)
pop
mov
dec
mov
mov
sahf
aam
and
cli
push
movs
icebp
or
test
or
push
xchg
ins
ret
retf
add
push
dec
mov
add
sbb
dec
fisttp
xor
xchg
sbb
ror
sti
sub
rcl
add
ret
ret
adc
pushf
scas
inc
ret
inc
inc
lods
sub
fsub
adc
jbe
mov
jnp
mov
jbe
sti
jo
push
ror
outs
fisttp
xor
(bad)
aaa
sbb
cmp
in
and
xchg
rol
cmp
fstp
imul
fbld
stc
mov
add
dec
or
mov
and
in
and
xchg
xor
push
pop
dec
mov
mov
rcr
dec
ret
loope
sbb
repnz
aad
sbb
ins
clc
pop
cld
fs
cmp
push
aaa
adc
inc
imul
call
dec
push
stos
push
pop
gs
add
pop
inc
sub
xchg
add
and
movs
in
jb
add
pop
sbb
fnsave
jmp
cmp
(bad)
mov
loop
cmp
jecxz
cmc
das
(bad)
shr
push
in
or
pop
fisubr
push
lahf
jg
retf
call
hlt
jge
loop
test
ins
push
fsubr
outs
outs
adc
mov
cld
out
retf
inc
jo
mov
add
xor
popf
ja
sbb
fcom
mov
out
pop
jmp
xchg
cdq
retf
imul
ins
adc
mov
pop
call
adc
(bad)
cmp
mov
sar
mov
sub
das
xchg
mov
mov
and
xchg
test
stc
mov
pushf
cli
jmp
jo
das
std
and
xchg
pop
cmp
cmc
and
cli
retf
dec
sbb
call
clc
into
and
mov
mov
xchg
push
out
(bad)
mov
mov
xor
sbb
pop
ss
sub
add
sbb
mov
retf
dec
pop
mov
and
mov
icebp
dec
jl
inc
and
cmps
outs
cmps
mov
fisub
xchg
lahf
mov
push
dec
mov
cmp
mov
cmp
jp
xor
inc
lahf
loop
cmps
cdq
fistp
mov
sub
dec
pop
mov
push
dec
imul
pop
ror
jmp
call
xor
xor
lds
mov
ror
dec
inc
loopne
xlat
js
mov
fist
pop
addr16
movs
iret
iret
js
cmps
sub
fadd
pop
push
mov
push
inc
jp
(bad)
mov
pop
in
pop
pushf
pop
pop
sti
cs
movs
inc
retf
or
xchg
idiv
lods
sahf
ret
add
inc
jbe
mov
adc
(bad)
in
(bad)
sbb
cmps
cmc
jb
xchg
mov
(bad)
ja
push
mov
xor
out
scas
fbld
loopne
push
or
sub
sub
daa
pop
adc
cmc
dec
adc
nop
jle
mov
cs
repz
push
scas
movs
add
ds
inc
or
sahf
add
pop
xor
cmps
xchg
inc
mov
and
jmp
inc
add
adc
xchg
lahf
push
(bad)
pop
outs
sub
mov
add
loope
pop
out
or
lock
push
(bad)
and
pop
fistp
mov
xchg
ja
adc
adc
jns
and
shl
xor
inc
lea
push
xor
mov
pop
in
push
les
movs
mov
ret
push
pop
push
and
add
repz
scas
mov
aad
aas
aaa
fldcw
retf
pop
pop
pop
and
cmp
das
dec
adc
repz
add
push
xlat
mov
xchg
imul
stos
add
mov
pop
adc
int3
dec
and
(bad)
cmp
dec
addr16
push
je
jecxz
or
xchg
pop
push
push
push
mov
or
mov
rcr
dec
jg
ins
xchg
enter
aad
std
push
mov
sbb
dec
out
jns
scas
xchg
jnp
sub
inc
popa
jo
jmp
push
cmp
test
cwde
or
and
add
aad
cld
push
dec
adc
xchg
in
mov
and
jmp
sbb
jae
mov
xchg
jmp
aas
push
call
xchg
mov
dec
test
cmp
and
xchg
inc
jmp
lahf
fimul
nop
push
mov
(bad)
rcl
mov
xchg
mov
imul
push
inc
imul
or
les
(bad)
loopne
add
icebp
add
loopne
cmp
aas
std
aad
mov
arpl
add
imul
push
inc
sub
cmpxchg8b
mov
sub
xor
repz
movs
xchg
push
and
movs
add
mov
hlt
and
cwde
leave
xchg
jp
addr16
add
xlat
je
mov
adc
dec
and
mov
adc
adc
mov
jnp
pop
mul
mov
imul
aad
xor
jne
repz
les
fldcw
pop
stos
les
or
ins
adc
retf
dec
sub
sub
dec
fwait
sbb
and
test
sub
shl
aam
push
mov
in
and
xchg
mov
cmp
rcl
sahf
add
dec
aam
adc
outs
mov
sbb
outs
outs
call
jmp
test
stos
aam
call
(bad)
retf
jo
push
xchg
nop
aad
cmp
data16
xor
test
call
push
mov
mov
push
push
mov
out
dec
ja
(bad)
into
and
test
mov
(bad)
jge
mov
daa
xchg
popf
pop
xor
hlt
js
and
cmps
sub
in
lods
and
inc
cli
cmp
push
jecxz
mov
loop
mov
mov
or
repz
ja
and
cmp
or
dec
push
test
js
add
mov
mov
xor
add
icebp
rol
sub
xchg
adc
sub
repnz
dec
out
popf
test
fsubr
jp
sar
sbb
outs
jge
push
std
inc
aaa
fdivr
cmp
into
iret
dec
mov
out
mov
xchg
iret
movs
inc
adc
inc
mov
bound
out
sar
call
ja
retf
sahf
out
xchg
pop
mov
ret
push
sti
add
inc
add
jl
xchg
and
cmp
mov
inc
clc
retf
cmp
jl
jp
xor
fs
mov
sub
mov
ss
push
xor
dec
inc
add
cmp
test
leave
clc
mov
jmp
adc
sub
rcr
and
loop
adc
call
sub
jmp
cmps
iret
fs
rcl
retf
mov
cmp
xchg
ins
push
div
mov
xchg
in
test
bound
or
sub
pop
lock
retf
jae
sub
movs
pop
or
mov
(bad)
cmp
and
lahf
push
gs
jmp
test
mov
lahf
in
mov
ss
pop
pop
adc
(bad)
jp
xchg
shl
lea
cmp
popa
cmp
(bad)
push
adc
mov
in
stos
(bad)
pushf
dec
out
cld
adc
push
mov
js
xchg
repnz
aaa
ins
dec
(bad)
sti
push
stc
test
add
scas
cmp
sub
nop
jb
arpl
cmp
pop
or
sar
bound
mov
push
sbb
mov
add
aas
jne
sbb
lahf
sub
sbb
out
push
add
add
hlt
push
jp
imul
xor
cmp
sbb
pop
imul
fstp
repz
fimul
mov
jno
lds
test
cmp
mov
lds
loope
mov
mov
inc
jmp
lods
jmp
loope
popf
mov
popf
out
push
jmp
pop
lock
xor
ret
test
sbb
or
lds
and
outs
adc
sub
sbb
nop
push
test
jns
cwde
mov
gs
imul
sub
icebp
enter
dec
sub
movs
pop
xchg
adc
cmp
inc
pop
dec
mov
loop
push
mov
mov
movups
mov
psubw
xchg
pop
sbb
cmp
hlt
cmps
ret
jg
dec
cmp
int
or
daa
dec
jb
mov
pop
loopne
mov
in
inc
sbb
cmp
inc
icebp
(bad)
call
cmp
rol
movs
rcl
mov
ret
jno
repnz
cmps
mov
jb
pop
pop
shl
or
call
mov
ficom
xchg
pop
fidiv
push
aad
retf
xchg
gs
pslld
sahf
scas
xchg
mov
fidiv
dec
mov
or
rcr
aas
pop
loop
xchg
dec
mov
jnp
mov
test
mov
clc
fsubr
not
shl
data16
add
out
mov
push
mov
jo
and
mov
xchg
retf
fstp
cmp
add
fdivr
(bad)
cmc
and
(bad)
sti
jmp
sbb
fsubr
aaa
je
in
push
int
icebp
test
adc
inc
pop
fadd
in
adc
retf
sbb
push
mov
lods
js
mov
lahf
(bad)
push
or
cmp
jbe
sbb
nop
mov
rol
call
fmul
push
cmps
imul
pushf
loop
in
fmul
adc
cmp
cdq
xchg
out
scas
lock
xor
sbb
inc
xchg
and
xchg
xchg
repz
(bad)
mov
adc
stc
adc
mov
push
fimul
xor
es
dec
movs
mov
imul
rol
ret
pop
pop
xor
in
xor
stc
sbb
(bad)
cld
add
and
rol
rol
lock
pop
mov
or
or
shr
dec
stos
push
call
pop
addr16
and
loope
repz
in
pop
sti
inc
rcl
push
or
add
cmps
xlat
or
call
repnz
addr16
int
xchg
(bad)
aam
push
loopne
push
js
into
and
sub
or
dec
aaa
xchg
add
mov
shl
(bad)
mov
xchg
mul
pop
rcr
or
mov
idiv
icebp
and
ror
jmp
mov
xchg
add
out
test
(bad)
dec
loop
jae
jne
jo
es
jae
and
cmp
sub
dec
xor
loopne
add
mov
cmp
imul
repz
out
(bad)
movs
je
pop
test
pop
mov
jecxz
cmp
ret
loopne
pusha
jno
rcr
ds
imul
sti
mov
add
cmp
shr
mov
xor
push
and
mov
neg
cmp
mov
sub
popf
cmp
dec
push
pop
xor
adc
test
retf
jbe
push
inc
fbstp
js
sub
call
inc
inc
test
sti
push
fistp
pop
aaa
lods
fwait
rcr
scas
cmp
movs
jbe
jne
mov
imul
push
lods
fwait
cmp
push
mov
rol
mov
push
fwait
pop
adc
and
cmp
outs
test
test
into
rcl
push
lods
je
stos
(bad)
cmp
je
inc
stc
lds
out
add
sub
push
add
(bad)
retf
ja
(bad)
jne
or
outs
mov
repnz
and
fcomi
rcl
jle
dec
rol
sub
mov
call
mov
mov
push
or
inc
pop
fnclex
ja
sbb
adc
or
ja
stc
jmp
scas
xlat
sub
mov
and
inc
mov
sti
mov
scas
xchg
sub
mov
popf
movs
imul
sub
pop
jnp
xor
arpl
mov
or
sbb
stc
or
rcl
push
dec
add
sahf
in
mov
jle
xchg
les
jmp
push
or
neg
push
push
ret
cld
sub
aad
dec
add
jl
mov
mov
pop
add
mov
sub
jo
sti
xchg
mov
sub
push
bound
cdq
push
sub
sar
mov
adc
emms
jo
adc
push
ret
into
popa
aad
fcompp
jmp
sti
sar
loop
lods
mov
inc
mov
jnp
push
stos
mov
pop
jne
std
or
imul
out
cmp
shl
outs
xor
add
cdq
mov
cmp
xchg
sub
and
mov
adc
test
inc
and
sub
add
xchg
sbb
(bad)
(bad)
(bad)
xor
popf
jb
mov
push
lods
cmp
adc
mov
and
mov
(bad)
aad
retf
or
mov
jl
inc
mov
dec
jo
icebp
adc
jecxz
shl
pop
cmp
push
mov
cli
cs
(bad)
int3
mov
dec
cmp
not
retf
cmp
cmp
es
call
cdq
xor
imul
jnp
pop
mov
jne
or
mov
push
cmp
xchg
mov
xor
pop
mov
loop
sar
stos
lods
push
xor
call
repnz
or
jnp
inc
out
out
push
mov
shl
mov
lods
mov
fmul
cmp
jg
arpl
lods
xchg
fstp
push
aas
adc
cmps
retf
sub
xor
cld
(bad)
push
sub
or
xchg
sti
fwait
xor
rcl
pxor
in
gs
(bad)
push
repz
jno
outs
sahf
xchg
lea
enter
pop
xchg
fbld
mov
into
ficom
xchg
cmps
mov
dec
jp
mov
cmps
sub
dec
or
push
pop
or
(bad)
lods
popf
mov
leave
in
dec
pop
stc
imul
pop
adc
sahf
xchg
aam
ins
pop
(bad)
mov
sbb
cmp
push
in
xor
dec
int3
repz
xor
jp
into
aaa
mov
dec
push
push
xchg
call
std
mov
shl
aam
aas
cli
xor
lods
push
ins
dec
pop
or
adc
arpl
mov
cmp
inc
and
sub
sbb
or
mov
mov
aam
pusha
push
mov
addr16
into
retf
jle
out
repnz
pusha
es
movs
push
arpl
bound
sbb
dec
xor
add
sbb
push
cmp
mov
movs
imul
pop
push
enter
aaa
mov
(bad)
xchg
sub
lods
add
xchg
rcl
lock
or
dec
dec
int3
inc
dec
(bad)
add
sbb
push
ds
inc
enter
jb
mov
iret
jo
mul
mov
lods
out
adc
or
push
data16
(bad)
mov
pushf
ret
int3
das
mov
mov
test
pushf
sar
push
xchg
jbe
leave
lahf
mov
(bad)
ins
mov
mov
cmp
mov
cli
fs
retf
faddp
imul
imul
push
call
mov
repnz
(bad)
pop
push
jb
add
call
jnp
or
mov
dec
cmps
dec
js
movs
jno
clc
sub
sub
lods
inc
jns
jno
mov
pop
xchg
or
mov
dec
mov
dec
in
or
mov
or
shl
or
xchg
test
mov
in
pop
push
sahf
push
int
pop
cwde
pop
test
imul
sbb
mov
daa
dec
ss
mov
sub
inc
or
jne
imul
cmps
fld1
jae
test
in
mov
call
out
and
or
ror
gs
jg
cli
and
fs
pop
sub
adc
mov
adc
push
int
jp
(bad)
pop
mov
mov
sbb
aaa
push
jmp
push
scas
or
ins
cli
xor
fcmovnbe
adc
fcmovnbe
cdq
pop
icebp
xchg
pop
mov
imul
ret
mov
pusha
aaa
fisubr
int3
xchg
cmps
enter
jo
or
aaa
inc
cmp
sbb
push
not
mov
xchg
add
dec
stos
fldcw
movs
xchg
shr
cmc
out
fmul
imul
ins
inc
pop
inc
loopne
mov
xor
mov
push
cmps
dec
push
and
xchg
popa
sahf
cmp
jnp
xchg
and
push
fiadd
push
sbb
loope
mul
call
mov
cmp
cmp
mov
dec
pop
int3
mov
mov
mov
xchg
cmp
push
out
aam
lock
inc
retf
dec
pop
jns
sar
(bad)
or
lds
je
add
push
addr16
pop
test
mov
shl
fidivr
loopne
imul
xchg
xchg
psubb
ins
push
sahf
sbb
inc
cmp
jno
je
pop
xchg
jmp
mov
(bad)
jge
push
xor
mov
sub
jbe
je
ss
in
jge
mov
push
cld
mov
pminsw
jnp
shl
pop
(bad)
lahf
(bad)
pushf
mov
mov
cdq
or
xchg
(bad)
(bad)
(bad)
ret
fs
or
ds
aaa
pop
or
cmp
mov
dec
test
loopne
(bad)
jmp
or
jbe
(bad)
mov
dec
cmp
dec
mov
mov
movs
outs
xchg
lods
dec
retf
dec
cmp
mov
popa
mov
adc
mov
dec
jnp
jmp
dec
sbb
movs
ds
sbb
mov
xor
arpl
xor
orps
enter
or
fnsave
add
push
stc
sub
clc
lods
inc
mov
test
jecxz
mov
inc
pop
adc
dec
adc
mov
outs
sbb
js
(bad)
int
dec
pop
pop
test
xchg
adc
push
cwde
jns
mov
cmp
inc
sub
xor
add
push
shr
pop
or
int3
mov
jmp
and
push
sub
test
push
lock
adc
(bad)
or
call
jmp
ins
pop
loope
aaa
jnp
shr
add
jns
loop
adc
stos
xor
(bad)
std
or
(bad)
mov
test
aam
int3
ror
add
shr
sbb
loopne
mov
push
xor
add
jmp
sub
int3
enter
in
push
or
mov
in
or
add
fiadd
fimul
and
imul
in
daa
ret
dec
mov
mov
(bad)
rol
out
icebp
add
in
pusha
push
into
mov
arpl
cwde
out
fsub
or
test
test
jbe
sub
cmp
inc
sar
sub
std
push
leave
ja
rcl
add
mov
xchg
dec
or
push
lods
xchg
mov
fnstenv
sub
xchg
dec
cs
test
mov
add
ins
stc
cmp
stc
cmps
jae
jl
mov
jl
(bad)
fsubr
scas
mov
or
ds
add
cli
rcl
cmc
test
in
inc
int3
sub
push
jg
mov
mov
bound
adc
cwde
inc
(bad)
cld
xor
and
mov
push
dec
sbb
outs
test
cmps
in
syscall
sub
in
clc
repnz
dec
(bad)
ret
stc
das
cld
sbb
xor
sbb
jecxz
jp
imul
mov
outs
ret
mov
sub
int3
sbb
mov
sbb
cmp
fsqrt
loop
push
popf
or
int3
retf
(bad)
mov
test
or
pop
dec
in
arpl
cmp
icebp
xchg
cmp
fstp
sub
add
retf
ins
xchg
pop
and
and
in
out
ja
sbb
push
mov
lds
add
popf
pop
pop
adc
outs
ins
or
dec
in
sub
shr
cs
sbb
aad
into
cmc
push
iret
push
lods
jb
jmp
mov
sbb
js
loopne
arpl
mov
push
mov
jge
repz
mov
into
test
movs
jge
out
sub
aas
sbb
inc
mov
(bad)
sub
arpl
add
(bad)
sbb
(bad)
push
es
push
mov
clc
(bad)
out
movs
jp
ficom
icebp
inc
(bad)
adc
out
mov
jb
push
loop
mov
dec
loope
pop
or
mov
push
xor
test
add
rol
ret
sahf
dec
mov
jno
nop
daa
inc
lahf
add
sub
out
mov
mov
ret
mov
cld
cmps
popa
inc
jo
es
and
cwde
sub
jb
mov
mov
outs
xor
jns
jno
fldcw
sbb
sar
popa
push
(bad)
repz
push
mov
xor
mov
bound
call
bnd
mov
call
lods
sbb
fdiv
pop
loopne
mov
pop
push
sahf
cli
mov
inc
(bad)
xor
cmp
sbb
sbb
sub
or
inc
retf
sbb
mov
call
add
mov
add
fild
adc
add
test
fdivr
xchg
lock
ins
mov
retf
xchg
sub
imul
cld
icebp
cmp
fist
and
sub
pop
icebp
mov
jge
adc
adc
mov
xor
mov
(bad)
fcom
or
adc
in
mov
fisttp
or
std
aam
push
mov
(bad)
jmp
rcl
lds
cmp
xchg
xor
push
sbb
pop
(bad)
aas
jecxz
lahf
cmp
sbb
jg
push
pop
retf
fisttp
pop
jmp
pop
dec
fidivr
sti
pop
loope
mov
jae
mov
pop
pop
(bad)
mov
sbb
push
mov
loope
cmc
ret
pop
rol
dec
xlat
dec
jmp
push
pop
std
shl
(bad)
aas
mov
jnp
fsub
mov
or
ds
xchg
add
mov
jmp
popf
xor
sub
push
in
mov
push
out
retf
mov
xchg
scas
xchg
sub
fcom
adc
mov
xor
ret
imul
movs
add
mov
add
pop
sahf
xlat
scas
jne
loopne
jmp
jo
lea
pop
xor
xlat
mov
ror
scas
icebp
mov
(bad)
aam
jae
and
mov
jle
rcr
add
mov
and
movs
xchg
sbb
test
pushf
sub
adc
mov
rcl
xchg
jnp
retf
xor
test
fld
stos
addr16
sbb
(bad)
(bad)
std
shr
(bad)
call
pop
and
retf
test
mov
and
enter
lock
and
or
int3
push
push
ja
jecxz
imul
cmp
xor
xchg
lahf
mov
stos
mov
mov
test
adc
test
mov
int3
inc
push
dec
or
jg
xchg
pop
outs
jge
push
dec
test
pop
scas
and
and
ficom
adc
mov
and
push
stc
aaa
rol
fcom
movs
mov
(bad)
mov
std
cmp
ror
daa
mov
ficom
push
call
mov
jnp
mov
fcmovbe
into
mov
mov
xchg
mov
xchg
sub
cli
test
or
(bad)
aam
in
push
xchg
fst
mov
mov
mov
cmp
cmps
mov
and
jb
add
clc
gs
fs
call
gs
inc
ins
mov
pop
sub
adc
arpl
push
inc
in
cmp
jp
and
sbb
mov
loopne
fs
mov
pop
ud1
das
xlat
into
inc
xchg
inc
add
xor
sub
xchg
(bad)
repz
sbb
lods
dec
adc
push
add
loope
push
aad
leave
shr
jb
add
xor
retf
test
sub
push
inc
xchg
cld
lahf
adc
cli
(bad)
jbe
xchg
test
into
imul
data16
mov
pop
dec
imul
jne
jle
cmp
push
jle
dec
inc
jmp
jne
lods
xor
adc
jae
jae
push
mov
mov
fisttp
pop
jmp
jmp
ror
fs
jne
clc
add
retf
out
aas
pop
ret
and
mov
popa
aad
mov
scas
(bad)
dec
outs
and
(bad)
movs
xor
(bad)
cmp
pusha
mov
movs
sub
adc
mov
out
adc
mov
adc
add
mov
push
(bad)
inc
mov
mov
jne
and
add
fild
or
add
xor
or
and
pop
setns
idiv
call
jge
mov
fwait
addr16
inc
and
push
aaa
sahf
jg
lds
jae
xor
aaa
jbe
push
nop
(bad)
je
push
inc
repnz
in
add
hlt
lock
and
jnp
into
xchg
push
out
cld
push
popf
icebp
repnz
test
jmp
daa
jne
and
ins
stc
(bad)
xchg
dec
(bad)
fisub
push
iret
test
scas
out
mov
push
sub
aad
cmp
mov
lods
fwait
mov
mov
mov
mov
ficom
call
adc
mov
push
fcomp
cmp
push
jo
out
popf
aam
stos
jp
xchg
out
adc
cmp
mov
idiv
loop
aam
shl
xchg
fistp
and
dec
mov
mov
and
mov
add
cmp
or
mov
cdq
clc
and
inc
out
mov
aam
adc
mov
cmc
adc
(bad)
push
adc
sar
inc
rol
push
je
adc
adc
pushf
or
xchg
hlt
inc
sti
(bad)
cld
pop
inc
test
sbb
lods
inc
sbb
scas
sbb
dec
mov
jmp
add
jbe
and
sbb
test
inc
cli
mov
aas
pavgb
xor
mov
popa
mov
mov
lds
mov
or
sbb
mov
adc
add
mov
and
ja
(bad)
adc
aaa
(bad)
jb
hlt
imul
ins
neg
imul
mov
push
imul
push
in
js
dec
sbb
fldlg2
dec
mov
scas
mov
mov
rol
ror
test
test
xchg
addr16
inc
jae
mov
cmp
scas
jp
inc
cld
hlt
popa
test
cli
jo
loopne
jmp
xchg
and
stos
cmp
mov
pop
inc
jns
adc
aaa
movsx
movs
fiadd
mov
loopne
das
pop
sbb
icebp
mov
leave
mov
in
rcl
inc
sbb
rcl
jne
mov
jmp
movs
push
out
dec
test
hlt
sub
cmc
bound
and
loop
push
xchg
mov
add
rcr
aam
not
test
jno
mov
push
jl
shl
mov
xor
xchg
aam
fxtract
adc
push
cmps
data16
mov
or
push
stos
cmp
aam
mov
call
add
popf
cmp
jecxz
jno
(bad)
hlt
ss
xor
add
in
test
xor
fstp
in
test
scas
push
push
into
ja
clc
mov
xor
popa
dec
dec
pushf
sbb
sar
in
cmp
cli
jnp
cwde
mov
repz
in
mov
iret
adc
jnp
add
test
test
mov
dec
sub
pop
xlat
cmp
sbb
(bad)
jmp
pop
ins
data16
test
cs
push
fs
dec
popa
mov
add
(bad)
mov
neg
test
sub
call
pop
rol
test
mov
sub
mov
out
adc
icebp
cmc
jl
cmp
out
pushf
or
sahf
push
jbe
sbb
inc
and
inc
icebp
cmp
sub
cmps
jno
xor
adc
jb
leave
sbb
iret
xlat
pop
fmul
iret
push
ja
scas
idiv
movs
lahf
jp
mov
xchg
push
sar
jno
outs
inc
movs
call
pop
stos
fadd
retf
mov
xchg
icebp
sub
or
push
sti
imul
cmp
fdivr
jno
inc
sbb
fdiv
adc
enter
inc
mov
dec
imul
in
push
popa
lahf
aam
inc
mov
fwait
sbb
jge
cwde
sbb
cmp
movs
into
iret
mov
jmp
pop
add
or
stc
cmp
dec
lods
mov
nop
cmc
push
sti
repz
cmp
stc
ret
and
ins
inc
jae
fs
(bad)
and
adc
or
rol
ins
popa
adc
dec
mov
jno
(bad)
sub
adc
add
sbb
aad
cdq
xor
popa
loop
push
in
les
mov
das
imul
push
jge
clc
out
aaa
ja
add
int
adc
xchg
xchg
sub
xchg
test
dec
sub
lods
adc
push
mov
les
imul
or
fidivr
xor
ss
lods
add
inc
cld
sub
not
jnp
push
adc
push
pop
fld
pop
ins
hlt
mov
cmp
or
stc
test
add
leave
out
lods
xlat
sub
push
cmp
jecxz
xchg
pop
inc
cmp
xor
push
cmc
and
rcl
ins
cmp
mov
imul
jns
jge
aaa
inc
adc
fisub
fistp
test
cmp
out
mov
sub
push
jle
push
sahf
add
sub
cmps
fdivr
xor
out
call
push
xor
sar
push
lods
pushf
nop
pop
movs
xchg
test
add
fdivr
rcl
push
sub
fwait
neg
sub
pop
mov
mov
xchg
sbb
mov
sahf
mov
shl
fld
push
adc
inc
adc
mov
movs
mov
cmp
repnz
aaa
xchg
cmp
push
enter
jle
sahf
xor
cmp
or
iret
clc
fs
jle
cli
cdq
pop
mov
push
mov
in
push
inc
cmps
jne
ror
push
and
fcmovb
icebp
fist
pop
xchg
push
mov
shl
stos
std
sub
mov
mov
in
cmp
and
ror
je
adc
sahf
mov
pop
sbb
push
xor
bound
sub
sbb
push
or
dec
jno
cmp
daa
cmp
sub
call
mov
fsub
adc
or
retf
rcr
(bad)
jb
jo
push
sti
xor
call
(bad)
and
dec
push
loope
adc
xor
enter
dec
sbb
cmp
jle
pop
mov
or
cmp
mov
rcl
in
pop
nop
and
or
sub
call
dec
jg
jae
push
test
ficomp
jle
aam
cmps
ret
jle
mov
lea
xor
push
cli
stc
dec
mov
xchg
xor
mov
shl
retf
in
mov
sub
ret
xchg
bound
dec
out
out
mov
mov
and
inc
es
inc
push
add
push
mov
and
pusha
jno
cwde
add
icebp
jns
arpl
inc
mov
cmp
test
mov
repnz
jmp
mov
popf
mov
jl
sub
cmp
jge
add
ss
test
imul
inc
jle
sbb
in
push
push
cdq
in
gs
or
loopne
out
(bad)
push
lds
repnz
lock
test
int
mov
mov
aas
xor
pop
dec
and
ja
call
lock
daa
rcr
pop
test
(bad)
fcom
inc
jnp
xor
push
push
call
hlt
mov
enter
in
sub
add
pop
lds
jmp
adc
adc
imul
adc
pop
inc
inc
dec
(bad)
iret
or
(bad)
loope
mov
sbb
test
inc
mov
dec
stc
mov
out
cmp
jo
in
and
add
fwait
xchg
pop
loop
int3
cmp
sbb
or
movs
fsubr
add
mov
mov
mov
fcmovb
jbe
(bad)
lahf
arpl
icebp
cmc
je
dec
push
push
xlat
push
pop
cld
push
pop
mov
(bad)
adc
cs
xor
(bad)
ins
mov
jo
add
push
push
jmp
cmp
jno
jmp
sti
mov
jecxz
sbb
and
cwde
into
sub
loop
push
fst
stc
test
inc
aam
inc
mov
cmp
mov
movs
jge
and
sar
dec
movs
popa
ror
push
mov
and
xor
adc
push
jmp
mov
aad
xor
push
scas
inc
mov
test
cld
bound
pop
mov
or
dec
loope
inc
addr16
dec
inc
std
sbb
dec
retf
mov
in
sbb
das
popf
sbb
cmp
ins
jg
cmp
and
in
xchg
sahf
sub
shl
mov
adc
daa
lea
icebp
js
out
pop
into
(bad)
cld
jg
ror
test
adc
jnp
cmp
adc
(bad)
into
mov
ret
dec
jg
push
cmp
out
vmwrite
mov
imul
dec
add
xlat
into
mov
mov
xchg
sbb
mov
inc
or
pushf
xlat
dec
and
scas
sbb
movs
and
icebp
mov
xchg
imul
inc
adc
cdq
and
(bad)
data16
cld
neg
and
jno
out
dec
mov
sti
cdq
fiadd
outs
outs
push
jg
sbb
int3
mov
jmp
or
sar
mov
rcl
in
mov
nop
and
sub
add
shl
lds
iret
call
mov
xchg
arpl
out
adc
and
lea
adc
push
les
sbb
(bad)
lahf
pop
in
rcl
retf
jbe
retf
or
jmp
jmp
test
inc
test
mov
mov
mov
jecxz
stos
cmp
jmp
movs
int
xchg
retf
jmp
xor
call
or
pop
test
add
aas
(bad)
aam
adc
or
addr16
aas
xchg
stc
jl
xchg
sub
mov
jp
ret
out
scas
not
cmc
pop
pop
or
js
inc
push
sub
xchg
push
aas
pop
jge
scas
fadd
xchg
or
cmp
pushf
jle
test
jp
mov
adc
test
(bad)
push
arpl
lds
pop
add
mov
(bad)
adc
jge
xlat
mov
ins
add
fmul
fchs
xchg
dec
test
out
sub
jno
mov
jmp
lods
jge
mov
and
mov
(bad)
test
icebp
movs
cmp
jge
(bad)
repnz
rcl
adc
push
or
cwde
(bad)
sbb
mov
mov
(bad)
mov
call
cli
sub
repnz
xchg
shl
jbe
dec
push
fdivrp
or
fisub
stos
pop
xor
iret
and
lds
enter
mov
and
cmp
or
add
jle
std
imul
jo
stos
sbb
loopne
add
push
add
mov
dec
fsub
cwde
and
mov
loopne
pop
xchg
inc
xchg
jg
(bad)
stc
repnz
aad
les
push
cmp
adc
push
ds
xor
push
mov
(bad)
ret
lea
xchg
test
xlat
jo
inc
xchg
xor
jns
dec
sub
mov
add
lea
(bad)
in
leave
mov
or
movups
mov
daa
jns
sbb
ja
dec
sub
mov
(bad)
jmp
cwde
call
cmps
and
mov
retf
jns
adc
ret
cmp
test
xchg
push
nop
sub
mov
pushf
pop
repz
inc
pop
retf
ss
adc
ret
and
ins
cmp
fstp
scas
enter
cli
cmps
enter
push
ror
xchg
dec
cdq
gs
cmp
outs
out
adc
pop
ja
xor
ja
or
push
ret
stos
pop
or
adc
mov
retf
mov
jo
push
sub
ret
popa
dec
call
stos
je
out
adc
or
jl
test
pop
fwait
(bad)
pop
mov
sub
pop
pop
xor
pop
arpl
mov
cs
cmp
fst
imul
xchg
popf
mov
lahf
sub
jg
xor
aaa
jg
dec
jg
popa
loopne
mov
jle
cdq
or
cld
cmps
or
jb
sub
aaa
and
xor
iret
and
pushf
imul
(bad)
fwait
inc
push
loope
sub
(bad)
sbb
js
mov
nop
mov
sbb
adc
retf
mov
push
mov
in
push
xor
jg
pop
pop
fst
xchg
adc
inc
xor
rcl
cdq
inc
ins
(bad)
xchg
int
lds
push
add
ds
dec
dec
push
lock
je
pop
out
sub
sbb
mov
imul
ficom
mov
fld
pusha
(bad)
xchg
push
cmp
jb
mov
xor
sbb
push
outs
or
mov
sbb
imul
aaa
mov
movs
aam
push
fld
and
mov
push
mov
mov
in
inc
aaa
ret
mov
push
arpl
fidiv
sub
adc
fidivr
mov
push
xlat
push
loope
inc
iret
cmp
push
mov
add
aaa
ror
mov
xchg
jnp
stc
push
push
ja
mov
(bad)
dec
or
retf
push
cld
inc
or
inc
ins
mov
inc
mov
addr16
icebp
fimul
stos
dec
push
(bad)
fadd
imul
xchg
ins
push
ds
inc
rcr
hlt
sahf
pop
test
mov
jg
scas
add
pusha
stos
push
out
xchg
or
push
or
sub
or
and
adc
stc
aam
adc
leave
and
cli
mov
pop
sbb
in
fimul
cmc
enter
inc
push
retf
pop
and
jnp
cmp
xor
psllw
ds
jge
rol
or
aam
dec
sub
imul
cmp
outs
add
mov
je
or
test
add
shl
ja
mov
mov
gs
sbb
test
xchg
jecxz
ret
dec
(bad)
mov
fwait
push
(bad)
retf
push
cmc
mov
clc
mov
into
inc
sub
mov
ins
int
mov
mov
xchg
pop
mov
push
pop
pop
jns
xchg
sti
pop
pop
cmps
outs
mov
stos
or
gs
adc
int3
rol
jle
xchg
jg
and
and
mov
fs
add
jno
dec
or
enter
cdq
aam
out
pop
imul
push
in
and
repnz
repz
out
add
or
shl
mov
lods
mov
aam
jle
mov
xor
adc
or
xchg
xor
(bad)
pop
adc
add
arpl
in
or
clc
push
not
in
push
leave
pop
lahf
jbe
mov
add
inc
ror
sbb
loopne
xchg
xchg
(bad)
fisub
(bad)
aas
xlat
mov
pop
mov
je
and
push
adc
(bad)
jno
pop
imul
nop
dec
(bad)
loop
test
bound
push
aaa
jle
sahf
add
pop
mov
dec
jns
(bad)
cmp
adc
add
mov
in
push
mov
aas
mov
adc
nop
xor
and
adc
adc
ret
into
adc
movs
jns
mov
lea
mov
jecxz
mov
xor
lea
loopne
add
mov
fsub
inc
in
iret
sub
push
mov
scas
mov
dec
(bad)
pop
enter
jp
fcmovnbe
icebp
xchg
inc
adc
(bad)
mov
iret
and
add
ret
cwde
shr
sahf
mov
push
xlat
xchg
xchg
pop
jge
(bad)
imul
test
popf
(bad)
fs
es
lock
mov
jne
rcl
jbe
dec
das
fdivr
push
inc
aam
fdivr
mov
out
add
add
dec
iret
inc
sub
cmp
ret
or
fimul
or
jg
ins
jno
fwait
xor
into
jae
sbb
enter
jne
adc
retf
dec
test
jmp
fxch
cmps
push
cmovl
movs
cmp
jmp
idiv
sbb
pop
retf
mov
mov
pop
xor
retf
ins
scas
arpl
inc
daa
mov
test
leave
xor
cmp
inc
jnp
(bad)
cmp
pop
and
or
movs
cmp
xchg
and
fwait
pop
xchg
mov
adc
(bad)
in
pop
xchg
outs
jae
push
cmp
adc
in
lahf
movzx
vhaddpd
add
jnp
(bad)
jne
add
lods
or
rol
data16
pop
cmps
jo
pop
inc
lds
add
(bad)
or
int3
sub
or
add
adc
jle
outs
jno
dec
ss
ret
stc
test
loope
scas
sbb
jge
push
es
ins
outs
popa
sub
cmps
xlat
int
push
lods
pop
test
dec
and
loope
cmp
call
cmps
retf
pusha
jmp
push
(bad)
movs
mov
(bad)
xchg
nop
dec
ins
xlat
test
in
shl
cmp
cmps
fwait
out
cmp
dec
cli
jle
ret
mov
mov
setns
and
xor
(bad)
fdivr
jp
ins
sbb
dec
aaa
test
push
sahf
out
mov
or
daa
dec
xor
or
(bad)
mov
in
icebp
arpl
mov
jp
inc
mov
int3
xor
inc
or
or
mov
push
movs
popa
jecxz
adc
pop
inc
out
stc
add
(bad)
loope
push
gs
mov
neg
cs
clc
mov
imul
gs
mov
mov
enter
std
daa
cmp
das
cmp
pop
imul
out
jae
call
iret
and
mov
push
in
mov
imul
mov
sub
and
mov
pop
sbb
inc
cmp
add
dec
bound
pop
js
xor
ja
xchg
mov
cmps
aad
movs
hlt
das
pop
repnz
cmps
dec
push
xor
add
xchg
add
shr
pop
pop
retf
fst
pop
pop
jmp
jo
js
invd
mov
fsub
xchg
xor
push
out
xor
mov
js
mov
sahf
and
sub
pop
outs
sbb
inc
jl
ret
inc
fdivr
repz
jne
jge
adc
outs
test
popa
popa
inc
movs
(bad)
iret
dec
adc
stc
push
(bad)
(bad)
fcomp
aad
fs
or
lock
test
gs
mov
f2xm1
sahf
dec
mov
inc
mov
loope
jne
push
imul
ins
imul
test
(bad)
arpl
cmp
dec
dec
sub
and
arpl
bound
push
aaa
mov
movs
mov
add
sar
jmp
pop
jbe
retf
cli
xchg
mov
(bad)
mov
sub
test
mov
jl
in
test
cmp
cs
inc
les
fidivr
stos
jo
cmp
jae
dec
shr
xor
daa
dec
mov
jbe
test
dec
push
and
sbb
mov
add
adc
mov
les
jle
mov
pop
icebp
mov
lea
cmp
fcomp
ss
xor
mov
in
outs
push
mov
cmps
into
iret
push
fwait
jmp
pop
js
dec
inc
pop
jecxz
inc
int
jl
inc
sub
mov
sbb
jp
in
adc
mov
mov
xor
xor
push
mov
ret
push
sbb
sbb
mov
(bad)
mov
ins
jo
fisub
test
adc
mov
xchg
pop
int
mov
or
and
idiv
pop
(bad)
lds
outs
lds
cmp
arpl
imul
icebp
aad
or
(bad)
cmp
sbb
xor
ja
in
jb
inc
add
sub
cmp
jg
call
push
add
mov
sub
push
pop
imul
mov
adc
sbb
ins
add
rcr
mov
xor
pop
push
cmp
inc
inc
mov
xor
push
or
sti
ret
aaa
mov
inc
jp
and
mov
sar
add
leave
stos
fst
out
cwde
jge
push
not
daa
enter
fdivr
iret
add
push
movs
add
int
lods
int3
inc
jp
push
jno
cmps
shl
das
sbb
and
add
xchg
mov
inc
ds
jmp
in
ret
push
cld
retf
push
or
shr
cmp
in
jnp
push
rol
imul
mov
in
cwde
or
popa
loopne
pop
dec
pop
add
(bad)
in
xchg
je
cmps
xchg
aam
add
mov
push
dec
mov
cdq
fist
jmp
mov
jmp
loop
pop
or
sbb
jl
pop
leave
mov
int
cs
in
in
xchg
out
mov
jo
popa
jl
mov
pop
and
add
pop
out
out
or
push
out
ds
jb
sbb
stc
fwait
push
mov
imul
push
mov
mul
js
int
(bad)
lods
sub
scas
xor
or
dec
stos
xchg
xchg
pop
sub
jp
push
cmc
and
mov
ret
inc
sahf
mov
shrd
pop
add
sbb
fisubr
repz
dec
jmp
cmp
jge
js
mov
sub
cmp
jle
das
stos
sub
or
xchg
jmp
xchg
test
xchg
push
jae
xchg
sbb
mov
or
cmp
and
cmps
mov
mov
int
mov
sub
lds
imul
cwde
(bad)
rol
sbb
test
lock
jo
scas
xchg
retf
loope
dec
xor
pusha
mov
arpl
jl
xchg
inc
sbb
xchg
jbe
adc
mov
call
adc
adc
jae
cmp
cmp
adc
adc
and
pop
pop
xor
pop
stc
inc
cs
xor
aaa
mov
or
fnstsw
test
clc
push
dec
(bad)
xchg
inc
out
cs
scas
add
into
lea
das
push
push
popa
mov
add
push
in
push
jp
adc
aas
pop
cdq
mov
dec
push
ret
push
inc
bound
popf
or
cld
sbb
lods
js
and
(bad)
ins
fnstcw
add
xchg
cmc
cs
xchg
mov
scas
out
hlt
cli
test
mov
xchg
shl
mov
fcmove
sub
push
pop
mov
adc
xor
je
dec
hlt
mov
add
fdecstp
mov
and
pop
imul
int
inc
cmp
cmp
aas
dec
xchg
mov
(bad)
cli
jmp
add
pop
jns
or
dec
sbb
push
fsubrp
aad
cli
dec
dec
jl
ins
inc
call
xchg
(bad)
in
jo
cmps
jbe
xor
daa
test
and
adc
xor
lods
mov
dec
mov
out
xchg
les
inc
mov
mov
and
rcr
or
movs
sbb
push
retf
pop
sbb
sub
jnp
call
adc
sbb
lods
fstp
in
jnp
adc
inc
dec
mov
adc
mov
cmp
fs
or
mov
pop
dec
cmps
lods
pop
push
mov
or
fistp
adc
and
dec
xor
xlat
aad
sti
(bad)
aam
cmps
pop
or
mov
out
enter
retf
sub
je
add
jmp
aaa
push
or
pop
sbb
in
xchg
push
(bad)
arpl
out
and
mov
mov
test
lods
jns
(bad)
shr
push
sub
shl
leave
or
(bad)
es
stos
shr
mov
nop
scas
ins
mov
test
add
rcl
sbb
add
repz
popf
sub
dec
and
out
push
xor
xor
fisubr
fldcw
cmp
outs
stos
inc
aam
lds
and
mov
xchg
and
pop
lods
mov
sub
pop
push
sub
inc
sahf
leave
pop
or
pop
stos
mov
sar
and
jle
or
xchg
(bad)
pop
add
xchg
retf
psrld
enter
xchg
int
xor
add
xor
je
add
(bad)
popf
ss
into
dec
lods
bound
cdq
fsubr
jge
pop
stc
idiv
mov
clc
mov
push
pop
push
mov
mov
iret
inc
pop
cmp
add
arpl
sub
scas
adc
mov
push
dec
jp
out
jb
test
cld
ficom
movs
pop
push
and
out
(bad)
aam
xchg
jecxz
in
push
icebp
mov
adc
ffree
lods
pop
add
cmps
mov
xor
jb
out
je
in
xor
xor
xchg
push
push
dec
in
call
pop
add
cwde
pop
rol
stos
inc
aam
cwde
xor
out
ret
cmps
jmp
mov
jl
mov
scas
in
jecxz
cmps
lahf
pushf
data16
cmp
(bad)
dec
inc
stos
mov
mov
outs
lods
push
mov
jae
push
ficom
jmp
bound
ficom
sbb
out
jns
ja
jp
outs
pop
inc
je
adc
mov
cmc
mov
mov
in
pop
mov
sub
and
add
xchg
(bad)
push
outs
cli
out
or
aas
mov
sbb
(bad)
out
and
and
sbb
or
lods
mov
icebp
imul
cmc
and
aam
cdq
popf
xor
neg
enter
pop
dec
into
push
sub
mov
push
sub
xor
pushf
scas
and
movs
mov
push
fdiv
aaa
inc
or
sub
mov
jns
mov
lods
jp
retf
xchg
push
mov
xchg
jl
mov
mov
pop
mov
mov
push
imul
pop
mov
cs
or
sub
(bad)
mov
jmp
in
adc
lods
gs
and
nop
stos
bound
out
xchg
jle
movs
cld
mov
mov
enter
or
jno
sahf
fdivr
sbb
clc
arpl
scas
and
daa
ja
push
cmp
pop
mov
(bad)
inc
call
jb
mov
ret
or
sar
shr
inc
push
sub
das
pop
inc
imul
inc
fild
mov
cdq
ins
cli
inc
cli
mov
pop
fdiv
imul
dec
mov
mov
push
pop
(bad)
sahf
scas
pop
clc
and
test
fwait
ins
lods
fdiv
and
loopne
retf
int3
test
jne
repnz
add
ret
(bad)
in
nop
push
pop
shr
call
dec
sub
test
test
imul
cmp
jge
jle
dec
cmp
div
xchg
xor
test
jns
aas
pushf
xor
icebp
scas
cs
ins
pop
pop
ss
nop
(bad)
dec
fs
jae
call
pop
ret
mov
jge
mov
pop
mov
jns
pop
loop
repnz
cmp
dec
std
add
stos
fstp
(bad)
pusha
sbb
shl
mov
xchg
xor
xlat
das
mov
rol
and
add
popf
out
sub
scas
push
mov
pop
sbb
rcl
ret
test
repz
lods
add
xor
(bad)
call
mov
fnstenv
mov
pop
stc
cmovno
mov
add
aaa
push
cmp
xchg
movs
into
cmp
sub
jge
sahf
mov
adc
and
inc
xchg
xor
sub
mov
sbb
mov
popa
or
add
scas
fiadd
mov
jmp
mov
sub
adc
add
xchg
adc
adc
shr
jno
sbb
adc
ficomp
lahf
lods
mov
pop
imul
jmp
xor
jmp
call
mov
cmp
sub
inc
fistp
out
mov
cmp
push
imul
mov
jge
stos
xchg
pop
add
xor
pop
lea
cmp
jno
out
cmp
mov
out
stos
loope
jae
call
sub
push
(bad)
fwait
popa
movntq
out
dec
mov
xchg
or
dec
fwait
imul
mov
(bad)
push
cmp
push
jle
fcom
ret
cmc
(bad)
outs
fimul
sub
call
fucomp
mov
shl
and
mov
adc
dec
dec
cmp
imul
pop
inc
sub
out
(bad)
inc
ret
stos
test
pusha
fisub
mov
das
jg
retf
lds
cmp
jecxz
aam
mov
pop
fimul
xchg
pop
cmp
mov
arpl
xchg
or
pop
xchg
xchg
sahf
aam
sbb
xchg
pop
inc
xchg
inc
jnp
in
push
push
movs
xchg
push
ins
cvtps2pd
out
test
loop
lea
pop
xor
inc
add
pop
popa
cmp
add
(bad)
enter
fcmovne
push
popf
cmp
cmp
mov
lock
push
cmps
adc
in
nop
call
scas
inc
mov
cmc
push
sbb
mov
cmps
cmp
sar
adc
pop
xchg
lods
daa
stc
ds
fstp
xor
fcomp
call
inc
mov
stos
push
fistp
push
sahf
xchg
hlt
and
pop
cmp
enter
inc
adc
retf
arpl
arpl
clc
mov
imul
xchg
test
fst
sti
adc
push
jnp
into
mov
push
xor
mov
add
imul
or
sbb
mov
bound
push
pusha
and
in
test
mov
fdivr
jae
add
jbe
mul
std
push
xor
xchg
ja
(bad)
retf
xor
jp
dec
imul
gs
fld
jmp
in
outs
pop
inc
jmp
out
mov
fistp
movs
dec
enter
mov
iret
cmps
int3
imul
shr
mov
dec
mov
pop
(bad)
cld
aam
cmp
daa
dec
or
xor
and
nop
outs
(bad)
popf
add
sbb
(bad)
and
retf
adc
xchg
rol
add
es
push
xlat
loopne
and
cmp
and
add
xor
jg
mov
adc
cs
out
sti
adc
pop
call
dec
iret
repz
sbb
stos
aad
pop
femms
mov
sub
cmp
test
jae
retf
pop
cmovns
repz
mov
imul
test
rcr
xchg
repnz
or
jmp
or
dec
(bad)
movs
jae
mov
xor
stc
jo
sub
sar
(bad)
int3
pop
das
add
fsub
xchg
jno
ret
movs
xlat
xchg
dec
fwait
sbb
adc
rol
jnp
dec
pop
fcmovb
pop
push
loopne
popf
or
test
mov
push
pop
jl
ins
dec
mov
scas
aad
cs
xor
imul
sbb
imul
xchg
mov
leave
adc
xor
or
xor
cmp
dec
ror
inc
neg
inc
mov
pop
(bad)
iret
iret
(bad)
fmul
out
(bad)
pop
mov
dec
lea
ret
out
sub
jle
int
pcmpeqb
dec
retf
push
xchg
push
jno
bound
fiadd
repnz
ins
fst
sahf
pop
push
std
mov
cmp
xchg
mov
mov
mul
scas
sbb
mov
imul
daa
hlt
dec
retf
jb
mov
mov
sbb
add
cdq
fdivr
mov
stos
sub
jmp
cmp
imul
jle
sub
fadd
pop
xchg
addr16
xor
push
retf
cmp
(bad)
inc
sahf
jnp
(bad)
lds
pop
std
scas
inc
adc
outs
xchg
or
aad
hlt
jle
sbb
jnp
inc
loope
clc
fldcw
add
add
mov
inc
cmps
cmp
aaa
dec
into
imul
pop
jl
add
mov
pop
(bad)
not
jno
cmp
pop
ds
loop
aad
jne
(bad)
push
cmp
pusha
icebp
adc
mov
push
and
push
mov
sub
aas
mov
xchg
add
data16
mov
pop
push
push
shr
(bad)
jo
mov
pop
mov
sahf
mov
dec
xchg
and
es
mov
call
sub
and
and
scas
or
xchg
aam
(bad)
xor
mov
push
pop
lods
dec
mov
jbe
mov
std
cdq
dec
inc
add
es
sbb
add
mov
and
adc
imul
icebp
int3
xor
pop
aad
push
ret
push
sub
leave
mov
sub
stos
adc
test
ret
cmp
out
add
lods
pop
out
test
loop
mov
test
mov
ja
pusha
sahf
test
outs
add
sub
into
ror
push
lods
sub
movs
leave
test
mov
fmulp
or
push
sub
pop
adc
lods
cmp
popa
dec
dec
aam
pop
cdq
xchg
test
js
and
movups
aam
into
je
and
popf
(bad)
call
lahf
mov
inc
test
dec
dec
imul
call
loop
call
in
fucomip
mov
jmp
(bad)
ret
jb
inc
xor
or
adc
cli
mov
rcr
xchg
rep
shl
or
inc
xchg
or
sbb
add
mov
push
in
mov
mov
pushf
sbb
pop
adc
out
fisub
shr
jno
pop
push
ss
imul
adc
jle
sub
iret
out
sahf
icebp
ss
sbb
pop
mov
lods
xchg
cmp
xchg
fdivp
cmp
pop
nop
inc
sbb
pop
scas
pop
push
xchg
daa
ficomp
leavew
iret
add
test
mov
cmc
loopne
mov
pop
imul
or
scas
call
inc
loope
out
hlt
and
push
and
pop
cdq
pop
sbb
xchg
loope
test
dec
xor
fsubr
adc
(bad)
and
mov
mov
ror
lahf
jecxz
scas
repnz
ins
jmp
jl
pop
ins
and
cdq
dec
ret
dec
mov
inc
shr
add
push
cmp
pop
pop
popf
(bad)
movs
movs
mov
xor
das
jge
mov
mov
push
mov
push
imul
mov
retf
dec
dec
mov
outs
outs
iret
arpl
dec
jae
ss
push
enter
sbb
repz
xchg
jb
loop
adc
ret
cmp
push
mov
stc
dec
movs
mov
daa
push
jns
dec
inc
fnstsw
adc
icebp
add
sbb
leave
js
cmc
aas
(bad)
sar
mov
in
xchg
xor
lock
xlat
int
pop
test
aam
ins
cld
aas
cmc
jle
add
lds
adc
movaps
inc
(bad)
sbb
xchg
xor
cmp
retf
push
jp
cmps
push
xchg
jno
lods
pop
sbb
sbb
sub
inc
mov
sbb
aad
leave
fild
adc
jo
daa
test
pop
dec
jbe
std
in
fwait
js
xor
aad
add
jle
mov
outs
bound
not
dec
aam
movs
xor
int
adc
jecxz
enter
pop
jnp
addr16
cmps
aad
jae
and
jo
mov
mov
sub
pusha
iret
je
pushf
(bad)
cwde
repz
adc
xor
pop
add
push
jo
push
stc
gs
jge
movs
mov
scas
retf
push
dec
(bad)
sbb
xor
int
daa
(bad)
pop
lods
pop
cmp
push
(bad)
stos
shl
mov
mov
jp
adc
mov
aam
sub
add
or
sar
sub
and
sbb
adc
nop
ss
add
mov
jmp
cs
hlt
pop
or
adc
and
in
jo
leave
out
call
xchg
push
int3
ss
outs
xchg
popf
inc
call
call
sbb
xchg
sub
ja
inc
or
or
fidivr
bound
xor
js
and
aam
cdq
pop
pop
into
int3
and
mov
dec
mov
sub
jge
push
enter
and
lods
pop
iret
jp
lods
xchg
jmp
push
push
mov
cmp
xor
push
idiv
aam
ss
and
loope
(bad)
fs
or
sub
xor
lods
sahf
pop
push
mov
lods
dec
push
fmul
xor
dec
mov
dec
fidivr
dec
cmp
sbb
mov
and
icebp
jnp
inc
adc
adc
lock
cmp
mov
sub
xor
jbe
fiadd
ficomp
lea
pop
jmp
(bad)
mov
fs
mov
dec
mov
sbb
push
ficomp
retf
and
push
jnp
sbb
in
loop
(bad)
jecxz
cmp
fwait
int
inc
inc
outs
aas
imul
pop
dec
lea
das
mov
sahf
pop
(bad)
jge
(bad)
out
pop
sti
arpl
add
or
jae
mov
push
scas
cmp
std
and
jb
imul
and
xor
xlat
inc
add
ins
sbb
js
inc
es
and
fidiv
jae
xor
cmp
mov
lds
add
xchg
cmp
pop
shl
cmp
push
xchg
jle
aad
mov
(bad)
aad
push
call
std
(bad)
out
mov
movs
push
push
cwde
push
cmp
out
dec
add
call
fwait
cmp
sbb
or
push
push
popf
lods
fbld
pop
dec
fs
xchg
call
addr16
mov
jle
inc
in
(bad)
push
and
pop
push
daa
jg
neg
daa
mov
repz
sahf
dec
cmp
dec
cmps
inc
pop
out
inc
rol
and
outs
mov
sub
aam
sar
mov
iret
scas
cdq
inc
fbld
rcr
adc
outs
cmps
dec
test
cmps
adc
push
pop
ficomp
fsubr
movs
and
out
mov
xor
cmp
scas
xchg
xor
cmp
mov
xchg
push
pushf
mov
mov
jae
imul
shl
into
jmp
jbe
in
pop
fsub
hlt
vpshufhw
adc
jnp
aad
pop
dec
dec
jmp
dec
cmp
ds
cmp
add
pop
inc
ret
adc
test
loop
adc
pop
push
imul
dec
cmp
test
enter
xchg
je
out
push
out
pop
push
lock
xchg
push
sbb
retf
repz
sbb
xor
test
ret
mov
fsubr
mov
push
or
jp
xor
mov
cmps
push
sbb
in
loope
sahf
mov
(bad)
push
ret
xchg
mov
cmp
popf
ins
and
test
pop
jmp
cmps
ins
mov
dec
jb
sbb
push
ds
lahf
add
pop
test
or
in
inc
or
sub
xor
mov
loope
mov
repnz
cmc
or
(bad)
cmp
jo
aad
push
jae
push
or
dec
push
arpl
imul
lods
jmp
sub
movs
mov
or
or
jg
test
jne
pop
and
xor
loopne
pop
mov
enter
fst
adc
push
xchg
jo
dec
rcl
mov
out
cmp
or
pop
sbb
outs
xchg
push
mov
sub
shl
adc
xchg
fidivr
mov
mov
jp
retf
stc
data16
leave
cmp
mov
call
repz
xor
xor
pop
jg
xor
int3
mov
aaa
push
in
jmp
sub
cli
call
sub
int
xor
cli
sub
pop
fwait
fs
inc
pop
cli
jbe
in
pop
retf
add
push
push
mov
ja
jmp
push
cs
pusha
jnp
out
cmp
fisttp
mov
jp
xor
mov
cmps
fcom
iret
mov
arpl
imul
lods
cmp
cld
xlat
ret
fistp
jmp
mov
loope
clc
jno
(bad)
jmp
mov
iret
(bad)
mov
fild
dec
movhps
mov
std
inc
pushf
cmp
xchg
ds
fdivr
mov
popa
inc
add
push
retf
push
xchg
rcr
test
(bad)
xchg
push
adc
ins
fcmove
test
dec
cmp
or
in
ins
test
ins
loope
daa
pop
out
jns
mov
pop
stos
cs
(bad)
push
jmp
jo
push
or
icebp
xor
ins
and
sub
mov
(bad)
push
shl
fadd
push
sbb
or
xor
mov
cwde
inc
push
lea
rcl
mov
in
idiv
(bad)
pop
dec
imul
and
enter
jo
cmp
mov
repz
add
shl
or
popa
nop
jmp
mov
rcl
jecxz
mov
sbb
mov
push
clc
add
outs
mov
add
rcr
(bad)
(bad)
xchg
ret
push
pop
inc
jecxz
add
adc
repnz
les
lods
mov
pop
in
and
fucomp
add
ror
pop
in
lsl
out
mov
pusha
pop
mov
jnp
adc
inc
adc
mov
cmps
adc
fdiv
loope
daa
imul
jmp
add
jl
ins
cmp
popf
push
sahf
jb
aas
daa
jmp
sti
addr16
lods
aas
push
sbb
icebp
xchg
xchg
add
js
call
add
jne
jmp
cmps
jl
push
inc
(bad)
inc
push
movs
sub
ins
int3
jo
mov
cmp
mov
adc
in
mov
mov
iret
sbb
mov
lods
psrlw
mov
nop
sub
push
out
dec
nop
rcr
inc
fsubr
sub
imul
ficom
dec
add
jg
jge
cmp
xchg
ret
jmp
mov
add
scas
pop
xchg
sbb
(bad)
cmps
sbb
mov
push
mov
test
cwde
js
retf
sbb
xchg
add
cld
cdq
in
xchg
mov
add
les
je
add
fidiv
imul
jecxz
and
fnsave
in
mov
imul
jnp
dec
inc
lahf
retf
lock
fdiv
xor
xor
pop
jns
add
out
ret
rcl
cmp
(bad)
std
out
pusha
inc
in
push
loope
je
xor
mov
fmul
push
mov
in
rcl
cmc
and
int
push
dec
cmps
xor
or
mov
hlt
inc
add
pop
jb
scas
xchg
cmp
sbb
fnstcw
dec
mov
nop
add
shl
repnz
(bad)
cld
ret
or
mov
mov
jmp
stc
inc
scas
clc
cwde
fisttp
aam
retf
mov
pusha
adc
add
sbb
jmp
push
hlt
jg
dec
jae
(bad)
mov
test
rcr
sbb
pushf
ja
int
push
cmp
movs
dec
dec
adc
outs
xor
sub
fcomp
xchg
xchg
stc
leave
and
je
jbe
xchg
sti
in
ficomp
push
adc
nop
call
dec
adc
pop
lea
icebp
mov
ficom
or
push
scas
lahf
or
lods
(bad)
shr
lahf
push
stos
cmp
stos
or
iret
add
popf
call
retf
cmp
dec
out
dec
push
pop
mov
xchg
dec
aaa
jmp
call
mov
xor
in
lds
mov
sbb
pop
aaa
pop
sar
cld
stos
xchg
into
add
cmp
dec
stc
pop
cmps
popf
mov
sbb
retf
std
loope
pop
call
sub
pop
mov
xlat
shl
(bad)
ins
arpl
jecxz
loope
clc
add
or
mov
fwait
adc
or
and
inc
stos
hlt
and
jmp
push
mov
adc
adc
and
stos
adc
sub
pop
lds
call
jg
repz
pop
scas
dec
test
inc
add
and
cdq
cmp
inc
(bad)
add
xchg
sbb
aas
adc
gs
clc
inc
mov
xor
in
loop
aam
loop
and
mov
cmp
sahf
inc
movs
xchg
sub
or
add
adc
sbb
test
sbb
les
sar
xor
ja
(bad)
cmp
psllw
hlt
loope
unpcklps
ja
mov
push
cli
movsx
fwait
(bad)
pop
popa
pop
dec
inc
lea
sbb
scas
add
loop
sub
push
jg
pop
mov
cmp
ins
pmulhuw
dec
inc
jge
cmp
inc
addr16
or
add
std
popf
or
adc
jae
add
xor
sub
and
mov
mov
dec
mov
push
fcomip
nop
lods
add
jl
push
lahf
stos
xchg
cmp
dec
xor
sahf
js
adc
push
cmps
ror
popa
push
scas
dec
mov
jmp
xlat
cmp
jl
ja
(bad)
mov
adc
ja
xchg
add
pop
jne
and
jmp
mul
aam
je
jae
inc
retf
cwde
out
cld
inc
repz
jp
lds
enter
cmp
loope
cmc
pop
xchg
lods
adc
outs
push
push
les
es
mov
and
mov
out
xor
or
cmp
mov
jb
cmp
jne
mov
inc
shr
and
adc
in
ins
push
int
mov
or
push
outs
repz
jbe
adc
gs
fnsave
push
bound
jae
fst
fnsave
call
or
ins
outs
retf
push
cmp
add
lods
movs
out
ret
jne
aas
mov
push
mov
fnclex
sbb
xchg
xchg
pop
mov
xchg
imul
out
loop
inc
push
mov
cld
ins
jg
aam
aaa
cs
xchg
jp
movs
mov
mov
sbb
push
jl
jp
ret
add
loop
(bad)
mov
arpl
arpl
rol
sahf
jo
shl
sub
pop
aam
pop
hlt
mov
dec
sub
mov
mov
hlt
sti
mov
fistp
cmp
fdivr
into
jg
in
(bad)
jmp
jno
push
pop
pop
es
rol
addr16
stos
mov
ins
enter
jmp
shl
cmp
loop
rcl
pop
pop
xchg
or
shl
scas
out
add
xor
push
arpl
rcr
leave
jge
cwde
xchg
adc
retf
push
retf
push
jo
xor
out
xchg
push
out
or
xchg
aad
xor
je
ror
leave
jb
jmp
pop
repnz
adc
or
stc
jnp
pop
(bad)
push
mov
jmp
jb
out
hlt
fistp
icebp
dec
push
mov
pop
repz
jmp
cmps
inc
ficomp
pop
loope
test
xor
push
sbb
sbb
sbb
nop
xor
daa
cmps
arpl
scas
int
(bad)
mov
or
loopne
mov
lea
pop
xor
xchg
jns
(bad)
inc
fwait
push
mov
push
sbb
adc
inc
push
sar
scas
dec
sbb
mov
in
jmp
adc
cdq
(bad)
ins
sub
add
ins
rol
mov
jae
test
pop
add
inc
shl
jbe
sbb
jmp
inc
daa
pop
mov
cmp
mov
mov
xchg
repz
fimul
sub
jge
test
movs
arpl
xchg
aas
cmp
push
call
fdivr
stos
or
mov
jmp
sbb
mov
cmp
cmp
lock
ins
push
fcmovnb
shl
mov
add
mov
adc
rcl
xor
addr16
sahf
imul
push
loop
test
test
loop
jbe
cmp
xor
sub
push
jg
mov
adc
mov
push
jg
add
or
lock
cwde
sbb
xor
mov
ins
sub
in
or
repz
(bad)
sbb
add
fnstenv
mov
pop
inc
push
or
std
(bad)
xchg
(bad)
and
cmps
test
sub
mov
(bad)
ror
mov
xor
jmp
test
ret
addr16
movs
in
and
mov
xlat
icebp
mov
push
out
push
dec
sar
pop
cs
xchg
pop
ds
add
ja
std
pushf
outs
aas
sbb
xchg
pop
push
ins
mov
pusha
fdivr
outs
out
fs
imul
rcr
ret
imul
adc
fcmovb
sahf
dec
or
xchg
aad
push
fwait
fwait
ror
add
jmpw
pop
jne
(bad)
(bad)
retf
(bad)
scas
fisub
xor
in
test
push
cmp
pop
cmp
(bad)
pusha
(bad)
in
add
jae
cmp
inc
adc
retf
pop
sub
sub
(bad)
retf
mov
sbb
int
jmp
mov
test
out
dec
jg
pushf
(bad)
mov
mov
mov
shl
push
push
xlat
int3
or
jmp
and
retf
xchg
or
cmp
clc
in
dec
sbb
mov
cmp
rol
jecxz
sbb
jmp
xchg
popa
fs
(bad)
js
mov
popf
inc
cmps
dec
les
aas
xor
xlat
mov
or
xchg
shl
push
pop
adc
sub
cli
push
mov
scas
jb
mov
sub
imul
fs
push
add
fidiv
cmps
jns
aam
jp
push
or
inc
mov
enter
out
sahf
shl
and
and
scas
sbb
addr16
inc
jo
xor
cld
fwait
fwait
adc
in
or
mov
sub
or
cmp
xor
pop
call
cmp
fucomp
mov
jle
xchg
loope
and
jns
mov
inc
int3
mov
jno
sti
jecxz
add
xor
imul
outs
sbb
mov
mov
cmps
mov
xchg
cmp
add
scas
movs
rol
push
jg
dec
add
test
cmp
cs
xlat
ret
test
xor
stos
repnz
fild
int
les
les
add
jns
fidivr
shl
jmp
ret
sahf
inc
das
push
add
iret
ja
inc
push
push
cli
out
pop
dec
test
retf
int
push
push
scas
sbb
add
mov
js
and
enter
cld
fsubr
pop
cwde
mov
sti
outs
mov
pop
lods
xor
fwait
inc
loopne
jbe
aad
dec
jns
xchg
pop
into
or
stc
xchg
test
add
loopne
sbb
es
int3
fist
xor
loope
jmp
mov
imul
jl
push
and
push
fdivr
push
das
leave
adc
cmp
out
pop
adc
imul
add
add
stos
jmp
les
mov
outs
inc
pusha
fwait
popf
in
jne
push
shl
mov
repnz
push
cmc
inc
cmc
xlat
sub
push
cmps
loope
or
inc
int3
iret
mov
mov
ret
xchg
jle
cwde
sub
mov
cmps
into
outs
mov
(bad)
sbb
ds
shr
mov
push
mov
sbb
jnp
mov
int
imul
retf
and
cmps
or
add
repz
mov
xor
(bad)
test
outs
stos
xor
pop
mov
mov
add
pop
pop
jle
jmp
ja
cwde
fsubr
loop
push
mov
xchg
sti
jb
mov
xchg
mov
sbb
add
(bad)
jnp
cmps
xchg
fld
pop
push
call
cmc
les
adc
and
or
out
movs
rol
xor
das
jae
lock
movd
sub
aaa
inc
adc
cmp
rcr
sbb
stc
add
mov
les
or
mov
sbb
xchg
sub
dec
movs
mov
out
movs
and
ins
js
adc
inc
dec
add
mov
clc
dec
in
mov
in
lods
sbb
aas
int
test
mov
mov
jp
lods
loope
adc
cmc
neg
xchg
mov
leave
inc
adc
and
mov
xchg
out
or
mov
mov
mov
inc
pop
xor
jl
icebp
push
into
aaa
loop
jno
dec
cmp
and
mov
adc
mov
push
(bad)
mov
(bad)
int
cmp
mov
loope
xchg
outs
sub
test
(bad)
mov
adc
aas
mov
in
sti
test
cmp
fidiv
push
fcomp
dec
arpl
push
call
lods
mov
mov
(bad)
cmp
xor
or
in
mov
mov
into
or
xchg
cmp
and
shl
ins
into
sub
xor
mov
cmp
loop
mov
stos
mov
(bad)
mov
push
jb
dec
aaa
dec
xchg
stos
inc
jns
mov
mov
sub
scas
cmp
pop
div
pushf
sub
pop
push
xor
jecxz
pop
or
in
hlt
cmc
push
je
stos
xor
push
inc
stc
hlt
mov
out
shr
dec
add
movs
and
clc
stos
mov
outs
or
lds
add
int3
sbb
cmp
int3
jns
add
hlt
sti
mov
cmp
cdq
cmp
pop
inc
push
aaa
mov
test
cmp
jecxz
(bad)
stos
or
add
mov
scas
jns
jge
jae
xor
in
push
je
in
call
sub
sbb
jmp
out
and
pop
(bad)
daa
das
bound
sub
ret
outs
(bad)
scas
sub
adc
cmp
cld
rcr
fcom
(bad)
fist
jg
mov
jmp
stc
push
jp
das
pop
(bad)
daa
addr16
pop
push
retf
pop
xchg
sar
pop
(bad)
ja
push
push
mov
pop
xor
out
mov
cmp
push
shl
pop
push
jmp
adc
stc
dec
mov
ret
fist
mov
sahf
retf
or
pop
int
repnz
jge
jp
daa
out
push
fs
outs
add
push
leave
div
jl
sbb
leave
mov
clc
repnz
out
cmp
mov
dec
ret
push
xchg
push
xchg
or
jg
in
add
or
ins
lea
push
popa
xlat
rcr
cs
jmp
jno
out
mov
inc
inc
ds
push
or
pop
in
shl
push
sub
and
and
mov
cmp
and
push
test
push
ja
movaps
add
popf
inc
scas
add
fmulp
scas
inc
mov
test
sub
scas
inc
imul
lock
jl
push
mov
lods
fs
aad
cs
std
lods
sbb
in
cmp
lods
enter
movs
dec
dec
cmc
les
je
test
push
test
fisub
mov
dec
adc
dec
or
jns
movs
imul
lds
mov
sub
fs
sbb
hlt
sub
pusha
cdq
add
pop
push
ds
bound
mov
adc
dec
int
jl
or
adc
xchg
jbe
mov
inc
cmps
jmpw
mov
jnp
into
inc
sub
das
pop
mov
movs
ds
push
call
push
sbb
mov
fwait
(bad)
pop
or
jecxz
xchg
mov
adc
jg
rol
mov
push
enter
and
shl
or
out
fwait
mov
enter
mov
mov
push
dec
inc
mov
cmp
push
pop
inc
sysret
pop
pop
or
sar
mov
or
retf
jno
mov
cmc
in
pop
jbe
das
and
cmp
push
icebp
in
mov
adc
pop
inc
fisub
push
stos
hlt
leave
xchg
dec
jae
sub
push
cld
inc
mov
out
leavew
cs
out
sbb
mov
fst
sub
sbb
push
mov
shr
or
push
mov
shl
aam
dec
xchg
inc
jmp
call
std
mov
sbb
ret
sbb
jbe
cli
and
inc
inc
xchg
daa
or
dec
ss
rcl
xor
jp
pop
out
popa
cmp
dec
leave
push
mov
cmc
dec
aam
bound
dec
hlt
and
leave
push
or
mov
sub
push
dec
mov
pop
adc
mov
inc
sbb
aaa
stos
cmp
mov
jnp
sbb
fist
cmp
pop
push
pop
adc
call
retf
fwait
and
adc
out
jl
ror
out
push
push
cmp
sub
jg
jmp
cmc
push
(bad)
cwde
sub
adc
shl
call
cmp
mov
push
out
adc
pop
mov
sbb
cmp
pop
sti
push
loopne
fild
sbb
inc
lods
lds
jno
cmp
clc
loopne
out
in
(bad)
jnp
cmp
jl
sub
ss
fptan
jo
(bad)
mov
not
xor
push
or
push
inc
cmp
cmc
or
fistp
popf
inc
xchg
repz
icebp
outs
retf
icebp
jae
sbb
nop
mov
in
sub
adc
cmp
cmp
lods
mov
push
mov
(bad)
repnz
gs
fstp
cmp
xchg
dec
in
and
aam
mov
mov
paddusb
push
je
xchg
popf
xchg
lock
dec
push
jne
cli
js
sub
jns
mov
inc
xchg
pushw
in
in
jmp
repnz
mov
push
push
push
lea
push
sub
pop
aas
mov
mov
idiv
add
(bad)
sbb
lock
sub
popa
(bad)
iret
cmps
pop
mov
sub
push
inc
inc
push
cmc
mov
gs
(bad)
aas
xchg
movs
je
out
pop
xchg
jmp
push
adc
fiadd
das
test
mov
xchg
jg
sub
bound
xor
jae
aaa
adc
mov
fistp
(bad)
pop
jle
movs
sbb
mov
mov
lea
sti
rcr
xchg
popa
aad
outs
mov
and
test
fdiv
call
sbb
pop
or
fwait
push
lahf
add
jg
xlat
push
sbb
stc
lock
ficomp
adc
cmp
dec
mov
jmp
loopne
jne
mov
(bad)
or
mov
dec
mov
xor
movs
or
xchg
pop
mov
inc
shr
test
mov
inc
sbb
add
mov
jecxz
adc
mov
jb
pop
add
test
nop
pop
push
cld
mov
xchg
jle
shl
push
sub
test
out
lahf
jge
and
mov
repnz
inc
daa
xchg
add
lock
adc
dec
jb
dec
mul
dec
dec
jp
cmovp
mov
sti
sbb
xor
dec
jl
sti
nop
inc
mov
mov
push
aad
and
mov
bound
fs
add
pop
pop
(bad)
iret
mov
scas
cmp
in
daa
imul
enter
pushf
mov
add
je
loopne
jnp
jp
std
xchg
into
cmp
adc
shr
mov
out
je
mov
enter
ins
add
jg
pushfw
push
dec
ret
gs
mov
sbb
push
call
jb
jle
movs
nop
sbb
in
int3
inc
jae
dec
mov
les
add
jl
es
retf
in
ret
xchg
cmps
xor
and
ja
pop
xchg
xchg
ja
test
jg
cmp
ja
xchg
push
jmp
cmp
jecxz
mov
jge
sti
inc
dec
(bad)
icebp
xor
hlt
inc
ficom
add
call
adc
cwde
and
mov
test
cmp
mov
dec
jg
adc
jns
out
sbb
jecxz
sbb
bnd
sub
neg
mov
mov
mov
arpl
cwde
and
stos
sbb
cmps
mov
mov
mov
dec
and
mov
sbb
jecxz
sbb
lods
in
lds
je
or
ret
and
add
dec
mov
test
(bad)
fisttp
xor
pop
rcl
rcr
fnstsw
sub
dec
gs
adc
cmp
(bad)
push
jp
in
(bad)
lahf
jnp
inc
cmp
xor
rol
jp
loope
cdq
imul
popf
cmp
and
mov
retf
xor
sbb
or
and
sub
rcl
xor
pop
ret
cmp
ret
push
loopne
xor
(bad)
mov
loopne
xor
inc
aad
mov
frstor
mov
dec
int3
imul
xor
jle
jle
pop
jp
dec
and
test
mov
ins
cmps
out
push
push
mov
lods
xchg
pop
dec
(bad)
(bad)
sub
in
xchg
push
rol
mov
(bad)
xlat
pop
out
into
cmps
push
pop
xlat
out
lahf
xchg
sub
pop
call
add
stos
pop
mov
dec
ss
stc
dec
imul
sahf
sub
std
sbb
inc
repz
test
jb
dec
add
fs
mov
xchg
fcom
pop
int
xchg
jecxz
cmp
(bad)
jae
dec
sbb
mov
fwait
scas
sahf
(bad)
in
jle
xor
icebp
and
and
jno
fcomp
mov
call
outs
add
and
popa
and
sbb
and
and
pop
in
aaa
dec
test
add
shl
ins
fadd
mov
cmp
xchg
mov
pushf
push
div
or
ret
jmp
dec
int
mov
dec
mov
jmp
add
mov
dec
outs
shl
call
or
jb
(bad)
call
mov
mov
jne
mov
pop
test
ins
loopne
dec
mov
ss
imul
lods
or
mov
jno
push
ret
push
mov
mov
adc
add
push
enter
add
outs
pop
push
push
xor
aas
dec
cmc
sbb
sbb
jecxz
cmp
dec
mov
dec
mov
enter
mov
push
xor
and
fstp
push
pop
sbb
dec
call
mov
outs
outs
mov
jne
hlt
loope
out
aas
jp
repnz
inc
repnz
lods
xchg
jg
(bad)
(bad)
jmp
add
cmp
call
mov
aad
iret
daa
in
sbb
push
xchg
stos
outs
xor
in
jmp
out
or
ret
shl
mov
cmp
or
ds
je
in
push
pusha
mov
dec
repz
sub
mov
xchg
aam
mov
lods
arpl
bnd
pop
xor
setno
out
mov
in
inc
push
lea
cmp
test
aad
rcr
outs
inc
call
stc
jne
sbb
cs
inc
pop
(bad)
int
jp
mov
dec
stc
retf
xchg
mov
jl
test
retf
mov
push
or
pop
jecxz
dec
(bad)
mov
or
ret
mov
loopne
fld
push
fsubrp
sbb
out
(bad)
mov
jp
bound
jge
popa
jo
and
arpl
(bad)
adc
mov
test
dec
out
cmp
ins
push
(bad)
mov
cwde
sub
mov
fistp
xlat
shr
loope
(bad)
xchg
sub
pop
dec
prefetch
mov
sbb
ret
fidivr
mov
adc
into
in
test
int
cmp
mov
sbb
pushf
push
jne
test
cmps
push
push
cmps
icebp
adc
adc
cmps
or
mov
fisttp
inc
jmp
pop
stos
in
xor
mov
or
call
fidivr
sbb
es
out
xchg
iret
sbb
jmp
shr
push
(bad)
cld
push
mov
sub
pop
push
in
adc
adc
xor
bound
fwait
(bad)
jo
add
nop
pushf
push
xchg
sub
loope
inc
add
adc
sbb
fild
and
jmp
(bad)
cli
in
lock
jmp
lds
pop
fwait
adc
or
pop
cs
jp
lods
xchg
mov
stos
pusha
xchg
mov
sub
(bad)
stc
std
and
and
or
mov
stc
shl
mov
xchg
inc
in
push
cmp
lock
ss
aas
mov
dec
jg
dec
rol
push
xchg
rol
out
sar
nop
push
shl
pop
dec
pop
(bad)
cs
push
addr16
clc
sar
dec
arpl
sti
push
sbb
ins
test
cmps
fld
xchg
add
(bad)
fcmove
cdq
dec
adc
outs
cmps
daa
push
aaa
sbb
cmp
mov
mov
or
fld1
adc
pop
adc
imul
mov
xchg
in
mov
lods
retf
ins
cmp
pop
cmp
lea
sub
pop
or
mov
sub
je
push
mov
int
adc
jbe
and
xchg
ins
test
jmp
pop
and
dec
(bad)
(bad)
xchg
into
mov
outs
aam
int3
fdivp
lea
pushf
inc
out
aad
or
iret
scas
inc
cdq
popa
scas
inc
or
add
fisttp
movs
fwait
jb
inc
outs
mov
movs
mov
mov
pop
xchg
dec
scas
lds
push
mov
jne
es
mov
ins
outs
adc
push
ret
or
lds
(bad)
dec
js
mov
mov
push
cmp
test
test
and
cmp
imul
mov
pop
ins
idiv
push
mov
or
rol
xor
add
sbb
dec
dec
xchg
pop
int3
popf
xchg
loop
xchg
rcl
dec
cmp
add
(bad)
cmp
lods
or
push
jecxz
jbe
mov
fs
mov
add
push
sahf
aad
das
mov
(bad)
mov
sbb
mov
inc
ret
jg
add
test
jecxz
dec
lahf
js
fistp
ret
xchg
popf
pop
cmc
dec
push
pop
gs
jae
cmps
add
in
and
xchg
jg
inc
into
fistp
pop
dec
sub
mov
repz
sbb
mov
mov
mov
jae
mov
retf
inc
push
jecxz
aaa
int
out
stos
xchg
push
out
and
pop
jg
mov
push
hlt
and
in
jp
xor
pusha
or
pop
sub
sbb
fs
sbb
or
das
call
(bad)
push
sbb
sbb
cmp
dec
cmps
pop
out
test
stos
into
lods
dec
leave
or
(bad)
adc
ins
dec
sub
cdq
sar
sbb
fnstsw
sbb
and
fcmovnbe
jno
mov
inc
shl
jns
jo
(bad)
enter
int
les
sub
test
jb
cmp
in
mov
repz
jmp
adc
xchg
or
clc
cmps
pop
outs
sbb
mov
cmps
add
and
ficom
push
pop
outs
out
ds
dec
pop
adc
and
xchg
add
sbb
icebp
inc
test
in
icebp
das
test
cli
sbb
mov
pop
call
(bad)
popa
retf
(bad)
adc
jmp
mov
cmp
jle
or
inc
fcom
xchg
ret
mov
clc
repz
pop
xchg
pop
nop
mov
rcl
int3
mov
jmp
mov
rcl
out
jge
imul
scas
leave
dec
fstp
popf
in
mov
fnstcw
mov
sahf
jmp
aaa
push
clc
aam
ss
enter
adc
in
dec
js
or
jnp
xor
retf
hlt
fdiv
add
pop
jp
inc
adc
arpl
add
icebp
sub
mov
popf
jge
pop
repz
test
(bad)
popa
rcl
sub
das
(bad)
adc
push
sub
xchg
rcr
lea
or
fs
sti
mov
inc
pop
and
pop
scas
mov
stc
sub
mov
addr16
arpl
inc
xchg
dec
fwait
add
mov
jno
pop
ds
dec
mov
xchg
xor
mov
inc
lea
sahf
mov
inc
lock
push
cs
dec
scas
add
std
mov
les
movs
mov
or
push
push
push
sub
rcl
and
inc
sbb
add
test
inc
dec
sub
add
mov
mov
cmp
ja
push
ja
ror
imul
clc
pop
scas
cs
lea
and
push
jns
mov
loopne
and
pop
ret
add
and
call
dec
add
addr16
adc
nop
cmp
pop
or
sbb
add
or
adc
pop
pop
lods
pop
and
xor
bound
push
mov
add
enter
cmp
mov
clc
sti
xchg
ret
push
loop
clc
mov
cmp
fld
addr16
test
(bad)
jge
sbb
jae
daa
push
dec
adc
ss
push
jo
out
fcmovnbe
mov
push
test
std
fidiv
push
out
jmp
fdiv
adc
pop
ins
cmp
sbb
in
mov
in
in
dec
adc
jb
xchg
inc
inc
imul
hlt
out
ror
not
sub
xor
xchg
sbb
mov
dec
jno
xor
ret
mov
clc
jb
gs
dec
xchg
push
iret
xor
lds
rcl
sbb
and
gs
xchg
lahf
lea
and
mov
add
push
push
xchg
stos
mov
xchg
cmp
icebp
mov
mov
addr16
push
stos
stos
lods
or
cwde
(bad)
mov
loopne
jnp
mov
push
cli
mov
jge
cmp
movs
imul
add
mov
sub
jb
or
ret
inc
xor
ja
(bad)
jbe
call
ret
aas
mov
adc
xlat
mov
ret
ins
jbe
or
lea
push
cmp
add
fistp
test
icebp
in
xor
(bad)
rol
paddusw
retf
cld
loopne
(bad)
pop
mov
pop
cli
hlt
push
jae
cmp
push
sar
daa
fisubr
sub
mov
cdq
out
add
and
jo
mov
push
mov
scas
add
jl
xor
scas
sub
and
stos
bound
lea
les
ror
xor
adc
mov
dec
xchg
cmps
dec
xchg
popa
and
adc
xor
shl
sbb
inc
mov
aad
add
add
pop
movs
inc
addr16
pop
mov
mov
cmps
std
mov
popa
ds
fisttp
icebp
push
inc
into
xchg
pop
sbb
lahf
adc
adc
pop
in
pushf
dec
stc
jno
mov
fdiv
cmp
cmp
out
out
setge
mov
mov
pop
add
add
neg
fcmovne
add
ins
ret
es
xor
adc
ds
es
or
repnz
jle
mov
je
out
ja
sub
push
psrlq
mov
mov
aaa
jg
pop
xor
jecxz
out
lods
mov
nop
dec
cmp
pop
inc
xchg
iret
stc
add
fmul
out
mov
iret
in
push
aas
jne
or
cli
pop
ror
outs
sti
sub
sbb
pop
or
idiv
int
push
rcr
cwde
mov
ja
retf
dec
loop
and
push
cmp
test
or
jns
(bad)
cmp
mov
push
pop
cdq
push
xchg
outs
fbld
idiv
mov
mov
adc
int
and
(bad)
cs
jns
loope
jg
lahf
stc
xchg
inc
adc
or
daa
mov
mov
aam
rcl
fnop
retf
mov
fwait
jmp
mov
das
or
jb
push
jo
mov
adc
push
(bad)
sbb
cmp
leave
aam
xchg
xchg
retf
rol
test
lea
xchg
(bad)
push
imul
pop
add
and
adc
mov
inc
imul
pop
pop
test
adc
mov
mov
loopne
xchg
push
gs
mov
xor
sub
sbb
cmp
cmp
std
in
inc
jae
std
dec
clc
cmps
xor
rcr
mov
jbe
sbb
ja
dec
shr
iret
and
js
popf
adc
jnp
inc
mov
pop
sub
and
inc
retf
cs
aam
and
add
test
fistp
mov
out
inc
sbb
add
adc
cmp
rcr
(bad)
xchg
stos
or
shr
fidivr
xchg
neg
sub
xor
ja
lahf
aam
mov
cmp
mov
loop
or
xchg
jmp
jle
dec
ins
jle
xor
or
xchg
ret
fistp
pop
mov
xor
dec
adc
pop
cmp
mov
pop
push
add
and
(bad)
lods
jg
fistp
int
aaa
push
cmp
mov
and
int3
sbb
imul
push
in
mov
mov
(bad)
pop
inc
leave
adc
mov
into
fld
xor
xchg
sbb
test
popf
push
push
jo
shl
je
cmp
mov
mov
push
sub
in
out
mov
add
dec
lock
lods
push
loopne
(bad)
mov
mov
xchg
mov
stc
stos
xchg
in
or
lds
ret
daa
fcomi
pop
inc
dec
mov
ret
cmp
jl
nop
cmp
pop
ja
adc
inc
adc
in
add
idiv
pop
scas
enter
fidivr
dec
inc
mul
daa
in
inc
ins
or
das
inc
jnp
mov
sti
xchg
pop
out
push
mov
aam
shl
adc
inc
mov
fisubr
pop
aam
mov
and
push
aaa
adc
inc
in
cmps
in
sub
inc
es
add
movs
iret
test
(bad)
add
fwait
xchg
repnz
mov
mov
adc
add
adc
daa
or
aam
sti
mov
stc
rcr
leave
mov
mul
push
movs
sahf
mov
mov
mov
cmp
cwde
fild
mov
call
scas
lock
hlt
push
xlat
enter
fcmovnb
outs
stos
aam
inc
fst
int3
and
ss
cmp
gs
outs
mov
push
mov
fcmovnb
das
popf
clc
popf
and
dec
push
in
mov
ret
rcr
rcl
mov
adc
xchg
jbe
call
retf
pop
xchg
(bad)
xchg
lahf
repz
xchg
mov
push
cmp
mov
mov
rcr
inc
add
xchg
sub
xor
ficomp
in
mov
push
and
pop
sbb
xrelease
adc
mov
sbb
clc
sub
xchg
int3
cmp
mov
outs
push
sub
mov
pop
sahf
into
lods
adc
pop
mov
dec
and
test
mov
jmp
jecxz
cmp
xchg
sbb
sbb
arpl
sbb
lahf
repz
mov
rcl
sti
out
cmc
fcmovb
pop
inc
push
mov
fild
adc
xchg
mov
call
push
jno
cs
gs
xor
call
dec
cs
add
in
(bad)
cmp
loop
es
add
or
push
in
jg
sti
push
jbe
adc
movs
xchg
cmp
add
arpl
(bad)
loope
mov
fiadd
xchg
jo
push
adc
jo
cmp
jg
jno
(bad)
in
ja
inc
jp
rcr
aas
xor
(bad)
(bad)
fistp
je
hlt
aas
ja
mov
push
lahf
push
dec
jmp
pop
and
mov
mov
add
sti
sub
repnz
loopne
mov
sbb
jmp
nop
fst
daa
fucomip
pop
mov
xchg
cld
pop
mov
mov
push
loop
pop
or
inc
push
sti
cmc
pop
retf
mov
cmp
mov
push
push
(bad)
jge
inc
mov
pop
call
mov
add
cmp
in
pop
cmp
adc
mov
enter
push
mov
xchg
lds
dec
dec
cmps
scas
xlat
pop
jns
inc
inc
std
lea
xchg
lahf
and
out
scas
pusha
fmul
add
js
xchg
xchg
add
jle
cmp
(bad)
retf
fidivr
call
xor
pop
or
add
aas
jecxz
push
test
xchg
xlat
loopne
xchg
mov
shr
retf
fdiv
sub
sub
scas
or
and
sub
ret
stc
jb
ins
add
aaa
ds
pop
(bad)
out
out
jno
(bad)
xor
mov
ja
ret
mov
cld
ror
pop
lahf
fstp
mov
ja
or
xchg
ja
ficom
mov
jle
xor
test
sbb
xor
push
and
mov
cmp
aas
ds
and
or
clc
ds
xchg
call
imul
loopne
jg
(bad)
mov
pop
mov
jbe
xor
in
cmc
cmp
ret
adc
aam
es
into
movs
cmp
add
pushf
fwait
pop
addr16
add
cmps
push
pop
pop
cmp
sub
jp
or
or
add
imul
mov
popa
retf
sub
or
js
sbb
xchg
ss
mov
sbb
pusha
mov
(bad)
mov
mov
push
sahf
les
dec
push
das
mov
test
xlat
aaa
popf
and
imul
(bad)
hlt
mov
in
xor
inc
cli
test
rol
mov
push
seto
xor
cld
int
retf
adc
(bad)
push
rcl
fld
adc
aam
sbb
into
xor
cld
rcl
pop
xchg
jge
loopne
clc
jb
xchg
fs
cmp
mov
lahf
xchg
pop
dec
add
in
add
jmp
(bad)
push
dec
and
xor
(bad)
icebp
push
xor
dec
jp
mov
shl
cmp
or
inc
sub
out
mov
push
sbb
popa
add
sahf
and
int3
fdiv
mov
aam
sbb
mov
mov
pop
bound
mov
lea
adc
mov
mov
mov
gs
repz
and
push
das
cld
les
int3
add
inc
cs
mov
scas
xchg
dec
lahf
pop
mov
pop
jbe
mov
jp
ins
stos
(bad)
adc
data16
or
iret
cs
ins
retf
rcr
jns
in
jecxz
and
dec
xchg
lea
les
jp
test
add
outs
data16
push
(bad)
iret
ret
and
pop
cmp
pop
jp
jnp
shl
jo
adc
or
push
test
sbb
stos
div
and
std
in
imul
popa
mov
dec
sbb
jne
push
pop
cld
cmp
sub
xor
adc
fiadd
add
ffree
jg
xor
retf
lods
xlat
add
jns
mov
pop
ret
mov
scas
jbe
inc
hlt
stc
data16
dec
xchg
xor
cmp
shl
jp
mov
dec
mov
jbe
sub
jg
mov
fnstsw
or
add
(bad)
mov
jo
push
inc
push
xor
cs
aam
mov
lods
dec
pop
dec
lea
sbb
mov
inc
lods
pusha
sbb
push
jno
call
xchg
sbb
imul
in
rcr
ret
mov
xor
fist
js
sti
sub
inc
or
or
mov
mov
adc
pop
js
jo
movs
stc
int
test
add
stos
cmps
repz
or
xchg
push
sub
jne
and
out
inc
jp
clc
mov
nop
cmp
aas
inc
fcmovb
sbb
cdq
jl
enter
out
pop
push
icebp
dec
lea
test
jno
xor
pop
push
push
test
xor
inc
mov
shl
imul
adc
add
ins
jmp
ror
mov
jnp
not
out
jb
push
push
or
mov
mov
and
cs
imul
xchg
cmp
jbe
test
cdq
inc
pusha
fsubr
popf
mov
and
xchg
pop
add
jmp
or
lahf
test
cmp
xor
cmc
imul
mov
rol
push
ret
(bad)
and
and
test
add
sub
mov
data16
cld
mov
lods
inc
mov
xchg
rol
sbb
test
inc
lahf
jmp
mov
imul
outs
pop
adc
(bad)
sti
ficom
mov
or
mov
out
fnstenv
lahf
sub
lods
or
and
loop
cmps
repz
rcr
xor
or
push
out
xchg
out
je
xchg
(bad)
fdiv
imul
call
(bad)
aad
jmp
icebp
popf
dec
sub
xchg
dec
xchg
test
int3
scas
adc
mov
jl
jmp
xor
clc
fldcw
jo
sbb
adc
push
stc
jns
dec
and
add
or
mov
add
call
add
xlat
sbb
loop
cmp
and
pop
neg
cld
inc
inc
call
data16
mov
or
ins
push
xchg
icebp
fnstenv
mov
inc
out
cmp
movs
aas
cdq
push
sbb
cli
mov
loope
stos
retf
and
fcom
ret
mov
xchg
inc
shrd
xor
or
(bad)
jo
mov
push
or
stos
inc
jmp
xor
cmps
pop
jbe
rcl
dec
inc
sbb
xor
or
das
loope
xor
pushf
fyl2xp1
out
mov
fwait
out
pushf
push
sbb
imul
out
inc
in
bound
dec
xchg
sbb
cdq
xchg
int3
xor
and
je
fisttp
call
cmp
jb
gs
mov
test
test
ret
addr16
fild
mov
push
(bad)
cmp
sar
(bad)
loop
inc
fdivr
jo
sub
js
fbstp
push
push
ret
push
cmp
mov
aam
or
addr16
ins
int3
inc
jb
not
push
mov
in
sbb
fwait
or
inc
call
cmp
imul
or
jae
or
lahf
jp
add
fiadd
(bad)
jbe
rcr
jns
jmp
test
sbb
rcr
jle
jmp
mov
mov
sbb
xor
js
mov
xchg
push
gs
cmp
(bad)
xor
cmc
dec
cmp
stos
fistp
sub
cmp
lods
(bad)
std
popf
push
fs
jo
push
cmp
push
push
in
in
xor
dec
fs
inc
mov
popf
mov
jle
scas
jmp
and
and
in
pop
sub
cmp
cmp
push
ret
mov
push
inc
loope
fisubr
popa
popf
mov
dec
jecxz
call
pop
pop
outs
xor
sub
mov
out
mov
mov
(bad)
in
jns
adc
pop
ror
mov
push
mov
fistp
aas
cmp
push
popf
stc
stos
mov
push
sub
jle
addr16
jg
push
jnp
inc
es
jno
jbe
xchg
xor
mov
loop
data16
lea
imul
push
mov
loop
popf
(bad)
div
loope
inc
scas
pop
lahf
lahf
and
adc
dec
ds
push
lock
mul
lods
or
adc
jl
fisubr
mov
pop
int
(bad)
add
and
iret
test
cs
and
in
hlt
fisubr
enter
push
mov
bound
arpl
lea
push
mov
stos
loop
jnp
repz
lds
dec
xchg
inc
leave
shl
fisub
ret
pop
mov
pusha
cwde
into
stos
mov
outs
cli
pop
lea
xchg
stos
push
xor
mov
xor
and
mov
stos
add
(bad)
adc
push
mov
retf
fwait
into
ja
inc
aaa
push
cmp
int
dec
movs
mov
rcr
add
test
or
or
adc
jmp
sub
mov
in
pop
mov
jecxz
pop
rep
pop
arpl
mov
es
xchg
int
or
repz
inc
inc
pop
nop
addr16
frndint
inc
inc
pop
jecxz
mov
sub
movs
adc
push
retf
inc
xlat
js
add
clc
loop
or
les
sub
sub
xor
or
push
fisttp
popf
inc
add
or
jg
bound
jmp
call
xor
dec
mov
test
dec
leave
(bad)
xor
jecxz
xor
xchg
jecxz
into
data16
cdq
sub
in
lds
clc
shl
pop
sbb
push
and
fnstenv
or
mov
or
jmp
fwait
mov
into
jmp
inc
add
(bad)
sbb
mov
push
call
lahf
aad
out
push
test
ss
outs
mov
jle
ja
mov
adc
adc
and
ror
jg
mov
std
push
pop
inc
xlat
shl
(bad)
sar
or
jno
add
test
mov
push
sti
sub
ds
cmp
pop
stc
ins
jmp
rol
xchg
pop
repnz
add
arpl
(bad)
mov
jb
gs
xor
xor
ja
dec
cmp
sahf
dec
cmp
je
xchg
rcr
js
mov
mov
jb
sbb
pop
sbb
xor
mov
lods
jae
ins
aas
push
cmps
push
lods
pop
pop
int
js
repnz
in
jp
xchg
imul
sbb
sbb
lock
cmp
popa
(bad)
cwde
mov
add
push
sar
jns
and
dec
mov
les
imul
sub
add
pop
gs
das
mov
fwait
add
sahf
leave
dec
int3
mov
jmp
mov
cmovl
add
add
sti
push
pop
adc
in
xor
in
xor
dec
mov
jno
dec
out
ret
push
js
pop
xchg
mov
not
cmp
je
mov
and
mov
ds
in
and
shl
add
xchg
aam
jl
scas
in
jnp
ss
sbb
push
inc
and
out
sub
jge
hlt
cmp
sbb
stos
push
adc
dec
add
add
dec
xor
adc
out
pop
jge
movs
adc
pop
out
sbb
ficom
aam
out
cmp
jmp
or
mov
fcomp
test
push
mov
stc
or
pop
jns
outs
aad
push
rol
in
push
lea
(bad)
iret
mov
cmp
test
mov
inc
stos
(bad)
mov
jo
movq
sar
(bad)
or
jnp
(bad)
pop
and
les
mul
aad
adc
cmps
push
adc
jo
add
jmp
gs
call
fs
loope
pop
dec
mov
sahf
es
sbb
mov
pop
dec
adc
lods
cmp
mov
shl
jne
leave
leave
sbb
add
dec
repnz
rcr
push
push
test
sbb
(bad)
aad
mov
add
fiadd
jmp
jno
mov
xor
cmp
stc
(bad)
pop
mov
pop
fadd
scas
pop
xor
or
or
push
xchg
dec
inc
enter
jecxz
(bad)
jmp
into
vpmacsww
dec
cmp
test
test
in
mov
fstp
lea
test
outs
fstp
icebp
pop
or
and
dec
in
adc
(bad)
and
rcr
push
mov
pop
les
cli
div
jp
icebp
add
and
out
push
and
cmc
ds
cli
pop
fwait
repnz
sbb
dec
out
shld
cs
aas
pop
pop
push
and
loop
sbb
mov
fld1
rcl
cld
aad
xchg
jns
mov
jecxz
and
and
popf
sbb
push
sbb
adc
bound
test
sbb
jns
ja
xchg
sbb
push
push
movs
dec
push
mov
icebp
addr16
pushf
repz
ficomp
dec
retf
pushf
ins
int
repnz
cmp
push
cmps
scas
mov
ins
xchg
fcomp
ins
lods
dec
cdq
mov
sub
(bad)
out
daa
iret
iret
inc
jo
push
gs
loope
cmp
ret
(bad)
out
int3
pop
jg
movs
push
loopne
push
cwde
cmp
dec
cmps
fdiv
(bad)
or
fdiv
in
mov
or
pusha
test
mov
xchg
jne
cdq
test
std
enter
arpl
stc
lahf
fcomip
(bad)
push
mov
jmp
push
stos
jae
(bad)
retf
out
mov
mov
fnstcw
(bad)
cmp
and
inc
sub
inc
pop
or
outs
sub
mov
pop
or
mov
cmps
or
(bad)
cwde
pushf
pop
ret
int
je
xor
or
mov
scas
mov
ins
aam
aam
add
push
sbb
sbb
(bad)
xor
add
push
scas
cmp
ret
sbb
dec
(bad)
out
loopne
les
add
cs
cld
pop
mov
push
rcr
pop
loopne
es
or
std
xor
out
inc
lds
or
jge
ins
lods
sbb
xchg
jecxz
mov
mov
jecxz
jle
mov
xor
inc
sub
lock
dec
das
sbb
and
aaa
inc
repz
loopne
xchg
or
and
ret
mov
jmp
jns
mov
cld
adc
rol
adc
push
aam
sahf
in
jae
ficomp
push
adc
adc
inc
cmp
push
mov
inc
jnp
mov
jge
out
jmp
or
inc
add
in
mulps
daa
test
sbb
mov
mov
mov
sub
sti
test
sub
(bad)
out
ss
stc
inc
hlt
dec
in
popf
pop
pop
in
mov
ret
fxch
add
mov
push
xchg
daa
cs
and
xor
jge
stos
mov
das
loopne
cwde
mov
call
push
sub
enter
jecxz
(bad)
loop
mov
mov
jp
mov
imul
mov
push
(bad)
lock
dec
mov
cli
pop
add
dec
mov
stos
pop
xchg
popa
push
aad
jmp
add
jno
add
dec
pop
and
pop
sub
mov
ds
pop
iret
cmp
pop
dec
call
jmp
cli
sbb
inc
xor
cmps
push
repz
bound
je
ss
push
js
sub
add
cdq
xchg
lods
scas
jnp
xor
movs
cmp
call
mov
lea
outs
out
xchg
movs
fsub
sub
add
rol
adc
xchg
iret
adc
retf
dec
xor
mov
retf
xor
push
cmp
cmp
dec
cmp
or
stos
sub
xchg
xchg
iret
ins
lds
jp
stc
ror
sub
fdivr
out
popf
push
xor
dec
dec
xor
dec
pop
out
ss
rol
cmp
lahf
mov
pusha
fiadd
push
leave
cmp
arpl
scas
repz
mov
cld
out
das
inc
cmps
jno
repz
mov
push
in
rcl
out
inc
ins
into
out
xchg
int
mov
shl
rol
retf
fnsave
mov
ja
push
lods
outs
jbe
cwde
jmp
or
fstp
repnz
stc
cld
lods
and
and
popf
sahf
cld
movs
xor
mov
stos
and
inc
in
out
pop
sbb
jno
adc
sub
sbb
sbb
inc
mov
gs
and
mov
call
test
in
and
pop
ss
sbb
cmp
dec
lds
ret
sbb
mov
jge
mov
out
fnstenv
xor
lahf
adc
xor
popa
mov
jle
cmps
loope
jl
pop
loopne
and
mov
xchg
fcomp
fisub
fcomp
dec
mov
daa
mov
hlt
jg
cmp
scas
mov
add
(bad)
loope
in
ds
jg
fmul
inc
cmp
retf
mov
xor
das
pop
fs
push
inc
add
test
add
mul
sub
cwde
jecxz
push
cmps
(bad)
cmp
xchg
popa
out
fimul
test
xchg
test
dec
std
push
inc
xchg
mov
xchg
mov
mov
cmp
push
out
cli
fmul
ja
retf
daa
add
pop
pop
psrlw
or
aaa
xchg
push
fist
int
das
adc
in
and
movs
cmp
(bad)
iret
mov
mov
lock
ja
mov
cli
cmps
jmp
fisub
mov
inc
add
leave
fisubr
jg
(bad)
jg
adc
nop
into
mov
cmp
loop
xor
loop
(bad)
mov
outs
jle
daa
test
jle
push
jl
and
add
ins
aad
pop
data16
jg
not
movs
enter
in
mov
mov
bound
dec
fcmovnu
adc
js
mov
push
inc
loopne
lock
xlat
cli
es
dec
xor
ja
jge
stos
jmp
in
xor
fcomp
addr16
outs
js
sub
(bad)
sub
or
cmp
sbb
retf
pop
push
jo
adc
repnz
jns
in
cld
sbb
jno
mov
dec
and
jnp
ja
mov
push
jae
lods
inc
pop
xchg
aaa
sub
call
jg
cmp
fstp
cmp
jl
cmp
bound
pushf
mov
ins
fsub
mov
mov
lods
or
fsub
cmp
cmc
arpl
ficom
or
sar
sbb
div
or
ss
push
xchg
mov
mov
or
jno
sub
test
aas
popf
int3
daa
bnd
popw
mov
xor
xor
test
nop
(bad)
mov
inc
adc
div
in
mov
mov
ja
jne
inc
ins
aam
stos
xor
sbb
cmp
sub
ret
inc
mov
mov
cmp
imul
scas
pusha
inc
repnz
adc
sub
pop
aas
add
push
das
scas
imul
cmps
sbb
jp
mov
stos
in
int
xor
retf
call
dec
mov
js
leave
aam
push
push
gs
inc
loopne
test
in
sti
loop
sahf
inc
je
shl
or
sub
jae
push
shl
fwait
(bad)
cmp
sub
or
call
push
cmc
ret
(bad)
iret
ds
inc
add
pushf
mov
mov
in
adc
sbb
das
fucomp
out
std
jmp
xchg
inc
or
loop
xor
xchg
and
ja
cli
jg
dec
xor
or
push
xchg
(bad)
in
je
mov
ds
mov
mov
jle
mov
ret
xchg
lock
nop
adc
stos
mov
cmp
xchg
or
mov
(bad)
fcmovnbe
mov
push
add
push
mov
iret
out
retf
mov
adc
push
aaa
dec
mov
jnp
je
and
and
retf
mov
mov
es
adc
add
clc
je
daa
loop
outs
push
mov
jmp
mov
mov
jne
inc
in
sti
mov
adc
sbb
mov
push
fsubr
fisub
pop
gs
ins
sbb
jae
adc
push
adc
test
cmp
cmc
mov
xor
stos
pop
jl
pop
jns
addr16
test
mov
inc
movd
fild
mov
xor
cld
xchg
test
jge
test
sub
mov
data16
mov
lahf
pop
nop
cld
into
xchg
pop
(bad)
das
and
lds
inc
aad
mov
leave
pop
mov
or
sub
sub
icebp
(bad)
out
imul
push
int3
in
mov
cmp
adc
outs
mov
push
loope
xchg
cmp
test
mov
sub
cwde
cdq
scas
cmp
jmp
(bad)
cmp
cmp
icebp
(bad)
aaa
aas
xor
fdivrp
inc
push
pushf
shl
cmps
inc
push
pop
popa
push
adc
cmps
push
ja
xchg
cmp
push
mov
scas
aam
push
dec
adc
(bad)
sbb
daa
cmp
jp
(bad)
addr16
and
outs
jnp
bound
ret
mov
(bad)
daa
dec
mov
scas
dec
fidiv
dec
and
gs
js
repz
hlt
sti
push
sbb
movs
push
std
sbb
push
mov
inc
cmp
repnz
jmp
mov
jecxz
sub
cli
inc
popa
gs
fisub
adc
add
iret
mov
mov
loop
es
xchg
push
pusha
push
jg
xchg
pop
shl
mov
mov
inc
mov
imul
movs
ret
fisttp
pop
jp
or
sbb
mov
test
ss
lock
repz
and
sahf
adc
cs
pusha
into
shl
and
inc
xor
nop
in
fild
xchg
cs
pop
sar
cmp
mov
xor
inc
int3
lea
adc
das
mov
aad
mov
repnz
in
xchg
sub
mov
test
lods
mov
pop
lea
mov
loope
or
sub
sbb
(bad)
jge
iret
adc
mov
std
stos
cld
leave
jnp
push
xchg
int3
cs
adc
pop
jmp
popa
sub
(bad)
mov
jno
jmp
pop
aad
outs
xor
push
mov
adc
push
sbb
adc
push
enter
push
mov
cmp
mov
mov
aam
fisttp
icebp
mov
int
stos
pop
jnp
xchg
cmp
call
mov
push
outs
push
hlt
shl
jge
add
stos
mov
mov
loope
stos
jmp
je
imul
cli
sbb
js
les
scas
clc
ss
jg
arpl
jbe
dec
mov
iret
out
mov
adc
push
sub
cmp
or
jl
mov
sbb
mov
icebp
imul
mov
mov
and
inc
pop
stos
mov
fstp
push
test
cwde
or
out
sub
and
in
jp
mov
sub
fstp
rcl
fidivr
jg
iret
hlt
pop
mov
sbb
ins
dec
cmp
loope
jge
cld
xchg
pop
fs
mov
push
lock
jo
or
mov
mov
dec
icebp
pop
or
inc
int
or
xchg
sub
jno
mov
pop
sub
push
xor
cmp
(bad)
pop
or
jl
xchg
out
inc
mov
bound
cmp
dec
or
inc
bound
xchg
and
mov
sub
les
xchg
lock
mov
and
call
inc
and
and
fiadd
inc
jbe
lods
(bad)
push
jmp
rol
xor
xor
pop
enter
fs
aaa
call
icebp
cld
int3
xor
in
jge
adc
dec
mov
push
movs
jno
add
stos
mov
cmp
aaa
das
xor
fxch
jp
xor
add
pushf
arpl
les
stos
neg
fbld
mov
xor
lods
dec
and
jne
cmovle
sub
leave
aad
(bad)
lock
scas
mov
out
sub
jb
jno
push
dec
cmc
jbe
(bad)
sti
sub
cli
dec
cmp
xchg
mov
cmp
and
cdq
(bad)
and
repz
popa
data16
xchg
out
mov
sub
sub
push
lahf
pop
aas
sti
sub
push
inc
out
int
xchg
int3
retf
mov
aam
or
mov
adc
nop
lahf
dec
je
movs
call
out
movs
in
pop
imul
or
mov
mov
mov
xchg
adc
in
mov
retf
mov
sbb
das
jmp
lods
mov
in
mul
xor
out
sbb
jl
js
mov
je
repz
cli
loop
dec
retf
cmp
dec
pop
hlt
call
xchg
outs
cmp
add
test
sub
or
aad
pop
mov
popa
jnp
dec
jae
push
test
sub
pop
sbb
mov
jae
xchg
nop
dec
sti
cmp
mov
repz
push
cmp
popa
and
ja
in
sub
jmp
into
fwait
dec
bound
sar
cmps
scas
pop
mov
rol
call
fisubr
adc
xchg
push
cdq
dec
mov
test
pop
in
mov
test
out
shr
ins
jmp
imul
adc
mov
fcomip
sbb
rcr
mov
xor
in
adc
push
sub
imul
icebp
test
mov
paddsb
adc
les
add
dec
push
adc
jae
dec
cld
cmp
mov
inc
cmp
xor
stc
adc
jmp
mov
popf
cmp
sub
in
imul
pop
sbb
pop
xchg
add
retf
jnp
cmp
and
sbb
dec
dec
sub
jge
out
push
pushf
adc
push
out
aaa
jae
inc
lar
outs
(bad)
sbb
or
mov
or
ror
push
mov
je
out
sti
mov
mov
cmps
xchg
xchg
icebp
mov
cld
fsubr
(bad)
retf
cld
xor
sub
iret
rcr
mov
pop
jge
sbb
cmp
sub
test
not
pop
movs
mov
mov
pop
ss
pop
add
dec
cdq
xor
jecxz
sbb
js
push
inc
jne
xchg
test
xor
loope
inc
fcom
add
sub
cmp
repz
rcr
jb
jg
bound
add
(bad)
hlt
mov
lds
rcr
pop
sub
imul
push
cmp
add
xchg
cmc
mov
popf
test
cs
dec
push
xchg
pop
mov
aaa
cwde
jge
fld
jle
pop
std
and
jo
das
pop
out
mov
dec
jp
rcr
jmp
cmps
sbb
es
push
sbb
jnp
pop
mov
mul
es
sub
adc
sub
adc
push
add
std
dec
ss
xor
adc
stc
das
cmps
inc
iret
pushf
jns
sub
add
ins
lahf
leave
call
fdivr
lahf
push
ins
cmp
adc
sahf
aad
mov
(bad)
add
jno
sahf
inc
sbb
aam
dec
call
into
test
in
or
in
(bad)
shr
std
jl
shl
xor
xlat
cmp
sar
mov
mov
in
cmps
sub
out
out
ret
jle
adc
ret
cs
stos
jnp
cmp
test
or
les
nop
(bad)
dec
test
xor
in
stos
(bad)
inc
inc
repnz
ja
daa
mov
in
mov
jo
mov
cli
inc
xchg
loopne
cld
xchg
adc
inc
add
out
add
repz
test
lea
mov
retf
xchg
popf
sahf
mov
dec
pusha
lahf
lock
jmp
sbb
push
pop
(bad)
sbb
sahf
out
xchg
mov
inc
cmp
mov
dec
xor
fmul
push
clc
dec
xchg
into
mov
call
add
ror
loopne
mov
jns
pop
mov
test
jae
out
dec
jl
sub
mov
sbb
sub
jl
js
int3
pusha
mov
ror
(bad)
push
inc
mov
adc
jo
or
dec
push
inc
mov
mov
rol
xor
dec
stc
push
sub
jo
xchg
push
aad
push
in
mov
dec
ret
enter
mov
ins
fistp
lods
shr
fild
call
pop
and
mov
cld
jle
out
push
mov
mov
out
xchg
sbb
adc
xor
jnp
inc
mov
sbb
loopne
imul
jbe
aas
cwde
mov
xor
or
leave
push
push
call
adc
fiadd
shl
dec
mov
push
jae
adc
mov
or
jo
push
mov
jbe
push
fld
mov
enter
outs
add
enter
out
sub
popf
jae
pop
dec
das
xchg
mov
loop
iret
les
clc
inc
jne
pushf
mov
pop
movq
les
jb
cs
pop
mov
into
ins
leave
in
mov
pushf
hlt
adc
imul
mul
test
sbb
shl
dec
aaa
and
jbe
pop
dec
jne
mov
in
fistp
cmp
mov
jmp
or
ret
test
cwde
shr
inc
mov
retf
xor
push
push
pop
push
stc
movs
push
add
and
retf
cmps
mov
sbb
push
dec
sar
out
push
xchg
fcom
pop
repnz
sub
outs
es
pop
and
dec
cwde
adc
inc
mov
mov
jmp
add
pop
stc
push
(bad)
mov
popf
xor
adc
xchg
push
jo
fcomi
inc
dec
std
mov
jp
in
mov
jg
pop
out
fst
cmp
jae
mov
cs
adc
repnz
js
cmp
pop
shr
add
mov
xor
mov
mov
mov
mov
mov
jbe
retf
push
add
pop
icebp
data16
test
test
ins
das
jp
mov
mov
sub
add
call
fs
(bad)
out
push
push
stc
ds
and
pop
das
pop
cmp
in
jae
sbb
out
push
jno
add
sar
mov
pop
sar
enter
out
mul
shl
cs
test
mov
std
and
popf
shl
pop
cli
xchg
outs
dec
sti
sti
enter
xchg
int3
shl
pop
cld
dec
sbb
xchg
cmp
sbb
xchg
sbb
imul
mov
mov
imul
movs
in
sar
pop
jns
push
jecxz
shr
in
jno
push
jns
rol
out
dec
in
sar
mov
fucomi
pop
mov
(bad)
clc
jle
add
lahf
pop
mov
mov
sahf
cmp
mov
retf
ins
ja
lock
mov
jl
mov
(bad)
cmp
xlat
add
arpl
xchg
adc
jle
stos
call
outs
push
repnz
add
repnz
bound
(bad)
in
inc
inc
or
ret
mov
add
rcl
pop
sbb
pusha
add
mov
cmp
xor
push
mov
xor
ds
das
lahf
push
popa
sub
pop
mov
test
adc
xchg
aas
popf
(bad)
data16
pop
loop
fcom
outs
push
jge
loopne
dec
outs
add
scas
movs
push
jnp
stos
in
lock
cs
popa
clc
dec
push
push
and
or
pop
int
mov
loope
sbb
mov
scas
lods
sahf
adc
mov
das
jecxz
pop
push
les
xchg
out
sub
xor
mov
ss
dec
mov
adc
pop
popf
cmp
out
pop
ret
jno
test
sbb
cs
push
xchg
sub
push
hlt
mov
inc
ret
jmp
sbb
xor
outs
mov
rol
in
cmp
dec
xchg
shl
jmp
inc
repnz
dec
mov
xchg
in
push
sub
mov
pop
pushw
push
add
popf
cmc
out
mov
fiadd
mov
pusha
(bad)
arpl
adc
mov
frstor
or
pop
out
mov
mov
neg
or
jmp
call
gs
ins
add
sahf
dec
div
imul
xchg
scas
pop
dec
mov
adc
jg
loope
mov
or
es
sbb
xlat
dec
cmps
popa
fs
xor
xchg
pop
pop
dec
scas
retf
fcom
fstp
stc
out
jmp
sbb
jge
mov
or
lods
jl
shl
cmp
inc
mov
in
xchg
pop
retf
in
xchg
jge
push
sbb
sbb
sub
outs
and
fisubr
add
sbb
push
add
dec
out
loope
(bad)
mov
repnz
(bad)
jl
push
mov
mov
jecxz
mov
pop
or
out
fimul
mov
or
lods
dec
loope
add
(bad)
pop
imul
fsub
mov
push
cmp
cwde
cmp
retf
or
add
out
or
mov
jae
and
inc
loope
repz
dec
je
jp
xor
xchg
test
nop
sahf
mov
xchg
fs
push
push
repz
pop
cmp
addr16
jg
test
adc
jo
in
jne
mov
je
movs
jl
dec
daa
dec
sub
cli
int
mov
jo
enter
xchg
lock
cmp
sub
dec
pop
pop
test
lods
add
test
pop
push
sub
and
and
pop
movs
or
ud0
pushf
enter
jp
sar
lods
in
cmc
test
aas
jno
jle
mov
sahf
mov
(bad)
call
jmp
adc
push
ret
and
shl
retf
mov
pop
outs
loope
mov
arpl
xchg
push
jne
mov
inc
and
in
push
aam
lahf
cmps
xor
imul
mov
and
test
jp
fcomip
(bad)
imul
push
adc
inc
jmp
xor
add
lods
jne
repnz
and
adc
retf
out
push
dec
sbb
outs
cmp
dec
or
mov
test
xchg
or
rol
sti
das
xchg
cwde
cmp
test
push
pop
adc
add
adc
cmp
mov
into
sub
xchg
inc
xchg
movs
or
pushf
pop
out
xchg
sub
ret
cmc
fild
or
cwde
ret
jnp
cld
stos
ror
jecxz
sbb
js
aam
mov
pop
mov
int3
add
jmp
repnz
jle
and
cmp
mov
mov
test
mov
test
add
sub
mov
sbb
jb
pop
test
inc
scas
and
das
xchg
mov
sar
fsub
clc
jg
jecxz
loopne
adc
(bad)
imul
sub
mov
sbb
call
or
mov
es
dec
aad
lods
cmps
jmp
pushf
dec
jae
das
push
leave
popf
or
pop
inc
scas
ss
shl
mov
iret
dec
mov
cli
test
mov
or
xlat
inc
or
out
ret
jae
fcmovnb
shr
mov
mov
test
popa
outs
fisubr
push
dec
jo
bound
xor
xchg
sbb
retf
ret
adc
or
shl
nop
cwde
cmp
ja
jl
sbb
jl
int
test
loop
ins
cmc
jmp
sub
scas
xor
push
mov
cwde
je
scas
pop
mov
mov
pushf
mov
stos
clc
jmp
mov
loop
out
sahf
adc
mov
or
pop
mov
or
dec
mov
test
movs
push
pop
and
or
mov
adc
std
lods
lock
dec
dec
es
lahf
pop
int
or
lods
(bad)
mov
call
inc
push
xchg
pusha
cmp
imul
add
cmps
dec
ret
rol
sub
adc
es
dec
adc
hlt
sbb
sbb
test
or
mov
mov
mov
(bad)
stc
sub
cli
pop
sub
(bad)
xchg
cmp
ds
xchg
in
bound
cmp
mov
pop
inc
(bad)
in
test
jmp
dec
cli
xor
loop
in
repz
fcmovb
inc
sar
inc
cld
sbb
call
aas
fimul
inc
(bad)
cmp
inc
push
popf
push
cmps
icebp
cmp
imul
push
ja
dec
adc
call
das
mov
and
xlat
iret
mov
rol
push
xor
add
add
(bad)
xchg
adc
pop
lea
jns
int3
jne
jbe
jnp
out
lea
fs
jne
xlat
in
les
ins
jg
call
jb
fsub
xchg
sub
movs
dec
cli
sar
je
xlat
mov
(bad)
ss
das
ss
cwde
sub
fidiv
sar
or
jbe
ins
idiv
fld
and
aaa
cmps
es
mov
stos
and
mov
cli
imul
jge
aam
ror
sbb
dec
ins
mov
jl
xor
outs
mov
fdiv
das
lea
jg
shl
mov
fdivr
mov
shl
mov
addr16
cmc
int
enter
loope
fadd
outs
(bad)
fcomp
in
call
or
movs
and
inc
push
in
aas
push
cmp
xor
push
mov
add
ds
mov
lahf
jl
or
clc
scas
fwait
push
inc
xor
pop
or
out
sahf
sti
out
add
push
push
xor
cdq
int
or
push
ja
mov
repnz
mov
jmp
push
ins
js
jl
repnz
add
mov
mov
adc
dec
mov
into
dec
retf
and
add
into
stc
int
jno
push
inc
xlat
mov
movs
mov
aad
retf
jge
stc
mov
imul
mov
inc
pusha
and
pop
ja
jecxz
and
mov
sbb
adc
cmp
mov
xor
and
sbb
clc
jb
mov
pop
inc
call
pop
dec
mov
bound
bound
xchg
lahf
pop
mov
push
mov
aam
movs
sbb
in
repz
test
xchg
imul
call
outs
test
cmps
neg
mov
outs
cmp
mov
gs
in
shr
push
mov
int3
nop
idiv
xchg
fstp
je
movs
cmp
mov
add
adc
aaa
mov
out
gs
push
loopne
jno
jnp
lods
jg
stos
dec
mov
xchg
test
out
ret
or
cmp
fwait
hlt
mov
jge
and
into
(bad)
inc
mov
or
enter
mov
loopne
adc
daa
push
push
and
loope
cmp
push
mov
pop
jge
push
xchg
lahf
out
mov
retf
mov
shl
xor
adc
mov
cld
dec
mov
xchg
dec
aaa
adc
in
mov
or
out
or
pop
inc
std
xor
sub
repz
inc
(bad)
dec
stos
(bad)
mov
or
fwait
movs
cmc
in
sub
(bad)
push
mov
jbe
in
inc
adc
ss
add
(bad)
adc
push
push
push
mov
mov
mov
loop
push
stos
jmp
aaa
stos
mov
xor
sbb
cld
sub
imul
loope
fwait
aas
push
or
sahf
push
inc
pop
mov
pop
cmp
sub
repz
adc
retf
bound
pop
jl
(bad)
iret
movs
mov
imul
jp
cmp
push
adc
dec
cmp
or
lods
(bad)
loop
or
in
stos
gs
iret
call
jno
xchg
sub
inc
xchg
xchg
rcl
xor
add
pop
iret
mov
push
dec
push
daa
xchg
cmps
lds
sbb
lds
clc
call
and
adc
mov
or
cmp
mov
std
das
push
inc
aas
loope
aas
inc
fcom
out
pop
mov
imul
mov
test
stos
xor
cmp
imul
xor
push
lods
add
ins
popa
push
sahf
addr16
dec
mov
test
enter
outs
sub
push
pop
mov
pushf
movs
mov
lock
sub
out
pop
pusha
rol
shl
mov
jne
repz
hlt
shl
mov
fmul
push
ds
mov
test
sub
retf
sub
addr16
jne
stos
movs
dec
gs
cmp
ret
rcl
mov
mov
(bad)
call
int3
nop
loope
test
fimul
sub
iret
imul
bound
xor
sbb
aaa
enter
stos
shl
pusha
aaa
cld
xchg
add
mov
xchg
adc
jns
in
inc
leave
add
movs
ss
enter
dec
adc
ss
pop
or
ss
mov
mov
cmps
loopne
fisubr
lds
test
aas
push
movs
loope
les
xor
fidiv
leave
inc
out
adc
xor
int
cmp
movs
mov
(bad)
scas
lods
sbb
and
ficom
mov
and
test
aaa
es
(bad)
cmp
sub
cmps
mov
lods
add
imul
iret
mov
popa
pop
bound
inc
inc
fsubp
ss
ins
push
mov
add
std
lock
jbe
and
test
pop
cmc
push
and
(bad)
jmp
sahf
jbe
inc
and
pop
addr16
dec
mov
push
mov
sti
pop
dec
or
repz
jecxz
jae
loope
mov
pop
lods
xchg
add
push
loope
cmp
push
sub
xor
stos
push
rcl
mov
sbb
pusha
dec
pop
retf
dec
xchg
inc
shl
lods
dec
clc
jmp
sbb
lahf
push
or
aaa
push
ins
mov
pop
jno
mov
retf
out
jno
push
iret
out
xchg
push
jo
(bad)
cmps
pop
cmp
lds
ret
xchg
xchg
push
inc
ja
xchg
push
mov
mov
je
inc
jmp
daa
sahf
xchg
cmp
jmp
es
data16
in
mov
mov
dec
pop
mov
retf
imul
ins
xchg
xor
adc
jmp
in
sub
gs
cld
nop
shl
enter
rcl
add
mov
loopne
jns
add
jle
daa
push
mov
lods
repz
fcom
test
push
movs
mov
or
pop
leave
and
adc
jp
mov
cmp
daa
psubusw
xchg
aaa
and
jmp
xchg
push
fistp
and
scas
scas
out
(bad)
xlat
sti
outs
mov
inc
retf
jnp
push
mov
into
ins
or
xchg
dec
dec
mov
ret
dec
mov
addr16
or
add
and
push
inc
ret
cmp
in
or
leave
sbb
inc
out
sbb
(bad)
jno
cwde
stos
and
cmp
repz
and
pop
push
je
and
cmp
into
pop
jne
sahf
xchg
mov
cld
call
xor
and
push
xlat
push
repz
jno
jbe
test
ret
mov
or
pushf
add
add
fild
mov
push
dec
aas
pop
or
lea
int
mov
nop
add
fwait
stos
ja
(bad)
sub
mov
js
rcl
xchg
or
pop
(bad)
aad
mov
jg
push
mov
hlt
es
out
(bad)
and
mov
scas
loopne
xchg
(bad)
cwde
inc
jle
pop
jmp
(bad)
jg
ret
(bad)
(bad)
and
test
pop
push
push
jl
adc
fidivr
iret
stos
fs
and
push
sbb
fld
movs
fidiv
xor
xor
add
gs
scas
cmc
cs
sub
cmps
mov
sub
or
scas
jb
cmp
stos
mov
mov
fcom
icebp
div
je
mov
bound
movs
mov
loope
sbb
loop
adc
mov
cmps
test
xchg
dec
and
push
ret
mov
(bad)
xor
jg
push
pop
cmps
add
(bad)
xchg
imul
std
sub
lds
and
leave
fucomi
fadd
and
mov
or
and
scas
pop
pusha
inc
push
mov
mov
ins
leave
push
inc
dec
inc
fs
mov
cmp
mov
pop
sbb
push
cli
jno
sahf
dec
das
hlt
sar
icebp
push
mov
pop
push
shl
bound
loopne
dec
lfs
push
pop
cmp
mov
inc
sbb
jmp
mov
xor
pop
psubw
mov
sbb
stos
mov
(bad)
in
pusha
adc
jb
add
pop
call
sbb
mov
adc
xor
mov
adc
push
and
das
das
fdiv
inc
(bad)
ficom
inc
xor
dec
push
(bad)
cmp
adc
push
xchg
test
sti
inc
push
pop
stos
repz
lock
push
jg
pop
out
(bad)
loop
mov
mov
adc
push
scas
xor
jp
pop
and
test
pop
outs
push
xor
sub
iret
dec
pop
(bad)
inc
sbb
adc
sub
dec
ror
inc
fisttp
es
push
or
sbb
jo
in
dec
(bad)
pop
int
sahf
call
xor
xchg
lea
lods
js
(bad)
mov
scas
sub
es
sbb
and
add
stos
iret
or
and
xor
push
es
lea
sbb
fwait
cmp
or
cld
jmp
mov
imul
sub
pop
or
mov
ins
xchg
mov
inc
push
int
aam
cmps
rcr
loope
jbe
jp
pop
lock
add
push
mov
outs
sub
mov
(bad)
xchg
inc
jne
xor
push
xchg
sbb
das
mov
into
xchg
jb
sbb
ret
xchg
adc
imul
mov
gs
or
sar
leave
inc
shl
jns
call
xchg
shl
in
cs
aad
sub
xchg
movs
dec
mov
daa
mov
pop
xlat
shr
clc
cld
xchg
movs
nop
jbe
std
test
dec
(bad)
repz
mov
and
sub
push
in
jecxz
fstp
sbb
dec
and
sti
push
leave
push
fidivr
ficomp
movs
enter
jae
mov
mov
out
iret
jle
push
movs
xlat
fs
pop
push
cmps
xor
dec
jg
popf
inc
(bad)
fild
outs
mov
cmp
pop
les
or
mov
xor
push
shl
sbb
sahf
pop
mov
int
movs
jns
jmp
stc
xor
or
sub
jb
pop
scas
fistp
cmovs
xchg
in
sub
call
clc
shl
aam
mul
das
dec
sbb
pop
(bad)
aam
dec
pop
int
jle
out
clc
inc
pop
loop
mov
or
mov
icebp
xchg
jecxz
fs
in
shr
add
or
fxch
jns
cmc
rcr
cli
adc
lahf
loope
inc
push
xchg
fdiv
jbe
sub
inc
cmp
lds
and
pop
jo
nop
scas
repnz
mov
mov
inc
clc
popf
adc
mov
ja
mov
stos
call
sbb
sub
sahf
retf
xchg
rcr
or
push
sahf
scas
sbb
dec
ror
push
(bad)
in
int
xchg
push
jp
inc
mov
mov
jae
and
retf
xchg
mov
outs
les
pop
fmul
mov
sbb
in
out
mov
inc
xchg
ss
ror
pop
out
jecxz
pop
cwde
sbb
push
cmc
call
lock
shl
rol
push
sbb
cmp
dec
xchg
imul
out
jb
mov
xchg
mov
xor
ret
(bad)
lds
dec
or
jne
(bad)
dec
push
into
inc
imul
and
and
push
daa
add
dec
(bad)
call
es
(bad)
into
xchg
push
cmp
xchg
sbb
jbe
add
sub
mov
xchg
lods
sub
scas
(bad)
sti
xchg
ret
pop
out
(bad)
aam
rcr
jb
adc
inc
sbb
mov
ja
(bad)
fdivr
mov
add
loopne
jecxz
mov
call
cmp
rol
stos
das
pop
sub
dec
aas
sub
jno
or
add
daa
sbb
fsub
mov
fcomp
mov
repnz
cmp
ins
push
add
outs
inc
jmp
add
cmp
cmp
pop
shl
cmp
into
jnp
pusha
mov
cmps
ds
lahf
cmc
sbb
pop
cmp
shr
dec
xchg
aas
mov
xchg
popf
push
ret
cmp
pushf
add
add
sub
mov
iret
mov
mov
mov
sub
ins
sbb
add
enter
pop
sar
cmp
or
scas
cli
fimul
ja
xor
iret
outs
adc
cwde
sbb
inc
sub
mov
dec
leave
out
sub
(bad)
jp
push
mov
in
inc
mov
data16
inc
adc
jne
pop
xchg
pop
dec
sti
ins
arpl
clc
mov
je
mov
mov
(bad)
cmp
cmp
out
cs
xlat
mov
jbe
adc
inc
mov
pop
and
xchg
pop
imul
aad
jae
pop
(bad)
push
mov
and
scas
repnz
bnd
mov
and
xchg
div
cmp
push
inc
fcom
rcr
xchg
dec
icebp
aad
ret
je
xchg
add
cmp
pop
push
cld
dec
adc
cmp
aam
xlat
dec
jmp
pop
push
xchg
sbb
mov
xchg
adc
into
jnp
and
mov
enter
mov
movs
push
sub
ins
ins
out
popa
pusha
inc
sbb
cmps
pusha
and
aam
mov
fisub
push
push
fs
push
sub
or
add
dec
es
into
sub
cli
cdq
mov
add
imul
sbb
pop
mov
sbb
pop
dec
jecxz
sub
les
repz
out
popf
or
pop
jg
(bad)
sub
add
lock
sti
cmps
sub
push
sbb
into
cmc
mov
pop
imul
jae
pop
pop
add
cli
push
sbb
mov
mul
mov
fldenv
gs
cs
add
arpl
test
inc
pop
mov
mov
sub
idiv
cmps
ins
pop
xlat
jmp
adc
loopne
xlat
jno
pop
test
cmp
stos
pop
gs
xor
push
fild
sub
das
xchg
pop
push
dec
daa
cmp
or
movs
ins
sub
dec
mov
sub
push
vpermil2ps
push
les
add
pusha
cs
sub
into
and
imul
pop
xchg
add
mov
inc
adc
cmp
in
pusha
cwde
add
rcr
stos
fidivr
lods
daa
xor
push
cmp
cmp
mov
or
sub
and
iret
xor
pcmpeqw
stc
inc
mov
xor
aam
es
adc
inc
rep
xchg
mov
xchg
pop
cli
outs
mov
adc
xchg
and
sbb
(bad)
mov
js
ficom
(bad)
dec
or
hlt
pushf
call
mov
push
and
in
jo
and
js
mov
fld
jnp
add
xchg
mov
mov
shl
jmp
jo
ins
cmp
mov
les
cmps
push
loopne
in
cs
loope
and
push
pop
repz
add
int
fdiv
idiv
stos
loope
pop
inc
pop
adc
outs
cmp
stc
or
pop
(bad)
xor
sbb
(bad)
popf
popa
movs
repnz
iret
jnp
stos
jno
add
fstp
jnp
test
pop
push
cmp
movs
cs
pop
adc
sub
or
repz
popa
daa
cld
xchg
mov
mov
mov
xchg
std
and
aam
(bad)
push
cmp
retf
push
sub
imul
sub
in
lods
test
shl
mov
into
sbb
push
pop
dec
dec
(bad)
mov
int
je
pop
xchg
xchg
aam
inc
ficom
sbb
and
or
hlt
cmp
xor
xchg
jecxz
mov
jmp
sub
pop
cmp
enter
jecxz
ins
retf
into
scas
lock
push
xlat
mov
cli
pop
out
dec
jns
stos
pushf
cli
mov
loop
fisubr
(bad)
arpl
mov
xchg
fs
fs
out
aad
dec
sahf
addr16
pushw
or
pop
xchg
nop
add
fst
or
adc
push
dec
add
jno
(bad)
pop
call
div
xor
loopne
inc
adc
ins
mov
mov
repnz
pop
mov
inc
dec
xor
mov
outs
loop
popa
inc
sub
lds
cmp
xor
jp
xchg
jecxz
fidiv
sub
out
mov
cmps
int3
push
sbb
std
stos
jg
sub
cwde
cmp
adc
loope
cmp
cs
das
mov
das
dec
add
xchg
push
cwde
mov
and
mul
cmp
and
inc
data16
cli
jecxz
call
hlt
(bad)
pop
sbb
xlat
push
test
aam
(bad)
push
mov
mov
push
and
fdiv
inc
jo
lock
jl
add
dec
or
test
outs
adc
mov
or
hlt
movs
jmp
pop
mov
mov
adc
pop
xchg
sahf
dec
dec
jns
retf
sub
ins
icebp
shl
iret
test
test
in
mov
pop
call
pushf
cld
pop
inc
jno
mov
dec
cmp
jmp
pop
jne
cmps
pop
mov
cmps
pop
sub
pop
ins
inc
push
add
xor
daa
push
pop
cmp
or
dec
xchg
ja
cmp
lock
push
jbe
cmp
cmp
xchg
or
fmul
cmp
stc
cmp
enter
push
cmps
dec
cdq
nop
pop
add
push
and
lds
rcr
dec
shr
stos
call
data16
or
xchg
dec
daa
out
cmp
int3
lea
dec
xor
scas
push
or
shl
hlt
mov
push
cmp
icebp
pop
stos
push
arpl
cwde
xchg
cmp
in
pop
movs
cmp
cmps
ss
sub
mov
or
popa
jbe
in
dec
or
adc
adc
sbb
int
call
hlt
mov
fild
or
cmp
adc
ret
sti
iret
into
addr16
xchg
jb
or
xchg
dec
inc
pusha
call
add
push
jmp
xor
lods
cli
jmp
(bad)
repnz
hlt
cwde
pop
test
push
lea
pop
hlt
(bad)
pop
jae
pop
sbb
mov
dec
jns
push
dec
mov
and
ds
cdq
sbb
sti
cli
rcl
iret
seto
adc
xchg
inc
rcl
sub
out
(bad)
es
aas
in
add
push
dec
aam
mov
or
in
cld
cli
mov
dec
sub
in
adc
popa
(bad)
out
and
je
inc
lea
bound
adc
aaa
das
int
xchg
js
push
sub
(bad)
mov
je
stc
hlt
stc
add
shr
or
lahf
xchg
xchg
retf
js
sbb
pushf
mov
fbstp
cmc
lahf
out
loopne
outs
in
sub
lea
and
mov
bound
fcom
pop
and
test
add
sbb
test
movs
sub
(bad)
scas
hlt
or
add
test
adc
(bad)
or
stos
pop
mov
adc
fwait
mov
pop
enter
movs
pop
std
shl
lds
cmps
inc
jnp
cmp
push
xchg
xchg
loopne
in
sbb
pop
ins
jbe
mov
xchg
std
pop
push
in
dec
xor
sub
xchg
pop
mov
ja
rcr
iret
lock
pop
mov
mov
lea
imul
outs
cmp
popf
push
or
fcmovnbe
push
jns
ja
imul
in
push
gs
xchg
adc
scas
mov
adc
xor
add
ret
push
(bad)
jge
and
ret
or
lahf
mov
xor
mov
pop
jmp
mov
(bad)
bound
pop
mov
js
jmp
stos
jnp
adc
imul
retf
sbb
idiv
cli
add
dec
inc
cmp
xchg
ss
jmp
jp
mov
popf
pop
sub
stc
scas
xchg
cmp
adc
pop
icebp
je
nop
cmps
add
std
sub
and
adc
jecxz
mov
rcl
mov
cmp
or
fldenv
jae
xchg
(bad)
(bad)
fcomp
pop
stos
pop
xor
stos
sub
sub
jmp
or
call
(bad)
xor
popf
mov
ja
fnsave
xor
aad
jg
(bad)
xchg
call
dec
xor
jns
and
or
jb
loope
inc
inc
xor
push
scas
stos
cmp
fistp
stos
retf
adc
jle
mov
(bad)
sbb
pop
push
clc
adc
xor
inc
or
mov
ss
aas
shl
retf
arpl
addr16
test
retf
xchg
mov
outs
out
and
inc
mov
xchg
fwait
jle
mov
cmp
cmp
xor
ret
enter
popf
ret
sbb
inc
sub
adc
cmps
and
pop
xor
mov
fcomp
inc
jmp
mov
or
xchg
dec
mov
jp
out
adc
inc
shl
xor
adc
xchg
push
movs
mov
js
xchg
jb
js
inc
test
je
retf
fnstcw
cmp
jle
icebp
inc
xlat
mov
jl
cld
lock
pop
jmp
xchg
cmp
mov
jecxz
mov
jb
lock
aam
adc
inc
mov
or
test
pushf
cmp
es
xor
jbe
push
and
cdq
ins
(bad)
out
into
mov
or
test
or
rcr
out
mov
sbb
hlt
mov
mov
int
mov
pop
ror
add
dec
stc
aas
ins
or
and
scas
add
mov
(bad)
fwait
(bad)
daa
call
jmp
mov
lods
jno
mov
dec
int3
enter
outs
aam
retf
mov
sub
cmp
sbb
retf
dec
ret
add
xor
adc
int3
push
icebp
sbb
sub
jecxz
cs
lods
jl
push
or
cld
add
les
cmp
inc
sahf
test
xlat
mov
shl
ds
cmps
push
jecxz
jne
fidiv
pop
jl
dec
sub
mov
xchg
or
(bad)
call
push
or
std
add
adc
add
mov
adc
out
sbb
jmp
or
xor
mov
xlat
pop
ss
jno
or
jge
jns
lds
lds
sti
lds
rcr
je
xchg
mov
jbe
scas
shr
mov
add
jo
(bad)
cmp
cmp
xchg
add
mov
pop
inc
bound
push
inc
jne
sub
mov
mov
loop
mov
or
call
add
pushf
dec
xchg
les
xchg
xor
sbb
pop
scas
int
sbb
xchg
fdivr
adc
loop
adc
mov
retf
xchg
sbb
or
dec
xchg
push
adc
imul
xchg
mov
neg
inc
sub
push
aad
sub
mov
cmc
mov
pop
push
inc
ret
cwde
les
sub
test
or
pop
inc
iret
or
repnz
hlt
call
(bad)
out
int3
repz
and
ret
pop
dec
loop
add
(bad)
stc
test
dec
xor
jecxz
sbb
push
xchg
sbb
mov
mov
es
outs
add
stc
out
outs
add
(bad)
sar
icebp
push
(bad)
shr
retf
inc
(bad)
sbb
mov
mov
add
pop
call
cld
inc
mov
dec
call
xchg
dec
imul
mov
push
mov
fwait
adc
push
fisub
jp
xor
arpl
imul
mov
xchg
jl
push
cmps
inc
ret
cmp
jbe
cmp
add
(bad)
shr
xor
pop
sbb
pop
neg
cli
inc
inc
pusha
cmp
pushf
jp
xchg
mov
js
in
dec
ror
pop
mov
push
dec
adc
(bad)
sub
pop
cmp
push
push
jmp
or
inc
fdiv
inc
xor
(bad)
cmps
sbb
loopne
(bad)
out
ja
jb
jmp
and
mov
retf
xchg
sahf
mov
mov
shl
ret
or
add
mov
call
sub
mov
ss
adc
and
movs
sahf
lods
fld
outs
xor
jecxz
clc
xchg
sub
mov
push
pop
cmp
and
jo
mov
pop
inc
fcmovb
not
sti
pop
cmp
inc
imul
inc
cvttps2pi
xchg
int3
jae
jg
dec
dec
jecxz
call
out
jb
dec
cli
inc
mov
sub
loop
xlat
fimul
pop
mov
sahf
dec
mov
add
fisub
int
rcl
stos
fild
loop
xor
gs
jmp
adc
dec
imul
mov
xchg
ins
(bad)
cdq
mov
lahf
mov
inc
mov
inc
mov
jbe
dec
inc
push
outs
imul
xchg
into
movs
push
dec
(bad)
adc
and
mov
inc
lock
add
retf
jmp
cmp
sete
cmps
out
and
sbb
push
push
xchg
pop
cs
fiadd
int
mov
leave
xchg
cmp
enter
je
cmp
xor
aam
imul
fistp
movs
pop
pop
mov
in
dec
inc
ret
jge
test
dec
int3
xchg
lods
leave
or
call
push
or
pop
jnp
jl
cmp
scas
push
xchg
push
rcr
mov
iret
add
jmp
adc
sub
pop
call
sti
jb
jno
mov
mov
jns
stc
aaa
pop
push
xor
test
fst
scas
dec
inc
repz
dec
jg
cmp
les
out
shl
imul
inc
out
in
jmp
mov
addr16
or
add
int
push
push
inc
cli
pop
push
add
jmp
xchg
leave
adc
pop
loope
mov
sbb
push
xchg
inc
sub
mov
das
push
push
retf
mov
mov
inc
jmp
adc
cwde
sahf
jae
or
mov
jle
mov
mov
cmp
inc
sbb
adc
imul
cwde
dec
xchg
out
lea
adc
(bad)
cld
jb
test
inc
dec
arpl
icebp
fstp
sbb
adc
add
jp
movs
enter
jns
repz
shl
push
mov
cmp
enter
mov
call
dec
clc
daa
mov
and
scas
add
fsub
push
in
inc
mov
fs
pusha
out
ds
sti
lahf
call
ss
les
cdq
daa
push
into
jecxz
arpl
mov
iret
dec
call
sti
fist
pop
xchg
mov
dec
rcr
adc
shl
jbe
in
xor
dec
leave
bound
pusha
stos
in
pusha
adc
shr
in
mov
iret
mov
adc
aam
sub
xchg
(bad)
cdq
dec
mov
jo
retf
inc
mov
scas
leave
pop
or
out
xchg
sbb
xchg
cmp
inc
or
jg
mov
lock
mov
jo
fld
ins
jmp
in
ja
pop
pop
jno
pop
or
rcl
or
pop
lods
add
loope
xchg
push
sbb
adc
retf
fnstenv
mov
and
test
arpl
mov
mov
push
push
call
rcl
enter
bound
and
imul
pop
sbb
mov
jl
jno
inc
or
fld
push
jne
int
add
jo
fisubr
inc
inc
jl
pop
popf
sbb
stc
repz
jg
inc
retf
push
dec
pop
jne
fcmovbe
jecxz
sub
add
add
outs
xchg
xchg
repz
jmp
or
pushf
sbb
or
pop
ret
jle
data16
mov
pop
iret
push
lods
add
cdq
and
retf
cli
fxch
dec
dec
jle
or
out
(bad)
retf
inc
fimul
test
(bad)
lahf
daa
std
adc
push
push
rcl
xchg
test
mov
pop
sbb
cmps
fwait
xchg
push
aad
and
loop
adc
fisttp
int
adc
xchg
jle
je
mov
cli
sti
or
cmp
pusha
out
ffree
outs
js
ja
pop
test
sub
xor
inc
(bad)
push
jge
fisub
xchg
je
or
pop
daa
popa
xchg
and
(bad)
movs
sti
dec
scas
aad
pop
sbb
pop
and
inc
dec
repz
push
xor
ficomp
jnp
loopne
pop
and
retf
outs
out
pop
pop
jno
xlat
fsubrp
js
(bad)
leave
jno
xor
sbb
mov
or
dec
out
jnp
xor
dec
es
mov
mov
sahf
mov
mov
(bad)
mov
cmp
outs
inc
leave
les
cdq
cmp
icebp
cmp
jae
fbld
mov
xchg
or
enter
cwde
push
mov
lea
je
xor
aaa
jmp
ds
call
xor
push
outs
cmps
test
icebp
shr
or
or
push
or
movs
es
xor
add
mov
dec
aaa
cmp
add
xor
sbb
jbe
pushf
pop
in
movs
add
and
mov
stc
gs
div
adc
(bad)
dec
jle
shl
and
push
stos
out
jnp
or
inc
out
cmp
push
out
bound
push
call
inc
push
or
sub
fcomp
(bad)
adc
pop
xor
aaa
cmp
or
mov
adc
jnp
je
mov
movs
inc
sar
sar
sbb
test
je
lods
movs
xchg
push
stos
mov
sbb
push
bswap
jns
and
xchg
mov
std
fmul
xlat
aam
mov
adc
dec
enter
ins
ror
ds
inc
ins
clc
add
dec
xor
sbb
neg
sbb
xlat
sub
or
int3
popf
cmp
xchg
enter
int
dec
mov
arpl
cmps
into
cmp
push
cmp
push
mov
mov
push
mov
cld
xchg
enter
shr
or
in
adc
inc
jmp
hlt
sbb
out
(bad)
idiv
push
(bad)
in
fucom
shl
xchg
mov
outs
push
popf
cmp
and
fld
(bad)
push
dec
mov
xchg
or
adc
fs
out
(bad)
and
push
mov
jg
(bad)
ror
cmp
retf
cli
leave
sti
jo
leave
pop
ins
inc
xchg
loop
jecxz
and
shr
lea
mov
loop
nop
pop
and
sub
jae
movs
repnz
movs
hlt
inc
je
xchg
mov
xchg
dec
mov
xor
inc
sbb
push
inc
or
cli
aaa
lods
mov
rcr
cmp
pushf
fdiv
ret
sbb
les
or
das
sbb
(bad)
push
ins
fdivr
(bad)
ss
fbld
int
sub
out
popf
mov
or
loope
sbb
not
pusha
inc
je
push
dec
outs
jbe
movs
js
sbb
les
pop
mov
mov
xchg
and
xor
sbb
arpl
mov
sti
pop
mov
ror
out
and
add
pusha
mov
sbb
repnz
push
jg
call
or
pop
pop
xor
jae
sbb
push
sub
mov
scas
and
loop
mov
sub
cmp
ret
pop
or
sahf
dec
sub
scas
push
call
jbe
add
jg
stos
mov
clc
loop
mov
push
ret
mov
sub
lods
sbb
(bad)
sub
push
ficomp
loop
xchg
lods
xchg
retf
add
dec
lock
jmp
push
sub
dec
lahf
push
push
out
(bad)
out
jg
ds
test
fdiv
int3
pusha
ret
lods
addr16
and
jge
(bad)
(bad)
out
dec
outs
shl
in
sub
in
cmp
movs
inc
xchg
xlat
call
sub
inc
outs
cmps
xor
in
jmp
sub
test
mov
jle
pushf
sub
call
xor
mov
loopne
sbb
xor
and
neg
cmp
sar
push
int
jle
and
cld
fndisi(8087
mov
mov
or
dec
xor
pushf
in
fistp
cs
cwde
pop
retf
pop
or
rcr
xchg
mov
xor
adc
inc
push
mov
aam
mov
cld
fld
stos
or
and
mov
add
lea
sbb
push
or
push
inc
test
sbb
aaa
cmc
cmp
fmul
mov
sub
or
setb
pushf
sub
jp
mov
mov
rol
adc
pop
jg
arpl
and
push
cld
loopne
xchg
adc
sbb
rcr
adc
mov
hlt
or
(bad)
pop
cdq
sbb
pushf
mov
es
movs
cmps
sbb
mov
enter
cli
stos
mov
repz
or
fsubr
cmp
ds
cld
outs
daa
dec
mov
pop
sbb
jno
push
and
xchg
mov
paddd
sub
out
cmp
adc
cmc
and
movs
jecxz
cmp
daa
clc
mov
push
aas
outs
fs
sub
jmp
inc
pusha
ds
stos
fs
sbb
mov
mov
dec
push
jmp
push
fs
jae
movs
(bad)
cmp
mov
int
clc
or
fcomp
mov
dec
fld
jl
adc
outs
pop
aad
sbb
mov
or
jmp
add
jg
pop
push
sar
add
jg
mul
xor
fcos
sub
outs
in
jmp
scas
push
cmp
(bad)
xor
test
mov
inc
pop
and
fist
dec
dec
pop
fisub
enter
jecxz
sub
cmps
stc
test
mov
imul
inc
sbb
inc
jmp
jbe
inc
rcr
mov
daa
push
add
push
imul
add
dec
aaa
cmps
adc
sbb
xor
test
xchg
pmaxsw
shl
sbb
cmp
ror
push
popa
into
test
in
or
test
add
sub
pop
mov
sub
fucomip
xor
or
dec
xor
or
sbb
cdq
rol
add
sar
mov
add
mov
or
ret
out
pop
or
inc
ror
sub
push
lods
cld
fisttp
cmp
push
stos
aad
mov
js
adc
sbb
mov
mov
and
adc
out
dec
lods
lods
and
sbb
cs
imul
xor
cmp
sub
imul
jl
xchg
push
mov
cmp
iret
adc
mov
cmc
cmp
loope
aam
jo
call
fdiv
inc
adc
jb
sub
inc
sub
ss
push
jmp
cmp
sbb
jmp
fwait
out
cwde
xor
push
lea
(bad)
stc
clc
out
mov
sub
sti
je
int
ret
sbb
popf
cmp
inc
inc
mov
pusha
jnp
imul
cmp
call
call
fdivr
xchg
fsub
sti
out
clc
mov
popa
cld
popf
stc
sub
pop
(bad)
je
xchg
xor
leave
dec
mov
das
test
ret
sti
sub
sub
mov
es
sub
gs
mov
pop
fisub
call
xor
mov
pop
mov
sbb
sbb
cmp
les
xchg
push
into
stos
lods
or
mov
shl
push
mov
data16
(bad)
sub
cmp
dec
inc
cmp
cmps
sar
pop
and
mov
into
xchg
pop
ja
cld
add
call
pop
lahf
xchg
into
scas
cmc
(bad)
iret
fs
pop
std
scas
retf
jo
push
inc
out
(bad)
cwde
xchg
cdq
fldpi
xor
mov
sbb
out
pop
adc
jecxz
iret
ins
fwait
scas
push
sbb
outs
idiv
or
cwde
adc
add
mov
mov
imul
sbb
xor
dec
mov
ins
sub
popf
rcl
mov
push
or
fsub
pop
sub
lods
push
imul
cmp
push
loope
sbb
push
push
hlt
adc
and
push
retf
push
ficom
xchg
sbb
xchg
mov
xor
in
(bad)
movs
lods
cdq
push
es
out
xlat
adc
ss
aam
jae
test
inc
fisttp
loope
icebp
or
xchg
sub
cld
mov
out
repnz
fwait
adc
add
or
or
sub
push
cmp
xchg
mov
data16
pop
jg
xchg
mov
jmp
cmp
out
daa
push
jge
sub
mov
pusha
es
scas
ins
adc
leave
(bad)
loop
mov
sub
mov
sbb
and
ins
fild
jae
mov
cmp
(bad)
out
cmps
(bad)
mov
ret
jae
rcr
inc
or
imul
retf
repnz
jne
adc
and
(bad)
cld
cmp
outs
inc
jb
ret
lods
jmp
imul
call
push
bound
jmp
jmp
and
mul
cdq
adc
outs
jmp
jmp
xchg
mov
xor
fcomp
mov
jbe
sti
mov
adc
in
inc
outs
bsr
sub
pop
fstp
jge
and
xchg
lds
std
jnp
shl
retf
fisubr
mov
nop
ss
cmp
add
fild
fcos
aaa
push
neg
and
sub
std
movs
jle
mov
mov
out
pop
push
cdq
test
(bad)
or
inc
aaa
push
mov
mov
or
daa
pop
mov
push
or
pop
mov
cmp
push
add
(bad)
aas
and
int
sbb
dec
imul
in
pop
popf
out
test
ror
mov
or
mov
retf
mov
into
jp
int3
pop
push
arpl
lock
fadd
sub
push
mov
xchg
imul
mov
push
or
cs
adc
loopne
jge
pop
push
dec
adc
div
in
dec
pushf
and
dec
outs
in
mov
(bad)
cld
test
jecxz
pop
test
fwait
rcr
push
int
inc
out
lods
out
repz
ins
dec
add
mov
add
sbb
xor
addr16
test
xor
jge
inc
pop
jo
adc
ror
sbb
jl
mov
into
cdq
jae
push
ret
test
mov
xor
test
sar
cmp
pop
fst
pop
dec
(bad)
add
mov
and
xlat
dec
cld
imul
ins
aaa
add
push
sbb
xchg
dec
daa
jb
ficomp
lods
ins
sbb
dec
ja
push
fbstp
aad
cmp
in
stc
jmp
pop
stc
push
dec
xchg
and
inc
mov
mov
cmp
jmp
lods
fist
cmps
sub
xchg
in
mov
fidiv
xor
in
mov
jb
push
outs
mov
shr
nop
je
and
(bad)
retf
or
dec
inc
(bad)
stos
pushf
jne
out
in
and
inc
ror
lods
rcl
dec
pop
lods
xchg
test
push
lds
jmp
xchg
or
mov
test
inc
adc
dec
xchg
loop
xchg
loop
push
pop
fptan
cmp
test
stos
lahf
cwde
stos
stc
mov
sub
in
in
fnstcw
out
es
imul
stos
repnz
mov
push
retf
cmp
jmp
outs
pop
(bad)
es
jmp
add
or
push
and
shr
pop
call
repz
rol
fnstsw
addr16
mov
push
loope
jg
lds
ins
mov
sub
lods
(bad)
popa
loop
add
test
jmp
push
cmps
daa
pop
adc
push
fs
jmp
in
xor
or
call
add
loopne
mov
or
push
dec
cmp
mov
add
push
les
adc
push
shl
mov
mov
xor
fs
mov
sbb
pop
xchg
sub
mov
or
or
and
push
das
cmps
into
cli
jecxz
sub
repz
retf
push
imul
push
mov
test
aam
loop
and
adc
(bad)
jo
or
mov
sbb
stos
add
mov
retf
sar
adc
mov
test
mov
(bad)
ja
xor
stc
sahf
adc
in
adc
sti
jnp
xor
je
push
into
lock
cwde
xlat
inc
inc
and
adc
xlat
mov
(bad)
jmp
(bad)
loop
std
retf
cdq
popf
sub
or
mov
mov
cmp
or
sub
fistp
inc
(bad)
jge
ss
xor
inc
js
xchg
mov
mov
fidiv
push
inc
xchg
aam
push
cmps
mov
(bad)
push
jge
push
into
cmps
(bad)
xrelease
inc
sub
outs
fld
lea
cmp
push
int
ja
loop
aam
or
inc
adc
xor
add
(bad)
leave
mov
mov
test
in
rol
inc
push
out
add
dec
dec
and
jle
test
xchg
dec
js
in
pop
pop
push
or
clc
sub
lahf
retf
and
push
mov
popa
and
ret
cdq
in
adc
xchg
sub
popf
pop
cmp
push
push
mov
cld
stos
push
add
adc
stc
mov
cld
cld
fisttp
push
lahf
sbb
or
lock
out
inc
repz
leave
or
in
sbb
ins
int3
push
mov
pop
adc
call
push
push
cmp
popf
mov
or
push
and
xchg
dec
mov
cmp
das
adc
and
xchg
rcl
mov
xchg
xor
fadd
out
fstp
(bad)
rcl
outs
jnp
adc
push
xor
out
movs
movs
es
xchg
bound
into
push
xlat
xchg
leave
cmps
daa
adc
scas
int
sar
cmps
gs
mov
popa
push
sbb
inc
pop
adc
popa
icebp
lea
mov
repz
inc
movs
inc
aam
icebp
push
outs
loope
mov
cwde
pop
into
add
sar
ja
pop
mov
(bad)
fcom
lea
sub
sub
les
jg
add
mov
stc
push
mov
(bad)
sbb
sbb
xor
test
pop
adc
xchg
or
sub
fiadd
or
fadd
push
movs
or
inc
xor
xchg
std
cli
jno
test
scas
popa
dec
jecxz
(bad)
pop
scas
(bad)
add
rol
movs
fadd
out
sub
dec
fucomip
(bad)
stc
inc
lds
imul
pop
ficomp
dec
aaa
repnz
dec
jmp
ror
and
jle
ds
fcomp
mov
or
ds
pop
dec
and
inc
lds
push
mov
pushf
call
loop
out
int3
(bad)
jb
add
mov
push
inc
mov
pop
movs
push
push
in
pop
mov
fmul
add
or
test
stos
mov
iret
xchg
jmp
outs
mov
cmp
xor
push
lea
xor
fsubp
dec
add
fisubr
add
rcr
sbb
cld
adc
add
addr16
call
jg
and
aad
or
pop
add
daa
cwde
cs
mov
(bad)
sub
add
mov
cmp
gs
and
inc
jp
pop
cmp
mov
int3
jbe
or
mov
int3
pop
ins
daa
fcomp
call
dec
sub
pop
aaa
adc
sub
les
add
fucomi
aad
sbb
(bad)
movs
inc
pop
jno
xchg
ja
fadd
data16
push
pop
and
xlat
in
jle
imul
rcl
retf
xchg
out
pop
shl
xor
test
inc
test
sub
pop
test
inc
jl
pushf
test
xchg
dec
or
mov
or
aas
cmp
int3
out
push
ror
sbb
in
sbb
data16
repz
jp
cwde
inc
inc
jmp
xor
xor
lods
push
(bad)
fdiv
inc
add
loopne
aad
(bad)
jae
jge
xchg
dec
mov
push
cmp
dec
test
shr
inc
ins
sbb
popa
dec
int3
mov
repz
idiv
mov
cmc
add
jge
fwait
adc
fisttp
outs
clc
(bad)
out
mov
push
aaa
(bad)
(bad)
leave
push
adc
scas
dec
pop
pusha
ficomp
jno
aam
outs
sahf
test
daa
xor
sbb
inc
repnz
pop
adc
push
mov
clc
sub
push
repnz
xchg
lea
jp
mov
dec
arpl
rcl
add
jns
jl
jno
or
repnz
std
ret
retf
xor
fadd
ret
jo
mov
in
mov
mov
movzx
jo
mov
cmp
sub
add
xchg
adc
fidiv
stos
or
xchg
inc
dec
mov
test
outs
add
bound
sha256msg2
aam
dec
cmps
sar
lds
sahf
(bad)
lods
xor
add
sbb
clc
pushf
(bad)
fidivr
pop
add
sahf
std
std
sar
lock
sub
sbb
xor
cmps
and
dec
pop
add
and
jle
repz
cld
rcr
ins
ret
inc
xchg
jle
cmc
stos
cmps
(bad)
sbb
cmp
jmp
xchg
scas
lock
xchg
nop
ins
cwde
dec
rcl
aam
retf
push
mov
cmp
mov
cmps
jno
gs
repnz
jb
and
leave
sahf
cmp
mov
inc
sbb
sahf
push
dec
cli
cmc
loopne
sub
mov
mov
cmp
arpl
mov
push
movs
and
gs
mov
add
sub
jmp
sbb
lock
or
fld
sbb
dec
js
mov
lea
xlat
mov
adc
jg
movs
(bad)
jle
pop
fucomp
lds
dec
(bad)
fidiv
sbb
ins
fstp
dec
sub
jmp
cmps
scas
bound
in
cmp
inc
add
push
sub
movhps
add
cwde
xchg
lea
sbb
lahf
fmul
or
mov
inc
aas
push
lock
jge
outs
and
lods
rcr
sub
daa
xchg
fcmovne
cmp
rol
stos
or
les
cmp
ins
sbb
out
push
mov
pop
pop
push
shl
movs
and
aas
or
dec
or
pop
out
inc
jmp
das
nop
(bad)
mov
enter
dec
mov
jmp
mov
lods
adc
in
pop
cmp
in
jo
inc
lahf
rcr
xor
dec
sti
mov
repz
mov
cmp
jmp
adc
jle
outs
mul
or
mov
xchg
(bad)
push
and
in
inc
int3
nop
outs
pop
fimul
jmp
out
jle
jge
retf
das
mov
outs
ffreep
std
xchg
test
cld
aas
add
jne
je
mov
cli
sbb
dec
sar
push
(bad)
xor
adc
mov
call
jp
mov
add
sub
sbb
pushf
sar
mov
jecxz
loop
icebp
pop
lahf
clc
ins
add
stos
cld
cmp
xor
mov
mov
or
pop
pushf
sbb
push
mov
inc
push
mov
xchg
push
lock
sti
mov
lods
icebp
xlat
push
cmp
mov
test
add
shr
in
or
sbb
loope
push
cld
dec
sub
mov
bound
adc
lahf
jmp
stos
xchg
or
vcmpss
pop
fwait
retf
ror
fsubr
adc
in
or
cdq
psrld
jg
push
out
fisttp
pop
test
or
gs
xchg
push
adc
push
sub
cmp
mov
ret
test
iret
pmulhuw
das
sub
mov
push
sti
add
fdivr
jnp
mov
(bad)
(bad)
imul
jge
pmullw
std
sbb
cmp
call
inc
dec
icebp
push
cmp
sub
ss
jecxz
jbe
mov
lods
pop
jnp
adc
xchg
xor
sbb
xchg
lods
lods
sbb
and
out
loope
pop
in
xchg
bswap
mov
push
push
push
pop
jge
inc
das
xchg
retf
jb
out
stos
ret
call
and
call
lahf
xlat
cmps
ja
ror
scas
fisttp
xchg
push
das
ja
xchg
ror
xchg
dec
mov
dec
movs
cmp
popa
scas
jl
cmp
add
ds
cmp
test
movs
cmps
and
mov
in
icebp
stos
and
pop
stc
rcr
cmp
push
frstor
push
and
lods
ja
sahf
test
cmps
(bad)
or
pop
(bad)
clc
les
inc
pop
and
jb
out
rol
jno
pop
mov
cmp
pop
cmp
repnz
retf
dec
xlat
sbb
stc
cmc
dec
sar
sub
and
gs
test
clc
adc
pop
hlt
stos
aas
enter
dec
test
popa
(bad)
je
and
bound
sub
dec
jno
dec
mov
push
stc
test
int3
shrd
jle
icebp
xor
test
sar
adc
push
and
pop
mov
adc
lock
sar
jg
(bad)
cmps
pop
xchg
icebp
(bad)
xor
popf
mov
lock
call
data16
sub
std
ins
idiv
je
cmp
inc
inc
inc
in
repnz
push
(bad)
stc
xchg
mov
out
inc
pop
cmp
scas
int3
icebp
ret
out
ins
and
sub
jecxz
addr16
ror
push
xchg
jmp
and
in
nop
cmps
pop
popa
sbb
pop
xor
xchg
fdiv
jo
imul
xchg
loope
push
aas
push
popf
push
sub
imul
aad
jbe
add
cmp
jae
xchg
cmp
cmp
inc
pop
hlt
fdivr
cli
rcr
test
mov
jmp
mov
pop
push
aad
jne
(bad)
sub
lds
push
inc
adc
js
jne
add
or
test
test
in
sub
in
mov
out
mov
xchg
dec
lods
or
push
sahf
dec
pusha
pop
cdq
lea
jb
sub
int3
(bad)
sar
cmp
call
push
jb
cmp
sbb
idiv
or
mov
xchg
sahf
stos
mov
push
inc
neg
retf
mov
push
ds
inc
ficom
push
loope
aad
js
adc
xlat
and
pop
xor
rcr
xor
je
sub
add
fcmovnb
stos
push
sbb
imul
xlat
dec
xor
hlt
inc
adc
mov
popa
add
xor
sbb
or
das
mov
and
sbb
or
in
xchg
int
mov
jg
xchg
ins
xchg
and
call
(bad)
fstp
in
inc
push
imul
lahf
das
push
(bad)
jne
pop
jbe
push
and
jp
cmp
das
cmc
jb
dec
jl
jo
ss
pusha
idiv
xor
ds
dec
sub
mov
adc
fisub
cmp
xlat
out
or
inc
bound
cdq
movs
adc
or
ins
mov
jg
hlt
dec
jl
push
adc
dec
add
(bad)
xor
xor
push
out
or
inc
dec
fcom
(bad)
jne
rol
in
das
jns
or
rcr
test
mov
mov
sub
sbb
add
outs
dec
and
or
dec
dec
dec
sbb
jno
jecxz
push
into
sub
dec
mov
or
xor
ins
inc
imul
mov
enter
aad
je
adc
sbb
les
mov
dec
loope
call
xor
loop
aam
adc
cmp
xchg
call
sbb
fidiv
push
icebp
xor
mov
mov
(bad)
out
jmp
mov
pusha
pop
push
mov
adc
cld
shl
outs
call
jp
leave
jne
enter
add
add
mov
fadd
dec
push
test
shl
xor
sbb
push
int3
std
pop
test
mov
or
cli
sti
shr
or
(bad)
mov
push
test
or
dec
int
push
imul
inc
jmp
xor
sub
(bad)
in
enter
jp
xor
push
add
push
push
fwait
sub
in
leave
ds
addr16
jmp
retf
les
dec
out
fist
pop
mov
push
je
fcmovu
stos
jecxz
xor
clc
xor
ja
rcr
cli
cld
scas
inc
fsubr
jmp
rcr
adc
stos
int3
inc
std
cmc
pop
jle
es
fwait
cmp
inc
iret
mov
inc
xor
xchg
(bad)
(bad)
(bad)
push
add
or
into
out
in
js
or
popa
and
std
stc
cmp
movs
and
ret
retf
sahf
(bad)
dec
add
popa
push
mul
imul
sub
jmp
inc
sub
in
lea
mov
adc
mov
loopne
fs
test
mov
jns
adc
add
and
mov
pop
jbe
loope
pop
lds
ret
mov
ins
adc
mov
sub
push
stos
sbb
and
in
fcmovne
arpl
adc
stos
cli
daa
scas
and
push
js
or
sub
inc
mov
adc
inc
leave
in
mov
dec
jns
iret
add
or
push
repnz
push
push
test
xor
aas
in
xchg
test
jge
aad
or
pop
sub
cdq
or
dec
fsubr
push
scas
loope
dec
and
leave
fidiv
jg
icebp
mov
mov
or
(bad)
cmps
fisub
xchg
adc
xor
xor
mov
data16
sub
(bad)
loop
add
loopne
out
mov
call
mov
sar
psubw
stos
outs
jmp
inc
jnp
xchg
dec
cmp
je
leave
bound
hlt
push
xchg
imul
xor
ins
or
int
ins
fadd
movs
fdivrp
retf
and
mov
pop
push
arpl
jbe
xchg
dec
xchg
(bad)
mov
ret
sub
js
pop
xchg
mov
out
imul
push
aam
jne
sub
fcomp
pop
hlt
popa
aad
sub
in
sbb
xchg
or
and
and
push
mov
xchg
(bad)
mov
daa
mov
cmp
jmp
fild
mov
add
sar
cdq
xchg
dec
xor
(bad)
pushf
push
out
xor
jle
call
ja
push
gs
push
adc
hlt
mov
cmp
mov
push
sub
sbb
adc
pop
sbb
test
out
cmp
aas
xchg
mov
add
mov
test
jmp
popf
jg
cwde
aaa
iret
mov
leave
out
jae
add
test
adc
scas
cmp
enter
pop
jo
(bad)
popf
pop
sbb
fmul
sbb
lock
sub
dec
sbb
push
xchg
test
and
mov
fisub
mov
add
(bad)
or
jns
inc
test
fs
stos
mov
out
xor
iret
daa
lea
xchg
mov
neg
enter
(bad)
loop
scas
(bad)
mov
mov
mov
popa
mov
scas
clc
(bad)
jmp
dec
popa
in
sub
sbb
jge
push
sbb
xchg
out
adc
mov
sub
ret
push
push
cs
rol
outs
mov
push
cmp
cmp
inc
jo
ja
daa
sub
jns
ins
test
retf
imul
jecxz
int
cmp
inc
push
and
stos
jo
stc
nop
(bad)
aas
cmp
pop
xchg
cmps
mov
jge
sbb
and
xchg
or
and
dec
or
(bad)
sub
lahf
int
scas
jle
mov
sub
jp
adc
and
cmp
jl
mov
loop
mov
push
jl
dec
stos
sbb
hlt
and
sbb
pushf
fdiv
sbb
mov
cmps
push
jne
test
xor
inc
adc
addr16
or
imul
mov
sahf
hlt
pop
jle
push
xlat
mov
fcom
mov
or
in
in
repz
dec
int3
inc
pop
or
(bad)
jo
mov
shr
mov
(bad)
sub
jae
mov
xor
or
xchg
ret
inc
mov
loop
not
sahf
shl
adc
ss
inc
cmp
add
icebp
pop
xor
sahf
dec
(bad)
rcr
jl
mov
and
xor
sub
xor
or
rcl
adc
and
dec
loope
add
ret
mov
repnz
repz
dec
add
xlat
cld
jne
mov
ins
adc
imul
lock
push
xor
jbe
inc
xor
test
lods
dec
xchg
loop
add
sar
inc
sti
imul
cmp
dec
and
jge
test
jb
cmp
fsub
scas
shrd
add
aaa
or
repz
inc
test
popf
ficomp
push
data16
add
enter
dec
leave
dec
pop
pop
(bad)
arpl
push
dec
xchg
push
xchg
push
mov
pop
fidiv
mov
push
push
mov
dec
ficomp
cmc
ret
sub
push
cmp
(bad)
clc
and
and
cmp
in
sahf
cmps
push
mov
outs
das
jg
fistp
and
(bad)
fisttp
push
loope
cmp
movs
push
mov
mov
sub
aam
pop
xor
loop
jg
mov
clc
jle
inc
xchg
inc
pusha
(bad)
push
or
xchg
jns
jo
adc
xchg
mov
pop
jl
fld
repnz
inc
inc
mov
fistp
test
fsub
xchg
jb
mov
ss
push
out
or
adc
and
movs
rep
aam
or
sbb
(bad)
add
test
lods
test
les
hlt
and
pop
(bad)
ins
mov
cs
or
inc
cmps
mov
(bad)
add
imul
nop
popf
repnz
fld
retf
mov
out
pop
imul
sbb
pop
cmp
jp
in
push
cmp
iret
dec
cmp
mov
in
das
mov
sbb
pushf
xchg
sar
outs
(bad)
ja
jae
jbe
or
mov
arpl
leave
pop
inc
mov
sub
scas
inc
jne
into
inc
jne
out
aaa
int3
sbb
jle
cwde
sbb
out
mov
xor
imul
cmc
sub
xchg
cwde
and
and
mov
into
push
repnz
sbb
mov
shl
cmp
rcl
fbstp
push
sbb
rcl
push
mov
mov
sti
sbb
imul
hlt
(bad)
pop
dec
pushf
loope
dec
mov
or
cmp
retf
pop
call
sahf
add
fistp
inc
test
jns
push
out
mov
ficom
xor
xchg
pop
mov
mov
(bad)
mov
retf
cmp
push
je
inc
lods
imul
xor
popa
movs
add
mov
pop
xor
shl
std
adc
sub
or
xchg
fcomp
outs
pop
sti
add
shl
ins
jo
push
dec
(bad)
loopne
fs
pop
xchg
rdmsr
mov
fdivr
jg
inc
pop
adc
fiadd
nop
jb
lea
adc
shl
jns
lds
lahf
fwait
in
push
sbb
ficomp
adc
dec
mov
pop
adc
jns
or
test
cli
add
test
mov
cmps
xor
xchg
mov
aam
aas
leave
and
cmp
mov
and
stos
sub
retf
mov
arpl
sub
test
sbb
jge
loope
sub
inc
retf
jnp
sbb
jg
push
xor
and
jno
arpl
cmp
ins
out
jne
repz
ficomp
cmp
lea
sub
xor
mov
push
xor
icebp
jmp
dec
or
aad
lods
ss
loope
std
push
(bad)
cmps
dec
popf
pushf
xor
mov
bts
inc
(bad)
or
jmp
and
fisttp
cmp
outs
cmp
inc
outs
jns
xor
push
arpl
fild
mov
aas
scas
lods
xchg
mov
push
xor
lock
mov
movs
jmp
sub
ss
clc
jne
dec
and
jne
fnstsw
xchg
in
sub
outs
mov
cwde
add
clc
mov
xchg
es
icebp
mov
or
or
adc
movs
adc
cmp
xchg
cmp
imul
js
mov
xchg
sub
xchg
mov
hlt
ins
into
repnz
mov
pop
les
fld
lds
add
dec
push
inc
mov
sub
inc
add
pop
mov
push
sub
mov
mov
in
cwde
inc
nop
add
xor
mov
loop
outs
sub
addr16
mov
push
stc
ret
cdq
test
adc
fdiv
sub
mov
and
and
jmp
nop
and
daa
shr
pop
mov
cmp
(bad)
dec
mov
jno
mov
push
push
std
sub
cmp
lods
les
(bad)
addr16
push
mov
sbb
(bad)
lea
(bad)
jb
mov
(bad)
add
cmc
in
sbb
or
enter
push
dec
shr
mov
pop
dec
clc
(bad)
cli
out
outs
adc
int
lahf
clc
jl
sbb
push
sbb
or
xor
and
add
mov
or
ja
jbe
int
inc
inc
int
cmps
icebp
call
adc
adc
dec
test
sbb
cmp
cmp
loop
aas
clc
in
fisttp
inc
cmps
push
pop
js
not
test
sbb
dec
sar
popf
dec
cmps
mov
dec
add
(bad)
shr
aaa
cmp
jmp
sub
mov
cmp
neg
xchg
sbb
cld
and
les
dec
(bad)
(bad)
jae
lds
(bad)
aas
mov
cli
dec
mov
ret
cmp
cmp
pop
xchg
popf
inc
jmp
mov
aaa
push
jl
or
xchg
inc
lods
cwde
clc
sub
jb
pop
ds
and
mov
enter
xor
cs
xor
test
std
jb
xchg
(bad)
retf
daa
or
dec
inc
adc
int3
test
push
arpl
loopne
mov
push
test
data16
popa
inc
xchg
adc
sub
or
or
xlat
outs
pop
repz
xchg
shr
push
jo
push
into
sar
lods
pop
sbb
jne
dec
mov
sub
inc
pusha
mov
add
jl
mov
adc
iret
push
mov
(bad)
into
int
mov
sbb
push
and
push
pop
sti
ins
or
pop
mov
mov
mov
pop
push
jmp
cmp
sub
test
inc
pop
es
pop
cmp
je
xor
jg
je
sub
jne
clc
adc
fld
xchg
cmps
and
hlt
outs
jns
jecxz
pop
add
cmc
mov
nop
repnz
and
sub
ror
pop
lea
out
xchg
das
dec
sub
loope
test
call
adc
mov
lock
(bad)
out
icebp
sub
xchg
or
pop
adc
rcr
push
mov
pop
inc
add
and
sub
mov
adc
and
fdiv
and
mov
sub
ja
repnz
cmp
fisttp
mov
sbb
push
sbb
xchg
jmp
push
adc
idiv
call
pop
xor
adc
xchg
loop
xor
xchg
data16
ins
lahf
xchg
shl
retf
js
and
pop
add
neg
jge
pop
clc
sbb
or
add
leave
call
pop
add
std
in
pusha
xor
mov
adc
add
aas
xchg
popa
(bad)
push
mov
or
(bad)
shl
dec
or
dec
sar
mov
aam
mov
(bad)
(bad)
in
rep
mov
in
test
mov
retf
addr16
xchg
or
push
inc
nop
xchg
pop
and
lods
jno
fmul
jmp
aam
pop
test
fldenv
fmul
jg
mov
pop
mov
mov
fcmovnu
push
jge
loopne
cmp
push
jae
xor
retf
dec
int3
test
add
sbb
adc
sub
pop
in
sahf
rol
in
in
push
in
sbb
test
xchg
push
xchg
xchg
add
push
mov
(bad)
adc
mov
mov
div
add
pop
dec
fimul
fisubr
ins
nop
inc
stc
cmp
jae
sub
adc
adc
clc
fsubr
outs
in
cmp
cmps
or
movs
adc
retf
out
push
movs
in
mov
cli
fld
(bad)
mov
outs
adc
mov
add
jecxz
fdiv
mov
jns
fucomp
hlt
cmp
push
inc
jbe
aaa
add
enter
in
sysenter
mov
inc
adc
repz
fdivr
sbb
inc
xor
das
push
mov
lahf
gs
cld
inc
out
fwait
cmp
cwde
clc
fimul
ins
dec
push
inc
or
xchg
sahf
inc
test
popa
fldz
inc
mov
and
sbb
and
cmc
xor
and
stos
adc
jb
xchg
xor
rol
das
cdq
push
jmp
idiv
sub
das
dec
retf
je
cld
popf
xor
std
pshufw
sar
adc
push
dec
and
mov
hlt
stos
fidivr
sub
mov
in
xchg
stos
dec
jo
xor
fldlg2
cmps
xchg
fcom
retf
rcl
dec
jmp
xor
out
je
xor
out
inc
out
dec
std
mov
pop
and
ret
cmc
lock
mov
imul
sbb
and
sar
xor
push
mov
cmp
hlt
or
jge
mov
ret
adc
jae
sub
dec
(bad)
cld
aad
fnstenv
xchg
sahf
mov
hlt
(bad)
add
loope
cmps
dec
aam
cmps
push
clc
inc
in
out
pusha
mov
lods
mov
push
inc
mov
cmp
cmps
mov
fistp
mov
sub
add
mov
or
data16
mov
mov
sbb
repz
push
xchg
cmc
adc
fwait
ins
jbe
pop
mov
pop
sbb
data16
fistp
jmp
push
ror
mov
rcr
xor
lods
addr16
xor
mov
or
bnd
xor
jne
adc
mov
mov
lock
and
push
push
leave
int
and
or
add
sub
push
add
sub
jbe
mov
push
add
and
arpl
call
cmp
xchg
xlat
xchg
inc
clc
retf
mov
xchg
js
popf
dec
dec
movs
and
add
jge
dec
icebp
inc
and
dec
test
pop
out
push
shl
add
jmp
jae
fwait
push
retf
mov
xor
pop
or
and
clc
shl
push
mov
xor
ret
adc
cli
sbb
das
adc
ins
test
icebp
ja
xchg
shl
xchg
aaa
lock
loope
and
dec
cmc
call
shl
adc
jae
adc
movs
push
imul
in
(bad)
enter
jg
inc
cmp
push
cmp
stos
mov
xor
imul
fdiv
push
int3
xchg
sub
fwait
push
addr16
push
mov
call
mov
jecxz
cwde
cmps
cmp
mov
inc
aaa
idiv
cmp
aam
ja
push
jns
nop
out
mov
sub
movs
jns
xor
mov
sub
test
dec
pop
inc
add
(bad)
push
ins
imul
shl
getsec
mov
xchg
sar
push
add
sub
fsub
inc
bound
pop
inc
xor
mov
retf
mov
mov
dec
cmps
push
mov
out
out
inc
ds
xor
mov
mov
cmp
xchg
sbb
ss
jge
pop
retf
inc
ja
pop
sbb
and
or
inc
push
sahf
pop
fs
adc
xchg
cmp
inc
pop
or
xor
xor
sbb
push
in
ins
ja
sbb
add
stc
data16
ret
jge
rol
dec
cmp
(bad)
pusha
sub
dec
addr16
mov
mov
fnsave
pop
add
dec
adc
jl
test
jb
dec
add
inc
mov
adc
div
(bad)
test
cdq
mov
clc
sub
call
or
call
or
shl
retf
sbb
mov
xchg
cwde
add
dec
arpl
inc
cs
mov
sub
add
inc
out
cmc
ss
mov
mov
jnp
or
mov
out
inc
ins
mov
clc
pop
imul
mov
popa
pop
mov
push
fs
fld
sub
aam
das
repnz
rcr
fwait
sub
popa
or
xchg
test
xor
int3
dec
sbb
and
inc
adc
add
mov
movs
das
adc
mov
nop
scas
dec
movs
push
cmp
aaa
dec
xor
jl
mov
pushf
sub
mov
xor
fidivr
push
cmp
or
adc
or
jge
push
jb
hlt
movs
and
mov
adc
cmp
ret
aad
ins
outs
xchg
es
inc
xchg
mov
clc
cmp
mov
mov
ret
mov
and
mov
stc
in
xchg
jnp
sbb
and
push
xchg
and
inc
cs
add
scas
fnsave
rol
xchg
fnstsw
xchg
cmps
xchg
ss
nop
into
xchg
in
dec
js
(bad)
in
js
sub
mov
outs
mov
xor
js
dec
repz
jns
repz
cli
out
lea
les
fisttp
out
rcr
leave
clc
pop
mov
(bad)
sub
cli
pop
fadd
jecxz
rol
and
adc
jb
push
jae
adc
clc
mov
addr16
jno
hlt
fistp
sbb
mov
aaa
mov
retf
mov
and
fcomp
xor
adc
mov
sbb
js
sub
cmps
or
jecxz
mov
push
sti
sbb
addr16
dec
fs
daa
jmp
leave
push
sbb
pop
dec
sub
bound
pop
sbb
loope
sub
mov
popf
sbb
dec
ret
movs
cmps
ucomiss
mov
push
sub
cmps
outs
pop
xor
(bad)
ss
mov
sub
jp
jg
adc
and
mov
mov
cli
(bad)
call
sub
jg
add
sahf
xor
into
mov
sbb
cli
stos
ins
xchg
test
jge
xchg
fistp
sbb
fiadd
(bad)
adc
pusha
inc
inc
and
cmps
cmp
cmp
fs
xor
out
mov
mov
adc
push
aad
out
cmp
jle
in
iret
(bad)
(bad)
adc
jnp
jecxz
push
test
enter
lock
lea
mov
mov
dec
fst
xchg
sar
sub
mov
xchg
pop
sub
push
ror
test
xchg
pop
fist
mov
bound
cmps
stc
jp
ret
aam
sbb
add
repnz
or
fcom
and
bound
(bad)
out
pop
mov
rcr
xor
stc
mov
cmps
js
ins
or
jne
mov
push
xchg
ja
inc
popa
iret
pop
clc
cmc
call
loop
mov
ret
xor
pop
into
mov
pushf
cmps
sti
imul
sti
inc
aam
imul
les
nop
xor
mov
pushf
xor
cmp
sbb
push
or
enter
enter
lahf
mov
test
mov
and
dec
fwait
bound
add
jo
and
add
jle
clc
jnp
sub
mov
fwait
std
pop
shr
outs
out
mov
dec
(bad)
xor
mov
ficom
lahf
push
mov
fwait
pop
mov
mov
ins
jbe
mov
jmp
sub
in
sbb
enter
jp
(bad)
pop
(bad)
enter
fs
xor
clc
icebp
in
fist
xor
push
es
test
ins
(bad)
adc
and
in
repnz
mov
shl
lods
pop
out
mov
push
test
xor
loope
mov
leave
outs
cmp
push
dec
or
adc
cmp
cli
mov
cmp
cmp
mov
call
or
jge
aam
repnz
mov
mov
dec
pop
call
fcmove
adc
dec
mov
xlat
inc
test
adc
fdivrp
mov
xor
and
enter
push
xor
ret
dec
repz
cmps
add
add
dec
aaa
scas
cwde
jle
mov
(bad)
popf
push
mov
icebp
das
jnp
aad
mov
dec
push
cmp
mov
daa
test
xor
ror
mov
jmp
lock
pop
xchg
sbb
or
xchg
push
(bad)
sbb
sbb
movups
ins
outs
adc
push
push
jmp
cld
lds
mov
or
je
dec
cmp
pop
mov
dec
repnz
push
and
fist
in
cmps
lods
(bad)
pop
gs
std
je
mov
inc
push
cmp
mov
jbe
shl
loop
xchg
sub
popa
adc
adc
lods
mov
lods
add
(bad)
pop
dec
add
xor
in
add
scas
mov
xor
jb
cmps
dec
jne
imul
popf
stc
pushf
pop
pop
ror
popf
xor
mov
cmp
inc
in
fsub
inc
and
pop
xchg
cmp
mov
imul
les
or
adc
adc
mov
push
loop
call
inc
adc
adc
movs
push
(bad)
xor
push
fiadd
jl
xchg
xor
sbb
ret
loop
jnp
jle
cmp
pop
shr
push
call
repnz
mov
pop
pop
dec
or
scas
adc
pop
cmps
mov
jo
mov
in
pop
popf
mov
repz
mov
dec
cmp
inc
add
pop
push
fs
pop
cmps
daa
jmp
ficomp
xchg
xchg
fdivr
div
xor
mov
out
add
lock
sbb
inc
inc
das
dec
pop
sahf
dec
cmp
inc
mov
rol
aad
sub
or
aas
inc
sbb
xor
sar
(bad)
in
sub
lods
pop
dec
push
rol
mov
xor
outs
fneni(8087
adc
cmp
adc
inc
sbb
mov
lods
retf
dec
pusha
(bad)
push
adc
outs
xor
xor
sbb
and
lods
jnp
ret
lahf
mov
push
sar
and
push
cmp
push
scas
test
fimul
or
out
scas
xchg
ret
push
repz
stos
fdivr
pop
into
xchg
jge
adc
xlat
push
shl
inc
push
clc
ja
(bad)
sti
ja
sub
retf
mov
and
(bad)
and
lds
pop
push
retf
mov
test
jle
loope
imul
push
cmp
push
das
stc
rcl
dec
ss
movs
add
jge
(bad)
int3
fnstsw
retf
jae
xor
aaa
aaa
fs
jo
dec
imul
dec
fistp
shl
fld
or
or
pop
repz
sub
pusha
inc
mov
push
clc
pop
mov
sbb
add
jno
pusha
mov
and
mov
mov
push
out
jecxz
mov
xchg
retf
add
dec
fstp
daa
out
inc
xor
es
(bad)
enter
push
cmp
xchg
inc
(bad)
and
mov
mov
mov
mov
movs
inc
arpl
clc
sub
push
pop
mov
sbb
ret
jge
pop
(bad)
ror
in
mov
mov
and
push
push
pop
or
scas
push
jle
out
aas
adc
enter
fwait
jecxz
mov
popf
cmp
dec
(bad)
mov
mov
xchg
mov
cld
stos
std
cli
out
(bad)
dec
cmp
hlt
inc
jne
popa
xor
test
cwde
jg
loope
jne
ins
ss
lods
or
sbb
hlt
xor
jg
adc
mov
ja
jecxz
pop
add
sub
shl
mov
movs
or
cmps
in
(bad)
xchg
xor
mov
lods
sbb
lods
and
ins
fbld
mov
js
cmp
mov
xchg
jge
test
or
cmps
push
sbb
xor
cmp
push
pop
jmp
push
loopne
push
pusha
inc
(bad)
out
ror
push
push
mov
jbe
mov
cli
xchg
mul
movs
add
sub
pop
inc
and
mov
pusha
in
jmp
(bad)
clc
jbe
xchg
pop
inc
jmp
repnz
(bad)
and
movs
(bad)
mov
sbb
fisub
cli
lods
cmps
xchg
sbb
(bad)
xor
jbe
call
cvtps2pd
mov
loop
and
stos
aam
xchg
or
jmp
or
aas
xor
add
xor
xor
es
in
jle
push
dec
or
add
mov
ret
rcl
into
cli
push
cmp
inc
inc
cs
jbe
xor
adc
jbe
dec
mov
nop
inc
add
fist
mov
(bad)
push
push
bound
adc
sbb
pop
fist
popw
xchg
push
ror
mov
cmps
adc
adc
outs
je
sbb
push
jno
pop
aaa
fucomip
int
addr16
test
out
dec
mov
mov
or
arpl
loope
int
add
fiadd
not
in
mov
or
xor
neg
dec
jg
inc
sbb
jge
(bad)
fs
hlt
inc
push
test
pop
pop
cmp
icebp
nop
popa
and
jge
jl
std
adc
(bad)
in
movs
add
push
cmp
xor
inc
movs
jae
nop
arpl
inc
xchg
fs
cmp
and
jg
adc
in
inc
add
mov
cmps
push
idiv
test
les
jge
dec
dec
sbb
push
shl
sbb
mov
in
das
adc
push
lock
loopne
sbb
xor
push
movs
std
cmp
cmp
fwait
add
cmp
je
mov
xchg
push
and
das
dec
xchg
loop
(bad)
into
jns
mov
icebp
js
push
clc
loop
xchg
ror
xchg
sar
ins
push
mov
bound
jp
shl
or
fsubr
fadd
neg
jg
xchg
or
jno
sbb
test
fdiv
add
push
adc
lods
jge
mov
je
or
xchg
jmp
inc
sbb
retf
cs
jo
cs
aas
pop
maskmovq
test
cwde
jae
stos
loope
mov
call
imul
and
push
hlt
inc
addr16
mov
sahf
mov
push
pop
sbb
test
push
and
icebp
pop
ret
xlat
je
xchg
punpckhbw
add
and
shl
icebp
pop
fst
pop
shl
std
fcom
sar
dec
mov
neg
jmp
loopne
mov
mov
jb
int3
jp
cs
xchg
inc
icebp
mov
js
mov
mov
mov
pop
mov
(bad)
imul
pop
int
std
cmp
rcr
aam
xchg
in
or
pop
mov
shr
call
bound
repz
(bad)
ret
aas
pop
jp
hlt
xchg
clc
inc
jb
cli
ret
sbb
dec
pop
adc
mov
inc
sub
cmc
repnz
(bad)
lds
mov
aad
stos
pop
loopne
lea
retf
ss
push
loopne
add
xchg
fsubr
pop
mov
pop
cmovl
mov
mov
dec
dec
dec
mov
(bad)
pop
adc
in
inc
test
and
push
add
idiv
in
dec
repz
jbe
int3
jl
adc
ss
sbb
ss
cmp
cmp
inc
sbb
(bad)
push
sub
mov
cmp
lahf
aas
xor
stos
or
jne
add
sbb
pop
clc
and
xlat
hlt
enter
xor
std
fisub
loop
jmp
push
pop
xor
mov
test
mov
sub
in
jno
and
aad
test
(bad)
ins
mov
xchg
sub
push
(bad)
cld
aam
lods
adc
les
add
cld
add
mov
sub
loop
inc
jmp
fwait
mov
pushf
cmp
int
fisttp
ins
imul
mov
add
or
xor
jnp
scas
xor
mov
das
out
jno
inc
movs
ret
shl
out
cdq
add
or
push
lea
push
inc
pop
cmps
xor
mov
paddd
clc
loopne
into
popa
aam
jno
push
popf
sbb
mov
dec
jno
add
or
sbb
(bad)
xchg
into
nop
mov
push
pop
mov
mov
fst
or
pop
fnstenv
movs
xlat
aam
sahf
adc
adc
or
xchg
and
in
sbb
jp
mov
sbb
push
mov
repz
push
jo
mov
arpl
test
push
mov
jmp
jae
movs
mov
pop
and
cdq
ret
ror
sar
rol
push
sub
daa
mov
ins
jle
cmp
mov
sbb
stos
bound
imul
xchg
or
aas
or
out
or
adc
sahf
out
ja
test
pop
mov
hlt
xor
fist
repnz
out
dec
lds
ret
leave
test
imul
out
push
push
dec
jmp
loopne
(bad)
repz
dec
add
pusha
data16
inc
js
add
xchg
jl
imul
xchg
pushf
and
mov
fld
test
adc
add
mov
xchg
and
add
out
lock
sahf
cmp
pop
cmp
out
xchg
je
add
pop
nop
dec
inc
jae
scas
adc
movs
add
adc
popf
rcr
xchg
fistp
stos
xor
or
xacquire
imul
scas
arpl
addr16
xlat
test
xchg
or
jb
push
xchg
dec
mov
hlt
in
mov
in
popf
jno
and
or
and
aad
add
je
push
aad
and
cmps
js
aad
hlt
cmp
sar
or
in
inc
dec
xchg
inc
(bad)
mov
lea
bound
pop
dec
ret
lea
lea
xor
sub
enter
xchg
sub
jns
mov
stos
cmp
add
push
push
xchg
push
push
inc
xor
cli
or
pop
dec
dec
or
hlt
pop
ret
and
call
or
icebp
sbb
sahf
push
xchg
repz
mov
or
dec
in
dec
jle
cwde
pop
sub
mov
lds
sub
jb
nop
(bad)
aas
dec
inc
push
lods
mov
cmp
pop
pop
cli
cmps
je
cmc
dec
adc
call
call
inc
jb
rcl
ret
dec
(bad)
and
cwde
sar
xchg
(bad)
or
fidivr
cs
sbb
xor
sub
mov
loop
xchg
ss
adc
lea
mov
je
dec
sub
adc
sub
dec
or
push
(bad)
dec
mov
add
jl
out
cdq
aam
cmp
nop
fild
lds
fisub
inc
cs
push
mov
push
sbb
inc
test
mov
cli
mov
mov
xchg
stos
mov
bound
lods
push
popa
lahf
xor
rcl
shl
out
push
imul
adc
cmps
dec
mov
inc
clc
add
push
add
out
mov
add
or
into
out
inc
inc
mov
jne
stos
pop
retf
pop
sub
push
mov
mov
pop
mov
outs
loope
cmp
mov
shl
je
jno
cmp
ficom
fwait
mov
stos
cld
mov
xor
sar
pop
and
pop
add
ja
daa
cmps
das
or
xchg
push
jo
jg
hlt
lods
xor
lahf
test
jnp
push
(bad)
cmp
mov
jp
xor
or
clc
fdecstp
inc
jne
cmps
push
nop
push
imul
frstor
xor
ret
jmp
jmp
cmps
arpl
xor
pushf
repz
and
mov
arpl
cwde
adc
nop
pop
ret
mov
pusha
add
mov
imul
jge
fld
loop
dec
clc
movs
(bad)
mov
inc
je
rcr
fsubr
xchg
and
xor
stos
pop
out
inc
out
(bad)
or
test
pop
les
pop
push
scas
add
cmp
add
mov
cwde
pop
jmp
daa
call
adc
out
arpl
dec
cmps
imul
dec
xchg
repnz
inc
rcl
pop
(bad)
or
les
or
xchg
inc
outs
push
int
iret
inc
ja
rol
imul
push
inc
popa
cmp
std
pavgw
push
popa
or
les
(bad)
cli
fwait
mov
mov
xchg
adc
dec
popf
lea
adc
enterw
stc
dec
ins
dec
sub
ins
push
fst
adc
jle
in
or
adc
sahf
lock
std
fisttp
out
jo
aam
xor
clc
arpl
mov
inc
aad
cmps
(bad)
das
and
jo
(bad)
out
jb
dec
jp
push
pop
aam
lds
push
adc
add
mov
cmps
inc
pushf
inc
inc
dec
ss
or
test
add
jbe
pop
mov
and
or
stc
cli
or
xor
adc
lahf
pop
pushf
fild
mov
ins
inc
les
xor
dec
rcr
cmc
cmp
shr
mov
cmps
test
es
jg
int
stos
push
xor
jo
pusha
and
scas
pop
jmp
je
aam
dec
pop
mov
cmp
push
or
pop
int
ror
fdiv
sbb
in
pop
enter
mov
xchg
cmp
ds
push
mov
push
mov
cmp
inc
call
loope
mov
and
pusha
stos
mov
inc
jg
adc
ins
inc
outs
xchg
or
mov
dec
dec
(bad)
cmp
jle
push
rcl
push
push
test
(bad)
in
in
inc
scas
adc
aas
or
les
xor
and
out
sahf
adc
fisubr
call
aaa
mov
sbb
sub
sar
cld
addr16
mov
rcr
sub
popf
sub
pusha
inc
pop
rcr
jp
adc
inc
xchg
stos
push
push
mov
sbb
pop
scas
jno
(bad)
xchg
sub
adc
fwait
inc
add
jb
daa
mov
xchg
pop
out
fnsave
neg
in
lock
cld
out
mov
(bad)
ins
push
in
mov
mov
lods
std
(bad)
loope
shr
pusha
inc
jmp
aas
mov
shr
out
shl
repnz
jb
loope
dec
pop
jo
jo
ret
push
mov
mov
fnstsw
retf
xchg
ret
and
lock
sahf
gs
jmp
inc
xor
movs
pop
popa
ds
cmp
pop
xor
imul
retf
aas
cwde
sbb
xor
jg
adc
xchg
push
jmp
aad
jne
and
jle
lahf
stos
ss
ss
jbe
repnz
adc
js
js
std
cli
ret
adc
mov
mov
ret
cmp
imul
fwait
test
inc
cdq
sti
push
ds
and
mov
mov
stos
clc
fsubr
sbb
xchg
and
popf
jne
or
out
sbb
jmp
mov
movs
(bad)
imul
jmp
ret
pop
push
pop
bnd
cmp
mov
in
cdq
call
xor
push
das
les
retf
std
or
iret
sti
test
leave
add
xchg
xchg
clc
ins
or
and
fimul
push
jns
jp
cmp
imul
jmp
les
jae
push
rcl
mov
push
call
xchg
outs
dec
fwait
cwde
fidivr
stc
call
mov
and
test
out
shr
das
sub
and
dec
pop
ja
xchg
ins
ins
mov
retf
outs
dec
stc
push
add
push
fistp
adc
inc
dec
div
(bad)
lahf
rol
movs
inc
mov
jl
xchg
(bad)
je
mov
xchg
ds
push
dec
into
mov
jmp
mov
mov
lods
add
les
add
sub
pop
setno
xchg
pop
adc
popf
pop
ror
adc
mov
jne
push
and
sbb
jmp
cmp
mov
inc
aad
(bad)
hlt
lds
fs
push
dec
adc
jecxz
test
aam
clc
sub
jle
out
pusha
outs
outs
gs
mov
int3
xor
or
(bad)
sahf
xor
push
(bad)
(bad)
cdq
scas
cmp
out
jp
cs
in
inc
pop
retf
stos
jno
jo
cmp
jp
shr
sbb
mov
sbb
mov
ret
add
and
cld
jge
dec
pop
cld
(bad)
(bad)
std
cmp
loopne
loopne
mov
cmps
dec
mov
mov
fbstp
and
inc
xor
push
inc
push
mov
mov
inc
fldcw
movs
fisub
cwde
push
mov
add
cld
ret
mov
cmp
jnp
lods
adc
xchg
ja
push
dec
in
loopne
xchg
inc
sar
mov
inc
sbb
adc
stos
out
xor
out
and
loop
movs
out
cmc
xchg
aaa
cmp
sub
sbb
adc
je
movs
jmp
es
xor
jno
add
adc
jns
mov
sub
call
cld
lds
rcl
in
sbb
pop
xchg
cmc
rcr
test
jbe
mov
mov
std
je
add
lods
neg
retf
cmps
add
xchg
push
ds
mov
sub
(bad)
aam
inc
dec
icebp
jmp
adc
inc
sbb
jb
mov
retf
(bad)
push
pop
retf
imul
or
fimul
movs
jne
dec
xchg
retf
out
mov
daa
dec
sbb
les
sbb
retf
inc
cmps
inc
lea
fs
cld
push
bound
adc
jp
in
push
pop
stc
inc
xor
or
(bad)
stos
xchg
push
or
inc
mov
push
ins
pushf
push
xlat
mov
pop
leave
mov
xor
ins
fsubrp
xchg
pop
(bad)
ins
in
cdq
jge
xor
and
jge
daa
xor
xor
aas
mov
push
jmp
pop
and
cmp
test
mov
jo
inc
outs
sar
test
mov
idiv
nop
icebp
jge
mov
js
lods
xchg
imul
jo
test
adc
mov
in
cld
ss
cdq
push
dec
div
or
push
fadd
or
shl
add
xchg
adc
xchg
sub
pop
daa
out
xor
sbb
shl
scas
push
mov
in
dec
sbb
jo
push
pop
test
repnz
mov
or
push
arpl
sub
neg
ficom
call
jae
xor
push
in
stos
fldcw
push
jae
sbb
and
aaa
les
test
mov
xchg
mov
fsubr
imul
mov
test
jae
inc
push
jg
cmps
xchg
iret
scas
in
sbb
sbb
bound
inc
jl
or
mov
cmp
sub
inc
lods
clc
xchg
ins
popf
mov
frstpm(287
(bad)
(bad)
and
jmp
lods
cmps
mov
popf
into
or
add
adc
dec
mov
inc
pop
scas
sbb
lock
xchg
aad
push
and
mov
nop
js
ret
scas
pop
push
outs
cmp
adc
pop
fcmovnb
jp
mov
add
fist
in
stc
and
pop
aad
lods
push
lock
and
ror
jmp
fwait
mov
mov
push
xchg
pop
xor
xchg
jge
and
jbe
xchg
jns
fsub
lds
push
mov
cmp
and
jne
mov
mov
add
(bad)
lahf
sti
cmp
popa
aad
lock
pop
mov
call
jl
sar
mov
mov
jb
xchg
into
(bad)
inc
sub
sub
loope
addr16
cmp
cmps
xchg
js
movs
xor
jp
add
xor
push
or
fld
retf
lods
sub
aad
and
mov
cmp
lods
jbe
mov
test
cwde
xor
ss
sub
repnz
push
mov
addr16
mov
and
cld
add
xor
sub
push
ret
add
xlat
clc
cmp
rol
mov
ja
out
push
int3
sub
sbb
xor
jne
jno
or
mov
pop
cmp
add
out
jle
fwait
mov
push
mov
imul
loop
ret
fdivr
ins
mov
stos
jno
xchg
cli
cwde
mov
cwde
mov
fbstp
cmp
jae
cmps
or
stos
aad
xchg
test
push
mov
in
scas
movs
or
scas
cdq
pop
or
mov
cld
mov
test
test
test
hlt
jmp
shl
(bad)
cmp
pop
add
test
sub
data16
ins
and
pop
pop
xchg
cdq
xchg
jne
dec
(bad)
jne
dec
or
mov
inc
lds
or
xchg
lods
fadd
mov
pop
(bad)
adc
popa
fwait
dec
sbb
shr
fisubr
mov
pop
sbb
push
je
sub
(bad)
jmp
dec
inc
mov
push
(bad)
in
stos
movs
lds
lods
mov
dec
sbb
out
cwde
ds
lahf
lock
mov
or
sbb
sar
rcr
mov
pop
sbb
retf
scas
cs
std
gs
repnz
ret
xchg
enter
dec
mov
test
mov
enter
test
frstor
mov
je
cmp
mov
sub
mov
mov
in
(bad)
clc
ret
aad
push
fadd
cmp
mov
sar
push
push
loopne
sub
mov
sar
xchg
dec
(bad)
pop
shr
outs
clc
cmp
cmp
mov
mov
outs
jne
adc
repz
rcpps
ds
jmp
rcr
(bad)
sti
jp
std
popa
jae
or
sbb
jecxz
dec
js
scas
xlat
leave
vunpckhps
adc
shr
jne
shl
jae
push
inc
jp
xor
dec
call
es
outs
mov
test
fild
rcr
xchg
xor
mov
cmps
mov
push
cmc
dec
ja
mov
aas
mov
jae
adc
xchg
(bad)
rol
ror
movs
push
and
mov
push
cld
jg
mov
cld
pop
mov
jmp
add
je
dec
mov
pop
add
and
mov
imul
es
push
push
mov
psraw
cs
stos
sub
leave
sbb
popa
dec
mov
pop
iret
or
pop
mov
jno
mov
mov
lahf
pop
push
shl
dec
jnp
ins
int3
mov
loopne
xor
or
sub
call
jnp
pop
inc
push
addr16
je
and
dec
xor
out
jne
cld
xchg
push
lods
push
sbb
fsubr
sti
fld
and
jne
sti
bound
sbb
daa
inc
data16
repz
xchg
cmp
jae
add
fwait
xchg
outs
in
sub
pop
in
neg
(bad)
mov
xchg
add
lea
ja
shr
js
jg
jmp
or
popf
dec
lods
push
jnp
test
daa
xchg
jp
lods
add
ret
mov
sti
stos
shr
mov
mov
mov
jmp
fld1
pop
mov
mov
sbb
enter
mov
rcr
lahf
xchg
nop
sbb
lock
call
stos
arpl
pop
push
daa
data16
sti
aad
div
icebp
dec
lahf
jge
or
(bad)
add
jl
clc
addr16
call
xchg
mov
iret
or
rcr
in
add
or
(bad)
and
mov
movs
test
hlt
mov
cmp
ss
sbb
lahf
sbb
in
fwait
call
inc
out
int3
or
pop
xlat
out
in
retf
jg
jg
sbb
popa
cmp
or
fadd
adc
bound
xchg
inc
jnp
iret
push
enter
and
push
retf
sahf
fwait
cmps
pop
sub
sub
xor
inc
xchg
cli
std
test
mov
pusha
rcr
push
test
(bad)
icebp
rcr
dec
imul
outs
jno
cmc
inc
sbb
mov
mov
jg
in
add
lahf
je
pop
std
mov
inc
scas
inc
sub
xchg
aad
pop
cld
pop
mov
add
sub
push
or
cmp
add
xchg
mov
repnz
sub
adc
push
dec
ds
or
and
(bad)
mov
je
or
mov
cmp
push
cli
mov
cmp
(bad)
aaa
ss
shl
pop
cmp
std
lods
mov
xor
sub
das
cmc
inc
fldcw
mov
pop
ss
pop
mov
dec
cwde
jae
scas
xchg
jecxz
add
cdq
sub
push
cdq
xor
pushf
pop
xchg
ficom
or
adc
fld
mov
adc
add
add
sub
dec
or
jae
xchg
adc
rcl
(bad)
and
fidivr
jg
mov
pop
arpl
xchg
rcr
jnp
cmp
ja
xchg
sar
cmps
dec
sub
or
ret
arpl
int
push
test
dec
xor
in
ficom
scas
lds
pop
retf
test
xchg
nop
push
shr
inc
add
or
adc
inc
push
fsub
sbb
and
mov
repnz
mov
dec
inc
and
push
push
dec
aaa
gs
or
outs
jns
inc
shl
jno
inc
xchg
mov
nop
out
or
shl
push
and
ins
push
xor
mov
or
xor
and
stc
xchg
mov
or
popf
lea
push
popa
sub
sbb
rcl
and
cmps
sahf
xchg
(bad)
lods
out
xchg
mov
jns
jl
jmp
js
outs
or
rcl
movs
jmp
xchg
je
ss
into
ds
call
xor
inc
pop
pop
mov
fbld
dec
(bad)
test
push
repnz
add
jno
popa
movs
jmp
frstor
clc
adc
push
dec
mov
imul
sub
jg
retf
cmpxchg
adc
pop
pusha
or
push
sbb
movs
or
das
push
bound
and
daa
ror
loopne
push
sahf
iret
in
out
int
mov
and
add
inc
sbb
sbb
adc
cld
shl
push
sbb
jle
pop
lds
in
ins
addr16
push
cmps
adc
cwde
mov
not
std
mov
pusha
js
push
sbb
and
push
outs
push
push
ins
pop
mov
jne
cmps
imul
test
push
ds
rcr
jae
fwait
mov
int3
mov
lahf
lahf
mov
lea
fimul
lahf
imul
clc
scas
addr16
lds
xor
les
adc
xchg
cmp
push
sub
(bad)
data16
cmp
dec
add
jbe
dec
xor
and
lods
fdiv
mov
mov
cmp
(bad)
xchg
adc
mov
mov
xchg
push
shl
(bad)
cmp
mov
mov
jb
test
movs
adc
inc
and
mov
in
xor
cld
add
push
(bad)
adc
popa
pop
test
jg
push
(bad)
aas
mov
movs
sti
and
add
add
and
lods
lods
stos
fadd
sub
ss
fdiv
lea
push
and
mov
mov
rcr
adc
push
stos
pop
pop
and
fsub
popf
adc
cmp
cwde
std
adc
shl
mov
loopne
sbb
das
push
xor
cld
push
xchg
mov
(bad)
push
xor
test
lods
fxch
es
(bad)
xchg
imul
and
out
add
ds
icebp
out
xlat
jg
arpl
and
inc
or
loope
jae
inc
ss
fldenv
cwde
out
test
dec
add
jmp
pop
repz
in
push
jbe
cmp
loopne
dec
pop
mov
in
cmp
(bad)
lds
xchg
mov
pop
bound
rol
pop
dec
comiss
sti
mov
imul
sbb
xchg
adc
and
nop
xchg
frstor
stos
lock
sub
mov
sahf
rol
rcl
in
js
fbstp
lods
mov
stc
repnz
xchg
inc
xor
push
xor
dec
shr
push
add
xlat
adc
mov
popa
fs
jmp
cmc
ds
and
xor
out
or
jo
mov
test
mov
inc
dec
fsubr
repnz
rcr
mov
and
mov
mov
jg
pop
sti
repnz
or
cmp
adc
mov
loope
(bad)
mov
lea
xchg
ret
xchg
xor
push
pop
adc
inc
into
adc
adc
sub
push
int3
pop
mov
repnz
pop
adc
mov
mov
(bad)
call
or
bound
(bad)
loopne
aaa
push
test
adc
add
jecxz
cmp
mov
daa
add
ins
pop
mov
(bad)
mov
cld
inc
ret
dec
dec
inc
add
data16
(bad)
cmp
pusha
cmp
stos
push
(bad)
ret
gs
fld
dec
cs
test
js
xchg
mov
into
hlt
or
enter
out
cmc
inc
aad
popf
arpl
clc
fsubr
lods
iret
gs
pop
sub
inc
es
in
jmp
jne
out
xchg
jmp
cmp
mov
ror
retf
inc
repnz
popa
inc
clc
gs
xchg
xchg
jmp
out
cmp
(bad)
jae
cld
pop
cld
out
inc
pop
dec
int
dec
nop
jecxz
xor
fnstsw
mov
xchg
or
sahf
rcr
and
inc
and
icebp
push
jl
dec
adc
sbb
xchg
movs
retf
push
mov
adc
fs
out
int
push
add
ror
dec
jl
stos
lock
push
inc
ret
inc
push
das
aas
push
inc
dec
es
(bad)
push
xor
and
adc
mov
fidivr
ss
and
das
das
shr
out
mov
cmpxchg
jl
mov
aas
jle
fsubr
mov
ret
addr16
push
ret
retf
adc
mov
repnz
sub
or
xor
mov
xchg
aaa
stos
adc
jmp
or
test
ret
shr
pop
cmp
cmp
adc
seta
xchg
fucom
sbb
dec
ds
fdivr
adc
shl
jg
sbb
lock
fld
iret
xor
pop
in
mov
xchg
push
ret
cmp
les
icebp
fsubr
sub
sbb
push
mov
jg
add
(bad)
dec
in
ins
sahf
cmp
jne
stos
inc
in
cmp
das
outs
mov
adc
xchg
loop
cs
pop
add
repnz
add
sbb
cli
fdivr
xchg
push
pop
sub
mov
mov
xchg
cmp
mov
pop
rol
pop
adc
das
ds
adc
in
sub
or
inc
scas
data16
fadd
push
jecxz
(bad)
lahf
in
sbb
fsub
out
jae
(bad)
lock
aas
sbb
xchg
imul
inc
push
out
or
test
add
push
(bad)
or
in
dec
xor
push
outs
push
out
jmp
lods
ins
je
out
ja
push
push
fstp
and
mov
xor
mov
pop
inc
ror
mov
pop
xchg
pusha
adc
pop
pop
cmp
jnp
aas
fs
aad
cmp
push
loopne
and
mov
in
add
cmp
scas
push
xor
push
jmp
add
fcmove
lods
(bad)
dec
push
fs
cli
les
cmp
clc
cmp
aad
push
xchg
xor
cmc
dec
cmp
adc
xchg
mov
icebp
out
loop
inc
mov
xchg
jmp
gs
aam
ret
in
cld
cwde
imul
jl
mov
push
aam
and
repz
sbb
movs
aam
in
add
fcomi
inc
xchg
retf
mul
loope
int3
xchg
push
(bad)
fcom
in
cwde
enter
mov
outs
xchg
std
xchg
shl
xchg
scas
cmps
ds
out
xchg
inc
leave
call
mov
mov
sub
imul
xchg
cmps
test
enter
dec
mov
fidiv
inc
sar
popf
jmp
push
ret
jl
xor
clc
(bad)
and
sub
xchg
jnp
call
jl
mov
mov
push
fcomp
xor
add
retf
pop
add
pop
fisttp
fwait
and
mov
mov
aas
pusha
push
imul
or
je
and
add
and
and
stos
jl
jns
push
je
je
pop
aam
shl
xlat
push
in
mov
dec
in
sub
popf
or
mov
stos
imul
jle
sub
mov
inc
jmp
xchg
les
mov
sbb
adc
xchg
clc
adc
and
xchg
cdq
aam
inc
(bad)
xchg
add
jmp
popf
pop
adc
sub
xor
or
es
pusha
cmps
shl
adc
mov
rcl
neg
push
cmp
lahf
jp
cmps
cmp
xchg
aam
jmp
repnz
nop
jnp
sub
mov
test
daa
movs
mov
mov
inc
fist
popf
in
jl
jmp
mov
or
push
fs
jmp
sub
leave
nop
fwait
aam
iret
xor
xchg
call
mov
call
inc
repnz
loope
dec
mov
fwait
or
aad
movs
aaa
add
mov
jecxz
addr16
dec
push
pop
add
sub
mov
cmp
lock
stos
repz
mov
jb
mov
rcr
in
xchg
mov
xchg
and
or
or
push
xchg
hlt
iret
adc
pop
cli
scas
and
push
xlat
mov
xchg
mov
mov
pop
jno
ja
(bad)
or
push
pop
lods
daa
mov
test
mov
mov
data16
in
test
or
cmp
adc
ins
adc
dec
xchg
movs
dec
or
repz
stc
and
hlt
cmps
iret
outs
adc
push
dec
movs
sub
fist
enter
cwde
das
icebp
pop
mov
dec
pop
xor
mov
push
xchg
jne
(bad)
cmc
jmp
out
adc
jecxz
jns
loope
sbb
sahf
(bad)
mov
loop
aas
popf
fcom
dec
xchg
rol
sub
je
(bad)
jp
std
out
or
add
lahf
sahf
sahf
loop
sub
cmps
test
nop
jnp
cmp
ficomp
ret
sbb
out
test
xlat
jno
(bad)
sbb
and
add
(bad)
cld
mov
dec
adc
in
je
dec
xor
sbb
sub
mov
das
icebp
out
add
pop
cmp
push
mov
call
xor
xor
cld
movs
jg
jmp
xor
lods
in
ds
sar
xacquire
mov
and
idiv
pop
push
or
test
fidiv
fmul
mov
push
(bad)
clc
mov
jge
clc
aas
xchg
test
add
test
(bad)
adc
lock
jg
enter
pop
push
cmps
imul
fadd
addr16
push
sbb
inc
pop
fbld
push
push
push
int3
fadd
iret
jecxz
fs
mov
sbb
icebp
je
cmp
(bad)
sub
data16
nop
push
add
adc
add
outs
ficom
jne
into
sub
push
pop
pop
loop
mov
ins
int3
xor
pop
test
mov
loop
add
cmp
push
dec
mov
xchg
push
ss
add
fbstp
pop
(bad)
aad
ficomp
sbb
sub
jb
and
and
sbb
sub
or
test
(bad)
sub
mov
fst
and
fst
lea
inc
xchg
jecxz
ss
lods
icebp
mov
inc
xchg
mov
mov
xor
push
cdq
or
loope
xor
jmp
retf
shl
inc
adc
cmp
inc
pop
(bad)
test
and
adc
shr
xchg
pop
xchg
jns
mov
mov
push
push
(bad)
movs
aaa
mov
mov
repnz
adc
dec
cmp
mov
int
pop
push
or
inc
dec
dec
jnp
and
lods
jg
popf
lods
shl
add
xor
out
jge
daa
sbb
xchg
sub
or
daa
jno
mov
pop
mov
out
and
xchg
call
jne
jmp
cmp
push
(bad)
jb
int
mov
xchg
xchg
fld
sub
push
jne
push
mov
push
int
adc
scas
inc
movs
mov
int
adc
in
fild
adc
jo
dec
sbb
jb
rcr
pop
cmp
cmp
iret
popf
shl
in
cmc
sti
sub
das
(bad)
stc
repnz
inc
loope
xor
mov
rcl
mov
in
or
pop
xchg
jecxz
(bad)
xor
retf
or
inc
nop
leave
neg
jl
inc
dec
dec
cld
fs
and
inc
test
dec
lock
dec
inc
lods
inc
and
sti
(bad)
pop
dec
inc
sbb
xor
mov
adc
cmp
imul
outs
jnp
sar
es
add
mov
dec
inc
add
add
add
iret
dec
mov
cmc
aaa
sar
stc
jmp
jb
cmp
or
mov
sub
jae
mov
mov
jl
adc
and
adc
sahf
inc
lahf
jmp
xchg
pop
ins
dec
stos
and
jne
xchg
fist
ss
mov
dec
inc
jno
call
es
pop
jmp
or
mov
mov
lds
ins
xlat
and
dec
je
sub
mov
lahf
jo
jnp
hlt
dec
jp
cmps
rcl
inc
jecxz
push
and
daa
xor
push
js
or
jno
scas
xor
sub
je
loop
ins
sub
fsubr
xchg
pop
push
popa
cs
add
gs
stos
xor
fs
push
jecxz
lahf
mov
imul
mov
push
(bad)
jle
bound
loope
jp
pop
popa
fwait
or
add
fcmovnbe
push
push
int
inc
adc
jne
std
lods
adc
movs
add
inc
test
call
add
ror
jno
repnz
jno
mov
xchg
(bad)
fld
popa
lods
adc
dec
das
sbb
pop
pop
pop
mov
xchg
retf
push
mov
push
shl
mov
in
push
pop
mov
mov
mov
xchg
jmp
(bad)
sbb
and
(bad)
mov
scas
mov
push
mov
fstp
sub
cmps
push
or
dec
cmp
out
ficomp
mov
inc
or
mov
lods
push
mov
sar
push
mov
aaa
sbb
xor
not
bswap
inc
lods
mov
sub
sbb
ds
xchg
or
mov
js
mov
dec
adc
pop
cmp
sbb
fbstp
repz
inc
mov
jecxz
out
add
ja
pop
mov
out
out
push
into
jnp
cmp
mov
and
retf
clc
and
not
outs
sub
xchg
shl
jecxz
push
pop
(bad)
push
loopne
cmp
je
fnstenv
xor
icebp
out
pushf
fisubr
mov
fld
(bad)
hlt
add
cli
fistp
mov
sub
mov
inc
rcr
fs
lds
(bad)
pop
sahf
or
or
sbb
shr
cwde
jnp
das
fwait
push
out
sbb
lods
lods
mov
add
cmp
adc
adc
sbb
addr16
push
push
or
movs
dec
mov
aam
xor
mov
xor
data16
jg
imul
test
push
add
test
inc
add
and
mov
mov
ret
sub
add
out
lods
pusha
loop
or
(bad)
fld
or
enter
fidiv
bound
mov
jb
addr16
push
push
mov
iret
(bad)
jnp
mov
lods
xlat
stc
arpl
jbe
aad
dec
cmp
iret
pop
jmp
mov
inc
xor
daa
inc
retf
adc
jmp
push
mov
push
out
in
(bad)
(bad)
fs
xchg
dec
sub
das
jns
pop
mov
outs
push
imul
std
add
sti
(bad)
pop
or
test
mov
push
nop
mov
dec
push
xchg
lods
jg
push
mov
mov
(bad)
mov
out
fld
retf
cmp
(bad)
pop
dec
pushf
ss
xchg
hlt
rol
jno
loop
mul
push
call
inc
mov
pop
out
add
into
popa
(bad)
lahf
lds
jb
xchg
xchg
add
jne
dec
out
or
dec
out
jns
mul
mov
dec
imul
mov
sbb
(bad)
rcr
ja
mov
test
xor
out
aad
sbb
mov
icebp
fadd
sub
sbb
nop
xchg
imul
xchg
jae
lock
test
mov
mov
sbb
jge
or
and
mov
lahf
fcomp
test
fbld
push
repz
or
jle
clc
cld
cmp
sbb
push
xchg
(bad)
aas
cmp
push
adc
dec
push
pop
sub
cmp
mov
sub
dec
aam
sbb
mov
sbb
inc
pusha
mov
sub
sbb
and
pop
dec
das
inc
and
fnstcw
xor
movs
stos
xchg
xchg
movs
mov
push
xchg
test
push
cdq
push
cmp
imul
fcom
xor
fisttp
es
cmc
dec
cmp
std
mov
rcl
sub
repz
cmp
movs
(bad)
pop
xchg
inc
inc
cmp
lods
daa
and
inc
sub
lock
outs
adc
push
xchg
xor
(bad)
out
pop
jmp
xor
fcmovu
push
into
pop
sbb
cmp
clc
mov
jo
xor
cmp
cmp
fist
push
inc
bound
retf
mov
ret
fisub
mov
lods
and
push
and
pop
cmp
lock
sbb
mov
(bad)
in
dec
test
clc
mov
dec
add
test
sub
jno
pop
jl
sub
scas
call
leave
or
std
repz
bound
sbb
pop
and
cmp
int
test
pushf
ror
fisubr
mov
adc
imul
aaa
aam
aaa
aad
clc
(bad)
imul
int3
mov
push
clc
lods
or
xchg
fiadd
mov
out
ja
lds
push
mov
mov
call
sbb
cli
nop
pop
ins
fsubr
xlat
jb
(bad)
sub
pop
jb
hlt
imul
fsubr
dec
rol
enter
push
and
fcmovu
fst
jmp
add
inc
pop
mov
(bad)
movs
pop
mov
std
iret
inc
enter
fincstp
and
and
(bad)
stc
add
sti
xchg
ins
push
inc
xor
ins
pop
mov
es
and
in
popa
sub
ret
sbb
jb
daa
leave
popf
mov
cmc
mov
fcmove
add
push
into
test
jg
sbb
ffree
add
xchg
and
cmp
jg
xchg
mov
pop
sbb
xchg
imul
test
or
push
in
sub
mov
cmp
adc
out
stos
fdiv
add
adc
or
out
fsubr
mov
xchg
out
sbb
aad
icebp
cmp
aas
in
sbb
imul
dec
xor
out
jno
push
push
inc
add
aas
or
test
add
iret
inc
pop
inc
or
ss
xchg
pop
out
scas
test
mov
pop
pop
out
mov
ins
cs
xlat
xor
outs
pusha
cmp
shl
mov
pop
cwde
loope
push
inc
and
stc
fidivr
xchg
sub
mov
xchg
xchg
mov
or
jnp
mov
mov
inc
cmps
and
cmp
or
jo
test
adc
int3
mov
popf
sbb
std
push
xchg
mov
stos
lahf
fld
push
outs
retf
shr
pop
pop
repnz
xchg
xor
in
inc
push
ds
dec
mov
pop
jno
xor
inc
pop
test
aad
push
iret
pop
mov
iret
xor
mov
out
and
enter
add
test
shl
ss
sub
adc
cmps
xchg
aas
cmp
lahf
push
ins
fisttp
cmc
mov
sub
pop
(bad)
fdivr
inc
fimul
test
pusha
sub
push
mov
push
or
adc
jae
mov
test
aaa
imul
fsubr
daa
in
ss
mov
cld
sub
mov
mov
sub
xor
dec
int
fnsave
jo
and
xchg
sub
mov
jo
aad
(bad)
mov
jns
mov
test
dec
xor
fdivrp
ret
fisttp
loopne
and
sbb
sub
xor
retf
loop
js
fwait
sbb
add
mov
call
out
adc
add
loopne
sub
mov
xor
(bad)
push
icebp
in
je
or
sbb
push
mov
lock
mov
mov
jge
dec
scas
dec
xchg
or
daa
push
xor
mov
out
sbb
ret
popa
loopne
ficomp
sub
mov
outs
in
retf
add
mov
frstor
mov
ds
push
sub
add
push
jecxz
and
clc
icebp
pop
push
push
xchg
sub
idiv
dec
repz
or
sti
fwait
pop
mov
cmps
iret
div
aaa
(bad)
mov
cmps
lahf
je
(bad)
jns
mov
arpl
sahf
bound
and
dec
inc
sbb
test
in
fyl2x
sbb
jb
push
lock
cmp
mov
jnp
loop
xchg
xor
push
in
loop
outs
mov
cld
ss
push
cdq
pop
aaa
cmp
je
pushf
and
pand
int
adc
mov
jge
dec
xchg
xor
pushf
sbb
fisub
mov
lds
mov
cmp
lahf
xchg
iret
mov
and
push
inc
call
fwait
and
mov
mov
xor
pop
xor
xchg
mov
fidivr
xor
iret
movs
ret
mov
push
pop
xchg
cmp
dec
jle
aaa
daa
sub
xor
add
mov
cmps
repz
xchg
test
lods
pop
hlt
stos
test
and
test
push
mov
test
aad
adc
(bad)
jle
jns
jnp
push
retf
jmp
jae
test
sti
sub
xor
aas
cmps
test
daa
mov
cmp
or
pop
cmp
imul
out
sbb
cmp
fistp
ins
inc
mov
js
jmp
fmul
aad
push
ins
xlat
enter
lea
jns
sbb
in
popf
sub
shr
addr16
mov
and
test
xchg
daa
jno
pop
mov
cmc
scas
cmp
cmp
or
push
mov
fcom
gs
call
xchg
add
sti
retf
push
xchg
ins
lahf
sbb
sbb
xor
pop
lods
sbb
fstp
minps
out
pop
pop
fbstp
test
cmp
das
sahf
ins
test
sbb
cmc
repz
xor
xchg
inc
pop
dec
cmp
jge
jbe
std
test
stc
sbb
nop
pop
cdq
iret
mov
movs
pop
enter
pop
imul
adc
cld
(bad)
dec
arpl
mov
mov
mov
push
push
lods
pop
popa
icebp
mov
sub
cmp
mov
(bad)
mov
fs
movs
outs
jnp
cld
push
ret
mov
int
popa
ficom
sub
test
push
adc
xor
push
in
or
and
in
xor
test
loopne
js
out
std
xchg
test
rol
sti
fstp
sub
pusha
push
pusha
pop
repz
popf
add
pushf
arpl
loop
test
jbe
xchg
push
adc
lea
adc
mov
mov
lock
stos
cmp
idiv
add
sbb
mov
rcr
aad
add
sbb
add
in
loop
mov
or
mov
fistp
xor
cwde
in
push
lahf
and
xchg
js
mov
inc
dec
fmul
and
xchg
iret
(bad)
fwait
ret
icebp
sar
(bad)
popf
iret
nop
pop
mov
jb
retf
(bad)
fdivr
mov
mov
movs
ins
push
push
lods
jmp
lock
push
bound
pop
pusha
cwde
scas
jmp
pop
jne
mov
xor
and
sub
inc
fld
imul
lahf
scas
sub
mov
nop
jl
jbe
pop
fadd
fild
mov
loope
cmps
jne
mov
pushf
mov
int
mov
mov
(bad)
ret
test
inc
pop
aaa
dec
add
arpl
lea
retf
sbb
mul
cmc
das
movs
cdq
sbb
aad
(bad)
outs
repnz
ror
adc
test
pushf
cli
push
cmps
loopne
and
shl
not
sbb
add
cmp
call
pop
add
es
out
stc
fdiv
loop
scas
lahf
pushf
sbb
jno
inc
mov
scas
in
mov
pop
cmp
aaa
xchg
outs
xor
add
popa
hlt
or
popa
cmp
mov
xor
xchg
adc
mov
pop
xchg
sub
pop
(bad)
adc
ffreep
test
pop
inc
loop
ins
fstp
jmp
retf
pushf
xor
out
test
fst
add
in
xlat
jns
aas
dec
sbb
adc
mov
(bad)
and
mov
std
loope
inc
add
lea
mov
fidiv
or
add
fld
lods
pop
test
call
repnz
lods
xor
pop
mov
adc
(bad)
jno
jne
xchg
xor
mov
int3
push
xchg
call
shr
scas
xchg
lahf
add
sub
jns
pop
aaa
jno
repnz
ret
sahf
pop
enter
test
sbb
adc
iret
mov
dec
cdq
ret
xchg
sub
push
push
or
adc
xor
jb
bound
or
inc
shl
mov
adc
mov
ds
adc
icebp
(bad)
pushf
aaa
out
ins
inc
test
movs
cmps
add
shl
and
rol
xchg
dec
jg
out
inc
or
fdivr
ret
jbe
adc
cmp
iret
lea
fwait
pushw
shl
(bad)
jle
call
arpl
int
mov
test
push
out
jno
popa
jmp
cmp
aam
cli
mov
mov
mov
stc
popf
pop
jge
cmp
push
mov
scas
sbb
jb
into
pop
inc
and
or
mov
pop
ins
aaa
dec
imul
mov
(bad)
into
sub
sub
dec
or
push
xchg
sub
outs
dec
movs
cmp
mov
adc
and
sbb
scas
pusha
popa
xor
loopne
ja
imul
cmp
mov
push
leave
sbb
adc
xor
jmp
scas
lods
call
and
pop
shr
xchg
sti
jmp
mov
(bad)
xor
dec
enter
inc
push
adc
adc
rol
jne
mov
es
cmp
mov
fcmovnbe
out
fcmovu
push
xchg
adc
aaa
sar
rcl
inc
(bad)
jo
mov
pop
xchg
stc
mov
(bad)
jle
dec
cmc
ss
(bad)
in
es
add
sub
mov
mov
inc
jbe
pusha
dec
dec
cdq
(bad)
(bad)
mov
push
xor
and
loop
mov
lahf
and
mov
inc
sbb
in
mov
std
adc
rol
xor
cwde
add
push
sbb
pop
mov
fisttp
out
mov
xchg
das
(bad)
cdq
pop
mov
clc
call
adc
imul
sub
add
xchg
bound
out
mov
ss
mov
(bad)
pop
or
lods
cmps
pop
adc
add
xor
add
mov
retf
lds
xor
inc
jl
scas
in
or
cmc
mov
mov
mov
push
adc
ss
push
mov
repnz
in
div
jne
xor
push
movs
jnp
in
and
pusha
mov
mov
repz
cmps
xor
adc
fistp
xor
push
rol
xchg
inc
arpl
imul
cmps
js
pop
push
and
mov
lods
xchg
ret
aas
int3
pop
popf
jmp
shr
add
iret
rcl
fadd
xor
or
add
sbb
iret
call
mov
test
(bad)
jnp
lea
dec
out
outs
xor
inc
inc
mov
mov
icebp
xlat
add
aam
ss
jle
cld
loopne
cmp
cdq
shl
je
inc
cmps
daa
lea
icebp
add
je
or
pop
cs
or
mov
dec
dec
jae
aas
test
pop
test
cmp
xor
stos
mul
xor
outs
into
repnz
xchg
mov
pushf
lods
mov
jmp
pop
inc
retf
adc
je
cld
fcom
cmps
mov
push
mov
cld
pop
shl
or
pop
repz
xchg
cli
stos
imul
or
sbb
in
cmc
fstp
xor
cwde
push
xor
pop
pop
add
cmc
sub
adc
icebp
pop
es
inc
out
imul
ficom
pop
xor
pop
fiadd
cdq
dec
adc
inc
add
popf
add
xchg
fucomi
arpl
pop
mov
push
test
inc
push
and
das
out
out
fcmovbe
cmps
rcl
test
mov
xchg
data16
sub
adc
dec
jg
adc
pop
push
stos
movaps
inc
scas
jnp
fcom
ds
outs
add
jmp
into
jb
loope
xchg
sub
xor
push
jmp
and
sbb
add
ret
sub
std
pusha
jle
aaa
mov
out
les
mov
lods
dec
push
jmp
test
mov
jnp
cmp
cmp
and
retf
mov
dec
pop
call
lods
or
mov
jb
adc
mov
sub
add
jg
fwait
mov
mov
loop
cmp
retf
fnstcw
xchg
jmp
xchg
push
mov
cmp
adc
test
lock
fldenv
and
imul
(bad)
jo
pop
ins
sbb
jnp
add
sbb
add
mov
push
xchg
call
xchg
in
btc
fisub
(bad)
jle
(bad)
neg
js
and
in
push
dec
sub
push
xor
pop
rol
mov
xchg
sub
dec
jb
pushf
sub
mov
dec
inc
aad
or
add
cmp
push
jne
(bad)
repnz
je
xchg
bound
mov
cwde
std
xchg
jmp
(bad)
aam
js
pop
test
and
lds
mov
in
in
or
(bad)
fisub
and
movs
jno
scas
(bad)
mov
jg
fst
and
dec
jne
pusha
fwait
cmc
xlat
jb
pop
pop
outs
add
(bad)
les
aas
sar
outs
lock
push
adc
ins
jmp
xor
js
bound
push
inc
fidivr
test
push
loopne
int3
stc
push
xor
jecxz
push
mov
jno
or
pusha
dec
or
fucomp
stc
xchg
loopne
int
jmp
popa
push
pop
fs
and
fisub
add
fsub
lock
sub
cmp
test
sbb
aas
mov
mov
cmps
xor
or
fild
imul
dec
and
(bad)
int
sahf
or
movs
imul
sti
mov
call
sbb
movs
add
sbb
mov
mov
mov
xor
loop
pusha
ror
jmp
faddp
out
aad
cmp
or
in
and
fwait
mov
push
int3
lods
and
dec
mov
outs
pop
fs
pop
push
sbb
push
gs
pop
or
rol
xchg
adc
sub
add
ds
jb
outs
fld
mov
dec
ret
jge
xor
cmp
jl
fadd
jns
sub
jecxz
leave
jno
fcom
cmp
and
retf
xor
jle
mov
int
mov
in
loopne
fadd
sbb
inc
cdq
sbb
imul
mov
dec
push
jmp
into
pop
out
xor
adc
shl
jne
dec
and
sbb
fs
sbb
rol
pop
leave
in
xor
sub
mov
pop
mov
cwde
and
dec
mov
psrld
dec
or
jnp
clc
mov
aas
dec
cmp
lods
xor
ret
xchg
movs
xor
retf
or
out
inc
inc
sbb
cwde
mov
daa
ds
pop
rol
cdq
inc
gs
mov
xchg
push
adc
jno
jne
mov
mul
sbb
scas
push
sub
leave
push
cmps
sets
mov
inc
movs
dec
leave
int
ret
and
sbb
push
pop
xchg
movs
inc
push
jmp
pop
jmp
jmp
rol
cmp
push
aas
(bad)
sti
sub
lahf
inc
xchg
cmps
push
mov
mov
call
lds
xor
mov
pop
xlat
dec
push
inc
out
idiv
stc
mov
retf
out
cmp
mov
ins
cmp
outs
cmps
loop
xchg
sbb
cmp
mov
adc
jne
(bad)
dec
xor
add
arpl
mov
shl
in
add
xchg
test
dec
mov
dec
mov
mov
and
cli
ficomp
add
push
inc
cmp
dec
pop
retf
sar
into
dec
sbb
idiv
sub
xor
push
fidiv
mov
ret
xchg
sbb
xchg
push
test
push
push
sub
das
dec
xchg
mov
inc
stos
fsubr
mov
in
repz
mov
xchg
cmp
aad
leave
fild
sub
cli
int
sub
dec
popf
jge
ret
hlt
xchg
(bad)
rcr
sub
jl
out
test
pop
dec
xor
jnp
lods
adc
scas
xchg
sbb
(bad)
pop
stc
retf
pop
push
adc
aad
lea
(bad)
loop
sub
dec
mov
inc
out
test
pop
sub
in
loopne
push
mov
call
jge
addr16
jbe
ins
jge
into
fild
xlat
(bad)
pop
jmp
inc
jmp
xor
dec
sbb
popf
jmp
test
jle
sbb
xchg
mov
rol
mov
mov
cmp
sti
sbb
or
repnz
ror
int
and
sahf
push
sbb
lock
and
loope
xchg
add
jmp
fwait
pop
jle
adc
cmp
mov
mov
push
mov
dec
jmp
js
and
movs
jmp
mov
call
(bad)
clc
push
xor
sub
sub
jne
xchg
mov
clc
sbb
xor
imul
and
mov
mov
and
ds
push
mov
cmp
xor
jmp
sub
aaa
lds
xor
aaa
out
xlat
jb
ror
mov
(bad)
cmp
xchg
test
popf
adc
dec
bound
es
mov
fdiv
pushf
mov
ins
ret
or
call
icebp
sti
enter
in
sar
mov
bound
aad
jb
xor
pusha
repz
les
sbb
mov
gs
or
xor
mov
xchg
(bad)
dec
or
retf
inc
jno
fdivr
fcom
or
(bad)
dec
and
je
inc
mov
and
repnz
xchg
shr
jno
out
(bad)
sub
jl
rcl
icebp
int3
mov
mov
pushf
mov
scas
sub
js
test
adc
jmp
dec
clc
add
mov
loope
xchg
imul
xchg
xor
mov
shl
cmp
retf
xchg
push
xchg
gs
fwait
mov
pop
out
lock
mov
jle
add
mov
mov
nop
jae
ds
xchg
pop
sub
dec
xlat
fwait
into
push
pop
xor
repnz
les
shl
mov
daa
adc
shl
outs
lock
adc
call
cdq
movs
sahf
adc
aaa
fld
mov
sbb
xor
repnz
ret
inc
stc
inc
xor
repz
dec
not
imul
or
mov
jmp
cmps
or
les
fucom
pop
rcl
mov
ja
and
retf
fnstenv
out
test
sub
pop
repz
pop
mov
mov
push
scas
cmp
inc
loopne
dec
stos
out
pop
cdq
pop
out
fimul
push
xchg
movs
push
shr
or
pop
mov
or
nop
(bad)
and
dec
movs
dec
lock
fcom
cmp
add
xor
and
mov
jp
xor
xchg
mov
cmc
dec
or
test
jae
dec
dec
fwait
ins
sahf
test
mov
xchg
push
(bad)
stos
push
das
ror
cmp
xor
clc
cdq
aad
retf
or
jns
nop
ss
jmp
push
and
and
jmp
fs
imul
cdq
call
fstp
dec
ja
(bad)
pop
mov
loop
ret
xchg
pop
fwait
and
xor
bswap
dec
jecxz
mov
ss
jnp
jge
fwait
push
test
push
outs
xor
push
sbb
inc
cmp
add
cld
out
cmp
imul
jle
mov
repnz
shl
adc
pop
mov
sub
popa
loop
pop
or
mov
and
mov
cmp
mov
jo
mov
outs
adc
outs
and
jp
popf
in
mov
in
mov
cmp
cld
cmc
xor
mov
dec
test
dec
inc
xchg
mov
call
clc
adc
or
rol
add
clc
cmc
jbe
mov
aad
repnz
or
(bad)
repnz
or
(bad)
enter
mov
mov
das
out
aas
mov
mov
pop
pop
lods
add
and
(bad)
and
cld
stos
aad
bnd
div
sub
ficomp
(bad)
xchg
dec
add
jecxz
ins
mov
das
mov
ja
ret
xchg
jae
cmps
fdivr
cmp
mov
stos
sbb
aad
ds
jne
jb
pop
cmp
or
and
fwait
push
push
aad
add
and
call
or
fcom
cmp
xlat
sbb
(bad)
push
jge
loop
retf
xchg
sub
push
dec
stos
sub
inc
mov
cmp
mov
jb
or
mov
dec
or
jmp
inc
mov
popf
setb
test
loope
mov
cmps
xchg
mov
jmp
out
ins
push
movs
les
clc
cld
mov
popf
pushf
daa
sbb
out
xor
sub
iret
mov
jb
ret
push
adc
pop
push
gs
mov
sahf
dec
add
mov
and
mov
cmp
sbb
cmps
sbb
std
loope
(bad)
adc
stc
inc
icebp
add
pop
mov
or
mov
inc
pop
stc
adc
test
in
sar
xchg
pop
jb
dec
mov
dec
fmul
push
dec
(bad)
in
(bad)
xchg
add
xchg
xchg
cmps
fcom
jnp
cmc
mov
xchg
cwde
rcr
imul
lds
pop
or
lock
mov
std
in
and
das
sbb
sbb
cmp
jmp
sbb
xor
inc
ins
hlt
cmps
or
retf
xchg
mov
inc
and
dec
call
out
test
out
push
(bad)
jge
movs
sub
pop
add
(bad)
xor
xor
(bad)
cmp
xchg
lods
shl
stos
xchg
mov
fist
sbb
fild
out
pop
stos
jne
inc
inc
jl
arpl
inc
mov
popa
aas
xor
mov
std
cmc
aas
xor
fadd
inc
jmp
fsub
addr16
cmp
jne
sbb
repz
jae
or
cmp
adc
add
mov
and
inc
cmps
xor
ror
mov
mov
fimul
sub
add
icebp
adc
(bad)
bound
ins
push
std
push
or
xchg
adc
jbe
loope
mov
adc
jne
dec
and
jo
inc
push
mov
cld
mov
rcr
mov
imul
or
leave
pop
jmp
adc
inc
mov
and
cmp
xchg
(bad)
pusha
clc
not
inc
aas
cli
std
mov
sti
sub
dec
mov
in
dec
std
pop
fmul
add
das
mov
cmc
cmp
and
xchg
stos
cmp
out
out
cmp
ds
jg
pop
call
fcomp
dec
in
jno
xchg
xchg
repnz
pop
stos
sbb
scas
ds
loopne
call
in
adc
xchg
sbb
jl
xor
xchg
leave
sub
out
mov
fsub
or
adc
test
call
(bad)
dec
cwde
fisub
cmp
pop
imul
or
push
test
add
inc
pop
mov
leave
jns
cdq
mov
push
xchg
jo
push
sbb
adc
stc
popf
push
cwde
cdq
push
into
mov
cmc
je
rcr
ins
push
out
in
xor
add
(bad)
cli
push
push
lock
repz
mov
jle
sti
mov
fsubr
sahf
and
jp
imul
frstor
mov
push
sub
in
xchg
mov
ret
rcr
cld
call
idiv
inc
xchg
jl
fwait
push
xchg
jo
outs
cmps
sbb
cmps
fadd
mov
sbb
sbb
add
loop
sub
mov
jne
push
xchg
jne
cdq
push
jge
gs
push
push
sbb
dec
mov
out
mov
fbld
push
fild
inc
add
jl
ret
sub
push
fwait
pop
jo
bnd
daa
sub
fnstenv
in
nop
(bad)
jb
sbb
add
movs
mov
into
repnz
dec
or
ss
inc
pop
clc
sub
sbb
test
pushf
scas
dec
iret
loope
fst
add
stos
and
or
and
aas
aam
ss
push
jl
inc
and
xor
or
out
adc
not
das
ret
adc
pop
xchg
dec
shl
sub
aad
pop
mov
jns
pop
pop
popa
cmp
cmps
icebp
mov
les
lods
cmp
push
add
inc
push
inc
mov
imul
cmps
jp
test
push
out
pop
ret
pop
inc
loopne
jmp
sbb
ss
(bad)
sbb
sub
rep
fcomp
movs
cld
adc
jbe
lods
sub
lea
and
push
pop
(bad)
popa
and
test
out
ret
mov
mov
pushf
in
jmp
dec
add
iret
das
xor
fld
mov
cmps
fbld
add
cs
cs
rol
ja
ficomp
fwait
cwde
and
xor
or
sub
stos
add
dec
adc
aam
sub
adc
vaesdeclast
xor
mov
ss
gs
lods
jb
push
iret
jns
inc
pop
addr16
(bad)
into
adc
rcr
fadd
push
inc
xchg
sub
xor
loop
xchg
in
outs
sbb
add
fdivrp
sub
mov
nop
dec
sar
lahf
test
ret
jno
lods
xchg
aaa
mov
jae
dec
mov
push
jge
fild
inc
cmps
xchg
xchg
call
cwde
movs
pop
pop
and
out
lock
jb
or
fucomi
add
cmp
inc
mov
dec
rol
not
mov
xchg
(bad)
rol
push
repnz
bt
mov
jg
sbb
xchg
test
xchg
jmp
movs
(bad)
mov
stc
mov
aaa
dec
xchg
scas
fcomip
call
mov
in
fiadd
mov
loopne
int
fs
sbb
pop
jb
(bad)
jmp
mov
inc
int
aas
pop
lahf
cmp
sub
adc
(bad)
mov
data16
in
mov
movs
sub
cmp
sahf
push
movs
cld
and
add
dec
aad
push
pop
xor
sbb
repz
inc
mov
sub
fstp
sub
fs
cmp
test
and
loopne
rcr
mov
(bad)
stos
nop
dec
cmp
retf
pop
nop
push
add
adc
mov
lock
lahf
rcl
add
sbb
(bad)
aad
iret
sbb
movs
pop
sbb
mov
sub
inc
je
int
aaa
mov
xchg
inc
mov
xor
imul
pop
mov
bound
dec
adc
aaa
adc
jp
cli
inc
cwde
in
xor
inc
mov
xchg
retf
not
xor
and
enter
inc
sub
icebp
mov
push
(bad)
(bad)
repz
xor
cmps
adc
add
loop
jl
pop
retf
mov
fisub
adc
rcl
mov
push
push
or
jl
repz
xor
sub
fs
stos
scas
test
sub
loopne
call
dec
sbb
shr
inc
mov
mov
enter
int
pop
in
addr16
into
or
and
out
(bad)
repz
and
outs
or
and
add
jo
inc
and
call
loop
add
push
inc
fcom
mov
jmp
push
call
jo
test
pop
push
jle
sar
xchg
xor
mov
add
jmp
cmc
cdq
or
popa
into
or
jbe
or
pop
scas
sub
div
or
movs
mov
mov
(bad)
leave
(bad)
cs
sbb
xchg
fstp
xchg
stc
loopne
jecxz
dec
cli
movs
mov
cmps
ret
inc
or
add
lds
push
in
push
or
clc
cmps
shl
out
pop
cmp
js
cmp
ror
sub
js
mov
and
mov
sub
or
mov
jbe
hlt
js
and
push
jbe
adc
cdq
dec
cs
xor
push
push
jae
movs
mov
adc
out
int
push
inc
inc
shr
out
add
out
mov
dec
test
add
rcl
leave
lds
cdq
mov
pushf
xlat
add
push
jmp
fadd
mov
das
gs
hlt
pop
xchg
add
shl
ds
arpl
xlat
push
dec
in
mov
cmp
mov
pusha
cmp
popf
aaa
fldenv
push
xor
popf
push
xor
in
shr
ins
lahf
cmp
dec
stc
jge
pop
xchg
lahf
or
out
imul
mov
loope
push
stos
pop
or
add
adc
ins
fs
(bad)
mov
(bad)
add
fmulp
pop
sbb
fdiv
out
cli
stc
aam
js
pop
sub
arpl
add
aad
xor
icebp
outs
pop
inc
xchg
movs
push
std
push
sbb
shld
push
sub
(bad)
(bad)
iret
sub
cwde
mov
iret
mov
inc
xchg
cmp
sub
test
das
in
mov
fnsave
(bad)
pushf
push
xor
inc
xchg
mov
pop
ret
mov
dec
or
jne
ins
mov
push
push
jle
retf
dec
(bad)
mov
xor
jmp
pop
jb
jg
jb
mov
sub
punpcklbw
and
ds
repnz
fstp
test
or
arpl
jo
xchg
popf
fnstenv
pop
xor
ss
mov
cmp
mov
adc
and
pop
pop
cs
inc
mov
mov
and
push
js
repnz
cli
cmp
jge
pop
xchg
mov
push
sahf
xchg
pushf
test
test
js
movs
adc
pusha
imul
pop
dec
inc
(bad)
shr
out
inc
ror
or
idiv
inc
pop
imul
sti
pop
adc
pop
clc
jno
inc
xor
add
lods
(bad)
cmp
mov
jno
stc
add
add
xor
popf
mov
das
or
addr16
dec
gs
dec
cmovns
mov
imul
mov
ret
adc
mov
retf
add
sbb
inc
pop
pop
ins
fwait
into
add
sbb
pop
add
xchg
cwde
loope
adc
repz
dec
push
inc
dec
(bad)
push
sub
call
inc
jns
lods
inc
mov
inc
rcl
lock
jmp
or
cmp
xlat
retf
mov
leave
retf
push
lods
std
loopne
fnstsw
adc
add
pop
les
(bad)
mov
mov
pushf
retf
and
ja
test
cs
es
inc
xor
pop
mov
xor
mov
adc
icebp
sahf
ret
btr
cld
or
aaa
adc
add
popa
adc
mov
adc
mov
aad
xor
stos
push
xlat
adc
push
sbb
pop
xor
int3
sub
fmul
(bad)
add
in
push
sub
hlt
call
fisttp
les
test
adc
test
out
out
aam
or
fdivr
mov
cli
mov
adc
jecxz
pop
inc
bnd
and
jg
adc
pop
pop
mov
sub
cmps
cs
stc
pop
xchg
cmp
xor
cmp
xor
add
je
mov
in
movs
push
pop
cmp
push
test
lds
push
mov
add
push
enter
inc
popa
call
stos
add
aam
or
or
stos
push
xor
sub
call
push
sub
add
in
in
inc
into
pop
xchg
cmp
dec
std
dec
mov
ror
adc
sbb
fnsetpm(287
cwde
fstp
cmps
and
data16
inc
sahf
pop
pop
push
stc
fcom
add
jge
push
in
push
push
mov
out
adc
loope
hlt
xchg
ins
ror
xchg
jle
and
dec
cmp
add
sub
ret
inc
push
jns
add
xor
stc
test
inc
mov
adc
stc
scas
jge
and
jmp
mov
jns
and
sbb
sahf
lods
adc
xchg
xchg
int3
pop
xchg
cld
std
mov
or
fsub
pusha
stc
pop
cs
das
inc
push
aas
call
push
sar
arpl
ret
adc
test
mov
mov
push
fnsave
cdq
dec
div
and
ins
dec
pop
inc
sbb
movs
and
repnz
sbb
rol
jle
dec
lds
in
mov
enter
xchg
push
sbb
pop
dec
mov
retf
fdiv
dec
jle
mov
mov
dec
jnp
mov
rcl
mov
(bad)
cmp
iret
das
adc
ds
out
sbb
cs
loopne
lods
fst
int
mov
in
pop
inc
call
sbb
lahf
cdq
lods
and
movs
int
in
xchg
lahf
jge
stos
push
add
lahf
rcr
(bad)
jmp
shl
xor
mov
xchg
pop
arpl
shl
add
sbb
ficom
push
pop
pop
es
fnstenv
test
lods
rol
mov
das
sub
or
int
adc
xchg
and
lock
sub
mov
fldenv
inc
jle
cmp
pop
stc
add
(bad)
or
mov
adc
cmp
jmp
xor
or
sahf
add
and
arpl
mov
jns
pop
fidivr
mov
mov
xchg
mov
inc
sub
pop
or
dec
jp
mov
jmp
cmp
pushf
xchg
fisubr
lods
pop
clc
addr16
test
inc
mov
push
daa
adc
out
in
push
xchg
addr16
pop
mov
dec
push
aam
dec
outs
test
mov
repz
or
add
xchg
lea
retf
outs
fstp
xchg
xor
jb
mov
shl
data16
xchg
adc
aas
xchg
sbb
or
fwait
mov
cdq
pop
mov
or
push
lea
int3
fs
aaa
jne
clc
into
adc
xchg
shl
pop
(bad)
fs
dec
sub
nop
jne
pop
sbb
aad
sbb
fsubr
dec
(bad)
pop
xor
pushf
imul
cmp
adc
xchg
xchg
sub
push
sbb
stos
jecxz
push
jmp
aas
scas
sbb
xchg
push
dec
ss
fucomi
mov
test
dec
neg
ss
sub
push
and
pusha
cmp
jp
scas
cmp
push
push
test
out
push
neg
fstp
out
das
shl
push
in
pop
mov
in
mov
mov
mov
outs
pushf
cmp
mov
xchg
les
inc
out
sbb
mov
xor
hlt
enter
test
arpl
pop
push
movs
pushf
push
pop
mov
xchg
sti
cmp
dec
test
shr
mov
inc
and
cmp
cdq
test
xchg
rol
jb
push
rcl
xchg
repz
mov
loop
std
fld
mov
push
jecxz
ins
or
sbb
dec
or
nop
pop
xchg
cmp
dec
and
inc
sub
aas
jmp
jns
pop
push
in
lahf
adc
ror
push
inc
in
push
retf
hlt
cmp
sub
adc
repnz
fsubr
or
ins
aam
mov
sub
sbb
push
lock
dec
dec
push
pusha
sti
cwde
fstp
dec
call
fstp
push
jne
pop
add
or
bound
test
arpl
les
in
psubusb
sbb
rcl
vpmaddwd
je
sub
adc
mov
inc
pop
ins
cs
fdiv
and
cmp
jbe
adc
xor
adc
xchg
je
or
test
mov
loopne
daa
leave
iret
add
shl
xchg
ret
mov
and
out
sub
scas
addr16
mov
scas
mov
lea
xchg
std
mov
pcmpeqd
int
retf
push
daa
or
mov
push
push
add
jbe
retf
jnp
fld
xchg
clc
aam
test
inc
cmp
cdq
out
mov
clc
ins
inc
dec
js
icebp
push
mov
sbb
icebp
call
jge
gs
jb
push
sub
mov
repz
mov
ins
xchg
pop
ja
push
ds
jmp
out
sbb
pop
movs
stos
sub
call
xchg
clc
jecxz
lods
ins
arpl
push
mov
icebp
inc
xchg
sbb
dec
addr16
jl
rcl
repnz
mov
stos
mov
inc
out
in
pop
push
xor
pop
cmp
lahf
test
test
retf
addr16
cmc
adc
sbb
sahf
ja
xor
fisttp
xchg
mov
fadd
repz
push
mov
mov
jge
dec
in
std
pop
mov
cmp
cmp
push
dec
movs
mov
popa
or
xor
dec
cmp
mov
(bad)
xor
jne
or
pop
aam
jb
adc
add
pop
into
shl
inc
pop
inc
jmp
push
cmp
dec
jb
in
and
push
fnstsw
inc
cwde
shl
jmp
das
mul
rcl
call
mov
jl
iret
or
cld
stc
inc
fstp
sahf
aas
sbb
daa
pop
adc
add
mov
xchg
mov
and
cs
sahf
je
xor
mov
xor
cmps
adc
add
jp
lods
out
sbb
adc
mov
mov
mov
in
xchg
cs
push
pop
push
test
loope
sahf
jmp
es
mov
mov
xor
cmp
jne
xor
pop
inc
xor
out
mov
jl
inc
popa
cs
retf
mov
pop
jle
add
and
fcom
adc
mov
lods
jo
inc
inc
ss
les
cdq
xor
int3
mov
xchg
pushf
inc
sub
test
mov
dec
xchg
leave
movs
ret
sbb
pop
cmps
stos
clc
dec
push
mov
sbb
jl
(bad)
sbb
xor
jns
mov
mov
addr16
shl
std
lds
jbe
and
push
movs
push
cmp
dec
push
nop
inc
loop
js
idiv
in
inc
(bad)
jb
pop
add
push
frstor
push
mov
rol
xor
xchg
cli
inc
push
mov
pop
in
and
push
jnp
mov
fisub
sbb
cli
or
(bad)
and
jne
mov
lods
jge
push
pop
adc
cmp
shl
pop
or
call
imul
gs
sub
mov
cmp
out
xlat
outs
jne
stos
arpl
aad
xchg
mov
jmp
stos
arpl
repz
stos
clc
adc
mov
sub
dec
leave
div
cmp
or
mov
movs
sti
pop
push
(bad)
mov
sbb
add
fild
mov
js
push
pop
popf
pop
push
test
jge
ds
mov
stos
icebp
pop
mov
inc
dec
pusha
in
xchg
ins
outs
cli
int3
jecxz
xor
mov
or
add
sbb
xchg
into
pushf
mov
add
cmp
mov
and
inc
push
mov
mov
clc
outs
clc
push
clc
mov
movs
pushf
iret
movs
lods
cdq
mov
mov
mov
cdq
mov
sahf
or
mov
(bad)
mov
movs
dec
sub
jmp
dec
sub
div
fld
in
cdq
dec
bound
scas
adc
aam
paddq
xchg
sub
call
xchg
in
and
jb
mov
xor
adc
mov
retf
out
sub
aaa
ins
and
aas
adc
xchg
sti
add
popa
push
(bad)
in
adc
in
xor
dec
test
push
jbe
and
mov
mov
jae
inc
and
in
mov
push
xor
jmp
mov
add
xor
movs
iret
cmps
hlt
sub
shl
add
popf
cld
scas
lock
test
mov
icebp
ret
addr16
ins
push
jmp
stos
imul
movs
divps
scas
cmp
jo
mov
cmp
aaa
outs
(bad)
lahf
mov
cmc
shl
(bad)
in
loope
ss
fmul
cwde
sub
mov
mov
test
add
mov
lea
and
dec
xor
cmp
fidivr
jne
push
mov
jecxz
cmc
mov
xchg
or
sub
test
pop
stc
cmp
or
push
stos
mov
test
xor
std
js
popa
cmp
add
addr16
add
mov
loopne
int3
out
xchg
nop
fmul
retf
inc
sti
aam
cmc
ror
lods
dec
cmp
pop
add
rol
jg
ds
sub
jmp
mov
lods
aad
dec
cmp
(bad)
push
inc
or
sahf
xchg
out
inc
fisubr
mov
dec
mov
sahf
push
mov
addr16
push
shl
std
lahf
retf
rcl
fs
inc
cdq
ror
add
push
mov
cld
dec
xor
inc
cs
stos
sahf
addr16
mov
scas
push
movs
aam
fadd
inc
push
(bad)
aad
cmps
adc
sub
cmp
or
iret
add
adc
inc
daa
mov
xor
pop
test
and
pop
rcr
retf
xchg
cmp
sub
xlat
jbe
les
inc
mov
mul
inc
and
fistp
ret
add
cmp
mov
pop
imul
sub
bound
sbb
pop
cld
xchg
dec
jb
dec
jo
cmp
pop
outs
fnstsw
out
adc
fs
in
sbb
mov
sti
aaa
push
std
scas
sub
mov
jl
jp
aaa
dec
hlt
mov
sub
retf
aad
ins
and
test
dec
int3
adc
enter
sahf
fs
xor
jge
mov
stc
inc
cmc
fwait
xor
mov
pop
aaa
retf
mov
sahf
dec
pop
pusha
fld
inc
ds
jg
es
dec
int
retf
inc
mov
iret
nop
out
sbb
xchg
sahf
rol
inc
fisubr
xor
and
pop
push
ret
fs
ret
cmps
jp
add
inc
and
push
adc
sbb
aaa
jle
xor
fdivr
pop
fwait
xlat
fisttp
xor
inc
fwait
mov
ror
loop
jmp
pop
dec
mov
das
jb
and
mov
inc
test
sbb
jbe
or
out
xchg
das
mov
sub
test
cld
ins
repz
cwde
dec
jnp
dec
cmp
pop
sub
mov
ins
(bad)
pop
and
or
jp
jg
or
ficom
push
xor
cmps
push
push
and
xchg
mov
mov
ret
clc
(bad)
test
lea
imul
mov
add
mov
sti
cmp
ss
pop
bound
sbb
sub
mov
test
push
xor
and
mov
mov
dec
cmp
cmps
mov
(bad)
outs
cmps
js
mov
cli
fiadd
out
(bad)
dec
inc
retf
addr16
popa
ret
pop
mov
lsl
dec
inc
leave
imul
sub
pop
adc
adc
cmp
inc
cmps
push
es
cld
pop
sbb
loopne
jmp
fmul
icebp
pop
jmp
inc
cmp
daa
cli
shr
mov
movs
add
fistp
fisubr
jo
xor
jg
pop
aas
mov
icebp
pop
call
icebp
mov
inc
(bad)
test
xchg
pop
aaa
adc
inc
enter
mov
sar
cmps
xchg
outs
mov
inc
pop
pop
test
xchg
jle
jnp
ds
push
adc
fist
aad
(bad)
stc
push
mov
shl
dec
sbb
inc
mov
add
xchg
xor
or
cld
pop
push
sbb
push
adc
sub
and
jne
add
shr
sahf
hlt
inc
and
mov
int3
loope
mov
pop
ins
xchg
dec
(bad)
test
add
retf
push
dec
mov
addr16
test
adc
jle
(bad)
les
bound
push
lahf
mov
fidiv
sub
cmc
call
(bad)
(bad)
pushf
daa
in
xchg
xor
mov
test
into
or
sbb
mov
add
add
sub
adc
addr16
arpl
scas
sub
push
jne
xchg
mov
cmp
and
sbb
jecxz
data16
jg
mov
push
psubusb
test
add
rcl
es
or
jge
mov
sub
mov
mov
jno
mov
mov
dec
stc
xor
sub
(bad)
clc
ins
xor
jmp
shr
jge
jp
add
cmp
pop
xor
sub
pop
into
aas
xchg
je
test
push
and
in
lea
faddp
dec
jnp
sbb
xor
add
push
or
cld
mov
mov
imul
push
bound
addr16
neg
push
clc
dec
xchg
xchg
jmp
adc
leave
ror
push
into
pop
mov
cmp
popf
adc
add
fst
push
or
ret
lea
inc
adc
(bad)
cdq
cmc
retf
sar
mov
add
scas
xor
sbb
mov
clc
dec
mov
push
add
shl
xor
int3
popf
lahf
pop
add
jne
inc
not
retf
jg
inc
jno
fnstsw
test
push
sub
sbb
fcomp
sbb
sbb
adc
cmp
out
test
or
test
mov
es
cmp
mov
jp
dec
sbb
xchg
mov
fldenv
cmp
fcmovnb
mov
pop
sub
stc
jle
or
(bad)
daa
lods
scas
inc
out
mov
rcl
xor
or
mov
mov
xchg
stos
sbb
add
out
scas
clc
sahf
sub
pop
cmp
out
jecxz
adc
sbb
mov
nop
xlat
(bad)
loope
xlat
mov
pop
ret
adc
push
les
dec
popf
or
cdq
scas
inc
push
push
fstp
mov
icebp
(bad)
aad
popa
cmp
ja
add
pusha
xchg
adc
jno
outs
dec
cmps
leave
pop
enter
or
fwait
cld
(bad)
push
inc
imul
stos
stc
push
mov
push
lock
pusha
add
adc
mov
movs
push
fwait
xor
xchg
aad
mov
dec
mov
lds
inc
mov
xchg
stos
fisub
cld
jp
aaa
fldcw
int3
push
call
cmp
fdiv
jmp
scas
stos
sub
sub
or
and
mov
pop
mov
cmp
lea
cmps
fdiv
enter
adc
mov
sub
dec
xchg
mov
push
imul
pop
(bad)
loope
mov
movs
cmc
(bad)
stos
ror
and
mov
movs
mov
xor
int
inc
mov
and
pushf
adc
adc
jge
mov
adc
ss
ror
jmp
jmp
add
inc
xchg
add
cld
dec
push
js
(bad)
lods
jmp
test
icebp
pop
jp
lock
sub
push
add
and
ficom
imul
mov
dec
mov
push
enter
movs
clc
xchg
nop
and
xchg
int3
shl
into
pop
int3
in
mov
loope
and
xchg
dec
call
fst
stos
jbe
xor
jmp
sbb
mov
pop
mov
test
cmps
dec
jle
and
cli
pop
aam
in
jo
xchg
pop
cld
jge
mov
data16
jecxz
pop
daa
jbe
jnp
test
out
mov
xchg
jp
(bad)
mov
dec
test
movs
or
adc
repnz
push
and
outs
pop
leave
mov
and
push
cmp
or
xchg
jno
add
xchg
test
mov
cmp
or
xor
stc
fist
rol
xlat
enter
jb
pop
push
xor
mov
cmp
dec
mov
xor
sbb
xor
and
cmp
lock
jo
fcmovnu
sub
xchg
rol
mov
leave
call
mov
cli
mov
mov
fisubr
outs
adc
adc
and
pop
push
dec
or
and
sahf
imul
adc
aaa
pop
aad
push
jb
fisub
mov
fld
cmps
aad
jmp
aaa
mov
clc
xor
cmps
or
or
stos
mov
inc
dec
or
int
(bad)
mov
dec
ds
rol
mov
iret
mov
xchg
and
and
ins
cmp
fwait
aad
xlat
into
push
jl
push
(bad)
sbb
(bad)
retf
shl
daa
push
push
ds
bound
pop
std
push
adc
dec
cmps
adc
adc
xlat
dec
mov
mov
sub
dec
adc
in
xor
jp
add
add
in
adc
dec
cwde
mov
repnz
jne
xchg
cmp
js
leave
adc
jbe
outs
mov
xchg
fidivr
pop
fs
hlt
mov
scas
je
cmp
(bad)
in
cmp
dec
mov
jmp
adc
(bad)
jbe
sub
scas
mov
xor
enter
js
pushf
xlat
clc
or
dec
sub
(bad)
call
lea
push
in
out
retf
stc
ja
push
fmul
and
ret
aam
xor
push
pop
jmp
fld
adc
je
fdiv
movs
out
rcr
pop
iret
sub
cld
mov
pop
test
inc
pop
leave
push
int
xor
call
div
pop
outs
cmp
je
jge
mov
ss
cmps
pusha
adc
inc
adc
mov
adc
push
xor
cs
and
pmaddwd
test
mov
icebp
fcomp
and
in
cld
push
push
mov
mov
ror
pop
in
leave
cmp
push
ins
retf
imul
neg
pop
(bad)
xchg
aaa
push
xor
inc
jl
push
mov
mov
sbb
ret
fcmovne
jo
leave
and
xchg
cmps
push
pop
sub
adc
cmps
arpl
jbe
jg
sbb
int3
sub
cdq
sti
xor
jb
pusha
(bad)
icebp
icebp
push
push
jae
xchg
cmp
xor
cmp
push
mov
clc
sub
xor
es
sub
and
xchg
outs
mov
inc
jp
add
or
mov
jmp
pushf
int
jb
and
mov
add
mov
outs
push
and
stos
jae
lock
test
mov
outs
mov
out
pushf
push
mov
add
not
mov
or
or
cmp
es
fs
in
mov
data16
outs
pop
inc
cmp
mov
test
push
dec
test
ficom
inc
cs
in
dec
pop
or
into
repnz
cli
mov
sub
push
das
cmp
fwait
retf
inc
retf
out
aas
pop
inc
and
cmp
or
neg
xchg
cmp
pop
mov
and
test
jb
mov
dec
and
mov
fcomp
(bad)
fistp
(bad)
sar
fdivr
jns
div
mov
add
dec
jmp
retf
out
jge
inc
andps
out
(bad)
fldenv
dec
and
shr
inc
xlat
push
mov
shl
xchg
or
aam
dec
inc
(bad)
mov
loop
cmp
mov
pop
repnz
or
inc
dec
in
xor
mov
dec
aas
retf
cwde
or
xor
jl
mov
push
orps
daa
(bad)
cmp
scas
sub
imul
es
sub
cmp
add
mov
dec
adc
jmp
sbb
adc
test
dec
test
xor
and
je
pushf
clc
mov
mov
stos
aas
jl
push
sbb
sbb
xchg
push
add
leave
sbb
fadd
mov
or
fsub
cmp
in
adc
xor
clc
daa
xchg
adc
inc
call
(bad)
imul
inc
dec
pop
jbe
sbb
mov
jle
mov
mov
mov
xor
xchg
dec
stos
push
push
scas
loopne
push
cdq
fldcw
add
stc
outs
(bad)
bound
ja
pop
sbb
lods
out
mov
out
clc
sub
sbb
enter
rcr
mov
xchg
pushf
jo
daa
shl
mov
lods
call
pusha
aam
pop
into
stc
outs
xor
ds
retf
in
mov
jp
out
xchg
into
jmp
inc
cmps
dec
xlat
shr
jb
movs
sar
push
test
sbb
pop
aad
mov
pop
aas
push
into
jg
retf
pop
das
inc
mov
mov
xor
jmp
mov
imul
inc
xchg
cwde
repnz
lods
dec
fmul
(bad)
cdq
fimul
imul
repz
and
es
out
mov
or
adc
cmp
in
shr
sbb
xor
leave
leave
xlat
stos
aad
mov
cdq
mov
add
ins
hlt
icebp
or
test
sbb
int3
dec
(bad)
pop
sbb
xlat
mov
nop
leave
xor
xor
mov
cmp
cmps
fs
pop
push
in
jno
cdq
call
ja
(bad)
stos
scas
jmp
pusha
sub
fadd
lods
stos
outs
dec
mov
sbb
jmp
dec
mov
sbb
nop
addr16
retf
xchg
retf
jbe
fidiv
leave
cmps
sub
sub
xchg
ret
mov
mov
mov
call
sbb
sub
sbb
inc
ins
xchg
pop
outs
and
ins
int
mov
in
pushw
sub
mov
scas
mov
or
test
and
daa
dec
movs
inc
sub
dec
jns
jo
fisttp
cdq
dec
cmps
mov
mov
xchg
mov
fs
push
out
cmps
rol
dec
nop
dec
sub
push
lods
in
cmp
dec
sar
xor
call
inc
not
fldcw
xchg
rcl
cmp
push
cdq
lods
add
loopne
movs
pop
fist
adc
dec
adc
xor
fiadd
movs
pop
daa
inc
adc
lahf
cmp
xor
and
out
xchg
jmp
mov
sbb
ja
mov
xor
sbb
(bad)
pop
sub
jmp
mov
sub
(bad)
sub
imul
jmp
mov
mov
repz
fucomp
sub
mov
fdiv
stos
clc
fistp
int
sbb
icebp
jae
mov
(bad)
sbb
inc
and
inc
call
mov
jo
mov
rol
pop
mov
mov
push
and
adc
je
sbb
imul
js
jb
add
out
call
inc
xor
popf
xchg
stos
aas
jo
aad
aaa
xor
sbb
aam
das
fs
pop
jmp
shl
push
jg
rep
mov
add
inc
ficomp
ins
mov
add
imul
dec
mov
and
imul
sbb
inc
or
pop
stos
adc
xor
lds
bound
neg
stos
jb
sub
xor
sbb
pop
sahf
and
push
pop
loop
mov
test
sub
cmp
sbb
ret
out
add
inc
int3
xchg
lds
ins
lods
cmp
xor
call
(bad)
call
xor
popf
mov
inc
sti
ret
imul
std
xchg
adc
sar
mov
(bad)
cld
movs
js
add
mov
lahf
mov
pop
dec
mov
push
sahf
mov
and
fldcw
pop
sbb
xor
popf
cmp
mov
fnstcw
sbb
sub
out
ins
add
jno
ja
rcr
in
xor
out
arpl
aaa
jg
or
and
cmps
mov
or
pop
mov
add
jle
loopne
popa
out
lds
outs
cwde
aaa
test
mov
mov
and
inc
inc
mul
add
sbb
pusha
jle
sbb
sti
xor
or
outs
mov
movs
bound
into
outs
add
sbb
pop
je
inc
jle
fild
(bad)
(bad)
dec
pop
dec
loopne
loope
clc
das
pusha
in
stos
xor
ins
lods
dec
sbb
jecxz
jb
adc
jb
mov
les
inc
aaa
jo
cli
lock
and
push
fldenv
in
pop
mov
(bad)
mov
test
mov
pop
into
cld
xchg
jp
inc
adc
xlat
fsubr
mov
mov
lahf
(bad)
xchg
pop
fadd
int
sub
dec
xor
or
mov
push
xor
mov
xor
cs
pop
xor
fnstsw
dec
loope
test
mov
clc
inc
sub
inc
(bad)
mov
mov
bnd
mov
adc
and
shl
in
and
jp
xor
lds
adc
out
pop
in
int
push
inc
xor
push
lods
add
test
call
fwait
int3
loope
les
out
lahf
setle
jne
gs
pop
pop
jmp
loopne
or
jnp
mov
fstp
sub
mov
jmp
stos
sub
loop
mov
fs
adc
aam
mov
pop
in
call
in
sbb
jne
jbe
out
mov
leave
dec
js
and
sbb
int3
jnp
in
or
adc
adc
ja
test
dec
out
sub
repz
cdq
mov
push
aam
lods
mov
add
push
scas
fwait
push
sahf
add
out
cmp
adc
sub
pop
int3
jge
jle
adc
jae
ja
jno
popa
jle
add
out
popa
cmc
xchg
add
popa
xchg
add
(bad)
cwde
and
cmp
rol
add
or
popa
sbb
hlt
inc
mov
std
(bad)
fnstenv
out
jnp
nop
(bad)
aad
hlt
and
and
and
popf
out
dec
in
std
lods
fcom
ret
retf
xor
enter
hlt
(bad)
out
mov
add
pop
mov
jnp
out
fsubr
mov
mov
sbb
pop
inc
and
nop
mov
out
out
xor
retf
jae
lock
inc
adc
fcmove
pop
int
cmc
push
adc
nop
or
std
mov
sbb
mov
cwde
or
fwait
or
outs
pop
stos
cwde
mov
add
mov
pop
icebp
and
dec
pop
jb
test
stos
test
fstp
pop
sahf
cmps
mov
mov
rcr
inc
xor
arpl
and
push
jne
nop
mov
mov
stos
rol
xor
nop
bnd
cmc
push
add
pop
cmp
push
jge
push
xor
and
pop
push
inc
xchg
mov
jmp
mov
or
mov
sbb
jg
mov
aaa
cdq
in
push
in
xchg
and
cmp
jne
aad
ja
lea
outs
push
mov
(bad)
and
jg
repz
test
arpl
dec
mov
int3
sbb
sbb
dec
mov
adc
call
imul
push
js
lahf
mov
push
f2xm1
into
inc
outs
scas
out
out
push
mov
loopne
hlt
cmps
jmp
pop
sahf
mov
cmp
inc
push
xchg
lods
outs
repnz
mov
cdq
inc
out
mov
push
jmp
arpl
shl
xchg
xor
or
xchg
fwait
ins
inc
mov
movs
fisttp
push
jp
jle
push
adc
ss
and
inc
xchg
pop
popa
mov
adc
jecxz
fdiv
popa
pop
pop
retf
shr
in
jnp
dec
push
ret
sbb
ror
push
icebp
call
jle
push
add
mov
into
stc
mov
in
pop
rcl
jle
push
test
xchg
gs
stos
call
mov
cs
xor
sbb
jbe
div
lea
or
fisttp
shl
add
(bad)
bound
pop
hlt
pushf
std
in
mov
loop
retf
es
std
dec
lods
jmp
mov
or
lods
stc
mov
mov
and
sub
sbb
sbb
pusha
dec
adc
test
cwde
addr16
add
ficom
mov
leave
pop
js
add
mov
mov
enter
xchg
ja
and
rcr
or
mov
popa
jecxz
in
sub
mov
stos
or
push
inc
lahf
scas
call
mov
gs
call
ret
sub
and
push
jge
inc
mov
outs
pop
or
mov
jbe
mov
ins
dec
mov
mov
sbb
fwait
ss
adc
or
es
inc
fwait
(bad)
mov
data16
mov
sub
mul
mov
and
push
jno
jbe
push
pop
sahf
push
add
adc
adc
mov
mov
(bad)
pop
xchg
stos
sub
sbb
mov
mov
lods
push
stos
aad
cmps
mov
out
jmp
sub
inc
test
gs
and
mov
xor
test
cmp
aam
dec
cmp
push
mov
ins
xor
and
popf
mov
and
xchg
dec
enter
mov
xlat
mov
test
cli
sub
dec
fwait
adc
call
mov
xor
xchg
inc
jmp
ins
inc
call
cmps
add
jecxz
and
mov
sub
xchg
test
ret
div
sbb
fwait
loopne
les
cli
repz
out
movs
out
shr
(bad)
or
push
mov
ficomp
int
xor
das
adc
mov
jno
fs
sub
and
cmc
loopne
cwde
pop
mov
jbe
inc
xor
icebp
add
push
mov
(bad)
fld
(bad)
test
pushf
repnz
test
inc
xchg
dec
sub
inc
daa
ja
push
stos
jge
dec
lock
adc
test
or
sti
and
mov
scas
add
cs
xor
(bad)
cdq
retf
jb
test
add
mov
xchg
ror
mov
push
call
or
pop
iret
adc
xchg
les
hlt
mov
nop
mov
popf
jno
push
mov
push
out
call
ds
sub
fmul
icebp
jo
(bad)
bound
or
stos
and
sbb
jp
or
sbb
ja
mov
(bad)
scas
inc
or
and
mov
mov
push
sub
mov
inc
repz
or
lods
lods
add
sub
iret
mov
clc
mov
mov
push
mov
xchg
sbb
nop
mov
add
stos
pushf
popa
and
cmp
add
mov
add
pop
jmp
adc
rol
cmps
xchg
outs
nop
leave
sbb
jnp
(bad)
or
mov
lods
cmp
out
pop
mov
cmp
dec
inc
dec
xchg
mov
mov
repz
jle
hlt
lea
xor
mov
jmp
cmp
(bad)
sti
(bad)
cmp
push
lahf
inc
pop
jl
(bad)
fs
mov
xchg
sub
xor
clc
push
int
mov
sub
fwait
nop
cmps
pushf
mov
sub
fisubr
jne
xchg
push
xchg
cli
push
repz
push
jmp
das
dec
mov
aad
mov
fisubr
(bad)
ins
int3
adc
ret
movs
jbe
mov
pop
ds
jle
fs
xlat
mov
jl
ins
cmc
pop
inc
ins
shr
pop
xlat
inc
mov
pop
sub
aaa
jmp
ds
aam
push
dec
shl
ret
add
xor
or
mov
pop
push
adc
push
cld
lds
xor
clc
rcl
retf
aaa
mov
pop
mov
scas
push
mov
mov
sub
xor
mov
lods
mov
loop
lods
mov
sbb
rol
loop
xchg
enter
loope
(bad)
push
add
(bad)
imul
mov
ja
fwait
ins
xchg
xchg
scas
push
fbstp
out
aaa
in
pop
js
dec
test
sub
xchg
gs
xor
cmp
push
ficom
and
test
out
js
or
push
push
dec
stc
clc
mov
or
cs
das
pushf
retf
mov
cmp
add
dec
add
xchg
sbb
test
jg
fild
add
pusha
inc
ins
ds
xchg
mov
jne
scas
nop
ja
int3
adc
das
outs
cmp
and
mov
pop
pop
pushf
fsub
in
cs
jmp
xchg
scas
pushf
(bad)
aam
push
dec
pop
push
inc
sub
test
mov
rcr
int
std
jle
in
loopne
dec
movs
sub
adc
fild
stc
outs
loop
adc
arpl
or
pop
push
jo
pop
push
shr
jp
out
adc
imul
sbb
bnd
mov
imul
(bad)
loopne
test
out
inc
or
clc
mov
sub
cmps
cmp
dec
nop
nop
adc
push
sbb
lods
mov
add
mov
movs
cmps
xor
mov
sub
cmps
adc
pop
retf
sub
fwait
mov
dec
sbb
bound
add
daa
imul
mov
and
fsubr
ret
or
add
mov
jb
jno
xchg
inc
pop
leave
aam
mov
out
lea
sbb
shl
push
or
ja
sbb
inc
mov
pop
(bad)
dec
add
shr
dec
(bad)
xor
es
add
movs
div
push
cmp
scas
jns
cmp
(bad)
xlat
dec
jb
pop
push
ds
sub
shl
mov
pop
retf
lods
mov
inc
mov
jmp
cmp
imul
mov
and
popa
jmp
test
jns
leave
xor
ins
adc
dec
or
lds
mov
repnz
scas
inc
jnp
mov
pop
test
and
enter
jecxz
imul
mov
popa
jb
or
aas
out
xor
shl
push
xchg
add
mov
dec
and
dec
adc
or
mov
iret
cmp
dec
dec
pushf
push
mov
je
or
nop
or
ds
push
mov
enter
mov
pop
add
sbb
scas
mov
gs
mov
movs
push
mov
mov
rcl
(bad)
in
mov
jge
sub
stos
sbb
dec
xchg
sti
jo
mov
add
repnz
and
pop
cmp
(bad)
xchg
mov
ds
dec
test
push
adc
or
or
rcr
mov
xor
scas
out
retf
push
jmp
push
push
inc
or
adc
leave
push
lods
sbb
xlat
(bad)
dec
mov
push
int
cmp
mov
(bad)
dec
cld
(bad)
in
shl
xor
out
scas
jnp
adc
sbb
shr
jp
mov
mov
in
ins
sahf
inc
std
(bad)
jge
cmp
mov
push
mov
sub
jb
xor
jp
xor
arpl
ss
cmovb
push
mov
int
sti
lahf
xor
je
adc
ja
ror
mov
jecxz
fcmovb
cmp
ret
sbb
jl
cmp
jle
and
popf
dec
inc
loop
xchg
sbb
mov
pop
sbb
inc
inc
cmp
xor
pop
inc
(bad)
stos
call
imul
mov
mov
outs
(bad)
shl
out
ss
int
shl
cld
push
rcl
aad
lds
push
pop
in
daa
and
dec
xor
fbstp
sbb
push
jne
push
out
popa
daa
cmp
std
ja
ror
jmp
dec
pop
and
jno
inc
loopne
cmp
loopne
cli
sahf
jl
mov
cwde
cmps
sahf
aam
xchg
call
ret
xor
adc
mov
imul
rol
mov
inc
in
sbb
inc
out
cmp
and
dec
adc
sbb
lea
popf
lods
mov
mov
bnd
fld
imul
pop
or
inc
je
call
mov
fdivr
das
mov
retf
push
ret
popf
or
dec
push
(bad)
mov
(bad)
rol
mov
cmc
jne
mov
push
dec
repnz
mov
jge
(bad)
push
mov
dec
sub
adc
popa
bound
jo
mov
les
and
sahf
push
jge
shr
fimul
hlt
shr
and
aaa
lods
cmp
dec
jg
scas
or
inc
add
daa
xchg
and
in
and
dec
lds
sub
sbb
dec
mov
mov
add
adc
jg
xor
sbb
dec
push
js
movs
sti
mov
sub
hlt
add
mov
mov
gs
test
push
sub
ja
jo
je
or
mov
test
pushf
jl
imul
mov
ror
and
cmp
adc
sub
and
(bad)
ins
pop
mov
pop
adc
int3
xlat
div
mov
(bad)
sub
imul
mov
dec
cmp
mov
mov
fidiv
mov
jmp
loope
movs
xlat
push
popf
or
fistp
scas
test
push
fstp
jae
adc
in
push
pop
fdivr
pop
addr16
std
dec
(bad)
xor
lock
push
test
adc
jo
push
jo
test
mov
lock
xchg
cmps
lea
repnz
xchg
cmc
lods
sbb
dec
(bad)
add
test
mov
imul
jg
test
push
xchg
adc
sbb
inc
outs
cmp
lock
repnz
adc
dec
outs
cld
repnz
push
mov
dec
lahf
push
xchg
dec
jae
mov
clc
call
sbb
arpl
sbb
bound
or
lahf
jle
pop
fisttp
lods
add
push
das
mov
dec
cwde
inc
cmps
mov
std
pop
inc
push
and
inc
add
fadd
sub
call
lods
mov
xlat
add
pusha
lds
out
xlat
mov
sub
iret
lods
cmp
daa
movs
cmp
sub
retf
sbb
add
push
je
jecxz
adc
adc
data16
xchg
mov
sbb
ret
(bad)
aad
in
push
outs
lahf
jno
sub
icebp
sbb
scas
in
pop
dec
cdq
rcl
(bad)
sbb
push
data16
in
daa
fld
in
adc
pop
mov
sbb
nop
fs
add
dec
jne
and
add
mov
les
shl
in
jae
dec
test
push
sbb
in
lock
imul
jne
mov
add
inc
cmp
lock
pusha
gs
xchg
fisttp
fsubr
test
lock
jns
les
xlat
xchg
retf
mov
(bad)
xchg
lea
and
push
ja
push
push
mov
mov
js
and
lods
dec
ret
mov
loop
(bad)
aam
mov
mov
mov
adc
push
cwde
bound
jno
mov
mov
jae
mov
adc
lds
fld
xor
sbb
jmp
pop
push
push
mov
and
loopne
pop
retf
stos
inc
push
inc
push
add
push
mov
mov
add
mov
pusha
adc
loop
std
ins
rcr
adc
push
cmps
xor
fdiv
loopne
shl
sub
fmul
xchg
xor
pushf
mov
fadd
call
shr
aaa
movs
imul
shl
dec
jecxz
int3
jecxz
ret
das
ret
ins
int
xchg
pop
lods
cld
push
fwait
jmp
xchg
dec
pop
shr
popf
adc
or
aas
lsl
fidiv
fxch
sar
into
inc
movs
outs
mov
movs
mov
jnp
inc
fdivr
ins
pusha
push
cmps
mov
fidiv
xor
rcr
xchg
mov
sub
inc
mov
(bad)
(bad)
std
jp
xchg
aad
push
jns
arpl
cwde
inc
int3
xor
int
sbb
xchg
test
ss
ins
movs
xlat
(bad)
mov
mov
cdq
dec
add
popf
out
pop
cwde
shl
retf
xlat
fwait
sti
out
pop
dec
popa
push
pop
cmp
rcr
pop
and
retf
aaa
cmc
inc
and
cmc
dec
pop
sub
sbb
std
outs
shl
into
xchg
xor
xor
(bad)
stc
push
test
add
sub
cwde
(bad)
jbe
ror
lods
push
pop
rcl
daa
in
in
jne
cmp
mov
mov
add
adc
pop
xor
dec
daa
mov
(bad)
(bad)
in
mov
ja
jns
mov
fbstp
movs
xor
movs
mov
push
cmp
out
ret
gs
and
ret
outs
dec
pop
sub
(bad)
retf
test
int3
sbb
mov
imul
lock
cmp
mov
into
jbe
je
mov
dec
cld
cmp
dec
and
(bad)
jnp
fwait
in
or
repz
push
or
jge
addr16
into
mov
mov
adc
fmul
rcr
cmc
jb
dec
scas
das
enter
adc
pop
adc
mov
pop
clc
enter
gs
cmp
fisub
or
cmp
cmp
cs
clc
pop
push
and
mov
xchg
push
fld
sub
adc
xchg
lods
mov
in
mov
retf
push
xor
ror
arpl
cmp
ins
int
inc
add
adc
jmp
or
xchg
inc
mov
ret
sub
fmul
adc
ins
sbb
push
ret
jo
pop
xchg
je
sbb
iret
pop
or
sti
push
aad
dec
push
outs
cmp
bnd
sbb
xchg
je
sub
pop
fnstenv
ret
fidiv
std
jae
or
dec
es
sti
std
inc
pushf
mov
jb
cmps
add
loop
out
pop
mov
out
xchg
scas
test
sbb
loopne
mov
add
push
fs
push
mov
mov
sar
addr16
js
int3
or
in
push
ror
sbb
shr
mov
jbe
test
dec
retf
or
(bad)
in
inc
sub
repz
push
mov
adc
cmp
out
out
movs
repz
retf
je
sbb
in
into
fs
retf
or
aaa
jb
pusha
repz
mov
mov
inc
jb
hlt
and
call
jg
jg
xchg
mov
inc
jmp
mov
ss
dec
mov
fist
xor
hlt
mov
xchg
in
stos
cmp
sbb
add
lods
fisubr
aam
das
cmp
inc
jns
scas
mov
cs
adc
mov
neg
clc
xchg
xchg
xor
xor
(bad)
es
sbb
movs
push
sbb
mov
mov
clc
inc
inc
icebp
or
repnz
mov
call
mov
pusha
jb
push
(bad)
rcl
jmp
and
xor
rcr
lods
test
neg
into
jnp
pop
cld
push
xchg
push
mov
dec
call
add
in
outs
(bad)
cmp
hlt
adc
fild
push
in
es
ins
cwde
dec
mov
adc
pop
(bad)
pushf
int
jecxz
ret
sahf
adc
mov
dec
arpl
sbb
pop
jae
push
push
dec
cmc
jmp
add
cmp
mov
add
aam
sbb
popa
dec
cld
aad
sbb
retf
lods
iret
movs
cmps
fisub
push
ins
aad
mov
in
call
rcl
xchg
shl
rcl
ret
outs
push
push
mov
retf
(bad)
or
repnz
std
cmp
mov
rep
mov
and
imul
(bad)
sahf
and
and
jmp
jmp
out
je
outs
retf
dec
retf
mov
stc
imul
sub
in
jl
arpl
lds
addr16
pushf
jae
ds
dec
pop
mov
test
out
lahf
cmp
and
sti
cmp
xchg
jo
pop
mov
jl
dec
outs
and
add
and
je
and
push
ficom
pop
addr16
push
pop
jbe
cwde
cld
pop
add
into
inc
imul
jnp
iret
cmp
xlat
mov
mov
jno
and
pop
and
js
mov
or
jb
add
loope
pop
sbb
not
lds
mov
mov
cdq
pop
jno
sbb
movs
jne
xlat
leave
xchg
cmp
inc
dec
lahf
inc
out
inc
xor
repnz
popa
leave
jp
xlat
cld
mov
sahf
std
push
cmp
mov
movs
inc
dec
clc
jnp
add
repz
add
inc
or
mov
sar
pop
lock
and
in
or
ss
loope
outs
dec
push
enter
cmp
cmp
push
mov
sub
stos
stos
push
cmp
cmp
ficom
sbb
mov
and
mov
into
popf
mov
pop
cmp
jns
lock
jecxz
test
(bad)
retf
jmp
lahf
mov
inc
shl
mov
jmp
rcl
and
fadd
adc
(bad)
rcr
push
sbb
(bad)
jmp
ja
mov
inc
xchg
mov
or
retf
jb
or
cmc
jl
inc
ftst
and
jecxz
test
cwde
lds
ds
cmp
mov
call
shl
mov
out
sub
imul
cmps
push
xchg
and
jbe
loopne
icebp
xor
ds
fucom
int3
pushf
xchg
and
sti
sahf
dec
pop
cmp
xchg
mov
retf
aad
push
jmp
adc
out
outs
xchg
sbb
lds
dec
cmovbe
inc
lods
bound
push
into
int3
lods
push
mov
mov
sbb
ins
rcr
imul
scas
fidiv
cmp
fild
imul
push
or
fld
repnz
outs
aas
scas
add
adc
inc
mov
int
dec
not
mov
mov
in
sbb
js
lods
fwait
jbe
mov
pop
mov
pop
ins
int
sub
inc
xchg
xor
clc
and
test
arpl
xchg
je
push
loope
ja
repnz
cmp
int3
dec
adc
out
fimul
cs
dec
and
xor
push
inc
stos
cmp
xor
sub
add
sub
xchg
imul
push
enter
movs
rcl
inc
sub
call
sub
cwde
ror
add
cs
cmps
dec
and
rcl
rcl
xor
shl
inc
push
sti
stc
jle
and
icebp
fdivr
or
fbstp
(bad)
stos
mov
(bad)
ds
push
push
(bad)
mov
test
sub
jnp
in
into
scas
mov
ret
push
adc
test
imul
fmulp
imul
inc
mov
repnz
out
mov
or
in
fmul
loope
js
sbb
pop
sub
fdivr
mov
sbb
pop
add
dec
call
pop
and
sub
jecxz
dec
les
pusha
xchg
ud1
mov
inc
dec
dec
pop
frstor
push
icebp
mov
push
mov
add
jno
aad
jmp
fcomp
adc
mov
cmp
or
test
push
in
loop
das
push
or
jmp
int3
mov
mov
mov
adc
packuswb
or
adc
xchg
not
pop
arpl
aad
mov
jnp
mov
sub
ret
jne
lods
dec
mov
lea
cwde
lods
fwait
pusha
out
mov
outs
fbstp
and
rcl
mov
jge
jge
clc
add
pop
call
add
int3
xchg
pop
sub
fcom
add
dec
in
push
xlat
cmp
mov
inc
sub
jmp
and
mov
xchg
retf
mov
daa
repz
pop
dec
in
push
std
fdivr
retf
ins
push
xlat
add
popa
popa
cmp
pop
pop
cmp
(bad)
div
pop
mov
adc
sbb
out
add
bound
or
rol
jg
xor
sub
mov
es
sbb
icebp
fs
mov
pop
push
push
inc
and
in
xchg
or
loop
inc
push
jae
stos
outs
mov
mov
div
mov
js
push
loop
cmp
shl
cmp
xlat
les
fisub
cmp
and
aad
fsub
pusha
add
push
imul
mov
push
hlt
xchg
dec
in
int
cmp
leave
inc
mov
adc
int
ja
je
xor
popa
push
(bad)
push
jns
inc
jno
xchg
aam
cld
js
and
gs
int3
jge
ja
lods
adc
fist
lds
sbb
ja
add
outs
sbb
aam
cli
sub
cdq
xchg
push
sub
jp
lahf
push
xchg
pushf
jo
fs
out
inc
sub
int
mov
outs
(bad)
dec
jae
or
mov
test
sub
inc
cmp
mov
icebp
xchg
clc
lahf
aad
lods
imul
mov
fucom
inc
dec
imul
inc
int
test
movups
push
je
icebp
add
or
fs
popa
pop
pop
pop
lods
cmps
cld
mov
je
or
or
dec
(bad)
lea
inc
iretw
pop
sbb
outs
pushf
mov
inc
xor
ss
es
loop
sbb
ins
sbb
inc
popa
mov
(bad)
je
and
mov
jmp
and
daa
push
stos
push
mov
xchg
aaa
out
add
push
in
and
loopne
jmp
fsubrp
paddw
push
lods
loopne
cld
mov
repz
(bad)
loop
cli
sti
(bad)
in
gs
mov
cmp
cmps
scas
lock
repnz
add
das
ins
sub
adc
cwde
xchg
xchg
(bad)
mov
bound
xchg
(bad)
xchg
inc
popf
shr
mov
jo
ins
lods
add
inc
or
aad
movs
fisttp
fsub
mov
inc
cwde
test
adc
mov
dec
sub
aaa
jp
or
cld
icebp
sub
sbb
(bad)
stos
jge
mov
mov
daa
and
js
sub
int3
lods
out
cmps
push
lds
into
jmp
iret
dec
movs
cmp
or
push
pop
xor
jb
sar
cwde
mov
icebp
loop
mov
loopne
fs
xor
shl
loopne
out
cmp
xor
add
shl
es
idiv
rcr
test
adc
int3
cmp
scas
sub
ins
ins
je
cmp
jge
lock
shr
mov
push
pop
inc
cmp
add
or
sub
stos
mov
xor
push
mov
fcmovnbe
test
mov
mov
js
ret
mov
or
aam
fsubr
mov
sub
and
xor
mov
test
xor
and
mov
aaa
mov
mov
or
lock
nop
lods
cs
test
sbb
xor
hlt
dec
idiv
mov
xor
adc
out
cmp
test
popa
xor
fs
inc
rcr
cmps
ins
cmp
ss
mov
es
pop
xor
movs
js
popf
xchg
fild
ss
pushf
dec
clc
push
clc
inc
add
cmp
adc
pop
repz
and
mov
jg
push
jmp
jle
add
int
mov
in
ins
pop
add
enter
frstor
pop
jecxz
shl
inc
outs
jo
idiv
mov
ror
push
hlt
sub
mov
push
aad
jg
repnz
std
lods
mov
inc
mov
imul
pop
adc
lock
mov
loop
aas
icebp
js
xchg
pop
jle
xor
mov
pop
cli
add
repz
cwde
push
loop
imul
cmp
or
and
pop
push
aaa
xchg
xchg
mov
adc
inc
enter
ss
repnz
mov
call
pop
loopne
mov
cwde
pop
and
es
(bad)
fst
dec
fstp
xchg
mov
xchg
mov
(bad)
jp
mov
ja
in
pusha
push
and
inc
adc
cdq
jecxz
sub
xchg
mov
ss
inc
retf
inc
(bad)
sub
fcomp
mov
fldz
and
bound
sbb
pop
push
outs
lock
jecxz
fcmovu
push
push
data16
loopne
pop
retf
sub
cld
arpl
mov
cmps
sub
push
in
loop
jbe
in
mov
xor
cdq
je
inc
pop
cmp
mov
movs
sub
sbb
inc
(bad)
imul
dec
sub
push
call
inc
retf
ror
scas
sub
or
clc
retf
sbb
inc
fs
test
in
pop
out
paddsw
push
iret
mov
gs
dec
xor
ret
leave
lods
in
inc
sbb
xchg
mov
sbb
out
push
dec
xor
lods
push
rol
fimul
dec
jmp
jae
mov
popf
xchg
pop
loop
daa
icebp
test
dec
xchg
dec
mov
xchg
or
sbb
out
push
lock
lock
mov
push
sti
jg
loopne
and
ss
enter
mov
hlt
xor
or
rol
mov
inc
mov
xor
fild
pusha
stc
ja
retf
push
push
scas
add
sub
daa
les
jmp
lahf
xchg
ss
adc
sub
sahf
jle
mov
pushw
jnp
mov
movs
push
das
js
shl
push
jo
lahf
xchg
sahf
xor
and
gs
pop
movs
test
int
or
std
hlt
daa
xchg
pop
stc
add
retf
xchg
test
nop
add
hlt
cmp
clc
add
ror
mov
stc
and
mov
rcr
and
pop
lahf
xor
push
and
jge
aaa
xchg
(bad)
mov
ja
jb
lds
xchg
cmp
stc
fsub
mov
stos
and
dec
clc
fs
aas
mov
call
addr16
and
ja
in
(bad)
xchg
inc
outs
mov
movlps
cmp
jo
aam
xchg
iret
inc
ret
push
add
iret
push
dec
ins
enter
cmp
inc
int3
outs
fist
add
cmp
mov
das
xor
add
outs
sbb
retf
sub
mov
jmp
call
mov
ins
pop
add
mov
dec
ret
cmp
loope
jb
cmp
inc
cmc
mov
(bad)
fwait
cmps
mov
push
jl
enter
adc
push
in
sub
iret
mov
arpl
xor
stos
aas
cmps
inc
in
jns
frstor
arpl
or
push
xchg
(bad)
es
inc
xor
push
jecxz
pushf
call
xchg
pop
sti
xor
test
mov
jmp
inc
push
adc
dec
pop
mov
loope
jo
stos
adc
in
jmp
ja
and
ja
jl
mov
clc
pushf
cmp
fcmovb
(bad)
dec
in
lods
and
in
fnstcw
xlat
mov
cs
add
mov
mov
in
popa
dec
fsub
pop
jae
out
fs
inc
int3
loope
test
mov
add
fcomp
or
mov
cdq
pop
jae
push
mov
in
inc
and
dec
xchg
sbb
mov
gs
adc
test
enter
stos
fnstsw
cli
jmp
add
fmul
fisubr
test
dec
in
ja
mov
(bad)
enter
mov
cmps
pushf
push
mov
mov
(bad)
call
mul
mov
stos
sbb
jmp
add
sbb
bound
repz
or
fcomp
push
push
daa
addr16
jmp
retf
jne
fcom
or
js
pop
or
arpl
xchg
aas
pop
sub
jne
(bad)
fcomp
sbb
cmp
shr
outs
mov
mov
idiv
icebp
xor
and
pop
je
outs
xchg
nop
push
push
loopne
push
mov
sub
iret
fs
dec
and
mov
push
push
enter
push
sahf
jnp
xor
xchg
xchg
scas
addr16
mov
mov
pop
inc
nop
clc
sub
(bad)
loopne
retf
pushf
in
sbb
inc
jmp
dec
xor
xchg
in
cmp
lock
lar
shr
adc
adc
pop
mov
push
add
int
cmp
in
outs
jns
mov
and
sub
rcr
in
int
mov
fistp
push
mov
out
inc
ins
pop
leave
dec
dec
jnp
cmp
test
add
mov
jno
mov
scas
mov
mov
fwait
xlat
or
movs
inc
push
pop
dec
ror
inc
xchg
rcl
shl
inc
dec
dec
jecxz
cmps
repnz
or
jl
mov
in
inc
(bad)
je
sub
or
lods
add
and
mov
gs
sar
in
mov
mov
sub
jno
mov
push
cld
mov
mov
xor
add
adc
(bad)
sub
test
sub
cmp
lods
aas
inc
stc
dec
pop
mov
(bad)
mov
(bad)
outs
push
test
inc
(bad)
add
mov
(bad)
push
cmp
sbb
sbb
fwait
adc
mov
in
loop
test
(bad)
(bad)
fidiv
stos
mov
fwait
cli
jno
and
js
or
jmp
adc
rol
dec
fwait
cmp
shl
je
test
xchg
xchg
idiv
xchg
imul
inc
or
jl
pushf
push
jbe
pop
iret
dec
dec
jo
pop
and
mov
jmp
push
jl
shl
add
xchg
dec
and
mov
sbb
push
mov
fs
bound
add
das
cmps
xor
or
or
mov
shl
sub
inc
ins
popf
ret
je
mov
test
mov
pusha
test
mov
fldenv
dec
mov
mov
shr
inc
mov
and
pop
aas
push
pop
add
adc
cld
gs
cmovne
popa
and
(bad)
xor
cmp
sbb
in
call
push
fsubr
adc
rol
fimul
dec
not
and
cmp
cmp
sbb
in
(bad)
pushf
ins
test
imul
xor
dec
push
clc
mov
cld
push
mov
pop
sub
scas
fiadd
fnstsw
pop
fiadd
mov
loope
cmps
fnstenv
jo
mov
sbb
xchg
xchg
test
std
push
movs
xadd
adc
scas
sbb
cmp
scas
cmp
int3
(bad)
into
mov
fwait
lock
pusha
arpl
adc
test
repz
or
push
leave
push
adc
xlat
push
clc
gs
pop
adc
cmp
test
data16
daa
push
sbb
mov
arpl
clc
lods
or
add
fadd
fwait
xor
xchg
pushf
cmp
(bad)
pop
and
retf
mov
cwde
mov
leave
out
cdq
dec
jmp
pop
sbb
shl
and
fcmovnbe
ror
push
fwait
and
mov
mov
ins
jle
fadd
inc
dec
jecxz
aam
xchg
fist
fimul
(bad)
push
push
out
push
inc
dec
push
jne
mov
fcom
pushf
js
fisttp
(bad)
xchg
mov
inc
inc
jbe
cmp
and
fwait
ds
mov
cli
sbb
mov
mov
mov
daa
sub
mov
aad
xor
and
add
push
xchg
test
and
(bad)
loope
cmps
std
dec
retf
xlat
mov
das
paddq
hlt
clc
pop
imul
data16
dec
push
outs
xor
iret
jecxz
jns
movs
xchg
xchg
ret
jo
imul
pcmpeqb
jmp
sub
movs
jmp
cmps
ret
cld
mov
loop
inc
test
mov
aaa
aam
sbb
bound
sub
sar
push
mov
int
push
outs
jo
addr16
bound
js
icebp
and
mov
mov
or
sbb
movs
inc
push
adc
jno
push
out
mov
(bad)
adc
cdq
les
jecxz
xchg
push
add
sub
in
xlat
and
mov
fsubr
addr16
mov
xor
add
imul
push
mov
inc
int
inc
test
push
jns
loopne
daa
add
out
and
ficomp
mov
sahf
scas
scas
or
pop
xchg
lahf
sbb
push
movs
sbb
or
cmp
push
je
mov
add
in
inc
rcl
mov
jae
dec
push
scas
sbb
lea
adc
pop
lock
(bad)
xchg
sbb
pcmpeqw
aam
movs
add
xchg
mov
mul
mov
popa
cmp
das
je
inc
std
cmp
pop
sub
jns
push
bound
adc
dec
or
mov
push
fsub
cmp
daa
(bad)
push
js
fild
inc
imul
cli
hlt
gs
sbb
add
(bad)
out
rol
xor
add
leave
into
and
stos
scas
add
add
fdiv
jb
adc
daa
push
adc
push
cmp
iret
imul
das
adc
div
pop
test
psubusb
mov
lea
out
test
out
rcl
jbe
sub
ficom
xor
mov
sbb
mov
ss
loop
xor
mov
xlat
mov
jo
mov
pop
sbb
mov
push
aas
push
inc
lahf
add
push
ins
leave
leave
outs
aaa
mov
mov
shl
test
ror
call
repnz
inc
add
aam
or
sbb
xor
addr16
inc
sub
out
adc
mov
cwde
jecxz
mov
cmp
sbb
cli
mov
stos
mov
rcl
inc
mov
inc
add
jb
sub
jb
add
dec
mov
cld
dec
iret
add
cmp
sub
imul
pop
or
scas
jg
push
push
mov
or
xor
push
popa
out
xor
iret
xchg
xchg
sbb
fstp
cli
lock
ret
sbb
push
lds
jae
xchg
mov
xchg
xchg
jo
je
leave
popa
aad
imul
cmp
out
xor
cmp
adc
add
push
(bad)
jmp
test
sub
mov
jbe
cli
sbb
jl
data16
mov
jbe
fnstcw
in
es
adc
ds
adc
add
sub
xchg
leave
pop
inc
xchg
in
cmp
retf
pushw
stos
sbb
mov
scas
pop
push
push
sbb
adc
nop
loopne
push
ror
adc
cmps
mov
dec
xor
shl
push
inc
mov
dec
sbb
mov
jno
adc
mov
add
out
clc
das
das
push
das
loope
jmp
ftst
lea
adc
mov
mov
push
int3
inc
div
in
out
jno
push
jmp
fwait
jbe
aaa
xchg
arpl
sub
mov
daa
enter
jp
jmp
dec
cmp
retf
pop
inc
mov
mov
inc
rcr
cmps
test
sub
(bad)
xor
jb
push
dec
aam
add
mov
pop
sub
pop
add
mov
add
mov
cmp
mov
push
jecxz
sub
ret
push
inc
pop
test
pop
ss
callw
mov
add
scas
(bad)
sub
lods
sbb
aas
jmp
je
cs
scas
xchg
pop
cmp
mov
inc
int3
in
sub
pusha
lds
icebp
cmp
fdivr
cmp
jge
or
test
xor
out
pop
cwde
lds
push
xor
call
movs
lahf
test
hlt
mov
push
lea
pop
loop
add
test
pop
xor
popf
fcomp
test
pusha
cmp
mov
push
cmp
test
les
call
push
mov
imul
je
bound
xchg
fdivp
add
out
cs
div
cmp
or
outs
add
imul
movs
outs
iret
into
call
jle
mov
cmps
imul
or
mov
jle
fld
out
popf
sbb
rol
ds
popa
jmp
pop
gs
mov
lods
dec
push
fild
cmc
inc
in
jge
sahf
ins
out
in
pop
or
jp
sti
ror
mov
jae
aam
xor
jecxz
cmc
mov
push
jno
bound
dec
xlat
int
lock
jbe
push
adc
test
das
imul
in
xchg
cmps
mov
cmps
cmp
push
push
imul
adc
push
mov
cli
ss
jp
cmp
popa
xor
fmul
(bad)
push
inc
cmp
mov
retf
loopne
add
push
push
aaa
ficom
pop
add
and
in
addr16
push
shl
lods
test
arpl
(bad)
cdq
inc
std
addr16
adc
jge
jmp
ds
mov
popa
add
sub
aas
in
xor
(bad)
or
scas
add
ds
das
or
jae
sub
test
or
jge
cli
push
pop
out
and
push
dec
xchg
lea
in
mov
dec
xchg
sub
mov
shl
imul
lods
mov
popa
inc
push
movs
cmp
push
or
add
sbb
out
aaa
loop
imul
iret
xchg
or
cmp
jbe
adc
sub
not
nop
aam
arpl
scas
call
iret
dec
fs
(bad)
jno
and
sti
lock
or
int
xor
push
mov
outs
call
sbb
and
(bad)
ret
jecxz
enter
push
ja
jl
es
fcmovnu
(bad)
imul
push
pushf
xchg
pop
sbb
imul
push
sub
pop
inc
jl
jmp
pop
mov
mov
jg
sti
add
sbb
aaa
push
mov
inc
or
sbb
xor
push
lea
test
push
gs
and
xchg
popf
pop
test
lahf
mov
daa
ja
outs
xchg
daa
inc
xchg
cmp
out
stos
fcom
jg
mov
ss
aaa
enter
aaa
ins
retf
imul
out
sbb
cmp
enter
mov
cmp
fucomp
or
es
push
data16
data16
inc
dec
shl
mov
mov
mov
mov
sbb
pop
stos
cmps
cmps
data16
lods
sar
es
pop
mov
clc
hlt
sub
stc
outs
add
push
adc
into
jp
xor
xchg
std
(bad)
adc
xlat
fcmovnb
stos
iret
(bad)
ss
cmp
xor
and
or
data16
push
sar
aam
xor
out
jns
push
and
jge
fst
or
dec
pop
bound
push
pop
xchg
fdivr
imul
cmp
jmp
mov
or
test
ins
mov
inc
in
add
retf
out
push
push
(bad)
loop
sti
mov
mov
dec
iret
jle
adc
repnz
pop
dec
into
fiadd
neg
int
mov
call
add
sbb
sbb
or
xlat
aad
jno
int
in
loop
pop
sbb
jbe
out
and
pushf
adc
out
aad
add
loop
enter
aam
hlt
rcr
cmp
fnstcw
mov
movs
mov
ret
mov
imul
iret
aad
aam
push
stos
movs
retf
test
inc
cld
loopne
sbb
sbb
xlat
add
scas
in
cdq
jns
pusha
js
xor
jae
push
add
idiv
mov
mov
popa
out
int3
or
lds
sub
sbb
xor
fmul
cwde
jl
cmps
popf
loope
dec
dec
sahf
lods
or
add
test
loop
in
jl
jns
fstp
test
lahf
xchg
les
adc
in
xchg
cmp
mov
inc
lods
retf
jb
add
mov
mov
push
daa
cmp
jnp
sbb
push
std
sbb
inc
rcl
jl
bnd
sub
fucomp
push
pop
or
outs
jae
dec
icebp
adc
or
nop
cmp
xor
cmp
mov
nop
das
in
jl
int3
sbb
mov
fisubr
jmp
mov
sbb
jno
ret
dec
in
es
xchg
lods
jmp
fidiv
inc
retf
jo
xor
stc
adc
mov
or
lods
push
dec
adc
int
and
mov
pop
ds
mov
jae
cmp
push
lods
adc
mov
repnz
xor
lock
sbb
add
test
mov
sbb
jge
add
cwde
mov
fmul
adc
add
or
leave
push
jno
cdq
mov
mov
lea
jmp
lock
test
mov
addr16
out
(bad)
test
ins
pop
mov
add
push
mov
sbb
mov
movs
test
jb
push
out
cmc
fmul
and
ins
ins
inc
xor
addr16
in
jg
mov
aam
cmp
cli
jmp
push
out
imul
adc
sub
mov
xor
iret
sbb
sti
jnp
xor
leave
push
xchg
out
push
into
push
fld
pop
jmp
cmp
inc
arpl
test
mov
je
pushf
mov
cmp
inc
pop
pop
int
dec
pop
(bad)
and
inc
stc
inc
imul
ja
(bad)
jae
sbb
cmp
outs
or
hlt
hlt
and
dec
fcomi
fld
enter
mov
sub
push
push
(bad)
jmp
sub
pop
iret
pop
js
xor
in
jo
adc
and
imul
xor
mov
imul
inc
add
scas
jae
mov
push
js
in
sub
cmp
fs
or
jo
pop
or
or
push
scas
add
mov
js
sub
mov
loope
rol
sbb
out
in
push
enter
imul
jbe
sbb
sub
pop
sbb
lods
mov
pop
mov
cmp
lods
sub
push
iret
lahf
inc
jbe
pusha
push
rol
mov
loop
xchg
xchg
iret
lahf
je
das
push
mov
xchg
in
fadd
popa
jle
jge
sbb
cmps
and
movs
popa
xchg
push
cmp
in
adc
xchg
pop
out
ss
test
data16
lds
jbe
jmp
add
push
cmc
jbe
jecxz
pop
ficom
fcomp
stc
ror
xor
fidivr
int3
addr16
push
push
test
or
gs
shl
add
mov
add
in
xchg
(bad)
mov
cmp
fistp
hlt
or
sub
sub
(bad)
fisub
add
or
or
div
popa
into
inc
ins
sbb
xor
div
lea
push
mov
push
in
mov
imul
add
xchg
inc
xchg
add
repz
xor
mov
sbb
sub
imul
out
test
or
neg
data16
fucom
les
mov
sbb
cmc
lock
cdq
sbb
jl
cmp
mov
xor
xchg
and
fidivr
ins
push
aam
add
movs
fsub
sub
imul
loope
int
or
out
popa
and
pop
mov
ins
mov
fs
jg
popa
daa
(bad)
enter
xchg
mov
xor
loopne
pop
(bad)
jmp
mov
adc
inc
in
repz
cwde
xchg
sar
jnp
loopne
sub
push
je
mov
call
sbb
mov
repz
sbb
loope
xor
fistp
dec
pop
call
cmps
ret
add
mov
push
leave
xor
mov
jno
stc
aas
and
pop
loop
jne
pop
sub
push
sub
scas
jmp
and
xchg
lea
sub
inc
nop
adc
(bad)
cwde
inc
rol
or
push
pop
test
test
arpl
pop
call
mov
xchg
and
mov
sub
jg
mov
add
cmp
aas
sbb
test
push
cli
xor
int3
xlat
mov
test
or
sbb
push
popf
scas
popa
push
gs
fs
pop
dec
cmps
adc
stos
lea
pusha
loope
fs
or
mov
add
dec
ret
in
in
aaa
sbb
and
aad
mov
cmp
repz
gs
loopne
cmp
rol
pop
cmc
cmps
adc
dec
pop
popa
sub
mov
xchg
add
lock
mov
mov
test
loope
jbe
sahf
adc
pop
adc
mov
hlt
mov
adc
and
test
mov
adc
fsubr
dec
movs
(bad)
sti
fdivr
push
aam
ss
and
enter
das
xlat
ss
mov
aas
or
inc
lods
mov
dec
std
rcr
xor
jmp
fdivr
mov
xchg
neg
ret
imul
cmp
push
cli
fnstsw
cmps
sti
stos
jo
fbld
rol
add
aad
add
pop
leave
mov
outs
test
push
adc
cmp
popf
shl
nop
mov
adc
addr16
fadd
in
sti
loopne
rol
fadd
or
cmps
jae
mov
cdq
mov
aaa
lods
scas
xchg
and
fiadd
xchg
push
popf
xor
test
xchg
hlt
cmp
imul
hlt
movs
adc
or
jg
and
push
pop
dec
sub
imul
mov
stos
mov
cli
jns
add
test
mov
sub
stos
mov
(bad)
adc
into
movs
les
jp
shr
imul
cmc
jo
or
or
and
jle
jmp
test
sar
iret
jmp
and
lock
enter
pop
sub
inc
sbb
inc
push
mov
rcl
jae
pop
mov
jg
xor
pusha
sbb
stc
jns
jmp
xor
push
cdq
mov
cmp
into
lahf
push
cmp
popa
mov
and
test
xor
push
fwait
je
stc
mov
push
jg
sbb
bound
xor
xchg
xchg
repz
imul
jae
in
pop
stc
push
push
sub
cdq
push
mov
xor
aaa
and
stos
aad
sub
cmp
cmp
xor
aam
sub
(bad)
sbb
lods
daa
adc
sbb
sbb
mov
jne
ret
adc
imul
mov
xor
dec
out
(bad)
in
mov
mov
addr16
pusha
cmp
aaa
and
mov
mov
jmp
js
adc
in
les
pop
mov
add
ja
out
inc
jecxz
dec
xchg
call
push
jg
adc
call
popf
mov
cmp
add
fistp
add
jg
stc
inc
cmps
inc
or
sbb
xchg
push
pop
adc
lds
jne
sbb
cwde
mov
and
or
mov
enter
jge
jecxz
(bad)
pop
outs
addr16
jmp
in
push
xchg
iret
mov
xlat
clc
sbb
ret
xchg
fprem1
popf
lock
inc
add
stos
xchg
scas
xchg
retf
inc
or
xchg
retf
movs
push
imul
stos
inc
jp
jl
cld
imul
lock
mov
cwde
fidivr
daa
stos
or
popf
mov
push
xor
dec
push
out
mov
addr16
in
movs
inc
mov
push
inc
imul
or
fcomp
dec
pushf
add
lock
pop
cmp
pop
(bad)
in
shl
adc
test
adc
or
(bad)
popf
icebp
pop
andnps
imul
mov
in
mov
loop
sub
rol
mov
jo
imul
pop
cmp
fs
scas
dec
(bad)
dec
scas
and
dec
stos
ds
mov
jo
outs
jmp
scas
mov
and
jge
sbb
out
nop
xchg
pop
jb
(bad)
retf
push
add
in
mov
adc
in
std
dec
and
fwait
out
ficom
aad
or
pushf
push
mov
imul
lods
inc
mov
dec
mov
(bad)
ss
inc
mov
(bad)
cmps
mov
les
cdq
jnp
iret
pop
(bad)
fidivr
mul
mov
mov
sti
retf
sbb
(bad)
int
xor
inc
push
popf
and
stos
in
call
adc
aaa
push
sbb
ss
xchg
sahf
cwde
mov
xor
xchg
fcom
add
clc
mov
pop
xor
fistp
adc
xchg
in
data16
pushf
popf
xchg
sub
pop
inc
loopne
sar
cmp
mov
xor
ja
gs
push
ss
das
cdq
cdq
sahf
std
out
sub
mov
sub
pop
imul
ret
or
cwde
cmp
in
ins
and
or
pop
cmps
push
mov
pop
(bad)
loopne
pop
mov
mov
jg
cmp
pop
mov
sti
fmulp
pop
or
or
jle
cli
sahf
mov
mov
mov
adc
mov
and
bound
push
add
jo
sub
fidiv
cmp
jl
aas
jae
dec
retf
xchg
dec
(bad)
cmps
push
jns
lds
aaa
or
fsub
sbb
mov
(bad)
mov
lods
xchg
pusha
xchg
push
mov
psubusb
es
mov
or
std
adc
in
mov
ss
pop
scas
pop
jnp
mov
(bad)
(bad)
and
pop
imul
xchg
movs
mov
or
push
dec
jl
(bad)
pop
aas
cmp
retf
outs
push
xor
pop
adc
pop
pop
jl
nop
sub
push
fmul
into
imul
(bad)
cmp
shl
xchg
addr16
jge
pop
dec
push
ret
mov
ret
enter
jmp
pop
xchg
clc
nop
(bad)
mov
pop
movs
test
out
cmps
xchg
lahf
sbb
(bad)
and
push
or
cli
stc
cs
or
or
xor
out
push
jmp
(bad)
mov
ror
and
jae
mov
cdq
cdq
xchg
dec
cmp
mov
pop
dec
fcmovne
sub
and
xor
mov
dec
nop
out
push
in
fadd
xor
or
sti
sahf
sar
mov
inc
adc
std
popa
test
xlat
mov
cmps
xor
ins
inc
fbld
mov
enter
mov
mov
iret
daa
cmp
pop
mov
clc
cmp
lea
inc
(bad)
jmp
inc
into
jg
mov
dec
push
and
add
mov
jnp
cmp
sahf
mov
dec
add
push
int3
lds
sbb
mov
push
jmp
int3
xor
jg
test
cmp
in
sub
sahf
add
mov
and
xchg
gs
int3
shr
and
xor
ins
test
out
or
and
sub
add
(bad)
adc
hlt
pop
lock
test
mov
mov
ffree
rol
mov
mov
xchg
xchg
push
fadd
rol
in
test
sub
clc
adc
pop
jp
pop
push
cmp
mov
mov
sub
push
call
cmc
xchg
sbb
ins
pushf
mov
jbe
mov
pop
int
ins
arpl
lahf
in
adc
sub
jmp
ins
jae
dec
adc
add
stc
inc
xchg
ds
into
mov
sub
popa
adc
aad
enter
test
ss
inc
aad
sbb
cmps
mov
in
xchg
mov
jecxz
mov
int
enter
dec
jne
int3
and
fcom
and
xchg
imul
in
sub
leave
sbb
jb
xor
repnz
(bad)
or
and
icebp
test
push
sub
pop
ja
and
inc
lahf
icebp
cmp
xchg
xor
fldcw
xlat
xlat
push
lods
shl
and
push
push
pop
je
xor
leave
mov
mov
aas
push
sub
clc
retf
pop
fdivr
(bad)
outs
shr
ror
cmp
fwait
or
data16
mov
mov
or
ins
movs
mov
pop
dec
in
dec
xor
nop
js
les
push
loopne
pop
and
and
mov
jle
and
mov
or
daa
mov
push
xchg
sub
mov
lea
and
fwait
jne
rcr
retf
cdq
fucom
dec
push
in
mov
sbb
mov
fwait
pusha
mov
mov
cmp
push
xor
movs
jbe
stos
xchg
jmp
xchg
fstcw
loope
and
fnstenv
jle
dec
es
push
aaa
stc
inc
outs
pusha
out
or
and
add
dec
xor
pusha
ds
xchg
cmp
adc
imul
and
or
jmp
ret
mov
les
mov
cld
dec
sbb
test
xchg
aad
add
test
mov
mov
add
sbb
int
cs
std
mov
sub
pop
popa
pop
adc
stos
jmp
ret
idiv
jle
pushf
push
mov
inc
push
pop
add
icebp
cmp
jnp
bound
mov
rol
cmp
clc
ja
fidiv
arpl
scas
jno
lock
jl
adc
xchg
mov
xor
pop
lahf
cwde
mov
jg
jge
nop
scas
jg
adc
push
jns
out
(bad)
int3
retf
sub
mov
int3
jbe
(bad)
jb
xchg
adc
ins
fisub
or
pop
push
enter
jl
fnstenv
jecxz
jp
jo
addr16
outs
push
dec
mov
ins
(bad)
imul
loop
ins
and
xchg
mov
call
pop
dec
mov
daa
lock
jne
scas
dec
inc
pop
stos
sub
mov
xor
jno
xchg
movs
sahf
leave
mov
dec
pop
retf
pop
xor
outs
push
xchg
pop
pop
mov
cmp
or
outs
xchg
add
ss
mov
push
push
fwait
cmps
xchg
rcr
sub
out
mov
arpl
add
mov
inc
aam
mov
ds
jne
xor
mov
jmp
movs
and
ins
add
scas
stos
xchg
xor
inc
pop
xchg
cmp
pop
or
icebp
sbb
sub
cmc
loope
mov
pop
dec
repnz
add
pop
stos
xor
and
push
cmp
stc
mov
arpl
scas
xor
add
or
mov
mov
leave
push
outs
test
test
xchg
das
out
ins
gs
adc
fwait
outs
cmps
cs
loop
dec
push
mov
mov
mov
inc
mov
sbb
and
test
xchg
outs
in
int3
call
push
jno
push
mov
loopne
sbb
jbe
loop
jbe
mov
dec
inc
movs
pop
das
adc
out
dec
cmp
xchg
sbb
std
inc
jbe
clc
sahf
and
pop
jecxz
inc
sbb
mov
pop
repnz
rol
div
lods
and
pop
push
jge
mov
jge
jl
rcr
dec
outs
mov
push
mov
fadd
aaa
pop
sbb
call
pop
mov
sbb
mov
call
pusha
fs
retf
int
arpl
std
out
in
dec
mov
dec
sub
gs
adc
neg
gs
ins
test
mov
in
push
sub
(bad)
(bad)
adc
push
cs
les
nop
jno
and
lahf
inc
mov
pop
call
dec
loopne
sahf
mov
(bad)
ins
loope
xlat
cmp
mov
push
jbe
dec
pushf
daa
dec
push
mov
jno
jge
test
hlt
in
xor
imul
xchg
in
add
mov
cmp
or
and
shr
pop
dec
cmp
es
pop
cmps
dec
test
sub
xor
adc
adc
sub
or
mov
outs
mov
les
push
call
dec
and
and
or
inc
bound
pop
push
retf
mov
sbb
mov
pop
scas
sti
aad
cmp
xor
mov
add
out
jbe
jno
sbb
stc
mov
out
push
lock
repnz
jbe
add
push
inc
pop
aas
(bad)
mov
add
xchg
jb
ret
aad
sahf
ins
aad
icebp
loop
cli
bound
retf
xor
push
lea
ins
pop
arpl
nop
mov
mov
retf
or
and
test
icebp
push
sbb
mov
jne
dec
dec
clc
sbb
lods
xchg
cmp
ret
int3
js
or
jl
gs
icebp
fwait
mov
retf
xor
es
fld
aam
or
imul
stc
sahf
(bad)
call
movs
pop
mov
shl
pop
popa
mov
push
xchg
data16
outs
cmps
stc
or
jne
loop
jp
outs
fcom
mov
sub
div
mov
sbb
pushf
into
std
pop
pop
cmp
dec
pop
lds
dec
fwait
mov
stos
mov
aad
and
mov
pop
outs
ins
hlt
xor
popf
mov
iret
xlat
add
sub
xor
mov
ja
sub
push
xor
xchg
ins
ins
ror
and
mov
and
aam
and
xchg
xchg
push
cmps
into
dec
jmp
mov
jmp
mov
daa
or
dec
cmp
mov
hlt
sub
pop
mov
mov
cmps
adc
jl
inc
adc
add
rcl
ror
xchg
mov
mov
test
push
or
pop
dec
cmp
xor
push
xor
daa
sbb
cmps
fmul
lods
cmp
(bad)
lock
and
inc
clc
retf
mov
xchg
push
mov
mov
push
cdq
mov
mov
enter
loopne
adc
in
cmp
fadd
push
jo
mov
ss
sar
push
dec
fild
popf
adc
xor
xchg
aad
and
adc
mov
mov
xor
mov
and
in
jne
mov
pop
pop
add
lea
jmp
jmp
pop
mov
fst
jns
and
lea
stos
gs
sub
dec
int
neg
not
(bad)
mov
dec
sub
retf
repnz
aas
inc
xchg
(bad)
call
call
outs
ror
jmp
dec
xchg
aas
push
dec
ja
adc
fcom
aaa
push
dec
mov
outs
gs
mov
nop
mov
sub
into
in
out
fadd
mov
inc
xchg
loopne
push
(bad)
cmp
jmp
sbb
lods
xchg
and
cmc
mov
xor
push
mov
xchg
rol
jnp
movs
outs
or
mov
mov
outs
retf
jg
xchg
bound
mov
int
outs
push
xchg
lahf
mov
rcl
push
psubb
ins
mov
cli
lock
cmp
adc
das
and
jge
pop
fisub
test
cs
iret
mov
mov
cs
push
test
inc
test
out
xchg
test
inc
pushf
lock
nop
je
ins
cmps
adc
aas
add
jno
pop
dec
nop
xchg
xchg
xchg
cmp
pop
pop
pop
scas
in
inc
imul
ror
pop
ds
pop
out
loopne
cmp
and
stc
xchg
aas
bound
cdq
cmps
aas
test
adc
inc
enter
xchg
mov
mov
int3
in
(bad)
xchg
sbb
mov
lahf
lea
pop
mov
or
clc
imul
lea
mov
push
mov
xor
xsave
ror
adc
inc
push
xchg
iret
dec
push
push
dec
bound
adc
dec
in
lods
sub
je
jno
pop
mov
jl
pop
aaa
mov
add
adc
(bad)
dec
aaa
push
cmps
vaddsd
mov
lods
mov
or
push
mov
sbb
(bad)
sar
push
hlt
aad
push
fcom
lock
loop
jmp
arpl
xchg
push
mov
mov
xchg
jno
pop
test
repnz
arpl
push
mov
mov
sub
(bad)
sbb
loope
(bad)
adc
sub
mov
jle
xchg
mov
retf
out
or
sbb
dec
xor
lods
xchg
dec
jo
push
cmp
test
jle
cmp
retf
inc
push
cmps
mov
add
jge
mov
fwait
sbb
xchg
ds
sub
test
mov
nop
nop
in
popa
pop
xchg
cmp
imul
cmps
movs
jg
fsub
(bad)
push
and
aam
mov
sub
sbb
je
pushf
arpl
pop
cs
inc
out
jae
xor
inc
xchg
(bad)
fcom
addr16
out
xchg
xor
pusha
sbb
pop
pop
and
xchg
in
aad
nop
pop
or
sbb
out
jecxz
fcomi
jae
sbb
in
sbb
addr16
jmp
int3
pop
dec
data16
ds
in
in
pop
sti
loope
inc
cmp
daa
or
in
in
mov
cli
sub
out
cmp
in
sbb
data16
pop
fiadd
repnz
pop
sti
push
jo
ret
mov
push
inc
or
mov
mov
movhps
fbld
dec
sub
jbe
pop
inc
cmp
imul
repnz
xor
retf
or
xchg
imul
aas
(bad)
mov
sahf
jns
xor
sub
movs
mov
call
or
pop
pop
jmp
clc
cmp
sub
cmp
cmp
mov
aas
lock
stos
push
push
pop
cs
(bad)
push
jb
stos
sub
adc
xchg
pushf
jl
js
(bad)
shl
popf
xbegin
inc
call
mov
hlt
cmc
stos
cmp
inc
mov
adc
dec
(bad)
pop
pop
pop
xor
(bad)
cmp
xchg
pop
scas
pop
inc
dec
test
fimul
push
dec
sti
sahf
daa
xor
dec
(bad)
push
sti
push
lea
xchg
js
(bad)
mov
icebp
sub
cmps
retf
cmp
adc
or
neg
dec
pop
call
lods
call
cdq
xor
xchg
sub
xor
xchg
lea
es
cmp
enter
xor
aad
cdq
jns
xchg
ds
(bad)
retf
test
push
(bad)
mov
inc
jp
ret
mov
sbb
(bad)
jno
jbe
stos
push
xchg
pop
push
jb
sub
ds
std
mov
sti
pop
ficomp
push
dec
sbb
mov
fdivr
xchg
cmp
ret
mov
js
mov
addr16
mov
add
xchg
into
(bad)
jmp
xor
inc
adc
sub
js
and
(bad)
jmp
(bad)
fimul
clc
dec
adc
sbb
loopne
jno
xchg
mov
inc
stos
pop
mov
retf
je
inc
imul
add
lods
pop
cld
fs
inc
sbb
pop
add
xor
ret
push
push
cmp
add
push
push
dec
pop
pop
lods
push
cmc
cld
mov
mov
es
ins
ret
cmp
rcl
jns
in
jne
scas
sbb
jge
sbb
xchg
xchg
(bad)
mov
ds
fs
push
outs
mov
xor
xor
data16
rol
scas
cmps
cwde
cmp
scas
int3
xchg
mov
cmp
dec
repnz
out
div
retf
cmp
aas
mov
xor
jle
xor
(bad)
pushf
sub
jecxz
pop
fisttp
jne
xor
mov
push
ja
jbe
jae
(bad)
adc
cmps
mov
adc
popa
jmp
xor
push
sbb
jmp
stos
les
mov
ror
shl
add
dec
mov
dec
pop
fcomi
push
movs
div
add
scas
dec
lea
add
xchg
add
and
inc
jno
retf
cdq
bound
jae
adc
xor
inc
dec
or
(bad)
js
or
jle
dec
mov
xor
out
ins
dec
xchg
jge
push
jecxz
mov
je
pop
push
xor
xchg
inc
and
int3
or
sar
and
sub
std
and
inc
in
adc
or
(bad)
stos
add
mov
retf
pop
or
(bad)
pop
outs
pop
(bad)
jnp
inc
ror
xlat
call
fdivrp
mov
mov
out
inc
push
or
fwait
jmp
test
imul
inc
je
js
and
(bad)
push
(bad)
fldcw
push
xor
push
mov
and
adc
sti
pop
out
ss
arpl
ss
xor
out
or
lahf
sub
dec
leave
int
cmc
aam
sbb
fnstenv
inc
adc
cmp
push
mov
sbb
push
lahf
add
mov
pop
and
xor
in
fs
into
jmp
mov
outs
adc
xlat
(bad)
cmc
scas
cmps
mov
enter
xchg
cmp
sub
inc
xchg
cmp
add
loopne
ins
pop
or
ficom
enter
and
mov
dec
shr
rcl
js
popf
div
dec
(bad)
jmp
xchg
movs
inc
je
mov
push
xchg
popa
inc
jns
pop
dec
cwde
jb
jno
unpcklps
retf
pop
xor
in
lods
nop
and
rcl
(bad)
js
scas
jne
fild
inc
fisubr
cmp
scas
int3
je
sti
mov
push
leave
(bad)
adc
xor
adc
(bad)
icebp
xor
les
outs
sar
je
xlat
js
aaa
adc
cmp
add
push
mov
outs
ret
or
outs
shl
dec
std
ret
push
into
int3
call
mov
jb
ds
addr16
sub
les
std
pop
arpl
push
sbb
das
pop
adc
retf
fimul
mov
and
push
jl
sub
test
mov
out
in
mov
inc
ja
popa
pop
ds
enter
xchg
fs
jns
jmp
push
daa
mov
sub
push
cmps
adc
jb
stos
stc
mov
add
pop
les
or
push
cld
(bad)
das
fcmovb
xor
and
scas
adc
add
out
loopne
cmp
ins
mov
repnz
mov
rcl
xchg
push
jae
cmp
xchg
jns
aad
pop
adc
das
pop
mov
cmp
sbb
mov
add
lock
or
pusha
shl
imul
xor
mov
push
std
mov
fadd
std
out
jae
outs
jmp
retf
xlat
popf
pop
xchg
jmp
push
inc
push
sub
cmp
jle
cld
jmp
push
xor
mov
addr16
inc
or
call
cs
std
cwde
jae
push
mov
mov
pop
ret
mov
fwait
arpl
adc
jo
pop
add
add
push
cmc
ret
shl
mov
cmovo
cmp
mov
in
jp
int
cmp
retf
or
and
inc
add
fwait
sub
mov
cld
mov
jge
xchg
xchg
xchg
(bad)
out
sbb
scas
jl
leave
pop
xchg
mov
(bad)
cmc
xchg
push
cmp
aad
jge
stos
dec
jmp
loopne
push
mov
xor
dec
add
dec
or
fs
je
hlt
mov
dec
dec
cmp
rol
mov
fcomp
ret
stos
jg
jge
xor
pushf
(bad)
add
out
sub
loope
out
jg
xor
sbb
adc
sar
popa
push
xlat
mov
push
jno
xor
faddp
jle
stc
mov
test
(bad)
gs
adc
mov
frstor
and
aad
push
mov
cmps
xchg
sbb
inc
jno
mov
or
cli
movs
das
adc
sub
mov
iret
inc
ret
cmps
dec
push
mov
aam
enter
(bad)
cld
das
or
mov
fxch
aaa
ret
mov
(bad)
popa
js
test
int3
add
int3
xor
mov
outs
jecxz
mov
(bad)
xchg
push
scas
mov
ss
and
dec
and
test
xor
ja
jmp
dec
ss
sub
pop
xchg
leave
(bad)
adc
(bad)
in
rcl
cli
sahf
in
sub
add
jne
daa
cmp
into
fsubr
ins
iret
adc
mov
lds
adc
mov
in
loop
rol
std
cli
add
push
(bad)
shl
mov
mov
les
ins
lock
popa
fnstsw
add
aaa
mov
xchg
jbe
call
into
xor
es
int
xor
idiv
cmp
lock
popf
sbb
mov
and
jge
stc
shl
out
jmp
aaa
mov
xchg
pushf
jo
dec
or
dec
jecxz
shl
lahf
js
dec
sahf
ins
and
jmp
pop
push
pop
jmp
(bad)
cli
ret
loopne
in
add
loopne
movs
mov
ror
adc
add
mov
shl
retf
cdq
push
call
mov
(bad)
hlt
stos
add
mov
adc
shl
fdiv
add
das
lahf
mov
fsubr
dec
or
lahf
std
rol
test
adc
call
jp
nop
inc
(bad)
push
xor
fs
loope
push
imul
xor
loop
fsubp
push
out
inc
mov
test
jb
test
sub
retf
pop
test
xor
jle
cmp
add
sbb
popa
sub
sbb
push
(bad)
lock
shr
inc
das
sub
pop
popa
not
xor
pop
adc
repnz
in
mov
in
sbb
mov
pop
xor
loopne
adc
dec
popa
repnz
movs
pop
icebp
ret
(bad)
dec
jo
pop
jmp
ret
dec
sub
jmp
in
loope
mov
cmp
jb
sbb
out
xchg
cmps
lock
push
jne
int3
xlat
addr16
daa
imul
mov
xor
out
xor
ins
in
pop
pop
and
gs
loop
cmp
sbb
or
out
cmps
loope
cmp
adc
rol
inc
je
mov
pop
mov
mov
xlat
in
in
ss
mov
jecxz
ins
popf
cdq
loop
xchg
bound
or
popf
ss
enter
cmp
xor
fnstenv
sub
mov
test
jae
inc
mov
mov
ja
push
test
mov
in
pop
std
sbb
mov
test
popa
(bad)
jmp
mov
dec
int3
jmp
mov
rcr
dec
lods
(bad)
pop
sbb
clc
out
mov
repnz
cmp
xchg
or
aad
jb
idiv
xchg
repnz
jmp
dec
sub
pop
sbb
mov
popa
pop
pushf
mov
pop
push
adc
ficomp
loop
retf
adc
aaa
test
ret
mov
out
and
stos
arpl
fwait
and
pop
mul
pop
mov
lea
mov
movs
pop
mov
inc
or
mov
mov
clc
adc
pop
pop
pusha
sub
into
ins
into
movs
sub
fs
fdiv
(bad)
pop
jns
push
or
rcl
es
pusha
mov
data16
xor
outs
add
cmp
xchg
add
sbb
cmp
fdiv
xchg
mov
xchg
out
lods
jl
jl
pop
pop
ins
add
cmps
loop
mov
sub
push
jmp
outs
jo
addr16
cmp
dec
int
ret
or
mov
jmp
test
repnz
adc
fsubr
jbe
ret
push
pop
in
push
popa
mov
test
sub
test
ds
xlat
stos
xchg
mov
test
bound
add
sbb
ds
jmp
popf
ror
inc
aad
jb
fisttp
ins
fmul
and
ret
adc
hlt
pop
mov
mov
jge
sbb
sahf
mov
test
test
js
xor
mov
enter
loope
jge
adc
mov
adc
(bad)
jae
pop
(bad)
jb
inc
cmp
fstp
jae
push
stc
adc
aas
mov
rep
mov
adc
inc
inc
add
pop
and
sbb
add
xchg
sub
push
jbe
add
push
jmp
pop
push
test
cmp
xor
mov
cmp
enter
jle
xchg
jae
cmps
add
shr
sub
inc
fiadd
js
call
bound
aas
xchg
rcl
aad
push
or
push
stc
xlat
dec
test
jmp
fcmovnb
lods
mov
jmp
or
mov
or
and
icebp
mov
(bad)
(bad)
jge
adc
imul
iret
push
sahf
mov
sbb
cmps
or
or
mov
dec
call
test
repz
icebp
(bad)
loop
test
inc
adc
mov
mov
mov
rol
cmp
sti
leave
xchg
or
fld
jno
inc
movs
or
xor
stos
mov
adc
rcr
ror
sbb
ins
sub
mov
(bad)
and
(bad)
cmps
(bad)
mov
loopne
push
sub
js
xor
add
dec
lock
mov
addr16
popa
popf
cmp
xor
pop
push
pushf
lock
adc
jmp
test
out
mov
cmc
mov
sbb
stos
jbe
iret
xor
aaa
nop
nop
jle
daa
jle
jmp
jp
enter
fs
leave
imul
(bad)
call
add
lea
iret
mov
scas
xchg
or
das
sbb
mov
push
pop
cwde
shl
je
cmp
bound
push
dec
sbb
add
movs
xchg
rcl
xchg
pop
add
data16
out
sbb
sbb
dec
in
or
dec
inc
cmp
push
sar
retf
ror
add
and
shl
mov
cli
cmp
mov
ret
and
in
test
pop
outs
jo
arpl
fmul
push
xor
enter
popa
mov
push
fmul
jnp
mov
jmp
adc
xchg
idiv
cmp
lock
sub
inc
jecxz
leave
or
add
inc
fist
mov
daa
outs
mov
mov
cmp
mov
inc
imul
jnp
cmp
fmul
sub
xor
mov
fadd
push
jno
sbb
daa
scas
inc
popf
add
add
fisttp
inc
pop
mov
test
cld
xor
clc
and
adc
jo
sbb
jmp
or
cmp
add
int3
xchg
int3
mov
fcomp
jle
mov
cs
retf
mov
xchg
call
mov
and
mov
jns
push
and
call
cmps
sbb
sbb
sub
inc
ret
js
cs
mov
and
or
addr16
jns
mov
adc
imul
mov
mov
(bad)
movsx
adc
jge
sbb
lods
loop
dec
repnz
fcmovne
inc
xor
and
mov
cmp
sti
aam
les
bound
es
es
cmp
sub
lods
xchg
pushf
dec
adc
scas
push
push
into
dec
jge
int3
mov
jo
mov
add
jne
aaa
outs
pop
dec
mov
push
mov
sahf
imul
push
mov
cwde
mov
lahf
lea
inc
dec
cs
movs
data16
adc
fsubr
sbb
push
popf
retf
and
scas
mov
cmp
mov
mov
inc
sub
sti
pop
imul
in
cmp
adc
test
sahf
adc
pop
mov
mov
int
pusha
(bad)
(bad)
push
sti
call
cmp
les
std
scas
xor
pop
adc
mov
nop
mov
or
arpl
movs
add
mov
(bad)
rcr
jmp
cmp
dec
push
lods
cmp
xchg
add
adc
lahf
dec
out
stos
mov
fnsave
cmp
jecxz
sahf
sub
jmp
pop
scas
ins
cdq
push
pop
pop
es
xchg
in
mov
dec
mov
xor
xchg
mov
jmp
xchg
fstp
ins
loope
movhps
cwde
mov
imul
inc
push
mov
jae
or
in
clc
in
mov
jnp
addr16
inc
inc
pop
repz
cbw
adc
sbb
lahf
pop
js
mov
stos
retf
sbb
jmp
(bad)
cmp
in
imul
sub
test
add
mov
pushf
mov
or
xchg
sub
add
cmp
fs
ins
or
cmp
aaa
mov
mov
sar
adc
scas
mov
xor
loopne
loop
ins
mov
sbb
dec
stos
sti
jae
test
cmp
and
int3
ss
outs
outs
adc
repnz
out
adc
std
pushf
cdq
inc
cli
movs
xor
push
cmp
fld
and
sti
mov
aam
jmp
jnp
mov
ret
imul
or
and
jnp
out
jne
jge
aas
cdq
dec
in
in
lods
call
ins
cld
lahf
inc
test
ret
sub
xchg
adc
xor
sbb
in
inc
aad
fidivr
inc
ror
xchg
in
lock
push
xor
rcl
sub
jmp
and
in
inc
js
popf
retf
in
mov
in
xchg
cmp
rcr
xchg
push
(bad)
aaa
lahf
sub
xchg
idiv
and
in
xchg
ins
dec
mov
popa
jmp
into
call
xchg
(bad)
div
adc
lods
into
aas
lea
dec
shl
iret
fadd
icebp
push
push
xchg
test
xor
adc
push
pop
inc
mov
dec
push
mov
xor
repz
mov
shl
loop
mov
mov
pop
mov
or
xchg
push
mov
int3
jecxz
das
ins
mov
retf
outs
adc
daa
mov
cld
inc
inc
sbb
daa
scas
jno
iret
int3
mov
add
dec
arpl
je
add
(bad)
retf
call
imul
cmps
jmp
scas
jns
in
test
mov
aas
mov
or
mov
dec
lock
xor
aam
pushf
mov
sub
sti
call
pop
addr16
rol
rcl
cmps
or
iret
icebp
dec
fild
lods
call
cli
loope
retf
adc
sbb
add
jae
aaa
jmp
lahf
adc
aam
xor
mov
mov
shl
inc
cmp
pop
fidivr
imul
rcl
dec
stos
mov
push
aas
dec
xor
stc
outs
movs
lods
xor
(bad)
fmul
mov
lods
frstor
ret
sbb
pop
xor
mov
popa
aam
fnsave
(bad)
sub
cmp
adc
pop
adc
push
xchg
shr
sbb
xor
cmp
shl
dec
(bad)
push
mov
jle
mov
cdq
inc
call
xor
scas
repnz
sub
push
push
loopne
cmp
cld
pusha
movs
xor
dec
or
gs
retf
push
sub
xor
mov
sbb
and
xor
adc
dec
loopne
ss
xor
add
aam
add
mov
loop
clc
cmp
xchg
push
sub
cmp
jbe
aaa
sub
or
enter
fisub
int
cmp
inc
mov
jnp
sbb
jae
cli
stos
cwde
fsubr
jo
mov
and
push
add
cmp
mov
inc
adc
lea
jp
cmp
fild
pushf
fisttp
out
push
arpl
js
mov
out
inc
xor
fcom
fidiv
(bad)
jns
jbe
sti
or
pop
sti
sub
push
scas
ret
jl
inc
sbb
push
and
pop
and
js
in
scas
std
ret
mov
fld
xchg
jnp
jl
es
in
cmp
and
repz
imul
jmp
mov
jns
add
cmp
pop
mov
dec
add
push
test
pop
cmps
cdq
pop
inc
lea
pop
(bad)
in
mov
mov
pop
loop
call
leave
mov
shl
sbb
imul
ret
add
arpl
push
mov
or
popf
inc
xor
xlat
pop
sar
mov
(bad)
mov
cs
in
nop
sbb
sbb
xor
lods
jg
fsubr
mov
push
cmp
test
push
jl
shl
mov
jne
mov
ins
sub
sub
stos
push
push
addr16
mov
out
adc
adc
jmp
call
(bad)
outs
sub
inc
das
out
xchg
sbb
aaa
clc
mov
cmps
sub
jge
shl
pop
adc
add
adc
pop
pop
dec
pop
aas
test
xor
push
mov
mov
jecxz
cdq
repz
popf
sbb
retf
dec
outs
nop
pop
mov
push
sbb
add
(bad)
scas
inc
cmp
aas
retf
xor
pop
ins
lds
das
adc
jmp
mov
pxor
in
lds
daa
test
inc
mov
push
mov
mov
out
lock
stos
pop
push
pop
or
arpl
aam
test
fst
test
mov
gs
movs
stos
add
fnstcw
pop
movs
movs
dec
dec
or
push
or
or
(bad)
adc
retf
push
jl
xchg
outs
lea
rcl
jle
sub
pop
lea
loop
in
inc
imul
cmp
xchg
pushf
cwde
and
js
inc
add
and
cmp
pushf
mov
pop
xlat
clc
inc
sub
fstp
neg
mov
jg
jo
adc
je
or
lds
fdivr
lea
ret
dec
ins
jmp
in
outs
movs
mov
(bad)
(bad)
adc
(bad)
fcomp
mov
push
jbe
outs
mov
pop
neg
sub
outs
fisub
lods
push
rcl
dec
cmps
sbb
sub
movs
push
xor
sbb
and
or
and
mov
jae
and
xchg
loopne
jns
nop
xchg
xchg
xlat
add
cmp
push
and
imul
(bad)
repz
gs
das
dec
ja
mov
enter
out
xor
add
mov
cli
hlt
jp
xor
push
out
les
push
(bad)
out
imul
scas
mov
xor
xchg
test
dec
push
or
xchg
jns
stos
dec
cmp
in
fldcw
xbegin
in
pop
adc
adc
add
pop
movs
nop
add
js
out
call
pushf
mov
dec
je
pop
cdq
xchg
xor
retf
ficomp
into
loopne
fwait
xchg
adc
mov
mov
out
call
lock
cmp
adc
stos
jbe
leave
jo
sahf
xchg
dec
dec
dec
shr
je
jp
cmp
push
repnz
xchg
loope
jp
inc
or
call
mov
aas
repnz
jmp
in
push
jg
jmp
lods
dec
jnp
and
mov
repnz
add
ror
push
jno
xchg
dec
cli
lock
std
mov
sub
mov
adc
shl
pop
test
xchg
(bad)
enter
cmp
cmp
gs
addr16
dec
fsub
cmp
lods
sub
popa
imul
xchg
iret
and
mov
cmps
cmps
mov
push
sub
in
cs
sub
jle
loopne
lods
aaa
xchg
dec
out
mov
add
dec
push
outs
scas
mov
xchg
clc
daa
jle
(bad)
or
in
sub
sbb
jns
jl
(bad)
mov
addr16
xor
push
and
adc
jns
or
jne
lods
cmp
and
cmp
push
mov
call
cwde
fwait
push
fcom
mov
test
mov
xor
xor
gs
test
or
cmps
mov
imul
(bad)
or
mov
mov
test
mov
mov
cmps
repz
jle
popf
shr
push
xor
shr
push
(bad)
dec
mov
pop
dec
inc
push
les
leave
jmp
loope
lahf
xchg
sub
out
mov
lods
loop
mov
ret
adc
in
addr16
std
cdq
imul
sti
sbb
or
and
pop
ror
mov
sbb
dec
add
es
dec
sub
movs
jbe
mov
and
push
jmp
int
lods
ss
or
mov
scas
jmp
(bad)
test
xchg
jns
enter
sti
mov
lds
rcl
cs
mov
(bad)
mov
xor
add
popf
out
jo
cmp
jae
xor
popf
and
inc
inc
rcr
mov
cmp
in
mov
call
mov
mov
imul
stc
mov
and
fucomip
test
icebp
or
dec
add
pop
rol
inc
dec
call
and
pop
je
ins
xor
imul
jno
push
push
aad
pushf
or
xchg
lds
mov
loopne
mov
sar
and
mov
retf
xor
sub
sbb
mov
mov
mov
and
pop
push
xchg
push
jb
cli
mov
mov
sbb
sub
ret
(bad)
jbe
scas
aad
test
add
push
fwait
jb
push
retf
jbe
jo
mov
cs
cmp
stos
outs
pop
pusha
sbb
in
mov
xor
nop
icebp
in
or
dec
jge
adc
fisub
arpl
pop
push
pop
xchg
scas
(bad)
aad
sbb
ja
add
pop
rcr
adc
jo
push
out
enter
test
jmp
js
imul
and
adc
fstp
scas
retf
sbb
mov
cmc
and
adc
ja
(bad)
cmp
inc
mov
sub
pushf
addr16
mov
sahf
xor
ficomp
dec
sbb
inc
out
sar
xchg
int
xchg
inc
icebp
sub
es
mov
add
ja
pop
xchg
mov
and
sbb
push
dec
sub
pop
loope
repnz
cs
and
dec
xchg
mov
lds
frstor
test
rol
sti
jl
cmp
cli
aad
adc
repz
fwait
jle
out
ds
sbb
sub
jle
stos
or
not
imul
jb
mov
mov
in
or
or
mov
jae
das
jae
sub
jle
add
clc
out
pop
shr
mov
int3
sar
in
xchg
mov
aad
pop
dec
mov
sub
dec
add
sub
sbb
sar
mov
mov
ds
jno
or
out
mov
dec
fdecstp
pop
and
loopne
jne
mov
sbb
add
mov
or
mov
test
jnp
xchg
shl
cmc
enter
pop
out
aam
push
test
mov
sub
xor
lahf
and
adc
stos
gs
fwait
jno
in
scas
adc
jg
sub
xchg
adc
data16
sbb
xor
push
imul
test
fimul
imul
(bad)
scas
inc
jae
imul
push
fisubr
shr
ss
call
movs
sahf
pop
pop
jmp
xchg
sub
fld
cs
mov
(bad)
adc
add
push
int3
imul
cmp
clc
add
call
cs
fimul
cmps
imul
push
movs
mov
sbb
cdq
out
std
fsubr
repz
iret
pushf
mov
adc
mov
inc
sub
ret
lds
mov
push
dec
and
inc
push
pop
pop
cmc
(bad)
stos
jne
jbe
cmp
ss
ss
mov
sub
pop
add
mov
(bad)
ss
jge
and
cmp
addr16
xlat
inc
cmps
movs
mov
pop
inc
adc
aaa
arpl
je
(bad)
or
xor
ret
sbb
fstp
jbe
out
sub
mul
sub
js
imul
pop
mul
mov
jne
sbb
outs
push
cmp
push
repz
or
inc
test
or
out
lods
scas
and
xor
in
cmp
pop
add
int3
lods
out
cdq
out
fidiv
pop
sti
inc
div
dec
fist
repz
xor
mov
dec
jmp
xchg
jno
sahf
fcomp
mov
xor
dec
sbb
and
loopne
(bad)
mov
jmp
pop
inc
cmp
(bad)
test
mov
and
and
mov
aaa
dec
loope
fisub
hlt
fbstp
(bad)
in
sub
outs
std
stc
int3
sbb
mov
icebp
add
cs
cdq
add
cmps
shr
inc
mov
pop
movs
test
aam
mov
pop
aad
dec
or
ret
push
xchg
popf
fidivr
sbb
aaa
cmp
mov
sbb
out
jl
fs
ret
(bad)
cli
(bad)
lods
sbb
dec
xchg
data16
adc
ficom
js
mov
mov
repz
push
(bad)
adc
jecxz
ins
dec
(bad)
pop
cmp
mov
out
in
sbb
mov
loopne
mov
xchg
cmp
aas
push
mov
cmp
fiadd
icebp
shl
fnstcw
cmp
sub
xlat
push
lods
lods
pushf
xor
xor
push
movs
mov
cmp
mov
mov
cli
sub
adc
cli
mov
add
retf
mov
cmps
jns
inc
ins
nop
pop
call
or
outs
ss
and
mov
sub
aas
test
and
repz
and
imul
ins
dec
xchg
cmps
mov
dec
xchg
pop
mov
add
xchg
xor
retf
sbb
bound
mov
cdq
jp
inc
sub
inc
add
ss
xchg
imul
movs
dec
or
loop
imul
xor
dec
ret
in
or
sbb
dec
xor
cwde
dec
inc
icebp
jae
sub
push
dec
sbb
out
or
aad
xor
retf
lock
and
and
cs
leave
jmp
add
retf
je
mov
out
je
mov
bound
jge
(bad)
push
arpl
xor
push
hlt
mov
xchg
cwde
hlt
stc
jp
jb
jp
mov
cmp
mov
fiadd
sbb
lods
in
gs
mov
mov
mov
fisubr
add
sbb
fidiv
aad
mov
cmp
push
fwait
jmp
dec
mov
test
js
icebp
xchg
dec
sti
add
mov
(bad)
push
push
xchg
push
jbe
bound
rcr
loopne
or
jg
inc
pop
sbb
test
rol
lds
dec
push
gs
mov
stc
in
mov
cmp
ins
(bad)
das
ja
test
mov
imul
daa
mov
out
xlat
push
push
hlt
scas
or
inc
adc
jns
(bad)
in
push
push
div
push
into
es
movs
push
adc
and
fwait
mov
in
or
pop
ds
inc
mov
pop
adc
jmp
push
in
arpl
out
mov
pushf
lea
pop
mov
punpckldq
hlt
adc
arpl
or
pop
ss
push
xchg
mov
cwde
jle
dec
mov
ss
aad
push
and
mov
(bad)
pushf
ds
xchg
mov
call
xchg
pusha
in
push
aas
movs
xchg
nop
pop
adc
xchg
inc
mov
jbe
rcl
xchg
add
call
lahf
call
jo
leave
mov
jb
xor
cmp
repz
jae
icebp
mov
inc
jae
cmp
pop
sub
out
xor
cmps
in
mov
xchg
xchg
mov
fwait
hlt
rol
in
mov
movs
push
stc
sbb
into
in
jae
fist
sar
das
ja
les
push
adc
mov
cmp
aad
icebp
pop
cmp
popf
in
lock
mov
dec
pop
lahf
(bad)
and
xchg
std
scas
iret
mov
out
or
jbe
pusha
or
lds
retf
lock
inc
inc
or
mov
mov
mov
jo
(bad)
mov
xchg
push
or
mov
cmp
pop
ret
call
shr
mov
outs
mov
cmp
mov
dec
(bad)
frstor
out
inc
retf
pop
xchg
pushf
out
add
lods
adc
loope
cmp
arpl
inc
je
out
dec
cwde
and
sbb
sar
xor
out
fisttp
add
inc
shl
(bad)
jmp
jle
(bad)
out
xchg
mov
fsub
or
add
test
cmp
jbe
push
int
hlt
mov
outs
packuswb
icebp
outs
pop
idiv
stos
or
bound
dec
pop
cli
sub
ins
in
mov
in
cmp
dec
mov
sbb
retf
xchg
add
dec
(bad)
pop
mov
sub
fs
clc
push
jge
retf
dec
sbb
mov
cmp
sbb
adc
push
sub
int
test
lock
stos
retf
stos
jns
pop
pop
xchg
jmp
cdq
push
pop
sub
sahf
lock
nop
and
out
xchg
cmp
ins
sub
leave
xor
in
pop
fbstp
inc
clc
rcl
add
repz
lods
and
mov
out
aam
sub
leave
pop
xchg
cld
push
test
fldenv
sub
sbb
pop
fs
mov
pop
popf
je
pop
sub
cmp
out
stos
push
cmp
sub
sti
outs
xlat
lahf
add
retf
test
iret
arpl
pop
pop
mov
jg
cwde
pop
test
cwde
jl
mov
push
(bad)
and
lods
popf
and
loope
mov
(bad)
mov
sbb
lock
pop
je
fmul
pop
inc
loopne
repnz
pop
jmp
mov
pop
add
or
sbb
fidiv
scas
xor
or
lea
mov
cmp
cmp
lds
gs
xchg
(bad)
leave
xchg
aaa
sub
std
imul
jbe
mov
mov
int3
inc
nop
push
ficomp
and
adc
les
pop
jge
inc
scas
and
inc
mov
or
pop
movs
and
(bad)
sub
lods
repnz
dec
sar
sbb
bound
push
mov
mov
mov
movs
ja
cli
scas
das
sub
repz
sti
or
test
rcr
xchg
jle
shl
add
dec
add
xchg
icebp
imul
enter
mov
and
in
repnz
add
sbb
cmp
inc
xlat
mov
xor
add
fisub
dec
cld
xor
add
fiadd
addr16
and
sub
popa
je
mov
stc
dec
mov
cmps
push
inc
pop
shl
imul
sub
adc
or
cli
shl
xor
pop
dec
aas
repz
stos
push
fcomp
fs
sub
mov
mov
adc
mov
call
inc
clc
jge
ins
jecxz
loope
jo
movs
call
out
shl
cmps
fidivr
push
jno
sbb
test
shl
inc
sbb
jb
pop
fwait
or
in
jb
inc
dec
sti
enter
dec
and
out
cmp
into
and
cmp
inc
push
repz
stc
push
and
inc
in
mov
push
loopne
stos
ja
and
and
cmc
xor
or
das
out
add
stos
cmp
cdq
mov
cdq
push
out
ja
jbe
inc
cdq
fldcw
mov
ins
popf
push
je
jmp
iret
jg
call
es
mov
out
loope
jne
adc
fs
mov
mov
xor
cdq
ja
and
pop
and
nop
(bad)
sahf
sub
mov
popa
push
mov
or
scas
cli
popf
inc
popa
test
stos
aaa
adc
mov
adc
xchg
pop
arpl
sub
fidivr
pop
gs
and
mov
adc
imul
(bad)
je
inc
dec
xchg
mov
push
gs
clc
push
daa
mov
hlt
(bad)
push
mov
mov
push
addr16
mov
xor
inc
aas
inc
pop
pop
jl
inc
sbb
jo
cmp
jmp
adc
dec
retf
xor
ret
add
sbb
rcr
or
or
out
inc
nop
pop
ret
data16
inc
push
cmp
gs
pop
cmp
inc
mov
out
cli
xor
pop
push
mov
sbb
imul
mov
inc
int3
mov
(bad)
mov
sti
jno
loop
jge
outs
stc
pop
shl
lock
add
(bad)
je
imul
stos
sbb
push
or
xor
inc
pop
and
mov
gs
add
xor
test
add
call
mov
ins
sbb
je
sub
and
dec
add
dec
cmp
cmp
xor
cmp
mov
retf
div
pop
push
pop
shl
lods
rdtsc
jge
cmp
jecxz
pop
fwait
xchg
mov
pushf
test
pop
inc
and
outs
test
sbb
loope
mov
fucomi
lds
sbb
pop
ins
popa
hlt
push
sbb
or
cmc
idiv
cwde
sbb
fild
and
out
dec
xchg
imul
or
das
add
outs
mov
add
dec
stos
out
test
lea
cmp
bound
dec
and
or
enter
fadd
mov
mov
ds
adc
push
(bad)
enter
adc
popf
movs
jns
adc
imul
rcr
push
aam
jb
pop
rcr
pop
cmps
in
xor
xchg
cmps
sub
jne
jns
lock
cs
sbb
pop
jge
cmp
dec
rcr
inc
sub
movs
adc
jg
mov
call
mov
dec
jp
aam
pop
pop
leave
mov
jo
pop
xchg
mov
or
or
imul
xchg
adc
sbb
jge
(bad)
cld
sub
mov
dec
std
inc
dec
pop
(bad)
js
sbb
or
cmp
outs
cld
and
enter
or
data16
push
in
inc
inc
in
sbb
push
(bad)
mov
push
or
nop
inc
or
mov
xchg
iret
movs
adc
in
int
pop
mov
movs
(bad)
push
jnp
les
scas
push
ja
or
sbb
or
push
cdq
jns
stos
cmp
xchg
pop
sub
inc
sbb
call
jl
test
xchg
push
aad
pop
test
popf
(bad)
cmp
cs
out
loope
bswap
mov
adc
fisub
inc
je
jmp
das
xor
js
xlat
in
retf
ret
add
xchg
in
aaa
pop
dec
inc
addr16
clc
fadd
test
scas
or
pushf
xlat
pusha
jae
push
jo
retf
jmp
ds
mov
fcmovu
mov
push
scas
inc
inc
repz
dec
std
mov
scas
push
lea
mov
sbb
dec
mov
or
mov
adc
aas
out
xchg
int
mov
mov
scas
dec
xchg
mov
jne
sbb
ret
or
inc
lea
push
inc
mov
mov
pop
test
fwait
rcr
icebp
cld
or
sub
aam
and
call
movs
inc
adc
xchg
popa
ret
(bad)
call
sbb
mov
cmc
fisub
push
in
push
jl
jnp
jge
adc
fs
and
inc
cmp
daa
(bad)
jb
jp
or
ret
ror
mov
out
fstp
iret
cmp
push
adc
jb
cmp
mov
adc
mov
xchg
mov
jae
add
or
shl
fisttp
fdiv
cmc
cli
fninit
ret
nop
mov
into
scas
lahf
jl
inc
xor
mov
add
dec
je
xchg
adc
jno
hlt
or
xor
je
sub
aas
mov
jg
mov
(bad)
jae
fnstsw
out
mov
jl
dec
cmp
nop
out
cmp
repz
cmp
cmp
ja
pop
xchg
mov
psllq
push
mov
(bad)
out
sbb
retf
ins
sub
in
arpl
fsubrp
xchg
aas
shl
xchg
stc
out
cmp
jecxz
add
out
add
pop
sub
xlat
xchg
ret
popf
movs
stos
je
(bad)
sti
fmul
cmp
jmp
(bad)
mov
cmp
pop
gs
(bad)
add
push
push
and
fwait
xchg
(bad)
in
dec
inc
and
dec
(bad)
aaa
ins
mul
(bad)
jmp
in
bound
in
xor
mov
jmp
fisubr
or
adc
es
inc
cmp
pop
lods
push
xchg
popf
cli
dec
scas
cmp
jbe
out
or
maskmovq
neg
mov
inc
and
call
dec
(bad)
out
add
imul
jmp
adc
and
xadd
(bad)
fisub
sbb
jae
mov
fmul
add
or
retf
out
mov
imul
sahf
add
es
mov
popf
rcr
dec
mov
clc
outs
pop
cmp
xchg
dec
mov
rol
scas
imul
into
mov
mov
repz
mov
jbe
cmp
fucomi
fldenv
jg
sbb
jmp
mov
push
or
push
xchg
scas
jge
fidiv
sbb
adc
xchg
popa
sub
movs
int3
mov
mov
sbb
cmps
pop
lock
clc
(bad)
jne
or
aam
fucomi
and
jge
sub
pop
jl
sahf
inc
dec
jge
push
inc
add
cmps
or
pop
inc
pusha
xchg
add
xchg
loopne
in
(bad)
mov
and
int3
nop
jecxz
mov
jp
xchg
push
jecxz
clc
push
popw
cmp
mov
push
ins
mov
ret
or
mov
pop
fcmovb
retf
test
shl
mov
xlat
repz
ror
mov
(bad)
(bad)
sbb
aaa
add
pop
cmp
aaa
lea
out
inc
mov
sbb
adc
cmp
std
ret
pop
ret
enter
inc
push
out
cli
(bad)
ror
or
sub
(bad)
pop
sar
xchg
xor
sti
pop
arpl
pushf
div
jmp
scas
adc
cmps
adc
cmp
ja
mov
data16
sbb
bound
add
je
or
(bad)
data16
retf
cli
dec
jno
add
inc
sub
das
or
lods
dec
mov
sub
sub
ret
cld
sub
push
sbb
test
repz
je
sbb
sub
aaa
push
and
mov
add
jle
jmp
cmps
ss
push
fcomip
xchg
mov
test
sub
imul
imul
cmp
mov
push
mov
out
inc
push
pop
cmp
cs
fadd
pop
sti
daa
sub
fdivr
cli
add
pop
inc
not
shl
popa
pusha
js
jns
pop
mov
shl
dec
pop
cmps
fsub
popf
fisub
dec
mov
stos
mov
sar
lahf
bound
cli
dec
jne
(bad)
jecxz
sub
ins
ins
and
cmps
add
push
and
sub
mul
jge
pop
add
push
stc
xor
push
cmp
cmp
test
pop
out
std
leave
and
setno
add
rcl
lds
xor
or
repnz
inc
mov
std
gs
pushf
dec
retf
push
cmp
(bad)
add
push
mov
int
js
enter
xchg
fs
inc
pop
pop
mov
lods
cmp
(bad)
(bad)
sbb
nop
aas
mov
jp
jg
cmp
sbb
jb
rcr
test
ror
outs
jne
push
xchg
fcomp
jmp
lock
stos
in
outs
sbb
dec
adc
mov
js
arpl
add
aas
sub
sbb
addr16
cmp
pop
imul
dec
clc
imul
push
(bad)
(bad)
enter
call
dec
xor
aam
mov
pop
or
gs
paddd
sub
dec
scas
sbb
mov
inc
ror
ficom
lea
mov
cmps
sbb
jl
icebp
int
sbb
hlt
and
jbe
xchg
(bad)
mov
ins
adc
mov
das
rol
(bad)
cmp
sbb
fidivr
aas
mov
lock
lods
(bad)
popa
xor
fiadd
mov
jl
mov
add
out
xchg
sub
xchg
lock
jp
ss
pop
fnstenv
add
scas
out
xor
xchg
aaa
push
ins
loop
repnz
add
mov
push
not
cmps
out
xor
gs
sbb
leave
dec
(bad)
pop
push
adc
and
cwde
jb
xchg
xor
sub
add
(bad)
xor
mov
in
into
gs
int3
add
pop
bound
xchg
pop
sahf
fnstsw
push
int3
cmps
aam
mov
cdq
test
fcomp
jle
nop
add
jg
jl
cld
adc
(bad)
ins
add
in
aam
cli
es
mov
jp
fdiv
(bad)
push
lock
jns
xlat
push
sbb
mov
pop
sahf
fs
inc
test
(bad)
cld
or
sbb
cdq
fistp
int3
mov
loopne
jb
sub
mov
inc
jne
jno
cmps
dec
mov
cdq
test
add
mov
cld
pop
adc
sbb
dec
out
sbb
lods
(bad)
push
cwde
mov
sti
xor
enter
xchg
(bad)
xchg
pop
mov
loope
pushf
loop
push
rcr
rcl
repz
mov
xchg
test
push
inc
iret
mov
add
out
jno
cmp
push
pop
jecxz
arpl
push
or
mov
into
dec
cmp
xchg
dec
adc
mov
test
enter
pop
dec
enter
mov
out
retf
push
xchg
push
jmp
and
push
mov
outs
ja
or
mov
fidiv
and
std
bound
addr16
mov
lock
and
sbb
retf
inc
jp
mov
or
call
cmp
fstp
inc
mov
and
dec
lock
pop
xchg
pusha
mov
mov
xchg
mov
jne
mov
es
rcr
inc
and
repnz
mov
(bad)
sar
push
jmp
fistp
outs
add
mov
sbb
fdivr
sub
cmp
dec
cmp
push
pop
inc
cmp
add
neg
jmp
mov
nop
push
pusha
xor
jge
xor
pop
ret
xor
aad
stos
jp
pop
mov
ret
pusha
icebp
nop
push
in
mov
mov
cmps
add
out
mov
xchg
pop
add
test
adc
push
dec
pop
je
stos
cmps
mov
rcr
xor
lods
add
mov
daa
or
cli
icebp
dec
sbb
imul
sub
fiadd
nop
mov
sub
and
inc
cmp
adc
xor
sbb
loop
imul
or
adc
addr16
aaa
xchg
xchg
mov
movs
mov
push
mov
pop
sbb
(bad)
aaa
inc
fidiv
mov
and
fidivr
cs
fdiv
dec
retf
and
sub
lea
xor
sbb
imul
mul
das
bound
sbb
mov
fisttp
mov
ficom
in
pop
mov
lds
cld
aaa
aam
pop
cmp
std
sbb
xor
das
push
dec
xchg
sti
fld
mov
xor
jp
mov
or
setge
jno
shl
pop
test
mov
add
les
enter
fwait
cmp
xchg
lods
pop
cmp
fiadd
mov
xor
xchg
in
stos
sbb
fiadd
out
inc
mov
jno
push
mov
out
sub
aas
sbb
add
xchg
sub
and
mov
fisub
repz
cmp
(bad)
clc
cmp
imul
add
push
rcr
xchg
jbe
xchg
dec
mov
xor
aam
cmps
ins
mov
and
fdivr
leave
retf
sbb
cmps
xor
sbb
dec
(bad)
repz
aam
pop
int
xchg
cmp
push
ss
fnsave
add
ret
cmp
mov
cmp
sbb
popa
pusha
adc
pop
mov
add
mov
popa
inc
das
jns
ss
ja
mov
push
xchg
int3
stos
cld
dec
out
out
test
es
ror
lods
inc
push
sti
adc
iret
push
xchg
or
jb
mov
dec
repnz
aam
mov
mov
aas
imul
es
ss
inc
add
xchg
mov
ficomp
jno
dec
jns
mov
movs
add
xchg
aas
sbb
das
ret
call
mov
loopne
add
mov
pop
mov
adc
loopne
xor
push
test
and
dec
cwde
repz
adc
dec
repz
(bad)
pop
enter
sub
lods
jbe
fcmovb
or
and
sbb
es
jmp
data16
pop
rcr
jb
and
fisub
or
cmp
push
add
push
cmp
mov
js
and
xlat
test
arpl
push
rol
stos
pop
enter
add
loop
push
sbb
repz
call
rcl
fs
or
inc
outs
push
stos
pop
out
xchg
addr16
mov
inc
scas
enter
(bad)
jmp
int3
jge
adc
lahf
xchg
in
lods
lods
shr
scas
ret
es
mov
xor
inc
popf
popa
xchg
imul
sbb
mov
xchg
imul
cmp
jmp
mov
mov
int3
adc
pop
test
into
daa
add
cmp
mov
pop
ret
mov
pop
outs
mov
fwait
xor
test
loop
pop
and
mov
leave
jno
cmp
or
test
inc
ficomp
sti
and
inc
fld
mov
add
push
pop
gs
sbb
aad
ja
cmp
push
pop
fistp
and
jns
ret
push
push
int3
sbb
xor
inc
mov
pop
outs
ret
and
ss
sti
das
inc
sbb
mov
cmc
(bad)
adc
mov
jnp
repnz
ss
stc
xchg
jns
imul
test
fisttp
push
xor
sbb
xor
(bad)
inc
ins
sub
push
and
call
sbb
jne
cmp
ror
ror
xlat
xchg
cmps
dec
and
jns
xlat
lods
adc
mov
push
cmp
dec
test
dec
jo
(bad)
in
adc
jp
mov
retf
ds
shl
add
cmc
loopne
(bad)
rol
add
cmp
add
inc
mov
retf
push
aas
push
and
dec
push
in
dec
dec
pop
cmpxchg
clc
std
mov
xor
test
fwait
imul
cs
pop
cmp
xor
in
test
pop
mov
cmp
fcomp
mov
iret
dec
ins
fisttp
add
icebp
lea
xchg
cmps
xor
(bad)
test
mov
or
or
dec
icebp
or
and
pop
ret
arpl
dec
(bad)
cmps
adc
out
lahf
into
sub
pop
mov
xchg
movs
xlat
retf
mov
js
outs
dec
cmp
retf
push
mov
ror
jae
int
pop
lahf
aaa
pop
aam
loopne
sbb
(bad)
cdq
adc
lods
add
pop
rcl
sub
or
loopne
xor
sub
dec
in
and
pop
push
xchg
aam
mov
cmp
fwait
call
aas
add
ss
fiadd
ins
dec
push
movs
inc
lods
xor
(bad)
cld
mov
fstp
sub
stos
test
jb
pop
ficom
cmp
(bad)
pushf
int3
jne
and
xchg
or
jo
shr
dec
test
retf
mov
call
inc
cmp
retf
out
or
mov
ret
int
sub
jl
js
add
stc
clc
jl
hlt
pop
xor
jo
popf
rcr
push
movntps
mov
pop
ret
adc
and
sbb
push
les
mov
adc
sbb
cli
dec
jb
mov
mov
repnz
sahf
add
cmp
call
add
push
in
test
in
rcr
jmp
push
out
sbb
and
hlt
dec
mov
sub
in
sbb
cmp
adc
xor
daa
cmp
push
or
bound
lods
cmp
sbb
cmp
cmp
cmps
daa
das
pop
in
ret
scas
icebp
mov
inc
or
push
xor
in
movs
leave
mov
xchg
(bad)
ss
dec
in
mov
cmp
js
daa
lock
movs
out
je
int3
frstor
push
loopne
adc
ret
call
std
bound
xor
lock
mov
sub
inc
or
jecxz
pop
fwait
cmp
inc
nop
out
arpl
test
out
sub
xchg
dec
iret
cwde
in
and
dec
or
cmp
jecxz
daa
adc
arpl
stc
outs
dec
jae
inc
cmc
adc
fwait
add
arpl
dec
adc
in
mov
mov
dec
ins
imul
pop
and
xor
cld
dec
in
mov
add
sub
mov
push
jge
xor
aas
iret
aas
xchg
pop
and
mov
sub
mov
add
and
(bad)
(bad)
or
sbb
test
jle
and
leave
test
arpl
mov
leave
or
jnp
xchg
mov
es
scas
mov
jbe
scas
dec
mov
and
repz
mov
xchg
jne
mov
jp
jp
jne
mov
je
in
ds
into
lahf
mov
mov
mov
fs
in
mov
mov
mov
out
xor
mov
mov
or
je
jno
xchg
aaa
repz
bound
jp
jecxz
(bad)
into
inc
bound
xchg
mov
mov
sbb
int
add
stos
dec
aaa
in
out
fist
or
movs
mov
js
popa
push
mov
cmp
xchg
cmp
xor
imul
jnp
cmp
sub
adc
mov
jmp
fld
push
cmps
setns
test
call
retf
add
scas
dec
pop
mov
test
sub
imul
mov
xor
xchg
xchg
outs
or
pop
push
or
xchg
push
iret
inc
movs
cmps
imul
popf
stos
mov
std
fdiv
sbb
mov
push
sar
dec
cmp
pushw
xchg
lock
fisub
aaa
shl
mov
mov
adc
neg
sbb
out
push
push
mov
arpl
mov
xchg
adc
pop
and
jle
imul
outs
in
rol
aaa
stos
cmp
out
dec
or
into
xchg
cs
jne
xor
cdq
sar
out
sti
fist
nop
repz
jge
test
mov
mov
mov
int
jmp
mov
daa
test
push
push
lahf
bound
mov
shl
sbb
loopne
jp
cmps
pop
sub
retf
xchg
rcr
es
call
shr
sub
fidivr
and
add
cdq
es
and
inc
retf
xor
(bad)
add
cmp
xor
xchg
ret
push
rcr
lds
fisub
sbb
pop
dec
aam
fcom
sbb
lods
mov
nop
push
fnstenv
adc
ficom
jae
mov
push
jnp
push
mov
shl
xor
xchg
ins
add
mov
or
xor
sub
in
mov
bound
mov
test
daa
push
addr16
pop
mov
mov
ins
scas
push
mov
shl
dec
inc
mov
test
fcomp
out
icebp
(bad)
fdivrp
pop
xchg
pop
jbe
xchg
(bad)
push
pop
lea
push
gs
xchg
imul
scas
add
mov
leave
mov
add
pop
shl
pop
xlat
stos
cmp
xchg
scas
inc
and
stc
fisttp
xchg
(bad)
les
out
push
ds
bound
adc
and
adc
es
add
rcr
jae
xchg
hlt
aam
lock
ins
rcl
jmp
dec
addr16
pusha
jns
cmp
stos
jnp
push
adc
mov
cmps
xchg
cmp
dec
push
mov
aad
shrd
xchg
outs
das
ins
sub
jge
xchg
cmp
xchg
cs
and
push
repnz
inc
jbe
sti
xchg
jne
dec
leave
mov
in
mov
inc
(bad)
(bad)
mov
or
pop
int
inc
pop
(bad)
push
pop
cmp
sub
sub
ins
ror
ss
xchg
movs
(bad)
ja
popf
arpl
push
repz
int3
sub
push
bound
dec
stos
lds
aaa
sub
jno
pushf
movs
inc
and
and
sti
imul
ja
aam
xchg
out
aam
jmp
adc
xor
pop
jo
cmp
leave
xchg
cs
mov
nop
add
xor
idiv
jp
mov
ds
xor
in
mov
add
mov
jmp
pop
fild
pop
movs
ds
xor
xchg
(bad)
pop
loop
xlat
adc
es
add
jle
push
xacquire
jno
mov
mov
sub
xor
mov
sub
(bad)
cli
imul
mov
cmps
dec
xor
push
xchg
jne
and
hlt
jge
cmp
into
stc
pusha
lods
cmp
gs
xor
stc
retf
dec
pop
cmp
xchg
pusha
mov
aam
das
jp
inc
movs
mov
ins
or
popa
leave
pop
mov
rol
test
mov
pop
daa
jg
ret
int3
fcmovnbe
xor
clc
jnp
cmp
sbb
test
mov
(bad)
inc
iret
mov
aam
hlt
(bad)
jmp
fsubr
hlt
xor
mov
cmc
ret
out
ja
out
jae
bswap
push
xcrypt-ecb
cmps
mov
imul
enter
or
mov
(bad)
arpl
pop
movs
div
xchg
pop
sti
or
cmp
sti
mov
(bad)
imul
jmp
sub
out
mov
or
and
add
mov
mov
lods
loope
and
or
dec
inc
das
push
(bad)
fdivr
inc
hlt
lock
jno
fs
or
jo
pop
loop
aad
mov
xor
pop
mov
sub
sub
aaa
mov
jl
test
xor
fisttp
xor
xor
ret
fcom
push
(bad)
mov
xchg
or
not
inc
jb
inc
xchg
cmp
push
cmp
test
xlat
or
xor
imul
mov
fs
(bad)
sbb
jb
pop
into
or
leave
(bad)
arpl
jecxz
(bad)
loopne
adc
push
ret
pushf
lock
or
aaa
mov
mov
jp
rol
icebp
addr16
outs
paddusw
stos
mov
movs
jmp
inc
sub
sahf
das
jno
outs
cmp
pop
int3
pop
adc
not
adc
cwde
out
dec
jnp
in
mov
jbe
es
daa
arpl
popa
jnp
jb
push
(bad)
push
addr16
push
sbb
fcom
sub
jmp
xor
sub
je
pop
popa
pop
imul
cmp
ins
call
sub
mov
mov
in
jle
lock
add
dec
push
inc
je
into
push
adc
movs
sbb
xchg
cld
jecxz
call
sbb
mov
mov
lds
xchg
mov
mov
fild
xor
cs
and
mov
jae
jl
inc
push
pop
out
sub
mov
add
inc
repz
jl
mov
mov
mov
imul
dec
clc
call
dec
jbe
fdivr
push
push
inc
inc
or
sbb
(bad)
cli
loope
hlt
mov
fwait
lahf
idiv
xchg
xor
daa
add
pop
xor
mov
push
das
in
movups
sbb
out
push
imul
retf
loope
std
(bad)
mov
jb
and
jecxz
cdq
inc
cmps
sbb
inc
cmp
mov
call
imul
and
cwde
in
call
in
add
xor
xor
xchg
xor
adc
jmp
push
dec
or
pop
cmp
cs
xchg
data16
mov
(bad)
gs
loope
inc
pop
fiadd
int
pop
test
jl
inc
shl
scas
add
cmp
xor
pusha
mov
xchg
or
xchg
adc
repz
aas
sbb
mov
mov
sahf
jle
ins
call
fldcw
jae
retf
(bad)
pop
dec
clc
outs
sub
mov
xchg
retf
lds
repz
clc
mov
xchg
inc
loope
lea
jmp
retf
cmps
pop
and
adc
mov
xor
sub
popf
push
mov
dec
and
shr
push
arpl
(bad)
mov
nop
out
dec
push
push
lods
jns
sahf
in
arpl
test
scas
inc
sub
stos
jmp
scas
xchg
(bad)
jmp
cmp
iret
lock
adc
jae
scas
jle
out
cmp
cld
(bad)
es
mov
add
or
jns
dec
call
rcl
dec
pop
cmp
lods
(bad)
jecxz
push
aad
xor
pop
ficom
push
outs
mov
fld
sub
xchg
sub
icebp
pop
ins
daa
int
sbb
fisub
(bad)
mov
inc
and
arpl
jns
push
jns
lock
int
jle
xlat
mov
in
pop
xor
mov
(bad)
pminsw
jbe
lds
and
imul
pop
inc
icebp
mov
lock
scas
xlat
stc
addr16
mov
adc
add
sbb
push
movs
fst
lea
sbb
pushf
jnp
scas
pop
rcl
and
stc
call
cs
xchg
dec
int
fsubr
adc
movs
test
xchg
sub
(bad)
dec
cmp
lea
icebp
mov
out
and
ja
or
aad
movs
stos
sub
clc
mul
ror
jb
cmp
cmp
mov
ror
push
push
movs
dec
(bad)
push
cdq
arpl
xchg
mov
popa
stos
outs
(bad)
ror
dec
pusha
fldenv
ja
push
or
loope
shl
cmp
das
mov
cmp
outs
sub
enter
sbb
jns
or
adc
jns
sbb
stos
pop
stos
xor
outs
in
mov
ret
jnp
jbe
popf
pop
mov
dec
sbb
out
mov
mov
inc
rcl
xor
int
mov
push
sbb
jmp
push
or
movs
push
ret
xchg
daa
test
xchg
adc
jmp
sahf
ficom
and
mov
mov
es
cmp
out
arpl
jl
mov
and
stc
outs
mov
cmps
adc
push
sbb
aam
mov
xor
(bad)
push
mov
push
aam
and
push
dec
add
xor
pusha
out
movs
dec
ins
mov
mov
and
loop
fidivr
mov
inc
mov
xor
mov
shl
jmp
lahf
test
dec
dec
dec
and
mov
repz
dec
(bad)
mov
push
pop
xor
dec
int3
(bad)
popw
mov
fs
cmps
add
fchs
ins
int
gs
jp
and
cwde
fldl2e
sub
mov
test
or
fpatan
call
xor
lods
xor
(bad)
mov
loopne
push
cli
or
fimul
xchg
sub
in
sub
pop
lfs
int
cwde
inc
(bad)
out
pop
xchg
pusha
add
in
shr
fsub
(bad)
sar
popa
add
fild
shr
add
aas
ss
dec
sti
jo
xor
(bad)
loope
pop
xor
(bad)
mov
xchg
es
jmp
jbe
pop
mov
xchg
call
add
(bad)
ror
jno
and
js
icebp
les
and
mov
std
add
lahf
xor
mov
and
xchg
xor
call
movs
outs
mov
add
inc
push
stos
xlat
jge
aam
jecxz
imul
lds
mov
mov
xor
shl
retf
cld
out
sbb
iret
push
sbb
sbb
leave
out
hlt
jle
inc
or
dec
lods
les
xchg
jns
ret
ins
pop
js
cmp
push
fwait
sbb
jne
xchg
repnz
enter
lahf
and
lds
bound
inc
jne
dec
jmp
mov
loope
lahf
adc
data16
add
lods
xor
daa
je
xchg
mov
sbb
in
mov
lock
push
or
cli
dec
adc
popa
not
lods
sbb
sbb
mov
aas
fwait
or
adc
aam
pusha
pop
out
jo
ret
and
div
(bad)
out
repz
cmp
mov
lds
inc
cmp
cmc
ins
aas
pop
nop
add
lock
sub
xor
mov
(bad)
push
sbb
enter
out
push
mov
mov
addr16
in
fdiv
xor
out
loop
xor
test
leave
ins
fild
xor
push
into
mov
mov
dec
and
cmc
or
and
stc
and
popf
test
cwde
std
mov
fdivr
(bad)
jmp
sub
lds
les
xor
aaa
fwait
cmps
fwait
test
fdivr
repz
and
(bad)
data16
lahf
loop
imul
(bad)
(bad)
aad
xor
fidiv
std
cmp
aad
or
sub
pop
call
repnz
in
outs
ret
mov
mov
cmp
mov
outs
mov
sub
xchg
(bad)
inc
in
pop
jl
push
push
sub
js
pop
(bad)
retf
pop
call
add
mov
add
mov
iret
pop
ins
popf
icebp
mov
out
sbb
and
dec
mov
ss
pop
fstp
out
dec
clc
mov
in
cs
jo
mov
loope
cmp
mov
icebp
mov
loop
jae
fs
xchg
push
mov
mov
mov
xchg
push
pop
jmp
jae
push
and
mov
pop
push
inc
fistp
xor
push
ret
stc
out
fstp
or
or
adc
jmp
mov
dec
clc
inc
adc
jne
pop
xor
loop
or
jns
sar
mov
ficomp
adc
jnp
and
sar
push
nop
xchg
sub
pop
xchg
movs
and
stos
mov
mov
mov
aad
push
sbb
retf
dec
loop
or
pop
mov
sub
push
mov
jae
inc
leave
in
neg
in
inc
push
fwait
inc
movs
aaa
bound
pop
sbb
adc
xlat
cld
sar
mov
ret
adc
xchg
hlt
scas
div
push
fs
inc
fwait
imul
in
repnz
je
mov
cli
aad
rcl
inc
fst
mul
js
repnz
pop
repz
and
or
adc
add
dec
adc
or
fisttp
push
xor
and
in
push
push
movs
dec
in
imul
xor
jne
into
cli
sahf
pusha
sti
rcl
movs
scas
arpl
inc
and
in
mov
movs
push
sub
stos
cdq
add
clc
int
jecxz
dec
pop
imul
dec
mov
stc
test
mov
sub
out
adc
push
(bad)
push
fs
(bad)
out
xchg
(bad)
add
lods
sbb
sti
jb
(bad)
call
adc
or
sahf
test
pinsrw
or
push
jae
xchg
mov
stos
or
pop
inc
out
adc
and
fxch
das
jp
bound
leave
call
and
inc
mov
fnclex
or
adc
pop
sbb
sub
(bad)
enter
push
cwde
jmp
test
mov
jns
jno
or
sub
loop
xor
cmc
adc
push
dec
pop
cmp
lods
rcl
xor
cmp
cmps
pusha
mov
xchg
clc
mov
and
cli
xlat
dec
cmp
cmp
inc
movs
mov
js
stc
test
pop
pop
ins
cmps
movs
ret
add
and
movs
loop
test
cmp
adc
inc
jmp
xchg
mov
sahf
inc
(bad)
aas
sub
nop
in
push
mov
ror
(bad)
dec
scas
add
push
data16
jmp
dec
arpl
mov
cli
pandn
jge
cmp
retf
inc
sub
jp
pop
jne
add
movs
dec
fld
in
gs
iret
xchg
scas
mov
push
push
repz
ins
jbe
or
dec
or
addr16
stos
or
fwait
mov
in
popa
pop
test
xchg
fistp
inc
je
mov
mov
in
repz
adc
cmp
or
sbb
outs
bswap
in
(bad)
mov
cmovne
mov
mov
add
cs
xchg
in
sub
fimul
test
or
jge
jle
xor
push
push
fwait
mov
jns
sub
push
in
lods
(bad)
cmc
mov
xchg
fistp
test
dec
mov
sub
js
mov
sbb
add
and
sti
or
mov
pop
loope
pop
inc
and
cmp
cmp
xchg
push
cmc
xor
and
push
enter
mov
mov
rcr
mov
add
ret
xchg
das
pop
bound
jecxz
aam
pop
shl
adc
fisttp
dec
jo
push
and
push
sbb
out
xchg
mov
je
jmp
(bad)
cmp
and
cmp
adc
pop
cld
mov
and
xchg
dec
icebp
jae
pop
jg
add
pop
inc
mov
loop
dec
scas
mov
rol
out
stos
jmp
jne
xor
out
adc
ffree
aam
jae
inc
xor
or
jne
leave
iret
inc
pusha
iret
xor
popf
add
adc
xor
push
pop
jb
rcr
jno
sbb
xchg
xchg
fst
mov
mov
ins
(bad)
jle
sar
sar
and
das
stc
mov
cld
jno
int
cli
or
call
xchg
jecxz
push
ins
int3
aas
pop
inc
xchg
or
call
jo
mov
and
dec
xchg
scas
lahf
mov
cmp
fld
fadd
test
inc
adc
jecxz
push
imul
mov
imul
hlt
loop
hlt
xor
imul
or
pop
xchg
push
mov
xor
std
lds
dec
mov
jbe
clc
test
dec
mov
mov
xchg
push
out
mov
neg
outs
push
out
sahf
pop
cmp
and
in
pop
cmps
fldlg2
jge
mov
jge
pop
mov
sbb
and
mov
and
jb
jmp
pushf
inc
dec
mov
push
jmp
pop
rcl
mov
sbb
inc
test
aas
add
inc
inc
iret
leave
test
push
dec
loope
xlat
mov
cmp
xor
dec
(bad)
mov
sub
daa
stos
mov
std
mov
pop
mov
push
aaa
sbb
cmp
test
push
ja
ds
iret
push
(bad)
adc
mov
pop
add
das
dec
mov
jl
sub
in
std
mov
int3
xlat
push
adc
pop
xor
xchg
and
sub
push
xor
cmp
stos
dec
jecxz
stos
sar
cwde
xor
push
pop
add
sbb
and
lea
cdq
stos
sbb
aad
inc
inc
fisubr
xchg
or
(bad)
int
cdq
mov
push
aam
repz
mov
pusha
push
stc
xor
test
popf
in
scas
adc
stc
inc
clc
adc
cdq
sub
sbb
add
mov
jp
psrlw
(bad)
xor
inc
in
pop
aas
cmps
add
mov
jo
push
cli
jmp
stc
dec
arpl
add
ins
jno
sub
repnz
ins
int
pop
add
push
sbb
in
cwde
imul
fcom
mov
pop
loopne
pop
or
jbe
xchg
mov
pop
or
popf
rcl
xchg
lods
mov
xor
push
dec
adc
and
mov
outs
mov
jne
dec
xchg
or
xor
inc
cdq
test
pop
pop
neg
inc
sub
cli
jg
aam
stos
scas
sbb
leave
je
fcom
inc
inc
adc
and
dec
in
push
mov
sahf
stos
push
shl
inc
mov
mov
mov
ja
mov
imul
lds
aam
dec
push
inc
aas
mov
jne
fsubp
add
dec
jp
or
mov
push
stc
sub
arpl
iret
test
inc
xor
push
jle
add
in
test
xor
into
retf
sbb
cmp
add
ds
ds
(bad)
ror
mov
mov
cmp
jbe
and
and
sbb
aam
sbb
mov
cmp
adc
pop
mov
aas
mov
xlat
aas
add
test
fdivr
test
jo
xchg
cmp
push
cmps
in
add
pusha
push
cwde
inc
lahf
jo
pop
add
fwait
mov
(bad)
out
test
leave
prefetch
adc
fisub
cmp
enter
sub
mov
je
cmp
test
cli
cmps
(bad)
pop
fwait
jns
inc
push
push
sub
fimul
sti
add
sbb
or
das
enter
addr16
sbb
popf
cmp
pop
int
sbb
mov
clc
mov
scas
dec
inc
xchg
cmp
mov
out
mov
test
inc
lods
pusha
dec
xchg
jle
cmp
ja
repnz
cmp
push
xchg
mov
in
inc
neg
jmp
sub
fs
adc
es
retf
into
and
push
dec
test
stos
in
dec
rcr
enter
and
mov
sbb
mov
or
dec
mov
mov
dec
xchg
inc
repz
inc
aas
out
inc
mov
mov
pop
jg
push
pop
in
(bad)
adc
sbb
test
iret
adc
cld
xor
inc
aam
mov
enter
mov
mov
das
jnp
xchg
dec
jb
add
mov
sbb
test
push
scas
fs
arpl
cmp
xor
movs
scas
sbb
inc
sub
mov
xor
loope
es
mov
cmp
fcom
xchg
xchg
je
inc
adc
dec
inc
aam
cmp
test
nop
dec
addr16
icebp
pop
inc
dec
jl
mov
jb
adc
daa
test
pop
out
movs
jno
scas
jmp
mov
in
xor
aaa
pushf
sub
inc
dec
pushf
push
mov
std
fadd
push
fisttp
fldenv
xor
mov
mov
cld
mov
cmp
scas
and
mov
pop
lock
loopne
dec
mov
aaa
xor
pop
push
popf
adc
jecxz
mov
xor
std
dec
and
dec
mov
push
lahf
or
push
jae
mov
adc
mov
repz
fstp
add
push
push
xor
dec
push
es
ds
in
push
addr16
cmps
xchg
les
mov
mov
movs
or
adc
popa
in
adc
inc
into
push
ins
add
rol
cmp
(bad)
outs
je
aaa
retf
or
inc
aam
push
je
push
pop
test
fdivrp
jmp
xchg
mov
sub
ret
cmp
lods
lahf
pop
mov
jg
enter
sub
leave
pop
cmp
out
xchg
mov
push
jmp
pop
adc
add
fld
aas
and
shl
add
or
xor
aaa
out
std
enter
xchg
jno
rcr
mov
cmps
push
pop
fdivr
ss
or
ror
sbb
mov
out
push
movs
and
bound
inc
addr16
ret
jl
inc
fsin
mov
or
je
mov
push
popfw
xor
div
or
ja
lea
and
mov
imul
paddq
push
mov
mov
loopne
out
or
push
(bad)
dec
or
sbb
lods
das
stos
fcom
mov
xchg
mov
and
push
mov
mov
rol
bound
xchg
stos
inc
pop
sahf
cmc
(bad)
repz
(bad)
xlat
mov
ins
cmp
sub
out
mov
add
lahf
sub
pop
test
sti
lea
mov
push
fidivr
inc
in
cmps
dec
lds
(bad)
(bad)
(bad)
fucom
push
dec
scas
inc
mov
xchg
fwait
call
or
xchg
test
ss
cmp
push
rcr
movs
cmp
in
cmc
fucomip
xchg
adc
jmp
(bad)
clc
pop
or
mov
int
adc
in
retf
fsubrp
cmp
push
pop
sub
mov
pop
mov
jl
std
sahf
adc
lock
movs
inc
sbb
in
sar
cmp
fidivr
pop
dec
mov
mov
loopne
mov
add
lods
pop
add
fcmove
sbb
cli
aam
inc
push
sahf
add
jne
or
int3
pop
pushf
adc
ror
outs
(bad)
(bad)
cmp
ins
xor
dec
mov
test
push
outs
or
pop
lea
retf
dec
xor
not
popf
sbb
test
outs
loopne
xor
pop
lea
scas
xchg
jle
(bad)
lods
jmp
in
xor
fwait
mov
pop
add
clc
dec
scas
popf
(bad)
fldcw
xchg
and
test
int
pop
(bad)
dec
int3
dec
sti
lea
mov
lods
jnp
test
and
xor
sbb
xor
fcom
fnsave
jbe
push
push
je
adc
pop
and
leave
iret
neg
xor
into
test
add
mov
push
hlt
sar
jns
sub
lods
push
scas
(bad)
int3
pop
test
xor
icebp
cmc
mov
shl
push
mov
aaa
adc
(bad)
sbb
pop
lahf
outs
pop
xchg
sbb
int3
mov
xor
add
bound
jg
mov
mov
mov
xchg
gs
icebp
inc
pop
test
outs
lahf
sbb
push
dec
mov
cmp
push
cmp
daa
push
repz
int
cmp
fs
js
mov
outs
dec
jmp
ret
mov
jb
rol
pop
sbb
adc
jp
xchg
inc
mov
pushf
jmp
and
movs
lods
push
inc
aaa
mov
loop
inc
inc
clc
inc
stos
push
sti
pop
pop
retf
inc
in
jne
nop
out
xchg
fnsave
loopne
mov
xlat
sbb
inc
dec
xchg
mov
ins
cmp
mov
fild
and
aas
cwde
xchg
jmp
popf
pop
xor
in
imul
imul
in
popa
push
pop
dec
(bad)
xor
jb
dec
(bad)
repnz
pop
and
lea
mov
fld
sub
les
cmc
sub
adc
jne
cld
in
sub
leave
dec
adc
(bad)
in
or
and
mov
fisub
xor
test
jg
aad
loop
jo
div
movs
call
add
inc
sub
sbb
dec
inc
in
push
push
cmp
mov
cs
add
das
jns
js
call
in
or
es
xchg
push
aam
retf
cwde
jmp
or
test
js
xchg
popf
or
cli
add
retf
jmp
test
pop
nop
fcomp
out
xchg
sbb
add
rcr
mov
ret
adc
add
in
and
cmp
rcl
fcos
push
popa
lock
push
xlat
in
mov
pop
pop
retf
in
shr
popf
dec
and
cmp
cmps
xchg
jmp
and
xchg
push
gs
int3
outs
push
and
and
pop
sbb
push
jne
jb
xchg
hlt
sub
aaa
ret
cmp
gs
xor
retf
(bad)
cld
mov
adc
fmul
in
ret
jp
lahf
popa
test
in
lods
push
inc
xchg
fistp
pop
enter
mov
sahf
ja
ja
mov
xlat
inc
sbb
ds
add
sti
mov
js
leave
outs
jecxz
lea
ret
add
in
fstp
mov
xor
inc
xchg
push
call
popa
ins
pop
aad
push
mov
dec
jnp
xchg
push
mov
ror
test
sub
ja
loopne
mov
pop
push
cmps
cmp
(bad)
mov
ds
imul
sbb
cmp
jmp
aad
mov
mov
sbb
or
add
ins
popa
cmps
addr16
jecxz
jns
inc
push
cmc
cmp
adc
and
adc
cwde
adc
wrmsr
inc
push
mov
adc
fisttp
jecxz
or
jmp
dec
mov
mov
jle
pop
ss
adc
(bad)
cld
(bad)
cmp
jne
lds
imul
cld
push
mov
sbb
daa
test
addr16
outs
fldenv
jo
add
adc
push
or
ja
push
test
popf
mov
dec
push
mov
stos
jl
add
push
test
mov
sub
xor
xor
sbb
int3
ret
lock
in
adc
xor
or
imul
mov
and
hlt
inc
push
mov
push
lods
inc
mov
cmp
xchg
arpl
lock
jp
in
(bad)
dec
sub
sub
mov
push
mov
add
or
jb
sahf
push
(bad)
in
cwde
sub
cli
adc
(bad)
std
pop
jae
movs
scas
in
cwde
mov
jg
faddp
(bad)
jmp
repnz
or
mov
movs
sbb
push
ret
and
adc
jno
sub
dec
(bad)
cmp
lods
pop
adc
xchg
(bad)
iret
out
mov
pop
or
sbb
ins
mov
xor
sar
ins
push
mov
and
aam
sub
data16
and
mov
daa
pop
sub
or
push
cmp
mov
sub
pop
cmps
add
movs
mov
dec
outs
shr
ins
clc
les
push
out
mov
jnp
(bad)
call
cmp
jne
push
out
mov
mov
stos
je
shr
scas
push
(bad)
scas
fsubrp
cs
mov
and
pop
je
movs
or
mov
lods
or
adc
(bad)
xlat
call
gs
fnstcw
sahf
(bad)
push
fwait
mov
into
cli
mov
cli
push
in
xchg
and
ret
or
fild
mov
clc
fistp
push
dec
push
cmp
nop
call
js
adc
xor
out
in
out
xor
into
rcl
inc
and
xchg
xchg
xor
pop
adc
loop
sahf
or
mov
cmp
lods
inc
sub
(bad)
push
dec
clc
fistp
xor
test
mov
jns
dec
push
jb
hlt
inc
push
sar
sub
xchg
and
inc
xchg
dec
or
arpl
jmp
cdq
jp
retf
sub
sub
(bad)
cmp
repz
iret
sub
rcl
pop
retf
call
cli
gs
lods
arpl
pop
sbb
jo
dec
hlt
lea
adc
pop
fwait
and
shr
xchg
test
add
retf
mov
inc
sbb
xchg
inc
fs
add
xchg
aad
icebp
(bad)
add
xor
int3
cmp
cmp
lahf
adc
je
xor
xchg
dec
jecxz
xor
ret
std
inc
in
fimul
sti
sub
push
pop
sub
sub
cmp
les
bound
or
test
dec
and
and
or
fadd
jl
pop
ret
mov
mov
js
sbb
or
pop
inc
adc
(bad)
inc
cmp
xor
pop
inc
jbe
sub
dec
sub
jmp
adc
jge
mov
xor
inc
test
nop
add
jo
push
arpl
out
mov
lods
dec
push
test
adc
jb
and
out
mov
cwde
stos
in
jne
push
sub
mov
sbb
mov
mov
mov
scas
fld
fisubr
daa
cwde
and
stc
jo
shl
mov
mov
(bad)
pop
sub
jne
rol
call
push
dec
repz
mov
js
les
fwait
mov
mov
pop
lahf
(bad)
fsubr
sub
cdq
cmc
inc
in
sti
mov
test
scas
test
mov
mov
and
call
stos
hlt
dec
outs
mov
jecxz
jge
cs
jp
fnstenv
push
iret
xchg
inc
sub
je
adc
(bad)
mov
retf
sub
push
and
gs
inc
popf
add
mov
mov
in
mov
pop
mov
aaa
push
mov
xor
xchg
xor
shl
in
jl
das
sbb
cwde
mov
enter
dec
add
lods
dec
sbb
pop
hlt
sbb
dec
dec
adc
and
nop
ja
jmp
fdivr
mov
sbb
mov
xchg
lock
repz
jl
inc
or
xor
sar
cmp
xor
push
repnz
(bad)
outs
fbstp
lods
lods
clc
repz
jge
nop
aaa
push
div
fdivr
stos
call
arpl
loopne
sti
adc
adc
mov
ret
out
pop
push
mov
cs
stos
cli
rol
or
dec
sub
cmps
arpl
sub
test
sbb
cmp
mov
fsubr
jl
add
push
stc
and
loope
popa
jle
adc
xor
jo
movs
call
(bad)
mov
xchg
je
sbb
mov
out
mov
loop
mov
retf
and
and
shr
mov
das
or
nop
(bad)
sub
(bad)
xor
mov
(bad)
cdq
jp
mov
cmc
adc
push
cwde
jge
(bad)
jb
mov
adc
mov
jmp
sar
adc
add
in
(bad)
test
xchg
int3
xor
ficomp
cmovne
ins
sub
cmp
das
mov
test
lods
dec
popa
call
pop
addr16
ja
cwde
inc
sbb
or
inc
sbb
repnz
inc
jp
jp
mov
mov
mov
or
rcr
xor
jno
sbb
sbb
or
test
pop
xchg
neg
push
mov
xlat
loop
jmp
fisttp
cld
iret
cwde
fdiv
sub
out
xchg
mov
xor
or
retf
mov
add
loop
cmc
or
rcl
inc
pusha
dec
test
dec
mov
movs
add
adc
sbb
not
pop
(bad)
es
or
dec
mov
(bad)
jns
icebp
jp
mov
cmp
sub
pop
dec
and
popa
hlt
xchg
add
push
dec
in
scas
xchg
add
dec
stc
and
sub
out
add
(bad)
out
inc
iret
pop
in
dec
movs
mov
ins
inc
or
mov
push
cmps
dec
dec
sub
xor
rcr
fadd
cmp
loopne
in
fidivr
xchg
mov
(bad)
aas
xor
fsubr
mov
inc
cld
jg
dec
and
adc
daa
inc
cld
stos
cmp
xor
imul
loope
xchg
mov
test
test
lods
dec
dec
xchg
fisub
mov
arpl
lock
jecxz
and
out
int3
jl
bound
push
arpl
test
in
push
dec
xchg
call
and
dec
mul
cld
xchg
sub
rcl
mov
push
(bad)
xor
icebp
aam
dec
outs
inc
push
and
mov
cmp
fwait
pop
sar
pop
retf
inc
sub
adc
mov
(bad)
pusha
stos
sahf
and
stos
out
call
lahf
mul
xlat
scas
mov
xchg
icebp
inc
xchg
push
jmp
inc
jmp
mov
xor
push
adc
cwde
or
push
xor
sbb
sbb
call
inc
leave
jl
add
mov
mov
pop
outs
sub
in
add
cmp
loop
add
leave
pop
sub
add
inc
in
add
pushf
pop
je
mov
lods
in
mov
mov
leave
lea
pop
mov
adc
jno
shl
scas
cmp
sub
jo
sahf
dec
hlt
sub
xchg
and
test
mov
xchg
push
push
dec
das
mov
push
call
mov
cld
push
int
repnz
ja
loop
cmp
and
jne
dec
rcr
cwde
mov
jle
xor
mov
sub
mov
psrlw
inc
imul
cmps
pop
xor
dec
imul
dec
jle
(bad)
xlat
inc
sub
add
loopne
or
adc
dec
(bad)
xchg
adc
sub
sub
mov
ins
outs
mov
ss
cmp
outs
scas
daa
sar
scas
dec
call
xor
mov
call
leave
xor
dec
xor
(bad)
xor
mov
out
inc
scas
add
pop
mov
sbb
xor
into
inc
jnp
lods
or
repnz
(bad)
push
push
stos
cmp
dec
jns
(bad)
inc
push
mov
std
sub
mov
jg
and
(bad)
xchg
mov
cli
cs
(bad)
inc
aaa
mov
adc
jo
mov
cmp
fsubr
pushf
sbb
lahf
xchg
push
hlt
mov
aam
pop
shr
sbb
sahf
aas
mov
icebp
call
je
(bad)
popw
int3
or
cmp
mov
adc
pop
cmp
repz
push
(bad)
sbb
add
xlat
inc
fs
cmps
jns
sbb
sbb
inc
ins
mov
call
xor
mov
movs
sub
sti
pop
xchg
sbb
adc
jns
push
jno
dec
aam
je
mov
push
adc
push
dec
mov
mov
fisttp
aaa
fcomp
sbb
inc
add
sahf
imul
fiadd
xor
lods
out
loope
sti
mov
repz
sbb
push
mov
out
ret
ret
sbb
lods
imul
inc
push
outs
xor
cmp
cld
xchg
jo
outs
fsubr
fmul
mov
pusha
loope
out
aam
sbb
xor
int
in
repnz
cli
not
pop
inc
pop
inc
pusha
es
lahf
fisub
jb
test
push
pop
fldcw
idiv
mov
lahf
fisttp
repz
sahf
jmp
adc
ret
or
jae
jmp
(bad)
lock
inc
aas
xchg
or
sub
inc
xchg
fisub
xor
xor
imul
xchg
das
add
arpl
push
push
(bad)
dec
cmps
clc
iret
shl
or
imul
pop
inc
(bad)
mov
jbe
cs
mov
sub
ret
ins
bound
cmps
aaa
fstp
scas
iret
test
or
inc
clc
cmc
(bad)
adc
lods
xor
jmp
jae
scas
xor
and
cli
xchg
cli
mov
adc
lock
dec
ret
push
inc
sbb
pop
sub
pop
aas
jnp
test
mov
push
cmp
(bad)
sub
mov
jg
lahf
dec
bound
daa
mov
xor
xor
addr16
inc
and
pop
dec
jno
lods
call
cmp
push
mov
pop
jo
ja
jns
cs
xor
xor
pop
mov
addr16
cdq
or
out
mov
push
ja
mov
and
mov
cdq
cmp
jno
adc
inc
push
adc
lahf
and
or
cmc
or
bnd
inc
ret
jg
cmps
inc
cdq
in
mov
in
cmp
out
aad
jge
inc
ds
in
inc
jmp
xor
das
and
lods
add
cmp
ficomp
aaa
inc
in
pop
enter
ret
(bad)
mov
(bad)
sbb
fdiv
fst
gs
add
(bad)
jle
jmp
jo
out
inc
into
or
test
mov
aaa
adc
into
adc
jle
fs
or
mov
ret
stos
sub
xchg
mov
cs
cmp
mov
cdq
adc
fpatan
jecxz
cmp
mov
jo
sbb
push
fs
push
fs
inc
mov
inc
xor
loopne
xchg
ss
int
mov
in
push
in
add
inc
and
mov
cmp
push
push
je
mov
iret
adc
mov
sahf
mov
stc
mov
jns
lea
or
out
lock
or
cmps
xchg
gs
sar
seta
aaa
pushf
or
(bad)
in
dec
mov
push
mov
mov
mov
push
cmp
cmp
retf
push
inc
adc
pushf
xchg
jb
mov
jp
cmps
dec
aaa
jge
jg
ss
sbb
test
sub
loop
inc
jmp
pop
mov
adc
pop
test
push
mov
inc
fs
cmp
dec
push
or
ins
repz
pop
imul
mov
and
and
sub
xor
cmp
mov
call
push
mov
pop
pop
enter
sub
jbe
xor
cmp
adc
mov
fs
add
and
add
and
(bad)
(bad)
int3
pop
movs
push
cmps
pop
stc
(bad)
cmp
mov
clc
jns
cdq
jae
xchg
nop
cmc
dec
ins
fdiv
rol
dec
inc
adc
rol
rcl
aam
mov
and
test
repnz
jl
pusha
mov
xor
into
inc
dec
js
imul
inc
inc
push
icebp
push
sub
inc
jg
pop
inc
adc
sbb
stos
daa
lock
aas
fld
jae
imul
loope
sbb
sbb
xor
mov
sub
push
sti
adc
xchg
mov
mov
jnp
mov
mov
xor
xchg
and
xchg
mov
lahf
jo
jns
imul
mov
lock
ds
or
and
mov
jnp
mov
stos
test
sbb
(bad)
and
jne
mov
ret
stos
sar
ret
into
jmp
test
mov
int
cli
jo
cli
repnz
cmp
sbb
cmp
fsubr
mov
mov
dec
std
xchg
(bad)
jl
(bad)
in
cmp
push
sub
lds
xor
mov
mov
jae
lods
lock
mov
loopne
xlat
mov
dec
mov
mov
mov
ds
test
inc
xor
mov
popf
scas
mov
sbb
js
sub
jecxz
ret
xchg
xor
jmp
jmp
leave
mov
sbb
and
sti
fild
xlat
xchg
imul
adc
pop
enter
adc
sub
pop
and
jl
stos
push
in
sti
out
add
int
scas
std
mov
xchg
sbb
and
imul
ret
(bad)
cmps
mov
pop
push
cmp
push
das
fdiv
lods
cmp
retf
lahf
jl
mov
aaa
retf
jo
shl
std
jb
mov
loope
xor
adc
repnz
fidiv
repz
add
sub
std
mov
mov
shl
fild
push
in
jge
jno
stos
sub
fbstp
std
add
mov
test
jae
outs
cmps
(bad)
test
pusha
pop
aaa
sub
adc
adc
cmp
call
dec
and
inc
push
push
adc
out
mov
mov
into
mov
(bad)
repz
add
out
ror
or
inc
adc
ja
xchg
imul
movs
das
les
mov
inc
aam
sbb
test
adc
dec
xor
sar
or
add
add
pop
clc
jo
sub
xchg
push
mov
sub
mov
jecxz
jmp
(bad)
cs
retf
loop
hlt
adc
xchg
push
cmp
pusha
push
pop
lock
jmp
scas
push
adc
mov
sub
xchg
and
sbb
cmp
mov
inc
jae
aad
dec
xchg
push
mov
dec
adc
inc
in
mov
cmp
dec
sub
push
sar
mov
lahf
pop
push
out
outs
jl
fs
fcom
aas
iret
ret
xchg
icebp
out
(bad)
mul
xor
lock
add
shr
retf
mov
sub
cmovl
aam
fdiv
xchg
xchg
mov
sar
adc
mov
push
pop
loopne
jne
popf
xor
retf
pop
xchg
cs
push
out
js
mov
test
inc
mov
xor
jge
inc
jbe
aas
aad
(bad)
cld
aas
mov
sbb
push
retf
sub
add
cli
cli
xchg
pop
sbb
inc
or
sub
cdq
enter
out
sub
inc
adc
pop
push
aaa
sbb
mov
in
inc
(bad)
popf
jg
xor
jecxz
daa
sbb
scas
mov
adc
dec
lock
add
stos
adc
popa
ja
mov
sub
jmp
fcomp
mov
pop
jg
mov
and
push
js
pop
xor
add
ja
test
(bad)
sbb
inc
mov
and
pop
add
jb
(bad)
push
imul
jb
push
daa
ret
arpl
pop
icebp
imul
ror
aad
mov
inc
dec
and
ror
cmp
cmps
inc
fiadd
pusha
cmp
leave
dec
push
mov
push
and
inc
loop
xor
(bad)
hlt
or
inc
sub
lds
outs
fsub
jmp
sbb
movs
and
push
sbb
sbb
push
ss
dec
pop
fcom
lock
out
sbb
xor
fs
push
call
fbstp
fcmove
loop
ss
repz
sahf
fwait
mov
arpl
xor
push
scas
leave
add
inc
jne
inc
adc
icebp
xor
jo
push
dec
cmp
or
(bad)
cld
fist
rcl
and
clc
dec
mov
out
hlt
shl
push
inc
popa
xor
cld
xchg
inc
fwait
(bad)
fs
cwde
push
mov
adc
lea
jo
and
sbb
and
call
gs
repz
xor
sub
and
mov
jle
ret
sahf
pop
out
(bad)
ret
xor
jae
pusha
popa
lods
movs
dec
and
int
jge
and
push
cmps
pop
fsub
dec
rol
fild
clc
stos
jno
inc
stos
rcr
sub
loope
inc
out
repnz
(bad)
pop
add
shl
mov
cmp
fistp
sub
hlt
dec
or
cmp
fadd
mov
pop
jb
adc
int3
daa
pushf
mov
mov
inc
sar
sub
xchg
ins
stos
sub
xor
inc
fs
jne
push
imul
mov
imul
mov
out
fbld
xchg
cmc
punpckhwd
les
test
js
cmp
shl
loope
sub
dec
or
mov
cs
jmp
lock
jmp
xchg
sbb
lock
ss
aaa
data16
test
xchg
mov
push
outs
xor
jmp
dec
into
addr16
sbb
int
das
jecxz
mov
jb
cmp
ret
(bad)
ja
add
cmpxchg
data16
or
dec
mov
scas
ja
or
mov
mov
mov
loopne
cmps
pop
call
jns
icebp
shl
jecxz
test
aam
fwait
mov
mov
imul
stos
inc
repnz
push
mov
out
xchg
sahf
push
ja
ret
dec
dec
jle
xchg
add
cmp
xor
push
inc
ds
lods
mov
ins
popa
cmp
sahf
data16
stos
fild
not
imul
dec
clc
(bad)
aaa
mov
sub
jmp
push
mov
test
ins
retf
fmulp
shl
jge
mov
dec
scas
aad
stc
test
shl
cmp
mov
test
cmp
and
jae
lock
pop
movs
push
cmp
(bad)
outs
pop
mov
dec
push
gs
hlt
sbb
shr
jno
add
out
jne
or
cmps
fadd
jnp
pop
or
xor
repnz
aad
in
pop
add
fcomp
addr16
xchg
add
lahf
jp
not
je
jbe
sbb
jnp
sbb
pop
call
and
cmp
mov
(bad)
and
inc
xchg
call
inc
jl
add
xchg
mov
push
and
lods
test
stos
ja
mov
sbb
mov
mov
imul
(bad)
push
lahf
xchg
sbb
and
pop
outs
cmp
pushf
push
push
icebp
push
inc
lds
in
adc
mov
and
inc
lock
outs
push
jmp
test
sub
mov
sbb
dec
mov
lock
lods
push
cmp
jg
push
mov
fs
mov
push
lahf
sbb
pusha
test
and
xlat
sub
jno
daa
sbb
fucompp
pop
jmp
int3
stos
imul
icebp
test
sub
mov
clc
sub
loopne
mov
xchg
lods
jne
pop
repz
sti
xchg
into
inc
xor
adc
push
xchg
mov
retf
test
cmp
leave
pushf
pop
shr
retf
(bad)
enter
push
stos
popa
pop
icebp
pop
bound
and
xor
fs
add
add
adc
cmp
fst
pop
adc
mov
mov
and
std
in
add
ret
adc
cmp
mov
jae
jl
ja
shr
jmp
inc
imul
fwait
mov
cmps
pop
and
xor
cmp
and
sbb
stos
out
cmp
mov
stc
mov
dec
adc
or
mov
lods
lods
stos
repnz
ins
mov
ret
mov
fs
aaa
sahf
call
push
and
xor
pop
int3
jbe
ins
ins
or
xchg
adc
cdq
cmps
ins
or
jecxz
cwde
icebp
je
cmp
pop
sub
or
shr
jbe
js
mov
mov
inc
dec
rcl
call
sub
xchg
xchg
retf
or
add
mov
aaa
pop
lds
xor
xlat
retf
fwait
fs
xchg
mov
xchg
pop
mov
data16
js
jg
sbb
shr
or
mov
jbe
and
mov
or
cld
adc
mov
jp
pop
inc
sub
xchg
inc
pop
idiv
cmp
sub
pop
std
mov
mov
mov
aas
mov
and
daa
out
pusha
gs
lods
pop
xchg
rcr
push
mov
dec
std
aaa
ja
mov
mov
jae
push
lock
inc
and
or
ss
sar
cmp
sahf
mov
lock
in
fld
rol
stc
mov
sbb
mov
pop
aaa
mov
push
nop
add
mov
xor
(bad)
popa
ss
addr16
jge
adc
int3
ja
pusha
(bad)
mov
pushf
sbb
ror
movs
jge
test
lods
cmp
cld
lods
jae
push
sbb
xor
pusha
jb
cmp
sub
mov
(bad)
jns
dec
xchg
outs
ror
cmp
ins
stos
adc
shr
mov
imul
jmp
inc
das
mov
loopne
push
int3
bound
aas
pop
adc
lods
pop
mov
jl
jae
rcl
or
dec
jne
inc
(bad)
je
pop
lea
add
loop
daa
jbe
or
or
xlat
stc
pop
cmps
shr
repnz
sub
addr16
leave
mov
minps
mov
sahf
and
mov
cmp
pushf
sbb
jb
psubsb
pushf
cmp
(bad)
into
and
out
test
jae
mov
adc
(bad)
in
enter
adc
call
lods
push
adc
xchg
out
outs
test
push
out
cli
pop
shr
jb
aad
imul
iret
pop
or
pop
push
push
ss
jnp
js
loop
mov
inc
or
add
inc
or
lods
mov
out
mov
fwait
shl
inc
and
mov
xor
mov
sub
aaa
rcr
pop
pusha
adc
push
mov
push
pop
or
stos
ss
and
ds
mov
sbb
test
fcom
inc
loope
mov
aas
pop
out
xchg
mov
test
mov
neg
call
in
mov
rol
or
movs
(bad)
sahf
cmp
out
js
or
ins
mov
nop
adc
in
into
iret
sbb
ja
mov
jl
lds
sub
fsub
in
dec
and
gs
push
call
pop
std
add
push
mov
sti
cwde
inc
mov
aad
retf
jae
xchg
sar
call
cmp
add
cli
cli
fs
iret
loop
loop
push
(bad)
call
sti
mov
out
fwait
clc
push
pop
cmp
lds
pop
pop
std
add
push
and
and
dec
mov
cmps
and
adc
test
mov
xor
lods
mov
dec
dec
pop
jg
mov
mov
sti
das
cli
cli
push
aas
xchg
inc
sbb
in
xchg
adc
xor
jg
lea
dec
jecxz
adc
inc
sub
iret
es
repz
jne
jnp
add
adc
jns
pop
sti
add
fisttp
sahf
(bad)
rol
cmp
jae
iret
xchg
fnstenv
cdq
pop
outs
push
mov
mov
xchg
sub
test
jbe
idiv
xchg
mov
jl
(bad)
xor
fidiv
sbb
dec
xchg
idiv
rcr
fstp
adc
outs
test
push
ret
lea
(bad)
pop
mov
sbb
xor
loope
jae
jg
leave
mov
cmp
lahf
add
test
xor
jl
jae
scas
and
cmp
lods
jmp
xchg
xor
addr16
inc
dec
pop
test
(bad)
push
pop
dec
pop
les
mov
pop
jno
add
cdq
sbb
call
xor
add
cmp
xor
icebp
shl
pop
jbe
xchg
movs
shr
icebp
mov
cld
or
mov
sub
jge
cmps
jae
ja
aam
call
jecxz
(bad)
lods
mov
stos
clc
sbb
adc
scas
sub
fcmovnu
in
ins
cmps
int3
or
cmp
shl
or
hlt
aas
outs
or
and
arpl
mov
push
add
dec
fs
pop
and
jge
push
loope
xor
in
cmp
mov
push
fwait
mov
add
std
xor
aam
popa
xlat
sahf
int3
inc
jmp
or
movs
cld
adc
xor
sub
xchg
sbb
(bad)
jp
push
rol
add
mov
pop
push
adc
push
adc
add
mov
stos
lea
push
pop
(bad)
(bad)
pop
mov
mov
jno
imul
inc
adc
xchg
xor
dec
dec
sub
sub
lock
bswap
mov
mov
sub
sbb
push
xor
dec
xor
jp
jle
jmp
leave
(bad)
sbb
add
xor
into
ror
repnz
adc
jmp
mov
rcr
imul
sub
mov
mov
jne
gs
adc
dec
test
push
imul
adc
or
pusha
pop
js
arpl
sbb
mov
sub
loopne
lea
jecxz
out
push
mov
push
into
fist
xchg
mov
lock
push
(bad)
enter
mov
push
ja
call
mov
mov
adc
xchg
push
xchg
inc
addr16
inc
push
push
repz
cmc
add
adc
addr16
xchg
repnz
(bad)
sub
inc
pushf
xchg
(bad)
cmps
repnz
in
int
push
jl
lods
es
jb
mov
adc
xor
inc
js
loope
mov
and
xor
xchg
dec
mov
or
popa
push
(bad)
push
mov
ret
pop
pop
pop
fadd
sub
fwait
stos
jle
adc
lods
dec
fsub
xchg
jmp
jbe
cs
ficomp
inc
out
stos
rcr
mov
jge
add
fiadd
jecxz
sahf
outs
mov
mov
push
pop
jp
xchg
cmps
stos
push
or
cdq
test
mov
loop
jno
mov
and
popf
dec
(bad)
fwait
xchg
in
cwde
push
sub
das
pusha
adc
(bad)
adc
add
mov
jne
add
stos
call
add
jne
pop
nop
mov
xor
bound
int
jg
std
add
fs
xor
mov
inc
jg
push
xchg
xor
mov
xchg
inc
aam
arpl
xor
pusha
in
aam
dec
pop
test
fcomp
ja
pop
cwde
cmc
les
fscale
jge
(bad)
rcr
dec
je
mov
cdq
call
shl
into
push
jne
add
fmul
retf
pop
mov
adc
in
dec
jbe
cs
pop
mov
out
sti
fwait
mov
lahf
test
in
dec
xor
and
mov
aas
mov
dec
jmp
cmp
popa
dec
xlat
not
or
push
jg
sahf
ins
nop
fs
mov
stc
data16
pop
push
sbb
neg
fnstenv
daa
repnz
mov
jl
mov
test
mov
cmp
sub
jb
sbb
mov
arpl
das
or
cmp
mov
movs
or
cmp
nop
gs
rcl
mov
adc
cmps
lods
or
push
pusha
push
repnz
inc
push
int3
xchg
mov
imul
sbb
dec
std
movs
sbb
fucomip
pop
pushw
mov
lods
inc
push
xor
xor
or
and
or
ss
jp
push
scas
cli
push
iret
imul
push
push
stc
cmps
jge
jle
mov
lods
not
mov
sbb
push
lock
cmc
xor
popf
mov
test
mov
jo
sub
xchg
cmp
pop
popa
test
cld
pushf
inc
and
adc
xor
dec
push
ret
lods
sbb
lods
xor
out
mov
dec
pop
jmp
xor
adc
mov
pop
jmp
pop
jo
mov
mov
mov
shl
cmp
imul
mov
loop
sub
sbb
dec
mov
and
jg
loop
and
jmp
clc
jmp
mov
pop
js
out
test
push
add
hlt
std
xor
ret
mov
shl
mov
xchg
pop
push
imul
jns
pop
mov
adc
jmp
jge
shr
idiv
push
adc
push
inc
dec
leave
lea
out
sub
add
push
or
stos
and
cmp
inc
xchg
jge
jnp
pop
inc
popf
xor
sub
lea
les
fdivr
mov
pop
movs
retf
push
rcr
int
outs
xor
ret
loop
mov
nop
xchg
add
pop
aas
jg
pop
repz
cmp
and
cmp
jo
imul
(bad)
sub
inc
mov
add
ins
xchg
push
mov
adc
cdq
lds
aas
stos
dec
inc
ins
aas
stc
arpl
cmp
test
or
jl
test
dec
or
and
sbb
out
inc
mov
out
pop
popa
add
pop
jb
out
jae
and
out
mov
mov
adc
shr
sahf
sbb
sbb
aaa
fdiv
mov
test
shl
xchg
dec
inc
push
icebp
mov
addr16
lock
orps
mov
sub
icebp
and
fmul
loopne
lock
dec
sti
xor
ret
xlat
mov
test
xchg
jo
push
dec
inc
jp
pushf
mov
sbb
popf
and
xor
addr16
pop
mov
cmc
ret
push
and
adc
scas
pop
dec
retf
jb
jg
enter
jb
inc
adc
mov
mov
inc
(bad)
push
sub
cmps
gs
xchg
cmp
xchg
pop
xchg
dec
outs
cdq
pop
cli
jne
dec
xchg
mov
mov
jg
jb
inc
cmp
fwait
push
aaa
sub
mov
add
lods
or
jg
imul
xor
xor
mov
sbb
mov
(bad)
pop
adc
or
enter
dec
pop
dec
jle
(bad)
or
lahf
loopne
call
xchg
adc
or
cmp
cmps
(bad)
sbb
ds
xchg
add
jnp
mov
test
and
ins
push
adc
jmp
lea
ds
loop
(bad)
sub
or
xchg
not
fsubr
scas
cmps
sub
dec
fnsetpm(287
sbb
xchg
dec
(bad)
jle
imul
neg
sar
pop
mov
pusha
pop
inc
inc
mov
pop
inc
loope
inc
xchg
imul
lds
sub
movs
lea
pushf
jmp
push
movs
mov
xor
or
ret
(bad)
jge
bound
dec
imul
call
jmp
fimul
into
add
sbb
jmp
arpl
imul
jmp
inc
mov
adc
xchg
mov
or
(bad)
sub
mov
pop
nop
fyl2xp1
into
nop
push
jb
out
pop
sub
cwde
push
enter
iret
aad
pop
fldenv
out
jmp
test
cmp
fst
pop
shl
inc
and
in
test
lods
xchg
add
ret
pusha
jne
daa
mov
clc
push
outs
mov
dec
sbb
arpl
xchg
loope
data16
outs
xor
mov
xor
add
into
leave
scas
xchg
cmps
sbb
and
mov
adc
pushf
daa
xchg
fiadd
lds
xor
rcr
(bad)
int3
mov
push
outs
out
and
sub
iret
inc
add
jb
add
ret
inc
and
add
jge
cmp
adc
dec
in
(bad)
cmps
or
(bad)
lods
mov
and
dec
bound
pop
cwde
add
out
push
cmp
(bad)
jmp
or
push
or
lea
jmp
mov
sub
pop
js
xor
test
jmp
mov
lahf
ins
enter
pop
cmps
(bad)
jecxz
and
sahf
sub
jg
jno
out
push
scas
pop
or
rol
es
fnstsw
nop
dec
mov
or
push
shl
(bad)
jbe
mov
sbb
scas
loope
add
pop
arpl
mov
push
ret
mov
sbb
call
rcl
push
pop
idiv
(bad)
xchg
repnz
adc
cwde
push
sbb
sbb
je
sub
add
add
(bad)
push
lea
arpl
add
sahf
pusha
mov
push
push
dec
push
(bad)
push
shr
shl
add
stos
shl
jg
mov
frstor
es
aaa
mov
sahf
adc
mov
sbb
push
add
ror
xchg
or
ret
daa
in
sbb
les
mov
(bad)
movhps
mov
stos
xchg
xor
jl
xchg
fsubrp
push
fidiv
rol
or
sbb
push
ins
idiv
mov
sahf
out
xchg
bound
sbb
cdq
into
enter
xchg
into
fld
sub
(bad)
inc
pop
sti
mov
push
mov
push
mov
xchg
add
or
mov
cwde
ja
cmp
and
push
sbb
lock
mov
jnp
push
repz
pushf
(bad)
icebp
and
lods
add
push
xchg
xchg
cmp
inc
sub
sbb
add
out
shl
popa
cmp
pop
pop
nop
loop
mov
call
mov
pop
adc
dec
adc
adc
xlat
push
sub
in
xchg
das
gs
outs
add
or
scas
rol
dec
mov
dec
das
clc
movs
sahf
popf
push
loopne
addr16
cdq
(bad)
loopne
mov
test
xor
rcr
dec
jg
sar
fcmovu
(bad)
mov
neg
push
add
adc
cmp
in
stos
test
xchg
and
push
rol
movs
stos
ja
mov
and
shl
push
fbstp
sbb
jl
popa
jmp
and
adc
add
xchg
jmp
in
dec
push
and
dec
lds
rep
loope
xor
cmp
cmp
rcl
cmp
add
fcmove
lods
cmp
ins
jns
mov
arpl
repz
enter
pop
push
push
fistp
movs
sub
add
add
adc
dec
mov
sub
mov
loopne
sub
mov
in
stos
ret
repnz
fisttp
xor
inc
push
xor
push
ds
xor
repz
les
in
addr16
ret
aad
sub
xor
rcl
enter
faddp
mov
lods
ror
inc
ins
pop
hlt
mov
add
inc
ss
jae
jns
scas
test
mov
xchg
into
cdq
lods
retf
mov
rol
iret
arpl
out
outs
or
push
repz
fdivr
cmp
mov
call
repz
push
jbe
push
fadd
mov
and
jne
mov
hlt
cwde
out
and
movs
fcmovnbe
sbb
cs
not
iret
gs
adc
and
scas
fsub
call
inc
test
shl
inc
imul
xor
cmp
xor
(bad)
inc
stos
pushf
mov
jae
mov
sar
dec
neg
mov
hlt
dec
clc
add
cmp
(bad)
sub
sbb
adc
mov
sbb
pop
add
sub
mov
stos
sub
stos
jmp
popf
and
adc
add
hlt
popa
xor
leave
stc
jp
cmp
popa
cmp
repz
pop
push
push
leave
mov
inc
dec
adc
adc
and
mov
xchg
sbb
shr
jecxz
div
ret
(bad)
mov
cmp
xchg
mov
aaa
fwait
arpl
lahf
xchg
xor
cmp
(bad)
rcl
and
test
daa
ret
add
int
xor
scas
(bad)
jmp
pusha
vmaxpd
inc
xchg
xor
pop
or
fisubr
jb
xor
outs
out
sub
retf
xchg
add
test
sub
cmps
jg
mov
stc
addr16
push
or
fidivr
into
pop
adc
jle
mov
xor
or
or
sahf
push
push
es
(bad)
call
mov
cwde
neg
movs
and
das
sahf
sar
dec
mov
out
mov
pop
sbb
xchg
dec
mov
popf
and
lods
lds
sbb
add
push
les
movs
out
stc
and
lahf
or
inc
cwde
cmp
or
xor
mov
mov
mov
std
mov
bound
pop
aam
mov
jp
dec
sbb
sahf
or
gs
(bad)
bound
fidiv
or
pushf
cmp
jecxz
mov
add
xor
(bad)
js
aad
push
inc
sti
jno
mov
and
rcl
and
(bad)
push
dec
sahf
ret
sub
shr
or
(bad)
sub
bound
jb
pushf
mov
dec
retf
lds
pop
xor
outs
mov
shl
mov
mov
pop
jo
ss
xchg
sbb
and
push
jecxz
out
sti
repnz
fnsave
stc
not
out
sub
ds
js
inc
popf
xor
pop
out
lods
cld
ja
and
push
push
sbb
ret
js
lea
repnz
push
sub
jns
in
mov
vmulpd
jmp
mov
jmp
cmp
push
ins
xor
xchg
mov
ret
das
(bad)
jge
pusha
rol
bound
jmp
(bad)
inc
pusha
lea
call
outs
inc
bound
in
in
out
repnz
xlat
lahf
pop
je
add
mov
ins
(bad)
mov
push
pop
pop
js
je
js
jne
aam
lock
push
sub
jbe
cwde
and
mov
xchg
push
add
fs
scas
push
jmp
test
sub
repz
lods
add
fsubp
pop
aad
or
dec
pushf
(bad)
xlat
(bad)
daa
cmp
cwde
ret
dec
mov
sbb
cwde
fsubr
dec
lds
mov
ret
inc
mov
movs
jnp
pusha
pop
inc
dec
inc
pop
cmp
inc
int
cmps
shr
mov
fwait
rcr
or
pop
sub
mov
cdq
retf
jnp
xor
xchg
stc
in
ror
jle
cmp
xor
(bad)
mov
retf
fcmovu
jmp
mov
pop
js
icebp
mov
mov
outs
ins
stc
push
xchg
mov
pop
addr16
adc
shl
add
fiadd
stc
mov
out
cmp
mov
push
xchg
pushf
shl
mov
xor
sub
cmp
dec
pop
imul
jle
xor
push
fldcw
push
mov
sbb
(bad)
mov
jae
call
retf
into
mov
clc
cmps
mov
jb
fucomip
push
loopne
cmps
out
dec
int3
inc
bound
lea
(bad)
in
sub
in
or
fwait
aam
fdiv
pop
inc
je
mov
push
adc
jmp
jmp
mov
mov
mov
jp
sbb
adc
inc
test
je
xchg
adc
sub
mov
lds
jne
lods
xor
and
xor
add
out
dec
mov
aad
call
mov
pop
pop
test
jmp
mov
sbb
inc
aam
jle
sub
cmps
leave
in
mov
mov
(bad)
into
aaa
mov
push
add
mov
xchg
jae
and
stc
rcl
mov
mov
jno
and
imul
je
mov
jmp
mov
mov
jne
mov
xchg
dec
or
mov
xor
adc
or
or
ret
jae
lahf
cdq
jmp
xchg
fs
adc
xchg
sub
mov
js
out
daa
or
lds
in
and
or
jnp
mov
pop
scas
or
mov
dec
lock
data16
ja
inc
(bad)
cmp
xor
dec
xchg
out
movs
and
data16
inc
out
cld
call
pop
mov
mov
mov
xor
add
jle
mov
add
and
xor
int3
mov
push
imul
inc
sub
ins
adc
popa
rol
push
jo
ja
xor
jle
mov
xchg
or
pop
repz
jo
sub
movs
sti
lds
inc
or
cmc
stos
ins
adc
aam
sbb
jne
loope
inc
add
(bad)
sub
scas
lods
adc
or
loope
or
call
mov
add
adc
mov
mov
neg
add
rcl
in
mov
pop
popf
cwde
xchg
arpl
sbb
arpl
add
add
dec
push
popf
ins
movs
in
add
jp
sub
dec
in
mov
fisttp
cdq
mov
pop
mov
(bad)
mov
push
mov
nop
mov
xor
cmps
cld
pop
mov
dec
iret
pop
jle
fld
push
hlt
das
pusha
add
mov
mov
inc
xchg
imul
pop
sbb
bnd
dec
aaa
mov
int
pop
enter
sbb
ret
stos
and
mov
dec
xchg
es
adc
loope
adc
sbb
ja
dec
adc
sbb
retf
dec
sbb
xchg
xor
jge
dec
mov
sub
xor
jecxz
lods
xor
pusha
(bad)
aam
adc
cmc
dec
jbe
mov
popf
lea
iret
and
sar
loopne
xor
push
inc
adc
xchg
jp
int3
xchg
inc
dec
les
fwait
xlat
or
add
jge
rcr
jge
les
sub
dec
lea
das
cli
jno
popf
mov
sbb
dec
lea
sub
inc
ret
fdivr
sub
cld
aas
xchg
pop
jecxz
push
and
cmp
and
jp
xchg
cmp
movs
call
push
xchg
in
out
jge
sub
sbb
int
lock
xchg
mul
push
lock
bnd
stos
jg
pop
mov
test
lock
and
mov
cmp
push
jae
add
ds
cmps
mov
call
dec
cmp
movs
xchg
lods
push
je
or
leave
cwde
mov
dec
mov
mov
outs
or
and
pop
clc
mov
pop
adc
jno
dec
and
and
sbb
aam
shr
add
dec
sub
push
push
or
mov
inc
pop
dec
jle
pop
or
xchg
mov
les
movs
dec
or
es
ss
dec
call
cwde
test
adc
fst
and
movs
retf
jne
xchg
jne
add
test
sti
stos
and
test
enter
clc
mov
pop
dec
and
xchg
inc
pop
jae
cmp
dec
pushf
aam
or
inc
sbb
dec
mov
pop
sbb
aam
add
and
push
cwde
cmp
js
push
jnp
sub
sbb
xchg
push
out
shr
lock
xchg
and
lahf
test
sti
push
push
test
xchg
or
mov
pop
movs
fstp
xor
inc
(bad)
(bad)
cmp
shr
imul
(bad)
into
jno
dec
adc
pusha
aas
and
or
pop
pop
xor
mov
inc
and
or
jmp
inc
test
mov
cld
pop
in
mov
or
lock
cld
lgs
dec
push
push
stos
les
pop
sub
scas
iret
mov
and
push
cmc
push
enter
mov
mov
out
inc
sub
jbe
mov
fnsave
icebp
retf
mov
xor
idiv
jbe
push
push
(bad)
mov
or
dec
mov
test
cdq
sbb
bound
jecxz
cmc
add
fisttp
or
std
sub
out
daa
pop
cmp
dec
in
addr16
into
cmc
clc
addr16
inc
mov
loope
icebp
pop
jmp
nop
mov
mov
pop
lds
loope
test
cmp
(bad)
inc
and
lahf
out
in
fild
in
push
pop
jo
mov
pop
and
add
bound
jb
jle
pop
imul
dec
pop
test
inc
fucomp
cs
out
cmp
fistp
inc
jns
mov
xchg
add
inc
mov
leave
jecxz
sbb
cmp
mov
cmps
aam
movs
fwait
and
mov
idiv
mul
pop
adc
pop
test
scas
mov
sbb
sbb
inc
ss
pop
int
lods
sbb
pop
mov
add
es
sub
lock
inc
add
sub
stos
pop
jmp
iret
movs
inc
sbb
mov
clc
ja
push
push
mov
xchg
inc
jg
and
dec
in
test
(bad)
pop
(bad)
loope
pop
out
std
and
sub
retf
inc
mov
imul
add
lahf
or
(bad)
fwait
jmp
or
imul
mov
push
ja
repnz
(bad)
push
pop
dec
test
jp
daa
push
hlt
dec
pop
cmp
adc
mov
mov
js
test
and
daa
push
loop
add
clc
(bad)
retf
shl
jle
xor
xchg
dec
cmc
add
mov
neg
inc
cmps
shl
jg
mov
outs
mov
xchg
mov
cmp
mov
test
imul
ds
pop
mov
mul
into
(bad)
mov
sub
inc
fs
sti
fmul
int
rcr
in
aaa
aas
loope
cmc
mov
aas
dec
aas
jb
inc
cmp
shl
push
jge
ret
push
dec
fwait
inc
sar
(bad)
jbe
inc
mov
aad
xchg
aam
sbb
push
call
adc
ror
lods
mov
popa
lea
xor
sub
mov
sub
or
mov
out
sahf
push
sbb
ins
movs
in
aaa
adc
sub
arpl
lahf
outs
add
jnp
push
ins
mov
jmp
push
sahf
ss
jo
xchg
sti
push
fidiv
sbb
mov
bound
sub
jno
scas
(bad)
push
cmp
std
xor
mov
mov
pop
div
call
cs
enter
call
mov
jbe
in
into
jl
pop
xor
(bad)
mov
out
push
mov
sub
ds
cmp
test
dec
in
cmp
jp
lock
movs
sbb
lods
clc
pusha
xor
sub
lahf
pop
lds
sbb
in
rcl
add
mov
cmc
mov
push
jno
(bad)
xchg
adc
jns
stos
push
pop
or
mov
mov
mov
sbb
lods
fldcw
and
test
xor
or
and
cmp
mov
dec
and
and
sti
mov
mov
cmp
xchg
sti
lods
aas
mov
pop
sub
ins
pop
adc
sub
or
data16
inc
(bad)
cmc
or
test
jmp
push
ins
lock
add
sub
adc
nop
mov
sub
inc
add
rcr
ins
pop
ins
std
mov
repnz
fimul
pop
sub
jl
or
xor
bound
inc
pop
sbb
ins
push
sbb
fisttp
out
or
xchg
(bad)
pop
xchg
xor
sub
inc
dec
mov
sub
dec
push
ret
ins
xor
movs
(bad)
push
and
icebp
jle
repnz
ret
adc
mov
enter
ret
push
aaa
clc
xchg
or
mov
pop
sbb
adc
test
ds
adc
mov
sbb
js
and
test
nop
and
add
out
mov
mov
pop
jle
ja
dec
mov
sub
into
out
mov
mov
aad
setg
xchg
adc
mov
cdq
xchg
jbe
fisttp
jl
js
pop
pop
jne
dec
mul
mov
dec
(bad)
mov
ror
test
sti
ret
iret
icebp
cmp
dec
pop
aas
push
popa
xchg
shl
dec
data16
std
hlt
jle
cld
test
lods
int3
sub
lahf
neg
jnp
adc
mov
repnz
jns
or
and
mov
out
dec
push
xchg
mov
fisub
out
js
sbb
test
int
(bad)
std
fsub
add
pop
cmp
sub
lock
leave
test
pop
(bad)
test
xchg
stos
cmp
or
cli
adc
and
cdq
popf
pushf
or
mov
inc
xor
ds
mov
js
fcomp
repz
fdivr
jl
push
adc
adc
xchg
mov
outs
lock
jne
pop
mov
(bad)
mov
ja
test
aas
enter
push
push
pop
adc
push
pusha
test
sub
lock
push
jp
push
dec
jecxz
pop
ds
popa
test
add
lods
cmp
and
(bad)
ins
cmp
jg
fbld
mov
fcomi
and
add
and
xchg
xchg
mov
sub
(bad)
mov
mov
je
push
in
xor
and
mov
push
or
xchg
mov
clc
outs
mov
push
mov
pop
inc
aas
sbb
movs
push
cmp
add
std
pop
cmp
sbb
lea
fstp
ins
movs
std
int
dec
ret
dec
mov
inc
pop
push
in
xchg
loopne
jnp
mov
and
test
pop
jg
test
int
lods
push
mov
stc
test
inc
jp
sub
adc
scas
outs
xchg
pushf
shl
dec
inc
pop
mov
mov
test
adc
fucom
jmp
pop
iret
sub
sbb
cmp
xchg
push
mov
loope
mov
inc
mov
stc
add
loop
nop
dec
mov
pop
shl
fwait
mov
add
adc
pop
sysexit
and
or
lahf
stos
xchg
bound
xchg
cmc
adc
ror
mov
inc
hlt
retf
mov
int
cmp
xor
pop
xor
jle
pusha
mov
ret
enter
sub
pusha
or
xchg
(bad)
inc
mov
lods
aas
mov
push
pop
outs
dec
inc
test
popa
loop
add
jb
jp
retf
xor
push
add
mov
sbb
test
push
scas
iret
push
daa
(bad)
out
mov
pop
mov
or
cmp
test
ds
adc
shl
xor
ja
sbb
jae
repnz
test
rol
fisub
inc
jae
dec
in
mov
mov
push
cli
movs
pop
in
aad
sahf
jle
mov
dec
sbb
mov
pop
push
mov
sti
out
out
dec
xchg
pop
adc
cld
in
aas
test
repz
push
mov
inc
pop
cmp
or
ja
es
test
add
jmp
outs
stc
mov
pop
fs
jp
mov
lock
pop
lods
jb
sti
xor
pop
sub
adc
and
daa
or
add
shl
add
mov
dec
shl
rol
pushf
push
pop
pop
jmp
mov
mov
test
mov
lock
loop
xchg
push
ret
cld
data16
hlt
loope
movs
cmp
ret
mov
push
dec
mov
not
in
sub
aaa
inc
dec
loopne
fisttp
cmp
cmp
movs
outs
ins
and
inc
retf
add
stos
or
cmp
dec
loop
test
popf
je
add
rol
push
xchg
stc
aad
rcl
push
(bad)
in
std
sbb
lahf
scas
mov
imul
pushf
lock
jne
ret
stc
pop
inc
fwait
mov
in
and
lock
jmp
jge
sbb
outs
popa
mov
dec
sti
fdivp
inc
cld
mov
hlt
or
cld
sub
push
addr16
call
stos
mov
loop
sbb
lods
(bad)
outs
shl
add
int3
pop
add
mov
adc
dec
and
fild
ret
mov
and
mov
addr16
mov
inc
cmp
cmp
xchg
mov
nop
ffreep
push
mov
xchg
mov
rcr
jge
retf
cld
xchg
les
outs
lds
sub
cmp
mov
dec
aaa
xor
mov
pushf
cmp
test
cmp
mov
std
fdiv
scas
ret
inc
sbb
mov
jl
adc
mov
stc
mov
xor
cmc
mov
jg
cmps
addr16
fucomp
cmp
pusha
sar
mov
fldcw
pusha
cs
cmps
xchg
test
inc
push
adc
add
(bad)
pop
xor
add
(bad)
cmp
cs
pop
cmp
aaa
imul
popf
out
pop
(bad)
dec
pusha
mov
mov
dec
sbb
test
jge
sub
pop
pop
jg
icebp
gs
(bad)
test
xchg
cli
pop
xchg
jno
movs
es
pop
int
mov
adc
rol
mov
jmp
push
test
dec
sub
mov
jb
(bad)
(bad)
test
sub
lea
cmp
shl
ins
cmp
movs
adc
test
dec
sbb
aaa
test
sahf
aas
fcomp
scas
push
retf
jno
scas
pop
sub
add
cmp
adc
(bad)
shr
int3
add
lds
jmp
add
and
repnz
ds
xor
inc
or
sbb
test
xchg
hlt
lods
jg
adc
or
add
fnstsw
jg
sbb
mov
sbb
or
(bad)
sub
sbb
adc
or
adc
sbb
sbb
pusha
repnz
mov
rol
dec
ds
lock
imul
xchg
and
jmp
imul
lods
push
and
xor
dec
sub
enter
xor
movs
ins
ss
adc
iret
add
xchg
sbb
jne
fcmovne
push
shr
loopne
dec
(bad)
popf
outs
mov
mov
xor
pop
das
jmp
pop
stc
call
fld
or
cmp
icebp
pop
pop
adc
xchg
(bad)
js
ja
or
and
cmps
pop
(bad)
outs
mov
movs
mov
inc
(bad)
jne
aad
cmp
xchg
inc
pop
mov
popa
pop
mov
jp
data16
push
aad
call
ja
ret
cmp
and
lea
out
cmp
cmp
into
enter
push
retf
xchg
lock
pop
jg
xor
xchg
push
dec
aas
hlt
cmp
jecxz
mov
fidiv
pop
xor
fsubp
sub
rol
sub
cmp
xchg
adc
mov
shl
repnz
and
push
jmp
jnp
pushf
push
mov
dec
push
dec
hlt
sub
mov
inc
xlat
push
push
cld
xor
lds
lahf
xor
xchg
movs
mov
fxam
scas
sbb
sub
mov
push
dec
inc
dec
arpl
(bad)
popf
and
mov
push
mov
shl
outs
or
add
jnp
and
popa
scas
jmp
xchg
rcl
inc
and
ret
add
call
lock
imul
mov
add
ins
clc
cmc
or
mov
push
loop
outs
jne
xor
jmp
cmp
sahf
lods
push
clc
add
std
or
xor
and
jnp
mov
or
lea
ror
inc
xchg
(bad)
in
cmp
jge
(bad)
cmp
jmp
test
out
jmp
mov
outs
stos
ins
loope
sub
add
fcom
pushf
push
sub
and
sub
sub
ret
jnp
xchg
adc
mov
pusha
ret
ds
aas
sti
mov
jno
jne
sub
(bad)
ss
cmps
push
jo
push
(bad)
pop
lods
mov
loope
adc
(bad)
nop
ds
je
or
sub
pop
and
dec
mov
mov
js
sub
inc
test
cmc
mov
jnp
inc
int
mov
div
idiv
cmps
jno
pushf
mov
add
jl
and
(bad)
pop
jno
sar
clc
adc
inc
stos
jb
inc
inc
xchg
(bad)
call
or
ret
xchg
ins
dec
rcr
pop
nop
out
hlt
test
fadd
cmc
pop
ins
add
dec
mov
add
sub
aaa
push
in
mov
cwde
mov
sbb
fstp
out
and
push
fdiv
push
push
arpl
minps
adc
(bad)
dec
sub
mov
dec
jecxz
mov
dec
inc
mov
xlat
cld
popf
dec
mov
adc
fld
loop
push
cmp
mov
jge
sti
scas
xchg
mov
and
push
jne
pop
rol
icebp
adc
ins
int
push
jb
rcr
fwait
xlat
xor
popa
mov
jmp
dec
xchg
lahf
mov
ss
cdq
mov
mov
(bad)
cmp
in
shl
mov
(bad)
and
cmc
sub
stc
std
pop
mov
inc
adc
daa
aad
cld
jne
inc
jno
mov
jae
or
push
sub
cli
adc
lds
inc
data16
cli
retf
enter
fstp
pop
sbb
jp
faddp
pop
mov
lods
addr16
push
es
cmp
das
sbb
pop
and
add
or
sbb
add
sub
add
cmp
mov
or
(bad)
sub
(bad)
ret
inc
mov
cli
aam
or
cmc
cmp
leave
in
cmovnp
leave
adc
pusha
jb
icebp
pop
xchg
dec
ret
test
fnstsw
ja
out
jecxz
mov
mov
repz
add
ins
inc
add
inc
outs
add
iret
adc
cmp
or
xor
pop
aad
or
jge
lods
(bad)
pop
jb
pop
sahf
add
pop
in
add
je
int3
mov
mov
sar
xchg
mov
repnz
xor
rol
mov
iret
icebp
mov
sbb
xchg
mov
cmps
call
outs
test
loop
mov
imul
call
xchg
and
cwde
ror
mov
dec
lea
dec
adc
gs
adc
add
push
fcom
or
and
dec
inc
inc
dec
ins
push
inc
loope
sbb
jb
inc
(bad)
in
inc
xchg
push
jo
std
fld
aad
push
ficom
arpl
xor
cmp
mov
call
pop
out
push
retf
in
shl
and
add
mov
mov
cs
addr16
ins
sub
out
js
fisttp
or
movs
dec
into
mov
popa
xlat
mov
retf
scas
mov
in
fisttp
fwait
sub
pop
xor
and
jmp
push
in
test
(bad)
sbb
in
mov
outs
xchg
xchg
sbb
ret
std
jge
sub
arpl
mov
sub
and
mov
jns
f2xm1
xor
hlt
push
stc
pop
(bad)
mov
popf
jo
jecxz
jmp
inc
pop
pusha
ror
sub
gs
inc
inc
sbb
jmp
cmc
dec
pop
sub
cmp
jo
dec
imul
cmp
les
push
clc
mov
fucomi
and
iret
test
sahf
mov
sbb
cli
mov
fwait
jge
lods
iret
and
jae
repnz
push
sbb
not
int3
icebp
lock
scas
add
push
fsub
pop
jmp
rcl
test
fst
leave
xor
inc
push
sub
into
mov
idiv
cwde
popa
fmulp
cmp
inc
cmovb
les
and
out
fldcw
xor
cld
mov
add
int
(bad)
sar
adc
dec
cmp
pop
mov
dec
call
vcmpss
pop
adc
mov
add
jmp
mov
pushf
mov
add
push
outs
xchg
cmc
xchg
inc
outs
aas
pusha
aaa
mov
sub
sbb
jge
mov
push
movs
inc
daa
or
sbb
add
jge
inc
dec
adc
retf
rcl
or
add
in
cdq
mov
into
ficom
and
scas
sub
xor
jb
mov
xchg
iret
jne
and
pop
push
shl
cld
inc
pop
movs
outs
cmps
sub
add
out
push
lock
mov
add
out
daa
add
or
dec
push
cmps
cmp
mov
shl
cli
push
popa
cmp
in
fisubr
push
jne
push
clc
test
jg
sub
and
stos
and
out
ret
test
xchg
fwait
mov
push
jbe
iret
inc
(bad)
jns
jo
fld
jle
xor
cmp
push
arpl
jbe
dec
add
aad
fadd
dec
in
stos
fst
pcmpeqd
jo
cmp
nop
imul
lods
int3
mov
inc
add
sub
retf
xchg
cs
jmp
lahf
sub
inc
icebp
ins
sub
mov
data16
push
push
mov
imul
and
mov
push
std
sub
cmp
jo
(bad)
mov
pop
clc
cmp
js
rcr
hlt
aas
ds
jl
add
and
popf
and
js
or
inc
adc
int
movs
stos
sbb
retf
add
mov
out
mov
mov
fistp
pop
into
inc
mov
jno
rcr
aaa
dec
cmp
test
(bad)
(bad)
stc
ds
push
in
mov
mov
shl
jb
lds
jle
jge
test
cmc
test
xor
nop
and
in
loop
daa
js
add
push
iret
js
dec
enterw
stos
cmp
jmp
jmp
rcl
dec
pop
out
shl
jne
(bad)
xor
ss
mov
xor
mov
mov
mov
jb
dec
inc
mov
int
xchg
fimul
cmp
push
fimul
add
ins
cmp
or
loopne
sbb
xlat
(bad)
(bad)
add
retf
test
ds
aaa
jp
jg
xor
aaa
add
push
cmc
mov
arpl
cmp
push
bound
mov
sti
retf
fsubr
loop
nop
sub
xchg
dec
mov
cmp
pop
add
mov
(bad)
jge
pop
add
mov
add
push
and
add
popa
ret
and
ret
sti
xchg
dec
mov
jmp
mov
scas
push
std
xor
xor
mov
inc
jbe
xlat
mov
faddp
push
mov
xor
call
adc
push
std
cmps
jmp
inc
scas
mov
xor
sub
inc
or
aad
cmps
mov
mov
cwde
cmc
stos
cmp
std
mov
jle
mov
ja
mov
stos
into
stos
fsubr
(bad)
dec
inc
imul
push
fadd
ds
push
push
dec
sti
mov
push
enter
pusha
jo
push
jnp
xlat
and
lahf
mov
adc
mov
xor
lods
mov
sub
sub
sbb
xchg
jg
xchg
push
cwde
push
jmp
jno
sub
lock
sub
arpl
or
or
cwde
mov
push
lds
mov
retf
sub
gs
pop
loop
push
loope
cmp
mov
popa
adc
loopne
test
xchg
aas
inc
aaa
sub
ins
jp
xchg
popf
or
(bad)
cmp
pushf
xchg
mov
and
xor
cmp
jmp
or
push
in
scas
cmp
inc
mov
add
iret
mov
mov
add
ret
jge
stos
loop
add
pop
fimul
addr16
lods
pop
mov
and
sub
outs
push
or
pop
sub
pop
test
call
adc
jle
fld
repnz
mov
inc
dec
pop
in
sbb
addr16
xchg
(bad)
pop
je
dec
(bad)
adc
cmp
lock
jmp
add
leave
dec
repz
push
inc
jg
fmul
sbb
ret
sub
mov
dec
test
sbb
cmps
jo
xor
and
test
(bad)
enter
inc
push
outs
or
outs
mov
mov
cmp
cld
pop
lds
das
push
sbb
dec
in
mov
stos
scas
(bad)
cmps
push
xchg
and
adc
sar
mov
jo
pop
int3
jbe
clc
pop
jo
test
adc
lea
pop
jmp
cld
xor
int3
lock
repnz
icebp
jmp
add
in
mov
adc
jecxz
xor
repz
push
xor
imul
cmp
out
scas
xchg
test
call
mov
adc
adc
fcom
adc
and
adc
adc
mov
mov
jl
arpl
xor
mov
aam
iret
jmp
inc
rol
xchg
cmps
push
nop
int3
sbb
pop
dec
rcr
(bad)
sahf
mov
and
pop
lea
cmps
cmp
shr
mov
and
xor
mov
cmps
jo
push
and
inc
aad
cwde
pop
daa
repz
ss
add
mov
out
ds
push
rcr
repnz
sar
idiv
out
out
xchg
out
(bad)
sub
cmp
mov
mov
loop
jne
repnz
test
and
push
xlat
and
jnp
arpl
inc
dec
xor
idiv
push
push
pusha
push
dec
cli
test
popa
test
ret
fsubr
pop
ds
cmc
or
xchg
int3
push
inc
push
jp
jg
sub
stos
(bad)
xor
push
add
xchg
aas
sub
xchg
mov
mov
call
ins
mov
mov
mov
and
jne
and
push
neg
ja
mov
cmp
lea
xor
call
inc
mov
sub
fldcw
and
mov
ds
mov
cwde
mul
(bad)
xchg
and
fst
call
or
inc
mov
push
out
cmp
test
or
jae
pop
push
add
(bad)
jae
lds
pop
adc
push
pusha
arpl
mov
jge
mov
cmp
(bad)
dec
cmp
ror
jmp
push
fcomip
fist
dec
bound
cli
sti
pusha
lahf
jmp
push
jmp
dec
add
jnp
mov
add
mov
xchg
ror
jnp
call
mov
ficomp
pop
aaa
and
jmp
adc
cmpxchg
inc
xchg
js
loope
loop
cmp
shr
push
cld
loope
pushf
dec
xchg
pushf
mov
dec
pop
popf
push
out
fist
sti
cmp
into
push
cs
and
cmp
jns
sub
ret
sbb
jmp
cmps
dec
push
retf
and
shl
out
scas
or
movs
cmp
xchg
(bad)
jmp
pop
cmp
jle
xchg
jnp
stc
and
js
sub
inc
cwde
and
pop
push
cmp
xor
mov
sti
push
mov
inc
xor
pop
mov
data16
mov
lahf
mov
stc
push
ins
pop
inc
cmp
mov
aad
mov
retf
leave
sahf
mov
enter
clc
push
ins
popf
gs
lea
stos
mov
adc
inc
dec
iret
scas
retf
sbb
or
mov
inc
cmp
repz
pop
sbb
call
imul
and
pop
or
icebp
sti
pop
pop
push
in
imul
ins
(bad)
aas
je
xor
aas
fild
pop
jecxz
xor
jnp
(bad)
imul
pop
fsub
jmp
push
pop
jns
mov
jo
adc
aas
cmc
sub
in
add
mov
sub
mov
or
and
aam
repz
and
movs
sbb
mov
dec
pop
jmp
movs
dec
xchg
mov
mov
and
adc
mov
xor
adc
retf
inc
stos
imul
jmp
outs
mov
aas
fcom
int
sub
cmp
sahf
dec
xor
nop
lahf
das
mov
call
shl
mov
jp
jbe
mov
sub
push
outs
cmp
pop
jl
cmp
and
xchg
outs
(bad)
ficom
lock
cmps
jmp
clc
ficom
cmp
test
mov
or
xchg
dec
sbb
sar
add
(bad)
out
mov
sub
call
cmps
add
in
push
adc
out
lock
repz
add
shl
clc
cld
mov
out
mov
(bad)
dec
jg
jle
adc
lods
cmp
in
out
jbe
sub
lods
aas
push
fidiv
and
or
xchg
les
dec
adc
lods
push
cld
leave
inc
cmps
pop
ret
mov
aas
add
pushf
bound
xchg
sbb
pop
inc
push
mov
or
test
into
ret
and
jl
jmp
push
cmps
aam
rdpmc
retf
lds
iret
adc
repnz
retf
inc
sub
(bad)
sbb
sahf
and
add
ds
fmul
pop
shr
sbb
(bad)
mov
dec
nop
sbb
sar
test
aas
mov
push
mov
mov
(bad)
daa
dec
ins
mov
test
jl
or
mov
neg
push
pop
int3
mov
inc
rcl
cli
in
(bad)
ja
test
cmp
inc
jno
test
(bad)
ds
js
or
nop
scas
and
out
lods
out
addr16
(bad)
ffree
push
mov
mov
aam
jmp
repnz
in
and
cmps
ins
movs
xor
mov
lea
movs
jne
jmp
ins
jp
xor
push
cmp
fisubr
or
cmp
ja
push
xchg
aaa
repnz
xlat
push
js
xor
neg
sub
mov
sbb
and
xor
nop
in
xchg
mov
dec
stos
mov
jnp
aas
add
aaa
xchg
mov
xchg
sbb
push
fs
out
and
add
jle
lods
aam
div
ret
call
lds
call
mov
jmp
or
and
lds
xchg
imul
ins
test
jae
mov
aad
jecxz
mov
inc
add
movs
jmp
add
int3
mov
dec
std
gs
xchg
xor
xor
aam
inc
and
int
popf
push
push
sahf
add
cmp
cmp
cmp
or
fidiv
or
and
arpl
and
dec
pushf
xchg
out
xchg
sti
mov
pop
mov
cmp
push
fcom
(bad)
(bad)
push
arpl
pop
mov
bound
and
cmps
and
cmp
jno
push
cmp
mov
into
jo
movs
dec
mov
or
or
fucomp
mov
loope
rcl
add
push
sbb
xor
mov
ins
int
std
jno
pop
adc
(bad)
div
sar
mov
pop
xchg
movs
dec
pop
push
adc
jge
mul
not
jle
dec
out
dec
inc
xor
clc
test
jl
xchg
lock
jmp
inc
ss
mov
jl
or
add
fild
adc
test
shl
pop
dec
xchg
mov
aam
mov
adc
xchg
push
cld
push
ins
add
jns
mov
int
sub
mov
aam
aaa
and
mov
out
inc
(bad)
inc
(bad)
or
sub
lods
sahf
aaa
pop
pop
es
sti
cmp
dec
ficomp
xchg
sub
ja
and
test
arpl
xchg
sbb
lahf
cld
push
push
outs
rcr
jne
loopne
jo
out
cli
add
sub
mov
in
aam
sar
inc
cmps
cmp
pop
mov
adc
nop
lock
xor
(bad)
in
push
(bad)
(bad)
push
jle
inc
imul
sahf
mov
sbb
movs
jge
sbb
push
xor
mov
xchg
pop
aas
xchg
rol
xor
popf
adc
(bad)
xchg
adc
icebp
test
cld
xchg
aas
rcr
jle
pop
inc
pop
lds
loopne
lods
cwde
inc
(bad)
xchg
push
enter
sub
push
dec
ret
xchg
xor
xlat
enter
or
loopne
sub
sub
loopne
mov
mov
aam
fs
xor
adc
mov
mov
test
mov
adc
retf
xor
(bad)
jl
cmp
leave
add
sub
xor
fcomi
push
pop
xchg
add
(bad)
inc
mov
ret
inc
push
stos
outs
inc
adc
adc
mov
ins
and
aam
dec
or
jmp
pop
leave
ja
into
jle
or
mov
xor
sub
add
mov
bts
xor
add
jo
retf
std
xchg
leave
push
sti
loope
fmul
call
jbe
jl
jmp
inc
xor
push
sbb
mov
pop
add
add
outs
cmp
add
ret
aas
mov
ins
dec
dec
or
mov
imul
clc
push
inc
xor
cwde
jb
sahf
lock
adc
inc
pushf
dec
fidivr
mov
mov
push
repz
jo
fidivr
sbb
jg
daa
inc
test
mov
mov
mov
enter
(bad)
pop
sbb
bound
adc
xor
out
mov
(bad)
fdiv
inc
adc
cmp
or
push
xor
ss
mov
add
sub
test
fdivr
ja
pop
sbb
and
sub
lahf
in
js
inc
mov
lahf
cmp
mov
int3
xor
push
test
mov
mov
aam
push
push
jmp
leave
jmp
pop
les
pop
mov
xchg
imul
dec
jnp
xchg
das
xchg
imul
and
test
sbb
popf
mov
lea
fisubr
jl
hlt
push
popa
or
aas
cmps
and
and
push
(bad)
pop
sbb
cmp
push
(bad)
mov
mov
loop
sbb
iret
xor
in
push
loope
pop
out
or
dec
cld
xchg
ins
test
in
push
mov
movs
sahf
and
es
adc
xor
and
pop
lods
push
xchg
jp
dec
or
aaa
nop
call
pop
rol
aad
sti
jmp
xlat
jl
mov
rcr
es
fs
ret
sbb
xchg
fdivr
mov
mov
push
and
add
cmp
repz
repnz
sbb
movs
shl
dec
test
mov
test
mov
in
(bad)
cli
outs
jecxz
mov
lds
retf
or
adc
sub
mov
push
aad
mov
rcr
xor
je
dec
inc
pop
sub
cdq
add
pop
data16
aaa
cs
pusha
add
push
mov
push
stos
repz
dec
inc
lds
and
cmps
dec
pusha
jge
loop
xor
bound
into
xor
nop
adc
(bad)
xchg
or
jne
fcom
imul
movs
sbb
shr
lock
fist
mov
jg
mov
mov
adc
mov
jp
adc
ja
pop
cli
xchg
dec
stc
sub
sub
(bad)
ins
mov
fimul
sub
and
ds
aas
xchg
aad
ss
scas
jno
pop
and
add
(bad)
ss
pop
fldenv
gs
adc
push
inc
movs
imul
mov
mov
not
out
inc
cmp
push
cmc
retf
cmp
rol
sbb
ins
dec
imul
test
inc
mov
arpl
jbe
cmp
js
sbb
adc
lea
or
dec
inc
jmp
cmp
shr
pop
mov
aas
mov
cs
call
(bad)
les
push
adc
imul
sub
call
pop
in
imul
fucom
movs
inc
inc
jns
jecxz
or
and
xor
std
dec
js
adc
dec
push
aas
ins
mov
adc
cmps
jne
adc
pop
nop
clc
sar
call
ror
sbb
push
test
mov
push
mov
stc
xchg
pop
sbb
jge
sbb
xchg
jecxz
mov
clc
out
jle
out
jae
aas
mov
into
cmps
xchg
mov
dec
fld
cmps
pop
call
add
or
jmp
lahf
lock
xlat
adc
or
js
das
mov
jmp
inc
sub
or
inc
out
mov
xchg
stos
popa
xor
jns
cmc
loopne
jne
dec
fisttp
(bad)
cmp
sub
cmp
cmps
cmp
arpl
shr
sahf
mov
xchg
rcl
loopne
(bad)
mov
fnsave
push
nop
and
jns
lods
mov
mov
dec
mov
cmp
and
jbe
fisttp
pusha
into
and
movs
inc
mov
loop
xchg
inc
pop
add
repnz
sbb
xchg
dec
push
adc
mov
sar
or
retf
int3
rol
fild
cmp
lods
rcr
stos
xor
test
aad
fs
mov
push
lahf
(bad)
not
loope
cmp
cdq
push
sar
push
inc
push
add
stos
enter
lock
in
js
cli
loopne
dec
test
adc
and
pop
loop
mov
or
js
pop
or
xor
lods
sbb
xor
out
cwde
mov
jbe
adc
test
cld
sbb
push
test
cmps
sbb
icebp
(bad)
jecxz
push
arpl
push
dec
and
(bad)
xor
hlt
jnp
add
mov
rcr
cmc
sub
and
fnstsw
movs
xchg
sbb
pop
push
mov
pop
scas
jmp
stos
xor
and
mov
fild
sar
nop
mov
adc
mov
test
push
jae
adc
ror
fcomp
addr16
dec
add
call
arpl
sar
outs
xchg
jno
sbb
mov
push
xor
xchg
sub
jne
cmp
div
mov
arpl
inc
nop
sub
sbb
ffreep
cmp
sbb
ret
jecxz
and
mov
xchg
fcomi
and
loope
mov
sar
nop
cs
pop
iret
fistp
mov
or
int
ds
ror
out
sti
mov
and
popf
leave
lock
adc
sbb
cmp
mov
ret
push
cwde
enter
sub
arpl
ins
ja
jmp
ficom
and
arpl
cmps
call
sbb
popa
aas
cmp
cdq
pop
cmp
gs
js
movs
mov
mov
scas
dec
mov
mov
jge
adc
cmp
xchg
pop
gs
sub
cmp
mov
pop
ss
dec
push
add
in
movs
mov
jbe
xchg
and
stos
sti
xor
jmp
and
sbb
xchg
int
cmp
aam
xchg
or
mov
xchg
jmp
or
leave
cld
jl
popf
iret
mov
adc
sbb
push
repz
rcl
push
pusha
jo
neg
es
dec
jle
dec
xchg
stc
xor
int3
xor
popa
or
sahf
in
(bad)
push
icebp
add
push
push
lock
jns
inc
in
rol
test
movs
syscall
mov
outs
ret
icebp
mov
loope
mov
inc
push
add
lds
xchg
cdq
mov
imul
lock
and
xlat
sar
cld
mov
test
push
retf
adc
(bad)
btc
jmp
test
test
je
and
fcom
adc
push
sub
rcr
(bad)
and
in
out
mov
dec
daa
(bad)
int3
cmp
ss
and
push
xchg
repz
push
add
clc
xchg
loopne
inc
jb
push
adc
ret
pop
or
cmp
aaa
out
sub
push
cmp
cmp
cmps
(bad)
out
mov
outs
les
jl
push
pop
or
lock
mov
and
movs
xor
add
push
mov
xchg
rcr
cli
and
fstp
out
(bad)
and
inc
in
add
cmp
push
repz
fdiv
pop
icebp
mov
sub
or
popa
pop
or
cmp
lods
adc
loop
dec
jge
call
mov
mov
cmp
lods
sub
inc
loop
and
push
sub
xchg
and
and
mov
or
mov
xchg
imul
mov
icebp
sbb
sbb
pop
nop
xor
outs
add
mov
jnp
jmp
add
sub
cli
adc
fld
inc
jo
xor
ret
sbb
sbb
xchg
retf
push
les
or
mov
or
les
mov
das
fstp
or
sti
movs
into
test
jecxz
cmps
mov
pop
pop
nop
inc
cmp
push
imul
xchg
add
sar
mov
into
push
sub
pop
cmps
mov
outs
sub
stos
cmp
mul
retf
pop
xor
sub
jne
fist
sbb
pop
aad
jmp
pop
movs
stc
in
add
repnz
push
xor
icebp
mov
sub
sbb
retf
in
(bad)
push
pop
aaa
jl
mov
and
repnz
fstp
(bad)
mov
xchg
sub
mov
popf
push
jae
push
pop
add
push
sub
in
wbinvd
cdq
dec
mov
push
mov
mov
sti
cmp
shl
push
xor
aas
cmps
pop
xor
and
int3
dec
jl
ds
(bad)
or
adc
adc
es
ja
pop
movs
mov
add
push
mov
jmp
jb
pusha
call
fs
test
loope
lahf
xchg
out
es
out
sbb
call
inc
cwde
or
bound
fidivr
sbb
ficomp
das
mov
push
add
popa
and
xchg
dec
mov
cmp
mov
rcl
scas
or
mov
into
stos
and
sbb
fsub
push
push
mov
push
imul
add
retf
(bad)
mov
lods
icebp
sub
movs
jp
inc
loope
cmc
pop
test
int
into
pop
jns
loope
fld
aad
(bad)
and
jg
shl
cmp
aas
dec
cmp
xor
mov
adc
mov
sbb
dec
and
lahf
pusha
scas
mov
int3
pop
or
jo
lea
xchg
push
cmps
and
sub
call
aaa
shl
cmp
imul
xchg
dec
xor
xchg
cmp
and
jmp
sub
push
sahf
aam
cmp
pop
xchg
and
addr16
aam
out
dec
mov
jb
loop
jb
cmps
push
xchg
push
fisub
cmp
add
dec
and
jl
dec
js
and
inc
jecxz
or
mov
inc
(bad)
sub
push
add
add
adc
or
nop
arpl
icebp
cmp
push
(bad)
sbb
adc
hlt
sub
xchg
ror
adc
pop
stos
movs
stos
nop
xlat
sbb
xor
jnp
test
in
add
mov
stc
or
and
lds
xchg
push
rcr
sar
inc
jns
and
bound
pop
sub
addr16
(bad)
dec
cwde
lahf
sub
push
inc
xchg
lds
scas
gs
outs
fmul
and
pop
cmps
mov
aam
inc
shr
clc
xor
shl
data16
mov
repz
mov
leave
enter
inc
jmp
sbb
movs
ret
std
data16
jmp
subps
les
inc
jl
call
(bad)
lods
jbe
add
stos
dec
vcvttpd2dq
add
xchg
sbb
add
jmp
sti
and
in
mov
data16
dec
xchg
jo
jmp
sbb
xchg
sbb
xchg
mul
mov
ss
add
outs
or
mov
push
adc
mov
add
add
rcl
retf
push
call
mov
fwait
je
repz
(bad)
push
ror
loopne
movs
fisubr
mov
gs
aaa
xchg
leave
xchg
adc
icebp
jecxz
inc
jno
mov
test
and
js
lds
sbb
adc
test
cli
inc
push
leave
lahf
lock
ds
shr
or
mov
mov
or
out
sbb
sbb
xor
and
mov
xchg
pop
sahf
sub
mov
outs
xchg
lods
push
pop
cs
imul
xor
push
fdiv
mov
jl
fiadd
push
add
in
inc
inc
gs
jmp
mov
xchg
xor
out
dec
stos
inc
push
inc
or
imul
lahf
lods
enter
std
jl
cmps
ret
les
outs
xchg
or
daa
(bad)
(bad)
inc
adc
mov
mov
pop
push
jo
hlt
xor
pop
xor
aam
jnp
not
test
popa
movs
jnp
fisttp
inc
loopne
xor
stos
inc
inc
add
add
sbb
jp
imul
sub
into
aad
xchg
or
xchg
jnp
out
xchg
mov
jno
and
cmovne
out
sub
je
pop
cli
mov
addr16
sub
xor
jns
fwait
into
xchg
leave
daa
mov
mov
sti
jmp
dec
icebp
jle
mov
jns
lods
fdivr
sahf
fcom
cmps
mov
lods
dec
bound
jl
dec
jle
shl
jmp
or
mov
cmc
shr
sahf
xchg
inc
stos
fwait
mul
or
xchg
jmp
lds
fist
dec
mov
jns
or
mov
retf
and
inc
retf
adc
addr16
in
ds
or
fild
daa
ret
test
pusha
in
cld
jle
pop
xor
pusha
xor
pop
xchg
loope
inc
in
out
lods
xor
std
mov
hlt
pop
jmp
mov
fcmovne
xchg
add
div
int
xchg
pop
mov
sub
or
mov
stc
mov
push
fs
cli
sub
adc
fnsave
dec
sbb
test
xchg
mov
ds
out
xor
movs
in
fsqrt
in
clc
bound
sub
push
add
mov
add
movs
in
mov
cs
push
pop
mov
mov
sbb
mov
repnz
dec
nop
or
sbb
data16
xchg
rcr
cmp
lahf
mov
mov
add
popa
add
repnz
jl
mov
cmp
sub
pop
jmp
mov
rol
test
jb
mov
xor
sub
rep
ret
and
adc
or
xchg
aad
pop
fstp
adc
xchg
mov
cld
xchg
push
inc
int3
fwait
add
cmc
and
xor
(bad)
hlt
sub
push
pop
test
pop
xchg
imul
in
mov
pushf
loopne
in
sti
je
in
adc
(bad)
fmul
pusha
cld
fidiv
sti
and
cmovns
daa
ja
shr
push
in
push
mov
std
iret
add
loop
ret
xchg
call
mov
in
repz
test
pop
sub
cmp
xchg
adc
test
xchg
mov
into
mov
test
push
adc
jne
out
xchg
mov
sti
call
mov
daa
xchg
das
xchg
adc
push
(bad)
in
outs
jl
pushw
adc
js
jmp
mov
cwde
jp
push
sti
fisttp
sub
lgs
mov
shr
xchg
js
mov
lea
inc
fidiv
jns
movs
frstor
lahf
dec
mov
(bad)
mov
xor
retf
jmp
sbb
(bad)
sbb
adc
sub
test
and
shr
jb
pop
or
mov
jmp
(bad)
or
ins
sbb
shl
adc
jmp
xchg
fs
inc
inc
scas
(bad)
imul
xor
or
sbb
and
scas
push
cmc
pop
call
cmps
retf
push
shr
(bad)
fidivr
mov
mov
jo
and
into
mov
dec
fwait
dec
call
add
dec
scas
pop
push
sub
push
push
ja
dec
add
inc
fld
ror
aam
sub
mov
into
add
sti
or
jge
jae
retf
mov
lea
push
jne
adc
sbb
mov
lahf
push
fwait
mov
mov
gs
add
sbb
dec
push
pop
dec
out
xor
lods
sub
inc
arpl
stos
lods
push
sbb
xor
sbb
shl
adc
enter
popa
sbb
mov
adc
xor
sbb
cmp
clc
loope
imul
jno
outs
jmp
and
jae
xchg
or
dec
and
and
outs
sbb
je
sbb
lods
ins
push
rcr
rcr
pop
adc
dec
adc
neg
cmp
inc
mov
fs
mov
cdq
fs
sub
ficom
mov
mov
inc
pop
call
inc
out
jnp
adc
inc
xchg
fcom
fcomi
sub
(bad)
lahf
and
pop
jmp
adc
retf
jns
out
jecxz
dec
hlt
ins
lds
loope
loope
dec
leave
cld
mov
ja
je
xchg
and
mov
cmc
xchg
xchg
cmc
in
sbb
mov
dec
add
imul
mov
pop
and
cwde
stos
mov
in
popf
call
popa
push
push
ja
cmp
sub
sti
push
pop
mov
ret
adc
push
jno
repnz
pushf
mov
xchg
imul
adc
out
dec
mov
add
sub
int
inc
ret
out
mov
bound
xchg
lds
je
stos
and
imul
cmp
pop
mov
loope
xor
or
ret
inc
jmp
cs
fs
cmp
mov
int3
inc
push
cwde
out
jmp
mov
jp
mov
adc
fcmovnb
push
push
hlt
dec
jbe
push
enter
out
and
aas
das
popa
xchg
in
mov
dec
popa
ret
xor
mov
push
push
xchg
bound
mov
mov
ins
adc
adc
aad
int3
outs
mov
mov
inc
lds
pand
xor
and
test
fnstsw
xlat
scas
push
mov
movs
dec
mov
dec
cmp
xchg
cwde
mov
call
movs
jge
mov
mov
xor
xchg
jo
jmp
mov
mov
aad
mov
ror
mov
rol
cs
fldenv
jge
and
mov
call
mov
jno
int
or
call
xor
retf
xor
retf
inc
mov
xor
fst
mov
inc
in
push
mov
sub
add
xchg
(bad)
es
dec
pusha
sub
cmp
aaa
movs
(bad)
xlat
cmp
aad
jle
mov
cs
or
mov
pop
sub
mov
out
jmp
loopne
cmp
fstp
jmp
(bad)
ret
cmp
lock
gs
das
nop
out
mov
add
sahf
je
mov
mov
jnp
push
mov
mov
outs
fmul
push
int3
xchg
mov
ret
mov
sti
xor
add
mov
mov
push
jmp
sub
imul
sbb
mov
xchg
ret
xor
push
add
clts
push
nop
pop
(bad)
sar
(bad)
cmp
cmp
dec
cmc
and
push
ror
jno
jmp
mov
xor
and
push
out
cmp
push
aaa
out
(bad)
push
dec
adc
ret
inc
mov
imul
and
shld
xchg
xchg
adc
xchg
and
mov
(bad)
rol
nop
xchg
xchg
xor
loopne
cmp
or
mov
or
aaa
push
mov
out
adc
inc
lock
and
mov
xchg
cmp
clc
call
test
stc
or
enter
jns
push
cld
retf
out
push
pop
sahf
les
inc
dec
sbb
pop
adc
(bad)
lahf
into
mov
inc
ins
jne
daa
push
inc
cmp
fistp
nop
xor
retf
out
and
out
call
jle
inc
adc
stc
sub
jns
xchg
mov
add
call
dec
cwde
ja
pop
mov
push
sbb
fwait
mov
xchg
lahf
jno
loop
inc
sub
jp
or
adc
call
jae
xor
sub
shl
push
push
(bad)
xchg
adc
test
xchg
jb
sti
sbb
retf
cld
loope
mov
ja
inc
mov
mov
sub
bound
(bad)
pushf
pop
xor
jnp
xor
mov
xor
xor
jns
loopne
pop
mov
jb
rol
loope
int
jl
sbb
out
inc
stos
(bad)
sar
and
aas
lods
(bad)
adc
mov
es
mov
fucomi
in
in
repz
push
rcl
xor
repz
mov
in
jle
dec
xor
je
push
pop
sti
mov
or
xchg
dec
out
sbb
hlt
shr
cdq
mov
add
sbb
sbb
fs
cmp
pop
xor
lea
ret
push
or
outs
sbb
sub
adc
test
(bad)
clc
mov
fs
sahf
mov
mov
stos
rcr
adc
push
imul
repz
test
hlt
bound
sbb
mov
out
test
stc
cmps
pcmpgtd
or
sub
mov
std
mov
push
push
and
outs
lea
or
mov
sub
stos
in
inc
push
jge
jp
xchg
in
ret
pop
lods
xchg
ret
jae
mov
adc
fidiv
imul
std
mov
or
call
inc
das
data16
mov
(bad)
inc
call
xchg
nop
pop
fcmovu
lods
scas
push
jns
lahf
rcl
outs
aam
loopne
fld
mov
rcr
dec
dec
stos
xor
lds
sbb
ret
cmc
clc
movs
inc
retf
jbe
adc
cs
(bad)
lock
icebp
mov
arpl
adc
push
aaa
xchg
in
lock
jns
mov
sahf
cs
(bad)
sbb
repz
das
not
out
ins
jge
pop
cmps
cs
mov
out
ds
sub
shr
sbb
sahf
push
push
adc
jns
mov
push
xor
ins
jne
fiadd
out
lea
mov
dec
xchg
popf
(bad)
or
jno
xor
inc
ja
mov
or
stos
sbb
push
cmp
bound
cmpxchg
xor
sbb
xor
std
add
adc
xlat
xchg
sahf
fimul
pop
sub
je
pop
ds
lea
fidivr
cwde
sbb
push
inc
mov
pop
mul
int
std
mov
xor
push
cmc
pop
or
cmps
out
(bad)
jne
sub
pop
ins
mov
(bad)
stc
push
adc
push
push
pop
xor
dec
test
stos
add
popf
cld
fiadd
xlat
inc
arpl
scas
mov
add
(bad)
jnp
aas
and
mov
bound
leave
sub
add
hlt
imul
push
and
fwait
jmp
dec
mov
lods
adc
cli
mov
inc
jmp
mov
xchg
aaa
(bad)
pop
inc
adc
jnp
mov
jle
retf
into
inc
push
pop
bound
add
jns
add
mov
addr16
pop
cdq
mov
jecxz
sbb
daa
and
jnp
xchg
lock
and
aas
xor
enter
sbb
mov
sbb
(bad)
push
out
fcomp
sbb
lea
pop
iret
retf
iret
jp
push
cli
pop
scas
je
push
jge
dec
jb
loopne
push
push
push
xchg
(bad)
sub
sbb
push
cmp
mov
cmp
cmp
xchg
iret
nop
pusha
pop
iret
or
mov
and
mov
ds
out
data16
push
call
bound
sbb
cmps
(bad)
adc
outs
cmp
push
xchg
mov
fiadd
and
loope
pop
mov
sub
inc
xor
arpl
test
pop
cmp
retf
scas
ss
pop
xor
(bad)
mov
add
push
outs
lea
sbb
dec
(bad)
(bad)
adc
adc
or
push
pusha
cmc
mov
adc
cmp
add
je
pop
call
pop
es
jecxz
jmp
push
inc
or
push
pop
push
outs
icebp
aaa
cmps
shl
sbb
jb
mov
call
add
pop
ffree
sbb
cdq
or
call
inc
test
sbb
jb
nop
xor
push
mov
jg
jb
fwait
add
push
sbb
out
jecxz
test
and
out
push
test
imul
xor
aam
xor
jge
xchg
mov
movs
xchg
je
xlat
out
(bad)
stos
in
stos
pop
mov
sti
arpl
cld
sub
cmc
and
mov
pop
pop
or
ss
in
pop
fmul
or
hlt
sub
sub
rol
mov
or
and
and
jle
pop
adc
mov
mov
mov
or
retf
lock
in
jmp
movs
mov
callw
sti
jnp
mov
pop
add
fs
fsubr
inc
clc
jge
xchg
arpl
inc
cmp
jo
cmps
movs
call
adc
fs
xor
gs
shl
mov
or
ins
idiv
das
test
ss
aaa
div
(bad)
in
shl
call
mov
cmp
jb
mov
sti
mov
dec
movd
lahf
add
adc
into
mov
into
test
or
jns
jo
neg
jns
dec
jb
out
test
mov
jge
mov
pop
sub
push
je
or
mov
mov
push
mov
mov
popa
test
sub
xor
and
lods
in
mov
stos
iret
icebp
fist
js
xchg
lods
cmp
shr
rcr
mov
mov
add
fidiv
push
sbb
xor
xor
fs
jbe
mov
inc
push
xchg
add
and
fidivr
pusha
sub
sub
sti
sbb
lds
mov
arpl
jb
push
icebp
mul
sbb
mov
mov
lock
js
inc
inc
mov
push
shl
push
retf
shr
xchg
xchg
rcl
adc
sub
add
test
(bad)
repnz
mov
sar
pusha
and
sub
scas
mov
ja
fisttp
sub
push
ret
inc
xor
les
sbb
test
scas
adc
(bad)
fist
or
mov
push
idiv
xor
into
xor
or
les
cwde
out
inc
pop
cmps
pop
js
loop
mov
cmp
xor
dec
mov
lods
bnd
test
mov
sub
push
jno
out
jge
jbe
sbb
outs
xchg
xchg
pop
xlat
sub
and
sub
cdq
(bad)
mov
inc
xchg
or
cli
popa
int3
jb
add
mov
data16
sbb
dec
lea
or
and
pop
inc
sub
cmps
clc
inc
fidivr
inc
mov
lods
jno
into
aam
add
cmp
sti
js
jge
xchg
cld
cld
in
setg
cmc
fmul
daa
push
rol
rcl
jg
add
or
mov
movs
mov
outs
sub
call
mov
and
test
dec
add
pop
sub
add
idiv
push
xchg
fistp
repnz
stos
imul
scas
dec
sahf
sbb
stc
ror
mov
mov
xchg
pop
push
leave
pop
es
jb
add
cmps
imul
out
mov
xlat
inc
sar
xlat
mov
(bad)
push
mov
ss
call
ds
sahf
cmp
xor
mov
sub
xor
int
and
push
nop
cmp
mov
shl
push
ror
jmp
jecxz
sahf
test
rcr
scas
not
cli
xlat
add
fs
pop
xor
(bad)
es
aas
mov
jbe
(bad)
fld
out
scas
mov
push
call
call
or
shl
test
or
jge
test
mov
retf
or
cdq
loop
call
addps
and
push
push
sub
adc
es
test
jmp
inc
pop
cmp
(bad)
lods
inc
pop
(bad)
loop
loop
dec
cmps
or
mov
pop
mov
pop
jb
pop
ins
arpl
imul
push
outs
fsubrp
push
imul
xchg
lea
mov
bound
pop
cld
or
ret
sbb
mov
popf
xor
cmp
pop
das
fwait
shl
scas
or
int3
int
fwait
(bad)
fs
je
arpl
pushf
hlt
adc
es
mov
dec
comiss
jnp
js
stc
js
int
push
pop
(bad)
fisttp
cmp
add
or
rol
(bad)
out
mov
xor
dec
pop
sbb
and
xchg
imul
inc
pop
pop
xlat
xchg
in
inc
imul
cmps
pop
inc
ja
out
test
jge
push
cmp
(bad)
mov
xchg
and
add
outs
scas
out
cld
sahf
xlat
jmp
pop
adc
pop
mov
test
sub
int
repnz
sbb
sub
jo
icebp
movs
in
dec
std
call
hlt
int3
push
gs
jmp
xchg
(bad)
xchg
call
mov
ret
pop
jno
aam
add
inc
arpl
sub
dec
push
(bad)
sbb
rcr
(bad)
jmp
retfw
pop
mov
mov
loop
mov
adc
push
add
jo
test
jmp
inc
mov
stos
or
push
mov
enter
push
xor
push
inc
mov
call
push
out
cmc
adc
xchg
hlt
cmp
push
dec
or
add
and
xlat
xor
fwait
imul
fs
dec
add
mov
ds
inc
in
daa
dec
rcl
mov
ret
test
and
sub
std
test
jns
cmp
rcr
call
cmp
cld
vpxor
pop
imul
movs
cld
pop
shl
adc
adc
pushf
fadd
cmp
cli
push
loopne
dec
mov
int3
test
call
cmp
push
push
xchg
fiadd
jne
sub
mov
or
mov
arpl
mov
mov
xor
jge
fcom
pop
(bad)
xlat
jo
das
mov
pop
aaa
pop
mov
cmc
xchg
jle
aaa
inc
mov
rcr
enter
cmc
mov
mov
or
push
outs
cmp
shl
(bad)
pop
mov
fld
sub
sub
cmps
xchg
xchg
test
loope
dec
std
clc
in
(bad)
leave
jp
rcr
ds
push
push
adc
dec
inc
das
pop
movs
adc
(bad)
out
aam
fdivr
adc
cli
adc
adc
jb
shl
lahf
icebp
lock
inc
sub
sub
push
mov
fistp
std
ins
movs
rcl
enter
lods
adc
mov
jge
adc
cmp
scas
push
mov
ins
xor
cmp
dec
jle
mov
stc
xor
or
jbe
and
idiv
pusha
mov
lahf
jno
repnz
xchg
outs
sub
push
das
cwde
xchg
mov
enter
iret
cmc
dec
mov
in
mov
out
movs
loop
repnz
sub
xor
leave
fild
jns
sbb
(bad)
mov
inc
pushf
mov
jbe
dec
ds
in
fisttp
fistp
mov
cmp
jb
inc
pop
(bad)
std
lahf
sti
mov
pop
clc
xchg
xor
loopne
loop
xchg
inc
call
dec
inc
int3
or
add
shl
mov
shl
test
jno
pop
mov
(bad)
xor
loopne
outs
pop
xor
sub
or
sbb
mov
pushf
push
pcmpgtd
imul
inc
pop
ss
(bad)
xor
inc
dec
xor
scas
(bad)
mov
mov
mov
dec
and
mov
pop
jbe
sbb
mov
mov
ret
inc
out
mov
shl
mov
inc
xor
rol
dec
imul
add
pop
sub
mov
cld
xor
das
aad
hlt
push
ror
clc
pop
loope
xchg
jle
ins
retf
in
aas
push
sub
sub
mov
dec
fcmovu
mov
push
icebp
jecxz
sub
pop
retf
arpl
inc
xor
imul
jg
jne
(bad)
call
push
iret
xor
mov
or
ds
xchg
movs
test
pop
inc
sbb
and
es
pop
test
les
aaa
mov
mov
mov
or
pop
ret
js
seta
lods
mov
sub
dec
ret
(bad)
movs
sar
stos
push
adc
es
mov
xchg
jecxz
jecxz
mov
(bad)
test
retf
or
les
dec
inc
and
std
fst
push
out
sbb
add
xchg
outs
into
sbb
xlat
and
mov
sbb
test
jmp
test
dec
sbb
inc
jb
xor
mov
outs
mov
jecxz
lods
pop
sbb
cld
iret
pop
repnz
into
js
imul
(bad)
daa
sub
popa
xchg
movs
call
lods
sub
or
scas
aam
inc
jo
out
int
addr16
jae
push
lock
stos
xor
xlat
mov
push
lods
out
pop
arpl
mov
dec
dec
les
xor
das
les
jp
out
push
movs
cdq
mov
movhps
pop
gs
push
out
enter
pop
xchg
call
imul
into
jmp
and
and
aas
pop
aas
pop
and
call
mov
xor
mov
mov
test
fisubr
popa
inc
pop
pushf
push
mov
imul
int
or
cli
mov
jmp
push
add
stos
outs
pop
adc
push
xchg
push
pop
xor
mov
cmp
push
inc
ja
jbe
mov
and
push
sar
add
sbb
icebp
aas
ret
xchg
cmp
int
and
xor
add
lock
jo
cmps
dec
xor
mov
nop
add
cmc
in
fwait
and
sbb
fisub
cmp
mov
jp
inc
sub
sub
dec
mov
jge
outs
xchg
fist
or
mov
xchg
mov
xchg
lahf
nop
sti
or
sti
jl
loopne
cmp
add
jecxz
xlat
pop
subps
xor
or
push
xlat
mov
call
pop
mov
inc
jge
sub
outs
mov
jmp
add
test
daa
cmps
frstor
xchg
in
cmp
xchg
adc
xchg
xlat
fsub
sub
repnz
sbb
xchg
(bad)
pop
retf
sub
mov
push
or
test
dec
jge
mov
mov
imul
std
sub
dec
movs
pop
mov
cmp
sar
xor
cs
push
or
dec
inc
repnz
sahf
push
(bad)
jl
and
sub
mov
test
scas
push
mov
pop
pop
retf
(bad)
sbb
popa
push
ds
loope
or
repnz
jecxz
mov
jge
mov
pop
arpl
arpl
sub
push
fmulp
arpl
mov
int3
sbb
popf
popf
inc
je
aam
dec
xchg
and
pop
in
pushf
mov
mov
outs
or
adc
stc
daa
inc
push
pop
adc
push
pusha
(bad)
fisttp
out
sbb
in
sbb
add
sbb
sub
mov
or
mov
xchg
dec
not
adc
(bad)
iret
pop
jo
or
out
enter
adc
and
push
add
pop
es
jp
xor
imul
mov
pop
ds
pusha
pop
outs
mov
je
and
cmc
ret
inc
sub
pop
clc
nop
jle
dec
dec
cdq
(bad)
(bad)
push
sti
mov
test
xlat
add
pushf
push
inc
sti
out
repz
cld
cdq
or
ins
push
pusha
and
sti
inc
ror
cmc
ins
and
loope
and
push
rcr
add
adc
cli
sub
mov
enter
cmc
mov
jp
and
sti
out
sbb
xor
leave
int3
ror
and
or
jne
mov
out
in
mov
push
mov
mov
push
ja
mov
ja
fld
or
adc
xor
repnz
aam
ss
dec
aad
sub
mov
ficom
cmp
rcl
int3
ds
mov
mov
es
add
push
aas
mov
loop
jecxz
or
pop
stc
je
pop
js
or
mov
outs
sub
jmp
ficomp
pop
call
in
inc
pop
nop
cmp
(bad)
jge
xor
pop
pop
cs
sti
nop
(bad)
pop
test
cmp
pop
(bad)
arpl
ret
adc
jo
stc
sub
adc
pop
xor
mov
pop
out
outs
loop
les
mov
fstp
jae
and
rcl
ss
into
adc
sar
add
jmp
push
xchg
fwait
cmp
inc
or
fst
pop
adc
mov
mov
popa
jmp
jno
xor
xchg
inc
(bad)
(bad)
daa
cmc
out
es
xchg
clc
imul
rol
inc
sub
sub
push
jnp
and
mov
push
lahf
sti
clc
push
adc
and
push
popa
push
push
add
dec
mov
jp
xlat
mov
bound
xchg
hlt
inc
dec
test
out
dec
inc
cmps
push
fidivr
jg
jl
xchg
and
push
popf
mov
stos
scas
pop
scas
sub
jge
adc
push
and
mov
xor
cmp
into
retf
and
(bad)
push
stos
lock
cmp
loope
dec
dec
xor
add
fild
icebp
mov
pop
pusha
sub
pop
shr
daa
(bad)
adc
neg
mov
mov
mov
mov
sti
retf
xor
cli
test
cdq
js
into
in
hlt
je
push
mov
add
cmp
push
xchg
push
pop
jb
sub
mov
add
jle
dec
dec
dec
mov
pop
pop
lods
outs
sti
dec
or
outs
mov
jecxz
and
out
daa
sub
lock
add
or
sahf
movs
retf
int
cs
jecxz
icebp
xchg
retf
les
xor
ins
jno
cmp
inc
xor
pmaxsw
or
call
cmp
es
popf
sbb
jb
icebp
inc
inc
xchg
or
cmps
scas
cmps
ret
lock
inc
(bad)
std
adc
sar
test
mov
jmp
cmp
jnp
adc
cmp
add
repnz
dec
fwait
les
fnstcw
inc
sti
add
dec
jmp
or
out
rcl
popf
lods
fisubr
mov
and
sbb
adc
retf
mov
push
mov
jl
pop
add
leave
into
data16
mov
jp
cmp
not
outs
push
or
inc
fdivp
and
inc
sbb
push
sub
loopne
add
push
or
mov
xor
fwait
mov
daa
(bad)
daa
cld
addr16
hlt
imul
push
and
push
cmp
rcl
mov
scas
mov
dec
push
adc
stos
xor
pop
(bad)
sbb
pop
fs
ret
sahf
sub
inc
jb
push
xlat
pop
push
iret
bound
jo
jmp
retf
inc
xchg
mov
loop
xchg
xor
fcomp
dec
pop
iretw
sub
jnp
nop
repz
outs
ds
sar
test
stos
in
push
ret
mov
cmps
jp
clc
or
das
clc
movs
push
mov
xor
push
xchg
cmp
int3
push
jnp
mov
cwde
xchg
ja
outs
push
imul
pop
cwde
leave
pop
mov
xlat
pusha
call
js
mov
dec
cld
push
add
jl
mov
outs
cmps
sti
sti
mov
dec
xlat
xor
or
mov
sub
mov
leave
shl
dec
sbb
xor
ds
mov
sahf
xchg
xor
aaa
mov
leave
aas
sbb
or
jbe
stos
div
add
sub
sti
shr
test
pop
mov
popa
or
lds
add
aad
jge
mov
repnz
jns
sub
aaa
sahf
imul
loope
sar
jl
sbb
ins
scas
xchg
out
push
retf
retf
mov
(bad)
cmp
mov
mov
mov
cmps
sbb
push
stos
mov
push
in
mov
je
lahf
push
scas
fwait
inc
jne
(bad)
aaa
mov
mov
cmps
xor
test
sbb
pop
lea
clc
cmp
cld
movs
pop
add
jns
xor
push
lahf
pop
mov
fwait
adc
jb
sub
adc
and
cmp
imul
add
inc
ja
jle
ffreep
add
std
sub
adc
pop
jb
mov
(bad)
fwait
and
sub
mov
ja
popf
sub
lods
push
dec
pusha
sbb
add
xchg
inc
push
or
jp
dec
out
mov
xor
cmp
pop
and
dec
fisttp
dec
and
les
ja
pusha
outs
and
loope
mov
imul
repz
dec
fnstenv
adc
cmps
inc
jno
es
mov
movs
bnd
push
popa
ds
or
adc
addr16
das
mov
cmp
pop
jmp
mov
stos
sub
dec
lea
mov
sahf
(bad)
lods
pusha
add
nop
dec
nop
mov
ja
(bad)
jp
dec
out
pop
push
vphsubbw
inc
mov
mov
mov
inc
push
mov
inc
push
jp
fild
stos
lahf
push
shr
cmp
or
lock
shl
add
xor
cs
adc
sar
rol
cld
loopne
div
or
xor
adc
inc
push
mov
pop
js
lods
xchg
(bad)
(bad)
out
fld
add
or
scas
pop
loope
xchg
pop
ret
lahf
es
std
adc
sub
cmp
out
jb
stc
cwde
sbb
pop
rol
push
and
clc
int
mov
movs
jno
jnp
push
jnp
stos
dec
out
lds
dec
and
into
mov
mov
shr
outs
je
pop
ret
retf
repz
adc
xor
xchg
add
pop
ror
inc
add
jne
xchg
mov
mov
sub
xchg
push
mov
add
dec
adc
sub
pushf
ja
jle
adc
cmc
sub
(bad)
in
or
dec
call
xchg
push
xchg
mov
dec
hlt
(bad)
loope
mov
and
xchg
adc
dec
loope
or
ror
test
inc
in
mov
add
fstp
js
and
test
(bad)
test
sbb
call
loope
cmp
jbe
lea
ficom
iret
xchg
mov
imul
pop
dec
out
and
adc
fiadd
jmp
icebp
dec
ins
cs
adc
mov
sub
loope
adc
test
mov
sbb
cmp
das
adc
shr
and
or
retf
mov
jbe
gs
lahf
lahf
inc
cmp
ret
xor
mov
imul
and
xor
push
ds
inc
rcr
gs
bound
add
inc
stc
lahf
cmps
enter
int3
sub
cs
int
ds
jo
jg
jmp
push
sub
mov
and
cmp
adc
pop
mov
imul
fmul
sti
push
pop
mov
fiadd
mov
fwait
icebp
inc
mov
adc
idiv
jbe
idiv
std
jo
and
(bad)
adc
fcomip
cmp
jmp
int
test
out
(bad)
mov
mov
cmc
loop
div
jle
fs
sbb
aas
imul
es
dec
pop
ds
jg
mov
sub
mov
mov
js
add
out
push
cmp
in
cmps
cmp
sub
ja
rcr
and
(bad)
out
pop
or
inc
fwait
xchg
sbb
imul
es
inc
clc
dec
ret
daa
and
mov
cmps
jno
aaa
add
push
sub
push
push
aaa
push
sub
add
in
jb
nop
sub
test
jle
int
xor
jnp
retf
sbb
mov
cld
std
daa
push
sbb
js
mov
pushf
mov
or
mov
xor
mov
jp
adc
(bad)
popf
es
cmps
movs
jno
jbe
jg
jmp
push
add
ds
lahf
lds
fs
xor
sub
add
xchg
stos
dec
cmp
stos
gs
(bad)
push
jecxz
arpl
mov
mov
adc
movs
sbb
jae
mov
mov
pusha
push
and
repnz
and
lahf
xor
pop
or
adc
(bad)
xlat
inc
cmp
and
mov
jmp
pusha
pushf
push
sbb
inc
in
mov
mov
je
mov
mov
clc
in
outs
mov
and
loope
dec
sahf
imul
dec
popf
jge
and
pop
jbe
push
xor
ins
add
loopne
mov
lods
enter
aaa
dec
icebp
div
xchg
adc
xor
cdq
and
iret
call
repz
neg
imul
pop
or
sub
jns
push
frstor
loop
retf
dec
cmp
inc
shr
push
or
add
mov
mov
adc
ja
mov
push
cmp
push
leave
inc
push
into
dec
xlat
nop
aas
and
sub
mov
jne
pusha
(bad)
jg
sahf
inc
inc
dec
sub
sbb
rcl
pop
repz
jb
sub
or
or
in
sahf
jb
pushf
mov
test
mov
icebp
dec
test
pushf
hlt
adc
inc
es
push
jmp
sahf
scas
dec
jmp
adc
mov
xchg
mov
cdq
lahf
and
cld
cli
outs
mov
jne
js
daa
movs
scas
jl
pop
push
stc
sbb
mov
pop
movs
fs
leave
push
mov
retf
mov
retf
test
mov
pop
imul
test
add
(bad)
mov
mov
mov
popa
nop
neg
and
add
dec
rcl
cmps
jbe
in
push
lock
rol
test
(bad)
(bad)
popa
mov
jl
fadd
and
sbb
push
pop
shl
add
in
ins
repnz
push
cmc
sahf
dec
das
mov
pop
sbb
aas
leave
fdiv
and
inc
and
adc
outs
pop
in
dec
test
pop
mov
adc
or
repz
cmp
mov
(bad)
cmp
mov
outs
loop
jmp
lock
push
mov
rcr
cwde
inc
or
mov
push
xchg
std
mov
sbb
add
or
dec
mov
push
push
int3
into
inc
cli
fwait
sbb
adc
add
sbb
mov
cmps
xchg
mov
jne
adc
sar
xchg
into
or
inc
inc
dec
xlat
pop
lahf
sbb
inc
cwde
push
(bad)
jo
sbb
shl
adc
(bad)
sbb
and
or
adc
adc
int
inc
ja
in
mov
addr16
cmps
fild
out
jle
add
and
clc
(bad)
jmp
(bad)
fwait
shr
and
daa
mov
fwait
mov
and
push
fwait
out
sbb
fdivr
cmp
jecxz
and
stos
pop
(bad)
rcr
(bad)
aaa
rol
mov
xchg
sub
jp
(bad)
mov
call
in
(bad)
fdiv
mov
cld
out
adc
sahf
ins
scas
inc
inc
mov
outs
stos
out
call
or
push
inc
adc
mov
shl
xchg
mov
test
mov
and
lahf
pop
in
lods
bound
inc
pop
cmp
test
cmp
or
dec
movs
add
call
fdiv
call
xor
push
sbb
mov
and
jmp
add
inc
and
cli
mov
pop
push
mov
jle
or
out
push
pop
test
ret
cmp
sub
dec
cmp
push
dec
add
sub
mov
fcmovne
pop
icebp
in
imul
loop
and
jmp
add
lea
loop
(bad)
out
mov
call
jmp
jle
iret
cmp
add
push
jno
aaa
xor
enter
scas
call
dec
push
stos
dec
inc
in
cmp
stc
pop
out
ins
sbb
mov
(bad)
mov
or
jo
adc
mov
inc
les
pop
hlt
jbe
sub
cmp
inc
lds
ror
jge
sar
lock
test
mov
jns
aad
cmp
fistp
bound
imul
xchg
mov
leave
shr
inc
jae
pusha
fisubr
cmp
fild
cli
jne
xchg
jne
mov
or
scas
push
(bad)
mov
inc
inc
ins
test
(bad)
cwde
pop
repz
enter
push
mov
add
aas
pop
jle
mov
pop
push
xor
fs
je
sub
xlat
jp
(bad)
add
xor
xchg
sub
xchg
pusha
je
sbb
or
shl
clc
(bad)
iret
and
mov
(bad)
jmp
jno
ins
pop
(bad)
das
cmps
sub
popa
pop
xchg
push
test
mov
mov
mov
xlat
push
pop
pop
or
sahf
mov
leave
or
mov
or
xor
sbb
ja
sub
aas
pop
inc
fild
or
or
pusha
outs
sbb
sub
movs
dec
fldenv
adc
cmc
pop
push
xor
in
shr
xor
push
push
cmp
test
mov
mov
bound
inc
or
pusha
shl
sub
push
shl
jnp
adc
jmp
sbb
fadd
or
bound
idiv
push
mov
movs
dec
out
add
cli
xchg
xchg
push
sbb
les
mov
jle
pop
shr
ins
add
push
sbb
cmp
mov
int
xchg
pop
fnstsw
out
xchg
xchg
pop
or
imul
pop
mov
inc
addr16
sub
sbb
push
xor
xchg
xchg
mov
ffree
pop
inc
out
dec
dec
add
add
pop
aaa
test
mov
cmp
kandnb
cmc
and
jnp
cmp
pop
fbstp
into
dec
cmp
push
push
cdq
push
jb
mov
daa
icebp
and
and
idiv
jl
mov
add
cmp
ret
add
scas
(bad)
xchg
in
hlt
(bad)
call
ins
int3
inc
ret
cmps
fsubp
lahf
dec
retf
inc
inc
lods
mov
cwde
jo
fs
outs
cs
dec
jmp
popa
and
jg
fs
pusha
lods
add
loop
lock
mov
xor
sub
loopne
push
sbb
jnp
pop
and
inc
sub
call
fsubp
xchg
lds
xchg
call
rcl
retf
ret
mov
and
inc
fistp
sbb
xor
xchg
mov
mov
fwait
dec
xchg
cmp
xor
push
mov
mov
cmp
sahf
cmp
fs
push
mov
mov
sti
push
pop
je
icebp
lea
sti
movs
mov
xor
sbb
add
push
sbb
nop
fwait
js
inc
jp
mov
mov
jmp
ret
sbb
(bad)
in
dec
cmp
fidiv
in
sti
cld
fdiv
test
inc
lods
or
fwait
not
(bad)
lahf
out
xchg
stos
mov
call
jmp
jmp
ror
mov
mov
jae
mov
ins
sub
jo
fwait
(bad)
hlt
mov
imul
cmp
cmp
mov
inc
fdiv
call
test
mov
shl
mov
daa
jl
fwait
xor
push
inc
xor
sbb
pushf
mov
(bad)
stc
iret
pop
xor
and
xchg
mov
mov
scas
cmp
rcl
cmp
mov
rcr
loopne
ins
rol
fild
loopne
mov
call
jb
leave
xchg
lods
jmp
dec
xchg
(bad)
(bad)
adc
sub
mov
push
movs
out
lock
(bad)
aaa
pop
jp
loopne
outs
ja
sub
inc
jno
cmp
or
sub
mov
imul
sti
lea
inc
jmp
enter
scas
clc
lods
cmp
sar
mov
xchg
xor
hlt
data16
jmp
sbb
into
in
or
xchg
stos
gs
arpl
pop
(bad)
push
sbb
mov
imul
inc
jmp
popf
push
cmp
lock
pslld
sub
nop
xchg
in
retf
xor
imul
push
aad
xchg
call
enter
cmc
out
aaa
xchg
sbb
add
push
adc
jg
inc
jnp
xor
pop
js
out
push
iret
inc
out
push
das
add
mov
dec
mov
in
in
loop
int3
out
rol
xchg
gs
shr
adc
sub
push
call
shl
jno
jns
push
mul
cmp
lahf
dec
sbb
dec
aaa
jnp
lods
int
push
xchg
arpl
js
ds
popf
xchg
scas
and
push
aad
sbb
pop
(bad)
js
mov
inc
jle
pop
add
add
sub
bound
adc
jnp
xor
dec
adc
adc
and
rcl
lods
add
movs
mov
lahf
push
push
mov
push
(bad)
adc
mov
outs
nop
mov
(bad)
lods
pushf
imul
out
ins
jmp
(bad)
xor
stos
cmp
mov
daa
rcl
ins
dec
dec
das
pushf
or
cmp
adc
outs
mov
inc
xor
sar
pop
int
pop
hlt
and
in
pop
inc
loop
mov
sub
jne
ins
scas
cld
das
fs
push
cmc
rcr
or
xor
call
xlat
mov
gs
out
jg
sbb
xor
scas
fdivr
adc
test
stos
add
mov
call
mov
mov
in
ja
mov
fs
and
jmp
scas
lahf
mov
xor
mov
jge
pop
movs
data16
es
xor
pop
jns
jb
adc
nop
jb
mov
adc
pop
mov
add
xchg
and
push
out
xchg
pop
shr
enter
cmp
fsubr
scas
call
cld
out
dec
sbb
adc
int
pop
dec
movs
xchg
enter
movs
cmps
inc
add
das
inc
popa
stos
jecxz
imul
(bad)
mov
add
sar
das
lods
mov
ss
(bad)
mov
sbb
shr
out
test
ja
bound
add
push
stos
mov
jnp
xor
inc
mov
sub
hlt
in
sbb
pop
lds
fxch
sbb
xchg
jg
jg
rcl
sub
dec
pop
loopne
retf
jmp
pop
in
mov
int
pop
aas
or
ss
(bad)
add
or
stos
lds
pop
mov
fisttp
or
adc
lods
cwde
mov
fsubr
dec
call
sbb
jnp
loop
mov
and
dec
adc
cmp
scas
repnz
loopne
xchg
fcomp
or
(bad)
sar
int
add
in
mov
retf
cwde
add
je
(bad)
dec
inc
pop
xor
jmp
pop
pop
xchg
in
ret
xchg
push
jnp
sahf
enter
scas
cmps
jmp
push
pop
push
pop
sbb
jg
pushf
cmp
jno
clc
pop
mov
stos
jmp
mov
mov
jge
xchg
xchg
out
aad
and
jns
fwait
pop
fwait
stos
adc
inc
lahf
and
add
xor
cmp
inc
jno
or
or
sub
jmp
leave
mov
ret
popa
or
lahf
mov
data16
pop
and
push
cld
add
push
pop
xor
push
fidiv
call
test
fisttp
xor
jle
fdivr
mov
push
pop
xchg
dec
dec
aaa
ins
idiv
mov
ret
inc
push
sti
dec
repnz
or
inc
or
sahf
stos
sbb
jae
ret
cmps
out
cmp
mov
inc
push
imul
cmp
mov
push
fmul
dec
inc
popf
mov
xchg
or
mov
in
add
rcl
mov
(bad)
leave
jecxz
ds
test
xchg
popa
pop
ror
sbb
pop
scas
cmp
inc
cld
into
arpl
or
pop
xor
int
imul
pusha
in
je
push
(bad)
out
hlt
inc
ds
test
and
push
movs
scas
sub
fisttp
call
loopne
sbb
aas
out
test
call
icebp
adc
push
inc
dec
xchg
in
data16
out
pop
arpl
adc
cmp
(bad)
iret
cmp
xor
(bad)
or
aad
adc
fdivrp
sar
cmp
push
mov
or
retf
cmps
jns
push
popa
push
lar
mov
shl
inc
rol
add
jecxz
mov
hlt
movs
sbb
jns
jp
movs
sar
dec
ret
cmp
jo
addr16
adc
mov
mov
adc
dec
inc
add
(bad)
xchg
cmp
or
add
sar
cs
xchg
sub
dec
mov
jae
cld
add
popa
(bad)
(bad)
sbb
xchg
in
cmp
scas
mov
mov
fs
sbb
test
mov
cld
lahf
xor
jecxz
je
sub
and
rol
pop
loope
jecxz
leave
jg
pusha
fist
aad
iret
repz
iret
mov
lods
retf
and
push
mov
xor
movs
adc
mov
jle
inc
sbb
push
call
and
jl
mov
clc
sbb
(bad)
push
pop
in
fdiv
jb
or
push
mov
sub
clc
adc
jp
dec
fisttp
push
push
popf
pop
pop
sub
and
or
hlt
cmps
mov
xchg
test
lods
inc
pop
(bad)
pusha
sar
adc
push
or
add
mov
push
mov
cmp
mov
(bad)
neg
dec
mov
call
jecxz
mov
dec
push
pop
cdq
arpl
int
in
lods
int
pop
add
fs
and
cwde
aaa
push
dec
and
push
mov
iret
mov
lea
fwait
loopne
mov
push
outs
add
shl
lods
ret
mov
push
mov
xchg
and
inc
lods
movs
repz
or
inc
jb
in
retf
mov
ds
xchg
nop
repnz
pop
call
aas
jns
sbb
pop
pushf
inc
or
pusha
(bad)
arpl
adc
lods
pop
pop
cdq
and
(bad)
ficomp
hlt
and
js
dec
sub
bnd
popa
jo
test
movs
(bad)
outs
repz
clc
int
push
xchg
aad
setns
ror
adc
sub
out
lea
adc
push
enter
aad
xlat
lds
clc
rcl
lea
out
or
out
xchg
pop
aam
adc
outs
sub
mov
jb
sub
cmps
add
jbe
out
imul
inc
push
aas
sub
xlat
out
jp
rol
test
adc
ret
pushf
ss
loopne
and
cmp
jb
or
leave
dec
rcl
in
xlat
test
repz
in
js
sti
mov
into
mov
int3
test
xchg
in
jle
retf
scas
jo
and
out
pushf
jmp
ja
shr
jo
movs
and
xchg
fmul
mov
push
push
sbb
push
pop
mov
adc
lahf
or
jae
outs
mov
add
push
sub
mov
pusha
mov
into
dec
mov
sbb
sub
lods
inc
mov
popa
jae
sahf
mov
loopne
xlat
push
inc
ficom
cmp
mov
add
jbe
push
ss
out
test
or
sti
ds
xlat
cli
or
mov
jne
daa
mov
aaa
cdq
out
int3
in
or
sbb
pop
nop
mov
fadd
lds
pop
pop
movs
mov
repnz
cdq
cmp
push
mov
sub
rcr
pop
pop
or
(bad)
scas
fsubr
add
inc
dec
inc
push
cmp
cmp
fistp
jg
xchg
jmp
test
add
clc
cmps
int
sbb
std
shr
pop
add
lds
out
push
cdq
dec
mov
dec
imul
enter
jecxz
ds
jge
adc
jne
out
pop
je
and
fsubr
bound
imul
jae
cmps
mov
pop
mov
test
fild
and
pop
repz
sub
xchg
pop
sbb
push
mov
push
or
bound
adc
shl
les
push
aam
xor
xchg
loop
or
push
fistp
out
mov
sub
sub
int3
xor
cs
pushf
dec
jne
dec
jae
cmp
dec
test
aaa
call
sahf
imul
adc
imul
fbld
out
outs
mov
shl
sti
inc
mov
out
cld
sub
or
push
leave
aad
cmps
cmp
retf
add
dec
ja
xor
and
pop
jbe
sub
jb
stos
and
cs
je
sbb
(bad)
jae
cmps
jo
aad
xchg
mov
ror
push
test
jp
cli
cmp
sbb
shl
scas
gs
mov
sar
outs
cld
add
cmp
jne
and
cmp
sbb
push
mov
dec
shl
in
lds
mov
and
mov
adc
fwait
js
out
ja
retf
test
cwde
xchg
movs
add
and
in
call
enter
imul
add
push
sub
sub
inc
mov
imul
mov
sub
sbb
jae
mov
repz
fdivr
not
lea
cmp
dec
pop
jp
inc
shl
mov
adc
push
or
push
cmp
adc
ins
popf
sub
cwde
xchg
xor
jo
mov
into
cs
lahf
cmps
je
or
xor
mov
or
add
sbb
stos
and
dec
xchg
sbb
mov
sahf
pop
pop
rcr
mov
mov
repnz
(bad)
adc
xor
(bad)
div
aas
lahf
pop
out
sbb
sahf
mov
xor
cmps
mov
mov
mov
xchg
cld
xchg
pop
repnz
push
je
pop
pop
cmc
cld
xchg
inc
mov
sub
dec
in
fadd
adc
retf
push
xchg
mov
xchg
or
sub
mov
xchg
out
retf
add
es
lea
in
mov
mov
mov
(bad)
imul
cmps
mov
pop
adc
adc
int
aaa
aas
dec
fld
ins
int3
repnz
cdq
sar
xchg
xor
inc
xchg
cmps
mov
iret
push
sbb
fst
fadd
or
xchg
in
std
sbb
(bad)
xor
loopne
loopne
add
(bad)
jne
sbb
cld
fwait
add
cmps
fdivr
ret
ror
addr16
repz
adc
sub
xchg
hlt
daa
push
push
or
retf
push
imul
add
hlt
repnz
xor
ss
loope
in
lods
cmps
mov
push
outs
ins
mov
aad
out
xor
mov
inc
adc
mov
lock
cmps
adc
push
ret
cmc
push
mov
sub
mov
rcr
into
test
dec
inc
push
jmp
int
cmps
jae
fsubp
je
(bad)
retf
mov
stc
push
cmps
iret
sub
imul
dec
std
inc
push
cmps
inc
mov
fiadd
xor
stos
push
inc
cdq
push
sahf
inc
jmp
xchg
pop
fisub
pop
sub
or
sub
sub
retf
jb
add
(bad)
leave
xor
test
mov
jp
dec
or
and
fnsave
adc
les
and
gs
jp
ret
sub
xchg
jge
cmp
scas
mov
pop
sub
mov
shr
mov
sub
pop
dec
jnp
pop
loope
dec
lahf
repnz
aad
fadd
mul
or
fs
cmp
sub
or
imul
push
push
cld
aaa
mov
dec
icebp
repz
movs
push
test
add
mov
aam
and
stos
cli
pop
fmul
popa
je
dec
jmp
adc
pop
test
push
and
mov
enter
loopne
sub
and
dec
dec
stos
bound
imul
or
dec
popf
mov
push
mov
or
lea
ret
sub
data16
ja
pop
int
cdq
mov
add
ss
fs
push
push
mov
(bad)
data16
aas
ss
and
cld
ja
fs
push
xchg
(bad)
xchg
xchg
ror
dec
mov
sbb
pop
cmc
sub
and
pop
push
scas
leave
pop
inc
neg
mov
cld
pop
popf
mov
or
fyl2xp1
lds
sub
mov
cmp
push
imul
cmp
nop
sti
jmp
in
mov
mov
jmp
ins
push
std
into
xor
enter
cmps
mov
push
aaa
(bad)
call
les
push
jecxz
mov
jmp
pusha
les
inc
fs
in
jl
cmp
mov
int
push
iret
inc
cmp
xlat
fld
adc
and
dec
cwde
push
into
popa
retf
cmp
ss
mov
add
push
or
lock
or
icebp
inc
mov
mov
clc
ins
mov
loope
sti
xor
call
stos
(bad)
add
mov
jns
dec
scas
pop
adc
outs
mov
mov
fucomi
mov
test
jle
call
inc
xchg
in
cmp
sbb
and
leave
in
lock
retf
lahf
call
out
test
push
push
add
jl
pop
inc
mov
fimul
test
xchg
rcl
cwde
jecxz
or
sti
scas
test
hlt
pop
jno
xchg
jp
repnz
and
push
xchg
(bad)
push
jno
mov
pop
scas
cli
pop
aaa
ja
push
dec
repz
dec
or
int
and
imul
cmp
cmp
push
inc
mov
pop
push
mov
std
sbb
mov
mov
jp
push
lahf
xor
xchg
jmp
jmp
ss
mov
test
retf
cbw
xchg
sub
xchg
loop
inc
xor
xor
in
push
add
adc
or
and
sbb
(bad)
dec
inc
mov
scas
das
retf
inc
out
mov
sbb
mov
das
rcl
xchg
mov
ds
ss
ss
ins
pop
clc
(bad)
and
gs
or
movs
out
fmul
push
pop
mov
jne
(bad)
jb
dec
dec
cmp
jo
(bad)
pusha
in
lds
fmul
dec
loopne
outs
std
mov
mov
dec
addr16
sbb
shl
xchg
inc
fisubr
mov
rcl
cmp
mov
out
sub
fisub
hlt
ja
mov
js
add
emms
jbe
sbb
sub
aaa
cmps
jp
inc
out
inc
test
and
data16
je
inc
inc
inc
pop
jno
pop
iret
xor
and
or
jecxz
push
sub
(bad)
jmp
mov
jg
popa
jne
ds
(bad)
in
les
fiadd
xor
sub
pop
mov
push
aas
mov
push
pop
sahf
adc
(bad)
std
retf
jmp
pop
add
rcr
mov
jecxz
mov
mov
mov
out
ins
jnp
add
dec
enter
mov
cmp
mov
movs
pop
inc
mov
ret
cmp
(bad)
repnz
or
mov
xchg
stos
cmc
pop
addr16
pop
push
jl
(bad)
(bad)
enter
add
into
popf
or
jo
mov
cmp
leave
pop
popf
sbb
push
pop
imul
sbb
out
pop
or
jae
add
rcl
mov
pop
sub
dec
data16
sbb
xchg
push
or
or
jmp
movs
fdivr
push
enter
pop
scas
cmp
aas
loopne
ret
and
inc
sub
shr
adc
(bad)
fcomp
aad
frstor
jbe
cmc
retf
movs
shr
ja
imul
out
and
in
mov
in
pop
xlat
adc
and
mov
adc
xor
inc
sbb
dec
jae
stc
cmc
or
loope
enter
fwait
jmp
add
sbb
adc
fadd
and
inc
mov
iret
and
(bad)
inc
mov
adc
stos
pop
dec
cmp
pop
in
lods
fisub
sti
sar
in
lock
imul
and
imul
adc
call
nop
(bad)
inc
dec
jecxz
js
(bad)
cld
aas
xor
std
int3
push
loopne
(bad)
push
mov
(bad)
icebp
sub
dec
out
inc
dec
test
push
mov
mov
ins
enter
cwde
adc
fcmovnb
bound
movs
aam
loope
cmps
push
pop
xor
adc
int3
icebp
outs
xchg
mov
(bad)
and
div
lods
cmp
je
inc
ffree
push
adc
ins
mov
push
arpl
out
gs
clc
pop
add
out
inc
call
out
xchg
jns
jne
xchg
cmp
jmp
cmp
sbb
mov
movs
lahf
ins
ja
mov
aad
add
mov
cmp
push
dec
lods
shr
outs
mov
mov
mov
pop
inc
je
sbb
xor
inc
or
aad
inc
pop
movs
scas
fwait
xchg
std
jns
test
jns
sbb
sub
leave
lock
jnp
pop
mov
xlat
loop
jne
dec
retf
sub
jmp
fs
aad
mov
jl
push
and
and
in
inc
iret
jmp
push
aam
mov
mov
(bad)
mov
sbb
jbe
push
arpl
xchg
test
sub
stos
xor
mov
pop
pusha
(bad)
xlat
ret
jae
add
push
aad
cwde
xchg
jb
adc
sub
mov
les
jno
ret
sub
ficomp
fstp
shl
jnp
movs
push
retf
retf
movups
inc
in
enter
dec
ror
out
in
scas
xor
inc
mov
aas
pushf
in
mov
imul
inc
xchg
mov
pop
inc
sub
outs
nop
in
aaa
clc
mov
fisub
cmps
lds
scas
add
popa
mov
retf
sahf
rcr
sub
in
mov
push
mov
iret
dec
test
call
dec
jl
les
pushf
loope
loope
pop
jle
int
sbb
and
jae
jne
xchg
(bad)
icebp
in
dec
xchg
cli
ja
mov
sbb
xchg
shl
xchg
pop
sbb
daa
push
push
rol
xchg
add
xor
or
sub
neg
sti
scas
fnstenv
pop
fmul
jnp
mov
sahf
jns
ja
jecxz
mov
mov
cmp
mov
enter
jl
cs
pop
test
push
stc
jnp
add
pop
cmps
add
sub
stc
popa
dec
adc
out
adc
loopne
scas
sbb
pop
sahf
mov
push
dec
loope
loopne
adc
push
mov
sub
pop
ret
out
jle
lods
fsub
int
mov
out
movs
mov
jmp
popa
cmc
dec
pop
sbb
and
clc
or
mov
sbb
aas
xchg
or
pop
push
inc
jecxz
push
fnstcw
icebp
pushf
test
xor
movs
sbb
mov
stos
mov
pusha
and
add
mov
addr16
push
std
cli
fstp
fmul
sub
cmc
inc
fdiv
mov
cld
cli
mov
dec
scas
sbb
lods
movs
cli
cmc
daa
daa
push
leave
sbb
pop
shl
and
jg
in
dec
cwde
sbb
mov
gs
nop
dec
iret
xor
pop
jb
sbb
inc
mov
scas
cmps
fstp
arpl
out
retf
inc
rol
fdiv
mov
pop
(bad)
lock
or
aaa
fistp
and
stos
jecxz
or
cmp
sbb
lea
daa
in
lahf
lods
fisub
lods
into
sbb
cwde
sub
(bad)
pop
jmp
sub
sbb
cmp
jmp
xor
jbe
aad
add
mov
add
es
adc
jo
mov
push
push
test
retf
movs
int
mov
repz
push
in
movs
test
push
rcr
ffree
mov
mov
loop
jno
stos
and
xchg
cmps
push
outs
out
xchg
fst
call
out
xor
in
jns
scas
pop
mov
stos
jecxz
cmp
and
xchg
dec
fidiv
pop
aaa
cmp
test
inc
inc
mov
jmp
adc
addr16
or
cmp
setbe
mov
jmp
pushf
imul
pop
xchg
inc
inc
xlat
add
shl
ins
mov
aaa
aad
adc
push
mov
jno
lock
loop
and
mov
(bad)
pusha
data16
cld
sub
and
adc
test
setne
dec
fwait
pop
add
sub
lock
jecxz
rcr
cmp
pop
nop
mov
mov
pop
(bad)
out
in
loop
loope
call
mov
mov
cmp
je
ror
sub
pop
aad
(bad)
shr
std
push
and
clc
inc
popa
rcl
pop
ret
arpl
or
fcomp
int
mov
das
gs
adc
push
xchg
push
mov
jmp
arpl
add
movs
jne
push
stc
sub
push
inc
and
or
pop
xchg
adc
mov
(bad)
push
fisubr
lods
xor
repnz
mov
sar
jno
inc
int3
sub
bound
cmc
xchg
pop
dec
pop
pop
sub
test
xor
enter
daa
cmp
mov
fwait
jmp
pop
jmp
iret
movs
int3
xor
add
test
dec
fisttp
jnp
sbb
dec
das
add
push
fisub
jne
adc
adc
jnp
outs
out
outs
add
adc
and
sbb
(bad)
in
mov
imul
and
mov
iret
mov
(bad)
xor
xor
cmps
mov
mov
and
loope
pushf
adc
hlt
push
loopne
fsub
add
inc
mov
xor
lock
call
retf
sbb
out
adc
and
push
mov
mov
mov
repz
imul
shl
bound
imul
es
pop
imul
xchg
cmovns
push
or
mov
aad
inc
jb
push
inc
push
dec
ins
pop
cmp
mov
sub
inc
repz
cdq
push
out
(bad)
jmp
cmp
pushf
cmp
mov
inc
mov
in
push
and
(bad)
shl
wbinvd
jle
loop
jne
mov
dec
push
sbb
iret
inc
mov
shl
adc
mov
in
dec
cmp
dec
xchg
xchg
nop
mov
ds
ret
xchg
cdq
jns
xor
cs
test
pop
clc
cmp
pop
dec
jb
scas
mov
add
repz
jae
int
and
pop
rcr
push
inc
stos
jbe
test
mov
out
jns
and
mov
iret
push
icebp
sbb
pop
popf
bound
ja
cmc
fst
outs
shr
pushf
adc
in
or
call
mov
aas
dec
into
arpl
pop
rcr
push
dec
sub
push
fild
dec
imul
mov
in
xchg
dec
xchg
cmc
mov
fiadd
mov
push
or
push
mov
inc
popa
xchg
arpl
push
push
jmp
sahf
call
jnp
add
mov
mov
enter
mov
js
pop
ror
xchg
push
inc
add
cmps
ss
jb
jl
xor
movs
lds
or
shl
pushf
(bad)
fbld
jmp
dec
scas
inc
jmp
sub
mov
inc
push
mov
cmp
fisubr
adc
xchg
jl
rcl
xor
data16
enter
rcr
xor
aad
xchg
add
xchg
movs
iret
mov
sub
fcmovne
pop
pop
pop
dec
xor
sub
mov
in
(bad)
xchg
into
ins
xor
mov
push
call
xor
push
dec
retf
cmp
jnp
mov
std
mov
cmp
mov
movs
icebp
pop
sub
aas
add
nop
cli
inc
nop
out
pop
mov
jl
stos
in
mov
bound
pop
leave
aas
add
je
test
lods
push
popa
dec
mov
js
push
movs
jnp
scas
sub
xchg
sti
mov
dec
in
pop
dec
aaa
and
out
sbb
dec
dec
mov
in
push
xchg
mov
mov
sbb
xchg
push
adc
movs
popa
hlt
mov
mov
jle
xor
xchg
pop
dec
lahf
repnz
jmp
shl
out
cli
jae
push
sub
pop
xlat
push
popf
mov
in
outs
mov
loop
push
outs
jns
add
fwait
jg
fld
inc
popa
cmp
aam
out
jno
test
xchg
mov
std
stos
addr16
ret
into
retf
outs
clc
push
outs
loope
(bad)
sahf
xchg
int
sbb
xlat
or
push
scas
ret
jmp
inc
and
test
jbe
repnz
fucomip
jae
movs
dec
and
sbb
pop
push
aaa
cmp
dec
ins
cmp
sti
pushf
pop
sbb
arpl
aad
out
js
pusha
clc
jno
add
dec
dec
(bad)
les
xor
loop
or
pop
sar
cdq
ja
mov
dec
iret
ja
inc
in
and
repz
mov
mov
cmp
jle
sub
xor
xchg
or
fistp
cmp
in
sbb
les
arpl
dec
and
call
je
rcl
neg
dec
push
mov
xacquire
mov
jecxz
in
enter
popa
daa
mov
mov
imul
xchg
fcom
or
aaa
aad
push
xchg
sbb
stos
sbb
mov
xchg
clc
iret
loop
xor
or
xchg
mov
jo
dec
test
pop
pop
inc
in
pop
or
bound
mov
mov
lods
outs
jo
hlt
dec
add
or
fcom
mov
repz
add
fisttp
mov
sub
add
rcl
jnp
xor
stc
sbb
(bad)
jl
ror
gs
shr
sar
int3
aas
dec
sbb
in
jbe
daa
jp
test
mov
sbb
in
mov
aas
mov
mov
inc
cdq
in
pop
xor
outs
mov
and
fdivr
gs
arpl
rol
cs
(bad)
(bad)
gs
das
mov
cmp
fwait
es
mov
imul
in
jo
add
call
cwde
jb
iret
retf
(bad)
or
jbe
fsubr
dec
icebp
imul
fmul
mov
mov
or
lods
in
jmp
stc
mov
data16
rcl
sub
fwait
adc
mov
cli
cdq
sbb
dec
pop
ja
sbb
inc
and
sbb
data16
mov
or
sbb
add
cmps
fsubr
fbstp
sbb
push
and
push
ss
pop
mov
cmps
fmul
dec
inc
cmp
pop
pop
mov
daa
and
in
and
push
sub
inc
and
icebp
ret
fisub
stos
aam
mul
(bad)
push
push
sbb
mov
add
push
mov
jno
pushf
and
and
jg
bound
mov
loope
mov
gs
cs
add
xchg
shl
je
iret
adc
pop
dec
and
sub
pop
in
loope
dec
or
sbb
mov
add
daa
xlat
sbb
call
cmps
je
mul
sbb
aas
xchg
or
pop
add
pop
js
loop
je
pop
inc
adc
cld
outs
push
mov
push
add
xor
test
inc
and
sub
imul
aaa
push
call
add
cwde
cwde
call
jmp
adc
jae
fs
pop
sar
pushf
mov
mov
mov
mov
sub
or
cmp
adc
mov
mov
stc
mov
dec
or
movs
loop
(bad)
wbinvd
jae
fwait
xchg
adc
sub
cdq
call
test
dec
dec
(bad)
pop
lods
or
clc
inc
outs
call
inc
dec
addr16
mov
pushf
push
xchg
jnp
cmp
push
iret
int3
mov
iret
and
outs
push
lods
fldcw
sub
repz
xor
retf
fst
and
xlat
jmp
dec
add
pop
std
fst
mov
test
mov
dec
in
movs
fdivr
cdq
push
movs
push
jne
aad
nop
push
in
cmp
call
std
jmp
xor
es
pop
lods
push
lods
imul
inc
push
jecxz
mov
mov
dec
shr
xor
or
stos
repz
add
data16
rol
push
out
mov
cli
div
cmc
int3
inc
stc
(bad)
push
das
into
stos
lods
xor
mov
cmc
out
dec
pop
nop
mov
ret
pop
push
and
inc
mov
or
das
mov
sbb
mov
pop
add
popf
cmp
int
pop
int3
jmp
push
mov
push
loopne
ret
imul
loope
or
push
add
fistp
xor
xor
adc
mov
xor
js
cmps
xchg
adc
inc
fstp
jns
aam
add
lds
sub
mov
and
inc
mov
add
fimul
cmp
mov
std
push
int3
jge
and
cmp
push
jmp
aas
xchg
add
xchg
inc
lds
arpl
retf
pop
jne
pop
fs
sbb
xor
stos
shl
xlat
jmp
lods
in
es
push
push
stos
pop
xchg
jne
in
sti
xor
mov
(bad)
hlt
pop
out
and
lods
adc
mov
adc
mov
adc
or
pop
out
mov
sub
(bad)
ror
sbb
pop
std
sub
cmps
cmc
or
mov
push
sub
and
pop
push
call
cdq
push
jne
sbb
int3
or
mov
ror
cmp
push
pop
mov
push
jl
cmp
jmp
ret
jmp
fs
in
and
mov
cmp
pushf
xchg
pusha
in
inc
inc
and
mov
xchg
out
xchg
cmps
popa
mov
repnz
clc
jno
mov
jno
into
data16
into
dec
iret
out
pop
mov
cli
not
and
mov
mov
adc
add
mov
sbb
add
pop
pushf
mov
(bad)
mov
jbe
pop
add
data16
adc
push
int
mov
ds
jno
out
add
mov
cmc
clc
fwait
test
arpl
mov
pop
jmp
iret
lea
ins
pop
xchg
ins
sahf
mov
xor
mov
adc
pop
jnp
pop
inc
push
push
cmove
daa
movs
xor
xchg
or
retf
xlat
pop
push
cmp
dec
push
ret
and
int3
popf
and
test
xchg
pushf
lds
cmp
int3
jecxz
mov
mov
mov
hlt
push
add
xlat
mov
ret
sbb
out
sub
lea
and
je
inc
cwde
or
inc
(bad)
(bad)
mov
jmp
outs
mov
add
sbb
push
and
adc
and
fprem
nop
mov
pop
cmp
cmp
pushf
add
jle
sbb
pop
ds
sub
mov
movs
loop
mov
outs
cwde
ins
xchg
(bad)
mov
mov
xchg
aas
xchg
cmps
fstp
(bad)
rcr
adc
cmps
aad
jo
sbb
movs
xor
dec
loope
and
aaa
pop
jmp
dec
jmp
scas
add
aaa
sbb
and
fsubr
jmp
addr16
fsubr
sbb
repnz
mov
push
enter
xor
hlt
daa
add
pop
sub
fild
std
add
cmp
out
mov
fstp
dec
dec
adc
sahf
inc
inc
and
push
xchg
adc
(bad)
mov
test
stos
scas
lods
and
retf
mov
mov
(bad)
in
mov
add
push
jl
loopne
xchg
loope
and
mov
inc
or
jmp
test
out
pop
jl
call
jnp
aam
xor
xor
in
das
xor
fld
aam
aaa
pop
jecxz
xchg
jne
aaa
jge
add
jae
or
out
or
jno
add
lea
push
pop
inc
mov
jmp
fs
mov
dec
jne
sub
add
sbb
out
sub
or
xchg
outs
push
inc
pop
out
jns
stos
(bad)
sahf
xor
outs
data16
mov
jmp
(bad)
ss
nop
sub
aad
and
inc
mov
or
adc
call
push
into
jmp
sub
and
rol
xchg
pop
mov
and
movs
mov
and
sub
(bad)
adc
add
into
or
sahf
bound
mov
xor
sar
test
out
dec
adc
sub
popa
mov
mov
add
shl
dec
sar
xchg
cmp
push
or
adc
gs
xor
popa
mov
inc
pop
scas
pushf
(bad)
and
ja
js
stc
aam
shl
mov
dec
test
dec
add
xor
or
daa
xchg
mov
test
cmp
xchg
test
push
pop
mul
in
mov
shl
xor
xchg
jbe
xchg
loopne
daa
iret
push
std
inc
sub
bound
loop
nop
inc
cmp
push
dec
sbb
icebp
loope
xor
xchg
mov
xchg
scas
(bad)
into
inc
in
mov
movs
out
add
mov
rcr
jbe
aas
adc
mov
push
in
pop
cld
xor
es
icebp
xlat
push
cmps
fs
repnz
mov
sar
xchg
or
push
mov
ins
sub
push
stc
sub
les
cs
(bad)
sbb
and
fwait
push
retf
mov
repz
je
sub
sub
inc
jnp
sbb
xchg
movs
inc
mov
push
or
mov
jae
repnz
scas
or
add
out
xchg
das
dec
jno
mov
out
lea
aaa
jo
adc
xchg
out
mov
das
push
lahf
mov
outs
outs
aas
repz
cmps
ror
es
in
rol
mov
mov
in
test
cmc
sbb
jbe
xchg
in
cli
dec
ds
mov
push
hlt
mov
daa
shrd
dec
mov
cwde
ror
mov
jne
(bad)
jle
daa
ss
dec
mov
add
mov
mov
stos
xlat
int
pushf
jl
jp
icebp
in
lds
pop
xchg
lods
js
inc
(bad)
in
inc
and
add
dec
movs
in
mov
jb
mov
push
dec
shr
sbb
popf
push
call
xor
cs
push
pop
jns
push
popf
push
dec
fistp
add
and
stos
inc
mov
jmp
add
sahf
stos
xlat
mov
inc
jb
fs
xor
xlat
out
add
push
lds
adc
mov
fs
stc
call
inc
movs
sar
xchg
aaa
imul
sahf
xchg
sbb
out
xchg
ret
fs
mov
neg
push
or
jae
jecxz
xor
test
inc
ins
out
xchg
addr16
mov
fist
or
mul
test
std
loopne
cmp
clc
adc
sub
cs
push
cmp
ss
mov
jp
fwait
inc
js
dec
pop
or
push
out
jle
test
cwde
add
(bad)
xlat
jb
push
xchg
jbe
mov
lds
dec
in
xor
jns
or
pop
test
in
pminub
sbb
inc
push
leave
in
leave
gs
or
mov
push
test
xchg
inc
or
add
retf
xor
or
mov
(bad)
dec
add
movs
mov
aam
cwde
call
pop
xchg
pushf
add
aaa
xchg
movs
jp
cmp
test
je
scas
test
push
or
pop
pop
mov
push
pop
in
clc
pop
imul
les
xchg
pop
test
mov
xchg
sbb
cld
mov
xor
dec
or
jg
and
mov
ins
aad
inc
lods
ret
pushf
arpl
pop
stos
xor
jo
xlat
test
in
cmps
sub
adc
or
jbe
aad
jo
mov
in
sbb
mov
push
jno
fadd
sub
mov
(bad)
adc
mov
(bad)
loop
lds
adc
arpl
push
mov
dec
test
adc
call
jns
lods
cvtps2pd
adc
repnz
fnstenv
int3
jmp
push
enter
cmp
leave
jae
cmp
xor
popa
in
test
sar
nop
jge
push
jns
cdq
and
xchg
stc
das
retf
js
test
push
stos
sub
mov
cwde
arpl
stos
les
test
(bad)
cmc
loope
icebp
jmp
add
cmp
outs
jp
inc
out
imul
jns
add
sti
push
xor
or
mov
fiadd
add
out
mov
push
sbb
sub
push
icebp
xchg
pop
push
xlat
cdq
scas
push
loopne
scas
sub
int3
push
jmp
add
mov
lock
nop
ja
dec
and
in
mov
cs
inc
push
cmp
or
icebp
mov
inc
push
test
pop
mov
mov
jl
lahf
stos
mov
mov
ins
dec
push
sub
mov
cmp
or
fadd
xchg
sub
sbb
ss
xchg
and
mov
mov
fild
(bad)
leave
out
mov
jecxz
enter
sti
pause
inc
(bad)
or
and
mov
test
in
lea
inc
add
scas
add
ffree
mov
and
scas
dec
sub
sar
sbb
or
cmp
fild
rcl
outs
jle
mov
xor
loope
dec
cmc
imul
leave
push
out
jecxz
sbb
daa
xchg
inc
lds
in
xchg
jae
dec
push
mov
ret
push
hlt
scas
fist
push
lahf
pop
popa
je
sub
push
gs
sub
retf
(bad)
jmp
test
aam
pop
xchg
fild
sub
stos
push
or
clc
(bad)
jns
jle
cmp
pop
mov
add
clc
sub
mov
hlt
loope
pop
add
lods
mov
pusha
dec
or
or
popf
cwde
ret
pop
sti
enter
push
outs
clc
cs
lock
adc
xchg
rcr
mov
lods
lahf
mov
aam
or
mov
mov
test
add
xchg
in
jge
lahf
js
xor
sbb
xchg
es
addr16
popa
mov
scas
or
and
cmp
sub
repnz
fimul
dec
adc
xor
push
popf
mov
push
ss
ret
xchg
xor
or
push
and
adc
sbb
or
movs
push
push
jmp
out
shl
mov
mov
jns
aad
movs
call
push
loopne
mov
xchg
jle
mov
aam
mov
mov
bound
mov
mov
cmps
mov
push
ss
lds
dec
inc
and
push
cmp
jmp
mov
and
fild
mov
sbb
sub
pop
in
push
cmp
test
inc
icebp
fwait
push
xor
xor
add
in
(bad)
div
retf
xchg
mov
mov
scas
sub
(bad)
xchg
inc
xchg
adc
ror
repnz
jl
dec
jne
or
mov
mov
push
repnz
inc
sbb
push
mov
ds
xchg
push
or
inc
mov
xchg
cli
scas
push
test
neg
fbstp
out
outs
sbb
jne
mov
jecxz
arpl
loop
clc
outs
bnd
add
ret
test
sbb
pushf
fwait
clc
sbb
dec
cmp
pop
cmp
mov
outs
jl
xchg
cmp
pop
push
(bad)
xor
cmps
aad
mov
repz
sub
bound
es
arpl
aad
test
or
repz
sub
addr16
xor
rol
fidiv
adc
leave
push
shr
mov
jmp
int
and
xor
lods
jne
jg
mov
outs
pop
jge
jmp
mov
hlt
mov
ret
mov
cdq
jnp
xchg
test
dec
clc
mov
(bad)
mov
push
sahf
adc
lahf
out
mov
mov
or
add
xlat
pop
pushf
int3
hlt
imul
sbb
push
dec
retf
mov
pop
ins
push
or
pop
rcr
lds
sub
or
es
push
adc
dec
pop
push
dec
xor
pop
xor
mov
cmp
(bad)
jmp
jo
xor
mov
jo
retf
(bad)
sbb
xor
dec
retfw
pop
hlt
push
fmul
mov
outs
push
mov
mov
aas
or
add
fnstenv
adc
jnp
mov
cmp
popa
mov
(bad)
leave
mov
mov
out
lods
adc
arpl
cmps
jmp
dec
add
sar
pop
push
repz
ds
xor
pop
test
and
sub
icebp
movs
sbb
out
imul
mov
and
push
jg
cmp
movs
or
cs
inc
xchg
mov
add
fistp
and
add
inc
cli
add
mov
mov
mov
test
cmp
mov
rol
loope
out
push
mov
call
adc
jb
and
mov
jl
push
xchg
mov
icebp
cmp
dec
pop
fistp
pop
push
out
lea
fimul
ret
mov
jle
sbb
mov
fadd
jmp
out
cli
lahf
adc
pop
(bad)
pop
cmp
add
movs
jge
sub
push
ror
sub
sbb
aam
pop
inc
sbb
jnp
je
dec
xor
mov
scas
inc
fwait
xor
leave
xor
sbb
push
cmp
cld
out
xchg
mov
xchg
inc
out
pop
lods
and
repnz
sbb
ret
adc
add
mov
repnz
mov
xor
inc
ds
or
jmp
in
pusha
hlt
fbstp
test
popf
add
push
xchg
inc
sbb
stos
int3
movs
scas
push
rol
lods
nop
lds
mov
xchg
jo
popa
sbb
and
adc
pop
(bad)
stc
pop
inc
push
cmp
in
test
cmp
inc
clc
cmps
add
mov
addps
xchg
push
dec
enter
dec
push
pushf
xor
pop
push
aaa
sub
in
pop
bnd
add
repnz
xor
lock
test
ins
xchg
scas
xor
bound
push
or
neg
scas
movs
cmp
(bad)
jnp
mov
lock
dec
and
mov
loopne
nop
xchg
jle
pop
push
or
out
out
rcl
mov
mov
push
fadd
in
jg
sub
inc
mov
mov
pop
pushf
xor
lods
sub
in
pop
xchg
push
ret
pop
xchg
or
lds
cmp
enter
dec
mov
or
mov
icebp
and
xchg
int
(bad)
or
mov
mov
aad
idiv
push
movs
sbb
jl
ds
mov
xchg
lods
ss
push
mov
sahf
xchg
or
xor
xchg
push
into
xchg
pop
test
test
sar
fsubr
push
int
or
pop
out
inc
cmp
push
fwait
cld
les
stos
pop
pop
punpcklwd
adc
pop
je
xchg
cmc
add
mov
add
out
shr
adc
mov
imul
push
ret
pop
out
pop
arpl
mov
push
in
retf
dec
in
pop
aaa
sub
inc
aaa
icebp
dec
in
repz
lds
ja
loopne
cmp
xchg
mov
and
(bad)
icebp
shr
(bad)
daa
scas
mov
lea
push
jo
(bad)
jbe
xchg
cmps
pop
sub
imul
dec
inc
sub
cmp
mov
loope
mov
pop
lods
loopne
push
xor
imul
jmp
mov
fs
inc
aaa
shr
cmp
fsqrt
inc
fcom
adc
test
es
fsub
enter
pop
jb
cmp
adc
(bad)
jne
jecxz
(bad)
mov
std
inc
mov
rol
sahf
fsub
ins
test
pusha
jmp
mov
in
into
xor
and
dec
cmp
sub
test
fdiv
pop
ret
or
jno
sub
out
or
ret
cmps
add
cmp
scas
(bad)
scas
or
push
mov
jb
xlat
das
lea
in
jmp
repnz
dec
jmp
aas
sbb
int
in
xor
scas
out
push
xchg
stos
hlt
lods
scas
mul
mov
dec
or
xchg
jne
jl
rcl
mov
sub
jb
cmp
mov
add
xchg
xor
dec
cdq
maxps
xchg
cmp
stos
inc
cmps
lea
xchg
add
(bad)
popf
(bad)
xor
push
mov
in
into
mov
dec
fisttp
sub
loope
das
inc
jge
mov
push
rcl
aas
sub
movs
sub
enter
jmp
je
cli
jle
dec
ds
or
jmp
jmp
sub
in
mov
sti
std
mov
or
mov
push
loopne
dec
mov
aam
jno
or
cmp
in
and
imul
jge
mov
in
lods
add
jbe
sbb
out
add
sub
and
sub
mov
rol
add
clc
push
mov
test
jne
ins
enter
fmul
popa
xor
push
daa
cmp
cmp
gs
fwait
push
pop
inc
aad
push
inc
stos
aaa
mov
pop
shl
cmps
out
or
outs
or
test
mov
sbb
push
add
pusha
dec
in
les
bound
fnstcw
(bad)
or
gs
add
ins
xchg
cdq
mov
shl
std
inc
jg
(bad)
hlt
mov
mov
lock
cmc
push
out
pop
push
mov
out
and
push
and
ret
outs
xor
adc
xchg
popa
mov
sub
daa
xchg
xchg
mov
imul
inc
mul
sbb
addr16
loop
ja
xchg
or
mov
repnz
pop
cmc
stc
cmps
popa
add
and
(bad)
jb
jo
fstp
pushf
sbb
daa
(bad)
xchg
pop
stos
sub
add
sbb
mov
movs
mov
ja
mov
mov
add
ja
popa
test
into
lahf
nop
push
add
push
adc
inc
dec
jl
push
test
inc
cwde
movs
jg
js
mov
push
inc
(bad)
imul
jbe
xchg
cdq
fld
sti
leave
lods
enter
inc
daa
fwait
inc
fneni(8087
mov
mov
sahf
repnz
push
fs
mov
sbb
xchg
jno
mov
sbb
in
ss
call
cmp
loopne
dec
sub
or
aad
mov
jmp
imul
sbb
jno
jecxz
cli
pop
cmp
inc
jns
sub
ficom
cmc
add
or
xor
(bad)
cmp
adc
cli
and
popf
inc
push
retf
xor
or
repz
popa
cld
sub
(bad)
fadd
dec
(bad)
push
int
popf
pop
outs
cld
adc
push
dec
push
daa
inc
test
adc
and
dec
aam
shr
cmp
in
adc
mov
je
ds
in
out
iret
push
out
push
mov
stc
scas
or
inc
lods
lods
dec
inc
(bad)
sahf
cmp
xchg
mul
frstor
mov
je
sbb
rcl
test
lods
adc
pusha
out
add
in
loopne
mov
xor
dec
fiadd
imul
push
ret
cmps
out
sti
jp
outs
and
ins
cmp
dec
adc
call
ja
das
dec
push
rcl
and
loopne
pop
mov
hlt
mov
push
rep
ins
jmp
daa
cmp
in
add
inc
lock
mov
mov
sub
cmp
cmp
test
fimul
adc
inc
mov
sub
cdq
inc
pop
ret
xor
int
mov
sahf
or
jmp
test
push
sub
sub
xor
rol
pop
pop
push
scas
mov
mov
or
movs
push
pop
call
lea
nop
dec
fsubr
push
loop
push
outs
div
mov
sar
movs
enter
sti
push
arpl
call
push
das
sahf
adc
cmps
pop
in
test
std
mov
lds
cmp
jbe
mov
mov
inc
cmp
test
mov
test
cmps
lahf
pushf
cli
xchg
xor
out
sbb
lea
cs
sub
and
jl
movs
mov
xchg
popf
cmp
add
test
enter
sub
mov
rcl
inc
sti
xchg
or
push
sbb
and
jno
out
test
mov
cmp
xor
xchg
inc
mov
mov
sti
ss
shl
push
cmp
(bad)
mov
clc
out
daa
in
pop
ror
mov
mov
adc
mov
pop
div
imul
imul
lahf
pop
jmp
clc
out
push
mov
and
or
fist
test
dec
jmp
xor
or
mov
in
push
inc
xor
mov
jg
push
adc
dec
or
sub
and
(bad)
mov
adc
inc
mov
out
scas
pop
push
xor
outs
push
imul
add
in
sub
call
imul
adc
(bad)
sahf
movs
imul
xchg
mov
ret
jno
call
retf
xor
dec
scas
pop
pop
mov
lods
fisttp
mov
arpl
or
ror
loop
push
adc
popf
imul
adc
out
xor
jae
adc
fldcw
lock
lods
xor
mov
xchg
xor
retf
pusha
or
pop
outs
in
mov
cmps
cmp
xlat
js
aam
mov
xor
adc
push
sub
leave
push
test
std
outs
pop
xchg
mov
iret
push
dec
jge
xchg
and
jne
mov
adc
adc
repnz
mov
adc
adc
and
repnz
sahf
cs
sbb
sar
(bad)
sar
mov
retf
push
and
pusha
sbb
mov
mov
stos
push
adc
es
mov
dec
jb
lea
cmc
and
xor
sub
es
xchg
jmp
push
rcr
rol
cmp
(bad)
fisub
mov
push
jg
int
arpl
sahf
fsubr
sub
test
xchg
inc
cmps
rcr
pop
lods
das
xor
push
daa
jns
test
mov
int3
sbb
and
icebp
or
xor
nop
lods
add
pop
call
sahf
xchg
xlat
push
daa
stos
sub
cwde
mov
mov
sub
xchg
jno
add
mov
mov
mov
inc
cmps
clc
pop
or
arpl
sub
mov
xlat
fdiv
mov
lods
push
es
sbb
clc
cmps
or
push
data16
sar
enter
mov
or
shr
ret
xor
sub
inc
lds
jmp
xor
cmps
enter
iret
and
call
add
jae
in
and
aaa
into
les
jnp
jl
xchg
fnstsw
push
gs
(bad)
cmps
les
sbb
mov
jbe
(bad)
out
lock
jl
pushf
dec
adc
(bad)
dec
mov
aaa
es
std
maxps
or
inc
inc
es
in
out
clc
sbb
inc
or
mov
leave
jmp
xor
jg
push
dec
sub
hlt
add
and
sbb
jbe
ins
add
push
inc
inc
xchg
aad
outs
xchg
or
rcl
xchg
pop
xchg
pop
aaa
push
jo
lahf
imul
push
sbb
test
ds
add
aaa
push
sar
cmps
xor
scas
lahf
cmp
lea
and
cmps
lods
cdq
das
add
jae
ds
jne
or
inc
pop
fs
(bad)
aaa
call
test
jbe
(bad)
add
pop
nop
fidiv
cwde
xchg
stc
lods
fldz
dec
mov
ror
mov
or
int3
loop
jae
dec
popf
popf
retf
shl
push
or
mov
out
adc
inc
sbb
or
xor
dec
(bad)
leave
mov
push
(bad)
mov
mov
pop
mov
adc
test
mov
xchg
or
loop
aas
ret
pop
add
mov
arpl
adc
push
sbb
inc
pop
sti
pop
mov
hlt
sbb
adc
fidivr
jmp
outs
fwait
mov
cli
jmp
inc
fs
mov
adc
dec
cmp
push
cmp
scas
cmc
mov
cdq
shl
jb
mov
out
mov
cdq
pop
xor
xor
es
xchg
aam
call
or
rcr
jmp
xchg
mov
push
dec
jns
dec
movs
mov
aam
es
outs
mov
scas
dec
xchg
fsubrp
sbb
jecxz
cs
or
nop
cs
xor
sbb
addr16
push
xchg
fdivr
cmp
pop
sbb
pop
xchg
shr
movs
cmp
das
jne
cs
cmp
pop
test
mov
xchg
jmp
enter
inc
fldcw
xchg
sti
in
push
repz
ficom
cs
cmps
cwde
ret
outs
dec
icebp
idiv
je
xchg
cs
jb
xlat
es
inc
enter
std
fptan
xchg
(bad)
push
xor
fs
dec
mov
cs
in
xor
pop
pop
pop
inc
lods
aad
and
gs
jp
xchg
adc
inc
int3
xor
(bad)
adc
dec
fist
cmp
in
sub
std
lds
loope
out
dec
push
jmp
frndint
jge
inc
mov
sbb
push
mov
sbb
adc
arpl
push
std
xchg
mov
cdq
in
sbb
stos
movs
cmps
pop
jno
cmps
inc
cs
(bad)
inc
call
sbb
dec
cmp
and
xchg
dec
jge
pushf
sub
inc
cmp
sahf
sbb
cmp
out
mov
mov
cwde
fwait
push
jmp
cmp
(bad)
adc
fwait
arpl
inc
or
aad
xor
xor
in
push
mov
int3
cmp
sub
push
or
jl
push
in
ins
jmp
cmc
xlat
dec
inc
or
adc
mov
ss
aam
or
fwait
test
push
loop
xor
outs
push
div
fcomi
mov
xor
push
fnsave
mov
or
das
addr16
sub
call
pop
sub
mov
ja
sbb
inc
inc
add
loopne
push
in
stos
add
xchg
fldcw
mov
pushf
mov
and
call
(bad)
call
call
lods
cmps
xchg
stos
pop
xchg
ja
mov
xchg
das
sbb
dec
cmp
(bad)
rol
jl
push
mov
test
bound
movs
xlat
xchg
xchg
inc
inc
in
clc
mov
test
fidiv
sub
int3
push
xlat
fs
retf
mov
and
pshufw
sub
ss
adc
out
inc
div
cmp
stos
sub
rol
lds
sbb
setb
add
(bad)
xor
jge
sub
and
cmps
push
retf
mov
and
mov
cdq
loopne
call
stos
jae
aad
ret
lods
aad
mov
push
daa
push
sti
shl
mov
rcr
mov
mov
outs
les
(bad)
mov
call
shl
into
add
mov
mov
and
enter
jns
add
retf
pop
sub
ja
dec
icebp
imul
stos
nop
jmp
cmp
mov
dec
sub
ss
inc
int3
leavew
jnp
fwait
xchg
fs
daa
out
jecxz
push
repnz
inc
std
add
jo
(bad)
lock
(bad)
out
outs
cmp
jb
leave
jo
loopne
sar
pop
mov
add
jns
mov
push
or
fldenv
mov
outs
outs
ins
das
(bad)
in
out
inc
inc
cmc
mov
das
mov
mov
add
jecxz
xchg
mov
add
mov
pop
std
add
adc
dec
push
jmp
test
sbb
or
das
sbb
mov
sub
ret
shl
push
(bad)
add
sti
xchg
(bad)
push
mov
sbb
sahf
mov
bound
call
pmulhw
jae
dec
push
xchg
not
xchg
sahf
xor
cld
clc
fcom
jmp
push
div
pop
jno
repz
leave
test
popf
mul
loopne
out
pop
mov
out
and
sahf
bound
mov
jnp
jecxz
add
push
xor
or
out
push
scas
in
inc
mov
icebp
std
jae
mov
jne
das
lock
les
call
mov
stos
gs
push
pop
push
mov
push
outs
add
mov
js
mov
(bad)
and
xchg
xchg
sbb
lock
jmp
mov
or
xor
jmp
push
and
test
mov
std
leave
loop
add
nop
jno
mov
sbb
popa
cmps
daa
mov
inc
mov
int3
mov
dec
jae
gs
retf
fs
retf
cmp
jno
cmp
xlat
adc
rcl
test
in
inc
jnp
dec
sub
in
(bad)
fsincos
mov
dec
xchg
dec
ret
test
jmp
mov
adc
lock
punpckldq
cli
xchg
rcl
jb
push
stos
into
rcl
cmc
xchg
movs
xor
sub
xchg
sbb
rcl
sbb
and
mov
sti
aam
push
pop
(bad)
cmp
dec
xchg
sub
mov
cmp
mov
dec
and
leave
mov
lahf
loop
sub
cmp
push
pop
dec
pop
movs
and
xor
push
inc
and
jo
aam
push
(bad)
shl
cmc
dec
(bad)
sbb
cmc
jns
and
add
mov
scas
pushf
and
mov
int3
push
std
push
push
pop
js
push
stos
ins
pop
in
lea
js
fstp
jne
outs
add
jle
mov
inc
out
or
out
sub
or
xchg
repz
in
xchg
movs
push
imul
dec
inc
ret
mov
rcl
in
cmp
out
xchg
pusha
push
mov
fdivr
push
int3
dec
call
push
mov
lds
sbb
daa
(bad)
mov
cmp
pop
mov
icebp
jae
xor
mov
or
xchg
in
xchg
aas
in
lods
cmp
call
pop
lods
imul
test
dec
or
push
mov
lods
outs
loope
xlat
ins
mov
jle
xchg
div
xor
push
out
fcmovnu
xor
das
push
push
test
jmp
test
pusha
inc
dec
jbe
imul
into
jb
push
repnz
sar
cli
sbb
lea
jmp
div
loope
imul
int3
clc
mov
lea
mov
ficomp
ret
das
lods
jle
cmp
(bad)
jns
scas
test
or
std
shr
fstp
cs
dec
dec
cli
pop
mov
adc
inc
xlat
(bad)
std
ins
jb
outs
inc
das
jmp
mov
hlt
aam
or
xchg
aas
aam
mov
xor
or
sub
rcl
mov
fcomp
imul
jg
ins
add
and
call
xlat
push
daa
xchg
retf
dec
jmp
adc
and
aaa
lods
movs
inc
jns
mov
xchg
sub
outs
push
ficom
xchg
mov
xchg
mov
sti
pop
push
ret
xor
mov
outs
dec
mov
popf
retf
mov
add
jmp
or
mov
mov
in
test
mov
inc
ficom
jo
inc
loop
fcom
xor
cwde
mov
xor
outs
jne
mov
jno
mov
add
loopne
cmp
fisubr
fst
loope
adc
pop
jg
test
aaa
inc
cmp
push
mov
jg
retf
movs
and
mov
mov
cmps
loopne
jae
icebp
pop
adc
mov
(bad)
call
pop
sbb
xor
jecxz
je
mov
xlat
dec
cmp
out
fisubr
hlt
cmp
or
fst
leave
data16
loop
call
rcl
rcl
shl
sbb
mov
stos
inc
cmc
or
add
daa
add
mov
sti
lods
adc
add
lahf
mov
retf
xchg
loop
pop
mov
sub
sbb
jle
imul
jl
pop
cmp
cmps
fsubr
pop
scas
nop
pop
or
bound
dec
inc
cmp
jp
cmp
adc
dec
test
ss
aaa
mov
pop
dec
jno
adc
push
mov
cdq
(bad)
push
inc
xchg
(bad)
cmc
in
out
jne
nop
(bad)
jne
jnp
in
sub
push
or
js
retf
fcmovne
mov
rcr
add
lods
xchg
addr16
arpl
sub
adc
push
hlt
fldenv
push
or
pop
jl
and
shr
jb
ins
fs
push
aam
in
stos
jge
xchg
dec
xchg
cli
jbe
dec
pushf
push
and
iret
into
mov
fs
xor
add
sbb
mov
enter
xchg
mov
lods
mov
cmps
jns
psubusw
hlt
lahf
fwait
mov
enter
test
mov
xchg
jl
dec
mov
push
or
retf
into
jmp
movs
mov
inc
mov
daa
int
mov
xchg
jmp
xor
xchg
or
stos
imul
sub
outs
mov
xchg
call
test
xchg
shl
jne
retf
mov
stos
lahf
ins
cwde
cmp
mov
xchg
xchg
jmp
pop
xchg
sbb
(bad)
or
adc
dec
xchg
xchg
adc
dec
icebp
(bad)
fimul
pop
xchg
mov
pushf
ins
push
fdivr
push
mov
jbe
les
or
adc
lahf
and
pop
out
xchg
in
stc
mov
ins
std
mov
and
pop
sbb
out
loop
lea
pop
xor
popa
inc
sub
push
push
aas
cmps
int3
call
sub
ret
inc
add
fwait
jg
leave
ins
ss
mov
fstp
iret
add
repz
cmp
push
int
push
jmp
mov
mov
sub
push
out
pop
out
and
cmovo
movs
repz
loop
in
std
mov
pop
pop
mov
or
test
inc
out
mov
in
dec
dec
das
mov
jns
fisttp
jo
fistp
sahf
adc
shl
in
rol
aaa
jmp
stos
or
pop
push
inc
fwait
popa
mov
scas
fstp
lock
push
cmp
(bad)
fld
push
sbb
int
jb
adc
sub
xchg
push
(bad)
cli
fwait
jb
sahf
shl
addps
iret
(bad)
sub
ds
add
stos
pop
in
ror
and
shr
movs
jb
xor
cmp
js
in
inc
outs
mov
push
push
les
es
jno
jge
gs
pushf
fisttp
daa
add
jb
pop
dec
cwde
jge
clc
jge
xchg
jge
repnz
cmp
mov
or
shl
sahf
pop
inc
fnstsw
sub
call
and
sub
pop
push
out
cmp
aas
xor
mov
iret
imul
jmp
cmp
dec
ret
test
push
cmc
shr
sub
ja
daa
sti
jae
cmps
sub
repz
pop
adc
loope
inc
lods
jo
retf
mov
fwait
not
fld
and
rcr
je
std
push
jns
(bad)
adc
dec
sub
jle
test
or
cmp
ret
shr
(bad)
ja
popf
push
push
jg
inc
(bad)
adc
inc
pop
mov
repz
xchg
lods
fucom
cld
mov
(bad)
xchg
lock
outs
or
sub
cmovbe
ins
xlat
(bad)
jmp
scas
(bad)
mov
cmp
jnp
xor
clc
mov
icebp
mov
pop
test
mov
ds
gs
and
xchg
push
pop
mov
sub
stos
out
push
sub
aam
pop
sub
cmp
sbb
mov
xor
inc
mov
fistp
rcr
lods
sub
(bad)
mov
mov
mov
inc
adc
pushf
jae
and
(bad)
cmp
out
add
push
iret
(bad)
mov
repz
sub
popa
mov
out
mov
sar
out
push
jl
mov
adc
popa
aaa
dec
inc
add
xchg
mov
mov
inc
and
jmp
and
or
jbe
jns
adc
idiv
adc
push
or
inc
clc
mov
jp
mov
stos
scas
pusha
fcomp
sub
mov
dec
fwait
xchg
mov
mov
pop
pop
dec
jno
bound
inc
pop
mov
pusha
ja
jns
iret
jo
jp
mov
pop
xchg
mov
jmp
sub
jbe
mov
cs
sbb
inc
loopne
leave
ds
dec
jecxz
add
loop
nop
lods
xchg
into
jecxz
sahf
mov
out
es
ja
mov
loope
ins
xor
(bad)
repnz
mov
and
dec
aad
add
mov
lds
push
push
sub
cmp
mov
jmp
and
(bad)
sub
loope
dec
mov
and
test
dec
outs
xlat
or
das
in
push
xchg
push
sub
cli
int
bound
dec
adc
imul
dec
addr16
fwait
out
sub
movs
lods
inc
aad
leave
jl
push
ss
fist
stos
mov
lea
popf
and
nop
loopne
stc
adc
push
call
clc
fwait
pop
int
repz
loopne
cmc
xchg
es
push
xchg
(bad)
cmc
in
int
ds
call
(bad)
pop
(bad)
jmp
dec
call
aad
xchg
movs
jmp
xor
scas
clc
mov
push
inc
mov
out
xor
and
fcomp
adc
pop
sub
loopne
fs
lock
xchg
jbe
and
in
mul
nop
or
fs
or
ficom
test
xchg
and
mov
xor
nop
xor
(bad)
hlt
push
push
das
sbb
aas
jmp
cmps
pushf
ror
ins
shl
mov
xor
sbb
push
pop
test
xor
lahf
mov
dec
lahf
shl
mov
fs
sbb
xor
cmps
pop
pop
ins
push
std
mov
fsubrp
ror
(bad)
(bad)
fild
or
adc
mov
dec
xchg
or
pop
pop
add
into
(bad)
(bad)
mov
fimul
gs
stos
repz
scas
sbb
push
out
(bad)
mov
es
push
mov
inc
out
ror
into
push
test
std
(bad)
cmp
fs
mov
ja
rcr
mov
fsubr
inc
or
pushf
out
nop
shl
inc
push
(bad)
in
inc
fdiv
or
xchg
sbb
test
popf
mov
xchg
lock
jmp
dec
sbb
mov
vxorps
lds
add
sub
sar
loopne
hlt
shr
mov
mov
xor
xchg
call
lds
adc
and
lods
pop
ds
sub
push
xor
arpl
adc
push
test
in
out
mov
cli
xchg
dec
sti
sti
cmc
jecxz
addr16
popa
mov
pop
fisubr
sub
mov
fimul
dec
pop
add
in
jmp
dec
inc
out
jns
pop
test
ss
movs
(bad)
(bad)
enter
fist
pop
int
fstp
(bad)
mov
inc
push
and
jae
or
rcl
inc
pop
sub
cs
mov
dec
adc
and
cwde
xor
push
and
jg
movs
inc
jle
cmc
xchg
in
inc
jmp
movs
int
and
mov
jecxz
scas
xor
mov
xor
test
test
iret
std
sbb
jge
sub
jmp
(bad)
out
ds
rcr
push
dec
shr
in
jge
fwait
inc
repz
(bad)
xor
vcvtpd2ps
out
fiadd
push
push
xor
inc
dec
and
mul
cmp
dec
mov
mov
mov
or
push
fidiv
js
stc
(bad)
shl
call
int3
inc
ret
mov
leave
mov
inc
rcr
ret
ret
or
inc
std
leave
lods
test
xor
das
call
push
fdivr
add
jo
or
(bad)
fidivr
stc
cmp
add
jp
lods
mov
loop
call
sub
fcomi
sbb
or
cwde
push
mov
and
xchg
std
out
pop
xor
xor
nop
xchg
movs
rcr
fmulp
(bad)
and
and
cmp
inc
inc
push
lods
cli
cmp
loopne
adc
int
icebp
test
dec
mov
mov
popf
jae
mov
jns
dec
ror
shr
xchg
mov
and
ins
mov
loopne
dec
and
cmp
jg
cmp
or
or
dec
or
repz
fdivr
icebp
retf
mov
xchg
and
ins
out
arpl
jbe
aas
adc
inc
adc
movs
idiv
pushf
ja
pushf
sar
mov
sbb
daa
inc
in
push
xlat
cmp
icebp
rcr
mov
jmp
jl
loop
pusha
je
add
xchg
cdq
sbb
mov
outs
mov
xor
adc
xchg
xchg
mov
ss
jno
outs
cmp
dec
or
push
inc
jg
sbb
push
ins
inc
sub
icebp
fcom
(bad)
js
aad
les
mov
cmc
stos
or
push
into
jmp
sbb
push
fiadd
push
mov
and
add
call
aam
out
cwde
jae
push
push
jb
xchg
out
pop
pop
mov
sub
jmp
dec
sub
xchg
es
call
mov
retf
pop
lahf
jge
retf
pop
sahf
adc
mov
fcom
(bad)
les
test
lods
xchg
inc
inc
aam
retf
cmp
jno
inc
jno
ja
das
dec
mov
xor
xchg
jmp
int3
sub
fnstenv
stos
pusha
and
mov
add
xchg
stos
cmp
and
xor
fild
pop
push
xchg
mov
dec
arpl
push
outs
fwait
mov
sbb
ss
jo
out
mov
sub
sbb
or
sbb
push
ja
sub
or
or
ror
stos
jo
out
and
mov
jo
retf
in
mov
xchg
into
pop
out
aam
xchg
sti
out
and
clc
aas
push
lods
sub
test
jp
or
adc
dec
pop
or
jg
lods
dec
mov
sbb
jmp
ins
fidivr
mov
int3
ja
mov
xor
cmp
icebp
(bad)
int
cld
cmp
call
mov
imul
mov
cld
or
fcomi
and
xchg
stc
jge
cmc
bound
mov
sub
ins
jl
mov
fwait
lahf
in
and
test
rcl
gs
mov
push
and
cmp
adc
aas
imul
push
mov
pop
call
mov
(bad)
pop
jno
pusha
fisub
test
inc
push
sub
loope
push
or
jmp
sbb
cwde
sbb
and
ret
xlat
mov
das
jbe
mov
enter
retf
shl
jne
cli
or
sar
cmps
sbb
or
push
sub
call
inc
movs
cmp
pop
add
stc
mov
mov
cmp
(bad)
ins
jl
sbb
pop
push
adc
(bad)
fiadd
mov
fnstsw
mov
into
lahf
mov
call
test
fs
mov
adc
push
push
or
(bad)
xor
jmp
add
mov
(bad)
sub
jo
fisttp
popf
and
es
sbb
ja
mov
js
nop
adc
(bad)
jg
adc
add
clc
jle
adc
mov
(bad)
add
(bad)
in
jbe
sbb
jno
cmp
out
sbb
(bad)
(bad)
or
jecxz
cmp
outs
or
mov
cmp
popa
sar
ins
xchg
push
mov
fwait
mov
dec
les
jb
and
push
arpl
xchg
fdiv
or
xor
ret
mov
and
add
sbb
push
xchg
iret
cmc
mov
int
fst
iret
rcr
push
icebp
pop
jne
xor
pop
test
icebp
stos
mov
cmp
and
adc
dec
mov
cli
out
movs
mov
xor
(bad)
mov
fadd
push
sub
dec
fs
arpl
(bad)
cwde
outs
mov
loopne
cmp
int3
mov
push
mov
neg
shl
cmp
sahf
mov
(bad)
aam
(bad)
xor
es
push
ret
popf
movs
add
and
addr16
imul
mov
adc
ins
jne
pop
pop
cmp
repnz
xchg
sbb
cmp
adc
cmps
mov
pop
jae
push
je
test
cld
fisub
jo
mov
repnz
adc
(bad)
xchg
or
add
mov
jle
cmp
mov
jge
addr16
jb
push
(bad)
sub
ins
rcr
repz
mov
or
fistp
fs
dec
xchg
(bad)
push
inc
loopne
cli
shl
pop
push
cld
fild
ret
fld
pop
outs
add
inc
iret
loop
call
xor
add
gs
mov
test
sub
sub
fldcw
leave
inc
inc
adc
daa
ret
loop
imul
fs
mov
outs
in
mov
fcomp
or
lahf
jae
ret
push
push
test
mov
dec
mov
popa
jge
cmp
out
scas
mov
mov
add
dec
gs
popf
sbb
mov
sbb
movs
cli
adc
cmp
and
adc
sti
mov
scas
mov
rcr
out
mov
inc
(bad)
sub
in
stos
sub
push
push
jp
dec
mov
outs
add
ds
shl
fs
sbb
jb
ins
aaa
retf
outs
(bad)
xor
enter
inc
(bad)
mov
xchg
shl
inc
push
pop
push
push
xchg
adc
test
xchg
stc
mov
adc
pop
jnp
mov
mov
xor
stos
lahf
inc
ins
movs
jnp
dec
mov
mov
loope
inc
push
mov
cld
imul
sub
or
stos
inc
out
pop
mov
mov
retf
add
bound
adc
pop
cwde
push
pop
ret
outs
loope
jg
jmp
or
pop
(bad)
cli
sbb
cmc
movs
in
cmc
lds
mov
xchg
sub
mov
lods
cmc
not
ds
cmp
mov
movs
mov
outs
cwde
or
dec
es
outs
bnd
push
pop
out
jne
js
fsubr
jmp
cmps
fdiv
fidivr
daa
ins
bound
mov
jno
pop
cmp
xchg
mov
mov
adc
sbb
inc
je
cwde
xlat
mov
jg
scas
je
xchg
mov
dec
mov
dec
cmc
jmp
stos
fs
push
sbb
push
sbb
aaa
mov
(bad)
(bad)
ins
(bad)
ds
into
cld
push
clc
mov
or
add
inc
hlt
push
ror
cdq
push
inc
mov
pop
sub
jbe
push
test
sub
cmp
js
pushf
lods
mov
rol
retf
inc
xor
sbb
ret
xchg
movs
test
sti
inc
es
and
mov
(bad)
jmp
out
add
jmp
movs
dec
add
mov
aas
out
inc
mov
fcompp
inc
lahf
and
push
out
into
push
shl
nop
cs
add
fbstp
xchg
(bad)
or
dec
mov
add
xchg
hlt
xchg
sbb
outs
iret
push
repz
(bad)
mov
pop
ror
imul
mul
mov
fild
push
loope
push
hlt
cmp
in
std
pop
fidiv
mov
movs
rcr
or
push
sbb
cmp
(bad)
xor
inc
mov
inc
jmp
stos
sub
je
cmovb
dec
push
or
movs
frstor
sbb
fcom
in
(bad)
xchg
xchg
mov
mov
stos
sar
aam
mov
pop
sub
pop
inc
xor
or
(bad)
clc
add
dec
sub
aas
jg
push
inc
mov
cmps
out
int
jecxz
test
jnp
std
aam
adc
add
inc
ror
cmp
jecxz
in
scas
mov
ins
jl
test
sub
cmp
fwait
sub
call
movs
xor
ret
sub
loopne
mov
xor
dec
xchg
repz
daa
aaa
int
push
retf
push
cmps
not
mov
stos
addr16
int3
cmc
and
pop
jmp
xchg
mov
pop
cmp
mov
push
cmp
sahf
dec
cs
imul
sub
into
in
fld
rcr
sub
cmps
push
daa
loop
xor
aad
mov
push
cs
xchg
shl
mov
pop
mov
lea
into
aam
sar
lock
inc
mov
icebp
sar
daa
cld
pop
stos
mov
mov
mov
mov
repnz
jmp
dec
inc
retf
mov
stos
imul
or
fmul
lds
call
ret
cmp
dec
xlat
in
pusha
mov
cmp
inc
loopne
push
rcl
inc
and
cmp
jge
mov
pop
sbb
jg
adc
rol
shl
mov
sbb
mov
dec
ret
ret
mov
cmp
push
ss
mov
jmp
add
mov
inc
fwait
push
(bad)
cld
pop
and
cmp
push
fisub
sub
sbb
pop
(bad)
mov
sbb
mov
xchg
sbb
inc
jge
fild
push
push
retf
movs
jnp
scas
inc
lods
movs
push
xchg
dec
out
inc
and
(bad)
retf
mov
cld
sub
jp
scas
es
ffreep
pop
fstp
cmp
fisub
mov
mov
lods
add
xchg
dec
cmps
jmp
call
daa
out
adc
mov
(bad)
pop
outs
pop
cmp
jae
arpl
inc
retf
repz
push
pop
mov
scas
xchg
outs
imul
inc
out
pop
aam
cli
pop
xor
popa
sti
xchg
aam
cld
pop
cmps
daa
scas
hlt
pusha
sbb
add
pop
xchg
xor
xor
out
(bad)
fdiv
lds
lods
pop
mov
ret
ds
push
or
out
cmp
ja
mov
push
mov
sub
mov
cmps
xchg
mov
stc
jg
arpl
les
push
sbb
or
or
jle
xor
cdq
push
arpl
repnz
adc
clc
dec
aas
and
push
inc
sti
push
inc
xor
ret
lods
test
mov
pop
in
mov
sbb
int3
(bad)
dec
jmp
jno
pusha
fsubr
ret
and
adc
inc
cmp
neg
outs
stos
scas
or
cli
sar
xchg
or
push
pcmpgtd
and
mov
imul
push
add
add
push
clc
inc
push
xor
test
stos
jae
(bad)
movq
push
jnp
xor
loopne
push
pop
mov
pop
popf
in
outs
out
ret
pop
outs
pop
dec
add
stc
loop
and
lea
repnz
arpl
xchg
and
cmp
jnp
pop
hlt
fwait
inc
loop
movs
aam
mov
mov
dec
sub
loopne
into
adc
ds
iret
mov
mov
or
xor
ins
aam
int3
mov
jecxz
pusha
push
repz
sbb
ja
cmps
dec
xor
jnp
clc
(bad)
mov
and
ret
(bad)
xor
in
xor
add
and
into
(bad)
jg
mov
pop
inc
dec
jb
and
mov
popa
or
jns
xor
(bad)
das
aas
jmp
das
arpl
sbb
mov
fucomp
jg
lods
and
inc
add
movs
xchg
fwait
dec
sbb
mov
push
aas
test
out
fimul
icebp
(bad)
adc
in
or
inc
add
ror
pop
inc
outs
loope
sub
inc
dec
or
push
rol
jecxz
xchg
cld
mov
cs
stos
(bad)
loopne
ins
jae
push
repz
gs
sbb
inc
ins
fdivr
cmp
inc
sub
mov
inc
adc
loopne
bound
pop
inc
aad
mov
outs
add
pop
stos
jmp
popf
or
clc
adc
pop
mov
ror
adc
retf
and
mov
lea
pushf
jne
aas
arpl
test
popf
cmp
in
jp
sbb
jns
in
mov
jo
push
(bad)
(bad)
pop
jnp
icebp
icebp
cmp
mov
inc
ins
jecxz
add
fisttp
dec
sub
mov
outs
xchg
fdivr
mov
sbb
lods
xor
out
pop
ins
in
xchg
bound
inc
gs
data16
cmp
xlat
retf
data16
fs
ins
lods
(bad)
jmp
(bad)
loope
xchg
inc
inc
push
dec
sbb
and
mov
push
inc
push
pop
sub
stc
fbld
xor
jmp
test
int3
mov
or
ss
(bad)
sbb
test
aad
xor
xchg
mov
fist
lock
ret
and
pop
imul
dec
sub
fsub
aaa
add
stc
xor
and
lock
clc
mov
dec
arpl
imul
retf
call
out
jo
sub
push
sub
jne
sbb
xor
inc
stos
fisubr
xchg
cwde
fadd
ins
xlat
xchg
(bad)
imul
out
test
push
push
mov
push
and
mov
mov
dec
lds
in
retf
xlat
inc
add
popa
push
aas
adc
and
lds
call
retw
lods
fdiv
cmps
jecxz
call
xchg
mov
add
and
pop
ss
jmp
sbb
sar
pushf
jnp
xchg
inc
mov
mov
sub
lock
int
loopne
fcom
sub
mov
jns
test
mov
call
out
pop
dec
mov
adc
jmp
jmp
mov
xor
pop
push
push
inc
je
or
into
ja
adc
xchg
jo
mov
clc
lahf
stos
ds
pop
pusha
and
xchg
cld
mov
fwait
out
mov
push
jnp
push
and
jmp
shr
data16
xchg
enter
or
push
cwde
lock
cwde
adc
inc
pop
cmp
mov
sub
rol
bound
lods
addr16
ins
js
push
mov
inc
xchg
adc
in
(bad)
in
push
bound
test
mov
xor
sub
jl
ds
sbb
stos
mov
sbb
mov
jbe
iret
in
out
sbb
jne
je
vpunpckhqdq
mov
xor
xchg
mov
adc
sbb
loopne
push
mov
clc
ror
push
or
loopne
cmps
lahf
cmp
call
cmp
sbb
push
aaa
ja
sub
outs
mov
or
mov
jle
in
mov
retf
xchg
jecxz
arpl
loope
lds
ins
out
sub
test
and
cmp
jno
loope
retf
hlt
sahf
jne
pop
xor
cdq
out
jp
into
icebp
pop
push
out
or
mov
push
hlt
inc
sub
mov
dec
bound
hlt
dec
popa
and
add
jecxz
fst
xchg
movs
mov
mov
cmp
div
pushf
stos
mov
add
dec
mov
pusha
push
add
mov
fwait
cmps
mov
xor
sbb
cwde
add
(bad)
(bad)
mov
inc
xor
loopne
mov
(bad)
(bad)
hlt
psubsb
leave
dec
mov
fidivr
lods
adc
add
push
push
or
sub
inc
pop
and
dec
sub
adc
retf
push
int
in
xor
out
mov
or
sub
and
or
and
mov
lods
push
ja
dec
lds
adc
add
sahf
out
loop
cmp
pushf
movs
mov
cli
push
adc
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
clc
or
add
push
je
imul
add
add
add
push
push
add
pop
add
adc
add
and
dec
inc
add
add
pop
add
adc
add
and
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
adc
add
or
add
mov
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
sbb
add
push
add
add
add
push
add
add
or
rol
or
rol
add
add
or
push
add
adc
add
adc
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
adc
sub
add
add
adc
(bad)
or
add
add
add
add
in
add
add
add
add
push
in
add
add
add
add
add
add
add
adc
ins
pmulhw
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
xchg
add
add
and
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
lock
add
xchg
add
add
add
add
xchg
add
add
daa
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
daa
add
add
xchg
add
add
daa
add
add
xchg
das
add
adc
in
daa
add
add
adc
mov
add
daa
add
add
adc
inc
add
add
add
sub
add
add
add
add
add
add
sub
add
add
add
call
sub
add
add
add
add
sbb
add
add
adc
gs
inc
adc
and
add
add
adc
jmp
sub
add
add
add
pop
add
add
add
add
adc
test
add
add
add
add
add
aaa
add
add
add
add
adc
or
cmp
sub
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
xchg
das
add
adc
mov
add
add
xchg
add
or
adc
nop
sub
add
add
add
add
xchg
add
or
adc
cwde
sub
add
add
add
add
xchg
add
or
adc
mov
add
add
add
xchg
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
das
add
adc
mov
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
xchg
add
or
add
add
sub
add
add
add
add
add
add
xchg
add
or
add
add
sub
add
add
add
add
add
add
xchg
das
add
adc
sbb
add
add
xchg
add
add
sub
add
add
add
add
add
add
xchg
add
or
adc
sub
add
add
xchg
add
or
adc
sub
add
add
xchg
add
or
adc
xor
add
add
xchg
add
add
add
add
xchg
add
add
sub
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
pop
sub
add
add
add
add
add
add
xchg
add
or
sub
add
add
add
add
add
add
xchg
add
or
adc
ins
sub
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
nop
sub
add
add
add
add
xchg
add
or
cwde
sub
add
add
add
add
xchg
add
or
mov
add
add
add
xchg
das
add
adc
lods
sub
add
add
add
add
add
add
add
xchg
add
push
or
adc
mov
add
add
add
xchg
add
or
adc
shr
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
add
add
add
add
add
add
xchg
das
add
adc
or
add
add
xchg
add
or
adc
adc
add
add
xchg
add
add
add
add
xchg
add
add
sub
add
add
add
add
add
add
xchg
add
(bad)
add
add
sub
add
add
add
add
add
add
xchg
add
(bad)
add
add
sub
add
add
add
add
add
add
xchg
add
or
adc
xor
add
add
xchg
add
adc
add
add
add
add
xchg
das
add
adc
add
add
and
add
add
xor
add
add
cwde
add
add
add
add
add
add
add
add
adc
add
add
pop
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
add
lea
add
add
call
add
das
add
mov
add
adc
mov
rol
xor
cmp
add
retf
add
add
pop
add
pop
add
pop
push
stc
add
loope
pop
add
popw
pop
add
jmp
sub
adc
jb
aaa
add
add
add
add
add
mov
das
add
daa
add
add
add
add
add
in
or
jno
or
push
add
push
add
add
jbe
mov
mov
add
lods
add
adc
add
add
add
add
sbb
add
add
add
add
add
and
add
add
cmp
add
add
add
pop
inc
dec
inc
xor
outs
inc
je
jno
dec
add
inc
push
inc
dec
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
in
xchg
in
mov
mov
in
test
mov
in
mov
mov
in
xchg
in
test
mov
in
mov
mov
in
mov
mov
in
fwait
in
lods
in
pushf
in
mov
mov
in
lods
in
lods
in
xchg
in
cmps
in
cmps
in
mov
jb
jae
jne
arpl
add
outs
push
inc
push
dec
inc
push
inc
push
cmp
pop
dec
popa
gs
jbe
push
xor
data16
arpl
outs
jb
inc
xor
push
xor
push
bound
dec
ins
dec
pop
push
xor
pop
jb
dec
ja
ins
jne
xor
push
arpl
jns
je
ins
add
jb
outs
add
je
xor
imul
data16
xor
jns
aaa
jae
inc
add
inc
imul
dec
ja
pop
inc
js
xor
aaa
xor
push
push
jbe
dec
popa
arpl
ins
dec
jns
xor
push
imul
inc
xor
inc
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
je
outs
fs
outs
outs
add
arpl
je
outs
outs
add
je
add
outs
pop
cmp
xor
addr16
gs
push
jns
push
inc
arpl
dec
push
xor
add
aaa
dec
dec
ja
js
cmp
arpl
jb
jns
add
js
push
imul
inc
xor
xor
xor
jb
push
gs
xor
ins
inc
inc
jbe
dec
dec
xor
dec
inc
push
push
dec
add
inc
push
ss
arpl
dec
inc
inc
xor
dec
xor
ins
push
xor
jb
jns
inc
jno
aaa
dec
jno
bound
push
push
push
add
jb
ins
inc
jb
popa
jns
je
jb
bound
add
arpl
add
add
outs
jo
jb
jns
outs
outs
add
je
dec
jno
popaw
inc
push
jno
push
dec
dec
add
ss
push
cmp
gs
dec
xor
add
push
inc
popa
fs
imul
jp
inc
inc
push
push
xor
popa
imul
dec
jno
dec
ins
aaa
inc
aaa
jo
inc
dec
cmp
pop
xor
pop
dec
popa
push
aaa
xor
inc
xor
imul
jbe
outs
inc
inc
outs
jb
jp
ins
add
ja
js
dec
push
inc
jo
push
dec
add
dec
imul
ins
outs
dec
outs
ins
add
dec
inc
dec
jbe
ja
data16
js
dec
inc
inc
imul
gs
push
xor
inc
push
jp
xor
je
addr16
imul
push
xor
jo
jbe
popa
push
add
cmp
push
pop
inc
js
add
dec
ins
push
outs
inc
push
gs
add
inc
dec
popa
arpl
push
push
inc
add
jns
popa
ins
jne
push
popa
imul
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
addr16
dec
gs
jno
dec
xor
jbe
pop
add
xor
push
inc
dec
dec
dec
add
push
xor
cmp
add
dec
js
ja
inc
push
xor
pop
add
jno
inc
xor
outs
aaa
dec
add
xor
jno
ja
inc
outs
data16
xor
dec
outs
imul
sub
lods
loop
(bad)
loop
lods
loop
lods
loop
mov
sub
lods
loop
lods
loop
lods
loop
mov
sub
(bad)
loop
stos
loop
(bad)
loop
mov
sub
stos
loop
lods
loop
lods
loop
lods
loop
mov
or
loop
scas
loop
lods
loop
stos
loop
mov
sub
add
je
dec
gs
popa
addr16
sub
scas
loop
(bad)
loop
scas
loop
mov
sub
scas
loop
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
mov
sub
(bad)
loop
stos
loop
lods
loop
mov
sub
stos
loop
lods
loop
lods
loop
mov
sub
scas
loop
lods
loop
scas
loop
stos
loop
(bad)
loop
scas
add
jae
popa
addr16
outs
js
push
push
imul
jae
ins
je
loop
scas
loop
lods
loop
lods
loop
lods
loop
mov
sub
mov
sub
loop
(bad)
loop
stos
loop
scas
loop
scas
loop
stos
loop
lods
loop
mov
or
scas
loop
mov
or
stos
loop
lods
loop
mov
or
loop
lods
loop
mov
sub
scas
loop
scas
loop
stos
loop
lods
loop
scas
add
je
jns
gs
or
lods
loop
stos
loop
lods
loop
scas
loop
(bad)
loop
mov
or
mov
or
stos
loop
scas
loop
mov
or
loop
scas
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
lods
loop
mov
sub
loop
stos
loop
scas
loop
(bad)
loop
mov
sub
or
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
(bad)
loop
mov
or
loop
lods
loop
scas
loop
mov
or
mov
sub
stos
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
scas
add
je
jb
jo
jb
jns
loop
(bad)
loop
lods
loop
mov
sub
loop
lods
loop
stos
loop
mov
sub
stos
loop
stos
loop
scas
loop
lods
loop
mov
sub
mov
sub
stos
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
mov
or
loop
mov
sub
gs
popa
ins
jne
add
sub
stos
loop
lods
loop
scas
loop
mov
sub
mov
sub
lods
loop
(bad)
loop
mov
sub
loop
lods
loop
lods
loop
mov
sub
loop
mov
sub
lods
loop
lods
loop
stos
loop
lods
loop
stos
loop
mov
or
lods
loop
lods
loop
scas
add
je
popa
ins
jne
add
sub
stos
loop
scas
loop
mov
sub
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
stos
loop
lods
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
or
scas
loop
stos
loop
mov
sub
loop
mov
or
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
add
je
gs
outs
fs
loop
lods
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
scas
loop
scas
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
mov
sub
lods
loop
stos
loop
stos
loop
lods
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
stos
loop
scas
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
mov
sub
scas
add
pop
inc
jno
popa
ins
imul
sub
lods
loop
stos
loop
scas
loop
lods
loop
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
scas
loop
scas
loop
scas
loop
stos
loop
stos
loop
scas
loop
stos
loop
mov
or
lods
loop
scas
loop
(bad)
loop
stos
loop
(bad)
loop
scas
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
(bad)
loop
stos
loop
lods
loop
lods
loop
stos
loop
scas
loop
scas
loop
(bad)
loop
scas
add
je
outs
fs
popa
jae
add
jbe
imul
sub
scas
loop
lods
loop
stos
loop
mov
sub
stos
loop
(bad)
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
mov
sub
mov
sub
scas
loop
mov
sub
stos
loop
lods
loop
stos
loop
mov
sub
lods
loop
(bad)
loop
lods
loop
stos
loop
stos
loop
scas
add
dec
dec
inc
push
ss
imul
ja
inc
js
je
inc
ss
inc
dec
cmp
add
inc
ja
dec
pop
cmp
jae
inc
imul
gs
jae
inc
cmp
xor
push
pop
xor
jne
add
dec
jno
cmp
ja
jae
jo
inc
imul
add
xor
bound
jns
push
dec
inc
jns
inc
add
xor
cmp
jo
push
gs
dec
push
add
push
dec
aaa
dec
pop
jo
jp
xor
bound
xor
js
outs
dec
imul
outs
push
push
bound
inc
gs
jbe
ja
push
xor
inc
add
jbe
xor
je
xor
inc
dec
jno
ins
push
ins
inc
push
xor
dec
xor
ins
jae
push
imul
push
ins
cmp
push
xor
xor
xor
gs
push
dec
add
dec
jb
inc
jne
arpl
imul
popa
add
addr16
inc
xor
push
data16
inc
bound
jae
dec
outs
ins
dec
addr16
jbe
xor
inc
xor
add
push
popa
pop
popa
cmp
jbe
ss
pop
imul
inc
jp
pop
xor
dec
pop
xor
jne
pop
add
outs
push
dec
ss
push
jae
imul
add
push
xor
ja
jo
push
dec
inc
add
je
jns
popa
inc
xor
jb
ins
dec
imul
ins
aaa
je
add
dec
inc
inc
jp
push
xor
add
jp
dec
fs
push
jb
inc
xor
dec
inc
add
ja
jb
aaa
xor
pop
dec
ss
bound
inc
xor
push
cmp
imul
dec
ins
ins
add
imul
outs
dec
push
xor
outs
js
aaa
jae
arpl
dec
fs
arpl
pop
dec
push
je
jne
imul
cmp
xor
dec
dec
xor
add
push
xor
jb
add
gs
jns
dec
push
xor
aaa
add
pop
jo
xor
push
inc
dec
pop
dec
inc
popa
xor
push
pop
pop
arpl
dec
arpl
jb
fs
inc
pop
dec
xor
dec
add
jp
inc
push
jbe
push
outs
outs
add
pop
popa
inc
inc
inc
xor
push
aaa
dec
push
xor
add
aaa
dec
xor
imul
dec
bound
pop
dec
add
imul
dec
xor
push
inc
ins
xor
cmp
fs
add
popa
xor
push
push
pop
jb
pop
cmp
js
jns
add
fs
jo
gs
je
jp
dec
imul
fs
je
xor
inc
push
inc
imul
ja
je
bound
dec
pop
ins
push
imul
cmp
outs
arpl
dec
imul
outs
xor
ins
js
push
inc
jbe
add
popa
imul
ss
jno
add
push
dec
push
outs
imul
push
js
ss
pop
push
arpl
outs
jne
pop
dec
pop
add
dec
dec
dec
ss
xor
xor
cmp
xor
xor
dec
jns
bound
push
push
outs
pop
xor
inc
xor
add
push
dec
jne
jae
push
popa
inc
inc
inc
pop
js
jns
xor
jae
push
inc
arpl
xor
push
ja
gs
popa
fs
arpl
js
pop
pop
outs
jo
jns
je
pop
ins
add
xor
je
ins
je
fs
arpl
ja
push
xor
push
add
jne
pop
addr16
dec
push
push
xor
jno
xor
aaa
popa
dec
jns
outs
push
jb
add
gs
fs
addr16
pop
inc
xor
add
dec
jae
dec
xor
dec
add
push
inc
pop
imul
imul
push
ins
add
push
dec
dec
jbe
cmp
add
dec
js
xor
jne
jp
dec
inc
inc
inc
add
dec
xor
inc
js
xor
add
dec
dec
push
gs
inc
jne
jp
add
inc
push
push
push
inc
pop
js
inc
bound
cmp
pop
xor
gs
dec
push
push
add
pop
dec
xor
push
dec
inc
ins
add
push
outs
push
dec
dec
outs
jne
xor
dec
pop
add
dec
pop
dec
fs
pop
inc
xor
fs
jno
dec
xor
dec
aaa
imul
inc
add
inc
push
imul
imul
push
ja
ins
jns
jns
jbe
inc
xor
add
ins
pop
data16
dec
aaa
jno
ins
jno
aaa
dec
outs
inc
fs
push
pop
add
push
ins
outs
cmp
cmp
push
push
pop
push
arpl
push
jns
xor
inc
cmp
ja
add
ins
jae
push
ja
outs
ja
dec
push
inc
xor
push
dec
push
add
xor
push
popa
dec
aaa
xor
push
xor
inc
ins
inc
jb
gs
jp
dec
jbe
pop
jbe
add
inc
ja
dec
dec
push
cmp
popa
dec
push
gs
add
push
pop
outs
push
outs
ins
je
dec
inc
pop
inc
dec
push
add
inc
jo
push
jne
dec
ss
aaa
aaa
je
aaa
cmp
push
fs
xor
push
arpl
inc
bound
push
aaa
push
add
push
imul
jae
popa
aaa
add
ins
jb
push
ins
ins
ss
dec
jp
js
push
inc
imul
xor
push
pop
fs
xor
outs
add
xor
push
dec
jno
xor
imul
jb
add
inc
dec
inc
dec
xor
outs
jno
xor
push
push
dec
inc
popa
arpl
pop
pop
push
add
fs
aaa
cmp
push
dec
outs
inc
inc
jb
add
xor
xor
push
jae
dec
ss
outs
inc
add
imul
bound
xor
dec
add
ss
xor
inc
outs
js
dec
push
data16
add
inc
dec
xor
ss
dec
inc
data16
jne
cmp
xor
pop
xor
js
gs
js
add
dec
je
push
cmp
xor
push
dec
gs
ins
addr16
push
inc
outs
inc
push
xor
arpl
push
ins
push
js
dec
gs
inc
xor
dec
jno
addr16
add
xor
cmp
dec
dec
push
cmp
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
inc
add
jns
jo
je
outs
add
add
outs
add
data16
jb
ins
add
add
add
add
add
popa
add
add
add
jae
add
data16
add
add
ins
add
add
add
imul
add
inc
add
add
add
imul
add
add
add
add
add
add
push
add
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
dec
and
dec
js
pop
dec
sub
dec
cmp
dec
xor
dec
add
jge
push
dec
dec
add
dec
adc
dec
sbb
dec
sbb
jnp
sbb
and
dec
ins
dec
ins
dec
adc
dec
addr16
jnp
dec
dec
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
inc
add
je
inc
add
add
jne
je
imul
inc
add
jae
add
bound
ins
add
add
inc
add
je
dec
add
push
add
je
add
dec
jbe
or
dec
or
dec
or
dec
pop
dec
or
dec
cmp
dec
sub
jl
push
dec
push
dec
arpl
dec
sub
dec
inc
dec
dec
dec
jbe
sbb
dec
dec
dec
add
dec
push
dec
cmp
dec
adc
dec
adc
dec
adc
dec
inc
dec
jge
pop
dec
addr16
push
dec
dec
dec
pop
dec
inc
dec
sbb
dec
or
dec
ja
je
add
dec
inc
dec
or
dec
dec
dec
inc
dec
and
pusha
dec
cs
or
dec
jnp
aaa
dec
dec
dec
adc
cmp
xor
dec
imul
sbb
xor
dec
cmovle
dec
ja
arpl
dec
xor
dec
jp
cmovle
dec
dec
dec
jb
pop
dec
sbb
dec
push
dec
sbb
xor
dec
pop
dec
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
dec
add
popa
add
add
add
je
add
jns
add
push
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
jbe
outs
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
jns
ins
add
add
add
arpl
inc
add
add
jb
imul
ins
add
pop
inc
add
add
je
add
add
jb
jns
jo
je
outs
add
add
inc
add
add
add
inc
add
or
popa
add
add
add
add
jg
rol
aad
mov
movs
cwde
hlt
add
mov
pop
push
sbb
mov
add
add
pop
add
push
add
sbb
sub
pop
sbb
sbb
sbb
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
sbb
add
sbb
or
add
sbb
add
sbb
sbb
add
add
add
pop
add
and
add
push
push
add
add
sbb
pop
push
adc
adc
or
add
push
push
sbb
sbb
pop
add
sbb
sbb
adc
sbb
and
add
add
add
add
add
pop
add
add
sbb
add
push
sbb
push
add
sbb
push
add
push
add
add
and
and
adc
push
pop
add
adc
adc
sbb
sbb
sbb
sub
add
sbb
add
sub
sbb
sbb
add
add
push
or
add
cmp
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
jl
pop
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
